sbb
add
mov
pushf
mov
add
loopne
adc
daa
sbb
mov
enter
sar
mov
mov
xchg
stos
dec
inc
mov
jb
xlat
dec
ja
or
push
bnd
mov
dec
push
scas
clc
ss
ja
jl
push
mov
in
adc
call
pop
iret
adc
mov
jmp
and
xor
mov
out
fidivl
push
dec
push
imul
cltd
int3
jnp
in
jmp
inc
inc
stos
jno
out
imul
adc
sti
cmp
inc
sbb
fstpt
in
pop
insb
imul
dec
push
ss
lret
xchg
daa
in
repnz
mov
lcall
ret
dec
repz
icebp
es
aad
lahf
movsl
dec
push
dec
add
imul
test
jnp
adc
mov
stos
in
sub
jno
add
sarl
lret
rcll
mov
pop
push
jmp
xor
in
ret
mov
pop
js
stos
mov
add
movsb
leave
mov
and
adc
stc
cld
out
cwtl
pop
xor
enter
dec
mulb
in
jne
je
arpl
test
adc
nop
imul
xor
clc
ret
jle
shl
stos
sub
out
insl
and
insl
xor
ljmp
xlat
lret
sub
insl
mov
and
adc
mov
or
mov
insl
jns
jo
pop
test
mov
sbb
xlat
out
pop
dec
jle
mov
sub
sbb
push
cs
adc
outsb
push
jl
adc
inc
data16
cmpsb
xorl
jbe
sbb
sub
xchg
mov
imul
inc
rolb
xor
mov
add
sbb
sbb
pop
xor
mov
push
xchg
sbb
cmp
xchg
lock
and
add
sbb
sub
inc
xor
sub
and
repz
push
movl
aas
std
fidivrl
jnp
dec
in
test
scas
push
add
mov
repnz
orl
in
sbb
dec
mov
push
je
pop
push
rorl
outsl
call
cltd
ljmp
loop
gs
sti
aad
mov
popf
or
and
aad
in
or
jns
xor
cli
mov
adc
rcrb
adcl
popf
xchg
jns,pt
xchg
xor
frstor
sbb
xor
stos
jmp
fnstenv
push
in
in
cmpsb
mov
test
sbb
fs
inc
outsl
das
mov
fwait
stos
es
cs
test
test
jns
mov
adc
scas
pop
lret
lock
pop
xchg
dec
cmp
mov
stc
in
out
push
rcll
jbe
mov
jg
je
mov
lds
sbb
add
sbb
loope
jo
pop
in
jnp
pushf
insb
int3
push
cltd
or
imul
xlat
inc
movsb
imul
mov
ja
mov
popa
pusha
fimuls
les
sub
add
ret
aas
mov
mov
mov
out
lea
cmp
test
in
inc
pop
and
negb
ja
in
test
mov
or
mov
inc
dec
jbe
mov
xchg
push
popf
jmp
dec
movsl
sub
ss
test
jle
cltd
les
das
fimull
adc
outsb
cmp
dec
lret
xchg
in
pop
iret
cmpsl
sub
sbb
in
push
ret
adc
jb
fstpl
enter
subb
sub
mov
jnp
insl
inc
loope
andb
shlb
push
pushf
push
jl
ja
orps
enter
bound
arpl
xor
mov
pop
sbb
adcb
mov
addr16
lds
hlt
dec
hlt
xchg
lret
pushf
cltd
fisubl
lret
mov
mov
pop
or
mov
push
sarb
mov
lret
jo
sbb
mov
in
sbb
adc
jo
outsb
jp
in
jbe
cmpsb
xchg
aad
cmp
int3
or
jno
mov
inc
cmp
push
sbb
adc
push
aaa
les
shll
pop
mov
mov
cmp
in
inc
push
dec
cli
mov
lret
jecxz
fidivrl
jns
clc
push
cmpsb
xchg
cmpsb
or
sbb
imul
mov
sub
std
seta
fildll
aas
aam
cmp
adc
mov
popa
adc
lcall
inc
dec
add
sbb
xlat
lock
xor
and
and
jo
pop
mov
sbb
imulb
inc
sub
js
or
adc
mov
lcall
push
in
lahf
pusha
lcall
lods
or
dec
jno
and
movsl
daa
xchg
lds
jo
mov
adc
xor
xor
add
leave
xchg
sbb
cmp
stc
test
inc
fwait
and
in
or
cld
cmp
pop
mov
add
dec
pushf
or
sub
lock
sub
sti
arpl
add
push
adc
mov
inc
shll
stc
push
add
sbbb
orb
ret
add
ficomps
mov
imul
popa
lds
sbb
lock
out
pop
mov
sbb
add
xor
inc
ljmp
pop
and
out
push
repz
es
loop
jl
or
xor
loop
scas
sub
push
adc
data16
adc
clc
inc
sub
es
or
push
sarl
std
add
in
aaa
mov
sti
dec
inc
mov
lcall
mov
ret
adc
sbb
sub
addr16
out
jle
insb
loop
outsb
bnd
fdivr
mov
pusha
or
mov
push
sub
dec
out
add
fucomi
sarb
sbb
xchg
mov
outsl
or
outsl
jno
idivb
sub
jmp
adc
push
test
jns
lods
gs
and
push
nop
or
sbb
inc
sbb
push
inc
scas
mov
and
cmpl
and
cltd
cwtl
push
cmpsb
xor
pop
fmull
shll
or
sub
push
cmp
xlat
out
sub
mov
fsubs
adcb
and
rcrl
cmpsb
sub
adc
and
mov
ds
or
cmp
fsubp
lcall
jb
push
sbb
popf
ret
pop
je
sbb
sbb
or
sbb
shlb
fistpll
mov
mov
shlb
rcrb
pop
xor
push
pop
add
inc
aaa
cmpb
xor
inc
scas
push
or
div
push
lret
gs
outsb
jo
hlt
fsubrp
mov
aad
shl
out
adc
sahf
aas
jbe
mov
jmp
lcall
mov
cwtl
es
or
lahf
cmp
arpl
addb
arpl
mov
outsl
lcall
jecxz
or
pop
xchg
and
insl
jp
data16
mov
addr16
sub
jne
dec
rolb
sub
jg
xorb
sbb
and
push
ja
cs
lock
add
or
in
aas
sbb
jno
dec
push
ds
orb
xchg
insl
xor
fwait
lods
sub
inc
xchg
jno
jecxz
and
hlt
imul
sub
cmp
xchg
hlt
mov
fstps
inc
jmp
movsb
push
jmp
mov
xchg
mov
nop
fists
std
lcall
jnp
aam
aas
lret
cld
mov
mov
inc
mov
inc
sub
inc
inc
fadd
stc
jnp
jl
stos
xchg
fwait
in
test
call
mov
xchg
lds
push
es
enter
mov
jo
xchg
push
cmp
add
es
xchg
repz
daa
inc
mov
xor
rorb
dec
xchg
mov
outsl
inc
xchg
mov
ja
iret
aad
rcrb
push
inc
pop
out
pop
cltd
pop
icebp
ljmp
or
xchg
mov
xchg
pushf
lahf
jnp
pop
push
data16
cmc
xchg
mov
pop
pop
push
fcomps
sbb
jo
dec
vminsd
or
xchg
ja
jbe
mov
and
scas
ljmp
imul
sahf
pop
sbbl
inc
xchg
das
sub
adcl
es
aaa
pop
add
lcall
xor
stc
jo
mov
arpl
sbb
subl
mov
sub
adc
loop
faddl
cld
jae
rclb
aam
sub
mov
pop
pop
xor
lock
aaa
or
cmp
push
mov
popf
adc
lea
sub
sub
cli
aas
xchg
and
insl
fidivs
roll
ljmp
out
push
xor
and
fistps
inc
xchg
sbb
add
cmp
push
stc
cmp
xchg
fs
adc
lds
ja
xlat
jmp
push
icebp
into
mov
fisubrl
enter
jecxz
jbe
xorb
dec
xchg
outsb
lock
sbb
pop
int3
jle
jl
or
popa
add
popa
lea
dec
sbb
lock
leave
imul
mov
mov
out
mov
and
test
data16
mov
cmp
cli
in
lcall
dec
lods
xchg
dec
adc
cmp
pop
inc
push
neg
aas
lds
add
out
fcomps
inc
subb
fadd
mov
mov
loope
shrb
cmp
and
dec
pop
jb
pop
pop
imul
jg
mov
pop
pop
into
ss
push
pop
cmpsb
mov
mov
jo
fidivl
push
popa
adc
ret
loopne
and
xor
div
loope
sub
loope
cmp
loope
sbb
or
mov
pop
push
daa
xchg
inc
ljmp
pop
insl
fists
mov
sub
shl
add
call
jae
push
shrb
push
mov
mov
das
xor
xlat
or
sbb
enter
inc
lds
and
jns
dec
mov
pop
jp
xor
fwait
test
lcall
or
popa
pop
add
pop
or
sub
mov
lods
mov
rcrb
ss
cmpsb
cmp
mov
rcrb
roll
cmp
mov
mov
stos
std
pop
add
aaa
lret
imul
sbb
push
xchg
xchg
push
out
xor
int
xchg
sub
xchg
pop
pop
mov
jae
mov
cmp
mov
out
dec
xchg
xchg
loop
sarl
inc
sub
addr16
fildll
and
cmp
cwtl
and
loop
push
mov
std
out
xor
outsl
fimuls
out
push
add
inc
fcomp
push
loope
xlat
imul
leave
and
xlat
popf
dec
add
les
out
out
jl
or
mov
mov
ret
dec
ret
into
xchg
in
add
or
jae
fstpl
es
cld
mov
mov
push
test
outsl
fnstsw
xorl
sub
xchg
jo
push
mov
mov
test
orb
pop
imul
mov
jp
inc
daa
mov
adc
lock
sub
jecxz
push
cs
rolb
decb
aaa
je
movsb
sbbb
in
arpl
negl
mov
shlb
testb
jmp
das
or
cmpsl
pop
jecxz
ret
pop
pop
xor
aam
call
fwait
in
cmp
mov
cmp
and
mov
frstor
fnstsw
push
int
outsb
repnz
and
jnp
or
pop
cld
fists
into
test
rorb
sahf
xchg
inc
push
jne
std
jns
test
push
pop
adc
out
popf
das
sti
push
inc
push
cmp
js
repz
scas
sahf
inc
test
in
in
mov
inc
lods
push
mov
mov
sbb
xchg
mov
xchg
push
mov
xor
jmp
sarl
push
xor
mov
out
mov
sbb
lea
jnp
push
push
inc
out
jno
or
mov
sub
mov
mov
inc
pop
lods
xor
mov
dec
rol
mov
flds
jns
mov
jge
push
inc
out
xor
aas
jb
inc
cwtl
pop
push
test
adc
sbb
ljmp
outsl
lods
sbb
inc
pop
dec
test
mov
fcompl
sbb
sbb
daa
adc
mov
ffree
xchg
orl
incb
out
cmp
leave
push
mov
sbb
dec
fidivrs
int
push
stos
js
mov
pop
je
mov
sbb
mov
popa
mov
movsb
arpl
stos
and
sub
fwait
jnp
sbb
or
add
and
add
ja
movsb
addr16
mov
mov
mov
pusha
dec
inc
insl
sti
lcall
inc
ds
test
push
inc
mov
aaa
mov
pop
xchg
mov
lock
dec
arpl
leave
incb
jg
mov
pop
adc
xchg
pushf
mov
xor
fimull
mov
xchg
ficoms
push
ds
and
dec
aam
nop
sub
push
popa
mov
adc
jmp
xor
cmc
mov
aad
or
jnp
lock
mov
push
js
daa
scas
adc
enter
adc
or
xchg
push
pop
sbb
xchg
ds
iret
mov
outsl
lods
dec
stos
mov
pop
cmpsl
shlb
std
adc
xor
xor
fcompl
aaa
mov
in
es
repz
loop
lcall
js
fcmovu
jnp
jg
leave
pop
insl
je
mov
scas
xor
outsb
inc
mov
push
test
pop
aas
adc
loop
pop
add
ds
and
dec
sub
mov
pop
test
insb
repnz
jnp
jb
fnstcw
or
lret
xchg
rorb
lret
arpl
mov
mov
pop
pop
mov
mov
mov
add
call
in
fidivl
pop
rcll
and
adc
les
push
icebp
mov
rolb
shll
and
imul
mov
movsb
and
cmpsl
in
aam
rorb
sbb
subl
testb
mov
inc
negl
xchg
add
xchg
push
cmp
or
jle
mov
cli
pop
loopne
add
sub
in
xor
add
mov
inc
rcrl
stc
pushf
mov
mov
pusha
cmp
dec
test
xor
mov
cwtl
pop
pop
mov
es
and
inc
decl
add
shld
inc
pop
mov
mov
pop
std
scas
add
mov
cmpb
xchg
daa
int
gs
jl
mov
sub
rcrl
mov
leave
adc
sahf
push
cmp
sbb
addl
jge
mov
inc
stos
xchg
out
add
ret
sbb
lods
out
dec
xor
out
cli
cld
push
movsb
aas
pop
xchg
and
xor
jg
jo
push
dec
test
repnz
scas
std
addr16
dec
and
out
stos
fsts
mov
fdivrs
ja
leave
clc
aas
jb
mov
clc
popa
pop
fstpt
test
cli
and
cld
addb
fwait
test
pop
gs
push
lods
cwtl
inc
pop
pop
mov
in
stos
pop
in
dec
sub
add
ss
mov
ret
add
push
dec
mov
daa
out
xchg
xchg
pop
pop
outsb
add
jbe
mov
and
cmpsb
enter
fwait
subl
add
jecxz
inc
lahf
loop
je
push
incb
push
mov
lods
mov
les
push
mov
inc
and
inc
fwait
jae
sub
sbb
jb
sbb
adc
adc
divb
out
lods
cli
push
sti
pop
push
or
or
stos
mov
xchg
xor
aaa
pop
dec
inc
out
repz
repnz
outsl
xchg
mov
cmp
adc
lahf
adc
xchg
push
mov
cmp
push
hlt
push
mov
mov
sbb
out
dec
jl
pop
ljmp
shrl
lcall
and
fadds
mov
mov
push
cmc
mov
inc
in
enter
push
xchg
gs
mov
mov
sub
mov
js
sbb
mov
ja
orl
mov
cmc
aam
in
enter
xchg
sbb
ss
fwait
mov
add
mov
imul
dec
pushf
movsb
xchg
rorb
add
dec
out
inc
and
push
mov
imul
lcall
stc
push
push
sub
mov
or
orl
xchg
xor
sti
cmp
push
mov
jp
xor
jnp
cmp
and
jo
lds
sbb
and
leave
xchg
es
xlat
xchg
mov
popa
popf
sub
aam
roll
popf
rorl
cmp
jo
push
mov
iret
lret
orl
loopne
out
xchg
jno
mov
cmp
adc
fsubs
dec
fists
ret
ds
mov
jo
out
xor
adc
ss
sbb
or
jnp
jns
insb
push
stos
adc
sbb
and
cwtl
fstpt
ror
mov
arpl
leave
scas
stos
arpl
xchg
xlat
inc
int
xchg
fildll
mov
icebp
add
inc
ficoml
mov
daa
xor
cld
test
nop
and
push
and
divl
or
arpl
xlat
sub
inc
inc
xchg
add
xor
and
mov
aas
sub
ss
pop
mov
jp
mov
fists
dec
call
popa
lret
inc
cwtl
or
popa
push
movsl
stc
xor
adc
push
jae
xor
jne
push
rcrb
dec
mov
xchg
fidivrs
das
test
push
pop
mov
popa
cmpsl
xchg
or
pop
cmp
pushf
mov
in
pop
ljmp
enter
lret
cwtl
pop
fiaddl
js
adc
pop
adc
pop
jb
push
clc
and
shrl
inc
in
cwtl
or
repnz
addr16
insl
je
dec
outsl
jnp
mov
sbb
add
and
shll
push
stos
aad
push
jo
lahf
mov
dec
dec
pop
mov
pop
imul
lcall
add
push
call
pop
add
adc
xor
imul
jne
cwtl
mov
inc
lds
and
mov
jle
and
cmpsb
sahf
push
xor
cmc
mov
orb
notb
arpl
out
enter
or
dec
mov
mov
lea
in
mov
jb
fwait
xor
addr16
add
dec
adc
mov
ss
stos
adc
xchg
addr16
jnp
es
fs
mov
adc
movsb
and
cld
push
and
xor
or
mov
repz
cmp
and
in
adc
loopne
arpl
popa
pop
mov
jns
aad
repnz
cmpsb
and
push
ret
pop
ds
fildll
leave
mov
mov
aaa
lret
jecxz
sub
nop
inc
push
mov
or
jp
nop
std
js
xchg
addr16
clc
lahf
stos
arpl
add
fsubl
jp
sub
mov
je
iret
dec
aas
popf
dec
pop
push
mov
mov
jno
scas
sub
sub
adcb
xchg
xchg
int
jge
push
or
sub
xchg
sarb
imul
pop
pop
movsb
stc
dec
sub
cmp
in
xchg
hlt
jle
xor
pop
fisubs
inc
cmp
xorl
cmp
bound
cmp
stos
fildll
stc
or
in
pop
cwtl
mov
ja
adc
xchg
fmuls
bound
mov
add
das
push
sahf
xchg
jmp
jle
and
dec
dec
xchg
insl
cwtl
mulb
inc
xchg
into
int3
pop
and
jl
jmp
hlt
xlat
xor
setb
test
cli
push
dec
dec
js
dec
cs
outsb
outsl
loop
xchg
sbb
dec
outsl
les
push
mov
nop
mov
sbb
outsl
stos
jg
jl
enter
imul
xor
adc
stos
je
pop
mov
xor
mov
inc
fidivl
mov
adc
push
arpl
daa
sbbl
and
sahf
or
or
cmp
jne
mov
sti
fs
mov
add
add
mov
push
popf
out
call
jns
stc
mov
adc
xchg
enter
out
shrl
jo
test
mov
imulb
pop
xlat
xor
or
push
andb
mov
idivb
es
dec
call
mov
es
jecxz
push
or
cmc
ret
jb
lret
ds
jge
popl
popf
lods
pop
fiaddl
dec
adc
cltd
movsl
and
lcall
andl
or
lds
test
jmp
xchg
decl
cmpsl
xchg
mov
dec
dec
mov
das
test
add
lea
rol
pop
mov
push
add
mov
sub
fcompl
shll
pop
icebp
ljmp
adc
dec
mov
adc
xor
dec
jmp
add
std
inc
icebp
sbb
lret
fldl
js
rcr
dec
shlb
pop
pop
or
sbb
inc
xchg
dec
cs
add
push
push
or
xor
js
xchg
fwait
dec
adc
pop
pop
push
mov
mov
cmpl
or
jne
setne
mov
or
mov
push
ficoml
mov
leave
mov
cmpsl
xor
push
sbb
ljmp
mov
test
lcall
std
scas
jl
test
dec
add
mov
testl
fwait
sbb
nop
repz
clc
jle
xchg
inc
mov
arpl
pop
xor
push
xor
mov
jl
scas
popf
adc
sahf
push
les
out
jg
xchg
fsts
xchg
push
jl
mov
addb
jge
mov
push
xchg
aam
aam
cld
add
or
imul
lods
xor
push
add
mov
fmuls
insb
inc
stos
adc
daa
test
mov
mov
test
xchg
mov
sbb
out
adc
fnstcw
leave
das
sahf
sub
mov
icebp
cmp
daa
adc
fistpl
das
adc
push
mov
mov
pop
pop
jl
leave
subb
repz
movsl
test
arpl
movsb
sbb
push
test
stc
pop
enter
mov
jae
dec
out
nop
and
test
imul
mov
sarl
rclb
clc
sbb
pxor
inc
les
pop
in
and
lcall
adc
lret
cli
xor
js
mov
adc
rcrb
addr16
sub
and
ret
sub
cltd
rcrb
jge
push
mov
jge
xor
jb
inc
xchg
sub
cltd
in
dec
cmp
adcl
fists
andb
cmp
ret
mov
out
xlat
ja
dec
push
ljmp
dec
mov
sbb
popf
push
jbe
cmpsb
xor
sub
cwtl
push
mov
add
fs
iret
fwait
daa
xor
push
xchg
ret
inc
mov
in
into
jmp
sbb
jle
lret
xor
jg
sbb
dec
ja
mov
sub
pop
mov
adc
out
mov
xchg
and
hlt
mov
cltd
ljmp
mov
or
inc
test
sahf
lret
lcall
pop
test
cmp
test
mov
pop
fstl
jae
sbb
aaa
mov
push
into
les
jmp
sub
mull
xor
dec
lock
shlb
mov
and
cmp
sub
add
mov
dec
bndstx
push
lds
sarl
add
mov
lcall
lea
mov
sbb
aas
or
lea
lods
sub
js
pop
stc
cld
popa
jle
cld
call
and
in
adcl
loope
out
dec
fidivrl
arpl
decl
xchg
stc
enter
cs
inc
in
push
push
push
icebp
jge
inc
cmpsb
xor
aaa
and
das
test
cmp
test
cmp
dec
or
push
push
popa
shr
ja
popf
enterw
fmul
incl
adc
push
lods
pop
into
call
xchg
rorb
or
sbb
push
push
xchg
pop
adc
jecxz
push
inc
popf
adc
sub
repnz
ja
inc
mov
pop
mov
push
movsb
pop
xchg
push
mov
adc
mov
stos
sahf
fldl
cmp
adc
add
pop
out
flds
sbb
add
or
push
jb
jmp
test
mov
scas
cmp
cs
mov
and
jns
sbb
push
inc
adc
pushf
mov
lods
and
out
and
mov
or
cltd
push
out
test
fistpl
xchg
fbld
pop
mov
adc
in
push
loopne
mov
mov
cmp
outsb
sarb
dec
mov
adc
or
mov
cmp
insl
dec
and
push
iret
pop
repz
mul
insb
cmp
sub
call
sub
gs
cmc
call
fidivrl
lods
sub
xchg
std
mov
push
iret
xchg
cmc
and
dec
notb
jo
iret
and
cmp
adc
pushf
lods
loope
mov
scas
sub
mov
pop
xor
in
xor
cmc
add
ja
push
sbb
fwait
lock
dec
popa
es
and
mov
test
jnp
or
xchg
stc
pushf
xchg
lods
nop
sti
push
mov
sbb
dec
push
mov
divl
cltd
pop
fcom
xor
fwait
lods
decb
shlb
inc
pop
sahf
sub
push
into
repnz
cmpsl
and
in
out
cld
push
xor
bound
outsl
pop
cmp
xor
pushf
cltd
in
add
rep
test
imulb
inc
lods
loopne
ret
add
adc
adc
loope
dec
adc
into
aas
scas
push
outsl
mov
jp
or
lods
mov
push
mov
push
data16
bound
es
movsl
push
stos
mov
pop
jecxz
dec
dec
lahf
adc
xor
popf
mov
loopne
push
out
ret
sub
mov
or
ds
ja
ja
jp
mov
and
push
dec
and
adc
sbb
jge
jecxz
imul
add
fchs
adc
fisttpll
ret
xlat
outsb
jle
cmp
cld
or
arpl
je
jg
fcmovnb
std
mov
adc
mov
fcoms
inc
loope
mov
pop
shlb
mov
mov
and
pushf
sub
in
lret
sub
push
inc
dec
arpl
clc
mov
loope
lcall
mov
fnstsw
enter
push
or
pop
stos
xchg
test
add
imul
frstor
iret
add
iret
cld
jb
outsl
xchg
movsl
into
ror
push
xorb
mov
dec
adc
sub
push
mov
scas
mov
xchg
ds
push
cmp
sub
xor
in
mov
loop
inc
push
push
sub
mov
jl
lds
pop
xchg
mov
sti
jns
daa
or
cs
fimuls
shlb
inc
filds
or
pop
push
xchg
pop
pop
sbbl
movsl
daa
test
push
into
mov
add
ret
xchg
jecxz
in
mov
mov
push
xor
std
lock
insl
or
in
or
mov
sbb
test
mov
mov
cmp
sub
lea
jbe
fninit
jae
push
imul
repz
mov
mov
cmc
mov
cmp
mov
adc
xchg
xor
repz
adc
bound
out
jno
in
inc
movsb
xchg
outsl
repnz
fisttpll
scas
leave
inc
movsb
xchg
cmp
sbb
bound
xchg
xchg
pop
je
push
imul
inc
adc
jp
cmp
mov
sti
mov
fadd
arpl
ret
or
cli
cltd
add
xchg
or
mov
jg
lcall
sbb
pushl
or
push
push
aas
ret
and
mov
gs
loope
mov
dec
inc
mov
lods
dec
inc
fldt
jge
gs
out
xor
jns
xor
or
jo
pop
lea
xor
ficoml
inc
mov
pop
xor
dec
int
xchg
out
jp
mov
mov
cmp
stos
jle
mov
pop
push
lret
fwait
add
roll
stc
pusha
rolb
inc
insb
push
nop
pusha
test
mov
jg
fisubrs
jb
adc
xor
gs
jmp
outsb
fwait
adc
inc
add
and
loope
test
pop
mov
lock
cmp
xchg
cmc
adc
out
push
scas
push
mov
sub
lahf
ja
sbb
fs
les
cmc
sbb
mov
repz
nop
mov
dec
je
iret
into
sub
in
xchg
cld
scas
pop
push
sbb
movb
mov
mov
jge
loopne
shrl
in
push
imul
aaa
clc
addl
jnp
mov
mov
pop
stc
aad
mov
in
sbb
dec
dec
lds
ja
imul
pop
out
inc
sbb
and
cmp
das
push
sub
das
bound
mov
xor
clc
mov
lret
pop
das
push
mov
and
movsb
cmp
ret
jg
mov
icebp
pusha
inc
out
movsl
das
hlt
imul
clc
lcall
inc
gs
sub
dec
sub
inc
add
pop
daa
sbb
ja
pop
pop
into
or
sbb
push
sbb
rol
xor
fdivrs
mov
stos
push
adcl
js
xor
and
stc
cmp
daa
pop
clc
adc
fmul
add
test
adc
inc
mov
cmp
cmp
mov
dec
out
sub
fcoml
out
push
in
jno
inc
mov
jnp
inc
mov
pop
das
ret
shl
mov
dec
sub
push
inc
ret
lcall
sub
cmpsb
icebp
pop
leave
xor
jmp
sti
imul
out
xchg
and
pop
push
nop
sbb
cmp
enter
inc
push
pop
mov
dec
cmp
push
xchg
aas
xor
sub
pop
call
add
jb
xchg
xchg
ret
popf
std
ret
roll
popf
pop
call
cmp
or
call
icebp
pmuludq
xchg
lcall
daa
and
sub
in
pop
es
std
jle
xchg
adc
inc
mov
push
ret
dec
in
inc
lods
popa
cmp
sbb
xchg
inc
xor
and
push
sti
std
sbb
mov
andb
or
pop
in
mov
scas
out
cltd
out
movsb
outsb
xor
push
addr16
in
fwait
cmpsl
out
xor
lahf
cli
mov
xorl
subl
adc
adc
mov
addb
shlb
js
sti
in
cmpsl
xchg
jl
out
push
pop
ss
lea
and
xchg
or
nop
rorb
scas
or
aad
scas
cmpsl
ret
negb
xor
test
call
pop
mov
xor
test
je
das
jnp
daa
enter
pop
pop
pop
jno
addr16
addl
in
fucomip
and
arpl
and
xlat
filds
mov
or
lods
jl
lea
mov
dec
xor
outsl
and
es
shll
aam
xchg
nop
mov
xchg
inc
ds
lea
sub
mov
rcr
or
call
pop
inc
aas
mov
cmp
scas
push
dec
ljmp
or
inc
and
mov
mov
test
insl
mov
into
shrb
loope
test
pop
arpl
pop
jno
fnop
lahf
shlb
lahf
cmp
cmpsb
mov
int3
cmp
adc
int3
mov
rcr
dec
shll
in
insb
mov
push
cs
and
pop
cmp
adc
popa
shlb
xor
pop
mov
push
shll
and
repz
out
push
xor
pop
jbe
pop
dec
cmp
ss
add
cmpsl
mov
push
adc
fwait
stc
subb
jle
adc
mov
insb
mov
cmp
fcmovb
int
adc
cmpb
xor
inc
ret
cli
xchg
mov
and
mov
dec
cmp
mov
push
xor
lret
mov
xor
sub
or
rol
push
lea
imul
sub
sti
and
mov
cmc
mov
lea
pop
pminub
or
xor
mov
cmpsb
mov
jmp
sub
cmp
cmp
int3
movsb
mov
ror
sub
loope
xlat
fisubs
mov
int3
dec
and
push
clc
cmp
je
inc
stos
psubsb
jl
inc
flds
pop
fbstp
popf
inc
or
push
push
scas
decl
xor
mov
cli
stos
icebp
mov
cmp
loopne
sub
jo
pop
push
lock
sub
jo
addr16
mov
cltd
or
adc
out
cs
gs
mov
fwait
xchg
call
jne
sti
mov
adc
ds
rorl
andb
add
sahf
cmpsb
test
mov
outsl
dec
and
test
mov
lock
mov
inc
sbb
into
cmp
mov
lcall
fnstenv
sbb
int
out
or
dec
stos
mov
nop
roll
mov
sub
icebp
jmp
adc
sbb
inc
out
xchg
mov
fwait
sub
sahf
pusha
loopne
aam
push
movsb
rcrl
aas
jnp
and
mov
loop
repz
lods
push
lcall
hlt
sbb
sarb
cmpsl
cmp
test
stc
fwait
dec
mov
push
ja
loop
mov
out
xor
jns
insl
sbb
addl
pushf
jo
sub
and
push
sub
push
cmp
je
ds
sub
enter
push
adcl
inc
lahf
cltd
push
xorb
lds
lcall
and
fs
ret
dec
xchg
jne
test
enter
cmp
lds
int
loope
jmp
jge
lods
das
clc
push
nop
cmp
jno
or
jmp
dec
cmpsb
mov
push
fstl
in
and
sub
adc
in
jnp
scas
cmpsb
repnz
test
jg
adc
xchg
lret
outsl
dec
xchg
stos
push
or
fildl
jecxz
push
pop
in
and
repz
jecxz
mov
ds
xchg
sub
pushf
je
pop
cs
mov
in
inc
fdivr
jae
outsb
and
repnz
clc
xchg
xchg
iret
fistl
fcos
scas
filds
popf
xchg
icebp
jo
sbb
movsb
mov
addl
and
stos
and
aas
cmp
mov
xchg
xor
lock
scas
or
fs
and
leave
cmpxchg
pop
in
push
test
add
leave
shrl
jle
jmp
xchg
jge
cmpsb
jp
enter
shrb
bnd
into
inc
push
in
cmp
ja
fstpt
adc
hlt
sub
ljmp
imul
dec
mov
pop
mov
sbb
clc
pop
mov
jge
pusha
push
mov
adc
jl
in
lock
fsubr
cmp
icebp
dec
push
jno
push
out
repnz
dec
cmp
in
pop
inc
cmp
jne
lds
jno
inc
dec
fcmovb
dec
ja
outsl
mov
dec
xor
or
mov
jp
xor
push
daa
aas
hlt
mov
into
call
aas
insb
fiadds
adc
rorl
mov
outsb
pop
cmp
lcall
popa
loope
loope
and
pop
adc
mov
je
jmp
shrl
push
mov
jecxz
xorl
cs
je
sbb
xchg
addb
mov
mov
mov
push
push
jecxz
sbbb
daa
jl
sub
in
jo
add
movsb
jne
xor
adc
jp
nop
sbb
mov
andb
cmp
pop
lahf
cmc
mov
xlat
xlat
and
test
dec
sub
add
pop
sbb
lods
out
sbb
jle
pop
nop
push
scas
fs
xor
pop
in
xchg
cmpsb
cmc
mov
repz
movb
orb
xor
icebp
dec
xchg
movsl
jbe
push
test
add
aaa
mov
xchg
sbb
pop
jae
clc
inc
ljmp
sub
cmp
js
mov
sbb
sti
out
add
xor
dec
inc
addr16
mov
aad
cmc
adc
popa
jbe
insb
js
sub
lods
cmp
adcl
jo
pushf
jnp
push
jo
popf
mov
aad
clc
mov
mov
sub
movl
ds
int
std
icebp
inc
std
push
jb
das
lock
adc
sbb
not
push
loope
pop
mov
jl
nop
fstp
into
push
mov
lods
ds
sbb
insl
xor
xor
mov
gs
cmp
jae
imul
lods
mov
xchg
imul
jge
push
mov
cmp
loop
sahf
push
mov
push
ss
int3
or
pushf
push
repnz
je
inc
in
inc
xor
jge
test
jl
ds
dec
cmp
cs
xchg
shl
push
sub
jns
sub
mov
test
cmpl
cwtl
mov
xchg
gs
shl
cmp
sbb
das
adc
mov
xchg
dec
dec
jno
repnz
cmp
adc
add
gs
fistl
ds
aaa
idivb
ljmp
inc
sub
mov
aam
lock
cmp
and
mov
adc
mov
sub
sahf
sub
test
lret
rclb
pusha
in
jmp
scas
cmpsl
les
xor
call
push
mov
stos
arpl
adc
jg
and
and
test
mov
mov
arpl
sub
xchg
inc
lcall
sbb
in
ss
inc
jb
xor
mov
ljmp
xor
out
add
je
jmp
push
xor
mov
lret
shll
lret
mov
dec
je
xchg
ds
mov
aad
movb
ja
insb
cmp
or
imul
dec
scas
arpl
add
mov
scas
pop
and
cmc
lods
lcall
in
outsb
mov
ret
push
or
cltd
lds
xlat
fcomps
xchg
jmp
add
jne
std
arpl
add
sbb
imul
fdivrl
cmp
xor
enter
push
push
dec
bound
mov
loop
push
add
cwtl
jno
fsts
addr16
outsb
or
sarb
ficomps
cmp
jge
or
fisubrs
loopne
xor
mov
fst
dec
imul
mov
cmp
and
mov
xor
pop
push
repnz
push
pop
cltd
imul
and
stos
mov
add
dec
dec
movsb
cmc
add
push
daa
add
or
sub
bound
push
popf
or
lock
sub
in
xor
mov
dec
lods
enter
daa
push
mov
adc
ret
ja
push
push
sbb
gs
and
repz
lods
jl
jge
fdivrs
mov
cmp
inc
and
pop
cmp
or
xchg
inc
sahf
les
enter
add
xchg
std
and
cmp
sub
xor
jbe
mov
bswap
cmp
and
xor
dec
ret
mov
daa
pop
dec
sahf
ret
repz
and
ffreep
add
dec
ret
out
insb
cmp
test
popa
dec
jno
sub
pushf
inc
mov
insb
std
aam
pushf
int
lock
adc
insl
movsl
addb
iret
testb
inc
shll
inc
jns
xchg
test
icebp
mov
insl
aaa
or
call
or
dec
xor
mov
jmp
repnz
inc
aas
icebp
add
addb
push
xor
mov
out
jb
or
into
jg
lahf
repnz
dec
mov
ss
push
inc
imul
add
ret
movsl
ss
test
jle
mov
test
lds
push
mov
add
into
push
and
aam
jg
ljmp
lea
xchg
in
xchg
mov
ljmp
in
pop
andl
mov
and
icebp
inc
jno
adc
data16
jmp
mov
faddl
xor
mov
stos
inc
sbb
mov
jge
aad
imul
je
movsb
insb
push
pushf
jecxz
dec
je
nop
adc
or
pop
mov
js
jno
fldcw
sub
mov
ret
cmp
sbb
repnz
mov
pop
and
dec
or
mov
int3
loope
popa
mov
clc
rcrb
roll
lea
xchg
call
out
mov
adc
clc
xchg
cmpsb
sbb
inc
and
int3
dec
movsl
pop
jg
scas
lcall
jecxz
pop
push
jb
xlat
shl
sbb
repz
std
jp
fcomp
stos
mov
adc
enter
fiadds
push
push
sbb
pop
pushl
repnz
mov
sub
repnz
jbe
mov
jmp
xchg
aaa
cmpsb
or
inc
in
scas
in
mov
mov
push
dec
cmc
jbe
xchg
pop
push
insl
outsl
xchg
sub
lock
mov
lock
push
lcall
mov
jb
or
pop
in
sbb
test
repnz
lcall
mov
shlb
popf
mov
lret
repnz
rcr
insl
inc
pusha
adc
lods
push
cs
push
js
add
repnz
or
stos
int3
dec
fwait
cli
jle
ret
xor
or
mov
jne
subl
popa
jg
cmp
sub
int
sub
popl
je
jne
mul
insb
movsb
push
ds
dec
mov
mov
sti
sub
shlb
jl
fsubs
dec
cmp
inc
aas
stc
inc
pop
or
mov
mov
mov
lock
repnz
mov
inc
add
sahf
or
or
leave
inc
xchg
repnz
mov
adc
mov
jbe
aad
mov
stc
pop
std
or
dec
out
mov
fidivl
int
inc
add
and
push
jecxz
or
ss
call
push
sub
xchg
pop
fsubr
fmull
cmp
std
test
sti
popf
xor
dec
jns
insl
pushf
inc
cmp
movsb
xchg
or
push
aas
xlat
sbb
shl
hlt
add
stos
xor
jne
insl
push
adc
push
inc
in
sbbb
sub
mov
repnz
sub
popf
lds
icebp
rorl
mov
cmp
pop
mov
cmp
mov
dec
push
ret
sbb
or
jge
jl
arpl
icebp
ds
add
jb
es
inc
or
mov
xchg
jmp
xchg
adc
call
or
ja
fsts
cli
jmp
and
dec
mov
scas
inc
ret
and
dec
and
fisubl
mov
mov
pop
cmc
or
outsl
roll
ja
push
inc
fsubr
rcr
mov
pop
or
jecxz
mov
adc
int3
sub
bound
bound
jle
jae
popf
mov
jns
jecxz
iret
xlat
or
dec
icebp
fcmovbe
mov
fbld
sbb
lock
out
push
test
mov
repnz
fsub
fstpl
jmp
lcall
data16
sbb
ljmp
adc
in
and
stos
xchg
aam
cmp
push
sbb
dec
mov
xor
addr16
add
in
imul
scas
ret
sbb
loope
out
subb
scas
cmpsl
arpl
jmp
gs
jne
xor
push
push
out
adcb
fbld
mov
sub
dec
mov
or
popf
mov
in
pop
add
sarb
sahf
cmpsl
mov
and
loopne
xchg
xchg
xor
mov
aas
cwtl
mov
lret
movsl
jl
xchg
xchg
cmp
jle
les
loop
mov
dec
call
repnz
mov
mov
mov
xchg
pop
push
push
push
xor
ds
dec
scas
dec
dec
add
jbe
jecxz
scas
mov
ja
lds
repnz
repnz
ds
das
xor
jne
add
sub
test
fnstcw
mov
scas
adc
stos
jns
cs
mov
add
cmp
mov
fidivs
in
nop
testb
sub
cmc
mov
push
das
xchg
pop
lret
add
daa
scas
nop
imul
rcrl
pop
out
push
lea
mov
cmp
stos
cmp
mov
lock
mov
into
sub
adc
int3
pusha
and
mov
xor
push
xor
mov
enter
add
inc
aas
fiadds
loop
lds
pop
jle
es
xor
push
cmpsb
roll
inc
test
cmpsb
cmp
fcom
mov
mov
frstor
adc
xchg
pop
mov
mov
int3
add
in
push
aas
pop
addr16
mov
stos
add
push
xchg
jg
movsl
mov
movsb
mov
mov
imul
cltd
sbb
shrl
mov
repnz
adc
ja,pt
out
pop
das
and
lcall
or
xor
stos
pushf
jne
stos
mov
sbb
roll
pop
push
mov
mov
xor
out
iret
jmp
mov
mov
xor
mov
es
mov
je
add
mov
dec
cli
mov
inc
xor
mov
imul
out
push
addr16
int3
jp
mov
or
ror
sahf
pushf
out
filds
rolb
add
inc
push
sbb
xchg
mov
hlt
int3
add
outsl
mov
shld
push
fstpt
xchg
fdivs
inc
dec
push
dec
shll
clc
shl
sub
jnp
test
popa
mov
dec
cmpsl
dec
stos
pop
mov
inc
ljmp
das
push
popa
xchg
fimuls
int3
imul
push
or
idivb
mov
xor
mov
imul
push
dec
dec
aaa
mulb
sub
cltd
popa
dec
add
xchg
mov
rclb
mov
jmp
ja
mov
and
fmuls
sbb
inc
fildll
scas
enter
fwait
andps
cwtl
jmp
sub
xchg
aas
or
int
std
and
inc
clc
push
cltd
cmc
lret
imul
das
sub
lods
dec
pop
or
mov
sub
fs
push
and
ja
imull
mov
hlt
xchg
cmp
jbe
and
push
xor
ss
aas
cs
and
mov
mov
fwait
leave
test
push
push
inc
inc
xor
xchg
push
subb
stos
or
clc
test
push
or
lret
add
or
or
adc
inc
cs
cld
sbb
sub
pop
lret
xchg
xor
inc
mov
loopne
arpl
dec
or
sub
lods
in
mov
push
push
xlat
pop
mov
clc
sbb
pop
ljmp
push
mov
outsb
add
jl
test
inc
test
jle
jo
jne
mov
inc
pop
jl
xor
sub
adc
sti
pusha
fidivl
mov
in
imul
les
pop
aaa
insl
out
outsl
in
jle
out
xor
or
dec
jge
idivb
hlt
jmp
out
fistpll
gs
cmpsb
loope
sbb
push
std
int
mov
icebp
add
imul
roll
mov
lock
or
dec
or
xchg
decl
mov
jecxz
cmp
mov
ret
outsl
push
fisttpl
lods
repz
repnz
mov
pop
cltd
adc
lret
sbb
jno
pop
arpl
jb
test
adc
imul
xchg
lret
scas
pop
pop
xor
jae
pop
or
inc
pop
fldenv
xor
xchg
cmpsl
pop
dec
cmp
movsb
xchg
ror
pushl
jb
rclb
mov
imul
aad
dec
jmp
dec
sub
pop
mov
mov
mov
jbe
gs
push
lds
sti
xor
add
std
clc
jge
int
push
push
cltd
sub
dec
inc
sbb
xchg
lcall
mull
mov
pop
push
pop
data16
xchg
aaa
iret
jae
je
push
or
cmp
inc
out
cltd
or
aam
add
mov
lds
mov
or
fsub
ljmp
push
bound
xor
test
xchg
mov
addr16
pop
jl
lret
cmp
stos
pop
je
hlt
lods
push
ds
mov
mov
addl
xchg
mov
xchg
dec
jmp
xchg
mov
mov
pop
int3
or
add
sahf
push
pop
loope
dec
mov
aaa
mov
add
in
add
mov
and
sbb
pop
jne
ret
in
push
and
xchg
ja
push
xchg
movsl
sbb
mov
mov
mov
jmp
mov
ja
js
mov
test
mov
xor
mov
and
jg
gs
fdivl
nop
test
inc
sub
cmp
jp
lret
push
roll
adc
lahf
push
jns
xor
push
shlb
flds
or
cmp
xchg
insb
push
mov
test
mov
dec
insl
rcll
icebp
jae
or
stc
cli
sbb
xor
add
and
fucompp
ss
jp
popf
imul
sbb
mov
mov
ja
sub
in
push
lret
inc
or
jae
sbb
pop
mov
sti
fiadds
adc
cmp
and
sub
xor
outsl
push
adc
pop
jp
inc
cmp
rep
adc
xor
pop
mov
call
lret
inc
sub
pushf
test
dec
jo
add
shl
sub
int
pop
lods
jns
orb
nop
push
ds
lcall
mov
add
cmpsl
adc
push
or
add
add
mov
fdivrl
mov
fdiv
push
jmp
jl
inc
inc
and
gs
xor
pop
inc
or
adc
pop
fmuls
repnz
dec
dec
pop
lea
sub
xchg
cmp
push
adc
ja
pop
and
lret
je
push
ja
jmp
mov
pop
jns
jae
lcall
adc
int3
cmp
roll
add
shl
xor
or
std
xchg
and
scas
push
out
mov
shll
fnstcw
fisttpl
das
jo
int3
dec
sub
popf
or
dec
cmp
mov
jge
mov
xchg
hlt
jne
sub
xchg
leave
movsb
jle
movsl
xor
dec
dec
mov
lea
or
adc
mov
mov
dec
hlt
mov
int
push
insl
shll
movsl
dec
jne
test
dec
push
xchg
in
and
mov
mov
ja
mov
cli
push
nop
dec
push
lret
or
jnp
mov
mov
mov
addr16
push
push
inc
popa
imul
stos
and
mov
cmp
jbe
xchg
adc
mov
cmp
dec
ret
fistpll
jne
dec
push
in
xchg
jnp
icebp
inc
mov
gs
pop
mov
testb
insl
sbb
add
sub
cmp
xor
dec
pop
pop
and
adc
inc
pop
mov
ret
jl
push
cmp
xchg
xor
pop
mov
lock
xchg
ret
out
push
mov
xchg
sub
xlat
sbb
bnd
pop
jo
cmpsb
dec
mov
mov
add
fists
xor
adc
pop
fwait
ja
dec
or
cmpsb
xchg
fwait
pop
sbb
fldt
jno
outsb
dec
add
vpmullw
adc
inc
inc
rolb
cmp
jo
jle
loop
jmp
imul
xlat
xchg
pop
je
xor
or
stc
ret
ret
shlb
movsl
cmp
xor
in
loop
sub
inc
fistpll
adcb
dec
pushf
jle
sbb
pop
mov
mov
jecxz
shlb
int3
and
adc
into
aam
sbb
add
fsubrs
incl
addl
mov
adcb
test
icebp
push
cld
inc
cld
jbe
mov
sub
vfmsubpd
mov
or
or
mov
mull
mov
push
scas
mov
sarl
loop
mov
stos
imul
mov
das
test
adc
pop
mov
std
adcl
jp
mov
push
xchg
clc
jns
add
jl
mov
cmp
adc
mov
inc
cmp
jnp
iret
shrb
stos
dec
in
push
jbe
scas
int3
dec
and
stos
nop
lahf
ret
cmpsb
mov
outsb
lods
xor
sahf
pop
mov
mov
xchg
push
pop
mov
mov
pop
sahf
sub
add
test
psadbw
jl
or
fbstp
lea
add
xchg
pusha
pop
adc
push
mov
and
ret
dec
adc
aad
xchg
ja
lahf
clc
iret
aaa
test
cld
nop
push
pop
jecxz
out
out
pop
ljmp
aaa
xor
adcb
pop
cmpl
adc
xchg
sub
mov
xor
lods
inc
xor
jbe
andl
and
xchg
xchg
cmp
dec
sub
xchg
outsl
leave
movsl
push
ja
pop
sbb
mov
sbb
sbb
add
sub
sarl
mov
mov
mov
jno
ret
mov
and
movsl
or
sti
dec
xor
ss
or
mov
lods
pop
mov
ret
jg
jp
das
test
xor
jae
out
cmp
sbb
in
push
rcr
call
xchg
bound
mov
pop
imul
in
clc
mov
leave
or
mov
aas
das
outsl
and
or
push
out
sarb
outsl
pop
pop
jbe
in
lcall
inc
lods
pop
sbbl
inc
cmc
jp
scas
xor
push
add
rcl
inc
in
jb
cmp
inc
int
cwtl
loope
rcll
js
rclb
outsl
sub
std
pop
inc
inc
push
xchg
jmp
or
xchg
mov
add
xor
repnz
cmp
push
cmp
adc
lret
mov
insb
inc
and
cmp
aad
inc
dec
lea
dec
jg
cltd
daa
xchg
push
sbb
or
xor
loopne
stc
mov
ret
sbb
insl
aaa
test
sub
mov
pop
dec
lds
gs
push
mov
clc
push
dec
insl
xchg
in
push
push
cltd
pop
orb
xchg
enter
cmp
xor
sarb
outsb
sub
aas
les
nop
movsl
cmp
add
push
mov
adc
pop
cs
mov
xchg
cmp
test
out
cwtl
cmpsb
outsb
loopne
rcrl
mov
in
dec
mov
inc
in
mov
pop
mov
push
xor
or
movsl
add
pop
fs
cmp
xor
arpl
sbb
cmpsb
insb
bound
nop
ds
call
data16
iret
aaa
movsb
sbb
push
lods
out
les
aad
mov
ja
int
lcall
jo
loope
xor
sbb
lods
int
je
push
into
cmpsb
repz
int
std
ljmp
mov
dec
adc
jns
sti
das
je
imul
pusha
test
mov
mov
test
push
stc
fimull
and
xor
push
in
xchg
add
rorl
popa
push
xchg
stos
sbb
imul
ja
into
xchg
xor
sub
mov
stos
fldenv
mov
and
mov
mov
mov
cmc
sbb
or
int
rcrb
jo
cmp
roll
jmp
dec
stc
shrb
xchg
ret
loope
cs
push
mov
mov
rorl
or
movsl
movsb
daa
sub
popa
ret
jg
rclb
outsl
lock
in
push
ds
fwait
into
jnp
les
out
scas
jae
xor
imul
xchg
inc
out
or
xchg
sub
sarb
lds
mov
fxtract
adc
jo
jmp
sahf
pop
and
insb
rep
cmp
mov
shlb
les
push
inc
je
pop
cltd
jb
xor
mov
lahf
xchg
out
xchg
inc
lret
xchg
fwait
lea
cmp
dec
movsl
push
mov
add
sub
mov
ja
filds
xchg
into
sub
ss
idivl
mov
imul
loopne
shrb
cmpsb
mov
scas
adc
pushf
mov
std
mov
or
inc
push
int
xchg
jns
loopne
push
mov
aad
pop
popf
in
repnz
sarl
sbb
sti
nop
xor
mov
inc
xor
dec
pop
testb
add
mov
dec
lret
jb
sbb
test
rolb
cmc
iret
addr16
sbbl
lods
and
push
push
xchg
call
mov
pop
push
pop
mov
movsl
in
es
cmp
out
dec
push
adc
jae
dec
int3
rcll
test
adc
aaa
sbb
inc
sbb
mov
scas
pushf
fidivs
dec
cmp
jecxz
push
ficompl
cli
add
add
push
cmc
lods
mov
cld
out
or
cmpsl
popa
aas
fnstenv
xor
inc
cltd
add
sub
mov
pop
adc
pop
sub
ds
out
mov
insl
push
fdivrs
lret
jp
sbb
out
push
orb
sbb
inc
jno
push
xchg
es
shll
mov
xor
mov
lock
push
icebp
mov
cmpsl
mov
dec
fsubr
push
aad
fnstcw
and
xchg
add
adc
lock
enter
push
pop
or
aaa
in
rep
movsb
xor
outsb
outsl
stos
sbb
xor
dec
movsb
xor
or
dec
add
clc
sbb
call
in
hlt
dec
pop
scas
inc
push
insb
lcall
sahf
cmp
jp
pop
sbb
lahf
les
js
inc
test
push
cmp
pop
clc
push
pop
jb
dec
fldl
stc
inc
mov
addl
setl
xor
xchg
add
or
call
xor
xchg
jb
push
cmc
jno
cmc
jae
pop
aaa
int
add
addl
inc
xchg
out
jl
ret
pusha
mov
vpmacsdqh
adc
mov
divb
mov
inc
cld
mov
imul
jbe
pop
push
sbb
push
lea
pop
call
stos
fiaddl
mov
js
fadd
pop
jne
notb
mov
cli
fcomp
pop
fsubl
xor
cltd
jne
enter
sub
insb
xchg
ljmp
inc
add
pop
dec
fsubr
push
mov
dec
add
ljmp
cwtl
rorb
dec
add
into
fldl
dec
jecxz
popa
and
pop
and
inc
jle
sub
xor
js
xchg
sbbl
jb
xor
lcall
sub
test
dec
es
cmp
add
adc
fs
out
or
fildl
pushf
fisubl
mov
arpl
orb
adc
mov
pushf
ljmp
cmp
cmp
mov
cwtl
dec
mov
ret
add
or
mov
idivb
cmovne
roll
call
inc
cwtl
in
faddl
inc
jnp
mov
clc
mov
daa
dec
mov
outsb
xor
loopne
dec
or
stos
xor
mov
mov
xor
adc
rorb
jno
inc
mov
dec
push
int3
leave
xor
xchg
out
lods
data16
imul
cmp
push
inc
popa
jp
js
jns,pn
cs
rcll
mov
pushf
push
in
pop
pushf
jne
cmp
or
pop
pop
add
jbe
mov
dec
sub
nop
sti
push
in
adc
jae
stc
fimull
mov
scas
data16
pop
jl
dec
jge
outsb
ficoms
pop
xchg
inc
scas
shl
adc
sub
bound
jne
mov
mov
das
nop
push
cmp
leave
push
push
hlt
mov
mov
stos
mul
mov
mov
adc
cmp
xchg
std
bound
cld
stos
mov
cmp
xor
dec
jmp
ljmp
fisttpl
pop
and
sahf
hlt
out
pusha
inc
push
or
sub
inc
xor
push
sbb
dec
xchg
and
adc
sub
add
or
dec
hlt
mov
loopne
dec
in
mov
adc
xchg
outsb
or
mov
cs
pop
jae
inc
ucomiss
std
jo
xchg
push
jnp
jno
mov
in
jmp
mov
xchg
sbb
add
adc
lds
xchg
jmp
cmpsb
mov
lea
lods
jo
popa
jno
and
nop
mov
jmp
filds
cmpl
loop
into
xchg
dec
repz
mov
xchg
adc
xor
sub
js
sahf
mov
lds
pop
mov
out
lds
mov
js
pop
loope
pop
pop
roll
std
pop
hlt
or
xor
cld
push
inc
xor
inc
cmp
sbb
sbb
aaa
adc
enter
pop
adc
insb
add
pop
sub
xlat
fsub
nop
scas
dec
sub
sti
in
mov
jne
shr
daa
pushf
xchg
add
sbb
inc
xor
xchg
jb
push
sbb
mov
btr
lret
test
fisttps
lea
stos
push
outsl
xor
or
decl
add
imul
ficompl
aad
inc
je
xchg
out
inc
subb
jg
mov
testl
jmp
arpl
inc
fwait
popa
xlat
mov
imul
adc
cmpsb
out
xchg
xlat
hlt
xchg
add
ret
xchg
call
xchg
xor
inc
jb
and
pop
sarl
ja
or
mov
fcmovnbe
push
ljmp
shr
add
scas
or
mov
loope
xchg
adc
sbb
popa
mov
cmp
aad
adc
lods
pushf
mov
adc
popf
mov
out
aam
shlb
repnz
or
sub
mov
lods
aam
jbe
mov
dec
int
and
fwait
cmp
dec
leave
or
hlt
fstpl
repnz
dec
sub
jbe
enter
mov
sub
scas
mov
cmp
scas
inc
xchg
add
lahf
movsb
adc
mov
fs
int
xor
scas
sbb
cmp
mov
jns
and
jg
mov
cmp
push
xchg
mov
imulb
pop
and
popa
xchg
movsb
sub
mov
jnp
push
xchg
outsb
inc
test
lcall
sub
xchg
mov
add
imul
mov
test
jne
pop
sarb
fadd
aad
pop
hlt
imul
sbb
inc
xor
pusha
push
add
mov
pop
leave
adc
xor
push
pop
mov
das
clc
hlt
sti
loopne
data16
mov
loopne
das
mov
or
and
shlb
test
in
repnz
add
xor
cwtl
jo
push
cwtl
jle
xor
das
rclb
xchg
idiv
psrld
jg
cmc
std
cmp
push
sub
hlt
test
inc
int3
fwait
enter
fistl
dec
jge
mov
outsb
arpl
adc
in
adc
xchg
test
stc
lods
adc
xchg
sub
sub
pop
mov
stos
aas
leave
mov
rcl
stc
repz
into
test
push
dec
shll
or
and
dec
push
add
js
adc
cmpsl
fdivrl
add
jnp
sarl
xchg
push
daa
jg
or
dec
push
stos
outsl
adc
xlat
push
aas
jg
cmpsl
arpl
push
inc
jecxz
ja
inc
xor
repz
cmpsb
lock
xlat
and
sub
push
mov
xor
dec
ljmp
xor
pop
adc
sub
hlt
or
pop
dec
add
inc
adcb
pop
sti
fists
xor
cs
test
xchg
testl
gs
out
ljmp
ret
dec
out
out
dec
out
cmpsl
mov
push
mov
jge
fs
xor
addr16
xor
rep
mov
lahf
jg
mov
cmpsl
enter
movsl
fisttpll
jecxz
push
pop
push
and
inc
insl
cmpsl
sti
loop
outsl
mov
inc
push
mov
aad
add
imul
xor
ror
xorb
pusha
dec
mov
mov
jae
lock
jmp
cli
adc
jno
lahf
mov
std
mov
stos
pop
mov
inc
or
mulb
outsb
cld
lahf
mov
in
push
stos
inc
sub
aas
push
das
xchg
sub
movsb
fcomip
test
add
test
outsl
fcoms
jg
dec
popf
sbb
xor
loop
mov
push
inc
fdivs
imul
addr16
pop
jmp
mov
shrb
jecxz
shrb
xchg
js
mov
mov
mov
pop
and
inc
cmp
mov
pop
dec
jno
mov
cmc
ljmp
stos
sub
or
test
cmp
enter
and
pop
fs
orb
cmpsl
adc
pop
pop
jle
inc
add
shll
add
mov
jbe
fiaddl
mov
mov
jo
adc
into
les
popa
dec
and
xlat
lret
ret
mov
in
fst
inc
lea
push
fs
in
mov
es
inc
enter
adc
mov
inc
adc
sbb
enter
xchg
mov
jb
push
mov
and
in
adc
loop
imul
xchg
cltd
mov
out
cwtl
fadds
or
push
jae
stos
push
loope
cs
xchg
and
add
mov
or
and
repz
insl
cwtl
jnp
fs
push
out
loope
pop
vminpd
nop
cli
inc
scas
jb
xchg
in
and
add
xor
jge
movsb
jge
pop
dec
pop
dec
mov
hlt
push
ja
cmpsb
push
push
fmuls
testb
ret
push
fwait
mov
xlat
cmp
inc
mov
jnp
pusha
fwait
push
mov
add
ljmp
int3
add
add
push
movsl
jle
call
sbb
and
cltd
cli
mov
out
inc
out
mov
fisubs
xor
cmp
cmp
divb
cmpsb
jecxz
xor
cmpsb
jb
push
out
fsubr
cmp
mov
cmp
icebp
jp
and
movsb
ret
cmp
cmpsl
divl
push
ret
jle
adc
xor
adc
cmc
in
mov
inc
sub
adc
mov
xchg
xor
adc
jnp
clc
lds
les
into
jns
jae
ja
orl
mov
stos
mov
rclb
repz
addr16
movsl
jne
xchg
mov
xor
cmpsb
sbb
mov
in
mov
and
add
movsb
dec
lahf
test
xor
cmp
and
int
mov
popa
test
mov
sbb
sbb
adc
xorl
cmp
pop
inc
mov
xlat
hlt
cmpsb
inc
fdivl
out
stos
movsl
inc
adc
mov
test
ja
fsts
dec
sbb
dec
xor
sbb
ror
ret
nop
aaa
shrb
mov
pushf
mov
lret
stos
into
jmp
cs
ret
iret
jl
adc
xor
insl
repnz
shlb
push
mov
mov
or
xchg
fcomip
sti
mull
jp
out
fs
lahf
push
xchg
ret
add
mov
movsb
pop
dec
inc
call
insl
xor
mov
ljmp
pop
test
push
insb
in
loope
shll
and
imul
jle
je
and
adc
jle
sahf
pop
pop
dec
cs
push
inc
push
mov
ljmp
add
nop
inc
jno
adc
fwait
rorl
push
test
cmp
jge
shl
xchg
push
pop
pop
maskmovq
divl
aaa
xchg
mov
dec
sti
popf
adc
mulb
jne
dec
mov
repz
fwait
test
xor
les
dec
movhps
cltd
mov
subb
aam
jmp
ret
stos
in
fldenv
aam
rolb
add
sar
adc
pop
fbstp
insb
jbe
repnz
push
inc
flds
lock
in
inc
push
test
add
lcall
cmp
pop
jecxz
call
jne
ss
aad
inc
inc
pushf
mul
mov
or
pop
lahf
arpl
mov
out
je
or
mov
dec
imul
cmpsl
mov
mov
jmp
addr16
clc
inc
xchg
xchg
mov
add
ja
or
es
pop
jp
or
cwtl
pop
fisttpl
loope
in
cltd
pusha
sbb
push
pop
iret
pop
inc
pusha
dec
pop
inc
int3
sub
test
sar
sarl
int
ss
out
xor
cmp
mov
movsl
mov
xor
mov
and
sub
test
and
add
mov
xor
and
or
insl
ss
roll
movl
jg
lods
hlt
pusha
rcll
pop
and
mov
xchg
mov
ss
mov
test
cld
pop
scas
mov
cmpsb
rcrl
xchg
add
jecxz
xchg
mov
popf
call
std
mov
mov
mov
fldl
jae
insl
out
out
mov
lcall
cwtl
jns
xchg
or
test
pop
rorl
rolb
insb
hlt
hlt
jbe
stos
mov
jne
pop
sbb
jp
adc
push
and
mov
push
xchg
cmp
dec
mov
fldenv
ja
lods
mov
xchg
inc
addl
fiadds
loop
prefetch
lret
dec
pop
mov
imul
fsubr
test
jg
movsl
add
int3
in
sbb
es
shl
jge
inc
loopne
adc
aaa
or
aad
repnz
push
loop
cmp
mov
sahf
adcb
outsl
add
call
mov
xor
jmp
add
cmc
dec
xor
arpl
js
push
int
clc
addr16
cltd
pop
pop
arpl
fldl
cmp
mov
daa
cmc
addb
pop
lock
movsl
aad
mov
cmp
jp
cmp
pushf
xchg
xor
xlat
faddp
lods
test
xorl
lret
mov
push
ds
stos
out
inc
mov
cli
adc
jg
je
adc
imul
push
add
bound
ss
add
xchg
inc
or
mov
adc
push
mov
into
cmp
pop
pop
sub
ret
add
xor
mov
lret
mov
cli
mov
add
fcmovu
xlat
pop
inc
sbb
fstps
repnz
jno
mov
push
adc
clc
push
jmp
jns
int3
je
scas
stos
and
add
xlat
push
sbb
or
imul
lahf
mov
cmc
int
xor
cltd
jecxz
mov
mov
scas
pop
sbb
lret
or
aas
inc
lret
imul
frstor
xchg
push
mov
sbb
lahf
pop
push
sbbb
and
int3
fcoms
and
or
push
push
js
push
call
adc
jne
int3
btcl
xor
cmc
cmp
in
sub
pusha
jo
sbb
js
jg
cmpsl
push
mov
imul
xchg
test
push
mov
inc
push
mov
dec
out
sub
sub
jnp
mov
jmp
cmp
scas
xchg
sbb
xor
pop
or
outsl
push
shl
das
or
addr16
aad
mov
test
pop
adc
cmp
dec
dec
sbb
in
outsl
mov
cmp
test
sub
fcoms
jmp
pop
add
test
int
cld
adc
out
mov
add
jmp
mov
add
scas
movsl
adc
sub
push
push
fisubrs
adc
sub
adc
imul
pop
repz
mov
mov
xor
test
add
movb
sbb
insl
dec
jno
adc
cld
sub
pop
or
lods
loope
jg
call
sub
movsl
mov
pmaddwd
addl
mov
les
test
xorb
shlb
dec
inc
loopne
icebp
add
stos
test
testl
lods
scas
fisubs
xchg
inc
adc
xchg
sbb
mov
shr
jnp
into
cmp
add
jbe
pop
outsb
aaa
lds
inc
and
inc
sub
sarl
xchg
push
cld
xchg
mov
push
mov
ficoms
or
sbb
mov
in
sub
or
cmp
lods
pop
je
imul
push
jp
shrb
xchg
hlt
andl
jns
lcall
scas
sbb
test
inc
and
adc
scas
mov
rolb
stc
mov
adc
add
fidivrs
shrb
scas
imul
dec
jno
push
ret
xchg
or
test
sub
into
or
xor
mov
fnstcw
stos
into
xor
inc
into
jge
pop
jne
and
pop
push
mov
iret
cli
nop
xlat
ds
dec
into
rclb
inc
mov
fldt
enter
jp
out
add
push
sbb
and
pop
loopne
push
dec
and
nop
fldl
sub
inc
cmpsl
jp
sbb
bound
jg
dec
out
outsb
sbb
popf
out
xchg
gs
mov
push
adc
test
mov
xor
push
xchg
imul
xlat
push
ret
inc
loopne
into
inc
mov
lods
mov
sub
sub
enter
pushf
lcall
xor
aaa
repz
or
xor
inc
cmp
mov
xlat
mov
fldt
jbe
mov
xchg
loope
pop
jne
cwtl
push
push
movsb
enter
inc
outsb
std
sub
test
adc
cmp
push
cld
sbb
fcmovb
adc
add
mov
mov
insb
cmp
ljmp
push
orl
cmp
bsr
jle
stc
sbb
ret
and
aam
jae
movaps
add
cmpsb
mov
insl
inc
pusha
aam
push
stos
clc
pop
cli
out
arpl
cli
cltd
je
adcb
daa
push
inc
or
fnsave
mov
ds
jne,pt
mov
xchg
sbb
xchg
pusha
inc
insl
pop
out
inc
ret
jae
adc
lret
jl
jne
xchg
jmp
adc
outsl
hlt
mov
lods
loopne
push
xchg
push
ss
jle
inc
popa
adc
int
mov
xor
or
cmpsb
out
shlb
in
add
fs
pop
add
pop
mov
inc
aas
ss
in
pop
test
and
mov
mov
pop
fbld
push
push
mov
pop
xchg
daa
pop
cmpsl
xchg
out
mov
icebp
in
jl
add
mov
push
inc
dec
jmp
imul
and
push
push
stc
jo
inc
dec
push
mov
out
rcll
roll
aad
loopne
stc
gs
popl
jge
xor
jbe
adc
pusha
int
dec
push
lods
pop
cmp
pop
or
sbb
ret
and
mov
adc
popa
dec
js
add
bound
push
shl
add
xor
mov
leave
dec
in
push
add
sub
add
jne
out
test
data16
jmp
mov
insl
popf
dec
bound
jb
mov
enter
mov
rolb
mov
pop
adcb
push
xchg
les
in
stos
pmulhuw
ss
fadds
int3
xor
jbe
xor
lret
lods
es
or
xor
fsubs
push
mov
nop
popa
es
add
mov
mov
stos
ds
lcall
roll
fistl
pop
int
xchg
test
dec
cmp
adc
jl
ljmp
dec
mov
cli
push
or
fbld
dec
xlat
mov
cmp
dec
mov
lea
pop
mov
mov
lock
mov
cmp
insb
test
bound
sub
mov
cmpsl
stc
enter
and
popa
lcall
push
push
xchg
fistps
push
enter
adcl
jnp
decb
std
jmp
xchg
cmp
addr16
and
fwait
int3
xlat
xchg
lods
shlb
add
sub
shll
sub
push
xorl
cwtl
loopne
inc
aad
mov
push
int
fwait
xor
jl
xor
mov
arpl
std
fwait
lods
andb
je
lret
ret
jp
and
dec
cmpl
lahf
mov
in
std
into
call
adcb
jg
xorb
movsb
add
arpl
ror
mov
dec
pop
in
jmp
mov
in
pop
inc
inc
pop
scas
fmuls
lea
mov
add
add
pop
xchg
movsb
xor
push
cltd
bound
movsb
inc
sub
ds
pop
jmp
lcall
popa
mov
cmp
xchg
insb
jo
xchg
xor
addr16
jns
mov
jne
mov
add
loopne
jb
jno
aas
dec
ss
xchg
dec
mov
mov
mov
pushf
pop
add
mov
mov
adc
cltd
sbb
js
in
stc
add
sbb
movsl
ret
out
adc
add
enter
cmp
sbbl
aas
cld
or
and
fucomp
movsl
push
sub
xor
jmp
pop
push
inc
outsb
mov
dec
push
mov
int
jp
loop
dec
xor
cmpsb
mov
into
call
or
or
or
dec
jns
outsb
or
xchg
and
pop
push
jnp
testb
out
mov
jmp
stc
sbb
adc
adc
push
mov
lods
pop
testb
pop
add
and
iret
out
sub
in
xchg
sub
xor
push
call
push
adc
adc
inc
call
adc
hlt
sti
adc
jecxz
out
sub
mulb
scas
jns
jns
popf
popl
shll
sub
and
into
fdivs
dec
outsb
push
sub
cmpsl
sti
or
xchg
outsb
sbb
mov
add
loopne
pusha
cmpsl
fstps
ja
sbb
cmp
xchg
xchg
push
cmp
js
add
das
cli
mov
fsts
sbb
mov
and
and
idiv
dec
daa
imul
xchg
mov
pop
lret
dec
push
or
inc
jg
lock
and
push
or
test
cltd
xchg
mov
jns
mov
sub
jmp
pop
out
mov
cmpsb
addr16
popa
sbb
jmp
pop
lret
dec
int3
sbb
sub
dec
test
cs
push
cmpb
or
inc
fsubl
cmpsl
push
icebp
loopne
ljmp
add
call
add
lea
lahf
lock
cmpsb
add
mov
fs
pop
or
xor
dec
je
pop
js
das
lods
out
fwait
mov
pop
gs
cmp
mov
sub
lds
ja
jle
add
fnsave
mov
movsl
lods
in
in
faddp
addr16
ss
mov
ret
outsl
push
xchg
sub
push
mov
and
jl
or
push
mov
pop
cmp
leave
aaa
les
aad
in
mov
cwtl
les
adc
cmp
in
add
adc
lret
icebp
dec
jns
fimuls
fimull
mov
out
leave
mov
repnz
xchg
lsl
adc
roll
dec
ljmp
out
sub
lods
and
lret
push
xor
push
inc
mov
dec
scas
leave
shlb
mov
test
leave
in
clc
dec
cmp
dec
ds
adc
enter
dec
cmp
js
pushf
mov
iret
mov
or
inc
repnz
mov
xchg
pop
in
push
scas
loop
sub
scas
mov
pop
xor
cmp
adc
incl
mov
inc
test
xchg
lahf
adc
out
in
out
push
cwtl
int3
cmp
push
into
mov
push
cld
notb
cmc
xchg
xor
sub
ja
push
dec
push
mov
push
pop
insl
test
mov
push
sbb
mov
xchg
mov
inc
cmp
cmc
call
dec
inc
mov
fwait
daa
lods
lea
or
loop
inc
jo
inc
jno
pop
out
fwait
and
lds
clc
sarb
out
mov
xor
dec
out
mov
cmp
or
dec
loope
cwtl
shrb
cwtl
sub
mov
fsubrs
popf
adc
push
data16
fcmovb
sbb
fbstp
int3
mov
xlat
pop
cmc
add
lods
mov
lcall
inc
shl
rcr
adc
mov
and
push
push
in
cmp
jns
mov
push
adc
and
fildl
mov
loop
jl
push
xchg
pop
adc
cli
mov
test
push
inc
or
adc
lret
mov
jle
pop
fcoms
dec
jae
push
mov
andl
test
lcall
push
mov
dec
sub
jg
aaa
mov
xchg
sbb
enter
dec
mov
call
mov
gs
pushf
mov
mov
imul
push
pushf
loopne
movsl
push
mov
mov
cmpsl
pushf
mov
jno
inc
pop
mov
xchg
out
out
lods
cmpsb
sti
mov
sub
ljmp
pop
ss
mov
jnp
inc
xlat
xchg
ret
icebp
add
and
or
add
pop
repz
jp
jecxz
push
adc
fadd
fisttpll
negb
lret
les
inc
mov
pop
push
mov
sub
rol
inc
imul
iret
xor
xchg
out
mov
ljmp
daa
incl
ret
ljmp
mov
ret
adc
add
out
or
add
dec
inc
push
pop
jl
push
sti
mov
dec
push
pop
pop
sbb
shrl
push
fwait
push
jle
sbb
jecxz
scas
mov
dec
adc
aaa
mov
xchg
subb
in
sub
push
in
sbb
cmp
sub
ds
subps
subb
sti
insl
inc
into
pop
sbb
jae
dec
out
aas
fldenv
es
mov
xchg
outsb
or
inc
mov
es
adc
cltd
out
jns
jne
push
aaa
cmp
fldenv
jne
sbb
sbb
inc
sub
enter
orw
sub
xor
or
fldenv
push
lods
jle
imul
fsts
popa
mov
fcompl
add
cli
mov
add
fcompl
jno
dec
xchg
mov
lcall
test
repz
or
iret
push
test
insl
pusha
jns
imul
jmp
cmp
loop
inc
in
dec
jecxz
push
xchg
aaa
jmp
add
movsb
fcomps
adc
dec
dec
fldl
jl
or
sub
xchg
inc
cmp
mov
adc
sbbb
fistpl
aad
mov
jns
call
cwtl
mov
inc
shll
std
mov
mov
popf
andl
rcr
push
and
and
lds
xor
push
repz
clc
ret
xchg
sahf
sub
fildl
sbb
and
out
push
inc
repz
pop
popa
mov
inc
cmp
test
mov
and
mov
cmp
pop
test
push
xor
xor
push
mov
shlb
test
push
ss
adcl
pop
enter
dec
in
repz
scas
les
mov
mov
pop
scas
or
fdivrs
out
mov
std
inc
leave
addr16
mov
fdivs
cltd
push
lahf
xor
imul
adc
test
dec
and
jl
aad
add
fs
js
push
leave
filds
and
scas
or
aaa
pop
xor
stos
jge
repz
xor
jno
lock
sub
outsb
aaa
xlat
and
adc
outsb
xor
cltd
out
or
jge
push
lret
mov
test
and
int3
jg
ficoms
or
dec
cltd
cmp
jns
lcall
ja
mov
lods
pop
mov
cmp
adc
dec
es
loop
outsl
popa
mov
aam
pushl
mov
mov
jecxz
shlb
daa
scas
mov
push
jmp
push
sub
rorb
into
and
dec
inc
mov
push
ficoms
sbb
inc
mov
hlt
adc
sub
nop
mov
mov
cmp
or
mov
out
lahf
push
imul
and
xor
and
enter
jne
sti
popa
mov
insl
rcl
sub
xchg
test
adc
loope
insb
in
lds
andl
fildl
test
cmpsl
sbb
pop
cmp
out
inc
xchg
or
mov
outsl
mov
push
repnz
fsts
loope
dec
or
and
xchg
mov
js
pop
repz
lahf
test
es
mov
mov
adc
fidivs
lods
aaa
rclb
mov
stos
mov
inc
pop
repnz
sub
add
add
push
mov
jae
mov
fdivl
jmp
and
movsl
addr16
or
std
cltd
mov
fdivr
les
xor
fpatan
scas
mov
pop
popf
or
cmp
pop
sarb
js
xchg
mov
xchg
hlt
repnz
hlt
out
sub
mov
pop
out
xchg
xchg
in
pop
ljmp
adc
in
cs
cmpl
pop
xor
pop
into
mov
xchg
inc
mov
cmp
daa
mov
or
cltd
mov
add
mov
sti
lds
dec
enter
and
dec
aad
cmp
fwait
sub
xchg
sub
sbb
mov
in
xchg
std
pop
xor
out
out
les
pop
movsl
xor
jle
outsl
std
clc
test
adcb
inc
insl
xor
repz
out
add
fsubrs
mov
gs
jmp
pop
cmp
sub
xor
jno
pusha
test
cmp
pusha
jo
cli
xor
mov
lea
inc
jg
mov
jmp
insl
dec
jmp
in
bswap
mov
add
data16
push
sbb
push
aad
loopne
fidivs
cmp
and
cld
lcall
ss
in
cmp
rcrl
jg
mov
push
adcb
xchg
popa
addr16
ljmp
fsubs
mov
or
jbe
or
rcl
mov
sub
test
test
subb
mov
or
push
outsl
fisubrs
mov
stos
fisttps
mov
jge
cli
or
jg,pn
sahf
in
xor
test
mov
push
sbb
out
mov
dec
xor
sarl
es
mov
cltd
or
out
mov
scas
js
les
xchg
xchg
push
fisubl
xor
pop
scas
hlt
test
or
and
test
mov
add
and
leave
jae
scas
add
inc
mov
sbb
xor
inc
mov
lcall
adc
lock
loopne
xchg
loop
cmpb
mov
pop
clc
aaa
push
xchg
adc
stos
and
push
popf
out
cld
out
dec
push
mov
in
xchg
iret
jbe
dec
cmp
xchg
dec
inc
data16
out
iret
adc
int
mov
adc
mov
in
xchg
ficoms
xchg
xor
mov
or
in
lcall
cmp
inc
ficoml
sarb
pop
lock
imul
xchg
adc
pop
and
and
in
cltd
ljmp
dec
or
push
xchg
mov
sub
and
pop
psllq
push
push
add
imull
push
mov
insl
lret
sub
cs
mov
adc
inc
xchg
inc
sarb
cwtl
mov
pop
cmpb
mov
aaa
shrl
lock
xchg
jb
out
xchg
add
imul
enter
adc
cmp
sub
ret
or
xlat
lods
je
mov
adc
xor
xchg
mov
pop
and
cli
cmpsl
pop
das
mov
movsb
fnsave
pop
andb
popa
jmp
adc
pop
lods
arpl
and
cmp
push
into
test
cmpsl
pop
bound
dec
icebp
cmp
sti
iret
xchg
push
mov
fsubrs
ss
movsb
iret
pop
sub
repnz
les
insl
xor
jp
movsb
cmp
mov
jb
incl
sarl
aad
xchg
push
out
es
pop
sarl
fwait
shrb
mov
std
popa
jp
and
imul
mov
test
inc
std
mov
cmp
jmp
scas
out
jne
test
dec
xlat
adcl
rorb
jge
lock
stos
loopne
dec
sarb
push
inc
movsl
fimull
jle
daa
sbb
shll
sbb
lea
inc
mov
push
bts
sbb
lcall
adc
or
and
pushf
dec
pop
sti
mov
mov
adc
daa
jo
mov
cwtl
lret
mov
repnz
daa
pop
insl
in
pop
sbb
adc
cltd
ret
ss
push
stos
add
jle
push
xor
jbe
stos
xor
mov
or
xor
out
fmull
insb
add
pop
cld
cmp
add
mov
jle
gs
insb
jmp
mov
dec
adc
xor
inc
push
mov
int3
out
jb
out
std
lea
in
icebp
sub
in
mov
adc
mov
cmp
fld
leave
rorb
nop
add
daa
scas
mov
inc
push
add
in
inc
gs
cmp
mov
fadds
cmp
fcoms
or
dec
adc
mov
test
je
xchg
pop
xor
popa
pushf
aam
loope
arpl
arpl
ljmp
push
cmpsb
pushf
jb
enter
mov
mov
cltd
jbe
out
mov
mov
lret
sti
mov
mov
xchg
add
push
add
loop
ret
push
scas
fwait
test
xchg
and
insl
into
pushf
xor
gs
push
inc
mov
cmp
pop
push
int3
sbb
cmp
inc
or
push
fbstp
jb
adc
jl
out
sub
xor
xchg
pop
inc
jg
jecxz
popf
mov
mov
ss
fwait
push
shll
sbb
addr16
mov
ficomps
popa
icebp
xorl
lods
inc
mov
jge
or
fisubs
outsl
xchg
pop
cltd
push
adc
sahf
lock
int3
push
jge
mov
mov
insb
pop
lcall
jb
nop
add
addb
cld
adc
jl
push
sbb
rcrl
dec
mov
out
sbb
nop
das
in
mov
bound
gs
xchg
loop
pop
mov
cmp
dec
xchg
int3
out
loope
inc
and
jl
mov
mov
push
add
insb
rorl
and
cli
popa
or
inc
dec
lods
repz
les
cmp
sbb
lret
into
mov
mov
andl
mov
sbb
sbbl
mov
inc
xchg
icebp
jae
pop
jae
sub
pushf
fwait
push
cmc
test
cmp
nop
or
imul
das
in
mov
jg
mov
testl
ljmp
add
jg
inc
cmp
rolb
pop
arpl
lret
insb
pop
dec
sbb
jmp
sar
cmp
xchg
out
js
out
push
iret
popf
negb
imul
bnd
push
outsw
mov
mov
stos
add
mov
add
push
add
adc
mov
push
scas
cmp
subl
pop
jmp
inc
cmpsl
xlat
mov
pop
popf
push
push
jno
cmp
push
shrl
push
xchg
rcrl
es
stos
or
dec
cltd
or
fisubl
icebp
sub
mov
ds
ds
fmuls
inc
xor
cmp
adc
xor
es
scas
sbb
pop
movsl
outsb
mov
pop
mov
dec
xchg
pushf
sbb
mov
jns
dec
stos
pop
icebp
xorl
cmp
cmp
jmp
mov
out
push
pop
popf
subl
insb
pop
clc
sub
sub
cmp
sub
add
cmpsl
pop
lods
inc
and
sbb
jb
into
fdivrp
add
enter
out
test
repnz
ret
xchg
lods
testl
imul
js
aam
jb
xor
mov
es
ror
jg
lret
xor
repz
xchg
fstpt
jp
or
test
gs
push
mov
ss
adc
push
mov
scas
rcrb
xchg
rcr
pop
cmp
inc
inc
adc
push
ret
push
ds
popl
mov
test
jle
xchg
pop
mov
mov
loopne
adc
adc
ljmp
out
sub
insb
adc
push
rcrl
repz
loop
mov
fwait
or
pop
pop
dec
pop
stos
and
inc
push
push
inc
imul
jns
mov
les
dec
repnz
sbb
pop
push
xor
mov
xor
add
dec
jb
push
mov
cs
mov
fadd
or
push
pushf
cmp
mov
inc
stc
mov
mov
xor
lcall
adc
mov
stos
lcall
jg
pusha
enter
dec
add
add
jno
cmp
and
adc
fcoml
sub
jnp
or
cmp
mov
inc
out
fisttps
xor
push
jg
mov
iret
sarb
sbb
add
xchg
push
mov
mov
sbb
jbe
adc
pop
push
imul
pop
out
sti
pop
pop
cmc
jmp
xor
lods
or
pop
add
push
sbb
mov
xor
aas
inc
fs
lret
push
sub
or
sbb
xor
sahf
in
and
fisttpl
pushf
add
cmp
sbb
ljmp
test
jae
test
xor
pop
cmp
xchg
jmp
xchg
je
adc
or
fidivrs
dec
mov
aas
jmp
xlat
mov
cmp
inc
aas
and
popf
ficomps
into
enter
add
cli
loope
xchg
sbb
int
lret
leave
dec
adc
push
popa
mov
bound
imul
lea
cmpsl
mov
inc
pop
in
lds
nopl
std
xor
pop
scas
ss
call
stos
and
cmp
xchg
lret
and
mov
xlat
inc
pop
mov
lret
cmp
aad
imul
std
xor
sbb
insb
adc
mov
dec
sbb
push
cmpsb
cld
lea
cld
mov
adc
cwtl
pop
mov
jae
or
call
push
addr16
lahf
xor
jmp
push
mov
cmp
js
pushf
cmp
cli
mov
inc
push
push
stos
and
xor
bound
shrl
adc
sub
mov
pop
mov
popf
les
cwtl
and
jle
add
stos
or
bound
fmuls
mov
fnsave
xor
fstl
js
rcl
repnz
mov
mov
push
mov
fimuls
and
scas
fstpl
mov
xchg
pop
mov
icebp
push
cmovns
inc
inc
aad
arpl
add
push
shr
jno
je
adc
test
lret
add
xchg
mov
sbb
push
xor
int3
dec
cwtl
aam
inc
mov
inc
push
insb
shrl
and
push
ret
push
movsl
mov
sbb
sbb
icebp
int
push
xor
jnp
xchg
out
les
mov
addr16
inc
dec
enter
movsl
loop
stos
repnz
cmpsl
clc
aam
xchg
add
xor
fnstenv
push
out
nop
testb
scas
clc
sub
pop
imull
jecxz
sub
mov
xor
push
mov
mov
adc
fildll
add
cmp
add
mov
push
cwtl
cmp
cmc
or
pop
cld
sti
push
pop
and
mov
mov
adc
and
adc
in
fimuls
divl
push
mov
or
sbb
add
inc
mov
adc
push
in
js
enter
jl
aaa
cmp
mov
or
jg
add
mov
addr16
and
aas
mov
sub
lahf
mov
xor
test
sub
jmp
lods
nop
add
mov
push
sarb
scas
fstpt
add
jmp
sar
jle
sbb
push
sub
adc
push
cmp
bound
xchg
aam
push
stos
pop
and
aam
inc
test
jae
sbb
adc
loop
mov
ficompl
ret
jle
or
les
and
pop
mov
mov
cmp
out
adc
daa
loop
cmp
movsl
cld
dec
push
fdivr
scas
xchg
fwait
pusha
lret
pop
cmpsl
fistpll
arpl
ffreep
or
out
stos
pop
or
push
xchg
dec
cmp
mov
pop
inc
push
add
call
dec
xor
addb
or
sbb
ja
out
add
rolb
mov
jnp
mov
insl
mov
insb
loop
sbb
and
arpl
xchg
cld
pop
sbb
push
pop
lcall
int
fwait
jecxz
cmp
mov
inc
cmpsb
fisubs
cltd
pusha
out
mov
test
int
imul
mov
scas
xor
or
test
mov
in
sahf
dec
imul
dec
add
ja
jl
adc
orb
jge
or
pop
cli
mov
gs
repz
outsl
std
or
xchg
movsl
jle
push
jle
outsb
jnp
or
push
jb
out
fidivrl
pop
adc
cwtl
js
into
push
xor
sbb
gs
notb
xchg
icebp
shll
pop
xchg
xlat
fcoms
and
inc
inc
push
add
jmp
insl
xor
cmp
xor
imul
lds
nop
jb
push
adc
mov
test
sbb
movsb
mov
add
into
sar
adc
cltd
xchg
sbb
mov
xor
pop
jnp
pop
les
mov
push
lret
outsl
pop
jmp
pop
orb
xchg
inc
pop
inc
icebp
ret
fbld
jnp
shrl
or
pop
test
push
mov
inc
adc
aas
xchg
push
gs
shlb
cmp
push
idivb
pop
in
bound
cmp
in
rcr
push
add
add
jnp
test
in
xchg
cld
loop
jg
pop
nop
js,pt
retw
sub
repz
jle
lods
inc
test
and
mov
pop
sti
ret
daa
xchg
jp
pop
add
stos
xchg
lret
outsl
stc
and
mov
jae
popa
in
lea
sti
fmul
pop
stos
or
ja
pusha
mov
ljmp
mov
mov
or
je
mov
rcl
popf
mov
cmp
fisttpl
stos
gs
adc
adc
fwait
das
push
jl
daa
push
rcrl
fldenv
popa
in
dec
dec
imull
mov
inc
jb
call
test
stos
iret
in
in
mov
add
std
dec
mov
aam
or
stc
jge
insb
and
cmp
lret
and
in
mov
add
or
in
or
mov
jne
xor
cmp
ror
cmp
push
mov
add
stos
xchg
scas
std
data16
cmp
jmp
mov
imul
sub
call
cmpsl
cli
mov
mov
adc
xchg
gs
fucomip
lods
clc
mov
fisttps
mov
jns
cmp
cld
push
aam
scas
icebp
inc
fisubrs
mov
sub
xchg
mov
iret
inc
mov
fucomi
pop
js
mov
add
aas
rcr
inc
dec
testb
mov
cmp
inc
outsl
je
sbb
sub
out
cmpsl
fwait
xor
out
pushf
gs
xchg
sbb
call
xor
test
and
hlt
and
cwtl
into
and
test
cmc
lcall
imul
and
jecxz
sub
pop
sub
test
inc
in
and
stc
jge
xlat
xchg
dec
divb
pop
cltd
bound
adc
jmp
xchg
and
mov
call
jge
not
mov
sub
clc
stc
push
or
pop
mov
out
in
js
xchg
in
insb
pop
mov
xchg
mov
hlt
jmp
push
cmpl
xchg
and
shlb
adcl
pop
push
xchg
mov
mov
imul
lods
and
ja
and
push
pop
xchg
jp
rcr
sbbb
lds
imul
push
lcall
lahf
cltd
inc
pop
dec
aaa
jge
insb
pop
add
or
jecxz
dec
cmp
loopne
shll
fcoml
jge
xor
mov
add
push
adc
or
jae
pusha
xor
imul
pop
test
xchg
sub
aad
daa
incl
jns
lcall
test
je
jmp
mov
and
mov
das
int
push
pop
and
jg
popa
aas
test
incb
dec
cmp
divb
fcomps
fcomps
das
xor
jns
in
cltd
pop
jno
adc
call
push
xchg
mov
insl
cmpl
push
mov
inc
sbb
sbb
je
sub
or
nop
fidivs
test
dec
shlb
inc
lods
inc
in
shlb
push
rcr
adc
idivl
cmc
into
sbb
cmpsl
addr16
cltd
mov
daa
int3
mov
mov
push
add
das
cltd
xor
or
dec
add
aaa
mov
test
fldenv
cmp
xorb
negl
outsl
sbb
dec
test
cmp
push
in
sub
cmp
inc
stc
add
or
pushf
inc
adc
cs
add
mov
add
mov
cmp
inc
dec
cld
sbbb
xchg
push
pop
sub
mov
test
fists
push
daa
cli
jmp
lahf
and
xor
es
jae
in
jb
call
xchg
xor
daa
aad
in
xchg
mov
js
orl
shll
xchg
xor
mov
jmp
cmpsl
je
lahf
aas
test
cwtl
lcall
test
cmc
dec
hlt
jns
popf
mov
int
pop
mov
sub
fldenv
push
outsb
notb
aaa
das
ret
dec
xchg
pop
inc
out
les
testb
and
mov
hlt
xor
icebp
lret
insl
jo
ret
enter
xchg
subb
cltd
popw
jo
jns
mov
shr
mov
imul
dec
push
mov
xor
add
lock
push
jns
das
in
or
jb
into
fcoms
fsub
push
fisubrl
movsb
push
cmp
xchg
insb
xor
or
sbb
jle
sub
jp
or
or
ficomps
call
sub
ds
lds
arpl
sub
fcomps
adc
movq
jo
hlt
sbb
into
stos
mov
mov
aas
shlb
mov
in
mov
pop
cmpsb
and
call
out
ds
mov
fcoml
insl
lcall
jbe
mov
aaa
int
js
pop
push
or
inc
mov
rolb
xchg
mov
pop
mov
xchg
jl
aad
mov
mov
push
inc
mov
fsubs
push
or
dec
inc
fnstenv
mov
mov
out
pop
add
cli
pop
and
inc
cmpsb
mov
mov
popa
inc
jb
pop
sbb
bound
leave
mov
rcrb
jl
mov
dec
sahf
notl
push
inc
cmp
fisttpl
sub
ds
loopne
push
mov
test
lods
sub
mov
mov
jecxz
lock
jp
inc
out
sub
lds
sbb
lret
jb
push
pusha
jne
adc
popf
mov
js
mov
jo
push
leave
xor
lods
inc
ja
or
insb
inc
shrb
addb
add
mov
push
imul
repnz
test
push
cld
test
fidivrs
movhps
insb
jo
rep
lock
ljmp
mov
ficompl
fwait
adc
scas
arpl
adc
es
xchg
test
sbb
jge
cmp
dec
aaa
das
lock
cmp
sbb
lock
dec
and
pop
ret
mov
jb
ss
push
push
adc
mov
mov
dec
add
aam
cmpsl
ljmp
push
sbb
aaa
test
ljmp
loope
popa
mov
and
sub
iret
testb
pushl
mov
jo
dec
fs
cli
and
jle
jg
dec
adc
fildll
cmpsl
jmp
fnstenv
aas
mov
js
mov
jbe
leave
sbb
cmp
inc
into
jle
adc
jb
inc
lods
dec
sbb
pop
mov
aam
xchg
bndldx
incl
addb
or
in
adc
xchg
sub
and
pop
in
pushf
stos
or
sbb
aam
mov
rcrb
test
jg
lret
fimuls
jmp
pop
enter
popa
arpl
lahf
insb
mov
mov
cmp
dec
out
cs
push
stc
cmp
stos
xchg
popf
cmp
or
scas
push
cld
gs
jg
jae
push
adc
push
fnstsw
cmpsb
int3
adc
inc
scas
test
xorb
addr16
push
inc
or
stc
les
inc
mov
cmp
mov
inc
in
hlt
push
jg
cmp
cwtl
ljmpw
add
push
mov
test
mov
hlt
jmp
xor
mov
in
inc
xlat
sbb
adc
imul
mov
dec
test
and
inc
xchg
loope
jbe
out
add
jmp
add
lret
stos
fwait
pop
add
xchg
pop
or
lods
out
cmc
xor
jmp
scas
mov
not
mov
sub
or
xorl
dec
xor
sbb
sbb
rcll
int3
and
inc
push
pop
sahf
cmc
ljmp
xlat
movsl
imul
xchg
add
xorb
or
sbb
sub
dec
lea
and
mov
fs
push
add
pop
into
and
pop
daa
ds
sbb
outsl
hlt
fs
add
cwtl
cmp
call
call
sub
shl
mov
mov
bound
mov
enter
out
push
es
rclb
loop
cmp
mov
out
dec
test
sbb
inc
xchg
inc
mov
mov
mov
push
pop
push
sbb
lret
loopne
pop
mov
and
popa
imul
xor
add
pop
push
pushf
fcmovb
pop
dec
jo
popa
mov
add
mov
shlb
fadds
ja
js
fnsave
inc
sub
test
mov
fwait
stc
dec
fcoml
idivl
push
or
cwtl
xor
inc
xor
mov
push
push
mov
imul
imul
inc
loopne
add
xor
adc
and
cmp
add
push
dec
mov
in
mov
cmp
inc
insl
stos
jl
pop
cmpsb
pop
add
push
test
outsb
fsub
push
jp
jno
cmpb
out
in
movsb
mov
mov
push
sub
xor
lahf
dec
sub
pop
push
sub
adc
gs
push
filds
ds
test
push
fidivs
xchg
cs
sahf
loope
mov
fstpl
out
inc
das
or
mov
push
and
and
sbb
icebp
sub
jne
dec
popa
jne
xchg
daa
lock
jne
imul
cltd
fsubrs
sbb
pop
jae
mov
xchg
cld
lods
xchg
out
mov
je
scas
mov
leave
xchg
sbb
loop
std
stc
xorl
push
jecxz
lret
dec
clc
aad
push
add
int
or
fcoml
mov
test
mov
mov
jl
stos
push
shrb
addl
adc
push
repnz
scas
mov
and
xchg
push
xor
xor
sub
mov
xor
sbb
sahf
lea
push
filds
push
insl
and
dec
sbb
push
daa
stos
add
push
lods
xlat
ret
push
xchg
push
loopne
sbb
pop
rclb
std
push
xor
mov
lcall
pushw
push
stos
push
sbb
repz
mov
in
cmp
test
jecxz
ret
mov
pop
shrl
lcall
scas
xchg
clc
xor
ja
inc
mov
bound
out
lds
gs
mov
and
sub
insb
jnp
ficompl
leave
loopne
dec
jmp
add
adc
inc
xor
pop
and
fs
insb
jb
sbb
add
data16
mov
int
mov
sti
add
sbb
lods
mov
out
andb
pushf
jo
jg
aad
xor
cwtl
lahf
mov
cmc
xchg
bound
dec
push
shr
lods
mov
pop
mov
mov
ficomps
test
xchg
mov
pop
inc
aad
and
and
add
sub
pushf
mov
sbb
inc
cmpb
imul
insl
lds
cli
pop
inc
int3
adc
std
jno
lret
jg
mov
mov
repnz
xor
push
out
jecxz
fwait
ret
stos
fsub
data16
mov
xchg
cld
lahf
gs
inc
push
shr
mull
pop
mov
rorw
and
add
dec
jne
mov
jbe
loop
mov
inc
cmp
and
push
jae
bnd
fadd
jge
jmp
pop
jl
xchg
or
jae
subb
dec
scas
movl
addl
divb
pop
cmpsl
mov
push
and
call
lods
pop
std
adc
sbb
ret
push
cld
mov
call
pop
fcmovnb
out
shrl
jge
xchg
lret
adc
jp
negb
test
les
js
ss
jle
scas
sbb
int3
adc
test
cs
jo
jp
inc
scas
jecxz
mov
inc
xor
pop
jg
cmc
stos
xor
dec
stos
hlt
push
lret
adc
jo
push
outsb
jle
or
gs
in
mov
push
test
or
ret
movsl
add
fs
addl
in
cmp
stc
pop
mov
mov
mov
insl
inc
sub
pusha
and
and
or
fldl
cmp
pop
and
leave
addb
mov
fildl
scas
sahf
ficomps
dec
xor
pop
mov
jns
dec
xor
dec
inc
dec
iret
mov
mov
sub
stos
arpl
fildl
cmp
push
loope
fstps
popa
jae
xchg
sbb
adc
stc
pcmpgtd
int
lock
push
push
test
ss
test
mov
in
mov
fwait
push
sbb
adc
inc
clc
mov
mov
dec
fidivrl
mov
xlat
leave
xchg
imul
sub
inc
mov
adc
arpl
mov
add
fisttps
jle
sbb
lret
das
inc
jle
push
add
sbb
lret
sti
cmc
xchg
push
push
dec
adc
mov
bound
or
inc
xor
std
adc
mov
cmpsl
outsb
pop
movsb
push
mov
pop
mov
sub
gs
mov
adc
sti
sub
dec
jb
mov
mov
dec
fcompl
call
cmp
push
xlat
or
mov
mov
or
sub
iret
add
in
aam
lea
sub
push
loopne
iret
pop
bound
fs
xchg
mov
pop
popa
cmp
or
cmc
sub
xor
mov
mov
cmp
ret
lods
jae
push
jp
popa
push
lret
adc
andb
cmp
pop
or
stos
add
cmp
das
mov
cmp
in
push
xlat
push
bound
push
int3
popf
daa
insb
sbb
add
push
inc
movaps
fsubl
lds
jb
jp
dec
imul
jns
sbb
out
test
into
leavew
cmpb
push
cmpsb
xchg
cli
popf
jle
outsl
jg
mov
arpl
xchg
xor
jne
jno
lds
js
mov
push
aad
imul
add
ja
ss
xchg
icebp
or
test
loopne
sub
sub
or
lret
das
iret
in
movsl
cmp
jnp
pop
mov
insb
testl
test
or
dec
loop
push
jp
dec
add
std
out
aas
jecxz
jnp
sub
adc
das
sahf
mov
jne
cmc
push
ret
enter
mov
daa
mov
xchg
cmp
add
les
inc
inc
cltd
add
outsl
adcb
sahf
outsb
push
repnz
cmpsl
icebp
insb
mov
push
ret
in
pop
cli
popa
lods
or
sti
pmaxub
dec
filds
in
xchg
mov
cld
pop
aad
rclb
xorb
mov
inc
shrl
sub
mov
add
rcl
cwtl
aam
xchg
mov
js
mov
xlat
movsl
sbb
inc
aam
in
xchg
xor
pop
ljmp
loope
mov
sbb
mov
mov
dec
in
sti
mov
dec
and
mov
dec
push
ret
arpl
dec
cmp
xchg
outsb
scas
pop
jmp
mov
jge
xchg
inc
loopne
adc
aad
mov
sbb
and
mov
xchg
fists
cld
xchg
iret
das
out
lea
adc
lock
jecxz
sub
or
pop
fdivrl
push
mov
add
or
add
xchg
test
or
cli
jne
stos
jb
mov
rcrl
orl
ss
cmp
test
mov
sbb
clc
sbb
xchg
inc
pop
test
nop
sbb
mov
mov
and
xor
mov
int
out
xchg
loop
xchg
dec
fidivrs
jmp
jge
push
push
mov
cmp
test
cs
cmp
adc
pop
jg
imul
xchg
sbb
loopne
push
add
pop
inc
jo
mov
sbb
int3
loope
sbb
out
sub
cmp
cmpsl
cwtl
fsubl
mov
push
dec
push
mov
sub
or
xor
pusha
adc
enter
ss
xchg
test
jnp
sub
loope
xchg
shlb
pushf
cmp
mov
aam
mov
out
xchg
fsub
mov
and
xor
fdecstp
inc
adc
jne
arpl
dec
stc
mov
ss
and
das
adc
cwtl
dec
rcr
add
xor
adc
sub
jmp
aam
mov
lock
test
iret
pop
xchg
mov
repnz
push
nop
add
cmpsb
aas
js
addb
cld
pop
mov
mov
mov
and
cmp
mov
and
sbb
test
test
or
outsb
sub
dec
cmp
sbb
pop
jne
in
sub
mov
mov
mov
dec
inc
movsb
xor
andl
and
xchg
mov
inc
mov
pop
sbb
sahf
lods
ja
popf
jge
mov
mov
xchg
xor
pop
ds
lds
ret
xor
sub
sbb
scas
adcb
jbe
outsl
dec
xchg
adc
fwait
loopne
add
cmp
loope
adc
sbb
pusha
rcl
cmp
xchg
ret
cmp
mov
fidivl
fiaddl
js
xchg
push
dec
mov
loop
inc
jmp
inc
pop
rcrb
jo
push
lret
dec
push
movsb
clc
pop
pushf
sub
and
loope
sbb
sbb
jo
mov
fldcw
or
jns
fldcw
lock
xchg
adc
push
js
lock
jnp
jns
fcmovnb
mov
cwtl
cltd
pop
mov
call
pop
jge
aaa
inc
mov
lea
and
mov
add
insl
test
stc
sahf
mov
cmp
scas
cmp
jl
cmpsb
int
cli
push
xchg
xor
and
dec
sub
push
sub
lcall
xor
and
ss
in
insl
jno
add
sti
push
lahf
jb
adc
dec
mov
addr16
mov
xchg
mov
push
cmp
ds
pop
mov
lods
mov
insl
cmp
and
loop
push
xor
mov
test
push
faddl
mov
sbb
rcrl
into
mov
fistpll
call
pusha
addr16
pusha
and
pop
sti
outsl
popa
std
fwait
dec
pop
mov
fcomip
adc
push
cmp
sub
push
iret
dec
jg
add
mov
adc
add
mov
lds
out
setle
push
xlat
sbb
dec
adc
or
or
std
cs
shrb
jbe
add
je
lahf
mov
mov
pop
ficomps
clc
jns
mov
push
ret
mov
nop
or
xchg
sbbl
push
jl
push
mov
ret
xchg
out
les
pusha
mov
jge
iret
mov
add
lods
cmpsb
inc
ret
insb
jg
testb
push
adc
addr16
jno
mov
mov
and
sub
jbe
lock
mov
mov
adc
out
dec
std
adc
scas
pop
jbe
jb
jns
inc
sbb
and
push
cld
js
sti
push
arpl
push
add
in
lret
xchg
gs
stc
and
sbb
mov
loop
and
mov
cmpb
sbb
hlt
add
jle
loopne
xchg
adc
cld
inc
mov
loopne
in
cmp
sbb
scas
mov
cmc
push
stos
jne
sub
test
inc
out
fcmovb
test
mov
cmpsb
push
fisubs
mov
sbb
je
or
test
aaa
sub
icebp
mov
or
cmp
mov
stos
lods
or
aaa
adc
xlat
comiss
xor
adc
xor
mov
or
movsb
mov
xor
add
aad
xor
pop
loop
cmp
roll
or
fs
sarl
into
cmp
cmp
bound
xor
push
dec
sub
stc
push
aam
leave
sbb
mov
ja
mov
test
clc
xchg
pop
hlt
es
jecxz
xchg
dec
cltd
jle
jae
mov
push
lahf
aam
ret
or
add
xor
pop
mov
inc
lcall
sbb
xchg
stos
jae
sub
ficompl
sub
enter
imul
mov
icebp
outsl
lret
jnp
test
and
cs
leave
int3
xchg
mov
dec
outsl
in
mov
iret
fstpl
adc
nop
or
cmp
mov
sub
enter
jp
cmpsl
aas
mov
push
fsub
cmp
sbb
out
popf
lea
xchg
xchg
bswap
mov
fdivl
subl
ljmp
push
loope
jecxz
or
loopne
lret
adc
fs
adc
test
sub
aam
push
insl
xor
shrb
jno
xorl
sub
addr16
or
jge
cmp
xor
loop
inc
stc
dec
xlat
push
nop
fwait
mov
or
pop
xchg
dec
ds
pop
sub
sub
adc
dec
lret
mov
pushf
cmp
lds
dec
cmp
push
adc
mov
push
es
stc
adc
or
mov
add
shll
or
add
or
inc
dec
mov
jg
xchg
cmp
clc
and
out
imul
xchg
rolb
adc
jp
lcall
adc
mulb
pop
int
dec
sahf
cmpsb
out
lds
imul
lods
int
mov
adc
and
xor
pop
idivl
xchg
pop
jg
jge
or
les
and
xor
es
inc
jl,pn
xor
cmp
loopne
movsl
out
jmp
or
lret
loope
int
mov
hlt
js
mov
add
sbb
cmpl
mov
clc
jge
or
arpl
inc
test
jnp
add
inc
push
mov
pop
cmp
jmp
or
xchg
lds
push
cmp
insb
add
mov
cmpb
pusha
mov
into
shl
nop
cli
int3
lret
imul
mov
inc
shrb
inc
xchg
pop
inc
aad
xchg
jbe
out
test
lret
jae
sbb
out
inc
sbb
loop
rcr
movsb
repnz
pop
jns
and
icebp
push
or
push
jno
xchg
pop
lods
jb
sub
es
or
fwait
cmp
mov
add
mov
push
dec
and
add
xchg
and
cmp
push
outsb
and
jecxz
cwtl
xor
test
cld
cli
notl
pusha
into
stos
xchg
xor
xor
push
ds
mov
push
lahf
xor
mov
mov
insb
dec
movsb
cmp
repnz
and
aad
push
xchg
popf
xor
insb
movsl
hlt
ja
pop
in
dec
movsb
or
pop
nop
xor
adc
push
adc
imul
daa
jne
mov
mov
mov
inc
sbb
add
add
fsubrp
mov
adcb
stos
sub
xorb
clc
cwtl
pop
jne
es
pushf
and
js
ret
mov
andl
xchg
add
in
iret
shrl
add
cld
jmp
push
je
out
daa
mov
les
mov
or
fcompl
imul
ja
and
jmp
popf
mov
mov
mov
inc
testb
mov
mov
xchg
and
int
dec
cmpsl
add
mov
mov
jbe
push
data16
out
ret
lret
jae
lret
inc
adc
dec
cmc
popa
push
leave
outsl
aas
loope
xchg
sbb
aad
pop
inc
mov
jmp
fists
cmp
fwait
mov
push
lods
pop
mov
sbb
lret
jl
inc
into
jns
leave
jnp
icebp
bnd
push
jge
dec
das
pop
scas
adc
into
out
not
bound
cvtps2pi
push
mov
mov
add
adc
jnp
shlb
out
aas
push
ljmp
loope
fisubs
ja
jns
sub
js
frstor
or
pop
cmp
lock
jo
push
jecxz
fisubrs
jnp
xchg
lock
mov
jae
mov
inc
sub
xor
int3
xor
push
es
lahf
jns
jno
push
jp
push
xor
inc
cmp
pusha
aad
push
lods
mov
cwtl
jg
cmp
pop
fstpt
cmp
jp
lea
imul
xor
int
xchg
add
sbb
push
aad
rcrb
dec
cmpb
hlt
mov
or
cmpsb
sbb
adc
mov
out
adc
add
lods
into
pop
mov
hlt
fsubrp
enter
dec
pop
out
inc
cli
ja
xchg
xor
cmp
ret
lret
insb
js
lret
cmc
fxch
xor
xor
mov
and
insl
push
xchg
cmc
jmp
jmp
pop
aam
mov
add
cld
sub
jns
add
xor
cs
push
adc
lret
lcall
leave
mov
push
bound
jp
fistpll
sub
in
adc
mov
fildl
xchg
std
cmp
jnp
push
shrl
nop
lea
ja
push
sbb
jno
js
adc
ja
enter
iret
lods
scas
push
pop
in
jb
addl
mov
aaa
mov
test
repnz
push
dec
inc
outsb
sbb
ss
dec
loope
pop
repnz
pop
stos
mov
jmp
lret
sbb
adc
mov
sahf
popf
cmp
jge
dec
das
xlat
cli
mov
pop
push
jg
push
sar
in
add
inc
add
ror
ljmp
xchg
hlt
clc
add
rorl
lds
loope
pusha
or
inc
mov
lahf
cmc
inc
int3
inc
xor
leave
dec
push
xchg
cmp
adc
adc
in
mov
cmp
jmp
xor
mov
adc
push
repz
add
push
jle,pn
or
push
sbb
hlt
bound
mov
repz
jmp
jle
xlat
fidivs
inc
jecxz
jg
push
imul
add
cld
jge
xor
xor
jno
scas
mov
dec
jns
test
insl
and
test
subb
cs
or
mov
jb
jnp
sbb
xorb
jp
outsb
incl
ss
xor
arpl
and
lods
das
rcl
mov
loopne
cmpsb
jnp
adc
scas
rcll
jne
or
hlt
in
jne
mov
andb
or
add
push
mov
mov
aad
and
insl
shlb
loop
out
or
out
or
mov
das
jg
sbb
mov
or
add
push
js
xchg
mov
test
xor
mov
cmpsl
lret
addr16
out
inc
cmpsl
mov
or
or
insl
push
xchg
mov
mov
fidivrl
mov
jno
stc
mov
push
adc
mov
jmp
jne
jne
adc
lock
popf
xchg
ljmp
fists
xchg
fnstcw
cmpsb
fadds
mov
cwtl
dec
enter
fcmovnb
sub
cmp
xor
test
sub
jl
aad
test
dec
mov
adc
shrl
xchg
les
adc
push
lret
into
or
leave
daa
stos
inc
lods
mov
xchg
xlat
pop
outsl
jae
enter
idivb
inc
into
aad
fdiv
pop
jae
push
cmp
cmp
mov
jae
dec
ret
mov
fdivl
in
imul
stos
push
mov
popf
or
lods
push
hlt
pushf
xlat
inc
jle
push
inc
enter
and
xchg
into
ja
cmp
mov
sbb
lods
in
jecxz
nop
mov
jbe
outsl
push
mov
shrb
jb
fstl
xchg
ljmp
xchg
xchg
cmp
mov
xchg
notl
aam
popa
xor
dec
stos
into
stos
sbb
sub
cld
pop
sub
stc
jmp
sbb
mov
xor
mov
and
daa
pop
or
sbb
in
fstp
ds
scas
dec
xchg
es
in
push
cmpsl
dec
insb
push
mov
dec
adc
add
daa
rorl
and
jne
inc
inc
je
jl
hlt
ror
loopne
sub
and
pop
or
and
add
mov
dec
popf
cltd
inc
repnz
pop
pop
fadds
addb
nop
popa
inc
xchg
shll
pusha
repnz
pop
mov
jne
in
xchg
sbb
insl
lret
fcoml
dec
inc
or
test
mov
pop
fnstcw
sub
sub
es
mov
adc
test
xchg
cmpsb
sub
daa
pop
jle
data16
jbe
loop
lret
imul
xlat
inc
fs
leave
ja
adc
cmp
rclb
imul
or
jb
jg
pop
stos
mov
push
test
icebp
or
sbb
cli
sub
jle
outsb
xor
jge
add
xlat
xchg
push
in
add
repnz
dec
xor
popf
and
imul
sub
push
daa
xor
push
push
push
inc
inc
lds
xor
iret
xor
loop
jecxz
test
dec
or
int
call
sbb
inc
test
xor
sbb
cld
es
mov
mov
sub
movsb
popa
inc
stos
iret
das
or
leave
cmp
in
test
dec
sub
lahf
inc
sub
adc
jp
xchg
cmpsl
xor
cmc
lcall
int3
outsb
imul
in
js
cmp
movsl
je
popa
dec
dec
cmp
mov
jmp
and
test
sbb
add
das
dec
je
fwait
mov
xor
xor
shrb
push
jg
adc
nop
pop
push
jno
cmp
adc
fs
xchg
test
jp
jae
fcmove
imul
and
xchg
cmp
insb
out
inc
das
int3
mov
test
mov
cmpsb
fsubs
andb
sub
cmp
bound
cli
stc
ror
inc
fnstenv
inc
repz
sub
pop
out
cmp
xchg
xor
or
roll
xchg
xchg
sbb
ds
stos
pop
cmpsl
shrb
arpl
inc
enter
dec
add
ret
cmp
mov
pop
loope
repnz
push
sbbb
movl
pop
fildll
add
outsb
nop
xchg
dec
notb
js
outsl
rolb
xchg
mov
sbb
cwtl
sbb
int3
dec
jb
daa
jno
add
scas
dec
and
loope
test
outsb
fcmove
pop
mov
loope
mov
mov
imull
inc
dec
loope
leave
push
movsl
cmp
insb
repz
jne
jecxz
pop
add
in
push
sti
adc
stc
lods
fs
mov
push
jle
jl
dec
mov
mov
loope
fsubrl
adc
loope
aam
mov
mov
pop
jns
gs
lcall
sar
and
not
call
inc
out
add
add
pop
movb
outsl
ret
scas
push
lret
pop
xor
inc
mov
ds
leave
jne
movsl
xchg
mov
xchg
int3
xchg
xchg
sbb
xor
cmp
or
ret
or
or
inc
mov
call
dec
stos
push
xchg
jnp
lahf
mov
or
std
pushf
fisttpl
imul
mov
push
or
arpl
nop
sub
add
xor
repnz
mov
rcll
gs
lret
lret
hlt
and
pop
inc
adc
rolb
ja
mov
notl
xchg
cltd
mov
mov
fadds
sub
sub
add
scas
dec
xchg
jecxz
int3
push
dec
add
shld
imul
cwtl
inc
in
fmuls
and
pop
imul
add
and
imul
mov
xchg
and
xor
jo
and
cmpsb
scas
push
clc
call
push
sbb
out
rcr
lret
mov
shll
es
xor
ja
jle
test
pop
bound
addb
pop
addl
test
pop
push
mov
sub
mov
pop
sub
cmp
sbb
fildl
jg
mov
cltd
add
stos
jne
loope
dec
jo
iret
fbstp
fs
push
movsb
rcr
pop
repz
daa
ret
cmpb
mov
xchg
jle
mov
jg
mov
scas
dec
div
pop
mov
cltd
cmp
mov
fcoml
mov
cld
xorl
out
insl
cmp
inc
dec
pop
mov
lods
jecxz
aaa
pushf
sbb
cwtl
ljmp
scas
cli
arpl
jecxz
loopne
adc
mov
stc
push
cmp
lods
mov
out
cmp
push
sarb
adc
nop
shll
ret
in
jb
cmp
add
stos
imul
sbb
cld
sbb
xor
out
adc
inc
mov
push
xor
jle
and
xchg
mov
xor
shll
cmc
or
push
jae
repnz
pop
mov
sbb
pop
inc
cmp
or
mov
cmp
pop
je
push
adc
rorl
loope
jl
insl
push
push
lahf
push
outsl
test
mov
cltd
ljmp
pop
xchg
popf
es
addr16
enter
popf
dec
adcb
aad
adcl
loop
jp
stos
xchg
xor
pop
arpl
pop
or
adc
hlt
in
and
pop
mov
icebp
shrl
es
pop
mov
lds
lods
decb
js
insl
or
mov
aas
and
loop
enter
jae
pop
pop
cmp
addr16
pop
and
ret
rolb
pop
sbbb
add
jmp
cmp
push
in
inc
ficoms
dec
cwtl
cmp
dec
jge
pop
loope
add
cmovp
pcmpeqb
adc
clc
ds
in
cmc
ja
movsl
and
mov
mov
out
daa
add
scas
movsb
shlb
movsl
pop
mov
push
loopne
sub
xchg
aaa
hlt
xchg
dec
dec
xor
insb
mov
and
sub
stos
jo
cld
aas
sbb
inc
mov
xlat
pop
cmp
cmpsl
xorl
mov
xor
push
or
mov
bound
adc
pop
movsb
in
xor
movsb
jmp
mov
pop
inc
ret
ljmp
outsl
mov
jle
fdivl
ss
push
stc
xor
jg
cmp
push
mov
xor
or
mov
repz
mov
add
fwait
popa
cli
pop
push
adc
xchg
scas
stos
sbb
std
jge
shl
sahf
insb
dec
cmp
pop
mov
adc
int3
push
jbe
sbb
xchg
das
push
ljmp
xchg
scas
pop
out
mov
mov
stos
xchg
pop
in
addr16
mov
xchg
sbb
hlt
sbbb
mov
jl
test
movsl
aam
sub
push
add
xor
mov
pop
dec
adc
inc
clc
imul
xor
jle
pop
cmpxchg
notl
cmp
lods
pop
stos
test
cmp
add
cmp
sti
xchg
gs
dec
pop
cli
stos
inc
cmpsb
fsubr
insb
push
inc
mov
aas
add
cltd
mov
test
cltd
imul
mov
inc
das
sahf
ret
cmc
jno
out
incb
pop
sbb
dec
mov
cld
loop
test
cs
stos
lret
out
pop
mov
in
inc
insl
add
cmp
iret
xor
out
ljmp
popa
ffreep
or
mov
imul
add
or
mov
add
cmpsb
and
lret
in
dec
gs
test
aam
sbb
xchg
pop
dec
sub
mov
push
test
out
stos
push
jg
and
lds
push
das
jmp
push
mov
aaa
pushw
jge
pop
gs
bnd
fistpl
sbb
pop
cmc
push
cmpsb
and
xchg
test
shll
mov
cli
or
mov
insb
fucomip
add
outsb
and
jno
mov
aaa
push
popa
mov
push
cmp
pop
xchg
loop
mov
or
lods
xchg
in
jecxz
pop
ss
dec
outsb
hlt
pop
push
popa
jo
clc
push
scas
lods
push
jne
fsts
mov
inc
bound
call
popl
aaa
in
sbb
into
test
inc
xchg
icebp
adc
daa
mov
pop
inc
xor
movsb
movsb
cmp
mov
xchg
xlat
std
enter
loop
fiaddl
test
cmpsb
inc
pop
inc
sahf
or
les
sarb
fimull
sub
inc
inc
inc
xlat
xchg
jae
sbb
adc
pusha
repz
push
mov
and
push
xlat
pop
lds
imul
sbb
cmp
popf
xchg
pop
mov
sbb
sbb
ror
gs
sbb
mov
pop
pop
or
pop
out
mov
in
icebp
bound
in
cli
fnsave
loopne
push
movsl
jo
subb
or
xchg
mov
lock
fwait
push
cs
sub
sub
pop
mov
notl
add
test
icebp
je
ret
inc
adc
push
popf
and
lea
inc
push
dec
pop
out
xchg
pop
shll
repnz
xor
cltd
mov
lcall
int
jp
and
sbb
dec
ljmp
enter
sub
mov
outsl
and
adcb
mov
or
add
add
push
clc
int
jge
xchg
bound
mov
push
push
mov
add
mov
mov
pop
adc
cmp
add
adc
push
ljmp
hlt
insl
and
mov
in
xor
push
lods
sub
jg
and
xor
int
jbe
fstpt
jl
popa
adc
add
pop
js
adc
fildl
xchg
mov
fldt
lock
cmpsl
sub
mov
push
test
fs
inc
mov
cld
loopne
aaa
data16
mov
fdivrl
int3
sar
lock
push
popa
dec
mov
scas
cmp
mov
je
xor
push
xor
or
in
lock
pop
lds
jne
out
mov
rcl
pusha
in
xchg
call
cmp
scas
fdivr
sbb
dec
mov
scas
jle
push
ljmp
add
mov
out
mov
lods
dec
sahf
dec
pop
mov
cmpsl
aam
xor
fwait
jle
xor
xor
ja
xchg
mov
inc
shrb
nop
in
sub
pop
cmp
adc
sub
xchg
mov
add
pop
sub
and
sub
pusha
mov
jmp
sbb
or
ds
mov
es
ret
negl
or
mov
jno
adc
lock
mov
insl
insb
mov
adc
pop
dec
std
sbb
mov
rcrb
ds
mov
push
inc
or
outsl
scas
and
int
push
stos
fiadds
sbb
add
xchg
unpcklps
push
xor
leave
cmc
test
sub
sub
inc
or
ss
ss
icebp
pop
mov
jnp
imul
movsl
mov
adc
jbe
and
das
imul
pop
addl
cvttps2pi
fmull
in
mov
rolb
pop
sub
negb
push
jne
ror
loop
mov
mov
fstps
and
adc
push
add
outsl
daa
push
sahf
and
jle
xchg
xlat
dec
xchg
add
aam
into
mov
mov
dec
ja
aam
xor
js
cmpps
inc
in
repz
les
cwtl
push
adc
popa
loope
cwtl
push
mov
jmp
inc
pop
pop
ret
pop
ss
inc
shll
les
mov
andb
inc
cmp
or
cmp
jg
mov
notb
push
inc
sub
jecxz
push
call
bound
sub
mov
gs
push
mov
xchg
push
pop
adc
addr16
stc
mov
cwtl
cmp
out
sar
stos
out
adc
mov
inc
int
cmc
filds
sbb
scas
inc
pop
sub
icebp
cltd
sub
fsubp
clc
aad
cmp
lahf
jb
test
and
and
mov
rcrb
cmp
jo
adc
fistpll
xor
xabort
cltd
sub
push
sbb
bound
xchg
out
fadd
in
enter
mov
lahf
mov
addl
xchg
pop
lret
xlat
xor
fmull
pop
or
sub
cmp
xchg
ljmp
add
into
sbb
and
mov
mov
shl
in
jge
push
lret
add
sub
int3
mov
dec
iret
push
push
push
dec
sbbb
mov
gs
int
inc
lods
sub
inc
mov
addb
and
mov
jmp
add
out
mov
int3
xchg
scas
push
daa
imulb
dec
cmp
out
sarl
xchg
in
shr
stos
imul
loop
sbb
push
jp
pop
mov
add
js
icebp
divl
or
fcom
push
dec
loope
jne
leave
mov
inc
jge
push
dec
clc
ret
jl
mov
cld
shlb
mov
add
es
mov
jge
lret
sub
sbb
stos
dec
sbb
imul
jne
lret
add
mov
push
inc
pop
rcrl
fstps
pop
adc
xlat
push
push
and
lods
pop
das
add
and
fistl
xchg
out
mov
add
dec
jmp
mov
popf
dec
les
dec
xchg
mov
xor
je
les
xor
push
mov
lret
bnd
pop
cltd
inc
xchg
repz
aad
aaa
xor
enter
mulb
sbb
adc
mov
ret
stos
dec
out
sbb
mov
loope
js
jno
std
subl
lods
rep
xchg
or
scas
sahf
repz
lcall
stos
cs
mov
stos
mov
enter
cmp
xor
xor
test
xchg
jecxz
cmp
mov
cltd
shll
outsl
popf
popa
inc
popa
push
call
mov
clc
sub
inc
jmp
scas
sar
mov
jmp
imul
mov
pop
lret
sbb
cwtl
or
push
aas
pop
flds
sbb
jo
aam
aas
cltd
stc
fidivl
push
sub
sub
xchg
mov
das
cli
je
pop
jbe
in
ficoml
loopne
adc
xor
cmp
shll
xor
and
inc
sar
and
add
jno
jne
in
ja
int
aas
push
mov
jo
fs
dec
add
rcrb
pop
cli
sahf
es
mov
dec
ljmp
jg
sub
sbb
data16
jl
lock
leave
fwait
sbb
cmc
inc
jns
add
pop
xchg
lcall
cltd
jne
in
test
push
sub
lret
mov
adc
xchg
jecxz
push
je
inc
and
fiadds
jg
dec
mov
fstpl
mov
jnp
in
andl
jb
scas
cmp
sub
movsl
out
pushf
ror
jnp
lcall
stos
mov
pushf
addr16
mov
cmp
sbb
adc
imul
cmp
jbe
sub
dec
dec
mov
imul
adc
adcb
lret
jecxz
ja
stos
loop
pop
sbb
cmp
jmp
shr
mov
andb
dec
arpl
es
lret
imul
add
mov
mov
pop
inc
cwtl
fsubs
cmp
cwtl
dec
decl
jo
mov
add
icebp
cld
test
cwtl
and
pusha
rorb
data16
add
or
pop
jmp
cmp
ds
pop
hlt
inc
adc
icebp
jb
das
lcall
pop
stos
cltd
sub
xchg
and
adc
xchg
push
cmp
pushl
insl
fnstcw
lods
test
popf
pushl
leave
inc
je
or
rcr
inc
mov
ja
cmp
gs
mov
sbb
mov
lods
push
inc
pop
aaa
or
fwait
rcr
mov
fs
sbb
lret
push
mov
inc
data16
inc
addl
lods
aam
jg
in
dec
mov
or
cwtl
or
inc
rcrb
mov
arpl
jo
xor
loopne
ret
mov
out
mov
push
lods
mov
sub
xor
das
pop
sbb
movsl
lods
mov
mov
jl
mov
stc
push
push
mov
or
push
cmpsb
rol
or
enter
push
aas
sahf
insl
adc
xchg
jae
pavgb
ret
rcr
iret
pop
cmc
xor
test
into
mov
cmp
sti
data16
push
xor
mov
cmpsl
popf
stc
js
gs
xlat
adc
in
insb
loope
inc
scas
xchg
xchg
ss
adc
mov
jnp
sahf
mov
and
xchg
cmpsb
cwtl
pop
sbb
xchg
fistpll
jl
sarl
push
xchg
jl
and
notl
iret
mov
fcoml
fcom
inc
sbb
test
jmp
or
sbb
pop
xchg
jns
dec
jbe
int3
pop
dec
imul
or
das
and
xchg
and
movsl
inc
cmp
mov
fnsave
xor
inc
xor
inc
pop
xchg
loopne
xchg
repnz
mov
nop
jns
scas
pusha
imul
mov
leave
fs
pop
jae
ja
and
into
loope
mov
lock
out
je
in
mov
mov
scas
cmp
leave
lock
dec
das
test
mov
sbb
or
ljmp
jmp
lods
mov
movsb
or
ss
aas
ja
dec
xor
idiv
mov
popa
sub
jbe
mov
or
cmp
xor
cld
out
sub
leave
shll
inc
jg
pop
addr16
mov
loopne
cmp
and
xchg
xchg
xchg
ss
dec
add
mov
cwtl
inc
sub
mov
popa
cwtl
dec
add
arpl
xchg
jge
mov
push
outsl
mov
mov
adc
mov
rcrl
mov
enter
stos
mov
xor
cmp
nop
add
pop
stc
xchg
dec
aas
add
mov
add
dec
mov
ja
testl
add
dec
inc
cmp
fldcw
inc
test
mov
push
or
movsw
and
mov
loop
pop
cmp
sbb
not
ja
mov
enter
inc
xchg
mov
popa
in
cmp
mov
mov
pop
cmp
iret
xor
push
mov
xchg
outsl
jae
stos
xor
add
cmp
test
jnp
sbb
jge
cmovns
popf
outsb
xchg
cmp
cs
movsb
movsb
repz
out
sub
es
and
fadd
notb
dec
das
outsl
ret
cmp
and
repz
into
jb
pop
mov
rclb
inc
xchg
xchg
cmpsl
sbb
imul
jge
fisubl
inc
cmpsl
arpl
in
jns
jae
dec
lret
push
jg
inc
cmc
and
cmp
add
jbe
push
or
fsubrl
repnz
test
jl
popf
stos
dec
subl
or
mov
jmp
dec
push
mov
dec
push
cwtl
imul
jmp
jp
mov
fldl
mov
out
call
xor
in
jge
xchg
lock
jg
fcmovb
dec
sub
sahf
sub
xchg
popa
cmp
sarb
and
or
xor
shrb
mov
adc
cltd
or
and
adc
movsl
loope
loop
aad
insb
mov
mov
gs
mov
cltd
pop
popf
cmp
test
xor
scas
and
push
pop
pop
fidivs
lods
mov
or
add
dec
xor
cs
int3
dec
cmc
sub
mov
hlt
push
push
lret
xor
xor
out
xor
jmp
mov
bound
in
dec
push
hlt
outsb
cld
iret
jge
sbb
pusha
loope
jo
bound
test
mov
or
aad
icebp
xchg
cltd
sub
push
lock
mov
je
pop
addr16
sbb
bound
xor
add
sbb
leave
adc
filds
jg
stos
dec
test
jbe
add
pop
mov
adc
xlat
addr16
imul
aaa
mov
insb
sti
inc
mov
sti
push
xor
or
push
std
popf
mov
add
pop
xor
scas
fsubs
lds
and
loopne
mov
push
in
mov
mulb
fcmovnb
pop
inc
decb
lahf
jmp
and
gs
xorl
mov
jne
sti
push
icebp
hlt
or
jnp
std
cli
sti
push
lods
inc
scas
push
sub
and
xchg
leave
sub
jp
push
pop
stc
test
call
movsb
xlat
inc
push
or
cmp
imul
mov
pop
cmp
out
aas
inc
push
mov
or
lret
push
lods
pushf
int3
xchg
sub
dec
xchg
cmpsb
add
xchg
pop
clc
push
jbe
je
subb
xchg
les
pop
dec
adc
mov
jg
call
lds
hlt
xor
mov
cmp
pop
mov
rcrl
popl
sub
pushf
aad
das
inc
shl
inc
xor
jmp
test
aaa
popf
movsl
pop
mov
out
mov
mov
out
lret
cmp
push
ret
inc
das
cmp
pop
call
enter
inc
mov
cmp
adc
add
push
add
inc
sbb
int3
in
adc
cmp
add
test
aad
mov
inc
xchg
dec
jae
addb
std
aam
test
mov
jle
pop
mov
xor
shrl
add
cs
das
cmpsb
rcrb
repnz
mov
mov
lods
cmp
les
jecxz
push
fcoml
cltd
adc
repnz
push
pmuludq
sahf
adc
ja
sbb
lds
cmpsl
lret
data16
mov
xchg
mov
and
jnp
fstpt
arpl
ss
jae
mov
xor
or
bound
mov
xor
pop
sbb
mov
jmp
inc
inc
popl
mov
cwtl
push
daa
aam
fbld
sub
push
shrb
pop
icebp
xor
adc
cltd
daa
fldenv
adc
pop
mov
xorb
sub
mov
inc
sub
adc
fsubrl
lock
mov
pop
jmp
mov
mov
int3
shr
pop
lods
fisubrl
scas
mov
es
fwait
inc
xor
mov
pusha
lds
pop
leave
or
movsl
dec
nop/reserved
adc
ljmp
pop
shrb
ja
sbb
cld
dec
andb
int
cmpsl
sbb
add
lret
pop
add
push
add
rcrl
iret
mov
adc
sbb
lret
mov
xchg
mov
imul
fcomps
popf
pop
clc
testb
adc
scas
outsl
sub
sub
js
xchg
aam
pop
pop
dec
popf
push
out
sbb
push
mov
out
jge
mov
outsb
jb
adc
jns
jno
ds
int3
lcall
fidivrl
xchg
xor
arpl
ds
and
mov
or
enter
cmpsl
adc
pop
pop
bound
adc
mov
pop
pop
jmp
stc
in
push
fisubrl
sarl
test
mov
cmp
es
xchg
fdivrs
mov
pop
sti
cmpsl
xor
clc
adc
cmp
stc
mov
push
jne
stos
call
jecxz
out
test
jmp
jnp
mov
insb
sub
lods
add
insb
jb
test
adc
mov
shrl
shr
xchg
test
loope
leave
xor
inc
rolb
fwait
xor
or
dec
shll
fsubl
testl
fmull
rcr
jp
je
stos
fdivr
dec
xchg
mov
subl
out
mov
xchg
cmc
ret
gs
das
xchg
jg
jecxz
lea
in
xchg
maxps
inc
jle
and
fldl
xchg
arpl
add
add
jae
stc
lods
in
adc
rolb
aaa
xchg
lds
cmp
fsubrl
mov
dec
lods
hlt
inc
mov
jmp
popa
or
dec
loope
xor
add
call
nop
movntps
sbb
sub
mov
jae
jg
inc
xchg
sub
push
push
mov
jecxz
xorl
sahf
mov
rol
xchg
xchg
test
mov
add
xor
rol
and
cltd
int
mov
imul
mov
lcall
std
in
ret
inc
pop
hlt
push
fs
or
dec
pop
sbb
mov
cmp
dec
ds
sahf
add
mov
mov
bound
cmp
add
sbb
adc
sbb
repz
and
loope
push
xor
sub
or
inc
mov
popf
insb
popa
or
cmp
sbb
cmpsb
call
dec
jmp
and
stos
pop
pop
xchg
lret
sub
inc
sub
dec
sbb
sahf
xor
arpl
pop
call
fisubs
mov
add
je
aaa
lods
jge
aas
clc
loopne
fdivp
adc
adc
lock
dec
jl
cmpsl
lcall
gs
push
pop
mov
or
push
leave
rclb
rclb
and
add
insb
ror
adc
cmc
mov
sub
aas
gs
ret
mov
shlb
mov
fcompl
push
mov
jnp
inc
fisubl
icebp
and
jo
dec
cmpsb
inc
aam
adc
xchg
jmp
pop
push
fs
sbb
xor
add
aas
fstps
mov
inc
jge
fadd
pop
addr16
inc
jae
jbe
out
xor
inc
arpl
ss
ret
and
sarl
shlb
push
jbe
jbe
in
icebp
rol
mov
outsb
aaa
xchg
lds
lds
or
scas
repz
add
mov
lds
xor
loop
iret
sub
dec
stc
shl
dec
leave
outsl
mov
into
pop
lods
nop
lret
subb
jl
dec
jae
jnp
sub
jp
and
cmp
fstps
pop
sbb
sub
mov
sub
les
adc
add
push
xor
mov
mov
out
mov
mov
mov
add
test
daa
cmpsb
push
mov
xchg
mov
mov
cmc
repnz
cld
jle
stos
sub
adcb
clc
jecxz
dec
cmpb
shr
pusha
inc
sub
test
cmp
imul
push
mov
jecxz
pop
dec
or
mov
xor
dec
mov
ja
cmpsl
mov
xor
adc
mov
subps
adc
pop
push
je
negl
fwait
jle
pushl
call
sarl
dec
pusha
mov
push
mov
push
add
xor
sub
and
outsb
aam
pushf
mov
and
notb
and
and
iret
and
cmp
shll
xlat
in
and
out
loope
jne
lcall
mov
hlt
sub
je
add
jne
pop
cvtps2pd
cmp
pop
dec
mov
xor
into
jge
jae
lret
push
stos
jecxz
cmpsl
rcr
cltd
pusha
xor
xor
push
cmp
sbb
mov
sub
sub
cli
sbb
outsl
repnz
pop
mov
dec
test
test
adc
out
pop
inc
mov
cmp
in
repnz
mov
enter
dec
sbb
adc
adc
icebp
cmc
jl
cmp
mov
inc
xor
lret
adc
sbb
pop
nop
sub
fcomps
and
xor
rclb
rcll
mov
adc
out
aas
push
push
jnp
jbe
jp
shll
pop
sbb
mov
pushf
fistps
lret
xlat
or
mov
scas
adc
repnz
or
push
addr16
xchg
mov
insl
inc
adc
test
enter
test
mov
push
mov
sbb
xor
insb
out
lds
in
in
or
jae
outsb
jne
or
xchg
dec
adc
fsubs
jae
imull
cmp
jg
cmpsb
dec
mov
movsb
pop
testb
and
adc
mov
jne
mov
mov
xchg
and
les
outsb
hlt
push
inc
mov
ret
sbb
and
sbb
lea
movsb
dec
movsl
vandpd
roll
loopne
cltd
mov
push
call
pop
iret
frstor
in
es
aad
dec
lahf
mov
cltd
into
mov
pop
into
jl
bound
fsub
jbe
dec
push
hlt
inc
je
lds
adc
gs
pop
loopne
gs
mov
pop
xlat
outsl
lahf
pop
push
stos
jae
ret
mov
mov
rolb
push
jg
mov
add
and
arpl
stos
cltd
stc
cmc
xor
mov
mov
jbe
out
adc
nop
jne
push
mov
imul
sarb
cltd
into
lahf
test
rclb
xorl
bound
fdivl
cmp
sub
stos
test
mov
sub
push
xchg
sti
fadds
xchg
test
jmp
push
in
scas
sub
int
and
push
xor
push
fcoms
decb
ljmp
sbb
ds
add
xchg
sbb
sub
push
cmp
sbb
or
push
cs
test
mov
rcr
pushl
cs
mov
lock
fidivrl
lahf
or
and
xchg
xor
mov
sub
test
push
push
and
push
ja
cwtl
fs
popf
xor
mov
jl
iret
shlb
mov
sub
in
cld
aaa
mov
push
cli
push
shrl
add
out
adcb
leave
or
xor
push
add
cmp
jp
ja
repnz
cmp
enter
loopne
jmp
test
or
ret
leave
scas
and
push
inc
sub
mov
cmp
test
or
and
pop
in
leave
nop
inc
or
int3
dec
jno
xor
aad
jns
or
mov
pop
jnp
lods
call
xor
mov
popa
xchg
push
inc
xchg
arpl
push
xor
imul
pop
pop
mov
push
mov
cs
aaa
sbb
fisttps
cmp
int
xor
mov
push
outsl
cld
fldcw
dec
mov
pop
push
push
in
mov
popf
popf
dec
and
int
lods
xchg
scas
xor
sbb
push
mov
mov
call
inc
icebp
mov
mov
aad
dec
pop
out
repz
adc
pushf
push
lret
mov
and
mov
mov
sbb
fs
or
dec
addr16
push
ficompl
fnstsw
les
outsl
fimuls
mov
cmp
jle
insb
lock
fdivl
dec
mov
xchg
inc
inc
push
dec
call
inc
cwtl
out
fistpl
xor
rcr
add
imul
push
fisubrs
xor
pushf
divl
aaa
mov
lods
popf
inc
fidivs
mov
daa
sub
mov
lret
stc
dec
loopne
add
pop
mov
or
ret
call
movsl
cmc
add
aad
sarb
out
mov
mov
ljmp
test
sti
cwtl
lahf
xchg
cmp
or
fldl
jns
dec
push
fbstp
mov
mov
jl
jnp
je
push
cmc
or
jnp
push
dec
mov
lahf
out
add
mov
mov
mov
jne
icebp
jmp
test
inc
mov
and
xor
sbb
adc
sub
sti
les
jnp
xchg
lods
call
fldl
addr16
adc
std
ljmp
mov
push
into
sub
pop
mov
adc
sti
add
test
loop
push
aaa
fcomp
lcall
popf
and
sbb
test
dec
orb
pop
mov
pop
cmp
mov
out
out
and
test
rcll
or
dec
mov
mov
push
sbb
push
cmpsb
clc
imul
aas
imul
int3
jle
xchg
xchg
cmp
push
test
jno
dec
ds
sub
xchg
sti
pop
mov
jne
jne
mov
sahf
mov
mulb
push
lret
pop
inc
dec
xchg
in
adc
xchg
push
xor
outsl
jl
fwait
mov
mov
lret
jns
push
fcompl
in
dec
sub
int
pop
pop
lahf
xchg
push
into
and
subb
inc
repnz
rcrb
mov
mov
fsubs
pushf
xchg
shrb
mov
iret
shll
fld
pop
add
sbb
testl
pop
or
aad
loop
int3
ljmp
shl
dec
lahf
pop
mov
push
jne
mov
inc
mov
daa
jb
adc
cmp
or
aaa
mov
notb
mov
shlb
mov
lock
fists
jae
mov
gs
mov
xchg
fildll
adc
sbb
adc
inc
out
int3
dec
inc
cmpsb
out
pop
cmp
ss
push
xor
bndstx
out
pop
inc
aad
xor
mov
aas
mov
fcompl
mov
mov
std
push
dec
mov
popf
add
fcoml
dec
cmpsb
mov
xor
xorb
mov
or
in
js
xchg
xor
xchg
arpl
scas
xor
popa
arpl
mov
clc
xor
hlt
pusha
icebp
adc
push
mov
mov
int
bound
icebp
test
ret
sub
fldl
fwait
xor
sbb
xor
stc
mov
popa
lock
add
sub
bnd
cld
jae
aas
xchg
add
adc
push
jns
xor
adc
shrb
pop
dec
mov
pop
mov
insb
mov
push
inc
sbb
dec
fcomip
xlat
push
cmp
fwait
cmpsl
adc
jge
fidivl
and
das
rcr
insl
push
adc
xchg
int
pop
cs
arpl
sbb
push
push
inc
sbb
jle
sbb
nop
and
shll
mov
in
add
fdivs
leave
into
pop
leave
mov
push
roll
dec
decb
leave
aad
adc
fildll
add
push
cmp
scas
mov
enter
sti
mov
jno
insl
nop
gs
ret
fists
fidivs
orl
leave
push
notb
push
les
jbe
fdivrs
test
xor
dec
xor
lret
xor
popf
out
sub
rcl
rclb
push
adc
outsl
add
cmp
mov
and
xchg
and
faddl
loopne
scas
int3
cwtl
aad
cs
jno
dec
lret
fbstp
mov
and
xor
mov
adc
xor
arpl
int
aas
jmp
mov
arpl
mull
movsb
mov
xchg
fcom
mov
cmpsl
in
inc
and
push
cld
sub
mov
xor
adc
call
jno
rcrb
and
add
and
aam
push
xlat
mov
pop
push
icebp
pop
sub
cmp
mov
mov
out
in
lcall
and
and
inc
jl
cmp
dec
jne
in
or
cld
jge
jle
adc
push
lcall
jmp
ret
into
adc
mov
out
xlat
into
dec
stos
mov
xor
push
lods
xor
aas
ret
mov
push
arpl
and
adc
push
and
sbb
push
xor
lret
or
or
sahf
ljmp
push
ret
rclb
mov
jl
lods
test
fsubs
sbb
imul
ljmp
aad
clc
dec
mov
and
inc
popf
mov
sbb
jno
dec
push
in
arpl
arpl
cs
into
add
push
pop
sbb
mov
cltd
and
xor
inc
cmp
inc
es
sbb
lock
leave
pop
int3
test
scas
push
jb
mov
push
pop
pop
and
sub
xchg
mov
mov
mov
cmpsl
aaa
fmull
loop
or
loopne
lret
test
imul
lods
and
push
and
bound
jbe
pop
pop
xor
enter
adc
outsb
mov
mov
dec
push
dec
ja
and
inc
mov
loop
lds
mov
mov
rcll
es
push
scas
pop
mov
sahf
enter
lock
scas
lock
and
xor
or
addr16
popa
ret
inc
mov
and
push
notb
mov
into
popf
mov
ja
pop
pop
nop
jp
jg
ljmp
adc
enter
and
add
sbb
call
cmp
jmp
rcll
ds
incb
mov
dec
mov
mov
les
jmp
test
sub
fcmovnbe
inc
and
inc
ljmp
lcall
lea
cli
test
bound
add
out
xor
stos
mov
fildl
repnz
jo
cs
adc
js
push
and
xchg
mov
repnz
ss
test
mov
lcall
fnstenv
insl
fs
inc
cmp
cmp
xchg
xchg
dec
xchg
shl
fwait
add
or
sti
cld
fldl
push
dec
mov
xchg
mov
adc
gs
xchg
lcall
sbb
imul
add
nop
ja
mov
lcall
js
lock
mov
les
and
ret
xchg
add
in
mov
fadds
inc
dec
test
jae
mov
fistps
cmp
aam
dec
inc
mov
mov
ret
pop
mov
dec
adc
mov
adc
xchg
inc
sbb
add
int3
jo
mov
push
xor
xchg
cmp
xor
adcb
jb
inc
aaa
push
xchg
imul
sbb
sbb
test
pop
scas
fstpl
cli
pushl
lea
int3
aam
aaa
fsts
xchg
push
sub
jmp
pop
mov
pop
stos
test
pop
add
aad
lock
dec
gs
mov
inc
fisttps
pop
xlat
fcoml
or
inc
into
xor
fnstenv
mul
mov
push
inc
mov
test
cmpsl
scas
mov
xor
in
jb
dec
pop
inc
dec
pop
sbb
xor
loopne
add
insb
jmp
or
jns
ds
mov
aad
ja
lret
add
lea
stos
cmp
dec
mov
sub
sbb
inc
aas
adc
pop
mov
pop
ljmp
sub
push
xlat
stc
pop
mov
add
cmp
dec
inc
out
mov
push
or
add
push
test
xchg
jle
enter
adc
cmc
adc
sbb
xchg
nop
xchg
test
sbbb
pop
aas
pop
loopne
cmc
fs
push
icebp
add
lock
pop
sbbl
addr16
outsb
repnz
mov
int
les
push
mov
iret
pop
clc
cwtl
sub
add
clc
sbb
ficomps
and
mov
aam
dec
lds
pop
loope
fbld
push
pop
mov
jge
into
mov
jle
test
scas
loop
ljmp
jp
inc
cli
movsb
mov
adc
push
test
push
or
out
adc
adc
mov
enter
xor
repz
test
add
mov
jmp
cmpsl
push
jns
out
xchg
test
or
ss
adc
push
aam
push
pop
rcrl
mov
dec
mov
sbb
jno
adc
js
out
push
addr16
cmp
clc
cmpsb
add
pop
fcoms
gs
push
imul
pop
xchg
jp
add
imul
add
mov
cmp
jle
adc
pop
bound
das
xlat
ds
xlat
push
fistpll
je
sub
cmp
mov
cmp
scas
insl
pop
jl
xchg
ds
clc
push
cs
icebp
and
dec
lahf
mov
dec
add
aam
popa
adc
jmp
mov
ss
push
cli
jo
cmc
pushf
dec
stos
outsb
ss
inc
rorb
add
jae
cld
xchg
fsts
sub
arpl
ret
out
rcrl
jge
fnsave
mov
sub
dec
mov
sarb
and
xor
movsb
stc
push
jns
jns
imul
push
in
cltd
mov
or
mov
jb
loope
add
aad
das
sub
ljmp
in
scas
cmp
pusha
cmpsl
xor
adcl
clc
push
ja
mov
loop
stc
movsl
inc
lahf
adc
jbe
and
test
sub
fwait
lcall
fiadds
call
test
fistpll
loopne
dec
xchg
in
adcb
push
scas
lcall
mov
sub
mov
sbb
repnz
dec
xchg
shr
jb
ss
xor
cli
stc
sti
cmpsb
xchg
loop
xchg
xorl
insb
mov
scas
in
cld
fsubrl
pop
jg
cltd
jl
dec
in
add
or
loope
daa
or
sbb
jle
outsl
popf
xchg
test
or
mov
push
test
jecxz
pop
push
sti
sbb
mov
outsl
sub
cmpb
in
pop
arpl
jns
out
xor
orl
std
mov
sub
repnz
popa
inc
sub
jmp
pop
pop
mov
stos
mov
jecxz
shll
dec
int3
iret
test
repnz
shrb
gs
push
in
push
iret
sub
cli
sub
push
ljmp
outsl
aam
pop
or
sub
xor
outsb
mov
ret
mov
daa
xchg
xor
adc
movsb
xor
ss
fnsetpm(287
cs
fs
mov
sub
mov
push
int
xchg
xlat
push
testb
xor
sub
inc
fnstsw
sbb
cltd
iret
push
push
sbb
imul
push
test
pop
fdivrp
adc
add
pop
pop
jl
sub
dec
sub
mov
mov
dec
inc
pop
jp
jle
sarb
insl
jmp
adcb
push
das
sub
call
movsb
and
mov
and
sbb
add
mov
lock
sbb
xchg
jge
es
and
sarl
popf
adc
stos
pop
ds
cmp
fprem1
cmp
test
sub
cmp
push
mov
xchg
aad
jbe
pop
add
cmp
jecxz
sub
sub
push
xchg
xor
cmp
std
sbb
mov
push
cltd
pop
mov
test
arpl
test
xchg
xchg
mov
jle
insb
out
mov
aas
test
push
cwtl
sbb
mov
scas
adc
dec
cmp
test
cmp
out
das
clc
dec
aaa
sub
jecxz
xchg
cmp
lock
test
aam
hlt
or
xor
mov
jb
jno
mov
push
out
pushf
sbb
pop
add
add
popf
push
in
ret
iret
in
ds
dec
cmpsb
cmp
or
insb
pushf
aad
pop
cld
mov
inc
cmpb
jno
lret
je
inc
jae
fstpl
jb
lret
rolb
add
fs
mov
mov
cwtl
pop
ud1
add
mov
mov
lock
lods
pop
jo
sti
mov
cmp
scas
sub
push
dec
fildl
arpl
mov
cmp
push
sarb
xor
cmpsl
sbb
dec
push
or
cmpsb
mov
pop
push
xchg
and
sub
pushl
dec
sbb
xchg
pop
addr16
lock
sub
cmp
pop
sub
repnz
ds
lods
and
lret
mov
pop
in
popa
sahf
cli
into
es
adc
lret
mov
insb
mov
add
xchg
pop
mov
scas
jbe
outsb
lret
or
mov
and
ds
xor
and
adc
fsubp
cmp
lods
test
mov
mov
fiadds
xchg
push
pushf
jl
test
sbb
pop
mov
in
subl
aad
cmp
dec
mov
nop
aas
inc
dec
fdivr
std
out
fsubr
inc
jecxz
pop
push
cmp
ret
ret
pop
fists
stos
fildl
mov
mov
loope
outsb
mov
pop
add
and
xchg
xchg
outsl
inc
cmp
nop
loop
xor
outsl
pop
pop
daa
dec
mov
and
icebp
test
fsts
test
sbb
pop
data16
pop
shr
sbb
sbbl
fst
stos
adc
jecxz
repnz
adc
push
dec
out
stos
aas
mov
mov
mov
jb
pop
test
jae
sbb
add
test
ficompl
mov
xchg
push
int3
sarb
xchg
frstor
sbb
mov
outsb
push
pop
cli
lods
push
and
jecxz
xor
inc
int3
xchg
popa
push
xchg
out
mov
lret
rep
inc
sub
push
sbb
imul
push
ljmp
fsts
aaa
xchg
lods
cmp
imul
cmp
xchg
rcl
ja
sub
xlat
and
nop
loope
into
push
dec
cmc
out
mov
int3
inc
fs
or
fsubrl
add
int3
push
addl
loope
push
mov
ja
sbb
addl
adc
cmp
out
or
pop
fs
lods
into
in
fsubrs
sbbl
dec
cmp
lods
jmp
shr
mov
mov
jle
ficomps
mov
shr
cltd
mov
andps
in
idivl
jp
jnp
test
adc
outsb
out
shrl
mov
ja
es
cmp
mov
sbb
inc
add
scas
or
xchg
mov
pop
jns
outsl
ljmp
mov
inc
cmp
fidivl
ret
pop
test
pop
movsb
adc
int
mov
cld
push
xor
push
or
lods
xchg
sti
movsl
loope
sbb
scas
pop
mov
lcall
and
test
enter
rolb
lret
xor
inc
mov
dec
out
sbb
pop
vpunpcklbw
icebp
rcrl
jb
es
movsb
jl
jo
dec
loope
lods
loopne
push
idivl
ficoml
inc
imul
and
dec
pop
aas
vmovddup
pushf
sbb
iret
jge
out
enter
mov
adc
mov
push
jg
movsl
pop
push
rcrl
out
mov
hlt
pop
lret
add
lret
push
aam
dec
insb
jecxz
outsb
pop
fistl
adc
push
in
and
cld
cmpsb
xchg
or
dec
stc
clc
sub
mov
loopne
pop
dec
std
cmp
pop
xlat
lret
mov
cmp
fs
adc
xor
jp
sub
jp
push
loope
sarb
mov
iret
mov
cli
mov
lret
adc
shlb
xchg
mov
push
fildl
daa
int3
sub
pop
inc
pop
xlat
fwait
jns
cltd
sub
push
lret
test
cmpsb
dec
add
mov
les
andl
lcall
fsubs
aad
and
sub
ljmp
mov
xchg
lret
xchg
rcrb
bound
das
sahf
add
dec
xchg
out
inc
dec
jmp
or
aad
and
sub
mov
sbb
and
sbb
add
push
shrl
mov
aad
cmpsb
jmp
imul
add
dec
sahf
adc
ret
xor
xor
popw
sarl
pop
pop
sbb
dec
lahf
das
lcall
sub
sarl
out
jno
push
mov
add
mov
cmc
xchg
inc
shl
and
pusha
inc
add
add
and
fwait
out
xor
je
arpl
dec
push
mov
adcb
test
out
cmp
xor
jns
sub
and
cli
jbe
sub
ljmp
xchg
or
mov
add
sbb
fs
mov
mov
negl
xchg
mov
cmpsl
ja
loop
out
pop
call
inc
cmpsl
notb
inc
jp
leave
fisttps
jp
push
inc
or
sbb
sub
popa
mulb
sbb
loope
jmp
pusha
add
or
movsb
nop
add
ljmp
cmp
loopne
cmp
outsb
mov
mov
in
ret
lock
push
shlb
mov
aas
andb
cwtl
xchg
fsubs
and
push
imul
push
fbstp
movsl
mov
sbb
outsb
outsb
sub
xchg
push
movsl
inc
loope
pop
push
insl
nop
jl
cmp
push
xor
lret
loop
movsb
sbb
jne
sbb
out
fcomps
andb
pop
addr16
loop
or
iret
sub
jo
pop
inc
shrb
push
test
call
push
dec
imull
cli
jg
dec
icebp
in
push
mov
mov
xchg
adc
test
or
sbb
sub
mov
cmp
add
jbe
cmp
xor
inc
scas
inc
mov
in
cli
jbe
cmp
push
fcomi
iret
outsl
pop
sbb
sbb
or
jb
adc
in
push
push
xorb
inc
pop
adc
push
arpl
stos
int
clc
mov
rcll
add
add
mov
cli
jae
inc
dec
cmp
xchg
arpl
fcoml
sbb
inc
jne
cmpsb
cwtl
cmpsb
or
loope
push
xchg
loope
stos
dec
jbe
inc
jo
mov
cld
push
lahf
dec
jecxz
pop
mov
mov
into
aad
movsb
test
mov
scas
xor
decl
arpl
dec
xlat
or
in
aad
push
xor
int
je
movsl
or
test
aas
jmp
push
push
aaa
cmp
test
jl
sbb
dec
mov
mov
sub
xlat
or
out
fsubrs
dec
sub
sbb
jp
mov
push
fyl2x
xchg
lea
jmp
pop
sub
sti
sub
mov
nop
push
inc
aam
nop
jp
lods
ss
flds
mov
jno
xchg
fcmovnb
add
xchg
js
sub
mov
push
cmp
jnp
stos
repz
xchg
add
mov
js
lds
xchg
loop
jle
pop
push
mov
and
cs
out
jo
pop
repz
inc
xchg
pop
jmp
loop
call
imul
gs
in
mov
jno
mov
push
xor
int3
adc
dec
or
aaa
jmp
imul
pop
mov
cmc
xchg
cmc
add
mov
mov
pushf
call
inc
mov
dec
addr16
mov
mov
pop
hlt
push
dec
and
and
or
in
pusha
jge
jb
ljmp
cmp
fidivrl
fistpll
mov
popa
mov
fs
xchg
adc
push
sbb
pusha
das
mov
mov
add
lcall
dec
cmp
add
fs
jbe
push
push
mov
dec
cmc
stc
cli
call
and
out
jecxz
js
and
lret
or
les
xor
aaa
punpckldq
call
and
sbb
shrb
jne
fwait
icebp
leave
ficompl
aaa
xlat
mov
outsl
pop
pushf
out
call
jno
mov
push
pop
push
or
jp
dec
fwait
or
jnp
in
hlt
push
mov
lret
loopne
jmp
and
in
xchg
mov
lea
mov
mov
arpl
push
adc
hlt
jmp
fistpl
hlt
sbb
popf
loop
shll
mov
jl
js
adc
ffreep
pop
mov
je
jbe
loopne
daa
stos
inc
adc
addr16
leave
aas
sar
testl
shrl
jae
pop
sbb
push
adc
mov
jo
ret
jmp
lcall
ja
mov
mov
jns
xor
xor
loop
push
je
mov
xor
and
es
jle
inc
gs
mov
mov
xor
cmp
inc
push
inc
aaa
and
les
gs
sub
psubsw
inc
sub
mov
into
jge
xlat
mov
pop
mov
jecxz
jae
jecxz
adc
cmp
sbb
outsl
scas
in
xor
fdivrl
lahf
add
repz
pusha
hlt
sbb
pop
movsl
or
push
loop
idivb
fldcw
cltd
aas
xor
loope
push
adc
mov
push
jnp
push
mov
outsl
mov
ja
movsl
sbb
andb
fwait
push
mov
adcl
adc
shll
or
stos
pop
adcb
push
xchg
into
xor
add
addb
lods
jns
test
std
dec
lock
rorl
xchg
pusha
addl
ret
jg
lahf
into
aaa
sbb
and
pop
dec
leave
in
movsl
lcall
push
mov
mov
mov
test
add
push
inc
mov
sub
std
xor
mov
iret
push
in
js
aaa
dec
mov
cmp
jne
mov
xorb
out
sarl
lcall
arpl
fistpll
inc
loopne
dec
pop
sbb
call
scas
lcall
dec
test
mov
xchg
ss
fiaddl
jbe
loop
jbe
iret
pop
ss
add
fidivrs
adc
mov
jbe
jo
jge
or
add
or
mov
mov
dec
insb
and
daa
and
aaa
cmp
push
cwtl
ja
imul
roll
sbb
push
sbb
fs
jge
push
ffreep
mov
push
into
popa
cmc
movb
imul
fidivrs
pop
add
inc
jge
adc
shl
scas
mov
cwtl
jg
aaa
sub
mov
orl
cs
mov
cmpsb
xchg
mov
sbb
bound
inc
ret
and
or
jg
or
xchg
popl
push
dec
fcmovnb
mul
mov
pushl
pop
xchg
pusha
addr16
pop
or
bound
ljmp
cmpsl
sub
les
ja
push
mov
rorb
test
and
xchg
inc
loopne
loope
jb
ja
sub
pop
fs
push
mov
add
add
dec
call
xor
lcall
cmpb
outsl
cwtl
and
xor
sub
push
loopne
jle
mov
dec
int3
and
inc
jge
sti
inc
mov
rolb
in
mov
mov
rorb
mov
arpl
cmpsb
into
stos
sbb
add
dec
sbb
push
sub
or
push
adc
jle
jge
pop
pop
ret
loope
mov
mov
mov
js
pop
xchg
jns
in
lock
jbe
pop
mov
pop
jno
jae
sti
mov
add
fildl
outsb
jmp
lods
ja
lds
cmp
mov
mov
ljmp
ret
adc
jno
filds
popf
dec
cwtl
fwait
cmp
lock
rcll
test
sbb
repz
adc
ficoml
xchg
or
adc
mov
movsb
jo
fwait
add
out
lea
or
hlt
or
sub
dec
fisubrs
push
mov
stc
jae
push
outsl
popa
pushf
inc
mov
mov
in
push
cmp
lcall
out
mov
hlt
mov
ds
jns
loop
and
addb
mov
int3
dec
pop
jmp
div
fnstenv
std
icebp
mov
pop
insl
xchg
sarl
mov
mov
fimuls
xchg
popa
cmp
mov
fstl
jno
push
lcall
fisubrl
jg
scas
cmovle
or
fldt
mov
sub
push
adc
xchg
cltd
mov
mov
cltd
fsubrl
pop
push
stos
fldl
aad
in
aas
lds
add
or
ljmp
jg
out
xchg
mov
lcall
xchg
xchg
dec
imul
rcll
jle
xor
mov
clc
js
syscall
dec
xor
mov
rorb
xchg
add
jo
pusha
sub
outsb
imul
and
jnp
jl
push
add
loope
adc
push
imul
adc
inc
mov
push
mov
out
jg
popf
pushl
js
fsubs
jo
jmp
and
jge
jae
dec
xlat
fcoms
sub
cmp
aaa
and
xor
pop
fnsave
fwait
add
lea
loopne
mov
sub
mov
pusha
sub
sub
jmp
xchg
outsb
stos
mov
sub
into
aaa
mov
arpl
cmp
or
xor
pop
inc
fisubl
push
sub
pop
xchg
cmc
popf
dec
push
mov
sbb
xchg
push
push
icebp
lcall
push
in
ss
aas
mov
xchg
pop
mov
pop
pop
jmp
rcr
push
push
lods
and
fs
jno
jo
es
mov
dec
jnp
test
leave
mov
ret
mov
imul
jnp
or
xchg
fs
push
inc
sub
sbb
std
adc
or
ret
addb
ljmp
or
mov
cmp
dec
orb
sbb
mov
ja
mov
or
mov
negl
mov
pop
leave
inc
repz
or
sbb
mov
pop
adc
je
pop
nop
or
fs
push
incb
jge
push
rorl
cmpsl
gs
push
js
ds
jnp
ret
repnz
inc
or
hlt
dec
adc
jge
repnz
mov
cmp
test
jp
mul
maxps
adc
xor
or
pop
xchg
adc
jno
inc
rcll
sub
push
outsb
pop
adcb
xchg
lea
outsb
cmpsb
inc
inc
fisubrs
outsb
cld
inc
lds
call
mov
sbb
nop
ret
data16
add
subb
and
mov
gs
mov
jg
pop
inc
xchg
rolb
test
mov
in
fistpll
pop
push
scas
inc
xchg
std
mov
or
adc
movsb
xchg
mov
mov
leave
in
bound
bound
pushw
scas
jns
loop
test
mov
inc
adc
pop
cmp
sbb
sub
mov
add
cmpsl
inc
fwait
out
pushf
lds
std
ljmp
fldl
cmp
scas
mov
pop
aam
add
pop
sbb
inc
rcl
sub
addr16
xor
mov
mov
fmull
insb
and
cli
dec
sbb
lods
rclb
insl
mov
in
sbb
xchg
dec
pusha
stc
adc
ss
test
rorb
jne
sarb
aad
sahf
sahf
popf
pop
scas
int
sub
xchg
movb
jg
xchg
out
pop
icebp
sub
enter
ljmp
mov
setle
popa
sbb
nop
hlt
xchg
sub
in
cmp
shrl
mov
in
dec
out
dec
cwtl
cli
adc
js
cmp
cwtl
shr
lock
popf
sqrtps
push
addr16
test
dec
in
xor
rcr
xor
jle
scas
lret
popf
mov
fcompl
ror
push
and
aas
push
push
addr16
cmp
and
out
rorl
test
inc
pop
mov
push
sbb
mov
shlb
inc
jae
xor
stos
dec
call
repz
xor
jmp
mov
mov
shll
inc
push
sub
dec
pop
ret
cli
mov
jne
pop
scas
mov
adc
movsb
test
shl
mov
shrl
add
lods
jb
dec
loope
gs
cld
adc
mov
or
adc
ficoml
rorb
xor
leave
pop
movq
cmp
and
pop
sbb
scas
idivl
aad
mov
call
cld
shlb
xchg
sti
pop
test
call
jb
jo
adc
shl
push
mov
lods
xchg
xor
dec
in
pop
or
jmp
stos
adc
int3
les
repnz
xchg
sarb
shll
loop
repnz
fwait
pop
adc
pop
mov
push
pop
xlat
add
xchg
loop
shll
push
xchg
mov
dec
shl
push
cmpsl
test
jnp
jecxz
sub
mov
int
mov
jmp
cmp
outsl
push
inc
mov
shll
fisubs
cmp
lock
or
push
sbb
rorl
imul
jb
addl
notb
push
add
into
mull
or
jno
aaa
add
scas
cltd
pusha
push
pop
ds
out
in
fists
clc
xor
out
into
mov
xchg
mov
mov
jge
imul
loope
cltd
aas
xor
xlat
ljmp
arpl
hlt
nop
pop
and
test
hlt
loop
push
push
and
into
leave
mov
imul
ss
add
aas
in
ja
into
inc
clc
jbe
adc
in
loopne
sahf
test
xlat
push
iret
xor
mov
mov
cmpsb
shlb
sti
xor
push
movb
cmp
jl
loop
mov
cmp
dec
lea
cmp
cmp
jmp
into
daa
pop
testb
test
mov
mov
popf
dec
xor
jge
push
pop
xor
je
popa
cmc
xor
sahf
xchg
js
push
or
lcall
repz
ret
xchg
xchg
add
pop
out
es
in
mov
push
dec
dec
push
sub
fldenv
mov
in
loopne
cmp
jge
jnp
stos
imul
pop
iret
adc
xor
cmp
scas
or
orl
sub
ret
fdivs
ret
addl
mov
adc
sti
lods
mov
lds
jmp
mulb
pop
adc
ja
sub
mov
shll
and
sbb
mov
inc
or
pop
adc
xchg
xor
sub
movsb
pusha
cmp
imul
fsubs
jne
mov
mov
imul
out
mov
adc
fbld
push
xorb
jl
push
pop
andl
fistpl
pop
sub
push
push
addr16
inc
hlt
stc
repnz
fs
lods
fisubs
andb
jle
ljmp
dec
cwtl
mov
jmp
cs
ret
mov
pop
push
movb
test
dec
or
scas
push
js
ds
push
shrl
inc
rcll
dec
sub
sub
adc
xor
fwait
xor
pop
out
sbb
cmp
dec
xor
loop
inc
jns
subb
scas
test
ds
xchg
mov
sbb
jbe
inc
xchg
cmp
sub
dec
pop
xor
stos
mov
push
push
in
movsl
mov
push
mov
dec
jg
jb
adc
mov
scas
cmp
ljmp
cmpsl
mov
xchg
cmp
data16
push
rorl
loopne
add
push
pop
adc
sub
mov
ret
jecxz
push
data16
push
push
mov
xchg
aad
fimuls
fwait
sbb
pmulhw
insl
sbb
repz
cmp
push
outsl
jecxz
loope
out
js
pusha
mov
mov
sbb
sub
lds
in
sub
inc
inc
negb
in
jbe
cwtl
daa
mov
pop
mov
fstl
ds
loop
ljmp
ds
jmp
add
lea
mov
sub
cmpsb
adc
add
dec
sub
adc
ljmp
mov
xlat
lds
hlt
xchg
outsl
fnsave
cli
jbe
clc
les
je
xchg
xchg
loop
xor
adc
icebp
popf
popf
dec
mov
je
jmp
sub
das
in
sub
stc
inc
jle
and
push
fcoms
jmp
rorb
sub
mov
in
out
into
lcall
jge
or
xor
sti
fstps
frstor
mov
jbe
das
repz
adc
sub
es
mov
push
or
add
pusha
data16
xchg
or
inc
psrad
shrd
leave
in
fs
add
aam
mov
cli
mov
dec
xor
mov
addr16
inc
jg
je
mov
jecxz
add
outsl
mov
add
jbe
inc
ljmp
lods
mov
adc
pop
pop
repz
add
icebp
and
cmp
xchg
and
leave
and
outsl
lds
push
and
das
out
mov
mov
movsb
loope
push
and
mov
mov
loope
pop
insl
sbb
repnz
add
ja
hlt
insb
fisubrl
fcoml
out
mov
popf
cmp
test
bound
lea
pushf
cmp
sbb
pop
sar
rcll
jo
jle
mov
inc
lock
pop
pusha
xchg
xor
pop
mulb
inc
int3
xchg
divb
cmp
ret
addr16
push
into
jae
aaa
adc
pop
cli
jmp
dec
dec
push
stc
test
ret
mov
in
mov
jmp
sahf
pop
push
xchg
cmp
push
sub
mov
loopne
fsubrs
loopne
fisubrs
inc
inc
xor
inc
addl
or
mov
idivb
pop
jo
adc
lahf
js
outsl
iret
mov
pop
cmpsl
js
out
push
iret
inc
test
insb
cmpsb
das
mov
mov
inc
and
test
call
movsb
xor
cld
cmpsb
push
mov
js
xchg
fisttpl
orl
stos
cmpsb
push
xor
jg
inc
or
dec
movsl
stos
and
push
mov
ja
aaa
and
or
or
push
mov
scas
les
pusha
cmp
pop
aad
mov
pop
and
mull
sbb
cmpsl
adcb
xor
pushf
adc
pop
xchg
lock
sub
mov
and
popf
ret
adc
add
push
mov
shlb
add
xchg
cltd
aam
or
lods
sub
lock
pop
push
dec
dec
jg
inc
hlt
test
les
loope
ficoms
adc
jnp
sbb
aam
aaa
test
ret
out
sub
mov
nop
mov
je
push
xchg
mov
scas
jmp
loopne
enter
ret
inc
push
dec
push
adc
dec
ss
fcoml
xchg
xchg
orb
mov
mov
mov
mov
ret
das
push
xchg
push
fnsave
add
cmp
xchg
ljmp
push
mov
aaa
adc
ret
dec
jnp
jne
in
adc
and
dec
js
out
or
jl
gs
or
lcall
dec
cltd
repz
inc
jb
push
out
test
test
xor
push
into
sub
outsl
xor
mov
dec
or
jns
mov
push
addl
push
dec
roll
pusha
push
mov
pop
mov
xlat
cs
lock
sahf
test
sbb
add
fwait
sbb
rcl
rorb
aas
loop
mov
scas
lcall
retw
cwtl
push
push
pop
cmp
xor
rcl
xchg
add
cli
loopne
push
mov
lods
stos
addr16
push
xchg
in
mov
mov
inc
dec
popa
daa
jecxz
loop
sbb
shll
fisubl
sub
jb
pop
mov
mov
jno
add
mov
cmpsb
inc
test
rcrb
mov
fs
dec
mov
imul
pop
outsl
sub
mov
xchg
sahf
testb
inc
jo
daa
jo
adc
adc
pop
cld
pop
add
xor
xor
adc
push
mov
or
sub
mov
sub
bswap
mov
push
das
sbb
xchg
cli
add
sti
jns
daa
cmpb
mov
adc
stos
cmp
pop
sbb
mov
cltd
fwait
clc
ds
repnz
mov
jno
mov
scas
cli
jne
cmpsl
lods
cltd
ss
scas
iret
mov
mov
fisubs
push
rcl
rcrl
pop
fldt
ja
jge
jnp
mov
push
inc
movsl
movsl
sbb
mov
int
shlb
pushf
fstpt
lret
movsb
ret
or
jno
aad
adc
or
cmp
test
sub
jae
adc
dec
sbb
nop
cmp
pop
std
pop
orl
cmp
lods
and
rcpps
sub
je
or
test
xchg
pop
out
push
mov
jne
jnp
jo
idivl
scas
ja
ds
push
jle
adc
or
xor
dec
pop
push
jmp
mov
sti
adc
mov
addl
faddl
lock
mov
or
addb
pop
fidivrs
mov
xchg
ret
mov
mov
int3
std
mov
xchg
arpl
adc
lea
shlb
push
test
mov
cli
and
movsl
lcall
out
push
sub
xchg
mov
hlt
mov
je
mov
add
stos
mov
int3
shll
mov
or
pop
movsl
aaa
jns
notl
dec
pop
test
add
jge
imul
nop
cs
out
repz
and
ds
cmp
int3
xchg
mov
in
fiaddl
pop
and
fcmovb
js
sbb
lods
imul
outsl
loopne
adc
push
hlt
bnd
lret
mov
mov
in
lcall
pop
in
jg
loop
push
repz
jo
mov
or
inc
mov
and
adc
jle
or
fwait
push
push
push
and
lods
cmp
stc
in
dec
fistpl
adc
push
xchg
jg
repz
pop
leave
fs
mov
mov
out
les
add
out
dec
fs
hlt
mov
xchg
xor
and
or
or
sbb
add
dec
sub
bound
out
pushf
add
push
std
mov
test
add
and
sbb
lods
adc
dec
iret
add
dec
xchg
psrlq
xchg
icebp
xor
cmpsl
xor
jge
push
int3
aaa
daa
loopne
int3
gs
pop
jg
fcmovnbe
sbb
ficompl
or
xor
or
hlt
jge
mov
xchg
push
vcmppd
ret
cwtl
das
loopne
ljmp
sarb
fistps
mov
fisubl
in
fistl
sub
xchg
add
fwait
lahf
shrl
mov
fisubl
cmp
mov
int3
mov
iret
mov
sub
mov
and
xchg
push
jecxz
lahf
mov
test
push
fdivrl
jno
std
mov
sbb
mov
xchg
add
xor
dec
jge
imul
cmp
push
mov
mov
jae
rcrb
push
es
lret
pop
leave
into
or
dec
pop
push
rorb
clc
cmc
mov
and
scas
or
xor
push
inc
cmpsl
dec
insl
inc
movsb
arpl
lcall
jmp
mov
fmull
mov
mov
outsl
and
out
rcl
push
outsb
push
push
push
test
sbb
sub
jp
cmpb
subl
mov
or
mov
and
xchg
mov
ret
mov
sahf
xor
pop
mov
rolb
out
scas
mov
bound
mov
mov
sbb
cmpsb
jp
cmp
popf
xchg
dec
add
inc
add
out
clc
rcll
cmp
jae
push
arpl
jnp
scas
cmc
sub
sbb
jns
xchg
inc
jno
sbb
loop
or
repz
rclb
std
vsqrtsd
cmp
lock
sbb
mov
xchg
fdivrp
daa
aad
mov
xchg
int3
dec
cltd
push
adc
pop
in
jle
adc
and
push
xor
or
sub
stos
add
stos
or
mov
mov
dec
pop
sbb
add
daa
lds
xlat
inc
xlat
icebp
jmp
rorb
test
push
xor
ja
lods
shlb
push
dec
stos
xchg
mov
jbe
std
dec
inc
outsl
sbb
out
imul
push
jo
sbb
insl
push
fbld
dec
test
push
stos
mov
xchg
xor
push
mov
sbb
adc
in
cmp
sub
cwtl
dec
pop
repnz
cmp
mov
in
mov
or
inc
push
pop
cmp
and
es
test
or
ja
or
dec
pop
into
push
movsb
mov
mov
in
mov
stc
mov
popf
leave
sub
or
out
jl
fwait
mov
push
adc
mov
fldl
in
add
mov
mov
mov
or
mov
inc
mov
cmp
sub
jecxz
inc
js
iret
std
insl
jecxz
ficompl
or
aam
sbb
out
or
xor
and
add
adc
push
ds
pop
sbb
cmp
iret
fimull
dec
xor
movsb
insl
sti
cmpsl
xchg
decl
pop
sub
popf
or
mov
ss
int
lcall
inc
shrb
cmp
pop
mov
and
mov
rcll
rcll
xor
jnp
nop
ss
pop
cmpb
xchg
scas
not
fstpl
imul
cli
mov
mov
aad
sti
inc
jnp
imul
jo
mov
gs
pop
pop
push
mov
cmp
lds
lret
and
jmp
push
add
cmp
stc
or
ret
dec
dec
incb
mov
iret
jns
xchg
sub
xchg
dec
lcall
out
sti
int
dec
xchg
cmpsb
popf
andl
cltd
je
es
jg
daa
fmulp
mov
mov
sub
icebp
out
jo
hlt
decb
stc
cwtl
adc
or
mov
pop
lea
iret
push
push
xchg
es
bound
xchg
pop
leave
fcompl
inc
por
sbb
pinsrw
call
jg
icebp
jbe
outsl
test
out
adc
cli
sub
rcll
fsubrl
jmp
in
int
mov
addr16
push
lret
inc
shr
ja
ljmp
mov
cld
aad
push
les
pop
sbbl
sbb
fs
jmp
add
stc
jbe
pushf
scas
gs
fmuls
sbb
cwtl
out
rclb
daa
jg
into
pushf
sarl
test
xor
cmp
mov
pop
stc
prefetch
xchg
mov
in
jns
add
fimull
out
xor
fidivl
insb
mov
sub
das
jnp
adc
cli
mov
addb
fbld
mov
dec
adc
adc
push
dec
sbb
mov
jae
lds
add
addl
pop
clc
into
add
or
stc
push
insl
fistpl
pop
pop
out
cmpsb
cmp
sahf
dec
xchg
push
shlb
pop
push
dec
nop
mov
lret
push
leave
or
add
fwait
int
adc
mov
into
sub
xor
fcmovnbe
push
js
push
or
xchg
fcmove
insb
lods
mov
imul
cmp
cmc
xchg
xchg
dec
dec
lds
ja
jge
and
cmp
adc
nop
jno
sbb
adc
notl
popf
mov
xchg
push
dec
es
lret
iret
repz
in
js
jb
mov
mov
popa
ja
jnp
popf
mov
mov
mov
pop
sbb
in
movsb
inc
jmpw
lret
cmpsl
pop
gs
jle
jb
inc
inc
ljmp
out
out
scas
push
push
sahf
adc
fmuls
adc
loope
imul
sahf
fwait
mov
mov
test
mov
int
insl
addr16
fcoms
dec
add
sbb
xchg
inc
loop
scas
aas
jnp
jge
mov
fisubrl
add
cmp
jbe
mov
sub
mov
or
jno
aas
cltd
and
jmp
pop
scas
xchg
loope
in
dec
cli
add
mov
xchg
pop
jmp
mov
push
test
les
wrmsr
out
bound
dec
adc
ljmp
jmp
mov
std
aas
pop
sbb
inc
pop
lods
dec
out
lods
lret
sarl
pushf
xlat
fsts
dec
and
cli
adc
push
dec
aad
xchg
in
jno
mov
int
xor
out
aam
fisubl
int3
jo
es
inc
push
scas
sahf
or
mov
ja
enter
imul
xchg
jo
mov
jmp
test
imul
dec
ss
aad
test
mov
ret
fsts
adc
mov
dec
movb
in
and
mov
addr16
sub
test
mov
sub
jbe
pop
in
pop
outsb
nop
decl
jb
repz
cltd
add
xchg
das
sbb
aam
out
jmp
scas
mov
imul
out
sahf
jl
adc
ret
icebp
xchg
lock
fisttpl
leave
xor
movsl
push
jne
insb
adc
pop
push
jl
adc
aaa
push
movsl
push
outsl
ss
loopne
adc
adc
das
aas
mov
jo
mov
test
jmp
push
jp
mov
shll
daa
mov
pop
jl
pop
push
cli
pop
mov
insb
jg
imul
mov
jp
jbe
cmp
xchg
loop
cli
xor
les
mov
dec
cmc
hlt
ret
repnz
mov
cmc
and
mov
stos
sbb
push
and
fldcw
adc
pop
xchg
jbe
pop
test
insb
cmpb
mov
sub
cltd
lret
or
and
xor
aad
shl
daa
sub
jmp
mov
decb
dec
mov
mov
fwait
into
cmp
int
test
sub
mov
loopne
sti
push
sbb
jbe
mov
adc
jae
fsubr
js
sti
rcrl
mov
in
and
lods
sbb
adc
in
pusha
fsubl
inc
jnp
pop
pusha
incl
dec
xchg
fcomps
adc
mov
aaa
enter
mov
sbb
push
jmp
add
movsl
pusha
mov
popf
xor
pop
imul
sub
mov
pop
and
or
dec
or
adc
addr16
fnstsw
pop
sub
pop
loop
inc
and
shrl
les
adc
mov
dec
xchg
or
or
xchg
adc
cwtl
dec
adcl
cmc
or
mov
sti
jnp
xchg
sub
xor
push
movsb
scas
mov
pop
repz
lock
mov
clc
or
add
inc
mulb
pop
xor
pop
flds
popl
push
mov
cmpl
fnstenv
daa
bound
dec
leave
lds
das
jo
cltd
cld
dec
lahf
inc
addr16
jb
pop
ljmp
fs
ja
scas
mov
lods
fs
lods
fldenv
dec
in
popl
andl
sbb
leave
movsl
cmp
jno
test
xor
lods
push
mov
add
xor
or
mov
push
fwait
cmp
test
pushf
addr16
fadds
leave
xchg
jbe
inc
or
dec
lret
cmpsb
mov
xor
mov
test
sbb
inc
sbb
sti
or
out
dec
addl
aaa
popa
dec
adc
hlt
mov
out
jg
push
sub
leave
notl
mov
movsl
mov
inc
jns
out
xor
jnp
adcb
push
lea
push
jne
mov
pop
aas
mov
cltd
test
jo
lahf
xor
sbb
mov
inc
dec
xchg
and
push
sbb
and
push
loopne
inc
mov
xchg
in
mov
add
jg
incl
xchg
shll
and
je
push
addl
and
outsb
out
ja
xchg
ss
insb
call
pop
jecxz
out
push
jp
loopne
ret
sbb
and
mov
stos
fbstp
out
adc
movsb
push
sahf
push
push
push
enter
mov
pop
push
mov
sub
outsb
les
adc
inc
pusha
pop
xchg
mov
sti
mov
xchg
loop
sahf
xor
ret
mov
dec
or
inc
jo,pt
iret
pop
pop
dec
in
and
bound
out
test
rclb
mov
into
inc
sub
add
inc
stos
xlat
or
aam
dec
mov
adc
mov
mov
dec
inc
ret
out
dec
jl
jle
adc
hlt
divl
lock
dec
mov
fbld
or
lahf
add
inc
cmp
push
stc
push
inc
test
inc
cli
sbb
xchg
dec
fwait
nop
imul
dec
add
scas
iret
xor
sbb
inc
add
mov
repz
pop
movsl
test
out
mov
and
sbb
push
xchg
cld
push
fisubl
filds
gs
and
test
mov
dec
mov
outsl
lds
into
mov
repz
xchg
data16
adc
adc
jbe
pop
ficoml
dec
fcoml
roll
ja
sub
and
int3
or
ret
je
and
loope
fdivrl
pop
xrelease
inc
push
dec
lcall
shlb
dec
dec
adc
inc
int
scas
push
std
or
add
push
inc
les
mov
fbld
jns
testl
pusha
out
les
scas
xchg
rol
adc
lods
push
stos
mov
icebp
push
dec
mov
hlt
push
sub
inc
xor
mov
xchg
dec
and
fs
cmp
dec
enter
xchg
bound
lahf
push
adc
xorb
xchg
xor
ret
xor
subb
jl
lock
pop
jnp
pop
out
std
and
icebp
pop
in
cmpsb
cltd
rcll
mov
adc
and
ffree
mov
xchg
pop
sub
jbe
pusha
or
xor
xor
pcmpeqb
cmp
add
cmpsl
mov
lahf
inc
out
dec
clc
xchg
mov
mov
repnz
idivl
xchg
jecxz
push
insl
mov
add
pop
xor
sbb
push
inc
and
pop
aas
jmp
dec
xor
push
movsl
inc
cmpsb
mov
subl
stos
in
fisttpl
mov
inc
pop
mov
int3
pop
test
out
xor
xorb
popa
sub
jmp
daa
or
jecxz
jbe
sub
loop
pop
pop
rol
pushf
push
icebp
stc
btc
idiv
dec
mov
push
fistl
rcr
inc
xor
mov
mov
pop
push
outsl
mov
push
test
mov
sti
fs
adc
xchg
sub
lock
inc
test
or
jnp
sub
xchg
cs
scas
mov
out
jbe
add
jae
mov
gs
rcrb
call
mov
lock
jno,pn
sub
jmp
hlt
ss
test
sarl
dec
test
enter
jp
cmpsb
ret
loopne
inc
movl
adc
jge
ds
mov
cmp
lret
out
fistps
insb
jle
sbb
lds
nop
inc
imul
loope
into
jl
push
mov
add
iret
sbb
xor
add
mov
ret
popa
movsl
pop
mov
add
pop
fsts
ja
lods
push
pop
jge
push
fcomi
mov
pop
rcll
jb
or
or
sbb
jmp
adc
push
cwtl
dec
push
mov
mulb
mov
xchg
lods
ljmp
rcll
icebp
nop
test
sti
push
fcompl
sbb
jbe
ret
jge
fs
test
outsb
sub
or
js
cli
mov
mov
mov
pusha
push
jbe
stc
sub
aaa
int
outsb
test
push
xor
and
mov
xor
bound
cmp
daa
pop
test
movsl
aam
mov
sarl
test
xlat
jnp
xchg
cmpsb
fistps
or
xchg
icebp
push
push
test
sub
mov
or
inc
mov
hlt
or
sbb
mov
lods
enter
test
mov
xor
fisubs
add
into
or
cmp
inc
jo
ss
cltd
cmp
sbb
push
sub
into
jne
mov
inc
lods
push
fldl
dec
sbb
fisttps
add
test
roll
jl
xchg
hlt
enter
and
mov
hlt
pop
repnz
jbe
mov
mov
xchg
dec
lret
fs
rolb
pushf
std
sbb
loopne
popf
or
ficompl
gs
and
push
movsb
repz
in
mov
lods
jb
jp
pop
jp
dec
inc
sbbb
pop
in
lcall
lods
sub
jo
push
ss
lea
nop
dec
mov
inc
mov
mov
pop
push
push
cmpsl
rcrb
add
lock
sbb
sbbl
push
mov
adc
cld
ret
js
das
xchg
sub
and
movsl
pop
in
fistl
jl
jmp
push
xchg
add
bound
adc
stos
daa
add
clc
lret
xchg
jns
dec
cmpsb
pop
das
jae
cmc
js
push
std
popfw
cs
dec
and
loopne
bound
scas
lods
jae
sub
and
int
adc
arpl
mov
cmpsb
sub
xlat
roll
es
jne
cmpsl
jae
sub
mov
jg
dec
push
into
adc
lods
cmp
sub
gs
xor
cltd
mov
rcl
fmull
mov
aaa
test
jp
push
cmp
push
mov
or
pop
ficoms
mov
int3
and
cmpsl
or
adc
mov
xchg
movsb
repnz
test
adc
lahf
das
jae
pop
or
fildl
mov
stos
addl
lret
push
fstpl
push
scas
and
mov
or
leave
jb
dec
sti
ret
ret
int
andl
xor
push
jb
xchg
xchg
lcall
push
fs
jo
stc
mov
mov
fwait
inc
mov
idivb
out
xor
lret
dec
mov
xchg
mov
dec
pop
xchg
cmp
fs
push
mov
and
mov
xchg
mov
subb
inc
push
ret
pop
ret
fnstcw
pushf
sarl
stos
lret
push
addr16
xchg
mov
lods
les
jne
or
fcompl
insl
inc
mov
cmp
lods
pop
pop
or
mov
jnp
push
mov
cmp
sbb
insl
cmp
lahf
pop
mov
sub
pop
dec
sbb
sbb
loopne
ja
dec
mov
pop
adc
mov
xor
loope
lret
xchg
sub
mov
or
lods
lahf
das
xlat
pusha
sub
jge
and
adc
add
loope
fs
aam
fisubrl
mov
adc
adc
jle
js
into
mov
pop
inc
ljmp
pushf
inc
movsl
call
push
aas
ss
lret
loop
loop
enter
push
in
pop
lods
negl
cwtl
jl
sub
jne
aaa
add
imul
sbb
test
ds
movb
push
mov
lahf
rorb
sbb
xchg
xchg
sbb
xchg
scas
add
divb
adc
es
cmpsl
mov
xchg
jnp
inc
add
jne
lret
in
je
inc
xor
add
mov
imul
fucomp
xchg
ret
in
mov
sbb
mov
fdiv
pop
mov
push
sub
xchg
adc
aas
loope
dec
scas
adcb
dec
dec
out
mov
jg
mov
xor
nop
cs
lahf
fists
lahf
cmp
push
pushf
pop
push
push
xchg
out
fmul
add
push
sub
jecxz
add
jecxz
sbb
or
pop
imul
and
inc
add
sub
add
mov
cmpsb
push
call
pop
in
std
inc
sub
pop
push
sub
xor
int3
push
adc
jecxz
jp
fucomp
mov
pop
xor
mov
jns
les
test
adc
imul
fimull
adc
push
jno
aam
ja
pop
jo
jno
or
jecxz
movsl
dec
dec
shlb
in
movsl
aaa
cltd
adc
and
test
jle
or
add
lds
sbb
mov
lcall
cmp
stc
inc
loop
push
mov
add
push
lahf
xor
mov
mov
clc
push
out
xchg
dec
xchg
mov
fcoml
mov
jb
jl
outsl
fimuls
adc
push
jbe
xchg
mov
testb
inc
orb
sarb
call
in
or
fldln2
loop
mov
mov
in
lret
aad
imul
jmp
nop
and
add
int
adc
sub
dec
aaa
aam
sbbb
mov
out
into
repnz
push
cmp
enter
mov
mov
je
cmp
pusha
pop
mov
ljmp
sub
outsl
mov
xlat
popf
jne
pop
inc
cmpsl
into
jl
xorb
and
adc
dec
dec
cmp
dec
add
add
test
cmc
out
daa
sbbb
mov
jno
aas
pop
je
add
mov
mov
sub
ja
notb
or
push
mov
outsb
out
mov
dec
addl
cs
pop
pop
and
dec
cli
jae
scas
push
leave
xchg
add
aaa
or
mov
mov
add
imul
insb
mov
sti
sub
pushf
pop
push
clc
and
das
fstps
push
daa
lea
bound
lods
stos
aas
or
cmp
psrad
leave
dec
lock
mov
sub
stc
cli
arpl
cmpb
inc
push
ficompl
orb
or
jmp
lret
push
dec
mov
push
mov
add
pop
in
jne
loopne
lret
mov
pop
xor
push
sub
mov
icebp
cltd
mov
adc
sbb
iret
add
dec
mov
nop
aaa
rcr
adc
aaa
push
pop
lcall
push
mov
sub
out
push
xor
ja
xor
or
sbb
adc
sub
dec
xor
sti
mov
leave
inc
xor
inc
inc
and
negl
fcoms
ret
out
and
xchg
dec
ficoms
rcrb
les
pop
add
jmp
gs
ficoml
push
lock
xchg
push
add
mov
cmp
sarl
cmc
nop
jbe
inc
lret
adc
pcmpgtb
and
cltd
test
xor
cld
aaa
sbb
inc
mov
push
pop
or
push
rcl
pop
jl
jmp
xchg
loope
sti
pop
sub
je
in
flds
add
lock
xchg
and
stos
sbb
pop
fwait
xor
subl
adc
je
nop
and
imul
inc
inc
addb
sbb
repnz
jmp
pop
pop
enter
cmp
and
imul
ror
scas
lock
mov
push
loope
hlt
pop
fsubrs
mov
or
ss
and
cmpl
push
sub
inc
sub
mov
mov
aaa
enter
leave
cmp
or
cmpsl
scas
sub
fstp
mov
pop
push
lret
cs
das
jle
jge
or
in
and
pop
xchg
cmp
sbb
ror
std
cmp
popf
loop
hlt
mov
pop
loope
sub
punpcklwd
mov
les
jl
sub
cmp
mov
das
pop
push
test
mov
stos
mov
and
bndldx
dec
imul
movsl
cltd
mov
jne
mov
mov
mov
add
push
sbb
sbbw
iret
movq
xor
inc
mov
bound
cmp
cld
roll
jno
adc
insl
pop
cwtl
into
add
jb
test
add
mov
pop
push
fildl
outsl
fmul
stc
lock
iret
aam
outsb
out
add
fstl
rclb
lock
leave
and
pop
jnp
subl
cmp
jecxz
push
fmuls
shrb
in
mov
xchg
fs
stos
lret
lods
adc
adc
inc
lods
in
lea
jle
popf
popl
push
sbb
push
pop
and
cmp
and
pusha
inc
pop
enter
popf
sbb
xorl
hlt
loope
pop
imul
lods
dec
jle
jecxz
sbb
adcb
cmpsb
outsb
cwtl
inc
das
push
cvtpi2ps
inc
xor
mov
mov
test
cmpsl
in
roll
jg
mov
add
mov
imul
cmc
push
pop
mov
xor
push
mov
or
jp
cli
ja
fsubrl
ffree
shlb
sub
inc
outsl
or
icebp
fistpl
in
movsl
fwait
insb
lea
loope
inc
popf
xor
xchg
sbb
fsubs
sub
mov
lds
pop
mov
and
es
jl
mov
lcall
adc
cmpsb
fstps
loopne
sub
js
imul
dec
push
aas
mov
mov
jbe
xchg
and
and
and
push
pop
gs
push
jecxz
sbb
mov
in
aam
or
and
xchg
jl
jle
repz
mov
mov
es
sub
movsl
xor
push
test
in
cltd
adc
push
xchg
dec
adc
inc
fstp
sbb
insb
out
aas
je
mov
fs
add
ret
jo
sbb
daa
cs
lret
cltd
neg
jno
lahf
jmp
roll
push
pushf
jbe
adc
aas
and
cmp
pop
mov
jbe
mov
fwait
push
pop
out
dec
sar
rolb
dec
out
push
cltd
add
nop
inc
jecxz
mov
pop
xor
push
mov
mov
mov
jno
jmp
xor
divl
ljmp
out
add
dec
out
daa
fisttpll
xchg
icebp
movsl
cltd
pop
or
push
jbe
outsb
test
mov
nop
and
aas
fcompl
loop
ds
sahf
loopne
pushf
movsl
jp
dec
ds
out
mov
outsl
adc
subl
loope
hlt
enter
mov
jo
pop
xlat
mov
xchg
sub
and
je
mov
insl
out
rcll
dec
xor
push
cmp
sbb
push
add
movsb
repnz
pop
mov
adc
jo
call
jne
call
clc
lret
enter
cmpb
sub
lret
jl
mov
xor
mov
into
lret
sbb
push
pop
dec
jnp
aam
in
mov
leave
bound
fisttps
inc
sbb
repz
dec
imul
xlat
sub
cmp
sub
insb
cmp
enter
pusha
stc
cld
fnstsw
shr
jb
pop
shrb
push
sbb
xor
jg
andb
xchg
sub
inc
mov
xchg
outsl
fs
xlat
int3
adc
push
and
loop
call
std
cmp
mov
movsl
mov
adc
and
pusha
mov
cmpsb
sbb
cs
test
lds
or
push
adc
adc
inc
sbb
inc
notl
pop
and
xlat
fstpt
and
push
push
pop
sarl
mov
cmpsb
out
aaa
arpl
dec
pop
sub
mov
in
push
cmp
dec
push
in
shl
pop
std
cltd
repnz
xor
push
xchg
and
imul
pop
xchg
and
ret
lret
adc
cli
aas
cli
jp
ret
gs
insb
xchg
mov
es
add
xchg
dec
insb
imul
out
out
cli
call
xor
jns
inc
arpl
icebp
push
or
or
sti
loope
pop
dec
jecxz
aaa
arpl
mov
jno
repz
push
pop
inc
ret
pop
test
in
lock
imul
push
loope
shrb
jb
and
adc
jmp
mov
loope
jae
lret
inc
pop
out
aad
cmp
cmp
out
imull
jge
out
js
hlt
xorl
stos
in
lds
adcl
mov
cmpl
push
loopne
test
jmp
mov
subl
scas
aaa
dec
lcall
adc
push
mul
lret
mov
out
icebp
push
stos
shl
and
mov
jns
pop
sub
mov
aad
xor
aas
data16
mulb
fistpll
jne
dec
dec
test
jecxz
xchg
dec
daa
roll
sti
pop
mov
mov
shlb
cmp
xor
test
pop
dec
push
scas
clc
push
and
pop
cmp
cmp
movsl
inc
sbb
inc
lea
pop
andl
push
and
mul
push
push
mov
dec
out
out
sbb
cmp
inc
iret
dec
lods
fnstenv
mov
scas
push
xchg
and
mov
xchg
inc
repnz
lcall
xchg
lods
sub
mov
pop
fsubp
cmpb
push
ret
push
shl
into
xor
xor
xchg
mov
mov
in
dec
icebp
and
rcrl
inc
fistps
mov
scas
insl
fadd
popa
cltd
mov
imul
push
popa
sub
repz
inc
and
push
in
pop
leave
out
sbb
shlb
test
push
jnp
cmp
inc
sbb
mov
arpl
int
ss
inc
hlt
jge
push
outsl
dec
adc
loopne
sub
les
push
leave
jno
fcoms
add
insl
fldt
pop
push
ret
decb
stos
pushf
cmp
leave
test
lcall
and
mov
ljmp
daa
inc
adc
fbld
mov
mov
sub
orl
sub
add
inc
les
mov
push
sbb
cmpl
dec
add
jae
loope
jnp
and
cmp
dec
adc
lds
xchg
mov
mov
stos
sbb
std
lahf
inc
data16
xchg
scas
mov
mov
outsl
or
jns
aad
xlat
cmp
jmp
mov
pushf
jmp
sub
orb
mov
pop
cmpsb
inc
sub
jno
mov
adc
jae
cmpsb
ret
or
test
imul
dec
add
dec
sub
sub
cmp
jo
jbe
idiv
xchg
test
cmp
fwait
std
mov
mov
xchg
bound
out
aas
pop
mov
or
and
mov
daa
push
xor
jno
or
add
movsl
mov
jecxz
mov
dec
pusha
and
inc
xor
call
int3
jecxz
bound
rcll
mov
enter
push
xlat
loope
jmp
test
pop
ror
fwait
or
cmp
je
adc
loope
xchg
fisttpll
xchg
push
or
stos
stos
shr
mov
test
add
fildll
pop
mov
call
pop
shl
dec
jecxz
inc
add
mov
push
cmp
fidivrs
ror
xor
and
lods
push
mov
xchg
pop
or
js
lods
sub
test
adc
scas
ja
mov
xchg
clc
sub
fucomi
push
xor
repnz
push
sub
mov
push
out
jp
xchg
fs
cmp
adc
mov
cmpsb
das
mov
push
and
sbb
xchg
shll
mov
pop
lock
movnti
pop
insl
subb
mov
fnstcw
mov
pusha
xchg
out
sbbl
inc
mov
imul
sub
cwtl
xor
xor
mov
lock
jnp
mov
or
loopne
sarl
lods
sbb
add
inc
cli
mov
fildl
push
push
mov
jne
stos
fidivs
aad
in
xchg
stos
in
je
mov
ds
jb
inc
dec
add
push
xor
cs
iret
push
xor
push
adc
lods
addb
add
std
xor
fldt
sub
dec
sub
repnz
xor
xchg
and
push
dec
aaa
dec
mov
lock
arpl
jle
loop
mov
movsl
mov
pop
xchg
add
aaa
lods
fmuls
or
mov
cmp
pop
dec
push
mov
addl
sbb
push
xor
xlat
mov
fmuls
adc
add
test
bound
popa
adc
sbb
or
rol
outsl
mov
dec
mov
sahf
pop
adc
mov
pop
xor
or
mov
ljmp
pop
cltd
in
push
cli
mov
xchg
hlt
scas
lds
fisubrs
ja
adc
xchg
fucomi
jge
xor
mov
gs
pop
stos
test
adc
test
ret
cli
adc
out
inc
rep
loope
sub
pop
sub
jne
push
cmp
push
xchg
mov
mov
lea
xchg
xchg
cmp
add
arpl
pop
jecxz
scas
xor
sbb
push
loop
push
popa
adc
ljmp
dec
test
not
imul
bound
test
or
adcl
dec
dec
cmpsl
cmp
xchg
pop
or
lret
fidivrl
xor
mov
jmp
pop
scas
jns
dec
sti
fnstsw
cmc
shrl
pop
in
test
mov
fisttps
pop
nop
test
jge
adc
je
fdivrl
enter
pop
loop
movsl
xchg
stc
sub
xchg
xchg
stos
mov
and
insb
jp
pop
mov
mov
pop
icebp
out
in
cmpsl
imul
push
adc
clc
jnp
subb
inc
adc
movsl
ror
cmp
dec
sbb
lea
imul
dec
mov
mov
lea
mov
dec
icebp
les
jecxz
push
insl
fwait
mov
test
jb
cmp
testb
insl
cmpsb
pushf
bnd
aad
repnz
cli
mov
lea
imul
mov
and
repnz
iret
push
call
mov
push
cmpsb
in
pop
nop
in
xchg
add
adc
inc
insb
mov
or
mov
ret
mull
cmc
pop
in
in
sbb
add
out
out
call
jl
fimuls
testb
insl
ret
xor
or
fnstsw
jne
inc
sbb
mov
test
addb
pop
sub
push
std
nop
dec
mov
cmpsb
xchg
call
xchg
leave
out
pusha
xchg
push
ja
setl
dec
mov
push
pop
or
hlt
popf
sub
aas
push
dec
nop
fdivs
add
test
push
mov
addr16
popf
or
jb
test
mov
test
fistpl
jbe
jnp
mov
cmpsl
sbb
dec
mov
outsb
pop
push
cwtl
in
in
dec
adc
ret
outsb
push
inc
stos
push
icebp
pop
add
loope
sbb
add
jle
cld
mov
jmp
jns
pop
cs
test
cmp
test
pop
daa
adc
es
push
lahf
js
xchg
push
decl
xor
addb
mov
lret
popf
imul
push
rcrb
enter
fdivl
enter
pop
dec
pop
xor
mov
rclb
inc
add
fs
mov
pusha
inc
fdivl
aas
xor
aas
mov
inc
sahf
xchg
sub
jae
pop
sbb
imul
stos
jne
add
rorb
jle
add
fnstsw
add
lds
test
test
jecxz
xchg
loope
mov
sahf
pop
lea
adc
cmpsl
mov
cmp
es
inc
xor
std
icebp
lock
ret
mov
scas
inc
insb
je
xor
inc
je
insb
mov
jae
call
and
or
cmp
push
pop
push
inc
jnp,pn
mov
dec
mov
dec
ljmp
call
sbb
jns
fisubs
daa
xorb
sahf
sub
jge
dec
jg
fwait
push
aas
jmp
mov
shrl
jle
movsb
cmp
inc
dec
cli
sbb
lret
mov
mov
out
cli
insb
pop
pause
pop
or
test
or
adc
into
insb
jmp
imul
sbb
fidivs
sub
shll
aas
int
add
stos
push
ficoml
push
adc
xor
jl
and
mov
or
jle
int
and
mov
mov
dec
push
test
or
mov
arpl
dec
sbb
xor
jle
mov
jne
xor
cmpsl
xor
or
inc
xchg
mov
sub
cld
out
or
fmuls
fildl
aad
pop
mov
ljmp
cmp
loopne
arpl
int
cltd
mov
push
addl
xor
iret
cmp
fdivrl
jmp
push
jmp
and
jnp
imul
push
and
xchg
or
mov
and
rorl
mov
inc
ljmp
lahf
sbb
xor
push
sub
xchg
pop
jbe
xchg
pusha
pop
push
stc
daa
jmp
xchg
inc
dec
jae
adc
test
nop
jbe
cmp
pop
test
in
dec
add
add
test
sub
test
mov
mov
jge
xor
ret
cmc
mov
and
mov
inc
xor
jp
nop
pusha
or
ret
xor
xorl
fisubrl
loope
in
push
fdivl
fmull
mov
cmp
je
push
fnsave
jg
fs
jmp
rol
ror
jae
sbbb
lcall
xchg
inc
loop
sub
push
mov
js,pn
aas
js
dec
nop
pop
adc
ss
fwait
arpl
gs
out
push
and
adcb
sbb
jo
xor
inc
mov
scas
fistps
into
shl
mov
popa
mov
scas
cwtl
andb
dec
sbb
and
fiaddl
mov
cli
outsl
cli
popa
inc
push
sbb
jbe
mov
lea
aaa
pop
ret
sarl
pop
mov
add
pop
and
pop
out
sahf
mov
sbb
pop
mov
gs
call
in
sti
loopne
xchg
mov
scas
es
xchg
or
cmp
in
in
andl
pop
mov
jnp
push
cmp
pop
sub
pop
or
xlat
fwait
cmpsl
inc
rol
pop
gs
xchg
adc
sub
add
pushf
push
dec
inc
jmp
mov
and
xchg
cmp
faddl
mov
adc
fildll
stos
sub
dec
cmp
mov
orb
loopne
ficoml
mov
imul
sbb
push
jo
push
inc
mov
dec
push
mov
test
fs
sub
sub
jg
popf
lods
rcl
stos
dec
and
cli
push
push
adc
loopne
mov
jns
dec
mov
outsb
fdivrl
mov
dec
and
les
into
sub
push
mov
fwait
sti
cmp
cmp
sar
jno
ficoml
mov
pop
sbb
fcomps
sub
lods
mov
cli
dec
mov
push
cli
adc
inc
push
std
mov
add
lea
add
shll
bound
fbstp
lret
ss
hlt
jge
pop
sub
scas
into
dec
cmp
movsb
lods
movsl
popa
mov
mov
sub
dec
and
or
dec
pop
sarl
jno
or
in
popf
cmp
sti
test
hlt
out
inc
out
popf
shlb
popa
test
dec
or
jbe
bound
incl
mov
mov
xor
pusha
dec
inc
call
les
jo
addr16
lods
mov
inc
in
scas
push
xor
or
faddl
adc
xchg
jne
pop
xor
mov
loop
iret
push
rep
fistl
je
adc
and
mov
push
push
addb
or
sub
pop
test
mov
mov
clc
das
sbb
and
stos
pop
jp
push
lods
mov
inc
add
ss
xchg
jmp
inc
ret
ret
aam
xlat
std
adc
add
jecxz
mov
cs
popf
clc
inc
out
cld
nop
insb
sub
push
mov
xchg
cmp
mov
push
cwtl
adc
jp
dec
xor
push
stc
call
adc
adc
je
jns
fwait
int3
addr16
add
adc
out
mov
imul
and
shrl
cmpb
xchg
jb
pop
enter
xchg
inc
xchg
xchg
fdivs
cmp
push
adc
leave
nop
imul
cmpl
int
cmp
arpl
sub
test
pop
sbb
inc
mov
aaa
ret
jae
push
fisubs
pusha
mov
test
pop
xchg
jle
call
icebp
cmpsl
inc
mov
ljmp
mov
ds
jno
pop
sbb
popf
lock
push
inc
mov
cmc
cwtl
outsl
inc
fsubl
inc
sub
or
dec
mov
sbb
sbb
mov
jge
imull
mov
out
adc
add
int3
fcompp
mov
xchg
dec
and
pop
inc
push
jmp
loope,pt
xchg
call
mov
js
stos
mov
push
adc
sub
or
subl
and
add
das
mov
mov
ljmp
enter
repz
lds
push
out
and
lock
jecxz
mov
cld
xchg
fwait
pop
faddl
add
pop
lcall
orl
inc
icebp
lcall
scas
fidivrl
push
sub
test
jle
inc
lods
cmp
push
mov
repnz
popa
push
inc
cmp
fmull
ret
es
mov
mov
dec
mov
sub
adc
data16
push
jb
xchg
push
cmpsl
dec
adc
shl
pop
outsb
rorb
fwait
sub
loop
lea
aas
fsubs
aaa
ljmp
jmp
sbbb
or
adc
test
sub
shlb
pop
jno
out
and
divb
jge
lods
add
and
aas
adc
jmp
jb
rcr
mov
inc
mov
push
jo
jl
scas
xor
pop
dec
bound
xor
mov
stos
cmp
or
leave
cs
adcb
xchg
test
orb
cwtl
lcall
popf
imul
ficoml
mov
rcrb
pop
push
lock
adc
shlb
jnp
push
lret
sbb
add
fwait
or
testb
sub
in
mov
cmp
fisubrs
adc
dec
lahf
sub
enter
inc
ja,pt
sbb
cmp
fwait
mov
ja
subl
cmp
lea
jl
add
jecxz
nop
addr16
call
xchg
cmp
lock
xchg
inc
negb
loope
pop
in
lods
incb
inc
and
or
push
out
pop
call
loop
lcall
out
movsl
sbb
mov
imul
fldl
int3
clc
cmp
mov
or
or
popa
mov
mov
fisttpl
popf
mov
jno
movsl
sub
ds
aaa
lret
divl
xchg
stos
jno
into
ss
clc
mov
jge
jl
sub
mov
idivl
dec
call
dec
mov
cmpsl
dec
fsts
cmp
popf
push
cmp
scas
push
push
sahf
inc
mov
sti
adc
insl
loop
inc
scas
jle
push
stos
jle,pn
cmp
lahf
push
mov
addr16
arpl
pop
cli
test
dec
imul
pop
mov
gs
out
mov
add
sbb
ret
mov
xlat
sub
lods
mov
push
cmp
ss
int
cmp
sub
xchg
xor
lods
mov
test
out
jecxz
mov
add
hlt
outsl
push
push
cmp
test
jg
mov
aam
xor
pop
sbb
ret
pushl
lahf
sbbb
xchg
mov
pushf
mov
xor
mov
jne
jmp
out
mov
in
mov
imul
sbb
cli
push
inc
sbb
mull
pop
xor
push
and
xchg
fwait
jne
insb
jle
dec
outsb
pop
mov
mov
rol
mov
leave
std
adc
mov
jo
adc
mov
fstl
ret
or
xchg
push
inc
pop
call
sbb
mov
popl
ret
rcrb
mov
inc
imul
aaa
push
aas
cmp
pusha
dec
test
push
mov
cld
push
or
lcall
xchg
sub
dec
lea
mov
sub
int
cmp
lret
pop
dec
out
cmp
lahf
cmpsb
imul
jbe
pop
cmp
mov
test
push
jo
imul
cli
cld
dec
sbb
imul
fisttps
pop
push
mov
push
loope
ss
inc
sbb
div
push
pop
repz
popf
inc
jb
scas
loope
aaa
cmp
jp
pushl
push
push
inc
ss
push
mov
fdivs
rolb
dec
cwtl
push
adc
dec
lcall
aaa
cs
subb
or
lds
leave
out
andl
and
ret
stos
ret
sbb
and
pop
andb
pop
fistpl
xor
mov
pop
and
pop
cwtl
popa
adc
mov
mov
jne
lods
in
aam
push
mov
xchg
data16
mov
stos
xor
jnp
std
aam
fwait
inc
ficompl
lock
or
cmp
outsb
bound
adc
sub
lock
cmp
dec
outsl
ljmp
xor
and
cmpsb
cmp
dec
call
outsb
jnp
inc
outsb
arpl
pop
test
mov
ljmp
rorb
dec
xor
xchg
cmp
hlt
pop
pop
dec
in
inc
pop
popf
loop
xchg
cmp
hlt
mov
imul
aaa
icebp
gs
ret
int3
jg
lcall
sti
pop
test
mov
enter
pusha
movhps
int
das
dec
aad
ljmp
inc
enter
jno
dec
cwtl
inc
add
mov
lea
xchg
int
aam
lock
xor
sahf
jle
aam
movb
iret
sbb
push
push
ljmp
jo
leave
ret
xchg
pop
mov
test
jl
sbb
inc
inc
inc
jmp
jne
cmp
insb
xchg
sub
insb
mov
mov
dec
fsubl
repz
push
sbb
int3
hlt
adc
cmp
out
mov
xor
jl
or
in
in
sbb
cli
dec
jns
aaa
inc
adc
jmp
dec
mov
int3
insl
push
add
imul
ss
inc
lock
outsl
push
mov
cmp
jecxz
js
push
cli
sbb
sbbl
xchg
test
iret
lods
push
jae
cmp
xor
les
pushf
data16
ja
bound
mov
out
xor
jns
jno
popf
aaa
pusha
sbb
js
mov
pop
mov
xor
xchg
mov
rorb
pavgw
decb
mov
sub
fldcw
adc
lods
into
sbb
cmp
movsl
rcr
and
ja
inc
sbb
iret
push
lds
aad
aad
bound
pop
and
sub
mov
loop
or
scas
test
pop
sub
sub
fbld
pop
hlt
jae
sub
xchg
fcoml
fpatan
int3
movsl
cmc
mov
loopne
and
pop
mov
clc
jno
js
or
push
int3
scas
push
repz
or
andl
and
sub
lret
call
daa
test
adc
jno
xlat
xlat
cmp
repnz
mov
jecxz
jge
jmp
jmp
cltd
imulb
jne
call
cmp
gs
mov
loope
mov
jnp
add
std
inc
sbb
add
push
aad
imul
push
lret
add
outsb
prefetchnta
sbb
pop
cmp
out
fcompp
scas
mov
xchg
xchg
or
mov
mov
das
push
or
pop
lahf
js
sbb
test
iret
insl
pushl
mov
push
gs
push
lahf
xchg
cld
xor
inc
fildll
mov
aas
aad
mov
les
cmc
imul
lock
enter
jmp
std
xlat
into
jbe
and
dec
setne
stos
jmp
lret
jb
add
or
push
mov
xchg
pop
ja
nop
scas
cmp
adc
gs
repz
push
sarl
in
andb
lods
jge
fisttpll
das
or
rolb
std
mov
jno
mov
sbb
mov
jge
adc
repz
add
out
xchg
dec
and
or
fsubrs
int
stos
xor
jae
or
std
add
rcrb
lods
push
add
sub
push
push
stc
sub
nop
test
popa
inc
and
push
ljmp
shll
orl
mov
or
addr16
nop
cmc
iret
sub
pop
add
andl
clc
mov
nop
inc
cmpsl
lea
imul
aaa
and
rcl
repnz
aam
inc
sbb
lret
call
movsl
push
jle
jno
jo
sub
fstps
nop
inc
addr16
mov
inc
shll
mov
lods
roll
fstl
sbb
mov
fcomps
imulb
in
insb
lret
out
nop
add
push
cmp
aas
shlb
mov
xchg
sub
fisubrs
rcll
aas
lock
jns
outsl
pop
mov
pop
dec
or
in
pop
xchg
mov
negl
jmp
movsl
push
fwait
jno
sub
cmp
out
sarl
enter
mov
fldl
fisttpll
fs
stos
mov
pop
lea
cld
and
mov
cwtl
les
sbb
dec
inc
in
fst
pop
outsl
into
adc
mov
push
out
js
pop
ret
pop
ret
mov
and
mov
and
mov
punpckhdq
cmp
xlat
xlat
xlat
xchg
cmp
es
push
push
add
inc
out
es
mov
fsubs
andl
cmp
or
jo
sbb
repz
push
cmp
mov
decl
jg
push
push
cmp
dec
insl
push
xchg
rcrb
scas
mov
into
sub
std
xor
out
push
push
mov
leave
mov
push
je
stos
adc
sub
push
xchg
movsl
addr16
cmp
jns
jnp
xchg
sub
jae
jbe
mov
cwtl
inc
fistl
and
pop
clc
stc
stos
mov
stc
mov
mul
xor
sahf
add
mov
jle
popf
gs
pop
fs
ret
add
sbb
lods
mov
adc
fstpt
or
sub
cmp
cs
scas
rcrb
fcompl
push
sbb
pop
sub
push
xor
xchg
in
jg
mov
call
mov
lods
pop
scas
xchg
push
or
shll
jmp
or
sub
mov
out
outsl
rcrl
mov
cmp
lods
pop
cmp
cmp
pop
repnz
fisubl
and
das
sub
push
rorl
divl
out
js
xchg
cmp
inc
xchg
cltd
sub
mov
into
movsl
push
dec
rcrl
pop
pop
xor
sbb
imulb
lcall
std
mov
or
push
sbb
xchg
stos
inc
pushf
add
stos
xchg
or
in
loope
push
addr16
inc
sbb
andb
shll
add
jo
daa
mov
adc
mov
and
psrlq
orl
sub
inc
in
or
movsl
push
scas
sahf
adc
lods
sbb
imul
xchg
test
or
xchg
scas
filds
push
and
negb
adc
insb
xchg
out
stos
inc
add
mov
cmp
adc
imul
fidivrl
mov
dec
lcall
xchg
xor
imul
das
jns
or
xchg
push
push
pop
repnz
popa
and
xlat
xchg
and
enter
aam
jg
jmp
mov
outsb
sbb
stc
sbb
mov
decb
or
jmp
in
xchg
das
cwtl
xchg
jp
lret
arpl
lods
pop
jp
pop
pop
into
and
ss
std
mov
or
cmp
xchg
insb
push
fisubl
adc
lods
add
ja
xchg
inc
les
mov
in
ljmp
inc
sub
dec
shr
inc
jne
push
stos
int
push
ret
add
aad
test
ss
stos
push
add
xchg
xor
sbb
addr16
sub
loopne
xchg
xchg
add
in
cmp
shll
loop
imul
push
repz
movsb
xor
iret
ja
hlt
cmpsl
push
lret
mov
pushf
jno
int3
inc
cmp
test
inc
cmp
pop
stc
mov
les
mov
cld
mov
or
leave
test
pop
arpl
mov
mov
stos
loope
sbb
aaa
add
cmp
rorb
push
mov
fldenv
test
pop
cld
aad
and
pop
mov
outsb
imul
js
in
xchg
push
fistpll
lock
or
dec
mov
jle
push
jmp
dec
xor
jae
xchg
jmp
cmp
push
mov
inc
insl
jb
xchg
cmc
roll
gs
sub
lods
repz
push
push
fwait
movsl
sbb
test
dec
movsb
jg
fwait
xor
adc
imul
pushf
mov
push
xor
call
jecxz
sbb
jo
stos
jno
xor
lret
adc
fs
sub
lock
adc
pop
mov
sbbl
fldcw
adc
cmp
into
outsb
aad
es
push
fmuls
mov
xlat
add
shlb
xchg
add
xor
dec
cmp
push
fwait
jl
repnz
lcall
mov
add
mov
jle
cltd
orb
mov
add
shlb
sub
sbb
mov
pop
adc
mov
mov
mov
or
jge
rclb
add
aaa
stos
divl
xchg
jb
sbb
adc
shll
fwait
jbe
mov
xor
aas
and
inc
mov
test
add
pop
jbe
insb
imul
in
pop
andl
or
and
dec
xor
std
push
imul
pushf
test
inc
test
cmp
call
leave
inc
jno
fcoml
popf
popf
les
push
popf
test
and
call
inc
bound
mov
fisubl
mov
xchg
cmc
ljmp
and
test
popl
and
push
ljmp
push
jle
mov
add
and
dec
sub
mov
cmpsb
pushf
mov
pop
sub
xor
and
sbb
insb
sahf
imul
ret
jmp
daa
fwait
imul
nop
or
out
inc
lock
mov
shrl
jne
inc
xchg
ret
add
decl
adc
pop
mov
mov
mov
repnz
ja
stos
out
scas
loopne
iret
mov
adc
js
rorl
sarl
push
and
mov
jl
adc
pop
mov
loope
ret
test
jnp
jge
adc
sbb
rclb
fistps
stos
loopne
data16
xchg
jb
nop
arpl
loop
lods
cmp
addr16
inc
mov
cwtl
xor
fidivrs
or
aaa
jge
cmp
sbbl
lret
cli
mov
int
mov
mov
es
outsb
adc
sbb
test
ljmp
xchg
test
sub
fs
aaa
sbb
add
push
test
int3
inc
out
dec
fnstsw
sub
sub
xor
cltd
pushw
das
cmp
adc
lcall
arpl
outsb
fsubr
rclb
mov
stos
fistpl
movsb
inc
dec
mov
cli
sbb
inc
and
ficomps
pop
mov
subl
aad
jb
jg
lret
loop
call
inc
arpl
dec
js
push
sub
mov
lock
outsb
jmp
mov
or
cwtl
jbe
sub
jp
test
inc
xor
enter
loop
xchg
mov
call
push
fcoml
mov
cmpl
ret
in
xchg
leave
je
and
sbb
loop
push
shlb
loop
and
outsl
sbb
in
push
xor
inc
lds
outsl
ja
mov
hlt
gs
push
mov
inc
and
dec
fldl2e
sub
dec
movsl
gs
fadd
sub
cmpsl
hlt
push
lret
inc
pop
and
lea
pusha
pop
cwtl
fwait
sbb
pop
push
add
mov
mov
loopne
lahf
sbb
ljmp
ret
cmp
je
or
mov
cmp
std
out
lea
or
sub
shr
lahf
psubusb
sbb
jbe
das
mov
pop
cmpsb
sahf
adc
mov
xchg
les
pop
ds
int
es
add
outsl
je
push
aaa
ss
rcll
jl
inc
ret
pop
dec
mov
mov
jo
sbb
stc
push
mov
ljmp
frstor
stc
sub
mov
fstpt
lcall
cltd
loop
pop
fdivrl
inc
and
outsl
inc
sti
push
stos
push
cwtl
xchg
xchg
mov
or
mov
jns
ret
lods
mov
cmpsb
scas
icebp
and
push
mov
cmp
cmp
lods
pushf
insb
movsl
sub
arpl
shrl
mov
insl
mov
ficoms
fdivp
xchg
sbb
loop
ja
add
std
fsub
and
xor
inc
dec
imul
sub
cli
in
pop
xor
test
mov
decl
or
pushf
fcmovb
and
test
les
nop
mov
inc
xor
sub
test
jbe
push
aad
shlb
cmpsl
inc
xchg
mov
fdivrs
sub
mov
push
fstl
in
lret
inc
mov
xor
cmp
bound
cmp
sub
and
or
cmpsl
jae
movsl
mov
mov
xchg
ds
jl
test
andb
xchg
sub
add
push
mov
popl
in
add
ror
jne
push
xchg
inc
inc
stos
in
shrb
push
and
push
jg
jo
imul
dec
pusha
movsl
lods
ja
push
xchg
mov
dec
mov
test
jno
push
jno
in
ss
js
pop
pushl
cmp
popf
das
xchg
and
pop
addl
and
adc
in
in
pop
sti
and
push
xchg
mov
icebp
mov
cmp
add
xchg
inc
push
loope
sbb
imul
inc
neg
fisubs
out
inc
in
mov
and
fldl
cmp
or
xor
cwtl
inc
jnp
mov
data16
add
sub
jmp
xchg
pop
sahf
push
arpl
daa
fisttpll
test
xchg
int
ljmp
enter
test
std
sub
jo
or
iret
outsl
adc
incl
rcl
je
cli
les
iret
pop
jmp
or
xor
adc
or
frstor
sbb
xchg
jbe
cmp
jae
lods
in
push
ljmp
enter
stc
stos
cmp
jg
stos
push
mov
rolb
inc
mov
not
rolb
inc
mov
or
imul
push
leave
jmp
mov
mov
std
cs
sub
mov
sbb
jle
dec
mov
rorl
adc
dec
push
push
mov
out
or
lret
in
jo
inc
addr16
lods
inc
hlt
mov
aaa
shrl
pop
xchg
fstpl
aad
and
adc
out
stc
imul
sbb
data16
adc
cmp
fs
lock
sbb
adc
jl
into
and
mov
cmpsb
shlb
adc
in
mov
cltd
dec
or
scas
mov
mov
xchg
adc
xlat
popa
arpl
and
cmpsl
inc
add
loope
je
std
cmp
mov
inc
and
lret
push
push
xor
sub
sbb
and
sbb
push
aas
in
and
mov
cmp
hlt
lahf
sub
mov
fiaddl
dec
cmc
popf
add
xchg
in
jnp
adc
sub
pop
call
lcall
mov
in
lds
pop
test
add
inc
xor
mov
push
adc
sbbb
in
repnz
xor
sbb
incb
xor
pop
test
pop
xchg
pop
lods
push
stos
mov
xchg
aam
jl
cmp
fdivrl
pop
mov
sbb
fldenv
xor
lds
aas
mov
dec
out
fs
xchg
cmp
incl
shr
mov
lds
jmp
sti
mov
aad
push
xlat
fcmovbe
jmp
sbb
cmp
xchg
sbb
in
push
shr
in
jle
xchg
ja
repz
jecxz
cld
data16
mulb
out
jmp
orl
add
adc
enter
push
push
sarb
sub
icebp
test
xor
sub
xor
jecxz
call
push
xlat
cmp
bound
mov
cmp
int
push
out
inc
inc
lret
fnsave
lea
icebp
sbb
jno
mov
pop
aad
nop
xor
faddl
divl
fildll
jnp
test
scas
loope
fdivrs
pop
add
mov
jns
sub
stc
fnstenv
clc
out
lods
ja
xchg
sbb
adc
xor
out
push
jo
pandn
lcall
pop
xor
clc
cmp
jne
mov
push
mov
imul
cmpl
lea
sub
fwait
mov
in
adc
mov
inc
inc
sbb
mov
lods
je
sbb
mov
dec
mov
mov
or
rcr
xor
out
pop
jno
xchg
lcall
jl
roll
xchg
inc
mov
jbe
xchg
mov
sbb
mov
push
call
push
or
fsubrp
mov
popa
sahf
mov
xlat
popl
sub
dec
cmp
xchg
adc
push
mov
xchg
dec
jge
rorl
bnd
mov
test
inc
xchg
inc
in
jno
mov
test
xor
xor
and
movsl
nop
lods
mov
push
mov
mov
sub
dec
xor
mov
and
adc
fcompl
fidivrs
sbb
fcmovnbe
xor
cmp
call
int
or
gs
cmp
or
repnz
iret
mov
sbb
add
push
into
and
mov
mov
mov
int3
divb
adc
loope
rolb
pusha
sbb
inc
in
arpl
inc
out
sbb
lods
xor
jg
lods
mov
or
pusha
jp
data16
ret
lcall
xor
mov
outsb
loop
adc
leave
int
xchg
insl
pop
inc
pushf
dec
xor
adc
mov
push
icebp
sub
push
clc
inc
ds
xchg
loopne
xchg
testb
shll
pusha
and
rcl
int3
call
push
mull
add
xor
pop
dec
frstor
cmp
adc
js
and
inc
and
insl
fmuls
mov
adc
or
mov
mov
cli
mov
push
sbb
or
jnp
xchg
jg
cmpsl
js
inc
push
mov
inc
xchg
mov
add
and
xchg
stos
fcoms
add
mov
insb
xchg
jo
imul
loop
mov
scas
or
dec
xor
lods
sbb
lret
and
outsb
inc
leave
jp
pop
add
sbb
insl
mov
xchg
pop
insl
out
clc
push
std
xor
push
adc
inc
pop
pop
fcoml
lret
sub
pop
shl
dec
cmp
push
sbb
mov
loop
outsb
inc
mov
inc
sub
stc
cld
lods
ret
pop
idivl
and
push
jnp
cmp
jo
test
movb
les
mov
loopne
adc
push
fmuls
push
pop
ja
inc
add
insb
sahf
test
inc
xchg
add
dec
jmp
cwtl
std
xor
mov
inc
sbb
cmp
and
dec
push
add
aaa
out
adc
or
mov
ja
test
mov
mov
lea
out
inc
mov
mov
imul
or
pop
popa
pop
inc
cmova
xlat
adc
jmp
pop
adc
fyl2xp1
mov
adc
popa
and
loop
push
js
gs
mov
inc
xchg
js
cmp
push
clc
xor
arpl
jns
adc
pop
jae
into
push
loope
inc
cmp
mov
push
test
outsb
jp
and
cs
xor
lahf
or
mov
stos
js
cmc
stc
pop
push
cmpsl
jnp
sub
xchg
jle
sbb
push
leave
dec
sti
lahf
mov
int
imul
pop
shl
dec
inc
cmpsb
jmp
mov
mov
stos
repz
std
les
xchg
adcb
mov
mov
jg
pop
add
sbb
add
mov
mov
pop
jp
xor
push
pop
bound
scas
test
xor
adc
mov
inc
lahf
xchg
daa
enter
divl
pop
xor
push
test
mov
imul
mov
ret
jo
lock
pusha
ds
mov
aam
clc
mov
lods
cld
mov
pop
and
mov
fisttpl
das
mov
sub
jns
push
or
insl
xchg
add
test
pop
in
xor
lret
movsb
lret
daa
pop
xor
in
jo
leave
xchg
sarl
ss
jne
lods
ret
push
cmc
push
lods
mov
sub
push
data16
fidivrs
or
push
push
outsb
rcrb
push
iret
insb
es
xor
outsl
mov
repz
cmp
bnd
push
sub
lcall
push
xor
jbe
hlt
lret
ljmp
mov
imul
pop
pushl
cmp
leave
in
lret
dec
fs
mov
push
cmp
ljmp
or
dec
adc
cmpsl
fstps
insl
mov
push
dec
daa
push
clc
or
and
ficoml
xchg
mov
aaa
scas
mov
nop
outsl
popf
les
jo
movsl
jne
hlt
sbb
repnz
icebp
popf
push
jns
pop
pop
xchg
push
cmp
fwait
jecxz
xor
das
lods
push
jb
sarb
pop
bswap
pushf
test
ja
add
ljmp
inc
xorb
outsl
mov
cmp
mov
shlb
lcall
and
pop
xor
out
loop
rcll
call
fnstsw
dec
adc
cmp
inc
int
popa
ret
incb
std
mov
jecxz
mov
jge
mov
popa
adc
lock
fisttpll
rcl
out
add
mov
mov
add
and
inc
push
negl
out
mov
fdivs
mov
xchg
or
rcrl
pop
insl
xor
icebp
and
loopne
inc
out
shrd
js
pop
jle
sbb
popa
jns
sub
andb
mov
sub
or
cmc
pop
stc
or
cmp
dec
mov
aaa
or
xchg
add
dec
pop
dec
push
xorb
lods
mov
je
and
insl
pop
call
mov
jno
mov
shl
mov
pop
rcr
icebp
pop
push
ret
lea
mov
mov
aad
mov
sub
xor
call
sbb
setae
sbb
mov
sbb
lcall
jns
repz
mov
testb
pop
mov
rorl
sbb
pushfw
cs
sti
mov
sti
lahf
jmp
mov
aam
pop
jge
rcr
movb
jno
andb
add
cmp
bound
scas
jmp
fnstenv
jge
aam
scas
mov
popa
jmp
sbb
adc
dec
sub
movsb
rcrl
fildll
in
insb
inc
jp
lea
fnclex
mov
in
push
cmp
mov
mov
vmwrite
sub
lret
lods
rorl
lret
pop
addr16
mov
pop
inc
insl
ret
add
sbb
add
ror
imul
push
xchg
cmp
sbb
fnstcw
dec
lods
idivl
xchg
ud0
inc
push
sbbb
cld
mov
subl
lret
mov
add
xorb
pusha
pop
or
mov
mov
jbe
mov
inc
int
popa
adc
popa
aad
inc
hlt
movsb
hlt
xchg
mov
mov
dec
jl
adc
mov
cmp
mov
mov
lea
jae
push
jo
jl
lret
cmp
push
mov
jp
out
mov
inc
push
dec
movsb
mov
clc
and
pop
and
adc
mov
xchg
jno
cltd
sahf
jmp
fldt
pop
jmp
in
dec
add
push
insb
pop
insl
mov
nop
xchg
or
xor
test
mov
dec
test
mov
setg
ret
fsts
mov
push
pop
jb
mov
jecxz
push
out
pop
fwait
dec
les
pop
mov
movl
inc
xchg
pop
add
jge
cld
push
cmpsb
mov
dec
std
jae
dec
stos
cmpsl
add
sbb
cli
rcrl
pop
popl
in
xchg
xor
insb
mov
mov
jg,pn
or
pop
sbb
sbb
loop
sbb
push
test
xchg
sub
ficoms
or
pushf
pop
push
addr16
fucomp
shlb
rorl
mov
popf
addl
inc
js
cld
out
jo
lret
xchg
xor
and
lock
orl
pop
add
xorl
jmp
add
sub
cltd
mov
cmpsl
movsb
dec
aaa
mov
decl
fistl
sbb
call
aam
fcompl
repz
gs
sbb
and
push
jnp
sbb
dec
jo
cmp
test
sarl
push
xor
cmpsl
mov
subl
test
in
out
psraw
std
sarb
jmp
pop
mov
sbb
xor
add
faddp
pusha
xchg
inc
push
cs
fs
outsl
ja
add
pop
dec
jg
sub
int
push
sub
mov
jbe
adc
mov
mov
fwait
test
inc
outsb
xor
repz
and
dec
dec
loop
push
cmp
popf
add
lcall
jns
js
push
adc
lahf
add
dec
loopne
push
scas
mov
xchg
stc
stos
cmc
adc
adcb
and
mov
push
pop
mov
mov
popf
stos
jo
enter
ret
ret
addr16
jp
or
xor
mov
fimuls
iret
xchg
mov
dec
add
mov
ret
adc
test
push
mov
cmp
mov
mov
cmpsb
fstp
mov
xchg
repz
push
js
cmpb
test
sbb
and
js
jnp
fs
jnp
sub
jae
aas
pop
rorb
nop
sub
push
mov
daa
xor
jle
xlat
lods
pop
loopne
pop
or
std
movsb
in
inc
aam
xchg
shlb
fdivrp
fistpl
lahf
std
movsb
idiv
dec
rcll
ds
test
ret
inc
xchg
xlat
repz
sub
xor
dec
jmp
sub
faddl
movl
cmpsl
mov
mov
mov
sub
cld
out
out
sahf
inc
int3
push
sub
aas
test
addr16
sbb
mov
outsl
aam
addb
jns
lods
dec
scas
and
lcall
mov
stos
dec
out
ret
clc
inc
divb
xlat
push
and
aam
pop
xor
daa
aad
mov
shlb
negb
or
loopne
mov
test
xor
xchg
jp
inc
sbb
cmp
ja
add
xor
das
shrd
pop
pop
inc
aam
test
sub
and
push
repz
sbb
push
hlt
jnp
loopne
fidivrl
inc
mov
adc
mov
add
push
cmpsl
or
mov
inc
add
push
movsl
mov
loopne
incb
lcall
push
sbb
jle
je
sbb
mov
imul
lea
push
adc
test
addr16
popa
add
outsb
test
insl
rcrb
scas
xchg
outsb
scas
xor
pushf
and
xchg
out
xlat
inc
mov
jle
out
test
cltd
mov
arpl
clc
les
mov
movsl
jp
divl
loope
fdivs
lret
scas
out
inc
imul
fisubrs
sbb
jns
cltd
dec
mov
in
notl
cli
or
jle
and
sbb
jg
cmp
ljmp
aad
inc
add
dec
sub
adc
iret
ud2
subb
inc
mov
xor
pop
dec
inc
cli
jecxz,pn
daa
and
xchg
js
int
loopne
cs
icebp
or
roll
mov
mov
jg
int3
addr16
les
lds
pop
aas
ja
mov
fisttpl
in
movsl
mov
jecxz
pushf
mov
inc
loope
dec
pushf
jae
fucom
stos
sub
pusha
call
jmp
adc
loope
or
inc
jecxz
in
ficomps
clc
repz
jne
add
push
dec
movsl
adc
sub
out
dec
mov
add
inc
faddp
imul
out
mov
outsl
pop
or
cmpsb
outsl
mov
out
hlt
jno
lds
arpl
sbb
xchg
popf
cmp
scas
mov
xchg
pushf
setns
mov
dec
repnz
scas
push
xchg
fwait
sbb
cltd
push
loope
inc
xlat
adc
into
fisttpl
jecxz
lds
sbb
pop
xchg
out
in
jns
xor
cltd
lods
dec
scas
lret
jp
sub
push
add
hlt
jl
mov
push
cmpsl
nop
xlat
add
bnd
cmp
js
lret
in
pop
xor
mov
mov
fildl
inc
xchg
adc
jne
ljmp
mov
out
fsubl
pushf
enter
scas
dec
push
loopnew
pop
mov
mov
push
dec
pop
lret
fwait
push
jp
jmp
add
cwtl
mov
fldenv
dec
popf
hlt
rcll
jg
hlt
fdiv
sub
sahf
fstpl
sub
out
rcll
cmp
mov
repz
out
cmp
not
aaa
xchg
and
jl
adc
into
jno
or
jne
adc
lock
xor
inc
pusha
inc
clc
fcmovb
rcll
jbe
ds
cwtl
fs
sub
push
icebp
test
push
or
in
daa
or
aad
outsb
mov
fs
idivb
mov
jnp
adc
mov
cs
xchg
or
lds
popf
ds
loope
cmpsl
cmp
sbb
stos
pop
leave
pop
mov
sarl
pop
xchg
and
adc
shlb
inc
xchg
fisubrs
jle
or
ss
push
cmpsb
ds
jl
mov
fwait
test
imul
add
outsl
sub
lcall
push
dec
xchg
je
cli
mov
ret
dec
js
jg
xadd
sub
cltd
mov
dec
test
jae
mov
or
sbb
xchg
loop
jnp
arpl
push
aas
out
cmp
xor
adc
push
cmp
imul
mov
jle
lea
loope
mov
cmpsb
cltd
in
dec
loop
xchg
sub
sar
gs
adc
mov
add
mov
jg
sub
adc
test
push
xchg
or
and
ljmp
or
add
push
cwtl
pop
adc
pop
xchg
push
repnz
addl
cmp
dec
push
ss
enter
in
pusha
cli
data16
out
pushf
test
push
jecxz
lods
dec
cmc
sbb
xchg
lcall
inc
lock
imul
or
sarl
push
jnp
in
or
xchg
push
arpl
test
mov
and
push
lods
xchg
dec
and
lret
cmp
ss
sbb
xchg
add
cmp
fsub
hlt
cmpsl
jns
lahf
mov
mov
insb
lret
push
mov
mov
xchg
rcr
pop
pop
xchg
sahf
ret
in
sbbb
mov
xor
ret
fdivp
pushf
addr16
and
push
outsb
or
and
adc
push
add
or
mov
jmp
clc
sub
mov
xlat
mov
lret
mov
mov
mov
cmp
xchg
adc
fildll
mov
sub
gs
xchg
call
adc
arpl
adc
sub
sub
scas
clc
aad
ret
add
aas
inc
mov
in
and
data16
pop
repz
mov
dec
jp
in
push
test
pop
pop
ljmp
pop
cmp
push
push
fsubp
ret
aam
sub
aad
lods
insl
sbb
adc
jle
nop
xchg
dec
leave
xchg
inc
rorb
jmp
push
outsl
lds
std
mov
add
stos
loop
sbb
xchg
or
movsl
jmp
divb
int3
dec
scas
ret
jge
fildl
rclb
stc
cs
mov
mov
repz
fisubl
mov
cli
jno
adc
mov
mov
xchg
dec
sub
mov
repnz
xchg
stos
and
mov
in
push
xchg
and
mov
ret
iret
lret
add
movsl
dec
shlb
jge
or
nop
adc
ror
sub
cmc
xor
incl
mull
std
shrl
push
sti
xorb
inc
mov
in
call
insb
jg
ja
cld
mov
lahf
push
inc
mov
imul
sbb
push
push
psraw
cmp
cmp
mov
mov
mov
inc
dec
sbb
ret
jns
cmc
cmc
pop
sub
jae
into
int
dec
repnz
mov
stos
and
dec
or
dec
or
imul
sbb
loope
sti
rorl
test
mov
ja
in
pusha
fs
int3
ret
mov
inc
int3
jne
xor
cmp
iret
fcomps
and
pop
repnz
ljmp
out
cld
add
pop
scas
cmp
ret
nop
call
xchg
jb
sbb
add
dec
adc
xor
inc
dec
lahf
xor
testl
mov
bound
mov
aam
or
mov
insl
cs
dec
stos
lods
inc
xor
int
nop
mov
pop
and
lods
sarl
movsl
stc
sub
cmp
notb
sbbl
cltd
mov
es
dec
pop
xor
shl
pusha
call
lods
jmp
dec
add
ja
in
fidivrs
pusha
and
test
jae
or
loope
cltd
cli
cltd
mov
imul
mov
jnp
mov
pop
lea
or
cmp
dec
movsb
std
pop
mov
pop
pop
ljmp
das
loop
sarl
mov
pop
sub
add
rorb
xchg
push
imul
dec
sti
out
cmp
pushf
push
or
and
adcl
inc
out
gs
xchg
fnsave
jmp
cmc
adc
mov
mov
test
sub
mulb
cmpsl
rorb
adc
shlb
adc
sahf
sbb
int
iret
ljmp
mov
cmp
mov
lock
xchg
lcall
add
jp
sbb
lret
cmp
andb
xchg
pop
mov
out
add
sub
or
test
mov
int3
ficoms
jecxz
sbb
movsb
je
push
mov
lret
mov
test
or
inc
in
add
push
cltd
lock
lock
push
pop
cli
inc
adc
jle
cmp
mov
sbb
in
mov
cmp
add
out
cld
mov
or
mov
mov
in
dec
pop
and
sbb
daa
mov
lods
bound
btcl
lds
dec
inc
lea
jbe
icebp
push
fdivrs
push
dec
test
adc
cmp
rolb
xchg
mov
ficompl
mov
xor
inc
xchg
dec
aas
jo
pop
dec
je
stos
jnp
mov
lock
cmp
add
jecxz
or
pop
mov
bound
dec
cld
mov
out
enter
push
mull
push
pop
dec
pushf
cmp
adc
int3
adc
ret
jmp
mov
shll
xchg
push
ja
and
add
pop
cli
cmp
jae
xlat
daa
push
iret
nop
das
dec
xorb
lds
rorl
push
adc
add
mov
gs
stc
mov
rorb
into
mov
dec
jg
test
xchg
mov
aas
testl
sti
rolb
int
add
push
ja
jle
cmp
nop
enter
mov
lds
push
rorl
cltd
and
popf
pop
xor
jno
add
jbe
pop
mov
outsl
out
cmpsl
cmpsl
jno
std
mov
or
inc
jmp
pop
imul
les
mov
daa
or
mov
popf
push
pusha
jbe
dec
mov
out
push
mov
xchg
loope
lahf
repnz
add
ljmp
xchg
adc
out
push
and
pop
mov
jg
js
xchg
test
aas
insb
or
insl
fidivl
mov
out
jle
lret
pop
mov
cwtl
push
hlt
hlt
and
sub
movntq
mov
xchg
fsubrp
sbb
mov
mov
inc
dec
orps
orl
fcmovbe
and
cmp
dec
pop
out
enter
mov
sbb
jne
adc
clc
jle
sub
sahf
mov
mov
lea
pusha
cli
adcb
dec
jnp
add
std
incb
jmp
or
int
dec
cld
call
rcrb
sbb
nop
in
les
adc
fldt
aaa
adc
sbb
cld
out
xchg
adc
data16
pop
lods
sahf
xchg
pop
std
cmpsl
dec
leave
xor
inc
add
lods
sub
pop
stos
or
and
xor
fs
push
xlat
and
and
xchg
pop
xchg
aam
aad
jecxz
cwtl
fdivs
movsb
xchg
shr
dec
stos
push
jne
or
bound
pop
aad
add
mov
das
filds
sbb
mov
dec
xor
stos
add
add
pop
fldt
mov
bound
cmpsl
lock
jmp
cmp
dec
mov
lss
jbe
xchg
out
mov
sahf
je
xor
cli
js
xlat
or
fucomi
pusha
and
int
leave
mov
cmp
sbb
mov
pop
sbb
shll
int3
scas
inc
dec
jne
pop
test
outsb
xor
inc
bound
sub
rcr
jge
pop
sub
xchg
arpl
adc
push
hlt
inc
std
cmp
std
pop
jge
lea
fmul
or
inc
or
into
ss
pop
pop
loopne
imul
nop
cld
dec
adc
dec
jmp
pop
mov
das
push
les
repnz
push
cld
cmp
jecxz
andl
and
cmovns
mov
adc
ljmp
xor
add
sbb
mov
outsb
inc
fnstsw
nop
popf
es
js
pop
scas
inc
xor
xor
and
push
loop
xchg
xorl
push
jmp
xor
test
fdivl
inc
mov
and
or
xor
cmpsb
adc
pop
or
sub
mov
repz
sahf
test
lea
jne
sbb
and
sahf
xchg
nop
jl
lret
pop
and
je
aam
push
aam
enter
mov
in
loop
popf
mov
lcall
daa
cmpsl
enter
stos
hlt
xchg
xchg
mov
repz
loope
xchg
xchg
dec
fwait
inc
xor
jg
repnz
movsl
stos
push
lea
or
repz
or
test
ja
mov
dec
scas
pop
push
aam
cmp
in
push
sbb
adc
pop
pop
adc
sub
bnd
mov
and
insb
fisubrs
aad
aad
xor
mov
divb
push
xchg
xor
mov
mov
inc
inc
lcall
popf
add
or
into
xor
jg
xor
ret
jne
cmpsb
pop
loope
stc
mov
xlat
xor
mov
repnz
cwtl
cmpsb
movsb
hlt
dec
pop
jge
call
mov
adc
jl
mov
aaa
test
repz
stos
flds
mov
xlat
pop
out
shll
jbe
pop
aaa
mov
push
into
xchg
fsts
aaa
cmp
pop
push
jmp
pop
icebp
fbstp
fwait
lods
add
test
fidivs
xlat
in
das
fiadds
fmull
jb
xor
push
outsl
sub
sub
shrb
pop
sahf
iret
jl
pop
pusha
aas
test
cmp
xchg
out
pop
add
xchg
xor
mov
jmp
sub
inc
mov
ror
cs
mov
push
ljmp
in
push
mov
notb
pop
fcoms
pop
push
mov
test
dec
push
andl
test
bnd
sarl
fs
cld
dec
sub
mov
cmpsl
xor
pushw
out
les
xchg
inc
lods
mov
or
dec
dec
inc
xchg
aaa
pop
dec
popf
in
int3
lods
dec
pop
insb
les
int
subl
xlat
test
mov
stc
repnz
xchg
lret
mov
cmpsb
or
xor
aad
sar
repnz
mov
jo
gs
xlat
popa
ret
add
test
sbb
cmp
xlat
xor
in
std
call
sbb
sub
sub
xchg
push
cmp
inc
subb
cmp
es
fdivrs
sbb
sbb
or
stos
testb
mov
fbld
es
dec
push
mov
xor
sahf
mov
sbb
adc
imul
and
imul
cmp
int3
push
mov
into
fistpl
pop
pop
jbe,pn
cwtl
insb
mov
lret
inc
mov
cmp
lods
test
add
hlt
test
cli
or
xchg
icebp
fwait
xchg
xchg
dec
int
sbb
sub
or
ss
enter
lods
xchg
popf
xchg
inc
mov
cwtl
inc
subl
rcr
mov
mov
cltd
cli
int
out
in
xor
or
pop
mov
jne
mov
fsubl
cmpsb
mov
cld
test
pop
adc
adc
arpl
push
lret
aam
adc
lahf
jbe
int
aaa
mov
add
into
dec
popf
aam
nop
and
imul
jbe
imul
enter
test
std
mov
lods
xchg
pusha
cmc
js
mov
cmc
dec
cld
fs
out
xchg
bound
xor
cld
adc
in
outsb
lret
xchg
outsl
scas
jno
mov
ljmp
dec
jae
sub
je
rcrb
addl
jbe
sub
cmp
mov
push
jno
popf
mov
mov
mulb
push
push
cli
fidivrs
pop
aas
jo
push
push
out
push
push
mov
in
int3
mov
or
cmp
mov
daa
into
jo
xchg
dec
dec
stos
ljmp
sub
pop
mov
pop
out
ret
andl
dec
repz
lock
xchg
lds
popf
mov
addl
bound
mov
pop
stc
stos
cmc
adc
jno
fiaddl
xor
mov
jle
xlat
pop
in
stc
pop
adc
pop
adc
lahf
stc
fmull
inc
mov
mov
xchg
shlb
fistpll
cld
mov
mov
and
out
ja
ja
push
fld
pop
dec
add
sbb
in
cld
cmp
cmpsl
mov
xlat
loopne
repnz
je
fwait
jp
loop
or
js
scas
lods
inc
sub
je
repnz
mov
shlb
scas
loop
add
and
add
aad
iret
or
push
movsb
int
mov
mov
mov
lcall
repz
leave
xor
lcall
stc
or
pop
addb
mov
iret
push
push
jl
lahf
jae
rcrb
and
clc
outsl
lret
fabs
cmp
stos
push
lahf
loop
mov
shr
mov
sub
insb
push
mov
ret
add
call
sub
xchg
and
cli
xchg
cli
mulb
loopne
push
and
inc
sub
ljmp
mulb
scas
adc
xor
out
dec
daa
adc
scas
icebp
inc
xchg
jb
je
inc
pop
dec
js
mov
lcall
cmp
jge
addl
rcrl
and
add
sbb
adc
sbb
jp
fwait
xor
imul
stos
adc
test
pop
out
test
sub
pop
ljmp
sbb
pushf
dec
push
pop
cmp
mov
pop
jns
pop
pop
in
pop
add
adc
xchg
pop
push
pusha
shlb
mov
push
dec
and
jo
lahf
fcom
mov
mov
test
leave
adc
pop
pop
cmpsl
out
stos
test
push
dec
repnz
jno
loop
dec
nop
xchg
ljmpw
xor
testb
sar
lods
push
lods
cltd
mov
jo
cmp
push
daa
es
stc
dec
push
mov
pop
push
xchg
mov
jp
jns
ss
outsb
data16
fcmovu
sub
loopne
lret
sbb
rorl
cmp
inc
and
mov
mov
out
mov
ja
or
out
int
loopne
push
xorl
in
jle
out
jl
cmpsb
mov
scas
mov
lock
pop
addl
scas
xchg
lods
push
stos
jbe
in
test
xchg
in
scas
in
jae
out
sahf
mov
mov
jns
xchg
or
rcr
sub
jmp
repz
notl
cmp
mov
sbb
int3
pusha
fistl
cmp
adcl
lret
dec
sub
fstpl
sub
repz
mov
xchg
xchg
mov
xor
xor
inc
xchg
fwait
jmp
fstps
inc
cmpsl
into
cmp
aas
fsubrs
mov
imul
sbb
fsub
sbb
lcall
or
cmp
jo
stos
dec
cli
or
cwtl
bnd
mov
test
jmp
pop
lock
pop
ret
rcl
pop
repnz
repz
xor
inc
pop
ljmp
push
mov
stc
sub
jae
lods
outsl
mov
sub
cld
repz
es
movsl
orl
stos
cld
push
push
mov
xchg
pop
shrb
inc
stos
mov
nop
and
pop
test
cmp
bound
jbe
dec
push
xchg
dec
addr16
dec
dec
into
add
out
jg
mov
cmp
jle
pop
in
das
sbb
dec
lods
push
divb
loop
lret
adc
pop
test
ja
repnz
push
loopne
jb
mov
int3
fdivp
ficoms
shl
xchg
cmc
mov
js
loop
das
sbb
cmp
das
out
fimull
jo
jns
mov
mov
xor
mov
div
inc
vdivpd
or
jl
mov
jbe
mov
pop
mov
imul
and
jo
cmp
int3
div
leave
push
pop
push
cmp
lea
movsl
cmp
pop
xchg
mov
xchg
ja
outsl
and
dec
addl
adc
es
fdivrp
xchg
cs
pushf
xlat
clc
into
ret
lods
sbbb
mov
cmc
ds
inc
add
xchg
mov
imul
outsb
insb
js
fwait
inc
bnd
pop
int
jl
dec
incl
shll
in
andb
cli
iret
aam
sub
xlat
jb
push
push
fcoms
mov
add
cs
xchg
mov
aas
lcall
in
enter
sbb
mov
adc
jnp
or
mov
rol
sbb
adc
stc
lods
jae
sub
ret
aaa
lcall
inc
cwtl
and
mov
gs
jne
push
adc
or
stc
mov
movsw
loop
mov
mov
cmpsl
xchg
loop
mov
pop
pop
out
movsl
fisubrs
int3
pop
in
popa
test
aad
int3
push
and
movl
xlat
inc
and
pusha
jge
ret
mov
out
aad
or
push
enter
lods
pop
xor
push
pop
sti
xor
stc
sub
mov
mov
pushf
push
xchg
mov
cs
sbb
xor
inc
test
cmp
cli
test
jae
xor
inc
pop
fadds
movsb
xchg
mov
pop
jbe
test
mov
jo
sbb
or
cltd
stos
shll
dec
out
lds
shlb
mov
jp
jne
adc
fbstp
arpl
iret
add
rorb
sahf
lcall
lret
lcall
cmpsb
pop
or
lret
xor
aam
in
cmp
jp
inc
jmp
mov
or
sbbl
xor
dec
push
ss
out
sbb
sub
scas
out
insl
movsl
or
repnz
xchg
inc
jmp
sub
and
cwtl
jb
jbe
call
lds
fistps
add
add
inc
sti
ljmp
cmp
scas
jl
loope
mov
sub
push
inc
scas
sub
stos
jmp
cmp
jno
xor
xchg
out
jmp
xchg
push
mov
mov
mov
enter
movsl
or
push
or
add
dec
push
jmp
in
shl
movsb
sub
sbb
sahf
or
fsts
aad
jmp
or
cltd
jg
xchg
pop
ss
jge
add
cld
inc
pop
jbe
int3
arpl
inc
andl
mov
mov
mov
add
sbb
mov
mov
push
stc
imull
cmp
pop
repnz
test
lret
leave
cmp
push
mov
insb
addr16
jne
inc
test
les
ss
push
test
mov
push
loopne
lea
inc
fldt
mov
movsb
jg,pt
roll
jbe
pusha
xchg
movsb
dec
inc
dec
mov
xchg
imul
loopne
push
dec
sahf
lods
jbe
and
jmp
cmp
pop
pop
jg
adc
out
sbb
push
and
ret
xchg
and
pop
cmpsl
pop
lods
bound
subl
and
pop
stc
push
xchg
inc
lahf
ret
mov
pop
and
aam
dec
lea
add
push
jno
test
lods
popa
mov
jbe
enter
leave
pop
gs
outsl
fbstp
add
sbb
mov
idivl
pop
aaa
sbbl
mov
addr16
nop
cli
fwait
cs
dec
sbb
xchg
push
out
ss
lret
add
mov
inc
daa
in
das
enter
dec
outsb
arpl
mov
inc
nop
mov
push
cmpsb
mov
pusha
nop
pushf
test
mov
mov
test
das
mov
jb
pop
or
xchg
push
jb
pop
xchg
mull
push
pop
hlt
gs
hlt
repnz
movsb
and
gs
je
mov
nop
pop
add
mov
or
insl
pop
das
gs
xchg
mov
mov
iret
and
mov
lods
mov
and
dec
mov
inc
aaa
pop
ljmp
sbb
sub
xor
ds
fs
lods
aam
sbb
xchg
addr16
cwtl
dec
out
jmp
dec
daa
iret
or
in
pop
sbb
sub
inc
jo
imul
inc
insb
mov
aad
inc
jns
sub
andl
mov
cmp
insl
sahf
mov
adc
add
cld
out
inc
xor
or
scas
and
sbb
mov
sub
lret
ror
stc
mov
cltd
xchg
cmpsb
in
in
cld
roll
jae
lret
loop
insb
data16
loope
mov
je
sub
mov
push
adc
cli
and
and
xchg
push
int
push
stc
clc
cmpb
or
aad
ja
mov
push
data16
loop
lcall
add
out
in
lret
xchg
mov
mov
aam
lret
test
cmp
jl
je
jge,pn
cmpsl
xchg
ljmp
push
stos
cmpsb
sub
cmp
cmpsl
incl
movsl
cltd
adcl
stos
test
or
mov
int
sub
movl
in
repnz
pop
stos
and
jmp
sub
inc
cwtl
loopne
movsl
pop
or
sti
pop
loopne
xchg
mov
repz
push
mov
pusha
fldl
ja
push
cmp
loopne
mov
shll
push
or
mov
bound
lret
xchg
fidivrl
jecxz
jmp
xchg
int
pop
lods
loope
sub
jbe
pop
jns
repnz
pop
pop
mov
sbb
loope
add
mov
cmpsl
movsb
xorb
mov
pop
ret
dec
jmp
repnz
dec
addb
mov
sub
xchg
jno
push
str
jb
mov
movaps
test
xchg
hlt
and
fcompl
into
or
fsubl
sub
push
insl
fnstenv
lea
inc
cmc
sysexit
ja
out
arpl
lret
fsubs
add
stos
jmp
pushf
or
and
jge
mov
fidivs
dec
add
fisubl
popa
stos
movsb
test
adc
in
adc
or
lea
xchg
scas
xchg
and
hlt
pop
mov
shlb
jb
mov
arpl
repz
sbb
inc
lock
das
in
xlat
sar
iret
ret
mov
ja
jmp
sahf
mov
mov
xor
mov
adc
out
or
inc
push
pushf
cmpsl
push
mov
cld
lds
dec
lds
scas
mov
loopne
ja
xchg
mov
xor
leave
or
sub
xor
sbb
mov
out
in
xchg
push
inc
or
ja
jnp
push
dec
addr16
inc
sub
sbb
aad
mov
push
jge
push
sbbb
stc
inc
mov
jns
stos
movsb
out
hlt
gs
xchg
mov
into
movsl
sbb
xlat
xor
or
inc
jmp
repz
and
mov
pushf
xchg
or
jmp
ja
inc
pop
mov
or
sti
cld
lret
sbb
daa
lahf
inc
test
mov
nop
repnz
movsl
pop
sbbl
cltd
pop
cmp
aaa
jmp
std
lods
inc
push
sbb
outsl
test
push
xchg
andl
cmpsl
das
sbb
hlt
int3
add
sbb
movsl
clc
mov
mov
cmp
add
push
out
outsl
scas
cmp
insb
int
mov
arpl
add
es
sub
stos
sbb
sub
push
or
dec
jp
pop
push
scas
mov
shr
aad
lods
sub
fisttpll
dec
inc
pop
mov
addb
xchg
push
mov
faddl
and
das
mov
gs
test
pop
pop
out
and
xchg
outsl
mov
test
mov
lahf
insb
sub
push
nop
pop
int
jne
test
mov
mov
push
push
in
cld
sbb
push
xchg
cmp
xchg
pop
scas
icebp
mov
cltd
inc
or
ljmp
xor
imul
cmc
adc
xchg
inc
idiv
or
loope
lods
pop
xchg
mov
ret
mov
gs
inc
test
fisttpl
sahf
or
movsl
fdivr
sbb
notl
lret
lahf
and
sbb
or
sub
inc
mov
pop
adc
gs
shrb
xor
push
test
mov
in
and
popa
repz
js
into
sbb
xchg
fdiv
rcr
dec
sub
push
mov
cmp
pop
sbb
push
loopne
add
notl
fimull
sti
rol
out
in
push
xchg
pop
xor
pushf
jge
xor
push
mov
mov
xor
xor
jns
adc
and
add
stc
xchg
sub
sbb
push
mov
jne
fnsave
pop
xchg
sbb
lods
dec
push
aam
or
inc
imul
add
add
sub
inc
pop
xor
clc
imul
xchg
pop
mov
adc
fldt
mov
ret
or
dec
push
push
nop
pop
fwait
mov
dec
or
pusha
mov
stos
lods
pop
ret
xchg
jno
xchg
adc
das
nop
fdivrp
push
jle
sbb
fld
inc
push
stos
test
in
sub
adc
test
loopw,pn
rcrl
dec
xchg
xchg
jne
add
add
pop
mov
mov
dec
pop
pop
ret
int
fisubrl
mov
adc
mov
jmp
jle
lcall
cmpsb
je
mov
insl
inc
stos
jb
popa
pminub
scas
rcll
ljmp
call
mov
cld
and
sbb
jge
jnp
xor
add
jl
push
out
lods
mov
xor
je
adcl
cmp
sbb
sti
jmp
xchg
rcrb
mov
lods
or
std
clc
fs
leave
xchg
mov
add
sbb
push
push
xor
fs
fcmovnbe
or
insb
pusha
xor
jp
add
jmp
cmp
clc
dec
popf
mov
pusha
mov
sub
xchg
aaa
das
rcl
mov
pcmpeqw
test
jo
xor
ret
pushf
sti
add
xchg
fcmovnb
xchg
pushf
sub
mov
addl
fnstcw
scas
jo
out
mov
mov
insb
sbb
pop
adc
sahf
jl
mov
in
add
popf
insb
mov
lods
lock
pop
mov
hlt
add
stos
push
xor
insl
adc
mov
addr16
aad
insb
mov
or
out
mov
sti
cmp
dec
or
hlt
icebp
insb
aad
or
iret
cmpsb
lahf
pusha
std
fbld
dec
jl
adc
mov
push
cli
iret
outsl
gs
and
xchg
addb
gs
mov
inc
fbld
add
sbb
or
cmp
int
mov
xor
repnz
jp
in
scas
xchg
mov
popf
loopne
sbb
push
rcl
negl
adc
cmp
add
call
adc
sub
mov
and
sbb
adc
sub
out
js
mov
outsl
xchg
cmp
daa
stc
aam
xchg
jne
mov
push
loop
bound
mov
cmp
loop
popa
mov
testb
add
repz
xor
pop
jo
sbb
mov
pop
gs
push
mov
int
adc
or
bound
pop
repnz
fists
jbe
out
aas
pop
cmpsb
xchg
jmp
mov
cmp
mov
icebp
cmp
xlat
inc
jp
push
pop
cmovno
ret
jne
scas
pop
mov
jecxz
xchg
lahf
mov
fstpl
mov
cmp
clc
or
xchg
out
rorl
or
lds
ja
pop
or
xchg
dec
enter
je
dec
mov
scas
lret
mov
add
pushf
scas
out
and
mov
adc
jno
dec
popf
xchg
imul
jb
out
shr
std
jbe
and
leave
cmpsl
loopne
jne
shr
cmp
dec
movsl
xor
fistpl
rcll
dec
out
data16
cmp
push
loope
aad
notb
jg
inc
and
xor
aad
das
push
pop
or
bound
lods
popa
ds
jge
and
inc
sahf
or
call
and
les
jnp
or
scas
jnp
rorl
in
mov
mov
xchg
in
addr16
mov
pop
xchg
jo
insl
into
add
dec
std
les
stos
cmp
inc
lcall
and
sahf
repz
fbstp
je
fnsave
cmp
xor
insb
dec
fidivs
jmp
daa
lock
rcll
enter
dec
pop
fisubs
popa
mov
sbb
faddl
loop
in
jge
popf
push
dec
loope
call
xchg
aad
iret
add
sub
int3
mov
in
out
lcall
sbb
lahf
dec
mov
lahf
int
jnp
add
or
fisubl
sub
pusha
insl
add
jle
mov
testb
fisttpl
fstpt
imul
cmp
pusha
mov
mov
mov
insb
mov
push
cmp
out
inc
mov
fidivl
jns
inc
jb
popf
inc
xor
repnz
push
dec
mov
inc
adc
pop
cmc
lret
scas
xchg
inc
push
cs
popa
mov
mulb
push
fisttps
add
out
xchg
movsb
in
loopne
fcomp
jle
iret
out
movsb
inc
xor
push
cmp
inc
sahf
cli
mov
out
test
ljmp
cmp
xchg
cltd
movsb
xchg
mov
cmp
mov
mov
cli
mov
or
xchg
or
mov
mov
inc
rcll
mov
fsub
andl
push
ljmp
and
std
and
sbbl
in
andl
or
nop
test
jmp
sbb
pushf
cmp
icebp
imull
leave
xlat
jmp
jl
call
xor
xor
lret
movaps
ljmp
adc
les
test
das
cmpsl
lret
pop
ljmp
call
insb
aam
add
ljmp
cmp
inc
jb
fidivs
in
mov
das
sub
mov
xor
cs
arpl
ds
popf
pop
imul
iret
jne
hlt
mov
xchg
jb
adc
cli
fucomp
scas
data16
mov
mov
ficomps
lods
or
pushf
rclb
push
and
xor
xor
mov
mov
neg
adc
cld
lods
lea
mov
mov
rcl
movsl
cmpsb
jo
pop
jnp
jle
mov
mov
adc
movsl
inc
pop
pop
sub
sbbl
test
push
lahf
es
or
stos
mov
repz
add
movsl
xchg
in
dec
ljmp
xor
jns
sub
in
jno
ficoms
cltd
adc
imull
out
gs
outsl
mov
rorl
jle
clc
xor
aad
push
lea
cmpsl
je
daa
push
adc
sub
int3
add
lcall
sbb
fstp
popf
cs
cld
push
mov
lcallw
in
fxtract
jnp
mov
jne
outsb
dec
jo
mov
imul
inc
outsl
pop
loopne
inc
pusha
lret
iret
lods
loope
outsl
mov
rcrb
outsb
pop
int3
jmp
add
stos
and
aaa
out
mov
test
sbb
std
mov
ret
mov
jne
cmc
push
and
xchg
sub
xchg
dec
dec
cmp
test
add
faddl
int3
mov
ja
and
cmp
cmp
and
push
mov
cmp
mov
cld
xor
cmc
mov
shrl
nop
stos
outsl
imul
push
cmp
mov
lret
push
lret
rclb
test
jle
jecxz
fmul
pushf
cwtl
lea
sbbl
lahf
xchg
sahf
xchg
pop
shll
leave
aam
popf
mov
rorb
or
mov
nop
pop
push
scas
push
icebp
or
faddl
xor
and
xchg
adc
push
push
mov
enter
xlat
fildl
or
enter
orl
sbb
jp
jp
adc
das
gs
std
lock
push
or
clc
sbb
cmpsb
xor
or
orb
mov
fcmovu
cld
jnp
add
rorb
mov
xor
mov
add
adc
aaa
fsts
add
aad
mov
out
mov
iret
push
push
pop
or
lock
mov
adc
mov
fcomp
jnp
or
ret
pop
mov
add
test
fwait
lcall
int
iret
add
inc
int3
xchg
mov
push
pop
pop
lcall
lods
push
fadds
sbb
and
lret
xor
push
das
into
call
inc
add
imul
jo
pop
or
fmuls
ds
ficoms
push
jns
push
out
mov
sbb
xchg
aas
loope
les
mov
mov
loope
xor
push
push
pop
pop
jg
hlt
sbb
or
sub
lret
in
push
or
call
inc
call
popf
movsb
push
ljmp
push
jo
push
push
leave
pop
or
lahf
cs
and
ss
das
lea
sbb
popf
popfw
das
cmp
mov
xor
lret
mov
cmp
and
stc
jge
das
aaa
adc
inc
mov
pop
adc
fisttpll
add
sub
movsl
cli
cmp
or
jns
lahf
dec
test
jp
push
adc
xchg
push
movsl
out
inc
sbb
repz
add
adc
fldt
inc
pop
mov
cmpsl
mov
dec
out
pavgw
mov
outsb
les
jno
ja
and
cmp
xchg
inc
push
sbb
cltd
add
jb
stos
add
lods
inc
fists
pop
jbe
fsubr
pop
add
lret
lcall
jae
cwtl
mov
loop
test
icebp
adc
mov
or
orb
ja
dec
push
sub
scas
cmpsl
jl
push
jmp
std
enter
in
in
xchg
popa
push
aas
jecxz
sbb
lret
pop
iret
enter
push
sbb
or
mov
xchg
mov
jge
pusha
and
hlt
mov
mov
fsts
pop
jg
mov
das
mov
fmull
stos
add
sub
mov
xor
jno
test
or
mov
pop
inc
push
out
cwtl
pushf
cmc
ljmp
inc
xchg
fdivr
mov
inc
fwait
pushf
in
mov
ret
adc
mov
out
outsb
push
dec
lcall
enter
cmpsb
outsl
cli
leave
call
xchg
cmp
shlb
add
add
mov
jl
sbb
push
aaa
pop
mov
adc
ret
ret
out
and
mov
out
les
lret
mov
cmp
adc
or
jne
lahf
fiaddl
aaa
dec
mov
xchg
and
xchg
sarl
and
adc
loop
adc
cwtl
push
mov
scas
rolb
int3
jmp
cld
mov
in
or
xor
mov
ret
xor
rcrl
sarl
enter
sbb
xchg
cmc
and
test
sbb
sbb
js
aam
stc
in
pop
inc
mov
jo
ror
pop
xor
or
ds
insb
repz
add
mov
fxch
sbb
xchg
outsb
popa
fistpl
imul
mov
xchg
jno
jo
pop
mov
outsl
dec
sub
hlt
mov
scas
jmp
repz
das
add
popa
in
movsl
mov
out
push
inc
add
push
push
inc
into
test
scas
mov
mov
sarb
dec
add
test
aaa
pop
in
pop
js
inc
sahf
outsl
mov
scas
movsb
cmpsl
fbld
push
xchg
or
mov
f2xm1
stos
js
adc
xchg
cld
cli
jnp
adc
sub
adc
sub
mov
sbb
loope
add
mov
stos
stos
dec
inc
cli
cmp
dec
pop
loope
ss
xor
add
add
lcall
jge
movsl
repnz
imul
or
jl
lods
or
test
jmp
mov
jnp
outsl
arpl
jb
and
xor
or
ljmp
pop
dec
cmp
ret
divl
lds
jle
adc
ljmp
push
adc
cmp
lret
movsl
inc
shll
lret
cmpsl
fs
mov
stos
stos
outsl
ds
inc
in
sbbl
mov
inc
lcall
inc
xchg
cmp
mov
pop
dec
mov
movsb
in
popf
enter
push
mov
aam
sbb
out
movsl
and
add
and
push
adc
xchg
vpermilps
mov
lahf
cwtl
inc
mov
stos
xor
sbb
adcb
xchg
fimuls
test
insl
sbb
mov
incl
popf
idivb
sarb
cmp
movsl
pop
gs
sbb
test
daa
in
inc
or
orl
jnp
cmp
sub
out
clc
push
push
inc
xchg
and
addl
inc
jns
push
jns
cmp
xor
sub
cmp
je
and
stc
shll
or
inc
cmp
rcr
sub
push
jne
jl
xorb
scas
cld
pop
cli
mov
add
or
push
cmpsl
arpl
scas
xor
mov
sti
inc
xchg
mov
jecxz
test
enter
pop
sahf
insl
mov
stos
ja
mov
adc
popf
mov
push
xor
test
lret
cmp
mov
scas
sbb
fidivrs
scas
xchg
mov
push
xchg
and
cmp
cmc
popf
lret
ds
inc
pushf
xchg
repnz
xchg
clc
cmc
and
test
divl
movl
cmp
or
movsl
fdivr
mov
inc
aad
enter
xchg
adc
cmp
lcall
addl
push
dec
fstpt
subb
cmc
fidivl
add
imul
jo
xor
cmp
pop
xchg
repnz
adc
and
mov
sbb
cld
xor
cld
dec
jae
mov
outsb
cwtl
scas
fcos
sbb
lea
inc
jmp
xor
sub
fisttpll
push
jp
dec
push
out
icebp
inc
lea
inc
xor
clc
push
xchg
sub
int
movsl
div
insb
inc
cwtl
and
je
pusha
sbb
movsl
mov
mov
aaa
push
ret
popa
cmpsl
cmp
adc
clc
call
cmp
sbb
sti
sub
mov
in
or
jmp
filds
sub
add
fsubs
xchg
stos
mov
fcompl
fnsave
sub
pop
push
call
or
jo
push
or
xchg
push
cmc
push
lahf
ja
pushl
jno
dec
mov
mov
jne
add
sub
sbb
and
pop
or
cld
and
das
push
xor
mov
mov
fildll
pop
push
mov
out
push
push
push
rol
sti
mov
cli
call
imull
jne
pop
into
sahf
test
negl
out
sub
lods
inc
pop
mov
sti
cwtl
inc
inc
jns
cmp
dec
inc
ficompl
xchg
sti
popw
fimuls
imul
xchg
add
fcompl
push
adc
shrb
sbb
push
adc
pop
bound
jns
jnp
in
jnp
jnp
adc
cmp
xor
mov
stc
addr16
int3
dec
xchg
add
movsl
shlb
mov
jmp
and
pop
adc
mov
mov
jbe
pop
enter
mov
stc
jae
push
fdivrp
push
and
mov
fmuls
mov
lds
push
cmp
xchg
adc
aad
hlt
hlt
xor
jmp
push
ds
insl
cli
add
jp
test
push
xchg
adc
stos
jns
mov
lods
fnsetpm(287
sarb
sbb
loope
lret
repnz
adc
push
inc
mov
pusha
in
mov
mov
sbbb
push
or
stos
pushf
mov
xchg
lods
cmp
int
push
movsl
jb
mov
fidivl
repz
fildll
sahf
xchg
sti
pop
add
mov
xchg
inc
loopne
lds
fsubrs
xor
cmp
or
das
outsl
jb
and
repz
stos
insl
inc
add
dec
out
and
push
mov
cmpsb
stos
xchg
push
ret
lea
push
pop
pop
mov
unpckhps
cwtl
ror
jae
bound
stos
cld
int
jo
fidivrl
inc
inc
add
rcr
xor
xchg
test
shll
gs
dec
nop
mov
jae
scas
push
fs
jge
pop
call
movsw
xor
cmp
mov
out
repz
jg
mov
xor
pop
xabort
dec
mov
int3
test
adc
pop
mov
jp
fbstp
rorb
sub
add
xor
movsb
jmp
outsb
mov
jae
icebp
loopne
push
test
andb
test
fists
fstpt
imul
leave
test
sub
lds
decb
jns
xchg
test
xchg
lea
out
cmpb
js
dec
ret
dec
gs
aas
cmp
testb
xchg
insb
inc
pop
cmp
into
jo
xor
adc
sub
imul
in
jns
fists
inc
popl
aad
pop
fmull
call
mov
out
shr
and
in
cmp
pushf
add
test
test
ss
jecxz
sub
call
dec
mov
inc
dec
pop
jg
cmp
imul
or
dec
mov
xchg
jno
mov
outsb
movsb
dec
inc
enter
xchg
mov
jne
sbb
jo
inc
shll
inc
lock
adc
sbb
mov
daa
out
gs
jle
inc
dec
in
imul
xchg
fimull
into
fcomi
mov
in
mov
rolb
subl
sub
dec
data16
rorb
adcl
jnp
xor
jmp
sub
mov
into
jl
sub
repnz
cmpsl
add
mov
lcall
mov
les
lret
subb
lock
jmp
mov
xor
fbld
enter
xchg
out
xchg
decl
and
mov
fld
add
pop
sbb
leave
jp
fdivr
sub
popa
jns
pop
fsubl
jmp
cs
push
inc
incb
sub
mov
mov
rorb
mov
cwtl
xor
adc
mov
int3
sbb
adc
mov
sub
imul
popa
in
jmp
stc
pop
lret
popf
pushf
sbb
mov
xor
stos
fnstenv
enter
cwtl
mov
rorl
movsb
in
je
lods
jnp
cmp
in
cmp
sub
fcmovbe
imul
test
ja
data16
js
int
add
push
roll
cmp
pushf
inc
mov
jecxz
cmpsl
adc
orl
xchg
outsb
or
js
clc
lahf
cmpb
jne
in
lcall
or
movb
xor
mov
push
scas
or
int3
pop
and
outsb
aad
xchg
adc
fwait
dec
or
inc
stos
stos
mov
aam
es
dec
lea
push
out
cwtl
cld
outsl
fwait
ss
sbb
mov
adc
dec
arpl
icebp
sbb
ds
aas
mov
and
push
cmp
dec
jle
lea
adc
imul
ja
xchg
outsl
mov
bound
inc
xchg
loop
inc
cld
add
je
cli
inc
xchg
aaa
int
in
inc
mov
and
xchg
shr
push
and
orl
dec
movsl
sub
sub
aad
sub
jno
das
pop
enter
push
pop
inc
xchg
add
imul
cld
add
add
lds
or
adc
aas
in
out
mov
cli
in
mov
add
push
outsl
cmpl
push
mov
mov
pop
dec
mov
mov
inc
or
lfs
stc
in
pushf
add
fsubrl
std
or
gs
stc
adc
aad
inc
fisttpl
pop
in
or
xor
xchg
fadds
dec
in
into
in
push
ja,pn
pusha
sbb
inc
or
adc
cs
sbbl
mov
in
rcr
sub
sti
int
fsubs
faddl
fstpl
xchg
nop
repnz
pop
pop
outsl
xchg
cmp
stos
dec
and
jo
jl
fs
stc
dec
and
xchg
jg
push
add
insl
jns
xor
addl
pop
mov
mov
adc
jns
mov
clc
sub
jge
dec
or
add
pop
mov
mov
lods
das
jno
cmpsl
adc
jmp
imul
mulb
scas
and
lahf
dec
jno
and
cmp
push
or
adc
imul
and
pusha
xor
pop
repz
cmp
mov
daa
in
test
mov
fildl
mov
pop
xlat
test
hlt
mov
dec
outsb
int3
fs
pop
mov
sub
jo
mov
mov
pop
lret
or
inc
mov
shlb
mov
sar
jo
imul
pushf
mov
pop
mov
dec
cld
js
daa
adc
insb
das
mov
cmp
push
aad
cmp
mov
mov
mov
pushf
xor
lods
bound
pusha
aaa
mov
sub
pushf
out
pop
xorb
out
push
add
or
xchg
push
fisubl
inc
mov
clc
pop
lds
scas
inc
or
xchg
mov
in
mov
test
int
mov
add
fwait
and
int3
adc
inc
imul
rcr
adc
push
and
push
dec
jge
pop
xchg
sub
cld
fistps
loop
jp
popa
jmp
sub
lcall
imul
xor
movsl
fldenv
imul
mov
dec
iret
sub
jle
pop
cld
aad
shll
mov
and
lahf
repnz
pop
push
inc
call
jns
sbb
xchg
inc
rcll
int3
jecxz
lret
out
test
loopne
cli
stos
cmpsl
xor
cmp
sti
pop
fwait
ljmp
inc
cmp
cwtl
testl
adc
mov
mov
cmpsb
jne
in
jmp
fs
aam
cmp
push
movsl
scas
aaa
js
push
jns
and
int
jle
xchg
cmpsb
rclb
mov
xchg
divl
pusha
pop
rcll
adc
cmc
add
pop
xchg
lret
inc
mov
push
pushf
daa
popa
adc
or
stc
lds
cs
mov
pop
test
push
and
dec
xchg
pushl
loop
es
sti
and
push
lret
inc
outsl
jnp
push
stos
xchg
andps
into
push
adc
les
mov
fcompl
xor
pop
mov
iret
xlat
mov
imul
dec
mov
sbb
push
adc
shr
xor
sbb
inc
xor
call
int
pushf
inc
cwtl
and
jge
lret
jge
jno
inc
pop
jl
jne
push
sbb
and
fcmovb
jb
loopne
mov
mov
outsl
orb
xlat
or
jmp
shrb
mov
out
stos
ds
loop
pop
adc
mov
divl
add
aas
popl
fwait
cs
lahf
xor
jns
push
cmpl
idivb
or
lea
and
pinsrw
add
out
mov
nop
cmp
cs
adcl
insl
aaa
push
bound
es
popf
movsl
jmp
je
outsb
dec
test
jne
jae
pop
jnp
aas
pop
clc
out
mov
mov
test
xor
or
mov
xchg
mov
fidivrs
shll
mov
mov
mov
mov
mov
iret
cmp
mov
lods
scas
in
cli
mov
xor
pop
pop
jns
mov
jge
inc
inc
ss
mov
mov
stos
xor
rolb
sub
outsl
into
xchg
or
pop
adc
mov
mov
stos
fbstp
rol
mov
cmp
das
pop
mov
negl
stos
jmp
xchg
push
cmp
std
push
push
sbb
mov
ds
stos
jg
add
xchg
pushf
or
jg
sbb
push
cltd
lret
outsb
mov
lahf
sbb
shrl
pusha
pop
pop
pop
push
idivl
push
push
lcall
icebp
lret
lods
fsubrl
pop
loope
mov
jg
fistps
cmp
pop
int
or
aaa
and
les
repz
inc
sub
inc
repnz
pop
xlat
cmp
mov
mov
or
push
xlat
negb
adc
fcoms
fwait
sub
fsubrs
sbb
or
js
das
jmp
mov
or
fidivs
int
movsb
xchg
xor
mov
out
xchg
ljmp
mov
sti
jne
mov
xor
rolb
xor
xchg
push
xlat
fwait
xchg
dec
outsl
fsubp
dec
push
dec
dec
sub
lret
adcb
adc
jo
lea
add
lcall
adc
insb
mov
inc
mov
cmp
jl
imul
or
loopne
ljmp
mov
adc
push
dec
les
inc
sub
mov
jae
xchg
pop
mov
cmp
arpl
adcb
jmp
lcall
mov
das
test
xor
push
inc
lcall
adc
xchg
cmc
xchg
rolb
sub
stos
add
sbb
push
cltd
pop
ljmp
mov
jmp
int3
sbb
sbb
aam
xchg
push
pop
pop
push
inc
inc
jnp
lcall
jnp
jne
xchg
add
stc
in
outsl
or
xorl
mov
inc
fxch
inc
mov
sub
stos
or
aaa
mov
dec
faddl
test
inc
add
or
jl
popf
mov
pop
call
mov
mov
out
cld
push
and
xor
jns
sub
enter
sbb
into
hlt
ret
sbb
dec
pop
cmpsl
shlb
out
lcall
xchg
or
xor
mov
sub
fisttpl
xchg
mov
and
notb
sbb
mov
sub
pop
mov
dec
clc
divps
xor
sbb
fsubp
out
aaa
mov
pop
mov
xlat
aas
rorb
notl
and
push
clc
stc
mov
out
clc
adc
inc
mov
test
push
adc
jbe
add
jno
adc
cmp
fcoml
mov
and
mov
icebp
out
iret
sub
xchg
scas
mov
outsl
lock
mov
mov
dec
pushf
aaa
push
cwtl
mov
lret
inc
test
inc
fwait
sbb
fdivl
es
mov
out
arpl
add
mov
movsb
xchg
out
aas
pop
inc
jp
outsb
lcall
shl
call
jle
dec
inc
addr16
out
sti
clc
pop
out
shll
mov
mov
cli
movsb
aad
orl
pop
dec
insl
mov
mov
jne
adc
inc
cmpsl
lock
and
push
popa
cli
in
das
outsl
add
push
dec
movsl
sub
scas
mov
add
cmp
test
pop
sbb
es
imul
out
pushl
out
test
icebp
and
push
pop
test
or
ja
push
adc
or
subb
xchg
and
rcr
daa
xchg
adc
push
push
fdivrs
dec
jae
push
jne
or
push
aas
icebp
test
cld
jns
fcmove
jae
rcrb
adc
shll
dec
out
jp
mov
leavew
add
adcl
push
adc
xchg
out
scas
out
ret
dec
inc
add
jbe
or
mov
push
rorb
cmpsl
xor
das
fdivrs
jo
mov
or
enter
dec
inc
mov
in
cltd
lcall
fcomps
stos
add
outsb
mov
jl
mov
outsl
add
sbb
add
negb
setp
aaa
push
shl
add
clc
xor
mov
loopne
rep
insb
jae
outsb
xor
fsubr
seto
adc
xchg
cmpsl
fsubs
add
cmpsl
out
arpl
xchg
sarl
xchg
sti
push
js
addb
mov
imul
inc
push
adc
bound
or
lods
sbbb
sbb
repz
ret
mov
or
repnz
xchg
jns
and
cwtl
decb
dec
xchg
cmp
lahf
repz
pop
adc
in
mov
rolb
sub
sub
sbb
or
pop
movsb
lcall
jmp
lods
lea
fsubr
nop
js
fisubrs
in
in
push
push
push
add
stc
add
loop
cs
pop
or
cld
xchg
add
xchg
roll
mov
sub
cmp
xor
clc
scas
ljmp
cmc
xchg
xchg
sub
inc
mov
mov
clc
sahf
push
ja
adc
dec
sbb
or
test
cmpsb
cs
pusha
xchg
cmp
jp
paddusb
shl
cmpsb
int3
adc
aam
mov
xchg
flds
loop
aaa
or
inc
adcl
dec
jb
adcb
popf
fwait
out
inc
mov
dec
shrl
jmp
in
cmp
fidivs
nopl
lret
sub
inc
neg
nop
lahf
jns
cmc
pop
xchg
popf
mov
popf
dec
sbb
or
out
lea
rcr
jns
mov
mov
pop
sbb
loop
xor
jp
pop
and
dec
ss
enter
stos
lock
sub
jne
arpl
mov
xor
cld
gs
gs
and
inc
mov
fdivl
es
sub
loop
lock
lods
sub
cmp
jae
pop
shrb
mov
cmpsb
add
lret
dec
gs
add
std
add
notb
mov
xor
imul
into
xchg
cmp
cs
xchg
push
sbb
add
xchg
arpl
aam
xor
mov
stos
push
aas
hlt
xor
adc
cmpsl
jl
ljmp
cmc
xor
dec
xor
lahf
addr16
sub
lret
in
mov
dec
or
mov
lret
inc
xlat
mov
mov
nop
cltd
mov
lods
cli
bound
aam
jmp
adc
adc
adc
addr16
popa
fstl
rep
adc
sub
movsb
dec
jnp
loope
inc
jne
js
or
fbstp
jge
mov
rcrl
mull
pop
clc
jno
cmp
push
clc
dec
mov
push
sub
cmp
aas
pop
bound
push
pop
inc
mov
cmp
cld
mov
sbb
adc
push
sbb
addr16
jmp
inc
jb,pn
sub
mov
int
and
jg
and
aad
aam
mov
push
adc
lcall
sbb
es
cltd
dec
inc
outsb
ds
leave
pop
shrl
push
int3
fidivs
cmp
fs
jmp
cmp
sub
mov
push
sarb
cmp
sti
inc
jbe
add
adc
addr16
cmpsl
xlat
pop
sbb
and
movsb
mov
cld
lea
mov
mov
cmp
or
hlt
out
jb
cltd
out
out
cmp
loope
aam
out
lcall
and
scas
jns
out
cli
das
dec
out
loop
pop
xchg
lods
sbbb
movb
scas
into
sbb
mov
pop
rcrb
test
push
dec
clc
insl
or
jecxz
cmp
fistps
movsb
and
add
jecxz
push
jp
leave
arpl
aas
enter
mov
test
adc
loopne
je
xchg
js
mov
jecxz
jle
xchg
push
enter
lds
gs
fsts
aaa
rcrb
xor
ja
push
rcll
addb
mov
pop
xor
enter
sbb
imul
mov
cmpsl
arpl
out
imulb
pop
pop
stos
pop
imul
pop
rclb
fbld
or
mov
mov
js
ljmp
mov
sahf
jmp
dec
iret
sbb
int
adc
test
cmp
out
popa
call
popa
jo
ret
test
loopne
into
push
lret
scas
imul
les
ret
fcoml
xchg
add
loopne
mov
push
inc
cli
pop
cmp
jbe
push
notb
fistps
lods
ficoml
movsb
lea
ljmp
aas
mov
imul
inc
xchg
mov
in
push
rcl
mov
sub
test
shl
inc
iret
lret
sub
sub
push
xor
imulb
inc
push
mov
test
cmp
mov
stos
sub
sub
add
mov
test
mov
ljmp
mov
mov
jo
or
icebp
cli
push
dec
repz
dec
inc
adc
sub
jl
daa
pop
cmpsl
out
aam
pop
mov
xchg
insb
cld
push
adc
pushf
clc
push
cld
mov
sub
test
sub
pop
push
and
and
mov
jns
test
inc
dec
movsb
insl
xchg
repz
cmp
xchg
dec
mov
ljmp
jl
jl
xchg
lds
pop
cmpsl
sub
mov
inc
dec
fcom
lret
pushl
ss
fs
shll
ja
aas
dec
stos
mov
je
andb
adc
pop
cli
es
fiaddl
nop
push
mov
jecxz
pop
inc
lods
add
dec
leave
sbb
xchg
pop
lcall
gs
mov
call
and
test
mov
inc
xchg
push
dec
xchg
cmpsb
and
insl
adc
mov
mov
jno
pushf
cmp
icebp
xor
cltd
adc
add
inc
cltd
push
js
bound
popa
data16
ror
mov
inc
es
xchg
ret
aam
jo
addb
jmp
popf
clc
jmp
xchg
insl
lahf
dec
sub
lea
dec
pop
fldt
mov
lock
test
cwtl
aas
mov
mov
cmp
sub
jo
sbb
add
jo
add
xchg
imul
adc
loopne
clc
push
xor
add
and
out
scas
mov
dec
and
js
pop
pop
or
loope
sbb
pusha
sbb
not
mov
dec
negl
mov
ljmp
pop
or
lahf
aam
out
jmp
xchg
shlb
arpl
adc
jno
cmp
popa
xchg
imul
pop
movsl
stos
sbb
in
sbb
hlt
shll
sub
out
sub
inc
adc
add
jecxz
sub
mov
jb
cmp
loop
push
aam
mov
and
mov
bound
movsl
push
ret
mov
imul
add
mov
dec
call
sbbl
rcrb
sbb
enter
xor
es
mov
flds
daa
pop
mov
adc
pop
pop
xchg
xlat
pop
or
or
pushf
add
xchg
enter
nop
jmp
mov
divl
pop
jo
jne
into
push
or
aas
testl
repnz
dec
int
mov
jecxz
push
pop
push
lods
xchg
loop
cmp
push
imul
pop
fiaddl
scas
sub
es
lds
cli
loopne
add
pushf
sub
pop
push
out
fistpll
loope
dec
pop
sbb
push
in
jns
lret
fsub
dec
andl
adc
lcall
test
in
cmpsl
lahf
push
bound
jno
fwait
inc
sbb
sub
push
subb
in
arpl
mov
pop
xchg
mov
xor
aas
mov
inc
jne
and
repz
mov
xor
in
add
aaa
adc
cmp
rcll
in
xchg
sub
push
dec
xlat
sbb
lret
fiadds
cmpsl
loopne
jle
lcall
xor
xor
mov
mov
jge
bound
pop
push
aam
and
test
push
push
fmull
or
imul
mov
jecxz
sbb
mov
enter
popf
fldcw
aas
inc
pop
bound
repz
sub
xor
mov
adc
xchg
int
pop
stos
into
jp
and
jge
js
pop
mov
nop
ret
iret
cmp
push
repnz
sbb
jb
push
jl
xor
jl
and
sbb
mov
ret
mov
shlb
push
cwtl
ljmp
jl
and
adc
icebp
adc
or
lods
mov
xor
xor
inc
pop
mov
push
cld
imul
movsl
in
push
fsubr
in
mov
repnz
sub
addr16
adc
test
and
lret
xchg
ljmp
mov
lds
fs
and
dec
cs
js
pusha
movsb
sbb
pop
movsb
mov
pop
push
mov
enter
xchg
dec
push
and
sbb
outsl
jle
ja
inc
jp
aaa
xchg
inc
xchg
jl
pusha
lcall
bound
scas
jmp
dec
lods
inc
or
cmp
push
mov
jns
push
mov
mov
popa
adc
popf
fcmove
aam
dec
out
fisttpll
mov
pushw
cmp
cmpsl
cmpsl
into
insl
pusha
mov
cs
sub
repnz
loopne
lret
aam
mov
enter
sbb
mov
push
shrl
inc
cmp
das
xor
xchg
int3
push
sub
out
hlt
aam
int
jb
mov
ret
mov
leave
outsl
es
aam
lods
notl
int
pop
cltd
add
clc
lods
mov
add
mov
mov
ret
sbb
adc
cmpsb
dec
cmpsb
int3
mov
jo
pushf
and
xor
inc
scas
add
lods
mov
sub
and
mov
add
jns
mov
cld
nop
push
xchg
bound
aam
push
and
xchg
dec
dec
js
cs
jecxz
fisubs
jne
jno
and
dec
push
inc
ljmp
or
mov
lock
imul
nop
clc
sbb
and
mov
adc
push
xor
popf
mov
xchg
orb
sbb
mov
out
leave
lods
pop
sub
fmuls
mov
sbb
sarb
jae
pop
aas
adc
hlt
mov
pushf
mov
repnz
push
test
add
xchg
sbb
jb
loop
ret
fisubrs
push
sub
cld
fistpl
test
mov
push
or
aam
xchg
dec
mov
out
mov
lods
xchg
push
mov
rcrb
mov
push
mov
xchg
fcoml
jne
aas
mov
sti
dec
icebp
outsb
rolb
std
ror
push
mov
aas
cli
mov
dec
mov
and
movsb
sbb
jb
fldl
movsl
sbb
pop
lods
mov
pop
rorl
inc
pop
fwait
push
inc
and
mov
sbb
mov
sbb
jmp
aaa
sbb
jne
pop
jge
sbb
out
sbb
mov
popf
adc
daa
lods
mov
popf
imul
sub
pop
loop
xor
sbb
hlt
out
movsb
out
adc
int3
sbb
mov
cmpl
lea
lea
leave
and
pop
cld
ficoms
popf
sarb
adc
ret
icebp
xor
movsl
and
sbb
icebp
decl
aad
jo
in
xchg
mov
pusha
xor
inc
ret
int
icebp
iret
hlt
stos
or
xor
sarb
inc
fdivp
add
jbe
push
ja
data16
int
in
mov
loope
sarl
imul
sti
lods
push
mov
int
lret
inc
lahf
and
cwtl
fnstenv
test
sbb
jnp
adc
sub
mov
sbb
pop
shrl
shl
sarb
das
jecxz
jns,pn
pushf
gs
imulb
stos
jp
jl
imul
and
sub
mov
add
imul
insb
outsl
add
popa
xchg
add
xor
lods
jmp
sub
movsb
pushf
or
push
and
dec
xchg
mov
push
xchg
dec
cmp
imul
scas
addr16
lahf
adc
mov
adc
or
add
sub
xchg
xchg
push
push
and
mov
mov
and
cld
lcall
mov
sub
dec
sti
outsl
push
sarl
push
outsl
lds
sub
rcl
movsl
lahf
shl
mov
pusha
sbb
arpl
jle
mov
mov
sbb
pop
inc
jbe
jno
pushf
jae
shll
and
pushf
fwait
ds
stc
jg
mov
sti
and
repz
dec
mov
sub
mov
lret
outsb
mov
ficoml
adcl
xchg
inc
pop
lahf
dec
rcrl
insl
shl
inc
mov
push
cmc
rorb
dec
mov
aas
dec
pop
ror
in
xchg
adc
xor
cwtl
xor
pop
jmp
xchg
push
and
setbe
mov
iret
xlat
jmp
add
cmpb
lret
or
inc
sbb
mov
push
sbb
aad
mov
loope
arpl
mov
inc
in
mov
cmp
mov
cmp
sahf
popa
cmc
jno
xor
clc
lcall
cmp
jle
jge
rcll
fcomip
loop
iret
add
jge
stos
shr
jl
dec
pop
cmpsb
pop
jg
jmp
adc
std
or
push
xor
lret
mov
push
mov
xor
aam
clc
int
and
jge
nop
xchg
lret
pop
lods
enter
test
iret
js
inc
in
sbb
lods
dec
mov
mov
enter
mov
jecxz
std
or
pusha
cmp
mov
jecxz
ds
bound
shlb
cmp
pop
fisttps
or
pop
adc
mov
inc
faddp
aam
add
add
cmpsl
push
jl
sub
lods
mov
testl
mull
sub
or
sub
push
jle
mov
push
mov
adc
or
outsl
mov
rorl
jae
mov
cmpl
aad
call
cmp
clc
lret
popl
jne
jmp
pop
jp
cmp
mov
jno
nop
mov
gs
js
inc
outsb
insl
fsubs
pop
outsb
jp
dec
cwtl
rcrl
push
les
push
inc
inc
jae
jp
pop
imul
mov
xchg
out
popa
and
cld
pop
lcall
dec
rclb
or
lds
push
cmc
jecxz
outsb
movsb
dec
sti
lods
xor
sbb
or
pusha
mov
hlt
fs
push
xor
loop
sub
mov
dec
xchg
enter
push
scas
sbb
popf
into
ret
adc
cmp
das
call
mov
cmp
inc
incl
adc
inc
insb
mov
popf
inc
cmpsb
test
mov
leave
imul
cmp
jo
and
dec
data16
or
jbe
mov
mov
inc
mov
mov
push
in
sti
shl
push
add
inc
mov
mov
test
add
ja
stos
and
sbb
add
outsb
pop
and
stos
popa
scas
add
sub
lods
mov
gs
bound
stos
xchg
adc
ficoms
xchg
adc
cmp
push
jge
mov
jno
es
xchg
mov
mov
cmpsb
mov
aaa
test
test
xor
jle
pop
or
mov
xchg
sar
rcrl
imul
push
bound
sub
test
push
movsl
push
andb
or
aad
int3
sarl
xchg
or
jne
push
sbb
psrad
mov
adc
mov
jp
mov
stos
lcall
cltd
ret
xchg
add
sar
pop
jae
sbb
cmc
xor
pop
je,pt
pop
add
aam
push
cmp
mov
sbb
int3
or
xchg
or
mov
bound
mov
sbb
mov
in
test
inc
jne
sahf
dec
and
jg
mov
hlt
sbb
jae
lock
and
sbb
negb
lods
or
mov
push
call
enter
and
jb
rolb
lea
mov
cmp
and
lods
pusha
addb
imul
mov
or
mov
fcoml
lds
scas
mov
cmp
gs
out
fucom
cmp
or
cmp
fisttps
daa
dec
roll
in
cmp
pop
dec
push
out
hlt
jecxz
xor
pushf
xor
cmpsb
test
sub
jns
popa
push
pusha
rcl
popa
int3
loop
ljmp
push
shll
cs
push
shl
push
mov
push
push
pop
sbb
mov
lds
mov
add
call
in
scas
mov
xlat
imulb
xchg
test
push
in
pop
or
jmp
xchg
dec
pop
mov
adc
ret
lret
je
sub
xchg
jb
mov
push
push
jecxz
push
add
fwait
mov
sbb
dec
call
cltd
cltd
mov
dec
dec
dec
fdivrp
test
in
adc
jns
inc
mov
add
sbbl
or
push
cmp
xchg
sahf
insb
iret
out
call
mov
fistps
in
ljmp
mov
sahf
dec
or
fstps
js
lahf
xchg
add
jl
jne
cli
enter
jb
push
cmp
inc
jecxz
jge
xchg
enter
push
xchg
inc
mov
push
adc
or
jns
add
out
dec
xchg
shrl
xlat
push
lret
adc
fcmovnu
cmp
ret
insb
fwait
pop
or
je
testb
mov
pop
loopne
add
jle
out
dec
pop
in
add
aad
add
jae
ret
push
ss
mov
test
or
mov
jecxz
sub
inc
xor
jp
aas
mov
andb
fisttpl
push
xchg
cmp
pop
rcrb
adc
xor
ljmp
mov
pop
mov
push
and
pop
setnp
cmp
lret
lods
test
addr16
xchg
fiaddl
xor
push
and
add
sarl
jne
sub
add
fsubrs
mov
push
mov
xor
pop
dec
xor
or
ljmp
mov
cwtl
ficomps
cmpsl
das
cltd
rcll
sbb
jne
pop
outsl
or
pop
scas
cmp
nop
mov
out
xor
inc
js
cmpsb
bound
pop
mov
xor
dec
and
popa
lods
xor
xor
push
repz
lcall
in
adc
mov
xchg
aaa
imul
cmpsl
testl
dec
call
sub
inc
pop
movsl
cli
sahf
add
mov
dec
mov
inc
and
movsl
xor
in
pop
ss
std
xchg
xchg
mov
outsl
pop
add
mov
movsl
jge
xor
sti
and
cmp
jnp
mov
sub
mov
or
movl
sahf
les
cmpsb
inc
xor
dec
or
add
fs
test
es
mov
lahf
dec
cmp
jecxz
and
cmp
data16
mov
gs
cwtl
mov
xchg
fdivr
movb
xor
scas
xor
jno
pushf
push
out
in
rclb
aaa
testb
add
lock
dec
or
mov
adc
mov
pop
leave
sub
adc
push
lock
scas
pop
push
shl
jbe
repz
leave
test
lret
add
xchg
mov
les
mov
and
inc
and
pop
cltd
pop
cmp
mov
xchg
div
xor
mov
xchg
mov
and
ss
repnz
out
add
inc
loope
sbb
das
sbb
pusha
pushf
inc
and
test
outsl
cmc
mov
aad
add
movsb
ljmp
mov
xchg
inc
push
jnp
mov
popa
sbb
mov
popf
push
add
aas
stos
rcr
mov
mov
xchg
ret
xor
es
out
lret
xchg
inc
negb
lods
push
out
out
movsb
jbe
ja
cmc
xor
daa
mov
cmpsl
incb
imul
or
mov
popa
sbb
movsl
inc
into
dec
hlt
out
movsb
std
cmp
push
dec
sub
arpl
jno
cli
iret
adc
mov
or
push
pop
push
mov
fcmovnu
addr16
xor
push
das
pop
inc
mov
stos
fwait
add
gs
dec
sbb
adc
pop
aas
mov
mov
adcl
jnp
rol
bound
sbb
ret
movb
cmpsb
mov
jmp
insb
nop
mov
insl
jae
cwtl
cmc
mov
push
cltd
mov
hlt
sub
and
cmpl
jmp
sbb
sub
shrb
and
push
call
fbld
outsb
pop
repz
and
sub
mov
lods
lcall
fildll
xchg
shl
into
add
xchg
or
mov
aas
je
dec
push
or
ja
inc
pop
mov
in
cmp
icebp
cmp
mov
push
fdiv
xorl
insl
mov
push
or
rorb
inc
int
mov
ds
popf
xchg
push
lods
jle
imul
or
xor
add
stos
ja
dec
dec
test
mov
es
insl
insb
lret
orb
shlb
ret
mov
in
out
inc
sub
sbb
lock
int
xor
mov
mov
mov
or
jo
fdivl
fldcw
jle
out
dec
out
dec
jge
loope
es
push
xchg
fimull
mov
pusha
xchg
and
dec
pop
push
stos
ja
shrl
dec
fstl
mov
dec
inc
clc
pop
scas
int3
cmp
add
xchg
dec
push
push
adc
and
outsl
inc
hlt
mov
xor
jg
sti
lcall
adc
aas
pop
jne
imul
or
xor
sbb
stos
xchg
xlat
cmc
out
jnp
and
mov
mov
or
loop
fwait
add
xor
inc
add
faddl
adc
shr
test
testb
dec
and
int
iret
xchg
test
jg
cmp
aaa
jp
pop
mov
adc
dec
imul
lds
stos
and
cmp
or
jbe
shrb
mov
movsl
arpl
popf
jno
jae
mov
aam
repz
repnz
jae
popf
stos
xor
dec
stos
mov
les
xchg
xchg
repz
int3
adc
xor
shll
ss
push
jns
mov
call
hlt
and
fmuls
inc
push
in
test
ljmp
push
and
aaa
pop
sbb
mov
fucomi
jge
pop
push
or
lret
pushf
insb
inc
test
addr16
or
loop
ljmp
cmp
and
cmp
push
add
mov
ja
stc
test
mov
shrb
cmp
in
jbe
and
pop
dec
pushf
test
lret
int3
stc
hlt
xlat
and
stos
mov
sub
pop
xor
xorb
out
adc
mov
int
cmp
and
mov
jo
or
cmpsb
cmp
pop
scas
jbe
jae
fdivrl
pop
sysret
inc
lock
fs
or
xchg
cmp
leave
cmp
pop
push
das
mov
pushf
dec
xor
ljmp
mov
imul
xlat
test
and
arpl
bound
lret
jmp
nop
movsl
mov
js
pushf
imul
stc
adc
jnp
push
cmp
or
and
cmpl
xor
and
xor
xchg
pop
in
mov
test
or
add
pop
and
jb
test
pop
std
mov
sti
xorl
arpl
jmp
mov
mov
mov
rcrl
jl
test
rolb
xchg
ds
push
cmc
sbb
push
out
cli
jnp
and
jge
cmp
sbb
in
mov
push
xchg
cli
mov
mov
xlat
and
mov
imull
outsl
xchg
adc
test
adc
daa
pop
ljmp
xor
in
push
sub
sbb
clc
sub
in
cltd
aaa
out
and
xchg
out
loope
or
xchg
mov
xchg
or
and
dec
inc
sub
or
insl
fcomi
in
xchg
leave
iret
and
pop
roll
jle
cmpsb
das
xchg
outsb
push
add
iret
int3
jo
scas
or
nop
test
insl
mov
sub
psrlq
push
cli
and
mov
xorl
loop
movsb
fstpl
xchg
cltd
push
lret
push
or
inc
push
xchg
std
lods
push
dec
std
pop
into
dec
adc
dec
add
add
mov
notl
jbe
sub
scas
xchg
sbb
sub
hlt
scas
pop
mov
or
fwait
loope
sbb
push
loopne
ss
daa
addl
and
adc
mov
mov
lods
outsl
stc
mov
and
js
jns
fiadds
movsl
push
lock
mov
fwait
xlat
sbb
dec
fists
xlat
sub
cld
mov
scas
ss
jg
sbb
mov
shlb
lcall
les
cs
loopne
and
adc
mov
and
test
daa
fsubl
cmpsb
cmp
dec
jmp
cli
inc
and
pmaxsw
add
inc
inc
adc
push
lahf
dec
es
or
or
add
and
out
data16
fistl
mov
das
scas
xor
jno
scas
cwtl
loope
jnp
inc
xor
mov
and
aad
loope
adc
sbb
jg
in
rcll
inc
cmp
imul
jecxz
pop
sahf
int3
je
pop
jbe
xchg
pop
pop
or
add
mov
pop
jecxz
leave
dec
or
iret
das
lock
fdivs
or
dec
call
sub
ss
idivb
push
jnp
lds
mov
sub
jg
loop
arpl
mov
nop
cli
mov
mov
xchg
mov
xchg
push
push
dec
jg
cmp
test
rcl
pop
int3
add
daa
daa
pop
notl
fwait
jno
popa
fidivl
add
sbbb
mov
push
lcall
and
inc
cs
push
and
insl
mov
dec
mov
and
and
pop
add
and
jp
mov
cmpsb
push
test
xchg
inc
inc
and
repnz
dec
int3
xchg
mov
sbb
add
outsl
sub
jg
jb
push
mov
and
jo
aas
aam
or
lds
add
mov
adc
dec
and
mov
std
jns
sbbl
sbb
fcompl
dec
aam
jb
xor
xor
cwtl
pop
mov
lea
xchg
push
leave
data16
xor
mov
sub
subl
test
test
nop
mov
push
or
mov
xchg
fisubl
lea
pop
mov
xchg
rcl
pop
mov
dec
pop
test
lret
jmp
fsubs
adc
ret
loope
insb
adc
xor
out
mov
jnp
jae
xor
testl
sbb
cmp
push
stc
mov
scas
mov
xlat
adc
push
aaa
in
jmp
cs
and
fwait
push
add
inc
jl
sub
inc
cmp
pop
adc
dec
sub
out
sub
ljmp
cmp
hlt
inc
dec
mov
cs
jnp
insb
fistpll
std
js
sub
into
lods
int
jns
sub
insl
jo
int
or
jmp
mov
jno
pushf
xchg
mov
les
stc
xchg
les
jbe
aas
je
push
fwait
pop
dec
leave
jo
xor
scas
lods
cli
rcrb
outsb
sarb
out
popa
pop
xor
loop
cmc
pop
stos
fwait
and
dec
inc
cmpsb
pop
je
into
outsl
std
push
jge
std
enter
inc
cmp
push
lods
inc
test
loopne
sub
push
in
adc
les
int
ret
dec
adc
and
lods
sub
out
mov
dec
aam
loopne
push
xchg
js
mov
dec
sbb
dec
mov
dec
mov
or
outsl
dec
sti
push
add
cmpsb
adc
lea
xchg
ds
movsl
sub
pushl
sub
inc
cmpsb
mov
mov
lock
push
mov
add
sbb
iret
sub
fwait
inc
jno
paddsb
je
push
popa
mov
lds
daa
out
mov
out
xchg
pop
dec
sub
or
jb
enter
aam
out
pop
orl
sbb
loope
dec
test
xchg
scas
xor
and
jo
mov
cwtl
mov
aam
pop
cwtl
xchg
dec
inc
mov
push
into
xchg
add
sub
xchg
sarb
mov
pop
adc
inc
outsl
into
rcll
std
scas
jmp
dec
xchg
pusha
add
lds
jl
idivb
outsb
and
sub
push
dec
mov
mov
mov
xor
dec
xor
stos
adc
and
jae
push
jae
pop
pop
mov
and
dec
nop
aam
or
pop
push
cs
cld
out
aas
jmp
and
adc
js
inc
xchg
mov
mov
test
mov
jne
arpl
inc
or
fnstenv
cmp
xor
pop
jnp
push
loop
xor
pop
sbb
out
mov
dec
ds
subl
repz
aaa
bound
jb
add
jne
pop
fisubrs
sub
jnp
and
in
mov
cmpb
sub
mov
mov
push
jg
xor
imulb
sub
stc
mov
mov
push
es
gs
pop
repz
jo
mov
jnp
shlb
xchg
sub
xor
insb
imul
popa
icebp
into
mov
mov
jno
lret
in
inc
ret
int
push
adc
loopne
cmpl
pop
or
clc
out
sub
call
sub
movb
dec
cmp
inc
andb
sahf
dec
adc
fsubrs
or
cli
sub
fwait
cmp
and
or
lds
pop
test
mov
repnz
add
and
dec
adc
jae
jp
push
call
pop
dec
mov
dec
ret
jp
mov
and
sahf
pop
dec
mov
test
xor
adc
daa
imul
std
xorb
pop
fisubl
test
insl
xor
fidivrs
test
pop
pop
shrb
push
mov
daa
ret
addr16
pusha
push
mov
in
jns
xor
xor
jae
test
loope
or
repnz
or
repnz
rcr
cmp
cmc
dec
jno
mov
pop
sub
add
shl
repnz
lcall
sub
jo
mov
mov
imul
or
jl
add
inc
ror
popa
xor
test
or
out
mov
xor
mov
call
jb
add
adc
test
jb
mov
sub
pop
fnsave
mov
jle
and
mov
ficoml
inc
inc
xchg
in
push
mov
pop
xorl
sbb
popf
jne
jae
inc
dec
mov
dec
bound
push
pop
push
js
idivl
pop
xchg
or
pop
imul
les
sbb
inc
mov
div
xor
jbe
ret
leave
xchg
out
add
and
dec
hlt
int3
das
movsb
adc
mov
dec
push
push
fcomps
popf
mov
sarl
mov
adc
cmp
inc
jg
mov
mov
pop
xchg
stos
popa
dec
fldenv
xor
mov
cmpsl
mov
fnsave
sahf
imull
sbb
dec
packsswb
outsb
outsl
jo
lods
in
pop
in
xchg
fdivrp
jecxz
inc
data16
fstps
cmp
jp
and
stos
std
or
or
add
loopne
ficoms
pop
adc
xor
rolb
cmp
dec
lahf
pop
aad
imul
js
scas
pop
lods
mov
mov
addb
int
ret
aaa
jecxz
sbb
sbbb
add
outsb
add
test
div
or
add
lea
int3
lahf
mov
or
test
incl
loop
pop
sbb
fstps
icebp
bound
in
cli
in
mov
mov
fs
pop
adc
adc
fistpl
inc
fldl
add
filds
in
fwait
sti
mov
mov
xor
outsl
jg
aad
scas
inc
jmp
rol
cmp
push
int3
scas
mov
or
push
lods
sub
int
loopne
add
faddp
loopne
or
popf
mov
stos
fwait
mov
cld
mov
sub
pop
out
out
or
push
mov
or
int
sbb
pop
dec
jbe
js
xchg
enter
js
fistpl
xor
pop
lea
push
push
xor
mov
test
lock
fldenv
aaa
ja
test
pop
sub
pop
inc
push
push
cs
mov
popa
mov
jo
pop
pushl
rolb
fs
push
jmp
test
inc
mov
sti
imul
loope
push
inc
add
adc
sahf
jae
push
inc
jmp
movsl
movsl
shrl
sub
rolb
pop
out
add
cmp
xor
gs
test
mov
sub
adc
mov
mov
into
test
in
cmp
adc
mov
mov
and
loope
dec
pop
lds
mov
lods
xchg
xchg
mov
xor
cwtl
call
sbb
pop
sub
mov
pop
cmp
mov
fldl
dec
cmpb
in
inc
mov
pop
ss
test
push
hlt
sbb
mov
pop
mov
jb
adc
mov
iret
ficompl
push
aam
inc
test
nop
stos
into
sub
cs
xlat
aam
or
fstpl
das
and
popa
cmpsb
pushl
sub
or
jae
sbb
dec
stc
lcall
lret
sub
jl
ds
sbb
rcrl
test
mov
jbe
insb
or
jle
fs
popf
insl
stc
int3
mov
cmpsl
arpl
ret
daa
sub
sbb
or
jmp
cli
xor
imul
roll
je
in
push
stos
push
inc
xor
or
push
fldcw
mov
das
xchg
sub
add
bnd
xchg
dec
dec
loope
imul
pop
push
test
or
int
dec
popf
mov
mov
popa
bound
add
sbb
mov
jae
adc
test
mov
daa
es
mov
in
in
cs
xchg
xlat
mov
hlt
lcall
push
aam
pop
ljmp
push
hlt
lahf
mov
fs
ss
cmpb
cmpsb
push
scas
cwtl
and
jno
dec
in
out
or
xlat
or
lcall
lock
int3
loope
xor
mov
and
stos
imul
shlb
out
push
pop
das
cld
fwait
movsb
add
decl
iret
sub
jae
daa
jno
les
scas
push
mov
or
dec
fnsave
lods
into
mov
mov
loop
xchg
jg
aas
or
ret
popa
icebp
lods
popf
jbe
inc
pop
test
sub
xchg
movsl
rol
or
xchg
icebp
fwait
int
fdivrs
ret
mov
sbb
xor
pop
jecxz
popa
push
xchg
or
jmp
ficomps
push
sub
mov
push
leave
or
add
mov
pop
mov
subl
mov
xchg
sti
popf
lock
jno
lds
xor
ljmp
push
push
push
mov
adc
mov
jle
inc
arpl
mov
push
xor
outsl
inc
inc
rcr
mov
dec
bnd
call
ja
les
mov
adc
add
sub
sbb
ret
cli
int3
xlat
rcll
stos
sub
mov
out
inc
mov
cwtl
push
xchg
cmp
loope
push
jmp
fists
imul
fisttpl
cmp
fcomps
mov
loopne
lods
jle
stos
fs
mov
and
jbe
hlt
and
dec
adc
js
stos
xlat
mov
test
cs
imul
xchg
cmc
inc
aam
sub
pop
add
mov
icebp
inc
inc
xor
cld
ds
je
pushf
sub
pop
add
mov
mov
push
in
jne
fadds
and
xchg
inc
jge
mov
rcll
mov
pop
movl
aaa
enter
dec
loop
addr16
xchg
push
loopne
test
cmc
sbb
in
popf
add
data16
add
jle
xlat
or
outsl
push
jb
insb
or
and
or
mov
mov
ja
pop
cmpsb
decb
arpl
leave
faddl
jo
pop
test
mov
icebp
mov
and
int3
pop
int3
add
arpl
lods
jecxz
es
inc
mov
mov
sub
aam
xor
jae
cmp
adc
icebp
stos
or
mov
inc
xor
dec
cmp
outsl
in
sti
loopne
sbb
fsts
mov
adc
xchg
jne
jp
stos
out
or
lcall
inc
push
jecxz
outsb
stos
adc
std
inc
cmpsb
push
jmp
cltd
inc
mov
mov
mov
inc
sbb
xchg
into
sub
jmp
mov
cs
pop
popf
sub
rcrb
adc
pop
mov
sub
or
push
rcrl
test
into
lea
or
xchg
int
pop
inc
mov
and
or
aad
push
loope
inc
push
pop
in
cli
pop
push
mov
or
ja
popf
stc
in
scas
jmp
cmp
sub
mov
or
lret
jbe
sbb
stc
dec
dec
stc
inc
pop
jbe
inc
jbe
sub
xlat
aas
sbb
outsl
and
cli
mov
cld
call
sub
mov
aad
sti
pop
mov
repnz
mov
pop
lcall
data16
loop
inc
push
out
fsubl
outsl
fidivrs
sbb
xlat
sub
leave
mov
lahf
xor
out
ljmp
sbb
shrl
xor
pusha
popa
mov
lret
fldcw
jb
hlt
pop
inc
outsb
scas
loope
imul
push
in
cmp
sub
test
imul
dec
xor
xor
in
mov
xorb
xchg
xchg
adc
decb
or
xor
dec
call
pushf
daa
cmp
dec
inc
lods
cmp
mov
stc
xchg
lds
mov
cmp
dec
dec
push
and
cmp
mov
ret
test
dec
mov
jns
xchg
and
fstpl
mov
or
inc
xor
das
mov
jp
or
adc
push
mov
cmp
or
test
enter
sub
mov
sbb
sbb
fnsave
and
std
pop
pop
nop
stos
imul
movl
aas
xchg
fistl
stos
mov
cmc
mov
pop
xchg
adc
fmull
shll
xchg
repz
in
or
mov
test
or
sbb
adc
clc
or
out
mov
enter
sub
sbb
push
cmp
inc
push
pop
lods
cmpsb
xchg
add
fdivl
mov
rorb
cmp
addr16
ljmp
in
je
rclb
cmp
rol
test
and
addr16
clc
inc
jb
das
lret
ret
mov
mov
ljmp
push
ret
cmp
mov
dec
adc
xchg
testl
pop
ljmp
xchg
jae
out
orb
push
ror
addl
sub
cmp
cli
mov
mov
cmp
push
mov
outsl
rcrb
dec
rcrb
jl
jp
sub
dec
scas
xor
xchg
jo
inc
dec
orb
dec
pushw
jne
hlt
dec
stos
sbb
dec
iret
xor
jle
aad
xor
cmp
add
int3
fcmovne
scas
dec
push
jmp
fistpl
push
ja
out
ds
imul
sti
or
xchg
loop
mov
pop
in
out
xor
xchg
jbe
jbe
mov
pop
ss
pop
outsb
fcmovbe
stc
sbb
add
repnz
jg
mov
jmp
sarb
jl
loope
jmp
adc
adc
into
jmp
out
dec
sbb
adc
sbb
insl
or
imul
shrb
add
mov
push
push
cmp
lret
loope
sbb
sti
das
mov
mov
adc
cmpsl
test
jbe
sbb
or
hlt
pushf
jo
into
mov
mov
xchg
push
jae
pop
fldt
jb
push
jbe
je
enter
add
insl
cmpsb
sbb
adc
repnz
fisttpl
push
outsl
out
and
or
fwait
pop
sub
jecxz
bound
and
mov
push
mov
add
sti
sbb
shl
shll
sub
out
icebp
aam
mov
jmp
aad
sbb
inc
pop
dec
in
xor
icebp
sti
cmp
ret
in
shll
push
lock
iret
popa
mov
mov
lods
nop
testl
out
ret
pop
and
sbb
aaa
aaa
je
push
jns
dec
or
or
rclb
inc
pushf
data16
mov
lods
in
mov
push
or
shlb
stos
aas
sti
xchg
xchg
or
loopne
push
jp
adc
sti
fwait
inc
dec
add
jnp
data16
pop
pushf
pop
adc
jg
push
insb
mov
lcall
jle
and
adc
sub
ret
xor
sub
dec
sti
std
adc
xor
ret
or
add
aas
in
jle
lock
aad
mov
fnstsw
aas
sbbl
mov
sahf
ret
out
or
or
mov
mov
pop
test
outsl
orb
adc
sbb
shr
xorl
shlb
enter
fsubs
fs
mov
dec
adc
xchg
lea
jno
popf
add
sbb
ret
jecxz
sti
ret
or
add
mov
jge
xor
xchg
inc
icebp
loope
jp
pop
repnz
aad
inc
mov
xchg
and
aas
data16
ss
fldenv
mov
add
push
sub
daa
dec
mov
adc
lds
dec
jb
adc
insb
xchg
insl
gs
stc
out
mov
arpl
scas
out
push
add
icebp
xchg
pop
push
loope
je
iret
xor
push
and
mov
inc
repnz
movsb
mov
xchg
mov
mov
xor
stos
pop
ret
and
js
sub
mov
stc
mov
rcrl
enter
mov
and
dec
int3
fdivrp
out
call
fisttpl
pop
mov
push
loopne
stos
movsb
jmp
dec
adc
sub
adc
adc
xchg
sub
roll
or
lea
cli
gs
bnd
aad
scas
adc
in
test
or
pop
jae
fdivrs
aad
aaa
adc
cmpsb
cmp
std
jb
lret
scas
pop
push
cli
cmp
jns
adc
or
call
add
shrb
push
call
popa
in
inc
or
clc
test
and
loope
nop
xor
push
mov
pop
imul
mov
scas
into
sbb
fcmove
ret
jle
sub
and
inc
das
sbb
cmp
sub
jmp
rcll
sub
cmp
call
lds
pop
ja
in
pop
add
jne
mov
outsl
test
aam
fs
xchg
into
cli
inc
push
roll
lea
mov
neg
cltd
rorl
ss
hlt
pop
test
push
xchg
mov
daa
jl
ficompl
push
and
xor
jo
xchg
sub
sub
inc
scas
mov
add
mov
std
inc
and
cmp
hlt
dec
xlat
das
outsl
mov
push
mov
js
xor
test
inc
xor
xor
jns
cmp
add
outsb
mov
mov
cmp
test
cltd
xchg
repnz
shl
insb
mov
movsb
jns
jae
aam
xchg
lods
jbe
das
mov
cmp
clc
push
mov
popa
jl
loope
inc
xor
push
fdivs
scas
stos
jb
jecxz
jne
pop
lcall
jmp
dec
sub
cmp
les
hlt
out
add
or
lret
mov
sub
mov
xchg
inc
nop
gs
inc
jecxz
in
pop
mov
ds
mov
pop
and
sti
cltd
test
leave
cmp
xor
mov
mov
push
subl
sub
jecxz
int
out
iret
fwait
gs
addr16
ret
ret
xor
xchg
inc
cmp
adc
nop
push
popf
pop
sbb
in
adc
sbb
sub
cltd
iret
mov
inc
notb
sub
pop
or
push
dec
lock
and
es
and
scas
inc
jl
outsl
sub
mov
inc
sbb
sti
or
sbb
xchg
jecxz
mov
jo
fmuls
adc
cli
int
test
popa
sbb
adc
pop
cmp
sbb
out
pop
rol
movsb
std
fsubl
xchg
mov
movsb
dec
testb
inc
lods
aaa
lods
push
or
mov
rol
or
rclb
ss
push
rcl
pop
push
jp
and
fldcw
xlat
in
out
or
add
sbb
jb
fs
xor
push
xor
sbb
sti
test
dec
inc
repnz
daa
mov
repnz
cmp
add
push
adc
xchg
adc
cwtl
cmpsl
je
push
movsb
jle
cli
scas
ret
push
aad
sub
xor
or
shll
jmp
dec
jl
lea
push
cmp
sbb
cltd
out
pop
xchg
sarl
xchg
jmp
test
fwait
and
rcr
cmpsb
sarb
roll
mov
or
aam
dec
mov
lret
adc
sbb
sbb
push
test
lahf
mov
cmp
sti
mov
iret
mov
iret
ss
pop
stc
clc
jp
mov
sub
xor
jo
outsl
addb
lcall
mov
pop
xor
mov
out
int
inc
mov
adc
mov
fisttpll
lcall
call
iret
xchg
ljmp
call
cmpl
out
dec
adc
add
enter
out
mov
inc
jmp
jbe
in
je
neg
push
sarb
shrl
enter
and
dec
pop
loope
mov
xor
pop
in
sahf
push
fwait
addl
ljmp
push
push
dec
and
mov
cmp
pop
aad
mov
adc
nop
adc
adc
outsb
leave
imul
xor
jg
lock
sbb
test
mov
arpl
mov
adc
fcmovnu
loopne
dec
mov
pop
dec
adc
mov
cmp
add
cmp
and
add
mov
dec
dec
mov
mov
push
loopne
adc
xchg
fwait
dec
mull
loopne
pop
cwtl
adc
sbb
test
push
enter
cmp
inc
ret
or
cld
add
cmp
mov
aas
push
jno
fdivs
orb
xchg
fnstsw
hlt
rol
jo
and
sbb
adc
ja
cs
push
and
andb
popf
je
ja
mov
sub
dec
sbb
xor
cs
inc
loopne
dec
fcom
or
shrb
add
dec
mov
popa
repz
lahf
adc
test
xchg
sbb
push
js
pop
cwtl
loop
dec
jecxz
adc
iret
fistps
push
adc
mov
test
adc
xorl
pop
mov
xor
es
roll
push
sub
inc
fildll
in
dec
mov
jecxz
ret
rol
rclb
xor
mov
daa
mov
xchg
bound
addr16
fadd
cmp
sub
push
mov
cltd
mov
push
mov
dec
adc
push
and
mov
bound
inc
out
repnz
cmp
sub
and
ja
fbld
outsb
push
inc
inc
shll
push
andl
sbb
fnstcw
mov
push
ljmp
mov
imul
push
and
loope
sub
addl
or
mov
pop
ljmp
outsb
jns
or
std
sbb
sub
xor
cmc
sahf
cmp
sub
adc
cmpsl
sub
jg
ret
adc
pmulhw
cmp
jnp
leave
mov
lods
sbb
push
nop
mov
mov
add
xchg
test
sub
movl
movsl
mov
cwtl
xchg
sub
jo
mov
mov
repz
mov
jl
xchg
lds
mov
cld
push
cmp
xchg
aam
or
sbb
fisubs
ja
in
sbb
addl
add
jns
cmpsb
xchg
sub
pop
int3
faddl
xchg
fistpll
cmc
hlt
push
adc
sbb
stos
sbb
push
inc
dec
in
mov
xor
pop
adc
cld
xchg
mull
lcall
ret
ss
loope
xor
in
pop
adc
out
dec
and
adc
mov
or
adc
pop
in
mov
jnp
ror
mov
lock
pop
insb
xor
rclb
loop
mov
mov
cmp
in
mov
hlt
outsb
mov
dec
sub
sub
mov
dec
pop
cmp
push
pushf
lods
imul
cli
loope
fstps
scas
aad
jmp
insl
in
stos
sub
push
lock
push
pushf
push
nop
cmc
dec
enter
mov
jb
jbe
jp
jnp
jg
pop
ljmp
int3
insl
lcall
icebp
pminsw
xor
inc
sub
sbb
sub
fidivrl
bound
imul
aas
push
and
push
lock
and
xor
in
pop
or
test
and
adc
xchg
mov
jo
dec
cltd
inc
scas
mov
jmp
in
cmp
dec
jbe
xacquire
loope
lock
popa
add
add
pop
inc
test
aas
data16
push
mov
std
and
dec
jg
jne
jae
and
fcom
or
out
jo,pn
xchg
insb
aam
hlt
pop
sub
dec
aas
xchg
mov
int
fnstenv
pop
mov
xchg
inc
dec
into
fildll
test
stos
out
ja
iret
xorl
jg
sub
fbstp
sbb
iret
mov
stc
mov
xchg
fldl
push
sbb
push
and
mov
lea
mov
fcomps
std
sub
leave
fidivl
inc
pop
mov
xor
in
ret
cmp
jle
inc
xor
sahf
cli
shll
and
jmp
fs
lods
xchg
mov
pop
scas
cld
jo
xchg
stos
addr16
imul
inc
push
inc
fmul
mov
out
sarb
pushf
jg
nop
pop
inc
orb
stos
cld
jbe
dec
mov
xor
dec
fldt
out
int3
ss
shrb
das
fists
ret
cmp
or
dec
lods
jae
add
repnz
fxch
pop
inc
addl
jae
add
out
cli
jno
sti
js
mov
js
ss
adc
jp
insb
pop
clc
loop
xor
test
sets
adc
int3
hlt
shll
xchg
bound
sahf
imul
sub
je
push
lods
rol
sub
dec
dec
shl
pop
cwtl
mov
dec
dec
xchg
sbb
out
fsubl
daa
or
enter
ds
push
mov
addr16
or
fsubs
pop
call
xchg
scas
notl
out
jp
mov
int3
insb
cmpsb
jb
lock
fs
cli
jno
inc
jns
inc
sbb
xchg
or
lret
pop
mov
dec
lahf
push
jecxz
xchg
mov
in
and
out
scas
mov
ret
imull
sub
add
mov
mov
lods
xchg
fstl
dec
or
or
jno
pusha
fisubl
out
ja
add
gs
je
fbstp
insb
jnp
cmpsb
ja
jle
neg
jns
fdivrl
cltd
stos
in
fwait
mov
cmc
push
das
out
insb
or
add
push
mov
push
movsl
repnz
test
mov
pop
addr16
inc
loop
or
sub
call
sbb
inc
lahf
insl
rcrb
sbb
mov
pop
jbe
ljmp
les
lods
ds
add
inc
cs
scas
lahf
popf
xchg
movsb
in
out
out
push
add
neg
cli
cmpl
cmp
push
add
dec
jg
call
mov
mov
cs
inc
and
jg
popf
int3
and
ljmp
inc
lods
cld
rclb
test
cmp
pop
and
aad
add
xchg
leave
hlt
int
bound
adc
sbb
mov
call
mov
data16
lret
sbb
jg
repz
bswap
inc
sbb
inc
push
lret
cli
leave
popa
jo
into
mov
test
pop
jnp
inc
testl
xlat
lahf
out
fnsetpm(287
cltd
dec
sbb
stos
sub
scas
push
out
mov
ja
push
mov
rorl
jecxz
xlat
cmpl
jno
test
out
in
xchg
ret
sub
or
and
lods
and
es
lret
mov
lods
xor
push
pusha
fdivrl
cmpsl
scas
or
dec
dec
push
imul
cmp
mov
mov
mov
push
or
pop
dec
sbb
les
imul
jae
xor
mov
enter
in
daa
cs
addr16
inc
sbb
icebp
mov
sub
shrl
icebp
insb
adc
ja
lods
add
scas
pusha
pop
ss
or
cmpsb
mov
mov
ljmp
xor
int3
or
repnz
jmp
sub
aas
or
jecxz
mov
sub
arpl
inc
adc
jno
push
cmpsl
ret
movsl
and
aas
push
xor
shll
cmp
pop
add
sub
adc
xchg
cld
stc
lods
sub
adc
lret
cmp
andb
dec
xchg
or
movsb
adc
je
sahf
mov
gs
lea
and
push
jmp
mov
sub
popa
lea
xchg
inc
lahf
pusha
mov
ret
xchg
push
scas
nop
fwait
test
mov
andl
add
out
xchg
push
xchg
in
push
add
adc
sahf
jmp
mov
add
fimuls
add
push
fiadds
shlb
cmpsb
mov
inc
jb
movsb
sbb
dec
sub
in
jle
aad
lret
lahf
dec
xchg
out
xchg
test
cwtl
rorb
repz
imul
aas
repnz
jb
pusha
fs
sub
xor
adc
push
pop
mov
mov
pop
xlat
cmp
sub
push
mov
dec
mov
mov
inc
data16
mov
adc
adc
mov
mov
jae
leave
enter
jge
cmpsb
test
subb
or
loope
and
fsubl
nop
jns
xor
fimuls
scas
add
out
xlat
add
mov
xor
cltd
out
popl
mov
xchg
ror
lea
imul
cmpsb
gs
jmp
cmp
test
ds
sub
cmp
fsubrs
pushf
in
jo
mulb
jae
ret
mov
cmpsl
sbb
movsl
mov
bnd
mov
insb
sbb
pushf
push
arpl
frstor
pop
aad
idivl
adc
dec
fwait
mov
sahf
dec
in
fs
pop
aas
cmp
into
stos
negb
nop
add
push
test
insb
rcr
jp
sbb
paddb
xchg
outsl
nop
bound
dec
sarb
xor
inc
dec
stc
scas
ljmp
sub
mov
mov
clc
push
cli
dec
andl
mov
cmp
and
data16
mov
out
nop
sbb
movl
jnp
inc
fsqrt
push
jecxz
pop
and
test
rol
lods
pop
mov
fwait
push
fisttps
ds
jae
adc
cmp
lahf
mov
mov
sub
cmp
add
and
jno
loopw
adc
test
push
fmuls
lret
xor
and
iret
jb
and
notb
js
sub
xchg
aam
cmp
filds
inc
in
repz
aaa
cld
cwtl
outsb
adc
and
sub
xchg
rcll
and
mov
add
jecxz
push
add
pushf
sti
mov
js
push
cld
rcr
icebp
jnp
adc
sub
icebp
arpl
or
mov
stos
fistpll
sbb
add
cmp
jne
push
js
mov
pop
aas
cwtl
add
inc
mov
popa
cli
push
repnz
jmp
leave
jle
jecxz
fisttps
mov
or
test
push
push
je
movsb
imull
jecxz
movsl
outsl
popa
pop
pop
push
hlt
addr16
cltd
jl
jle
imul
fmuls
inc
sti
in
or
and
mov
push
adc
push
loopne
cwtl
fstl
jl
pushl
cmpsb
outsb
pushf
loopne
loopne
cltd
repnz
aas
cmc
pop
sbb
cmpsl
dec
aaa
ret
cmpsl
or
ret
jns
ss
mov
inc
fisubs
cld
bsr
jae
fwait
add
in
add
jge
xor
into
add
shr
mov
cmpsb
gs
cmc
xor
inc
xor
push
lret
mov
pop
ljmp
sub
sahf
or
cld
xorl
cmp
push
fldl
inc
mov
das
sarb
int
js
cmpsb
jle
mov
xchg
leave
sbb
push
lea
shlb
filds
inc
adc
or
adc
cmp
arpl
push
mov
gs
mov
outsl
ror
push
imul
cmp
cmpsb
pop
testl
push
push
jo
rcrb
fstpt
popa
push
and
addb
repz
mov
mov
clc
jmp
loop
icebp
loop
sahf
add
mov
pop
fmulp
lds
xor
sbb
ljmp
sbb
outsb
add
out
out
leave
dec
lcall
loop
ret
aam
inc
or
shll
dec
xchg
or
stos
call
das
push
mov
pop
enter
mov
bound
sub
add
pop
sbb
xchg
enter
mov
arpl
and
das
bnd
mov
mov
push
test
push
test
out
pop
in
out
pop
cmc
inc
aam
adc
and
dec
xchg
and
inc
jg
iret
movsb
in
gs
mov
mov
xor
repnz
clc
cmp
mov
insb
lea
std
je
rcll
out
loope
push
mov
jb
fwait
xor
mov
push
cli
push
xchg
pop
fs
sub
push
jbe
jnp
dec
or
test
jno
add
or
inc
es
xor
aaa
dec
pop
cmp
enter
mov
out
add
mov
pop
sub
jno
xchg
mov
inc
insb
rorl
mov
into
sti
shl
sbb
sar
sbb
mov
pop
shlb
les
pop
cmp
arpl
testb
ret
and
call
add
std
inc
pop
add
jbe
aaa
xor
fwait
sarl
in
fcomps
adc
xlat
mov
sub
mov
pop
movsb
mov
jns
push
pop
stc
movsl
cs
push
xor
aam
imul
sbb
jbe
das
jge
cwtl
in
data16
inc
pop
jecxz
mov
std
jp
int
pop
xlat
jl
push
inc
and
sbb
sbb
pop
aas
addr16
cli
sub
or
rorb
stos
insl
loopne
incb
ret
xor
mov
cmc
dec
fs
cmp
and
rcrb
xchg
cmp
push
xchg
jle
les
add
fisubs
add
movsl
sub
cmp
lock
mov
add
iret
aam
rcr
loopne
ss
std
dec
int
mov
inc
into
out
stc
mov
and
insb
mov
rolb
pop
add
pop
bound
out
mov
in
pop
lahf
dec
xor
fwait
mov
push
inc
dec
add
dec
imul
xor
or
xor
nop
mov
ret
ja
cmpl
lods
movsb
ret
cltd
arpl
and
cmp
rclb
addb
es
cld
add
cli
dec
insb
or
rolb
inc
inc
out
adc
or
xor
aad
mov
ror
mov
ja
shrl
adc
cli
sbb
movsb
inc
adcl
sbbb
xchg
adc
sarb
scas
xchg
lock
mov
add
mov
insl
enter
cmp
pop
pop
lock
loopne
lahf
sbb
inc
stos
js
pop
mov
and
push
iret
fwait
inc
lret
push
pushf
stc
mov
dec
fisttpll
movsl
mov
pop
xchg
jge
icebp
sarl
je
mov
jbe
xchg
inc
jp
stos
fwait
jne
add
bound
ret
cmpsl
aaa
mov
bound
icebp
icebp
ficoml
and
sub
test
xchg
scas
nop
jo
in
dec
in
push
arpl
pop
das
fdivl
jns
push
adc
xlat
jbe
hlt
enter
mov
imul
sub
movsl
mov
and
sbb
mov
lods
fwait
nop
loopne
push
dec
rol
cmpsb
fldl
mov
cli
pop
fimuls
movsl
xchg
stc
add
jae
sahf
call
fucompp
push
imul
fstps
cmpsl
divl
das
addr16
decl
sbb
leave
pop
inc
adc
mov
sbb
inc
inc
prefetchnta
jns
div
add
push
or
add
sbb
lahf
mov
sbb
mov
mov
dec
fdivrs
fld
dec
jge
jle
aam
outsl
loope
lods
jge
testb
add
dec
lcall
mov
push
xor
dec
jmp
xor
xchg
pop
jl
or
dec
push
mov
in
add
jle
adc
scas
hlt
mov
sbb
ret
push
scas
les
adc
cmp
dec
aas
xchg
xor
adc
add
cmc
pusha
lret
xor
out
mov
push
push
or
or
mov
ljmp
mov
push
aaa
enter
fdiv
pop
and
push
test
lret
rcrl
push
ljmp
sub
and
add
sub
mov
in
or
std
mulb
jbe
loopne
pop
pop
jbe
lds
out
imul
lock
std
sbb
rorl
mov
jmp
sbb
add
adc
mov
or
jp,pt
mov
sub
ret
popa
pushf
xlat
jns
test
repz
push
in
cmp
ds
xchg
xchg
ficoml
sti
inc
cmp
loope
and
call
inc
mov
cmp
and
or
stos
and
jb
and
aam
push
fcomps
punpckhwd
adc
mov
mov
lea
xchg
cld
sbb
push
cli
aam
sahf
mov
add
or
icebp
dec
gs
fistl
test
sti
lea
into
pop
mov
dec
fidivl
xor
push
sbb
mov
scas
in
sub
pop
sub
xchg
scas
in
clc
loopne
pop
dec
test
lret
and
mov
mov
or
daa
adcl
pop
popf
mov
inc
inc
outsb
xchg
jg
jg
pop
adc
pop
push
aam
movsb
dec
stc
movsb
shrb
hlt
and
cmp
mov
or
jecxz
xor
clc
in
cltd
cmp
push
and
xchg
pop
inc
sub
inc
lcall
mov
xor
ds
inc
jb
imul
aaa
push
ds
and
mov
jnp
pop
push
ljmp
in
stos
cmp
mov
stos
push
inc
jbe
or
dec
pop
cli
jo
push
mov
pop
sub
in
icebp
outsl
xchg
pop
test
push
push
stos
push
test
js
ret
adc
loope
push
jns
jae
push
or
add
inc
js
add
pop
loop
mov
sbb
outsl
add
dec
pop
xor
jns
dec
mov
jne
mov
out
mov
or
xor
sahf
jb
aas
cwtl
push
cmc
cmp
cli
rorb
cmpl
mov
enterw
or
out
dec
mov
dec
jno
call
fists
insb
inc
iret
cmpsb
nop
pop
sub
sub
cltd
pop
mov
pop
test
rcrb
ljmp
popa
stc
ljmp
xchg
mov
shlb
cmpl
mov
or
push
cmpl
xchg
mov
jp
fistl
fs
mov
mov
inc
or
out
movsb
pop
adc
mov
xor
push
xor
outsl
push
sub
out
inc
cwtl
sub
ret
pop
leave
inc
mov
add
push
adc
inc
and
je
mov
and
sub
repz
stos
jl
push
cwtl
xor
ljmp
pop
outsb
mov
jns
lret
fcomi
jmp
mov
adc
outsl
stc
cmp
fsubp
fld
push
fstpl
scas
cmpsl
or
sbb
orb
pop
mov
mov
sets
cwtl
sbb
push
ss
and
mov
mov
dec
scas
adc
add
mov
jb
cmpsl
lahf
push
push
pushf
les
mov
and
cmp
xchg
jmp
xor
out
inc
pushf
rolb
ret
aam
leave
mov
je
push
sub
ds
mov
sbb
jmp
lret
and
xor
adc
pop
mov
popl
jle
dec
cmp
xchg
adc
and
imul
inc
pop
movsb
xchg
or
mov
gs
scas
popf
mov
in
inc
xor
push
test
mov
xchg
ffree
inc
aaa
popf
mov
imul
and
adc
mov
adc
mov
mov
es
mov
sti
sbb
ret
dec
and
int
mov
cmp
adc
mov
loop
jle
and
xchg
push
pop
movsb
in
push
sbb
mov
arpl
addb
test
gs
sarl
xor
mov
mov
and
out
mov
mov
rcrb
jle
movsb
sub
outsl
cltd
gs
fnstenv
pop
dec
mov
aaa
popf
outsl
mov
sti
sahf
lcall
pop
insl
dec
int
and
sbb
jo
cmp
popf
push
jne
push
stos
stos
sub
call
mov
dec
aaa
cmpsl
xchg
stc
or
aas
je
inc
mov
xor
push
xchg
xchg
or
add
mov
inc
and
rolb
js
decb
adc
call
loope
mov
outsl
xor
sub
or
add
xor
out
inc
or
outsl
push
clc
adc
testl
inc
cs
sbb
push
das
sarb
add
sar
dec
mov
cmpsb
dec
sahf
pop
neg
adc
pop
mov
pop
cmc
loopne
cwtl
xchg
icebp
scas
clc
sub
jbe
xlat
jnp
mov
pushf
add
and
pop
aaa
xchg
adc
scas
xor
adcl
insl
hlt
mov
or
dec
dec
loopne
std
iret
movsl
sti
mov
jbe
fisttpl
das
fbstp
sub
inc
sub
fwait
push
movsl
pop
xor
in
loopne
jnp
xchg
iret
ljmp
js
mov
fwait
mov
clc
rcl
or
mov
xchg
mov
sbb
out
cld
xor
lods
popa
jle
pop
fidivrs
popf
subb
enter
shrb
lret
pusha
iret
mov
dec
lds
fs
fildll
clc
or
ja
xlat
and
mov
cmp
adc
cli
jge
mov
stos
mov
and
mov
dec
fiadds
mov
lret
mov
arpl
into
lods
push
test
ss
inc
lret
lret
fstl
adc
scas
adc
cmp
adc
jmp
cmp
push
daa
xor
scas
ljmp
push
outsb
je
jge
movsb
movsb
inc
mov
fcmovbe
xchg
cmpsl
icebp
mov
loopne
jno
fsubr
outsl
jecxz
pop
mov
sbb
insl
mov
mov
jp
in
out
in
cmc
push
loopne,pn
push
iret
daa
mov
in
sub
jl
lret
imull
or
jecxz
gs
adc
sub
outsb
sbb
or
scas
cli
mov
daa
sarl
ja
xchg
das
leave
mov
ljmp
fnsave
add
mov
sbb
addr16
xor
inc
lret
aam
mov
push
inc
pusha
leave
mov
insl
mov
and
dec
insl
xchg
adc
adc
gs
add
xor
cltd
inc
test
add
sbb
pop
pop
int3
mov
pop
popf
hlt
mov
mov
icebp
push
mov
mov
and
test
cmpsl
mov
dec
jbe
xor
into
push
xchg
xor
push
push
or
xor
and
sbb
lahf
jne
xchg
pop
xlat
outsl
icebp
imul
imul
add
push
xor
xor
mov
mov
xchg
fistpll
or
cwtl
mov
flds
fbld
push
outsb
jb
and
jmp
adc
idiv
mov
jle
add
mov
mov
mov
pusha
lds
jno,pn
jmp
xchg
and
cwtl
repnz
push
movsb
dec
test
sub
cld
push
or
in
dec
pop
cwtl
imul
out
xor
loop
das
and
adc
pushf
aad
daa
setle
pop
cmp
fcompl
inc
pop
insb
or
xchg
sub
cli
mov
mov
scas
or
pop
shrl
test
mov
mov
std
es
loopne
in
out
xchg
incl
clc
sub
jecxz
cmp
data16
cmp
xor
vprotb
repnz
dec
pop
dec
out
pop
push
shll
xlat
subb
popa
xchg
xchg
mov
jno
pop
push
add
pop
mov
icebp
sbb
js
jmp
xchg
popf
inc
pusha
pop
movsb
xchg
mov
stos
jecxz
sar
cmc
push
addl
and
xchg
mov
das
test
add
inc
sbb
and
push
inc
inc
outsb
std
push
xchg
mov
pop
imul
adc
addr16
mov
or
mov
dec
sbb
push
mov
int3
fdivrs
sbb
movsb
movsl
adc
lea
ret
movsb
cmp
sti
loop
ret
mov
jo
addr16
jg
arpl
popa
sbb
xor
out
dec
fs
mov
lea
mov
mov
movsl
in
push
insb
ss
cmp
dec
dec
fwait
and
pushf
jbe
adc
pop
xchg
cmp
aas
xorb
inc
movsb
pushf
dec
cmp
scas
loope
cli
pushf
pop
jmp
xchg
sbb
jmp
pushf
lcall
pop
leave
les
aam
jo
repnz
pop
movsb
xor
fldl
cmp
hlt
inc
ficomps
xor
mov
sbbb
pop
mov
xchg
inc
xor
lret
popa
sarl
dec
push
rorb
lds
mov
ret
jp
test
stos
stc
jg
fs
insl
pop
cmc
mov
repnz
call
push
inc
ds
insl
in
xlat
outsb
shl
push
iret
mov
pop
pusha
add
xchg
outsl
cs
xor
das
xchg
xchg
dec
jecxz
xlat
pusha
mov
ret
lret
and
fisttpll
loopne
mov
shrl
std
jmp
jmp
pop
std
add
adc
xor
sti
jmp
xchg
int3
mov
fsts
scas
adc
in
lock
movsl
push
cmp
jne
cli
inc
sbbb
in
or
loopne
jb
mov
sub
in
xlat
mov
call
dec
lahf
push
and
mov
in
jae
inc
imul
addr16
add
fst
mov
scas
scas
push
mov
stos
out
das
mov
outsl
stos
mov
jmp
mov
lahf
rolb
je
ds
lret
rorb
xor
testb
das
clc
pusha
sbbb
cmp
add
mov
sub
mov
inc
shlb
movsb
in
lret
inc
dec
jl
scas
add
jae
add
xchg
sub
jbe
lret
dec
out
push
out
push
dec
push
mov
mov
mov
sbb
shlb
adc
subb
hlt
das
mov
fildll
les
jae
stc
lcall
lahf
ds
cmp
sbb
sub
inc
adc
leave
dec
test
sti
adc
ficoml
movsb
lcall
sbb
mov
dec
out
shrl
push
test
push
dec
lock
add
sbb
out
pop
outsb
rolb
jge
std
mov
push
cmpsb
in
rorl
js
jecxz
jl
imul
js
cmpsb
xchg
push
insl
dec
xchg
sbb
cwtl
test
inc
jns
pop
lds
push
mov
pop
sbb
cmpsl
nop
and
movsb
jb
xchg
lock
cmovp
inc
push
jge
outsl
test
or
lods
push
jmp
inc
mov
push
inc
test
leave
jg
push
stc
mov
bound
inc
add
jbe
imul
sahf
mov
inc
push
cmp
sbb
call
push
stos
pop
in
sub
adc
pop
sbb
in
ret
mov
and
dec
pop
mov
push
mov
mov
mov
dec
sbb
jecxz
jno,pt
daa
jnp
or
loop
cmc
jo
push
dec
sbb
shrl
cmpl
aad
xor
mov
cmc
xor
dec
sti
arpl
mov
ret
test
xchg
mov
push
imul
pop
loope
roll
mov
cli
or
in
push
xchg
int
push
jge
fiaddl
sbb
lcall
or
cmp
andl
loop
aaa
dec
aad
outsl
gs
sbb
nop
lcall
pop
adc
iret
inc
and
aas
inc
nop
xor
xlat
iret
test
insl
pop
xadd
fsubs
mov
xor
fs
mov
addl
call
push
call
jae
out
fcompl
dec
pop
push
fsubrs
fildl
jnp
call
aad
mov
sub
push
out
inc
je
fwait
sbb
lods
add
fimuls
sub
mov
loop
sbb
imul
cmp
adc
daa
gs
movsl
push
add
sub
xchg
daa
sarl
push
out
add
sub
outsl
test
aaa
call
inc
aas
daa
loopne
pop
pusha
icebp
push
mov
js
or
inc
mov
lods
not
jg
xchg
sub
sub
dec
sub
jnp
imul
xor
inc
sbb
jne
cltd
lret
stc
aas
test
pushf
daa
out
jp
xor
mov
test
lret
or
std
cs
arpl
arpl
mov
out
dec
hlt
and
loop
rorw
in
fdivl
lea
inc
fistpl
mov
push
sarb
mov
mov
inc
or
adc
inc
xchg
insb
ret
fdivr
mov
sub
cmp
incl
ret
cmp
gs
clc
nop
mov
push
repz
pop
rolb
insb
in
repz
mov
or
in
ret
jb
push
fists
sbb
jne
daa
ds
and
jp
stos
repz
fcmovbe
adc
add
mov
cli
ja
outsb
lds
in
cmp
mov
sbb
push
adc
xchg
lea
and
push
repnz
lcall
sbb
fimull
loop
mov
jnp
lock
test
adc
add
mov
jmp
lahf
hlt
and
add
std
enter
fsubrp
mov
lret
sbb
mov
addr16
iret
shl
int
inc
dec
push
add
mov
inc
addr16
repz
sub
or
rcl
push
xor
jae
sbb
sub
add
nop
adc
jae
mov
inc
xor
lods
mov
dec
mov
lret
cmpsl
push
shll
push
lcall
dec
push
mov
or
lret
pop
push
outsb
xor
cmp
jb
xor
mov
dec
nop
add
inc
xchg
inc
iret
andl
orb
jne
test
in
push
cmp
repnz
daa
rorl
imul
push
mov
pop
pushw
mov
mov
pop
icebp
add
push
jns
movsb
add
lret
sub
sbb
repz
int
xor
mov
push
xor
repnz
daa
arpl
loopne
cmpsl
adcb
mov
sbb
adc
pushf
xor
addr16
mov
xchg
xchg
pmaxub
daa
xorb
aad
ss
jmp
test
adc
mov
push
std
inc
push
stc
cmp
xor
pop
cld
aaa
jmp
push
pop
cmpsb
in
add
jmp
sub
movsb
or
xchg
movsb
lcall
cli
lea
test
data16
jbe
cmp
sub
imul
cmc
pop
outsb
aad
fdivl
inc
sub
pop
dec
lret
into
sbb
mov
sub
fcmovu
sub
lret
clc
xor
xor
les
mov
add
imul
mov
out
dec
cli
adc
inc
sbbb
stos
jmp
out
adc
sbb
jb
sbb
sub
in
lods
or
ret
inc
out
adc
in
add
inc
lock
ljmp
xlat
add
dec
test
in
cmpsl
lods
pop
lahf
adc
and
cwtl
lahf
jmp
dec
fimull
call
fwait
mov
mov
es
int3
sahf
lret
mov
lcall
aad
in
push
cs
mov
jno
mov
movl
sbb
mov
loopne
inc
nop
jb
sbb
dec
ds
xchg
pop
cmp
dec
mov
dec
push
addr16
mov
insl
clc
mov
inc
push
inc
cmpsb
out
xor
ss
fldcw
pop
gs
pusha
rcrl
xchg
popf
fsubr
insb
push
mov
and
jb
jnp
jae
dec
data16
xchg
jp
xchg
out
pop
jl
sub
dec
pop
dec
pop
fbstp
pop
lea
and
shrb
xchg
loop
lods
add
xchg
adc
add
jo
pop
movsl
cwtl
xchg
fidivrl
out
dec
gs
and
push
jb
pop
sbb
xor
xchg
inc
xchg
add
fstp
test
fistps
std
mov
pop
sub
in
dec
sub
iret
das
cwtl
add
or
lret
or
mov
jne
sub
sbb
mov
ret
sahf
addr16
sbb
and
inc
mov
or
loopne
mov
int3
push
pop
pop
les
cmp
aam
pop
stos
and
dec
pop
cmp
mov
dec
test
add
loope
sub
daa
fsubp
inc
push
push
in
aam
sbb
or
sarb
cwtl
mov
test
in
push
jno
sbb
xor
sbb
out
or
cli
dec
imul
cmc
xor
lds
push
shll
jb
nop
addr16
cs
mov
loope
scas
out
jne
stos
sbb
xor
js
fcmovnu
filds
or
dec
sub
sahf
push
inc
icebp
xor
or
cmpsb
dec
out
cwtl
shrb
mul
enter
mov
add
sbbb
xlat
fisubl
pushl
aam
nop
pushf
sub
mov
lret
mov
xchg
xchg
sahf
stos
and
les
add
pop
popa
loopne
xor
pop
adcl
push
es
fdivrl
cmp
adc
cltd
sub
sub
inc
xor
aas
sub
dec
jb
dec
inc
push
push
jnp
sbb
mov
pop
arpl
jne
lcall
test
and
subl
ret
fsub
xlat
sbb
fsubs
nop
xchg
jecxz
jnp
push
mov
xchg
dec
pop
push
test
pushf
push
es
in
test
movsl
test
arpl
or
and
ret
cltd
std
sbb
int3
jl
cmc
sbb
mov
fwait
jnp
push
icebp
fldl
in
inc
and
jns
aad
mov
mov
jle
jecxz
mov
pop
icebp
xlat
adc
shr
and
in
pusha
pop
jl
add
sbb
inc
pop
ret
dec
push
mov
movsl
sbb
cltd
sbb
pop
and
or
imul
jb
je
mov
insl
mov
loop
int
jo
lret
scas
call
loop
sbb
gs
aaa
scas
iret
mov
es
repz
in
test
repz
pushf
jns
enter
in
hlt
loope
jecxz
ffreep
or
adc
lret
dec
mov
cmpsl
fsubr
and
inc
inc
fdivr
lea
inc
imul
fcomps
pop
in
test
pushf
sub
push
cmp
xor
or
pop
adc
stc
fcmovnb
jl
in
mov
pushf
fcoml
enter
push
loope
xor
mov
add
iret
or
mov
inc
pop
mov
xchg
mov
fldl
sbb
xchg
pushf
rcl
or
aas
dec
loopne
cmp
rcrb
pop
add
mov
andb
dec
dec
cmp
sbb
jmp
and
jg
add
sbb
in
mov
pop
inc
sti
jns
xor
cmpsb
pop
cmp
mov
dec
lcall
inc
mov
outsl
mov
outsl
inc
jle
mov
adc
pushf
fmuls
or
dec
punpcklbw
mov
lret
jmp
add
jae
jge
mov
lret
add
mov
jp
mov
dec
test
mov
scas
sub
test
in
std
fstps
rolb
je
or
je
dec
dec
add
fildl
cmc
cmpsl
xchg
pop
inc
adc
lds
or
sbb
mov
loope
dec
jmp
jne
fcoml
cmp
in
cmp
add
dec
fnstsw
xchg
push
jg
pop
shll
test
dec
xchg
or
in
xor
scas
pushf
pop
scas
xor
mov
leave
aam
loope
cli
adcl
popf
in
cli
mov
fwait
scas
out
jbe
fdivrs
inc
adc
inc
enter
fwait
clc
sub
xchg
dec
nop
daa
cli
push
mov
scas
fnsave
nop
mov
push
cmp
leave
mov
lcall
sub
adc
lret
jmp
aad
lods
ret
xorb
inc
or
psrld
jae
in
dec
movsb
pop
aaa
in
jmp
adc
lods
and
cltd
or
shrl
jl
addl
lcall
pop
add
pushf
mov
scas
cltd
jg
stos
repnz
add
in
push
push
mov
mov
xor
mov
rcrl
adc
sbb
xchg
pop
and
repz
jbe
jnp
les
mov
xchg
ficompl
dec
jne
dec
in
push
xor
xor
push
or
stos
sub
fs
aaa
jle
mov
js
insl
das
mov
sub
into
sub
and
sbb
mov
sahf
fsts
or
cmpsl
into
enter
adc
xchg
mov
call
or
xlat
push
in
dec
mov
mov
xchg
sbb
cmp
jmp
jl
xchg
nop
movsb
adc
sub
cmc
stos
call
mov
loopne
mov
pop
mov
cmpsl
sub
inc
pusha
pop
dec
test
mov
push
jecxz
sahf
mov
and
fisubl
xchg
lcall
subb
lea
das
adc
je
leavew
or
imul
cmpsb
mov
xor
lret
repnz
pusha
or
in
add
test
in
adc
in
inc
clc
ljmp
dec
leave
xlat
adc
stc
push
jmp
stos
ret
inc
mov
stc
dec
adc
and
pop
jb
lea
jmp
subb
jae
subb
adc
insl
pop
lea
mov
inc
aad
xchg
es
std
pop
inc
adc
add
push
push
aas
mov
xlat
test
jge
sahf
and
jne
cmp
pop
jno
outsb
xchg
xor
sbb
inc
inc
dec
push
lods
mov
int3
dec
shlb
movsl
lea
pop
mov
pop
cmp
lret
pop
jg
bound
int
sbb
sbb
mov
ja
xor
std
push
imul
addb
stos
std
push
and
xchg
xor
rol
test
add
mov
hlt
cli
call
iret
mov
xchg
mov
ret
fldcw
pop
aas
out
push
divl
pop
imul
cmp
ret
dec
inc
das
jno
std
cmpsb
stos
leave
push
sbb
jb
lret
mov
push
jmp
adc
and
push
push
add
rorb
and
inc
int
cs
cmp
cmp
sbb
sub
imul
sarl
cmp
ret
push
lock
or
jbe
push
pop
jnp
jns
push
dec
mov
stc
pop
xchg
sub
shrl
cmp
and
pushl
or
shrl
leave
dec
sub
imul
sub
or
and
mov
fidivrs
dec
mov
iret
bound
dec
and
out
gs
pop
fs
mov
lock
rol
iret
sti
ret
dec
shll
pop
fsub
xchg
shl
mov
push
xor
roll
loop
mov
inc
scas
mov
sbb
imul
inc
cwtl
adc
mov
mov
or
adc
sbb
adc
cld
negb
jg
int
das
flds
fs
mov
mov
scas
xor
in
into
jp
sbb
mov
inc
cmpsb
sbb
decb
outsl
inc
xlat
ds
fbstp
inc
pop
int
cwtl
lds
lret
push
cld
ret
lahf
inc
push
test
pop
into
lock
jae
shl
add
push
sub
adc
add
movsl
jb
in
lretw
jge
cmp
xlat
and
push
sti
add
jnp
pop
iret
ret
pushf
sub
mov
sub
and
mov
nop
jmp
jne
xor
mov
popf
fs
clc
pop
push
jb
scas
outsb
cltd
or
stos
mov
adc
lret
xor
roll
inc
sub
bound
out
sub
in
xchg
push
xor
pop
mov
test
adc
and
cmp
pop
add
xchg
pop
inc
push
inc
fmul
imul
addr16
iret
rorl
inc
xchg
imulb
push
pusha
xor
imul
insb
or
out
mov
and
xor
enter
push
nop
inc
dec
add
or
xlat
sbb
popf
inc
pop
dec
mov
clc
daa
fdivrl
lcall
movsl
push
andl
inc
mov
and
shrl
pop
mov
aaa
xchg
sub
sub
and
xchg
add
sbb
lods
insb
mov
outsl
sbb
and
daa
mov
add
insb
mov
mov
aaa
mov
jne
loope
xchg
inc
mov
and
push
in
adcl
add
out
jns
xchg
cmp
xor
test
scas
cld
add
mov
aaa
clc
mov
pop
and
lods
insl
ret
sti
inc
outsb
xor
dec
inc
mov
cmp
and
and
add
mov
push
or
adc
add
jnp
inc
cmp
imul
cmp
or
mov
in
sbb
xor
adc
ffree
xchg
jp
iret
int3
cmpsb
popf
pop
outsb
jno,pn
xchg
pop
cmp
push
mov
cmc
lret
aad
xchg
cmpsl
sbb
test
push
in
inc
repnz
movsb
lahf
add
mov
cmp
push
pop
inc
test
shlb
jp
push
push
repz
mov
fstl
sub
push
mov
pop
jmp
sub
lcall
aad
add
out
into
add
out
out
aaa
test
fld
dec
push
movsl
mov
lahf
pop
sbb
scas
sbb
sbb
subb
add
inc
daa
mov
aam
mov
scas
adcl
add
fsubs
ret
movsb
in
add
jp
insb
push
or
push
scas
dec
stc
jns
xor
push
hlt
or
negb
stos
push
cmc
scas
loope
adc
push
cmp
mov
inc
xlat
testb
add
or
push
inc
push
sbb
xchg
sub
add
dec
scas
scas
fnstsw
mov
mov
push
mov
push
and
icebp
jge
test
mov
xchg
fcompl
xchg
loop
imul
loopne
ljmp
int
je
xchg
xor
fs
imul
lret
dec
fiaddl
or
les
subb
lea
pop
pop
or
pop
push
xchg
in
push
loopne
es
ret
xor
in
jns
icebp
mov
addr16
popf
mov
fimull
mov
aam
pop
pusha
xor
mov
mov
push
loopne
hlt
and
loop
out
cmp
imul
push
fs
pop
inc
inc
mov
xor
shrb
jno
sub
pushf
aas
sbb
push
and
shl
leave
cmp
imul
jecxz
jl
out
in
jecxz
lods
xchg
jge
add
add
xor
icebp
fcompl
nop
imul
repz
pop
xchg
into
mov
adc
sub
jae
mov
aaa
loop
xchg
outsb
mov
jle
sub
cmp
mov
jbe
sbb
cmp
gs
lret
inc
jo
inc
sub
inc
enter
xchg
jle
xor
sub
mov
xor
outsb
adc
sbb
mov
pop
leave
pop
les
cmpsb
xchg
and
aaa
push
push
stc
jg
and
mov
jecxz
bnd
enter
cmc
and
xchg
sbb
sbb
sub
shrb
xorb
es
mov
leave
pusha
in
mov
jae
xor
stc
hlt
imul
pushf
sbb
adc
insl
aaa
xor
movsl
in
arpl
push
push
xchg
stc
test
subb
loope
out
jnp
lret
aam
pop
jle
movsb
in
mov
es
iret
test
out
sbb
push
fcomp
inc
dec
mov
filds
pop
dec
lods
nop
or
sti
lcall
add
jb
hlt
fbstp
push
loopne
aas
int
sub
es
push
jl
inc
push
int3
cwtl
mov
jg
mov
mov
push
mov
out
lds
lahf
dec
scas
out
dec
push
divb
push
mov
nop
add
adc
sti
push
movsb
cmpsb
repz
pop
cs
out
ret
dec
add
jmp
mov
fcom
filds
rcr
lahf
pop
cmp
add
mov
ret
and
fstps
lods
lods
paddd
pushf
push
xchg
imul
sbb
mull
shll
add
mov
cmc
lods
mov
loopne
imul
cmc
dec
xchg
jp
cmpsl
outsb
aam
sbb
in
out
pop
pop
push
jmp
dec
pop
fists
dec
jne
sbb
dec
jmp
nop
push
jg
call
pop
fiaddl
push
xchg
ljmp
sub
push
xchg
pop
fcmovbe
inc
xchg
movsl
xor
aad
shll
mov
jecxz
arpl
pop
mov
clc
xor
adc
ds
stc
lahf
fisubrl
cmpxchg
jo
das
fsub
sub
pushf
push
rorb
adc
enter
movsb
or
sbb
fsubrl
imul
and
push
or
ret
call
mov
add
rol
pusha
out
gs
dec
mov
push
scas
decb
add
scas
push
dec
out
lods
dec
sub
add
loope
out
xchg
mov
xchg
inc
or
inc
sub
cli
mov
cmp
in
aam
ljmp
test
fsincos
cmc
ja
shlb
fs
mov
add
pushf
pop
or
stos
jno
add
dec
fldcw
mov
push
and
cmpsl
push
inc
lret
dec
aam
popf
in
and
rorl
cmp
add
push
lret
cmp
lea
sbb
fistpl
pushf
mov
pushf
jnp
mov
mov
mov
sbb
je
dec
add
loope
sbb
loopne
loop
jg
rorl
aas
and
xchg
pop
call
add
cld
cwtl
aam
iret
int3
in
bound
inc
mov
mov
dec
push
lret
lahf
push
cld
pop
or
sbb
jno
add
mov
test
lds
xor
mov
mov
add
cmpsl
jns
mov
lret
loope
fdivs
and
mov
roll
lret
div
iret
xor
dec
dec
xchg
rcll
or
mov
mov
mov
lcall
leave
test
inc
cmp
jg
mov
cmp
mulb
inc
pushf
dec
xchg
fwait
lret
dec
cwtl
inc
shlb
stos
sbb
scas
xor
push
mov
dec
into
aas
pop
or
dec
and
cmp
mov
pop
pop
sbb
ficompl
sub
addr16
pop
ficomps
fwait
test
lock
dec
lcall
fmulp
das
mov
mov
mov
pushf
sub
cli
jg
iret
movups
and
std
out
hlt
pop
cli
loop
jns
mov
xchg
and
shl
pop
add
out
ljmp
inc
jle
out
or
ss
lahf
xor
loopne
stos
inc
packsswb
lret
pushf
scas
cld
adc
mov
jne
je
sbb
lods
fucomi
cmp
in
jae
xchg
push
outsb
mov
pop
aad
aam
iret
sbb
stos
imul
pop
js
stos
ret
or
movsb
ficoms
and
adc
xor
xor
gs
dec
adc
lcall
aad
mov
push
lea
pop
xor
xorl
or
idivb
pop
pop
int3
loopne
in
cmp
jge
or
mov
sbb
adc
xchg
and
mov
inc
mov
ds
push
test
adc
dec
stos
andb
shrb
mov
cmpsl
sub
pop
push
into
add
cli
je
jle
mov
fdivs
add
movsb
imul
xchg
int3
outsl
mov
lret
mov
dec
je
or
jp
pop
and
les
inc
mov
popf
inc
movsb
jns
mov
add
sub
dec
out
push
std
js
jne
cmp
mov
pop
mov
cmp
adc
es
jb
xor
fwait
insb
loope
adc
in
gs
push
sti
add
push
cmc
and
loopne
outsl
sbb
adc
mov
adc
insb
push
in
jb
push
data16
xor
lock
xchg
inc
jl
mov
mov
sub
cli
test
pop
fldl
ss
pop
inc
pop
push
insb
jnp
in
push
sti
sbb
call
add
hlt
xchg
inc
imul
pusha
ficomps
mov
scas
ret
ret
jl
cld
push
dec
push
imul
lcall
int
in
inc
mov
call
adc
movsb
arpl
sub
lea
dec
outsb
cmpsb
and
les
notb
pop
push
pop
data16
mov
push
mov
fmull
pop
mov
enter
into
mov
xchg
fwait
stos
mov
jecxz
cmc
sub
ss
cmp
or
cmp
cmc
outsb
ss
xor
aaa
jp
adc
loopne
push
xchg
mov
pop
outsl
data16
dec
ret
jle
repz
std
push
into
cmpsb
ja
jmp
mov
adc
xchg
fwait
sub
shlb
outsl
fwait
push
and
mov
mov
sbb
lea
inc
mov
rol
lret
cmp
out
roll
mov
or
cmp
bound
push
xchg
loop
xchg
add
js
fstps
push
jl
neg
addr16
xlat
sbb
xchg
stc
fsin
cmp
dec
jmp
pop
add
mov
aam
pusha
pusha
popa
movsb
add
into
decl
inc
ljmp
ficoml
call
inc
mov
movsl
and
mov
enter
aad
dec
mov
add
ret
add
mov
shll
fcoms
mov
inc
or
xlat
popf
xchg
pand
ja
loopne
sbb
jle
sbbb
dec
repz
or
int
stos
dec
mov
out
mov
pop
cmp
add
int
adc
hlt
lea
fwait
lds
mov
orl
cmpl
sbb
fs
ret
cmpsl
or
cmc
in
mov
cmp
xchg
lahf
lea
call
jl
mov
mov
jb
outsb
jno
lock
mov
and
xor
and
pop
jns
loop
vpslld
lcall
js
jb
xchg
icebp
jns
inc
jge
movsb
shlb
dec
xor
mov
and
lcall
inc
repnz
cmp
fwait
xchg
ss
mov
in
ljmp
add
inc
inc
js
sahf
in
jne
imul
movsl
adc
and
adc
jno
and
jmp
mov
stc
pushl
sbb
inc
adc
outsb
sub
and
jmp
mov
adc
pop
pop
sub
int3
stos
pop
in
jmp
push
hlt
out
mov
adc
lock
mov
inc
shl
ds
pop
loope
outsb
push
loopne
ljmp
dec
stos
loop
mov
dec
stos
aaa
leave
out
dec
sbb
or
sbb
or
push
lock
data16
sarb
inc
aam
inc
mov
xchg
dec
nop
jo
push
popl
int
fildl
dec
cmp
pop
sbb
jae
popa
sahf
cmc
insl
bound
repz
test
push
inc
or
push
ret
xor
jbe
fldenv
xchg
mov
mov
add
add
pop
xchg
cmp
insl
rolb
inc
mov
out
std
lret
sub
mov
filds
rolb
jns
add
push
sbb
pop
inc
bound
jne
inc
fstpl
adc
loopne
pushf
xchg
js
mov
jp
mov
cmp
pop
jecxz
cmp
jne
mov
jg
push
les
push
jae
mov
jbe
mov
lock
das
jnp
xor
sbb
insl
cs
lds
sbb
push
jg
arpl
push
scas
sub
adc
lds
fiadds
xchg
xchg
jb
or
xchg
xor
jmp
inc
mov
popf
cmpsb
pop
push
xchg
lea
mov
dec
lds
push
jle
into
insb
and
and
in
push
fnstenv
adc
sbb
inc
rol
jecxz
es
push
inc
pop
psadbw
aaa
dec
sahf
mov
add
test
jae
pop
mov
ds
ljmp
mov
dec
nop
mov
mov
mov
add
pop
scas
xchg
mov
mov
faddl
dec
pop
je
out
into
roll
mov
adc
jns
jge
lret
ret
fldenv
jg
xchg
mov
pushl
in
cwtl
jge
and
sub
pop
push
cli
xchg
sbb
push
pmaxsw
leave
aad
bound
cmp
push
data16
movsb
fdivs
mov
lea
insb
out
in
mov
jmp
cld
xlat
cmp
out
lods
pop
or
mov
ffree
fs
dec
push
jae
icebp
lock
xchg
lods
out
xor
outsb
js
pop
stc
sub
fcmovb
lret
mov
inc
inc
jno
shrl
adc
out
push
pushf
pop
mov
pop
push
xchg
data16
xor
arpl
adcl
mov
es
push
sub
outsb
sbb
pop
xor
push
out
push
jns
sub
in
lcall
jo
inc
adc
sbb
mov
sarl
mov
int
xchg
loope
outsb
shll
mov
cltd
cwtl
test
xchg
scas
xchg
add
test
xor
data16
jbe
call
out
sbb
xchg
mov
mov
scas
xchg
push
xor
dec
ror
mov
dec
inc
and
shld
lds
aad
pop
jno
insb
sub
jge
pop
cmp
aam
repz
dec
sbb
dec
add
mov
dec
jne
ljmp
dec
mov
daa
pop
outsl
out
xor
inc
sbb
ret
lret
jg
pop
sbb
in
aad
and
xchg
jmp
pop
xor
es
mov
ret
lcall
shlb
xchg
bound
movsl
push
in
clc
add
les
xchg
sbb
lret
cmp
std
mov
out
popf
ss
dec
orl
ficomps
push
icebp
jo
add
push
fwait
out
pop
add
imul
push
rolb
std
add
or
lds
mov
add
mov
jl
jb
and
rcrl
xor
aaa
sub
mov
mov
ss
fwait
bound
repnz
repnz
in
push
mov
sti
dec
inc
sbb
adc
cltd
out
xor
and
dec
insl
mov
xor
mov
adc
sub
out
loopne
push
loopne
sbb
int3
enter
lds
sbb
add
jne
repnz
xchg
sub
jp
inc
push
pop
repz
add
jns
lea
xor
popa
dec
xchg
add
shl
pop
sbb
push
adc
mov
inc
repz
jp
call
jb
movsl
push
outsl
frstor
mov
dec
roll
dec
dec
fisubrs
aam
cltd
shl
and
fistl
inc
arpl
cmp
mov
in
inc
shl
inc
adc
test
sub
xor
popa
sahf
adc
mov
pop
dec
adc
ja
divl
cmpsl
or
dec
enter
dec
ss
xchg
daa
dec
popf
xor
cmp
fistpl
imul
lods
test
pop
out
add
out
cmp
out
xchg
fwait
sbb
in
bnd
cmp
xor
jle
sub
sub
mov
or
mov
mov
sbbb
mov
or
ja
inc
inc
cmp
mov
pop
in
mov
xor
int3
leave
call
inc
inc
adc
es
stc
xchg
mov
movsb
cwtl
inc
out
lahf
aaa
add
lret
out
mov
xchg
jnp
ret
mov
mov
push
sbb
xchg
and
jnp
jae
dec
push
jnp
outsl
mov
arpl
lcall
loop
fsubrs
lcall
or
push
push
inc
fwait
mov
mov
add
jno
xchg
mov
jno
mov
xchg
mov
stos
arpl
mov
mov
xor
add
popa
jl
jno
dec
mov
mov
jb
les
cmp
imul
in
in
jl
mov
ljmp
jg
andb
push
mov
xchg
sub
jge
das
jge
push
jl
adc
test
mov
loopne
mov
popa
pop
lods
mov
sub
jmp
rcrb
or
rcl
or
mov
push
add
in
push
or
dec
push
mov
loopne
and
adc
enter
and
pop
pop
cmp
and
or
test
xor
mov
cmp
lret
hlt
jo
int3
cltd
sbb
icebp
mov
fs
popf
arpl
sbb
and
fdivr
jle
out
mov
sbb
in
outsb
insb
xchg
mov
cmp
pusha
je
and
cld
cmpsl
xor
ljmp
test
jns
aad
lea
dec
pop
scas
dec
ret
mov
inc
dec
jmp
fs
fildl
test
sub
loopne
int
push
cmp
mov
scas
mov
mov
das
adc
hlt
xchg
mov
xchg
subb
jp
or
mov
mov
flds
jbe
sub
cld
lcall
mov
mov
push
pop
out
inc
insb
shll
mov
cs
mov
bound
fistps
cmp
insl
mov
jns
cmp
mov
pslld
jecxz
cmp
call
insb
lea
out
bound
ja
fcmovu
mov
sub
dec
mov
rolb
negb
mov
push
mov
xorb
and
adc
push
ss
rorb
mov
jnp
add
jp
push
sbb
in
dec
mov
fstps
push
or
lock
stos
mov
jae
in
sbb
xor
adc
push
mov
jae
test
cmp
push
and
lds
pop
int3
jno
mov
imul
movsl
cmc
xor
push
stc
mov
push
add
clc
xchg
out
and
cmp
data16
shl
addl
scas
sub
inc
add
fwait
popa
mov
andb
mov
stos
shrb
xchg
orb
fists
je
aas
int
pop
loopne
xor
mov
add
cli
mov
adc
ds
cwtl
ljmp
xchg
popf
hlt
pop
loope
je
pop
repnz
test
and
ficoml
xor
add
inc
test
cmp
xor
outsl
push
sub
inc
and
pop
das
jo
es
in
and
cmp
mov
insb
jg
lahf
lds
jmp
fistpll
adc
pop
addr16
push
fs
hlt
loopne
aam
addr16
sub
loope
lock
sbbb
cmp
ret
fwait
std
jo
movl
sti
xor
add
add
shrl
lea
in
lods
dec
xor
mov
sbb
ret
cmp
rol
icebp
scas
xor
ror
mov
adc
mov
add
mov
xchg
jno
pusha
or
in
rorb
add
lods
add
add
mov
jmp
outsl
jnp
loopne
pop
push
xchg
repnz
cmc
das
popf
lds
shlb
cmp
adc
push
imul
inc
gs
mov
adc
ja
xor
loopne
cmp
shll
mov
adc
scas
adc
push
dec
and
mov
rcrb
sbb
and
xchg
sti
jbe
mov
inc
std
mov
fsubrs
je
and
lahf
add
sbb
inc
push
xchg
mov
pop
dec
outsb
or
jnp
cmp
xchg
pop
lahf
mov
jecxz
ljmp
leave
test
int
push
jns
sahf
dec
and
sub
mov
ljmp
stc
push
mov
push
xor
mov
push
sub
lods
stos
stos
push
imul
bswap
sub
jnp
arpl
jo
aad
sub
scas
imul
sub
scas
push
fisubl
inc
lret
push
shrb
ret
push
loopne
addr16
ficoms
add
xchg
test
hlt
repz
aaa
inc
into
test
push
pop
arpl
cmp
subb
pmulhuw
pop
adc
push
stos
aam
sub
fwait
xor
leave
jno
lret
xor
dec
aad
mov
push
lods
cmp
push
xchg
ja
pop
mov
lds
or
stos
xchg
and
ss
pop
loope
push
jge,pn
xchg
sahf
jns
scas
adc
jge
loope
shll
out
inc
adc
ftst
jecxz
shlb
repz
aas
or
add
fstl
jge
imul
shrl
outsb
rorl
popf
test
dec
inc
shlb
out
push
inc
imul
jle
fidivl
in
cmp
sbb
lds
ret
push
sbb
pop
cmpsl
push
lcall
sub
mov
xchg
mov
pushf
out
add
jo
and
inc
int3
inc
adc
pop
push
neg
lods
sar
xchg
xchg
in
cwtl
cmp
sub
push
mov
lods
xchg
rcrb
sub
or
cli
xchg
mov
add
jb
das
scas
dec
enter
ljmp
pop
cwtl
roll
xchg
mov
dec
icebp
mov
hlt
xchg
dec
sub
scas
adc
fldl2e
or
adc
mov
push
sub
shr
mov
fisttps
rcll
pusha
sbb
fs
xchg
mov
daa
and
lret
pop
out
lods
sbb
shrb
sbb
and
dec
adc
hlt
mov
mov
jno
mov
add
popa
jle
inc
push
call
in
xchg
vpcmpb
push
iret
sbb
call
xchg
fcmovnb
aaa
adc
cld
mov
pop
jne
jns
or
cmp
add
xor
imul
sbb
pop
jnp
movsb
call
sbb
cmp
ret
jge
dec
inc
adc
or
cmp
xor
decl
push
push
mov
leave
fbstp
xor
test
in
cmpsb
mov
cmp
inc
and
negl
out
iret
pusha
ja
mov
adc
mov
ljmp
loop
push
or
scas
es
leave
outsb
push
pop
shl
xchg
dec
adc
xchg
or
dec
mov
enter
lahf
scas
pushf
rcrb
inc
es
in
in
mov
int
adcb
mov
adc
inc
push
test
and
xchg
out
jle
ret
jg
jge
ret
loope
outsl
xor
jmp
mov
mov
mov
or
stos
cmpb
xlat
adc
push
mov
lret
push
mov
jmp
adc
stos
xlat
rcll
xor
and
fwait
mov
sbb
mov
dec
in
inc
ja
cld
in
or
testl
xchg
daa
mov
mov
inc
out
gs
and
fcoml
cmp
loopne
int3
lret
dec
jo
fcmovu
in
xchg
call
add
pop
xor
lret
xor
cmc
adc
mov
lahf
push
push
out
cmpsl
or
rcl
pusha
and
rclb
ds
pop
mov
push
push
pop
dec
mov
or
lea
into
dec
cmpsb
ds
xor
sbb
out
fistl
jecxz
iret
bound
sarb
cli
add
mov
jle
ss
les
ljmp
out
fs
inc
lods
lock
or
divl
sub
inc
dec
insl
xlat
loope
xchg
sbb
mov
int
adc
add
imul
cmp
leave
hlt
xchg
mov
push
mov
ret
push
lret
nop
xchg
jns
xchg
push
insl
cmp
aam
nop
inc
or
dec
mov
xchg
jl
daa
push
cs
dec
insl
jmp
push
test
jecxz
mov
cmp
fdivs
inc
pinsrw
mov
sub
add
and
gs
dec
inc
mov
or
push
jae
in
loop
add
push
pop
push
add
rcrb
xchg
inc
mov
and
and
mov
xor
dec
loope
add
mov
cmpsl
arpl
cs
adc
iret
leave
push
sub
test
js
xchg
mov
shlb
out
xchg
int
jecxz
test
cmc
adc
push
addr16
dec
scas
xchg
xor
repnz
dec
mov
inc
push
pop
loopne
jbe
fcompl
decl
lds
sbb
out
sbb
mov
push
in
shll
out
jne
ljmp
lds
adc
jmp
xchg
xchg
jle
imul
pop
xchg
jle
push
rclb
ret
dec
mov
sbb
insb
pop
lcall
dec
cmpsl
imul
leave
mov
jg
loope
outsb
adc
loopne
xor
fdiv
andl
in
xor
push
dec
lahf
cmp
sbb
js
addr16
mov
xchg
arpl
les
aaa
pop
lret
cli
or
mov
mov
pushf
dec
testl
enter
fiadds
pop
push
sub
gs
aaa
outsb
xor
jge
adc
sub
pop
clc
std
fstl
adc
push
jle
outsl
aad
xlat
sahf
fst
daa
das
mov
bound
mov
shll
pop
call
and
movsl
lret
inc
sub
repz
mov
out
ds
jge
rorl
loopne
inc
inc
jo
das
sahf
jmp
repz
xor
repnz
dec
and
iret
sub
xor
mov
loopne
mov
xchg
das
lods
call
rcrb
fistpll
cmp
js
xor
es
mov
dec
sbb
cmpl
sub
push
pop
push
jno
hlt
cmp
add
test
scas
rclb
pop
xor
rcll
daa
ret
pushf
cmp
jge
pop
push
mov
add
ret
push
mov
clc
adc
orb
shlb
int
in
and
pop
or
mov
xorb
sub
dec
outsl
leave
inc
in
orl
cmc
ljmp
or
fistpl
mov
cld
testl
cmpsl
mov
xor
mov
sbb
and
jge
or
stos
in
mov
stc
mov
jae
lods
add
dec
or
push
cmp
pop
sbb
rclb
scas
adc
cmp
mov
scas
jnp
mov
fisttps
pop
popa
pop
arpl
or
lea
enter
scas
lret
adc
int3
or
jns
mov
lds
and
sub
mov
xor
adc
aam
pop
sbb
xrelease
xor
xchg
outsb
daa
pusha
pop
or
fidivrl
sarl
shrb
push
stc
xor
adc
mov
or
out
imul
aam
pop
lods
cmc
inc
in
push
lahf
bound
mov
push
and
xor
roll
pop
ret
leave
out
scas
scas
pop
push
or
test
mov
mov
ss
dec
dec
and
mov
fiaddl
add
pop
jl
test
add
adc
shrl
out
lea
mov
dec
push
mov
jno
push
repnz
add
cmp
push
xchg
test
push
in
rcll
xorb
pushf
loopne
mov
test
push
cmp
test
pop
cltd
ret
sbb
dec
js
add
dec
data16
aaa
popf
push
mov
int
mov
jno
sub
mov
js
out
push
jl
std
clc
pop
sub
or
nop
ror
push
jns
test
in
mov
in
xor
test
jg
add
cmp
and
mov
mov
mov
fwait
mov
pop
lret
gs
sub
sarb
adc
mov
pop
addr16
lds
cli
les
cs
inc
cli
icebp
movsb
cmc
mov
or
in
sbb
outsb
pop
or
fdivp
dec
dec
cmp
mov
xchg
loopne
cmp
clc
call
xchg
outsb
lods
jnp
cmc
cld
jne
aam
arpl
mull
mov
daa
adc
clc
cmp
in
mov
fs
int
fdivrp
jb
jl
out
insb
insb
mov
mov
rcr
stos
call
ja
pop
jge
aaa
cli
and
xchg
mov
add
ljmp
nop
cmp
add
sbb
or
xchg
sub
out
cmp
xor
mov
nop
cmp
cmp
js
lcall
call
lea
mov
js
imull
dec
js
sbb
sub
push
push
jmp
fcompl
shlb
loopne
sub
add
iret
jmp
push
pop
inc
pop
fwait
jo
xchg
cmc
scas
rcll
int3
xlat
sub
sbb
fldl
jne
inc
pop
adc
mov
xchg
mull
push
dec
adc
fmul
js
rcrl
test
jge
out
lret
cwtl
push
test
mov
mov
xor
cmpsl
cmp
mov
insl
imul
cwtl
sbb
loop
out
mov
jo
sbb
mov
mov
in
adcb
sbb
sub
ret
mov
imul
clc
pop
je
movsl
sbb
ficoml
aad
lds
push
adc
mov
nop
xchg
and
xchg
loopne
jo
dec
fldl
cld
jg
shr
pusha
ds
inc
notb
jne
stc
mov
mov
sbb
test
pusha
lds
mov
mov
loope
rclb
cmpsl
pop
adc
test
or
ret
sub
test
test
addb
mov
jnp
jle
in
and
icebp
and
and
mov
inc
jge
dec
and
cmp
fnstsw
add
fwait
dec
sub
adc
popf
nop
ficompl
push
cmp
psubusw
loop
ljmp
xchg
sub
dec
and
inc
and
lods
jno
fldcw
outsl
and
nop
or
jb
jmp
jo
aad
iret
adc
adc
mov
pop
sub
pusha
js
fildll
jl
arpl
inc
pusha
sub
mov
movsb
push
adc
in
enter
pop
push
cmp
mov
movsl
mov
into
test
mov
cmpsb
fcmovnb
sbb
jmp
mov
fisubl
mov
cmp
mov
cmpb
and
enter
lret
mov
sbb
jmp
insl
or
ret
arpl
xchg
jg
sbbb
lret
push
xlat
cmp
leave
ss
jmp
nop
sahf
push
add
repnz
into
fnstcw
cmpsl
icebp
int3
mov
adc
sahf
ret
ss
and
outsb
fisttpll
xor
and
in
fwait
mov
pop
xor
test
inc
std
mov
cmc
cmc
aam
repnz
in
adc
xor
or
xchg
ret
inc
fsubrl
lret
pushw
int3
jg
mov
xor
sbb
mov
add
and
enter
push
mov
shrl
and
or
cli
aas
leave
ret
add
pop
popf
jno
in
cmc
inc
fmulp
jmp
out
inc
int
shlb
cli
pop
aas
orl
add
mov
and
std
sbb
sub
xlat
sbb
jge
imul
push
cmpb
or
inc
mov
jnp
push
push
sbb
ror
rcrl
pop
aas
cltd
sub
nop
pop
outsb
or
jle
mov
xchg
lcall
push
inc
dec
mov
test
aam
and
mov
lea
in
rclb
lds
inc
jns
stos
movsl
cmp
mov
enter
cld
lea
js
sub
push
jmpw
rorb
inc
mov
cmpsb
jl
fistps
xor
push
xchg
xlat
cli
mov
xchg
pop
pop
push
or
jbe
cwtl
lahf
int
int3
jmp
pop
add
cmp
mov
jp
push
cltd
xchg
sub
aas
lock
and
dec
scas
daa
clc
inc
dec
imul
mov
and
xorl
sbb
push
ljmp
jg
adc
cmp
daa
push
dec
or
call
or
mov
js
xor
mov
mov
roll
xor
pop
and
sub
xor
add
adc
imul
je
pop
dec
sub
mov
mov
js
fmuls
push
call
jae
sbb
popf
int
xchg
pop
adc
lea
push
cwtl
movsb
and
sbb
adc
test
adc
xlat
iret
loop
sub
or
les
push
out
cmp
jae
sahf
sbb
in
stos
mov
scas
fcomps
dec
or
cli
int3
mov
mov
shrb
jb
ret
lea
lea
stos
mov
ret
das
and
add
xchg
jle
inc
mov
iret
pusha
add
int
bound
or
dec
loopne
lods
scas
or
mov
jne
scas
lods
mov
add
sbbl
xchg
adc
cmp
test
add
and
out
xor
jo
mov
movsb
loope
leave
xchg
jbe
sti
sub
jo
insl
ret
lcall
push
insb
shrl
adc
scas
or
cmpsl
cli
lds
es
sub
mov
repnz
mov
add
xchg
orl
test
outsb
or
cmpsb
and
mov
ds
popf
xlat
pop
jle
xchg
jo
mov
add
sahf
cld
movsl
and
or
jmp
push
jns
mov
push
and
xchg
or
push
push
icebp
popf
sub
outsb
aam
neg
push
push
and
lahf
shrb
jbe
dec
repz
ja
mov
mov
mov
push
int3
ss
xlat
rorb
xchg
sub
jg
jbe
add
sti
std
jl
stos
push
mov
xor
xchg
add
mov
in
lahf
pop
out
jne
aaa
js
inc
cli
mov
mov
sbb
inc
addr16
mov
lret
adc
push
and
sub
push
lock
stc
out
shlb
insl
sub
out
loopne
and
int
neg
cmpsl
pop
ds
addr16
pop
xor
adcl
jmp
mov
mov
mov
call
sti
mov
fildll
sbb
jmp
jle
fstl
dec
sbb
xor
fmull
dec
les
pop
leave
jne
cmp
push
or
cmp
push
push
mov
sub
and
jg
pop
sti
fldz
cmp
xchg
sub
cmp
and
rcl
pop
incl
aas
popa
pop
sub
ljmp
bound
out
shll
sti
lock
adc
mov
in
xor
xor
xchg
jae
cmp
sahf
test
andl
fwait
sbb
mov
sbb
pop
pop
scas
push
sub
mov
mov
xchg
movsb
add
sub
dec
adc
test
cmp
adc
push
mov
inc
add
out
dec
push
jnp
or
adc
pop
ds
mov
out
ljmp
and
fwait
adc
adc
fwait
jge
loope
jbe,pt
sbb
repnz
dec
sarb
clc
dec
scas
lret
dec
test
inc
sarb
xchg
cmp
into
int3
lods
sub
gs
or
insb
xlat
dec
sub
in
test
lds
enter
add
int
xor
mov
and
mov
sbb
mov
dec
rolb
test
adc
rolb
in
mov
sub
xor
or
aaa
cli
push
push
lcall
xor
mov
mov
or
sar
arpl
test
dec
fiadds
out
pusha
fldenv
mov
sbb
jge
leave
ret
test
shll
leave
pop
aam
push
add
lret
test
xchg
lret
bound
pushf
xor
push
in
push
and
popa
or
mov
push
ror
sti
cmp
and
xchg
push
fwait
inc
loopne
jp
imul
nop
fs
xchg
clc
ds
leave
jbe
jno
mov
mov
lahf
jp
fcmovbe
mov
push
push
ret
cli
jl
jnp
lcall
gs
add
sbb
xchg
cmp
sbb
mov
ret
push
dec
lahf
fcoml
push
jb
cmp
jb
testb
sar
push
sahf
daa
push
mov
stos
lret
or
aaa
out
mov
pop
daa
cmpsl
xor
ret
jae
out
adc
cmpsb
push
jmp
sbb
fiadds
xor
mov
adc
inc
popf
stos
xchg
addr16
mov
call
faddl
push
or
adc
lods
adc
lds
out
jp
sbb
icebp
push
mov
sub
and
lock
jmp
int
mov
shr
jl
mov
mov
mov
insl
xor
mov
cmp
fs
add
dec
inc
mov
cli
fistl
enter
fs
inc
es
inc
movb
in
cmpsl
push
ret
rcrl
mov
rcll
aam
jecxz
arpl
in
mov
mov
pop
pusha
iret
push
aam
pop
scas
cmp
and
xor
mov
cmp
mov
cmpsl
shr
mov
sarl
ja
pop
push
cwtl
fldenv
mov
dec
lahf
div
pop
inc
cmp
bound
and
dec
push
or
stos
icebp
rorl
dec
lea
shll
jno
ffree
es
fldl
out
cs
sub
add
xchg
mov
jl
xlat
xchg
mov
je
jp
dec
lahf
mov
push
sub
cmp
adc
cmc
cmpsl
or
and
fldt
in
repz
and
mov
int
mov
or
cwtl
sub
bound
negb
push
push
and
roll
fcmovnu
in
jne
push
ficoml
inc
int
push
ss
adc
movsb
sub
out
jmp
dec
mov
jmp
ret
mov
nop
ja
cmp
pop
rcl
xor
inc
or
idivl
and
add
add
lds
dec
and
inc
leave
into
xchg
xor
insb
sbb
or
mov
aam
sub
dec
add
cli
cmp
push
movsb
dec
mov
stc
popa
shlb
jp
and
mov
and
fwait
movsl
out
clc
inc
popf
adc
push
xchg
cmpsb
xchg
and
aam
inc
pop
sbb
and
push
xchg
push
shl
out
dec
cltd
add
rcrl
xor
inc
ret
and
enter
sti
jb
push
sub
testl
nop
sahf
xor
leave
pop
movsl
dec
and
ja
nop
add
sti
inc
mov
add
cmp
xchg
fstp
mov
cmp
mov
mov
in
adc
cmp
scas
lea
pop
lcall
pop
shll
lahf
pop
stc
ljmp
shrb
or
jnp
pop
pop
mov
sti
pop
aas
cld
into
lds
imul
je
sub
sbb
sub
lret
mov
inc
adcb
and
iret
aas
mov
lret
and
dec
lods
mov
fwait
add
dec
xchg
jno
jo
jno
push
cmp
in
xchg
or
dec
imul
stos
jb
lea
mov
mov
pop
cmpsb
sbb
mov
mov
sti
in
push
pop
stos
stos
fistl
lods
repnz
shlb
aaa
out
adc
mov
push
lret
adc
lret
inc
movsb
and
push
mov
arpl
push
pop
dec
adc
sahf
mov
js
decb
in
mov
scas
js
test
jae
cmp
int3
xchg
add
stc
sub
sbb
fmull
mov
fstpt
sahf
ja
mov
mov
lds
outsb
xor
push
inc
inc
pop
jno
in
jne
push
test
in
xchg
pop
dec
jnp
fisubs
xchg
mov
fcompl
subb
jo
out
scas
xchg
cmpsb
jb
imul
or
dec
mov
inc
pop
andl
xchg
cli
adc
ret
icebp
in
dec
and
xor
aad
dec
dec
mov
xchg
sbbl
push
push
push
js
fs
inc
arpl
leave
or
and
and
sbb
jmp
out
pop
sbb
mov
sub
pushl
cmp
inc
inc
adc
loopne
sbbl
pop
das
daa
ss
mov
mov
or
fdivp
fnstcw
and
mov
mov
repnz
sarb
cmc
cmp
pop
out
hlt
sbb
pop
fildl
inc
das
cmpsb
lcall
push
insb
pop
push
jle
test
xchg
sbb
adc
arpl
adc
pop
inc
xchg
xor
pusha
xchg
bnd
adc
cmpsl
cli
sahf
sahf
push
cs
add
mov
insb
dec
push
out
mov
in
inc
sarb
dec
jecxz
inc
out
icebp
stos
pop
xchg
mov
xchg
jecxz
inc
rorl
mov
int
or
pop
adc
das
jp
es
addr16
mov
cmpsb
flds
xchg
push
cwtl
or
sbb
mov
cli
pop
out
mov
ret
xor
or
fs
sub
add
shlb
iret
jecxz
inc
jns
sub
rcrl
mov
movsb
mov
decb
sub
push
and
xchg
jp
sbb
jno
push
cld
push
pop
aam
inc
or
sub
cmc
mov
pop
dec
out
jae
subb
inc
cmpsl
lea
sub
inc
test
cltd
popf
inc
fwait
ja
hlt
mov
fstpt
ds
mov
fstpt
dec
inc
inc
insl
jge
outsb
sarb
pop
cmp
lea
rorb
mov
lods
mov
loop
pop
and
ds
and
jbe
pop
sbb
lods
lret
arpl
mov
aad
mov
repz
test
pop
cmp
enter
mov
xorl
jb
or
adc
stos
mov
lock
mov
mov
mov
cmp
es
and
mov
jb
or
cmp
out
jnp
outsl
out
das
mov
dec
into
ss
fnsave
lahf
movsb
daa
std
fisttpl
je
xchg
in
pusha
pop
dec
xor
in
jle
mov
add
rcrl
inc
push
mov
sbb
filds
out
dec
cmp
ficoms
jo
aam
push
and
popa
add
add
adc
in
or
mov
and
repz
jne
test
dec
mov
xor
repz
jle
out
adc
mov
inc
inc
mov
rorb
adc
jns
in
dec
lahf
pop
and
into
cmp
pop
lods
lcall
test
fadd
aad
je
sbb
rcrb
push
ficompl
lret
lret
dec
sarl
sbb
xor
mov
sahf
mull
nop
fs
idivl
addb
or
dec
jne
sbb
jp
or
sbb
out
arpl
push
in
lcall
jmp
xor
fst
push
or
jae
sub
jl
sarl
lcall
clc
ja
outsl
xlat
jns
dec
fmull
mov
mov
lock
loopne
push
lret
jp
push
mov
fldl
fdivrs
and
mov
mov
cmpsb
push
add
or
jne
jbe
lret
je
das
scas
andb
inc
ret
fwait
test
mov
pushf
shlb
sub
ret
jbe
repz
jno
xorb
and
mov
out
lret
lret
jo
inc
push
popa
stos
sbb
stos
jl
push
xchg
scas
push
cmp
pop
sub
dec
mov
cld
ror
les
and
icebp
or
inc
sahf
insb
repnz
push
xchg
or
mov
inc
lret
xor
mov
lret
outsb
repnz
cld
fwait
dec
gs
push
mov
fisttps
sub
adc
mov
adc
out
cmp
leave
and
in
push
lret
cmpsb
mov
test
mov
mov
and
jno
jo,pt
daa
testb
xchg
jae
sahf
aaa
xchg
add
dec
or
pop
mov
mov
insb
lods
push
pushf
ljmp
sbb
cltd
xchg
jns
cmp
cmc
mov
push
pop
jbe
rcrl
je
jle
imul
mov
push
mov
out
xor
xchg
dec
sti
push
je
test
divl
rcl
jae
xchg
push
push
inc
dec
mov
icebp
mov
int3
adcl
js
lahf
movsl
jb
or
aad
outsl
sbbb
movsl
push
rol
fwait
push
dec
or
cmp
xchg
xor
aad
or
ds
mov
aam
into
pop
pop
push
movsl
push
dec
andl
imul
jl
movsb
and
inc
xchg
sub
jmp
or
test
rorb
lods
test
hlt
leave
ljmp
push
mov
pop
push
adcl
inc
lea
out
add
push
xor
test
out
push
jle
mov
mov
add
mov
xchg
add
shlb
inc
mov
xchg
sub
pop
data16
fsubrl
cwtl
insb
pop
ja
imull
les
jns
ja
push
repz
pop
xchg
pop
std
fwait
inc
lock
fisubrl
sub
xchg
adc
leave
in
lods
sbb
pop
cmp
jg
push
push
jl
js
cmp
js
xchg
out
inc
in
xchg
cs
mov
xchg
sbb
repnz
inc
push
mov
lret
ja
mov
inc
xchg
mov
inc
or
add
outsl
ja
or
test
leave
lcall
adc
xchg
bound
repnz
insb
ret
loop
dec
lock
in
sti
in
stos
mov
push
rclb
add
call
xor
mov
dec
jns
cli
outsb
lods
mov
xor
or
pop
cmpl
das
ss
or
pop
mov
movsb
daa
dec
pop
aas
xchg
hlt
xor
jno
jge
lea
xor
ja
mov
pop
jb
test
cmc
jno
ss
or
sbb
sbb
xor
mov
test
test
bnd
aas
jmp
aad
enter
mov
pop
les
or
dec
insl
outsl
sarl
xor
mov
aad
and
iret
loope
lods
mov
jle
notl
push
mov
dec
sbb
lret
imul
adc
repz
mov
xor
add
pusha
push
or
addr16
lret
test
xor
setp
dec
sbb
or
movsl
dec
lea
loop
and
jl
cmc
fsubs
sbb
scas
adc
decl
subb
in
inc
int3
mov
xor
sub
adc
jns
ljmp
add
push
stc
or
or
gs
int3
rolb
in
xor
fimuls
das
xchg
mov
iret
sbb
push
push
fcom
push
aam
dec
out
sbb
xchg
cltd
aad
xor
add
xor
mov
mov
push
adc
xor
jp
mov
jecxz
rcrl
dec
cmp
push
inc
cmp
xor
push
loopne
cmp
jge
cmp
sbb
movsb
adc
rcrb
and
jecxz
popa
push
sarb
xor
push
les
sub
cli
test
inc
lret
mov
cmp
stc
aad
call
lret
mov
std
and
les
aaa
fnstenv
sbb
push
arpl
mov
cmp
cmpsl
jb
xor
aas
jmp
loop
ret
push
push
iret
sub
or
addr16
jge
cmpsl
adc
push
sub
imul
sub
daa
cmpsl
loop
xchg
push
mov
sub
jne
call
mov
out
or
mov
jle
fdiv
mov
int3
pusha
lret
sbb
xor
cld
fisubs
adc
cmc
xlat
and
clc
mov
add
pop
outsl
imul
mov
adc
stos
xchg
insb
jmp
add
fstl
xchg
shlb
xchg
psubd
movsl
jno
cmpl
dec
cwtl
fs
mov
xchg
int
adc
adc
push
icebp
sbb
inc
daa
xchg
dec
scas
adc
and
ret
cmp
jnp
scas
aas
adc
mov
imul
adc
inc
fcoml
jo
push
or
mulb
mov
loopne
repz
fcoml
sti
insl
xor
test
mov
inc
lret
loopne
cltd
fnsave
push
jmp
out
cmp
cltd
add
ss
jg
add
xchg
mov
inc
cli
stos
stc
aam
xlat
js
testb
inc
idivb
rorl
xor
lds
es
test
sbb
iret
test
or
fwait
lea
rcr
aad
fsts
push
hlt
pushf
xor
stc
and
and
outsb
adc
data16
jmp
movsb
pushf
aas
adc
xchg
outsb
add
in
fisttps
pop
imul
daa
pushf
sub
cmc
lea
jle
sbb
jecxz
xor
push
fdivs
mov
sub
outsl
push
vpshufhw
add
rorl
mov
inc
sub
or
adc
cmpsl
addr16
push
sub
xchg
fimull
xchg
data16
lea
sub
nop
lcall
push
and
fistl
iret
sbb
or
sub
inc
adc
mov
repnz
jbe
mov
sub
push
lods
popa
outsl
and
in
push
and
call
and
inc
pop
pushf
mov
push
test
cmpsb
dec
les
into
sub
iret
outsl
mov
jge
xlat
xchg
or
xchg
xchg
inc
cld
ror
lahf
jge
push
dec
inc
mov
mov
xchg
inc
jb
jo
adc
mov
push
push
int
or
lret
fisubs
jo
adc
ss
leave
in
jge
mov
fdivr
addr16
dec
or
mov
sub
mov
sub
dec
or
add
mov
test
sarl
js
aam
mov
sbb
jne
in
pusha
push
cltd
jg
mov
xchg
mov
and
cmpsl
cmp
lcall
push
xlat
cltd
pslld
leave
cli
cmp
decl
addl
pop
cwtl
push
out
arpl
andb
int
dec
xor
ret
dec
addl
sub
cmp
repz
push
push
mov
mov
shlb
movsb
jne
mov
fdivrl
scas
movsl
fcoms
inc
and
sub
es
out
push
in
dec
adc
adc
mov
xchg
push
mov
jge
pop
fdivs
out
cmp
adc
hlt
inc
cmp
cli
cld
testl
xor
jae
mov
into
dec
xor
push
mov
adc
dec
fs
lahf
fstpt
imul
sbb
outsb
xor
out
inc
dec
out
xchg
inc
ret
mov
mov
or
dec
dec
loopne
ficoml
xor
clc
pop
inc
xlat
add
in
mov
out
mov
ljmp
mov
mov
adc
cmp
xlat
push
in
int
xchg
push
adc
insb
pop
dec
and
shl
mov
mov
cmp
xchg
cltd
jle
inc
sub
rorb
mov
or
subl
fwait
cmp
push
or
mov
or
movsb
push
sbb
add
push
jne
add
push
pop
jmp
add
adc
outsb
test
and
cmc
push
in
jbe
mov
push
and
outsl
sub
cli
daa
repz
daa
fcomps
jns
cmp
daa
sub
test
in
mov
mov
stos
hlt
ret
push
adc
inc
or
sbbb
cmp
loopne
insb
movsb
sarl
jmp
test
fbstp
pop
dec
pop
inc
mov
cmp
outsl
mov
mov
in
and
sbb
push
in
sbb
push
aad
pushf
dec
bound
rcrl
loop
inc
out
push
or
aaa
push
sub
pop
test
sbb
call
insb
push
loope
add
lahf
fstpt
jp
decb
pop
lcall
cltd
es
xchg
sub
dec
movsb
jl
arpl
pop
les
jl
sbb
or
loop
lret
or
xor
aam
repnz
sbb
in
test
sbb
push
fwait
aam
pop
into
sub
add
mov
jnp
xor
stc
stos
and
xlat
sub
fmuls
pop
jo
and
fwait
lock
stos
fsubs
adc
jb
mov
iret
inc
rcll
loop
lret
call
nop
stos
inc
xor
mov
inc
push
rcll
inc
std
push
cmp
jmp
and
cmp
xor
and
cmp
xor
shrl
push
inc
icebp
popf
pushf
leave
mov
test
jg
add
dec
or
add
jg
ret
xchg
xchg
scas
sbb
arpl
hlt
pop
cld
nop
sahf
aam
mov
stos
call
mov
cmp
mov
mov
push
aas
xchg
pop
and
pop
add
fidivrs
les
fcomp
idivl
adc
cmpsl
idiv
cli
insb
bound
and
loopne
push
dec
test
ds
sub
and
jne
ds
mov
mov
popa
push
sti
adc
mov
popf
cltd
mov
cmp
inc
cmp
jns
xor
repnz
mov
std
cmp
push
cmp
mov
aaa
sub
cli
shlb
and
shr
sbb
aaa
xchg
cmp
push
hlt
jnp
pop
mov
out
cmp
icebp
mov
shll
enter
sahf
jb
pushf
or
out
cwtl
push
ss
je
mov
dec
insl
ljmp
adc
dec
int
adc
fsub
enter
mov
sub
and
nop
inc
gs
jmp
out
push
jecxz
lods
mov
mov
and
pop
or
push
int3
in
int3
or
add
int
jns
mov
cmp
or
jle
jge
or
push
jl
pop
pop
adc
lea
and
mov
push
dec
outsl
enter
in
pop
xor
add
mov
mov
ds
sbb
out
fsubs
or
adc
lods
notrack
daa
xchg
filds
and
inc
movsl
or
and
jp
pop
jle
inc
xor
and
repz
jno
jne
and
pop
xor
je
gs
hlt
dec
mov
test
add
addr16
dec
insl
ja,pn
lret
xchg
cmp
sub
sbb
pushf
lahf
stos
in
rcr
addr16
aaa
push
push
scas
repz
cmpsb
sub
lock
inc
lods
ret
mov
xchg
lock
mov
int3
imulb
int
daa
cld
enter
gs
shl
pop
lock
test
or
mov
out
je
mov
push
cmp
es
xor
call
mov
adc
mov
arpl
addr16
mov
pop
ljmp
fstps
addr16
dec
xor
pop
sub
or
loop
xlat
call
pop
xor
test
aas
mov
pop
add
sub
xor
and
xor
dec
rorb
fnstsw
in
add
adcl
scas
xchg
addl
mov
das
rol
jo
js
lods
mov
sarb
cltd
std
push
inc
mov
lods
or
add
rclb
stc
das
pop
push
cwtl
sbb
lods
adc
and
pusha
leave
outsl
jb
cmp
mov
lret
lahf
cmpsb
icebp
push
out
dec
cmp
xchg
sub
out
aad
shll
sarl
popa
iret
scas
mov
jnp
loopne
dec
jecxz
scas
lods
hlt
mov
sti
and
inc
stos
in
mov
dec
push
xchg
push
push
rol
shlb
std
or
mov
inc
cmp
push
iret
shlb
xchg
add
cmp
lock
mov
subl
jae
and
mov
ret
push
nop
mov
push
outsb
outsb
xor
lahf
sub
in
sbb
jg
popa
push
clc
jnp
and
or
pop
insl
call
xchg
stos
imul
sub
mov
sbb
enter
xchg
fcoml
pop
adc
pop
daa
int
int
inc
mov
or
in
pop
scas
or
aad
cmc
imul
daa
sub
popf
outsl
sub
jmp
fsubs
push
inc
cmpsl
test
mov
or
test
dec
inc
ret
fbld
push
sub
inc
rclw
dec
cmp
sbb
xchg
lods
cmp
sub
push
pop
insb
test
rcrb
cmp
push
mov
jmp
push
pop
stc
push
icebp
pop
ja
and
aam
lods
mov
stc
dec
jo
push
sar
jbe
xchg
sbb
lock
add
mov
mov
cmp
loope
inc
push
jl
mov
mov
push
inc
cmpsb
inc
enter
fiadds
mov
lret
adc
inc
cld
cmp
repz
fadd
push
adc
xchg
add
movsl
jle
in
dec
std
pop
mov
adc
jmp
sbb
jp
int3
inc
test
scas
sub
fcoml
add
clc
cmp
sahf
push
loop
mov
sbb
xor
push
mov
cld
imul
mov
push
fdivl
cmpsl
popl
ret
fcmovnb
dec
nop
mov
call
hlt
popf
inc
test
je
mov
mov
loop
xor
into
cld
incb
mov
jecxz
out
push
jl
loop
adc
push
push
out
or
aas
push
mov
push
sbb
mov
jns
enter
idiv
push
sbb
cwtl
sub
sar
mov
mov
in
mov
arpl
aas
adc
lods
pusha
inc
jmp
dec
mov
lock
jle
sub
cmpsb
sbb
dec
arpl
fmuls
mov
into
cmp
test
adc
sub
outsb
lret
lock
sub
fcomps
push
imul
cmp
adc
inc
mov
popl
jmp
in
or
test
rclb
jb
das
std
mov
call
addl
subl
pushf
inc
js
mov
mov
push
subb
cmp
cmp
pop
lcall
push
cmp
pop
and
add
nop
out
sbb
and
push
outsl
movsl
mov
ret
or
add
sub
jmp
xor
pop
pop
jnp
imul
mov
dec
pop
aad
mov
mov
dec
mov
call
cmp
sahf
sbbl
mov
dec
test
add
pop
xchg
or
jge
fwait
ret
push
dec
mov
je
fmuls
sub
lea
mov
pushf
stos
iret
and
push
push
adc
mov
shr
xor
mov
std
imul
ficoml
lret
sahf
insb
out
xchg
xor
add
repnz
push
mov
inc
ljmp
call
insb
fdivl
sub
in
sub
in
dec
mov
in
cmp
femms
movsl
pop
jnp
mov
outsl
in
xor
mov
std
xlat
sbb
and
sub
push
dec
fwait
add
daa
mov
test
enter
jo
cmp
cmc
dec
cmp
test
cld
sbb
xor
lock
xor
les
add
jg
out
add
mov
cmp
pop
repz
rcr
hlt
mov
popf
call
jmp
inc
scas
inc
cld
loope
scas
leave
cmp
dec
jmp
push
jo
dec
jno
mov
test
in
cmp
das
and
pop
jg
out
subb
icebp
leave
adc
popf
lcall
sub
xchg
xchg
lcall
sub
mov
jmp
cmp
and
and
adc
and
add
xor
insb
fwait
sar
inc
std
sbbb
mov
les
sub
in
ret
cmpsb
adc
mov
or
icebp
or
push
ss
push
jp
fldcw
test
jb
lret
decb
mov
sbb
mov
in
out
repnz
repz
stos
vphaddubw
push
sahf
enter
and
in
into
or
push
imul
mov
adc
pushf
das
lahf
mov
sti
push
sbb
loopne
movsb
inc
pop
or
shll
sti
lea
or
pop
sar
or
fldl
dec
stos
rorl
mov
sbb
cmp
lret
or
xor
mov
jle
jg
cmp
add
push
cmp
cmp
xchg
addr16
sub
xor
std
movsl
adc
mov
icebp
hlt
pop
xchg
insl
mov
mov
xor
jp
inc
jl
cs
out
add
out
sbbl
and
std
test
lods
ljmp
filds
lea
adc
mov
dec
cmp
adc
add
into
pcmpeqb
jle
mov
xor
xchg
iret
push
inc
mov
adc
outsl
push
pusha
sub
movsb
adc
arpl
fimuls
les
jp
in
lods
sub
inc
xor
cmpsb
adc
cmp
mov
jp
bound
arpl
in
push
icebp
test
in
adc
mov
push
hlt
xor
ret
jae
dec
pop
enter
mov
fisttpl
cmp
inc
std
cmp
loopne
lcall
xchg
into
or
pop
xchg
sti
cwtl
jmp
mov
cmp
push
or
cmpsb
sub
mov
cmpsl
lock
xor
xchg
fwait
jns
xor
or
adc
cwtl
test
and
push
lret
pop
cltd
cmp
dec
push
rorb
movsl
xchg
ret
stos
lret
lods
push
lods
sbb
lock
or
andb
int
daa
sarl
cmp
cmp
daa
mov
xor
jp
and
loope
lea
data16
into
inc
pop
jecxz
xchg
and
fistl
xchg
enter
rcrb
cmp
push
cmp
test
test
movsl
adc
mov
xor
enter
jnp
notl
dec
rorb
mov
push
subl
test
imul
ja
mov
mov
sqrtps
pushf
or
and
nop
pop
scas
dec
sub
push
ret
sub
pop
popf
xor
mov
mov
add
fcompl
ror
das
mov
xchg
mov
dec
cmp
imul
es
xchg
test
inc
push
xchg
sbb
imul
clc
orb
aad
adc
gs
adc
push
xchg
hlt
mov
xor
and
imul
pop
and
fistpl
outsb
decb
jo
movsl
int3
lock
xchg
and
cmc
and
addr16
jno
hlt
dec
mov
fwait
and
scas
cs
adc
loope
mov
push
cs
arpl
dec
sub
les
ljmp
fldenv
lods
xchg
insb
fstl
loop
cmp
imul
outsl
mov
sbb
xchg
sbb
jmp
lret
mov
inc
xchg
or
iret
jmp
adc
fbstp
lret
pop
cmpsb
sarb
dec
scas
pop
xchg
add
scas
cmp
sub
lods
outsb
in
sub
mov
das
jl
push
pop
ja
sti
std
gs
data16
leave
push
push
fisubs
les
and
dec
mov
xchg
mov
adc
adc
jae
xchg
xchg
sub
jnp
dec
adc
shl
and
mov
inc
aad
fs
ret
es
out
pop
cmp
sti
jl
inc
fidivrl
mov
int3
les
jae
push
push
fs
sarb
xor
clc
int
aaa
xchg
add
mov
ret
xlat
popf
ret
xor
mov
dec
and
aad
sub
xlat
jle
lea
lahf
jno
lret
xchg
inc
fld
xor
clc
add
xchg
push
je
or
add
rcrb
push
fstps
rorb
jo
les
sbb
add
push
jle
int3
xchg
aam
movsb
pusha
std
cmp
pop
sub
lea
push
mov
xor
lock
and
out
stos
and
sbbl
dec
push
push
pushf
mov
jnp
dec
cmp
rcrl
xchg
iret
cld
add
sahf
push
dec
out
push
imul
cwtl
dec
aaa
js
je
cmpsl
stos
mov
repnz
shr
xchg
sub
mov
mov
dec
imul
test
xchg
mov
gs
decb
add
std
mov
lret
testl
xlat
sahf
mov
mov
in
sbb
je
xor
out
addr16
movsb
and
xlat
int
fisubrl
loopne
push
jbe
cmp
push
adc
dec
not
fmull
icebp
cmp
or
imul
in
lods
cmp
jnp
mov
sbb
mov
push
aas
out
cwtl
out
xchg
xor
xchg
fmuls
mov
xlat
mul
cmp
jbe
outsl
stos
push
xchg
cmpsb
xlat
int3
mov
loopne
rorb
adc
fistl
push
push
adc
xlat
enter
xor
jge
pop
sbb
ds
imul
stc
ficoms
or
and
fsubl
push
out
ret
stos
je
loop
jecxz
cmp
mov
sub
js
jbe
lods
in
loop
cmp
orl
lods
cmp
notb
pop
cmpsb
daa
mov
push
or
addr16
mov
push
or
mov
xor
lods
pushf
daa
ds
sub
sub
cmp
daa
mov
lcall
pop
lds
mov
sbb
divl
cmpsb
outsl
pop
mov
mov
test
sbb
rcl
and
fcmovu
cmp
movsl
arpl
push
xor
jae
jp
sbbb
sbb
sbb
aam
divb
fldl
jne
xchg
jnp
adc
or
push
lret
jle
sbb
icebp
test
fwait
insb
inc
lcall
or
in
push
or
stos
xor
jecxz
push
xor
rcll
loop
dec
xlat
jb
daa
sbbb
push
push
mov
xchg
imul
lret
arpl
int3
mul
rcr
mov
adc
add
inc
xchg
aaa
adc
loope
sub
jl
mov
mov
das
je
lahf
pop
jge
add
or
out
sub
cwtl
leave
in
repz
jns
mov
fbld
mov
test
cwtl
xchg
jmp
jne
addr16
sub
xchg
divl
jl
jo
enter
cmp
repnz
shrb
mov
xor
repnz
fisubs
xchg
sub
fdiv
xchg
sahf
jnp
int3
insl
push
insl
cwtl
jg
fxch
test
movsb
les
loopne
pushf
movhps
scas
jmp
or
jl
add
out
imul
sub
mull
rorl
jle
cmp
loopne
imul
add
pop
stc
stos
mov
idivl
loop
movsb
and
inc
mov
jae
pop
xchg
xor
inc
jle
lock
mov
dec
mov
mov
jle
lahf
push
sub
mov
clc
popf
stos
mov
out
jg
pop
inc
push
pop
dec
pusha
xor
cmp
jbe
ds
inc
adc
and
xor
add
outsb
out
or
push
jnp
inc
aas
mov
sahf
out
lea
out
pop
cmp
nop
push
mov
shll
in
inc
mov
pop
push
mov
dec
sarb
fst
sub
add
sub
inc
push
dec
das
inc
dec
xchg
les
bound
jecxz
cmpsl
adc
sbb
test
pop
xor
lock
nop
in
push
mov
retw
rcl
xchg
xchg
pop
sarb
jnp
aam
scas
leave
pop
cmp
mov
sbbl
add
mov
rcr
cmpsl
test
fmulp
repz
and
inc
inc
fcmove
addr16
dec
inc
xor
adc
std
out
sub
enter
outsl
int
mov
adc
sub
lds
jmp
push
pop
sub
fcoms
jo
hlt
addr16
inc
testb
leave
out
xor
cs
fidivrs
pop
xchg
fstpt
mov
and
adc
fdivr
cld
push
sahf
push
outsb
lods
insb
subb
dec
adc
push
imul
andnps
imulb
push
pop
cs
loop
mov
jns
addr16
add
dec
or
cmp
fcoms
xor
and
aam
lock
out
ds
sahf
push
addr16
addr16
adc
loop
rcrb
push
inc
ret
js
outsb
inc
mov
mov
xchg
data16
movsb
or
incb
cltd
in
mov
inc
lret
lods
stos
add
xchg
inc
rclb
mov
mov
js
jno
push
pusha
scas
addr16
mov
dec
lock
xchg
leave
xorl
sub
es
dec
push
inc
dec
pop
scas
adc
push
shll
mov
push
mov
mov
and
xor
lea
sub
movsl
inc
loope
pop
movsb
idivl
into
xchg
mov
jmp
pop
push
addr16
aad
xor
xlat
or
sbb
mov
aas
test
movsl
sub
sbb
movsl
daa
and
mov
imul
xor
cli
int3
cmpsl
dec
add
testl
imul
jecxz
push
mov
lret
adc
or
and
in
lods
jnp
cmp
mov
or
mov
xchg
xchg
lcall
add
call
loopne
jb
pop
mov
mov
xor
and
inc
repnz
add
cli
clc
inc
sbb
mov
sbb
rcll
or
in
in
mov
cmp
mov
bound
mov
dec
out
loop
fimull
sbb
subl
cmp
inc
xchg
and
sti
enter
dec
pushf
add
mov
xchg
je
outsl
int3
clc
bound
sub
mov
orb
insl
cli
ss
ljmp
push
and
xor
aas
mov
hlt
loop
cwtl
mov
sbb
lods
push
push
outsl
ljmp
jge
ja
adc
or
imul
out
pop
cwtl
mov
lahf
mov
lock
inc
arpl
adc
out
addl
mov
out
push
push
xchg
jno
sub
scas
push
test
sti
filds
arpl
stos
push
xor
jp
dec
loopne
jne
pusha
inc
sbb
ret
loop
sbb
xchg
les
mov
subb
dec
movsl
cmp
mov
movsb
cmp
mov
cmp
ret
push
xor
cld
lret
xor
les
xlat
lcall
or
pop
mov
fwait
inc
xor
xchg
jne
arpl
jg
repz
fisttpll
mov
jno
es
je
imul
push
sbb
jo
outsb
ja
pop
mov
outsl
push
or
mov
cmp
sahf
flds
lahf
cmp
cwtl
lods
fxch
out
orl
stos
rclb
je
les
add
sbb
hlt
lea
sbb
inc
and
jecxz
dec
stos
push
test
out
gs
lahf
data16
adc
test
cmp
inc
pop
and
leave
xchg
ljmp
es
xor
cltd
xchg
ret
jae
cmp
and
add
jge
pop
imull
test
into
jle
jmp
pushf
inc
imul
or
mov
and
xchg
dec
or
je
loopne
jbe
flds
cmp
and
int3
lds
lret
aam
inc
add
xor
xor
mov
mov
movsl
adc
xchg
adc
add
mov
xor
sbb
pop
sbb
and
push
cmpsb
dec
aaa
outsb
outsb
and
jae
fstps
sbb
inc
call
repnz
outsb
pop
mov
or
rcr
inc
mov
push
bnd
mov
xchg
shr
insl
xor
mov
add
cmp
lret
leave
loopne
xchg
mov
adc
add
cmpsb
arpl
lret
inc
push
lock
sub
add
xchg
lahf
or
cltd
out
sbb
sub
xchg
lret
cmp
xchg
cmp
scas
mov
rcrl
mov
xchg
mov
inc
cmp
jl
mov
lods
clc
mov
mov
or
mov
or
leave
outsl
pop
cwtl
sbb
dec
test
inc
sbb
cmp
jne
cmc
aad
into
inc
push
pop
xorl
jb
xor
jno
push
inc
cld
cmp
cltd
cwtl
lahf
fdivrs
sub
icebp
mov
jnp
xor
scas
push
pop
aam
push
in
shll
push
clc
popf
adc
sub
les
mov
mov
inc
popa
push
jge
testb
and
pop
pop
out
sbb
xchg
cmpsl
cs
enter
jnp
std
aam
arpl
jmp
xor
pop
jge
movsb
je
divl
cmp
mov
das
mov
cmpl
aad
mov
mov
or
sub
dec
in
lock
xlat
jp
daa
subb
cmp
xor
pop
mov
in
aad
mov
addr16
push
mov
cmp
xchg
xchg
icebp
pop
gs
mov
in
fstpt
xor
ljmp
cmp
xchg
jg
test
jmp
decl
pop
imul
ss
or
outsl
xchg
add
sbb
les
shll
sbb
ljmp
xor
xlat
cmp
jne
lret
jmp
in
and
mov
ret
mov
scas
mov
jno
call
loopne
push
or
sbb
sbb
or
sbb
add
in
insb
cmpsl
lock
mov
repz
roll
sti
pop
add
mov
xchg
in
jp
mov
ljmp
cmp
sbb
xor
insl
cmpl
sbb
and
sbb
adc
das
xor
js
outsl
std
movsb
iret
dec
mov
loop
lock
dec
je
xor
inc
out
mov
mov
or
sahf
ds
pop
jl
jge
int3
jp
xor
out
rorl
popf
mov
push
ret
mov
loope
mov
and
js
leave
mov
in
in
arpl
aad
into
fwait
xchg
cli
call
xchg
dec
push
incb
fsubl
icebp
test
dec
push
nop
jmp
pop
sub
fimull
aam
and
cmp
sbb
loope
add
stos
mov
pop
fcomip
orl
fidivl
xor
fldlg2
test
outsb
pop
sbb
mov
mov
fnstenv
jns
adc
sbb
and
les
shrl
add
sbb
and
sbb
jbe
dec
push
bound
sbb
lds
xchg
sub
stc
insb
stos
mov
xchg
push
push
push
mov
ljmp
in
jmp
xchg
jns
push
mov
and
push
mov
out
jno
and
add
movsb
lahf
add
jbe
divb
dec
test
fbstp
in
mov
fdivl
insb
pop
das
jns
dec
or
mov
test
cmp
js
push
les
or
inc
insl
repnz
pushf
xlat
shlb
inc
out
stos
or
arpl
dec
sarb
dec
mov
cmp
ss
adc
cmc
popf
pop
loop
jb
pop
and
push
mov
xor
lahf
inc
mov
sub
mov
in
loop
mov
pusha
pusha
and
aas
inc
lret
mov
cmp
xor
in
sub
push
lds
std
lock
stc
inc
cli
mov
test
test
mov
pop
adc
push
add
xchg
mov
mov
or
cmp
dec
aam
add
lods
lret
xchg
mov
jnp
jl
insb
mov
push
mov
es
aam
mov
or
jne
xchg
arpl
inc
sub
jae
cmp
aas
aad
sbb
ds
fildl
mov
lock
cmp
inc
and
fxch
lds
aam
ds
inc
andl
ja
test
xchg
int3
sbbl
xchg
call
inc
dec
mov
cmp
int3
std
fsubr
dec
mov
mov
mov
lahf
out
pop
call
and
into
mov
std
cmpsb
dec
jo
leave
test
adc
lds
loop
mov
mov
cmp
imul
ja
mov
jle
fmull
repnz
push
inc
imul
popf
dec
cmp
shlb
rcrb
or
mov
dec
push
mov
gs
fcmovb
or
les
and
sbb
dec
ljmp
and
clc
inc
ret
adc
jge
xor
xchg
add
cmp
lds
movsl
das
push
insb
ffree
rcrl
inc
and
not
add
jo
test
xor
in
movsb
in
adc
mov
pushf
cli
adc
xacquire
addr16
fsts
ret
jae
into
jle,pn
xchg
lea
jmp
sti
sbb
cmpl
sbb
add
je
adc
nop
sbb
imulb
lret
inc
sbb
es
cltd
adc
and
xchg
fsubl
adc
and
xlat
adc
lcall
aaa
in
out
scas
adc
adc
inc
jae
aam
xlat
mov
shlb
pop
ficompl
cmp
and
rorb
xchg
jns
mov
ficoml
sub
loop
cs
hlt
outsb
test
push
das
and
bound
inc
fdiv
test
push
mov
loopne
loope
or
sbb
jle
fmuls
mov
pop
inc
insb
adc
imul
lods
dec
scas
inc
das
add
mov
add
arpl
sahf
scas
imul
loop
push
and
push
repz
or
pop
and
fdivrl
fidivl
out
cmpsl
ds
outsl
and
jle
mov
xlat
stos
data16
push
jb
das
mov
pop
loope
roll
inc
xchg
aas
repnz
stos
mov
pop
push
add
and
stos
and
clc
lock
xor
jle
dec
mov
imul
and
test
repnz
pop
inc
xchg
xchg
inc
dec
hlt
or
test
inc
mov
loopne
sbbb
or
cmp
inc
shl
lods
mov
xchg
mov
or
sbb
fsts
out
push
push
jle
gs
call
pop
xor
xchg
add
jmp
aas
adc
pop
stos
mov
mov
stos
je
mov
xchg
jns
aaa
mov
test
test
jae
jo
outsb
push
rcrl
inc
nop
sub
cs
jge
jae
shl
ror
ret
aam
mov
movsb
stc
xor
mov
or
mov
movl
fsubrs
js
xor
stos
loopne
test
imul
ret
sar
rcl
add
lret
jge
sub
enter
sub
das
pop
pop
dec
mov
add
jmp
mov
sbb
mov
enter
out
push
das
mov
loope
and
lret
mov
outsb
jmp
fnstsw
pop
jb
mov
pop
std
loop
or
push
dec
dec
mov
and
jmp
mov
fnstenv
movsl
jmp
stos
jo
stc
lods
divb
or
icebp
aaa
inc
in
jno
dec
data16
mov
shlb
fcmovb
in
sub
and
data16
jmp
xchg
and
jmp
jae
jae
xor
sbb
cmp
dec
push
aad
xchg
cld
ss
fbstp
sub
insb
mov
mov
pop
hlt
mov
rorb
sbb
sub
adc
adc
std
xchg
fcompp
dec
mov
adc
enter
and
iret
or
mov
ret
and
jecxz
arpl
mov
and
jns
sahf
stos
mov
adc
mov
mov
add
cmp
adc
xchg
jno
movsb
cli
xchg
daa
pop
sub
push
adc
test
dec
into
inc
push
into
mov
dec
dec
insl
mov
push
test
subb
data16
mov
adc
and
insb
fs
and
xlat
jge
call
xor
jbe
imulb
imul
lcall
or
aas
test
int
mov
fistps
stos
dec
mov
int
lahf
ljmp
adc
aam
ficompl
outsl
dec
mov
sarl
cs
add
add
roll
movsl
adc
dec
jl
outsb
adc
popa
xor
mov
cmove
cmpsb
jo
rcl
leave
cmp
xchg
jne
lcall
inc
sbb
idiv
ds
roll
cmp
adc
imul
mov
mov
in
push
in
xor
loope
imul
dec
push
sbb
adc
vpunpcklwd
paddusw
sbb
lock
fimull
pop
mov
xchg
ja
push
and
leave
loopne
cli
sbb
pop
or
pop
mov
leave
add
xchg
xchg
dec
aam
and
fisttps
std
mov
insl
jb
ret
sub
mov
adc
jecxz
mov
in
cmp
std
fst
push
xchg
mov
imul
add
sub
xchg
js
mov
cmp
sub
repnz
loope
or
add
repnz
and
pop
inc
mov
loope
or
and
xor
mov
jno
xorl
call
mov
xlat
les
add
xchg
add
cli
mov
fcmovb
jg
and
in
adc
inc
clc
call
mov
test
dec
mov
xchg
and
gs
mov
arpl
sub
hlt
xchg
and
js
xchg
cs
sbb
loope
icebp
xchg
sub
pop
adc
dec
fsubr
in
lret
xor
jge
xlat
hlt
into
ret
push
or
xor
xor
lret
sub
and
xchg
idiv
clc
mov
and
mov
pop
and
add
add
or
insb
pop
inc
int3
add
roll
add
dec
mov
lret
adc
fimull
sub
add
es
loop
out
push
sub
ss
cmp
cs
mov
push
popf
pushf
inc
clc
mov
sbb
add
jge
shlb
cmp
mov
shlb
xchg
pop
mov
orb
inc
repz
in
push
pop
inc
cmp
pop
cmpb
and
icebp
xchg
lret
decb
scas
gs
dec
and
gs
sub
call
loope
sbb
pop
inc
lcall
inc
pushf
mov
xchg
sbb
fcoml
push
sub
mov
popa
xchg
add
dec
jge
in
add
daa
sub
fnstenv
xor
fsubl
lea
arpl
or
iret
mov
stos
sarb
add
orl
inc
and
out
addb
lds
popa
mov
jp
test
cmpsl
cmpsb
lds
sub
mov
or
hlt
mov
dec
popf
and
lahf
xor
lods
fidivrl
push
and
cmp
cmp
loop
shl
dec
imul
jns
sub
sbb
inc
mov
mov
loopne
pop
xchg
and
lret
jl
jge
sti
push
imul
lock
int3
mov
xchg
out
repz
test
cmp
fnstcw
mov
push
jge
scas
test
pop
incl
inc
fcmovnu
sarl
mov
lds
das
out
cli
mov
inc
sub
mov
pop
mov
sbb
dec
repz
dec
rcrb
cltd
nop
pusha
scas
and
rclb
and
push
stos
aad
cmpsl
jmp
push
dec
inc
addr16
dec
insl
push
adc
dec
sbb
call
xor
add
push
test
shlb
pop
sbb
mov
add
imul
adc
and
stos
rcrb
pop
fwait
xlat
xor
pushf
xchg
jnp
pop
call
jbe
or
xor
xor
popa
pusha
hlt
cmp
popf
mov
loopne
jmp
add
mov
or
stc
mov
add
loop
xor
pop
insl
repz
je
out
mov
les
cmpsl
xchg
jg
je
adc
incb
push
aas
mov
mov
lea
xor
mov
fs
outsl
jns
sarb
arpl
addr16
dec
js
lea
pushf
pop
push
ljmp
sbb
cli
popa
pop
cld
pop
sbb
test
test
popl
rclb
loope
xchg
aad
dec
mov
dec
sub
mov
in
mov
add
sub
xor
sbb
fisttpl
push
cmp
lahf
mov
daa
pop
mov
jnp
jecxz
and
shrl
cmc
addr16
loopne
jb
and
test
call
add
and
inc
xor
sahf
out
mov
jge
xchg
or
or
bound
fbstp
jecxz
test
sbb
mov
pop
inc
enter
mov
fldl
inc
fisubs
jne
jl
sub
out
nop
pop
mov
and
addr16
push
xchg
ret
into
cmc
add
lahf
dec
popa
cmp
xchg
pop
mov
pop
add
iret
out
jb
stc
jnp
xchg
or
jle
mov
xchg
or
mov
fistl
add
pop
insb
mov
jo
cmp
lds
movsb
pop
or
into
mov
insb
mov
in
lods
dec
push
scas
adc
jbe
js
jns
scas
aaa
gs
lahf
mov
lcall
test
mov
popa
pop
sbb
inc
cmp
clc
or
add
mov
add
jno
push
loope
mov
mov
inc
outsl
ss
gs
inc
jno
mov
out
cmp
movsl
adc
imul
int
pop
stc
add
pop
clc
lret
sbb
movb
std
daa
jne
out
stc
sbb
push
push
aas
xchg
inc
mov
divb
xchg
cmp
mov
mov
mov
cmp
call
cld
lcall
imul
das
push
cmp
mov
push
scas
rol
pop
xchg
mov
fs
fistps
test
jp
scas
popf
cmpl
fs
dec
and
sti
inc
imul
lods
es
lea
sbb
cld
push
ja
sarb
or
or
test
xor
pusha
mov
sarb
subl
cmpb
add
bswap
cmpsl
fidivrs
push
push
mov
adc
hlt
insb
pop
addr16
sub
sub
and
lahf
test
jbe
push
popa
sti
xor
inc
fs
sub
popa
rclb
cmp
popa
nop
mov
or
xlat
mov
inc
dec
or
cmp
leave
and
popa
stc
jecxz
mov
addr16
xor
mov
fsub
int
scas
testl
lods
inc
mov
leave
or
jne
outsb
cmp
pop
push
push
movsb
div
shrb
mov
out
jb
push
popl
outsb
outsb
jmp
cld
iret
sbb
xor
push
enter
xlat
jge
mov
inc
es
jae
lods
scas
and
jmp
imul
ret
rcrl
dec
daa
in
int
and
sbb
cmp
fidivrl
aam
mov
mov
jo
jb
imul
subl
cmpsl
pushf
jo
sahf
adc
movsl
mov
test
xor
outsl
xchg
clc
aam
sbb
iret
jno
mov
cli
popf
mov
push
cmp
push
nop
and
pop
or
mov
push
dec
call
jmp
inc
in
mov
mov
sub
or
add
adc
pop
out
cs
inc
jb
sub
inc
ja
daa
movsb
mov
out
xchg
loop
xchg
test
mov
add
ret
pop
sbb
iret
mov
movsb
pusha
jns
cs
cmp
jae
mov
jb
pop
sbb
inc
dec
cmpb
fldenv
mov
pop
cmpsb
jno
in
popf
push
fmull
sbb
dec
cmp
rcrb
pop
xor
in
fs
cmp
xor
outsl
mov
aaa
sbb
fdivp
lea
and
jo
mov
lock
sub
repnz
clc
adc
out
sti
jmp
movsl
jb
xor
cs
rorl
cld
cmp
and
or
xor
push
aam
cs
and
in
cmp
push
movb
ss
sub
adc
cltd
sbb
jae
adc
ja
pop
fidivl
xchg
lcall
jle
jmp
xorb
mov
movsl
dec
dec
xor
es
mov
scas
pop
out
outsl
pop
pop
xchg
mov
in
leave
inc
daa
pop
dec
mov
cmpsl
cmpb
mov
and
mov
in
lea
xor
out
inc
xor
jbe
out
pushf
mov
xor
add
lods
pop
or
xor
mov
jl
in
push
push
sub
mov
addr16
test
clc
idivb
dec
push
or
fs
pop
je
rorb
cmp
inc
je
cs
enter
mov
mov
pop
jne
xor
jl
lds
orl
and
insl
pop
jl
outsl
sub
push
adc
ret
mov
and
inc
pop
sbb
dec
xor
adc
and
test
mov
sbb
cmp
gs
lcall
dec
scas
fisttpll
mov
out
adc
lock
popf
push
lods
sub
jb
ror
sbb
shrb
adc
adc
movsl
imul
xor
mov
xor
or
inc
jp
ds
int
xor
mov
add
sub
je
lret
in
out
stos
xchg
xchg
lock
push
sbb
push
cmp
fadds
mov
and
scas
or
outsb
mov
mov
pop
out
adc
jp
mov
stos
movsb
subb
ret
jle
or
cmpsb
adc
add
adc
push
push
ret
ss
ret
jmp
nop
adc
and
pop
mov
outsb
in
mov
sahf
lods
div
test
mov
loop
xor
popl
or
fnsave
ret
sbb
mov
push
es
rcrl
int
pop
test
xchg
clc
push
rol
test
testb
stos
enter
push
pop
mov
int
clc
jecxz
stos
xchg
mov
notb
or
repz
outsb
xchg
dec
and
test
ss
sti
insb
gs
loope
adc
enter
dec
neg
inc
xchg
push
cwtl
mov
mul
adc
out
loop
into
dec
ficoml
mov
nop
cmpsl
mov
ss
jle
mov
orl
stos
shl
inc
clc
sub
dec
or
cmpsb
mov
inc
mov
std
addr16
in
push
jno
sar
dec
xchg
ret
jno
into
adcb
cli
mov
xor
loope
xchg
mov
nop
into
mov
lock
fld
cmp
loop
sub
adc
mov
rcl
aam
pusha
pop
adc
adc
iret
insb
xor
mov
scas
sub
sahf
fldl
jmp
sarb
nop
mov
xchg
add
icebp
dec
or
rolb
negl
out
xor
push
jnp
bound
mov
sub
xor
cmc
fcoml
loopne
xor
jle
test
mov
sti
or
fs
imul
or
lock
dec
cld
xorb
xor
mov
sbb
js
fcomi
mov
push
stos
and
in
jno
xor
xchg
xchg
imul
push
repnz
mov
mov
pop
es
jb
mov
cmpb
xchg
or
cmp
rclb
or
pushw
mov
jbe
push
cmp
sarl
dec
test
push
inc
sub
idivl
or
xchg
bound
mov
lret
push
adc
rolb
cmpsb
jnp
clc
imul
xor
out
hlt
mov
jnp
xchg
pop
cltd
add
and
dec
sbb
pop
cmp
pop
enter
das
push
leave
popl
mov
xor
daa
xor
dec
hlt
mov
outsl
fisubl
jle
movsl
fisubrl
fs
fmull
call
into
xor
add
test
repz
rcll
mov
outsl
inc
pop
nop
fidivrl
inc
stos
mov
jae
or
out
loop
lods
jb
push
mov
popa
aam
ffreep
dec
push
jmp
jno
jns
cltd
sbb
out
mov
pop
inc
and
mov
imul
sub
fdiv
into
imul
xlat
cmpsb
mov
cmc
lret
mull
xchg
imul
lret
cwtl
fucomip
pushf
mov
jecxz
add
push
arpl
dec
fucomip
out
push
push
jae
dec
fistpl
xchg
cmpl
mov
int3
ljmp
push
xchg
cmp
pop
push
add
pop
cmp
or
jno
adc
xchg
cmp
outsb
mov
scas
cmpl
or
out
xor
repnz
adc
and
test
xchg
pop
cmp
pop
test
in
sbb
test
dec
sbb
fisubs
jns
jbe
mov
push
push
pop
or
push
es
addr16
mov
shlb
or
ja
mov
mov
mov
jle
push
lret
and
cld
in
jg
pop
or
hlt
cmp
pop
mov
jnp
inc
xchg
cmpb
sub
and
lahf
fcoms
or
cmpsb
dec
icebp
shl
sbb
scas
and
dec
out
and
gs
adc
movsb
jmp
insb
jl
sbb
mov
test
lcall
xchg
fisubrl
aam
into
hlt
roll
lahf
testl
iret
fcmovbe
jns
xchg
stos
imul
push
mov
adc
mov
push
sbb
push
cmp
loope
lret
imul
or
sbb
sbb
test
stc
jb
idivl
stos
xchg
into
push
and
jno
pushf
sbb
lret
rorb
and
test
movsl
vdivpd
bound
pusha
inc
pusha
dec
jmp
sbb
dec
mov
cmp
adc
neg
stc
lcall
fcmovu
jno
loopne
sarb
js
bound
je
lea
aaa
mov
lret
lcall
cli
aaa
or
imul
idivb
gs
jp
rcll
fwait
arpl
test
add
jnp
push
xor
sbb
and
sbb
outsb
lret
dec
ja
lock
cld
testb
ss
pop
arpl
idivb
imul
push
lods
mov
jl
lret
xchg
push
rclb
dec
sub
fstl
cld
xchg
leave
xchg
mov
mov
stos
mov
xchg
ficoms
lock
imul
enter
push
shll
adc
sarb
es
mov
cmc
mov
aam
or
lahf
outsl
frstor
xor
jle
int
out
ds
sub
mov
jle
rclb
xchg
push
orl
sarb
fiaddl
pop
cmp
xor
lret
sti
sbb
inc
jmp
dec
jns
cmpsb
test
pop
cwtl
mov
xor
ja
dec
sti
aaa
xor
dec
jge
mov
push
add
sahf
hlt
in
or
xchg
cmpsl
and
jecxz
int
jb
xchg
dec
sti
cli
xor
mov
fisttpl
jbe
incl
pop
imul
in
sub
xchg
mov
jl
mov
xor
inc
shlb
mov
movsb
loopne
pop
fistpll
stc
adc
and
outsl
mov
repz
movsb
mov
pop
xchg
movsb
dec
inc
add
mov
aad
cmp
daa
add
popf
jg
les
cwtl
inc
rolb
push
fwait
ret
add
xchg
mov
js
or
repz
and
adc
insb
xchg
push
repz
pop
dec
adc
sbb
pop
push
mov
jns
cmp
sub
hlt
push
mov
es
xchg
jnp
clc
lock
ror
cmc
popa
xchg
cmpl
fiaddl
cli
mov
leave
int
daa
push
add
loopne
jg
mov
lock
incb
sub
repnz
lods
xor
xor
out
scas
adc
int
inc
xchg
iret
call
shrb
mov
mov
jp
or
mov
lods
aam
xchg
jns
sub
cmp
cmp
mov
mov
ret
jg
stos
stos
and
aas
fs
outsb
in
push
add
into
enter
mov
into
push
jnp
sub
cmp
or
out
scas
sub
lea
push
ret
add
pop
adc
jnp
into
adc
sahf
jne
sub
lret
call
and
jmp
call
scas
cld
or
inc
inc
sub
mov
add
xor
stos
sti
push
lret
mov
enter
xorl
sub
in
and
pop
push
and
in
pop
dec
je
lods
out
xchg
outsl
jbe
xchg
sub
fsubrp
inc
and
sbb
adc
and
sahf
pushf
mov
lds
jo
xchg
mov
inc
je
xor
dec
jbe
pop
xor
in
and
int
lods
pop
add
jle
test
push
cmp
xchg
fistl
push
sbb
cli
mov
out
aas
jge
mov
cmp
iret
xchg
nop
faddl
mov
clc
xlat
and
imul
mov
pop
push
pushf
dec
jo
insl
push
movsl
cmp
adc
stos
mov
add
jmp
mov
cmpsb
xchg
test
inc
fucomi
pop
lahf
adc
pop
out
jmp
pop
adc
lods
lret
scas
pushf
inc
and
imul
mov
jecxz
push
lcall
cwtl
les
vmptrld
test
lock
rorl
push
mov
jnp
fldenv
mov
clc
mov
mov
mov
cmp
adc
aad
hlt
or
aam
sub
dec
xchg
cs
sbbl
dec
pop
sub
jp
and
lock
sahf
test
inc
data16
pop
push
nop
ret
shr
push
jp,pt
xchg
daa
lret
rol
test
aam
push
jl
and
jecxz
inc
in
lret
lds
adc
jg
cmp
outsl
dec
repz
fcomip
add
cwtl
mov
xchg
cmpsl
jns
mov
xor
test
gs
xor
add
imulb
les
movb
mov
jae
inc
jnp
leave
shll
mov
sub
sub
mov
push
and
in
pop
lcall
push
pop
sbb
cmp
leave
repz
mov
icebp
or
jnp
in
mov
insb
push
sbb
aad
and
pop
nop
rcrb
aad
jmp
xchg
out
mov
scas
and
inc
mov
adc
push
cmp
daa
xchg
movlhps
mov
mov
movsl
lret
add
pop
out
pop
cwtl
leave
loopne
lret
cmp
sbb
sub
daa
mov
sbb
ss
scas
mov
lods
sbb
cmp
je
das
pop
dec
or
mov
push
out
mov
or
mov
pop
cmp
negb
arpl
jg
inc
dec
mov
pop
or
lds
in
sub
loopne
mov
repz
fcmovb
lcall
outsb
nop
mov
sbb
outsb
and
insl
ljmp
push
cmp
mov
pop
pop
and
or
cmp
sbb
lods
fcomps
sbb
dec
xor
cmc
fwait
pushf
les
enter
loopne
xchg
icebp
aaa
sbb
mov
lcall
push
ret
adcl
test
dec
mov
stc
ret
testb
fcmovnb
loope
mov
xchg
test
push
lea
pavgb
rorb
repz
jbe
imul
fimull
jecxz
cld
arpl
push
std
and
xor
data16
lahf
jns
mov
fld
outsb
lods
and
cmp
nop
lods
outsb
xchg
cmc
fstl
in
fidivrs
inc
mov
ret
xlat
inc
rclb
sub
rolb
out
popf
nop
xchg
lret
into
incl
cltd
jae
jp
loopne
cmpsb
pop
dec
xor
push
lock
mov
imul
dec
arpl
mov
in
dec
hlt
mov
outsl
jl
jecxz
enter
cltd
mov
shll
fsubrs
loopne
nop
fxch
add
push
fwait
pop
test
int3
pop
adc
les
insl
out
adc
pop
cltd
insl
mov
out
xchg
sub
push
or
clc
sub
jge
fdiv
fildl
in
std
test
cmpsb
int3
sahf
or
ss
in
pop
inc
sti
addr16
push
and
add
insb
icebp
sbb
dec
rorl
mov
stos
stos
jae
jle
test
jle
pop
rclb
test
int3
mov
ljmp
out
xchg
cwtl
fsts
sub
int
jne
pop
push
das
fcomps
pop
loope
andb
fmulp
pop
xchg
push
pop
lret
push
jb
cli
repnz
mov
jno
mov
out
int3
push
out
out
rorl
xchg
lea
ret
enter
cmpsb
mov
xor
or
dec
adc
int
fisttpll
cmp
ja
sti
or
ficompl
mov
inc
xchg
cmp
int3
test
test
gs
sub
in
repnz
imul
xor
out
xor
add
mov
push
add
push
imul
mov
ja
rcl
enter
push
mov
dec
les
mov
inc
fcmovnu
xchg
push
outsb
dec
imul
out
inc
push
sti
mov
mov
mov
dec
push
stc
pop
fistl
mov
es
or
aam
mov
pop
rolb
nop
mov
fwait
int
cmpsl
ret
or
xor
sbb
cwtl
pusha
inc
pop
push
insb
or
sahf
adc
popf
imul
jae
test
and
xor
jmp
cld
testb
imul
fimuls
call
lock
xor
push
xor
rorl
inc
nop
mov
mov
pop
pushf
cmp
jge
xchg
ljmp
push
mov
ljmp
jp
mov
shl
repz
pop
std
bound
jmp
mov
add
inc
mov
inc
nop
pop
hlt
scas
xchg
pusha
loopne
xor
aaa
xchg
or
inc
hlt
dec
mov
pop
aam
outsl
fldl
xchg
jns
pushf
popf
pop
add
inc
and
in
xor
adc
add
push
ror
in
or
movsl
xchg
dec
loope
push
xchg
cli
pop
and
push
push
enter
shrl
mov
and
cli
notb
jecxz
lock
sbb
scas
in
mov
call
or
out
popf
mov
sbb
lcall
lods
lahf
inc
es
enter
lock
nop
push
jp
data16
xchg
test
aad
xor
movsl
sbb
int3
pop
and
push
pop
fs
add
mov
mov
out
shll
jbe
jb
ljmp
iret
add
dec
adc
jmp
mov
mov
jge
loope
divl
pop
inc
call
cwtl
cmp
sahf
mov
fwait
pop
ret
lods
mov
out
xor
addl
into
xor
bound
lods
cmp
cltd
lcall
mov
xadd
cmp
pop
movsb
sub
cmc
push
imul
data16
inc
int3
push
cmc
out
push
xor
loop
lahf
mov
test
jge
into
xor
shll
mov
fnstsw
add
and
mov
mov
pop
dec
fwait
dec
test
jg
decl
in
pop
gs
mov
loopne
je
pop
lahf
push
stos
mov
cmp
and
rorb
shrb
sti
filds
pushf
add
sbbb
daa
xor
fdivrs
subb
loope
mov
and
pushf
mov
test
hlt
pop
fildll
dec
sbb
push
stc
pop
cmp
mov
xchg
sahf
inc
pop
mov
fwait
out
mov
sar
xchg
out
imul
xor
ds
mov
xor
aam
jmp
mov
lds
mov
adc
inc
mov
sahf
push
pop
cmp
inc
or
ret
fidivl
jne
lahf
adc
js
pop
dec
call
dec
mov
dec
pop
cmp
lock
cmp
cmpsb
fs
xchg
push
ret
outsb
sahf
and
or
xchg
clc
scas
lret
mov
leave
inc
and
pmaddwd
mov
fsubs
push
sub
lcall
scas
mov
mov
or
cwtl
test
scas
lret
mov
push
filds
or
adc
ret
ja
push
xor
cmp
cs
loop
mov
gs
jns
and
adc
cs
dec
imul
dec
addr16
dec
push
cli
xor
mov
jl
pop
push
sbb
in
inc
jmp
pusha
or
loope
repnz
fisttps
test
adc
jmp
or
sti
pop
fs
fst
xlat
cld
das
into
loopne
mov
out
lret
adc
push
shlb
out
or
ljmp
fwait
cmp
jnp
lcall
or
out
aam
nop
pop
mov
mov
cltd
mov
and
leave
and
lcall
lret
and
pop
pop
scas
xor
xor
xchg
dec
outsb
fldt
inc
jae
sub
mov
push
popf
pop
test
fiadds
jne
push
sbb
push
mov
sbb
jp
lret
pop
jmp
ja
fisubrs
and
pushf
sub
and
outsl
das
nop
mov
jecxz
jmp
cmp
test
stc
outsl
jecxz
adc
clc
mov
xlat
push
and
inc
and
out
stos
sub
mov
mov
mov
mov
add
bound
jne
int
jecxz
or
les
mov
xor
sarb
xchg
push
outsl
jne
imul
xor
sbbl
cld
sub
pusha
jmp
rcrb
push
sbb
sbb
std
mov
orl
pop
jl
dec
nop
or
xchg
in
jo
mov
les
ficomps
adc
mov
shl
lea
lret
lea
aad
xchg
js
ljmp
imul
mov
jl
push
cmp
or
adc
fincstp
repz
inc
or
enter
aaa
xor
outsl
mov
pop
pop
push
movsb
xchg
addl
lods
xchg
jne
cmpsl
adc
sub
lret
call
adc
mov
movsb
jp
ret
aaa
cmp
mov
lea
mov
mov
jo
adc
pop
adc
daa
mov
hlt
hlt
mov
sbb
enter
push
xlat
push
dec
mov
addr16
shrb
sub
sub
ds
and
dec
xchg
mov
mov
and
pop
add
mov
adcl
ret
clc
sub
push
les
loope
cmp
cmp
ret
push
shrb
imull
das
fwait
mov
sub
adc
fidivrl
pop
divb
or
je
push
daa
fcmovne
xchg
and
xchg
push
shlb
lock
pop
or
movsl
arpl
xchg
xor
or
in
push
cmp
aad
adc
incl
sbb
cmp
add
pop
das
xchg
aaa
arpl
aam
sub
adc
sti
mov
int
out
jbe
fwait
sbb
pusha
repnz
icebp
push
rcrb
cwtl
and
adc
mov
cli
out
pop
mov
xchg
push
inc
insb
int
push
test
adc
orb
add
xchg
scas
lock
adc
loop
jmp
shlb
xor
imul
xchg
out
xchg
jno
xchg
sub
or
sbb
push
js
cmpsl
sbb
mov
jno
fidivl
and
ret
adc
xor
or
mov
hlt
xchg
je
aad
test
shlb
icebp
js
inc
and
sbb
fidivrl
dec
xor
divl
std
loop
pop
and
shrb
mov
push
dec
sub
xor
lret
scas
cwtl
scas
pop
aam
addr16
add
jb
iret
mov
mov
dec
mov
cwtl
jl
jmp
out
dec
aam
pop
xchg
push
pop
dec
int
xor
mov
jb
adc
mov
push
orb
dec
dec
xchg
or
ss
test
inc
pop
jle
add
push
mov
lcall
fistl
fcoml
cld
xor
out
std
xchg
scas
mov
test
int3
mov
inc
enter
imul
mov
jne
fcoml
dec
jg
push
in
pop
push
push
pop
mov
pop
xchg
and
inc
mov
pop
add
add
sub
test
mov
adc
clc
xchg
inc
popf
std
in
inc
jbe
sbb
pushf
fs
hlt
adc
nop
fstpt
daa
jo
sub
sbb
add
and
pop
aam
adc
add
orl
icebp
mov
enter
hlt
mov
push
call
in
mov
pop
je
mov
cltd
fmuls
cltd
daa
jle
sbb
faddl
and
and
aaa
push
aam
sti
cld
pop
xchg
sbb
xor
push
xor
and
ficompl
fldenv
or
pop
test
mov
push
pop
xor
mov
sbb
sbbb
inc
test
in
jns
mov
cmp
outsb
jo
dec
cmpb
sub
ret
fdivrs
fs
sbb
mov
mov
gs
mov
dec
xor
daa
push
movsb
fs
popa
pop
mov
inc
test
pop
xchg
add
jo
ficoml
test
mov
adc
push
xchg
jecxz
inc
lcall
sbb
daa
icebp
add
mov
inc
jno
xor
test
adcb
ljmp
add
out
stos
xor
je
add
out
mov
mov
icebp
jns
or
mov
mov
iret
movsl
adc
pop
dec
or
je
int3
xorb
inc
cmc
fsub
mov
pop
push
xlat
pop
push
push
sbb
stos
rcrl
clc
shl
popa
inc
shll
push
dec
fincstp
std
shrl
mov
insb
into
incb
out
inc
aas
addr16
inc
ja
lds
mov
xor
out
and
arpl
stos
aaa
xchg
mov
jb
fwait
subb
imul
dec
test
mov
and
hlt
push
push
or
test
aad
sbb
mov
mov
push
sub
fsubr
lods
sbbb
xor
push
pop
outsb
or
jo
std
testb
lock
sbb
fnstenv
jnp
ret
cmp
xchg
xor
xor
imul
mov
adc
jno
fs
cwtl
mov
pop
and
dec
jmp
sti
int3
scas
ret
bound
imul
mov
inc
mov
and
mov
push
js
xchg
or
and
sbbl
loop
popf
push
mov
stos
dec
orb
das
and
leave
sbb
sub
stos
in
and
or
add
pusha
mov
test
notl
test
lea
shll
sbb
adc
add
mov
push
out
insl
loop
mov
cmp
idivb
shlb
mov
adc
rclb
xchg
adc
xchg
rclb
mov
inc
mov
icebp
push
push
add
pop
les
call
stos
xchg
inc
loop
mov
inc
std
inc
sub
mov
xchg
les
xor
ds
fstpt
xor
rcrl
sbb
fcoms
dec
sub
pusha
push
mov
fwait
pop
push
dec
outsb
xchg
jae
bound
fndisi(8087
xchg
or
das
cmpsl
test
xor
aas
xchg
add
inc
lock
mov
add
mov
rcrb
adc
scas
ss
rolb
and
lahf
arpl
sysenter
adc
daa
shl
jle
pop
pop
dec
into
jl
aas
mov
popf
dec
loop
add
scas
cld
iret
movsb
psadbw
mov
or
pop
add
loope
stos
adc
xor
mov
dec
enter
dec
mov
jne
fwait
hlt
fstpl
xchg
out
iret
pop
mov
or
jg
stos
mov
mov
inc
fld
push
adc
mov
push
testl
int
xchg
into
mov
xchg
push
xchg
mov
stos
inc
test
jnp
outsb
inc
sub
inc
cmp
cmp
mov
insl
mov
sub
out
push
loopne
or
pop
lock
daa
rolb
fs
sbb
dec
push
int3
pop
and
mov
shrl
ret
sbbl
cmc
insl
push
push
push
fs
jne
xor
xchg
pop
pop
les
jae
mulb
xchg
movsl
xor
jp
test
andl
lret
mov
in
nop
je
mov
jo
mov
lcall
push
lret
mov
dec
test
in
insl
dec
xlat
shlb
jl
cli
cmp
insl
dec
sub
dec
jmp
je
xchg
outsl
ja
mov
movsl
stos
pop
pop
test
sub
jp
mov
xchg
scas
inc
sahf
fldenv
adc
dec
pop
js
loope
or
xchg
jb
mov
movsl
outsb
mov
push
xchg
mov
jg
inc
adc
adc
in
mov
fidivl
and
lret
jl
mov
mov
pop
or
xor
inc
int
push
arpl
mov
pusha
push
and
data16
hlt
stos
inc
sub
xchg
adc
add
cmpb
fcoml
dec
add
out
pop
movsl
and
xchg
mov
popa
sbb
jo
fwait
adc
mov
test
ss
jnp
mov
mov
shlb
cmp
cmp
out
add
dec
rolb
cmp
loope
lock
or
mov
cmp
scas
push
imul
aas
fdivp
inc
std
xor
dec
push
mov
lea
push
sub
test
ror
enter
repz
fnstenv
lahf
and
mov
xor
pop
repz
push
sub
mov
xor
xor
inc
push
push
cltd
xchg
fadds
jp
cmpsl
mov
mov
sub
mov
hlt
bound
add
dec
push
mov
iret
icebp
jg
push
mov
inc
dec
adc
sub
aaa
add
xor
jns
xchg
dec
push
push
adc
into
loopne
mov
xchg
mov
in
sahf
shll
popl
mov
out
xor
jmp
lock
cmp
fdivp
icebp
push
adc
pop
sbb
aas
or
lods
lahf
jg
imul
sub
sbb
add
sub
movsl
insl
xchg
into
out
call
inc
sbb
jp
sbb
aam
jae
mov
lods
cmp
jg
gs
stos
jl
and
mov
pop
pop
outsl
iret
andnps
dec
je
push
adc
adc
loope
aam
data16
addr16
into
mov
mov
cmp
fistps
cmp
pusha
xorl
mov
add
pop
cmp
data16
push
mov
xchg
inc
jne
add
xchg
aad
cmpsb
imul
adc
xor
adc
mov
pop
imul
lret
mov
adc
inc
xor
lret
lret
fwait
aaa
dec
addb
icebp
sub
and
jo
adcb
clc
jbe
jbe
or
and
loope
pop
ss
mov
iret
and
mov
test
test
pop
stc
mov
scas
fisubs
mov
divps
sub
ret
adc
out
push
mov
or
mov
jge
in
add
push
or
repnz
pop
fcompl
or
push
insb
mov
insl
add
add
arpl
jnp
xchg
testb
and
repz
clc
pop
pop
testl
and
adc
lods
cmpsb
leave
outsl
mov
hlt
jge
push
loop
xchg
and
push
rcll
lret
jge
adc
out
jns
push
xchg
orb
pop
mov
negl
xor
fbld
mov
mov
es
adc
mov
mov
ss
mov
lahf
cmp
pop
aam
inc
les
imul
push
mov
fadds
vcvtsi2sd
mov
push
leave
test
in
sbb
mov
cs
test
add
pop
sahf
subl
out
fisttps
into
cwtl
push
sbb
into
push
inc
jmp
inc
add
daa
inc
mov
sbbl
push
lods
mov
loope
add
and
mov
mov
push
ja
add
lahf
mov
psrld
data16
sahf
pop
or
xor
clc
icebp
je
ret
mov
push
ss
pop
jno
imulb
xchg
lret
fmull
fcmovne
insb
mov
repnz
jnp
sbb
shr
popf
and
mov
and
clc
mov
jo
mov
ret
sbb
loope
push
fsubrs
fwait
shl
xchg
mov
adc
jl
ja
pop
mov
sbb
inc
dec
xchg
enter
loopne
pop
add
sbb
in
push
dec
add
mov
mov
dec
scas
lcall
cmpsb
icebp
ss
cmp
or
dec
mov
cs
xchg
cmp
cmp
dec
psrad
inc
sub
iret
pop
arpl
xchg
pslld
xchg
call
nop
std
std
jle
rcll
dec
popa
inc
adc
pop
mov
ret
shr
mov
je
mov
loopne
dec
sbb
or
mov
cmp
imul
add
sbb
mov
arpl
cmpsb
dec
mov
pusha
les
xor
push
das
icebp
xchg
pop
add
mov
andl
ret
and
dec
outsl
add
je
push
xchg
lods
lret
pop
andl
ret
sub
mov
sbb
les
xchg
shrb
sub
xchg
mov
jge
push
adc
push
mov
daa
sti
push
fwait
std
shrl
pusha
call
cmp
stos
setno
or
bound
mov
ljmp
in
push
inc
cmp
sub
test
ret
arpl
mov
insb
push
stos
xchg
sub
cmp
mov
mov
fs
mov
pop
adc
cli
mov
add
mov
mov
jmp
iret
imul
xor
cmc
xor
pop
test
incl
jo
mov
cli
pop
add
aam
fs
ret
test
stc
repz
scas
mov
cmpsb
je
jnp
les
arpl
mov
ds
dec
jp
push
insl
fs
scas
dec
call
xor
movsb
push
cmp
pop
sub
and
cmp
push
push
mov
cltd
stos
mov
xchg
xor
and
cli
inc
push
push
or
cs
pop
push
sti
sub
mov
and
add
dec
xor
sub
mov
sti
mov
jle
xor
cmp
jbe
dec
sbb
int
iret
mov
faddp
dec
push
push
fs
mov
cmp
jae
and
pop
cmp
inc
inc
in
inc
and
cmp
jnp
jno
out
or
mov
inc
aad
clc
sub
js
arpl
push
and
test
loope
and
aaa
scas
pop
and
xor
icebp
adc
xchg
jmp
sahf
popa
jae
repnz
adc
pop
or
gs
jl
popf
lcall
adc
test
add
push
inc
cs
imul
push
shl
shlw
adc
sbb
scas
mov
dec
or
in
stos
arpl
leave
sahf
lret
out
pusha
mov
push
fcomp
popf
mov
in
add
movsb
sbb
xchg
stos
xchg
push
xlat
adc
inc
fisubrl
addr16
and
int3
insb
out
jnp
out
add
or
ret
sub
pop
add
cmp
daa
flds
ficoml
cli
xchg
sub
subl
push
pop
push
and
jnp,pn
int3
shl
call
xchg
je
lret
rcll
and
test
mov
sahf
sbb
jno
mov
xchg
cmp
xor
cmpl
ja
mov
xlat
pop
pop
pop
push
mov
aaa
push
lea
movsb
mov
mov
mov
mov
sti
cwtl
mov
popf
xor
scas
mov
cld
mov
movb
mov
test
pop
test
jp
push
ds
inc
and
add
or
add
lock
insl
js
in
lea
and
imul
sub
jbe
call
mov
mov
dec
aad
ja
in
lret
arpl
sbb
je
xor
lret
clc
sbb
xchg
xorl
mov
xchg
pop
cmp
mov
mov
vpshufd
or
or
dec
imul
xchg
lock
aad
mov
rcrl
rcll
dec
aas
mov
sti
push
sub
call
leave
outsl
pop
scas
das
push
punpckldq
loope
es
cmc
push
loopne
hlt
insl
cltd
jnp
out
fwait
dec
jne
loope
std
inc
sbb
out
sub
jmp
xlat
stc
mov
xchg
ss
inc
pop
pop
repz
adc
jmp
fldl
cmp
push
pop
es
xchg
xlat
xorb
mov
outsb
insb
mov
or
mov
pop
and
sbb
iret
out
fnstenv
hlt
fs
push
push
add
dec
sbb
and
mov
xor
shlb
mov
pop
cltd
loope
notl
jno
outsl
mov
inc
popf
add
adc
scas
xor
mov
fcompl
imul
jge
jns
adcl
add
icebp
adc
jmp
pop
push
mov
xchg
daa
jmp
mov
pop
xor
jecxz
or
nop
in
inc
push
add
sbb
fbstp
sub
mov
rcll
and
cmp
mov
pop
aaa
adc
idiv
lods
or
cld
lods
or
inc
dec
icebp
jae
jle
out
out
cmp
in
or
and
mov
jecxz
sub
or
sti
ret
cmp
inc
push
xchg
cmp
test
mov
cs
and
push
loopne
add
arpl
push
out
stos
pop
xor
insl
sub
adc
dec
inc
inc
xchg
xorl
movsb
rolb
ret
sbb
cmp
push
andl
cmpb
sub
dec
xchg
add
xor
call
mov
cmpsb
push
mov
imul
xchg
rol
add
mov
pushf
lcall
push
in
jge
pop
mov
push
fisttpll
xchg
xchg
cld
ds
xorl
xor
into
mov
pop
imulb
loope
dec
jl
out
jno
mov
xchg
ljmp
scas
inc
stos
test
aaa
es
jno
adc
shl
pop
cmpsb
push
das
lahf
pop
or
mov
dec
test
mov
pop
pop
hlt
lahf
lret
jb
sub
inc
inc
sbb
lret
fcoml
mov
dec
push
push
pop
sub
loopne
data16
mov
sub
xor
jg
mov
add
jge
xlat
xor
jne
adc
ret
xor
sbb
xor
push
test
inc
dec
and
ss
inc
mov
hlt
xchg
sbb
xor
in
xchg
mov
gs
cmp
testl
push
insl
stc
and
push
fdivl
imul
jmp
xchg
lods
inc
cs
hlt
jnp
shrb
xchg
jne
mov
xchg
std
mov
subb
or
xchg
ret
lods
push
adc
inc
aad
xchg
or
add
pop
insl
inc
andl
loopne
mulb
adc
inc
cmp
jno
fmulp
shrl
xchg
mov
cltd
dec
push
dec
cs
stos
mov
cld
jmp
jb
pusha
or
icebp
dec
ljmp
inc
out
es
push
pop
loope
mov
add
dec
adc
push
jae
mov
cmp
dec
div
ret
arpl
jno
or
cmpb
sbb
testl
cmp
icebp
subl
test
fs
in
cmp
adc
adc
xchg
inc
cmpsl
std
xchg
outsl
add
aaa
addr16
ss
test
add
daa
aad
jnp
or
mov
fs
sub
pushf
pop
cld
jne
scas
add
pop
xchg
mov
cmpsl
cli
hlt
nop
and
cmpsl
jae
cmpsl
mov
inc
push
adc
out
xchg
test
and
inc
xchg
pop
rorb
hlt
je
enter
push
test
mov
xchg
pop
fsubrl
and
rcr
es
or
xchg
rorb
hlt
movsb
pop
mov
jmp
mov
mov
mov
jns
popf
stc
out
fs
jge
jne
xchg
enter
cmp
into
sub
in
lcall
sub
arpl
push
cmp
sub
dec
push
pop
lcall
into
clc
dec
lahf
add
sbb
pop
or
cs
push
cltd
in
sti
mov
adc
sbb
mov
mov
lea
pusha
test
sub
push
or
loop
outsl
pop
jno
xor
cmp
lret
in
sbb
sub
xor
out
jg
pop
divb
call
add
jne
pop
iret
sar
xchg
mov
add
xor
sahf
out
aam
push
cmp
ja
inc
lds
add
jbe
jb
jmp
test
ljmp
test
mov
rorb
std
ja
fcmovne
xchg
sbb
scas
sbb
cmp
cmp
mov
push
aam
ds
setg
shlb
stos
xchg
repz
xchg
sub
add
pop
shll
and
push
push
dec
xor
fwait
shrl
ljmp
ljmp
add
js
adc
cmp
movsl
or
roll
arpl
shl
out
enter
ficomps
cwtl
mov
adc
out
or
mov
sub
add
cmp
push
mov
pop
cmc
push
mov
mov
clc
arpl
mov
enter
lds
mov
xor
dec
ljmp
or
dec
das
je
scas
inc
lods
mov
ss
dec
inc
popa
lahf
add
mov
dec
xchg
mov
mov
pop
inc
fcmovne
pop
out
sarl
cld
jp
lret
lret
or
ja
push
mov
or
incl
icebp
cmc
stc
gs
into
sbb
push
leave
pop
testb
or
dec
sbb
mov
movsl
push
push
mov
sbb
mov
into
pop
xchg
inc
dec
mov
pop
sub
lods
pop
xchg
push
mov
xor
push
testl
fiadds
lahf
dec
addb
push
pop
jb
add
pop
pop
ficomps
mov
xchg
lcall
or
aaa
fstps
push
mov
cmp
jns
loopne
popa
fimull
ret
mov
aad
into
pop
orb
jge
test
inc
cmp
sub
movsb
loop
and
nop
jmp
js
incl
je
cmp
lea
push
inc
ljmp
jbe
xor
call
outsl
push
lret
mov
push
movsl
sbb
sub
imul
repnz
mov
sub
cmc
das
sub
adc
xor
rolb
iret
inc
dec
push
xchg
rcrl
pop
fwait
dec
add
shrb
arpl
jne
or
in
lcall
test
cmp
inc
mov
sub
cli
mov
imul
sbb
in
orb
xchg
xor
mov
sub
rcr
popf
movsb
cmp
in
aam
cmp
arpl
lea
pop
test
dec
int3
dec
mov
int3
dec
cwtl
mov
inc
in
jmp
mov
fcoml
xchg
push
cltd
and
xlat
sub
push
jnp
sbb
pop
add
test
xorb
push
mov
sub
je
int
lock
pop
mov
jo
mov
push
pop
dec
out
cmp
mov
jge
xchg
loope
inc
mov
push
cmp
xor
mov
xor
mov
lds
add
fbstp
fistpll
add
fisubl
stc
xchg
push
mov
inc
push
mov
iret
lods
daa
shl
xlat
jecxz
xor
sbb
lock
fnstsw
mov
xchg
insl
sub
pop
loopne
cmc
imul
xchg
daa
in
sub
fwait
scas
fmul
iret
jnp
bound
call
stos
addr16
mov
mov
bound
in
pop
das
xchg
mov
or
scas
outsl
and
dec
xor
hlt
gs
lock
cmc
sub
sub
xor
repnz
add
in
add
push
dec
outsl
jl
add
fsubrl
inc
pop
mov
xchg
dec
add
mov
aam
adc
jb
push
arpl
in
dec
sbb
cmpsl
movsb
icebp
push
movsl
jle
xchg
sahf
leave
inc
jle
ret
pop
mov
shll
xchg
push
push
subl
cs
and
scas
and
in
cmc
pop
and
cs
pop
pop
es
mov
insl
movsb
xlat
nop
xor
ja
jnp
push
ret
shr
xlat
stos
mov
imulb
dec
test
notl
ja
pushf
and
cs
pop
sub
or
call
sarb
xchg
mov
test
je
repz
out
or
icebp
and
jg
stos
pop
stc
dec
popf
cs
fisubs
popa
cltd
scas
int
rep
cltd
dec
xor
push
inc
push
mov
xchg
ret
jo
outsl
adc
jns
xchg
cmpsb
mov
and
jmp
insl
xor
outsb
out
ljmp
flds
and
sub
xlat
in
lods
mov
sbb
mov
mov
push
push
subb
inc
and
testl
dec
cmp
sub
daa
fisubl
cmp
in
out
mov
mov
mov
jns
cmp
push
add
lcall
hlt
jno
dec
sbb
pushl
push
xor
dec
and
jnp
mov
lods
es
push
add
stos
push
jecxz
divl
jno
fisttps
shrb
mov
lock
mov
pop
jle
sub
cmp
mov
inc
pop
xchg
nop
addr16
xchg
lret
cs
icebp
push
push
cwtl
cs
dec
sbb
icebp
mov
push
outsb
xchg
pushf
cwtl
mov
pop
addr16
inc
dec
xor
loopne
mov
mov
loop
mov
push
popa
pop
mov
cmc
fcom
outsb
lahf
push
into
imul
mov
imul
push
xchg
push
pop
or
in
mov
insb
notl
jo
sbb
jb
xchg
ljmp
pop
mov
cli
repz
or
roll
lock
jecxz
into
enter
shll
in
int
inc
fsubrs
lret
pop
shlb
mov
inc
xor
xor
push
lret
insl
arpl
pop
sahf
aaa
pop
addr16
mov
daa
dec
push
rcrl
rclb
mov
rcrl
bound
cs
sbb
mov
imul
push
arpl
add
inc
scas
lds
das
out
dec
icebp
xchg
in
lea
push
sub
xor
xor
outsb
test
sub
adc
add
sbb
int
push
pop
pop
push
push
aaa
jnp
mov
inc
lock
adc
js
sub
jmp
rcrb
gs
into
dec
push
movsl
out
out
imul
mov
pop
jp
or
jmp
xor
and
aad
test
mov
push
les
repnz
cmp
rcl
inc
arpl
clc
add
inc
cmpsl
insl
dec
jge
repnz
adc
xor
pusha
sti
mov
or
pop
ds
dec
in
enter
test
cmp
mov
jbe
adc
push
inc
insb
lret
add
nopl
movsl
dec
ljmp
dec
mov
fwait
mov
rcl
xchg
mov
adc
mov
lods
sbb
loop
xor
and
sub
sbb
jg
push
inc
sti
sub
push
fmul
xor
enter
lods
repnz
jmp
jge
pop
daa
inc
lea
lret
insl
inc
ret
adc
mov
sub
orl
in
fstps
or
jbe
ror
rsqrtps
clc
cmc
jne
mov
repnz
mov
bound
and
movsb
pop
stc
pop
andb
jmp
mov
insb
outsb
or
sbb
ss
push
loop
xchg
mov
sbb
lahf
cmpsl
movsl
add
fiaddl
jnp
jmp
xor
inc
push
loop
loopne
xor
mov
fwait
jl
addb
cli
out
sbb
jl
xchg
stos
incb
aaa
inc
mov
pusha
or
and
add
enter
cwtl
push
adc
sub
add
rclb
jecxz
stos
mov
cmp
fnsave
in
ret
iret
sbb
dec
rorb
sub
sti
vhaddpd
inc
xor
cmpsl
incl
pop
movsl
clc
into
jl
pop
lds
movsl
push
push
cltd
mov
adc
mov
or
add
mov
std
ja
jb
scas
jmp
mov
sbb
dec
lret
jo
mov
test
repz
inc
mov
mov
jb
xchg
into
out
cli
push
aaa
cs
inc
xorl
lods
out
lret
leave
inc
inc
mov
and
aam
push
popf
inc
pop
cmpl
jb
into
add
push
and
push
xchg
jp
daa
pop
push
gs
icebp
pop
sahf
mov
jp
fidivrl
cmp
rorl
push
cltd
leave
push
sbb
xchg
into
test
add
sub
aad
xchg
daa
enter
lods
loopne
add
shll
or
inc
in
sbb
mov
daa
mov
imul
popf
jmp
inc
push
adc
push
sahf
add
cmp
lcall
jo
data16
xlat
in
jge
nop
sub
inc
popa
mov
jno
pushf
jae
mov
or
xor
mov
dec
xchg
inc
push
mov
stos
mov
adc
adcl
ret
shl
andb
sahf
ficompl
sbb
cmp
bound
xchg
mov
and
test
pop
insb
aad
sbb
mov
iret
push
popf
fisubrl
outsl
pop
or
outsl
push
lea
aaa
mov
roll
repz
cs
push
cmpl
inc
pop
adc
inc
adc
lret
push
ficoml
push
mov
jnp
pushf
and
sbb
lock
mov
les
pop
lods
jmp
dec
sbb
and
movsl
mov
push
sub
rcr
into
in
hlt
lcall
jmp
fidivrs
sahf
add
movsl
clc
in
xchg
dec
jl
jmp
jmp
cmp
cwtl
jno
mov
jg
call
test
add
pop
jg
mov
jo
cltd
add
mov
xor
mov
stos
ljmp
mov
pop
out
mov
mov
xor
inc
dec
inc
xchg
loop
mov
outsb
enter
push
or
ljmp
mov
sbb
addb
push
push
push
testb
lret
shlb
addb
push
int3
push
in
push
inc
cli
sahf
test
jge
fcmovnbe
sub
mov
push
mov
out
jb
loope
cmpsb
and
stos
mov
pop
aam
dec
or
adc
xor
lret
xor
xchg
pop
fsts
aaa
fbstp
lods
xchg
leave
sbbl
addr16
lds
jbe
mov
lret
jo
jp
aam
mov
sub
outsb
addl
jmp
repz
push
push
adc
mov
xchg
add
icebp
xor
insb
adc
lods
lods
pop
sub
mov
mov
scas
stos
adc
jg
mov
jecxz
add
je
in
cmp
push
pop
fcomi
lea
ss
lods
sbb
movsb
jge
push
inc
rorb
cltd
and
loope
andb
inc
shl
adc
pop
sbb
js
cs
xchg
cltd
mov
js
adc
fnstsw
in
sbb
inc
insb
cmpsl
xor
pop
int3
je
icebp
scas
ljmp
scas
mov
adc
push
arpl
pop
test
cmp
lcall
sbb
int
push
xchg
out
xchg
inc
fcom
fnstcw
in
ljmp
add
cmp
sub
add
mov
mov
push
pop
mov
xchg
bound
loop
mov
cmp
xchg
or
push
jo
mov
xor
or
insb
les
mov
ffreep
lds
sbb
push
movsb
xchg
xchg
and
in
fwait
xchg
mov
das
or
sbb
ds
shlb
jmp
jno
lds
cmp
icebp
adc
jge
aas
adcl
hlt
ret
popa
add
adc
fnstenv
popa
insl
dec
mov
lea
aam
sub
pop
inc
mov
push
imul
mov
push
lea
rclb
adc
add
sti
std
jp
xchg
arpl
lcall
movsl
sub
mov
push
pop
shlb
cmp
mov
cmp
mov
lods
lcall
adc
inc
idivl
pop
jmp
pop
ljmp
je
sbb
jo
mov
lea
lds
shr
subb
imul
mull
clc
push
sbb
xchg
out
and
es
push
inc
jp
fimull
xor
sbb
sarl
ret
into
cmpl
mov
dec
mov
imul
clc
outsl
std
cmpsb
inc
aas
cs
dec
mov
dec
in
addb
ja
andb
ret
negl
xor
xchg
fidivrl
in
xor
jge
add
mov
loope
pop
push
imull
stos
cmp
mov
lods
push
lock
fdivrl
sbb
aas
inc
mov
pop
push
sbb
pop
nop
cli
jns
xchg
outsb
loope
xchg
adc
adc
inc
rcrb
jae
mov
lds
imul
in
out
testl
cld
push
addr16
xor
sbb
add
adc
cmpsb
inc
push
mov
insb
leave
cwtl
lea
inc
psllw
aaa
mov
mov
adc
mov
div
push
notb
pop
xchg
push
cltd
divl
aas
test
or
cmpsb
std
movsl
sub
and
loope
shlb
stc
mov
jmp
lcall
std
into
ss
rcrl
subb
aad
dec
aas
es
xor
mov
outsb
mov
jns
xorl
dec
add
shl
jg
push
leave
jnp
pop
aad
mov
ss
mov
es
jg
popa
and
movl
out
push
test
pop
jbe
lods
sub
dec
fwait
fs
lea
jno
inc
mov
aam
dec
push
xor
incb
les
lock
fstps
push
out
outsb
mov
inc
mov
in
or
mov
mov
outsl
add
push
adc
pop
inc
stos
cmp
dec
add
loope
stc
daa
push
xlat
jbe
sub
rcrb
push
fidivrs
push
js
in
fiadds
pop
xchg
mov
xor
jle
jne
push
mov
in
faddl
sar
mov
cmp
inc
sbb
xlat
lods
call
nop
jns
cltd
clc
mov
das
subl
ret
vmaxss
into
xlat
push
mov
pop
ja
inc
sub
pusha
dec
xor
adc
fcmovnu
iret
dec
sub
test
ja
add
fdivrl
inc
ret
loope
sub
sbb
pop
and
repnz
sub
sub
mov
mov
cmc
pop
scas
sbb
sub
out
jo
aad
push
aad
inc
mov
mov
aas
dec
pop
jmp
insl
jp
dec
loop
and
sub
cmp
inc
mov
pop
adcb
mov
imull
add
adc
addr16
pop
jg
cmpsl
arpl
cmp
dec
pop
aas
push
insb
jecxz
stc
mov
xchg
push
dec
push
stos
push
cmp
adc
enter
int
ret
scas
jmp
push
lods
popa
cmc
jge
mov
jecxz
into
and
xchg
fwait
sbb
mov
pop
std
cs
xlat
rol
lods
das
xchg
scas
jl
rcrb
fsts
ret
xchg
fadds
js
add
mov
out
adc
cwtl
mov
jno
jg
out
dec
lods
je
xor
aas
push
mov
xchg
or
imul
pop
es
ljmp
aaa
mov
shl
clc
aam
xchg
fadd
pop
iret
inc
dec
or
test
push
push
cmp
sar
and
das
push
sbb
add
push
dec
inc
movsb
inc
gs
pop
mov
insb
mov
fsubs
pop
stc
dec
cmpsl
xchg
cmp
pushf
adc
movsl
mov
adc
repnz
imul
mov
loopne
addb
cs
adc
adc
xor
add
rcll
pop
cltd
mov
sub
pop
stos
add
std
sbb
into
ret
push
sbbl
push
int
add
or
stc
pushf
mov
lret
or
cmpsb
xchg
jbe
pop
call
pusha
pop
lds
and
mov
aam
mov
stc
js
cmp
addl
xor
scas
push
ret
adc
sbb
fadds
sub
shrl
movsb
lret
insb
pop
sub
pop
inc
fidivrs
adc
cmpsb
xor
lret
enter
test
popa
add
adc
lret
clc
ss
sbb
inc
scas
sub
sti
subl
nop
dec
mov
lret
sub
neg
adc
enter
leave
loop
into
dec
dec
xorl
sub
sahf
test
or
push
dec
xor
nop
cltd
or
cmpsl
iret
dec
js
pop
test
adc
sarb
sbbb
popa
ja
mov
gs
jnp
pop
imul
xchg
rcll
jle
int3
sbb
lods
dec
push
mov
sbb
cmp
js
mov
mov
dec
sbb
stc
cltd
repnz
in
mov
lea
ds
or
jno
sbb
jle
fdiv
inc
push
test
cltd
lret
cmp
mov
mov
outsl
je
sbb
fmul
lock
mov
lods
insb
addl
test
ja
flds
dec
jecxz
mov
sbb
mov
gs
adc
xchg
stos
test
inc
and
push
pop
inc
dec
out
ss
je
fs
gs
loop
fstpt
mov
outsb
mov
imul
in
sub
imul
rolb
cs
add
test
mov
mov
clc
adc
xor
jmp
loop
and
cli
insl
out
jmp
lods
ja
jecxz
xchg
xchg
jns
aas
mov
pop
mov
in
inc
shll
call
in
sub
mov
dec
mov
lea
dec
fs
xchg
jnp
jge
or
add
adc
lods
xchg
mov
roll
mov
ja
inc
sarl
push
adc
sub
into
jmp
pop
adc
xchg
movb
mov
mov
dec
push
and
push
xor
xchg
xchg
lret
mov
jbe
add
mov
sub
pusha
cmpsl
mov
sbb
sbb
adc
loope
mov
adcl
xor
lods
jne
sbb
mov
adc
inc
stos
aas
or
aad
std
outsl
gs
loope
out
cmp
cld
sbb
and
or
mov
pop
test
adc
addb
call
pop
lahf
int
jg
mov
repnz
lds
push
jne
inc
fistps
aaa
lock
insb
orl
pop
lods
fsubs
add
cltd
rorb
xchg
shll
pop
jb
scas
aas
sbb
fldcw
mov
jnp
and
test
rcl
dec
jb
mov
cwtl
out
divl
iret
xor
mov
loop
roll
inc
lods
xor
cmpsb
push
mov
jg
cmpsb
movsb
enter
or
mov
ss
push
mov
cmp
mov
mov
rol
mov
fwait
js
daa
or
mov
push
icebp
in
pusha
movsl
add
push
pop
shlb
nopl
add
or
testl
mov
xchg
ljmp
insb
jae
rolb
xor
sbb
mov
inc
fcmovb
mov
inc
incl
mov
add
sbb
lea
in
mov
movaps
adc
popf
dec
xchg
andl
push
repz
sub
in
and
add
pop
fsubl
test
mov
cwtl
lahf
push
rcrb
push
cwtl
pop
setb
push
repnz
mov
cmc
jo
jmp
mov
jp
jmp
sbb
pop
pop
dec
insl
inc
std
inc
push
jbe
cmp
loopne
scas
jp
mov
add
scas
and
sub
inc
jne
xchg
add
mov
mov
sub
sub
pop
mov
rclb
add
and
jo
fidivs
shrl
adc
and
pusha
jbe
loopne
mov
sti
lds
data16
push
push
fimuls
and
gs
out
adc
loope
incl
and
mov
lods
stos
jnp
mov
sub
mov
xor
and
xorb
outsl
lret
and
mov
push
out
scas
pop
in
adc
inc
aad
insb
cmpsb
daa
add
jp
or
lret
ss
out
popa
add
dec
cli
divl
mov
hlt
xor
sub
jb
stc
test
dec
outsb
subps
loopne
and
aaa
dec
fxch
inc
or
ret
mov
jne
inc
cld
cld
and
adc
push
mov
add
sub
sbb
mov
clc
ss
mov
sub
xor
mov
call
sbb
popf
push
jb
push
inc
pop
sbb
movsb
sbb
ficoms
pop
adc
inc
fdiv
daa
out
das
in
pop
into
les
sub
je
jp
dec
push
jle
sbb
loop
outsl
hlt
outsb
mov
repnz
pop
movsb
cmp
inc
xorb
bound
lock
stos
out
in
cmpsl
sub
pop
testb
fdivrl
or
xorl
xlat
push
leave
mov
lret
mov
cmp
and
hlt
xor
cmp
enter
dec
pop
cmp
pop
test
mov
jns
mov
imul
fwait
adc
mov
inc
flds
mov
push
mov
or
and
adc
pop
insl
pop
out
fwait
rorl
pop
xchg
leave
cmove
imul
fstpt
and
or
subl
xchg
or
test
scas
in
es
rclb
adc
mov
test
pop
jae
fildl
adc
int3
dec
dec
iret
lret
addb
push
add
inc
pop
dec
pop
jg
clc
push
cwtl
mov
cmp
add
mov
enter
fldlg2
shll
rorl
xlat
outsb
jns
add
inc
cmp
push
xchg
rcr
into
call
addr16
lods
mov
add
lahf
movsb
xchg
push
xlat
pop
test
stos
jl
sbb
into
add
sub
cmp
jns
imul
in
sub
rol
sbb
imul
stos
push
mov
ljmp
jne
loope
push
push
jnp
arpl
shrb
add
inc
stc
adc
cli
cmp
push
lcall
rcll
out
jno
push
orb
lret
push
mov
cmp
addb
jns
xor
pop
out
pushf
es
or
lahf
psrlq
call
jle
jle
or
lods
push
adcl
jg
fwait
add
jg
into
roll
outsb
sbbl
test
fsin
cmp
xor
cltd
mov
inc
push
cmp
and
rolb
subl
movsb
insb
cli
push
or
and
mov
outsl
add
js
xchg
pop
dec
push
push
inc
pop
pop
adc
enter
imul
and
inc
data16
aad
inc
in
mov
in
cmp
mov
dec
pop
xor
les
roll
push
push
cmp
dec
fabs
scas
inc
jle
dec
push
mov
mov
cmpsb
push
ficoml
mov
fwait
xor
push
dec
out
imul
shr
xor
mov
dec
or
cmp
inc
jns
test
movsb
lds
ljmp
or
out
xchg
push
sub
bound
push
xchg
xchg
aad
pop
push
lret
jg
jp
lret
in
push
push
pop
push
lret
fcmovnb
adc
popa
popf
hlt
xchg
dec
or
push
and
out
lock
push
mov
mov
sti
add
sub
xchg
cmp
jecxz
int
sub
or
xor
push
cmp
in
mov
jp
inc
lcall
or
jne
loopne
cs
dec
dec
mov
inc
shll
mov
fs
and
in
adc
in
fwait
out
mov
outsl
pop
sbb
mov
andl
dec
movlps
lahf
cmpsl
or
fldcw
adc
bound
pop
sub
dec
pusha
lock
loopne
cmp
pop
adc
mov
jp
scas
bnd
int3
fsubrs
dec
pop
xchg
inc
and
mov
movsb
push
cld
lea
cmpsb
cs
xchg
mov
in
xchg
pop
xchg
out
aaa
mov
das
data16
inc
mul
push
sbb
pop
adc
xchg
sarl
cmc
add
adc
mov
adcb
jbe
dec
or
xchg
push
dec
jg
jns
lods
iret
pop
cmp
je
into
dec
mov
mov
jno
aad
aad
jge,pt
dec
int
dec
and
adc
jo
sub
push
adc
xor
ss
ficomps
icebp
and
scas
and
mov
push
or
jmp
cmp
mov
jns
pop
cmc
ss
fldl
inc
mov
ds
repz
push
inc
test
ret
jne
cmp
pop
popa
mov
orb
cs
add
je
into
repnz
jl
mov
dec
adc
dec
loop
jns
push
inc
xor
clc
cmpl
sbb
mov
or
push
adc
jno
into
mov
and
xlat
popf
enter
mov
lahf
xchg
mov
shll
jno
push
and
out
xchg
pop
mov
add
gs
jecxz
or
mov
arpl
cli
sbb
cld
sub
inc
and
clc
cli
push
je
stos
je
ds
xchg
call
dec
push
loope
int
out
add
xchg
bound
fdivs
inc
enter
testl
mov
pop
jno
jp
out
lea
imul
jmp
inc
xchg
lock
out
leave
cmp
ret
sbb
aaa
mov
cmp
aam
pop
add
xchg
push
jb
adc
dec
pushf
scas
pushf
push
lods
out
add
pop
fildl
fwait
pop
into
and
cmp
jge
xorl
repnz
adc
stos
jo
leave
mov
sub
aam
mov
cmp
imul
cmp
daa
ret
popf
lock
imul
mov
sub
mov
arpl
outsb
test
pop
cmp
ss
push
cmp
int
shll
sbb
mov
outsl
lret
sbb
lods
mov
adc
das
fisubl
addps
call
test
mov
push
and
call
sbb
or
lcall
aad
lret
mov
mov
aam
out
fmull
fptan
mov
pop
mov
lret
repz
xchg
enter
xchg
push
test
inc
test
add
pop
cmp
mov
push
insl
mov
push
xchg
fsubs
inc
mov
fs
or
ret
push
add
pop
jae
jbe
addl
ja
in
das
iret
addr16
notl
pop
adc
out
pop
std
xor
lret
and
adc
ret
dec
xor
aad
cmp
cmpsl
xchg
loope
and
stos
add
je
test
xchg
inc
xchg
fnsave
sbb
lret
cli
sbb
sarb
xchg
cmc
push
push
sbb
ret
mov
cmpsl
xchg
hlt
dec
div
lds
es
push
or
push
sbb
cmp
aad
mov
lahf
adc
das
or
or
mov
xchg
enter
movsl
sbb
mov
jbe
loopne
xchg
std
nop
add
cmp
jo
adc
cmpsb
jb
jo
cmp
xchg
jno
mov
lret
es
test
xor
sbb
or
mov
shl
je
jo
sub
jl
call
fsub
inc
subl
lds
out
mov
pushf
sahf
xchg
mov
push
ljmp
sub
pop
xor
xchg
das
aam
or
ss
fwait
xor
ljmp
fnstsw
pop
cmpsb
and
fcompl
rcr
mov
jne
lds
mov
repz
dec
lret
sbb
je
dec
scas
mov
mov
xor
hlt
cmp
imul
movsl
imul
das
sbb
push
push
in
lret
aaa
cmpsl
iretw
jnp
iret
shr
fldenv
add
test
jmp
repnz
test
popf
fcmovb
imul
jg
sub
lahf
xchg
in
in
dec
dec
shll
jne
inc
push
add
fistps
rolb
stos
push
xchg
pop
inc
mov
jle
and
xchg
fbld
outsb
mov
mov
jmp
movsl
bnd
pop
sub
ds
and
lds
and
gs
movsl
adc
push
mov
cmp
add
sbb
stos
dec
inc
and
test
out
or
mov
scas
mov
mov
outsb
jbe
jns
pop
inc
aaa
sbb
mov
xlat
sahf
push
fbld
dec
mov
mov
mov
ss
psrlq
mov
mov
test
fdivrl
xor
in
mov
pop
sub
stos
stos
pop
dec
roll
rep
cmpsl
mov
psubq
push
xor
inc
sar
mov
pop
sub
or
and
test
jb
insl
jle
or
fstl
aas
cmp
sub
cwtl
or
int3
sub
test
jp
jo
adc
push
sahf
dec
and
ds
imul
xor
fldl
outsb
push
sbb
popa
shl
std
mov
aad
or
adc
stos
ja
xchg
lcall
push
pop
mov
in
js
rep
push
pop
scas
cmc
shrl
scas
push
pop
inc
outsl
mov
mov
rclb
mov
outsb
or
xor
mov
jle
loopne
or
repnz
xchg
xor
sahf
orb
into
fwait
mov
lret
aad
jo
push
scas
dec
pop
cmp
rorb
ret
bound
lret
mov
inc
or
hlt
jns
pcmpeqb
imul
adc
mov
push
setb
dec
imul
xchg
stos
insb
repnz
sub
cmp
std
push
jge
shr
in
mov
or
pop
rcr
push
sahf
mov
dec
fsubrs
jo
sub
mov
jbe
cwtl
inc
ja
inc
in
int
push
imull
or
push
fwait
daa
dec
test
push
aad
pop
mov
push
mov
loopne
mov
pop
fstpt
in
xor
push
dec
add
jne
stc
mov
rcll
mov
sub
or
into
push
xchg
outsl
mov
lods
sbb
inc
aad
mov
and
mulb
mov
cmp
test
fstps
ret
cs
out
cmpsb
xlat
cld
xchg
pop
stos
push
cli
pop
mov
lcall
adc
adc
shll
aad
jmp
js
leave
push
icebp
aas
shlb
cltd
fisubrs
mov
jbe
ret
in
xchg
sbb
inc
dec
cmp
xchg
push
iret
xor
fnstsw
or
lcall
stos
dec
and
push
mov
adc
je
jno
cmc
jne
daa
sub
sub
mov
adc
pop
mov
gs
and
int
dec
fstl
inc
out
inc
mov
lret
mov
arpl
jns,pn
mov
cmp
addr16
jo
xchg
sub
mov
cmp
dec
dec
jmp
dec
daa
pop
xor
cli
rol
dec
call
out
xor
inc
push
dec
pushf
gs
stos
mov
and
push
lea
imul
lock
xor
cmc
or
bound
clc
daa
loop
repnz
mov
cmpsb
or
mulb
sbb
outsb
inc
aad
or
push
and
xchg
push
lea
imul
js
mov
jg
leave
negb
pusha
sub
mov
pushf
xchg
sbb
jg
push
adc
push
pop
mov
xor
lock
cmp
sbb
dec
fwait
incl
lods
or
push
call
jg
inc
sahf
mov
leave
fs
aam
stos
test
push
adc
sbb
push
push
mov
xor
pop
popa
cmc
mov
cmp
mov
sub
pushf
push
pop
in
inc
sbb
xor
cmpsl
jnp
and
sti
mov
sti
fisttps
jnp
xor
inc
xchg
sbb
push
jmp
outsb
lds
jmp
cmp
ja
jnp
pop
std
xor
ds
or
inc
add
mov
dec
ljmp
or
movsb
or
mov
xchg
fisubl
xchg
aaa
sbb
cwtl
xor
insb
incb
outsl
cmp
movsl
aad
repz
mov
cltd
lret
mov
or
xor
test
adc
mov
lcall
ret
rorl
aad
pop
pop
outsb
mov
sarb
es
fdiv
sarb
jle
js
sub
repz
into
xlat
iret
pusha
and
cli
aaa
daa
jb
add
test
adc
std
or
mov
inc
sbb
in
inc
jo
out
cmpsb
in
xchg
and
out
and
stos
das
lcall
hlt
lret
push
leave
sbb
adc
adc
subl
jecxz
push
sub
inc
icebp
jle
lcall
xchg
sahf
mov
loop
mov
xor
popf
lret
rolb
mov
sub
push
ss
and
mov
mov
aas
jne
cmp
sub
fucomip
dec
xchg
in
js
lret
sbb
mov
inc
mov
sub
fs
adc
loopne
es
or
dec
mov
mov
push
mov
out
stc
and
push
mov
pop
jmp
push
es
mov
or
xlat
rclb
imul
clc
sbb
imul
adc
sbb
sbb
out
sarb
jecxz
cmp
add
test
cltd
add
shlb
sub
int3
pop
sbb
xchg
bound
jns
jl
std
inc
fdivrp
imul
filds
xchg
pop
inc
movsl
mov
xor
ret
addb
iret
dec
add
pushf
in
cmp
mov
les
sbb
addb
sub
pop
mov
jno
gs
xchg
push
push
jg
imul
ss
push
es
cmp
cs
inc
pop
inc
jl
push
inc
add
aas
mulb
or
imul
pop
or
mov
ret
lret
subb
mov
repnz
push
xchg
sti
push
adc
ret
mov
cmp
cmp
out
cmc
dec
jl
popf
lock
push
test
inc
push
jp
cmp
jmp
sub
sbb
cmpsb
mov
adc
or
ss
adc
mov
inc
mov
call
test
pop
sub
cmp
mov
inc
cmc
fcomip
mov
sub
pop
sub
sub
inc
int3
inc
cmp
or
push
and
mov
adc
loop
lods
shl
and
add
mov
dec
outsl
jp
ljmp
pop
les
xchg
in
sbb
int3
fs
cld
sub
pop
mov
enter
mov
mov
dec
repz
xchg
and
stos
fucomip
lahf
jae
inc
std
sub
mulb
jo
leave
push
mov
aaa
ret
adc
shll
xchg
fistpll
jb
inc
add
push
mov
mov
adc
cld
dec
fisttpl
jnp
fimuls
xor
sub
lods
scas
xor
lock
orl
cld
and
loop
addl
jg
lcall
mov
movsl
ljmp
dec
subb
sti
cltd
loope
add
rcll
mov
movsb
pop
popf
pop
push
bswap
mov
rol
fwait
add
sbb
xor
out
shl
testb
pop
or
push
dec
dec
push
mov
mov
addl
andb
cmp
das
rorl
hlt
push
cli
es
xchg
pop
rep
popa
xor
mov
leave
jae
idivl
mov
popf
push
jg
push
inc
das
jp
xchg
xchg
call
or
sbb
inc
imulb
jo
faddl
movsl
cs
daa
in
cmp
clc
push
add
lcall
in
outsb
xchg
cmp
scas
push
push
mov
cmp
jg
popf
stc
inc
and
inc
push
div
adc
jno
xchg
out
xor
add
xchg
adc
mov
add
or
jg
xlat
pop
pop
call
jns
add
adc
jl
sbb
lds
cmpb
and
sbb
push
xchg
mov
add
push
mov
push
jle
imul
xchg
repnz
sbb
and
add
adc
js
test
stc
sbb
pop
jns
pop
mov
sub
insb
aam
xchg
pop
popa
or
xchg
fldcw
arpl
cmp
mov
cmp
cs
frstor
mov
test
xchg
jb
imul
inc
push
push
mov
fiaddl
rol
pop
cmp
mov
mov
jp
sbb
shlb
repnz
mov
shr
jns
rorb
mov
std
xor
test
cli
inc
insl
movsl
cmpsl
test
mov
mov
and
mov
icebp
mov
xchg
repnz
ds
les
aam
sub
dec
divb
in
dec
fnstsw
cli
insl
insb
mov
xchg
and
test
mov
push
sub
repnz
mov
inc
jns
mov
dec
test
in
ret
cmp
xchg
jbe
sti
rclb
jle
ja
or
mov
add
cwtl
mov
fwait
and
shlb
enter
mov
add
jle
lret
int3
inc
mov
pop
mov
mov
lahf
mov
xchg
jno
stc
imul
inc
aaa
adc
sub
jae
jmp
addr16
mov
push
mov
sbb
or
and
jnp
fadd
add
pop
dec
mov
stc
daa
push
pop
dec
jecxz
add
push
out
adc
pop
and
sub
and
mov
and
inc
cmp
test
sub
sti
sbb
dec
fdiv
lahf
sbb
sub
cmp
xor
cli
and
gs
fildl
jb
sbb
js
sbb
mov
rcll
add
cmpsb
fwait
les
mov
bound
cmpb
push
addr16
lret
lret
js
repz
int
stos
fdivrs
in
xor
pop
out
enter
mov
aaa
mov
cmpsl
jne
ds
mov
xor
xor
popf
xchg
xor
mov
jle
push
mov
lock
inc
pop
sahf
cmp
fcoml
scas
or
xchg
and
jnp
cmp
fwait
pop
xor
je
xchg
sti
push
jp
icebp
add
call
sbb
incl
add
push
cmp
mov
dec
data16
mov
enter
imul
pop
adc
cmpsl
mov
int
add
incl
mov
adc
inc
leave
sbb
lods
xchg
shlb
xor
and
arpl
mov
fistl
aam
shl
pop
jne
or
dec
movsl
ljmp
setle
stc
adc
mull
es
mov
mov
dec
or
mov
clc
mov
ficompl
insl
inc
inc
push
inc
jge
inc
lods
dec
test
add
sbb
push
mov
sti
sbb
push
lods
or
jmp
mov
dec
aad
xchg
sub
popa
test
push
mov
xchg
mov
mov
cwtl
sub
les
jns
insl
and
filds
cwtl
add
add
test
aas
jns
or
call
or
out
cld
lods
sbb
and
push
movsl
fwait
cmp
inc
cmp
cmp
mov
add
call
cld
dec
in
scas
adc
insb
outsl
mov
xchg
xchg
notl
outsl
mov
sub
sbb
mov
fs
andb
dec
orl
testl
xchg
das
sbb
test
gs
add
insl
jne
pop
testl
ret
xor
in
push
lcall
enter
adc
data16
pop
pop
std
fnstsw
xchg
xchg
rorl
xchg
cmp
popf
sub
mov
insb
push
shrl
out
nop
mov
fs
pop
aas
mov
mov
imul
andl
pop
aaa
daa
jmp
add
sub
mov
mov
es
scas
dec
aam
pop
test
jo
push
mov
mov
jmp
push
mov
or
add
adc
cltd
nop
or
fwait
mov
jno
jno
shrb
lods
mov
mov
and
sub
mov
fsubs
outsb
mov
ss
push
xchg
loop
gs
fcom
add
aaa
mov
mov
xchg
pop
mov
es
and
gs
inc
cmp
cli
pop
stc
stos
push
xchg
push
jge
and
fs
fisttps
cli
dec
ljmp
pop
mov
negb
xchg
dec
cmp
xlat
push
push
mov
push
xchg
jg
jbe
icebp
mov
adc
mov
int3
mov
xchg
ret
adc
dec
dec
ret
jne
nop
repz
notb
dec
lods
pop
push
inc
dec
in
sub
addr16
push
sahf
sbb
mov
fucomip
jl
adc
flds
addr16
out
pop
ffree
push
shlb
mov
pop
insb
xor
or
inc
xor
ja
cmp
inc
popa
xchg
cli
test
push
mov
es
movsl
and
out
enter
shlb
lcall
out
and
jb
mov
repnz
mov
cmp
inc
jnp
dec
mov
sub
insl
pop
sub
lahf
cmp
jge
clc
bound
xchg
test
cmp
add
sbb
push
clc
fisttpl
mov
into
pop
jae
ss
js
pcmpeqw
add
xor
pop
dec
lea
mov
xor
sahf
lea
or
inc
icebp
push
xor
push
insl
fsubrs
pop
and
jmp
dec
or
push
fs
mov
jb
in
mov
xchg
jl
dec
cmp
sbb
mov
fbld
dec
std
out
filds
dec
je
stos
push
dec
es
sarl
int3
lahf
push
push
xor
cmp
mov
mov
dec
lret
cltd
das
loope
dec
jno
xchg
out
sub
dec
inc
repz
jb
adc
sub
call
insb
jae
inc
aam
push
mov
jns
repnz
dec
sub
aad
mov
xchg
cmp
test
cmpsb
or
stos
cmp
push
lds
popa
stos
and
cmpl
jle
cmp
xor
push
and
iret
nop
mov
ss
in
bound
mov
and
mov
fmull
pop
inc
inc
popa
mov
push
ss
xchg
jg
mov
push
out
push
mov
repnz
lret
ljmp
mov
inc
lcall
xchg
cmp
imul
bound
add
cmc
mov
sub
and
dec
ljmp
leave
push
ds
insb
jae
mov
fadds
sub
shlb
not
loope
aas
fs
jge
jp
andl
ljmp
out
or
inc
xchg
sub
pop
or
cmp
pop
stos
in
call
and
pop
int
push
popa
add
fwait
sar
mov
test
xchg
push
jns
scas
jmp
xor
inc
add
jg
lret
xor
cmpsl
cmp
xchg
dec
xchg
sub
aam
bound
aas
sbb
popa
lcall
sbb
dec
pop
in
pop
sub
mov
push
jns
repnz
mov
mov
loop
movsl
fbld
lea
adc
dec
loopne
lret
dec
cli
aas
bound
andl
les
mov
outsb
mov
lods
adc
sub
adc
jg
sti
mov
gs
or
in
je
cs
in
or
mov
add
gs
mov
xlat
dec
inc
fwait
dec
repnz
push
push
addb
xchg
mov
xchg
and
aaa
ljmp
ret
movsb
fnstenv
mov
and
sbb
jbe
loopne
pop
ret
notl
fcompl
adc
mov
pop
idivl
les
mov
les
daa
xchg
insl
out
cmp
inc
xor
imul
xor
rcll
mov
xor
sub
adc
out
push
mov
int3
and
or
xchg
mov
mov
pop
repz
sbb
je
mov
pop
div
popf
sub
sub
jb
daa
std
pop
xchg
subb
in
sub
scas
ljmp
xchg
push
adc
lahf
adc
push
pop
and
add
sub
leave
call
inc
add
sub
xor
push
cli
outsl
pop
jecxz
std
enter
xchg
cltd
jmp
jns
pusha
sub
stc
ret
mov
pop
enter
sbb
aas
repz
rcrl
mov
outsb
add
je
imul
or
mov
imul
mov
push
rclb
cld
call
mov
xchg
movsb
jmp
cmp
subl
cmp
ljmp
roll
mov
inc
inc
dec
add
sbb
std
mov
test
es
dec
lods
frstor
mov
xchg
push
mov
sub
stc
mov
fcompl
dec
xor
ret
out
sbb
fcomps
test
jns
in
add
mov
imul
jl
repz
xlat
inc
xorb
xor
mov
mov
sub
or
add
cli
movsl
bound
pop
sahf
sub
adc
lock
mov
pop
inc
mov
sub
std
sub
stos
clc
test
shrb
fists
cmpl
and
jle
ja
cmp
push
push
xor
test
adc
hlt
mov
inc
into
mov
adc
and
inc
hlt
ret
or
push
and
fimull
add
lcall
stc
call
out
mov
dec
mov
pop
ss
repz
or
loopne
inc
jp
rol
dec
jmp
nop
imull
push
add
les
insb
lret
decl
imul
sub
cvttps2pi
insl
sbb
xor
xchg
int3
or
scas
loope
inc
cli
fs
and
insl
dec
ret
decl
xchg
hlt
mov
setg
outsl
orl
add
mov
pop
dec
adc
add
in
or
mov
lcall
stc
push
in
cwtl
inc
xchg
lods
lods
inc
and
mov
shlb
in
pop
pop
idivl
pop
jl
out
bound
arpl
movb
leave
sbb
mov
mov
ds
imul
xor
ljmp
fidivl
push
mov
jmp
sub
loop
sub
mov
jbe
mov
cmpsb
movsb
outsb
jbe
jb
pop
and
pusha
cmp
sub
nop
push
fnstenv
jno
lods
add
pop
ds
xlat
cs
in
loop
out
cmp
js
nop
push
and
stc
int3
dec
cltd
lds
ds
add
out
mov
push
cmp
cmp
fadds
imul
xor
pop
jns
pop
fcomp
sub
insl
push
ds
xchg
insb
pusha
fisttpl
stos
inc
jbe
mov
je
popa
and
jb
sub
fs
imul
jno
adc
xchg
pop
in
cltd
pcmpgtd
sub
cmp
insl
mov
add
ljmp
fistl
mov
sbb
push
xor
faddl
add
jnp
pop
les
leave
mov
negb
std
repz
pop
xlat
faddl
call
push
ret
imul
addr16
push
jmp
shll
inc
and
enter
lods
mov
ljmp
clc
add
loopne
insl
pop
or
test
push
sub
je
or
int
or
push
inc
aam
dec
adc
push
pop
mov
call
xor
sbb
jnp
rclb
leave
movsb
pop
scas
bound
in
imul
inc
shl
filds
xchg
add
jge
std
jle
bound
or
pop
repz
aaa
stos
mov
pop
std
jl
mov
das
movsl
push
adc
jg
mov
push
add
decl
and
mov
mov
ret
loope
mov
adc
stc
xchg
fs
mov
mov
cmp
je
inc
cmp
movsl
enter
es
mov
fisubl
pop
inc
stos
or
xchg
add
mov
sub
dec
aaa
fsubl
outsb
push
fsub
xor
or
out
mov
fistl
dec
dec
xchg
inc
icebp
pop
mov
and
push
popf
insl
inc
mov
push
mov
into
pushf
inc
and
imul
lahf
in
pop
int
inc
cmp
inc
jbe
push
mov
gs
hlt
mov
inc
mov
mov
test
adc
fsubrp
fwait
negl
out
and
push
call
pop
rcrb
sarb
ret
or
into
leave
mov
push
shll
out
add
push
or
shl
or
and
lds
out
mov
pop
mov
call
xchg
bswap
pop
dec
sbb
fsubrl
and
in
xchg
cmp
mov
loopne
imul
inc
or
clc
movb
pop
mov
inc
xchg
stc
movsb
aam
mov
xchg
arpl
and
js
rcr
roll
jp
jae
inc
and
test
mov
lods
xor
jge,pn
scas
mov
aaa
stc
popf
addr16
bswap
sub
movsl
test
mov
outsb
pop
mov
push
push
inc
cmova
cltd
mov
dec
push
mov
outsl
cmpsl
push
push
mov
cmc
sbb
sbb
sbb
ljmp
sub
mov
jle
cltd
es
mov
mov
lcall
cwtl
mov
push
cwtl
mov
rcrl
enter
xchg
inc
sub
sbb
adc
loope
dec
dec
jno
inc
mov
aad
mov
rclb
popa
add
push
call
in
mov
pop
xchg
adc
pop
cld
lods
pop
mov
cmp
fdiv
cmp
jno
lret
rcr
pusha
mov
insb
or
mov
push
xchg
ljmp
insb
pop
xchg
out
scas
push
or
xchg
cltd
push
dec
adc
ja
dec
enter
and
push
jg
popa
mov
add
test
subb
insl
nop
inc
je
sbb
jmp
xchg
fbstp
int
xlat
xchg
ljmp
cli
fwait
or
inc
stc
das
push
das
cld
lods
sti
testl
shlb
lcall
and
xchg
jno
and
leave
pop
hlt
lahf
xchg
out
cmp
jo
mov
xor
fmull
cmp
adc
call
jbe
std
mov
mov
mov
or
je
loope
xchg
pop
push
int
or
outsb
pop
lods
lea
ja
mov
nop
cs
xor
imulb
lret
ret
lock
xor
mov
mov
jg
fldl
pop
bound
call
enter
push
loope
sbb
xchg
inc
pop
mov
cmp
lods
adc
lcall
out
pop
ss
ret
call
movsb
scas
shrb
mov
mov
aam
dec
iret
je
cld
imul
cmp
dec
enter
xchg
cmp
mov
and
or
xchg
outsb
add
jmp
push
xor
cmp
inc
push
insb
add
out
imul
mov
shl
int3
icebp
inc
jle
ret
mov
in
add
std
movsb
inc
or
addl
push
and
cmp
ljmp
sub
out
out
fcomps
sbb
jnp
xchg
ja
dec
outsl
stos
sub
and
xchg
pop
add
or
adc
mov
out
add
mov
orb
fstps
dec
xchg
cmp
xor
adc
push
loopne
xor
or
mov
dec
pop
cmpsl
neg
iret
jge
inc
in
mov
and
movsb
pusha
mov
add
sarl
pop
push
sbb
stc
cmp
adc
pop
xchg
je
sub
sbb
cmp
xlat
xchg
inc
pop
xchg
cmpsb
cmp
pusha
mov
test
stos
test
mov
js
pop
dec
iret
push
inc
jb
daa
cs
jbe
cmpb
mov
and
push
push
lahf
jg
mov
push
adc
jae
xlat
xchg
cmp
test
mov
cmp
out
dec
mov
in
fdivrs
ret
dec
repnz
push
inc
adc
push
mov
mov
or
test
xchg
mov
add
ljmp
inc
stc
mov
pushf
bound
insl
xchg
outsb
addb
test
cmp
js
sub
mov
fwait
sub
loopne
aad
out
xchg
into
sahf
mov
cmpsb
inc
cmp
ss
fldenv
jb
ret
scas
mov
xor
filds
jp
inc
addb
repnz
jbe
popf
add
loope
into
mov
push
xor
sub
mov
ret
sbbl
push
lea
mov
jae
outsb
push
bound
cmp
rorb
mov
mov
fs
in
mov
adc
cltd
test
inc
jl
or
ss
js
adc
and
and
scas
push
mov
arpl
rorl
mov
stc
das
dec
mov
popa
lea
add
inc
test
dec
adc
inc
mov
adcb
shl
push
out
out
andb
sub
imul
cmp
push
cmc
mov
mov
inc
inc
inc
push
cmc
dec
shrb
or
enter
cmp
ror
mov
sub
fxch
jne
lret
pop
and
ret
jp
dec
or
into
das
or
mov
int
inc
cwtl
xchg
in
add
dec
dec
aad
xchg
pop
cmp
jmp
add
jnp
stos
gs
fildll
mov
fucomip
testb
lcall
imul
ret
imul
mov
je
pushf
jne
push
movsb
xchg
sub
mov
mov
xorb
adc
and
test
mov
outsb
inc
cmpsl
sub
cmc
jae
push
sbb
and
cmpsl
inc
bnd
cmp
cmp
jbe
js
push
and
jmp
xchg
in
dec
fidivs
cmp
cmp
ret
jne
pop
data16
or
fidivrl
add
sbb
jmp
mov
adc
sbb
inc
and
add
cli
scas
dec
mov
movsl
pop
data16
push
js
lds
ret
es
das
xchg
fstpl
mov
sub
inc
divl
cmp
clc
lock
xchg
leave
adc
jge
jl
loopne
jo
mov
xchg
mov
lods
in
cmc
xor
fwait
inc
xlat
in
nop
jae
add
test
sbb
mov
jns
les
cmp
inc
clc
sbb
sub
push
lods
push
sbb
push
inc
lret
out
push
cmp
mov
bnd
int
addr16
mov
fisubl
inc
xorl
adc
push
xchg
es
pop
adc
adc
pushf
movsl
cld
aas
sbb
pop
xor
fimull
mov
movsb
inc
add
xchg
mov
add
xchg
shll
hlt
xor
mov
dec
sbb
in
mov
mov
in
mov
stc
push
mov
pushf
add
or
adc
divl
lock
notb
sbb
enter
in
sahf
dec
mov
cmp
jae
mov
jecxz
test
jb
xor
and
movsl
mov
outsl
inc
cs
and
shll
cmp
xlat
ja
xchg
jns
adcb
add
lea
out
adc
cmpsl
sub
jp
mov
popl
ret
mov
mov
dec
inc
mov
lahf
das
icebp
inc
loop
nop
add
out
nop
xor
ret
sub
push
jle
pop
push
jecxz
jl
jmp
fiadds
std
popa
sub
or
or
inc
pop
or
mov
or
or
out
mov
sub
jne
inc
js
mov
mov
mov
mov
and
roll
push
add
out
mov
scas
push
jbe
add
dec
mov
sahf
ds
jg
lahf
add
and
push
sbb
arpl
mov
mov
xchg
push
mov
jb
stc
adc
adc
popa
xchg
and
mov
jmp
sbb
push
rcrb
lea
bound
pop
push
orl
xchg
add
xor
lock
push
adc
xor
enter
jbe
inc
das
mov
inc
aam
sti
leave
mov
aad
imul
inc
jbe
aam
xchg
fisttps
ljmp
lods
sub
cmpsb
lahf
xchg
sub
fidivrl
push
stos
mov
data16
loope
sbb
fdiv
test
fdivrs
xor
cld
cmpb
ret
mov
stos
out
data16
inc
lret
fsubr
cwtl
sbb
int
sbbl
cli
xor
hlt
or
pop
cmp
mov
push
sbb
fwait
cmp
mov
and
scas
and
sub
ret
add
mov
mov
je
and
xchg
cli
inc
sub
stc
or
and
xchg
outsb
dec
mov
insl
shll
sahf
stc
mov
call
in
loop
ffree
cmp
loop
dec
push
pop
ljmp
cli
mov
inc
incl
inc
dec
jp
outsl
into
rcrl
cmp
cmp
dec
xchg
sahf
add
out
mov
iret
pop
test
push
sbb
inc
jmp
repnz
js
cli
push
cmc
mov
xchg
and
loopne
ss
add
outsb
jbe
loope
mov
pop
mov
fistpll
pop
xchg
cli
pop
cmp
icebp
mov
insl
mov
xchg
lea
mov
pop
ss
or
add
adc
pop
pop
mov
mov
lcall
sub
mov
negl
dec
das
cmp
lods
arpl
add
jecxz
mov
sbb
leave
roll
mov
xchg
jp
pop
xchg
dec
inc
test
nop
lea
jge
sbb
lds
mov
incl
call
push
sbb
loope
sbb
fisttps
out
cwtl
pop
pop
scas
cmpsb
cmp
xor
dec
dec
mov
sub
nop
js
fisttpl
cwtl
add
lret
sbb
bound
aad
adc
mov
ljmp
adc
jae
icebp
scas
jg
add
dec
push
lds
pushf
jo
jg
mov
hlt
jae
shlb
or
add
pop
mov
notl
jns
mov
insb
subl
sub
sub
in
pushf
scas
nop
mov
xchg
inc
fdivrp
es
sub
movsb
rorl
arpl
lahf
inc
dec
mov
mov
jp
jmp
xchg
mov
popw
jp
adc
popf
fdivrl
pop
gs
shll
add
test
or
fsub
icebp
int
inc
sbb
jp
dec
ss
xchg
cmc
add
xchg
mov
mov
in
pop
not
sub
arpl
cmpsb
and
inc
jbe
push
mov
ja
imul
mov
inc
lds
mov
les
lods
fs
add
inc
test
sub
jo
fs
push
lods
push
shlb
pusha
pop
dec
mov
dec
add
sub
pop
sub
push
js
leave
jns
xor
sbb
sbb
inc
add
cwtl
pop
mov
imul
sbb
test
movb
cli
lods
jge
cmp
daa
push
pop
push
push
lods
cli
push
cmpsl
call
subb
aaa
mov
push
stc
add
in
dec
stos
std
mov
add
jns
mov
sbb
pop
lock
inc
clc
sub
cltd
roll
lods
sub
scas
mov
loop
jmp
jae
add
insl
sub
and
std
mov
mov
mov
cmpsb
dec
fcoml
xchg
fsubrs
lahf
add
push
int
test
dec
and
pop
shrl
lcall
xchg
pushf
cmc
call
dec
popf
cld
mov
lahf
jae
call
or
cmp
ja
mov
jno
outsb
or
icebp
cmpsb
mov
xchg
sbb
orl
pop
add
sbb
xchg
xchg
push
int
aad
and
lods
mov
bound
icebp
or
push
pop
outsb
jnp
dec
add
mov
adc
adc
ja
vmulsd
ljmp
frstor
fs
and
test
daa
mov
stos
bound
fildl
divb
aaa
adc
or
icebp
or
jns
movsl
xchg
push
jecxz
test
cwtl
cmc
arpl
cmp
jmpw
jne
cmp
fs
stos
in
ja
inc
jl
xor
xchg
adc
and
ljmp
fadds
xor
fbld
sbb
test
sub
pop
icebp
mov
jmp
mov
push
inc
xchg
nop
jno
cli
mov
push
lcall
gs
outsl
dec
mov
push
js
mov
hlt
push
xor
adc
or
movl
pop
call
out
and
or
xor
mov
jo
std
adc
rorb
stc
mov
push
loopne
sahf
popf
in
add
push
std
imul
cwtl
mov
push
jge
adc
sbb
xor
and
jecxz
sbb
jbe
cmp
fcompl
push
mov
sbb
fs
shlb
cltd
movl
and
inc
dec
cmp
aaa
and
push
jecxz
inc
xor
jo
lds
inc
fldenv
cmp
outsb
lods
lret
and
les
out
sbb
pop
lock
icebp
int
testl
mov
in
dec
loope
add
push
sub
pusha
xchg
mov
dec
rcl
insl
jne
xor
outsl
inc
aam
imul
and
pop
add
jmp
int3
mov
lahf
in
mov
push
stos
pop
mov
pushl
fstps
pop
cmp
inc
fwait
mov
insl
push
pop
cmp
fisttpll
daa
mov
sti
mov
repz
div
push
mov
dec
dec
ret
and
adc
xchg
mov
ja
fwait
mov
push
xchg
cmp
xlat
jl
or
or
addr16
inc
xor
mov
out
sbb
xchg
inc
pushf
sub
xor
insb
call
pop
pop
inc
push
mov
push
imul
dec
and
shl
imul
jns
sub
mov
pop
inc
inc
pop
lock
mov
jge
aad
jo
rorb
push
xchg
leave
adc
pop
mov
mov
loopne
xchg
insb
enter
push
dec
dec
test
or
mov
or
inc
fwait
fwait
in
mov
testl
mov
lret
pusha
gs
inc
jmp
test
push
in
pop
mov
cmpsl
cmp
xchg
sbb
sub
sbb
fimull
inc
cmp
mov
iret
shrl
negl
dec
nop
mov
pop
mov
mov
insl
dec
dec
and
push
inc
js
xchg
dec
loop
or
mov
push
outsl
movsl
or
add
in
adc
adc
adc
mov
or
sub
mov
mov
mov
push
les
scas
pop
or
xor
inc
repnz
adc
xor
in
xor
repnz
out
in
outsb
out
cmpsb
dec
rol
scas
push
cmp
mov
test
sbb
inc
je
add
cli
popf
inc
sub
ja
push
cli
xchg
rcrl
adc
inc
lret
lcall
add
insl
subb
clc
push
push
aad
scas
ret
mov
jp
cli
jae
in
mov
xorb
testb
cwtl
les
jb
imul
sub
xor
mov
dec
adc
inc
mov
clc
adc
cmpsb
out
push
adc
and
and
jmp
shll
stos
cmp
mov
shrb
inc
inc
or
cmc
lret
or
jge
out
movsl
jecxz
dec
lock
into
xchg
mov
pusha
sbb
cmpsl
or
add
sbb
jne
jbe
push
xchg
ds
sbb
cs
xor
lock
jle
xchg
popa
cmp
adc
imul
xchg
repz
shlb
ljmp
push
fisubl
pop
mov
inc
out
mov
lahf
mov
leave
aaa
das
hlt
mov
dec
or
mov
cwtl
dec
int3
sbbb
ret
xchg
xor
enter
nop
movsl
and
mov
pop
mov
sbb
xchg
fiaddl
aaa
rorb
push
adc
cmp
imul
test
or
aas
test
pop
std
shl
int3
adc
dec
xor
popa
fs
fcomps
ret
jl
sub
lock
stos
adc
rcrb
jbe
rorb
popf
or
mov
inc
pop
push
adcl
add
loopne
mov
rcl
insl
push
int3
mov
movsl
or
dec
dec
fistps
lock
int3
loope
lret
rcrb
test
inc
xlat
add
dec
pushf
test
xchg
stos
xchg
inc
ljmp
push
into
lods
mov
jl
or
arpl
jge
or
in
scas
nop
lret
lahf
inc
bound
and
andb
adc
jne
into
in
xor
sbb
std
sub
sbb
clc
xchg
pop
sub
push
rcrb
ja
mov
mov
jo
cld
xor
jo
fisttpl
xchg
popf
dec
jbe
and
inc
push
sbb
xchg
outsb
nop
or
inc
lret
inc
lret
gs
xchg
loope
fstp
cmc
add
inc
adc
iret
int3
cs
push
fsubrl
lret
negb
stos
pop
push
lcall
sub
push
jne
and
cmp
fnstenv
adc
les
or
incl
mov
lock
and
cld
and
push
ja
call
xchg
sbb
movsl
sbbl
std
outsl
dec
inc
enter
shll
ret
pusha
jmp
and
test
sub
sbb
inc
repnz
sub
sbb
push
sub
faddl
cmpsb
inc
es
xor
mov
pop
add
sub
mov
or
rclb
inc
mov
xor
mov
or
test
clc
cmc
into
push
fimuls
jmp
ja
cwtl
push
and
loope
cmp
push
mov
and
fnstenv
xlat
or
fisttpl
push
lods
mov
addb
fnstsw
cmc
lock
fwait
es
sti
mov
push
xor
rorl
rcll
andb
ret
int
pop
es
dec
fwait
inc
icebp
iret
int3
aaa
push
jns
pop
xchg
jae
call
lods
lahf
in
fdiv
jnp
push
mov
push
fcomi
les
xor
pop
pop
jecxz
xor
bnd
enter
pop
mov
or
rolb
pop
xor
pop
test
mov
lcall
pop
sub
fcom
xor
in
push
sti
dec
cmp
dec
outsb
cmpsl
testl
in
mov
pop
xor
inc
jg
loopne
std
call
in
push
adc
jge
xchg
enter
mov
mov
sub
adc
les
lret
iret
jge
mov
add
cmpsb
lret
pop
lahf
scas
cmp
out
pusha
inc
pop
int3
push
in
into
pop
add
jb
out
or
push
imul
pop
mov
mov
push
out
iret
test
add
pop
ds
andb
inc
mov
push
rolb
pop
sub
jno
in
loope
dec
pop
sub
inc
xor
ret
shlb
inc
push
cltd
das
scas
sahf
adc
push
add
lahf
lret
jp
leave
or
mov
or
push
rcl
loope
add
les
pusha
push
mov
out
jne
mov
pop
push
mov
ljmp
cmpsb
and
hlt
popf
jb
cs
cltd
dec
sarl
clc
repnz
inc
and
and
insl
flds
push
cwtl
int3
inc
dec
sarb
lea
push
out
ljmp
sub
mov
mov
daa
les
jg
sti
lods
adc
mov
popa
pop
push
ret
push
sahf
fisubs
jle
repz
roll
inc
sub
sahf
lea
mov
addr16
rorl
js
mov
inc
xchg
out
cmp
in
or
cmc
dec
jno
inc
out
in
outsl
sbb
dec
xor
aas
movq
pop
mov
xor
in
xor
adc
ja
push
push
addb
das
les
shl
insb
push
xchg
or
cmp
vpshufb
adcb
xor
loope
mov
sahf
ja
cmp
pop
mov
pop
mov
mov
in
mov
cli
lods
repz
lret
push
sbb
xor
test
pop
pop
cmpsl
cmpsb
sahf
inc
mov
or
push
sbb
xor
and
mov
iret
in
mov
ret
xchg
sarl
mov
loopne
filds
inc
adc
mov
xchg
rclb
lds
mov
or
mov
add
ljmp
adc
fs
arpl
aad
push
mov
xor
adc
outsl
cltd
sbb
sub
outsb
jns
orb
sub
aas
lret
xchg
jle
loop
cmp
pop
ja
es
mov
and
in
rorl
loopne
fdivl
jge
popf
lods
push
cmp
sub
mov
lock
sub
push
ss
mov
scas
and
pop
inc
inc
insl
jne
std
dec
xchg
xlat
repz
adc
or
cmp
mov
ljmp
fsubs
and
shlb
je
nop
aad
mov
or
clc
pusha
pop
addr16
shlb
sbb
mov
xchg
jo
push
fs
xor
cmp
mov
scas
jo
mov
pop
and
ret
jo
mov
mov
sub
adc
pop
xor
in
push
mov
and
mov
xchg
stos
jp
sub
jg
or
lret
xor
cmc
das
dec
adc
add
push
ljmp
iret
mov
sub
and
fsubr
mov
loope
xor
idivl
jns
cmc
dec
pusha
inc
mov
fsub
lods
rcr
sbb
xor
sub
out
out
inc
inc
push
fistps
call
iret
and
inc
sahf
sbb
mov
rclb
cmp
cmp
adc
mov
stc
stos
pop
fcmovu
ret
in
pushf
xchg
mov
inc
xchg
pop
add
or
cmp
fiaddl
cmp
jb
sub
stos
and
xchg
xchg
mov
mov
mov
ret
push
outsb
push
push
out
gs
push
sbb
jmp
fisubrl
fwait
sub
sub
leave
mov
xor
jl
mov
jle
cli
jns
test
adc
pop
mov
adc
sahf
pop
push
leave
outsl
ja
out
test
add
ljmp
es
push
pop
dec
ds
push
popf
xor
jmp
mov
test
inc
adc
cli
sbb
or
xor
dec
and
and
in
xchg
hlt
sahf
into
xchg
imull
mov
xor
loope
popa
fs
int3
jno
dec
aaa
adc
pop
and
add
arpl
cmpsb
lret
icebp
js
test
insb
cmp
frstor
in
cmp
cmp
jne
in
rcl
test
xor
cmc
mov
jno
outsb
lea
test
cmp
cmp
inc
imul
icebp
scas
mov
sbb
je
mov
sti
or
lahf
push
out
clc
pop
sbb
xchg
add
cmp
sti
dec
sbb
jae
addr16
cmp
cmc
lds
fwait
jb
cmpsb
jge
lret
pusha
int
inc
mov
xchg
xchg
stos
subl
fwait
lds
cmp
ret
push
adc
pusha
fldenv
aam
and
pop
fcoml
xor
rorb
icebp
mov
or
leave
rol
in
incb
jmp
in
cmp
clc
aaa
push
jge
ret
imul
pop
jno
xchg
out
inc
jge
test
and
jae
xchg
mulb
call
sbb
repnz
and
dec
inc
jmp
lods
xor
ss
pusha
test
gs
jecxz
inc
movsl
cwtl
push
sbb
testb
clc
pop
cli
push
mov
and
loop
xchg
push
in
call
mov
push
fs
add
mov
lods
pop
stc
push
adc
pusha
call
sahf
rcll
jp
fs
movsb
mov
jmp
mov
lock
adc
push
jbe
push
xor
jns
or
sbb
mov
cmp
sbb
lods
jl
jp
stc
fildl
add
sub
dec
int3
mov
xor
xor
std
adc
or
sub
jno
dec
lcall
cmp
mov
outsl
stos
add
or
adc
mov
mov
rorl
xchg
pop
jnp
and
ficomps
mov
shl
mov
in
jns
sub
cmp
mov
cmpsl
imull
sub
jle
or
clc
add
stos
cmp
sti
sbb
insl
push
sub
jns
jge
repnz
out
push
pop
and
iret
mov
xchg
cld
cmc
adc
or
or
add
mov
xor
lods
loop
movb
loope
add
test
dec
pop
mov
push
xor
mov
call
imul
jb
jmp
lret
scas
cmpsb
xor
pushf
ficompl
cmp
pop
push
xchg
jecxz
xchg
cmc
ror
mov
idiv
pop
dec
jge
movsl
gs
pop
cmc
in
dec
push
leave
sar
mov
aam
cli
ljmp
mov
ss
xor
out
mov
jmp
int3
cmpsb
lock
call
bound
and
inc
popf
lods
ss
fs
push
adc
jmp
fisubl
lcall
mov
ret
orb
xchg
and
cmp
push
lcall
in
testl
stos
es
popf
xor
mov
xor
pop
ljmp
xor
xor
sub
pop
add
ja
incl
mov
mov
shl
mov
out
jmp
inc
adc
rorb
xchg
aas
sub
andl
lret
jb
loopne
mov
mov
and
lret
aam
sbb
inc
orl
aaa
faddl
mov
and
sub
mov
mov
movsb
jle
fchs
inc
clc
das
pop
nop
xchg
dec
pop
stos
sti
push
push
push
out
je
push
orb
ss
jbe
pop
push
data16
mov
shrl
pushf
ljmp
push
xlat
pop
ss
daa
cmc
fs
push
sub
xor
inc
mov
cmp
lret
sub
gs
push
or
or
fimuls
hlt
xchg
sahf
je
push
in
fdivl
adc
cmp
mov
stc
and
sub
inc
mov
jp
int3
jp
pop
fcompl
mov
lret
lret
xchg
pop
je
xchg
mov
cmp
call
std
dec
cmpl
ljmp
stos
int
cli
dec
push
mov
arpl
shll
dec
roll
xor
das
xchg
inc
lahf
test
push
xor
cmp
sbb
pusha
std
pop
lock
ret
je
sbb
fists
aaa
roll
mov
pop
and
repz
mulb
push
shr
jbe
adc
rcrl
xor
push
dec
insl
inc
add
lahf
shrl
mov
xchg
data16
or
push
push
xor
rorb
push
fiaddl
fdiv
cmp
xchg
or
fbld
pop
testl
in
gs
cmpsl
mov
in
add
stc
dec
inc
or
jle
xor
jno
dec
cld
outsb
data16
adc
sub
or
jo
or
mov
pop
mov
cmpsl
pop
cmp
adc
mov
add
push
data16
xchg
push
bound
icebp
dec
out
nop
cmp
stos
lods
rorb
xor
bound
cmp
mov
push
ds
lods
xchg
fnstenv
xchg
mov
pop
push
sub
adc
movsl
fld1
xor
jge
and
into
mov
lods
jae
pusha
sub
or
cmp
addb
or
in
xlat
fdivrl
cmp
jne
int
js
int3
nop
push
adc
and
mov
dec
fs
insl
pop
or
in
mov
ret
scas
lea
xchg
dec
jnp
lret
sbb
mov
cltd
or
orb
and
aaa
dec
das
or
and
jno
fistl
sub
xor
mov
repnz
xchg
cld
cmp
inc
xor
mov
loope
mov
les
sub
pusha
lahf
lods
pop
or
adc
adc
mov
jge
nop
xchg
mov
pop
pop
lcall
in
cmp
and
dec
push
test
mov
lods
mov
pop
and
xchg
and
pusha
sub
add
int3
jecxz
adc
push
test
fdiv
mov
loopne
mov
adc
jbe
mov
adc
ficoml
cmpsb
inc
pop
cltd
or
or
mov
xor
push
pop
sub
mov
push
nop
int3
and
es
fstpl
and
dec
jmp
mov
push
mov
pop
jp
fwait
std
pop
dec
shl
sbb
stc
insb
push
imul
pop
jg
jb
stos
push
mov
sub
jno
orb
gs
cmp
jge
jl
cwtl
vmovmskpd
adc
nop
outsb
in
scas
in
in
into
inc
dec
data16
stos
imul
xchg
popf
outsl
jno
ja
repnz
mov
add
popf
daa
mov
xchg
loop
popa
push
xor
push
cmp
dec
pop
imul
test
incb
call
push
es
sbbl
das
adc
mov
es
pop
pushf
and
add
dec
push
xchg
jecxz
or
lret
mov
int
aas
addr16
outsb
hlt
shl
ljmp
jbe
mov
sarl
push
xor
cmp
sbb
outsb
and
inc
stc
andl
jmp
in
call
inc
dec
inc
push
sbb
shl
dec
add
adc
insb
ljmp
push
inc
in
cmpsb
jecxz
shlb
xlat
and
clc
push
xor
cmp
jns
imul
fists
jb
adc
cwtl
xchg
jno
and
ja
xchg
jmp
aas
into
shl
cli
cld
mov
xchg
pop
insb
sbb
jnp
mov
mov
jb
mov
mull
xchg
push
insb
xor
or
add
stos
cmp
xchg
xchg
popa
pop
mov
mov
xchg
pop
push
pop
dec
sbb
pop
xor
push
jg
iret
jne
add
out
mov
arpl
adc
jae
pop
mov
outsl
pop
sarl
lods
or
pushf
mov
mov
cmpsl
mov
push
xchg
push
mov
dec
imul
fidivs
cmp
mov
sti
sub
and
push
fwait
mov
out
push
sub
mov
out
shlb
ja
sbb
rclb
and
sub
mov
dec
mov
jg
mov
sbb
pop
pop
pop
loopne
out
out
cli
dec
pmuludq
jp
rcrb
or
inc
push
in
add
xor
cmp
test
in
pusha
lods
mov
mov
sbb
icebp
mov
std
and
sbb
imul
pushf
xor
insl
imul
shrb
push
call
clc
mov
cmp
lahf
imul
jae
call
insb
or
enter
in
mov
mov
add
arpl
mov
add
clc
aam
and
mov
arpl
movsb
into
lds
rol
adcl
es
dec
and
or
pop
mov
add
push
jne
cmp
xchg
aas
test
out
pushf
and
insb
lret
sarl
pop
iret
notl
cmc
adc
movhlps
xchg
mov
cmp
jns
and
mov
adc
sbb
push
sbb
sbb
test
sub
push
xor
addr16
xchg
mov
cmc
add
push
outsl
andb
ret
or
lds
int3
lods
mov
xor
popf
jns
sarl
cs
aaa
xadd
cmpsl
mov
mov
cmp
mov
popa
js
lcall
imul
loopne
fidivs
mov
inc
adc
js
aam
push
dec
pop
lret
pop
pop
fmuls
and
ficompl
xchg
fadd
mov
cs
sub
js
in
push
inc
jns
cmpsb
arpl
push
pusha
ja
push
add
sbbb
les
js
pop
mov
arpl
add
andb
add
pop
cwtl
add
mov
xchg
push
push
mov
ror
push
jb
mov
inc
sbb
rolb
outsb
aad
lock
sarb
out
xor
xchg
xorb
les
xchg
out
adc
ficompl
pop
inc
fs
into
aas
adc
adc
mov
aas
inc
movsl
ret
xor
mov
iret
in
data16
cwtl
cmp
xlat
push
test
sbb
cmc
ja
mov
jg
das
adc
mov
and
push
in
and
mov
lods
enter
mov
test
or
test
mov
shrb
mov
pop
ffreep
scas
movsl
or
pop
xor
xor
repz
std
jle
push
jecxz
mov
sub
sbb
dec
das
cmp
pop
sub
std
je
leave
test
adc
adcl
in
cmp
insl
sub
adc
jns
ds
mov
jns
int3
jge
outsb
xchg
inc
cli
jnp
jns
dec
push
push
das
xor
hlt
inc
cltd
mov
loope
jo
jo
leave
movsb
mov
xchg
cmp
in
mov
push
subb
nop
mov
sbb
popf
jnp
pop
mov
aad
or
sbb
in
test
outsl
repnz
aam
add
adc
push
and
loopne
gs
popa
pop
fsubs
mov
pop
pushf
pop
and
xchg
or
mov
inc
pop
dec
mov
aam
loop
jbe
push
stos
add
cs
and
inc
dec
cmp
cs
mov
sti
hlt
mov
mov
sub
mov
out
in
dec
mov
adc
fnstenv
dec
ret
gs
inc
or
push
cmpsl
stos
outsl
sub
pop
inc
cs
bound
cmp
push
in
and
arpl
fldcw
pop
adc
pushf
adc
push
iret
adc
cmpsl
pop
jmp
adc
adc
mov
xchg
jp
mov
cli
hlt
clc
sub
inc
add
xchg
nop
mov
jp
and
lret
inc
jp
fstpt
call
sub
js
inc
sub
cmp
sub
and
cmp
lock
pop
test
aaa
inc
inc
mov
dec
negb
adc
inc
mov
bound
cs
xchg
cltd
std
mov
xor
inc
fiaddl
das
fldenv
jp
jo
jg
into
mov
fimull
push
mov
mov
xor
icebp
add
fwait
mov
mov
rorl
sub
cmp
push
jl
ljmp
jns
cmc
aad
push
outsl
dec
cmp
sbb
cmp
mov
mov
mov
stos
pop
ja
pop
insb
cltd
and
orl
push
cmp
cmpsb
mov
dec
sti
push
jmp
xchg
sbb
insl
mov
inc
iret
mov
test
jl
and
es
add
and
mov
inc
xchg
ljmp
mov
mov
mov
mov
or
sbb
scas
es
push
xor
pop
xchg
lds
pop
jns
imul
out
mov
ret
mov
cmp
dec
pop
lods
es
sbb
popa
stc
outsb
adc
add
jmp
cmp
xlat
cltd
jae
push
inc
add
fists
test
movsb
popa
mov
int3
dec
imul
jae
cmp
jge
clc
test
scas
clc
imull
rolb
sbb
mov
adc
or
test
dec
sbb
mov
add
cwtl
scas
das
add
mov
dec
lahf
sub
scas
es
inc
jne
mov
lock
test
daa
or
ljmp
cmp
movsl
roll
dec
stos
cmpsb
pop
xor
adc
into
jbe
pop
mov
data16
inc
sbb
add
call
rcll
sbb
lock
xchg
loopne
push
lahf
in
mov
dec
ss
mov
xchg
outsb
imul
xchg
xchg
lock
lret
sub
repz
cld
jg
hlt
lahf
adcb
testb
dec
cmp
test
mov
mov
sub
loope
mov
out
sub
int3
xor
pushf
loopne
adc
push
mov
daa
adc
icebp
pop
and
lret
xor
aas
xchg
int
sbb
sub
ljmp
in
fs
mov
ret
add
or
fimull
push
ljmp
imul
mov
xor
push
decb
insb
mov
and
xor
dec
nop
mov
cmp
mov
daa
push
mov
push
shlb
test
cmp
push
divl
stc
mov
push
sti
push
movsl
and
adc
adc
mov
or
xor
adc
fcomip
jne
mov
fprem
jp
pop
push
test
arpl
inc
mov
sub
pop
pmaxub
cmpsb
inc
testl
movsl
xor
jmp
or
pushl
xchg
les
ds
mov
jge
pop
in
movsb
imul
leave
loopne
sub
int
pop
adc
cmpb
mov
cmp
lahf
xchg
scas
jb
mov
jl
fcomp
test
mov
or
push
push
inc
xorb
cmp
incl
mov
mov
in
pop
aas
insb
out
out
inc
lret
mov
or
cwtl
nop
sarl
dec
jae
mov
fldt
cmp
test
push
dec
xchg
adc
inc
cmp
pop
loopne
cld
loop
dec
enter
out
pop
adc
or
aas
mov
inc
stos
xchg
dec
adc
adc
sub
cltd
pop
leave
pushf
movl
mov
hlt
cmpsl
nop
pop
repz
in
int
pop
mull
inc
jbe
fcomp
push
shlb
push
xchg
fdivs
push
inc
push
in
lea
mov
ljmp
xchg
adc
or
push
out
movsl
rorl
adc
xor
push
lret
pop
sarb
mov
push
pusha
shlb
sar
mov
mov
cmp
movsl
lahf
popa
sti
push
imul
loope
popf
cmp
xchg
add
movsl
rcl
sub
subb
mov
int
pop
out
ret
and
jno
pop
dec
out
sbb
push
xor
mov
add
jmp
ds
add
mov
test
or
std
ficompl
in
into
outsl
idivl
js
add
insb
mov
cmp
dec
dec
pop
sti
aaa
sub
insb
mov
les
leave
mov
pushl
sub
adc
cmp
jns
xchg
mov
mov
dec
or
xchg
aas
mov
fs
dec
jno
fidivl
mov
clc
sbb
and
fcoml
ficoml
dec
inc
mov
push
mov
fwait
fwait
dec
ljmp
aas
push
and
int
mov
ljmp
push
mov
push
imul
rcl
pop
lods
xor
pop
jae
pop
ljmp
mov
and
mov
sub
or
lock
mov
lret
jnp
fldlg2
and
stos
jnp
mov
stos
fsts
pop
movsb
ffree
jns
dec
fadd
scas
inc
dec
test
out
addps
mov
xchg
pop
lds
fisttps
pushf
adcl
dec
addl
je
adc
aas
mov
mov
faddl
and
cmpsl
cld
inc
inc
aaa
stos
arpl
dec
and
sarb
aaa
test
sbb
addr16
xorb
lds
mov
jmp
jae
jne
sbbb
xchg
pop
add
xchg
mov
test
adc
mov
xchg
xchg
or
xchg
dec
fldenv
xor
shll
pop
pop
mov
mov
inc
shr
push
mull
mov
cwtl
inc
shlb
xchg
xchg
add
aam
push
dec
cmc
cmp
sub
lret
push
cli
sbb
stos
pop
ret
pusha
or
je
pop
pushf
pop
mov
in
add
pop
mov
cmp
ret
or
inc
lahf
xor
push
out
mov
js
push
shlb
ror
mov
and
and
stos
xchg
ja
subb
addr16
addr16
je
into
repnz
xchg
sbb
es
lahf
pop
adc
inc
or
sbb
sub
fwait
pusha
pop
fldenv
sti
dec
inc
push
popa
lds
cmp
movb
lock
sub
or
outsb
popl
js
sahf
ficompl
xor
cmpsl
mov
out
int
outsb
dec
push
movsb
sahf
jle
add
dec
arpl
shlb
and
jmp
and
add
icebp
mov
add
add
in
inc
shlb
clc
sbb
xchg
cmp
mov
dec
inc
imul
mov
dec
mov
or
or
ret
mov
fnstenv
hlt
xchg
and
int
mov
cmp
fisubrl
add
shll
sbb
sub
out
mov
cmp
loop
into
dec
inc
ja
xchg
adc
fcomps
push
fld
dec
js
data16
and
dec
or
cmp
hlt
stc
iret
push
mov
push
dec
add
and
aaa
daa
cmp
jl
imul
sub
dec
sbb
pop
inc
es
lods
test
sarb
aam
lods
scas
fsubrs
add
sarl
mov
xor
xor
gs
outsl
mov
iret
and
inc
sbbb
jle
mov
gs
jecxz
imul
incb
and
repnz
pop
addr16
pop
dec
jle
ret
xchg
xchg
imul
sbb
stos
sti
xor
gs
mov
cmp
rcll
mov
jae
nop
and
xlat
and
lea
jg
stc
mov
sbb
ja
sbb
lret
jo
jmp
xchg
pop
push
jns
fs
filds
into
repz
sahf
inc
jno
mov
mov
in
pop
stc
addr16
jnp
jae
adc
jl
call
mov
mov
mov
rcll
cmp
lret
xor
or
fwait
ja
and
mov
cwtl
jl
sbb
jl
xchg
adc
mov
enter
dec
jb
fldt
jg
cmpsl
mov
jp
in
jecxz
jg
inc
pop
and
mov
leave
loope
out
jno
psrlq
imull
aam
into
cld
test
mov
mov
mov
cld
lcall
out
xor
test
aam
test
push
adc
movsl
add
mov
stos
mov
push
ret
outsl
es
adc
mov
or
inc
push
ja
jl
mov
add
cmp
imul
jecxz
sarl
and
mov
or
fld
sbb
xor
push
dec
out
ficoml
push
push
dec
jg
addr16
gs
sahf
test
and
cld
lea
mov
out
inc
jae
in
es
sbb
imul
cld
and
pusha
sbb
sbb
xchg
push
mov
mov
pop
test
enter
pusha
lods
jb,pt
enter
in
sub
mov
jno
cmpsl
inc
xor
stos
mov
add
mov
and
adc
pop
arpl
sub
xor
xchg
test
jge
pop
test
and
scas
dec
mov
fldl
jg
lods
inc
dec
push
cmp
aam
fildll
cmp
xchg
fs
lcall
push
scas
ret
sti
sub
lahf
mov
nop
cmc
cmp
pusha
adc
ja
mov
lea
jns
leave
dec
repnz
insl
decl
fnsave
jmp
mov
mov
sti
scas
cmp
aaa
and
sub
push
sub
xor
inc
mov
out
xchg
dec
iret
push
imul
and
pop
cmc
inc
and
loope
push
std
and
sahf
mov
stos
test
shrb
add
ret
jmp
jno
loopne
in
stos
loop
dec
repnz
loopne
paddq
sub
imul
fdivs
mov
inc
push
mov
jo
fidivs
punpckhbw
xor
xchg
or
push
add
imul
das
lahf
cmc
es
or
sub
push
rorb
cwtl
mov
bound
repz
test
xor
lret
pushf
jne
stos
jle
aaa
or
lock
outsb
mov
mov
mov
pop
xchg
pop
mov
xchg
mov
sbb
lea
add
lock
jl
push
cmp
inc
scas
or
jp
dec
jo
dec
out
dec
shl
adc
xchg
jbe
ret
aad
mov
clc
test
mov
cmp
mov
cmp
mov
pop
mov
repz
mov
stos
and
loope
sub
ret
pop
xor
lahf
jb
cmp
dec
sarb
push
push
mov
inc
ret
add
xchg
jge
xorb
mov
mov
clc
movb
stc
js
ficoms
cltd
xchg
mov
xchg
lods
mov
negl
jnp
in
jmp
mov
adc
lret
std
xchg
cs
scas
test
out
jno
test
xchg
xchg
mov
inc
inc
test
pop
fisubrl
inc
repnz
xlat
leave
xor
and
mov
lcall
stos
out
mov
or
dec
aas
mov
loope
mov
adc
into
ss
insl
mov
mov
call
fs
push
sahf
dec
mov
pop
push
mov
inc
xchg
inc
add
scas
fldt
push
insl
hlt
pop
lret
fs
je
xchg
lods
arpl
bound
xor
fimull
insl
sbb
sub
popa
ja
and
jbe
sub
jg
repnz
nop
pop
add
rclb
mov
ss
dec
push
imul
in
cmc
pushf
cmp
and
cmp
cmp
jnp
ss
lcall
mov
enter
mov
and
les
rcr
ljmp
jle
insb
ljmp
adc
shrb
leave
jl
add
push
mov
loope
js
cmp
dec
xchg
add
sbb
jno
xchg
pop
xchg
testb
fistl
sbb
and
or
shlb
aaa
in
xor
insl
iret
sub
add
lods
daa
jp
shrl
inc
mov
sbb
cmpsl
jnp
push
mov
repnz
dec
push
ret
jae
and
repnz
mov
fucom
mov
jno
xorl
shll
dec
adc
in
sbb
cmp
mull
jbe
xchg
cmp
xorl
aad
jmp
add
push
pusha
sub
pushw
sbb
mov
mov
popa
add
jb
pop
imul
insb
stos
mov
cmpsl
in
cmp
push
fldcw
push
idivl
out
fisubrs
push
ja
loop
shl
sbb
cmp
mov
add
sub
ljmp
pop
jp
stos
scas
test
adc
sbbb
fstpt
popf
loope
xchg
sti
lock
cmp
and
dec
hlt
icebp
mov
dec
andb
fisttpll
mov
je,pt
jo
push
inc
cwtl
inc
inc
jno
fnstenv
movsl
sbb
leave
mov
adc
xchg
adc
adc
inc
mov
es
cmc
cmp
pop
in
testl
arpl
inc
imul
sbb
out
dec
pop
lods
out
test
imul
out
imul
inc
sub
scas
push
push
push
push
adc
sub
xor
mov
adc
or
es
aas
adc
jno
cmc
imul
adcb
sub
shl
sub
adc
mov
bnd
xchg
ss
pushf
mov
push
pusha
testb
aad
int3
lods
rcll
mov
add
test
xor
test
in
repz
jns
fidivl
cmp
popf
stc
popa
xor
and
aaa
pop
pop
mov
in
fs
cmpsl
cmpsl
lret
adc
sbb
add
jmp
cld
or
mov
aas
int3
aas
sub
and
mov
je
notb
xchg
aas
gs
add
push
ja
cmp
sbb
xor
stos
cmpsb
xchg
cmpsb
insb
cmc
xor
sar
shlb
push
push
ljmp
out
cld
loope
repz
test
lods
dec
outsl
out
aas
push
test
ret
emms
or
jl
popf
add
jo
pop
es
cs
sbb
or
lods
xchg
movsl
xchg
addb
ljmp
stc
jo
xchg
sti
test
inc
adc
std
icebp
sbb
cmp
fidivs
cwtl
fld
add
pop
loop
push
sbb
or
popa
jno
fdivl
hlt
xor
and
lock
mov
icebp
in
mov
mov
scas
jo
xor
loope
cld
into
popf
cmp
xor
stc
mov
pop
mov
dec
add
pop
jae
stos
push
mov
cmpb
les
push
xor
clc
and
sbbb
and
jo
jl
mov
fincstp
shll
loop
push
adc
pop
shrb
cmp
fcoml
jo
cmpsb
bound
sub
mov
arpl
nop
add
inc
push
push
test
in
in
std
add
pop
mov
dec
pop
popa
xor
inc
lret
lahf
or
lock
popa
mov
loope
mov
stc
and
jmp
jg
syscall
int
test
or
cwtl
das
push
mov
popa
jae
and
cvtps2pi
invd
rcrl
lret
mov
jge
ds
test
xorl
cmp
cltd
sahf
xchg
cmpl
pop
sub
sbb
in
or
imul
or
dec
das
mov
and
mov
outsl
mov
mov
adc
mov
mov
pop
add
orb
push
push
daa
mov
sub
adc
sbb
cmc
fstpt
push
mov
inc
mov
scas
mov
gs
dec
dec
adcl
rol
sub
scas
mov
xchg
or
inc
xchg
shll
mov
xor
sbbb
je
jns
sbb
gs
sub
xchg
ret
aad
popa
das
pop
pop
popa
sbb
call
mov
movsb
ffree
push
in
push
cmp
jl
xchg
enter
adc
cmp
pushl
aaa
and
add
cmp
mov
movsl
in
xchg
jae
iret
iret
scas
push
jge
pusha
lcall
dec
pop
cmp
repz
ror
insb
xor
push
sub
dec
subl
mov
push
cmp
xchg
sbb
and
leave
ss
orl
popa
in
mov
out
sbbl
sbb
repnz
adc
push
pop
aad
mov
pop
mov
fwait
je
fsts
movsl
dec
sbb
jl
cmpsb
jmp
adc
push
es
mov
xor
inc
adc
push
imul
pushf
mov
pop
pop
xchg
test
sti
insl
enter
push
fld
aad
fimuls
lods
ljmp
sub
insb
and
ljmp
cmc
int
jle
push
clc
popf
sbb
insb
lcall
out
add
inc
gs
insb
rcll
and
test
push
xlat
test
jecxz
pop
adc
pusha
fisttpll
sbb
repnz
cltd
js
and
testb
enter
xchg
scas
mov
xor
fldenv
jns
rorl
sub
imul
mov
cmpsl
and
lock
xor
pop
cmp
hlt
aaa
sbb
imul
rcrl
dec
push
mov
insb
mov
rcrb
aas
jnp
cwtl
adcb
mov
mov
in
insb
sbb
iret
nop
ds
stos
test
ficoml
xor
aam
xchg
mov
rcrb
xlat
mov
jnp
push
imul
or
add
jl
repz
inc
out
sub
dec
xor
in
and
and
jb
dec
push
dec
xchg
and
xchg
test
neg
push
jp
mov
ss
sbb
sub
xor
daa
inc
mov
and
xchg
mov
test
test
inc
cmp
popa
and
rolb
cmp
arpl
lods
cmp
daa
sti
std
icebp
adcb
ss
inc
in
movsb
ss
aam
aad
mov
push
add
popa
jo
sbb
mov
fmuls
notb
sbb
pushf
jae
or
push
mov
ja
jle
in
xor
cmc
sbb
out
or
push
adc
mov
adc
or
push
push
test
loopne
or
dec
push
clc
cmp
add
adc
jge
repz
inc
and
push
lock
lret
fstps
add
lock
push
add
in
add
inc
push
sub
lcall
or
jo
insb
je
fst
bound
jecxz
jne
fs
test
fidivrl
xor
mov
mov
jne
jb
les
pop
lahf
mov
push
les
pop
pop
dec
rorl
movd
push
cmp
int3
pusha
jno
and
cmp
cmp
push
inc
daa
push
test
fbld
or
cli
lods
adc
xchg
dec
fsubr
xor
adc
mov
adc
movsb
lods
aaa
ret
arpl
sub
or
flds
scas
in
push
test
jle
test
push
mov
lock
ret
pop
out
into
movsl
dec
in
push
call
add
add
push
repz
xor
rolb
jno
js
pop
cld
das
sti
mov
repnz
neg
push
jne
push
mov
mov
das
test
pop
push
fcmovu
xchg
pop
or
out
pop
add
std
cmp
int3
pop
pop
lds
cwtl
xor
les
push
dec
sbb
sub
je
cmp
jmp
xor
fs
mov
add
jne
pushf
add
shrl
jb
dec
cbtw
rcll
shr
xchg
outsb
dec
xor
gs
lcall
mov
ljmp
addb
push
stc
out
sbb
and
cmpb
loopne
sub
sbb
loopne
imul
inc
and
adc
jne
inc
mov
mov
sub
pop
cmp
or
pop
cmp
mov
add
and
aam
call
jo
add
xorl
pop
jp
out
in
aaa
jb
xchg
mov
fisttps
fiadds
jb
out
in
sbb
pop
add
jecxz
push
cmp
in
repz
test
push
js
mov
imul
mov
add
mov
pusha
testb
call
outsl
test
idivb
insb
dec
xorb
inc
sarb
mov
adc
rorb
shll
cmp
xchg
outsb
inc
mov
in
scas
pop
dec
int3
or
sahf
push
jmp
stos
cwtl
cmp
mov
ficomps
sub
and
test
je
arpl
movups
jbe
mov
lcall
xchg
adc
jecxz
adc
shlb
add
cmp
dec
in
jle
mov
and
cmp
xchg
arpl
lret
mov
sbb
mov
jae
sbb
and
stc
aaa
dec
in
pop
bound
push
jle
lcall
scas
mov
out
sbb
sub
jo
adc
jno
add
cmp
add
or
add
mov
cltd
pop
les
xchg
lock
pop
jne
inc
lods
das
nop
or
scas
shlb
or
pop
inc
inc
push
push
jno
fistps
add
sbb
pop
mov
imul
int3
stc
movsb
leave
xor
cmp
adc
pusha
outsl
lcall
fwait
sub
cmp
add
dec
adc
add
scas
gs
mov
mov
subl
iret
cmp
sbb
inc
cli
out
cmp
lcall
mov
sbb
ret
mov
daa
pop
lods
loope
repnz
xchg
data16
jne
cmp
cmp
into
xor
js
mov
ret
es
out
lods
ljmp
lock
sub
hlt
ljmp
dec
stc
in
sahf
dec
ds
pusha
jae
jae
xchg
les
pop
enter
punpcklwd
idiv
mov
imul
xor
les
add
das
mov
jno
mov
cld
clc
add
add
inc
int
dec
cmc
movsl
jo
push
jg
scas
pop
negb
fwait
jl
push
pop
pop
lods
push
pop
push
shr
push
xor
loopne
sarl
jns
xchg
lret
dec
fisubrs
sub
inc
mov
andl
das
repz
push
pusha
sahf
jo
and
inc
push
ljmp
xchg
mov
push
pusha
lea
lods
inc
movsl
cmpb
shl
pushf
push
mov
popf
jp
xchg
daa
pop
xor
dec
dec
jae
mov
xchg
push
pop
fsubr
in
add
stos
fstpt
imull
ret
xchg
gs
test
mov
cmpsl
stc
inc
call
inc
pop
xchg
mov
mov
aaa
push
pop
inc
mov
sbb
outsl
mov
sub
test
adc
push
adc
aaa
rcrb
adc
fwait
nop
addl
dec
rorl
xchg
out
or
inc
dec
insb
sbb
jnp
add
adc
sbb
mov
fstps
notb
dec
add
out
lret
shr
in
add
sub
mov
sbb
mov
cmpsb
mov
ficompl
xor
sbb
add
adc
jnp
cli
pop
jbe
mov
inc
paddw
push
pop
daa
mov
int3
dec
loop
testb
push
std
push
adc
xlat
leave
add
enter
in
ljmp
sbb
mov
add
test
popa
hlt
lret
mov
push
cmp
repnz
rorl
jno
hlt
mov
or
cmp
inc
test
ja
adc
int
push
or
cld
ja
imul
out
push
mov
dec
cmp
or
push
cmp
jae
jnp
insb
jecxz
gs
fimull
add
jnp
pop
inc
jp
aas
fidivrs
bound
out
loopne
leave
mov
rcr
cmp
sbb
cmp
and
push
or
xor
jmp
shlb
pop
pop
mov
and
sbb
jns
add
mov
shrl
loopne
push
xor
or
cmp
and
roll
enter
mov
jecxz
mov
mov
ljmp
movsb
mov
and
insb
ss
neg
xor
imul
movsb
push
or
add
sub
xor
jecxz
mov
jg
push
outsb
jecxz
cmp
dec
notl
outsl
dec
in
cmpsb
insl
mov
adc
mov
rorb
icebp
sarb
pushf
mov
jmp
or
mov
mov
int
and
cmp
lods
mov
leave
and
lods
mov
movsb
mov
jno
pop
cmpsl
fidivs
mov
dec
add
mov
inc
mov
push
sub
dec
sub
add
mov
sbb
add
sbb
xor
pushf
stos
out
sbb
xchg
jp
test
or
sub
enter
icebp
repnz
shlb
pop
cmp
lret
pusha
sti
pop
mov
sub
in
pop
xchg
or
mov
push
and
xchg
lret
mov
xchg
stc
mov
push
push
dec
pop
pusha
push
push
jo
inc
pop
mov
es
pop
adc
mov
sbb
pop
xchg
dec
sub
xor
push
loop
sub
xor
inc
shll
dec
fdivr
out
shll
jl
adc
add
xchg
pop
call
push
std
scas
cwtl
les
push
or
dec
mulb
stos
sbb
icebp
fcmovnbe
ror
jno
subb
call
scas
adc
and
ficoms
out
xchg
dec
jmp
int
shrb
in
jl
cmpsl
stos
pop
repnz
jmp
and
push
push
stc
and
mov
push
jle
sbb
and
mov
sub
pop
jecxz
cmp
test
cmpsb
cwtl
mov
push
pop
jle
push
nop
push
and
lcall
lea
sti
inc
mov
pop
xchg
jns
test
mov
push
inc
mov
push
movsl
aaa
adc
xchg
ljmp
pop
out
out
testb
mov
cs
test
dec
push
pop
push
mov
insl
adc
loop
sub
cmp
push
stos
sub
cmp
in
sbb
lcall
mov
lds
movsl
outsl
test
rep
xchg
dec
lret
iret
cmp
repz
sub
sbb
data16
dec
lds
nop
nop
push
insl
insl
and
adc
int
in
adc
and
jecxz
adc
or
mov
pop
daa
cli
mov
pop
sbb
pop
imul
adc
fldenv
and
add
std
mov
mov
jmp
fisttps
jl
mov
movsb
les
daa
mov
jo
cli
lds
in
push
out
lcall
popa
fbld
and
push
gs
pop
or
mov
xchg
fsubs
scas
mov
hlt
jae
insb
mov
pop
mov
mov
shll
rcll
lods
iret
and
mov
sarb
add
leave
mov
sbb
sahf
sbb
outsl
xchg
cld
sub
ret
addb
add
xchg
mov
test
sbbl
cmpl
dec
adc
in
test
mov
add
or
jecxz
xchg
mov
push
xor
mov
lods
and
push
shlb
sub
nop
stc
icebp
xchg
cwtl
test
mov
mov
lods
jnp
mov
and
pop
into
xchg
push
inc
fnstenv
sub
fnstenv
xor
push
inc
lock
pop
mov
push
sub
cmp
and
and
and
clc
xchg
int3
daa
imulb
mov
inc
add
subb
mov
or
lret
pop
xchg
scas
xchg
insl
outsl
fisubrs
xchg
and
mov
sub
cmpsb
jge
mov
orb
xchg
pop
hlt
je
cld
imul
sbb
xor
push
xchg
popa
daa
icebp
dec
mov
mov
or
dec
movsl
pusha
aam
jg
xor
push
cwtl
addr16
fmuls
jmp
pushf
out
add
xchg
movsb
sub
sbb
std
call
mov
lcall
jecxz
stc
lods
xor
cwtl
jle
add
push
scas
sub
cld
lods
int
mov
cmp
cmpsb
jbe
xor
sub
decw
cmp
lret
popa
sahf
jne
mov
repz
xor
jmp
lods
dec
sbb
mov
push
shll
xor
rcll
push
push
push
cmpsl
ds
shrl
mov
push
mov
xlat
out
mov
sub
inc
es
xor
ja
add
arpl
or
jbe
inc
popa
dec
in
jbe
lods
lds
lret
lahf
testl
pushf
es
xor
push
mov
and
jae
in
mov
idivb
rcll
xchg
out
xor
add
bound
sbb
jle
push
or
imul
int
mov
adc
mov
mov
xchg
cmp
inc
stos
mov
mov
stc
xchg
and
xchg
push
xor
xchg
push
inc
es
mov
das
add
mov
inc
out
sub
mov
in
xchg
dec
mov
imul
je
int
mov
orl
icebp
add
sub
mov
mov
dec
mov
int3
in
xorl
jmp
ds
lods
das
lret
out
adc
ss
testb
xor
cs
daa
popa
addr16
lcall
int
test
in
aad
mov
jmp
xchg
in
push
sub
ja
ret
in
sarb
enter
pusha
add
xor
out
arpl
add
pop
push
fdiv
ja
daa
adc
sub
fiaddl
mov
xor
adc
pushf
add
and
test
adc
and
stc
push
ds
out
loop
std
jb
adc
dec
jnp
and
mov
xchg
movsb
aas
add
imulb
mov
mov
pusha
je
jmp
sbb
sub
cs
jnp
adcl
rolb
jmp
fwait
outsb
cli
push
mov
lods
jbe
sbb
ljmp
pop
movsb
push
adc
test
add
iret
sti
sbb
pop
jbe
pop
inc
aam
xchg
loopne
leave
stos
xchg
pop
or
into
lret
lods
mov
mov
lods
and
xrelease
aas
dec
out
in
and
jbe
fistps
jae,pt
lahf
adc
stc
out
data16
xor
mov
fiaddl
cli
jge
sub
jmp
pop
sbb
ret
lret
xchg
xchg
lods
jnp
mov
loopne
fldt
dec
out
fdivrl
scas
push
pusha
je
add
loope
mov
jne
movb
ljmp
dec
ret
test
fs
lcall
popa
xchg
popa
dec
mov
mov
adc
add
xlat
cmp
jne
mov
and
subl
jp
pop
inc
adc
hlt
cmp
xor
xchg
hlt
jp
sbb
jge
xor
rclb
in
int3
jns
jecxz
jge
pop
xchg
test
or
insl
inc
mov
stc
or
loope
jle
push
jp
jp
push
mov
cmc
jecxz
mov
push
xchg
jecxz
adc
test
imul
popa
or
rorl
out
pop
dec
cmp
imul
mov
lret
cmpsb
arpl
lcall
pushf
jmp
in
lods
enter
and
ljmp
dec
insb
mov
imul
push
xor
or
mov
mov
add
dec
xchg
pop
pop
int
push
sub
xor
cs
xchg
xchg
rcr
sub
aad
outsl
pusha
dec
cmc
test
mov
cmp
out
stc
jge
sub
push
lret
daa
sub
mov
aas
int3
add
cmpsl
push
adcl
in
xchg
sbb
xchg
jp
add
push
pop
mov
in
insb
mov
scas
sarb
scas
stc
cmp
jl
cmp
rcll
rorb
and
inc
sbb
push
xchg
and
aas
aaa
add
and
imul
rcrl
jae
sahf
pop
sub
jnp
aad
jmp
cmp
ret
int
push
lret
lret
daa
or
or
inc
bound
in
add
push
pop
add
xor
movsl
or
add
jle
outsl
lahf
xor
fisubrl
push
xlat
ret
cmp
cmp
adc
pop
inc
sbb
lahf
ljmp
rolb
xor
movsl
js
fcoms
push
pop
mov
push
push
pop
sbb
jb
jne
push
shrb
das
pop
cmpsb
clc
fwait
lahf
mov
dec
jne
pop
xchg
fstps
adc
mov
push
inc
lds
sahf
dec
stos
pop
or
xchg
cli
mov
fnstsw
nop
or
out
aam
out
mov
push
xchg
cwtl
lock
scas
jns
cmp
xor
repnz
and
sub
dec
mov
test
jno
ret
lds
mov
imul
xor
sub
xlat
inc
push
bound
adc
xlat
xlat
ret
imul
rorb
jmp
movsb
fs
sti
cs
lahf
fistpll
sbb
ljmp
xchg
sbb
dec
scas
out
xor
or
add
jne
int
pop
lret
shll
mov
sbb
mov
fmuls
cli
lret
inc
cmpsl
stos
testb
fmuls
in
cmp
cwtl
popa
add
and
push
gs
sub
testb
mov
jmp
outsl
pop
out
test
mov
push
xchg
lahf
shll
sbb
mov
ficoml
mov
cld
sub
xchg
xor
shufps
mov
adc
and
mov
stos
mov
xor
inc
xchg
cmp
ret
popf
sbbb
and
xor
mov
pop
mov
sbb
and
cli
nop
stos
mov
mov
mov
inc
mov
inc
sub
pushf
mov
cld
dec
jne
insb
daa
push
push
cwtl
xor
pop
sub
adc
xchg
dec
and
enter
add
mov
das
sbbb
push
addl
jmp
jp
pop
ret
pop
mov
add
pop
mov
repnz
or
out
clc
mov
xor
cmpb
mov
sbb
fisubrs
testb
cmp
lea
lret
jle
mov
leave
loopne
into
pushf
and
fsubrl
or
enter
pop
jmp
iret
lret
aam
jg
adc
mov
lret
adc
jge
pop
and
mov
lret
xor
mov
je
push
xor
pop
scas
jb
scas
fdivs
scas
pop
jb
adc
add
jbe
repnz
xchg
dec
or
mov
cmp
push
repnz
les
fisttps
mov
mov
push
pop
jmp
mov
fs
bound
jl
out
fwait
cmp
loope
adc
int3
jne
and
aas
subb
ds
sub
cmp
mov
insb
ds
push
or
mov
out
int
fldcw
cwtl
cmp
gs
lods
add
lret
mov
fwait
mov
push
xor
cmpsl
xchg
in
add
lods
leave
pop
jge
xor
mov
adc
xchg
int3
dec
fs
push
jp
rorb
test
adc
push
or
outsl
xor
pop
repz
mov
xor
lds
add
dec
insl
and
pop
imul
rclb
aaa
fidivrl
fbld
and
pop
pushf
jo
test
lcall
push
test
push
fmul
fwait
pusha
or
jge
inc
ds
mov
out
pushf
loop
cltd
jecxz
push
test
mov
push
sbb
ror
pop
push
or
or
outsb
sbb
push
mov
pop
and
mov
leave
clc
in
sub
inc
inc
repnz
xlat
and
cmp
aam
iret
mov
cltd
sub
mov
and
sub
test
inc
stos
xor
add
jmp
inc
sbb
iret
and
call
ss
aaa
inc
dec
or
out
adc
add
jge
popf
and
inc
mov
push
std
sarl
and
sub
mov
cmpsl
adc
pop
test
xor
enter
out
sbb
cmp
lret
shlb
cli
pop
aad
or
push
stos
lds
les
jns
add
out
mov
xor
mov
daa
int
les
add
aad
lret
pushf
xchg
fbstp
stos
imul
loop
mov
adc
jp
jecxz
ja
push
jb
icebp
or
dec
jle
dec
popa
mov
dec
xchg
jge
inc
test
jmp
or
cmp
icebp
push
sbb
sbb
fmull
imul
pop
mov
arpl
es
cmp
in
daa
ss
shlb
clc
lods
jg
test
sbb
leave
es
sbb
scas
shlb
pop
enter
pop
ljmp
dec
pop
subb
jle
push
ret
mov
ret
into
repz
lret
aas
mov
fsubl
testb
and
pop
jnp
ss
fldenv
les
jbe
sub
je
bound
dec
xlat
clc
shl
xchg
mov
ljmp
adc
pop
nop
cmp
aaa
mov
pop
scas
fldl
push
mov
in
stos
in
and
and
pop
push
sub
std
outsb
dec
ljmp
icebp
xor
jg
xchg
or
mov
adc
cmp
lret
inc
mov
jne
mov
lret
pop
lea
cli
jge
pop
mov
dec
shrb
sbb
adc
xor
push
dec
subl
cmp
inc
nop
add
pop
inc
cs
popf
rorl
inc
aas
adc
pop
das
cli
add
fisttps
mov
jl
call
cltd
dec
push
cmp
jp
cmp
pop
sub
shll
dec
popa
jne
hlt
push
int3
adcb
outsb
das
out
dec
inc
pop
sub
arpl
gs
fcomps
iret
js
test
lods
push
lahf
rol
int
in
jle
jae
sbb
push
add
pop
push
dec
roll
cmpsl
stc
into
stos
fbld
dec
ljmp
imul
test
aaa
jbe
sbb
mov
hlt
pop
pop
dec
mov
push
push
insb
out
push
xor
movsl
jl
xchg
lods
notl
scas
imul
sbb
push
push
pop
sahf
inc
jnp
mov
cs
enter
lock
out
cmpsl
pop
push
fbld
aad
adc
insl
cmp
xchg
push
inc
jae
add
fs
call
xlat
outsl
jnp
cmp
ds
sbb
inc
cmc
mov
or
jmp
dec
ljmp
pop
inc
scas
lahf
sub
xor
push
push
nopl
testl
fcmovu
ja
les
cli
js
sbb
das
xor
jecxz
mov
pop
push
insl
out
xchg
dec
add
mov
pushf
sbb
mov
hlt
testl
clc
xorl
xor
fisttps
pop
push
cli
push
cli
outsb
dec
or
cmp
dec
sub
pop
shll
dec
jle
jnp
out
adc
test
movsb
push
loopne
lods
ror
xchg
ds
xchg
adc
or
addr16
scas
mov
mov
mov
cmp
imul
scas
subl
loopne
int
sub
add
pop
mov
xlat
mov
int3
divb
mov
mov
addl
cmp
add
loop
jo
scas
add
dec
loop
push
mov
mov
andl
and
jnp
ret
sbb
icebp
jae
push
lret
jmp
xchg
or
sub
jmp
jb
xor
mov
stos
and
cli
mov
lahf
xor
leave
testb
jmp
push
or
sub
jo
iret
test
insb
xor
outsb
call
popf
mov
lock
int
test
push
mov
cmp
inc
fildl
pop
xchg
mov
mov
mov
and
ljmp
sbb
divl
int
stos
xchg
inc
or
in
daa
xchg
leave
fildl
adc
jb
lret
xchg
aad
and
mov
add
sbb
out
in
adc
mov
stc
arpl
inc
xchg
xor
popf
gs
sbb
pop
aam
iret
into
out
add
sbb
sahf
inc
adcb
stc
dec
pop
data16
lcall
and
mov
pop
sub
cmp
push
repnz
mov
ja
daa
daa
adc
dec
in
loop
cmc
mov
mov
scas
mov
mov
xchg
mov
dec
ljmp
nop
pop
cmpsl
push
mov
add
pusha
xchg
fpatan
mov
sbb
add
jl
mov
addl
cwtl
push
push
pavgb
out
pop
adc
outsl
leave
sub
mov
or
xchg
cmc
lods
jo
sub
inc
sub
aaa
sbb
inc
repnz
jp
xchg
fiaddl
adcb
mov
ss
in
add
sub
daa
aam
fiadds
in
mov
mov
in
aaa
imul
push
or
popf
in
pop
test
mov
mov
jo
test
pop
movsb
fstps
push
mov
fistps
or
jmp
and
int
int3
cmp
sub
in
xchg
sub
cmp
sbb
in
xchg
daa
sbb
sbb
aam
in
and
movsl
lods
push
roll
mov
push
mov
push
fnstcw
lahf
std
insl
pop
or
inc
iret
testl
add
sbbl
jmp
xlat
adc
or
jp
jle
adc
inc
fistpl
iret
xlat
push
int
sahf
pop
loop
xor
mov
rcrb
sahf
pop
stos
push
aas
jmp
fstpl
xchg
sbb
inc
cli
or
mov
sahf
das
xchg
aaa
lods
adc
mov
push
outsb
andb
push
invd
and
pusha
jp
sub
cs
cmp
cltd
add
imul
cmp
ljmp
xchg
dec
ss
dec
xchg
or
daa
pop
xchg
inc
adc
loope
repz
cmp
mov
in
sbb
pusha
jmp
jns
jge
mov
inc
and
jg
push
insl
xlat
scas
or
mov
repnz
in
addl
cmpsl
mov
outsb
mov
pop
and
outsb
dec
push
mov
mov
jno
adc
dec
scas
mov
jae
xchg
aam
shl
adc
daa
loopne
lret
jmp
xchg
adc
sub
or
jp
and
jne
jnp
sub
sbb
test
inc
lock
into
nop
popf
in
add
pop
mov
test
adc
out
jmp
xor
repz
dec
dec
xchg
test
fwait
movsl
sbb
mov
jo
stos
push
in
out
nop
or
clc
lret
push
mov
std
lret
jns
rcll
mov
add
inc
jp
imulb
cmp
and
pusha
add
dec
aam
dec
push
popa
popa
jb
mov
sbb
out
mov
and
pop
stc
xchg
int
test
push
mov
sub
std
int3
dec
divl
pop
jne
mov
xor
jg
jae
add
push
xor
jns
std
test
shlb
dec
sbb
outsl
push
icebp
aam
mov
push
push
insl
cmpl
cld
cvtps2pd
sbb
popl
mov
mov
scas
mov
jecxz
fwait
icebp
sbb
cmpsl
jbe
adc
popa
pop
push
inc
pushl
add
sub
icebp
sub
add
sbb
mov
xor
ss
repnz
pop
test
lret
icebp
idivl
les
arpl
mov
mov
testb
cmc
xchg
shrb
push
mov
int3
sbb
shrl
bound
adc
push
push
xor
push
inc
popa
xor
push
pop
mov
aas
lret
rclb
sbb
and
shl
xor
dec
aam
int3
cs
or
mov
lods
dec
sub
jo
mov
stos
pop
sbb
jecxz
movsl
push
aam
cmpl
xchg
push
in
out
aaa
gs
sbb
sbb
mov
and
test
adc
icebp
les
aad
mov
sbb
mov
test
pop
nop
es
mov
mov
stos
je
push
repnz
aam
ss
subb
jmp
inc
mov
cltd
sbb
pop
push
adc
jl
or
jo
les
pop
and
dec
sti
jl
fiaddl
cltd
adc
lea
jge
adc
lahf
pop
push
mov
xor
cli
rcll
les
std
hlt
adc
xor
jp
mov
mov
jmp
xor
mov
cltd
push
in
mov
xchg
cmp
dec
pop
out
imul
out
mov
inc
and
cmpsb
cmp
leave
mov
fcomps
sub
shll
cmp
enter
enter
xor
cltd
jmp
pushf
xlat
xchg
sub
adc
lahf
pop
mov
fidivrs
jp
dec
iret
add
fsts
xchg
xor
mov
and
outsb
xchg
shlb
pop
inc
aaa
clc
jg
add
cli
jo
dec
repnz
popa
push
push
jbe
daa
inc
pop
xor
ss
jmp
stos
push
repz
and
sbb
movsl
xlat
pop
inc
insl
pop
push
sub
in
out
xlat
loop
jp
mov
sbb
ss
and
xchg
in
inc
sub
or
mov
sti
dec
scas
cmp
lods
shlb
ss
test
adc
jle
sbb
push
pop
div
enter
loopne
enter
push
xor
pop
stos
pusha
lahf
push
adc
or
ds
dec
daa
sub
cmp
mov
xor
xchg
mov
xchg
mov
mov
sbb
mov
mov
add
or
push
dec
stos
adc
mov
xor
inc
cmp
pop
push
in
pop
cli
xor
jns
pop
jecxz
rcr
imull
mov
push
sub
mov
adc
mov
es
mov
sub
imul
addb
sub
enter
movzwl
fisttpl
pop
push
and
xor
addl
and
sub
lds
lods
lods
out
pusha
mov
xchg
leave
or
push
pushf
fscale
insl
stc
or
cltd
cmp
adc
stc
dec
dec
insl
lcall
sti
icebp
fildl
dec
mov
mov
and
loopw
xor
mov
cmpsl
xchg
inc
jl
clc
cwtl
lea
div
mov
ljmp
sbb
into
aas
insl
jno
mov
std
in
repnz
mov
sti
in
cmp
mov
lahf
out
jp
pop
les
xchg
jecxz
std
push
add
adcb
lret
rorb
sub
sbbl
cmp
mov
push
jbe
imul
push
ljmp
leave
and
fs
out
xchg
cmp
xchg
cmp
xor
mov
mov
mov
incb
stos
pop
clc
push
inc
or
mov
cmp
aad
shlb
in
xchg
push
je
imul
xchg
test
sub
js
push
cmpsb
and
pop
orb
sbb
add
or
adc
notb
imul
mov
push
cmpsl
aaa
fnsave
xchg
int
mov
cld
pop
mov
mov
aam
mov
mov
and
or
mov
mov
xchg
cmp
jnp
aaa
sahf
push
movsl
fisubl
outsl
xchg
mov
mov
inc
lea
imul
and
aad
mov
hlt
fildll
ret
sbb
cli
jp
mov
lea
les
lret
insl
sbb
pop
lret
es
mov
dec
jae
sub
adc
sub
push
pop
jge
adc
add
inc
xchg
mov
jl
das
lahf
fs
or
push
stc
pop
in
mov
mov
jle
push
jmp
cmpsl
aas
test
or
jp
test
or
mov
aam
dec
cld
push
pop
mov
pop
xor
push
sti
dec
loopne
sub
pop
mov
add
movl
or
xor
stos
push
aad
mov
sub
pop
daa
push
cld
test
ret
imul
mov
fstpt
jae
loope
int3
or
xchg
push
loope
mov
jo
xor
cmpb
jmp
pushf
pop
lret
test
fwait
or
out
mov
ja
lods
jnp
add
push
sbb
mov
nop
sub
xchg
mov
sub
sbbl
jp
and
dec
repz
fisubrs
out
sub
or
cltd
sub
in
popa
pop
out
popa
aam
add
in
cmc
call
jnp
push
jl
push
movsl
lods
sub
daa
push
movsl
stc
jecxz
mov
mov
outsl
jno
lret
cmp
ljmp
out
sarl
imul
cmp
daa
imul
and
cld
lds
push
sub
filds
mov
jge
sahf
cltd
loopne
call
adc
inc
mov
in
fs
outsl
es
in
mov
sub
icebp
popa
cli
shrl
rolb
ja
ss
cld
xchg
lahf
lcall
jns
insl
lea
js
fxch
sbb
arpl
jp
push
mov
mov
dec
hlt
dec
dec
out
popf
push
push
push
jbe
fnsave
ss
jns
adc
andl
xor
fwait
jo
enter
mov
push
xor
outsb
push
test
inc
repz
push
into
xor
inc
jle
and
popa
jne
adc
and
test
cmp
int
xchg
fldcw
sbb
and
jecxz
mov
in
sbb
insb
pop
sbbl
stos
dec
add
mov
gs
and
add
sub
mov
hlt
stc
add
fsubp
xchg
in
cmpsl
fcmovne
xchg
sti
sahf
pop
lods
dec
int
or
push
cmp
orb
leave
mov
push
dec
lret
aaa
sti
mov
adc
fnsave
mov
insl
div
jg
aam
adc
into
and
rcr
xchg
xor
xchg
pusha
sub
repz
test
jae
cmpsb
mov
push
insl
outsl
xchg
jmp
cmp
loope
movsl
mov
inc
stos
jg
push
jmp
and
dec
orb
push
es
jg
nop
jae
aam
xchg
mov
sub
imul
popa
xor
imul
repnz
adc
cmp
fadd
push
jnp
dec
inc
or
xchg
outsb
or
pop
cmp
pop
dec
movsl
sbb
or
push
pop
daa
jns
fwait
jle
xor
icebp
lock
test
push
sub
dec
aad
jne
mov
and
mov
aam
add
mov
iret
inc
cltd
call
mov
add
shlb
fldcw
loope
in
fcoms
inc
pop
or
lods
or
jns
xchg
pop
mov
cmp
fsubl
push
stos
test
fisttpl
pop
and
xor
mov
jnp
hlt
icebp
xchg
test
xor
scas
insl
dec
xchg
pop
mov
je
and
cmp
je
cmpsb
cltd
mov
cmpsl
or
pop
jb
cmpsb
mov
mov
sbb
aas
data16
adc
mov
sub
pop
mov
ss
push
in
sbb
clc
mov
mov
test
jo
xor
cmpsb
daa
sarb
sbb
and
test
mov
mov
xor
fstpt
adcb
xchg
scas
xchg
push
and
pop
sub
outsl
and
sbb
inc
mov
push
push
in
mov
and
mov
xchg
mov
mov
fimull
mov
mov
mov
sbb
ss
xor
mov
ljmp
fildl
fcmovnb
mov
popl
imul
fs
hlt
inc
shrl
out
aas
ljmp
sub
adc
xor
and
sarb
xor
lods
xchg
sub
sbb
mov
add
mov
scas
mov
aam
cmc
addl
xchg
subb
ror
mov
cwtl
or
add
cmc
xchg
outsb
rorb
ja
pop
jno
mov
jbe
pop
into
bound
xchg
mov
sbb
fbld
loopne
sub
pop
adc
add
aaa
pop
xor
clc
popa
push
cmc
cwtl
and
add
xor
sub
mov
mov
lea
in
xor
dec
dec
add
out
add
shll
dec
xor
and
and
enter
dec
inc
rorb
sbb
cmp
xchg
iret
mov
lock
dec
xchg
push
jle
xchg
outsl
inc
cmp
loop
mov
lods
popa
lret
push
and
ds
shll
ret
sti
hlt
call
inc
mov
dec
insb
mov
mov
test
cmpsb
outsl
mov
adc
sub
shll
and
pop
outsb
jns
xchg
sarb
les
je
push
add
xor
dec
cmc
jecxz
mov
hlt
bound
jmp
jae
cs
mov
ja
or
and
jb
pusha
sahf
mov
repz
ret
call
int
movsl
xlat
aas
xchg
test
mov
repnz
xor
or
je
inc
addr16
nop
or
xchg
push
stos
daa
repnz
pop
pop
sbb
inc
movsb
ds
or
ds
cmp
outsb
push
es
aam
imul
push
adc
imul
sbb
xor
or
stc
xchg
mov
lods
mov
pop
xlat
jle
jnp
iret
mov
in
pop
test
popa
push
mov
fistps
lods
mov
mov
or
xor
shll
jg
in
imul
jne
movsl
popf
and
xchg
sahf
scas
add
mov
jle
pop
mov
test
jg
mov
sbb
popf
cmp
sbb
and
rep
bound
xchg
mov
rcl
popf
hlt
and
push
out
arpl
cmp
ror
pop
roll
xchg
addr16
ss
dec
leave
sub
aad
lret
add
imul
adc
popa
adc
ss
leave
push
push
push
cld
inc
cmp
mov
dec
sbb
cmp
add
ds
out
pop
mov
dec
sub
or
ret
jmp
imul
ja
in
in
scas
jnp
ljmp
xchg
mov
clc
xchg
scas
mov
sbb
hlt
fists
sbb
es
xlat
enter
iret
and
xchg
xor
and
and
addr16
inc
aam
lret
pop
jno
sub
popa
xchg
shll
mov
int3
adc
pop
negb
pop
cld
inc
mov
sub
sub
pop
push
or
or
ficomps
cmpsl
nop
add
out
jge
repz
std
std
lcall
push
add
mov
xor
lds
rcr
push
push
cmp
pop
jg
sbb
dec
sarl
xchg
mov
leave
xchg
popf
mov
imul
sbb
in
cltd
jp
das
xchg
sbb
out
mov
mov
frstor
push
mov
adc
in
mov
push
cli
sar
xor
push
cmp
sbb
cld
adc
mov
jle
rcr
lret
and
jp
cwtl
add
daa
jne
cltd
mov
xor
mov
mov
in
idivb
mov
sti
xor
or
in
mov
scas
popf
into
dec
jb
std
xlat
xchg
sar
mull
adc
fcompl
cmp
xor
lods
add
push
aad
mov
out
dec
aas
popf
bound
jmp
sahf
mov
lock
or
inc
mov
inc
in
push
in
add
sbb
mov
pop
push
out
enter
or
popf
jle
add
sbb
jle
mov
ror
jno
hlt
or
pop
sbb
add
mov
push
jae
and
inc
or
mov
shlb
jo
shll
xor
mov
testb
push
mov
nop
sub
inc
scas
jle
mov
scas
sbb
push
add
mov
sahf
icebp
sbb
cmp
daa
sbb
mov
lock
xlat
mov
test
mov
aad
inc
insl
mov
sub
adc
jae
pop
pop
gs
call
mov
aas
stos
rol
xor
or
pop
push
leave
xor
mov
xorl
xchg
std
icebp
push
call
adc
int3
jbe
jb
sbb
stos
jl
imul
std
ffreep
and
test
ds
xchg
adc
in
cltd
cld
lret
mov
in
and
and
or
inc
mov
aad
pop
arpl
jnp
fwait
xchg
adc
test
cli
les
sbb
cltd
fmuls
dec
cmp
push
dec
jo
and
mov
add
push
out
mov
insl
in
or
jnp
push
mov
xor
dec
dec
leave
scas
mov
leave
dec
pop
pop
jge
ret
or
inc
mov
xor
jp
dec
cli
mov
inc
movsl
mov
testl
pop
jge
mov
pop
jl
add
mov
pop
cld
movlps
test
mov
shll
loop
pop
ret
shlb
push
push
jno
xchg
mov
mov
add
inc
sarb
jmp
jno
inc
pop
xchg
xchg
popf
out
sbb
ja
aad
xor
imull
repz
mov
or
aam
cld
ret
add
dec
mov
add
ret
mov
out
lret
pop
pop
dec
cmp
adc
push
cmpsl
inc
inc
mov
ds
xchg
fiaddl
adc
pop
aad
add
mov
or
mov
lret
xor
push
cli
sub
and
xchg
out
cmpsb
orb
fsts
dec
nop
addr16
jle
pop
push
pop
bound
add
fs
or
pop
clc
lods
sbb
adc
jb
mov
sub
lea
jo
gs
fildl
and
cmp
lret
inc
mov
sub
popf
js
stos
icebp
sub
insl
sub
add
out
inc
repz
je
pusha
js
or
std
outsb
lock
jo
in
inc
mov
iret
xchg
sbb
cmp
cmp
push
scas
or
inc
aas
ss
sub
mov
xlat
call
mov
out
jg
inc
lods
stos
mov
in
int
lods
mov
pop
push
lret
stos
popa
aas
push
js
cwtl
sbb
outsl
dec
mov
in
pop
cs
push
nop
stc
mov
xchg
xor
inc
inc
adcl
mov
or
or
fimull
dec
push
neg
out
and
leave
pop
pop
ljmp
jae
dec
mov
enter
enter
hlt
or
repnz
icebp
adc
sbb
lds
in
or
pop
rcrb
add
and
out
sti
and
adc
sub
fmuls
inc
leave
lods
sbb
push
rolb
xchg
jns
sub
dec
mov
add
jae
push
in
add
adc
fisubrs
jmp
stos
dec
adc
scas
lea
movsl
or
std
arpl
xchg
popa
jne
nop
sbb
inc
outsl
jecxz
jg
and
jns
xor
push
sub
pop
and
cmpsl
gs
sbb
outsl
nop
adc
es
mov
inc
jecxz
rcrb
ljmp
pop
or
mov
pop
ja
in
or
jb
aam
add
aam
imul
sbb
testl
ret
fnstsw
xchg
xchg
stos
pop
push
add
lcall
in
sahf
mov
mov
ja
enter
sub
int
mov
or
sub
incb
jge
sub
insl
addr16
xchg
mov
pusha
in
xchg
xor
mov
ljmp
xchg
sub
lods
xor
jne
inc
mov
adc
mov
rcll
adc
push
hlt
cwtl
sub
or
pop
pop
sub
imul
ret
leave
lret
push
icebp
aad
ret
cmc
sahf
jb
sbb
sbb
cmp
mov
mov
aam
cmc
es
aam
iret
lods
inc
xchg
mov
loopne
mov
les
shlb
mov
sahf
mov
loop
xor
aas
das
enter
dec
add
cmp
and
out
outsb
repnz
mov
push
aad
jno
add
mov
lds
xchg
dec
mov
out
loope
pop
sbb
cmp
aam
push
ret
sub
push
out
adc
dec
test
xor
push
or
mov
push
cmp
mov
int
adc
jo
int
jle
push
xchg
lret
les
push
negb
lret
pop
sbb
adc
cs
test
mov
in
dec
add
push
xor
pop
inc
push
add
or
daa
inc
fsubrl
or
iret
jnp
ss
cmp
adc
push
xlat
nop
in
mov
mov
pop
xor
test
arpl
xchg
sub
shrl
sub
xchg
xchg
jnp
inc
dec
js
imul
sti
jl
sub
sahf
pop
lcall
fisubl
mov
jae
mov
outsl
mov
out
xchg
fcomi
cld
or
adc
or
test
sub
adc
clc
imul
fadds
leave
lods
outsl
or
fcompl
int
pop
jne
stos
pusha
add
mov
out
inc
gs
cld
call
imul
movsb
mov
add
mov
pop
xchg
in
dec
test
cli
push
and
incb
cmpsl
mov
or
psrlq
and
dec
bound
imull
xchg
enter
les
aad
insl
clc
pop
in
jmp
aad
lds
lret
xor
adc
in
xchg
aas
subl
adc
cmc
mov
push
xchg
adc
mov
loope
pop
mov
mov
xor
or
mov
add
xor
pop
arpl
xchg
nop
dec
mov
call
mov
cmpsb
rorl
dec
xor
idiv
and
and
adc
xchg
cwtl
pop
std
cmp
bound
ja
xor
nop
lods
jbe
loopne
int3
inc
hlt
sti
lock
je
jecxz
addr16
cmp
test
lods
hlt
cmp
push
aad
testl
jge
sbb
clc
jg
add
or
xor
fstps
cmp
sti
pop
leave
hlt
test
popf
mov
test
adc
jo
lock
outsl
cmp
aam
xchg
xchg
adcl
fsts
scas
jmp
ljmp
loop
push
jmp
pop
and
inc
fists
sub
add
mov
jg
add
jmp
clc
mov
and
adc
sbb
icebp
pop
pushf
jmp
cmp
xchg
inc
out
loopne
or
adc
mov
int3
xor
cmpsb
dec
xor
iret
and
fiaddl
adc
xchg
movsl
mov
sbbb
pushf
enter
imul
rolb
xchg
lcall
sarl
sbb
test
lea
sub
dec
mov
jge
and
mov
and
xchg
in
int3
addb
mov
aaa
scas
lahf
enter
jle
xchg
dec
pop
cmpsb
sub
out
cmp
push
add
pop
addb
mov
jne
sbb
hlt
das
or
ret
pop
or
jl
jecxz
incl
mov
leave
dec
ret
ds
pushf
or
push
sub
mov
adc
mov
xchg
cmp
popa
inc
xchg
fwait
aam
add
xchg
imul
enter
imul
pop
xchg
aaa
in
sbb
daa
repz
lods
bound
xchg
insb
mov
xor
rorl
scas
push
pop
and
scas
dec
sbb
int
mov
add
jl
ljmp
push
ja
in
lcall
adcl
fwait
dec
imul
mov
inc
pop
pop
outsl
outsl
adc
rolw
das
sub
pusha
in
lret
pop
stos
add
sub
shrb
inc
pop
movsb
fwait
in
sbb
es
inc
mov
jne
xor
push
push
sbb
mov
rorb
or
push
test
jae
sub
sbb
test
sub
lods
mov
lret
pop
idivb
xchg
inc
test
jecxz
fs
or
outsb
lods
sub
mul
scas
push
cwtl
mov
adc
jnp
loope
lds
sub
push
pop
dec
inc
aaa
add
lea
mov
out
lods
mov
es
xor
lea
popf
rorb
xchg
mov
test
sbb
insb
lock
mov
mov
lret
ja
jae
mov
hlt
data16
pop
adc
movsb
xlat
and
mov
mov
mov
aad
inc
adc
movsb
sub
xchg
sub
dec
mov
out
fiaddl
sbb
or
je
mov
mov
mov
jl
sbb
mov
sub
adc
fcoms
push
out
xchg
mov
jns
xor
sti
cmp
cmp
sbbl
movsb
xlat
repz
mov
xor
cmp
mov
es
int
push
mov
or
or
push
pop
lret
dec
inc
cmp
enter
ret
adc
and
push
and
sahf
cltd
and
or
loope
cmp
xchg
in
cs
mov
adc
push
adc
cmpsb
sub
out
fcoml
push
mov
pop
adc
lea
inc
jg
sub
ss
popa
shlb
dec
push
cmp
mov
pop
and
jmp
sub
jge
sbb
cmp
mov
mov
repnz
mov
add
enter
les
pop
sarl
hlt
ss
cltd
push
jle
push
pop
icebp
mov
xchg
in
aaa
outsb
popl
jae
mov
pushf
xchg
shll
mov
cmpsl
sarl
sub
lock
test
shrl
xchg
sub
adc
into
push
rolb
ds
roll
imul
andl
orl
dec
push
sbb
data16
push
ds
mov
adc
ds
add
arpl
dec
test
ljmp
and
jo
and
lds
dec
aam
in
push
mov
in
test
xchg
mov
aas
xorl
fisttps
pop
call
mov
stos
sub
fs
rorl
loopne
lret
pop
jp
xchg
push
mov
aad
sub
pop
ja
jecxz
add
sbb
stc
dec
add
lret
and
and
int3
mov
cmc
mov
cli
xchg
sahf
mov
xchg
dec
repnz
sub
cmp
ficomps
or
mov
stos
fisttpl
push
or
aaa
shl
popf
sbb
inc
jecxz
jne
fwait
mov
sub
movsb
or
xor
or
addl
imul
out
mov
ficompl
push
and
xchg
inc
push
dec
sub
jae
or
call
mov
or
pop
cmpsb
sarb
int3
pop
daa
popa
lret
jae
bound
xor
sub
push
sahf
add
aam
loope
fistl
cmp
shrb
cltd
jecxz
add
xchg
fwait
leave
mov
lea
xchg
mov
shlb
mov
sub
adc
pop
pushf
jae
ret
addr16
sub
push
cmpb
or
fildll
out
and
push
xor
out
popa
aad
inc
xchg
mov
fistpll
sub
adc
or
fldenv
data16
jecxz
cld
xchg
xor
cwtl
mov
lock
cwtl
xor
pop
jg
daa
push
dec
and
repnz
dec
dec
test
add
jns
mov
mov
add
xchg
jo
and
mov
or
add
lods
mov
loopne
mov
mov
in
mov
xor
dec
test
and
pop
repz
call
push
cmpsl
sub
inc
cs
mov
call
ss
outsb
jp
or
sub
outsl
leave
mov
jno
popf
inc
jl
int
nop
inc
int3
inc
loope
adc
jb
xchg
ret
or
xchg
xor
rcr
add
fwait
sti
aas
add
push
and
sbb
notb
jne
mov
mov
xor
js
push
in
inc
mov
enter
repnz
repnz
jo
test
lret
imul
xchg
pushf
jg
ljmp
repz
dec
jb
scas
mov
jp
adc
dec
xchg
dec
dec
out
jne
and
dec
sub
or
loop
add
aam
cltd
mov
jle
in
jno
jbe
aad
and
shl
adc
or
lret
add
xchg
pop
lcall
outsb
mov
mov
mov
stc
jno
in
xchg
pop
in
xchg
fists
push
scas
mov
push
xor
sub
sub
jmp
add
addr16
mov
ds
or
mov
jne
jmp
lret
xor
jae
imul
sub
mov
push
pop
mov
push
inc
iret
pop
pushf
and
and
jo
cmc
testb
repnz
cmpsb
inc
out
add
out
mov
mov
call
aam
jo
sbb
enter
leave
pop
inc
out
js
data16
add
mov
cli
ss
push
push
push
cltd
rorb
inc
mov
mov
inc
das
sbb
int3
movsl
lods
or
or
aas
lret
xchg
jp
xchg
pop
repz
dec
popf
cmpsl
cmp
jno
cltd
stos
push
jmp
jecxz
adc
xor
mov
inc
pusha
adc
in
xchg
mov
cltd
sub
jecxz
popf
push
aaa
inc
js
aas
and
stos
jp
lods
scas
scas
pop
scas
arpl
jo
fstpt
and
add
mov
clc
push
mov
pop
mov
push
out
aad
fsubrs
push
out
cmp
jle
and
and
in
cmp
adc
fxtract
out
mov
mov
sahf
mov
dec
cmpsb
andl
mov
xor
cmpsl
lock
cmpsl
insl
inc
and
add
out
lret
cmp
leave
inc
push
push
fsubs
ljmp
sti
das
repz
mov
pop
adc
test
sbb
ret
loopne
inc
cwtl
inc
nop
dec
mov
xchg
add
call
ja
xor
mov
sbb
mov
sahf
xor
stc
inc
je
ss
mov
js
pop
sahf
js
fistps
inc
cmpsb
and
xor
sub
popa
popa
inc
sbb
repnz
sbb
in
mov
filds
in
jg
or
aad
add
inc
adc
movsb
fldenv
ds
aas
jp
jle
ljmp
jp
xchg
or
dec
jbe
dec
ds
pop
cmp
movl
mov
mov
push
arpl
fimull
test
fdivs
lock
ficoml
add
cld
push
sub
mov
dec
add
ret
sub
in
out
test
insb
icebp
bound
cmp
adc
xbegin
addr16
adc
push
in
pop
mov
popf
pop
push
fisubrl
add
cmpsb
adc
mov
ja
lcall
fists
inc
inc
cltd
movsl
pop
and
push
lea
and
pop
shl
xor
pop
aad
cmp
and
push
pop
inc
rcrl
iret
xor
dec
sarb
jno
stos
inc
jo
sub
jmp
fisubl
arpl
aad
int
outsb
addr16
jnp
clc
push
cmp
lret
dec
or
jns
jb
push
es
dec
dec
inc
add
xchg
xchg
xor
lea
pop
xchg
outsl
push
in
pop
iret
imul
hlt
sub
jmp
push
fldcw
cs
sub
in
cmp
mov
dec
jae
loopne
das
test
inc
icebp
lea
mov
push
rorb
and
or
mov
mov
es
sub
sti
push
jmp
mov
les
mov
les
sub
dec
lds
int3
fstl
sbb
lea
test
inc
mov
call
loopne
mov
icebp
pop
lahf
jge
or
jb
out
cmp
pop
sahf
rcr
xchg
mov
popf
dec
insb
andb
dec
dec
xchg
out
fstl
or
dec
dec
je
shll
mov
add
sub
shrb
xchg
push
cmp
imul
push
test
jnp
out
sub
leave
mov
mov
xor
jge
mov
inc
add
cltd
jp
dec
xchg
aad
jmp
jl
ja
inc
cmpsl
and
stc
sub
daa
stos
pop
mov
xchg
mov
jmp
mov
and
inc
test
stos
mov
mov
lahf
es
push
into
adc
push
loope,pt
shr
and
xchg
push
push
shlb
jo
cmc
sbb
sub
rep
mov
dec
mull
mov
insl
imulb
sub
scas
sbb
pop
mov
lds
mov
les
sub
jo
stos
inc
lcall
and
icebp
shll
movsb
lods
push
push
jecxz
adc
xor
pop
fnsave
sbb
push
adc
inc
ss
mov
push
push
loope
lods
and
xchg
xchg
in
and
xchg
mov
rol
and
dec
orb
je
out
xor
mov
cwtl
mov
rorl
lea
sarb
inc
rol
vmread
mov
lret
aaa
jae
pop
pop
in
arpl
outsl
lret
cwtl
loopne
cmp
mov
dec
mov
jl
test
out
add
mov
add
insb
mov
cli
loope
push
and
icebp
lcall
mov
push
inc
gs
clc
vmovaps
pop
pop
call
orl
add
es
pop
or
repnz
loope
enter
js
out
gs
mov
ds
lea
lods
out
adc
das
dec
clc
loopne
mov
cmp
movsb
sub
or
ds
pusha
jnp
jp
outsb
push
rol
mov
jp
push
jl
dec
push
add
shr
add
js
fsubl
xor
dec
jmp
pop
adc
mov
mov
insb
jb
jle
inc
sbb
xor
inc
test
test
ss
mov
push
pop
and
mov
cmpsl
adc
xor
into
adcb
ds
bound
dec
mov
cmp
insl
in
aam
cmpsl
aas
cmp
or
enter
stos
jp
hlt
dec
shlb
pop
test
pop
push
pop
push
loop
push
cmp
loopne
sarb
dec
pop
xor
data16
adc
mov
in
subl
cwtl
xchg
lret
jmp
mov
shlb
sbb
pop
dec
addr16
icebp
xchg
or
clc
xor
lcall
vmread
repz
xor
mov
fnstcw
push
pushf
jp
pop
rcrb
and
ljmp
adc
xchg
jmp
sbb
inc
inc
jmp
es
cmp
mov
xchg
into
scas
jns
sbb
sbb
negl
mov
mov
mov
sub
jge
mov
jnp
xlat
jb
adc
stos
jg
mov
into
hlt
xor
push
cli
inc
std
stos
test
push
inc
push
sbb
adc
jge
cmpsb
gs
add
adc
lea
push
movb
test
push
or
cli
hlt
sub
pop
shlb
rcl
sub
mov
xor
sti
into
sub
addr16
into
sar
adc
push
push
mov
test
or
xchg
insl
mov
push
orb
push
xchg
lock
out
fcompl
test
cmp
add
out
aaa
jb
jmp
pop
add
insb
fistpl
mov
pop
sub
and
mov
xor
adc
mov
pop
and
dec
lcall
sbb
push
jmp
imul
sub
shlb
inc
jo
addr16
jb
mov
pop
lods
jnp
sbb
inc
movsb
enter
lock
fsubr
cs
xor
or
outsb
ds
cmp
mov
add
insb
xor
mov
xchg
sub
insb
jae
cltd
jecxz
cmp
and
mov
jg
jle
in
je
negl
insl
cmp
jo
push
jmp
orl
ds
mov
or
fstl
pop
jecxz
imul
inc
inc
pushf
mov
aaa
jge
clc
fisttps
mov
inc
mov
sub
pop
fdivrl
inc
call
pop
in
movsl
in
jl
mov
xchg
jne
daa
push
in
dec
xchg
jae
stos
movl
mov
pslld
enter
mov
cltd
and
and
xor
call
mov
pushf
iret
mov
rclb
inc
fs
xor
les
mov
fisubs
lahf
and
popf
adc
imul
rorb
xchg
in
cmp
lds
and
movsl
jne
imul
leave
mov
mov
ss
sub
sbb
sbb
fimuls
inc
push
or
inc
seta
in
pop
pop
sub
shlb
sub
xchg
sub
stos
xchg
js
mov
daa
cmp
xor
jno
lcall
icebp
mov
sarb
rclb
cmp
push
bound
imul
xor
out
push
xorb
stos
in
xchg
out
icebp
mov
adc
int
loopne
push
std
lret
inc
cmp
fs
push
pop
cmpsl
xor
jg
in
fldl
lret
add
imul
jo
jmp
and
xchg
mov
sbb
or
xor
xchg
in
pop
jl
jb
mov
sbb
inc
shlb
jno
push
icebp
je
mov
lret
jns
sbb
scas
movl
or
jmp
les
cwtl
arpl
xchg
subb
push
xchg
repz
cmpsb
repnz
sub
or
xor
add
cmpsl
fdivp
add
cld
mov
cmc
adc
fldl
sahf
inc
ret
js
xchg
cwtl
inc
pop
out
xchg
leave
nop
cmpsl
pop
in
lea
jmp
aaa
push
mov
add
jp
mov
and
pop
or
sbb
pop
orb
mov
call
out
jbe
pop
mov
das
fbstp
subb
adc
sti
adc
mov
inc
lods
mov
inc
cmpsl
push
inc
mov
testb
dec
push
adc
or
les
shrb
leave
in
lret
xor
lods
and
sbb
add
faddl
xor
mov
lds
scas
sbb
mov
adc
adc
and
lret
int3
bound
ret
or
imul
leave
mov
dec
mov
xor
mov
insb
mov
and
sbb
xchg
or
adc
dec
xchg
or
ficoms
ror
pop
loope
test
jns
fwait
decb
lods
into
xchg
pop
cmp
inc
mov
les
movb
sub
sub
mov
lods
jl
dec
sub
es
jle
mov
jmp
and
sbb
lods
lret
mov
xchg
xorl
rolb
pop
jno
inc
lea
loopne
pop
dec
ficompl
push
inc
sarb
or
xor
call
fistps
cmp
rcl
xchg
out
mov
es
inc
out
cmp
fidivrl
mov
mov
dec
cmp
imul
loop
cmp
xchg
push
sbb
sub
pop
dec
mov
into
pop
jno
push
jl
sti
lods
add
movsb
adc
insb
aaa
popf
ds
sarl
mov
insb
mov
mov
inc
jae
int3
mov
or
cld
mov
mov
xlat
stos
mov
int
loop
inc
mov
nop
loop
std
and
fsubs
xor
mov
stos
cmp
inc
jo
shl
cld
mov
lds
test
ss
mov
lcall
cmpsb
sbb
movsl
dec
bound
mov
dec
dec
or
lods
adc
or
cmpsb
aam
insl
in
ret
sub
mov
jo
cmpsb
dec
or
cmp
jge
jg
popa
outsb
arpl
imul
xchg
out
jge
movsb
sbb
imul
pusha
insb
fadd
mov
and
movb
pop
add
fmull
lock
add
outsb
lods
cmp
xchg
sti
or
out
mov
sub
enter
push
je
imul
aas
sub
popa
mov
stos
aaa
repnz
mov
inc
aas
dec
mov
out
pop
arpl
je
push
roll
cmp
pop
cmp
cmp
sub
or
and
or
roll
sti
stos
ss
lahf
sbb
insl
add
add
push
sbb
dec
mov
imul
hlt
jae
popa
flds
fidivs
daa
addr16
dec
inc
es
sbb
gs
in
xchg
insl
sub
cmp
jl
mov
stc
imul
arpl
in
cwtl
cmpsb
pop
mov
dec
pop
push
lret
cmp
fdivrl
mov
push
leave
cmp
push
sub
fcmovnb
enter
subl
ret
fs
add
ja
test
xchg
daa
and
push
dec
push
scas
adc
push
and
out
cmp
xor
jge
aad
and
lock
sub
popa
repnz
bound
dec
loop
rcr
mov
ljmp
cmp
xchg
cmp
enter
or
aad
add
jae
icebp
pop
xor
cmp
adc
movsl
test
dec
mov
rclb
adc
push
fsubrl
pusha
je
jg,pn
pop
and
adc
add
sbb
xchg
int
cmp
movsb
cmp
xchg
push
xor
mov
fidivrs
dec
pop
dec
push
cmp
xchg
sbb
mov
xchg
sub
loopne
iret
stos
mov
mov
stos
mov
add
std
stos
adc
cld
das
mov
int3
sbb
add
or
enter
movsb
cs
and
pop
mov
mov
imul
push
push
xor
sub
movsl
data16
pop
mov
lock
dec
loop
dec
sbb
pop
xor
ja
dec
subl
push
sub
inc
cmp
jecxz
mov
or
mov
mov
imul
push
mov
mov
rorl
push
sti
and
pop
jno
xor
movsb
adc
lret
fidivs
cmp
shr
popf
int
lods
stc
nop
inc
pop
je
xchg
out
movsl
jae
inc
clc
xor
or
out
lock
mov
testb
stos
pop
mov
int
cmp
ficoml
ret
push
xor
or
repnz
mov
push
sub
pushf
mov
nop
popa
mov
sbb
xchg
test
mov
ljmp
shlb
enter
push
sub
stc
gs
clc
mov
inc
js
iret
or
fildl
xor
add
or
lret
ret
aam
pop
adc
fstl
arpl
push
add
inc
and
and
cmc
enter
int3
mov
push
jecxz
inc
aad
bound
xchg
cmp
inc
mov
shl
xchg
lcall
sarb
pop
sarb
mov
push
pop
xor
dec
and
sbb
xor
mov
fnstcw
inc
jle
arpl
cmp
xor
test
pushf
decb
flds
stos
movsl
sbb
std
in
rcll
dec
fcmovb
fimull
nop
ror
lea
adc
adc
xor
aaa
jmp
popa
xchg
stc
pop
pushf
outsl
cmp
sarb
jge
push
test
into
mov
adc
sbb
add
addr16
inc
movsb
sahf
or
loope
mov
xchg
ret
lret
mov
add
jecxz
sbb
jmp
or
pusha
fwait
decl
out
jg
pop
push
push
mov
inc
mov
stc
lret
push
pop
push
popa
in
arpl
ljmp
ret
scas
push
aad
cmpsl
xchg
out
ljmp
lea
push
push
cs
gs
or
dec
and
sbb
push
cs
cmp
fs
push
imul
movb
push
fdivl
test
loope
and
lods
test
int3
adc
cs
in
int
mov
adc
cmp
mov
es
mov
cmc
ret
fmull
ljmp
mov
jmp
dec
mov
insl
aas
aam
jge
cwtl
xor
ljmp
repz
inc
leave
cli
mov
push
push
xor
addb
lods
push
mov
aas
xor
into
orb
movsb
outsb
lcall
xor
pop
mov
push
das
aam
mov
mov
mov
ljmp
inc
imul
jmp
mov
in
ret
rorb
dec
fcom
xchg
mov
and
es
jl
roll
push
mov
push
mov
mov
lret
in
shr
xor
lcall
push
sbb
in
cmp
int
andb
lahf
call
daa
adc
sub
fwait
in
test
fsubrs
xor
sub
incl
repz
or
shr
add
cld
cld
push
xor
call
xchg
movsl
jbe
outsl
xor
push
xchg
fnstcw
push
cmpsl
aaa
pop
hlt
mov
sub
adc
int3
mov
pop
xchg
rorb
sbbb
push
ss
repz
int
mov
push
insb
nop
aam
cwtl
lods
sub
jl
xlat
sarb
mov
not
pusha
fldt
inc
faddl
or
xchg
mov
out
cmc
mov
jno
mov
adc
mov
rcrb
mov
ficoml
mov
push
clc
aad
push
test
xor
testb
sbb
out
test
dec
fdivs
fcoml
aam
mov
cmpsl
insb
test
jp
cmpsb
data16
add
and
mov
sub
ljmp
nop
dec
lret
inc
aad
mov
iret
push
out
popa
insb
test
xchg
mov
xchg
leave
mov
nop
pop
push
divl
out
cmpsb
addr16
or
and
stos
arpl
xchg
pop
ljmp
fstp
or
loopne
dec
sbb
inc
push
push
xchg
jae
push
jge
mov
cs
fcomps
popa
push
stos
mov
pop
pop
pusha
dec
loopne
push
push
addl
add
pusha
andb
cmpb
dec
xor
ret
aad
jae
push
push
ret
imul
push
in
testb
ret
pop
cmp
jb
jg
fwait
xor
inc
push
dec
mov
or
xchg
push
sub
jecxz
and
fs
in
or
pop
incb
sbb
daa
xlat
inc
into
in
push
pushf
or
sbb
push
fimull
push
xor
xchg
loopne
pop
or
cmp
pushl
sbb
aaa
enter
push
out
mov
loopne
fsubs
addr16
movsl
jmp
mov
lcall
packssdw
fst
pop
insl
xchg
sarb
adc
sahf
jo
jne
cmp
daa
xchg
in
fcompl
push
aam
xchg
daa
test
rcll
es
mov
push
cli
mov
or
mov
pop
ja
push
subb
sub
sti
loop
sbb
iret
add
push
adcb
mov
aaa
jle
pusha
dec
fs
xchg
das
outsb
sbb
aad
je
stos
sar
mov
leave
mov
xor
sub
je
dec
loope
ljmp
push
sub
insb
dec
xchg
mov
add
jmp
mov
aam
lods
out
idivl
xor
dec
inc
xlat
decb
movsb
pop
mov
fcmovu
aaa
dec
inc
jmp
mov
dec
adcb
sub
lret
insb
and
jo
in
inc
pop
stc
inc
loope
jge
dec
arpl
mov
inc
call
test
xchg
call
loopne
xchg
fs
pop
stos
push
jnp
fcom
ss
in
dec
aas
imul
scas
std
xchg
dec
push
mov
mov
insb
sbb
lret
xlat
lret
jmp
dec
lahf
notb
cld
inc
fs
cmp
jle
shr
xor
pop
dec
cmp
in
ficoms
mov
shl
in
xor
jmp
leave
insb
cmp
sub
dec
jno
les
imul
cmp
xchg
sti
test
cmc
pop
and
cmp
pop
aas
int3
pop
sub
jmp
loop
jno
data16
mov
dec
sbb
fnstenv
sub
xor
add
stc
stc
out
adc
adc
jle
cmp
lds
jns
jae
add
mov
cli
mov
fsubp
lahf
push
or
adc
jle
inc
xor
std
push
mov
leave
push
and
aad
mov
jle
sub
std
pop
out
cwtl
cmp
icebp
xchg
dec
lock
lret
push
popf
adc
pop
lcall
dec
lret
mov
lock
jg
or
cld
loope
clc
xchg
scas
jl
loopne
fbld
dec
sbb
mov
jecxz
sub
dec
roll
jle
lret
das
mov
push
xchg
inc
add
arpl
add
subl
sbb
cmp
js
arpl
enter
lret
in
xor
popf
adc
dec
sub
dec
sbb
imul
xchg
es
dec
sub
and
add
cmpsl
je
add
pushf
rolb
sub
and
mov
jo
xchg
lret
push
rol
mov
push
lret
inc
imul
scas
ret
clc
icebp
jp
mov
adc
or
repnz
xor
loopne
in
cmp
inc
sbb
das
mov
clc
addb
outsl
dec
adc
test
sub
xlat
stos
push
js
lods
adc
cli
shll
mov
inc
rorb
and
std
mov
daa
test
movl
or
cs
or
xchg
pop
scas
lds
pop
pop
daa
outsl
mov
das
sbb
ss
fnstsw
loope
rcrb
pop
mov
dec
int3
hlt
aad
stos
adc
inc
jb
test
mov
cmc
dec
testl
getsec
rsqrtps
fcomps
xor
and
addr16
pop
stc
push
and
sbb
stc
mov
mov
jmp
sahf
gs
xchg
adc
push
ficoms
mov
loop
imul
mov
arpl
jle
int3
iret
push
cli
aad
mov
push
pop
out
jge
cmp
add
scas
test
lds
mov
mov
fadds
adc
loop
sub
and
lcall
in
pop
test
mov
flds
sub
push
xor
lock
pushl
xor
imul
nop
mov
pop
arpl
xchg
mov
inc
pop
cmp
cmp
enter
push
nop
sti
scas
and
lahf
sbb
iret
arpl
addr16
sub
ds
jp
repz
repnz
or
inc
pop
push
jne
outsb
inc
jl
fwait
pop
scas
sahf
lcall
aad
inc
fsubl
adc
movsl
xchg
jge
in
icebp
cmp
or
popa
insb
cmp
dec
aam
dec
or
add
test
xchg
xchg
imul
inc
push
movsl
cmp
cmp
roll
test
pop
xor
dec
cltd
xchg
or
imul
popa
mov
les
loop
mov
in
fdivl
xlat
adc
xlat
sarb
push
push
xchg
ja
pop
jno
mov
orps
pop
mov
std
test
out
pop
enter
xor
lea
out
cmpsl
pop
mov
int
mov
roll
add
add
insb
jge
imul
test
push
mov
movsb
cmp
popa
mov
js
pop
xor
in
imul
push
push
cmp
mov
mov
mov
fs
cs
sub
sbb
sub
imul
cltd
in
fbstp
push
cmpsb
jnp
in
imul
imull
hlt
jp
shrb
subl
repnz
push
xchg
or
adc
imul
sbb
and
mov
cmc
lods
xchg
scas
and
inc
std
adc
sbb
test
jmp
idivb
and
dec
cmpsb
aaa
or
daa
push
mov
dec
dec
push
fmuls
xchg
push
sar
insl
xor
push
push
jno
dec
testl
and
and
test
mov
sub
out
inc
mov
adc
add
in
push
stos
gs
sbb
mov
or
lock
aad
inc
and
aaa
xor
inc
mov
gs
inc
es
push
stos
andb
movsl
mov
adc
int
sub
into
push
mov
cld
gs
dec
lret
testb
je
pop
pop
jg
jg
lret
lcall
ja
lods
hlt
fistpl
cmpsl
movsb
pop
mov
sbbb
cmp
adc
decl
flds
cmp
into
out
fucomi
in
in
sbb
xor
out
adc
mov
fwait
mov
lcall
movsl
into
jno
mov
mov
push
stos
jecxz
stos
addr16
cmpsb
xchg
rorb
jnp
sbb
cmpsb
or
aad
mov
pop
fdivl
jl
xor
sbb
jp
popf
ja
cwtl
lods
arpl
inc
jg
imul
sbb
mov
xchg
out
sub
jmp
push
push
jge
jge
aad
gs
and
pop
fdiv
mov
shll
orb
testl
xor
cmpsb
fs
jmp
stc
scas
loope
inc
fcmovnb
push
jns
or
push
pop
cli
xor
aad
jle
aaa
ret
stos
inc
add
dec
mov
mov
pop
or
std
dec
aaa
out
add
push
cmp
sbb
sbb
test
notl
outsl
and
mov
into
loope
add
nop
andb
ss
sbb
xchg
dec
addb
out
and
hlt
scas
lods
lahf
xor
push
push
or
xor
push
in
shlb
pop
add
cwtl
cmp
or
sub
bound
rcrb
mov
shlb
stc
popl
jl
scas
adc
lods
mov
jb
xchg
lret
add
and
ss
mov
aas
adc
add
xor
mov
sbbl
test
notb
xor
cmc
repz
rcrb
ds
repnz
and
xchg
daa
push
or
ss
jo
and
mov
or
add
dec
ss
push
add
lahf
and
inc
jne
test
lods
addr16
sbb
xchg
or
popl
mov
lock
clc
mov
fidivs
adc
fcomps
xchg
cltd
lock
mov
jbe
das
outsl
std
xchg
das
xor
sbb
sahf
loopne
adc
jnp
insl
gs
rcll
sbb
adc
xor
aaa
sbb
jl
in
shlb
mov
jo
xlat
and
inc
fidivrs
or
sub
push
in
cld
inc
daa
stc
into
push
mov
inc
jecxz
cmp
mov
adcb
sti
aas
or
in
jb
scas
mov
and
inc
mov
mov
fdivl
push
repz
cmp
push
xchg
sub
cs
pop
fcmovne
enter
xor
and
cmp
cmc
lock
out
xor
adc
jg
and
pushf
bound
xor
add
and
ljmp
idivb
cld
mov
mov
clc
gs
repnz
push
lret
mov
or
push
add
mov
icebp
dec
sysenter
out
and
xchg
xchg
add
pushl
ljmp
and
in
cltd
fisttpll
icebp
lods
pop
aas
xor
imul
lret
and
mov
sub
outsb
xor
popf
sub
mov
inc
mov
in
and
dec
outsl
ds
jb
faddl
in
fwait
outsb
shrb
adc
daa
idiv
sub
inc
int
fdivrl
mov
mov
imul
fldenv
aam
test
int
stos
xor
xchg
push
add
adc
orb
xor
sar
hlt
jmp
mov
lds
loopne
sti
sub
mov
clc
dec
aad
aaa
test
push
xor
cld
shll
test
mov
fimuls
adc
test
pop
test
in
je
lods
out
adc
cltd
ss
jmp
lds
sti
sub
call
cmp
jle
pop
lock
es
out
jno
test
cmp
movsb
push
sbb
push
xlat
cmc
test
jbe
dec
das
test
lods
in
cwtl
inc
rcll
aaa
adc
inc
add
scas
repz
add
xchg
leave
sbb
jp
mov
mov
mov
dec
and
mov
push
xchg
clc
ret
pop
mov
movsl
in
fdivr
dec
bound
lcall
mov
out
lret
inc
push
ret
pop
or
push
dec
cmp
xchg
fistpll
mov
pop
inc
shlb
lods
lret
inc
mov
dec
add
inc
xor
push
pop
pop
push
jmp
mov
mov
sub
jecxz
inc
add
jecxz
enter
fwait
mov
sub
inc
add
ret
cmp
in
hlt
cmp
push
jl
mov
jmp
jo
ds
jge
jo
jmp
jo
lds
rorl
mov
fcmovbe
daa
inc
xchg
push
nop
or
es
shrb
mov
sbb
ficoml
and
popa
bnd
inc
notl
push
sub
into
lods
dec
mov
pop
ja
add
pop
enter
mov
push
mov
mov
iret
pusha
xor
lret
loope
rolb
scas
xor
mov
xchg
repnz
addb
adc
dec
lods
andl
fs
and
daa
jle
cmpsb
movl
sub
mov
jno
daa
fldenv
push
sbb
mov
mov
cmp
imul
pop
jnp
and
notl
stos
iret
push
push
mov
jne
lods
scas
xor
xor
cs
mov
out
fidivs
mov
into
scas
ficompl
sbb
stc
insb
inc
cmp
gs
lcall
into
xorb
and
mov
dec
fldenv
jnp
push
fmull
decb
bound
mov
int
shlb
ret
push
daa
jae
insl
add
mov
incb
rorl
in
jg
unpcklps
pop
iret
loope
mov
xchg
adc
add
nop
or
xchg
push
shrb
call
push
cmp
push
out
movsl
xor
xor
mov
fwait
cmp
stc
loopne
cmc
xor
cmp
subb
xchg
xchg
and
cmpsl
movq
jmp
or
sub
mov
rolb
arpl
jbe
sub
loopne
fcomps
add
mov
daa
fs
test
or
mov
cltd
pusha
popa
addr16
inc
mov
es
jb
pop
iret
or
xchg
add
push
sub
and
imul
adc
sub
dec
cmp
mov
stos
fs
vpor
mov
jns
sub
jle
push
adc
lods
sti
xchg
inc
in
xor
iret
insb
sbb
mov
in
rclb
sub
arpl
les
out
fldt
imul
cmp
mov
inc
test
pusha
mov
test
adc
lahf
loope
sbb
sbb
cld
lds
or
cmc
mov
add
ja
outsb
sbb
xchg
mov
cmp
dec
mov
es
mov
mov
repnz
iret
movsl
mov
or
daa
add
daa
adc
lret
subl
movsl
inc
adc
enter
adc
fiadds
jns
imul
loope
je
das
push
xchg
inc
sbb
cmp
js
inc
dec
aam
adc
popa
in
mov
cli
jecxz
dec
addr16
adc
xorl
loope
push
in
cmp
cmpsl
sbb
loope
sub
rcrb
inc
outsb
out
and
sar
dec
pop
pop
call
jmp
push
testl
jns
mov
or
xchg
jecxz
mov
pop
sbb
es
out
mov
sbb
pop
xor
mov
mov
pop
push
mov
sbb
leave
out
shll
pusha
xor
outsb
daa
push
std
ficomps
js
inc
mov
xor
pop
sbb
out
jae
movsb
imul
stos
adc
inc
insl
in
jle
sub
rorb
lods
ds
nop
lret
mov
lret
mov
das
shrl
dec
and
cmp
out
repz
adc
push
add
pop
mov
dec
daa
and
jecxz
mov
mov
xor
sbb
pusha
insb
mov
enter
add
icebp
scas
push
fstl
pminub
fldt
cmpsl
add
lods
mov
jg
dec
cmp
clc
jge
fdiv
aas
lds
xchg
xor
jb
sbb
sbb
sub
lcall
inc
enter
adc
add
leave
ret
mov
xchg
or
fsubp
push
movsb
jne
stc
pop
push
mov
clc
fdivl
bound
jmp
mov
pop
and
push
add
movsb
fs
dec
cmpsb
sbb
loopne
cmpsb
adc
mov
mov
xchg
pop
mov
dec
popa
ret
ret
dec
mov
mov
in
mov
into
fidivs
repnz
inc
cmp
lret
sub
xchg
inc
xchg
jle
mov
push
nopl
test
in
push
inc
mov
cmp
aas
icebp
mov
xchg
add
mov
scas
dec
lcall
jno
pop
inc
and
mov
adc
jp
or
add
mov
inc
mov
mov
pop
ja
imul
pusha
cmpsb
clc
mov
adc
add
imul
jne
call
frstor
xor
xchg
in
jg
icebp
fmuls
popa
leave
ljmp
test
ljmp
push
lock
lret
mov
ja
add
fimull
sub
shl
call
jle
scas
popf
adc
add
cmc
popa
push
aam
xchg
push
mov
repnz
stos
mov
in
mov
push
sub
into
cmp
popa
cmc
fstl
inc
jne
pop
and
inc
push
ss
add
in
dec
andl
cli
add
cmp
xor
dec
and
test
stc
xchg
mov
or
push
outsl
hlt
out
mov
dec
js
nop
adc
stc
shl
add
es
andb
xchg
push
and
adc
movsb
inc
pop
mov
xchg
mov
dec
repz
jnp
cmpsl
test
movsb
mov
jne
xchg
fists
ja
sbb
imul
cmp
ja
and
add
cmpsl
aaa
mov
cld
ret
cmp
cs
ret
dec
outsl
iret
pop
mov
cld
cltd
xor
xor
xor
dec
popa
sub
mov
popa
ljmp
shr
jg
add
cwtl
adc
lods
mov
add
cltd
push
cmp
and
mov
xor
movsb
jbe
rorb
fwait
out
jno
xchg
psubd
cmpsb
out
dec
js
xor
xchg
pop
movsb
stc
inc
mov
ror
arpl
decb
cli
mov
ja
mov
mov
mov
or
lahf
mov
stos
pop
adc
cmc
cmpsl
data16
pop
outsb
hlt
push
mov
movsl
mov
jmp
out
pop
add
push
fstpl
imul
data16
fnstsw
adc
popa
out
cmp
sbb
sar
popa
and
sbb
xchg
lret
movsl
aas
insl
mov
arpl
and
or
and
or
je
stos
push
adc
jl
aam
cmc
sub
pop
cwtl
rcr
repz
loop
out
pusha
aas
pop
dec
xchg
or
xlat
stos
mov
cmc
mov
xchg
cmp
xor
ret
cmpsl
sbb
stos
aam
ja
dec
rorb
jecxz
dec
cmpsb
mov
add
mov
shll
dec
mov
xchg
adc
movsb
movsl
test
lock
scas
cld
sbb
inc
rorl
sub
mov
jge
dec
sbb
mov
jbe
int
xor
xchg
fildl
mov
dec
add
lret
loopne
and
int
pop
xor
sub
test
jo
xor
mov
test
stos
jne
sti
lea
mov
xchg
xchg
daa
xor
mov
sub
fs
cltd
aas
jmp
adc
push
addr16
dec
dec
add
loop
lds
xchg
push
out
jo
push
dec
sbb
mov
push
lods
dec
xchg
enter
xchg
nop
rorb
out
mov
sbb
and
movsb
out
popa
dec
data16
jg
pop
cmpsb
pop
sub
sub
out
push
jo
add
jp,pn
mov
pop
lret
xor
mov
sbb
inc
jne
sub
cld
mov
testb
xor
enter
fisubs
stc
push
inc
inc
adc
xorl
gs
jl
test
xlat
push
arpl
mov
popf
jp
jo
add
sub
ja
es
stos
pop
testb
add
fwait
jne
data16
mov
mov
inc
bound
in
scas
pushf
and
sbb
loope
and
dec
sub
fmulp
test
into
cltd
cmp
xchg
jge
and
jns
es
mov
pop
fmuls
and
hlt
adc
shrb
mov
je
jns
scas
cld
jo
mov
pop
std
addl
sbb
xor
mov
fnstsw
adc
xchg
dec
inc
mov
lock
fs
int
cmp
add
sub
pop
cmpsl
ffree
pop
scas
jp
add
pop
sub
jnp
inc
fildll
mov
xor
adc
int3
inc
fsts
mov
or
call
dec
daa
flds
fbstp
out
inc
enter
lock
mov
pop
cmpsb
adcl
mov
mov
xchg
mov
ret
in
rep
dec
cmpsb
ja
jno
ss
filds
and
shlb
cmp
or
xor
ds
jne
repz
insl
gs
and
imul
dec
jno
int3
push
jnp
cmp
adc
in
xchg
bound
insb
push
nop
aam
loopne
mov
mov
clc
push
ret
add
out
dec
dec
leave
sbb
pop
out
sbb
jp
int3
jo
dec
mov
mov
pushl
pop
mov
add
pop
nop
aad
shlb
pop
lods
jmp
js
mov
sbbl
clc
cmp
sub
push
add
mov
out
movsb
mov
pop
cmc
xor
test
or
cwtl
cmp
mov
mov
filds
xor
or
xor
xchg
push
adc
out
shlb
mov
call
call
insl
xchg
pop
lret
enter
add
add
dec
jge
pop
cwtl
into
repz
insb
in
inc
stos
icebp
mov
mov
pop
or
cmp
sbb
loope
mov
jmp
xchg
sbb
jmp
mov
fisubrl
or
jbe
popa
out
test
pop
jns
dec
xchg
fucomip
mov
cmp
pusha
push
mov
mov
fdivrs
xchg
push
sub
sarl
adc
or
or
pop
pop
orl
or
dec
nop
lock
sbb
fstpt
or
stc
inc
out
mov
addr16
addr16
xor
xor
fldl
repz
mov
aad
push
int3
stos
jecxz
mov
xor
jno
das
pop
test
and
loope
leave
and
call
mov
and
or
ja
out
out
add
xchg
push
jae
lret
dec
out
push
popa
out
or
jno
ficoms
add
mov
cs
loop
out
cmc
add
xchg
sete
sub
adc
mov
imul
imul
mov
fdivl
xor
pop
lods
sahf
ds
inc
pop
sti
es
repnz
enter
leave
pop
inc
sarl
sti
std
adc
adc
jle
lods
and
hlt
rcrl
or
mov
pusha
xor
int3
and
and
and
test
mov
pop
sbb
es
enter
loop
cmp
xlat
scas
mov
push
popf
test
dec
pop
push
cmp
inc
out
xchg
std
das
sbb
addl
insb
clc
sarb
dec
sub
std
push
and
jl
and
mov
sbb
inc
js
mov
push
mov
push
test
sbb
mov
dec
sub
inc
pop
mov
mov
and
enter
xchg
insb
in
and
cmpsl
and
orl
push
daa
jl
int3
orl
lcall
dec
mov
lods
mov
movsl
jbe
stos
push
jbe
xchg
enter
addr16
sub
hlt
jb
push
inc
xor
cs
inc
mov
pop
loop
aad
aas
in
int
sbb
mov
or
mov
rolb
mov
test
mov
movsb
adc
aad
loop
leave
xor
and
inc
shll
inc
push
aad
jb
jne
and
scas
dec
int
jne
dec
jmp
mov
inc
gs
jnp
das
jno
mov
test
lret
mov
jl
pop
jle
sbb
push
and
push
es
jb
lahf
xchg
in
int3
xor
pop
lock
test
lds
scas
dec
fwait
lcall
rcl
sbb
or
and
mov
mov
in
sub
or
adc
ffreep
int3
lahf
arpl
and
cmp
mov
mulb
insb
out
int3
int3
lahf
jp
xor
pop
push
or
addr16
xor
in
pushf
mov
or
cmc
movsb
jge
mov
xlat
xor
rolb
jo
loopne
dec
mov
popa
jg
cmc
xchg
adc
shl
int3
mul
mov
sbb
jge
leave
push
cs
xchg
out
pop
bound
subb
sub
test
mov
and
mov
rcl
jae
sub
adc
dec
mov
adc
mov
and
add
or
frstor
and
nop
notb
mov
dec
adc
inc
add
xor
xchg
cmp
movsl
sbb
mov
pop
dec
mov
mov
leave
dec
xor
stc
jns
cs
out
iret
je
mov
aas
dec
stc
jbe
in
mov
adc
push
push
mulb
mov
in
dec
dec
movsb
jb
sbb
jle
inc
cmp
push
mov
mov
ds
or
test
jmp
int
sub
mov
sbb
fstpt
leave
jae
cmp
ds
xchg
ret
fildl
clc
mov
enter
or
jno
loope
fucom
std
stos
fcomip
fdivrl
jge
add
setp
and
dec
jl
xor
pop
mov
lahf
imul
fsubs
push
test
rclb
outsb
mov
cli
fs
push
inc
out
test
sbb
pushf
fistl
pop
movsb
inc
mov
addr16
fwait
mov
sub
jl
xchg
clc
pop
add
inc
jg
popa
fiadds
jae
pop
stc
adc
dec
pop
ret
lcall
xchg
inc
pusha
mov
jmp
jb
xchg
sbb
push
lods
xchg
mov
add
add
iret
movsl
sbb
lret
pop
pop
pop
pushf
sub
scas
mov
lahf
or
sarl
rorb
push
movsl
or
push
fwait
movsb
pop
sbb
lea
push
scas
add
jge
cmp
and
adcl
mov
pop
jo
adc
sub
mov
mull
lock
or
rorl
jno
and
xchg
inc
rcr
lret
shrb
ja
arpl
addr16
orl
rcl
dec
or
xchg
push
inc
add
pop
rolb
call
or
pushf
add
xor
jmp
push
mov
xor
pop
mov
daa
les
je
shlb
jmp
fcomps
mov
sub
lock
mov
xchg
shll
ret
pop
xchg
cltd
scas
loop
xor
and
out
mov
jno
dec
mov
insb
popf
push
bound
in
insl
inc
js
incb
lock
and
mov
adcl
push
fcompl
xor
into
das
sbb
push
test
push
iret
mov
sbb
les
dec
andl
in
and
inc
flds
xchg
clc
and
lods
xchg
xchg
jl
or
push
mov
out
das
cmpsb
addl
rcrl
sbb
imul
sti
test
xchg
test
push
add
inc
sbb
aad
mov
push
hlt
scas
sbb
pop
mov
jb
mov
and
outsl
xchg
test
and
out
dec
mov
xlat
iret
push
les
push
jbe
icebp
xor
sub
scas
repz
addr16
dec
mov
call
pop
push
pusha
push
mov
mov
jb
notb
cld
and
fistl
sbb
shlb
sti
and
mov
xor
mov
add
decl
in
hlt
dec
dec
lds
mov
mov
out
ja
cmpsl
dec
dec
mov
or
inc
mov
sbbb
ja
inc
js
jo
orl
lret
fs
xor
pop
outsl
mov
out
rorl
test
add
sbbl
rorb
cld
scas
pop
mov
xchg
adc
adc
repz
movsb
fsts
outsl
push
inc
sbb
sbb
aad
call
ss
xor
cmp
sbb
repz
or
sbbb
adc
sub
pushf
jb
mov
inc
hlt
push
mov
mov
cmpsl
cmp
sbb
nop
pop
sbb
in
mov
lea
xchg
test
fcoms
xchg
pop
cmpsl
decb
les
xchg
xor
and
inc
es
add
mov
xor
and
inc
mov
test
jbe
shlb
and
lds
jl,pn
retw
lret
and
lock
aam
shrb
pop
push
rorl
orl
mov
loope
dec
in
jne
lret
mov
or
push
clc
aam
xor
aaa
mulb
and
sub
cwtl
push
in
test
sbb
inc
xchg
xchg
add
rcrb
jge
push
orb
jge
sub
enter
pop
in
xchg
mov
xchg
enter
dec
aad
out
cltd
pop
adc
fisubrs
cmp
pop
sub
das
pop
jne
or
outsl
jo
push
jno
ljmp
ljmp
jb
sbb
sub
aam
sbb
xchg
xchg
mov
cmp
je
in
setb
xor
dec
cli
imul
aad
xor
fbstp
sub
scas
jnp
mov
or
in
jmp
mov
iret
push
and
aad
out
sub
push
mov
xchg
sub
data16
pusha
popa
ljmp
aad
test
lods
clc
mov
pop
clc
pop
popf
dec
test
or
sarb
pop
mov
cld
mov
rcr
je
mov
fwait
das
xchg
jno
xchg
std
lods
cmp
push
inc
insb
outsl
add
jg
pop
mov
pop
cltd
and
pop
loopne
movsl
adc
insl
fstpl
shr
insl
dec
push
leave
pop
mov
cmc
cmp
or
lcall
adc
sbb
jp
pop
cmp
lret
andl
cmpsb
call
inc
add
in
xchg
sahf
push
mov
pop
mov
fisttps
sub
adc
andl
cmp
inc
inc
mov
test
cwtl
aam
outsb
in
stos
push
aaa
push
add
fs
fstp
mov
outsb
or
js
lods
fistps
push
pop
push
mov
inc
add
iret
sub
push
cmp
xchg
jnp
mov
addr16
and
sub
enter
lcall
pop
cmp
and
test
mov
mov
gs
push
pushf
adc
and
add
sub
hlt
mov
push
out
cwtl
sbb
cmp
lock
rcrl
mov
int
add
es
adcl
imul
bound
ret
call
movl
push
cmp
xchg
aaa
jle
xchg
push
push
sarb
shlb
sarl
mov
fsub
fiadds
mov
scas
or
xlat
mov
sbb
test
rcrl
adc
dec
jp
lods
xor
jge
mov
cmc
xlat
in
test
in
push
or
andl
test
dec
outsl
sbb
pop
adc
dec
sub
popa
and
mov
testl
mov
mov
cld
rcrb
pushf
fldl
jnp
addr16
pushf
clc
cmp
lahf
leave
mov
in
call
scas
subl
fcompl
in
aaa
je
loop
lret
insb
push
xor
sti
push
nop
call
js
dec
jecxz
insb
mov
or
jo
and
xor
lret
jne
push
imul
mov
or
mov
lret
repz
adc
std
mov
je
push
sahf
out
repnz
repz
stos
rorb
stos
cmp
mov
out
test
adc
sub
cmp
jb
sar
inc
xor
jns
xor
movsb
mov
jmp
pop
std
adc
inc
inc
push
jae
lret
notl
rcrl
mov
ret
ret
addr16
jg
add
add
lds
cli
fmuls
xchg
mov
in
icebp
sahf
dec
adc
scas
ja
inc
and
ds
xchg
dec
mov
sub
aaa
mov
sbb
imul
xor
test
xchg
sub
xlat
icebp
loop
mov
or
mov
cmp
arpl
cwtl
sub
pusha
and
movsl
clc
mov
loopne
jbe
lcall
add
sub
push
mov
xchg
pop
mov
pop
pop
sub
fwait
xchg
pop
bnd
fsubrs
imul
lock
push
mov
or
mov
and
repz
movsb
out
jge
into
idivb
cmp
ret
or
jns
jmp
mov
mov
jp
outsl
jno
pop
sbb
das
cmp
stos
shll
loope
add
add
aas
sub
adc
insb
cmp
and
test
add
jb
cwtl
sbb
repnz
incb
jge
out
dec
push
mov
sub
pop
mov
popf
mov
stos
cltd
mov
shrb
iret
mov
or
test
inc
sub
ljmp
adc
insb
nop
and
pop
mov
or
outsb
adc
push
dec
out
stos
sahf
cwtl
imul
cs
mov
fs
xchg
in
jmp
jge
cltd
fwait
xchg
mov
lea
in
xlat
cli
imul
mul
aad
out
mov
and
push
shr
lock
add
push
xchg
repz
adc
inc
lret
sub
pushl
mov
sbb
xlat
lods
cmp
cmp
cmp
ds
push
aas
push
pushl
pop
subl
or
mov
out
scas
lods
xor
out
out
pop
nop
aad
xor
xchg
add
push
test
rorl
fidivrs
cmp
mov
aaa
xchg
lcall
mov
push
in
out
mov
int
lds
out
xchg
test
imul
dec
sub
push
insb
pop
das
dec
test
xchg
inc
outsb
fs
inc
jnp
out
cmp
xchg
mov
pushf
popl
mov
inc
das
loop
iret
dec
cmp
push
inc
scas
fimuls
jl
fisttps
inc
mov
push
les
inc
das
sbb
mov
jle
jge
ret
fstl
or
sbbb
mov
int
lcall
or
sub
mov
add
out
push
mov
in
pop
mov
add
cmp
daa
sbb
pusha
jne
adc
or
or
push
mov
xor
xchg
mov
cmpb
push
add
ja
aas
in
ss
sbb
mov
cltd
mov
push
mov
pop
mov
xchg
lret
or
pop
jecxz
or
xor
lcall
jecxz
add
add
nop
inc
leave
mov
hlt
mov
sub
pop
jecxz
sub
shl
add
sbb
mov
icebp
adc
jecxz
incl
loop
or
ljmp
cmp
or
inc
loopne
xchg
jecxz
mov
dec
ljmp
push
testl
mov
xor
dec
pop
sub
or
sub
fisttpll
mov
push
push
fimull
xor
loope
push
pop
mov
aaa
xor
cld
les
or
and
mov
mov
insb
pop
cmpsb
scas
inc
test
out
into
add
lret
cmp
push
ljmp
in
sub
inc
xor
daa
mov
cs
and
sub
test
sub
push
gs
mov
ss
in
push
jmp
mov
and
fs
add
jle
cmpsb
sti
push
pop
cmpsb
xor
cmp
out
rorl
sbb
mov
fsubs
aas
imul
outsb
and
sub
sub
sub
fsubp
pop
adc
jo
push
jb
xchg
dec
icebp
leave
dec
xchg
or
test
dec
flds
push
and
or
xor
sub
pop
int
enter
dec
dec
movsl
test
sub
loop
int
pop
mov
gs
and
loop
mov
movsb
lahf
fsubs
aaa
repz
sbb
inc
dec
xchg
xor
adc
data16
jne
sbb
pop
in
cli
mov
out
test
aas
popl
sarl
add
je
sub
fwait
ds
sbb
cltd
xor
jo
and
repnz
dec
add
fidivrs
mov
or
lahf
enter
dec
jle
jo
pop
add
sbb
rorl
loope
imul
cmp
pushf
mov
stos
jo
negl
push
cmpl
mov
push
xor
pushf
jl
dec
inc
fmulp
insl
add
popf
mov
popf
jnp
gs
popa
decl
test
adcl
cmc
jo
shl
inc
scas
fs
cmp
movsl
out
test
push
imul
cltd
add
lret
jl
push
add
dec
add
sbb
gs
stos
stc
cld
fstl
shr
ss
or
mov
mov
mov
mov
lret
mov
lahf
or
jbe
aas
xchg
sbb
jne
jge
xor
sbb
call
in
js
mov
arpl
adc
sbb
ret
jno
lcall
sbb
popf
pop
or
xchg
lret
xor
pop
mov
sbb
aam
jns
mov
insb
cld
lods
pop
aas
cmp
pop
movsb
into
mov
sub
mull
sbb
dec
add
sbb
mov
hlt
in
pop
jle
adc
test
cli
sahf
popf
add
mov
lahf
pop
lds
mov
ret
lea
xor
scas
sti
pushf
jnp
pop
fnsave
scas
testl
pushf
dec
outsb
jae
push
adc
sarb
sahf
and
ret
mov
and
and
sbb
popa
or
out
cmp
xchg
pushf
iret
cmp
mov
mov
fisttps
inc
loope
push
ljmp
xchg
scas
std
cmp
pop
pop
imul
pop
jecxz
fsts
mov
jle
sbb
xor
scas
imul
push
aas
ja
push
push
mov
cmp
and
or
push
jge
add
xor
insl
xor
cmp
cmpsl
cmc
mov
insl
mov
and
stos
jbe
std
cli
xchg
jne
mov
scas
clc
les
mov
mulb
test
imul
loopne
inc
add
decb
cmp
mov
aas
mov
movsb
outsb
insb
insb
sbb
fisubs
aam
inc
mov
mov
push
add
sub
jg
jmp
mov
dec
cmp
loopne
adc
pusha
xchg
int3
ds
xchg
sbb
jnp
sbb
jno
dec
ret
jmp
fbstp
cwtl
jge
sbb
out
sbb
icebp
cmp
adc
imul
ss
fidivl
rcr
dec
jp
jae
mov
nop
xchg
inc
pushf
cmpsl
sbb
xchg
cld
cmc
bswap
xor
mov
hlt
push
push
xor
fldenv
sbb
ljmp
xchg
aad
cmp
or
out
hlt
lret
cwtl
imul
xchg
jp
ja
or
lods
repnz
adc
xchg
fcompl
roll
aas
cmp
ret
rclb
and
jle
sbb
aad
fiaddl
and
stos
ds
ret
das
add
cmp
push
adcl
imul
gs
push
jg
jae
xchg
hlt
test
sbb
cs
divb
mov
pop
cmp
loope
jge
mov
sub
jecxz
cld
sub
stc
out
rcrl
int
in
or
dec
mov
or
repnz
push
adc
and
popa
cmp
mov
push
adc
in
cmp
mov
inc
push
push
jnp
or
mov
bnd
mov
pop
push
inc
push
jnp
out
inc
gs
dec
int3
xchg
push
les
mov
hlt
ljmp
loopne
aad
jb
sub
push
dec
dec
push
js
lcall
inc
inc
std
fdivr
les
stos
jmp
hlt
push
bound
es
sbb
push
int3
test
jmp
xlat
dec
dec
adc
dec
mov
cli
mov
pop
adc
inc
imul
mov
into
xchg
ljmp
das
cli
enter
in
push
add
and
mov
in
js
sub
push
sbb
push
dec
shlb
mov
dec
and
cmp
push
jle
insl
mov
push
outsb
xchg
pop
nop
mov
add
xor
icebp
mov
lods
mov
sbb
int3
add
or
out
jge
mov
into
shlb
movb
jno
push
xchg
js
ror
out
mov
cmpsl
pop
and
aam
dec
mov
xor
xchg
cmp
mov
cmpsl
vminps
cwtl
and
pusha
repnz
bound
cs
stc
subl
mov
out
mov
bnd
xchg
mov
outsb
pop
pushf
repnz
sbb
loope
repz
push
push
or
push
jp
xor
cmpsb
jae
imul
fisubl
ja
mov
ja
ficoml
gs
sub
shll
imul
sahf
add
fdivrs
mov
adc
xchg
mov
repnz
jge
mov
mov
pop
mov
in
jmp
mov
mov
sbb
fdivl
adcb
inc
xchg
stos
jmp
push
mov
hlt
pop
data16
push
andl
add
ss
dec
push
loop
repnz
inc
mov
or
in
mov
lret
ja
mov
cmpl
push
and
inc
push
inc
add
rclb
push
lock
mov
lcall
and
es
notl
int3
insb
xchg
lds
xchg
xlat
push
repz
dec
dec
aad
pop
or
jecxz
js
xlat
mov
loop
scas
or
mov
cmp
cli
sbb
test
gs
outsl
jbe
cmp
iret
test
or
aam
lahf
mov
int3
lods
add
adc
mov
push
ret
in
rcr
add
mov
pop
clc
jne
jg
rcll
xchg
inc
test
mov
xchg
popa
push
xor
mov
fldt
out
xorl
shlb
fcoml
and
in
xor
xor
sub
jmp
cmp
enter
sbb
and
pusha
cmp
push
dec
sub
ds
aaa
cmp
pop
pop
sarl
sub
jno
xchg
jge
cmp
or
aad
sarb
pop
xor
pop
and
sub
stos
xor
adc
subb
lret
fwait
cli
cmp
outsl
into
mov
xchg
jp
xchg
push
mov
xchg
mov
imul
clc
inc
dec
mov
mov
outsl
jae
negb
xor
cwtl
out
test
cmp
call
rolb
out
dec
imul
ja
jbe
cs
fwait
adc
adc
ror
test
sub
jl
idivb
icebp
sarl
idiv
ja
popf
sbb
dec
ss
rolb
pop
out
aas
and
cmpsb
loopne
imul
cmpsl
int
inc
stos
pop
xor
je
sub
scas
sbb
daa
repnz
jnp
xchg
xor
jecxz
mov
push
xor
xchg
mov
dec
aas
sub
aad
dec
and
sub
test
test
inc
mov
daa
pop
jno
cltd
cwtl
jecxz
mov
xor
sti
sub
sti
hlt
xor
mov
xchg
or
xor
lahf
fpatan
or
lahf
pop
inc
jbe
pop
aaa
push
push
shl
dec
xlat
fsubrs
fidivl
add
ret
cmp
xor
pop
mov
das
jg
mov
xchg
adc
xchg
sub
dec
loope
push
dec
and
jne
jno
or
xchg
add
mov
repnz
adc
rclb
push
mov
and
rcr
iret
js
mov
fadd
outsl
xor
mov
and
lea
xor
sub
jb
pop
decl
les
push
and
sub
inc
dec
mov
pop
cmpsb
repz
fwait
test
repz
adc
dec
add
push
fdivs
arpl
iret
adc
jns
sub
jge
mov
lods
adc
es
mulb
dec
mov
ret
fcomps
insl
add
jno
and
insl
fdivrl
cmpl
sbb
xor
movsl
pop
clc
xor
testl
js
push
jb
subb
rclb
rol
and
fsubrs
enter
dec
test
inc
dec
fucomip
dec
sbb
xchg
push
mov
rclb
notl
fwait
es
xchg
movsl
aam
movsl
add
call
outsb
add
std
mov
andl
push
call
pop
ret
push
into
mov
xchg
pop
mov
inc
cmc
dec
std
mov
push
loope
std
loope
mov
cmp
xor
inc
push
aam
cmp
cmp
stos
jg
xchg
mov
mov
ja
jnp
stc
in
or
scas
fwait
cmp
mov
jns
push
in
sbb
sbb
pop
fwait
pop
mov
imul
add
notb
push
mov
adc
in
sbb
fcompl
aad
cmp
aam
add
nop
sub
les
xor
mov
mov
repnz
push
mov
mov
pop
inc
rorb
mov
lcall
cmpsl
sahf
push
mov
inc
ret
xchg
hlt
lret
push
jge
cmp
fnsave
pushf
xchg
fstpl
push
stos
dec
sub
sahf
fisubs
dec
ja
sbb
jb
adc
cwtl
adc
pop
inc
dec
and
sahf
repz
lock
fdivp
pushf
dec
int
jmp
jp
xchg
push
ret
mov
fcompl
xchg
mov
or
or
and
mov
out
mov
xor
lret
movsl
repnz
add
ss
sbb
add
in
xor
mov
cld
inc
pop
ret
popl
cmpsl
mov
movsl
pop
fld
cli
aad
mov
add
iret
mov
cltd
mov
leave
aas
daa
mov
push
or
aaa
fwait
cmp
push
mov
shlb
cmpsb
push
mov
cmp
mov
enter
pop
std
icebp
xchg
sub
sbb
add
aad
mov
xchg
out
or
or
push
dec
sbb
dec
inc
pop
out
insl
pop
inc
push
shll
pop
push
sub
mov
jle
shr
sub
outsl
xor
or
push
mov
hlt
arpl
cmpsl
cmpsb
xor
insb
movb
clc
add
xor
mov
loopne
outsl
mov
ja
arpl
and
cmp
stc
xor
sub
pop
xor
sub
insb
cwtl
arpl
fwait
data16
fisttpl
jmp
xor
fcomi
mov
mov
subb
fsubl
dec
mov
iret
lcall
pmulhuw
int
xor
pop
pop
insl
into
mov
ja
push
cmp
pushf
test
add
cmp
push
push
pop
and
popa
aas
push
push
loopne
or
push
sarb
cwtl
adc
daa
pop
jns,pn
pop
mov
aam
cmp
jns
xor
ds
pushf
aas
push
sub
pop
fdivl
incl
dec
movsb
test
xor
jl
leave
adc
outsl
push
fnsave
aaa
popa
insb
push
pop
iret
in
mov
arpl
jl
and
subb
and
cmpsl
add
iret
fistps
xor
add
jle
shlb
dec
jmp
mov
fs
dec
cmp
mov
jno
cmc
sbb
imul
mov
loopne
test
rcrl
rorl
in
pop
stos
jb
fucomp
jbe
repnz
pop
fdivl
movsb
mov
pushl
or
clc
sub
dec
mov
dec
test
jb
jp
push
mov
adc
bnd
lea
es
in
enter
and
outsb
inc
fcoml
and
repz
lea
ss
in
dec
lcall
mov
test
orl
mov
movsb
sti
mov
ficomps
fisttpl
ja
sub
jae
pop
call
jl
lock
mov
mov
test
and
gs
inc
mov
mov
icebp
mov
das
int
jbe
mov
or
dec
xor
jge
hlt
jmp
push
cltd
mov
cmp
mov
insb
mov
insb
ret
movsb
cmpl
and
inc
cmp
cmp
push
add
dec
mov
or
ret
jo
scas
imul
imul
pop
ja
cmp
in
inc
lock
sub
or
cmp
cld
sub
xor
jbe
mull
jns
mov
lret
jno
inc
orl
sub
loop
sub
and
jb
cmp
sub
push
sahf
repnz
lcall
jae
add
js
cltd
dec
repnz
mov
add
mov
in
aad
int
xchg
sbb
movmskps
popa
push
jmp
inc
fstl
imul
into
mov
xchg
xchg
adcb
sti
dec
push
cmp
pop
xor
mov
adc
sub
cwtl
aad
in
sahf
das
inc
vcvtpd2psy
jns
aas
sbb
fiadds
insl
lds
pushl
pop
scas
vorps
rcrb
ret
popa
mov
sbb
mov
bound
loopne
jns
into
pop
lret
test
push
mov
adc
and
push
ret
pop
call
xchg
mov
pop
jp
cmpsl
out
adc
test
jle
es
fnstcw
call
bsr
adc
nopl
enter
add
arpl
dec
stc
jg
int3
data16
iret
fadd
out
loop
enter
jmp
rcrb
mov
jle
scas
aad
jl
inc
or
jne
mov
clc
repnz
rol
scas
fistpl
mov
lret
mov
cli
xchg
add
xchg
std
aas
mov
jg
das
scas
cmpl
insl
mov
sub
pop
std
and
push
adc
test
mov
ljmp
and
fadds
fadds
loop
fidivs
sub
mov
loopne
leave
outsb
add
mov
repnz
mov
add
xchg
pop
add
scas
jbe
fildl
push
fisubl
mov
xchg
sub
add
int3
mov
gs
push
push
pop
lds
or
jbe
cltd
lret
xchg
mov
je
jmp
xchg
inc
in
xchg
jae
fsub
lret
daa
sbb
inc
rcr
sub
and
inc
jb
pop
pop
add
dec
sbb
movsl
out
in
imul
nop
xchg
mov
sub
fmull
pop
jns
ljmp
dec
loopne
stos
dec
pop
adc
sub
aad
mov
js
sbbl
adc
push
cmp
hlt
cmp
fnsave
gs
pop
xor
xchg
stos
or
mov
subl
fmuls
loop
cld
pop
and
xchg
sub
xor
mov
aam
jl
clc
fwait
aam
sub
scas
sub
xor
lidtl
xor
jno
jnp
pand
jp
or
addr16
push
inc
lods
pop
icebp
das
ror
das
mov
jbe
ljmp
mov
jecxz
daa
icebp
bound
jle
mov
and
jmp
iret
cltd
ret
xchg
je
xor
in
push
xor
jmp
push
jle
scas
mov
mov
pop
mov
or
pop
mov
cmp
lods
add
dec
in
rcl
andl
xor
loopne
out
mov
sbb
dec
cmp
sub
ds
add
stos
or
lahf
cmp
cs
inc
mov
jle
jno
aaa
das
clc
int3
jnp
test
mov
mov
lcall
pop
mov
in
pop
mov
xor
lcall
lds
inc
aas
fildl
popa
test
mov
jle
sbb
mov
pop
pop
xor
inc
lret
push
jns
fcomp
jmp
pop
lods
cwtl
sub
fwait
sub
stc
fistl
dec
dec
sub
andl
shr
mov
xor
pop
push
sub
movsl
xchg
dec
and
xor
xor
dec
pop
lret
rorb
in
xchg
lods
mov
push
mov
push
cmpsl
loopne
rcrl
into
nop
cld
out
mov
hlt
cmpsl
aaa
decl
leave
sub
dec
fimull
test
dec
aam
and
xor
jl
sub
push
aas
mov
stos
lods
imul
stos
movsb
std
insl
lock
fdivl
pop
inc
fistpl
test
mov
jns
out
mov
sbb
pop
mov
fcmovbe
pushf
incl
jne
xchg
cmp
lea
sahf
iret
jo
outsb
sti
mov
pushf
les
pop
push
and
jne
jns
or
or
imul
lods
iretw
popa
rcrb
cmp
push
cmp
pusha
enter
test
pop
fldt
lods
mov
test
icebp
xor
add
mov
and
inc
push
push
les
cwtl
xchg
imul
imul
sub
mov
aas
addr16
cmpsl
xchg
mov
nop
or
jno
cmp
push
mov
adc
push
test
add
pop
or
loop
notl
js
ljmp
js
sbb
mov
pop
jp
inc
inc
add
cmp
pop
mov
lods
stos
sub
mov
jne
mov
fstpt
mov
es
je
mov
lcall
or
and
xorb
jne
loop
cli
lods
push
shll
int
inc
xchg
sbb
data16
rclb
inc
jae
je
lahf
push
dec
inc
dec
jmp
inc
jbe
adc
pusha
adc
dec
leave
inc
or
iret
push
scas
inc
cmp
push
jae
jp
in
and
sbb
insl
adc
aad
push
iret
add
jecxz
push
push
sub
test
rorl
ss
cmp
push
aad
nop
repz
test
rol
mov
jne
fisttpll
ret
sbb
xor
popf
push
xor
sub
cmc
jo
jno
aam
mov
lret
dec
push
or
sarl
adc
add
cld
in
pop
mov
lahf
inc
pop
pop
inc
mov
js,pt
dec
stc
lret
les
rcrl
mov
pusha
sbb
jne
jnp
mov
push
mov
call
fcmovne
sbb
mov
and
les
loopne
popf
shrb
daa
rolb
js
mov
jmp
sbb
aam
shlb
push
movsb
call
add
pop
dec
pushf
xor
adc
mov
fs
shrb
bound
shr
mov
and
mov
xchg
addr16
roll
cld
addb
jns
xor
std
sarl
push
aas
scas
mov
pop
ret
subb
and
mov
lods
in
mov
add
call
mov
cmp
stc
xchg
or
jne
mov
lods
xor
cs
outsl
cmp
shlb
pop
pop
out
pop
lret
cmp
clc
mov
pop
call
cmc
cwtl
stos
fadds
outsb
scas
mov
mov
lahf
adc
xchg
insb
mov
push
sub
fidivl
addb
jb
ja
cltd
push
jo
lods
cmp
xchg
cmp
hlt
push
xlat
test
sbb
popa
aas
xor
xor
xor
pop
mov
lcall
lret
pop
cmp
mov
adc
scas
add
in
clc
movsl
pop
sub
jns
jne
dec
je
cwtl
int
jb
or
bound
adc
xor
jno
push
dec
mov
stos
pop
add
add
int
cld
stos
sub
pop
mov
adc
cmp
mov
iretw
sub
xorl
push
cmpsb
int
cwtl
sahf
pavgb
or
lods
out
in
stos
xchg
sti
mov
adc
mov
test
inc
pop
ret
xchg
cmpsl
mov
ds
sbb
cmc
push
sti
jl
out
ret
cmpl
sub
pop
jge
test
cmc
outsb
repnz
mov
mov
jecxz
inc
or
sarb
cltd
jns
sub
cmp
rcll
sti
jo
inc
test
iret
mov
lret
shll
nop
dec
jmp
mov
dec
mov
or
adc
cmc
nop
stc
out
and
ljmp
sub
fs
mov
sub
inc
mov
jnp
sbb
push
mov
xor
enter
enter
mov
dec
pusha
push
loopne
or
std
cwtl
cli
jmp
ljmp
mulb
jnp
dec
pop
dec
shl
dec
iret
dec
pusha
and
lahf
and
mov
push
xchg
pop
negl
pop
sub
repnz
xor
es
stos
mov
aas
dec
movsb
sar
sub
inc
fnstenv
ss
push
fildll
sub
fdivrp
cmpsl
cmp
js
sub
cltd
lret
jns
push
mov
out
mov
adc
jmp
std
adc
ss
andb
or
add
pop
inc
xchg
cwtl
ret
xor
scas
dec
arpl
mov
cs
jbe
pop
lret
pop
ss
decl
dec
ss
rorb
cmc
sub
pop
lret
cmp
inc
out
dec
xchg
mov
cmpxchg
or
mov
cmp
push
stos
std
rolb
push
dec
outsl
pop
mov
push
shrb
sti
test
dec
sub
push
shlb
mov
or
push
inc
add
int
mov
mov
or
pusha
into
mov
push
test
mov
sub
jae
or
hlt
or
pusha
sub
push
sahf
xor
mov
dec
dec
push
mov
das
ja
jbe
push
xchg
inc
dec
cmpsl
push
shl
mov
mov
cs
ret
fldcw
jl
rcrb
cmp
mov
jb
aam
das
xchg
mov
xor
mov
mov
mov
pop
into
sub
inc
xor
xchg
sbbb
inc
adc
gs
jns
mov
xchg
rcll
leave
push
sub
daa
addb
cmp
sar
mov
popf
loope
sbb
jns
sub
out
add
test
pop
push
mov
call
aad
mov
arpl
sahf
addr16
inc
and
fs
and
xchg
push
xchg
dec
test
add
popf
jne
call
decb
nop
push
push
cmpsl
xchg
andl
mov
sbb
filds
xor
gs
lahf
xorl
pusha
arpl
rorl
mov
inc
shrb
clc
sub
loope
and
xchg
nop
lret
movb
pop
shlb
and
inc
and
sub
mov
and
add
mov
in
int3
test
add
lcall
push
pop
ljmp
ljmp
jns
mov
pop
push
or
and
repz
mov
lods
xchg
leave
sub
adc
push
cli
enter
negb
cmp
mov
dec
loope
mov
xchg
in
pop
push
call
push
jb
add
jbe
xlat
mov
inc
sub
xchg
xchg
cmp
aam
and
cwtl
arpl
sbb
push
adc
push
lock
or
and
push
outsb
addl
pushf
test
out
inc
push
loopne
mov
inc
push
test
dec
sbb
push
std
aam
mov
mov
stc
push
jnp
dec
and
pop
or
mov
popf
fucomi
das
push
call
push
aas
cmp
jle
js
sti
push
call
pop
icebp
test
rcrl
add
push
sbb
stc
push
cmp
xor
pusha
pusha
aam
daa
movsb
pop
notl
inc
testb
jg
and
mov
cmpsb
in
cmpb
out
mov
sub
out
jae
rolb
les
js
fstpt
add
je
sbb
and
cmp
add
sub
imul
cwtl
sbbl
and
call
and
ret
jae
outsl
idivl
lahf
stc
sub
fcompl
push
lods
sar
cli
inc
mov
fwait
lret
fwait
mov
testw
cwtl
push
repnz
xor
aas
out
int3
lds
pop
jmp
dec
aas
stos
lods
xor
pop
outsb
adc
push
inc
imul
cli
sub
cli
data16
adc
sub
mov
push
imul
jo
nop
subb
xor
mov
jae
int
cwtl
and
cmp
dec
inc
aam
pusha
mov
dec
xor
out
es
jmp
lret
fnsave
sub
test
push
cltd
leave
popa
out
sbb
movsl
ljmp
imul
andb
jge
nop
add
loope
mov
lret
iret
xor
and
enter
inc
cwtl
mov
std
ret
mov
add
outsb
mov
inc
sbb
mov
fcoml
std
pushf
add
pop
cwtl
inc
mov
add
cltd
aaa
fwait
xchg
and
ret
mov
jns
mov
pop
mov
xchg
js
push
out
loope
idiv
or
negb
lods
xchg
push
pop
out
jp
jo
fnstenv
stos
mov
ljmp
adc
aam
inc
jl
pop
pop
jmp
jmp
cwtl
push
cld
cltd
sahf
jo
cs
xchg
es
cwtl
inc
push
mov
popf
imul
hlt
xor
and
pop
cmpsb
adc
add
push
dec
jne
adc
sahf
xor
aad
sub
add
adc
mov
push
fcomi
push
and
mov
cmpsb
mov
es
cmp
cld
adc
fmulp
in
cmc
rorl
into
fisttps
mov
push
pop
lds
aam
xchg
in
cmpsl
dec
aaa
pop
js
insl
pop
xlat
cmp
in
xor
dec
lods
fisubrs
test
inc
hlt
insb
xchg
int3
inc
movsl
adc
je
pushl
sbb
mov
inc
addb
sbb
test
jmp
sub
les
into
xor
in
cltd
loop
scas
and
jns
dec
mov
adc
repz
and
icebp
mov
dec
push
jp
mov
je
addb
sub
popf
mov
or
out
aad
add
in
push
cmpsb
sub
ja
push
pusha
add
rcll
repz
mov
xor
mov
cltd
push
xchg
mov
cmp
and
mov
xor
es
icebp
imul
icebp
enter
jge
dec
dec
out
in
ds
add
dec
cmpsb
jge
sbb
mov
dec
mov
cmpsl
pop
xor
and
mov
jns
or
push
jmp
mov
xchg
adc
dec
mov
or
lods
mov
sub
aam
mov
mov
ds
cld
push
adc
js
rol
jmp
push
das
fnstsw
add
mov
jbe
add
pop
sbb
mov
xor
and
xchg
dec
pop
lahf
xor
in
sbb
adc
scas
xchg
cmp
lds
cmp
lds
outsl
scas
jno
inc
jae
xor
shl
das
jmp
or
mov
jnp
push
cmc
in
mov
loopne
push
inc
cmp
jecxz
mov
jns
aam
aaa
sbb
ret
add
sbb
sbb
adc
lods
push
mov
cld
fistps
xchg
in
pop
sub
xchg
xor
adc
je
stos
hlt
jg
xlat
dec
mov
dec
cmpsl
jg
aam
cltd
enter
pop
loop
insb
leave
hlt
dec
aaa
movsl
adc
add
jne
or
xchg
add
int3
pop
inc
mov
cmc
mov
jl
cltd
stos
sbb
xchg
ror
mov
stos
sub
and
popf
nop
repz
mov
fimuls
test
ds
mov
das
pop
mov
xor
jle
imul
pushf
mov
dec
sarb
andl
and
xchg
adc
add
xchg
sarb
push
mov
pop
inc
pop
pop
sbb
lods
scas
mov
ljmp
add
dec
sbb
mov
in
in
push
test
outsl
ficomps
lods
dec
std
pop
shll
int
pop
adc
aas
out
or
sahf
iret
mov
mov
dec
test
movsl
aaa
shl
lds
jge
inc
and
rcrb
xchg
pop
pop
adc
ljmp
xchg
push
dec
loope
les
nop
dec
lods
mov
mov
mov
es
movsl
mov
into
fsubs
jmp
adc
lods
xchg
dec
dec
cmpsb
pop
jge
faddl
int
rolb
pop
cmp
xor
je
addr16
pop
or
pop
jo
loopne
mov
int
push
and
xor
mov
lret
movsb
sub
syscall
jmp
shl
fistpll
icebp
xchg
in
test
nop
les
pushf
stos
cmp
sbb
jno
rcll
inc
and
orb
pop
sbb
xor
xchg
loopne
and
mov
imull
aaa
and
push
mov
and
push
push
pop
inc
push
test
dec
xor
in
hlt
stos
pop
mov
and
lods
aaa
gs
or
inc
inc
cmpsb
cmc
pop
fmul
xchg
mov
leave
mov
mov
lds
mov
jge
xchg
jns
bound
gs
mov
call
sub
mov
inc
sub
pop
cmp
testl
je
mov
mov
or
fcompl
jle
push
in
mov
mov
inc
dec
and
xorl
push
dec
repnz
rcrb
cmp
dec
iret
in
insb
mov
iret
inc
loopne
ret
mov
iret
dec
add
lret
call
mov
mov
popf
ss
cmpsl
sub
pushf
lret
subb
or
add
adc
push
insl
or
sbbb
scas
addr16
fldcw
pop
cmp
dec
js
out
mov
lods
loope
cs
movsb
lcall
lock
add
out
and
inc
shlb
pop
ss
test
cmpsb
jo
rcl
out
pop
das
adc
ljmp
or
sub
jns
sbb
std
out
sti
pop
and
sarb
ret
xchg
fisttpll
dec
add
cmc
jae
pop
fcmovne
mov
subb
inc
add
fucomi
inc
insl
sub
push
aam
int3
iret
stos
jae
test
push
cmpb
mov
xchg
inc
xor
lcall
push
les
push
fdivrl
dec
and
mov
ja
mov
outsb
jp
pop
sti
and
imul
daa
mov
popa
mov
fs
lods
ja
jmp
nop
dec
data16
push
hlt
cltd
mov
cltd
dec
scas
rcr
inc
jbe
cli
repz
mov
dec
das
cmp
cltd
adc
pop
fisttps
mov
push
add
lret
inc
sub
fcoml
gs
adc
cwtl
push
sahf
testb
test
adc
xor
mov
or
dec
adc
jns
inc
movsl
mov
sub
cmp
xchg
sbb
jae
push
fwait
cmc
inc
dec
in
repz
das
sbb
add
lret
dec
push
loopne
decl
pushf
adc
push
mov
and
add
jle
jne
nop
flds
mov
jnp
pop
aaa
pop
cmc
jp
ljmp
mov
adc
or
aas
xor
idivl
sbb
pop
shlb
js
sub
popf
pop
or
sbb
in
stos
pushf
jno
sbb
scas
adc
bnd
jo
or
inc
cli
xchg
pusha
or
test
mov
negb
pop
inc
push
sub
sbb
in
outsl
pop
xorl
imul
loopne
ja
xchg
push
sbb
pop
sti
les
ret
es
push
dec
adc
adc
ljmp
xchg
mov
out
dec
das
leave
inc
xlat
pop
jbe
adc
cmp
or
lock
in
mov
cmpsl
loope
and
testl
and
pop
xchg
scas
cmpsb
jmp
xor
outsb
jecxz
add
push
and
aaa
fsubp
sub
jle
xor
add
daa
and
inc
dec
sub
sbb
cmpsl
and
push
cmp
pop
mov
std
add
daa
bound
outsb
movsb
jne
movsb
add
cltd
inc
cltd
fiaddl
or
loope
pop
mov
or
sub
insb
andb
adc
push
fnstsw
lock
fs
push
mov
cmpsb
inc
mov
jno
adc
sbb
push
nop
xchg
xchg
xor
xlat
add
xlat
cmp
cwtl
adc
jl
pop
dec
cltd
push
call
xlat
ds
enter
movsl
sarb
fcoml
xchg
cli
ja
dec
out
jb
sub
out
sahf
imul
xor
inc
das
jae
sub
stc
nop
dec
pop
insb
jecxz
loope
sti
bound
adc
push
mov
push
xor
ds
mov
inc
add
call
xchg
mov
subl
popf
in
popl
inc
lcall
rcrl
xor
sub
mov
fnstenv
out
out
or
shlb
mov
ret
mov
push
outsl
or
mov
inc
in
dec
jne
inc
adcb
pop
fcomp
addr16
fsub
std
mov
popa
stos
mov
cmp
mov
fxch
cmp
sarl
cmpsl
out
aad
stc
jg
cmp
dec
mov
fs
push
sub
test
jbe
rorl
xchg
and
cmp
and
outsb
lea
push
lea
jnp
cmp
dec
cmp
add
push
data16
lret
or
inc
shlb
rcrb
repnz
imul
ret
mov
rclb
data16
cmp
sar
pop
mov
std
lret
ja
add
outsb
xchg
mov
push
jne
cld
pop
je
jo
les
jne
pop
mov
outsl
mov
lods
das
sbb
inc
loopne
jg
mov
shl
adc
and
push
push
test
addb
pop
sub
dec
lea
push
adc
cmp
imul
gs
jle
sarl
loop
hlt
jo
dec
push
xchg
pop
in
mov
mov
icebp
jecxz
mov
dec
sub
sbb
call
rcrb
mov
or
or
sub
int3
fcompl
ja
cmp
cmp
pushf
ror
or
xor
stos
pop
cmp
aas
nop
adc
mov
pop
add
sub
pop
jp
ret
push
popa
fcmovb
push
mov
dec
imul
inc
xchg
je
loopne
jbe
jmp
std
cmp
addr16
mov
fsubrl
push
push
dec
fistpll
clc
mov
mov
out
inc
add
insb
stc
mov
mov
and
push
je
cmp
xor
nop
sar
lods
fnstsw
pop
inc
sbb
jb
add
adc
fidivl
mov
inc
mov
ss
ljmp
inc
leave
iret
gs
adc
xor
sbb
nopl
mov
rcrl
dec
jne
mov
nop
std
mov
in
idiv
dec
hlt
sbb
negl
cmp
adc
jg
add
test
cmpsb
cmp
xor
inc
outsl
je
xchg
inc
jae
data16
sti
fisttps
in
pop
repz
adc
dec
shl
jge
xchg
fimull
jnp
xor
and
les
mov
enter
sub
xor
sub
sti
inc
subl
jb
clc
push
xchg
mov
jge
push
negb
repnz
decl
fisttps
pand
dec
inc
arpl
dec
aaa
gs
dec
cmp
sbb
fwait
xchg
xor
or
or
cli
push
imulb
iret
cmp
inc
jecxz
xlat
cmpsl
push
sbb
fiaddl
popf
repz
in
sbb
inc
mov
mov
popa
xchg
in
iret
and
es
mov
insl
cmp
dec
daa
pop
out
fcmovne
icebp
inc
xorl
or
fadds
jmp
adc
test
inc
int3
pop
fistpll
cmp
ucomiss
shl
mov
sub
xlat
arpl
jge
mov
lcall
jle
xor
subb
pop
scas
pop
mov
movsb
mov
das
ljmp
sbb
xchg
cmp
mov
iret
bound
lds
xor
sub
popa
dec
sub
outsb
dec
arpl
sti
sbb
sbb
cmp
cltd
mov
xor
aam
fnstenv
cmpsb
aad
nop
push
ljmp
jl
scas
in
in
or
repz
jg
fwait
movsl
jnp
pop
xchg
aam
xchg
test
mov
imul
sub
vpminsw
fsubrp
or
dec
outsb
lods
jbe
or
aas
fwait
pop
mov
cmp
dec
out
sahf
or
adcl
mulb
push
scas
mov
into
push
fs
fnstcw
rcll
cmp
outsb
sub
leave
push
adc
jecxz
insl
jo
mov
cmp
mov
push
adc
pop
cmp
iret
data16
inc
ret
jg
inc
inc
or
popa
into
idivb
push
lret
sbb
inc
mov
add
pop
mulb
fsts
jbe
aam
sub
cmp
push
pop
loope
mov
inc
fidivrs
clc
mov
dec
jp
mov
stos
cmc
dec
movsl
clc
out
xlat
iret
das
cmpsl
cltd
adc
fs
add
cld
nop
dec
mov
hlt
bound
inc
add
jno
into
imul
stc
loope
aaa
cmp
and
push
xchg
dec
push
and
jge
jns
xchg
insb
pop
adc
lock
jmp
outsl
push
popa
popa
mov
mov
in
rolb
xchg
daa
jg
imul
lret
subb
cwtl
nop
sti
les
fs
push
mov
les
cwtl
sbb
nop
jae
dec
test
lods
loope
and
arpl
outsl
movzwl
ret
mov
scas
sbb
add
icebp
cwtl
mov
call
aad
insb
cs
cmp
sub
add
pop
arpl
lods
mov
inc
js
lods
jecxz
fadds
xorl
mov
imul
or
add
mov
popf
dec
pop
cmpsb
cld
je
movsb
filds
xchg
divl
xor
shl
xor
leave
inc
sti
lea
add
xor
adc
outsb
loop
fidivs
cmp
fcmovbe
push
xchg
push
fbld
xchg
sahf
mov
jb
out
adc
nop
test
lods
pop
into
jg
dec
dec
andb
mov
lahf
mov
sbb
or
nop
aam
dec
shrb
fwait
insb
dec
xchg
dec
lods
les
add
or
adc
out
jge
pusha
test
mov
in
aad
nop
test
arpl
mov
ret
mov
insb
xchg
cli
sub
rclb
xchg
mov
aas
mov
pusha
push
sbb
push
jmp
out
addr16
pop
mov
adc
xlat
std
sbb
mov
je
std
loope
pushf
cld
or
lahf
lea
call
addr16
rcr
sbb
fcmovu
jecxz,pt
cli
adc
inc
jecxz
out
mov
ret
cmpsb
daa
push
xchg
rorl
push
mov
fs
hlt
add
in
sbb
sbb
stos
jb
xchg
jb
sub
push
imul
xchg
push
lahf
loop
xchg
jle
aam
jae
cmp
lret
in
shlb
add
out
adc
xchg
lret
jle
pop
xorl
in
dec
push
xorb
push
test
mov
sbb
aaa
pusha
push
xor
paddsb
mov
loop
stos
jns
cmp
cmpl
pushf
fists
sbb
lock
repz
xchg
in
dec
sbb
push
shr
and
jp
add
xlat
fs
and
shlb
fldl
mov
lret
mov
dec
cs
out
pop
lods
mov
pop
lea
insb
icebp
int3
movsb
inc
xor
xor
pop
lahf
lods
jl
adc
lods
leave
pop
jnp
mov
adc
and
iret
movsb
es
ret
movsl
xlat
lret
fstl
in
pop
xchg
mov
mov
js
adc
mov
jg
out
cmp
mov
mov
xchg
and
push
mov
mov
insb
mov
xchg
pop
lock
mov
push
mov
dec
or
sti
test
xchg
jnp
repnz
push
mov
sub
adc
mov
sub
mov
lret
lret
and
inc
ss
push
adc
mov
pop
jge
cmp
movsl
mov
testb
fisubl
in
pop
movsb
push
stc
push
scas
hlt
ret
mov
cmp
or
aad
bound
and
addb
test
xor
mov
push
xor
dec
cmp
dec
add
mov
inc
ficoml
int
decl
push
mov
imul
in
lret
jae
mov
and
push
adc
mov
insl
cltd
mov
push
mov
daa
sbb
pop
ret
mov
in
xchg
pslld
cmp
push
std
js
add
sub
push
setg
adcb
rorl
xor
dec
pop
into
std
push
jp
push
jne
and
dec
pop
jle
cwtl
lret
lods
mov
adc
push
xchg
mov
ss
xchg
test
fstps
arpl
and
sbb
mov
or
push
imul
fsubl
pusha
adc
xor
pop
fidivrl
cli
sbb
add
dec
mov
dec
aaa
inc
cwtl
clc
mov
and
cmp
cmpsb
dec
sbb
adc
fcoml
jl
lods
das
js
rcrb
into
jp
lods
test
jp
es
std
or
fwait
loope
add
xchg
mov
mov
fisubs
sarl
xchg
je
data16
enter
scas
jb
adc
add
adc
or
push
fisttpl
gs
pusha
sub
gs
mov
push
inc
out
hlt
or
out
dec
aam
or
sub
gs
stos
ja
mov
cld
sbb
out
andl
bound
pop
fwait
cld
es
xorb
inc
leave
mov
cltd
push
push
and
jecxz
das
adc
aaa
mov
inc
sbb
adc
sub
jp
insl
fidivs
out
ss
jl
std
out
stc
or
cmp
les
mov
in
jne
loope
pushf
and
rolb
dec
add
es
ret
insb
push
sub
jae
inc
ret
push
arpl
loope
mov
pop
in
fdivl
lret
jl
xlat
pop
adc
push
ror
or
push
cwtl
lock
test
adc
jno
or
in
add
into
push
jb
les
mov
lds
aad
mov
dec
rclb
add
adc
insl
les
xchg
sub
out
roll
push
int3
mov
loope
repnz
mov
cs
push
fs
ja
imul
mov
aas
and
sub
push
dec
nopl
cmp
js
mov
push
mov
cld
insb
sbb
xor
addr16
fidivrs
xchg
ljmp
outsl
fwait
cmp
scas
sub
xchg
pop
cltd
into
mov
xorb
mov
dec
pushf
out
mov
xchg
add
call
mov
aas
push
vmovaps
clc
in
cmp
pop
mov
loop
inc
xlat
mov
les
jae
push
mov
inc
pushf
mov
or
fisubs
mov
aaa
jae
repnz
dec
mov
in
inc
xchg
xchg
loope
mov
mov
mov
pushw
shll
inc
cwtl
xor
je
sub
cs
sub
test
out
and
sub
sub
push
sub
pop
out
in
fucomi
fimuls
add
cwtl
mov
ljmp
xchg
cmpb
jae
inc
sbb
pop
mov
and
mov
sarl
add
xchg
and
leave
mov
aaa
out
cmp
test
mov
mov
xor
cmp
pop
xor
aas
out
daa
lds
cmp
jo
bound
dec
icebp
mov
mov
pop
xchg
add
lcall
and
push
mov
adc
daa
push
push
jl
dec
inc
dec
add
lret
mov
dec
lret
push
cs
xlat
loop
mov
dec
pop
and
push
in
jge
dec
add
dec
jl
pop
ja
loope
pop
cltd
push
push
push
cwtd
test
popa
fstps
cwtl
bound
sbb
jns
das
inc
mov
jge
in
sub
stos
stos
mov
insl
cmp
and
mov
out
jne
jl
xchg
cmpsl
inc
lods
dec
js
repz
mov
jg
shlb
test
lods
xchg
iret
push
lods
imul
cld
and
cmp
divb
or
mov
pop
fidivl
lds
inc
adc
lods
xor
ja
add
jno
ret
mov
push
mov
adc
mov
call
daa
cmp
mov
dec
ljmp
jae
dec
push
ret
out
popa
jne
jae
xlat
mov
leave
js
pushf
jno
cwtl
dec
mov
dec
addr16
cwtd
sub
inc
jg
jle
test
lahf
push
fld
mov
inc
cltd
cmpl
adc
mov
xchg
jle
bnd
push
add
inc
and
movb
mov
and
mull
xchg
xor
adc
pop
mov
xchg
mov
xchg
xchg
adc
pop
or
and
push
push
iret
add
jp
loopne
dec
test
xchg
fcmovb
xor
pusha
enter
jbe
stos
iret
pop
sub
xor
add
pop
outsl
iret
mov
push
jl
pop
sbb
sub
cmpsb
test
flds
movsl
and
jmp
movsl
and
popa
adc
jge
cmc
sbb
adc
insl
and
jno
sahf
fdivrs
pop
xchg
loope
ljmp
cltd
sbb
lret
adc
jne
mov
mov
sub
fildll
testb
cli
xchg
repnz
ret
out
lahf
jp
cmp
add
add
inc
mov
mov
dec
dec
fldt
and
sbb
cmc
xor
pop
adc
test
fistps
push
cmpsl
mulb
jno
ljmp
sbb
sbb
test
adc
jae
mov
adc
pop
imul
ss
dec
and
and
ja
or
call
je
cmp
add
stos
ljmp
imul
cmpsb
data16
fisttpll
or
loop
shrb
ret
repnz
mov
adc
sti
in
popa
das
lcall
mov
jbe
push
sub
add
lds
shll
mov
movsb
or
fadd
mov
gs
push
sub
leave
outsb
mov
mov
inc
cmp
push
aas
pop
cmpb
test
xchg
leave
push
shl
jmp
lods
outsl
rorb
pushf
cwtl
fisttpll
xchg
flds
mov
add
pusha
dec
cmpsb
dec
or
and
lods
fimull
dec
and
push
loope
pop
test
sub
cwtl
lret
adc
inc
mov
adc
inc
push
es
test
loop
pop
ljmp
movsl
cld
cld
outsl
dec
pusha
movl
xor
pop
pop
lock
mov
pop
xor
push
cwtl
jb
mov
iretw
out
test
mov
mov
pop
mov
or
push
sbb
movsb
pop
push
inc
in
divl
aam
and
jle
das
loope
xchg
inc
push
enter
sti
jmp
inc
out
pop
inc
lods
test
mov
jecxz
js
sahf
mov
mov
mov
das
andb
dec
dec
pop
pop
leave
inc
pusha
test
mov
stos
jae
push
cmp
push
sbb
cmp
lods
addr16
fcmovnu
xor
xor
mov
mov
daa
incb
lret
ja
ljmp
lahf
ss
fistpll
iret
sti
in
push
int3
add
xchg
popf
shlb
test
and
inc
popa
mov
xchg
gs
pusha
xlat
push
push
or
pop
inc
lahf
xchg
xchg
mov
or
fiaddl
cltd
push
adc
push
jg
in
pop
mov
or
clc
mov
out
jae
lods
clc
push
out
xor
in
sbb
inc
xchg
outsb
mov
mov
inc
es
pop
adc
mov
xchg
test
stos
xchg
sarb
cmc
aaa
lea
mov
xchg
scas
aaa
ljmp
and
lret
cltd
xor
mov
add
lea
rorb
sbb
outsb
sbb
xor
mov
xchg
pop
cmp
shl
sbb
test
les
xorb
xor
lret
dec
jbe
cmp
jle
fdivrl
and
mov
dec
decb
mov
lods
inc
dec
xchg
push
iret
ljmp
push
fdivp
dec
mov
out
das
fcoms
push
push
push
xor
movsb
mov
enter
lds
and
cmpsb
dec
pushf
data16
enter
mov
clc
movsl
fdivr
jge
out
inc
fs
push
or
and
push
push
sbb
pop
subb
jns
sub
push
hlt
mov
jl
pop
pop
mov
push
mov
sub
mov
xor
and
push
lods
mov
decb
adc
aam
push
insl
push
mov
gs
mov
pop
xor
pushf
xchg
jg
outsb
inc
addr16
incl
inc
dec
push
rolb
jecxz
js
lret
xlat
lods
stos
inc
and
in
inc
out
jmp
lods
cmp
loop
cs
adc
fistpl
call
jmp
pusha
or
or
add
sub
push
jmp
dec
fimull
dec
loope
mov
xlat
int
jno
mov
jae
aam
inc
adc
or
mov
sbb
xor
shlb
aaa
or
fcomip
out
pop
aaa
mov
iret
out
loope
jg
push
jb
scas
mov
stos
out
pxor
xchg
mov
push
mov
add
sbb
loop
negl
pop
jns
dec
cmp
add
out
inc
fists
fs
lods
push
pop
mov
mov
leave
or
fldcw
xor
cld
or
sub
icebp
fadd
xor
test
lods
cltd
loopw
push
push
es
pop
add
dec
out
or
dec
icebp
xchg
fldcw
test
and
dec
dec
enter
sar
push
testb
lods
cmp
push
inc
inc
leave
bound
xor
cld
xor
jbe
mov
mov
std
gs
mov
push
scas
xchg
mov
das
imul
cmpsb
xchg
mov
movsb
aaa
jno
cmp
cmpb
nop
pop
cmp
in
add
mov
sub
pop
mov
sti
shl
fwait
sbb
rorl
push
mov
aaa
ja
cmpsl
pop
mov
jbe
jb
test
cmp
lcall
daa
mov
xor
push
inc
es
lock
xchg
cmp
mov
jno
aaa
sub
pop
mov
sarl
and
lods
popa
daa
push
dec
mov
gs
loop
mov
out
add
into
or
add
jmp
je
add
out
cmp
mov
pop
push
jmp
xlat
cmpl
js
pop
pop
mov
daa
pop
sub
dec
les
ret
push
loopne
fadd
movsb
mov
xchg
jmp
mov
test
adc
mov
std
repz
sti
jns
js
dec
inc
clc
push
fdivrl
test
out
pop
leave
lahf
fiaddl
mov
pusha
scas
jo
adc
and
sbb
mov
sub
dec
and
aas
movsb
cwtl
sub
xor
gs
outsb
pop
dec
adc
das
fcoms
imul
adc
aam
test
pop
inc
pop
xchg
jne
mov
push
jo
mov
adc
sub
rcll
mov
xchg
jns
push
xchg
jb
sahf
and
hlt
clc
andb
xchg
outsl
pusha
cmp
pop
cmp
pop
pop
mov
test
fadd
jmp
sbb
mov
mov
rolb
mov
pop
arpl
addr16
add
mov
or
out
int3
push
sbb
mov
add
jmp
or
in
addb
movsl
cmp
xchg
inc
das
ja
mov
or
jnp
les
sbb
mov
add
mov
leave
in
cltd
pusha
testl
je
sbb
std
loop
iret
xchg
push
jg
inc
push
outsb
jno
ret
sub
inc
adcb
xor
jno
push
int
mov
jbe
lret
pop
std
jecxz
hlt
jmp
imul
enter
mov
aas
add
imulb
jge
dec
arpl
dec
lahf
mov
stos
ss
lea
or
inc
cmp
cmp
cwtl
inc
xor
roll
dec
lcall
and
movsl
dec
cmp
fbld
mov
mov
mov
cmp
cmp
mov
xor
fisubrl
mov
js
loop
daa
ss
gs
lock
fwait
mov
out
mov
xor
add
inc
cmpsb
stos
sub
sti
lcall
inc
push
push
push
data16
fcmove
in
test
jnp
in
pop
lret
inc
mov
sub
rcr
leave
shl
lds
test
notb
outsl
ja
enter
ss
gs
in
add
jmp
ljmp
cmp
das
ljmp
mov
pop
mov
add
jg
arpl
mov
aas
mov
sbb
jns
inc
mov
xchg
dec
nop
push
inc
outsb
dec
cmpl
inc
popa
insl
jge
xlat
pop
xor
and
jo
mov
jmp
jge
dec
mov
jo
cmpsb
fildll
ljmp
push
hlt
xor
pop
jmp
dec
xor
or
test
gs
faddl
inc
mov
lahf
arpl
mov
int3
add
pop
shl
decb
bound
sti
ja
scas
xorl
add
les
jge
sti
decb
sahf
cld
iret
inc
push
mov
mov
push
mov
jge
mov
cs
and
nop
push
xchg
mov
cwtl
mov
xchg
add
fs
mov
cltd
popl
cmpsl
dec
mov
mull
iret
jl
insb
lcall
testb
ja
or
xor
mov
and
movsl
ss
scas
aad
data16
ljmp
mov
jo
push
cli
pop
pushf
out
roll
add
xchg
mov
hlt
fnstsw
nop
jle
call
scas
sbb
push
mov
adc
cwtl
shl
repz
lds
push
test
out
dec
cmp
insl
subl
sbb
adc
adcb
mov
pop
xlat
xor
cmp
mov
sub
push
shlb
adc
aas
cmp
jg
push
out
call
mov
pushf
imulb
ljmp
popa
cwtl
lcall
sub
push
sub
push
adc
xchg
je
ja
push
pop
push
aad
fidivs
nopl
lret
push
cmc
xchg
dec
leave
dec
or
ljmp
jb
rol
test
xchg
mov
or
pop
xor
mov
int3
lahf
scas
or
call
pop
jg
pop
lods
fs
ja
jae
arpl
mov
repnz
jnp
sub
out
mov
sbb
fs
add
and
lret
mov
xchg
and
lock
jmp
movsl
xchg
inc
xchg
mov
cmc
xlat
pop
das
imul
mov
mov
mov
sub
je
sarl
pop
scas
int
mov
addr16
roll
mov
mov
jne
ret
ror
and
sbb
lods
jo
bound
lcall
decl
push
aaa
popf
mov
dec
push
cs
xchg
push
clc
xchg
or
push
aas
xchg
dec
xchg
popa
push
imul
and
inc
out
hlt
mov
adc
sbb
push
stos
mov
leave
out
cmpsl
adc
mov
rcr
sub
push
mov
xor
mov
loope
rolb
sub
aas
cltd
hlt
add
int
in
add
into
adc
or
shll
jo
pop
dec
inc
mov
xor
fnstenv
dec
mov
test
push
sti
lahf
ret
xor
cs
movsl
jge
in
and
jno
mov
pop
xchg
mov
repz
or
daa
fs
pop
loope
vunpcklps
shll
loope
push
test
mov
in
or
xor
mov
daa
test
pop
push
inc
cltd
movsb
or
sub
fisubs
decb
adc
dec
add
xor
mov
xor
jecxz
inc
andl
push
inc
inc
in
divb
push
xor
sti
outsl
lock
inc
xchg
inc
mov
sbb
leave
mov
inc
les
scas
fiaddl
lods
jg
test
cmc
push
lods
insl
js
repnz
mov
and
inc
mov
std
adcl
leave
cmp
scas
std
cmp
jns
testl
push
insl
lea
sbb
sahf
movsb
data16
cmpsl
push
sub
push
jg
adc
inc
repz
mov
sbb
mov
and
jp
adc
js
mov
lods
lods
xchg
sub
stos
dec
jge
jns
pop
jbe
loope
sbb
mov
mov
inc
pop
lcall
stc
lcall
adc
pop
popa
adc
dec
push
je
push
push
jno
mov
cmp
sub
push
movsl
fucom
push
lret
out
das
dec
lods
jnp
lret
repnz
pop
cmpsl
shll
mov
loopne
jo
lahf
cwtl
inc
fistl
add
push
lret
aas
or
out
jp
lret
call
cmpsb
sbb
cmpl
loop
add
adc
or
mov
movsb
imul
inc
lahf
mov
mov
sahf
mov
fildll
pop
aas
jmp
push
push
mov
decl
std
push
push
cwtl
fidivrs
xchg
sbb
jmp
fs
mov
jge
push
mov
xor
stos
scas
sbb
rcl
data16
mov
sbbb
je
sub
or
dec
inc
mov
mov
mov
gs
adc
pop
hlt
scas
scas
je
cwtl
or
lret
cmp
add
push
push
push
gs
add
pop
es
cltd
sbb
push
sahf
cs
mov
test
or
dec
iret
cmc
cmp
mov
andb
sub
out
int
aas
push
sbb
outsb
mov
mov
mov
mov
mov
outsb
sbb
imul
mov
push
sub
inc
lods
pop
mov
and
mov
lea
fistpl
shrl
and
in
shlb
mov
mov
lahf
and
sub
lods
add
scas
test
aad
sbb
pop
in
out
addr16
sbb
mov
sarl
dec
outsl
cmovo
push
loop
out
xchg
add
sub
cli
fyl2xp1
cmpb
popa
imul
or
data16
jle
fdivl
test
add
adc
sub
insb
mov
mov
jle
dec
les
fsubrp
dec
adc
call
mov
and
int3
jb
hlt
mov
jns
loope
insl
aaa
cld
popa
pushf
xchg
pop
cmp
adc
repnz
xor
adcb
push
lahf
cmc
cmpsl
rcrl
pop
repz
sub
sub
inc
popf
pop
insb
ds
loopne
ret
pop
lea
and
and
jl
pusha
daa
push
inc
adc
call
int
pop
ljmp
test
jecxz
rorb
pop
pop
mov
bound
cltd
push
push
adc
pop
or
ficompl
adc
fisubrl
push
jl
mov
insl
xor
lcall
shrl
sarb
test
shll
outsl
iret
iret
mov
mov
std
mov
in
mov
imull
jae
jno
xchg
mov
xor
push
pop
inc
mov
or
lcall
je,pn
test
jnp
push
test
ficoml
loopne
xchg
in
mov
sti
adc
test
lock
addr16
insb
push
rolb
lock
pop
call
xchg
push
int
xchg
addr16
sbb
loopne
call
repnz
cwtl
ljmp
xchg
jmp
ss
fadds
out
adc
xor
loopne
push
test
push
add
add
push
out
int
mov
push
dec
std
std
push
or
adc
push
lcall
clc
sbb
adc
popf
jnp
push
inc
inc
popa
push
xchg
cmp
aaa
mov
push
mov
negl
jns
int
cmp
sbb
sub
scas
lods
push
aam
and
hlt
dec
push
subl
inc
loope
push
sarl
lds
pop
fwait
mov
adc
lock
test
jb
sbb
addr16
xor
pop
aaa
testl
pop
sti
cltd
aad
jae
sbb
js
outsl
hlt
hlt
addr16
icebp
xor
adc
xor
dec
js
or
iret
test
fcmovu
setl
dec
out
and
inc
xchg
mulb
pop
mov
inc
or
hlt
mov
xor
repnz
jnp
fldcw
movsl
jo
aam
cmc
pop
push
insb
cmp
dec
out
mov
push
lret
sti
stos
sub
orb
and
jle
lret
xchg
jp
push
adc
lcall
fwait
repnz
scas
les
dec
cmp
stos
imul
or
loope
test
imul
push
push
lock
mov
test
out
fistps
jmp
push
pushf
lret
xor
push
enter
outsl
pop
nop
ds
imul
pop
sarb
out
pop
xor
push
pop
lahf
lcall
mov
aaa
nop
aaa
xchg
xor
pushf
pop
or
das
pop
pusha
mov
cmpsl
sbb
xchg
int3
stos
daa
mov
push
lock
aas
jecxz
shl
ret
mov
sbb
or
and
lods
in
dec
xor
push
xor
inc
push
mov
add
inc
jl
pop
out
inc
test
mov
inc
fistps
mov
and
mov
jecxz
adc
loope
das
add
cmp
or
es
in
adc
add
adc
push
adc
xlat
pop
xchg
sbb
jns
repz
push
fucom
pop
bound
cmp
mov
mov
fsts
sarb
insl
aas
call
sbb
test
cmp
rcll
cwtl
dec
mov
sbb
outsb
cli
xchg
dec
push
insl
cli
ret
sbb
lds
int3
mov
icebp
into
fildl
pop
xor
cmp
sub
lcall
fs
js
jae
mov
aas
mov
cmp
aas
aaa
add
pop
ljmp
xchg
pop
mov
cmp
cmpsb
and
enter
imul
mov
dec
mov
mov
xor
pushf
sarb
push
stc
mov
repz
lcall
mov
pop
aas
cmp
cmp
adc
cli
mov
sub
loopne
jb
inc
or
int3
cmpsl
jmp
jnp
adc
mov
sbb
mov
pop
pop
icebp
push
add
mov
aaa
mov
mov
fwait
rcrl
popa
enter
adc
jge
loop
add
mov
std
js
xchg
jecxz
int
mov
dec
xchg
inc
dec
jle
iret
add
xor
push
sbb
test
inc
inc
xchg
enter
popf
cmc
xor
mov
pusha
gs
sbb
or
jb
adc
and
call
jmp
mov
and
mov
pop
ljmp
xor
pop
out
xor
add
add
pop
mov
ljmp
cmp
cmp
leave
movsb
aam
sti
push
push
pop
xchg
cwtl
jecxz
jge
call
ljmp
jmp
jbe
push
sbb
and
insb
adc
stos
mov
cltd
dec
int
jo
push
sbb
sbb
jp
cmp
sbb
jne
xchg
adc
loopne
outsl
shrl
ucomiss
hlt
xchg
xchg
jp
sub
cltd
or
test
out
repz
clc
pop
jge
in
aas
xlat
pop
outsb
std
cmpsl
in
stc
aas
mov
sti
jne
fldl2e
xor
mov
rcr
lods
cmpsl
dec
jnp
movsl
inc
or
movsb
push
cmp
push
jae
cld
out
push
ljmp
pop
sti
pop
xor
sahf
int
push
add
ds
push
mov
mov
das
push
cwtl
shlb
mov
pop
xor
pop
jle
add
loopne
xor
lcall
jl
addr16
or
in
push
dec
ds
and
test
mov
xchg
sub
cltd
das
dec
aas
cmp
sub
cmp
mov
test
ja
mov
mov
dec
cli
add
jl
jmp
adc
add
subb
xchg
pop
xchg
inc
insl
mov
imul
rorl
push
pop
or
jnp
lods
jno
cmp
or
stos
leave
pushf
xchg
aas
test
jmp
loope
fmuls
hlt
inc
shll
sbb
hlt
subl
jnp
mov
fmul
dec
in
arpl
pop
pop
jmp
je
mov
sbb
mov
call
xor
cs
and
xor
push
sbbb
jnp
adc
mov
inc
pop
and
ds
cmp
and
dec
test
push
ret
shll
mov
fldenv
outsl
push
pop
rcll
xlat
imul
fists
fists
rcll
add
xchg
mulb
or
andl
pop
int3
les
arpl
inc
xchg
sbbw
stos
mov
leave
ss
imul
repz
sbb
in
jne
bound
sub
std
addr16
dec
popa
mov
adc
mov
pushf
leave
rcll
xchg
jbe
inc
or
fildll
pop
adc
mov
inc
cmpsb
aad
test
clc
daa
insb
fstpt
push
xchg
push
pop
paddw
push
sar
push
or
inc
push
arpl
das
inc
adc
aad
sub
push
mov
add
gs
enter
inc
ret
popf
test
lahf
push
mov
push
popf
pushf
jbe
vpsubusb
fimull
xor
in
inc
cld
cltd
shl
xchg
repz
cli
inc
pop
daa
in
lock
jae
test
sub
jno
inc
pop
sbbb
mov
pop
cmp
jo
add
loope
in
das
bound
cmp
jo
xchg
lods
ror
fndisi(8087
ret
ror
push
dec
xlat
lret
aad
es
adc
repz
sahf
test
addb
lods
cmp
xchg
adc
mov
xchg
aas
rcr
adc
icebp
jno
jge
lcall
xor
cltd
in
loope
mov
in
stc
lcall
mov
xchg
xchg
in
frstor
movsl
out
orl
jno
xlat
jmp
popl
fcmovne
lret
xchg
push
dec
les
rcll
push
movsl
clc
push
pop
cmp
pop
les
push
scas
push
fisubrl
out
jno
data16
inc
jno
stos
mov
repnz
hlt
aaa
pop
in
cmc
push
sti
sarl
xlat
push
push
lea
add
leave
loop
sarb
adc
push
pop
insl
bound
movsl
fstl
inc
mov
and
cli
sbb
dec
adc
inc
mov
ret
sahf
pop
jbe
mov
popl
insb
dec
popf
in
insl
mov
leave
push
jne
cs
lahf
lock
sahf
gs
pop
pushf
rclb
mov
mov
pusha
into
sbb
and
out
jmp
inc
out
loop
nop
aad
hlt
inc
inc
cmp
pop
sub
imul
mov
outsb
out
loop
hlt
cld
int3
and
mov
or
push
das
stos
sbb
cmp
imul
shl
sbb
sub
jmp
add
scas
lret
inc
pop
out
mov
into
test
pop
scas
jmp
sub
pusha
inc
sub
jge
ja
adc
shrb
xor
fildll
or
lret
notb
dec
inc
inc
int
xchg
icebp
mov
dec
into
pop
stos
push
sub
jbe
xorl
push
insb
out
mov
test
lcall
out
pop
xor
mov
int
pusha
cmpsl
and
rcll
inc
fsubl
es
popf
jl
test
repz
pop
add
dec
push
int3
pop
mov
fldcw
jle
lret
mov
cmc
sbb
stos
and
mov
jge
jne
adc
sbb
xor
xchg
nop
pop
add
sub
push
repz
gs
subb
cmc
add
and
cmc
out
jno
mov
lock
insl
jg
fstpl
jnp
imul
mov
icebp
repz
aaa
xor
adc
or
test
orb
andb
mov
pushf
inc
pusha
mov
cmp
mov
adc
cltd
pop
cmpsl
lods
add
aaa
cs
cmp
inc
mov
cmp
push
pop
js
cmp
and
cmp
fsts
leave
fidivl
push
sti
icebp
xor
mov
je
xor
push
sarl
fstp
or
pusha
gs
outsb
sub
pop
testb
dec
das
dec
inc
loopne
and
lods
sar
out
nop
imul
dec
dec
add
mov
call
sbb
dec
cmpsb
fs
and
adc
ret
push
in
in
mov
mov
dec
ret
inc
sbb
cmc
call
test
push
imul
adc
inc
inc
outsb
jbe
sbb
and
repnz
mov
int3
imul
ret
or
jmp
push
xchg
mov
rcr
mov
mov
lock
shll
call
xchg
lods
jg
and
inc
or
or
mov
fucom
xchg
popf
sbb
sti
mov
insl
fildll
jmp
lods
cwtl
add
stos
fdivrl
dec
push
lcall
dec
popa
jae
xchg
dec
fadds
cmp
mov
add
jp
adc
mov
jg
call
es
adc
push
cmp
leave
push
mov
sub
pop
xor
or
xor
push
stos
mov
out
push
and
pop
pop
adcl
jae
aad
in
mov
push
out
in
adc
gs
mov
or
add
mov
test
fs
and
jae
stos
ljmp
sar
fs
or
movl
push
mov
xor
sub
cmpsl
inc
test
sbb
shrb
daa
repnz
jge
nop
add
sub
stc
xchg
lcall
lock
xchg
ficoml
pop
ljmp
push
add
in
add
pop
mov
int3
gs
adc
jp
push
pop
in
push
pop
enter
pop
daa
lock
movsl
pop
xor
add
cmp
inc
cmp
add
outsb
aaa
add
es
dec
inc
mov
cli
cmp
pop
insl
adc
mov
cmpsb
adc
mov
aad
mov
aam
pusha
in
js
push
cmp
fsub
notb
sar
imul
adc
xor
mov
cs
clc
cmp
aas
sub
jmp
rclb
jmp
roll
mov
push
test
addr16
cmc
jl
xchg
fistpll
bound
pop
mov
inc
push
int3
cmp
xchg
mov
jne
jnp
mov
sub
push
ja
fmull
xchg
je
popa
jbe
ja
cmpsl
mov
andb
mov
cmp
jb
ret
test
pop
pusha
inc
mov
dec
lock
adcb
shll
jmp
sbb
aad
xchg
orb
fisubrs
adc
adc
in
sub
add
out
or
and
lds
inc
lds
test
push
dec
mov
mov
fstpl
stos
mov
insb
jge
and
div
andl
pop
sarl
mov
push
mov
jmp
sarl
loopne
mov
out
sbb
jmp
mov
enter
mov
test
mov
sub
and
jmp
cli
add
jnp
mov
stc
xchg
pop
clc
push
addr16
mov
xor
pop
arpl
pop
xor
sbb
mov
pop
push
xor
in
mov
xor
cmp
mov
clc
adc
les
xor
rol
das
loopne
mov
push
mov
mov
adc
or
sub
movl
es
pop
cmpsb
push
test
mov
gs
cmpsb
fs
es
cltd
inc
mov
insl
in
lcall
jae
cmc
mov
ret
in
arpl
pop
orl
or
cwtl
insb
fucom
fisubl
int
orl
imul
fwait
add
lret
loopne
aas
aaa
sbb
cwtl
sub
pop
aad
test
movlps
icebp
cmp
mov
and
push
rcrb
clc
cmpsb
dec
xor
jmp
icebp
sbb
adc
stos
xchg
xchg
aas
lret
add
sbb
out
push
inc
xor
sub
jbe
push
sbb
repz
in
push
in
or
cwtl
adc
jle
lret
enter
orb
shlb
pop
inc
pop
lcall
stos
jne
mov
ljmp
test
imul
dec
rorl
lahf
rorb
xchg
mov
loope
mov
xorb
adc
jp
jno
lahf
daa
jo
sub
lcall
es
push
fdivrl
mov
rcrl
nop
ljmp
lods
jmp
mov
rolb
jmp
mov
mov
adc
fsubs
sbb
mov
les
dec
jae
scas
test
rcl
mov
cmc
cmp
subl
push
push
subl
mov
stc
fnstsw
lcall
push
mov
ljmp
stos
push
jnp
cs
fbstp
mov
sbb
imul
outsl
dec
addr16
sub
xor
adc
inc
sub
cmp
push
rcl
xor
test
lret
mov
push
mov
insb
popf
sub
or
test
stos
mov
mov
mull
or
addr16
mov
orb
ret
jmp
add
orl
shlb
or
popa
hlt
xor
pop
xchg
popa
nop
movsb
insl
xchg
jo
stos
daa
scas
mov
out
enter
or
rcrl
xchg
mov
lods
push
adc
ss
dec
aaa
sbb
insb
or
push
and
xchg
bound
rclb
jne
add
xchg
rorl
mov
cwtl
insb
inc
insl
pushf
sar
cmc
mov
mov
movsb
inc
pop
push
sub
scas
cmpsb
jp
mov
inc
flds
push
jbe
jmp
jmp
add
fcmovu
jbe
xor
jp
loope
xor
cwtl
test
out
xchg
scas
mov
mov
int3
scas
push
cmp
cmp
push
pop
out
in
jae
lds
adc
int3
arpl
sub
xchg
bound
push
jmp
and
fisttpl
clc
mov
inc
jecxz
jge
aad
cld
push
outsl
mov
jbe
pop
int3
xchg
pop
mov
or
add
inc
push
pop
xor
dec
push
fimull
sub
bnd
cmpsb
dec
push
incl
hlt
and
adc
scas
pushf
sahf
xor
cmp
xlat
into
xchg
add
add
ljmp
test
idivb
cmp
in
or
sub
pop
sub
mov
xchg
test
cltd
loope
dec
push
xor
cmp
jo
std
push
mov
cli
arpl
xchg
xchg
bound
push
fimuls
cli
or
cli
lret
je
loopne
outsb
cmpsl
push
dec
sbb
stc
jo
xchg
xor
sub
xchg
orl
fs
inc
subl
arpl
sub
mov
cs
lahf
loopne
jbe
mov
and
test
cwtl
aas
loope
jne
and
mov
aam
lret
cs
lcall
pop
and
ss
cmc
fsubs
mov
adc
out
mov
sbb
stc
or
jae
inc
lods
repz
hlt
mov
inc
int3
mov
adc
movsl
mov
push
std
jmp
lods
test
add
or
mov
mov
cmpsl
leave
add
pop
popf
push
lret
pusha
data16
jecxz
je
lea
push
or
cmp
sarb
and
mov
dec
jle
jae
aam
mov
add
add
icebp
insb
inc
into
and
testl
and
mov
or
outsl
dec
test
mov
lods
cmp
int3
fimull
pop
sbb
mov
push
jg
dec
out
mov
xchg
cli
ljmp
push
xchg
ret
xchg
sbb
lea
repz
std
sbb
jnp
int3
repnz
pop
and
aam
push
jge
push
cli
test
int3
mov
test
in
loopne
mov
dec
bound
or
fdivs
sub
ret
test
mov
lcall
test
outsl
and
xor
lret
xchg
fcoml
into
mov
movsl
mov
mov
lret
add
adc
cmp
mov
bound
rcll
in
xor
sub
sub
inc
sbb
mov
mov
jne
lods
mov
lock
and
cmp
xorb
sbb
push
std
outsb
xchg
or
mov
adc
mov
sub
outsb
popf
outsl
in
inc
cmp
mov
push
mov
sbb
rclb
pop
cmp
cmp
xchg
inc
sbb
sbb
insb
mov
outsl
pop
test
xor
sub
xchg
jle
bound
xchg
shll
js
out
pop
cmp
push
sub
addl
jecxz
dec
lock
sar
dec
jg
push
inc
and
imul
push
jo
and
xchg
mov
loopne
lea
lods
pop
lock
ja
lods
jno
stc
add
mov
mull
mov
jecxz
sti
sbb
mov
imul
pushf
pop
cs
lcall
add
out
xor
stos
xchg
xor
inc
mov
mov
jnp
pusha
cmp
insb
pop
subl
pop
iret
and
cmpsl
jge
stc
sub
mov
int
push
jo
inc
push
xchg
inc
pop
cmp
jge
mov
add
filds
stos
or
insl
imul
mov
inc
push
pusha
mov
push
mov
dec
pop
xchg
out
jmp
xchg
ds
pop
dec
dec
sbb
ljmp
cmpsl
subl
sbb
loopne
cmp
push
stc
push
xor
inc
mov
gs
lahf
lahf
adc
xor
test
mov
cmp
xchg
mov
mov
scas
je
pop
insl
inc
sbb
cmpsl
push
jns
push
in
xchg
ds
jmp
into
jle
outsb
mov
fdiv
fistps
mov
in
ficompl
add
loop
rclb
xor
popf
sarl
daa
jnp
call
dec
cltd
hlt
je
jmp
stc
adc
aam
push
std
mov
mov
shrl
or
adcb
mov
push
cmpsl
popa
stos
or
mov
dec
pop
add
mov
sub
cmp
add
adc
push
cmpsb
fstl
push
in
jp
and
mov
cmp
out
jae
into
mov
call
out
cmc
movl
stos
adc
cmp
cmc
or
arpl
pusha
test
stos
xchg
rcl
lds
push
sbb
iret
aam
and
add
shrb
bound
repnz
fstps
test
inc
jbe
scas
mov
std
hlt
sbb
movsb
aam
sahf
fidivrl
dec
movsb
test
les
imul
or
pop
jecxz
push
daa
iret
and
addr16
sti
pop
push
mov
mov
faddp
mov
loopne
mov
orl
sti
jl
sub
out
ss
mov
push
sahf
enter
es
test
xor
sbb
jmp
and
stos
inc
test
mov
push
test
mov
loope
test
cmp
fldenv
sub
out
inc
pushl
jl
xchg
jnp
icebp
cmpsl
cmpsl
jg
xchg
imul
movsb
int
add
inc
fdivrs
test
popa
fmul
adc
and
clc
adc
mov
cwtl
cmp
and
cmpl
add
or
jno
repz
das
std
mov
cmc
sub
xchg
mov
sahf
xchg
stos
jnp
cmp
lds
lds
pop
jle
mov
xchg
add
xchg
fnstsw
jle
cmp
push
ret
pop
test
ret
and
loopne
idivb
xchg
sub
inc
aad
mov
cmp
sbb
aaa
sarb
ljmp
fs
ds
push
xchg
leave
adc
mov
daa
inc
mov
xorb
fimull
push
inc
lods
mov
inc
clc
jb
adc
or
jp
fldl
outsl
xchg
add
and
adc
das
sub
in
xor
je
or
add
dec
mov
nop
in
mov
jmp
mov
mov
jnp
xchg
adc
dec
xlat
js
sub
test
sub
outsl
clc
sbbl
jp
inc
int
nop
fildll
jbe
mov
addl
stos
shlb
jb
loope
push
pop
lret
mov
gs
iret
mov
sub
push
xor
es
add
outsb
ss
repz
arpl
aad
mov
mov
sbb
cltd
pop
add
add
in
inc
mov
repz
add
andl
aam
loopne
lods
pop
dec
push
push
fwait
shlb
lahf
lret
mov
cmpsb
jmp
or
push
insl
jnp
shrl
stos
or
push
cmpsb
mov
popf
jecxz
or
js
dec
pushf
inc
mov
xchg
iret
insl
rclb
mov
add
loop
iret
aam
or
xchg
push
ret
and
subl
lret
cwtl
je
imulb
es
nop
mov
arpl
sbb
cmpsl
jno
mov
or
cmp
dec
aaa
dec
inc
xor
add
stos
in
cltd
and
mov
outsl
xchg
ret
pop
in
lcall
call
xchg
fisttpll
mov
sbbl
and
jmp
das
inc
dec
jb
sbb
loope
cmp
stos
and
jae
add
xchg
dec
cld
mov
in
push
adc
fstl
push
mov
cltd
mov
bound
fimuls
xchg
cld
movsb
cmpl
push
cmp
out
pop
stc
xchg
jecxz
and
or
adc
jg
fsubrl
adcb
push
jae
popl
cmpb
scas
cmp
mov
dec
lock
cmc
scas
sarb
dec
inc
hlt
mov
adc
or
and
and
sbb
mov
sbb
lds
dec
fs
mov
das
mov
jne
adc
sti
inc
loope
mov
mov
in
xchg
cmp
out
adc
sub
nop
fmul
jb
or
movsl
arpl
data16
shrb
xor
jl
scas
lds
jecxz
push
push
xchg
mov
fisttpll
fwait
adc
cmp
jns
and
mov
daa
gs
in
mov
ss
enter
xchg
dec
dec
loope
xor
arpl
lods
mov
cmp
mov
fistpl
and
dec
lea
movsb
pusha
push
sahf
pushf
adc
popf
cmp
std
mov
mov
sti
adc
push
xchg
lahf
dec
repz
jg
leave
ret
clc
testl
ja
fldenv
sbb
fwait
add
dec
pop
mov
pop
fisttps
pop
jno
in
daa
inc
cld
dec
int3
gs
cs
mov
ret
cmp
ja
pushf
inc
dec
dec
mov
or
mov
and
xchg
pop
les
pushl
inc
ret
dec
ret
stos
mov
sub
jbe
inc
outsl
or
xlat
xlat
xchg
popa
cmp
pop
in
xchg
and
push
movb
xchg
mov
aaa
in
push
mov
add
fisubs
jp
aas
and
or
dec
bound
fistpl
addr16
nop
pop
jmp
or
xor
in
add
push
xchg
jne
int3
call
sbb
cltd
outsl
test
cmp
add
sub
aaa
icebp
fdivrl
sub
popf
xor
mov
das
mov
test
mov
mov
lret
pop
into
xchg
pop
ret
jae
and
and
pop
call
test
adc
test
mov
pop
inc
push
rcrl
or
jp
mov
int
cmpsb
add
adc
pop
rorl
jae
push
mov
cmp
daa
je
sti
or
in
add
iret
subl
or
mov
shlb
mov
arpl
pop
subb
cmp
add
pop
xor
sti
dec
mov
sbb
sbb
xor
movq
retw
shrb
pop
jle
mov
insb
bound
js
jl
fldcw
aam
scas
repnz
sbb
clc
bound
and
lcall
mov
sub
test
mov
xchg
lahf
cmpsl
iret
mov
or
pop
inc
jne
sub
in
cltd
outsl
lret
dec
cmpsb
mov
dec
jae
inc
popf
mov
mov
mov
stos
fisubrl
or
sub
and
rcrl
jecxz
mov
cmpsl
jge
push
fwait
push
cli
imul
mov
ret
insl
push
fcomip
mov
popf
xchg
les
insl
notl
daa
mov
xchg
mov
push
dec
sar
xor
notl
aam
fisubs
mov
mov
mov
push
mov
loope
outsl
repz
aaa
add
add
inc
xor
leave
dec
mov
int
lret
xchg
cmp
push
sahf
mov
std
xor
mov
xchg
cld
xor
xchg
jl
cs
jmp
adc
xchg
inc
xlat
cmp
mov
test
bound
fxch
mov
mov
adc
subb
clc
ret
test
jne
aam
sahf
push
or
fildll
lahf
xchg
movsl
mov
into
clc
in
mov
jo
add
add
mov
pop
test
fmulp
out
add
jecxz
dec
fcoml
hlt
mov
adc
test
xchg
sti
cs
enter
and
sub
ljmp
mov
call
xchg
push
out
mov
aam
mov
cmpsb
inc
lds
inc
in
in
call
out
loop
aam
shlb
das
fbstp
pop
in
imul
and
pop
sbb
inc
imul
or
fcomp
xor
sub
shll
popf
fidivs
in
in
repnz
out
mov
imul
mov
aam
jle
daa
repnz
sub
add
lret
xchg
cmc
outsl
mov
mov
xchg
in
mov
inc
cltd
adc
addr16
ret
sub
and
inc
sbbl
add
out
pop
sahf
frstor
fldcw
jb
mulb
or
and
es
adc
push
cs
clc
imul
mov
xchg
xchg
andl
leave
dec
mov
adc
sub
pop
push
mov
pop
call
repz
adc
out
xchg
pop
pop
sub
cmp
pop
dec
mov
lds
sbb
push
mov
clc
je
pushf
addr16
dec
imul
and
cmp
push
jl
jmp
fwait
dec
mov
out
popa
je
add
arpl
sub
push
push
cmp
or
mov
or
jle
push
repz
call
outsl
sbb
into
add
loope
cmp
jnp
jb
loopne
rcll
cwtl
into
mov
neg
ffreep
in
or
icebp
ljmp
add
xchg
int3
fisubs
in
mov
cmp
fimuls
pop
in
inc
cli
inc
add
movsb
insl
lock
jle
push
sbb
out
sub
cmpsl
ds
repnz
lret
push
ret
stos
jnp
and
dec
pop
xchg
cmp
lea
out
fidivl
js
pop
fwait
jns
lahf
rclb
add
icebp
repnz
ljmp
or
mov
sub
sub
rclb
push
ficoml
mov
or
xchg
test
inc
sahf
rcrb
les
adcl
int
cmpsb
fsubrl
psubw
push
push
mov
mov
or
mov
pop
mov
and
sbb
repnz
clc
fs
jno
les
roll
adc
fsubs
jb
sbb
mov
insl
popf
pop
dec
lds
inc
adc
and
mov
mov
pop
dec
xor
inc
int
cltd
jecxz
xchg
add
cmpb
or
shll
nop
mov
in
scas
orb
jne
inc
pop
shlb
push
movsb
lock
cmp
mov
or
jmp
enter
xor
ret
xor
es
mov
in
jg
repnz
seta
in
addr16
in
insl
addr16
push
rorl
mov
insl
fadds
ja
jnp
mov
js
push
xchg
lods
xor
pop
bnd
jmp
sub
lea
std
xor
adc
sti
fidivs
jl
mov
in
push
jmp
lods
jno
lods
pop
inc
push
xchg
mov
pop
mov
mov
mov
jecxz
inc
pop
fisttpl
std
push
xor
push
cmpsl
leave
mov
int3
pop
fidivs
sti
pop
inc
add
divl
cmp
and
test
push
dec
mov
inc
out
loope
test
jle
into
mov
popf
dec
out
cmp
jb
rcll
in
test
aad
mov
sbb
xchg
inc
mov
jg
mov
inc
cmp
push
insb
pop
mov
ja
mov
stos
out
jmp
or
ja
sub
fisttpll
cmp
xchg
imul
mov
test
dec
add
rcrb
jmp
jmp
jl
and
pusha
jg
mov
and
je
inc
leave
xchg
mov
lret
inc
xchg
sub
icebp
test
xchg
pushf
jae
pop
adcl
lea
lods
inc
cld
dec
xorb
js
or
js
dec
adc
mov
sub
divb
mov
mov
mov
icebp
inc
pop
mov
push
pop
inc
fs
pop
mov
lods
in
js
sahf
movsb
outsb
or
gs
jecxz
push
dec
loop
adcl
lods
add
incl
jbe
bound
inc
loopne
cli
lods
rcl
or
ja
frstpm(287
dec
xor
ds
out
xlat
jmp
cmpsb
xchg
iret
dec
test
push
and
inc
aad
daa
rcrl
divb
out
or
sbb
ljmp
adc
jecxz
mov
lahf
insb
adc
jns
mov
cmp
mov
out
jns
je
sar
test
shl
fistpl
fsts
add
imul
es
jg
sahf
mov
movsl
out
sub
andb
xor
dec
jo
push
les
pop
jbe
repnz
push
sahf
divl
pusha
insl
aas
pop
int
or
pop
fs
dec
rorb
xorb
or
inc
xor
push
loope
fisubrs
imul
push
push
lods
cmpb
jbe
mov
dec
push
shrl
ffreep
add
jmp
and
sub
dec
repnz
xor
cmp
test
xor
in
aam
jecxz
push
xchg
cli
push
insb
mov
mov
cmpsl
in
cmp
mov
pusha
xchg
jle
out
cmpsb
mov
iret
inc
push
inc
scas
stc
and
xchg
xor
xorb
push
push
js
mov
push
mov
inc
push
mov
jecxz
dec
mov
jno
mov
loop
rcrb
in
cs
ljmp
lret
xchg
jbe
push
mov
or
push
push
xor
outsb
add
push
into
out
jae
movsb
stos
xchg
cli
add
rorb
ja
xor
icebp
aam
sbb
jge
inc
scas
je
sub
mov
jp
jge
xchg
mov
sbb
testb
inc
repz
repnz
pop
cmp
out
mov
mov
dec
paddusb
adc
mov
add
push
cmp
xchg
xchg
xor
outsb
std
inc
sub
mov
mov
mov
divl
xchg
jecxz
cmp
push
fbstp
mov
mov
mov
jg
cmp
movsl
mov
xor
xchg
loop
push
and
lds
push
xor
sub
or
test
dec
cmp
cmp
mov
push
movsl
dec
cmc
cmp
adc
jmp
push
mov
mov
dec
lahf
xchg
adc
lcall
fstpt
mov
fs
setnp
inc
cmp
mov
push
sarl
cmp
scas
stos
test
cld
addr16
or
push
out
sarb
xchg
mov
jne
data16
inc
daa
icebp
jno
jg
cmp
in
cmpsb
stos
mov
mov
mov
jg
cmp
rcrb
add
pop
dec
pop
sbb
mov
xchg
inc
rorb
xor
lods
xchg
push
shl
mov
mov
xor
push
test
lods
lret
push
call
cmpsb
xchg
fidivl
cli
adc
cmpsb
push
lahf
data16
dec
pop
call
int
nop
jmp
push
jbe
stos
outsb
pmaxub
das
ss
ja
pop
fstl
xchg
xor
mov
jo
or
aas
in
shr
test
pop
or
les
push
or
sbbb
outsl
mov
sti
jecxz
pop
mov
inc
xchg
xchg
lret
mov
jecxz
addr16
sbb
rcr
and
jg
sub
jecxz
imul
fstp
cmp
out
lods
and
xor
sahf
movsb
stc
push
jmp
pop
in
in
pushf
inc
sbb
xchg
xchg
shlb
fwait
xchg
lods
add
aaa
cmp
adc
xor
ret
mov
fstps
cmc
mov
pop
aam
imul
aas
leave
and
mov
sub
fsubrp
jge
lret
lock
or
jne
cmc
mov
int3
mov
cmc
jmp
sub
rolb
cmp
pushf
iret
cwtl
push
addr16
gs
cltd
lcall
jne
cmpsb
sbb
mov
test
mov
shr
xor
push
mov
jl
addb
xlat
mov
jae
add
stc
inc
leave
inc
ds
sbb
mov
sbb
push
call
dec
arpl
mov
gs
inc
cmc
and
dec
out
mov
outsb
std
nop
add
andb
lock
cmc
jo
xor
jnp
fwait
movsb
xchg
sti
xchg
jge
in
pop
fmulp
popf
pop
pusha
push
jne
pop
es
lret
jp
sahf
jl
mov
lods
sub
inc
leave
pop
out
xchg
or
jle
insl
inc
inc
lret
add
mov
dec
adc
xchg
sbb
pop
mov
scas
out
add
in
movsb
movsb
dec
inc
mov
xor
mov
cmp
ds
adc
call
cmp
pop
lret
push
rcrb
movl
jb
testb
mov
cmp
xchg
clc
jge
mov
cld
xor
lahf
sti
cmp
or
inc
jo
ffree
mov
sahf
cmpsb
xchg
pop
jnp
nop
push
aas
int3
iret
repz
dec
aad
pop
mov
dec
mov
adc
sahf
add
mov
leave
cs
out
repz
adc
fstpt
sarl
fucomi
inc
xor
into
mov
mov
dec
call
sub
bnd
inc
out
stos
push
xchg
data16
inc
jb
rorl
enter
subb
movl
dec
dec
jmp
adc
push
cltd
popf
jns
nop
jp
es
aad
shlb
inc
jmp
enter
ja
jbe
and
cmp
cmpsl
pop
clc
xorb
lds
fwait
adc
movaps
add
cmp
enter
repz
cmp
add
mov
fsts
xchg
leave
cld
mov
or
adc
into
movsb
pop
mov
cmp
or
pop
pop
in
imul
mov
pop
mov
sbb
jbe
xor
push
js
cmp
cmp
ret
jge
pop
rcr
xchg
mov
adc
out
and
pop
jne
xchg
xor
xchg
mov
mov
mov
outsb
sbb
cmp
ljmp
sahf
andb
xor
mov
mov
lahf
dec
push
sbb
and
in
stc
adc
pop
mull
nop
cmpsb
lods
cmpb
lret
mov
pop
pop
mov
xor
gs
mov
fldenv
lock
mov
or
pop
pop
xchg
das
lcall
pop
negb
xchg
aam
xchg
add
lret
imul
mov
bound
and
sarb
or
xchg
bound
push
fistpl
pop
xor
jge
pusha
movsb
dec
mov
ficoml
adc
sbb
lods
inc
incb
xor
sti
mov
jl
push
sbb
jle
lods
xor
lret
insb
in
mov
leave
cmpsl
mov
xchg
adc
sbb
jge
in
inc
xor
mov
mov
mov
insl
sbb
cltd
in
call
pop
dec
clc
gs
inc
xor
add
push
inc
jl
pop
dec
push
pushf
outsl
xchg
lret
pusha
xchg
loopne
jo
jb
pusha
adcb
adc
and
sub
cltd
je
sbb
sub
and
mov
pop
mov
push
rcrl
mov
call
stos
das
cmpsb
pop
ret
xorb
and
out
and
jnp
jmp
dec
sbb
pop
add
mov
inc
mov
icebp
call
test
jp
xchg
adc
call
jecxz
lcall
lds
shl
sbb
outsb
inc
xchg
mov
repnz
call
mov
fbstp
mov
pop
pop
pushf
lret
push
xorl
out
sub
push
outsb
scas
xchg
ret
cmpsb
adc
stos
in
jb
clc
aas
mov
icebp
add
dec
inc
add
xchg
pop
or
xchg
je
or
add
cld
fisttpl
add
movsl
mov
or
jo
adc
mov
push
pop
idivl
std
movups
int3
or
js
xor
inc
out
sbb
jno
fs
in
pop
cli
dec
hlt
cli
lea
aaa
jno
mov
jp
inc
pusha
or
add
mov
jle
cltd
and
imul
inc
jmp
dec
sbb
mov
cmp
and
daa
movsl
inc
insb
cwtl
and
insb
and
add
fstpt
fiaddl
loop
out
pushf
iret
pop
mov
test
cmp
decl
adc
xchg
push
pop
push
xor
das
cmp
outsb
inc
fidivrs
adc
xchg
and
ds
jne
adc
in
cwtl
ss
popf
and
adc
mov
jo
mov
inc
adc
aad
insl
jp
push
mov
push
dec
sub
es
mov
mov
cmc
std
mov
and
bound
subb
push
mov
xchg
push
jb
fstp
adc
cltd
mov
pop
sub
pop
jge
mulb
pop
or
lods
iret
sub
mov
sub
outsl
sti
icebp
lds
push
out
dec
mov
push
push
add
ficoml
jns
mov
xchg
and
pop
push
jmp
fistpl
inc
popf
cmp
push
fwait
jge
int3
inc
pop
rorl
lock
or
ja
sbb
repz
gs
or
add
or
pusha
add
or
bound
loopne
test
sbb
test
jbe
mov
dec
cmp
ljmp
aad
popf
clc
enter
jbe
dec
inc
sub
imul
xchg
fistpll
adc
shll
adc
jle,pt
mov
mov
mov
shll
jns
rclb
and
out
iret
pop
add
mov
mov
pop
mov
cmp
cmp
lds
testb
mov
cmp
aad
add
cli
xor
cld
aaa
test
mov
jecxz
xchg
jne
data16
jae
repnz
xor
pop
movsb
jne
lcall
mov
imul
push
adc
test
sub
not
dec
mov
sub
addr16
scas
jecxz
lock
xlat
or
stos
mov
cwtl
popa
mov
dec
dec
insl
adc
and
imul
dec
cld
mov
mov
lods
les
js
mov
movsb
pop
jecxz
test
movsl
mov
pop
data16
sti
xchg
ret
fimuls
daa
adc
inc
sahf
les
pop
jne
sbb
popl
inc
fisubs
push
mov
sub
cltd
les
in
and
and
sub
sbbl
jnp
jl
rcrl
add
cmpl
pop
jmp
sub
lret
xchg
mov
test
mov
fwait
movsl
cmp
in
int3
mov
ds
push
xchg
cwtl
in
in
sbb
repnz
out
pop
faddp
jge
jbe
cmp
ror
xor
cltd
test
test
lcall
outsb
jl
out
icebp
mov
dec
pop
loop
clc
dec
fiaddl
add
or
pop
jp
pop
sub
nop
in
call
test
pushf
or
adc
sbb
daa
test
xor
rcrb
mov
sbb
stos
dec
jecxz
push
inc
sub
or
add
cmp
cli
sub
insb
lret
xor
jmp
add
dec
pop
outsb
outsb
pop
jo
jle
in
pop
iret
in
aam
add
test
mov
iret
mov
inc
inc
out
push
fiadds
push
cmp
adc
notl
test
aam
xchg
test
jno
out
dec
loope
pop
jnp
fldcw
inc
fcom
xchg
imul
in
add
cmovp
jbe
ret
pop
imulb
jbe
mov
repz
inc
mov
cmp
mov
or
or
cltd
push
bound
cmp
test
js
and
jmp
pop
aam
jnp
aaa
dec
lahf
push
mov
xchg
dec
jg
insb
std
adc
pop
ss
cmc
or
mov
mov
and
ret
shlb
fidivl
mov
pop
mov
dec
aaa
cmpsb
in
repnz
xor
mov
dec
inc
xchg
sub
mov
xchg
adc
cmpsb
ss
xor
ja
cltd
push
es
bound
imulb
testb
stos
cwtl
mov
jae
call
xchg
into
repnz
outsl
xchg
mov
loop
cltd
movsl
ret
in
lret
mov
in
lea
add
test
cwtl
adc
lret
cmp
es
jo
jge
xchg
test
adc
js
fnstsw
xchg
xchg
les
int3
out
or
sub
rcrl
popa
sbb
pop
mov
lret
jge
stos
scas
iret
lcall
mov
mov
add
xor
je
imul
popf
sbb
jnp
lods
cmp
mov
addr16
adc
and
imul
ffree
push
rol
stos
and
aad
mov
je
jne
fs
pop
cs
data16
dec
dec
bound
dec
or
lea
fcoml
repnz
inc
sbb
cld
inc
xchg
xchg
stos
adc
cmp
sub
sarb
cli
adc
dec
sahf
push
stc
or
mov
repnz
sub
pushf
testl
mov
mov
xor
loope
imul
mov
xchg
test
sbb
push
jmp
cli
pop
ss
xlat
rcrl
mov
fwait
mov
push
pop
lret
sahf
xchg
out
pop
das
or
dec
inc
add
dec
jl
jbe
pop
or
xor
mov
pop
pop
cs
sbb
fs
les
xor
inc
cmp
mul
ret
mov
fdiv
jae
imull
add
cmp
das
push
or
xor
mov
and
fidivrl
ret
iret
lods
les
hlt
adc
xor
cmp
sbb
jp
out
xchg
push
xchg
popa
sub
add
mov
outsl
jle
jns
xchg
jmp
mov
ja
dec
rcrb
addr16
loope
mov
push
mov
out
xchg
adc
jg
imul
mov
push
aas
mov
and
xor
and
in
pop
inc
add
xchg
dec
or
inc
mov
inc
jmp
mov
or
ds
pop
add
sbb
jno
repnz
adc
mov
daa
fstp
pop
xor
imul
in
cmp
imul
enter
and
in
xchg
movsl
mov
data16
xchg
mov
sub
popa
fdivrs
mov
test
mov
ret
dec
cld
pop
movsb
add
daa
in
push
das
inc
sub
and
cltd
cmp
dec
pop
jns
jmp
mov
test
push
and
add
jns
cltd
push
dec
xor
push
leave
out
or
mov
test
dec
pop
inc
out
inc
xor
mov
jle
fcmovne
repnz
sub
xchg
ds
cmp
popa
xor
lret
outsb
int
cmpsl
inc
add
cmp
je
popa
andl
cmovbe
incl
call
xchg
dec
cmp
nop
xor
sub
addr16
xchg
ds
loope
in
loopne
gs
push
nop
adc
xchg
out
int
adc
lret
mov
dec
and
mov
jmp
std
cmp
mov
ja
pop
mov
adc
add
and
into
mov
cmp
aad
sysret
loop
jno
aaa
and
std
add
xor
jge
xor
stc
movsl
inc
jmp
inc
cmp
push
popl
repnz
jne
dec
inc
mov
add
mov
sti
scas
jmp
lret
mov
mov
pop
jnp
leave
mov
push
sub
sub
mov
mov
mov
shll
loopne
inc
mov
rclb
xchg
sbbb
notl
lret
jg
inc
pop
sbb
mov
data16
jns,pn
or
out
jbe
add
jns
pushf
fcomps
addl
sub
xor
ret
in
adc
stos
outsb
adc
js
push
mov
in
pop
stc
arpl
push
scas
in
jno
mov
xchg
pushf
push
inc
jg
fdivl
repz
cmp
testb
out
mov
inc
popl
negl
mov
dec
inc
in
mov
jns
in
xchg
mov
sub
popf
test
jle
xor
cmp
adc
xlat
dec
loopne
push
xchg
loop
mov
xor
pop
sbb
shl
data16
insb
out
inc
fistps
xchg
dec
or
mov
push
inc
lahf
mov
nop
fisttpl
cvtdq2ps
dec
and
and
xchg
inc
push
inc
bound
in
xor
ret
jns
sub
sti
mov
mov
mov
lret
or
pop
jg
xor
inc
sub
pop
ret
clc
or
pop
xchg
fnsave
jbe
rorl
pop
cmpsl
repnz
mov
bts
jne
sbb
sbb
xorl
cltd
pusha
test
faddl
dec
loop
rcl
testb
sbb
jbe
sbb
dec
push
lock
push
lret
mov
stos
lcall
into
xchg
dec
xchg
mov
pop
or
xor
push
iret
iret
jae
pop
dec
into
pop
shrb
repnz
hlt
into
int3
inc
xor
es
pmulhuw
push
push
add
push
cmp
xor
and
cwtl
cmpl
adc
add
imul
ja
loope
cld
adc
hlt
es
daa
or
xchg
popa
cwtl
loop
mov
loope
rcl
jb
mov
leave
ds
inc
std
cs
clc
pop
rclb
jnp
push
clc
cli
rcrl
fdivl
inc
and
fdiv
fwait
cmpl
jg
sbb
and
inc
lea
clc
mov
pop
stos
sub
push
stos
adc
mov
jl
jb
and
cmp
cmc
pop
mov
popf
mov
adc
xchg
test
or
sahf
lahf
stc
pop
mov
add
das
jge
movsl
xchg
jns
xchg
test
jecxz
pop
lds
dec
jge
popf
aam
or
ja
mov
data16
dec
jge
push
push
sbb
fldl
push
fistl
and
sub
and
dec
mov
cmpb
jbe
sahf
divl
pop
adc
les
outsl
cmp
sub
cmc
std
fidivl
repz
scas
shr
pop
pop
rcr
cwtl
test
mov
scas
clc
imul
push
mov
test
xor
movsb
pop
fdiv
stos
emms
jecxz
ja
mov
inc
jne
pop
sti
adc
aas
inc
mov
push
push
test
addr16
mov
inc
out
push
mov
std
movsb
faddl
sbb
or
clc
or
cmp
mov
jecxz
and
adc
dec
jno
addr16
pop
mov
and
jl
cld
xchg
pop
cmp
or
stos
ret
sbb
cmp
cmc
adc
adc
mov
shl
nop
clc
fcmovnb
push
add
add
mov
xor
sahf
jb
mov
fidivl
adc
jmp
or
int
xchg
stc
push
push
sub
mov
and
mov
push
fisubs
rclb
aam
ja
dec
in
repz
pop
out
xchg
cltd
stos
jnp
push
cmova
out
or
imul
jo
fs
mov
jl
cmp
mov
pop
push
xchg
lods
xchg
aad
rclb
repz
rorl
xor
ja
orb
sbb
xchg
jecxz
mov
mov
cld
js
cwtl
cmpsl
cmpxchg
stc
add
sub
pop
movsl
jmp
cmc
jp
push
adc
pop
dec
ret
loope
sbb
addb
outsb
jmp
mov
push
imul
mov
push
lds
inc
sub
mov
call
mov
mov
mov
mov
inc
pop
xchg
repz
jbe
out
add
rolb
bound
dec
inc
or
add
call
xchg
pushf
clc
xor
cmp
xchg
xor
test
xchg
cli
dec
andl
xor
mov
push
jmp
jmp
and
cmp
push
enter
pop
adc
xchg
or
mov
jecxz
clc
mov
mov
pop
fwait
add
int
test
outsl
adc
pusha
andl
adc
xor
cmp
mov
repz
popf
push
adc
pusha
sbb
pop
lock
repnz
jle
xor
imul
lahf
fists
jl
dec
jnp
mov
pop
push
push
mov
sbb
test
push
adc
mov
inc
adc
rol
leave
imul
mov
inc
daa
push
imul
test
mov
add
cmp
cli
pop
mov
xchg
cmpsl
and
das
push
push
daa
in
or
jp
dec
or
lret
dec
add
push
cld
xchg
sub
dec
jbe
mov
loopne
xor
fs
jg
int3
fwait
or
inc
mov
outsb
push
push
pop
std
mov
pop
push
dec
test
mov
cs
mov
sub
popf
popf
push
ror
dec
sbb
jo
repnz
mov
mov
pusha
xlat
mov
lea
sar
aaa
aas
sub
in
cltd
mov
dec
icebp
xchg
ret
inc
cli
jmp
data16
mov
mull
mov
xor
xchg
loopne
mov
jne
call
hlt
jno
iret
xor
aad
inc
std
cmc
aaa
call
arpl
and
loop
int
or
rcl
sbb
pop
push
fcmovne
lea
jne
loope
jb
sub
xchg
daa
and
pop
inc
push
sbb
nop
jo
and
xchg
repz
cli
lret
icebp
mov
lahf
push
xchg
gs
add
pop
xlat
imul
jbe
movsb
mov
xchg
icebp
gs
imul
jne
dec
or
pushw
xchg
inc
addr16
sbb
inc
mov
dec
insl
test
cmp
out
jmp
adcl
inc
push
cmp
mov
sbb
xor
sbb
cmp
add
andb
scas
in
xchg
jno
insb
lcall
call
scas
xor
mov
aas
lods
mov
in
in
pop
lods
jne
xor
dec
cmp
pop
lea
sti
div
getsec
and
sbb
pushf
cmp
es
imul
fcmovb
xchg
pop
out
xor
andl
mov
dec
int3
xchg
scas
add
leave
push
push
outsb
cmpb
jle
call
mov
add
in
cmp
cli
out
leave
insl
jle
adc
out
inc
add
fnsave
aaa
div
sub
mov
cmpsl
addr16
je
in
and
mov
gs
xor
cmp
dec
dec
lods
in
je
push
js
in
add
out
mov
dec
jbe
sti
xor
push
cmp
add
in
mov
sbbl
cli
jl
cmc
mov
adc
adc
jnp
ficomps
or
mov
cmc
mov
test
daa
inc
push
push
xor
jo
lods
sub
inc
bound
jbe
add
xor
stc
pusha
je
js
dec
lcall
fmuls
mov
adc
lret
push
mov
cli
pop
addb
aaa
jne
push
rclb
xchg
cmp
sbb
insl
inc
push
iret
mov
repnz
test
add
ja
std
xchg
cmp
cmp
dec
inc
int
lods
imul
fidivl
aaa
loop
outsb
std
xor
pop
inc
dec
loop
ljmp
push
adc
adc
cmp
rolb
adc
jb
loopne
movsl
push
inc
iret
jmp
cmp
jle
and
sub
fnstenv
aaa
repz
rorl
andl
mov
jmp
dec
enter
lahf
add
jo
push
rclb
fwait
add
mov
andb
movsb
lret
xchg
je
jbe
or
cwtl
dec
insl
mov
sti
fs
adc
xchg
std
ja
mov
pop
addr16
mov
jecxz
ss
cwtl
hlt
cltd
xchg
addb
mov
and
mov
push
dec
test
or
lahf
jl
sarl
testl
xchg
adc
mov
adc
mov
call
int
and
insb
mov
sbb
inc
dec
jp
dec
xor
loopne
roll
mov
inc
fstpt
jo
mov
pop
inc
sub
xor
jge
mov
xchg
inc
mov
cmpsb
add
repnz
adc
test
cmpsb
xor
shrb
adc
popa
adc
jnp
out
or
scas
nop
adc
pop
adc
cltd
xchg
jmp
mov
les
inc
incl
lods
jbe
xor
test
or
mov
push
or
and
shll
jl
or
lds
mov
inc
or
xor
insb
enter
xchg
push
cmp
inc
push
inc
push
ror
jb
sbb
cwtl
cmp
flds
gs
xlat
addb
and
jl
ret
jg
mov
push
inc
mov
push
mov
or
incl
sbb
mov
dec
ds
std
nop
stc
test
mov
mov
and
lods
mov
add
int
lea
mov
jg
es
jmp
outsb
test
xlat
jo
clc
test
dec
fildl
out
iret
mov
movsl
mov
imul
lods
stos
sub
pop
icebp
cmpsl
aad
add
rcr
xor
fisttpll
cmc
lock
dec
adc
push
mov
test
mov
mov
adc
repz
lock
in
mov
fisubrl
inc
int3
movsb
mov
adc
sub
mov
mov
xchg
leave
xor
and
push
cwtl
lret
push
lock
mov
pop
gs
add
mov
mov
rcr
cmp
fmul
add
ffree
inc
je
mov
fwait
call
push
outsl
cs
in
push
or
pop
je
jae
stos
xchg
sub
fdivrl
sub
hlt
sub
test
cli
push
sbb
and
jbe
pop
fisubs
jecxz
in
insl
ret
cmp
xchg
inc
cmp
mov
daa
mov
jmp
push
dec
jge
fisubl
das
shll
xchg
inc
rol
cli
xor
enter
pop
dec
adcl
out
jbe
arpl
push
mov
fcompl
xchg
mov
push
repz
pop
hlt
add
out
push
imul
pusha
sub
lock
sahf
lret
sti
dec
hlt
pop
pop
or
ret
adc
mov
inc
loop
jle
outsb
or
lods
pop
rorb
dec
mov
fwait
sub
aad
push
pop
xchg
mov
sbb
cld
xorl
push
sbb
js
xchg
inc
xor
jbe
jge
jbe
sub
ret
mov
cld
jo
ficompl
adc
in
mov
pop
mov
mov
push
push
pop
mov
jns
call
aaa
les
dec
push
and
es
mov
jbe
jb
jmp
adc
into
shrb
int3
in
mov
pusha
cwtl
cmp
orl
sbbb
or
movsl
sbb
pop
popa
idivl
jb
pushf
inc
and
mov
loop
scas
adc
cmpsl
mov
movsb
lods
xchg
pop
out
cmpl
jbe
shl
dec
mov
cmp
jns
mov
jb
ds
test
dec
mov
inc
xor
aas
das
rcrb
popa
jge
ljmp
in
loop
adc
push
push
jecxz
dec
cld
add
test
inc
shrl
cmp
aam
in
sub
mov
int3
lods
in
fisttpl
xchg
movsb
loop
push
inc
data16
cmpb
sbb
jae
mul
pop
das
push
mov
cmp
sbb
cmpsb
mov
mull
js
xchg
pop
xor
aaa
stc
mov
mov
pushf
inc
adc
pushf
xchg
adc
insl
in
ficoms
testl
mov
cmpb
mov
xchg
push
inc
lahf
es
cmc
aad
mov
fimull
sub
dec
jge
mov
xchg
jecxz
mov
mov
adc
cmp
sbb
xlat
add
inc
mov
sti
pop
adc
mov
mov
inc
ja
or
jle
push
insb
xor
sub
aas
add
xchg
pop
divb
shlb
jo
mov
adc
sarb
adc
sub
pop
push
inc
push
add
sub
int
ficomps
test
out
jmp
pop
arpl
xchg
mov
mov
jp
clc
js
cmp
jmp
jo
rcl
jnp
int3
push
sbb
sub
or
rorb
iret
sub
cli
pushf
sbb
pusha
push
loop
mov
das
lcall
sub
adc
je
rcll
pop
ret
stos
test
mov
push
mov
imul
cltd
sbb
movsl
addr16
adc
inc
pop
movsl
insb
das
insl
insb
mov
dec
iret
pop
push
insb
ret
movsb
push
jl
or
add
pop
andb
jp
cmp
jp
lret
sbb
repz
sbb
out
cmp
mov
outsl
scas
push
jno
bnd
mov
add
xor
adc
stc
dec
sub
xor
xor
add
mov
lahf
aaa
inc
ljmp
es
pushl
and
cmpsb
mul
stc
movsb
adc
sbb
cmp
les
loopne
pusha
les
out
jbe
leave
das
call
sbb
dec
dec
incl
mov
das
add
mov
shrb
and
ds
inc
cwtl
pop
dec
addl
popa
ss
cmp
jmp
fiaddl
out
std
xor
inc
movsl
jae
out
sub
jp
xor
jmp
cmp
out
jg
mov
arpl
sarb
cwtl
lock
mov
pop
dec
sub
mov
psrad
sarl
repz
push
jge
test
xor
fstps
dec
lea
mov
inc
jb
in
pop
xor
in
inc
push
jecxz
fsubp
inc
dec
mov
dec
add
sti
push
aaa
sbb
inc
sub
cs
cmc
pop
nop
stos
xchg
ds
sub
xor
dec
loope
jp
jae
jnp
ficoml
scas
hlt
sbb
arpl
jge
test
add
jno
and
sub
jmp
nop
dec
xor
call
out
sahf
lret
movl
jp
dec
mov
pop
jne
iret
and
mov
das
jbe
pushf
ljmp
stos
arpl
cmpsl
roll
mov
push
aad
pushf
mov
and
dec
imul
lahf
pop
jle
addr16
pop
xor
mov
sahf
aaa
lret
jecxz
xorb
out
or
lahf
aaa
cwtl
jno
push
stos
add
xchg
xchg
dec
push
cmpsb
movsb
push
adc
adc
std
ret
out
mov
std
lods
ret
cmp
ficomps
adc
pop
cmp
xchg
shl
jno
inc
xchg
jecxz
mov
stos
xor
push
push
test
jo,pt
cs
sub
and
cltd
and
xor
dec
movsl
sbb
lea
or
fwait
jb
dec
lret
icebp
pop
mov
ret
mov
cli
pop
gs
das
shrb
mov
ds
in
mov
lea
int3
inc
xor
jecxz
cmpsl
add
add
add
jmp
js
cmp
aad
xchg
sti
subb
mov
jmp
sub
cltd
sbb
sub
mov
xor
lret
add
mov
loop
mov
push
jne
sbb
adc
mov
add
cmp
imul
popa
adc
mov
push
repnz
popf
ljmp
leave
dec
xlat
xchg
jns
lock
pop
jmp
stc
repnz
adc
daa
adc
push
stc
dec
test
push
jge
mov
jmp
xlat
dec
inc
push
dec
and
push
scas
shrl
cltd
cli
mov
out
bound
inc
je
cmp
and
lods
push
mov
cmp
xor
pushf
gs
adc
inc
mov
bound
mov
jge
jp
add
stc
push
push
inc
into
push
adcb
cmpsb
adc
jno
daa
out
stc
inc
sub
out
adc
dec
or
pop
sub
ret
es
push
out
loop
and
cmp
push
in
xchg
xor
orb
and
ret
mov
adc
out
stos
test
and
lret
pop
jno
mov
push
xchg
sbb
add
mov
pusha
xchg
outsl
inc
adc
sub
pop
cli
cwtl
push
cs
js
scas
xchg
jno
stc
clc
cltd
std
nop
inc
mov
mov
cmp
and
shrl
push
or
mov
loop
jb
xchg
pop
xor
pusha
hlt
xchg
dec
repz
mov
lret
popf
or
xchg
or
cmp
sti
push
push
rsqrtps
repnz
pop
xchg
aaa
sbb
cli
movb
xor
dec
xor
pop
lcall
popa
dec
inc
mov
pop
insb
pop
jge
fcmovnbe
and
add
pop
dec
inc
movsb
std
and
outsb
add
inc
mov
xor
lret
or
mov
cld
lea
in
ds
faddl
pop
into
pop
pop
push
inc
xlat
mov
pop
jg
inc
and
loop
push
imul
lahf
pop
dec
push
das
push
fnstenv
loope
adc
add
pop
rclb
out
xchg
daa
xor
mov
cmp
icebp
sub
pop
mov
popf
movsl
fcmovnb
pop
xor
arpl
sbb
insb
dec
jbe
mov
sahf
loope
dec
mov
push
push
add
sub
inc
fists
mov
jg
into
fnstcw
faddl
xchg
dec
pop
jmp
sub
loop
loop
mov
js
aas
sub
jb
jne
lret
jno
lods
lahf
scas
push
xor
jo
cmp
xor
xchg
ficompl
add
dec
mov
cmpsb
pop
lcall
mov
sbb
scas
add
xor
push
sbb
in
pop
shlb
cwtl
push
mov
xor
cltd
cmpsb
aaa
mov
nop
dec
xor
stc
inc
sbb
mov
jp
call
int3
aas
insl
and
fidivrs
fcoms
inc
jb
add
jg
shr
mov
into
cli
stos
in
cltd
ret
jnp
mull
mov
pop
mov
fdivrs
out
push
xchg
sbb
stos
mov
scas
sbb
test
movsb
and
xlat
cs
jo
ja
in
cmp
and
loop
xor
cmp
and
out
sub
xor
mov
lds
fidivrs
test
add
insb
ja
push
pushf
aaa
int3
and
mov
xchg
test
jle
add
loop
mov
test
xor
insl
inc
stos
ja
mov
jle
xchg
push
and
and
loop
xor
pop
arpl
adc
or
add
insl
sub
int
mov
cmp
faddl
adcb
ss
dec
mov
dec
leave
int3
mov
dec
iret
cmp
pusha
mov
ss
mov
shlb
leave
daa
enter
out
sahf
jnp
scas
lds
fstps
mov
hlt
pop
mov
mov
jb
dec
vmovdqa
sbb
cmp
dec
cmp
test
orb
push
jg
adc
pop
mov
aad
sahf
mov
sub
shl
inc
data16
jae
or
push
test
cld
and
xor
sahf
movzwl
test
outsb
cwtl
fnstcw
sub
cmpb
mov
jb
and
loop
cmp
mov
insb
mov
dec
xchg
jl
outsb
cmpsl
adc
mov
outsb
mov
fabs
dec
and
push
jl
imull
dec
mov
icebp
ds
lock
subl
sub
addr16
xchg
pop
mov
mov
pop
dec
or
add
incl
es
ss
out
cmp
add
pop
jo
scas
dec
push
push
out
inc
stc
movsb
dec
mov
add
jl
jb
and
into
mov
stos
mov
std
pop
mov
mov
aad
out
scas
sbb
fmul
ret
fwait
mov
cmp
ror
adc
jmp
xorb
test
add
or
sub
push
clc
jge
push
mov
and
xchg
imul
lock
xchg
inc
out
mov
pop
stc
sbb
mov
in
sbbb
or
out
cld
sub
pop
sbb
mov
mov
lea
mov
and
adc
mov
dec
mov
movsl
aas
jmp
jecxz
cmc
into
sub
inc
rorb
pushf
jne
cmpl
or
push
lods
sub
dec
cltd
les
dec
arpl
popl
out
cmp
sti
cli
mov
movsl
pop
in
xor
add
bound
mov
movl
jae
rcrw
mov
enter
and
mov
ret
outsb
nop
out
movsb
mov
cwtl
inc
aam
adc
repz
jmp
gs
lods
stos
iret
adc
out
and
push
fnstsw
lds
test
mov
fdivrl
fisubrs
cmpsb
xlat
ds
push
xchg
stos
test
xor
rorl
pop
cmp
adc
jb
inc
jg
adc
mov
xor
mov
push
rcrl
ja
ret
pop
mov
add
clc
aaa
adc
pop
pop
push
repz
enter
fmulp
mov
lea
ror
scas
pop
add
insl
rcrb
jg
subb
sbb
and
mov
ja
int3
movsl
pop
push
lret
mov
and
ljmp
aam
push
stc
lock
mov
ss
in
pop
mov
pop
xchg
stc
adc
fstl
xchg
icebp
push
dec
pop
loopne
push
mov
nop
movsb
xchg
and
sahf
xchg
mov
and
fiadds
dec
fisubrs
pop
pop
dec
cmpsl
mul
mov
and
cmp
mov
mov
and
popa
dec
cmp
push
cs
push
or
ss
jmp
enter
inc
movsl
mov
psraw
mov
sub
test
gs
ret
cmpsb
rolb
stos
pushf
clc
inc
ret
mov
sbb
adcl
jge
mov
sub
add
push
adc
jno
xchg
mov
fidivs
xchg
or
inc
mulb
icebp
test
std
inc
cmp
jmp
sti
cmp
inc
pop
and
jbe
bound
mov
push
mov
add
mov
out
es
mov
push
cs
inc
jg
jle
xor
rorl
scas
sbb
imul
mov
stos
inc
rcl
notb
jecxz
aam
fidivs
hlt
jae
arpl
inc
add
imul
sarb
lds
test
inc
and
jno
add
test
mov
out
mov
adc
mov
rcll
sub
std
les
or
inc
fsubrl
jnp
pop
ja
scas
sbb
mov
inc
mov
cmpb
insb
das
push
add
mov
in
movsb
out
idiv
fistps
test
xchg
gs
cmpsb
mov
and
sbbb
cltd
cmp
jno
xchg
and
aad
lods
push
mov
loopne
mov
rcl
daa
es
daa
mov
cmpsb
mov
add
hlt
mov
and
and
cmp
outsb
std
mov
fwait
cmp
and
or
adc
fildll
sub
push
leave
mov
cmp
aaa
or
and
leave
les
pusha
andl
loop
adc
lea
mov
mov
dec
inc
pop
shlb
push
in
xor
out
jno
cmpl
movsl
pusha
add
pushw
mov
push
scas
cmp
lret
jmp
jo
jg
outsl
fidivl
movsb
icebp
sub
push
mov
roll
mov
vandnps
scas
mov
pop
lds
push
imul
sarb
push
decl
stos
cs
shlb
pop
int
add
shl
test
mov
repz
popa
mov
mov
jge
pop
rcrb
adc
int3
pop
push
mov
pop
cmp
inc
mov
push
pushf
adc
xor
jecxz
test
ret
cmp
out
bound
cmpsl
pop
les
icebp
scas
mov
int
and
jp
outsb
xor
add
adc
jns
pop
pusha
sub
popf
int
in
inc
incb
fsts
sahf
loope
pop
cmpb
mov
repz
inc
orb
push
outsl
or
test
out
mov
icebp
dec
dec
ret
pusha
outsl
ss
gs
cmp
push
jle
movsb
aas
clc
cwtl
sarl
dec
test
jae
mov
ja
mov
push
fadds
nop
test
ss
push
loopne
cltd
je
jge
jae
insb
cs
sbb
sub
inc
mov
jb
jns
add
adc
idiv
or
and
mov
add
dec
into
xor
sbb
jmp
ficomps
xor
imul
dec
jo
xor
mov
pop
mov
btr
sahf
adc
arpl
iret
xor
pop
add
sti
adc
mov
cmp
frndint
or
out
aaa
ret
and
inc
mov
pop
scas
fsubs
addr16
adc
xchg
and
xchg
sbb
push
imul
popa
xor
mov
pop
addb
and
sub
imul
dec
test
fnsave
stc
cmp
sbb
and
scas
ffree
fldenv
cmp
jo
sbb
push
lock
outsb
aam
xchg
gs
iret
add
fxsave
imul
int
mov
insl
movsl
jecxz
cmp
aam
xor
mov
pushf
inc
pop
adc
outsb
xor
daa
shrb
stc
sbb
in
ljmp
sbb
scas
push
lock
jne
repz
and
fucomip
mov
dec
push
mov
push
in
push
ret
jno
aam
call
test
in
lods
imul
push
rcr
ds
xchg
insl
pop
fisttpl
xor
cmpsl
sets
mov
add
xchg
pop
lods
push
dec
adc
arpl
push
xlat
push
sub
cld
xchg
pop
insl
push
out
mov
cltd
ss
jp
add
or
int
sub
out
mov
adc
addr16
mov
or
outsl
je
jne
mov
sub
and
insl
in
jbe
ds
or
popa
imul
pop
in
cmpsb
mov
es
inc
cs
in
cs
mov
dec
cld
and
int
adc
pop
scas
inc
popf
test
mov
mov
mov
stos
mov
sub
jp
daa
outsb
cmpsb
iret
lret
stos
cs
cmp
or
cmp
loopne
dec
fistl
sbb
ja
jns
ret
and
sbb
cltd
sbb
push
roll
add
cmpsb
div
pop
sbb
sbbb
enter
cwtl
push
cmpb
add
in
xor
mov
xchg
xchg
push
push
cmpsl
sarb
mov
xchg
sbb
arpl
mov
pushaw
rol
imul
imul
insb
inc
push
mov
mov
lock
xchg
jle
popf
pop
mov
jmp
das
push
outsb
xchg
cli
pop
or
dec
mov
clc
adc
mov
dec
push
sub
popa
and
in
fists
add
stc
movsb
lea
in
dec
repz
repnz
xlat
cwtl
out
cwtl
jnp
stc
les
pop
adc
idiv
out
gs
pusha
xor
mov
pop
pusha
inc
in
popf
lods
les
sub
ret
xchg
into
stos
mov
loop
pop
xor
inc
add
movsb
jp
shl
in
js
es
or
fists
inc
fucomip
adc
sub
lea
mov
test
dec
fs
pop
and
lods
mov
inc
lock
xchg
setne
fbstp
push
dec
jo
stos
push
bound
sahf
cmp
jge
add
and
push
test
adc
push
call
mov
mov
pop
loopne
sbb
sub
into
or
push
repz
addr16
inc
mov
adc
in
test
sub
xchg
pop
out
add
scas
mov
xchg
adc
fcoml
mov
push
cltd
jnp
sbb
or
je
dec
add
lods
addb
pop
push
dec
push
jge
inc
into
bound
jnp
fisubrs
pop
jbe
pop
mov
lcall
xor
jecxz
clc
add
and
dec
insb
cmp
mov
inc
dec
pop
adc
ficomps
sub
xor
out
rcl
mov
mov
jp
jmp
in
bound
in
aaa
jns
mov
pop
cltd
and
in
jmp
lret
lahf
or
aas
fimuls
sub
dec
aaa
daa
movsb
ss
lods
loopne
cmp
mov
fcmovb
cmp
jge
mov
out
ds
dec
cmp
xchg
cwtl
add
jns
pop
mov
gs
sti
into
ret
out
clc
data16
js
xchg
ss
leave
push
push
pushf
adc
mov
add
push
jbe
cli
fstl
movsb
pop
in
add
mov
xor
std
jg
mov
pop
jno
xor
inc
lahf
sub
jno
jo
adc
cmc
les
or
mov
sbb
inc
int
push
sub
int
fisubrl
ljmp
xor
pop
lret
adc
clc
lods
jae
lret
mov
pusha
push
sub
push
cmp
out
xchg
mov
push
fsubl
sbb
cmp
mov
cmp
push
and
jnp
mov
jge
xor
inc
add
dec
push
cmp
scas
imul
iret
loop
sbb
cmp
leave
jp
movsb
stc
pop
sub
incb
push
inc
test
sub
subb
aas
sub
pop
push
pop
xchg
fsub
pushf
adc
push
movsl
lds
fidivl
push
jp
es
cltd
jb
dec
cmc
fidivs
mov
std
sbb
jns
insl
sti
lea
add
jno
push
cmp
mov
addl
jl
mov
push
call
pop
in
adc
and
test
filds
adc
fnstcw
popa
shlb
push
xor
icebp
add
adc
not
push
aad
xchg
dec
js
adcb
pop
cmp
sbb
dec
int
xlat
addr16
fwait
popa
push
xchg
insl
ret
out
sbb
or
jl
movsb
aas
dec
imul
das
mov
stos
jno
jno
in
test
out
mov
not
mov
leave
jge
ret
gs
pop
push
xchg
mov
jmp
push
mov
orl
push
insl
out
sarb
or
sbb
lock
jnp
mulb
lds
mov
daa
data16
dec
xchg
or
mov
arpl
mov
push
xor
xor
pop
mov
pop
inc
call
stos
fistl
xlat
inc
jae
stos
stos
fs
adc
adc
sbb
mov
cwtl
mov
mov
jecxz
sahf
pop
arpl
mov
fucomi
inc
mov
mov
cmp
mov
dec
mov
mov
dec
sbb
push
xchg
jns
mull
insb
jb
std
and
nop
xor
sub
sub
lods
adc
adc
and
mov
lcall
lret
mov
iret
jns
or
rcr
mov
adc
dec
cmpsl
dec
ljmp
outsl
iret
mov
mov
and
xor
stc
add
rorb
aas
test
or
bnd
xor
fbld
jno
repnz
rorb
ds
sbb
arpl
jnp
int3
pop
andl
aaa
jecxz
mov
fs
push
aam
imul
outsb
push
loopne
fildl
cmp
xchg
dec
xor
cmp
add
xchg
out
cmp
out
lret
outsb
mov
push
pop
lcall
mov
inc
les
push
fwait
outsb
outsb
sbb
dec
or
push
ret
sbb
or
sbb
test
fldt
xchg
cmp
jbe
and
popf
jmp
jle
cmpsl
in
aas
imul
arpl
mov
and
icebp
or
sahf
dec
mov
push
pusha
mov
gs
lret
ds
fdivs
fdivl
pop
mov
mov
mov
popa
insl
xor
sub
mov
faddl
xchg
pop
dec
and
push
mov
mov
xor
out
shll
cmp
std
inc
push
fidivrl
pop
mov
mov
dec
inc
sbb
ljmp
sub
mov
lret
loop
add
or
cltd
dec
and
cld
cmp
sbb
sbb
dec
pop
and
fistpl
push
push
and
sbb
decl
int
aam
adc
out
push
jmp
test
nop
mov
xorl
test
pop
mov
cmpsb
jno
dec
xchg
iret
xor
and
loopne
scas
xchg
jno
cmc
mov
dec
mov
jge
mov
xor
sbb
sub
popf
jnp
clc
pusha
sub
push
lret
imul
pop
add
mov
mov
inc
pushf
jmp
push
stos
jns
sbb
cmpsl
mov
iret
daa
clc
sti
hlt
push
lods
add
fwait
sub
inc
sub
data16
mov
dec
xor
add
popf
inc
repz
rcl
and
in
inc
inc
sbb
adc
out
cmpsl
jle
dec
sahf
shll
daa
add
mov
pushf
ret
jl
mov
sbb
jo
movb
xor
dec
movsl
cli
outsb
sub
stos
js
lods
dec
cmp
or
sti
inc
jno
je
adc
mov
inc
push
pop
in
addb
push
or
and
popl
mov
scas
sti
clc
les
lds
push
loope
jno
fbld
pop
std
mov
stc
inc
dec
push
dec
inc
ja
aad
pop
call
loope
inc
aad
dec
adc
cli
dec
xchg
dec
dec
arpl
and
cmp
push
pop
fists
pusha
hlt
rcll
sbbl
xchg
sti
sbb
loop
mov
cli
repnz
lds
insl
add
mov
mov
jle
sub
fidivrs
xchg
mov
stc
inc
outsb
or
mov
test
test
shr
xchg
push
push
xchg
ret
filds
sbb
mov
cmp
les
xchg
add
cmp
sbb
lea
sub
fnstenv
dec
mov
push
pop
inc
xchg
test
jg
sub
and
outsb
push
inc
xor
daa
icebp
loop
inc
xchg
sarl
mov
or
inc
jno
in
mov
aad
lcall
into
inc
push
xchg
sub
push
adc
adc
add
push
cmp
push
push
movsl
and
popf
pop
sub
scas
add
and
and
call
icebp
xchg
fcompl
cmp
inc
push
movsl
rcl
sub
out
push
dec
jo
jns
cmpsb
pop
mov
jb
or
jl
and
je
jns
divl
out
mov
shl
pop
xchg
mov
jg
pop
fisttpll
imul
lods
call
xchg
leave
repnz
pop
cmpl
inc
jecxz
add
xchg
data16
inc
pop
inc
push
test
js
aas
adc
iret
imul
outsb
xchg
cwtl
xor
bound
mov
inc
lods
xor
xor
loopne
das
mov
cmp
int
push
mulb
bound
fisttpll
xchg
sbb
jo
lcall
int3
dec
outsl
push
mov
out
mov
movsl
inc
rcrb
xor
adc
cmp
or
cmp
or
js
mov
pop
lds
in
and
popa
mov
pop
mov
call
lcall
and
outsb
bnd
test
jnp
xchg
stos
mov
repnz
roll
xchg
outsl
lock
fpatan
les
aam
xchg
pop
inc
pop
dec
xchg
push
mov
push
pop
fs
xchg
mov
xchg
mov
leave
pop
fcmovnu
dec
clc
xchg
mov
and
xchg
das
das
mov
or
iret
and
push
push
mov
ja
fsubrs
or
js
cli
jecxz
arpl
dec
lods
xchg
popa
push
jne
push
popf
mov
mov
jle
sahf
mov
mov
cmp
loopne
or
mov
std
imul
fists
das
dec
lea
lock
mov
imul
sub
mov
push
rcrb
out
pusha
pop
and
dec
in
stc
dec
test
inc
push
repz
leave
sbb
popf
inc
xchg
sahf
adc
test
int
hlt
pop
mov
and
out
pop
into
icebp
pop
decl
fwait
and
dec
cs
cmp
insl
into
jae
addb
pop
mov
xchg
lret
mov
xor
inc
mov
popa
push
xchg
mov
mov
mov
pop
mov
sub
lock
dec
and
sub
test
mov
or
jp
insl
mov
rorb
lahf
mov
mov
mov
mov
or
mov
add
repnz
leave
pushf
lds
aas
mov
mov
in
lods
out
or
pop
mov
dec
jmp
fstps
imul
jo
icebp
and
xor
clc
in
fisttps
outsb
scas
nop
aas
add
inc
enter
push
mov
jno
add
outsb
xlat
mov
insb
sub
mov
push
scas
mov
mov
jno
cmpxchg
or
pop
scas
imul
mov
xor
cmp
jl
add
and
pop
notb
jns
lcall
repnz
jle
adc
push
lret
xchg
icebp
xchg
test
push
add
orb
bound
cld
cmp
add
ja
and
jl
fsubrp
push
mov
repz
mov
leave
js
jecxz
pop
push
pop
test
mov
sub
iret
in
pop
pushf
jae
imul
loope
out
mov
lock
and
and
mov
dec
daa
sub
jmp
add
test
and
jb
fwait
cwtl
aaa
insl
lock
js
movl
loope
rol
loop
call
lods
xchg
lret
fisubrs
mov
push
or
adc
loope
cmpsl
gs
or
ss
movsl
movsb
lcall
sbb
mov
shll
insl
add
jbe
pop
das
inc
movsb
or
movsl
je
repz
fsubl
adc
or
inc
push
stos
ret
fs
push
mov
pusha
test
cwtl
imul
jl
jl
cmp
cltd
jl
sbb
sti
lret
sub
rcrb
jnp
icebp
ret
sbb
xchg
xchg
inc
divl
adc
mov
mov
mov
adc
dec
and
sub
test
jno
movsl
or
inc
adc
mov
add
inc
sbb
adc
insl
xchg
push
and
adc
nop
jnp
mov
orl
mov
jno
lock
decb
mov
fnstsw
adc
ja
push
movsl
aaa
fwait
jge
inc
push
leave
jno
sub
ja
add
addr16
leave
je
inc
stc
ret
inc
mov
lock
fimull
dec
lea
stos
and
sti
jae
adcb
pop
jns
adc
das
shlb
in
roll
cmp
aaa
push
ret
pop
push
cwtl
pop
test
es
fstps
mov
loopne
mov
mov
shll
or
loop
mov
mov
rorl
ja
pmulhuw
cld
aaa
mov
lahf
or
cmp
scas
cmp
ret
sub
fsts
xchg
mov
jnp
and
ljmp
sub
notb
dec
andl
xor
das
sar
stc
xor
ret
aam
in
jecxz
int3
mov
daa
fadd
dec
push
mov
mov
push
jne
dec
jns
mov
pop
call
in
fsubrs
loop
daa
shlb
sbb
xchg
cmc
push
fadds
mov
fistps
or
test
fcmovne
mov
mov
mov
xor
pop
clc
push
cmp
xor
add
sbb
int
hlt
lret
push
push
mov
cwtl
arpl
es
push
fsubl
cltd
cmp
es
sub
xchg
shr
rclb
pop
sub
mov
pop
mov
adc
mov
outsl
xor
cmp
xor
fwait
add
in
mov
add
or
cwtl
xor
and
js
sbb
aam
daa
sbbb
adc
jmp
adc
adc
mul
fs
sbb
roll
call
or
mov
mov
ret
fstpl
enter
cld
push
imul
icebp
sbb
cwtl
inc
clc
push
xor
fmull
or
data16
dec
jno
mov
add
mov
mov
and
xchg
into
and
mov
or
dec
test
push
les
pop
ja
pop
ds
xor
push
icebp
dec
xchg
call
sub
stos
mov
rorl
jbe
das
push
shlb
mov
jnp
jg
add
mov
out
or
fildl
push
loopne
mov
inc
test
insb
data16
adc
push
gs
and
test
sbb
inc
pop
push
repnz
push
mov
or
scas
imulb
pop
inc
mov
jle
jg
or
outsl
repnz
ret
cmp
rcll
cmp
mov
push
xor
sbb
push
addr16
sti
cld
mov
test
mov
jecxz
cmp
cmpsl
mov
aam
ffree
test
out
pop
mov
dec
jp
xchg
mov
mov
into
ret
stos
and
hlt
pop
fnsave
pop
xchg
and
fdivrs
add
jae
mov
sbb
and
inc
loope
enter
outsl
in
lea
jle
repz
fwait
insl
pop
pop
les
sbb
xor
mov
lock
lea
cld
inc
out
in
jle
mov
xchg
sub
nop
push
jnp
xor
or
sbb
insl
out
jp
pop
mov
add
adc
ret
sbb
movsl
sti
pop
mov
sbb
mov
mov
je
mov
or
pop
cwtl
mov
and
testl
fdivr
lods
aam
inc
cmp
arpl
mov
loopne
mov
cld
addb
mov
popa
or
sub
dec
dec
fnstcw
cmc
mov
mov
pop
mov
enter
les
scas
fcoms
fnstenv
sbbb
test
mov
cmp
sub
inc
dec
jg
sbb
jge
jg
popf
push
jge
pop
inc
pop
test
adc
mov
jne
stos
inc
cmc
js
jge
push
fwait
idivb
inc
and
inc
call
cmp
cltd
mov
lahf
iret
popa
and
and
pop
test
lea
cmpsl
out
jg
inc
inc
and
andl
sub
jo
repnz
lret
cld
rcll
mov
mov
fnsetpm(287
pop
jp
data16
cmp
int3
add
sub
push
imul
movsl
mov
xor
fs
mov
or
mov
dec
imul
das
out
dec
mov
scas
push
and
adc
aad
mov
pop
sub
push
jl
mov
mov
add
imul
sti
fisttps
mov
lahf
ret
push
je
ljmp
or
bound
ficoms
cld
mov
flds
cmp
cmp
and
setae
aaa
out
push
sbb
addr16
add
mov
insl
frndint
vfrczss
movl
test
mov
inc
pop
int
daa
mov
xor
adc
add
add
sub
not
jno
jge
xchg
push
cs
xchg
out
jle
leave
ljmp
jne
int3
cmc
push
movsb
cmp
sbb
jg
sbb
xchg
mov
lods
jp
aaa
sti
jae
xor
adc
sbb
pusha
cmp
ret
and
int
int
xchg
pop
pop
push
stos
push
and
jbe
pop
loope
dec
inc
lea
xor
or
out
ljmp
dec
sub
popa
test
sbb
push
cmpl
push
push
cmpsl
xor
scas
js
jno
dec
xchg
mov
mov
jge
lret
cmp
or
clc
pop
shr
push
out
pop
cmp
cld
fldt
xor
insl
inc
mov
call
in
push
loop
inc
xchg
insl
mov
fwait
xor
jnp
add
hlt
pushf
decl
gs
dec
xor
pop
push
or
add
push
add
xchg
mov
popf
sti
popf
and
add
pop
js
push
rclb
push
addr16
pop
cltd
aam
jbe
repnz
stc
dec
jmp
in
ret
and
out
inc
push
and
out
imul
mov
test
push
push
test
xorl
sbb
sbb
lods
jo
sub
loopne
xchg
add
mov
out
cmp
sbb
call
pop
push
stc
mov
jb
sbb
mov
je
push
mov
jae
xchg
push
cmp
bound
sub
push
pop
sub
daa
outsl
loopne
clc
test
xor
cmp
sti
scas
rcll
mov
mov
mov
dec
fldt
lret
leave
add
jle
jle
mov
cmpsl
cwtl
jnp
dec
test
lcall
fisttpl
or
sub
neg
pop
cmp
fisubs
push
sti
push
fcomip
cltd
and
inc
aad
fwait
aam
xlat
pop
xor
outsl
sbb
xchg
sarb
ret
test
adc
sbb
imul
jg
cmp
mov
cmpsb
or
aam
dec
jl
cmp
icebp
jmp
fisubl
jecxz,pn
es
mov
xchg
je
xchg
bound
push
sbb
sbbl
and
bound
test
cltd
loopne
jp
rcr
sub
clc
adc
sub
fdivp
outsl
push
push
std
mov
pop
mov
xor
js
sbb
mov
lods
adc
xchg
in
cmc
xchg
insl
cmpsl
sub
lret
test
or
mov
stos
and
and
dec
insl
push
test
movsl
outsb
rclb
jecxz
lods
mov
mov
dec
or
pop
inc
mov
mov
das
bswap
jmp
jl
rcl
push
dec
sbb
cld
push
jo
fdivr
out
mov
lahf
orb
fsubrl
jmp
ja
inc
imul
mov
fpatan
xor
mov
jae
jnp
push
sbb
jle
xor
pusha
fs
jne
cmc
cs
mov
outsl
push
mov
adc
enter
xor
add
es
outsb
shl
sbb
negb
inc
mov
xchg
adc
push
push
fbld
add
cld
lahf
jb
inc
sub
shlb
inc
adc
cwtl
aam
jb
sbbl
test
mov
in
in
nop
scas
push
gs
pop
outsl
repnz
dec
testb
xchg
movsb
js
ret
test
push
xchg
inc
mov
fsubrl
js
dec
in
xchg
xor
mov
out
or
sbb
cwtl
xor
lret
cmp
pushf
lock
addr16
cmp
jns
pop
cmp
scas
loop
mov
xor
and
sbb
cmpb
aaa
or
in
xchg
lods
lods
and
add
pop
int
xchg
into
leave
loope
xchg
inc
mov
fisttps
rcr
add
cld
cltd
adc
inc
and
out
push
jge
cli
lds
mov
pop
scas
popa
sahf
std
in
jp
mov
les
add
mov
mov
mov
mov
inc
das
push
pushl
sbb
ja
mov
xchg
adc
stc
outsb
insl
add
dec
not
xchg
xor
dec
inc
inc
loope
add
add
cmp
es
mov
in
int
scas
adc
mov
stos
decb
xor
jecxz
jp
xchg
mov
gs
fnstenv
or
aas
push
in
das
mov
inc
inc
add
sbb
mov
mov
lret
cmpsb
mov
jge
adc
cmc
loope
or
adc
setle
xchg
insl
dec
add
mov
jnp
sti
sbb
sub
shll
fwait
mov
fisttpl
push
mov
fsubl
stc
push
cmc
mov
mov
mov
sub
shlw
add
sbb
enter
push
std
and
or
inc
aas
dec
sahf
pusha
push
mov
sub
pop
xor
adc
adc
sbb
mov
imul
jp
push
test
pop
or
add
mov
jle
and
mov
sub
adc
mov
aas
cwtl
pop
outsl
in
int3
ficompl
mov
scas
xchg
nop
icebp
pop
mov
pop
scas
cmp
and
std
pop
aam
clc
flds
mull
js
shll
jne
or
sahf
aaa
mov
xlat
and
sahf
xchg
push
lods
nop
xor
mov
sbb
add
scas
inc
into
mov
and
mov
add
pop
mov
jmp
sub
loopne
push
std
cmp
mov
jb
daa
or
fsubrl
aaa
pop
xor
cmc
ja
push
or
hlt
push
out
testl
pop
add
int3
loopne
aad
dec
or
dec
dec
push
jno
inc
call
push
or
mov
aaa
pop
pop
sub
and
inc
xchg
mov
mov
mov
jnp
icebp
in
dec
pop
xchg
mov
add
add
out
mov
sti
sub
sub
add
loop
data16
add
aad
ljmp
sbb
flds
imul
insl
and
ret
out
shll
xor
pop
sbb
arpl
popa
mov
push
fs
cmc
push
test
inc
stc
sub
idivb
sbb
scas
sub
stc
popf
adc
daa
ljmp
das
mov
cmpsl
stos
loopne
add
or
mov
arpl
jbe
subb
dec
icebp
push
repz
outsb
dec
icebp
lret
and
mov
mov
push
rcl
das
scas
mov
sub
inc
icebp
in
subl
cmp
rcr
cs
mov
das
or
mov
inc
das
xor
or
sbb
sbb
test
mov
add
jmp
pushf
mov
inc
scas
dec
leave
les
insl
sub
les
pop
jo
movsl
mov
pop
shlb
pop
lcall
dec
or
xchg
out
mov
or
rcrb
push
xchg
xor
lods
adc
rorb
int3
jmp
xchg
cmp
imul
mov
mov
popa
aaa
push
xchg
pop
jno
sub
mov
jl
sbb
dec
icebp
jo
stc
aad
call
push
jnp
cmp
int3
inc
or
mov
cs
iret
xchg
push
nop
out
enter
xlat
outsb
movsb
sahf
dec
lret
jne
enter
sahf
xor
and
sbb
or
push
mov
loop
mov
arpl
cmp
fwait
mov
lret
push
mov
icebp
adc
push
popa
mov
stc
mov
sahf
cmp
orb
stc
sbb
aas
add
add
ficomps
daa
mov
aas
repnz
push
push
sarl
cltd
popa
mov
sbb
in
adc
sub
jmp
mov
mov
mov
push
and
mov
sub
mov
or
xor
push
loopne
out
outsb
leave
pushf
lea
shll
and
icebp
and
popf
aam
stos
cmp
stos
das
popa
pop
mov
in
test
aam
dec
repnz
or
xor
mov
inc
inc
sub
push
rcl
mov
jno
sub
cmc
outsb
xchg
dec
mov
stc
fbstp
adc
xor
and
es
xchg
inc
stos
adc
repz
test
xchg
inc
movsl
inc
cmp
test
jecxz
rorb
sbb
mov
int
dec
mov
mov
enter
lret
outsl
mov
xchg
add
xchg
nop
mov
gs
pop
and
jmp
repnz
xchg
loope
push
and
pop
fcomi
pop
mov
aas
or
pop
pusha
cmpsl
dec
call
pop
inc
jp
ss
xchg
push
insb
or
into
and
dec
xchg
in
cmp
jge
jp
aam
cwtl
out
js
dec
xorps
mov
iret
inc
pusha
int
notl
xor
clc
xchg
fdivp
mov
adc
lret
cld
add
push
movsb
std
shll
pop
in
mov
popl
aas
add
sbb
das
fadd
mov
adc
mov
repz
into
jl
mov
nop
cmpl
lahf
or
in
cmp
jns
fwait
cmc
cmpsl
and
jmp
es
xlat
inc
adc
mov
pop
ss
jae
mov
jp
jmp
mov
idivb
jo
int
fwait
stos
pop
pop
xchg
add
mov
mov
iret
dec
iret
jp
sbb
dec
mov
ds
ficoml
mov
les
xor
add
jo
in
lods
xor
inc
out
repnz
dec
in
shlb
xor
add
sub
adc
adc
sbb
or
xchg
mov
stc
xchg
pop
push
cmp
hlt
sahf
mov
inc
cmp
popf
sub
testb
lahf
shrb
scas
cmp
pop
mov
sub
dec
jbe
or
pop
in
pop
es
ret
add
in
es
adc
fdivl
xchg
lret
and
pushf
pusha
sbb
popa
jge
mov
rsm
cmp
mov
icebp
jbe
lea
pop
mov
daa
inc
and
filds
jb
mulb
ficoms
cld
imul
in
mov
test
daa
pop
pop
xchg
loop
dec
in
jg
add
mov
dec
adc
or
mov
subb
mov
mov
sub
jae
arpl
lods
rcrb
cli
icebp
mov
in
or
jmp
addr16
mov
repnz
mov
loop
je
int
or
adc
pop
repnz
stos
scas
mov
or
mov
jnp
ficomps
xlat
adc
jae
into
dec
or
repz
sbb
repz
adc
hlt
xchg
pop
scas
cmp
add
mov
inc
dec
in
dec
sub
sbb
xchg
and
jns
dec
xlat
sub
xchg
sbb
adc
lds
js
sahf
bound
cmp
mov
in
xor
clc
push
sbb
hlt
pop
repnz
sahf
and
jge
cld
ljmp
mov
jo
outsl
out
outsb
sub
add
in
mov
out
mov
jnp
imul
push
in
or
ja
add
push
add
mov
sbb
lods
cwtl
fwait
xor
aad
aaa
jecxz
and
xchg
dec
lods
adc
mov
fidivrl
and
cli
jb
pop
les
mov
cli
popa
in
and
mov
push
pop
rcl
loopne
shlb
ss
fidivs
sub
pop
in
iret
add
mov
cmpsl
jle
sub
mov
jae
cs
les
or
mov
jmp
mov
mov
sahf
xchg
push
adc
icebp
sub
or
jl
das
sahf
cmc
repnz
sar
push
push
mov
shrb
lret
or
sbb
add
fs
xor
cmp
stc
dec
xor
inc
or
add
imul
shlb
imul
mov
jb
in
pushf
xchg
push
jne
and
je
insl
push
push
cmp
das
mov
dec
lret
test
fistl
pop
in
dec
dec
add
loope
int
mov
adc
jge
adcb
jo
and
call
xchg
xor
pop
fdivr
jmp
or
sub
ret
jmp
jmp
jp
pop
sar
jae
mov
sbb
dec
sub
movsl
roll
lods
pop
push
sti
jae
fwait
push
jno
lcall
sub
xchg
cmp
mov
sahf
push
and
push
sub
insl
or
jb
les
loop
and
xorb
jl
pop
repz
lahf
mov
sbb
insb
push
mov
stc
iret
mov
pusha
xchg
jp
pusha
push
adc
mov
cmp
aas
stos
out
jmp
imul
inc
lds
lcall
lcall
jo
and
cmp
or
hlt
mov
notb
pop
and
testb
pop
xchg
movsl
cmpsl
sbb
repnz
jns
sbb
icebp
jb
push
push
and
mov
xor
sbb
mov
sarb
xchg
jecxz
sub
mov
xchg
xchg
and
dec
fiadds
jo
mov
sub
jl
fsubrs
test
addr16
je
dec
pushf
cltd
adc
lret
or
lret
lods
std
popa
mov
je
fsubr
and
xchg
add
scas
lock
in
fidivrl
shll
or
cltd
jno
mov
push
mov
shr
jbe
inc
ret
addr16
jmp
mov
xchg
and
imul
mov
add
scas
fwait
inc
fimull
pop
inc
mov
repnz
sbb
adcl
add
aaa
jg
adc
xchg
je
call
fisttpl
outsl
dec
jae
sbbb
cmp
push
movsb
sbb
push
ds
jl
shrb
test
ss
imul
das
add
mov
stc
jl
test
add
cli
xchg
xchg
sub
adc
outsl
sbb
mov
xchg
adc
movsb
and
cmc
ret
js
inc
xor
in
arpl
mov
or
push
mov
sbb
test
sub
sti
shrl
jp
jne
mov
sbb
xchg
jmp
inc
inc
xor
mov
xchg
iret
or
add
and
shl
push
add
rol
lcall
xlat
ret
mov
xor
out
pop
scas
push
push
loop
in
call
or
mov
cmc
insl
pop
popa
xchg
cmpsl
sub
dec
das
lea
inc
fs
ja
shlb
bound
ss
jae
scas
into
jecxz
and
push
fisubl
sub
fidivs
pop
cmp
or
mov
xor
icebp
sub
inc
hlt
icebp
push
scas
jb
ret
mov
mov
je
test
add
and
xchg
mov
movsl
insl
adc
jg
jmp
icebp
fmuls
dec
stos
in
jbe
arpl
in
pop
movsb
loope
add
mov
shl
je
dec
cmovae
push
mov
cwtl
imul
jb
mov
and
sbb
jle
andl
jecxz
jns
in
pop
inc
test
divb
pop
cmp
or
sub
test
jae
add
jecxz
int3
lcall
loop
lea
jae
loope
add
inc
call
repz
mov
pop
es
out
test
add
pop
aam
sar
sub
push
ljmp
cmpl
fwait
out
xlat
ds
in
mov
adc
fwait
mov
add
cli
push
int
xor
lods
jmp
or
ss
test
lods
xor
fwait
sub
cld
jns
adc
mov
rcrb
mov
push
inc
ret
xchg
push
ja
pop
movsl
pop
aas
addr16
fiaddl
test
fstpl
cmpsl
daa
or
adc
mov
jno
test
sbb
or
les
xor
mov
sbb
xchg
icebp
xchg
stc
push
pop
imul
cmp
mov
lahf
jbe
popa
hlt
add
sar
loopne
ret
cmp
pop
pop
mov
stos
inc
add
stos
cmp
scas
popf
call
adc
gs
ss
push
andl
push
stos
jmp
mov
dec
out
adcl
out
fistpll
fs
push
jl
push
in
pop
stos
cmc
and
icebp
sub
mov
cmc
fcmovnb
adc
mov
mov
outsb
xchg
sub
or
sahf
pop
pop
imul
ljmp
mov
push
xor
repnz
mov
pop
rcl
repz
div
arpl
int3
ja
hlt
and
ss
fnsave
insl
pop
push
test
mov
movsl
fidivrs
out
test
scas
jno
fdivrs
push
or
inc
mov
loop
add
insl
adc
cmp
adc
lds
pshufw
jle
in
cltd
sub
lock
jp
loopne
scas
or
add
jb
out
mov
dec
push
inc
mov
mov
rcr
mov
mov
aaa
cmp
shlb
out
fnstenv
sbb
out
shrl
adc
cli
hlt
jp
cmp
pop
dec
sbb
cmp
sub
bound
cld
rcrb
xor
inc
jae
mov
enter
inc
out
sbb
xor
sbb
sub
xor
fcoml
aaa
mov
sub
push
jnp
jnp
ds
stos
or
test
cmp
aad
jns
xchg
test
xchg
enter
pop
cltd
and
inc
loopne
adc
inc
cmp
movsl
out
cmp
aas
scas
xor
sub
xchg
xor
xchg
add
imul
lods
lcall
es
xchg
stos
lret
loop
and
sbb
mov
add
ret
fwait
inc
es
inc
js
loopne,pn
popf
adc
sbb
cmpsb
popa
or
ficoms
cmp
out
test
data16
adc
jge
xchg
mov
lock
xchg
jne
ljmp
lock
jg
pop
add
clc
and
mov
std
aas
lods
data16
mov
jecxz
addb
test
adc
xchg
insl
xor
jne
sar
inc
cmp
inc
stos
sub
cld
in
pusha
nop
mov
fildll
add
repnz
insl
mov
iret
or
add
pop
mov
xor
sub
dec
pushf
dec
rolb
outsl
jge
inc
lods
sbb
sahf
daa
cli
inc
ret
aad
into
adc
js
loope
push
dec
call
seta
sub
call
pop
pop
out
push
mov
xor
adc
adc
sbb
enter
or
cmpsl
mov
push
mov
mov
cmp
push
or
xor
int
sbbl
pop
movsb
mov
js
mov
leave
xlat
aam
or
aad
ja
outsl
xchg
fisttpl
jnp
out
test
xchg
dec
jge
fwait
dec
xor
dec
push
mov
push
dec
push
or
into
sbbl
pop
scas
dec
mov
fisttpll
push
rorl
mov
in
jmp
inc
fsubr
push
push
in
sbb
aas
loopne
mov
orl
daa
inc
jp
mov
mov
sub
lar
pop
hlt
lock
fs
and
push
mov
cwtl
jae
mov
jns
adc
push
jmp
fs
stos
into
les
ret
hlt
fdivrs
out
jmp
adcb
adcb
mov
stos
pusha
in
cmp
push
dec
xchg
add
fdivrp
mov
leave
aad
dec
mov
repz
loope
and
lret
mov
lock
pop
dec
rcl
popl
sub
push
and
fcoml
or
push
out
das
pop
fimull
cmc
cmp
popf
push
pop
jmp
lods
jne
mov
pop
jecxz
outsb
hlt
mov
sahf
dec
aaa
cmp
cli
pusha
mov
pop
repnz
mov
jnp
js
xchg
and
or
pop
daa
fstl
adc
jne
xor
xor
xorl
mov
mov
out
movsl
dec
test
cmp
inc
jo
gs
xor
stos
ret
xor
and
loop
jne
lcall
cmpl
ja
movb
enter
ficomps
orb
xchg
pop
loopne
adcl
mov
cmp
mov
lcall
fwait
outsl
push
inc
or
pop
cmp
aaa
jecxz
lret
enter
dec
or
out
jae
xor
pop
inc
and
mov
mov
mov
and
jbe
subb
sub
sbb
int
call
mov
mov
cmp
xchg
inc
test
inc
cmpsb
out
subb
mov
xchg
dec
pop
sbb
shll
jle
pop
das
in
testl
jno
rclb
mov
std
sub
push
jo
push
shr
jo
cmpl
test
push
xchg
insl
out
movsl
xchg
pop
push
fs
popa
imul
call
push
push
push
data16
cmpsl
rcll
push
jno
jle
movsb
ret
sbb
scas
xor
test
jno
flds
test
sub
pushf
aam
push
mov
mov
mov
or
insb
xchg
lcall
movb
jae
jbe
lahf
in
xchg
int3
pusha
aam
fildl
shl
jbe
sub
ljmp
inc
in
popa
fbstp
and
out
adc
pop
sbb
cmp
int3
xchg
xchg
stc
int3
out
int
pop
xor
push
push
pop
iret
dec
jmp
jne
sbb
les
int
pop
or
pushf
std
stos
jno
sbb
stos
test
repnz
inc
out
pop
fistl
or
add
or
mov
sbb
jo
shl
pinsrw
lods
lea
fistpll
sti
arpl
add
mov
loop
or
outsl
xor
inc
or
shl
push
jg
mov
sub
push
and
jp
scas
popf
and
repz
enter
add
xchg
aad
cmpsl
mov
cmp
sbb
pop
xor
jbe
sarb
push
adc
pop
mov
rol
cmpsl
or
push
and
fsubrl
xchg
mov
sbb
push
in
inc
or
scas
into
pop
jbe
in
out
mov
aam
movsb
notl
push
dec
sbb
sbb
fists
loop
mov
ficomps
xchg
stc
insb
loop
lea
andb
pop
adc
push
mov
sub
sahf
push
js
addl
or
mov
and
mov
dec
sbb
or
popa
pop
push
ret
test
cmp
ds
and
shll
push
add
add
pop
add
xchg
xchg
aam
sub
mov
mov
jae
xor
dec
mov
mov
jno
xchg
clc
lcall
inc
leave
testb
je
mov
andb
adcb
add
jl
pop
in
sbb
sbb
push
cld
and
push
xchg
fisubs
xchg
loop
lea
cmp
adc
cld
mov
mov
push
les
inc
mov
xchg
iret
and
inc
ss
stos
ds
jg
mov
scas
add
lahf
test
cli
lea
pop
fldl
jo
xchg
jmp
les
mov
out
pop
or
adc
push
jae
inc
xor
repz
test
mov
mov
cmp
arpl
outsb
leave
mov
mov
mov
jmp
popf
sub
idivl
mov
sti
pop
js
rorb
int3
dec
cmp
push
rol
scas
jnp
mov
cmp
lret
and
inc
leave
js
aam
jno
loopne
insl
movsb
scas
xchg
mov
push
add
inc
jg
mov
cmpl
aam
stc
add
addl
or
cmpl
jmp
dec
mov
repz
pop
addb
popf
subb
int
or
pop
cmp
test
nop
movsb
push
mov
mov
cmpsb
xchg
insl
mov
daa
cld
dec
lret
jle
enter
test
call
in
mov
jp
subl
mov
neg
cwtl
ds
cli
int3
cmp
nop
or
mov
and
loope
mov
dec
ljmp
daa
sbb
jnp
sbb
out
add
cli
cmp
adc
and
cmp
shll
xchg
push
popf
push
push
shll
jl
inc
xchg
cli
mov
xchg
pop
mov
mov
call
insl
aaa
jnp
hlt
push
sbb
rclb
add
or
jne
std
adc
icebp
jl
xchg
iret
adc
push
cltd
movsb
dec
inc
fs
xchg
es
xorb
dec
test
std
xor
lods
shlb
rorl
pop
in
icebp
roll
mov
jno
inc
mov
push
lds
jbe
loopne
mov
stos
stos
xor
jbe
xchg
xchg
xchg
and
popf
sahf
xchg
popa
push
lds
mov
xor
push
mov
into
push
jmp
lret
mov
test
bound
add
aaa
lcall
mov
fists
mov
fcmovu
pushf
pusha
imul
cld
mov
fwait
and
inc
orl
popa
pop
cmp
outsl
push
out
sub
jecxz
mov
addr16
int
pop
mov
daa
inc
ds
jge
xchg
pop
mov
push
push
shl
gs
xor
jecxz
push
stc
loopne
stos
leave
mov
ret
sahf
xlat
push
rorl
aas
cmp
inc
cs
mov
test
jb
pop
xchg
lret
cli
pop
cmp
jno
out
mov
sub
inc
out
movsl
jbe
cmp
cmp
sbb
push
scas
repz
jnp
ret
cmp
dec
pop
or
jnp
pop
aad
loop
int3
rorb
add
jp
lret
lods
out
cmp
jp
mov
lea
xor
mov
push
js
sub
lret
cmp
mov
jno
and
lock
inc
fadd
mov
mov
fists
pop
push
arpl
pop
or
sbb
stc
pop
xor
sbb
pop
aaa
lcall
dec
jne
movsl
jge
mov
mov
outsl
mov
cmp
imul
pop
icebp
shrl
imul
sbb
mov
test
adc
loopne
arpl
dec
lret
jns
xchg
test
dec
add
pop
fcoml
ret
xor
mov
add
cmc
push
stos
add
std
jnp
pop
std
ret
mov
mov
mov
sub
mov
cwtl
cwtl
imul
out
or
inc
adc
mulb
fcmove
daa
mov
imul
stos
cli
addr16
popa
or
mov
push
int
xchg
or
cld
idivl
pop
fdivp
decl
iret
dec
dec
and
sub
cmp
cs
mov
and
mov
movsb
or
jg
add
mov
xchg
pusha
inc
adc
push
push
daa
fimuls
xchg
dec
pop
push
dec
test
cmc
fmull
adcb
int3
sbb
jl
sbb
dec
scas
out
pop
pop
mov
rol
shrb
lret
sub
imull
add
add
orl
addr16
dec
mov
hlt
cmp
stos
stc
xor
dec
lahf
shr
push
mov
out
mov
cmp
test
sub
or
fidivl
xor
pop
mov
xor
lods
pop
aaa
ljmp
nop
ret
lret
add
mov
pop
fmul
lds
int
dec
adc
shrb
aas
and
popa
scas
arpl
iret
daa
mov
mov
xchg
rcll
cwtl
movsb
into
inc
pop
in
fmull
cwtl
mov
xor
inc
mov
cmpsb
inc
fstps
loopne
imulb
subb
xor
xchg
add
mov
sub
sbb
push
cwtl
sti
jno
inc
adc
jmp
cmc
cmpsb
pop
in
outsb
addr16
sbb
aam
cmp
xor
or
in
pcmpgtb
xor
dec
mov
out
loopne
xor
add
push
sbb
sub
pushl
mov
inc
xchg
mov
mov
mov
adc
adc
jns
mov
outsl
fwait
scas
sbb
das
inc
xchg
push
rol
jno
outsb
pop
fcomp
xlat
bound
int3
cmp
push
js
dec
popa
adc
xor
divps
pop
dec
cli
mov
in
adc
cmpsl
adc
fbld
add
pop
bound
mov
jmp
mov
cltd
mov
adc
mov
stos
fwait
jl
pop
jno
imul
pop
jnp
cmp
imul
mov
or
lret
orb
sbb
cmpsb
cli
push
stos
dec
das
cmp
ja
jb
outsb
dec
cs
bound
push
jl
scas
add
mov
loopne
test
ja
add
or
and
push
jecxz
int
ja
inc
in
rcrl
jmp
lock
xchg
stos
cld
xor
sti
mov
int3
sub
inc
jl
or
pop
lods
test
sbb
test
adc
outsb
in
mov
sub
ret
jae
adc
test
jp
lcall
mov
jmp
sbb
push
sub
out
data16
add
hlt
enter
test
push
add
jecxz
ja
add
in
adc
sub
sub
jne
enter
fldcw
sub
daa
stos
pop
add
push
std
inc
std
xchg
fimuls
hlt
mov
lods
adc
pop
add
pop
shrb
ret
inc
sub
sahf
cmc
xor
std
inc
mov
lods
mov
and
mov
or
xchg
dec
dec
sub
vorps
xor
push
lahf
mov
out
rorb
repz
cltd
inc
mov
and
xchg
sbb
pushw
ficoms
ret
push
mov
xor
in
leave
sub
mov
mov
mov
dec
subl
mov
and
xchg
loopne
insl
lret
lods
fidivrs
jge
mov
or
mov
mov
or
adc
fistpl
xor
shlb
cmp
jbe
push
jmp
movsl
call
sub
push
sbb
adc
sub
adc
or
mov
movsl
cmc
ret
xor
into
dec
lret
cs
fwait
xchg
dec
pop
mov
xor
mov
in
mov
jnp
push
cli
add
in
dec
in
pushf
cwtl
decl
pop
mov
sub
cmp
mul
xchg
es
and
lock
adc
pop
icebp
mov
push
movsb
xor
mov
pop
and
cli
imul
movsl
movsl
lods
pop
fwait
mov
add
mov
dec
cmp
push
push
sub
sti
aas
pop
lahf
pop
rol
rcr
xor
shrb
lea
mov
div
add
push
or
into
fsubl
mov
mov
xor
jae
jne
fwait
or
shlb
subb
insl
addr16
sbb
dec
pop
mov
adcb
push
addb
adc
mov
dec
cmpsb
daa
push
mov
dec
mov
sbb
xchg
imul
xlat
cmp
loopne
mov
mov
test
dec
cli
jl
imul
or
adc
xchg
ds
inc
add
dec
mov
negb
xlat
movsb
addb
pop
pop
lret
lods
ja
dec
cli
or
and
cwtl
xorb
push
in
or
mov
xchg
dec
cmp
and
mov
sbb
push
rolb
and
shll
andb
aas
adc
mov
call
leave
push
jo
shll
aam
xor
add
rclb
cmp
shlb
xchg
jge
aaa
adc
sbb
cmp
add
cs
rorl
std
inc
sub
pop
jae
add
loopne
push
rorb
inc
xchg
or
daa
cmp
inc
dec
xor
xchg
pop
push
xchg
adc
addr16
mov
es
dec
ret
xor
mov
jb
inc
cmp
and
dec
jnp
xor
sub
jmp
xorb
mov
cmp
test
add
pop
hlt
xor
jbe
push
jno
push
xchg
jno
lea
fldenv
fists
mov
divl
jp
push
lods
xlat
mov
jmp
adc
xchg
out
out
arpl
rorl
pop
push
data16
dec
idiv
int
insb
inc
mov
and
rolb
dec
mov
or
popf
scas
pop
pop
sub
in
ret
lret
jo
adc
inc
aam
loop
in
dec
movsl
add
aas
lcall
out
pop
or
cwtl
inc
and
or
test
dec
xchg
push
imul
std
and
imul
sbb
mov
lret
rcr
cmpsl
fisubl
scas
test
sbb
push
or
inc
push
scas
inc
or
scas
xor
mov
sbbl
mov
jno
icebp
xor
push
mov
push
mov
or
push
inc
inc
insb
mov
pop
push
je
sub
xchg
inc
data16
mov
out
das
add
sbb
movl
add
dec
test
xchg
sbb
aas
sub
in
adc
mov
pop
into
sbb
cmp
testb
sbb
popa
or
xor
leave
pop
lea
lahf
mov
cli
enter
ss
andl
jbe
inc
nop
iret
fcompl
jo
jo
pop
pop
jb
xchg
jl
push
imul
mov
xchg
mov
jmp
xor
dec
das
pop
mov
and
and
and
xor
test
jecxz
lods
stc
shl
and
jg
jae
out
or
mov
cmp
fwait
addr16
sub
imul
cltd
sub
repz
imul
je
call
std
orl
xchg
mov
sub
sub
addr16
push
mov
fdivp
add
mov
repz
fstpl
add
out
rol
jae
xor
aas
ja
daa
clc
in
or
fistl
ljmp
stos
sti
addr16
jo
or
add
lock
call
or
lods
cmp
fcoms
outsb
cmp
mov
pop
leave
loop
ds
ss
or
sbb
faddl
inc
mov
pop
ja
cmp
mov
dec
les
push
jp
insl
and
imul
subl
sbb
pop
jno
shll
and
clc
pop
movsl
std
cli
lcall
int
sub
mov
bound
cmp
call
in
shl
ret
popl
or
gs
orb
ss
mov
hlt
cld
xor
shlb
xor
xchg
jo
mov
jle
xchg
repz
movsb
dec
xchg
sub
popa
mov
cld
rorb
sbb
inc
pop
nop
out
xor
cmp
push
push
xchg
jbe
dec
or
adc
test
xor
sub
mov
push
btr
lcall
mov
sub
adc
stc
fsubs
cmp
mov
xor
pop
push
aad
cmp
mov
loopne
mov
xor
and
pop
push
or
dec
and
sahf
imul
sbb
aas
rcrb
ficoml
sbb
inc
xor
mov
or
fnstsw
jecxz
push
push
mov
inc
rcll
sub
lock
fists
lahf
addr16
mov
inc
inc
call
insb
lahf
xor
xor
lds
fwait
sub
jl
jmp
popf
jns
cwtl
stos
inc
sub
out
nop
push
mov
icebp
popa
mov
cmp
fbld
xor
aas
shlb
mov
jbe
cmp
repz
jmp
mov
push
xchg
imul
mov
or
sbb
aaa
xor
inc
cmpl
add
cmpsb
push
push
dec
xlat
xchg
jo
xor
cmp
insb
and
test
jnp
jl
adc
and
lods
iret
add
jae
outsl
sbb
and
pop
add
dec
sub
sahf
stos
sbb
andl
mov
ja
jne
xor
or
rolb
xchg
outsb
and
testb
stos
subb
add
pop
xchg
mov
xor
mov
movsl
movsb
fsin
or
sahf
dec
loopne
xor
xor
mov
sub
or
xorl
inc
fs
xor
sub
outsb
push
xchg
insl
shl
cmpsl
jg
sti
pop
stos
jg
cwtl
xor
outsl
into
and
js
and
test
outsl
and
push
or
cwtl
movsl
jecxz
add
ret
jb
leave
pop
inc
jbe
sbb
and
clc
jae
sub
pop
mov
xor
pop
aaa
stc
mov
pop
xor
popa
fwait
repz
fistpl
imul
fnstsw
insl
and
inc
jl
mov
jmp
fisttpl
or
lahf
daa
sbb
or
jmp
cli
dec
loopne
fdivrl
cs
shr
cmp
ds
xchg
adc
mov
cmc
add
rolb
mov
pop
aas
inc
dec
cld
jl
mov
ret
sub
sti
popf
pop
add
notb
jno
jb
inc
xor
mov
inc
prefetch
inc
or
dec
dec
and
add
jo
testb
pop
push
mov
and
mov
cs
repnz
lods
adc
mov
cmp
shrl
jnp
out
int3
xchg
xchg
mov
leave
pushf
dec
dec
and
sbb
add
or
xchg
cli
inc
push
inc
lods
sbb
rorb
fmul
dec
lret
fs
jle
pop
xchg
xor
push
sub
sti
mov
mov
iret
sub
int
add
xchg
ret
xchg
cmpsb
cmp
into
popa
sti
in
jle
jnp
fnstenv
insl
inc
out
push
cmp
sub
movsl
mov
add
xchg
inc
cmp
and
inc
dec
pop
sbb
aaa
std
mov
pop
xorb
lcall
xor
icebp
or
stc
stc
shl
inc
dec
test
dec
lea
jle
bound
xchg
ret
pop
mov
jne
loopne
in
xchg
add
scas
jb
imul
cmp
aaa
and
pop
fdivrs
add
cmp
repnz
inc
xchg
popf
repz
in
shrl
and
mov
inc
push
loop
sbb
popf
out
xor
ds
inc
rcrb
and
push
pop
sub
jp
sub
aad
cmp
sti
inc
mov
int3
lods
lcall
in
lahf
stos
negb
in
cmp
pop
stc
add
aas
mov
inc
adc
outsb
mov
out
stos
bound
adc
aad
mov
and
pop
fildll
push
les
inc
cmp
outsb
mov
jns
add
aaa
cld
xor
fnstsw
push
cmp
and
sbb
call
aas
icebp
icebp
into
pop
and
jb
push
xor
and
xlat
push
adcb
scas
pop
repnz
sbb
out
push
test
dec
mov
in
pop
push
cmp
inc
mov
ret
mov
adc
mov
cmc
mov
inc
and
cmc
orb
mov
sbb
ficompl
cld
xorl
push
xchg
jl
dec
dec
push
or
or
xor
fistl
ss
outsb
pop
jmp
xor
jmp
inc
sub
ss
mov
or
lret
cs
out
orb
mov
repnz
test
fistpll
decl
call
and
int3
lahf
test
outsb
cmc
shlb
rolb
mov
mov
shr
dec
dec
xchg
inc
jb
mov
xchg
xchg
stc
sbb
xchg
xchg
sub
clc
bound
insb
cmpsb
lret
cmp
adc
pop
scas
or
push
sub
loop
insb
stc
pop
xchg
xchg
fisttpll
test
test
xlat
xorl
xlat
jmp
rolb
lock
mov
out
js
cmp
fs
mov
xor
mov
inc
jno
shlb
push
popa
mov
add
xchg
aaa
cld
mov
call
mov
xchg
mov
push
fwait
arpl
jle
push
jbe
xor
adc
pop
out
push
leave
pusha
enter
adc
mov
push
inc
lods
sbb
into
jp
clc
lret
dec
xor
mov
xor
inc
lahf
iret
mov
out
cld
in
or
imul
pop
cmp
xor
xor
stos
sarl
imulb
es
push
rorb
mov
je
push
pop
jne
cmp
popa
or
mov
sbb
adc
fldt
xor
fadd
imul
in
add
pop
mov
emms
jae
pushl
pop
mov
jb
xchg
mul
movsl
cld
loop
jbe
aam
scas
mov
insl
call
pop
pop
pop
mov
push
in
into
xchg
paddb
push
dec
fmul
mov
pusha
fistps
pushf
sub
xor
xchg
mov
incb
fldenv
adc
sub
mov
stos
movsb
insb
inc
test
xchg
std
add
add
or
aaa
pop
lcall
lods
dec
ret
daa
and
lahf
movsl
sub
or
mov
sub
insl
mov
sbb
dec
into
mov
push
or
leave
leave
ja
out
and
fidivrl
ljmp
xchg
jae
out
insb
dec
and
push
das
inc
imul
jne
cli
idivb
cmp
and
mov
jno
pushf
xchg
clc
js
clc
mov
sbb
mov
cmp
xchg
xor
dec
xor
sahf
sti
dec
xchg
out
jns
rcrl
out
stos
and
arpl
into
add
jno
mov
iret
push
loope
or
test
push
stc
incl
int
push
xchg
fcoml
sbb
outsb
mov
mov
inc
lea
loop
or
mov
inc
rclb
xchg
adc
mov
popa
dec
push
adc
adc
stos
lret
imul
push
add
mov
sbb
jb
scas
jl
out
pop
mov
add
aad
cmp
iret
sbb
and
add
jecxz
imul
js
nop
inc
sti
out
jmp
jae
push
mov
add
sbb
mov
dec
dec
cmp
stc
mov
jns
stos
loop
jge
xchg
jle
lahf
xlat
int3
ja
out
push
sbb
repz
shrb
xchg
int
pop
lahf
aam
mov
mov
nop
cltd
out
mov
pusha
and
shrl
push
mov
cmp
xchg
ljmp
std
imul
mov
je
inc
jle
mov
imulb
fcoml
mov
xor
into
cli
xorb
xor
arpl
stc
icebp
sbb
or
jbe
ljmp
sub
fstpt
pop
or
xor
insl
fwait
mov
sub
sbb
es
mov
inc
cltd
pop
int
add
pop
add
outsb
cs
xchg
fsub
stc
sti
pop
mov
mov
xor
bound
and
or
mov
fcmovne
fcoms
push
mov
test
lds
inc
pop
push
fcmovnbe
dec
divb
and
fcmovu
cld
lods
pop
mov
repz
repz
xchg
xor
adc
pop
aad
adc
jbe
xlat
jmp
xchg
adcl
js
imul
push
repz
cmpsb
or
mov
rcrl
xadd
in
fimull
outsl
iret
xlat
bound
dec
or
aas
mov
mov
pushf
dec
hlt
and
data16
mov
jbe
xchg
stos
push
ljmp
dec
add
inc
into
sbb
mov
inc
dec
lahf
fwait
movsb
nop
fisubs
out
add
or
adc
xchg
lods
jp
and
push
leave
movsl
jne
imul
and
jbe
lret
pop
movsl
sub
sti
rcr
icebp
add
pop
lock
in
ja
add
stos
lcall
push
add
hlt
addl
popa
push
mov
enter
addb
ror
jg
loope
dec
xlat
mov
and
ret
push
mov
push
stc
inc
adcl
sbb
pop
adc
inc
fdivp
push
mov
shrb
pop
test
lret
popa
fstpt
dec
pop
js
add
lock
add
jae
sbb
mov
scas
jae
mov
mov
push
xchg
dec
jns
rcrb
adc
push
pop
adc
xchg
aam
mov
aas
sub
iret
mov
mov
sti
loope
les
inc
push
je
jecxz
rorb
sbb
jns
lret
xor
dec
inc
add
dec
lret
lret
mov
pop
adc
jg
mov
cltd
das
ret
idivb
fcomip
sbbl
cltd
loopne
cmp
daa
subl
cmp
sahf
les
and
and
mulb
cmp
xor
loop
js
sub
pop
mov
mov
xor
js
mov
fstpl
push
pop
sbb
ss
outsb
outsl
orb
mov
or
push
les
jo
mov
jns
sarl
testl
sub
add
dec
or
mov
mov
subl
arpl
xchg
pop
mov
ss
icebp
sbb
mov
test
es
xchg
add
hlt
mov
mov
pop
jp
push
fbld
sbb
push
push
dec
gs
mov
jb
add
push
mov
cmp
aad
cltd
andl
cld
cmpsb
mov
addr16
lock
rolb
push
call
cmpsb
gs
xchg
jle
jle
dec
jg
stos
fistpl
add
xchg
sbb
addb
mov
ljmp
fwait
gs
or
sbb
sub
mov
stos
adc
dec
pop
sbbl
scas
pop
imul
movsb
jecxz
rcrl
xchg
mov
mov
inc
or
jns
cs
jns
mov
fsts
mov
xchg
cmpsb
out
mov
hlt
ret
ja
mov
bound
adc
adc
add
mov
cmp
lahf
push
pop
outsl
push
dec
enter
ficompl
and
push
pop
pop
mov
jne
rorl
out
cli
inc
and
xchg
lods
mov
aad
imul
xor
imul
dec
arpl
aam
nop
pop
mov
and
stos
adc
or
lods
insl
sarl
int3
mov
mov
movb
scas
push
and
push
mov
lret
enter
mov
and
testb
fiadds
jle
push
and
outsl
lock
in
ret
lret
and
subl
iret
mov
adc
jnp
dec
sub
mov
pop
out
and
inc
aaa
mov
fisttpll
add
pop
pop
rcr
jno
in
or
and
dec
lahf
add
add
enter
ficoms
adc
imul
shll
sub
add
fildll
outsb
addr16
test
sub
lret
adcl
or
pop
sbb
repz
sbb
jo
mov
add
pop
mov
push
or
insl
sbb
mov
push
test
pusha
mov
outsb
ret
daa
inc
push
shr
jge
andl
adc
sbb
cmpsb
add
int
and
rcrb
insb
push
mov
jge
test
dec
push
fistpll
mov
nop
inc
lret
push
push
out
xor
push
dec
xor
iret
inc
mov
mov
bndldx
out
lods
mov
subl
sub
pop
cmp
xchg
adc
stos
iret
pop
cwtl
sub
mov
lret
push
mov
or
mov
add
push
test
dec
mov
mov
cmp
push
adc
aas
lcall
xchg
iret
arpl
jne
pop
inc
jbe
imul
cmpsb
pop
mov
pop
gs
sahf
adc
aaa
push
sbb
push
pop
pop
push
or
sub
inc
cwtl
xchg
xor
add
add
fcoms
mov
stc
ljmp
aas
fucomip
movsb
xchg
lods
shll
add
fdivrl
mov
iret
sti
ret
insl
pusha
ljmp
xlat
fmull
add
scas
scas
lods
mov
ret
fwait
xchg
mov
mov
jbe
stos
pop
jle
mov
bswap
mov
add
xor
and
movsl
movsb
xchg
lahf
and
xor
inc
push
das
sub
xorl
push
pop
loopne
mov
mov
inc
cmpsb
fwait
pop
dec
add
mov
dec
jne
xchg
stc
in
fnstcw
or
stos
pusha
inc
or
enter
add
ficompl
out
xor
inc
jmp
lods
fsubp
jnp
mov
jne
rolb
mov
pushf
popa
mov
jo
dec
arpl
in
out
lods
xor
hlt
and
mull
lds
ret
cmp
jns
mov
push
dec
ds
and
sbb
out
test
add
xchg
xor
imul
notb
dec
mov
repz
cmpsb
imul
xchg
dec
mov
adc
xchg
fnstsw
fs
sti
pop
or
pause
mov
ds
nop
mov
inc
push
daa
vpsrad
push
push
mov
cmp
add
xlat
or
out
pop
jmp
pop
dec
fisttps
jp
rcll
add
out
out
sahf
add
or
mov
fwait
popl
mull
cmp
data16
loope
push
xor
bound
testb
cltd
pop
pop
in
jecxz
pop
lods
jne
js
mov
mov
pop
adc
jmp
add
sub
sti
jmp
sahf
notb
jl
xchg
mov
out
pop
xor
or
inc
mov
mov
cmpsl
pop
mov
sbb
mov
cltd
pushl
mov
pop
rorl
and
inc
mov
push
or
jne
push
pop
in
pop
out
hlt
cmp
data16
sbb
pop
addr16
out
mov
jmp
outsb
push
jnp
pop
icebp
and
mov
sbb
cwtl
sbb
data16
cmp
inc
sbb
push
loope
lcall
mov
iret
inc
aaa
stc
pop
push
icebp
cmpsb
push
fistpll
popf
test
ret
jl
pop
aad
and
nop
cwtl
pop
cld
mov
add
push
imul
out
dec
stc
sahf
cmc
rorb
push
push
daa
mov
and
pushf
outsl
repnz
loop
cltd
ret
add
sbb
mov
mov
inc
fcomps
jnp
xchg
data16
loopne
mov
inc
mov
cmp
nop
pop
jns
jnp
int
loop
xor
daa
xor
scas
inc
loop
loopne
and
pop
adc
lret
imul
pop
cltd
or
cmpsb
sbb
addl
lret
mov
cwtl
add
push
fnstenv
inc
or
inc
bound
inc
mov
and
sbb
fidivs
jecxz
mov
jno
mov
movsb
leave
cmp
ljmp
in
scas
rcl
test
cwtl
inc
push
add
or
dec
aaa
inc
stos
xor
cltd
lods
into
lahf
mov
loopne
jge
imul
and
xlat
mov
out
fstpt
ja
lea
insb
xlat
ret
ljmp
pop
inc
jno
jb
decl
insl
xchg
sahf
sub
jne
lmsw
xchg
pop
in
sbb
jle
pop
adc
ja
mov
push
mov
xchg
sub
aaa
gs
ret
mov
testl
adc
push
mov
dec
push
imul
lahf
cmp
cwtl
dec
ret
sub
adc
test
xor
adc
pop
xchg
pop
mov
imul
pushf
lret
or
pop
inc
insl
xchg
cs
aaa
pop
sti
ds
js
mov
pop
xor
push
push
lcall
test
cmpsl
inc
int3
mov
adc
mov
xchg
int
push
mov
inc
pushf
loop
cmp
clc
sub
test
iret
cmpsl
lcall
adc
and
out
std
mov
call
cmpsl
jno
test
pop
addr16
dec
test
ljmp
mov
shll
add
mov
sbb
mov
fabs
jae
sbb
mov
jl
jbe
jnp
jl
orps
sub
jecxz
lret
insl
fs
fs
daa
es
movsb
scas
mov
jge
aad
mov
punpckhbw
sarb
xchg
insb
pop
mulb
aad
int
ss
xchg
xor
fs
aad
add
inc
push
mov
mov
xchg
ret
std
pop
lods
xor
push
xor
xchg
aad
cli
jp
pop
cmp
sub
mov
ja
test
cmp
jg
ss
jno
and
and
subl
test
and
xlat
lods
ror
rclb
pop
out
mov
test
sub
jns
aas
fiadds
cs
push
pop
add
stos
mov
je
imul
stos
out
inc
aas
jg
pop
push
mov
call
adc
scas
fstpl
loop
adc
inc
mov
pop
ret
or
adc
pop
in
pop
mov
and
jnp
mov
out
xchg
inc
pusha
fldt
push
mov
and
mov
xchg
inc
xor
ret
and
and
dec
sarl
push
mov
pusha
xor
cmc
in
scas
lock
jns
sub
xchg
push
mov
mov
movb
dec
and
cmp
leave
xchg
aas
and
std
lret
pop
pop
fstcw
xchg
and
repnz
mov
push
xchg
mov
add
icebp
sbb
xchg
sbb
inc
out
mov
out
outsl
fwait
mov
xor
pushf
mov
fcom
leave
push
mov
push
xchg
gs
push
in
jnp
gs
repz
out
out
out
adc
insl
sub
icebp
inc
stos
push
sub
push
into
push
inc
shll
test
pusha
ss
mov
add
loop
cmp
cmpsl
xchg
lcall
sti
xor
adc
mov
inc
ss
pop
mov
lods
xchg
fidivl
repz
adc
subb
mov
or
int
or
fstl
or
mov
mov
inc
mov
xchg
mov
mov
inc
repnz
loop
jo
push
sub
rcl
jmp
call
dec
add
ret
or
hlt
mov
and
popf
scas
jl
cmp
cmovo
sbb
icebp
dec
in
jne
dec
push
add
inc
mov
dec
mov
je
out
mov
mov
dec
pop
cs
or
rolb
mov
pop
daa
mov
and
cld
dec
pushf
sbb
ds
mov
jl
sub
out
icebp
dec
xor
faddp
jnp
lods
in
add
mov
jecxz
xlat
clc
enter
xor
lcall
pop
je
sub
mov
cltd
xor
mov
mov
xchg
nop
fwait
lods
ficoms
dec
push
sarb
decl
cmpsb
fcmovnu
dec
test
daa
subl
mull
or
cmp
divl
mov
sbb
push
mov
clc
mov
jbe
or
pop
xchg
mov
push
mov
in
push
sub
aam
mov
inc
clc
outsb
xor
lcall
cmpsl
push
or
sub
in
mov
add
xchg
aad
jl
or
push
divb
mov
xchg
je
testl
js
add
scas
adc
cmp
test
sub
ljmp
ret
xor
sbb
std
or
cmp
sti
out
mov
mov
adc
ja
push
fwait
mov
mov
mov
or
jnp
in
das
jmp
flds
and
push
sbbb
mov
and
mov
jns
jnp
gs
push
scas
pop
cmp
sti
pop
push
fs
jmp
mov
lock
and
or
data16
lods
cmp
sub
jmp
leave
cmpsb
cmpsb
aaa
mov
mov
or
fnstenv
mov
inc
xor
out
addr16
fldcw
mov
mov
ljmp
scas
aam
inc
push
or
lret
nop
xor
add
adc
push
and
fmuls
or
and
movsb
mov
leave
fstps
rorl
clc
addr16
sub
pcmpgtw
std
jns
jno
sbb
mov
movsl
aam
ds
loop
loopne
add
rolb
repz
repnz
mov
inc
scas
mov
push
adc
repz
sbb
in
addr16
add
push
push
popa
lods
lea
daa
stc
sub
and
flds
pop
daa
jo
repnz
dec
popa
jno
lods
sti
inc
jecxz
mov
mov
mov
pop
push
pop
adc
test
add
jno
cwtl
and
dec
les
sub
cmp
or
leave
scas
or
fwait
cld
daa
mov
sbb
sbb
ret
inc
daa
loope
out
mov
xor
insl
sub
cli
cmp
jb
push
jb
clc
push
pop
into
in
xchg
xor
fisubl
push
not
imul
inc
fisttpll
cltd
mov
popf
out
and
out
ror
add
inc
pop
cli
out
and
das
push
jmp
cli
cmp
mov
fnstsw
fwait
into
notb
push
shrl
push
xchg
movsl
ds
sti
pop
inc
adc
call
stc
adc
fildl
ja
pop
movsb
enter
pop
out
cld
das
loope
pop
push
cmp
jnp
mov
outsl
mov
sbb
fidivrl
daa
push
rcrl
mov
add
scas
lret
pop
clc
int3
push
test
push
inc
jno
push
addr16
cmp
rorl
or
mov
and
dec
mov
ret
dec
dec
mov
add
add
icebp
mov
xor
loope
hlt
adc
enter
adc
dec
cmp
jge
add
icebp
enter
add
dec
pop
or
arpl
sbb
push
mov
mov
pusha
push
and
mov
test
fs
pop
push
in
mov
jmp
mov
pop
push
xor
test
test
xchg
out
ds
mov
das
sbb
test
gs
mov
movb
or
jge
rcll
insb
xchg
jo
add
addr16
pop
leave
cmp
inc
inc
push
pop
lahf
cmc
inc
cmp
les
dec
xchg
pop
fnstenv
test
cwtl
test
or
cmp
or
pop
push
jbe
mov
add
mov
sbb
adc
sub
insb
jecxz
xchg
push
jmp
sub
in
dec
adc
stc
xlat
push
iret
sbb
jne
mov
les
dec
and
je
fmuls
sub
sub
cmp
dec
out
jp
je
jo
mov
mov
jge
jno
add
inc
in
popf
shlb
cmc
dec
in
and
lea
outsl
cli
imul
scas
sbb
cmpsl
sbbb
jg
cs
sub
icebp
loop
jbe
mov
pop
jae
sti
shrl
mov
gs
or
xchg
xor
lret
mov
mov
icebp
es
or
movsl
or
sbb
mov
xorl
xchg
leave
xchg
sub
sub
outsl
adc
and
stos
sti
sbb
dec
cmpb
xor
cmp
push
xchg
jmp
and
push
testl
incl
jge
or
sbb
aad
push
imul
nop
and
mov
inc
and
add
sub
and
and
push
and
repz
xchg
xchg
aaa
inc
out
test
mov
add
rcrb
fwait
cs
dec
jb
push
xchg
xchg
push
insl
enter
pop
jo
push
insl
fadds
fiadds
adc
xchg
sbb
movsb
nop
mov
test
adc
loope
aam
jmp
mov
mov
cmp
dec
jb
jae
test
mov
push
pop
shlb
jmp
inc
ret
inc
mov
xchg
mov
add
into
inc
dec
ficomps
adc
dec
cld
pop
jo,pt
scas
push
push
cmpsb
out
cmp
sub
das
outsb
mov
inc
call
test
mov
adc
dec
sbb
push
xchg
sub
stc
or
out
mov
popf
adc
inc
jle
xrelease
call
in
enter
and
push
jle
pushf
aad
nop
xchg
out
dec
wrmsr
push
clc
sti
fldcw
cmp
xchg
jecxz
and
mov
out
dec
int
ljmp
or
cltd
inc
add
js
orl
push
lret
lret
imul
sbb
push
pop
adc
fidivrs
aas
or
inc
or
jmp
dec
xchg
repz
stos
lds
mov
iret
cs
xlat
fmulp
and
push
aad
xchg
shrb
loop
pop
sbb
stc
sub
daa
lcall
push
adc
je
mov
lea
hlt
mov
ljmp
dec
sub
jmp
jge
push
shl
fs
mov
adc
inc
test
xchg
jno
mov
mov
xchg
cli
cld
inc
div
jle
and
pushf
cmp
popa
cmp
sbb
xchg
fdivrl
jno
add
push
fbld
mov
or
aad
imul
fnstsw
pop
inc
mov
sahf
sbb
mov
fdivs
jp
cmp
cs
push
mov
push
mov
loop
jae
mov
scas
fimuls
dec
add
cmpsb
mov
add
pop
es
mov
xor
cld
adc
xchg
testl
sub
jg
imul
xor
je
rcr
and
xchg
mov
cmp
mov
or
push
lahf
rcl
xor
mov
sub
mov
sub
enter
xchg
ss
add
cs
jae
pop
jo
lods
add
pop
xchg
sub
jmp
aad
push
pop
jle
cmp
rorb
push
ss
pop
fadds
jmp
jne
pop
and
add
rcrl
outsb
or
fsubrl
mull
cmp
xchg
xor
push
pop
test
mov
add
or
cmp
stos
pop
cmpsl
jo
lods
jbe
jns
sub
leave
mov
xchg
sbb
in
sahf
adc
or
shrb
jo
popf
lods
clc
pushf
xchg
aam
outsb
add
mov
data16
jmp
pop
cmp
dec
inc
fstpl
add
push
lcall
and
movsl
push
sub
les
xchg
insb
stos
aad
stos
rcrb
xor
data16
xor
lahf
lds
pop
pop
dec
pusha
or
xchg
xchg
ret
mov
xor
pop
mov
repnz
dec
daa
mov
pop
pop
cmp
scas
lret
push
pop
pop
outsl
leave
test
std
pop
push
pusha
in
cmpsb
lock
sub
push
cmp
testl
adc
push
lahf
data16
jnp
dec
adc
xchg
in
jg
lea
pop
aas
jb
pop
out
xchg
mov
dec
pop
test
xlat
jbe
mov
inc
aam
jno
jno
mov
or
adc
mov
mov
mov
pop
subb
push
into
cmp
rolb
and
lods
hlt
jg
test
xchg
pop
and
dec
or
aaa
shr
aaa
xchg
insl
out
pop
rclb
jbe
jp
icebp
jge
dec
jno
xchg
jp
add
cs
mov
adc
xor
insl
fildl
mov
sbb
jg
lahf
push
pop
dec
push
cmp
test
jmp
mov
inc
fadd
fs
js
inc
dec
cmp
add
adc
sub
les
enter
adc
fcomip
xor
push
inc
out
outsb
mov
es
ret
dec
mov
lock
insl
add
ret
lcall
fdivl
data16
mov
jmp
outsb
inc
aaa
dec
pop
dec
sbb
jo
mov
fs
pop
mov
cmpb
jecxz
pop
or
std
inc
and
faddp
and
mov
mov
xor
rcrl
rcr
imul
add
int
pop
xchg
out
and
cmp
inc
in
fimull
sub
insb
adc
in
roll
test
fldln2
jne
das
stc
scas
mov
je
fstps
mov
pop
sbb
mov
pop
out
les
rclb
xor
mov
fadds
add
bound
xlat
aaa
jb
jge
imul
jne
loopne
sub
fs
lods
jp
xchg
movsl
movb
sub
or
pop
xlat
scas
ss
mov
cmp
add
cmp
inc
scas
out
add
mov
stos
pop
mov
inc
ljmp
notb
inc
jge
jo
es
mov
xor
pop
jmp
xor
inc
dec
push
and
mov
subb
sarl
out
divb
mov
mov
bound
icebp
mov
xor
pop
jns
shll
mov
jmp
xchg
aad
roll
sub
mov
sub
test
push
inc
pop
insl
and
pop
pusha
mov
fcoms
cmpsb
and
test
shl
add
imul
shr
jg
leave
and
ljmp
add
in
jb
adc
je
xlat
punpckldq
int
cld
or
cli
jecxz
sbb
mov
or
add
sbb
xor
mov
sub
insl
dec
adc
nop
iret
ljmp
xchg
pop
mov
inc
sbb
xchg
insb
jbe
scas
bound
andl
ret
leave
sub
sub
cmp
adc
ljmp
les
das
outsb
or
pop
jg
dec
aas
push
jecxz
negl
fimuls
fwait
mov
insb
jmp
shlb
sti
out
dec
inc
sbb
push
mov
sahf
push
sub
dec
add
add
sbb
les
mov
pop
xchg
mov
jl
out
inc
or
xchg
cli
fcmovnb
dec
rcr
mov
insb
xchg
popf
mov
add
popf
sbb
repnz
mov
sahf
jge
push
jp
in
pop
adc
mov
xor
pop
sub
or
pop
dec
nop
mov
outsl
in
cld
xchg
jnp
pop
mov
cmp
dec
pop
data16
sub
test
pop
fbstp
jne
dec
jmp
pop
sbb
cwtl
pop
xor
outsb
out
or
ss
icebp
add
loop
mov
insb
inc
xchg
pop
das
xchg
in
mov
xchg
and
dec
ss
rolb
out
arpl
cmpsl
dec
clc
popa
sbb
outsb
loopne
push
rol
xor
xchg
and
push
cmpsb
imul
mov
add
push
rolb
dec
testl
cmp
lock
es
lcall
mov
jae
cwtl
pop
xchg
lock
inc
fadds
cmp
int3
fldpi
push
daa
xchg
divl
push
enter
in
out
popf
test
fs
test
mov
jno
inc
cmp
pop
cmpsb
mov
cwtl
adc
mov
mov
sub
dec
jl
pop
cli
in
fsubp
jae
mov
iret
mov
xor
incl
sbb
ror
xor
push
adc
push
push
adc
pop
mov
lret
xor
xchg
mov
iret
sub
and
or
ret
lock
xlat
adc
lahf
loope
nop
add
pop
dec
dec
out
pop
mov
adc
in
jo
pop
out
inc
mov
stc
mov
mov
rcl
jno
adcl
ljmp
and
xor
and
fists
dec
dec
adc
pop
stc
repnz
jecxz
add
sub
insl
sbb
aam
lea
xor
lods
and
dec
out
repz
jle
push
adc
mov
or
mov
sub
int3
subb
out
mov
xchg
pop
test
sub
jbe
jge
call
pop
cmp
arpl
cli
jmp
adc
sbb
pop
inc
mov
jle
adc
jecxz
cld
cwtl
sbb
adc
lock
and
mov
cmpsb
mov
dec
decl
mov
scas
or
push
and
mov
or
popf
cwtl
call
seta
mov
subl
jns
inc
lret
into
out
xor
or
aad
mov
bound
imul
mov
cmp
scas
call
insl
sbb
inc
sbb
xlat
sbb
shll
mov
lret
or
ja
mov
std
jmp
push
loope
and
xlat
pop
or
iret
neg
sbb
jno
ret
enter
pusha
cmpsl
dec
sbb
outsl
orl
dec
popa
inc
sub
xchg
xchg
cmp
inc
xchg
sti
push
outsb
mov
ljmp
enter
add
outsl
jns
cmp
adc
mov
jno
test
xor
and
or
push
cmp
fstps
sbbb
jp
dec
push
out
inc
es
mov
lcall
xchg
dec
inc
pop
scas
adc
cmc
mov
dec
jecxz
xchg
dec
sub
push
xchg
cmp
loop
pop
xchg
sbb
cmc
xchg
lods
dec
xor
push
dec
popl
pushf
cmp
fwait
mov
pop
sub
scas
dec
jae
jl
jo
fcmovnb
in
div
hlt
jno
adc
js
cmpsl
sbb
cltd
insb
mov
sahf
push
mov
gs
pop
loopne
int3
in
loop
sarb
cmp
mov
and
mov
dec
std
pop
mov
stos
shrl
cmc
or
out
loopne
pop
pop
push
ret
inc
fisubrs
out
push
push
frstor
push
mov
cld
sub
inc
push
popf
jne
aaa
nop
add
outsl
add
jmp
inc
test
mov
xchg
mov
sbb
testb
inc
fwait
cmc
push
lret
jbe
aaa
in
sti
das
movsb
adc
push
mov
xchg
xor
or
or
mov
pop
xor
jbe
mov
mov
loopne
mov
adc
add
sahf
mov
add
push
in
mov
stc
sbb
jne
pusha
pop
ss
push
jmp
xchg
or
push
insl
repnz
popa
or
inc
aaa
cmp
test
sbb
push
mov
enter
ss
and
jmp
cmp
mov
lock
or
in
mov
xlat
cwtl
insb
call
std
sub
shrb
inc
idivl
xor
shlb
cltd
dec
idivb
jb
pop
iret
mov
push
daa
add
push
insb
mov
xchg
incl
or
mov
icebp
mov
or
mov
push
xchg
fnstcw
fsubl
out
int
fcoms
mov
adc
mov
addr16
clc
and
fyl2x
test
ja
jo
push
jp
cmp
test
imul
jmp
out
mov
adc
ss
and
popa
cs
adc
mov
pop
inc
and
popa
out
lock
lcall
fcomp
repnz
mov
addr16
sbb
or
pusha
mov
jo
or
shr
mov
nop
in
push
jo
rdtsc
int
xor
mull
cmp
cmp
jg
call
mov
jmp
imul
lret
lods
dec
fs
cltd
jmp
or
inc
push
mov
mov
push
rclb
lcall
loop
sbb
and
std
xor
adc
sub
mov
mov
imul
push
les
test
and
sub
pop
hlt
push
pop
out
aad
insl
clc
jnp
ret
adc
jae
mov
repz
jae
sub
jne
cmp
mov
insb
mov
push
in
push
ss
push
lods
out
pusha
sbb
push
xor
fimuls
mov
lock
pop
sbb
or
shll
in
lock
jecxz
and
mov
fwait
cmp
sbb
pushf
in
lods
add
sbb
push
scas
push
les
jno
scas
mov
push
push
mov
es
mov
and
imul
mov
cwtl
and
imull
dec
or
xor
xorl
xchg
mov
pop
xor
sub
outsb
jl
adc
jl
xor
push
lret
shll
cli
ss
xchg
add
sub
stos
push
bound
int
lods
adc
xchg
xor
pushf
out
leave
or
mov
mov
jae
adc
pop
icebp
fsubs
push
xor
mov
repnz
xchg
xchg
mov
loop
xchg
jmp
ss
js
xor
in
mov
push
cld
subl
push
icebp
jge
sub
mov
or
mov
je
gs
es
sbb
push
mov
ss
roll
cwtl
pop
jge
clc
xor
mov
movsl
jg
orl
xor
jo
es
add
xchg
dec
push
push
mov
push
mov
push
fisubrl
popa
lret
pop
xor
rol
xchg
mov
cmpsl
shlb
ficomps
mov
sub
jnp
mov
sub
jmp
subb
loop
mov
push
jl
jp
fs
and
jo
add
xchg
and
and
mov
cmp
push
mov
cmpsl
xchg
add
mov
mov
pop
test
ret
outsl
out
stos
push
mov
out
pop
movsb
jb
stos
sub
f2xm1
ljmp
dec
adc
sbb
add
mov
lret
inc
mov
xor
cs
inc
push
sbb
repz
int3
lahf
pop
aas
pop
adc
cmpl
lret
ljmp
out
stc
jno
mov
or
jp
sub
sbb
mov
xor
lcall
cmp
cmpsl
test
out
dec
lods
mov
dec
push
into
clc
cs
cmp
inc
sbb
hlt
pop
call
cltd
cld
pop
add
mov
mov
mov
rcrb
scas
dec
xchg
add
shll
jnp
repz
jb
lret
lahf
jge
dec
mov
push
cmp
paddd
add
jl
or
pop
sbb
cmp
stc
loopne
push
dec
stos
in
xchg
or
cld
adc
dec
ret
adc
cmp
push
pop
vandnps
lahf
pop
mov
outsb
inc
insl
hlt
cmp
jbe
sbb
and
lock
add
inc
imulb
addb
outsb
lahf
scas
mov
and
add
jae
dec
out
mov
sub
subb
or
sub
dec
mov
xor
pop
dec
jne
cs
dec
xchg
aam
mov
dec
es
mov
into
loop
jmp
fcoms
mov
test
shrl
and
fldenv
lods
into
das
inc
imul
push
mov
sub
push
add
loopne
ss
xchg
jno
movsb
es
push
stos
or
sub
and
mov
cld
lods
push
adc
xor
and
xor
inc
mov
xchg
sahf
push
lahf
out
push
cs
xchg
jmp
xchg
jp
mov
xor
repnz
push
dec
les
lods
jnp
dec
aas
in
pushf
mov
cmp
imul
jl
or
testb
xchg
out
daa
sahf
out
test
fxch
cld
inc
test
aad
call
mov
leave
bswap
mov
sbb
rol
sbb
mov
pop
icebp
mov
test
pop
add
stos
xchg
cmp
add
sbb
mov
jp
mov
adc
pop
cmp
push
andl
mov
cs
fisubl
loope
lahf
imul
or
sbb
push
fiaddl
sbb
dec
adc
mov
cmpsb
dec
shrb
stos
inc
mov
dec
dec
insb
push
push
dec
js
ss
int3
mov
fsub
xor
insl
js
lock
mov
push
adc
lahf
inc
jne
push
lret
mul
jne
je
int
icebp
lods
xor
insb
sbb
imul
push
cmp
push
and
xor
sub
or
cs
outsb
imul
push
jne
fcoms
add
pop
int3
lret
loope
sbb
and
sbb
sbb
scas
sti
adc
push
xor
outsl
outsb
or
mov
add
cld
addr16
add
sbb
lahf
sahf
pop
pop
clc
jge
push
pop
cmp
and
pop
push
repnz
mov
xchg
push
out
mov
loopne
mov
mov
fwait
pushf
mov
in
cmp
push
sub
inc
jl
icebp
sub
push
aad
fidivrs
lahf
mov
sbb
pop
mov
cs
mov
mov
out
in
scas
sbb
lods
sar
adc
cmp
push
out
int3
jecxz
sbb
movsl
adcb
jne
add
pop
push
jns
inc
cmc
cmpsb
jl
call
scas
mov
fs
fwait
rorl
xor
cmp
data16
jg
lret
icebp
sub
jno
xor
out
or
jo
inc
sbb
int3
nop
scas
or
sub
inc
adc
mov
out
xor
inc
sbb
idiv
stos
cmc
xor
xchg
ss
mov
jns
fsub
cwtl
repnz
cmpsl
sbb
xor
cmp
push
and
inc
push
xor
cmp
mov
push
mov
xchg
add
cwtl
lods
mov
sbb
jae
pop
cwtl
sbb
cmp
pmullw
dec
mov
out
ret
mov
jne
pop
sub
js
test
mov
and
sbb
add
pop
repz
out
xabort
xchg
or
fucom
push
int3
jnp
xchg
and
dec
sbb
lret
mov
sbb
xchg
mov
lahf
push
cmpsb
sub
out
cs
outsl
lea
add
lcall
xor
scas
pop
stos
sub
jl
cmp
pop
sub
jmp
push
les
adcb
cmp
xor
imul
or
jle
insl
cmp
jb
mov
xchg
int
jle
lds
xchg
popf
cwtl
cmp
pusha
sbb
in
in
pop
cmp
pop
or
push
push
jge
dec
mov
call
in
mov
aaa
pop
inc
add
mov
cmp
out
outsl
movsb
sbb
out
movl
mov
flds
pusha
bound
daa
sahf
ret
pop
cmc
cmpsl
xchg
lea
add
int3
rcrb
xlat
sub
pop
psubw
inc
lock
push
popa
push
xchg
out
pushw
pop
push
loope
xor
dec
sbb
xchg
and
sbb
in
fdivrp
add
das
xor
mov
sbb
pusha
sub
xor
stos
push
aam
clc
into
add
loop
lea
sahf
mov
pop
push
cli
dec
gs
sbb
repnz
test
and
dec
and
mov
push
stos
xor
and
notb
addr16
fbld
push
mov
rclb
jle
dec
mov
fisubrs
int
lcall
lahf
scas
repz
pop
jnp
in
add
bound
ret
lods
clc
mov
mov
xor
dec
inc
push
into
in
jne
mov
rorl
fnstcw
push
loope
ds
push
ds
movsb
mov
mov
or
xchg
mov
inc
push
sbb
aam
je
test
cmp
add
sub
jns
xchg
adc
je
stos
aas
cmp
lods
dec
sti
mov
sbb
loopne
imul
mov
insb
outsb
xorl
sahf
es
rorb
imull
inc
in
lods
lods
nop
je
orb
mov
jns
mov
mov
lock
ret
fnsave
icebp
daa
das
mov
std
mov
jbe
ficomps
outsb
xsha256
cmpsb
adc
dec
sahf
jb
mov
add
sti
lods
xchg
xchg
jle
jb
aaa
hlt
mov
js
insb
jg
and
jne
and
mov
into
mov
aaa
data16
xchg
and
xchg
push
jb
mov
fstl
sub
arpl
jl
add
scas
xchg
iret
inc
sub
jge
fisttpl
icebp
dec
hlt
xor
pop
push
outsb
sub
xchg
xchg
bound
adc
lods
inc
cmp
inc
sbb
test
imul
ljmp
cld
outsb
pushf
mov
ja
jb
loop
mov
imul
mov
dec
enter
xor
cmp
in
sub
mov
mov
in
jbe
mov
xchg
lea
xchg
dec
fwait
loopne
hlt
push
popf
push
in
aad
sbb
push
push
rol
jbe
mov
fnstsw
xor
jle
sbb
jge
aam
sbb
mov
xchg
in
push
mov
addl
clc
cwtl
gs
and
cmp
inc
xorl
mov
loope
mov
push
jae
pop
inc
cmp
in
je
addb
adc
inc
js
jl
jmp
insb
inc
jne
or
bound
popf
cmpl
adc
nop
shlb
test
rcrl
fisubl
jl
ret
cmp
test
or
mov
iret
fsub
mov
mov
call
jge
xchg
inc
mov
movsl
lcall
popl
or
lret
mov
pop
adc
mov
aad
ret
push
inc
aad
test
leave
xchg
sub
mov
pop
inc
xlat
aaa
in
jbe
and
sbb
mov
into
xchg
jmp
mov
jecxz
push
cmpxchg
sub
fldt
fsts
push
fmul
adcl
addl
jl
and
sbb
lds
pop
dec
mov
mov
sbb
dec
andl
jecxz
cmp
and
sbb
or
in
vxorpd
jb
add
daa
cmp
and
jecxz
dec
pop
ficoml
push
ljmp
out
cld
sbb
pushf
or
lret
in
pop
and
addb
sbb
push
add
ja
dec
jl
ficoml
aam
imul
jbe
popa
loopne
xchg
int3
dec
inc
sbb
testb
mov
aam
es
cld
aas
loopne
imul
jne
loopne
lahf
aaa
push
roll
adc
sbbl
pushf
sbb
inc
jmp
mov
pop
cmp
cld
outsl
loope
xor
fs
imul
cmpsb
jnp
je
aaa
outsl
jne
scas
xchg
out
ret
mov
or
test
inc
ljmp
andb
roll
dec
add
mov
jecxz
dec
sbb
adc
pushf
and
and
paddw
adc
mov
dec
lds
fmuls
lea
cmc
push
divb
jmp
mov
stos
inc
jne
dec
sti
insb
sbb
out
inc
mov
imul
movsb
xchg
jmp
aam
jns
iret
mov
into
popf
push
or
or
pop
xchg
adc
repnz
mov
cmp
or
ljmp
popa
cmpsb
xchg
out
cs
pop
mov
and
mov
cltd
sbb
and
xchg
push
outsb
mov
inc
adc
mov
xchg
xchg
divl
add
mov
ret
mov
push
xchg
andb
pop
mov
push
add
cli
pop
je
cmp
mov
pushf
xchg
addl
jmp
pusha
pop
int
ja
insl
or
jmp
add
mov
fsubr
mov
rol
into
pop
data16
push
adc
inc
popa
sahf
in
mov
sti
das
xlat
pop
fnsave
xchg
xorb
ficomps
mov
xor
mov
sub
push
and
adc
js
mov
adc
call
sbb
cmp
int3
push
dec
dec
mov
ret
ds
mov
cwtl
and
and
outsl
ljmp
sahf
sbb
inc
leave
inc
fdiv
ljmp
pop
push
rcll
pop
jns
jg
add
jo
or
lods
mov
daa
gs
xchg
repz
inc
in
es
dec
inc
js
cltd
mov
and
mov
pushf
xor
mov
movb
mov
popf
scas
jge
js
shrb
lock
out
sbb
pusha
inc
cmpsl
sub
cltd
sbb
jmp
cltd
mov
arpl
das
pop
mov
rcl
leave
cmp
nop
cs
xchg
sbb
imul
pushf
in
mov
xchg
out
into
mov
outsb
pop
xor
add
std
dec
sub
adc
cmp
daa
imul
xchg
mov
push
push
subb
inc
adc
outsl
cmp
loope
aaa
push
aam
loop
pop
mov
xchg
xchg
leave
aad
imul
scas
fwait
or
in
loop
dec
and
xchg
rcl
int3
and
jo
out
inc
fisttpl
inc
jmp
inc
pop
xor
lahf
daa
imul
inc
notb
fucomp
daa
pop
fistpll
inc
dec
test
mov
es
lea
rol
cmp
repz
xor
ret
jl
roll
jae
shl
dec
add
mov
push
mov
ljmp
and
out
pop
mov
push
test
neg
xchg
cmpsb
das
lahf
inc
sbb
or
or
mov
xor
nop
sbb
fistpll
add
imul
lahf
xor
xor
push
loope
mov
adc
sbb
pop
inc
cli
and
lahf
sub
clc
mov
sahf
lods
lahf
jmp
mov
mov
sti
cld
loop
push
xor
dec
movsl
popa
xchg
adc
ud1
data16
shl
divb
ret
adc
cwtl
andl
inc
insl
mov
insl
lret
add
mov
sbb
push
lock
mov
mov
pop
add
xchg
loop
push
push
movsb
adc
cmc
jb
pop
xor
ljmp
mov
out
or
pop
xchg
jg
jge
ret
pop
fldl
pop
cmp
dec
test
sub
movsl
sahf
fwait
cwtl
jne
and
add
mov
aaa
addr16
jbe
and
push
mov
or
scas
mov
lds
and
bsf
loope
push
icebp
cwtl
inc
cmovl
push
cwtl
aad
xchg
fs
mov
loop
pop
mov
jno
adc
add
inc
pop
out
outsl
in
and
xor
or
mov
addr16
sub
mov
insb
mov
mov
inc
jo
push
cmc
or
or
adc
pop
xchg
xchg
bound
int
imull
jne
xchg
push
sbb
popa
pop
fs
movsb
test
jp
jns
jp
sarb
mov
mov
jbe
push
pop
aad
inc
cmp
or
push
ljmp
sub
pusha
jmp
and
lahf
mov
cmc
jne
daa
movsb
add
inc
daa
jbe
je
rsqrtps
cmp
lock
mov
enter
xor
sbb
push
pop
cmpsb
xchg
cmp
ficomps
test
pop
inc
dec
or
test
shl
dec
xor
sbb
sbb
andb
inc
cld
data16
jg
adc
xchg
fs
mov
gs
dec
flds
popf
pop
psubusb
sahf
fs
fisubl
cmp
pop
aam
inc
adc
and
and
pop
xchg
dec
jb
inc
dec
mov
nop
mov
cmc
mov
adc
popa
inc
mov
mov
data16
xchg
ljmp
stc
data16
rorl
into
xchg
xor
sarl
lahf
jno
in
enter
inc
inc
data16
or
pop
add
pop
cmp
push
or
or
mov
fsts
dec
pop
movsl
jbe
repz
pop
add
pop
jbe
stos
push
inc
xchg
fsts
test
jns
pop
xchg
push
xchg
mov
mov
jae
pop
jo
enter
je
ja
movsb
jbe
xor
push
dec
repnz
std
jns
stos
push
xchg
lahf
dec
push
ror
dec
push
sbb
cmc
cmp
sbb
gs
cmpsl
push
ljmp
inc
push
lock
lods
sub
loope
test
sbb
inc
push
push
imul
insl
testl
test
sbb
cmp
inc
adc
sbb
and
insl
hlt
in
cmp
in
cs
aad
ret
sahf
sub
and
xchg
scas
cmp
in
pop
cmp
fs
inc
fisubs
mov
aad
stos
bound
inc
out
rolb
mov
or
dec
sub
test
xlat
es
lods
inc
outsl
mov
push
sbb
inc
cmp
ret
rcl
dec
test
add
cltd
mov
jnp
jmp
xor
xchg
inc
pop
pop
inc
mov
mov
or
mov
sub
mov
es
mov
push
xor
lret
mov
lock
and
int3
popa
mov
sub
sub
add
aaa
mov
imul
std
mov
mov
lret
mov
fdivr
outsb
lock
shll
jge
test
inc
adc
cs
inc
jge
jnp
cmpsl
xor
scas
sbbl
mov
dec
xchg
inc
jmp
sbb
mov
cmpsl
jecxz
sbbl
dec
ret
vpsrlvw
ljmp
add
jno
push
or
lret
rcrb
dec
imul
mov
out
jo
jmp
pop
in
jbe
sbb
fistl
mov
aam
sub
jmp
icebp
inc
or
out
fisttps
jne
adc
sub
fisttps
push
loope
sbb
xchg
fimuls
ss
or
mov
inc
inc
lcall
out
jl
sahf
nop
lods
jns
or
mov
ds
or
xchg
rol
insb
adc
stos
push
mov
in
lret
rcrb
xor
mov
adc
fists
sub
push
push
and
add
fstl
out
mov
ret
call
pop
jp
into
sbb
push
leave
ret
call
mov
test
cli
mov
sbb
cmp
data16
adc
jle
xor
adc
and
xor
enter
cld
jge
dec
sub
mov
jne
sub
in
call
and
aam
push
xchg
pop
cwtl
push
add
mov
les
cmp
jbe
adc
inc
mov
push
xor
movsb
repz
push
test
je
lea
aaa
cld
dec
jg
dec
jnp
jmp
mov
push
pop
in
hlt
mov
inc
xor
scas
mov
xchg
jne
inc
iret
push
push
inc
cmp
out
imul
sub
and
leave
imul
sub
lret
scas
xchg
popf
cli
bound
mov
outsl
pusha
xchg
inc
in
mov
test
dec
addr16
fwait
cmp
cmp
adc
push
movsb
aas
lahf
arpl
loopne
lret
addb
cmp
cs
xor
mov
add
jne
push
scas
xor
xchg
addr16
ret
std
add
push
les
inc
cli
inc
shr
mov
pop
nop
adc
push
mov
es
sub
add
xlat
shrb
xchg
jecxz
fsubs
aas
pusha
out
fidivrl
pop
mov
in
xchg
cltd
and
pop
jge
add
or
push
pushf
stos
int3
jg
mov
jl
loop
daa
cs
xor
sbb
jp
iret
mov
ja
xor
sbb
int3
inc
mov
lea
shll
and
stc
adc
pop
mov
mov
mov
add
and
das
mov
or
pop
daa
ret
adcb
mov
repz
mov
loope
pop
mov
mov
dec
pop
push
testl
xlat
xchg
mov
cmp
lcall
sub
jbe
mov
mov
sbb
cmp
jns
pushf
inc
insb
xchg
sub
int
xchg
int
xor
mov
out
mov
nop
jmp
xorb
sub
fwait
cmp
xchg
out
or
mov
scas
rorb
dec
inc
cwtl
push
xor
pop
loopne
loope
cmp
int3
loopne
std
pop
sbbl
jns
sub
mov
cld
mov
fsubr
mov
add
and
sub
cmpb
stos
loop
fwait
hlt
jns
cmc
test
iret
or
pop
adc
ds
fldl2t
les
lahf
movsl
dec
pop
scas
loope
push
imul
sub
sub
popf
adc
xchg
cltd
iret
lcall
cmc
cmpl
xchg
fcmovne
pop
inc
in
in
mov
arpl
ret
jo
mov
mov
push
add
loope
cld
inc
icebp
jg
loop
int3
out
push
into
or
mov
adc
fadd
push
inc
imul
inc
rcrb
sar
movsb
sub
stc
jge
out
negl
inc
fstl
add
cmp
lahf
sub
scas
push
aaa
and
js
bound
pop
cli
jns
lods
daa
mov
jp
mov
add
aas
cmp
enter
push
test
out
mov
sbb
mov
int3
rcr
sbb
pop
jecxz
out
push
aam
sbb
je
les
outsl
in
ljmp
in
mov
pop
xchg
push
mov
xchg
mov
popf
out
sub
repnz
dec
aam
loopne
mov
adc
cld
dec
xchg
sahf
sub
cmpsb
jne
push
pusha
repnz
push
gs
lahf
dec
aad
cmp
mov
outsb
js
mov
xchg
jl
call
lods
xor
inc
and
adcl
out
adc
rcll
jne
jg
xor
rclb
xchg
in
stc
leave
inc
mov
ret
inc
das
push
ja
mov
pop
xchg
adc
jne
mov
mov
jne
jns
fisttpll
mov
stos
or
mov
pop
or
imull
je
aad
jle
test
xchg
cmc
xchg
lahf
mov
and
dec
mov
fiaddl
mov
rcrb
inc
xchg
mov
rcl
mov
ret
cmp
cld
mov
in
adc
lea
loope
and
cmp
mov
lods
xor
xor
cmpl
pop
xchg
cwtl
mov
jae
jl
adc
pop
hlt
adc
jb
xchg
push
into
ljmp
and
call
out
jg
out
and
mov
pop
mov
or
push
pop
sub
xchg
insb
andl
fst
fs
xchg
mov
mov
push
mov
cwtl
leave
aam
pop
in
mov
jg
aam
or
fimull
bnd
bound
lods
adc
jge
imul
outsb
xor
fdivrs
pop
jl
mov
xor
leave
push
cmp
mov
xor
mov
sub
push
hlt
negl
push
adcl
jb
fcompl
adc
pop
fldcw
lock
jecxz
std
inc
jge
sub
sbb
dec
adc
nop
jl
test
pop
sub
push
addb
mov
lret
mov
negl
push
cmp
xchg
ds
subl
mull
fstpt
lods
aas
xchg
aad
cmp
es
lahf
dec
out
cmp
sbb
arpl
sbb
leave
jl
or
push
xchg
out
mov
rcrl
add
adc
in
movsl
ss
roll
test
sub
je
push
cmp
jmp
ffreep
lahf
jmp
out
call
imulb
negl
roll
xor
adc
sarb
insb
loope
test
and
stos
sbb
imul
mov
dec
testb
mov
pop
js
outsb
cmp
mov
aad
mov
jns
xor
ror
mov
outsl
out
movsb
imul
fldenv
out
sbb
sub
std
mov
pop
or
fstpl
mov
pop
dec
ret
adc
dec
ret
loopne
movsb
mov
jge
sbb
push
filds
sub
insb
rcll
dec
ficoml
mov
dec
push
es
dec
push
sbb
fnstcw
imul
sahf
push
cmc
fst
jp
es
xor
xchg
fildll
jb
sbb
fnstenv
js
xchg
movsb
in
hlt
iret
cmp
fnstcw
lods
xchg
lods
push
mov
int3
jae
test
dec
int3
jb
push
ljmp
inc
int
sub
rol
or
and
sub
sti
sbb
xchg
call
pop
mov
cmp
dec
jge
cmp
jg
push
xor
push
stos
lods
leave
imul
sbb
in
sub
cmpsl
xor
mov
testl
inc
test
ficomps
mov
icebp
pop
pop
pushf
loopne
js
pop
aad
lods
nop
out
shr
or
stos
add
pusha
inc
adc
xor
inc
adc
rcl
pop
push
popa
fistpll
loopne
stc
sahf
loope
in
notb
lea
sbb
add
cmpb
push
jmp
ljmp
nop
jns
cmp
out
cvtps2pd
clc
cwtl
das
and
lds
mov
sarb
movsb
mov
jle
sahf
adc
mov
mov
fidivrl
mov
pop
push
inc
mov
pop
xor
fwait
std
scas
push
in
inc
stc
pushf
test
lcall
push
mov
ja
cltd
xor
lret
aad
insb
fisubl
add
dec
push
outsb
mov
and
repz
aam
pop
adc
adc
test
iret
cmp
js
push
lahf
jge
mov
or
jg
ret
xchg
ficoms
inc
xor
shl
cmp
out
add
out
adc
fwait
cmp
fsts
scas
fwait
mov
fimull
jns
mov
stos
inc
cmp
into
cmp
rorl
es
insl
xlat
dec
shl
cmp
push
push
fiadds
gs
test
insb
cld
in
cmp
neg
js
sub
mov
push
sub
mov
movq
or
fbstp
xchg
push
add
push
clc
ret
inc
pop
xchg
mov
call
dec
cld
shl
lret
mov
dec
mov
add
movsl
mov
divb
push
ja
pushf
mov
imul
rorl
nop
mov
cli
xor
cmpsl
daa
pop
aas
mov
push
adc
push
hlt
shl
mov
movsw
push
shrl
or
jne
push
pop
jmp
push
outsb
mov
movsl
sub
aad
enter
out
les
adc
mov
lahf
das
xor
xchg
scas
and
or
in
cs
xchg
and
bound
xor
mov
pop
add
jo
cmpsl
inc
mov
out
loopne
mov
push
cmpsb
jecxz
lods
adc
out
mov
outsl
fcoms
cs
insb
mov
movsb
addr16
in
mov
scas
bound
jb
pushf
xor
mov
imul
call
mov
js
in
cli
cmc
mov
push
xchg
pop
in
cmp
mov
aaa
stos
movsl
sbb
pop
mov
push
xchg
decl
inc
rcr
gs
push
leave
ror
cmc
cld
xchg
dec
jg
dec
add
call
sbb
mov
stos
lahf
mov
or
fnstcw
loop
aam
mov
imul
push
jb
add
dec
adc
xchg
xor
mov
movsb
mov
mov
movsl
sbb
add
outsl
push
es
mov
jmp
stos
or
dec
insb
in
lret
mov
add
fbstp
add
add
sbb
push
inc
lahf
jp
xor
es
or
or
xchg
rclb
sub
loopne
adc
mov
or
sahf
sbb
inc
jns
push
fstl
xor
jl
mov
pop
xor
das
adc
dec
and
push
sbb
insl
in
lods
pop
orl
outsl
add
pop
in
xlat
xor
mov
outsl
subl
mov
test
adc
inc
rcll
iret
sarb
call
push
add
adc
mov
xor
inc
mov
insb
fisubrs
xor
popf
data16
mov
pop
cmpsb
ret
push
int
inc
fcmovb
push
imul
cli
push
xor
into
fnstsw
sub
sub
push
sub
out
frstor
or
sub
push
cmp
shlb
push
or
aaa
pop
stos
sbb
inc
out
jae
inc
xchg
shlb
pop
pop
sbb
test
jbe,pn
xor
lock
add
sbb
pop
enter
outsb
gs
pop
jns
into
sub
cs
mov
cmp
jo
fcmovnbe
mov
jecxz
fisubs
and
push
and
scas
xor
pop
mov
jmp
in
jecxz
rcrl
adc
ficoml
dec
sub
ljmp
xchg
jno
shll
test
sbb
pop
repz
push
insl
fsubrl
adc
xchg
aad
arpl
inc
jno
jmp
insb
ja
pop
push
or
scas
cwtl
or
add
push
popa
call
pop
int3
fcoms
mov
mov
mov
cmp
idivl
bound
jno
lds
mov
sub
dec
or
popf
lcall
inc
inc
stc
adc
jae
popf
xor
arpl
or
rclb
mov
es
in
mov
dec
enter
jge
jl
aad
and
dec
xlat
mov
and
dec
xchg
pop
sti
inc
lds
test
or
mov
pop
fs
out
fists
addr16
fldt
scas
fwait
mov
lods
iret
or
jns
pop
pop
aas
pop
lods
cmp
pusha
xor
fadds
aaa
rcrl
and
inc
add
or
mov
xchg
cld
out
std
aam
add
daa
cmp
adc
push
xor
dec
jb
mov
xchg
daa
cmp
sub
fwait
push
into
jmp
les
imul
push
mov
clc
xor
sbb
call
lds
fadd
cltd
inc
movsb
lock
sahf
cmp
in
mov
decb
or
adc
dec
pop
cmp
mov
mov
orb
std
cltd
pop
int
jne
inc
lds
xor
or
adc
inc
movsb
mov
lds
add
add
push
jne
fnstenv
adc
push
xchg
add
lret
andb
inc
pushl
insb
jae
push
mov
jp
les
jecxz
enter
shrb
test
mov
push
jo
push
add
ja
xlat
cmp
adc
arpl
xor
daa
iret
sbb
jns
test
adc
cmpsl
loopne
mov
adcl
rclb
or
add
cmp
pop
mov
cmp
xor
lret
jmp
pop
pop
mov
out
das
mov
popf
enter
inc
jne
rclb
adc
and
sbb
xchg
and
in
lahf
bound
call
mov
jns
js
in
adc
sub
loope
or
jae
jp
push
mov
mov
add
sub
inc
jo
gs
lods
add
add
and
mov
sbbl
int3
and
movb
out
popf
dec
mov
outsb
or
sub
ljmp
jmp
sbb
dec
jge
sbb
jno
adc
clc
sub
cmpsb
mov
mov
pusha
lds
sbb
test
cmpsl
movq
mov
mov
cmpl
dec
sbb
xchg
mov
jle
in
or
fildl
jp
xor
xor
lea
push
add
loop
lods
rcll
shll
mov
in
jecxz
add
ja
sub
in
fwait
lds
inc
jmp
pmaxsw
push
dec
icebp
lods
lods
pushf
jmp
sub
dec
push
ret
adc
cmp
sbb
mov
lahf
add
addl
sbb
jnp
ret
fisttps
std
sbb
insb
push
push
lret
or
call
cs
es
cmovno
push
mov
sub
push
mov
push
mov
dec
dec
cmp
push
fcomp
imul
icebp
sub
sub
das
xchg
inc
inc
add
dec
js
lods
pop
lock
mov
pusha
out
add
and
in
addr16
sarb
cli
push
out
testl
lahf
xor
outsl
xor
mov
dec
jecxz
dec
pop
or
std
lds
pop
test
xchg
pop
int3
in
xlat
xor
or
fsubrs
jge
loopne
mov
div
mov
push
push
adc
jns
shl
and
push
inc
loop
loope
inc
es
cmpsb
movsb
push
adcl
lods
add
data16
popa
aam
push
jo
add
xor
nop
or
and
dec
push
into
ss
cltd
jp
lret
loope
inc
daa
hlt
or
jge
shll
cmp
cmp
mov
cmp
daa
dec
je
jae
jp
adc
lcall
je
int
pop
popa
stos
icebp
add
inc
mov
sub
repz
scas
mov
dec
dec
cltd
push
pushf
pop
ret
out
push
sub
pop
stos
adc
in
fst
jge
jb
lahf
or
mov
or
and
inc
enter
dec
xchg
inc
jno
inc
cmp
inc
mov
jne
sbb
and
mov
mov
push
push
add
sbb
lds
js
inc
or
aaa
scas
movsb
sti
inc
lret
xor
ja
aas
adc
xchg
hlt
lea
adc
push
test
es
std
movsl
aaa
xchg
push
mov
mul
jb
cs
jg
subl
add
clc
jmp
jge
push
dec
ficomps
cld
cmpsb
jne
sti
cmc
sub
mov
arpl
and
jno
jp
outsl
cmpsl
jo
ret
and
push
mov
push
add
fbld
xor
push
cltd
mov
scas
or
xchg
addr16
add
iret
decl
mov
adc
lds
cmpsb
inc
or
mov
dec
pushf
js
push
fimull
sub
pop
cmpsb
cmc
ljmp
loopne
inc
sbb
and
cmp
xchg
jecxz
adc
bound
dec
jle
inc
notb
stos
pop
push
sbb
iret
lock
cmpb
je
cmpsl
scas
jae
int3
xchg
xchg
lods
es
adc
pop
and
or
sbb
out
movsb
dec
in
and
jno
fldl
fisubrl
mov
push
jnp
dec
xor
lret
push
cs
sbb
cmp
das
fistl
roll
cmpsb
fsubp
dec
mov
and
orb
in
pop
pop
sub
cs
nop
divb
js
pop
and
loope
clc
scas
mov
inc
cmp
out
sbb
ret
pop
pop
xlat
outsl
adc
scas
enter
lock
mov
aas
mov
decl
lds
jecxz
and
sbb
inc
std
into
fst
and
int
adc
dec
sbb
cwtl
sbb
adc
sub
mov
rep
repz
inc
fstpl
cmp
sub
jmp
gs
and
sbbl
out
jno
lds
sbb
inc
divb
add
movsb
imul
enter
lea
mov
fsin
sub
addr16
pop
mov
mov
aad
sub
push
dec
scas
mov
test
into
push
repnz
iret
mov
or
push
lods
aaa
jne
lcall
adc
insl
lss
xchg
clc
sbb
lahf
mov
leave
push
xorb
mov
jns
xchg
xchg
xor
dec
leave
cmp
cmpsb
xchg
fiaddl
addl
add
loop
xlat
xchg
stos
into
lcall
mov
mov
mov
stos
in
jmp
mov
jecxz
adc
cmp
popf
xor
int
add
or
or
inc
stos
cmpl
mov
lods
scas
mov
mov
xchg
dec
sbb
adc
inc
dec
xrelease
cmp
dec
pop
les
insl
xor
int
adc
dec
lret
out
mov
pop
stos
inc
mov
cmpsb
mov
sbb
jge
mov
insb
aam
inc
nop
push
pop
jmp
push
xor
pop
or
shlb
lret
and
daa
push
sub
sub
ret
cmp
xor
cld
jl
and
push
jb
xor
test
jnp
sbb
sub
mov
xchg
sarl
adc
xlat
pop
movsl
cmp
popf
mov
lcall
or
xor
outsb
push
enter
jbe
dec
sarb
jmp
push
scas
aad
idivl
xchg
push
dec
mov
stos
sbb
mov
lea
outsl
or
xchg
fptan
mov
push
lcall
pop
out
fcmovnbe
test
sbb
pushf
adc
fistl
hlt
add
lock
xchg
cmp
js
fimull
les
pop
mov
insb
mov
mov
dec
xacquire
sub
icebp
mov
and
cld
mov
pop
ret
jno
sbb
sbb
inc
sub
test
inc
dec
nop
dec
mov
push
pop
xchg
adc
stos
imul
shl
es
lds
pop
hlt
ljmp
scas
xchg
and
pop
pop
das
mov
enter
fsubr
push
lahf
arpl
cmp
imul
cmp
lock
sub
jmp
push
jmp
and
xchg
mov
jp
adc
mov
imul
and
mov
call
fidivrs
fninit
in
mov
add
jmp
sahf
mov
or
mov
je
sti
dec
cmp
adc
pusha
inc
mov
fiaddl
fsubrl
dec
insb
jno
adc
insl
push
fmull
jne
scas
xlat
adc
call
in
iret
dec
jne
fwait
cmpsb
test
push
je
dec
xchg
mov
push
decl
inc
test
loope
movsl
push
pushf
and
aad
pushf
mov
int3
test
stos
loope
outsb
jl
mov
add
sbb
clc
mov
pop
rcr
or
mov
pushf
sub
loopne
mov
pop
xor
cld
cwtl
ss
std
loop
lds
mov
dec
adc
inc
inc
fistl
sbb
xchg
pop
sbb
sahf
pop
cwtl
mov
mov
sbb
out
mov
ret
pop
push
or
mov
xor
xchg
sbb
dec
mov
mov
mov
dec
jne
inc
sub
movsl
int3
push
sbb
pop
xchg
mov
fldcw
jbe
jecxz
mov
mov
push
js
fiadds
pop
or
lock
mov
adcl
dec
call
sahf
mov
iret
sahf
das
cltd
jg
sub
sub
cmp
stc
xchg
inc
aad
jb
inc
out
adc
cmp
imul
repz
stos
das
cld
adc
adc
cltd
pushf
cmpsb
pusha
sub
dec
lahf
lock
jg
sub
cmp
adc
cmpsl
pop
pop
out
pop
into
mov
jnp
mov
hlt
cmp
pop
sub
imul
add
out
xor
add
pop
push
js
mov
adc
mov
push
jo
mov
push
or
xor
vpunpcklwd
jbe
jmp
cmp
pop
int
mov
mov
idiv
push
aad
adc
rcll
out
push
les
or
or
push
lahf
sti
faddl
repnz
mov
aad
jg
mov
faddl
jbe
jle
mov
mov
loope
nop
mov
arpl
dec
xor
lahf
insl
outsl
add
cmp
leave
lret
inc
pop
sarb
dec
je
test
mov
aaa
mov
and
scas
or
push
lahf
jns
imul
into
sbb
adc
ss
cmp
enter
test
out
xchg
cmp
dec
jb
jl
orb
or
les
xchg
add
sbb
jp
cli
pusha
outsl
mov
pop
mov
sub
fstl
mov
pop
lds
ja
sarb
jl
lds
mov
pop
lcall
add
lds
jl
fisttpl
push
mov
lahf
sbb
jo
fcoms
jno
pop
xor
test
lock
sbb
cmpsl
clc
lret
push
outsb
cmp
push
pop
sub
pop
test
pop
lods
xchg
jo
loopne
adc
daa
jb
jb
push
insb
push
inc
fidivs
cmp
test
sbb
repz
das
aad
loope
push
pop
aas
xchg
scas
lcall
mov
dec
xor
xlat
dec
mov
mov
outsb
sbb
xchg
prefetch
dec
or
sbb
outsb
fdivs
mov
pop
lock
mov
fidivrl
bound
mov
insb
dec
test
jns
outsb
dec
cmp
sbb
xchg
popf
int3
nop
sbb
mov
and
punpckhbw
dec
cltd
call
imul
jge
lret
lea
and
push
ficoms
call
ret
or
mov
add
sbb
lods
leave
inc
dec
enter
test
jae
out
lods
sub
xchg
test
jmp
imul
xor
lahf
inc
xor
scas
sub
in
rcll
test
repnz
add
pop
pop
pop
mov
into
push
mov
mov
xchg
mov
mov
pop
popf
mov
incl
fcmovb
jo
or
lahf
cmp
sbb
mov
test
push
sbbl
push
add
sbb
pop
push
mul
sar
and
rorl
movsl
sarb
cmp
pop
xchg
cmpsl
pusha
xor
mov
fcmovbe
mov
shll
sbb
mov
xchg
xchg
int3
lret
rorl
inc
in
inc
add
mov
inc
sbb
mov
sarl
outsb
cltd
push
out
out
xlat
cmp
rcll
sbb
jecxz
and
test
mov
mov
and
cmp
outsl
push
inc
in
clc
push
lret
mov
int3
jmp
fld1
icebp
mov
mov
jnp
cmp
jg
js
add
and
xchg
sti
mov
mov
jl
jno
fisubs
push
popf
xor
jb
lcall
fsubrs
or
sbb
fcom
mov
dec
icebp
push
and
loop
fcmovnbe
addr16
jmp
mov
mov
inc
dec
imul
dec
filds
mov
orl
bound
or
add
jnp
mov
mov
mov
and
fadd
jmp
dec
jmp
out
test
cmpsl
fs
adc
inc
or
add
jge
push
popa
dec
rcl
dec
dec
ret
cltd
mov
and
push
mov
adc
out
mov
in
into
das
dec
pop
enter
lret
xchg
clc
mov
fsubp
daa
or
adc
pushf
xchg
cmc
loop
xor
pop
mov
js
inc
fsts
add
lock
push
mov
xchg
pop
xchg
adc
jne
fdiv
mov
scas
push
daa
xor
xor
lods
dec
popf
outsl
mov
pop
mov
cmp
popf
inc
ss
jmp
mov
or
jae
sbbl
mov
and
in
clc
pushf
dec
nop
mov
outsb
loopne
jno
pop
jns
out
push
xchg
ret
xor
mov
mov
adc
js
sti
xchg
dec
rorb
rcrb
ficoml
lock
jl
out
push
pop
movl
sub
mov
xchg
xlat
mov
xorl
cmpsb
enter
sub
popf
lds
test
imul
mov
xchg
sbb
cli
dec
addr16
sub
leave
scas
or
movd
fsubl
cmp
jl
xor
fnsave
push
jae
lret
out
mov
movsb
cs
insb
xchg
add
stos
xorb
test
cmp
jecxz
mov
arpl
insl
cmp
push
arpl
movsl
fsubrl
mov
fldcw
or
adc
aam
test
mov
inc
xchg
xorl
cmpsl
push
sti
pop
mov
mov
loop
pop
push
test
mov
sub
loope
push
shl
enter
mov
icebp
mov
xor
jp
stos
adc
sar
faddl
ret
lods
or
push
push
sub
inc
fpatan
push
mov
pop
notb
ret
xor
xor
push
negb
sub
xchg
lret
pushl
dec
add
test
leave
push
mov
inc
inc
mov
test
and
mov
push
ficoml
addl
aad
outsl
push
popf
xlat
int3
notl
push
jecxz
mov
jp
jae
cwtl
cmpsb
aaa
inc
sub
aas
test
mov
ljmp
adc
cmc
fstl
stos
xor
hlt
xor
sub
repz
dec
xor
loopne
push
add
add
xchg
xor
popa
leave
lds
std
addr16
cs
jb
mov
sub
fsubs
sti
add
mov
push
stos
out
enter
fwait
add
testl
movlps
loop
scas
mov
addb
cli
dec
sbb
cwtl
rol
insl
int
cmp
cmpb
xlat
cltd
jo
adc
pop
pop
sahf
sbb
jae
pop
jecxz
jmp
pusha
xor
out
inc
mov
or
loop
xchg
or
or
sar
daa
mov
xchg
test
jg
sub
xchg
inc
add
data16
call
into
jge
xchg
pushf
lea
pop
cmp
repnz
sub
pextrw
jge
loopne
and
mov
jnp
jb
mov
lcall
push
jae
mov
push
je
xor
push
aaa
sbb
lret
push
pop
or
cmp
mov
fisttpl
loope
adc
cmc
or
out
inc
aaa
xchg
sub
cmpl
mov
rorb
add
fistps
cmp
scas
mov
sbb
rcl
cs
mov
pop
sbb
push
addl
and
pop
subl
pop
ffreep
pop
cwtl
inc
adc
mov
push
es
dec
imul
push
inc
mov
mul
push
xchg
or
ret
xchg
icebp
pop
shlb
stos
mov
adc
shlb
popa
cmp
mov
mov
leave
sbb
mov
pop
inc
sbb
pop
ret
outsb
inc
push
dec
xchg
xorb
mov
lahf
pushf
pop
mov
sbb
xchg
imul
loopew
jl
push
ja
jno
mov
test
movsl
dec
int3
and
cmp
lods
inc
scas
daa
loope
inc
inc
sub
sbb
lods
xor
xchg
push
das
mov
fcoms
mov
mov
sub
dec
inc
ja
outsl
pop
or
mov
jne
into
nop
mov
xchg
xor
cmc
mov
loop
insl
roll
dec
dec
dec
mov
xchg
nop
mov
imul
push
ret
cmpb
inc
sub
mov
lcall
in
clc
dec
mov
cmp
dec
sahf
aad
js
in
and
xchg
inc
push
es
fcoms
lods
push
out
sti
sahf
andb
and
es
sub
push
push
andb
pop
mov
ja
cmp
jecxz
fcmovb
clc
je
cmp
adc
add
pop
inc
rclb
or
jns
test
ss
fldl
xor
pop
jnp
add
cld
add
xchg
xor
or
dec
sahf
test
out
cmp
cmp
push
sbb
ljmp
enter
gs
mov
shl
sub
jno
shrl
ja
jbe
dec
lcall
movsl
sub
fmul
xchg
imull
and
pushf
xchg
pusha
scas
gs
outsl
sbb
aad
pop
lret
int
push
int3
xor
dec
out
adc
inc
js
xlat
jbe
cmpl
mov
jne
adc
pop
adc
and
jae
push
out
cwtl
movsl
cmpsl
pop
iret
call
or
icebp
sbb
xlat
aas
and
orl
rcrb
adc
mov
mov
aam
cwtl
sub
icebp
popa
int3
push
fnstenv
mov
sub
fcompl
pop
jg
repnz
pop
hlt
xchg
xchg
sbb
lock
incl
push
mov
aad
popf
hlt
sbb
adc
int3
sbb
mov
mov
mov
sub
mov
cmp
nop
pop
in
mov
popa
push
bound
dec
pushf
jno
jb
or
sbb
mov
inc
dec
add
loopne
cmpsb
sub
pop
sub
dec
sub
mov
dec
mov
outsb
pop
in
add
push
pushf
mov
lret
jp
inc
sbb
int
sub
or
pop
in
push
xchg
aam
out
sahf
pop
es
xor
aas
push
das
pop
mov
adc
mov
cmp
int
stos
sub
cmpsl
inc
sub
jecxz
leave
fucomi
mov
push
arpl
lock
jl
sar
lea
addr16
cmp
outsl
mov
and
aaa
add
rorl
push
sbb
enter
sbb
sbb
xor
dec
daa
sbb
dec
cmp
push
aam
push
sti
jnp
mov
pop
push
mov
pushf
or
and
jmp
mov
pop
ds
imull
jo
dec
loopne
lret
push
push
loop
in
jnp
xchg
sbb
lods
cli
dec
pop
cmp
leave
fs
pushf
push
xor
add
and
jbe
mov
add
movsl
adc
cltd
fwait
inc
ret
inc
dec
movsb
jb
inc
mov
push
adc
mov
dec
js
les
loop
loope
adc
jmp
mov
out
add
push
pop
imul
push
out
inc
pop
mov
push
ja
mov
adc
adc
push
std
push
aas
adcb
leave
inc
adc
mov
jp
hlt
push
dec
push
fcmovbe
lcall
pop
pushf
xor
xor
icebp
dec
xlat
lret
inc
pop
pusha
cmp
inc
and
hlt
dec
hlt
jge
vmovss
adc
push
popa
and
std
sub
inc
add
add
xchg
std
movsl
or
dec
xchg
or
jl
pop
les
std
test
loopne
dec
fbld
fcoml
cmp
icebp
outsl
mov
cmp
xlat
jg
and
lods
daa
dec
mul
sub
inc
je
imulb
xchg
nop
idiv
push
xchg
xchg
outsl
icebp
xchg
pop
push
or
rsm
cmp
push
xor
pop
leave
mov
aas
and
mov
sahf
imul
mov
stc
dec
or
in
fiaddl
neg
popf
dec
add
loopne
cmp
mov
lds
mov
aam
sbb
dec
insl
push
sub
xor
out
add
push
fwait
scas
jge
in
loop
push
insl
aaa
jmp
lock
dec
les
sbb
and
cmp
jb
cmp
sbb
mov
mov
stos
mov
insb
in
pop
leave
xchg
mov
inc
jne
or
bound
inc
mov
fprem1
mov
xchg
xor
jge
mull
cmp
pop
adc
pop
jo
pop
insl
stos
imul
jg
and
inc
stos
xchg
ret
push
pop
xchg
rclb
lods
lock
pop
jne
lock
addr16
cmc
sbb
popf
xor
cmpsb
push
int
fsubs
in
fs
in
mov
or
imul
inc
aad
stc
mov
lds
mov
jmp
xchg
shr
mov
inc
inc
js
cmp
lods
or
scas
mov
mov
in
mov
push
lods
fnstsw
jecxz
jnp
out
bound
decb
or
ss
xchg
dec
xor
cmc
xchg
sub
test
dec
adc
push
test
dec
cld
cmpsb
stc
fcmovnbe
aas
mov
sbb
popa
cmp
daa
mov
pop
mov
or
call
mov
push
rorb
dec
mov
lcall
inc
dec
repz
out
fdivrl
jo
dec
fisubs
fs
dec
cmp
dec
pop
aaa
add
dec
push
fs
inc
xor
loope
push
bound
out
jo
mov
imul
or
enter
mov
inc
xchg
in
faddl
pop
pop
rcll
jo
jge
cmp
push
pop
lods
imul
es
in
movsl
pushf
push
adc
or
popf
pop
pop
filds
out
stc
icebp
scas
scas
cmp
or
in
xor
jne
lea
data16
mov
pop
inc
enter
stos
mov
mov
xchg
aaa
mov
insl
shlb
mov
push
sarl
rclb
shll
pop
sbb
movsl
dec
or
addr16
xor
lahf
sub
ret
mov
arpl
mov
sub
adc
test
pop
int
lock
jp
lret
stos
ljmp
loop
inc
fcom
mov
shr
fstpl
lret
sarl
dec
rolb
adc
jne
in
cmpsl
pop
enter
sub
mov
mov
mov
out
aad
cltd
imul
es
cmp
xlat
inc
lcall
shrb
bnd
push
int3
push
push
ret
xchg
clc
inc
and
pop
icebp
cmp
pop
inc
mov
lea
xor
jb
xchg
ljmp
pop
or
add
and
shll
sarl
inc
movsl
and
outsl
mov
jo
sbb
fs
fneni(8087
js
fwait
pop
rcrb
ja
ss
pop
xchg
jecxz
pop
sahf
in
pop
mov
enter
or
fdivl
subb
jg
scas
mov
mov
xor
aam
sarl
in
inc
xor
sub
push
rclb
mov
mov
xor
cmpsl
insl
lods
xor
mov
packsswb
add
and
mov
jne
pop
xor
jl
loope
pop
test
jnp
aaa
xchg
cmp
adc
sbb
int3
lret
addb
jmp
outsl
jns
cmc
push
or
mov
in
loopne
repnz
inc
inc
pusha
js
pop
mov
push
cmp
xchg
jno
mov
mov
mov
add
push
repnz
jle
stc
clc
jmp
ds
jmp
pop
popa
pop
ljmp
int3
adc
shlb
or
fisubl
lods
adc
out
fsubs
push
lret
lods
xlat
imul
xchg
ss
push
outsb
jmp
xchg
mov
scas
nop
xchg
notb
sub
popf
mov
jo
movb
imul
lods
cli
jns
stos
lcall
inc
ret
xchg
cli
sahf
sub
mull
and
push
sbb
test
rclb
rcrb
dec
inc
sub
pusha
std
pop
add
dec
movsl
clc
add
arpl
mov
sbb
fs
gs
jns
dec
pop
subb
jle
aad
rcll
stos
lds
shll
mov
sbb
jp
push
adc
in
push
pop
mov
ret
js
repz
xchg
lahf
ret
and
sbb
in
mov
and
and
and
xor
or
mov
addr16
imul
xchg
lea
pop
aam
cmp
arpl
and
add
push
data16
gs
add
cld
scas
ja
push
xchg
mov
pop
imul
sub
cmp
mov
xor
xor
sub
push
or
inc
fs
pop
ret
push
mov
cmp
mov
aaa
mov
fildl
imul
je
fildl
ljmp
add
inc
adc
int3
fs
cmp
pop
movsb
xchg
in
cmpsb
addr16
dec
inc
das
lds
jmp
stos
fldln2
jp
adc
repnz
pusha
shr
je
xchg
lea
mov
xchg
cmp
fcmovne
jnp
aad
add
test
jmp
jae
pop
push
test
push
push
ljmp
pushf
push
iret
xchg
pcmpeqd
mov
fsubp
lret
loope
shr
inc
lret
rcll
cmp
sub
fsubl
mov
popf
dec
push
cltd
xor
push
mov
push
dec
cmc
aam
dec
lret
stos
cmp
sub
mov
rcl
sub
arpl
adc
mov
ljmp
jb
leave
pop
inc
pusha
or
xchg
call
push
lahf
pushf
mov
add
add
bound
in
lret
andps
push
sarb
subl
int3
push
arpl
fs
pop
mov
xchg
outsl
adc
sub
mov
cmp
sub
xor
mov
pushf
mov
lock
rcrb
in
push
fs
test
scas
pop
xor
jne
lods
pop
data16
fbstp
mov
mov
mov
loopw
out
inc
clc
adc
call
push
lock
sbb
push
aas
jle
lods
shrl
mov
push
xor
xor
mov
push
cmp
fildl
movsb
xor
xchg
jbe
sahf
inc
jae
pop
push
pop
mov
jl
jbe
out
adc
lea
lods
xor
jp
pop
sti
lret
decb
sub
das
fwait
stos
out
mov
or
mov
mov
inc
sub
push
and
push
mov
icebp
ss
cmp
mov
test
aam
insl
mov
mov
xchg
mov
popa
jmp
ja
mov
out
cltd
sbb
aam
aas
xchg
js
lds
popa
test
roll
xchg
dec
jge
cmc
jg
fsts
pop
cmp
mov
push
sub
push
or
test
dec
sub
jmp
sub
inc
lods
sbb
mov
pop
lret
adc
enter
mov
jb
mov
vrsqrtps
or
xchg
pushf
xchg
scas
lret
xchg
andl
pop
dec
sub
lock
adc
insl
xor
loopne
mov
sbb
clc
xchg
jge
pop
sub
xor
push
shrl
pop
inc
mov
cld
inc
icebp
mov
or
pop
pop
enter
test
cmp
sbb
lods
jle
sub
addr16
lcall
pop
add
add
scas
push
sbb
lcall
repnz
enter
sbb
xor
aad
push
cmp
cmp
jae,pn
xchg
ret
push
sbb
gs
movsb
and
fnstcw
mulb
jbe
lods
jno
daa
nop
jne
clc
ret
adc
addr16
dec
xor
dec
ljmp
xlat
push
sub
fnstenv
lret
push
out
je
outsb
popa
xchg
inc
pop
mov
out
and
sub
test
scas
jle,pn
dec
cmp
dec
pop
sub
stc
pop
jnp
arpl
ret
xor
cmp
pop
inc
add
stos
in
in
sahf
jecxz,pn
push
fimull
jle
loopne
or
in
xchg
inc
push
sbb
inc
out
push
push
lock
push
imul
cmp
lret
loop
mov
mov
lret
xchg
stos
dec
dec
mov
mov
stos
xor
std
mov
xchg
jno
and
push
pop
outsl
loope
fildl
pop
inc
dec
ds
cwtl
jnp
data16
xchg
dec
xor
jb
outsl
jns
mov
shlb
xchg
xchg
sbb
and
aad
jg
ret
stos
add
out
sub
push
inc
aam
clc
push
test
mov
aaa
fisubrl
ret
lea
sbb
push
jg
push
xchg
in
mov
inc
scas
cmp
mov
sub
mov
jae
cmc
mov
lds
adc
mov
pop
addr16
nop
je
and
inc
dec
mov
push
out
cmp
cmp
cmp
mov
push
subb
pop
and
shlb
jmp
iret
nop
test
mov
xorb
add
loop
repnz
push
out
mov
sahf
int
adc
push
and
aaa
push
stc
cmp
adc
mov
adc
push
push
sub
insl
cwtl
add
and
lods
call
aas
mov
inc
and
in
cmp
mov
dec
outsl
inc
adc
out
cmpsl
aad
xchg
jbe
test
push
pop
fsts
leave
mov
xchg
mov
dec
sub
dec
dec
inc
pushf
mov
jb
push
stos
insl
xor
fld
or
adc
inc
cli
jne
dec
loope
inc
and
sbb
cmp
mov
test
in
jp
mov
xchg
mov
sbb
xor
nop
je
das
mov
sti
incb
roll
jle
sub
pop
pop
cmp
adc
jae
and
ljmp
xchg
mov
mov
mov
adc
andb
xor
mov
repz
mov
outsb
arpl
into
dec
adc
insl
mov
xchg
leave
pop
imul
subl
popf
roll
out
xchg
dec
stos
fwait
add
adc
in
mov
mov
lods
mov
adc
mov
lods
cmp
into
aam
mov
mov
repz
cmpsl
in
sarb
xor
movsl
push
push
sti
testl
dec
jns
jg
push
mov
mov
fadds
ss
into
mov
pushf
bound
push
in
jge
jg
aas
jbe
jg
icebp
and
or
addb
cmp
and
sti
popa
cmp
mov
adc
push
push
pop
mov
xchg
mov
adc
enter
test
or
jnp
outsb
sbb
movl
sub
out
cld
jge
jmp
int3
rorl
outsb
jmp
sub
shl
loop
adc
mov
mov
jmp
popf
xor
add
stos
adc
in
xor
mov
not
lcall
mov
mov
cmpb
sub
sub
mov
mov
in
pop
iret
les
inc
repnz
and
dec
js
pop
jg
out
xor
push
xor
pop
jecxz
mov
fdivl
push
push
mov
shll
add
lcall
or
xchg
xlat
mov
call
bound
gs
test
fcmovne
pop
nop
xchg
cmc
je
inc
adc
icebp
in
cli
pop
loop
jg
mov
xor
adc
fdivrs
mov
js
dec
pushf
add
ljmp
nop
jo
stos
xlat
mov
push
cmp
jg
jmp
pop
push
dec
ljmp
jbe
adc
sbb
mov
stos
mov
jns
popf
icebp
inc
push
add
sbb
arpl
or
icebp
aam
imul
add
push
leave
push
lock
aad
xchg
sbb
adc
jecxz
pop
cmp
push
or
test
dec
mov
mov
jae
loop
mov
inc
mulb
enter
mov
aas
mov
and
cwtl
repz
cltd
inc
push
cld
jp
ja
das
and
jae
adc
inc
outsl
sub
orb
jmp
testl
lcall
test
in
jns
out
clc
inc
dec
ja
dec
aad
into
dec
sahf
loop
adc
movb
subl
leave
mov
xchg
xchg
push
cmp
adc
repnz
mov
sub
jnp
out
stos
and
cmp
sbb
inc
mov
mov
test
int
scas
insl
daa
and
and
arpl
cmp
xchg
pop
imul
subl
repnz
in
lock
shufps
push
sub
movsl
lcall
cmc
je
dec
mov
outsb
push
lock
cld
sbb
push
cmp
rcrb
sar
aad
push
mov
push
aam
mov
cwtl
loope
or
in
sub
jecxz
sbb
or
xor
roll
pop
subl
arpl
ror
pop
lods
or
dec
imul
jb
mov
int
jne
dec
mov
mov
mov
sub
adc
pop
pushf
push
adc
ret
jno
std
sbb
sub
hlt
or
pop
dec
and
test
ficomps
ret
mov
pop
inc
sbb
dec
mov
mov
pop
orl
test
add
push
scas
mov
lea
mov
scas
pop
adc
sbb
mov
jge
mov
mov
or
inc
sub
stos
movsl
mov
jnp
daa
nop
xchg
hlt
or
jne
dec
sbb
push
lcall
sbb
movsl
xchg
adc
std
ds
and
mov
dec
mov
cmp
pop
jne
xchg
jg
sub
or
push
out
inc
outsl
insb
into
rcr
push
xchg
test
sbb
cs
out
pop
sbb
dec
inc
and
cwtl
push
add
fldcw
and
arpl
or
cmp
mov
mov
push
lods
add
mov
sbb
pop
sbb
push
jg
insb
push
neg
cltd
rorl
sub
outsb
dec
pop
pop
aam
inc
cmp
mov
ret
mov
rorl
cmp
int3
mov
jg
and
ret
xchg
les
fstps
je
cmovno
aam
nop
enter
aad
push
bound
mov
mov
ja,pt
xchg
and
mov
xchg
sbb
push
movsl
pop
repz
insb
or
cwtl
out
lods
scas
pop
test
int
aad
mov
pop
dec
fidivs
cmp
or
shrl
xor
cmp
cmpsl
fs
stc
xchg
sub
addr16
insl
icebp
pop
xchg
loope
push
inc
test
xchg
in
call
fcompl
jns
scas
pop
mov
mov
sti
clc
popf
push
sar
sub
std
inc
add
in
test
jns
cmp
bound
adc
js
cmp
repz
pop
mov
cmpsb
dec
ds
adc
push
sbb
jmp
pop
push
inc
adc
jl
add
out
xor
sahf
out
fcompl
sub
pop
sti
int3
rcrl
sbbb
jle
rclb
out
out
pop
push
leave
jae
or
or
les
or
mov
das
fnstenv
adc
punpckldq
fmull
sub
cli
inc
rorb
jp
scas
push
mov
push
lea
xchg
sub
shl
adcb
add
jecxz
sahf
pop
and
mov
cli
mov
rorb
add
negl
add
mov
xchg
rcrl
push
stos
gs
popa
sub
or
mov
inc
jmp
lods
push
sbbl
sub
call
gs
or
dec
fs
ret
leave
xlat
or
repnz
jo
cmp
add
int3
push
add
jp
es
mov
or
adc
ret
outsl
out
mov
inc
push
lret
add
adc
push
push
cmp
sti
fwait
xor
jl
in
loop
sti
jae
cmp
cltd
xlat
addr16
add
ja
xorl
nop
mov
inc
mov
cmp
xchg
arpl
add
repz
cmp
stos
shrl
lahf
push
test
pop
vpsrad
movsl
xchg
mov
cmp
xor
loop
int
js
fwait
pop
adc
into
lret
xor
sub
sub
push
scas
mov
add
stos
pop
pushl
cmpsb
fistps
lcall
cmp
sub
mov
inc
test
sub
out
or
mov
loope
jno
hlt
adc
xor
mov
dec
js
dec
movsb
clc
or
push
fldt
stc
iret
cmp
les
push
or
pop
adc
sbbb
in
inc
pushf
mov
fisubl
jns
ror
lea
add
xchg
test
daa
sahf
mov
or
fdivrl
dec
inc
jb
or
fistps
cld
or
mov
rclb
negb
dec
mov
int3
cmp
orl
pop
pusha
in
inc
fbld
jnp
cmc
movsl
cwtl
xchg
call
addb
stos
scas
shl
repnz
mov
dec
pop
std
inc
xchg
pop
out
clc
mov
add
add
inc
repnz
aas
sub
xchg
mov
cld
sub
sti
push
fsubl
insl
add
dec
cmp
pavgw
pop
nop
adc
sub
push
mov
das
aas
cli
sbb
cmpsb
mov
push
jle
inc
jmp
xchg
inc
sbb
cmc
adc
mov
sub
sti
das
add
push
mov
sub
js
mov
cmc
jle
pop
cmp
and
cmpsb
sbb
or
cmp
es
cli
mov
jg
subb
movsb
mov
dec
popf
sub
adc
aas
mov
and
inc
fsubl
sub
loopne
mov
rorl
mov
mov
xchg
shr
mov
stos
sahf
mov
fsubrl
dec
mov
hlt
xlat
test
lods
mov
filds
scas
inc
cmp
cmp
bound
ret
cli
jne
push
adcl
into
repnz
sbb
xchg
adc
out
jl
jbe
pop
sahf
mov
lds
inc
mov
mov
lods
jnp
outsb
cmp
into
dec
lods
jne
movsl
test
out
pop
aad
and
shl
aad
xor
mov
and
pop
inc
aad
add
xor
xor
cmp
cmc
insb
mov
or
es
xchg
imul
cltd
aad
ljmp
mov
xchg
popa
xorl
jp
mov
in
push
dec
pop
fistpl
cli
repnz
rolb
bound
stos
shll
dec
ficompl
cmpsl
inc
lods
daa
sbb
mov
pushf
rcr
sbb
xchg
test
jb
scas
repnz
pop
push
cmp
fcomps
jo
movsl
movsl
push
popa
inc
fwait
inc
mov
xchg
add
or
into
js
jmp
cwtl
nop
lods
addr16
mov
mov
or
mov
push
push
cmp
movsb
gs
cmovs
adc
pop
dec
lret
xchg
jns
xchg
ficoms
push
neg
nop
push
aas
ficompl
push
sbb
sub
xor
jp
sub
and
push
loope
scas
mov
sbb
sbb
sahf
push
add
cs
scas
fwait
mov
add
adc
jns
out
mov
xor
xor
add
xlat
aad
and
mov
push
pop
dec
fwait
pop
fstps
jecxz
xchg
loope
add
xchg
dec
lret
das
jp
popf
outsl
imul
negl
mov
imul
mov
pushf
push
jp
push
xchg
and
xchg
xor
mov
movsb
pop
stos
addr16
push
dec
daa
imul
lods
inc
out
cmp
xchg
sbb
xchg
shll
divl
ret
pop
aaa
cmp
sti
xchg
jae
movsb
mov
add
aaa
jnp
enter
lret
sub
xchg
test
mov
mov
shl
jg
test
sbb
cli
inc
js
icebp
neg
pop
jne
mov
scas
mov
jl
jns
xchg
fidivrl
jno
enter
lock
mov
and
movsb
in
stc
inc
add
mov
add
xlat
enter
shll
push
leave
addl
sub
inc
jbe
loop
rclb
addr16
outsb
mov
jns
rcr
inc
mov
jmp
mov
push
sti
fsubs
xchg
mov
lds
fisubs
icebp
mov
sbb
ss
mov
sbb
push
out
jne
mov
stos
mov
mov
mov
xlat
jae
mov
mov
mov
mov
push
mov
std
stc
fsin
loope
daa
lods
popa
xchg
fwait
and
sub
jne
mov
cmc
cs
sbb
xchg
push
popa
adc
jle
add
adc
xchg
add
inc
xchg
jl
push
sbb
mov
mov
and
inc
inc
es
push
xlat
mov
lahf
mov
mov
jmp
sti
and
lret
mov
iret
sbb
out
jmp
dec
ret
push
std
mov
mov
in
pop
jns
adc
std
pusha
movsb
inc
gs
arpl
lret
ds
add
push
fbld
adc
inc
xor
andb
jb
cmp
repz
jne
imul
lret
enter
nop
adcb
jno
inc
lret
or
das
xor
insl
inc
int3
xor
xchg
movsl
and
repnz
sbb
mov
push
lds
xchg
ja
mov
add
push
test
mov
or
dec
mov
je
out
pushf
pop
movb
add
jp
inc
cltd
call
rcrw
add
cmp
hlt
pushf
out
js
leave
and
xor
and
inc
sbb
xchg
sub
ret
mov
inc
sti
sbb
sti
add
sbb
rolb
icebp
loop
jbe
mov
sbb
loopne
js
fistpll
jg
jno
xchg
add
mov
mov
ljmp
jecxz
add
in
mov
mov
sbb
xchg
pop
sbb
rcr
lods
ret
mov
lret
mov
adc
testl
cmp
out
add
andb
std
push
lods
mov
mov
jge
sub
in
sti
sbb
rcl
mov
ret
jecxz
pop
jmp
not
mov
test
mov
je
popa
push
bound
fwait
push
flds
mov
out
in
leave
add
inc
dec
jmp
lcall
dec
jecxz
ljmp
flds
cmpsb
cltd
jns
mov
stos
inc
pop
dec
les
jge
push
pop
scas
jo
sub
push
push
dec
pop
daa
mov
lock
or
jp
orb
sbb
push
cwtl
std
shll
dec
pop
vmovss
push
lea
es
push
push
jecxz
repz
stos
mov
lcall
lret
das
das
stc
test
or
aad
in
mov
xchg
arpl
lret
sub
lea
das
mov
orl
shr
inc
inc
sub
mov
dec
aaa
cli
movsl
and
sti
cmp
jo
lock
sub
arpl
dec
push
gs
xor
dec
sbb
div
push
mov
jle
shrb
popa
lods
jb
adc
jne
pop
scas
dec
mov
xchg
mov
orl
xchg
dec
arpl
pop
cmovge
cmp
jbe
and
mov
cli
sarl
pop
rorl
dec
fwait
movsb
lock
xchg
daa
test
jne
push
mov
loopne
adc
loop
stc
xor
mov
or
ja
jmp
in
mov
das
stos
adc
add
pop
jmp
jo
inc
data16
jne
ss
in
mov
icebp
sbb
push
call
arpl
gs
mov
cli
shlb
in
mov
cmp
call
ss
sbb
and
decl
mov
sub
pop
jle
arpl
jne
aas
push
aaa
nop
fptan
add
xchg
add
movsl
lds
push
and
jecxz
jno
pushf
clc
pop
or
inc
lcall
push
push
pop
jb
clc
js
es
sahf
inc
ss
adc
je
outsl
push
test
bound
or
mov
xchg
dec
cmp
sub
sbb
test
adc
push
fcompl
test
mov
insb
jb
sbb
and
outsl
outsl
cli
gs
push
adc
je
or
add
jb
add
or
and
pop
xchg
cs
cmp
or
xchg
adc
xchg
repz
jo
inc
popa
mov
sbb
push
orb
add
je
andb
dec
subb
mov
push
pop
dec
fidivrs
je
xor
out
stc
xchg
or
in
and
dec
jns
andl
cmp
jg
andb
aam
cmp
stos
mov
mov
hlt
rolb
cmpl
xchg
js
ficoml
sbb
insb
adc
add
fadds
imul
mov
fwait
dec
push
adc
shl
cmp
cwtl
sub
mov
lea
std
sub
mov
sbb
push
in
hlt
and
lret
xchg
cmpsl
in
lret
mov
fisttpl
pop
push
jns
popa
bound
push
xor
mov
inc
enter
addl
sub
adc
iret
or
in
push
push
mov
cmp
jge
sahf
mov
sub
cmpsl
mov
test
test
mov
or
mov
mov
dec
fcmovbe
fsubs
fnsave
fmuls
pop
lock
jge
cld
mov
movsl
fsubrl
data16
jbe
cmp
dec
ret
adc
xchg
shll
insb
add
push
mov
sub
inc
je
pop
xor
dec
pop
out
int3
fdiv
call
push
cli
mov
mov
test
clc
xchg
adc
pop
push
test
pushf
cmp
pop
lock
scas
test
iret
mov
dec
out
adc
out
adc
arpl
pop
sub
enter
mov
jbe
mov
mov
sahf
ret
shlb
inc
ficoms
dec
data16
jne
adc
push
mov
xchg
dec
mov
xchg
popa
pop
sub
inc
cmpsb
mov
add
js
mov
and
stc
addr16
lods
jmp
xlat
push
fnstsw
pushf
cs
jecxz
pop
mov
rolb
cmp
push
adc
cmp
push
fcoml
and
sub
aas
jns
or
adc
xchg
and
aam
cmc
das
mov
daa
xor
push
push
sbb
mov
les
lcall
outsl
ja
leave
hlt
lcall
and
sarl
dec
xchg
dec
add
mov
aam
xchg
xchg
sub
xor
pop
push
push
add
sbb
imul
aas
inc
adc
cwtl
pop
loop
cmp
pop
popa
lahf
lret
cld
inc
fwait
test
xor
push
insl
and
jae
popa
add
push
hlt
lret
stos
dec
insl
and
mov
cmc
mov
xor
jl
sub
or
jnp
lahf
xchg
addr16
loope
adc
cmc
xor
movzbl
insb
cli
xchg
adc
pop
sbb
jb
push
cmp
add
add
or
sahf
jno
lods
push
inc
adc
cs
jae
xor
dec
decb
rolb
xor
xchg
push
inc
xchg
mov
ds
sbbl
push
mov
mov
xchg
mov
fwait
mov
bound
pop
push
sub
push
adc
mov
jne
shlb
mov
inc
arpl
jo
and
int3
lret
mov
push
inc
sbb
loop
mov
popf
xor
daa
mov
les
mov
stc
mov
mov
sub
push
insl
mov
mov
lret
xchg
mov
mov
cmpsb
das
xchg
xchg
inc
ret
pop
xchg
cmpsl
lods
imul
push
popf
imul
lea
rolb
adc
push
js
jge
jmp
call
ljmp
push
inc
mov
imull
jno
lahf
dec
mov
dec
insl
adc
test
daa
inc
loope
imul
cmp
sar
lock
lods
add
push
cmpb
mov
aam
mov
lcall
mov
sahf
dec
movsb
ja,pn
cmp
insl
iret
js
inc
xchg
scas
jbe
pop
jmp
cmc
sub
jp
int
inc
addr16
fcomi
pop
outsl
cmp
add
mov
jns
sub
loopne
xor
xor
fildl
and
inc
push
push
gs
mov
xchg
popa
inc
jns
rcll
mov
lahf
xchg
ja
lds
mov
sub
or
push
mov
and
aaa
lods
xchg
add
sbb
jecxz
xor
out
sti
add
push
les
flds
cmp
pop
sbb
loope
and
adc
mov
adc
mov
clc
push
mov
inc
dec
and
jl
cmp
roll
dec
into
sub
fisubl
jb
push
inc
sub
cs
imul
stos
jnp
cmpsb
test
les
mov
lds
xchg
imul
dec
jb
repz
cmp
js
sbb
imul
ret
adc
xchg
call
les
lods
jbe
ds
scas
and
xor
gs
push
xchg
xor
ret
shll
mov
xor
pusha
adc
or
push
pop
nop
fcompp
pop
mov
es
movsl
hlt
sub
test
insb
pop
addr16
mov
sbbb
mov
pop
mov
cmpsb
ss
das
push
sub
aaa
sbb
jnp
rcrb
sub
mov
stos
cltd
mov
mov
sti
out
mov
or
fsubrl
or
and
mov
int
push
cmp
cmp
imul
mov
push
lock
cmp
in
iret
jnp
push
fdivrl
push
les
stos
scas
push
lea
in
lret
das
adc
cli
hlt
add
sbb
lcall
xchg
adc
add
mov
mov
loop
and
outsl
or
cld
pop
imul
hlt
sbb
sbb
xchg
cmpsl
insl
dec
scas
or
popf
and
pop
jle
int3
add
push
and
rcll
das
outsl
inc
and
dec
imul
and
rolb
or
ret
cli
ror
in
fcomi
andb
dec
mov
insb
into
xchg
xchg
cs
cmp
push
cwtl
in
inc
cmp
jge
cld
cltd
mov
push
mov
jmp
cltd
mov
adc
push
or
pop
xchg
aas
dec
cltd
sbb
mov
jns
xchg
test
shlb
lret
mov
mov
xchg
int3
jo
pop
dec
rorl
adc
stos
iret
push
sbb
ja
test
xor
jmp
add
insb
cmp
jne
or
pop
dec
sbb
or
sub
movsl
mov
mov
rorl
and
loop
sbb
pop
ljmp
das
enter
add
mov
adc
sub
push
sbb
sbb
mov
clc
int3
es
push
mov
repnz
add
push
push
sbb
adc
cmp
jo
clc
mov
lret
inc
and
fsts
das
cmc
lcall
push
pop
in
xor
mov
mov
xchg
test
mov
cmp
push
fadds
sahf
push
push
pusha
xor
jb
mov
xchg
rcr
clc
cmp
popa
in
clc
push
push
sbb
push
frstor
leave
aad
push
sbb
lcall
insb
push
or
sub
sub
and
or
and
test
sahf
pop
pop
and
mov
das
incb
jmp
pop
inc
fmull
int3
stos
in
lret
inc
clc
bound
and
push
mov
pop
movb
add
bound
or
stos
test
or
dec
jmp
ljmp
dec
push
cmp
add
fldenv
test
pop
add
mov
ljmp
jl
mov
popa
std
inc
cmc
rcrl
push
sub
cwtl
add
fnstenv
fld
cmp
stc
inc
clc
lcall
in
add
data16
or
xchg
out
scas
es
ds
arpl
ja
adc
outsl
popa
negl
add
adc
inc
out
fmul
call
adc
ss
mov
dec
in
inc
xchg
out
fcmovnu
data16
je
pop
sub
push
scas
bound
cmp
mov
shl
xchg
outsl
push
adc
add
dec
int3
push
inc
cmp
inc
pushl
fadd
test
fisubrs
xchg
sub
rcrl
push
adc
xchg
mov
cmpb
lds
sti
xor
add
xorb
cmpl
sbb
shll
cmp
cmp
pop
test
out
test
enter
add
rcl
xor
fistpl
test
ficoml
push
add
adc
loope
and
aad
aad
arpl
in
and
push
add
jnp
inc
pop
into
add
inc
shrb
decl
loopne
negl
push
vunpckhps
adc
adc
add
push
xchg
es
mov
dec
cmp
cmp
out
mov
inc
fbld
cmp
sub
jmp
aas
ds
xor
cli
xchg
mov
cmpb
jb
lea
add
mov
es
rclb
mov
cmp
out
adc
pop
and
cmp
xchg
cmc
nop
mov
xor
add
insb
out
inc
rcl
leave
decb
mov
rorb
leave
mov
sub
and
ficompl
jmp
fisubs
xor
lret
insl
out
stos
mov
mov
scas
popf
lahf
mov
xchg
jnp
mov
mov
and
xchg
int3
sbb
icebp
sti
in
sub
shr
xor
add
or
in
push
push
cli
cmpl
pop
dec
sbb
roll
and
xlat
bound
mov
cmp
aam
xor
js
les
ficompl
sbb
sbb
or
sub
movsl
iret
push
mov
add
pop
sbb
movsl
xchg
xchg
inc
insl
or
mov
das
dec
xchg
sbb
adc
fiadds
fnstcw
xchg
and
pushf
sub
ljmp
and
mov
sahf
jg
mov
inc
gs
lods
mov
cli
cmpsb
xor
mov
jno
jg
lahf
sub
aad
adc
bound
sub
or
xorb
or
xchg
js
sarl
cli
or
lcall
push
push
imul
mov
xchg
call
lahf
repnz
cltd
xchg
insl
insb
cld
fstpt
pop
pop
mov
imul
nop
fwait
push
negb
jo
ret
sbbl
jne
jmp
arpl
or
or
and
jl
cmp
clc
xchg
mov
imul
cmpsl
mov
mov
stc
pop
leave
sub
idivb
cmp
lahf
jmp
ret
xor
test
mov
sahf
or
subb
outsb
out
pop
fninit
clc
fsubrp
out
push
jge
xor
in
mov
cmc
sahf
mov
and
add
jo
lock
dec
mov
mov
push
sub
pushfw
pop
inc
scas
mov
jne
repz
mov
outsb
add
repnz
out
fidivrs
cmc
push
jle
movsl
movsb
dec
loop
in
orb
sub
pop
rolb
pop
mov
pop
xchg
sbb
push
cmp
jns
inc
hlt
push
scas
mov
enter
sub
cmp
test
mov
cmpsb
in
xor
pop
jno
mov
call
jns
pop
jp
jb
add
dec
pusha
pop
inc
cld
jb
call
add
and
call
xor
or
cli
push
xchg
leave
xchg
inc
ret
mov
fistpll
cmp
les
xor
pop
out
xor
lcall
mov
or
or
in
cmp
cltd
int
or
sbbb
imul
daa
cmp
pop
mov
xchg
in
add
cmp
inc
dec
int3
and
or
jae
mov
pop
test
xor
clc
mov
jnp
pusha
or
pushl
dec
fdivl
loope
xor
movsb
iret
inc
repz
addb
leave
es
mov
shlb
add
int3
inc
mov
jbe
dec
ss
lods
and
xor
xchg
inc
mov
not
out
loop
lds
insl
jo
faddl
jnp
out
sub
scas
and
outsl
xor
fstpt
nop
inc
add
adc
icebp
push
mov
add
sbb
pop
xor
dec
js
mov
add
insl
cltd
aad
in
jg
mov
cmp
inc
dec
pop
ret
lods
mov
movsb
mov
mov
cmpsl
pop
addr16
lea
sbb
insb
mov
mov
cli
mov
test
das
sarb
dec
pop
push
inc
mov
jnp
mov
or
call
cmp
int
inc
cli
mov
in
sub
push
add
cld
lcall
sahf
add
lea
cmp
aas
xlat
dec
or
ds
sbb
jnp
jle
inc
jo
mov
jl
jnp
dec
daa
xchg
add
mov
arpl
mov
dec
sti
inc
ja
loopne
mov
xchg
inc
adc
sbb
jl
movb
int3
pusha
iret
push
inc
xor
mov
or
pop
pop
icebp
pusha
jmp
jns
push
push
inc
into
dec
fildll
or
mov
lds
mov
mov
mov
or
or
mov
lods
lret
out
aaa
shlb
fldcw
pop
or
ds
mov
int3
xchg
xchg
jg
xchg
div
ja
mov
sbb
xchg
and
scas
repz
adc
dec
mov
outsb
ljmp
icebp
sub
sbbb
leave
repz
mov
push
sub
push
adc
dec
jle
pop
lods
je
jbe
shlb
loop
jle
jns
fcomps
std
cmp
movsb
jecxz
nop
or
movsb
jg
sbb
daa
in
push
rcrl
add
xchg
cmpsb
lock
and
jb
into
cltd
pop
out
stos
push
popf
data16
cmpsb
mov
sub
lock
mov
push
mov
and
lea
popf
push
adc
lret
or
adc
outsl
out
dec
fnstcw
xchg
ljmp
lock
loop
adc
jl
ljmp
test
dec
movsb
and
dec
cltd
lods
dec
mov
sub
mov
jecxz
ret
sbb
stos
sbb
cmp
dec
add
cmp
ret
xor
repnz
jmp
dec
pop
pop
jg
sbb
mov
inc
xor
inc
or
movsb
pop
cmp
sti
hlt
sahf
inc
xchg
pop
andl
mov
sub
lcall
call
loopne
mov
pushl
stos
sub
stos
ret
repnz
cwtl
data16
sub
xchg
or
jae
imul
push
test
lret
adc
neg
fldt
push
daa
xor
test
sub
mov
std
stos
out
call
test
aaa
jmp
mov
outsb
cmp
pop
pushw
loopne
cmp
pop
cmp
xor
mov
out
cmp
leave
frstor
sub
add
pop
dec
pop
nop
xor
in
enter
cmp
and
ja
clc
inc
rcl
inc
xchg
cmp
js
mov
ja
mov
ret
int
adc
jnp
ret
mov
xchg
daa
jne
xor
pop
adc
xchg
jnp
sub
xor
test
add
jne
sbb
push
movsl
out
rorb
sti
sbb
lock
xchg
jno
dec
je
loop
cmp
xor
ja
arpl
dec
mov
mov
dec
xor
mov
cmc
jle
push
loope
cmp
scas
jecxz
pop
add
dec
cmovno
push
lret
sbb
scas
xchg
sahf
add
lods
cmp
scas
test
cmp
out
pop
dec
movsb
fsubs
mov
repz
std
inc
loopne
and
push
add
mov
push
pop
loop
pushf
and
cmp
jne
mov
pop
jb
adc
in
mov
cltd
add
sbb
xor
test
mov
pop
stos
pop
pop
shlb
pop
into
lret
outsb
pop
js
aam
sar
jmp
cmp
std
test
movsb
stos
stos
and
mov
sahf
mov
inc
fs
push
mov
test
jno
dec
sub
in
movsl
jp
push
jo
mov
or
in
xchg
imul
jg
movsb
test
jne
mov
aaa
adc
test
pop
mov
fsub
repz
ds
outsb
bnd
inc
jno
xor
mov
pusha
arpl
xchg
rorb
shll
lret
sub
sub
test
cmp
cltd
xchg
jecxz
or
sbb
xor
jle
adc
ss
push
or
mov
dec
inc
dec
xchg
mov
or
mov
imul
and
mov
pop
xchg
mov
js
ss
xor
cmc
rolb
mov
jbe
cwtl
xor
cwtl
outsb
mov
inc
push
push
xchg
sbb
aam
enter
sarl
jno
mov
inc
jecxz
movsb
xchg
outsl
lods
divb
std
mov
cmp
inc
and
in
pop
hlt
ljmp
push
cld
sub
jno
orl
jno
add
shll
add
aas
in
sub
adc
xchg
xlat
inc
imul
mov
into
push
gs
dec
test
cmp
dec
cs
in
testl
addb
pop
mov
cmp
rorb
mov
loope
xor
movsb
jo
test
xchg
xor
in
jae
pop
add
xor
ret
or
jge
jmp
es
push
cmpsb
xchg
sbbb
std
lret
push
lock
in
dec
icebp
pop
inc
pop
add
or
jp
sbb
push
jnp
xor
dec
push
sub
outsl
xchg
cli
addr16
add
jo
jb
loope
fcomip
dec
add
mov
mov
stc
push
cli
movsl
leave
lods
mov
pop
dec
xchg
dec
clc
ret
orb
cld
testb
popa
fs
sub
jne
popa
xchg
mov
add
cltd
xor
sbb
fs
mov
cmp
xchg
inc
jb
mov
stos
ds
push
fidivl
mov
inc
and
add
lea
xlat
popf
adcl
mov
imul
lret
or
mov
xchg
xacquire
pop
mov
ret
sub
stos
movsb
jb
inc
jl
cwtl
xor
sub
sti
fimull
lds
or
mov
testb
sbb
jge
lahf
das
jp
jecxz
mov
xor
andl
leave
repnz
mov
jns
repnz
mov
dec
cmp
test
cmp
jae
lods
dec
pop
pop
pop
mov
test
xlat
and
hlt
dec
add
popf
movsb
mov
push
sbb
repz
sbb
out
xchg
inc
mov
divl
pop
cmp
cmp
iret
inc
xchg
mov
inc
js
test
movsl
add
xor
push
sahf
push
leave
test
mov
or
mov
dec
roll
sti
pop
xor
popa
movsl
pop
push
data16
mov
push
add
push
pop
arpl
add
test
push
mov
scas
xor
inc
and
mov
out
add
push
arpl
les
aaa
or
xor
xor
aad
icebp
clc
sub
pop
out
shll
push
insl
daa
repz
or
push
dec
pushf
push
jp
xor
fcmovnb
bound
add
inc
inc
jne
rclb
dec
outsb
test
iret
ljmp
cmp
stos
sub
jecxz
push
mov
or
mov
dec
mov
xor
jmp
pushf
push
push
sbb
in
sub
pushf
icebp
repz
mov
ljmp
jns
and
pop
mov
adc
mov
dec
lea
jle
jnp
mov
mov
add
xchg
sub
jb
mov
outsl
int3
jnp
or
test
and
inc
lock
mov
ds
scas
sbb
sar
sbb
fs
mov
int
fcompl
mov
ret
insb
scas
lock
push
add
jg
lea
lods
stos
dec
arpl
aam
xor
sub
xor
test
xchg
test
adc
ret
sub
negl
pop
call
int3
dec
push
xchg
xchg
and
add
fmulp
into
pop
inc
mov
mov
adc
orl
xchg
in
and
aam
fists
mov
sbbb
loope
les
push
cmp
jo
xor
or
sbb
pushf
cmpsl
repnz
xchg
int
push
mov
mov
jp
insb
mov
mov
adc
rorb
mov
daa
mov
outsl
sar
shrb
lock
push
cmp
fxch
in
mov
enter
imul
inc
xor
fcmovbe
fwait
cld
push
imull
out
fnstcw
in
call
lock
and
jg
sub
in
decb
scas
adc
mov
out
rorb
xchg
sbbb
pop
mov
dec
jbe
jae
push
sti
stos
idiv
dec
into
adc
enter
mov
rcr
cmpsl
fists
imul
test
pop
aam
loope
dec
pop
cwtl
add
das
movsb
or
dec
adc
jnp
std
fs
cmp
cmc
sub
cmp
fcomps
mov
or
enter
lods
in
popa
push
fucomi
xchg
jmp
sbb
cmp
hlt
cmp
cmc
lods
loop
adc
push
lcall
mov
sbb
push
or
int
mov
cmp
imul
adc
cli
mov
inc
xchg
sbb
xchg
popf
mov
popa
vpackssdw
jnp
or
add
pop
dec
sti
mov
clc
add
int3
cmp
fs
pop
fldcw
xor
je
lods
jae
in
call
add
cmp
push
jnp
aas
adc
out
inc
xchg
inc
insb
jns
xchg
test
imul
push
jecxz
xor
push
xchg
out
inc
pop
das
ss
xchg
data16
fwait
mov
sbb
adc
ficomps
fidivrs
push
icebp
int3
xor
scas
mov
pop
rcll
mov
sahf
das
sbb
or
dec
inc
cmp
fsubrs
aas
cltd
xchg
imul
aaa
cmp
in
sbb
sahf
je
jl
push
out
jns
push
sahf
mov
les
xor
xchg
repz
jbe
push
and
or
xor
xchg
sbb
testb
leave
push
jge
mov
stos
adc
and
inc
scas
jbe
dec
or
dec
vpslld
cwtl
je
int
stc
dec
mov
jns
imul
mov
add
fimuls
stos
js
aas
adc
dec
add
and
xor
std
sbb
mov
sarb
arpl
xchg
or
lea
lods
lea
push
rolb
sub
or
in
std
adc
sbb
movsl
cwtl
xor
lds
push
jecxz
pop
pop
push
in
das
sbb
scas
scas
adc
xchg
clc
and
pop
mov
sub
adc
int3
or
adc
jmp
out
fcomps
out
and
inc
jnp
inc
pusha
stos
in
repnz
repz
addr16
cmp
test
aam
xor
lock
adc
push
in
mov
clc
std
mov
pop
incl
popf
sbbb
pop
aad
leave
insl
inc
cmp
lods
rcrl
lock
std
dec
xor
cmp
loop
popa
jmp
insb
lea
xor
jnp
test
push
add
jge
sbb
adc
int3
jmp
or
adc
fwait
mov
xchg
and
jne
lcall
je
test
sbb
les
pushl
stos
in
lods
ret
cmp
adc
add
bound
push
cmp
cmc
fmull
fisttpl
js
cmp
stos
pushf
xchg
mov
xor
inc
or
out
jno
aas
addr16
int
fldcw
push
mov
dec
notl
sub
sbb
stos
push
les
imul
cmp
movsl
pushf
outsb
lret
shll
mov
sbb
mov
iret
pop
out
lock
sti
dec
popl
test
xor
xchg
cltd
out
cld
lds
xor
movsb
xor
pop
in
rcll
loopne
daa
fldl
idivb
insl
push
out
arpl
mov
xchg
lock
outsb
into
int
mov
adc
imull
shrb
pop
sbb
rorl
cmpsb
scas
andb
cmc
inc
mov
scas
outsb
jnp
mov
xchg
orb
imul
mov
xchg
inc
pusha
enter
and
sbb
add
push
xor
pop
fcmove
loope
fsubs
fucomi
xchg
and
sti
xor
cltd
xlat
bound
lods
inc
jne
or
cwtl
stos
dec
jg
outsb
test
outsb
movsb
sbb
lret
repnz
es
lds
sbb
enter
mov
gs
lahf
sub
fsubl
mov
pushl
mov
imul
dec
jle
xchg
call
test
hlt
push
jge
fmuls
sub
mov
sub
xor
test
divl
push
ja
pop
test
addb
out
adc
add
cmp
mov
cltd
inc
sti
dec
xor
imul
js
pop
repnz
in
stos
mov
sub
inc
mov
ss
push
out
pop
test
inc
lods
mov
mov
sbb
push
adc
notl
add
mov
aaa
icebp
addr16
insb
add
xor
adc
sahf
iret
fbstp
lcall
das
pop
adc
and
jmp
push
dec
or
xchg
scas
faddl
jno
push
lcall
mov
loope
pop
aam
push
mov
dec
cmp
cmp
int
lret
push
out
sub
mov
or
lret
leave
in
test
hlt
xchg
adc
cmp
cmp
push
mov
icebp
and
or
and
add
aaa
outsl
push
bound
push
xchg
inc
adc
stc
jnp
aam
cmpsb
icebp
imul
out
fisttpll
sub
mov
jbe
dec
mulb
out
lret
inc
push
cli
imul
push
les
lods
mov
ljmp
out
inc
jae
out
test
stos
pop
ret
adc
jg
sbb
xchg
out
hlt
xor
and
repnz
push
mov
jge
sti
pop
and
rorb
mov
sbb
inc
add
inc
test
add
adcb
mov
inc
mov
or
and
fldenv
les
jp
and
cmp
sub
mov
sub
dec
fidivs
leave
add
outsl
fwait
cmpsb
fwait
push
jmp
hlt
mov
pop
mov
adc
dec
lret
rorl
pop
repnz
mov
inc
shll
sti
pop
mov
cmc
jae
out
movsb
jne
add
xchg
in
cmc
push
outsb
cmp
leave
cmp
mov
xor
xchg
loope
sarb
lea
outsl
aas
aad
cmovs
sub
mov
and
add
out
pop
jno
insb
pop
loop
xchg
pop
shrb
xchg
jne
add
cli
pop
pop
mov
aaa
cli
jne
or
adc
into
inc
mov
add
cmp
push
fbstp
cld
orb
mov
punpcklwd
add
pop
es
mov
xchg
pop
loop
in
push
and
jae
dec
add
cmpsb
in
add
jo
cltd
in
lods
pop
out
outsl
decb
sub
in
and
pop
nop
mov
adc
push
aas
pop
xor
int3
and
xchg
cmp
add
jecxz
fidivrs
adc
es
xchg
add
dec
movsl
mov
xor
dec
jp
xor
mov
mov
ja
movsb
clc
or
clc
inc
mov
mov
push
dec
lds
aaa
add
pop
dec
cmp
cmc
pop
xlat
mov
nop
movsb
xchg
call
ljmp
cmpsl
out
push
add
xchg
pop
xchg
jnp
dec
mov
nop
sub
pop
int3
fwait
cmpsl
fimull
fnstcw
into
sub
stos
xchg
lcall
mov
ljmp
push
jno
bound
ret
dec
mov
mov
cmp
push
mov
push
int
or
idivb
pop
push
scas
pop
movsb
es
rcr
js
lret
inc
mov
pop
leave
sbb
pop
adc
ss
imul
out
and
sbb
sti
push
in
inc
jg
sti
in
dec
mov
push
stc
jbe
dec
push
shrb
fmull
repnz
cwtl
rdtsc
xabort
mov
sub
jl
and
mov
aas
sbb
movsl
inc
push
xchg
xor
sbb
jmp
test
and
lds
inc
adc
sub
rcrl
xor
push
sub
adc
test
xor
sahf
scas
push
push
xchg
dec
imul
xchg
in
pusha
filds
stos
leave
mov
stc
outsb
in
in
cltd
sarb
xchg
scas
push
lods
test
call
fcmovnbe
scas
lahf
jae
inc
addr16
in
sbb
xchg
pop
and
jbe
mov
push
addr16
aaa
out
or
inc
pop
stc
incl
mov
out
test
lahf
dec
movsb
cld
int
add
loopne
pushf
bnd
dec
cwtl
in
jae
mov
jne
add
arpl
dec
xor
or
testl
ljmp
mov
aam
cmpsb
inc
jo
pusha
mov
pop
loopne
repz
out
subb
ja
push
dec
jo
jl
jg
movsb
je
mov
push
inc
into
mov
movsb
or
scas
cmp
xchg
mulb
arpl
out
ret
sub
adc
jle
in
les
scas
or
sbb
test
jmp
add
dec
inc
scas
leave
std
xor
cmpsb
dec
std
xchg
pop
cmp
aam
adc
dec
cmpsl
sub
sub
ret
push
mov
jb
mov
sub
aad
popa
mov
pop
mov
pop
push
jne
sub
mov
test
les
incl
jns
sub
fs
in
ret
jmp
cmp
xor
addr16
arpl
test
push
mov
mov
gs
adc
cltd
fcomps
in
inc
fmul
out
jb
mov
das
syscall
aaa
fisttps
and
sub
cld
loope
mov
cmpsl
mov
sbb
jp
jns
fptan
push
lods
shl
mov
sbb
jecxz
adc
xchg
es
mov
inc
int
rol
sub
fs
and
stc
sti
fsubs
out
dec
int3
test
leave
fwait
loope
dec
mov
imul
jmp
ja
xor
fcmovu
and
inc
dec
in
jmp
rcrb
clc
stc
jb
adc
ljmp
mov
sbb
cmp
cmp
loopne
int
or
jmp
jno
jl
aaa
jnp
test
jb
push
test
pop
adc
setb
clc
test
push
in
test
sti
xchg
loope
ss
xorl
stos
cld
dec
jb
mov
jmp
inc
jbe
mov
in
addr16
push
jp
sbb
sub
inc
push
and
mov
dec
dec
stc
push
or
xchg
mov
call
enter
xchg
adc
cmp
sub
daa
mov
jbe
cmp
into
pop
cmp
xor
cmp
imul
addr16
aam
fdivl
sub
xlat
cmp
aaa
mov
iret
mov
mov
das
aam
mov
in
leave
leave
andl
pop
pop
cmp
dec
out
lods
pop
lret
popf
xor
scas
mov
aad
and
jmp
jp
and
adc
push
shll
in
cwtl
aam
in
lea
cmp
jmp
dec
lret
pop
lret
cmc
loope
mov
outsb
add
adcb
mov
fs
jno
jne
aaa
push
dec
addr16
int3
xchg
push
repz
mov
and
push
movsl
lcall
pop
popa
imul
mov
inc
dec
xchg
pushf
add
aam
stos
insb
lret
push
into
mov
ja
inc
or
rol
iret
add
pop
je
mov
lock
xchg
sbb
dec
sub
lea
popf
in
inc
mov
pop
jno
mov
sub
and
das
cwtl
xor
inc
dec
stos
xlat
jp
out
insb
lods
lods
inc
stos
or
imul
out
hlt
mov
sub
fcoml
lock
in
xlat
pushf
fisubs
dec
adc
dec
mov
pop
or
dec
sbb
mov
aad
cmp
pop
xchg
dec
add
or
out
fsubs
insl
movd
cltd
sti
insb
arpl
or
mov
sbb
and
cs
loop
cmpsl
call
cmc
lock
cmp
xor
fidivrs
cmp
fs
clc
test
sub
pop
cwtl
in
mov
out
adc
push
je
jge
push
or
or
idivl
xor
push
mov
ret
sti
ret
out
xchg
or
stc
mov
push
pop
popf
sarb
xchg
cmp
test
adc
call
adc
lahf
push
sahf
cmc
jne
out
inc
cmpb
imul
add
lahf
int3
adc
idivl
fsubrs
and
sub
pop
into
ss
xchg
pop
dec
in
push
data16
xchg
imul
imul
add
xor
mov
inc
ficoml
jmp
mov
jecxz
add
stc
pusha
lret
enter
pop
addr16
xchg
mov
push
in
cld
test
adc
inc
lea
pop
sub
out
in
mov
in
adc
mov
hlt
fistpll
xor
or
mov
lods
inc
clc
cmp
adc
dec
fidivrs
sarl
cmpsb
cmp
pop
popl
mov
arpl
popa
mov
mov
out
jae
sub
sub
xchg
push
cs
into
pop
fs
xlat
ficompl
into
pusha
add
aaa
aas
lahf
inc
add
push
pushf
loope
dec
jb
imul
fneni(8087
inc
dec
lret
mov
ja
outsl
out
sbb
mov
leave
stos
cltd
das
inc
cmpsl
cmp
cmp
cs
ds
test
aaa
test
js
jl
dec
lcall
sbb
mov
dec
sub
lret
inc
lcall
nop
mov
pop
inc
mov
icebp
test
dec
idiv
mov
add
inc
cld
je
fsubr
xor
sbb
icebp
lret
xlat
out
jmp
scas
lea
jo
clc
call
mov
cmc
cmp
pop
lret
aaa
fcomps
sarb
adc
dec
pop
pop
mov
xchg
dec
mov
jmp
popf
rcr
not
push
add
inc
ret
inc
sahf
ljmp
in
pop
fstcw
or
loope
xorl
insl
mov
fadds
or
icebp
jp
shll
dec
adc
lods
leave
fmuls
mov
sar
cmp
push
inc
popa
push
pop
shlb
jge
xor
jbe
test
sub
pop
mov
js
mov
adc
clc
lods
mov
xchg
sbb
leave
adc
sub
addr16
xchg
push
stos
rorl
and
pusha
aaa
pop
mov
pop
jns
cwtl
clc
movsb
out
inc
xchg
sub
bswap
imul
popf
lret
mov
push
inc
xchg
cmp
adc
cmp
fs
loop
fwait
jae
divb
sub
add
cld
lret
aaa
mov
mov
outsl
jne
xor
mov
sbb
lcall
hlt
daa
shr
xchg
xchg
mov
pop
jbe
push
push
jno
dec
lcall
adcl
xchg
cs
pop
enter
fs
pop
dec
mov
mov
cmp
sbb
add
repz
mov
sbb
hlt
fiadds
ss
mov
mov
cltd
xor
xor
add
xchg
sbb
mov
mov
loope
lcall
and
mov
fldcw
or
loope
mov
cmp
xchg
enter
jne
dec
repnz
cmp
add
adc
mov
mov
lahf
push
sub
jcxz
xchg
outsb
daa
cmpsl
cmp
cmpsl
out
scas
pushf
lods
and
sbb
jmp
imul
push
adc
mov
jno
lods
in
subl
or
jmp
sub
in
pop
push
push
dec
mov
xchg
out
test
adc
ljmp
jg
lret
fwait
add
push
and
dec
cwtl
adc
push
lea
movsb
push
push
push
call
xchg
mov
data16
lds
icebp
or
test
gs
cmpb
stos
inc
jmp
pop
inc
les
add
mov
xchg
jne
add
gs
sub
pop
push
movsl
push
es
bound
sub
cmp
call
out
add
in
lahf
repz
pop
mov
insb
out
or
mov
jne
mov
fmuls
movb
sahf
div
rcll
enter
sbb
inc
sub
insl
sub
xorb
lea
push
push
cmpsb
outsl
mov
xchg
mov
push
mov
test
adc
stc
mov
leave
mov
sbb
mov
dec
pop
cmp
mov
push
cli
mov
inc
inc
inc
insl
shlb
rclb
mov
mov
shll
lds
in
or
addr16
push
pop
pop
pop
mov
jno
mov
adc
sbb
cmp
ficoms
dec
loope
sub
xor
jle
mov
movsb
es
xchg
push
pop
div
test
add
shrb
mov
movl
or
ljmp
xor
fstpl
out
insl
mov
out
test
mov
jns
out
fwait
movsl
ss
cmpsl
sbbl
pusha
test
ljmp
test
mov
xor
dec
stos
adc
test
in
inc
insl
ss
arpl
xchg
shr
sub
push
or
cmp
dec
int3
lcall
mov
out
xor
cld
sub
xor
push
xchg
sub
mov
pop
lods
movsl
iret
sbb
mov
icebp
xor
sbb
das
add
push
cmp
and
cmp
push
sbb
test
inc
stos
or
mov
xchg
dec
daa
sub
add
cs
fwait
inc
pop
leave
sbb
push
fwait
je
jne
dec
test
gs
adc
shl
jno
test
xor
out
cmp
test
jg
mov
fists
mov
mov
inc
jbe
lock
xlat
cmpsl
incl
fistpl
mov
lods
xor
scas
push
or
and
lret
cli
and
aad
fcom
xor
dec
sti
aas
and
idivb
xlat
mov
mov
push
lahf
pop
adc
mov
jecxz
pusha
shlb
inc
popa
mov
xchg
adc
xor
mov
sub
xchg
adc
sbb
inc
or
mov
push
fsincos
mov
std
iret
xor
mov
inc
cli
jne
arpl
push
sar
test
jg
ss
xlat
repz
loop
adc
fldl
push
movsl
movsb
enter
aam
cmp
in
mov
lahf
sub
lea
mov
sbb
mov
or
mov
popa
pop
loopne
lock
je
mov
jle
in
out
aad
mov
jae
stos
outsb
push
psubusb
pop
gs
sub
addr16
lock
push
mov
jle
or
scas
fdivp
dec
adc
dec
popa
test
aaa
xlat
insb
jge
lods
mov
xchg
fdivr
fcomps
jno
test
add
inc
cmp
pop
dec
xor
out
hlt
lock
lock
faddl
call
push
gs
fimuls
and
mov
mov
movsb
js
pop
data16
mov
sbb
in
pop
filds
xchg
dec
xchg
mov
cmp
dec
in
aaa
inc
jmp
cld
cs
loope
xchg
pop
sub
mov
rol
repz
pop
cmp
push
fsubrp
in
mov
fstl
add
cmpsl
loop
lods
xchg
mov
addr16
cmpsb
and
in
ficoms
xchg
inc
push
out
mov
movsb
jbe
mov
sbb
nop
cwtl
push
cmpsl
xchg
and
cltd
inc
mov
xchg
scas
in
xor
push
popf
dec
stos
fldcw
cmp
mov
pop
mov
xor
rolb
js
addr16
pop
mov
iret
mov
add
pusha
je
xchg
jmp
sub
stos
inc
cmc
ret
test
and
sub
in
mov
or
jecxz,pn
or
loope
cli
pop
mov
addr16
push
aaa
shll
dec
dec
je
push
and
andb
inc
outsb
loopne
add
inc
xchg
cltd
jle
xor
and
lods
lds
and
loopne
cmp
in
add
call
push
loop
lods
mov
mov
push
mov
xlat
stos
mov
pop
outsl
sbb
das
add
insb
push
ret
test
push
sbb
jp
cmp
test
xor
or
inc
push
testb
mov
sbb
enter
dec
cmp
pop
lea
jb
mov
inc
adc
xchg
lock
jb
jo
mov
dec
insl
inc
xchg
nop
sub
fcomp
inc
mov
jnp
movswl
clc
jb
pop
inc
jle
cmc
js
loope
cltd
add
dec
push
ret
ss
xor
mov
jge
sti
xchg
jge
stos
stos
or
jae
push
ja
mov
sub
imul
lahf
jecxz
mov
adc
sbb
jns
adc
dec
ljmp
aas
pop
mov
stc
xor
adc
rep
mov
inc
incl
dec
mov
dec
and
mov
ret
and
mov
xchg
js
mov
or
xchg
dec
nop
push
enter
fsubrs
data16
rcr
sub
cmp
outsb
pop
rclb
or
test
sti
inc
fs
and
or
cltd
das
jg
mov
leave
mov
mov
and
xchg
mov
cmpb
mov
cmpxchg
mov
rclb
mov
jno
js
int
or
fwait
sti
popf
aas
loopne
cltd
mov
lret
pusha
xchg
inc
mov
pop
jnp
ret
inc
add
ret
nop
jnp
add
out
pop
xor
xchg
mov
pop
cmc
ljmp
inc
xchg
sbbb
std
adc
xor
icebp
lret
pop
std
mov
arpl
sbb
sub
dec
inc
jp
dec
pop
jbe
lret
push
fwait
sub
popf
movsb
test
inc
bnd
js
inc
lahf
jecxz
or
test
dec
mov
out
cld
adc
enter
int3
and
cmpb
and
adc
es
in
shlb
lods
cmp
mov
ret
sti
mul
test
inc
jb
jl
outsb
dec
push
xchg
or
or
enter
cmp
lret
sub
lret
jo
mulb
jo
and
sbb
outsb
or
pop
insb
xchg
int
mov
and
jbe
mov
xchg
add
xchg
fwait
push
js
sbb
sbb
jbe
lret
pop
js
xor
scas
pop
pop
rorb
aaa
adc
dec
lea
ds
popa
add
jne
cli
ret
rcll
popa
sbb
data16
into
dec
jno
add
dec
mov
cwtl
mov
popa
inc
dec
mov
sbb
sub
and
jecxz
ja
xor
popf
faddl
fcmovnu
add
jge
push
mov
lods
add
sbb
fadds
dec
jne
xor
in
mov
aaa
mov
jbe
fadds
and
sbb
cmpsb
cmp
decb
and
adc
cmpsb
and
ljmp
out
xchg
dec
das
test
xchg
adc
hlt
iret
cmp
stc
fdivl
lods
xor
mov
mov
cmp
fisubrl
push
ds
adc
jnp
xor
push
jns
ficomps
pop
lock
imul
xchg
lds
inc
jecxz
rcrl
xor
jo
pop
test
ret
loop
jae
sbb
ds
dec
xorl
fcomi
pop
pop
ds
repnz
lods
inc
lcall
movsl
in
rcl
sbb
out
push
push
xchg
add
push
jp
push
movsb
jge
mov
inc
out
and
out
inc
adc
cmp
inc
test
lret
jnp
lods
or
push
mov
pop
jmp
shrl
inc
mov
aas
mov
rcr
and
push
sahf
jb
ss
pop
cmp
adc
push
mov
shrl
xor
inc
or
mov
mov
repz
ud0
xor
jle
jg
movsb
jno
inc
pop
sub
addr16
sub
sbb
sub
push
insb
push
xchg
pop
repz
or
mov
lret
jl
call
dec
sarl
in
aad
pop
btc
cmp
lret
mov
jp
jb
imul
enter
repnz
orl
push
add
jbe
test
dec
mov
daa
out
pop
push
xchg
enter
outsl
xor
movnti
mov
lcall
xchg
fimuls
xchg
mov
adc
cmpl
mov
mov
scas
jl
jnp
gs
dec
shrl
in
xchg
inc
push
xchg
rolb
mov
push
fdiv
insb
pop
adc
mov
mov
popa
bound
jmp
fsubl
pop
mov
push
popa
mov
sub
in
cmp
xor
mov
add
test
iret
filds
push
adc
clc
imul
in
fiaddl
or
xchg
push
lock
sbb
lcall
dec
push
sbb
dec
sar
cs
pop
nop
jae
jg
lods
es
sar
or
cmp
repnz
rol
cmp
jle
js
jl
sbb
sbb
movsl
pop
mov
int
push
lret
popf
inc
push
clc
xchg
fs
sub
out
test
sbbb
dec
lods
cld
jno
sbbl
or
inc
xchg
xchg
inc
xor
xchg
lds
popa
test
xor
xorb
jb
jecxz
xor
inc
fucomp
fiadds
xor
and
sbb
cli
mov
lcall
sti
push
xor
cmp
jmp
push
ds
xorb
sbb
cmc
movsb
mov
mov
and
jle
andb
shrl
jmp
clc
adc
das
pop
inc
adc
jle
iret
push
shr
scas
dec
cmc
adc
fidivl
movsl
mov
insb
roll
sub
jle
in
sub
and
testb
sar
mov
jl
adc
and
repnz
pop
lret
cwtl
or
xor
out
faddl
test
lds
adc
inc
pop
jle
pop
arpl
lret
fimull
sbb
jns
inc
pop
adc
mov
aas
psubsw
or
jmp
cmp
gs
fisttpll
pushf
add
inc
pushf
negb
xchg
in
jbe
xchg
fbstp
add
add
cmp
cmp
daa
add
fisttpl
icebp
mov
rolb
cmc
rcrb
xchg
fs
inc
mov
mov
iret
rol
fildl
pop
sub
les
adc
gs
divl
adc
or
jle
inc
mov
push
mov
or
ja
out
mov
aam
dec
mov
push
dec
stos
loope
xor
popf
test
je
mov
aas
je
test
ss
ret
lods
nop
xchg
fdivl
cltd
loopne
loop
clc
mov
jae
jo
xor
js
mov
mov
inc
push
xchg
sarl
into
mov
ja
mov
in
testb
mov
mov
mov
clc
ficoml
test
sbb
test
out
adc
xor
fsub
sbb
push
fisubrl
push
fistps
mov
mov
and
sub
das
mov
jge
rcll
or
add
push
lcall
repz
iret
les
cmp
mov
dec
lahf
cld
inc
insl
mov
stos
add
push
push
hlt
std
mov
cmp
or
call
adc
pusha
in
cwtl
sbb
xor
je
jo
ljmp
fcomps
mov
mov
mov
pop
xchg
mull
ss
add
push
lret
popf
scas
iret
outsb
sbb
xchg
mov
lret
mov
js
cwtl
xchg
jno
bnd
sub
fwait
jle
add
ret
lret
push
cmpsb
fstl
adc
in
mov
pop
aas
xlat
dec
xor
repz
int
ljmp
push
inc
adc
push
ffree
neg
dec
aam
dec
mov
dec
ret
int
and
or
mov
loop
ss
jnp
sub
andb
cmp
cld
mov
sbb
sbbb
xchg
xor
pusha
call
mov
ljmp
sahf
enter
push
out
into
adc
xor
rcl
push
das
inc
and
push
mov
movsl
cmpsl
aam
in
or
das
or
jne
lock
sub
aaa
jle
scas
pushf
mov
gs
mov
cmp
out
cmp
and
add
stc
jno
pop
stos
insl
cld
or
push
sbb
pop
lret
divb
stos
sarl
mov
xor
setle
add
ret
add
fwait
les
xchg
and
dec
xchg
mov
mov
jge
stc
mov
mov
and
inc
aad
js
rcrb
jbe
dec
or
rorb
inc
out
and
shl
les
mov
testb
adc
loop
xlat
mov
mov
adc
into
jl
mov
inc
loopne
push
jo
inc
aas
test
or
andb
sub
hlt
pop
ret
pusha
and
jmp
imul
add
lock
jecxz
xchg
cmp
push
addb
jle
xchg
pop
test
cwtl
push
cmp
cmp
xor
and
cmpl
loope
sub
insb
fidivrl
inc
hlt
mov
insl
pop
push
add
mov
or
sbb
fs
xchg
dec
jbe
mov
fdivs
imul
xor
sbb
dec
clc
test
mov
stos
dec
xor
jb
fcoml
or
mov
hlt
test
push
ss
pop
mov
adc
rorl
xchg
daa
mov
push
adc
dec
dec
std
lcall
fildl
xor
aad
adc
sbb
add
frstor
fistps
stos
sbb
lcall
cmpsb
add
test
mov
clc
xchg
xchg
mov
cmpl
mov
xchg
inc
ud2
sbb
push
cmp
sub
xorl
xor
sub
inc
cli
mov
sbbb
sub
inc
fwait
xchg
js
mov
cmp
add
bound
sub
xchg
std
loope
adc
out
pop
and
movsb
ds
popa
jle,pn
fsubp
call
cmpb
lret
mov
pop
mov
mov
mov
imul
andb
dec
shlb
push
std
test
xchg
and
ja
int
enter
push
pop
dec
mov
stos
or
fdivs
push
sbb
pop
jbe
std
sbb
inc
rolb
adc
fcoml
shr
push
in
je
xor
jno
out
xor
jno
cmp
mov
push
xorl
arpl
data16
push
sub
sub
and
rcr
dec
push
xchg
push
test
enter
add
dec
fwait
shrl
adc
sub
loopne
dec
and
aad
fsts
inc
aaa
xchg
pop
adc
jmp
push
or
cmpl
fs
inc
and
xor
lock
pop
mov
mov
sbb
ljmp
hlt
decl
sbb
imul
sub
cld
push
mov
out
xor
ret
cmpsb
jg
mov
les
popa
enter
aad
add
pop
xor
inc
outsl
in
or
pop
repnz
cmpl
adc
cmp
push
adc
ljmp
negl
xchg
movsb
test
ss
sub
mov
fcompl
push
aad
push
or
add
xchg
mov
ret
ss
jno
les
shlb
scas
out
rcl
push
cmp
push
subb
fwait
cmp
repz
daa
or
jae
cld
pxor
adc
mov
or
adc
data16
pop
cwtl
cmpsl
stc
jmp
cmp
inc
mov
mov
scas
clc
jl
or
fsubp
mov
dec
cli
out
push
es
inc
pop
inc
test
pop
test
cld
mov
mov
jle
aam
push
retw
cli
push
pop
hlt
ret
cwtl
fldcw
cmp
jp
pop
push
fmull
and
das
jmp
scas
add
gs
es
push
imul
mov
mov
push
or
in
push
mov
stos
mov
cmp
push
inc
xor
xchg
push
fmull
movsl
into
jl
inc
cmp
pop
push
aam
hlt
xor
adc
aaa
outsb
shll
sti
xchg
arpl
push
test
mov
mulb
dec
popf
and
lock
addb
aam
mov
scas
push
mov
clc
leave
ret
xchg
inc
ljmp
ss
jle
out
inc
fdivrs
inc
rcrb
add
mov
and
fidivs
adc
lret
or
xor
mov
adc
push
xlat
stos
sub
bound
and
in
je
xchg
frstor
xchg
leave
add
pop
clc
in
cs
and
pop
out
fildll
data16
loop
push
int3
imul
push
cld
popf
push
mov
mov
ss
push
push
mov
dec
arpl
dec
jno
sbb
ljmp
inc
loopne
xor
outsl
mov
mov
out
add
inc
leave
cmp
mov
das
jne
xchg
into
push
sub
or
adc
out
aaa
mov
aaa
adc
lds
fdivl
sti
lret
incb
sub
je
pusha
std
inc
dec
scas
out
cmp
jecxz
add
sarb
mov
clc
jl
push
out
cmpsb
mov
mov
adc
inc
std
dec
xchg
aas
les
or
sbb
add
cwtl
int
mov
jp
sub
insb
cwtl
mov
sarb
aam
fiaddl
jl
xchg
adc
xchg
mov
xor
push
mov
and
stos
ljmp
xchg
test
jmp
ja
fcoms
inc
arpl
pop
std
aad
fisubs
adc
push
stc
lds
pop
test
xchg
jae
pop
dec
pop
add
mov
lahf
dec
sbb
stos
push
push
pop
pop
aaa
fbstp
mov
add
inc
jle
in
add
cmpsl
testl
and
push
sbb
fldcw
scas
push
or
pushf
xchg
fadd
xchg
shlb
pushf
add
pop
addr16
xchg
loope
call
dec
sahf
clc
xor
out
mov
pop
cmp
xchg
outsb
sbb
stc
jle
cmp
cmpsb
jg
std
xchg
mov
and
sti
fldl
push
outsb
sbb
stos
dec
and
mov
mov
rcl
cltd
mov
push
popf
push
imul
xchg
pop
sub
dec
sti
sbb
adc
inc
xor
adc
dec
jmp
in
or
xor
jb
outsl
or
cltd
inc
jge
cwtl
pop
dec
mov
ja
xor
cmpsl
js
push
mov
jae
in
pop
add
dec
or
mov
movsl
hlt
ret
std
jl
or
jl
js
fstl
add
sub
xchg
aaa
outsl
inc
lahf
and
leave
mov
xor
lret
mov
push
mov
lret
or
mov
cmc
push
imul
pop
xor
cwtl
outsl
jb
imul
test
sub
xor
test
aas
lcall
incl
xchg
xchg
out
jns
add
in
push
imul
addr16
adc
add
das
cmpsl
setp
out
fnstenv
repnz
mov
pop
pop
ret
xor
dec
mov
mov
sbb
add
scas
mov
shrl
fs
dec
shrl
xor
add
pop
pop
outsb
pop
dec
pop
pop
es
cmpsb
lock
jp
inc
arpl
sar
mov
sub
stc
popa
repnz
inc
mov
xchg
out
xlat
aam
test
xor
fs
dec
or
adc
push
js
hlt
lahf
or
addr16
out
std
inc
and
loop
push
jge
mov
mov
inc
push
lods
push
ficompl
push
xor
jne
fcmovnu
ja
push
shl
inc
imul
aad
jmp
std
movsb
lret
out
mov
leave
rol
addb
in
ret
stc
sub
adc
jb
test
cmpl
insb
je
iret
add
lret
sub
pop
pop
das
ficoml
repnz
or
movbe
in
pop
push
push
sub
pop
jg
sbbb
ret
int3
insl
dec
rcrl
jecxz
and
pop
add
lahf
lcall
jge
and
lds
shrb
popf
push
jno
lock
cvtpi2ps
push
aam
inc
fcmovb
push
xchg
push
in
ret
mov
sub
sti
dec
jle
xchg
out
fwait
pop
movsb
xchg
sub
loop
dec
out
dec
adc
divl
cmc
aam
cltd
bound
arpl
repz
add
xor
adc
push
and
pop
movsb
filds
sub
xchg
jno
xor
aad
sub
test
repz
sbb
add
pop
cmp
jmp
dec
xchg
and
daa
sub
andb
icebp
test
mov
mov
clc
add
mov
vcvttss2si
or
in
add
dec
jl
cmpsl
pop
test
repz
pop
imul
dec
mov
and
and
cmovp
mov
mov
mov
loope
pop
scas
ds
mov
arpl
pushl
add
or
adc
insl
roll
jae
inc
sub
inc
jmp
sbb
sub
push
add
push
pcmpgtw
xchg
mov
lret
mov
dec
mov
sub
pusha
adc
test
arpl
loope
int
rolb
into
or
dec
dec
or
ret
and
test
mov
pop
ljmp
mov
push
mov
xchg
inc
sub
pop
adc
mov
insl
enter
inc
dec
push
scas
psubd
jl
scas
js
cltd
xchg
loop
cli
stos
dec
fdivrl
sbb
jge
jns
mov
lds
ffree
jno
scas
movsl
rorl
jmp
clc
sbb
inc
and
dec
ret
scas
test
in
mov
lret
loope
or
out
cwtl
pop
enter
xchg
ret
roll
sbb
pop
popf
jbe
sbb
mov
nop
or
mov
and
mov
out
dec
pop
dec
loopne
pop
sbb
fcmovnu
test
in
lcall
lcall
cmp
pop
fidivl
fmulp
adc
or
sbb
enter
inc
in
int3
repnz
jae
test
bound
mov
cmp
mov
sub
les
cmc
sub
cmp
lds
inc
mov
or
cld
add
push
dec
aas
mov
lret
stc
cmp
lret
cmp
mov
bound
scas
inc
jmp
cld
fisttpl
push
or
outsb
mov
dec
aaa
lcall
outsl
inc
int3
out
push
in
negb
sbb
xchg
cli
mov
inc
lea
jge
jnp
adc
int3
sti
ret
shrl
adc
stc
ss
fidivs
sti
jl
into
sbb
or
lock
out
js
test
test
push
jne
lahf
repz
xchg
jb
enterw
dec
mov
mov
ret
push
das
fmuls
push
ljmp
loope
push
clc
out
hlt
movsb
les
push
jae
xchg
ja
mov
add
roll
in
pusha
mov
scas
cmp
push
mov
in
sub
in
jge
xchg
mov
sub
sarb
test
sbb
lock
push
jp
mov
out
bound
adc
in
imul
enter
lret
cmpsl
sub
pop
fstpt
mov
pop
dec
in
push
cmp
push
inc
mov
mov
inc
mov
int
aam
lock
mov
sbb
clc
pop
xor
mov
inc
fidivl
cld
pusha
push
mov
jp
rcrb
jg
into
loope
out
out
mov
xchg
cmp
sbb
cmp
ds
xchg
enter
xchg
fdivp
inc
cwtl
insb
aas
mov
imul
jne
ja
sub
pushf
jg
sbb
lock
js
aas
insb
data16
mov
sti
imul
leave
inc
mov
pop
or
adc
cmc
fmull
mov
testb
popf
dec
mov
mov
ss
inc
and
pop
in
fptan
mov
fisubrs
mov
lcall
mov
adc
testl
mov
lcall
arpl
dec
fbstp
xor
xor
cmc
int
jnp
mov
pusha
loop
xchg
cmp
push
mov
ret
pop
and
adc
mov
jne
xchg
pop
jp
pop
ret
xorb
mov
dec
sub
das
push
roll
and
les
cmp
jecxz
in
xor
jecxz
test
pop
imul
push
pop
inc
out
cmpl
mov
push
xor
push
sub
call
pop
ret
adc
shll
mov
fistpl
jmp
gs
leave
pop
pop
lret
xchg
incb
add
loope
mov
ret
outsl
sub
pusha
lods
inc
int3
dec
push
lock
sti
repnz
cmc
or
je
fstpl
or
xlat
arpl
sarl
push
and
jbe
push
arpl
rolb
mov
nop
fdivrs
loop
pop
decl
sbb
mov
push
jns
sub
pop
jne
xor
loop
and
dec
add
loop
lods
mov
shrd
popf
js
shl
adc
push
lret
sti
inc
movsl
notl
pop
mov
test
mov
scas
add
idiv
mov
adc
mov
dec
mov
push
inc
mov
int
popf
sbb
sub
cmp
adc
xchg
cmp
jmp
stos
xorps
cmp
punpcklbw
jecxz
mov
mov
jb
into
inc
cmp
es
jbe
les
repz
sub
push
cmp
pop
icebp
pop
cwtl
loope
xchg
js
push
subl
ja
xlat
repz
cli
push
cwtl
jne
push
aaa
sub
lret
cmp
sbb
mov
mov
xchg
mov
pushf
aad
test
adc
pop
mov
xor
in
and
cmpsb
xor
popa
push
cwtl
cmp
mov
add
mov
inc
dec
dec
push
xor
ret
scas
mov
jp
jp
sub
jae
xor
cmp
dec
leave
sub
test
daa
xor
mov
lret
cmp
push
imul
fimuls
jnp
sbb
imul
mov
push
bound
cmp
or
xor
test
fsin
adc
dec
cmpsl
jge
mov
popf
push
jle
inc
inc
lods
icebp
push
ret
xor
or
inc
out
push
or
cltd
sbb
sarb
adc
push
adc
xor
add
sbb
hlt
stos
cs
and
mov
xor
push
xor
mov
jns
out
xlat
pop
in
shlb
cld
adcl
jle
fiaddl
jbe
mov
sahf
outsb
int3
fsts
addr16
repz
imul
and
pop
push
ljmp
ret
mov
push
push
imul
xchg
sahf
mov
iret
inc
xor
inc
and
sbb
sbb
xor
int
popf
xchg
xchg
iret
push
dec
insb
cld
inc
inc
adc
xchg
push
adc
cmpsb
test
sub
pop
pop
adc
jmp
xlat
sbb
or
pop
nop
aas
pop
mov
sub
pop
mov
xchg
sti
jle
xor
push
mov
jecxz
push
lods
mov
sub
mov
push
dec
in
pop
push
daa
xchg
test
cmc
clc
add
rcrl
addb
lahf
xorl
adc
mov
lcall
cmp
aad
xor
andl
aad
or
int3
outsl
es
pusha
mov
push
cmp
pop
and
mov
dec
push
mov
add
cmc
addr16
loope
add
es
cwtl
or
sub
jne
add
es
pop
pop
dec
addb
enter
xor
cmp
mov
ds
xor
and
es
jl
mov
pop
or
push
dec
test
test
push
in
decb
fistl
scas
fcoms
pop
scas
icebp
xchg
call
insb
mov
cs
jae
adc
xorl
fisubrs
and
lahf
xchg
add
addr16
shlb
add
repnz
inc
pop
ficoml
pusha
push
movsl
pop
stos
dec
xchg
pop
insb
test
in
pop
mov
cmpsb
mov
shlb
push
mov
cmp
sbb
xor
inc
jns
in
aad
xchg
cli
push
lock
jge
jns
dec
adc
adc
sbb
ds
lret
mov
out
repz
inc
sub
arpl
pop
cld
cmp
jl
sbb
or
xor
fs
mov
mov
adc
xchg
pop
and
xchg
cmp
dec
push
jle
imul
out
xchg
push
and
nop
push
xlat
clc
jae
dec
out
mov
in
add
aaa
call
cmpl
test
cmpsb
dec
bound
daa
push
xchg
rcrl
mov
lea
jnp
push
mov
cmc
cs
ljmp
cld
push
mov
sahf
xor
xchg
push
decl
bound
mov
fs
adcb
xlat
stc
xor
pop
nop
inc
jmp
mov
dec
xor
or
cmc
mov
test
aad
sahf
xchg
loope
xor
pop
cwtl
jl
pusha
dec
aaa
adc
cmp
je
mov
sar
mov
adc
and
sahf
arpl
sti
and
fsubrs
dec
aad
lahf
or
mov
pop
jnp
in
inc
adc
ja
ds
lods
icebp
mov
push
cld
cmp
iret
int
sarb
sub
sub
popf
xor
xor
pusha
adc
adc
in
jnp
xchg
sub
mov
mov
sbb
mov
and
sub
popa
cwtl
xor
cld
or
and
mov
test
inc
jmp
adc
push
push
mov
sbb
fsubp
icebp
aad
fcomp
fimuls
sub
and
xor
or
mov
daa
loop
fstl
xlat
loop
mov
call
insb
and
and
add
into
inc
iret
rcll
sub
nop
mov
jmp
xor
std
jbe
xor
loope
mov
xchg
std
mulb
inc
iret
gs
dec
sub
adc
icebp
in
inc
or
cmp
mov
cs
mov
push
sub
add
inc
pop
insb
test
aas
in
push
test
dec
jbe
mov
mov
sbb
int3
mov
lea
dec
xor
pop
ljmp
cmc
dec
mov
mov
jmp
mov
loop
xchg
xlat
loope
push
stos
adc
rolb
jno
insl
pop
popa
jno
hlt
dec
stos
fsubrl
pop
sahf
aaa
mov
shlb
jg
and
sbb
pop
and
rorb
mov
lret
or
enter
lds
mov
imul
inc
add
fistpl
test
cmp
lds
sub
dec
dec
mov
sbb
or
pop
push
jnp
stos
lret
pop
lods
inc
ret
mov
dec
mov
pop
mov
int3
add
data16
push
adc
aaa
sub
adc
ficompl
mov
jbe
and
imul
fistps
rcl
xchg
push
xorl
add
movsl
insl
and
push
enter
mov
or
into
bound
xlat
add
inc
jmp
or
fsubl
mov
mov
lcall
clc
add
mov
inc
push
dec
jg
int
push
mov
jo
cmc
shr
or
loop
dec
test
fsubl
nop
lds
pop
fdivrs
out
xchg
movsl
push
and
push
daa
dec
inc
inc
push
cmp
imul
mov
fadd
jno
scas
ret
push
fnstsw
and
jge
add
ds
sti
pop
enter
inc
adc
cmc
xchg
sbb
dec
lods
lods
and
vpcomd
mov
add
mov
mov
jno
inc
cld
jecxz
mov
or
jbe
add
xchg
sbbb
fsubr
or
out
mov
iret
sbb
add
lea
fsts
sbb
test
stos
xchg
ret
push
inc
add
pop
xor
or
fdivl
sahf
pop
insb
inc
mov
sbb
movsl
cmp
cs
sti
and
in
xor
mov
xchg
push
cmp
mov
inc
mov
movsb
jge
jmp
push
jns
xchg
push
or
adc
ficompl
out
inc
lods
pop
mov
pop
ja
xchg
in
loope
and
sbb
or
dec
shlb
jp
push
sbb
shl
mov
in
rcl
pop
lock
lcall
or
mov
cwtl
pop
leave
cmp
ds
fcoml
decl
iret
pop
pop
scas
fmul
fistps
ljmp
je
sub
lods
jae
pusha
repz
inc
xor
xchg
push
and
es
mov
push
popa
adc
outsb
cwtl
shll
scas
inc
hlt
xchg
mov
mov
xchg
jb
es
in
sub
sbb
lods
bound
sbb
addr16
mov
stos
movsb
or
push
pop
sbb
sti
into
lret
dec
lds
adc
call
push
and
xchg
sub
cmp
cwtl
jbe
adc
dec
ss
cmpsb
insb
inc
jp
das
shlb
imul
pop
inc
test
cmp
gs
dec
div
les
pushw
sub
data16
add
xlat
mov
orb
sbb
pop
test
xchg
xor
add
pop
jnp
push
sub
mov
aam
insb
mov
xor
jne
adc
ret
movsb
xchg
scas
or
jg
lods
mov
or
dec
incl
je
lahf
enter
popa
sub
mov
push
outsl
leave
fwait
rcr
mov
bound
hlt
push
sub
adc
push
pop
notb
mov
jbe
cltd
dec
jp
inc
cmp
xchg
popa
in
xor
loopne
rorb
adc
adc
mov
push
mov
in
pop
cmpsb
std
in
loopne
movsb
and
push
inc
outsb
fs
push
pop
cli
mov
adc
sti
mov
test
mov
push
iret
xlat
push
inc
cmc
dec
jge
sbb
mov
xor
loop
pop
jg
fimuls
push
mov
jl
stos
push
lock
fucomip
xchg
cmp
mov
pop
pop
add
cmpsl
pop
lock
pop
sub
scas
scas
push
paddq
or
stos
jo
cs
cmp
mov
pop
popa
add
outsb
subb
mov
repz
mov
fwait
sbb
ret
xor
lods
shl
jbe
sub
dec
mov
sti
mov
sub
icebp
xchg
data16
sub
adc
xchg
mov
xchg
pop
lds
popf
cmp
push
call
pusha
dec
popa
or
push
scas
cmp
movsl
cmpsb
inc
and
loopne
pushaw
rclb
jecxz
xor
popa
mov
dec
clc
xor
xchg
inc
xor
pop
stos
mov
or
in
repnz
jo
add
adc
cmpsl
sub
dec
mov
fwait
xchg
jmp
xor
lret
xchg
fs
fisttpl
sbb
jo
mov
xor
out
push
pusha
and
add
mov
sarl
mov
call
mull
fwait
pop
arpl
lds
and
mov
cmp
das
ja
pop
call
mov
scas
cmpl
mov
int3
inc
loop
add
xchg
xchg
dec
mov
xor
jg
dec
mov
lcall
xchg
cmpsl
pop
and
shlb
mov
and
mull
add
or
add
test
fimuls
push
inc
icebp
leave
test
push
pop
adc
add
dec
out
xchg
sub
daa
jecxz
xchg
xchg
lcall
add
in
and
scas
mov
mov
out
popf
stc
and
scas
mov
inc
mov
popf
dec
shlb
inc
fimuls
inc
popa
movsl
cmp
les
sub
js
sub
mov
sub
jp
test
std
subb
jae
cmp
or
imul
movb
fwait
data16
xchg
fsts
sub
sub
or
std
aaa
hlt
sub
jecxz
call
sub
xor
sarl
push
stos
mov
xchg
sbb
inc
popa
sti
lods
daa
cmpsb
lret
mov
in
xor
stc
aas
push
jle
ds
shrl
dec
push
loope
mov
sub
pop
mov
out
fcoms
data16
je
je
into
lods
outsb
sub
adc
mov
icebp
mov
xchg
xchg
xchg
mov
jo
or
in
push
dec
add
lret
and
ss
test
xchg
data16
es
or
dec
xor
std
das
jle
mov
cltd
rcrl
lcall
js
repnz
movsb
pop
fidivs
push
mov
iret
lret
dec
and
test
cwtl
jns
fldcw
scas
jle
inc
enter
push
sbb
andl
out
out
mov
inc
rcrl
shlb
xlat
nop
jl
push
gs
mov
push
pop
das
mov
movsb
push
mov
rorb
sub
dec
mov
gs
in
lahf
mov
dec
mov
xlat
sarl
enter
ror
daa
push
leave
test
movsb
ret
adc
jb
daa
fucomp
xor
andl
inc
cwtl
movsb
ljmp
imul
mov
push
add
aaa
xor
jmp
push
pusha
int3
cmpl
jb
and
sarl
adc
push
add
ficomps
rorl
int
clc
xor
std
mov
mov
jmp
movsl
fiaddl
pop
out
fbstp
mov
push
or
insl
push
fwait
and
cwtl
cmp
mov
cmp
mov
gs
int3
fdivrp
pushf
push
sti
subps
jno
daa
xor
ds
les
in
inc
iret
adc
out
add
xchg
push
dec
mov
mov
mov
in
mov
push
in
mov
in
pop
xchg
mov
xchg
gs
test
icebp
test
fmull
scas
and
scas
sub
adc
push
sti
out
dec
xchg
setns
je
pop
pop
add
xor
lods
stos
cmc
and
xchg
jmp
adc
sarl
sbb
jne
cmp
jg
pop
test
in
and
leave
test
mov
and
jb
ficoms
mov
pop
cmp
lcall
and
adc
pop
fnsave
mov
mov
mov
shl
inc
cmp
or
sbb
or
or
push
push
mov
enter
mov
push
int
mov
maskmovq
mull
iret
lods
out
daa
je
out
popa
jle
jae
int3
les
sahf
mov
mov
ja
sub
stc
push
xlat
xor
pop
inc
lock
sbb
pop
inc
add
outsl
dec
sbbb
adc
sub
push
subb
sub
movsl
stos
push
dec
stc
inc
imul
lret
and
lea
xor
out
shll
jne
or
sub
xor
loopne
lods
pop
nop
outsb
je
adc
mov
ret
fisttpll
scas
push
movsb
adc
mov
lret
and
push
sbb
sub
enter
mulb
test
sbb
ja
sbbl
add
inc
sti
sbb
push
xchg
nop
sub
jne
xchg
test
addl
int
insb
sbb
xlat
add
imul
mov
or
push
sbb
xor
inc
add
imul
or
outsb
mov
dec
outsb
in
mov
xor
and
imul
leave
popf
lret
lret
out
xchg
pop
inc
inc
faddl
test
out
es
movsb
stos
in
sbb
popa
aaa
aas
push
add
and
mov
inc
xchg
cmp
xchg
lods
fwait
sub
sub
add
outsb
pop
nop
inc
lods
dec
fbld
fldt
addb
adc
ljmp
int3
xor
int3
sbb
lcall
addr16
jbe
sar
mov
and
shlb
inc
ret
inc
loop
outsb
inc
pop
outsb
push
inc
pop
add
lea
int
fistpl
fisttpl
mov
jnp
xchg
jmp
inc
dec
in
ja
dec
or
mov
cmpsb
inc
pop
test
push
or
pop
jb
std
fnstcw
in
or
xchg
jmp
test
sbb
sbb
stc
adc
mov
insb
xor
stos
add
hlt
dec
outsl
mov
das
adc
sub
lret
ja
insl
xchg
jmp
cs
jmp
cltd
inc
xor
test
push
sbb
jne
xlat
test
xchg
mov
pop
scas
popa
mov
push
xor
movl
push
rcll
xchg
lret
mov
popa
and
mov
add
xchg
cmc
dec
aam
aas
std
movsb
xlat
push
addr16
pop
cmp
and
add
ja
xchg
test
xlat
add
push
mov
fdivrs
lea
mov
ljmp
cltd
sbb
repnz
pop
adc
sub
cmp
je
xchg
icebp
fistps
test
mov
adc
jge
addr16
or
mov
and
xor
xor
push
mov
fstpl
mov
jne
sbb
lret
pusha
insb
movsb
or
das
mov
test
inc
inc
scas
divl
sub
addr16
fwait
jae
pop
ss
mov
sub
mov
adc
jg
xor
movsl
filds
jne
clc
rorl
rcrl
push
insl
scas
data16
imul
les
cmp
adc
inc
iret
cmp
jae
out
mov
mov
mov
out
push
insl
and
icebp
jmp
ret
fsubrl
in
adc
adc
sti
fcmove
test
cld
xchg
arpl
sub
mov
test
dec
movsl
xchg
shl
lret
mov
sbb
fmulp
jmp
sub
sbb
mov
pop
rcr
pop
lret
sub
enter
imul
data16
scas
insl
lret
or
xchg
cmpb
sub
cmp
clc
jbe
lret
push
imul
push
jecxz
cld
mov
jne
insb
mov
push
xchg
xchg
testb
aam
inc
stc
out
ljmp
pop
shll
loopne
leave
icebp
in
loopne
sub
iret
jno
mov
cmp
push
and
enter
mov
push
shrl
shlb
and
addr16
xor
das
jg
cmp
ret
test
xchg
dec
fnstenv
jae
cltd
fimull
testb
cs
jno
pop
cmp
insb
fldl
aam
push
out
ret
dec
jns
std
scas
aam
mov
sbb
jo
les
cmp
adc
imul
std
add
add
cmp
lcall
mov
ret
jmp
nop
mov
icebp
icebp
dec
or
sub
dec
lret
int3
cmp
push
lret
adc
hlt
roll
xor
add
lcall
movsb
adc
push
decl
jns
cmpsl
or
jg
in
sarl
add
js
cmp
add
xor
xchg
push
add
push
rcrb
sub
mov
mov
aaa
add
loope
insl
lock
pop
or
imul
je
jno
in
subl
nop
mov
and
cmp
out
outsb
outsb
popf
push
sar
mov
call
mov
sbb
inc
mov
sbb
cmp
movsb
fisubs
aaa
push
pop
aam
std
add
fiadds
cld
xlat
addr16
lea
out
pop
ja
in
mov
roll
cmpsl
movsl
xor
dec
sbb
pushf
cmp
or
sarb
push
cld
ret
adcb
or
andb
jge
test
outsb
jmp
movsb
out
mov
xchg
outsl
pusha
mov
mov
idivl
add
pop
pop
fcmovb
sub
add
stos
and
scas
vcmpps
mov
xchg
xchg
cmp
ja
xor
lods
test
test
mov
scas
rorb
int3
inc
into
mov
call
lods
fistl
rclb
cwtl
cmp
jb
inc
add
push
or
lods
mov
fcmovne
ljmp
sbb
adc
movsb
sub
and
and
sub
and
ja
xor
sbb
lret
jo
lret
jb
xchg
mov
cmp
ja
or
xor
xchg
jmp
ja
lahf
enter
bound
xor
int3
xchg
cld
negb
pop
stos
jbe
sbb
inc
jb
clc
xor
xchg
aam
xor
stos
ret
mov
call
into
rclb
std
popf
and
dec
movsl
xchg
jae
inc
or
imul
ficoms
inc
cmp
lcall
ficoms
xor
data16
and
div
lret
notl
jb
or
ss
fidivrs
push
jne
xlat
ja
inc
leave
lods
xor
push
mov
mov
sub
jbe
das
test
pushf
xor
fs
in
push
pop
outsl
xchg
sub
xchg
mov
mov
test
hlt
xchg
nop
shr
inc
or
cs
ret
xchg
pop
xchg
xor
xchg
xchg
insl
push
pop
sub
int3
jmp
pusha
adc
push
and
mov
mov
and
les
sbb
adc
div
out
nop
jl
push
lahf
inc
and
dec
adc
sbb
jmp
inc
js,pt
daa
ljmp
cli
push
sbb
sbb
push
test
push
cmc
mov
dec
mov
mov
nop
adc
jp
jg
fdivl
jne
mov
fidivrs
sbb
stos
mov
fdivrl
mov
push
jno
push
cs
lods
sbb
mov
push
mov
adc
sub
das
es
sbb
mov
xchg
sti
and
xchg
pop
dec
int3
scas
fcmovbe
pop
addr16
cmc
pop
pop
push
or
xorl
daa
daa
mov
push
push
xchg
movsw
push
ja
push
ljmp
sub
repz
add
inc
cli
repnz
shll
test
xchg
adc
mov
push
fcoml
inc
in
cli
in
cmp
fstpt
fisttps
outsb
int
cli
and
xchg
sbb
loop
add
out
sbb
pop
in
and
or
das
sarl
sahf
stc
sti
lds
gs
sbb
and
push
lret
sub
inc
movsb
ss
push
out
popa
out
xchg
roll
mov
std
lock
adc
mov
xlat
pop
notb
inc
in
imul
push
int
pop
jmp
inc
dec
dec
lods
fldenv
xor
xor
lods
sub
outsb
adc
stos
nop
js
js
or
sub
fnstenv
cmp
mov
cli
jns
or
lret
test
add
lcall
add
and
out
mov
cltd
or
mov
dec
ret
imul
call
cmp
in
sti
xor
or
pusha
push
shrl
push
pop
lcall
cltd
ret
mov
sti
mov
cmp
aaa
mov
testl
mov
cmp
mov
jne
mov
lret
gs
xchg
popf
and
ljmp
mov
mov
inc
inc
fxch
outsb
pusha
jle,pt
and
imul
sbb
mov
dec
mov
dec
adc
movsb
xor
jle
in
cmp
enter
xlat
dec
shlb
and
jg
test
xchg
inc
hlt
cmp
or
enter
or
sbb
adc
jno
in
sti
inc
or
out
or
mov
mov
mov
push
insl
sbb
jmp
push
scas
adc
mov
int
pop
mov
pop
pop
movsl
fsubl
xor
in
mulb
sub
test
daa
mov
bound
movsl
fcos
insl
stos
pop
and
xor
or
inc
roll
aad
in
mov
jmp
pop
and
and
xchg
mov
das
mov
xor
adc
sub
mov
dec
dec
lods
add
mov
xor
jae
in
insb
xchg
mov
dec
sahf
add
pop
push
dec
push
je
inc
dec
jg
jle
test
leave
cmp
or
xchg
dec
test
movsb
movsb
aam
stos
imul
popf
pop
clc
shrb
cmc
cmp
out
popf
push
adc
cwtl
and
adc
inc
adc
mov
imul
mov
shlb
jns
mov
jl
jg
pop
push
mov
les
fnsetpm(287
test
mov
xchg
sbb
test
fisttpl
out
pop
inc
sbb
mov
stc
xor
mov
add
or
dec
hlt
dec
xor
mov
dec
pop
xchg
lret
xor
fldt
out
jl
pop
inc
fidivrl
imul
jno
cmp
rcrb
daa
xor
mov
cltd
scas
lcall
enter
and
xchg
push
push
ds
cmp
pop
xchg
ljmp
gs
ud1
fwait
push
sub
cltd
push
lcall
mov
cli
mov
mov
dec
sub
gs
lcall
orb
repnz
stc
xchg
pop
mov
clc
sub
and
sar
dec
pop
sbb
pop
push
sbb
add
mov
pop
adc
sub
fldenv
and
sbb
inc
mov
decb
stos
addb
inc
outsb
mov
lea
cld
mov
jns
cmp
and
cmp
push
xchg
in
mov
cltd
jnp
mov
lods
cmp
das
push
xchg
clc
adc
push
pusha
arpl
mov
cmp
lds
cmp
or
adc
loop
jge
jnp
push
lcall
mov
jmp
mov
loop
test
jae
push
insl
lret
jns
lret
incl
cs
xchg
jb
jo
into
and
call
data16
push
sub
push
ljmp
mov
decl
addr16
adc
mov
push
xor
xor
in
sbb
xchg
mov
sub
clc
mov
jp
shr
and
outsb
aas
pusha
aaa
in
fdivrl
into
inc
lds
xchg
mov
aas
mov
mov
shll
movsb
cli
push
repz
lcall
push
movsl
push
jno
addb
aam
cltd
mov
jge
mov
adc
jg
pop
mov
loopne
test
enter
popa
cmp
mov
mov
lret
sub
psrad
in
add
xor
push
in
out
and
inc
jecxz
lock
sub
xchg
cmp
mov
loopne
xchg
jp
mov
das
dec
add
lock
pusha
jp
pop
add
cli
lret
aaa
mov
les
mov
in
repnz
xchg
pop
mov
movsb
clc
shlb
adc
out
pop
jp
int3
cmpsb
xchg
pop
dec
xchg
inc
bound
sub
inc
ds
sub
mov
inc
sub
sub
xlat
ss
movsl
and
inc
inc
xchg
shll
popl
in
loope
cwtl
aad
mov
cmp
popa
pop
lret
adcb
pop
cld
jmp
jns
je
jmp
xor
ja
add
xchg
sahf
notb
jle
shrb
mov
cmp
pop
dec
cmpsl
xor
popf
jmp
xchg
pop
cltd
dec
jmp
fidivrs
cld
push
ljmp
add
pop
xchg
xchg
clc
jo
mov
inc
pop
rcll
test
dec
mov
sbb
xor
mov
test
aas
dec
push
cwtl
lret
xchg
cltd
mov
enter
adcb
dec
pop
cmpsb
xchg
sbb
sbb
mov
gs
popa
pop
js
add
adc
dec
test
or
in
cmp
outsb
ds
jg
push
mov
sbb
sahf
inc
sub
or
or
push
mov
pop
xor
rolb
lcall
ret
enter
jecxz
pop
jl
push
andb
push
add
pop
fimuls
fmulp
cmp
movsb
test
mov
dec
into
loop
xchg
or
aas
push
js
test
aad
inc
cli
inc
dec
push
xchg
mov
cmp
pop
mov
cmpsl
xlat
pop
xor
inc
pop
daa
sub
loop
pop
or
daa
sbb
mov
in
sbb
xlat
xor
ret
or
aam
in
int3
in
jg
pop
xor
xchg
rcl
fidivrs
mov
int3
mov
add
imul
int3
xchg
dec
or
sub
adc
ficoml
fidivrl
and
mov
jbe
inc
or
dec
ret
cli
push
fdivl
sbb
in
int
out
sbb
mov
shrb
adc
pop
xlat
js
jbe
inc
out
xchg
je
mov
or
data16
jae
cltd
push
cmc
movsl
push
test
jmp
sbb
push
sbb
out
mov
cmp
and
cmp
and
jnp
cmpsl
add
xchg
mov
rcrb
xor
nop
push
xchg
cmc
loop
push
lods
cmc
xor
mov
sbb
bnd
pushf
pusha
imul
sub
xchg
fdiv
faddl
jae
xor
mov
int
jns
jbe
add
mov
xor
jmp
test
xlat
jbe
adc
jmp
ja
jo
cwtl
call
cs
add
popa
test
rolb
push
xor
mov
mov
cltd
fiadds
leave
push
add
fdivr
cmp
push
xor
mov
out
dec
call
mov
jae
push
aam
sub
test
or
mov
sub
test
shrl
decb
adc
adc
jo
push
xor
mov
xchg
stc
jle
or
sub
mov
daa
ljmp
shll
fstl
dec
nop
aam
movsb
xchg
data16
outsb
jp
mov
jp
pop
out
aaa
mov
mov
push
add
add
mov
call
xchg
insl
jge
jl
shlb
xchg
dec
or
mov
repnz
aaa
and
scas
aad
shrl
or
mov
stos
cmp
inc
out
inc
subb
mov
lret
inc
fidivrl
pop
cmp
jge
clc
mov
mov
cmp
xchg
orb
sub
stc
dec
popf
das
fdivrl
jns
aas
test
jmp
scas
cli
pop
sbb
clc
fs
test
ljmp
mov
div
test
inc
inc
sub
leave
push
das
push
sarb
shrl
sub
mov
dec
pop
xchg
sbb
sub
sbb
stc
inc
adc
stos
xchg
adc
loopne
jne
push
add
aas
jbe
fstps
addl
scas
mov
sahf
sbb
outsb
mov
adc
loope
pushf
mov
cmp
mov
into
rcrb
out
mov
or
push
mov
out
cmp
inc
lods
stos
push
pop
and
xchg
cmpsl
push
fmul
dec
mov
scas
dec
sub
ds
xor
mov
sbb
jg
leave
aaa
shlb
lea
movsl
xor
push
js
or
pop
ds
lds
bound
cmpl
cli
addb
std
inc
bound
jnp
add
data16
xor
dec
scas
mov
inc
insl
pushf
inc
inc
imul
daa
ja
lcall
pop
sbbb
insb
xor
sarb
and
jl
ror
iret
push
sarb
or
stos
pop
and
lock
xorl
bound
divb
dec
les
inc
push
sub
xor
fmul
jmp
in
sbb
scas
leave
jbe
lds
es
and
jno
jns,pn
outsl
push
insb
push
push
sbb
loope
pop
inc
in
xchg
push
sbb
push
dec
movl
inc
mov
fs
pop
pop
mov
cld
aaa
inc
or
cwtl
xorl
ret
cmp
xor
or
inc
sub
sahf
or
add
flds
jge
inc
and
lea
hlt
adc
rcll
mov
addr16
pop
in
fmuls
cmp
add
jae
jmp
in
nop
bound
mov
gs
aam
and
and
pop
ret
and
mov
lock
and
mov
stos
ds
int
cmp
js
leave
pusha
add
or
out
mov
mov
sub
movb
fwait
lea
pop
pop
cwtl
lods
call
rcl
pop
std
and
inc
push
adc
lcall
test
add
cmp
mov
dec
repnz
mov
pop
scas
cmp
int
mov
lods
and
inc
rcrb
inc
adc
jne
pop
pop
or
cmp
out
dec
xchg
test
lods
push
sub
test
hlt
aad
scas
out
rorl
add
lahf
inc
lods
insl
scas
fidivs
insl
sti
add
sbb
outsl
insl
in
jp
outsl
mov
adc
out
cmp
xchg
mull
xor
lds
data16
sbb
push
push
add
sbb
inc
jnp
jno
lahf
loopne
and
popf
repnz
jnp
cmpsl
xchg
and
or
scas
lret
mov
mov
cmp
sbb
ss
and
dec
pop
add
cmp
stc
add
aam
jno
outsb
sahf
addr16
cmp
stos
jb
mov
lcall
out
push
pop
jp
sub
cmp
scas
xchg
adc
aas
pop
fnstcw
push
mov
sbb
fmuls
dec
inc
lcall
pop
lret
jecxz
cltd
scas
test
adc
popf
addr16
movsb
iret
or
fsubrs
cmp
jg
stc
test
pop
ss
daa
mov
inc
pop
cmpsb
mov
jge
les
push
out
call
adc
push
insl
pop
adc
call
jo
fists
pop
icebp
fnstenv
popf
je
hlt
es
sbb
push
bound
sub
popf
xchg
add
ds
out
xchg
or
pop
mov
adc
adc
dec
mov
fisttps
sbb
or
push
shll
push
pop
and
xchg
negb
arpl
imul
sub
pushf
inc
outsb
inc
jle
stos
sbb
mov
sub
inc
sub
sub
add
imul
repnz
xchg
ja
xchg
aaa
ja
lods
mov
mov
scas
mov
enter
insb
inc
mov
mov
movb
loop
mov
movsb
out
mov
pop
adc
out
xor
test
push
lea
sbb
shll
push
cmovle
add
push
cmp
xchg
mov
jb
cmp
push
mov
sbb
imul
outsb
fcmovu
push
mov
xorb
sub
dec
push
lahf
imul
insb
sbb
push
movsl
js
add
sub
adc
rcrl
es
fbstp
dec
xor
xchg
repz
push
cmp
mov
or
lea
test
pushf
and
ja
mov
push
in
sbb
xchg
jo
push
push
xchg
sub
sbb
out
pop
xor
sbb
arpl
sbb
xchg
mov
mov
insb
jl
xchg
cmpsb
addr16
pop
scas
xor
scas
out
dec
push
loope
sbb
jne
and
ss
mov
push
sub
std
mov
xor
jb
test
cli
xchg
jne
xchg
out
popf
shrb
out
mov
aaa
pop
push
cmp
lahf
xchg
ja
or
enter
movsl
pop
aaa
pop
sbb
cmpsb
flds
mov
and
pusha
and
imul
rolb
leave
cmp
pop
dec
aad
xor
inc
sbb
mov
add
in
imul
inc
stc
out
or
mov
jne
repnz
adc
inc
xor
cld
std
and
fdivrs
scas
arpl
scas
sbb
or
jmp
flds
pushl
cld
push
mov
and
pop
mov
sbb
pop
add
dec
ds
mov
mov
jle
or
and
fwait
int3
inc
xlat
sub
add
icebp
mov
lods
insl
arpl
and
xchg
lret
mov
stc
fsub
lock
mov
inc
out
xchg
jns
test
in
xchg
sbb
sub
fwait
mov
xlat
inc
ljmp
pop
dec
push
lock
sub
test
mov
cmp
mov
xchg
shr
pop
nop
in
fdivrs
dec
outsl
pop
sti
test
bound
cmc
jle
cs
sbb
call
scas
pop
rorb
inc
sub
xor
enter
jge
popa
movsb
ficomps
mov
sti
xlat
sti
inc
pop
repnz
jb
dec
out
pop
loope
mov
sbb
notb
fmull
sub
in
push
orl
mov
dec
push
xchg
sbb
into
sub
cmove
xchg
addr16
and
divl
pop
add
xchg
jo
mov
inc
xor
sub
outsl
arpl
and
aad
lcall
cld
and
adc
dec
sbb
cmc
nop
testb
inc
lcall
rcrb
fs
cld
add
xor
test
negl
mov
clc
jle
jae
mov
mov
jge
repnz
repz
sbb
ret
sbb
add
in
add
cmp
ret
jns
imul
daa
int3
adc
call
fistps
xchg
sarl
outsb
repz
jmp
cltd
xor
jno
jae
pop
stc
adc
pusha
jo
fldt
out
js
dec
mov
inc
js
push
push
sbb
je
or
or
clc
pop
mov
push
mov
mov
inc
push
sar
hlt
lahf
jb
jnp
addl
iret
cmc
mov
jns
mov
call
lret
dec
push
sar
push
andb
xchg
inc
loop
test
iret
test
push
sahf
cltd
sahf
or
cmpsb
lcall
in
push
pop
loopne
ja
jl
adc
sub
adc
leave
push
orb
lods
pop
pop
xchg
mov
shll
and
rolb
xor
mov
push
mov
cmc
sarl
ret
push
mov
xor
add
nop
ffree
fisttps
clc
mov
stos
add
jnp
fs
and
mov
mov
cmp
mov
sti
lock
pop
lods
mov
push
and
lret
mov
sti
mov
sub
cmp
in
hlt
dec
aam
push
sub
vmovdqa
lahf
xor
in
hlt
xchg
nop
pop
inc
mov
push
test
mov
jne
les
adc
jg
lret
outsl
pop
jne
negb
mov
dec
cmpsb
cmp
and
cmp
inc
das
xor
aaa
xchg
dec
or
xchg
es
mov
insl
mov
fdivs
push
sub
shll
xlat
movsl
cld
add
addr16
dec
mov
mov
add
in
dec
push
or
pushf
sub
sub
cmp
jae
lods
iret
mov
out
dec
popa
pushf
xor
xchg
mov
mov
and
mov
cmp
inc
mov
add
gs
adc
or
or
ds
cld
sbb
jo
in
inc
sbbb
pop
lahf
out
xchg
jo
subb
movsl
lea
ds
mov
dec
popa
inc
int3
inc
jg
enter
fsubrs
add
fsubrl
ret
add
mov
add
cltd
dec
repz
out
xchg
mov
and
xchg
cmp
cmp
push
clc
push
push
lods
jge
sbb
rolb
cli
sub
xchg
into
out
inc
jnp
ret
jmp
outsb
adc
push
mov
not
lock
jno
cmc
negl
or
cmp
int3
jnp
sbb
xchg
xor
pop
fwait
add
test
hlt
scas
or
cmpl
mov
inc
mov
loop
or
js
call
cmpsb
xchg
ss
fcomps
and
daa
inc
cltd
fnstcw
enter
inc
out
daa
fs
mov
pop
xlat
add
cmp
repnz
mov
pop
jbe
sti
xchg
jecxz
fstpt
gs
cmc
mov
mov
test
inc
scas
add
push
scas
and
gs
pop
pop
movsb
aas
push
dec
pop
pop
mov
mov
stos
jp
gs
mov
icebp
cmp
and
setp
es
das
push
jle
fcompl
sarl
add
dec
gs
pop
jl
fsubl
je,pn
cmp
insb
jbe
pop
mov
push
mov
popf
mov
jp
mov
aas
cs
sub
stos
repz
pop
pop
jmp
repnz
xchg
ffree
hlt
mov
cmpsl
xchg
dec
fwait
rolb
cmp
data16
or
mov
mov
scas
ljmp
stos
clc
mov
je
std
pop
pushl
ja
xchg
out
ret
jp
push
mov
dec
mov
lahf
mov
fdivl
mov
sahf
adc
and
dec
inc
add
push
jp
fwait
outsb
add
dec
adc
sub
dec
cmp
inc
cmp
fwait
push
imul
cmp
in
cmp
pushf
jo
jno
das
push
mov
ljmp
fidivrl
xor
mov
icebp
mov
sbb
mov
cmpsl
ficompl
popf
insb
xchg
loop
pushf
sub
push
mov
jle
push
cmc
adc
aaa
xlat
jmp
fidivl
mov
add
pop
dec
xor
and
inc
mov
adc
cmp
cmp
mov
rcrb
cli
dec
sbb
sub
mov
lahf
xchg
std
ss
dec
push
jno
dec
movsl
push
cltd
arpl
sub
lods
mov
iret
inc
fcompl
add
jne
pop
pop
and
and
cs
test
test
pop
cli
fisttpll
mov
adcl
jnp
sbb
add
fstpt
adc
push
pop
lret
xorb
fcoml
xlat
fdivrp
mov
jle
in
lea
lahf
je
mov
jg
fidivs
dec
push
dec
aas
shll
jmp
idivb
adc
int
or
incb
ja
pop
insl
lahf
mov
pop
push
std
je
dec
adc
cmpsb
sub
adc
leave
jmp
cmp
lahf
mov
lock
jmp
repnz
rcrb
mov
xor
push
enter
add
in
xchg
popl
cmp
mov
xchg
add
test
orb
jle
dec
test
cs
sub
insl
test
hlt
notb
lret
xchg
adc
stc
xor
rolb
out
imul
mov
push
adc
adc
rcrl
xorb
out
jge
ret
dec
shlb
push
repnz
call
sbb
cmp
add
repnz
and
iret
dec
out
jp
mov
and
jg
out
push
and
mov
xlat
mov
cli
xchg
fistps
mov
in
lock
or
je
insb
inc
add
xor
cmp
push
rorl
mov
push
lret
outsb
cld
lcallw
push
out
fmull
add
lods
or
js
adc
xchg
repnz
js
lcall
int3
jge
std
xor
in
bnd
jo
adc
sbb
out
and
cmp
loopne
jne
adc
out
or
arpl
mov
push
pop
xor
cmp
orl
jnp
adc
daa
lods
aam
mov
pushf
aam
stc
and
push
rcr
out
push
push
std
aas
outsl
mul
jge
loop
pop
xor
sbb
ret
scas
mov
test
iret
jae
inc
sub
roll
or
and
xchg
pop
repnz
aas
outsl
mov
test
jl
and
mov
adc
shr
jle
adc
push
scas
dec
xchg
mov
jno
or
push
icebp
ret
scas
jb
sahf
dec
cltd
call
cs
or
btc
ljmp
fdivr
add
test
mov
xor
jl
xchg
rorb
imul
xchg
ja
lods
and
test
push
or
orb
mov
cmp
sbb
in
aaa
sub
mov
jne
imul
jnp
mov
jnp
pop
cmp
xor
mov
scas
ret
lcall
out
fiaddl
cld
add
sub
lahf
mov
fistps
out
popf
dec
btr
pop
sbb
jl
ffreep
adc
pusha
and
or
xchg
dec
mov
lret
push
aad
pop
lods
movsl
push
cmp
or
fstp
cmp
jae
mov
dec
je
fnstsw
in
sbb
pop
sti
sub
dec
xchg
cmp
dec
popf
ret
fidivrl
push
int3
mov
dec
test
cli
push
imul
xor
or
jb
or
mov
dec
ret
dec
loope
pop
sbb
sbb
gs
scas
lcall
jl
int3
dec
lods
push
cs
scas
sti
adc
sbb
push
jns
and
adc
test
sbb
rcrl
aad
jle
push
imul
jle
stos
or
push
xor
inc
cmpsb
ds
dec
stos
xor
insl
sub
das
arpl
adcb
popa
jle
std
in
iret
add
ret
out
jne
and
sub
ds
shll
inc
clc
addr16
jl
jmp
add
testl
into
loop
in
cmp
pushl
pushf
xor
sbb
cltd
jo
leave
or
sub
add
or
das
mov
jg
sub
jmp
popa
xor
int3
cltd
mov
mov
mov
push
add
test
lcall
and
xchg
xchg
test
push
pop
dec
sub
dec
push
out
and
cmpsb
cmp
nop
dec
in
sub
pop
jo
aam
and
outsl
pushf
pop
aaa
mov
ja
adc
cltd
fdivrl
sbb
dec
ss
es
add
and
les
arpl
aam
mov
imul
mov
int3
sti
xchg
leave
aad
rcrl
jmp
insb
pop
pop
push
xor
pop
dec
fs
push
mov
mov
xchg
enter
ds
adc
push
cltd
cli
repnz
push
dec
or
xor
and
or
arpl
fwait
sti
cmpsl
jge
xlat
add
mov
je
cmp
jb
test
icebp
sub
leave
push
add
daa
cltd
and
cmpsb
pop
ret
push
ja
and
aaa
lods
pop
test
jo
sarb
daa
dec
in
insl
cltd
push
aas
push
adc
popf
lret
pop
or
popa
neg
scas
pop
mov
mov
push
pop
lret
cmpsl
je
sub
outsb
rcrb
ss
and
scas
xchg
std
fdivp
cltd
or
jg
mov
sbb
sub
dec
xchg
rolb
sarb
xchg
into
enter
mov
rcrl
cli
sti
sbb
into
stos
ja
mov
mov
loope
push
pop
ficomps
in
inc
cmc
sbb
sbb
xor
stc
push
mov
pop
movsl
cli
shrb
cli
sbb
fsub
in
adc
cmpsb
loopne
outsl
fldcw
cld
pop
les
pop
ja
rclb
scas
je
mov
jge
and
ds
xor
sbb
jle
push
cmp
push
sbb
scas
insl
cmp
imul
fdivl
cltd
mov
jg
arpl
ljmp
or
js
int3
dec
or
rolb
inc
sbb
js
out
out
fdivl
out
lahf
shrl
in
pop
jb
and
jno
adc
inc
fisubl
jecxz
cmp
out
aam
mov
cmpsb
or
push
jns
xor
mov
mulb
and
sahf
stc
repnz
mov
loopne
cld
mov
shl
sbb
sub
cltd
cmp
cltd
and
or
jns
pop
cmp
out
into
push
out
aam
shlb
test
fcoml
lea
dec
mov
pop
bound
pop
dec
jno
pop
je
push
stos
adc
pusha
jb
call
clc
mov
fidivs
cvtps2pd
push
insb
movsl
fwait
xor
add
mov
mov
inc
ret
mov
sub
push
addb
cld
sub
lea
daa
mov
shlb
cmp
jo
enter
adc
sahf
test
xchg
shlb
subl
cmpsb
xchg
std
cmpb
xor
fwait
loopne
jno
out
pop
aad
add
inc
mov
outsb
dec
xor
mov
je
xor
add
cmp
ds
les
icebp
push
inc
fistpl
xchg
aad
sub
sbb
jae
fadds
aad
mov
cmp
fdivl
arpl
lods
stc
dec
fldcw
jmp
ja
mov
xchg
push
das
adc
lret
and
scas
popl
cmp
cs
mov
push
sti
hlt
xor
jne
adc
pop
cld
adc
ja
mov
rclb
xchg
mov
or
pop
stos
add
xchg
mov
sub
lahf
jl
and
cld
sbb
mov
pop
cmpsl
mov
arpl
test
iret
and
ljmp
xor
jae
popl
gs
shl
in
xor
push
push
sarb
notb
or
cld
push
mov
pop
pop
mov
les
in
insb
adc
sub
xor
jne
fistpl
cltd
push
lcall
std
push
xchg
pop
push
adcl
push
push
movsb
sub
xorl
xor
mov
jno
pop
push
sbb
adc
mov
cmp
jmp
rolb
imul
orl
inc
sbb
and
mov
ret
sbb
cwtl
or
or
popa
sbb
dec
add
sub
imul
sub
shl
orl
sbb
or
pop
mov
pop
mov
dec
and
movsl
clc
shll
cltd
sbbb
ss
jns
cmp
bound
hlt
sar
xchg
sbb
lods
cmp
push
sahf
pop
mov
stc
xor
xchg
sub
daa
fdivl
mov
cmp
dec
jp
lds
outsb
pushf
int3
mov
xorl
pop
sahf
out
in
in
js
into
ret
mov
xchg
inc
mov
imul
fidivrs
gs
push
sub
sbb
and
ret
emms
pop
das
adc
cld
mov
mov
jge
testb
arpl
mov
xorb
test
repz
push
or
adc
inc
int3
bound
mov
pop
shrl
xor
push
popf
jl
push
xor
cmc
data16
inc
pop
mov
cmp
or
cmc
push
fdivrl
cmc
mov
out
shl
sarb
lcall
sti
mov
lock
pop
pop
shrl
je
sbb
xor
call
ficomps
and
adc
sub
movsb
outsl
mov
or
dec
call
push
imul
adc
loope
stc
push
insb
adc
outsb
add
scas
push
imul
pop
cmpsl
add
ja
bnd
jno
bound
jnp
jp
push
pop
add
mov
push
into
sbbl
jge
push
es
and
xchg
lds
call
fs
pusha
jle
sti
mov
les
jne
cli
rcl
cs
enter
stos
mov
fnsave
xchg
push
mov
ja
shr
or
inc
sub
lock
jg
int3
push
pop
add
jne
pusha
pop
das
sti
aam
adc
and
xor
out
push
cmp
fcomps
adc
jbe
aam
sbb
cltd
cmp
inc
pop
adc
mov
adc
add
iret
pop
push
pop
cli
enter
push
stos
jb
jecxz
idivl
fldt
ss
mov
ss
stos
call
or
rcrl
leave
mov
adc
subl
cltd
mulb
mov
or
imul
jg
fldl
xor
cmpsl
mov
add
xor
sahf
mov
lock
cmp
sub
int3
lcall
and
incb
jp
movsl
sub
repnz
cmp
in
into
add
xchg
dec
push
outsb
xlat
and
mov
jge
cmp
push
jb
push
dec
call
out
in
dec
sub
jl
inc
jae
inc
push
or
and
mov
daa
in
lcall
fucomp
add
das
or
or
std
repnz
xorb
pop
and
lahf
lods
popa
mov
mulb
sbb
data16
in
jnp
inc
ret
mov
mov
jnp
test
and
xlat
lret
clc
jnp
lods
xchg
das
mov
fsubl
in
sub
dec
adc
into
sbb
sar
jae
mov
lods
stos
insl
mov
imul
fsubs
mov
jae
mov
call
jb
mov
pop
repnz
dec
sub
jp
je
and
popa
cli
fimuls
sub
and
push
das
cli
add
mov
negb
jmp
jo
pop
aaa
jecxz
mov
and
sahf
xchg
stc
cmp
cmp
imul
and
mov
inc
adc
out
jle
push
and
xchg
inc
xlat
push
std
cmp
dec
aad
std
outsb
sbb
cmp
sub
loop
roll
jg
push
cmpl
mov
notl
stc
outsb
mov
cmp
xchg
and
adc
push
dec
pop
jl
or
in
mov
les
mov
cmp
cltd
mov
sbb
in
daa
js
mov
inc
dec
mov
cli
mov
xor
xchg
or
stos
jns
sub
sbb
adc
mov
ret
mov
lea
lock
cmp
clc
mov
jne
sub
push
add
inc
sbb
scas
scas
mov
sub
or
add
mov
fnstsw
int3
adc
cwtl
ret
inc
mov
sub
xchg
or
push
call
int3
lods
adc
rolb
enter
mov
daa
pusha
ljmp
cmpsb
test
pop
lock
dec
sahf
push
das
inc
xor
jno
lcall
push
jp
das
pushf
mov
dec
into
jg
dec
or
andb
lea
rep
lds
inc
insb
insl
in
cmpsl
push
dec
or
or
add
js
loop
mov
push
fwait
mov
jo
cld
adc
mov
sub
dec
clc
fs
pop
pop
and
jge
fildll
or
sarl
es
pop
mov
mov
sbb
sub
jne
mov
mov
dec
daa
xor
jne
sbb
cmpsl
inc
and
push
hlt
xlat
mov
cmp
inc
cs
pop
jecxz
jg
pop
jnp
sbb
leave
out
dec
mov
imul
and
cmp
jl
jle
cs
cmp
fcompl
mov
adc
mov
xchg
xor
jae
lods
jns
pop
mov
in
push
cld
loop
push
add
add
mov
and
into
mov
imul
incb
sub
fists
add
dec
cmpsl
xchg
aaa
scas
mov
mov
cmc
xor
jmp
sbb
loop
and
pop
aam
xor
mov
mov
pushf
add
pop
xchg
xchg
loopne
int
mov
lret
jnp
aas
mov
lock
frstor
hlt
push
clc
mov
or
orl
mov
and
dec
popf
movsl
sbb
or
in
or
repz
add
and
loope
mov
adc
inc
jl
addr16
int
jle
adc
test
jno
ret
jno
ret
push
jnp
inc
pop
das
dec
sbb
push
cmp
dec
mov
bnd
inc
fldcw
ret
ss
data16
imul
sbb
fbstp
ret
outsb
xchg
ja
arpl
pop
inc
enter
aam
mov
push
nop
dec
aaa
xchg
or
lahf
outsb
cld
pushf
ljmp
fisubrs
in
inc
in
outsl
or
mull
mov
hlt
xor
and
jg
ffree
outsb
cmp
xor
cs
dec
add
and
xor
pop
in
inc
cmp
sbb
pop
jne
or
push
pushf
inc
gs
mov
call
push
inc
jp
int
movsl
jp
not
sbb
loope
shlb
add
loope
or
jg
mov
nop
ret
icebp
adc
and
outsl
cmp
bound
mov
cmp
mov
test
ret
or
cltd
mov
mov
je
and
xchg
cs
pop
xchg
je
pusha
sub
nop
sahf
push
popf
mov
jge
jl
cmpsb
pop
mov
andb
mov
outsb
adc
cmp
int3
jcxz
stos
aad
xor
enter
jb
push
mov
push
daa
or
dec
xchg
or
out
pushf
fcomps
xchg
lods
push
test
cwtl
or
repz
cmp
sbb
movsb
das
ds
test
pop
in
lret
shl
and
and
sbb
cmp
leave
pop
sbb
aam
cld
movsl
clc
dec
dec
pop
leave
push
inc
adc
cltd
mov
mov
add
push
lods
das
imul
pop
insl
rorb
pop
adc
or
mov
mov
dec
xor
jg
or
adc
mov
fwait
pop
arpl
iret
push
or
inc
sbb
nop
cs
pop
pusha
jecxz
pop
mov
fdivrs
xchg
xchg
xor
clc
movsl
sarb
adc
and
leave
cmpsl
les
dec
popa
es
test
mov
out
and
int
cli
out
nop
outsb
dec
dec
fcomps
enter
dec
stos
and
mov
jnp
movsb
and
sahf
push
sub
cwtl
xchg
jne
mov
loopne
jns
leave
push
mov
and
jnp
and
and
pop
or
arpl
ja
mov
out
pop
iret
stc
fbstp
jmp
xchg
xchg
inc
xor
fstpt
inc
scas
mov
lds
inc
sbb
pop
je
test
or
aam
add
and
out
fs
cmp
sub
addr16
jmp
orb
sahf
adc
sbb
inc
lock
mov
mov
jo
pop
adc
mov
dec
loope
mov
cwtl
mov
les
mov
jo
adc
xor
add
imul
rcrb
insl
add
movsl
xchg
movsb
movsl
out
pop
sbb
and
mov
sub
lock
sbb
repnz
jb
in
mov
cmp
bound
sarb
cmpsl
mov
mov
ficompl
call
pushl
test
jle
mov
mov
iret
dec
push
sti
loop
cmp
call
mov
jl
xchg
add
dec
sbb
aas
fst
push
leave
fwait
cmp
popa
or
cltd
nop
outsb
jge
push
push
push
mov
stos
outsb
gs
data16
inc
enter
pop
push
sub
inc
mov
in
sub
stc
cmp
insb
mov
shr
and
push
mov
mov
dec
xchg
lret
lea
es
repnz
or
dec
mov
loopne
dec
lahf
cmpsb
out
or
xlat
adc
jecxz
pushf
cmp
das
ja
test
bound
jbe
inc
fs
gs
xor
test
mov
jecxz
aam
cld
into
adc
fmul
cmpneqps
cmp
mov
xchg
or
imulb
cmp
mov
xor
fdivrp
or
cmp
hlt
fcmovnu
inc
iret
sbb
sub
mov
repnz
idiv
aad
les
shr
push
add
and
add
mov
pop
int
cltd
mov
cmpb
add
cld
bound
dec
push
cmp
icebp
push
mov
push
inc
je
clc
scas
dec
pop
jbe
test
jle
loopne
xchg
xorl
iret
jns
jae
int
cmp
mov
ds
sbb
add
movsb
cld
loope
testb
enter
das
add
leave
push
pop
inc
test
jbe
stos
fnstsw
cmp
pusha
icebp
mov
pop
arpl
sbb
loopne
clc
push
add
fadds
leave
xor
in
hlt
or
xor
adc
test
jo
adc
mov
scas
xchg
mov
mov
cmpb
inc
sub
insb
push
xor
lds
xchg
fcmovb
out
imul
jmp
sub
dec
scas
pop
mov
push
fistpll
mov
loop
mov
in
xchg
in
mov
icebp
test
sti
xor
movl
gs
orl
lret
fwait
dec
ds
lret
jae
in
ficompl
xchg
dec
push
in
mov
dec
adc
adc
xchg
enter
test
sub
or
fnstsw
fsubrl
or
xor
cwtl
jle
fistpll
cmp
jb
mov
and
cmp
out
mov
lds
je
pop
lock
sbb
sbb
fbld
sbb
sub
int3
adc
fwait
pop
pop
aas
out
push
pop
mov
sar
lret
and
mov
dec
imul
aam
pop
push
xchg
xchg
loopne
and
and
into
inc
mov
dec
fsub
xor
iret
and
sbb
mov
and
lret
adc
mov
and
pop
sarb
push
push
jnp
adc
popa
xor
cmpsb
arpl
lods
shl
pop
lret
inc
mov
jp
lret
popf
jp
ds
mov
xchg
inc
add
or
dec
lods
xorb
xchg
dec
sub
mulb
and
cmp
adc
outsl
jp
sub
lahf
dec
fcompl
insl
rcr
push
pop
lret
les
rorb
pusha
insl
mov
jmp
add
fwait
scas
aam
dec
mov
adc
mov
fcoml
les
adc
in
jno
cmc
pop
icebp
sub
into
clc
into
call
pop
cmp
ret
push
cwtl
inc
sub
dec
dec
push
lcall
insl
add
in
inc
pushw
mov
xor
cmp
mov
aaa
lcall
mov
sahf
stc
das
mov
sub
sbb
rcrl
mov
movsb
cwtl
sbb
cwtl
fwait
popa
data16
lret
inc
aaa
shlb
ret
mov
repz
data16
cmc
xchg
lahf
sub
dec
or
cli
dec
jnp
adcb
jne
loopne
iret
pop
mov
jecxz
mov
loopne
xchg
inc
xchg
xlat
add
test
jae
sbb
pusha
leave
pop
hlt
lock
add
pop
out
mov
cmp
jp
xchg
dec
mov
arpl
jbe
pushf
jl
push
push
mov
pop
push
push
in
ljmp
insb
filds
insl
mov
cld
lahf
xor
cmc
xchg
inc
pop
sub
sub
negb
imul
pop
test
ds
dec
ret
and
push
mov
jl
and
pop
jp
fsubrl
or
adc
cmc
cld
sbb
lds
sub
push
inc
imul
cmpsl
cmp
mov
shlb
push
xor
in
pusha
sbb
je
adc
push
clc
test
or
outsb
loop
xor
mov
sbb
sub
sbb
jl
pop
xlat
mov
cmp
in
outsl
push
jae
add
ss
or
add
jp
sub
inc
lods
repz
in
outsl
inc
inc
mov
push
leavew
in
es
aam
scas
fadd
add
orl
hlt
lock
test
sub
and
dec
dec
mov
std
and
out
mov
and
clc
mov
cltd
push
jmp
pop
bound
negl
daa
mov
inc
mov
loop
mov
fidivrs
and
movsl
adc
xchg
cltd
jmp
mov
movsb
jl
scas
xor
push
push
pop
daa
dec
pop
call
xor
mov
add
fildll
mov
repz
test
jae
and
cmp
or
xchg
pop
jge
call
push
aam
push
loopne
bound
lds
pop
jae
sub
push
cwtl
sub
rorb
push
pop
mov
pop
out
mov
in
add
sub
jg
adc
xchg
xchg
or
in
add
cwtl
repnz
lahf
and
arpl
pop
cs
ljmp
push
xchg
sti
out
insl
gs
fwait
in
dec
aas
mov
and
sub
ret
lcall
mov
lret
mov
mov
ss
xor
out
repnz
sahf
ss
jb
out
xchg
lret
push
shlb
or
cmp
sarb
dec
mov
sub
out
xlat
lock
adc
and
add
sbb
add
dec
inc
mov
stc
addr16
mov
test
pushl
jno
popf
lret
inc
pop
mov
lods
mov
std
icebp
sar
adc
adc
ror
hlt
fdivrp
xchg
mov
jmp
std
divb
mov
xor
cmp
scas
or
sahf
in
pushf
es
es
int3
das
fldl
jo
and
sub
add
test
sub
mov
pop
lahf
adc
jb
addb
fsubl
mov
xchg
or
movsl
hlt
clc
xorl
subb
and
outsb
das
or
int
in
cs
daa
push
mov
mov
test
out
sub
push
and
loopne
cmp
mov
cmpsl
jno
cmp
push
inc
shlb
cmp
or
enter
movl
dec
jo
sub
sbb
sahf
xchg
loope
add
enter
sub
push
add
jle
push
gs
stc
adc
mov
pop
mov
xchg
add
fmull
popa
dec
scas
and
lods
pop
jg
sbb
mov
shlb
js
sbb
lret
addr16
mov
aas
pop
pop
mov
inc
add
push
xor
sbb
adc
mov
xchg
dec
dec
add
test
mov
sbb
lea
int
es
adc
jle
insl
addb
je
mov
sbb
cs
sahf
pcmpgtd
cmpl
fidivs
push
mov
pop
dec
andb
ret
sub
orl
stos
cmp
lcall
pop
mov
xchg
ret
or
gs
xchg
xor
scas
dec
incl
mov
mov
mov
sub
hlt
add
repz
pop
jns
inc
in
loope
dec
mov
add
mov
or
das
adc
je
add
mov
or
jae
addr16
insb
out
test
sarl
out
dec
pop
add
xorl
sbb
imul
mov
sar
jp
xor
in
cmp
xor
push
xchg
and
and
xchg
mov
xchg
push
fstpt
shrb
roll
jmp
fcoms
nop
lret
addr16
std
cmpsl
std
sub
rcr
negb
mov
jne
ljmp
and
fldz
mov
scas
and
jne
pop
cmp
jb
movsl
and
ret
cwtl
bound
dec
aad
pop
add
or
xor
xchg
mov
sbb
mov
jp
pop
js
ss
les
clc
mov
jp
dec
xchg
xchg
xchg
fwait
jo
ja
lret
aad
in
cmp
inc
pop
jb
notl
ret
push
cwtl
xchg
add
mov
gs
fistpl
sub
inc
pop
cmp
scas
dec
ror
int3
ja
add
mov
adc
fdivl
cld
sbb
imul
sub
cmp
les
push
adc
or
ja
test
xchg
mov
pop
pop
ljmp
sbb
cmpsl
push
pop
jno
out
popa
or
subb
xor
add
mov
push
xor
mov
xchg
jle
pop
jmp
cltd
sbb
ret
lods
and
clc
aad
filds
pop
jl
xor
stos
mov
cld
negl
loope
sbb
popf
inc
rcr
cmp
pop
adc
xor
mov
push
xor
mov
popf
mov
cmp
jl
sti
mov
xchg
ds
cmpsl
aam
icebp
push
mov
push
push
xor
lea
or
aam
dec
sub
cwtl
int3
lds
xchg
pop
sbb
mov
or
jp
jne
notl
sub
jns
push
movsl
inc
enter
or
and
rcrb
loop
aaa
mov
fdiv
dec
push
les
pusha
jno
js
hlt
pop
out
adcl
sbb
pop
or
mov
test
adc
aas
shrb
addr16
cmp
cwtl
insb
imul
testb
push
loop
xor
xor
cmovg
cwtl
cmp
jmp
xchg
sub
adc
inc
test
int3
jae
aas
sahf
xor
cmpsl
mov
push
sbb
in
popa
dec
pop
rol
sarb
ja
call
test
sub
sub
mov
pop
xchg
pop
mov
ja
inc
test
fisubs
cmp
scas
nop
cmp
into
mov
and
scas
dec
and
shll
gs
dec
or
in
sbb
ret
xchg
push
lahf
or
hlt
stos
pop
jg
inc
mov
mov
push
iret
leave
fwait
lods
mov
push
and
repnz
loopne
nop
cmp
aam
sar
clc
mov
mov
and
popa
adc
mov
jnp
psrlq
pop
dec
aad
lcall
inc
pop
adc
push
mov
cwtl
jge
push
cmc
ljmp
in
arpl
mov
adc
push
in
dec
shlb
xchg
movsl
mov
in
xchg
arpl
cld
mov
dec
xchg
in
mov
jnp
jo
push
push
repz
outsl
imul
dec
cmp
fstp
addr16
xchg
jnp
cmpl
cmp
scas
jle
cmc
pop
xchg
fs
add
push
arpl
sbb
pusha
xchg
sbb
mov
loopne
mov
shlb
adc
cmc
jbe
sub
popa
sub
aam
add
in
mov
je
out
sti
mov
int
fstp
mov
push
lods
fildll
lds
xor
pop
xor
aas
or
jge
or
pop
xor
movsb
test
jge
xor
jno
sarb
mov
shl
ret
loop
adc
push
jmp
in
jl
bound
int3
dec
add
enter
push
jecxz
xor
push
dec
dec
iret
xchg
ds
sbb
cmp
cmp
cmp
cmp
rcrb
mov
or
orl
ja
sub
out
push
xor
mov
adc
sti
fmull
das
nop
jns,pt
jae
addr16
pop
jp
mov
jbe
insb
daa
test
jmp
add
adc
cmpsl
mov
jns
xchg
and
mov
cwtl
popf
cwtl
movsb
adc
test
decl
push
jp
xor
push
ljmp
scas
push
mov
xor
leave
rol
std
fstpt
fdivl
imul
add
adc
jne
xchg
pop
dec
mov
popl
pop
in
fldl
jb
int
adc
jg
sub
push
push
fld
jns
fidivrl
in
pop
out
and
or
loopne
inc
sbb
sub
or
add
test
lahf
and
shll
add
jp
push
mov
xchg
add
jne
xor
popf
popa
dec
test
pop
je
std
inc
insb
mov
mov
fbld
sbb
ret
xor
xor
lods
ds
sahf
adc
jb
iret
js
daa
xor
lcall
xchg
cmpsl
pop
and
or
repz
and
aas
xchg
lea
out
xchg
push
jne
inc
mov
fstpl
ret
or
push
mov
clc
sbb
xchg
add
pushf
orb
lods
adc
lods
test
scas
stc
inc
mov
mov
lahf
pop
out
mov
lcall
hlt
cmc
ljmp
lods
add
cltd
fs
jne
jno
add
adc
les
pusha
pop
arpl
adc
scas
lods
push
jecxz
cmp
sub
jge
or
test
in
jbe
fwait
and
lret
pop
cmpsl
add
xchg
jnp
push
sbb
fwait
mov
fnstsw
pop
cli
cmp
cmp
sub
mov
rorb
adc
sbb
push
int3
pusha
mov
mov
pop
pop
leave
aam
popa
add
inc
fcmove
rcl
loope
cli
arpl
js
or
pop
inc
jge
pop
mov
out
imulb
xadd
add
pushf
test
inc
shl
mov
sbb
xchg
test
movsb
outsl
data16
cltd
in
pop
ds
enter
loope
cmp
xchg
in
aas
xor
inc
inc
cmp
sub
xchg
nop
popf
pop
xor
aas
cs
in
in
orl
pop
push
into
fcmovbe
imul
rcll
test
xchg
push
mov
mov
mov
mov
mov
pop
mov
rol
daa
fistpl
fs
xchg
xor
dec
xchg
cmp
add
fcomps
ret
movsl
mov
mov
sbb
lds
mov
adc
jns
into
jg
in
and
std
ljmp
xchg
int
push
bound
cmpsl
lods
je
icebp
outsb
mov
enter
gs
rcrl
cmp
dec
jecxz
push
les
mov
daa
inc
sbb
xchg
shll
pop
movsb
mov
loop
imul
jnp
or
je
in
pop
rcll
xor
dec
jne
lock
neg
cmc
call
call
ror
fcomps
repz
push
jp
loopne
mov
xor
sub
aaa
xor
push
xchg
mov
mov
cmp
lds
bnd
sbb
out
push
pop
jne
sbb
ror
fistl
lock
mov
mov
and
sti
push
lds
dec
fwait
mov
dec
pop
jae
jmp
jmp
mov
add
insb
cmp
pop
testb
outsb
adc
ret
jnp
add
in
jecxz
and
jnp
out
and
and
add
scas
in
dec
pop
cli
fs
nop
inc
mov
sbb
scas
jg
call
mov
mov
scas
into
push
popa
sbb
mov
add
mov
fwait
daa
dec
cltd
xor
jl
pop
ret
jnp
inc
or
pop
test
ss
jnp
jno
cmpsb
jae
pushf
call
pop
js
xchg
aas
jmp
xorl
add
roll
jns
adc
inc
cs
jo
roll
xor
ss
ds
test
in
xchg
or
or
lods
repnz
mov
sar
adc
mov
out
jp
popw
popf
add
pushf
nop
xchg
push
lahf
push
adcl
jl
test
cmpsb
or
xchg
mov
inc
mov
xchg
ret
mov
mov
mov
pop
cmc
and
insb
lcall
mov
or
cmp
addr16
push
xchg
lock
and
nop
enter
jnp
das
cmp
jmp
test
push
movb
jns
xor
cmp
jecxz
pop
addl
dec
pop
push
inc
mov
inc
stc
mov
mov
adc
jle
xlat
adc
insl
shr
mov
or
cmpsb
cmp
mov
arpl
xchg
jae
mov
mov
loop
dec
cmp
xor
jmp
sub
fnstcw
xchg
ret
sti
imul
push
adc
dec
mull
fldenv
inc
into
pop
pop
fisubs
call
lds
xor
sub
adc
xorb
xchg
das
jo
mov
push
xchg
mov
jns
in
push
idivl
les
movsl
and
mov
ja
dec
loop
pop
sbb
cmpsl
aam
push
xchg
jno
aad
push
cmpsl
cwtl
and
rcll
mov
push
adc
add
mov
imul
loope
sbb
sub
jg
cltd
test
mov
popa
xchg
pop
inc
or
outsl
test
push
lods
ret
imul
sub
cmp
int
insl
aad
cmp
mov
jno,pn
stos
sub
sub
out
mov
xchg
hlt
xchg
xchg
shll
int
mov
dec
mull
adc
leave
and
leave
inc
je
fnsave
push
jmp
int
xor
mov
pusha
outsl
lock
cmc
mov
xor
fwait
insl
xor
stos
mov
bound
scas
popa
adc
mov
and
sbb
fisttps
or
xor
pop
cmc
pop
sbb
jns
mov
xor
lcall
hlt
add
add
jnp
adc
stc
xor
mov
jl
cmp
imul
mov
or
jp
test
aam
cli
push
jg
test
inc
pop
sarl
gs
sti
cmc
aam
jp
jno
mov
ffree
aam
pop
inc
clc
add
mov
xchg
jae
lods
cmp
cmp
cmpsl
xchg
inc
xorb
dec
stos
sub
out
add
gs
xor
cmpsl
xchg
mov
daa
pop
movsl
inc
in
push
stc
mov
cmp
jp
jae
sbb
das
mov
fsts
push
push
xchg
pop
xchg
das
aam
outsb
lcall
xchg
lret
mov
mov
add
lret
je
push
insl
adc
cmp
cmpsl
mov
addr16
pop
subl
and
scas
mov
cmpsb
daa
xor
jo
out
pop
addr16
outsl
popa
gs
jecxz
clc
mov
and
pop
cmp
xchg
call
mov
cmp
mov
into
rcrb
cmp
mov
dec
movntq
out
mull
ljmp
in
adc
or
stc
or
xchg
dec
or
push
js
push
inc
in
in
mov
mov
xchg
cmc
jge
mov
bnd
call
call
or
loop
inc
pop
inc
repz
out
int3
mov
push
scas
fistpl
das
imul
mov
shlb
mov
xor
dec
mov
inc
add
jmp
stos
pop
arpl
repnz
fcmovnb
sti
jno
inc
imul
pusha
mov
mov
push
sbb
jnp
jmp
lret
sbb
mov
std
and
or
cmpsl
and
dec
cmpsb
cmpb
sti
adc
aad
or
pop
xorb
stos
xchg
sarb
ss
pushf
mov
sbb
imul
clc
adc
lock
pop
arpl
mov
mov
imul
mov
jp
jnp
push
xchg
sbb
and
ljmp
call
sbb
aad
inc
mov
sbb
das
jmp
sbb
cmp
mov
add
jecxz
lods
adc
hlt
jl
fnstenv
or
inc
jbe
xchg
lahf
lret
aaa
flds
and
jne
insb
addr16
jg
inc
cmpsb
ss
fcmovnb
ret
out
jbe
aas
mov
jbe
dec
lods
dec
and
ret
gs
pop
pop
mov
loop
out
outsl
push
adc
lods
lahf
xor
push
mov
fsubrl
leave
call
std
imul
jle
jns
mov
mov
pop
xchg
das
mov
cld
mov
aas
movsl
pop
xchg
rcrb
scas
repnz
aam
in
adc
outsb
or
or
sarl
push
stos
xor
sub
andb
mov
inc
pop
push
push
adc
or
xor
sbb
ret
or
or
sbb
inc
movsb
push
xchg
or
call
xchg
andl
gs
add
xorb
andb
addr16
or
rclb
filds
mov
mov
push
jge
jl
mov
daa
mov
mov
ja
ds
xchg
inc
mov
push
and
mov
movsb
ficompl
dec
sub
out
and
sub
sahf
dec
scas
mov
sbb
loop
push
stos
add
cltd
jnp
mov
xchg
cmp
adc
clc
jns
xlat
imul
inc
adc
cmpsb
clc
lock
popa
gs
test
mov
repnz
aam
jecxz
and
adc
ret
mov
les
mov
int3
jmp
add
xlat
cmpsl
mov
jno
test
cmovo
aam
dec
pop
jmp
sahf
ret
je
pop
lret
cltd
jnp
sbb
xor
xchg
xlat
push
pop
sub
stos
fs
repnz
ds
js
push
lods
in
mov
pop
mov
nop
leave
jnp
sbb
and
scas
lods
aaa
jecxz
or
xchg
loope
mov
popl
fstpl
pop
out
mov
push
mov
mov
popa
lea
test
scas
hlt
mov
xchg
lcall
sbb
adc
mov
pop
pop
in
inc
mov
mov
xchg
stos
cmp
jle
xchg
cs
js
or
add
mov
jge
out
inc
mov
push
adc
cmp
outsl
lea
push
lods
out
in
push
lret
xchg
test
fimuls
jbe
cld
inc
mov
iret
xor
jb
dec
or
cmp
enter
or
jle
jmp
inc
daa
cmp
pop
addl
dec
jecxz
cltd
jo
scas
jne
scas
andl
fisubrl
test
push
lds
pop
adc
leave
push
enter
xchg
repnz
je
int3
outsl
call
int
stos
inc
mulb
shl
movsb
push
mov
fldl
mov
clc
xor
cltd
sub
movaps
out
adc
nop
pushf
rcrb
mov
outsl
lahf
lcall
cltd
jns
loopne
shll
cli
insb
jecxz
nop
mov
xchg
adc
std
call
and
add
jecxz
dec
inc
add
jo
inc
cld
inc
cltd
fsubr
test
cmc
std
lds
js
pop
or
sub
test
mov
mov
cs
jne
add
shl
xlat
pop
andb
jne
push
cmp
mov
decb
mov
addr16
fs
adc
cmp
xchg
insl
adc
push
sub
jo
loope
daa
fisttpll
lcall
xchg
stos
mov
lods
js
push
test
mov
sahf
jae
mov
hlt
insl
test
arpl
ss
sbb
xor
pop
das
add
mov
dec
insl
mov
push
mov
inc
jge
pop
sti
xor
mov
stc
stc
cmp
mov
mov
inc
jp
inc
sbb
or
jne
jecxz
xchg
cmp
repz
cmpb
fidivrs
xlat
sti
stc
data16
dec
push
adc
js
mov
scas
jnp
lret
out
into
roll
inc
and
push
dec
fisttps
mov
ja
inc
iret
xchg
stos
push
push
movsl
mov
xchg
mov
sub
int3
inc
mov
jge
sub
mov
pop
cmp
cmpsl
repnz
ja
pop
dec
lods
inc
popf
insl
inc
or
fmulp
mov
imul
dec
out
leave
int3
popf
xchg
dec
outsl
push
or
mov
inc
sub
call
jnp
pop
das
mov
jge
lea
cmp
sbb
xchg
pop
xor
pop
scas
in
idiv
xchg
jg
stos
cmp
lock
negb
movsb
adc
pop
fldl
aam
xchg
stos
mov
cmp
mov
cmp
jle
pop
iret
stc
in
xor
in
lds
lock
outsb
ja
mov
das
negl
push
add
hlt
mov
mov
mov
inc
pop
jae
and
test
in
pusha
mov
jns
movsb
sbb
clc
into
cmp
inc
jbe
icebp
test
into
or
add
adc
sbb
jp
mov
xor
dec
mov
mov
cmp
jp
fstpt
inc
xor
mov
subb
push
mov
jle
arpl
fcompl
ds
adc
mov
sahf
sahf
dec
test
gs
mov
push
imul
jmp
sub
or
test
in
inc
sbb
mov
add
ret
repnz
movsb
je
mov
lock
nop
popa
movsl
bound
fists
sti
adc
push
push
nop
adc
loopne
xchg
push
xlat
insl
cmp
push
push
clc
nop
pop
addr16
sub
adc
inc
cmpsl
add
js
inc
sbb
in
adc
add
test
ljmp
or
aaa
sbb
jmp
jo
mov
fldt
xchg
sbb
xor
adc
repz
jns
mov
cld
rorl
mov
test
sub
out
mov
idivb
loop
enter
mov
sub
dec
shlb
cwtl
out
push
pop
pop
pop
mov
push
cld
out
sub
shrb
sub
jno
xor
and
sbb
fcomps
and
sub
mov
or
cmp
jbe
mov
push
insb
outsl
or
jmp
lcall
movsl
add
stc
and
mov
inc
dec
pop
push
iret
push
jb
jae
sbb
add
adc
pop
fisttpll
pop
adc
cs
xchg
adc
inc
or
or
mov
pushf
adc
repz
scas
out
inc
test
ret
outsb
js
jmp
cmp
xchg
dec
mov
movsb
imul
fscale
fnstsw
fisubl
mov
jmp
inc
cmp
jbe
mov
repnz
sti
inc
loopne
push
sbb
mov
call
lea
int
sbb
fldl
and
lock
repnz
enter
sbb
xchg
repnz
inc
xchg
and
flds
stos
fnstenv
xchg
loopne
test
adc
mov
fldt
inc
loopne
in
jecxz
dec
imul
std
and
cmp
pop
fistpl
les
subl
shrb
fnstcw
test
mov
in
repnz
jnp
mov
jo
xor
hlt
dec
fwait
xlat
test
push
nop
inc
fsubrs
lods
in
movsb
pop
mov
mov
xor
push
adc
or
pop
bnd
inc
cmc
sub
nop
lds
cmp
add
ja
shll
and
or
dec
sub
je
pop
inc
xlat
mov
push
or
data16
mov
ja
or
test
pop
pop
push
aas
or
sarb
mov
cmpsl
fwait
es
not
sti
or
cmp
dec
inc
jp
popa
aas
bound
mov
repz
popf
mov
pusha
xor
jmp
xor
cmpsl
cltd
sbb
das
push
into
fnsave
pushf
popf
divl
icebp
xor
jns
fucomp
aad
stos
not
push
mov
dec
icebp
mov
call
sbb
loop
in
sub
cmpsl
mov
outsb
add
add
lods
dec
cmp
aas
add
mov
jne
arpl
iret
push
xor
jge
inc
insl
icebp
imul
incb
mov
pop
pcmpeqw
and
sbb
shlb
pushf
adc
and
decb
xchg
loopne
rclb
jp
sub
sarb
loopne
mov
sti
pop
and
mov
pushf
cltd
sbb
sti
lret
pop
sub
ss
push
pop
pop
inc
mov
jnp
push
out
into
pop
xchg
data16
add
aaa
xchg
lods
jmp
lcall
push
sub
insb
imul
sbb
push
shlb
es
jb
je
rorb
cld
mov
adcl
mov
dec
test
lea
pop
stos
insl
mov
or
dec
push
sbb
pop
lcall
data16
xor
rcrl
mov
rcr
and
or
test
int
pop
fstpt
arpl
push
mov
and
xor
sub
stos
add
jmp
nop
test
pop
xor
incb
mov
in
add
cmp
dec
outsl
jno
ljmp
push
dec
and
mov
inc
ror
sbb
das
add
pushf
pusha
mov
fisubl
out
xchg
dec
iret
outsb
fists
add
mov
push
inc
popf
pop
pop
movsl
inc
mov
push
fmull
inc
or
fmul
sbb
rol
sbb
lock
testb
push
lock
mov
push
scas
out
movsb
or
adc
push
cmp
mov
rcrb
loopne
mov
sti
cmp
xchg
cltd
jo
fdivrl
faddp
pop
and
int3
push
out
jbe
fidivrl
mov
lret
push
or
sub
cwtl
sbb
pmulhw
xor
xchg
sbb
popa
ljmp
fistps
mov
cmp
scas
sub
jo
cmc
shl
mov
std
jnp
jbe
or
int
mov
sbb
cmp
incb
ss
mov
gs
out
xchg
pop
or
dec
leave
fists
xlat
add
inc
mov
stos
gs
push
push
jmp
cmp
cltd
ret
sbb
fists
ds
ret
bound
inc
repnz
lock
push
adc
jmp
fildll
insb
ss
xchg
xor
in
wbinvd
mov
nop
into
adc
mov
mov
jns
enter
scas
xchg
pop
pmaxub
push
push
test
fdivrl
aad
adc
inc
cmp
xchg
cmp
inc
cmp
cltd
int
outsl
lahf
and
dec
lcall
jp
add
push
movsl
out
leave
sub
add
andb
xor
mov
push
notb
daa
filds
idiv
imul
pop
rorb
adc
inc
clc
fisttpl
in
dec
inc
push
mov
test
cmp
stos
imul
imul
subl
mov
leave
aas
sbb
in
lods
add
movsl
stos
xor
lcall
mov
cmp
adc
pop
sub
jecxz
jmp
cmp
push
add
push
mov
gs
out
leave
cmp
out
notl
shlb
push
sub
out
sub
and
fstps
sub
loope
iret
push
movsl
mov
movsl
cmp
and
negl
adc
inc
push
mov
push
in
stos
mov
pop
movsl
dec
pop
jb
out
xlat
adc
aad
push
jge
cmpsl
pop
cwtl
in
leave
fldt
int3
les
mov
push
xor
xor
insl
dec
jmp
or
dec
mov
push
adc
imul
aam
data16
pop
cwtl
push
ja
daa
xchg
lcall
bound
or
stos
xor
fildl
inc
pop
out
sti
js
adc
xchg
sub
mov
xchg
push
jge
xor
or
daa
fimull
jl
xlat
cs
mov
xchg
mov
add
sbb
adc
sti
clc
in
out
jl
and
and
pop
xchg
decb
xor
sub
dec
lods
xchg
lods
sbb
es
push
ds
dec
movsb
push
vpshaw
imul
push
lea
inc
mov
jbe
es
fwait
adc
mov
jg
shlb
jne
push
mov
push
fwait
mov
sub
dec
dec
ret
cs
decb
xor
and
lods
cltd
mov
jmp
mov
je
adc
nop
pusha
mov
sbb
dec
push
mov
cld
pop
je
and
int
dec
aas
mov
jnp
jns
pop
jmp
add
es
shrb
leave
test
test
fisubl
xchg
stc
mov
dec
das
or
adc
cmp
dec
loope
adc
push
add
xor
add
xchg
xchg
pop
mov
testb
mul
aam
lcall
incl
xor
in
sbb
xor
lahf
fmulp
loop
xor
xchg
jo
lock
sbb
andb
jno
jmp
lahf
pushf
mov
outsb
lock
aas
stos
inc
hlt
push
int3
leave
out
jge
jmp
jecxz
or
and
arpl
pop
sbb
or
mov
gs
cmp
sbb
cwtl
stc
test
test
adc
sub
je
jl
inc
in
clc
pop
cmc
push
xchg
stc
push
inc
dec
mov
lret
fmull
mov
jge
mov
fs
cmp
push
test
int3
xor
ljmp
mov
or
adc
mov
adc
pop
mov
int3
loope
cmc
xor
loope
notl
mov
iret
fisubrs
jb
mov
xchg
or
lcall
sbb
repnz
cmp
sti
add
jp
popl
add
into
imul
popa
int3
pop
repnz
pop
test
sbb
outsl
cmpsl
aas
lods
add
push
ret
jb
sbb
dec
mov
xchg
mov
inc
pop
pop
jecxz
mov
cltd
lret
test
lret
mov
mov
popf
popa
pop
into
mov
jo
add
pop
sub
lret
rcll
and
lahf
std
adc
jle
xchg
cwtl
push
mov
popf
xchg
fucomi
jnp
xchg
dec
mov
mov
dec
cmc
scas
sbb
testl
idiv
inc
xchg
xor
push
lods
add
mov
lds
add
mov
xor
fs
orl
aas
insl
push
mov
add
outsl
and
xchg
sub
cmc
cmp
and
add
mov
push
in
cli
clc
inc
sar
push
mov
out
mov
fsubrl
and
dec
sbb
inc
imul
adc
out
ljmp
into
ljmp
jae
lock
dec
loop
out
movsb
cmp
xchg
and
out
jbe
stc
je
sbb
xchg
push
fisubrl
lcall
in
mov
sub
les
mov
popl
scas
xchg
cs
shl
dec
inc
cld
outsl
aam
movsl
js
xchg
mov
push
ret
xor
push
arpl
fldt
adc
shl
sbb
push
sahf
clc
jle
push
cld
cltd
cld
setle
lock
std
mov
das
js
add
fistl
jo
dec
mov
imul
andb
xor
pop
js
pop
pop
mov
rclb
dec
in
inc
push
out
or
and
fildl
outsb
pop
aam
sbb
scas
push
push
sqrtps
adc
fistpll
xor
lods
xchg
jbe
inc
rorl
insl
pop
mov
cmp
cmpb
mov
test
stc
repnz
mov
clc
stos
dec
data16
pop
inc
push
mov
cmpl
pop
imul
adc
push
inc
clc
orb
add
aas
es
out
mov
and
and
mov
mov
enter
roll
mov
xor
fwait
sub
enter
in
push
jns
lods
addr16
cwtl
dec
je
lahf
add
enter
stos
xchg
adc
aad
mov
xchg
pop
shlb
mov
xor
xchg
cmp
test
jp
push
fs
cwtl
dec
cmp
add
xor
sbb
cltd
sbb
adc
ljmp
pop
xchg
mov
push
push
adc
in
arpl
jmp
imul
adc
adc
loopne
je
inc
dec
rolb
sub
push
scas
mov
scas
jle
aaa
pop
mov
rcll
stc
rcll
outsl
aas
bound
and
push
fidivrl
pop
jae
inc
mov
or
xchg
mov
cmc
xor
sahf
faddl
jo
es
pop
lahf
psubusb
or
jne
hlt
les
sbb
leave
sub
in
addb
fistl
outsl
dec
xchg
xor
add
add
jecxz
les
push
test
push
jbe
repz
insb
and
pusha
loopne
mov
lea
mov
jo
rolb
push
clc
push
rcll
jb
call
pop
xchg
jb
test
xchg
les
xlat
popa
mov
fdivl
icebp
addl
xchg
and
mov
js
push
inc
in
call
dec
in
lock
adcb
int
mov
pop
popa
sbb
add
loop
jae
sbb
ds
enter
std
xchg
dec
jp
jp
pop
add
aaa
stos
mov
mov
loope
and
aad
or
sti
mov
mov
int3
xchg
popa
sahf
cmc
adc
fidivrs
sub
jp
xchg
nop
sti
aaa
pusha
dec
pop
stc
push
pop
leave
sbb
jne
mov
sub
sub
arpl
scas
adc
je
or
lds
das
jecxz
stc
mov
mov
add
gs
sub
xchg
outsl
jns
stos
push
jo
inc
dec
pushf
fldt
aas
popa
jnp
inc
aad
shrb
push
push
cwtl
insb
out
pop
in
cltd
pop
push
pop
cmp
pop
aad
mov
mov
lret
ror
mov
ficompl
push
sub
sahf
xlat
xor
js
scas
mov
jne
test
xor
mov
xchg
sbb
adc
cmpsb
cmpsl
sub
mov
lahf
les
push
dec
fsubrs
jne
jns
int
nop
cmp
mov
or
add
bound
xchg
push
aas
sbb
adc
xor
add
mov
push
push
test
dec
inc
les
rolb
mov
and
cmp
inc
bnd
out
shl
loopne
ds
cltd
mov
aaa
sbb
icebp
clc
dec
out
push
js
inc
xchg
mov
adc
pop
in
dec
mov
mov
lock
push
xchg
es
outsl
shl
or
sub
dec
out
into
ja
add
adc
jp
lahf
xor
cmpsl
aaa
jmp
sbb
sub
into
ficompl
testl
dec
inc
push
xchg
sarl
xchg
mov
sub
scas
and
xor
cmp
sbb
ja
flds
mov
mov
test
movsl
xchg
xchg
shr
mov
mov
scas
dec
stos
jge
fs
xor
jno
movsb
push
inc
in
inc
lds
mov
dec
loopne
mov
and
sub
adc
mov
ror
mov
daa
shl
dec
mov
push
cmp
inc
mov
inc
aad
inc
lret
lods
rep
ficoms
dec
mov
push
aas
push
add
sahf
xchg
test
arpl
imul
pop
sbb
mov
jbe
out
push
jmp
adc
and
push
and
imul
cmp
aas
aaa
mov
xchg
stos
out
jbe
jbe
sbb
xchg
mov
stos
jmp
adc
cmpb
js
mov
cltd
push
daa
pop
mov
mov
ljmp
loope
jne
enter
cmp
cltd
pop
push
repnz
xor
sbbb
cmp
sbb
xor
sti
jnp
mov
imul
js
cmp
pop
pop
adc
icebp
add
int
pop
inc
std
sbb
xchg
mov
mov
or
inc
dec
shrb
dec
hlt
jl
add
push
lods
inc
push
xchg
jbe
jno
rol
loopne
dec
adc
scas
mov
les
and
test
cmp
scas
xchg
inc
arpl
xor
cmp
cmpsl
xchg
inc
fwait
repz
sub
push
in
imul
test
sub
mov
mov
cmp
orb
add
dec
dec
cwtl
push
negl
mov
add
sub
outsb
cwtl
and
jae
adc
jg
sahf
rcrb
out
mov
out
daa
sahf
inc
in
fidivs
lret
xor
xchg
movsb
mov
sbb
pop
xlat
mov
lret
dec
adc
call
jo
loopne
sahf
rcrl
mov
jno
popa
jne
arpl
and
xor
inc
xchg
lahf
jb
mov
aaa
rclb
popf
out
adc
in
push
xchg
call
push
dec
sub
hlt
and
mov
testb
cs
jmp
loopne
in
mov
push
pop
pusha
mov
loope
in
out
pop
addb
fnstenv
jle
shrb
rorb
push
or
xchg
mov
or
in
cmp
jne
jg
stos
je
mov
icebp
or
jne
mov
cwtl
push
out
inc
xor
repz
and
xor
adc
mov
xor
out
data16
or
push
imul
sti
insl
jne
test
mov
test
std
sub
iret
mov
loop
add
dec
mov
rolb
or
jge
inc
sahf
rol
jae
inc
loope
adc
call
mov
shl
int
ljmp
jp
pusha
dec
push
ficomps
fbld
push
sbb
and
popf
arpl
loop
movsl
scas
mov
mov
aam
pushw
insl
aad
fcomip
pop
jg
scas
pop
push
js
ja
ficoms
cs
mov
push
sahf
jg
loopne
into
adc
push
shlb
out
xchg
xchg
pop
jnp
cmp
loopne
mov
add
or
enter
fldlg2
mov
int3
xchg
sub
fwait
push
iret
adc
cmp
ja
sub
cmp
mov
outsb
jb
out
ss
mov
lea
test
pop
jno
jb
adc
lock
xor
shll
dec
bound
inc
fistl
lret
sbb
inc
add
push
cmc
test
jne
stos
xchg
daa
fisubrl
je
test
nop
lea
or
cmp
jl
mov
lret
xchg
stos
sti
outsl
push
cmpsb
push
mov
add
xlat
jp
jne
loope
dec
scas
and
sbb
cmp
add
inc
add
addr16
sti
or
dec
dec
sub
ss
test
dec
mov
test
out
mov
mov
pop
test
repz
movsb
aad
adc
test
push
push
and
jo
leave
ret
cwtl
push
ja
andb
adc
out
dec
pop
xor
cmp
mov
push
daa
dec
xchg
push
mov
pop
or
push
cmpb
mov
add
sub
jp
test
stos
rorl
mov
in
push
dec
cmp
push
arpl
nop
dec
pop
ret
xchg
cwtl
mov
mov
jmp
cmp
scas
int
insl
in
and
pop
rolb
aam
add
and
or
sub
aam
loop
out
aas
insb
outsl
and
das
adc
mov
mov
ret
mov
inc
test
xchg
jno
ljmp
lds
into
add
xor
xchg
imul
seto
pop
jmp
dec
mov
and
jbe
in
sub
lret
push
mov
testl
daa
add
arpl
push
loopne
xchg
nop
aas
inc
int3
pop
movsb
pop
pop
shrl
std
push
fnstenv
push
rorl
pusha
or
in
call
outsl
aas
mov
jecxz
loop
xchg
inc
daa
enter
jle
add
xchg
mov
fcompl
or
mov
mov
sub
rcl
push
std
divps
cmpsl
jmp
dec
or
movsl
aam
mov
cmp
outsb
call
aaa
mov
mov
pop
daa
repz
bound
inc
add
outsl
mov
adc
push
ud2
pop
add
mov
xchg
push
icebp
mov
or
xchg
dec
mov
rol
add
das
ja
cld
ljmp
hlt
and
pushf
push
mov
fstpl
mov
and
movsl
imul
dec
pop
and
mov
mov
mov
std
pop
sbb
sbb
jge
movsb
repnz
lds
sub
mov
jb
mov
or
cmp
pop
jge
mov
aam
push
aaa
iret
mov
cmp
ret
dec
xor
pushf
push
enter
xchg
call
xor
or
add
imul
xchg
and
fimull
sbb
int3
in
sub
pop
clc
xlat
xor
pop
imul
lret
movsl
xor
jae
mov
faddl
cmpsb
mov
sbb
pop
or
jmp
dec
xor
cmpsl
fisubrl
jns
dec
inc
pop
sub
cmp
lods
jecxz
inc
decb
cs
xchg
sbb
lret
xor
sar
mov
fists
pop
jle
xlat
arpl
into
dec
inc
dec
vunpcklps
cwtl
mov
mov
sub
add
mov
fbstp
ja
pop
stc
inc
cmpsl
test
pop
push
lea
lret
in
cmp
lahf
lea
mov
xchg
xchg
repz
xor
sbb
push
push
jb
cmp
adc
mov
adc
pop
and
push
pop
and
adc
nop
insb
lcall
inc
jle
cmc
cmp
pop
add
addr16
movsb
cmp
sub
sarb
scas
imul
xor
xor
mov
fs
push
mov
lds
cli
jmp
shll
rorb
mov
or
push
adc
jmp
fidivs
fsubl
stos
scas
push
push
or
push
gs
mov
je
loop
jecxz
call
xor
mov
mov
mov
and
dec
xchg
dec
jl
push
test
dec
xchg
popa
addr16
js
loope
mov
mov
clc
and
sub
push
je
cmp
adc
dec
out
jnp
cli
inc
xchg
rcrl
mov
shl
sbb
daa
fiadds
prefetchw
out
fucom
pop
fadd
pop
or
add
mov
push
jns
sbb
std
sub
jp
fsubr
popa
add
fisttpll
xchg
addr16
jo
mull
xor
lods
inc
jle
lds
popa
cmpsl
inc
shlb
lods
rolb
test
adc
pop
insl
aam
cmp
aam
adc
in
cmp
fisubrl
push
cmp
push
icebp
imul
sbb
pop
scas
adc
xchg
imul
xchg
jp
xchg
xchg
sti
dec
test
xor
mov
add
aas
lret
jae
sbbb
jge
adc
scas
pop
push
sub
icebp
lret
inc
push
testl
jle
or
iret
repnz
outsb
xor
iret
imul
sub
shll
xchg
ja
xchg
mov
jge
add
hlt
push
into
mov
xchg
push
lea
rcl
rorl
cmp
dec
lods
mov
adc
jl
inc
and
mov
mov
and
mov
mov
fildll
xchg
xorps
mov
inc
dec
in
pop
jmp
testb
repz
pop
xor
cmp
out
fsubs
inc
inc
test
imul
mov
mov
fcmovnb
rcrb
xchg
movsl
inc
mov
xlat
pop
out
xchg
fwait
popa
mov
or
push
loop
jne
inc
enter
ret
jecxz
sbb
sahf
movl
cli
outsl
addr16
divl
jecxz
dec
jne
repz
add
mov
push
cmp
leave
cmp
repz
repnz
mov
sahf
sbb
sbb
in
pushf
cs
in
cmp
xchg
and
jns
rcr
mov
popa
pop
dec
dec
mov
jle
mov
inc
mov
rclb
jno
dec
insl
mov
mov
aaa
inc
cmp
std
lods
loopne
add
stos
aad
popa
push
movsb
xchg
push
punpckhdq
cli
add
pop
jne
or
push
xchg
es
jnp
mov
je
cmpsl
sti
push
xchg
mov
out
xor
test
negl
dec
data16
test
pcmpgtd
imulb
int3
push
xor
ljmp
test
xchg
insl
push
dec
xchg
ret
sbb
ljmp
pop
stos
addr16
xchg
mov
das
lret
lods
ja
add
sahf
adc
out
ljmp
pop
push
pop
add
inc
arpl
push
js
into
sub
enter
leave
aad
mov
add
sub
dec
outsl
mov
clc
cwtl
dec
movsb
adc
xor
and
inc
cmpsb
lahf
mov
sub
cmp
sub
mov
lret
mov
ljmp
mov
fistps
xchg
lods
popa
inc
aam
loop
lahf
les
je
sbb
cmp
into
shll
addr16
cmp
adc
mov
mov
xchg
dec
and
lret
cmp
movsl
pop
push
adc
push
inc
jne
addl
ljmp
cmp
mov
pop
movl
bound
fmuls
dec
testb
jo
mov
ljmp
ljmp
lahf
push
andb
or
add
fstpl
push
fs
and
or
lods
cmp
test
in
sbb
call
xor
jnp
mov
sub
bound
adcl
cwtl
adc
inc
sbb
movsl
cmpsb
stos
pop
sbb
jp
xchg
sub
aaa
jp
jp
das
and
lods
push
push
movsb
inc
jnp
sub
jo
stos
xor
push
pop
pop
popf
es
mov
jge
sbb
or
mov
shl
fs
les
lret
add
scas
fs
cmpsl
scas
adc
adc
jns
pop
dec
bound
js
aad
ds
scas
int3
movsb
sti
insb
fidivl
push
cld
movsl
loope
cmpsl
mov
cwtl
aas
mov
outsb
mov
add
mov
movsb
inc
fnsave
fucom
mov
je
outsb
jmp
gs
mov
dec
adc
out
ret
sbb
or
jne
mov
fisubrl
sub
xlat
or
stos
pop
pop
and
ss
bound
dec
call
xchg
popa
pop
cmp
outsb
jp
cmp
inc
dec
xchg
sbb
pusha
push
hlt
mov
jnp
lahf
pop
xor
fidivl
sbb
mov
fiaddl
mov
push
in
in
mov
in
sbb
ret
mov
mov
arpl
sub
fmulp
xchg
inc
out
pop
dec
sahf
add
lcall
and
jge
shlb
mov
ret
inc
lds
stc
outsb
inc
into
aad
popa
bound
loop
pusha
mov
lds
ss
push
arpl
inc
notb
and
dec
movsl
test
scas
cmp
in
mov
test
xor
dec
or
mov
xor
fwait
xlat
jo
outsl
scas
mov
xchg
jb
sti
sbb
in
xor
adc
enter
sarl
mov
out
icebp
in
in
scas
imul
negl
mov
imul
sbb
sbb
push
fcompl
das
repnz
rcrl
pop
push
in
pop
push
push
pop
fcomps
jns
jns
pop
imul
out
cs
mov
cmp
mov
mov
das
lods
lea
fs
mov
xor
and
stos
out
mov
mov
mov
pop
push
dec
movsl
movsb
inc
push
dec
repz
add
enter
sti
jns
fnstsw
scas
lods
repnz
out
ja
scas
cmp
jg
push
dec
lock
out
loopne
pusha
inc
nop
ret
pop
jbe
lea
int
mov
mov
icebp
jns
aas
add
mov
lea
ror
add
inc
inc
add
pusha
call
or
popf
sbb
ret
pop
sbb
lea
push
xchg
xchg
mov
adc
jg
punpckhdq
into
push
shlb
sub
mov
sbb
and
inc
adc
aas
fidivl
shr
sti
mov
shlb
or
test
cltd
shlb
les
call
sub
jne
jl
xlat
lock
cmpsl
inc
inc
mov
push
or
jle
sarl
cmp
sbb
mov
pusha
dec
pop
fnstsw
inc
idivl
add
push
and
ljmp
adcb
dec
xor
aam
mov
cmpsl
in
ja
fstl
dec
pop
add
xor
aad
adc
push
je
and
std
cli
fistl
dec
cwtl
nop
out
shrb
cli
mov
inc
out
add
pop
mov
das
daa
cmpsb
aad
fstps
xchg
jae
lods
mul
push
and
jge
sarb
inc
repnz
adc
jno
cwtl
sub
and
syscall
test
outsb
jl
jne
push
add
sub
sbb
enter
cmp
leave
mov
scas
pusha
push
lock
push
iret
dec
mov
adc
shlb
add
roll
icebp
shl
adc
dec
lods
mov
sub
js
push
mov
popf
mov
mov
adc
shll
inc
jmp
dec
jae
pop
and
lcall
xchg
lret
lret
jns
leave
mov
dec
cmp
mov
les
mov
dec
popa
sarl
outsb
enter
and
dec
or
movsl
out
or
inc
push
rcl
sub
or
add
jl
outsb
xchg
int
lret
push
xlat
jae
arpl
pop
xlat
arpl
xor
dec
sbb
mov
push
arpl
and
cmp
cmp
xor
cmp
jae
shlb
or
jno
loopne
mov
cwtl
into
xchg
movsl
jb
push
dec
orb
push
and
pop
inc
sbb
ficompl
xchg
in
out
xchg
cmp
mov
sbb
and
pop
cli
dec
or
rcrb
push
loopw
mov
sub
imull
dec
jno
dec
pop
insb
mov
nop
and
imul
aas
mul
jmp
lret
insl
fs
xor
jns
lods
out
push
xor
in
and
cmc
pop
fstl
push
dec
shl
pop
es
repnz
add
mov
popf
outsb
mov
ja
out
push
iret
mov
mov
mov
and
sub
data16
pushf
out
rolb
push
push
inc
leave
pusha
fisttpl
adc
mov
mov
pop
adc
mov
jo
int3
xlat
mov
mov
pop
and
arpl
fsts
pop
ds
sub
inc
enter
lahf
dec
add
popa
movsl
test
jp
add
nop
test
mov
cmpb
push
test
loop
scas
jle
out
ror
cmpsb
sahf
pop
sub
jo
leave
mov
mov
js
insb
xor
lcall
int3
test
xchg
pop
jbe
loop
cmp
jne
enter
pop
aaa
out
dec
mov
jmp
cltd
fwait
xchg
push
lcall
lods
lods
cmp
loopne
int3
fwait
aam
in
mov
mov
sub
pop
push
jl
fadds
lcall
imul
mov
jge
mov
jg
cmpsl
jl
mov
fadd
js
shrl
jnp
ss
mov
sub
sti
sbb
jg
aam
and
push
xor
jbe
cmp
fidivrs
adc
pop
adc
psubw
jae
cmp
ret
push
ja
mov
cmp
fwait
xchg
dec
and
mov
and
or
ss
mov
cmp
call
and
or
bound
ror
andl
shlb
add
mov
movsl
dec
in
lods
gs
and
test
xor
mov
or
or
insb
das
sbb
outsl
mov
test
aad
out
cmp
int
mov
push
bound
out
int
sti
loop
fwait
mov
mov
mov
lret
out
push
sti
rcrl
ret
out
std
jb
icebp
add
in
leave
clc
adc
mov
inc
test
pop
adc
ret
das
cmp
jns
add
push
nop
add
imul
fisttpll
mov
iret
jb
cwtl
push
pop
xor
pusha
lods
dec
push
dec
mov
xchg
dec
pop
mov
addb
inc
decb
lcall
stos
lcall
mov
stos
pop
mov
mov
mov
jns
cmp
jno
fstpl
pop
imul
iret
push
int
popa
scas
mov
and
add
dec
shlb
insb
adc
andl
xor
jecxz
das
std
ficompl
fcoms
adc
pop
sub
loopne
inc
pop
arpl
add
dec
cvtps2pd
add
dec
mov
mov
or
add
jae
lds
test
mov
inc
cld
mov
adc
inc
sbb
test
mov
sbb
mov
mov
loop
cli
jl
aaa
mov
jb
fadd
adc
add
icebp
clc
insb
inc
adc
pop
dec
jno
pop
cld
in
xchg
je
mov
pusha
lcall
sbb
inc
sbb
pusha
sbb
mov
leave
or
xor
mov
mov
mov
push
outsb
jno
push
jno
loopne
call
pop
add
push
mov
cmpsb
push
adc
cmp
outsb
pop
add
bound
or
fs
in
add
int
pop
lea
pop
outsl
inc
outsb
dec
cmp
xor
xorl
aas
fcomip
sub
in
mov
mov
aaa
jmp
sbb
xchg
adc
jp
adc
shl
outsl
mov
or
das
push
dec
mov
popf
jns
mov
sti
gs
shlb
xlat
mov
stc
add
shlb
sub
push
pop
xchg
popl
inc
lods
fcoms
lahf
fcoms
imul
mov
xchg
gs
and
ret
fstps
dec
xor
mov
out
cli
mov
faddl
adc
subb
out
mov
imul
cmp
out
ret
inc
movsl
insb
pop
outsb
push
cmp
sbb
cmp
and
inc
popf
mov
or
push
jge
and
arpl
mov
push
mov
sbb
scas
xor
std
rcll
test
movsb
sub
mov
test
and
movsl
xchg
inc
push
sarb
cmp
xchg
addb
sub
mov
pop
sub
test
fisubrs
jno
push
out
xchg
test
mov
inc
pop
mov
mov
mov
mov
ljmp
pop
addr16
sub
inc
sbb
cmpsb
cltd
mov
mov
imul
hlt
sbb
cmpsb
add
inc
push
aas
stc
xchg
xor
push
adc
lcall
roll
imul
push
or
in
adc
insl
sub
dec
or
mov
pop
test
inc
bound
in
aas
lods
mov
dec
mov
pop
cli
add
cmp
das
adc
lret
jl
imul
and
bswap
pusha
xor
pop
cmp
mov
sub
jp
test
int
cs
fdivrs
lahf
out
xor
clc
lret
pop
ficoml
data16
add
mov
fs
xor
fstl
imul
mov
mov
dec
adc
cs
lret
mov
push
sbb
or
jo
ret
sbb
lahf
testl
and
imul
cli
cli
pop
mov
popa
push
popa
and
xchg
dec
lock
pop
in
jmp
cmp
cmp
push
dec
jns
or
mov
and
sub
xchg
test
inc
sti
pop
or
leave
or
dec
scas
pop
leave
insb
cmpsb
xchg
xchg
lcall
mov
sub
cmp
sbb
mov
mov
stos
fisubrl
pop
xchg
aam
movsb
incb
push
scas
sub
loope
mov
lock
aaa
addr16
lcall
mov
movsb
mov
sbb
lret
cli
aam
int3
stc
inc
jle
lcall
xor
push
jo
hlt
rcr
xchg
sti
ror
cmp
arpl
cmp
mov
int
add
pop
mov
jns
out
ret
adc
inc
push
test
lods
jno
mov
popa
aam
clc
ret
cs
test
lods
lret
push
and
aas
pop
mov
cmpb
sbb
rolb
out
or
idivl
jle
sbb
push
pushf
imul
loopne
jmp
cwtl
sarb
shr
push
bound
mov
mov
and
xorl
add
into
imul
xchg
xchg
pop
mov
rclb
incl
out
shrb
cmp
and
rclb
lret
popf
nop
and
sub
repz
pop
aam
stos
jns
and
sbb
push
gs
adcb
in
ja
mov
cmp
mov
sarb
repnz
fnstsw
mov
lcall
xchg
mov
inc
cmp
jbe
lcall
push
dec
hlt
in
sub
xchg
xchg
pop
xchg
pop
ret
sub
jp
shl
mov
push
jge
jbe
dec
xchg
test
iret
adc
imul
mov
sub
pop
rorl
lock
push
mov
enter
push
push
add
insb
ret
inc
bound
inc
xor
cvtps2pi
pop
jle
mov
push
rcrl
cmp
xchg
mov
lret
rol
pop
lret
mov
pop
fldl
loopne
and
inc
das
mov
push
popf
add
loopne
mov
mov
dec
pop
lahf
in
cmp
insl
je
mov
xchg
and
outsl
decl
dec
out
sub
aaa
filds
jo
clc
mov
xchg
push
push
les
mov
cwtl
sbb
xor
pop
push
fsubr
mov
movsl
aam
mov
call
mov
lret
loop
jg
gs
mov
hlt
push
sub
or
int
daa
fwait
add
sub
int
test
mov
mov
cmp
pop
and
sub
adc
movsb
or
cld
sbb
stc
stc
cmp
ljmp
shr
fwait
in
jl
cld
scas
and
sub
pop
leave
rclb
fsts
ret
xchg
je
xor
test
out
es
cmp
sub
test
icebp
daa
push
int3
mov
xchg
loope
lea
sub
fsubr
lods
push
sub
jg
sub
bound
or
mov
sbb
mov
mov
sub
sub
das
pusha
sbb
jo
ss
stc
push
cmp
xchg
orb
or
sub
test
pop
add
xchg
lret
das
pop
xchg
les
std
or
aad
jnp
fs
movsb
int3
mov
repz
xor
in
std
adc
sub
ud1
leave
xor
jp
xchg
out
sbb
lret
insb
cwtl
mov
xchg
jno
pop
and
jb
push
in
es
and
mov
sarb
mov
pop
aaa
mov
subb
mov
push
stc
sarl
mov
xor
cmp
and
inc
loop
sbb
imul
ljmp
dec
mov
lock
add
jb
fcoml
lds
je
xchg
add
ss
sub
fcoms
ss
mov
stos
in
daa
xchg
xor
imul
loop
outsl
mov
ds
nop
test
sbb
movsb
sar
js
push
adc
adc
pop
addr16
jmp
into
sarb
mov
outsb
push
fwait
or
lcall
add
push
ficompl
repz
cmc
pop
cld
mov
enter
or
mov
sbb
aas
dec
cli
jno
js
das
inc
mov
frstor
aad
ljmp
cs
mov
dec
dec
and
leave
xchg
xor
imul
repnz
push
test
xchg
jo
mov
adc
les
mov
icebp
pushf
lock
out
cmp
inc
hlt
mov
je
mov
cmp
pop
leave
push
int3
push
mov
hlt
jecxz
mov
sub
les
push
sbbl
push
scas
insl
je
into
pop
int
push
xchg
int3
outsb
mov
jb
bound
push
movsb
mov
push
out
mov
jae
and
pop
jp
jg
pusha
add
and
fdivl
test
mov
shrb
movups
sbb
ds
xchg
mov
pop
pop
mov
and
mov
or
inc
out
push
jl
add
or
adc
xor
dec
mov
dec
popa
push
ja
mov
and
inc
xchg
and
loopne
dec
dec
mov
push
das
rcll
stos
xor
mov
mov
mov
pop
mov
sub
test
xor
leave
adc
dec
adc
pushf
jbe
xchg
mov
stos
pop
test
outsl
mov
scas
mov
adc
push
adc
rcll
scas
or
gs
jb
daa
lahf
dec
pop
test
shlb
xorb
and
jo
pop
xchg
lds
jb
ss
ss
mov
add
or
scas
or
inc
cmp
adc
mov
aaa
lods
pusha
stc
sahf
push
enter
mov
push
fwait
lahf
xor
and
into
add
jmp
mov
lcall
dec
push
adc
rcl
in
inc
cmp
ret
inc
repz
sarl
scas
mov
or
aad
je
daa
xchg
jge
repz
inc
adc
ret
add
adc
cmc
orl
shlb
daa
gs
fisubl
stos
and
jg
jmp
ja
fistl
mov
fstpl
lea
cmp
fbstp
adc
mov
scas
inc
and
in
jg
pop
fcomi
in
sbb
out
popa
mov
std
xor
mov
push
iret
mov
aam
dec
sub
test
sbb
mov
add
mov
jge
adcb
cs
push
je
jecxz
insl
cmpsb
or
jp
das
roll
and
xchg
stos
das
jmp
or
testb
scas
loope
lahf
and
xor
cli
jb
addl
inc
adc
fs
fdivr
shrl
jae
insb
jnp
es
add
pop
bound
pop
adc
jle
stos
sbb
jl
pop
mov
cltd
rcr
sbb
sub
mov
dec
bound
xchg
sti
jne
sbb
dec
cli
fs
mov
outsb
jl
push
lahf
lret
and
ss
int3
jg
std
inc
add
leave
dec
add
add
pop
xor
fcmovbe
or
test
jno
lock
jmp
int3
or
inc
inc
shlb
fdivl
pop
ret
fldl
xchg
pop
mov
lea
lods
ss
fucomip
fmull
xor
mov
add
std
push
clc
cmp
leave
xor
ss
fimull
mov
call
sbbl
cli
lret
push
loop
adc
and
xchg
inc
imul
pushf
in
push
stos
les
mov
and
xor
xchg
mov
sub
dec
insb
mov
lcall
nop
sahf
or
dec
popa
int
cs
pop
adc
mov
pushf
fwait
adc
xor
pop
and
mov
and
sbb
and
adc
xchg
or
sbb
popa
test
leave
loopne
icebp
aas
cli
xchg
orb
dec
lretw
lahf
imul
jne
pushf
cmp
out
adc
aas
xchg
fistps
cmp
inc
in
ret
push
cltd
out
or
and
jge
test
cli
cmp
pop
jge
addr16
jl
jmp
xor
add
mov
add
and
imul
mov
lods
adc
loop
aas
jmp
mov
xor
cmp
fdivrl
dec
jb
das
push
or
pop
or
clc
mov
push
mov
cmp
xor
or
dec
xor
sbb
mov
jb
data16
cmp
pop
pop
loop
add
jae
jne
adc
inc
jp
lods
cli
adc
movsb
int
xor
roll
and
dec
cwtl
rolb
aad
cli
adc
mov
xor
pop
cwtl
stos
insb
xor
aaa
cmp
ret
sbb
xor
sahf
outsb
xchg
icebp
xor
addr16
retw
fwait
sub
arpl
aad
mov
jo
mov
rcrl
pop
sub
push
je
sbb
pushf
arpl
lock
das
sahf
pop
dec
ja
sbb
shrl
mov
dec
sbb
lods
dec
mov
test
aas
and
pop
cmpsl
icebp
dec
add
insb
scas
out
push
test
mov
mov
fbld
into
out
js
lcall
in
rol
lock
loop
mov
add
xchg
or
push
test
mov
lods
mov
out
cwtl
push
xchg
daa
mov
pop
ret
out
lret
jle
push
adc
pop
shl
add
push
scas
loop
imul
mov
addr16
imul
add
pusha
test
add
mulb
push
popf
adc
out
mov
bound
insl
adc
jp
push
arpl
xor
ret
fadd
mov
cli
dec
rolb
mov
data16
mov
xchg
test
xor
dec
shlb
push
mov
std
andb
sbb
das
imul
ret
jl
xchg
int3
bnd
push
cld
aas
cli
out
push
xchg
xor
sbb
push
leave
xor
aas
fs
test
xor
xchg
insl
outsl
push
mov
or
xor
pop
fcomp
sti
pop
adc
test
leave
lock
xchg
mov
movsl
adc
and
pop
aam
sub
clc
mov
push
loope
mov
js
mov
pop
inc
mov
dec
iret
repnz
xchg
mov
insb
icebp
mov
in
push
gs
inc
loope
movsl
popaw
cs
inc
lds
imul
and
scas
ds
mov
popf
mulb
daa
adc
inc
int3
in
jge
lock
mov
adc
hlt
mov
and
in
popa
icebp
add
hlt
cmp
mov
sub
out
mov
mov
push
out
mov
jnp
loopne
repnz
cmp
xchg
ret
inc
mov
mov
jbe
aam
add
lock
push
loop
push
shl
inc
repnz
lret
leave
shll
mov
mov
call
inc
mov
imul
jecxz
adc
xchg
rclb
push
cld
jbe
push
mov
inc
mov
cs
dec
in
push
adc
add
mov
add
mov
xchg
int3
jg
in
out
push
data16
push
dec
xchg
cmpsl
add
data16
imul
rcl
nop
add
inc
ljmp
outsl
movsl
xor
push
insb
je
push
xlat
sub
sbb
mov
cmpsb
cmp
mov
lcall
sub
push
int
dec
jae
negl
jmp
mov
ljmp
rorb
loope
arpl
fdivs
jge
nop
test
jg
jb
jmp
mov
jmp
insb
stc
scas
cmp
xchg
lods
stos
push
mov
test
dec
movl
pop
test
movl
in
add
nop
adc
sbb
mov
mov
dec
mov
movsb
movq
jmp
cs
por
mov
mov
gs
push
inc
jns
push
gs
rolb
in
xchg
mov
and
fadds
cld
add
pop
cs
fs
dec
inc
lcall
stos
stos
imull
mov
iret
sbb
mov
clc
repz
jno
adc
push
shrb
je
pop
stos
rclb
push
loope
mov
xor
jp
rcl
jge
ss
jb
mov
xor
add
test
shl
loope
popa
ret
in
cmc
cli
cmp
inc
jg
dec
imul
mov
sbb
xlat
data16
adc
mov
dec
xchg
data16
push
testl
adc
fidivrs
fidivrl
mov
push
push
lcall
sbb
pop
aad
xchg
mov
sbb
inc
fistpl
aaa
mov
les
pop
mov
push
mov
and
mov
xchg
push
xchg
insl
in
jne
outsl
adc
add
pop
test
lret
mov
hlt
mov
aaa
xlat
mov
jno
mov
xor
sub
push
add
xchg
ja
imul
push
jle
mov
cmp
push
sbbl
stc
cmc
das
aas
mov
das
and
scas
cmpsl
mov
and
jmp
jo
mov
push
adc
loop
mov
adc
addl
loopne
fldl2e
cmp
jl
scas
mov
int
mov
sarl
rclb
hlt
push
pop
sub
inc
and
push
mov
sbb
inc
adc
cmp
mov
insl
je
jne
or
pushf
test
mov
fdivrl
mov
in
cmp
and
sub
xchg
test
pushf
jns
test
jne
fildll
enter
shll
shlb
mov
pushf
cmp
shl
pop
xchg
push
or
in
imul
ja
les
nop
insb
je
shl
mov
imul
cmp
in
add
arpl
test
cmpsl
add
push
vrsqrtss
es
cwtl
mov
or
xor
data16
inc
pusha
dec
mov
xchg
pop
out
data16
pop
out
shrl
cwtl
popf
imul
xorb
jne
lods
sbb
or
ss
mov
out
pop
inc
mov
addl
jae
dec
mov
out
mov
mov
movsl
testl
sbb
jp
enter
leave
addb
xchg
scas
ja
or
iret
inc
mov
xor
dec
cmp
mov
jecxz
test
and
test
cmpl
cli
je
mov
test
lods
call
adc
scas
xchg
add
adc
ficoms
push
iret
ljmp
push
fmul
rcrb
add
sbb
adc
js
stos
icebp
daa
mov
and
lret
sahf
rcrl
fwait
mov
fmulp
lcall
dec
outsl
jnp
loopne
aam
push
bound
push
jmp
lahf
push
mov
xchg
inc
pop
cmp
inc
scas
xchg
and
scas
jb
sbb
les
cmp
leave
out
and
push
popa
pop
push
rcrl
out
adc
add
je
mov
jmp
cltd
inc
push
lods
fcoms
rorl
pushf
lods
or
xchg
roll
out
lock
and
mov
inc
xchg
push
sbb
je
lahf
jp
xchg
pushf
sub
push
jne
popa
testb
sbb
es
icebp
push
mov
mov
xor
cmp
pop
cmpsl
cmp
leave
mov
add
pop
dec
popa
pop
jmp
xchg
fwait
rcrl
xor
or
movsb
lods
xchg
mov
or
in
jo
lods
mov
ret
xchg
mov
cmp
outsl
js
pop
pop
es
jae
inc
pop
hlt
rcll
fmull
sub
shl
add
mov
push
inc
out
mov
imul
xchg
cltd
pushf
movb
sbb
loopne
xchg
les
in
sub
fsubrl
into
lds
mov
insl
and
pop
mov
mov
cmp
mov
bound
sbb
int
cmp
and
call
cmp
push
aam
add
fstpt
sub
mov
repz
jno,pn
cmp
adc
and
sub
and
cmp
push
mov
out
stos
mov
pop
sbb
mov
pop
insl
pop
jecxz
pop
das
jne
sub
or
imul
jle
ret
fnstcw
pop
sahf
jae
mov
xchg
mov
fiadds
inc
in
into
je
imul
scas
notb
mov
loop
cmp
mov
jl
mov
xlat
cwtl
cmp
xor
mov
jecxz
loope
pusha
jge
mov
clc
cli
add
or
or
pop
add
idiv
mov
mov
xor
arpl
les
add
aam
in
std
sbb
or
jg
mov
sbb
ret
rclb
jp
mov
and
inc
pusha
or
fwait
cld
cltd
mov
mov
or
inc
pop
ja
sbb
pop
inc
mov
sahf
xchg
sub
int3
daa
loop
lcall
fwait
gs
mov
mov
sub
xchg
add
xchg
insl
add
xchg
test
mov
shr
gs
cmp
jmp
adc
sbb
mov
stc
inc
idivl
testl
jg
pushf
xor
push
push
dec
mov
es
lds
idivl
ja
jg
daa
das
mov
std
inc
pop
push
fnstcw
loope
mov
cmpb
inc
pop
pushf
aas
fistl
subl
ss
sub
sbb
fadds
cmpsl
sub
jg
sahf
jbe
out
mov
cmp
inc
add
out
out
imul
inc
sbb
mov
xor
in
aad
cmp
mov
pop
push
dec
sarb
sub
das
inc
mov
sbb
in
negb
jns
fcoml
jecxz
cmp
lret
popa
jnp
mov
adc
repnz
mov
pop
adc
sbb
mov
cli
pop
hlt
inc
xchg
gs
loopne
mov
in
sarl
or
call
sbb
sbb
pop
sbb
hlt
test
push
add
orw
cmp
jb
inc
ret
pop
adc
insl
push
ljmp
xorb
test
cmp
mov
pop
insl
aaa
jp
or
mov
and
mov
movsl
sbb
fmuls
dec
outsb
mov
push
xor
out
xlat
push
fwait
mov
and
push
pop
push
outsl
mov
jl
sahf
in
cmp
jo,pn
lea
lods
cltd
in
std
aaa
sti
fcmovu
rorl
mov
mov
sar
or
pop
cltd
hlt
in
push
dec
adc
adcl
dec
jbe
jmp
mov
pop
lret
adc
aad
repnz
pushl
jne
arpl
notb
sub
xchg
mov
sub
mov
mov
scas
scas
add
cmp
adc
jecxz
cli
out
mov
jns
cwtl
jmp
divl
xchg
cli
add
push
in
push
mov
dec
adc
xchg
push
lock
mov
cmp
shll
xchg
adc
test
xchg
pushf
stos
andb
push
cmp
ret
jmp
mov
sahf
lcall
xchg
mov
cli
jecxz
pushf
loopne
xchg
mov
mov
mov
mov
lcall
lods
ficomps
je
push
mov
pop
stos
test
je
inc
stos
push
jae
cwtl
push
jbe
mov
inc
rolb
lods
inc
xchg
aaa
jbe
jg
bound
shll
lds
scas
iret
les
into
and
xor
dec
out
inc
scas
je
dec
out
nop
inc
inc
nop
inc
inc
nop
adc
xchg
lds
jb
mov
fwait
cmpsl
jecxz
pop
bound
imul
sub
sub
test
push
std
adc
sub
cmp
mov
jge
xchg
mov
dec
iret
and
mov
int
into
sbb
sbb
mov
jle
addl
adc
jl
inc
adc
out
into
repz
xchg
jle
adc
inc
cmp
in
mov
inc
outsl
ss
push
pushf
fwait
jp
cmp
xlat
push
ret
xchg
loop
ret
mov
push
xor
xchg
sbb
movups
int
push
pushf
jge
cli
lret
jo
ss
loop
out
clc
adc
mov
dec
out
imul
push
jae
popf
xor
mov
clc
je
mov
fprem
rcll
imul
cmp
repnz
jecxz
or
rcr
inc
je
mov
sub
push
sti
jno
in
mov
popa
js
sbb
pop
or
shlb
sub
cs
jg
stmxcsr
sbb
ds
in
lods
movsb
sbb
and
pop
pop
pop
mov
aaa
xor
in
cmp
cltd
pop
xlat
mov
mov
cmp
jg
jo
add
lret
mov
or
daa
pop
aam
and
xor
std
mov
popf
push
mov
or
mov
cmpsb
addb
fwait
cmp
pop
pop
inc
in
add
inc
adc
jp
add
and
cld
cmp
mov
stc
mov
cmc
mov
fsubrs
clc
pop
insb
dec
fisttps
sbb
repnz
jg
xor
push
ret
jo
call
mov
jae
loop
insb
xchg
pop
inc
in
lods
pop
cmp
scas
sub
sbb
push
stos
test
aam
pop
xchg
test
cmc
sbb
mull
xchg
push
hlt
pop
stc
test
xor
mulps
dec
ficompl
pop
sub
rolb
pop
mov
sbb
in
jne
test
xchg
scas
or
xchg
inc
inc
in
mov
or
pop
jecxz
adc
insl
add
test
cmp
push
pop
cwtl
cmp
mov
push
out
and
fdivr
mov
or
mov
lahf
outsb
pop
mov
jmp
enter
fcoms
mov
push
mov
sub
into
repnz
sub
in
cmp
lahf
cwtl
or
loope
pop
cld
stos
pushf
loop
movsl
orl
fst
sar
sub
pop
push
outsl
je
sbb
adc
jno
xor
sub
ljmp
pop
test
push
pop
inc
or
ss
xchg
icebp
push
dec
pop
jmp
fldcw
inc
sub
cld
push
mov
insl
pop
or
xchg
lahf
xchg
stc
fistl
add
xchg
mov
jge
aas
fs
adc
test
inc
add
das
inc
jne
gs
jmp
inc
inc
sbb
mov
xor
mov
lcall
add
out
test
push
push
lahf
xlat
cmpsl
scas
dec
cli
xchg
inc
cwtl
das
and
out
addb
fnsave
call
or
sti
lock
stos
cwtl
arpl
adc
jbe
pop
pop
xor
iret
lahf
call
pushf
ja
push
sub
pop
dec
insb
push
inc
add
insb
les
xor
mov
in
loope
mov
insl
fneni(8087
add
out
je
mov
sub
cld
outsl
push
imul
lret
clc
shlb
aam
hlt
test
ret
mov
dec
movsb
mov
lret
loope
sbb
rorb
push
cmp
js
mov
and
in
add
jo
icebp
andl
or
push
and
mov
jno
inc
aas
sbb
or
test
enter
pop
roll
pop
adc
jmp
scas
test
mov
cmp
jae
test
into
jns
cmp
std
push
in
out
mov
test
insb
dec
push
aam
sub
pushf
loopne
xor
push
xchg
addr16
xor
mov
xchg
push
sbb
js
pusha
jle
mov
lret
xor
mov
xor
or
add
lds
outsl
pop
jb
cwtl
out
loop
xchg
pop
fidivrl
push
mov
mov
jnp
movsb
xchg
lcall
and
add
movsl
push
jp
call
lea
repnz
or
mov
lcall
shl
sub
ja
ljmp
cmp
int
jb
sbb
pop
mov
lea
pop
push
cld
test
das
pop
sbb
ljmp
adc
inc
call
enter
scas
gs
in
sbb
mov
das
je
push
lret
adc
roll
loope
repz
dec
sbb
adc
adc
push
stc
sub
inc
jle
xchg
lcall
xchg
sbb
push
in
jbe
addr16
jmp
pop
fistpl
mov
loopne
pop
push
xchg
push
inc
cmp
gs
or
push
mov
rep
mov
xchg
add
fmul
in
add
inc
rcl
sbb
dec
int3
movq
cmp
je
xchg
inc
adc
std
cs
add
data16
test
inc
mov
xchg
pop
sub
dec
cwtl
outsb
sub
xchg
push
frstor
inc
dec
es
pop
std
in
lods
fists
leave
mov
push
or
mov
mov
dec
es
jo
rcrl
loopne
repnz
inc
pop
sub
int
cmp
fistps
mov
popa
enter
inc
xchg
call
out
lcall
xchg
shr
aas
testb
ja
add
and
add
push
or
sbb
mov
xor
mov
out
cwtl
mov
jb
push
jo
push
daa
mov
sarb
and
jp
add
fidivrl
lock
shrb
ds
icebp
test
push
leave
xchg
adc
mov
jae
stos
pop
and
mov
lcall
lock
xlat
push
mov
das
test
outsb
dec
or
ds
mov
cmpsl
bnd
imul
xor
pop
ja
fwait
mov
cld
pop
push
sub
outsb
add
int
inc
xchg
add
pop
leave
outsl
lods
mov
push
enter
xchg
hlt
xorl
xchg
aaa
test
xchg
inc
mov
xor
lock
aad
cld
push
mov
cltd
hlt
pop
leave
jmp
in
sub
or
xor
adc
add
ret
cld
call
push
loop
addl
jmp
pop
std
pop
lds
mov
outsb
popf
pusha
ret
xchg
insl
mov
lods
dec
adc
mov
mov
cwtl
adcl
sti
idivb
mov
jbe
dec
push
jnp
lret
out
stos
and
dec
mov
xchg
lods
sar
add
xchg
push
mov
xchg
test
cmp
das
mov
movsb
mov
enter
xchg
sub
faddp
adc
and
fs
jp
inc
jo
mov
out
mov
das
or
scas
or
scas
mov
dec
mov
gs
dec
cmc
call
fwait
data16
es
sub
enter
je
inc
xor
and
and
int
cmp
cmp
lret
movsl
inc
mov
inc
ret
mov
dec
fnstsw
pop
pop
pop
cmp
pushf
jg
jbe
out
and
sbb
xor
cmp
push
or
pop
cmp
lods
or
shl
jnp
and
mov
fbstp
or
jnp
daa
test
xor
cmpsl
jmp
iret
xor
out
or
sub
jg
cmp
adc
lds
push
aam
cmp
in
or
and
int3
jb
movsl
fdivrp
jmp
jns
cmpsl
mov
fistl
push
jge
push
inc
cltd
xchg
bound
jle
mov
nop
out
jmp
bound
push
ss
lcall
sub
xor
mov
mov
jg
pushf
movsl
xchg
repnz
hlt
lahf
xchg
sbb
cltd
xchg
inc
mov
sub
ljmp
fidivs
gs
sub
mov
xchg
lds
dec
jle
movsl
mov
hlt
xchg
dec
mov
daa
adc
inc
outsb
pop
sub
test
into
add
dec
jns
lea
repnz
addb
sbb
cmp
call
cwtl
loope
shll
addr16
and
pop
iret
xchg
dec
adc
outsl
inc
sarb
dec
pslld
clc
je
gs
pop
dec
or
add
add
ffree
aas
aaa
dec
int
loopne
stos
scas
dec
inc
insl
and
mov
mov
ret
jecxz
mov
adc
push
in
cmc
inc
rcrb
adc
leave
mov
popa
and
in
aaa
scas
cmp
rclb
jp
fsubs
xor
nop
inc
nop
jmp
xchg
and
inc
movsb
jbe
std
mov
mov
mov
fstpt
push
js
mov
sbb
das
cmpsb
shlb
iret
mov
fnstenv
insb
ret
int
test
mov
jecxz
imul
les
ret
sbb
lahf
push
clc
pop
shl
xchg
movsl
pop
imul
dec
in
mov
sub
or
popa
xchg
push
stc
dec
xorl
sbb
cmp
inc
or
je
xchg
push
in
rorl
pop
arpl
iret
lret
popf
cmp
hlt
lock
int
es
xlat
pop
push
jae
sub
inc
or
xchg
pop
cmpsb
hlt
and
orb
out
in
xchg
fs
test
shr
dec
lcall
in
mov
push
and
mov
pop
insl
xchg
dec
test
cmp
xchg
or
cmp
xchg
pop
adc
nop
jbe
insl
mov
jg
sbb
sbb
add
inc
xor
scas
test
xchg
data16
je
addr16
divb
mov
sub
xor
fndisi(8087
lret
ja
pop
sub
sahf
call
aad
sub
test
mov
pop
xor
bound
je
aad
sahf
jmp
call
xor
pop
sub
xchg
test
lock
les
aad
inc
adc
adc
imul
add
jb
adc
mov
push
mov
pushf
iret
fcomps
rolb
ljmp
xchg
jb
and
orl
dec
xchg
stos
insb
adc
mov
loope
mov
mov
enter
test
shl
fcmove
ret
aad
ret
jl
sub
cmp
or
cmp
insb
pop
xchg
push
pop
xor
add
mov
xchg
les
cmp
clc
rcll
mov
jmp
jnp
int
test
mov
cmp
call
jg
outsb
outsb
and
negl
inc
sbb
nop
push
adc
shlb
add
mov
lds
push
add
jl
fcmove
pop
adc
pushf
mov
js
in
cld
or
mov
stos
mov
mov
lods
sbb
jne
push
mov
pushl
push
push
insl
dec
cltd
aaa
jae
push
cmc
xchg
stc
in
push
wrmsr
test
das
push
jg
aad
ret
mov
rcr
or
sbb
or
push
sub
sub
jecxz
inc
ret
pop
inc
rcll
mov
inc
or
mov
lods
add
sahf
call
sbb
and
in
inc
jle
xchg
gs
mov
mov
dec
das
leave
jae
fsubrl
mov
add
daa
rorl
adc
push
mov
incl
and
jne
pop
call
shll
iret
mov
pop
inc
mov
mov
inc
jecxz
int3
push
out
loope
and
push
es
call
pop
pop
pop
lret
fmull
lock
push
add
stos
fdivr
aaa
cmp
sbb
pop
fldcw
xor
jle
dec
xor
cld
or
shl
popf
ja
xlat
pop
dec
jge
pop
mov
xchg
add
cmp
ret
xchg
and
ret
cwtl
leave
enter
shrb
ljmp
xor
push
mov
mov
hlt
xchg
push
test
xor
jns
rcl
jns
insb
enter
loope
fucom
and
je
cs
out
mov
test
mov
dec
xor
int
push
scas
dec
sbb
loop
push
test
imul
pop
hlt
repnz
dec
lcall
outsb
adc
push
loop
rep
mov
movsb
and
adc
sarl
mov
andl
mov
mov
sbb
cli
mov
insl
call
jns
push
jnp
add
jno
jbe
cmp
mov
sahf
cmpsb
loopne
pushf
call
jns
lea
out
inc
xchg
icebp
xor
and
inc
pop
and
push
push
cvttps2pi
cmp
xor
jg
cwtl
fbld
jns
xchg
popa
xor
mov
adc
xor
repz
inc
inc
cmp
sar
lds
sub
sbb
or
lods
lea
jmp
sbb
mov
inc
fstpl
sbb
orl
pop
imul
mov
sub
dec
mov
cmpsl
mov
jnp
pop
clc
mov
ret
mov
out
scas
pop
repnz
push
mov
sbb
dec
mov
stc
mov
addr16
imul
cmp
sahf
mov
mov
fwait
out
jp
enter
arpl
jae
add
loop
dec
imul
sbb
and
xor
insl
pop
cli
mov
push
push
ss
cs
popa
pop
push
in
adc
mov
aas
ss
lds
shlb
test
adcb
xlat
pop
push
mov
dec
pop
sub
xchg
push
push
ret
lods
addl
fldt
jo
cli
test
stc
out
pop
js
mov
jle
insb
pop
fcmovb
push
fdivr
inc
push
cmpsb
lret
js
lret
shrl
add
xchg
fdivs
jno
xor
jmp
daa
pop
cmp
jle
and
lahf
jmp
in
mov
aad
push
push
cmp
cmp
aam
mov
pop
leave
outsb
movsb
ja
testb
sbb
sbb
push
add
push
mov
dec
imul
mov
stos
sub
cmp
roll
dec
jbe
fdivr
and
mov
lea
mov
inc
sub
cmp
dec
lret
xchg
js
insl
fwait
pop
cld
add
pop
aad
sub
mov
adc
and
add
fiaddl
xor
jo
mov
loopne
fadd
bound
jb
ror
push
adc
and
cmp
pop
push
rcrb
or
cmp
ja
repnz
sbb
jns
jnp
movsb
into
stc
orl
xor
xchg
mov
inc
mov
scas
shrb
pop
bound
out
arpl
pop
xchg
std
lret
imul
add
add
cmp
in
dec
rcrb
repnz
add
inc
add
add
mov
sarl
mov
ret
jb
insb
cltd
xorl
jl,pn
bound
adc
cld
sbb
fs
aad
lea
cmp
ret
sbb
inc
mov
hlt
jnp
dec
dec
dec
enter
loope
sub
or
imul
outsl
xor
push
lahf
inc
mov
stos
lods
push
and
repz
inc
add
mov
adc
cmpl
push
pop
sbb
sbb
andl
sti
das
pop
push
in
sbb
aad
push
xchg
ja
push
push
pop
or
repnz
int3
sbbl
pop
movhps
repz
inc
xor
mov
and
icebp
test
into
lods
cld
imul
rcrb
fisttpll
cmp
xor
jne
daa
mov
lret
hlt
xlat
pop
xchg
pop
xchg
add
dec
push
or
jecxz
daa
or
enter
insl
sarb
frndint
pop
and
mov
dec
xor
nop
lea
or
push
cmpsl
cmpsb
push
rcrl
dec
sub
cmpsl
sbb
nop
mov
out
stc
insb
popf
outsl
cmp
xchg
lods
cld
dec
inc
push
sub
xchg
testl
mov
xchg
inc
jo
jecxz
cmpsl
jge
pop
and
xchg
adc
int3
pushf
xor
cmp
and
mov
xchg
pop
loope
aam
or
jle
cmc
or
add
sbb
jbe
push
mov
inc
je
jecxz
lock
ja
dec
jnp
sub
into
int
dec
jg
jns
nop
ljmp
aam
call
orb
add
insl
mov
or
repnz
xchg
outsb
sub
cs
mov
loop
jnp
decb
or
sub
idivb
xlat
push
mov
ljmp
mov
and
dec
and
mov
mov
out
cli
push
mov
fildll
fnsave
xchg
test
insl
subl
push
clc
repz
insb
or
subl
push
xchg
mov
filds
hlt
inc
es
ret
mov
dec
sub
push
test
mov
cltd
or
pop
adc
test
out
add
adc
icebp
xlat
std
push
ret
xchg
mov
mov
and
push
dec
mov
jne
cwtl
ds
cmp
xor
cmp
pop
clc
scas
xchg
xor
pop
in
sub
popf
ds
out
fs
adc
mov
dec
push
add
jge
xor
loop
movsl
movl
and
mov
std
xor
jecxz
mov
fwait
leave
rcrb
jge
push
daa
push
cmp
jl
fucomip
adc
inc
js
gs
cmp
es
or
push
test
jmp
fildll
mov
mov
out
dec
nop
ljmp
push
daa
and
push
pop
lahf
push
mov
jp
sbb
fcoms
addr16
repz
lret
mov
cmp
aad
cmpsb
pop
aas
cmp
adc
inc
xchg
cmpb
mov
insb
jmp
dec
cs
sub
imul
popa
cmp
adc
mov
lcall
shrb
rcll
sub
dec
adc
cmpsb
hlt
jle
sub
and
insb
jno
cs
stc
movsl
sbb
shrb
push
ja
loop
lods
mov
pop
jns
into
xor
xor
mov
das
repz
sbb
pop
pop
es
inc
add
int3
std
push
imul
dec
icebp
lahf
fdiv
lcall
jle
aad
jge
xchg
cmovns
jnp
lcall
and
xor
aaa
lcall
sbb
rcrb
mov
xchg
in
rcrl
scas
ret
adc
pop
aad
mov
pop
mov
insb
fsts
dec
xchg
mov
andl
sub
mov
cmp
je
dec
mov
push
mov
and
cld
pop
jns
or
mov
insl
repnz
pop
xchg
adc
cmp
sbb
ds
dec
mov
cmp
cmpsb
mov
jmp
sbb
jp
cmp
je
xchg
cmpsb
adc
lods
and
lods
add
jg
xor
mov
arpl
mov
stos
xlat
xor
pop
jno
inc
scas
pop
mov
daa
and
push
and
jbe
dec
fwait
test
idivl
mov
out
test
fimuls
gs
shlb
and
mov
cmp
sbb
adc
dec
fdivrl
mov
sub
jg
aam
aas
mov
or
jp
push
lods
repz
aad
ljmp
jae
dec
xchg
ss
add
rorb
test
pop
inc
xor
outsl
sbb
rcl
movsb
xor
mov
dec
jo
inc
or
dec
pop
in
sub
test
jno
adc
in
shld
mov
lea
cld
clc
rcrb
sbb
fnsave
xor
call
or
add
sub
lds
je
in
mov
nop
es
pop
popa
add
mov
das
js
add
sub
xchg
sub
jno
cmp
test
push
cmp
pop
in
add
cmc
lods
jae
and
mov
in
jp
adc
fidivrl
imul
ret
rcr
mov
sbb
and
repz
pusha
inc
push
test
bswap
dec
leave
clc
inc
andb
or
outsb
push
mov
cmp
js
mov
test
inc
movsl
mov
push
push
out
and
shrl
adcl
fdivrl
push
mov
push
cmp
in
test
in
mov
and
mov
test
jp
dec
in
mov
cmp
sbb
rolb
fiadds
push
pop
or
xchg
fs
mov
cmp
in
adc
loope
xor
stos
insl
lret
ja
gs
iret
ret
sub
inc
sub
in
cmc
or
cld
inc
jo
mov
mov
cs
lahf
repz
movsl
adc
cmp
sub
movsl
or
daa
or
cltd
sti
xor
xchg
into
jl
neg
sbb
and
jbe
repnz
mov
ror
xor
popa
jmp
push
mov
dec
fnstcw
add
mov
in
call
mov
sbb
jns
cmpsl
jl
repz
or
rcll
xchg
lock
adc
mov
pop
enter
pop
loope
jg
push
and
fwait
pop
cli
popf
pop
sbb
pop
jecxz
and
pop
add
dec
fistps
data16
add
in
or
push
jno
push
adc
lcall
loop
dec
ret
and
push
sbb
push
pop
cwtl
aaa
jecxz
and
jmp
mov
ficomps
push
push
loope
jl
mov
dec
ja
xchg
add
xlat
sub
and
push
push
jecxz
xor
inc
sub
aaa
outsl
jns
into
inc
mov
xchg
jge
jne
lods
into
addr16
push
mov
mov
xlat
pop
lods
int3
movsb
lret
mov
jle
lods
ficomps
add
adc
inc
pop
lds
es
arpl
mov
movsl
push
jg
mov
loope
jl,pn
dec
cltd
xorb
jmp
stc
mov
adc
adc
lret
mov
jnp
ja
jp
fistpl
xchg
jg
mov
mov
dec
mov
outsb
mov
cltd
leave
pop
shll
dec
movsl
pop
adc
inc
jmp
ret
enter
adc
dec
inc
push
jg
sub
sub
lods
push
dec
mov
fiadds
ds
in
inc
ja
les
cmpsb
jecxz
popf
mov
test
mov
ljmp
out
or
mov
pop
mov
cmpsl
dec
daa
adc
mov
mov
decl
fucomp
pop
aas
sbb
jns
ljmp
add
rcrb
repz
pushf
jbe
add
outsb
xchg
jno
test
imul
rol
adc
cmp
lret
mov
xchg
mov
arpl
jp
jge
push
rorl
test
adc
sub
sbb
mull
jns
aad
or
clc
testl
hlt
addr16
dec
test
jb
adc
push
into
or
mov
test
outsb
jle
int3
adc
fisubrl
pop
in
loope
xor
mov
data16
lds
inc
imul
dec
jo
aaa
movsb
movsl
jp
test
shll
clc
lock
imul
in
inc
and
shr
push
in
or
iret
test
xchg
cld
xor
rol
adc
popa
mov
bndldx
mov
dec
push
dec
mov
cmp
cli
jmp
jge
dec
or
cmp
xchg
mov
pop
xlat
mov
and
in
ret
mov
ds
les
mov
lcall
dec
xor
es
repz
cmp
sub
cmp
sub
inc
mov
lcall
out
sbb
in
ljmp
icebp
imul
sbb
add
mov
pop
mov
bound
ljmp
fucom
sarb
dec
mov
movsb
inc
out
dec
cmp
and
pop
adc
in
push
das
mov
push
add
sti
push
push
fcmovnbe
and
in
dec
adc
shrl
push
sub
nop
pop
sbb
aas
inc
lret
aas
mov
pop
fcmove
fucomi
adc
mov
roll
and
enter
xlat
and
orl
xchg
daa
aad
jne
jp
inc
popl
repz
sbb
out
mov
fstl
imul
or
pop
std
push
push
mov
testb
pop
pop
mov
cmpb
cmp
and
jp
jle
leave
icebp
rorb
cmp
ret
adc
clc
clc
mov
mov
out
lcall
aaa
lods
call
stos
ret
adc
nop
pusha
dec
pop
test
arpl
aam
push
les
lds
sub
cld
movsb
icebp
xor
retw
xlat
push
sub
xor
aad
push
add
jne
imull
imul
call
mov
mov
jne
rcrb
or
dec
sub
fsubr
test
notb
mov
pop
cltd
sbb
or
jns
mov
hlt
and
movsb
jnp
mov
dec
aad
loop
test
repz
and
es
or
mov
push
fdivs
fiaddl
push
das
jo
int
cs
mov
xchg
dec
int
notl
aad
stc
push
repnz
cli
cld
xchg
cmp
cli
jg
and
icebp
stos
jg
xor
mov
ja
jmp
push
sahf
pop
sub
jb
or
push
pop
lods
sub
iret
outsl
test
rolb
stos
jno
mov
ja
aam
es
sbb
mov
mov
push
xor
mov
dec
xlat
sar
xchg
pop
dec
sbb
pushf
cwtl
fs
jg
mov
ja
lcall
icebp
and
js
cmpsb
repz
in
cmp
pusha
scas
dec
mov
pusha
mov
neg
jne
imul
ljmp
sub
mov
imul
and
pop
push
rcrb
sarl
inc
clc
sbb
das
lods
out
mov
call
add
mov
ljmp
das
cmp
loop
leave
test
jae
jnp
jp
test
bound
in
push
fbstp
ret
mov
cltd
mov
das
jbe
xchg
sub
mov
jge
subl
mov
pop
sub
leave
inc
push
sub
push
pop
jle
sahf
movsl
shrb
lcall
or
flds
adc
jno
adc
xor
mov
add
mov
dec
and
loop
pusha
lahf
adc
sub
rcrl
pop
adc
mov
and
leave
xchg
or
in
cs
add
adc
cli
sbb
into
scas
dec
loope
push
jnp
mov
outsl
mov
mov
jbe
gs
push
out
cli
jmp
cmp
aad
or
dec
jl
test
loopne
push
mov
test
cs
fadd
mov
mov
push
lock
mov
jp
xchg
daa
jp
and
cmpsb
int3
outsl
pop
nop
fildll
jecxz
xchg
sbbb
cmpsb
mov
mov
mov
pop
call
sub
jg
push
push
aad
std
jg
das
je
out
lock
out
jns
pop
push
inc
jle
idivb
push
into
fs
and
push
xchg
jno
test
sub
je
int3
inc
jp
test
mov
mov
or
inc
mov
mov
call
adc
adc
pop
push
lret
movnti
pop
inc
fs
mov
iret
icebp
lea
or
jbe
je
and
test
xchg
and
loopne
leave
movb
xchg
pop
and
push
pop
int3
out
pusha
sbb
js
sub
add
scas
adc
cltd
mov
push
push
insl
mov
or
data16
cld
lahf
sar
sbb
and
adc
hlt
lahf
and
fimull
in
mov
pushf
pop
imul
loopne
sbb
inc
cmp
jge
daa
sahf
pop
or
shrl
and
daa
into
lahf
sbb
and
jg
pop
loopne
jle
mov
insb
pop
xchg
cmpsl
popa
movsb
cld
lcall
pusha
enter
test
outsb
and
cmp
pop
notb
cmp
mov
ss
icebp
xor
lods
lret
or
sub
jns
mulb
push
xor
xchg
out
ret
push
mov
loop
shlb
push
and
stc
repz
fwait
subb
sub
mov
aam
sbb
inc
test
insl
lods
adc
scas
lea
gs
not
arpl
jmp
rorl
xor
popl
add
mov
lea
aam
fnstsw
arpl
lock
pushl
push
mov
mov
movsl
pop
or
mov
pop
mov
xchg
mov
insl
in
inc
fisttps
ja
jp
push
dec
push
enter
dec
push
imul
cmp
imul
or
pop
or
cld
and
aam
loop
lahf
imul
mov
jno
std
push
fisubrs
mov
sub
or
push
dec
jb
and
mov
sub
clc
pop
popf
sub
lret
mov
pusha
mov
sbb
xor
test
sbb
mov
lcall
pusha
cmp
pop
push
ja
add
es
xchg
repz
cmpsl
pop
push
dec
mov
dec
iret
stc
inc
rol
lods
pop
jns
jmp
pop
out
cmpsl
daa
daa
outsl
outsb
cmp
sbb
or
inc
fisubrs
test
adc
mov
fidivs
mov
cmp
inc
fildl
add
mov
sub
push
inc
sub
and
mov
mov
lea
sub
fdivrp
xchg
aam
stos
jg
pop
dec
inc
fwait
cmpsl
test
jmp
lcall
cltd
xor
and
mov
mov
push
out
les
mov
mov
xchg
and
loopne
dec
ljmp
scas
imul
sub
or
cltd
mov
pop
popf
or
mov
test
fcmovb
jmp
pushf
out
or
clc
cwtl
decl
loope
jb
sub
lock
push
add
mov
cmp
popa
sbb
fwait
fs
mov
or
dec
leave
int
and
clc
mov
sbbl
xor
stc
mov
push
mov
in
iret
decl
xor
mov
ficompl
cmpsb
leave
xor
mov
stos
add
int
jecxz
sahf
aam
xor
mov
aad
cltd
xorb
dec
add
fsubrl
and
into
push
daa
test
sub
add
arpl
cmp
or
out
mov
push
adc
xor
ret
push
out
cmp
dec
icebp
insl
xchg
sbb
hlt
imulb
xor
xor
adc
dec
or
inc
add
sbb
and
mov
lock
lret
pop
xor
xchg
shrb
mov
jecxz
and
dec
mov
add
arpl
jbe
mov
dec
cmp
lea
cli
jb
ja
sti
test
fldenv
and
dec
insl
pop
pop
pop
orb
pop
sbb
sbb
sbb
mov
clc
sbb
pop
adc
jae
into
mov
aas
iret
mov
adc
mov
mov
into
lods
xor
pop
or
and
sbb
and
out
out
ret
mov
mov
cmp
jnp
imul
ljmp
push
mov
lcall
cmp
shlb
adc
pop
ret
mov
and
pop
rorl
sti
lea
scas
pxor
jecxz
in
ss
sub
outsb
vandps
orl
or
xchg
sbb
mov
aaa
adc
lret
add
ljmp
jae
jae
push
cmp
add
add
xor
orl
les
mov
movsl
ds
sub
cmc
cmp
push
jno
dec
aad
scas
js
aaa
rcr
mov
fldpi
mov
sub
pushf
lds
jmp
test
pop
xor
das
mov
xor
pmuludq
push
dec
in
xchg
ja
sbb
jne
mov
shrb
push
mov
adc
ret
xor
cmp
orl
jae
mov
shlb
cmpl
cltd
es
pop
stos
mov
bswap
or
testl
add
pop
call
and
adc
mov
div
jns
push
pop
shrb
xchg
repnz
arpl
sub
orl
mul
xchg
stc
and
mov
pop
fisttpl
push
mov
xchg
cltd
jbe
es
push
push
xor
adc
jle
add
cmp
xchg
dec
out
arpl
hlt
insb
pop
add
enter
mov
jo
sub
mov
outsb
fsubl
leave
ja
jb
mov
and
icebp
mov
movsl
xor
imul
nop
mov
cmp
mov
mulb
test
shlb
sbb
incl
insb
out
out
jno
mov
shlb
adc
pop
adc
jno
cmpl
cmp
nop
sub
mov
daa
and
lods
gs
test
jge
int
xor
shlb
inc
sub
fmul
push
cltd
test
orl
sbb
mov
fstl
les
push
xchg
mov
mov
sub
sub
insb
bound
push
aad
mov
push
out
ds
xchg
mov
adc
mov
jg
add
cld
push
inc
xchg
sbb
mov
jp
mov
pop
xor
jg
xlat
push
or
sub
sti
fstpt
and
cmp
scas
sbb
mov
jl
xchg
pop
sub
sub
pop
cltd
mov
mov
arpl
mov
out
push
mov
jg
xchg
xor
nop
xchg
loope
inc
fisttpll
into
xchg
sub
adc
or
nop
loope
shrb
out
les
xchg
int
stos
add
adc
imul
lahf
cli
test
mov
stos
push
in
push
outsl
out
lods
jb
sub
pop
decl
popf
sar
add
insb
xchg
or
mov
and
xchg
pop
out
in
or
add
push
sub
int3
xchg
pop
jne
test
idivl
fimull
jmp
ja
or
pop
push
pop
lds
call
repnz
outsl
aas
pop
sbb
imul
add
in
sbb
mov
pop
push
xchg
pop
inc
data16
rcl
push
inc
mov
out
fstpt
cmc
jno
jle
mov
add
sbb
mov
cmpxchg
mov
xchg
push
xchg
ret
dec
aam
jno
add
sarb
pop
mov
js
push
xchg
pushf
arpl
sbb
inc
jbe
jae
mov
jecxz
and
dec
shlb
int3
cmp
sti
scas
das
repz
inc
jne
aad
loope
insb
xor
insl
sbb
add
dec
rcrl
mov
mov
loopne
into
lods
jg
or
aad
popa
adc
rcrl
sub
dec
in
mov
jbe
sub
xchg
add
ret
cld
mov
adc
lods
jns
mov
shlb
xchg
daa
pop
ret
cmpsb
js
stc
mov
xchg
daa
push
sbb
inc
cmp
xor
out
in
mov
cmp
jne
push
rcl
and
jae
rorb
jp
imul
test
shll
pushf
in
out
and
inc
mov
jne
std
out
scas
negb
or
into
push
fwait
and
repnz
bound
pusha
shlb
rclb
pop
jmp
inc
jne
test
in
in
jnp
inc
cli
push
in
inc
popa
rcr
xchg
push
inc
rcl
sbb
inc
add
jne
lahf
xor
mov
push
mov
pusha
test
cmc
rcr
jnp
cmp
and
fucomip
push
pop
scas
push
mov
xor
push
jae
scas
mov
mov
call
mov
inc
pushf
jmp
fs
push
nop
mov
into
xchg
daa
pop
push
and
mov
fdivrp
mov
mov
pop
fdivl
push
dec
lret
out
insb
dec
aaa
jmp
push
push
call
push
push
icebp
push
orb
sbb
lea
fbstp
mov
push
dec
call
jbe
nop
jns
and
out
lea
inc
inc
push
adc
shl
adc
cmc
nop
pushf
inc
mov
fsub
inc
fiadds
shrb
push
pop
dec
fs
lcall
rcrl
dec
cwtl
aam
jbe
sbb
arpl
ljmp
jnp
jae
es
xchg
shrb
mov
loop
aas
xchg
push
pop
xor
hlt
ds
pop
cltd
fcoml
mov
pop
pop
inc
dec
iret
repnz
jo
cmp
inc
lcall
ret
and
sub
gs
int3
dec
cmp
notb
xor
jl
dec
lods
iret
add
sarb
mov
inc
je
test
andl
arpl
sbb
adc
push
and
xor
mov
add
push
mov
jle
adc
dec
fs
cmpsl
sbb
stos
dec
adc
out
and
mov
rclb
mov
imul
mul
xor
mov
gs
ds
iret
xorb
popf
jbe
push
js
mov
pop
push
in
pop
xchg
or
adcl
in
xor
dec
jne
jecxz
into
mov
xchg
xor
jno
gs
int3
xchg
loopne
loopne
sub
and
inc
insb
imul
push
addl
lcall
mov
icebp
dec
sbb
int
cwtl
insl
and
addr16
ljmp
insb
xchg
cmp
cmp
mov
sarl
test
xor
in
lret
std
inc
test
sbb
rorl
jecxz
jne
dec
call
or
xor
sbb
jbe,pt
inc
lea
mov
cmp
mov
arpl
sub
fwait
and
lea
aam
orl
shl
adc
mov
test
add
ja
dec
daa
lds
cli
sbb
test
xor
dec
push
rorb
mov
test
nop
mov
sbb
add
and
jecxz
ds
xlat
sub
ret
mov
adc
out
inc
mov
cmc
in
cltd
arpl
sarl
int
inc
test
jge
cmp
push
mov
push
xor
push
mov
or
pop
or
pop
pop
in
add
loope
or
pop
push
div
inc
pop
dec
sbb
jmp
in
mov
mov
adc
gs
pop
dec
fisubs
stos
jecxz
pmaddwd
jnp
adc
mov
mov
dec
mov
push
cltd
mov
sbb
in
rol
push
jg
nop
xchg
lods
xor
sbb
push
sbb
xchg
add
inc
sbb
pop
mov
imul
dec
jmp
xchg
and
push
shlb
outsb
lea
inc
adc
shufps
fs
pop
ret
pop
movsl
gs
push
test
and
outsl
or
mov
mov
cmp
fdiv
push
pop
xchg
sbb
jge
dec
push
xchg
sbb
jg
mov
lret
jmp
fst
adc
xor
call
push
mov
es
push
and
mov
add
or
jae
adc
das
enter
adc
jae
push
pop
daa
pushf
mov
bound
pushl
pop
xchg
popa
jns
ja
and
testl
cltd
adc
or
shrb
aad
clc
mov
stos
pusha
cltd
sahf
dec
mov
xor
and
gs
push
scas
sbbl
sub
js
mov
lret
popa
fwait
cltd
je
cltd
mov
sbb
in
and
shll
push
pop
frstpm(287
ljmp
mov
lcall
fcoms
xchg
scas
sti
out
cmp
test
ret
leave
adc
pop
cmp
repz
push
jns
or
or
mov
pop
in
ljmp
cmp
cmp
outsb
mov
push
jne
test
push
mov
or
in
sti
add
sub
lds
mov
jne,pt
jmp
cmp
dec
fcoml
cmp
xlat
hlt
push
ja
sarl
lea
jb
sub
sbb
push
xchg
outsl
retw
loope
mov
fsqrt
cmpsb
mov
lods
push
stos
jmp
add
inc
pop
fwait
outsl
cld
bound
ss
fnstcw
outsl
dec
add
cmp
xchg
lods
cmp
mov
mull
out
lds
add
filds
ds
xlat
xorb
fwait
das
test
out
iret
in
jg
imul
movsl
push
ficomps
fwait
mov
mov
sub
int
data16
addr16
pusha
jecxz
es
cli
into
adc
shr
dec
push
test
sub
in
cmc
ja
sub
sub
push
push
std
inc
fimull
add
test
aam
jb
add
shrl
daa
jns
sahf
loop
stos
xchg
icebp
popa
push
mov
fisubl
cmp
loopne
repz
jnp
push
test
pop
int
push
jbe
push
and
mov
repnz
xchg
pop
adc
dec
lret
fwait
push
imul
jne
dec
pop
mov
lods
aas
cli
mov
movb
mov
adc
call
and
dec
add
repz
jl
les
mov
sbb
sub
clc
jbe
test
mov
out
dec
insl
dec
pushf
and
sub
xchg
cmpsb
repz
sub
xchg
arpl
dec
adcl
sbb
scas
inc
pop
pushf
dec
adc
mov
xor
xchg
mov
sub
adc
xchg
cwtl
test
int3
dec
cltd
mov
sbb
hlt
sub
xlat
mov
imul
push
cli
pop
nop
repz
incb
mov
movsl
xchg
pop
repz
mov
loopne
push
pop
xchg
je
jne
out
and
xchg
cltd
je
or
insl
leave
roll
ljmp
mov
cmp
pslld
mov
or
out
pop
jmp
insl
lea
cltd
divb
stc
jmp
icebp
sbb
outsb
inc
xor
mov
bnd
lret
inc
js
adc
pushl
xor
das
mov
into
dec
leave
cmpsb
pop
cmp
sbb
xor
mov
jmp
sbb
dec
xor
push
cmp
push
dec
out
pop
imul
aaa
into
cs
js
cmp
fdivrs
mov
nop
jl
movb
cmc
mov
ljmp
mov
jbe
sub
test
adc
adc
jno
bound
cltd
insl
pop
push
lds
leave
xor
inc
ret
mov
jne
lea
ss
inc
dec
lret
inc
push
idivl
mov
cmp
mov
loopne
sbb
jb
jg
aam
mov
arpl
and
cwtl
insb
jmp
lea
shll
adc
or
and
xchg
movsl
pop
xchg
dec
mov
negl
je
or
mov
xchg
sub
ret
mov
lret
add
mov
jo
outsl
jge
mov
roll
fists
xchg
jp
lock
mov
adc
fisttps
and
pop
fnstcw
fnsave
adc
idivb
mov
mov
and
leave
adc
cwtl
dec
mov
pop
enter
ja
dec
xchg
scas
cld
add
ror
cmp
adc
out
mov
cmpl
or
mov
addr16
int
mov
xor
or
adc
into
vsubps
add
sbb
jmp
sarb
or
pop
mov
mov
mov
loop
sub
pushf
cmp
ja
jnp
sbb
ffree
test
push
adc
dec
mov
mov
rcr
mov
aam
fs
pop
inc
imul
push
add
aas
push
pop
movsl
addr16
sub
jle
add
xchg
fadd
shll
mov
popf
gs
pop
sub
mov
inc
daa
xchg
mov
loope
mov
fidivrs
lahf
adc
shll
movsl
mov
inc
mov
push
lods
xchg
xchg
inc
out
pop
pop
mov
mov
mov
or
jns
dec
mov
jne
or
pop
enter
adc
ja
xlat
and
sub
repz
mov
jg
rorb
pop
mov
into
mov
push
popf
jg
mov
pop
inc
test
mov
push
sti
inc
or
adc
aaa
sbb
or
ja
lahf
adc
dec
lret
jne
rcr
and
es
cmp
mov
std
loop
adc
xor
dec
or
icebp
fdiv
lahf
mov
mov
sub
std
dec
add
test
mov
inc
and
xchg
jmp
mov
mov
es
push
dec
lods
dec
push
inc
cmp
scas
in
jae
mov
add
jb
xchg
rcrb
jnp
mov
shlb
out
jmp
movl
hlt
lcall
cli
clc
mov
pop
test
xchg
and
add
mov
aaa
xor
mov
sti
and
push
push
aas
cmp
leave
stos
dec
sub
gs
arpl
jmp
iret
mov
or
push
ss
xor
fidivrs
lods
dec
inc
cmp
inc
inc
subl
loop
in
rclb
xchg
daa
sub
and
mov
insl
hlt
out
xchg
and
or
jg
lds
pop
xor
dec
inc
mov
lahf
jg
or
fnstcw
pop
jge
inc
scas
ds
cmp
xchg
scas
cmp
or
xchg
popa
cmpsb
pop
and
lea
aad
mov
pop
int
mov
xchg
xchg
test
lock
test
rol
xchg
dec
cli
mov
cmp
insl
mov
pop
push
mov
cwtl
lea
pop
jae
test
and
dec
gs
leave
inc
int3
rorb
or
mov
out
jne
mov
mov
jecxz
enter
out
hlt
xrelease
inc
mov
sub
popa
lods
daa
inc
cmp
inc
inc
cmp
stos
mov
mov
nop
fisubrs
insb
adc
ljmp
xor
inc
mov
clc
out
mov
and
inc
ret
sub
mov
sub
inc
adc
dec
js
mov
or
popf
sub
add
je
jne
cmpsl
mov
ret
out
test
jno
xor
rep
nop
fwait
pusha
fdivr
xor
in
cmp
jle
or
sbb
cld
or
jae
push
popa
cmpsl
lea
xor
cmp
insl
mov
push
mov
flds
cld
stos
scas
jne
addr16
xchg
aad
add
inc
data16
aam
push
call
insb
fildll
repz
mov
xchg
jge
clc
inc
out
jg
xor
popf
xor
xchg
jle
push
mov
movsb
mov
ret
ucomiss
pushf
movsb
dec
mov
mov
cmp
pusha
mov
dec
add
repz
sbb
out
pop
mov
gs
incb
or
scas
insl
out
jp
push
je
jle
inc
adc
xlat
fisubrs
mov
sbb
repz
cs
dec
orl
mov
push
jne
sub
dec
xchg
or
icebp
xchg
fstpl
sbb
cmp
pushf
imul
repnz
lods
sbb
int3
testl
std
aas
push
pop
hlt
dec
out
cmp
adc
xor
push
mov
pop
xlat
sbb
add
xchg
aaa
xlat
adc
fisubs
pushf
mov
adc
adc
mov
mov
xchg
inc
dec
mov
fnstcw
clc
icebp
add
lea
lcall
adc
dec
nop
jne
mov
int3
test
hlt
into
movsl
outsl
mov
lea
sub
lret
xchg
pop
je
or
mov
inc
xor
push
in
repz
xor
xchg
pop
iret
out
xchg
mov
cmp
or
pop
push
fstps
mov
btc
repnz
pop
les
and
mov
jmp
sqrtps
add
insl
lock
cld
mov
lds
add
bound
pop
cmp
and
push
int
out
xchg
push
rcrl
sub
jecxz
push
sbb
movsl
fstpt
xor
stc
inc
push
inc
adc
mov
adcb
push
call
adc
add
cmp
inc
lods
lahf
ljmp
call
sbb
pop
outsl
sbb
ret
fwait
jecxz
aaa
jne
clc
and
add
jg
movsb
jmp
pop
cld
lea
shlb
pusha
in
sahf
pop
lret
pop
ss
test
repz
clc
aad
in
dec
test
pop
js
jnp
inc
mov
out
push
pop
jb
cwtl
cltd
sbb
cmp
call
iret
push
shlb
pop
stos
js
push
fistl
into
in
xchg
xchg
incl
test
jbe
es
jno
cwtl
enter
leave
cmp
pusha
data16
adc
sub
mov
pop
fidivrl
out
mov
nop
mov
lods
push
jge
ret
pop
sbbl
fucom
inc
xor
pop
or
push
sub
adc
hlt
rcrb
xor
xchg
jp
push
mov
fisubrl
and
push
fs
pusha
ss
xchg
inc
ja
push
fisttps
and
cmc
aaa
sub
mov
hlt
inc
scas
neg
xchg
xchg
pop
lock
or
xor
xchg
inc
or
ljmp
inc
out
fcomps
sub
js
jg
test
dec
pop
pop
push
je
xchg
rclb
pop
shlb
icebp
test
jns
push
jg
sbb
mov
jbe
sub
addb
mov
repz
cmp
imul
mov
push
jge
jne
add
hlt
fsub
aam
imul
jno
jne
add
jno
lock
std
add
in
movsl
sub
mov
push
pop
cmp
push
dec
cmp
mov
and
add
into
or
jb
push
cld
cmp
adc
mov
push
ss
push
mov
pop
repz
bound
cs
push
imul
cld
call
into
or
les
jns
movsb
jbe
test
push
insb
xor
inc
inc
ror
inc
imul
out
dec
insb
outsl
pusha
lods
subb
int3
dec
pop
xlat
ljmp
fndisi(8087
and
xchg
mov
and
lods
mov
aaa
lahf
fidivs
mov
push
pop
sub
push
adc
sbb
clc
dec
in
push
push
pop
add
rcrl
sub
dec
mov
xchg
xor
leave
lret
mov
pop
push
fldcw
rcr
int3
dec
and
mov
mov
lods
out
and
aad
and
add
fisttpl
xchg
test
pusha
aad
add
pop
int
popa
mov
sub
aad
mov
arpl
sub
insl
das
mov
pop
or
sub
mov
cmp
or
lods
lcall
jno
mov
imul
and
pop
aad
inc
jb
cli
incl
sbb
push
nop
mov
in
push
jl
lods
sbb
dec
movsb
xor
gs
jno
inc
sahf
dec
sub
mov
add
and
mov
inc
movl
leave
mov
rcr
add
cmp
leave
or
sub
sub
jecxz
pusha
jle
lods
mov
jo
mov
out
push
mov
aam
mov
fstpl
aam
pop
xchg
fbld
sub
lcall
add
or
cmp
movsb
data16
xchg
sbb
jle
out
and
mov
clc
push
inc
jge
ret
xor
pushf
stos
leave
mov
push
andl
es
mov
pushf
jns
jp
std
push
adc
test
in
pusha
xchg
dec
cmpb
mov
out
out
jae
lret
add
out
pop
and
std
jl
inc
jecxz
or
inc
stc
ficoms
pop
test
ret
jl
sbb
adc
popf
jge
icebp
jmp
jge
push
sub
dec
cmpsb
add
sbb
push
ss
cld
mov
mov
push
adc
fisttps
add
inc
sbb
cmp
out
out
xchg
push
into
mov
dec
in
cmc
mov
mov
lcall
stc
inc
imul
scas
sahf
fcmovb
loopne
std
outsl
dec
fidivs
jp
mov
cmp
jp
and
push
movsl
inc
inc
arpl
out
lods
xchg
xchg
xchg
and
xor
xor
fildll
pop
aad
pop
push
lock
adc
arpl
mov
movsl
lods
mov
adc
pop
pushf
and
jecxz
lret
aad
mov
dec
sub
fcmovne
adc
push
push
cmp
scas
add
mov
out
cs
xor
jmp
pop
sbb
xchg
xchg
sbb
and
push
sbb
nop
mov
adc
adcl
test
mov
inc
stos
mov
rep
xchg
pop
add
out
cmpsl
jb
ds
push
sbb
icebp
fbstp
inc
mov
cmc
mov
pop
mov
mov
out
cmp
enter
aad
or
call
cs
mov
xor
sbb
imul
dec
fstpt
movsl
add
pop
mov
repz
stc
dec
clc
repnz
ror
test
pop
sbb
lods
popf
jecxz
cmp
sub
jae
scas
xlat
hlt
stc
inc
and
jp,pt
imulb
mov
divb
gs
pop
nop
fwait
arpl
sub
push
and
sbb
or
nop
sub
gs
xchg
cld
inc
jg
pop
pop
xor
mov
inc
pop
cmp
mov
sub
iret
divb
xor
sahf
and
pop
je
inc
ret
sti
jl
or
jnp
cmpsb
cltd
pmaxsw
lahf
shl
gs
mov
pop
lock
push
cvtps2pd
test
orl
mov
mov
mov
push
cld
inc
in
insl
out
std
pop
js
push
outsb
emms
adc
js
jbe
inc
sbb
dec
mov
xchg
jmp
dec
test
gs
ret
mov
or
sti
pop
pop
ror
add
pop
mov
mov
loope
scas
out
adc
fnstsw
jmp
ffreep
enter
mov
std
xchg
mov
xor
aas
jne
orb
shll
imul
mov
mulb
push
into
stos
cmp
xor
js
xchg
outsb
add
ja
dec
xchg
and
inc
push
lods
jno
and
movsb
dec
int3
in
pop
in
jb
pop
cs
cli
insl
je
push
or
jp
les
sti
push
stos
sti
inc
push
popl
mov
popa
cmp
or
push
ss
ja
stc
movsl
sbb
pop
mov
inc
cld
dec
jo
adc
or
lock
loop
popf
add
iret
inc
movsl
rcl
sahf
push
js
in
cmpl
mov
lret
arpl
std
mov
mov
adc
or
dec
sub
pop
movsb
fwait
iret
dec
mov
mov
loop
shlb
subb
pop
add
ljmp
sub
mov
out
clc
js
pop
mov
pop
scas
filds
jle
mov
dec
inc
mov
xchg
fwait
int3
loopne
test
xchg
mov
rorb
jp
out
xlat
dec
jl
shrb
cmc
mov
dec
and
push
mov
hlt
add
stos
sbb
stos
adc
lock
sub
repz
xor
jle
cmp
mulb
jno
jbe
ret
add
xor
push
lds
push
push
push
shl
pop
cmp
xchg
das
add
cmpl
ffree
out
jp
xchg
ss
test
lds
mov
out
push
xor
fldl
shlb
pop
test
jb
ret
cmp
in
cs
mov
or
push
das
leave
adc
adc
jmp
push
push
xor
or
in
pop
loopne
iret
shrb
xor
outsl
inc
stc
jmp
out
iret
jbe
adc
cmpsl
hlt
shlb
int
dec
lcall
mov
lea
push
popf
out
xor
jl
fistpll
loope
in
testl
or
and
pusha
dec
xor
mov
inc
daa
xchg
jns
add
aam
add
cmp
cli
push
hlt
lahf
sub
fcoms
jmp
dec
and
jbe
mov
push
sahf
scas
jns
adc
loope
movsl
xchg
data16
pop
sbb
pop
fcmovb
cwtl
sahf
es
cmpsl
xor
push
int3
call
pop
mov
dec
xchg
inc
dec
aam
jl
orl
mov
fnsave
sti
sbb
jne
push
in
stos
mov
push
stc
pusha
insl
mov
shrl
cmp
test
push
scas
lock
lods
cmp
or
insl
jl
mov
loop
ljmp
lock
mov
or
fsubl
out
movsb
in
pop
imul
xchg
mov
out
fildl
mov
cmp
push
pop
test
into
bound
adc
shrl
ds
rorb
lret
les
loop
add
scas
shrl
stc
dec
mov
inc
leave
mov
loope
dec
pop
cmp
ds
add
pop
es
jg
aaa
mov
jb
nop
sbb
sub
xor
mov
mov
scas
into
stos
fidivs
xchg
rcrl
mov
test
jmp
lea
cmp
test
scas
xchg
jg
xor
pop
fs
xlat
pop
cmpsl
cmp
xchg
pop
pop
mov
es
iret
xlat
roll
arpl
testb
fwait
cs
pushf
mov
divb
dec
out
adc
enter
push
sahf
pop
push
pop
push
mov
loope
movsl
lock
mov
mov
movsl
adc
push
fadds
lods
sbb
pop
or
push
outsb
bound
xchg
sbb
pop
into
lods
mov
lahf
xor
insl
sub
pusha
addr16
loop
outsb
push
xchg
lret
mov
sbbb
add
xchg
out
shlb
stos
aaa
in
mov
cmp
stos
jnp
mov
loope
cli
cli
cmp
adc
pop
leave
leave
je
and
xchg
xor
lock
push
cs
push
mov
jg
stc
insb
pushf
mov
in
pop
fsubp
das
add
push
popa
hlt
sub
fistl
bound
sahf
imul
negl
cmc
inc
std
jge
insl
mov
lcall
out
mov
popf
push
enter
xor
push
jecxz
ror
push
ds
cmpxchg
adc
mov
sbb
test
add
ja
es
pop
out
pop
push
inc
outsb
roll
leave
ljmp
sbbl
xchg
cmp
xchg
cmp
hlt
sbb
pop
inc
push
xchg
dec
cli
out
push
or
mov
mov
sub
test
aad
sbb
shll
push
xor
lahf
sub
ds
cld
xor
xorl
fwait
xchg
iret
repnz
sbb
mov
inc
subl
aas
or
jg
lcall
call
jns
jno
or
pop
sub
push
imul
jle,pt
loopne
aam
jnp
dec
andb
ret
lods
lea
xchg
daa
xlat
jg
pop
cld
ja
test
arpl
aam
mov
push
cmp
xchg
push
ret
pop
in
bnd
fs
leave
mov
mov
mov
xchg
xor
and
cmp
cld
cli
sbb
sarl
lret
dec
push
stc
mov
push
dec
inc
lods
ror
mov
sbb
test
aas
movsl
pop
and
push
fwait
mov
add
fs
movsb
lods
in
mov
cmp
pop
or
mov
and
test
in
push
je
mov
sub
insl
sbb
mov
js
pop
aam
out
mov
out
inc
cmp
jecxz
imul
dec
divl
pop
mov
pop
lret
fisubl
pushl
sbb
hlt
cmpsb
cltd
push
and
loopne
dec
nop
movsl
or
pop
mov
pop
das
jbe
pop
cmp
mov
dec
jmp
loope
stos
jmp
cmpsl
inc
lret
scas
out
inc
mov
dec
hlt
jecxz
shl
or
jp
in
xchg
inc
pop
loope
jl
add
xlat
dec
sub
dec
push
jg
call
pop
outsb
xchg
xchg
test
ret
mov
cmp
inc
fnstsw
adc
mov
aas
fs
add
jae
test
mov
enter
inc
adc
pop
fisttpl
cmp
negb
adc
fcmovnb
jl
or
xor
ja
data16
or
int3
sbb
in
mov
sbb
xchg
mov
dec
fnstsw
popa
pop
sbb
xor
gs
xchg
aas
hlt
out
dec
into
cli
lds
js
mov
xor
popa
fwait
cmp
inc
arpl
adc
mov
xor
or
call
fs
fs
stos
arpl
js
mov
fs
mov
mov
jae
mov
xor
mov
es
aam
adc
inc
ja
lea
jbe
mov
scas
std
clc
jl
jb
mov
pushf
fdiv
out
pop
movsb
int3
ss
cs
inc
jae
ds
add
or
fmuls
rcll
sbb
cmp
cld
xlat
xorl
bound
test
in
int
push
or
fldt
lret
sbb
repz
testl
out
and
nop
mov
pop
add
or
and
rorb
xlat
mov
add
scas
sub
mov
sbb
inc
int
add
imul
jno
sbb
push
es
push
insl
pop
movsl
bound
dec
jg
cli
js
xchg
sti
or
and
fcmove
mov
ret
xchg
mov
pop
push
mov
les
dec
or
rol
loopne
pop
std
mov
cmpsb
adc
add
mov
shrb
jne
jp
jmp
xor
sub
enter
clc
test
inc
filds
mov
out
mov
xor
mov
xchg
stos
cmp
ja
scas
jp
sub
push
or
dec
push
jcxz
fucomi
dec
test
mov
jae
test
sbb
add
enter
sub
pop
pop
xor
iret
cmpsb
je
incl
addr16
notl
adc
incb
xchg
pop
push
or
insl
adc
xchg
and
or
rorl
scas
push
hlt
call
into
fs
sub
xchg
push
ljmp
cwtl
popa
adc
call
pop
in
mov
add
mov
or
push
orl
pop
daa
lret
sub
call
bound
inc
pop
stc
jge
js
mov
cmc
pop
push
enter
ret
jmp
filds
ret
mov
cmpsl
imul
xchg
mov
mov
cmp
inc
int3
inc
call
and
imul
loop
pusha
cli
je
xchg
mov
lea
pushf
mov
pushf
test
mov
jmp
cli
sbb
lock
aam
cmpl
aam
mov
ret
in
xchg
jge
xchg
popa
inc
cwtl
mov
mov
lea
in
aas
testb
sub
adc
stc
inc
dec
jmp
stos
xor
dec
mov
call
xor
scas
mov
xor
shll
inc
jl
cmpsb
popa
faddl
jno
pop
cli
xchg
ret
jl
aam
xchg
jnp
xchg
push
fwait
loope
lods
cmpl
sbb
repnz
daa
icebp
std
xlat
or
xor
xchg
popf
test
aam
sbb
movsl
das
cwtl
imul
cmp
adc
jle
xchg
cs
xor
daa
push
loope
gs
pop
sarl
aam
fldl2e
aas
dec
push
push
paddd
repz
mov
mov
std
mov
jmp
dec
mov
into
push
cs
shrl
mov
in
jmp
xchg
clc
fsts
mov
pop
popa
fiadds
dec
gs
pushf
mov
xchg
mov
in
mov
ljmp
mov
cmpsb
push
cmp
mov
out
data16
test
leave
repz
dec
lret
sub
scas
xchg
repnz
roll
dec
stc
insl
lea
lret
mov
xchg
or
pop
arpl
mov
push
xor
lahf
adc
xchg
aas
lret
push
xchg
fs
xchg
or
add
add
sbbl
push
out
lods
mov
lods
sub
ds
pop
bound
xor
out
daa
orl
sahf
popf
pusha
sbb
inc
or
dec
ret
fdivrl
negb
sub
push
add
mov
rorl
xor
loope
xor
in
scas
sarl
add
data16
add
push
imull
icebp
out
daa
mov
stos
pop
jl
sub
addl
rcrl
xchg
mov
xor
mov
pop
movsb
jecxz
add
add
sbb
pop
outsl
stos
int
out
sub
std
insb
mov
mov
add
int3
and
inc
rolb
jb
jp
stos
das
into
xlat
aaa
out
arpl
cltd
loope
cmp
push
cmp
mov
sbb
cmp
jo
or
in
stos
add
mov
mov
out
clc
sub
jecxz
jl
adc
mov
push
jno
loop
lods
es
out
sub
fdivrs
sbb
dec
lret
aam
es
loopne
ja
fstpt
cli
test
or
sbb
xor
jbe
cmpsl
dec
gs
test
fsubp
pop
lret
sahf
fadd
mov
and
jmp
fst
outsl
lds
mov
mov
mov
adc
add
insl
adc
lcall
test
jne
loop
mov
lcall
aam
inc
dec
ljmp
cwtl
fcoml
push
pop
xchg
sub
xchg
mov
mov
mov
or
addr16
stos
sbb
clc
out
aad
cltd
push
sub
push
fs
sub
cmp
push
and
mov
or
int3
pop
inc
das
mov
jns
sarb
fwait
adc
fdivrs
call
aaa
loop
outsl
sub
jns
and
mov
nop
jae
leave
test
sub
sub
pop
movsl
lcall
or
mov
or
rolb
or
mov
pop
and
or
or
movl
dec
fstpl
into
in
int
fisubrs
dec
outsb
movsb
adc
add
stc
leave
push
jae
in
das
and
and
pop
test
imul
mov
jecxz
jno
sti
dec
pop
decb
shrb
insb
imul
push
rolb
cmp
jno
hlt
loopne
inc
mov
xchg
jbe
cld
data16
push
xlat
icebp
jle
push
loopne
aas
in
hlt
mov
fisubrl
dec
pop
mov
mov
aas
sbb
cmp
into
psubsb
fadds
and
insb
and
or
adc
jns
lock
insl
aas
and
call
mov
popa
inc
adc
sub
mov
push
scas
fidivl
jle
adc
jl
pop
mov
sub
loope
mov
test
dec
jbe
jns
rcrl
out
ret
sbb
out
cmpsl
lea
out
cmp
dec
xchg
outsl
push
add
mov
enter
mov
hlt
sarl
or
and
test
xchg
adc
inc
lds
outsb
ret
dec
movsl
jne
cmc
cmpsb
dec
gs
sub
int3
sarl
xlat
pop
push
inc
divl
ja
and
inc
push
into
adc
fists
repnz
pop
aad
shl
adc
testl
mov
inc
movsl
fnstcw
bound
ret
dec
adc
fists
xlat
mov
popa
xchg
loopne
shrd
push
daa
scas
inc
mov
int3
sti
ljmp
not
negb
aam
add
pop
mov
aam
in
xchg
inc
mov
call
cmp
mov
pop
cmp
lahf
test
mov
loopne
repz
and
decl
or
imull
test
shll
sarb
into
mov
push
mov
mov
gs
addr16
xchg
testl
emms
jge
addr16
leave
push
mov
fwait
loope
cmp
xchg
and
pop
rcll
sub
lret
test
jnp
push
int
cli
loope
nop
or
jmp
lcall
mov
div
cltd
hlt
sti
xchg
xor
aam
mov
sbb
loopne
and
lea
pop
out
and
shrb
jmp
ja
push
mov
rolb
imul
out
push
inc
jne
add
pop
jp
jae
mov
mov
xor
jns
ret
mov
jbe
addr16
xor
mov
sub
mov
push
iret
repz
repnz
dec
repz
or
mov
aas
xchg
mov
rcl
jmp
sbb
test
test
push
les
inc
enter
pop
scas
xchg
xchg
decb
nop
sbb
jo
cld
sar
lods
xor
sbb
mov
cli
fsubrl
jo
lret
push
in
cs
fcmovnu
sbb
lret
cmp
mov
std
out
ror
rorb
mov
mov
dec
and
jo
jge
sub
add
out
ror
aaa
xchg
and
sbb
test
push
add
inc
sub
ljmp
adcb
mov
add
sbb
inc
pop
mov
es
data16
dec
imul
mov
sub
lds
dec
inc
test
lods
mov
xchg
sbbb
mov
jl
mov
mov
leave
jnp
movsl
je
adc
loopw
push
push
xor
mov
movsl
mov
addb
adc
jb
pop
xor
nop
xchg
cwtl
xor
adc
cmpsl
jg
xchg
dec
xor
bound
xchg
jp
insl
sub
je
out
cmc
jg
stos
fwait
push
mov
add
rorb
lods
jno
shrb
push
lahf
xor
mov
mov
lods
jnp
insl
movsl
shlb
imul
inc
test
pop
jle
pop
cmc
imul
xchg
inc
cmpsb
shld
jae
insb
push
ja
shlb
cmpsl
jle
aaa
push
bound
inc
sbb
add
rcrb
std
scas
cwtl
xchg
popf
sbb
and
into
or
mov
out
imul
add
subl
and
cmp
out
push
bound
push
xorb
aad
adc
lock
inc
jnp
popa
xlat
mov
fldcw
ljmp
inc
test
in
cmpsl
xchg
ljmp
cmc
adc
es
add
or
lock
daa
push
xchg
sub
adc
or
or
dec
mov
pop
insb
jb
sbb
ret
jecxz
fsubr
and
add
fidivs
cwtl
push
mov
add
cwtl
dec
cmp
arpl
sbb
repnz
ret
sbb
or
jle
imul
pop
xchg
mov
icebp
jno
jl
outsl
divb
cmp
adc
or
outsb
out
aad
test
test
leave
cli
out
into
push
and
mov
mov
dec
mov
cs
rcl
dec
jnp
xchg
jmp
inc
inc
test
in
scas
push
dec
in
add
sbb
dec
and
andb
enter
icebp
leave
sbb
stos
cmovl
outsl
std
mov
inc
inc
dec
stos
xor
cltd
movsb
cmp
lods
mov
test
sub
ficoms
mov
pop
fists
jg
shll
sbb
aam
jae
jl
fisttpll
ret
lret
mov
filds
mov
sbb
cmpsl
cmp
int3
aas
ficoml
cs
sub
push
adc
or
sbb
xchg
push
stc
cmpsb
fmull
cmp
mov
les
pop
dec
pop
sbb
cli
loopne
mov
jo
push
imul
ja
ss
out
scas
sbb
push
mov
lods
inc
nop
dec
mov
cmp
js
sub
stos
cmc
daa
mov
mov
sarl
out
inc
sahf
adc
jg
mov
pop
sub
xchg
mov
repnz
pop
repz
or
cltd
stos
mov
imul
das
inc
push
rorb
jno
push
subl
sub
stos
out
lcall
lahf
sub
xor
not
jge
into
mov
enter
jne
push
push
es
ljmp
cmp
add
imul
mov
jp
mov
js
mov
push
xlat
xor
mov
xchg
stos
addr16
ds
xor
in
lods
lock
insl
dec
aam
jb
cli
pop
iret
repz
mov
stc
leave
mov
jb
cmp
int3
pushf
cld
scas
adc
lock
dec
iret
imul
ja
add
add
hlt
mov
adc
roll
js
fldt
lcall
cltd
mov
mov
movsb
out
adc
pop
pop
shll
cmp
outsl
pop
jge
cmp
ja
arpl
mov
cmpsb
mov
mov
cmpsb
xor
sbb
mov
pop
imul
adc
orb
pop
mov
add
lret
cld
ss
stc
icebp
cmpsb
and
jp
inc
lds
sub
sbb
mov
fsts
es
pop
clc
pop
xchg
or
cwtl
jnp
jmp
pop
mov
sbb
scas
fldt
ffreep
xor
push
popf
sbb
mov
call
add
adcb
pop
adc
push
cmc
stos
sub
pusha
jecxz
test
sub
hlt
pop
insb
cwtl
ds
or
ja
push
or
inc
adc
dec
push
and
in
jnp
popf
mov
test
jb
loope
fidivrs
inc
cli
xor
mov
jg
add
pusha
mov
pop
fcoml
sahf
mov
ljmp
adc
faddl
decb
jle
gs
cli
jmp
add
shll
inc
push
xor
sti
mov
add
mov
adc
aaa
pop
fcoml
dec
mov
bnd
cmpsl
out
xchg
sub
aaa
rclb
add
js
mov
push
cmpsl
cmc
mov
fsub
ret
mov
mul
clc
arpl
push
repnz
jge
push
adc
push
dec
adc
and
fdivl
push
in
sbb
fcmovbe
jle
mov
ret
add
mov
ret
in
imull
cwtl
in
std
or
btr
mov
test
xchg
and
rcl
rol
pop
sbb
out
mov
mov
dec
mov
hlt
cmpsl
push
inc
in
cmpsb
lret
adc
sub
shrb
dec
pop
stos
sbb
dec
inc
push
mov
mov
fwait
cs
mov
mov
sub
stos
in
jl
jae
inc
and
cmp
inc
xlat
dec
xchg
repz
xchg
dec
in
js
xchg
outsb
lcall
xor
aas
notb
stos
scas
cli
mov
test
lret
jge
mov
outsb
ds
nop
scas
push
sbb
sub
and
push
cmp
movsb
test
cmp
pop
jnp
jo
sbb
les
mov
fisubrs
inc
or
ja
insb
sub
test
fmull
ret
xor
bound
lret
cmp
push
push
cmpsb
aam
iret
pop
push
das
or
lock
adc
scas
lret
in
in
jae
cmp
adc
mov
inc
or
dec
mov
mov
mov
jb
mov
loop
repz
cltd
sub
out
int3
cmpsb
push
sub
arpl
xor
out
push
popa
lods
inc
in
xchg
mov
cld
arpl
testb
out
cld
movsb
mov
mov
leave
jmp
add
ss
dec
and
cmp
ja
faddl
or
adc
mul
pusha
mov
jg
popf
int
je,pt
or
add
iret
sbb
rcrl
lea
jmp
subb
lcall
mov
lret
loop
pop
je
imul
jne
rcl
aad
pop
movsl
and
xchg
pop
std
stos
or
and
xchg
jne
lahf
inc
test
imul
insl
mov
xorb
sub
notl
cmp
sub
or
scas
clc
mov
mov
test
push
pop
pop
roll
arpl
ss
dec
popf
ficoms
xchg
sub
aam
add
dec
out
cmp
sub
add
scas
ljmp
push
je
xchg
arpl
xor
test
icebp
and
je
mov
xlat
ret
ret
pop
test
cmp
test
pop
stos
add
bound
js
sti
rcrl
bound
sub
jb
iret
cmpsl
xchg
fcoml
dec
xchg
adcb
insl
mov
outsl
pop
lea
xor
inc
or
inc
inc
or
popa
sub
add
leave
dec
cld
mov
cmp
mov
xchg
aam
into
pop
insl
mov
pop
outsl
xor
cwtl
addr16
inc
mov
lods
mov
jge
shrb
sbb
mov
cwtl
xor
scas
jecxz
jno
and
adc
js
push
or
add
fdivrl
xor
cmp
cs
and
and
mov
mov
xor
mov
pop
pop
mov
repnz
fwait
push
xor
and
imul
jae
pop
or
xchg
dec
mov
mov
mov
movsl
addr16
cltd
mov
fcomps
shl
jl
mov
lods
or
mov
xlat
repnz
sbb
lret
xor
cmp
es
dec
ret
daa
ja
lods
lret
xor
adc
add
and
and
push
mov
bound
repz
ljmp
inc
push
movb
sahf
out
adc
repnz
xchg
mov
pop
sub
ret
pop
and
hlt
and
out
insl
inc
jp
jo
xchg
cmpsb
xchg
mov
pop
dec
sbb
ljmp
es
xor
add
inc
out
aaa
xor
inc
fisubrl
packsswb
shrb
loop
aas
add
xchg
mov
mov
ljmp
imul
popf
mov
or
inc
inc
adc
push
mov
xchg
and
and
or
clc
popa
add
push
jbe
cmp
dec
mov
aas
lock
hlt
sub
std
lret
or
add
jns
cld
ljmp
shll
and
jg
push
sub
fsubl
pop
sub
lods
inc
sbb
xchg
sahf
movsb
push
or
mov
mov
fildl
cmp
pop
xchg
push
lea
mov
jecxz
roll
xchg
or
add
inc
lock
leave
mov
or
icebp
ljmp
dec
sbb
adc
lret
mov
clc
sub
in
lcall
jae
out
iret
in
dec
jecxz
sub
fisttpl
xor
jle
cmc
xchg
sbb
cmpsb
fsubl
call
test
fwait
cmp
pop
in
int3
mov
lods
mov
jecxz
subl
insb
inc
lods
fidivrl
inc
insb
cmp
clc
aam
sub
clc
mov
lds
or
popa
lahf
lcall
mov
ficompl
or
lcall
bound
fcomps
push
cmp
fimull
out
lcall
add
cmp
xchg
cmp
or
in
into
das
or
fldpi
ljmp
cmpsl
loope
sbb
out
mov
roll
and
ss
das
dec
js
or
rcr
in
std
mov
rolb
cli
mov
jae
adcb
add
punpckhdq
sub
sub
dec
dec
adc
adc
cwtl
mov
aad
inc
jno
aas
dec
into
sub
cmp
pushf
sub
std
adc
dec
jbe
popa
ljmp
mov
lret
imul
add
mov
fwait
imul
jnp
cmp
mov
fisttpll
jo
sar
rcrb
cwtl
pushf
xor
pop
lahf
test
loopne
adc
addb
mull
outsl
jmp
sbb
aad
icebp
mov
xor
jecxz
pop
insb
repnz
cs
ret
inc
movsl
dec
cltd
cmpsb
mov
sbb
lds
lock
xor
mov
or
jae
xchg
stos
push
out
lds
cli
jp
cmc
jbe
or
hlt
orl
add
dec
push
arpl
jg
xchg
cmp
or
es
pop
inc
mov
mull
jne
rorb
pop
aam
sbb
in
and
decb
bound
cs
and
fstpt
xor
push
pop
fsubrs
and
loopne
or
xor
pop
jg
scas
add
jo
roll
out
lock
stc
mov
mov
shl
sbb
fisubrl
cwtl
sbb
int3
mov
dec
fwait
test
fcmove
push
std
adc
cmc
daa
fdivrs
cs
pushf
dec
or
pusha
mov
sarb
iret
into
push
daa
fnsave
icebp
ficoml
fsubp
and
xchg
sbbl
pop
sbb
ja
inc
push
push
sub
add
fidivrs
xor
mov
popf
push
clc
andl
leave
ret
lret
inc
stos
orl
and
inc
adc
lcall
and
sub
mov
xchg
jbe
test
ret
and
hlt
cmpb
aad
jnp
inc
aad
xchg
stos
mov
cwtl
add
dec
ljmp
or
sub
mov
mov
fwait
shrl
dec
push
mov
stc
out
rorl
xchg
gs
testb
sbbb
cmpsl
pop
fdivr
push
pop
mov
jge
push
xchg
mov
or
push
mov
in
push
pop
mov
jp
gs
out
and
jb
mov
movsl
xor
out
mov
mov
xchg
cli
jb
lods
cwtl
ficompl
xchg
outsb
or
or
xor
mov
popa
stos
stc
and
bound
add
stos
sub
mov
sub
bound
mov
xor
mov
outsb
ret
mov
mov
xchg
mov
rcll
shrl
stc
mov
jnp
cs
xchg
je
ret
test
je
jb
ss
rcrl
or
shl
push
shll
aaa
cwtl
mov
push
pop
add
int3
mov
shll
push
sbb
pop
xchg
outsb
jbe
ret
mov
sub
adc
cs
ss
roll
bound
inc
jmp
add
sahf
aam
or
cs
dec
clc
inc
xchg
adc
mov
or
ja
addr16
loope
jle
fcoml
lret
xchg
cmp
and
lahf
jne
fimuls
mov
mov
insb
mov
test
pop
xchg
ds
dec
mov
and
adc
hlt
inc
sub
push
in
pop
cmp
in
inc
and
inc
adc
push
inc
mov
mov
push
mov
shll
pushf
cld
mov
add
in
fucomi
repz
bswap
lea
mov
jnp
sub
xchg
push
mov
stc
ret
rorb
mov
mov
js
sub
or
mov
mov
movl
adc
xor
dec
cmp
sbb
into
add
push
icebp
mov
fucomi
lods
push
clc
out
dec
cwtl
and
mov
imul
shll
mov
sbb
sti
adc
scas
sub
negl
pop
scas
push
dec
cli
je
inc
out
popa
add
cmp
enter
mov
scas
push
ljmp
jne
hlt
pop
out
outsb
scas
insb
cs
cmp
fsub
in
add
cltd
orl
jge
pop
dec
cltd
inc
scas
pop
test
aam
jae
sti
sub
movsl
test
jmp
fincstp
clc
push
xorl
add
pushf
into
mov
inc
pop
aad
inc
mov
xor
cltd
les
xchg
in
dec
out
stc
xor
mov
in
mov
ret
mov
fidivrs
mov
into
push
out
into
mov
jo
arpl
xchg
shll
imul
jl
push
push
push
inc
or
stos
add
push
xor
push
add
xlat
outsb
outsb
mov
cmpsl
movl
inc
add
xchg
cmp
enter
jmp
int3
sti
pop
add
adc
xlat
pop
daa
cmp
fcompl
pop
push
adc
mov
cmpsl
shrl
mov
add
xor
stos
dec
dec
clc
mov
fxtract
mov
xchg
sub
loop
mov
lods
and
leave
push
pop
fisubs
dec
loopne
mov
cmpsl
add
aas
fistps
or
mov
js
out
repnz
out
das
in
inc
dec
mov
stos
or
mov
negb
inc
cltd
icebp
lret
and
cmpsl
rolb
mov
je
mov
fildl
pop
dec
and
movups
sbb
add
in
jb,pt
test
sub
les
mov
jl
clc
mov
adc
loope
jae
push
ja
lds
jns
shlb
mov
add
inc
andb
cmp
cmp
pop
aas
sar
je
test
xchg
xchg
iret
push
decb
xchg
cmp
cmp
imul
mov
popf
inc
sar
jle
nop
pop
mov
sbb
and
leave
mov
jno
sbb
pusha
data16
jge
lcall
jge
addr16
xchg
outsl
mov
xchg
sbb
repz
push
jne
lret
rorl
dec
fdivrl
aas
xor
adc
rcr
in
sarl
adc
popa
gs
lahf
dec
insb
mov
mov
and
xor
aaa
add
ss
fldcw
sub
pop
mov
and
xchg
lods
sar
adc
shl
test
in
xchg
xchg
aas
ja
lahf
cmp
out
cmp
adc
lahf
xchg
xlat
adc
addb
ret
add
xchg
xor
imul
popf
sbb
xor
mov
data16
push
loopne
ljmp
outsl
xor
scas
shll
fwait
rcl
lcall
xor
xchg
jo
nop
adc
jl
mov
jns
shll
js
xchg
cmp
pop
enter
daa
ret
push
lods
je
sbbb
jmp
pushl
out
mov
icebp
mov
or
repnz
outsb
sbb
stos
mov
add
mov
and
test
sbb
adc
cmp
jp
push
insl
loopne
jle
xchg
jecxz
add
loope
shll
inc
and
mov
xor
dec
fcomip
dec
and
arpl
cmpsl
inc
xchg
sbb
mov
push
test
push
sub
jg
inc
dec
cmp
sbb
dec
iret
sbb
add
push
xlat
jb
adc
loopne
andb
loopne
dec
dec
fcomps
mov
pusha
lods
inc
jecxz
cltd
adc
int
rcr
data16
mov
jl
pop
aaa
repnz
js
insl
shlb
xchg
lret
adc
sbb
and
xor
aad
xchg
cmp
jo
inc
mov
adc
movsl
dec
cmp
inc
orl
xchg
les
and
mov
ror
ss
cmc
adc
xor
bound
mov
sub
rcll
add
cmp
mov
push
lahf
lea
sbb
div
shlb
dec
fwait
out
mov
or
mov
xor
mov
and
jno
dec
dec
sarb
xchg
pop
or
sbb
imul
xor
test
or
sbb
xor
sbb
roll
xchg
xchg
jo
mov
and
rclb
test
cs
lods
sbb
repz
pop
pusha
iret
sarl
push
xor
mov
mov
aad
adc
xchg
adc
movsl
xor
mov
or
addr16
sbb
daa
test
std
frstor
mov
scas
push
add
sbb
es
mov
repz
cmp
nop
and
mov
mov
and
jecxz
ds
mov
les
sar
jnp
stos
lcall
clc
inc
fdivrp
loopne
mov
movsl
pop
or
stos
jne
lods
je
cmp
xchg
lock
adc
mov
enter
and
or
xchg
adcb
insb
jbe
pop
in
adc
rorb
rol
sub
pop
shl
sbb
or
pop
jae
jno
and
xchg
out
mov
mov
add
cmpsl
cwtl
cld
push
jnp
mov
inc
ret
cmp
movsl
lcall
pop
cmpsb
sub
mov
cwtl
add
push
push
or
mov
test
sbb
cwtl
ret
imul
fmuls
mov
movsl
mov
lds
cld
inc
dec
inc
xor
xor
dec
aam
sbb
fldcw
movsb
aad
inc
cmp
out
mov
lods
xchg
out
adc
pushf
fdivs
fcoml
ja
mov
mov
push
outsb
mov
movsb
xor
out
leave
dec
push
pop
test
mov
fiaddl
faddp
addl
mov
and
dec
cmpsb
rep
je
pop
test
pop
xchg
movsb
es
xchg
sbb
movsb
shrl
fistl
sbb
jnp
fidivl
and
jp
jns
test
push
iret
icebp
xchg
or
or
sub
sub
add
stos
cmp
imul
popf
push
mov
pop
fidivs
orl
idiv
fisubrs
dec
scas
std
aaa
nop
sub
icebp
dec
fildl
or
push
adc
fwait
xor
cwtl
ds
pop
push
jnp
push
mov
dec
mov
cmc
pusha
pop
xchg
aad
xlat
pop
xor
in
jnp
aam
arpl
jl
pop
arpl
dec
sti
adc
dec
in
js
addb
outsb
fwait
sbb
adc
addr16
mov
test
inc
lods
lahf
or
loope
pop
adc
pop
sar
pop
insl
out
dec
mov
xchg
inc
mov
or
nop
jnp
sub
pop
movsb
jae
cmpsb
aad
ret
je
cmp
pop
mov
jnp
shll
mov
rcrb
and
xor
push
xchg
mov
cs
inc
xor
stc
inc
sbb
add
ds
inc
mov
pushf
popa
push
ja
mov
pusha
cld
out
mov
cmp
inc
adc
or
pop
adc
add
iret
rclb
xor
data16
fmul
movsl
fs
xchg
sarl
movsl
mov
imul
mov
test
mov
adc
or
cmpsb
sbb
inc
cmp
sbb
dec
or
fmul
adc
add
jb
xor
loopne
mov
mov
pop
aad
movsb
pop
in
addr16
xor
sbb
mov
cmp
adc
cmp
pop
xchg
shll
mov
clc
sub
or
mov
sub
ror
in
fstl
insl
sbb
mov
test
imul
inc
stos
int3
cmpsl
loope
mov
sbb
mov
add
das
scas
scas
inc
pop
inc
lcall
xorb
mov
out
lods
mov
push
push
mov
push
aam
aaa
adc
lret
dec
int3
cmc
popa
inc
jecxz
pop
arpl
fisttpl
aam
mov
scas
or
jg
js
in
push
rcl
scas
sbb
in
shrl
data16
cli
js
xchg
cmp
xchg
ds
or
cmc
mov
inc
or
out
lret
fidivrs
dec
pop
stos
in
push
sub
push
imul
pop
inc
pusha
mov
incb
shrl
dec
mov
scas
sub
and
push
mov
das
loop
ds
movl
cs
jle
leave
sub
scas
call
mov
adcb
mov
popa
or
ret
in
fistl
gs
test
adc
sbb
mov
sbb
test
adc
test
std
mov
mov
inc
mov
sbb
mov
or
imul
out
les
xor
dec
xchg
sbb
icebp
mov
loop
ds
mov
scas
sbb
pop
daa
xchg
add
xor
rcll
xchg
pop
xchg
int3
xchg
in
fcomps
scas
iret
icebp
pop
add
out
pusha
sarb
out
push
pop
push
cmp
enter
xchg
mov
nop
or
movsl
sbb
sbb
mov
test
jle
inc
lock
pop
in
jmp
insb
cmp
or
jle
fdiv
loope
mov
ja
cltd
bound
imul
stos
cmc
pop
cld
scas
mov
loope
adc
cmp
mov
lahf
std
arpl
cmpl
lahf
push
outsb
out
xchg
mov
arpl
mov
sbb
movsl
sub
in
pop
lret
mov
lcall
mov
popa
inc
xchg
mov
sub
xchg
and
xchg
sub
cmp
add
and
or
sbb
imulb
xchg
inc
int
cli
mov
into
into
pop
cmc
and
adc
cmp
or
sbb
push
pop
add
cwtl
fmul
ja
mov
mov
iret
or
jp
mov
js
cli
ror
jp
aas
sbbb
clc
xor
adc
and
scas
je
mov
mov
jl
test
call
xor
out
jbe
xor
cli
jmp
pusha
movsl
pop
jno
sti
xlat
inc
cli
sub
mov
fistl
movsl
in
cld
out
mov
xchg
sbb
test
add
sarb
pop
bound
js
mulb
fucom
jno
push
adc
jg
mov
sub
push
push
test
scas
iret
and
add
mov
mov
cltd
fists
es
shll
or
icebp
orb
mov
insb
inc
lret
cmp
je
inc
push
leave
mov
fwait
dec
sbb
fwait
mov
jg
imul
andb
call
pop
out
sti
into
lea
pop
cmpsb
loop
sbbb
lea
sub
xor
sub
jl
pop
jb
mov
inc
frstor
sti
jle
xchg
shrb
mov
test
sub
and
in
arpl
je
pop
pop
ds
scas
pusha
pop
sbb
pop
mov
mov
mov
insl
dec
mov
ja
rcrl
sbb
jmp
mov
fmull
in
sub
mov
sbb
xorb
mov
int3
and
repz
mov
and
adc
loopne
insb
aaa
sti
ja
bound
or
mov
nop
das
mov
mov
xor
rcrl
mov
fimuls
mov
push
sub
test
ja,pn
inc
shld
pop
std
xchg
add
and
std
std
inc
ret
pusha
xorb
pop
push
repnz
pop
add
cli
jl
xchg
pop
pop
mov
and
cmp
mov
mov
mov
inc
nop
lahf
orl
test
mov
or
inc
js
vmaxps
stos
scas
sub
shlb
daa
mov
jns
ret
test
rcl
out
lret
hlt
repnz
and
movsl
mov
or
mov
inc
mov
lods
nop
fsts
pop
dec
pop
push
outsl
aas
stos
xchg
add
mov
sbb
sub
aas
sub
add
les
inc
dec
lahf
ret
sbb
lea
pushf
mov
and
sahf
pop
fs
ljmp
push
fiaddl
sbb
mov
test
mov
inc
cmpsl
jmp
jnp
pop
jle
divb
roll
lcall
mov
push
bnd
out
dec
in
push
jg
cmpsb
mov
sub
add
stos
cli
xor
dec
addr16
xchg
hlt
mov
push
mov
pop
and
into
sub
mov
lea
pop
inc
or
mov
add
clc
imul
lods
cli
or
and
fsubl
gs
jmp
or
xor
mov
es
lcall
inc
jb
pusha
std
cli
enter
mov
repz
xchg
and
stos
xchg
cmp
xor
add
in
mov
dec
mov
sti
cmp
adc
mov
loopne
movsb
mov
xchg
mul
push
push
sub
push
inc
push
pop
lea
cltd
xor
sub
ss
fs
int3
out
and
repnz
je
pop
call
sub
das
push
lret
dec
pop
mov
icebp
inc
sti
ja
jle
in
rorl
ror
in
jns
push
mov
xchg
movsb
and
xlat
test
stos
into
gs
out
push
inc
andb
inc
adc
loope
inc
and
push
jae
pusha
mov
xor
push
leave
and
jo
mov
push
mov
pusha
pop
jbe
push
or
call
hlt
push
cli
push
frstor
mov
cmp
sbb
notl
xchg
orb
lods
inc
xchg
cmp
xchg
push
inc
jae
ja
arpl
fwait
outsb
cmp
shl
test
test
cmpb
jl
or
mov
cmp
jns
mov
jnp
and
xchg
push
movsl
pop
pop
lods
stos
pusha
lods
xchg
or
loope
push
cmp
popf
xor
inc
jae
sahf
jo
out
fyl2x
xor
loop
and
scas
lahf
mov
pop
sti
shrl
inc
xchg
jle
sbb
inc
pusha
jge
mov
add
test
push
lds
and
rolb
cmp
add
filds
decl
sti
or
push
inc
cmc
sub
and
js
mov
add
movsb
jae
jne
cmc
mov
hlt
sub
mov
lmsw
or
dec
mov
jmp
inc
idiv
nop
jno
iret
and
jecxz
rcr
mov
dec
andl
pop
or
pop
data16
movmskps
add
xor
push
inc
mov
mov
and
nop
mov
popf
popf
push
fisubs
jne
dec
js
jbe
jns
xchg
fs
mov
mov
add
sub
fmuls
js
fcoml
pop
notl
pop
cwtl
add
dec
cltd
jae
mov
dec
arpl
and
cmp
mov
jno
mov
xchg
ret
pop
or
jg
addb
sahf
fsubs
xor
orl
push
cmp
mov
mov
add
sbb
sbb
jecxz
inc
in
sbb
mov
cwtl
and
jp
pop
lret
inc
loope
lahf
or
shll
jp
divl
sbb
leave
fstps
push
mov
test
sti
lock
adc
dec
add
fstl
movswl
dec
ret
add
push
lock
lods
data16
pop
jb
mov
and
xor
mov
mov
in
sbb
pop
setb
jp
mov
jl
loope
xor
dec
gs
cld
or
dec
and
xchg
mov
xorb
xor
lcall
sub
mov
jo
push
es
jo
lea
xor
dec
push
push
push
push
adc
lock
mov
or
enter
and
aaa
push
or
lock
imul
adc
mov
xor
push
insb
mov
fisubs
or
aaa
mov
fsubl
ficoms
xor
pop
push
cli
inc
ret
int
shlb
xor
dec
lea
xchg
addr16
sti
xlat
inc
shlb
push
jnp
clc
adc
std
outsb
push
imul
dec
aad
push
jle
rcll
pop
mov
mov
fnstsw
aaa
lcall
adc
sbb
and
sub
jo
fs
mov
pusha
out
lcall
aad
dec
adc
pop
jo
repz
test
mov
dec
pop
pop
mov
cmp
push
test
sarl
xor
jle
rcr
pop
cmp
jp
pop
push
adc
icebp
frstor
pop
push
push
out
enter
jns
sub
mov
iretw
gs
fisubs
call
inc
xor
jne
cmpsl
jae
out
test
jne
push
stc
pop
inc
das
jnp
pop
mov
xchg
xchg
dec
rcrb
sbb
mov
inc
sahf
dec
cmc
jne
outsb
pop
nop
fwait
jl
ds
mov
scas
dec
jne
jae
aad
out
test
repz
sub
mov
sub
leave
adc
std
je
mov
jbe
inc
mov
dec
jmp
jb
jp
stc
xor
mov
or
lahf
lret
imul
decl
popa
jmp
bnd
pop
mov
insb
loope
xor
bound
test
arpl
adc
add
mov
adc
mov
popa
fsts
inc
shll
test
push
dec
sbb
push
enter
fmulp
cmp
xchg
xchg
fildll
mov
xchg
xchg
sub
in
cmc
test
dec
xchg
adc
shlb
popf
inc
xchg
lods
clc
jbe
pop
insl
dec
pop
xchg
xchg
pop
push
fucom
sbbl
daa
into
xchg
iret
pop
fcmovnbe
inc
test
xor
mov
adc
shrl
notl
int
jnp
ljmp
neg
sar
inc
dec
cltd
push
jb
cmp
push
fsts
sub
xor
mov
dec
push
xor
mov
adc
xlat
xchg
inc
inc
std
adc
push
ja
pop
std
cli
mov
jae
lahf
pushl
push
pop
push
addr16
pop
sbb
sarl
sbb
loope
jbe
lret
dec
jo
sarb
loop
jl
frstor
xchg
jno
mov
jno
out
mov
pop
cmp
lcall
jle
loopne
jb
push
lods
nop
es
cmp
push
xchg
daa
in
inc
push
xor
test
mov
xchg
cmp
inc
dec
mov
icebp
mov
cld
sar
or
pop
out
int3
sub
rcrb
adc
xchg
xchg
mov
xchg
cltd
inc
imul
lods
loop
lods
je
fistpll
mov
jl
fsubs
arpl
stc
addr16
jg
loope
cmp
inc
sbb
in
add
xor
inc
jo
lods
mov
lcall
xlat
mov
mov
ss
or
push
icebp
adc
adcl
dec
or
cmp
mov
outsl
sub
subb
loopne
add
pop
push
outsl
lods
es
mul
sub
mov
stos
push
sub
inc
adc
movl
push
fdivs
shll
inc
xchg
dec
lret
arpl
jmp
das
xor
dec
cmc
stos
addr16
jle
in
jb
inc
addr16
xchg
je
insl
ret
sbb
mov
ds
mov
cld
push
cmp
xchg
cmp
mov
bswap
insb
or
popa
pop
test
lret
jle
ret
and
roll
pop
pop
mov
pop
ret
mov
push
pushf
in
cwtl
icebp
and
testl
roll
outsb
rorl
fsubrl
push
in
xchg
jge
outsl
push
outsl
scas
push
subb
bound
sub
pop
jns
and
push
mov
clc
jnp
lock
dec
imul
ret
push
loope
mov
adcl
jne
cwtl
lock
js
and
iret
cmpsl
repnz
daa
cmp
lods
cmp
add
sti
hlt
jle
cmp
aam
hlt
jb
rorb
sbb
fnstenv
jb
std
pop
cmp
and
ja
pop
fldcw
inc
loop
popf
adc
loopne
pusha
mov
jp
xchg
dec
pop
in
sub
mov
inc
addr16
mov
push
test
lea
mov
push
sub
test
inc
xchg
adc
mov
das
or
mull
stos
push
scas
pop
ds
mov
add
add
push
inc
and
mov
lret
mov
sub
ljmp
mov
repnz
aam
fildl
bound
cltd
mov
les
push
mov
outsl
cmpsb
jg
out
fisttpll
sub
lock
jecxz
les
dec
push
mov
out
jmp
push
ds
mov
lds
jno
iret
or
jle
lods
sub
xlat
mov
mov
mov
push
dec
repz
lcall
aaa
stc
cmp
inc
jp
mov
jl
lea
mov
and
cltd
jbe
shll
iret
fildl
adc
add
mov
hlt
fildll
pop
mov
gs
jg
ja
mov
xlat
inc
xor
addl
pop
movsb
mov
stos
pop
lahf
sti
and
mov
xor
int3
add
sub
inc
or
out
mov
in
fimull
xor
dec
insl
push
pop
jle
popf
adc
sub
or
call
sub
outsl
gs
repz
or
movsb
sbb
add
xlat
scas
pop
push
add
cmp
test
jecxz
inc
xor
jecxz
cmpsb
adc
pusha
mov
sub
mov
ljmp
lret
dec
negl
xchg
std
popa
scas
cmpsb
push
cmp
sub
push
shll
push
sub
adc
aam
push
or
addr16
push
adc
jmp
add
xchg
ret
ficompl
mov
xor
adc
cmpsl
fcomi
pop
jns
cmp
dec
not
jle
int3
out
ret
adc
rcl
repz
popa
or
mov
mov
mov
das
mov
cmp
mov
outsl
sbb
xor
lds
dec
sub
push
xor
out
nop
push
insb
cltd
jecxz
push
fwait
lret
arpl
jne
jne
adc
add
or
or
imul
sub
in
fmull
in
sub
decb
sub
stc
fnstcw
lods
shl
cs
add
aaa
cmc
mov
lock
jle
lret
mov
loop
in
jnp
test
adc
mov
xchg
add
sub
jb
jge
ret
or
lea
bound
xlat
cmc
xchg
in
test
lcall
outsl
jg
mov
mov
enter
or
cmp
ja
mov
push
sub
mov
out
cmp
dec
xorl
stc
push
mov
aaa
pop
mov
xchg
subl
push
stos
sbb
xchg
add
das
inc
jnp
add
lods
mov
popf
sahf
or
dec
mov
jl
out
cmpsb
icebp
inc
push
push
enter
jb
pop
cmpsl
ljmp
frstor
mov
adc
fidivrl
aaa
dec
mov
cld
sahf
shlb
push
mov
xchg
fadds
scas
mov
jle
jbe
xchg
cmpsb
fisttpll
mov
out
arpl
xchg
dec
or
jg
stc
cmp
outsl
push
popf
out
adcl
arpl
pop
out
test
push
fadds
push
jp
push
sbb
sub
popa
int3
add
or
xor
mov
xor
out
jle
xchg
push
mov
loopne
out
aam
aam
jmp
pop
and
into
push
mov
inc
xor
xchg
sub
enter
pop
outsl
popf
gs
mov
rclb
mov
ror
add
inc
stos
pavgw
pop
cmp
cmp
and
shlb
bnd
push
pop
lods
mov
dec
loope
adcb
sarl
sbb
sub
stc
cmpsb
ss
scas
dec
adc
out
imul
int
xor
sub
dec
aaa
daa
insb
xchg
in
and
mov
push
insl
pop
cmpsb
lret
cs
mov
push
fidivs
and
xchg
ljmp
stc
cwtl
aas
dec
test
pop
jb
popf
ss
cmp
sub
cmp
xchg
jl
inc
adc
sub
dec
sub
cmp
mov
dec
cs
mov
jecxz
mov
mov
sbb
cmp
dec
xchg
iret
adc
lods
out
sub
adc
mov
bound
ja
dec
scas
test
or
mov
fidivrl
loope
scas
ljmp
mov
jns
jbe
loope
int3
and
test
push
vandps
je
cmp
xor
push
jns
out
aam
lahf
sbb
out
cwtl
push
mov
je
ljmp
filds
dec
in
jo
mov
cli
or
fisubrs
test
fs
jmp
jnp
lcall
cmpsb
mov
inc
rorl
xchg
std
scas
sbb
and
subl
popa
push
push
inc
addb
push
insb
mov
xor
add
pop
jecxz
ret
add
inc
sub
xchg
mov
push
sub
inc
and
jecxz
jnp
mov
shl
loope
cmc
mov
push
fwait
dec
stos
lock
jge
sahf
sub
push
into
addb
xchg
mov
sub
int
loopne
adcl
shlb
push
adc
loopne
psllw
addr16
jmp
ss
xor
jl
or
aam
test
add
or
pop
rcrl
lods
sbb
push
mov
and
pop
push
bound
popa
jp
sbb
into
sub
inc
add
mov
in
xor
xchg
inc
mov
add
lret
cwtl
mov
add
or
imul
and
cmpsl
adc
or
mov
push
fwait
or
jae
jns
inc
lcall
mov
dec
mov
xchg
iret
jl
xchg
cli
sub
mov
push
jae
or
dec
aad
lds
sbb
jl
mov
or
or
ficomps
aas
shll
mov
aaa
mov
aad
popa
adc
dec
stc
mov
movb
sub
push
fcomps
jl
sub
xchg
loope
in
lods
pop
int3
add
dec
sahf
outsl
aaa
pop
inc
fisttpll
pop
movsb
shr
mov
jns
mov
fwait
mov
mov
jns
cmp
pop
addl
loop
cltd
dec
mov
sbb
and
jmp
dec
in
mul
ror
stos
and
mov
and
jecxz
movsl
and
sbb
xlat
pop
dec
pop
push
sbb
jmp
mov
fstl
mov
insl
xor
loop
cmp
xchg
inc
in
fdivr
mov
arpl
or
imulb
lea
js
jp
sbb
dec
and
xor
adc
cmpsb
in
out
sub
std
push
dec
dec
xorl
pop
sar
leave
cli
adc
jo
inc
pop
nop
lea
loopne
bound
dec
dec
loope
hlt
mov
es
cwtl
cmpl
mov
les
test
hlt
xchg
popf
mov
scas
lahf
jecxz
pop
outsb
dec
add
lahf
mov
dec
gs
xor
lcall
push
adc
popf
jb
jecxz
das
inc
outsb
add
adc
xorb
mov
hlt
stos
xor
adc
dec
mov
test
mov
aam
out
bound
out
mov
fs
fbld
stos
dec
push
in
pop
inc
xchg
cmc
push
cmc
adc
das
fwait
jp
sbb
jno
dec
mov
es
and
aam
adc
and
movlps
rol
and
add
pop
dec
mov
push
iret
fucomip
inc
mov
fwait
cmp
xor
pop
pop
push
pop
out
cmp
test
and
inc
jl
popa
sbb
jns
lret
int3
sbb
xor
mov
data16
adc
xchg
jb,pt
arpl
cltd
lock
pop
lcall
in
or
ds
test
shlb
mov
jnp
mov
daa
es
jns
in
pusha
je
pop
jne
and
test
popf
xor
or
hlt
push
jmp
cmc
sub
mov
repnz
adc
cmpl
enter
adc
pop
sub
ret
xor
jge
pop
inc
bound
iret
jo
pop
pusha
dec
bound
push
or
xchg
in
xor
or
mov
push
nop
addb
lock
pop
clc
lds
into
mov
cmpsl
xchg
mov
pop
mov
add
test
out
mov
mov
and
mov
push
mov
fisttps
mov
dec
add
fs
and
repnz
fcomps
dec
ds
push
loopne
pop
xor
out
sti
iret
inc
dec
sub
outsb
aas
jb
fcmovu
sbb
sub
dec
mov
push
mov
cmp
dec
jnp
inc
inc
or
test
stos
cs
cli
sub
jno
jmp
or
cmp
paddsw
mov
or
fistpll
rcrl
loop
add
xor
into
jb
adc
pop
xchg
mov
jo
xchg
iret
xlat
cli
popf
lret
aas
xchg
scas
repz
cli
cmp
jo
xor
mov
and
push
sbb
loop
lods
xchg
mov
test
pop
pop
mov
mov
nop
pushf
rcrb
push
daa
dec
cmp
into
je
cmpsl
sahf
mov
sbb
mov
loopne
pop
xchg
and
xchg
and
sbb
loopne
cmp
ror
pusha
xchg
rcrl
pop
or
stos
jae
sub
adc
add
cmp
and
addb
jns
mov
repnz
cmp
clc
push
inc
jo
xchg
bound
cmc
fdivs
pop
cs
sub
mov
sahf
lahf
mov
push
dec
jae
cmp
enter
in
pop
cmp
sub
xor
push
inc
call
or
sbb
xor
pop
aas
cmpsl
cmpsb
js
inc
mov
sbb
cs
rolb
mov
pop
ret
cwtl
lret
push
jb
mov
cltd
fdiv
mov
rcl
xchg
push
js
and
popf
mov
bound
cmp
pop
lock
dec
enter
rcr
sub
in
rol
or
push
into
cmp
cld
adc
sub
decl
or
adc
cmpsl
and
inc
jle
sti
add
sub
add
xchg
enterw
dec
add
adc
jae
push
cmp
xor
out
ret
sub
inc
dec
xlat
out
mov
repnz
pop
cmp
aaa
test
pop
inc
jbe
inc
rclb
mov
es
out
dec
push
lods
push
sbb
add
sub
daa
xchg
adc
into
loope
aaa
lods
xor
daa
imul
and
out
in
rclb
xchg
xor
push
xor
inc
imul
push
sar
cmp
inc
movl
jmp
sbb
inc
cwtl
data16
xor
shl
push
hlt
mov
pop
nop
add
pop
clc
enter
xor
int
and
test
add
jle
add
jle
sub
adc
or
lds
enter
insb
jnp
jnp
inc
cwtl
push
mov
or
mov
xor
and
call
cld
lcall
shlb
pop
int
sti
inc
stos
aas
or
mov
pop
gs
xor
pop
loop
cwtl
xchg
xor
jnp
or
mov
fdivs
or
jge
sahf
lret
scas
mov
xchg
vxorps
pop
mov
and
push
out
out
adcb
mov
sbb
pop
dec
andl
push
test
mov
les
int3
dec
stos
push
jecxz
insb
lods
push
xchg
lahf
mov
cmpsl
addr16
fstl
in
jl
test
cld
dec
into
insb
outsl
jmp
xchg
enter
push
push
in
enter
jmp
fistpll
mov
out
addr16
sbb
jne
cs
int3
push
fsincos
jge
push
inc
xor
aad
mov
jb
nop
arpl
sbb
xor
sbb
mov
ret
dec
daa
push
adc
push
fs
jae
pop
negl
jne
mov
lcall
add
sub
mov
fwait
ds
and
sub
hlt
mov
icebp
cwtl
in
dec
cltd
inc
mov
sbb
arpl
jno
add
insb
pop
xchg
jo
lahf
out
push
test
jp
gs
add
mov
sbb
jle
xor
test
sub
in
fimuls
pop
dec
nop
mov
je
pushf
arpl
or
adc
cltd
mov
in
gs
cs
notb
inc
adc
jmp
xchg
shlb
and
pop
lret
push
pop
add
mov
mov
inc
test
add
in
or
sub
xchg
out
sub
xchg
and
enter
sub
lods
loop
sub
adc
fldcw
add
sub
mov
pop
xor
xchg
add
ljmp
test
test
mov
sbbl
fwait
push
outsb
dec
ds
js
xor
mov
cs
scas
add
add
imulb
aaa
push
arpl
add
dec
pushf
repz
push
rolb
test
mov
cli
jbe
cmp
push
xchg
hlt
cmp
pop
or
scas
pop
mov
push
mov
xor
mov
sahf
jle
icebp
iret
cmpsl
mov
mov
not
add
cli
add
pop
mov
adc
mov
movzbl
loop
adc
cmpsb
push
scas
pop
adc
stos
xchg
add
inc
adcb
lahf
rorl
xor
out
inc
fldt
adc
sub
out
aam
push
jo
jg
or
mov
rol
sahf
and
mov
cmp
add
and
hlt
jne
outsl
sbb
sbb
jno
idivl
fnstcw
aaa
es
aaa
aas
and
xchg
rcr
pop
cwtl
sbb
repnz
ficoml
dec
lcall
jecxz
fmull
outsb
and
xor
xchg
and
pop
pop
mov
cmp
pop
adc
add
pop
lahf
add
fstp
inc
and
or
dec
add
mov
sbbl
pop
sbb
movsl
cmpsl
and
or
push
insb
sbb
cmp
notb
fwait
lea
or
push
xchg
jle
icebp
rcll
mov
inc
test
adc
mov
stos
sub
or
jbe
mov
xchg
sahf
sub
jnp
push
dec
fistl
lock
sbb
in
test
mov
xor
mov
mov
es
and
jp
rcll
mov
sbb
dec
out
xor
xchg
dec
jns
movsl
push
call
imul
xchg
fisttps
xor
or
fwait
inc
add
mov
mov
add
add
cmp
xchg
push
cwtl
mov
mov
xchg
fidivl
popf
outsl
mov
test
xchg
test
js
xchg
sarl
xorb
xchg
cmp
mov
or
sub
adc
call
ror
pop
or
loope
pop
cmc
es
into
loope
loope
xchg
xchg
mov
and
inc
lcall
push
jmp
sub
imul
lods
jge
icebp
lret
out
xor
stc
loope
adc
cs
mov
aas
out
repnz
insb
and
aam
push
fwait
shll
pop
pop
add
hlt
repnz
jecxz
test
fisttps
mov
xchg
mov
and
xor
inc
bound
mov
lea
pop
cmp
incl
clc
outsb
push
sarb
or
fists
xchg
gs
adc
into
rorb
sub
sbb
adc
jns
ljmp
pop
and
cltd
aam
xor
and
pop
lahf
pushl
push
imull
mov
repnz
jp
push
movb
loopne
sbb
or
cld
sub
icebp
icebp
mov
lods
stos
jmp
sub
iret
inc
cmp
add
sbb
adc
adcb
lods
das
adc
loope
or
sbb
shl
dec
adc
aam
mov
aaa
fs
rcrb
das
push
xlat
xor
jb
cmp
stos
lret
lret
mov
out
add
cmc
mov
xchg
mov
jne
dec
outsl
sub
mov
pop
jecxz
bound
gs
push
push
jno
lea
sub
arpl
jnp
sbb
shrl
out
icebp
pop
lea
adc
bound
gs
and
sbb
aam
xchg
jl
aaa
out
xchg
in
xchg
add
je
daa
push
push
cltd
xchg
jg
frstor
and
popf
mov
imul
fistps
sbb
mov
lahf
enter
insl
mov
mov
rcrl
hlt
xlat
pop
shl
lcall
fidivl
jnp
inc
push
cmp
push
mov
and
jle
cmp
test
das
push
jl
shlb
loopne
cmp
adc
out
pop
jo
pop
in
pop
or
sub
push
aad
in
jae
rorl
sbb
cmp
mov
xchg
add
cmp
outsl
and
enter
sarl
movsl
rcrb
mov
jnp
inc
sbb
test
xor
xor
or
xchg
rcrb
bts
xchg
shrb
cmp
add
mov
jns,pt
loop
cmp
mov
xchg
mov
sets
pop
jo
rcrb
inc
jno
sbb
lock
xchg
test
dec
or
fadds
or
sub
xchg
pop
fstp
mov
mov
lret
out
lods
mov
sbb
pop
or
inc
add
sbb
aam
mov
lods
sbb
push
lds
fwait
pop
push
sub
in
xchg
inc
cmpsl
hlt
mov
mov
sbb
adcb
fiadds
loopne
mov
hlt
test
daa
sbb
add
pop
pop
fildl
outsb
pop
jns
xchg
add
addr16
sub
imul
push
outsl
sub
int
cmp
lea
and
dec
and
add
xor
pop
or
mov
push
jne
push
jbe
sbb
pop
aaa
popa
emms
mov
xchg
mov
daa
nop
push
mov
xchg
imul
adc
sub
mov
mov
dec
jae
fucomp
pop
not
aam
je
ffree
dec
fcmovnu
mov
pop
mov
imul
mov
divl
std
mov
stos
loope
test
nop
mov
cld
leave
jnp
iret
cltd
test
outsb
pop
cmp
mov
lds
enter
jecxz
mov
xor
push
mov
icebp
sub
sbb
cmp
outsl
xor
pop
sar
cmp
inc
push
das
jle
lret
sahf
pop
lcall
cmp
arpl
aaa
std
je
push
cmp
dec
and
arpl
mov
jns
sub
ja
or
mov
adc
pop
push
rcrb
mov
lock
jb
test
pop
mov
addr16
push
movsb
data16
sub
dec
cmc
xor
mov
je
loop
scas
cmp
xchg
movsl
push
decb
daa
loop
bnd
mov
out
psubq
adc
cmpsl
bound
jae
in
loop
fs
inc
inc
pop
xor
jp
sub
add
dec
sub
nop
pushl
js
or
fimull
repz
out
je
and
mov
sub
push
xchg
mov
push
push
fcmovu
inc
rcll
outsb
push
jae
sub
inc
xor
dec
stos
fistpl
push
sbb
fdivr
xor
in
push
imul
das
test
mov
in
rolb
pop
outsl
out
push
mov
in
dec
ret
js
iret
mov
add
cmp
loope
mov
xor
dec
fiadds
js
jmp
and
inc
mov
cmp
add
insb
dec
jns
xor
stos
iret
xchg
add
mov
fwait
lock
lahf
xchg
scas
mov
lcall
in
adc
jmp
mov
jnp
add
orb
movsb
rorb
clc
pop
movsl
inc
addr16
loope
jp
test
inc
cmp
mov
adc
adc
pop
aaa
pop
addr16
lods
mov
mov
add
repz
into
jp
ljmp
push
fwait
addl
arpl
mov
mov
mov
mov
push
or
push
mov
adc
addr16
ja
out
xor
sti
mov
pusha
mov
push
cli
fs
xchg
mov
inc
adc
cmp
pop
or
xor
pop
xchg
sarl
aas
test
jb
daa
sbb
scas
adc
add
cmp
push
ret
and
sarl
pop
je
popf
call
and
stc
dec
inc
shll
sub
or
pop
stos
out
addb
mov
in
lds
push
loope
sub
dec
add
pushf
pop
push
or
push
inc
push
imul
cltd
pop
xor
ret
movl
xchg
jno
pop
and
sbb
jb
faddl
push
scas
jnp
sub
jmp
inc
inc
stos
stc
idiv
cmpsl
dec
bound
sbb
lods
loop
rorb
sub
adc
setl
rcl
xchg
xchg
cmpsb
vaddsubps
xchg
jne
in
stos
sbb
pop
popa
jmp
test
lahf
dec
sub
and
adc
sbb
pop
cs
aas
and
push
loopne
mov
lret
lret
mov
xchg
sub
popa
mov
push
xor
xchg
nop
jbe
in
lock
push
mov
inc
jl
push
mov
pop
gs
sbb
inc
mov
xchg
data16
popf
movsl
mov
dec
cli
pop
sbbl
jno
adc
dec
xor
mov
stc
mov
mov
je
dec
test
imul
fwait
loop
push
out
mov
mov
pop
mov
pop
xor
mov
scas
mov
cmpsl
or
cltd
jno
in
enter
push
ds
mov
leave
mov
sbb
cmp
cmc
icebp
test
clc
daa
mov
aad
adc
mov
ljmp
and
test
sub
lret
into
icebp
inc
add
xor
notl
inc
xor
xor
mov
lret
imul
cld
xor
mov
rolb
aas
icebp
or
mov
mov
mov
add
jg
push
repnz
inc
hlt
jle
insl
pop
xor
push
jo
inc
lahf
rclb
sub
dec
mov
or
sub
sbbl
adc
cmp
rcll
dec
insb
xchg
dec
scas
int3
in
push
lea
fidivrl
inc
or
add
clc
jb
fucomi
adcl
lods
push
sarl
lret
out
je
fidivs
andl
cli
scas
es
mov
ret
xchg
mov
mov
sti
in
xchg
popa
fldenv
scas
and
cltd
and
push
nop
icebp
inc
daa
popa
dec
mov
std
cwtl
lods
stos
mov
cmc
push
sbb
xchg
js
test
cmpsl
pusha
loop
pop
mov
xchg
xchg
or
pusha
in
pop
into
aas
cmp
shrl
mov
dec
mov
or
lcall
mov
jg
dec
ss
movswl
pusha
addr16
push
inc
addr16
xlat
mov
aam
mov
repz
jne
xlat
push
and
loope
cltd
dec
and
mov
sti
mov
repnz
mov
or
or
dec
adc
fdivrs
cmp
imul
xor
fwait
cmp
movsb
stos
in
pop
int
imul
ret
jne
fs
rolb
imul
push
add
lret
sub
jg
imul
mov
push
test
sub
or
adc
add
daa
pushf
cld
xchg
and
ss
mov
mov
imul
bound
cld
ret
adc
jle
add
add
sar
in
add
cltd
cwtl
mov
bnd
jp
xchg
adcb
jle
icebp
lret
jl
je
fidivrs
xor
out
add
dec
or
test
xorb
cmp
inc
add
lds
mov
flds
jecxz
rorl
dec
gs
push
std
dec
mov
or
push
inc
jb
jecxz
int
and
rcll
mov
enter
pop
pop
ja
orl
nop
cmp
das
add
and
jo
and
inc
cld
xor
xor
ror
fmuls
mov
xchg
jne
add
insb
mov
test
out
dec
cmpb
stos
jle
repz
cs
jns
xchg
rcrb
call
sbb
movsl
push
xor
jp
cs
cmpsb
fs
sub
jle
xor
sarb
xor
iret
loop
sti
xlat
popa
jo
adc
jecxz
inc
adcb
and
ja
adc
jmp
nop
mov
lods
cmc
push
mov
sbb
fsubs
loopne
lock
push
push
sbb
sbb
outsb
ret
call
adc
xor
xor
inc
or
outsb
sbb
stc
cmpsl
rolb
xchg
pop
stc
xchg
push
daa
mov
jo
cwtl
mov
out
ret
dec
mov
sub
xor
bound
jle
xchg
popf
or
mov
sarb
outsb
js
loop
fists
fisubs
and
ja
cmp
cmpsb
cmp
mov
jg
rep
and
dec
daa
pop
imul
mov
mov
or
test
cmp
pop
bts
inc
lds
pushf
rcr
pop
mov
outsb
ss
jge
outsl
and
push
std
pop
or
xchg
mov
push
push
mov
push
dec
into
pop
dec
pop
push
dec
ja
pusha
mov
cwtl
mov
push
cs
push
shrb
xor
xchg
dec
or
clc
pop
int
aad
addr16
aam
popa
mov
mov
je
insb
outsl
xchg
jnp,pn
add
mov
mov
jns
movsl
in
cmp
cwtl
ja
add
add
scas
mov
xchg
rcrl
clc
aaa
popf
lods
addr16
ss
xchg
mov
xchg
test
and
popa
movsb
sub
mov
xchg
and
dec
js
call
shrl
inc
lods
lds
in
repz
jb
clc
mov
cli
lds
jmp
je
cmp
ret
xchg
fildl
cltd
std
jo
aaa
mov
and
dec
in
cmp
stos
add
ret
lods
rcrb
stos
arpl
andl
ds
popf
mov
xchg
insb
out
mov
mov
imul
out
cmpsl
loopne
fidivs
lds
rcll
mov
push
lods
std
jmp
dec
loopne
in
jnp
dec
and
insl
sbb
jnp
icebp
push
mov
popa
in
and
mov
add
xor
sub
in
sbb
mov
in
cmp
notb
push
in
repnz
pop
in
inc
test
and
mov
jecxz
mov
ret
xchg
push
nop
push
divl
xor
in
add
aaa
mov
lock
aas
sub
add
xchg
les
xchg
in
test
xchg
and
add
pop
sar
out
ret
mov
xorl
andps
cmp
test
addl
pushf
test
adc
test
shl
mov
outsb
dec
adc
in
xchg
dec
js
mov
pusha
cmpsb
icebp
fbld
ja
sbb
mov
lahf
je
xor
iret
xchg
loope
pop
mov
jo
fdivs
test
push
imull
push
or
aaa
and
add
leave
addl
sub
rclb
outsb
add
and
jmp
lret
in
xchg
lahf
addb
and
sub
ret
stc
ret
jecxz
xchg
int
push
addr16
in
mov
lods
cmp
in
rcrb
cmpsb
enter
jnp
jo
pop
out
xchg
lock
ljmp
jg
aad
shll
add
jmp
in
arpl
enter
xlat
fistpll
push
sti
jmp
xor
dec
inc
adc
sbb
mov
mov
out
cld
jne
fwait
aad
std
and
adcl
jg
lret
sbb
outsl
mov
std
sbb
mov
dec
push
xchg
jg
cmp
and
fninit
mov
pusha
in
outsl
lahf
or
mov
call
jmp
ds
push
cmp
and
pop
enter
adcl
in
push
dec
push
imul
pushf
add
lods
pop
lock
test
popf
in
popa
or
pop
xchg
je
mov
xchg
pop
pop
jge
push
test
xchg
inc
xor
mov
adc
lods
int
ds
inc
dec
lret
xor
inc
fistpll
xchg
adc
pop
daa
jmp
sti
lods
ret
mov
jno
add
sub
pop
stos
into
mov
das
mov
aaa
enter
mov
pop
fmulp
bound
pushl
jae
pmuludq
mov
add
das
popf
fldl
hlt
imul
int
push
pop
lret
int3
or
pop
dec
sub
xor
in
dec
inc
sub
xor
lods
mov
aad
lret
insl
sbb
dec
push
push
ret
push
notl
movsb
ficompl
mov
ljmp
test
lcall
mov
push
and
mov
jp
ljmp
enter
inc
xchg
inc
or
stos
lret
dec
test
inc
in
out
gs
cmp
and
jne
inc
test
cld
sbbl
ss
or
movsb
jmp
popf
ljmp
add
cmp
popa
test
std
mov
pop
mov
pop
cmc
and
adc
in
xchg
xor
je
push
shrl
xchg
cmp
adc
arpl
stc
xor
repz
jecxz
pop
push
jnp
test
out
sbb
dec
mov
mov
sbb
dec
pusha
jge
pop
cmp
sub
shrb
mov
addr16
les
push
aas
pushf
jg
lahf
cmp
push
pop
std
mov
dec
jl
sub
pushf
cmp
je
rorl
xor
repnz
inc
test
les
jle
push
xor
fsubs
sbb
adc
iret
rcll
test
sub
cmpsl
mov
mov
es
mov
mov
test
rcrb
iret
jmp
push
pop
std
xchg
enter
push
test
negb
inc
xchg
pop
jle
sbb
or
xchg
imul
mov
mov
push
fsts
sub
sub
sub
std
test
xor
mov
cmp
xor
inc
scas
repz
mov
inc
insl
adc
fldcw
xchg
add
roll
das
mov
sti
mov
add
jnp
stc
xchg
mov
fdivr
xor
mov
out
cmpsb
arpl
and
mov
ret
lcall
adc
mov
xor
mov
sahf
into
fmul
add
jl
cs
shrl
xor
out
in
xchg
or
and
js
in
nop
in
dec
inc
fcoml
test
in
out
cld
lret
std
imull
stc
adc
daa
mov
lret
insl
clc
ljmp
cmp
int3
jbe
jbe
shld
dec
jae
and
mov
lret
and
test
in
adc
lods
push
xchg
xchg
add
xchg
pop
mov
xchg
jno
in
dec
insl
pop
pop
mov
cmpl
fiadds
gs
fs
xor
sarl
mov
jno
mov
lods
adcb
cs
inc
mov
lods
mov
cmp
and
scas
xor
sarb
dec
sub
sbb
xchg
jle
cmp
and
in
rcrl
xchg
pushf
iret
sub
xor
add
shll
mov
pop
scas
xchg
adc
cmc
out
out
mov
gs
mov
call
into
stos
jg
nop
push
cmp
nop
ret
scas
cli
jp
jno
ficompl
add
stos
cmp
push
cmp
mov
xchg
lahf
adc
pop
push
cmp
ljmp
pushf
inc
pop
aaa
iret
and
lods
sti
lea
and
les
int3
fmul
lods
arpl
mov
jno
cmp
test
sbb
mov
push
push
mov
cltd
inc
or
xchg
inc
mov
cmp
adc
jg
inc
popa
testl
cvtps2pi
mov
cmp
sub
bswap
movl
xchg
arpl
ret
pop
xor
jne
or
in
xchg
cmp
add
scas
les
outsb
hlt
push
sub
sub
in
lods
jae
ss
mov
insl
xlat
jmp
pop
in
pusha
mov
and
shl
shrl
xor
sbb
data16
jb
cmp
xchg
add
adc
in
jg
ja
or
or
dec
out
and
pop
popw
iret
cmp
std
icebp
adc
rcll
xchg
cmc
loopne
les
sub
scas
pop
mov
sub
cmp
lahf
adc
jge
leave
xchg
adc
and
scas
sbb
daa
or
sub
cmp
sub
out
jle
or
out
sub
add
adc
inc
flds
jle
aam
mov
mov
add
pusha
adc
and
push
jl
loope
push
scas
mov
arpl
pusha
es
outsl
mov
xor
add
insl
test
orb
lret
adc
lret
inc
popf
cmp
enter
or
mov
jns
sub
ljmp
fcoml
xchg
addl
xor
mov
rorl
in
lds
arpl
or
sbb
sbb
sub
xchg
imul
xchg
aad
and
jp
mov
nop
pushf
add
or
fwait
dec
mov
pop
jp
pop
or
xor
lods
sbb
jle
out
or
ret
out
xor
pop
sub
adc
aad
mov
and
push
mov
xchg
add
xchg
push
and
out
in
gs
jmp
testl
and
test
imul
ljmp
cli
or
sbb
mov
xor
mov
rorb
mov
push
test
sub
cmpsl
mov
cmpsl
aaa
jp
mov
inc
lret
stos
add
xchg
inc
adc
sbb
mov
sub
test
loopne
push
inc
scas
and
push
rcrb
or
pop
outsb
lds
xchg
adc
inc
cmp
enter
popf
or
mov
dec
daa
inc
sbb
data16
hlt
ficoml
imul
cmp
or
testb
sub
outsl
add
add
test
in
jmp
add
push
icebp
sub
movsb
cmp
outsb
add
fprem1
jb
xchg
addr16
icebp
pop
cmp
out
out
mov
push
outsl
mov
jne
inc
mov
add
adc
jns
mov
mov
ja
pop
jle
jmp
jecxz
fucomip
pop
mov
adc
xor
xor
xor
dec
sbb
rcll
lds
or
and
mov
sub
and
xor
mov
push
mov
psllq
xchg
inc
andl
aam
insl
dec
into
mov
ss
stos
dec
cmpl
inc
dec
push
cmp
lock
jno
sbb
sub
xor
cmp
and
popl
cmpl
sub
lret
pop
ljmp
sub
sub
in
insl
lds
aas
scas
xor
adc
pop
mov
mov
pop
sub
movsb
stos
cltd
popf
sbbl
sub
int3
sti
xorl
mov
mov
push
ja
sub
xchg
jo
jmp
cmp
sub
push
push
lahf
lahf
test
ret
scas
inc
mov
and
nop
and
jg
inc
mov
dec
cmp
int
cmp
push
call
sahf
sub
and
enter
inc
inc
idivl
push
stc
dec
test
sub
sar
push
mov
test
and
pushf
push
add
jne
jne
mov
ret
loopne
adc
push
dec
repz
adc
enter
pop
inc
or
stos
jb
jo
inc
jnp
adc
outsb
insl
ja
inc
sbb
call
sbb
jns
test
cltd
out
push
jne
lds
ds
mov
inc
repnz
push
xorb
jmp
mov
leave
dec
or
dec
mov
pop
push
lods
mov
dec
mov
push
fsubrl
jp
xor
inc
sbb
ret
push
out
jae
mov
pop
sbb
mov
iret
dec
mov
scas
and
or
stos
push
xchg
jecxz
stc
fs
push
cld
imul
add
jmp
aad
add
icebp
cmp
dec
add
push
lods
call
sub
xor
in
hlt
stos
push
divb
or
mov
rorl
jp
test
jge
shrl
cmp
lret
sbb
mov
add
lret
sahf
inc
les
idivb
outsl
sbb
push
sbb
enter
out
lahf
xor
or
clc
pmaxsw
fisttps
inc
xor
jl
and
pusha
xchg
ljmp
rorb
stos
and
and
shr
andl
cmp
popa
jmp
xchg
ret
jne
mov
mov
pop
push
lret
imul
dec
push
into
and
mov
bound
dec
in
in
clc
int
imul
sub
dec
out
lds
jp
stc
push
pop
sbb
jae
mov
das
pushf
movsl
push
dec
scas
outsl
ja
iret
inc
imul
sub
lcall
inc
fwait
add
jnp
push
ficompl
jge
xor
cltd
ret
or
fsubs
daa
jge
or
inc
push
mov
imul
fs
push
insb
sahf
int
pop
lds
insb
test
lds
inc
mov
xchg
lds
fwait
lock
sub
ret
stos
add
jg
pop
inc
jnp
xchg
gs
std
arpl
pop
gs
mov
idivl
fst
mov
or
inc
add
mov
mov
cld
je
xchg
out
stc
pop
and
or
pop
cld
inc
fstps
sbb
ds
adc
cmp
enter
cmp
loope
int3
icebp
add
push
adc
in
push
xor
out
mov
je
xor
sbb
cmp
and
pop
lea
and
movsl
dec
lods
xor
in
mov
or
cmp
and
clc
repz
cmpsb
ficoms
enter
xchg
cli
ret
pop
xlat
call
or
es
mov
notb
jge
std
mov
pop
out
or
sub
std
jo
nop
divl
mov
jo,pt
add
sub
pop
cmpsl
jecxz
outsb
scas
adc
jge
call
mov
push
outsb
jl
push
push
pushf
jno
pop
pop
push
in
xor
xchg
pop
aam
jno
popa
pop
inc
sub
add
int3
incl
dec
sbb
mov
adc
xor
sub
jge
imul
sbb
jecxz
xor
mov
adc
ja
dec
xor
dec
bound
sbb
movl
inc
dec
inc
jmp
fcoms
push
sahf
arpl
stos
shll
dec
sbb
shll
lods
push
nop
in
lods
adc
dec
loopne
lock
adc
adc
mov
aad
adc
mov
lcall
sti
test
jbe
xor
mov
pop
je
dec
inc
arpl
enter
push
lock
or
jl
les
sub
mov
mov
inc
sub
mov
push
push
push
jns
sub
mov
jle
hlt
pop
fsub
in
xchg
add
scas
pushf
add
xor
loope
sarb
add
push
push
push
movups
adc
leave
push
sbb
insb
pop
arpl
sub
les
dec
cmp
inc
sub
sub
jno
ret
sub
push
sbb
daa
lret
push
push
fdivrp
aas
outsb
loop
mov
cmp
shrl
pop
add
fdiv
push
out
iret
fsubrs
inc
xor
je
les
inc
sbb
sahf
fisttpll
pop
push
in
jmp
push
cmc
repz
xchg
popf
xchg
fmulp
add
push
movsl
iret
mov
and
or
xor
cmp
mov
fld
adc
lcall
push
outsb
insb
insb
mov
dec
inc
add
xor
outsl
push
into
xlat
gs
inc
inc
icebp
jg
mov
adc
jecxz
loop
in
cmpsl
xor
stos
shl
cmp
dec
mov
fcmovne
ficomps
lret
pop
imul
addr16
or
les
or
xor
dec
mov
out
mov
jae
jecxz
mov
pop
adc
push
jle
cltd
lret
lods
mov
xchg
mov
sbb
test
adc
push
testl
daa
in
fwait
push
push
nop
repz
test
out
pop
mov
add
in
cmp
mov
lret
sbb
adc
dec
imul
imul
pop
dec
sarl
fisttps
add
and
cmp
lcall
out
in
cmp
cmp
xchg
js
div
outsb
in
push
sarl
int3
sysexit
ret
in
fs
dec
mov
push
sbb
push
pop
xchg
loop
jb
cmpb
add
lock
clc
dec
xor
or
push
dec
sbb
cli
pop
lock
sbb
outsl
xchg
fistpl
negl
call
sahf
or
jmp
jne
and
mov
lcall
test
iret
jge
int
fcomp
sarl
jle
mov
roll
js
insb
into
into
outsl
xor
js
push
push
je
cmp
jmp
fmuls
and
fnstcw
push
adc
inc
sbb
dec
iret
call
sub
clc
repz
xchg
fcmovu
mov
mov
clc
sarl
push
out
adc
xor
test
mov
scas
jg
cmpsb
add
or
xor
sbb
out
mov
test
jns
and
push
mov
dec
adc
lods
aad
cmp
hlt
mov
pusha
cmp
sar
movsb
fildll
xchg
or
push
arpl
jl
and
int
sub
in
out
rcll
cmpsb
test
xor
iret
jo
cmp
lods
push
jg
aas
js
cmp
addr16
pop
pop
sub
das
inc
push
push
cld
jge
or
adcl
mov
mov
add
adc
sub
or
push
insl
jae
ss
out
fadd
call
jp
lret
add
sub
and
ret
lods
shll
imul
mov
cmp
and
scas
adc
repnz
pusha
out
repnz
sahf
test
aad
lcall
rorl
in
js
lea
testl
dec
mov
pusha
in
fists
push
cmovl
out
xchg
leave
pop
sub
push
mov
xor
pusha
aaa
insl
daa
cwtl
jge
xlat
sbb
aaa
sub
subb
call
das
inc
fcomip
push
dec
std
vmovsd
mov
in
in
mov
jnp
adc
mov
push
pop
inc
idivl
add
push
xchg
inc
mov
icebp
imul
std
xor
xor
jo
ja
mov
mov
or
cwtl
cwtl
jmp
popf
mov
sub
ljmp
adc
sti
or
mov
adc
fidivrl
in
sbb
sbb
sti
bound
rcrb
inc
cmp
cmp
xor
lret
inc
pusha
pushf
ffreep
ss
hlt
pop
jno
movsb
lock
sbb
pusha
mov
fnstcw
test
aam
jge
insb
lcall
aaa
mov
es
repz
shll
aas
scas
dec
imul
xchg
or
dec
add
dec
roll
stos
push
push
mov
outsl
dec
sbb
mov
loopne
adc
adc
iret
adc
gs
sbb
xor
sub
popa
js
fbld
outsl
test
rcr
sbb
sub
scas
mov
mov
or
jbe
leave
xor
ja
jne
sbb
stos
mov
icebp
mov
shll
add
leave
mov
rorl
or
adcb
inc
leave
and
aad
imul
jecxz
sub
or
dec
mov
data16
add
gs
inc
adc
push
xor
xchg
scas
inc
pop
mov
cmpsb
inc
inc
jle
mov
cli
push
jae
xor
fisubrl
mov
jns
inc
jge
lret
push
bt
push
es
push
shll
adc
lcall
push
adc
mov
or
or
sbb
daa
mov
jp
outsb
xlat
mov
dec
pop
and
xchg
or
stos
ret
mov
outsb
int
jne
mov
mov
jle
push
push
sub
or
dec
jno
lcall
or
add
xor
outsb
sbb
in
iret
lret
ljmp
hlt
pop
addb
pop
jl
xchg
xor
gs
pop
sarl
movsb
sbb
or
addr16
sub
jo
fdivrp
mov
sbbl
ret
or
and
or
leave
repnz
jp
mull
mov
add
dec
cmpl
xchg
out
imul
cld
jns
push
push
jae
pop
push
pop
neg
mov
pop
xor
inc
sbb
fsubl
mov
imull
jb
loop
mov
lock
fiadds
loop
ficompl
movb
inc
pop
loope
sub
jecxz
aas
imul
jge
cmp
mov
fstl
call
jb
jge
cmp
pop
mov
mov
addr16
test
jne
aas
jmp
xchg
mov
roll
jbe
xchg
jns
ds
dec
movsl
insl
shll
not
movsl
mov
sahf
shrl
dec
inc
sbb
pushw
ret
popa
cmp
inc
adc
sub
sub
jl
jge
mov
loopne
sti
test
mov
cmpsb
dec
sbb
in
ja
sub
push
push
cmpsb
fs
xor
test
aam
sub
xlat
out
fwait
or
aad
add
shl
mov
cwtl
popa
push
push
sbb
pop
cld
pop
pop
or
jns
cmp
mov
sub
test
push
je
scas
inc
and
out
popa
mov
leave
dec
mov
repnz
and
aaa
and
rclb
out
pop
cli
cld
sub
scas
push
repnz
sbb
xor
jae
cmpsl
fwait
addr16
aam
cmp
push
enter
mov
inc
and
pop
nop
std
adc
int
push
mov
adc
mov
sbb
std
mov
test
popf
mov
cli
test
xor
loope
xor
cltd
mov
xchg
insl
push
mov
push
sbb
add
jmp
mov
and
add
xor
ljmp
cli
pop
mov
jg
cmp
mov
xchg
push
imul
push
push
dec
mov
mov
mov
pop
shll
test
push
xor
data16
je
add
xchg
add
lds
add
stos
in
mov
mov
and
dec
adc
inc
xchg
ret
sahf
rorb
out
nop
inc
and
cmp
jp
push
add
adc
sub
fcmovnu
test
xor
fcomps
fisttpll
pushf
or
test
xchg
das
push
outsb
push
sbb
lods
cltd
repz
or
sub
in
and
stos
xor
push
and
push
pop
movsl
lcall
lea
xchg
push
cmp
js
icebp
stos
push
sub
push
mov
jge
stc
dec
shll
mov
xor
mov
jne
pusha
add
loope
shrb
pop
inc
adc
sub
repnz
mov
out
aas
add
dec
sarl
jb
jecxz
mov
ss
cmp
jl
aad
mov
mov
push
add
cmp
add
sub
adc
mov
ds
hlt
pop
test
pop
test
ja
inc
mov
into
mov
pop
jg
add
jp
mov
scas
push
lret
mov
push
or
sub
push
mov
or
xchg
shrl
jb
jae
arpl
sub
addr16
pop
lock
stos
mov
pop
fists
movsb
std
jae
inc
xchg
int
sarb
add
mov
pop
int
das
mov
pop
shll
or
adc
cmc
push
inc
jne
inc
cmp
sub
xor
das
inc
test
sub
push
and
xchg
push
pop
and
lea
cli
sbb
add
arpl
pop
pusha
lods
add
sbb
repz
and
nop
je
sbb
aas
xor
inc
shlb
sub
mov
mov
xchg
mov
inc
insl
inc
dec
cmp
mov
ror
cmp
icebp
lret
xchg
mov
jo
std
ficoml
mov
dec
pop
loop
aad
movsl
sbb
adc
sbb
in
jno
hlt
movl
addr16
mov
or
std
sti
jnp
cmp
lret
lahf
pop
sbb
adc
fwait
je
jmp
fwait
cmp
daa
cmc
ja
jl
jl
inc
or
xchg
xchg
push
mov
mov
xchg
dec
cmp
inc
add
stos
pop
or
pop
pop
jbe
cltd
xor
mov
in
ss
push
jg
push
jns
and
mov
lea
jmp
xchg
push
insl
or
pushf
std
insl
mov
xor
pop
jmp
sbb
cmpsl
test
ds
rorl
cmpsl
push
push
or
cmpl
loopne
aam
roll
ljmp
dec
ret
popf
shll
xor
sahf
push
push
popf
xchg
cmpb
ficoml
mov
cmpb
push
add
pop
mov
subb
dec
sti
xor
cmp
aad
movsl
sti
push
add
inc
and
dec
aaa
push
mov
mov
in
xchg
dec
push
adc
fldenv
scas
and
lcall
cmc
and
cmc
imul
or
mov
pop
sub
xor
adc
or
cmpsb
dec
js
mov
std
cli
mov
rolb
gs
inc
push
and
cmp
mov
ss
es
add
push
mov
out
add
cmp
inc
dec
ret
adc
push
pop
and
stos
ret
mov
add
xchg
fistps
push
add
lret
push
and
int
inc
dec
sbbl
mov
test
cmc
fists
das
sub
or
mov
mov
int
mov
xor
ret
scas
aam
jg
mov
sbb
dec
mov
test
sub
andl
fdivrl
out
pop
jne
cmpsl
cmpsl
xor
jmp
sbb
rol
mov
frstpm(287
jp
lcall
add
pop
sub
imul
sbb
lds
add
cwtd
sbb
xchg
test
cld
aaa
pushf
loope
xlat
popa
in
sti
jmp
clc
outsl
es
jle
cmpsl
mov
sub
jbe
int
dec
test
mov
cld
sbb
ljmp
js
push
xchg
push
shlb
xchg
sti
lds
xor
dec
push
in
stos
sar
and
adc
repz
rcll
leavew
out
add
in
out
mov
pusha
inc
lods
pop
push
cmpsb
xchg
scas
xchg
lock
aas
popa
mov
xor
cmp
xor
cmp
cmc
int
or
jp
cmpsl
xchg
inc
jae
cmp
mov
lds
outsl
adc
rol
jmp
push
in
and
lock
mov
popf
xchg
mov
loope
mov
push
push
insb
aad
sbb
xchg
pop
je
insl
adc
ds
es
lahf
push
dec
fstl
hlt
fcoml
lret
stos
dec
std
push
or
jle
or
aas
push
insb
sbb
repnz
pop
pop
xlat
pusha
notl
xchg
ret
xlat
xor
xor
mov
mov
pusha
inc
fildll
dec
pop
push
popf
daa
mov
nop
jne
lahf
cmpsb
movsl
push
shrb
cld
lds
insb
es
jg
fsub
imul
push
lea
sbb
mov
dec
jo
push
fbld
int
stos
dec
inc
pop
xor
mov
mov
arpl
shrl
cmovne
and
mov
mov
add
test
and
mov
shrb
xlat
fcoms
lcall
add
cltd
fsub
sub
xor
cmc
xlat
mov
sub
lea
mov
imul
jnp
bound
fwait
shrl
es
xor
xlat
ja
add
mov
push
sbb
rorl
and
fldenv
les
ffreep
mov
adc
sarl
add
test
enter
mov
cmp
xchg
inc
sti
sbb
aaa
leave
lods
or
mov
xor
adc
sbb
outsb
movsb
jb
inc
lods
mov
cmpb
lods
and
cltd
ja
inc
pop
or
push
loop
jecxz
or
add
jae
mov
sbb
mov
scas
cmp
gs
push
inc
cmp
rclb
xor
aaa
pop
cmp
push
dec
xor
inc
mov
lret
push
pop
pop
aam
xor
dec
je
mov
lock
push
out
inc
pop
shrb
cld
std
jmp
inc
addr16
push
std
movsl
inc
mov
mov
add
jne
lock
rcr
popf
and
inc
or
ja
adc
dec
stc
testl
aad
sbb
dec
mov
fdiv
xchg
pop
inc
sub
aas
push
pop
rorb
aaa
fcomps
jbe
cmp
dec
test
pop
xor
cmp
in
rclb
imul
cmpsb
xor
ljmp
mov
push
xchg
ficomps
ja
outsb
stos
adc
dec
aad
lock
aas
push
fisubs
sbb
xor
push
shrb
pop
mov
imul
inc
gs
mov
mov
call
or
inc
adc
in
out
lahf
or
jbe
and
int
ljmp
lahf
push
cwtl
hlt
stos
aam
inc
and
push
xlat
lods
xor
jns
dec
jl
cmp
or
lret
call
lods
xor
xor
cs
sbb
mov
int
xlat
mov
jns
or
sub
push
daa
jle
inc
movswl
or
sbb
sub
shrb
push
dec
jmp
xor
push
lea
nopl
cwtl
push
and
sub
mov
cmc
iret
aaa
in
mov
mov
stc
pop
mov
sub
lock
lcall
inc
xchg
fwait
popf
mov
dec
repnz
test
sbb
mov
shll
out
or
sbb
dec
add
les
xor
call
fcoml
adc
icebp
andl
push
fwait
out
xchg
fdivrl
cs
pop
jg
push
push
into
xor
roll
cmp
jnp
pop
xchg
push
outsb
fdivs
jg
ficoml
mov
jg
test
pop
pop
sub
inc
push
sub
subl
xor
in
scas
arpl
imul
sarb
push
mov
sbb
lret
test
lahf
test
xlat
out
arpl
out
fistl
sub
test
jg
sub
sti
lcall
mov
mov
xchg
push
push
jae
fucom
sbb
hlt
or
xor
cli
adc
hlt
icebp
daa
mov
xor
or
sbb
mov
insl
sub
xor
sub
xor
stos
dec
test
push
repz
pop
jb
sbb
xor
das
inc
enter
or
mov
mov
and
scas
inc
push
xor
outsl
pushf
aam
jne
jbe
icebp
dec
pop
mov
rcrb
inc
mov
stc
aam
fbstp
into
faddl
mov
or
inc
cmp
xchg
mov
aam
mov
loope
popf
adc
and
test
push
and
lret
jmp
xor
sub
sbb
mov
lret
fwait
adc
fcmovnbe
out
xchg
int
jecxz
stos
aaa
scas
fistpl
cli
or
iret
and
ret
ljmp
dec
add
push
or
imul
xchg
shrb
or
xor
jecxz
adc
shll
cmpsb
mov
insl
inc
xor
xor
mov
mov
std
fsubrp
and
jnp
inc
jge
mov
mov
fstpt
cvttps2pi
xchg
xor
inc
or
ja
leave
ja
ljmp
call
lret
mov
nop
fsts
and
aam
xor
ja
test
mov
stos
push
pop
and
push
aas
mov
push
jecxz
push
sbb
dec
lret
rcll
jb
scas
pushf
push
xor
in
fwait
sbb
call
int3
scas
mov
stos
cmp
into
or
dec
out
mov
mov
lret
test
cmp
imulb
loopne
cmc
push
sbb
xchg
lret
popa
adc
mov
xchg
sbb
shlb
aaa
data16
push
adc
push
movsl
push
movsl
mov
jmp
xchg
and
push
out
push
jns
cltd
jnp
insb
xchg
or
and
je
cmpsl
lods
cmp
inc
mov
pop
mov
fbld
cmc
bound
mov
stos
std
insb
jns
vaddsubpd
jge
fcoms
mov
push
test
ja
loope
xchg
sub
cmp
mov
icebp
int
fwait
inc
mov
dec
or
cmpb
or
add
ss
fs
pusha
sarl
lahf
in
cs
mov
call
dec
lahf
loop
inc
outsl
data16
cmp
cwtl
jne
mov
xor
dec
call
jmp
jns
jp
int
ljmp
mov
mov
or
repz
popa
jno
adc
hlt
movsb
in
ret
jo
insl
pop
sbb
sub
lret
xchg
inc
jnp
rcll
fidivl
sbb
or
sbb
or
jl
fnstsw
lahf
and
sar
movsl
cmp
or
sahf
jno
andb
adc
addr16
or
pop
aad
cmp
pop
xlat
insl
das
mov
mov
insl
js
pusha
lret
cmp
or
or
cmpsl
popf
aas
rclb
ja
add
pop
mov
dec
mov
js
add
rorb
mov
pusha
push
and
shl
jnp
push
aas
sub
xchg
dec
mov
test
sub
mov
mov
cmp
orb
inc
inc
fidivrl
lret
arpl
int3
xor
push
cmp
test
jnp
pop
pop
push
pop
push
in
and
jmp
sbb
pop
inc
dec
and
cmp
dec
addb
ret
or
jle
add
dec
xor
scas
adcl
cmp
cmp
xchg
xchg
sub
mov
cli
xlat
repz
cmpb
inc
je
pushf
add
jbe
rcrb
inc
push
jo
testb
aam
pop
ja
enter
jno
es
pop
fisubl
mov
loop
jp
inc
mov
test
fwait
sbb
jnp
push
pop
add
and
jge
stos
fldt
jo
cld
add
sarb
dec
push
push
xchg
dec
lods
and
inc
negl
fstpl
sti
push
insb
push
shrb
lcall
cli
sbb
xor
mov
inc
cmp
cli
mov
mov
jle
lods
adc
arpl
fstpl
mov
mov
mov
adc
jecxz
lock
test
push
xchg
fstl
out
cs
dec
pop
adc
dec
push
insl
rorb
shrb
nop
outsb
fnstsw
bound
cmp
add
mov
pop
inc
mov
mov
repz
and
popf
inc
mov
popf
fsubl
hlt
pop
xchg
loopne
xchg
jg
jo
sbb
inc
leave
out
movsl
xor
dec
mov
loope
cltd
xchg
nop
pusha
fisubl
xor
mov
push
inc
xchg
and
xor
lods
cld
stos
stc
adc
in
push
adc
nop
mov
out
fsubrs
dec
mov
push
test
loopne
pop
mov
cmp
movsb
rolb
bound
sub
xor
ficoml
push
mov
fists
sbbb
fsubrp
insb
test
or
in
add
pop
add
int
pop
fisubrs
shl
out
enter
test
or
sarb
and
mov
xor
test
pop
rorb
push
mov
jo
cld
test
adc
xor
sbb
xor
pop
loopne
int3
or
arpl
pop
and
cli
inc
mov
pop
rcl
add
push
jno
sub
sbb
negb
add
push
out
xchg
sub
and
movsl
push
xchg
clc
pop
lret
push
mov
dec
inc
sbb
add
inc
push
dec
pop
or
jbe
pushf
sarl
add
xor
aas
pop
insl
add
sbb
pusha
pop
and
mov
jno
xchg
enter
jne
push
or
jnp
scas
pop
jl
inc
sbb
loopne
cli
dec
xchg
fmuls
loopne
mov
inc
inc
sbb
push
add
inc
pop
push
mov
imul
pop
jge
inc
cmp
shll
or
xor
les
imul
inc
sbb
outsl
push
lods
or
lret
rolb
ds
sbb
daa
aam
mov
sub
sub
outsb
in
xor
fisttpl
sbb
jg
mov
aam
ds
mov
add
movsl
stc
add
fldlg2
mov
call
xor
pop
adc
cld
push
sub
add
mov
stos
int
cltd
inc
ljmp
scas
cmp
xor
lods
leave
sub
jo
xor
shll
outsl
or
xchg
mov
lock
mov
dec
jmp
sarb
mov
and
adc
mov
sti
mov
out
mov
mov
lret
jae
xchg
cwtl
insb
sbb
or
imul
imul
fdiv
rclb
xlat
inc
popf
test
aas
mov
jge
mov
mov
xchg
outsb
cltd
popa
sbb
andb
cmpsl
out
and
mov
push
adc
fwait
dec
je
cmp
pop
cwtl
mov
ret
lret
cmpsb
and
das
dec
cmc
leave
inc
dec
into
lods
xor
push
shlb
lcall
push
iret
dec
jle
push
push
rorb
mov
jo
jmp
mov
push
push
mov
ret
sbb
ljmp
js
mov
insb
ret
ja
push
pop
ret
jmp
push
inc
int
aaa
dec
insb
sbb
shrd
popf
or
in
jb
stos
lret
mov
add
sub
sti
pop
add
xor
int
fs
pop
out
lods
aam
ret
ja
fdivrp
movsb
pop
cld
push
and
repz
push
stos
sub
idivl
pushf
popl
jecxz
mov
jge
sub
pop
adc
cltd
popa
push
popa
mov
pop
jp
pop
fisttpl
in
aam
scas
inc
push
outsl
outsl
cmp
jno
push
lahf
pop
mov
xor
xchg
lea
push
fadds
icebp
test
gs
mov
mov
lcall
or
jp
mov
jno
test
call
push
movsb
js
push
test
mov
rorb
sub
ret
mov
lret
add
mov
leave
mov
xchg
mov
fisubrl
push
and
addr16
test
cmp
fwait
rcrl
sub
and
outsl
cmp
inc
mov
push
lds
jg
fsts
pop
pop
cmpb
data16
sbb
test
movsb
mov
pusha
sti
push
mov
test
mov
loop
or
fcoml
aam
pop
and
mov
loope
or
sbb
imul
inc
bound
cmp
pop
cmp
fistps
aad
ret
sub
ret
cmp
and
xor
inc
and
pop
jmp
cwtl
sub
test
repnz
jmp
push
sti
in
xchg
xchg
sarb
test
movsl
add
in
aaa
or
push
mov
sbb
pop
pop
xchg
and
xor
push
jmp
inc
sti
leave
shrb
out
testl
pop
shrl
pop
scas
loop
mov
andl
dec
icebp
aad
or
push
adc
pop
sub
loope
xor
ds
inc
lods
daa
fs
outsl
imull
jmp
ficoms
icebp
dec
fwait
push
in
mov
jnp
cli
popa
mov
leave
mov
movsl
xchg
ss
out
or
xchg
repz
xchg
fstps
ja
in
mov
sbb
mov
fwait
movsl
pop
and
mov
sti
xchg
xor
mov
mov
add
insl
push
dec
out
clc
push
mov
mov
jmp
sbb
ja
jnp
pop
adc
dec
mov
mov
sbb
push
aad
xor
lock
fs
cmc
in
cmp
or
and
addr16
into
dec
popf
stos
pushf
add
mov
es
scas
lcall
addr16
inc
dec
cmpsl
idivb
jle
xchg
add
dec
sbb
dec
xchg
outsb
pop
sbb
inc
int3
and
adc
mov
jnp
imul
jno
add
inc
push
pop
sbb
mov
or
aaa
lods
xchg
mov
push
in
out
gs
fdivrs
dec
aaa
sbb
cmp
jecxz
pop
fdivl
cmpsl
cmp
push
sbb
xchg
xchg
mov
pop
sti
dec
or
loopne
mov
aam
cmp
mov
testb
fstpt
dec
dec
ret
dec
mov
iret
test
push
cmc
addr16
push
xchg
cwtl
outsl
test
lock
sbbb
adc
mov
sbb
ja
lds
dec
pusha
js
xor
arpl
ljmp
sbb
xor
daa
test
sarb
add
ret
pushf
sbb
xchg
std
mov
aam
lods
insb
in
fists
push
lds
add
mov
dec
push
inc
lea
outsl
add
pop
ret
insb
enter
or
sbb
xor
sub
repnz
mov
push
loop
dec
jp
jno
fsubrl
movsb
fldl
sbb
es
mov
mov
xchg
cld
ljmp
xchg
xor
push
gs
aaa
loopne
ljmp
xor
pop
mov
dec
inc
mov
cld
mov
mov
inc
sbb
fs
sub
je
pop
push
es
inc
les
imul
fbld
pop
lahf
push
cli
popa
insl
out
jl
into
jns
inc
pop
in
mov
mov
mov
cmpsl
mov
cwtl
cmp
jno
insl
jmp
je
cltd
stc
insl
call
lcall
leave
fistps
or
mov
push
rolb
jne
lea
lods
cld
ljmp
xchg
mov
stos
aad
cmp
inc
sub
cmp
push
inc
mov
xchg
int
arpl
ret
fdivs
int
in
push
add
aas
loope
gs
adc
lcall
inc
xor
in
bndstx
call
pop
repz
jb
mov
add
test
and
loopne
and
mov
adc
mul
adc
mov
orl
cmp
push
mov
mov
jnp
sarl
movsl
bound
fbld
fildl
scas
push
nop
xor
cld
lock
add
xchg
push
sbbb
or
mov
or
out
cli
call
std
jmp
cmpsl
lcall
lds
jne
jp
mov
jl
mov
and
lret
loop
inc
leave
dec
mov
mov
mov
dec
and
gs
mov
add
xchg
mov
inc
cmpsl
and
aam
pop
stc
sub
pop
les
cmp
inc
pop
sub
mov
cmp
and
or
movsb
jmp
int3
add
jecxz
inc
xchg
push
movl
lret
cmpsb
jmp
ljmp
or
ljmp
add
arpl
push
jb
mov
push
insl
fisubl
adc
iret
jle
mov
mov
mov
push
add
xor
jno
imul
jmp
lods
jle
test
call
xor
adc
mov
out
es
and
loopne
mov
or
dec
mov
inc
insl
jg
nop
gs
dec
ret
sbb
sub
pop
mov
xchg
fs
jl
popl
rcrb
data16
test
arpl
mov
xchg
xchg
sub
mov
aas
mov
mov
mov
push
add
push
mov
std
lret
and
mov
dec
test
test
jae
loope
adc
aam
mov
sbbl
sbbl
es
loope
xchg
cmc
cmpsb
mov
iret
arpl
push
cmp
addr16
setg
stos
test
std
pop
inc
jg
fcom
loop
push
push
ret
add
jns
jle
test
push
or
or
iret
dec
or
bndldx
popa
xor
mov
mov
lea
inc
adcl
sub
bound
call
mov
add
adc
testl
mov
subl
imul
rcll
cltd
scas
ror
and
mov
andl
inc
mov
clc
cmp
and
and
xchg
les
mov
aaa
pushf
mov
cmc
outsl
aas
add
data16
adc
inc
inc
mov
mov
sub
adc
add
lds
mov
cwtl
jmp
inc
and
loopne
das
sub
arpl
cmp
hlt
movsb
pop
mov
pop
sub
xorl
sbb
cmp
xor
jnp
mov
pop
push
fwait
jle
dec
lods
inc
xlat
or
inc
ficoms
fmulp
and
and
in
mov
xchg
adc
pop
mov
negl
aam
bnd
test
mov
pop
sbb
aas
add
and
jecxz
mov
ret
ja
xchg
mov
dec
cmp
gs
pop
popa
int3
lods
fcmovb
inc
lods
fstl
cmp
into
mov
push
and
push
inc
jle
fmul
repz
xchg
mov
rolb
inc
shlb
jmp
loopne
fs
push
mov
pop
push
incb
mov
push
cmp
inc
xchg
or
adc
mov
scas
pop
lods
xchg
mov
ficoms
jle
jne
jnp
pop
ss
fildll
mov
into
push
xor
popf
ret
lahf
xchg
int3
jb
xchg
pop
cmp
xor
lea
mov
or
xlat
push
les
dec
movsb
subb
jmp
lods
jns
lea
jl
cmp
inc
es
rol
push
pop
lods
mov
pop
cmp
jge
dec
roll
cmp
mov
jg
pop
push
mov
jmp
les
in
fsub
fcompp
in
push
lea
ss
shl
mov
lock
push
inc
pushf
xor
jp
dec
pop
jo
aas
clc
cmp
idivb
jl
adc
les
cld
jmp
imul
push
or
push
cmp
lock
mov
pop
inc
dec
in
inc
cmc
fcmovnb
fdivs
lea
mov
sub
repnz
add
sub
clc
xchg
insb
out
movsl
out
popf
sub
dec
pop
mov
mov
or
lock
push
out
jl
jae
pop
mov
dec
jo
testl
in
xor
aad
dec
loope
lock
push
fs
mov
push
or
in
ja
je
ds
xchg
jno
mov
pop
jg
ret
push
enter
hlt
sti
std
pop
pop
fmull
test
sbb
ret
push
es
xchg
ret
rol
jl
sub
je
adc
gs
adc
popf
adc
fmuls
mov
jle
jns
loope
rcr
lret
ret
sarl
jle
loop
mov
scas
jg
shlb
ljmp
push
test
xorl
fldenv
mov
loopne
inc
jnp
dec
jp
jmp
dec
cmpsb
lods
mov
aam
out
pushf
adc
xor
dec
pop
sbb
push
dec
jae
and
shlb
adc
pop
cld
subb
push
cmp
or
adc
cmpsb
fistpl
mov
in
push
or
push
xor
push
inc
inc
mov
std
scas
jge
cmc
into
stos
inc
push
sbb
mov
mov
inc
and
lea
push
shl
jmp
cmp
pop
mov
sub
scas
add
shlb
loop
pop
fidivs
arpl
int
fs
xchg
pop
jne
pusha
mov
inc
loope
or
nop
stos
mov
and
shll
dec
or
adc
mov
mov
pusha
mov
icebp
sbb
xor
add
push
lds
cmpsl
add
sub
pcmpgtw
ljmp
and
xchg
pop
rcll
fistps
rcr
jg
push
movsb
out
popa
lods
cld
cmc
mov
pop
add
lret
pusha
add
into
out
out
jecxz
cmp
addr16
lret
add
arpl
ret
bound
stos
fisubrl
icebp
dec
mov
fildll
lret
scas
sbb
xor
pop
pushf
xchg
std
mov
orb
outsl
push
cmc
xchg
cmp
push
fs
les
xor
add
xor
mov
xor
dec
call
in
fbld
push
pop
adc
int
das
hlt
hlt
mov
loope
sub
push
adc
push
inc
sbb
mov
imul
fdivl
test
adc
dec
fsubl
push
cmp
adc
es
mov
cmp
sbb
jo
popf
int3
fmulp
sbb
pop
sub
in
loope
fadds
aaa
adc
call
jmp
test
clc
cs
or
ret
dec
jbe
push
aam
inc
rolb
add
adc
mov
je
adc
pop
sete
enter
and
dec
pop
sub
aas
fcomip
push
leave
cmp
push
dec
imul
mov
dec
lret
jns
data16
jecxz
test
insl
mov
rcl
pop
mov
sbb
rorb
mov
popa
movsb
ret
mov
sbb
xchg
sub
iret
ficoms
lea
addl
fsubrp
or
mov
cltd
outsl
cli
jb
or
ss
pop
and
mov
or
mov
mov
mov
mov
es
push
cmp
jne
sub
popf
out
push
add
push
push
xchg
pop
and
int3
add
cld
push
mov
inc
xchg
xor
pop
aas
loopne
das
dec
jnp
test
sub
cmp
inc
test
mov
imul
lock
add
outsb
jp,pn
or
cltd
stos
or
push
filds
popa
lea
mov
mov
mov
leave
sbb
pop
clc
dec
popf
movsb
in
cwtl
outsb
mov
es
movsb
inc
inc
and
pop
adc
call
xchg
inc
mov
fwait
pop
lods
in
lods
stc
push
ja
sti
ror
jns
cld
push
jp
jge
cmp
mov
inc
push
xchg
mov
push
mov
je
out
imul
movsl
je
push
jp
sub
pop
adc
mov
je
call
insb
adc
mov
or
inc
push
dec
cmp
scas
mov
in
jecxz
testl
ficoml
lock
out
and
push
rolb
inc
addr16
and
inc
mov
sti
mov
mov
inc
cld
or
out
fwait
push
and
cwtl
and
push
aam
outsl
mov
jno
divb
and
xchg
int
xchg
mov
jge
pushf
rcr
xlat
fdivr
pop
hlt
cmpsb
cwtl
std
ret
sahf
mov
jnp
loopne
sbb
sarb
sbb
test
xor
call
mov
sarl
daa
dec
push
add
mov
mov
fdivl
jecxz
decl
ret
or
hlt
aaa
mov
xor
aaa
add
add
sub
aaa
xchg
pop
movsl
lret
fildll
sbb
out
fs
jo
sbb
inc
dec
cmpsb
ds
out
negl
movsl
lret
add
clc
dec
fnstsw
add
in
xchg
bound
xchg
repz
pusha
push
cmp
imul
push
cmpb
icebp
decl
dec
and
mov
add
testb
out
xchg
mov
ja
movsl
out
jl
rcrb
push
push
shl
mov
stos
lahf
inc
sbb
fabs
jecxz
aas
sub
mov
shr
cwtl
rcl
test
sub
sahf
insl
lock
inc
cmp
mov
setnp
cmpsb
into
repz
adc
jge
cmovl
fcmovnu
push
mov
cli
popf
push
mov
fcoml
adc
cmp
ljmp
loopne
cmp
push
dec
ljmp
rclb
loope
xchg
mov
add
push
jle
imul
mov
out
jg
rcrb
and
and
jns
inc
fwait
sbb
jne
divb
out
int3
add
cmp
mov
mov
xchg
mov
pcmpgtb
lret
push
pop
adc
rcrl
ja
rcll
sbb
sbb
inc
push
lock
jl
orb
pop
jmp
das
sub
fwait
push
cltd
xor
cmp
jns
test
lret
xchg
dec
or
xorb
ds
mov
push
inc
movsb
aad
mov
int
sbb
push
or
popa
inc
mov
pop
jae
xchg
xlat
clc
add
outsb
inc
xchg
jae
daa
mov
or
and
psrld
nop
ja
jle
jp
cmp
iret
repnz
add
scas
leave
xchg
lock
shll
pop
je
pop
pop
pop
jle
sbb
aad
mov
and
mov
rolb
push
jg
dec
push
nop
out
dec
dec
lds
std
add
repz
outsl
ss
sbb
xchg
add
jbe
fwait
imul
out
xor
mov
sti
push
mov
add
xchg
jbe
into
movb
add
sahf
xchg
insb
ljmp
sbb
mov
push
test
aas
cmp
jmp
shrl
mov
pop
xchg
mov
lea
leave
cwtl
sbbb
fwait
popl
inc
mov
pop
add
sarl
lds
cmp
or
ret
ret
stos
ljmp
in
dec
mov
jno
jmp
and
bound
mov
aaa
pop
popa
insb
pusha
dec
sub
or
sub
stos
xchg
pop
popa
jbe
pop
or
cmp
enter
sahf
mov
jecxz
out
inc
jp
mov
xor
cli
mov
clc
push
adc
fs
sbb
mov
outsl
fcoml
stos
and
add
dec
cwtl
xor
dec
daa
lods
scas
les
lcall
icebp
movsl
dec
and
mov
sahf
fdivrl
stos
add
scas
bound
add
mov
add
loope
fcomip
mov
std
add
xchg
inc
movsl
jns
pusha
xor
bswap
xchg
jle
pop
push
push
clc
mov
out
and
sub
loope
daa
shrl
add
mov
inc
sub
nop
fyl2x
dec
lret
rep
inc
mov
imul
outsl
push
xlat
rcl
rorb
mov
jecxz
roll
adc
jg
cmp
xchg
aaa
fcompl
adc
push
int3
mov
sub
data16
xor
or
popa
mov
or
xor
mov
nop
lret
fs
push
iret
or
iret
rolb
push
outsl
aam
add
arpl
dec
outsb
push
push
andl
push
fistps
ret
ss
push
sub
shl
in
nop
xchg
pop
adc
push
and
mov
jl
in
dec
pop
sahf
push
dec
adc
add
xor
dec
hlt
mov
xchg
das
stos
rclb
in
shlb
ljmp
push
inc
rorb
jle
loop
fistps
xchg
inc
mov
cmp
pop
sahf
pop
outsl
int3
push
mov
jb
movsb
pop
mov
es
clc
inc
push
cmp
adc
int
nop
sub
hlt
fisttps
sbb
iret
add
inc
xchg
push
testl
add
rclb
cmc
sahf
xchg
mov
pop
mov
hlt
inc
dec
cwtl
pusha
jbe
mov
in
fwait
outsl
movsl
bound
bound
sbb
push
push
add
mov
xor
js
add
adc
ud2
fsubrs
cltd
jmp
xrelease
out
popf
pop
call
mov
or
fwait
xor
or
add
push
movsl
ss
dec
add
adc
xchg
movsb
lahf
xchg
leave
mov
lahf
hlt
or
mov
and
jbe
repz
sbb
inc
mov
movsl
adc
jle
rorl
inc
insb
cmpsb
lock
hlt
arpl
shl
add
dec
int
pop
es
icebp
or
sbb
subb
fprem
mov
push
sarb
inc
out
cltd
js
add
xor
jae
inc
xchg
std
sub
pop
cmp
xor
fsubs
adc
xchg
test
jnp
pop
mov
repnz
aam
test
loopne
add
add
sbb
xchg
jno
cmpsb
push
insl
outsb
sub
cmc
xchg
adc
xor
pushf
xor
xor
fs
jmp
loope
xchg
pop
cmp
jge
mov
lcall
repz
cmpsb
je
fwait
jp
rol
fisubrs
ror
push
lahf
aas
cmpsl
sbb
lret
push
cmpsl
cmp
divl
push
mov
add
xchg
in
int3
loop
mov
sub
mov
aaa
xor
jge
inc
pop
cmp
outsb
add
xchg
jo
sbb
dec
xor
lods
ljmp
divl
jle
lds
xchg
or
ret
dec
movb
xor
aaa
jmp
and
sub
jae
cmp
and
cmp
jo
ja
cmp
cwtl
sbb
pop
dec
lock
adc
aaa
cmp
or
popa
subb
cmpl
js
and
popf
xchg
lds
sahf
xchg
mov
pop
aaa
insb
into
push
mov
jns
pop
fbld
mov
xor
push
pop
aad
in
sub
inc
mov
mov
xor
mov
mov
mov
adc
sahf
das
shll
jb
aam
sbb
and
repz
sub
loop
rorb
add
mov
out
cs
notb
imul
lcall
loopne
int3
jo
stc
cmp
jle
ds
ja
mov
adc
adc
and
sbb
mov
hlt
add
out
or
scas
shlb
add
inc
sbb
sub
ljmp
or
xor
mov
mov
mov
pop
push
dec
repz
mov
hlt
cmp
dec
lods
xchg
iret
inc
xchg
insb
jle
push
xlat
scas
jl
rorl
cld
es
push
ljmp
scas
popf
imul
sbb
pop
outsb
xlat
cs
cli
mov
test
stos
sarl
xchg
push
leave
cmpsb
pop
das
dec
or
mov
adc
outsl
pusha
out
repnz
lock
pop
xchg
push
popf
dec
sub
mov
jo
iret
mov
sub
jmp
jnp
cwtl
adc
addl
fs
adc
jle
pop
pop
adc
out
stos
dec
mov
cltd
jnp
fimuls
cmpsb
scas
sub
lods
loop
js
dec
lcall
in
push
mov
clc
into
js
inc
je
loopne
mov
sub
mov
popf
mov
xor
outsb
mov
jnp
rorl
add
jmp
or
mov
bound
sub
out
mov
lds
adc
sahf
outsl
push
fs
xchg
xchg
add
daa
sub
sub
xchg
push
xor
mov
dec
arpl
mov
inc
repnz
jmp
cs
mov
pop
xchg
aas
lods
push
lea
mov
test
sbb
loopne
push
aad
mov
cmp
fisttpl
fs
add
push
sar
pop
out
xor
inc
es
fsts
cmpsb
mov
addl
cmp
add
out
and
inc
add
mov
and
mov
inc
fsubp
mov
scas
push
jns
insl
mov
fwait
dec
dec
xchg
mov
les
fwait
adc
jns
fcmovb
xchg
push
jp
lcall
xor
lret
jmp
pusha
mov
inc
mov
sti
test
out
inc
jp
shll
mov
sbbb
push
mov
adc
cld
dec
cli
push
lret
pop
pop
or
addb
and
pop
xorb
add
xor
in
popa
das
lods
lret
inc
inc
mov
call
push
fwait
call
dec
mov
aaa
dec
jecxz
push
fidivrl
mov
mov
fs
or
in
ss
in
dec
mov
std
jo
xchg
bound
or
fsubrl
repz
wbinvd
pop
daa
pop
or
rcrb
mov
dec
cmp
pop
mov
cltd
pop
aaa
push
iret
outsl
mov
push
ja
call
push
js
push
insl
loopew
std
and
int
and
es
mov
lds
push
jnp
test
iret
je
push
imul
js
adc
jb
call
xchg
hlt
insb
mov
ret
pop
jno
imul
std
test
fldenv
mov
jl
pop
jbe
pop
or
jne
xchg
cld
pop
lds
in
lcall
inc
movsl
popa
divb
jg
imul
hlt
push
ficoms
add
adc
sbb
retw
sarl
jecxz
movsl
sbb
jge
xor
jae
ret
jle
mov
xorl
push
mov
mov
test
mov
add
jnp
pop
jbe
add
mov
mov
mov
stos
xchg
hlt
and
mov
push
jne
sahf
cs
out
jns
pop
repz
outsl
test
fiaddl
cwtl
insb
pushf
inc
mov
mov
push
and
movsl
push
adc
mov
push
stc
lcall
cmpsb
das
and
stc
and
add
cmp
int
lret
call
jmp
xchg
or
push
ds
lret
mov
dec
xor
jmp
jecxz
mov
mov
mov
dec
lret
mov
out
xchg
xor
repz
and
jge
shl
test
and
cmp
outsb
cmova
cmpsb
outsb
adc
sub
nop
mov
or
xlat
push
and
cmpsl
into
sub
lahf
inc
pop
hlt
jg
dec
mull
jae
and
lods
ljmp
add
leave
jmp
lods
addl
call
mov
adc
push
xchg
xor
scas
mov
inc
add
push
push
faddl
jne
adc
fs
or
jno
pop
lods
mov
add
int
add
outsb
clc
adc
into
and
xlat
in
jmp
add
es
inc
test
jae
out
into
clc
mov
int
xchg
sbb
pushf
scas
cmp
jnp
mov
pop
inc
jp
lret
cmc
jno
testb
imul
push
xchg
adc
aas
lret
push
xlat
aad
aas
pop
dec
mov
daa
or
add
imul
lea
xchg
xor
int3
xchg
fs
pop
hlt
mov
bound
cld
bts
decl
movsl
adc
jmp
jbe
jbe
call
cs
movsl
les
nop
xorb
inc
mov
sbb
mov
mov
sbb
mov
xchg
dec
mov
outsb
test
into
jnp
mov
outsl
push
mov
ret
cmp
add
sbb
ror
scas
inc
rol
in
bound
mov
mov
xor
sub
stc
pop
cmpsb
cmp
or
adc
jo
jecxz
mov
or
push
in
addr16
in
cmc
adc
or
jns
jns
jg
imul
push
rorb
punpcklbw
loope
icebp
pop
xchg
mov
xor
jbe
je
movsl
popf
mov
subl
jle
andb
pop
jmp
xchg
sub
fnstcw
sahf
aaa
stos
or
add
and
nop
xor
pushf
and
leave
sub
iret
lret
xor
hlt
movsl
lcall
mov
lret
lret
lods
adc
jl
pop
and
ss
xor
loope
xchg
aaa
lock
xlat
cmpsb
aaa
jecxz
and
adc
xchg
shll
insb
jle
imul
outsl
mov
ret
pop
adc
sub
sub
mov
aad
mov
sub
cltd
add
xchg
mov
arpl
mov
cmp
out
imul
addb
rclb
sub
test
loop
cwtl
jecxz
pusha
xor
subl
pop
int
xchg
gs
inc
xchg
adcb
mov
jecxz
repz
push
mov
xchg
imul
bound
sub
cmp
mov
in
ja
aas
cmpb
and
stc
dec
inc
lret
push
scas
mov
orb
fsts
std
xchg
out
dec
ret
dec
test
je
mov
ds
cmpsl
dec
aas
adc
scas
cmp
xor
jp
hlt
movsb
or
mov
pop
and
pop
js
add
inc
dec
xor
pop
sub
inc
jl
addr16
fstp
mov
and
mov
xchg
movsb
out
dec
or
pop
iret
add
jo
cs
ficoml
mov
jmp
xchg
imulb
stos
mov
cmpsb
adc
push
enter
sbb
jae
jbe
xor
jne
lahf
lcall
lods
js
call
leave
and
push
pop
imul
mov
out
adcb
sub
stos
add
aas
fsts
ret
daa
push
loopne
sub
fidivs
mov
xchg
xor
adcb
rol
bound
jle
popa
sahf
cli
push
icebp
mov
nop
or
xor
lds
xlat
fimull
cmp
jnp
xchg
xor
arpl
hlt
pause
les
sbb
rorl
jnp
xchg
adc
xor
cs
enter
pop
dec
pop
jb
scas
cwtl
cmp
mov
shll
dec
ret
lea
xor
dec
xor
cmpl
jnp
push
pop
jle
shrl
out
lcall
cmpxchg
rcrl
jge
add
and
push
movsb
pop
mov
mov
push
popf
mov
enter
cmc
sbb
jp
sub
enter
mov
and
or
push
cmp
pcmpgtw
push
in
pusha
in
out
aas
add
push
jnp
leave
lods
inc
lcall
xchg
xchg
in
daa
sbb
cmpsl
or
push
hlt
xor
add
add
inc
cli
or
adc
shll
aad
pop
fdivl
dec
lds
xchg
nop
xor
fldl
or
sub
xchg
iret
sub
orb
or
mov
and
test
push
test
ficoml
push
jnp
pop
cltd
mov
icebp
cmc
add
dec
std
popl
movsl
insl
and
xchg
add
adcb
test
jg
dec
cltd
push
std
dec
mov
sub
push
loope
les
jmp
in
or
xor
mov
hlt
ds
pop
std
or
cmp
cmpl
loope
sti
ret
notb
add
add
jns
and
mov
mov
arpl
in
icebp
or
cmpsl
mov
sahf
jns
test
mov
les
pop
xlat
movb
xlat
sbb
pop
sti
and
pop
fucom
mov
sbb
add
sub
fmul
outsl
push
jne
sbb
ja
gs
jl
cmp
sbb
in
cmpsl
add
dec
xchg
jg
add
daa
mov
push
iret
gs
sahf
je
cld
dec
xor
stc
mov
xchg
adc
jmp
and
dec
xchg
pop
or
add
cmpb
lods
sahf
jae
loop
add
pop
dec
mov
enter
leave
dec
imul
fcomi
jge
repz
cli
out
mov
ret
pop
test
jmp
sbb
insb
jno
push
xlat
loop
rcll
jne
push
pop
jge
mov
sbb
and
insl
aam
das
stos
std
or
imul
push
into
dec
lahf
cltd
pop
sub
aam
dec
inc
out
cmpsb
pop
int
and
mov
das
outsl
lcall
loop
stos
test
insl
pop
dec
add
jb
lea
inc
cltd
add
jmp
in
fs
dec
std
sub
mov
or
call
dec
mov
mov
mov
add
xor
jae,pn
jle
fistl
in
adc
outsb
enter
cmp
lods
cmp
cmc
xor
repz
add
ljmp
add
lret
cltd
popa
adc
jnp
or
les
repnz
add
mov
add
add
pop
xchg
and
mov
loop
push
mov
sbb
dec
enter
into
pop
mov
insb
cmp
adcb
call
arpl
sbb
frstor
jg
pop
cwtl
lret
ljmp
mov
mov
or
xchg
out
xor
movsb
cmp
testl
inc
adc
push
js
mov
movsb
push
rolb
pop
mov
push
mov
push
inc
push
lret
loopne
mov
add
xorb
insb
mov
add
mov
xor
repz
cmp
sub
add
mov
push
stos
fsubr
cmc
pop
push
or
lret
push
and
adc
push
xor
nop
imul
cli
jne
xchg
repnz
add
mov
fbstp
cmpsb
fs
xor
mov
sub
mov
push
gs
xchg
mov
jge
add
out
fcoml
jg
adc
loop
pop
inc
imulb
mov
mov
jno
mov
cmc
fsubrp
shr
cs
insl
outsb
lret
mulb
sbb
cmp
xchg
fistl
xchg
orl
fmull
jle
dec
inc
or
cmp
lods
mov
mov
pop
repnz
lret
repz
xor
lahf
cwtl
andb
ljmp
xlat
outsb
lret
mov
cmp
lds
mov
push
jnp
jmp
xor
sahf
xchg
cltd
hlt
loopne
sbb
sbb
test
inc
roll
mov
daa
popf
aas
adc
mov
dec
adc
popf
cmpsb
pmulhuw
int3
scas
xchg
movsb
or
pop
out
daa
mov
out
stos
repnz
cmp
in
stc
into
loopne
outsl
jo
jae
int
xchg
mov
cmpsb
push
outsl
sbb
mov
inc
cwtl
xor
ret
subl
clc
pop
adc
js
cmpsl
mov
into
imul
or
hlt
pop
and
push
clc
dec
in
repz
add
jns
inc
pop
sub
jle
or
rorb
dec
push
adc
xorb
sahf
iret
aas
cltd
push
mov
shrb
mov
or
or
xor
stc
and
test
adc
into
les
aaa
mov
push
add
ret
lahf
cmp
cmp
gs
and
addr16
push
add
xor
mov
fdivrl
and
adc
adc
movsl
cli
jg
arpl
movsl
xchg
ja
or
pop
ja
mov
or
cmp
cmpb
movl
clc
cmp
pusha
sub
cmp
sbb
repnz
lods
mov
inc
jnp
inc
out
xchg
das
inc
std
loope
int3
test
enter
cld
negl
pushw
ret
out
stos
ljmp
mov
out
lock
inc
insl
fisubrs
or
xchg
mov
xchg
inc
ljmp
mov
fcomps
imul
cmp
and
sub
popa
cltd
fwait
inc
pop
mov
xor
or
enter
fcoml
idivl
int
shl
je
sbb
xchg
shlb
ret
adc
in
cmp
rcrl
adc
jl
pop
test
push
cmp
lods
pop
cmp
push
mov
loop
lds
xchg
fldl
mov
mov
ja
movsl
hlt
out
adcb
push
pop
sub
dec
mov
push
push
dec
cmp
movsl
ss
sbb
push
std
jnp
push
sete
sub
pushf
mov
push
push
cmpsl
mov
mov
mov
stos
nop
daa
pop
movsl
int
mov
lea
mov
pop
xchg
add
ret
xor
mov
push
push
addr16
test
sub
adc
xor
pop
or
xchg
inc
jbe
gs
pop
in
movsl
aaa
sbb
fs
sbb
test
inc
push
call
xor
inc
fadds
fsubrl
xorb
je
mov
ja
notb
or
stos
mov
adc
incb
sbbb
cmpsb
idivl
adc
ljmp
inc
xor
repnz
pop
xchg
ret
dec
fcompl
cwtl
lods
xchg
add
mov
dec
add
icebp
sub
sbb
mov
and
mov
mov
xchg
mov
jo
add
push
iret
xor
int3
divl
lahf
shll
mov
aad
xchg
push
lret
stc
es
xor
jge
movsl
jge
scas
fsubrl
add
push
jnp
aaa
jne
enter
ret
push
testb
scas
mov
ss
xor
inc
or
inc
mov
push
and
shlb
loope
adc
pextrw
mov
dec
xchg
adc
int3
sbb
insb
pop
add
mov
popa
cmpsl
cmp
inc
lret
push
mov
lods
pusha
mov
mov
mov
sub
enter
mov
ret
das
push
ja
pop
mov
fsubl
in
push
sub
out
stos
jbe
or
push
push
cmp
in
xchg
cld
orl
ja
cli
jo
rorl
or
or
cmpsb
xchg
push
or
gs
jge
pop
rolb
movsl
into
or
andl
lahf
outsb
test
int
add
xchg
jg
adc
lods
lea
jb
push
and
pop
dec
incb
cmp
xchg
xor
repz
mov
pop
mov
jnp
mov
test
sbb
and
mov
cmpsl
mov
rorl
xchg
and
loope
sub
sbb
adc
inc
push
rorl
daa
push
ljmp
adc
jno
jge
movsb
imul
scas
sbb
fiaddl
pop
clc
or
mov
pop
arpl
ja
sbb
ljmp
add
add
dec
dec
int3
or
mov
in
out
sti
pop
or
in
pop
imul
dec
into
inc
stos
mov
and
faddl
adc
xlat
shll
repnz
xchg
mov
cld
inc
decb
jmp
mov
and
and
sub
mov
sub
iret
xchg
mov
cmp
andb
pop
xchg
dec
rolb
arpl
inc
adc
das
loopne
and
sub
mov
lcall
jne
xchg
enter
lcall
push
inc
mov
arpl
daa
addb
sub
jnp
sbb
ret
mov
and
cmpsl
lea
xor
or
repnz
fbstp
sbb
outsb
sub
aam
test
fisttps
sub
jbe
fbstp
mov
jae
cwtl
and
mov
sbb
imul
mov
mov
jb
or
xlat
jg
mov
pop
out
subl
rcll
movsl
lods
insb
loope
push
ss
fcom
movsb
gs
pusha
mov
xchg
in
nop
add
iret
lea
sub
sub
and
add
xor
es
out
jp
sbb
repz
xor
xor
addl
stc
mov
mov
out
imul
mov
in
dec
lds
inc
hlt
pop
push
mov
rolb
les
cld
and
pop
lret
dec
nop
jg
imul
dec
cmc
imul
mov
push
andnps
mov
ficompl
add
cmp
sar
inc
mov
jnp
push
hlt
std
pushf
cmp
mov
dec
push
inc
sbb
hlt
loop
push
mov
pushf
lcall
imul
enter
pop
xor
add
jmp
or
iret
addr16
cmp
dec
call
movsl
nop
inc
push
pop
iret
and
movsl
dec
pop
lcall
pop
sbb
test
lahf
lcall
pop
aad
aas
inc
and
or
clc
jmp
cmp
push
sbb
in
adc
jmp
mov
mov
fwait
repz
scas
adc
fwait
xchg
sub
xchg
or
xlat
hlt
les
outsl
enter
bound
pop
sbb
fwait
pop
push
adc
inc
lea
insb
lea
jbe
repz
sti
push
sub
in
into
pop
out
ret
jo
inc
fimull
nop
adc
fidivrs
xorb
add
repnz
mov
jae
in
mov
aam
adc
movb
cmp
insl
rcrl
lcall
adc
mul
loop
xchg
or
fimull
mov
rolb
hlt
bnd
xor
xchg
sbb
pushw
aas
cwtl
mov
add
mov
shl
sahf
mov
adc
mov
dec
cwtl
data16
xchg
xlat
movsl
push
addr16
sbb
inc
fdiv
and
dec
xor
xor
icebp
lret
inc
outsl
cmpsl
sub
jle
sub
fwait
push
shlb
mov
dec
cmp
xchg
lds
dec
adc
clc
push
lods
rcr
adc
rol
les
das
push
mov
pop
push
mov
mov
mov
push
sub
and
cmp
or
push
sbb
leave
xchg
arpl
xchg
shlb
dec
jl
fisttps
imul
lretw
jnp
cmp
clc
push
mov
jb
outsb
mov
repnz
or
cwtl
jns
pusha
xor
jb
xchg
pop
lock
outsl
pop
out
cli
push
pop
std
test
pop
jge
xchg
out
lcall
daa
cmp
xchg
cmpsl
xchg
mov
in
in
clc
xchg
mov
notl
dec
pop
in
inc
fcom
sar
push
sub
pushf
stc
ds
adc
js
xchg
fcmovnbe
sub
pusha
mov
rorb
adc
cmp
push
jl
and
or
mov
pushf
cmpl
xchg
mov
negb
notl
xchg
mov
in
in
jmp
xchg
test
xchg
loope
xor
mov
scas
test
sub
push
pop
cwtl
insb
imul
pop
divb
add
xor
daa
js
cmpb
or
cmp
mov
or
lcallw
xchg
repnz
call
ret
out
lods
aam
popf
sub
loop
dec
adc
jns
dec
fsubp
fwait
jne
pop
lods
test
xchg
mov
rolb
or
push
and
cmp
mov
pop
add
dec
jb
mov
or
mov
cmp
aas
or
enter
add
xchg
jne
push
mov
das
mov
jnp
cs
inc
rorl
inc
cld
cwtl
push
inc
shlb
stos
pushf
call
and
fldenv
jne
mov
in
cmpl
rorb
jp
push
fstps
xchg
test
push
and
add
pop
mov
mov
nop
inc
pop
xchg
sbb
nop
mov
cmp
loope
cld
mov
xchg
aad
pop
daa
imul
fstps
inc
inc
ja
fcos
or
jns
adc
cwtl
setge
dec
push
push
mov
and
push
mov
adc
popa
nop
js
or
popf
addb
ljmp
xor
scas
movsb
inc
aam
lea
push
or
stos
dec
mulb
mov
rol
test
sub
jle
jno
pop
mov
sub
ret
sbb
inc
xchg
in
fnstenv
and
shl
stos
dec
cs
stos
jae
xor
rorl
clc
sbb
push
sbb
test
popa
bound
mov
dec
add
sbb
mov
call
dec
shrb
shl
in
cmp
dec
mov
inc
aam
repz
pop
sbb
xor
and
xchg
rcrl
inc
or
icebp
and
jnp
pop
cmpsb
jno
repnz
xchg
mov
inc
test
inc
out
jecxz
fsave
jmp
ret
aam
stos
lahf
test
leave
jne
jmp
sar
inc
push
jmp
scas
jne
push
cmc
mov
fnstcw
dec
movsb
stos
xor
mov
dec
add
ds
mov
push
sbb
mov
mov
xchg
fwait
andb
mov
add
cli
dec
icebp
repnz
popf
outsb
rcpps
adc
in
aas
outsl
inc
xchg
jno
cmp
insl
out
mov
cmpl
jle
or
cli
popf
fidivrs
int3
arpl
or
fcmovnbe
negb
adc
popa
lret
push
dec
push
pop
jne
subl
sarb
or
scas
test
scas
in
les
or
cwtl
imul
push
cmp
cmp
sbb
imul
sbb
popl
decl
and
xchg
xor
mov
fldcw
mov
loop
xchg
ljmp
push
mov
lret
fimuls
insl
pop
pushf
int3
das
cs
std
hlt
mov
pop
popa
in
jae
sub
pop
call
sub
mov
sub
jg
in
and
ret
hlt
sbb
dec
inc
cwtl
stos
dec
or
inc
push
dec
out
mov
ret
incl
xor
notb
add
repz
jnp
dec
enter
mov
js
iret
hlt
or
ret
data16
mov
scas
pop
cmp
adc
inc
sub
xchg
cmp
cmp
js
test
adc
xorl
xor
andl
xchg
test
shll
xchg
int3
in
les
ret
add
bnd
mov
sbb
addr16
pcmpgtd
jae
clc
test
loop
inc
clc
loope
mov
push
out
inc
bound
cmp
mov
cmpsl
into
out
add
cmp
mov
xor
iret
jae
mov
or
out
mov
pop
mov
ja
hlt
dec
push
int
jp
xor
rcrl
lret
push
xchg
nop
dec
aad
incl
xchg
cmp
adc
jo
cmp
dec
enter
insl
shrb
xchg
dec
mov
sbb
mov
js
or
jge
pop
push
loope
ja
pop
adc
sbb
add
idivl
dec
add
inc
stos
in
adc
aad
aaa
into
outsb
icebp
pop
sti
test
inc
dec
mov
sbb
jnp
lds
dec
sub
push
ficoms
mov
xchg
or
loop
fwait
imul
loop
mov
test
and
int3
mov
lret
arpl
jns
lods
xor
test
movsl
adc
shrl
and
in
pusha
inc
sub
enter
cmp
or
adc
xchg
xor
or
cmp
mov
or
mov
hlt
pop
sub
adc
add
in
pop
sbb
rcrl
pop
ljmp
mov
mov
xor
push
push
test
es
sti
dec
pop
call
pop
xor
pop
jp
add
xchg
int3
fcoml
rorb
or
pop
dec
xchg
mov
cmc
push
xor
xor
adc
int
push
nop
imul
pop
ljmp
and
sahf
cmp
pop
in
ss
frstor
cmpsl
sub
cmp
out
cmpsl
and
add
sub
dec
outsl
es
fsts
es
mov
orb
xor
arpl
lods
sub
sbb
push
gs
arpl
lret
jl
sbbl
sub
cld
push
loop
push
fdivs
adc
lret
push
outsb
push
dec
or
scas
push
test
int3
mov
call
out
fsubrl
test
mov
mov
lcallw
inc
jg
je
sub
mov
bndstx
aaa
lret
mov
in
push
lcall
push
jecxz
xchg
cltd
fs
jno
jmp
ja
xchg
movsl
sub
scas
jo
and
jb
jecxz
ljmp
or
jnp
int3
in
arpl
cli
xchg
xor
call
jb
pop
lods
add
adc
push
xchg
int3
mov
xchg
xor
and
lret
xchg
mov
call
ret
xchg
lret
adc
clc
pop
mov
jge
dec
add
jmp
fnsave
inc
stos
inc
aas
sbb
mov
ds
push
cmp
pop
mov
jmp
sahf
lea
fucom
imul
sub
test
mov
cmp
jo
imul
fldl
inc
jg
fs
insl
stos
mov
jns
sahf
movsb
sub
cmpb
sbb
repz
cmp
std
and
cwtl
mov
xchg
shrb
dec
lds
lea
xor
jae
nop
mov
sub
mov
in
mov
hlt
inc
jmp
inc
or
mov
out
xchg
out
cmpsl
cmp
jge
loope
dec
cmp
mov
lret
scas
js
dec
mov
cmpb
add
test
in
mov
add
or
int3
stos
orl
push
aaa
lock
sub
push
out
icebp
stos
imul
jecxz
jg
mov
or
jecxz
mov
es
imul
dec
sbb
shl
jno
out
sti
push
add
adcl
sub
jle
scas
loopne
dec
fisttps
inc
mov
dec
je
or
outsb
insb
push
jmp
int3
jle
fistl
mov
test
test
push
or
pop
cmp
push
mov
outsb
je
ja
mov
and
adc
mov
scas
testl
lods
in
jns
popa
inc
mov
fiadds
cs
fstpl
testl
jp
fmull
push
pop
lods
xchg
test
cmp
jnp
out
pminsw
xchg
test
lds
mov
xchg
mov
mov
pushf
arpl
sbb
into
into
sub
mov
mov
xchg
push
xchg
pusha
sbb
add
je
push
pop
sub
mov
stos
mov
or
das
adc
incl
outsb
aad
lret
arpl
ficoml
cmp
lcall
mull
insb
rcrb
mov
aad
outsb
lea
mov
jp,pt
loop
lcall
addl
mov
shrb
mov
stos
hlt
mov
lret
mov
push
mov
pop
repnz
mov
or
xor
in
adc
fsubrs
ret
aad
mov
sbb
xchg
arpl
nop
in
lods
jecxz
outsl
jp
imul
insl
nop
lods
jp
cmpsl
mov
leave
jbe
mov
into
in
jns
xchg
test
push
push
fists
lcall
jmp
jle
cmp
add
push
loopne
aas
mov
fiaddl
lret
es
add
xor
lcall
mov
sbb
add
mov
cmp
inc
push
mov
fwait
lock
pavgb
aad
push
inc
cmc
mov
mov
aas
mov
lods
mov
je
incl
je
sub
mov
hlt
jl
cmpsl
sbb
call
cld
jmp
scas
or
fsub
xchg
daa
arpl
imul
xor
dec
sbb
pop
lods
or
jnp
inc
xor
cmp
das
lret
scas
add
push
gs
cmp
push
pusha
inc
push
cmpb
gs
add
adc
fldl
cs
push
data16
movsl
je
mov
dec
pop
lock
fwait
imul
mov
movsl
hlt
and
dec
aad
xlat
or
arpl
lahf
ror
jb
adc
data16
and
and
daa
fcmovb
les
mov
add
mov
stos
xor
scas
in
mov
ss
cmp
dec
or
push
pop
pushf
add
sti
xchg
sbb
addl
filds
sub
push
xor
sbb
push
dec
les
cwtl
jl
icebp
test
ficompl
fildl
adc
fbstp
addb
pop
cmpsl
xchg
mov
fists
frstor
push
lahf
test
in
cmc
xor
jns
or
call
loop
sahf
sbb
sub
dec
and
inc
popa
cmp
int3
shrb
sub
cmpsl
xchg
sbb
in
lret
jmp
call
add
pop
mov
push
sbb
inc
pop
das
and
loope
dec
mov
insl
iret
aad
dec
mov
fcoms
mov
or
sbb
or
sub
sub
mov
lahf
lahf
fsubl
loope
stos
aas
mov
dec
hlt
xchg
inc
js
scas
cmpsb
mov
add
jo
hlt
xor
jp,pn
jno
decb
jle
lods
xchg
cltd
fxtract
shll
pop
fmull
cld
movsl
and
fst
push
cmp
data16
xchg
movsl
in
fst
js
or
call
roll
push
cmpsl
aaa
sahf
leave
xor
in
fldenv
clc
mov
sub
sub
pop
mov
adc
jnp
repnz
je
adc
das
push
movsb
and
jg
xchg
jg
out
jb
xchg
push
mov
sub
lds
btr
rcll
leave
lds
mov
mov
mov
or
sbb
cmpsb
dec
pop
fisttps
leave
aas
call
lcall
lahf
xor
sbb
nop
fistl
dec
mov
or
lods
out
shrl
fcmovb
shrl
shr
dec
mov
cmp
lds
insl
and
not
add
xchg
scas
das
addl
aas
dec
cwtl
int
xor
lret
inc
cmp
pop
cwtl
cmp
mov
aaa
mov
fnstsw
or
xor
fdivl
mov
sub
cld
hlt
cwtl
or
incb
fadd
scas
loop,pn
adc
scas
jne
pop
sub
fldl
jb
repz
ret
and
aaa
divl
stos
stos
test
dec
push
cltd
int3
sbb
sbb
je
pop
mov
jl
sahf
jae
add
pop
aaa
clc
xchg
push
push
call
hlt
xchg
xor
pop
loopne
aas
data16
lahf
fdivl
outsl
adc
mov
mov
clc
in
stc
jmp
scas
and
mov
icebp
dec
push
out
jge
add
mov
dec
add
jecxz
sti
shrb
les
or
inc
cmp
inc
aam
jnp
das
add
fcmovb
jl
mov
or
cli
push
sbb
shll
mov
inc
jnp
push
rclb
stos
cmp
push
jmp
sarl
or
cmp
push
mov
sahf
aam
pop
loop
jb
dec
ja
mov
mov
inc
fisubrs
inc
push
mov
nop
cmp
add
pop
jp
in
test
and
mov
subl
adc
popl
jnp
pop
ret
pop
and
jp
jmp
fstpl
push
out
repz
cltd
jno
cmpsb
pop
out
cmp
mov
imull
add
xor
out
jecxz
cld
mov
jmp
xchg
sti
pop
pop
lods
ljmp
pop
cmp
pop
jle
push
sub
dec
fcomps
mov
pop
loopne
dec
popf
imul
les
loopne
inc
in
add
dec
hlt
fcomp
or
mov
xor
and
xchg
test
sub
mov
fistps
inc
pop
adc
cmp
dec
add
xchg
jo
mov
les
andb
iret
cmpsb
pop
jp
mov
mov
repz
sub
in
jb
dec
test
imul
fidivrs
or
inc
lcall
loop
cmc
push
mov
pop
inc
adc
mov
push
sub
add
pop
das
mov
pop
repnz
pusha
xchg
jno
xchg
int
cwtl
pusha
jmp
mov
cmp
add
or
nop
xchg
push
sbb
and
adc
and
push
lcall
leave
mov
or
add
jo
mov
imul
fistpll
cli
pop
pusha
and
icebp
arpl
sbb
add
mov
outsb
movsb
inc
fisubl
mov
and
call
aaa
jno
loopw
fs
sbb
mov
pop
and
shrl
sbb
cmp
mov
sub
xchg
mov
xchg
and
gs
lret
insb
insb
ret
add
loope
pusha
out
rol
mov
and
ficomps
push
js
or
push
jo
jb
repnz
dec
cs
jo
stos
xor
loop
ss
jbe
gs
mov
sub
test
int
xchg
repz
jl
dec
iret
sbb
mov
jbe
cli
mov
lret
repz
sbb
xor
test
pop
inc
xchg
jb
lcall
jbe
fnstcw
jae
fmul
loopne
and
sbb
xchg
neg
inc
push
lret
rolb
dec
push
add
xchg
pop
jb
out
jnp
movsb
cmp
sub
iret
jb
lods
add
fcmovnb
stos
jo
dec
jmp
jmp
in
mov
mov
adc
dec
lret
push
aas
sti
cli
aam
adc
rcll
xchg
sahf
mov
ss
jno
add
scas
imul
xlat
lret
leave
ljmp
outsl
insb
pop
icebp
sub
mov
leave
lcall
out
ljmp
mov
push
ret
out
mov
cltd
test
and
sbb
aam
mov
xor
sbb
push
cmp
inc
push
scas
push
out
out
scas
jo
inc
cwtl
pop
pusha
or
xor
and
mulb
inc
scas
inc
ds
mov
push
arpl
sub
pop
lods
inc
inc
xchg
jmp
xchg
aad
dec
or
lahf
js
movb
std
int3
int
xchg
cmp
aad
or
icebp
mov
sub
jbe
fstp
popf
mov
loopne
mov
sub
sarb
ja
hlt
sti
push
inc
adc
dec
das
sbb
das
cs
xchg
pop
add
xchg
jne
stos
iret
cmp
inc
inc
and
xchg
add
insl
les
daa
cli
or
lods
xchg
enter
cmpsb
test
mov
push
pushf
push
inc
mov
mov
push
imul
popf
cmp
xor
pop
pop
mov
inc
outsl
in
arpl
sbb
out
cli
mov
jns
repnz
jp
dec
inc
dec
mov
pop
insl
lret
std
jnp
lods
inc
cmpsl
lret
mov
xchg
push
das
fs
call
xchg
push
add
push
dec
dec
mov
ret
js
sahf
push
push
icebp
jno
inc
push
or
out
pop
fwait
or
xchg
scas
loopne
pop
cmpsl
and
cmp
xchg
out
jp
jg
jecxz
lret
jle
xchg
outsl
pop
mov
mov
pop
insl
movsl
sbb
inc
aaa
outsb
push
aam
push
jo
loopne
push
ja
jno
bound
es
jl
fcmovne
adc
cmpsl
push
mov
cmp
outsl
int
xchg
sbb
daa
fmul
sbb
fmuls
bound
fsincos
xor
pop
or
cmp
push
out
and
jg
inc
sti
out
mov
wbinvd
daa
rcrl
sub
mov
imul
xor
popa
or
lea
add
mov
jo
sbb
sbb
cld
adc
jmp
or
push
push
iret
nop
pop
lret
add
sbb
xchg
pop
jne
pop
sbb
sarl
xchg
in
rcr
jmp
shr
or
ds
mov
sbb
xchg
stos
sub
in
out
jns
mov
adc
in
push
movsb
cmp
ja
movsb
and
and
in
lret
insl
xlat
xchg
das
add
cmpsb
js
mov
jge
enter
sub
mov
inc
imull
mov
push
out
in
push
aas
sub
js
pop
push
aas
movb
pop
out
ret
imul
sbb
ret
sub
inc
sub
ret
das
sub
cs
push
cs
jl
dec
clc
mov
fnstsw
subb
cltd
lds
out
test
xor
pusha
mov
andl
icebp
shrl
icebp
mov
ljmp
in
ficomps
jnp
xchg
jno
sub
loopne
cmpb
xchg
jge
push
leave
sarl
aam
sahf
sbb
mov
ds
loopne
push
dec
in
push
loopne
jecxz
push
pusha
rorl
scas
push
fnsetpm(287
lds
inc
and
pop
mov
sbb
in
test
mov
pop
ficompl
mov
pop
mov
xchg
js
inc
xor
xchg
and
icebp
stc
dec
shr
sbb
sub
pop
jb
fistpll
negb
jo
cmp
cwtl
insw
jbe
cmpsl
or
or
lahf
jnp
dec
test
sbb
ljmp
cmp
dec
sub
lcall
loope
insb
push
pop
mov
mov
xchg
addr16
out
outsb
and
jle
fiaddl
push
fcompl
and
bound
fisubrl
decb
adc
xchg
mov
dec
nop
shrl
dec
testb
aam
stc
outsl
jns
dec
mov
adc
insl
inc
mov
scas
xchg
imul
adc
lods
rcrl
andb
push
rcr
xchg
push
add
lret
stos
sbb
cmp
fsubl
les
mulb
adc
stos
sahf
mov
mov
outsl
in
jne
mov
inc
sbb
lahf
stos
addb
aam
pusha
cmp
xor
jbe
movb
popa
jmp
inc
gs
aaa
mov
cld
push
mov
mov
mov
icebp
loopne
xchg
xchg
push
mov
pop
push
lods
cmpsl
sbb
jae
mov
mov
sub
dec
nop
scas
mov
addr16
fadds
fnstcw
pop
adc
jae
inc
testl
push
jne
fcompl
push
xor
mov
mov
jno
pop
popa
mov
inc
or
inc
es
mov
xor
cmp
jb
js
je
movsb
and
add
setp
mov
ds
cmpsl
cmp
pop
jbe
xchg
sbb
mov
add
in
imul
adc
xchg
fs
fsubs
scas
add
addr16
push
aas
mov
jp
lret
fwait
xlat
movsb
subl
insb
dec
scas
and
test
sti
outsl
jl
loopne
lods
leave
jle
in
dec
and
and
fidivrs
mov
adc
out
daa
adc
or
shll
fstl
xor
gs
fcompl
add
out
or
pop
push
stos
or
jne
adc
in
and
rcll
aad
test
lea
mov
clc
addr16
mov
mov
cmpsb
pop
imul
lods
sbb
jl
mov
xchg
add
xor
or
shll
adc
xchg
mov
sub
js
hlt
into
mov
push
or
rcrl
xor
out
sbb
cmp
jnp
notl
outsl
ja
xchg
mov
push
lcall
es
test
sarl
cmp
push
ds
xchg
jge
shlb
inc
mov
orl
xchg
jbe
in
mov
cmpsl
leave
lods
popa
pop
inc
pusha
xor
aad
or
or
sbb
scas
mov
cmpsl
in
roll
lret
mov
cmp
in
pop
push
or
mov
cmp
pushl
sub
push
leave
dec
loope
push
mov
push
jno
sub
std
dec
cmp
mov
dec
jae
scas
xchg
inc
scas
pop
mov
outsb
push
dec
out
mov
pop
cld
mov
inc
pop
scas
mov
cmp
sahf
in
pop
mov
hlt
inc
fdivrl
xchg
test
test
fdivs
or
adcb
jnp
xor
dec
lcall
cmpsb
push
xor
inc
lcall
inc
js
out
cld
sbb
lea
data16
stc
aad
ficoml
sarb
jp
mov
sbb
adc
jo
std
lret
jl
outsl
mov
test
lret
jbe
inc
ds
push
adc
cmp
sti
cmc
inc
ret
sbb
adc
ja
stos
ljmp
inc
ljmp
movsl
jmp
xchg
jbe
adc
xlat
sub
shrb
pop
sbb
out
add
cld
mov
ja
push
dec
mov
xor
test
sbb
repz
out
movb
sub
add
adc
inc
test
inc
sbb
inc
adc
mov
iret
sarl
ficoml
out
xchg
mov
add
clc
pop
jge
scas
xchg
push
pop
in
je
or
mov
xchg
daa
in
idiv
test
fwait
mov
sbb
add
cmp
jecxz
fsubr
add
jmp
orl
adc
call
jle
dec
pop
daa
mov
cmpsb
std
jg
cmp
bound
gs
adc
mov
push
mov
mov
mov
or
cmp
dec
push
popa
shrl
test
inc
out
ss
ret
out
mov
popf
out
xor
cmp
sbb
inc
sahf
push
push
adc
fwait
add
mov
out
mov
data16
outsl
jo
mov
insb
das
shll
pop
sub
and
xchg
mov
jge
xchg
xor
xor
je
std
sbb
adc
push
test
mov
cmp
aad
icebp
or
jne
xor
popa
std
push
insl
je
and
out
cltd
iret
gs
xor
stos
push
fsubs
fldt
mov
and
out
sbb
pop
leave
call
sbb
ret
sti
clc
mov
ret
push
cmp
inc
cltd
in
push
stos
in
ljmp
mov
ror
iret
in
or
imul
es
jg
dec
lds
nop
cmc
pop
pop
cs
arpl
cmpsb
sub
pop
jns
cmpsb
fs
sub
insl
adc
sub
out
mov
outsb
push
fsubrs
inc
xchg
shrb
dec
push
stc
pop
ret
and
in
sub
ss
outsb
test
dec
rolb
ret
jns
cmp
sub
add
jbe
xchg
mov
jg
adc
scas
sub
jg
lret
hlt
pop
bswap
cmp
xlat
out
adc
fsubl
movsl
repnz
and
cmc
test
lods
aas
add
mov
addr16
push
imul
xor
fildll
jb
add
in
loopne
test
add
rol
sub
jae
jne
fnstsw
jl
mov
sti
mov
outsl
imul
fsubl
mull
outsb
enter
sti
fs
stc
arpl
push
mov
les
and
adc
inc
faddl
pushf
jo
pushf
cmp
mov
imul
movsl
dec
cmp
imul
push
outsb
cld
cmpsl
test
pop
or
jbe
je
rcl
test
push
or
fldcw
mov
xchg
bound
jmp
sub
sar
cmpsb
and
mov
and
orl
inc
dec
pushf
push
add
mov
sub
push
mov
mov
filds
push
jbe
or
push
cmp
sbb
xchg
sbb
inc
adc
add
sub
fiaddl
and
fnstenv
push
int3
repz
mov
and
jge
movsl
pop
imul
dec
clc
fcomps
in
jge
icebp
mov
sti
add
sti
sbb
mov
cli
jp
loop
subl
std
xor
aam
mov
mov
xor
dec
dec
xchg
mov
jb
stc
inc
xchg
mov
test
sub
mov
jmp
xlat
push
jge
jnp
lods
push
mov
push
sub
cmpsl
cmpsl
adc
movsl
pop
shll
aas
iret
and
js
xchg
int
mov
push
add
jg
enter
cld
jg
mov
sub
mov
xor
xchg
fiadds
push
mov
mov
add
in
mov
mov
adcl
mov
test
pop
aaa
in
jnp
loopne
mov
aad
lea
cli
stc
lahf
cs
mov
or
inc
sub
jmp
jl
aam
sub
ret
mov
mov
cmp
jns
dec
into
pop
jo
in
dec
mov
and
ret
cmp
vpandn
fidivrl
stos
sbb
xor
mov
add
scas
adc
push
test
loop
outsl
hlt
push
sub
xchg
mov
imul
or
xorb
xchg
shrb
bound
mov
push
pop
xchg
cmpl
insb
popf
xchg
fbstp
test
call
rorl
or
mull
fmuls
push
mov
in
cmpsl
lret
repz
xor
jg
cmp
adc
out
sub
push
jae
xor
cwtl
pop
f2xm1
jne
mull
inc
test
xchg
mov
mov
fstpt
push
inc
fisttps
sbb
xor
sti
push
sbb
mov
adc
or
adc
dec
testl
lods
mov
xlat
mov
jb
fidivrl
test
popl
pop
or
xchg
pop
clc
jmp
or
adc
ds
shrb
inc
imul
sub
push
lods
movsb
and
scas
xchg
fsts
test
addr16
mov
mov
call
jmp
js
jp
lahf
lea
adc
inc
or
fs
fimull
fcomps
push
sbb
daa
das
lahf
mulb
hlt
add
lahf
sub
mov
aad
xchg
mov
ss
cmp
insb
cmpsl
out
or
xchg
add
xchg
in
push
cmp
pop
mov
fisttpl
push
ds
xlat
pop
push
shr
jbe
inc
and
fwait
and
mov
dec
or
sbb
gs
xor
rolb
jle
faddl
and
std
or
rol
lods
and
xchg
sbb
aad
imul
dec
mov
lea
cmp
mov
push
jp
loope
fwait
push
popa
repnz
in
bound
mov
add
xchg
or
adc
lds
inc
int
adc
cld
int
push
in
add
cmp
leave
imul
sbb
out
or
xor
in
lods
inc
sbb
divb
ror
push
call
pop
out
and
inc
in
shlb
mov
addr16
xchg
loop
jo
mov
xor
call
mov
outsl
enter
daa
mov
push
push
enter
ret
sbb
mov
std
cmp
push
test
icebp
jmp
in
lods
mov
stc
lahf
or
xor
mov
pushw
ret
push
dec
pop
js
lds
and
mov
lods
push
insl
mov
arpl
and
test
inc
aad
push
lods
jle
sub
mov
js
dec
adc
mov
inc
xchg
lcall
icebp
push
dec
shlb
rcrl
sbb
rcll
pop
call
call
andl
out
shlb
rcll
call
out
sbb
out
push
jo
cltd
sbb
sti
push
sbb
xor
pop
and
loop
pusha
push
jb
cmpsl
loop
stc
in
loope
sub
movsl
or
cs
adc
incl
lods
adc
popf
xor
in
jmp
mov
dec
xchg
adc
andl
lcall
sbb
shll
mov
mov
or
xlat
int
popa
mov
and
movsb
clc
add
enter
scas
xchg
dec
dec
or
jae
or
mov
dec
pushf
add
lcall
pop
insl
jp
mov
xchg
adc
std
pop
cmp
xchg
fstpl
les
stc
mov
sub
pushf
pop
add
call
cld
data16
xor
sbb
mov
dec
stos
inc
ret
aaa
fwait
mov
lods
sti
and
or
and
mov
bound
pop
jnp
repz
ljmp
data16
add
lahf
aam
js
pop
test
mov
xor
arpl
mov
inc
push
pop
sbb
sti
xchg
pop
xor
xchg
sub
jo
cwtl
or
sbb
push
js
hlt
sbb
push
cli
imul
mov
push
xor
adc
dec
pop
lcall
sbb
jp
push
sahf
lahf
xlat
cmp
insb
popa
jae
mov
or
inc
pop
jecxz
mov
pop
cmp
push
out
mov
sarl
and
sub
push
pop
lahf
int
ret
pop
out
iret
dec
mov
and
cmp
mov
movl
fwait
sub
mov
cmc
pop
fdiv
push
mov
jge
jecxz
xchg
and
add
icebp
sub
out
cwtl
jl
cltd
lret
aaa
prefetch
int
bnd
or
push
cld
in
mov
cld
fwait
lea
sub
int3
dec
xor
pusha
mov
gs
sbb
and
das
clc
sahf
xchg
into
repnz
lock
stc
arpl
stc
mov
cmpsb
cltd
out
rcrb
push
out
es
mul
mov
adc
pusha
sbb
in
idiv
sbb
jb
dec
mov
push
sbb
xchg
and
and
lret
cmpsl
inc
mov
adc
adc
dec
js
mov
inc
shlb
into
inc
test
xor
ss
loope
cld
or
adc
pop
ja
adc
mov
mov
mov
mov
adcb
mov
jg
or
stos
mov
xchg
push
adc
lods
push
jge
ljmp
mov
mov
ret
dec
mov
lock
pushf
mov
test
xor
mov
mov
fdivs
xchg
shlb
popa
jp
mov
jns
in
jecxz
mov
jmp
cmpsb
and
push
sub
mov
in
or
xchg
jp
push
mov
add
xor
js
mov
inc
loopne
cmp
inc
inc
jno
std
cmp
imul
lods
stos
cmp
insb
mov
add
adc
pushf
or
lret
ss
int3
push
mov
addr16
add
cmp
pop
test
add
push
cwtl
fldln2
push
enter
pop
imul
xchg
sub
fstl
push
xchg
sbb
xchg
mov
arpl
std
pop
shll
push
pop
jae
and
cld
int
dec
ljmp
ror
loop
je
cmp
mov
cmp
sbb
xor
cli
bound
sbb
cmp
mov
cmpsl
xchg
sbbb
lods
sahf
xor
xor
or
adc
xchg
adc
xor
aaa
jo
lock
fcmovnu
notb
sbbb
sbb
pop
push
insl
or
and
or
mov
sti
daa
jmp
mov
in
mov
mov
scas
cmp
xchg
mov
inc
push
pop
sti
lcall
mov
xchg
fidivs
in
jge
iret
xor
xchg
cmpsl
jg
flds
sbb
inc
push
pop
out
jecxz
pop
fsts
jp
xor
ret
xrelease
and
pop
cmovs
rcl
xchg
pop
repnz
mov
xor
stos
xchg
sub
in
jmp
test
sbb
pop
ret
aas
sbb
outsl
jmp
push
inc
shl
mov
jae
test
movsl
jle
cmpl
stc
sbbb
sbb
pop
cmc
push
jg
push
mov
pop
or
pop
mov
fcom
xchg
add
iret
add
int
mov
rcr
test
inc
out
jb
dec
fpatan
push
jg
loop
js
push
jg
repz
sub
mov
sbb
stc
jl
mov
cmc
pop
rolb
aad
test
hlt
sarb
xchg
rorl
out
mov
stos
and
push
lock
aad
jmp
push
cmpl
mov
cmp
adc
lea
out
movsb
or
inc
push
cmc
jb
sbb
lock
mov
fcoml
inc
aaa
rolb
adc
mov
pop
imul
out
jl
jns
fidivrs
fcoms
ret
sub
xor
xchg
insb
loopne
adc
adc
je
in
fcompl
jns
or
add
sbb
jle
into
cwtl
ficompl
aaa
mov
pop
idiv
rorl
dec
jecxz
pop
test
sub
and
adc
sub
mov
andb
iret
xor
imul
shll
and
movsl
ja
jmp
repz
push
cltd
sbb
mov
xchg
or
mov
sbb
imul
cli
adc
test
cmpsl
jl
sbb
push
mov
jle
or
nop
mov
dec
pop
out
and
lret
pop
icebp
fisubl
sbb
cmp
mov
sbb
cmp
insl
pop
xchg
sbb
loop
jae
jbe
mov
pop
mov
mov
or
mov
push
adc
call
push
or
jne
add
adc
imul
test
repz
cmp
pop
or
sbb
push
repnz
dec
cmp
call
aas
sti
or
xchg
and
jge
hlt
add
jmp
adc
imul
pusha
sti
mov
cmp
aad
stos
sub
cwtl
pop
push
inc
lahf
dec
pop
mov
mov
lret
mov
data16
rol
lret
movsb
fcoml
insl
in
jnp
mov
push
cs
adc
lahf
mov
add
mov
loope
std
inc
xor
sub
arpl
jo
ret
dec
ss
cmc
lret
insb
inc
xchg
sahf
js
fcmovb
fldt
dec
and
and
jns
pop
sub
aaa
pushf
sarl
mov
mov
stos
and
shr
add
push
mov
rcl
jns
dec
cmp
testb
xor
popf
push
aaa
adc
inc
pop
push
rep
mov
hlt
rolb
push
add
and
rcrb
adc
or
mov
dec
arpl
jbe
or
stos
aas
sbb
iret
lock
sti
in
adc
fs
sub
mov
mov
pop
xor
add
cld
pop
inc
dec
mov
pop
mov
dec
cmp
or
dec
int
add
imul
loope
sbb
out
or
mov
iret
inc
es
sbb
call
fs
dec
cli
mov
test
push
sbb
fdivs
ret
adcl
and
aad
jne
in
scas
lcall
xor
cmc
outsl
pop
enter
stos
dec
subb
out
mov
push
int3
and
jle
sub
daa
mov
mov
fisubl
js
ja
sub
or
push
sbb
movsw
insb
insb
mov
int
push
popa
inc
out
divb
jns
aaa
mov
sub
in
mov
test
mov
and
int
ret
shlb
push
outsb
adc
enter
jbe
cmp
sarl
fcompl
loopne
push
push
ja
xor
test
cmp
lods
add
pop
adcl
cmp
out
fidivrs
adc
dec
repnz
imul
push
cmp
cmp
push
push
lods
std
fnstenv
and
cmp
mov
add
bound
push
sbb
mov
and
in
pop
in
push
jmp
pop
cwtl
jmp
fdivrs
and
test
fistl
mov
jno
test
push
fiaddl
rcrl
pop
fstps
loopne
push
imul
addr16
das
imul
pop
pusha
pop
adc
rcrb
dec
pop
xchg
push
bound
dec
movsl
inc
mov
xor
fwait
shlb
jl
xchg
lea
scas
jnp
cli
jg
inc
xor
push
cmp
add
mov
pop
mov
rcl
inc
cld
loope
sarl
je
ret
jmp
cmp
jge
bound
aaa
mov
sbb
aad
dec
xor
pop
jne
add
xor
and
out
pop
fisubs
xchg
jg
add
fwait
outsb
call
add
clc
push
jno
cmc
in
sahf
xor
in
divb
mov
call
adc
lock
jno
mov
jne
xchg
jp
fsubs
ljmp
pop
rcr
lret
scas
loopne
add
push
iret
pop
scas
nop
xchg
fwait
push
dec
pushf
xchg
fstl
or
mov
mov
jmp
scas
adc
pop
xor
cmpsb
push
pop
fs
int
test
sub
jb
jne
xchg
xor
pop
sbb
mov
jb
loop
cmp
add
stos
add
fnsave
inc
insl
cmpsb
mov
fildll
sub
jmp
je
mov
and
rol
pop
outsl
fstpl
sub
push
jno
dec
stos
and
push
xchg
dec
hlt
insb
in
pop
hlt
xchg
shrb
clc
inc
loope
cli
and
frstor
out
push
into
cmc
loopne
xchg
xchg
xorb
push
in
dec
adc
xchg
jg
fcompl
sbb
popa
jnp
std
jmp
rcl
int
cmpsl
add
adc
sub
popf
cmp
mov
jmp
fisubl
jl
loop
or
stc
insb
fists
xchg
rcll
mov
cmp
insl
and
push
mov
shlb
adc
clc
insl
es
lods
lock
shlb
push
push
mov
data16
repz
and
shll
cmp
movsb
mov
in
cld
adc
in
jge
lcall
jge
in
or
xor
es
jo
sub
fwait
lahf
rorb
cmpsl
add
or
scas
inc
push
jge
mull
push
sbb
mov
push
into
adc
add
xchg
fisubl
ret
sub
insb
push
dec
call
dec
pop
scas
dec
movsl
icebp
or
dec
cmp
push
leave
lret
repz
clc
mov
sti
fwait
mov
sbb
out
fs
mov
mov
imul
inc
sbb
sar
dec
fwait
sbb
sub
and
add
push
push
mov
iret
or
lock
mov
subl
test
dec
notb
in
mov
imul
std
cmp
mov
mov
les
mov
aad
lret
jmp
stc
test
xchg
popa
jne
push
mov
sbb
add
daa
xlat
leave
gs
mov
pop
rcrl
sbb
pop
std
stc
jle
add
pop
mov
lret
mov
inc
icebp
pop
push
jp
xchg
mov
jle
scas
pop
mov
hlt
pop
and
mov
and
mov
lret
mov
mov
and
addr16
imul
or
ret
test
ja
xor
mov
movsl
int3
lock
les
mov
ljmp
sahf
out
and
dec
push
jns
xchg
push
xchg
sbb
fs
or
push
decl
lods
pop
push
sti
cs
push
fiaddl
je
scas
pusha
push
movl
test
ljmp
fwait
popf
sti
iret
xchg
sbb
dec
cmpsb
sbb
mov
and
inc
aam
push
scas
jl
or
jp
subb
xchg
dec
shrl
ret
int
cs
xchg
stos
das
push
xchg
out
pop
loope
cwtl
pop
leave
popa
in
popf
or
inc
mov
stos
fimuls
xor
lcall
ficomps
xor
cmp
pop
arpl
sarl
sbb
jl
dec
loopne
repnz
fnstenv
cld
push
cltd
sub
dec
push
xor
out
cmp
cwtl
inc
pop
test
inc
das
xchg
daa
sub
cmpb
shl
in
aad
cmc
cli
xchg
or
and
int3
sub
jbe
and
cmpb
push
cmpsb
scas
and
lcall
out
loop
mov
jl
repz
sbb
pop
mov
sti
mov
adc
inc
cmp
sbb
inc
jmp
add
jmp
mov
call
xor
das
or
imul
jnp
mov
notl
inc
adc
movsl
dec
pop
sub
loopne
or
sbb
leave
sub
jno
imul
mov
into
push
mov
cmpb
or
mov
adc
mov
xor
ret
pop
add
add
test
inc
outsb
jecxz
sbb
cmp
or
insb
imul
ljmp
sub
pop
adc
cmpsb
aad
cmp
scas
mov
sbb
mov
mov
stc
data16
jns
mov
sahf
loop
loopne
pushf
mov
stos
out
into
out
jb
adc
mov
mov
pop
roll
stos
mov
bound
push
lahf
out
mov
das
inc
mov
or
mov
std
test
cli
jb
mov
adc
jbe
push
lock
lods
jo
pop
loope
lea
clc
sub
lods
aaa
aad
mov
push
mov
loop
xchg
xchg
rorb
push
sub
adc
cmpsb
ds
fisubs
test
addr16
cwtl
movb
shlb
sti
pop
add
push
shr
adc
std
out
mov
jbe
push
inc
push
pop
push
movsb
push
jne
mov
lock
nop
mov
loopne,pt
and
dec
sub
fwait
gs
xlat
push
jecxz
sub
push
add
pop
sub
dec
xor
outsl
aam
adc
xor
fldl
into
or
xor
mov
scas
negl
xor
mov
subl
dec
into
popf
add
inc
dec
sbb
rclb
gs
push
jl
mov
sub
lcall
fsts
daa
jno
rsqrtps
sub
and
out
in
inc
jo
dec
push
dec
pop
xchg
mov
adc
sub
add
sbb
clc
popf
sub
inc
dec
pop
mov
mov
fistpll
cli
lods
aaa
and
les
cld
and
inc
jno
mov
jl
rclb
push
clc
jb
and
cmp
shll
pop
sub
push
xchg
fldcw
sarb
movsl
sub
insb
pop
stc
sub
insl
das
jnp
fldenv
sbb
cmp
cmp
xchg
xor
mov
xor
mov
jns
mov
enter
jne
push
mov
popf
mov
inc
cmp
out
mov
inc
jle
xchg
adc
mov
push
pop
imul
movsb
mov
mov
je
push
push
in
mov
cmp
xchg
fisttpll
xor
arpl
sti
mov
dec
dec
in
fcmovnb
fstpt
js
lock
fisubl
bound
stos
mov
outsl
mov
jl
pop
xchg
and
movsl
xor
jo
mov
addr16
xlat
jle
aad
mov
push
xor
push
cmp
cltd
cmp
mov
mov
or
sbb
mov
xor
mov
add
xor
test
addr16
and
xchg
iret
ret
fucomi
pushf
rclb
pushf
xlat
xchg
adc
int3
fdivl
push
lcall
cmp
in
outsb
push
fnstenv
rcll
ficomps
loope
gs
sbbb
jns
add
ss
mov
cs
clc
add
mov
and
and
and
sub
lods
adc
leave
dec
nop
sbb
xchg
shrl
xor
push
push
sbb
inc
sbb
ds
jns
push
jne
fcompl
add
xor
das
jb
push
or
lcall
mov
pop
mov
xchg
repnz
and
mov
xchg
and
mov
pop
test
jecxz
std
mov
cld
inc
cli
out
pop
out
insl
scas
mov
daa
jbe
xchg
stc
test
xor
loopne
out
std
or
fstpl
add
or
addb
lahf
lret
push
in
or
jecxz
test
cmp
imulb
and
js
push
into
mov
ret
add
divl
push
scas
int3
test
dec
sbb
mov
and
lcall
mov
pop
cmp
loop
lret
lret
jb
rcrb
jl
lods
insb
insb
popf
push
mov
jne
jle
sbb
iret
cmp
ret
mov
push
enter
mov
sub
aam
jmp
bound
or
adc
scas
push
stc
adc
and
adc
push
xchg
inc
cld
inc
stos
mov
sbb
push
and
loop
xor
js
out
mov
gs
mov
xchg
nop
scas
push
adc
mov
les
test
push
adc
insb
push
pop
or
mov
mov
jb
lret
int3
pop
xor
test
mov
adc
jmp
mov
adc
jl
jge
ja
ds
mov
shll
call
mov
mov
cmpsb
sub
jno
stos
pop
mov
mov
xlat
pop
xchg
xchg
js
in
imul
cmp
daa
fidivrl
or
cs
mov
pop
das
sarb
outsl
icebp
ds
xor
push
cmc
outsl
adc
adc
and
lea
mov
and
cmp
mov
dec
and
ret
js
int3
mov
xlat
stos
cmc
ret
pop
popf
fwait
sub
or
cmp
testb
loopne
sarb
sub
xchg
lret
mov
pushf
loop
push
stc
pop
adc
mov
sbb
fdivp
dec
sbb
mov
mov
push
outsb
aaa
cmp
cwtl
nop
movsl
push
and
xor
imul
sbb
lcall
ret
popa
pusha
mov
sbb
lcall
xchg
mov
js
shll
out
inc
sub
outsl
xchg
add
bound
int
or
push
shl
push
dec
mov
pop
fdivrs
das
aad
jns
inc
xchg
jg
rcr
rclb
mov
dec
imul
lcall
xchg
pop
add
jne
shll
imul
insb
mov
xor
pop
hlt
xchg
inc
sub
ss
mov
pop
jmp
xchg
pop
cmp
mov
dec
inc
movb
ljmp
jl
subb
jno
lcall
jle
outsl
stos
mov
ss
idiv
cmp
sbb
js
or
or
mov
fsubrs
dec
inc
dec
inc
mov
mov
fadds
xchg
push
daa
lahf
mov
push
or
popa
adc
mov
out
push
fwait
mov
notl
inc
xchg
dec
ret
mov
add
cmp
sbb
iret
gs
popf
pop
stc
sti
push
fadds
jns
jno
mov
rcll
pop
orb
scas
jne
or
xchg
mov
lock
std
decl
and
insb
push
mov
sbb
sub
aad
push
mov
int3
jmp
dec
test
js
stos
lcall
pusha
loop
jge
jge
jns
in
into
xchg
inc
stos
mov
lahf
out
mov
jp
sbb
hlt
and
push
xor
xor
out
cmp
orb
movsb
shl
sub
push
iret
das
xor
xchg
insl
or
xor
bound
scas
push
daa
or
and
loopne
cmp
ficoml
pop
jo
lea
icebp
lahf
dec
jne
sar
inc
data16
mov
in
in
outsb
jecxz
test
jno
or
push
aad
arpl
loopne
rclb
aam
test
fiaddl
test
out
xor
sub
lods
cmpsl
inc
insb
push
cwtl
cld
cld
movsl
dec
addl
and
cmp
jnp
xchg
fistpll
jo
pushf
mov
adc
pop
jae
js
bound
jnp
test
repz
out
mov
dec
push
or
sbb
ja
in
movsb
enter
and
jp
lods
test
dec
mov
cltd
mov
pop
cs
cwtl
mov
insl
xchg
loope
sub
xlat
int3
enter
ret
adc
insl
mov
xchg
pop
mov
orl
rorl
push
xchg
divb
and
es
stc
or
xchg
rcll
add
xor
jge
or
pop
out
or
adc
imul
and
ds
jo
and
loopne
push
cmp
fisttpl
lds
fstl
push
shr
ss
out
rcrl
cmp
pop
and
and
pop
jns
in
insl
sub
out
mov
andb
xchg
in
add
sbb
lahf
push
jp
and
ljmp
and
cmp
and
rcrl
xchg
fsts
mov
pop
jae
sbb
daa
xchg
roll
mov
or
or
sub
pop
ds
pop
xchg
jmp
adcl
repnz
add
xor
push
and
jns
or
imul
add
incl
cltd
lods
xor
adc
movsb
mov
fwait
lcall
adc
aad
icebp
xchg
mov
sarl
lret
lret
cmp
clc
lds
sub
mov
jb
in
insl
or
lds
arpl
mov
mov
mov
inc
jns
mov
movq
mov
sti
cwtl
testb
xor
dec
cmp
es
push
lods
mov
sub
mov
fstpt
shll
cli
repnz
sbb
icebp
adc
add
mov
mov
daa
ds
or
cmp
sub
ret
imul
out
xchg
das
cmp
push
dec
cmp
insl
inc
add
jbe
or
clc
adc
lcall
insb
das
mov
cmp
out
sbb
pusha
push
xor
pop
insl
test
or
movsl
jl
jnp
jo
pop
enter
orps
outsb
icebp
mov
out
mov
mov
das
lcall
add
push
int
adc
push
adc
xor
lcall
push
mov
movsb
sbb
loop
jbe
cmpsb
pop
jge
fsubs
pop
mov
stos
cmp
out
les
fstpt
jle
jmp
adc
popa
ficoml
ds
js
cwtl
lea
xchg
jl
jp
js
in
das
lcall
lock
loope
test
adc
aas
hlt
shl
mov
and
mov
cmp
push
ret
mov
pushf
movsl
decb
out
lea
test
pop
out
jnp
dec
mov
sub
ss
testl
lret
mul
icebp
leave
stos
jle
dec
inc
pop
or
into
push
mov
inc
mov
mov
bound
mov
pop
mov
add
std
div
popf
subb
std
mov
arpl
outsb
adc
xor
lods
pop
sti
mov
out
roll
inc
and
pop
and
and
mov
dec
pushf
mov
or
test
cmp
icebp
xchg
std
adc
sbb
addb
push
sub
inc
xchg
push
cmp
aam
imul
jns
pushf
rcll
data16
pop
jne
stos
jl
in
sub
add
mov
das
sbb
outsb
dec
mov
push
test
imul
ljmp
dec
imul
cmp
mov
or
cmpsb
pop
jp
xor
outsl
loope
xor
imul
enter
daa
xor
mov
subl
int3
inc
ficoms
push
popf
cmpsl
push
inc
mov
jno
push
jmp
xlat
lock
popl
xchg
and
adcb
push
jg
je
cmp
imul
fdivr
mov
out
xor
mov
mov
sbb
shlb
aas
add
add
adc
pop
pusha
mov
movl
fimuls
out
jmp
push
out
jp
xchg
push
repz
sbb
mov
cmc
xor
mov
inc
xor
imul
dec
mov
scas
cmpsl
flds
xor
sbb
clc
inc
and
or
sub
adc
xor
call
ficompl
mov
jl
add
loope
and
in
in
xor
shr
test
ja
or
outsl
pop
out
cmp
push
inc
lock
pop
adc
cmpl
xlat
cmc
jae
mov
fwait
push
and
es
jmp
clc
iret
adc
dec
repz
jo
in
cwtl
add
pop
ljmp
stos
clc
and
or
add
pop
shrl
sti
mov
loope
mov
push
int3
mov
and
insb
inc
cmp
cmpsl
lods
adc
sti
bound
xchg
jecxz
xchg
pop
pop
xor
mov
loopne
xchg
dec
idivb
mov
push
sahf
fidivl
push
loopne
lea
adc
and
cmpsb
fucom
xchg
cmp
loop
mov
test
rorl
shrl
mov
adc
mov
push
sub
ss
xlat
rorl
arpl
sub
and
aam
cmp
stos
adcb
add
jno
scas
mov
push
xchg
idivl
andl
jns
test
arpl
push
push
in
insb
xchg
inc
mov
hlt
cmp
mov
jg
jns
insb
insl
bound
mov
mov
dec
dec
xchg
jnp
jb
ret
mov
aam
cmp
mov
pushf
inc
jne
sbb
stos
out
and
cmp
push
jecxz
or
addr16
inc
rclb
mov
sti
add
lret
repz
or
movsl
push
aad
mov
in
subl
xchg
pop
and
adc
mov
mov
dec
pop
bound
inc
ss
dec
mov
sub
out
cld
xor
mov
add
jecxz
add
mov
insl
push
daa
test
xor
and
xor
mov
cli
mov
gs
lods
lods
sarb
popf
fldl
gs
and
cs
cmpsl
addl
pop
xchg
jnp
cli
add
cmp
xorb
scas
dec
loop
and
cmp
adc
rcl
mov
nop
in
pop
and
jmp
shr
sub
mov
adc
mov
imul
ljmp
imul
leave
fbld
lock
mov
clc
pop
addr16
movsb
andb
je
pop
push
movsl
xchg
cwtl
cld
inc
fcompl
push
ror
sahf
mov
inc
or
decl
xchg
andl
inc
lret
cld
test
push
mov
sub
inc
pop
lcall
repnz
adc
cmp
push
bound
adc
mov
and
aas
and
out
adc
enter
rorl
push
pop
mov
int3
roll
inc
sub
pop
or
jo
jge
mov
gs
cwtl
pop
sub
fistps
push
cmp
jo
mov
mov
sub
rcl
fwait
arpl
pop
push
in
xor
pop
in
dec
ja
mov
jo
sub
xor
or
xor
mov
add
push
sti
jae
sti
push
push
or
jo
jns
add
cmp
stc
pop
push
push
mov
fisttps
xchg
jns
add
jl,pt
xor
cmp
cmp
cli
jecxz
mov
enter
xchg
mov
and
ss
loop
scas
pop
pop
fsubs
and
sbb
sbb
mov
adc
mov
jmp
cmp
sti
mov
mov
mov
adc
ss
add
int3
test
mov
stos
push
lahf
and
xchg
subb
sbb
sbb
pop
int
jp
cmp
dec
cmp
test
xor
dec
or
dec
orl
push
adc
stc
jbe
lret
dec
and
cwtl
adcl
test
lods
subb
insl
in
and
xchg
xchg
sbb
pop
mov
dec
test
stc
pop
inc
mov
movsl
sbb
subb
loop
loopne
push
xor
inc
and
ror
push
mov
out
push
stos
push
add
xchg
inc
fwait
cmp
sbb
jmp
int3
nop
std
out
cmp
in
xchg
jb
cmpsl
mov
mov
aaa
movsb
cmpsl
rcll
shrl
xchg
xchg
mov
xchg
and
adc
push
inc
inc
push
lods
fwait
dec
mov
sub
stos
ret
roll
xchg
pop
movaps
sbb
arpl
mov
movsl
add
movsl
test
out
test
loopne
mov
scas
inc
out
mov
jmp
jp
int
lods
xor
inc
jl
jmp
imul
fstl
jae
push
addb
and
xor
fistps
sbb
jb
push
mov
in
test
mov
sti
lds
cmc
and
fs
stc
fsubr
mov
mov
dec
insb
mov
out
add
mov
fisttpll
jl
ret
addr16
out
in
xacquire
insl
mov
sar
xor
xchg
lock
jnp
mov
xor
or
insb
scas
rclb
jbe
movsl
outsb
idivl
aam
push
pop
or
fistpll
mov
dec
lods
loope
cmp
mov
aad
push
pop
xor
sbb
dec
adc
jmp
ror
and
xor
fldcw
enter
faddl
call
test
es
sub
xchg
sub
sub
dec
dec
lahf
call
cmpb
lods
jb
dec
fwait
dec
enter
adcl
adc
dec
jb
push
jg
inc
adc
in
push
movsb
xchg
mov
cmc
ja
incb
adc
push
push
push
jbe
jbe
inc
lahf
mov
xchg
ret
pop
sti
nop
jae
repnz
stc
sar
cltd
add
scas
push
or
mov
push
orl
repz
mov
mov
arpl
push
pushf
mov
lea
call
xchg
mov
cmpsb
add
out
cwtl
push
shlb
xor
dec
xor
cmp
fisubl
out
or
mov
in
mov
insb
sub
fcom
jbe
dec
add
mov
mov
dec
jns
pop
stc
pusha
adc
adc
xchg
cld
ret
loope
mov
adc
ss
jno
sbb
push
daa
subl
xchg
inc
push
pushf
push
pop
into
add
sarb
and
sahf
xchg
test
scas
mov
adc
push
cmp
movl
test
push
inc
sub
add
je
iret
test
or
sbb
sahf
sbb
test
mov
cmp
in
in
cmp
xor
into
xor
addr16
mov
sbbb
pushl
popa
ret
jns
rorl
sbb
xor
fmuls
jmp
rcr
xor
add
mov
sbb
mov
jb
cs
popf
fcoml
stos
imul
pop
ret
inc
push
movsb
sbb
lds
jbe
cmp
movsl
push
je
sbb
jmp
sbb
adc
sbb
es
ljmp
aas
aad
lret
dec
mov
shrl
pop
stos
loope
lahf
pop
popf
ds
mov
push
add
and
add
popa
dec
add
sbb
hlt
bound
fnstsw
aaa
sbb
pushf
pop
call
movsb
and
subl
out
sahf
test
movsl
sbb
and
ljmp
mov
xchg
in
mov
dec
lcall
incl
ret
jne
in
add
cmpsl
setge
test
xchg
push
sub
test
subl
sub
mov
mov
inc
mov
js
loop,pt
xchg
outsb
sub
enter
dec
mov
sbb
lcallw
or
sbb
xchg
jg
pop
or
cld
xchg
sbb
or
movsb
and
xchg
ret
je
push
mov
pop
test
mov
dec
push
pop
lods
cmpl
add
xor
inc
mov
insb
xchg
pop
xchg
ficoml
inc
into
sub
push
jno
pop
popf
sub
mov
and
inc
imul
insl
mov
xor
jecxz
pushf
cwtl
les
lock
push
cli
ret
sti
push
roll
cmc
rorl
imul
dec
fwait
cmc
cmp
enter
icebp
lock
sub
lods
and
cmp
jg
imul
dec
loopne
divb
aaa
int
test
fsubp
loop
add
fstps
push
pop
pop
pop
test
sbb
mov
xchg
pusha
aam
push
mov
sub
adc
and
jne
scas
xlat
dec
push
decb
stos
lret
mov
xchg
cwtl
fs
pop
stc
repnz
outsb
add
icebp
cli
sti
push
jne
cmp
dec
mov
mov
mov
xor
shrl
clc
cltd
xchg
or
dec
mov
and
mov
shl
aam
push
and
jmp
sbb
dec
push
fldl
hlt
and
sahf
jns
and
mov
jg
push
lock
sti
test
js
push
jns
mov
and
call
cmc
push
std
jbe
xchg
test
xchg
mov
jg
push
jne
mov
and
int3
fstps
xchg
xor
icebp
sbbb
outsb
sub
mov
jl
dec
sbb
js
movl
aam
and
jecxz
lret
cmp
scas
pop
xchg
add
pop
hlt
js
sbb
xchg
hlt
popf
jo
les
mov
add
jbe
int3
out
icebp
jne
std
and
cmp
sub
fidivrl
xor
push
addl
mov
and
inc
xchg
pop
jg
cmp
sbb
shrb
aam
iret
jae
fiadds
inc
divb
cmp
fcoms
inc
outsb
cmpsl
ret
movsl
mov
mov
ja
js
pop
dec
popf
enter
aaa
inc
loope
negl
dec
aas
pop
jnp
cld
xor
sarl
or
lahf
jnp
mov
ljmp
loopne
stos
add
add
rorb
mov
push
adc
adc
or
pop
lahf
lea
sub
xchg
mov
pusha
push
shl
fsubr
pop
dec
inc
cmp
inc
jp
ficoml
pusha
movsb
mov
add
call
pusha
loopne
test
insl
iret
sahf
sbb
xor
loope
test
cmp
outsb
push
iret
ds
jb
xchg
jb
mov
jo
push
jmp
insl
stos
mov
jnp
fucomi
loop
in
sub
in
cltd
popf
ret
dec
cld
rcll
dec
jne
leave
in
xor
clc
mov
hlt
dec
test
push
jmp
pop
enter
jae
fucomi
lods
mov
js
loop
shl
mov
mov
or
jb
pop
pop
xor
pop
xchg
push
aas
imul
adc
jge
and
and
lret
arpl
cmp
pop
or
inc
add
or
adc
andl
mov
adc
lret
scas
imul
cmpsb
inc
fidivs
dec
jbe
mov
pop
jmp
stos
sbb
cli
mov
cmp
push
movsb
cmp
ja
lods
movsl
jge
dec
rcll
jg
outsb
scas
pop
xchg
stc
iret
pop
mov
shlb
je
and
sbb
test
pushf
push
jecxz
fistl
outsl
mov
test
faddl
lods
sub
add
loope
push
jae
push
inc
das
mov
insl
inc
sarb
xchg
pop
rcr
pushl
pop
lahf
or
int
fists
jae
push
shl
pop
inc
dec
sti
shlb
sti
jge
es
mov
push
jns
fisubrs
sbbb
mov
sbb
mov
dec
sbb
mov
lret
das
sahf
adc
and
push
mov
add
in
flds
popf
and
mov
xchg
mov
sbb
pop
xchg
inc
dec
sbb
hlt
jae
pop
cli
in
loopne
rcll
fcmovnbe
push
orl
sub
add
sbb
int
sub
cltd
rclb
mov
or
sub
movsb
insb
cmc
or
mov
add
clc
jae
jmp
adc
popf
xor
mov
loope,pt
dec
pop
xchg
out
xor
xor
sub
lret
and
sub
ret
cmpsb
xchg
aam
daa
dec
and
adc
arpl
js
addb
jl
cmp
int
mov
cmp
and
push
jl
pop
imul
adc
testb
sub
jmp
shlb
js
cs
sbb
cmpsb
stos
push
adc
dec
pop
mov
stos
movsl
dec
lods
out
jge
aas
lods
ja
pusha
lea
aad
lods
mov
fists
mov
inc
sbbl
das
ret
cmp
jge
xor
dec
jge
orl
mov
push
subb
test
adc
aad
jnp
sub
ror
xor
call
incb
lods
jl
mov
xchg
pop
pop
hlt
not
mov
imul
dec
fnstenv
inc
insl
pushf
repnz
mov
ds
into
insb
rclb
in
shll
cmpsl
adc
out
xlat
icebp
dec
cmpsb
mov
out
ss
test
adc
jle
fnsave
mov
movsb
gs
pop
leave
shlb
add
or
rorb
out
cmpsl
out
enter
inc
inc
push
or
insb
lods
sbb
jmp
dec
and
lret
jns
push
fnstcw
inc
push
pop
movsl
outsl
and
add
fninit
push
and
xor
push
cmp
jp
mov
mov
popa
hlt
mov
xchg
andl
shll
mov
jecxz
pop
jbe
and
xchg
int3
mov
sub
sti
pushf
popf
movsb
jb
mull
fsubr
insb
inc
jle
jmp
test
mov
in
jns
jno
fwait
clc
push
lds
cmp
cld
test
call
mov
or
stos
xchg
xchg
add
mov
int3
std
sub
pop
adc
fdivrs
sub
lods
lea
in
jecxz
ds
sahf
pop
les
or
lahf
mov
fidivs
call
imulb
sbb
jbe
mov
cmp
mov
in
mov
cmpsl
aaa
and
popa
fistl
hlt
and
sbb
cmp
mov
mov
mov
mov
dec
jg
adc
inc
dec
jno
push
cmpsl
cmp
sub
sbb
mov
inc
dec
xlat
pop
leave
nop
dec
std
jns
push
jo
mov
jmp
cmp
sarl
icebp
aam
jne
mov
leave
bound
pop
xor
xor
aaa
bound
cs
or
or
inc
imul
dec
cmp
mov
add
mov
addr16
out
xchg
test
sub
mov
xchg
lds
aam
fidivl
fs
and
sbb
dec
dec
sub
jns
mov
inc
or
add
xchg
xstore-rng
cmpsl
push
xchg
jnp
nop
clc
mov
push
fimull
rorl
fucom
push
mov
insl
ja
popa
shrl
insb
xchg
dec
push
sub
xchg
fidivrs
mov
cs
xchg
pop
clc
in
mov
mov
jge
popa
iret
cmpsb
imul
insb
dec
or
sub
out
jne
stos
fnsetpm(287
cmp
sub
ljmp
fisttps
out
and
ret
cwtl
jmp
sti
jo
cmpb
pusha
pop
xchg
addr16
mov
mov
insl
cld
lea
mov
pop
das
mov
lret
jmp
insb
test
loopne
test
cli
hlt
in
sub
int3
add
sub
imul
xor
xor
lea
mov
andb
push
pop
cmp
movsb
lret
or
jp
pop
xor
lret
xchg
repz
mov
inc
dec
mov
not
out
jge
mov
gs
xchg
outsl
shlb
pop
mov
xlat
push
dec
js
cmp
jecxz
movsl
test
dec
sbb
enter
xor
push
mov
xor
xor
mov
addr16
in
dec
xchg
enter
sbb
add
fisubrs
or
push
add
cmpsb
cld
dec
imul
and
fstps
and
jno
pop
lea
insb
cmp
add
mov
popf
or
jae
xchg
jno
and
adcb
xor
lcall
enter
lfs
adc
pushl
ds
das
xchg
lea
sub
mov
iret
pop
into
icebp
adc
xchg
inc
cmpsb
mov
push
add
scas
fwait
sbb
sub
sub
xor
daa
pop
dec
lahf
jmp
xor
jle
mov
ljmp
pop
lods
aad
add
pop
out
in
cli
pop
sub
dec
mov
scas
adcl
mov
rcr
sbb
inc
test
inc
adc
xchg
sbb
add
and
fmul
test
cltd
lret
fstpt
xor
sub
or
cltd
lods
in
fs
xchg
lds
movsl
fiaddl
and
insl
mov
mov
in
sbb
test
dec
sbb
cmpsl
cmc
jo
add
movl
lods
pop
repnz
cmp
popf
push
mov
mov
sti
bound
clc
dec
cmc
push
lds
pusha
add
pushf
pop
out
sub
cmp
adc
add
call
movsb
jle
cwtl
imul
dec
cmc
movsl
loope
push
enter
fdivrs
int3
out
mov
xor
cmpl
and
hlt
jbe
aaa
stos
in
sub
adc
mov
xchg
cli
pop
ret
sub
cmp
cmp
pop
mov
pop
mov
call
xchg
cmpsl
sbb
ss
jge
push
push
sbb
std
adc
cmp
fiaddl
jecxz
imulb
pusha
jl
ret
pop
data16
arpl
inc
aam
jae
pop
xchg
adc
push
pop
scas
int
jnp
minps
mov
push
repnz
lret
inc
out
inc
pop
sbbb
movsl
pop
add
inc
xor
pop
xchg
lret
sbb
hlt
inc
xchg
test
int3
outsb
cli
jno
cltd
pop
std
inc
push
or
lds
fists
adc
outsb
sub
or
mov
xor
sub
dec
dec
mov
arpl
and
test
jae
addl
cmp
xchg
ret
cltd
loop
ret
pop
shrl
in
pop
mov
fiaddl
inc
rcrl
cmpl
xchg
xchg
jnp
fidivrs
xchg
repnz
sbbl
xor
pop
jmp
push
mov
jge
dec
in
pop
mov
mov
add
sub
adc
adc
lcall
scas
jp
sub
jns
sbb
pop
faddl
push
fisttpl
repz
or
add
push
xchg
and
inc
adc
dec
dec
jg
sarl
mov
pop
pushf
mov
mov
jmp
dec
pop
xchg
adc
mov
sub
mov
inc
daa
repnz
orb
ja
push
mov
cwtl
sbb
or
mov
jno
adc
lods
dec
mov
push
imul
mov
xchg
repnz
cltd
mov
rcrb
fucomp
rorl
push
arpl
test
or
or
insb
insb
pop
jecxz
and
pop
jmp
add
ret
pop
mov
add
movsb
push
das
inc
sbb
aad
pop
jl
test
sub
lret
nop
mov
incl
scas
adc
mov
js
sbb
loope
test
jno
enter
mov
bnd
mov
repz
sti
jp
inc
cmc
mov
push
call
pusha
xor
or
jbe
dec
fsubl
sbb
call
ja
cmpsb
add
lods
addb
xchg
xorb
daa
je
pop
fs
stc
test
icebp
pop
loope
push
jae
sbb
sbb
xchg
xchg
xchg
icebp
stos
lods
fsts
fcompl
mov
push
shlb
push
call
mov
iret
arpl
popa
mov
aam
xchg
xchg
dec
shl
addr16
std
xchg
sub
pop
sbb
mov
pop
or
sub
push
push
vpcmpgtb
xor
sarb
jecxz
sbb
dec
mov
and
sbb
std
testl
and
mov
ja
lahf
jecxz
faddl
inc
repz
push
mov
inc
mov
es
repnz
or
xchg
fldenv
lods
cmpsl
mov
fs
fstl
mov
jae
mov
fstps
in
inc
jge
andl
mov
or
mov
xchg
xor
fs
xor
xor
int
pop
aaa
and
stos
shrl
xchg
movsb
movsl
fstl
adc
das
inc
in
push
daa
mov
push
xor
xor
jl
push
movsb
shll
cmpsl
push
dec
xchg
ficoms
mov
dec
pop
fimull
in
cmp
adc
lods
lea
inc
adc
push
outsl
sbb
enter
in
sub
add
add
rclb
xor
and
lods
mov
adc
xor
stos
sbb
mov
adc
mov
test
std
cmp
mov
jp
daa
add
mov
imul
sub
xor
aad
push
push
shrl
cmp
inc
stos
adc
lods
jecxz
fdivrl
movsb
dec
push
inc
or
punpckhbw
lods
jo
jge
mov
shll
mov
push
cmp
push
jp
cmp
test
push
jecxz
mov
imul
enter
loop
call
arpl
fisttps
sub
and
xchg
cmpsl
cwtl
add
xchg
outsb
dec
std
add
push
mov
jne
dec
pop
lds
xor
xor
jbe
in
jnp
sbb
xchg
daa
popa
dec
lahf
jp
xchg
pop
je
fisttps
sbb
mov
mov
add
fwait
dec
pop
stc
sub
or
jo
sbb
fimull
sub
mov
ss
mov
adc
mov
adc
cmpsb
jns
xchg
sub
arpl
dec
aas
ret
mov
pushl
add
or
out
and
mov
scas
or
mov
cmp
cmpsb
ja
dec
fidivs
scas
push
add
xchg
inc
int
jno
roll
shll
xor
jp
lcall
test
jl
push
dec
loope
sbb
sbb
out
rol
mov
jge
jg
xchg
bound
leave
xor
ret
mov
jg,pt
xor
daa
add
push
shl
pushf
aam
dec
dec
inc
and
iret
mov
lret
shll
inc
ret
or
push
enter
or
stos
arpl
jp
into
imul
hlt
pop
andl
cmpsb
loop
test
or
and
and
leave
or
xchg
sbb
jnp
cli
jno
popa
fsubs
adc
daa
xbegin
in
scas
aas
adc
sahf
mov
adc
adc
loopne
loop
jmp
or
push
xchg
repnz
cs
js
xor
inc
jbe
repz
xchg
push
shlb
lods
cs
lock
imul
inc
adc
jl
jge
sarl
adc
aaa
scas
je
add
sbb
lea
aam
shll
xchg
dec
xchg
ret
inc
lahf
mov
add
push
push
adc
jo
stc
or
cmp
movsb
jbe
int3
push
add
out
out
pop
jle
pushf
movsl
mov
dec
mov
lret
in
and
xchg
leave
bound
sub
fistpl
and
or
xchg
pushf
mov
aad
sub
and
sbb
sub
js
or
out
adc
out
cmp
jg
push
out
mov
or
stos
pusha
outsb
jmp
fsubr
movsl
or
or
push
xor
cmp
ficoms
adc
sbb
mov
into
jmp
push
mov
lret
fsts
adc
sub
pushf
push
jns
cltd
fldcw
and
es
dec
push
cmp
and
or
dec
xchg
cmp
repnz
push
mov
xor
add
push
out
mov
arpl
add
mov
pop
mov
mov
jb
arpl
data16
xrelease
jp
fsts
sbb
inc
add
test
jp
jg
pandn
jge
mov
popf
nop
scas
inc
ror
es
cmp
in
stc
mov
xor
rcll
xor
mov
lcall
cs
cmpb
and
clc
subl
lods
xor
adc
mov
flds
decb
frstor
or
inc
dec
pop
mov
lods
lods
inc
mov
shl
cmc
adc
test
insb
ror
dec
inc
test
adc
mov
xlat
dec
sbb
xor
out
or
pop
pop
imul
int3
dec
pop
mov
jne
aam
mov
ss
jo
xor
mov
cltd
lea
sbb
xchg
sahf
shlb
stos
push
std
clc
out
vmread
aaa
sub
push
jno
and
dec
sbb
xchg
shll
aad
mov
inc
jmp
shrb
pop
jg
or
nop
and
ficoml
cs
sub
shrl
cmp
andl
cmp
repz
inc
adc
push
aad
xchg
adc
cltd
loop
pop
sbb
adc
enter
mov
pop
or
jp
mov
jge
sahf
mov
dec
pushf
sbb
push
xor
mov
enter
loope
add
int3
out
add
test
das
adc
mov
push
lds
inc
pop
add
sbb
xor
dec
fsubl
jns
and
ljmp
int3
ja
das
push
movsb
cld
std
or
pop
rcll
push
icebp
sbb
fs
sbb
lock
mov
shrl
mov
xchg
inc
mov
push
in
push
cli
cmp
or
ficoms
dec
mov
int3
es
dec
out
test
cmp
out
fs
cmp
mov
bound
adc
xlat
cmpsl
lods
iret
dec
cmp
movsb
fcmovnbe
xchg
fiadds
fsubs
inc
sbb
pusha
lods
pop
jl
in
cmp
gs
repnz
xchg
xchg
jae
push
enter
pusha
push
xlat
sub
out
stc
rolb
in
jns
xchg
fsubl
in
test
push
outsb
xchg
cmp
iret
nop
cs
lods
push
mov
and
push
jbe
fisubs
sbbb
sti
dec
add
xchg
jns
xchg
inc
push
jl
sarl
xlat
roll
lea
jmp
fiaddl
jle
out
es
pop
outsl
ljmp
lret
pop
lea
mov
stc
mov
xchg
call
jns
add
mov
popa
enter
arpl
sbb
or
ret
inc
push
notb
or
mov
bound
push
mull
jge
sahf
insb
push
dec
inc
ret
sbb
cmc
lods
mov
push
cld
jne
addr16
insl
sbb
fnsave
pop
and
sbb
repz
mov
mov
push
lock
outsb
sbb
insl
cs
gs
sub
add
sbb
or
movhps
mov
push
int
sub
popa
ss
enter
hlt
in
in
ja
fs
push
mov
pop
aaa
mov
loope
mov
mov
dec
lret
xchg
dec
repz
andl
sbb
xchg
and
cmc
or
adc
outsl
push
sub
stos
xor
jnp
xchg
clc
sbb
pop
push
outsl
pop
popa
add
mov
adc
dec
loop
fcmovnbe
mov
jbe
cmp
js
mov
cmp
xchg
outsb
mov
test
mov
outsb
cmp
fmul
xor
sbb
adc
inc
dec
cmpsl
cmp
inc
jbe
outsb
pop
ja
cmp
out
and
pop
inc
subb
aam
add
fldcw
aas
stos
daa
xlat
mov
cmp
nop
orl
xchg
push
pop
mov
movsb
push
inc
repnz
popf
sbb
or
ljmp
mov
popa
jbe
cs
pop
xchg
fcompl
leave
std
dec
and
lea
lock
pop
pop
jns
das
cwtl
mov
repnz
jl
jmp
pop
cmp
pop
enter
popf
jno
popf
in
les
sbb
daa
inc
popa
adc
push
xor
mov
mov
repnz
inc
out
cli
popa
test
lret
xchg
and
mov
in
mov
movsb
js
sub
mov
fistpll
jl
in
xor
leave
fs
fisubs
sub
loope
adc
rcr
popf
jo
std
add
mov
adc
data16
dec
cmp
inc
mov
mov
roll
scas
rcrb
bound
mov
lret
rorb
scas
call
dec
das
out
add
lock
cmp
adc
push
inc
jmp
pop
push
mov
loopne
sub
push
add
inc
xor
lods
mov
inc
aad
jae
xchg
push
adc
mov
shl
inc
fdivrp
aam
push
and
popa
int
adc
push
push
aad
xor
icebp
push
adc
jecxz
test
aad
gs
cmpsb
out
cs
pop
xchg
inc
mov
mov
push
lcall
adc
movsb
add
mov
jns
mov
cmpsl
and
addr16
fdivrs
cmpsb
aam
xchg
stos
xchg
xchg
stos
test
push
push
sub
je
pop
or
out
cli
and
jge
sbb
pop
lret
pop
rorl
fcoml
test
cld
inc
sub
mov
ficoml
es
adcl
mov
fmuls
aad
and
ffree
mov
aam
hlt
pop
adc
mov
enter
pop
xchg
add
test
mov
cmpsb
jg
jnp
cmc
or
rolb
loope
xor
cwtl
movsl
je
jo
and
xor
push
scas
ret
adc
push
mov
sbb
sub
cmc
xchg
adc
stos
inc
xor
out
inc
insb
popf
cmpsl
xor
add
stc
add
insb
and
ret
lret
mov
mov
dec
add
jg
push
inc
push
test
push
push
push
imul
jg
mov
cwtl
jno
dec
insl
xchg
add
sub
scas
fsubs
and
xchg
adc
jbe
sbb
int
pop
cmp
movsb
out
jmp
xchg
sub
test
add
mov
jl
ljmp
repnz
jbe
jae
mov
pop
xor
movsb
std
jge
jns
dec
test
mov
rorb
cmp
adc
arpl
pop
into
and
je
pop
mov
imul
xchg
outsl
or
int
push
mov
mov
pop
xor
push
out
mov
sbbl
adc
sbb
ss
in
mov
dec
sub
rcll
notl
aad
fdivrl
pop
imul
jne
cld
jmp
repnz
jmp
dec
sbb
pop
fldl
dec
stos
jge
aas
push
sub
cmp
cmp
mov
push
pop
or
cmp
jno
bound
hlt
std
les
push
mov
in
movzbl
icebp
mov
dec
sbb
mov
mov
stc
pop
mov
bound
xchg
cs
mov
pop
movsl
jecxz
push
jb
test
mov
inc
clc
pop
aam
jo
jne
xlat
xchg
push
arpl
mov
sti
lcall
cmp
hlt
cmpsb
testl
mov
mov
inc
pop
jg
bound
movsl
jno
sub
push
mov
pop
test
sti
mov
les
stc
mov
out
xor
in
mov
popa
lahf
shll
sub
mov
push
jne
cmpsl
shrl
dec
pop
xchg
jle
jno
cli
jb
or
int
add
sbb
mov
inc
scas
push
test
sub
cmpsb
xor
outsb
jbe
xchg
push
xchg
pop
inc
imul
lock
mov
ss
sub
push
cmp
sub
cmp
mov
sub
fcmovne
test
pop
adc
sub
imul
shl
insl
fstpl
popf
or
xchg
push
loope
shll
dec
cmp
into
mov
test
daa
pop
gs
jno
fildl
fdivrs
xchg
xchg
jmp
push
lods
adc
inc
in
mov
loopne
hlt
clc
mov
push
lds
lods
push
jo
movsb
dec
and
add
xor
fdivrp
imul
sub
dec
bnd
adc
iret
sub
addr16
test
sbb
outsb
loop
out
push
das
sub
add
imul
and
imulb
xchg
lods
push
jo
out
sbb
push
xlat
adc
inc
pop
pop
pop
jno
leave
dec
fisttpll
xor
and
jne
in
pop
push
test
add
mov
inc
sbb
nop
sbb
rcr
call
cmp
andb
jmp
loopne
icebp
pop
sbb
cmp
test
sti
iret
mulb
lcall
cli
scas
mov
imul
out
cli
or
dec
fisubrs
lcall
lcall
mov
aaa
shl
loopne
pushf
jbe
cmp
push
mov
pop
test
and
xchg
outsb
pop
dec
push
and
std
jno
sbb
cltd
jno
mov
jp
or
sbb
addb
out
dec
dec
cmc
call
adc
int3
loopne
std
and
lret
add
add
in
fsubs
lods
inc
push
adc
pop
in
sahf
mov
mov
dec
mov
xchg
mov
cmp
loopne
movsb
data16
xchg
loope
dec
orb
jbe
sbb
xchg
addr16
xor
mov
adc
mov
sti
mov
sub
pop
pop
inc
pop
jecxz
inc
js
imul
mov
and
jge
add
jge
stos
rorl
in
xchg
insl
inc
push
inc
jmp
aam
inc
xchg
sbb
mov
push
jo
cmp
sbb
inc
sbb
pop
test
add
fsts
xor
mov
push
aad
shlb
ljmp
and
xchg
push
aam
jg
adc
add
cltd
cmp
ss
adc
fsubrs
bound
movsb
dec
or
cmp
mov
sbb
lret
nop
pop
repz
aad
cli
test
push
inc
rdmsr
dec
outsb
adc
outsb
pop
pop
dec
bound
subl
int
hlt
xchg
loope
das
pushf
sbb
pushf
test
mov
jg
hlt
and
cmp
orb
inc
jecxz
repnz
pop
sti
rclb
mov
pop
push
rcrb
adc
xor
sub
test
das
adc
xlat
clc
adc
out
sbb
orl
and
out
or
add
das
test
add
and
scas
out
ss
cltd
ss
lds
andl
jle
mov
mov
mov
enter
dec
stc
or
sbb
fmull
andb
and
leavew
push
nop
sub
js
js
popf
dec
sahf
inc
iret
addr16
pop
es
xchg
insl
xchg
ja
jno
push
sub
inc
movb
xor
add
or
mov
repz
xor
shrb
add
lcall
sub
xchg
call
xor
jnp
call
faddl
lret
enter
and
add
packuswb
cli
dec
sbb
cmp
fstpl
stc
inc
iret
cmp
cmp
sub
or
mov
adc
repz
pop
inc
aam
lret
mov
lods
sbb
stos
call
cmp
adc
add
shrl
adc
jae
inc
dec
stc
pop
cs
mov
mov
add
add
xor
jge
push
mov
in
les
jl
adc
mov
push
xchg
int
xor
pusha
dec
xchg
pop
lahf
sar
or
push
ljmp
out
imul
mov
mov
mov
mov
inc
bound
out
push
outsb
jno
xchg
outsb
mov
cmp
icebp
movl
cmpl
xchg
push
pop
jne
shrl
mov
inc
cmp
xlat
pushf
aas
adcb
or
push
jle
pusha
adc
gs
bswap
push
jg
in
mov
mov
mov
sbbl
std
cs
pusha
mov
mov
cmp
jb
test
xchg
out
aam
inc
sbb
sbb
cltd
adc
inc
mov
xchg
and
fcompl
jno
loope
psubw
inc
bound
push
jne,pn
scas
mov
xchg
pop
out
movsl
imul
xchg
inc
fistps
jmp
mov
mov
data16
adc
jge
xlat
xchg
xor
sub
sbb
add
mov
fidivl
insb
push
push
mov
repnz
xchg
jae
repz
push
jge
jns
push
mov
lods
lret
dec
shl
sub
sub
aad
cmp
clc
data16
add
fcompl
int3
cld
lods
pop
push
pushf
push
sbb
jbe
daa
sbb
sbb
mov
neg
mov
insl
xchg
and
push
aas
loopne
sub
inc
adc
repnz
or
xor
insl
lods
ret
sahf
adc
repnz
mov
and
gs
hlt
jae
mov
mov
jb
aam
popf
pusha
les
xchg
loop
push
in
sbb
call
arpl
out
dec
pop
lods
push
loope
leave
iret
dec
fidivrl
loopne
pop
cltd
insb
mov
imul
cmpsl
jo
inc
es
jmp
pop
jbe
in
adc
push
xchg
and
adc
test
mov
shll
aaa
mov
insb
mov
or
mov
or
jne
mov
mov
fisubrl
insb
jns
ret
cmp
sahf
data16
aaa
in
xchg
add
out
xor
aas
and
mov
jg
hlt
cmp
jb
in
fsub
in
xor
pop
and
filds
movsl
ficomps
fisubl
shll
add
sahf
xor
xor
pop
sti
jmp
sub
int3
or
rorl
xchg
mov
repnz
xchg
popa
jbe
shll
inc
jecxz
pop
pop
pop
jp
lock
jns
out
in
pop
xchg
push
std
in
adc
inc
mov
pop
lahf
adc
add
push
inc
test
jns
pop
sub
in
push
or
mov
and
ret
sbb
mov
into
cld
aam
jl
mov
add
pop
push
jb
inc
jae
daa
mov
push
cmc
cmp
std
xchg
stos
loop
lock
ficompl
push
rcr
mov
mov
cmp
sti
cwtl
cmp
xchg
jb
mov
dec
and
adc
or
pusha
pop
jb
shll
dec
inc
mov
addl
stc
ja
mov
enter
dec
push
push
inc
lret
fcomps
or
stos
or
test
shlb
dec
xchg
ret
divl
hlt
sub
ret
push
and
aas
iret
movsb
mov
stos
enter
jbe,pt
inc
test
adc
ja
addb
in
push
sbb
mov
clc
lret
inc
mov
lahf
and
insb
outsl
leave
or
iret
mov
mov
les
int3
imul
mov
xchg
or
ss
scas
mov
subl
add
hlt
push
mov
ret
decb
ret
push
dec
daa
insb
sbb
jae
js
mov
jno
mov
jnp
inc
daa
sbb
cmp
enter
adc
push
push
cmpb
sti
adc
fnstsw
or
mov
push
repz
in
pop
in
jns
mov
clc
sti
jecxz
mov
push
mov
ss
lds
inc
xor
pop
jp
test
lea
mov
inc
lret
loop
enter
or
cs
insl
push
daa
xchg
scas
or
sub
les
sub
ficomps
es
xchg
movsl
and
clc
sbb
cmp
je
mov
out
inc
shr
jp
add
mov
mov
add
adc
mov
test
lret
in
sbb
cltd
push
fsts
fcmovb
xchg
sub
push
ljmp
lcall
mov
aam
push
ret
retw
lahf
mov
adc
ret
xor
aas
dec
in
in
incb
mov
push
xchg
ret
sub
test
loopne
pop
je
cltd
cmp
fsubr
mov
inc
jne
rclb
pop
mov
push
mov
inc
cmp
js
sti
or
loope
jmp
xchg
fwait
lret
subl
mov
das
outsl
mov
sbbl
jae
movsb
inc
dec
mov
mov
push
iret
pop
inc
stos
mov
cli
sbb
push
mov
push
inc
xchg
cmp
cmpsb
cltd
mov
and
rcrb
out
ret
insl
push
scas
lods
mov
stc
lds
cmpsb
mov
int
xchg
sbb
and
test
cmp
stc
lahf
or
movsb
scas
popa
push
jno
dec
inc
gs
pop
mov
mov
or
mov
or
xor
mov
test
inc
test
cld
repnz
adc
add
dec
in
cmc
and
pushf
pop
in
cmc
mov
std
cld
and
inc
jns
loop
xor
xor
cmp
andl
ret
addr16
mov
scas
ss
nop
arpl
push
and
jb
xor
mov
jo
inc
fisubl
mov
cmp
jg
push
xor
lods
xlat
mov
movsb
lods
hlt
ljmp
jno
pop
push
mov
loopne
add
jnp
xor
insb
dec
pop
dec
and
jmp
xchg
loopne
or
inc
sbb
popa
scas
dec
cmp
cmp
pop
out
adcl
out
add
pop
rol
popf
mov
push
mov
xlat
es
or
cmp
ret
pop
mov
cmp
jbe
lea
xor
fwait
mov
xchg
jno
cs
mov
push
mov
pop
push
inc
stos
mov
add
fldenv
cmp
adc
outsb
ret
xor
lahf
jmp
ljmp
mov
jle
sbb
cmp
ret
loopne
xchg
push
js
add
mov
dec
call
mov
shrb
cs
lea
sub
dec
out
xor
pusha
mov
divb
ss
outsb
rcl
mov
xor
in
sbb
adc
fstpt
add
adcl
pop
inc
pop
repnz
xchg
push
loopw
mov
popa
outsb
push
lahf
outsl
mov
cltd
and
bound
mov
imul
loope
mov
xchg
addr16
lea
add
dec
fisttpll
repnz
mov
push
and
stos
into
repnz
clc
mov
mov
sbbb
inc
adc
cld
and
jbe
pop
shll
gs
pop
xchg
jmp
insb
sub
dec
mov
pop
aad
xlat
cli
jbe
outsb
test
fisttpl
pop
mov
call
daa
pusha
cmp
insl
bound
sbb
xchg
xchg
mov
mov
scas
inc
add
shrb
dec
jbe
add
in
or
push
lcall
push
rclb
push
lret
clc
push
pop
movl
mulb
mov
cld
addr16
push
cwtl
lcall
into
int3
sub
xor
jmp
jle
shll
scas
bound
push
addl
cli
pop
es
add
sub
push
dec
jne
push
inc
aam
les
in
sub
fwait
jnp
pop
leave
js
pop
cmp
lock
mov
incl
jae
leave
pop
push
mov
add
adc
xchg
sub
xor
jo
stc
push
adc
hlt
xchg
call
inc
stc
ret
das
or
mov
int3
faddl
lcall
sbb
dec
jnp
ss
repz
fcomps
imul
dec
jge
lea
sub
bound
dec
cmp
jl
sahf
fsubl
sbb
xchg
mov
xchg
imul
jbe
cs
cmp
inc
ja
mov
cld
inc
leave
jmp
popf
fnstenv
rcll
clc
hlt
data16
dec
pop
and
out
fidivrs
xor
clc
cltd
sarl
cmp
mov
add
adc
int
inc
adc
mov
and
gs
push
lods
inc
outsb
add
shlb
xor
aad
jnp
mov
popa
inc
pushf
fstl
mov
lods
push
and
mov
into
adc
add
and
or
jae
push
adc
inc
lret
lret
aas
arpl
mov
jmp
fbld
sub
sbb
pop
incb
cmp
mov
lea
lods
fcomi
xchg
mov
mov
cwtl
add
adc
int3
dec
mov
loope
decl
push
pop
inc
mov
pusha
out
jo
test
pushf
mov
dec
ss
fs
and
xor
into
mov
mov
aad
push
pop
aam
scas
and
in
add
rolb
mov
ret
scas
and
in
test
ds
sub
jbe
sbb
or
jno
arpl
mov
daa
inc
icebp
imul
push
push
pop
sbb
mov
lods
inc
xchg
std
sbb
mov
xchg
pusha
mov
xchg
lcall
xchg
xor
pop
clc
les
sbb
lea
call
push
or
testb
mov
and
adcl
or
mov
adc
insb
dec
xchg
jle
jmp
sub
leave
pop
mov
repnz
pop
and
in
mov
jae
xchg
jo
add
pushl
fcomps
fisttpl
mov
xor
stos
adc
and
arpl
and
push
je
mov
jb
adc
in
xchg
pop
mov
mov
jge
pop
pop
aas
cmpsl
xchg
pop
cli
pop
sub
ds
data16
ret
xchg
mov
rolb
inc
insb
and
mov
test
xor
mov
shll
fildl
sahf
loopne
add
leave
sahf
loope
jecxz
adcb
or
decl
cmc
aam
push
nop
flds
sub
shll
repz
jg
loope
inc
push
inc
scas
mov
in
adc
xchg
shr
jp
xlat
shufps
aam
adc
popf
and
mov
imul
lods
mov
adc
cmp
mov
lods
daa
or
mov
add
test
push
es
aaa
xor
xchg
mov
ss
cmpsb
std
mov
dec
imul
mov
mov
lods
mov
jp
jno
pop
fs
xchg
fs
std
cmp
vandpd
mov
jg
sbb
insb
push
lcall
dec
mov
cwtl
jns
cmpsb
adc
sub
push
cld
in
push
xchg
pop
mov
mov
aas
ficompl
mov
ret
jno
sub
inc
push
push
test
fstp
push
fwait
sti
push
adc
push
imul
or
in
mov
stc
imul
ret
jne
xor
insb
sbb
xchg
dec
call
mov
std
mov
mov
in
aam
dec
cmpsb
lock
sub
movsb
xor
cmp
popf
lret
scas
pusha
dec
push
aad
fisttps
insl
and
notb
mov
pop
dec
xor
jnp
xchg
dec
out
les
jge
inc
nop
mov
dec
add
add
xchg
rcrl
jnp
jno
push
ljmp
sbb
cmp
repnz
or
xor
mov
mov
lret
xchg
leave
pop
xchg
cmp
mov
xor
cli
js
jmp
divl
ret
xchg
fisttps
lds
xchg
je
jp
adc
or
sub
cmp
not
mov
mov
negl
mov
fcomp
out
fstpl
cmc
add
pop
hlt
xor
int
mov
jns
jno
movsl
xchg
inc
cmp
mov
divl
stc
pop
jg
imul
xchg
pop
xchg
std
sub
js
scas
jl
dec
les
xlat
jne
mov
sbb
cmpl
pushl
test
shlb
push
jno
hlt
cld
pop
jmp
mov
ss
cli
sarl
lods
push
sub
test
fs
es
cmp
adc
leave
fnstsw
mov
enter
cwtl
add
jno
sub
inc
movsl
sub
pop
lods
sbb
cmp
fnstcw
push
cmc
into
das
pop
sbb
cs
jo
mov
test
test
inc
sbb
sub
xchg
mov
aad
popa
jge
and
sbb
testl
in
adc
je
push
add
repnz
adc
loope
jae
pop
lods
popa
mov
loop
sbb
stc
stc
inc
jecxz
test
xchg
dec
cli
pop
add
sbb
add
rcrb
in
mov
sub
xchg
dec
dec
ds
mov
xor
test
dec
pop
sahf
push
ss
in
fisttps
movsl
mov
jecxz
cmpsl
or
subl
pop
pop
push
sub
das
mov
fdivl
out
int
sub
and
and
cmp
mov
rorl
or
cmp
stc
jns
gs
add
fisttpll
in
rorl
push
inc
int3
in
mov
sbb
sub
adc
roll
inc
mov
sbb
mov
out
lods
and
jecxz
je
aas
ss
push
ret
and
sbb
insb
pop
xchg
push
std
pop
mov
cmp
lea
mov
xchg
bound
stc
lods
out
sarb
mov
fcompl
movsl
cmpsl
lcall
addr16
mov
sbbb
bound
jmp
mov
sbb
jecxz
mov
push
jns
cld
movsl
sub
les
jle
adc
inc
in
pop
or
mov
rorl
cmc
int3
lcall
xchg
sti
popa
mov
out
or
daa
push
ss
jo
adc
xor
data16
fld
addr16
lock
loop
in
ja
sub
int3
insb
jmp
dec
out
lahf
sahf
ret
ss
test
jg
sub
mov
pop
mov
pop
scas
lods
pop
je
movsb
and
mov
jp
test
das
dec
icebp
icebp
aas
lahf
aam
lret
mov
dec
outsb
pop
push
cwtl
cmp
inc
and
sahf
adc
filds
in
sbb
and
addl
inc
xchg
jle
cli
inc
xor
and
inc
das
stos
sub
add
ret
pushf
mov
xor
jp
cwtl
cmp
sub
addb
push
push
mov
inc
mov
mov
divl
cld
adc
andb
call
xor
jg
push
pop
inc
push
and
clc
and
lods
xorl
dec
sub
neg
out
add
cmp
sub
fs
bound
testl
lea
daa
adc
frstpm(287
mov
dec
adc
aaa
adc
mov
das
outsl
cmpl
xchg
aam
dec
jno
jo
mov
jl
gs
inc
mov
jb
or
xor
std
sbb
cwtl
pop
out
inc
into
xlat
push
in
pop
insb
inc
pop
cmpsb
push
ret
cmpsl
sub
das
mov
roll
pushf
notb
cmpsl
lcall
ficoml
lock
and
clc
cli
jo
int
lods
lret
pop
sti
clc
test
orl
in
rclb
lods
rorl
jge
lret
pop
int3
jmp
xchg
fisttpl
stos
sahf
adc
ljmp
aaa
inc
pop
jge
or
and
pusha
push
cmpsl
dec
adc
push
mov
cmp
xor
stc
lahf
inc
enter
pop
cmp
add
mov
push
xor
int3
imul
fwait
adc
sbb
adc
insl
push
mov
push
jmp
cmp
push
mov
cld
hlt
mov
ret
sub
xchg
fcoms
ja
std
jae
xchg
fldenv
int
fnsave
inc
repz
mov
popa
ljmp
add
in
shlb
adc
pop
test
jmp
push
adc
jp
pop
int
ljmp
xchg
ret
jne
adc
into
inc
or
addr16
adc
push
dec
movsb
stos
leave
pop
push
dec
jae
lcall
pop
pop
popf
addr16
inc
cli
mov
loop
lods
popf
jne
adc
addl
daa
adc
scas
and
lds
pop
push
ror
xchg
adc
frstor
lea
or
jnp
jmp
outsl
loopne
xor
mov
jp
xchg
and
inc
jge
jle
aaa
sub
les
and
push
mov
mov
cmp
sbb
ljmp
mov
or
lahf
stos
rcrl
clc
std
adc
stos
sub
jmp
add
xor
cmp
pop
test
and
int3
dec
rcrb
sbb
pop
mov
cmp
sbb
arpl
sub
das
add
jbe
aas
ljmp
lods
ss
out
fcmove
mov
aam
rclb
adc
shll
jge
pop
stos
jmp
pop
add
push
movsb
dec
pop
or
dec
sbb
jne
xchg
test
mov
jns
cmp
or
cmp
das
pop
sbb
ror
stos
test
cmpsb
and
nop
jae
inc
lds
scas
int3
xchg
jo
xchg
adcb
xchg
lock
movsb
lahf
xor
test
out
push
arpl
mov
fnsave
test
pop
push
loop
and
dec
add
dec
repnz
jl
xchg
xchg
pop
mov
out
stos
inc
or
dec
ljmp
dec
mov
cmp
xchg
fwait
cmp
push
ljmp
les
ficomps
adc
fdivrp
iret
mov
push
mov
xor
xchg
jmp
icebp
xchg
mov
or
out
cmp
arpl
lds
scas
dec
adc
jne
push
add
je
or
aas
mov
or
or
jp
loopne
pop
lock
pop
js
cli
imul
adc
movsl
into
addl
loope
jno
cwtl
sub
daa
out
add
sbb
sbb
andl
aad
sbb
aas
outsl
imul
and
mov
xchg
addr16
mov
mov
xchg
ret
xor
sahf
xor
in
inc
push
push
mov
in
out
les
gs
inc
or
test
andl
push
fidivrs
fildll
lods
sub
adc
dec
add
or
cli
lcall
fs
jl
pop
mov
jo
jmp
jmp
out
inc
cli
pop
cmc
pusha
ret
or
push
or
pop
jmp
xor
mov
scas
test
lods
lret
sub
xchg
push
ret
sbb
mov
xor
add
out
dec
jb
xchg
cmp
mov
cmp
add
cld
push
addr16
lods
cmp
std
jg
cld
mov
cmpsl
mov
frstor
mov
loopne
outsb
pop
jecxz
mov
mov
cmp
pushf
or
fidivrl
sbb
aas
ss
int3
ror
mov
loope
enter
push
mov
out
pop
mov
fcoms
jge
jns
fidivrs
call
jbe
mov
xor
cmp
loope
mov
push
ljmp
test
test
adc
sub
iret
sbb
push
sahf
ss
adc
repnz
pop
test
pushf
mov
xor
mov
pushf
jg
adc
mov
sti
lcall
xchg
in
test
xor
in
orl
cmp
fildll
arpl
mov
mov
fdivp
push
rclb
mov
xchg
cld
lds
hlt
cli
fnstenv
jbe
or
pop
pop
jge
sbb
sbb
add
ret
ljmp
les
stc
cmpsb
inc
add
outsb
shl
lcall
aad
xor
pop
push
adc
xlat
fbstp
das
xchg
push
cmc
jg
lcall
push
jns
fisttps
adc
dec
aad
mov
inc
mov
push
xor
test
inc
movsb
add
clc
les
pop
insl
push
je
or
inc
add
pop
mov
negb
imulb
ja
or
in
add
popa
orl
cmp
add
pop
pop
fadd
xor
aad
cmp
je
out
lds
data16
mov
sti
mov
sbb
mov
lahf
es
rorl
arpl
daa
scas
cmp
test
ficoml
pushl
sub
movb
xchg
mov
and
ds
mov
ficomps
xchg
imul
sbb
pop
adc
xchg
jle
or
in
mov
mov
mov
xchg
inc
icebp
dec
rorb
dec
clc
cltd
mov
test
mov
aaa
data16
das
pop
stc
in
rcll
out
lods
mov
jnp
add
push
mov
andb
out
mov
lds
mov
fmull
hlt
int3
dec
xchg
dec
sbb
xchg
add
ret
imul
xor
outsl
mov
shll
push
mov
xchg
mov
xchg
daa
mov
push
rcrb
fldl
mov
jge
xchg
fidivrs
adc
mov
and
adc
xchg
ret
fldt
jo
mov
pop
sbb
fldt
cmc
cld
mov
inc
fsubrl
xchg
sub
cmp
push
sbb
jne
adc
jecxz
xor
or
fistpl
push
jns
mov
rcrb
push
cli
xor
in
leave
cs
das
fildll
outsl
sbbb
fsubp
inc
push
pop
int
in
repz
ja
rcl
outsl
dec
lret
or
sub
mov
and
add
cmpsb
and
outsb
mov
ja
into
add
dec
push
sbb
shl
xorl
or
notl
in
popa
cmp
out
stos
cmc
ja
pusha
push
mov
ja
repnz
aas
movsl
jl
add
cli
addr16
cmovge
mov
xorb
lods
cs
imul
adc
dec
out
fucom
push
stos
push
and
scas
les
mov
and
cmpsl
fistpl
jo
leave
jne
mov
imul
add
cwtl
sub
repz
stc
ret
mov
ret
into
xchg
out
dec
imul
xlat
ja
or
shrb
negl
in
das
cmp
push
or
mov
fcmovu
fnstsw
test
and
xor
sub
xchg
arpl
cmp
out
inc
cmc
movsl
mov
sbb
and
xchg
subb
movsb
scas
imul
xlat
loope
xor
out
sahf
bound
dec
cmp
out
and
repnz
imul
pop
pop
icebp
sub
sbbb
cmc
aad
sub
test
dec
sbb
out
xor
push
orb
push
ret
xchg
jle
lock
or
xor
flds
or
and
je
in
adc
add
idivl
add
leave
mov
mov
jnp
mov
push
mov
bound
cmp
out
test
arpl
lock
dec
and
mov
sbb
dec
sbb
inc
mov
imul
adc
xchg
enter
ja
bound
addr16
inc
jae
sub
scas
loope
insb
mov
icebp
and
lods
jl
nop
pop
push
xchg
push
data16
mov
je
jns
add
mov
pusha
jb
shll
jnp
ja
loop
inc
xchg
mov
addb
mov
dec
filds
out
pop
clc
and
dec
jbe
fdiv
mov
mov
lea
fldl
bound
jmp
push
pop
jno
enter
aad
xor
je
push
sbb
clc
pop
outsb
hlt
add
scas
cmpb
arpl
inc
cmpsl
and
dec
xchg
iret
push
loop
add
je
pop
xchg
arpl
decl
das
jne
rorb
add
pop
ds
jae
aad
lret
xchg
jle
pop
adc
mov
sbb
mov
lret
std
test
mov
mov
adc
loop
hlt
and
test
cltd
sbb
popf
sub
insb
int3
imul
insb
mov
mov
repz
push
enter
mov
repnz
lcall
movsl
xchg
call
sub
cld
js
push
pop
rcl
cmp
pop
icebp
and
sub
sbb
call
inc
leave
test
and
sub
inc
loope
pop
data16
rcrb
or
call
jnp
ja
notl
movsl
scas
fwait
dec
add
sub
add
xchg
jns
pop
lret
mov
sbb
mov
iret
cmp
fs
mov
mov
push
mov
adc
mov
les
sbb
cmc
jge
dec
and
fidivrl
jnp
mov
loope
push
sub
das
mov
int
movsb
add
stc
add
in
sbb
lods
jae
cmpsl
jno
mov
in
daa
sub
loope
xchg
pop
inc
nop
pop
fwait
in
sub
sub
fcmovb
insl
nop
push
sub
sub
mov
inc
in
xor
ja
mov
pushf
and
jle
into
and
push
jo
xchg
mov
adc
inc
pop
rcll
mov
push
out
cmpb
sbb
out
sub
cmc
fstpl
nop
bound
pop
and
dec
jo
je
test
loope
mov
fcomps
cli
xchg
adcb
jl
fidivs
ljmp
pop
mov
mov
std
mov
sbb
adc
xorl
sub
sti
lcall
adc
clc
dec
mov
mov
outsl
loop
and
push
cld
cmp
adc
adc
push
movsl
mov
inc
fsts
sbb
fwait
xchg
repnz
subb
sub
dec
es
mov
push
jb
or
lahf
jbe
cmp
adc
pop
jns
daa
cmp
xchg
lock
xor
dec
jecxz
aad
and
or
cmpl
hlt
mov
stc
movsl
in
fdivl
stc
test
sub
enter
sub
subl
lds
out
loop
push
mulb
xchg
shrb
test
or
fsubl
jp
cmp
jle
push
jnp
out
jnp
cmp
rcr
xor
call
lret
andl
adc
pop
mov
push
loopne
add
icebp
lock
or
rorl
mov
stos
sbb
sub
pop
mov
iret
rcl
fwait
push
jge
push
or
dec
sti
pop
jmp
cmp
sbb
pop
and
sub
jl
push
lock
lahf
mov
or
inc
add
ss
mov
sbb
cmp
mov
cs
mov
sbb
jge
push
pop
sub
xor
sub
std
or
insb
dec
jns
xchg
pop
xchg
pusha
loopne
push
mov
in
pushf
cwtl
imul
pop
and
pop
mul
jp
cmc
mov
dec
in
sub
jge
push
popf
cmpsl
ss
fists
orl
push
sub
cmp
iret
sbb
xchg
out
xor
and
push
bound
and
mov
nop
xchg
mov
push
inc
xor
aam
int
jb
in
and
addl
loopne
shrb
mov
dec
pop
out
aaa
mov
hlt
jl
mov
nop
lret
outsl
adc
aam
mov
sbb
sarb
jae
dec
mov
xchg
adc
cmpsl
mov
lret
in
mov
fnstsw
repnz
pop
mov
in
xchg
std
pop
pop
xor
mov
mov
sbb
in
popl
in
xchg
shlb
movsl
out
pop
xlat
add
xchg
mov
cmp
fcos
or
mov
inc
push
fisttpl
popa
xchg
mov
mov
outsb
int3
loope
nop
lcall
dec
pop
sub
hlt
fisttps
mov
jle
aad
push
imul
mov
pop
jmp
mov
mov
ljmp
mov
sub
imul
lock
out
xchg
js
mov
push
xchg
iret
repz
nop
scas
mov
rclb
cmpsb
sahf
mov
jae
lods
lods
shlb
dec
or
jecxz
xchg
dec
xor
sub
lcall
xchg
pop
xchg
shll
dec
lock
iret
jno
fprem
fwait
outsb
hlt
daa
mov
orl
xchg
loop
cmp
mov
in
out
sbb
sub
shrl
and
fistpl
xchg
sub
roll
sarl
inc
inc
jne
adc
cmp
stos
sbb
sbb
ljmp
mov
mov
lret
mov
xorl
mov
and
adc
hlt
shr
dec
mov
adc
jge
sahf
jl
pop
shll
cmp
lahf
addr16
mov
or
sbb
add
jmp
jne
adc
mov
jo
mov
lods
xlat
fidivrs
mov
mov
add
or
cmp
lahf
cmp
int3
xchg
xchg
or
adc
jnp
or
popa
pushaw
pop
cwtl
nop
jno
sbb
xchg
jae
sub
dec
sbb
xor
sbb
pop
enter
subb
js
jno
ficoml
movsb
lcall
push
ljmp
pop
ret
in
imul
push
add
cmp
inc
shrb
ss
cmp
addr16
call
int3
add
inc
dec
or
cmp
sub
adcl
jno
pusha
dec
mov
movsl
sbb
stc
or
jmp
xchg
sub
or
cmpps
push
dec
adc
dec
mov
xor
in
jae
mov
ljmp
jnp
loopne
imul
inc
cmp
stos
jnp
sub
jl
call
xor
push
popa
inc
jecxz
cwtl
std
cmp
ret
inc
dec
call
jp
inc
cmp
xlat
adc
sub
cmp
adc
dec
mov
and
pop
and
hlt
loope
mov
pop
loope
xor
lea
mov
and
gs
xchg
sbb
adc
jnp
cmp
sub
andl
fmuls
outsl
cli
jp
cli
sbb
dec
mov
fldenv
int3
sti
lahf
mov
mov
sub
mov
mov
aam
xor
daa
pop
push
mov
push
inc
mov
test
shll
xchg
into
dec
loope
cs
inc
mov
jmp
pop
xchg
mov
test
lods
data16
out
clc
in
stos
xchg
jnp
or
aam
cmpsb
sbb
je
dec
out
mov
imul
addb
sbb
pop
xchg
shll
mov
inc
dec
dec
jns
sbb
inc
es
enter
pop
add
and
fnstcw
ficoms
dec
ret
dec
out
pop
addr16
mov
jle
or
cmp
jns
xchg
mov
daa
out
popa
scas
das
cmpsl
mov
pop
in
jecxz
xchg
mov
add
jl
jmp
lods
mov
jae
mov
add
fisubs
pop
lods
push
fsubrl
jae
lret
or
jp
mov
loop
jp
fcomps
mov
cmpsl
push
xorl
xchg
ljmp
ss
aad
aaa
cmp
rorl
mov
xchg
cmp
pop
sbb
cli
aam
push
jg
pop
sub
xor
xor
dec
adc
push
and
pop
loopne
inc
loop
std
cmp
popf
dec
js
jl
gs
mov
sbb
or
fiadds
add
roll
stc
outsb
dec
addl
inc
aas
dec
aam
stc
pop
pop
mov
sub
pop
dec
repnz
xchg
das
add
xchg
xchg
push
int3
push
roll
push
in
scas
mov
or
mov
out
insb
lcall
movsl
jno
pop
cmp
jb
push
aaa
jbe
inc
inc
sar
inc
ret
xor
stos
mov
dec
int
pminsw
insb
or
mov
gs
data16
int
mov
ja
addr16
xorb
into
mov
mov
rorb
loope
pop
fs
lods
mov
adc
movsl
fisubrl
cs
push
dec
arpl
out
cld
adc
jns
testb
dec
out
mov
imul
jecxz
and
mulb
insb
jnp
enter
push
dec
loope
std
push
out
clc
out
icebp
xchg
push
inc
mov
dec
push
scas
dec
mov
lock
bound
pop
push
jp
xor
rcl
sbb
movsl
out
mov
add
das
pop
div
icebp
jo
cmp
nop
stc
mov
sbb
orb
cmpsb
pushf
dec
mov
mov
and
dec
xchg
cltd
js
mov
pop
test
stc
or
push
mov
and
mov
subl
or
push
mov
jb
pop
sarl
mov
and
or
aaa
pusha
mov
test
and
cmp
sub
das
stc
jecxz
jo
cmp
fists
lea
outsb
sub
add
leave
stos
leave
scas
out
mull
inc
pop
mov
popa
mov
mov
pop
cmpb
add
mov
cmpsl
cmp
dec
mov
ljmp
cmp
add
dec
mov
aad
dec
cmpsb
cmp
aad
cmp
xchg
mov
pop
rcrw
push
mov
pop
dec
mov
loope
pop
inc
out
pop
mov
xchg
stos
sahf
iret
fwait
pop
imul
in
sbb
cwtl
lock
aad
aam
sti
add
adc
mov
in
sub
dec
test
sub
cmp
call
subb
stos
adc
pop
test
xchg
add
les
pop
popa
adc
push
xor
shll
mov
pop
sbb
testb
lret
or
loope
mov
pop
pusha
in
mov
pop
mov
pushf
in
mov
cmp
or
mov
js
jne
repnz
arpl
lock
sub
fists
lods
and
cmp
pushf
gs
push
sub
fcompl
and
pop
xchg
cmp
adc
das
jnp
dec
or
rcrb
scas
or
mov
cmpb
lcall
jmp
mov
adc
pop
test
sub
sub
xchg
sub
push
push
ds
sahf
mov
push
sahf
enter
jge
sbb
ja
mov
cmpsl
lret
jecxz
or
nop
lock
xor
lea
xor
mov
ljmp
mov
push
push
lods
xor
add
lods
adc
sub
sbb
xchg
lret
pusha
lods
jbe
sarl
and
loope
ss
xchg
push
sbb
out
cwtl
cld
push
or
icebp
stos
sub
or
insb
or
int3
adc
jle
std
cltd
and
int3
pop
fwait
cmp
dec
addr16
push
lcall
inc
xchg
jbe
pusha
lock
push
sar
cld
cltd
enter
and
cld
mov
rol
loope
out
push
xchg
popa
push
loope
pusha
mov
arpl
and
icebp
aam
aaa
and
fadds
add
fdivr
fidivl
sbb
test
shll
jo,pn
data16
pop
test
xchg
pop
mov
or
fistpl
stos
nop
push
jge
imul
jns
test
add
fsubrl
sub
inc
fwait
and
adcb
xchg
sbb
repnz
shl
sbb
aaa
in
sub
arpl
jo
int
rclb
add
push
mov
iret
xchg
cmc
into
mov
dec
pop
fsts
fidivrl
sbbl
imul
ds
mov
mov
mov
ja
push
das
addr16
aaa
mov
testl
mov
mov
xor
xchg
aam
mov
mov
and
mov
inc
mov
dec
or
push
jg
mov
add
mov
add
add
icebp
in
cli
sarl
cwtl
int3
std
int3
dec
fwait
into
mov
movsl
jl
in
and
push
fdivrs
imul
cmpsl
mov
imul
ret
mov
cwtl
sbb
dec
push
nop
and
sbb
mulb
xchg
int3
shr
add
mov
xor
pop
mov
adc
std
dec
test
enter
stos
xor
jo
test
iret
or
bnd
icebp
repz
sbb
pushl
scas
shl
out
stos
cli
lahf
pop
mov
mov
jle
into
div
mov
in
leave
filds
sahf
cltd
into
add
push
pop
mov
or
stc
jno
mov
ljmp
jo
daa
xor
fsubrl
fwait
bound
push
add
xchg
hlt
or
fcmovnu
pushf
int
mov
fwait
cmpps
inc
mov
arpl
mov
push
inc
sbb
xor
roll
xchg
shll
mov
dec
js
sti
adc
icebp
insl
movsb
dec
mov
mov
cwtl
dec
xorl
dec
mov
xchg
es
test
and
test
movsb
jecxz
leave
or
push
adc
out
std
push
and
and
out
mov
push
loop
xchg
icebp
jns
stc
mov
push
lods
inc
sbb
out
les
test
sbb
in
scas
and
sub
negb
lods
sub
mov
push
push
test
cs
and
push
jp
arpl
cmpsb
sarl
mov
mov
cmp
inc
int
fmull
les
jmp
push
sub
cli
xchg
mov
loope
cwtl
leave
loopne
jne
inc
roll
dec
jb
adc
shll
leave
fists
aas
xchg
dec
mov
popa
mov
or
int
sahf
mov
inc
cwtl
aam
in
adc
mov
mov
fadd
push
aam
sti
rcrb
xor
inc
call
pop
ljmp
xor
mov
pop
js
jecxz
pop
out
sub
mov
fidivrs
pop
popa
daa
out
data16
inc
cli
mov
dec
and
xchg
pushf
hlt
cmpsl
inc
out
jecxz
push
sub
test
cltd
mov
xchg
sub
push
test
or
mov
ret
out
or
sub
clc
stos
mov
adc
aam
jns
mov
mov
cmpsl
inc
mov
or
lret
jmp
adc
sub
pop
adc
lods
xlat
fldt
inc
aad
shl
pushf
icebp
roll
pop
mov
je
sar
cltd
dec
push
xchg
aam
and
into
mov
jle
cltd
mov
loopne
sub
aam
sbb
in
fwait
or
xchg
and
aam
ret
adc
jbe
dec
mov
or
lods
jl
mov
fs
das
mov
or
rcr
jg
add
out
jmp
lret
push
scas
outsl
lea
push
push
pushf
adc
dec
or
mov
fst
jno
sti
std
addb
push
xchg
inc
push
in
enter
add
fwait
addl
scas
out
mov
lods
gs
out
mov
sub
pushf
pushf
inc
push
xor
shlb
test
push
adc
int
sub
mov
lods
cmp
in
addb
pop
jno
cmpl
dec
aam
sbbb
imul
jle
jno
pop
push
pusha
mov
jge
add
push
adc
addr16
xorb
into
repnz
adc
cmp
inc
into
xchg
test
fsubp
jecxz
pushf
or
lods
or
dec
outsb
into
adc
sbb
jno
dec
orb
push
pop
mov
fwait
dec
mov
xor
push
lea
push
imul
jmp
sub
adc
inc
push
or
dec
daa
je
into
lds
dec
rcr
jb
jecxz
out
or
imul
pop
insl
xchg
sub
cmp
mov
lock
imul
mov
insb
call
popa
sub
into
add
addb
out
mov
fst
scas
lahf
clc
int3
sub
push
outsb
stos
in
push
dec
lret
or
mov
ds
stos
dec
push
lods
sub
add
or
test
xor
cmpsl
inc
cld
xlat
push
fdivrl
hlt
gs
aad
data16
lods
jg
xchg
sub
mov
rcl
inc
jg
jg
cmp
dec
mov
adc
cmpsb
or
xchg
aad
sub
mov
mov
mov
loopne
aam
push
mov
xchg
mov
mov
dec
sub
stos
push
pop
mov
cmpsb
popa
and
xorb
popa
mov
outsb
psubsb
lods
adc
int
xchg
jl
push
jg
ljmp
cs
jecxz
push
hlt
inc
xchg
mov
push
js
dec
xor
push
mov
dec
jl
jge
and
jne
stos
hlt
mov
jle
sbb
hlt
movsb
pop
je
repnz
xor
pop
outsl
std
push
dec
or
mov
cmp
cmp
sti
outsl
adc
in
and
lcall
jns
mov
jno
faddp
sbb
icebp
add
or
mov
stos
gs
inc
sbb
xor
add
fs
movsl
enter
lock
or
in
push
mov
cwtl
push
xchg
test
add
add
stc
dec
loop
mov
cld
mulb
divb
cld
and
and
ljmp
or
jns
push
jg
rorb
or
inc
neg
pop
jbe
lods
dec
pop
adc
xor
pop
ret
adc
in
xchg
addr16
mov
int3
aaa
add
cmpb
pop
inc
mov
push
push
push
sbb
stc
xchg
aaa
cmp
adc
rcr
jmp
xchg
inc
sub
and
popf
fcompl
sarb
jmp
jmp
or
mov
sub
mov
testl
iret
add
push
inc
roll
lea
push
sahf
pop
pop
adc
aas
mov
mov
push
int3
lods
andl
mov
sub
cs
push
push
insl
push
xor
scas
insl
aaa
ja
dec
xchg
push
js
xor
pop
pop
adc
inc
mov
xchg
push
lock
mov
fisubrs
xor
or
mov
xchg
inc
jmp
mov
cmp
push
ljmp
pop
movb
sub
pop
popa
or
fwait
sub
insb
add
jo
cmp
inc
push
mov
stos
mov
out
inc
lret
jmp
popf
jmp
xor
popf
mov
sarl
fbstp
jbe
stos
mov
xor
call
movsb
mov
dec
sahf
dec
inc
aas
add
mov
sub
aas
into
leave
xor
jmp
mov
push
stc
xchg
arpl
xchg
push
loope
repnz
push
imul
add
sub
std
test
std
rorb
mov
cmp
sarb
adc
repnz
xor
mov
std
add
push
sbb
scas
sbb
mul
pop
or
fcom
lret
mov
js
mov
outsb
jge
push
cvtpi2ps
idivb
lods
fsts
inc
or
stc
mov
repz
scas
fcmovnu
ror
scas
inc
and
es
mov
lods
je
push
xchg
loopne
loope
pop
das
mov
adc
add
sahf
icebp
mov
inc
dec
inc
rolb
fmuls
pop
sub
test
xor
fwait
ja
jnp
daa
add
dec
out
mov
cli
jle
fdiv
mov
mov
sbb
inc
add
sub
mov
mov
jnp
sub
movsb
add
sbb
push
or
fwait
cmp
fdivrs
xorb
add
xchg
adc
cmp
xchg
jmp
push
rcr
cmpl
xchg
sub
pop
loopne
int
addr16
test
mov
das
xchg
jmp
mov
les
cmc
call
and
rcll
jbe
xor
push
nop
nop
mov
add
mov
shl
mov
inc
fcmovnbe
adc
xchg
loopne
push
loop
dec
adc
lea
pushf
dec
lret
test
pop
addr16
push
adc
adc
pop
add
cmpl
mov
push
ret
adc
cwtl
mov
test
int
mov
aam
shlb
inc
add
fnsave
inc
inc
and
aaa
out
xor
clc
fstps
and
jne
icebp
lret
add
adc
sub
xchg
dec
push
imul
push
xchg
lea
mov
mov
fsubrl
cld
ss
and
cmpsl
repz
jmp
repz
add
testb
cmpsl
pop
mov
ss
inc
xor
cmpsb
push
cmpsl
mov
push
sti
inc
cmpsb
dec
push
sub
sbb
mov
mov
dec
push
pop
insl
pop
int
mov
xchg
and
push
popa
stos
leave
mov
or
cmc
pop
pushl
cmp
imulb
adc
sbb
setne
pop
or
dec
lcall
stc
mov
inc
or
sbb
dec
imul
lea
ret
loope
sub
mov
orl
dec
and
lret
dec
jmp
xchg
divb
loope
push
aaa
cmp
hlt
mov
cmp
imul
enter
and
fistpll
aad
pop
cmc
push
adc
psraw
dec
fimuls
mov
fyl2xp1
je
imul
nop
xchg
in
jbe
cs
sub
into
sub
xor
sub
add
popa
popf
xchg
repnz
orb
mov
into
adc
andl
sbb
lock
nop
jp
stos
dec
shl
fildl
jecxz
xchg
pusha
push
or
frstor
aam
lods
or
popa
mov
xor
adc
xchg
addr16
stos
xadd
sub
and
xor
inc
jecxz
out
add
popf
jl
out
lds
sbb
fnsave
js
sub
mov
jg
cmp
sbb
mov
fucomp
out
stos
inc
xchg
mov
test
or
mov
gs
push
stos
add
jo
mov
xchg
push
or
pusha
je
out
adc
das
jecxz
lock
jl
cmp
mov
xor
jae
mov
xorb
push
popa
test
inc
test
sbb
imul
les
lods
or
cld
xchg
dec
stos
fsubl
adc
pop
jb
stos
sbb
clc
pop
arpl
jecxz
push
shl
sub
dec
push
inc
sbb
cmp
sbb
arpl
sub
adc
aam
push
or
popa
ljmp
inc
aam
sbb
and
or
aas
push
push
push
dec
push
test
arpl
rolb
pop
xor
shlb
mov
pop
adc
insl
cmp
adc
mov
lods
inc
ret
repnz
pop
mov
xor
mov
inc
mov
jne
mov
fstpt
jbe
mov
int
mov
mov
jno
mov
push
or
adc
out
stos
dec
mov
fcmovnbe
test
pusha
imul
mov
xchg
fdivl
outsb
jle
or
cltd
lds
adc
fincstp
jp
call
addr16
add
cwtl
imul
lock
inc
push
cmp
jo
mov
inc
mov
push
cmpsl
adc
sarb
lods
mov
or
test
lret
mov
cmpsb
ret
jle
cltd
xor
mov
dec
cld
push
mov
push
out
jae
push
int3
and
or
lods
lahf
xchg
sbb
flds
jge
mov
add
push
rcrb
push
out
popa
les
sti
fstpt
push
and
add
inc
fnstsw
rol
subl
out
aad
mov
push
mov
sbb
data16
stc
leave
das
popl
push
inc
lahf
stc
and
pop
pop
repnz
and
sub
hlt
mov
iret
aaa
stc
or
adc
addl
or
jp
test
aam
jecxz
aas
dec
mov
lods
movsb
aam
cmp
lcall
pushf
mov
mov
mov
int
xor
gs
mov
subl
or
mov
xor
add
adc
cli
es
and
idivb
or
jge
jmp
mov
xchg
ret
pop
cmp
jne
notb
mov
cmp
fbld
andb
aas
rclb
test
das
insb
popa
dec
or
jbe
xor
into
pop
cmp
inc
mov
in
jno
or
fxtract
mov
repz
xlat
dec
mov
testl
aam
xchg
inc
xchg
clc
imul
aas
adc
push
mov
shlb
sti
ljmp
repnz
sbb
jbe
movsb
faddp
idivb
and
push
test
cmp
jbe
jecxz
stos
mov
loop
pop
fiadds
inc
mov
mov
sarb
ret
push
sbbb
jg
xchg
xchg
call
dec
xchg
sub
sub
lea
sbb
mov
sub
jg
bound
fcmovbe
mov
ja
stos
lock
leave
repz
dec
mov
mov
jo
fstpl
fldl
xchg
out
test
cs
popf
add
pop
push
leave
sbb
jae
test
add
mov
xlat
dec
xor
cmp
sahf
in
movsl
adc
sub
mov
mov
dec
shlb
repnz
vshufps
addr16
or
insl
and
pop
lea
movsb
cmp
mov
stos
jbe
sbb
std
add
sti
push
leave
pop
add
loope
lock
incb
mov
or
push
fs
hlt
jle
cld
mov
cmc
push
or
testl
bound
lods
ljmp
mov
cs
fistl
mov
mov
stc
pop
push
icebp
cmp
pop
mov
rolb
jb
daa
and
dec
sbb
xchg
add
stc
cmp
ss
popf
fisubs
fstpt
shlb
roll
imul
adc
fsts
sbb
fs
adc
inc
mov
adc
pop
repz
mov
pushf
pop
stos
dec
or
mov
or
flds
hlt
dec
fmuls
cmpsl
mov
push
cltd
push
pop
clc
pop
xchg
dec
mov
pop
inc
cwtl
test
jl
push
fisttps
idivb
sbb
or
loope
mov
xlat
mov
cwtl
call
lds
ds
xor
popa
add
fisttpll
popa
pop
insl
mov
add
jmp
lea
jge
int
shlb
push
popf
popf
jb
add
or
mov
jo
inc
push
ret
xor
pop
ja
mov
insb
mov
out
inc
push
pop
fimuls
lods
xchg
dec
mov
out
imul
sub
xchg
ljmp
into
dec
or
frstor
movsl
jp
rorb
out
cmp
fiaddl
cmpsb
mov
lds
sub
sub
cltd
insb
mov
cmpsb
xchg
mov
cmp
sarl
xor
nop
pop
sub
mov
leave
aaa
lcall
and
pop
dec
sub
xchg
movsl
xchg
pushf
lahf
xor
sub
test
test
in
scas
pushl
mov
in
xchg
arpl
hlt
imul
push
mov
scas
scas
lods
scas
or
pop
dec
mov
lcall
xor
test
jmp
cmpsb
mov
jne
sbb
in
loop
fistpll
in
push
mov
push
ret
int3
test
and
xor
imul
ss
mov
inc
scas
add
push
dec
xchg
int
dec
push
lahf
ljmp
mov
cltd
sti
inc
inc
subb
loope
adc
imul
cli
roll
rclb
aad
push
std
mov
xor
sub
mov
daa
push
sbbl
ja
pop
imul
push
fildl
pop
xor
sahf
shr
mov
add
sbb
clc
add
out
sub
or
popa
inc
out
push
mov
cli
lds
sbb
into
mov
inc
mov
inc
mov
xchg
das
sub
repnz
lea
leave
mov
movsb
lock
arpl
adc
push
or
inc
ds
decl
pop
fadds
mov
inc
clc
test
add
xchg
cmp
mov
cltd
xchg
inc
rcr
push
icebp
in
pop
loop
popl
dec
mov
mov
cs
mov
mov
push
cltd
pop
or
or
mov
ror
sbb
aaa
jo
out
or
cli
mov
mov
ds
adc
lds
lahf
aad
bnd
jecxz
pop
call
call
stos
into
dec
stc
xor
fs
ret
outsl
dec
jne
out
and
mov
sbb
into
mov
xor
mov
xor
jne
clc
mov
psubusb
test
pop
flds
dec
pop
xchg
cmpsl
push
es
push
dec
sub
and
push
mov
mov
idiv
pop
mov
xchg
cs
cmpsl
dec
into
cmpb
lock
aad
out
inc
push
xchg
call
enter
jmp
bound
inc
add
sbb
sbb
insl
test
cmpsl
dec
add
ret
in
xchg
push
sbb
pop
dec
mov
jnp
add
jbe
ljmp
jne
xor
adc
daa
faddl
out
aaa
lea
or
cwtl
clc
faddl
push
pop
mov
adc
scas
lods
bound
lahf
jecxz
enter
mov
fcoml
jge
cmp
inc
xor
lock
in
add
out
dec
lcall
mov
lds
add
mov
in
adc
xchg
jns
mov
jne
fwait
nop
fldl
cmp
movsl
out
xor
in
test
loopne
cmp
inc
repnz
add
jb
enter
lret
cmp
neg
test
flds
push
ljmp
mov
mov
lret
negl
pop
les
and
or
push
incl
nop
ds
mov
movsb
mov
dec
pop
outsl
pop
int3
je
js
mov
inc
xchg
dec
mov
in
sti
cs
pushf
sbb
or
stos
xchg
cmp
cmp
data16
xchg
sub
jecxz
je
xchg
nop
add
sub
xchg
lods
lock
jnp
movsb
daa
cmp
rorl
cmpsl
test
jbe
je
ja
jmp
mov
pop
mov
mov
bound
call
fwait
adc
sti
cmp
pusha
sub
loope
adc
in
xor
leave
jne
outsb
sub
mulb
adc
push
ret
frstpm(287
jns
push
call
cli
mov
jbe
popf
leave
mov
lcall
mov
mov
mov
movhps
fwait
xor
int
sbb
fprem1
iret
xor
add
dec
or
xchg
jne
pushf
imul
nop
shlb
int3
icebp
sbb
imul
cmpsb
push
insb
iret
outsl
push
lea
inc
repz
hlt
mov
or
pop
pop
inc
mov
ljmp
shll
les
sarl
dec
inc
mov
mov
nop
loopne,pt
int
je
xor
mov
cmp
pop
pop
shr
cmp
cmove
fistps
sarl
add
jecxz
or
ss
mov
add
loope
inc
hlt
sti
xor
mov
outsb
xchg
or
xchg
loope
mov
inc
sub
pop
jp
xchg
jbe
pop
sahf
adc
arpl
out
cli
cmp
jge
sbb
sbb
fadds
mov
sub
pop
or
sbb
sbb
aaa
adc
add
adc
push
cmpsb
rcr
roll
and
das
dec
sub
cli
addb
xor
out
aas
in
xchg
js
pop
cmp
sub
push
mov
cmp
mov
andl
lcall
fwait
jecxz
das
insl
xor
stos
loope
xchg
cmpb
add
xchg
loopne
jno
and
ja
gs
xor
mov
test
push
ljmp
std
dec
push
lret
pop
std
adc
xchg
mov
cmc
mov
aad
mov
mov
xchg
jp
out
lds
repz
dec
or
scas
inc
test
pop
mov
or
jo
cli
or
push
pop
xchg
add
std
jmp
lock
xor
lret
jo
sbb
mov
mov
dec
push
xchg
sbb
push
mov
out
sarl
sbb
jb
fwait
sub
imull
xor
inc
xorb
mov
dec
or
push
mov
std
or
shl
pop
or
stc
jecxz
fdivr
in
pop
and
mov
into
push
mov
mov
and
fimull
es
xchg
sub
push
mov
push
xor
inc
sub
rorl
mov
add
pop
or
inc
adc
call
sbb
lds
or
dec
jp
rcrb
xchg
lds
loope
mov
ja
push
das
std
xchg
jo
pusha
nop
in
jmp
adc
cmp
lods
and
xor
pop
mov
inc
fdivs
in
mov
pusha
inc
bound
mov
mov
jp
and
mov
cmp
jae,pn
pop
jmp
xor
and
jmp
fcomip
std
int3
xchg
mov
adc
or
movsl
and
ljmp
sbb
sub
push
sbb
inc
adc
pusha
and
cwtl
lcall
mov
push
inc
or
das
xor
pop
add
add
push
sub
mov
adc
clc
mov
jo
xor
loope
es
shl
icebp
outsl
sbb
xor
enter
inc
sahf
add
dec
inc
jae
shrb
rorl
pushf
pusha
push
sbb
push
or
xor
adc
sahf
mov
push
out
gs
insl
test
sbb
mov
out
mov
rolb
or
ret
imul
jno
loope
mov
aam
push
cmc
fmul
push
repz
mov
dec
bound
sub
jp
mov
das
mov
loope
inc
dec
dec
jns
dec
fisubs
scas
and
xlat
lret
cltd
dec
cmp
stos
cmpsl
mov
cmpsl
lods
xchg
les
push
lahf
cmpsl
mov
lock
xor
cmpsb
sbb
sti
repnz
inc
je
scas
ja
push
lret
mov
jle
aam
lret
iret
xchg
cli
dec
out
dec
imul
cs
push
pusha
mov
mov
hlt
enter
push
out
push
mov
or
ret
inc
inc
inc
insl
and
insl
mov
cbtw
scas
movsl
std
fsts
lock
jl
mov
nop
cmp
cmp
cmp
cld
popa
and
mov
scas
daa
push
xor
sbb
aas
mov
fisttps
bound
mov
pushf
mov
test
add
xchg
not
and
mov
sbb
loop
sub
inc
jp
xor
or
andb
xchg
idiv
repnz
adc
mov
mov
adc
loopne
popa
testb
movsl
cs
jge
test
push
loopne
push
insl
jmp
add
jb
push
add
mov
out
xor
sub
or
mov
movsl
mov
ja
push
pop
cli
pop
scas
aam
cmp
insl
pusha
stos
inc
or
lea
ja
jp
sahf
test
insb
addl
jg
jecxz
and
in
fwait
dec
jmp
pmaxsw
sbb
pop
jp
inc
lods
loop
mov
mov
gs
out
sub
push
lret
mov
cmc
in
mov
into
cltd
mov
dec
jge
cli
stc
lock
or
lahf
mov
mov
dec
or
xor
out
push
mov
pushf
insb
pop
mov
mov
leave
cmp
into
mov
mov
adc
fs
push
idivb
and
ds
fidivs
in
push
mov
ja
int3
sub
push
fcmovne
sbb
enter
jo
fldl
and
stc
mov
pop
push
dec
cmpsl
adcb
or
xchg
pop
xchg
decb
lret
pop
inc
pusha
repnz
push
cmp
hlt
test
jb
ror
xchg
or
mov
cld
dec
mov
ficoms
jns
mov
push
xchg
mov
pop
sub
mov
push
movsl
fdivs
insb
mov
mov
adc
mov
ja
jg
cmp
mov
jp
int
mov
lret
ja
lcall
adc
push
mov
incb
sbb
daa
push
dec
sub
pop
sbb
pop
fwait
jge
es
gs
mov
dec
outsl
and
out
jbe
in
dec
pop
push
cmpsb
dec
stos
movsl
sub
push
xor
in
adc
cmp
push
push
xor
aam
dec
fmul
fmuls
out
shlb
or
sbb
insb
stos
fdivrl
lret
mov
adc
das
loop
sub
or
fcoml
cmpsl
je
js
adc
xchg
enter
out
mov
mov
xchg
call
mov
add
lods
jne
pop
sbb
lods
fdivl
mov
gs
xchg
roll
push
sub
pop
hlt
push
jle
push
pop
and
das
mov
jmp
add
mov
sbb
sub
int
xor
xorl
mov
cmp
pop
sub
lret
icebp
cmp
pusha
fnstenv
cwtl
xchg
cmp
mov
xlat
xchg
fld
mov
mov
sub
bound
mov
aad
ja
rcrb
fldenv
dec
outsb
mov
movsl
out
fmull
scas
xchg
adc
mov
jge
xchg
insl
xor
dec
cld
dec
mov
mov
add
and
adc
adc
inc
lock
sahf
push
aad
dec
loope
xchg
mov
loop
inc
fsubrs
pop
cwtl
xchg
loope
mov
cld
divl
pop
sub
xor
leave
and
sahf
scas
into
aad
xchg
mov
sub
leave
xor
pushf
repnz
jmp
push
dec
jecxz
inc
leave
dec
mov
xchg
jne
jne
lock
adc
test
movsb
cmpsb
insb
loope
cmp
jns
cmpsl
addr16
dec
lahf
es
divl
sti
mov
call
fs
mov
scas
mov
mov
or
test
sbb
push
xchg
popfw
lret
dec
div
pop
icebp
sbb
hlt
in
fs
mov
dec
lock
mov
stos
in
sub
loopne
testb
xchg
sbb
sub
iret
mov
and
adc
cwtl
inc
out
or
cs
ret
lret
mov
cmp
fadds
mov
sub
in
dec
and
cmp
adc
fs
sub
pop
pop
xchg
push
xor
popa
or
pop
mov
sub
mov
pop
xor
jns
sbb
xchg
ljmp
ja
cmc
sbb
int
incb
loope
jmp
dec
lahf
cli
ljmp
sbbb
leave
lds
ja
aas
cmp
xchg
ret
lret
cld
xchg
movsb
mov
popf
xchg
int3
push
pop
mov
das
sbb
leave
adc
xor
cmp
or
xor
stos
iret
jo
cli
pop
lds
xchg
repnz
add
jmp
cmp
dec
daa
xchg
dec
sbb
movsl
add
add
mov
pop
push
jne
rcrl
xchg
clc
jae
xchg
out
sub
les
mov
stos
lods
fnstenv
push
jno
mov
xor
jl
xchg
push
fwait
xor
or
pop
pop
push
add
andl
mov
push
ficoms
iret
pop
icebp
mov
and
out
mull
out
stos
sub
add
inc
lods
adc
jg
xlat
inc
jg
xchg
mov
mov
inc
xlat
mov
cmp
dec
push
jns
jo
popa
dec
stos
and
jne
lret
shl
add
gs
xchg
dec
hlt
adc
in
add
jl
xor
add
pop
jle
rorl
lcall
jnp
xchg
mov
xchg
insb
jbe
stos
ja
and
xchg
mov
testb
inc
shlb
xor
fs
je
lea
cmp
cltd
xorb
pushf
in
xor
movsl
push
movsl
ret
insl
push
sahf
mov
jb
add
stos
xchg
mov
call
adc
push
hlt
cmp
repz
out
mov
and
mov
aam
insb
xor
out
or
in
fnstcw
adc
or
jns
sub
pop
jbe
out
sub
sahf
xchg
and
pop
jne
adc
mov
fyl2x
dec
mov
cld
pusha
mov
or
ds
inc
add
and
stos
lcall
and
aam
pushw
repz
xchg
popf
jecxz
sbb
pop
inc
arpl
mov
into
loop
xor
jl
pop
or
add
xchg
call
int
pop
push
adc
inc
mov
ja
cmc
or
push
sbb
cmc
xchg
adc
mov
xchg
test
or
arpl
inc
sub
inc
movsb
sub
pop
mov
cmp
leave
jmp
imul
push
fs
inc
rcl
out
xchg
gs
push
inc
cmp
or
rorl
mov
in
xor
xchg
inc
scas
stos
and
adc
mov
mov
fildl
loop
add
inc
mov
push
in
enter
popf
in
push
cmp
loop
jns
or
adc
xchg
and
dec
cmp
stos
sarl
out
imul
lcall
mov
fidivrs
pop
ja
int3
popf
add
mov
mov
pop
mov
lods
daa
adc
bound
pop
int3
ss
lock
imulb
jo
fstpl
jbe
mov
test
rcr
jno
xor
fwait
shr
adc
sbb
scas
clc
xchg
jae
mov
mov
les
inc
mov
dec
cltd
adc
adc
pop
data16
rolb
and
in
and
cmp
push
movsl
add
jb
or
xor
dec
int3
pop
and
out
fsubs
pop
insb
in
cmp
sub
mov
cmp
add
add
lds
aaa
mov
cmp
xchg
clc
ja
sub
int
xor
xchg
cld
push
sub
push
ficompl
mov
dec
and
or
in
cmp
hlt
mov
mov
mov
xchg
push
mov
loopne
push
mov
xor
push
xor
and
mov
inc
test
inc
test
pop
jns
pop
and
inc
sbb
fildl
psrld
aad
leave
jl
mov
addb
sbb
xchg
mov
sti
dec
mov
pop
cs
test
loope
jge
fisubrs
in
dec
mov
sahf
shlb
sub
aam
lock
movsb
push
push
sub
sahf
jb
jnp
mov
cmpsb
pop
out
in
jb
dec
loop
fsubrs
rol
outsl
test
inc
punpckhdq
testl
shrl
outsb
jb
mov
ljmp
sbb
mov
mov
int
in
or
push
ror
roll
je
fwait
cmp
inc
inc
mov
iret
xor
cmp
call
xchg
lock
pushl
in
xor
pop
enter
mov
mov
xchg
push
mov
push
mov
lea
push
fmuls
push
ds
aaa
stc
loop
aad
inc
setp
jne
cmp
lret
push
mov
test
mov
and
lcall
fs
loop
loope
jno
or
lods
js
jo
pop
jmp
je
clc
sbbl
jge
jp
aad
adc
dec
out
cs
movsb
fwait
pop
dec
rcl
mov
or
pop
adc
xchg
fstps
dec
mov
inc
insb
add
iret
xchg
cmpl
add
sbbb
outsl
scas
stos
xchg
cld
lea
pop
jg
mov
mov
adc
fs
incl
pop
pop
outsl
in
aas
mov
xchg
sbb
mov
xchg
mov
shll
sub
mov
push
and
add
std
mov
je
xchg
sub
clc
mov
jne
sbb
clc
subb
incl
cmpsl
inc
sub
scas
xchg
aam
iret
cmpb
mov
cli
dec
adc
aam
jg
sarl
adc
push
cld
pusha
pop
dec
push
jne
repz
jle
call
push
test
lds
call
xchg
test
in
stc
test
sti
adc
lret
and
jno
insb
add
bound
inc
add
cmp
pop
sub
add
add
and
sahf
inc
push
inc
or
push
inc
sub
xchg
add
lods
idivb
outsb
popf
repz
lds
mov
sub
mov
mov
push
mov
push
popa
xchg
cmp
rolb
out
movsl
cmpsl
xchg
inc
or
lret
outsl
jmp
xchg
in
hlt
jle
pop
ret
mov
in
inc
int3
push
fisubrl
inc
fsubp
mov
or
cmc
gs
push
jnp
loope
shl
ficompl
dec
cmp
jecxz
imul
push
cmp
fstpt
sti
adc
jno
add
test
lea
push
xor
jecxz
mov
mov
scas
push
lret
push
jg
add
fidivs
movsb
push
xchg
mov
adc
imul
dec
xorps
ja
je
inc
push
rclb
mov
xchg
popa
xlat
and
mov
pop
add
aad
repz
scas
pushf
gs
xlat
fiaddl
aam
add
and
sti
xor
cmpsb
add
addr16
scas
hlt
and
int
sub
das
bound
add
pop
mov
sub
outsb
pop
adc
push
pop
cli
cmp
pushf
push
shll
sub
roll
add
inc
push
mov
jb
sbb
mov
pop
push
mov
sbb
scas
sti
out
mov
ss
repz
dec
xchg
out
in
add
repz
add
js
in
divb
mov
mov
fmull
mov
add
dec
xlat
scas
enter
scas
pop
mov
xor
nop
or
fisttps
loop
adc
fs
fcomps
stc
out
push
ss
xor
and
in
mov
push
mov
lods
xlat
dec
mov
mov
loope
mov
inc
xor
ds
adc
sub
mov
pop
rolb
mov
xchg
mov
out
sbb
pop
scas
leave
rol
cli
xor
xchg
lahf
lea
pop
subl
sahf
inc
sub
dec
loope
sub
dec
xlat
and
mov
leave
sbb
repnz
icebp
jg
ja
test
scas
dec
dec
mov
xor
push
xor
stos
in
jecxz
pushf
jb
stc
icebp
mov
jmp
and
push
jae
out
mov
pmullw
inc
push
push
and
cmc
mov
add
xchg
cli
add
stos
adc
or
nop
dec
movsb
inc
pop
add
dec
fwait
push
ss
daa
mov
test
jo
mov
mov
gs
xor
mov
enter
push
ret
lods
prefetchw
test
cmp
sbb
push
xchg
jmp
adc
sbb
ret
xchg
xchg
sbb
in
dec
add
nop
push
pop
jns
test
cmp
push
lcall
scas
mov
pop
fsubrs
shlb
adc
cli
shl
or
and
aas
mov
jg
ds
fsubp
cmc
and
subl
hlt
shlb
mov
inc
inc
push
add
and
add
dec
rcl
push
pop
cmp
sti
sbb
cs
cli
enter
adc
mov
sbb
mov
or
shlb
dec
loop
pop
clc
hlt
or
scas
sarb
push
push
dec
inc
sbb
stos
sbb
sbb
or
jb
cmp
mov
push
pop
and
mov
push
xchg
test
sub
sbb
cmpsb
movsb
test
jle
hlt
pop
push
mov
fs
jae
inc
mov
pop
fnstenv
sbb
mov
call
or
es
jo
push
sbb
jae
inc
mov
enter
or
rclb
int
jns
mov
or
cwtl
push
push
out
jecxz
ljmp
addb
fisubrl
jnp
push
mov
xchg
cmp
mov
repnz
imul
int3
and
lcall
or
inc
inc
cmc
jecxz
sbb
add
dec
dec
mov
xchg
jg
stos
icebp
or
in
repnz
aad
xchg
dec
and
or
rcrl
hlt
jbe
xor
dec
insl
sbbb
outsl
sbb
out
adc
movsl
movsl
leave
je
xchg
andb
inc
je
xor
inc
aaa
cld
in
imul
and
hlt
pusha
sbb
push
mov
dec
jns
xchg
cmp
rcll
lret
mov
add
mov
stc
dec
xlat
ljmp
jp
or
movd
in
in
dec
int3
inc
popf
aaa
pop
test
loopne
adc
push
movsb
pop
xchg
imul
jp
add
xchg
fistps
adc
dec
test
mov
insl
xchg
push
or
out
xchg
push
repz
inc
addr16
loopne
mulb
push
xchg
inc
dec
adc
lret
mov
inc
and
loope
mov
xchg
inc
push
rcr
popf
cld
cmp
push
xor
or
lret
negb
push
or
sub
imul
dec
jle
out
mov
cltd
movsl
adc
daa
rorl
inc
repz
adc
inc
xchg
push
or
vpminsw
pop
mov
pop
pop
xor
pusha
dec
std
mov
cmp
bnd
pusha
jae
data16
fwait
repnz
fstpl
addb
test
sbb
les
adc
test
push
and
mov
out
scas
add
sahf
jo
xchg
adc
pop
adc
dec
movsl
int3
lret
xchg
call
gs
xchg
jb
xchg
repnz
lods
inc
mov
cmpsl
sbb
jae
and
icebp
jno
outsb
mov
inc
rcl
xchg
leave
sub
fidivl
je
mov
mov
push
pushf
bound
leave
stos
or
aaa
dec
add
and
and
iret
shrl
subl
sub
xchg
adcb
mov
lds
inc
and
xchg
popa
and
push
jecxz
push
mov
in
inc
pop
push
cmpsb
and
xor
stos
ds
mov
loope
pushf
incl
and
daa
orl
sub
out
mov
mov
mov
cmc
loop
es
pop
inc
out
xor
in
cmp
cmpl
shll
jg
jg
sbb
adc
push
int3
ret
out
lret
lods
out
and
popa
cmp
cld
insl
imull
outsl
push
cmp
popa
ret
dec
test
sti
negl
xor
filds
mov
mov
mov
adc
jge
ret
push
sbb
sar
sub
or
add
fists
hlt
pushl
mov
loop
xchg
icebp
aam
sti
mov
insl
cmp
scas
sub
lods
mov
and
push
cmpsl
jp
ret
xchg
mov
and
data16
push
sbb
xchg
fimuls
jg
loopne
sbb
hlt
imul
fucomip
test
adc
jge
nop
inc
lcall
mov
and
cmp
push
stos
mov
sub
sbb
in
das
mov
cmp
cmp
xchg
add
mov
or
push
addr16
and
std
cs
clc
sub
add
fcoms
clc
dec
push
sub
xor
mov
dec
push
into
inc
lock
and
xor
or
push
aaa
cli
mov
in
mov
sub
enter
stos
test
inc
gs
adc
movsb
and
sti
sub
lcall
lahf
repz
xchg
jb
faddl
inc
jle
inc
push
push
pushf
cmp
stos
dec
jnp
and
test
fistl
cmp
xor
pop
inc
mov
inc
jmp
push
stc
dec
or
cmpsb
inc
stos
les
adc
push
push
jmp
lock
insb
add
cmp
jg
int
shll
rclb
adc
nop
int
xchg
aas
popa
inc
fdivs
mov
loope
icebp
shll
into
ficomps
jne
xor
fcoml
inc
jb
mov
ja
inc
xchg
loop
je
jne
out
or
repnz
stos
push
arpl
jg
outsl
jle
mov
daa
mov
out
cmp
adc
fstps
and
xlat
aad
idivl
outsl
cltd
ret
outsb
daa
loopne
ds
and
mov
inc
icebp
xor
arpl
xchg
adc
insb
dec
sbb
push
das
mov
and
rcr
outsb
cmpsl
into
push
fs
inc
add
fdivrp
push
cmpsl
and
rep
add
ret
out
jmp
flds
lods
cmp
push
sahf
movsb
cmpsb
cmp
in
inc
add
mov
mov
pop
push
mov
popf
dec
inc
inc
push
loopne
jne
mov
scas
jecxz
dec
leave
dec
xchg
mov
test
sbb
lret
cmp
jecxz
xor
cmp
mov
enter
mov
jl
mov
push
int3
push
push
inc
add
jp
sbb
pop
xchg
jl
cs
adc
call
sub
sub
test
jecxz
xlat
push
nop
lods
rcrl
sub
fwait
cli
mov
jmp
out
dec
fnstsw
push
out
add
lret
addr16
push
cmpsl
adc
mov
in
adc
mov
lock
out
xchg
mov
fdivl
mov
push
or
add
ret
push
jecxz
aaa
push
insl
mov
fsubl
stos
out
jecxz
sub
mov
cmpb
ljmp
or
and
test
dec
sbb
xor
push
or
int3
push
inc
call
fldl
cmc
mov
push
mov
and
fmul
push
lret
dec
repnz
pop
or
pop
cli
subl
xchg
sub
clc
iret
fistps
cli
mov
nop
mov
insl
push
inc
hlt
leave
mov
pop
fwait
and
popa
out
call
sbb
stc
call
xchg
cmpsl
mov
lcall
push
dec
ficompl
and
cwtl
adc
cmovg
jle
mov
mov
jg
sti
or
inc
aad
mov
mov
inc
adc
addb
icebp
inc
add
mov
xchg
pop
lahf
out
push
jo
dec
push
cmp
sub
sub
outsb
imul
fs
push
mov
cmpsb
push
push
inc
sbb
xor
add
inc
and
std
ja
movsb
dec
scas
arpl
fcoml
pop
shll
xor
cmc
mov
stos
and
mov
mov
out
inc
pop
push
test
cwtl
mov
gs
enter
testb
je
lea
repz
test
fs
push
sbb
notb
jecxz
or
sbb
mov
lods
dec
xchg
dec
or
mov
jo
dec
in
and
sahf
xchg
mov
mov
lock
je
jmp
in
add
adc
fbstp
cmp
fdivl
or
out
ljmp
adc
adc
lret
test
jno
inc
sbb
fwait
sahf
push
lods
jns
inc
and
in
xchg
sbb
std
imul
adc
subb
iret
and
or
push
fwait
sti
cmp
jecxz
shl
in
xor
mov
imul
test
inc
jo
aam
jmp
dec
fisttpll
fists
inc
pop
cmpsl
push
in
sahf
je
idivb
adc
scas
cmp
adc
outsl
pop
test
cs
loope
and
pop
push
es
pop
fiaddl
dec
xor
add
xchg
cmp
lock
sbb
mov
enter
mov
movsb
in
mov
aam
inc
mov
pop
lahf
aas
mov
push
inc
fistpll
cmp
loopne
iret
pop
lret
mov
rcrl
nop
notl
push
xor
rcll
pop
push
inc
movsb
negb
jg
dec
dec
pop
jl
enter
mov
enter
sub
ja
jbe
fwait
jmp
mov
xor
jle
dec
push
jmp
jbe
mov
sbb
std
je
mov
mov
adc
iret
sbb
fidivl
sahf
push
adc
pop
mov
add
xor
lock
pushw
jbe
jg
movsb
stc
pop
movsb
mov
push
xchg
inc
jnp
inc
nop
pop
jmp
xchg
push
fcmove
ret
add
adc
data16
int
and
movsl
jmp
popa
dec
mov
add
lods
and
dec
es
cmp
jo
sub
dec
sbb
fists
addr16
pop
pop
cmp
cli
ret
inc
inc
mov
mov
popa
rclb
mov
scas
cmpsl
jg
fs
rclb
roll
push
xor
jl
scas
stc
xor
push
inc
dec
mov
cmp
mov
pop
and
mov
int3
add
addr16
mov
mov
jmp
xchg
mov
aam
nop
or
push
sub
sub
fiadds
sub
sarl
aad
mov
cwtl
stc
or
call
mov
xor
cmp
cs
xchg
jecxz
in
fstpl
in
xor
mov
lods
mov
insl
adc
pop
mov
pushf
fs
loopne
push
int
xchg
push
gs
test
jmp
lea
jp
jns
cs
dec
roll
ja
jb
test
add
aam
into
test
mov
aam
sub
pop
mov
or
testl
xor
out
ret
xlat
and
int3
mov
cmpsl
cld
or
add
cmp
sub
adc
lds
mov
cmpsb
sbb
pusha
pop
mov
adc
inc
push
loop
dec
scas
dec
dec
xchg
lock
sbb
mov
aas
insl
mov
xlat
jg
fistl
sbb
xor
xchg
or
mov
mov
rolb
mov
lock
xchg
xchg
lds
sub
and
leave
hlt
adc
jg
je
test
popa
mov
outsb
pop
mov
inc
lods
icebp
push
mov
fdivl
sub
adc
andb
jle
mov
inc
cld
add
jecxz
add
popa
mov
in
push
shrl
jp
adcb
idiv
push
in
cmc
and
sub
dec
mov
mov
push
loope
xor
xor
jnp
xchg
pop
ss
fcomps
pop
jmp
out
loopne
xor
cmpl
jnp
in
push
mov
test
fadds
pop
sti
xchg
xor
dec
add
xor
dec
stc
cmp
mov
sub
dec
jmp
insb
mov
and
cmp
adc
pop
add
adc
roll
mov
nop
int
adc
sub
iret
popf
adc
cld
pop
mov
popf
xor
inc
adc
pop
movsl
fprem
pop
out
jl
sub
jns
sub
jo
adc
add
imul
test
flds
push
mov
inc
mov
sub
push
jb
ret
fistps
test
int
dec
dec
nop
mov
ret
mov
or
sub
adc
mov
or
ret
fs
mov
frstor
xor
and
cmc
addr16
ja
fsubrl
xchg
xor
push
adc
sbbl
mov
mov
loopne
xor
dec
sub
pushf
out
sub
nop
in
notb
push
cmp
jle
push
dec
and
sbb
sbb
gs
xor
jae
bound
mov
stos
push
push
pop
sbb
addl
call
lcall
cmc
add
mov
test
mov
adc
mov
dec
push
sub
lret
loop
xor
in
mov
pop
jbe
in
mov
pop
push
hlt
loopne
out
lahf
mov
imull
cmpsl
popa
and
mov
push
or
negl
das
mov
cltd
fbstp
dec
adc
push
dec
cmpl
inc
lea
cmpsb
push
ljmp
out
inc
mov
test
jp
cmp
inc
repz
xor
pushf
out
ja
icebp
cmp
cwtl
daa
mov
pop
mov
push
pushf
mov
push
cmp
test
into
add
xchg
ljmp
enter
inc
and
xchg
cmc
lds
or
cmp
js
inc
filds
push
outsl
fisubs
imul
push
out
pop
call
lods
or
or
test
lret
pop
and
jg
push
call
movsl
lock
shl
jno
cs
out
sub
rolb
add
mov
pop
jnp
mov
xchg
aad
dec
dec
mov
lret
adc
pop
arpl
loope
xor
in
inc
xchg
jmp
ss
aaa
sbb
push
xchg
inc
push
or
in
adc
dec
mov
xchg
xor
jmp
pop
cmc
rorb
sub
jle
and
xor
xchg
dec
fsubr
add
inc
xor
icebp
xor
and
adc
inc
stc
rolb
or
cmpsl
mull
mov
cmp
loopne
movsl
movsl
and
mov
adc
cmpsl
sarl
sahf
jecxz
xor
push
or
out
xor
pop
add
dec
push
cmp
mov
shlb
push
sub
mov
adcl
jmp
mov
hlt
dec
jle
mov
pop
mov
rorb
cwtl
movsl
mov
addr16
jecxz
push
add
cs
jns
dec
andl
xchg
xor
cwtl
xor
cmp
dec
xchg
cli
scas
mov
jbe
lock
daa
int3
add
xchg
shrb
sub
fmull
or
pop
nop
mov
test
fmul
movsl
push
pop
push
pusha
cmp
out
ljmp
repz
fstps
dec
sbb
jo
pop
int
cmc
mov
icebp
and
mov
push
jg
add
popf
out
adcl
das
jae
imul
dec
mov
out
lahf
stos
adc
sti
sub
jp
fidivrl
test
sub
and
lret
into
lock
push
push
testl
pop
or
xor
loop
jl
lods
ljmp
inc
test
cmp
inc
adc
dec
xchg
data16
push
mov
aad
inc
pop
push
cli
or
dec
mov
xchg
push
out
jbe
cli
scas
in
mov
jo
lcall
nop
mov
hlt
mov
repz
pop
mov
sbb
sbb
shlb
mov
test
jbe
shlb
pop
jmp
aam
push
lods
cmpl
xchg
or
loopne
lret
mov
mov
cmpsl
push
add
add
jbe
lods
fs
mov
sub
adc
int3
inc
inc
and
shlb
cmpsl
xor
mov
inc
adc
xor
fisttpl
add
sub
add
mov
cmp
aas
add
dec
ret
lret
fiaddl
push
sub
dec
inc
les
lret
loopne
stos
data16
frstor
push
filds
lock
lods
lea
mov
pop
mov
popf
or
sarl
std
addl
xchg
fisttpl
shrl
mov
aad
addr16
add
in
pop
leave
loop
int
sub
hlt
js
cmp
int3
xor
out
xchg
dec
addl
mov
pop
lock
pushf
push
or
or
dec
and
sbb
dec
roll
push
push
icebp
mov
arpl
or
jb
sbb
jp
test
out
popf
mov
mov
or
fisttpl
fiaddl
push
jle
les
mov
push
out
mov
adc
into
cmc
inc
enter
dec
jmp
lahf
xor
loop
xlat
mov
xchg
add
ja
mov
mov
xchg
pop
out
scas
inc
lea
fmull
cmp
movsb
and
pop
popfw
mov
xor
fistpll
les
fdivrl
adc
sub
aam
sbb
adcb
push
xchg
sahf
popf
push
in
fadds
orb
sub
pop
insl
mov
mov
cmc
ja
std
mov
jg
fisubl
sub
mov
imul
inc
xor
mov
xchg
cmp
jl
xor
call
jle
pop
stos
inc
add
aaa
adc
lods
es
xor
ja
jge
rcrl
jnp
cmp
movsl
lea
mov
stos
jmp
test
sub
aam
mov
sahf
mov
lahf
mov
adc
ss
cmpsl
xchg
pop
fndisi(8087
lods
mov
sub
mov
cmc
es
das
push
ljmp
insl
push
std
out
dec
cmp
xchg
mov
xor
outsl
mov
dec
jecxz
andb
jo
arpl
stos
ret
pop
push
push
jmp
and
jb
faddl
sbb
data16
xchg
xor
fisubl
ret
xchg
xchg
sti
mov
js
sub
inc
and
push
fs
in
pushw
insl
add
dec
scas
push
sbb
mov
repz
mov
mov
jo
add
push
lds
outsl
fnstenv
jb
and
in
test
lea
add
mov
jnp
inc
les
data16
lods
jo
arpl
scas
fcomps
subl
popa
test
jg
loop
iret
mov
ja
pop
xorb
dec
mov
add
filds
int
arpl
fmuls
xchg
aad
aad
es
push
and
lea
sti
add
or
push
push
cmc
mov
xlat
cs
mulb
pushf
int
pop
push
subb
sbb
arpl
outsl
xor
or
in
mov
aad
out
adc
fimull
sub
dec
stc
adc
pop
jb
in
add
mov
movsb
pop
inc
lahf
out
xchg
xor
jge
mov
sbb
repz
sbb
lods
loope
out
and
cs
bnd
add
cmp
scas
popa
xchg
sbb
loopne
arpl
nop
xorb
movsb
sti
bound
lea
mov
pop
xor
and
test
adc
mov
je
add
addr16
and
and
popa
dec
repnz
cld
test
dec
push
mov
imul
mov
ret
jmp
mov
mov
test
or
dec
cld
and
sbb
dec
jnp
push
les
push
es
jo
lods
pop
xchg
xchg
jbe
jp
dec
ss
int3
aad
mov
dec
div
add
pop
out
ljmp
dec
test
or
fistps
fwait
adc
cli
nop
cvttps2pi
xchg
int3
add
cltd
pop
shlb
aad
mov
dec
mov
pop
jle
cmpsl
loopne
fcomps
dec
sarb
sahf
pop
lods
inc
push
adc
repz
icebp
stos
in
mulps
dec
mov
sbb
jmp
subl
xchg
adc
xchg
je
in
lret
scas
aam
movsl
inc
or
cmp
add
xor
movb
push
stos
sbb
xchg
cmp
sbb
dec
cmp
fdivl
jecxz
mov
dec
clc
mov
or
and
push
or
aaa
fcomps
mov
jl
mov
mov
xchg
stc
xchg
call
pop
fxtract
rcrl
dec
or
mov
sub
xchg
pop
aad
idivl
jns
xchg
inc
xchg
mov
cmp
fidivl
push
ds
mov
sbb
pop
adc
rorl
cs
loop
mov
rorb
shll
hlt
push
gs
sti
push
ja
sub
ret
rclb
out
push
add
cwtl
sti
std
xor
jmp
push
mov
insb
push
nop
fldcw
mov
add
aad
out
scas
shl
out
push
out
repz
cmp
aam
push
aaa
push
repnz
mov
aas
popa
scas
xchg
xchg
je
jno
out
and
xor
icebp
divb
xor
cmp
push
cmp
jecxz
mov
ret
sub
fdivs
or
pop
push
imul
xor
jmp
cmc
sub
imul
loopne
std
pop
adc
ljmp
adc
jl
lock
cmp
jne
mov
xlat
jnp
in
ds
insl
nop
pop
pop
movsb
orl
add
and
dec
notb
xchg
or
imul
cli
cmp
out
popa
push
jg
popa
clc
jle
test
pop
mov
mov
adc
and
pushf
push
insb
jae
insl
leave
inc
xor
outsb
and
jge
mov
je
out
cmp
ds
pop
sahf
mov
xchg
icebp
dec
repnz
sahf
jg
lahf
mov
mov
cmp
sarb
mov
outsb
ret
mov
lret
pop
mov
and
dec
mov
stc
inc
std
movsb
pop
popa
mov
add
cmp
or
xor
jns
lret
loopne
sub
and
mov
xchg
jne
push
das
out
xchg
icebp
ds
les
mov
sub
enter
push
pop
or
mov
xlat
mov
xchg
icebp
popw
push
xlat
adc
or
adc
mov
mov
jae
xchg
clc
jge
jp
mov
sbb
adc
jae
rclb
imul
mov
xor
decb
mulb
mov
test
and
in
cld
inc
adc
cwtl
imul
lods
jl
sub
sub
in
mov
int3
xchg
mov
mov
test
in
mov
stos
mov
pop
pop
mov
pushf
je
leave
icebp
cmpsl
cltd
dec
and
xor
and
push
sti
or
imul
dec
mov
inc
gs
dec
mov
dec
mov
out
je
or
dec
or
pushf
shlb
jg
dec
cmp
movl
cmp
nop
movsl
dec
mov
inc
jl
push
jnp
dec
daa
iret
in
lea
add
push
push
je
bound
cmp
ds
mov
scas
out
mov
test
aaa
pop
in
bound
xorl
xchg
out
subl
mov
aad
add
in
cmp
ljmp
adc
pandn
sbb
rcrb
lds
push
and
pop
push
popf
sahf
or
pop
push
mov
mov
icebp
pop
inc
test
sub
cmc
sub
test
dec
adc
scas
fisubrs
mov
adc
rol
test
loope
inc
adc
pushf
or
jno
and
imul
rcl
popa
ds
arpl
pop
jns
stos
outsl
ror
fisubs
pop
inc
mov
shl
rorb
adc
add
add
ljmp
jp
addr16
subb
mov
outsb
add
add
xchg
mulb
push
sub
int3
lar
add
jb
test
mov
test
dec
sub
icebp
mov
cmp
mov
dec
xchg
imul
not
rorl
sbb
in
or
repnz
rcl
xchg
inc
push
push
xsaveopt
rol
mov
mov
outsb
dec
pusha
sti
out
pushl
sti
pop
mov
or
int
xor
xchg
xchg
inc
cmovae
dec
out
inc
mov
int
movsb
xor
fldenv
cmp
mov
dec
negl
or
fildl
mov
adc
sahf
or
add
fsubrl
mov
rcl
mov
scas
add
fwait
pop
pop
repz
mov
add
jno
push
aam
lds
add
inc
jmp
ds
or
test
jb
lods
jmp
push
mov
icebp
mov
cmc
push
int
and
scas
cmovs
xor
or
mov
jb
shrb
mov
add
push
xchg
sbb
leave
dec
iret
outsb
les
mov
lret
loopne
inc
push
stos
push
mov
add
cltd
fidivrl
cmp
and
xchg
test
fimuls
lcall
xchg
pop
add
cmp
in
aaa
cli
pop
jl
mov
xor
xor
fists
mov
push
pop
sub
push
and
pusha
lock
cmp
cmpsb
hlt
insl
int3
lcall
and
in
sti
lret
xor
dec
or
sub
xor
adc
pop
jle
xchg
fninit
or
add
lahf
subb
fldl
les
xchg
mov
ret
sahf
ret
pop
mov
addl
jecxz
xchg
mov
cmp
inc
rcr
shr
imul
imul
pushf
inc
lret
jne
mov
fildll
jbe
xchg
out
inc
inc
jp
inc
andb
adc
xor
repz
push
insl
mov
ret
rclb
icebp
flds
sbbl
xchg
add
xchg
lods
les
je
or
sub
sub
add
pusha
stos
mov
inc
push
insb
push
repz
mov
push
dec
xorb
loope
addr16
pop
in
stos
xchg
fcomps
push
out
pop
sti
arpl
add
mov
shl
sbb
xchg
jmp
andb
rcrb
or
cmc
enter
adc
aaa
xchg
gs
out
and
and
loope
sub
cmp
cs
mov
or
cmp
jo
fiaddl
lcall
and
jg
pop
lods
push
fmull
mov
fcomps
pop
repz
jb
add
mov
mull
adc
inc
div
rcr
inc
mov
adcl
daa
dec
fwait
aam
in
bound
jo
dec
mov
xor
mov
lcall
mov
call
fcomps
adc
adc
inc
adc
push
shlb
outsl
mov
jg
mov
je
fstps
dec
leave
hlt
xchg
lret
sub
outsl
xchg
or
bnd
push
and
cltd
fs
push
push
roll
dec
dec
push
in
cmp
xchg
cs
es
dec
gs
mov
lds
mov
cmpsb
repz
scas
in
pop
je
jae
or
jg
cli
aad
les
xchg
and
data16
rolb
adc
aaa
dec
mov
jns
shll
dec
test
mov
movsb
lret
xchg
dec
scas
cld
in
lods
dec
jl
push
and
sub
or
lret
sub
pop
daa
std
adc
cmp
pop
dec
fisttpl
das
pop
repz
xchg
les
cwtl
iret
jl
cmc
mov
repz
mov
mov
xlat
xchg
subl
dec
cmp
xchg
cmpsl
sbb
cwtl
xchg
das
repnz
xchg
sarb
xor
add
andb
inc
fdiv
adc
xchg
sti
out
aaa
outsl
dec
and
xchg
sbb
pop
jmp
dec
inc
roll
xor
insb
stos
notrack
add
cmp
into
mov
std
ret
add
movsb
rclb
mov
and
lds
jecxz
fcoml
ficomps
mov
rcrl
push
mov
jmp
jno
scas
cld
mov
dec
xor
sahf
adc
xor
inc
jnp
xor
mov
movsl
sbbb
jb
sbb
mov
or
fndisi(8087
pop
insl
xchg
add
inc
sbb
xchg
hlt
xchg
call
sub
and
in
pop
cmc
cmc
std
xchg
fildl
outsl
cmp
or
sub
pop
repz
mov
into
loopne
bound
dec
adc
pop
out
xorb
shlb
mov
or
xor
cmp
inc
data16
popa
in
add
scas
cmpl
xor
jae
insl
aad
call
into
stos
jp
sub
push
push
push
push
mov
mov
pop
icebp
xchg
movsl
test
in
andl
gs
enter
fwait
shll
xlat
and
nop
stos
dec
ds
je
adc
dec
dec
or
xor
shll
aas
pusha
jg
mov
scas
jno
aaa
xlat
in
push
and
dec
fsubl
push
unpckhps
xchg
mov
pop
xor
in
mov
mov
clc
cmp
repz
cmp
xlat
and
addr16
scas
gs
xchg
push
cmp
mov
jo
dec
out
mov
pop
cmpl
popf
mov
push
jge
pop
cmp
adc
insl
push
andl
dec
stc
in
push
xchg
adc
mov
loop
inc
pop
btc
xchg
into
sub
mov
arpl
xchg
xor
mov
mov
mov
aam
lret
xlat
sub
outsl
jmp
jnp
adcl
movsb
shl
sbb
jle
mov
mov
xchg
sub
out
mov
push
bnd
add
add
loopne
push
pop
dec
jae
pop
pusha
sbb
aam
out
dec
cmpb
fcmovne
or
jb
fmul
les
mov
dec
gs
add
stos
iret
fadd
icebp
jl
repnz
dec
mov
xchg
test
and
adc
cmpsb
hlt
push
push
mov
daa
test
push
pop
push
sti
stos
adc
cmp
sub
nop
mov
repz
mov
adc
cmc
loop
out
fld
jle
sbb
adc
mov
mov
mov
xor
je
or
int
rorl
pop
ja
mov
push
or
aaa
or
pop
mov
test
test
sbb
cmovp
inc
xor
mov
cld
jo
in
daa
pop
int3
jns
ss
push
roll
adc
aam
ljmp
adc
cwtl
xchg
roll
in
data16
gs
loop
ror
push
cli
cmpsb
push
enter
push
insl
mov
pop
add
lea
movsl
dec
out
and
cwtl
mov
inc
adc
fcmovu
jns
xchg
cmp
std
pushf
or
xor
cmp
pop
inc
mov
scas
mov
pop
in
jb
in
ror
inc
sub
shrl
inc
movsl
cmp
fdivs
mov
shll
push
pushf
mov
sti
mov
out
cmc
sarb
cltd
ds
pop
dec
fiadds
xchg
mov
xor
jmp
sub
mov
popaw
test
dec
dec
jmp
mov
lock
push
xor
les
stos
mov
dec
roll
inc
movsl
push
xchg
call
fisubrl
aas
aas
fs
xor
adc
pop
mov
loopne
jo
aas
ljmp
mov
sbb
imul
jae
stos
jge
cmp
mov
push
push
aas
mov
sbb
push
cmp
add
js
lret
mov
inc
sti
pop
out
mov
xor
lret
sub
stos
mov
decl
cmp
clc
pop
mov
sbb
mov
mov
pop
leave
inc
loop,pn
mov
unpcklps
xchg
nop
insl
pushf
add
pop
ss
add
add
aad
leave
inc
lret
test
lcall
leave
pop
ds
dec
ds
push
stos
xchg
in
into
xchg
ret
sbb
sbb
and
call
push
xchg
mov
je
xchg
push
arpl
je
roll
or
pop
adc
psrld
mov
dec
inc
jne
cmpsb
pop
pop
imul
rolb
xor
in
pushf
jl
push
push
mov
add
icebp
mov
lea
xchg
or
add
cmp
fucomip
ja
ja
dec
xchg
ret
xorl
mov
adc
or
nop
xchg
orb
mov
jge
add
push
lahf
add
rcl
push
test
add
mov
jnp
dec
add
mov
pop
aas
mov
sbb
cwtl
adc
cwtl
mov
rcl
mov
jge
dec
movsb
mov
adc
fwait
fwait
dec
sub
xchg
smsw
push
mov
pushf
faddp
push
push
in
decb
lock
sbb
jmp
sbb
mov
and
dec
subl
pop
rcrb
sub
movsl
loope
subb
or
sti
push
xchg
push
idivb
inc
mov
ja
es
inc
aad
dec
pop
pop
in
or
push
popa
js
addr16
sub
in
adc
inc
mov
outsl
mov
fs
sub
add
repz
sbb
repnz
out
inc
dec
push
push
aaa
arpl
into
pop
sbb
xor
xor
ret
inc
fisttps
jae
pop
jmp
rorl
insb
shl
lods
cmpsb
add
add
xchg
dec
imul
inc
jo
out
std
inc
push
jns
dec
enter
test
repnz
dec
push
adc
xor
stos
cmp
shll
jp
mov
xchg
dec
pop
std
sbb
jnp
push
sub
lcall
push
sti
sbb
in
jnp
lcall
and
int3
push
xor
mov
loopne
mov
cmp
jnp
push
mov
sbb
add
and
mov
mov
xor
movsb
pop
cs
movd
dec
sbb
push
fcmovnbe
and
insb
daa
mov
ljmp
add
and
mov
inc
iret
pushl
imul
out
sub
xchg
enter
lcall
cmp
aas
hlt
stc
fwait
and
and
inc
jbe
mov
subl
lret
pop
cmc
js
data16
loop
repz
mov
or
pop
mov
stc
jno
cwtl
push
int3
lds
aad
movsb
into
add
mov
mov
push
mov
adc
shll
rorb
gs
push
mov
xor
mov
dec
mov
testb
cld
fidivrs
dec
mov
or
and
test
sarl
aam
shll
out
fs
pop
les
jns
sub
addl
mov
addr16
mov
dec
repz
cli
push
rcll
mov
lret
and
cs
repz
out
or
xor
push
pusha
push
sub
pop
push
leave
jns
adc
stos
ficoms
cltd
add
test
inc
dec
mov
aam
pusha
adc
inc
lret
cmp
push
int
arpl
pop
xchg
pop
das
hlt
push
sbb
fwait
out
shlb
cmp
xlat
and
popl
enter
cmp
mov
xchg
adcb
push
gs
cwtl
inc
outsb
add
sbb
lret
sar
and
pcmpgtw
cwtl
sbb
fisttpl
iret
je
mov
bound
xor
inc
int
in
xchg
xor
xor
imul
cwtl
adc
jmp
movnti
dec
or
daa
or
inc
xor
mov
fnsave
pop
out
push
arpl
push
inc
aad
jmp
mov
call
adc
jmp
dec
inc
adc
mov
inc
sbb
xor
repnz
negb
jecxz
lret
dec
pop
mov
iret
in
out
cmp
add
sbb
add
lock
xchg
imul
adc
pop
out
inc
inc
mov
inc
in
push
mov
ss
mov
push
sub
rcrl
push
xor
aas
jnp
push
jecxz
adc
sub
insl
and
inc
clc
stos
mov
sub
stos
lret
mov
mov
xor
shlb
push
mov
movsl
pop
sub
js
aad
xor
mov
mov
les
iret
mov
aaa
pop
add
xchg
push
sahf
addr16
jl
stos
sub
cmpsb
push
movsb
and
adc
ret
sbb
sbb
shlb
pop
inc
movsb
repz
mov
push
scas
jge
ljmp
and
and
ja
lret
mov
dec
das
jge
xor
std
cmc
cmp
xchg
cmp
dec
mov
push
and
xlat
pop
call
or
pop
jl
arpl
add
dec
faddl
mov
sbb
jbe
aas
fcoms
addr16
repnz
sub
jmp
jmp
dec
and
lods
mov
mov
jae
xor
lret
cli
scas
out
sub
shrb
dec
out
dec
sti
clc
xchg
inc
popa
jmp
fwait
xor
mov
cli
fdivr
ljmp
insb
cwtl
mov
xor
sahf
lret
mov
out
cmp
and
jecxz
push
dec
adc
mov
ja
jno
psrad
and
fisubl
fs
push
dec
xlat
xchg
inc
loopne
fprem1
inc
add
rolb
xlat
arpl
jge
jns
xchg
cmp
adc
xor
adc
ja
cmpsl
into
lcall
xlat
and
jl
and
mov
adcl
lea
jno
adc
push
sahf
and
pop
pop
nop
mov
inc
sbb
pop
js
scas
or
cmp
scas
testb
ret
xor
in
mov
repz
sbb
mov
icebp
test
jmp
xchg
ret
je
adc
mov
and
in
jae
xor
out
stos
sub
add
push
mov
cmp
dec
test
inc
cld
add
mov
jle
dec
mov
pop
cmp
pop
jecxz
jecxz
jg
loope
mov
rcrl
ret
outsl
mov
jge
pop
adc
adc
and
and
push
dec
shr
jecxz
nop
cltd
sub
lahf
loop,pn
arpl
push
push
out
scas
outsl
xchg
hlt
rcrb
icebp
or
push
jbe
scas
inc
daa
xchg
and
clc
mov
mov
test
and
dec
divl
popa
xchg
pop
inc
fldl
cs
mov
ss
xchg
pop
add
sub
jnp
mov
bound
repz
xchg
pop
rorb
cmc
in
loope
pop
push
add
sub
sub
stos
push
mov
cwtl
aam
dec
icebp
sbb
push
mov
cmp
call
push
mov
or
loopne
inc
cmp
or
mov
clc
jl
xor
inc
mov
mov
push
push
test
rorb
xchg
inc
addr16
dec
lods
adc
aas
mov
movsb
push
push
push
ja
les
and
sbb
push
mov
out
pop
xor
sarl
mov
mov
pop
xchg
sub
cs
notl
push
adc
rorl
sti
mov
test
mov
outsb
jp
dec
cwtl
dec
push
xchg
and
call
aam
pop
jp
sub
filds
cltd
cmp
sub
ss
popf
sbb
jl
into
mov
lahf
cmpsb
mov
dec
das
mov
dec
inc
out
adc
or
cld
icebp
pop
jb
es
adc
adc
adc
push
xchg
adc
mov
or
ret
push
outsl
sarb
jl
movsl
imul
scas
test
add
repnz
lcall
jne
push
jnp
leave
call
jb
and
shl
call
shll
mov
sbb
test
mov
or
pop
rcr
test
adc
orb
lds
cli
or
jo
xchg
fmuls
loop
pop
ljmp
mov
push
pushf
mov
mov
pop
cmp
mov
out
dec
out
lock
sub
adc
jno
ror
stos
bound
lcall
jmp
fwait
hlt
pushf
xchg
pusha
sahf
shll
inc
dec
je
int
enter
pop
clc
sahf
addr16
jg
and
outsb
in
xor
dec
inc
clc
add
inc
cli
sub
add
out
inc
cmovp
dec
pusha
ficompl
gs
and
outsb
lret
add
popf
out
dec
icebp
dec
lock
add
fmul
popa
aad
push
jmp
shlb
inc
repz
ds
push
dec
jae
lahf
repnz
mov
dec
fstpl
fstps
and
addr16
sar
cmp
hlt
push
lret
orl
mov
add
fdivrl
mov
xchg
jle
imul
sbb
dec
push
dec
fcmovne
out
dec
lock
cmp
xchg
test
ljmp
mov
pop
daa
xor
adc
adc
jnp
cmpsb
push
psrlw
mov
jp
lahf
dec
push
mov
cmovl
popf
enter
inc
jge
aaa
shr
frstor
incb
in
mov
stc
pop
pop
sahf
adc
les
lret
lcall
cmp
sub
push
pusha
iret
nop
mov
ret
mov
ds
cmpsl
lret
ret
push
adcb
push
pop
cwtl
nop
rclb
pop
movsl
dec
daa
jb
bound
ficompl
cmp
or
jmp
jne
push
subb
sbb
filds
int3
mov
shlb
push
movsl
idivl
lcall
dec
and
xchg
psrlq
pop
loop
lods
xchg
push
pop
cld
and
icebp
inc
jp
js
daa
push
lods
lock
dec
loop
negl
cli
mull
or
xchg
pop
cmpsb
std
mull
aaa
cs
jne
je
mov
cmovnp
cmc
mov
orl
dec
xor
jmp
mov
mov
xor
gs
xchg
into
and
inc
ss
pop
pop
push
add
pop
dec
in
aam
sahf
mov
cmp
jg
mov
lods
insl
cmp
movsb
jae
pop
stc
out
lods
xlat
sub
pop
adc
aam
cmp
in
jmp
sub
add
adc
ror
cmpl
mov
in
aaa
repnz
jno
cli
out
push
fst
or
xchg
popl
ffree
inc
insl
ja
add
addr16
push
es
popa
shll
sbbl
int3
mov
pop
aam
mov
cs
adc
inc
icebp
gs
nop
xchg
call
pop
pop
sahf
cmp
xchg
out
pushf
adc
out
jge
push
ret
mov
sub
xor
sarl
inc
push
outsb
in
xchg
push
and
loop
jmp
hlt
ss
icebp
push
adc
or
leave
in
inc
pop
aad
pop
and
mov
mov
fwait
jecxz
loopne
pop
mov
cmp
mov
popf
or
mov
in
scas
add
fs
in
inc
addr16
push
push
push
and
jp
lock
add
add
mov
into
imul
push
cwtl
roll
push
jecxz
lret
cltd
adc
or
fs
or
ljmp
or
xor
nop
xorb
jle
sahf
stc
mov
sbb
xorl
push
jno
in
lea
mov
xchg
ja
sbb
lods
rcrl
insb
dec
cmp
cmp
cs
adc
xchg
int
mov
sbb
jns
xor
push
inc
pop
or
test
push
adc
pop
push
jmp
push
ja
popf
sub
dec
sub
rol
and
inc
cli
loop
sub
cmpb
movb
pop
jge
dec
mov
aas
aam
bound
arpl
sbb
xor
jecxz
sbb
stos
sbb
sbb
and
xlat
ljmp
push
clc
call
jmp
adc
jnp
mov
push
nop
mov
movsb
data16
cwtl
xchg
xor
aad
std
imul
in
sub
and
shr
mov
xor
push
imul
sahf
jae
mov
mov
and
sahf
mov
loop
push
adc
sub
mov
int
dec
xlat
in
mov
adc
leave
mov
mov
push
inc
or
xchg
adc
push
stos
scas
cmp
fistps
sbb
stos
jo
rsm
mov
push
pop
mov
dec
dec
out
out
in
cmc
mov
jo
ds
sbb
repz
xor
push
add
jl
sub
out
mov
test
lahf
jp
push
inc
hlt
adc
fimull
jg
adc
dec
mov
outsl
stos
mov
pop
lret
sbbb
es
sub
sti
test
cmp
movd
lcall
cwtl
xchg
inc
out
jge
pusha
push
outsb
pop
cwtl
add
push
push
mov
in
clc
push
xor
loop
inc
mov
test
add
add
orl
aad
pusha
cmp
or
and
xor
stos
or
jge
in
cld
outsl
fnsave
rcll
or
ss
pushf
mov
dec
jmp
pop
pop
push
push
add
adc
ret
push
adc
mov
shll
push
xor
mov
ficomps
filds
gs
dec
inc
clc
das
repnz
rcll
pop
popa
ficomps
jp
pop
sub
test
xchg
xchg
packsswb
and
mov
ja
fs
push
ficoms
fsubl
push
cmpsl
jnp
lret
sub
jb
push
loop
ja
rorb
lret
or
test
adc
in
out
cwtl
fisubs
and
mov
xor
int
push
or
imul
adcl
push
cs
in
lock
stos
test
int3
arpl
iret
mov
jge
xchg
in
xor
push
inc
xchg
mov
sbb
idivl
testb
jle
daa
add
gs
into
adc
sbb
and
jbe
adcl
jp
int3
gs
lahf
je
out
int3
stc
out
pop
add
cmpsb
leave
sub
xor
in
or
sbb
fneni(8087
push
jno
cli
movsl
mov
pop
jno
inc
cmp
add
push
inc
movsb
lods
pop
sbb
test
jle
mov
pop
cli
loope
inc
pop
roll
outsb
sbb
push
sub
popf
and
fs
repz
push
fnstenv
leave
adc
fwait
push
pop
rcrb
inc
xchg
daa
jmp
jbe
sbb
jne
mov
call
mov
in
outsb
popa
into
mov
loope
mov
lret
inc
insb
testl
imul
pop
jg
fstp
int
repnz
pusha
xchg
insb
and
or
fwait
xor
mov
daa
popf
inc
mov
mov
pop
dec
xor
push
cltd
loope
test
adc
sbb
cli
pop
sub
pop
or
jae
add
xor
adc
jns
repz
mov
cmp
cmp
jns
in
imul
sbb
cmpsb
pop
cmp
and
scas
and
aam
mov
or
sub
sub
fwait
pop
jp
clc
repz
dec
call
adc
fistl
hlt
jp
mov
loop
imul
icebp
js
dec
test
iret
loope
in
or
fwait
sti
cmp
test
jl
loope
je
rclb
or
and
ficompl
in
out
inc
popf
jb
cli
or
lcall
or
movsb
mov
push
insb
mov
int3
pop
pop
iret
repz
pop
or
adc
push
and
add
xchg
movsl
mov
aam
mov
pop
mov
add
adc
sub
mov
loopne
inc
fstpl
sub
idivl
mov
loop
addr16
mov
mov
cmpsl
ret
add
jg
popfw
pop
imul
cmp
mov
aas
jo
pop
ds
std
jle
fstps
jmp
subl
out
push
cmp
mov
loop
sub
fbld
mov
inc
push
jne
call
mov
cmpsl
insb
cmp
inc
push
mov
stos
or
lds
call
cmp
fs
imul
push
push
push
cmpsb
add
jb
or
loopne
das
add
sub
push
ret
inc
fwait
mov
add
cmp
and
push
add
mov
jge
mov
sub
punpckhdq
inc
ss
sbb
gs
sub
pop
inc
fs
add
or
and
outsb
push
in
cmp
stos
fs
xlat
mov
mov
out
ret
xor
xchg
cltd
call
ss
mov
mov
test
imul
mov
dec
mov
pusha
jmp
pop
cmpsl
push
push
repnz
sbb
sbb
xorb
fistl
add
mov
cmp
sbb
pop
popa
and
mov
repz
cmpsl
push
cwtl
out
outsb
andl
mov
inc
cwtl
bound
test
mov
inc
aad
sbb
sbb
rorb
mov
jge
add
insb
cwtl
test
push
adc
pop
call
addr16
ficompl
cltd
popa
add
sub
cmp
pop
pop
decb
lret
fldt
xchg
fnstcw
out
mov
inc
mov
movsb
jne
add
xchg
mov
fmuls
inc
imul
push
mov
bound
movsl
cmp
xchg
test
xlat
xchg
mov
cs
xchg
outsb
or
popa
js
push
sub
aas
aam
jae
pop
pushf
jae
pop
add
xchg
arpl
aas
xchg
lahf
sbb
adcl
pusha
push
and
sbb
stos
cmp
jnp
xor
and
les
outsl
scas
daa
mov
or
pop
xchg
xor
in
xchg
cmp
leave
das
mov
adc
je
icebp
popa
test
mov
int
jecxz
ljmp
dec
jge
jle
sbb
or
sub
lret
repnz
scas
pop
arpl
lods
out
aaa
in
dec
fisttpll
adc
cmp
test
jg
movsl
aaa
stos
cmp
lret
push
and
lcall
pusha
fimull
mov
out
cli
cmp
call
sub
mov
mov
adc
dec
sub
aad
out
fwait
xorb
cmp
sub
inc
sahf
lods
mov
mov
jp
push
xchg
lods
cs
stc
cmp
call
int3
mov
inc
cmp
mov
lds
aaa
sub
push
xlat
jg
inc
mov
jp
imul
push
test
xchg
outsl
xchg
adc
js
dec
push
mov
adc
mov
push
xchg
ds
jae
pushf
or
lea
pop
fucomip
add
loopne
push
mov
sti
xchg
push
daa
pop
std
in
das
jle
data16
sahf
mov
movsl
andl
mov
pop
dec
push
in
fistl
repnz
cli
xor
jp
sub
dec
jle
in
jo
pop
jmp
mov
jg
enter
in
cld
fdivrs
push
mov
js
cli
sbb
insl
les
xlat
ss
and
and
jno
or
clc
popf
adc
rol
xchg
scas
mov
hlt
push
mov
inc
xchg
test
popa
pop
jne
scas
testl
aad
pop
aas
pop
popa
and
mov
sub
pop
cli
and
adc
in
movsl
inc
xchg
aaa
call
sbb
push
xor
sti
jo
cmp
movsl
into
out
out
aaa
mov
insb
cmp
lret
jg
insb
sub
hlt
xor
and
jl
pop
push
and
sub
gs
add
pop
stos
xchg
and
or
mov
push
fildll
mov
xorb
in
das
ja
stos
jle
mov
inc
sub
mov
jno
fs
or
scas
lock
ret
out
mov
or
decb
or
pop
mov
jns
or
movsl
push
loopne
ds
pop
and
lret
test
in
mov
cld
outsl
dec
mov
ja
repz
imul
pop
cwtl
fldl
xchg
ficoms
jle
jmpw
rcr
dec
fiaddl
mov
sub
cmp
push
nop
sbb
mul
sbb
mov
sub
stc
jl
xorl
repnz
mov
mov
push
test
jmp
addl
dec
je
out
jl
data16
xchg
pop
cmp
aas
cmp
clc
ret
mov
outsb
vpsrlw
shll
pop
lds
and
das
and
dec
push
inc
insl
insl
aaa
pop
mov
xchg
jnp
test
mov
sahf
test
lret
mov
sbb
filds
or
push
push
cmp
out
or
push
xlat
sub
xor
mov
cld
and
xor
je
mov
add
cmp
add
pop
xchg
lods
outsb
dec
fimull
pop
and
dec
aad
cltd
mov
repz
lret
mov
cmp
inc
xchg
leave
xchg
ds
iret
jb
xchg
loope
insb
movsb
cmpsl
outsb
loopne
mov
xor
stc
movsb
xor
or
jbe
push
dec
aas
inc
aad
add
sbb
lret
or
daa
fisttps
popf
mov
shll
dec
add
mov
out
cmp
jl
leave
dec
mov
xchg
mov
push
push
ret
inc
addb
out
daa
mov
inc
inc
cld
outsb
mov
ret
cmp
mov
add
or
xchg
icebp
mov
jne
jns
fsubrp
adc
aaa
cmp
sub
adc
sbb
ret
add
push
hlt
sub
fdivl
inc
mov
mov
fcomp
mov
ret
mov
jb
outsb
cs
sti
shll
xchg
insl
cli
stos
ds
and
xchg
xlat
rol
pop
je
pop
sub
call
xchg
dec
adc
andb
push
inc
icebp
push
dec
lock
cli
add
ret
and
in
scas
sub
xchg
push
mov
push
mov
out
mov
fmull
xor
dec
dec
ror
jle
pusha
rcrl
loopne
inc
shrl
sbb
in
ficompl
imul
mov
js
or
scas
xchg
push
int3
aad
sub
icebp
pop
adc
icebp
push
sbb
adc
or
mov
inc
xchg
mov
sti
ss
push
iret
in
mov
dec
sbb
cmp
negl
rorl
sub
inc
stos
stc
incl
cmp
hlt
jp
stc
loopne
mov
mov
out
inc
paddsb
popf
ja
jle
xchg
mull
lret
insl
mov
mov
or
sbb
push
fsubs
mov
scas
push
mov
mov
lret
sbb
ljmp
add
sub
jnp
ja
jge
push
in
xchg
pop
fs
and
xorb
ja
adc
xlat
add
sbb
adcb
out
xor
stos
sar
lds
adc
push
mov
sbb
lret
pusha
pop
jmp
add
das
scas
mov
inc
jg
jmp
adc
push
cld
push
stos
push
push
fmuls
fbstp
dec
aad
shl
adc
pop
jmp
cwtl
adc
into
or
sub
xchg
insb
xchg
leave
xchg
dec
adc
rclb
dec
fsubrp
sbb
pop
test
inc
mov
aas
insl
icebp
ss
mov
inc
xchg
aaa
shlb
ss
mov
cmp
outsb
adc
add
add
sarb
iret
ljmp
dec
jle
cld
out
fwait
scas
movsl
pause
jecxz
and
popa
stos
pop
ds
call
imul
dec
or
jno
imul
sti
sbb
jle
adc
adc
lret
pop
nop
sbb
and
mov
xor
pop
and
or
cmp
adc
mov
cli
pop
test
xchg
in
sub
cmp
mov
xchg
sub
adc
and
inc
mov
xchg
std
les
loope
xor
xchg
mov
repz
repnz
jl
mov
popa
pop
scas
sbb
movsb
cmp
hlt
mov
movsb
or
sbb
outsl
aad
pop
and
mov
jl
sbb
or
jbe
mov
push
mov
push
sub
sbbl
inc
test
lods
pusha
mov
aad
aas
aaa
mov
out
lahf
and
repnz
mov
xchg
xor
movsb
in
das
cmp
add
out
add
xchg
jecxz
inc
xor
nop
dec
aad
or
jmp
test
pop
fstl
or
xlat
push
lahf
js
fwait
std
ss
fs
pop
jbe
repz
scas
daa
inc
push
push
jge
sub
adc
out
test
dec
arpl
push
mov
adc
stc
stc
and
rcr
xchg
ja
push
cmp
insb
pop
mov
add
inc
dec
add
push
push
mov
in
mov
dec
pop
mov
out
adc
paddusb
jle
negb
daa
sub
cld
out
mov
rcll
sbb
adc
lods
data16
and
add
mov
mov
xchg
jmp
popa
je
lea
cltd
pop
js
out
fistpl
xchg
sbbb
aad
iret
cmp
lea
adc
shl
jle
test
nop
nop
lea
or
sti
or
mov
lds
jb
mov
in
repz
fildl
les
mov
ja
inc
xchg
pusha
iret
shl
sbb
frstor
icebp
int
das
scas
push
lea
sbb
sub
inc
adc
sti
jle
cs
push
imul
pop
arpl
pop
mov
or
mov
mov
aas
pop
inc
fisubrs
and
xchg
lret
movsl
les
loop
push
sub
ljmp
test
movsl
and
pushf
xchg
aas
xchg
je
push
out
mov
mov
fs
sarb
or
stos
xchg
pop
pop
jnp
dec
sbbl
push
fucomp
bound
add
xchg
mov
sti
loopne
and
loop
push
or
dec
in
mulb
and
stos
mov
mov
clc
aaa
jmp
push
push
push
adc
push
xor
mov
out
movsl
xor
jo
dec
mov
test
or
jl
mov
jge
gs
mov
das
outsb
xor
sub
into
or
xchg
sub
sahf
out
popf
aaa
xchg
xchg
and
call
add
shl
cmpsl
and
mov
and
xor
push
mov
sbbl
repnz
into
push
shl
sbbl
and
cmp
in
pop
shll
insl
adc
and
dec
test
push
or
repnz
ficompl
call
add
movzwl
rcrb
aaa
or
mov
mov
repnz
psllq
sub
neg
ret
mov
std
or
int
mov
add
nop
out
test
push
and
add
pop
xchg
stc
jne
inc
aam
sti
sub
shll
cli
test
scas
insl
fincstp
and
lods
push
sbb
add
iret
push
xor
and
adc
add
pop
cmpsl
enter
insl
xlat
aas
addl
lds
loope
cmp
or
dec
cli
hlt
sub
sbb
test
fdivrs
das
inc
sbb
adc
dec
jecxz
negl
mov
add
cmp
sbb
sbb
fsubrl
das
in
or
push
push
xor
fsubrs
pop
out
std
roll
loope
daa
loopw
add
outsb
xchg
pop
cmp
ror
popf
scas
repnz
mov
mov
orb
and
xlat
dec
add
jbe
fsubrl
cmpb
inc
xor
scas
outsb
jbe
push
jne
stc
cmpsb
fistps
imul
pushf
insb
rolb
fwait
xchg
popa
jle
add
shll
and
add
decl
rorb
adc
xchg
out
aas
fnsave
sbb
add
gs
mov
xchg
pop
vmaxps
lret
mov
add
cltd
cmp
jns
xor
or
ret
push
lcall
cmp
loop
push
jns
jno
movsb
shlb
push
add
lods
out
outsl
jne
dec
push
lock
pop
xchg
add
stos
out
gs
sbb
add
scas
or
xchg
fsubs
aaa
and
out
sbb
cmc
sbbb
and
mov
sti
or
gs
sti
jecxz
call
xchg
fcoms
dec
hlt
pop
cmp
lret
in
cmp
pop
lock
fs
imulb
dec
testb
dec
and
ljmp
or
mov
and
cmpsb
repz
lea
mov
pop
sbb
test
adc
cmp
adc
xor
jle
shr
jmp
scas
lahf
cs
mov
notb
scas
pop
pop
sub
jbe
insb
or
dec
push
int3
iret
fs
inc
xchg
mov
aad
and
jae
add
xchg
movsl
cmp
xchg
mov
orb
dec
dec
mov
aaa
mov
add
nop
stc
stos
xlat
test
stos
mov
jge
jne
movsl
cltd
imul
push
mov
mov
push
out
xchg
jno
or
js
test
dec
jmp
xchg
lock
adcb
xlat
dec
mov
hlt
dec
xchg
out
push
and
mov
rol
jnp
aad
xchg
sub
xchg
lds
repnz
push
sub
rcll
sbb
push
xchg
xor
xchg
lret
shrl
push
into
xor
and
inc
jp
fists
imul
subl
jmp
bound
pusha
adc
mov
sbb
or
mov
adc
sahf
pop
adc
push
clc
in
add
mov
dec
outsb
xchg
pop
push
fwait
inc
mov
add
cmp
cmp
pushl
push
and
scas
scas
cmpsl
inc
push
add
loopne
xchg
in
push
cmpsl
stos
mov
mov
adc
sahf
stos
mov
push
dec
sbb
dec
jmp
scas
ja
push
movsl
arpl
cmpsb
lcall
mov
push
dec
shr
xchg
repz
push
dec
inc
jae
outsl
imul
jno
and
insl
sub
mov
pop
inc
andl
movsb
sbb
mov
sarb
lcall
mov
cltd
pop
jl
les
inc
inc
jnp
jno
scas
dec
aam
lea
mov
sti
or
xchg
out
das
dec
faddl
mov
xor
mov
aam
and
xor
dec
loop
test
jns
dec
push
in
add
scas
mov
push
xchg
sbb
inc
adc
pop
jp
cmpsl
xchg
add
lods
stc
loop
xchg
sub
rorl
adc
pusha
sbb
mov
add
sbb
sbbl
inc
sub
push
jns
ret
pop
and
dec
lret
data16
push
pop
lds
xchg
mov
sti
stos
mov
outsb
adc
mov
and
inc
hlt
pop
adc
xchg
fcomp
nop
cmpsb
das
stos
push
mov
cmp
lret
push
sub
in
pop
test
and
out
mov
imul
pop
shlb
mov
and
jmp
dec
pop
xor
scas
mov
sub
xor
sbb
push
jl
enter
fistl
mov
outsb
fisubrs
dec
mov
sub
jns
dec
repnz
push
mov
mov
inc
mov
and
and
cmp
addl
mov
and
add
jg
addr16
stos
lret
sbb
push
sbb
mov
mov
pop
mov
mov
insl
mov
dec
mov
push
test
mov
xchg
pop
aad
jecxz
and
scas
loope
push
mov
loop
inc
mov
ret
stos
imul
mov
xchg
jp
jne
mov
xchg
rcrb
and
pop
adc
or
repz
mov
sub
mov
enter
mov
leave
js
std
and
push
sub
sbb
pop
push
jg
xchg
fbstp
jbe
dec
icebp
popl
inc
sbb
inc
adc
or
pop
test
xor
dec
pushf
push
and
rcl
jns
fmull
jp
sub
mov
mov
add
fstpl
inc
sti
xor
or
cmc
mov
jecxz
jns
sbb
push
push
or
sbb
jae
mov
ficomps
add
mov
pop
push
into
push
cmpsb
pop
cmpsl
das
cmp
jle
bound
dec
dec
mulb
mov
xchg
add
jbe
xor
xor
fwait
jmp
jb
mov
and
gs
je
fs
pop
aam
ds
int
dec
fisttpl
sub
sbb
inc
adc
push
mov
mov
rclb
pop
lea
cld
push
push
popf
rcl
sub
lods
out
stos
movsb
call
sahf
mov
popf
pop
fxch
add
dec
mov
jae
gs
ljmp
xorl
test
popa
clc
fstl
fisubs
pop
jmp
xlat
or
cltd
lock
into
sbb
rclb
pop
or
or
cmp
and
es
fnstcw
sub
cmp
adc
push
popa
fstp
popf
push
or
mov
pop
pusha
xacquire
pop
out
mov
cmp
mov
xchg
pop
cli
cmp
add
enter
imul
push
ds
add
push
insb
mov
sbb
xchg
push
dec
ja
ja
scas
test
call
inc
jns
fidivrs
int3
outsb
xchg
jne
pop
or
mov
and
and
test
add
ja
and
fcompl
mov
pop
cmp
cmpsl
dec
jecxz
ret
cltd
mov
mov
cmp
adc
ljmp
mov
dec
cwtl
mov
shll
xchg
sbb
les
arpl
dec
dec
or
mov
inc
pop
leave
out
fcompl
adc
cmp
mov
dec
ret
mov
dec
pop
in
jle
insb
test
rclb
mov
push
jge
addl
pop
fmull
mov
sbb
mov
subb
jns
lods
dec
sub
jle
dec
sub
jmp
push
adcb
lds
sub
lret
stc
xlat
add
fcoml
in
lods
cmc
xor
adc
sub
int
xor
mov
pop
test
or
shr
mov
sub
stos
lock
push
loopne
mov
mov
jmp
cmpl
popf
mov
in
out
xchg
xchg
dec
jl
sahf
scas
fwait
movsl
fistpl
lret
loopne
inc
mulb
sub
inc
popf
arpl
pop
push
ljmp
mov
push
cmpsb
sti
push
push
or
xchg
push
pop
or
cli
cmpsl
add
cwtl
xchg
cmp
add
jg
mov
jl
mov
negl
add
pop
cmp
jns
dec
mov
ja
jg
in
or
lock
inc
add
dec
xor
mov
inc
jp
stos
xchg
fwait
ljmp
dec
cwtl
xor
xlat
inc
mov
mov
gs
mov
inc
mov
xchg
test
loope
stos
sbb
pop
mov
or
sub
dec
fsts
push
icebp
xchg
push
xor
fstp
fs
xor
repnz
push
js
xor
rolb
les
sub
pop
add
pop
lret
mov
push
cmpsb
add
jo
inc
shll
scas
mov
cs
adc
ret
xchg
mov
xor
push
mov
pop
push
imul
xchg
jo
mov
jns
fs
inc
out
xchg
hlt
sbb
loop
add
movsl
inc
mov
cmc
call
xchg
loop
scas
mov
xor
arpl
mov
or
xchg
xor
or
subb
insl
icebp
and
out
xchg
loop
adc
and
repz
mov
mov
sbb
scas
enter
add
cmp
inc
pop
sahf
mov
das
popf
fnsave
jnp
je
stos
aaa
popf
mov
xor
in
xchg
mov
lods
cmpsl
roll
mov
xor
dec
inc
xchg
mov
inc
adc
stc
push
aas
push
inc
sti
xchg
fstl
or
xor
push
mov
dec
inc
cwtl
xchg
jb
pop
add
dec
sbb
xchg
dec
test
jmp
cmp
icebp
pop
rcrl
icebp
ret
pop
out
mov
dec
enter
push
imul
dec
out
sbb
in
pop
popa
push
xchg
sbb
in
and
xchg
push
push
daa
jae
cmc
push
sti
pop
shll
adc
scas
jge
push
das
popa
xor
or
clc
cmp
addr16
scas
mov
popa
inc
xor
das
inc
imul
fdivrl
adcl
mov
jb
mov
adc
jmp
outsl
cmc
mov
inc
out
in
adc
adc
insb
lods
mov
jecxz
push
jne
fstp
sbb
push
dec
cmp
into
mov
or
inc
xchg
mov
mov
cltd
movsl
pop
inc
stc
pop
push
int3
push
mov
outsl
jo
repnz
cmp
jno
pop
jae
dec
fsubrs
movsl
inc
repnz
test
call
rorl
insl
push
imul
xchg
sub
sbb
popf
lcall
adcb
mov
jo
test
repz
in
mov
push
sub
jns
ss
mov
iret
lea
cwtl
mov
sub
idivl
pcmpgtd
mov
in
mulb
rcl
test
xor
sub
inc
mov
out
fistpll
xor
mov
add
push
sarl
add
cmovno
xor
adc
sbb
jno
into
leave
cmp
ss
leave
xor
pusha
push
cmp
aaa
jmp
adc
or
or
jno
loopne
stos
fildll
jb
sbb
ss
add
jp
pop
imul
jo
push
or
xchg
mov
inc
hlt
push
mov
repz
push
repnz
popf
add
mov
cli
mov
cwtl
movsb
call
scas
xchg
push
gs
out
mov
add
out
cmc
into
xorb
mov
das
ja
out
inc
shrb
add
push
jns
or
pushf
jge
push
scas
daa
mov
sub
fs
ja
ja
fwait
inc
add
in
mov
test
fstl
test
jae
clc
xor
push
lcall
fldt
fs
icebp
xor
push
jecxz
lahf
adc
imul
lret
leave
cmp
scas
jecxz
add
icebp
pop
lea
dec
arpl
mov
loopne
inc
sub
jae
push
xchg
xchg
xchg
mov
push
inc
mov
xchg
mov
test
int3
aad
clc
xchg
test
scas
aad
mov
mov
lods
jle
cs
icebp
xor
fidivrs
jp
fwait
pop
sub
xchg
push
and
ret
pop
in
jns
pop
popf
aad
mov
add
mov
pop
sub
das
mov
cld
out
nop
stos
daa
jge
and
pop
jns
jb
jg
jmp
cltd
bound
jnp
test
mov
out
fcmove
inc
push
add
jb
fwait
aas
push
sub
dec
sub
mov
call
mov
inc
mov
sub
mov
test
adc
push
loopne
mov
jmp
int
shl
cmpsb
mov
dec
sbb
mov
aam
jbe
imull
cmp
mov
loope
fs
jbe
xchg
popa
in
mov
fnstenv
jg
sub
pop
jne
mov
add
test
sbb
mov
add
mov
insb
leave
or
clc
iret
push
insl
xor
cmc
push
adc
sbb
sbb
notb
dec
fimuls
loop
jns
xchg
and
pusha
pop
inc
fsubrp
in
pop
push
in
clc
push
call
dec
or
out
push
das
jnp
das
int3
jle
test
jo
dec
cltd
xor
jbe
push
inc
idiv
cs
mov
rcrb
sub
mov
pop
out
xchg
int
jmp
cmp
fidivl
cmp
xchg
xchg
loopne
addr16
shll
pop
add
sub
jb
push
xchg
xorb
cmpsl
test
push
out
adc
sbb
leave
aam
jp
pop
cld
mov
pop
push
mov
jmp
out
xor
add
mov
arpl
sahf
dec
iret
push
cmp
sbb
mov
adc
popl
xchg
mov
mov
jbe
ds
stos
pop
int
loopew
pop
scas
mov
and
shll
or
lods
movsb
ds
jmp
iret
cmp
loope
inc
nop
popf
jb
jnp
lcall
mov
pop
push
in
add
enter
pand
jmp
fcmovnbe
or
out
cmp
pop
fdivrs
push
repz
pop
shll
rorb
cmp
cmp
cmp
ud2
test
push
pop
inc
xor
mov
pop
popf
repz
in
sbb
into
aaa
sub
fdivl
js
cmpsl
mov
call
loop
cmc
in
daa
fdivs
push
cmc
out
cmp
xor
addl
mov
cltd
out
std
push
push
mov
loop
cld
iret
lock
sbb
dec
add
push
push
pop
sbb
inc
push
jns
es
xchg
pusha
jp
mov
jle
push
mov
and
inc
cltd
sahf
rcr
shlb
jns
fwait
stos
ret
out
in
mov
andl
push
jo
lods
inc
xchg
test
sbb
xchg
out
shll
fcmovb
dec
xorb
and
push
inc
lea
inc
add
imul
es
jns
mov
mov
nop
push
mov
dec
bound
mov
js
xlat
shlb
loop
mov
int3
cmpl
cwtl
sub
xor
dec
outsl
jo
jle
div
les
push
in
loop
shrb
jns
ss
or
xchg
je
cmpsb
insl
or
xchg
idivl
mov
rorl
sub
sub
xor
xor
mov
xor
jnp
mov
sbb
stos
mov
push
repnz
sub
cmp
xchg
inc
mov
fadds
fstps
pushf
xor
push
push
mov
pop
push
aaa
sbb
or
cltd
jmp
stos
push
push
pop
outsb
xorl
or
and
aam
dec
sbb
out
dec
fidivs
mov
loope
fidivs
sub
sub
mov
inc
in
lahf
and
cmp
sbb
clc
out
int3
push
push
jno
fdivl
mov
out
pusha
push
fldenv
pop
pop
push
cmc
cmc
xchg
iret
or
pop
das
sti
jae
adc
into
pop
pop
ja
mov
jmp
repnz
test
scas
pop
dec
inc
sub
and
push
ret
stos
movsl
mov
movsl
jne
scas
sub
repz
mov
dec
pushf
outsl
jno
sub
xor
subl
popa
jl
and
dec
cld
inc
divl
stos
in
mov
xchg
cmp
in
test
mov
xor
stos
fcmovbe
jne
into
loope,pn
cmp
dec
ljmp
jo
lret
daa
add
flds
jns
add
lock
or
movsl
dec
and
enter
cmp
aad
sbb
cmpsb
jl
and
xchg
push
xchg
xlat
and
dec
cmp
in
push
lock
push
cmpsb
movsb
subl
xor
sub
aam
or
cmpsb
insl
push
mov
sub
mov
cwtl
sub
rorb
xor
not
insl
shufps
fisttps
push
shll
sbbl
mov
xchg
mov
cld
pop
incl
dec
jne
out
jg
cmc
arpl
stos
jle
jae
out
mov
fldt
ja
pop
in
aas
inc
out
dec
jl
mov
leave
cmpsb
jge
push
mov
call
ret
insb
popa
rcrl
xchg
inc
sbb
enter
sahf
icebp
aas
pop
mov
sbb
push
mov
mov
adc
fnstcw
jecxz
sbb
jne
cmc
add
ss
jne
loopne
aad
jge
lret
mov
dec
data16
vpsrlw
les
test
test
add
mov
mov
movsb
fisttpll
mov
inc
ret
cmp
mov
inc
or
outsl
cltd
and
and
dec
test
sub
pop
sbb
sbb
ljmp
or
inc
cmp
push
dec
lcall
subl
or
jg
add
dec
add
nop
sbb
sub
and
test
adc
cmp
je
mov
outsb
dec
push
add
xor
rolb
fs
jl
inc
out
ljmp
ret
add
loope
inc
ret
push
push
je
jge
jge
add
xor
std
sbb
mov
into
push
and
mov
enter
dec
add
sub
cmp
pushf
cmp
jno
push
hlt
pop
mov
mov
adc
lret
push
push
mov
das
aam
mov
xor
rorl
test
sti
arpl
fst
inc
in
dec
pop
sbb
mov
aad
bound
add
ljmp
add
fistpll
aad
mov
and
loope
aam
push
out
sub
push
rep
leave
shll
dec
loope
sub
mov
scas
dec
sub
inc
cmc
pop
inc
shlb
clc
sbb
lock
mov
dec
pop
pop
add
fistpl
xchg
popa
add
je
iret
cli
test
dec
push
iret
pop
adc
xor
scas
adc
mov
mov
lret
jge
jno
xor
xchg
lock
leave
adc
pop
cltd
call
out
les
push
imul
cltd
adcb
fstps
and
stos
push
in
xor
adc
sbb
jbe,pt
or
push
arpl
movsl
mov
pop
outsb
cmp
pop
mov
adc
and
jp
outsb
jl
cmpsb
mov
add
and
xlat
into
jne
negl
gs
xchg
mov
mov
stc
mov
adc
repnz
imul
cmp
das
inc
ret
hlt
cmp
and
sub
test
push
push
pop
mov
xchg
jmp
and
fwait
out
sub
push
in
mull
mov
lahf
adc
shll
mov
pop
pop
repz
scas
sub
loopne
push
jae
gs
ror
std
shr
or
mov
outsl
mov
xor
mov
adc
push
adc
add
sarb
enter
sbb
jns
adc
fwait
add
cmpsb
or
jp
icebp
and
jge
push
push
imul
push
cmp
in
iret
or
gs
push
sbb
push
or
mov
int
rorb
xchg
fwait
adc
fucomip
lods
xor
jns
and
and
shlb
dec
push
xchg
pop
mov
out
and
stc
lahf
imul
adcl
jg
and
fisttpl
sub
je
pop
cwtl
push
xchg
mov
in
jmp
mov
arpl
xchg
stos
hlt
add
push
test
dec
and
sti
inc
shll
jle
dec
aam
adc
mov
in
xchg
push
sub
push
cmp
movsb
cs
mov
lock
dec
call
xchg
xor
mov
scas
test
xchg
pushl
ffree
fists
jne
mov
push
dec
cmpl
pop
cmp
scas
lock
arpl
add
dec
adc
fsubrl
sti
xchg
push
or
xor
fcmovu
adc
cmp
sub
pop
adc
and
mov
out
or
mov
fistps
adc
push
sub
inc
int
sub
test
and
lret
cmp
mov
insb
mov
scas
sub
jecxz
gs
fucomip
and
jle
sti
inc
ljmp
jge
and
mov
fidivrl
jp
in
xchg
mov
test
mov
shl
and
adc
cmp
sbb
push
mov
jp
lret
cwtl
jo
insb
pushf
or
ret
fnstcw
nop
adc
push
sbb
push
mov
mov
mov
xchg
push
xor
pop
mov
adc
enter
dec
mov
sti
jg
mov
addr16
loope
out
jl
jp
jg
push
dec
adc
pop
nop
cmpsb
xchg
insb
inc
scas
out
sahf
mov
outsb
outsb
sbb
sbb
pushf
fsubr
mov
lds
jl
int3
sbb
xchg
xorl
pop
lea
mov
or
outsl
cli
ljmp
es
mov
mov
cmp
add
cmpsb
push
sub
inc
out
xlat
xchg
push
dec
jo
int
add
mov
jecxz
enter
dec
sub
pop
mov
sbb
lods
pop
rcr
cmp
outsl
rcrb
idivl
icebp
in
div
std
sbb
hlt
adc
xchg
cmp
pop
xchg
push
push
das
push
stos
cmpb
hlt
in
and
and
popl
cs
jle
sarl
fs
jmp
and
push
imul
adc
push
or
fcompl
xorl
fisttpll
jnp
inc
jo
jl
cmp
test
push
pop
sub
fmuls
push
mov
jg
pop
in
add
or
adc
dec
or
cmpsl
scas
xor
inc
pop
mov
cli
xor
push
in
sub
test
std
fwait
jo
pop
xchg
and
pop
xor
sar
mov
and
rolb
sbb
or
jnp
fcoml
jg
out
dec
jge
gs
sub
mov
jnp
xor
cltd
mov
xlat
inc
dec
cwtl
push
or
mov
mov
outsb
in
call
ret
stos
mov
std
xor
negb
imul
adc
jo
sub
mov
loop
sub
lcall
mov
push
pop
in
mov
mov
dec
pop
push
sti
mov
in
idivl
xchg
movsl
sarb
std
mov
pop
mov
into
insl
xchg
cmpsb
pop
cmpl
jge
pop
and
mov
adc
incl
arpl
xchg
lcall
fwait
es
cli
push
xchg
fwait
imul
les
ja
mov
pop
shll
add
xchg
dec
jne
int
shrb
imul
cmpsb
push
les
das
cmpsl
mov
push
shlb
push
push
outsb
mulb
ja
pop
sbb
ds
jmp
sub
mov
mov
movsl
pop
cmp
sbb
shl
mov
inc
pop
sbb
lahf
add
jl
mov
roll
jne
pushf
cmp
fmull
bt
shlb
ss
or
cs
sub
mov
cmpsb
xchg
mov
into
psrad
in
jp
pop
mov
fisubs
adc
aas
mov
pop
mov
loopne
sbb
lahf
pop
inc
fwait
sbb
dec
sti
jns
sahf
adc
cmp
jo
and
fcompl
js
jbe
dec
push
mov
stc
xor
add
inc
sahf
out
aaa
adc
inc
mov
mov
pushf
mov
sbb
add
lock
in
mov
repnz
enter
inc
mov
jbe
xchg
xchg
sbb
mov
repz
rclb
lods
mov
movsl
jb
stos
cmp
lret
sub
pop
adc
ja
in
jbe
outsl
and
dec
mov
xor
shrb
stos
mov
mov
sbb
mov
xchg
fisubrl
mov
and
xchg
ljmp
lds
inc
add
or
loopne
rcll
mov
daa
push
movsl
ljmp
aaa
fwait
pop
lods
sbb
mull
rol
pop
or
adc
jle,pn
mov
pop
cli
jg
movsb
sti
push
pusha
xor
and
or
insb
pop
push
mov
cltd
jns
jmp
mov
test
cmpl
aad
divb
push
popf
ret
loopne
fstpl
inc
pop
or
int3
push
imul
pop
push
mov
es
xchg
fisttpl
cld
enter
xor
stos
cmp
xor
fst
mov
push
add
lods
xchg
test
pop
imul
or
push
dec
loope
jg
cmpsb
jp
add
cmp
rcrl
inc
jno
jb
aad
in
call
jg
push
mov
and
nop
cmc
add
pop
mov
lret
aam
sub
in
sahf
xchg
movb
inc
inc
sub
fisubs
stos
push
lods
sbb
fsub
inc
mov
lock
das
sbb
aas
inc
mov
stc
sahf
cmc
jns
lods
or
loopne
pushf
cmp
mov
je
dec
iret
mov
fwait
xchg
mov
in
das
sbb
inc
push
ret
mov
outsb
arpl
lods
call
les
cmpsl
les
insl
insl
dec
iret
mov
jl
or
cmp
xchg
xchg
and
mov
cmp
call
loope
mov
ja
mov
push
sbb
cli
pushf
sti
dec
ror
or
adc
mov
mov
pop
jmp
dec
xor
xorl
sub
adc
mov
sub
clc
sbb
adc
jecxz
xchg
jb
add
push
in
xchg
push
inc
sub
dec
pop
inc
push
cmove
outsb
push
pop
stos
fwait
cmp
shlb
push
cmpsl
cld
in
addl
lock
push
aam
in
xorb
jp
mov
mov
int
jo
int3
push
fiadds
add
and
imul
leave
cmp
stos
in
data16
mov
fldt
stos
int3
dec
inc
fwait
enter
adc
test
cmp
std
popf
nop
imul
sysret
dec
mul
insb
or
or
rcl
sbb
icebp
sbb
lock
int
stc
xchg
or
les
mov
aas
mov
ljmp
lds
mov
push
or
out
imul
mov
sbb
cmpb
mov
lea
call
mov
dec
mov
mov
push
cli
mov
pop
mov
ljmp
cmp
icebp
jmp
jmp
jge
inc
cmpsb
mov
jno
fadds
in
call
or
out
xor
ljmp
sbb
xchg
mov
inc
divl
push
add
adcl
imul
insb
mov
mov
or
jl
push
in
std
sbb
cmc
add
fstpl
adc
pop
aad
test
mov
xchg
shlb
fwait
mov
insl
push
test
pop
addb
lds
push
sbb
cld
adc
rcl
or
sub
mov
in
dec
out
xchg
mov
pop
mov
icebp
ljmp
xor
movsl
add
jl
fldl
aaa
pop
fisubs
shlb
or
mov
cli
lret
call
ja
sbb
pop
cmp
push
sbb
add
jmp
push
arpl
jmp
pushl
ljmp
call
mov
das
pop
and
or
and
fnsave
xchg
mov
and
ljmp
mov
loope
cwtl
xchg
jae
push
pop
xor
mov
shl
aas
clc
pop
push
mov
xchg
or
xchg
add
jmp
pop
sti
popa
jo
je
daa
iret
xchg
mov
and
outsl
xor
dec
mov
outsl
movsl
sub
xchg
inc
aas
sbb
cmp
int
mov
cs
pop
movsl
dec
dec
insb
daa
cmc
aas
xor
stc
mov
xor
push
cltd
and
jbe
pop
mov
xchg
clc
push
sbb
mov
into
xchg
mov
call
inc
inc
test
mov
rcl
out
jl
dec
lea
xor
ret
int3
pop
cmp
jae
cmpl
push
addr16
mov
cmp
add
gs
adc
push
test
cmp
inc
mov
std
jae
js
jle
push
out
in
xor
push
and
fistps
insb
bound
mov
sti
leave
mov
leave
repz
adc
fsts
mov
or
js
xchg
push
sbb
or
adc
test
hlt
mov
sar
cmpb
push
aam
push
xchg
jne
or
push
mov
enter
test
faddl
dec
jge
sub
pop
cltd
sti
loopne
mov
jle
cmp
cmp
xchg
psllq
lock
pop
add
lock
int3
pop
je
loopne
sbb
mov
adc
popa
xchg
push
pop
cmp
jp
xchg
mov
jl
sub
pop
shl
push
std
jae
pop
push
inc
push
test
mov
arpl
push
cmp
insl
fisubrl
call
in
fptan
notl
or
jmp
push
stc
mov
fwait
daa
jbe
cmovle
xchg
jns
jge
mov
out
inc
mov
shrb
mov
sar
mov
fnstsw
jnp
jecxz
aas
and
je
push
aas
ljmp
cmpb
outsl
int3
mov
xlat
dec
adc
push
and
loopne
outsl
cmpsl
lret
fadd
add
adc
lcall
outsl
jnp
out
xor
std
repz
jno
xchg
inc
jle
aad
push
pop
mov
mov
push
mov
jp
insb
add
rcll
xor
push
xchg
js
js
dec
xor
jno
dec
xchg
dec
test
shrl
test
scas
popf
addr16
fimuls
cmp
loope
inc
push
pop
jp
sub
push
repz
pop
jne
cmp
roll
xor
sbb
stos
pmullw
jecxz
jge
sub
add
cld
xchg
mov
mov
ret
inc
aaa
xlat
scas
lcall
fwait
mov
es
lock
jmp
sub
push
jle
fmuls
xlat
ficoms
mov
outsb
dec
push
mov
pop
or
push
mov
movsb
pusha
clc
mov
repnz
and
call
enter
loop
es
or
inc
in
lcall
sub
jne
sub
xchg
adc
aaa
push
xor
ljmp
std
inc
adc
rcrb
dec
mov
inc
es
xchg
xor
rorb
fs
jecxz
cmp
mov
and
mov
mov
dec
das
xlat
xchg
xchg
sbb
insl
nop
pop
in
jb
fs
push
sbb
test
jle
pop
mov
add
shrb
les
pop
js
ds
stos
popf
fs
push
dec
xlat
cmpl
pop
mov
jb
psubw
xor
lcall
dec
data16
sbbb
add
cwtl
jl
sbb
add
lahf
pandn
adc
xchg
sbb
jnp
cmp
insl
fcompl
mov
test
adc
push
dec
xor
inc
mov
mov
cs
mov
shlb
push
jg
test
aad
in
addr16
cwtl
je
jmp
popl
call
jo
pop
xchg
je
jno
mull
aaa
dec
pop
and
and
ja
aas
xor
xchg
xchg
mov
mov
data16
adcb
xorl
fdivl
inc
inc
sub
mov
int
test
jo
loopne
mov
icebp
dec
test
pop
icebp
repnz
mov
mov
sub
xor
sub
aam
mov
fs
push
adc
xchg
ds
mov
orb
cmpsb
xchg
mov
popa
and
dec
aaa
repz
std
sahf
and
cmp
loop
push
jle
mov
popa
mov
call
cs
dec
mov
mov
scas
outsl
lret
fs
dec
sbb
inc
xor
fs
ja
sbb
sahf
fsubs
inc
pusha
out
xchg
out
test
cs
mov
iret
cmpsl
ficomps
cmp
or
or
in
test
arpl
lock
std
pop
scas
fwait
sub
rcr
in
hlt
repnz
test
mov
or
jg
mov
jno
inc
aad
and
push
movsl
dec
sub
shrb
pushf
push
mov
jle
dec
push
jg
sbb
inc
adc
add
sub
cs
dec
xchg
adc
jge
add
pushf
pop
or
sbb
cld
shl
insl
aam
andb
push
push
adc
in
mov
and
push
jecxz
push
adc
nop
mov
dec
subl
push
rcll
sub
and
sbbl
data16
push
rolb
dec
inc
push
loop
std
cmp
nop
mov
jae
ret
push
inc
xchg
popa
dec
fs
outsb
lea
and
cld
shlb
or
roll
sub
push
loopne
pop
cli
jp
and
aad
cmpsb
sbb
lcall
rcrb
sbb
shlb
stos
and
pusha
fisubrl
mov
add
pop
dec
not
push
mov
arpl
adc
inc
add
and
jne
xchg
inc
ret
decl
add
mov
imul
sbb
xchg
aam
mov
js
pop
shll
mov
sub
and
dec
mov
add
pop
daa
dec
push
pop
xor
arpl
add
jle
pop
push
cmp
mov
xchg
adc
sbb
cwtl
test
repz
sahf
pop
outsb
adc
in
ja
sbb
lahf
int
lock
sbb
xlat
lret
lcall
rcr
sti
out
adc
in
or
popf
push
scas
jo
movsb
mov
pusha
mov
lea
xchg
mov
hlt
xchg
mov
or
push
xor
mov
mov
cwtl
pop
pop
lods
int
add
pop
mov
pop
fmul
test
rcrb
and
fcmovbe
xchg
leave
mov
arpl
and
jb
push
sahf
fistpl
jae
or
xor
lcall
and
pusha
dec
leave
das
out
and
xor
mov
mov
mov
lock
jp
scas
push
pop
int3
frstor
inc
mov
mov
leave
hlt
icebp
outsl
cmp
add
inc
gs
inc
pop
cmp
xor
mov
add
sbb
mov
ret
cmp
insl
inc
cmp
mov
mov
cwtl
mov
in
lods
aad
sbb
rclb
sub
test
add
mov
dec
jae
jg
push
jae
or
push
pop
imul
mov
imul
fwait
xlat
leave
pop
push
push
test
cmp
xchg
sub
and
test
pop
mov
push
test
jo
movsl
pusha
outsl
xchg
mov
pusha
mov
inc
lock
mov
pop
lret
popf
mov
insl
bnd
mov
out
add
pop
jecxz
sbb
xchg
mov
movsl
divb
inc
xchg
pop
jne
and
xchg
cld
cmp
in
sbb
test
or
dec
fs
stc
int
push
pop
out
xchg
scas
adc
cs
testl
out
inc
sar
add
les
mov
scas
or
jge
pop
cmp
push
mov
mov
stos
dec
xchg
cmp
xor
in
push
mov
mov
cs
das
std
push
mov
test
sbb
cs
mov
sub
in
inc
lds
pushl
push
sbb
shrl
cmp
jge
push
nop
mov
mulb
nop
sub
aaa
xchg
mov
cwtl
das
cmc
pop
ret
and
ljmp
mov
sbb
subl
mov
cltd
xchg
cwtl
or
or
lret
jg
jl
fcoml
test
cmc
mov
sub
fcmovu
sbb
mov
pop
push
xor
dec
faddp
pop
out
push
lret
mov
repz
adc
push
cmp
ret
shll
push
sub
aaa
xchg
mov
cmp
aaa
and
cmp
stos
pop
mov
pop
in
imul
in
inc
xchg
xor
push
fldt
inc
sahf
sbb
and
loop
out
mov
lret
in
xchg
out
adcl
mov
xlat
and
mov
ja
dec
sbb
popa
in
lret
inc
lods
mov
dec
xchg
and
pop
xchg
xlat
das
int3
call
mov
adcb
sub
xor
lea
out
ret
push
in
in
add
adc
mov
mov
roll
mov
xor
movsb
jecxz
mov
test
mov
mov
lods
inc
dec
cmp
movsl
dec
inc
ret
roll
call
mov
roll
cmpb
xor
pop
out
sbb
xchg
out
into
mov
out
and
inc
cmp
dec
xchg
stos
sub
in
je
or
or
adc
outsl
sahf
or
xor
div
sbb
out
shlb
lret
int
pop
mov
and
lahf
dec
adc
leave
cmpsl
push
lock
aas
repz
addr16
rclb
push
subl
mov
nop
dec
insb
call
add
shlb
fwait
pop
loop
out
fnstenv
xchg
insb
push
int3
add
sub
lods
add
jp
push
imul
mov
aas
mov
cs
xor
add
pop
iret
in
jecxz
jnp
or
es
jp
mov
sbb
int
xchg
mov
and
sub
je
push
pop
loop
mov
nop
imull
jge
cs
jo
setns
lods
jo
jae
je
addr16
xchg
pop
cli
aad
idivl
ljmp
nop
add
cli
mov
scas
into
mov
mov
push
nop
cmp
push
push
push
lock
lock
mov
or
adc
lods
jle
lcall
jbe
in
flds
jp
jae
pop
ljmp
pop
arpl
inc
inc
in
mov
mov
add
popf
fidivl
hlt
hlt
stos
hlt
aad
jns
lods
jno
and
adc
xchg
ficoms
rorb
cmp
sub
lret
sahf
jecxz
leave
loopne
jge
mov
push
mov
cmpsb
mov
lods
iret
bound
out
xor
dec
cmp
and
lret
mov
fimuls
sub
xchg
lret
sbbl
outsb
imul
gs
and
xorl
hlt
cmc
jle
mulb
lods
inc
imul
push
in
adc
and
std
ror
test
inc
mov
lock
pop
out
lcall
add
sub
rol
mov
and
pop
stc
dec
notb
fidivl
jge
mov
adc
add
mov
mov
jno
and
out
mov
sub
sbb
xchg
out
push
test
mov
mov
out
fucomp
pusha
sar
cltd
mov
sahf
dec
clc
push
ret
pusha
cmc
orb
jl
cltd
inc
jae
lret
dec
mov
leave
sub
sahf
sbb
inc
jae
stos
test
inc
jle
xchg
xchg
mov
in
mov
xchg
push
xlat
inc
dec
mov
pop
dec
nop
mov
shl
sbb
in
cltd
xor
cmp
bnd
pop
push
mov
daa
mov
int
adc
bound
insl
cmp
shrl
cmc
cli
call
ss
das
sub
xor
dec
call
shll
mov
movsb
pop
fwait
pop
scas
jne
cs
or
pop
and
sbb
cmp
iret
fwait
xor
sub
daa
aad
call
mov
pop
ss
popf
mov
or
insl
inc
stos
in
cwtl
or
aas
andl
int3
imul
xchg
imul
cmp
mov
lret
fldenv
fstpt
stos
dec
inc
shl
lcall
xor
js
repnz
ucomiss
sub
repz
pop
shrl
aam
mov
add
fistpl
pop
push
arpl
aad
mov
and
scas
out
popa
dec
inc
mov
xchg
aaa
pushf
dec
push
rol
stc
orb
pop
mov
jbe
xchg
add
xchg
xor
dec
jne
aad
fstpt
fiadds
addl
add
mov
inc
inc
adcl
test
jno
ficoml
rcrb
push
and
inc
inc
jmp
rorl
jb
push
inc
call
data16
cwtl
dec
mov
js
ret
cmp
test
xor
ficomps
inc
mov
mov
jb
ja
jb
sbb
mov
das
mov
lea
pusha
into
arpl
pusha
imul
xchg
or
jns
out
push
xchg
loopne
insb
fimull
jecxz
mov
xlat
out
dec
mov
popa
movsl
or
pop
inc
jmp
aas
hlt
mov
ds
xor
xchg
clc
movsl
inc
cltd
data16
mov
fidivl
mov
cmp
pop
cwtl
fwait
dec
loopne
dec
movsb
push
lods
aam
test
mov
jmp
test
add
cmc
mov
enter
stos
cmp
cmpsl
sbb
xor
xor
cli
cmp
or
movsb
inc
movsb
dec
mov
jnp
int
movsb
ss
arpl
mov
sbb
xchg
lahf
fwait
adc
sbb
mov
std
ret
sbbl
pop
cmp
sbb
imul
movsl
jle
arpl
xlat
inc
fnsave
andl
mov
xchg
pop
adc
push
dec
movsl
mov
push
sub
pop
xlat
mov
jecxz
sbb
fld1
xor
and
fisttpll
in
notb
push
cmp
pop
sti
imul
push
add
in
jmp
popf
shrl
lods
jbe
fwait
je
xchg
in
or
mov
push
inc
dec
pop
test
or
dec
push
rcrl
in
xchg
dec
jl
adc
dec
outsl
andl
and
mov
xor
xchg
jnp
jo
dec
mov
lea
jmp
and
push
clc
or
pop
lret
lds
fstpl
aas
mov
lret
sbb
add
ds
mov
cli
mov
push
push
xchg
lret
cmp
sbb
jne
insl
pop
in
daa
adc
stc
xor
jno
jle
iret
in
ret
loope
ret
lds
in
mov
rcll
cmp
cwtl
sub
cmp
gs
cmp
cmp
mov
xchg
jle
sarl
cmp
aam
push
dec
push
cmp
xor
push
or
mov
loopne
xchg
bound
pop
sahf
repz
imul
mov
mov
sub
jg
aad
bound
sub
fists
dec
bound
cmc
jl
popf
repnz
cmpsl
sub
dec
in
scas
add
fnstcw
add
sub
push
mov
cmp
repz
add
push
mov
inc
out
jns
pop
xor
xor
ss
daa
xchg
out
in
clc
mov
sub
xor
dec
jbe
mov
jno
add
adc
popa
or
xor
xchg
or
vmovaps
shlb
std
dec
or
or
adc
ljmp
xchg
lret
sub
imul
jg
mov
lcall
fbstp
push
cmpb
stos
lds
into
jnp
cli
in
pop
movsl
jnp
jge
call
or
popa
cwtl
cmp
push
cmpsl
out
pop
fcmovnu
mov
and
jg
pop
mov
push
push
sahf
ja
cmp
lods
jg
dec
inc
dec
ja
sub
fidivl
inc
jmp
imul
xor
shl
xchg
out
fisttpll
inc
pop
jb
mov
bound
push
pop
out
icebp
aaa
jne
in
add
jle
loop
add
into
test
rcl
pushf
nop
jmp
insl
icebp
add
push
stc
fs
jle
add
push
adc
and
mov
jle
in
adc
push
hlt
mov
jb,pn
scas
inc
into
fs
sti
lret
and
loope
sar
jo,pn
int
cmp
push
pop
inc
stc
push
jb
mov
inc
jae
mov
jg
stc
orb
cmc
xor
fldl
or
cli
inc
mov
or
jmp
xor
inc
test
sahf
push
and
pop
add
call
out
adc
jo
cmp
lret
call
mov
push
xlat
add
push
jo
test
xor
or
and
push
push
and
jnp
js
lds
sti
sarb
cld
sahf
imul
mov
std
loopne
or
mov
jge
xor
jnp
outsb
enter
lds
add
mov
pop
mov
lods
mov
jg
mov
cmp
or
or
ja
shl
cmp
dec
mov
jge
fimull
loop
ret
or
mov
jg
cltd
jp
and
cmpb
xchg
xor
ja
test
repnz
push
jne
in
mov
push
inc
pop
in
mov
lahf
in
add
dec
jmp
or
pop
pop
lret
mov
or
pop
fnstsw
push
mov
ret
pop
leave
or
ss
imul
mov
gs
popf
cmc
and
test
push
mov
mov
jge
pop
nop
push
xchg
loopne
lret
adc
ret
dec
xlat
es
xor
sbb
pop
mov
int3
pop
pop
mov
sahf
ret
aaa
ljmp
xor
aaa
sbb
popa
mov
sbb
cmc
rcll
fadds
repz
aas
add
xchg
dec
adc
fdivrs
sahf
fcomip
sbb
lret
dec
je
fstps
cltd
mov
movsl
mov
jae
outsb
inc
rolb
iret
loop
sbb
loope
push
fistl
jb
loope
xchg
iret
cmpsl
sub
push
jnp
cmc
dec
ficoml
test
push
cmp
inc
xchg
fistpl
fstpl
ljmp
mov
mov
jecxz
pushf
push
sbb
mov
or
shlb
int3
loopne
or
lret
ja
mov
fwait
dec
mov
xor
fstps
cmpsb
out
inc
scas
aad
jae
pop
jp
xor
imul
sbb
in
ja
cmp
lods
mov
xor
mul
jecxz
or
dec
sub
aas
mov
pusha
sub
loope
push
mov
fprem1
dec
mov
notl
je
mov
push
enter
mov
xor
bound
xchg
push
adc
fucom
pop
lret
scas
mov
cmp
push
imul
add
pusha
add
movaps
pop
inc
loope
dec
sbb
adc
data16
mov
lahf
sub
jl
shlb
lea
mov
add
mov
sbb
sub
jmp
leave
inc
gs
jns
jecxz
sub
cmp
sarl
xor
rolb
lods
lahf
cli
xchg
fisttps
pop
and
xchg
mov
jecxz
sub
cmpsl
mulb
cwtl
enter
and
cmc
push
ret
mov
xor
lock
aam
inc
loopne
movsb
cs
push
scas
mov
add
add
aam
xorl
int
add
inc
outsl
es
inc
loopne
aam
sub
test
shl
jns
jecxz
add
sbb
pop
inc
test
pop
adc
pop
lea
pushf
sbb
addr16
mov
mull
repz
sbb
in
fs
mov
addr16
push
dec
cmp
cmp
jmp
push
cmp
pop
out
pop
mov
int3
adc
insb
cwtl
or
push
outsb
xchg
notl
cmp
mov
aas
add
or
mov
dec
insb
and
cld
insb
xor
les
cmp
inc
fdivrl
bound
or
fadds
xorb
call
or
push
int
ret
mov
sbb
add
add
int3
mov
xor
jmp
mov
push
in
loopne
inc
mov
mov
mov
imul
xchg
shl
mov
xorb
cmc
ljmp
orl
lea
sbb
cmp
scas
or
mov
sbb
or
or
in
scas
stos
xor
pop
nop
or
cld
push
out
xor
aad
imul
les
jbe
in
sub
outsl
out
push
iret
test
dec
push
mov
push
cmp
xor
ret
mov
scas
inc
sub
cmp
cmp
xchg
cmp
sub
mov
inc
mov
aad
adc
rcrl
and
movsl
out
test
and
and
mov
test
xlat
jl
lahf
add
mov
xor
add
dec
mov
les
mov
mov
fnstenv
test
sbb
pop
mov
adc
jmp
xlat
adc
scas
sbb
pop
adc
int3
stos
ljmp
fsubl
icebp
mov
push
mov
pop
adc
loope
push
cmc
mov
mov
scas
mov
inc
push
push
movsl
cmp
imul
inc
jne
cmp
ljmp
stc
cwtl
das
je
and
dec
sub
push
dec
mov
jecxz
xor
out
mov
inc
imul
push
sub
dec
inc
test
fwait
jecxz
jle
mov
xlat
loop
cmp
sub
mov
jb
fnstcw
mov
push
popa
arpl
dec
fisubrs
xor
xchg
insl
lahf
mov
mov
movsb
mov
loope
inc
mov
imul
xor
cs
adc
or
mov
imul
cmp
sub
xor
test
cli
dec
test
flds
push
lock
inc
out
cmp
pop
and
pop
test
and
inc
data16
in
je
sbb
fldt
mov
cltd
sbb
cmp
in
or
adcb
fwait
pop
xchg
sahf
xchg
xchg
pop
jb
inc
or
ret
lahf
pop
xchg
dec
inc
mov
sub
sbb
push
jns
stc
icebp
sbb
dec
mov
fwait
lahf
xchg
outsl
jno
mov
xor
mov
rcr
sub
je
repz
loope
jge
mov
ja
fldl2t
jmp
dec
or
lret
dec
fdivrs
xor
mov
jmp
or
cli
and
out
cld
jp
sbb
aas
mov
or
push
sbb
sub
je
xor
pop
mov
imul
insb
cmp
aam
adc
shlb
dec
imul
and
xchg
pusha
mov
mov
aaa
das
xorl
add
sub
jbe
xor
inc
mov
je
and
scas
push
adc
adc
push
cmpsl
aaa
pop
push
in
jo
iret
add
mov
imul
inc
jmp
jb
mov
mov
call
xor
clc
inc
leave
xchg
fadds
pop
js
sub
lods
xchg
pop
inc
dec
cld
pop
addl
mov
das
clc
jb
mov
jp
xor
pop
sub
sub
push
and
mov
ds
out
pop
stos
jo
cmpsl
outsw
jnp
std
aad
push
xlat
enter
in
out
inc
in
test
mov
test
cmp
loope
leave
rcll
mov
sbb
mov
jbe
xchg
push
jl
push
in
fucomip
ja
mov
pop
adc
and
add
lret
adc
jecxz
adc
lds
test
nop
out
scas
stc
or
push
test
pushf
fidivs
test
pop
daa
bound
and
clc
shlb
xchg
shrb
xor
jp
mov
enter
add
fstpl
inc
loope
cltd
nop
lcall
stos
arpl
mov
cmc
cmp
ljmp
loop
outsl
sahf
sub
mov
mov
hlt
cli
imul
int
fistps
sub
ret
es
ds
test
loope
mov
adc
pop
inc
xor
or
mov
dec
mov
aam
outsb
or
pop
je
scas
fs
mov
sbb
loopne
movsl
push
mov
je
sbb
add
orl
shr
pop
add
cli
mov
adc
jns
push
xor
icebp
sub
in
shl
or
lcall
lret
add
cmp
out
xor
and
inc
add
outsb
test
add
adc
je
jbe
test
inc
pop
cli
int3
sub
xchg
leave
add
lahf
test
sbb
movsb
lahf
je
inc
dec
or
push
sbb
lcall
mov
mov
dec
mov
dec
and
popf
dec
lock
adc
enter
clc
repz
dec
or
xchg
pusha
sti
push
aas
mov
cmpsl
cmpsl
es
mov
dec
jne
std
arpl
jo
filds
addb
inc
cli
aam
jmp
fmulp
lret
lea
scas
add
out
xchg
mov
bound
add
mov
jle
dec
pop
push
mov
mov
mov
stc
add
ret
fs
fsubrl
or
mov
into
mov
loope
xor
mov
insb
mov
lret
out
in
push
loop
jno
shlb
xchg
pop
adc
xor
ja
lcall
jb
jns
add
dec
movsl
sar
jecxz
mov
sbb
in
aam
fs
cld
sbb
lahf
loope
cmp
cs
adc
popa
out
imul
adc
or
int
idivl
dec
scas
enter
iret
and
incb
pop
lods
repz
push
lret
adc
neg
hlt
imul
popf
sbb
dec
mov
daa
fs
push
in
push
mov
dec
fwait
inc
inc
out
cwtl
mov
in
enter
cwtl
jmp
mov
mov
push
lret
or
stos
and
cmc
cld
jne
dec
dec
add
jg
int
iret
mov
sub
iret
test
jl
cmpsb
mov
xor
dec
test
leave
gs
or
xchg
imul
cmpsl
shlb
push
je
pop
popa
push
call
in
inc
mov
pop
xchg
pop
ljmp
scas
sti
jmp
jecxz
mov
in
fdivrs
fs
push
sti
enter
inc
add
xchg
inc
sbb
std
pop
ss
or
gs
imull
insb
lods
scas
and
add
jo
inc
mov
incl
lret
fstpt
inc
in
mov
mov
out
adc
dec
inc
nop
xor
ret
adc
ret
loop
stos
mov
and
jecxz
inc
cmp
ficomps
inc
jp
inc
dec
cmp
cmp
movsb
push
push
insb
cmp
cmp
rcll
inc
int3
and
sti
xchg
arpl
jb
rcr
jbe
das
push
dec
or
pop
cld
and
lret
test
insl
fiaddl
push
test
mov
sub
cmpsl
cmp
test
subl
mov
dec
fstps
pusha
fsubrl
fs
out
xchg
aam
cmpb
pusha
addl
lea
pop
pop
ds
jge
inc
mov
arpl
iret
mov
in
sub
enter
push
shll
xchg
mov
push
pop
or
add
push
and
aam
int
mov
dec
jmp
popf
movsl
add
shll
in
jnp
jnp
test
xchg
or
fldt
imul
inc
and
stc
in
mov
into
fldl2e
cmp
cld
stc
stos
pop
jns
push
stc
cmp
push
loopne
mov
shlb
stc
or
lahf
pop
pop
lea
or
push
dec
bound
jl
stc
ljmp
cmpsl
inc
je
xlat
shll
sbb
rcrl
rorl
imul
rcrb
fidivrl
movsb
scas
sbb
or
ljmp
sbb
fwait
sbb
pop
jae
lods
or
inc
out
loop
sarl
xorb
movsb
sbb
xchg
jo
inc
mov
push
into
dec
add
daa
mov
sbb
mov
add
out
jmp
sub
int3
fsubrl
jb
inc
movsb
and
pop
ljmp
hlt
out
push
jg
cwtl
xchg
xor
push
and
cmp
cmc
lods
pop
ret
xchg
xorb
inc
mov
sub
pop
push
add
and
cmpsb
adc
out
call
shrb
add
bnd
fs
inc
fistpl
xchg
fs
test
jne
roll
lock
and
inc
andb
xchg
jnp
dec
jg
hlt
xlat
fdivp
jmp
sbb
push
adc
vmaxss
add
mov
movsb
cltd
mov
insl
popa
and
xor
mov
add
aas
inc
xlat
mov
add
aad
enter
shll
xor
imul
movsb
call
dec
lods
sub
mov
sbb
xor
enter
jnp
xchg
adc
jnp
cmpsb
mov
rolb
pushl
sub
mul
les
in
and
and
ljmp
xor
les
push
xor
pop
jnp
xor
rcrb
inc
enter
fstl
into
add
shlb
fsubrp
repnz
xor
fsubr
sbb
sub
mov
cmp
popf
cltd
mov
cmp
and
cmp
jecxz
stos
leave
je
or
jle
dec
int
dec
enter
movsl
inc
es
cmp
ljmp
arpl
sahf
xorl
js
in
mov
mov
test
leave
mov
and
fucomip
xorb
xor
add
fisttps
pop
pusha
jmp
sbb
mov
inc
push
adcb
out
mov
clc
jns
sub
fcmovnbe
adc
sahf
call
call
inc
mov
jae
ja
xor
lds
in
push
sub
sbb
cs
push
mov
mov
or
stc
and
jae
mov
leave
or
inc
icebp
xlat
push
ljmp
mov
xchg
roll
gs
pop
and
mov
pop
push
hlt
lcall
mov
xor
sub
aad
xor
xlat
inc
es
jmp
lods
adc
xchg
les
mov
int3
loop
leave
sahf
lahf
loop
mov
xor
mov
push
iret
mov
and
push
mov
xor
sub
ficoml
jle
push
lret
outsl
mov
dec
sub
das
jb
lret
sbb
cmpsb
cmpsl
pop
std
outsl
pop
sbb
mov
out
jl
lds
inc
cmovae
int
js
mov
push
push
sbb
cmp
and
fmull
xor
cs
pop
test
mov
es
cs
test
pop
xchg
xor
test
add
inc
jp
subl
mov
je
sbb
mov
push
stc
pop
lcall
jp
push
jg
inc
test
sub
ret
std
pop
xchg
push
sub
inc
in
add
cmpb
insl
je
dec
out
mov
and
pop
inc
xchg
int
test
popf
dec
pop
pop
into
sub
add
clc
iret
or
rcl
mov
mov
stos
int3
cmp
int
rorb
push
pop
mov
cmp
test
rcrb
push
ficoml
test
adc
outsb
mov
imul
cmpsl
andl
mov
shll
jb
xor
popa
std
rclb
jp
jle
andb
jmp
ret
mov
sbb
in
fsubs
sti
and
adc
cwtl
or
add
or
rcll
int3
loopne
dec
into
jmp
dec
outsb
repnz
popa
cmp
test
or
xchg
cmp
pop
jge,pt
pop
jmp
roll
jl
je
fistps
jl
xchg
or
sub
push
push
or
mov
out
push
je
jae
imul
shll
cwtl
mov
pop
mov
fdivrs
call
sub
xchg
popf
shll
push
lock
jmp
cmp
dec
dec
xor
adc
outsl
adc
or
mov
andb
mov
inc
cmp
clc
or
jne
popa
je
xchg
xchg
fldpi
add
sbb
iret
inc
lret
inc
jns
hlt
in
cmp
xchg
stos
out
shlb
fs
mov
push
cmp
sub
sub
clc
adc
xor
outsb
and
pop
dec
inc
sub
cmp
mov
gs
outsl
xor
mov
jno
rcpps
jae
inc
cmp
fucomp
add
ss
jecxz
mov
push
sbb
and
div
iret
loopne
stc
xchg
aaa
sbb
cwtl
push
stc
imul
mov
loop
fcomps
or
movl
inc
in
je
aad
fiadds
subb
cmc
jecxz
in
inc
es
out
mov
adc
or
push
dec
cwtl
movsb
mov
jne
add
xchg
and
call
add
fiadds
adc
xchg
repnz
mov
in
subl
leave
add
push
cmp
xchg
push
add
addr16
push
imul
lea
subl
clc
stos
shr
xchg
mov
lahf
aad
fsub
loopne
repnz
repz
push
outsl
mov
lods
mov
xchg
call
mov
adc
push
cwtl
shlb
pop
sub
pusha
inc
rolb
mov
or
cs
sbb
or
andl
mov
daa
adc
pop
dec
sub
icebp
movsb
out
cmp
aad
inc
add
inc
lock
sbb
mov
lea
hlt
ds
add
jo
cltd
popf
mov
mov
inc
test
gs
sbb
frstor
icebp
sub
sbb
sti
cmp
mov
int
sbb
rclb
inc
adc
test
sub
push
mov
mov
enter
xor
xor
data16
add
out
ficoml
incb
sarb
popa
cs
loopne
mov
sub
add
dec
mov
lods
pop
shll
push
adc
loopne
cld
xchg
iret
movsl
je
lret
sbb
jae
repz
or
out
shrl
shll
outsl
inc
in
add
cmpsl
in
ret
into
cmp
je
mov
mov
loop
jo
or
mov
cmp
dec
push
cld
aaa
xchg
inc
daa
outsl
mov
jae
mov
pop
push
mov
fidivrs
loope
cmp
adc
cli
and
lret
add
repz
adc
add
repz
aaa
push
cmpsl
jb
in
xor
jno
test
xchg
jmp
cwtl
out
sub
lds
mov
sbb
pop
int3
mov
push
xchg
sub
mov
mov
or
das
xchg
mov
adc
fmul
negl
lea
or
out
add
pop
subl
dec
mov
sbb
mov
adc
jo
imul
jnp
loope
cmp
mov
sub
xor
int
mov
pusha
jecxz
iret
jmp
inc
insl
daa
insb
sbb
ja
adc
cmpsl
jno
adc
push
inc
and
sub
xchg
adc
outsl
cmp
sar
es
into
test
mov
cld
dec
cltd
rorl
and
out
in
cwtl
lods
xchg
inc
and
mov
and
mov
loop
pop
ret
ss
mov
iret
mov
jp
mov
and
adc
dec
mov
in
adc
push
or
sbb
out
push
mov
jge
jns
into
enter
xchg
pop
insb
and
mov
imul
dec
inc
mov
lods
cmc
movl
repz
cmc
js
sub
push
rorl
insb
je
cmp
pop
and
lcall
clc
icebp
push
lret
lods
js
fldenv
inc
cmp
dec
jl
stos
aam
ds
hlt
inc
lods
xchg
mov
sahf
ret
insl
lahf
mov
and
in
mov
or
jb
daa
pop
mov
ja
add
cmp
fucomip
xor
test
testl
mov
add
push
lock
bound
push
push
out
xchg
mov
adc
mov
pop
dec
lret
ja
sahf
in
sub
movsl
or
cld
leave
xchg
jne
inc
dec
notl
out
bound
jno
mov
inc
xchg
sub
jle
mov
leave
and
xor
xor
and
mov
xor
pop
ret
sub
fisubrl
out
std
in
sbb
cmp
xor
bound
pop
pop
call
push
and
ja
int3
aas
inc
enter
mov
sbb
insb
divl
je
inc
iret
mov
mov
xorb
push
sbbl
rolb
mov
mov
pusha
dec
jmp
jb
pop
mov
andb
lcall
xchg
inc
push
push
sbb
les
mov
sbb
leave
pop
sub
inc
dec
dec
mov
aaa
repz
shlb
jae
and
mov
push
dec
mov
ret
mov
fwait
in
adc
bound
jb
das
sub
pop
and
movsb
lcall
das
mov
cmpb
dec
push
call
sbb
xchg
inc
stos
xchg
xor
jp
addr16
sbb
addr16
xchg
pop
adc
dec
repz
mov
and
clc
ljmp
inc
cmpsl
sti
sbb
mov
loopne
fxch
test
mov
repnz
jge
inc
lcall
loope
data16
mov
jg
dec
xchg
iret
pop
les
and
push
mov
rcrb
inc
mov
lcall
sbb
mov
fs
popa
je
ficomps
mov
divl
add
cmp
loop
mov
cli
mov
push
xor
cmc
or
sti
lods
push
push
dec
dec
jb
add
dec
shrb
add
ds
xchg
or
sub
cmp
out
fists
jb
inc
fildl
pop
pop
repz
sbb
lcall
push
mov
dec
or
movsb
int
xor
push
jo
pop
lods
stos
cld
testb
xchg
imul
sbb
pop
lds
cmpsb
shl
out
decl
jl
fstpl
movb
or
cwtl
testb
faddp
out
fcomip
xchg
pushf
std
sahf
pop
pop
scas
add
sub
movsl
xchg
ds
jb
push
mov
dec
aam
sti
test
test
jmp
stos
xchg
or
push
mov
repnz
hlt
ss
jns
dec
rolb
xchg
dec
loope
dec
inc
mov
inc
inc
mov
push
jge
les
mov
cld
mov
outsl
daa
sbb
loope
xchg
adc
push
push
pop
dec
inc
shlb
jge
pop
adc
imul
add
outsl
jecxz
sahf
mov
fldcw
jo
pop
dec
or
mov
imul
into
cltd
aad
jg
out
adc
push
clc
cmpb
pop
in
lock
pop
test
push
repz
pop
icebp
mov
pop
cmpsb
fsubrp
loopne
outsl
xor
enter
data16
popa
mov
int
or
xchg
mov
mov
mov
jmp
pop
into
pop
fmul
insb
imul
out
bound
jns
fidivrl
data16
sub
jp
test
sub
push
mov
jns
mov
jle
hlt
inc
jecxz
or
ret
fistl
fisttpl
push
and
push
dec
sbb
sub
mov
jl
mov
sub
test
loope
cmc
test
push
xor
scas
mov
lahf
push
mov
fldenv
leave
mov
cli
cmc
inc
mov
cmpsb
jnp
xchg
sti
mov
sub
aad
push
aas
xchg
pop
push
jmp
ret
lcall
xor
test
sbb
pop
ret
inc
rcll
xor
jp
fistpl
into
mov
test
or
sbb
stc
scas
gs
outsb
iret
xor
jmp
xchg
in
leave
inc
push
xchg
adc
dec
xor
xchg
sub
push
popa
lgdtl
outsl
into
popf
gs
sub
aam
outsl
push
aam
popf
cmp
mov
fwait
out
imul
xor
mov
xor
les
push
lret
push
dec
inc
lcall
in
sub
cmpsl
sub
es
add
test
push
stc
cltd
xbegin
or
cwtl
xor
out
inc
int
and
push
xorl
pusha
je
lods
add
sarb
xor
sbb
aas
je
xor
mov
mov
into
lcall
push
jbe
stc
imul
add
mov
fninit
jnp
mov
cmp
test
push
add
xchg
in
inc
leave
sub
pop
mov
jecxz
ror
cs
pop
sti
data16
bound
push
xor
jns
xor
shr
in
ja
jle
adc
pop
cmp
mov
decb
icebp
mov
cld
push
sub
popl
push
aam
and
xchg
pop
orl
ljmp
lret
scas
scas
sar
test
xchg
jmp
insb
mov
dec
mov
adc
pop
push
xchg
in
pop
mov
or
push
inc
xchg
dec
stc
inc
repnz
push
dec
mov
lea
push
fnstenv
mov
jo
psllq
sbb
call
pop
sahf
xchg
call
xor
adc
xchg
mov
xlat
add
sub
ret
mov
rcrb
add
outsl
loope
cltd
jp
adc
out
sbb
test
ret
push
mov
fidivl
dec
xlat
xchg
lock
orl
insl
cwtl
push
add
pop
and
jle
jb
sub
or
mov
add
mov
jge
and
push
or
jns
popf
ffree
aam
gs
lret
stos
inc
in
out
push
sbb
sbb
stos
shrb
clc
xor
fidivrs
cmpl
sub
nop
fucomi
cmpsl
push
cmc
pop
cmp
xchg
bound
xor
lret
push
adc
xor
cli
lahf
mov
xor
test
push
imul
pop
lret
lds
push
sbb
repz
daa
jb
xchg
jl
adc
push
mov
jp
and
sbbl
ljmp
imul
out
imull
lds
movsl
imul
pop
cmpb
inc
sub
pop
jecxz
nop
mov
xchg
cmp
mov
fwait
mov
jnp
mov
loopne
pop
push
add
mov
jmp
adc
int
dec
test
jb
xchg
cmp
mov
mov
pop
and
imul
rcrl
jmp
pop
lods
andl
pop
lret
ror
test
jo
jg
adcb
jne
movsb
jbe
nop
pop
lret
pop
in
xor
sbb
sub
mov
loop
adc
cmp
sbb
mov
lea
mov
xchg
push
inc
or
loope
scas
fildll
pop
outsb
clc
mov
loop
and
cld
dec
fnstcw
jbe
test
mov
mov
sub
leave
or
push
lds
cltd
popaw
or
pop
std
test
pop
fsubl
notb
xor
cmp
add
and
out
inc
fs
iret
sub
lock
mov
adc
push
dec
sahf
fstps
fisttps
out
subl
rolb
fldt
adcb
xchg
lcall
mov
xchg
add
adc
in
call
xchg
imul
pop
add
push
pop
mov
mov
out
int3
ss
jae
mov
out
mov
sub
pop
mov
loop
orb
ret
and
xchg
dec
movsb
bound
dec
xchg
imull
jecxz
clc
push
movl
rcll
push
lock
mov
cmpsl
xor
out
repnz
lds
mull
in
jno
push
sti
dec
test
cmp
fsubrl
mov
rorb
adcb
jno
ds
dec
std
cmp
lret
inc
aam
cmc
jnp
mov
fwait
lea
adcl
fsubs
inc
cmpsl
xchg
mov
pushf
mov
dec
add
mov
sahf
sub
push
add
sbb
sub
enter
into
adc
sbb
jnp
xchg
sub
xor
data16
movsb
rcll
mov
outsb
push
sbb
fidivrl
clc
jo
push
fstp
push
shrl
fisubrs
shrl
lds
xchg
push
jne
push
xlat
xchg
xor
popa
dec
fmull
movsl
dec
inc
lahf
sbb
bound
or
xorl
inc
xchg
jae
sub
cltd
mov
lret
mov
inc
out
push
sbb
sub
mov
pop
or
mov
sbb
cmc
and
xchg
inc
sub
inc
xor
stc
cmc
inc
scas
es
aas
dec
scas
jmp
sub
sbb
lahf
leave
mov
sbb
call
into
rcrl
jo
xor
add
ret
pop
add
lds
jp
sub
or
stc
or
xorl
aas
jp
mov
inc
imulb
mov
in
leave
sbb
jns
hlt
inc
movsl
pop
fbstp
out
and
std
aad
xor
push
xchg
sub
fnstenv
fstpl
xchg
gs
ljmp
and
jnp
adc
loope
pop
sub
pop
pop
js
lds
mov
mov
sahf
pop
push
sub
cli
lods
lcall
xchg
rorb
jno
inc
test
jae
push
push
inc
push
lea
xchg
xlat
mov
das
dec
mov
inc
sub
mov
dec
mov
mov
xor
cltd
adcl
das
lods
xchg
test
xor
or
pop
push
dec
push
inc
incb
mov
xchg
adcl
sub
out
scas
out
push
add
lods
dec
fcoms
sbb
or
ss
mov
leave
jge
fcmovnbe
and
dec
ret
scas
cmp
inc
inc
movsl
out
popa
mov
iret
jecxz
push
lods
dec
fidivrs
push
orl
out
out
mov
fimuls
cmpsb
inc
dec
mul
les
imul
pop
int3
stos
pop
xchg
scas
mov
cwtl
push
or
mov
aaa
sbb
mov
andb
add
sub
mov
mov
loopne
test
imul
cmp
jl
sti
inc
loop
mov
and
sub
or
xor
dec
sub
cmpsb
scas
imul
inc
cmp
xchg
sbb
push
or
nop
ret
adc
shlb
scas
cmp
hlt
js
jbe,pn
decl
repz
mov
pop
pop
ljmp
sbbb
sbb
lcall
push
cmc
nop
jbe
jl
aad
test
push
sbb
sub
test
orb
xor
dec
mov
sbb
xchg
addr16
jecxz
popa
fisttpll
sbb
popa
mov
inc
push
adc
jecxz
call
xchg
rol
jle
cltd
pop
cmpsl
call
out
pop
shlb
testl
sub
loopne
mov
sub
jge
in
pop
xchg
or
and
iret
popf
jl
push
adc
pop
add
mov
outsb
aaa
inc
lret
mov
je
push
jbe
es
out
mov
sub
in
dec
cmp
or
jge
mov
inc
jl
xchg
sti
js
mov
das
inc
mov
enter
out
and
or
or
shrb
add
dec
push
pop
dec
inc
xchg
rcr
clc
adc
in
mov
adc
test
pusha
push
mov
adc
loop
cmp
and
sbb
xchg
pusha
mov
icebp
lods
fsubs
sub
xchg
inc
dec
divb
or
inc
adc
fwait
adc
push
dec
sbb
xor
aaa
xlat
push
or
in
push
adc
call
test
call
les
call
pop
cld
lcall
js
or
inc
shrl
call
cmp
mov
xor
leave
rcll
and
out
mov
movb
pushf
fistpll
andl
jmp
popa
arpl
test
mov
push
fstps
cmp
jbe
inc
mov
jnp
daa
fimull
pushf
sbb
aam
mov
jge
gs
jmp
icebp
pop
inc
cmpsb
mov
xor
mov
inc
xor
push
adc
mov
into
icebp
out
sub
andl
sub
mov
push
mov
sub
lods
repz
ret
dec
jmp
mov
jge
xchg
loop
adc
jmp
hlt
dec
popa
mov
in
add
mov
jecxz
fsubrs
ja
stos
adc
xor
out
or
xlat
orb
xor
int
sbb
dec
icebp
mov
repz
sub
mov
push
xchg
mov
outsb
jo
das
pop
daa
je
enter
adc
fscale
std
cltd
or
les
add
mov
jl
mov
jne
sbb
ja
cmp
mov
jmp
lret
scas
xor
shrb
push
cmp
test
mov
cmp
and
xor
pushf
mov
shrl
iret
sbb
mov
mov
pop
scas
sti
xor
ljmp
decb
push
add
cmpl
je
lds
lret
adc
or
cmc
js
sub
pop
add
movsb
leave
roll
loope
jp
mov
xor
test
insb
mov
clc
jl
jb
lahf
pop
nop
inc
mov
cmp
push
in
sub
sub
or
loopne
in
jmp
mov
xchg
pop
daa
add
test
xor
mov
jno
movsl
ret
out
aas
mov
mov
mov
jbe
arpl
addr16
push
mov
cmc
loopne
mov
aad
arpl
pop
int3
mov
enter
out
adc
add
in
lahf
rcll
addr16
fiaddl
jg
pop
jp
repnz
xchg
out
push
neg
and
out
xor
or
outsl
stc
pop
popf
scas
xor
ds
xor
mov
push
lahf
stc
jbe
xor
int
dec
out
lahf
fucom
inc
mov
cmp
xor
or
adc
push
stos
pop
cs
arpl
js
insb
pop
enter
add
xchg
jle
loop
xchg
ficompl
fsubrs
cmp
cmpl
lds
stos
test
cmc
pop
cs
adc
sub
adc
xor
push
dec
mov
xlat
push
add
std
sbb
sub
dec
cmpxchg
push
into
jae
sub
shll
sahf
and
mov
andnps
mov
mov
popa
testl
iret
fwait
mov
push
xchg
jb
mov
into
pushf
aam
rcrl
into
mov
lods
inc
xchg
dec
pop
push
cmp
sbb
jecxz
xchg
mov
mov
xchg
fidivl
loopne
popa
or
fwait
jno
sbb
dec
and
jle
add
addl
nop
xor
push
mov
jle
cld
dec
and
cmp
mov
imul
xchg
mov
movsb
call
push
enter
imul
add
imulb
or
in
fidivl
adc
dec
stc
imul
or
stos
pop
test
clc
cld
ss
push
push
aaa
repz
mov
xchg
inc
test
adc
jne
andb
pop
dec
mov
mov
pop
call
mov
inc
fxch
stc
add
aas
clc
sub
xor
mov
fsubrl
mov
and
or
xchg
fldl
rol
sbb
std
mov
or
sub
ss
jae
dec
inc
ss
int
push
mov
jmp
test
lcall
out
pop
pop
or
add
in
mov
call
mov
loopne
dec
les
neg
fwait
subb
jecxz
xchg
mov
fs
stc
mov
nop
dec
shr
cmp
cmp
adc
sbb
gs
xor
xchg
leave
in
pusha
sub
jmp
add
cmpsb
int3
in
out
jnp
dec
cmp
daa
dec
mov
mov
mov
repz
xchg
and
nop
or
lods
rcll
mov
xchg
rorl
jmp
sbb
aas
adc
sub
or
and
rcll
dec
dec
cwtl
in
fildll
ljmp
jb
ret
loope
insb
pushf
push
in
ss
sbb
test
dec
adc
into
lea
inc
sahf
mov
cltd
cmp
inc
dec
cltd
adc
sbb
ret
roll
test
idivl
roll
in
jp
cmp
jns
dec
clc
iret
pop
out
pop
or
pop
jmp
inc
in
out
incb
loopne
jmp
insb
sub
or
xlat
push
mov
jecxz
xchg
xchg
pop
sbb
nop
imul
es
xor
mov
jecxz
popa
adc
pop
inc
mov
addr16
pop
pop
push
pop
or
mov
cvtdq2ps
jl
bound
pop
sbb
pusha
mov
inc
and
inc
push
cmc
or
jg
orl
test
pop
stc
adc
inc
outsb
lods
mov
mov
stc
ds
inc
xchg
lds
lods
std
sahf
hlt
sub
add
mov
cmpsb
mov
enter
and
mul
jo
pop
outsl
lds
jge
mov
mov
fs
jle
dec
push
imul
ret
dec
outsl
mov
pusha
mov
adc
leave
pop
scas
stos
jle
xchg
pop
dec
mull
aad
jb
rorb
mov
js
les
and
inc
test
ljmp
insb
incl
loope
aas
pusha
inc
test
sbb
jmp
out
test
iret
lret
sub
pop
sub
jns
inc
jo
loopne
dec
push
push
adc
sarl
popa
push
sub
mov
enter
push
xor
cmp
aaa
xchg
mov
xchg
inc
sub
fisubrl
pop
cli
jecxz
fisubrl
lea
mov
in
std
shrl
repz
imul
mov
or
scas
outsb
add
push
sbb
dec
and
jmp
push
loopne
shrb
pop
mov
dec
cmp
and
jnp
sbb
std
lea
nopl
aam
repnz
mov
jmp
sub
sti
xor
push
jl
stc
dec
jg
cmpsl
lahf
lahf
inc
xchg
movsb
push
sbb
lock
dec
cmp
jne
inc
cwtl
and
pop
dec
cs
adc
ljmp
sub
int
mov
pop
add
shlb
fldcw
out
out
dec
or
cli
ljmp
push
in
push
sahf
sbb
jne
and
sbb
push
dec
sbb
fmull
jle
stos
inc
rol
nop
test
jecxz
push
inc
stos
pop
movsb
mov
mov
nop
add
pusha
lcall
rcrl
add
gs
loopne
call
mov
mov
and
mov
push
adc
add
and
lea
shrb
data16
pop
and
pop
mov
adc
mov
lds
mov
dec
mov
inc
mov
lods
jg
inc
cmp
aas
lret
inc
or
add
ret
cld
js
cmc
pop
daa
loop
repnz
lea
insl
mov
cmp
mov
push
pop
push
outsb
and
sub
sub
shll
das
inc
sub
add
in
shll
scas
pop
mov
dec
in
dec
and
xchg
mov
cwtl
adc
lret
and
pop
clc
dec
mov
out
cmpsb
pushf
xchg
lcall
pop
je
or
mov
cltd
mov
lock
dec
or
cmpb
in
xor
in
xlat
inc
or
stc
imul
jmp
fsubl
jno
mov
in
cmp
sahf
sub
xor
sbb
jmp
mov
sub
fldl
repz
mov
cmp
test
and
dec
mov
test
fsubs
lahf
cltd
inc
cltd
mov
inc
mov
dec
lret
ja
jle
jle
adc
lds
roll
test
dec
xchg
mov
repnz
ja
repnz
push
xchg
sti
jnp
cli
addr16
xchg
add
push
or
push
jp
scas
adc
mul
loope
sub
std
shl
sbb
xchg
sub
cs
aas
sub
or
insb
out
adcl
arpl
add
mov
sub
imul
xor
dec
mov
aam
lcall
pop
cmp
cld
push
jnp
mov
cmp
cmpsb
ficoms
gs
lea
add
pop
mov
out
xchg
or
adc
or
sub
dec
sbb
push
adc
ret
mov
push
jecxz
cmc
mov
push
popf
mov
bound
rcr
dec
push
cmovbe
pop
sbbl
insb
lcall
clc
push
std
repz
shrl
inc
fnsave
xor
add
pop
mov
lcall
pop
mov
repnz
xchg
clc
and
clc
inc
aas
jo
xchg
and
pop
mov
add
sub
xor
loopne
dec
jge
inc
iret
pop
imul
cld
mov
jp
sub
mov
xchg
add
or
and
push
stos
test
shlb
ss
icebp
adc
hlt
cmp
in
push
dec
stos
mov
jo
fs
orl
test
mov
repz
jae
and
and
insb
and
sub
mov
pop
jno
xchg
jp
mov
push
lock
ss
cmp
lcall
mov
mov
aas
ret
mov
insl
mov
pop
lock
andl
shr
test
mov
push
push
adc
and
mov
mov
loop
fs
fldln2
daa
mov
movsl
add
jnp
test
xchg
pop
int3
xchg
sbb
pusha
sbb
inc
sub
orb
pop
mov
jnp
fmull
push
cmp
mov
lods
cltd
sbb
sbb
int3
sarl
imul
lahf
jmp
add
out
stos
ss
or
call
push
rolb
mov
dec
arpl
int
lea
ja
jno
jne
cmp
cltd
cmp
inc
cmp
stos
push
xor
sub
dec
mov
ss
xchg
out
jnp
inc
pop
iret
daa
mov
lds
aam
cmp
dec
xor
sahf
test
add
push
rcll
inc
cld
push
test
fsubrs
out
ret
push
mov
mov
jg
mov
cmp
and
dec
cli
nop
loop
fwait
mov
imul
fwait
repz
xchg
or
cltd
dec
mov
push
shr
mov
nop
push
adc
aaa
xchg
and
add
sbbb
adc
or
in
ss
xchg
dec
lret
cmp
fnstsw
mov
inc
add
lahf
sbb
shrl
mov
sub
and
and
inc
aaa
rorl
xor
lods
lods
outsl
push
stc
mov
lock
mov
dec
cmp
lods
pop
dec
adc
fdivrs
jp
push
aaa
xchg
je
les
jge
test
mov
les
iret
es
or
cmp
inc
ss
push
out
sub
out
sub
xor
mov
ljmp
repnz
iretw
je
cmp
push
jb
into
inc
inc
xchg
mov
fldlg2
cmp
jo
xchg
loop
mov
fsts
mov
pop
xchg
mov
dec
cmp
out
inc
fidivl
push
cli
jle
jb
jl
jno
push
push
pop
sbb
xchg
jae
jmp
into
add
or
mov
xchg
fwait
das
fnstcw
out
adc
xchg
sub
mov
pop
rcl
mov
lahf
mov
add
ret
sbb
stos
cmpb
cmp
push
sub
mov
xchg
add
ror
popa
enter
testl
xchg
and
dec
mov
dec
hlt
inc
jp
lods
pop
or
jg
dec
popa
ret
pop
test
sub
stos
cwtl
or
popf
cmpsl
jae
shlb
pop
xchg
xchg
sahf
ss
jnp
out
aas
dec
jne
mov
pop
push
sub
pop
add
mov
aas
lods
loope
mov
and
mov
xchg
sbb
out
xchg
push
sar
and
ja
insl
test
or
stc
mov
andb
pop
movsl
hlt
lahf
lods
push
mov
cmp
int3
lods
jge
push
mov
push
jmp
jge
cwtl
cmpsb
sarl
movsl
xor
sub
in
je
movsl
add
fwait
pop
push
jl
adc
jne
test
lret
mov
cld
and
aaa
xchg
add
dec
mov
scas
or
or
fbstp
fstpt
les
push
sbb
xor
jb
out
xlat
pop
mov
cs
lret
mov
adc
add
es
xchg
xchg
fisubrl
out
test
push
xchg
scas
fwait
pop
adc
mov
dec
mov
add
dec
dec
push
in
push
enter
and
imul
cmp
add
push
jg
mov
adc
and
out
sub
je
push
jge
in
lcall
dec
mov
add
sahf
ss
push
sub
mov
push
jno
sub
push
fldenv
and
flds
or
insl
jmp
popa
dec
pop
xchg
loop
sub
adc
or
mov
test
test
faddl
popf
cmp
xor
xlat
fnstsw
shlb
rcrb
sub
int
or
jmp
loopne
pop
inc
fisubrs
sbb
adc
push
add
test
push
adc
ss
in
mov
in
jns
jbe
aam
add
mov
icebp
mov
jno
pop
gs
fldenv
xchg
jg
fadds
lea
jle,pt
xor
xchg
inc
add
aaa
shr
pop
outsl
or
out
dec
push
xor
xchg
pop
loope
idivl
add
sbb
adc
mov
into
mov
pop
nop
clc
dec
push
imul
mov
dec
pop
mov
jo
lret
mov
adc
fcomi
stos
ja
xchg
arpl
mov
fs
add
mov
and
xchg
push
push
sub
and
xor
addl
mov
sti
jmp
test
cmp
addr16
push
jl
loop
gs
je
movsl
adc
cmp
inc
fnsave
mov
cwtl
cmp
adc
xchg
add
cwtl
or
xchg
inc
nop
pop
stc
sub
pop
sti
push
lods
sub
fstpt
rcrb
mov
lods
inc
dec
xchg
popa
sbb
lea
add
stos
lods
inc
fcmovnbe
in
mulb
incl
test
std
outsl
adc
jmp
lret
mov
clc
hlt
xchg
stos
jae
sarb
mov
aaa
icebp
test
mov
dec
adc
adc
add
adc
mov
ja
add
adc
sahf
dec
or
stc
sbbl
dec
int3
loope
and
testl
lret
push
jg
lock
jmp
add
adcl
stos
movl
nop
or
pop
mov
or
mov
jae
mov
aad
int3
imul
call
sub
push
sbb
cmp
in
mov
imul
test
sbb
xchg
jmp
sbb
mov
cld
push
or
lret
adc
rcl
stos
push
jnp
mov
ret
decb
out
mov
mov
imull
mov
enter
in
sbb
add
ret
adc
cmp
adc
jp
stos
or
lret
sbb
lods
pop
sub
and
enter
idiv
das
and
or
or
inc
outsl
sbb
lret
pop
mov
sub
popa
popf
and
into
mov
repnz
and
mov
or
dec
cli
cmp
fidivrl
pushw
mov
xor
cmpsb
loop
test
add
notl
pop
mov
hlt
out
jns
sbb
sub
push
mov
jb
add
jmp
test
sbb
mov
adc
roll
dec
fsts
dec
int3
das
mov
ja
out
add
rcl
push
jecxz
outsw
jmp
cmp
xchg
stos
pop
test
es
jge
shll
mov
mov
dec
test
out
xchg
loop
int3
js
les
push
mov
shl
lcall
sti
xchg
pop
bnd
shl
outsl
cmc
xor
cmpsl
stc
les
scas
aad
fmul
pop
mov
mov
faddl
push
shlb
dec
push
out
es
pushf
in
fistl
jno
pop
xchg
pop
push
addr16
push
aam
mov
mov
stc
sub
mov
push
fistl
or
and
repz
ucomiss
xor
xor
ss
clc
and
into
loopne
out
fdivrs
and
sahf
xor
inc
ret
dec
push
outsb
dec
lret
andl
shl
in
cmp
jns
inc
cmp
jp
mov
test
sbb
ret
pop
mov
out
dec
push
jo
popa
icebp
hlt
sub
dec
and
lods
cmp
xchg
dec
cmpsl
repz
cltd
jo
rorl
stc
inc
push
scas
xor
je
fstpl
imul
notb
jns
cmp
or
scas
lods
fbstp
cmp
ds
and
adc
pop
aam
popf
or
outsb
inc
fistpl
xlat
js
xor
bound
das
or
pop
stc
xchg
shl
in
outsb
push
mov
push
das
idivb
dec
push
mov
pop
lret
insb
shl
push
outsl
add
insb
aaa
lea
dec
int3
fiadds
aas
in
xor
mov
ss
aad
mov
lds
mov
push
sub
sub
data16
fs
stc
jp
out
jae
scas
or
mov
inc
mov
in
add
shrl
sbbb
lods
ljmp
lahf
xor
sbb
pop
cwtl
clc
pop
lahf
push
pop
or
pop
add
sub
inc
imul
pushf
fidivrl
pop
pushf
cs
aaa
test
mov
xchg
sbb
jmp
or
and
repnz
or
int
out
mov
jecxz
adc
add
lcall
dec
mov
ljmp
pusha
fwait
push
ljmp
cmp
push
push
jle
lahf
sub
mov
frstor
dec
inc
xor
out
xor
xchg
rcrl
test
jnp
call
add
negl
xchg
andb
jl
pop
cmpl
xchg
cmpsb
adc
push
test
leave
ja
ja
mov
outsb
jbe
fnsave
cmp
push
insb
or
sbb
aaa
jmp
es
adc
cmp
cmpsb
sbb
int3
jmp
pop
nop
adc
movsb
aad
pop
lods
gs
pushf
add
mov
inc
into
push
inc
test
mov
ja
cs
xor
or
add
mov
lods
xor
fildll
leave
shr
sbb
fistps
mov
test
in
xchg
inc
sub
gs
push
dec
movsb
in
sbb
adc
fimull
lock
add
sub
sbbb
adc
sahf
ja
pop
mov
call
ficoml
xor
xor
call
addb
push
xchg
pop
mov
and
fmuls
out
pushf
lahf
neg
lea
push
fidivs
mov
shlb
jnp
movsbl
pop
scas
inc
arpl
rol
and
or
or
int
cmpsl
addl
repz
mov
imul
cmp
icebp
jmp
adc
or
or
cltd
push
leave
cmpsl
xchg
inc
pushf
inc
sti
inc
push
xchg
cwtl
fstp
add
in
dec
push
rcll
mov
test
cmp
lods
pop
xchg
addr16
sti
aad
cmp
jns
hlt
out
idivb
cmp
mov
dec
xchg
push
inc
popl
jecxz
adc
pop
jmp
out
xor
xor
fists
sbb
lret
xor
dec
mov
in
sbb
and
push
les
call
push
jg
out
ret
xlat
popf
je
aas
mov
jp
fdivrs
xorb
add
test
inc
lret
mov
dec
mov
adc
cmp
cmpsl
sbb
jp
xor
or
ja
push
jl
mov
stc
fists
jmp
idivb
mov
jl
mov
push
stc
lea
or
cwtl
adc
adc
sub
mov
ret
repnz
movsb
add
arpl
xchg
lea
sub
aaa
int
mov
cltd
push
inc
xchg
mov
pop
je
cltd
data16
jg
lods
push
ljmp
sub
inc
ret
or
int3
insb
rcrl
enter
data16
pop
sub
in
in
mov
sahf
pop
invd
sub
cmc
aas
fdivp
arpl
fbstp
adc
mov
lods
xor
mov
dec
cmpsb
ret
inc
cmp
mov
in
mov
imul
outsl
adc
les
lods
mov
push
out
jmp
incl
ds
fwait
in
and
das
fnstcw
lods
push
call
sbb
in
inc
call
mov
dec
cwtl
mov
and
add
cmp
repz
cmp
mov
push
xor
out
adc
in
ficomps
xchg
mov
push
nop
ret
clc
and
sub
insb
cmp
pop
push
lret
xchg
in
in
test
ret
add
loopne
push
call
sti
inc
psrlw
jmp
adc
mov
adc
pop
in
mov
mov
push
mov
sbb
xchg
je
add
inc
jp
test
loope
fildl
testb
data16
pop
pop
and
fisubl
cmc
and
mov
ds
out
insb
adc
jns
adc
sub
mov
jg
inc
mov
jbe
dec
arpl
push
and
cmpsb
hlt
call
ss
xchg
in
or
pop
inc
mov
loopne
insl
out
fdivp
ljmp
inc
jb
call
das
jae
push
mov
rolb
mov
mov
in
mov
cmpsl
les
push
sub
loope
or
iret
es
xchg
mov
push
fs
stos
push
push
push
inc
ljmp
mov
ret
subl
fucom
mov
adc
ljmp
mov
in
cmp
xchg
lods
rcr
paddb
adc
cli
loope
mov
sbb
out
mov
sub
push
int3
pop
xchg
xchg
data16
out
nop
jg
ljmp
or
jb
jle
xor
pop
testb
cmp
xor
sbb
jne
mov
das
lcall
int
scas
push
icebp
lcall
scas
xor
mov
push
in
ljmp
mov
dec
test
push
in
pushf
aad
and
mov
mov
inc
ds
jns
dec
xorb
dec
inc
sti
test
mov
mov
jae
push
ret
pop
push
das
push
lcall
cmpsl
sub
xor
mov
cmpsl
aad
or
xor
mov
cmp
or
sbb
les
stos
jecxz
rclb
pop
enter
into
loopne
dec
inc
ja
cmp
loop
pop
sahf
mov
fisubl
add
fiaddl
fstps
push
daa
dec
cli
repz
and
pop
movsb
das
xchg
out
loop
sarb
lahf
pop
shlb
sbb
insb
cmp
push
push
xchg
mov
imul
pushl
mov
fs
sub
mov
inc
jnp
xor
dec
or
lods
test
imul
leave
shlb
xchg
aad
push
sub
repz
jae
sub
adc
push
dec
pop
mov
cmp
and
icebp
imul
push
mov
mov
movsl
xchg
inc
xlat
adc
xor
repz
pop
scas
loope
aas
push
imul
pop
xchg
or
mov
xchg
mov
in
dec
jo
int
push
vpsubusw
xor
fdivs
outsb
pop
sarl
xor
sub
inc
push
or
cmpsl
adc
repz
hlt
lds
shrl
inc
imul
add
mov
mov
mov
push
out
leave
mov
ffree
jge
dec
dec
in
popf
mov
loopne
push
mov
ret
vprotw
mov
mov
sti
push
icebp
ret
ljmp
xchg
xchg
fwait
mov
push
rcl
lcall
jns
sub
rorb
mov
movntq
sub
xor
xchg
out
out
cmc
ret
pop
xchg
les
inc
dec
sbb
xchg
cmp
mov
mov
fstpt
mov
in
test
push
cwtl
leave
dec
mov
dec
cmp
sub
loope
sub
push
es
dec
les
enter
addr16
xor
mov
repnz
imul
rcll
shlb
adc
pop
xor
push
jae
push
inc
pusha
xchg
and
mov
in
mov
scas
jb
hlt
mov
call
mulb
ljmp
mov
cmpsb
mov
stos
lret
cmp
call
add
mov
push
mov
push
jb
shlb
cmpsl
inc
pop
cmp
cld
mov
stc
call
mov
hlt
movsl
mov
jbe
lret
jp
ret
xchg
cmp
call
pop
pop
inc
fstps
fwait
jg
pop
add
xchg
jp
je
dec
lahf
mov
aaa
inc
mov
xchg
rorb
lods
dec
mov
andl
xchg
cwtl
mov
lock
in
es
dec
outsb
mov
and
out
mov
add
loopne
lds
push
mov
or
xchg
add
cmp
pop
mov
or
stos
jmp
mov
mov
cmp
sub
lahf
xchg
cmpsb
xlat
push
ja
arpl
mov
imul
adc
push
iret
jmp
mov
shll
insl
icebp
adc
adc
repz
inc
mov
lods
cwtl
mov
push
sbb
xchg
mov
inc
xchg
movsb
out
lahf
xor
sub
xchg
je
and
ljmp
sahf
dec
xchg
repnz
lods
mov
mov
loopne
in
mov
test
lretw
push
out
pusha
dec
pop
xor
pop
xchg
outsb
in
mov
mov
sub
jo
addr16
outsb
cmp
sahf
fsubrp
mov
mov
sub
inc
mov
fisubrl
inc
add
shlb
add
out
repz
loop
outsb
push
mov
mulb
cmpsb
in
cs
shl
test
rep
stos
pop
test
inc
cld
xlat
imulb
sbb
mov
out
sahf
cld
imul
jle
xor
das
add
mov
adc
das
push
in
imul
xlat
scas
negl
int3
sub
xchg
inc
push
jns
rcl
lods
mov
and
data16
rcrb
mov
mov
movsb
dec
mov
imul
mov
mov
ja
aad
cmp
fsubp
mov
pop
sub
add
pusha
test
mov
xchg
hlt
addr16
mov
xchg
clc
cmp
adc
inc
out
and
xorb
movsl
mov
cwtl
icebp
and
lds
sub
sahf
push
cmpsl
lds
stos
fcompl
inc
pop
mov
cs
fs
push
dec
mov
sbb
xchg
mov
cli
add
push
sub
push
and
cs
pop
icebp
or
xor
nop
in
sbbb
xchg
pop
fnstsw
inc
aaa
sub
mulb
mov
bound
aam
sbb
adc
fwait
lock
test
add
push
fimuls
ret
pop
rclb
pop
mov
outsl
jnp
mov
cld
in
in
dec
iret
repz
fdivrs
daa
mov
xlat
out
push
scas
stos
in
rclb
cmp
push
sub
call
jge
mov
loope
fimull
or
call
fldt
lds
or
mov
push
fldt
mov
jmp
dec
call
ds
xchg
and
mov
adc
xchg
or
push
xor
xor
leave
das
mov
mov
cmp
cmp
mov
adc
outsb
mov
jno
mov
mov
mov
imul
ja
inc
adc
push
cmovp
xchg
cmp
add
adc
pop
sbb
hlt
and
aas
xchg
xchg
andb
lods
inc
popf
fsub
push
mov
imul
fildll
adc
add
mov
jg
arpl
and
sbb
aaa
sbb
mov
insb
and
push
aas
xchg
arpl
in
popa
stos
dec
dec
repnz
fmuls
cmp
or
frstor
out
xchg
and
outsb
jo
lea
mov
mov
shl
dec
jne
push
ds
outsb
cmpb
mulb
scas
es
pop
pop
fisttpll
jno
mov
andl
dec
ss
lret
repz
or
sarl
jb
cwtl
popf
mov
negl
daa
pop
push
push
fnstsw
xchg
call
adc
aas
jae
pop
dec
nop
cmpsl
xchg
dec
push
jmp
xor
enter
fcomps
daa
dec
mov
jno
mov
test
test
lahf
push
pop
pop
jae
arpl
cmp
mov
xchg
inc
xchg
bound
adc
fs
sub
cmp
add
jno
pop
pop
fdiv
adc
push
pop
stos
test
inc
mov
xchg
add
mov
adc
out
dec
in
repnz
bound
mov
lods
jnp
jle
cs
ljmp
mov
std
inc
dec
imul
mov
ret
iret
xchg
dec
pop
aam
es
pop
sbb
pushl
mov
and
icebp
dec
jecxz
xchg
push
push
xchg
or
jge
sbb
and
mov
mov
dec
les
sti
jecxz
xor
mov
pop
fidivrs
mov
sbbl
jmp
mov
mul
std
pusha
dec
mov
inc
push
and
int
rolb
cmp
and
in
sahf
cmp
insb
mov
adc
jecxz
pusha
add
push
rclb
inc
movsb
inc
movb
popf
xor
jno
xchg
in
cwtl
mov
aam
lahf
repz
jle
and
sbb
hlt
ja
lretw
aas
notb
inc
mov
jbe
in
imul
cli
inc
stos
jns
jae
test
test
xchg
ljmp
xchg
and
cwtl
xchg
pop
mov
ja
aam
mul
out
stos
push
mov
pop
inc
cltd
mov
jecxz
xchg
insl
int
push
add
int3
stos
xor
jne
movsl
dec
cld
jmp
ret
sbb
pushf
jne
dec
daa
push
addr16
mov
mov
or
cmp
cmp
cltd
insb
push
rol
icebp
aam
sbb
add
inc
clc
sahf
js
fbld
ficomps
jbe
dec
inc
cli
testb
not
fwait
lods
loope
fldcw
shl
pop
pushl
mov
mov
in
cmp
push
fwait
xchg
and
mov
pop
imul
dec
aad
dec
inc
xchg
and
adc
lea
inc
test
pop
cmp
sahf
cmpb
dec
dec
push
movsl
pop
jmp
add
push
and
call
pop
stos
lcall
lods
leave
aam
cmp
cmp
test
jbe
dec
xor
sbb
dec
loope
mov
sbb
and
mov
mov
test
enter
in
sbb
pop
faddl
enter
pop
xchg
pop
faddl
popa
ficoml
cmp
aas
fsubrs
orl
mov
mov
sbb
call
inc
das
js
fs
jnp
mov
sub
shl
mov
xor
movsl
in
cmp
movsl
mov
icebp
sub
adc
fwait
test
cmp
jno
dec
popa
push
add
sub
negb
jle
mov
and
mov
pop
adc
mov
push
xor
cltd
xor
dec
es
into
inc
xchg
cwtl
shr
mov
scas
scas
or
mov
mull
sub
xor
sub
lcall
mov
add
in
or
cmc
lret
mov
xchg
into
mov
mov
sub
mov
imul
adc
shll
xchg
pop
fcomip
push
test
xchg
mov
mov
dec
in
lcall
push
leave
lcall
adc
inc
xor
mov
sub
pop
fisttpll
pop
movsb
fcmovnu
out
in
lret
jp
cmp
jne
sub
dec
fistpll
out
jecxz
mov
fistl
mov
ret
lods
das
mov
sbb
sub
cmp
mov
mov
jl
push
mov
sub
dec
pop
and
negl
push
mov
inc
inc
fnstenv
neg
cli
inc
inc
jmp
adc
bound
loop
mov
xor
cmpb
lcall
cmp
fisttpl
fmull
fwait
aas
sub
pop
jl
sbb
outsb
pop
xlat
sbb
cli
push
into
pusha
mov
mov
mov
loope
mov
push
add
xchg
and
and
hlt
mov
or
les
sub
lds
jb
and
and
enter
gs
imul
lods
aad
pusha
xchg
sbb
push
cld
pop
shrl
cmpsb
lds
mov
sub
inc
inc
ds
xor
sarl
test
cmp
xchg
xlat
sbb
add
push
jo
popa
sub
sub
scas
and
jae
ljmp
mov
aam
push
pop
and
pop
pop
push
idivl
xchg
xchg
cwtl
cmp
jecxz
pop
jo
outsl
push
jg
into
mov
push
mov
in
mov
popf
xor
push
pop
in
dec
dec
rcrl
fs
cld
pop
subb
pusha
xor
int
mov
jg
mov
mov
push
into
jp
out
cwtl
pop
loope
sbb
mov
xchg
push
xor
subb
call
insl
xchg
stos
bound
adc
jo
mov
push
sbb
dec
insb
or
filds
addl
rcll
out
js
mov
lcall
pop
loope
ljmp
cld
or
cmpsl
mov
in
dec
lret
out
movsb
test
mov
jnp
out
pop
xlat
movsb
xor
xchg
or
sahf
ja
loope
sbb
jecxz
dec
stos
mov
shll
inc
lahf
mov
repz
daa
dec
outsl
adc
jo
pop
adc
adc
dec
inc
or
or
hlt
push
ljmp
mov
cs
aam
adc
mov
push
shrl
dec
push
ss
into
mov
mov
inc
mov
inc
shll
fstpl
test
pushl
add
out
mov
mov
jne
pop
inc
out
imul
gs
adc
cld
fsubrp
sbb
test
add
pushf
sub
cmp
xchg
mov
sub
xchg
into
mov
in
sahf
push
dec
mov
fistpl
test
add
mov
shr
inc
push
push
push
add
loope
test
push
sbb
lahf
sub
cmc
insl
insb
push
inc
cmp
in
mov
and
call
insl
adc
lret
ret
mov
fstps
xchg
mov
jne
in
stos
xchg
mov
cltd
and
push
rcll
std
scas
cmpsb
inc
sbb
cli
movsb
aad
cmp
movsl
repnz
sti
add
cltd
cli
cwtl
add
push
xor
mov
sbb
adc
hlt
add
nop
imul
mov
push
inc
or
push
aam
or
jl
inc
scas
mov
neg
outsb
and
jmp
dec
shrb
iret
mov
add
mov
inc
xchg
loop
ljmp
cli
adc
fidivrl
and
add
icebp
inc
jg
pushf
sub
inc
mov
push
inc
push
mov
repz
or
pop
aam
jle
stc
xchg
add
add
add
mov
rol
mov
mov
inc
into
outsl
leave
sahf
into
insb
stos
cmp
push
popa
in
or
aam
lock
jne
popa
pop
sbb
icebp
mov
xor
mov
fimull
cmp
movsl
inc
out
enter
in
push
imul
or
xor
or
nop
dec
cmp
nop
pop
testb
mov
add
sbb
gs
lock
mov
mov
mov
cmp
or
bound
jecxz
pop
repz
sbb
cmc
lods
inc
xor
sti
std
rcrl
flds
ss
movsl
sub
or
popf
scas
dec
in
insl
and
into
roll
das
fstpt
xchg
xchg
xchg
xchg
adc
jne
sbb
sbb
addl
sub
pop
inc
scas
inc
and
cmpl
leave
dec
inc
dec
in
test
std
jge
pop
ljmp
push
ja
into
dec
arpl
add
jb
jno
icebp
pop
sbb
js
imul
cmp
add
into
push
jne
enter
xchg
cmp
scas
insb
movsb
sbb
inc
lock
inc
movsb
les
into
push
mov
sub
aad
js
and
push
jns
loopne
mov
lret
nop
inc
outsl
loope
rcrb
push
sub
fstpl
jp
in
lea
stc
shrl
jg
and
hlt
jns
outsb
gs
ret
sti
pop
jns
fsub
add
jb
add
dec
cltd
pushf
xor
adc
jp
inc
mov
cmpsb
mov
popf
lahf
shr
aad
xlat
mov
out
dec
scas
xor
sbb
repnz
jae
popf
sbbl
push
xor
fstl
fiaddl
xorl
push
adc
push
or
pop
adc
lods
xchg
mov
xorb
inc
fstpl
rorl
insb
mov
xchg
jno
jns
into
cmc
gs
imul
bound
les
test
mov
or
fmull
cmpsb
mov
lret
fdivl
jae
mov
in
xchg
xchg
in
dec
daa
ljmp
fildll
ljmp
fnstsw
xor
popa
mov
fnstsw
repnz
addr16
jno
test
sbb
inc
mov
and
mov
xchg
inc
or
popl
lds
test
mov
jmp
cmp
rcrb
insl
push
data16
cmp
dec
in
push
aaa
xor
daa
cmp
stc
fiadds
and
sub
mov
sbb
mov
mov
shlb
imul
cwtl
orl
ret
dec
mov
dec
pop
jnp
aaa
outsb
les
fmuls
pop
enter
dec
aam
add
mov
mov
jecxz
out
xchg
add
xor
sub
adc
popa
add
mov
hlt
push
sbb
aad
jl
lods
push
pop
mov
ljmp
xor
iret
pop
dec
stos
hlt
cs
mov
in
cmp
inc
aas
pop
push
std
push
push
int
cmc
ds
lahf
decb
sub
mov
or
add
test
jne
pop
jne
cmpsl
jg
inc
dec
dec
lret
cmp
cwtl
adc
add
cmpb
pop
cmp
bound
leave
sti
mov
scas
add
xchg
mov
aad
mov
jle
es
jl
vpsubusb
xchg
push
ret
mov
stos
popa
clc
pusha
gs
jno
pop
mov
jnp
in
jo
push
jecxz
jnp
dec
xor
mov
in
stc
jge
pop
pusha
ret
ss
fs
into
mov
lds
cs
inc
push
mov
dec
enter
cmp
inc
rorl
dec
mov
ljmp
and
lahf
in
mov
test
call
pop
dec
mov
xor
inc
sti
packsswb
mov
xor
dec
rorl
sti
arpl
xor
inc
aam
pop
icebp
int
int
test
rcrl
ds
mov
mov
and
hlt
cmp
pop
loop
sbb
insl
fstpl
das
and
mov
sbb
shrl
dec
fidivrl
pop
pop
mov
inc
enter
mov
jecxz
cmp
sbb
aam
inc
mov
jne
xor
cmpsl
sub
push
sarb
jmp
test
cs
les
mov
push
xchg
fisubs
adc
and
sarb
in
jno
lods
nop
adcl
pop
add
filds
call
xor
sbb
insb
and
pop
addb
adc
xorb
inc
ss
lea
xor
xchg
mov
xchg
scas
xchg
push
dec
les
inc
test
cmpsl
ja
push
roll
in
addr16
mov
and
mov
fldt
push
sub
jg
mov
jle
lds
sbb
xchg
test
dec
in
aam
sbb
insl
test
sbb
out
dec
lret
xor
or
mov
mov
jmp
jns
daa
and
mov
ret
sahf
xor
jb
pop
imul
jp
hlt
mov
ds
adc
sarl
xorb
sub
repnz
fiaddl
sti
into
jnp
mov
xlat
and
mov
gs
push
fidivs
cltd
pushf
mov
movsb
cmp
and
divl
add
push
dec
mov
jnp
cmc
inc
jle
and
sub
adcb
xor
addr16
jo
or
add
cmp
je
dec
fs
xchg
arpl
xor
popf
popa
sub
adc
sbb
ss
dec
xlat
inc
mov
jnp
mov
addr16
push
push
ret
out
test
and
dec
push
xor
cmp
push
push
mov
rcrl
xchg
xchg
std
call
sbb
push
jnp
xchg
mov
sub
push
out
mov
scas
lea
popa
outsb
fdivrs
scas
les
data16
add
rclb
imul
sbb
push
ret
inc
pop
dec
daa
or
push
sti
mov
pushf
xor
dec
dec
inc
xlat
pop
or
loopne
ljmp
addr16
jmp
xor
mov
push
cmp
repz
dec
test
rcrb
movsl
and
cmp
outsb
test
jmp
sub
push
in
pop
sub
jecxz
xor
stc
sub
dec
rcl
jp
inc
shrl
lods
dec
test
lock
bound
jge
add
ss
jmp
je
loope
xorl
jl
loopne
mov
cmp
iret
daa
sub
lahf
int3
ss
pop
mov
enter
mov
pop
test
into
xchg
scas
xor
loopne
xor
or
leave
jbe
dec
enter
xchg
cwtl
mov
lahf
fmul
mov
sti
out
loop
mov
jle
insl
inc
or
cmc
pushl
outsl
xchg
orl
pushf
push
sti
mov
jnp
out
dec
stos
dec
fs
loope
mov
dec
sarb
stc
mov
xchg
test
filds
adc
mov
xchg
cltd
sti
imul
nop
xchg
cs
loop
rcrb
hlt
subb
out
push
sysexit
inc
shlb
adc
pop
psraw
sbb
ss
jb
cld
mov
stos
jae
xor
push
std
test
mov
insb
sahf
inc
xchg
ds
imul
mov
addl
jge
das
out
sub
mov
pop
call
or
mov
scas
fsubrs
in
out
push
or
pop
loopne
es
insb
or
in
lret
add
or
push
add
loopne
iret
xchg
sub
lds
cmp
je
mov
fcomps
popa
shlb
hlt
mov
xchg
mov
mov
test
leave
popf
dec
jmp
jmp
rcl
and
call
ljmp
xor
repnz
push
xchg
mov
inc
dec
mov
in
mov
lock
addr16
pop
pop
dec
xchg
inc
cwtl
mov
mov
adc
sbb
adc
ljmp
inc
dec
dec
cmp
adc
pop
jns
rorb
xchg
adc
jb
test
insl
icebp
scas
test
je
cli
nop
mov
adc
in
jp
ljmp
sar
sbbl
es
arpl
mov
sub
pop
mov
out
fdivl
cmp
pop
movl
inc
fiadds
jl
xchg
inc
and
icebp
sub
jg
call
jg
pop
loopne
bound
push
sbb
dec
inc
sbb
jmp
out
push
sbb
into
sub
lea
xor
mov
inc
push
pusha
jp
sbb
mov
les
jb
clc
out
frstor
movsb
clc
loopnew
in
test
pop
jae
icebp
das
push
sbb
xchg
dec
idiv
push
stos
popa
adc
mov
and
shrb
and
fldcw
xor
mov
inc
push
cmp
cmp
icebp
in
aad
mov
lds
xchg
dec
adc
test
fdivs
mov
mov
push
and
sbb
mul
adc
jae
movsb
lods
push
shlb
xor
adc
sub
pop
cmp
test
outsl
call
dec
cmp
add
imul
scas
push
inc
out
in
dec
adc
ss
push
mov
lret
inc
dec
lock
push
mov
xchg
or
cmp
push
movsl
jnp
pop
lds
shr
in
test
cltd
lret
sbb
ret
scas
inc
mov
mov
push
rclb
push
jmp
jb
fcompl
xor
inc
xor
notl
les
nop
xor
cs
xor
imul
sbb
push
loopne
or
add
jge
sbb
cmp
mov
xchg
adc
push
mov
lahf
lahf
mov
xchg
into
push
inc
aaa
call
mov
sarl
add
fidivrs
sbb
dec
bound
in
push
push
mov
negl
out
negl
inc
jle
pop
inc
in
mov
adc
mov
sub
push
pop
sbb
rcll
test
mov
jno
icebp
and
add
lods
cmpsl
loopne
loop
mov
test
mov
pop
ret
loopne
mov
jle
sub
sub
out
cmpsb
mov
xor
push
movsb
mov
sbb
lea
and
lcall
bound
adc
dec
dec
jge
or
sub
or
or
es
jg
push
stos
pop
fistpll
fcmovne
ret
aaa
out
dec
iret
mov
inc
dec
inc
xchg
inc
shr
subb
cmc
xor
or
push
je
cld
pop
iret
inc
push
jge
add
lock
fnsave
insl
pop
adc
xor
test
cmp
xor
dec
cmp
inc
jae
dec
inc
fisttpll
mov
ss
xchg
adc
test
and
scas
dec
adc
dec
cmp
cmc
outsb
mov
sbb
cs
ja
pop
mov
gs
sahf
lods
push
scas
and
pop
test
add
movsl
mov
cmpsl
insl
push
adc
cmp
add
and
mov
rclb
imul
adc
pushf
setnp
minps
add
hlt
faddl
inc
xchg
jns
cmp
arpl
pushf
test
dec
fidivl
xchg
jnp
lcall
lcall
xchg
popa
ljmp
xchg
nop/reserved
aad
adc
leave
jno
out
loopne
ss
fistl
sbb
stos
fisttpll
in
ret
sbb
push
clc
sbb
in
push
fwait
test
in
rcrb
and
cmp
push
xchg
jmp
cmp
cmpsb
mov
out
sbb
xchg
leave
mov
int
push
shrb
je
add
sub
loope
sub
or
idivl
in
jne
adc
xchg
fcmovb
dec
in
or
jp
lds
inc
ljmp
fistl
or
mov
js
jae
jae
mov
xchg
psubusb
pusha
aaa
mov
ss
or
data16
mov
inc
jge
test
or
enter
jmp
outsb
or
mov
jmp
sub
cld
jmp
adc
sub
pop
xchg
aas
push
fdivrs
push
jne
pop
lahf
pop
jns
movsb
xchg
fs
ja
mov
outsl
xchg
mov
stos
and
icebp
sub
decb
xor
adcb
pop
jns
and
dec
in
gs
dec
pop
xchg
mov
mov
out
pop
cmpsl
jg
std
mov
repz
jp
mov
sub
repnz
and
mov
jnp
clc
int3
pop
xchg
pop
aad
stc
sub
mov
sub
not
cld
push
aaa
pop
adc
sarb
xchg
add
ljmp
mov
add
add
inc
add
adc
sbbl
rorb
and
mov
loope
ret
mov
js
jl
int
call
dec
cmp
push
pushw
stc
int
sarl
mov
outsl
fisubs
xchg
ljmp
movsb
jb
roll
add
int3
pop
inc
fcomps
sub
nop
jo
dec
xchg
inc
adc
cld
sbb
and
mov
inc
adc
bound
mov
loopne
or
das
inc
xor
cwtl
or
pop
ljmp
pusha
and
add
and
cmp
xchg
ljmp
std
jmp
jp
icebp
inc
add
enter
dec
mov
add
add
das
mov
out
out
lea
jp
lcall
jle
lock
jge
andb
stos
mov
sub
mov
add
lret
mov
cmp
hlt
push
adc
outsl
insl
push
pushf
ja
loopne
mov
mov
cmpsb
inc
or
lods
mov
or
call
aam
dec
adc
sbb
mov
dec
cli
cmpsb
push
xchg
repnz
fisubrl
fcmovbe
or
mov
mov
push
xchg
inc
js
mov
mov
pop
push
hlt
sbb
lods
add
ret
push
mov
jbe
ret
dec
loop
mov
lods
pop
inc
jne
shr
sti
dec
sahf
mov
inc
pop
inc
pop
xchg
cmp
push
sub
mov
push
mov
stc
mov
inc
iret
insl
leave
xor
xor
imul
scas
cmp
adc
jmp
call
lcall
mov
call
inc
mov
sbb
mov
rcr
cmpsb
jge
adc
pop
into
int
sahf
mov
cwtl
pop
sub
aas
xlat
push
push
inc
scas
inc
enter
sub
roll
test
ret
xchg
jmp
lea
shrb
xchg
ljmp
fsts
daa
icebp
test
int3
or
dec
xchg
jp
in
mov
sub
into
xlat
popf
add
iret
mov
and
sub
jmp
mov
or
push
and
mov
in
push
mov
test
test
mov
xor
mov
add
push
pushf
add
ljmp
movsb
aaa
dec
mov
js
pop
andl
lock
pop
lea
or
iret
in
imul
aad
xchg
pop
mov
ret
ds
insb
xchg
ret
push
mov
aam
sub
push
in
cmp
int
sbb
cli
lock
sbb
jo
jmp
mov
cwtl
or
sarb
outsl
arpl
pop
or
push
add
pop
lods
out
inc
aam
stos
pop
adc
or
lret
aad
loop
xor
ret
mov
pop
mov
mov
pop
lret
addr16
jle
cmp
or
clc
xchg
sbb
ljmp
sbb
xchg
or
jl
or
dec
imul
fxtract
out
arpl
nop
outsl
pushf
cltd
pop
dec
jne
push
xchg
incb
std
incl
lods
mov
jmp
sahf
jmp
mov
or
ficoml
xor
outsb
xchg
test
mov
add
dec
dec
out
mov
pop
insb
pop
mov
je
sarl
jecxz
cmp
or
cmp
push
test
sar
ja
lret
cmpb
fldl
sub
jns
xchg
test
pop
dec
stc
adc
sbb
idiv
pusha
mov
fxch
xchg
mov
push
sahf
jle
in
sub
aam
leave
mov
aam
stos
adc
rorb
ljmp
push
xor
pop
add
addr16
jns
lea
out
jp
jo
push
adc
sub
dec
mov
subl
pop
in
aam
das
cltd
scas
push
stos
add
xchg
bound
scas
xor
cmp
add
push
mov
cmpsb
pop
xchg
lea
sbb
sbb
ds
push
inc
ror
movsl
xor
mov
or
inc
loope
dec
jae
mov
and
sbb
cmp
mov
in
sbb
sti
mov
dec
lods
xchg
ds
mov
lds
xchg
mov
adc
insl
sub
ljmp
push
inc
pop
pop
inc
push
xor
fdivrl
lahf
stc
enter
stos
andl
inc
dec
inc
cmp
sub
pushl
add
ja
mov
icebp
ja
sub
push
push
gs
sub
jmp
call
xchg
jnp
cld
cld
push
iret
sub
ret
mov
sarl
adc
loopne
shl
ret
test
outsb
fbld
xchg
mov
sbb
dec
mov
outsl
outsb
insl
mov
mov
loope
or
jmp
in
xchg
xchg
repz
inc
adc
out
cmpsl
int3
aaa
add
imul
scas
outsb
and
mov
pop
sbb
xor
jns
lcall
roll
push
in
sub
sbb
outsb
mov
mov
scas
loop
hlt
int
inc
cwtl
inc
mov
les
and
inc
pop
and
test
ss
ss
mov
std
decl
js
pop
dec
rcrl
cmp
pop
mov
rcrl
aaa
pop
pop
ja
bound
jb
fcompl
jbe
js
gs
push
xchg
lock
daa
mov
mull
sahf
jne
lcall
inc
cmp
roll
sub
jle
add
loop
cld
decl
imul
inc
js
xor
in
int
inc
mov
int3
and
pushl
cmp
xor
fisttps
out
ss
iret
ljmp
enter
into
pop
dec
adc
cli
jno
mov
or
xor
sub
leave
notl
data16
scas
mov
sbb
or
mov
mov
push
scas
and
mov
jno
dec
xchg
cmp
mov
and
mov
mov
enter
cwtl
notb
xor
ret
fs
les
jmp
inc
mov
in
bound
insb
insb
adc
loop
popf
mov
out
push
loopne
sub
mov
out
in
mov
sbb
push
cmp
inc
mov
pop
cli
addl
enter
rorb
dec
push
mov
pmaxub
jns
pushf
adc
xchg
xchg
gs
ds
xchg
mov
cltd
mov
shll
cmp
inc
push
xor
js
jns
mov
and
clc
das
adcl
arpl
hlt
pushf
clc
dec
push
sbb
hlt
cli
pop
lahf
and
insl
lret
jp
or
ret
and
sbb
lret
daa
pop
insl
cmp
ljmp
or
adc
in
out
fldt
or
mov
jle
out
push
cmp
push
xchg
jnp
and
je
and
adc
shlb
ficoms
xor
fdivr
fs
jae
scas
gs
icebp
dec
mov
xchg
adc
inc
test
into
pusha
jo
fists
mov
pusha
outsb
lret
shr
cld
decl
aam
mov
ljmp
cmp
mov
std
cmpsl
adc
out
das
fstpt
jp,pn
outsl
push
mov
lea
and
sub
mov
outsl
jnp
aam
add
insb
and
mov
out
xchg
shlb
xchg
sbb
mov
fstl
cmp
mov
push
sub
push
push
mov
shrb
cld
fadds
xchg
andb
mov
dec
and
mov
rcrl
cmp
inc
adc
pop
sub
mov
shll
test
rclb
mov
inc
das
pop
xchg
inc
mov
das
fsubl
lock
in
push
inc
add
adc
and
rorl
sti
lret
loopne
push
popf
insb
jae
movsb
movsl
and
cwtl
adc
stos
movsl
test
dec
outsb
jb
sbb
mov
clc
push
lret
and
mov
mov
pop
movsl
es
lcall
test
adc
and
and
dec
arpl
mov
mov
jp
stos
aad
mov
stos
popf
aad
pop
add
mov
fimuls
sub
inc
inc
cmp
repz
lahf
inc
ja
scas
sub
add
mov
mov
jb
pop
xchg
sbb
add
mov
outsl
xchg
cmp
clc
mov
and
xchg
inc
int
sbb
dec
mov
stos
jl
push
mov
jl
jb
bound
loope
dec
pop
repnz
popa
mov
jnp
bound
sbb
add
push
scas
in
mov
leave
outsb
imul
daa
into
mov
jmp
addr16
xchg
lcall
mov
push
sbb
mov
outsw
fisubrl
ret
rclb
push
mov
insb
mov
arpl
xlat
into
cmp
inc
pop
gs
outsl
push
sbb
hlt
or
clc
pop
pop
stos
inc
jne
pusha
jecxz
jo
mov
and
cmp
adc
imul
xor
test
cli
inc
ret
pop
pop
inc
sub
shrb
iret
mov
imul
jno
or
movsb
leave
cmp
pop
fwait
cs
xchg
xchg
pop
mov
or
imul
xchg
sub
cmp
movq
mov
int
cmc
shrb
add
add
cli
mov
pop
stos
inc
arpl
cs
mov
dec
pop
add
and
repz
add
out
sbb
loopne
sbb
xchg
andb
pop
out
stos
push
rcrl
pusha
std
fs
dec
inc
popa
add
sahf
in
xlat
cs
xchg
in
icebp
pop
inc
jl
psrlq
add
jg
mov
cmp
fcmovnb
ja
and
pop
les
loopne
xor
xchg
out
add
data16
rcr
scas
repz
or
mov
mov
adc
stc
mov
or
addr16
mov
adc
inc
hlt
dec
dec
stc
mov
out
xchg
je
roll
mov
imul
pop
cmp
mov
push
sub
rcrb
or
insl
mov
cmpsl
xchg
std
or
shr
push
xor
sub
push
mov
fcomps
mov
dec
add
cltd
sbb
jmp
ret
jne
mov
sar
mov
jmp
stos
sub
inc
hlt
lds
inc
jne
and
push
push
mov
xchg
lahf
pusha
rcl
mov
outsl
cmp
sbb
das
frstor
cli
std
xchg
test
dec
jnp
xchg
jmp
add
aam
lea
pusha
repz
add
mov
or
pop
cli
adc
lret
pop
lretw
data16
into
test
pop
aad
test
inc
addr16
jne
sub
test
vmwrite
adc
pop
sahf
push
fsubp
jmp
xchg
mov
cmp
adc
xor
sete
pop
test
repnz
in
sub
jl
cmp
or
add
fs
xchg
repz
cmp
cmc
dec
jno
fadds
lea
out
mov
int
mov
pop
int
test
push
fs
jb
shll
mov
xchg
inc
mov
push
jg
xchg
leave
jle
push
ud0
nop
push
xor
cld
insb
dec
cli
jl
scas
add
mov
jb
push
outsl
and
inc
and
andl
push
enter
cmpsl
mov
sahf
xor
daa
mov
cwtl
dec
mov
pushw
xchg
inc
lock
xor
push
lock
fcom
push
mov
cmp
aam
rolb
dec
push
and
xchg
push
stos
pop
dec
lods
ljmp
push
jae
out
insb
imul
out
inc
sbb
inc
ffreep
xor
mov
lods
push
cs
pop
pop
or
push
sarb
lods
xchg
add
ficomps
into
sub
xchg
add
into
dec
loopne
daa
pushf
ja
jle
sub
adc
dec
jl
in
jmp
mov
aaa
daa
or
lds
jb
addr16
out
testl
aam
mov
js
jno
xchg
jecxz
or
clc
inc
daa
ljmp
jbe
in
adc
stos
adc
cld
cmp
sbb
pop
fildll
mov
scas
jle
dec
add
pop
add
jmp
loop
dec
jno
lods
dec
pop
aaa
lret
sbb
out
pop
rolb
mov
inc
or
xor
icebp
popf
jl
pop
mov
xor
jecxz
pop
xchg
pop
and
mov
outsb
sarb
movsb
stc
jmp
sti
inc
dec
or
movsb
repnz
cmp
sub
dec
pop
jmp
imul
add
shll
sarl
mov
andb
clc
push
or
mov
xchg
cmc
scas
repnz
xchg
jo
mov
and
or
mov
lret
das
jb
mov
mov
and
jno
lcall
jmp
inc
in
cltd
adc
or
in
mov
jnp
jmp
push
test
or
xchg
fstpt
lods
js
inc
mov
xor
add
lret
pop
xor
fs
repnz
aad
mov
cmc
leave
jnp
aad
or
aaa
mov
js
xor
test
bound
loope
popa
xchg
fbstp
mov
and
mov
lock
dec
lods
sub
cmp
filds
pop
popf
sbb
add
and
sbb
mov
popf
mov
lds
lret
or
jno
mov
inc
or
push
mov
cld
mov
imul
mov
add
sbb
rcll
test
mov
jbe
add
icebp
pop
lahf
adc
fcoms
xchg
pop
add
sbb
rorb
mov
addr16
hlt
add
add
mov
aas
ret
and
je
dec
mov
fiaddl
xor
lea
cmp
and
sbb
xchg
movsl
cli
test
call
mov
push
add
push
imul
ret
or
sar
loope
inc
loop
mov
mov
fnstenv
cli
sub
shl
mov
and
lods
push
lds
fwait
mov
adc
popa
sbbl
popf
das
test
or
and
movsb
jmp
lahf
sbb
xor
test
pop
lea
dec
mov
sub
or
push
aaa
pop
in
ret
jno
rorl
push
int
cmpl
mov
cltd
sbb
pop
lea
test
jge
add
fisttps
scas
add
gs
add
xor
push
sub
sbb
xchg
test
jecxz
or
subb
rorb
and
push
mov
mov
jbe
or
cmp
xchg
and
jecxz
or
andb
xchg
mov
ret
out
jge
lret
pusha
mov
fisubl
adc
fs
sub
fisubrs
lds
rolb
push
fs
and
pop
clc
fisubrs
lret
lea
push
xchg
cmp
cltd
lahf
adc
sarl
arpl
mov
mov
int3
sti
clc
pop
add
mov
mov
xor
aas
icebp
cmpsb
dec
stc
cmpsb
inc
fstl
cmpsb
or
out
std
jg
inc
dec
mov
mov
inc
dec
rcll
lds
sbb
push
push
movsb
test
add
dec
xor
outsl
inc
clc
jns
shr
loop
pop
push
popa
jg
int3
out
adc
sub
mov
or
sbb
push
aad
imul
and
in
jmp
fsubrs
shlb
outsl
inc
in
icebp
push
xor
mov
jno
push
sbb
out
scas
mov
cmpsl
mov
xor
xchg
mov
repz
mov
jbe
in
add
stos
mov
mov
aam
cmp
push
pop
cwtl
fiaddl
push
repnz
push
mov
test
imul
mov
sbb
adc
jbe
cmp
jmp
pop
in
inc
dec
inc
cmc
jae
sbb
push
push
ret
loope
incb
fbstp
icebp
xchg
sarl
repnz
mov
sbb
inc
jp
cwtl
adc
jno
in
int
sub
or
mov
iret
lds
sub
xchg
pop
mov
inc
scas
insb
or
rorl
cmp
sub
in
bound
cmc
lds
pusha
in
test
repnz
insl
inc
cmp
test
out
ret
cmp
addr16
imul
xchg
mov
cmp
xchg
xorl
jg
xor
adc
pusha
jnp
xor
rcrl
lds
test
iret
lods
inc
jo
pop
inc
rolb
cmp
clc
jl
xchg
xorb
daa
rolb
pop
xor
sub
fldl
fs
add
xchg
sub
imul
ja
jb
jp
test
jmp
or
loope
jg
sbb
cmp
lret
ss
jb
push
lods
push
and
dec
clc
andb
mov
cmp
out
subb
sti
fisubrs
adc
sub
jnp
dec
dec
and
push
jmp
mov
rorb
pop
mov
xchg
jg
dec
lods
or
fsubp
out
dec
dec
insl
lods
fwait
push
sub
inc
into
jb
fldenv
dec
add
scas
push
dec
gs
mov
repz
jns
in
mov
pushf
cmp
popa
mov
xchg
push
add
mov
pop
daa
adc
xchg
outsl
cmp
mov
std
insl
mov
in
fwait
xchg
roll
push
sub
pop
xchg
and
dec
imul
ja
cli
cli
test
pop
shlb
loope
cwtl
pop
mov
stos
xor
sbb
movswl
dec
fsubs
xchg
aam
xchg
adc
stos
inc
pop
in
es
insl
sbb
mov
inc
sbb
sbb
and
sahf
mov
fiaddl
mov
notl
movsb
push
or
fldcw
insb
push
test
out
rcl
add
data16
repz
xchg
aaa
xor
xchg
add
push
clc
sbb
dec
cs
aad
mov
xor
jnp
rcll
jo
pop
mov
fisubl
pop
push
mov
pop
pop
in
jno
adc
movsl
and
jbe
sarb
orl
imul
sbb
sub
into
jns
push
fs
mov
lods
mov
xlat
daa
dec
sarb
push
xor
xor
mov
dec
cmpsb
sub
ljmp
jo
dec
in
add
subb
pop
inc
fisubrl
aas
mov
rep
and
lcall
push
jle
push
or
jp
cmp
scas
cli
dec
mov
aad
xor
cltd
jmp
stos
ss
das
dec
repnz
outsb
rclb
jp
push
loopne
sbb
xor
pop
jle
push
mov
rclb
aaa
mov
loop
pop
xor
js
enter
xchg
jae
push
jbe
out
fsubrs
lahf
add
enter
jb
addl
xor
mov
cwtl
notl
mov
jb
pop
icebp
xchg
sti
into
xchg
dec
sbb
mov
add
mov
xlat
stc
cmp
inc
ret
hlt
pop
shlb
ja
ret
mov
inc
repnz
mov
hlt
es
and
jecxz
inc
jmp
stc
ficoms
xchg
pop
sbb
test
mov
adc
cmp
call
mov
jnp
lock
mov
push
fdivrs
mov
sbb
lret
aad
or
int
inc
push
iret
scas
mov
jmp
jmp
cmp
lods
lret
adc
pop
pusha
out
pop
test
cmp
jp
stc
dec
push
adc
sbb
adc
ja
jne
sbb
mov
inc
cmc
into
mov
jge
pop
sub
addr16
lcall
mov
hlt
lcall
push
lcall
sbb
push
jns
jg
sub
adc
pop
adc
lds
xchg
cwtl
cmp
or
push
lds
push
out
jl
ljmp
mov
sub
mov
mov
fs
clc
shll
dec
in
pushf
cmp
orl
add
jns
mov
and
sub
fcmove
jns
pop
mov
cmp
std
dec
push
icebp
xlat
mov
and
cmc
jnp
xchg
mov
adc
mov
cmp
movsb
scas
mov
xor
inc
push
scas
out
jb
dec
mov
sar
jbe
cmp
cltd
lea
sub
mov
daa
adcb
cmpb
push
cmpsl
dec
and
xchg
dec
mov
movb
mov
and
sub
movsb
mov
mov
dec
dec
and
outsl
js
add
icebp
sbb
lea
inc
mov
mov
push
mov
jb
insb
mov
inc
test
in
mov
jle
call
nopl
insl
loop
jp
inc
jne
insl
test
adc
insl
sahf
aam
jb
fcoms
jg
jb
mov
fimull
imul
or
or
imul
mov
inc
cltd
push
outsl
mov
lock
mov
loop
rcrl
in
pop
aaa
sahf
sub
sub
mov
ljmp
xchg
jns
xchg
dec
cmp
sub
decb
inc
mov
jl
mov
pop
mov
sbb
pop
ss
in
int3
xor
repnz
mov
xor
cli
loop
orb
ss
push
mov
ja
push
mov
mov
fs
movl
outsb
and
xor
pop
adc
scas
cmp
adc
fnstenv
pop
mov
rcl
mov
cld
jge
aas
dec
sbb
add
ret
xor
dec
mov
aaa
and
enter
fnsave
cltd
sub
ss
loope
adc
ljmp
aas
mov
lret
fwait
jp
lds
inc
mov
xchg
out
add
xchg
mov
add
sahf
inc
dec
add
jl
xchg
out
aaa
mov
mov
push
sub
ss
movsl
mov
jno
mov
test
addr16
repnz
fldln2
dec
roll
je
jns
in
and
add
jbe
ficomps
add
push
mov
fiaddl
adc
movsb
add
ror
inc
or
insl
xchg
fisubrl
call
sbb
inc
rcrl
dec
sbb
pop
pop
pop
or
js
sub
push
ja
or
jecxz
ljmp
push
and
ds
dec
ss
and
cmpsl
inc
and
int
push
cmp
out
add
add
mov
pop
xor
in
je
xor
lret
repz
loope
or
leave
icebp
subl
jae
cli
sub
data16
and
or
pop
and
pushf
test
fs
dec
cmp
sub
dec
cmc
fstps
mov
push
inc
xor
sti
cmp
sbb
inc
jle
xchg
jno
pushf
xchg
dec
xchg
xchg
lods
mov
fs
xadd
loop
nop
imul
cmp
sbb
fstpl
sbb
cmp
push
adc
js
mov
arpl
add
mov
out
jmp
insl
scas
pop
sbb
cmp
dec
push
lret
inc
out
mov
cltd
pop
mov
lret
jl
test
lea
push
add
call
mov
adc
or
jb
xchg
popa
lret
insb
push
addb
and
sarl
mov
rorl
sbb
inc
cwtl
xchg
loopne
stc
jns
add
aas
dec
dec
dec
imul
je
pushf
inc
imulb
push
pop
out
sub
sub
sub
out
or
push
loopne
mov
adc
add
cmp
mov
pop
in
add
or
neg
add
pop
movsb
push
push
dec
jle
cmc
push
ja
jp
sbb
xor
inc
and
leave
lods
insl
inc
aad
mov
test
aas
push
mov
out
inc
hlt
fwait
adc
sub
loope
pop
xor
and
and
mov
pushw
cmpsb
fwait
aas
mov
aad
ds
icebp
iret
stos
scas
add
sub
movsb
inc
pop
je
or
mov
stos
mov
test
ljmp
scas
lods
gs
push
cmpsl
dec
mov
xorl
or
jge
std
shll
fcmovne
leave
jae
pop
icebp
jmp
sarl
sarb
in
xlat
jmp
aas
imul
dec
aaa
sbb
mov
mov
add
sbbl
jno
popa
mov
cmpsl
mov
mov
out
fmuls
xchg
outsb
sub
adc
cli
loop
mov
js
xor
cmpsl
sbb
lea
mov
sti
repz
dec
xor
or
scas
call
xchg
cs
add
pop
pop
jmp
or
lods
movsb
jp
adcb
mov
adc
vaddsubpd
cmp
sbb
outsb
int3
fwait
push
in
les
xor
jns
call
sahf
cmc
pop
add
dec
mov
mov
sar
and
jg
mov
jnp
lcall
sub
lods
pop
xorl
jno
leave
pop
data16
mov
rclb
inc
aam
mov
or
mov
adc
push
outsl
fld
shrl
lcall
out
fistpl
fnstenv
fnsave
das
lds
aam
jbe
imul
addl
idivl
adc
jmp
xor
adc
mov
sti
dec
pop
inc
je
push
std
or
movsl
fs
lock
fsubl
adc
or
or
bound
in
mov
les
add
hlt
nop
mulb
mov
dec
jnp
mov
test
push
cmp
fdiv
adc
push
xchg
cmpsl
jmp
in
lea
pop
inc
les
aad
push
movsb
cwtl
fs
popa
pop
sbb
add
dec
imul
fcmove
mov
mov
pop
mov
push
sub
mov
pusha
loope
xor
xlat
pop
and
mov
jp
lods
aam
decl
jmp
out
std
sbb
divb
into
aad
pop
fcmovb
scas
push
andl
mov
mov
std
xor
adc
or
lcall
cmp
data16
scas
xor
or
adc
fwait
in
lea
push
lret
sbb
cmp
mov
and
adc
mov
in
adc
push
add
insl
es
clc
sbb
mov
fs
mov
xchg
pop
insb
cld
dec
mov
ret
jge
xorb
adc
popa
dec
mov
ret
add
mov
je
notl
xchg
iret
fs
js
gs
push
imul
hlt
inc
imul
frstor
dec
xor
jp
test
jp
cmp
cli
sub
sub
mov
mov
jmp
lret
xchg
test
jmp
loope
lcall
xor
out
pop
xchg
mov
loope
xlat
sbb
fs
jmp
gs
adc
cltd
in
imul
out
fisttpl
inc
jno
cli
cmp
and
test
mul
int3
or
mov
imul
das
mov
stos
push
out
icebp
test
insl
cli
sbb
xchg
xchg
mov
out
std
dec
stos
jle
fucomp
call
xor
xchg
pushf
cmc
sbb
sbb
popf
add
fs
and
xor
pop
test
push
jl
dec
jns
dec
or
sub
mov
xor
addb
or
mov
stos
jbe
ja
js
test
push
mov
daa
jno,pt
arpl
jb
pop
loope
es
push
lods
mulb
or
insb
push
xlat
dec
mov
xchg
sbbb
adc
enter
push
mov
sub
lret
clc
xchg
mov
add
int
adc
or
jge
dec
xor
xchg
mov
or
jmp
jge
add
xchg
insb
bound
push
cmpxchg
pop
lock
fnstenv
outsb
imul
or
pop
and
sahf
je
lds
mov
jmp
pop
fwait
sbb
insl
sbb
sub
ss
arpl
pusha
je
mov
aas
mov
iret
pusha
mull
enter
aad
iret
mov
sbb
inc
cmp
cmp
enter
loopne
cmpsl
jle
fstps
mov
adc
aam
dec
aas
cmc
cld
mov
mov
scas
aad
sub
cwtl
mov
std
scas
stos
clc
sub
sti
cmp
push
jo
bound
lock
or
add
pop
cmpsb
test
arpl
out
jns
lret
push
adc
cli
movsb
or
mov
jne
sub
mov
gs
imul
xchg
sub
mov
movsl
mov
cmpsb
mov
nop
loop
shr
adc
sub
push
mov
outsl
mov
or
lret
or
out
out
jl
sub
xchg
push
push
loop
sarb
or
repz
and
jg
xor
jbe
das
pop
or
arpl
mov
mov
or
cmpsb
test
rcrl
jbe
cwtl
pop
pop
pop
jno
mov
cli
adc
aas
aad
mov
lea
mov
mov
fwait
or
lods
into
mov
and
add
inc
fwait
aad
and
not
pop
cmp
out
push
das
add
mov
push
int3
repz
pop
lods
repz
rcrl
ss
cmp
fsts
repz
nopl
dec
aam
xchg
sti
mov
push
cld
shl
mov
mov
icebp
outsb
inc
jne
sub
jns
xor
cmp
std
cmp
test
and
inc
or
inc
xor
insb
xchg
push
sti
out
jb
orl
inc
xor
lods
stos
push
das
nop
mov
sahf
lods
call
add
ljmp
dec
jae
mov
test
es
and
mov
cmpsb
orb
mov
mov
sbb
fidivs
clc
cmp
push
jno
mov
out
jecxz
jge
mov
and
icebp
cwtl
xor
or
push
mov
xor
xchg
fcomps
pop
dec
mov
adc
cmp
push
or
test
jge
jmp
cmp
pushf
push
cs
mov
pop
aad
pushl
hlt
out
pop
mov
cld
cmpsl
inc
push
int
stos
fiaddl
mov
out
outsb
xchg
cmp
cld
push
mov
outsb
pop
fs
lock
sub
pushf
call
add
mov
dec
sub
sbb
leave
popf
fwait
gs
test
jb
mov
mov
mov
mov
aam
inc
adc
jecxz
outsb
inc
enter
adc
lcall
stos
leave
shrl
cmp
sbb
push
sbb
inc
mov
aaa
adc
jl
add
xchg
add
ret
popf
xor
fidivl
iret
aaa
in
cld
mov
rorl
and
mov
jl
loop
filds
lcall
mov
push
pop
jb
xchg
insl
das
and
test
adc
shlb
out
in
mov
repz
sub
sbb
pusha
mov
mov
mov
bound
xor
xchg
test
stc
xchg
jp
pop
in
mulb
gs
cli
test
pop
call
insl
mov
mov
xlat
jl
xchg
xchg
clc
push
inc
cwtl
push
mov
push
mov
dec
sub
sub
shrb
sbb
push
pushf
ja
fsubrl
loop
mov
xchg
call
mov
jns
loope
jle
call
imull
or
lahf
mov
push
sar
or
mov
adc
sbb
rcrb
cld
pop
xchg
loopne
fcmovnb
cmp
mov
pop
imul
mov
push
movsb
leave
xchg
push
sbb
xor
stos
mov
outsl
cli
out
push
cmpsb
xor
mov
loope
add
lcall
adc
and
cs
lods
bt
imul
call
shlb
ja
inc
push
push
cmp
cmpb
mov
sub
lods
dec
add
sbb
mov
bound
and
orl
and
mov
adcl
add
sbb
xor
dec
popf
push
sbbl
cld
cltd
add
dec
icebp
out
cmpsb
rcll
xor
jge
xchg
pop
sub
into
ss
aam
insl
cmp
sbb
add
jmp
bound
sbb
ret
out
fdivrl
lea
mov
test
sub
cmp
xchg
cs
dec
xorl
outsl
push
outsl
jp
mov
je
lcall
cmp
sub
popf
cli
or
and
sub
xor
inc
mov
call
scas
stos
nop
idivl
adc
dec
xor
pop
jo
mov
pop
mov
clc
sbb
inc
sbb
mov
adc
data16
iret
test
mov
in
push
ret
pop
xor
jmp
lods
lret
rolb
push
ds
and
sbb
xchg
jmp
fsts
sbbl
inc
cld
fsubs
push
or
dec
idivb
cmc
imul
testb
lock
dec
mov
in
into
pop
dec
lds
test
sbbl
loope
cli
lret
or
pop
pop
popf
pop
loope
inc
mov
mov
pop
ret
fs
mov
jp
out
sub
mov
bnd
lret
je
and
stos
add
jo
fsts
cld
push
fsubrl
bound
dec
mov
mov
fdivr
or
rorb
dec
cmp
cmpsb
data16
add
rcrb
in
xchg
mov
dec
lret
mov
lods
movsl
insl
ret
filds
dec
add
notl
imul
in
adc
mov
pushf
jp
sbb
inc
cwtl
adc
cmp
pop
xorl
test
fwait
or
cmp
jle
xor
xchg
mov
out
jmp
iret
imul
xor
stc
lcall
out
repnz
enter
xchg
xchg
xchg
insb
sub
orl
pop
sti
fbld
pop
mov
push
mov
std
rorb
loopne
repnz
stos
cmp
std
or
aam
testb
sbbl
inc
repz
iret
fists
call
aas
loope
xor
mov
sbb
push
pop
divb
sbbb
xchg
jle
outsl
or
ficoms
es
ret
cwtl
popa
fildl
dec
mov
iret
xor
dec
insl
xlat
push
mov
jbe
pop
popa
les
bound
loopne
xor
and
test
push
mov
std
jl,pt
pop
int3
xchg
add
cli
xor
int3
mov
into
xchg
push
xchg
loopne
aaa
jbe
mov
adc
inc
cmp
ds
jnp
lahf
mov
push
fwait
xchg
mov
bound
sbb
mov
scas
test
hlt
fidivrl
inc
lea
push
pop
test
in
mov
sub
push
lahf
xor
jns
and
or
jbe
fldenv
add
testl
or
add
out
mov
repnz
sub
cmp
cli
outsb
lahf
mov
test
movl
scas
xchg
addb
dec
mov
pop
jle
js
inc
test
dec
scas
data16
xlat
or
xchg
mov
mov
push
movsl
sarb
xor
in
xchg
mov
scas
cmc
out
push
lret
das
lock
adc
int3
hlt
inc
enter
push
ret
push
adc
loope
dec
out
lret
clc
xorb
call
jnp
sbbb
gs
mov
dec
ja
rorl
jle
push
sbb
outsl
add
aaa
pop
or
xor
jp
adc
out
sarl
inc
arpl
jae
mov
xor
in
xor
lods
push
subb
sbb
mov
or
repnz
and
cmp
xchg
outsb
and
dec
scas
mov
clc
jnp
mov
pop
cli
sbb
je
pop
das
inc
loopne
and
ds
loopne
or
jno
jbe
aas
test
cld
stos
sbbb
adc
sbb
pop
mov
sbb
test
orl
vmread
jp
jp
mov
aad
or
mov
ds
jecxz
push
data16
shrb
push
rcrl
ret
mov
notl
and
das
dec
xchg
push
jl
xchg
es
add
mov
cmpsl
mov
adc
sbb
pop
jp
sbb
inc
xchg
pusha
insb
inc
dec
pop
aaa
xchg
add
shrl
aam
xor
insb
roll
lret
xor
mov
xchg
leave
push
jl
and
jns
stc
out
fadds
lock
pmulhw
repz
cld
stos
jecxz
cmc
ret
xchg
push
mov
dec
and
rorl
fs
repz
sub
aad
cmp
jge
mov
mov
incb
adc
mov
mov
xchg
imul
dec
outsb
outsl
sbb
push
cmpsl
stc
jg
and
xlat
daa
inc
push
mov
mov
mov
popf
scas
push
jae
dec
sub
sbb
jmp
aad
insl
inc
jecxz
jae
jae
outsl
adc
int3
js
push
sub
mov
add
jns
add
inc
mov
or
pop
mov
shl
adc
lret
divb
setp
loopne
mov
jne
jge
call
inc
movsb
cmp
in
cli
jnp
sbb
mov
pusha
js
mov
push
lret
cwtl
pop
mov
xchg
jns
sbbb
imul
popf
shr
inc
ss
ljmp
adc
ss
add
dec
gs
bound
out
outsl
sub
pop
push
pop
lods
pop
push
xlat
ljmp
shr
cmc
sub
test
cmp
pop
jae
sbb
lret
repz
imul
mov
out
cmp
cmp
cmp
cmp
sbb
ss
push
mov
xchg
xor
int
into
jno
ret
pop
dec
inc
lods
ret
mov
mov
sub
inc
enter
imul
pop
sbb
iret
in
scas
loop
cmpsb
movsl
inc
push
outsb
push
pusha
cltd
fisttpl
dec
dec
fcmovu
cmc
aam
aad
xor
lds
out
mov
out
pop
sub
push
fsubrs
push
inc
cmpsl
or
push
add
jne
inc
dec
ss
xchg
in
into
lcall
or
ss
pop
sti
sub
adc
imul
xor
cmp
inc
test
ss
lds
cltd
pop
aad
ret
ljmp
ret
dec
loopne
cmp
xchg
lret
jno
std
xor
dec
popf
notl
out
pusha
insl
insl
cmp
sbb
pop
xchg
lret
int3
mov
xor
flds
aam
sub
in
sbb
rol
sub
ja
pop
insb
mov
push
fcmovne
lret
dec
les
xor
push
push
dec
int
cltd
pop
and
jbe
jb
in
jge
rcl
push
loop
imul
mov
push
stc
jb
fwait
push
xor
out
aad
mov
test
cmp
xchg
sbb
add
testb
cs
sub
cmp
add
sub
lods
icebp
es
pop
dec
imul
lret
js
sarb
pushl
mov
call
aas
xor
stc
js
adc
inc
sub
loop
out
push
dec
mov
add
and
sahf
enter
mov
sbbb
sub
adc
inc
mov
jge
hlt
cmp
pushf
sbb
inc
test
sarb
dec
push
lods
mov
ret
scas
inc
mov
das
mov
push
xchg
cmp
bound
mov
leave
xor
push
mov
push
mov
inc
push
cwtl
mov
ror
imul
jge
lret
pop
pop
es
inc
and
mov
inc
xor
hlt
jne,pt
lods
adc
jg
pop
or
ds
jae
int
movsl
fs
aam
pop
sub
mov
lds
cmpsl
jb
lock
ja
pusha
je
cmp
jle
dec
sub
out
mov
shrb
scas
jno
insl
shr
jle
pop
mov
aam
test
jge
dec
adc
jae
xchg
add
mov
xlat
cmp
bound
push
xor
mov
int3
adc
je
mov
mov
inc
xchg
dec
add
cmpsl
pushw
push
data16
jne
add
fsubrp
rorb
mov
arpl
inc
xor
mov
sbb
add
fdivs
xchg
mov
int3
push
andb
sub
dec
int
outsl
adc
imul
fiaddl
push
data16
loopne
insb
test
lods
ror
push
call
cmp
outsl
shll
dec
mov
cs
out
cmp
mov
mov
ret
loopne
std
out
sbb
push
data16
es
push
dec
dec
pusha
test
cmp
aaa
pop
notl
sbbb
aam
push
stc
cmpsl
stos
std
jno
call
sub
xor
iret
push
jne
jmp
pop
lahf
cwtl
mov
push
lcall
adc
cmp
jecxz
adc
enter
add
lahf
sbb
sbb
fstpl
out
mov
push
mov
add
sahf
pop
and
mov
sub
mov
mov
xchg
add
adc
fst
add
loope
popf
lods
jno
sbb
or
mov
xchg
push
stc
push
and
mov
cmpsl
in
cmc
mov
sub
mov
inc
imul
lcall
xor
sub
in
icebp
icebp
add
push
cmp
xchg
pop
push
sbb
cmpsl
insb
add
mov
roll
push
inc
jbe
cmp
mov
mulb
push
cmpsl
arpl
iret
cmp
cmp
adc
mov
into
cwtl
into
into
hlt
mov
mov
lcall
mulb
mov
add
subl
and
enter
inc
out
cmpsb
pop
aam
insb
and
fnstsw
jbe
mov
ja
jns
adc
mov
pop
mov
adc
mov
xor
sub
inc
insl
out
push
pop
les
xor
idivb
cmc
dec
jne
or
scas
jns
inc
jae
mov
aam
xor
je
mov
cmpsb
orl
arpl
mov
lods
mov
or
xchg
jae
xchg
mov
and
push
aas
or
inc
mul
mov
and
loope
push
jmp
pop
mov
data16
jp
scas
cwtl
lods
xor
int
sbb
iret
xor
push
cld
add
sub
and
mov
test
cmp
cli
pop
inc
aas
ret
pop
aas
mov
scas
push
xchg
xchg
icebp
add
in
push
shrb
mov
push
xchg
xchg
push
and
mov
ret
fnstcw
call
fsubl
ss
push
imul
sbb
sahf
scas
out
in
add
adc
int3
je
iret
shl
mov
lret
arpl
mov
sub
das
repz
mov
orl
mov
jnp
xchg
mov
or
and
lret
sub
push
mov
int3
lret
popf
sarl
xchg
fildl
ja
and
pushf
cmp
pop
dec
sub
adc
sub
mov
out
hlt
cmpsl
jecxz
or
xor
push
pop
jne
mov
mov
in
sbb
or
fwait
sub
pop
pop
ret
or
mov
popf
stc
pop
into
sbb
add
ljmp
push
fistps
loopne
or
pop
and
pusha
sbb
sub
fistl
mov
rcrb
mov
xor
and
outsl
fadds
repz
xchg
jge
int
inc
rcrb
nop
pusha
fwait
mov
cs
add
jle
ss
jo
int3
cltd
cmp
mov
mov
out
mov
xchg
sti
jo
xor
loopne
or
int
add
jge
push
push
ret
xchg
adc
ret
or
jbe
dec
hlt
es
jne
lods
mov
jne
mov
xor
leave
adc
dec
scas
fistpl
sbb
adc
cmc
mov
mov
push
stos
xchg
shrb
sbb
cmp
mov
push
mov
fsubr
lret
lods
int3
andb
cmpb
cmp
xchg
call
ret
mov
mov
out
push
sub
jb
push
mov
push
aaa
je
sub
sub
jae
mov
mov
lods
adc
xor
jne
push
ds
call
sub
cmp
int3
subb
push
mov
and
out
mov
cli
std
and
or
add
sbb
fs
sbb
lock
shrb
int3
sbb
stc
mov
cwtl
loop
mov
or
aaa
call
inc
jecxz
scas
repz
aaa
cmp
and
loop
lock
xchg
cmpsl
int3
xchg
cmp
push
outsl
pop
mov
jno
mov
mov
and
push
jg
xchg
cmp
lock
xorb
and
dec
in
mov
pop
lods
inc
out
inc
dec
mov
lret
test
or
mov
gs
xchg
push
jecxz
jb
xrelease
out
jp
ret
sub
cmpsb
negl
jae
xchg
ret
adcl
fcompl
mov
nop
lods
pop
jge
mov
rcll
out
jle
lock
test
jecxz
ficoms
in
push
mov
lea
enter
pop
xchg
sahf
push
jge
xchg
mull
mov
scas
or
pop
ss
cmpsb
inc
popa
dec
adc
xor
test
test
xlat
aad
repz
xchg
fcmovnb
cli
out
loopne
nop
inc
push
push
mov
jb
and
addr16
cmp
push
push
test
lcall
in
add
pop
hlt
pop
mov
xchg
mov
test
and
jecxz
sbb
imul
pop
mov
push
mov
js
inc
popa
fcmovu
mov
mov
add
leave
popa
ja
shlb
ljmp
testb
pusha
lods
and
das
push
or
inc
dec
out
divb
popa
add
adc
mov
cmpsb
xchg
jo
add
xchg
nop
addl
jl
jo
out
xchg
push
aas
push
psraw
mov
pop
addr16
mov
jae
divb
out
cmpsb
test
pop
mov
jbe
xor
jo
dec
sub
sti
xchg
mov
mov
and
cmp
adc
stos
mov
pop
add
cmp
subb
pop
mov
fisttps
and
cs
cvtdq2ps
pop
jae
js
mov
cmp
pop
adc
mov
mov
or
pushf
mov
subl
stc
push
int3
icebp
add
scas
lods
scas
mov
cmp
jo
push
push
mov
cmpsb
sbb
lea
repnz
xor
pop
push
jno
xchg
mov
lds
das
jecxz
cwtl
push
cmp
lods
mov
jnp
in
sbb
sahf
adc
fcompl
push
ljmp
lret
icebp
js
sbb
mov
into
cltd
ret
aas
xchg
int3
outsb
xor
pop
mov
icebp
push
dec
imul
jle
or
xchg
jle
adc
mov
cwtl
jb
inc
mov
repnz
in
arpl
int3
addr16
into
lret
sub
test
xchg
in
jno
cwtl
sti
jo
push
mov
pusha
lock
inc
jmp
loope
jbe
aas
xchg
outsl
sahf
mov
xchg
mov
loopne
mov
adc
push
mov
sub
cs
out
pushl
dec
jb
cmp
data16
scas
int
hlt
daa
pop
pushf
or
xchg
xchg
cmp
js
sbb
clc
out
popa
mov
jae
rcll
inc
lret
and
shrb
push
aaa
shrb
arpl
rcrb
hlt
push
jl
mov
test
mov
sarb
mov
cmpsl
inc
mov
or
stos
add
popf
in
scas
pop
and
aaa
sbb
jp
xchg
jl
pusha
inc
mov
testb
mov
cmp
lret
xchg
mov
bound
int
push
push
pop
lea
push
and
mov
sbb
adc
cli
out
or
data16
sbb
push
pushf
add
in
mov
push
lahf
in
and
das
arpl
ret
shlb
mov
int
call
dec
lods
xchg
cmp
fistpl
int
cmp
inc
lods
inc
fdiv
add
rorb
add
sbb
or
shlb
inc
xorl
sarb
pusha
add
xchg
andl
push
mov
sbb
imul
or
push
std
jno
in
pop
cmp
ja
std
mov
lret
push
shlb
add
push
fs
mov
lahf
lret
jp
add
arpl
scas
dec
push
mov
cld
add
cmp
pop
daa
pop
sbb
inc
out
add
mov
dec
mov
mov
jecxz
sbb
or
iret
jns
movsl
out
insb
test
sbb
dec
sti
adc
mov
aam
cmpl
inc
dec
jmp
xchg
pop
mov
cmpsb
fldenv
lea
xchg
fstl
push
data16
xor
shlb
into
out
mov
and
inc
mov
pop
pop
push
mov
dec
dec
push
xchg
pop
inc
es
and
xchg
out
xchg
add
mov
pop
aam
and
push
in
xchg
mov
lock
jp
dec
pop
int
sbb
push
pop
les
jno
ja
aad
incb
incb
lahf
pop
or
push
fsubl
loopne
or
adc
push
cmp
enter
cmp
int3
outsb
mov
sbb
lds
add
and
sub
ret
test
cmp
sbb
push
mov
mov
ret
gs
sahf
xchg
out
fcmovne
fidivrs
and
jg
mov
ljmp
stos
loope
int3
aam
les
push
ret
push
icebp
and
lahf
pop
or
mov
jbe
test
pop
add
mov
add
stos
outsl
xchg
in
outsb
shlb
sub
sub
jae
gs
daa
xor
movsl
ss
push
and
mov
fisttpll
out
dec
mul
mov
mov
stc
sbb
iret
inc
das
div
push
sbb
jle
add
mov
pop
mov
add
and
cmp
sbb
sti
xchg
movsl
push
dec
mov
mov
call
jmp
call
mov
fsubr
mov
insb
lret
out
inc
loopne
sbb
fwait
push
out
loope
add
dec
xor
inc
mov
sbb
fwait
xchg
sar
cmc
scas
jge
nop
push
shll
test
inc
in
inc
jp
adc
jg
jnp
jnp
sbb
insl
mov
xor
insb
into
in
mov
cmp
icebp
inc
lret
mov
fildll
mov
int
add
push
cmpsb
mov
pop
lahf
sbb
push
add
jnp
mov
xchg
mov
imul
loope
push
mov
test
mov
rclb
jle
add
xchg
jno
sahf
cmp
or
jl
sbb
adc
lock
fdivrs
push
push
orb
ds
lret
xchg
out
dec
data16
sbb
shr
or
cmp
xor
fmul
stos
sbb
fildl
shlb
jb
movsl
and
andb
sbb
stos
js
mov
push
dec
xor
mov
or
iret
lods
add
jecxz
push
ss
imul
jmp
jmp
mov
popa
sub
out
push
aad
jb
cmp
gs
mov
cwtl
mov
pop
sub
gs
arpl
adc
mov
arpl
lahf
dec
cwtl
aas
neg
push
and
rorl
or
out
pusha
scas
fstps
jge
js
push
int3
sub
push
mov
add
js
jns
adc
loope
movsl
push
jecxz
inc
repz
dec
imul
adc
mov
sub
jmp
pop
fbstp
jo
icebp
add
push
ret
jbe
mov
sub
int3
push
imul
pop
mull
lock
popf
popf
fstl
mov
mov
pop
stos
cmp
or
out
repnz
hlt
inc
mov
or
dec
add
sub
dec
xchg
fcmovnbe
pop
lret
add
in
pop
pop
ljmp
dec
div
and
aaa
adc
enter
fyl2x
or
lahf
add
mov
or
les
insl
test
inc
jb
lea
and
dec
or
ds
shl
cli
pop
int3
dec
push
and
lcall
adc
xchg
in
inc
inc
and
dec
cmpsl
and
and
scas
inc
mov
subb
jmp
stos
je
cs
out
adc
neg
es
lock
popf
and
add
fimull
jne
orb
cmp
loop
pop
mov
shrd
or
cmp
mov
dec
mov
aam
mov
mov
dec
leave
lock
mov
mov
lock
movsb
scas
mov
pop
push
mov
cmp
dec
mov
sbb
dec
fsubp
int
out
pop
ja
and
fildll
fsubr
add
xor
fidivrs
dec
nop
loop
push
out
push
outsb
cmp
cli
push
jbe
mov
cmc
in
out
push
sub
jmp
inc
and
mov
push
xorl
repnz
pop
mov
xor
jecxz
out
push
push
pop
inc
repnz
push
rcrl
sahf
pop
xlat
dec
mov
jno
jmp
and
insb
cmp
and
xchg
mov
test
addl
mov
lods
aam
fbstp
or
ja
aad
xchg
lds
sub
and
pushf
stos
or
add
imul
or
mov
sbb
adc
pushf
pop
int3
scas
cli
popf
xor
cmovb
and
and
sbb
mov
mov
out
jmp
in
inc
pop
ficompl
cld
xor
inc
repz
icebp
or
xor
loop
pop
pop
and
iret
mov
and
push
xor
jmp
sub
bound
sbb
dec
rcl
fsts
pop
mov
rcl
push
in
adc
dec
ret
test
loope
or
cmp
or
cmp
and
push
jl
dec
adcl
hlt
cmp
xor
popa
xchg
push
add
incb
add
adc
mov
mov
out
add
sahf
jge
fs
xchg
xor
outsl
mov
sarb
or
cmp
test
xchg
and
or
and
xchg
imul
sti
fwait
mov
or
fidivs
inc
in
or
add
push
neg
and
adc
pop
js
cmp
pop
ja
add
sbb
sarb
inc
cltd
push
xor
popf
decb
inc
stos
push
sbb
or
movsb
mov
push
or
shlb
adc
and
adc
popa
mov
pop
dec
ret
inc
lcall
sub
enter
loopne
inc
cwtl
jge
loope
jge
jnp
add
sbbb
pop
pop
pop
es
jns
mov
jnp
mov
rcrl
sarb
lret
push
andl
jle
faddp
jmp
and
movsl
jp
jmp
jg
mov
push
pop
sub
xlat
jo
aam
xor
rcl
xchg
inc
xlat
xor
mov
sbbb
nop
hlt
and
cmp
in
rcrb
lahf
jmp
into
xchg
push
iret
bound
test
push
jmp
loope
push
dec
dec
xor
xchg
jmp
fwait
adc
outsb
lds
adc
test
push
jle
aam
in
sti
dec
sbb
arpl
mov
sbb
xchg
mov
aas
sbb
scas
in
mov
test
fnstsw
icebp
frstor
iret
cmp
loopne
ficoms
cwtl
cmp
movsb
push
outsb
pop
sahf
jmp
lea
push
xchg
bndldx
mov
int
test
jae
mov
jne
enter
mov
stc
jmp
movsb
dec
lock
and
std
sbb
enter
inc
sbb
sub
arpl
popa
leave
or
fs
xchg
and
jp
and
jo
lods
rorl
test
ffreep
test
sbb
mov
pop
xchg
sbb
pop
lcall
cmpsb
ret
jle
arpl
je
sub
pop
ret
push
lods
addr16
sti
lret
ss
icebp
cmc
xchg
mov
add
jmp
dec
aas
pop
mov
sub
mov
and
sub
or
subb
cmc
hlt
add
gs
imul
outsb
or
cld
xchg
cmp
in
test
leave
mov
sub
rcl
lret
push
push
loop
cmpsb
mov
sti
in
popa
mov
ss
jmp
mov
das
adc
cmpsl
shl
dec
sahf
and
pop
inc
scas
lret
xchg
mov
pop
ret
xor
mov
push
adc
xor
xorb
add
test
fisttps
aas
xchg
inc
jbe
popa
imul
sub
adc
aaa
push
lcall
loopne
pop
int3
or
add
pop
and
pop
inc
and
sbb
pop
jne
sub
outsb
lahf
pop
add
movsb
arpl
dec
and
jnp
stos
sub
aas
and
outsb
mov
inc
lea
sub
jmp
aaa
sub
ljmp
aad
movsb
adc
stos
or
xlat
gs
movsl
int3
fidivl
dec
pop
jecxz
or
jl
inc
cmp
out
mov
dec
push
lods
mov
nop
mov
xchg
inc
ja
repnz
dec
mov
fildl
arpl
clc
xlat
mov
add
sahf
and
sbb
in
mov
xchg
adcb
push
mov
and
call
repz
in
adc
dec
pop
mov
mov
mov
dec
push
inc
incl
notl
cmp
mov
lock
lcall
out
dec
dec
fwait
lahf
push
fbstp
ja
push
add
adc
cmp
mov
std
xor
imul
sti
mov
add
and
mov
or
gs
sbb
movsl
sbb
inc
sbb
add
xchg
push
cmp
movsl
mov
jl
dec
cli
mov
iret
mov
mov
movl
pop
pop
jmp
xor
xchg
pop
test
add
mov
sbb
push
int
mov
xchg
mov
xchg
gs
imull
loop
je
mov
xchg
pusha
pop
cmpsb
pop
gs
and
out
or
lea
adc
mov
mov
stos
jp
and
pop
jg
mov
pop
icebp
ret
adcl
pop
cmpsb
inc
mov
loope
leave
cwtl
leave
sub
mov
cmpb
fs
ja
js
mov
insb
lcall
jp
subl
jmp
jg
jp
je
les
mov
bound
push
insb
cltd
pushf
test
and
ljmp
push
les
adc
lcall
hlt
push
adc
inc
fstps
pop
testb
cmp
jbe
dec
fldenv
push
inc
icebp
push
outsb
push
daa
shl
imul
orl
pop
fidivrs
or
dec
popl
daa
mov
xor
push
jge
ret
dec
inc
jl
js
rorl
out
mov
inc
iret
gs
in
clc
rorb
jle
fidivrl
pop
jbe
mov
scas
inc
into
mov
push
sub
dec
movsb
stos
xor
inc
subl
jnp
out
imul
push
mov
jle
mov
pop
out
sub
ror
jecxz
lahf
dec
xor
or
xor
outsl
xchg
aas
bswap
fbld
pop
sbb
lods
clc
push
inc
adc
leave
movsl
mov
and
shll
jl
or
push
and
scas
xor
aaa
push
inc
inc
push
mov
xor
xchg
jae
push
int
push
inc
jno
in
data16
jmp
adc
mov
pop
push
xor
dec
in
out
lret
jp
out
xor
fmull
adc
stos
mov
loop
add
push
andb
lret
mov
rcl
lret
bound
mov
inc
or
xchg
xorl
pop
imulb
aad
cmc
fimuls
pop
ja
push
mov
cltd
cmp
data16
pop
xchg
call
lcall
push
fidivrs
lods
ficompl
out
fs
cltd
int
scas
jp
dec
ja
iret
add
xchg
cmp
mov
mov
dec
stos
mov
in
rcrb
insb
movsl
xlat
and
es
lods
pop
push
cmp
dec
out
or
jge
jmp
jmp
push
jle
in
xchg
out
sub
sbb
pop
jmp
jg
jbe
adc
sahf
xor
pusha
ror
test
mov
hlt
lods
jg
fnstenv
popf
cmpsb
mov
cmc
xchg
inc
movb
inc
dec
inc
int3
mov
movsl
ret
mov
jae
js
outsb
mov
mov
ret
jmp
aas
jne
xchg
push
ljmp
add
int
pop
lahf
jb
inc
cmpxchg
lret
sbb
push
jl
or
mov
dec
repz
jo
loopne
nop
std
mov
mov
xorl
repz
nop
inc
adc
and
stos
and
cmp
jecxz
inc
xor
dec
pop
mov
or
jmp
movsl
ja
mov
xor
pop
jmp
fld
testb
mov
loope
aas
dec
adc
xchg
push
push
mov
jg
xchg
jle
clc
mov
cmp
nop
xchg
jecxz
lds
mov
inc
jno
xchg
push
in
lock
ljmp
xchg
jb
loope
sub
mov
adc
fistps
add
sbb
hlt
cmp
pushf
and
lods
mov
push
fs
lds
insl
inc
push
xor
cwtl
and
push
cmp
jae
sub
mov
sbb
cmp
mov
cmp
push
mov
push
cwtl
inc
mov
mov
xchg
jne
cli
and
roll
or
test
cs
jl
loop
add
dec
leave
mov
lret
ucomiss
loop
movsb
mov
or
loopne
out
gs
push
ffreep
iret
nop
or
lods
pushf
xrelease
dec
loope
testb
out
popf
pop
insl
call
push
imul
ds
add
or
popa
xchg
sub
mov
test
pusha
stc
pushf
cli
or
rclb
addb
mov
out
fstpt
iret
mov
std
hlt
sub
imul
outsl
cmc
test
movsb
in
fisubl
insb
push
xor
jecxz
xchg
loope
and
mov
push
jae
sbb
cli
push
ja
inc
mov
das
arpl
fnstenv
pop
js
inc
ljmp
push
mov
bound
add
push
cmpsl
mov
sahf
popf
lret
js
fdivs
test
xor
pop
mov
xor
add
fincstp
mov
arpl
mov
dec
fwait
cli
bound
jno
cmp
icebp
jo
inc
jne
jns
mov
aad
cli
adc
add
stos
ret
xor
imul
mov
xor
xor
cmp
in
push
push
sbbl
sub
jge
push
std
mov
sub
rol
cwtl
in
inc
adc
dec
cld
in
mov
pop
cmpsb
orb
inc
add
incl
mov
push
leave
xchg
cli
push
xor
icebp
mov
xor
mov
mov
shlb
add
popf
sti
movsl
mov
mov
dec
sub
sbb
push
jl
mov
ret
ret
das
dec
push
das
xchg
inc
lret
insl
mov
clc
mov
sub
popa
jb
push
imul
mov
push
movsb
push
xchg
cwtl
sub
cmp
inc
int
and
fwait
std
je
jge
stc
movsl
sbb
in
xchg
push
in
bnd
lret
add
into
push
and
push
xchg
lock
push
mov
xchg
and
ret
add
clc
add
daa
xor
lds
mov
test
scas
int3
or
xor
add
jnp
ljmp
or
mov
fidivrl
ljmp
lret
xor
arpl
rorl
mov
or
shr
xchg
negb
sbb
cmp
adc
loop
cmc
jecxz
fidivs
push
lea
pop
sbbl
mov
mov
jle
pop
add
fstps
pop
cmc
pop
flds
lret
enter
inc
adc
mov
imul
fbstp
addr16
push
mov
add
and
pop
mov
fs
jge
cmpsl
aad
int
push
xchg
popa
gs
dec
push
push
mov
mov
lret
push
push
jmp
and
ljmp
adc
popa
xchg
dec
xorb
imul
xchg
gs
jno
or
inc
inc
or
aad
and
ja
pop
ror
adcb
in
addr16
test
fisubs
cmc
out
stos
in
dec
in
pop
or
call
sub
mov
add
ljmp
mov
daa
insl
ljmp
aas
pop
es
pop
hlt
xor
mov
rcl
inc
sbb
lret
enter
ja
test
bound
push
dec
dec
idiv
lds
dec
jecxz
andl
xchg
sbb
mov
cmp
mov
pop
daa
addr16
mov
ret
imul
inc
ficompl
fistl
rolb
cmp
in
adc
sub
mov
ret
popf
and
jp
jl
mov
push
mov
fimull
rorl
and
lret
icebp
test
pop
lods
bound
fcmovu
enter
inc
lds
ds
mov
pop
jb
or
das
mov
mov
push
movsb
testw
and
dec
mov
pop
pop
add
test
inc
xlat
enter
rolb
rclb
mov
ret
push
or
fcomp
xchg
inc
and
or
inc
addl
dec
loopne
test
jecxz
xchg
cmp
mov
ss
sbb
push
dec
pop
xor
je
sub
lods
xor
movsl
in
sub
xchg
pop
push
out
sbb
sub
adc
jnp
cwtl
push
fisubl
ljmp
cld
mov
push
outsl
fcoml
stc
das
push
sub
xchg
cmp
fistpll
mov
sub
andl
cli
xor
adc
or
mov
adc
repnz
aas
sbb
in
jg
rorb
sub
xchg
adc
je
pushf
leave
sbb
pop
je
loopne
push
inc
xchg
ss
popf
adc
xor
pop
push
jbe
and
in
leave
dec
sbb
filds
popf
mov
inc
jne
outsl
flds
ja
sahf
clc
cmpsl
frstor
lret
mov
popf
jge
fcomp
add
mov
popa
cmpsb
sarb
push
xchg
add
inc
push
outsb
fistl
in
jno
movsl
popf
xor
pop
dec
add
cmp
sar
xor
pop
sar
sub
xor
sahf
gs
stos
dec
mov
stos
xchg
sub
cmp
cld
test
cmp
lea
add
call
daa
and
sbb
xchg
lret
add
out
cmp
fidivrl
push
aad
enter
rolb
xor
imul
mov
mov
mov
ljmp
mov
mov
adc
or
stos
mov
mul
mov
cmp
rcrb
or
test
sahf
mov
ja
adc
sbb
pop
jbe
gs
lock
cwtl
and
cmp
arpl
gs
push
iret
das
mov
add
nop
xor
pop
and
cwtl
sub
shll
mov
mov
xor
push
sahf
add
shrl
cld
mov
gs
out
repnz
push
mov
lods
incl
sub
fs
mov
or
nop
xchg
adc
dec
sbb
mov
xor
xlat
adc
lock
in
pusha
out
mov
and
inc
adcb
or
xchg
call
mov
mov
push
aam
insl
js
mov
fsts
mov
popa
lods
sbb
leave
addb
push
addr16
xchg
mov
dec
sbb
mov
ljmp
fistpll
add
sub
rclb
mov
adc
xchg
sbb
or
sbb
sub
inc
jmp
movsb
and
enter
jle
fistps
aas
divl
icebp
data16
inc
std
push
jo
outsl
add
popa
mov
xchg
or
rclb
push
scas
call
inc
dec
out
stos
fidivrs
sub
fstl
leave
pusha
repz
in
adc
lds
daa
xchg
stc
add
stc
lods
lds
mov
out
jg
ljmp
in
mov
sbb
pop
ds
jge
push
lret
jno
jnp
jecxz
aad
jbe
pop
inc
cmpsl
dec
sbb
mov
pop
mov
test
cmp
andl
sahf
cmp
pop
sti
movsb
cmpsl
int3
push
pop
sub
push
cwtl
push
adc
xchg
cmp
rcll
fstpt
push
push
mov
jns
dec
push
loopne
push
adc
pop
sub
scas
xor
lea
jge
mov
cmpsl
sarb
ljmp
out
inc
outsb
repz
push
sbb
sbb
and
push
fucomp
dec
pop
mov
dec
inc
sub
mov
mov
les
jmp
add
sbb
add
outsb
cmpsb
lret
xor
push
lret
sbb
jns
xchg
sti
movsl
add
mov
mov
popf
push
nop
inc
outsl
lds
inc
cwtl
inc
cmpsl
iret
mov
out
xor
jo
shlb
es
fistps
fs
add
mov
sarb
mov
pop
out
sbb
mulb
and
push
stos
nop
daa
push
outsl
cmp
dec
ficoms
test
cmp
loop
je
sub
scas
sub
daa
push
mov
lea
enter
dec
or
lods
add
jp
add
mov
cmpsl
imul
lods
push
je
mov
mov
jno
ja
xor
xchg
push
mov
rorb
jecxz
daa
push
rorb
call
imul
inc
loope
push
lret
jle
out
or
sub
xchg
orl
add
int3
mov
insb
mov
ret
shll
popa
jo
mov
cwtl
adc
inc
pop
jl
aas
stos
outsb
dec
xor
rcr
out
in
sbb
insl
inc
sub
push
inc
push
cmp
aaa
xchg
pop
out
dec
mov
movsl
add
cmp
in
aam
and
test
sahf
pop
inc
dec
divl
popa
test
scas
rorl
test
and
xor
and
fcom
insb
or
mov
pop
or
mov
fimuls
pop
mov
rclb
dec
pop
pop
or
ds
imul
ljmp
inc
mov
jo
mov
daa
and
mov
pop
in
mov
movsl
lods
cltd
xchg
adc
inc
or
popa
out
push
scas
aad
into
pop
add
add
jnp
imul
pushf
push
and
push
xlat
and
xorb
dec
mov
sub
orb
mov
mov
fs
or
push
imul
jns
push
mov
shlb
pop
xchg
jge
jae
adc
shrb
mov
shr
xchg
and
das
jne
subb
jecxz
cmp
push
shr
cmpsl
jmp
std
push
ss
jp
aas
cmp
stc
xchg
daa
fsts
lods
push
push
lds
addr16
xchg
rorb
cmp
mov
ljmp
pop
loope
sub
scas
pushf
jle
xor
cmp
or
rcrl
cld
loopne
imul
dec
xchg
inc
pop
fdivl
in
fadds
jb
icebp
test
lcall
and
add
scas
jecxz
push
add
cmp
out
ret
push
add
in
ror
xor
lret
mov
gs
mov
popa
sub
loope
test
pop
pop
int3
addr16
and
fidivrs
add
adc
mov
stos
sub
mov
xor
mov
adc
pusha
in
push
cmc
loope
repnz
insb
mov
inc
add
add
xlat
outsl
in
jo
pop
pop
pop
fadd
inc
pshufw
push
fildll
scas
add
mov
mov
xlat
cs
out
lds
lret
xchg
xor
add
push
pop
dec
inc
lds
jle
and
mul
jmp
jno
jb
fisttps
jmp
movl
sbb
xor
inc
repnz
inc
sbb
pop
xor
nop
ja
nop
xchg
std
mov
in
xchg
add
fdivr
fiadds
push
inc
sbb
pop
out
inc
in
pop
cmp
jo
mov
orb
lds
mov
xor
movsl
mov
adc
sbb
rcrb
out
fnstsw
xor
out
and
or
fucomip
sti
hlt
sbb
dec
cli
sub
js
cltd
aas
test
pop
jbe
xchg
jp
sahf
pop
fadds
in
movsl
stos
mov
stc
push
or
dec
cmp
inc
cmpsl
test
fistps
and
dec
mov
and
jmp
mov
xchg
cwtl
pop
testl
cmp
xchg
sbb
or
roll
test
jns
bound
sub
dec
inc
xchg
lret
push
outsb
push
int3
out
jb
add
jl
hlt
jo
mov
and
lods
push
sub
test
add
adc
in
call
or
in
cmp
movsl
pop
push
movsl
cmpb
fnstenv
sub
push
mov
pushl
imul
pusha
mov
rcr
xlat
pop
outsl
mov
xor
push
mov
mov
outsl
inc
mov
jecxz
jo
push
add
push
pop
out
jecxz
cmp
cmp
negb
jle
lds
in
js,pt
adc
xchg
cmpsb
fcomps
cwtl
sbb
idivb
mov
sbb
mov
std
jb
aam
cmp
mov
inc
es
mov
mov
sbb
call
and
call
push
loope
ret
hlt
mov
sbb
xchg
mov
negl
sub
lods
mov
xchg
mov
cmp
push
ds
and
loop
mov
jne
lods
es
in
dec
mov
push
inc
sbb
cmp
int
mov
xor
sub
inc
inc
pop
pushf
add
xor
adc
xchg
jl
adc
idivb
fldcw
mov
cmp
add
xor
xchg
xorl
shll
add
or
or
inc
adc
inc
loope
nop
inc
push
int
sub
outsl
out
jne
push
cmpxchg
push
push
pop
push
mov
testb
mov
das
dec
out
fldenv
in
daa
jmp
sub
fmul
enter
icebp
in
mov
imul
jl
test
stc
and
xor
xor
stos
add
mov
sbb
divb
xor
in
push
pop
or
mov
lods
movsl
insb
jmp
adc
and
lret
cltd
and
sub
popf
jo
mov
aas
cmp
out
pop
mov
cmp
gs
cmpsl
jb
insb
push
xor
ljmp
pop
aas
cmpsb
cltd
push
cmpsl
fld
add
mov
pop
xchg
das
imul
or
mov
insl
les
aad
xchg
adc
push
sbb
pop
push
leave
dec
push
ret
pop
in
lock
sbb
ja
mov
sub
cmpsl
jns
aas
dec
hlt
adc
mov
mov
subb
lahf
push
repz
dec
add
dec
mov
lods
sub
cld
inc
jecxz
xor
hlt
insb
xor
aas
mov
mov
push
or
in
shl
loop
cmpsb
fldcw
ja
in
mov
xor
mov
cmp
or
adc
outsl
push
sarb
jg
mov
shlb
mov
sbb
iret
lea
ljmp
bound
rep
xor
push
cmpsb
addb
sub
rclb
std
add
popf
test
jle
les
ret
push
inc
prefetchw
in
mov
mov
lret
xchg
incb
mov
cs
or
dec
test
cld
aaa
or
out
cmp
jmp
mov
cmpsb
loope
xchg
add
mov
mov
mov
cmp
or
jp
int3
inc
adc
fnstsw
rcl
icebp
sbb
mov
cmp
cmc
in
inc
ds
aam
push
aad
xchg
cmp
das
ja
or
lock
gs
dec
test
jl
dec
cld
jo
ja
xor
xor
mov
mov
fcmovnb
dec
sub
push
mov
int3
sbb
ss
imul
mov
jp
jb
push
sbb
push
cmp
gs
push
jbe
inc
loope
adc
xlat
js
clc
in
movsl
movsl
das
cwtl
in
mov
mov
lahf
lods
bound
or
cmp
in
out
test
or
cmpsl
movsl
cmc
fwait
mov
mov
xchg
mov
push
stos
cs
mov
outsb
call
int3
and
sbb
sarl
in
loopne
mov
dec
push
ljmp
jb
mov
sbb
push
in
js
arpl
hlt
pop
in
rcrb
cmp
dec
stos
out
mov
fcmovu
adc
cld
push
test
daa
mov
fs
mov
xor
orb
mov
cmp
and
jp
cmpsl
push
and
xlat
xchg
xor
push
lods
mov
fldenv
loope
inc
mov
mov
fucomip
insl
and
add
adc
xor
jne
fstpt
add
adcl
in
push
pop
and
lds
test
stos
adc
iret
cld
cmp
sbbl
add
lock
jo
xor
cmp
scas
sub
xor
insb
jbe
add
cltd
mov
and
dec
aad
dec
jno
push
inc
loop
test
fstpt
iret
push
es
shlb
pusha
imul
sti
push
xor
mov
mov
pop
xchg
xor
pop
push
mov
loop
cmp
jge
imul
divb
adc
pop
shll
sub
ret
subb
xchg
ret
or
ficomps
sbb
lock
jmp
fidivl
sbb
ds
add
loope
inc
push
dec
fs
hlt
lret
xchg
cld
adc
mov
cli
sub
cwtl
sub
and
mov
leave
ror
testl
fwait
mov
and
cmp
sbbl
fs
dec
fwait
sbb
lret
outsl
fldenv
rol
js
cmp
repnz
lea
pushf
cmp
mov
movsl
ds
pop
fs
aaa
pop
mov
adc
dec
dec
insb
inc
xor
mov
lret
push
mov
cmp
push
dec
push
sbb
or
push
popa
sbb
push
cltd
and
fstpl
mov
orb
mull
xchg
or
xor
dec
cmp
fcompl
add
popf
sub
inc
adc
mov
icebp
xor
repnz
cmp
test
aas
dec
pop
jmp
xchg
mov
mov
add
xchg
repnz
push
lods
daa
inc
sub
ja
cs
mov
lret
insb
outsb
push
push
mov
sbb
pop
xchg
mov
test
cli
jp
or
aaa
mov
shrb
and
mov
jbe
jmp
xor
mov
icebp
and
inc
call
frstor
xorb
cmpl
xor
fstl
dec
out
mov
loopne
gs
dec
xchg
lock
sbb
sbb
mov
addr16
mov
mov
scas
cmpsl
push
jmp
lea
push
fbld
movsb
add
gs
jle
sub
cmpsb
or
in
push
or
jo
push
fists
lret
mov
push
movsl
push
roll
and
fldcw
sbb
sti
sti
push
rclb
mov
xor
cmp
mov
fs
mov
add
jno
insb
call
mov
sub
movsl
cli
cwtl
je
inc
xchg
test
pop
insb
cld
je
pop
pushf
adc
lret
popf
and
nop
sbb
cmpb
fistpl
insb
icebp
lods
pop
xchg
das
adc
add
push
int
in
insl
cs
sub
cmp
mov
popf
enter
aas
dec
pop
push
andl
pop
cmp
jno
cmp
stos
rorl
and
pop
imul
ret
lret
cmpsb
mov
jp
repnz
leave
es
fsub
cmpb
and
repnz
test
and
push
jge
or
ljmp
mov
mov
mov
dec
lea
or
cmpsl
cltd
cld
daa
nop
scas
jp
xchg
jns
clc
sbb
fnstsw
mov
and
push
dec
mov
lods
inc
jb
mov
cltd
mov
call
pop
enter
mov
push
and
movsl
inc
xchg
inc
das
jecxz
cmc
fildll
jno
mull
pop
in
in
pusha
dec
mov
sahf
push
ret
cmp
pop
add
decb
dec
sbb
test
int3
out
dec
fsubrs
jbe
pop
xchg
test
clc
push
xor
jecxz
pop
mov
paddusb
sbb
cltd
aaa
sbb
push
loopne
lods
lods
cli
nop
adc
mov
or
xchg
fisubrl
push
les
mov
dec
pop
insl
xor
sbb
sub
leave
pop
inc
xchg
loop
sbb
jmp
roll
jl
mov
inc
push
sub
scas
jg
into
popf
sub
cmpsb
int3
andb
inc
or
shl
cmp
mov
mov
pop
xorl
xor
xor
inc
into
popf
sub
mov
es
aam
add
pop
sub
loopne
inc
fnstenv
mov
xor
inc
or
xchg
cmp
imul
push
insl
ret
inc
mov
or
push
push
jge
jno
sahf
jl
mov
lcall
xor
mov
dec
popf
dec
mov
sbb
cwtl
pop
test
in
scas
cltd
and
adc
lret
cwtl
xchg
sub
fdivp
movsl
jae
call
dec
jle
xorl
cwtl
inc
sbb
cmp
ss
jnp
rclb
cmp
or
mov
or
push
fcom
or
jp
call
popf
mov
je
stos
les
adc
pop
jg
outsl
fbld
cmp
sub
xchg
mov
mov
clc
int3
sub
aam
rorl
mov
add
scas
dec
iret
mov
dec
adc
xchg
xor
fs
lods
sahf
div
sbb
lods
movsl
inc
cmp
xorb
faddl
in
pusha
push
fistl
jle
and
xor
adc
cmc
dec
pop
xchg
lds
bound
adc
out
sar
and
rol
repnz
dec
mov
popa
int
or
shlb
pop
lds
cmc
cmpsb
inc
std
push
mov
sbb
add
idivb
stos
cltd
mov
in
std
xor
pusha
loope
dec
out
jecxz,pn
add
sbb
test
out
push
push
sub
ja
rcrb
shlb
xor
ljmp
add
push
pop
imul
dec
sarb
mov
movsl
push
mov
bound
adc
fnstenv
adc
sarb
mov
jb
int
inc
test
xlat
mov
or
popf
test
inc
dec
mov
dec
inc
popa
push
arpl
es
arpl
sub
scas
mov
fmuls
iret
xor
push
cwtl
jns
outsl
adc
fldlg2
roll
test
repnz
mov
sub
xchg
insl
or
mov
push
mov
cltd
inc
jo
pop
dec
cmovge
sub
mov
imulb
clc
dec
mov
ds
enter
shrl
mov
outsl
sub
xor
js
andb
xchg
xchg
int
cmpsl
sahf
xchg
pop
jl
cwtl
mov
cmp
std
xor
jns
pop
xor
cmpsb
xor
adc
pusha
sub
sub
pop
outsl
xor
xor
adc
sti
sbbb
leave
xor
fsubrs
imul
pop
and
pop
scas
int3
hlt
pusha
mov
int
add
bound
inc
lahf
xchg
sbb
ds
push
or
or
mov
cmp
pop
orl
icebp
fmuls
add
and
sbb
push
jle
rcrl
and
lret
push
inc
jnp
idivl
mov
loope
shlb
jb
mov
inc
pop
xchg
dec
imul
add
adc
in
xchg
mov
or
rcll
orb
xchg
xor
repnz
incl
cmp
adc
ja
mov
mov
pop
pop
fsubs
jb
lds
jmp
xchg
adc
pop
repz
loope
adcl
xor
sub
enter
add
mov
or
lds
xchg
and
lahf
and
aas
push
les
lret
and
add
xchg
add
dec
mov
loop
test
jns
inc
push
jae
sub
mov
add
scas
inc
lret
and
push
ljmp
shl
lcall
int
cli
jb
ret
and
and
add
xchg
cmp
jnp
arpl
fisttpll
push
shll
push
mov
and
jno
loopne
push
add
testb
sti
pushl
xchg
xlat
inc
mov
add
add
out
out
in
fadds
jecxz
imul
dec
sub
insl
das
fildll
add
pop
in
test
mov
cmp
add
xchg
mov
push
iret
jl
cmovs
xchg
out
divl
mov
xor
shrl
les
test
testb
fcoms
or
jp
inc
mov
inc
inc
data16
rorb
imul
jmp
fs
icebp
pop
inc
dec
mov
dec
xor
and
sbb
mov
addl
fidivrl
xor
sub
jl
int3
pop
rorb
mov
bound
mov
add
mov
inc
dec
rcrl
outsb
jb
out
popa
pminub
lret
lret
mov
pop
cmc
push
imul
jl
shll
sahf
fdivs
ret
adc
xchg
or
outsl
push
fsubl
fstpl
inc
fs
stos
rcll
add
mov
int3
cmpsw
sub
dec
jae
inc
dec
dec
or
in
inc
push
ficompl
loop
in
negl
add
cmpsl
mov
shl
add
push
pop
dec
cmp
xlat
mov
dec
adc
shl
rcl
movaps
sbb
lahf
out
xchg
xchg
cmp
inc
pop
ss
aaa
popa
pop
fnstsw
ret
mov
aaa
jmp
ljmp
call
std
sub
jecxz
mov
cmpsl
int3
mov
and
xor
mov
dec
push
inc
inc
test
jge
jb
insb
scas
add
pushf
jmp
cmp
mov
jmp
pusha
and
mulb
movsb
push
cmp
fnstcw
pop
sbb
movsb
push
lock
sub
lret
push
and
sbb
es
add
in
ja
jnp
test
icebp
int3
sahf
dec
mov
ret
inc
inc
in
cld
aam
data16
sti
ss
jge
or
fisubs
cmp
push
and
test
push
xor
in
jle
dec
sub
xor
pop
es
push
ds
test
out
pop
pushf
les
fnstenv
aad
icebp
scas
mov
lock
jge
cmp
cwtl
xchg
fcoms
mov
stc
mov
sub
xchg
outsb
test
shrl
icebp
mov
mov
dec
adc
and
cmpsl
sbb
adc
ds
addr16
or
fisubs
jmp
pop
mov
ficompl
ljmp
push
test
cld
dec
test
pop
pop
jl
fsubrp
enter
cmpsl
insl
aaa
jae
cli
add
adc
pushl
xor
mov
push
cmp
dec
aam
add
arpl
pop
mov
imulb
fsubs
popa
and
mov
test
mov
xchg
ret
addr16
xchg
push
sub
jle
adc
gs
inc
andb
shlb
xchg
mov
push
push
dec
shrb
sbb
outsl
add
outsl
xchg
data16
movsb
cmp
int
and
idiv
adc
inc
pop
imul
aad
inc
std
call
xchg
or
arpl
xchg
test
jo
pusha
mov
dec
out
sbb
sbbb
loop
mov
cwtl
dec
mov
xchg
test
addr16
push
mov
aas
call
call
push
stos
cmc
adc
test
loopne
mov
sub
pop
gs
stos
sarl
or
xchg
sbbb
xor
pop
pop
neg
push
dec
xchg
xchg
in
adc
add
les
adc
jns
rcrb
adcb
sub
into
and
jb
or
or
fisubs
cmpsb
mov
mov
scas
call
cli
cltd
loop
into
or
mov
sarl
dec
or
dec
mov
mov
fstps
mov
cmp
mov
mov
lods
clc
call
xor
xchg
sbb
movsl
test
in
adc
sbb
mov
or
mov
cli
mull
pop
aam
push
lods
jno
jbe
mov
adc
xchg
outsl
imul
xor
and
test
pop
aam
popa
pop
call
mov
xor
inc
shrb
mov
into
cmpsb
xor
lock
jo
dec
cmc
mov
icebp
pop
lret
push
cli
jmp
mov
fcomp
in
int3
int
inc
push
add
sub
rorb
sti
out
jge,pn
lcall
std
sbbb
lahf
xchg
inc
sub
ljmp
test
cmpl
daa
sbb
outsl
cli
and
cmc
cwtl
add
xlat
or
add
cmpsl
and
inc
and
shl
aam
cmp
cltd
and
fs
imul
popa
xchg
mov
mov
fcomip
adc
sub
jbe
cmp
xchg
out
add
inc
dec
or
dec
mov
dec
insb
jno
xchg
dec
mov
and
jecxz
aam
pop
sub
test
mov
mov
mov
or
push
leave
mov
pop
jp
or
fmuls
in
icebp
sbb
into
push
std
jecxz
jae
ss
aad
dec
jp
xchg
loope
dec
repz
jl
xchg
ret
xor
xchg
xchg
xchg
mov
ljmp
lods
push
aas
mov
sub
mov
xor
mov
sub
dec
aam
into
dec
or
push
pop
loop
ret
cmpsb
lea
cmp
adc
in
adc
lcall
mov
pushf
dec
cld
mov
mov
mov
into
sub
add
stos
addb
je
out
cmpsl
push
rcrb
mov
add
sub
sbb
cli
scas
scas
out
jl
mov
mov
push
pop
pop
je
cmp
jmp
and
leave
and
inc
aaa
pop
fidivrs
in
pusha
imul
fistpll
jecxz
mov
fisubrl
aad
sub
jae
enter
shr
add
ljmp
repz
add
fisubl
sbb
inc
pushf
mov
or
notl
push
fs
mov
sbb
pop
mov
xchg
leave
lcall
ds
adc
lods
or
loopne
add
in
daa
jbe
mov
inc
and
ds
stos
subl
stos
mov
imul
lret
out
addl
inc
js
sub
out
sbb
adc
pusha
mov
pop
imul
mov
jg
loope
mov
pop
jp
insl
and
shll
adc
aas
subb
xlat
int3
insb
repnz
fisubrl
push
mov
cmc
rorl
dec
pop
or
inc
das
and
test
pusha
xchg
or
lods
jge
jl
sahf
lods
xchg
jecxz
add
dec
cmp
dec
inc
stos
jb
add
push
sub
mov
mov
mov
add
mov
pop
in
pop
sub
outsl
mov
inc
mov
cmp
negb
dec
lods
imul
js
dec
or
das
into
mov
xor
adc
int
push
cs
xchg
fsubl
inc
mov
imul
cs
add
mov
mov
or
cmp
mov
adcl
and
es
mull
and
mov
arpl
shll
pop
enter
mov
jo
or
inc
jb
adc
or
sahf
cmp
fadds
aas
or
push
into
xchg
mov
jbe
mov
stos
adc
push
xor
mov
xor
jl
jg
fdivl
testl
out
int3
sahf
shrb
call
test
and
add
int
test
mov
movsb
pop
iret
pusha
mov
inc
inc
enter
pop
inc
int3
push
sahf
outsl
cmc
jae
jmp
and
push
pop
lret
or
lea
in
leave
xor
filds
mov
outsl
bound
popa
sarl
pop
inc
out
scas
cltd
lock
in
inc
loopne
or
dec
mov
incl
bswap
or
cwtl
lahf
daa
aad
fisttps
cwtl
enter
repnz
lret
pushf
jge
xchg
filds
xchg
fbld
jo
jmp
dec
call
push
outsl
pop
sub
ficoml
mov
xchg
xor
mov
pop
jb
adc
in
pop
adc
ret
add
fbstp
aaa
or
mov
push
dec
mov
ja
repz
aam
add
movsl
sbbl
add
mov
lea
mov
out
or
cmp
xor
jmp
adc
sub
decl
pop
cmpsb
cmpsl
push
jp
aas
sub
push
out
arpl
push
adc
and
in
jmp
pushf
cmpsl
mov
sbb
lcall
xor
fidivs
mov
push
add
shl
arpl
aam
pop
mov
aad
mov
cmp
jmp
push
aad
mov
inc
sti
aam
les
mov
jno
lea
movb
loope
mov
in
in
fimuls
push
lret
push
sub
xchg
fdivrl
ror
mov
mov
imul
or
jae
je
xchg
stos
push
xchg
and
in
pusha
adcb
or
xchg
inc
ljmp
jno
repz
loope
rclb
sahf
jmp
mov
jno
inc
test
in
add
les
lahf
or
aad
fwait
xor
add
dec
and
mov
xorl
clc
cmpsl
xlat
fiadds
inc
outsb
adc
lret
lcall
imul
jb
push
xor
mov
inc
out
rcll
pop
push
outsb
int
testb
std
imul
in
hlt
data16
xchg
ja
push
call
xchg
cltd
leave
mov
in
or
lock
push
xor
ret
fadds
jno
fwait
jae
hlt
or
mov
cmp
inc
out
push
sbb
inc
pop
mov
inc
cltd
ja
test
xor
xor
mov
cmp
mov
cmpsb
aad
xchg
jecxz
iret
cmp
pop
jg
adc
mov
inc
pop
sub
sbb
out
gs
mov
jb
ret
in
mov
add
or
test
sub
aad
aaa
fldl
aad
lds
je
stc
jnp
ret
cmp
cmp
mov
andb
call
stos
sub
push
sahf
movsb
sub
add
push
pop
hlt
jo
mov
bound
dec
xchg
pcmpeqd
jge
daa
pusha
int
decb
mov
xor
clc
ret
shl
or
into
sahf
dec
cmp
inc
dec
inc
add
in
out
pop
mov
dec
pop
ja
sbb
iret
outsl
mov
rcrb
xchg
test
adc
jae
in
pop
movsb
movsl
js
mov
mov
sahf
mov
push
loop
jp
push
pushf
insb
xlat
aam
fistps
js
sbb
sbb
dec
insb
push
nop
jp
ja
fs
popa
jge
pop
xchg
fisubrl
add
cmp
push
loopne
insb
lcall
ljmp
mov
gs
xchg
cmpsb
mov
or
mov
pop
aas
movsb
fdivrs
pop
cmpsl
mov
call
movsb
int
and
movsl
inc
cld
sub
cmp
int3
jecxz
jno
hlt
iret
repz
aaa
push
mov
imul
sahf
cltd
sub
lea
adc
loop
out
jg
and
mul
cmpb
inc
mov
dec
bound
xchg
addr16
rclb
jmp
xor
cltd
out
push
inc
xor
lret
jne
ja
and
mov
inc
xchg
stos
push
add
sub
aas
insl
in
mov
xchg
stc
cmp
fistl
in
fsubs
movsl
jno
and
filds
lahf
mov
mov
cmp
mov
pop
mov
push
incb
out
and
aad
push
je
fnsetpm(287
push
push
inc
adc
addr16
ret
scas
and
cmp
out
cmpsl
mov
cmp
aaa
mov
xor
cld
divb
add
outsb
cmp
incl
sub
adc
mov
or
loopne
fst
inc
and
fcmovnb
testl
xor
rorl
into
xor
inc
lods
xor
aaa
in
or
push
mov
out
rcr
movsl
add
jp
xor
sbb
mov
stos
push
sub
leave
ss
fldcw
inc
repnz
push
xor
addr16
outsb
in
dec
sub
mov
xchg
cmp
adc
lods
push
data16
call
inc
lahf
into
xor
xlat
shlb
adcb
jae
into
jl
xchg
icebp
in
inc
and
test
push
aaa
shr
fnstenv
loopne
push
sti
jle
xchg
push
jb
xor
daa
fisttpll
dec
test
popa
add
xor
divl
movsl
pop
adc
and
mov
cmp
bound
cltd
fnsave
stos
xor
xor
cmpsb
xor
inc
pop
mov
sbb
sbb
iret
loope
jp
jmp
cmp
pop
lea
je
stc
sbb
out
jbe
xchg
cmp
push
or
pop
adc
loope
insb
repnz
rorb
jns
orl
lcall
adc
adc
or
mov
sbb
cwtl
fstpt
or
in
dec
adc
cmpsl
push
fimuls
loopne
adc
and
loope
dec
orl
and
ds
fcomip
xor
rolb
cmpsb
push
rclb
movb
dec
jo
pop
sbb
cmp
xchg
sub
xor
push
inc
sbb
xor
dec
iret
popl
ds
test
push
iret
negl
sub
mov
jmp
inc
out
rcrb
dec
cmp
dec
mov
push
je
popa
pop
jmp
dec
flds
xchg
int
push
shr
inc
rolb
sbb
into
fcoms
imul
into
mov
dec
shll
pop
inc
std
imul
ds
sbb
cmp
xor
xchg
in
or
add
rcrl
or
sub
and
dec
add
pop
or
jo
out
icebp
inc
adc
in
sub
pop
push
cmp
popa
xor
fs
pop
int
pop
lahf
in
cli
lock
mov
lret
jne
mov
test
push
inc
pushf
or
cmpsl
sub
mov
stos
jmp
sbb
xchg
xchg
arpl
imul
les
xor
mov
cltd
les
push
xor
stos
push
mov
loopne
jno
inc
push
adc
pop
sbb
and
xor
sarb
fbstp
sahf
mov
sbb
repnz
pop
mov
xor
sbb
add
xor
xchg
cld
rorl
loopne
ret
jle
insb
push
pushf
xor
aas
insl
mov
add
mov
je
or
mov
imul
jg
jo
inc
jle
push
jae
cmp
xor
and
sbb
pop
fldcw
pop
pop
jo
jp
adcl
add
mov
sub
outsl
cmpxchg
pop
mov
icebp
loope
push
test
vmovapd
sbb
mov
sbb
jle
les
lods
ficompl
xchg
scas
sarl
pop
push
subb
mov
cmp
xor
rcrl
push
adc
inc
into
sub
mov
popf
pop
icebp
xchg
jecxz
dec
test
cmp
fistl
scas
inc
das
xor
jnp
movsl
in
jae
outsl
jmp
add
jp
add
pop
or
out
mov
into
cmpsb
fisttpl
jno
leave
mov
jns
mov
call
xchg
in
xchg
roll
or
inc
cmp
mov
imul
or
sbb
int3
mov
inc
mov
cmp
fildll
jne
out
jbe
mov
jle
xchg
sbb
out
cld
loop
push
rcr
ds
loop
rcr
dec
ficoml
sbb
add
les
cmp
xor
inc
jle
inc
jno
jns
jae
popf
leave
lret
stos
rcrl
in
jns
inc
xor
iret
add
fstpl
mov
bound
mov
inc
cmp
cmpl
push
call
je
stos
mull
mov
sub
and
xchg
test
roll
mov
mov
inc
add
push
and
dec
adcb
push
test
cmp
xchg
ds
add
sub
imul
add
dec
mov
push
jmp
lahf
xor
js
cmpw
jnp
push
sbb
stc
sub
cld
or
scas
icebp
dec
cmp
sar
push
out
mov
ljmp
cwtl
movsb
lods
mov
cmpsb
outsb
jp
cmp
inc
pop
out
push
flds
popf
loop
imull
and
and
scas
dec
repnz
je
push
outsl
outsb
jns
dec
popa
aaa
sbb
movsl
jb
adc
divb
test
jo
rorb
push
clc
lods
xlat
in
inc
int
out
call
cmp
loop
stos
mov
jbe
mov
les
mov
jnp
insl
ja
pop
cmpb
push
xor
xchg
xchg
int
jp
xlat
jae
out
lret
hlt
fnstcw
jae
dec
pusha
pop
mov
shll
cmpsb
mov
int
popf
dec
mov
dec
and
out
clc
push
mov
sbb
lods
cmpb
cmpsl
imul
rcr
lds
dec
stos
jnp
mov
inc
insl
clc
shlb
push
sub
or
rol
add
mov
lods
lods
and
cli
jecxz
ret
dec
shll
adc
pop
push
test
push
adc
or
and
pop
test
pop
inc
mov
and
and
mov
pop
inc
dec
das
adc
inc
ret
sbb
jno
imul
popa
adc
and
repnz
aad
popf
sahf
mov
mov
rorl
loope
mov
pop
cmpb
fs
lods
addr16
and
mov
das
jle
ja
or
add
lcall
in
iret
xor
maxps
inc
push
rcll
mov
cld
stos
mov
push
jns
mov
push
jo
popa
sbb
mov
pop
push
mov
pop
cmpsl
int3
mov
je
lret
test
in
ss
mov
lret
int
mov
mov
out
insl
cwtl
cltd
xchg
inc
mov
add
outsl
fdivrl
mov
outsl
lds
sbb
aaa
or
fsubrl
call
sub
out
dec
scas
lret
jns
movsb
dec
xchg
jmp
outsb
popa
ljmp
adc
lock
icebp
sbb
nop
xor
dec
test
scas
push
repnz
aaa
fnstsw
cmp
sub
outsl
setnp
addr16
sbb
mov
sbb
out
lret
sub
popa
nop
cmp
push
mov
les
mov
pop
add
xor
std
cli
into
lea
cmp
xor
fstpl
adc
add
sbb
mov
mov
fcmovb
xchg
loopne
dec
test
dec
push
xchg
xchg
cmpsl
sub
jae
aaa
pop
and
rorb
pinsrw
lret
mov
movl
out
and
gs
cmp
add
sbb
xor
out
mov
pop
fsubs
xor
jo
ljmp
scas
jo
scas
stos
cmpsb
dec
fstpl
xor
lret
dec
mov
cmp
push
ss
fsts
cmp
push
aad
xorl
adc
mov
pusha
push
lea
adc
les
mov
sbb
mov
pop
jnp
movl
dec
jmp
jl
out
lret
mov
lea
pushf
mov
adcb
pop
pop
pop
cwtl
fs
out
push
or
pusha
fs
pop
jmp
sbb
and
test
imul
xchg
mov
mov
ds
jno
mov
cmp
jno
pop
adc
and
bound
mov
jg
adc
into
mov
lret
cmp
dec
clc
sub
xchg
adc
iret
jecxz
dec
add
jle
sbb
loop
imul
ss
xor
mov
push
popa
mov
imul
dec
and
jge
filds
sub
mov
icebp
pop
mov
mov
pop
inc
cltd
inc
stos
insl
nop
arpl
imul
and
imul
jecxz
sbb
movsb
inc
loope
shl
stc
imul
or
sbb
mov
fmull
mov
in
jne
mov
fnstsw
xchg
push
sahf
arpl
fnstenv
int3
or
into
gs
xor
push
cmp
add
jmp
mov
leave
cmp
pop
jg
out
lock
rorb
pop
imul
gs
loope
xchg
and
push
push
and
add
and
cmc
xor
outsb
push
out
js
push
inc
cli
xchg
add
ss
jae
cwtl
sbb
inc
mov
rol
jb
xor
ret
test
jmp
pop
jb
lcall
adc
mov
mov
arpl
movsl
inc
mov
call
push
sub
test
imul
fcoms
je
mov
sub
pop
inc
cs
daa
jle
mov
fistl
ficomps
sub
aas
ljmp
mov
mov
pop
enter
mov
out
xchg
dec
sub
call
mov
add
dec
pop
dec
pop
adc
ret
cmp
shl
nop
adcl
sub
inc
stos
mov
mov
fmull
cs
cmp
dec
mov
fstpl
shlb
mov
int
add
push
test
es
jbe
mov
cmp
xorb
jmp
add
test
stos
jae
jmp
jne
pop
push
push
xchg
and
adc
orl
dec
sar
jl
xchg
adc
adc
jo
std
test
dec
movsb
inc
jae
scas
mov
and
push
and
sbb
lahf
jb
and
inc
dec
arpl
jecxz
jns
movsl
popf
cmpsb
sub
dec
inc
hlt
mov
js
les
aam
or
test
in
inc
imulb
scas
dec
mov
ss
test
or
sub
xchg
pop
mov
mov
adc
push
push
mov
adc
pop
jmp
sbb
popf
imul
cltd
call
fmul
pop
cmpsl
loop
test
cmp
out
jmp
push
mov
xchg
push
cwtl
and
mov
fildll
and
into
jp
loop
sub
adc
sub
or
or
outsb
call
loop
daa
and
inc
or
and
out
and
push
adc
and
mov
adcl
inc
xor
out
cmp
loope
mov
int
dec
ret
test
out
movsb
jg
sbbl
adc
xor
and
es
sub
in
sahf
pop
mov
bound
cld
lods
scas
push
out
jb
rorl
mov
ret
jle
jl
sahf
test
jae
cld
xchg
lock
test
cmp
adc
add
pop
adc
pop
jno
out
arpl
subb
lea
outsb
fldenv
aas
push
shlb
rorb
loop
xchg
mov
jg
fldcw
xor
fisubl
lock
pop
cmp
inc
sbb
cmp
aas
jmp
and
push
cld
sub
cltd
lcall
push
jns
pop
push
cmp
jecxz
mov
andl
jecxz
push
sub
roll
js
out
out
jo
sahf
loope
orl
push
fs
fstpt
lods
mull
push
cmp
push
fst
sbb
dec
jl
andl
test
xchg
and
stos
or
cmc
rolb
cmp
xor
outsl
fisubs
int3
test
ja
sbb
xchg
sahf
jns
popa
out
xlat
or
popf
mov
mov
adc
mov
mov
push
or
repnz
loopne
add
shl
sub
into
pop
fwait
mov
cmpsb
pop
pop
dec
aas
ret
xor
pop
rol
shlb
hlt
jno
dec
or
inc
inc
mov
sahf
sarb
inc
call
add
jo
mov
or
mov
fbstp
loopne
push
bound
loope
repnz
rorb
xor
es
lret
scas
scas
xchg
lret
dec
push
test
pop
inc
and
movsl
sbb
jmp
addb
test
cltd
push
popa
ret
cmp
es
leave
shrb
pop
inc
xchg
add
jl
xlat
add
pusha
push
mov
gs
dec
int3
ja
scas
pop
jecxz
jl
xor
cmpsb
push
iret
and
cmpsl
or
mov
stos
mov
in
inc
popf
push
adc
pop
or
xor
adcb
mov
in
sub
fiaddl
f2xm1
mov
rcrb
std
notb
shrb
mov
std
lahf
and
inc
std
int
scas
jl
sbb
std
outsl
clc
jge
fists
push
pop
icebp
cmp
jae
aam
mov
mov
cmc
mov
dec
loop
incb
mov
daa
pop
push
std
jb
jae
je
and
sub
loop
xchg
jno
dec
jb
add
pushf
scas
inc
repnz
mov
lret
jge
mov
lock
xchg
icebp
inc
push
pop
fnstenv
repnz
inc
pop
mov
xchg
aas
ja
imul
cmpsb
fstp
add
sbbl
imul
or
fnstsw
mov
jmp
adc
lea
call
dec
jb
mov
inc
shrl
aas
testl
loope
pusha
xchg
dec
fs
jmp
xor
jle
mov
xchg
movsb
repz
jo
lret
cmp
mov
std
insl
xchg
add
jle
fcompl
neg
cmp
jnp
mov
sub
roll
xor
hlt
mov
jnp
ljmp
xchg
push
sub
dec
mov
test
in
push
addr16
leave
mov
pop
pop
lods
push
jp
repnz
xor
mov
sbb
test
lret
push
cmpsb
jge
pop
ss
inc
mov
push
pushf
push
stos
scas
and
pop
iret
xchg
mov
cmp
cltd
sbb
out
mov
movsl
xor
iret
mov
xor
divl
imul
adc
xchg
bound
xor
mov
idivb
cs
pop
sbb
dec
dec
add
ljmp
dec
or
lahf
fidivrl
cmc
add
push
mov
imul
mov
inc
fwait
or
dec
orl
xchg
sbb
in
pop
dec
bound
lock
adc
mov
test
cmp
mov
movsb
inc
add
lret
jo
out
xchg
mov
pop
movsl
leave
fstpl
cltd
rol
pop
push
rclb
mov
popf
ss
int
into
sti
mov
mov
mov
outsb
pop
and
jl
es
sbb
mov
xchg
scas
int3
lods
sub
test
xlat
mov
das
scas
pusha
push
push
inc
jbe
push
out
jecxz
shll
pop
xor
das
sbbl
dec
xor
shrb
in
test
js
mov
fbld
int3
mov
pusha
mov
pushf
gs
cmp
push
sub
sbb
xchg
push
cmp
push
es
xchg
cmpsb
xchg
mov
out
test
mov
fmull
lea
icebp
xchg
out
jae
mov
stos
mov
jae
insl
lcall
mov
cmpsb
xorl
in
cli
pushf
jl
mov
push
mov
and
or
push
scas
pushf
or
ficomps
cwtl
and
into
shrb
jns
mov
and
scas
fwait
imul
mov
cld
inc
ja
repnz
lret
and
sub
in
adc
sarb
fsubs
push
test
int
add
push
cmp
mov
fmuls
mov
out
fadd
pop
mov
inc
mov
out
xchg
inc
xchg
cld
mov
addb
je
out
xchg
insl
push
mov
jo
lods
xlat
aad
shlb
push
jl
sbb
test
cli
test
pop
mov
ja
mov
adc
mov
push
adc
or
inc
mov
mov
int3
push
mov
xchg
loop
jno
sbb
pop
xor
inc
in
loopne
movl
xchg
push
add
lahf
imul
ja
in
ss
sub
js
cmp
jno
mov
in
mov
fisttpll
lock
pushf
lahf
loopne
test
call
out
cmpsb
cld
cmpl
mov
in
add
movsb
loop
in
mov
mov
sbb
aam
fwait
lds
push
and
push
insb
cmpsb
fildll
into
aam
xchg
mov
popa
imul
pop
std
dec
inc
enter
jle
mul
inc
mov
adc
mov
inc
in
mov
outsl
les
in
ret
mov
push
cmpsb
lret
mov
xor
addr16
dec
ret
sbb
cmpb
mov
and
mov
sti
jmp
inc
ja
cmp
pop
stc
lret
pop
mov
leave
mov
or
mov
nop
int
mov
loopne
push
fisttpl
mov
jg
mov
xchg
jp
push
lcallw
out
jle
inc
pop
movsb
jecxz
roll
mov
std
or
jp
cmp
in
rcr
mov
cli
es
add
lea
test
mov
fsubrp
icebp
and
push
ljmp
jecxz
sbb
nop
jg
repz
js
lahf
dec
into
and
push
movsb
leave
mov
sub
sub
xchg
fbstp
gs
pop
out
pop
push
jl
lock
or
sub
ljmp
xor
pop
xor
push
out
mov
icebp
leave
lods
sbb
stos
sbb
push
dec
das
push
xor
sbb
andl
fstl
mov
test
ret
es
bndldx
jle
jle
outsb
cmpsl
int
lahf
mov
es
add
and
jmp
pop
das
ficoms
arpl
loope,pt
cltd
cmp
push
pop
and
sbb
mov
fisubs
aas
in
and
sti
pop
fbld
stos
mov
fsubl
inc
dec
pop
and
sbb
dec
call
scas
clc
mov
or
cmp
add
fdivl
aaa
push
xchg
ret
jge
jne
inc
mov
mov
xor
mov
mov
mov
les
dec
outsl
addb
push
cmpsl
enter
mov
fstpl
sub
pop
shll
and
movsl
sbb
adc
push
js
jno
mov
jle
lods
sahf
fistpll
xchg
imul
aaa
cmp
xor
rclb
dec
dec
push
stos
mov
fwait
mov
into
cmpsb
cmp
cmc
cwtl
insb
and
lea
adc
jne
cmp
ss
cmp
xor
add
inc
cltd
and
orb
dec
and
enter
add
call
mov
mov
mov
adc
fimull
mov
mov
roll
rcl
xor
loopne
out
xchg
insb
mov
or
daa
pop
pop
imul
pop
outsl
xchg
andl
adc
dec
lret
aam
sub
inc
push
daa
xor
test
mov
push
cwtl
pop
xchg
or
orb
sbb
sub
xor
mov
orl
arpl
sbb
inc
cli
xchg
pshufw
xor
push
cs
int3
in
xlat
or
inc
or
mov
xor
and
xchg
inc
hlt
in
dec
pusha
ljmp
mov
inc
cmp
push
inc
or
repz
addb
popa
push
aad
mulb
clc
out
or
inc
dec
mov
jae
or
mov
stos
lret
das
insb
movsl
jns
mov
adc
addr16
or
ljmp
fcompl
fiadds
pop
test
ljmp
rorl
test
scas
rorb
in
mov
mov
in
and
sub
data16
adc
pop
dec
push
and
incb
loop
mov
lea
sub
jnp
lods
mov
out
add
jmp
mov
and
and
cmc
push
jns
imul
popa
xor
cmp
outsb
push
mov
jno
jbe
xlat
add
in
aas
pop
and
pop
cs
mov
adc
push
or
sub
lock
lret
push
push
xchg
inc
xor
ficompl
movsb
mov
add
ja
lods
fsubs
in
mov
scas
stos
pop
pop
fisttpl
xchg
call
pop
sub
sbb
jl
rcrb
mov
sti
mov
add
jo
in
mov
mov
xchg
mov
cli
mov
jnp
inc
lahf
faddl
adc
mov
lods
jns
lea
aaa
xchg
lods
cmp
aaa
add
cmp
inc
jmp
cltd
sub
sbb
stc
push
lods
mov
dec
jmp
dec
inc
dec
int
ja
icebp
jb
repnz
jl
loopne
push
cmp
pop
push
shl
xchg
or
cmp
mov
add
lret
cmpsl
roll
lea
add
pop
dec
fs
or
jo
icebp
jl
das
rcrl
outsb
cltd
pop
ffree
popa
adc
popa
movsb
out
mov
push
lea
rol
mov
mov
inc
mov
lret
pop
int
dec
xchg
insb
inc
ffreep
test
outsl
dec
xchg
cwtl
popf
loopne
outsb
ret
repz
stc
jmp
punpckhdq
jl,pt
push
dec
mov
insl
cmp
and
rcrb
and
cmp
rclb
mov
outsb
js
shrl
jne
adc
enter
fisttpl
ja
xchg
js
or
xchg
or
and
sbb
cmpsb
leave
and
sub
xlat
int3
jne
fmul
xor
push
mov
je
mov
aaa
adc
std
push
std
insl
sub
cmc
cltd
cmp
adc
int3
lods
pminsw
fwait
popa
pop
sbb
pop
and
mov
dec
lods
sti
push
xor
movsl
dec
mov
outsl
mov
rclb
pushf
movsl
jmp
sbb
xchg
mov
das
pop
ret
or
mov
lock
jo
aas
push
xchg
sub
inc
mov
jp
mov
mov
imulb
mov
pop
or
jb
sub
loope
inc
movsl
loop
jne
jns
dec
sub
xchg
iret
mov
js
shrl
xchg
lret
stc
cmc
insl
jl
sbb
call
add
xchg
fsubrl
add
inc
xchg
les
push
pop
mov
lock
test
adc
dec
scas
sbb
inc
out
in
out
movsl
setns
add
out
xchg
dec
or
jne
mov
mov
inc
lahf
xor
out
push
imul
fsts
push
push
sbb
out
or
mov
nop
inc
pop
or
and
mov
fisttpll
dec
ljmp
std
pop
and
jg
call
ds
outsb
inc
mov
push
and
sub
lds
stos
fnsave
bound
sbb
test
pop
sbb
xor
movsb
cmp
jae
loopne
mov
or
lret
push
jg
cmp
and
push
pop
mov
adc
cmp
into
fdivr
outsb
scas
arpl
jge
xor
adc
xlat
xchg
push
or
pusha
push
add
mov
ss
dec
in
ror
imul
push
sti
movsl
int
jmp
xor
out
movsb
pop
xchg
inc
cmp
lds
arpl
dec
mov
pop
mov
mov
lods
xor
and
daa
mov
movl
and
or
insb
inc
jecxz
jnp
popl
leave
push
shrb
mov
jae
lock
out
cmc
mov
adc
xor
fstl
movzbl
xor
dec
nop
inc
xor
addr16
pop
insb
insb
enter
push
shll
sahf
aad
addl
arpl
lret
dec
lods
frstor
jge
mov
cmpsl
rcr
inc
pop
sbb
stc
jnp
out
les
fisubs
jae
jae
icebp
inc
or
imul
call
push
cs
mov
clc
in
fisubl
mov
adc
sub
into
inc
pop
sub
dec
int
xorl
add
dec
mov
push
inc
mov
mov
jb
inc
popf
insb
rol
test
icebp
bound
xchg
cmc
mov
test
and
outsb
ds
pusha
or
cmp
sbb
imulb
cmc
inc
aas
test
shlb
jecxz
mov
pop
inc
dec
or
stc
mov
pop
pop
test
dec
lds
jbe
sahf
cld
xchg
lret
mov
jmp
loopne
dec
cmp
loope
lcall
fs
sbb
pop
in
out
xchg
je
jg
andb
test
mov
add
bound
dec
outsb
inc
or
pop
xchg
mov
xor
add
scas
shll
pop
hlt
cld
xor
in
xchg
shll
cwtl
repnz
lahf
icebp
ret
scas
dec
ljmp
imul
xchg
out
dec
ljmp
inc
jp
popf
adc
cmp
icebp
addr16
ret
inc
ljmp
or
mov
mov
push
pop
cmc
popf
cmpsb
loopne
fnstenv
repz
adc
xchg
mov
in
or
sbb
popf
scas
mov
push
sahf
and
mov
and
aam
aas
adc
in
leave
aaa
ljmp
popf
lods
inc
sahf
dec
sub
inc
loopne
je
xchg
imull
push
sub
inc
xchg
push
aam
lcall
out
dec
test
xchg
lcall
inc
das
dec
ret
mov
and
inc
repz
and
pop
mov
mov
xchg
sbb
ljmp
mov
leave
loop
insb
popa
push
mov
lock
jne
add
inc
jne
int
incb
dec
test
mov
popa
jecxz
and
sub
in
and
cmpb
jmp
cmp
ret
cmp
xchg
adc
and
dec
gs
sbb
rcll
insb
xor
fldcw
insl
mov
rcll
lds
idivl
or
mov
dec
pop
cli
add
push
mov
or
out
ret
js
das
movsl
lods
cmp
out
wbinvd
ret
jbe
jle
iret
push
lea
je
call
dec
testl
ds
dec
sti
ret
jl
or
ja
lods
fsubs
in
mov
push
xchg
mov
jl
pop
sub
sub
inc
mov
je
les
repnz
push
dec
xlat
je
dec
xchg
sbb
std
jle
lcall
sub
out
and
or
int
mov
cmc
ss
adc
xchg
jns
popf
imul
pop
xlat
ret
push
xorl
ret
jnp
out
xchg
mov
in
scas
xchg
lcall
fidivs
jno
fsubrp
popa
leave
jecxz
in
in
add
leave
mov
mov
adc
push
sub
push
or
jbe
pop
in
and
add
xchg
subb
xchg
jns
push
dec
testl
cli
xchg
ret
push
gs
and
sbb
cmp
sub
movsl
dec
adc
rcll
lret
int3
pop
aas
xchg
scas
push
nop
add
jge
cmpsl
out
mov
pop
or
dec
and
inc
das
in
shrb
mov
mov
repnz
lahf
ja
sbb
iret
adc
dec
and
leave
daa
lahf
es
pop
mov
jle
or
mov
ss
movsl
or
test
scas
loop
movsl
cld
sub
mov
imul
mov
sub
hlt
sbb
or
les
incb
xchg
push
sub
cmpsb
hlt
pusha
scas
xor
push
push
icebp
test
jae
mov
dec
cli
ret
push
push
pop
lods
pop
xor
data16
add
je
ret
jns
push
sub
lea
orb
adc
pop
stc
popa
cmpsl
cmp
subl
add
out
loopne
add
cmp
mov
add
push
test
test
mov
pop
out
data16
sbb
jae
subl
jo
dec
xor
mov
jns
hlt
sbbl
pop
and
xchg
add
sbb
loope
sub
or
leave
push
xchg
int
push
decl
add
imul
call
pop
mov
movsb
sub
pop
jle
in
arpl
stc
inc
scas
outsl
mov
sub
xlat
insl
pop
ja
rol
mov
test
push
inc
mov
push
mull
mov
jns
repnz
leave
cmp
es
in
jp
xlat
add
inc
xchg
push
push
xor
dec
lcall
xchg
into
jg
jl
stc
insl
pcmpeqw
test
outsl
loopne
xchg
cmp
divl
pop
mov
mov
mov
fcoms
jecxz
dec
cmc
dec
jns
jno
pushf
fcoml
add
lea
aam
sbb
jae
and
lretw
ret
inc
mov
es
mov
xchg
iret
mov
inc
mov
xchg
fnstsw
mov
adc
gs
cwtl
nop
sbb
scas
cld
outsb
sub
ss
imul
popa
sbb
mov
jg
test
ja
addb
push
mov
xchg
insl
testb
cmp
xor
xor
inc
incb
mov
add
lahf
mov
lea
jne
mov
mov
jne
xor
and
aaa
pop
pop
popa
dec
icebp
leave
xor
mov
frstor
push
add
mov
push
cli
or
xor
std
and
mov
loope
ja
and
fs
loopne
pushf
jno
mov
cmpsb
daa
test
cld
repnz
pop
sbb
cpuid
jbe
add
push
cmp
imul
cmp
imul
sbb
outsb
out
mov
mov
mov
popf
repz
pop
pusha
pop
push
aaa
cmpsb
mov
or
decb
jg
xor
add
lret
xchg
xchg
insl
push
add
je
pop
imul
adc
iret
insb
outsw
jp
lahf
je
sub
stos
ja
mov
pop
dec
rorl
rorl
test
adc
cmp
xor
and
repz
add
sbbl
or
outsl
insl
imul
mov
xor
xchg
cltd
scas
lcall
mov
clc
pop
sbb
lods
inc
xchg
xlat
cmpl
jp
movsl
or
insb
dec
push
push
clc
xlat
adc
enter
push
xchg
int
xchg
jg
stos
push
pop
rcll
xchg
add
adc
bound
dec
mov
test
xor
pushf
dec
setnp
sbb
out
mov
add
arpl
das
jb
es
adc
lcall
mov
pop
ja
pop
loopne
jb
inc
pop
in
cvtps2pi
out
dec
outsb
jno
xchg
bound
clc
sbb
push
mov
idiv
add
mov
sub
add
sbb
test
dec
int
pop
lcall
sbb
fidivs
ret
into
clc
test
mov
dec
mov
fdivrl
ror
xorl
gs
push
les
insb
xor
and
adc
rorl
ret
mov
pop
fs
fnsave
cwtl
cltd
cmpsb
inc
and
pop
pop
dec
ret
ss
xchg
xchg
inc
mov
imul
stc
fidivrl
xor
andl
stos
and
inc
sub
cli
or
sti
adc
test
dec
sub
roll
imul
les
push
cltd
dec
insb
dec
pop
insb
add
sub
jle
jne
dec
pop
dec
xor
mov
sti
mov
cmp
ja
scas
or
inc
sbb
lock
jmp
stc
and
pop
cmp
sub
mov
fstps
xor
jmp
adc
dec
loopne
not
lret
fistl
movsb
out
insl
lcall
or
pop
dec
and
push
push
je
mov
nop
xchg
jb
or
aam
into
lret
mov
lea
cmp
fs
bound
imulb
mov
scas
xchg
or
outsb
ret
notl
aam
cmp
lock
mov
cmc
lret
outsl
mov
adc
test
inc
addr16
mov
cmp
daa
push
aam
mov
outsb
jl
aas
fistpll
aas
int3
fs
push
sub
and
sub
out
sbb
dec
lock
cmp
sub
cmpsb
arpl
cltd
test
add
shll
sbb
push
sbb
mov
mov
test
inc
jae
in
xchg
mov
mov
pushf
mov
lock
data16
dec
inc
mov
add
xor
stc
jae
call
ljmp
jne,pt
xchg
clc
mov
popl
pop
push
mov
sub
adc
and
loopne
mov
fildl
and
ficompl
pushf
addr16
add
push
push
inc
call
out
ljmp
shrb
std
xor
scas
ds
jle
cltd
mov
fdivs
cmpsl
test
inc
cs
dec
cli
sahf
outsl
in
jne
shl
in
xor
clc
ret
stos
mov
jl
mov
shlb
xlat
in
movsl
cwtl
aad
mov
ror
jne
ja
dec
cmp
dec
rorb
lds
inc
int3
sub
clc
pop
pop
aad
push
iret
enter
imul
xor
and
int
dec
mov
push
push
aas
in
push
fistpll
jns
ljmp
mov
and
fdivrp
out
xchg
or
and
fists
hlt
cwtl
test
cmp
loope
sub
adc
inc
mov
hlt
jb
and
mov
xchg
lods
add
mov
jle
mov
sbb
or
mov
jnp
lea
mov
rcll
sbb
andb
adc
sub
dec
jmp
dec
int
ja
and
xor
sahf
pop
repnz
sbb
inc
xchg
jle
and
lahf
ror
jns
int
insb
lock
scas
inc
mov
jae
icebp
mov
gs
xor
test
mov
or
adc
fs
push
cmp
add
fsubrs
xchg
test
repz
addr16
jl
mov
dec
daa
stc
sub
loope
in
mov
jp
addr16
adc
push
sbb
xchg
lods
ffreep
mov
adc
xchg
mov
test
arpl
jno
repnz
bound
or
js
and
jg
shr
cmp
or
shlb
mov
adc
xchg
push
inc
movsl
loope
das
andb
jns
push
jbe
pop
dec
inc
xor
shrl
loopne
shlb
mov
scas
pushl
insb
and
pop
lret
xor
lods
outsl
pop
gs
add
add
push
orl
cld
nop
fistpl
or
push
fisttps
and
test
movsb
sbb
dec
mov
outsb
inc
push
pop
out
into
lahf
jnp
jge
into
cmp
cld
js
xor
jle
mov
jo
loop
xchg
sarl
adc
sarl
mov
pop
cmc
jle
mov
testl
mov
cs
mov
xchg
xchg
lds
dec
sub
ljmp
mov
iret
addr16
aas
mov
cli
jg
push
repnz
outsl
cmp
mov
ss
clc
xchg
lret
cs
mov
pop
xor
push
pop
jmp
divl
lock
hlt
xor
pop
adc
cmpsl
xchg
lock
lock
rcll
lea
ret
enter
leave
dec
js
inc
cld
repnz
add
daa
js
cmp
scas
lock
int3
cld
mov
jnp
dec
push
xchg
sti
xor
aam
lcall
cmp
or
je
les
nop
bnd
sub
cmpsb
xchg
and
lahf
fisttps
mov
sti
xchg
cld
mov
adc
ja
out
les
inc
int
mov
outsl
loopne
push
sub
and
aam
in
pop
test
imul
and
in
int3
scas
adc
cld
fcompl
and
arpl
and
push
insb
sbb
or
lea
arpl
mov
push
cmc
aam
lret
test
shlb
repnz
loope
jae
fisubrl
push
repnz
repnz
or
jge
pop
cmp
sti
sub
mov
or
aad
test
pop
es
push
sahf
jns
cmp
shlb
xor
cmpsl
int
cmpsb
push
invd
jo
mov
shrb
fistl
or
pop
xchg
mov
or
mov
pop
sub
inc
dec
stos
jecxz
xor
shlb
mov
int
popf
hlt
or
or
enter
repnz
movsl
aam
cmp
sahf
scas
inc
std
aaa
cmpsb
xor
mov
lret
out
aaa
cs
mov
pop
mov
mov
push
and
hlt
adc
pop
outsl
mov
shlb
jmp
or
mov
out
inc
aam
push
sbb
test
mov
stc
or
ds
sbb
ja
push
loope
test
aaa
xor
pop
enter
addb
fwait
pop
mov
movsl
setg
or
jbe
mov
fisttpll
add
cli
cmp
les
xchg
hlt
pusha
out
push
mov
scas
cmp
mov
ja
loop
push
sbb
jne
xchg
roll
or
sar
xchg
lock
or
mov
subb
fdivrs
fstl
or
dec
andl
push
dec
cli
pop
in
lcall
nop
insb
in
mov
pop
fistpll
sahf
and
pop
in
dec
out
or
and
pop
lret
pusha
cmp
mov
cmpsb
add
sahf
fstpl
sbb
cwtl
add
mov
adcb
addb
iret
mov
lcall
sti
les
fs
call
jmp
lret
dec
xchg
xchg
sbb
sarb
inc
rcrl
sub
xor
xlat
fstpl
lods
xchg
pop
sbb
xchg
pop
or
lcall
push
xor
xchg
sbb
jns
and
aas
ljmp
cld
cmp
push
xchg
push
ja
dec
xlat
lahf
jb
in
jl
sti
mov
es
fidivrs
mov
mov
cli
mov
pop
enter
ja
and
pop
xor
aam
pop
fs
mov
scas
test
push
mov
xchg
aas
adc
nop
in
mov
stos
in
imul
mov
cmp
nop
push
jno
pop
dec
push
clc
in
sti
push
adc
ret
enter
imul
iret
mov
popf
xor
and
dec
cmp
jle
sub
cmpsl
cs
mov
fistpl
fnstenv
cli
mov
sub
and
repz
inc
nop
iret
dec
push
dec
jg
cwtl
xchg
imul
stos
gs
leave
push
nop
sub
lds
push
and
aad
popf
ficoms
mov
mov
or
ret
dec
dec
pop
stos
cli
cmp
loopne
aas
cmp
aaa
cli
shlb
cmp
test
stc
sbb
xchg
push
push
adc
xor
push
push
imul
xlat
or
fisubs
pop
test
or
jns
aas
rcrl
mov
pop
inc
sub
jbe
decb
leave
sub
mov
call
xlat
insl
pop
jecxz
ja
cmp
dec
enter
add
mov
xor
fnsave
jle
dec
std
aas
ret
pop
xchg
fwait
xchg
mov
mov
incb
pop
push
pop
orl
mov
cmp
bound
xchg
sbb
mov
mov
jb
pop
mov
xlat
mov
aad
fmuls
daa
push
fs
popf
cmp
out
pop
enter
jo
xchg
or
imul
cwtl
xlat
xchg
add
rolb
aaa
add
xor
lea
icebp
dec
out
push
ljmp
add
jp
xchg
cmp
pop
and
pop
aaa
sub
push
cli
jle
movsl
adc
mov
aas
push
jg
ds
in
imul
jmp
or
lahf
scas
lock
mov
outsb
sbb
lcall
cmp
aaa
ljmp
sarb
arpl
add
push
and
xor
lods
mov
aad
push
xorl
es
fwait
inc
mov
cli
or
cld
addr16
xor
aaa
xor
push
jecxz
jecxz
aam
push
mov
bound
lock
jnp
mov
mov
mov
adc
pop
mov
sbb
mov
andb
imul
xlat
jmp
add
jmp
push
fdivrl
hlt
es
leave
push
jg
mov
cltd
pushf
cmc
mov
inc
std
adc
fwait
ret
icebp
push
psllq
dec
out
insl
mov
push
je
fcmovu
daa
gs
aam
xchg
push
mov
bound
cli
or
pop
outsb
int3
cmp
into
dec
jbe
dec
shrb
icebp
push
mov
dec
lods
mov
add
jbe
fwait
and
lret
inc
dec
ljmp
jp
repz
imul
into
mov
xchg
push
xchg
jmp
or
es
in
cli
add
fsubrl
jb
adc
hlt
insb
inc
in
or
pop
stos
pop
jecxz
xchg
out
scas
cld
jb
push
adcb
cmp
cmpsl
xor
lcall
sbb
mov
mov
rcrl
or
mov
dec
push
ret
orl
jmp
sub
jb
bsr
rcrl
sub
pusha
jno
mov
mov
cld
inc
xor
fwait
dec
int
sbb
pop
xor
ja
cmp
jne
add
push
add
ret
cmp
nop
scas
loopne
or
imul
jo
mov
mov
dec
adc
mov
stos
sub
cmc
push
pop
push
jp
mov
push
sub
into
inc
int
ja
out
jno
lods
add
mov
fdivs
xchg
rclb
cwtl
xor
daa
into
cmp
movsl
cmp
add
in
shll
test
pop
adc
bound
cli
lock
push
pop
leave
subl
mov
out
mov
pushf
mov
mov
lret
mov
mov
cmp
enter
leave
pop
scas
out
das
insl
add
dec
sub
dec
push
setne
mov
pop
negl
outsb
cmp
xchg
jne
xchg
cmp
rclb
enter
mov
push
push
sub
lret
ss
cmpsb
xor
inc
cmp
enter
dec
cmp
cmpb
or
push
sbb
xor
mov
out
aas
lret
imul
rorb
adc
jle
dec
loop
jp
dec
xor
out
xchg
adc
dec
in
and
inc
mov
mov
xchg
and
jl
movsb
stos
js
popf
sahf
add
mov
pop
stc
mov
sub
mov
mov
pop
mov
in
sbb
xchg
lcall
das
jle
xchg
jl
rcll
xchg
xchg
mov
inc
nop
gs
xchg
dec
jge
pushf
dec
jbe
xchg
ret
mov
adc
lahf
sub
into
add
xor
push
pop
cli
mov
pop
dec
or
inc
xchg
cmpsl
inc
and
test
cltd
mov
insb
mov
jae
or
leave
jb
push
adc
and
xlat
sub
mov
ss
mov
lods
scas
fsts
dec
lahf
inc
push
mov
jno
imul
sbbb
test
pop
pusha
sub
lahf
adc
pop
subl
push
test
insb
cltd
std
insb
pop
push
dec
jo
mov
loopne
stc
movsl
pop
fistl
mov
mov
or
arpl
into
add
paddd
icebp
out
fwait
push
dec
jmp
in
add
mov
mov
ljmp
jl
mov
cmp
pop
jecxz
and
jb
bound
sub
rcl
mov
xor
or
ficompl
insb
push
mov
or
mov
mov
dec
inc
in
xchg
mov
cmp
sahf
outsb
cmp
push
out
lcall
js
inc
scas
dec
or
fsubr
mov
inc
mov
mov
cmpsb
popa
mov
rcl
pop
fildll
sar
xor
jle
repnz
test
mov
sbb
testl
int3
test
cmc
cmp
push
xchg
hlt
cmpl
test
pusha
add
mov
xor
popf
push
or
dec
mov
cwtl
xlat
fwait
call
xor
std
sti
repz
push
popl
out
cmc
shlb
cmc
push
fwait
repnz
mov
fsubs
pop
cmp
or
lea
sti
push
add
add
shlb
std
mov
mov
fdivl
and
sub
cmpsl
test
mov
ljmp
jne
xorb
mov
shl
and
int
mov
jmp
jl
mov
mov
mov
imul
test
push
clc
adc
xchg
push
addr16
cwtl
lea
pop
jg
inc
sbb
mov
mov
inc
ret
push
xor
pushf
sub
imul
cld
cmp
sub
inc
fstpt
test
push
shr
cmp
nop
jne
mov
lcall
andb
push
xchg
jecxz
orl
inc
jecxz
sti
xchg
lret
add
cmp
and
out
adc
mov
xchg
and
loope
mov
inc
icebp
out
aad
aas
cmpsb
inc
jae
leave
test
pop
xlat
xlat
popa
sbb
mov
adc
js
sub
andl
aam
iret
pop
lret
mov
xor
pop
mov
jns
in
test
add
cli
jge
ss
mov
sahf
sti
daa
push
or
in
inc
lock
mov
lock
inc
lret
pop
add
imul
mov
mov
decb
shrb
mov
scas
xchg
outsb
scas
cltd
mov
ficoms
inc
jo
adc
dec
mov
cltd
out
mov
xlat
adc
scas
repz
cmp
pop
and
lock
lahf
bound
ret
pop
cmc
mov
mov
add
push
pop
lods
mov
add
leave
lods
sbb
in
mov
out
mov
ret
sub
ljmp
jns
jo
cli
outsb
mov
xor
pop
iret
add
aam
and
std
sub
loopne
lcall
inc
mov
lods
sub
shlb
mov
sahf
adc
pop
out
pop
push
test
ja
aad
dec
sub
mov
pop
mov
leave
push
test
push
push
leave
inc
shr
or
and
push
inc
fwait
and
in
insb
lcall
xchg
mov
push
scas
xchg
mov
or
bound
div
movsb
mov
push
ret
pop
dec
inc
mov
cmp
clc
xchg
jge
jb
rorb
dec
nop
jno
mov
push
sub
xor
imull
mov
leave
inc
sti
cmc
pop
ret
add
add
shll
repz
stos
bound
push
xchg
test
jp
shll
into
call
std
aad
add
push
pop
push
aaa
sub
orb
cltd
out
dec
ja
and
clc
xor
mov
das
jle
add
shlb
in
mov
jo
inc
and
lods
imul
std
aam
in
mov
stc
out
push
inc
mov
dec
daa
adc
push
push
xchg
cli
mov
push
mov
cmp
mov
sub
mov
or
rolb
or
std
xchg
cli
aaa
out
or
outsb
enter
mov
inc
sbb
mov
fistpl
insb
ficompl
mov
rcll
pop
add
scas
add
or
cs
cmp
and
push
push
popf
data16
sbb
mov
inc
inc
and
test
out
push
and
sub
push
stos
xchg
xchg
cmpsb
xor
jge
and
and
add
mov
mov
pop
cltd
inc
fists
cwtl
and
fisubrl
cmp
sahf
or
test
pop
sahf
movsb
mov
das
or
pop
les
mov
add
daa
pop
in
outsb
inc
mov
jmp
and
mov
stc
push
sti
xor
sti
cmpsb
icebp
shrb
jns
clc
jno
leave
push
xor
sub
jnp
mov
cli
xchg
addb
int
cmp
mov
cld
iret
in
rorb
mov
xchg
mov
inc
in
clc
jp
push
xor
jp
int3
aam
outsb
int3
add
pop
repnz
jo
cmpb
cli
jecxz
iret
adcb
inc
mov
inc
jmp
loopne
sub
outsl
add
xchg
add
mov
inc
mov
jne
pusha
pop
jl
mov
xor
aad
and
pop
dec
in
mov
add
stc
inc
sbb
pop
adc
fsts
js
or
mov
jns
sub
sbb
shl
cmpb
cmpsb
sbb
xchg
add
mov
iret
jmp
cmp
std
push
outsb
es
lret
clc
sub
mov
cmp
int3
sbbb
adc
xchg
lods
in
cli
sub
xchg
adc
out
xlat
jo
push
in
lds
mov
outsb
inc
mov
mov
xor
arpl
sub
mov
cmpsl
add
jbe
cmp
arpl
add
cmp
xchg
xor
xor
cmp
dec
roll
aam
or
add
pop
rclb
or
sub
sbb
pusha
mov
lea
scas
repnz
cmp
repz
hlt
dec
mov
mov
pop
repz
cmpsb
ss
imul
lods
lcall
jle
or
adc
mov
pop
es
loopne
ds
or
mov
aam
xchg
adc
push
js
cwtl
out
xchg
mov
sarb
sub
scas
xor
out
mov
jmp
aaa
bound
mov
cmc
dec
pop
mov
inc
lret
pop
and
mov
xor
movsl
xor
negb
lds
push
gs
ds
jecxz
mov
sbb
pop
cmpsl
pop
xchg
clc
bound
fucomip
inc
pop
ljmp
in
dec
add
mov
outsb
aam
or
cmp
mov
stos
jge
pop
or
idivl
cmp
cmp
inc
rorb
push
mov
rcrl
fdivl
and
xchg
mov
jecxz
scas
jo
mov
lods
cmpsb
fst
ss
mov
mov
xchg
mov
inc
mov
inc
pop
jae
mov
push
iret
push
sbb
imul
jno
testb
adc
pusha
mov
daa
in
rcll
and
inc
cmp
jmp
rcrl
lods
and
cmp
cs
arpl
inc
jecxz
push
test
dec
mov
adc
jb
jo
mov
test
je
add
into
or
mov
ss
cmp
stc
repz
pushf
fidivs
add
out
jp
int3
repz
cmp
jbe
add
jae
bndldx
lea
shl
jmp
push
mov
adc
jb
loopne
test
addr16
inc
dec
mov
pop
out
sub
lds
cmp
jecxz
pop
mov
lahf
mov
cmpsl
int3
sbb
and
fiadds
out
in
xchg
and
test
mov
mov
pop
mov
shl
mov
pusha
sub
add
dec
push
mov
mov
mov
lcall
add
mov
inc
push
jmp
lret
shlb
inc
sub
inc
mov
aad
adcb
nop
cmpb
sbb
lea
mov
js
into
pusha
ret
enter
dec
shll
in
bound
cli
mov
aas
pop
push
cmp
test
lea
cmp
jp
mov
popf
cmpsb
mov
stos
jge
outsl
push
jns
mov
xchg
popf
hlt
pop
repz
mov
fstpt
mov
insb
push
out
add
inc
inc
lea
inc
add
mov
test
loop
pop
clc
push
push
arpl
pop
pop
sahf
in
int3
test
stos
jp
out
push
das
lret
or
orb
mov
add
xchg
pop
arpl
es
ja
and
or
sbb
fstpt
xchg
and
enter
pop
cmp
bound
aad
imul
aam
push
mov
bound
movsl
xor
dec
insb
gs
fdiv
daa
xchg
mov
cmp
clc
push
jnp
cltd
lret
mov
and
jae
in
pop
sbb
lods
fisttpl
and
and
in
adc
inc
aam
push
scas
test
inc
rcrl
cmovns
jmp
sub
or
stos
jbe
popa
in
cmp
clc
mov
push
adc
flds
jnp
inc
gs
cmp
lea
mov
leave
fldl
lods
lcall
mov
dec
jl
adc
sub
cmp
lcall
push
cli
adc
movl
test
mov
dec
test
inc
fidivs
out
inc
jns
pop
fldl
imulb
push
jae
jo
in
and
mov
out
and
inc
inc
das
dec
push
ljmp
xchg
and
cmp
inc
add
rol
mov
lds
add
sub
xchg
enter
xor
mov
sbb
dec
jmp
add
mov
lcall
push
and
push
ja
adcl
shll
xchg
int
into
lds
outsb
mov
les
loopne
jge
dec
ret
bound
jle
or
xchg
shlb
sub
scas
in
lret
add
pop
xchg
int
lock
cmp
mov
int3
pushf
cmp
je
xchg
sbb
adc
mov
jp
pop
adc
sub
clc
es
pop
lahf
stc
sub
ja
mov
or
sub
xchg
or
xor
out
mov
popf
rcrb
pusha
jae
mov
dec
sub
adc
pop
mov
adc
mov
mov
dec
ljmp
lods
movsl
and
pop
sbb
xchg
push
xor
pop
mov
xchg
or
stc
test
cld
xorb
xor
addl
push
lcall
mov
push
push
test
or
mov
cmp
pop
jo
adc
add
je
push
jbe
sbb
inc
loop
ficoms
and
jmp
cs
decl
or
fildl
jmp
inc
sub
in
cmp
xchg
sub
cmpsb
in
subb
push
jae
cmp
out
stc
inc
movsl
inc
in
or
bound
dec
mov
xor
stc
adc
jp
lods
or
or
pop
mov
jae
scas
das
mov
shll
pushf
push
pop
xchg
dec
test
pusha
in
insb
cmp
iret
rcrw
mov
scas
pop
add
filds
call
repnz
shll
js
mov
outsb
pop
push
into
cmpsl
sub
xor
xor
ljmp
inc
call
lods
cmp
xor
dec
mov
shll
cmp
iret
xor
pop
push
pop
jecxz
loopne
movsb
clc
repnz
scas
cmpsb
push
in
cmp
mov
mov
test
das
into
pusha
cmp
adc
cmc
cwtl
and
lea
pop
roll
div
sti
popl
mov
push
sub
jno
add
adc
mov
clc
ret
push
xchg
xlat
pop
sbbb
push
lods
dec
sbb
imul
loopne
mov
pop
cwtl
outsb
fisubrl
or
xchg
jo
ret
lea
pop
and
out
sub
int3
sbb
push
mov
nop
push
push
adc
daa
jp
jg
jae
inc
sti
add
cmp
xchg
movsb
push
cld
jge
and
ret
xlat
jp
inc
add
dec
mov
push
lock
sub
push
cmpsb
push
addb
and
inc
bound
add
xor
xchg
jno
add
test
rcl
inc
aam
aas
sbb
rol
xor
in
xor
andb
mov
mov
imul
jg
nop
bound
jnp
xor
xchg
jo
cmp
push
sub
push
pushf
mov
test
lret
sbb
xchg
gs
div
lcall
lods
add
jmp
imul
sbb
mov
cwtl
push
pop
ja
pop
js
fs
and
jecxz
jb
arpl
cmpsl
sub
stc
fisubs
pop
xor
dec
insl
mov
sbb
mov
xchg
arpl
bnd
mov
pusha
pop
dec
dec
dec
cs
xchg
mov
mov
fidivrl
lock
out
push
lgs
xchg
xor
jle
jp
mov
cmp
mov
xchg
loop
and
dec
dec
pusha
test
pop
out
insb
jle
mov
iret
and
jns
or
push
inc
xchg
jge
lods
or
lret
daa
movsl
rcll
push
into
addr16
add
stos
js
xchg
dec
inc
push
push
jl
cld
aaa
pop
and
and
in
sbb
popa
arpl
xchg
mov
fbld
and
sbb
enter
imul
mov
add
mov
movsl
mov
es
jmp
popf
jle
and
or
pop
xor
mov
call
inc
mov
rcl
xchg
jns
out
sti
sbb
cmp
imul
adc
enter
int3
dec
cmpsl
dec
adc
add
iret
pushf
jno
shl
stos
adc
dec
adc
movsl
dec
cmp
imul
inc
sti
mov
pop
push
sahf
lock
push
imul
inc
sbb
outsl
and
push
xchg
fwait
cmovb
xchg
sbb
push
xchg
mov
pop
repnz
jne
out
xchg
or
shlb
xor
mov
xchg
shrb
mov
adc
push
push
sti
mov
imul
add
sub
pop
or
inc
movsb
add
inc
je
sbb
dec
je
jle
fs
cmp
setae
ror
xchg
jae
fnstsw
mov
cmp
nop
mov
mov
pop
ja
mov
cli
sub
push
jno
lock
fidivl
rcll
gs
test
push
sahf
dec
stos
cmp
mov
fimuls
aad
test
mov
adc
mov
lds
dec
push
ja
and
dec
dec
adc
inc
stos
pop
pop
ljmp
je
sbb
adc
mov
lcall
pop
or
mov
inc
sub
notl
loopne
lret
and
scas
pop
cmp
xchg
das
xor
fcoml
dec
out
cmp
sbb
dec
lea
push
mov
test
jle
test
sub
es
sar
dec
daa
cli
movsl
scas
out
pop
jno
cli
cld
inc
movsb
movsb
jmp
pop
xor
push
xlat
data16
push
mov
nop
xor
mov
rolb
shl
dec
and
cwtl
pop
outsb
repnz
aam
xor
rorb
rclb
xchg
insl
jns
mov
lods
xor
in
sbb
divl
pop
icebp
jno
ret
cmp
mov
adc
sbb
jno
jae
out
mov
push
push
stos
lcall
cmp
cmp
ret
jnp
into
cmpb
lret
sub
scas
decb
cli
push
jb
mov
cmc
fwait
aad
adc
add
je
xor
pop
movsl
sbb
or
mov
sbb
add
pop
add
in
icebp
lret
and
jmp
aam
sar
std
xor
frstor
mov
pop
pop
xchg
mov
mov
popa
add
or
fnstsw
jo
stos
cld
lea
adc
jecxz
xchg
adc
mov
mov
iret
popa
mov
xchg
es
enter
pop
dec
xorb
pop
pop
icebp
cmp
cmp
gs
sub
inc
jmp
jns
sahf
pop
sbb
push
dec
push
jp
lods
ficoms
push
ss
popl
jmp
sar
or
repz
add
and
stos
aas
pusha
mov
jns
xchg
aaa
mov
or
cli
rol
mov
rorb
fidivrl
sbb
xchg
sbb
jg
insb
sbb
addr16
movsl
in
or
cld
pop
cs
mov
add
jg,pt
push
pop
cmp
cmp
add
shl
mov
mov
sbbb
lret
push
xor
jmp
add
xchg
pop
test
sbb
mov
sti
mov
push
xchg
std
add
adc
int
fsubs
dec
fwait
xchg
or
add
dec
mov
lret
dec
jl
pop
add
icebp
dec
fs
jae
int3
mov
fadd
cmp
stos
fisubl
ss
enter
and
push
in
orb
sbb
jns
or
xor
je
mov
pop
add
add
push
adc
mov
mov
mov
mov
in
arpl
into
or
push
or
xor
and
sub
pop
inc
data16
scas
mov
sub
imul
mov
in
pop
and
adc
push
sbb
jo
fnstsw
jp
ja
mov
xor
je
xchg
cmpsl
jns
lods
dec
add
inc
pop
fwait
aad
clc
enter
cli
xor
lods
cmpsl
mov
xchg
icebp
lret
xor
and
out
and
dec
dec
rol
dec
pop
fcmovb
sbb
xor
ret
lcall
dec
mov
scas
mov
je
icebp
je
hlt
mov
or
enter
sbb
fldenv
enter
nop
ljmp
push
add
jne
ffree
clc
xor
or
mov
or
fistpll
fwait
add
adc
mov
shl
jecxz
pop
fxch
pop
pop
jns
out
cmpb
rcrb
dec
loopne
pop
das
xor
int3
cmp
inc
mov
fwait
pop
or
pusha
xchg
mov
xchg
shl
lock
or
xor
out
fld
mov
add
ret
cmp
xchg
cmpsb
xchg
sbb
pusha
cmp
int3
push
cmpsb
lret
and
mov
or
jb
jp
mov
movsb
fsubp
pop
pop
insl
cmpsb
fcmovnb
jg
enter
rcrb
and
movsl
lahf
fs
cli
verw
loop
fwait
and
dec
popf
ret
or
push
sub
aam
and
lds
int
cwtl
cli
xor
fdiv
fsubl
test
bnd
mov
pop
popf
cmp
les
pop
jbe
leave
lock
testl
outsb
jnp
mov
enter
outsb
test
aam
stos
fwait
inc
sub
stc
adc
mov
lret
dec
dec
xchg
mov
jmp
lods
mov
add
mov
daa
xchg
in
cmpsl
pop
adc
sahf
repnz
xor
dec
js
and
imul
sti
mov
mov
ficoms
bound
into
dec
or
xor
lods
test
fwait
ja
out
xlat
in
cmc
add
xor
ret
push
adc
pop
scas
mov
mov
flds
and
fld
dec
cmp
ror
pop
loopne
mov
mov
push
dec
xlat
mov
es
push
in
jmp
and
cmp
enter
push
mov
jbe
cmc
pusha
adc
inc
mov
outsl
or
icebp
fisttps
aad
adcb
and
dec
enter
sub
fisubl
data16
mov
or
in
lods
mov
out
mov
mov
lret
or
bound
es
jg
pop
lods
jno
aas
ror
push
testb
into
and
jns
pop
clc
scas
push
andl
push
or
icebp
neg
sub
inc
dec
stc
push
push
and
xchg
or
lock
clc
iret
add
fwait
add
mov
das
adc
add
inc
outsb
fs
and
test
call
mov
sbb
aad
lret
das
popf
add
sbb
or
into
scas
out
adc
pop
aad
sub
mov
dec
xor
inc
cmp
xor
movsb
fsubrs
je
emms
in
fsubrs
movsl
fcmovne
and
ja
movsl
push
mov
and
pop
fadd
pushf
fld
rclb
inc
rolb
andl
ficoml
es
cltd
jle
in
mov
inc
stc
insl
loop
fwait
add
stos
lahf
inc
mov
jge
xlat
or
in
or
es
cmpsb
or
adc
pop
jne
insl
test
mov
dec
jmp
sbb
add
sbb
mov
mov
dec
cmp
testb
fcmove
movsl
add
dec
push
push
popa
je
les
sub
pop
mov
mov
xchg
cmp
test
adc
inc
xor
or
nop
cmp
jb
push
jo
and
push
loop
shlb
and
lahf
data16
mov
dec
xchg
or
js
inc
loope
mov
ret
xor
insb
popa
adc
mov
cmp
or
sub
add
sbb
out
sub
push
or
inc
jmp
arpl
xlat
icebp
les
inc
mov
add
outsb
dec
stc
mov
dec
push
icebp
mov
out
in
inc
psubusw
ret
jno
sbb
sub
stos
sub
jmp
mov
fucomi
out
outsl
adc
inc
mov
sbb
push
or
mov
fwait
scas
mov
or
add
idivl
inc
adc
xchg
mov
jl
and
rolb
or
mov
gs
fcoml
lea
test
cld
lret
sbb
xor
lahf
mov
push
inc
jl
or
aaa
push
mov
cli
cmp
and
jmp
cmpsb
lds
sarb
ss
mov
pop
loop
mov
ds
test
mov
xor
in
roll
dec
pop
xchg
test
inc
mov
mov
pop
cmp
dec
mov
sbb
leave
cmpsb
xor
add
in
sbb
sbb
add
mov
mov
test
stos
jbe
das
xchg
out
std
mov
xlat
insl
jo
sub
repnz
push
or
pop
or
test
jns
push
das
sub
add
aad
sub
push
mov
das
mov
sub
out
test
insl
mov
jbe
insb
jbe
addr16
ret
jmp
cmp
jae
jg
fistpl
mov
xlat
inc
sub
jno
mov
fisubrl
push
lds
jb
mov
adc
out
or
pop
stos
pop
subl
cmc
ja
call
mov
push
push
in
mov
mov
fcmovb
jmp
push
add
insb
cmp
mov
adc
inc
lcall
xchg
xor
cmpsl
popf
dec
test
or
xor
test
and
push
insl
outsb
mov
and
mov
and
sbb
xorl
and
adc
inc
pop
pop
and
push
into
clc
xor
outsl
add
stc
ss
adc
shlb
dec
dec
ljmp
in
pop
pop
outsb
idivl
sbb
push
and
push
sbb
sbb
dec
adc
inc
sbb
out
scas
pop
aam
lock
jae
lcall
mov
and
xchg
cmp
lock
test
xlat
in
xor
xchg
in
rclb
or
and
mov
jle
mov
mov
cwtl
es
cltd
mov
cmc
sub
mov
cmp
lahf
cmpsl
and
into
arpl
mov
jge
sub
inc
popf
add
cmp
dec
stos
fisttps
mov
fcoml
sti
fisubl
jo
and
lea
test
popa
cmp
dec
xor
data16
sbb
mov
test
add
call
mov
jne
mov
mov
lock
jne
inc
sub
popa
mov
jg
stos
xchg
fistpl
xchg
add
mov
sbb
dec
mov
sub
ss
jno
mov
daa
in
xchg
jo
insl
cli
subl
shlb
inc
mov
ja
mov
int3
ja
outsl
mov
push
xchg
lods
pop
sbb
hlt
ror
mov
pop
rclb
mov
mov
or
xchg
sahf
mov
lret
jecxz
add
push
rclb
movsl
call
ss
mov
ss
mov
stos
incb
and
or
jmp
xor
inc
std
adcb
xlat
and
outsl
ret
dec
lahf
xchg
mov
dec
cli
out
adc
jmp
dec
data16
roll
js
shrl
mov
adc
cmpsl
cmc
push
jno
pop
cltd
movsl
cltd
adc
sub
icebp
mov
test
mov
sub
icebp
fs
or
dec
and
shr
out
and
sarb
call
dec
xor
data16
iret
dec
xchg
pop
cld
fwait
andl
cld
sbbb
push
pause
mov
mov
daa
je
call
rorb
fisttpl
and
packssdw
daa
mov
outsb
xor
je
rorl
test
shll
mov
test
push
and
das
lret
or
mov
sti
adc
fxtract
jge
sub
xor
sbb
xchg
sarl
loop
test
jnp
loop
cmp
stc
addr16
scas
xchg
imul
and
ret
mov
pusha
enter
pop
dec
loopne
mov
jnp
dec
or
lret
stos
mov
sub
xor
xor
rcll
and
cmp
je
rolb
outsl
pop
mov
test
pop
lahf
pop
stos
loopne
loope
cmp
leave
adc
jno
sti
nop
out
int3
cmp
sti
testl
or
dec
movsb
scas
xchg
cmp
mov
mov
jns
mov
xchg
jno
push
scas
lea
and
adcb
mov
aaa
leave
popf
mov
mov
scas
iret
adc
fs
jp
adc
cmp
mov
in
lret
das
ret
mov
or
out
xchg
push
or
sub
cli
aas
mov
adc
fadds
lods
pop
push
cmp
inc
leave
ds
fisubrl
outsl
data16
inc
jbe
dec
out
std
rorb
lds
sub
cmpsl
loop
fdivrl
add
mov
test
lds
nop
mov
inc
xchg
cmp
testl
aas
add
push
ljmp
or
push
fildl
jnp
xchg
and
sub
add
pop
ficomps
and
jne
cmc
test
push
xchg
sub
shlb
inc
jp
mov
ret
jae
sbb
out
add
cltd
rcl
xchg
cmpsb
scas
fisttpll
js
sbb
mov
jb
dec
push
ja
mov
cmpsl
cmp
add
in
cli
out
pop
jmp
insb
insl
dec
ret
ljmp
add
and
push
xor
mov
adc
les
push
cmp
fcmovnb
in
and
xchg
test
or
push
sbb
imul
jp
pop
mov
pop
das
add
jnp
cmp
dec
pusha
adc
js
jge
icebp
mov
aam
shlb
imul
cmp
cmpsl
mov
push
adc
jb
jl
mov
mov
int
mov
xor
cwtl
cmp
mov
imul
jg
movl
shll
shlb
shr
xchg
sbb
test
mov
jbe
add
dec
fdivs
dec
adc
push
mov
addr16
adc
pop
es
in
stos
sbb
fdivrl
add
aam
push
push
cs
iret
repz
in
inc
imul
mov
cmp
dec
movsb
inc
mov
or
stos
loope
mov
push
loope
pop
jbe
add
or
int3
and
sbb
iret
xor
adc
sahf
outsl
dec
popf
xchg
xor
cmp
ds
out
push
add
sarl
inc
mov
lahf
xor
cmc
jmp
icebp
cmp
repnz
mov
pop
pop
xor
sbb
stos
push
jl
jo
pop
notb
test
adc
mov
and
mov
adc
push
into
std
mov
pop
mov
jge
mov
jl,pt
inc
loope
and
cmp
cmp
int
mulb
cltd
test
or
sti
lods
lods
jmp
xor
cmpb
mov
cld
xor
das
data16
sub
scas
out
rcrb
fiadds
mov
fldl
or
scas
cmpsl
sbb
pop
or
ret
mov
lcall
ja
pop
lahf
adcl
enter
push
lret
leave
pushf
shll
fcoms
push
or
fsubrl
xor
and
rolb
jns
inc
sub
popa
mov
fldt
fdiv
dec
insb
jmp
les
inc
out
cmpsb
out
test
jno
pop
adc
add
xchg
stos
mov
xchg
xchg
jns
in
jne
daa
add
fs
icebp
lahf
jecxz
fbstp
cmp
mov
dec
mov
arpl
mov
or
inc
test
push
jmp
incl
sbb
pop
test
jns
mov
es
test
jle
shlb
lret
cld
jecxz
orb
push
aaa
ss
aad
cmp
sub
mov
ret
push
clc
loopne
mov
insb
push
cmc
pop
fcmovu
mov
inc
lahf
jnp
out
imul
adc
xor
or
fisubrl
call
enter
sub
aas
mov
mov
cmp
jmp
add
jo
fisubl
fldl
call
das
add
sbb
dec
lret
add
test
das
roll
enter
inc
jnp
and
test
xor
mov
sahf
inc
es
sbb
jbe
imul
push
stos
mov
adc
push
cmp
jge
pop
jecxz
jno
outsb
fs
dec
sti
lcall
sbb
add
shrl
nop
cmpl
sti
stc
jae
jns
mov
pop
dec
outsw
and
int
mov
pop
inc
or
cltd
rorl
jbe
test
xor
xor
and
xor
je
pop
and
adc
add
dec
and
insl
add
sbb
or
xchg
xorb
ljmp
and
mov
push
out
test
inc
sahf
fnsave
aas
repz
adc
sbb
lods
sbb
jnp
sbb
lea
stos
sbb
sub
add
test
sti
movsl
xchg
fs
fidivl
xchg
mov
cltd
mov
sbb
push
pusha
xchg
inc
mov
xor
repz
jmp
insb
test
xchg
gs
fmuls
shrb
rcll
outsb
jae
test
push
push
mov
jb
loop
sub
cltd
rolb
add
adc
mov
jge
jno
xchg
mov
push
sub
scas
mov
ja
cmp
jle
jp
jae
push
lds
cmpsl
out
cmpsb
insl
cmp
int
jns
xor
mov
movsb
mov
adc
mov
lods
mov
test
mov
arpl
call
lds
fcomi
dec
jb
gs
xchg
imul
jmp
das
push
cli
das
or
ret
mov
jl,pn
jno
cwtl
bound
popf
les
outsl
les
aaa
xor
faddl
jp
adc
cmc
fldenv
repz
gs
in
dec
mov
jmp
mov
push
add
sarb
push
pop
dec
add
jmp
adcl
je
inc
inc
lods
cmp
mov
xchg
repz
cmp
stos
dec
lds
jne
sbb
and
nop
data16
addb
or
addr16
ret
dec
mov
and
out
rcl
insb
mov
mov
adc
or
cmpsl
inc
out
sti
push
xor
out
pop
add
fcompl
mov
cltd
enter
fsub
ret
push
and
mov
pop
hlt
not
or
out
and
bswap
sti
cwtl
or
arpl
xor
out
jb
out
dec
sti
jno
xchg
ret
cli
mov
xchg
cmp
loop
dec
icebp
pop
dec
stos
xchg
cltd
add
mov
into
dec
sahf
cmc
jle
mov
std
aam
sbb
outsb
push
push
mov
xchg
and
lods
cmpsb
mov
push
mov
cmp
mov
movsb
add
dec
gs
mov
jge
jg
sahf
xor
cwtl
sbb
mov
inc
jnp
sbb
pop
mov
xor
add
mov
or
pushw
ss
add
and
inc
jl
fbld
cli
shrl
mov
cmp
shl
in
inc
and
xor
sahf
ljmp
inc
mov
shl
clc
and
addb
push
aas
nop
out
and
cmp
das
mov
mov
loopne
aas
xchg
stc
loop
rorl
je
test
add
das
inc
nop
sub
scas
and
scas
sub
orb
das
lret
inc
or
push
xchg
fwait
sub
jo
call
xchg
or
faddl
faddl
lock
dec
out
or
pushw
pop
push
and
push
jmp
insl
cmc
jnp
mov
sti
rolb
jg
arpl
pop
incl
adc
push
mov
rorb
push
sbb
xchg
pop
jge
mov
mov
negb
inc
dec
hlt
test
int
xlat
mov
cmp
shl
cmp
and
cmp
out
imul
push
jne
movsb
cmp
mov
push
mov
adc
adc
mov
out
mov
or
xchg
adc
dec
gs
mov
cltd
dec
fdivrl
cmp
clc
fxch
push
lahf
movsl
ljmp
lods
dec
jb
stc
inc
ret
pop
ret
xor
incl
pop
shll
adc
testl
pop
lods
or
push
cs
mov
outsl
mov
iret
enter
mov
push
out
sbb
sbb
bound
mov
xor
or
cmp
cmp
outsb
jg
sub
mov
outsl
xchg
mov
adc
fcomps
addr16
lea
fldenv
mov
fld
pop
push
dec
insb
cmpsl
inc
xchg
das
dec
cmp
call
jbe
xchg
mov
sub
xor
mov
dec
mov
fstps
cs
mov
add
in
and
mov
cld
pop
jno
pop
inc
aaa
mov
je
int
jmp
test
or
push
adc
movl
or
loop
add
jecxz
fstl
xor
cs
xchg
inc
xor
inc
add
lahf
xchg
add
test
push
push
adc
fcomps
sbb
mov
out
seta
aam
popa
xchg
pop
popf
cs
pop
popa
sub
push
push
pop
inc
das
push
sarl
or
add
fistl
push
data16
mov
push
or
test
arpl
jmp
dec
fs
mov
pusha
pop
cmp
or
sti
jbe
push
jns
xchg
out
test
pop
mov
bound
lret
push
pop
push
adc
jne
sbb
scas
or
or
int3
pop
addr16
push
fwait
fs
jp
add
orl
dec
dec
out
mov
loope
ret
mov
pop
std
fldt
js
jnp
mov
sub
sbb
cmp
cwtl
add
and
xor
xchg
mov
and
mov
pop
les
sub
push
and
lcall
dec
fidivrl
out
mov
pop
mov
add
mov
pop
mov
mov
jecxz
mov
jae
cmp
shl
stos
fs
movsl
sub
or
pop
popf
inc
xor
popf
out
or
pop
cli
aas
mov
lret
jne
mov
cld
push
xor
jg
scas
mov
les
lds
and
mov
xchg
leave
aaa
sbb
ljmp
mov
sar
aaa
xchg
fwait
sub
inc
outsl
inc
aam
cmpsb
sub
and
or
mov
add
clc
in
ds
mov
mov
js
jbe
fs
aaa
fldenv
leave
jae
in
test
imul
push
adc
loop
mov
mov
rorl
hlt
cmpsl
sarb
lea
movsb
loopne
std
jo
mov
test
into
dec
mov
dec
jno
sub
dec
ljmp
mov
nop
in
mov
rclb
ds
cwtl
sub
mov
pop
adc
test
pop
je
aam
mov
inc
aam
outsl
aad
inc
lcall
push
adc
adc
pop
inc
jb
push
ficompl
lods
enter
dec
cmc
aas
mov
inc
mov
fidivrs
ljmp
mov
jg
movsl
out
enter
cltd
das
sbb
cmp
pop
in
mov
ss
je
cmp
jns
enter
cmpsb
int3
mov
ret
mov
xchg
mov
cs
xchg
ds
lods
mov
lock
xor
xlat
pop
lret
xor
xor
ja
int
mov
mov
leave
mov
fdivrp
in
arpl
dec
lods
fsub
stc
imul
bound
cli
mov
add
subb
mov
sbb
and
es
sbb
in
fwait
jno
adc
mov
mov
push
jbe
mov
loopne
sub
roll
and
mov
and
or
sbb
in
divb
add
xchg
add
jo
pop
lret
iret
es
dec
inc
sbb
xchg
daa
pusha
pusha
out
imul
mov
fsubrs
dec
gs
xchg
sarl
sub
stos
xchg
vphadddq
xor
xchg
roll
sbb
bound
sub
fwait
outsb
insl
sub
nop
icebp
cmp
rcr
cmpsl
inc
in
lods
pop
jmp
xor
ljmp
add
enter
mov
pop
push
inc
cli
xchg
xlat
leave
andb
mov
or
iret
rcrb
pop
adc
mov
stc
cwtl
orl
lods
call
cmp
insl
rorl
ffreep
fnsave
jae
cmpsl
push
pop
push
insl
cli
shl
and
jg
les
pop
mov
xchg
cmp
in
std
aas
dec
pop
mull
popf
rcr
jle
insl
xchg
jb
cmc
mov
adc
pop
faddl
iret
jns
pop
es
inc
stos
or
lahf
add
cmpsb
scas
cmpsl
fwait
or
xchg
int
into
sub
push
popa
js
gs
xor
jge
arpl
js
lods
sbb
stos
popa
aam
std
dec
sbbb
jmp
pop
std
stos
adc
xchg
inc
repz
dec
jbe
test
inc
sub
addr16
fcomps
or
mov
jne
jae
jo
rorl
sahf
sub
sbb
and
dec
mov
dec
add
add
mov
out
xor
sbb
sbb
or
push
mov
or
dec
pushf
cmp
xchg
fnstsw
mov
cmpsb
inc
adc
mov
or
loope
call
fnstsw
add
js
and
push
repnz
sahf
sti
jle
xor
shrl
and
lods
gs
jl
cltd
popa
popl
les
in
mov
lods
ret
mov
pusha
jg
jno
clc
incl
pop
sub
inc
sub
push
or
inc
leave
dec
pop
jge
mov
cmc
lahf
add
fnstsw
lods
xor
iret
cli
jae
xor
and
adc
mov
fisttps
mov
xlat
inc
mov
call
mov
push
enter
jne
roll
stc
mov
divb
push
mov
cmp
bound
push
call
xchg
dec
mov
cmp
idiv
and
inc
push
repz
push
mov
adc
cld
movsl
or
in
mov
fistpl
insl
fidivs
pop
in
add
stc
lock
xchg
adc
loope
lock
sarb
in
std
inc
imul
sbb
sarl
dec
mov
add
pop
push
mov
jns
or
push
sti
dec
loop
push
lret
fstpl
adc
xchg
stc
mov
xor
sub
jno
mov
mov
cmp
and
push
cmpsl
repnz
pop
dec
ret
imul
mov
add
sbb
sbb
and
shlb
cwtl
pop
push
roll
add
repz
mov
stc
jmp
xchg
fdivrl
out
xchg
icebp
scas
pop
sahf
mov
xchg
cmpsl
jmp
cmp
shr
test
fisubrl
xor
outsl
mov
ljmp
fisubs
stos
mov
dec
push
and
xchg
loope
push
add
mov
aad
push
movsb
sub
xchg
fsubrp
pop
lds
ret
and
lahf
inc
or
imulb
push
ss
jo
or
aas
lods
js
je
leave
xor
dec
inc
adc
leave
icebp
pop
pop
or
inc
jmp
xor
aaa
test
mov
mov
xor
out
jle
push
adc
notb
pop
test
mov
pushf
fldl
mov
aaa
das
lret
dec
popf
loope
loope
jg
popf
dec
lahf
and
subb
outsl
jns
loope
sbb
lret
dec
mov
flds
movsl
jae
aad
into
dec
sbb
mov
rorl
cmp
xchg
jle
int3
push
mov
ja
mov
cwtl
jle
mov
cli
andl
nop
outsb
mov
jbe
movsl
dec
mov
clc
mov
cmc
xchg
and
cmp
sub
push
fistl
cmpsb
fwait
adc
jp
mov
out
mov
push
mov
ror
sbb
int3
sub
mov
push
mov
fidivs
adcb
dec
in
iret
ret
insb
adc
imul
rcl
push
es
icebp
dec
jnp,pt
std
sbb
adc
out
loop
inc
xor
cld
lds
and
or
imul
dec
lret
test
pop
stos
das
push
mov
shlb
cmp
mov
repz
sub
std
data16
popf
bound
loope
adc
sub
inc
pop
dec
jle
loop
dec
adc
dec
xchg
iret
push
xor
add
xchg
out
dec
adc
fs
sub
dec
aam
arpl
add
adc
rorl
mov
jmp
add
xchg
xor
cmp
in
insb
adc
xor
les
imul
dec
push
negb
mov
ss
inc
sub
in
dec
lret
setae
xlat
or
out
mov
mov
out
decb
inc
jno
add
xchg
sbb
aas
mov
stc
ds
xor
jmp
fcmovu
mov
pop
jae
cmp
inc
jp
mov
jne
xor
push
xorb
cmp
dec
test
mov
out
sbb
sub
data16
mov
repz
add
test
sbb
push
mov
shrl
stos
repz
mov
add
lock
pusha
jmp
push
out
sbb
mov
cmp
xor
or
sbb
inc
aaa
xor
add
mov
ror
fiaddl
cmp
pop
lock
das
sub
and
mov
push
gs
add
dec
push
mov
xor
jmp
scas
mov
in
add
push
push
mov
shr
adc
sbb
outsb
cmp
icebp
leave
jns
dec
xchg
inc
push
cltd
out
outsl
loopne
fcomp
call
std
jmp
test
cs
mov
inc
jmp
mov
lret
jg
pop
outsb
mov
mov
dec
repnz
int
mov
xor
aaa
subl
pop
mov
sahf
in
pop
or
jmp
or
shl
popa
int
sbb
int3
pushf
inc
sbb
pushf
add
fstpl
cmp
mov
cli
mov
inc
cmpsl
mov
iret
push
dec
pop
and
jb
pop
mov
repnz
imul
xor
faddp
xlat
adc
pushf
inc
clc
push
mov
push
lock
imul
sub
pop
fwait
lret
xorl
fdivrl
mov
cmp
cmp
or
inc
std
cmp
xchg
ljmp
lock
test
or
cmp
int
pop
jb
xor
lods
xorl
bound
dec
pop
repz
testb
and
fs
mov
lods
xor
movsb
mov
and
scas
rcl
gs
jecxz
cmp
lds
adc
add
jp
mov
dec
fwait
ljmp
sub
mov
mov
std
and
enter
aam
cwtl
lret
push
and
push
mov
mov
cmpsl
jl
dec
push
incl
push
insb
scas
scas
and
imul
pop
push
and
push
xor
pop
out
stos
movsb
arpl
rcrl
push
scas
in
movsb
and
xchg
and
inc
test
cmp
adc
xchg
pop
mov
mov
cs
sbbb
xchg
mov
sbb
pop
mov
ss
stc
jp
cmp
add
pop
mov
sub
dec
ljmp
cmpsb
repz
sub
cmpsb
aaa
mov
lds
xchg
sbb
aas
je
outsl
lcall
and
mov
push
fsts
notb
adc
jmp
lock
jl
mov
scas
xor
mov
mov
mov
sub
add
pop
add
test
and
and
fwait
sbb
pop
dec
sbb
cmpsb
loope
push
stos
pusha
dec
fnstsw
das
mov
stos
and
cs
or
jecxz
insl
fisttpl
cmp
dec
pop
out
nop
add
mov
in
dec
aaa
je
cwtl
mov
and
mov
lahf
sahf
aam
add
mov
je
inc
mov
push
aad
or
and
scas
dec
or
outsb
daa
sbb
push
pop
inc
jmp
pusha
jge
cmp
das
pop
mov
outsl
stos
mov
push
cmp
fmull
inc
leave
dec
dec
push
cld
dec
xchg
sub
or
cmpl
outsl
xor
js
ljmp
push
adc
loop
jbe
xchg
lret
and
push
mov
xchg
out
cli
andb
mov
xor
inc
cmp
mov
jl
repnz
idivl
lock
xor
jmp
jmp
jbe
push
test
jns
jg
and
or
sbb
mov
sub
cltd
in
push
sbb
push
fnstsw
rcrb
insl
and
sbb
je
fisubs
mov
movhps
imul
or
fs
mov
or
int3
addr16
pop
daa
push
out
sarb
adc
inc
scas
outsb
mov
push
outsb
push
cmp
jno
push
in
dec
dec
iret
movaps
mov
cmp
lds
pop
or
movsb
add
mov
mov
movsbl
pop
cmp
dec
daa
fcmove
out
leave
fbld
mov
enter
in
and
and
shr
ret
push
notl
mov
inc
aaa
xchg
pushf
xor
xchg
cmpsl
mov
dec
hlt
jle
push
imul
shlb
mov
ret
pop
xlat
mov
gs
fstpl
push
mov
insb
sub
sub
stos
sarl
jmp
push
int
pop
xchg
sarl
lods
aam
cmp
dec
cmp
push
aad
inc
hlt
pushf
push
lock
xchg
movsl
js
cmp
outsb
pop
or
mov
dec
jnp
cltd
push
out
ret
lea
jg
push
mov
cmp
pop
cmpsl
mov
fdivr
vpsadbw
aam
faddl
xlat
and
inc
fs
pushf
add
dec
mov
sbb
outsl
shrb
cli
dec
shll
test
imul
loop
jge
shl
movsl
jns
es
push
dec
mov
outsb
push
xor
dec
inc
stos
pop
dec
int
enter
sahf
aad
dec
pavgw
and
mov
push
fcmovu
mov
xchg
sub
imul
jne
xchg
lods
adc
add
nop
push
push
cmp
cld
shrl
lock
js
jae
adc
call
mov
popl
inc
loopne
xor
gs
aam
ret
xor
add
cmc
xor
xor
jne
adc
mov
jp
data16
mov
cld
cli
mov
xchg
aaa
loopne
jle
xchg
das
mov
les
xor
push
shlb
cmp
or
add
sub
inc
repnz
ret
aas
jg
inc
or
out
dec
pop
fstl
jmp
cmp
mov
ds
lahf
incl
lods
xchg
in
jb
jnp
mov
mov
stos
aaa
popf
bound
sti
mov
jecxz
xor
lret
xchg
pop
inc
mov
cmpsl
mov
sub
xchg
lods
push
jb
jb
ss
lea
das
mov
mull
xor
pop
mov
xchg
cmp
rclb
in
test
mov
pop
xor
sahf
cmpsb
nop
mov
sub
dec
dec
xchg
pop
mov
into
and
mov
jne
mov
xor
xchg
xchg
and
xchg
in
js
shlb
je
and
stos
hlt
jge
out
or
lea
imul
sub
inc
jno
pop
cmp
adc
dec
test
ds
pop
in
repnz
xchg
and
xlat
std
daa
fsubrs
push
xchg
movsb
out
add
mov
jae
jbe
bound
inc
mov
dec
iret
loopne
push
les
dec
test
rol
xor
adcb
sbb
push
sbb
mov
je
dec
sbb
mov
in
aam
xor
add
adc
sarb
imull
jae
xor
push
ljmp
test
out
push
dec
sub
sub
mov
sbb
jo
lods
add
sub
xor
or
fs
xchg
sub
sub
test
orl
push
push
xor
outsb
icebp
mov
es
cmc
jns
fists
jno
lcall
jae
in
xchg
cs
fs
int
mov
dec
cltd
nop
jge
jle
repnz
jnp
jno
stos
dec
es
sub
rcll
pop
xchg
bound
in
daa
push
js
jnp
cmp
jge
test
push
sahf
xor
or
dec
jbe
stos
jle
lea
aas
and
mov
inc
sti
jmp
icebp
test
sub
sub
mov
or
shr
pop
push
dec
or
sbb
push
fwait
outsb
out
iret
call
sahf
add
jno
call
lds
xchg
cmp
lods
xchg
jne
fimull
movsl
mov
mov
mov
mov
mov
sbb
adc
cmpsb
popa
test
and
mov
bound
push
cmp
data16
add
or
ja
rorl
mov
push
push
insb
in
jmp
adc
cmpl
xchg
xchg
cmp
adc
orl
cmp
cmp
ljmp
push
xchg
stc
add
int
lods
insl
cli
mov
push
mov
xor
aas
loopne
cwtl
shr
jle
push
xor
cmp
xchg
popa
xlat
push
adc
xchg
gs
outsl
xchg
loope
or
ss
jmp
out
xchg
mov
mul
push
adc
xorb
mov
outsl
scas
ljmp
ja
push
pushf
pop
out
sti
mov
ds
jge
dec
lea
cli
fcompl
jge
xchg
sbb
inc
rorl
shrb
scas
jp
cmp
in
orl
scas
add
es
sub
sarl
pop
add
into
nop
shlb
pusha
aas
xchg
dec
test
ret
xor
pushf
sbb
stc
pop
jo
movsl
cs
es
xor
xchg
mov
aad
fldl
or
syscall
add
cmp
hlt
stc
mov
pop
mov
lea
pop
push
xor
roll
fildl
pop
scas
stos
ss
jns
pop
push
aaa
loop
jg
stos
fsubrl
cwtl
scas
ret
dec
ret
fisubs
insl
cmp
xor
mov
jne
jo
mov
xchg
mov
xor
sbb
cmp
push
add
outsl
cmp
add
jo
pop
and
adc
add
mov
mov
sbb
jns
mov
pop
imul
adc
orl
shll
and
pop
jg
or
arpl
pop
test
mov
imul
xchg
pop
inc
fwait
inc
mov
scas
dec
or
ficoml
mov
movsl
daa
les
lea
jne
aam
inc
cmpsb
pop
inc
mov
outsl
movsl
fcomip
xchg
ficompl
mov
int
fwait
ljmp
dec
in
sub
cs
jg
cwtl
cmp
adc
dec
int3
xchg
scas
nop
or
or
loopne
popa
insb
gs
push
and
repz
fisubrl
push
hlt
int
out
adc
insl
sub
jl
fmuls
adc
in
faddl
mov
fmull
sbb
stos
mov
int
push
lcall
adc
sbb
pushf
mov
insl
xor
or
shrl
js
pop
sbb
adcl
jns
or
push
pop
jo
sub
jle
cltd
pop
in
jno
cmp
jecxz
pop
cmp
xlat
or
and
jle
stos
push
les
insl
sub
fs
or
dec
fmuls
or
or
push
xchg
cmp
pop
hlt
ret
push
into
inc
sub
ret
jl
add
mov
mov
in
xchg
push
push
pop
cmp
xchg
push
or
fists
add
es
jno
jbe
xor
lock
cmc
push
movsl
adc
jp
mov
adc
shl
loope
repnz
addr16
mov
fdivl
scas
adc
push
movsb
push
jo
sbb
push
and
xchg
jg
jecxz
jle
xchg
add
or
cltd
in
outsl
pusha
adc
cmp
mov
pusha
mov
pushf
je
sbb
out
arpl
sub
inc
add
mov
cmpsb
scas
mov
outsb
imul
mov
jmp
pusha
stc
xchg
mov
aas
xchg
or
leave
mov
xchg
dec
dec
pop
lds
sbb
hlt
mov
push
or
rcrl
movsl
cmp
jnp
cld
sbb
pop
aad
mov
add
sbb
and
shlb
pusha
movsb
sbb
cltd
iret
into
inc
add
dec
inc
mov
loopne
insl
jge
and
in
mov
fidivs
add
lret
scas
stos
adc
faddl
push
lret
xlat
add
sub
sbb
add
mov
jo
jbe
sbb
scas
push
pop
cmovs
push
mov
jge
jae
inc
fiaddl
bound
add
and
jns
rcl
add
ljmp
or
lahf
or
rclb
and
iret
popf
insb
and
cltd
sub
fldcw
or
ds
jns
hlt
nop/reserved
pop
repz
pop
mov
hlt
int
jge
ret
mov
cmpb
inc
imul
insl
xchg
adc
mov
scas
and
rol
dec
pusha
fimuls
rcrl
call
push
push
push
fildl
data16
dec
sbb
pushf
imul
mov
pop
pop
lret
xor
sbb
mov
push
sbb
outsl
out
xchg
fstps
cmp
lcall
int
cmp
out
sub
mov
rorl
or
sub
aad
mov
cmpl
sub
movsl
mov
xchg
repnz
testb
jb
mov
mov
lock
inc
loopne
pop
push
les
xlat
addb
sbb
scas
mov
lcall
cmp
jl
inc
lods
pushf
mov
mov
mov
lods
popa
test
js
iret
mov
cmpsl
fnstenv
in
push
jmp
cmpb
cltd
outsl
pop
push
mov
loope
dec
in
adc
je
cmpsl
out
cmp
lds
adc
lret
sub
xchg
xlat
cmp
das
push
lods
pop
cmp
icebp
clc
lret
lahf
dec
addb
int3
fistpll
xor
cmp
std
sub
sub
pop
xchg
cmp
jnp
jl
test
mov
gs
outsl
iret
in
push
inc
mov
inc
mov
lret
popf
xor
xor
dec
inc
ljmp
and
repnz
es
jns
add
movsb
cmp
cltd
repz
ret
lret
mov
icebp
lret
lds
cmp
rcrl
rcrl
shlb
adc
cs
cmpsl
daa
xchg
cmp
lahf
outsb
adc
stos
test
jno
push
and
aam
push
and
es
pop
cmp
mov
jns
cmc
pushf
add
div
xchg
fcom
pop
or
pop
popa
xor
or
jmp
lds
lcall
dec
sbb
pop
popf
push
cmp
rcll
mov
fmul
arpl
xchg
xchg
icebp
add
or
mov
sbb
jnp
adc
sbb
push
push
ds
in
dec
inc
rcrb
dec
xchg
pop
jecxz
xchg
sub
mov
xchg
mov
stos
cmp
fsub
pop
push
dec
add
push
jne
or
hlt
rclb
mov
test
test
ret
mov
imul
aad
fidivrs
push
jns
mov
mov
ja
mov
cmpsl
xlat
mov
pop
mov
ss
popa
dec
mov
push
xor
hlt
dec
ds
outsl
loope
aaa
mov
or
or
inc
scas
fimuls
jne
fldcw
rol
fcomps
or
add
cmp
mov
mov
push
std
jle,pt
bound
cmp
gs
loop
ja
adc
push
pop
push
lock
cmp
mov
or
jnp
int3
sarl
push
mov
fldt
pop
xchg
inc
imul
dec
lds
popa
or
in
lret
inc
ret
inc
push
loopne
mov
ja
xchg
fwait
sbb
std
shlb
dec
push
popf
pop
lret
fistps
loopne
mov
fs
arpl
aas
in
addl
arpl
loop
inc
lret
mov
ret
mov
ljmp
lock
inc
cmpsl
std
push
sub
enter
jl
cwtl
loop
popl
jmp
sub
jnp
jecxz
adc
test
clc
mov
stos
mov
dec
inc
jae
cmp
mov
push
leave
scas
scas
jle
aad
daa
cmp
pop
mov
insb
lret
and
sub
jle
xchg
cltd
or
dec
enter
pusha
xor
lret
aas
mov
cmpsb
sbb
lods
mov
adc
inc
pop
test
shrl
js
pop
lods
mov
mov
or
and
imul
xchg
push
mov
dec
subl
pop
sbb
cmc
js
insb
mov
cld
rorl
push
ret
inc
mov
ret
xchg
int3
mov
push
xor
test
inc
jl
sub
mov
nop
int3
xchg
out
stos
xchg
fimull
es
mov
rcll
adc
in
jecxz
inc
int
push
int
scas
mov
mov
jg
loope
xor
inc
ret
aaa
das
pop
jecxz
cmp
clc
test
shll
out
push
cmp
rolb
or
repnz
push
sti
sub
inc
push
pushf
addr16
mov
dec
icebp
notb
mov
insb
pop
fisubrl
outsl
mov
in
xor
scas
shlb
mov
insb
sbbl
hlt
imulb
outsb
inc
push
fstpl
pop
adc
jecxz
mov
or
sbb
mov
fsubrs
fs
loop
push
and
jne
xor
stos
xchg
sbb
and
inc
adcl
loop
sbb
sbb
lahf
outsl
subb
dec
into
scas
sub
jns
xchg
add
and
mov
jbe
sbb
mov
in
in
or
sub
add
sub
adc
xchg
enter
and
mov
dec
popf
stos
xchg
pop
sti
fisttps
mov
insb
add
cmp
xchg
add
lret
or
jbe
push
adc
mov
push
sbb
jle
bound
nop
jmp
jnp
imul
push
divb
repz
ljmp
jb
mov
test
pop
out
push
inc
xor
mov
cmp
aad
jno
or
out
lret
or
mov
cmpb
push
mov
inc
scas
inc
lds
inc
test
mov
fsub
dec
mov
add
inc
sub
cmp
mov
mov
pop
add
inc
mov
inc
out
daa
sbb
outsl
push
push
leave
sbb
scas
loope
sahf
cmpsb
inc
push
cwtl
pop
xlat
inc
js
inc
pop
dec
xor
pop
test
out
dec
and
out
test
mov
out
push
xor
mov
xchg
imul
cwtl
mull
shrl
xchg
out
mov
push
fldl
mov
sbb
jl
aaa
xor
mov
cmp
xchg
pop
insb
ja
cmc
or
in
pop
loope
mov
sbb
les
sbb
fs
sub
or
jg
fists
and
or
mov
jae
shlb
cmpsl
xor
inc
loop
sarl
addb
sbb
ret
push
jp
out
stc
in
xorl
adc
lret
es
sub
outsl
lods
popf
push
pop
fs
int3
movsl
out
mov
iret
rorl
mov
jl
mov
mov
vpsubw
test
ret
push
push
cmp
jge
add
or
cltd
pop
movsl
mov
and
cmc
or
add
push
popf
and
orl
push
leave
repz
leave
in
push
outsl
jno
ret
lcall
sub
jae
imul
xchg
mov
mov
iret
jo
sbb
out
and
cld
cmc
push
sub
insb
stos
scas
jl
out
jb
int3
orl
or
jns
and
pop
sbb
decl
mov
sbb
pushf
roll
add
aas
mov
mov
loope
lahf
lock
iret
roll
scas
bound
inc
cmp
mov
hlt
ja
dec
inc
dec
clc
push
jno
cmp
and
aam
test
xor
cmp
add
jecxz
inc
call
pop
push
fiaddl
pop
xchg
push
xchg
movsl
adcl
int3
sub
rorb
xchg
jno
mov
int
rorb
push
sbb
add
shlb
call
xchg
das
out
or
repz
push
xchg
fldt
pop
dec
adc
xchg
test
mov
jmp
or
or
mov
pop
cwtl
loopne
das
jmp
sbb
stos
mov
fs
imul
stc
xchg
or
sbb
test
call
adc
jne
es
jecxz
and
insl
in
outsb
and
sarl
fists
lods
sub
xor
je
adc
dec
inc
xchg
lock
cs
mov
insb
and
mov
stc
arpl
sbb
inc
stos
inc
jo
or
je
outsb
push
outsb
mov
mov
ja
pop
imul
cmp
or
sub
cmp
adc
test
or
xor
jnp
popa
rorb
cltd
movsl
jp
mov
sbb
mov
enter
inc
mov
rcll
repnz
fdivs
jbe
add
jno
adcb
add
loope
dec
sub
xor
xor
dec
jp
mov
test
xchg
addr16
push
push
out
sbb
sahf
hlt
dec
ret
int3
icebp
jb
loope
and
jg
repnz
outsb
mov
and
xchg
mov
scas
hlt
mov
push
movsl
pushf
push
shlb
call
mov
pop
xchg
stos
lret
pop
cmpl
pop
xor
stc
outsl
cmp
dec
mov
xchg
cli
lds
inc
call
cli
mov
xchg
or
mov
pop
push
popf
add
jbe
inc
cmp
rclb
lods
mov
in
out
rclb
fstpl
mov
sub
inc
fsub
mov
sub
mov
ficomps
xchg
mov
mov
add
mov
je
iret
gs
mov
jle
inc
aas
mov
xchg
mov
mov
int
cmp
data16
lea
insb
dec
cltd
js
pop
adc
adc
scas
mov
fwait
xor
lret
loope
xchg
out
push
mulps
cmc
push
cmpsl
fidivrs
aam
shr
push
pop
push
adc
imul
sbb
xchg
mov
fcoml
xchg
inc
pop
mov
movsl
mov
xchg
adc
sbb
jnp
mov
ljmp
lret
xchg
mov
fmull
push
aad
fsub
mov
add
dec
sub
pop
orl
push
rol
push
mov
popa
jecxz
cmpsb
cltd
xor
xor
sub
mov
pop
repz
jp
lds
popa
push
mov
jo
ljmp
fisubl
xor
and
xor
mov
lret
mov
and
dec
jbe
cltd
xchg
sbb
test
setne
sbb
mov
leave
xor
sbb
dec
lahf
cmc
test
inc
fcoms
dec
aad
test
mov
lcall
jbe
lea
sbb
adc
jns
shrl
jle
or
ss
ret
sbb
and
fildll
lds
sbb
sub
fwait
mov
and
flds
in
loopne
cmp
ds
dec
sbb
pop
push
in
cltd
cwtl
add
mov
loop
push
cmp
mov
data16
into
mov
mov
pop
mov
aad
int
pop
test
mov
xor
das
jmp
mov
aam
sbb
jno
add
push
mov
push
dec
push
inc
call
cld
fbstp
repnz
ficoml
sbb
imull
xor
push
dec
mov
xchg
mov
jnp
xor
insb
xchg
rorb
dec
ret
lahf
push
ficomps
testb
jne
nop
sub
pop
mov
push
or
pop
mov
inc
aam
movsl
dec
vpsrad
jmp
adc
jl
stos
int
jno
popf
mov
xor
sbb
mov
add
cltd
in
jne
inc
dec
jns
adc
ss
pop
aas
popa
xor
fistps
mov
sbb
mov
mov
mov
mov
cmp
mov
inc
cmpsb
mov
outsl
adc
inc
mov
mov
pop
testb
andb
hlt
push
test
inc
dec
jo
fcom
cltd
pop
sub
scas
mov
push
cwtl
push
lods
sbb
inc
mov
cwtl
pop
popa
push
sbb
jns
and
push
or
mov
mov
cmpsl
mov
out
gs
sarl
movsb
sub
bound
mov
cmp
push
stos
dec
data16
inc
push
or
adc
xchg
pushf
and
and
addb
and
outsb
sarl
inc
push
inc
cmp
mov
mov
lahf
inc
and
shr
mov
jle
mov
jb
dec
and
mov
and
mov
pop
sub
mov
sbb
mov
jp
in
sub
insl
add
fs
push
in
into
jle
push
fcmovb
pushf
shlb
repnz
cld
or
adc
sbb
shr
pusha
xor
into
pop
add
jmp
pop
sbb
mov
jecxz
into
pop
push
orb
push
leave
add
arpl
pop
aam
jb
fisttpll
loope
inc
sub
hlt
loopne
les
pop
test
in
mov
sbb
loopne
and
add
imul
inc
or
push
jo
jg
gs
mov
call
mov
out
sbb
cmp
cld
mov
pop
xor
xor
int3
xor
mov
call
gs
lcall
xor
popl
pop
scas
and
scas
cs
cmpsl
aaa
push
xchg
subl
xchg
jne
inc
std
or
lret
xchg
arpl
fldcw
sbb
sbb
dec
in
push
mov
jl
pop
push
fldl
push
cmp
scas
cli
mov
jmp
lret
add
jno
shlb
push
mov
lret
xlat
dec
std
xor
rorl
adc
mov
in
and
paddusw
xchg
mov
mov
sbb
mov
repnz
iret
push
out
jnp
pop
mov
ret
cs
insb
push
call
cmp
adc
dec
mov
neg
push
cwtl
outsl
andb
jmp
shlb
jg
repz
int3
daa
xor
push
or
scas
shr
pop
data16
stos
lods
xchg
dec
int3
xchg
icebp
outsb
and
sub
jns
sahf
ds
xchg
ds
add
test
adc
add
int
sub
aaa
push
jge
ficoms
lds
cmp
lret
xchg
push
jns
cmp
lods
or
cltd
push
inc
lcall
xchg
jle
es
adcb
mov
fnstcw
outsb
adc
jo
dec
popf
sub
leave
pop
pop
push
and
mov
add
sub
mov
pop
aam
sub
push
pop
mov
cmpsl
xchg
mov
cli
pop
sti
and
or
cmp
mov
or
ds
or
shll
mov
pop
test
xor
jl
xor
loop
mov
jmp
shlb
call
sub
bound
pop
mov
xor
mov
push
adc
lret
jnp
add
lcall
jg
jecxz
test
test
scas
inc
push
lahf
std
outsl
mov
icebp
jle
into
stos
and
mov
adc
lds
nop
cld
rolb
mov
cmpsb
inc
add
stos
push
loop
dec
insb
mov
loop
or
icebp
dec
sbbl
jmp
xchg
imul
inc
imul
div
mov
popf
xor
or
jl
sub
faddl
jno
je
mov
iret
sbb
xor
inc
js
in
ret
add
lds
mov
fwait
or
or
xchg
or
rcll
pop
ljmp
push
icebp
popf
std
or
fldt
cmp
subb
xchg
pusha
sbb
push
push
in
sub
shrb
cmp
adc
jecxz
push
jge
mov
test
jnp
popa
mov
ds
or
cmp
sub
in
mov
sbb
or
push
nop
and
popa
int
push
lret
in
cmp
pop
mov
cld
xor
leave
add
loop
outsl
repz
faddl
mov
inc
nop
jmp
or
jns
xor
jns
int3
js
xor
mov
and
sbb
xchg
orb
scas
cwtl
std
mov
fdivr
push
idivb
aaa
aas
arpl
sub
mov
cli
int
movsl
mov
push
and
ljmp
test
rclb
js
outsl
add
lods
mov
mov
clc
cmp
aad
xchg
and
repz
cld
rorl
scas
icebp
mov
das
jge,pt
jae
add
jge
mov
ret
insb
je
inc
pop
dec
add
outsl
pusha
imul
xor
es
popf
scas
pop
addr16
lods
scas
mov
jge
insb
dec
jmp
sub
test
push
lcall
fxch
orl
sub
mov
pop
lcall
or
pop
lahf
xor
dec
into
enter
pop
movb
pop
les
js
xchg
add
iret
movsl
sti
push
pushl
adc
xor
je,pn
aad
cwtl
fcompl
mov
dec
inc
pop
shrl
pop
push
push
push
jne
outsl
jne
outsb
lods
sahf
sahf
sbb
cld
sub
loopne
or
icebp
lods
arpl
mov
mov
push
sarl
iret
cmc
sarb
rorl
mov
out
and
fcoms
test
cmp
lds
push
add
imul
jle
mov
mov
in
cltd
cmp
sbb
mov
mov
xor
insb
sub
xor
xorb
iret
enter
pop
and
cmpsb
jae
pop
popa
stc
push
fsubrs
gs
in
adc
jns
aad
xchg
push
adc
fst
sbb
sub
xchg
sbb
call
ja
out
dec
and
xchg
xchg
imul
or
and
insl
adc
outsl
scas
cltd
push
sbb
scas
sbb
or
ja
xchg
je
jmp
jbe
out
jecxz
mov
dec
mov
loope
push
mov
add
clc
adc
sub
enter
push
push
mov
mov
dec
add
push
add
add
lahf
insl
not
and
int
stos
lock
xchg
sbb
test
add
das
adc
mov
pushf
and
setno
out
cmpsb
adc
fwait
and
inc
enter
loopne
cmp
fwait
dec
filds
clc
cmp
mov
push
jnp
mov
mov
adc
scas
jne
out
jle
xchg
icebp
movzwl
pop
or
pop
ljmp
scas
das
push
nop
loopne
mov
les
insl
add
popa
xchg
enter
xchg
or
movsl
inc
mov
mov
in
addr16
or
or
leave
mov
cmpsw
sub
cmc
and
es
pop
mov
push
nop
ret
roll
out
pandn
pop
mov
cltd
cmp
mov
int
jbe
lods
out
aaa
in
mov
lea
jnp
fists
inc
call
xor
outsl
jne
mov
loopne
out
or
js
clc
lock
orl
les
jmp
push
xchg
pop
sub
std
aas
push
add
lods
cmp
jmp
jns
xlat
jbe
xchg
lds
stc
cmp
inc
scas
je
sbb
mov
inc
mov
xchg
sbb
xchg
inc
ret
add
mov
pop
mov
mov
into
or
stos
out
ret
add
inc
pop
xor
lds
test
push
ljmp
dec
and
in
add
pusha
pop
push
call
dec
adc
fcoms
in
and
in
pop
setne
mov
mov
je
cli
nop
and
mov
popf
jmp
int3
shrl
mov
xor
mov
push
cmp
mov
movsb
jmp
xchg
cmpb
hlt
repz
test
mov
xor
add
lds
popa
lcall
dec
ficompl
mov
sahf
push
adc
pop
sbb
jmp
dec
cmpb
xor
clc
out
pop
adc
pop
inc
or
jle
pop
push
mov
sub
add
xor
jle
mov
dec
subb
ja
nop
jnp
les
xor
rclb
cmpsb
add
loopne
jae
in
jns
jae
insl
idiv
hlt
inc
shlb
push
mov
push
fwait
and
sub
ss
out
aaa
fisubrl
fcompl
fdivr
arpl
test
jno
out
mov
fs
mov
sbb
jnp
inc
sub
push
jae
lods
sbbl
shll
dec
dec
mov
pushf
push
mov
xchg
adc
or
bound
jnp
cmpsb
cmp
or
imul
aas
in
jp
rcrb
and
xchg
in
inc
or
or
orb
out
xchg
inc
dec
push
aaa
out
sbb
or
add
dec
stos
add
clts
push
xchg
outsb
in
pop
addb
cld
sub
shrb
in
pop
dec
in
testb
leave
sbb
or
int
into
les
stc
aam
das
pusha
lock
mov
les
hlt
sarb
xchg
mov
mov
adc
movsb
sbb
mov
outsl
dec
out
out
in
mov
leave
jmp
jae
cmpsb
ja
nop
ret
loop
or
mov
test
mov
shlb
sahf
add
testl
call
aas
cmp
sub
mov
loop
jbe
push
mov
pop
pop
jg
scas
test
cld
mov
out
xor
push
stc
push
leave
lret
and
lahf
push
pop
cld
xchg
scas
mov
pop
sbb
pop
cmp
xchg
fcmovnu
cmp
push
jne
jnp
into
sub
or
rol
or
push
dec
adc
cmpsb
add
out
jge
xchg
add
cmp
mov
and
mov
fdivrs
lea
xchg
push
fwait
leave
std
rorl
inc
add
cmpsl
clc
nop
fwait
out
dec
fidivl
jbe
xor
stc
or
ror
push
js
push
dec
ret
jl
cmp
sub
mov
or
stc
jns
outsb
xor
lea
mov
mov
fwait
mov
jecxz
in
enter
sbb
cs
arpl
psrlw
lcall
or
std
push
cmp
cmc
cltd
in
mov
jb
sbb
pop
cmp
and
inc
adc
lds
sbb
pop
arpl
or
add
inc
jo
fwait
icebp
imul
roll
dec
xchg
dec
jno
fsubs
lds
or
dec
mov
lret
pop
js
ret
mov
fdivrp
push
nop
adc
jnp
stos
decb
xchg
icebp
jg
jp
dec
in
add
test
xchg
fs
addr16
dec
std
mov
and
int
es
jmp
jbe
inc
pop
jae
rcrl
testl
mov
pop
sbbl
sbb
mov
dec
mov
mov
les
arpl
jge
loope
cltd
mov
xlat
jecxz
cli
imul
push
xor
push
sub
test
pop
bound
rcrb
dec
in
mov
inc
ret
int
call
cld
lods
or
adc
jmp
icebp
in
jb
aaa
cs
push
jbe
clc
je
sub
bswap
jg
xlat
xchg
pop
aaa
pop
outsb
push
icebp
repz
xlat
movsl
lods
jp
adc
mov
mov
bound
data16
int3
pushf
loope
xchg
lock
imul
lret
scas
sahf
sub
mov
sub
sbb
cmc
movsl
scas
sarb
mov
addr16
scas
cmp
lahf
out
lret
xorl
jp
into
repz
dec
js
jae
mov
imull
add
mov
ljmp
imul
or
decb
movsl
adc
scas
adc
add
sbb
aaa
lods
data16
loop
call
pcmpgtd
cmc
sbb
test
dec
or
outsl
jnp
inc
sub
sub
adc
xor
push
iret
neg
negl
dec
push
add
stc
xchg
mov
mov
in
lret
into
add
jne
fbld
insl
in
mov
dec
sbb
inc
jle
roll
xchg
pop
mov
pop
adc
or
push
mov
jne
je
mov
js
mov
dec
jmp
or
adc
add
clc
cltd
cmpsb
ljmp
pop
test
sbb
idivb
and
cmpl
jmp
shlb
push
dec
jl
stos
jb
sbb
sbb
xchg
pop
lods
mov
lods
loop
pop
sbb
xor
xchg
mov
clc
sub
in
and
jmp
in
fcompl
pop
lret
sub
std
pop
push
jecxz
xchg
push
sub
stos
xchg
and
in
je
sub
inc
stc
cmpsb
add
das
dec
jle
mov
ficomps
xchg
xor
call
add
ret
sub
popa
lds
lcall
xor
aam
rorb
adc
dec
xor
fdivs
je
maskmovq
testl
adc
test
aas
lahf
jecxz
in
lock
mov
clc
lret
or
scas
sahf
neg
in
pusha
js
sub
or
xor
ljmp
jl
mov
pushf
out
pop
lahf
std
jle
sbb
outsl
stos
inc
daa
popf
inc
adc
push
and
lea
mov
add
or
gs
sbb
fnstsw
inc
fldl
mov
mov
fdivl
pop
dec
or
sti
lock
je
or
outsb
icebp
int3
fldt
jmp
push
sub
mov
mov
pop
xchg
rclb
add
test
andb
mov
adc
fndisi(8087
pop
cmp
xchg
pop
daa
test
add
dec
data16
sbb
cmpsl
bswap
aad
std
jo
mov
push
icebp
bound
xor
push
pop
and
cmp
lea
adc
fisttps
jo
je
shl
popf
dec
mov
popa
lret
fdivrl
jecxz
cs
sbb
mov
setnp
dec
xor
aad
adc
je
insb
push
cmc
bound
push
xor
hlt
outsl
fstpl
imul
add
jae
push
mov
pop
mov
pop
or
cmp
icebp
pop
or
leave
inc
out
bound
ss
and
aad
add
mov
sti
dec
mov
jecxz
inc
sti
mov
fcmovnbe
push
xlat
mov
into
ret
jae
out
xchg
mov
jp
sbb
push
fdiv
cmp
mov
ljmp
and
xchg
xor
fwait
loope
es
enter
mov
aad
adc
jne
or
push
rorl
xor
or
ljmp
adc
xor
out
iret
int3
test
ret
scas
adc
or
push
mov
hlt
jnp
xor
push
or
mov
fs
data16
das
pushl
xchg
xchg
sahf
adc
leave
testl
loopne
mov
mov
dec
movsb
bound
shrb
sub
imul
popa
out
daa
xor
xchg
notb
cmp
mov
repz
xlat
test
loopne
sbb
inc
shrb
fdivrl
int3
repz
mov
mov
xor
pop
insb
fwait
lods
jge
cmp
dec
dec
out
push
das
fdiv
xor
cmp
sbb
aas
ror
push
and
mov
or
pushf
aad
xor
mov
dec
mov
lcall
es
sub
data16
ljmp
ret
scas
popa
xchg
inc
jl
insl
push
fldcw
xchg
cltd
jl
and
xorb
jp
pop
add
dec
popa
cli
xchg
push
xor
sar
sbb
adc
clc
mov
xor
fimull
mov
mov
call
jnp
push
pop
out
lcall
sub
push
adc
mov
sar
lods
cmpsb
add
sbb
add
movsb
mov
mov
pusha
push
fcom
mov
mov
and
shll
int3
enter
sti
mov
stos
or
jae
es
hlt
arpl
jmp
mov
inc
orb
loop
mov
adc
mov
ljmp
mov
pop
mov
fnstsw
ret
aaa
and
testl
movsl
ljmp
mov
in
lds
mov
shll
loope
jo
rcll
icebp
mov
mov
cli
hlt
sbb
out
addr16
cmp
push
and
test
mov
stos
mov
shll
adc
xchg
jmp
jmp
and
sub
adc
xchg
jne
shll
pop
inc
iret
iret
test
push
push
mov
dec
pusha
insl
cmp
fnsave
sub
fdivs
out
mov
xchg
imull
push
lods
add
mov
fisubs
dec
clc
push
scas
adc
fisubl
dec
aad
inc
imul
lret
enter
out
xor
mov
iret
out
xor
xor
or
lds
pop
movsb
inc
pop
inc
cltd
or
sbb
pop
rclb
pop
call
push
inc
scas
and
and
adc
add
push
out
arpl
lock
outsl
sti
push
in
mov
mov
sahf
pop
dec
pcmpeqw
std
fdivs
mov
fs
adc
lret
call
cld
cltd
xchg
pop
xor
pop
test
sbb
jp
jmp
ficomps
and
divb
jbe
roll
dec
xchg
in
stos
sbb
std
push
shll
insl
adc
insl
xor
cmpsb
shr
test
addr16
pusha
ret
out
jnp
mov
and
cmp
inc
lods
push
cmp
xor
cwtl
mov
outsl
iret
mov
out
pusha
sub
mov
add
cmpsl
sub
xor
inc
xchg
insb
sbb
les
xchg
icebp
jns
hlt
mov
fst
mov
dec
or
shrl
mov
add
pop
addl
sbb
mov
mov
xchg
cmp
mov
add
adc
pushf
or
push
mov
mov
pop
sbb
sahf
pop
mov
push
call
push
stos
add
adc
mov
adc
ja
push
mov
xor
mov
xor
or
mov
and
movsb
add
or
sbb
fnstenv
sbb
bound
pusha
add
inc
and
ss
and
add
mov
dec
imul
sahf
pop
sarl
jecxz
loop
mov
sarb
fildll
lods
mov
rorb
pop
test
push
dec
cmpl
or
mov
sub
fiadds
push
pop
iret
loop
outsb
in
sbb
mov
leave
mov
and
out
xor
pop
jge
test
xlat
pop
push
sbb
scas
out
adc
adc
xchg
xor
bound
push
shrl
lret
xchg
scas
aas
sbb
js
mov
rorb
dec
js
rcrl
sub
mov
add
pop
mov
enter
xor
aad
jp
jge
es
test
clc
scas
push
dec
xchg
sbb
pop
xor
or
push
inc
cmp
daa
stos
or
mov
iret
sti
jl
sub
ljmp
lret
push
push
inc
xchg
mov
test
adc
mov
fisttpl
call
xchg
das
xchg
pop
mov
ja
fcmovnbe
xor
aad
inc
pop
mov
sub
fcoml
popa
inc
ret
mov
push
addr16
adc
jp
xor
cs
mov
lods
cwtl
pop
call
dec
mov
sbb
in
mov
or
int
js
dec
cmpsb
fwait
push
out
jnp
lods
pusha
xchg
arpl
lods
sbb
mov
aas
and
cmp
push
lcall
inc
or
test
fisubrs
mov
pusha
and
popa
dec
leave
dec
inc
mov
popa
fidivrl
mov
jo
jns
stc
and
out
dec
jns
daa
cld
or
sub
cld
push
or
pop
popa
cmp
jl
push
and
popf
add
cmp
fstl
mov
xorl
and
dec
cmp
es
pop
jnp
adc
add
xor
enter
cmp
push
pop
jp
rcrb
mov
or
fdivs
jno
xchg
jo
xchg
push
idivb
mov
push
aaa
sbb
addr16
cmpsl
in
add
pop
test
push
iret
jmp
repz
out
rcrl
sbb
jb
xchg
add
movsb
leave
pushf
cmp
jmp
add
test
cld
cmp
sbb
loope
fldcw
mov
fs
cltd
xchg
xor
shrb
mov
ja
aad
arpl
into
mov
scas
mov
or
push
dec
imul
jle
sub
push
xor
lahf
orl
lret
insl
sub
movsb
dec
mov
subl
jnp
push
ss
xor
dec
sti
cs
xor
int
scas
push
xor
cmc
mov
lods
in
out
outsl
sbb
cmp
jge
sub
popa
stc
out
xchg
cmp
cmp
pop
jns
scas
int
adc
and
adc
xor
xor
cmp
aad
mov
add
subb
and
insb
push
xor
adc
scas
insl
pop
rolb
sbb
test
lret
or
std
lret
rcrl
daa
imulb
lods
push
or
call
cltd
inc
dec
mov
inc
leave
pop
bound
inc
and
aaa
or
scas
ja
add
nop
push
sbb
jle
xchg
std
fdivl
repnz
jae
dec
or
adc
pop
push
xor
out
mov
arpl
sbb
cmpsl
fstpl
and
data16
movsl
add
fcoml
or
scas
inc
imul
test
mov
push
repz
cmp
jmp
push
aaa
int
pop
mov
outsl
stos
aaa
mov
push
test
stos
xchg
push
jp
imul
cmp
popf
dec
or
loopne
mov
ds
xor
mov
adc
push
in
popa
mov
popf
adc
dec
leave
jns
loope
and
adc
pop
scas
sub
jae
je
testl
daa
sub
push
stos
mov
sbb
js
pushf
and
test
cmp
mov
leave
lock
into
fstps
adc
test
cmp
aas
cmp
sar
mov
xchg
dec
cmpsb
lret
fists
or
push
movsl
add
jb
enter
es
lret
sub
scas
int
leave
ja
sidtl
sub
int3
cmp
xor
and
aas
mov
push
out
sti
adc
jge
addl
push
fisttpl
xor
sbb
hlt
test
xor
or
loope
int3
jns
lock
sub
cmp
jl
daa
xor
cmc
cmp
dec
cmpsl
roll
cmp
jge
dec
iret
pop
out
sub
sub
xor
imul
sub
movsb
mov
or
lcall
and
lods
dec
fistpl
mov
sub
mov
pop
or
jge
out
inc
lods
push
repz
cmpl
sbb
fdivrp
pop
lock
push
push
lret
sbb
mov
aad
xlat
out
lds
sub
pop
out
testl
frndint
nop
test
enter
inc
repz
sbb
lea
movsb
push
scas
aad
mov
xor
cmpsl
cltd
mov
jl
lret
xchg
mov
loopne
adc
mov
hlt
push
ret
sahf
or
mov
insb
jae
add
lds
mov
and
sahf
jne
or
cmc
push
test
inc
in
jg
sbb
push
lock
pop
sbb
shll
icebp
in
lcall
loope
outsl
pop
pop
popf
mov
inc
pop
sbb
enter
faddp
push
rorb
roll
insl
push
imul
and
pop
jle
bound
leave
or
cmp
stc
and
in
pop
add
cmp
clc
dec
sub
and
gs
mov
je
pop
repz
scas
addr16
outsb
push
xor
and
add
and
in
sub
outsb
pop
jp
fadd
pop
cmp
pop
xorb
jmp
mov
std
cmp
mov
push
pop
out
dec
inc
les
add
push
push
lea
and
bound
jb
cmp
inc
push
in
sbb
xchg
orl
mov
and
js
jb
inc
mov
shr
xchg
ret
lret
shr
xchg
sbb
mov
cmc
in
std
adc
mov
xchg
dec
insb
xor
or
xchg
std
pop
out
jp
push
dec
shl
sarb
leave
loopne
fsubl
fstl
mov
or
int3
ja
addr16
data16
add
jecxz
stc
sbbl
add
aam
mov
lret
repnz
data16
in
mov
data16
xchg
and
adc
mov
ja
adc
in
call
jbe
fstl
push
shl
lret
test
fxch
test
push
scas
setb
adc
or
enter
mov
cltd
xchg
mov
clc
xchg
call
arpl
fwait
xchg
cmp
shrl
xor
out
sbb
jge
mov
adcb
cmp
pop
test
lret
imul
ja
push
dec
cmp
out
add
pushf
test
xor
icebp
outsb
dec
addr16
test
mov
dec
aam
or
lods
dec
clc
adc
ss
adcl
ret
add
movsl
es
fmuls
sbb
dec
imul
sbb
pop
pop
movsl
and
cmp
fstpl
fcom
xchg
or
fmul
mov
pop
push
sahf
sbb
mov
push
fidivrs
and
push
aam
ret
mov
cmc
push
in
test
xor
fucomp
jge
pop
jle
sbb
mov
iret
test
fstps
sub
scas
lea
dec
mov
dec
or
mov
ret
dec
adc
inc
jb
ja
call
dec
mov
push
push
loope
sbb
sub
imul
pop
in
cmp
mov
leave
dec
test
mov
dec
cld
sbb
sbb
jns
inc
mov
pushl
icebp
mov
movsb
and
ficompl
insb
pop
imul
imul
fcomps
mov
nop
xor
insl
call
mov
mov
xchg
outsl
sub
cmpsb
scas
xchg
int
adc
inc
insl
test
das
xchg
push
dec
test
mov
dec
mov
pop
push
or
dec
mov
test
inc
dec
push
pop
xchg
pop
inc
test
jbe
movb
addr16
jg
xor
and
xchg
inc
cmc
icebp
es
shrb
pop
aad
pop
sbb
test
jg
test
stos
lock
pop
mov
insb
mov
dec
jbe
jnp
push
test
xor
sbb
rolb
out
mov
or
pop
cmp
pop
fsubrl
inc
sbb
or
scas
pop
xlat
fwait
jmp
inc
mov
jb
aas
leave
push
pop
fs
pop
inc
mov
mov
pop
inc
adc
mov
push
or
mov
ret
push
in
fldl
outsb
movsb
xor
mov
shr
sub
sti
es
inc
sahf
arpl
and
leave
cmc
dec
add
call
push
stos
sub
imul
or
xchg
xor
cmpl
insb
jecxz
call
str
lds
enter
lds
adcb
addl
jl
mov
and
mov
loope
andl
pop
push
lea
cwtl
cwtl
stc
test
test
ss
fistpl
ds
dec
pop
mov
loopne
xchg
es
cmp
shl
sbb
and
or
lods
push
insb
mov
mov
push
shl
dec
and
test
push
dec
sbb
push
cmp
fimull
std
pop
fistl
loop
mov
mov
mov
jbe
jno
lea
jg
add
in
sbb
shrl
movsl
cs
mov
rcll
xor
cmpsb
inc
mov
mov
test
test
out
cltd
in
outsb
add
xor
jg
sub
xchg
imul
mov
sahf
sbb
repz
fidivl
adc
mov
xchg
aam
aaa
out
lahf
mov
insl
push
lods
jb
adc
repnz
xchg
push
inc
insl
push
sub
ss
outsl
mov
ret
cmpsb
sbb
jno
les
jp
cmp
fisttpl
fldcw
popf
es
jns
and
jno
inc
xchg
stc
xchg
and
out
cmc
sbb
mov
push
or
xor
mov
mov
dec
jp
or
push
mov
adc
mov
sti
adc
rclb
mov
pop
xlat
test
mov
pop
jns
sbb
fstpl
cltd
mov
jae
loop
xchg
sub
fsubrs
mov
mov
jns
out
jl
pusha
pushf
mov
out
xchg
les
pushf
xor
mov
leave
push
nop
adc
xchg
xlat
mov
inc
pop
sbbb
jno
jg
fs
jmp
js
aaa
fnstsw
stos
sbb
push
xor
mov
fildl
xor
jno
dec
mov
sbb
jmp
xchg
fcoms
inc
sbb
daa
xor
fistpl
dec
dec
mov
shll
je
sub
cli
or
jno
insl
dec
repz
or
cmp
outsl
and
notl
add
sarb
xchg
das
je
mov
iret
cmp
bound
adc
scas
rcrl
mov
pop
lcall
adc
or
loopne
lea
xchg
jmp
test
rcrb
inc
aam
jns
dec
loope
movb
fnstsw
mov
daa
pop
in
aas
icebp
sbb
inc
adc
mov
rcrb
rorl
out
inc
sub
add
repnz
cltd
mov
lods
xchg
popf
cmp
and
mov
es
xor
scas
cmc
dec
xor
lahf
test
in
and
sub
xor
leave
mov
pop
adc
hlt
ljmp
jmp
pop
fcompl
fcoms
sahf
or
movsl
xchg
pop
cli
sub
insb
loop
fwait
pop
or
push
scas
or
cmpsb
sub
mov
or
cmp
push
jae
push
test
out
jae
xor
out
mov
sti
pop
mov
inc
dec
rorl
pop
inc
mov
aaa
adc
sahf
popa
cmp
fdivl
lahf
ljmp
fnstsw
xor
stos
mov
cmpsl
and
std
and
cmp
pop
mov
cwtl
lret
out
and
jle
sub
cmpsb
fisubs
cs
clc
fildl
dec
ficoml
mov
or
jo
mov
lds
lods
adc
andl
imul
lods
jns
insb
add
push
or
push
aam
mov
pop
cmp
idivl
ljmp
and
pop
adc
jecxz
cld
or
mov
pop
sub
push
andb
push
mov
ja
test
ret
clc
and
sbb
pop
movb
and
dec
or
lcall
testl
pusha
out
enter
inc
mov
cmp
leave
out
movsb
push
adc
pop
fstpl
pop
sar
mov
and
xchg
ret
inc
movsl
sub
jno
and
dec
and
cwtl
hlt
movsb
out
add
inc
aad
sbb
ret
cmp
fistpl
rcr
sub
xor
xlat
jae
sbb
mov
sub
push
notb
fsubrl
pop
add
xor
dec
iret
rcll
fs
sub
or
dec
jae
insl
mov
leave
mov
cs
test
outsl
decb
jo
or
xchg
imul
dec
dec
add
xchg
cmp
aaa
movsb
loop
adc
dec
ja
cmp
adc
dec
and
aaa
mov
shlb
subl
fildll
jle
insb
ud1
xor
mov
dec
hlt
into
and
es
push
inc
mov
fisubs
mov
lods
mov
mov
mov
loope
sub
int3
xchg
testb
xor
push
jmp
rclb
cmpsb
mov
sahf
ja
xorb
loope
cmp
mov
cwtl
and
scas
sbb
cmc
add
lret
push
aam
or
and
mov
xor
mov
fucomp
inc
mov
xorl
jg
push
arpl
xor
xchg
sub
aaa
xor
jno
fdivrl
mov
jl
cmp
pop
ret
and
inc
fimull
or
sahf
sub
inc
insb
ja
imul
push
inc
cli
or
imul
aas
and
pop
mov
and
sbb
sahf
jmp
cld
scas
or
push
addr16
sbb
push
pop
mov
bound
adc
or
cmpsl
jmp
pop
cmpl
push
in
rcrb
into
cmpsb
daa
fimuls
in
stos
sbb
jge
push
arpl
mov
shrl
inc
aas
sub
pop
cmc
lret
rorl
data16
or
iret
jge
or
lea
inc
xchg
loope
imul
dec
and
pop
adc
pop
ja
inc
xchg
push
sub
jp
xchg
ret
push
cmp
and
nop
out
fs
add
jmp
fsubs
shlb
lret
xor
test
dec
xor
popf
out
ror
dec
or
mov
cmp
jnp
outsb
mov
adc
jb
das
sbb
jne
jge
in
push
testl
mov
mov
movsb
mov
dec
or
push
test
testl
mov
bound
bound
out
repnz
imul
stos
rcr
lods
push
lret
add
pop
faddl
mov
cmp
shrl
adc
pusha
push
adc
pop
lea
or
loopne
push
inc
or
pop
into
inc
sbb
pop
sbb
pop
cltd
movsl
cltd
scas
psadbw
sbb
sub
adc
pop
mov
xchg
addr16
scas
loopne
popf
jge
ror
roll
mov
and
js
xor
pop
fisttpl
xchg
jae
push
inc
fcoms
pop
adc
popf
test
xchg
fmull
dec
int
divb
xor
stos
bound
or
dec
jns
add
repnz
inc
scas
aaa
dec
ljmp
mov
sarb
ljmp
dec
ss
jge
mov
filds
push
or
and
cld
shlb
xchg
sahf
adc
sub
fs
push
fisttpll
inc
xchg
xlat
dec
shl
test
les
aam
xchg
xchg
fprem1
mov
mov
mov
sahf
sbb
repz
pop
lock
jb
mov
mov
bnd
std
add
fwait
push
push
dec
xchg
sahf
popa
pop
mov
inc
sbb
testb
lock
addr16
push
je
sub
add
push
cmp
mov
fwait
jb
mov
stc
mov
rorb
lret
testl
lds
mov
stc
loopne
xchg
mov
xor
mov
adc
sbb
mov
pop
or
int
test
iret
dec
xor
dec
sub
out
lds
repz
xchg
ficoml
mov
aas
mov
sbb
lahf
mov
loop
lcall
pop
push
and
and
popl
dec
pop
ficoms
or
dec
frstor
inc
fildll
dec
cmp
add
ja
je
lret
inc
fwait
cmpsb
pop
mov
mov
es
js
mov
mulb
orb
pop
fidivrs
dec
cmp
ds
mov
aam
mov
push
cmp
dec
insb
pop
jbe
sbb
outsl
xchg
jae
out
subl
ja
pop
sub
inc
movsl
pop
cmp
shlb
jecxz
nop
imul
in
lock
pop
sbb
push
and
imul
add
jecxz
fdivrs
mov
imul
mov
aaa
inc
mov
push
mov
bound
adc
out
push
push
pop
xchg
jg
stc
push
mov
sub
insl
cwtl
outsb
ss
sub
mov
sbb
jbe
lds
out
push
jmp
xlat
pop
mov
cmpsb
cmp
adc
hlt
mov
out
dec
mov
add
mov
add
adc
dec
test
int3
loope
ss
js
or
call
pop
inc
in
jl
xchg
das
rorb
xor
adc
and
push
and
out
xchg
push
jns
mov
insb
movl
jne
aad
std
add
sub
mov
daa
xchg
fwait
push
cmp
xchg
adc
enter
xchg
orb
pop
test
pop
mov
sub
movsb
aam
mov
nop
int3
xchg
stc
sar
mov
test
mov
dec
shll
jmp
xchg
fstpl
stos
enter
pusha
test
ja
mov
in
xchg
aam
mov
mov
adc
fld
aas
xchg
xor
ja
or
lret
jb
mov
movsl
sub
push
test
pop
or
mov
mov
xor
jle
in
sub
shrb
mov
ja
mov
mov
lock
fnsave
xchg
mov
inc
subl
jg
filds
pop
dec
or
and
leave
lahf
push
jbe
push
cmp
add
iret
inc
stc
add
ret
xchg
out
rcll
mov
js
fildl
pop
ss
loope
xchg
push
loopne
out
sarb
scas
and
push
mov
cmp
negl
push
mov
test
jle
outsb
in
mov
lds
adc
push
adc
cmp
out
hlt
add
or
arpl
pop
jnp
je
pushf
test
aam
push
or
xchg
nop
and
call
dec
repz
hlt
mov
mov
pop
iret
cmp
addb
mov
arpl
or
repnz
jno
dec
mov
jbe
add
je
pusha
mov
inc
pusha
outsb
jbe
pop
scas
scas
cmpsb
adc
roll
movsl
and
insl
jae
pop
int3
sbb
minps
cmp
dec
adc
add
mov
test
or
movsb
testl
ret
popl
notl
sbbb
pop
xor
fwait
adc
add
test
push
lahf
dec
sub
jns
dec
lahf
or
ret
lcall
dec
inc
movsb
insb
imul
sbb
loop
sbb
mov
stc
popa
js
hlt
push
jle
pop
je
ret
and
sbb
insb
mov
sbbb
xchg
mov
mov
sub
xchg
dec
movsb
ljmp
call
mov
adcb
pop
jno
test
icebp
push
pusha
fucomip
mov
negb
and
mov
pop
lods
imul
les
or
mov
cmp
sbb
les
push
bound
jmp
decb
aam
adc
leave
inc
andl
inc
lock
test
pop
push
fs
std
js
popf
cwtl
pusha
pop
inc
neg
jne
dec
pop
sub
insb
scas
lods
packuswb
jg
int
add
or
out
adcl
pop
push
pusha
lahf
pusha
rcrb
in
inc
das
shll
sti
shrb
jb
out
or
test
inc
loopne
scas
pop
xchg
mov
scas
roll
das
pop
test
out
test
and
push
xchg
aam
roll
clc
dec
ja
pop
js
mov
andb
pusha
aas
stc
push
pop
inc
mov
or
mov
sub
jbe
mull
xor
bound
rcll
into
addr16
mov
push
ds
loopne
xchg
test
and
jb
lret
lods
mov
cs
mov
imul
out
pop
push
push
push
push
mov
add
sbb
jo
pop
aaa
mov
sub
in
nop
pop
sbb
cwtl
cmc
leave
inc
mov
testb
lret
out
push
lret
push
stos
lahf
rcrl
sbb
imul
stos
lcall
in
inc
adc
jnp
xor
mov
loope
sub
fidivrs
fsubs
or
mov
les
push
icebp
push
leave
mov
add
jbe
push
fwait
cmp
mov
shll
je
ret
push
mov
sub
mov
das
icebp
sti
pushf
lock
jno
out
or
sbb
cmpsb
xchg
lods
jl
jbe
and
out
insb
lcall
cwtl
push
cmp
in
stos
sbb
divl
and
inc
hlt
push
cmp
nop
xchg
sub
in
addb
stc
mov
mov
scas
insb
lea
dec
cmpb
push
ffreep
xlat
insb
mov
cmp
fnsave
push
mov
outsl
cmp
ror
jo
add
fwait
outsl
rclb
in
mov
dec
lods
mov
stos
aaa
jne
xor
in
xchg
scas
clc
pop
sub
xor
jno
fmul
insl
mov
adc
mov
fistl
cli
push
sbb
dec
sarl
push
mov
into
iret
jle
or
dec
negl
dec
leave
and
jmp
cmpsb
stos
orb
mov
je
inc
xchg
inc
dec
push
push
pop
dec
aad
mov
pop
or
jbe
or
in
cli
leave
inc
add
cmpsw
sahf
mov
pop
inc
subb
push
cmpsl
cmc
in
push
pop
fsubrs
lds
pop
xor
sub
jp
jnp
into
mov
bound
stos
adc
add
inc
ljmp
das
push
cld
jno
adc
lods
insb
fdivrl
mov
mov
cmp
daa
push
pushf
cwtl
xchg
pop
mov
pushf
negl
jb
loop
inc
cli
dec
inc
es
xorb
ljmp
push
mov
mov
cmp
add
mov
xchg
imul
xlat
mov
or
fdivp
loopne
xchg
mov
pop
ja
sbb
push
mov
sub
sahf
or
cmp
xlat
outsb
int3
ds
and
outsb
mov
nop
add
sbb
inc
into
push
sub
out
int
cmp
inc
mov
out
movaps
jne
add
xlat
sub
out
ja
cs
rcll
lods
pop
mov
pushw
into
xlat
inc
mov
in
dec
ret
sbb
scas
sahf
jae
xor
pop
frstor
lcall
adcb
fisubrl
push
enter
arpl
adc
loop
xor
fsubs
xchg
repz
adc
sbb
xlat
notl
sbbb
and
mov
shlb
rorl
pop
sub
outsl
pop
ss
test
cmp
lret
add
jmp
and
outsl
push
sub
gs
mov
daa
ret
inc
cmp
icebp
dec
adc
bound
imul
adc
and
xor
fdivp
or
cld
xchg
in
into
jg
or
mov
scas
mov
add
add
xor
and
mov
jmp
dec
icebp
sbb
mov
fists
jp
mov
or
sahf
dec
push
outsl
fisubrl
xor
stos
xor
push
fsts
fdivr
sbb
lret
scas
and
sti
or
push
inc
mov
push
push
adc
ret
mov
out
cli
aas
lds
shr
adc
add
in
mov
mov
mov
outsl
nop
dec
pop
cmpsl
lea
xchg
add
xchg
pop
ss
lret
xchg
mov
adc
ljmp
subb
cmp
dec
mul
or
cld
dec
xchg
les
xchg
cmp
sbb
sub
pop
jae
fwait
pop
icebp
sti
js
fcoml
jmp
cmp
mov
or
sahf
pushf
xchg
dec
outsl
mov
iret
aam
scas
idivl
shrb
scas
add
cmc
imul
lret
sbb
cltd
cmc
hlt
fisttpl
lret
popa
cwtl
fld
jge
je
xlat
sub
cltd
mov
add
shlb
enter
imul
mov
out
xchg
jne
xchg
in
es
jns
xor
lahf
pop
out
cmp
pusha
js
les
add
in
push
call
iret
enter
ss
xor
mov
dec
fistps
ret
pop
push
xchg
enter
push
and
pushaw
aam
xchg
jge
mov
psubsb
int
cmp
pop
cltd
in
cmp
fs
xor
shll
ds
push
std
lahf
inc
inc
loope
faddl
test
pop
lcall
mov
sub
cmp
xchg
or
xrelease
imul
roll
frstor
lods
data16
sub
add
movl
cmpsb
xor
jo
fnstenv
popa
loope
adc
mov
cs
jb
dec
mov
pop
dec
in
sbb
inc
add
mov
out
xor
mov
rorl
insl
xor
adc
xchg
jecxz
jg
or
adc
je
out
mov
jb
xchg
xchg
mov
add
lods
lea
xchg
movsl
shl
pop
cmp
fsts
mov
loope
and
sbb
and
sar
add
jge
jp
xor
test
ljmp
mov
clc
mov
and
loopne
outsb
insl
pushf
and
xchg
lret
jmp
rcr
in
arpl
pop
arpl
aas
sub
dec
iret
ds
aas
mov
dec
push
lea
inc
clc
rep
ss
in
pop
push
repz
dec
sbb
push
orl
lret
or
divl
jle
loope
push
xor
icebp
mov
cmc
popf
add
hlt
mov
lds
mov
les
xor
popf
push
jns
test
sbb
data16
dec
aas
mov
adc
out
mov
mov
in
push
jmp
cmp
icebp
ficompl
cmpsl
in
rcrb
pusha
inc
mov
popl
and
fistps
fwait
xor
in
lods
test
fisubs
xchg
mov
dec
pop
dec
enter
mov
or
jl
mov
pop
push
sti
fidivl
lods
nop
lea
and
cs
mov
fdivrp
cmp
sub
hlt
inc
jp
imul
inc
sarl
inc
cmpsb
imul
add
mov
mov
sub
ljmp
decl
sbb
dec
cmpsl
xor
popf
xor
cmp
sub
aas
xchg
aad
fidivrs
fimuls
add
pusha
xor
test
enter
jno
sahf
cmc
mov
or
dec
ds
inc
dec
bound
sub
ja
adc
or
mov
xchg
arpl
shrb
es
imul
sbb
imul
mov
mov
or
daa
lret
inc
ja
sarb
popf
mov
mov
mov
call
pop
xchg
jle
lods
aam
ret
xchg
aad
xchg
xchg
lret
sbb
inc
add
iret
icebp
jno
pop
add
ljmp
loop
mov
repz
jae
mov
es
push
js
cmpsb
gs
mov
dec
push
pop
test
es
ss
add
ljmp
push
scas
mov
test
jbe
into
xchg
imul
add
aad
out
jl
das
sbb
les
or
rcrl
lds
pop
xor
inc
aad
iret
in
adc
cmp
push
bound
sbb
cmp
adc
mov
loopne
test
fsubr
push
add
int
and
sub
sbb
adc
sbb
shrl
or
inc
adc
adcb
mov
inc
push
sbb
aam
fisttps
mov
mov
xor
bound
in
fmuls
pop
lcall
cld
lods
and
pop
dec
mov
or
je
jae
push
xchg
xchg
enter
mov
pop
jbe
hlt
pop
jge
or
jne
in
xor
xchg
mov
mov
cmpsb
shll
pop
xchg
sbb
call
js
lods
xor
stos
std
ret
pop
cwtl
into
nop
and
popf
or
lods
lret
jle
and
add
in
lret
inc
fcomps
push
pusha
jge
mov
pop
mov
push
call
clc
inc
dec
push
jp
xchg
mov
jne
nop
mov
sahf
mov
out
sub
inc
cld
das
cmp
xor
loop
scas
lea
jns
push
es
sbb
jb
lds
mov
incb
xchg
sbb
aas
and
xor
mov
cmp
pslld
mov
mov
pop
loopne
mov
push
jp
lods
lret
nop
adc
repnz
push
lds
dec
inc
or
aad
fucom
push
and
fdivl
jb
lds
pop
push
push
cmc
das
jmp
xor
fildll
ja
inc
cmp
push
fstps
testl
jo
bound
je
int3
mov
add
adc
aas
out
mov
jne
sub
out
rolb
sarb
cld
pop
fcomps
push
xchg
push
faddl
fs
jmp
bsf
push
shl
push
push
or
data16
outsb
enter
popf
and
push
data16
insb
fwait
jbe
mov
lock
jp
push
in
subl
lret
loope
into
sbb
sbb
sbb
xchg
mov
dec
gs
frstor
xor
fs
sbbb
mov
jns
sub
and
add
and
fisttpl
in
dec
or
inc
jcxz
fiaddl
and
out
cmp
jp
sbb
xchg
pop
pop
mov
sbb
jle
push
iret
add
roll
or
add
daa
sub
dec
dec
jle
aad
sbb
sbb
add
sub
adc
fistps
shlb
outsb
iret
call
in
xchg
xor
dec
mov
xchg
jecxz
enter
xchg
aam
shlb
jmp
push
lahf
jp
aad
mov
divb
add
pop
pop
loopne
cltd
mov
idivl
xor
or
jl
push
jp
aam
adc
outsb
enter
lret
pushf
cmpsl
in
scas
mov
cld
insb
mov
movsl
sub
xor
cmpsb
dec
repz
mov
sbb
stos
xchg
adc
mov
lods
ss
iret
test
test
stc
subl
cmpsl
test
push
jmp
movsl
aas
mov
les
xchg
xchg
sbb
pop
add
jmp
imul
cmc
add
jl
ret
jb
mov
jle
test
mov
xchg
pop
mov
cmp
xchg
and
movsl
or
sti
out
aam
mov
xor
xchg
mov
stos
fs
stos
and
dec
jnp
test
out
and
stos
and
std
scas
orb
sub
mov
aas
or
mov
movsb
in
out
cmpsl
in
loopne
in
dec
xchg
mov
cmpsb
add
mov
xorb
xor
add
imul
or
jle
fs
inc
fs
hlt
imul
cs
mov
mov
mov
sahf
mov
movsl
iret
pushf
xchg
ret
cltd
jne
xor
stos
pop
popf
loope
mov
fcomps
xor
ds
add
inc
popf
sbb
fwait
fs
outsl
and
ss
xchg
sub
stos
push
int
mov
jecxz
push
pusha
sti
push
xlat
and
xor
push
pop
jle
adc
cltd
cwtl
dec
mov
cltd
popf
cld
inc
cld
push
loopne
jno
repz
dec
and
pop
cmpsl
cld
outsl
mov
fwait
push
fsub
mov
mov
data16
jmp
mov
or
mov
out
leave
aam
movsl
sbb
and
xchg
push
into
addr16
jbe
xlat
jecxz
sbb
sbb
xchg
dec
push
clc
jb,pn
jg
negl
lcall
pushf
jbe
jge
or
pop
cmc
pusha
xchg
push
push
fnstenv
into
clc
stc
xor
lahf
test
movsl
cmp
clc
out
pop
mov
test
xchg
pop
xorb
lcall
aaa
xor
jbe
mov
imul
pop
enter
push
sbb
push
pop
dec
push
dec
cmpsl
mov
in
nop
gs
out
push
xchg
outsl
and
and
cmpb
enter
addb
xchg
push
inc
dec
ljmp
mov
mov
pushf
scas
cmpl
cld
jecxz
xor
cmp
shlb
lahf
negb
mov
call
mov
mov
inc
fs
dec
lds
fwait
mov
jl
std
fstps
les
jge
jecxz
add
mov
inc
sbb
pop
sub
lods
cld
cmp
rcrb
push
add
test
sbb
adcl
xchg
adc
mov
push
loop
fstpt
lahf
lds
jle
enter
add
cmp
push
popa
cltd
sti
lea
mov
mov
sbb
jle
addr16
mov
xlat
mov
xor
push
jl
xor
cld
sub
sub
push
pop
sbbb
mov
mov
jg
mov
cmc
jp
lock
and
dec
adc
fsubs
sub
sti
mov
arpl
cmp
sahf
fdivrp
xorl
sub
fwait
scas
jo
add
xchg
jl
sub
enter
dec
pusha
or
les
ljmp
lods
inc
in
xchg
push
pop
xchg
scas
push
jb
jl
in
mov
add
dec
xorb
outsl
cmpsl
pop
xlat
adc
jo
dec
sub
mov
addl
or
popa
stos
rclb
jns
cmpsl
ljmp
gs
jp
addb
mov
add
mov
pop
mov
dec
xor
test
leave
lret
xor
imul
je
movb
pop
popf
dec
repnz
cmc
shlb
popl
mov
push
jbe
push
jne
push
imul
jo
bound
ret
fs
in
ret
movsb
lds
imul
inc
jae
pop
rcrb
test
add
loope
or
mov
add
sbb
addr16
adc
popf
cwtl
xor
test
test
or
sahf
dec
mov
rcrb
insl
testb
pop
mov
stc
lahf
cmp
and
and
xchg
out
sub
js
mov
inc
call
and
movsb
lret
sub
in
mov
adc
arpl
xchg
mov
cmc
sub
add
pushf
loopne
in
pop
push
cld
es
xorb
sti
mov
aam
cmpsl
in
arpl
cwtl
mov
pop
divb
sahf
cwtl
add
push
insb
push
xchg
jne
jns
fdivl
test
out
pop
adc
mov
pop
addr16
xchg
ret
js
lcall
xor
jge
jnp
and
popa
mov
imul
mov
rcrb
pop
pop
and
test
dec
popa
fldenv
mov
xor
imul
movsb
cld
js
adc
xchg
xchg
cmpsb
add
outsb
xchg
mov
or
push
push
int3
rcrb
push
sub
jbe
cmp
fcoms
cmp
xchg
fisubs
pop
fistpll
xchg
push
jns
cwtl
sbb
test
test
sbb
inc
sbb
adc
lods
xor
mov
fstl
adc
mov
scas
push
addl
les
inc
sbb
insl
and
or
outsl
cmp
leave
aas
out
push
mov
or
cwtl
xlat
mov
adc
push
icebp
mov
jecxz
mov
aad
mov
cmp
jns
push
and
add
mov
xorl
mov
xchg
xchg
and
cmp
loop
mov
push
loop
mov
pop
in
rclb
mov
inc
aaa
das
mov
into
fs
shlb
sub
jbe
lods
arpl
pop
jnp
xchg
pop
xor
cmp
and
xor
lods
sahf
loope
test
hlt
cwtl
adc
inc
sub
aam
cmp
shll
fmulp
or
cmp
add
jp
mov
sub
rorl
scas
cmp
loope
and
inc
jle
lahf
fisubrl
xchg
imul
dec
hlt
jo
mov
mov
in
out
cmp
inc
mov
shrb
cld
dec
call
out
mov
jbe
mov
mov
or
sbb
jno
mov
je
dec
imul
shll
sub
xor
imulb
xor
outsb
mov
adc
mov
add
je
jb
dec
icebp
cwtl
ret
iret
sbb
ljmp
inc
hlt
sbb
pop
push
jae
xchg
pop
push
xor
fstpl
dec
or
push
outsl
mov
lds
jns
shrb
fs
sbb
xchg
jne
xchg
shrb
leave
movsb
cmp
hlt
mov
nop
or
cld
enter
mov
fistpll
gs
dec
mov
sbb
test
dec
xor
sub
add
cmc
xchg
mov
and
bnd
inc
mov
mov
lahf
or
paddd
scas
mov
pop
mov
insl
sbb
in
mov
mov
cmp
movaps
repz
not
notb
cmp
stos
fsubs
dec
cmpsl
adc
js
push
cwtl
btr
add
sub
mov
push
add
dec
mov
mov
or
cmp
push
inc
push
push
pushf
mov
movsl
mov
outsl
fimull
jo
adc
mov
mov
aaa
sbb
mov
sub
jl
mov
ja
cmp
in
inc
adc
jecxz
push
cmpsb
mov
stc
fadds
cltd
jns
in
or
lahf
test
cmp
cmp
enter
cmp
cwtl
sahf
push
or
lds
jle
and
test
mov
lods
ret
fbld
aas
mov
cs
icebp
push
jg
inc
addr16
les
mov
push
adc
add
fwait
inc
mov
xlat
cmpsl
xlat
popa
xchg
lcall
or
pop
nop
push
movsl
mov
pop
lods
fs
mov
pushf
cmp
subps
sbb
fdiv
mov
aad
lods
loope
test
lods
into
sub
or
shll
mov
sub
xor
mov
push
xor
push
enter
sahf
sub
jns
jp
cmp
imul
cmp
dec
subl
loopne
or
mov
mov
dec
je
ss
aam
xorb
jecxz
stc
bound
jnp
rcrl
xchg
jmp
fs
dec
sub
scas
lods
mov
mov
ret
pop
dec
loop
add
mov
xchg
leave
sbb
mov
inc
aas
outsl
outsl
sub
mov
lret
andb
xchg
push
mov
ret
les
push
clc
mov
sub
dec
cmp
sub
cli
pop
xor
int
and
push
loope
push
imul
or
push
add
adc
enter
inc
pusha
test
xor
mov
push
add
ret
dec
nop
cs
sbb
lret
sbb
mov
fwait
cmpsb
into
pop
push
out
jmp
in
mov
pop
mov
dec
pop
popa
sub
pop
push
and
push
mulb
xchg
repnz
repz
mov
cmp
lock
fmul
js
pop
xor
fidivrs
lds
mov
movzwl
pop
and
xor
std
mov
pop
pmovmskb
dec
adc
out
mov
inc
jg
dec
push
and
and
mov
and
or
mov
mov
fcompl
popf
out
in
adc
dec
or
idivl
aam
test
cmp
fidivrs
orb
push
out
jmp
es
cmp
push
cmp
aam
or
enter
roll
add
mov
iretw
inc
das
adc
gs
mov
insb
out
xadd
add
mov
xchg
mov
pop
ret
dec
sahf
leave
dec
sub
dec
divb
mov
xor
jle
aam
cmpsb
sub
imul
pusha
jns
dec
outsl
mov
sahf
pop
jg
and
pushf
and
fcmovnb
ss
xchg
lgs
push
sbb
mov
daa
aaa
add
testb
mov
sbbb
rcrb
hlt
rcll
fmull
lret
adc
inc
dec
jmp
scas
push
xchg
sti
fistps
pop
push
adc
pop
pop
and
add
xchg
sub
add
ud1
outsb
imul
mov
xor
cmpsl
clc
js
add
jl
mov
ds
test
xor
sahf
cwtl
rorl
fiaddl
and
inc
idivl
stos
mov
out
add
pop
ret
cmp
ret
sub
aad
pop
nop
loop
cs
pop
mov
dec
aad
loope
mov
fistps
jo
mov
faddp
xchg
lret
jmp
pop
gs
jecxz,pn
inc
scas
pop
movsl
fmulp
addr16
shrl
add
pop
jbe
repnz
lret
and
xor
jbe
loope
shlb
aam
mov
mov
lcall
bound
adc
movsl
ret
pop
imul
xchg
je
push
or
lea
jnp
loope
stos
cmp
xor
ja
mov
dec
cwtl
push
jl
ja
push
jp
xchg
bound
jbe
notl
insb
loop
aaa
push
pop
push
ret
mov
mov
js
xchg
pusha
mov
std
fimuls
pop
jno
sub
inc
pusha
jae
adc
xor
in
mov
mov
lods
ret
loope
mov
xor
cmp
ret
roll
sbb
bound
lret
cmpsb
pop
lret
inc
leave
xchg
movsb
push
aam
xlat
adc
arpl
cli
mov
ja
clc
jbe
cmpsl
mov
and
aad
das
pop
inc
int
and
pop
lock
rorl
xchg
aam
rcll
test
sub
inc
push
push
mov
into
xchg
inc
bound
dec
call
mov
inc
sarb
dec
push
js
jnp
es
xchg
or
aad
mov
push
notl
ja
sub
xor
es
jb
fidivrl
daa
sbb
das
mulb
sbb
popa
rol
int
inc
jo
rorl
sub
rclb
fs
pop
mov
add
pop
xor
call
stos
sbbb
and
cltd
or
roll
flds
jmp
lea
data16
ret
ds
jecxz
adc
jle
fiaddl
adc
scas
aas
aaa
sbb
mov
add
test
mov
mov
iret
sbb
mov
dec
inc
jbe
or
adc
cmp
dec
jbe
stc
sbb
mov
lcall
or
jl
and
cmp
push
jmp
xchg
out
cwtl
cwtl
push
lods
push
mov
mov
aaa
and
gs
arpl
fisubs
pop
jae
movsl
mov
mov
push
data16
mov
xor
mov
pop
pop
sahf
mov
insb
push
int3
sarb
pop
mov
test
test
mov
das
cmp
dec
addr16
loopne
test
push
push
sarb
or
add
repz
fistl
inc
or
lahf
jb
aas
subl
andb
cmpsl
mov
aam
jne
fucomp
cli
mov
pop
push
lods
gs
in
neg
jg
push
out
xchg
sub
inc
mov
xchg
sub
movsb
ficomps
push
mov
arpl
bound
lea
adc
cmp
or
ljmp
int
xchg
das
cmp
movsl
imul
xchg
or
mov
lea
repz
dec
movl
movsb
dec
jne
add
popa
arpl
mov
shll
pop
fs
subb
and
daa
testl
dec
daa
push
inc
jl
loope
call
lock
cs
jp
test
stos
shll
pop
sub
xor
fwait
or
add
pop
jmp
and
xlat
cli
pop
jmp
push
jmp
sbb
lahf
push
mov
sbb
mov
push
lea
add
sbb
iret
and
fnsave
inc
jmp
push
inc
dec
xchg
inc
std
mov
and
addb
jge
mov
or
pushf
fldenv
xor
add
lock
mov
test
or
rol
outsl
inc
fdivs
pop
mov
sub
mov
push
in
inc
ds
js
inc
fldt
shll
das
or
out
pusha
cli
xor
pop
mov
sahf
push
decl
adc
jae
jae
ljmp
mov
cmp
aas
test
push
ja
std
roll
mov
fnstsw
and
jle
lea
xchg
sbb
cmpsb
fmulp
test
aas
cmp
pop
shrl
daa
pop
lret
lea
adc
je
std
addr16
and
aad
mov
imul
sbb
push
add
shl
les
in
push
and
test
mov
jge
cmpsb
arpl
outsb
xchg
fstl
adc
arpl
test
mov
dec
jge
movsl
addr16
xchg
mov
push
dec
cmp
insw
push
adc
mov
push
jns
shlb
cli
or
dec
out
scas
fucomp
xchg
inc
inc
pop
fwait
mov
ficoms
mov
aas
jo
mov
xor
cmp
fs
cmpsb
sbbb
loopne
push
aas
or
cwtl
dec
js
lret
cs
je
mov
es
mov
data16
add
cli
push
mov
bound
lcall
jno
pop
mov
mov
mov
ror
xor
mov
push
adc
addr16
jge
adc
xchg
xchg
cmp
adc
mov
add
dec
stos
mov
cmc
arpl
sbb
pop
push
jbe
mov
jns
cmpsb
int3
xchg
dec
sysret
stos
daa
and
push
fldenv
jge
inc
shrl
mov
sarb
pop
xchg
dec
mov
jmp
jp
and
sbb
hlt
ds
adc
inc
mov
out
fidivs
mov
sti
cmc
push
pusha
lahf
pop
adc
jbe
xchg
fisubrs
out
push
sahf
orb
fcos
push
rcrb
pop
sub
ficomps
orb
mov
jl
push
push
jno
jo
clc
stc
mov
add
lret
loopne
ficoms
mov
mov
push
xor
pop
push
roll
pop
in
push
sarb
repnz
xor
scas
sbb
cmp
add
out
mov
bound
inc
push
pop
out
pop
sbb
or
mov
inc
xchg
cmpsb
arpl
testl
inc
jecxz,pn
mov
mov
int
repnz
cli
adc
mov
xor
roll
cmc
jb
mov
popl
mov
cli
mov
push
pusha
cltd
cmp
mov
out
nop
xchg
cs
loopne
mov
and
std
rclb
jp
sbbl
inc
mov
add
filds
jb
mov
bound
push
adc
add
lea
xchg
add
jae
fbld
cmp
add
add
fs
test
push
imul
adcb
or
addl
jae
and
adc
pop
nop
push
cmp
xchg
dec
mov
clc
loopne
or
jbe
test
ja
mov
sub
mov
and
mov
test
inc
pop
mov
int
icebp
xor
pop
sbb
jl
out
cmp
cmp
into
ja
jb
orl
fs
loop
ja
or
hlt
popf
in
mov
xor
mov
mov
rcrb
rclb
adc
movsb
les
ret
das
fld
jecxz
dec
je
and
xchg
loopew
push
or
scas
adc
sbb
jno
movsl
cmpl
lods
mov
int
inc
fs
add
pop
fidivrs
mov
hlt
sar
aad
xchg
pushf
fwait
jmp
or
push
xorb
jb
mov
out
inc
loope
jbe
sahf
clc
push
mov
into
jle
insb
jb
xchg
pushf
mov
push
dec
movl
es
outsb
xchg
fisubrs
jno
jo
in
iret
pop
push
xchg
pop
fdivrl
repz
and
ret
add
xor
cmpsb
and
add
repz
cmpsl
cmp
testl
mov
cwtl
cmpsl
pop
lea
cmp
fs
mov
popl
push
adc
daa
xchg
dec
nop
outsb
scas
and
push
fs
rorb
shll
mov
inc
push
sbb
mov
daa
pop
adc
in
push
add
push
testl
xor
das
dec
push
push
mov
in
mov
inc
push
add
ret
js
sahf
subl
aaa
mov
or
dec
ljmp
addl
repnz
cmp
adc
cmpsl
dec
xchg
out
ret
sub
fiaddl
adc
shl
fs
jecxz
pop
xor
in
sub
and
pop
mov
add
fisubrl
dec
repnz
fs
mov
sub
dec
inc
dec
mov
enter
xor
sahf
push
lea
mov
lahf
enter
push
add
sub
cmpb
div
and
or
mov
aam
dec
push
call
addr16
add
push
cmp
cld
stc
in
pop
cmpsb
cmpb
out
jg
jne
hlt
lcall
scas
add
pop
cmp
in
xchg
shll
lret
loop
cmp
jp
pop
mov
les
or
dec
dec
sub
jae
mov
gs
jmp
jp
out
adc
int3
jle
jbe,pt
jmp
push
and
std
cmp
mov
and
shrb
push
inc
cs
loopne
xchg
mov
sub
out
adc
adc
outsb
icebp
fs
inc
pop
cltd
mov
fdivp
shrl
cmp
xlat
test
lea
sub
sub
dec
xchg
test
jl
outsb
aad
xchg
ret
lret
pop
mov
mov
adc
and
push
fmuls
cli
and
cld
xor
xchg
mov
jp
xchg
adc
faddl
xchg
test
pop
sbb
xor
cli
stos
mov
jbe
pop
sbb
mov
rclb
mov
daa
sbbl
sub
push
push
rcl
pop
ret
mov
jmp
fwait
or
sbb
inc
jge
gs
adc
jbe
pop
fwait
movsl
push
cmpl
movsl
inc
lock
in
jns
mov
sub
jmp
and
push
push
jmp
imul
cmpsl
out
jne,pt
inc
jae,pt
cmpb
mov
mov
movsl
jmp
push
out
aad
xor
and
and
stc
mov
pusha
adc
js
push
mov
aaa
fldenv
fcmovb
jns
imul
mov
sub
and
nop
aam
add
je
push
filds
pop
push
arpl
iret
xor
aas
push
nop
push
hlt
jns,pt
ja
jge
dec
fisubs
sbb
pushf
fucom
stos
into
jl
jecxz
xchg
jg
push
adc
lcall
outsb
adc
mov
inc
mov
jge
and
stos
pop
repz
shlb
jbe
into
sbb
add
sub
dec
cmp
fwait
sub
mov
aas
data16
je
xchg
mov
fninit
add
das
stos
pop
mov
pop
xor
push
inc
mov
xchg
jge
imul
pop
test
push
test
mov
inc
dec
push
fcmovnu
inc
test
aad
adc
jge
jb
add
push
mov
xlat
jbe
xlat
xchg
into
movsl
xchg
hlt
and
adc
jo
or
jns
dec
jb
sub
dec
pop
fs
or
call
lahf
jae
push
pop
repz
gs
add
lods
out
stos
sbb
adc
xor
sub
xchg
stos
mov
mov
mov
nop
out
cli
xlat
data16
mov
outsl
loopne
cmpsb
or
pop
test
arpl
cmp
mov
cmp
xor
leave
dec
movsb
negb
pop
hlt
cmp
fmul
ljmp
and
mov
mov
js
mov
cli
and
jle
jo
cmp
xchg
js
lea
add
pop
inc
mov
xor
insl
pop
sbb
icebp
pop
addr16
decb
into
jne
mov
inc
cli
sub
mov
pop
fisttps
xchg
push
testl
fistpll
or
xchg
ljmp
push
or
mov
jbe
leave
ljmp
scas
adc
cmp
push
dec
xor
lods
cmp
jge
mov
int
push
pop
mov
or
insl
das
mov
and
out
xchg
inc
ds
or
in
add
shlb
or
push
mov
mov
mov
dec
pop
inc
ds
inc
bound
hlt
mov
xchg
lahf
dec
mov
mov
imull
push
push
repz
pop
out
icebp
jl
insb
cmpsl
add
push
sbb
xchg
jg
stos
std
or
cmp
jl
pusha
hlt
xor
ss
int3
cmc
mov
mov
es
std
lock
test
add
pop
nop
insb
nop
mov
pop
push
xchg
adc
jae
outsb
daa
and
ret
and
sub
shll
lret
gs
pusha
and
mov
mov
cli
and
mov
lods
in
jecxz
roll
lret
dec
das
sub
fwait
pop
mov
xlat
mov
xlat
cltd
lret
jg
add
adc
xchg
inc
push
or
mov
sar
test
push
out
adc
imul
adc
cmp
fs
jne
inc
xchg
fdivrs
std
jbe
jle
je
and
leave
testb
sahf
lret
add
mov
inc
mov
sahf
enter
push
mov
mov
ret
push
lock
bound
pop
cli
ficoml
xchg
mov
add
mov
pop
pcmpgtd
dec
jge
loop
jb
hlt
push
shlb
push
das
push
push
cmpsl
loope
gs
push
out
popf
fcmovbe
add
jecxz
cltd
and
jle
add
dec
arpl
and
inc
lock
push
insl
mov
xchg
push
adc
and
stos
sbb
mov
or
cmp
in
in
sahf
cmp
cmp
mull
popf
rcl
dec
cmp
and
mov
call
jp
ja
sbb
ja
mov
subl
jle
jb
xorb
push
inc
mov
fmulp
and
aam
int3
mov
das
aaa
xor
jle
jle
ret
in
pop
cmp
loop
mov
movl
cltd
call
popf
fsts
cmp
xchg
inc
and
lret
cltd
call
push
xorb
lods
or
lods
frstor
movsl
pop
icebp
jle
jl
inc
jno
data16
mov
shl
imul
xchg
jbe
jbe
or
push
enter
jl
clc
add
add
push
movsl
pop
lock
cmp
sti
nop
aam
jl
jns
pop
push
lods
xchg
lret
jl
mov
lods
xlat
sbb
or
mov
js
dec
pop
lods
testl
rorb
out
fs
push
jae
xchg
mov
pusha
push
and
in
dec
sub
and
or
mov
xor
inc
aam
push
xor
hlt
sub
movsb
popa
pop
pop
stos
nop
es
mov
fnstenv
shl
lds
repnz
shll
xor
movsb
jo
sub
fisubs
sbb
out
in
outsl
inc
movsb
mov
imul
xchg
xor
dec
pop
mov
leave
and
jmp
je
hlt
jecxz
mov
nop
push
arpl
push
pop
aad
sub
sahf
js
jl
aad
ret
xchg
sub
push
cld
das
xor
das
mov
sub
ret
addr16
fs
push
xlat
lea
loopne
sub
das
dec
sarb
enter
push
add
adcb
adc
adc
or
cmp
fnsave
xor
aaa
and
stos
aas
sub
ret
xchg
lods
push
imul
xchg
rcl
jmp
and
inc
mov
mov
cld
incb
add
mull
mov
adc
es
xor
ficomps
in
cmp
xor
cltd
pop
data16
shr
aaa
movsb
fstps
movsb
sub
test
leave
and
movntps
mov
mov
jne
cmpsb
pop
add
icebp
data16
mov
insb
cmp
ret
xor
or
adcl
rcrl
and
mov
jecxz
jecxz
adc
mov
inc
ss
pop
push
jge
and
cmp
ja
aad
xorl
ret
pop
pushf
and
loopne
cld
cmpsb
mov
lods
gs
js
mov
aaa
jbe
mov
sbb
mov
int
lods
xlat
xchg
daa
push
aaa
cmp
sub
nop
jecxz
sbb
lret
mov
scas
adc
negl
lock
mov
mov
cmpsl
adc
mov
pop
pop
or
pop
adc
sbb
inc
out
lock
pop
nop
scas
xor
fiaddl
xor
out
ret
sub
xor
jg
insl
cld
bound
xor
shll
pop
dec
push
lods
dec
aaa
cmp
jno
cmp
mov
cmp
pop
dec
jecxz
sub
stos
xor
xchg
dec
sti
cmc
cmp
and
lods
roll
fsubl
push
mov
loope
sahf
lea
push
fsubl
lea
dec
loope
fmuls
or
js
inc
in
mov
test
das
repnz
sbb
rorl
addl
std
dec
xor
int3
ja
mov
sti
cmp
jmp
sub
mov
mov
ss
aas
jae
clc
addl
jne
add
lahf
cmp
adc
jbe
xchg
fisttps
gs
adc
add
push
add
xor
loop
ds
add
cs
loop
in
jno
pop
xor
push
lcall
ficompl
xor
push
xor
sub
xchg
push
mov
mov
or
jno
mov
fwait
cmc
rcr
and
cmp
fdivl
leave
jno
jmp
jecxz
popa
jnp
pop
push
or
jge
mov
loope
out
fsubl
stc
leave
arpl
insb
sbb
fsts
xchg
repnz
inc
or
adc
mov
mov
leave
and
cmpl
sub
jecxz
mov
in
xchg
push
std
into
into
idivb
lcall
aad
sub
and
lret
rorl
ja
repnz
inc
push
in
shlb
lahf
xor
fbld
and
imul
or
mov
push
pop
sub
jno
movsl
xchg
fwait
xchg
lea
ret
ja
daa
xchg
xlat
jns
in
js
cmp
fisubs
mov
xchg
cmpsb
and
mov
push
jae
mov
fildl
jb
roll
test
sbb
fldt
lret
xor
sub
call
xchg
xchg
jmp
inc
fisubs
lcall
imul
or
xchg
push
mov
das
clc
xchg
dec
mov
cmpsb
xchg
in
mov
inc
jnp
pop
fsubl
scas
lea
fadds
push
push
or
mov
loopne
test
xorl
push
mov
insb
xor
sbb
je
pop
mov
mov
out
fwait
mov
adc
subl
outsl
stos
aas
xlat
adc
in
add
or
aam
mov
xor
es
mov
dec
out
adc
sub
push
push
and
inc
or
xchg
adc
js
add
mov
push
mov
rorl
sub
in
out
lret
cmc
jmp
add
imul
mov
mov
out
out
stos
add
pop
insb
xchg
jecxz
mov
xchg
jle
orl
aaa
fisttpll
in
fyl2x
push
and
insb
ss
roll
loop
mov
inc
pop
push
incl
insl
inc
fadd
lock
test
div
push
cmovp
mov
int
cli
nop
test
call
loop
je
insb
lret
push
rcr
lods
mov
clc
jne
pop
mov
dec
adc
out
cmp
xchg
add
push
test
enter
sbb
push
adc
pop
scas
jne
xor
addr16
dec
iret
add
ds
jge
push
sbb
or
negb
jb
rcl
sti
pop
fsub
xor
pop
out
sub
ret
dec
and
inc
jno
cmpsl
int
mov
dec
test
mov
add
jge
leave
sti
xchg
cmp
add
add
cmpsb
or
push
push
ret
test
cltd
cmc
adc
xchg
pusha
rorb
push
int
pushf
sbb
js
imulb
dec
ss
mov
lret
adc
xchg
pop
daa
xchg
inc
pop
and
or
aad
ds
push
mov
lret
pop
xor
iret
dec
fcompl
nop
dec
mov
insb
jb
push
imul
jg
fisttpl
insb
adc
sbb
int3
or
adc
shlb
shrb
fwait
mov
cld
and
cmpsl
adcb
push
stos
sub
add
fs
xchg
stos
mov
es
cmp
dec
or
ljmp
pop
xchg
mov
cmp
dec
arpl
ja
jns
sub
push
sar
inc
push
xor
mov
aad
loopne
jbe
jo
std
mov
adc
push
and
and
xor
mov
popa
push
fimuls
dec
fcmovnb
fisttps
push
mov
mov
mov
pop
fistl
push
add
out
fmull
lret
fcmovnb
insb
hlt
nop
pop
bound
add
dec
mov
ja
mov
pop
andb
mulps
pop
hlt
mov
inc
cmp
mov
pop
jecxz
fimuls
jns
mov
rorl
mov
inc
mov
add
test
sub
or
dec
xchg
aas
stos
inc
sbb
jg
sub
aas
ljmp
loop
nop
sbb
fnsave
jl
inc
pop
push
pop
scas
out
push
sbb
mov
into
shll
add
int3
xlat
mov
jge
nop
jno
add
cmpsb
lcall
adcb
dec
push
sub
mov
sub
xchg
jmp
cmp
jl
cmpl
sbb
adc
rcl
aaa
popf
loope
inc
xlat
xchg
mov
lods
inc
in
mov
adc
cmp
daa
ljmp
push
add
fsubrs
loop
xchg
std
das
dec
push
pop
in
loope
mov
cmpl
pusha
gs
adc
mov
mov
das
mov
dec
xchg
adc
xlat
jb
scas
and
nop
orb
hlt
lock
out
subl
cmp
cmp
inc
jle
shr
in
cmp
bound
dec
aam
aaa
push
jbe
loopne
sbb
sbb
adc
es
ficompl
mov
sub
fucomi
pop
les
out
jmp
jecxz
jmp
and
arpl
adc
out
rcrl
test
jb
mov
ret
mov
xchg
mov
push
jne
ficompl
in
loopne
dec
mov
adc
icebp
add
enter
das
ds
push
insb
pop
enter
mov
daa
pop
adc
jne
mov
sar
rorb
mov
push
lcall
mov
inc
repz
stos
jmp
ja
test
insl
sarl
lcall
jo
and
xchg
and
int3
add
imul
or
repz
jae
mov
xchg
jo
adc
imul
lock
push
cs
add
push
pushf
enter
sbb
mov
lods
and
jno
xchg
add
cmpsb
push
mov
daa
sbb
es
pusha
sbb
stos
mov
fwait
mov
mov
pop
cmpsb
mov
test
push
or
push
scas
xchg
dec
pop
inc
adc
mov
sbb
dec
jo
add
ljmp
dec
loop
in
orb
inc
out
dec
lret
push
cmp
or
mov
inc
add
test
mov
sub
lock
lahf
addr16
sub
push
or
mov
inc
mov
shlb
cltd
fildll
sarl
and
cli
pop
inc
push
test
inc
in
out
cmp
mov
push
adc
xor
xchg
call
dec
loop
mov
mov
jo
in
inc
shl
jle
sub
lds
adc
addr16
dec
jbe
pop
aad
aas
xchg
pop
invd
lcall
popa
inc
ljmp
jno
loop
pop
cmp
mov
lods
pop
xchg
mov
jo
mov
inc
xor
cmp
sti
cltd
xchg
and
mov
sub
push
adc
jmp
mov
inc
add
je
jmp
rcpps
inc
or
scas
cmp
mov
mov
jge
imul
xlat
push
es
mov
jl
pop
sti
pusha
shlb
jnp
ljmp
leave
xchg
into
inc
adc
fmulp
dec
add
xor
loopne
dec
scas
fstp
dec
mov
sbb
sbbl
fldt
loope
icebp
cmp
not
jle
cltd
in
cli
add
movsl
fnsave
mov
in
push
add
aad
ss
std
mov
std
mov
inc
div
sbb
in
xchg
xor
ja
mov
negb
pop
jecxz
mov
lock
loopne,pn
call
imul
pop
dec
int3
adc
in
pop
cwtl
nop
xor
push
sbb
mov
cltd
imul
add
es
pop
xor
in
cmp
adc
out
cmp
mov
mov
xchg
lahf
call
sbb
stc
std
xor
mov
xor
adc
ss
mov
push
adc
outsl
jge
inc
mov
in
repnz
aaa
add
mov
test
push
pop
pop
mov
pop
mov
icebp
popf
dec
popa
nop
jp
inc
scas
push
push
cli
sarb
cli
sub
sub
cwtl
sbb
lahf
inc
aad
daa
sub
lcall
push
mov
mov
sub
sbb
daa
in
call
adcl
xchg
xlat
popa
or
pop
push
mov
or
sbb
xchg
jnp
jb
lahf
call
adc
push
lahf
cwtl
fstps
mov
das
imul
into
cld
dec
cmp
rol
iret
sahf
pop
jno
jge
xlat
xor
arpl
inc
adc
push
push
outsb
jl
push
adc
mov
inc
xchg
dec
cli
sarl
repnz
pop
aaa
xor
mov
push
pushf
scas
xchg
adc
inc
cmpsb
movsl
aaa
xorb
sub
jnp
movsl
addr16
pop
xchg
jo
in
and
pop
mov
mov
fcoms
dec
push
jg
nop
push
push
das
out
ja
out
clc
pop
inc
push
das
xor
rcll
mov
adc
icebp
sahf
fcompl
jmp
push
dec
or
pop
imul
aam
add
insl
push
jmp
stc
dec
jp
int
add
pop
jg
mov
insb
push
xchg
mov
mov
mov
pop
xor
nop
add
jmp
dec
and
inc
mov
std
int
into
jae
xor
repz
popf
cmp
les
mov
cmp
and
xor
or
pop
imul
jbe
and
push
sbb
inc
pop
fwait
les
int
add
adc
lock
ficoml
jp
test
movsl
outsl
clc
in
mov
dec
jge
xor
scas
push
ss
andl
and
mov
sub
push
fildll
mov
mov
in
add
sub
or
jo
leave
vmwrite
sbb
lea
repz
adc
movsb
enter
aad
mov
insb
andl
inc
cli
adc
or
sbbb
jg
repz
aas
fdivl
cmp
pop
dec
mov
cmp
sbb
pop
sbb
enter
or
test
cmp
cwtl
in
arpl
decb
xchg
jb
mov
subb
loop
xchg
aas
sbb
fsub
push
inc
loope
pop
loop
out
icebp
push
fcmove
inc
ss
push
jae
mov
in
clc
shl
iret
jp
or
cmpl
add
push
cltd
mov
mov
adc
xchg
pop
mov
ds
aas
pusha
sbb
mov
sbb
and
imul
mov
insb
in
sbb
enter
push
push
ret
push
cli
add
fistps
inc
mov
fldt
std
and
mov
inc
sub
push
xchg
in
xchg
fld
and
adc
mov
popf
gs
nop
repz
out
adc
test
and
sub
pop
push
in
daa
xor
sub
cmp
lock
cld
aam
mov
shrl
les
jle
sub
je
lods
icebp
and
pop
fdivp
pop
cwtl
cmpsb
lods
iret
push
inc
arpl
mov
xchg
sar
sbb
adc
or
cmp
out
cmp
sub
cmp
lea
mov
nop
push
add
mov
cld
pop
xorb
push
les
jmp
testb
loope
inc
lret
jo
mov
dec
mov
ljmp
je
repz
jnp
lret
add
lcall
mov
inc
shll
sbb
sarl
xchg
pop
push
add
sub
rcrl
inc
aam
lods
pop
jo
popf
jp
inc
pop
cmp
mov
negb
adc
mov
push
jmp
notl
orb
loopne
imul
shl
cld
jg
pop
inc
movsb
mov
fildl
aas
dec
pop
xchg
outsl
aas
mov
jmp
inc
dec
adc
fidivs
push
outsb
mov
sbb
xchg
adc
sahf
clc
sbb
adc
or
lods
fisttps
cmp
cmpsl
movb
jecxz
jecxz
and
shlb
dec
stc
test
daa
mov
sbb
ss
dec
cltd
shr
pop
dec
xchg
std
mov
jno
ss
dec
mov
cmp
outsb
test
imul
iret
jb
xchg
fimull
lock
repz
push
repnz
stos
inc
or
int3
mov
mov
aad
mov
mov
push
cwtl
ret
leave
xor
xchg
shlb
test
or
movsl
lret
sti
in
jbe
push
cltd
loope
pop
sub
cmp
test
lea
pmaxsw
sub
inc
lretw
dec
mov
xor
add
sbb
stos
fdiv
imul
out
ret
xchg
movb
pop
xchg
ja
imul
pop
jbe
test
bnd
xchg
int3
mov
cs
fcoms
mov
sub
xor
pop
jo
mov
ja
cltd
movsl
popa
movsl
pop
es
andl
mov
cmp
sbb
mov
mov
xchg
cmp
or
stos
movsl
and
js
push
jecxz
fidivrl
and
bound
add
inc
push
or
push
aaa
jg
jecxz
xchg
repz
fwait
jns
mov
movsb
inc
push
inc
mov
xor
push
inc
xor
or
std
fsubl
adc
stc
addr16
xchg
repnz
mov
and
test
add
popf
jo
cmpsb
data16
pop
pusha
cmpl
add
mov
std
in
push
stos
and
xor
in
sub
mov
adc
push
negb
xchg
rorb
mov
in
cmpsl
cmp
mov
mov
jge
ds
stos
test
data16
jg
jg
pop
fidivl
jmp
outsb
pusha
pop
ret
push
jl
ret
subb
fs
data16
and
and
into
xorb
jbe
cmp
cmpsl
push
test
mov
aas
test
xchg
faddp
ja
xor
or
les
xchg
and
ds
gs
nop
andb
sbb
mov
insl
in
outsb
in
loop
daa
adc
dec
mov
inc
and
inc
fisubs
stos
ds
rolb
dec
lcall
jle
pop
add
stc
fwait
sbb
movsl
mov
sahf
mov
shll
xchg
xor
inc
or
mov
cmp
cmp
inc
fnstcw
in
movl
lret
in
rol
test
jno
les
vphsubdq
jmp
daa
shll
sub
xchg
je
mov
and
or
fcoml
mov
cs
imul
xchg
xchg
xlat
mov
sub
mov
sub
sbb
add
enter
sub
inc
movsl
or
cmpsl
testb
enter
sbbb
shrb
inc
outsl
adc
pop
xor
add
test
or
adc
out
mov
cmp
lret
lret
adc
or
add
mov
ficompl
rcll
decl
pop
leave
fmuls
dec
ss
dec
ja
pop
imul
xchg
cmpsb
mov
ret
fsubr
cmpsb
or
dec
xchg
rorl
mov
jmp
mov
aas
imulb
mov
movsl
leave
xor
mov
jns
or
fbstp
inc
cmpsl
jp
cmc
inc
fs
push
sub
sub
mov
mov
cmp
subb
dec
push
nop
cwtl
les
mov
out
and
cs
mov
in
add
nop
cld
imul
pop
shlb
fldenv
sahf
cmc
insb
sbb
cltd
jo
ljmp
pop
inc
dec
xchg
xchg
mov
in
into
ret
pop
or
out
adcb
mov
imull
and
lock
mov
fldcw
lock
add
flds
fwait
cli
cwtl
mov
mov
stc
push
aaa
xchg
or
add
add
push
push
inc
stc
mov
ljmp
xor
xor
addb
lods
xor
jl
cmpsl
mov
lds
inc
lds
sahf
lahf
jo
or
test
push
jmp
adc
jnp
lods
lods
arpl
mov
cltd
adc
push
mov
push
jo
jl
pop
jne
mov
cld
popa
push
mov
cld
adc
mov
jne
rorl
test
push
sub
cmp
icebp
or
add
ss
sbb
orb
outsb
inc
jno
or
sbbb
jno
jno
sbb
imul
out
test
cwtl
xor
ss
fs
ret
push
jge
lds
xor
jb
fwait
aaa
call
shrb
shlb
es
cwtl
popa
lea
inc
and
jle
xor
adc
and
mov
pop
cmpsb
stc
jo
cmpsl
adc
iret
incb
xchg
rorl
add
shlb
mov
pop
xchg
pop
fdivl
stos
mov
aaa
es
sti
xchg
mov
outsl
fnsave
int
add
adc
fisubs
nop
repnz
mov
or
jle
mov
mov
lods
pop
js
xchg
enter
daa
lahf
in
push
mov
int
and
sti
stos
xor
imul
shr
enter
data16
into
stos
scas
loop
cmc
lods
mov
jae
dec
push
and
orl
xchg
in
sub
xchg
pop
mov
movsb
xlat
inc
lret
shrb
stc
cmp
adc
shl
sub
jle
mov
pop
pushf
stc
cmpsl
shrb
cwtl
repz
inc
jnp
gs
sbb
mov
push
push
adc
push
cmc
adc
xor
jne
inc
dec
inc
mov
test
xchg
add
pop
aam
mov
jl
stos
lcall
cltd
scas
jns
testb
movsb
nop
cmp
inc
push
fidivs
arpl
stos
cmpsl
cmp
imul
mov
mov
aad
gs
cmp
dec
addr16
xor
loop
loop
aas
mov
push
enter
xor
push
outsl
rol
dec
lock
cli
dec
aas
imulb
sti
pop
aas
and
mov
lahf
pop
orl
ss
shlb
repz
das
or
adc
xchg
pop
cmp
mov
xchg
shrb
pop
and
pop
out
sbb
mov
mov
add
adc
jae
daa
mov
dec
int
mov
arpl
or
jle
imul
lcall
hlt
aam
xchg
cmpsb
imul
xor
shlb
xchg
loop
sub
mov
fstps
out
out
pop
push
pop
cmp
pop
or
inc
outsl
or
jne
sub
in
out
shrb
out
nop
shl
out
loope
jecxz
fadds
mov
xchg
mov
xchg
daa
fdivr
xchg
xor
jg
push
mov
dec
test
loope
mov
fcoms
xchg
add
icebp
mov
mov
jg
repnz
jge
mov
enter
jo
jp
aas
and
dec
xor
aas
aaa
insb
test
ja
jecxz
in
popa
jne
cltd
cmp
testb
insb
test
and
ljmp
cmp
dec
cli
test
sub
loopne
mov
add
dec
sbb
push
adc
shl
das
push
cs
data16
movsl
sub
popa
or
fs
sbb
push
jg
lea
inc
mov
pop
cmp
cmp
dec
sub
jns
cmp
cmp
jmp
data16
into
call
push
push
test
insb
mov
mov
adc
push
pop
mov
ret
lcall
stos
add
shr
dec
pushf
pop
or
cs
out
clc
inc
inc
loop
push
mov
inc
mov
sbb
sti
cmp
std
cmpl
roll
cmp
dec
ss
jp
inc
stos
inc
xchg
stos
loopne
dec
and
std
inc
mov
enter
cwtl
sbb
jnp
sbb
xchg
sub
shll
mov
iret
xlat
shr
insl
movsb
cli
sti
sbb
cmc
aam
dec
ja
cmp
mov
mov
stos
les
pop
xlat
aam
mov
icebp
sub
mov
and
jg
and
lret
sub
ret
cltd
enter
xchg
and
insb
inc
scas
adc
aam
stos
jmp
fst
lods
xor
add
push
mov
scas
push
aad
mov
hlt
orb
sub
jl
mov
jle
movsb
xchg
jg
aam
push
das
and
pop
inc
in
jns
outsl
out
xchg
addl
pop
das
int
pop
ficoms
add
sub
sub
inc
jb
and
aaa
jne
cwtl
outsl
test
xchg
bound
das
push
filds
rorl
insl
mov
or
ja
pop
jle
mov
lret
mov
add
mov
std
add
test
xchg
loopne
in
cmpsb
jge
js
stos
sbb
enter
add
rcrl
cmpsl
cmp
das
adc
out
cmp
mov
andb
cmpsb
ficoms
xor
loopne
xchg
lods
sub
xchg
mov
xchg
lea
movsb
call
and
mov
int3
xor
stos
sahf
in
cmp
mov
xchg
lcall
fstps
arpl
ficoml
and
loop
dec
fcoms
pop
ror
aaa
scas
and
shl
leave
jp
and
ja
daa
cmp
push
cmp
add
popf
push
fwait
int3
sub
jl
pusha
ljmp
hlt
and
repnz
push
mov
movsb
push
inc
call
sbb
add
insb
pop
int
jl
mov
ret
sub
test
cli
daa
scas
jo
or
movb
push
inc
sbb
mov
shr
pop
out
aas
out
xchg
idivb
or
daa
or
adc
sub
xchg
loopne
hlt
pop
stos
ror
sbb
lods
insl
or
rep
loopne
xlat
sahf
mov
cltd
fucomi
test
lret
dec
lret
rolb
fsubr
jae
jnp
loope
mov
push
push
push
add
add
jae
or
test
xchg
sub
aas
dec
mov
lds
jg
aaa
sahf
push
mov
and
dec
repnz
or
push
jecxz
jmp
pop
mov
pop
inc
inc
pop
push
or
test
mov
push
fildl
stc
sbb
ds
repz
add
sbb
mov
daa
jo
sub
cmp
lret
jbe
shrb
inc
add
xchg
and
jbe
mov
add
int3
dec
xor
out
sbb
inc
push
xchg
jae
inc
hlt
add
aam
xor
sbb
or
add
in
xchg
es
lock
mov
xchg
adcb
dec
and
fidivrl
dec
sub
add
call
sbb
pop
xchg
pop
or
pop
lcall
ret
frstor
jo
pop
rcrl
lods
cmp
call
loop
ret
out
cmp
lahf
xchg
test
scas
xor
mov
fldcw
jge
stc
leave
xor
lds
jle
loopne
pusha
add
cmp
xor
out
sub
ret
dec
movsl
xor
lock
pop
push
jne
pusha
outsl
cli
jne
dec
xchg
mov
repnz
lcall
andb
xor
or
sti
pusha
fwait
stos
test
cmpsb
xor
lds
icebp
out
shlb
out
sub
sar
inc
les
push
pop
add
mov
fcoml
cmpb
mov
sbb
into
push
in
dec
enter
rcll
stos
movsl
sti
jno
inc
imul
insl
jnp
sahf
sbb
fldl
hlt
pop
fucomp
into
inc
mov
mov
outsl
pop
mov
sbb
pop
lock
cmpsl
int
loopne
nop
das
push
psubusb
cmp
dec
add
js
pop
movsb
std
and
xor
hlt
jo
loope
cmpsl
xlat
fsubs
andl
iret
int
mov
test
mov
imul
jb
or
fwait
dec
cs
pop
inc
lods
mov
aam
inc
sub
pop
inc
fistl
sbb
aam
call
outsl
push
outsl
or
sbb
xchg
leave
push
cmpl
sbb
scas
mov
and
jae
xor
ds
adc
int3
mov
cmpsl
xchg
cmp
ja
mov
or
add
outsb
or
test
dec
xchg
add
cld
lret
mov
cmpsb
cmp
ret
lods
bound
mov
mov
std
mov
xchg
jle
bound
cmpsl
sub
jae
jne
mov
out
sbb
and
scas
repz
ss
imul
mov
rcl
or
sub
lock
sub
sahf
les
sbb
jbe
mov
push
xor
mov
scas
in
jg
xor
push
fcmovu
pushf
sub
mov
xchg
push
and
repnz
push
push
into
arpl
mov
add
mov
jne
add
fsubrl
mov
pop
pushf
and
sbb
jge,pt
cmp
fsub
aad
xchg
xor
into
push
pop
cmp
out
push
add
dec
ss
dec
test
mov
pop
push
rolb
pop
jge
inc
add
int
lods
cmp
jne
push
xor
test
push
stc
sbb
adc
cmpsb
leave
leave
sbb
sti
ds
scas
mov
sbb
push
jle
jne
mov
test
jbe
jae
mov
scas
shr
sarl
das
sub
movsb
cli
fisubs
push
mov
xchg
push
dec
xchg
call
leave
xorb
stos
cs
lock
mov
xor
inc
mov
add
or
ja
mov
je
xor
sbbb
insl
jo
mov
popa
into
lods
adc
rorb
push
inc
pop
out
jp
inc
mov
push
ror
pop
adc
std
nop
jb
insb
mov
call
movsl
std
scas
cmp
mov
mov
rclb
xor
jae
pop
push
push
loop
jge
ss
repz
fdivl
jl
repnz
test
loopne
lahf
hlt
jo
push
fldcw
loop
add
outsl
stos
fucomip
cld
push
out
add
pop
and
out
fstpl
inc
adc
insb
fidivrl
or
xchg
sahf
cmp
mov
sti
add
and
popf
jae
lahf
repnz
lret
mov
fs
fbstp
jbe
or
mov
mov
dec
fisttpl
iret
jns
inc
jae
adc
aam
inc
leave
gs
cld
inc
and
ds
mov
xchg
fnstenv
cmp
xchg
aaa
mov
jmp
cmp
dec
sbb
ret
push
icebp
mov
mov
pusha
cmc
xor
adc
leave
int
inc
cmp
in
dec
cmp
gs
testl
fnstsw
icebp
fisubrl
imul
push
test
jp
lret
fimull
jg
in
cmp
mov
cli
jo
aad
mov
lahf
mov
lock
testl
xchg
xor
pop
aad
movsl
jbe
or
push
cmpl
xor
jns
fwait
std
pop
push
adc
and
stc
pop
jl
inc
rolb
mov
aam
sbb
adc
loopne
adc
dec
jb
cmc
xchg
pop
xchg
inc
xchg
pop
sub
cmp
stos
jl
xchg
xchg
push
repnz
cmpsl
ror
insb
jne
sahf
adc
xchg
mov
jae
xchg
rcll
pop
pop
xor
cwtl
sbb
and
push
shlb
or
int
pop
xor
aaa
es
mov
subb
adc
pop
cmpsl
jle
dec
inc
les
mov
inc
loopne
pop
mov
mov
and
pop
test
stos
pop
add
in
imul
fwait
pop
mov
mov
and
xor
ja
cmp
pop
push
aam
insb
lea
mov
mov
popf
cmpsb
popa
xchg
loope
pop
inc
lret
les
iret
mov
mov
push
and
xchg
repz
xor
popf
add
outsb
out
or
mov
cmp
imul
jmp
loop
and
imul
lret
xor
fwait
aad
and
push
cmp
insl
mov
dec
mulb
inc
mov
inc
xchg
add
xor
mov
and
inc
popf
inc
in
icebp
mov
add
or
movsb
push
divb
jmp
xchg
fstpt
in
mov
fstl
pop
int
add
jp
out
es
les
xchg
mov
xor
out
call
es
xchg
addr16
pop
and
insl
jnp
int3
mov
sbb
and
sti
test
adc
pop
push
push
dec
in
mov
pop
cli
push
shlb
pusha
cmc
iret
push
sbbb
ja
mov
xor
fildll
subl
mov
push
sub
cli
add
or
dec
and
xchg
fdivr
sbbl
and
add
repnz
sbb
sbb
xchg
cmp
mov
movsb
sbb
popa
sub
or
sub
inc
jne
jbe
leave
adc
xchg
or
xor
lds
mov
loopne
inc
dec
jg
shll
and
push
shll
jmp
push
push
sbbl
lahf
ror
mov
xchg
push
scas
loope
and
dec
lods
fsub
xchg
stos
lock
push
sahf
lcall
fcomps
fwait
xchg
mov
out
mov
sbb
push
ja
loopne
pop
xor
ja
sbb
xor
out
fcompl
and
enter
call
mov
lds
ror
jg
push
or
push
inc
inc
lods
sbb
sub
sti
lret
hlt
arpl
sbb
jmp
cmpsb
sbb
jle
int3
sub
cld
cmp
push
scas
mov
push
jnp
sbb
std
jg
pushf
adc
repnz
sarl
call
mov
int
or
ret
je
cmp
pop
aam
inc
aam
jo
and
pop
popa
enter
push
ret
or
lods
and
stos
mov
psubusb
aas
add
or
pop
sub
sub
cli
push
cmp
mov
icebp
and
push
sbb
dec
jmp
mov
mov
add
jns
dec
or
jmp
jbe
xrelease
xchg
mov
lds
pop
dec
add
in
mov
out
insb
rcrb
pop
sub
ror
and
push
fistpll
adc
pushf
or
inc
pavgb
jno
test
or
xor
inc
popf
push
data16
pop
add
pop
fstpl
mov
mov
sbb
lock
fsts
add
and
orb
test
jmp
sbb
pop
jge
imul
mov
popf
insl
in
lret
mov
or
jg
xor
mov
test
push
mov
and
aas
sbb
and
out
adcl
insb
pop
jb
pop
cmp
xor
push
jno
ss
repz
lock
cmp
push
dec
push
outsb
fistpl
cmpb
call
and
insb
lret
in
dec
xlat
sahf
lret
int3
adc
repz
nop
push
cwtl
lahf
jbe
into
mov
dec
xchg
adc
popf
inc
xchg
inc
xchg
cmpsb
lock
notl
mov
mov
fs
and
dec
out
enter
fiadds
cs
mov
cld
mov
dec
mov
int3
int3
repnz
push
dec
test
faddl
arpl
mov
push
xchg
jmp
jg
add
push
outsb
jle
addl
repnz
ljmp
and
test
inc
cs
mov
inc
pop
call
mov
add
mov
lock
outsb
jge
push
adc
push
lret
scas
loopne
outsb
dec
dec
jge
ds
lds
mov
dec
xor
mov
jbe
hlt
fsts
push
pop
sti
adc
in
cmp
mov
popf
or
dec
mov
sbb
lea
testb
inc
ja
negb
pop
cmpl
roll
in
and
lock
ss
add
mov
jmp
inc
in
add
sub
out
pop
mov
mov
mov
dec
xor
mov
cmc
xor
jne
push
push
mov
sbb
jo
push
jl
jp
xor
pop
sbb
pop
fimull
gs
bound
push
imul
push
pop
mul
popf
stos
mov
xor
adc
loop
push
or
or
mov
and
insl
dec
aam
loope
push
and
data16
stc
cltd
add
out
int
sbb
jne
cs
xchg
adc
mov
aad
cltd
xor
loop
adcl
adc
dec
lea
mov
mov
mov
nop
iret
add
mov
sbb
outsb
mov
stos
mov
scas
dec
add
sub
loopne
and
cmp
jnp
inc
cmp
mov
jp
mov
enter
xchg
sub
lret
test
adc
push
jmp
scas
and
ret
fisttpll
push
inc
push
imul
mov
mov
mov
imul
nop
xchg
test
or
pop
pop
shll
fcmovnbe
sbb
add
pop
mov
subl
movsb
and
xor
es
aad
popl
jl
pop
or
push
in
movb
mov
xchg
fwait
cmp
dec
adc
or
cmp
call
sbb
dec
sub
cmc
out
add
push
in
xchg
jns
push
ficompl
mov
imull
and
imul
mov
shll
sbb
push
test
and
add
xor
mov
out
mov
sbb
ja
adc
pop
ss
pop
popa
push
pop
mov
iret
sbbb
pop
jo
scas
mov
into
pop
dec
stos
int
add
shlb
dec
dec
ljmp
push
in
add
adc
mov
loopne
push
and
xlat
xchg
xchg
pushf
and
xchg
pop
sbb
lcall
sub
pop
iret
ret
push
out
inc
add
dec
push
in
rorl
scas
mov
mov
push
andl
mov
outsb
in
outsl
js
data16
test
mov
pop
jne
fcomps
push
cmp
iret
cs
fucomp
insb
dec
jmp
cmpxchg
mov
ss
sahf
ljmp
sbb
xchg
arpl
sarl
rorl
push
jb
es
cli
mov
lock
andl
push
pop
cltd
sub
lock
mov
mov
xchg
sub
and
pop
lea
fimuls
xchg
sti
int
test
sbb
or
inc
icebp
cli
mov
lds
jno
out
cmpb
fwait
xor
lret
loope
fadds
add
dec
mov
jecxz
cmp
cmpsb
jb
hlt
lods
hlt
inc
inc
push
inc
xor
out
cmpsb
movsl
push
and
rol
cmp
mov
inc
mov
mov
bound
mov
and
ret
add
xchg
jbe
jmp
sub
sub
pop
pop
mov
sub
aad
sbb
stc
xchg
leave
js
sub
mov
ja
xor
pop
pushf
aaa
in
shll
and
xorl
fnstsw
in
add
fldenv
xor
dec
ljmp
idivb
push
xor
or
dec
out
xchg
pusha
add
push
pop
push
mov
cli
stos
imul
or
pxor
mov
jo
push
roll
or
mov
aas
aas
mov
xchg
push
bound
in
insl
push
mov
mov
xlat
add
adc
inc
cmp
rcll
cmc
mov
mov
imul
cmp
sbb
and
lods
xchg
lods
test
repz
xor
rolb
cmp
inc
xor
jecxz
icebp
outsl
out
fistpll
cmpsl
rolb
mov
outsb
cmp
popa
notb
adc
pop
cmp
add
push
mov
xchg
jmp
movsb
bswap
ds
imul
shrb
mov
push
cmp
sbb
jbe
jge
lcall
scas
adc
add
arpl
std
pusha
aam
push
scas
adc
inc
xor
movsl
xchg
out
addr16
push
sbb
addl
mov
xchg
xchg
and
sbb
xor
inc
jns
mov
pop
mov
push
sub
xor
dec
xchg
sub
add
lcall
subl
sub
sbb
inc
fdivs
movsl
add
cs
mov
loope
fsubrs
push
mov
mov
dec
in
mov
jne
aad
test
dec
mov
adc
shl
dec
jbe
cmp
outsb
mov
and
enter
or
rorb
dec
xchg
adc
aas
jecxz
xor
fnstsw
int3
lret
scas
mov
jns
sbb
and
pusha
fimuls
and
mov
std
icebp
adc
xor
es
cwtl
cmp
mov
test
and
cmpb
daa
loopne
bound
ret
sub
cmpsl
cwtl
inc
popf
jp
jo
mov
jp
xchg
jnp
push
mov
xor
ficoml
das
enter
mov
jle
pop
jnp
cld
jp
mov
sub
mov
mov
push
in
es
push
pop
pop
stos
jae
fwait
and
aam
cmp
sub
or
stc
je
mov
out
sub
xor
das
xchg
dec
cmc
pop
leave
push
xchg
fsubr
sahf
out
test
add
cs
pop
int
sbb
jnp
lret
or
into
call
or
loopne
aam
outsl
ret
lcall
or
or
das
cmp
push
por
xlat
arpl
push
sti
test
cmpsb
and
jp
mov
inc
pop
ljmp
sbb
and
cmp
cld
mov
sarl
lret
push
cmpsl
test
cmpl
scas
add
dec
insl
dec
add
mov
mov
jle
popa
mov
xor
adc
adc
cwtl
jge
ret
les
push
das
outsl
out
cmp
inc
or
sub
sbb
lds
ret
imul
hlt
daa
or
mov
sbb
ljmp
mov
daa
loop
in
mov
sbb
xor
jns
push
fimuls
sbb
cld
pop
cwtl
adc
add
shl
and
sahf
jne
stos
jle
and
or
loopne
jmp
jg
push
fidivs
dec
pop
adc
jns
cli
ret
insb
jns
scas
mov
jb
mov
inc
inc
insb
xchg
mov
xlat
push
adc
bound
leave
lds
sbb
outsb
mov
pushf
sub
rorb
mov
adc
loope
push
jnp
sub
pop
xor
mov
pop
into
mov
loope
sub
cmc
enter
es
jmp
sbb
lds
jge
add
dec
sub
sub
jns
sbb
jnp
test
mov
in
xchg
jmp
out
xchg
jae
aam
mov
decl
push
dec
or
cmp
push
test
xor
or
jge
xlat
idivl
sbb
push
jae
jp
or
xchg
dec
push
dec
out
in
or
xor
lods
std
and
adc
sub
or
icebp
fwait
in
sbb
mov
cmp
mov
das
mov
mov
pop
sahf
cmpsl
lcall
xor
sbb
jae
pop
xchg
test
cld
add
fnstenv
or
iret
test
sti
jns
les
push
xchg
jns
mov
or
ja
repnz
out
mov
cmp
add
mov
call
inc
lea
mov
clc
aad
mov
mov
cmpsl
xor
outsl
lods
jne
push
ja
ds
into
popa
and
iret
cmp
repnz
stos
cmp
popa
loopne
outsb
and
mov
push
cmp
enter
dec
call
mov
mov
aaa
mov
jno
cli
out
dec
jae
push
fisubl
xchg
rclb
out
data16
test
aad
leave
in
in
mov
je
stos
sbb
test
dec
test
dec
sub
jg
sub
or
or
fdivrl
mov
in
cwtl
subl
pop
mov
jae
subb
out
gs
leave
and
in
jle
frstor
sub
mov
pop
adc
push
xor
in
mov
or
pop
or
adc
push
in
mov
test
repnz
mov
lahf
and
fstp
mov
sbb
cmc
cmp
sbb
or
ja
shl
inc
adc
and
fs
es
fwait
xchg
xchg
call
xchg
and
pop
sbb
mov
mov
jle
sbb
inc
lcall
pushf
jmp
cli
mov
std
dec
cwtl
cltd
shll
jl
add
les
xor
cmp
test
sub
pop
jl
dec
mov
sbb
stc
push
xchg
pop
mov
jne
push
fwait
sub
cld
dec
cs
sarb
adc
jbe
iret
pop
or
pushf
in
xor
sub
inc
jne
dec
mov
pop
dec
addr16
out
mov
in
cmc
stos
inc
lds
pop
inc
nop
jne
push
lods
push
mov
leave
mov
inc
fildll
rcrb
mov
jns
mov
inc
leave
or
jecxz
push
in
mov
add
dec
mov
aam
cld
imul
lahf
cmp
jmp
pop
pusha
jbe
imul
mov
pop
mov
lock
jge
hlt
jbe
aad
inc
xor
xchg
pop
ret
pop
and
pop
sub
push
test
sbb
cld
or
mov
sub
sahf
jle
mov
les
add
data16
stc
cli
js
sbb
mov
dec
dec
das
pop
clc
stc
out
int
ja
mov
pushf
stos
jne
aaa
aad
inc
into
arpl
cld
dec
lret
xchg
xchg
dec
or
push
and
mov
ds
cmp
cmp
cmp
sub
fwait
sub
pop
addr16
leave
push
gs
test
lods
jo
sti
je
xor
movsb
cmp
push
push
mov
inc
lods
aam
cltd
dec
repz
loopne
mov
cmp
andb
dec
xchg
call
faddp
sub
push
mov
rolb
inc
enter
out
mov
in
in
pop
int
mov
ret
lahf
cmpsb
in
lock
dec
jnp
xor
inc
movsb
popa
cli
mov
adc
daa
mov
jmp
pop
insl
loopne
lods
dec
lret
or
in
imul
xor
in
or
and
inc
pop
push
aam
shr
insl
sahf
jnp
mov
push
adc
sub
mov
jmp
loopne
loop
int3
mov
ret
es
cli
ds
dec
xchg
ret
int3
or
adc
lcall
aas
dec
cmc
and
fcoms
adc
jbe
in
mov
inc
adc
mov
pop
shlb
add
jns
test
and
sub
mov
movsb
xchg
stos
test
inc
xor
ja
inc
inc
lds
dec
inc
cli
inc
mov
xchg
push
ss
lds
std
data16
aas
lds
add
add
jle
std
sub
scas
aam
or
lahf
mov
push
lahf
subl
mov
fildl
std
sbb
mov
insl
jbe
bound
cmpsb
push
aas
mov
push
and
test
push
mov
fldenv
jle
xchg
sub
xchg
pusha
das
pusha
lea
rolb
cmp
mov
inc
loopne
sub
inc
out
dec
es
mov
pop
cmp
lock
inc
sub
push
dec
lcall
mov
sahf
push
mov
outsb
add
add
mov
fucomip
cmp
mov
call
sbb
cmp
lea
repnz
out
lahf
push
cmpsb
test
loopne
pop
into
movsl
in
and
adc
xchg
add
sbb
dec
xchg
cmp
sub
fsts
inc
scas
push
push
xor
enter
or
mov
lock
lret
testb
andl
data16
dec
push
push
lahf
dec
pop
ud2
inc
insb
jne
pop
add
pop
ljmp
cli
movsb
mov
loope
fstl
inc
repnz
inc
cmpsl
mov
dec
or
fsubrl
adc
push
jp
cmpsl
sbb
ja
cwtl
mov
fadd
testl
mov
gs
pop
jb
xchg
fldt
push
xchg
paddq
loope
add
cltd
subl
pop
jnp
xor
pop
ret
lcall
aam
jmp
aas
sbb
sbb
lds
arpl
das
cs
rcrl
es
aad
enter
out
pop
push
lahf
sahf
fiaddl
adc
push
repnz
js
adc
xor
jecxz
mov
popf
mov
scas
pop
nop
aad
push
dec
repz
scas
mov
ljmp
sbb
dec
push
fisubs
pop
adc
aas
test
adc
pop
cmc
fstps
add
dec
jb
in
push
dec
xchg
inc
cmp
call
push
push
push
das
pushf
push
mov
push
addr16
dec
pop
bswap
mov
xor
dec
push
or
pop
push
mov
subb
xor
nop
in
add
xchg
mov
idivl
and
jp
jb
scas
in
adc
aad
dec
out
sub
ds
lret
popf
jnp
pop
out
jno
xchg
cld
jmp
xchg
popf
dec
mov
xor
pop
cs
cltd
ss
sbbl
xchg
aam
cmp
imul
mov
xchg
xchg
pusha
iret
test
roll
or
sbb
andb
pop
xor
insl
jle
dec
xor
ret
mov
aam
sub
inc
das
pop
je
xchg
xchg
cli
push
jae
sub
adc
cmp
clc
push
inc
std
and
xchg
cmpsb
ret
repnz
dec
jmp
pop
dec
or
xchg
hlt
pop
jge
fcompl
adc
push
out
or
cmpsl
aam
mov
and
dec
in
mov
jp
aam
or
push
movsl
adc
jnp
loopne
imul
cmpsl
jbe
aaa
aas
sub
dec
jbe
ret
ds
call
pushf
int3
mov
loop
mov
fdiv
and
nop
in
xchg
mov
mov
mov
mov
fisubrl
mov
gs
int
test
xor
push
fimull
cbtw
pusha
arpl
adc
dec
xor
nop
xor
mov
enter
xchg
scas
mov
std
push
pop
aam
mov
jmp
scas
das
adc
or
les
xchg
roll
adc
mov
sbbb
aaa
and
scas
jmp
sbb
cmp
inc
jmp
or
jmp
dec
mov
inc
ja
dec
xor
push
mov
dec
mov
stos
imulb
pop
cmc
or
push
mov
test
mov
adc
fdivrs
jnp
repz
dec
and
adc
jmp
hlt
adc
inc
ret
sub
mov
dec
mov
xor
sbb
cmp
add
inc
rol
mov
xor
lret
inc
sahf
and
gs
sub
shrb
test
pop
and
std
fisttpl
idiv
sub
sbbb
int
ss
jg
imul
dec
cmp
std
inc
mov
stos
mov
enter
call
pusha
jge
xchg
mov
xchg
lock
loop
sub
sbb
adc
cmpsl
add
sti
movsl
sbb
mov
xchg
add
icebp
jle
or
sub
sbb
stc
bound
stos
inc
ffreep
pop
sub
pop
test
jle
test
out
orl
jl
jmp
mov
inc
aaa
loope
mov
cld
lret
xor
lods
or
fisubs
enter
cwtl
out
push
push
std
pop
cmp
fdiv
dec
push
movsl
ds
clc
pop
dec
lret
jecxz
cwtl
jnp
inc
dec
iret
mov
mov
scas
mov
js
movsb
aam
push
mov
popf
sti
inc
dec
in
je
nop
or
add
gs
push
and
das
test
mov
push
cmp
xor
fxtract
cltd
stos
add
shlb
and
mov
mov
mov
out
shll
or
cmp
or
pop
jp
pushf
xchg
jns
cld
jge
imul
outsl
outsl
sbb
lret
stos
xlat
mov
mov
in
pop
pop
ja
sahf
pop
adc
fisttpll
mov
dec
loope
jo
pop
push
dec
inc
aaa
popa
fwait
sbb
clc
pop
push
add
pop
push
popf
bound
ds
sbb
and
aad
jns
mov
outsl
outsb
pusha
bound
mov
pop
jg
sub
in
cmc
mov
cmp
push
add
adc
pop
push
push
push
sahf
imul
jle
nop
jl
mov
adc
addl
lods
xor
lret
scas
cmp
push
rcr
cmp
fldl
push
xchg
add
shl
lahf
mov
push
mov
xchg
adc
clc
and
pop
or
adcb
lods
xor
loope
dec
cli
jp
in
mov
pop
and
shrb
add
sub
stos
add
pop
push
and
fstpl
sbb
les
popa
inc
cmpsl
xor
ficompl
les
sbb
adc
jmp
sbb
mov
mov
pusha
cmpsb
xchg
stos
out
mov
int3
lahf
pop
icebp
lods
or
push
mov
mov
pop
popf
inc
and
and
outsl
stos
sbb
lahf
lcall
inc
xchg
cmp
push
cmp
shlb
sub
stc
xlat
div
push
rcrb
stc
inc
jge
mov
cmp
xlat
loope
insb
mov
je
test
push
aad
xlat
dec
lahf
cltd
and
test
or
leave
das
jmp
jl
xchg
or
lea
pop
aaa
das
lea
imul
push
ror
add
mov
and
mov
out
mov
aaa
aaa
xor
sbb
xchg
and
mov
push
cmp
jmp
scas
push
cmp
pop
xchg
popa
lret
push
mov
sub
shll
push
hlt
xor
mov
ucomiss
fwait
dec
mov
insl
jnp
cmp
stos
scas
rolb
jbe
jmp
aas
in
xchg
scas
movsl
aam
aad
lds
or
sarl
out
test
ss
daa
mov
ja
inc
jb
stos
push
jno
arpl
xor
shlb
outsb
mov
jae
pushf
mov
decb
bound
add
fnsave
push
shlb
out
call
jl
clc
sti
xchg
fstl
sub
push
repz
and
sbb
mov
inc
jne
cmc
mov
lea
mov
scas
pop
mov
inc
lret
mov
sbb
stc
popf
jno
cwtl
xchg
adc
rorl
and
ds
pop
addb
idiv
fst
popa
pop
jl
ret
in
scas
pop
sub
fmul
incb
push
push
push
out
outsb
jns
aad
cwtl
incb
dec
dec
test
cmc
in
in
sahf
cmp
fdiv
xor
insb
arpl
out
xchg
je
cld
scas
rcr
and
xchg
xor
pop
fildl
add
and
mov
test
mov
jo
mul
jle
negl
cs
ja
jg
dec
jne
lcall
insb
dec
nop
push
adc
sbb
fsubrp
mov
in
lock
xor
js
loope
push
cmp
daa
pop
lea
nop
cmp
inc
aas
sbb
pop
xor
pop
iret
int
cmp
pushf
dec
cmp
pop
aas
in
lret
lods
arpl
inc
cmp
add
add
or
iret
push
faddp
push
add
inc
jge
ficompl
inc
sahf
mov
jp
xor
pop
lods
in
cmpsl
data16
sbb
xorl
xor
lea
jg
pop
sbb
sub
inc
jp
movsb
mov
jns
and
test
ja
push
mov
inc
js
rorl
rol
stos
movsl
cltd
xchg
cmp
ljmp
pop
sbb
ss
clc
mov
in
movsl
mov
xor
cmp
push
adc
hlt
xchg
scas
adc
lret
lods
or
push
mov
jae
rcr
and
and
sub
fildl
add
shl
xlat
test
sub
call
ret
add
outsb
inc
push
or
sbb
arpl
popa
sbb
and
mov
in
push
mov
jbe
xchg
xchg
xor
xor
fmuls
fs
cmpsl
cmc
pop
lods
mov
adc
push
aaa
jg
inc
std
dec
xor
lds
mov
movl
in
lret
ret
push
jae
pop
ds
and
mov
xor
test
jecxz
cmp
addr16
xchg
push
pop
add
mov
loop
dec
out
cwtl
scas
cmp
int3
push
adc
adc
mov
adcl
lods
leave
mov
cli
jle
or
lock
bswap
lock
adc
inc
xor
mov
lret
jb
push
pop
lock
mov
dec
outsl
loopne
ja
push
sbb
out
ret
cli
mov
or
scas
mov
pop
inc
pushf
pop
pop
scas
mov
lcall
lret
pop
xor
scas
inc
jbe
loope
dec
ss
stos
sbb
sub
lea
dec
mov
mov
push
mov
and
daa
mov
and
mov
add
rolb
mov
out
divl
xor
lock
dec
adc
add
inc
jge
cli
mov
mov
jne
adc
bswap
je
cld
lea
pop
mov
cmpsl
xor
mov
mov
dec
adc
inc
xchg
pop
ds
out
jbe
pop
jmp
xchg
pop
dec
add
pop
pop
jbe
loopne
adc
sbb
movsb
bnd
push
mov
repnz
inc
fcmovbe
hlt
data16
mov
mov
adc
push
fs
mov
mull
in
jg
mov
mov
add
rorb
sbb
mov
push
insl
jbe
cmp
add
movsl
mov
mov
cmp
jae
pop
push
cwtl
xchg
lret
mov
xchg
out
lds
popf
mov
sbb
mov
or
add
xchg
mov
push
int
or
stc
or
stc
or
cmpsb
mov
sbb
aad
in
pop
add
xchg
pop
loope
or
iret
les
outsl
or
add
inc
inc
jbe
je
cmpl
push
push
cmp
addr16
sbb
negl
pop
mov
dec
popf
fildll
and
scas
imul
rcll
iret
call
adc
lods
int
pop
pop
fsubrl
mov
cmp
and
jae
fstpl
loopne,pn
sub
push
mov
adc
add
cmp
leave
sbb
outsb
pusha
pop
mov
xchg
aam
mov
mov
daa
or
hlt
mov
adc
cmp
push
outsl
pop
scas
fldenv
push
jle
pop
sub
push
xchg
popa
cltd
mov
and
inc
lret
pusha
jns
xchg
in
rcrl
mov
das
lahf
in
adc
movsb
mov
jno
mov
dec
dec
push
fstps
stc
int3
bound
dec
dec
cld
push
fcomi
stc
ja
add
scas
in
jne
outsl
leave
jbe
pop
jno
movsb
fiadds
test
fisubl
inc
sub
push
xor
pop
lods
jb
ljmp
jl
and
mull
adc
mov
cmc
and
xlat
fisttpll
sbb
imul
push
sbb
sub
shufps
cs
es
loop
sbb
inc
inc
outsb
sahf
mov
outsl
dec
test
fldl
outsl
enter
cmp
lods
outsb
jp
call
dec
jge
inc
mov
pop
pop
inc
add
test
aas
in
cmpsb
fsubs
mov
sub
arpl
mov
jg
cmpsb
inc
movsb
mov
pop
inc
jp
movsl
pop
into
sbb
jne
leave
adc
inc
call
fwait
ret
push
addr16
daa
aam
jg
or
xor
lds
mov
mov
out
jg
push
push
lods
in
icebp
mov
aas
push
mov
mov
sbb
or
push
fldt
dec
sahf
fadd
sub
jmp
aas
mov
and
adc
pop
data16
xchg
xor
and
in
out
shll
mov
fidivrs
and
mov
xlat
jmp
dec
sahf
data16
lahf
stos
jns
mov
ljmp
ret
mov
popa
insb
sbbb
mov
popa
test
popf
inc
inc
call
add
pusha
mov
lods
test
pop
ror
and
sub
stc
aad
icebp
fsubrp
out
iret
lds
pop
hlt
fldcw
cltd
insl
mov
mov
idiv
mov
pop
scas
sahf
sub
fdiv
push
sub
icebp
scas
cmpb
push
movsl
adc
adc
mov
iret
sub
int3
gs
mov
stos
in
data16
jmp
ret
or
and
loopne
stc
ja
inc
pop
in
sbb
xor
lret
jle
mov
mov
sbb
sbb
mov
pusha
jecxz
testl
das
xchg
pop
movsb
xchg
mov
out
cmpsl
mov
push
movsl
out
dec
negb
jmp
insb
push
outsb
and
and
pusha
bound
xor
mov
mov
enter
push
xor
icebp
insb
dec
gs
clc
add
fucom
add
fcoml
shl
xor
stos
push
je
enter
pop
leave
paddq
psrld
xor
movsb
push
out
mov
sar
add
xchg
cmp
pop
xchg
sbb
mov
ljmp
insl
inc
mov
out
sbb
repnz
cltd
lret
je
mov
mov
popa
jae
xchg
fs
ret
pop
push
fmull
mov
cmpsb
mov
inc
or
aad
jns
mov
icebp
int
mov
aas
mov
add
xlat
dec
sbb
leave
mov
inc
ret
stc
sbb
test
popf
mov
wrmsr
pop
or
fsubrl
push
test
add
pop
or
and
cmp
jp
loopne
gs
and
inc
pop
mov
mov
lock
stc
hlt
pop
mov
or
push
mov
daa
into
sarb
fiadds
rcrb
xchg
dec
pusha
in
mov
cltd
pop
pop
lahf
adc
int3
mov
xor
sahf
ficompl
sbb
outsl
call
pop
inc
lods
xor
inc
cmpb
lock
shl
dec
repnz
in
ljmp
popa
push
inc
dec
lea
mov
jb
pop
jge
lahf
pop
xchg
in
and
bound
idivl
and
fidivs
mov
ret
inc
insb
rcl
fwait
mov
jp
pop
sub
fsin
sub
icebp
sub
xchg
pop
and
cs
jb
lea
sti
lds
push
outsl
add
and
insb
jle
aam
fs
xchg
fwait
ds
mov
pushl
nop
scas
clc
scas
scas
fs
pop
rorb
je
xor
pop
inc
imul
icebp
aas
fcoml
popf
xor
or
lcall
xor
cltd
sbb
stos
mov
jbe
mov
jb
subl
sbbl
and
imul
int
ficoms
sbb
shlb
adc
rorl
addb
das
push
addr16
imull
xor
mov
dec
mov
sub
inc
int
cmp
fildl
jmp
push
pop
pop
repnz
ret
jb
xchg
daa
dec
repnz
test
jae
iret
or
push
data16
aam
fsubl
push
cwtl
push
jne
xchg
or
jno
pop
adc
lcall
adc
in
pop
mov
pop
xchg
outsb
or
je
jecxz
mov
mov
and
push
mov
push
lcall
dec
xor
sbb
filds
inc
jb
pop
repnz
popa
mov
bound
rcr
cmp
jnp
icebp
ret
scas
push
std
pop
add
ret
data16
mov
pop
lock
pop
rol
imul
test
das
aas
fisubs
gs
out
inc
mov
insl
enter
sub
sbb
addr16
pop
xor
fisttpll
sub
mov
mov
mull
push
rorl
dec
add
pop
adc
jae
mov
inc
icebp
sbb
push
add
mov
push
mov
js
andl
jbe
lret
sarb
cmp
stos
aam
pop
andb
fsub
mov
repnz
add
cmp
or
ret
imulb
push
sub
test
jns
shr
test
lds
stos
push
cmp
xchg
out
cmpsl
pop
pop
loopne
daa
sbb
mov
movsb
test
cmp
push
sub
in
outsb
mulb
jnp
sahf
add
adc
sub
sti
dec
jne
jecxz
insl
in
and
rol
xor
ret
inc
out
je
adc
clc
mov
jnp
in
or
jns
jecxz
cli
insl
mov
mov
ret
insl
lods
inc
shrb
push
ljmp
cld
dec
out
orl
hlt
inc
test
pusha
into
divb
aam
in
inc
pop
lds
sbb
add
rcll
stos
int
xchg
sbb
iret
pop
push
inc
and
lods
test
fcmovb
incb
dec
pushf
sbb
bound
aam
inc
jno
out
mov
out
mov
push
push
lods
movsl
data16
rol
or
leave
push
arpl
push
add
pushf
xchg
icebp
xchg
cmp
mov
fcmovbe
es
add
add
mov
ds
addr16
push
gs
dec
out
das
push
rcll
cmp
dec
mov
mov
mov
into
sub
aad
jmp
dec
fdivr
push
pusha
enter
jle
dec
xchg
and
mov
inc
cmp
hlt
jae
cmpb
or
loop
cmpsb
jne
mov
add
mov
and
mov
mov
ds
and
movsb
or
test
jno
jne
sub
xor
or
clc
and
std
jle
mov
inc
mov
aaa
pop
bound
lds
insl
or
jecxz
out
scas
inc
jmp
xchg
cld
dec
cmp
pop
mov
dec
dec
and
xchg
mov
cmpsl
cmp
mov
mov
cmpl
xor
jge
aaa
inc
fs
jno
outsl
and
mov
adc
xchg
ds
add
add
imul
nop
sbb
imul
test
movsb
rcrb
aad
imul
fwait
jns
scas
jmp
lea
mov
subl
pop
mov
adc
fcoml
pop
xchg
test
xchg
inc
push
int3
pop
lock
ret
int3
adc
inc
cli
and
shlb
jo
sti
ss
jge
ja
cmpsl
test
cld
std
sti
push
mov
rolb
insl
cmc
notb
mov
or
fisubrl
fnstsw
dec
fsubrl
jle
mov
aaa
or
arpl
push
ret
xchg
into
rclb
pop
cmp
mov
sub
mov
inc
stos
scas
mov
mov
jmp
aas
not
jg
and
aaa
ret
outsl
fcoml
shlb
mov
rorb
xor
ds
cmp
jns
xlat
shll
lahf
jmp
lea
test
push
outsl
mov
je
js
cmp
dec
inc
lods
mov
mov
movsb
mov
jae
jmp
adc
dec
mov
xchg
arpl
andb
dec
mov
das
aaa
pusha
iret
xor
mov
mov
loopne
dec
ret
sub
mov
mov
cmp
sbb
pushf
xchg
push
and
push
fs
inc
add
inc
jl
dec
mov
lock
fldenv
pop
call
adc
enter
pop
xorb
xor
cwtl
mov
ret
pop
pop
or
xor
mov
stos
iret
aam
jp
arpl
jp
rorl
jbe
scas
adc
xor
or
filds
fldl
mov
movsl
push
cmp
jbe
push
neg
mov
nop
lock
movsl
aaa
xchg
adc
or
pusha
clc
call
leave
xor
test
pop
adc
jno
test
das
inc
lods
mov
shl
fs
cmp
push
push
push
scas
push
dec
push
sbb
inc
idivl
xchg
pop
jmp
scas
ds
pop
jp
inc
mov
jmp
loop
pop
and
mov
xchg
add
lods
out
fsts
xchg
jb
orb
xchg
adc
xchg
es
xchg
add
sub
mov
xor
wbinvd
mov
inc
jbe
mov
inc
inc
flds
in
cmp
pop
inc
mov
ret
cmp
mov
xlat
fdiv
insl
sub
pop
xchg
insl
and
inc
int3
mov
inc
sarl
mov
adc
sbb
and
cs
insb
mov
cld
dec
stc
jge
cmp
out
leave
dec
push
stos
sub
sbb
pop
cwtl
sarb
jae
and
mov
mov
into
xchg
pop
popl
jno
orl
lahf
loopne
lock
jecxz
and
test
dec
or
inc
mov
cmp
sbb
xchg
daa
or
pop
outsl
mov
dec
adc
adc
xchg
xor
test
sarb
mov
inc
lcall
hlt
adc
lahf
push
nop
aaa
pop
test
pusha
jmp
xor
div
sahf
mov
cmp
pop
mov
jo
push
jae
mov
pop
mov
and
cmpl
in
cwtl
pop
int3
sbb
test
fcmovne
lods
leave
fwait
push
mov
clc
lret
xchg
push
jns
insb
inc
pop
dec
pop
sbb
mov
cwtl
mov
pop
popa
pop
mov
xchg
and
push
jle
stos
add
scas
jmp
xor
pop
stc
jge
bound
or
and
cmp
sti
or
inc
fildll
inc
clc
inc
lods
fildl
test
insl
and
pop
pop
or
lock
pop
dec
mov
jl
xchg
pusha
les
add
cli
ret
rcll
dec
hlt
sub
mov
push
xchg
jmp
stos
sbb
imul
jle
mov
jns
inc
mov
mov
cmpsl
mov
popf
sti
adc
lcall
mov
cli
mov
stos
shrl
inc
mov
add
jno
mov
dec
push
loopne
test
mov
pop
lret
in
shrb
push
int3
into
jp
insb
arpl
sub
hlt
fidivl
test
push
sbb
sarl
popa
in
daa
mov
gs
xor
adc
push
inc
shrb
outsb
fwait
push
enter
scas
xor
jl
inc
mov
xchg
adc
inc
mov
adc
adc
incb
mov
lahf
sub
or
in
inc
xchg
or
jp
cmc
mov
jno
and
mov
jl
lds
fdivl
add
int3
mov
lock
stc
mov
sbb
imul
inc
enter
cmp
js
jo
testl
mov
inc
sub
lcall
jle
scas
ljmp
test
xchg
and
fs
add
lods
dec
icebp
in
adc
xor
or
aad
xor
clc
mov
and
or
sbb
jne
out
stos
out
shl
dec
xchg
cs
xchg
test
repz
cli
sbb
orb
add
fadd
xor
lods
pop
push
xor
xchg
ds
repnz
or
pop
add
ss
adc
inc
xor
adc
popf
int
ret
ret
aas
ds
sub
loope
aad
pop
daa
xchg
cmc
out
faddl
inc
roll
push
dec
inc
mov
add
sti
nop
mov
vcvtpd2psy
cmp
popf
cltd
jne
dec
popl
loopne
push
in
into
sub
xchg
test
cmp
and
push
stc
jae
jmp
ret
test
out
lods
sahf
push
jb
out
enter
dec
stc
outsb
dec
aaa
or
insb
out
dec
dec
jbe
mov
hlt
xchg
scas
mov
out
cmp
movsb
jmp
sahf
rcrb
xlat
mov
dec
decl
pop
jmp
jecxz
jge
lret
aad
in
sub
cltd
xorb
insb
aad
jbe
mov
cmc
cli
cmp
cld
enter
xchg
sub
xchg
mov
push
scas
lea
addb
ret
pop
sbb
repz
push
push
inc
add
mov
ds
fistps
aaa
mov
imul
cmp
scas
fnstcw
mov
push
in
inc
jecxz,pt
stos
push
mov
pop
clc
xchg
cld
dec
and
lds
xor
repz
les
lods
inc
lret
dec
jmp
push
adc
mov
add
rep
cmp
ret
sbb
scas
hlt
push
jne
mov
inc
cmpsb
cmc
and
push
loope
fmul
sbb
orl
cmp
aas
mov
stos
inc
imul
jmp
scas
nop
sub
mov
sahf
xor
pop
fidivrl
lds
sbb
mov
arpl
dec
js
jl
daa
loope
pop
cmpsl
js
aas
jecxz
aaa
mov
jno
cltd
mov
addr16
test
das
jns
xchg
sti
or
iret
mov
or
mov
add
out
mov
mov
addr16
mov
seta
and
shl
cli
xor
shrb
arpl
int
fwait
cmp
test
shrd
or
mov
mov
stos
and
arpl
imul
push
adc
testb
dec
insl
sub
daa
scas
or
push
xor
int3
pop
xchg
dec
mov
pop
sub
cmpsb
mov
dec
cmp
mov
outsl
test
stc
rorb
jl
movsb
xchg
data16
mov
shlb
gs
rolb
mov
xor
ja
add
test
out
sub
andb
das
lea
xor
ret
xchg
pop
fnstenv
and
sbb
pmuludq
js
adc
and
addl
mov
cmp
mov
fsubrs
aaa
nop
xchg
sub
in
test
std
ljmp
pusha
sbb
cmpsb
test
and
insb
jno
in
xchg
lods
inc
mov
xor
imul
stos
in
or
sub
aam
push
enter
jle
iret
mov
add
movsl
xchg
mov
aas
jle
xor
inc
cmp
or
and
sbb
stc
shrb
popa
push
subb
es
pop
inc
in
mov
push
sub
mov
cmp
pop
add
cmp
repnz
pop
imul
add
inc
fisubrs
cs
inc
and
pop
or
mov
lcall
sub
pop
icebp
out
mov
imul
pop
push
inc
push
cwtl
mov
dec
add
sti
push
std
sahf
inc
jo
mov
jle
xchg
scas
push
sahf
dec
je
sub
out
add
lcall
clc
in
into
sbb
pop
add
mov
popa
add
jmp
lret
aam
pop
pop
lods
sarb
loop
dec
mov
mov
push
popf
inc
cmp
mull
pop
add
pop
scas
mov
inc
adc
push
push
push
jne
in
push
sbb
ficomps
jge
inc
and
pop
xor
sub
inc
push
mov
call
sbb
stc
push
xor
sbb
aam
aaa
scas
inc
pusha
insl
gs
mov
fwait
adc
rorl
pop
addr16
stos
mov
cmpsl
aam
cmc
mov
lods
inc
gs
sub
in
inc
xchg
sub
je
adcl
roll
add
aas
jmp
clc
mov
mov
roll
notb
jnp
mulb
iret
xchg
add
cld
fwait
mov
cltd
int3
out
sub
xor
sti
pop
dec
rcl
inc
cmp
or
push
adc
push
out
push
cwtl
fmuls
mov
int
loope
mov
pop
arpl
fisubl
popl
and
jp
in
push
pop
xchg
popf
mov
in
sub
sub
fs
repz
jae
test
in
jo
add
and
push
ficoms
lds
daa
and
dec
movsl
cmp
shll
ret
push
popf
cltd
movb
pop
sbb
mov
lds
add
mov
ffree
in
mov
test
cwtl
xor
imul
shll
js
jbe
movsl
ss
idivb
mov
je
in
leave
inc
ljmp
xchg
leave
mov
dec
xchg
cmp
sbb
shrb
sbb
nop
adc
xchg
clc
call
and
int3
ret
loopne
lods
sub
dec
lret
fnstsw
sub
and
aad
je
jl
andb
nop
arpl
lea
sub
mov
shll
addl
and
aas
test
cmp
lret
xorb
les
mov
lods
lock
stos
xor
orb
jl
xor
stos
sbbb
xchg
ss
out
push
mov
pop
mov
sub
mov
push
hlt
in
sub
jne
out
and
cmpsb
call
mov
add
test
sbb
or
sub
or
stos
and
test
in
adc
out
xor
xchg
test
and
in
push
shlb
xor
dec
jle
add
out
lds
loope
jae
aaa
push
sbb
or
lods
mov
mov
and
xchg
xchg
xchg
mov
mov
adc
loope
mul
clc
add
add
add
push
gs
aad
les
pop
enter
sbb
jmp
jnp
sub
xchg
ret
test
mov
negb
lcall
xor
jecxz
mov
jno
jge
int
cmpsl
ret
adc
xchg
dec
cmp
inc
mov
aas
push
rcl
movsb
lods
push
add
fs
dec
iret
es
mov
push
aaa
mov
pop
in
sub
mov
repnz
jb
cltd
cmp
pushf
mov
testl
xor
fistpl
lods
insb
jp
mov
and
stos
adcb
inc
orb
dec
ret
sub
sub
jmp
aam
xchg
mov
mov
push
sub
subb
jae
mov
sub
dec
dec
xor
pop
mov
repz
adc
push
insb
lahf
and
sahf
mov
fnsave
stos
add
lods
inc
add
out
jbe
popa
cwtl
adc
xor
data16
outsl
cld
fldl
mov
lods
or
push
sbb
stos
sbb
mov
lahf
movsb
mov
xchg
ja
fisubrl
sub
xchg
push
enter
dec
lret
lods
out
cmpsl
popf
xor
fldcw
mov
sbb
sbb
or
test
mov
push
and
sub
and
inc
ret
sub
adc
scas
jp
lret
das
mov
xor
push
stc
and
cmp
fsubs
dec
sub
sbb
test
cmp
and
add
add
mov
ret
fists
aaa
adc
lret
scas
and
cs
mov
xchg
or
mov
pop
mov
lcall
dec
push
imul
xchg
das
cmp
or
mov
fisttps
mov
ds
cmp
dec
inc
cli
cmp
dec
in
aad
adc
pusha
sarb
les
sti
nop
push
decb
js
orl
or
push
addl
adc
mov
dec
xchg
stos
dec
push
loope
outsb
push
add
popa
or
adc
sub
and
cmp
cli
rorl
lret
mov
aam
roll
mov
push
dec
insl
lods
inc
cwtl
and
data16
mov
xadd
mov
call
adc
push
jmp
int3
add
push
xor
xor
pop
rcrl
movsb
lret
sub
mov
rcll
jge
and
stc
sbb
ror
movsl
out
aas
xor
and
es
cli
or
mov
sahf
popa
in
xchg
cmpsl
xchg
dec
sbb
pop
xor
mov
xlat
insb
adc
push
mov
jo
loope
fidivl
fwait
jnp
sub
scas
adc
mov
add
sbb
or
mov
enter
lock
sbb
popf
dec
lods
bound
loope
xchg
jg
jns
push
and
in
repz
imul
inc
jl
push
imull
test
gs
lret
mov
out
aad
test
sub
in
cli
in
mov
fisubrs
enter
js
mov
shl
out
pop
sahf
xchg
mov
lea
sbb
lds
mov
adc
and
mov
sbb
shlb
sahf
sar
add
test
push
je
shlb
or
cmp
jne
mov
orb
jno
iret
pop
or
int
out
push
sbb
xor
add
fmul
inc
jne
pop
repnz
push
mov
add
jae
daa
test
pop
les
push
jno
sti
test
mov
or
ficoms
inc
add
fcomi
dec
add
out
ror
sbb
jmp
je
fidivl
cli
imul
mov
push
mov
fldl
push
inc
cli
lds
das
cli
into
incl
lods
inc
js
cs
iret
aaa
shlb
rorl
out
mov
hlt
in
push
xchg
jno
mov
xchg
hlt
jecxz
mov
sbb
mov
mov
push
icebp
inc
outsl
dec
stos
and
in
jmp
jbe
inc
add
addr16
jecxz
mov
icebp
lcall
mov
pushf
cld
bound
add
and
sub
or
fdivrp
outsl
icebp
repnz
into
loop
inc
or
fnsave
add
sbb
mov
pop
xor
sahf
xchg
add
push
xchg
fwait
das
push
dec
pop
push
les
pop
test
out
xor
adc
adc
in
sbb
insl
lock
xor
lods
pop
xlat
or
leave
push
mov
es
cmpxchg
and
sbb
cmpl
rclb
and
push
stos
scas
jns
sbb
mov
call
sahf
test
mov
cwtl
sub
pop
push
mov
imul
ljmp
mov
xchg
clc
addr16
je
rolb
mov
cltd
aad
mov
fs
lds
out
adc
fstl
xor
out
lock
xlat
cmp
bound
jl
stos
sbb
lahf
rcl
iret
repnz
in
lahf
xor
pushf
xor
jbe
sbb
adc
rol
xchg
loope
data16
leave
stos
adc
fisttpll
cmc
pop
adc
adc
lods
sbb
xor
pcmpeqw
insl
jecxz
xor
pop
dec
shlb
mov
repnz
sub
in
add
or
and
push
shll
into
mov
stc
adc
and
fwait
mov
mov
xor
and
xchg
test
hlt
lahf
sub
bound
push
dec
out
fwait
pusha
sub
movsb
xor
pop
mov
and
add
ss
pop
cld
addb
enterw
negl
xor
lea
js
test
pop
xchg
cmpsl
xchg
jae
push
fstpt
out
jmp
mov
sub
push
sub
js
lods
ret
adc
fiadds
inc
loope
mov
stc
mov
xchg
adc
pop
mov
jb
rcr
xor
mov
adc
push
adc
xchg
cwtl
push
ret
out
mov
and
mov
pop
push
outsb
enter
inc
gs
xchg
lret
in
fs
mov
daa
xchg
jl
test
gs
or
jbe
sbb
xchg
mov
push
loopne
and
std
ret
push
inc
movsb
push
adc
cmpsl
xchg
test
faddl
jo
lds
sbb
out
nop
aaa
pop
cwtl
in
leave
push
or
mov
mov
inc
popa
dec
subl
pushf
sub
mov
outsb
add
push
and
lea
mov
enter
cld
out
loop
es
ljmp
mov
adc
sub
xor
fwait
xor
adc
in
jo
mov
xchg
xchg
hlt
xchg
andb
rorb
push
test
rcll
aas
into
adc
mov
mov
or
es
mov
mov
push
cwtl
lock
mov
shl
cmpl
stos
stos
mov
in
adc
add
xor
insb
sbb
ror
sbb
pop
inc
xchg
addr16
stos
xchg
sub
cmp
jmp
ja
fadds
inc
push
push
push
push
movsb
push
sub
xchg
iret
sarb
mov
fstpl
mov
out
lods
push
mov
mov
out
in
popf
into
dec
imul
cmpsl
dec
push
dec
sbb
inc
jb
and
mov
xchg
cmp
jle
sub
lcall
mov
insb
imul
das
fwait
mov
inc
lahf
jo
sbb
ja
dec
xchg
push
sarl
mov
xchg
inc
shl
xchg
adc
add
imul
inc
adc
push
jno
or
mov
ficompl
mov
fistpll
ficoml
insl
xorl
lret
jno
pop
pop
bound
push
cmp
aas
orl
cwtl
xchg
lea
sbb
sbb
es
fists
dec
xor
jle
or
mov
and
jl
pop
jecxz
mov
stos
lahf
or
cmpsl
cli
dec
mov
jns
je
inc
imul
mov
mov
jecxz
or
shll
mov
xchg
cmp
mov
cmp
dec
mov
mov
push
dec
dec
mov
xchg
movsl
out
pop
jmp
inc
pop
in
and
add
loopne
adc
js
cltd
xchg
imul
sub
into
pop
bound
cli
in
movsl
ror
int
out
pop
sub
inc
sub
outsb
jbe
mov
push
xchg
jl
scas
push
and
or
xor
nop
aam
sti
fwait
movsb
mov
add
cmp
das
dec
test
add
pushf
mov
lea
mov
cltd
out
and
mov
inc
adc
mov
lea
divb
mov
add
sbb
pushf
fwait
lretw
jmp
push
into
sub
idiv
outsb
scas
das
addr16
es
mov
inc
sbb
outsl
mov
mov
adc
push
mov
ret
nop
and
outsl
add
clc
push
rcrb
pop
scas
arpl
push
xchg
push
add
es
inc
mov
sub
push
loopne
pop
lds
out
imul
dec
lcall
push
inc
cltd
enter
lahf
fists
les
cmpsb
jo
inc
ss
dec
sub
pop
cli
mov
out
jmp
in
aaa
pop
mov
sbb
pop
cmp
in
adc
jl
inc
push
mov
leave
inc
mov
mov
mov
enter
inc
fistpll
dec
pusha
aam
jl
loope
xchg
adc
pop
rcl
xor
setae
outsl
adcb
in
movb
inc
xlat
or
cmp
sub
mov
pop
dec
cwtl
bound
outsb
mov
or
cmp
mov
pop
adc
adc
fimull
mov
sub
sti
dec
dec
mov
imul
pop
insl
aas
lret
cmpsl
lock
test
mov
mov
inc
cmc
and
mov
mov
sbb
pushf
leave
into
les
dec
fadds
fsubrl
mov
sbb
cs
movsb
fs
push
pop
cmpsl
imul
outsb
arpl
mov
dec
sub
mov
push
fdivl
das
push
dec
cld
pop
mov
out
cmpsl
out
aam
mov
cmpsl
mov
or
in
lret
push
xchg
fisubrs
loop
scas
fiaddl
cmp
xor
cmpsl
pop
pop
sub
pop
sbb
inc
xchg
jbe
mov
lret
adc
aad
jle
stc
inc
ror
daa
xor
les
jo
out
leave
pushf
pushf
ret
insb
pushf
mov
sbb
js
sti
add
mov
jp
hlt
jmp
xor
ja
popa
in
and
movl
cli
and
pop
lcall
mov
cmp
dec
sbb
testl
add
push
in
cmp
cli
adc
in
cmp
jno
or
xchg
mul
xor
pop
mov
xor
inc
lods
stos
dec
jbe
aad
arpl
rol
repnz
mov
adc
adc
repnz
les
jns
push
xchg
fsqrt
xchg
mov
push
inc
mull
aad
jb
in
clc
movsl
fadds
mov
add
sub
int
lods
xlat
decl
fwait
stos
inc
push
mul
mov
and
jge
fildll
popf
dec
movsl
enter
stos
outsb
xor
in
push
sbb
xor
inc
sub
stc
add
cmp
cmp
or
repz
in
ds
jge
mov
push
add
sbbl
leave
sub
and
jl
push
cmp
fchs
insl
xorb
lods
dec
add
cmpsb
xchg
cli
push
push
push
mov
xchg
pusha
insl
mov
lret
sbb
arpl
insb
aad
xchg
test
repz
jbe
pop
into
imul
cs
ja
es
nop
movsb
pop
cmc
add
pop
shl
pop
ds
mov
loope
dec
outsb
sub
adc
popf
roll
loopne
in
push
filds
fistpll
cmp
push
jae
outsb
or
push
mov
sbbb
mov
sarl
into
mov
pop
jl
ja
dec
sbb
push
pop
pop
pop
ja
pop
cwtl
push
lahf
aas
loopne
sub
sub
xor
mov
mov
shl
push
mov
pop
sub
lds
mov
in
pop
adc
fcompl
fisttps
xor
call
mov
xchg
leave
popf
adc
lods
daa
push
decl
aaa
fsubrl
add
or
cmpsb
int3
cmp
imul
insl
and
aas
sbbl
ret
fs
dec
shrl
pop
and
add
mov
add
adcl
rcrl
jns
hlt
inc
test
in
and
mov
pop
hlt
cmp
test
shl
jp
push
loopne
daa
cmp
mov
sbb
hlt
jecxz
stos
das
or
loope
xchg
iret
fildl
pop
js
add
xchg
leave
ds
sub
and
fldpi
jge
sti
ds
gs
nop
into
iret
mov
xchg
dec
dec
xchg
lods
orl
ja
js
movsl
fistps
mov
pop
ja
test
inc
aad
loop
dec
idivl
sub
pop
pop
jmp
xchg
scas
test
inc
fistl
cltd
add
ja
test
loop
repnz
adc
insb
faddl
cmp
loopne
arpl
and
cmpl
mov
dec
jbe
shrb
sub
pusha
lret
lcall
fiaddl
xchg
shrb
bnd
mov
adc
adc
sub
mov
lret
and
push
in
into
cmp
ret
sbb
mov
nop
data16
hlt
fisttpll
pop
add
mov
or
mov
push
and
mov
xor
add
add
rol
nop
in
cmp
lahf
lcall
fdivr
test
add
adcl
sub
out
cli
lret
push
mov
ja
fstpt
mov
inc
cli
dec
push
mov
dec
ret
mov
fstpl
jcxz
or
je
pop
mov
or
test
outsl
mov
fwait
and
fstpt
inc
or
outsb
outsl
push
jns
add
pusha
lock
ljmp
sahf
fcompl
cmp
aad
sarl
addl
sar
lret
daa
jb
pop
mov
jp
loopne
add
loop
sbb
mov
rolb
and
pop
icebp
push
xor
jecxz
and
das
imul
mov
bound
movsl
cmp
dec
mov
mov
lret
dec
sahf
push
adc
sub
mov
sub
out
pop
testl
sub
in
cmp
ret
sub
aam
inc
pop
jo
fistl
mov
sub
lods
scas
or
jbe
fisttpl
or
xor
push
ret
mov
xchg
outsb
loope
imul
pop
pop
push
and
sub
lret
into
mov
popa
das
mov
xor
xor
ds
packuswb
xor
mov
push
fucomi
and
sti
dec
scas
leave
and
cmpsb
cmp
dec
push
xchg
xchg
push
loopne
cmp
inc
hlt
das
jns
jns
lock
sub
dec
xor
cmpsb
jg
outsb
jp
daa
mov
pop
mov
ss
pop
movsl
dec
xchg
xchg
xchg
xchg
mov
pop
sub
rorl
ficomps
test
xor
lods
les
jecxz
in
pop
into
lcall
fs
movsb
enter
das
int3
xlat
mov
push
dec
mov
cwtl
mov
iret
sti
sub
lock
pop
ja
cmp
lock
mov
jecxz
fstpt
or
sub
pop
movsb
movsb
test
or
loopne
loop
mov
iret
sti
iret
ret
lahf
and
adc
mov
aas
and
divb
in
jecxz
shrb
sahf
mov
out
push
mov
mov
pop
ds
stos
js
jns
jle
jg
test
testl
mov
cmp
jbe
mov
data16
call
enter
mov
hlt
push
test
nop
jmp
mov
adc
pop
xchg
pop
fisttpl
and
mov
xchg
jl
test
repnz
out
ja
cmpsl
xlat
sub
cmp
mov
xchg
push
jo
std
dec
push
add
dec
into
out
sub
repz
sarl
adc
xchg
add
mov
sbb
mov
xor
cltd
and
mov
outsb
insb
push
into
inc
inc
loope
dec
xchg
ja
pop
pop
inc
add
xor
xor
loop
xchg
jg
adc
and
fs
sbb
mov
mov
push
or
or
xor
mov
mov
int3
jl
add
scas
fstps
adc
cmc
jb
cmp
orl
cmc
pop
mov
ss
rorl
fnstenv
xchg
int
iret
push
mov
and
mov
jae
push
test
cmp
pop
mov
mov
into
imul
ljmp
popa
and
sub
addr16
dec
insl
push
cs
fbstp
sub
ret
mov
daa
repnz
jg
mov
movsb
in
sub
mov
pop
mov
out
pop
ret
nop
jmp
pop
and
and
xor
aaa
mov
xor
in
dec
push
into
push
bound
dec
sarl
mov
gs
lcall
shl
pop
loopne
cmp
pop
jo
sub
xchg
push
imul
outsb
or
lock
add
xchg
cmp
sub
push
xor
jl
pop
add
push
mov
pop
pop
pop
pop
xchg
push
xor
xlat
imul
mov
in
call
cmp
fistpl
fisubl
or
xor
call
lods
xchg
and
addr16
push
fistl
insl
jbe
add
mov
mov
dec
int
outsl
jg
int3
outsl
pop
sbb
jmp
ret
jp
stc
ss
cmpl
and
push
je
inc
ror
and
arpl
mov
and
push
cld
iret
mov
cmp
pop
aas
jns
mov
xchg
xchg
jb
cmc
daa
sarl
xor
popf
lea
and
nop
outsb
sbb
fadd
and
adc
ljmp
xchg
jle
clc
mov
or
movsb
and
je
les
sti
outsb
arpl
cli
mov
sub
cltd
fwait
out
in
sbb
popa
lds
ljmp
or
xorb
mov
inc
fcmovu
xchg
mov
ljmp
imul
sbb
setb
gs
fdivrs
xor
fildl
in
pusha
stos
out
or
mov
sbb
and
jb
or
inc
test
leave
lds
mov
ret
mov
jp
movsb
and
movsl
test
jae
stos
jns
arpl
arpl
pop
or
scas
inc
jbe
inc
xchg
test
lret
inc
fdivrs
pop
mov
mov
inc
rcl
mov
call
pop
xchg
nop
rcll
stos
ffreep
imul
imul
push
jge
xor
nop
shlb
test
add
cmp
inc
sub
mov
movsb
cwtl
cmpsb
ficomps
in
mov
mov
mov
xchg
add
pop
mov
inc
mov
or
adc
or
test
loope
aaa
sub
fldl
push
prefetch
add
les
push
jmp
fcoms
jne
or
adc
shlb
lea
cmp
fs
pop
out
pop
sbb
sti
jns
mov
scas
pop
jb
test
xchg
fwait
pushf
imul
pop
push
and
xchg
icebp
js
faddl
icebp
inc
inc
imul
jge
mov
xchg
out
dec
adc
dec
cmp
mov
outsb
jae
and
xchg
xchg
dec
scas
or
and
mov
les
jb
shrb
ret
ret
nop
ljmp
in
repnz
sbb
adc
push
push
daa
test
lock
cmc
inc
inc
add
fstpl
insb
mov
scas
dec
cmp
add
mov
sub
inc
mov
jne
icebp
or
aaa
jp
inc
mov
push
lock
mov
jmp
add
lret
cmp
rolb
adc
dec
stos
mov
outsb
imul
ja
mov
and
idivb
popf
movsb
sub
sub
pop
in
gs
xor
in
sub
fildl
jno
test
outsb
test
mov
popf
push
js
adcl
cmp
std
decb
sbb
cmp
js
add
mov
mov
mov
aam
stc
mov
jns
jnp
dec
pop
popl
sarb
xchg
rcll
dec
cwtl
fucomi
aaa
and
sbb
dec
sbb
jne
or
orl
ficoms
ret
dec
inc
cld
inc
out
pop
loopne
dec
mov
ljmp
jae
pop
lds
and
sub
pop
mov
mov
faddl
push
and
test
cmp
adc
jbe
mov
or
test
testl
clc
pop
data16
lds
mov
arpl
push
aaa
andl
dec
sbb
int
jl
gs
jl
fsub
fsts
mov
xchg
into
mov
dec
and
je
and
fsubr
das
or
mov
lock
je
cld
sarl
adc
push
es
call
mov
and
jbe
adc
pop
push
sbb
out
and
or
out
dec
jg
pop
inc
in
out
jno
roll
and
popf
pop
sbb
mov
test
clc
jmp
ljmp
push
add
arpl
loope
mov
jns
inc
or
fstl
push
aas
hlt
rorb
xchg
lds
adc
lods
lret
scas
xchg
sbb
jge
pop
cld
sbb
gs
xor
sbb
and
sbb
cmpsl
xchg
sbb
jo
scas
fucom
aad
sub
xor
ds
leave
or
xchg
inc
std
mov
mov
jge
hlt
aam
jo
inc
adc
push
mulb
cmc
incl
hlt
xor
cmp
mov
stos
push
mov
xchg
jo
retw
cmp
xor
mov
in
push
imul
mov
fldlg2
push
mov
cmc
pop
jno
and
test
iret
insl
dec
mov
inc
icebp
pop
call
push
ret
pop
adc
out
and
cmp
nop
dec
sub
sbb
addr16
popa
add
movsl
mov
dec
enter
fmulp
stos
push
bound
js
mov
repz
out
pushf
sbb
cmp
pop
xchg
pop
xchg
rcll
cltd
in
inc
jmp
inc
daa
or
or
push
into
xor
movsb
mov
xchg
xor
jg
sahf
sub
jp
push
add
sbb
xchg
and
daa
pop
or
add
pop
stos
mov
mov
sub
in
sbbb
sub
pop
fdivrs
sbb
shll
add
and
pop
popf
push
mov
jne
mov
mov
je
xchg
pushf
inc
xchg
push
daa
push
fs
push
das
xchg
test
addr16
dec
stc
mov
dec
in
xor
cld
dec
and
mov
lds
add
test
subl
push
push
inc
rorl
jmp
and
scas
push
mov
mov
in
outsb
cltd
cmp
ret
cs
and
mov
pushf
xchg
xorl
push
cmp
loope
and
xor
and
mov
jle
and
out
pop
mull
fcompl
sti
pop
test
shlb
notb
aas
push
jecxz
and
dec
adc
dec
loop
xor
pop
pop
dec
nop
cmc
push
and
pop
repz
imul
into
movsl
jne
pop
lret
out
dec
mov
imul
in
xchg
push
cmc
mov
pop
in
mov
jnp
ret
push
stos
les
mov
out
and
jecxz
jb
pop
push
push
cwtl
and
sarl
stc
mulb
aam
insb
sub
pop
std
xchg
adc
cmpsb
push
push
sbb
adc
and
push
cmp
sub
mov
pop
push
in
fdivrl
cli
or
aas
jle
pop
popf
sub
enter
xor
outsb
add
or
xor
mov
pop
int3
jno
in
dec
inc
into
test
mov
cmp
pop
push
push
xchg
dec
dec
mov
mov
adc
sbb
scas
or
subb
mov
sti
sub
cmp
bound
repnz
fsubl
fmul
out
nop
stos
fs
gs
mov
pop
bswap
mov
push
pop
cmp
imul
push
lds
jae
test
js
enter
imul
cmp
fnstenv
and
xchg
and
jns
inc
push
subb
xor
xchg
shlb
inc
stos
sbb
loop
mov
pop
daa
lea
imul
lahf
push
mov
dec
sar
push
sub
add
leave
inc
xor
push
shrb
xchg
sbb
xlat
pop
andl
sti
stos
adc
or
inc
dec
dec
out
sub
ret
inc
nop
fldt
loope
mov
stos
out
mov
mov
cmc
jge
mov
lret
push
pusha
imul
cltd
inc
dec
pushf
out
outsb
push
push
cmpsl
fisttpl
xchg
inc
test
jge
dec
xor
adc
fnstenv
fnstenv
stos
outsb
cmp
fnsave
mov
jge
mov
sub
scas
outsb
pop
add
ret
inc
mov
cli
jl
pop
push
adc
sub
sbb
fs
push
decl
dec
cmp
add
mov
imul
popa
or
lahf
mov
in
add
test
mov
das
rorb
test
imul
int3
out
adc
jl
push
pop
push
sbb
lock
shl
xchg
pop
aas
mov
inc
pop
stos
cmp
aam
inc
stos
sbb
inc
jecxz
into
lahf
push
or
addr16
adc
sti
in
rcrb
jae
test
cmp
dec
or
aad
xor
add
rol
ret
and
lods
loop
or
and
adc
pop
add
data16
sub
and
pop
sub
push
jle
in
cli
in
rorb
fwait
test
aas
pop
in
cld
in
bound
sarl
ss
addr16
push
and
mov
fwait
aas
sub
adc
mov
repnz
ss
sti
jns
cmpsl
push
dec
imull
repz
outsb
or
inc
add
inc
rclb
xchg
lds
cs
jo
cmp
add
scas
jns
xchg
in
inc
pushf
mov
sbb
add
js
rol
leave
incl
dec
mov
pushf
fsts
push
cmp
cmp
mov
arpl
xor
jae
lods
sbb
pop
dec
mov
and
mov
adc
dec
stos
push
es
inc
ss
pop
push
js
iret
xorb
jns
mov
into
ja
mov
icebp
subl
in
mov
xor
and
inc
aaa
dec
faddl
mov
fisubl
aas
push
aas
je
jp
pop
int3
cld
mov
inc
aam
dec
mov
in
mov
inc
dec
loopne
loope
xchg
repnz
out
shl
push
jp
jb
sbb
pop
jbe
outsb
lods
ffree
loopne
test
paddw
sub
loopne
shrb
ja
push
rcl
push
cmp
popf
jbe
pop
nop
ljmp
loopne
jmp
mov
xchg
shr
imul
cli
daa
imul
sbb
adc
jnp
test
std
ficoms
repz
sbb
sbb
sub
sbb
jae
mov
or
or
cmp
ret
or
outsb
jp
mov
rorl
jae
out
mov
xchg
ror
rorb
pop
adc
cmp
gs
arpl
into
dec
cmp
pop
shlb
std
cmpl
cld
sarb
and
and
xlat
sbb
ret
add
mov
fdivrl
test
mov
mov
lods
aaa
adc
rorb
or
xlat
mov
xor
sub
test
repz
insb
cmpl
push
and
rcr
xor
push
je
ss
jge
pop
test
outsb
arpl
push
pop
incl
adc
mov
out
add
sub
fbld
ret
popf
xchg
jae
fists
rcl
cmp
aam
push
adc
fisttpl
mov
sti
int
int
cld
in
inc
adc
nop
lret
xchg
push
mov
test
xchg
in
pop
jbe
movsb
sub
arpl
and
adc
dec
mov
pop
push
mov
pusha
out
sahf
mov
pushf
mov
scas
aaa
mov
enter
xor
jb
cmc
nop
push
pushf
inc
inc
test
sbbl
fdivrl
cld
mov
cmp
mov
int3
mov
xchg
push
inc
into
xchg
mov
fstl
pop
loope
in
inc
mov
dec
jae
push
rol
aas
test
inc
sbb
int
lods
add
or
stos
pop
leave
scas
xor
jp
addr16
out
pop
mov
jbe
fwait
mov
shl
xchg
dec
fisubrs
popf
push
xchg
pop
jmp
sub
mov
mov
testb
movsb
insb
jecxz
add
push
pop
jne
or
cltd
push
xchg
sbb
cmc
cmp
test
rcrl
lea
sub
cmc
and
mull
aas
fcoml
sbb
out
nop
clc
cmp
in
fwait
aas
jecxz
adc
pop
adc
lods
push
push
test
push
popa
rcrl
insl
add
and
imul
mov
mov
mov
ret
mov
fwait
std
bound
test
cmc
hlt
jb
daa
loop
loopne
xor
or
test
push
je
xor
shrl
js
outsb
cmpsl
mov
xor
and
addr16
mov
aas
mov
movsb
pop
arpl
rcrl
sub
push
add
cmpl
add
lods
sbb
inc
call
into
lcall
fildll
sahf
cmp
pop
mov
or
mov
fbld
rcr
mov
mov
std
cmpsb
adc
lods
aad
aad
rclb
popa
cmpsl
adc
cmp
ja
insl
adc
mov
and
cld
dec
dec
ret
je
int3
int
xor
or
loopne
cmpsl
adc
shlb
lods
mov
xchg
call
stos
aam
ffree
int
mov
xor
jmp
fistpll
xchg
incl
pop
adc
clc
xlat
les
dec
shrb
push
dec
dec
push
in
jg
jns
daa
std
lods
pop
push
movsl
fs
test
pop
test
fdivrl
addr16
mov
push
mov
fs
iret
dec
aad
fmul
loop
mov
or
inc
std
scas
scas
add
cmc
mov
xor
fimull
push
daa
lret
mov
mov
push
stc
mov
mov
into
jns
insl
sub
stc
in
int
cmc
scas
aas
dec
push
pushf
pop
lret
and
mov
pusha
fdivp
cmpsl
pushl
cwtl
mov
mov
cmc
dec
inc
and
ds
and
and
imul
je
loopne
or
mov
push
xor
sbb
mov
jnp
xor
adc
out
add
xor
cmp
call
add
dec
ds
cmc
inc
cmc
pop
in
sub
lahf
push
and
sbb
lret
pop
lock
lods
call
push
adc
notb
add
mov
or
dec
sbb
push
shll
lahf
fsubrs
outsl
jmp
push
std
fcmovnu
es
js
or
jmp
aas
dec
dec
test
inc
test
mov
in
fbld
dec
mov
xorb
orl
mov
push
mov
push
repnz
pop
arpl
hlt
jp
cmp
add
xchg
leave
xor
aas
jns
mov
add
jbe
inc
adc
ds
fwait
lret
aam
out
and
gs
cmp
cmpsb
out
inc
int
aaa
mov
xor
lret
push
test
adc
pop
fidivrl
push
fstp
xchg
in
clc
pxor
push
loope
rorb
xchg
pop
cmp
ljmp
sub
imul
cmp
inc
sbb
dec
cwtl
xor
int
pop
or
andb
movsb
mov
and
pop
arpl
mov
stos
int3
cli
loopne
push
xor
push
pop
mov
mov
mov
mov
sub
or
add
push
aad
and
push
and
addb
cmpsb
outsb
jbe
adc
xor
fidivl
push
popa
fdivrs
test
stos
push
in
cmpsb
ds
in
rolb
pop
andl
cmp
fnsave
es
fxch
dec
sub
call
xor
xchg
jae
pop
stos
mov
addl
loope
arpl
lods
lahf
fldt
loope
psubusw
sbb
xor
les
jae
lcall
mov
imul
push
and
out
or
mov
mov
les
lea
rorl
leave
int
pop
jg
outsl
cmp
inc
test
push
xchg
adcl
xorl
add
push
rorb
fwait
punpckhbw
sub
lcall
mov
sahf
into
cli
fisttps
sbb
roll
mov
in
sahf
adc
push
jne
inc
das
pop
in
cli
ds
sbb
cmc
push
push
push
lods
dec
leave
xchg
cmp
push
jb
jg
and
jl
scas
pop
pop
es
mov
movsl
cwtl
mov
xchg
push
inc
andb
jge
xchg
xchg
sub
xchg
test
and
sbb
lods
mul
sub
push
mov
movsb
out
xor
push
es
in
cmp
sbb
test
xlat
cmp
mov
clc
pop
nop
enter
xchg
mov
xchg
lcall
cld
mov
leave
cmpsb
sbb
inc
or
repnz
loop
adc
stos
scas
jp
inc
scas
movsl
adc
in
addr16
mov
jo
fisubl
cmpsb
push
mov
and
xor
mov
lret
mov
sarb
fnsave
aad
in
pop
sub
adc
or
roll
jo
aad
sub
sarl
or
les
cmp
push
ret
xor
es
rcll
or
pushf
or
mov
daa
inc
rorb
jnp
push
cmp
dec
push
pop
xchg
push
jmp
int
mov
scas
push
xor
or
mov
dec
lods
xor
jne
out
add
mov
jmp
das
in
insb
adc
fs
push
xchg
cmp
pusha
sbb
lods
fldenv
test
add
pop
mov
mov
insb
push
outsb
jb
mov
shlb
pop
lret
jnp
jmp
pop
pop
bswap
clc
sub
insl
add
inc
hlt
cmp
jae
sbb
mov
push
outsl
dec
and
out
and
es
xchg
enter
xor
mov
adc
adcl
loope
adc
sbb
push
out
loope
lods
faddl
mov
rcl
push
add
cmp
les
dec
lret
cmp
fisubs
repz
lea
cmp
stos
fwait
pop
mov
lea
ss
mov
sbb
ss
imul
push
ds
adc
cltd
sbb
jnp
idivl
adc
xlat
cmp
adc
cmp
int3
cmpxchg
xchg
jne
fsubr
subb
shrl
inc
adc
cmpsl
inc
movsb
mov
pusha
pushf
mov
pop
xor
jns
test
jle
xor
or
and
dec
xchg
dec
mov
xor
aas
loop
jle
fdivl
lret
fdivrs
dec
js
or
adc
or
pop
loop
hlt
imul
movsl
test
pop
jl
rcrl
addr16
cmp
mov
or
ret
aam
fisubl
daa
xchg
repz
sub
js
push
cmp
jge
mov
dec
jp
into
mov
stos
sar
or
push
adc
scas
nop
add
pusha
pushf
adc
xlat
lods
stos
frstor
scas
push
sar
add
aad
and
lods
cmp
dec
pop
cmc
adc
into
ss
icebp
aaa
push
in
cwtl
scas
loope
jae
arpl
insl
fstpl
add
xchg
and
lds
jecxz
subb
sbb
inc
push
loope
dec
cmp
popf
scas
loope
cmp
popf
pop
mov
push
add
psubd
jg
divl
cmp
pop
mov
int3
sub
scas
adc
or
mov
jns
in
xchg
mov
push
pop
nop
xchg
jl
loopne
xchg
js
xor
insl
or
cli
adc
mov
cs
mov
mov
pop
add
aad
das
icebp
xchg
xchg
and
jmp
adc
jnp,pn
ds
pop
movsl
aad
test
xchg
movsb
jne
ror
enter
outsl
mov
jle
pop
dec
mov
jne
lods
cmpsl
movsl
mov
xchg
add
scas
insl
movsb
cmpl
lea
jb
sub
jg
aad
outsb
jecxz
cmp
mov
test
fdiv
cmp
repz
shrl
fwait
adc
fwait
mull
jle
add
and
in
imul
or
je
jl
jp
js
xor
add
loop
jl
lahf
mov
jno
lret
cmp
popf
jp
neg
xchg
insl
or
add
adc
fidivrs
out
nop
sub
mov
lds
cld
or
es
cli
sub
sub
mov
mov
test
add
push
adc
in
jp
call
fcomps
popf
in
cmpsb
out
push
jp
sbb
arpl
fst
adc
cmpsb
rcrb
mov
jns
and
repz
cli
xlat
clc
hlt
clc
pusha
imul
cmp
repnz
xchg
ja
xlat
dec
into
add
bnd
push
loop
lea
lock
loop
and
mov
mov
fadds
push
cmc
dec
push
mov
rorb
mov
out
pop
or
bnd
mov
jnp
scas
in
in
fwait
mov
or
es
divl
andps
int
stc
jge
pop
dec
dec
mov
mov
mov
fidivrs
adc
mov
gs
mov
inc
xor
push
mov
out
test
and
fcompl
insb
xchg
aam
cwtl
inc
pop
and
pop
push
ja
sub
dec
cmpsl
pop
push
and
dec
les
mov
lods
add
scas
xchg
xor
rcr
mov
loopne
jg
ret
lock
ss
andl
sub
push
cs
push
pop
add
scas
dec
dec
sub
mov
jne
sub
push
mov
push
rorl
cmp
push
dec
cmp
cmp
add
jecxz
lock
pushf
pop
dec
int
mov
pop
jnp
int
stc
out
jb
dec
scas
out
xlat
add
sti
iret
inc
cmpsb
andb
adc
out
call
subb
int
scas
in
jo
mov
divb
and
mov
jg
add
pop
xor
mov
jmp
pop
gs
cmpsb
aaa
movl
jbe
jbe
popf
xor
aam
inc
mov
mov
cmpsl
dec
cmp
mov
scas
orl
ret
pop
and
push
jge
mov
js
addl
and
sbb
sbb
sarl
daa
cmpsl
addb
mov
aad
add
jl
stos
aaa
and
jne
add
nop
aas
out
aas
mov
lcall
mov
push
test
fisttpll
sahf
std
mov
add
rcrb
dec
ror
jns
lods
mov
cltd
decl
hlt
adc
jge
push
jno
mov
jmp
hlt
pop
jle
sub
rol
jne
xchg
cmpsb
mov
lret
cmpsl
push
adc
ss
iret
mov
testl
dec
shr
mov
adc
movsl
pop
dec
leavew
and
xor
mov
pop
jmp
mov
sbb
pop
hlt
por
adc
in
push
clc
repz
mov
ret
xor
inc
xor
inc
mov
sub
push
test
or
xchg
sbb
jp
or
lahf
or
add
pop
dec
insl
pop
fwait
push
jne
imul
jne
jno
jb
nop
lods
jp
jbe
sti
inc
adc
xchg
in
lret
cmp
pop
lahf
ds
insl
add
jb
pop
sub
lret
add
mov
dec
push
adc
ljmp
cmp
xor
push
aas
or
sbb
jge
rol
hlt
or
ficompl
std
in
insb
shlb
mov
cmp
pop
xor
sahf
loopne
mov
hlt
ret
mov
or
add
ljmp
mov
adc
jecxz
dec
data16
fsubs
or
or
out
cli
sub
pop
int
cmp
xchg
arpl
xor
or
leave
stos
mov
leave
push
push
repnz
add
dec
clc
dec
xlat
pop
rcr
adc
dec
push
mov
int
pop
daa
into
ljmp
or
mov
adc
fisttps
aad
das
popl
sub
iret
imul
push
mov
repz
fsub
sbb
inc
arpl
sbb
mov
add
out
pop
loope
jnp
or
dec
into
pop
loope
push
insl
dec
mov
imul
stos
mov
jb
jns
aam
inc
arpl
cmp
mov
sbb
into
jnp
sub
int
mov
and
sahf
mov
fdivl
push
jo
sbb
dec
sbb
mov
arpl
xor
pop
or
push
mov
xor
inc
xor
dec
mov
pop
lods
repz
les
arpl
xor
cmp
push
xchg
es
cmpsl
sarl
mov
add
push
jb
not
mov
fst
pop
xor
icebp
call
call
addl
sub
cs
test
ljmp
add
adc
or
pop
jp
into
shrb
ja
cmp
jg
enter
out
jg
pop
ret
mov
push
orl
add
rorb
and
les
lods
jl
inc
ljmp
and
repz
aaa
push
cmc
xchg
add
push
xchg
adc
addl
or
push
and
or
into
les
pop
int3
and
das
and
mov
sub
inc
sbb
jmp
mov
test
dec
iret
jl
push
mov
fisubs
adc
imul
dec
mov
out
mov
adc
mov
mov
cmp
cltd
pusha
or
cwtl
rorb
enter
push
adc
jnp
icebp
mov
push
lock
pop
add
test
and
inc
hlt
adcl
fwait
jns
andl
inc
shl
mov
popf
incl
icebp
mov
lods
push
xor
jp
jmp
push
cmp
movsb
ja
mov
mov
or
dec
mov
movsb
addb
rclb
lea
lock
shrb
loope
gs
shrl
sub
test
pop
addr16
test
mov
data16
cmp
aas
jae
out
sbb
aas
ret
pop
test
adc
cld
xor
in
call
mov
and
ljmp
xchg
pushf
loopne
outsb
sub
jmp
pop
int
jno
and
cli
push
mov
cmp
mov
dec
add
aam
outsl
rcr
push
pop
or
fbld
ds
ss
mov
mov
jno
add
mov
xor
stc
pop
in
xchg
pop
jbe
dec
jecxz
rdtsc
xor
ss
test
inc
fistl
or
sub
and
cli
cmp
sysenter
push
push
out
sbb
xchg
xor
cmp
fwait
mov
inc
cmp
lret
fnstcw
repnz
lahf
cmp
push
pop
in
cli
mov
jmp
xor
adc
lret
mov
sbbl
mov
aad
les
add
rorl
mov
jl
add
add
dec
mov
jecxz
jnp
pop
sub
and
out
dec
push
fadds
inc
mov
push
gs
repz
dec
fistps
jne
adc
gs
out
cmp
xlat
jbe
mov
xchg
cmp
pop
in
testl
popa
inc
sbb
adc
or
repnz
loop
aad
jg
push
mov
dec
popl
pop
push
or
arpl
repnz
xor
jge
repnz
movsb
adc
jne
jnp
filds
stos
mov
adc
push
push
lret
sub
outsb
ss
sahf
lret
out
test
aad
test
pop
jb
insl
cmp
in
push
popa
jge
mov
xor
fiaddl
jnp
pop
shlb
ret
js
push
push
xor
sbb
mov
xchg
xorl
xchg
and
rcll
sbb
or
jno
sbb
loop
or
cmp
adc
outsl
lods
icebp
pusha
push
jns
mov
mov
add
xchg
aam
cmc
fdivrs
mov
in
out
xor
push
sub
in
je
int3
jbe
adc
dec
or
pushw
dec
scas
lock
test
push
arpl
daa
jg
mov
mov
loope
shll
dec
sti
movsl
sbb
dec
jecxz
aas
adc
adc
outsb
hlt
dec
adc
mov
pushl
imul
push
pop
cmp
mov
dec
mov
shll
mov
cmp
sbb
fdivs
lods
ret
push
jl
mov
dec
cmp
jo
and
sub
fsubrp
pop
je
inc
mov
daa
arpl
fwait
sbb
loop
aas
pop
mov
repz
out
aas
adc
cwtl
sbb
mov
lods
cltd
imulb
and
test
cmc
push
cmp
cmp
jp
int
adc
sub
imul
jb
push
adc
mov
mov
out
ja
dec
mov
movq
fst
sbb
ret
and
mov
jp
pop
shlb
mov
push
lods
mov
stos
imul
adc
mov
insb
jge
dec
push
jns
popa
cmpb
div
mull
cmp
inc
movsb
lock
inc
pusha
sbb
fisubs
push
idivb
xorl
fs
dec
shl
pop
in
lcall
je
mov
mov
mov
cmp
fcmovu
loope
dec
jnp
hlt
hlt
dec
es
leave
cwtl
lods
ret
inc
outsb
mov
shlb
js
out
ss
sub
ret
cmp
cltd
or
mov
xor
xor
pop
loope
adc
or
jae
xor
xchg
mov
sbbl
jne
jge
call
inc
cmpsl
mov
cmpsl
xlat
jecxz
dec
push
ljmp
dec
frstor
aad
in
idivl
cmp
stc
jns
testb
add
stos
fldt
jecxz
jns
push
add
pop
cmp
pusha
insl
inc
in
repnz
pusha
adc
repz
lock
inc
into
mov
dec
pop
sbb
xorps
mov
bnd
or
cmc
gs
mov
xor
frstor
push
dec
ret
cmp
iret
test
mov
ret
jmp
add
and
movb
arpl
mov
mov
imul
repnz
leave
add
dec
dec
ds
dec
mov
cmp
push
ret
cmp
lea
and
xor
mov
imul
cmp
push
sub
shlb
adc
lret
stc
inc
les
add
cmpsb
add
xor
mov
movb
pop
pushf
adcb
in
xchg
imul
xchg
dec
adc
xor
test
clc
sbb
js
xchg
loop
or
into
lds
div
in
aaa
inc
fdivs
lods
cmp
push
add
lds
dec
mov
leave
push
xchg
jp
test
and
pushf
push
xchg
clc
adc
lds
lods
or
aad
pop
sub
int3
lret
push
mov
js
push
sub
pop
imul
mov
xchg
test
sbb
adc
sub
mov
int
mov
sub
and
or
scas
call
add
cltd
jne
idivl
and
aam
addl
repnz
cwtl
jns
or
nop
fsubrs
mov
movsl
leave
push
dec
data16
leave
test
subb
sbb
sbb
jecxz
push
mov
pop
cs
fstps
scas
orb
or
scas
mov
jne
mov
push
mov
push
idiv
cmp
push
push
clc
push
mov
adc
fdivrl
ja
es
mov
sbb
cmp
xor
xchg
cmp
mul
int3
test
xlat
icebp
and
or
inc
repnz
mov
scas
data16
movsb
leave
fwait
test
lods
pop
jns
push
pop
inc
push
sbb
test
scas
jecxz
xchg
mov
push
sub
sbb
and
xor
and
add
dec
mov
scas
add
jo
mov
xor
dec
out
dec
mov
cltd
inc
mov
sbb
adc
jns
pop
mov
pushf
xchg
inc
sub
cmpsb
fsubrs
mov
pusha
ja
clc
pop
addr16
jne
addr16
scas
pop
xor
ret
sbbb
mov
mov
aaa
cmpsl
js
dec
int3
push
aas
fnstenv
push
fstps
out
js
mov
enter
out
mov
pop
cltd
cwtl
sbb
stc
jle
addl
cs
xchg
dec
sub
pop
lret
jb
hlt
hlt
bound
jmp
or
xchg
push
insb
add
add
push
push
fnsetpm(287
add
fs
fwait
into
xchg
dec
fidivl
pushf
push
imul
es
in
in
pop
ds
push
inc
ss
cli
loop
ja
mov
inc
rcll
std
xchg
mov
mov
or
vsubps
pop
shll
stc
pop
aaa
adc
pop
lcall
mov
imul
add
inc
mov
add
dec
mov
push
or
int3
dec
or
lcall
addr16
sbb
addb
nop
sbb
and
jle
mov
je
jmp
cltd
je
fdivrl
push
mov
xchg
adc
mov
out
insb
bound
cmp
mov
adc
clc
sbb
sub
mov
leave
lods
sbb
push
push
jo
imul
cld
cli
pushf
orb
rorb
sbb
xchg
inc
addr16
insl
cmp
dec
add
xchg
sub
push
movsb
rcrb
xchg
jne
adc
lods
or
add
int3
das
mov
cwtl
jb
bound
xor
pop
pop
sbb
mov
daa
mov
lret
pop
mov
jb
rol
or
test
and
js
pop
xlat
cs
cmpsl
mov
stos
aam
ljmp
mov
or
mov
jne
stos
xchg
imul
add
and
add
xor
pop
jecxz
cwtl
test
dec
sbb
adc
push
imul
fcoml
fdiv
pop
mov
shrl
push
into
push
int3
out
pop
dec
jge
pop
jp
add
pop
out
jmp
push
sti
movsb
dec
jns
scas
xchg
sbb
xchg
scas
cmpsb
int
mov
cwtl
add
and
xchg
adc
in
repz
or
push
cwtl
mov
bound
mov
stc
in
aam
nop
cmpsl
loop
sub
fnstcw
mov
jnp
mov
mov
pop
std
movsl
test
imul
adc
jo
inc
or
cmp
and
clc
jb
sub
mov
add
add
cltd
xchg
mov
cltd
inc
xor
mov
sbbl
shrl
xchg
loop
dec
mov
aas
xchg
lods
jp
xor
jno
mov
sahf
lret
insb
aam
sti
jno
jecxz
jns
and
push
xlat
loope
add
pop
or
fnstsw
mov
push
push
and
inc
or
ja
xchg
push
mov
xchg
movsl
dec
lcall
adc
inc
rorl
data16
rorl
mov
mov
push
inc
xor
xchg
cwtl
test
xchg
ss
mov
jo
mov
lea
mov
sarb
rcll
outsb
inc
loope
jle
icebp
cli
aas
lcall
lret
int3
or
or
jae
int3
xor
adc
enter
in
and
adc
mov
adc
flds
lds
mov
and
cmp
xchg
pop
lods
loop
rolb
into
sbb
frstor
xlat
add
lock
xchg
cmp
mov
cwtl
jmp
inc
sbb
and
mov
cltd
rclb
and
xchg
aam
ss
jge
or
jne
mov
add
sub
lret
adc
cmp
and
lock
je
cmp
rcr
jns
lret
jge
imull
es
pop
ja
in
xchg
add
cmp
aaa
mov
jle
cs
xlat
mov
or
xchg
dec
sub
xchg
fists
jp
insb
inc
add
dec
outsl
les
loopne
fwait
cld
shl
mov
push
out
icebp
adc
movsb
push
mov
in
push
cmp
mov
sbb
fsubrl
xchg
jg
outsb
fwait
sub
gs
into
pop
movsl
in
sub
aas
jae
inc
pop
and
pusha
stc
iret
inc
pop
fisubs
mov
insl
out
push
cmpsl
xchg
pop
cvtpi2ps
pop
cmp
iret
bound
dec
jb
shlb
pop
sub
jbe
mov
sarb
pushf
push
inc
or
xchg
mov
dec
enter
loop
jecxz
or
lods
pop
outsb
fildl
add
std
mov
loope
pop
cmc
xchg
enter
jbe
mov
mov
jnp
popa
and
sbb
in
adc
stos
or
and
popf
and
inc
and
dec
jmp
and
xor
adc
ljmp
out
pop
mov
scas
sub
outsb
lds
push
xchg
out
jnp
orl
mov
pop
popf
adc
dec
sub
fwait
jg
bound
mov
or
int
xchg
sbb
lods
dec
jae
fisubrs
adc
imul
out
or
nop
sti
sbb
and
sbb
daa
out
inc
inc
cmp
je
pusha
push
or
inc
push
fnstcw
gs
cmpsb
sarb
sbb
jbe
mov
pop
les
pop
lret
in
adc
lock
sub
outsb
mov
push
dec
int
lock
sub
mov
push
dec
sub
in
dec
lahf
rorb
adc
lret
dec
and
shr
push
fistpll
jl
adc
sbb
pop
repz
sub
push
mov
and
fs
incb
adc
adc
imul
rclb
mov
aam
adc
aam
mov
ss
call
sbb
test
inc
add
sti
cmp
and
jle
xor
outsl
mov
leave
scas
add
fisubrs
mov
jl
subl
mov
imull
sahf
sub
popf
jle
sbb
adc
test
mov
jnp
ss
cltd
dec
in
aaa
cmp
cwtl
aad
cltd
or
ret
cmp
or
popf
add
lret
pop
sti
xchg
movsl
imul
pop
dec
jmp
call
mov
xlat
lds
aam
xchg
pusha
pop
loopne
or
sbbl
mov
lods
pop
hlt
or
dec
add
mov
pop
push
xor
cltd
mov
adc
push
or
dec
popa
sbb
les
inc
rcll
lock
int
inc
addl
dec
adc
fstps
cmp
repz
lods
adc
jle
cmp
inc
lret
repnz
jg
out
lret
mov
aas
jne
jne
aad
sub
jmp
mov
das
jne
dec
cmp
mov
lret
inc
lcall
xor
cmp
adc
lret
push
js
cmp
lods
adc
and
icebp
jae
mov
out
add
shl
mov
sub
shr
repz
mov
leave
adc
rcll
enter
push
xchg
inc
int3
xor
or
sarl
negl
xchg
hlt
xchg
xlat
push
popf
sub
inc
popa
sub
fisubs
xor
and
adc
inc
in
mov
lea
test
pop
xlat
pop
fcmovnbe
cmpsb
dec
mov
out
sbb
icebp
push
aam
mov
shr
mov
lock
dec
adc
xchg
xchg
ljmp
cmp
push
pushf
adc
jns
movsl
imul
out
adc
test
jmp
ljmp
ret
fisttpl
push
out
xchg
push
popf
jg
add
das
das
je
xlat
outsb
xor
xor
jb
mov
mov
pop
cld
imul
xchg
imul
push
aad
dec
push
sbb
stos
out
dec
jg,pn
movsl
in
adc
cld
fstpt
xorl
or
inc
rcrl
pop
add
or
ret
lcall
fsubs
xor
mov
mov
mov
je
mov
mov
shll
packsswb
mov
ret
jns
mov
xor
cmpsl
inc
xchg
xchg
ja
or
and
repz
jmp
loope
in
jmp
ljmp
ds
mov
movsl
dec
ja
xchg
imul
xchg
sbb
push
push
jmp
pop
lahf
rol
push
bndstx
fldt
xchg
inc
and
iretw
jns
push
xor
inc
sbb
js
lods
iret
push
addr16
ror
xlat
mov
mov
cmp
dec
dec
loop
inc
aad
daa
cmpsb
in
jns
test
add
fiadds
or
cli
nop
test
cmp
inc
jbe
mov
xchg
jg
fwait
pushl
lock
je
jp
pop
aad
push
xor
mov
sub
push
inc
jecxz
push
mov
stos
mov
xchg
lea
xor
lds
int3
xchg
cli
jg
xchg
out
jl
cmp
pop
mov
jae
dec
pop
mov
fwait
mov
loope
in
xchg
xchg
push
inc
pop
mov
mov
pop
in
mov
pop
sub
xchg
je
cmpsb
sarl
cmpsb
test
loope
dec
insl
jge
stos
mov
sub
loope
inc
addr16
out
fxch
push
sub
loop
inc
mov
mov
rolb
jnp
dec
into
pop
mov
loop
mov
notb
dec
adc
adcl
imul
xchg
arpl
mov
sub
mov
inc
dec
xor
jp
mov
xchg
adc
hlt
fnop
or
repnz
loop
sub
mov
les
pop
dec
into
call
int
insb
pushf
push
cli
out
out
push
stos
call
pop
xor
lret
inc
push
jl
xchg
test
in
push
mov
testl
sbb
push
add
inc
pop
sbb
aad
mov
outsl
jae
mov
xchg
xchg
xchg
hlt
dec
in
fnstcw
push
dec
ja
mov
mov
xchg
or
aam
dec
imul
mov
and
and
enter
movsb
ret
mov
addr16
cmp
notl
clc
aam
xor
sbb
jb
pop
lods
xor
xorb
imul
xchg
push
pushf
mov
cmp
mov
jne
fiadds
add
push
xor
xor
jo
mov
imul
clc
and
xchg
jne
xchg
out
mov
sbb
mov
inc
pop
mov
push
fiaddl
mov
xchg
out
mov
sti
mov
leave
and
jo
fistl
enter
stc
out
aad
sbb
orb
or
in
push
fnstcw
rorl
adc
cmp
inc
adc
std
insb
pop
prefetcht1
add
test
jns
jecxz
stos
cmpsl
data16
fistps
mov
inc
adc
xor
jo
les
push
loop
rcl
sbb
sub
pop
lahf
test
fiadds
jp
dec
dec
add
mov
lret
mov
lcall
jnp
in
jae
out
xor
leave
inc
dec
enter
xlat
bound
lods
sub
sti
cmpsb
rcll
mov
fbld
sub
imul
dec
inc
jne
in
sti
inc
imul
push
xchg
xor
push
jp
outsb
movsl
test
dec
gs
popw
sbb
stos
cmc
pop
hlt
add
inc
addl
adc
call
cli
and
jge
pop
jp
sub
shlb
inc
push
das
push
jge
jo
ljmp
xor
aas
adc
pushf
xchg
cmp
cmp
mov
mov
mov
loopne
test
shrb
lds
cltd
jge
mov
movsb
cmpsb
das
test
gs
int
ja
adc
imul
dec
popf
adc
bound
loope
aaa
imul
lret
and
fmulp
push
dec
xor
dec
out
stos
push
cmp
push
xor
cltd
sbb
sbb
fsubr
repz
dec
popa
bound
ret
lret
sbbl
mov
test
xor
aam
in
rolb
and
adc
pop
mov
and
cmc
fidivs
movsb
insl
fs
jno
movsl
fimull
xchg
inc
shrl
xchg
insl
daa
jecxz
loopne
cmp
push
or
lods
cmp
repz
xor
mov
lea
fcmovnbe
stos
xlat
loop
sbb
out
movsb
jl
popl
outsl
pop
cmpsl
push
pop
nop
mov
jl
jmp
imul
ss
stos
in
mov
inc
movsb
icebp
mov
lahf
sbb
inc
sub
jbe
pop
or
test
aas
lods
das
data16
jp
dec
ja
xchg
push
lret
jg
sub
cli
in
imul
js
enter
sub
daa
movsl
lock
lcall
mov
jecxz
in
xor
sub
mov
notl
mov
fidivrl
and
repnz
mov
jp
push
sbb
dec
inc
imul
mov
inc
add
adc
dec
add
mov
ret
sub
clc
or
and
mov
or
fldt
jno
xchg
clc
pushf
hlt
sbb
test
stc
sysret
mov
mov
dec
jle
fldt
jmp
dec
push
dec
out
jmp
push
and
aas
or
xor
ret
mov
mov
mov
loope
pop
data16
int
loop
inc
rcrb
stc
pop
sarl
dec
movb
jb
add
push
and
mov
fmul
cmpsb
xorb
pop
scas
sbb
xor
cmp
pusha
fs
sub
dec
xchg
jge
inc
and
sbb
xchg
stos
in
mov
or
int
mov
je
xor
or
xchg
cmp
fimuls
scas
mov
daa
add
bound
jb
xor
in
pop
sub
adcb
sbb
add
mov
mov
push
sarl
out
notl
mov
jnp
rcrb
mov
sbb
mul
sub
repnz
outsb
ljmp
sbb
adc
sub
pop
xor
mov
movsl
in
movaps
cmpsb
push
cwtl
or
dec
inc
pusha
or
and
inc
fidivrl
hlt
sub
xchg
ret
pushf
loope
insl
arpl
xchg
push
lods
push
imul
dec
pop
mov
cmp
sub
adc
add
add
test
stc
xchg
pop
push
inc
sbb
fsubrl
ds
pminsw
and
lret
mov
out
cmp
mov
or
adc
icebp
cmovae
fsubrl
xor
shr
pop
pop
jb
cmp
adc
shlb
imul
mov
cmp
xchg
icebp
test
jae
outsl
mov
in
mov
ret
xchg
fadd
cmpsl
add
clc
insl
sub
adc
xor
xor
mov
mov
pop
sub
push
mov
enter
adc
inc
dec
ja
xchg
rolb
les
jmp
adc
cs
add
dec
push
movsl
sbb
pushf
or
and
loop
lods
dec
loop
push
push
inc
xchg
negl
add
fdivl
pop
outsl
mov
repnz
add
cmp
cmp
mov
adc
adc
cmp
sub
mov
jmp
xor
cmp
aaa
ljmp
adc
fldenv
inc
loope
ja
mov
jle
jno
aaa
jp
ficoms
ret
push
notb
sub
in
push
cwtl
shl
mov
push
iret
mov
incl
mov
mov
fucomip
dec
or
pushf
xchg
dec
jecxz
sbb
outsb
in
sbb
enter
push
pop
push
mov
xlat
mov
aaa
ds
lcall
cmp
xchg
sbbl
stos
push
jo
cmpsb
pop
add
lods
mov
xchg
lds
sti
loop
divl
sarl
imul
mov
xchg
or
jl
sbb
in
cwtl
xor
lret
stos
fnsave
bound
aam
and
test
cwtl
mov
out
jo
mov
and
inc
push
pop
xlat
cmp
clc
popf
or
push
insl
xor
test
ljmp
xchg
mov
lods
pop
mov
xor
and
push
jns
adc
push
dec
jo
mov
xchg
movsl
jo
pop
fistpl
jle
xchg
lret
mov
xor
sbb
test
bound
add
sbb
jg
and
popa
sti
sahf
mov
lret
fisttpl
add
jge
mov
mov
das
push
dec
sbb
aas
sbb
push
into
shll
dec
and
iret
leave
and
add
out
push
xorb
out
int
out
mov
cmc
es
test
enter
sbb
stc
jg
fstp
xchg
hlt
addr16
negl
pop
fwait
js
call
sub
pop
negb
inc
jge
inc
mov
push
mov
sbb
ficomps
mov
push
xor
leave
pop
orl
or
jo
sub
mov
sbb
les
mov
xor
inc
push
pushf
mov
fwait
ja
adc
push
jnp
or
push
lret
repnz
cmp
ret
pop
add
mov
adc
stc
xchg
cs
mov
gs
lods
bound
sbb
dec
add
inc
add
nop
lock
jne
mov
fwait
insb
push
subb
lahf
jle
jle
and
jmp
shll
arpl
les
es
sahf
shlb
dec
in
popa
fbstp
inc
int3
je
in
inc
jb
mov
dec
mov
cmpsb
push
mov
jb
test
cltd
or
xchg
nop
pop
xor
movhps
into
ss
inc
dec
xchg
xor
ds
cwtl
fwait
jb
jge
mov
mov
cmovs
xor
cmp
push
jmp
or
stos
jns
push
sbb
fbstp
movsl
inc
dec
xchg
sub
push
andl
imul
add
ja
add
pop
jge
sub
shl
jnp
cwtl
out
fadd
imul
push
mov
adc
fucomp
shll
cli
lahf
test
andb
in
jmp
add
push
arpl
pop
pop
pop
push
push
cmp
mov
imul
and
fstpt
sbb
mov
pop
push
dec
cmc
push
jne
dec
xor
clc
inc
out
cltd
imul
ficomps
movsl
notl
pusha
pop
fidivl
test
es
adc
jecxz
iret
out
out
dec
or
sub
es
pop
call
int
out
and
sti
xlat
rorl
jnp
ficoml
xchg
xstore-rng
cmpsl
inc
les
ja
fcmovnu
lods
add
shl
add
sbb
sti
dec
subl
xor
ss
push
fldt
mov
addr16
or
out
mov
cwtl
jecxz
push
mov
popf
mov
sbb
push
pop
cmp
sbb
movsb
test
ror
push
push
int3
jns
stos
mov
ja
cmp
aam
imul
and
pusha
rcrb
inc
mov
cmpl
cli
mov
fbstp
xlat
push
cmp
jge
dec
fucomip
cwtl
xor
lcall
mov
cmpl
xlat
daa
or
mov
mov
lret
dec
out
int3
mov
cli
test
cmp
sub
xchg
stc
scas
lock
mov
outsl
xor
jne
loopne
xchg
dec
xchg
xchg
mov
xchg
sbb
arpl
mov
cmpl
sub
aaa
add
fnstcw
dec
shll
fcmovb
mov
pop
fld
outsb
divl
pop
jo
mov
out
imulb
xchg
adc
movsl
in
sub
mov
and
leave
sub
insl
in
push
fwait
push
mov
aas
addr16
sub
jbe
dec
push
data16
std
addr16
mov
out
inc
dec
cvtps2pi
loopne
lods
or
les
shlb
sbb
jmp
cltd
imul
dec
push
inc
scas
icebp
dec
push
imul
shrl
mov
adc
popa
jge
mov
xchg
fists
and
pop
dec
scas
int3
and
arpl
or
call
addb
push
sbb
ljmp
mov
in
push
lahf
mov
mov
jecxz
inc
adc
jno
in
push
inc
inc
sub
sbb
add
pusha
adc
pushl
mov
and
test
idiv
icebp
stos
cs
xchg
aam
mov
enter
out
lods
fucomp
aam
or
mov
cmp
das
mov
sarl
test
add
pop
imul
notl
repz
out
or
movsl
bound
xor
xor
pop
sub
fwait
dec
out
clc
jne
sbb
inc
stos
push
mov
push
mov
test
and
mov
loopne
dec
out
insl
inc
in
pop
clc
lret
sbb
gs
shrb
push
in
inc
sub
int3
xchg
clc
xchg
lods
shlb
push
jg
push
outsb
out
arpl
shll
movsb
inc
push
cltd
lahf
sti
test
icebp
cmp
pusha
mov
xor
jmp
sbb
rcl
pushf
mov
leave
popa
mov
adc
or
dec
xor
or
push
cmp
pop
lret
lahf
gs
inc
push
jp
mov
push
out
xchg
jb
call
or
imul
das
add
pop
rclb
adc
mov
std
cs
add
jbe
and
and
sti
dec
ss
lea
push
sub
insl
mov
mov
and
sahf
fwait
daa
mov
dec
mov
adc
mov
dec
cli
jg
mov
and
lahf
call
push
in
lock
jle
push
sub
outsb
hlt
scas
pop
adc
aas
test
sbbb
mov
dec
mov
ror
inc
icebp
mov
pushf
jbe
xchg
pop
or
inc
mov
out
test
dec
mov
sti
jmp
mov
into
push
cld
leave
mov
in
sub
inc
jnp
inc
in
xor
mov
sbb
mov
stc
sahf
inc
and
jbe
mov
fs
mov
inc
inc
add
fidivrl
addr16
push
insb
cli
mov
fnstenv
repz
inc
jo,pn
or
jb
inc
lea
leave
adc
jbe
out
xor
fwait
cmpsb
fs
loopne
push
cli
hlt
lds
lret
cltd
ds
mov
mov
push
imul
push
or
jns
testb
bound
xor
push
mov
sub
lahf
jp
test
fsubl
clc
jo
cmp
arpl
push
push
cltd
aam
push
pop
icebp
mov
mov
in
addr16
lcall
sahf
xchg
stc
loope
imul
gs
rorl
loope
imul
outsl
into
inc
push
or
xchg
push
inc
sarb
clc
push
out
insb
push
aad
or
xchg
cltd
out
shufpd
add
adc
or
mov
dec
in
repz
push
jge
dec
mov
cmp
loopne
fwait
xchg
bound
shrb
cmp
movsb
and
dec
dec
jns
lods
jne
test
sbb
cltd
mov
icebp
jp
push
cmp
xchg
cmp
dec
adc
fcoml
outsb
sbb
push
fstpt
fwait
in
aaa
inc
cmp
inc
xor
daa
mov
jne
jns
sbb
les
ret
jnp
jbe
cltd
das
or
or
mov
test
movsl
xchg
fs
es
mov
inc
xlat
pop
dec
movsb
enter
daa
xchg
mov
or
sub
xor
lds
push
stos
in
xor
dec
shl
imul
mov
push
hlt
icebp
and
and
fidivrs
sub
loop
dec
test
sbb
sub
lret
pop
xor
lods
jno
popa
mov
das
mov
pop
imul
fisubrs
xchg
jo
negb
rorl
xlat
jns
jo
mov
cmp
and
rclb
lods
mov
mov
inc
incb
sub
neg
mov
pop
adc
pop
imul
sub
mov
enter
nop
or
enter
add
push
jno
xchg
mov
out
sbb
inc
nop
lahf
ret
jae
out
fimuls
in
jmp
jg
sub
jae
std
cwtl
outsl
jbe
push
mov
mov
mov
fiaddl
cs
cmp
xor
add
outsb
lahf
in
or
mov
jp
sub
add
xchg
aas
mov
push
sub
pop
dec
int3
ret
mov
outsl
shll
sbb
cbtw
adc
insl
imul
pop
popl
lret
ja
pop
xchg
fcompl
and
je
pop
rclb
cmp
ds
inc
mov
mov
mulb
cmp
jno
fstpl
jo
scas
mov
xor
mov
jno
shl
out
enter
cmp
call
sbb
sahf
rol
adc
lret
add
add
lahf
ss
cmp
mov
sub
hlt
aad
loop
imul
mov
loop
xor
ds
jbe
add
xchg
cmp
cmp
loopne
mov
and
mov
popf
bound
dec
cmp
fsub
pop
xchg
inc
dec
mov
clc
or
mov
jns
adc
je
aam
pushf
cmp
shrb
insb
sub
out
movb
push
mov
fists
in
xchg
imul
insl
arpl
adc
test
or
out
add
xchg
pop
and
pop
push
add
cmp
dec
int
je
cmp
sbb
push
or
sti
add
fldcw
sbb
pop
xor
movsb
push
pop
mov
xor
or
push
xor
mov
xor
enter
mov
mov
jg
dec
ret
outsb
addb
daa
popf
repnz
shrl
and
stc
fucomip
mov
and
cs
add
cmpsb
xchg
insl
pop
int
pop
dec
pusha
divb
lret
mov
sahf
and
hlt
pop
imul
pop
sub
xor
mov
sbb
inc
add
dec
popf
fdivp
mov
in
and
orl
inc
and
repnz
imul
in
jmp
jb
mov
iret
es
aam
leave
adc
data16
sbb
movsl
sbb
mov
sbbl
pop
iret
sbb
sar
popf
lret
ja
mov
and
adc
sti
pop
ja
repnz
and
inc
xchg
testl
jo
pushf
fisubs
dec
add
aam
pushf
outsb
add
mov
stc
mov
jg
std
stos
add
pusha
xlat
adc
push
jns
jg
imul
adc
mov
out
orps
push
xchg
and
icebp
ja
sub
sarl
push
inc
addl
in
cltd
sub
fwait
pop
add
add
push
xchg
mov
iret
inc
jp
cmp
clc
test
push
sahf
jne
cmp
sti
jnp
ffree
scas
test
push
rorl
inc
loope
mov
aaa
and
jg
mov
ljmp
enter
add
mov
xor
push
loopne
mov
add
lods
scas
lret
pop
add
inc
push
das
xor
push
iret
jmp
cli
pushf
inc
and
fprem1
sahf
mov
adcl
lds
sbb
mov
es
add
js
jp
out
clc
sbb
mov
xchg
mov
lods
out
xor
xchg
je
shlb
scas
imul
mov
mov
jns
movsl
cmp
scas
dec
mov
test
mov
push
add
loope
ja
flds
mov
jbe
loopne
sub
jle
pop
or
sub
ret
sti
es
jo
stos
lret
ljmp
xchg
pop
repnz
xchg
push
aam
rcll
cmp
and
xor
mov
addl
movsl
lock
in
ret
xor
test
int
cs
cwtl
out
stos
or
fcompl
xchg
cmpsl
loop
dec
int
adc
data16
mov
push
pop
and
mov
lahf
sbb
fimuls
dec
aad
pop
hlt
test
mov
cmp
dec
jle
adcl
aam
stc
or
push
jmp
and
sbb
jl
das
dec
and
jle
call
dec
dec
lock
imul
lret
pop
shrl
mov
add
xchg
xchg
adc
xor
push
xchg
int
inc
fcmovnbe
push
dec
add
pop
dec
sbb
sub
int
aam
add
or
fisubl
data16
test
cli
mov
movsb
jecxz
xchg
or
loope
mov
dec
fs
les
rol
gs
ret
inc
mov
ds
mov
in
pop
loope
mov
shlb
hlt
mov
cmp
xchg
jnp
arpl
adc
dec
mov
ret
or
mov
push
fs
xchg
jnp
rcrb
gs
adc
stc
repnz
scas
push
xor
sub
sub
dec
xchg
cmc
sub
divb
mov
mov
mov
jg
lcall
out
lock
push
mov
mov
cmp
std
ret
xchg
and
xchg
sbb
test
adc
add
ds
xchg
jb
adc
and
ja
xor
dec
push
stos
mov
mov
mov
imull
dec
push
add
mov
test
xchg
rclb
fld
mov
jmp
push
xchg
jno
and
fisubrl
mov
cmpsl
xchg
xchg
and
cmp
dec
in
dec
pop
and
rclb
roll
gs
pop
xchg
dec
push
mov
mov
out
xor
aad
adc
shlb
frndint
je
cltd
mov
jbe
sti
add
ja
push
mov
mov
movl
in
mov
jle
repz
pop
mov
mov
mov
ss
les
imul
fstps
in
out
xchg
mov
xchg
and
cmp
cmp
mov
ds
gs
xchg
jns
lahf
mov
mov
ja
pop
call
sub
cltd
dec
inc
cmp
lret
lret
fdivs
aas
outsl
push
cli
stos
dec
cmp
test
jne
das
xchg
cmpl
pop
insl
adc
xchg
or
cld
mov
bound
clc
mov
or
adc
sbb
and
lret
int3
adc
cmpsl
sahf
sbbl
sub
push
movsb
loopne
adc
xor
arpl
sub
jbe
mov
push
cmp
divb
rcrl
mov
addr16
add
xor
and
gs
incb
cli
pop
lods
or
scas
out
add
sbb
dec
or
int
pushf
inc
divb
dec
adc
pop
push
sahf
data16
mov
lcall
daa
sub
adc
sbbl
das
mov
iret
int3
dec
xor
nop
scas
xchg
and
mov
mov
cmp
xor
les
in
cmp
xor
push
or
sub
mov
imul
jmp
sub
push
pop
jne
imul
fiaddl
ret
jg
push
test
stos
add
lret
jno
mov
and
dec
pop
repnz
lock
mov
pusha
inc
stos
fs
repz
out
int
mov
fs
or
push
pop
sub
xchg
sub
and
rorb
jp
lret
push
mov
fisttpll
dec
add
iret
test
outsl
fiadds
xchg
xchg
inc
ja
push
mov
xchg
mov
and
addr16
cmp
fstpt
push
rclb
mov
fwait
push
sbb
jae
xor
push
aam
in
outsb
hlt
movsb
cmp
ret
jp
mov
idivb
pop
cltd
clc
movsb
loope
jl
jmp
xor
add
jp
data16
sub
jmp
imul
movsb
or
push
pusha
xor
adc
cltd
das
mov
into
call
int3
pop
xchg
cld
cmp
pop
pop
cmp
dec
pop
sahf
je
fnstsw
inc
nop
dec
push
mov
into
jno
out
cmp
jl
cmp
sub
and
and
testl
fucomip
mov
push
or
loope
add
in
rcrl
jp
cmp
outsb
pop
jnp
push
cli
sub
jne
icebp
push
jecxz
out
dec
in
aaa
lahf
add
sti
or
push
or
xchg
pop
insl
js
pop
cmp
lods
sbb
mov
add
and
in
shrd
clc
ss
stc
cltd
outsl
jg
or
jle
jns
jne
lock
push
dec
daa
or
out
fdivs
or
xchg
or
out
cmp
loopne
shrb
call
rcrb
mov
fs
pop
mov
sar
xorb
cli
add
fstpt
cmp
das
out
cmp
xchg
pop
notl
sbb
loop
jb
loope
sahf
jbe
lret
aam
mov
jg
das
data16
out
sbb
xor
cmpsl
mov
mov
mov
int3
mov
push
aad
sarl
dec
xchg
loopne
pop
cmpb
ficoml
adc
add
in
rcr
nop
push
imul
add
mov
add
jbe
mov
fwait
xchg
xor
daa
das
addr16
or
insb
call
popa
xchg
xchg
mov
mov
add
sub
scas
bound
or
mov
and
cld
daa
cmc
cmpsl
cli
dec
push
pop
outsb
test
stos
mov
iret
daa
cltd
bound
lret
cmc
test
jecxz
mov
add
sub
cmc
sub
jg
fucom
xchg
fdivs
mov
adc
xchg
ss
je
pop
push
scas
mov
adc
aas
gs
xor
or
mov
cmpsl
testl
movsl
popa
inc
add
sbb
outsb
xchg
mov
add
mov
outsb
dec
xchg
xchg
lcall
test
xchg
mov
scas
in
ret
testl
add
leave
pusha
pop
hlt
js
jge
pop
std
jmp
jle
dec
mulb
jnp
outsb
pusha
call
pop
pop
shl
sbb
int3
sub
dec
adc
mov
xor
call
fcomip
loope
push
ss
cs
and
sbb
xchg
ss
aaa
loopne
imul
adc
enter
je
mov
adcl
mov
sarb
mov
psubd
in
shrl
push
mov
jae
sbb
jge
mov
push
outsb
insl
in
aam
fmull
in
sbb
and
gs
roll
sbb
arpl
inc
sbb
rcl
int
xor
inc
std
xchg
or
test
scas
in
shrl
cli
push
add
fs
mov
pop
mov
sbb
sub
enter
inc
mov
or
push
roll
lds
les
shll
and
sbb
js
out
daa
lea
ret
movsb
xor
cltd
xchg
xor
js
out
jg
xor
imul
pop
inc
inc
mov
mov
inc
mov
xchg
lahf
sub
cli
cmpsl
mov
adc
pop
jae
xorl
and
in
mov
jmp
cmpsl
xorl
lahf
bound
push
xchg
test
pushf
mov
mov
lea
icebp
push
or
nop
xchg
jl
mov
and
rcll
daa
pushf
push
or
dec
jmp
mov
add
mov
mov
fsub
in
jp
inc
cs
mov
add
push
inc
pop
out
test
ja
out
jno
sarb
je
mov
add
cmp
fmull
lock
dec
fstl
in
jae
cltd
pop
lahf
adc
push
pop
and
push
pop
inc
and
and
jecxz
sbb
cs
leave
pop
sub
push
mov
jae
fcomp
push
cmp
lods
fidivs
fisttps
inc
fwait
jbe
fisubs
fwait
cmpb
aas
xlat
jp
mov
xor
clc
cmpsb
jo
inc
push
xchg
scas
ja
in
rclb
mov
push
dec
mov
fildl
xor
pop
and
mov
notb
mov
fdivs
mul
int
add
shlb
pushf
jb
stc
fsubr
aaa
lcall
test
adc
xchg
xlat
mov
sub
mov
iret
test
das
sub
push
sub
imul
stc
in
imul
add
mov
mov
int
rcl
cmp
sarl
daa
mov
xchg
dec
ds
ja
xor
mov
sbb
jmp
xchg
mov
push
iret
pop
adc
daa
xchg
filds
lock
stc
sbb
pop
cmp
xor
jg
push
loopne
sti
clc
push
and
dec
and
pop
jne
push
lods
fadd
jo
testb
shll
mov
and
cltd
popl
or
int
push
xchg
addl
push
dec
sub
inc
and
std
outsl
daa
movsl
out
cmp
popa
cwtl
push
outsl
mov
sub
movsl
stc
hlt
imul
lds
cltd
pushf
and
xchg
in
push
push
es
mov
aad
ret
aaa
dec
mov
or
and
mov
adc
push
daa
pop
ja
or
mov
movsb
leave
sub
and
mov
loopne
pusha
pop
ljmp
cmp
pop
sahf
popa
in
out
sahf
mov
ljmp
cld
cmpsb
cmp
sub
push
adcl
pop
jnp
movsb
aam
sbbb
push
les
push
shlb
mov
xchg
jecxz
sbb
cli
movsb
xlat
or
insb
rol
push
pop
data16
mov
popa
loop
fsubl
lcall
inc
cmp
test
sub
dec
repnz
lahf
or
inc
pop
jno
push
mov
pop
adc
iret
jge
dec
xlat
mov
jbe
daa
in
ret
jne
sahf
and
mov
fs
faddl
jns
adc
lods
pop
add
dec
sub
lods
xchg
xchg
mov
sub
out
test
ret
xlat
push
addr16
xlat
xor
insl
xchg
jno
cmp
pushf
cmp
jne
adc
push
pop
add
xchg
push
mov
jae
test
shl
stc
push
insl
xchg
pop
pop
lret
push
pop
push
cmpsb
mov
mov
pusha
jmp
rcrl
cmc
leave
push
imul
sarl
mov
adc
dec
and
jae
lahf
mov
sbb
push
shrb
mov
es
rorb
inc
into
in
aad
sub
xor
lcall
push
xchg
push
fwait
mov
xor
jge
adc
xor
nop
rcrl
and
pop
in
jmp
repnz
mov
shrl
cmpl
mov
pop
add
enter
mov
mov
pop
sarb
rcrb
add
int3
inc
push
outsl
movsl
loope
inc
lock
mov
mov
pop
push
dec
bound
add
test
shlb
add
mov
cmpsl
das
andb
adc
loope
xchg
pop
loope
test
daa
test
cmp
cld
and
sbb
push
jge
insb
mov
xchg
cld
ja
add
scas
iret
dec
test
cli
xor
ja
push
sbb
sub
xchg
mov
std
cmp
inc
repnz
lcall
enter
fsubs
movsb
inc
fistps
in
lock
and
cmp
cwtl
xor
and
xor
std
push
xor
pop
roll
add
ljmp
test
or
popf
ljmp
mov
and
arpl
movsb
clc
pop
leave
push
mov
jb
mov
shrl
mov
hlt
lds
add
push
and
and
adc
sub
repz
push
push
popf
vpslld
xor
cmp
ljmp
repz
add
hlt
fbstp
or
cmp
lods
inc
or
mov
insb
pop
cmc
mov
and
and
cmc
shrl
xchg
mov
push
arpl
popf
xchg
test
sbb
repz
loop
mov
sti
push
mov
push
in
sbb
jb
inc
sub
xchg
jp
adc
mov
data16
not
addr16
mov
xor
adc
sbb
xchg
mov
mov
and
cmpsl
dec
cwtl
ret
pop
pop
push
cmpl
xchg
xor
js
mov
xchg
aas
stos
jg
shll
fadds
rcl
int3
add
pop
divb
push
andb
or
sub
adc
rclb
repnz
icebp
cmp
enter
aas
popf
push
sub
dec
call
push
pop
inc
sbb
push
decl
das
sub
loope
ds
hlt
mov
sbb
lahf
popa
addr16
add
sete
orb
adc
es
sahf
repz
push
jmp
arpl
jmp
loopne
xchg
loope
movsb
lret
stos
pop
call
lods
rcll
inc
xchg
loopne
mov
stos
push
loope
mov
rclb
and
movsl
ficomps
jg
mov
sbb
add
imul
pop
scas
lock
inc
xor
and
decl
sub
xchg
imulb
in
jnp
jbe
jg
adc
in
scas
cmc
push
fcomp
int
leave
rolb
xchg
insb
shlb
loop
rcrl
push
adc
cmp
cltd
subb
insb
sti
push
imul
mov
sahf
jbe
jl
scas
add
pop
leave
add
mov
fisubrl
or
adc
sub
inc
xchg
pop
and
test
mov
push
popa
popa
xchg
pop
ljmp
fiaddl
imul
dec
or
fiadds
dec
sub
xor
sub
divl
call
lds
push
or
pop
jno
adc
movsb
mov
gs
lods
aaa
fcoml
scas
movsb
or
sarl
pop
or
sub
cmpsb
sub
inc
scas
mov
xchg
jge
add
stos
adc
lock
mov
push
mov
push
push
mov
std
push
fidivs
xchg
mov
cs
mov
xor
sub
das
enter
push
loop
pop
cwtl
mov
pop
repz
mov
mov
or
sbb
aaa
push
popf
fld
mov
sub
jns
fwait
les
test
rcr
adc
sarb
pushf
idiv
lea
jnp
sub
cld
or
dec
lods
mov
or
dec
test
out
and
push
fidivs
jne
sti
out
dec
imull
jge
pop
jo
mov
xchg
lock
imulb
aaa
int
xor
insl
mov
pop
mov
xor
jns
idiv
jge
mov
add
mov
pop
inc
jp
jb
insb
xchg
and
xchg
vpunpcklqdq
push
pop
jg
mov
or
fld
xorb
jl
push
inc
or
stos
sub
call
pop
and
mov
mov
sbb
sahf
mov
sarb
xor
mov
arpl
or
dec
mov
sti
xchg
or
dec
fiaddl
mov
xchg
repnz
cmp
pusha
mov
jae
or
sub
and
mov
clc
cwtl
jae
ljmp
out
test
outsb
dec
sbbl
sbb
pop
cld
xchg
addr16
movsb
mov
mov
scas
mov
xor
mov
cmpb
pop
imul
sarl
movl
std
in
push
inc
adc
cmp
repz
inc
jae
mov
mov
sar
jl
inc
and
sub
nop
cmc
push
popa
insl
pop
das
dec
aam
hlt
or
loopne
push
je,pn
mov
scas
xchg
jmp
rorb
pop
pop
testb
add
jb
test
or
inc
inc
cmc
adcl
in
cmp
ficomps
lret
idiv
jbe
les
jne
sub
mov
mov
stos
into
add
shrb
dec
movsb
outsl
ret
mov
push
push
inc
sti
inc
je
movsl
addl
aad
sub
sub
lcall
mov
or
cs
sbb
cs
mov
xchg
xlat
aam
fsts
int
arpl
inc
std
lods
aam
or
out
push
pop
arpl
ja
lods
jne
jmp
arpl
add
inc
mov
daa
test
push
sbb
iret
add
cmpsl
sbb
mov
or
ret
sub
push
sub
cmp
push
ds
in
in
pop
pop
int3
mov
sub
js
jmp
imul
cmp
xor
jecxz
ljmp
jnp
jmp
mov
sub
insl
and
loope
push
mov
rcrb
hlt
lahf
sub
mov
xchg
ds
outsb
cmp
xor
xor
mov
xlat
sub
jbe
push
bsf
xchg
or
xchg
push
aad
cmc
jmp
lcall
push
inc
popf
dec
icebp
or
rcrl
xchg
test
mov
cmp
mov
lods
mov
arpl
or
pop
out
mov
pop
es
push
dec
xchg
pop
jecxz
sub
adc
xchg
and
imul
ljmp
dec
mov
jnp
jg
ds
iret
adc
outsl
cmp
jno
addr16
jae
gs
sub
pop
add
int
push
sti
cld
sbb
mov
les
out
mov
pop
stos
mov
mov
int
nop
or
mov
adc
pop
and
cli
cmp
adc
jecxz
push
pop
cmp
lds
enter
es
pop
call
lret
mov
push
xor
mov
jmp
xchg
nop
pop
fmul
xchg
pop
bound
in
mov
xchg
mov
sub
test
cs
jae
int3
fsubrl
push
insl
mov
jl
inc
std
or
adc
and
push
cmp
pushf
imul
call
shlb
jo
lds
ret
aaa
mov
in
scas
popa
or
inc
data16
int3
leave
js
jbe
jae
sub
loope
popa
jecxz
lret
out
jl
ss
jnp
jp
insb
fidivrl
scas
arpl
push
pop
sub
out
call
xchg
sbb
jno
nop
or
dec
mov
mov
push
call
dec
test
mov
adcb
lds
and
mov
jns
fs
imul
int
or
loop
sub
dec
lea
shrb
adc
or
pop
loop
mov
push
lods
cmp
mov
icebp
repz
sbb
add
loop
stc
sahf
push
xor
arpl
and
push
mov
cld
cwtl
cmp
or
jecxz
in
jmp
in
sub
add
mov
mov
std
pop
int
and
or
xchg
es
push
nop
out
mov
xchg
xlat
hlt
mov
and
sub
dec
dec
jmp
cmp
sub
orb
pop
inc
push
pop
loop
cmp
lods
pop
and
xor
mov
lret
rolb
mov
mov
test
mov
in
int
hlt
xchg
cmpsb
push
sahf
loopne
out
dec
push
sbb
mov
xchg
jbe
pop
lods
mov
push
mov
add
jg
jno
shr
cmp
or
lret
nop
xchg
mov
movsl
dec
push
scas
mov
scas
dec
mov
rolb
mov
repnz
icebp
jle
dec
jmp
sub
out
dec
jo
adc
mov
xchg
xor
dec
jb
daa
and
stc
lahf
jns
pop
pop
aaa
repnz
cld
js
adcl
mov
in
xor
add
xchg
and
add
sbb
mov
js
sub
dec
stos
daa
xlat
cli
mov
jecxz
mov
or
imul
jecxz
mov
adc
push
xchg
xchg
insl
repnz
push
and
push
arpl
aaa
inc
sti
or
mov
test
and
mov
push
cmp
push
sub
jno
imul
jbe
roll
es
xchg
jle
push
sbbb
xchg
or
push
pusha
push
mov
sbb
inc
inc
xor
jb
push
sub
xlat
in
fistpll
inc
call
daa
adc
lcall
out
fwait
push
and
mov
sub
scas
mov
xor
xchg
xchg
mov
test
insb
orl
push
call
mov
and
sub
in
mov
cmp
mov
mov
cmp
movsl
adc
jns
and
jo
bnd
loop
inc
inc
xchg
mov
lret
or
mov
dec
lods
pop
cmpb
mov
jae
or
push
push
pushf
and
jbe
daa
dec
test
sbb
out
rorb
in
add
pop
pop
xchg
mov
mov
movsl
sahf
aam
and
mov
mov
add
imul
lds
fdivrs
push
cmp
in
mov
loope
mov
jle
adc
adc
push
pop
jmp
and
pop
jno
cmpsb
fildl
sbb
or
cmpsl
cmp
in
xchg
popa
filds
ja
in
outsb
hlt
mov
cmp
sti
inc
pop
dec
adcl
out
aam
leave
add
loop
iret
loopnew
push
xchg
lods
call
cmp
pop
push
mov
cwtl
push
add
stc
xchg
into
jns
adc
inc
jb
fiaddl
push
outsb
mov
or
outsl
mov
stc
ud1
xlat
aam
cmpsb
push
icebp
pcmpgtb
push
dec
add
stos
ret
stos
fadd
jns
arpl
sub
and
pop
pop
out
fidivrl
cmpb
dec
add
addr16
mov
adc
fnstenv
xor
ret
adc
adc
stc
xor
jne
xor
hlt
mov
dec
and
cmpsl
dec
dec
stc
cmp
lds
pushf
add
sbb
or
sbb
rcrb
xchg
xlat
or
mov
ss
xor
leave
mov
sub
add
mov
add
push
and
sbb
xbegin
out
mov
outsl
xchg
iret
aam
call
push
out
pop
arpl
pop
add
mov
pop
jne
and
test
test
mov
daa
cmc
popf
push
arpl
and
push
cmpl
imul
adc
mov
out
mov
push
wrmsr
dec
jmp
das
inc
rorl
sub
ds
pop
mov
das
into
repnz
and
pop
pop
fistps
loopne
push
outsl
cmp
mov
clc
mov
jo
std
stos
pop
or
lea
jge
or
loope
out
aam
inc
jp
inc
nop
insb
ds
and
push
sarl
jnp
pop
cmpl
dec
in
ja
mov
lods
aad
jp
call
xchg
bound
push
ljmp
les
and
or
clc
je
lret
jg
xor
ror
sub
mov
mov
jns
inc
js
mov
mov
orb
cmp
bound
sarl
arpl
xor
cli
lods
xlat
bound
mov
mov
in
add
andl
fcmovne
jb
sbb
mov
xor
in
addr16
std
mov
insb
cwtl
push
rclb
loope
mov
pop
push
sbb
and
mov
bound
push
lods
xor
lret
outsb
int3
mov
jl
mov
dec
jae
scas
sub
inc
sub
mov
jmp
mov
push
fidivrl
lahf
dec
xor
dec
mov
cwtl
fstpl
and
pop
cmp
jno
arpl
sub
xor
pop
pop
mov
adc
adc
jne
arpl
pusha
out
jmp
pop
jne
mov
fmul
and
rcl
sub
dec
imul
shll
fiaddl
mov
push
not
mov
test
imul
or
ret
or
std
xor
adc
aam
jg
repz
aaa
shll
repz
out
faddl
lds
scas
sahf
jg
ljmp
scas
repnz
push
xchg
add
test
jns
push
mov
icebp
repnz
sbb
cwtl
lock
mov
cltd
into
js
sbb
clc
mov
mov
push
jbe
fdivrs
or
pop
add
mov
mov
inc
adc
outsb
fbstp
lds
aas
loop
add
into
jmp
cltd
mov
lds
mov
js
xor
mov
inc
xchg
jp
or
dec
cmp
dec
ljmp
cmpsb
shrl
test
mov
xor
popf
sahf
pop
aas
pop
pop
jb
xchg
add
mov
jne
ja
cmpsl
lea
vcvtss2si
call
or
in
jg
scas
das
insl
pop
mov
mov
test
shlb
or
add
xor
cmp
sub
bound
in
sahf
or
sub
jl
test
mov
clc
icebp
adcb
cld
cmp
mov
imul
scas
fwait
rcr
xor
xchg
out
movsl
jns
mov
xor
ret
pushf
cmp
ljmp
pop
nop
js
cmp
mov
hlt
stos
pop
push
dec
and
pop
das
data16
insl
mov
aaa
lret
xor
das
and
pop
les
hlt
pop
jb
sbb
xlat
andl
hlt
das
mov
pop
lock
and
push
lock
dec
xchg
movsb
sub
test
and
popa
mov
jmp
or
jmp
lcall
mov
inc
adc
test
addr16
pop
imul
testl
repz
addl
subb
out
sahf
pop
sub
pushf
mov
dec
pushf
aad
je
test
clc
xchg
push
and
rcr
cmp
aad
xchg
jo
jmp
jnp
cmp
out
and
dec
lahf
mov
lods
lock
mov
lret
es
and
pop
aam
push
ror
sub
add
mov
cmp
fs
cli
xor
push
mov
andl
sbb
lods
jecxz
lcall
sub
inc
xchg
sub
addr16
faddl
in
in
xor
push
fdivr
fldt
mov
or
out
pop
stos
jmp
dec
loopne
test
arpl
jno
push
xchg
pop
inc
cli
loopne
in
lock
lock
scas
out
fnstenv
rcll
cmp
stc
jo
mov
rorb
outsl
call
cltd
lods
xor
ja
sub
mov
sahf
jmp
sub
and
ja
push
movsl
shll
mov
bound
data16
out
adc
mov
and
xor
test
aaa
pop
rolb
ret
dec
or
cmp
icebp
mov
add
cmpsl
cmp
sub
iret
pop
pop
insl
dec
jl
or
dec
movsb
inc
sbb
dec
ljmp
push
add
dec
jns
jecxz
xchg
je
or
xor
or
inc
aas
mov
cli
cmc
rcll
xor
std
pop
cmp
lods
mov
insb
xor
cwtl
xchg
scas
mov
xchg
sub
inc
jae
jo
sub
out
ud2
dec
inc
inc
push
imull
jb
andl
cmpl
dec
sti
lahf
cmp
inc
mov
and
pusha
mov
shrb
or
leave
lcall
jl
dec
inc
ror
jno
stc
addr16
dec
push
call
mov
das
sti
fcoms
mov
fstps
dec
add
outsl
mov
xor
insl
rcll
loope
xchg
mov
xor
pop
xchg
out
inc
call
inc
mov
mov
push
mov
push
ss
mov
push
push
push
mov
jp
mov
enter
fcomip
cmp
pushf
pushf
mov
int3
stos
mov
pop
stos
xor
pop
xlat
adc
push
mov
adc
jno
ret
jg
jg
adc
leave
sbb
jmp
adc
or
mov
add
enter
mov
adc
sbb
movsl
mov
mov
mov
cmc
inc
jno
fcmovb
pop
cmp
cld
jb
xlat
aad
mov
inc
in
xor
jo
loop
jnp
and
loop
inc
mov
fstpl
jne
ret
scas
rcl
mov
xchg
fcmovnb
je
cli
cmp
dec
cmpb
std
movsl
mov
or
mov
dec
dec
and
push
mov
arpl
fstl
test
adc
loop
adc
jg
lcall
and
jbe
movsl
push
std
and
xlat
test
in
mov
idivb
daa
stc
dec
mov
test
ja
pop
test
pop
jb
push
push
clc
out
mov
testb
push
nop
sub
fdivs
popa
daa
loop
mov
test
dec
xlat
je
out
sub
dec
hlt
mov
jo
je
xor
push
jbe
mov
add
and
mov
push
loope
or
add
or
ljmp
imul
jge
adc
push
subl
mov
xlat
sub
stos
pop
ret
leave
sbb
cltd
and
sub
fdivr
and
push
sub
imul
inc
jbe
lcall
movsl
mov
dec
jp
incb
repz
xorl
mov
int
inc
sbb
sbb
nop
jne
sbb
aaa
push
loop
mov
cmp
shlb
out
bnd
ss
mov
das
rorl
out
mov
pusha
test
out
inc
xor
in
sub
fmull
jg
fcmovnb
or
inc
das
mov
or
test
hlt
sahf
push
cmp
lods
add
loopne
jns
insb
add
movsl
icebp
imul
xchg
pop
gs
call
sbb
lock
add
dec
lret
dec
sub
jg
sbb
pop
lcall
push
xchg
insb
loop
test
movsl
jae
popf
data16
pop
sti
popf
mov
ss
sub
into
js
arpl
xor
sub
pop
sub
adc
int
sub
scas
pusha
sbb
pop
sahf
lret
mov
push
mov
cmp
xchg
popf
test
std
pop
enter
mov
mov
es
add
daa
arpl
imul
jne
loopne
fcoms
fiadds
inc
and
jo
pop
ljmp
clc
adc
pop
mov
xor
add
push
fmull
lret
mov
dec
popa
push
pop
push
push
fbld
out
sub
sub
jnp
addl
jl
adc
nop
sbb
ljmp
mov
mov
push
inc
cld
jns
pavgb
rorb
add
cmp
push
fs
add
scas
inc
rorb
outsl
push
call
mov
sub
mov
xchg
in
jne
adc
pop
or
mov
arpl
dec
jle
push
loope
mov
shl
arpl
inc
repnz
fcomip
dec
mov
push
adc
sbb
adc
cmpl
xchg
icebp
ljmp
jg
or
jmp
sahf
mov
push
inc
test
sub
sub
mov
in
push
arpl
cli
xchg
loop
lcall
lds
jmp
xlat
pop
in
icebp
loop
inc
xorb
leave
sub
lcall
jg
cmpsb
mov
in
mov
pusha
nop
out
push
daa
jns
lret
int
imul
pusha
pop
push
xchg
mov
pop
dec
inc
sub
mov
cs
iretw
dec
push
addr16
inc
or
add
fstpl
sub
or
add
add
mov
jae
fnstcw
outsl
dec
pop
jo
in
dec
insb
cli
xor
add
int3
push
push
pop
dec
das
xchg
popa
mov
test
mov
mov
outsb
cmpsb
and
mov
mov
push
mov
sti
push
arpl
cmc
es
mov
sbb
imul
mov
mov
ret
mov
lret
cmp
rorl
jno
add
sarl
sbb
mov
jns
adc
sub
jp
lea
dec
roll
sub
outsl
jp
ds
enter
rol
jmp
cs
out
sub
push
dec
mov
pop
in
aad
outsb
sbb
stos
add
mov
sbb
mov
sarb
shr
fstpl
testl
jecxz
add
lea
pop
test
lret
cmp
out
mov
loope
pop
xchg
adc
out
mov
pushf
es
dec
adc
xor
and
add
call
cwtl
fadds
sarl
aam
iret
fisubl
fmulp
imul
insl
pop
mov
fcomps
outsl
cmpsb
shl
cli
jmp
stc
clc
sarb
mov
xchg
push
les
pop
std
jo
adc
scas
shlb
out
xchg
xchg
lret
sbb
dec
scas
adc
xchg
aas
jg
pusha
dec
int3
inc
fldenv
push
iret
mov
pop
lretw
xchg
shrl
gs
fsubrl
inc
sub
aas
leave
mov
orb
sbb
rorl
cmpl
stc
pop
add
loop
or
test
lcall
jg
test
vmovaps
aad
fs
pop
mov
in
pop
and
pop
and
push
inc
mov
pop
sbb
push
icebp
cmp
xchg
add
inc
fisttpl
imul
add
add
pushf
mov
shl
push
lret
bound
or
adc
adc
loopne
inc
jmp
cld
shll
jmp
and
or
ret
pop
enter
cmove
inc
inc
rcrb
xor
rcrb
adc
pand
jp
fsts
pop
mov
push
cmpl
mov
or
cltd
push
inc
repz
repnz
and
inc
stos
add
cmp
icebp
das
pop
add
add
and
jo
ljmp
lods
cmpsb
movsb
add
ffreep
mov
rcll
mov
stos
inc
or
add
mov
pusha
mov
add
xor
cli
xchg
rolb
pop
xchg
mov
aad
dec
test
mov
outsl
sub
add
jecxz
cld
push
je
repz
jbe
sbb
jecxz
pop
hlt
mov
jmp
cmp
hlt
es
addr16
or
or
inc
and
repnz
push
mov
nop
cmpsb
arpl
mov
ret
loopne
test
pop
xchg
js
jle
mov
and
pop
fyl2x
pop
test
lret
out
je
je
inc
icebp
mov
arpl
jb
xchg
push
les
xchg
orl
shrl
pop
dec
and
jp
inc
aam
pushf
cli
dec
mov
mov
out
sahf
std
cwtl
mov
imul
lret
ljmp
xlat
pushf
jne
ficoms
push
jp
sahf
adc
outsl
mov
and
jle
testl
fistps
dec
out
xor
inc
nop
cmc
sub
pop
pop
scas
cmpsl
dec
iret
inc
std
mov
idivl
das
cli
jnp
push
pop
xchg
cmp
inc
mov
pop
xchg
cmp
addb
lea
dec
sub
lods
xor
adc
xchg
mov
imul
ret
cmpsl
shl
not
js
xor
or
int3
mov
fldcw
inc
push
pop
mov
stc
pop
inc
mov
or
inc
repz
mov
adc
popf
sub
popa
insl
scas
ljmp
test
fwait
scas
add
and
aam
adc
repnz
mov
and
jns
push
lock
inc
into
int
or
ror
popf
in
jl
sti
in
pushf
stos
cwtl
mov
inc
sub
jl
dec
push
daa
cmp
xor
mov
push
stos
or
clc
mov
mov
dec
outsb
test
dec
repz
xor
fdivrs
pop
jns
adc
enter
push
sbbl
lods
divl
mov
pop
add
mov
lods
lods
notl
push
xlat
in
jmp
sub
push
xchg
sti
mov
jmp
xor
cmp
test
sar
in
push
push
push
add
fisttpl
adc
in
push
insb
fs
out
mov
push
jmp
ljmp
jb
jo
movsl
cmp
call
xchg
mov
and
xchg
cmpsl
pop
jno
sarl
and
or
xchg
push
pop
imul
xchg
idivl
decb
mov
hlt
sti
cmpsl
or
lahf
jl
mov
in
sub
mov
fnstenv
mov
cwtl
cmp
mov
or
arpl
lea
rclb
mov
add
js
fldenv
sbb
ljmp
rcrb
out
inc
push
push
mov
or
fnop
jne
lea
imul
sbb
or
and
or
mov
in
adc
add
push
fsubs
xlat
adc
jbe
cwtl
testb
add
mov
and
add
arpl
push
mov
jmp
mov
stos
jmp
mov
pop
shlb
jle
add
cmc
fnstcw
push
data16
sahf
push
xchg
aaa
and
lds
jo
push
stos
push
inc
cld
pop
dec
inc
or
inc
pop
push
adc
jno
cmpsb
sarl
in
add
mov
mov
insb
jecxz
lods
mov
loope
fstpt
insl
sub
je
sub
pop
test
mov
mov
fsubrs
xchg
pop
inc
cmc
and
cs
jnp
ret
fcmovu
mov
aam
jge
add
iret
xchg
and
and
fxch
pop
sub
cmp
cmp
xchg
sbb
out
push
neg
adc
cmp
repz
insl
mov
dec
daa
inc
and
xchg
xchg
jo
ret
xlat
imul
inc
jl
outsl
ret
mov
movsb
pop
dec
or
mov
cmp
mov
sbb
jle
lret
enter
xchg
dec
push
enter
sub
inc
jne
subl
jae
push
stc
push
add
decb
cmp
xchg
push
fwait
dec
into
insb
jle
mov
sahf
mov
xor
xchg
mov
loope
dec
pusha
out
stos
cmp
xchg
add
nop
fsts
jb
sub
add
scas
and
popa
xchg
push
push
push
jno
push
xor
and
dec
ljmp
push
ds
ficompl
loop
iret
lcall
lret
push
adc
in
mov
ds
jl
xchg
jp
fstp
xor
or
icebp
fsts
scas
push
mov
div
add
mov
movsb
xchg
fsubrl
ds
jns,pt
lds
adc
and
push
mov
insl
or
sti
js
cmp
test
xor
fsubp
das
stos
and
jno
ljmp
filds
outsl
jp
mov
push
add
jmp
outsl
sub
les
inc
fcom
inc
out
pop
xorl
push
push
dec
add
lds
or
neg
push
mov
pushf
and
lcall
insb
mov
lret
mov
icebp
int
call
sti
sahf
or
mov
iret
adc
dec
push
adc
mov
fcoml
out
outsl
ds
xchg
pop
jp
and
sbb
daa
loop
les
pop
adcb
mov
cmpsl
dec
sbb
jge
push
sbb
sahf
ja
xchg
stos
push
fsubrl
mov
fiadds
mov
sub
push
lods
adc
test
pcmpgtd
lcall
push
adc
es
pop
mov
sub
inc
insb
mov
dec
cld
and
stc
jmp
mov
push
xchg
popa
popl
out
xchg
popf
mov
ja
insb
popa
or
ret
mov
or
or
sbb
fbld
xchg
add
mov
pop
or
cli
and
icebp
xor
mov
fstl
xor
sbb
mov
mov
mov
jb
inc
repz
pusha
cmp
subb
pop
adc
imul
xlat
mov
stos
cmp
shl
fsubrs
mov
clc
add
jg
xor
mov
mov
jbe
mov
add
cmp
imul
mov
testb
cmp
pop
cmp
mov
mov
mov
repz
arpl
dec
into
lcall
dec
js
mov
ljmp
and
xor
pop
fsts
inc
in
push
ror
in
ret
mov
sbb
push
scas
out
pop
aad
xchg
and
fadds
xchg
or
in
mov
inc
adc
nop
pusha
mov
inc
scas
and
lds
push
icebp
popa
inc
inc
pushf
sub
mov
enter
push
dec
es
jnp
xchg
mov
push
sub
xor
mov
lds
cwtl
lret
pop
ret
sbb
repz
mov
repz
test
and
loopne
push
xchg
mov
adc
mov
scas
stos
sub
mov
pusha
ja
xchg
push
jecxz
stos
ret
jg
inc
cmp
movl
icebp
adcb
mov
and
cld
adc
fsubrp
mov
add
xchg
int3
cld
mov
gs
jmp
sbb
xchg
jne
sub
sar
mov
imul
mov
add
iret
iret
mov
sarl
sti
inc
fimull
das
popf
lods
jnp
rorl
ret
rcrb
das
std
cmp
enter
xchg
int
std
xchg
lret
push
and
lcall
les
add
mov
inc
cltd
jecxz
enter
cmp
ss
sahf
mul
sbb
sbb
out
jg
pop
sbb
adc
hlt
inc
dec
les
mov
jmp
shrb
addr16
lock
cwtl
mov
dec
std
and
cmp
roll
jle
out
scas
iret
pop
call
and
lcall
sbb
inc
inc
mov
lahf
pop
adc
testb
int
dec
ret
ds
outsb
or
inc
and
inc
mov
mov
mov
outsb
mov
mov
fwait
xor
insl
das
push
jb
frstor
roll
cmp
imul
mov
jbe
fs
popa
pop
pop
sahf
jmp
cmp
and
cmpsl
insl
mov
mov
arpl
hlt
outsb
push
out
sub
repnz
and
mov
xchg
test
and
aam
stos
icebp
jb
jge
int3
mov
imul
push
dec
mov
push
jb
add
sahf
scas
mulb
xchg
cmp
xchg
stos
ds
fsubrs
hlt
push
xor
int
jne
xchg
push
or
mov
adc
repz
mov
stc
xchg
cmp
sub
push
pop
xchg
push
aas
jnp
out
dec
daa
fsub
mov
test
pop
mov
scas
popf
mov
repnz
sahf
fcmovu
jle
pop
lret
or
int
testb
sub
test
dec
sarl
add
shl
inc
sub
jbe
inc
aad
scas
xor
inc
mov
mov
fldl
and
inc
lods
mov
gs
mov
jns
or
mov
loop
cmpsb
mov
cmpsl
push
xor
jmp
fidivrl
iretw
mov
sub
ljmp
mov
xchg
pop
aam
xchg
scas
rorl
nop
push
xchg
add
adc
and
inc
cmp
into
cmpsl
cli
sub
jae
push
ss
push
nop
sbbb
sahf
sbb
or
add
push
insb
xor
push
dec
mov
int3
in
in
es
in
inc
imul
popa
mov
adc
jnp
push
mov
cmp
in
rcrl
mov
mov
mov
aaa
clc
mov
sbb
lock
push
push
pusha
mov
xchg
mov
push
fildll
sbb
mov
xchg
rcrb
jge
jae
mov
push
ficompl
call
push
jno
stos
mov
adc
push
mov
sbb
ret
fsubr
cmpsl
mov
testb
roll
inc
mov
mov
push
lret
loope
mov
xchg
mov
hlt
mov
andl
mov
jno
test
loop
dec
fsts
jg
std
stos
add
mov
cmpsl
pop
popf
mov
out
addr16
xor
icebp
movsl
sub
aaa
xor
popa
and
push
dec
cli
jnp
test
adc
mov
sub
test
mov
lcall
arpl
stos
mov
jle
sahf
adc
or
jge
daa
lret
test
icebp
mulb
fcoms
xor
popf
xor
sahf
jecxz
mov
xchg
pushf
inc
scas
lods
popf
lds
bsr
cld
std
test
or
sbb
inc
orb
fs
add
inc
xchg
push
popa
fs
addb
jb
mov
pop
repz
cmp
ja
jmp
add
jno
mov
dec
mov
arpl
push
scas
pop
inc
pop
test
mov
btc
cmp
inc
xor
mov
jno
call
push
fldl
aas
pop
daa
js
dec
jge
pop
xor
jb
les
sti
mov
mov
dec
lea
ds
and
inc
jns
lock
es
jns
push
jle
test
xlat
pop
adcb
cld
lea
into
fidivs
push
mov
repz
imul
adc
ret
add
mov
out
jo
enter
jmp
in
sti
sub
add
pop
jno
sub
rcrl
jbe
push
cwtl
adc
sarb
enter
or
mov
jp
movsl
jg
sbb
mov
pop
or
add
data16
fbstp
mov
push
fisttps
std
or
pop
addr16
mov
insb
or
imul
arpl
ss
jbe
push
add
jp
mov
jne
xchg
or
add
aas
adc
sbb
test
cmp
inc
rol
jl
cmp
inc
or
fwait
xor
fadds
mov
ja
in
sub
adc
aam
jl
arpl
xor
lods
sub
add
stos
mov
cmpsb
mov
in
add
jns
ds
shll
int3
inc
inc
icebp
pop
mov
xchg
scas
mov
or
fimuls
mov
in
jp
sbb
arpl
iret
push
push
mov
push
sub
lock
pop
loopne
cltd
mov
mov
inc
gs
fcoml
jbe
inc
xchg
mov
repnz
sbb
inc
dec
lret
cmp
imul
inc
adc
movsb
and
dec
lods
fcomip
mov
push
leave
adc
das
inc
in
cltd
roll
add
inc
jo
shrl
and
sbb
gs
mov
fiadds
shrb
adc
popf
dec
in
mov
xchg
mov
loop
push
in
and
cmpsl
stc
inc
imul
xchg
adc
jp
mov
repz
mov
sub
push
xor
ret
jge
les
inc
fwait
jnp
faddl
dec
ficomps
ja
inc
fadd
in
push
lods
movsl
mov
xchg
add
jl
jl
xor
push
add
pop
in
mov
mov
fisttpl
rorl
xlat
hlt
mov
stos
in
dec
ret
pop
aaa
jp
pusha
inc
xchg
jae
arpl
or
jnp
ljmp
pop
inc
push
pusha
out
and
je
mov
or
pop
idivb
dec
cld
mov
ljmp
repnz
add
dec
sti
ds
or
pop
daa
leave
and
mov
outsb
xchg
push
and
mov
enter
jns
add
es
pushf
or
pop
add
pop
movsl
cmpsb
mov
mov
rcll
push
sbb
inc
dec
imul
outsb
popa
mov
mov
hlt
jmp
lods
mov
into
push
and
cmp
sub
add
xor
mov
xchg
or
xchg
dec
cmp
les
cmp
cmp
pop
sbbb
stos
xchg
sbb
into
mov
sarl
testb
mov
xchg
mov
ret
mov
in
or
sti
inc
add
xchg
mov
adc
ljmp
and
inc
ljmp
sbb
push
pop
das
mov
in
shll
add
lcall
pushf
push
mov
imulb
imul
std
sbb
int3
gs
loop
cltd
cld
pop
mov
pushl
aad
cmpsb
xor
pop
lods
dec
hlt
repz
or
or
mov
rolb
mov
cmpsb
es
mov
movsl
cmpb
movsl
vpminub
add
nop
adc
aad
scas
out
outsb
in
push
cmp
pop
sub
icebp
lret
fiadds
repz
push
mov
mov
pop
and
sbb
popa
les
xchg
jo
xor
mov
mov
es
sbb
mov
pushl
in
mov
out
sub
movsl
mov
sub
in
insb
int3
addr16
and
mov
repz
or
add
cmc
cld
xchg
sbbl
mov
aas
jg
mov
xor
inc
ss
sub
cmp
and
stos
data16
cmp
dec
repz
lahf
mov
adc
push
jb
fistps
inc
idivl
int
adc
add
fmull
fldcw
test
cmpsl
fistpll
push
test
xchg
rclb
mov
sub
sub
and
int3
sbb
arpl
cmp
add
pushf
sbb
jmp
xor
xor
outsb
adc
sub
jae
imul
addr16
in
pop
xlat
icebp
leave
or
pop
testl
mov
movsl
pop
int
cmp
or
movsb
daa
insl
push
lds
xor
sbb
fidivs
xchg
je
or
clc
cmp
or
sbb
sbbb
lods
lret
jmp
add
mov
inc
xchg
inc
xorb
pushf
push
mull
movsb
in
movsb
jmp
repz
xchg
jg
jbe
out
adc
xor
push
xor
xchg
adc
mov
out
fcoms
and
hlt
xor
fwait
pushf
or
aam
mov
sub
dec
mov
stos
or
xchg
xchg
daa
sub
add
or
stos
clc
jle
jnp
add
or
mov
jge
outsl
sub
es
inc
xor
loopne
rclb
jo
shl
xchg
ret
push
daa
adc
pop
ds
and
int3
pop
aas
cmp
jl
aas
pop
add
cmp
inc
mov
add
jg
jo
cmc
insl
subb
cmp
inc
xor
ja
sti
imul
out
dec
sbb
xor
pop
sub
sub
pop
jns
movnti
popf
leave
negb
xchg
and
test
fstpl
mov
cmp
inc
gs
lretw
xlat
jnp
jno
pop
aas
sub
push
inc
scas
pop
lahf
gs
mov
andb
push
in
mov
xor
mov
mov
leave
ja
push
jns
sub
mov
pop
inc
adc
arpl
jecxz
jp
fnstcw
in
rol
movsl
scas
and
fldl
pusha
pushf
cwtl
test
cld
add
jge
popa
mov
adc
je
push
rcll
sti
add
cmp
lea
xor
cmp
lret
repz
inc
add
cmovs
gs
push
mov
mov
pop
mov
sar
add
sbb
inc
mov
movsl
fwait
xor
pop
cmc
jb
sub
jns
test
sbb
repnz
pushw
xchg
fbld
pusha
mov
rcll
sbb
notl
dec
int
fimull
pop
mov
test
mov
aaa
sub
mov
rorb
or
sbb
and
or
inc
pop
cmp
dec
add
sub
test
cmpsb
sub
mov
int3
dec
lret
adc
std
popf
mov
cmpsl
jg
push
pop
xchg
cmp
popf
mov
bound
ljmp
cmp
clc
push
and
jne
xchg
sbb
outsl
push
adc
fnstsw
cmpsl
hlt
pusha
or
xor
cld
cmpl
in
mov
lret
cli
fldcw
shr
mov
mov
dec
loope
shlb
push
cmc
cmp
pmulhuw
test
test
sahf
adc
sub
movsl
sahf
xchg
xor
dec
jmp
pop
ds
test
and
jbe
daa
movsl
ja
ficoml
mov
push
lret
ja
iret
xchg
les
mov
lds
and
out
leave
sub
outsl
mov
mov
cmp
jno
dec
movl
enter
and
movsb
testl
test
add
mov
shlb
inc
jnp
aaa
or
sti
ss
jl
movsb
ror
out
ja
mov
push
cld
lret
or
jge
sbb
nop
lcall
adcb
pop
imul
cmpsb
in
imul
stos
mov
pop
pop
sub
in
out
inc
lret
loopne
mov
sub
test
imul
inc
icebp
xor
pop
push
cmp
adc
fs
decl
push
push
pop
fwait
cli
mov
inc
lock
bnd
mov
sub
jle
or
stos
icebp
cwtl
push
jmp
and
aam
add
dec
add
shlb
mov
mov
sbb
cmp
xchg
adc
xchg
and
mov
pushf
pop
mov
xor
jge
jp
mov
push
dec
pop
sbb
mov
push
cli
aad
mov
add
fidivs
push
nop
mov
inc
or
xlat
lret
jp
iret
dec
or
dec
loopne
jbe,pn
aaa
loop
divb
inc
icebp
fstps
push
fdiv
xchg
or
addr16
adc
rclb
xchg
pop
int
jns
cmp
fimull
cmp
mov
es
or
xor
scas
xchg
sbb
fs
jmp
sub
outsb
or
dec
cmp
repz
mov
repz
dec
push
cmp
cmp
mov
add
int3
lods
sarl
push
sbb
test
add
popf
mov
out
scas
mov
outsb
popf
sub
out
mov
xor
mov
fldcw
and
or
jg
scas
sbb
fildl
lahf
and
test
scas
add
in
pop
mov
mov
jnp
in
hlt
mov
xchg
loop
and
in
mov
pop
iret
pop
sbb
fldt
cld
jmp
and
mov
jge
pop
std
iret
out
mov
add
mov
lods
jg
hlt
adc
fildll
mov
sub
lret
aas
cmova
sbb
sahf
das
and
mov
inc
inc
ja
mov
fistpll
mov
push
xorl
push
sbb
popf
lea
mov
lock
adc
movsl
cmp
jns
inc
pop
xchg
int
sbb
mov
aam
pop
dec
out
rclb
repnz
into
push
mov
mov
mov
addr16
xchg
imul
addr16
pushf
sbb
pop
mov
jl
fs
bound
sti
out
mov
jl
pop
xchg
cltd
mov
push
sbb
js
jno
mov
cld
leave
fbld
inc
add
loope
icebp
icebp
and
add
sbb
fildll
sub
cwtl
xchg
pop
push
div
scas
nop
addr16
xchg
jns
loope
test
sarl
sbb
dec
pop
aam
hlt
cmpsb
push
out
in
mov
aad
pop
pop
imull
jl
push
cmc
xchg
or
inc
je
mov
mov
pusha
pop
mov
out
xchg
aaa
inc
jp
rcrb
or
pop
ss
pop
sbb
push
xchg
std
daa
stos
pop
shlb
push
iret
cli
or
aad
in
insb
inc
jnp
adc
add
dec
cmpsb
cmp
mov
sub
cmpsl
rorl
mov
push
xchg
pusha
xchg
cmp
adc
mov
inc
dec
leave
jnp
push
mov
cld
xorb
lock
mov
pusha
add
dec
xchg
jo
mov
int
fxch
push
mov
hlt
xchg
xchg
jle
test
xchg
imul
in
inc
into
add
bound
fsubrs
or
in
test
jmp
lahf
and
fwait
pop
mov
lret
shll
lea
xchg
cmp
lret
inc
push
xor
int3
pop
mov
mov
xchg
mov
sub
mov
or
mov
scas
dec
sub
cmpsb
adc
dec
pop
movlps
outsl
data16
sub
fldenv
sub
outsl
mov
cmpsb
xor
jns
lahf
mov
outsb
mov
or
out
xor
add
lret
push
jp
imul
dec
and
lock
fs
test
adc
les
scas
lock
popf
fmull
add
mov
fcoms
push
sbb
jp
addl
adc
movsl
add
subb
or
fcmovnu
sub
or
pop
cmp
xchg
xchg
pop
sub
add
mov
es
sub
fadds
and
cmp
data16
andl
fcomp
mov
jg
jbe
cmp
sbb
outsl
aad
mov
fucomip
sahf
push
popf
addr16
fcmovbe
push
cmovno
dec
push
stos
pushf
jbe
dec
xchg
mov
add
movb
imul
nop
cmp
cld
pop
iret
mov
mov
jge
arpl
sbb
jne
das
int3
dec
sub
leave
adc
xor
popf
sbb
and
iret
popf
pop
xchg
jbe
hlt
addr16
inc
adc
add
xchg
loop
sub
mov
das
clc
sahf
es
jg
jo
inc
inc
cmp
clc
xchg
popf
adc
clc
ret
dec
mov
pop
xor
iret
lods
add
test
lcall
cltd
mov
dec
imul
jae
les
xchg
es
push
jmp
xchg
fcoms
lret
int3
enter
sbb
jno
adc
lods
push
mov
pop
test
sbb
imul
lock
adc
mov
andb
jb
mov
jae
cmp
mov
pusha
sub
fwait
adc
add
stc
cld
fidivrl
daa
xor
aas
push
loope
mov
ss
mov
cmp
je
lahf
fsubrl
pop
sbb
lods
pusha
mov
out
push
fadds
pusha
mov
mov
mov
dec
aas
int3
jecxz
dec
jp
shlb
and
or
mov
mov
push
divb
xor
and
movsl
sarl
sbb
in
fdiv
adc
rolb
mov
mov
ret
movsb
mov
xchg
mov
ret
dec
push
pusha
pop
adc
je
mov
xchg
enterw
loope
gs
inc
int
sahf
adc
pop
pop
fisubrs
mov
lcall
mov
mov
pop
cmc
sbb
test
xchg
xor
fs
push
leave
sti
fists
sbb
jae
popl
add
xor
leave
adc
fwait
and
lds
lock
stos
xor
loope
mov
test
insb
data16
fimuls
adc
mov
repz
in
xchg
jmp
into
jl
int
jle
sbb
aad
sbb
mov
or
mov
in
inc
add
imul
gs
movsb
mov
push
mov
pusha
mov
add
push
jbe
lock
pop
xor
add
in
xor
adc
hlt
pop
pop
add
cltd
adc
xor
add
sub
push
pop
ds
daa
mov
lock
mov
push
ror
push
scas
xor
out
pop
loop
hlt
lahf
es
fisttpl
sbb
in
in
je
insb
daa
rorb
ljmp
inc
leave
jge
sub
xor
fistps
jp
mov
mov
adc
cltd
xchg
and
mov
dec
fists
push
pop
mov
test
add
fimuls
add
xchg
cld
push
sub
outsl
or
mov
sub
data16
iret
xor
and
push
pop
adc
push
sub
cltd
sbb
and
imul
push
pop
jns
push
rorb
sub
sub
push
sub
mov
mov
movsl
decl
jb
pop
lret
sbb
in
stos
sbb
push
push
fldcw
sbb
fdivs
inc
cmovnp
sub
sarb
dec
andl
cmp
cmpsb
and
jb
int3
loopne
jge
xlat
xchg
push
jp
sbb
pop
aam
fs
inc
sbb
and
and
mov
sbb
mov
aam
cmp
pop
ljmp
jmp
hlt
sbb
mov
das
fsubs
lret
xchg
ss
js
pop
in
xchg
cmpsl
js
ret
xchg
pop
and
outsb
sarb
pop
push
or
scas
mov
icebp
ds
mov
into
mov
cli
mov
clc
inc
stc
and
pop
sbb
neg
xor
pop
mov
mov
in
sub
incb
or
inc
lods
pop
arpl
adc
pop
mov
stc
pop
xchg
mov
mov
das
scas
pop
push
cmpsl
sahf
add
mov
cwtl
xlat
or
fistpl
push
xchg
dec
and
xor
fimull
jp,pt
aaa
jmp
repnz
movsb
or
notl
dec
lods
inc
cmpl
mov
mov
push
out
movsl
insl
cli
lock
mov
hlt
lcall
js
jne
dec
daa
lret
icebp
inc
or
dec
test
inc
popa
xchg
cli
push
xchg
fists
iret
mov
mov
inc
hlt
mov
js
test
ss
add
pushf
es
rcrl
loopne,pn
push
in
pop
dec
mov
gs
sub
add
test
xor
sub
push
sub
aas
dec
scas
test
fnstsw
pop
movsl
mov
add
push
add
mov
mov
out
xor
pusha
mov
or
insb
sbb
pop
cmp
aad
bound
clc
cmpsl
pop
or
fwait
int3
aaa
fldcw
fisubl
lods
xchg
mov
mov
jnp
subb
or
repnz
xor
cwtl
and
mov
xor
adc
test
jb
loop
inc
lock
out
fstpl
adc
out
loope
jecxz
jge
pop
lret
movsb
cmp
sbb
lahf
mov
pop
incl
cmpl
xor
adc
xchg
jnp
cmp
mov
dec
push
jns
rcll
imul
ret
xor
sub
sahf
jo
repnz
or
add
mov
jo
jne
std
into
inc
sarl
jne
xchg
sahf
pop
jo
xchg
ficoml
rcrb
jmp
cltd
push
pop
inc
orb
fsub
outsb
or
mov
jg
popa
ds
addb
or
mov
les
idivb
in
stos
ds
sub
dec
fadds
das
sahf
jo
addr16
ja
shll
lret
rorb
cld
call
xchg
xchg
sub
in
jbe
faddl
pushf
scas
xor
cmp
and
jl
inc
jl
shll
mov
jmp
mov
rorb
pop
sti
rcll
je
loope
push
sti
int3
ljmp
repz
ret
fidivl
into
test
inc
rclb
cmpsl
pop
fs
or
xor
adc
jns
cwtl
pusha
or
test
int3
or
and
cmp
xor
gs
ljmp
pop
pushf
imul
add
sbb
sub
notb
sbb
int
js
pop
in
adc
mov
adc
shll
xlat
cmpsl
pop
cmp
inc
inc
inc
sbb
and
jnp
cwtl
mov
int
jg
pop
sbb
jp
lods
xchg
mov
filds
insl
pop
jbe
js
cli
sbb
add
mov
fsubs
insb
sub
mov
hlt
sti
imul
enter
stc
jecxz
rcrb
cmp
repnz
or
std
or
add
lds
xor
push
mov
lcall
orl
arpl
insb
pop
es
sub
shrb
shlb
call
pushf
dec
pop
cld
daa
push
adc
jge
popf
imul
inc
aas
fs
ljmp
in
in
cmpl
cmp
cltd
int
pop
push
or
cmp
lea
fs
jle
add
sub
hlt
xchg
bound
mov
cmp
push
push
loope
data16
mov
gs
inc
or
and
add
mov
mov
dec
pop
jp
out
xlat
push
sbb
rclb
xor
adc
in
xchg
xchg
lahf
fwait
aam
aam
cmp
sub
out
out
mov
into
inc
movsl
jge
jno
jg
push
jno
xor
aam
pushf
jmp
lcall
rcll
imul
out
jp
adc
jbe
cmp
add
addr16
dec
testb
push
inc
aam
es
rcl
lret
jb
int
inc
sbb
adc
sbb
ljmp
xchg
icebp
rorb
mov
imul
cmc
cmp
lea
pop
adc
fldenv
mov
add
sbb
movsl
repnz
pop
lock
mov
or
decb
ret
pop
test
adc
cs
cmpsb
out
push
mov
iret
mov
out
dec
or
or
add
shll
mov
xchg
sbb
mov
pop
adc
cmc
jb
jle
lock
daa
sbb
out
stc
jns
or
inc
xor
test
adcl
pop
push
sahf
enter
out
leave
xor
jo
test
adc
inc
fwait
ret
inc
add
andb
push
shlb
shll
movsl
outsl
outsl
adc
mov
in
push
int
or
fisubrl
into
insl
repz
dec
scas
or
pop
push
loop
xor
test
inc
push
popa
mov
xor
pop
popa
sub
jp
add
ss
imul
jp
pop
loope
cltd
stos
cmp
add
fmull
and
test
stos
sub
inc
xchg
shlb
movsb
add
dec
mov
test
fbstp
mov
imul
or
mov
cmc
cmp
fs
inc
ret
or
sbb
test
fmuls
xor
hlt
hlt
hlt
mov
aaa
lcall
sti
bound
fisubrl
in
in
loopne
iret
iret
xchg
and
cmp
push
popa
mov
pop
clc
mov
cmpsl
adc
sbb
adc
adcb
dec
fwait
imul
arpl
and
or
inc
lahf
lret
jl
push
mov
pop
insb
into
dec
cltd
cmp
out
ljmp
mulb
mov
or
orl
enter
pushf
cmc
mov
loope
aad
lods
cmp
cmpsb
lahf
stc
adc
shl
rclb
stos
push
cld
mov
adc
mov
cmpsl
mov
pushf
rclb
divl
imul
sbb
bound
jl,pt
mov
push
xor
jo
mov
pop
daa
stos
jo
cmp
adc
mov
dec
lcall
dec
push
mov
insb
push
push
sbb
repnz
or
xchg
dec
inc
jg
andb
mov
fisttpll
lods
in
mov
mov
add
pop
in
popa
jae
ss
leave
sub
fimuls
xchg
xorb
pop
jecxz
add
adc
addl
xor
pusha
stc
pop
das
cmpsl
jno
loopne
xor
bound
sub
jbe
pushw
dec
xor
movsl
andb
sti
enter
popf
or
sub
mov
xor
mov
faddl
add
pop
and
jmp
btr
das
push
mov
fisttpl
std
mov
aas
repnz
adc
jmp
inc
jo
jo
and
loopne
adc
imul
mov
fmull
sub
daa
outsb
mov
in
ret
fscale
lea
js
orb
push
inc
mov
xor
call
arpl
pop
and
sahf
es
push
or
mov
jno
hlt
mov
ss
add
mov
scas
mov
push
inc
out
adc
and
in
jns
arpl
push
cmpsl
add
inc
mov
outsb
xor
jbe
ss
or
mov
out
xchg
mov
dec
addb
mov
rcrb
mov
xor
das
movl
movsb
insl
dec
add
loope
add
push
rorb
mov
aas
push
mov
hlt
andb
mov
push
cwtl
ja
icebp
jmp
xorb
subb
or
out
mov
mov
int
pop
movsb
and
das
mov
push
shll
add
repz
arpl
pusha
repnz
movsb
rorl
lods
mov
test
jb
xorl
mov
dec
mov
in
in
imul
icebp
ret
cmp
adc
movsl
imul
pop
test
or
or
sub
cmp
flds
jo
adc
add
add
mov
into
mov
sbb
cmp
negb
mov
scas
ret
and
js
mov
xor
aad
mov
mov
ds
subl
ret
jp
cmpsb
adc
and
int
and
xor
sahf
jl
in
lods
dec
out
icebp
push
shlb
or
pop
push
jae
lahf
test
jo
and
dec
jno
pop
fwait
notl
dec
xor
repnz
hlt
faddl
mov
sbb
movsb
jbe
imul
adc
jl
les
pop
mov
lea
pushf
inc
mov
jo
loopne
pop
add
hlt
jp
lds
and
call
popa
movsl
stc
leave
sub
xor
adc
pop
lock
dec
sbb
std
pop
lret
push
sub
pop
into
inc
test
mov
es
lea
sbb
popf
inc
je
add
mov
mov
scas
push
or
stos
pushf
xor
sub
je
push
or
inc
in
sbb
gs
cmc
lods
push
mov
xor
filds
mov
pop
pop
test
popa
mov
jns
sub
mov
mov
pop
cmc
pushf
jmp
jb
sub
add
shrb
fbld
xor
inc
out
or
sarb
fsubrl
pop
roll
push
stos
ret
sahf
aaa
mov
fsubrs
imul
fimuls
add
mov
xor
je
mov
shl
cltd
cltd
jne
addr16
insl
sbb
adcb
lock
add
xor
pop
mov
outsl
icebp
jno
ss
adc
xchg
mov
out
mov
les
cld
push
and
and
cmp
popa
aaa
insl
jge
incb
jbe,pt
mov
inc
xorl
rorb
lahf
js
or
add
push
imul
jbe
sub
sub
dec
scas
lret
push
popa
push
popa
out
jnp
inc
test
loop
clc
repnz
or
pop
mov
loop
push
stos
jno
arpl
add
fwait
dec
lods
call
inc
jo
out
push
push
and
lods
lods
icebp
jge
stos
test
imul
sbb
in
jg
and
mov
cmp
arpl
sbb
pushf
addr16
dec
aam
sbbb
and
mov
std
adc
loopne
repz
outsb
sbb
xor
sbb
pop
push
lret
xchg
jnp
lock
pushf
insb
leave
clc
mov
sub
add
inc
notb
mov
xor
and
xchg
jp
jmp
shr
inc
sbbb
shl
pop
pop
imul
fstpt
lock
iret
stc
push
xor
stos
in
aaa
add
fsubp
pop
call
sarb
push
sti
push
fnstcw
pushf
dec
mov
int3
frstor
xlat
lock
push
xor
outsl
addl
iret
and
push
adc
andb
fstps
push
pop
pop
or
std
ret
gs
mov
push
out
ss
movsl
xor
xchg
push
imul
jecxz
fstpl
xchg
mov
loope
leave
out
adc
int
mov
cmp
jmp
xchg
push
aaa
push
pop
mov
xor
loope
imul
mov
out
test
and
and
arpl
jp
sbb
cli
lods
das
sub
das
pop
mov
jno
js
sbb
xor
xor
mov
stos
call
xorl
mov
out
sub
lock
sbb
dec
xor
sahf
or
ja
add
mov
adc
fwait
push
daa
ljmp
imul
wbinvd
cmpl
imul
enter
ficoms
inc
imul
fdivrl
stos
and
xorb
inc
mov
and
and
das
jmp
jo
mov
cmc
test
cmp
mov
pop
movsb
je
movsl
xchg
out
mov
ljmp
es
sbb
adc
sbb
pop
mov
in
push
inc
xor
ret
inc
push
lds
in
cmp
outsl
cmp
pushf
out
out
ret
in
into
bnd
mov
push
push
cli
mov
repnz
idivb
add
sub
test
es
sbb
xor
adc
pop
inc
mov
mov
insb
shll
loopne
add
dec
cltd
lcall
out
lds
shl
inc
fstl
popa
imul
mov
push
scas
xor
adc
jge
sti
pop
popa
addl
add
iret
xchg
pop
mov
aam
dec
ficoms
xor
mov
mov
sbb
mov
out
xchg
in
xchg
fbstp
and
cs
mov
das
das
lods
xor
aas
das
mov
loopne,pn
in
movsb
dec
sub
or
pop
sti
push
push
cli
test
jp
aam
lahf
push
popa
popa
scas
aad
push
cmp
popa
outsl
les
cmp
dec
cmpsl
stos
stc
divl
call
aaa
push
es
sbb
cmc
inc
xor
in
push
arpl
xchg
test
mov
out
imul
pushf
call
je
mov
and
jb
movsb
dec
sti
sub
scas
stos
pop
jle
cmp
cmc
inc
je
lret
fbld
in
pop
fwait
pop
adc
lock
sbb
mov
xor
lods
cmc
in
pop
push
xorl
ljmp
mov
add
outsb
sbb
add
adc
call
sbb
stos
lds
fcompl
adc
adc
mov
outsl
lcall
popa
jmp
xchg
je
xor
repnz
dec
aaa
push
cltd
cmp
insb
dec
mov
pop
hlt
lcall
cwtl
push
mov
inc
je
lods
mov
xchg
in
pushf
sti
sbb
in
repz
in
ret
mov
sub
fwait
or
bound
aad
ret
mov
inc
xchg
pop
stos
cmc
fnstenv
mov
bswap
cltd
or
dec
ret
push
scas
lahf
xchg
popw
push
cltd
test
sbb
push
push
jge
xor
jbe
or
cmc
cwtl
loop
movb
or
jb
add
dec
sub
daa
push
inc
add
mov
test
das
aad
hlt
outsl
stos
add
mov
out
call
inc
add
pop
jge
sub
mov
scas
and
sub
mov
stc
xchg
inc
jae
repnz
movsb
in
dec
pop
add
popa
stos
add
leave
rclb
adc
enter
loop
mov
cld
insb
loope
fs
test
imul
movsb
imul
jecxz
lret
xchg
pop
imul
pop
lcall
movsl
mov
pop
adc
sub
jmp
inc
sub
push
xor
sub
aad
in
xchg
sbb
mov
daa
mov
rcrb
adc
add
pop
cmc
push
mov
mov
jecxz
pop
andb
cltd
mov
insl
es
mov
mov
jnp
mov
dec
dec
bnd
repz
lcall
movsl
add
je
jae
je
push
lods
mov
dec
sbb
and
xchg
stos
cltd
xchg
mov
add
insb
push
jb
xchg
outsb
inc
sub
push
mov
cmpsl
push
cmp
inc
insl
ja
mov
scas
scas
pop
or
and
sbb
mov
jecxz
and
mov
bound
cli
adc
popl
int3
cmc
aad
mov
cwtl
adc
and
or
enter
xor
cmp
movl
in
jl
cwtl
push
lcall
inc
repz
test
ljmp
arpl
stos
fstl
pusha
xor
jno
imul
xor
cmp
sbb
dec
cmp
sub
adc
add
outsb
call
adc
adc
scas
call
mov
outsb
in
mov
leave
cmp
mov
leave
into
scas
in
jbe
pop
rcrl
add
sbb
lds
pop
pop
ret
in
xor
repz
jns
push
xor
es
mov
lret
xchg
test
cltd
add
pop
pop
sti
push
das
cmpsl
mov
mov
pop
data16
xchg
or
mov
jnp
icebp
in
iret
mov
mov
add
lds
jg
loope
and
adc
and
pop
andb
mov
xchg
sbb
jnp
inc
pop
movsb
mov
popa
std
pop
mov
pop
jbe
cmp
outsb
cmp
in
fisttpll
pop
rcr
xchg
ljmp
dec
cmp
sbb
gs
rcrb
sbb
or
push
cmovae
ret
jne
cltd
lahf
fiaddl
mov
push
push
mov
inc
out
arpl
jae
in
push
dec
xchg
xchg
push
jmp
cmp
dec
es
mulb
imul
mov
out
mov
cli
dec
int
stc
mov
xchg
or
jns,pt
push
ret
xor
hlt
mov
push
rolb
xorb
popf
nop
lea
xchg
dec
iret
or
push
cmc
push
test
daa
dec
in
push
sbb
lods
xchg
cmp
bound
and
outsb
jno
push
dec
pop
les
bound
out
lahf
push
mov
cmpsb
mov
int3
jae
negl
mov
ret
fadd
int
push
mov
push
imul
cmc
mov
add
cmpsl
xor
and
addr16
pop
scas
push
clc
in
aad
mov
dec
inc
movsb
mov
adc
ret
xorb
lahf
jb
cmpsb
bswap
mov
push
int3
bound
mov
push
fistl
dec
mov
rcrb
cmp
daa
jns
mov
enter
cmpsl
mov
pop
xor
out
jg
icebp
inc
inc
lea
pop
popf
call
cmp
lahf
ror
jns
fisttpl
pop
xlat
adc
jge
lcall
fcoml
pop
mov
fistl
out
rcrl
ret
int
sti
xchg
xchg
lods
inc
adc
add
iret
std
ret
pop
inc
jno
imulb
dec
imul
xchg
xor
xor
sub
mov
fidivrs
push
icebp
mov
subb
in
and
roll
movl
jmp
cmpsb
mov
fcompl
fdiv
xchg
movsl
jge
push
mov
loope
enter
mov
xor
jmp
mov
pop
jo
cmpsb
leave
imul
push
xchg
es
mov
xchg
ja
aam
shrb
inc
xchg
xchg
sbb
sub
negb
stos
aam
imul
dec
js
or
push
xlat
xchg
sbb
and
mov
xlat
mov
jo
mov
cli
data16
mov
mov
mov
and
addr16
mov
loop
push
dec
mov
imul
test
in
cmp
ret
popf
or
aaa
sbb
adc
hlt
sub
mov
pusha
mov
push
sti
shrl
mov
dec
sub
iret
bnd
mov
fwait
lret
ret
decl
iret
add
xor
inc
add
xor
clc
add
mov
sbb
xchg
scas
xlat
arpl
lods
sbb
dec
and
aaa
jl
cmp
aad
push
lods
repz
mov
into
pop
ficoms
mov
fsubrs
push
sbb
sub
cmp
lds
ja
mov
pop
daa
mov
adc
pop
mov
ljmp
push
fiaddl
int
std
dec
mov
dec
lret
scas
push
sbb
adc
rcrb
sbb
outsb
loop
xchg
movsb
cwtl
jbe
push
insb
sahf
mov
mov
mov
pop
cmp
lret
jge
sub
push
pushf
xor
mov
sub
mov
sbb
sub
in
fmuls
lret
push
pop
lcall
push
mov
ss
imul
xchg
and
lret
or
jge
xor
pop
mov
shrb
mov
iret
inc
add
ss
jbe
das
inc
mov
out
mov
push
or
mov
push
dec
gs
mov
cmp
in
fnstcw
adc
push
xchg
fs
movsb
cmp
jge
lea
add
jae
or
inc
and
push
jp
sarb
jns
cltd
sub
dec
inc
inc
std
out
xchg
or
rol
mov
sahf
jo
or
pop
cld
inc
cltd
pop
xor
lock
adc
mov
jge
jmp
sub
es
fisttps
rorb
jns
retw
lds
xlat
enter
push
mov
stos
loop
jb
std
pop
push
push
add
push
xchg
dec
cmpsl
jo
pop
jge
cmp
imul
stos
sbb
sbb
mov
hlt
adc
xor
icebp
test
jl
out
in
xor
push
inc
jp
and
movsl
adc
adc
sbb
sbb
inc
sbb
push
push
inc
jmp
mov
movb
push
bswap
mov
outsl
fwait
cmpsl
jmp
and
loope
mov
lods
icebp
or
jbe
xchg
int3
xor
mov
xchg
int3
cmc
cmp
pop
mov
mov
cmp
add
xchg
ja
jns
test
loopne
xor
pminsw
jmp
rorb
jecxz
popa
jmp
cmp
pop
push
daa
pop
inc
push
xchg
fxch
pop
mov
cmp
add
xor
mov
cmp
imul
jmp
stos
push
rcrl
fsubp
dec
jnp
sbb
adc
lea
stc
mov
stc
cmp
mov
hlt
leave
jmp
shrb
ss
mov
call
fmul
cmp
sbb
pop
pop
daa
push
dec
pop
scas
pop
lret
jge
stos
mov
lods
xor
inc
test
fisubl
rclb
dec
pop
push
push
xchg
imull
sub
popf
inc
cmp
cmpsb
in
inc
test
movsl
fucom
mov
rcll
jbe
popf
fsts
cmp
xchg
mov
out
and
decl
mov
in
leave
adc
sub
push
pop
jg
icebp
repz
arpl
push
inc
and
and
aaa
out
aas
mov
movsl
mov
insl
mov
pop
pop
pusha
inc
subl
in
insl
dec
jnp
ds
mov
xchg
inc
jmp
stc
in
dec
xchg
std
and
mov
mov
mov
sbb
xchg
add
or
insb
arpl
adc
xor
fcmovnb
add
lock
cli
lret
or
lods
add
movsb
add
rorl
sub
insl
fistl
push
cmp
lret
arpl
mov
lret
jmp
jmp
test
push
push
cmc
cmp
pop
fstpl
stos
xchg
stc
inc
cmp
sahf
pop
and
xchg
sub
push
push
mov
loope
add
lret
out
jne
lahf
inc
testb
mov
das
lods
dec
mov
sarl
jp
cmpl
movsl
imul
cmp
and
out
xor
lcall
dec
jmp
mov
iret
add
test
pop
sub
test
pop
hlt
movsl
popa
push
pop
dec
or
mov
cmp
js
pushf
insb
xlat
inc
add
add
pop
fsubl
cmp
pop
inc
pop
arpl
repnz
push
into
test
aad
loope
pop
rorb
popa
sbb
xchg
mov
ljmp
fcoml
hlt
or
add
shlb
fld
shll
aad
sub
out
pop
ss
push
scas
cmp
push
sti
cmp
insb
dec
mov
dec
jnp
push
push
xor
mov
mov
into
jns
jnp
pop
fucomip
test
mov
arpl
addr16
testb
repnz
sub
mov
imul
xchg
xor
sbb
loop
lret
sbb
outsb
xchg
scas
enter
pop
int3
pushf
lods
inc
pop
and
inc
ss
mov
pop
fisubrs
adc
pop
dec
adc
mov
adcb
xchg
pop
icebp
jmp
cmp
outsb
pushf
aam
aad
mov
iret
jle
pusha
xor
cli
inc
rorl
in
and
sbb
int3
test
xor
mov
popf
xchg
lret
mov
xchg
lret
gs
or
popf
adc
das
repz
lcall
aad
jae
push
imul
mov
inc
mov
jp
testb
lcall
or
addl
or
and
inc
inc
and
adc
aad
sub
add
inc
ljmp
dec
hlt
pop
mov
mov
enter
add
imul
xchg
or
mov
push
sub
popa
jecxz
int3
xchg
push
or
jb
fstpl
loope
in
cmp
add
pop
cmp
js
cmpsb
ret
popa
dec
out
sub
and
aas
push
outsb
pop
pop
enter
icebp
and
mov
jg
in
pop
sbb
and
pop
pop
push
inc
fstl
pop
inc
shrl
fsubs
or
ret
sti
or
loope
mov
leave
and
cmp
push
adc
ja
std
scas
es
ds
iret
jmp
lds
inc
jo
or
js
stos
rcrb
jo
sub
cwtl
ljmp
sbb
mov
cmpsl
cli
dec
sbb
jnp
or
stc
aad
stos
inc
daa
ret
xor
inc
test
ljmp
fwait
mov
adc
sub
push
aad
xor
imul
adc
xor
sbb
inc
notl
sub
xorb
fbld
lods
in
lods
inc
inc
movsl
into
xor
pop
dec
push
xchg
mov
jne
outsl
addr16
xor
scas
fmuls
jno
jne
mov
mov
leave
sbb
mov
mov
fistps
push
js
mov
call
inc
test
or
sbb
ss
pop
or
cmp
test
cs
adc
adcb
sbb
pop
push
pop
sti
jb
sahf
mov
mov
or
jmp
jmp
push
test
cli
mov
push
dec
jl
mov
mov
je
mov
lahf
xor
jmp
popa
stc
sysexit
pop
mov
pop
inc
inc
cld
mov
clc
push
cmp
fsub
push
push
sahf
test
cltd
sub
sub
imul
xchg
push
addr16
push
jecxz
stos
mov
cmp
and
jbe
sahf
mov
test
outsb
jo
out
jnp
push
inc
mov
push
xchg
mov
fiaddl
movsl
pop
sbb
mov
rcrb
pop
mov
rcrl
out
lsl
insl
push
lock
mov
cmp
fwait
pop
inc
imul
in
dec
adc
nop
sub
stos
popf
push
outsl
mov
inc
jecxz
loopne
sbb
lret
hlt
popa
inc
out
add
das
xor
fwait
jno
in
jns
push
movzwl
jecxz
xor
push
xchg
inc
jo
xchg
xor
push
push
bnd
inc
dec
adc
icebp
cld
fmull
popa
dec
js
xchg
and
cmp
fwait
push
xor
shr
adcb
jb
cmc
jae
pop
sbb
icebp
xchg
jnp
xlat
push
mov
aad
inc
sbb
imul
sbb
hlt
lock
inc
cmp
jecxz
jecxz
mov
or
out
sbb
dec
jae,pn
dec
aaa
push
sbb
decb
cmp
cmp
or
test
inc
test
mov
pushl
movsb
cmp
sbb
mov
ds
inc
sub
fucomp
mov
movsl
push
lods
xor
mov
jbe
sub
imul
dec
incb
and
mov
or
xlat
adc
test
inc
mov
push
mov
jo
in
shl
ljmp
lret
test
inc
les
jae
mov
xlat
fists
mov
or
mov
xchg
push
insl
pop
out
jnp
lods
aam
cmpsb
sbb
cmp
inc
ljmp
mov
std
push
imul
in
and
mov
push
in
sbb
push
add
mov
sub
enter
lods
fdivrs
push
sbbl
ret
sbb
inc
xor
add
pop
jae
ja
dec
adc
clc
testl
sbb
out
aas
roll
mov
pop
mov
fbstp
fdivs
in
pop
sti
and
cmpsb
lret
fwait
sahf
cmpl
or
repz
jae
mov
pop
lret
loop
sti
popa
test
dec
dec
lods
add
or
sbb
jae
sbbl
cmp
xchg
sub
test
call
nop
je
dec
push
pop
and
mov
dec
mov
or
into
jecxz
iret
fs
int
nop
outsb
jae
ret
and
xchg
inc
pop
ret
jae
xchg
out
pushf
loop
int
mov
nop
push
or
cmc
sbb
movsb
fmul
cmp
dec
xchg
in
add
xlat
arpl
inc
fcmovnu
ds
mov
and
mov
cmpsl
orb
insb
jmp
sub
cs
sub
mov
hlt
mov
inc
sub
cmp
and
test
mov
jecxz
into
mov
pushf
sahf
in
mov
xor
jb
or
adc
inc
ds
push
xor
dec
sahf
dec
and
or
test
je
xor
push
inc
cmp
repnz
push
int3
das
pop
sbb
or
test
aad
out
mov
pop
arpl
pop
sarl
sbb
xor
and
jno
adc
imul
imul
leave
adc
inc
repz
or
and
lock
clc
pop
in
adc
or
out
lds
jno
sbb
rorb
sbb
scas
fisubrs
jnp
xchg
push
push
cmpsl
mov
sti
data16
push
or
test
sbb
insb
les
scas
int3
adc
int3
push
mov
or
icebp
pop
sub
std
pop
pop
iret
dec
lret
jl
and
pop
dec
and
adc
push
inc
or
daa
xor
push
cmp
rcl
dec
jg
dec
xor
call
cmpsl
jae
sbb
adc
je
inc
rcll
scas
imul
fildl
cmp
loopne
push
mov
xchg
push
cmp
dec
aad
sti
sub
jle
push
and
push
mov
imul
imul
and
in
dec
inc
das
pop
scas
out
lea
jp
adc
xorb
and
mov
lretw
ds
ds
pop
cmp
jp
mov
or
mov
push
shrb
sbb
aam
push
inc
mov
pop
jecxz
shll
scas
xchg
insl
mov
xor
mov
jbe
lret
out
mov
jmp
decl
std
shrl
scas
in
mov
lock
jmp
popw
sbb
mov
in
ret
xchg
jge
cld
add
lcall
and
push
scas
movb
xor
inc
and
cmp
pop
pop
movsb
popa
dec
xlat
pusha
scas
das
mov
sahf
xor
addb
jo
enter
fsubs
push
xor
insl
dec
cld
aaa
aaa
lock
adc
dec
mov
cltd
mov
das
cmp
sarb
inc
ret
cmpsl
out
loop
fisubl
fs
xlat
fwait
pusha
mov
and
jmp
mov
dec
out
lods
inc
into
scas
loopne
cmp
lds
mov
xor
adc
mov
rcrb
push
rcrb
aaa
and
es
jl
jp
pushf
out
mov
mov
xor
inc
ja
jl
push
xorb
mov
mov
hlt
pop
sarb
pop
push
outsl
ds
cmc
xor
call
jae
lcall
xchg
sbb
inc
int
orl
mov
adc
lock
mov
cmp
mov
mov
fwait
xlat
out
ss
in
out
out
movsb
jne
xlat
mov
xor
fsubrl
iret
add
xchg
add
mov
adc
xlat
lahf
jmp
and
stos
into
push
adc
sbb
out
xchg
dec
add
cld
outsb
loopne
aas
std
pop
inc
or
pop
mov
push
in
stos
repz
mov
lret
cmpsb
adc
pop
into
mov
and
mov
mov
push
push
cs
notl
pop
outsb
nop
iret
or
jmp
mov
int
adc
xchg
push
lock
and
push
iret
in
or
es
jnp
daa
jl
repz
mov
mov
nop
adc
inc
inc
jo
cmp
test
popa
xor
pop
xchg
cmovne
cmpsb
pushf
leave
mov
push
sbb
call
aad
sub
insb
andb
out
cmp
push
push
inc
xchg
movsl
jbe
mov
inc
sti
inc
scas
insl
outsb
adc
xorl
sub
popf
orb
nop
outsb
loopne
cli
mov
enter
pop
leave
arpl
stos
mov
pushf
mov
out
cmp
mov
jle
xchg
iretw
xchg
xlat
in
mov
cmp
das
orl
jbe
cmp
mov
test
aam
add
push
arpl
js
add
cld
mov
fists
sti
inc
xchg
push
adc
mov
jns
pop
xchg
inc
pop
push
repz
in
pop
jle
in
into
fimuls
repz
pushf
ja
add
fiaddl
imul
enter
mov
in
out
adc
mov
shll
stc
subl
shr
cwtl
xor
xchg
out
pop
cmp
loopne
or
adc
mov
test
cld
cld
test
push
pop
dec
push
sti
shl
add
bound
sub
or
imul
ret
push
ds
mov
jecxz
jo
or
xlat
ljmp
push
lock
outsl
or
arpl
inc
push
add
aaa
fadds
rcl
stos
jp
sub
xchg
jp
adc
fldcw
cld
push
sub
adc
out
cmp
pop
xchg
xor
popf
data16
cmp
xchg
xor
xor
test
ljmp
stos
das
pop
repz
inc
lods
lds
jl
push
and
and
add
aaa
xchg
jmp
cmp
loope
fisttpl
loop
in
cmp
jns
sbb
mov
xchg
mov
push
push
push
jae
call
in
inc
jns
in
stos
mov
mov
aad
xor
std
push
ret
adc
lret
adc
xor
loope
sbbl
out
insl
mov
or
stos
test
pop
dec
xchg
sbb
loop
mov
fadds
loopne
push
mov
arpl
test
mov
out
xor
ds
jbe
inc
jmp
xchg
mov
xlat
in
fcmovnb
dec
xchg
ret
fidivrs
cltd
stc
out
mov
or
cmc
lods
adc
mov
in
mov
jl
mov
cmp
into
jno
cs
repnz
std
xor
ror
jns
in
lahf
xchg
mov
mov
pop
jmp
jo,pn
gs
pusha
rcrl
jae,pt
aas
loopne
mov
jnp
xchg
test
aas
jle
fisubrl
push
mov
mov
je
add
mov
push
fwait
jno
arpl
aam
push
outsb
fdivr
inc
loope
mov
sub
out
cmp
push
icebp
sbb
mov
sti
loopne
addl
mov
mov
movsl
pop
cmpsl
nop
lahf
lods
xchg
and
mov
lret
nop
add
fnstenv
int3
inc
and
sub
cmp
in
in
ret
int
adc
pop
in
sub
xchg
lea
shlb
xor
inc
xor
sbbb
xor
bound
in
add
jg
mov
or
mov
sahf
adc
xchg
nop
jl
inc
push
clc
addr16
sarb
fwait
mov
fwait
loopne
lods
pop
dec
leave
call
sahf
imul
insl
xchg
int3
outsl
mov
enter
lock
inc
icebp
icebp
fsubrp
jnp
and
inc
push
test
jge
fbld
and
sbb
lods
shll
sbb
jge
or
inc
fs
jae
mov
out
or
xor
out
push
xor
cmp
ret
cmp
xlat
dec
add
gs
dec
inc
push
or
jae
imul
or
pop
adc
cli
stc
pop
add
popl
hlt
test
aam
lret
mov
es
mov
mov
nop
mov
pop
sub
inc
dec
inc
loop
ret
sub
push
dec
ret
pop
ja
clc
xor
push
pop
int
xchg
aaa
dec
or
pop
sub
and
ljmp
xchg
sbb
pop
push
mov
shlb
xchg
sbb
popa
mov
sti
lods
cmp
cmc
inc
jne
int3
pop
fwait
mov
mov
cmpsl
test
xlat
sbb
and
jp
pop
jae
sbb
and
pushl
std
pop
adc
push
mov
mov
lahf
lods
jp
repnz
pop
in
pushf
andb
add
sub
flds
idivl
int3
pop
mov
test
ss
add
push
adc
out
pop
leave
xchg
cs
lret
push
xlat
cmp
dec
dec
xchg
dec
sub
mov
pop
inc
sbb
mov
and
js
inc
xchg
movsb
cs
enter
aam
inc
in
lock
sub
pop
sub
testb
xor
sti
inc
mov
sahf
xchg
xchg
testb
lea
adc
jecxz
or
stos
cmp
pusha
sub
sbb
push
push
sub
insl
daa
shlb
mov
cmp
fmuls
push
enter
sub
fisttps
mov
aad
cmp
push
lock
mov
sbb
data16
aad
fldl2t
or
inc
loope
pop
sti
mov
outsl
mov
sub
cmp
push
popl
ss
enter
filds
jge
fcompl
add
xchg
xchg
xor
sahf
jb
jecxz
in
sbb
mov
mov
xchg
xor
xchg
mov
bound
jecxz
add
fcmovbe
insb
pop
add
mov
xlat
loop
xchg
dec
ficoms
mov
pop
imul
fdivrl
push
pop
push
cmpsb
sub
mov
pushf
pusha
mov
pop
mov
xorb
add
adc
push
nop
pop
ljmp
addr16
out
inc
jno
add
xchg
out
mov
push
xchg
clc
popa
ljmp
lret
movsb
leave
inc
scas
popa
mov
pop
cmp
call
and
mov
dec
push
fldl
mov
ss
push
dec
mov
inc
cmp
stos
push
mov
hlt
dec
xchg
mov
jns
mov
xlat
cmpsb
fstpl
sbb
adc
mov
pop
mov
dec
xchg
lods
das
mov
shlb
push
stos
pop
lret
and
mov
loope
repz
js
sub
and
popa
add
jl
xchg
sbb
inc
pushf
rolb
hlt
push
mov
lcall
roll
or
cmp
push
jne
in
inc
jae
inc
ss
xchg
lahf
mov
xor
negb
popa
dec
stos
fadd
aas
jbe
lock
stos
inc
sub
add
popa
push
fsubrl
aam
pop
adc
insb
pushf
out
aas
pop
push
sbb
inc
andl
adc
mov
mov
pop
and
cs
sub
fdivrs
adc
mov
insb
rorb
loope
cmp
xor
jl
push
aaa
ret
or
mov
scas
and
cmp
xchg
jmp
cld
fs
sub
in
mov
cmp
fdivl
xchg
stc
in
and
mov
or
inc
xor
bound
cld
stc
and
dec
arpl
aam
bound
sub
stos
ds
inc
out
mov
leave
movsl
les
out
mov
pop
sub
and
sbb
das
push
adc
or
ficoml
xchg
and
mov
jne
testb
fcmovne
push
xchg
push
mov
jecxz
sub
sub
ljmp
xchg
inc
inc
hlt
je
rcll
stc
lea
mov
mov
and
sarb
cmp
addr16
out
mov
or
pop
inc
xchg
loop
xor
and
inc
pop
repz
xchg
ss
dec
bound
sub
pop
adc
in
xor
fdivp
daa
sub
lcall
popa
pop
inc
cltd
pop
test
mov
mov
push
mov
hlt
imul
lahf
ficompl
cmp
ds
inc
flds
or
outsl
mov
out
enter
inc
scas
je
loopne
test
adc
scas
dec
fucomip
and
ljmp
dec
and
xchg
rclb
add
movsl
lods
jb
gs
jb
xchg
outsb
inc
lock
shr
popf
inc
jp
lods
nop
mov
jmp
fnsave
or
sub
pop
jne
daa
xor
iret
push
cmpsl
inc
popf
dec
jae
mulb
in
dec
into
insb
xchg
ret
adc
mov
adcb
in
pushf
push
push
loopne
scas
fwait
rol
repnz
scas
xor
push
ds
xor
outsb
jae
loop
fdivr
aad
icebp
cmpsl
bound
iret
xlat
test
repnz
dec
cmp
enter
std
pop
aas
sbb
int
outsl
jle
mov
imul
repz
jns
imul
mul
jns
mov
in
add
mov
xor
sbb
inc
push
xor
int3
sti
jg
scas
es
test
xchg
movsb
jmp
shrd
cmc
into
std
cmp
adc
xor
push
popa
hlt
pop
sarl
push
mov
dec
mov
mov
or
mov
fsubrl
pop
push
and
cli
cld
out
xchg
dec
sti
insl
mov
xchg
adc
ss
or
add
inc
or
push
add
sub
cmpsb
lahf
addr16
dec
and
jge
loopne
mov
fs
mov
dec
push
stos
cmp
ljmp
push
add
test
push
rcll
es
mov
pop
push
into
iret
or
loope
or
mov
fnstenv
mov
fyl2xp1
roll
mov
push
imul
push
inc
addr16
test
mov
or
and
popa
inc
xlat
pop
adc
sti
inc
mov
cwtl
push
lds
mov
jbe
cmc
xchg
push
jnp
lods
sbb
fimuls
mov
xchg
mov
add
push
lods
jle
jge
xor
pop
or
or
mov
sbb
mov
cs
inc
mov
xchg
sbb
pop
test
shl
pop
jg
rep
dec
insb
mov
loopne
xchg
mov
scas
cli
mov
xor
mov
faddl
push
gs
mov
aad
cmpsb
mov
inc
addr16
rcrl
inc
mov
nop
dec
bound
fsts
push
roll
mov
cmp
repz
icebp
jle
mov
add
cmpsl
sub
out
xor
loop
pop
mov
mov
mov
adc
lods
fistpll
popf
sahf
jnp
mov
xchg
mov
pushf
lahf
add
je
jne
sbb
icebp
mov
dec
xlat
mov
mov
add
sbb
movsl
sarb
inc
sub
cmc
addr16
mov
xchg
jge
int
jp
ret
xchg
shll
mov
add
push
xor
das
push
jle
movb
mov
xchg
cld
cmc
xchg
push
dec
jne
icebp
cmp
push
sub
adc
hlt
rcrl
cs
mov
faddp
pop
cmp
and
out
fistps
jae
mov
clc
ljmp
xchg
aad
push
fwait
xchg
imul
lahf
shrb
sar
jb
push
data16
repz
cltd
inc
mov
jo
idivl
clc
push
lods
add
jne
inc
test
sbb
sub
cmp
push
icebp
lds
pusha
dec
not
jle
jnp
pushf
out
mov
jns
add
jo
mov
xchg
lea
mov
jnp
mov
add
xor
lods
mov
in
test
popf
cltd
aaa
hlt
out
dec
inc
cmp
xchg
xchg
int3
dec
sub
mov
mov
xchg
aaa
shlb
xchg
lock
jmp
repz
xchg
add
scas
jo
nop
sub
dec
hlt
fs
lret
push
or
rolb
inc
sub
and
dec
xchg
popa
jle
or
mov
ja
add
push
mov
add
adc
lds
dec
and
cmp
daa
arpl
scas
push
mov
or
lods
xchg
test
push
push
shlb
xchg
push
cmp
cmp
lret
pop
push
test
mov
fdivp
movzwl
std
adc
fnstenv
mov
int3
loopne
push
fsubrl
dec
out
lcall
or
adc
test
cmp
iret
leave
test
cwtl
insb
fcomi
xchg
mov
ret
mov
xor
xorb
lahf
cmp
and
push
pop
dec
jo
gs
jns
pop
addr16
into
jge
daa
outsb
mov
mov
movsl
xor
js
inc
lret
pop
jae
cmpsb
adc
ret
ret
add
test
sbb
xchg
add
and
jb
add
pusha
jnp
push
fwait
ss
mov
pop
and
inc
maskmovq
imull
xor
sti
iret
pop
aam
mov
ljmp
and
int3
sbb
adc
call
jo
xor
outsb
lcall
je
adc
push
push
aad
in
aad
jp
jecxz
mov
xor
repz
outsl
mov
ficoms
mov
xchg
push
aad
adc
shrb
and
adc
out
aad
shl
icebp
mov
out
inc
sti
mov
pop
imul
xchg
cmp
subb
movsl
test
stc
sbb
xor
sub
cli
xchg
inc
jne
adc
aad
loope
cmpsb
test
cmp
push
sub
sbb
call
sbbb
test
dec
lea
jns
and
mov
pop
cmp
push
js
repnz
xchg
or
mov
push
sbbb
sti
out
fsubrl
xchg
movsb
stc
cmc
push
int
push
imul
jne
sub
and
mov
sbb
pusha
add
dec
rcrb
cmp
push
lret
pushl
mov
outsl
cmc
orb
mov
cmp
push
jle
sub
rcl
adc
inc
clc
add
mov
push
add
movsb
ljmp
cvtps2pd
or
add
test
out
add
dec
movsl
dec
mov
pop
ljmp
push
ret
pop
arpl
lcall
cmp
or
mov
push
and
je
test
daa
loop
mov
jnp
and
inc
jae
mov
push
mov
sbb
push
push
and
icebp
and
mov
mov
xchg
cmpsb
int3
push
mov
sbb
adc
mov
ljmp
pop
pop
xchg
out
adcl
loope
cmpsl
fsts
mov
gs
es
or
out
fidivl
nop
cltd
pop
ja
mov
mov
call
adc
add
jmp
dec
rclb
cmp
mov
sbb
push
dec
jne
mov
cmpsb
dec
push
sub
out
add
mov
dec
push
pop
push
jmp
mov
pop
mov
cwtl
inc
insl
imul
lea
mov
rorb
adc
mov
imul
daa
jle
xchg
cltd
repz
cwtl
stos
psllw
js
or
ffree
jno
addr16
in
fnstsw
inc
insl
inc
lods
cmp
insb
daa
mov
push
jmp
jl
push
outsl
xorl
dec
lods
or
adc
cmp
and
dec
fisubrl
addb
cli
arpl
cltd
mov
adc
mov
cmc
shr
mov
out
or
inc
mov
adc
push
pop
pop
cwtl
mov
mov
mov
sahf
mov
push
jo
test
stos
lock
and
insl
push
push
inc
dec
dec
mov
cmp
sti
popf
fmull
das
mov
xor
clc
inc
fs
stos
push
push
cli
sbb
aam
out
pushf
inc
repnz
jg
js
scas
notl
or
pop
cs
loop
pop
notb
outsb
scas
or
insl
pop
movsl
js
jne
in
lret
test
in
stc
push
out
daa
mov
sbb
inc
push
loope
inc
lock
pop
in
shrl
jle
dec
loop
inc
mov
push
loopne
or
jno
inc
arpl
dec
mov
xchg
or
jge
test
jnp
or
in
sbb
jno
and
in
mov
imul
mov
adc
jl
imul
pop
fwait
xchg
adc
int3
clc
icebp
ss
pop
divb
xor
pop
shll
jnp
fsubrl
fs
xchg
pop
push
pop
add
push
sbb
push
inc
fs
repz
popf
testb
jle
jmp
cld
mov
int3
mov
outsb
sub
repz
cmpsb
cmp
mov
lcall
ss
loope
and
pop
add
enter
add
push
xchg
in
jge
mov
int
xchg
and
addb
xchg
xchg
jne
xchg
fnstenv
addr16
inc
jle
xorb
imul
jne
out
adc
or
mov
adc
and
mov
bound
pop
jg
jo
dec
int3
pop
inc
mov
inc
test
mov
fstl
mov
pop
sub
sub
jp
sahf
testb
aad
pushf
les
jnp
xchg
dec
popa
fs
sahf
adcb
xor
out
inc
inc
cmp
inc
cmp
mov
insb
push
out
cmpsl
lods
outsl
aaa
and
rclb
cmp
add
jmp
add
aam
test
adc
aaa
js
ja
movsb
mov
xchg
sub
xchg
jmp
mov
lds
and
mov
cli
pop
jmp
jmp
dec
test
mov
push
mov
hlt
daa
cwtl
xchg
adc
pop
loop
jmp
add
jns
pop
push
pushf
clc
out
xlat
xchg
dec
fistpll
aaa
insl
outsb
dec
hlt
aam
dec
pop
adc
movsl
xchg
sub
xor
mov
inc
and
push
pop
sub
or
std
outsb
jae
fs
xor
mov
cli
rep
inc
pop
push
push
xor
cmp
mov
sbb
mov
mov
or
pop
jne
out
mov
mov
out
and
dec
lock
jp
insb
in
fs
add
ficoml
lock
dec
mov
hlt
mov
repz
pop
loop
decl
sub
xchg
push
movsb
xchg
dec
ljmp
adc
std
call
in
jmp
sahf
into
in
mov
mov
and
iret
dec
or
inc
adcb
insl
ja
push
and
cmp
lea
test
mov
out
enter
add
nop
sti
test
xchg
out
pop
mov
enter
inc
pop
ret
cld
mov
add
cmp
lock
dec
jecxz
inc
rorl
dec
fdivr
pop
pop
stos
xchg
arpl
and
ss
xor
mov
shlb
aad
xchg
shrl
mov
loopne
jp
daa
loop
pusha
loopne
mov
aaa
and
aad
dec
push
stos
xchg
clc
adc
stos
fisubrl
popf
addl
repnz
imul
testl
or
xor
jae
dec
loopne
dec
push
fdivrl
hlt
add
cld
test
dec
cltd
test
xchg
aaa
mov
mov
xchg
pop
sbb
movsl
std
out
push
call
fmulp
or
push
or
imul
pop
push
push
mov
loopne
arpl
scas
adc
ret
clc
cmp
mov
sbb
daa
xchg
loop
je
lock
fdivl
xorl
jg
test
push
js
fmull
in
stc
int3
sub
iret
cmc
fstpt
jge
cwtl
stc
xchg
push
add
jno
or
shll
or
repz
mov
pop
or
pop
outsl
cmp
push
and
sub
adcb
mov
pop
mov
and
cmpl
xchg
jnp
jle
imul
vmovntps
and
out
js
add
arpl
mov
and
sbb
aaa
cwtl
fisttpl
scas
pop
jne
dec
xchg
mov
mov
mov
inc
xchg
push
ss
insb
addl
loopne
xor
arpl
mov
pop
pusha
mov
stos
clc
push
add
testl
xchg
sub
lret
push
in
xor
mov
out
xor
das
xor
mov
shll
inc
sub
or
dec
insl
lods
push
addr16
or
lret
test
mov
repnz
xor
xchg
sbb
pop
ljmp
xchg
clc
mov
ja
int
or
or
and
mov
cmpsb
or
and
mov
or
sbbl
xlat
mov
sbb
cmpsl
sbb
sbb
loop
imul
icebp
mov
add
sbb
cmp
shll
imul
xor
das
arpl
sbbl
scas
jle
and
addl
xchg
js
and
cmpsl
jle
call
inc
mov
cmc
mov
inc
or
xchg
mov
xchg
push
cmp
lahf
jecxz
and
adcl
ficoml
xchg
jnp
popf
mov
push
fldt
add
sbb
lret
mov
aas
cmp
leave
and
pop
pop
inc
imul
cmp
mov
adc
lret
and
jb
and
dec
adc
jle
loop
cmpsl
inc
call
decl
cltd
sbb
jmp
mov
sbb
add
pop
mov
in
enter
pop
dec
push
sahf
push
jae
adc
sub
dec
insl
rcr
ss
loope
pop
mov
movsb
insb
or
lea
aas
dec
add
mov
xchg
inc
lahf
cmp
stc
push
je
xchg
jecxz
in
adc
outsb
pop
and
mov
mov
cld
sahf
or
xor
pusha
dec
outsl
xchg
mov
mov
xor
cs
inc
in
sub
sbb
enter
icebp
jae
cmp
into
cmp
scas
mov
js
cmp
jb
icebp
in
xchg
xchg
adc
sbb
pushf
je
rcrb
inc
push
sub
dec
fwait
mov
cltd
aas
pop
add
outsb
push
pop
lock
hlt
inc
add
and
jne
adcl
or
sub
in
mov
xor
sub
es
jne
sbb
pinsrw
adc
sub
out
movsl
out
aaa
add
xchg
mov
adc
hlt
adc
push
add
iret
int
sahf
sbb
sbb
lahf
inc
adc
pop
es
dec
imul
das
loop
hlt
mulb
cmp
adc
and
mov
int
or
mov
inc
aaa
push
pop
xor
leave
or
mov
mov
test
fcoms
add
mov
test
jmp
mov
mov
jb
lcall
dec
cmpsb
and
dec
push
push
cs
push
adc
mov
pop
sbb
in
jp
dec
aam
mov
pop
movups
jb
std
and
mov
inc
sahf
aaa
adc
loopne
push
mov
not
fsubrl
cmpl
ljmp
mov
cmp
aaa
movsl
enter
test
dec
cmpsb
jg
sub
xchg
arpl
and
xor
fdivp
dec
pop
popf
cmp
aam
mov
push
ja
cmpsl
sbb
mov
add
xor
lretw
icebp
sbb
mov
sbb
test
adc
ss
dec
or
rcl
pushf
push
dec
mov
hlt
clc
and
ret
out
cmp
cmp
loope
mov
sbb
fadd
mov
loopne
mov
ja
xor
or
jge
enter
xchg
mov
or
jp
repnz
insl
rcpps
dec
cli
xlat
cmpsb
call
pop
test
or
dec
fimull
repz
mov
lret
dec
mov
cmp
leave
cmpsb
mov
cmp
dec
imul
xor
test
cld
or
cmpsb
movl
pushf
push
int3
leave
dec
pop
arpl
adc
or
and
jmp
daa
mov
and
adc
sbb
mov
adc
rorb
fwait
adc
cmpsl
aad
fistpl
mov
clc
add
call
idiv
and
mov
sbb
jmp
fadd
mov
pop
ja
ret
add
adc
push
dec
xor
xor
and
pop
mov
sahf
adcb
inc
jmp
mov
dec
push
xor
push
into
mov
enter
pop
int3
push
add
pushf
jl
sti
push
add
jno
mov
insb
mov
or
sbb
mull
outsb
mov
adc
adc
jg
cld
or
fmull
sub
js
adc
in
mov
pop
data16
ss
sub
rol
cmp
test
cmc
sub
lods
pop
fldl
sti
jbe
add
jo
and
inc
sub
sub
sbb
std
shlb
loop
stc
es
lock
and
pop
jae
push
sub
dec
jnp
ljmp
jle
stc
pushf
mov
iret
jbe
adc
inc
xorl
mov
pushl
fidivrs
mov
sub
pop
mov
jae
xchg
out
cmp
dec
mov
mov
jecxz,pt
inc
fadds
dec
repnz
push
rep
mov
lock
xchg
pop
out
ret
insb
movsb
jns
inc
outsl
rcr
int3
pop
push
push
mov
data16
jmp
jne
push
mov
jbe
lods
jo
cmp
mov
mov
mov
mov
pop
push
ljmp
test
arpl
bound
movl
jg
push
xor
jg
mov
leave
jae
xor
popl
sub
xor
sub
ret
adc
addb
sub
lock
and
cld
push
out
movb
rcrl
enter
int
rorb
push
push
cwtl
popf
lods
inc
imul
lods
popf
in
rclb
pop
xlat
mov
mov
stos
jb
ret
and
in
jne
and
pop
pop
xor
push
push
jle
stos
sub
push
cmp
nop
int
loopne
decl
ljmp
arpl
movsl
add
lahf
stos
jl
rorb
sub
cwtl
push
jne
call
lds
or
sbb
mov
mov
dec
pop
dec
cmp
sub
fmul
rcrb
xlat
les
cmp
mov
jecxz
or
jp
cs
push
sbb
loopne
jle
mov
pop
sahf
dec
std
pop
mov
push
loope
xor
xor
fimuls
add
cmpsl
rcr
pop
enter
xor
repz
pop
sub
scas
cmp
cmp
sub
outsb
add
jae
jo
cmp
mov
aaa
jl
lds
or
not
fdivl
dec
mov
xchg
rorl
xchg
inc
jp
xchg
lock
nop
aas
fadd
loope
push
sti
inc
cmpsl
stos
pop
cmp
dec
mov
ljmp
out
cli
add
inc
jmp
fwait
pop
test
inc
pop
jno
in
jmp
cmc
sbb
scas
outsb
or
je
into
mov
dec
mov
sahf
pusha
mov
add
xor
mov
cmc
xchg
mov
adc
in
pop
fcmovnu
push
pop
cmpsb
cmpsb
add
sub
loop
ja
jne
mov
stos
out
mov
ret
mov
je
mov
daa
pop
data16
mov
inc
xor
sti
xor
inc
mov
lahf
ljmp
cli
mov
xlat
loop
call
es
fs
adc
sahf
fwait
js
dec
cmp
icebp
or
pusha
or
push
jecxz
pop
sahf
fs
fwait
cmpsl
push
mov
mov
sbb
bound
jns
push
divb
rcrb
mov
rorl
inc
imul
or
sub
fistps
insb
mov
push
aad
nop
popf
pop
mov
lea
pmuludq
gs
es
imul
fucomip
adc
sub
adc
cltd
dec
not
int
push
jl
data16
mov
pop
repz
arpl
add
sbb
push
fwait
jg
lret
mov
out
aaa
xorl
mov
test
iret
pop
notl
and
hlt
shl
push
sar
pop
bound
pop
out
push
sub
mov
xor
pop
cs
scas
jb
mov
inc
in
inc
fsubs
mov
daa
sti
lret
sub
test
dec
jge
push
xor
adc
pop
push
lret
sub
mov
pop
sub
test
jbe
out
mov
enter
dec
mov
mov
test
jle
icebp
push
push
imull
lods
cmpsl
add
mov
leave
jle
mov
dec
mov
inc
mov
fisttpl
sub
in
jns
cmp
mov
mov
dec
dec
mov
aaa
lahf
dec
ds
add
jo
in
cmp
mov
and
inc
outsl
psubw
mov
sub
imull
test
arpl
jns
je
inc
jg
test
mov
adc
push
xor
xor
xchg
add
xchg
inc
ret
push
jle
je
push
add
outsl
xlat
lcall
gs
push
out
aam
add
jne
fs
xchg
test
cs
in
mov
mov
addr16
or
pop
mov
jge
cltd
mov
andl
insb
fidivs
rclb
sbb
fistpl
sub
bound
mov
jno
ud1
xlat
insb
mov
mov
outsl
or
int
and
aad
shrb
push
fsubl
xchg
mov
xchg
fdivrs
adc
leave
jg
adc
mov
jo
jecxz
cmp
aam
test
inc
pop
dec
push
jle
cmpsl
xchg
fdivl
dec
aad
or
adc
pop
leave
out
dec
pop
xchg
lret
mov
daa
sbb
cmp
mov
and
out
xor
arpl
push
inc
push
add
xor
jecxz
in
push
add
xchg
jl
add
fsubrp
inc
in
movsb
sti
in
mov
ss
pop
jae
xlat
mov
je
dec
xor
xchg
rcll
sub
in
add
pusha
mov
stc
lock
mov
xor
inc
jmp
loopne
pop
adc
ret
jge
sahf
int
js
in
or
mov
in
cmc
jl
cld
es
add
loop
nop
inc
pop
pop
sub
dec
js
lds
sahf
cs
aam
pop
xchg
fdiv
test
sbb
jecxz
lock
movsb
out
stos
fdivp
stc
pop
movsb
jb
and
or
inc
xlat
nop
mov
cmp
cmp
cmc
dec
jnp
or
nop
and
xor
or
test
push
mov
cld
into
inc
sub
insb
imul
dec
pop
lods
jae
sub
in
out
das
xchg
mov
or
xlat
push
in
xor
xlat
sub
add
push
cltd
dec
cli
outsb
inc
xchg
push
in
movl
int
cwtl
lods
cmpl
les
dec
test
xor
loop
sub
enter
in
test
imul
dec
or
ret
adc
sbb
mov
add
add
repz
adc
dec
ret
sub
sbb
xchg
adc
out
cli
dec
mov
lock
push
cmpsb
daa
ljmp
or
xchg
xlat
jmp
mull
inc
push
lods
xor
testl
std
add
jg
hlt
push
fldt
or
sbbb
jo
insl
stc
xchg
fmul
pusha
cmp
adc
xchg
cmc
imul
sbb
sub
cmp
or
shrb
loope
add
add
sbb
xor
iret
sti
ja
iret
cld
mov
push
mov
push
incl
and
scas
shl
adc
add
inc
sub
push
xor
mov
enter
mov
test
pop
push
push
andl
cld
mov
fwait
imul
lgs
daa
mov
addl
mov
inc
jo
dec
cs
sti
xchg
and
loopne
dec
push
jno
dec
js
jb
in
or
add
mov
int
dec
lret
pop
hlt
ret
movb
ja
clc
pushf
jmp
in
jecxz
mov
push
ja
adc
cmc
push
push
rcll
push
add
jnp
xchg
jg
mov
dec
mov
fisttps
mov
mov
int
sbb
lret
ss
mov
int3
xlat
out
mov
enter
int3
cmc
pop
and
push
loopne
xchg
loop
pop
sbb
cld
cmp
mov
icebp
xor
aas
in
mov
popa
shl
sbb
xchg
xchg
mov
push
mov
dec
cwtl
push
lret
sbb
rcrb
xchg
jle
subb
xchg
ss
xchg
ds
mov
mov
cmp
adc
and
repz
fsubrp
fwait
mov
xchg
jle
movsl
out
mov
iret
out
jge
mov
nop
rcr
xchg
pop
in
out
dec
sti
jecxz
in
iret
roll
test
ficoms
pushf
push
xchg
lret
inc
mov
dec
sub
fnstsw
push
test
push
out
fldpi
inc
enter
out
in
cld
loop
adc
xor
jb
mov
cmc
in
cmp
xchg
das
lock
push
pop
mov
add
xchg
and
mov
dec
test
in
icebp
add
insb
int3
jno
repz
jno
lock
lahf
xor
adc
repz
mov
bound
test
adc
pop
repz
and
cmp
test
add
xchg
sbb
push
xor
sbb
int3
div
ja
and
add
cmpl
push
ret
mov
insl
ja
jbe
mov
cmp
mov
sub
or
sbb
adc
push
enter
inc
les
ret
rorl
shll
mov
pop
clc
sub
cmc
lds
subb
add
enter
or
imul
iret
outsb
fldenv
and
dec
mov
or
cmpsb
lea
das
test
cmp
lcall
add
xchg
jbe
es
sbb
repnz
les
test
dec
fimuls
dec
jae
adcl
inc
roll
mov
addl
repnz
sbb
insb
ds
pop
insb
jae
rorb
mov
dec
jl
push
jns
and
adc
xchg
jge
mov
gs
movsb
xor
jae
push
sub
xor
fisttpl
stc
popa
js
aaa
dec
xchg
push
fnstenv
lods
cmp
movntq
jmp
lock
sub
cmp
ljmp
or
ret
adc
cmc
inc
popa
fwait
jp
stc
xor
mov
lret
cmp
in
hlt
daa
add
daa
stc
adc
out
test
andl
inc
leave
and
xchg
xchg
jmp
or
and
xor
xor
jmp
add
clc
cmc
movsl
push
aaa
in
pop
mov
lea
addr16
fwait
cmp
or
push
call
in
loope
ljmp
mov
adc
stc
mov
jne
sbb
push
arpl
xor
insb
jae
add
mov
sbb
xchg
jmp
or
in
inc
test
ds
pop
add
mov
imul
movsl
out
xor
cld
mov
js
push
js
cmp
stos
icebp
fs
bound
inc
aaa
leave
out
mov
push
push
mov
stc
jle
sti
test
push
mov
cmp
pop
ljmp
scas
or
sbb
and
sub
cmpsl
and
push
push
addr16
jmp
divb
pop
cltd
sbb
ljmp
xchg
or
and
repz
out
and
pmaddwd
int
cmp
cld
sub
sub
push
lahf
aad
xor
in
push
jb
adc
jge
ret
push
mov
xor
int3
call
xor
cwtl
xchg
stos
pop
test
push
pushf
dec
scas
jae
jo
mov
pop
xlat
subl
movsb
adc
jmp
dec
jmp
fisubs
incb
mov
sub
mov
add
loope
dec
in
and
inc
cltd
pop
ret
cmp
js
add
pop
sub
test
lock
xchg
add
push
push
lods
loope
call
jno
cmpsl
pop
mov
pusha
inc
push
incb
pusha
cld
cmp
cli
stos
adc
loope
pop
mov
int
push
pop
sbb
fs
sbb
push
dec
daa
cmpsb
int3
jae
ds
hlt
mov
imul
lret
in
push
xor
loop
mov
pusha
in
or
pop
fisubs
cwtl
ret
pushl
and
xchg
arpl
push
lds
fisttps
xor
or
xor
jno
mov
cmp
aad
dec
xlat
jne
mov
lds
cs
in
jg
jae
iret
lock
int3
in
jb
shrl
mov
movb
sub
mov
dec
and
cmpsl
sub
sub
pusha
aad
or
test
sbb
cli
lahf
jmp
mov
aas
adc
fildl
repnz
xchg
scas
sarl
mov
pusha
pop
test
lea
int
inc
scas
les
iret
pop
rcrb
adc
mov
pushf
mov
push
sahf
xchg
and
xor
or
stos
xor
fnstenv
fxch
mov
or
jl
xchg
rcll
ds
dec
dec
mov
in
jns
iret
mov
xor
stc
std
rcll
dec
loope
or
sbb
xchg
cmp
leave
pop
mov
iret
xchg
mov
xchg
leave
mov
les
out
and
and
stos
xchg
xlat
int3
sbb
jp
insl
lock
xor
mov
push
fdecstp
aaa
repz
inc
nop
sbb
aam
xlat
gs
sub
cmpl
stos
push
lahf
imul
not
dec
inc
fcomip
jg
push
aad
adc
jb
cmpsb
mov
cld
daa
iret
test
mov
nop
loopne
lret
xchg
aad
lcall
cli
fwait
push
inc
push
rcrl
xchg
data16
iret
cmc
and
lahf
mov
jb
int
dec
jns,pn
sti
sub
add
adc
dec
mov
pop
loope
not
cli
pushf
ljmp
cmp
ljmp
dec
mov
pop
addr16
jb
pop
fdivrp
add
std
xlat
xchg
mov
and
dec
bound
push
test
cmp
add
test
jo
or
sbb
daa
mov
out
jmp
jnp
mov
jge
loope
pushw
dec
arpl
jg
jo
xchg
repz
loop
addr16
repnz
outsb
daa
xchg
adc
inc
push
adc
mov
and
ja
sahf
stos
fmull
push
mov
int3
in
mov
gs
add
jae
in
mov
sti
lret
sub
scas
sbb
jg
mov
mov
insb
in
rolb
shlb
and
and
or
out
push
test
xor
ja
cmp
and
xor
mov
sbb
push
hlt
nop
lret
mov
sbb
jns
cld
sarb
mov
cmpsb
es
jne
jno
pushf
mov
pop
mov
push
dec
call
in
cmpsb
in
cltd
push
sarb
mov
push
dec
adc
add
lea
dec
or
dec
fisubs
or
sub
outsl
jg
imul
out
mov
das
add
sbb
inc
loopne
xchg
aad
movsb
out
mov
sub
test
inc
rolb
sub
sarb
subb
mov
push
addb
jnp
inc
sub
push
ret
inc
cmpsb
daa
dec
imul
rorb
rorl
repz
add
sti
in
mov
fsubs
ljmp
in
mov
movsb
and
or
sbb
mov
sub
mov
fstp
pusha
add
pop
outsb
mov
mov
pop
mov
cmp
dec
js
cld
data16
flds
lods
pop
dec
adc
sub
mov
iret
xor
and
sub
cwtl
fwait
lock
inc
inc
adcb
sub
out
ljmp
pushf
push
les
add
jg
push
dec
xchg
mov
outsl
xchg
mov
inc
jae
inc
stos
ficoml
add
mov
shlb
nop
jg
aas
jns
jge
ret
out
ret
les
fs
mov
sub
mov
jnp
push
push
clc
cmp
jl
fwait
add
inc
inc
cmpsl
xchg
adc
ret
mov
insl
fs
stos
cmp
lods
add
pop
cmc
adc
outsl
adc
int
pop
xchg
scas
test
cmp
xor
mov
push
and
add
aas
pop
and
ds
inc
mov
or
pop
pop
jno
xchg
jbe
jecxz
sbb
sub
and
enter
add
jg
and
test
jmp
lcall
sbb
add
es
xor
mov
mov
ds
adc
pop
arpl
mov
adc
test
mov
ljmp
movsl
dec
lret
jg
xchg
pop
out
out
jnp
cmpsb
lahf
das
sbb
push
pop
es
jecxz
lcall
xor
push
xchg
xchg
pop
data16
push
loopne
mov
fcoml
xchg
jge
in
adc
in
add
push
das
jmp
shll
icebp
add
sbb
aaa
out
ss
or
roll
xor
loopne
insl
pushf
shll
inc
inc
mov
xchg
cmp
mov
jnp
xor
push
or
orb
dec
fistpll
movsb
cmp
sub
vpunpcklbw
push
pushf
sbb
add
cmp
mov
int3
xchg
add
push
add
lret
pop
xchg
inc
xor
and
ret
ljmp
cmpsl
push
and
add
mov
shlb
adc
pop
adc
and
out
dec
jle
rcrb
mov
sub
sbb
sbb
jns
xchg
xchg
fs
sbb
and
pusha
mov
push
notl
roll
cmc
jg
adc
jne
insl
xlat
inc
xchg
loop
shll
movsl
inc
in
cli
orb
push
mov
mov
loopne
xor
iret
in
mov
fisttps
add
dec
pop
pushf
faddl
das
mov
lds
aas
js
pop
mov
adcb
push
xchg
inc
mov
call
inc
jne
xchg
cltd
dec
aam
or
mov
xor
inc
lret
aam
sbb
adc
fldl
dec
xchg
xor
sahf
add
or
ds
in
or
subl
jl
aaa
pop
sub
aad
fdivs
or
add
cmp
mov
or
add
pop
nop
sbb
repz
sbb
js
mov
push
cmpl
or
addb
sahf
leave
mov
loope
push
imul
xchg
div
ret
outsl
lret
and
stos
data16
or
adc
mov
jp
mov
lret
les
xchg
lods
fldl
outsb
data16
ret
stc
pop
push
inc
mov
xlat
rorb
es
jbe
push
testl
jns
lea
frstor
xchg
in
inc
mov
movsb
fldl
daa
xchg
repz
aas
pop
xchg
mov
imulb
xchg
sub
push
jg
xchg
stos
or
mov
or
arpl
icebp
and
push
jge
sarb
ret
insl
xcrypt-ctr
cmpsl
testl
pop
lahf
repz
pop
xlat
pop
stc
mov
sbb
es
mov
int
lock
pop
sub
pop
dec
adc
mov
sahf
testl
xchg
pop
shrb
mov
push
test
inc
push
cmp
scas
insb
sbb
sbbw
bound
push
cmc
aad
sbb
sub
cmp
push
inc
nop
mov
mov
call
in
lahf
xchg
mov
jb
inc
push
jbe
int3
movsl
xchg
pop
addr16
popa
dec
into
repz
lret
ret
inc
inc
stos
sub
decb
pop
push
mov
mul
faddl
jmp
mov
repnz
rorl
or
cmp
bound
add
sbb
orl
or
pop
arpl
into
sub
sti
mov
add
out
and
roll
ds
push
sbb
int
mov
enter
cmpsl
push
jo
ficomps
mov
stos
js
gs
imul
loop
sbb
stc
sbb
mov
dec
gs
dec
cli
es
mov
cmp
add
pop
sbb
loopne
mov
sub
cltd
lock
or
cli
gs
xchg
repnz
test
mov
fs
inc
push
gs
jne
adc
je
xor
sub
ss
jb
or
call
cs
mov
incb
out
or
inc
fldcw
dec
daa
push
in
aas
subl
pop
push
jge
push
mov
icebp
cmc
or
mov
test
pop
push
mov
das
fiadds
xchg
add
lods
faddl
test
jecxz
mov
arpl
adc
iret
scas
repz
xchg
push
pop
or
cmp
imul
adc
mulb
xchg
pusha
cmpsl
bswap
scas
shlb
adc
ficomps
jnp
cmp
repz
xchg
mov
inc
shlb
sub
dec
sbb
adc
loop
pusha
or
jns
mov
sbbb
pop
adc
loopne
pop
js
mov
test
dec
mov
jge
push
dec
jmp
dec
das
dec
lods
sub
repz
jmp
ss
dec
je
adc
cmp
mov
stos
push
and
inc
int
push
pop
mov
mov
jbe
add
mov
in
inc
lds
cmp
xor
pop
neg
or
sbb
adc
dec
shlb
daa
cmp
out
in
loop
mov
pop
int
outsb
aad
xor
into
pop
in
inc
mov
inc
icebp
gs
mov
or
lcall
out
push
or
push
bound
icebp
jp
cmp
sbb
mov
les
pop
push
xor
xor
pop
pop
jg
jmp
push
fprem1
push
fistpll
sti
mov
sbb
xor
imul
mov
imul
loop
repz
aas
int3
sbb
ljmp
outsb
and
and
imul
popf
jnp
mov
fucomi
fisttps
aam
lods
xor
dec
mov
sbb
aad
int3
sbb
std
fidivrs
sub
test
cs
orb
jle
daa
inc
mov
fwait
sbb
ja
bound
jnp
test
in
mov
mov
adc
cs
dec
je
inc
movsl
jbe
das
mov
out
lahf
fbld
mov
adc
and
cmp
dec
in
imul
sbb
cmpsb
xor
jg
icebp
or
ret
rolb
addr16
lret
inc
pop
and
dec
jecxz
paddsw
fildll
mov
xor
shll
scas
adc
mov
xor
int3
push
push
pop
inc
das
cmp
das
adc
adc
incl
cmp
jb
pop
jns
mov
lret
movsb
add
fnstsw
jbe
iret
daa
mov
test
mov
fistpll
xchg
jle
push
or
ror
cld
jl
repnz
dec
idiv
cmp
or
dec
mov
repz
inc
fldl
cs
jl
mov
adc
repnz
inc
xchg
cltd
ret
add
add
push
mov
sbb
lock
das
sub
sti
iret
add
push
popa
call
sbb
sbb
cmp
push
test
pushl
out
or
add
mov
xor
stos
dec
and
or
jns
inc
fucomp
xchg
cmc
jae
push
loope
adc
or
jb
xor
ficoms
jb
xchg
fistl
jns
mov
pop
out
pop
imul
pop
out
jne
xchg
xor
rcll
dec
mov
in
inc
or
bound
jmp
fstp
xor
sub
lods
and
xchg
push
push
xchg
push
or
mov
sub
jle,pt
mov
jbe
shrb
lods
dec
cmpsl
cmpsb
fs
xor
shlb
les
cmc
mov
scas
pop
adc
jl
pusha
adc
push
enter
stos
add
insl
or
mov
xchg
pop
jp
inc
dec
inc
push
adc
pushl
aas
les
outsl
adc
and
repz
adc
or
cmp
pop
xchg
cmp
stos
in
sbb
fiadds
daa
inc
pop
outsl
pushf
mov
jae
cltd
add
bound
inc
xor
fsub
lods
jmp
cmpsb
xchg
xor
out
jmp
adc
mov
lds
cld
test
xor
push
or
jecxz
lahf
pop
iret
or
push
add
inc
loopne
aad
jge
sub
cli
dec
int3
jnp
neg
push
xlat
imul
loopne
sarl
test
lret
add
adc
dec
imul
cmp
mov
sahf
cltd
and
jmp
push
test
loop
pop
addl
sahf
je
insl
std
and
pop
rcr
mov
fbld
xchg
in
push
push
xchg
dec
loop
lock
mov
std
cmp
xor
mov
pop
pop
enter
mov
dec
adc
lods
pushl
mov
icebp
outsl
incb
push
add
in
jge
stos
or
lods
fbld
lahf
cmp
inc
hlt
in
push
mov
pop
pop
in
or
push
sar
ljmp
pop
mov
sub
outsl
xorl
xor
rcrb
jle
cld
adc
push
fmull
sub
cld
xchg
aad
xchg
xlat
dec
cmpsl
pop
es
xor
xlat
in
xlat
add
pop
les
sbb
lock
mov
les
xchg
das
push
xchg
je
cmpsb
sbb
inc
ja
cmp
test
cmpsb
mov
pop
push
fs
jle
dec
inc
jge
scas
jecxz
mov
sbb
sub
xchg
push
lods
jae
pop
push
inc
jle
adc
cli
xchg
add
xlat
shr
cmp
pop
jge
in
pop
std
cmp
xchg
in
jb
lods
fcmovnbe
mov
cmp
cmpsb
lahf
loopne
bound
popa
pushf
dec
push
hlt
outsl
ss
adc
in
imul
dec
test
add
nop
shl
call
pop
movsl
push
mov
aad
and
dec
aad
movsl
pop
ret
popl
adc
loope
outsb
dec
or
cmp
stc
adc
lret
xchg
adc
mov
mov
pop
lods
rcll
rcr
in
and
dec
mov
neg
or
dec
imul
sub
sub
mov
sbb
cmp
dec
and
int
lahf
pop
mov
movsb
dec
pop
xchg
jo
pop
stc
icebp
cmp
ret
scas
add
imul
cmpl
rorb
popl
outsl
xchg
aas
outsl
inc
aaa
lret
jne
mov
or
stc
jl
fs
add
mov
ret
lods
inc
mov
xchg
mov
scas
mov
xchg
repnz
add
mov
sbb
movsl
mov
jg
scas
loope
or
arpl
pusha
adc
cmp
divl
xchg
sub
mov
xor
xchg
sub
in
aas
shr
mov
dec
enter
sbb
jb
xchg
das
mov
jmp
xchg
lock
inc
test
jp
bound
jecxz
sbbb
dec
mov
pop
hlt
leave
mov
test
xchg
sub
outsl
popa
shl
cmp
jle
fbld
cltd
sub
into
push
cld
or
shrl
outsb
sbb
fs
xchg
or
push
mov
test
insb
cs
test
pop
xchg
add
sub
enter
mov
add
pop
dec
stos
xchg
mov
call
dec
fstl
push
enter
or
movsl
xor
sub
push
sbb
jno
mov
scas
sbb
dec
jno
mov
xchg
ljmp
xchg
lock
stc
xchg
dec
inc
mov
xchg
loop
test
mov
ret
sarl
jb
mov
aam
out
mov
sub
add
rolb
mov
stos
ljmp
add
inc
add
jl
test
scas
sahf
cld
inc
or
adc
jp
jbe
rclb
xlat
jbe
shl
scas
mov
dec
out
adc
in
in
xor
enter
inc
fnsave
push
mov
dec
cltd
fldt
enter
daa
mov
jo
das
lcall
cmpsb
shrl
imul
jg
cltd
add
pop
test
pop
or
dec
aam
subl
xor
push
je
push
iret
and
lods
adc
hlt
adc
cmp
ds
pop
ja
es
inc
adc
mov
cmp
decl
bnd
insb
adc
fs
test
pusha
sahf
ss
dec
jne
lret
jnp
jle
test
icebp
test
or
lods
inc
push
loope
imul
jns
xchg
xchg
fcmovb
pop
lea
and
dec
and
pop
dec
andb
xchg
push
jae
pop
lea
add
mov
jg
xchg
lahf
pusha
push
ficompl
jmp
popf
pusha
mov
repz
cwtl
dec
xchg
ret
mov
xor
pop
jg
popf
mov
stc
xor
xchg
inc
ret
or
add
mov
cltd
and
mov
xor
clc
test
add
ficomps
mov
shll
hlt
and
mov
lret
icebp
leave
mov
and
mov
push
popf
pop
dec
pop
push
or
leave
lods
out
pop
xchg
aaa
insb
and
dec
pusha
ret
pop
xorl
pop
adc
sub
sbb
dec
inc
cmc
lock
ss
arpl
or
inc
push
lods
pushf
in
in
add
pushf
cmp
roll
mov
out
inc
lea
push
cmc
adc
add
dec
sbb
movhps
sti
cmp
test
scas
ja
xor
mov
mov
jno
add
aad
lahf
enter
loop
lods
pushf
lods
inc
sbb
push
lcall
cmpl
dec
lea
mov
aas
push
xor
mov
xor
add
stos
rorl
push
add
mov
ljmp
add
sbb
hlt
push
pop
call
mov
fisubrs
cmp
inc
adc
movsl
out
lds
cltd
sub
adcl
pusha
les
mov
stos
add
adc
in
inc
loop
inc
cmpsb
mov
repnz
push
shll
xchg
jns
ja
push
movl
xchg
push
push
dec
cmpsl
int3
loopne
add
cmpsb
add
sub
sbbb
adc
cmp
dec
xchg
add
dec
mov
ljmp
enter
sbb
daa
call
mov
push
iret
mov
jl
add
xchg
stos
dec
add
push
dec
stos
sbb
sub
cmp
adc
jne
sarl
incb
xor
push
or
notl
aaa
mov
rcrb
xor
aam
mov
add
lcall
bound
mov
xchg
push
mov
push
out
ret
jmp
sub
pop
pop
cli
shlb
cmp
or
cmp
lret
mov
cmp
shrb
enter
push
push
push
jmp
mov
mov
outsb
gs
push
and
ja
dec
hlt
cmp
and
daa
je
stos
jbe
add
aam
jne
fwait
sbb
push
or
push
sbbb
popa
lret
movsb
jne
test
call
sbb
jp
out
adc
es
movsb
stc
popf
cld
cmp
pop
roll
pop
lock
out
dec
adc
cmp
cmp
jmp
or
add
jns
lods
test
sti
pop
xlat
jae
shll
xor
xor
xor
or
jnp
enter
dec
sbb
mov
call
jge
adc
data16
inc
lods
das
shrl
xchg
movsb
call
push
xchg
fs
jg
dec
jo
adc
dec
mov
xor
lods
sbb
ficompl
inc
pop
add
scas
jnp
leave
jnp
mov
sub
nop
repz
sbb
lock
xchg
aas
xchg
aas
add
push
sbb
jecxz
ja
ss
mov
sahf
push
fisttpll
sbb
clc
and
jl
pop
push
jbe
mov
les
mov
cmp
dec
jne
lock
pop
mov
dec
and
jns
jp,pn
fcom
and
xchg
and
imul
and
lret
verw
or
and
add
pop
or
adc
push
jmp
add
shrb
fs
or
mov
cs
cwtl
arpl
sti
out
cmp
cmp
jne
lret
fcompl
inc
arpl
jp
insb
scas
ret
or
pop
icebp
js
jl
test
daa
sti
inc
movsl
js
pop
movsl
ret
or
nop
addr16
shll
imul
fidivl
push
mov
and
pop
mov
movsb
add
gs
jp
mov
leave
inc
frstor
sub
mov
jmp
shll
lock
test
pop
push
fstps
stos
sub
xor
bound
les
in
pop
mov
pop
in
jae
insl
decl
sub
gs
jle
mov
outsb
and
fldl
in
stos
jl
sub
test
dec
insb
jo
mov
popa
gs
aaa
js
repz
in
leave
mov
xchg
jge
push
stos
popa
outsb
dec
dec
cmp
mov
fdivp
in
xchg
iret
outsb
mul
ret
cmp
ret
push
fs
dec
sbb
jecxz
mov
mov
ss
push
les
and
arpl
lret
movsb
popa
inc
shlb
and
mov
test
xchg
add
lds
hlt
mov
push
popf
adc
or
jge
xchg
xor
cmp
hlt
mov
push
push
sub
scas
jns
and
and
jo
popf
cmp
mov
jno
xchg
cmp
lcall
sub
sbb
out
xchg
adc
or
sti
mov
fsubs
lcall
adcb
mov
nop
aad
and
inc
out
cmp
mov
push
mov
int
mov
out
ds
fdivl
popa
cmp
sbb
sub
dec
cmpsb
and
rolb
adc
leave
mov
xchg
jnp
mov
fdivrl
jb
push
xchg
testl
mov
xchg
push
pop
mov
pop
ljmp
movsb
lret
cmpsb
dec
sub
mov
or
xor
cmp
jmp
dec
push
mov
xor
mov
cmp
lea
mov
aam
mov
mov
daa
repnz
pushf
xchg
sbb
pop
pop
mov
and
ud0
lods
sbb
ljmp
lahf
aas
int
inc
sub
xchg
pop
sub
xchg
mov
ds
push
mov
fnstsw
lahf
xchg
lret
lahf
mov
ret
lods
dec
fimull
or
cmp
inc
or
sbb
jno
fsub
cmp
push
cmp
pop
xor
or
push
xchg
cmp
in
lds
bound
test
popf
pop
and
pop
pop
xor
jo
out
lods
std
jp
popf
andb
cmc
push
cwtl
in
int
xor
mov
aam
pop
push
sti
aas
xchg
aaa
ud2
inc
xchg
inc
imul
test
stc
xchg
sbb
sbb
addr16
push
lcall
stc
inc
pop
fwait
ret
repz
push
rcrl
leave
jl
pop
dec
jne
scas
lcall
imull
outsl
fcoml
push
or
in
int
push
ljmp
lret
rolb
lock
cmp
mov
outsb
jp
sahf
scas
xor
pop
ret
sub
fsubs
pop
dec
lcall
stc
icebp
ss
sbb
pop
or
fmuls
arpl
sbb
in
mov
and
scas
dec
and
std
inc
cmp
and
xor
call
inc
sbb
push
cmp
sbb
cs
mov
pavgb
dec
mull
ja
loopne
cltd
inc
lds
lock
test
aam
mov
xchg
aas
jle
jns
dec
mov
lods
sub
push
inc
in
or
fs
push
inc
mov
ret
jmp
inc
leave
rcll
or
sbb
bound
cmp
jnp
lock
aad
stos
je
in
ja
cmp
loope
cmp
push
or
pop
cmpsl
push
cmp
inc
xor
fwait
and
jae
jae
xchg
mov
jmp
divl
imul
jnp
mov
in
and
rorb
or
inc
ds
icebp
xor
pop
int
pop
repz
xor
mov
mov
in
inc
adc
jne
cmp
cmc
lock
inc
subl
mov
int
test
xchg
cmp
cmpsb
loope
push
dec
insb
push
sub
hlt
and
push
insb
push
sti
out
ja
cmp
pushw
sbb
insb
pop
cmpsl
inc
mov
lret
out
adc
mov
and
lods
mov
add
data16
arpl
or
push
sbb
pop
jle
ret
jbe
sbb
dec
xlat
stos
cmp
js
outsb
jl
orl
mov
add
mov
call
shlb
movsbl
dec
daa
jne
sbb
or
jns
cli
push
xchg
xor
sbb
in
lods
jecxz
sub
mov
mov
scas
and
sbb
fcoml
sti
or
mov
mov
into
mov
iret
leave
xchg
push
push
push
idivl
maskmovq
imull
cld
inc
roll
mov
push
pop
xlat
mov
imul
int
adc
and
shrb
sub
js
mov
and
or
add
xchg
hlt
adc
cmp
lahf
dec
dec
shl
sub
cmpsl
or
dec
in
add
mov
ss
or
fmul
cmp
pop
cltd
jecxz
sub
cmc
test
aaa
xchg
cmc
hlt
push
cmp
shrb
or
jge
inc
je
add
lods
cmp
pop
jnp
sub
js
add
lcall
ja
enter
mov
call
rcrl
mov
test
out
mov
xor
pop
xor
call
cld
in
test
cmp
lret
push
cvtps2pi
dec
sub
ret
sbb
pop
mov
mov
jg
js
and
jae
add
dec
daa
sbb
or
mov
jne
ret
push
mov
sub
push
jnp
sub
ja
push
sbb
cmpsb
movsb
into
inc
dec
shr
cmp
and
cmp
xorb
fcom
fwait
xchg
in
call
jno
daa
inc
xor
xchg
xor
faddl
stc
cmp
sti
stos
rolb
inc
in
loop
push
mov
xchg
or
ds
xchg
mov
sbb
add
cmp
testb
aas
jbe
test
sub
jl
aam
stos
mov
cmpsb
push
push
test
lods
cmp
cmc
icebp
adc
jl
loopew
sbb
std
cwtl
pushf
mov
scas
fistpll
stc
xchg
or
sub
je
paddb
inc
xlat
pop
add
sub
aam
es
xchg
xchg
lea
stc
imul
or
das
outsb
cmp
lret
mov
adc
cli
or
fdivl
xor
mov
dec
add
inc
cmp
adcb
adc
dec
adc
insl
add
lods
lds
xor
insl
mov
mov
sub
dec
inc
sti
out
imul
sahf
js
out
mov
es
jge
int
push
repz
pop
push
jmp
mov
ret
aas
enter
inc
dec
push
inc
xchg
inc
push
pop
push
xchg
out
inc
clc
dec
pop
dec
dec
dec
xchg
popa
add
in
ds
inc
sub
mov
jae
pusha
fsubp
addr16
call
lock
mov
or
sbb
inc
ficompl
jp
pop
stc
push
insb
mov
daa
inc
ljmp
rorb
insl
lods
aas
add
and
ja
jbe
shll
mov
test
loop
enter
pop
movsl
std
rcrl
fstl
jmp
jae
cmc
cmp
test
mov
outsl
mov
dec
fdivs
arpl
test
in
push
xor
popl
mov
ret
jge
lcall
test
and
xchg
mov
pushf
xlat
outsb
leave
loop
aad
cmp
push
stos
sbb
or
js
outsl
ja
nop
jg
and
lods
fwait
stos
dec
mov
sub
xchg
cmc
and
stc
insb
imul
cltd
xchg
enter
fldenv
shrb
cmp
leave
sarb
inc
pushw
test
jge
hlt
leave
cmp
scas
jnp
push
stos
sub
nopl
sbb
adc
or
pop
jp
pop
mov
pop
mov
and
mov
xchg
sub
out
pop
ds
fidivl
mov
sbb
jns
xlat
js
call
cmp
cmc
div
arpl
push
stc
adc
sbb
test
insb
es
mov
jge
or
adc
cld
pusha
add
cmpsb
mov
ljmp
push
dec
mov
loope
mov
lock
in
cmpsl
mov
xchg
sub
cmp
jno
mov
sub
into
jecxz
jge
xor
pushf
adc
jae
into
inc
jmp
popa
and
cwtl
pop
js
loopne
cmpsb
mov
mov
mov
and
cmpb
or
sub
movsb
dec
loope
stc
xchg
cmp
push
inc
or
lock
add
dec
inc
inc
outsl
int3
xchg
mov
mov
inc
test
mov
in
lods
push
xchg
sub
mov
adc
and
cmp
mov
outsb
xchg
mov
dec
imul
mov
pusha
lods
mov
jp
stmxcsr
mov
ror
ret
or
mov
jno
jg
lods
test
mov
mov
test
add
stc
inc
push
les
cmp
mov
out
dec
sbb
js
push
jg
orl
lret
xor
dec
add
insl
aam
and
in
addl
sub
push
addr16
aam
lods
adc
push
add
addr16
jbe
pop
fldpi
jecxz
and
adc
or
sahf
pop
mov
rcrb
sub
cmpsl
cmp
lds
pop
xchg
lds
scas
push
test
les
sbb
fwait
outsb
arpl
mov
dec
xor
jg
sub
fcoms
aad
fsubrl
pushf
sti
pop
mov
push
dec
stc
fld1
flds
jg
subl
xchg
repz
push
imul
aas
insl
sbb
jecxz
push
cmp
pop
jmp
dec
mov
xchg
fsubrp
mov
addr16
in
imul
inc
cltd
std
sbb
in
loope
loopne
mov
sbb
adc
xchg
clc
and
hlt
dec
xor
adc
jb
pop
aad
out
jg
movsl
int
adc
pusha
xchg
pop
lods
notl
jmp
xlat
and
push
push
push
out
insb
mov
cmp
aam
sti
mov
test
cmp
out
fiadds
rep
out
add
pop
mov
sub
stc
pop
fbstp
sbb
das
pop
in
push
ror
mov
sbb
mov
push
mov
cs
push
aad
jge
add
xlat
adc
push
mov
int
mov
xor
lds
sub
gs
iret
adc
dec
mov
pop
adc
add
jns
shl
jmp
xor
lock
push
rclb
stos
test
mov
jns
mov
lods
jne
push
push
and
and
jo
mov
and
mov
and
ds
test
mov
stos
add
dec
cli
mov
movsl
repz
and
add
push
outsb
nop
test
pop
pop
loopne
ret
inc
sti
add
mov
mov
or
jecxz
std
mov
sub
add
pop
ret
mov
pop
je,pt
cmp
cmpsl
mov
ss
outsb
mov
xor
sub
mov
fdivl
mov
pushf
cmpsl
bound
mov
in
data16
xor
mov
mov
inc
bound
cld
js
mov
sbb
jmp
fwait
rolb
div
imull
sbb
aam
push
fldt
mov
add
sub
mov
inc
mov
std
fldenv
cltd
pop
mov
jnp
fnstsw
pop
jo
mov
popa
sub
dec
repz
sbbl
xchg
bound
ret
dec
shr
or
push
out
lcall
mov
loop
sbb
in
ljmp
scas
test
in
jo
fsubp
pusha
or
dec
adc
xchg
jnp
mov
sub
or
out
imul
punpckhdq
cmpsl
mov
jnp
mov
sbb
fstps
add
fisttpl
fidivrl
mov
xor
mov
mov
imul
mov
outsb
cwtl
cmp
dec
shll
stos
add
dec
cmp
pop
ret
xchg
sarl
ja
mov
cmp
out
in
clc
sub
and
push
repnz
sbb
xchg
jmp
mov
jno
inc
loopne
inc
xchg
add
cmc
mov
into
pushf
arpl
aad
pop
sub
cmp
mov
push
xchg
add
cmc
cmp
jnp
mov
mov
outsl
pop
insb
inc
dec
mov
aad
jbe
test
mov
es
out
call
sbb
xor
push
xor
lock
fwait
std
das
movsl
lods
xor
adc
xchg
push
mov
add
inc
dec
leave
cmp
dec
pop
ficompl
scas
fnstsw
es
clc
lea
mov
or
push
or
jns
xchg
fcmovne
push
push
inc
ret
add
xchg
ja
pop
push
add
fistps
push
xchg
scas
inc
enter
cwtl
inc
or
jmp
jno
icebp
rol
mov
insl
jnp
dec
popf
jno
je
sub
loopne
popf
fwait
cmp
mov
ret
cmp
mov
xchg
xchg
jns
lea
or
andl
xchg
dec
xor
aam
xor
scas
jb
push
inc
and
call
and
icebp
ror
lds
addl
js
jp
enter
fiaddl
mov
mov
pop
cmp
and
jp
cmp
jp
lock
inc
sub
lods
aas
xchg
dec
or
out
out
ss
jne
sbbl
lret
out
inc
xchg
or
inc
ret
mov
or
je
test
and
fldl
xor
jmp
sbb
lock
aas
sbb
iret
push
test
sarl
inc
push
inc
xchg
push
sbb
mov
and
mov
lahf
fsubrl
and
ret
mov
into
mov
jne
aaa
add
call
hlt
jmp
std
sbb
pop
imulb
adc
filds
aam
mov
data16
push
jnp
aaa
loop
jle
std
jnp
outsl
mov
cmpsl
push
out
add
xor
scas
movsb
push
pop
mov
sub
inc
xor
lods
jno
push
das
pop
pop
jnp
hlt
cmp
fsubl
push
xchg
xchg
jl
xchg
and
leave
cltd
stos
popf
add
mov
fmuls
lret
aad
ret
pop
push
movsb
outsl
mov
es
push
mov
mov
cmp
push
jo
cmp
xchg
inc
mov
mov
pusha
nop
rol
popf
ja
adc
stos
lods
or
ret
in
daa
fyl2x
jns
jle
out
in
imul
faddl
inc
pop
or
xor
mov
leave
dec
cwtl
mov
das
and
inc
dec
push
loopne
cmpsb
es
cld
adcb
cmp
ret
out
jg
aad
cmp
xchg
imul
adc
jno
call
pop
or
push
mov
cmp
cmp
fiadds
scas
scas
push
mov
add
xor
in
clc
mov
jae
clc
jl
mov
ljmp
stc
pop
aad
movsb
popa
pop
int3
xor
sub
mov
mov
mov
pop
mov
movsl
adc
mov
test
dec
insb
mov
jp
scas
les
or
loopne
or
pop
outsb
loop
mov
push
cmpsb
cmc
inc
cmp
and
adc
rolb
fldt
jp
adc
aas
inc
push
pushf
push
out
xor
mov
dec
inc
cmpsl
fwait
repnz
lahf
adc
add
mov
pop
cmp
psubsb
and
adc
dec
cmp
xor
ret
notl
inc
clc
cmp
xor
mov
aam
mov
or
pop
mov
add
jmp
dec
and
jno
push
shll
mov
add
fwait
dec
and
add
pop
jp
leave
lea
push
and
mov
bound
adc
pusha
call
daa
inc
sbb
scas
mov
inc
sub
pop
lret
jg
ja
fdivrs
dec
test
cmp
fildll
pop
das
cmpsl
fbstp
and
push
push
leave
xor
rorb
mov
mov
mov
or
inc
xchg
pusha
push
cmc
ss
add
loope,pt
xchg
and
clc
rcll
in
mov
adc
aaa
sbb
mov
cmpsb
cltd
mov
fwait
adc
jg
push
xchg
fdivrl
mov
int3
dec
test
roll
and
out
aaa
ja
data16
jmp
inc
fidivs
dec
repnz
sub
mov
jg
adc
sub
xchg
iret
add
fucom
adc
mov
mov
cltd
insb
inc
stos
mov
pop
dec
test
cs
mov
sub
in
xchg
test
loope
dec
ljmp
jns
mov
scas
adc
mov
cmpsl
fstps
ret
push
sub
lret
pop
lock
popa
stos
add
jae
insl
lahf
cmpb
stos
inc
inc
sbb
mull
out
scas
negb
and
divl
mov
mov
clc
or
mov
lret
push
mov
imul
shlb
nop
loopne
pop
lods
or
ds
bound
mov
jb
fisubs
outsb
mov
gs
cs
or
push
rorb
xchg
pop
mov
repz
jne,pt
xchg
xchg
mov
outsl
mov
cmp
or
mov
lods
repnz
rcr
sub
push
lret
pop
cmp
add
int
add
lret
xor
pop
lea
push
pusha
ljmp
dec
pop
inc
shlb
mov
repz
leave
je
leave
divb
mov
test
shlb
negb
push
test
push
jl
pop
test
mov
add
lcall
stos
fcmove
pop
xor
or
sub
xchg
cltd
or
sub
xor
gs
ret
mov
fstpl
repnz
jge
ja
xchg
rcr
push
adc
les
int3
mov
inc
push
mov
outsl
adc
xor
xchg
ljmp
cmc
ret
or
jne
lcall
out
jl
and
xor
pop
leave
mov
xchg
and
mov
sub
mov
icebp
lods
push
in
add
fcomp
cli
sub
mov
jo
sbbb
sbb
xor
insl
sbbb
fisubrl
xor
shl
inc
jle
enter
mov
stc
or
inc
cmpsl
mov
fiadds
lcall
xor
frstor
xchg
push
mov
xchg
scas
xor
loopne
jl
daa
scas
push
mov
mov
add
jmp
lahf
xchg
dec
or
mov
add
cmpsl
or
stos
xchg
mov
sti
subb
xlat
and
xchg
dec
les
pop
dec
mov
loop
aas
or
popa
dec
jl
mov
sub
lods
bound
adc
les
cmp
mov
push
lea
leave
mov
sbb
fwait
add
bound
into
hlt
xor
bound
lea
ret
cld
xchg
jnp
and
or
in
pop
lahf
in
dec
or
out
cltd
pop
mov
mov
stc
sarl
das
jp
popf
test
js
jns
and
add
cld
mulb
adc
sbb
xchg
xor
sti
ret
lret
sar
movsb
xor
cmp
fsubrl
es
pop
jo
and
sbb
and
lret
adc
repz
or
ss
ja
ja
out
add
dec
cmp
cmc
sbbb
inc
fwait
mov
daa
clc
fisubs
iret
movsl
adc
popf
lea
jbe
sbb
dec
sbb
leave
out
in
add
xchg
cmp
add
fdivs
mull
pop
hlt
pusha
jo
xor
xor
lds
imul
jle
scas
xor
inc
inc
test
or
jae
js
cmpsb
add
loopnew
mov
push
and
sub
in
adc
inc
imul
repz
mov
pop
insl
ret
mov
pop
in
jg
dec
push
add
add
je
mov
push
dec
xchg
movsl
jmp
in
sbb
jns
mov
pop
mov
xchg
scas
pop
es
out
and
test
pop
cmc
mov
ja
jno
lock
cmp
scas
pop
pop
iret
inc
sub
pushf
add
addr16
push
mov
or
gs
dec
push
xor
cmp
loope
dec
jmp
and
rcrl
lea
sbb
xor
fdivl
mov
mov
add
push
and
xchg
shrl
mov
add
ss
or
mov
cltd
inc
fnstcw
or
idivl
in
dec
fiadds
js
stos
push
mov
mov
push
aaa
cmpsl
add
mov
enter
negl
mov
leave
mov
insl
popa
cltd
movl
lret
pop
loop
jmp
ss
daa
lods
or
push
js
pop
pop
repz
mov
sub
mov
das
sbb
mov
lret
test
std
xor
andl
mov
mov
pop
ja
jo
cmp
std
nop
pop
int
mov
and
add
push
fnstenv
sbbb
mov
jecxz
sbb
pusha
push
lods
scas
fldl
jae
clc
jl
xchg
andb
pop
or
xor
inc
popa
sub
out
push
mov
jmp
mov
jbe
cmp
ss
cld
xchg
cld
dec
jbe
xor
test
xchg
adc
fcom
mov
insl
mov
fs
mov
push
and
stos
ret
xchg
dec
repnz
lahf
lahf
and
pushf
mov
dec
lcall
jne
push
xchg
sbb
mov
inc
mov
sbb
mov
imul
repnz
popa
loopne
jns
popa
dec
push
out
sub
mov
jne
add
dec
or
xchg
sub
mov
mov
rclb
fisubrs
popa
clc
call
scas
fs
sub
dec
lcall
leave
fmuls
cmpsl
mov
xor
mov
pop
in
adc
xchg
xchg
pop
daa
jo
in
mov
enter
ret
mov
xor
in
cli
xor
stos
pop
dec
xchg
fisubrs
sbb
or
in
cmpsl
jp
cwtl
add
mov
or
out
push
jg
dec
mov
mov
mov
popa
fiadds
pop
pop
inc
int
das
mov
cmpl
lods
inc
call
notb
adc
call
dec
mov
add
pop
popf
fnstcw
rcl
adc
movsl
xor
popl
push
fdiv
insl
mov
cmpsb
pushf
mov
pop
ja
test
inc
dec
push
pop
mov
cmp
adc
cmpsb
dec
cmc
fildll
loope
cmp
jo
lret
movsl
mov
in
lahf
or
mov
out
pop
shll
ret
loopne
shlb
jmp
sbb
mov
cld
adc
cltd
aam
ret
js
fiadds
cwtl
cmpl
mov
xchg
inc
scas
xor
inc
mov
jb
dec
insl
jle
rorb
mov
adc
fsubs
mov
shrl
dec
mov
in
imul
pop
loope
movb
into
xor
push
in
adc
sub
jl
movzwl
icebp
pop
lret
sbb
or
and
ficoml
cltd
jg
incb
add
push
inc
pop
xchg
stos
xchg
mov
xlat
add
adc
dec
cmpsl
xchg
lods
mov
cmp
imul
dec
xchg
in
or
shr
inc
mov
lds
shll
add
add
add
push
loop
fsubs
pop
add
sbb
pop
mov
decl
mov
mov
out
sti
ficoms
adc
les
push
test
pop
std
sbb
sub
iret
jge
pop
mov
cwtl
scas
out
jbe
aaa
arpl
int
enter
std
in
jecxz
fcomps
pushw
or
jbe
cmp
and
mov
or
dec
imul
jns
xchg
stos
sarl
ret
dec
push
adc
addr16
cltd
xorl
iret
popa
pop
and
nop
repz
pop
outsb
xor
testl
and
adc
adc
mov
jle
push
mov
mov
adc
leave
add
mov
sbb
in
sahf
fstpt
and
test
sahf
rclb
cmpl
movsl
cmpsl
xlat
mov
fbstp
jmp
pop
enter
dec
add
cltd
das
add
leave
rorb
pushf
cs
sbbl
xor
icebp
test
aas
dec
push
pusha
insb
cmp
fwait
adc
jle
jae
and
scas
push
mov
dec
out
sub
leave
fidivs
or
cmp
and
pop
out
adc
lahf
in
dec
cmpsb
sarl
dec
scas
sbb
or
jle
fwait
enter
pop
mov
test
push
enter
mov
adc
mov
scas
sti
je
and
insb
ljmp
add
and
jecxz
outsb
dec
sti
ss
push
inc
add
push
xor
and
pushf
cmp
sbb
sub
ss
cmp
jae
arpl
mov
addr16
push
sbb
std
cwtl
add
data16
adc
sbb
pop
aas
and
mov
test
mov
lret
mulb
scas
dec
mov
and
push
in
push
sbb
and
insl
jo
outsl
cmp
out
imul
aam
clc
jge
imul
mull
out
retw
leave
mov
mov
adc
sbb
and
loopne
cmp
mov
clc
inc
cmpsb
fimuls
mov
sub
mov
ret
xor
lods
pusha
dec
xor
xor
jl
cmp
pusha
push
jl
sbb
xchg
rolb
push
dec
xor
imul
mov
mov
std
in
test
dec
inc
pop
sbb
pushf
out
cld
jmp
fsts
ret
jle
stc
imul
push
test
ret
jo
cli
cmp
out
jle
call
in
jo
scas
movl
rorl
sahf
and
lock
xchg
mov
js
xrelease
cltd
mov
or
mov
cmp
push
dec
dec
add
inc
cld
dec
aad
add
sbb
mov
jae
daa
cmp
sbb
sbb
icebp
stos
xchg
test
stos
data16
out
dec
call
cwtl
rorb
xor
jne
shll
jg
add
dec
add
addr16
xlat
movsb
repnz
ret
inc
sbb
add
xor
arpl
jb
fstl
inc
cmpsl
mov
jne
movsl
mov
add
pop
or
xor
inc
mov
inc
rcr
adc
fiadds
scas
andl
push
mov
mov
ror
lods
xor
mov
or
and
cmp
scas
and
jb
sbb
ljmp
dec
cmp
jmp
int3
subb
lods
cmc
adc
mov
sub
mov
call
pop
push
jle
inc
sarb
iret
sub
arpl
idiv
pop
iret
out
xchg
push
aad
push
xchg
or
pushf
std
xor
lahf
pop
cmp
pop
push
dec
and
pop
sbb
sbb
xchg
sbb
cmp
cs
cs
mov
dec
orl
mov
jne
xlat
mov
add
mov
call
add
lods
cmpsb
andl
ds
arpl
jno
mov
lock
mov
out
adc
insl
out
cmp
lock
rcl
push
pop
jne
mov
fs
pop
int
das
push
lds
xor
movsb
dec
iret
arpl
sbb
xor
inc
dec
add
aam
lds
jl
inc
imul
sbb
fwait
addb
fmuls
pop
out
out
jnp
in
adc
mov
mov
mov
inc
or
adc
stc
dec
lods
outsl
push
xor
push
jae
insb
enter
or
dec
xchg
test
and
xor
jecxz
pushf
icebp
mov
adc
sbb
adc
sbb
pop
cmp
mov
rorb
lods
aaa
fldenv
dec
insb
cmp
ret
mov
sub
mov
fistl
sub
mov
jg
adc
rolb
mov
cltd
mov
cmpsl
sbb
sbb
sub
lds
cmp
inc
scas
std
sub
mov
mov
lds
inc
shrl
stos
cltd
mov
into
mov
mov
lods
pop
in
mov
insl
pavgb
mov
sarl
cmp
rclb
mov
movsb
xchg
addb
cmp
or
enter
add
roll
jg
addl
out
add
inc
dec
xor
cmpsb
mov
mov
nop
jecxz
orl
loopne
clc
lret
iret
sub
and
dec
mov
fs
xor
mov
scas
loopne
cmpl
dec
movsb
mov
fisttpll
pusha
dec
xor
dec
jmp
inc
mov
sti
push
fadd
dec
push
je
sub
cld
cmpsb
jl
xchg
lds
test
ret
out
out
pop
movsb
dec
and
mov
sbb
sub
pop
sub
jl
cmp
push
or
pop
jae
jecxz
push
pop
jo
inc
sbb
das
std
jmp
out
in
lcall
pop
stos
dec
mov
hlt
lods
aam
cs
mov
sbb
rclb
jo
ljmp
lret
loopne
test
mov
dec
dec
fdivrl
jmp
xor
pusha
cmpsl
leave
xchg
inc
fwait
mov
lds
jns
xchg
ficompl
adcl
aaa
mov
cmp
mov
clc
std
mov
adc
mov
pop
cmp
nop
push
pop
push
inc
ds
add
xor
subl
push
dec
js
popa
lahf
push
mov
push
fs
inc
pop
fcmovu
jns
out
loop
push
push
pop
cmp
pop
lahf
cmp
xchg
xor
test
enter
insb
mov
pop
iret
out
les
jmp
sub
push
lods
mov
in
fidivrl
jle
lds
xchg
dec
pusha
scas
out
lods
push
movsl
test
movsl
dec
add
pushf
xchg
fildll
push
and
cmpsb
stos
leave
sarb
in
fmuls
fwait
shlb
lods
outsb
or
sub
decb
mov
mov
or
aaa
push
in
push
shrb
stc
jl
mov
ret
call
cltd
jmp
addl
push
add
jne
test
cltd
es
rcrl
out
xor
add
push
scas
ja
pop
jns
pop
pop
or
sbb
mov
adc
xor
or
lock
dec
jnp
cmp
adc
mov
jno
jns
mov
cmpsb
rol
cmp
xor
imul
mov
shll
lahf
pop
ret
mov
mov
pop
jae
sbb
ds
inc
xor
sbb
daa
or
cs
test
or
addr16
push
pop
jg
mov
and
addl
cli
jp
je
lea
sub
pop
ficoml
fnstenv
push
or
outsl
add
pop
imul
les
or
cmp
mov
jbe
insl
push
mov
jle
jecxz
or
mov
icebp
cwtl
pop
out
lret
movsl
mov
xchg
xchg
shrb
fwait
imul
pop
pop
mov
rolb
in
jb
jmp
in
mov
pop
jg
push
pop
fsubr
dec
dec
test
mov
fldcw
loope
and
std
jle
sub
mov
sbb
cmp
fidivrs
cmp
out
enter
inc
cmp
sbb
pop
cs
stos
push
dec
les
imul
nop
into
lret
pop
popf
aam
jo
lret
push
das
cmp
cltd
jp
pop
cmpsl
lcall
outsl
dec
loopne
leave
bound
mov
dec
inc
fdiv
fists
clc
call
test
imul
popf
lahf
lahf
ds
or
mov
xor
push
icebp
and
into
bound
or
pop
mov
and
jo
je
adc
mov
pop
sub
push
push
sub
gs
jp
mov
push
mov
xchg
aaa
push
xor
insb
repz
push
enter
and
add
fwait
sub
add
dec
cmpb
sub
loop
in
bound
pop
dec
data16
ds
mov
inc
fcmovnbe
cmp
fistpll
push
pop
loopne
jge
xor
aaa
out
inc
xorl
lret
dec
or
lods
cltd
pop
leave
pop
ds
mov
nop
sbb
sahf
test
pop
cli
les
adc
pop
sti
ja
into
aam
jmp
xor
dec
data16
shll
push
sub
nop
les
pop
push
add
icebp
or
sarb
pop
sbb
dec
push
bound
mov
jecxz
mov
pop
outsb
lods
lods
popa
repz
dec
rcrb
inc
rorl
mov
push
mov
adc
and
xchg
cmp
rcrb
out
mov
sub
roll
lods
cwtl
out
push
or
xchg
dec
xchg
mov
and
mov
negb
sub
imul
clc
add
js
std
std
push
je
dec
shrb
or
mov
repnz
setg
and
sbb
xchg
add
sahf
xchg
repz
sub
ss
sahf
jae
mov
xchg
pop
pop
mull
shlb
std
shlb
stos
xlat
add
add
cmpsl
dec
push
sbb
loope
jne
pop
mov
xor
push
adc
xor
out
lahf
pop
arpl
push
loopne
neg
cmc
pop
jge
adc
mov
adc
push
movsl
in
jae
pop
out
popa
les
and
enter
xchg
aam
fnsave
loop
fldt
mov
loope
dec
cmp
fistl
je
add
inc
scas
loope
insb
es
cli
and
repnz
sbb
mov
inc
sub
fs
roll
cmp
insl
ds
in
mov
lods
int
mov
jnp
ror
or
addb
enter
lret
inc
xor
je
push
dec
and
sbb
outsb
movsl
js
cmpsl
test
fadds
and
rorb
mov
inc
fistpl
sub
xlat
cmp
cmp
aad
scas
test
push
xchg
sub
mov
dec
add
inc
pusha
or
adc
xchg
add
or
movsl
sub
sarb
aaa
inc
pop
mov
sahf
and
fistpl
nop
mov
fnstsw
lea
dec
pop
test
iret
pop
in
xor
pop
add
xchg
jno
dec
cmp
sbb
and
ficoms
xor
push
xlat
insb
inc
in
js
pop
xor
dec
aad
jmp
pop
popf
mov
mov
lret
cwtl
pop
and
ret
insb
bound
mov
dec
sub
push
jbe
call
subb
inc
cmpsl
sub
mov
insl
cmp
push
jnp
jge
test
cld
fmul
add
push
add
add
cltd
dec
in
ret
dec
lret
mov
cmp
push
inc
jle
popa
test
lods
loope
pop
mov
ljmp
cs
push
shrb
dec
rorb
lret
xor
stos
jecxz
scas
xchg
dec
psubusw
or
sub
outsl
cmp
inc
ljmp
sbb
jge
outsb
sbb
imul
jle
adc
inc
fcomps
push
es
stos
shll
sbb
xchg
mov
arpl
in
jecxz
dec
addl
ret
rolb
cmp
xor
inc
sub
into
arpl
subb
adc
mov
and
mov
test
push
daa
cmp
mov
aas
movsl
incb
mov
rorl
mov
mov
mov
xchg
pop
ja
xor
inc
jae
nop
mov
aaa
mov
bound
je
mov
jne
pusha
push
dec
in
lret
mov
xchg
inc
outsb
lret
and
or
sbb
jnp
les
insb
pop
and
jbe
insl
add
idivb
call
sbb
jecxz
sub
insb
push
push
out
push
ficoml
xor
mov
sarl
es
inc
dec
ds
mov
shrl
pop
es
loopne
push
mov
clc
push
lods
ret
mov
shl
idivl
cmc
push
jmp
xchg
addr16
cmp
or
cmc
pop
or
cli
jle
mov
push
daa
cwtl
inc
mov
cmp
jmp
jl
enter
mov
dec
ret
xchg
mov
lds
lret
pop
sahf
cmp
ljmp
adcl
loopne
mov
jmp
das
adc
int
xlat
jle
jecxz
cmp
mov
lock
popf
jge
test
and
inc
mov
fstpl
mov
test
mov
adc
popf
enter
fdivp
add
mov
mov
sbb
xlat
imul
dec
xchg
pusha
int3
cli
jl
push
sbb
and
adc
stc
mov
add
sub
push
adc
push
dec
pop
nop
sbb
int3
sbb
lock
lahf
fstps
mov
movsb
ljmp
inc
mov
scas
and
lret
mov
push
sbb
leave
mov
popf
int
or
dec
divl
movsb
cmp
and
nop
add
mov
out
mov
pop
ljmp
push
lods
outsb
mov
lock
mov
mov
fistl
insl
ror
imul
add
mov
mov
imul
leave
hlt
add
dec
rorl
or
fprem
cld
jae
cmp
lock
dec
mov
test
lods
dec
add
pop
adc
iret
mov
outsl
das
push
lret
cmp
movsl
mov
in
scas
dec
lock
pop
jne
jge
popa
pop
push
bound
pushf
sbb
sti
cmp
push
nop
dec
add
mov
repnz
mov
clc
mov
in
loope
shll
cmp
outsb
cmpsb
outsl
daa
xchg
lock
lock
dec
ds
aad
in
push
outsb
mov
andl
ds
out
scas
insl
adc
cmp
ret
mov
fmuls
xor
movsb
mov
cmp
cli
dec
lea
adc
and
ror
das
lea
shrl
push
cltd
incl
test
and
ds
test
inc
in
xchg
inc
repz
or
cwtl
xchg
test
cmp
shl
pushf
inc
adc
mov
xor
pop
xor
and
mov
pop
lea
test
shlb
cmc
mov
and
mov
popf
xor
psubb
test
icebp
lret
test
fidivrs
and
jnp
test
lea
dec
sub
aad
xor
out
xor
pusha
push
adc
push
test
mov
and
mov
roll
aaa
insb
std
repnz
ja
mov
dec
addl
sub
fdivs
shll
hlt
dec
in
xor
shr
inc
adc
dec
mov
sub
lahf
loop
cmp
or
inc
data16
jmp
iret
sahf
in
xchg
or
ret
outsl
daa
imul
clc
add
icebp
lods
stc
push
cmp
jo
jle
dec
sub
jecxz
loop
pop
test
pop
xchg
dec
out
call
sti
mov
test
cmp
adc
pop
push
test
in
repnz
xor
repnz
orb
jbe
mov
cmp
sbb
bswap
cs
pop
xchg
hlt
call
mov
loop
lret
fistpl
cmp
je
mov
cwtl
pop
mov
or
jnp
and
int3
jmp
mov
adc
imul
pop
cmp
adc
pop
rorb
or
cmc
cltd
inc
cwtl
inc
push
or
mov
test
xor
xor
adc
fisttpll
in
shlb
inc
sbb
cmp
sbb
sbb
push
fdivs
movsl
inc
fs
cmpsl
cmp
shll
aas
push
jl
das
fnstenv
sbb
push
mov
mov
pushf
inc
cwtl
sbb
inc
inc
mov
xchg
or
push
ljmp
or
aaa
lahf
filds
je
cmc
cmp
in
aas
jle
sub
movsb
mov
leave
dec
xor
xor
mov
loopne
dec
call
xchg
in
gs
jbe
inc
push
pop
ret
push
mov
test
mov
add
mov
pop
insl
cmc
dec
bound
mov
fiaddl
scas
scas
pop
popf
pop
ss
xor
cmc
fwait
pop
sbb
std
fadds
mov
sbb
lock
adc
insb
jnp
adc
aas
test
add
adcl
orl
mov
sub
sbb
cs
sub
inc
pop
mov
inc
xor
sub
repnz
and
pushf
loope
in
or
mov
add
inc
sbb
xor
repz
and
mov
imul
imul
jno
cmp
test
imul
in
xor
test
xchg
pop
pop
xchg
mov
or
cmp
or
mov
add
cmp
rorl
test
pop
jnp
adc
imul
out
fildll
gs
adcb
cmp
mov
ja
iret
mov
or
stc
loopne
rorb
ljmp
and
inc
and
or
sub
pop
les
push
xor
rolb
sbb
mov
aad
dec
in
jb
inc
roll
sbb
jnp
lods
pushf
loopne
mov
or
jmp
rcrl
adcl
rol
movsb
sbb
ja
mov
and
cmp
mov
sbb
outsl
jmp
xchg
in
daa
fsts
sbb
adc
jno
sahf
mov
sub
and
lahf
lock
sbb
lds
ljmp
outsl
push
push
jp
dec
dec
psllw
sub
filds
cmp
sub
fmul
adc
cwtl
cs
clc
and
mov
ret
add
mov
aam
adc
test
sbb
arpl
or
cmp
loopne
dec
insb
lods
add
xor
fisubs
pop
pop
mov
mov
test
das
out
aaa
ljmp
or
dec
ficoms
adc
jne
push
inc
sbbb
push
pop
push
cmp
push
frstor
push
insb
inc
das
add
cmpb
inc
js
dec
mov
jbe
test
int3
fadd
mov
popa
and
xchg
cs
fcmovnu
repnz
cmp
mov
outsb
pop
xchg
repnz
and
xchg
lahf
stc
shrb
jno
pop
jno
repz
ffree
js
or
pop
xchg
mov
paddb
push
ret
push
or
ja
scas
divl
mov
xchg
lret
xchg
mov
lds
mov
jmp
jae
imul
cwtl
in
dec
mov
leave
data16
add
push
jb
lods
inc
mov
push
jnp
lods
pop
sub
in
movsl
xor
icebp
stos
and
inc
inc
cmp
fidivrs
or
mov
cmp
jb
test
dec
test
mov
in
inc
adc
ljmp
bound
loop
addr16
jmp
mov
sbb
sub
xor
mov
int3
adc
js
and
enter
mov
push
int3
pusha
mov
sti
sbb
loopne
out
jle
test
mov
clc
add
repnz
and
add
repz
jnp
leave
ret
insl
call
jbe
and
lock
push
stc
xor
sbb
lret
pop
jmp
cmp
out
sbb
and
mov
out
cs
lret
out
push
mov
pushf
test
frstpm(287
inc
ljmp
dec
xor
dec
fidivrs
gs
push
xchg
outsb
inc
scas
jg
inc
daa
lea
mov
ficompl
jmp
gs
mov
pop
jb
lret
jp
lcall
scas
mov
cmp
rcl
cli
push
dec
jo
adc
rorl
sub
cmp
mov
mov
lret
pop
sahf
and
call
js
daa
ds
loop
sub
mov
xchg
push
push
movsl
faddl
jns
test
in
pop
popf
sbb
push
rcll
into
xor
pop
out
repz
js
add
pop
xor
out
imul
ret
xchg
mov
sbb
push
sbb
sbb
je
test
inc
scas
cmp
sub
cld
adc
shll
mov
imul
mov
push
daa
adc
arpl
inc
inc
mov
out
mov
ss
pop
sbb
sub
or
sub
aad
push
inc
ds
adc
out
sbb
mov
xchg
lds
cmc
rolb
stos
test
or
and
in
enter
addr16
mov
mov
sarb
push
sub
xor
cmpsl
cmovne
arpl
ret
xchg
test
ljmp
and
in
jge
clc
into
arpl
pop
mov
aam
popf
stos
mov
xchg
mov
sarl
cwtl
xchg
ss
test
sbb
mov
jne
mov
xor
inc
sub
xchg
aaa
xlat
int3
cld
add
inc
rorl
sbb
dec
add
inc
fistpl
mov
in
mov
movsl
pop
test
pusha
xor
jle
lcall
lods
stc
mov
inc
pop
scas
pop
sbb
popa
jl
cmp
arpl
ret
cmp
mov
in
ret
ret
in
add
cmp
and
fiaddl
xchg
sbb
pop
mov
dec
pop
inc
fdivrl
cmpsl
fadds
sub
movsl
cltd
mov
cmpsl
cltd
add
repnz
pop
je
xor
loope
push
or
cld
add
xor
adc
sbb
arpl
insl
dec
cmp
lds
gs
xchg
out
pusha
mov
dec
xor
ljmp
faddp
push
aad
adc
xor
add
arpl
jne
jno
mov
jb
xor
mov
sub
cmp
call
or
cwtl
push
xorb
xchg
add
aad
jp
ret
paddsb
fsubr
jo
mov
out
icebp
out
xchg
xor
mov
sarb
rclb
xor
insb
scas
add
xchg
stc
xchg
dec
divl
lock
sbb
or
fs
std
scas
xor
insl
push
ss
int
imul
test
test
push
sbb
dec
adc
mov
insl
mov
les
fldenv
mov
idiv
xor
lds
mov
int3
ss
dec
xchg
icebp
mov
mov
pop
pusha
fucomi
loope
out
lret
fisubrl
dec
push
dec
sti
cs
mov
jno
dec
inc
jno
pop
xor
dec
add
test
aaa
shl
jge
jle
adc
push
add
push
pop
and
or
test
std
sub
sahf
or
fimull
push
bound
subl
xchg
icebp
dec
jbe
aaa
hlt
clc
cli
and
sbb
add
push
or
mov
jle
xchg
arpl
xor
xlat
movsb
add
add
pop
dec
push
or
xlat
mov
cwtl
adc
movsb
ret
xchg
testb
dec
push
rcrl
mov
aaa
decl
inc
jae
or
rorl
ljmp
push
lea
sbb
fmull
sub
insb
call
jg
lock
xchg
fildll
lret
ret
jmp
addl
movsb
mov
jb
add
movsb
out
insl
push
fwait
jo
daa
jo
push
pop
pop
cmp
xchg
sbb
fwait
out
pop
xchg
inc
scas
call
jae
faddp
adc
and
add
shlb
and
ja
clc
mov
adc
cmpsb
test
mov
daa
inc
mov
pop
insl
in
mov
pop
pop
jne
adc
sub
and
test
sbb
and
frstor
jl
inc
popf
mov
stos
scas
cltd
sqrtps
add
lret
push
out
cmp
ss
inc
pop
in
es
pop
arpl
int3
jle
imul
hlt
add
fmuls
mov
inc
xor
enter
lods
aam
add
sub
stos
test
shl
stos
dec
push
imul
shr
jmp
and
ds
push
sub
adc
adc
ss
test
mov
lret
out
inc
cmp
jno
and
push
adc
and
jle
int
mov
cmp
out
jno
mov
lods
jl
xchg
lock
int
jae
push
jno
jbe
clc
cmpl
sbb
fsubp
das
push
pop
arpl
ljmp
mov
dec
je
sbbl
lret
subl
imull
jb
ljmp
lds
sbb
xchg
aaa
es
and
inc
aaa
push
cs
and
fcomi
mov
cld
adc
das
loop
pop
pop
adc
movsl
jmp
and
inc
mov
loop
cmp
ret
sub
aad
int3
clc
jle
pop
sti
stos
loopne
dec
or
mov
fsubs
cli
gs
xchg
jmp
jbe
pop
divb
mov
sti
or
mov
mov
and
scas
insb
cwtl
fstp
pop
movsl
jle
mov
loop
xchg
adc
fs
outsl
pop
sub
adcb
mov
js
out
lret
jp
adc
sarl
pop
pop
jae
es
inc
push
lret
das
inc
sub
sbb
je
inc
test
mov
cmp
cmp
push
lods
fmull
mov
cmp
sbb
mov
cmp
xchg
movsl
mov
aaa
add
lods
push
cmpsl
adc
xor
inc
sub
mov
les
out
sub
xchg
inc
xor
dec
dec
insb
shl
xchg
sub
shrb
add
cmpl
mov
iret
sub
dec
cmc
mov
call
int3
stc
iret
icebp
adc
adc
cmp
stc
pushl
mov
lods
push
sbb
cmpsb
adc
outsl
popf
mov
out
ss
jle
push
je
adc
lods
popa
pushl
inc
fimull
dec
jle
xchg
ljmp
dec
pushf
call
cld
jnp
jae
clc
popl
mov
cmp
add
push
leave
and
adc
in
mov
adc
fnstcw
gs
xchg
mov
fistps
movsl
lcall
or
fstps
ja
cld
cltd
dec
jno
or
fadds
fs
cli
fisttps
inc
daa
rcl
inc
mov
xchg
lret
pop
test
mov
push
cmp
stos
outsb
dec
pop
cmp
push
jnp
adc
in
loop
jno
mov
das
ss
stos
pop
jno
shlb
stos
inc
lret
cmpsl
test
push
stc
cltd
xchg
jp
xor
dec
jecxz
jecxz
in
jne
out
mov
mov
xor
adc
mov
sbb
popa
js
fadds
sub
or
mov
cmp
arpl
jl
mov
sbb
xchg
add
stos
sub
mov
fiadds
out
adc
sub
daa
add
leave
xchg
xor
je
sub
add
and
das
mov
push
push
shll
inc
mov
xor
push
aam
jnp
cmpsl
mov
add
push
push
mov
push
lock
sarl
or
xchg
inc
les
mov
mov
stos
std
add
loop
push
mov
sbb
dec
lret
bswap
or
jbe
mov
outsl
dec
enter
mov
mov
fbstp
out
popa
jns
repz
js
or
or
sub
mov
test
add
inc
inc
jg
fimull
mov
ljmp
inc
adc
push
sub
xor
push
push
cmpl
cmp
mov
xchg
and
jmp
dec
jmp
push
push
cmp
xchg
mov
inc
popa
test
cmp
mov
push
addb
leave
test
or
jb
pop
lret
sti
dec
stc
push
ret
popl
cmpb
adc
test
pop
in
inc
pop
js
jl
aam
push
jp
lret
mov
sbb
dec
mov
or
fdivp
loop
lods
lods
sub
sbb
inc
inc
mov
addr16
sahf
and
out
bound
rclb
mov
ss
jge
repz
clc
push
mov
pop
cli
mov
hlt
fs
mov
out
xor
push
leave
xchg
shl
daa
or
fidivs
xchg
clc
rol
jg
pop
sbb
sbb
ret
sub
pushf
or
and
or
cwtl
mov
push
ds
scas
push
hlt
jmp
fxch
cli
adc
xlat
push
sub
fsubs
nop
and
dec
inc
in
sti
inc
lahf
lret
pop
and
test
imull
jns
repz
mov
pop
decb
mov
push
shlb
mov
add
push
add
mov
push
sbb
lret
mov
inc
xchg
pop
shll
dec
arpl
aaa
ss
sub
dec
daa
sahf
adc
popf
mov
mov
jecxz
sahf
push
lret
ljmp
fs
xchg
pop
mov
inc
in
push
mov
mov
movsb
rolb
mov
stos
mov
int3
push
mov
pop
push
sbb
or
lds
mov
jnp
cmp
imul
dec
lahf
xor
cmp
sub
in
inc
jecxz
jmp
out
mov
jne
sub
lea
aas
jo
out
es
and
frstor
jb
xchg
fcoml
mov
jle
test
mov
mov
dec
insl
adc
add
ss
pushf
adc
cs
aaa
cvtps2pd
stc
mov
js
jo
mov
mov
kxorb
jmp
lret
dec
or
outsb
in
push
insl
fcomps
lahf
orl
std
pusha
adc
ds
mov
hlt
pop
je
jae
ds
jg
insl
leave
mov
fisubrl
ja
xsaves
in
rclb
xchg
cli
adc
loope
gs
stos
in
sbb
in
add
shlb
pusha
jl
pushf
xchg
iret
sub
loopne
xlat
movsl
adc
sbb
mov
and
fnstenv
dec
int3
pop
sarb
xchg
in
sub
add
lret
inc
leave
pop
mov
into
das
jae
adc
lcall
test
imul
mov
and
jno
push
sub
jnp
push
int
dec
jmp
mov
jp
add
insl
fwait
xor
mov
push
ljmp
fs
pop
xor
xorl
xor
xor
ret
adc
dec
sbb
notl
mov
lea
cltd
insl
adc
cwtl
dec
popa
pop
je
jbe
mov
jne
sbb
adc
pop
inc
add
sbb
jge
jmp
sbb
pop
sub
adc
push
ljmp
pusha
adc
adcb
popaw
test
sti
pop
add
into
ljmp
mov
push
nop
clc
mov
xor
jbe
in
mov
fwait
mov
les
hlt
sbb
stc
cli
rclb
cmc
lea
mov
sbb
jg
xor
sbb
pop
lcall
mov
xchg
lahf
insb
cs
cmp
pop
shrb
jg
push
xchg
aam
pusha
xchg
xlat
adc
cmp
test
outsl
clc
call
js
dec
fcoml
xchg
rcll
xchg
cli
flds
addb
mov
mov
test
lods
movsl
and
jmp
clc
cmp
or
pop
pop
testb
xchg
push
sbb
sub
pop
and
cmp
pop
add
mov
pop
fsubl
and
mov
sub
pop
stos
lods
sbb
pop
cmp
in
or
xlat
pop
pop
mov
movsb
adc
popa
xor
scas
dec
dec
out
xchg
movsb
popf
mov
and
push
push
inc
test
stos
aas
push
shrl
in
mov
pop
adc
pop
movsl
lret
jns
xchg
aaa
dec
lock
nop
int
jae
sub
jge
call
rcrl
dec
aas
mov
xchg
mov
inc
das
ret
out
sbbl
pop
mov
hlt
jae
mov
mov
adc
xchg
repnz
cmp
pop
jg
adc
or
mov
jo
mov
dec
add
or
mov
jne
nop
int3
push
or
mov
jp
loop
ja
pop
pop
ljmp
add
xor
gs
pop
push
inc
jmp
mov
xlat
scas
scas
add
pop
hlt
and
popf
mov
mov
or
pushl
aaa
mov
xchg
call
pop
jnp
mov
jns
jg
js
stos
popf
add
shll
imul
jb
inc
sub
stc
dec
negl
pop
xlat
jmp
addl
jge
mov
aaa
cmpsb
mov
cmp
push
cwtl
mov
sub
fwait
xor
out
mov
dec
push
jg
jns
daa
out
pop
hlt
movsl
icebp
pop
nop
jns,pt
mov
mov
mov
bnd
iret
pop
xor
mov
cs
mov
lock
out
mov
pop
cmc
push
push
inc
mov
or
adc
mov
sub
jecxz
mov
out
dec
cltd
aas
sbbl
cmp
mov
insb
xchg
inc
xchg
call
lock
xlat
cltd
or
fiadds
scas
sbb
inc
insl
loop,pt
sbb
or
and
cmp
mov
xlat
mov
jno
loope
arpl
enter
popa
cmp
mov
add
mov
in
sti
sarl
mov
bound
adc
insb
fiadds
aas
repnz
cmp
push
mov
sub
ljmp
rorb
test
mov
push
insl
aad
sbb
sub
lds
gs
cmpsl
das
and
or
jmp
mov
loope
xor
ds
bound
jb
popf
das
lret
cmp
hlt
xor
call
sar
daa
cmp
cmp
cltd
test
cmp
and
jecxz
pop
loop
icebp
mov
adc
daa
pop
lods
jns
xchg
and
push
cmp
mov
jnp
cli
xchg
fildll
lcall
cld
push
mov
and
inc
ljmp
je
cli
in
mov
jmp
adc
cmpsb
repnz
fcomps
cwtl
add
jnp
inc
pop
add
hlt
xor
psubsw
inc
cmc
imul
push
jbe
movsl
cmpl
pushf
jmp
bnd
dec
and
lea
adc
stos
movsl
xchg
push
push
push
out
jnp,pt
inc
cli
stos
pop
mov
and
fcoml
insb
or
hlt
xchg
xor
mov
or
push
inc
std
outsl
push
lods
and
mov
scas
inc
movsl
inc
inc
mov
jle
stos
movsb
aas
lret
fildl
ljmp
lahf
lods
repz
scas
in
mov
pop
push
fcomps
int3
popl
inc
pusha
xor
rclb
sahf
mov
cmp
dec
push
inc
push
or
adc
push
icebp
sub
push
insb
pop
nop
ds
jo
notb
adc
insl
mov
stos
inc
pop
xchg
mov
cmp
mov
out
insl
or
push
xlat
nop
mov
inc
mov
sub
orl
int3
xchg
jecxz
pop
xchg
dec
andl
xchg
add
jecxz
test
add
jmp
push
or
sub
enter
pop
adc
add
or
insl
push
mov
cltd
jne
and
fisttps
rclb
repnz
pop
test
adc
mov
fsubl
pushf
sub
repz
mov
xchg
imul
scas
mov
imul
mov
mov
cld
xchg
or
fs
test
orl
insl
cmpsl
pop
addr16
std
pop
pusha
ret
dec
add
pop
jae
pop
mov
not
push
aas
idiv
push
add
subb
xchg
mov
jns
lret
sbb
adc
add
testl
sarl
cwtl
push
mov
and
xlat
movsb
inc
aas
mov
pop
stos
leave
sbb
xchg
mov
outsb
pop
xchg
pop
lds
fistps
popf
stos
addl
dec
mov
or
push
ja
pop
arpl
xor
cmp
stos
aad
adcb
je,pn
sub
cmc
arpl
addb
hlt
adc
push
and
stos
mov
int
adc
and
aam
clc
loopne
clc
das
lret
mov
movsl
in
in
sub
mov
dec
xchg
mov
and
lods
push
clc
sbb
mov
lret
xor
and
rcrb
pusha
test
jmp
xcrypt-ecb
cmpsl
dec
jmp
scas
ja
push
in
jbe
out
out
rcll
sbb
xor
outsb
stc
sarl
sbb
xor
scas
push
outsb
push
aam
test
or
test
push
dec
insb
push
notl
xchg
xor
cli
or
ss
addr16
lock
adc
clc
loope
cmp
or
adc
or
data16
dec
popf
xor
push
sbb
pop
push
rorl
dec
hlt
jmp
sti
icebp
outsb
stos
leave
nop
dec
dec
arpl
popf
das
jmp
pushf
repnz
xchg
lods
lahf
icebp
out
push
rclb
sbb
out
xor
aam
jns
pop
jmp
in
out
sbb
int
int3
jae
inc
adc
xor
and
mov
popa
add
xchg
outsb
jge
sbb
iretw
and
jg
push
ficomps
xor
push
mov
inc
mov
adc
scas
lock
movaps
gs
rcrl
lods
adc
pop
mov
push
clc
icebp
mov
cmp
inc
cltd
pop
rcl
ja
sbb
cld
mov
rorl
mov
xor
xchg
out
xchg
and
mov
jecxz
imul
mov
cmp
sbbb
mov
cmpsb
dec
jo
iret
rclb
ret
out
fwait
cmp
call
push
cmp
mov
jae
inc
xchg
stc
jbe
dec
jg
sub
testl
jmp
cmpsb
imul
fistps
call
xchg
sbb
lcall
jo
jne
int
push
mov
jnp
mov
call
call
push
jmp
fdivrs
ret
cmp
es
inc
test
or
push
outsb
lods
test
je
jo
cmpsl
jge
lret
cmpb
fidivrs
and
push
in
jle
inc
pop
dec
pop
lods
subps
stos
ljmp
sub
ror
cmp
or
cmpsb
fnstcw
ss
xchg
xchg
dec
lcall
cmpsl
loopne
out
repz
imul
je
jae
repz
xchg
or
mov
leave
or
test
data16
push
mov
aaa
outsl
inc
aam
outsl
push
xchg
imull
sub
loope
arpl
hlt
mov
cmovbe
mov
loopne
sbb
jmp
cmp
loopne
imul
sarl
in
aad
mov
insl
in
cmp
mov
jne
sub
add
fs
out
xchg
repnz
rclb
pusha
addr16
push
mov
leave
dec
imul
xchg
insl
into
dec
sbb
out
scas
push
inc
push
xlat
push
fs
mov
ja
call
add
xchg
push
icebp
bound
inc
jg
and
stc
in
mov
mov
js
xor
dec
cli
adc
cli
ljmp
or
push
out
clc
jno
and
imul
in
ret
mov
jg
push
cmpsb
mov
in
xchg
lahf
push
cmp
inc
sahf
test
fdivl
push
or
test
pop
jbe
aaa
lahf
jno
mov
xchg
cmpsl
sub
mulb
xor
mov
lods
adc
cmp
lods
or
push
xchg
or
or
or
adc
or
add
and
lds
jnp
sbb
xor
mov
xor
les
out
cli
inc
push
mov
jne
mov
cmp
dec
jno
fldl
out
xchg
pop
ret
push
leave
sbbl
push
enter
stos
fucomip
test
push
je
leave
cmpsl
and
imul
test
push
jns
cltd
or
out
fldl
aaa
pop
dec
push
and
and
inc
cmp
mov
jle
jecxz
test
clc
dec
mov
mov
cmp
pop
sbbl
filds
outsb
mov
imul
rorb
iret
gs
mov
sbb
das
inc
add
xchg
sbb
imulb
das
divl
push
lock
stos
and
mov
ret
mov
fxch
rorb
bswap
cld
mov
and
cs
xchg
sahf
fdivrs
sub
out
popf
jb
cld
call
mov
inc
aam
jmp
out
lea
cmpsl
addb
fildl
and
sarl
scas
lock
mov
sbb
push
jnp
js
movsl
xlat
loopne
stos
lret
imul
mov
or
sbb
cmp
mov
mov
movsb
push
scas
mov
in
aam
cld
push
sbb
rcll
cmp
scas
or
xchg
repz
sbb
or
sbb
adc
fsts
in
enter
mov
xchg
arpl
jp
loope
fwait
cmpsb
dec
fisubs
push
or
dec
stos
xor
lea
jg
clc
jmp
xchg
icebp
mov
mov
or
and
sub
xor
mov
gs
sub
and
mov
sub
push
lahf
push
dec
jecxz
jp
pop
popf
loopne
mov
inc
jecxz
add
adc
ds
loopne
lret
and
insb
mov
cmc
mov
pushf
xor
stc
sbb
loope
popa
or
test
mov
mov
cmp
mov
inc
adcl
std
scas
push
pusha
add
mov
fcompl
mov
cmp
les
adc
inc
shl
stos
and
mov
pop
push
pop
daa
insb
into
xor
xor
ljmp
hlt
ret
push
daa
inc
fidivrl
cld
mov
sahf
movsb
mov
jb
sbb
mov
xlat
addr16
mov
sarl
cmpsl
pop
jnp
jmp
in
stos
xor
or
adc
push
xchg
xchg
hlt
aas
and
jle
mov
mov
cmp
inc
int
pop
int3
lcall
sbb
ja
ret
inc
ljmp
enter
std
add
mov
cmp
rcrl
sahf
jne
jp
popf
mov
adc
cmp
cmp
out
rcrb
jmp
ret
mov
scas
mov
loopne
shrb
push
popf
in
and
aam
sbb
testl
lcall
fdivr
jne
loop
repnz
outsb
push
lret
pop
gs
into
aam
xchg
cmpsl
scas
sahf
into
decl
inc
fnstcw
pop
dec
jg
sbb
dec
mov
or
push
or
cltd
leave
movsl
add
rol
addr16
fwait
sbb
fs
cld
adc
dec
or
jbe
add
test
pop
mov
cmp
xor
mov
loop
or
arpl
sti
fdivl
fcomps
cmp
es
imul
add
push
dec
sub
adc
and
lahf
int
push
sub
sub
inc
cmp
push
mov
mov
gs
clc
sub
mov
inc
fucomp
les
and
sahf
adc
mov
sub
out
mov
rcrl
enter
mov
xor
popf
jle
mov
dec
ret
jmp
jbe
ret
push
imul
pop
sub
mov
jp
push
pop
fsts
inc
and
mov
mov
sahf
adc
pop
jne
mov
test
cmp
jecxz
es
mov
jb
cmp
pop
cmp
insb
dec
loopne
shll
jp
sbb
test
jnp
pushf
in
sub
sub
cmp
jmp
adc
mov
movsl
xor
mov
mov
enter
je
pop
idiv
pop
cmpsb
out
clc
jno
leave
mov
mov
sub
dec
push
testl
mov
pop
ret
push
movsb
push
or
movsl
vmovq
cli
adc
stos
es
cmp
insl
mov
imul
fs
in
inc
or
xchg
add
sbb
sub
repnz
lcall
and
jge
mov
lock
or
mov
gs
fistl
pop
dec
das
ljmp
add
mov
xlat
mov
stc
aaa
mov
xchg
scas
ljmp
push
bound
fsubl
push
in
repnz
pop
scas
movsb
adc
mov
imul
mov
int3
jle
xor
pop
mov
mov
out
rcll
lods
in
in
push
int3
cli
aaa
ficoml
outsb
and
scas
jbe
and
push
test
cmp
mov
mov
xor
mov
pop
pop
jl
fists
or
hlt
gs
pop
cmp
lret
fnstenv
inc
insb
mov
lcall
jp
sub
and
cmpsl
pop
mov
mov
pop
pusha
pop
int
lret
loope
pop
test
jp,pn
or
sbb
jo
mov
xor
jae
xchg
xorl
jmp
outsb
cltd
roll
cmp
mov
mov
scas
cmpsl
pushf
push
cld
push
mov
dec
movsl
scas
mov
fists
out
pop
loope
mov
mov
jne
jo
dec
cmp
sbb
cmp
mov
gs
dec
repz
ss
dec
ja,pt
test
mov
pop
push
mov
popa
pushf
push
pop
sbb
lea
pop
rcrb
stos
cli
lock
push
pop
dec
sub
push
jmp
pop
mov
iret
or
inc
dec
leave
dec
cmp
andl
sbbb
xchg
adc
hlt
push
pop
pop
cmp
inc
adc
aad
lods
bound
push
pop
hlt
push
mov
sbb
incb
sbb
mov
mov
shr
mov
call
sub
pop
jle
mov
arpl
std
mov
sarb
out
or
cmc
movsb
mov
jp
insl
mov
inc
iret
mov
aas
dec
mov
inc
inc
adc
or
xlat
andb
sub
cmp
xor
gs
push
sub
cmpsl
cmpsl
jnp
cmp
xor
fisttpl
inc
sbb
and
mov
jg
pop
mov
into
js
mov
sub
outsl
cmp
sbb
pop
or
add
jbe
aas
roll
outsl
sub
jbe
xchg
inc
xchg
outsl
in
andb
fldcw
into
and
xchg
addb
scas
iret
dec
cmp
and
and
fs
push
mov
lret
lods
jnp
xor
pop
sub
mov
mov
mov
inc
cmp
adc
pop
xchg
shll
loopne
int
loope
mov
ja
jl
mov
repz
clc
inc
push
int
test
gs
gs
push
sub
pop
inc
xchg
leave
mov
mov
into
imul
rorb
ret
push
xchg
push
loop
ds
repz
pop
test
lret
mov
inc
repz
xchg
test
add
stos
push
cmp
push
push
ljmp
lea
mov
int
and
int3
data16
xor
lcall
sub
lahf
in
push
pop
pop
xchg
pop
in
mov
pop
mov
nop
dec
mov
les
push
inc
mov
xchg
cmpsl
outsb
cmp
cmp
mov
dec
mov
push
inc
ror
jp
ja
adc
movsl
push
or
out
test
ret
pop
xchg
outsb
fdiv
inc
xor
mov
jnp
divps
out
sub
xchg
fwait
out
out
cmp
iret
aaa
fbstp
movsb
push
das
adc
sbb
cmp
stc
test
fwait
sbb
insb
mov
xchg
in
xchg
clc
sbb
lds
push
push
ret
cltd
nop
leave
in
mov
sub
inc
dec
adc
gs
addl
mov
test
cli
sub
push
shr
jb
sub
inc
xchg
leave
ja
es
rolb
das
add
xchg
push
mov
cmp
pop
mulb
insl
test
mov
or
loop
cmc
xor
cld
mov
or
rcl
mov
mov
fwait
cmpsb
arpl
lds
push
pop
mov
xor
or
mov
fwait
jg
faddl
jg
jmp
xchg
pop
cmpsl
sbb
add
mov
call
aam
add
daa
nop
pop
pop
pop
loope
rorb
sub
xchg
stc
jecxz
je
sbb
fsubp
pop
cmpsb
aam
decb
mov
mov
movsl
mov
xchg
push
fistpl
pop
lret
cmp
xchg
enter
loop
scas
loope
push
and
push
hlt
fbstp
popf
xchg
jno
sub
push
xchg
jns
aad
fdivrp
repnz
movsb
stos
pop
dec
xchg
xchg
push
and
test
outsb
or
sahf
mov
sbb
adcb
hlt
mov
cli
iret
cld
or
mov
inc
lahf
inc
ja
sub
push
adc
in
je
pop
pusha
ret
xchg
daa
push
sub
movsb
clc
ja
je
cmp
gs
or
imulb
mov
and
inc
mov
mov
sbb
aad
int3
aaa
sti
cmp
adc
ret
sar
bound
push
and
adc
dec
dec
ds
push
or
mov
shrb
in
pop
pop
idivb
mov
adc
movsb
add
sbb
rcll
mov
daa
int3
out
leave
aam
cmc
mov
jo
mov
mov
lock
pop
inc
adc
add
adc
std
adc
or
testl
in
in
mov
jo
mov
push
jo
test
std
in
jnp
xchg
push
adc
divb
mov
cltd
in
xchg
push
jle
jl
int
call
inc
and
mov
lahf
fldcw
out
inc
push
push
add
push
mov
roll
or
pop
or
pop
and
dec
mov
add
outsb
mov
aam
add
or
sub
movsl
inc
sahf
and
hlt
push
dec
dec
test
add
xchg
mov
out
push
xor
ret
stos
adcl
faddl
lcall
stos
pop
sahf
cwtl
mov
sub
jl
leave
lea
insl
mov
sub
enter
and
and
setg
sub
data16
sbb
mov
mulb
lret
dec
aas
pop
inc
fimuls
testb
and
sub
cwtd
bound
and
mov
lea
movsb
xchg
inc
or
mov
ljmp
loop
sahf
test
mov
dec
and
dec
ds
dec
testl
insb
sub
inc
std
or
dec
add
xchg
jbe
mov
mov
in
aas
stos
xchg
xor
test
scas
jmp
mov
and
mov
outsl
xchg
inc
shlb
into
jb,pt
push
pop
or
pop
or
aaa
push
push
icebp
mov
push
add
push
mov
andb
adc
mov
cltd
in
push
push
fisubrl
aas
or
movsb
lods
ds
dec
mov
and
and
and
pop
stc
cltd
mov
mov
jne
es
mov
xor
jl
mov
cmc
fcoms
xor
inc
lcall
mov
mov
shll
mov
or
sbb
push
inc
adc
xorl
cld
call
and
std
adc
mov
inc
sub
repz
inc
icebp
jecxz
push
xchg
and
fcompl
das
mov
jp
jne
not
mov
les
dec
ljmp
test
pop
imul
mov
ficoml
pop
cltd
cmp
jbe
dec
mov
ds
fcmovnbe
jns
clc
and
xor
inc
inc
data16
xor
xchg
pop
adc
sbb
push
or
idivb
jmp
sahf
xor
or
mov
rorb
mov
adc
jae
and
push
mov
mov
add
stos
mov
cmp
sub
add
imulb
js,pn
mov
mov
xchg
loopne
pmuludq
lret
push
pop
cmp
sub
outsl
fs
movsb
inc
xor
mov
sbb
and
push
jb
inc
push
jmp
js
movsl
push
add
push
push
jp
clc
xchg
nop
les
jno
push
pop
cmpb
cmp
out
mov
ss
int3
cmp
outsb
mov
push
pop
xor
test
jbe
js
mov
xchg
std
imul
and
stc
sbb
adc
jnp
test
jl
cmpl
ret
lods
sub
pop
outsl
cmpsb
adc
pop
jns
jmp
and
jb
push
les
je
sarl
int3
dec
adc
shlb
cmp
mov
inc
mov
xlat
imul
inc
gs
add
addr16
adc
in
jp
adc
mov
jnp
pop
inc
mov
and
add
lcall
aad
repz
cmp
mov
xor
pushf
xorl
or
lea
lock
cmp
repnz
ret
rcrl
stos
subb
fisubs
js
push
cmp
lcall
push
sub
inc
mov
or
dec
sbb
lahf
push
dec
in
movsb
cli
fdivl
inc
jge
inc
dec
push
add
add
or
ficompl
push
xor
sbb
xchg
negl
mov
or
aam
popa
lods
cmp
cld
test
pop
notl
xchg
cmpsb
pop
or
lea
popa
arpl
sub
imul
repnz
mov
pop
adcl
scas
lret
aad
rcll
unpckhps
and
sti
ffree
insb
lds
push
sbb
mov
aas
xor
xchg
inc
repnz
lret
lea
into
aad
inc
jnp
pushf
or
mov
pop
in
push
fs
loope
lea
shrl
loope
and
scas
lahf
sahf
dec
dec
ret
lock
inc
push
mov
xorl
mov
data16
pop
hlt
pop
fidivs
lods
scas
movsl
arpl
pop
mov
and
pusha
mov
xor
add
loope
jno
scas
insb
or
dec
test
insb
pop
dec
sub
xor
fstl
repz
movsb
cmp
push
daa
jle
adc
js
scas
and
sarb
mov
add
rep
xchg
stos
data16
mov
inc
push
out
cs
jbe
inc
fwait
inc
inc
jmp
jb
fsub
mov
outsl
loopne
or
xor
icebp
data16
push
sub
sbb
iret
scas
test
jnp
int3
inc
lea
imul
insb
xchg
pop
mov
insl
mov
iret
and
xchg
jl
cwtl
enter
loopne
dec
jnp
out
or
repz
jnp
inc
je
fldcw
into
or
jo
movsl
aad
pop
jmp
fsubl
out
das
rorl
and
jmp
lcall
pop
mov
dec
loopne
jl
ljmp
push
mov
fwait
daa
adc
jp
sti
and
lds
adc
sbb
mov
or
cmpsb
fld
adc
repz
dec
jo
pop
filds
xor
sub
out
lods
sahf
in
out
lods
lcall
cmp
fidivrs
in
insb
fwait
std
cmp
inc
push
pop
jp
jecxz
add
loop
mov
adc
inc
das
shrl
iret
addr16
or
shll
sub
cmpsl
test
cmc
dec
or
mov
lahf
in
int
mov
cmp
repnz
ret
pop
rolb
add
mov
mov
into
dec
xor
dec
ret
fcomps
sub
inc
ret
xchg
int3
push
inc
aam
mov
out
xchg
jge
fmuls
sbbb
orb
jnp
insl
stos
dec
ds
add
pushf
movsl
or
inc
loopne
testb
jle
and
cs
or
jle
outsb
in
ret
jg
sub
in
ljmp
xlat
or
mov
fcmovnbe
pop
mov
cmc
ret
repz
jns
lret
repnz
pop
aad
out
or
aaa
mov
push
push
dec
aaa
xor
xorb
xlat
inc
bound
nop
mov
outsb
es
aad
pop
stc
add
jbe
jne
hlt
sub
insb
adc
adc
scas
pushl
fisubrl
inc
pop
push
push
hlt
fiadds
mov
inc
bound
fs
fs
xor
insl
std
mov
xchg
iret
jge
pop
int
jo
movsb
outsl
mov
iret
fsubs
jecxz
adc
pop
push
loope
xchg
sbb
pop
jbe
shl
jecxz
adc
cmpsl
pushf
sbb
movsb
sbb
adc
mov
push
adc
pop
mov
out
add
mov
lret
adc
push
inc
mov
jg
push
cltd
cs
inc
dec
sub
jmp
je
mov
jg
sti
mov
into
ljmp
add
xchg
xchg
sbb
or
push
mov
nop
inc
gs
or
cli
inc
jns
into
push
pop
jmp
cltd
adc
cmp
mov
test
inc
push
outsl
xchg
ret
into
or
loop
add
dec
mov
push
gs
or
pop
and
insb
cli
jnp
aam
xor
adc
aaa
fstpl
les
push
jns
sbb
icebp
cmpsl
jge
insl
test
lahf
cmc
fidivrl
inc
sbb
call
andl
pusha
lcall
dec
cmp
nop
or
adc
jmp
or
fistl
cmpsl
add
rcrb
ljmp
sbb
fdivrl
push
cmp
push
iret
xor
pop
call
push
jmp
aaa
fisubrs
pushf
fwait
mov
sub
dec
lret
out
out
sbb
xchg
xchg
lret
mov
shr
pop
rcll
xor
int3
lds
pop
inc
add
mov
push
addr16
or
aaa
add
cwtl
clc
fdivp
push
or
in
sbbb
push
xchg
mov
mov
sti
lcall
lods
mov
xchg
and
mov
pop
inc
mov
ret
icebp
fsubl
mov
nop
lods
sub
push
hlt
mov
pop
aaa
jo
movsb
adc
jg
out
rcpps
jo
sub
xorb
add
add
inc
jmp
xchg
cmpsb
inc
or
sub
push
bound
repnz
mov
test
mov
push
mov
jne
orl
dec
push
xlat
push
cmp
rol
les
push
or
scas
push
adc
idivl
and
adc
arpl
into
lds
jecxz
push
pop
push
shrl
xor
ljmp
sub
fstpt
out
out
mov
push
insl
aaa
or
outsb
push
lcall
jmp
repz
push
dec
mov
mov
das
loopne
mov
inc
aad
orl
mov
xchg
push
nop
arpl
insl
jno
loop
adc
nop
add
mov
out
shl
mov
push
ds
sub
pop
pop
popf
fimuls
imul
ficomps
hlt
stos
int
rol
inc
movlps
sub
icebp
les
in
cwtl
pop
push
insb
into
mov
jle
pop
fmuls
in
lods
mov
push
ds
xor
rcll
js
or
fcoms
adc
inc
outsl
in
or
cmp
add
enter
pop
pop
adc
cmp
test
jne
fucomp
orb
and
inc
sbb
dec
inc
sub
inc
mov
pushf
imul
add
or
jns
jnp
jbe
xor
das
sbb
lret
or
movsl
arpl
jo
mov
pop
jl
mov
adc
pushf
mov
mov
xor
jne
cmp
jmp
cmp
aad
sbb
fidivs
push
jno
bound
ss
in
lds
cmp
mov
jo
out
mov
aad
stos
pushf
into
stc
push
inc
xchg
gs
mov
cld
sti
xchg
fldcw
mov
sub
mov
cwtl
in
jnp
lret
mov
mov
int
pushf
roll
inc
decb
pop
ljmp
movsl
std
in
push
pop
mov
jg
dec
add
jne
jle
add
jbe
rcr
and
or
pop
mov
mov
push
push
cli
xlat
stc
addl
add
xchg
jb
xchg
ljmp
ja
and
mov
fs
pushf
scas
stc
pop
je
frstor
pop
sub
add
pop
xchg
dec
pop
adc
imul
cmpsb
into
iret
mov
test
dec
cmp
or
outsb
addr16
jmp
mov
sub
xchg
out
popf
cmp
mov
mov
rcrb
mov
outsl
and
sub
mov
lcall
push
jae
mov
mov
ja
sbb
inc
jge
in
cmp
ja
inc
scas
and
mov
mov
ja
or
and
and
arpl
mov
inc
xchg
push
pop
loopne
mov
dec
call
add
and
mov
sbb
test
ret
test
inc
or
jnp
cmc
inc
pop
sub
add
dec
int
ljmp
adc
outsb
leave
xchg
bnd
adc
addl
into
adc
xchg
or
add
js
arpl
sti
lock
inc
scas
leave
pop
mov
sti
jg
inc
js
ret
rcrb
fcomip
data16
sarb
insl
cmpsb
pop
jns
xor
adc
fs
xor
aam
cwtl
sbb
repz
sbb
int
mov
mov
sbb
cmpsl
insl
xor
in
sbb
or
lods
orb
dec
or
jecxz
or
xchg
mov
cmp
inc
sar
sbbl
cs
add
popa
or
fldenv
sbb
sbb
mov
lahf
inc
inc
insl
or
lcall
sbb
fstpt
inc
cmpsl
jbe
cmp
stc
mov
pop
mov
movsb
ja
push
arpl
and
inc
xlat
in
daa
into
xor
push
xor
mov
leave
pop
xchg
push
push
mov
push
mov
adc
insl
idivb
cli
cwtl
lret
cmp
clc
cli
je
popf
imul
sbb
xchg
mov
dec
jae
test
in
sub
mov
mov
push
push
mov
mov
sub
test
es
sub
push
pop
movsb
dec
push
fmuls
cmpsb
add
call
mov
rcrl
cli
push
out
js
jnp
loopne
xchg
mov
jl
cmpsl
ficomps
inc
push
push
xor
pop
lds
js
jne
pop
int3
and
push
cmp
cmc
stos
int3
ljmp
or
pop
inc
xchg
add
ds
insl
movsb
ficoms
inc
mov
pop
or
and
sti
jno
fiadds
outsl
jb
mov
sub
scas
add
mov
lods
cs
push
fildll
adc
push
add
xchg
cmpsb
andl
cmpl
lea
mov
stos
cmp
repz
ret
shll
dec
insl
cmp
sbb
scas
repz
jae
pop
mov
stc
jle
outsl
repnz
mov
dec
sbb
adc
outsb
outsb
cmp
test
mov
or
xor
push
mov
clc
and
cwtl
ficoms
int3
xchg
mov
sub
fnstsw
push
jl
bswap
out
dec
movl
xchg
pop
pmulhw
add
adc
movsl
add
and
out
mov
inc
xor
lret
dec
pop
fidivrs
push
or
ljmp
xchg
push
int
movsb
xlat
call
in
adc
inc
mov
je
sbb
sub
jb
and
scas
push
dec
dec
inc
xchg
adc
cmp
mov
rorl
mov
mov
push
test
mov
xor
subb
and
aaa
pop
dec
ss
mul
and
push
adc
sub
add
aas
ss
push
fmulp
or
in
enter
xchg
adc
push
xchg
cmp
int3
pop
mov
add
dec
dec
outsl
subb
enter
push
inc
adc
sarl
jno
mov
pop
mov
cmp
xchg
scas
sbb
pusha
cwtl
mov
sbb
mov
insl
rcll
or
out
push
mov
jns
and
dec
out
std
inc
or
cmc
outsb
push
call
pop
stc
and
clc
sub
out
icebp
mov
aam
cmp
sbb
sbb
adc
pop
and
mov
jle
jmp
shll
lock
cmp
out
out
out
push
jmp
jge
iret
imul
aas
loopne
dec
imul
cld
push
mov
jp
mov
test
sbb
inc
movsl
popf
mulb
test
mov
fcmovnb
inc
insb
shll
int
xchg
lret
loope
in
fldl
xor
sahf
mov
stos
or
fs
inc
xor
divl
shr
mov
dec
push
mov
movsl
cmpsl
jae
adc
lods
and
lret
push
nop
out
movsl
and
in
mov
jns
mov
xchg
pop
push
fsubrp
mov
push
inc
cs
sbb
outsl
sbb
into
insl
std
jp
or
mov
mov
jnp
fstp
and
cmp
lret
mov
loop
mov
inc
in
insl
jge
jl
adc
in
lret
mov
cmp
movsl
imul
mov
push
imul
pop
and
xchg
mov
rolb
push
ret
ret
xchg
lcall
jp
adc
sbb
pop
lods
xchg
call
mov
ljmp
adc
adc
pop
and
cmpsl
xor
or
aaa
comiss
cld
stos
push
or
inc
push
rorb
test
scas
dec
cwtl
dec
addb
les
inc
inc
mov
jmp
jmp
clc
xchg
dec
and
lods
sub
jle
xchg
sbb
pop
scas
cltd
int3
add
fs
xor
sahf
cmp
fs
imul
mov
mov
sub
les
dec
aad
sub
in
push
imul
cwtl
in
cld
popa
fcos
xchg
add
cltd
xchg
mov
jb
shrl
test
mov
and
cmpsl
mov
ljmp
mov
adc
or
mov
iret
mov
mov
das
xchg
not
push
or
inc
nop
std
fstps
movsl
mov
pushf
lret
jl
sbb
fdiv
add
fcmovb
test
fucom
or
pushf
xor
xlat
imul
add
mov
adc
cld
inc
aam
mov
fldt
sti
cmpsb
xor
jo
adc
arpl
add
xchg
inc
movsb
sub
mov
jae
insl
negb
and
or
xor
mov
scas
ret
and
xchg
xchg
cmc
fisubrl
negl
pop
inc
scas
icebp
addr16
mov
lcall
ret
test
mov
imul
sbb
cmp
xor
cmp
pop
jno
xor
cmpl
push
xor
flds
xchg
daa
mov
pop
mov
inc
xchg
mov
daa
clc
out
cmp
jo
jae
insl
add
push
hlt
test
rcrb
push
or
and
push
es
das
push
notl
clc
dec
mov
fnstenv
pop
in
stos
cmpsb
pop
xor
mov
cltd
shrl
pop
sti
inc
adc
leave
jge
mov
mov
jmp
pop
shrl
pop
add
in
add
cmc
push
lcall
stos
fsubs
or
mov
add
jns
lea
fwait
and
dec
cmp
push
cmp
pop
aad
clc
lock
lods
jl
and
aaa
cmp
pop
into
fwait
in
sbb
jbe
inc
xchg
jnp
notb
push
xor
mov
iret
sub
repnz
inc
aas
dec
mov
inc
xlat
scas
pop
pop
mov
add
test
xchg
aaa
js
hlt
mov
mov
push
mov
shl
mov
xor
cmp
sub
popa
sbb
xor
pop
shrl
ljmp
mov
pop
test
pushf
pop
pop
test
dec
ja
sbb
sbb
jbe
popf
adc
jl
in
iret
cltd
pop
dec
xchg
sub
cld
sbb
fs
xchg
out
xor
add
loope
les
push
out
inc
enter
dec
adc
fmulp
sbb
test
xchg
aad
push
scas
in
subb
jnp
fs
xchg
cmpl
jns
stos
cmc
ljmp
and
movsl
jmp
mov
and
cmpsb
inc
xchg
jl
mov
cwtl
bound
ja
sbb
into
pop
cwtl
pop
lret
inc
mov
repz
repz
cli
ret
cs
push
sub
jp
jmp
mov
cli
in
jp
repnz
jecxz
push
push
mov
mov
dec
push
or
push
xchg
jns
cmp
and
dec
pop
fisttpll
push
dec
or
stc
sbb
and
std
imul
jge
das
scas
not
pusha
jle
mov
and
scas
pusha
out
jecxz
inc
addr16
stc
pop
dec
ja
inc
cmpsb
call
cwtl
sub
mov
jbe
xor
or
popa
mov
pop
sub
pop
mov
pop
xchg
hlt
xchg
sub
pop
jns
andl
popf
les
rcrl
push
dec
or
sub
and
mov
sbb
fdiv
gs
xor
inc
in
pop
mov
mov
xchg
cmc
sbb
xchg
outsb
and
hlt
mov
sbb
insl
inc
loop
mov
xchg
inc
and
and
cmc
dec
cmc
adc
lods
mov
xchg
xor
push
xchg
lds
arpl
mulb
aas
ret
lods
push
andb
adc
lods
push
mov
movsl
fcmovu
add
fbld
js
je
cmp
rol
repnz
cmp
enter
xor
sub
add
pop
jmp
mov
mov
mov
in
xor
imul
dec
dec
fsubrs
jo
mov
in
je
jle
xlat
sahf
out
insl
sbb
dec
insb
daa
mov
popf
inc
xor
std
cmp
imul
or
andl
cmp
int3
inc
jge
stos
push
and
jae
adc
inc
mov
cmpsb
ljmp
mov
enter
sbbl
icebp
outsb
out
ds
fsubrs
xchg
ret
out
mov
lock
push
push
mov
subl
es
xchg
mov
mov
addr16
icebp
jl
mov
adc
adc
addr16
lods
xchg
inc
aad
loop
xor
nop
dec
mov
test
and
jno
test
mov
int
pop
sbb
jecxz
pop
mov
inc
jge
sbb
xor
pusha
lods
push
mov
mov
lahf
mov
sti
fnstcw
pop
out
sub
mov
push
jge
pop
add
inc
pop
pop
cmp
push
shlb
in
ljmp
rorb
inc
imul
xchg
sub
jle
mov
pop
sub
xchg
daa
mov
pop
xchg
stc
int
and
xor
xchg
mov
movsb
mov
shrb
mov
hlt
add
sub
leave
push
jmp
les
mov
data16
xlat
pop
mov
ret
les
addr16
pushf
aaa
adc
imul
movsl
push
push
adc
jno
pop
cmp
jb
pop
cwtl
inc
pop
dec
jmp
ja
lods
out
sbb
ficoml
mov
ret
adcl
pop
or
adc
pop
subl
push
ds
add
jg
clc
rcrb
mov
push
lahf
aas
inc
loop
addr16
push
movsb
aam
insl
cmpl
dec
sarb
and
dec
inc
dec
clc
ss
fildl
pop
aaa
je
jmp
jle
mov
pop
scas
mov
lcall
ss
push
mull
inc
sub
fstp
or
fiadds
inc
fsubrs
out
lret
push
inc
xchg
mov
leave
cs
add
adc
inc
cwtl
pop
fisttps
mov
dec
arpl
hlt
test
fisttpll
mov
jecxz
mov
scas
jae
fldt
mov
sahf
mov
pop
xor
punpckhwd
ljmp
cmp
jl
xchg
repz
push
pop
sub
movsl
out
inc
sbb
icebp
scas
cltd
mov
pushf
mov
test
fs
hlt
jnp
mov
adc
leave
add
aam
pop
scas
jns
das
xchg
push
push
mov
in
fildll
into
xchg
loop
test
cmpsl
enter
pop
mov
jns
jno
test
push
test
jmp
adc
add
cmp
push
jo
cmp
stos
inc
lret
je
call
in
adc
fs
add
insl
in
mulb
loopne
pushf
add
addr16
fmuls
stos
imul
sub
mov
int3
adc
lahf
enter
jg
fadd
in
scas
cmpb
jp
adc
add
xorl
scas
jl
mov
arpl
fs
cmp
popf
clc
movsl
cld
mov
repnz
sbb
xlat
enter
pop
lods
pop
xchg
mov
popf
ret
nop
jae
push
mov
mov
adc
sub
xchg
mov
subl
add
mov
xchg
adc
and
xchg
xchg
pusha
outsl
push
ja
sbb
sbb
jb
pusha
xchg
inc
lock
or
push
lods
mov
push
out
mov
lods
fwait
mov
fst
mov
mov
xchg
dec
adc
push
dec
xchg
dec
testb
xchg
mov
sbb
cmp
fs
and
mov
int3
fs
mov
mov
cmp
and
sub
sti
ret
cs
ret
ds
rol
call
cli
and
out
pop
sbb
movsb
sbb
pusha
sbb
mov
repz
mov
scas
in
push
xor
movsb
mov
out
jle
xchg
and
mov
adc
test
cmp
and
and
xchg
pushf
jp
das
mov
pop
rcrb
mov
and
sub
outsb
cmp
dec
xchg
xlat
ds
nop
lahf
es
fs
sbb
jmp
in
dec
adc
sbb
push
fcmovu
inc
lea
xchg
xor
in
sbb
insb
pushf
add
outsl
or
push
push
xchg
dec
in
adc
mov
add
es
sarl
cli
pop
cltd
sbb
or
pop
es
gs
outsb
xchg
dec
scas
hlt
insl
je
fcmove
popf
mov
or
sub
sub
push
lods
outsb
inc
mov
dec
insb
push
adc
mov
mov
addb
jnp
pop
jmp
or
add
cmpsl
out
orb
adc
int
sbb
in
mov
or
xchg
cmpsl
xor
mov
mov
xchg
push
xchg
cmp
outsb
add
push
cmp
sbb
and
pop
pop
insl
dec
sub
mov
jbe
mov
jbe
int3
aaa
fmull
jge
jp
pop
adc
orl
or
mov
in
les
lret
sub
xor
cwtl
push
mov
mov
xor
mov
ret
jg
add
jae
lret
mov
scas
fnsave
and
push
adc
push
aam
rcrb
fwait
jle
inc
das
xchg
sub
dec
and
enter
mov
mov
stc
jo
push
shl
jns
adc
into
and
add
adc
into
inc
clc
mov
jb
pop
cmp
out
out
mov
pop
aas
fsubrl
lods
in
clc
pop
inc
sub
sbb
and
mov
mov
jbe
sbb
sti
push
aad
pop
div
das
xchg
jno
or
push
test
xchg
or
cmp
xchg
aam
xor
cmp
push
dec
iret
int
repnz
stc
ja
loopne
jns
shrb
fwait
cmp
insl
testl
mov
ret
or
rcrl
hlt
push
les
les
inc
xchg
out
and
call
jp
popf
cs
sub
fprem1
lods
dec
fldt
sub
loop
push
push
xor
lock
and
or
push
jmp
shlb
sahf
out
nop
sbb
jnp
outsl
push
jmp
xor
mov
and
loopne
int
sahf
popf
mov
repz
aam
lock
cmp
addl
rcr
mov
sub
fcoml
stc
and
sbb
cmp
mov
jp
std
inc
aam
out
enter
dec
dec
cmp
daa
sbb
and
repz
adc
or
out
lahf
or
pop
aas
mov
inc
pop
or
dec
cwtl
rcrb
out
sti
jno
out
shlb
sbb
adc
and
xchg
jbe
and
cmp
adc
mov
pop
gs
rolb
aaa
int3
and
push
sbb
mov
cwtl
dec
arpl
push
mov
sub
jns
and
jbe
movsb
push
aaa
shll
or
je
add
enter
fsubp
mov
or
cmpsb
popf
sbb
inc
mov
test
mul
addr16
fistpl
mulb
loope
dec
mov
fimull
pop
cmp
jl
sub
mov
push
adc
fiadds
cmp
shll
and
fisttps
add
pop
mov
mov
repz
out
and
test
mov
inc
ja
leave
cmp
xchg
adc
adc
cmp
fdivrs
push
fadds
loope
subl
addr16
jo
jb
mov
inc
push
pusha
pop
mov
sbb
pop
insb
sbb
fadd
pop
or
push
xor
cli
adc
decb
cld
inc
add
xor
mov
dec
xor
pop
sub
divl
cmp
popf
push
pop
nop
aas
sbb
jns
adc
mov
xchg
repz
aam
cmp
xchg
cmpsb
repz
pop
movsb
jae
dec
fidivl
outsb
lods
fisubl
lret
cmpsb
xchg
lcall
mov
cmpsb
loop
adc
dec
movsb
ficoml
icebp
push
mov
jmp
mov
jmp
pop
fldcw
mov
inc
mov
jmp
pop
jge,pt
mov
sti
out
mov
fdivs
shld
ljmp
je
lret
dec
insb
push
sbb
adc
xchg
mov
nop
push
or
pop
sub
or
aam
mov
cmp
cltd
mov
inc
pop
mov
xor
sbb
mov
adc
dec
repnz
je
sub
jno
clc
or
subl
jmp
loop
add
mov
cmp
lcall
popf
ror
jbe
or
out
fwait
and
sub
mov
xchg
call
jnp
out
dec
je
hlt
das
jecxz
sahf
mov
arpl
dec
ret
xor
pop
cmpsl
fisttps
lret
or
jo
mov
xchg
ret
lcall
or
les
push
mov
and
pushf
lock
or
cs
sbb
es
xchg
cmp
xchg
sbbb
cmp
ret
leave
mov
mov
pop
mov
cs
stos
shrb
loope
jge
xchg
inc
or
cltd
or
fisttpl
mov
mov
fmulp
addb
mov
aaa
dec
or
test
sar
mov
xor
jo
pop
nop
push
pop
insl
pushf
jo
xor
xor
rcrl
or
mov
scas
out
mov
leave
lods
stc
sub
dec
ss
and
repnz
int3
test
ljmp
arpl
push
and
dec
pop
bound
in
lret
mov
mov
push
cmc
jge
and
ret
nop
adc
xchg
dec
fs
rorb
and
mov
outsl
push
ljmp
shll
and
outsb
in
es
push
xchg
xor
mov
mov
mov
jle
fnsave
push
and
loop
mov
rcr
lret
xor
dec
inc
lds
je
jo
mov
cmp
inc
and
es
sub
test
shr
and
mov
xchg
ret
dec
rolb
cld
mov
or
fnsave
lcall
inc
adc
jge
adc
dec
repz
clc
xor
pop
push
inc
jne
push
push
add
cmp
sbb
xor
ret
fdivp
mov
cli
push
ja
xorl
popa
pop
xlat
sbb
jp
and
lret
sub
aas
ret
xchg
aad
jbe
xchg
movsl
fdivr
out
std
mov
jne
and
mov
xchg
dec
xchg
cmpsl
and
jbe
xchg
push
and
in
jge
cmp
mov
scas
cmp
test
stc
inc
mov
mov
sbb
mov
scas
jl
dec
xor
in
pusha
xchg
hlt
and
add
jecxz
pop
xlat
out
push
in
cld
movsb
dec
icebp
jle
repz
js
ja
dec
push
iret
sbb
adc
add
or
jb
or
xor
insl
pop
cmc
jge
pop
push
jecxz
jge
out
mov
fidivl
xchg
adc
gs
add
negb
fisttpl
pusha
jge
popa
mov
cmc
jbe
and
push
pop
pop
jb
aaa
dec
test
or
sbb
hlt
jecxz
sub
in
mov
addr16
iret
lret
sbb
out
pop
adc
cmp
adc
jbe
nop
mov
imul
nop
rorb
xlat
jge
adc
sbb
cmpsb
out
es
mov
lods
out
jge
dec
push
push
jnp
pop
jecxz
lods
out
adc
pop
pusha
pop
xchg
sbb
aaa
push
mov
jmp
test
jmp
push
pop
je
cwtl
aaa
stos
push
mov
mov
ljmp
ret
mov
inc
pushf
mov
mov
rcr
outsl
call
pop
jb
adc
fwait
cwtl
aaa
mov
mov
or
xor
es
jp
adc
lcall
mov
insl
mov
cs
jl
sub
xchg
test
jmp
mov
jge
iret
push
lock
jp
jecxz
mov
inc
arpl
fdivr
mov
xchg
fldl
stos
iret
pop
out
push
cmp
push
mov
sbb
inc
jo
adc
add
xchg
mov
stos
out
lret
or
test
jp
in
sbb
push
or
xor
push
push
imul
enter
mov
push
sbb
xlat
sbb
scas
and
and
xor
or
mov
arpl
pushf
push
sub
stos
xor
out
jle
or
dec
loop
xor
and
imul
push
and
inc
fcmovne
push
jb
leave
out
fisubl
xchg
dec
inc
imull
out
sbb
jnp
cwtl
inc
adcl
mov
jno
xchg
cmp
mov
xor
fadds
sbb
hlt
xchg
mov
xor
arpl
addl
dec
cli
pop
xorb
push
adc
sarb
dec
inc
icebp
lcall
dec
mov
or
outsb
pop
es
addr16
xlat
pop
fwait
test
fmul
xchg
ds
pop
mov
ret
mov
sub
or
pushf
repz
adc
into
lods
popf
imul
or
xor
divb
pop
rep
ss
jo
popa
ss
pop
push
fisttpl
cwtl
ret
adc
mov
pop
mov
mov
enter
inc
arpl
xchg
pop
loopne
pop
xor
aam
jno
mov
pop
pop
aas
out
and
cwtl
sub
inc
sti
mov
push
fiadds
std
mov
jae
pop
dec
fcmovnbe
or
dec
mov
inc
leave
negb
in
add
sbbl
imul
jp
jl
adc
xchg
push
push
nop
mov
fdivrs
push
xor
mov
push
adc
ds
inc
jl
ficoml
xchg
dec
add
add
jge
inc
cmp
push
test
pop
dec
inc
xlat
push
xchg
outsl
outsl
mov
pushf
push
add
cmp
push
scas
pop
cmovl
xor
xor
mov
mov
mov
int3
mov
mov
push
subb
insb
xchg
mov
xchg
pop
pop
sti
mov
jmp
dec
sbb
ds
push
inc
cmp
xor
cmp
xchg
shrb
add
sub
jne
push
xlat
test
jae
inc
pop
in
in
push
sbb
fdivs
sti
out
ret
lretw
cmp
xchg
fistpll
cwtl
jne
mov
xor
ljmp
or
mov
inc
ljmp
xchg
lods
ds
xchg
sub
dec
cmp
adc
mov
js
cmpsl
inc
sbb
xor
stos
outsb
cmp
fldcw
das
mov
iret
adc
xchg
aaa
dec
in
and
jb
inc
aas
push
inc
jmp
inc
sbb
lods
add
cmc
jno
test
mov
jl
in
mov
inc
add
inc
out
mov
jno
sbb
xchg
jns
jb
and
sbb
xor
jo
mov
mov
mov
add
sbb
xchg
push
sbb
jge
pushf
cld
dec
add
pop
and
je
bound
pop
mov
pop
in
push
dec
mov
dec
pusha
enter
push
dec
aam
or
arpl
iret
in
mov
and
xor
add
movq
inc
test
or
sub
and
outsl
flds
dec
mov
sahf
lfs
mov
inc
idivl
adc
fisubrl
mov
loope
scas
push
lcall
xchg
adcb
push
cmc
sti
das
cmpsb
repz
fisttpl
pop
lea
jmp
pop
xor
stc
sub
shl
mov
lock
setg
fistpl
pop
sub
fistl
fistps
xor
xchg
dec
mov
push
mov
cmp
jp
arpl
adc
fists
push
xchg
ljmp
in
in
jae
lret
pop
aaa
push
shrb
pop
sarl
push
dec
lods
aad
push
and
rorb
mov
stos
or
jmp
mov
mov
inc
xor
or
sub
clc
mov
insb
jns
fcoml
out
pushl
shlb
jne
inc
mov
in
push
lds
nop
push
sarl
xor
lock
pop
xchg
jae
ret
inc
adc
adc
orb
mov
jb
es
adc
pusha
popf
sbb
cmp
mov
xor
jmp
sbb
aas
arpl
jmp
pop
aad
popa
pop
call
insb
jmp
ja
xor
out
les
xchg
add
add
push
cmp
sub
pop
call
xchg
dec
add
es
push
jg
pusha
lret
mov
mov
xchg
cmp
xchg
mov
or
mov
mov
out
je
cmp
xchg
cwtl
in
pop
dec
outsb
inc
int3
fldcw
sahf
jg
dec
mov
jbe
push
adc
xchg
xchg
and
mov
mov
je
mov
clc
leave
xor
jge
and
sbb
jle
dec
cmpsb
cmp
fildll
out
adc
arpl
mov
jns
sub
or
imul
aam
cltd
jmp
adc
jb
lock
or
or
imul
movsb
xor
fbstp
loope
jae
outsl
sti
mov
ret
das
xchg
pop
mov
pop
dec
xchg
xchg
and
mov
sub
jg
cltd
insb
loop
cltd
out
mov
xor
clc
cmc
stc
ljmp
aaa
xorl
aam
dec
jb
dec
loope
daa
movsl
xor
inc
jns
dec
sbb
scas
in
clc
lea
add
std
into
inc
pop
xchg
scas
lahf
stc
push
xchg
mov
and
imul
jae
inc
and
fldcw
outsl
mov
adc
xchg
insb
or
xor
nop
inc
gs
jg
add
es
mov
movsb
lea
das
xchg
inc
pop
ffreep
or
cmp
iret
loope
dec
xlat
stc
je
or
cmp
and
rcl
xchg
mov
jno
loopne
lods
mov
mov
cmpsb
bound
icebp
pushf
cmp
test
out
sub
sbb
add
adc
cmp
enter
add
fcmovnbe
movsl
lods
xor
adc
sbb
add
mov
shlb
add
bound
mov
mov
sbb
pushw
jno
mov
ja
lods
out
cmpsb
xor
imul
sub
in
sti
inc
xchg
xchg
cmp
xor
jp
or
pop
mov
mov
push
push
mov
dec
stos
cwtl
push
outsl
out
sub
mov
pop
sarl
and
pop
mov
ds
test
in
push
add
imul
add
adc
and
and
sub
xor
aaa
into
add
xorb
cli
cltd
jge
lock
dec
xor
mov
fstpt
fcompl
xor
adc
test
pop
shll
xchg
repnz
mov
in
xchg
sbb
pop
dec
push
xor
jne
or
outsl
inc
jge
in
lret
mov
sbb
push
iret
or
mov
gs
movsl
dec
sub
jge
shr
es
ljmp
fists
scas
cs
add
and
adc
pop
vcvtss2si
mov
cmp
call
mov
xchg
test
mov
mov
sbb
or
add
mov
dec
test
push
out
sarl
mov
test
sbb
push
pop
xchg
xor
and
push
jb
stos
pop
push
fwait
mov
pop
sub
or
in
scas
dec
sub
adc
in
push
lds
jmp
stc
pop
pop
movsb
sub
repz
mov
mov
and
add
outsl
pop
push
mul
xor
insl
inc
sbb
notl
popa
jbe
jp
outsb
mov
adc
sbb
test
das
aas
pop
or
imul
and
xlat
mov
adc
iret
and
mov
data16
aam
cmp
and
out
mov
lret
mov
and
out
out
in
fdivrs
aad
in
pusha
orb
xchg
jg
mov
adc
or
add
repz
stc
xor
xor
dec
movsb
jnp
push
in
push
dec
inc
and
dec
ret
mov
ljmp
cmc
in
aas
jno
outsl
mov
inc
fsubr
mov
or
mov
js
lds
inc
outsb
xor
or
fistpll
inc
mov
ljmp
repnz
pop
sub
pop
push
das
or
daa
nop
shl
nop
jmp
fstl
addr16
inc
icebp
pusha
adc
mov
notb
rcrb
or
pop
dec
rclb
popa
dec
shl
lcall
pop
sub
xor
jbe
push
sbb
sub
xchg
mov
cli
push
jne
cmp
in
add
push
or
mov
jno
imul
fimuls
cli
cmp
stos
sub
add
push
das
inc
js
and
pop
orl
fwait
pop
lcall
outsl
jbe
sub
xor
jae
je
pop
fnstenv
pop
jb
lret
mov
fisubs
cwtl
cmpsl
cwtl
inc
clc
cltd
shl
in
in
popa
fimull
das
add
adc
icebp
push
cmp
add
hlt
imul
imul
cmp
jo
add
js
insb
pop
sub
std
mov
in
pusha
mov
movsb
lods
mov
sub
mov
sub
aad
jne
ret
int
sub
sub
fst
jne
pop
fidivrl
and
loope
mov
and
cmp
or
mov
je
xchg
inc
jmp
adc
iret
out
or
inc
leave
out
imul
daa
pop
inc
scas
push
jbe
jle
pusha
mov
dec
jbe
addr16
mov
fnstenv
in
nop
xchg
sahf
movsb
jecxz
lock
dec
add
shrb
ds
insb
or
jge
xlat
les
push
xchg
push
mov
mov
or
les
or
pop
adc
cmp
add
popf
dec
dec
cmp
inc
lea
pop
rcll
xor
cmp
xchg
xchg
pop
cmpsb
das
cmpsb
sbbl
xorl
out
pop
cmc
stos
fmulp
sub
out
jne
sbb
leave
stos
ret
das
movsl
test
sbb
and
push
jge
negl
test
addr16
shrb
cmp
iret
movsl
and
adc
in
daa
stos
orl
mov
mov
enter
pop
fdivrl
push
add
sub
xchg
push
stos
cmp
dec
and
jo
js
dec
std
sbb
nop
and
pop
inc
xchg
btc
in
fistps
lods
insl
jmp
shlb
jge
lret
cmp
roll
pop
or
cmp
and
pop
xchg
out
cmc
in
mov
inc
scas
jge
inc
out
sbbb
sub
push
test
fimuls
xchg
pop
sahf
dec
icebp
jmp
xor
fdivl
xlat
js
cli
scas
and
xchg
test
leave
enter
loope
mov
es
cmc
sarl
rolb
or
clc
out
xchg
stos
or
out
jmp
in
fists
lea
add
push
pop
dec
xor
sti
hlt
shrb
pop
fstl
xor
lahf
inc
sub
rclb
notl
in
cmp
xchg
jle
loope
pop
jnp
inc
popf
imul
in
pop
addr16
inc
adc
jbe
stos
add
push
pop
iret
push
aaa
aaa
rcll
cmp
cmc
ds
mov
repnz
jp
dec
lret
mov
fistl
sub
test
jg
sub
stc
mov
xor
adc
sub
push
addr16
js
mov
scas
sahf
or
shl
add
inc
and
outsb
loope
jae
sbb
lcall
push
test
cwtl
aam
cmpsb
sahf
or
shrl
ja
stos
std
sbb
or
popf
jno
popa
pushf
shll
insl
inc
js
mov
add
adc
je
push
sbb
mov
and
insb
shrl
lret
iret
xor
out
mov
push
hlt
fnsave
xchg
push
test
sub
mov
scas
and
jnp
rcr
xor
test
int
jl
aam
push
idivl
adc
es
fildll
push
mov
cmp
inc
aam
ljmp
orl
cmpsl
mov
cmp
stos
mov
and
fldcw
push
mov
movsl
js
iret
push
ss
rcll
xchg
mov
shl
aaa
jb
lds
or
cld
pop
mov
add
inc
pop
cmp
rcrl
dec
mov
outsb
lahf
lret
xchg
lods
xchg
jb
je
or
nop
fidivrs
jecxz
mov
adc
hlt
sub
cmp
in
lods
shr
out
jg
adc
rcll
test
cmpsb
daa
scas
popa
sbb
cli
es
inc
in
bound
divb
in
cmc
das
dec
sub
mov
or
pop
out
fistl
notl
cmc
cmp
movsb
push
xchg
call
or
aas
mov
dec
fisttpll
mov
or
add
incl
inc
stos
and
push
or
js
jp
xor
ljmp
mov
arpl
jp
movsl
jg
sub
test
ds
scas
inc
and
sub
fwait
jne
ljmp
add
ljmp
rclb
test
div
add
dec
mov
jmp
dec
stc
stos
jle
push
adc
jg
test
push
jmp
push
ja
inc
int3
pushf
sub
adc
test
imul
les
movsl
sub
pop
mov
push
dec
je
outsl
mov
jmp
sbb
sbb
ret
lcall
and
push
popa
or
test
mov
pop
and
outsb
pop
addb
cmpb
lret
dec
push
pop
out
scas
stos
push
push
loopne
mov
and
push
jmp
fs
lret
cltd
pop
mov
je
scas
mov
arpl
mov
lods
sbb
xor
aad
ror
add
dec
or
dec
sbb
cmp
mov
bound
push
adc
hlt
fs
xchg
movsb
dec
addr16
cs
sbb
add
inc
mov
push
mov
lahf
push
lods
cmpsb
sbb
dec
in
cmpsl
js
mov
movsl
jle
cld
insl
adc
adc
mov
sarb
pop
std
lcall
jl
jno
mov
insl
sti
scas
mov
xchg
dec
sbb
movl
pop
lock
sbb
and
movsb
xlat
mov
dec
int
lods
mov
sub
lret
xor
pop
test
popa
mov
je
jl
push
sar
dec
pop
push
inc
pop
xchg
ljmp
sub
pop
bound
mov
rcr
mov
mov
pop
ljmp
xchg
orl
sbbl
push
xor
stc
lret
outsb
xchg
je
xlat
mov
or
fwait
sbb
flds
cltd
sub
pop
xchg
push
cmpsl
mov
addr16
negl
test
jb
pop
add
add
add
inc
dec
int3
mov
add
outsl
jne
xchg
or
sub
mov
jo
mov
arpl
fisubrl
xchg
mov
and
mov
andl
andb
cmp
test
into
in
aas
cld
fs
dec
push
pop
aam
aaa
pop
or
push
outsb
std
mov
sub
fsubrp
sbb
dec
bound
icebp
mov
test
sti
pop
cwtl
sbb
aad
inc
pop
jns
xor
daa
loopne
xor
clc
imul
mov
shrl
fsubl
dec
inc
mov
ja
pop
adc
push
enter
lret
inc
cmp
sbb
add
and
mov
xchg
and
add
xor
sar
pop
das
ret
imul
repz
sub
fincstp
icebp
subb
mov
test
movsl
loopne
adc
arpl
nop
mov
jle
sbb
sbbl
mov
in
fdivrl
repz
cwtl
in
pop
mov
cmp
lea
jl
push
mov
addb
mov
mov
push
mov
loop
test
jo
insl
leave
inc
adc
or
incl
call
mov
lods
and
push
and
outsl
inc
add
add
daa
subl
pop
ror
jmp
sbb
push
or
add
mov
in
cltd
fdivs
pop
out
fidivrl
es
test
push
push
nop
dec
in
or
pop
jmp
test
add
add
pop
sarb
and
imul
negl
shll
ljmp
jecxz
addb
pop
inc
rol
movsl
loopne
mov
fs
aas
enter
insb
insb
imul
int
sub
ja
in
aad
scas
lahf
popf
test
pop
aad
mov
or
mov
inc
andb
push
int
in
imul
sbb
cmp
outsl
dec
mov
lds
inc
and
xchg
fxch
mov
int
lahf
stos
js
scas
rclb
jno
jg
outsb
and
and
mov
sbb
push
into
sub
adc
sub
aas
adc
add
jae
dec
mov
pop
iret
sub
subb
dec
outsl
dec
and
lock
pushf
push
adc
cmp
jne
ret
leave
push
xchg
mov
xlat
and
xor
jp
sub
clc
adc
movsb
jb
cmp
pop
ss
mov
jb
lret
cmp
dec
pop
mov
in
frstor
cmpsb
lock
or
or
add
outsl
imul
icebp
pop
mull
fwait
inc
lahf
fnstenv
xchg
scas
lahf
cld
mov
sbb
or
mov
icebp
push
push
cmpsl
jle
jmp
mov
dec
sub
fstpt
or
jb
sbb
adc
mov
cmp
mov
js
decb
push
cmpl
adc
gs
stc
mov
pushf
shlb
das
mov
sub
and
fsubrs
lret
mov
stos
stos
outsl
mov
lahf
pop
xor
xchg
mul
mov
dec
add
movsb
pop
lcall
mov
add
mov
movsb
pop
mov
adc
movsb
mov
out
out
cmp
jle
les
test
mov
je
push
call
daa
mov
dec
test
dec
pop
xchg
js
orb
outsb
lock
mov
jb
xchg
dec
loop
jge
dec
xchg
lret
jne
jl
cli
in
adc
fs
and
xor
mov
mov
test
cmp
jno
out
sbb
ss
loope
cli
dec
xchg
mov
ja
arpl
pop
add
pop
scas
call
cmpsb
add
iret
mov
and
fidivrs
shll
adc
outsl
ficompl
xor
dec
mov
scas
stos
lock
hlt
jmp
jmp
lcall
inc
jmp
cmc
xchg
mov
mov
cld
or
stc
pop
xor
je
push
jmp
xchg
jo
sbb
adc
pop
pusha
mov
lods
pop
fxch
add
aas
jecxz
andb
xchg
out
sbb
or
loop
sahf
mov
xchg
js
jne
jge
push
repnz
xchg
fcoms
adc
rcll
mov
dec
push
push
subb
dec
xorl
jle
ljmp
xor
sub
cmc
ja
fidivs
popa
push
outsl
and
pop
push
dec
lret
pop
jne
fimull
je
xor
pusha
jns
sbb
faddl
mov
add
mov
mov
in
clc
sahf
jb
sub
jg
sub
mov
shlb
add
jb
fucomp
cs
inc
mov
les
testb
adc
jne
cmp
cmp
ds
je
es
xchg
inc
sahf
nop
push
mov
xchg
pop
popf
bound
gs
lea
addr16
inc
aas
push
xchg
test
xor
test
jns
shlb
aam
mov
iret
jle
movb
in
pop
es
sub
sbb
mov
repnz
dec
xor
xchg
xchg
aad
dec
cwtl
mov
pop
xor
push
cmp
daa
scas
or
das
jge
xchg
ss
nop
loopne
gs
test
cmp
test
mov
dec
adc
mov
cli
add
rorl
and
out
push
mov
adc
jle
nop
dec
je
enter
test
scas
dec
shr
or
push
and
xchg
lret
lret
and
outsb
sarb
dec
sub
mov
jecxz
lcall
xor
loope
outsb
lretw
ljmp
push
adc
and
xchg
stos
jo
nop
cmc
dec
sbb
movsb
jecxz
cmc
das
pop
loope
push
imul
nop
imul
mov
stc
cmp
lret
mov
das
sti
inc
jle
mov
loopne
dec
xchg
push
inc
sbb
cmpsb
andl
outsl
mov
les
rcrl
lret
add
stos
pop
jo
jb
push
cmp
adc
pop
ds
inc
mov
daa
xlat
add
pusha
addr16
mov
jge
dec
mov
enter
push
jge
mov
and
mov
mov
fldcw
aas
xlat
sub
add
mov
pop
movsl
xor
push
pop
jle
jg
push
pusha
test
pop
or
decl
dec
xchg
mov
popa
xor
inc
sbb
lods
mov
outsb
rclb
push
sbb
xchg
push
neg
repnz
and
icebp
dec
outsl
or
aad
dec
cltd
dec
lret
sarl
frstor
jg
jecxz
pushf
push
mov
fbld
add
pop
push
loop
add
and
lcall
popf
cmp
decl
and
in
inc
xchg
or
ja
aam
outsb
ljmp
pop
mov
imul
lea
pop
add
sbb
adc
xor
loop
mov
sahf
stc
enter
call
xor
xor
cmp
fcoms
push
push
push
sbbl
pop
loope
jb
imul
and
bound
stos
mov
fbld
push
jne
xchg
pop
xor
aam
outsl
adcl
inc
push
shlb
jge
mov
mov
mov
bound
cmpsb
mov
mov
int
movsl
xor
inc
jno
les
pop
das
out
mov
sbb
mov
xchg
test
jmp
push
orl
inc
adc
int3
jle
insb
shll
jg
add
idivb
adc
repz
adc
push
scas
mov
or
push
inc
xchg
movsb
movsb
repnz
mov
scas
je
pop
test
mov
and
shl
push
push
std
jno
xor
dec
mov
dec
inc
add
mov
sbb
xlat
ret
and
pop
repnz
cmp
in
ljmp
test
addb
ret
lods
cltd
cmpsb
rcll
jb
shll
popf
in
pop
sub
add
xchg
ds
add
dec
mov
pop
push
push
divb
cmc
jo
arpl
lds
sti
and
mov
push
stos
and
ret
lods
pop
dec
imul
jecxz
jge
or
cmp
xchg
pop
mov
scas
inc
push
dec
cwtl
test
jne
sub
ja
outsl
inc
adc
xchg
movl
mov
fdivs
mov
xor
daa
adc
jle
inc
sub
into
mov
cmp
daa
sbb
mov
cld
leave
mov
cwtl
ret
stos
dec
and
mov
daa
cmpsb
in
out
push
in
and
movsl
jmp
adc
add
xchg
shr
imul
xor
mov
xchg
addr16
adc
test
adc
pushf
sbb
mov
jl
mov
cli
int
popa
je
or
push
fsubl
cmpsb
cmp
cmpsb
inc
sti
in
pop
sbb
xchg
rcl
cmp
xchg
lods
mov
mov
pop
stos
stos
pop
add
mov
xorb
fldenv
sub
dec
cld
mov
add
push
in
mov
mov
daa
and
mov
and
xchg
and
sub
movl
sbb
addl
insb
mov
out
lret
adc
pop
stos
and
push
sub
pop
test
cmp
jmp
jne
cmc
push
and
lock
bnd
cwtl
clc
mov
test
jl
lods
add
clc
imul
mov
data16
stos
data16
bound
test
jle
jbe
and
jne
push
cltd
lcall
cmp
fucom
sub
or
in
mov
fs
mov
xor
sbb
pop
mov
xchg
mov
in
push
xor
lret
enter
enter
cmp
sbbb
jns
icebp
jecxz
mov
sarl
xlat
repnz
fsubs
add
aas
popf
inc
lods
in
in
pop
xor
inc
jle
and
aaa
add
or
sub
sar
mov
adc
jo
mov
lods
aaa
ret
popa
data16
or
xor
pop
jb
lcall
cmp
push
cmp
insl
jo
mov
pop
sahf
or
sbb
call
movsl
test
in
mov
inc
test
icebp
pop
inc
into
sub
and
nop
and
ja
fcmovnb
cmpsl
push
add
outsl
sub
cmpsb
push
pop
or
mov
lcall
sub
xchg
push
gs
mov
ret
repz
jg
mov
push
leave
mov
pop
mov
jnp
scas
mov
push
int3
or
mov
xor
orl
and
sbb
sub
cmp
mov
test
sub
lock
cmp
outsl
xchg
stos
sub
push
fimull
stos
sub
in
movsb
mov
popa
xchg
divl
leave
dec
pop
mov
xor
leave
sahf
cltd
lcall
cmp
jb
dec
push
pop
jb
mov
xor
fsubs
push
bound
jge
jle
xchg
cld
xor
jnp
movsl
xchg
repz
jmp
xchg
mov
or
add
aad
sub
mov
mov
addb
jbe
inc
or
xor
dec
xor
nop
lods
jne
pop
or
repz
push
mov
sbb
cmc
inc
inc
push
xlat
sub
je
pop
shrb
mov
les
cmpsb
repz
sbb
pusha
dec
jae
in
stos
repz
out
xchg
addr16
cwtl
scas
xor
xchg
jno
test
sbb
test
arpl
mov
jge
xor
push
fidivs
into
test
mov
popf
xor
inc
jmp
rolb
rorb
and
in
cld
push
popa
rolb
xchg
out
mov
fidivs
sbb
or
iret
arpl
inc
mov
and
stc
mov
and
bound
lahf
dec
lcall
inc
cmpsb
sub
dec
enter
or
adc
adc
mov
loopne
sub
cli
or
fists
dec
xor
loop
cmp
mov
divl
sub
fsubrl
or
xchg
inc
mov
stos
sbb
daa
push
inc
arpl
jae
cmp
xchg
sub
xchg
test
sub
mov
mov
jno
call
adc
leave
mov
adc
pop
fldln2
outsl
cli
rolb
leave
pop
hlt
aas
fstpl
loopne
lret
add
cmpsb
scas
jge
inc
jns
and
mov
and
movsl
mov
push
add
adcl
jmp
test
jb
mov
ljmp
sub
fimuls
mov
pop
rcrl
sub
fwait
or
out
repz
adcl
mov
jne
xchg
adc
in
sbb
cli
adc
dec
lock
test
fwait
lahf
in
push
mov
and
pop
repz
dec
sub
std
mov
in
addr16
ret
popa
imul
roll
pop
mov
inc
ja
fucomip
cmp
dec
sahf
push
sti
stos
mov
in
sbb
test
fisttps
inc
test
and
and
jmp
in
ljmp
xor
jns
cmp
cmp
ret
popa
push
mov
cwtl
mov
mov
je
dec
clc
das
sbb
push
mov
cmp
in
fwait
pop
sbb
add
or
mov
pop
les
pop
adc
cltd
test
ret
js
xor
mov
pop
inc
push
xlat
je
stc
clc
ljmp
jp
jb
cli
jge
in
mov
in
inc
sub
jae
movsb
scas
xor
or
fmuls
rolb
push
cli
adc
push
mov
push
dec
scas
nop
movsl
mov
sub
mov
jb
inc
popw
test
and
lret
inc
ret
lock
dec
sbb
es
mov
pop
icebp
adc
or
add
push
jmp
push
or
pop
stos
xor
dec
std
xchg
xor
mov
add
arpl
hlt
jnp
mov
mov
mov
mov
data16
mov
sub
addr16
inc
add
xchg
int3
std
dec
shlb
sub
mov
out
cmc
lock
popf
pop
cmp
cmp
adc
popf
clc
pushf
aam
filds
cmp
iret
or
ret
js
add
cmp
sbb
mov
and
rol
lock
dec
fwait
pop
dec
test
mov
add
dec
sub
mov
mov
sbb
cmpsb
cld
rolb
stos
test
cmp
cmp
mov
or
sbb
lods
clc
or
je
call
lahf
push
mov
push
jmp
stos
cltd
inc
lret
popf
shrl
lcall
mov
mov
call
jge
inc
hlt
mov
pop
inc
insl
nop
cmp
push
xor
mov
mov
cmpsb
mov
mov
mov
mov
scas
outsb
pop
and
pop
jb
jno
dec
imul
jl
adc
pop
add
leave
pop
sub
cmp
sbb
scas
adc
ljmp
push
cs
fildl
mov
lea
add
mov
mov
out
mov
shlb
xor
xor
in
cmpsl
dec
je
push
addr16
in
pop
adc
mov
jecxz
int3
faddl
dec
cmpb
fwait
xchg
inc
jecxz
adc
cltd
loope
xchg
and
aaa
lret
ret
stc
jp
push
mov
lods
pop
shrl
imul
jno
test
push
lret
adc
inc
jge
repz
mov
sbb
lods
or
dec
sarl
mov
inc
jne
lods
or
fbstp
popa
cwtl
jbe
ror
jp
rcll
into
ljmp
mov
imul
movsl
fmuls
pop
negb
xchg
or
or
cmp
lcall
inc
mov
jmp
xchg
fsubrl
mov
loop
mov
fdivs
pop
cmp
outsl
cli
repz
cmp
enter
cmp
fidivrl
stos
pop
sub
stc
enter
or
cmp
loopne
lds
das
adc
sbb
xchg
sub
sbb
lcall
ds
loop
sbb
xchg
pusha
sub
jnp
jmp
cli
mov
pop
cmp
push
adc
mov
sbb
pop
leave
xlat
fsubrs
mov
das
sub
and
adc
cld
sbb
dec
push
scas
nop
test
and
jnp
test
push
into
push
xchg
xor
or
repz
push
push
data16
jg
inc
mov
push
mov
cmc
push
fdivl
jl
jmp
fs
push
mov
rorl
pop
inc
stc
mov
xor
xchg
std
aam
std
add
lahf
in
sbb
sbb
xchg
scas
cld
jno
add
and
xor
jecxz
repnz
inc
inc
fldt
clc
jmp
jns
js
loop
loopne
jecxz
mov
imul
icebp
lods
stc
imul
mov
roll
mov
ficomps
out
cmp
bound
testb
mov
mov
rcrb
push
pop
aas
cmp
sub
pop
adc
addl
outsb
cli
inc
push
test
lret
lods
scas
jne
repz
int3
mov
das
into
out
or
call
jno
ffree
outsb
sbb
cmp
inc
mov
jg
cmp
lods
sub
ja
jo
push
and
sub
fstpt
les
mov
cmp
pop
mov
aad
push
ret
icebp
popa
loop
lret
in
cwtl
shll
lods
jo
cmp
in
xor
aad
ret
dec
inc
sub
insb
cmp
fdivp
ss
ret
nop
into
repnz
test
mov
popf
or
jno
cmp
xor
clc
dec
and
shrl
cmpsl
xchg
inc
mov
fdivs
les
jns
or
inc
scas
jno
ds
pop
jg
int
xchg
push
and
enter
int3
subb
and
push
or
nop
out
or
insb
test
mov
ret
sbb
out
and
dec
loop
imul
pushf
mov
scas
ss
mov
cltd
mov
js
adc
lcall
adc
jecxz
add
mov
xchg
ljmp
adc
cmp
adc
lret
imull
out
sub
gs
adcl
mov
cmc
les
mov
dec
and
sub
mov
mov
jecxz
jo
cli
push
mov
das
xor
xor
pop
dec
mov
addb
fdivrp
mov
and
sahf
and
push
mov
sub
mov
movsl
xor
dec
stc
js
push
cli
std
xchg
jmp
addb
dec
mov
popa
and
loope
and
daa
shl
xorl
jo
push
lret
jb
aam
add
mov
bound
fdivrs
mov
out
popf
inc
cmpb
push
pusha
stc
cmp
inc
gs
and
shrb
mov
jo
inc
call
frstor
enter
fistl
xor
icebp
out
push
sbb
xchg
fsubr
jnp
out
mov
adc
pop
hlt
xor
cs
das
lret
mov
push
sti
mov
dec
lea
leave
mov
jge
mov
and
arpl
push
stos
mov
out
test
cmpsb
out
mov
stc
xchg
dec
add
add
pop
insl
jo
adc
xor
in
lods
add
mov
add
fistpl
xchg
es
and
mov
xchg
pop
push
cmp
shll
or
adc
or
stos
mov
dec
daa
shl
xchg
rcrb
and
push
aam
or
movl
push
inc
test
push
mov
js
xchg
inc
cli
add
xlat
aaa
jns
sub
inc
jmp
stc
xor
pop
adc
mov
cwtl
push
lret
push
push
repnz
aam
testl
and
ljmp
test
cltd
icebp
or
mov
shrl
or
dec
mov
pop
mov
push
push
cmpsl
imul
iret
pop
test
mov
jl
std
fimuls
out
enter
xchg
adcl
clc
roll
iret
push
out
inc
mov
and
bound
sbb
cmp
aad
mov
or
lret
dec
cli
xlat
pop
jb
rclb
int
shll
sub
dec
cs
and
and
out
fiadds
in
movsl
mov
dec
bound
jns
cmp
mov
mov
sub
shr
inc
pop
mov
sub
and
or
mov
push
xor
xor
xlat
mov
xchg
jb
cs
pop
cmp
sbb
dec
jmp
inc
mov
xchg
cmpsl
fucomp
mov
lret
loope
ret
dec
mov
test
inc
lods
loope
jmp
icebp
mov
or
popa
cmp
les
pop
jecxz
sbb
rcl
int3
icebp
add
pop
push
cmp
mov
iret
js
rorb
pop
adc
movsb
addr16
push
cmp
jns
jb
nop
cmp
aam
or
icebp
mov
and
mov
lcall
out
xor
or
add
les
mov
add
xor
add
jns
je
outsl
inc
push
xlat
aam
js
pop
daa
jno
add
add
imul
ds
adc
mov
lods
mov
xchg
repnz
push
or
sbb
dec
pop
pop
push
repnz
lret
or
clc
loope
add
adc
push
jb
sbbl
loope
jg
mov
or
loop
xchg
fs
aad
jle
mov
jecxz
insb
in
ret
lret
adc
inc
cmp
sub
std
out
mov
mov
sbb
jnp
pop
loopne
jecxz
inc
cmp
shr
or
into
int3
lret
cmc
cmc
pop
pop
repz
cmp
xchg
fwait
icebp
jbe
mov
cs
fsubrs
aad
ss
adc
notl
mov
cs
gs
aam
cmpl
push
mov
jmp
jecxz
mov
test
les
cmp
iret
ljmp
repnz
jb
mov
pop
pop
jb
and
add
ret
pop
fistpl
pop
pushf
inc
shl
cmp
or
bound
inc
out
loopne
fdivl
fst
nop
lret
sub
ret
adc
fisubl
cli
cmpsl
and
sbb
mov
push
rcrb
movsb
lahf
jb
sub
add
mov
add
lahf
add
push
cmp
mov
iret
loop
push
cmp
mul
push
ljmp
into
dec
in
andb
push
loop
sbb
jno
dec
hlt
cltd
and
or
pop
jo
outsb
adc
addb
push
incb
xlat
rcrb
mov
cmp
cli
aad
rcll
lock
nop
push
inc
aad
rcr
dec
std
jnp
mov
jae
add
pop
xor
push
test
jmp
sbb
sbb
and
addb
es
add
lret
pop
fimull
mov
mov
sbb
or
cs
and
mov
imul
ljmp
mov
push
rcr
add
jne
mov
push
jge
mov
sbb
das
sub
into
es
insl
scas
scas
sbb
sbb
xor
lahf
movsl
cli
xchg
lds
mov
rcrb
fiaddl
xchg
pop
lods
xor
in
ficomps
dec
loope
inc
xor
stc
or
call
sbb
iret
mov
pop
push
jno
std
jp
jp
cmp
jmp
sbb
enter
sub
and
adc
cs
inc
mov
xlat
sti
je
cmpsl
or
add
xchg
cli
xor
test
popa
dec
mov
sbb
jmp
int
pop
sub
cmp
adc
dec
mov
sbb
jnp
sbb
xchg
cmp
push
call
adc
arpl
dec
stos
in
rcrb
pop
jae
xchg
ss
mov
aad
popa
cmp
in
frstor
or
inc
leave
or
in
adc
out
xor
dec
insb
lcall
inc
and
push
push
ss
into
orl
mov
cmp
jbe
dec
popa
xchg
pop
xor
data16
pop
jmp
stos
andl
lea
add
lcall
data16
adc
mov
out
pop
movsl
sbb
dec
gs
daa
roll
outsb
jns
loop
fcmovne
repz
dec
int
lods
and
mov
xor
sub
lds
loop
bound
xchg
inc
int
adcl
xchg
cmp
and
jg
mov
out
xor
jbe
aas
aaa
ret
test
stos
or
mov
shll
jo
scas
aad
out
loop
adc
stos
and
mov
call
imul
js
sbb
pop
sti
inc
inc
xorb
mov
jo
adc
push
inc
mov
test
and
push
cwtl
aam
and
jg
insl
shl
inc
ljmp
stos
inc
cmc
mov
add
cmpsb
fucomi
add
inc
aam
add
loope
cmp
lea
aam
jmp
xor
mov
aaa
push
dec
sbb
or
int3
fwait
popa
sub
cmp
js
mov
sbb
fcomi
test
push
arpl
sar
scas
cmpsl
add
xorl
sbbl
sbbb
or
call
stos
ficomps
mov
xor
push
push
and
out
mov
push
xor
mov
movsl
in
push
and
xchg
je
jae
adc
mov
bound
out
rcr
xor
pop
call
inc
dec
imul
inc
imul
rclb
push
inc
mov
xor
adc
add
dec
test
mov
lods
pop
icebp
push
or
xchg
stos
cs
outsl
add
ds
fisubl
push
xor
xchg
cmp
dec
jb
fisubrs
or
loop
insl
push
dec
cld
nop
sbb
mov
sub
mov
push
out
int3
lods
cmpxchg
mov
mov
movsb
outsl
sub
loopne
adc
imull
in
xor
inc
mov
lock
lds
mull
icebp
hlt
cmp
mov
sbbb
test
outsb
dec
fiaddl
scas
lgs
mov
pop
nop
lahf
xchg
in
dec
leave
jl
es
fxch
inc
loope
aam
jns
xchg
mov
jns
cld
test
jmp
iret
lock
sub
mov
test
rcll
add
andl
pop
imulb
and
pusha
xor
xor
bound
or
ficoml
clc
mov
hlt
xor
fucom
mov
mov
cmpb
jmp
or
rclb
loopne
xor
jecxz
mov
mov
pop
imul
movsl
cs
jnp
loop
sub
push
into
and
sbb
stc
aam
and
clc
xor
pop
jmp
jo
ret
mov
lds
ja
cmp
and
mov
and
incb
flds
sub
arpl
push
jle
fwait
cmp
xor
addr16
pop
adc
sub
test
mov
lods
std
int
xor
jp
sbb
push
addr16
cld
das
push
aaa
push
int3
fldl
jl
add
test
les
dec
pop
push
js
adc
insl
adc
andl
imul
sbb
loopne
les
mov
cmc
or
fwait
inc
inc
popf
xor
adc
or
mov
fwait
jns
jb
dec
xor
pop
cltd
rcll
shl
lret
mov
dec
repz
mov
xchg
jl
mov
push
mov
stc
ret
jecxz
int
and
out
movsb
cwtl
sbb
xlat
push
xchg
jns
xor
pop
push
mov
and
jle
mov
jl
test
decl
lahf
popf
scas
dec
cli
out
sbb
dec
mov
sub
add
sub
jne
insl
cld
loope
push
inc
daa
xchg
out
jmp
popa
xchg
cmp
pop
nop
adcb
mov
jnp
popf
sbb
lret
data16
sbb
or
mulb
out
popa
fs
adc
popa
cmc
cmpsl
movsb
test
dec
sub
mov
or
aam
lret
mov
xor
or
push
repnz
push
sbb
jnp
jle
xor
inc
cmp
lret
inc
lods
inc
scas
sti
add
mov
test
jns
mov
mov
cwtl
cs
mov
mov
adc
adc
push
mov
pop
in
jae
ret
cli
mov
jb
test
stc
stc
inc
mov
inc
or
inc
out
jno
add
imul
imul
movb
lret
loop
sbb
dec
jne
jecxz
jmp
and
enter
mov
xor
push
dec
or
mov
xor
aaa
pop
lods
mov
jle
js
outsb
movsb
xlat
mov
out
adc
pop
out
lock
sbb
inc
push
fiaddl
ficompl
mov
sbb
test
stc
xor
rcr
mov
or
dec
daa
jo
cltd
xlat
sahf
and
bound
es
incl
fimuls
into
mov
out
fwait
mov
jnp
aam
and
aad
std
rcl
lods
xchg
mov
cmp
pushf
je
fbld
aad
scas
or
gs
cs
inc
out
push
cs
into
push
xchg
adc
sub
dec
sbb
xor
or
lret
mov
xchg
fstps
lret
ljmp
xor
pusha
mov
and
popa
cltd
xor
out
push
mov
mov
fldenv
mov
es
sub
fstps
and
cmp
ror
fildll
push
push
mov
ljmp
adc
dec
out
jbe
lods
xlat
jbe
ret
fstpl
push
jmp
cmc
enter
or
pop
xor
clc
lahf
nop
adc
push
cmp
lods
addr16
push
adc
pop
dec
mov
sarb
daa
pop
cmp
add
scas
xchg
outsb
lods
dec
pop
bound
jne
loopne
lret
jb
loop
or
pop
sbb
xchg
addr16
add
mov
out
testb
lret
les
sbb
inc
dec
jae
scas
jge
fsubr
ret
mov
dec
lret
dec
loope
jle
jne
nop
rclb
out
pushf
movsb
movsb
hlt
fwait
nop
cmc
rorl
arpl
outsl
push
rcll
or
call
mov
bound
add
mov
adc
lods
mov
in
pop
lock
sahf
fwait
rorb
lret
outsl
add
pop
push
or
inc
jge
fsubrl
jl
ja
pop
pusha
pushl
lods
mov
aas
push
mov
inc
xlat
and
and
dec
mov
inc
sbb
adc
cli
in
mov
aas
lahf
and
jb
jg
sub
jmp
imul
dec
dec
lea
pop
and
imul
filds
pop
mov
or
scas
push
sub
loope
mov
in
push
xor
inc
in
mov
rclb
in
cmp
jo
sub
push
vmovmskpd
mov
in
iret
inc
ss
add
into
xchg
aaa
hlt
or
daa
push
add
push
ja
mov
mov
cmp
jns
jns
enter
fnsave
lock
pop
add
adc
push
cmp
push
cmpsb
push
stos
xor
hlt
repnz
push
pop
int3
xchg
aas
sbb
mov
enter
stos
mov
insb
inc
or
sti
inc
mov
fsub
pop
or
push
pop
test
dec
mov
das
mov
sbb
test
imul
mov
call
fstpt
add
testl
dec
push
test
ds
lret
mov
fcoms
xor
test
stos
mov
jge
fsubrp
pop
add
orb
movsl
adc
cwtl
aam
xchg
out
cmp
cmc
dec
bound
xchg
lock
adcl
jns
push
pop
mov
repnz
sub
sbb
jge
pushf
jl
and
xchg
jns
push
pop
push
test
jl
addr16
mov
je
dec
mov
sub
adc
dec
mov
inc
mov
xchg
dec
jb
pop
mov
scas
out
aam
cmp
faddp
jae
push
adc
cmpsb
pop
aam
mov
cmp
cli
in
gs
imul
mov
and
pop
xchg
addr16
pop
popf
pop
jbe
adc
add
lods
and
into
addr16
dec
mov
iret
mov
addb
push
jne
push
mov
jae
arpl
loopne
pop
sub
cmp
inc
jbe
std
xchg
push
lock
repz
sarb
jbe
inc
cmp
shlb
in
push
stos
lcall
sarl
and
cmpsl
sbb
mov
xor
lret
stos
cmpsb
jae
fsubrl
dec
rcll
les
iret
xchg
add
mov
pop
subl
pushf
fs
movsb
xor
push
inc
pop
pop
sbb
insl
aas
das
call
sbb
mov
in
dec
lcall
cmpsl
cltd
pop
jge
test
mov
adc
lcall
rorb
rcrb
xor
aaa
xor
sbb
cmp
or
xchg
and
pushl
sbb
std
aad
inc
aad
inc
dec
mov
jp
pop
mov
cmc
popf
roll
sbb
pushf
fsubr
push
lods
stos
sbb
push
inc
cmp
xchg
inc
adc
adc
mov
push
inc
mov
fdivrl
and
arpl
xor
fidivrl
mov
or
xor
xor
scas
nop
push
int3
xor
mov
sbb
mov
pop
mov
mov
add
push
push
cmp
jb
jno
mov
lods
jecxz
rorl
popa
imul
sti
inc
rcrl
sub
fldt
xchg
and
pop
cmp
sbbb
shrb
fisubrs
data16
cmp
sahf
xor
mov
addr16
add
or
mov
adc
imul
hlt
jg
push
fiaddl
mov
mov
mov
mov
sbb
mov
inc
push
loope
addl
fstps
mov
fwait
dec
lcall
fisubrl
inc
out
xor
insl
sahf
cmp
cmp
ret
add
mov
push
fimuls
sbb
xchg
or
insb
std
jmp
arpl
sub
inc
aam
cwtl
adc
sar
mov
flds
not
fiadds
inc
mov
cmp
aas
flds
sub
lods
dec
orl
add
add
fisubl
inc
xchg
cmpb
inc
jp
mov
dec
popa
mov
xorl
into
jl
jns
push
and
inc
adc
rcll
pop
cltd
jns
jbe
sub
or
pop
pop
sbb
test
shrl
cwtl
sub
repz
loope
test
mov
xchg
mov
sahf
push
lcall
lock
adc
sbb
idiv
pop
out
cmpb
mov
add
subl
add
adc
mov
dec
mov
aas
rolb
push
das
test
jne
sub
imul
rcll
mov
not
rorl
cmp
or
adc
es
in
xchg
sarb
scas
decl
aaa
shlb
std
mov
cmpsl
fwait
lahf
push
cmp
mov
pop
lods
and
stc
testl
xchg
fimull
out
mov
addl
and
sarl
in
into
mov
jmp
les
movsb
out
arpl
es
sub
pop
popa
ror
fcoml
lock
and
adc
push
add
xor
sub
jns
push
loope
add
jl
call
mov
mov
jle
dec
pop
scas
push
lret
std
fmul
mov
dec
inc
out
lcall
adc
subl
es
inc
push
cmp
pop
stc
pop
xchg
icebp
mov
mull
sar
test
int
scas
mov
push
pop
mov
daa
je
outsb
in
pop
fwait
inc
mov
push
mov
or
mov
fs
xor
ror
ret
lea
mov
std
mov
xchg
cmp
or
xor
fcoml
xor
in
ret
cmp
clc
xchg
out
mov
loopne
fldcw
xlat
mov
int
xchg
out
mov
and
cli
loopne
dec
andb
mov
loope
fcmove
enter
jnp
mov
mov
jge
cmp
iret
mov
out
sub
mov
dec
jle
mov
xchg
and
and
notb
popa
xorl
adc
pop
pop
jo
pop
lret
into
or
mov
cmp
mov
mov
xor
cmp
mov
xchg
mov
sbb
inc
imul
mov
popf
out
jmp
dec
jno
unpcklps
test
sbb
mov
icebp
push
inc
cmpsl
pop
mov
rclb
bound
fsubrs
cmp
mov
sbb
das
pop
pop
out
jb
jle
cmp
sub
or
dec
decb
rclb
fldl
adc
cli
ret
mov
dec
stos
push
cwtl
xchg
push
daa
jge
jbe
inc
mov
cmp
pop
xor
enter
sti
clc
mov
dec
sbb
and
mov
mov
scas
out
mov
je
lret
jns
cmp
lcall
daa
ss
push
movsb
add
adc
js
jl
jnp
xchg
sbb
dec
popa
int
es
in
jbe
and
or
push
dec
ret
mov
mov
testl
scas
inc
adc
lcall
lock
xlat
mov
lods
ret
sbb
sarl
arpl
jno
lea
emms
dec
aam
repz
sub
cmp
lcall
mov
sbb
loopne
aas
sbb
sub
fcompl
fistpll
pop
scas
and
jmp
int3
adc
push
inc
mov
into
xor
adc
xchg
ds
sbb
or
decb
subl
mov
pmulhw
inc
or
push
nop
adc
orb
and
sbb
xor
pop
or
cs
xor
pop
dec
xchg
dec
xor
jge
adc
cmp
mov
push
scas
mov
js
inc
push
xor
xadd
into
jge
subb
cmc
outsb
rcrb
mov
cmpsl
repnz
mov
mov
add
and
movsl
mov
sub
call
xchg
outsb
fildl
jmp
fnstcw
out
jecxz
inc
and
pushf
pop
movsb
sbb
pop
or
cmp
push
and
add
cld
cltd
jmp
div
scas
cmp
into
fsubl
mov
shll
cmp
adc
popf
sbb
jns
mov
imul
sbb
clc
jp
jbe
orl
lds
fisttpll
xor
push
pop
sbb
push
out
fwait
dec
icebp
pop
mov
aad
lock
xor
mov
data16
push
loope
in
mov
ret
negl
mov
pop
dec
and
out
repz
rolb
sbb
push
dec
sbb
pop
push
fdivl
std
inc
cmpsb
push
xor
dec
mov
movsb
lea
push
test
sub
mov
shlb
push
push
inc
test
mov
sti
add
fisubrs
mov
mov
jno
pop
sub
xchg
sbb
adc
rcrb
js
mov
jmp
dec
sub
adc
or
outsl
arpl
test
xor
aad
fwait
cld
mov
pop
pop
enter
mov
sahf
std
bound
pop
jb
outsl
lock
or
lcall
sub
je
out
mov
mov
push
jl
sbb
cmpsl
lock
or
xchg
adc
push
into
mov
add
or
cmpsb
sub
iret
loopne
pop
push
iret
lea
dec
stos
xchg
std
ret
pop
adc
mov
cmp
out
scas
clc
inc
lcall
xor
push
sbbb
repz
dec
inc
loop
aam
imul
xchg
es
jns
inc
shlb
and
mov
push
inc
xlat
sbb
jo
pop
inc
mov
data16
test
push
xorl
and
mov
xor
fmull
repnz
mov
into
subb
xchg
add
mov
mov
test
cmp
inc
xorl
push
xor
push
push
and
sbb
dec
stos
pop
rorb
cmp
cmp
pop
mov
pop
fwait
in
dec
repnz
mov
inc
jno
inc
addr16
push
or
cmpsb
in
dec
xchg
sahf
mov
sub
mov
lods
mov
ficoml
imul
mov
cmp
ds
ret
or
jae
lods
sub
mov
lods
popa
push
pop
push
push
and
sbb
xchg
stc
lods
int3
pop
rcr
mov
add
lock
xor
fs
push
adcb
sbbl
adc
mov
xchg
jg
bnd
mov
xor
idiv
pop
add
mov
mov
out
lods
adc
jmp
push
lahf
imul
lret
ja
inc
or
jecxz
aaa
mov
mov
or
lds
xor
mov
inc
imul
loope
push
mov
nop
mov
pop
sbb
jge
test
sti
popf
add
add
jb
xchg
or
insl
fcmovb
jne
nop
fdivrp
lds
jae
addl
in
sub
dec
roll
push
cmp
lret
data16
or
imul
sbb
sbb
fsubr
outsl
pusha
push
insl
push
push
into
push
xchg
add
nop
pop
jns
inc
xchg
xor
je
out
repnz
cltd
fildll
dec
ljmp
push
outsl
mov
mov
and
enter
fimuls
jg
push
inc
xor
pop
js
insb
pop
in
jno
inc
push
sub
lock
shrl
call
inc
stos
push
pop
mov
out
imul
jl
xor
scas
outsb
pop
movsl
icebp
das
pop
stos
pop
pop
dec
push
pop
or
and
and
jmp
sub
repnz
movl
mov
mov
test
mov
or
push
jb
sbb
test
jle
xchg
int3
jecxz
sbb
xchg
mov
xchg
insb
inc
pop
cli
pop
in
ficomps
hlt
sbb
xchg
jno
dec
shrl
test
test
aas
xor
xchg
mov
dec
fstpl
dec
mov
movsl
push
sbb
stos
sbb
mov
daa
pusha
cmp
outsb
imul
loope
sahf
push
hlt
xor
in
or
inc
push
test
fldt
movl
shll
sbb
ss
dec
pop
xor
pop
push
pop
jmp
adc
movsl
lcall
bound
inc
jg
sahf
outsb
lret
bound
mov
inc
addr16
lods
ret
jl
jns
mov
cmp
xchg
inc
inc
ficoml
mov
add
push
sbb
leave
scas
in
xor
imul
nop
jmp
sbb
pop
jecxz
cmpsl
pop
dec
jecxz
das
xorb
in
pop
es
fdivr
aam
insl
orb
inc
lock
or
dec
cwtl
scas
mov
cwtl
or
aaa
movsl
fisttpll
dec
and
aad
lret
mov
xchg
arpl
xor
aaa
dec
ljmp
xchg
adc
leave
cli
xchg
jp
jmp
dec
push
push
mov
les
mov
inc
or
loope,pt
or
cmp
pop
mov
out
pop
mov
dec
or
mov
xchg
test
jp
filds
xor
fsubrs
xchg
pop
ja
sbb
out
mov
mov
cmp
sub
ljmp
pushf
push
xchg
into
jp
in
inc
xor
imul
sbb
inc
sbb
repnz
mov
ljmp
fwait
inc
addb
dec
mov
into
dec
push
mov
xchg
and
stc
mov
add
fcmovb
jecxz
lods
xor
mov
mov
push
mov
mov
rcrl
mov
mov
dec
sbb
sub
cwtl
fisttpll
adc
hlt
inc
and
inc
push
addl
mov
adc
xchg
mov
mov
pushf
mov
pop
fs
lea
xchg
mov
stos
mov
out
pusha
add
outsl
sub
cmp
jbe
fsubs
test
movsb
mov
nop
xor
rol
push
insb
inc
pop
sbb
sub
sbbb
test
sarb
out
fmuls
jge
xor
or
add
push
cli
jp
and
stos
addr16
sti
adc
scas
repnz
leave
mov
in
dec
push
icebp
aad
shlb
and
insl
and
xor
test
xor
push
pop
jmp
mov
push
pop
xorb
cmpsl
add
dec
mov
pop
dec
gs
xchg
sub
mov
insl
add
xor
mov
xor
push
stos
inc
imulb
lds
jb
sti
mov
pop
orl
push
adc
dec
add
test
mov
dec
or
fs
mov
imul
or
lret
shl
xlat
add
jb
cmp
jle
out
and
mov
fcoml
fnstenv
mov
jne
push
fisubrl
cmp
roll
adc
sbb
lods
xchg
enter
sti
mov
sahf
xor
or
sarl
into
aad
push
pop
push
lds
sub
mov
arpl
pop
loopne
dec
jl
js
inc
jl
cmp
xor
mov
mov
push
jns
mov
sbb
push
xchg
mov
jecxz
fld1
es
xor
mov
shlb
dec
loope
lret
pop
and
adc
and
adc
in
cwtl
inc
xchg
je
sbb
xchg
cli
mov
xor
aas
pop
clc
adc
mov
pusha
rcrb
mov
push
int
cli
cmp
and
jg
add
int
sub
cltd
xchg
mov
xor
xchg
add
decb
lods
sti
mov
daa
adc
mov
imul
xchg
pop
clc
lods
cmc
add
lret
xchg
out
out
leave
pop
xchg
iret
sub
test
xchg
add
or
stos
shll
mov
in
mov
add
xchg
mov
xor
clc
mov
out
popf
inc
popf
add
sub
out
inc
push
inc
push
mov
and
fadds
dec
mov
lock
and
pop
js
sbb
std
pop
hlt
pusha
add
lea
sub
xor
dec
scas
mov
cmp
mov
in
dec
mov
in
icebp
pop
stos
out
call
pop
insb
test
mov
xor
nop
insl
pop
sub
pop
pusha
xor
stos
add
jge
mov
add
dec
pop
scas
fisubl
sar
sub
flds
cwtl
mov
mov
test
pop
sbb
bound
inc
xchg
lcall
sbb
popa
dec
mov
int
push
repz
pop
and
sub
ss
pop
cmp
add
and
jg
aas
andb
mov
ficomps
or
mov
outsl
dec
sti
pusha
jns
cmp
aas
pushf
mov
and
popf
jle
dec
imul
mov
or
sub
jns
mov
and
jle
pop
loopne
push
pushf
adc
jnp
fs
xchg
dec
repnz
add
jmp
mov
push
adc
sub
xchg
cmpsl
xlat
iret
shll
push
push
test
push
pop
std
sub
add
hlt
std
mov
add
movsb
lahf
xchg
sub
ljmp
mov
enter
dec
cmp
xchg
inc
sarb
or
add
xchg
inc
adc
mov
mov
push
mov
testl
lahf
mov
or
xchg
inc
je
cmc
cmpsb
jecxz
push
je
sub
jno
loopne
repnz
popa
out
mov
sti
mov
adc
jecxz
inc
mov
mov
mov
sbb
test
aam
test
ds
daa
cmp
out
insb
hlt
pop
mov
xor
ret
rcrl
cmp
fadds
lock
fs
mov
cmp
testb
bound
sbb
push
push
repz
mov
and
push
mov
scas
cmc
es
fildll
xlat
xchg
xor
cmp
es
jl
rcl
jecxz
fidivrl
arpl
mov
das
orl
pop
dec
leave
or
and
nop
pop
sahf
aam
mov
movsl
ja
sahf
gs
xor
sub
sub
ret
add
lcall
jbe
sbb
loopne
push
push
test
and
fsubl
push
jne
loope
xor
jmp
cmp
out
jg
imull
xor
mov
sbb
xchg
xchg
lods
cmpsb
dec
push
inc
xor
jno
into
notb
stos
pop
mov
stos
mov
ja
ljmp
or
sar
dec
out
push
push
insl
shlb
sahf
xchg
jno
or
adc
xor
ljmp
mov
movsb
dec
outsb
jne
or
repnz
mov
add
mov
lret
mov
aaa
ficompl
mov
mov
idivl
fnstenv
pop
push
popa
cltd
clc
lahf
xlat
push
lock
daa
dec
sub
and
pop
loope
or
jns
jb
pop
sahf
gs
or
add
cwtl
push
outsl
leave
rorl
pop
insl
xchg
mov
fwait
cmp
cmpsl
ljmp
pop
negb
xchg
dec
sbb
cmp
xor
sahf
or
cltd
or
daa
jmp
idivl
adc
sub
popa
loope
mov
cmc
fsubrs
mov
mov
movl
mov
test
scas
movsb
jl
stos
out
cmp
or
inc
push
test
xchg
sub
outsl
dec
cmp
pushf
arpl
cli
inc
jecxz
add
cli
loope
push
mov
push
cmc
push
or
inc
lret
test
lret
jmp
jmp
mov
in
push
pushf
add
fcmovnb
pop
xchg
repz
mov
inc
mov
sub
clc
mov
and
mov
stos
movsl
fistpl
pop
push
mov
and
sub
or
mov
pop
stc
js
mov
das
mov
les
push
jno
ret
data16
arpl
ret
pop
dec
mov
dec
jle
movsb
pop
mov
sub
aaa
push
mov
in
int3
je
into
rorb
jo
mov
mov
push
cmp
lods
mov
xchg
pop
imul
inc
mov
add
dec
punpckhwd
lds
or
adcb
addb
cmp
iret
or
out
mov
add
fstl
mov
pop
les
adc
sahf
jbe
jo
enter
jb
add
xchg
or
dec
xor
xchg
pop
mull
adc
ret
inc
cltd
into
xchg
mov
aas
xor
inc
cs
loope,pn
in
dec
jne
into
sub
jnp
lods
rcrl
push
or
aam
sbb
dec
xchg
sub
cmp
rclb
cltd
xchg
xchg
arpl
in
movsl
sbb
fidivs
clc
push
out
cmp
push
out
test
dec
and
jg
int3
ret
jne
mov
scas
dec
jae
inc
out
jae
adc
arpl
jae
fistpl
test
jg
dec
sbb
mov
mov
lret
in
fdivs
rolb
int
fcmovnbe
ja
aad
or
out
xchg
pop
leave
cmp
jns
mov
jnp
std
fistps
pop
add
int3
adc
lock
fcmovnbe
fnsave
sub
xchg
mov
ds
rorb
jle
loope
jno
sbb
cwtl
jge
mov
cmp
aas
out
inc
jae
in
incl
pop
lods
mov
mov
lods
mov
mov
loope
sbb
repz
loopne
sub
loopne
jnp
test
into
rorl
lods
rorl
movsb
icebp
js
push
into
popa
icebp
insb
add
mov
xchg
mov
aam
sahf
pop
fistpl
sbb
jp
lahf
mov
xor
adc
sbb
dec
cmp
hlt
dec
xchg
and
lods
test
ds
lcall
pop
push
js
out
sarb
fistpll
cmp
mov
mov
sbb
pushf
mov
push
jae
mov
mov
xchg
cld
adc
out
dec
inc
xrelease
sbb
aas
adc
fucompp
pop
insl
jmp
cwtl
ljmp
shrl
call
int3
mov
loopne
push
mov
fiaddl
cvtpi2ps
sub
stos
mov
mov
inc
lret
daa
xchg
mov
shrb
or
xchg
sub
movsl
mov
ljmp
pop
mov
add
imul
mov
lcall
sarl
inc
fcoms
lret
mov
or
adc
repnz
mov
pop
scas
rolb
mov
fiaddl
mov
or
ffree
pop
cmp
adc
aas
sbbb
inc
dec
xor
xchg
pop
jl
add
mov
xor
sub
push
adcl
mov
pop
jae
stos
xchg
pop
jno
sub
add
mov
xor
pop
mov
rcrl
cmpsb
test
pushf
sub
inc
lods
mov
loope
push
xor
sbb
and
push
pop
mov
lds
dec
pop
push
add
mov
xchg
adc
je
mov
sub
mov
cmc
or
inc
hlt
pusha
cmpsb
jne
andl
ret
xchg
out
sti
jo
cld
lods
out
test
xchg
sbb
repz
int3
loope,pt
leave
out
in
inc
outsb
shll
fwait
sub
cltd
xchg
sti
pop
fisttpll
iret
adc
ficoml
aad
mov
adc
scas
outsb
jge
dec
sub
pop
xlat
jmp
stos
inc
aam
js
loop
int3
lahf
cmp
outsb
dec
out
mov
pop
repnz
das
sar
leave
mov
jmp
in
add
jmp
pop
mov
pusha
jg
adc
mov
xor
popa
cmp
mov
ja
movsl
lret
jl
repz
jo
dec
ja
jne
imul
and
shr
sbb
rcll
int
mov
jnp
in
jo
scas
in
popa
jge
sub
xor
hlt
and
or
rcrl
and
adc
xchg
cmc
pop
ds
push
out
ret
cwtl
sbb
pop
add
lods
arpl
push
orl
xlat
xorb
and
push
mov
sahf
negl
movsl
pop
clc
jp
fnsave
push
jb
cli
mov
pop
xchg
sub
test
rcrb
adc
sub
and
sub
leave
pop
mov
sbb
roll
in
pop
pusha
xor
push
cmp
scas
ret
mov
movsb
push
cmpsl
fwait
ret
mov
fadds
or
or
lods
jae
cmp
jno
lcall
mov
inc
pushf
aaa
clc
sub
dec
inc
mov
imul
sbb
adc
cmpsl
fcmovbe
lret
add
jecxz
mul
add
cld
push
inc
stc
cmc
pop
fsub
aad
hlt
sub
xor
mov
lret
pop
push
and
leave
push
push
cmpsl
hlt
test
dec
pop
andb
push
and
sub
sbb
shll
mov
pop
movl
and
leave
adc
or
mov
out
int
sti
xchg
outsl
xor
and
aaa
adc
ja
out
pop
or
nop
mov
push
dec
inc
xchg
mov
jbe
mov
cmc
outsl
xor
sbb
out
jns
outsl
cmp
adc
rcr
add
shrl
test
outsl
dec
fcmovne
adcl
mov
pusha
pushl
and
mov
jecxz
add
mov
or
push
push
addr16
xchg
cltd
sub
mov
repz
mov
push
repz
fimuls
add
lock
cmp
push
cli
clc
lds
push
mov
ret
inc
or
add
lds
fs
inc
cmp
sti
and
xchg
and
outsb
jb
mov
subl
ja
enter
movsb
cli
mov
adc
in
mov
xchg
pop
and
cmp
test
mov
sbb
jb
leave
adc
lods
testb
add
mov
sarb
rorb
mov
push
loop
nop
movsl
in
add
ret
addw
rcl
xchg
subl
fimuls
out
adc
pop
ljmp
xchg
add
popa
movsb
jmp
push
cmp
xor
sub
ss
add
lea
aaa
imul
add
mov
xor
jno
inc
pop
cli
adc
dec
push
add
pop
pushf
ds
xor
shrb
mov
test
add
stos
dec
inc
inc
cltd
push
push
dec
adcl
sbb
mov
pop
mov
setae
call
adc
jge
popl
hlt
pop
mov
repnz
xchg
lret
int
inc
stos
mov
pop
test
mov
push
call
test
xor
shll
pop
leave
jnp
ficoml
pop
sbb
xchg
sub
fcomps
idiv
or
mov
addr16
xor
lods
repnz
mov
push
shrl
jmp
push
sti
mov
cmp
xor
adc
ja
stc
out
out
stc
pop
scas
cmp
frstor
and
inc
mov
xor
cmpsb
cmc
repnz
cltd
leave
push
stos
adc
mov
lock
aaa
psraw
mov
sub
data16
aam
lea
sub
loopne
in
inc
jns
movsb
adc
daa
inc
loop
test
aad
cmp
cmpsb
sahf
lock
idivl
fdivs
and
test
xor
xorb
sbb
sbb
xlat
inc
mov
mov
adc
inc
adc
jb
push
cmc
mov
and
shlb
pop
lret
inc
lahf
loopne
jnp
adc
in
dec
jo
mov
loope
mov
push
aam
xchg
hlt
je
ror
dec
imul
sub
jb
std
js
jne
movsb
cwtl
mov
ret
jne
and
pushf
popa
push
addr16
xor
aad
or
or
clc
movsl
dec
xchg
repz
xchg
mov
push
xchg
sbb
sbb
mov
pop
aam
ficomps
xor
incl
mov
jg
pop
cmp
jle
inc
outsb
stos
sbb
and
into
lret
xlat
out
dec
test
sub
add
test
cmpsb
xlat
aaa
sbb
cltd
in
mov
inc
gs
iret
sbb
mov
gs
fistpll
stos
cmp
lds
mov
aad
out
js
bound
test
lods
movsb
sub
imul
sarb
or
into
mov
push
dec
jns
xor
je
adc
or
les
cmp
dec
adc
sub
sbb
pop
repnz
sub
cmp
mov
sub
xorl
mov
mov
mov
or
mov
mov
and
push
insb
imul
aam
xchg
js
in
mov
cli
not
and
mov
into
mov
popf
bound
or
jnp
jp
fdiv
and
in
mov
mov
std
cmp
lods
jae
jle
add
mov
add
imul
xchg
xor
sub
sbbb
cld
push
out
imul
outsl
mov
int3
rcr
imul
mov
pop
mov
loope
or
cli
xor
cmpsl
test
sahf
inc
mov
xchg
sub
mov
or
push
mov
icebp
shlb
pop
fwait
sub
jp
xor
test
or
out
cmp
imul
cwtl
aad
and
xchg
add
negb
sub
inc
jns
mov
sbb
dec
sbb
xchg
inc
enter
idivl
xchg
push
int
inc
xchg
es
jbe
ds
fsts
mov
sub
faddl
pop
inc
add
mov
ja
icebp
or
inc
mov
sbb
push
dec
popa
and
cmp
ljmp
sbb
cmp
loope
dec
js
test
xchg
xchg
imul
sbb
cmp
dec
mov
mov
add
aas
in
aas
fs
mov
cmpb
idivl
lods
mov
inc
in
xlat
mov
adc
loop
scas
push
xchg
jg
sbb
pop
popa
dec
ret
out
aam
xchg
fstps
idivl
imul
cld
inc
cmp
daa
sbb
pop
std
fs
and
nop
cmpsl
das
imul
neg
ljmp
lock
and
adc
leave
fs
fsubs
push
inc
out
push
je
aas
loopne
mov
pop
fidivs
dec
or
lods
xor
cmp
cmp
push
xor
iret
orb
jl
shll
imulb
xchg
leave
add
scas
nop
orps
ret
pop
jae
lds
pusha
cmpsb
mov
loop
pop
xchg
mov
andb
das
loopne
in
jle
pop
fwait
add
mov
mov
adc
push
push
loop
sub
jae
sarl
xchg
dec
and
or
dec
or
in
xchg
mov
jno
ret
or
aad
das
rcl
inc
push
mov
nop
mov
adc
xchg
adc
or
imul
js
pop
xchg
lret
adc
or
cmp
xor
push
aas
outsb
les
repz
mov
add
inc
jmp
test
cmpsl
pop
testb
sbb
ljmp
add
jmp
pusha
mov
rcll
pop
sbb
lret
mov
inc
leave
pop
incb
add
push
lea
test
or
and
sub
dec
cmpsb
dec
add
fcomps
mov
cld
pusha
outsl
lods
repnz
mov
ja
xor
pop
mov
inc
xchg
mov
inc
mov
subl
inc
jle
rcr
xchg
popa
jle
add
add
stos
pop
movsl
fwait
push
mov
testb
nop
jns
push
xor
rep
divl
jno
popa
jecxz
push
push
mov
lods
call
aad
insb
int3
dec
mov
sub
and
jl
and
pop
dec
test
cmpsb
inc
cmp
stc
loopne
dec
dec
dec
or
shrb
xchg
into
fisubrl
ficomps
sbb
pop
push
add
push
mov
movsl
out
pop
sub
pop
sub
rcl
jg
cmp
or
cwtl
test
xor
jnp
xchg
ja
out
test
sub
repnz
dec
movsl
xchg
sub
xchg
lahf
in
out
mov
xor
inc
sub
pop
gs
and
imul
jbe
out
cmpsb
bound
or
jp
out
dec
fsubp
mov
cmp
mov
je
lods
outsl
inc
mov
or
mov
test
jg
jp
daa
add
jbe,pt
dec
cmp
jno
test
cld
jbe
gs
mov
ret
loopne
fisttpll
vpunpckldq
repnz
jp
scas
repz
add
inc
pop
pop
jmp
je
inc
pop
adc
dec
dec
sub
or
and
out
mov
pop
mov
sub
imul
jo
adc
jle
fldt
xchg
xor
dec
pop
mov
popa
xchg
lret
mov
push
xor
loopne
xor
adc
mov
into
popa
and
scas
dec
mov
sahf
pusha
fimull
stos
jl
adc
bound
out
adc
lock
sub
cmpsl
and
push
and
test
mov
sub
sbb
repnz
cltd
push
cmc
out
hlt
inc
repz
in
jno
add
xchg
sbb
inc
lds
and
cmp
and
pop
lods
xor
dec
add
mov
mov
cs
in
add
sub
int
lahf
mov
sub
sub
add
push
imul
icebp
sub
out
mov
stos
enter
repz
dec
fildll
ljmp
int
mov
ret
xchg
cmp
adc
or
adc
jg
add
or
out
push
push
ja
ja
fidivrl
stc
or
sahf
scas
out
adc
xchg
es
cmp
lret
clc
pop
jl
loopne
dec
loopne
and
sbb
jno
dec
fwait
add
into
sbb
aaa
dec
mov
loope
jbe
lds
inc
imull
ds
daa
add
es
movsl
out
mov
mov
and
xor
das
js
imul
inc
xor
cmovns
push
jno
push
mov
fdivrs
cmp
in
addl
popf
adc
cs
fidivs
hlt
js
movb
je
nop
mov
lret
and
inc
mov
lock
fs
adc
sub
into
jge
mov
je
jg
and
jmp
add
call
es
mov
mov
sbb
lret
push
daa
adc
rcll
in
cmc
rorl
repz
xchg
cmp
enter
jge
in
mov
mov
stc
cmpsb
js
mov
push
pop
in
mov
imul
lcall
mov
sahf
hlt
bound
add
sbb
fiadds
into
pop
lcall
add
push
jb
mov
push
adc
fs
inc
cmp
push
stos
popf
sub
add
imul
inc
lret
push
or
idivl
mov
fs
into
or
mov
repnz
cmp
imul
push
dec
jne
cli
ror
cmpsb
dec
out
and
sbb
test
mov
push
push
sbb
push
inc
loope
dec
icebp
insb
inc
jbe
pop
xchg
add
xchg
insl
sbb
cmp
xchg
stos
sub
inc
fmul
mov
dec
out
and
and
sahf
loope
sub
arpl
popf
roll
es
icebp
into
mov
adc
cmp
dec
xor
fwait
and
test
xchg
dec
xchg
repnz
popa
in
js
pop
push
mov
out
mov
sub
loopne
icebp
scas
xor
or
pushw
mov
inc
clc
mov
push
stos
inc
enter
sub
ss
idivl
mov
imul
addr16
pop
roll
imul
or
jno
mov
dec
ja
jl
lock
add
std
sahf
cmp
and
push
stc
mov
mov
cmp
pop
sbb
dec
pop
and
mov
hlt
insb
sti
mov
mov
mov
enter
push
stc
mov
in
cmp
add
xchg
xchg
push
dec
or
push
and
rclb
adc
xchg
fildll
sub
pop
pop
and
imul
aas
jp
lods
mov
lds
inc
adc
insb
loopne
pop
or
push
pusha
jge
pop
adc
outsl
jmp
sbb
xlat
ficomps
aad
cs
xor
xchg
pop
inc
xchg
adc
xor
ja
sbb
push
and
mov
jge
in
shll
push
js
mov
lods
cmc
imul
inc
lods
xchg
iret
shrl
dec
add
imull
pop
lcall
negl
test
insl
add
lcall
mov
test
jbe
add
jne
xchg
or
sub
xchg
jmp
imul
dec
mov
jmp
fcmovnb
add
mov
xor
dec
inc
cmc
arpl
xor
and
cmp
lret
xchg
jno
pop
xor
popa
iret
sub
mov
data16
das
arpl
and
movsl
inc
push
push
adc
mov
pop
inc
cmpsl
push
sbb
arpl
neg
icebp
cmp
fs
sub
and
rcr
test
mov
pop
fisttpll
xchg
je
jb
rcrl
inc
fisubl
push
and
sbb
sub
sbb
ja
xchg
jg
xchg
out
movsl
fmul
outsl
xlat
jne
mov
push
or
mov
sbb
int3
inc
icebp
int
xor
xor
sbb
imul
mov
add
subl
jg
sbbb
gs
sub
adc
jb
jnp
sub
add
push
orb
add
inc
cmpsb
shlb
cmp
sahf
adc
dec
sarl
dec
mov
and
insl
add
test
mov
leave
rcll
bound
inc
dec
add
ret
jnp
pop
ds
push
sahf
inc
cmpsb
mov
push
aaa
jecxz
dec
in
popa
jge
push
mov
add
lock
imul
cmp
xchg
ffree
sbb
cli
pushf
ret
sbbb
cltd
sbb
in
repnz
jbe
dec
popf
sub
mov
stos
fists
xchg
mov
xor
mov
aad
movsb
adc
leave
scas
mov
adc
jns
mov
cli
insb
xchg
imul
std
cmpsb
adc
mov
les
cli
cmpsl
pushf
mov
xchg
jmp
das
sbb
icebp
mov
pop
push
ss
xchg
cmpsl
mov
icebp
ljmp
movsb
push
movsb
sub
jne
test
xor
enter
mov
xor
cmp
sbb
int
test
jmp
mov
repz
and
dec
roll
roll
fbld
int3
inc
outsl
sarl
lods
addr16
clc
mov
test
loopne
pop
repz
mov
daa
xchg
fwait
shl
outsl
mov
fs
sbb
call
pop
call
xchg
mov
shrb
repnz
cmp
xor
scas
add
cmpsl
sti
cmp
sbb
daa
xchg
fstl
jmp
call
imull
ja
push
push
loopne
int
cli
pop
jne
push
dec
dec
mov
xorb
fbld
pop
daa
push
je
adc
mov
jmp
mov
or
std
jnp
sbb
xor
push
cmp
loop
andl
inc
aaa
mov
ljmp
faddl
in
ret
dec
sub
adc
loop
enter
in
cltd
test
mov
mov
fsubrl
scas
push
popl
add
and
loope
stos
mov
jmp
adc
mov
and
add
push
pop
sbb
dec
xlat
mov
sbb
cld
xchg
in
mov
push
pop
outsb
icebp
xchg
in
push
mov
bound
cmp
xchg
xchg
orb
cmp
inc
pop
pop
push
call
sti
movsb
jmp
rcrl
sub
fldenv
mov
cmp
ss
nop
data16
jmp
push
jb
xor
adc
xchg
push
jle
cmp
mov
insl
sub
ficomps
hlt
add
pushf
cmp
jo
mov
push
pop
push
out
add
in
push
xchg
jg,pt
add
cli
dec
faddl
into
mov
pop
dec
sbb
lea
test
push
push
mov
xchg
daa
sbb
mov
sbb
pop
das
ljmp
push
test
jecxz
lds
adc
push
std
jg
sub
xchg
mov
xchg
data16
clc
mov
lds
push
imul
inc
sub
and
nop
push
enter
xchg
and
jno
test
mov
mov
add
and
aam
daa
dec
cmp
mov
and
outsb
mov
dec
outsl
pop
cli
das
loopne
lock
dec
dec
mov
push
hlt
cmc
mov
repnz
xchg
std
mov
subl
lcall
inc
repnz
cltd
imul
xchg
push
jne
pop
xor
push
fsubs
ret
inc
test
jns
in
cmp
sub
je
sub
xchg
hlt
mov
int
jle
push
push
mov
jae
repz
cmp
jb
cli
mov
xchg
fldenv
loope
push
push
fnstcw
pop
push
jnp
or
or
xchg
xchg
xor
lcall
iret
std
aam
and
push
pop
in
jl
jp
aam
add
inc
push
mov
gs
and
cmpsb
test
mov
repz
and
lock
ds
sub
outsb
mov
inc
mov
add
jg
pop
jbe
xor
scas
bound
push
sbb
lcall
jecxz
jp
bound
lret
fdivrl
dec
mov
pusha
call
dec
dec
push
std
dec
shll
cltd
sarl
out
in
sub
mov
ljmp
jae
or
push
sub
sub
jne
lods
sbb
nop
fildll
jbe
or
mov
and
inc
test
shlb
xchg
mov
arpl
adc
xor
pop
aam
test
jo
aas
add
add
add
shrl
mov
and
add
mov
call
mov
movsl
daa
xchg
mov
dec
mov
push
ds
out
sub
subl
movsl
lret
pusha
mov
xchg
xchg
fadd
jmp
clc
shrl
rcrl
or
inc
jge
in
inc
insl
clc
test
mov
cli
outsl
imul
pop
pop
lahf
inc
or
lea
fwait
and
sbb
xchg
push
ljmp
jge
mov
xor
cld
cli
and
scas
dec
leave
popa
hlt
and
and
cwtl
cmp
sbb
popf
xor
pop
and
push
or
jnp
sahf
mov
jo
sbb
jno
das
mov
jle
mov
push
repz
and
out
mov
iret
lea
sub
pop
dec
inc
inc
imul
outsl
dec
xor
pop
ss
inc
jae
pop
xchg
add
or
adc
shll
add
dec
cmp
std
dec
push
pop
cld
push
jno
add
cli
shll
popa
sbb
daa
ja
popl
mov
mov
and
out
fistpl
sub
inc
xchg
cmp
xor
push
add
lods
ljmp
adc
sbb
out
insl
cmc
jno
pop
jmp
outsl
ja
inc
push
ss
mov
fisttpll
push
fidivl
xor
jne
cmp
adc
or
jp
xchg
cmp
add
dec
pop
pop
aad
ret
cwtl
jmp
inc
cld
and
mov
lcall
mov
inc
in
push
decl
jnp
es
addr16
loop
jnp
sbb
sbb
je
jle
mov
ds
std
inc
aaa
leave
pop
sti
aas
int
jae
out
jl
sahf
rorl
adc
lret
data16
inc
jle
pop
mov
add
mov
and
je
fndisi(8087
adc
xlat
ja
and
inc
mov
adc
into
or
mov
jecxz
dec
xor
sbb
jae
mov
sbb
sbb
cmp
shlb
je
adc
call
stc
inc
fs
pop
inc
inc
cli
scas
xchg
ja
jne
push
stos
data16
clc
or
or
mov
and
je
movl
out
sbb
js
gs
dec
out
mov
xor
adc
fdivrs
lea
inc
nop
out
inc
ret
je
mov
jae
cmc
pop
aam
cmpsl
call
or
or
lock
inc
aas
dec
cmpl
pop
jo
movsl
cwtl
fiaddl
pusha
leave
mov
in
rolb
lahf
outsb
and
mov
rcrb
xchg
lods
stc
or
ret
mov
dec
push
negb
mov
lods
pop
scas
gs
push
test
adc
jb
mov
inc
push
aam
fildl
es
push
pop
int
ficoms
fwait
mov
jp
xchg
test
push
loop
aas
push
outsb
xor
mov
sub
push
cs
aam
testb
or
pop
sarb
xor
inc
sbb
push
lods
out
push
test
cmp
mov
dec
leavew
jns
adc
and
sarl
mov
push
sahf
pop
cmp
and
adc
sbb
shll
jnp
sarw
cmp
mov
in
adc
inc
xor
rep
or
sbb
dec
add
sti
dec
aas
sbb
mov
fmuls
pop
scas
mov
pop
ret
jnp
xlat
lods
dec
arpl
nop
adc
dec
xor
leave
mov
sbb
int3
in
and
or
sarb
data16
icebp
stc
fwait
es
pop
js
push
and
or
out
pop
sub
out
xchg
mov
push
xchg
jp
inc
pusha
aad
iret
mov
xchg
and
repz
bound
mov
pop
add
push
mov
or
pop
inc
sbb
hlt
or
jl
fdiv
dec
lea
mov
lret
jge
push
lret
je
dec
rcll
push
inc
push
lock
jno
int3
fistpll
xlat
sub
std
mov
xchg
pop
lahf
push
les
sbb
bnd
add
mov
pop
or
xchg
arpl
mov
popa
clc
or
inc
popa
mov
xor
cmp
mov
mov
mov
mov
push
xchg
fs
dec
sbb
movsl
loopne
add
cld
jno
push
lcall
mov
sub
push
fwait
sbb
iret
ret
divl
mov
jg
insl
push
pop
xor
loop
lret
imul
jl
lock
xchg
sbb
ljmp
imul
jp
xor
ja
sub
mov
sarl
push
fldenv
out
addr16
stos
xor
mov
clc
imul
sub
sbb
xchg
ljmp
jne
jb
test
into
out
sti
sub
inc
ret
jns
jns
sub
mov
int
fisubl
mov
dec
in
cmpsl
andb
jecxz
inc
les
bswap
adc
out
out
pop
pop
out
sub
add
add
les
ret
loope
pop
xlat
or
and
xor
daa
xchg
loop
cld
jne
cmp
loop
mov
js
movsb
mov
adc
stos
out
repz
int
sbb
dec
jb
mov
xor
jmp
outsl
mov
push
push
movsb
xor
push
pop
inc
cmp
popa
stos
clc
outsl
testb
mov
sub
pop
and
sub
adc
mov
movsl
cmp
arpl
popa
xor
mov
and
xor
loope
ficompl
aam
fucom
cmp
movsl
cltd
xchg
ret
mov
repz
jb,pn
gs
cmpsl
or
out
sbb
icebp
xorb
jne
or
jmp
push
lds
jg
and
out
inc
lea
int3
xor
movb
adc
mull
xchg
lds
pop
in
daa
movsb
enter
cmp
push
sbb
mov
rorb
hlt
pop
addr16
cmpsl
lea
xchg
je
jp
sub
lret
lret
fsubrl
pushl
push
lock
ds
cmpsl
add
jne
mov
pusha
lahf
xor
je
out
test
lret
add
inc
inc
dec
clc
push
and
push
sub
xchg
push
adc
es
sbb
dec
mov
mov
rcll
adc
inc
cli
clc
adc
imul
xor
cwtl
inc
jo
xchg
push
fs
outsl
jle
jne
cmp
mov
fnstcw
cmpsb
xchg
shrb
sub
jne
arpl
mov
ja
arpl
addr16
push
xchg
out
pop
xchg
sbb
cmc
clc
inc
test
xchg
into
xor
stos
inc
out
push
fdiv
jecxz
sub
into
dec
jmp
ds
adc
cltd
mov
inc
test
lds
mov
adc
cmp
mov
push
bound
pop
pop
xor
cmc
xchg
int3
popa
cmp
sbb
ljmp
mov
sbbb
fsubrs
es
xor
cmc
mov
jbe
daa
stos
xchg
inc
leave
jno
push
or
out
mov
enter
ljmp
xor
cltd
inc
test
dec
es
cltd
mov
xor
push
in
lahf
cli
push
movsb
cli
xlat
jecxz
mov
pop
sarl
or
into
cmpb
xor
daa
and
push
cmpsb
mov
movsl
add
mov
xchg
xchg
jbe
daa
mov
jno
popf
pop
or
cltd
jno
pop
sub
insl
out
lret
xchg
add
xchg
cmp
or
mov
js
jb
cmp
jbe
pop
fcompl
jnp
sbb
scas
xchg
jp
je
mov
jle
nop
fbstp
fidivs
mov
xchg
ljmp
pop
push
pusha
lcall
and
stc
arpl
jmp
jno
cld
pusha
hlt
call
nop
lock
pop
add
sbb
ss
jbe
bound
pop
clc
cmp
mov
in
les
mov
xchg
hlt
cs
out
add
rorb
aas
out
dec
and
add
push
push
push
icebp
push
mov
mov
mov
pop
test
sbb
fwait
push
lods
stos
rol
dec
xchg
mov
cmp
enter
mov
sbb
in
inc
aas
push
pushf
jne
roll
setbe
stos
jg
or
and
lret
test
dec
inc
iret
movsl
rorl
mov
movsb
das
mov
inc
leave
stos
jp
push
lods
push
sti
dec
pop
or
jb
in
sub
test
jns
cmp
insl
add
pop
and
dec
push
push
cmpsb
imul
bound
cmp
push
in
fildll
test
int3
adc
mov
push
insb
cmpsl
mov
mov
stos
cmpsl
scas
pop
push
into
adc
insl
imul
stos
fsubr
ljmp
fsubl
scas
mov
fimuls
push
dec
cs
cli
outsl
cmp
mov
cli
int
add
pop
xchg
adc
sbb
mov
outsb
fdivrs
sub
mov
pop
xor
ja
push
push
outsl
xor
repnz
or
mov
cmpxchg
push
popa
or
push
sub
push
jb
mov
into
xchg
jae
push
xor
inc
add
popa
iret
cltd
pop
imul
test
mul
xchg
out
adc
bound
adc
daa
cmc
das
adc
mov
sub
and
sub
std
repnz
cmp
xor
sub
out
mov
enter
adc
xchg
add
ret
sbb
aad
sub
sbb
es
or
popf
lret
mov
mov
test
aad
cmp
imul
cmpsl
or
ret
or
fists
xor
sub
push
xor
dec
adc
sub
mov
or
jmp
dec
out
jecxz
adcl
mov
push
out
cmp
cli
stos
xchg
sub
jg
fdivrs
jge
shlb
mov
inc
jns
mov
push
bound
adcb
add
jmp
add
es
cmpsl
sub
aas
sti
lcall
adc
jo
mov
xchg
mov
and
push
in
xchg
icebp
push
or
shrb
push
mov
mov
adc
xchg
int3
dec
xor
push
insb
ss
lcall
sbb
push
sub
je
imul
lahf
jo
cmpsl
xchg
lods
out
ss
loope
testl
mov
cmp
xor
sub
repz
cmp
add
jp
xor
mov
fwait
out
cmp
clc
mov
jb
push
js
jns
adc
cmp
stos
lods
ret
cld
cmp
int
out
sub
pusha
fsubrl
fs
xor
mov
sbb
mov
push
jne
pop
sarl
mov
jmp
sub
cmp
jl
nop
loop
pop
loope
cmp
hlt
movsb
shl
clc
pop
dec
pop
les
in
imul
repz
sub
das
jno
push
adc
out
mov
mov
popf
mov
inc
cmp
int
jae
mov
dec
addl
mov
xchg
imul
daa
xchg
rcrb
pmullw
popa
ret
add
push
fnstcw
push
movsb
add
cmp
loop
sbb
mov
call
bound
test
sub
add
call
cmpsb
fildll
nop
jns
lods
les
rcrb
mov
add
pop
iret
mov
mov
jnp
pop
iret
sahf
pop
lahf
sub
andl
xchg
jmp
xlat
movsb
or
js,pt
gs
daa
and
mov
je
sub
je
xor
xor
outsl
addr16
xor
loop
inc
xchg
fstpl
mov
rolb
pop
or
in
test
mov
sbb
cmp
sbb
pop
cmp
inc
push
push
inc
pusha
sub
push
xor
pop
shrl
sub
pop
dec
icebp
and
cltd
into
cmpsl
in
pushf
push
ds
lods
cmp
dec
imul
pop
inc
mov
in
pop
les
ret
call
add
inc
adc
mov
fbstp
pop
dec
or
stc
jae
addr16
mov
rorb
jnp
xor
icebp
xchg
cwtl
pushf
fcmovnu
lods
mov
mov
add
jae
xchg
jg
sbb
cmp
dec
daa
aam
mov
mov
adc
mov
stc
fs
xlat
iret
pop
je
cli
mov
push
mov
daa
lcall
loope
inc
lea
movsb
pop
mulb
wrmsr
test
xchg
test
xlat
lea
sbb
ja
pop
es
mov
fildl
or
outsl
dec
testb
and
fistpll
pop
insb
adc
sub
loopne
insb
or
ret
ss
jne
jo
aas
popa
scas
out
ffreep
rcrl
lods
negl
in
in
into
push
adc
pop
aad
hlt
push
rcrb
jmp
adc
jmp
xor
xchg
lds
iret
cld
sbb
fcmovnu
aad
push
adc
or
int3
arpl
cmpsl
jnp
inc
mov
sub
out
fs
pop
fstps
push
jno
sub
test
xchg
cmpsl
pop
adc
andb
ljmp
and
aam
mov
outsl
cmp
cmp
pop
dec
xlat
cld
imul
daa
jp
add
cmp
push
inc
push
lds
int
lds
mov
cmp
cli
jae
leave
mov
jno
cld
xor
lods
faddl
or
rorb
stos
addr16
adc
shrl
pop
pusha
jnp
fisttpl
cmpsl
jle
mov
push
mov
jle
inc
xchg
and
adc
enter
les
xor
popa
outsl
inc
push
stos
pop
aad
dec
lret
xchg
shl
in
push
cmp
repnz
cmp
sbb
and
popf
mov
pop
sbb
stos
push
js
imul
fbstp
dec
sub
xchg
pop
andb
push
sub
mov
jge
insl
shrd
test
mov
inc
jecxz
mov
test
push
shlb
cli
jge
xchg
dec
pop
js
aaa
dec
add
mov
sarb
outsl
mov
mov
push
adc
roll
sub
jmp
xchg
cli
push
or
mov
movsl
xchg
push
push
xchg
jno
xchg
sub
pushf
xchg
add
add
data16
or
dec
jg
ja
les
or
mov
jno
js
lock
inc
aam
mov
xor
lret
cmpsl
int
adc
mov
pop
push
pop
lret
or
out
add
xor
xorb
jo
repz
outsl
imul
xor
lret
or
int
insl
dec
xchg
mov
mov
pop
fldenv
leave
mov
jmp
jbe
xor
adc
xorb
mull
sbbl
mov
movsb
mov
push
fsub
lods
repnz
fisubl
mov
pop
ljmp
xor
xor
pop
inc
out
sbb
dec
pop
cwtl
add
xor
das
loope
dec
sbb
dec
addb
aas
std
js
and
and
rorb
fsubrl
dec
mov
xchg
fs
push
std
out
fldt
inc
repnz
sbb
cmp
add
sti
fidivs
mov
push
cmpsb
and
adc
ljmp
cmpsb
jecxz
ds
push
leave
and
outsb
push
jg
mov
rcr
mov
lods
divl
loope
cmp
inc
dec
call
scas
popf
movsl
mov
or
lock
jne
call
aad
gs
mov
sbb
outsb
xor
test
sti
sub
and
mov
popa
movsb
and
arpl
mov
pop
dec
pop
out
mov
insb
and
xrelease
sub
dec
ljmp
les
dec
nop
adc
pop
add
repnz
inc
add
sub
lods
insl
push
inc
xor
fwait
ret
fmul
mov
pop
inc
jge
cs
inc
sub
jo
sub
test
lahf
push
shlb
cs
test
add
inc
icebp
xor
and
pop
add
push
push
daa
jmp
jo
cli
lahf
mov
jo
dec
add
jp,pn
icebp
call
leave
std
scas
dec
xchg
jge
pusha
sbb
pop
sub
dec
add
or
ds
or
in
add
pop
iret
ss
add
js
xchg
jbe
out
mov
hlt
rcll
rclb
repz
sahf
push
xchg
mov
arpl
cmp
out
mov
daa
out
mov
xchg
push
test
scas
not
js
and
ret
stos
and
addr16
imulb
sti
push
paddd
xchg
jno
into
push
pop
fxch
mov
fcoml
ret
jl
xchg
iret
mov
add
xor
popf
leave
imul
dec
mov
enter
je
cmpsl
outsb
sub
mov
xchg
mov
and
nop
int3
shr
mov
inc
test
dec
dec
popa
xor
sahf
jbe
lds
sub
movsb
out
sarb
push
cmp
aas
insb
test
inc
stc
mov
jo
or
test
daa
xchg
imul
fisttps
xchg
push
sti
lret
adc
cmp
sub
adc
stc
jle
pop
movsb
inc
xor
jnp
movsl
arpl
cs
and
call
aaa
clc
inc
ja
jno
inc
mov
sub
inc
xor
push
fildll
icebp
push
lret
fistpll
imul
lods
aad
inc
mov
fildl
mov
xor
pop
fidivs
add
sarb
pusha
gs
stc
loop
cld
sub
push
cmp
dec
loopne
leave
pop
sbb
cmp
push
cs
in
and
mov
cmp
cli
jp
ret
cmp
adc
mov
or
imull
idivb
add
or
push
movsb
xchg
and
repz
adc
inc
xchg
push
xchg
stc
dec
hlt
and
xchg
add
jb
or
pop
sti
xchg
cmp
xor
mov
popf
pop
dec
lea
test
fcmovu
xorb
aad
mov
sbb
dec
sub
in
data16
mov
mov
cltd
movsl
loopne
lds
mov
jb
out
dec
out
mov
inc
inc
or
lea
jecxz
fs
xchg
push
cmp
mov
stos
in
loope
jns
scas
sub
mov
jbe
mov
xor
mov
push
push
movl
pop
loop
inc
jle
sarl
jmp
mov
cmp
testl
and
pop
sbb
sahf
xor
outsl
jnp
or
xchg
pop
pop
cli
lahf
add
sti
add
xchg
shrb
aam
mov
scas
jno
adc
scas
sarb
adcl
xchg
inc
and
xchg
push
insb
in
jle
jnp
sub
sbb
lcall
add
cli
stos
outsb
mov
outsl
dec
pmaxsw
bound
shr
jle
ret
rcl
mov
pop
cmp
lds
lea
pusha
xor
mov
shll
lods
dec
mov
dec
subb
movsb
in
jp
pushf
xchg
sbb
mov
jno
push
xor
loopne
int3
jmp
out
pop
stos
lods
divb
mov
fsubrs
stos
ss
push
inc
lods
jne
rolb
test
js
xor
icebp
ja
jae
mov
add
push
sbb
push
repz
imul
jno
adc
lea
adc
test
inc
inc
pop
ror
push
out
subb
add
or
test
push
sbb
jae
pop
push
das
jmp
pop
sbb
out
lods
int3
gs
rorb
mov
jl
xchg
int
jmp
sub
out
mov
mov
mov
or
xchg
adc
cmpsl
out
and
jle
xchg
cmovge
mov
pop
stos
or
test
ret
mov
repz
mov
shll
loopne
adc
or
lock
imul
jg
loop
or
cmp
es
dec
or
aad
aas
andb
sbb
aad
sahf
sbb
cmpsb
sbb
xchg
mov
cmpsl
mov
mov
fisubs
cmp
std
cltd
jbe
mov
loop
adc
insl
out
xchg
js
sub
adc
iret
in
mov
shld
mov
negb
or
aaa
std
or
pop
or
lahf
add
and
testl
ret
inc
push
pop
push
mov
adc
loop
mov
and
mov
in
jne
das
ret
jb,pt
fs
inc
and
dec
xchg
inc
mov
ss
adc
push
lods
ret
std
mov
cmpsl
push
in
shl
lds
mov
pop
xor
in
jmp
sub
add
inc
xor
add
out
push
mov
mov
movsb
cmp
dec
inc
xchg
mov
fsubrl
cmc
jnp
jmp
xorb
stc
leave
cld
repnz
jbe
gs
mov
and
cwtl
mov
cmp
pop
fsts
dec
jbe
out
pop
lret
mov
rorb
add
movl
pop
mov
jp
sub
cmp
mov
mov
or
andb
aad
sbb
xchg
pop
test
mov
out
hlt
dec
cld
iret
stos
mov
andb
xchg
repnz
repz
sbb
dec
cld
xor
add
imul
mov
pop
push
and
int
add
xor
add
sbb
push
ds
pop
fists
and
ljmp
xor
das
mov
out
popf
mov
daa
icebp
sahf
cli
outsl
ret
fiadds
jle
xchg
insl
popl
stos
mov
outsl
or
pmullw
dec
mov
fildll
jmp
jno
or
lcall
xor
inc
js
cmp
mov
sti
push
jge
loope
ja
fdivrs
push
mov
adc
mov
enter
sarl
in
adc
icebp
test
xor
addr16
cli
cmp
insl
dec
dec
fstpt
jbe
iret
out
in
cli
popa
shr
hlt
pop
in
add
popf
adc
rclb
je
adc
jns
or
repnz
xchg
lcall
leave
jg
fs
int3
loopne
pop
xchg
push
inc
test
fld
mov
cmpsb
xor
test
leave
mov
jmp
jb
jne
mov
fstl
sbb
enter
pop
xor
divl
insb
addl
xor
and
in
repz
jg
lea
adc
mov
mov
std
mov
lahf
loop
sub
mov
pusha
push
je
push
or
cwtl
mov
push
dec
xor
scas
mov
int
push
adc
and
clc
inc
mov
iret
sub
call
lret
push
fadd
xor
js
ljmp
outsb
cld
mov
push
popa
ds
sarl
sbb
pushf
mov
xor
movsl
enter
inc
xchg
xchg
mov
hlt
lret
or
scas
ss
les
ljmp
sub
pop
adc
cmp
add
jae
ficoml
xor
pusha
and
xchg
jecxz
xor
mov
arpl
icebp
cmp
mov
pop
iret
push
cwtl
je
jne
xchg
repz
push
ja
inc
jnp
xor
daa
push
jbe
pop
shlb
fstps
sub
bound
in
mov
imul
or
cmp
cmp
pop
add
ret
mov
ljmp
sahf
shrl
clc
mov
xchg
pop
fildll
push
lea
scas
out
jg
inc
fisubrl
mov
mov
repnz
push
mov
cmc
fnstsw
push
mov
jno
scas
jecxz
mov
nop
das
add
ja
cld
in
mov
stos
cmp
addr16
and
shll
orb
xchg
lret
jmp
xorl
enter
arpl
cmp
mov
cmp
lds
pop
test
mov
outsl
jae
mov
call
insl
fcomps
push
enter
adc
jecxz
mov
pop
lret
aad
jb
mov
shll
jno
cmc
push
jp
test
mov
sub
lret
sub
xlat
jnp
xchg
notb
call
adc
fsts
mov
sbbb
xor
or
sub
lea
in
inc
iret
mov
clc
mov
push
jge
xor
xchg
lods
aam
inc
dec
sub
pop
addb
mov
sub
push
fdivl
mov
lea
in
mov
loopne
xchg
adc
mov
in
je
in
mov
push
adc
stos
jnp
imul
xchg
popf
clc
mov
fldl
iret
scas
xchg
mov
daa
out
mov
sub
add
pop
aam
push
sbb
lods
scas
jp
inc
pop
mov
ja
or
les
push
xlat
lods
imul
and
in
loop
les
rclb
movsl
out
aas
rol
inc
icebp
pop
xchg
jno
sbb
pushf
xor
xchg
jno
pop
mov
pop
xchg
pop
or
stos
xor
cld
push
lds
pop
cmc
iret
cmpb
fwait
jo
idivl
loope
inc
cmpsl
push
cltd
xor
loopne
dec
mov
popf
iret
hlt
loopne
jne
xlat
clc
loope
jg
pop
cmpsl
cld
gs
push
jmp
loop
xchg
stos
fwait
jmp
push
pop
sbb
inc
xchg
push
out
dec
in
mov
add
jp
cltd
sbb
stos
pop
imul
leave
dec
out
fisttps
jnp
test
test
out
cltd
mov
pop
jg
pusha
push
xor
xor
push
and
cmp
xchg
pop
mov
lahf
xorb
and
dec
xlat
inc
xor
mov
pop
shrb
adc
ficompl
lcall
sbb
nop
mov
mov
lret
mov
sub
mov
lods
bound
loop
mov
inc
scas
sbb
dec
mov
ss
loopne
mov
adc
call
adc
lds
gs
fnsave
sbbl
mov
inc
sbb
les
sub
xor
push
loop
adc
jbe
fisttpll
dec
daa
jp
cmp
and
xor
inc
inc
pop
clc
loopne
sbb
inc
cld
in
sub
ss
mov
and
out
xor
mov
xchg
repnz
stos
pop
outsl
in
sub
sub
shrb
adc
mov
xchg
pop
sbb
sahf
adc
daa
mov
je
jo
add
fisttpll
cmp
js
into
decb
push
inc
mov
popa
xor
addr16
inc
enter
popf
xor
lock
sbb
jp
inc
sbb
xor
cld
push
lds
xor
add
and
and
mov
cwtl
inc
lods
std
inc
add
pop
scas
cs
jge
lret
or
pop
jp
push
lcall
xchg
enter
jle
xor
cmp
outsb
sbb
sahf
imul
testb
inc
and
bound
repnz
in
mov
scas
pushl
xchg
push
rorb
cmc
jo
and
mov
repnz
clc
inc
ja
sbb
push
out
cmc
or
fwait
call
cmp
cmpsb
mov
or
cld
sbb
or
data16
mov
cmc
scas
or
outsl
pop
mov
fstpl
cmp
or
add
mov
and
repz
adc
pop
clc
stos
outsb
adc
in
jl
mov
add
mov
xor
and
lret
es
push
mov
mov
fildll
stos
pop
enter
in
xchg
add
and
fnstcw
je
sbb
fldenv
add
adc
or
scas
movsl
adc
sbb
loopne
xor
mov
mov
inc
jns
or
shrl
dec
lcall
and
inc
pushl
or
leave
jp
mov
dec
clc
cs
mov
mov
xchg
insb
xor
nop
mov
sub
imul
push
cwtl
clc
js
aaa
icebp
lds
addr16
xchg
sbb
xchg
mov
adc
cmp
jb
lahf
mov
adc
dec
mov
fsubrl
jecxz
xor
outsb
insb
arpl
sti
push
lret
lea
jecxz
cltd
pop
push
popf
mov
add
adc
sahf
add
mov
orb
insl
imul
jecxz
mov
aaa
in
xchg
dec
jl
cltd
test
ja
outsb
ret
sub
data16
push
shr
cli
repz
lock
ret
flds
insb
inc
in
stos
stc
xor
cs
push
lods
test
mov
jae,pn
and
sbb
mov
cmc
aas
xor
jb
test
inc
call
bound
fadds
enter
push
inc
mov
nop
test
push
loopne
in
test
loopne
mov
lods
jg
add
and
mov
cltd
movsb
lods
scas
scas
lea
lahf
enter
jns
inc
jo
jbe
loop
cmp
lds
xor
cli
shll
mov
imul
ljmpw
mov
cmp
add
sbb
sahf
test
jg
cmp
inc
push
jmp
dec
pop
mov
lods
sub
cmp
adc
inc
cli
sub
pushf
add
filds
jns
rcr
nop
xor
add
das
pop
inc
rcll
adc
stc
xchg
pop
jbe
cld
pop
out
rcrl
or
xor
leave
xor
mov
push
enter
or
filds
xchg
cld
cmc
pop
add
jp
call
mov
ret
sahf
jae
sub
cmp
pop
rcl
jne
ljmp
subl
sbb
or
aad
minps
jnp
inc
sbb
fiadds
jne
cmp
pop
fstpt
jl
lret
mov
imul
outsb
or
aad
dec
cmpsl
cwtl
repz
stos
mov
or
pop
jns
cwtl
cmp
cmp
jmp
mov
fldl
xor
sub
mov
jg
or
dec
cmpsl
int
decl
out
fidivrl
push
out
and
lods
out
repnz
mov
adcb
lcall
sbb
std
jbe
cmp
movsl
mov
loopne
scas
xchg
gs
and
sbb
test
packssdw
scas
cld
test
insb
scas
sub
out
jle
fidivl
xor
mov
jmp
pusha
imul
jle
bound
xor
or
cmp
lock
aaa
iret
daa
out
fldcw
lret
lret
mov
inc
fistl
mov
add
dec
adcl
sbbl
push
lods
mov
xchg
aas
mov
mov
jb
mov
cmp
sub
scas
ss
cmp
sub
adc
shl
sti
lods
mov
xchg
stc
dec
mov
pop
adc
push
xor
adc
jae
dec
lods
cmp
aas
and
lods
mov
decl
jg
dec
repz
xchg
sbb
sbb
xor
add
mov
lcall
fidivrl
stc
push
pop
arpl
hlt
cltd
imulb
std
je
xor
or
add
inc
lock
push
stos
mov
arpl
pop
xchg
add
test
pop
out
call
and
mov
mov
fisttpl
mov
js
test
push
inc
cmp
subl
shrl
fcmovne
push
xor
pop
jl
cmp
pop
pop
mov
xor
aaa
or
out
lods
into
jge
or
lret
xor
inc
mov
push
shll
cld
push
xchg
mov
push
xchg
or
add
or
dec
and
xchg
dec
jb
pmaxsw
pop
inc
add
pop
out
adc
les
daa
sbb
mov
add
cld
das
mov
mov
lods
in
jmp
inc
add
dec
or
mov
sti
jecxz
clc
stos
sub
popf
fnstsw
dec
and
and
xchg
xchg
mov
cld
sahf
aad
dec
inc
fisttpll
iret
sbbl
jnp
mov
repnz
cmp
xchg
or
lock
shr
std
cmp
mov
int
popa
fistpll
pusha
jno
scas
inc
test
adc
jae
xchg
rcll
cmc
imul
mov
jp
rcrl
fwait
xchg
es
imul
sub
daa
and
test
insb
repz
xchg
pop
pop
sbb
fwait
mov
stc
mov
in
rcl
jg
test
xchg
lea
aaa
je
or
push
jg
out
pop
rcll
lcall
pop
sbb
cmp
dec
incb
sbb
outsb
cmp
mov
inc
int3
dec
pusha
xchg
popf
or
add
stos
xor
jnp
shrl
in
and
pop
lods
insl
push
call
mov
popa
xchg
dec
daa
addr16
loop
fdivrp
jl
adc
dec
xchg
mov
scas
cmp
in
mov
mov
out
aas
or
int3
aas
out
shr
jnp
add
sub
outsl
ret
jmp
out
sub
xor
dec
in
pop
and
jp
sbb
mov
gs
sbb
ret
fstl
test
and
dec
aad
mov
mov
insb
icebp
dec
adc
jmp
jno
add
cmp
xchg
mov
test
mov
adc
and
add
mov
std
push
leave
shlb
nop
das
fisttps
sbb
gs
rcrb
fistpl
outsl
insl
shll
jo
test
and
or
push
jns
cmp
mov
xlat
push
sbb
sub
aam
ja
cwtl
and
sub
or
lock
cwtl
xor
shrb
pop
cmp
test
lds
cs
and
test
lret
mov
pusha
iret
call
mov
jg
sub
rep
imul
push
sbb
loope
lea
add
jns
mov
dec
adc
fmulp
cmpl
mov
xorb
lahf
jg
mov
sub
sub
fisttps
sub
imul
pop
mov
add
lock
inc
ljmp
es
gs
fwait
lea
add
pushf
pusha
xor
mov
test
jmp
inc
sub
adc
scas
aad
popa
mov
rcrl
popf
inc
mov
lahf
scas
daa
iret
sub
mov
add
inc
adc
pop
pushl
push
test
inc
shl
movsb
sahf
lock
pop
in
mov
lret
xchg
add
iret
fstps
push
mov
in
scas
mov
inc
sub
push
jno
mov
push
fnstcw
std
dec
xlat
out
mov
in
adc
out
xor
sbb
test
dec
mov
push
push
loop
outsb
sub
push
scas
xchg
loopne
pop
repz
mov
pop
sub
inc
mov
or
cmpsb
inc
and
xchg
movsl
bound
in
mov
push
jecxz
sbb
push
or
xor
inc
xlat
lahf
addr16
pop
adc
sbb
mov
xor
fwait
into
add
mov
cmp
lods
sbb
mov
inc
and
lret
stos
mov
lahf
roll
cwtl
rcr
mov
mov
xchg
mov
loope
loop
daa
negb
mov
sbb
test
int3
test
mov
ret
outsl
pop
gs
loopne
pop
pop
sarl
mov
int3
push
pop
cli
outsl
call
dec
fildll
ret
fdiv
stos
movups
sub
ss
rcr
test
jns
fsubrl
sub
repz
add
mov
test
xchg
addr16
sahf
inc
sub
aad
dec
jae
mov
enter
dec
lea
mov
adc
je
add
arpl
lods
fsubr
xor
psubw
jg
insl
dec
ljmp
sbb
xlat
mov
sub
cmpsb
call
es
and
and
push
int
popa
pop
xchg
mov
mov
js
nop
cwtl
pop
dec
scas
aad
inc
xchg
fs
into
mov
stos
inc
pop
xchg
sub
cmp
ljmp
push
pop
mov
out
jle
pop
test
loope
push
es
mov
push
mov
sahf
or
cmp
hlt
mov
lods
adc
dec
xor
dec
push
repz
lds
xchg
push
cmp
xlat
adc
lahf
pop
loopne
dec
fucomi
xor
jle
outsb
inc
push
push
cmpsl
jae
xchg
mov
mov
ljmp
push
mov
push
dec
hlt
pop
inc
push
mov
cmp
or
insb
jnp,pn
clc
loopne
pop
mov
dec
pop
and
xor
dec
fdivs
push
sbbl
arpl
add
mov
push
imul
pop
pop
outsl
xlat
repnz
xchg
lret
cmp
inc
mov
rol
push
lea
lcall
movb
shrl
shlb
dec
xor
in
les
xor
push
lds
repz
mov
sub
test
addr16
push
fdiv
fidivl
mov
lods
int
mov
lret
jmp
sub
jmp
mov
cld
out
jbe
cmpb
stc
ljmp
fldt
mov
push
dec
jl
je
pop
xchg
ret
mov
fsubs
sbb
dec
add
setg
arpl
loop
mov
lret
and
subb
adc
fldt
dec
cmp
fdivrl
out
fsub
sub
xchg
aad
arpl
jmp
js
rcl
xchg
icebp
pop
gs
ds
mull
mov
orb
test
or
outsb
dec
cmp
fisttpl
fsubp
or
and
jb
push
and
cmp
test
push
add
mov
aam
cmp
daa
adc
shr
repz
cltd
and
into
xor
inc
dec
sbbl
mov
jbe
push
pop
popf
jp
mov
pop
or
push
sbb
jmp
cli
dec
and
fimuls
iret
je
sub
sbb
cmp
or
xchg
add
rcl
les
ror
xor
rcll
pmullw
pop
xlat
out
in
push
hlt
enter
push
push
insb
adc
and
scas
dec
enter
mov
dec
jl
imul
lock
cmp
insl
cmp
jns
add
hlt
pop
mov
sti
jmp
dec
mov
or
mov
sbb
out
in
inc
inc
cmp
inc
dec
push
add
sub
ret
sbb
loopne
xor
out
adc
pop
lret
xor
lahf
fs
push
and
les
or
arpl
call
cltd
jnp
push
sbb
divl
insb
stos
dec
scas
push
xor
sub
mov
ja
xchg
das
add
jmp
cmp
adc
repnz
mov
nop
mov
iret
mov
shll
test
mov
adc
jg
add
pop
push
sub
pop
mov
adc
sti
push
std
pop
xchg
or
jl
test
cmpl
mov
inc
add
mov
jb
mov
jl
jb
adc
ret
out
inc
popa
sbb
fisubl
push
mov
shrl
inc
xchg
out
call
mov
jne
and
aas
aaa
rorl
xchg
cmpsb
arpl
lret
jbe
fwait
clc
jecxz
orl
lea
pop
or
lcall
mov
push
push
lret
negl
lret
add
fcoml
adc
es
icebp
mov
push
sbb
insl
push
loope
cmp
imul
sub
repnz
test
fnstenv
or
sbb
jg
cmp
jmp
loop
mov
mov
out
inc
cmc
inc
int3
xchg
test
int3
pop
pop
sub
outsb
popl
inc
xor
mov
ds
test
sub
adc
in
fistl
or
dec
xchg
andl
mov
cmp
clc
shll
and
mov
fwait
xchg
and
sar
jbe
pop
das
psubusw
test
pop
mov
xchg
mov
lret
mov
dec
add
pusha
inc
push
pushf
shrb
mov
aaa
xor
movsb
insb
mov
xchg
cltd
cli
or
int
push
xor
sbb
bound
push
sbb
inc
sbb
inc
adc
inc
xchg
xor
sbb
aad
jle
mov
fsts
pop
sub
mov
lcall
or
repnz
movsb
jge
lods
fmul
in
movsl
mov
add
cmp
mul
stc
sub
mov
rolb
push
ja
adc
scas
pop
cmp
into
es
push
rolb
fisttpl
out
xchg
test
dec
mov
icebp
pop
bound
loope
outsl
xchg
jb
lods
push
loope
mov
out
cmp
mov
les
lds
add
xchg
sarb
sub
iret
push
adc
fldenv
or
inc
int3
cmpsl
cwtl
imul
xchg
rorb
sub
xchg
aaa
frstor
negl
popa
out
sub
or
sti
dec
imul
mov
dec
adc
cli
dec
ret
or
mov
xorl
add
iret
fbld
clc
add
fwait
pop
adc
lret
or
dec
sti
int
pop
rorl
inc
push
lcall
bound
pop
mov
or
outsl
dec
add
nop
stos
popa
xchg
aaa
xlat
sbb
add
mov
idivl
sbb
fsubr
inc
inc
lret
sarl
and
int
clc
scas
outsl
jne
out
pushfw
pop
das
mov
mov
sub
mov
sti
shr
cmp
xor
xchg
mov
and
aas
repz
das
mov
stos
adcb
add
mov
jnp
fwait
adc
pop
movsb
inc
and
jge
mov
cmc
sub
mov
jae
and
xlat
les
mov
dec
test
jo
inc
and
inc
xchg
outsl
stc
shll
mov
jmp
inc
jb
adc
call
xor
xrelease
dec
pop
addb
pop
xor
or
test
shll
in
mov
inc
rorl
sub
jbe
push
mov
out
cmpsb
arpl
insl
inc
push
and
cmpb
or
or
outsb
cmp
dec
leave
pop
push
les
aaa
push
xor
xor
movsb
iret
ds
inc
inc
adc
hlt
push
or
push
xor
xor
outsl
adcl
popf
push
and
adc
push
test
int
mov
insb
outsl
iret
adc
ret
stc
xor
xchg
adc
push
adc
xchg
out
lcall
and
lahf
sbb
subps
add
daa
pop
xchg
dec
mov
cmp
testl
jnp
xlat
cmp
or
fildl
jle
xchg
addb
pop
in
inc
jnp
mov
mov
sub
ds
cmp
mov
mov
gs
arpl
test
add
jbe
mov
pusha
jg
adc
shll
or
data16
loop
xchg
hlt
icebp
aas
lahf
mov
pop
sub
push
dec
jne
imul
adc
jp
enter
shll
adc
insb
js
lods
cmp
dec
or
mov
jmp
cli
ffreep
push
cmp
lret
push
inc
sub
pop
add
sbb
push
xor
das
out
xchg
jge
mov
leave
mov
cmp
inc
push
jno
cmp
jecxz
mov
lcall
jg
ds
jno
xor
push
jb
stc
addr16
shlb
imull
jmp
out
out
cmp
mov
cmp
lcall
scas
push
adc
push
and
lret
ret
aad
cmp
cmp
mov
adc
lahf
mov
mov
add
jns
mov
int
aas
mov
mov
ss
dec
and
adc
sub
fstps
push
adc
shr
jno
sbb
int3
add
loop
out
push
sub
divl
aaa
iret
stc
int
mov
mov
adc
and
jbe
push
mov
jge
outsl
cwtl
mull
mov
das
dec
mov
sbb
mov
out
hlt
cli
inc
loop
scas
mov
push
lods
jg
mov
in
lret
jo
loop
sub
xor
jmp
movsl
stc
sbb
cmpsb
xor
mov
adc
xchg
shlb
xchg
push
mov
je
in
ds
xchg
sub
pop
sbb
adc
add
lock
lea
xchg
out
mov
cmp
jg
lret
inc
in
ljmp
std
jle
xchg
inc
dec
jge
ss
pop
test
fsubrp
dec
mov
sbbb
cmp
test
fmul
xlat
jae
push
movsl
lahf
icebp
sbb
imul
sub
cmp
sbb
mov
cmp
pusha
fldcw
ficoms
push
lret
lret
jbe
popf
js
push
push
mov
iret
arpl
repz
sbb
iret
inc
xchg
adc
cld
pop
into
sub
popf
fnstenv
add
adc
and
mov
pop
pusha
sarb
mov
cmpsb
pop
jae
or
cmp
jl
std
lock
adcl
xorb
xor
inc
fmull
sbb
fsub
jno
int
jbe
mov
pushf
and
loope
fistps
pop
sbb
jg
lds
push
or
cmp
loop
mov
pop
push
andb
fstpt
ret
xor
repz
cmp
pop
mov
push
insb
push
ljmp
inc
dec
and
iret
mov
iret
cld
lods
or
leave
inc
jno
or
sub
or
std
testl
repnz
cmc
pop
inc
lds
push
test
mov
or
pop
insb
hlt
aas
sti
shll
jmp
push
ret
pop
lahf
inc
icebp
rcll
mov
xchg
sub
jno
lock
les
xchg
fldt
std
stos
rclb
push
add
sbb
pop
pop
or
out
pop
jb,pt
cmc
and
sbb
sbb
gs
or
sbb
inc
les
dec
imul
jnp
mov
push
inc
les
mov
xlat
lods
push
jle
jb
pushf
rsm
jne
jbe
shrb
dec
push
jge
fdiv
outsl
xchg
addr16
add
pop
sub
lcall
jmp
aas
sub
insl
out
sbb
sub
addr16
jecxz
xor
mov
aaa
mov
push
rcr
hlt
xor
xchg
pop
cmpsb
mov
scas
mov
pop
gs
xchg
sbb
adc
hlt
sbbb
sbb
and
lods
fildl
cmp
cmp
out
jae
xchg
inc
hlt
orb
and
xchg
daa
adc
jbe
fcomps
stos
enter
xor
enter
aas
pop
insl
push
bound
orl
xor
or
inc
pmovmskb
mulb
loop
movsl
rcll
mov
dec
movsl
pop
lcall
inc
adc
adc
xor
or
scas
loopne
shll
sbb
dec
fimull
imul
dec
inc
dec
push
test
in
jns
mov
and
mov
ret
jmp
pop
or
cmpsl
sub
mov
xor
data16
adc
std
loope
hlt
jl
and
fnstsw
les
push
data16
add
fs
sub
cmpsb
ja
or
data16
cmp
or
push
mov
fdivl
push
ret
addb
mov
test
or
jmp
push
jecxz
jg
and
sub
pop
push
cmp
pop
enter
into
jp
add
sub
pop
mov
das
jno
outsl
push
cltd
inc
insb
sub
pop
push
rcrl
lds
and
call
jecxz
or
lcall
adc
popf
je
aas
cmp
jmp
jbe
lret
push
ljmp
sbbb
mov
dec
add
inc
fistpl
pop
outsl
inc
pop
lret
lret
sub
sahf
mov
bound
fsubrl
inc
out
sub
cmc
mov
mov
imul
mov
mov
inc
mov
ljmp
xor
sub
add
pop
sub
lret
out
add
dec
add
mov
gs
lds
pop
mov
jo
xor
fisttpll
inc
sub
repz
iret
nop
lods
mov
add
mov
stos
js
inc
ds
ret
nop
mov
xor
popa
stos
ret
fists
test
pop
add
dec
fprem1
mov
pop
fwait
sbb
lret
dec
cmp
push
push
in
cmp
or
and
mov
or
lods
data16
cmpsb
pop
call
je
add
cli
xchg
pop
pop
mov
int
ja
int
cmc
xchg
orb
sub
jle
jl
mov
fs
or
jno
fsubl
insb
pop
lods
bnd
cmc
xlat
xchg
scas
pushf
xorl
in
jp
pop
sbb
jcxz
dec
mov
jb
jae
xor
jo
adc
int3
call
popa
lds
push
xor
lcall
cmp
push
inc
jno
jle
js
outsb
mov
sbb
pusha
xlat
lcall
adc
loop
andps
iret
xor
or
jbe
clc
ds
xchg
iret
out
lret
sub
xor
dec
inc
push
or
xchg
inc
mulb
and
mov
cli
test
pop
outsb
loopne
xchg
cmpsl
pushf
or
jne
push
ror
pusha
mov
cmp
push
in
in
lcall
fisubrs
cmc
pop
lret
es
mov
inc
push
inc
stos
mov
sbb
loope
push
mov
sbb
mov
in
insb
dec
cwtl
test
pop
ljmp
add
adc
gs
gs
adc
push
icebp
das
jle
jo
pusha
inc
inc
jp
mov
icebp
clc
adc
cmp
pop
mov
push
push
popa
xchg
mov
dec
sbb
dec
mov
in
fdivr
pop
jmp
and
and
jae
mov
xchg
mov
push
sbb
repz
mov
sub
outsb
cmpsl
mov
int3
mov
adcb
std
sub
fs
in
clc
jbe
xor
jne
sti
sbbl
mov
arpl
stc
pop
pusha
imul
in
mov
loopne
dec
int3
mov
mov
outsl
mov
leave
lods
sub
inc
or
fisttpl
enter
in
xchg
insb
mov
aad
and
call
fs
or
dec
push
popf
xchg
xchg
dec
arpl
lea
popf
and
ja
adc
loop
pusha
pop
ficoms
pusha
xor
pushf
dec
aad
cli
mov
lock
push
jp
dec
fcomi
pop
scas
xor
push
les
leave
cmp
ror
inc
fildl
jmp
pusha
add
jl
pop
xchg
xchg
in
push
inc
stc
jmp
adc
dec
data16
dec
dec
sbb
cs
sbb
xor
call
repnz
mov
jecxz
push
cmc
jge
mov
pop
incb
adc
fidivrl
sbb
mov
outsb
in
jmp
mov
nop
inc
mov
es
cmp
jl
xor
push
clc
pop
sarb
dec
in
outsb
jl
push
ret
lret
cmc
adc
mov
fcomps
push
xor
or
in
mov
add
mov
cmpsl
pushf
enter
push
add
lahf
test
push
jnp
fadds
mov
nop
push
out
aam
push
push
jl
and
shll
cltd
loope
stc
sti
mov
jecxz
cli
dec
add
mov
mov
rcrb
pop
jg
cmp
outsb
sarb
cmp
pushf
push
test
mov
or
or
inc
insl
setl
inc
imul
push
mov
leave
pop
push
ja
xchg
inc
leave
jge
mov
idivl
inc
idivb
arpl
out
loope
push
xor
ss
ret
cmc
test
les
jge
inc
out
int
fst
sbbb
clc
adc
adc
push
daa
fldenv
or
insb
pop
pop
jo
mov
xchg
sbb
mov
lea
lret
jmp
mov
js
cmc
sub
cmp
movsl
les
jo,pt
jnp,pt
insl
pop
cs
fcomip
inc
and
imul
xlat
test
loope
fildl
xor
mov
jnp
in
add
push
and
jle
loop,pt
cmpsb
movsl
dec
ja
testb
add
repnz
popa
sarb
and
xor
loop
sbb
mov
mov
outsb
scas
or
push
shll
ret
jne
inc
ret
pop
xchg
lods
sbb
outsl
leave
add
iret
lods
in
push
fstpt
lds
mov
ret
loop
cmc
ret
adc
test
jae
roll
out
scas
dec
dec
xlat
imul
xor
lahf
sub
lret
sub
inc
fsubs
or
dec
imul
in
lea
xlat
scas
data16
sub
xchg
sbb
push
push
jb
xor
mov
jno
shlb
dec
in
mov
adc
int3
dec
inc
int
add
xor
loop
and
xchg
das
iret
xor
aas
mov
add
push
mov
je
dec
cmp
pusha
dec
lcall
repnz
ret
cmp
lret
and
movntps
insl
add
shll
mov
xchg
shlb
in
ja
movsl
gs
lods
lea
hlt
jp
fdivrs
rcl
xor
mov
lcall
xor
sub
inc
pop
test
adc
cwtl
inc
lods
push
pop
popa
outsl
push
pop
sub
dec
xor
sub
les
push
cld
push
test
iret
mov
mov
cmpsl
and
arpl
mov
dec
aaa
jl
popa
scas
and
cli
dec
sbb
divb
cmp
bnd
mov
repz
pop
sahf
ljmp
xchg
aas
pop
xchg
cmp
in
mov
or
data16
add
add
neg
cltd
subl
ret
sbbl
cmpl
jmp
adc
mov
adc
sahf
fcmovnb
decb
ret
add
ficoms
xchg
lcall
sub
das
fs
mov
pop
repnz
xlat
xchg
jg
sub
cmp
sbb
cmp
inc
gs
insl
shll
or
ljmp
add
add
in
fmull
js
jg
sub
lea
stos
and
mov
mov
movsb
fcompl
repz
ja
cld
fadds
mov
cwtl
mov
push
cli
mov
inc
jb
fs
or
mov
ja
add
shll
cltd
inc
stc
rclb
ret
mov
test
insb
cmp
test
push
mov
jb
rorl
in
adc
jmp
xor
xchg
mov
fs
xor
iret
xchg
pop
or
mov
mov
test
mov
call
inc
neg
sbb
fcoml
pop
daa
pop
xor
or
xchg
adc
ss
cmp
and
mov
out
stos
xor
popa
ljmp
cltd
pop
addr16
mov
daa
into
push
adcb
or
jno
call
out
inc
mov
fidivs
inc
push
mov
ret
out
add
fldenv
sub
push
sbb
inc
dec
loop
cmp
and
outsb
mov
push
push
mov
data16
scas
enter
out
lock
sbb
loope
data16
jo
inc
jp
fstl
cmc
out
push
add
mov
jl
cmpb
sub
pop
mov
jle
inc
gs
xor
mov
pop
xchg
lods
xchg
add
fs
clc
mov
adc
sub
js
mov
jae
jmp
pop
cs
out
and
add
mov
rolb
mov
mov
push
mov
mov
inc
cmp
mov
lds
and
rcrl
das
test
leave
insb
in
and
mov
mov
pop
sti
pop
out
andl
push
lods
fnstenv
incb
addr16
pop
mov
fmull
js
inc
mov
inc
mov
mov
or
or
push
inc
jns
movsb
cmp
test
xchg
push
dec
push
cmpsl
repz
filds
lret
flds
pop
xchg
jnp
jo
sbb
lds
test
mov
dec
fwait
cmc
sarl
inc
jbe
ds
lods
sbb
xchg
shl
sub
jae
jae
xchg
ret
stos
push
jno
movl
ds
jge
mov
fcoms
dec
push
mov
into
pushf
repz
fwait
andb
iret
js
mov
mov
push
fs
cltd
rorb
inc
movlps
sbb
sub
mov
out
pop
mov
sbb
mov
fnstenv
pop
jmp
xchg
lds
mov
cs
test
mov
scas
xor
dec
shlb
xor
or
cmp
lret
mov
lea
int3
pushl
rolb
inc
lret
add
test
test
and
lock
pop
jmp
jmp
jbe
xor
xor
cmpl
mov
addr16
or
sbb
stos
andb
inc
test
or
jns
inc
filds
addl
pop
lds
cmp
and
add
repz
or
pop
loop
in
lods
pusha
bsr
in
adc
push
push
jg
xor
dec
pop
in
stos
pop
pop
inc
icebp
shl
mov
sbb
pushf
stos
inc
xor
leave
adc
call
xchg
sub
ret
cli
jge
rcl
jecxz
cmp
jmp
xor
in
pop
test
mov
clc
adc
cmp
pop
inc
dec
adc
xor
mov
jns
or
sub
mov
sbb
nop
jns
bound
ficoml
jo
or
loope
pop
mov
mov
inc
int3
push
sbb
jle
cwtl
push
je
int
pop
cld
test
out
xchg
mov
loope
xor
pop
lock
and
pop
scas
cmpsb
arpl
int3
ret
das
ds
sbb
fnstcw
sbb
stos
mov
cwtl
pop
nop
and
popa
loop
add
sbb
inc
mov
popf
arpl
cltd
fsubl
cmp
adc
xchg
inc
mov
mov
fadd
add
int3
incl
push
jg
pop
movsb
cmp
sbb
mov
pop
pop
mov
out
sahf
stos
je
push
xchg
xchg
in
or
outsl
jae
cmp
dec
fldt
dec
inc
cmp
pop
mov
push
rcrl
push
mov
push
xchg
out
sbb
adc
xchg
imul
inc
dec
cwtl
pop
rolb
sub
imul
test
cmpsb
xor
pop
push
or
ljmp
push
or
in
ja
xchg
imul
rcll
adc
cmp
lret
ficompl
sbb
or
adc
cmpsl
cmp
inc
lock
pop
hlt
aam
test
mov
adc
push
add
mov
clc
loop
sub
mov
mov
push
or
xor
leave
mov
das
mov
in
pop
jmp
adc
out
mov
cmp
dec
lahf
addr16
or
fiaddl
sbb
in
aaa
popf
es
ss
and
inc
into
decl
mov
mov
mov
lret
pop
pop
outsb
mov
rcrb
sub
sti
mov
inc
push
ljmp
iret
mov
sub
push
dec
jg
add
test
add
mov
inc
es
mov
cmp
sub
pcmpeqw
int3
mov
out
fcomip
mov
jmp
fnstsw
js
xchg
fmull
mov
sbb
lret
cmp
dec
sbb
cmp
xor
shl
imul
and
add
test
cmp
inc
movsb
inc
inc
xchg
jmp
pop
test
and
or
pushf
iret
adc
fisubl
mov
loopne
in
fidivl
adc
jl
inc
mov
add
int
pop
stos
mov
inc
dec
out
cmp
movsl
xlat
fcompl
outsl
pop
jbe
sub
das
enter
xchg
je
jge
jbe
sti
out
lds
rcll
dec
in
ljmp
push
repz
hlt
insb
lahf
movsb
mov
ss
scas
fisubl
xchg
xor
xor
sbb
jge
sbb
add
fisubrs
jl
sahf
push
cmp
pop
outsl
add
dec
or
scas
ss
mov
insl
inc
jle
or
sbb
jecxz
ja
pop
jne
ja
lcall
mov
mov
and
push
das
ret
xor
icebp
add
mov
sbb
aas
push
clc
cs
rolw
xor
pushl
shll
inc
mov
adc
cld
add
imul
or
mov
sbb
ja
dec
cmpsl
xchg
arpl
test
adc
xchg
inc
pushf
sub
popa
add
icebp
mov
iret
call
lods
imul
inc
aad
enter
leave
ljmp
cmpsb
testb
xchg
test
repnz
sub
push
push
adc
enter
lret
lret
popa
mov
outsl
pop
cmpsl
adc
inc
pushf
ljmp
cmp
movsb
ret
aad
leave
int
mov
jns
negl
repnz
std
xchg
out
mov
cld
mov
add
cltd
imul
push
jae
mov
imul
xor
xchg
dec
movb
jb
mov
jae
cli
hlt
addb
sti
xor
bound
pop
jmp
lahf
pop
sbb
jge
push
out
jmp
std
add
int3
jmp
push
mov
movsl
jmp
leave
js
lret
sbb
icebp
and
iret
and
mov
rcrb
sbb
dec
xor
or
add
pushl
adcb
adc
cmpsb
testb
test
add
pop
in
test
jns
fildl
dec
mov
inc
xor
in
pushf
scas
and
dec
fwait
rorb
cmpsl
push
jl
sub
in
and
subb
stc
inc
add
jnp
dec
pop
mov
repnz
cs
rcrl
adc
push
out
lcall
mov
ret
out
ret
push
pop
das
movl
xor
xor
xchg
sub
push
sbb
fs
cmp
lret
repnz
push
cmpsl
pop
loop
outsl
dec
lahf
jge
in
aas
xchg
shr
jno
sub
fcmovb
mov
add
ljmp
scas
aam
and
xor
mov
fdivs
stos
and
stc
repz
adc
lods
std
daa
out
dec
aad
adc
addr16
int3
sub
repnz
dec
jecxz
loope
jbe
add
ljmp
testl
ss
jb
pop
in
jnp
ret
add
push
lret
shrl
fistps
mov
push
out
out
push
test
pop
mov
jg
stos
jo
xchg
push
mov
cmc
mov
dec
cli
sarl
or
bound
or
xchg
fnsave
arpl
and
pop
cmpsb
push
insb
ret
xor
sbb
and
ja
mov
adc
sub
ja
cmp
cltd
outsl
repnz
xor
fwait
push
xchg
push
mov
add
fs
pop
push
jp
jno
outsb
add
fwait
jp
pusha
imul
xlat
inc
loope
es
pop
xor
out
xchg
mov
inc
std
shll
inc
sbb
xchg
adc
push
mov
fists
dec
data16
repnz
and
daa
ret
mov
ficompl
or
sbb
fninit
sub
call
fstl
inc
test
add
scas
sub
cmp
xor
mov
test
loopne
dec
add
clc
sbb
stos
or
cmc
loope
js
out
ljmp
scas
cmp
push
dec
loop
inc
mov
jp
fwait
push
cmpb
repz
jl
push
int
dec
mov
pop
and
inc
mov
pushf
inc
jbe
cwtl
jg
leave
add
pushf
sub
inc
cmp
nop
arpl
jmp
test
or
sbb
rclb
push
std
lods
popa
adc
rcll
mov
bound
nop
sbb
jbe
jmp
or
adc
sahf
or
in
call
gs
push
push
lret
fs
pop
push
or
loopne
repz
imul
adc
sahf
sbb
mov
insl
dec
pushf
push
mov
pop
inc
sahf
cmp
test
mov
xchg
push
add
adc
into
cmp
dec
mov
pusha
mov
mov
in
and
bound
mov
hlt
mov
adc
sub
cs
int
mov
or
xchg
mov
dec
push
mov
fstps
add
pop
dec
mov
push
mov
mov
ja
push
sbb
daa
cmpsl
inc
ds
jae
out
mov
or
push
mov
push
jecxz
pop
stos
xchg
loope
mov
imul
and
rolb
iret
xor
fdivrs
mov
mov
dec
shlb
rclb
pop
cs
cmp
ret
lret
fidivrl
pavgb
jo
les
repz
xchg
jg
outsl
mov
adc
icebp
pop
push
lock
cmpb
dec
outsb
xor
scas
sub
std
lahf
inc
out
push
push
dec
or
jle
outsb
jb
mov
outsl
dec
leave
mov
hlt
xlat
fistl
data16
cltd
ror
test
xchg
and
pop
and
icebp
fwait
shlb
pop
shlb
mov
push
dec
push
mov
xchg
lcall
xor
lcall
or
inc
mov
ljmp
sbb
outsl
push
out
push
adc
fwait
out
imul
jle
or
sbb
xchg
in
cli
jnp
es
rcr
jo
int
fidivl
aas
xor
sbb
pop
inc
hlt
inc
xor
adc
std
iret
leave
dec
push
mov
dec
imul
jb
js
aad
call
jb
xor
push
shrl
cmpsl
pop
jl
mov
push
pop
je
mov
lret
pop
scas
fcoml
fisttps
cwtl
mov
dec
pop
push
movsb
pop
ss
xchg
jne
mov
repz
shll
cmpsl
jg
mov
icebp
mov
and
mov
push
nop
cwtl
shll
cs
sbb
xor
ss
mov
pop
or
loopne
loop
es
jg
mov
xlat
cltd
dec
in
cmp
loope
js
mov
aas
ss
mov
in
xor
xchg
aam
lods
xlat
ss
adc
pop
pop
dec
lahf
scas
ficompl
mov
out
bound
mov
push
shlb
xchg
fcompl
aad
fmul
scas
push
test
inc
pop
cmp
mov
repnz
arpl
mov
pop
xor
data16
loopne
sbb
sub
aaa
scas
shr
cltd
out
outsb
out
push
negl
push
cmp
cmpsl
es
pop
lahf
push
rorl
icebp
sub
adc
jecxz
xchg
fsubrl
mov
addr16
adc
dec
imul
cli
xor
pop
mov
xor
mov
int
daa
fisubl
addr16
addr16
fisubrl
jp
inc
ret
iret
out
stos
inc
sub
push
loopne
mov
lcall
testl
push
sbb
mov
rdtsc
lea
fldenv
fadds
mov
movsb
push
mov
mov
mov
xor
test
shlb
ss
andb
aad
stos
mov
insl
lods
mov
test
ret
aas
mov
pop
popa
arpl
in
aam
jae
sub
fcoms
and
std
leave
fistl
ret
ja
xor
icebp
mov
ljmp
mov
mov
inc
dec
rclb
outsl
adc
cmp
mov
lcall
fbstp
jno
push
mov
mov
movsb
and
push
adc
stos
mov
lret
dec
loopne
mulb
mov
es
adc
cmc
adc
sub
cvtps2pd
es
icebp
dec
rcr
cs
mov
xor
sahf
jg
xchg
jns
add
les
enter
ret
mov
cli
std
jb
mov
dec
mov
mov
rorb
rorl
dec
jns
sbb
in
fdivs
ds
addr16
dec
add
pop
inc
les
movsl
sbb
imull
mov
xor
push
mov
push
fdivr
movsl
xor
std
aaa
inc
movsl
dec
mov
addr16
loopne
cmp
repnz
jge
je
mov
sbb
jecxz
insl
jg
lods
enter
xor
cld
in
push
loopne
sbb
cmpsb
jmp
dec
sub
sub
pushf
push
fdivrs
inc
insb
jo
pop
lea
test
mov
fdivrl
cmp
pop
jne
mov
push
sbb
cmp
sub
cmp
jg
sbb
jo
mov
insb
add
dec
lahf
cmpl
ret
cmp
ds
and
mov
mov
dec
sbb
pusha
or
jmp
push
jmp
sbb
xor
inc
iret
push
ds
cmp
cmp
jnp
stc
stos
jnp
inc
lret
and
ret
inc
cld
hlt
add
ror
add
and
ss
adc
lahf
lea
fistps
push
sbb
mov
fstl
loop
test
loopne
pop
jp
push
je
daa
iret
leave
loop
stc
sub
mov
jg
int3
test
cmpsl
fxam
adc
xor
pop
popa
mov
adc
aaa
insb
out
sub
cmp
outsb
fstl
imul
xchg
mov
imul
stos
shlb
sarb
pop
push
pop
adc
stc
cmp
mov
bnd
push
sub
add
jmp
jbe
mov
lcall
inc
ret
or
pop
in
adc
jne
lds
dec
pop
and
and
icebp
les
sbb
cmp
push
cmpsl
lods
imul
mov
ficomps
cmpsb
push
add
pop
xor
aad
push
cmp
aas
dec
aaa
test
ret
xchg
or
fwait
rorl
rcrb
outsl
shlb
stos
mov
iret
in
jno
jmp
addr16
cmp
test
repnz
add
mov
mov
fs
cmp
aaa
sub
xor
sub
mov
jmp
add
xor
lods
jae
sbb
je
call
iret
aas
dec
push
cwtl
xlat
sbb
je
outsl
xchg
add
bound
mov
xor
xchg
inc
stos
cmp
push
push
insb
sbb
mov
call
mov
sti
lods
dec
xchg
imulb
mov
mov
ss
push
mov
jbe
pop
dec
cmc
daa
hlt
pop
lods
iret
nop
push
mov
push
hlt
in
mov
jbe
jae
cwtl
aas
int3
cmp
and
mov
rcr
nop
sbb
int3
repz
pop
mov
js
test
mov
and
cmpsl
out
notb
lods
fimull
mov
xchg
jns
mov
ss
push
lock
mov
fstpt
jp
out
imul
or
jae
fcoml
sub
dec
fidivrs
into
sub
icebp
and
jle
inc
in
dec
jg
sbb
mov
repnz
imull
xor
xchg
daa
xchg
imul
rcl
mov
mov
mov
add
loopne
pop
push
jg
adc
sub
sub
sub
or
scas
sbb
mov
movsb
lcall
add
or
and
mov
insb
ja
add
mov
cmp
push
jmp
lock
jae
aas
pop
xchg
int3
imul
pushf
add
mov
mov
dec
das
pop
xor
push
cld
cmp
push
sub
mov
cld
add
mov
mov
hlt
jecxz
insl
les
pop
aas
and
cmp
outsb
xorl
inc
xor
cmp
in
imul
push
or
xchg
test
into
xchg
sub
and
fisubrs
sub
adcl
mov
sarl
dec
fcompp
dec
lcall
lds
jl
ds
lds
ss
sbb
xor
inc
icebp
insl
shll
sub
cwtl
ds
mov
bound
subb
jp
sub
mov
inc
lock
xchg
and
roll
test
leave
mov
and
ljmpw
test
dec
mov
pop
fwait
xchg
fwait
js
dec
popl
int3
aam
dec
cmp
dec
sub
xlat
scas
inc
mov
jecxz
pop
dec
movlps
lcall
movsl
outsl
das
loope
inc
fsubrs
xor
dec
dec
clc
aad
int
sub
pop
mov
dec
adc
xchg
xchg
add
in
sub
xchg
sub
jb
les
push
inc
and
cs
loop
shlb
rcrb
jb
mov
ss
scas
ja
in
sbb
sbb
xchg
cmp
rcl
arpl
aas
insl
sbb
add
dec
xchg
outsl
idivl
and
fcmovnb
jo
or
mov
bound
fidivrs
cmp
int3
es
testb
jbe
push
das
mov
out
inc
hlt
iret
dec
sbb
imul
adc
xchg
rcl
in
mov
mov
mov
addr16
loop
dec
sbb
jae
xor
xorb
and
repz
addl
gs
loopne
in
std
add
roll
mov
add
data16
push
sahf
or
inc
jmp
mov
mov
loope
call
pop
pop
clc
xor
fs
sbb
pop
xchg
cmc
inc
jns
xor
lret
test
fs
ja
mov
mov
cmp
fbld
je
jmp
or
inc
jae
xchg
adc
bound
aam
hlt
sbb
mov
add
mov
stc
inc
lods
bound
and
mov
xor
sub
push
inc
fdivl
sahf
push
sti
mov
sub
sbb
cmpsb
cmpl
cmp
pop
insl
cmpsb
std
popf
std
nop
out
add
dec
fmul
mov
add
es
cmp
out
loopne
xchg
imul
jns
add
push
imul
rorb
daa
jp
in
aaa
and
mov
mov
sub
and
inc
fmuls
into
mov
mov
fisttps
dec
rcrl
and
cmp
insl
pop
imulb
test
dec
out
mov
sub
inc
cmp
push
cmc
mov
fimull
jmp
cmp
stc
pop
aad
les
nop
testb
imul
leave
sbb
push
mov
xchg
sbb
mov
in
sub
jae
fwait
es
pusha
out
in
jns
adc
dec
in
inc
xor
jae
sbb
repnz
arpl
ret
jmp
sbb
or
sub
xchg
rorl
xchg
sub
pmaxub
aaa
sbb
mov
mov
and
sbb
push
or
je
incb
dec
ds
and
adc
inc
nop
stos
lret
inc
and
pop
fdivl
mov
mov
sti
outsb
iret
xchg
lcall
mov
or
cmp
mov
jnp
sbb
lods
mov
div
lock
pop
leave
jnp
stos
dec
arpl
xlat
std
mov
mov
jne
jp
leave
pop
pop
add
test
pop
or
andb
dec
push
mov
sahf
shl
mov
cmp
sarb
xor
fisubs
aaa
pushf
scas
mov
xchg
scas
mov
sub
mov
fsubrp
xlat
cmc
cwtl
dec
out
sbb
mov
mov
mov
adc
outsw
leave
pushf
dec
add
dec
testb
pop
adc
fimull
cltd
push
inc
in
inc
mov
pop
repnz
lods
outsb
out
imulb
cs
aaa
cmpl
stc
jns
mov
sbb
loope
mov
dec
dec
fdivrp
lcall
cmp
sbb
mov
pop
mov
das
cld
repz
aad
ficoms
or
jmp
pop
repz
mov
dec
fwait
insl
push
imul
cmp
inc
mov
addr16
jb
jge
bound
stos
lcall
cs
jne
stc
je
xchg
bound
sahf
scas
mov
hlt
movsl
inc
daa
and
rcrl
sub
mov
ja
xchg
add
call
movsl
int3
xorl
inc
jae
ret
cltd
fistl
lret
pushf
pushf
cmp
cmp
sbb
pop
xor
aad
push
rorl
addr16
int
repz
push
push
test
dec
out
or
shlb
sbb
mov
jae
loop
popa
pop
xchg
cmp
push
imul
cli
sbb
cmpsb
testb
icebp
inc
hlt
xlat
inc
pop
mov
xchg
adcl
and
push
sbb
mov
jg
mov
popl
call
aam
pop
push
inc
xchg
adc
mov
bound
xor
jp
add
mov
lahf
xor
adc
ret
push
sub
cmpsl
inc
pop
dec
pop
mov
jo
rcr
out
int
push
push
push
aad
negb
clc
pushf
mov
sbb
lods
dec
xchg
je
sub
push
push
or
cld
push
in
jae
add
stos
pop
cmp
pop
arpl
iret
nopl
sbb
xlat
in
gs
stc
repz
sti
nop
fsubrp
insl
mov
test
dec
mov
jle
ss
sbb
sarb
pop
push
repz
cld
or
xlat
test
fsub
mov
pop
add
pop
sti
js
pop
jle
outsl
mov
aam
push
icebp
mov
sub
pop
xorl
std
into
cmp
sarb
mov
push
pushf
movsb
xlat
jae
daa
push
fiadds
hlt
push
mov
sti
dec
mov
ror
cmc
fwait
sbb
icebp
lock
rcll
clc
stos
jns
adc
andl
dec
movsl
dec
test
pop
or
or
lods
xchg
jmp
add
into
sub
sahf
and
xchg
movsb
mov
mov
ds
roll
stos
push
incl
dec
cmp
xchg
push
dec
sub
test
dec
jg
std
sbb
inc
pop
sub
movsb
cmovl
ret
xchg
cmp
cmp
mov
and
and
cmp
out
adc
clc
icebp
call
test
fcmovbe
jno
jb
mov
movsb
or
clc
shlb
cmpl
int3
adc
outsl
shrb
in
cmpb
daa
mov
jl
aad
mov
ss
jne
jmp
cmp
arpl
sbb
sti
lret
or
arpl
mov
adc
xchg
sbb
mov
dec
jge
icebp
test
in
dec
jg
xchg
pop
dec
mov
rcll
out
jne
arpl
mov
sbb
mov
sahf
mov
fucomi
mov
fsts
xor
or
jecxz
cltd
frstor
fcmove
daa
cld
pop
inc
pop
enter
jl
inc
mov
or
or
pop
loopew
ror
gs
or
and
xchg
adc
hlt
mov
jb
stos
push
scas
xchg
jns
mov
add
inc
popa
dec
gs
lret
xor
push
insl
ss
jne
repnz
mov
and
addr16
sbb
loopne
dec
in
jno
jno
rclb
xorb
push
cmp
xchg
pusha
push
popa
cmp
lods
leave
and
mov
jbe
lods
ret
rclb
or
mov
dec
fbstp
xchg
hlt
ljmp
lods
fildl
data16
adc
or
and
sub
xchg
and
jge
inc
bound
fisubrs
push
outsl
scas
and
js
cltd
push
lcall
sahf
js
sbb
fisubrs
push
xor
jmp
or
pop
add
and
in
cmp
fcoml
dec
shl
or
add
jo
add
dec
jle
shl
push
add
push
lret
push
pop
adc
in
adc
in
mov
xor
inc
andb
mov
xchg
and
sbb
stos
xchg
sbb
leave
dec
adc
adc
punpckhbw
jmp
ret
loop
push
inc
xchg
fcomps
mov
loopne
mov
mov
xchg
ret
mov
xorl
adc
sbb
inc
lcall
dec
sbb
fcomip
xchg
pop
lret
push
xlat
jp
fmul
das
push
add
xchg
sbb
cwtl
jbe
out
sub
jno
mov
in
stos
bound
mov
mov
in
sub
aas
rolb
leave
stc
iret
pushf
push
test
mov
lods
push
xor
jne
pusha
outsb
pop
cltd
push
mov
int
push
inc
mov
lahf
or
mov
or
dec
mov
into
mov
mov
sub
xchg
addr16
in
or
xor
int
ret
mov
mov
imul
das
push
xchg
jmp
ss
inc
ss
inc
cltd
cmpsl
jmp
sub
call
mov
jb
rolb
xor
hlt
dec
cmp
cmp
cwtl
adc
sub
mov
add
cltd
cmp
or
fisubl
or
inc
loope
lods
lea
sub
or
mov
pop
dec
jbe
pop
pop
pop
push
jns
mov
sarl
adc
lahf
mov
out
or
add
ffree
mov
pop
dec
mov
out
adc
and
or
adcb
and
xor
sbb
jnp
add
lret
add
sub
lock
rorl
pop
int3
and
adc
mov
ja
lods
in
pop
repz
mov
pop
lds
mov
dec
mov
push
pop
dec
js
inc
es
push
div
sbb
pop
mov
xchg
inc
pop
in
or
mov
dec
xchg
cmp
ret
sahf
pop
das
push
scas
mov
mov
mov
test
andl
pusha
stc
pop
dec
sub
out
fwait
cmpsl
fwait
or
sub
je
mov
cmpl
das
arpl
nop
sbbl
jp
sbb
mov
push
pop
jne
xchg
rorl
mov
adc
das
mov
xchg
dec
dec
shrw
sahf
cmpsb
or
pop
das
and
push
adc
mov
add
add
dec
daa
sub
mov
dec
mov
cmpl
xor
mov
xchg
lock
rol
sahf
sub
lea
mov
dec
and
add
outsb
jp
adc
cmc
nop
and
mov
ret
repz
sbb
loope
loopne
or
js
lods
sbb
jge
aas
xor
dec
xor
daa
push
sub
loopne
sbb
loopne
cltd
aad
dec
lret
imul
sbbb
inc
inc
mov
ret
stc
lahf
rcrl
sub
xchg
stos
adcl
adc
enter
adc
inc
dec
push
aam
push
loop
imul
cmp
push
mov
lret
add
inc
mov
out
push
decb
jo
jmp
mov
rcll
mov
inc
push
sbb
dec
push
pop
shrb
cmpsb
mov
push
fsts
sti
inc
test
inc
mov
jle
jne
fbstp
xor
push
pop
ljmp
arpl
jno
mov
in
std
lods
cli
les
mov
scas
loopne
sub
xchg
sub
cmpsb
cmpsl
xorl
iret
pop
lea
mov
cwtl
movsl
jl
inc
mov
ret
cmp
movntq
and
ss
iret
int3
addr16
in
mov
inc
mov
jg
push
mov
mov
jg
mov
flds
dec
push
push
rorl
xor
aaa
add
jge
mov
stc
mov
imul
push
and
jge
inc
pop
push
fsts
ds
stos
add
mov
cwtl
cmp
dec
movsl
mov
pushf
push
sub
aad
adc
inc
add
xchg
leave
scas
push
daa
jle
pop
sbb
add
fmul
cwtl
mov
add
inc
test
push
mov
jecxz
or
dec
rorb
cli
push
mov
rcrb
loop
test
into
mov
int3
enter
icebp
xchg
dec
das
adc
cwtl
pop
add
test
imul
sbb
inc
jp
adc
push
push
testl
xor
jb
jb
cltd
std
movl
pop
cmp
sub
sbb
jg
or
adc
das
xchg
pop
pop
lods
xchg
ds
aad
inc
jp
add
pusha
mov
lods
aad
fcmovu
mov
std
jmp
lret
jo
pop
and
push
fildl
inc
mov
pop
je
mov
jae
push
xor
pop
aad
adc
or
xchg
lds
std
dec
xchg
test
pusha
mov
rcll
cmc
shlb
adc
mov
and
repnz
fidivrl
out
mov
andl
jnp
mov
mov
inc
xchg
fwait
xchg
repnz
mov
mov
stc
cmp
cmc
ds
cld
outsl
dec
cli
sti
das
jo
ljmp
das
in
rorb
in
popa
dec
ds
cli
cmpsb
dec
sub
add
mov
cmc
sbb
mov
add
loope
fwait
repnz
xor
in
mov
cmp
mov
xchg
test
shl
sbb
sub
mov
jnp
mov
icebp
dec
repnz
pop
and
jl
jge
sbb
pop
sbb
test
andl
mov
xchg
in
addl
push
test
gs
xchg
add
popf
mov
xor
jle
rcl
or
dec
cmpl
mov
stc
aaa
enter
dec
ss
or
rol
and
insb
out
lret
fidivrl
incl
cmp
mov
sub
jg
fcomi
out
dec
xor
adc
mov
pop
addr16
cwtl
sbb
xchg
push
fcoml
sub
push
fs
outsl
xlat
hlt
sahf
mov
mov
cmpsb
sub
daa
icebp
dec
les
and
sub
popa
mov
or
lcall
sbb
xchg
cmp
mov
gs
in
in
or
movb
add
cmp
stc
inc
cltd
push
ds
aad
outsl
push
mov
xchg
mov
mov
outsl
stos
loop
in
push
sub
das
mov
cmp
call
add
jbe
sbb
or
xchg
bound
push
mov
xor
sbb
jns
ss
cli
int
out
jmp
push
shlb
xchg
cmp
call
pop
neg
das
sarb
xor
add
sbb
xchg
fists
jecxz
cmp
movq
test
inc
push
test
adc
dec
imul
sbb
sbbl
loop
or
dec
sub
mov
xlat
mov
xor
rorb
cmp
mov
data16
add
sub
xor
in
push
jmp
imul
adcl
sub
js
jle
sub
cs
cmp
popa
fwait
imul
fwait
mov
push
push
push
and
mov
add
push
mov
mov
ljmp
scas
jge
dec
jne
pop
jp
adc
loope
xor
jno
sub
xchg
insl
sub
rorl
cmp
sbb
loope
mov
pop
jns
int
lock
fiaddl
mov
inc
mov
mov
shlb
scas
js
add
and
add
sarb
punpckldq
loop
xor
jo
mov
daa
jecxz
push
xchg
jbe
push
adc
cmp
popa
stos
xor
and
jecxz
adc
jno
push
xor
loope
sub
adc
lahf
sbb
push
push
addr16
int
movsb
and
enter
xchg
outsb
push
push
inc
inc
test
sub
inc
int3
cmpb
adc
add
adc
mov
bound
out
sbb
jo
push
ss
js
and
sbb
cmc
fs
and
call
mov
xlat
cs
pop
scas
pop
mov
lea
push
pop
mov
les
lcall
pop
fsub
xor
sub
mov
adc
cmp
icebp
mov
lcall
in
addr16
mov
mov
sbb
inc
jl
lahf
sbb
inc
lret
push
repz
orl
cmp
test
aam
data16
stos
sbb
xlat
pushf
cmp
mov
sbb
cli
mov
xchg
stos
push
add
or
sub
push
aad
out
fldcw
sub
in
adc
mov
sub
pop
pop
push
dec
adc
daa
xlat
add
jns
enter
inc
icebp
sub
es
inc
sub
dec
jmp
cmp
inc
jg
sbb
xor
xlat
push
movsb
cwtl
iret
in
cli
jp
les
lods
cmpsl
lock
stos
repz
daa
adc
mov
pop
insb
insl
mov
mov
lock
jne
cld
aam
dec
sbb
or
adc
fidivrs
js
shrb
or
test
mov
clc
mov
xchg
push
sub
cmp
mov
or
subl
loope
repnz
les
int3
decl
lret
inc
dec
scas
jg
iret
fimull
or
push
mov
cmp
cmc
pop
pop
sub
ss
xor
mov
stos
dec
pop
mulb
mov
add
sbb
and
or
add
add
dec
jae
adc
mov
enterw
outsb
mov
push
mov
push
mov
sarl
adc
into
add
mov
out
jmp
lcall
mov
aaa
mov
movsb
dec
mov
int3
jle
aad
and
fiadds
arpl
pop
adc
mov
dec
inc
mov
inc
es
mov
clc
or
cmp
and
insl
filds
push
cmp
or
sbb
out
cmpsl
xchg
je
lcall
mov
mov
or
lcall
mov
or
aaa
adc
cmp
push
outsb
das
inc
sti
ror
jmp
xchg
adc
mov
mov
fdivrs
mov
imul
push
hlt
aas
int
fs
sub
aad
mov
cmpsl
les
imul
xlat
gs
test
xor
test
pop
xchg
jbe
adc
sbb
enter
lods
pop
int3
mov
mov
mov
fwait
sbb
cmpsl
xor
mov
lret
pop
sti
mov
ljmp
cmp
pop
and
push
ja
mov
xchg
ss
mov
add
in
dec
cmp
push
dec
sahf
push
adc
in
insb
cwtl
jne
es
hlt
lcall
and
jbe
scas
lret
dec
cmp
aad
or
mov
pop
mov
mov
cwtl
lcall
repz
inc
roll
or
loopne
shlb
sub
stc
lds
imul
mov
xchg
leave
xorl
xchg
pop
pop
loope
pushf
push
mov
inc
fmulp
enter
push
movsl
push
enter
out
xchg
arpl
or
rorl
or
fmul
pop
cmp
mov
sub
jge
and
ret
mov
mov
in
int3
fstps
psrld
dec
jns
ss
out
add
push
shlb
sub
aas
je
xchg
mov
test
inc
lods
rcrl
fwait
movsl
cmc
jnp
subb
icebp
and
push
insl
out
and
loopnew
cwtl
ljmp
ret
and
jo
sub
jmp
mov
dec
cmp
or
imull
jle
fstl
push
cmp
mov
mov
sbb
daa
ss
sub
sub
mov
aaa
aam
shrl
adc
pop
sbb
test
outsl
cli
pop
xchg
sub
outsl
sub
call
add
ret
xlat
cltd
out
je
orb
cmp
jbe
cmpsb
pop
popf
loopne
add
negl
add
ret
jl
jle
gs
ret
popa
adc
shrl
or
incl
aas
push
lods
in
jmp
xor
daa
fsubrs
xchg
sbb
stc
xchg
mov
xchg
jbe
ljmp
stc
or
sub
cmp
call
adc
test
pop
sbb
dec
jae
adc
cwtl
fucomi
inc
test
ljmp
repnz
movsl
xor
and
and
lret
out
jns
inc
or
jp
sub
cld
ffreep
jns
and
lcall
add
into
jo
inc
jb
dec
sbb
jbe
mov
in
das
mov
ficomps
in
inc
hlt
dec
mov
mov
push
dec
push
popf
les
in
adc
add
xor
cmpsb
pop
pop
daa
repnz
shlb
cld
jl
sub
adc
sbb
cmp
inc
in
adc
cli
jecxz
inc
inc
popa
or
sti
mov
scas
mov
stc
cmp
xchg
xchg
clc
or
xchg
sub
push
out
pop
test
xor
fcmovbe
sub
ss
div
jbe
stos
add
pop
repz
add
andb
fmuls
fcomps
pop
jp
push
insb
or
cmpsb
loope
xor
dec
incb
pushf
push
cmp
lcall
lods
ss
mov
out
shlb
sub
cld
sbb
push
aaa
pop
lods
sbb
push
addr16
jae
cmpsb
sbb
imul
add
and
xchg
clc
inc
mov
loopne
arpl
cltd
in
test
sub
xchg
movsb
sub
add
loopne
aad
insl
inc
xor
movsb
or
stos
or
cld
sti
sbb
jb
sub
fdivrs
xchg
adc
les
repnz
mov
mov
popl
mov
lcall
shlb
aad
inc
out
in
pushf
shl
push
mov
cmp
and
push
fbld
sbb
dec
adcl
hlt
mov
jne
aad
dec
xchg
mov
movsb
mov
xchg
das
icebp
xchg
push
sub
cmpsl
test
jne
shlb
push
jo
sti
lods
xchg
jg
pop
push
sub
prefetch
iret
adc
inc
xchg
cltd
shl
mov
push
sub
push
cmp
push
pop
out
mov
xor
or
pusha
push
movsb
and
inc
xchg
sahf
das
jne
mov
mov
fcom
fstps
xlat
ja
ficoml
int
test
adc
out
push
prefetchwt1
ljmp
test
dec
adc
jp
or
lock
mov
push
sbb
dec
enter
inc
add
inc
int
sbb
and
pop
jle
sub
sbb
inc
push
hlt
call
inc
lret
dec
int3
imul
nop
loopne
inc
dec
jae
mov
sti
loopne
out
cmpsb
add
xchg
mov
lret
dec
xchg
or
popa
mov
mov
adc
mov
inc
adc
sub
xor
sbb
cltd
or
adc
rorl
push
sti
or
rcr
sub
pop
test
fwait
jbe
cld
push
pop
xor
or
adc
push
pop
push
add
xorl
mov
sbb
mov
sarl
js
int3
ljmp
fs
jne
add
mov
jmp
std
das
xchg
dec
ja
sbb
jbe
inc
pop
fimuls
sbb
jge
fcmovb
pop
mov
jmp
mov
mov
add
mov
stos
inc
mov
ja
jne
insb
cmpsb
leave
mov
sbb
scas
fisubrl
mov
jns
das
je
inc
mov
jle
sbb
ret
mov
inc
adc
adc
adc
repz
rorl
clc
mov
mov
js
pop
sbb
cld
sub
cli
sbb
mov
add
push
mov
jmp
xchg
lods
push
cmpsb
ds
sub
xlat
pop
mov
and
jae
cmpsb
sub
ret
andl
cmc
das
int3
leave
push
or
mov
or
pushf
ja
xor
adc
int
add
in
inc
in
lock
ljmp
nop
cmp
cmpsl
dec
outsb
shl
rcrb
push
popf
imul
pop
push
jae
pop
adcl
mov
adc
jge
loop
sbb
out
mov
es
inc
cwtl
loopne
adc
dec
or
daa
mov
and
xchg
dec
dec
jns
imulb
lods
dec
cmp
outsb
shll
sbb
repz
xor
dec
xchg
cmpsl
jg
push
fstpl
mov
scas
mov
jbe
das
inc
xlat
push
push
sub
cltd
add
jae
outsl
ss
xor
xchg
ja
movsl
fwait
arpl
inc
mov
mov
inc
ja
xor
mov
xchg
sarb
in
inc
stc
data16
mov
rorb
sub
push
adc
xor
jo
push
test
push
xchg
jns
xchg
and
jge
lods
dec
xchg
push
sbb
jbe
js
and
or
lods
mov
idivb
or
sbb
sbbb
cmpsb
or
out
addr16
sub
outsb
fadds
rorb
push
lock
mov
mov
mov
insb
in
insb
cld
test
sbb
outsb
mov
cmp
sbb
or
pop
in
repnz
and
mov
xchg
fcmovb
in
lds
pop
xlat
les
les
xchg
das
xor
rcr
lea
stc
fcomps
push
mov
sbb
mov
dec
outsb
ret
sbb
push
addr16
and
addr16
cmp
mov
push
adc
push
ss
in
fwait
sbb
cmp
and
xchg
mov
cmp
mov
popf
cmp
pop
or
stos
shlb
push
cld
cmp
rol
mov
inc
loopne,pn
sbb
rclb
andb
pop
mov
cli
es
mov
lods
adc
std
dec
outsb
sbb
pusha
movsb
jmp
sarb
leave
test
mov
xchg
rorb
aas
orb
fidivl
xchg
inc
inc
das
add
jbe
jno
adc
arpl
inc
out
sbb
stc
les
fadds
dec
jle
xchg
cs
pusha
testb
sbb
pop
in
rcll
dec
insl
adc
scas
in
ret
xchg
mov
xor
pop
test
xchg
jnp
inc
push
pop
mov
sarb
mov
test
xlat
xor
popf
in
clc
or
push
shll
fildll
ret
jmp
lret
push
add
and
jmp
jns
test
or
fnstcw
push
xchg
sub
mov
xor
sub
lret
in
mov
jno
sar
and
mov
or
or
stc
aaa
push
push
in
adc
ret
push
xchg
je
cmp
or
enter
mov
into
sub
dec
jge
mov
testb
pop
repnz
or
xchg
repnz
pop
mov
lcall
arpl
pop
dec
pop
mov
ds
cmpsb
scas
fisttps
xor
mov
or
mov
je
adc
imul
iret
imul
push
mov
push
gs
test
add
jae
cli
add
clc
inc
mov
cmp
gs
cwtl
adc
repnz
insl
arpl
out
rorl
pusha
cmpsb
pusha
dec
ss
test
mov
mov
jno
sbb
xor
and
or
pop
mov
inc
or
js
les
subb
test
inc
lock
pop
push
pushf
push
aas
cmc
adc
sbb
push
sub
out
pop
shl
stos
xchg
jle
xor
repz
movb
lahf
fstpl
inc
arpl
es
mov
je
and
pop
cmp
xor
mov
inc
leave
ss
sbb
leave
and
daa
loop
loopne
aas
rolb
dec
clc
cltd
sub
mov
xchg
add
mov
fistps
xchg
xlat
inc
data16
cs
outsb
cmp
mov
sub
sysexit
pop
mov
testl
ss
add
popa
add
cld
adc
data16
dec
inc
mov
inc
push
mov
fs
sahf
test
nop
push
icebp
clc
ja
mov
incl
int
mov
and
or
pop
xchg
std
and
pop
aad
out
rclb
lahf
cmpsl
push
cmc
pop
movsl
js
pop
mov
into
push
and
das
mov
test
and
mov
lods
lahf
int3
fidivrl
test
loopne
shlb
and
ljmp
lock
ljmp
std
sub
lods
sbbl
add
lock
cmp
sarl
pusha
fistpll
daa
adc
aaa
add
xlat
jge
roll
std
inc
or
call
mov
sahf
fidivrs
xor
andl
adc
pop
xchg
push
inc
cmp
inc
fildll
mov
mov
mov
testl
xchg
mov
in
stos
xor
and
push
aad
dec
fcom
scas
arpl
add
sahf
rcrl
rorb
add
pop
mov
xor
push
aam
and
test
pop
jnp
movsb
xor
xor
dec
shlb
icebp
lds
mov
cmp
inc
mov
outsb
into
sub
pushf
mov
nop
je
pop
or
mov
icebp
divb
cmpsl
inc
mov
inc
sub
in
push
add
mov
push
test
fprem1
out
pop
cltd
pop
dec
addr16
adc
push
or
and
mov
dec
or
lret
xor
mov
inc
mov
std
cmp
add
or
shl
and
mov
fcoml
lods
and
xlat
outsl
es
test
cmp
sbb
pop
leave
cmp
sti
xor
scas
mov
icebp
or
hlt
mov
add
fwait
popf
mov
dec
insb
dec
mov
lcall
outsb
sbb
test
pop
or
cmp
call
imull
add
popf
mov
fstpl
aas
fisttpl
pop
dec
gs
icebp
xchg
xchg
and
xchg
add
xor
adc
into
cmpsl
mov
pop
push
cmpsl
arpl
insb
mov
cli
xor
sub
into
sub
add
rcrl
mov
push
pop
adcb
ljmp
xor
mov
adc
dec
jl
cmc
sub
jl
push
in
pop
xor
xor
shlb
lahf
fnstsw
dec
or
sti
leave
dec
aad
in
sbb
int3
xchg
mov
sub
push
add
ficompl
mov
mov
xchg
subb
mov
pop
mov
fwait
inc
mov
js
pusha
stc
inc
inc
adc
ficomps
sub
mov
push
or
jne
ror
out
jne
cmpsl
clc
ret
jb
loopne
scas
pop
imul
fmul
cltd
mov
adc
jmp
inc
mov
pop
and
push
cli
and
lock
sbb
loop
imul
mov
cmpsl
add
jg
add
or
ret
jle
ret
fmuls
and
push
or
stos
popf
cmp
daa
xor
jb
sti
jmp
fcoml
adc
test
imulb
mov
out
icebp
cs
push
fnsave
cmp
sbb
pushf
inc
push
lds
xchg
loop
out
cmp
add
sbb
adc
xor
xor
add
and
aam
and
enter
adc
mov
and
insb
lods
dec
or
dec
movsb
je
loopne
lock
push
aam
ljmp
jae
enter
push
sub
add
test
sub
out
pop
push
xchg
pop
mov
fstpt
mov
test
mov
inc
je
inc
lea
enter
ljmp
scas
xchg
jno
dec
stc
mov
mov
js
cmc
icebp
or
mov
push
lret
sub
xchg
pop
cmc
adcl
lods
movsl
imul
push
xor
sub
cmp
lods
adc
addr16
imul
xor
add
jle
jge
mov
enter
outsl
or
xor
or
push
cmp
dec
cmp
and
mov
dec
dec
ds
xor
adc
mov
sbb
test
push
sub
add
push
adc
daa
inc
in
xor
not
fdivrl
sub
in
aaa
pop
dec
xlat
mov
pop
add
aam
mov
aam
js
out
xchg
repz
pop
xor
enter
xchg
push
ficompl
sbb
pop
repnz
adc
mov
push
rclb
insl
ja
fidivrs
popf
ljmp
enter
mov
cli
fsubrl
sbb
xchg
pop
ficoml
inc
ja
xchg
std
out
mov
ja
inc
jmp
in
jmp
mov
lret
js
sahf
into
cld
mov
jecxz
fsubrl
push
push
sub
aas
add
and
xor
mov
mov
add
daa
mov
cwtl
js
xchg
fisttps
mov
inc
dec
call
mov
mov
aad
ret
sbb
mov
sub
sub
cs
test
sahf
fldt
mov
stos
or
leave
out
mov
xor
lods
scas
jmp
aaa
inc
addb
movsb
repnz
push
and
dec
les
imul
xlat
add
xchg
sti
or
adc
and
je
lcall
sbb
push
xor
cmp
out
clc
xor
sbb
test
loope
mov
in
add
addr16
mov
pop
call
cmpsb
pop
xor
imul
rclb
xchg
sarl
pop
stos
jp
insl
cmp
cltd
push
lret
fsubs
in
mov
outsl
add
push
inc
popa
xchg
and
scas
cmp
and
js
jecxz
cmp
outsl
jmp
inc
cmc
cli
mov
xchg
ja
stc
loopne
mov
insl
inc
adc
mov
adc
sub
dec
out
pop
or
scas
mov
pop
xchg
stc
outsl
es
imulb
stc
in
jmp
sbb
xor
lods
mull
bound
fbld
sub
popl
xor
call
daa
pop
jmp
jo
cmp
std
or
mov
adc
fdivrs
repnz
mov
adc
sub
repz
cmp
jb
sti
add
aad
out
out
cs
fwait
in
sub
sbb
subb
or
ja
mov
mov
fimull
fsubp
xchg
fstp
stc
sub
jo
sbb
mov
push
js
out
dec
adc
int
add
jbe
adc
nop
adc
mov
fstps
lock
test
lea
popa
jle
inc
xor
lock
and
pop
adc
mov
jb
push
pushf
loop
add
fs
mov
shrb
jmp
rcrl
dec
adc
lds
mov
test
push
hlt
lcall
or
sbb
mov
cmp
sbb
jmpw
ja
fmul
fidivs
inc
sub
inc
js
jl
test
stc
je
pop
dec
dec
adc
lahf
gs
jg
les
in
jle
das
dec
aas
lahf
pop
mov
repz
lcall
mov
inc
out
pop
int3
aaa
cwtl
lahf
inc
jg
fisubrs
mov
je
pop
mov
xchg
fcmovne
push
lret
stos
jnp
test
aas
call
call
xor
aas
add
imul
push
mov
lods
or
mov
das
mull
xchg
movsb
cmp
pop
ret
mov
adc
imul
mov
push
movsb
and
insl
ror
mov
and
mov
and
mov
cmpsb
lock
push
xor
lahf
jb
push
push
and
loope
movsb
push
mov
scas
fucomi
cs
mov
pop
ret
in
sahf
sbbl
mov
inc
sbb
jp
inc
or
icebp
xor
push
xor
icebp
sbb
mov
rep
and
das
repz
mov
cmp
fisttpll
mov
fdivl
in
sbb
mov
fisubs
sbb
cmpb
mov
jg
inc
mov
mov
nop
sti
scas
jb
mov
cs
movsb
dec
repnz
mov
popa
mov
and
fnstenv
popa
mov
fdivrs
pusha
push
iret
push
imul
push
sub
mov
outsb
and
jno
mov
sub
stos
add
outsl
clc
mov
out
cli
push
mov
push
sub
imul
pop
xor
cmpsb
mov
push
fstpl
daa
sub
ja
lock
inc
repnz
iret
clc
and
mov
jl
ficoms
inc
push
pushf
aam
fistpl
sbb
ficomps
mov
fcmovb
popf
pushf
mov
fisubrs
mov
xor
lods
mov
stos
insb
fstl
aam
movsl
inc
fildll
lds
in
dec
iret
aam
test
test
out
and
mov
inc
bound
mov
sar
jnp
cmp
mov
or
add
clc
mov
inc
pop
ffree
inc
and
fistpl
dec
imul
je
inc
hlt
jp
into
vmread
jne
push
fcomip
and
xchg
fsts
add
ds
xchg
pop
movsl
int3
and
test
popf
inc
data16
insl
js
pushl
std
xchg
out
xchg
mov
lret
mov
adc
add
sub
fistl
sbb
stos
aad
fwait
jge
test
xor
mov
cmp
movsb
cs
in
sbb
pop
inc
pop
mov
cmp
imul
xor
inc
xchg
sahf
fcmove
fimull
outsb
mov
sbb
fmulp
cmc
jmp
pop
pop
xchg
or
pop
ret
push
push
cmpsb
lods
dec
je
lret
push
mov
xor
and
jbe
cmpsb
mov
daa
and
jnp
jle
lret
packssdw
hlt
inc
movsb
mov
or
adc
and
pop
pop
lcall
xchg
and
lea
ljmp
cltd
cli
mov
je
xchg
in
test
mov
test
les
mov
adc
sub
sub
aaa
aaa
in
adc
mov
cmp
into
cmpb
or
into
xor
sbb
orb
sar
ret
int3
test
adc
xor
cmp
sbb
icebp
add
jne
insb
fwait
shr
repnz
mov
adc
jb
inc
pop
or
xor
jmp
xchg
mov
jle
addl
mov
push
dec
iret
push
inc
enter
std
mov
into
ss
mov
sbb
rorl
jb
sbb
in
jle
js
xor
fildll
testl
jns
fildll
aas
call
or
arpl
lods
cmc
pop
xchg
lret
mov
mov
ljmp
outsb
jae
jg
vdivss
xor
inc
scas
fwait
gs
mov
mov
fcoml
xor
jle
xchg
in
pop
jp
call
and
push
stos
push
inc
sub
xor
adc
adc
mov
ret
sbb
lods
jnp
add
orb
inc
es
in
pop
dec
xchg
mov
sbb
ljmp
cmp
lcall
xor
or
dec
mov
cmp
add
sbb
sub
cmpsl
mov
cltd
jne
push
sub
pop
loop
jno
lock
int
out
lds
notl
push
mov
mov
out
mov
adc
popf
inc
push
mov
popf
lret
dec
mov
jno
and
es
hlt
adc
cmpl
jg
out
xchg
lods
pop
sarb
jae
pop
addr16
out
in
jp
pop
inc
push
mov
inc
fstl
fdivs
push
fiaddl
inc
scas
xor
jns
push
cwtl
xor
mov
mov
jae
sahf
sbb
sub
out
adc
mov
cs
mov
mov
mov
pop
loop
cmpsb
inc
jmp
sub
fdivl
arpl
outsl
out
pushf
xchg
pop
repz
xor
dec
jne
repnz
pop
repnz
adc
push
out
push
add
pusha
cmpsb
ret
push
add
mov
mov
jmp
mov
mov
paddsw
ffreep
xchg
mov
jge
sub
mov
aaa
push
or
jl
sti
sbb
sub
mov
sub
std
int
pop
dec
sbb
or
test
jge
movsb
arpl
in
lret
mov
cmpsb
stc
imul
or
fildll
imul
pop
xor
ja
fdivrs
add
test
mov
jmp
lods
pushf
repnz
sub
sbb
clc
jle
stos
iret
mov
cmc
jne
sub
or
jno
dec
loope
aas
jl
jp
mov
dec
jl
stc
push
imul
in
and
mov
push
mov
in
mov
jmp
or
imul
cmpsl
icebp
mov
inc
out
mov
stos
imul
pop
push
jge
jl
xor
arpl
mov
jnp
cltd
sub
cli
std
jno
add
push
sbb
cmp
jne
sti
decl
sar
scas
dec
jno
xlat
push
sarb
loopne
scas
les
or
push
and
int
and
popa
dec
sbb
mov
xchg
ds
jecxz
insb
pop
sbb
inc
xchg
je
cmp
adc
icebp
sbb
push
xor
jno
jne
shlb
lea
sahf
popf
rcr
imul
int
jle
jle
mov
xorb
pop
test
add
test
iret
addr16
scas
sti
fsubl
das
fwait
cmp
push
xchg
loopne
push
rcll
icebp
push
fwait
popa
popf
pushf
repz
scas
lods
push
outsb
cmpsb
and
frstor
loope
je
shrl
aaa
sub
mov
mov
mov
dec
xchg
sub
jnp
mov
int
adc
lds
sti
xchg
data16
mov
out
add
loopne
push
push
cmp
stc
cmp
icebp
outsl
mov
mov
or
enter
mov
pmaxsw
cltd
rcrb
into
sub
incb
rcrb
jb
sahf
mov
xlat
bound
popf
adc
pop
cmp
pop
xchg
pushf
jne
mov
cmp
test
dec
in
push
adc
xor
insl
jecxz
dec
lods
sbb
pop
push
aaa
pop
loopne
mov
pusha
out
cltd
mov
ror
dec
fcomp
add
fadds
adc
sbb
adc
cmp
pop
pop
std
int
sub
add
call
jb
xor
pop
sbbl
pop
pop
test
mov
jbe
pop
push
mov
imul
es
xor
mov
jg
cs
xor
or
in
out
adc
mov
test
daa
fucomi
push
jae
fiadds
jecxz
sub
push
aam
imul
sub
rclb
icebp
push
mov
fdivrs
mov
sub
lock
adc
sub
jb
aaa
cmp
enter
gs
popf
push
imul
int
xor
sub
into
dec
or
fisubl
xor
push
jl
mov
pop
or
in
jecxz
mov
fs
pop
in
add
xchg
cli
jle
push
neg
dec
inc
je
and
pushf
cmp
dec
outsl
and
inc
xchg
cmc
jae
insb
call
xor
add
rep
xor
pop
rcll
stc
xchg
int
lods
fld1
jb
dec
aad
pop
pop
orl
sub
push
xlat
jns
dec
xchg
fiaddl
mulb
xor
sbb
mov
pop
sbb
inc
push
mov
xchg
jge
xchg
cmp
das
dec
mov
xlat
addr16
js
test
inc
inc
inc
arpl
cmpsl
mov
loop
inc
dec
les
mov
enter
inc
sar
gs
lds
shrl
and
fsubp
pop
sbbb
cmpl
xchg
push
outsl
cld
pop
out
add
jae
shr
xor
sub
pop
cmp
and
rcr
lret
movsl
notl
sub
test
std
int3
jb
test
sub
pop
push
shrl
out
mov
leave
lcall
test
pop
fdivrl
sti
test
subb
lahf
repz
pusha
in
lcall
push
outsl
jns
data16
pushf
into
ja
sqrtps
divl
icebp
leave
and
mov
and
mov
insl
mov
sahf
cmovo
sahf
push
jae
dec
ja
lods
sub
cmp
sub
cmc
lcall
jg
pop
or
xor
sbbl
mov
xchg
iret
stos
or
push
cmpsb
inc
dec
adc
icebp
fwait
mov
jns
mov
xchg
imul
daa
jg,pt
mov
test
test
imul
xchg
jg
mov
add
add
mov
lds
popa
in
push
pop
in
mov
int3
arpl
in
lahf
and
ljmp
sub
sub
pop
inc
mov
add
sti
jle
es
dec
data16
dec
inc
pop
and
adc
outsl
lret
mov
aaa
mov
pop
push
sbb
faddp
jle
mov
dec
sti
and
les
xchg
ds
out
or
or
mov
mov
xor
test
cmpsl
ds
mov
leave
in
and
cli
push
fwait
into
xlat
jg
outsb
mull
out
cmpsb
dec
cmp
pop
mov
outsl
push
cmp
pusha
or
dec
lods
adc
sbb
jno
daa
fsubrp
cmc
mov
or
fstpl
orl
sub
mov
push
mov
test
xor
or
outsb
shll
add
lock
push
faddl
jbe
jns
push
aas
cli
sbb
pushf
cmp
mov
pushf
inc
ficomps
stos
xchg
aaa
or
mov
jl
ret
out
dec
notl
or
sub
pop
cmp
scas
sbb
int
loop
outsb
dec
jl
xchg
dec
int
sub
in
push
into
cld
test
or
das
xor
fmul
das
pusha
mul
daa
and
call
pop
or
jge
add
out
lea
mov
movsl
sbb
adc
imul
adc
imulb
in
and
je
adc
pop
das
fisttpll
fstpt
lock
out
cmp
push
xlat
ss
data16
lcall
or
js
iret
add
es
cwtl
mov
xor
jl
sub
outsb
push
je
add
adc
inc
adc
cmp
scas
ficoml
dec
stc
push
mov
lret
mov
sbb
adc
in
mov
push
test
daa
inc
jb
xchg
pop
push
loope
sbb
faddl
cmovg
jo
and
cmc
jg
mov
jno
pop
cmpsb
and
mov
mov
mov
sbb
mov
fcompl
lret
push
shlb
add
repnz
xchg
sbb
xlat
mov
mov
dec
mov
jg
jle
shrl
decl
in
xchg
jl
inc
ljmp
outsl
test
std
inc
mov
mov
cli
iret
xchg
rcrl
pop
mov
aad
sbbl
testl
or
subb
stos
iret
push
push
mov
loope
lahf
lret
pop
mov
push
dec
inc
cmpl
mov
jne
pop
inc
test
inc
movsl
out
sbb
pop
xchg
ret
add
xchg
lldt
push
cmp
movsl
push
dec
dec
add
test
adc
mov
mov
loop
sbb
loopne
aas
xchg
int3
and
fs
cld
dec
ret
fmul
arpl
xor
cmp
inc
leave
andb
fldcw
xor
popf
loop
push
push
sub
push
mov
stc
out
jae
fwait
cltd
scas
sub
out
dec
cld
movsl
mov
sbb
inc
popf
test
aam
je
icebp
mov
and
sbb
lds
ljmp
cli
dec
dec
cmp
xor
aas
fisubs
dec
jg
lods
iret
or
mov
test
bound
jmp
or
mov
ret
push
outsl
add
addl
fnstsw
addb
mov
mov
sbb
icebp
into
nop
pushf
pop
lods
or
push
rcrl
push
add
data16
mov
sti
loope
int3
cltd
mov
sub
inc
push
cmc
int
add
mov
mov
test
xchg
inc
cltd
pop
movsl
rolb
push
popf
jmp
addr16
sub
or
sbb
xor
xorb
push
add
and
or
xchg
xlat
push
jbe
or
cmp
adc
mov
sub
fisubrl
fisttpll
loop
in
call
adc
jle
xchg
or
call
ljmp
jns
inc
je
mov
jp
pop
test
fucomip
adc
mov
cmpsl
daa
mov
enter
data16
push
jmp
push
jb
arpl
gs
les
lds
es
xor
clc
add
rcr
dec
in
push
jbe
cmpl
or
stc
hlt
popf
pop
sub
in
push
fwait
sub
sub
sub
mov
add
loope
imul
cmpsb
imul
jne
aam
loopne
push
scas
mov
push
xchg
mov
ss
aas
or
jl
cmp
fnstsw
sbb
mov
adc
xorb
push
mov
push
and
mov
scas
jge
and
or
movsl
xor
xor
mov
xor
dec
jns
mov
cmp
cmp
adc
idivl
sub
sbbl
mov
gs
test
loop
cltd
jle
jecxz
mov
sarl
int3
scas
int
cmp
pop
xchg
iret
out
xor
cmp
js
les
ljmp
sub
jae
jno
ficompl
in
sbb
xor
pushf
xchg
fucomp
lahf
xor
test
mov
rcrb
jne
add
fcomps
or
fiadds
mov
repnz
test
inc
insl
mulb
pop
cmp
jmp
cmp
lods
loope
data16
push
push
mov
pop
adc
mov
sbbl
mov
cmp
sub
sub
mov
dec
jnp
dec
stos
xor
pop
or
sub
gs
pop
in
sub
and
bound
push
adc
or
inc
inc
adc
xor
dec
pop
lock
shlb
out
jns
cs
add
dec
dec
movsb
andl
inc
mov
arpl
je
faddp
inc
push
lret
je
jp
test
cmp
push
scas
or
rcr
rcl
sub
sbb
in
cmc
or
mov
mov
sbb
jl
cs
out
shlb
mov
and
add
cmp
xchg
dec
inc
aad
rorl
sub
add
lret
add
and
int3
sub
fwait
mov
and
imul
push
les
xchg
bound
aas
jle
jl
xor
mov
add
push
cli
out
jmp
jg
and
ja
insl
add
stos
xchg
imul
adc
flds
sbb
mov
mov
and
out
cli
inc
jo
fdivs
lea
pop
and
imul
pusha
inc
sbb
in
adcb
cmpsb
cmp
or
repz
mov
in
pop
data16
inc
into
mull
xlat
xor
add
lret
fprem
fsubrp
xchg
sbb
pop
cli
sub
push
shl
mov
bound
imul
push
in
addr16
mov
jno
notb
insl
xor
mov
cmp
dec
or
mov
out
insl
xor
mov
add
pop
mov
mov
sti
add
fmul
xor
js
jg
aaa
movntq
xor
mov
lcall
or
in
imul
rclb
aam
add
test
push
sbb
iret
push
lret
mov
in
or
sub
test
in
inc
add
jl
outsl
in
push
popf
in
jge
push
pop
das
mov
fwait
cli
aaa
xchg
add
pop
xor
mov
ljmp
lods
arpl
push
movsl
mov
xor
add
dec
add
xchg
jbe
repz
adc
ud2
addr16
decb
dec
sub
leave
sahf
insb
add
mov
outsb
ret
loop
roll
divl
inc
stos
xchg
push
frstor
orl
sahf
jns
pop
or
adc
xchg
xchg
inc
push
dec
aaa
stc
mov
shl
loop
jmp
sbb
jecxz
stos
jmp
insb
aad
into
shrd
fildll
mov
lods
imul
jne
lods
mov
daa
ss
sbb
sti
or
jbe
push
loopne
mov
loop
and
add
mov
repnz
mov
loopne
xlat
mov
mov
cwtl
outsb
int3
mov
cwtl
push
fs
sbb
lret
mov
mov
inc
lock
jae
out
cmp
push
mov
fidivs
push
cmp
cli
or
cmp
call
inc
xchg
lea
sbb
js
pop
or
scas
mov
sbb
movsl
cltd
mov
incb
cmp
mov
fdivrl
xor
outsl
sbb
pop
fimuls
jmp
or
inc
jno
add
mov
lods
pop
mov
lods
js
jle
jb
inc
mull
adc
cmp
add
dec
fsubs
fdivs
pop
jnp
inc
outsl
fs
sub
dec
xchg
movsb
dec
jmp
jns
mov
mov
mov
ret
sbbb
inc
test
cmc
test
lods
popf
int
jg
mov
pushl
mov
fimull
and
dec
idiv
imul
and
pop
sarb
loope
xchg
cmp
sub
js
loope
dec
mov
cltd
adc
mov
and
xchg
jl
jno
pushf
sbb
inc
inc
push
icebp
inc
cmpsl
andb
pop
pop
cmp
sbb
ret
mov
negl
jnp
sbb
and
push
outsb
lea
frstor
cmc
es
sahf
xor
mov
into
and
xchg
mov
outsb
mov
pusha
cmp
jge
add
pushf
fcmovb
inc
cmpsb
cld
lods
fcoms
mov
xchg
jbe
push
out
push
iret
cmp
vmovdqu
ret
xchg
pop
cmpsb
das
push
addb
stc
jmp
or
popa
cmpsb
sti
pushf
mov
je
xchg
les
xchg
adc
jge
fcompl
push
cld
popf
xchg
test
cmp
aas
jp
repz
sbb
mov
inc
iret
mov
xor
arpl
jns
cs
jae
push
imul
mov
mov
mov
lret
inc
imul
or
xchg
push
movb
popf
push
and
push
add
lcall
shlb
sub
push
cmc
fwait
jg
cmp
add
mov
jge
cs
xor
sahf
jo
aam
mov
cmp
ljmp
scas
enter
imul
sbb
in
out
adc
icebp
or
xchg
fcomi
adc
push
mov
push
pop
sub
push
scas
cmp
popa
int3
push
mov
int3
insb
pminsw
outsl
mov
pop
arpl
push
fistl
jnp
mov
scas
fsubrs
inc
sub
loop
stos
out
or
adc
mov
ja
and
cmp
sti
lret
push
inc
imul
movsb
sub
mov
adc
aas
shll
lahf
xor
inc
push
js
leave
je
popa
out
sbb
or
pop
dec
lret
lret
lock
je
clc
or
lea
add
cwtl
into
mov
subb
mov
popa
rolb
cmpsl
jg
dec
sub
push
daa
das
or
loopne
loop
push
fists
mov
push
call
mov
movsl
stos
jnp
xchg
cli
stos
fwait
lods
in
mov
ret
pusha
stos
bound
mov
repz
push
test
jecxz
fnstsw
mov
subl
add
cli
mov
lea
ss
lahf
loop
inc
xchg
insb
fwait
into
cmc
in
aaa
pop
dec
sti
cwtl
rorl
sub
idivb
into
or
aaa
mov
xchg
imul
lea
push
or
adc
add
into
test
mov
push
xor
sar
and
insb
xlat
cmpsl
xchg
mov
inc
adc
lahf
loopne
jg
mov
scas
mov
sbb
fdivrs
in
aaa
mov
or
xor
sar
xchg
mov
xlat
dec
in
ret
je
imul
cmpsl
cli
jle
jne
xchg
mov
sub
push
sub
fwait
push
push
sahf
lcall
dec
adc
mov
jge
int3
cld
test
cmp
sub
leave
enter
jae
fbld
out
roll
cmp
xor
and
push
clc
pop
sub
cli
fcoms
inc
or
test
sti
mov
mov
add
je
outsl
adc
pop
mov
aaa
lcall
mov
add
daa
out
jnp
aad
leave
shll
sub
hlt
aas
fadd
dec
cld
sub
inc
push
mov
aas
je
xchg
out
inc
mov
cs
push
rcrb
mulb
adc
test
gs
lret
test
nop
mov
daa
mov
cwtl
jecxz
pop
sub
mov
incl
jecxz
pop
loop
pop
pusha
loopne
ret
ds
push
mov
clc
lods
ret
stc
xchg
leave
es
mov
sub
movsl
fsubrs
xor
jne
into
add
lret
or
stos
cmp
cltd
xchg
dec
stos
mov
push
lret
and
sbb
pop
out
in
mov
imul
and
scas
cmp
mov
dec
lods
nop
test
add
sbb
or
stc
push
jecxz
scas
xor
fldt
dec
sarl
popl
jbe
rclb
sub
mov
stos
movsb
adc
inc
out
dec
mov
pop
mov
call
cwtl
in
stc
inc
xchg
out
jmp
ret
sbb
mov
in
cld
in
gs
cmp
jg
movsb
mov
hlt
jecxz
jb,pn
stos
or
pop
sbb
adc
mov
inc
adc
jge
daa
fs
cmp
arpl
scas
testl
pusha
mov
imulb
dec
sub
pop
ss
dec
xor
sub
mov
fdivrp
pop
int
call
or
mov
cli
or
rclb
lock
adc
pop
xorl
in
push
xchg
lcall
xor
cmc
and
xor
out
ljmp
or
jg
sub
mov
push
sbb
flds
pop
mov
shll
cmpsb
add
fdivrs
aad
push
mov
mov
cmp
mov
cmp
andl
fmuls
jge
xchg
xor
repnz
mov
gs
xor
xchg
jbe
dec
add
lods
dec
and
and
lret
mov
in
adc
addr16
push
pusha
xchg
jmp
bound
mov
dec
lahf
shll
mov
mov
ret
mov
xchg
pop
mov
stos
add
adc
pusha
cs
shlb
inc
fiadds
in
in
es
movsb
fiadds
sarl
inc
pop
push
aam
mov
xchg
xchg
fcoml
jns
push
and
lods
cmpsl
pop
sub
adc
xor
shl
or
xorl
pop
out
push
shrb
mov
mov
and
insb
jne
imul
imul
fidivl
jno
or
lds
cltd
in
imul
fiaddl
pop
into
filds
jle
jp
xor
add
in
xchg
lods
xlat
inc
rcll
lret
rcrb
aas
es
jnp
ljmp
psrlw
add
xor
push
lds
or
decb
iret
repnz
iret
adc
cmp
loope
stc
jg
sbbl
sbb
adc
daa
cmpsb
repz
lret
mov
ret
data16
lods
or
testl
jne
cwtl
push
shl
xchg
jmp
sbb
fwait
mov
cmp
int3
repnz
jb
stos
popl
aas
rorb
sti
mov
mov
das
cld
addl
lock
or
sub
aas
aas
mov
sub
xor
inc
bound
or
pop
dec
jns
pop
add
pop
loope
mov
push
pushf
es
adc
mov
test
mov
xchg
mov
jae
cwtl
dec
xor
adc
mov
aas
imul
loopne
mov
dec
cmpsl
cmpl
lea
dec
in
jge
data16
xor
subb
test
or
sbb
cmp
imul
mov
inc
das
pop
push
inc
shrb
fcoml
ljmp
mov
push
into
ss
jbe
jp
aam
sti
xor
push
ljmp
mov
cmp
inc
pop
notl
imul
xor
xor
mov
inc
mov
mov
cs
addl
test
fdivrs
adc
sub
cmp
xor
lcall
xchg
nop
pop
loope
je
jno
int
dec
mov
push
sbb
xor
cwtl
mov
arpl
enter
mov
repnz
push
push
test
add
daa
mov
ret
sti
push
arpl
or
inc
lods
popf
jno
add
repz
and
jne
dec
inc
xlat
and
test
iret
mov
jecxz
mov
cmpsb
dec
mov
inc
in
fldt
xor
fwait
roll
or
jne
sub
add
dec
pop
mov
mov
stc
xlat
mov
aad
inc
cmpsb
fwait
test
cltd
push
std
aaa
test
enter
jp
pop
in
mov
imul
out
cs
sbb
test
lahf
mov
movsl
in
cmp
ljmp
and
popa
sbb
aam
bound
push
inc
pop
sub
push
jl
loop
nop
iret
dec
cmp
rcrb
sbb
dec
xorb
add
jbe
sbb
int
rclb
xor
add
sarb
popf
ljmp
push
out
repnz
jg
js
imul
inc
in
movsb
pop
sbb
pop
je
lret
jl
mov
jbe
inc
outsb
call
pop
cmp
cmp
push
imul
push
ss
mov
mov
inc
lea
lcall
repnz
fisttps
adc
mov
fdivrl
xchg
loopne
xchg
imul
jle
stos
movsl
out
and
aaa
push
iret
push
jle
push
call
sbb
jmp
cmp
cwtl
pop
xchg
xchg
sub
pop
jg
les
ss
or
fldenv
sub
mov
pop
cmp
mov
sbb
loope
push
pop
arpl
mov
sub
dec
adc
xchg
xchg
lods
xchg
fcomps
jae
xchg
adc
adc
sub
add
shrl
ds
sti
pop
push
jb
add
scas
dec
jo
repz
pop
leave
repz
cs
aad
std
call
or
lods
push
mov
mov
idivb
mov
int
ret
push
fcmovbe
fstpt
adc
push
inc
in
bound
add
int
pop
dec
xchg
or
nop
push
out
and
mov
out
testl
lea
adc
and
mov
mov
push
pop
and
out
iret
add
sbb
jo
sbb
jae
movsb
popf
scas
shrb
and
mov
push
mov
mov
dec
jnp
jns
add
sbb
pop
shrb
notb
dec
bswap
movsb
and
mov
mov
push
clc
mov
cmp
push
ret
pop
mov
xlat
mov
insl
cmp
or
cmc
pusha
or
ss
aam
and
sub
mov
sbbb
imull
repz
popf
push
jnp
or
push
mov
inc
or
adc
pop
imul
xchg
pushf
fnsave
jl
mov
ss
push
jo
xor
loope
cs
mov
shl
out
add
stos
sbb
es
test
scas
inc
clc
xor
incb
hlt
lret
push
das
pushf
ja
push
mov
rcrb
cmpsb
sarl
leave
leave
lcall
mov
fisubl
hlt
lods
adc
dec
and
stc
jg
gs
dec
test
lahf
aad
xor
test
pop
pusha
sub
test
add
add
inc
gs
push
das
sbb
mov
dec
out
inc
js
mov
jne
notl
mov
ljmp
inc
mov
mov
cmpsl
addr16
cmpsl
xchg
mov
test
pop
mov
and
bound
mov
mov
movsb
inc
cmpsb
or
push
xor
mov
cmpsb
jb
push
in
ljmp
or
jne
and
dec
push
hlt
in
or
jb
leave
mov
mov
jge
dec
push
call
xchg
out
mov
movsb
cltd
cmp
shr
stos
cs
and
lcall
hlt
stc
xor
jae
das
and
into
xor
mov
xchg
je
sub
loope
cli
push
add
rcrb
jae
scas
shrl
aas
out
setns
out
dec
add
fstpl
jno
and
stos
addr16
repnz
lcall
out
xlat
insl
push
or
lods
shl
pop
mov
leave
and
scas
inc
push
ds
in
sbb
mov
mov
and
repz
cmpl
jge
int
xor
push
mov
adc
sbb
jecxz
sub
imul
mov
loopne
push
lods
inc
cmp
jle
mov
inc
push
adc
gs
imulb
in
cltd
sub
and
adc
inc
xorb
rorb
pop
jns
pusha
mov
mov
out
fiadds
inc
cmp
mov
enter
mov
fcompl
xchg
rcl
lret
in
cmpsl
ja
mov
add
xchg
push
pop
and
enter
pop
or
xchg
fwait
call
call
aam
lods
pop
pop
mov
push
cmpsl
iret
push
pop
jo
hlt
pop
rcrl
mov
inc
push
nop
outsl
test
je,pn
push
jns
and
in
pop
inc
mov
insb
cmp
sahf
sahf
stos
pop
inc
pusha
mov
or
sbb
xchg
sbbl
loop
and
dec
outsl
repz
jo
jg
hlt
mov
adc
sbb
add
inc
leave
push
push
daa
xchg
push
cmpsb
xor
in
lds
lock
add
jecxz
dec
mov
xorl
jmp
jle
or
fidivl
outsb
popf
adc
add
sub
mov
cmp
call
or
xchg
mov
js
push
pop
sbb
xchg
dec
out
movq
xor
nop
repnz
push
inc
xor
lock
sub
out
popf
shlb
out
xor
shl
lcall
lahf
shll
inc
inc
imul
dec
sbb
and
out
push
repnz
add
popa
mov
shrl
xchg
push
out
inc
loop
scas
xchg
iret
push
insb
imul
es
jb
std
stos
sub
cs
inc
aam
xchg
sbb
pop
dec
int3
dec
imul
inc
xor
pop
mov
lock
xchg
mov
jecxz
add
dec
bswap
roll
push
xor
pop
jl
mov
mov
xor
push
push
nop
shll
sar
pusha
inc
pop
sub
and
sbb
scas
push
into
loopne
xchg
mov
lahf
pop
cmp
fidivs
mov
stos
fiaddl
pusha
cmc
lock
ja
inc
mov
push
jg
shll
push
repz
stc
push
sub
pusha
scas
jmp
push
mov
insl
jp
xor
loop
rol
adc
jae
adc
jae
pop
inc
mov
sub
or
and
pop
push
sub
lahf
hlt
push
fcmovnbe
push
js
mov
or
adc
cmp
adc
call
adc
sbb
fdivp
push
loope
cwtl
repnz
adc
sti
fsubrl
inc
push
or
push
mov
mov
rorl
and
xchg
cmp
add
dec
sub
add
inc
mov
push
fwait
mov
inc
loope
or
jno
adc
cmp
mov
adc
cli
pop
cmp
int3
xchg
sbb
lods
popa
imul
mov
lret
cmp
mov
leave
les
jmp
push
repz
xchg
adc
cmp
in
adc
xor
push
arpl
ds
mov
in
stos
sbb
dec
fnstcw
mov
and
imul
ds
je
fsub
push
into
xor
xchg
inc
jp
popf
scas
mov
push
js
jno
add
adc
xchg
inc
jle
mov
stos
outsl
aas
sub
inc
pop
push
rol
testb
repnz
jnp
mov
push
cmp
jnp
and
out
adc
push
jl
std
xchg
mov
sub
mov
pop
or
xchg
out
sbb
lds
cwtl
push
ja
add
shll
loop
sbb
adc
iret
xor
pop
add
xlat
or
mov
pushf
stc
sarb
mov
inc
fldenv
orl
or
sahf
fimuls
sub
mov
sub
sahf
add
sub
cwtl
test
arpl
dec
mov
and
sti
movd
fbld
insb
xchg
sbb
add
and
mov
jl
fidivl
cmpsb
idivl
out
int3
movsl
arpl
push
scas
lods
subb
cs
xor
mov
repnz
repz
jb
jae
sbb
icebp
and
out
xchg
inc
shll
dec
lods
sbb
cli
nop
sbb
xor
rclb
popf
roll
test
mov
jo
jno
sti
test
js
jb
pusha
dec
lock
cmp
mov
test
lock
sub
out
lods
test
xchg
add
int3
mov
jns
hlt
clc
sbbl
cmp
jb
sti
cmp
sbb
into
repnz
add
dec
gs
stos
adc
dec
mov
fs
ret
mov
push
xchg
cmp
push
adcl
or
addb
roll
ret
or
cs
andl
dec
mov
popf
xlat
testb
add
xor
addb
ret
pusha
push
fsubs
or
popa
inc
or
cli
sbb
setne
int3
lds
sub
in
xor
cmp
push
aaa
cmp
pop
insl
cmp
push
das
cmp
imul
fnstenv
pop
mov
dec
ret
inc
test
jne
stos
cs
popf
nop
dec
mov
jne
repz
and
dec
mov
lahf
and
inc
nop
fbld
cmpsb
imul
sahf
aad
xchg
es
mov
xchg
insl
popf
ret
enter
stos
dec
push
fildll
pop
push
push
jae
sbb
stc
repz
add
lock
adc
ret
xor
scas
cltd
jne
mov
adc
fdivrl
add
push
pop
adc
mov
repz
inc
push
mov
cmp
cmp
adcl
inc
cmp
in
xor
in
mov
test
ja
outsl
fcmovbe
push
in
int3
and
cli
outsb
scas
imul
and
xchg
adc
in
sub
mov
mov
sbb
int3
cmp
icebp
aam
stc
loope
daa
cwtl
int
cmp
or
jmp
jns
add
jne
cld
fsub
mov
in
pop
movsb
pop
adc
inc
push
ja
test
fimull
inc
movsb
cwtl
sub
nop
mov
lods
and
and
mov
js
enter
jb
sub
sbb
aam
and
xchg
push
andps
xor
cmc
lods
add
cli
stc
mov
dec
lea
sahf
dec
jne
int3
scas
jne
jmp
icebp
movl
xchg
test
mov
xchg
into
test
sbb
sbb
mov
test
outsl
fsts
ret
jno
les
pop
sarb
test
int
outsl
or
dec
movsl
mov
pop
aad
repz
cmp
pop
fisubl
icebp
jnp
jns
add
or
add
jae
jbe
sub
ficoml
dec
test
push
fmull
dec
negl
or
cmp
cld
xchg
nop
outsl
fistpll
jp
insl
sub
stc
and
sti
and
in
sub
into
jmp
test
hlt
outsb
rclb
mov
push
jne
lret
in
sbb
pop
sub
cld
add
push
pop
cmp
or
int3
xchg
fbld
and
mov
adc
dec
in
ljmp
adc
cmp
clc
adc
test
pop
repz
jmp
jo
in
jno
inc
nop
jle
outsl
push
push
addr16
pop
sti
dec
es
enter
shlb
mov
stos
stos
mov
sbb
jbe
cli
stos
leave
sub
jae
pop
hlt
inc
mov
sbb
outsl
jg
sbb
cs
xor
cltd
sbb
leave
mov
push
call
jno
les
lahf
push
fdivs
call
sbb
out
cltd
test
jae
daa
das
jp
inc
inc
aaa
int3
xchg
out
xor
test
push
add
roll
add
das
add
cs
xor
rorb
jge
push
movsb
xor
lods
cmp
push
pop
xor
add
mov
jge
enter
pop
push
pop
and
aam
push
sbb
test
push
add
or
inc
ja
pop
inc
es
xchg
movsb
push
jmp
inc
cmp
rolb
cs
inc
test
cli
add
cmp
xchg
sbb
mov
xlat
testl
cmp
daa
mov
xchg
add
sbb
out
cmpsb
mov
xchg
mov
pusha
push
mov
mov
test
inc
out
mov
jnp
inc
and
mov
adc
adc
ss
test
into
mov
cmp
test
mov
pop
les
push
add
jl
or
mov
inc
mov
push
adc
lods
fldenv
xor
pop
cmp
orb
imul
jnp
je
addr16
push
xchg
mov
adcl
loopne
add
xor
xor
dec
out
inc
adc
pop
cmc
adc
mov
inc
sub
mov
fisubs
dec
sarl
push
es
dec
mov
out
ljmp
call
test
sbb
rorl
imul
lods
dec
cmp
xor
hlt
scas
sbb
sbb
decb
jae
ficomps
les
push
sar
jmp
repz
pop
and
repnz
testl
cmc
or
addl
mov
lods
xchg
add
dec
hlt
ja
test
inc
sbb
mov
aad
addl
push
in
inc
fidivs
adc
stc
movsl
xchg
xchg
xchg
int
cmp
inc
lock
mov
adc
pushw
stos
aas
dec
adc
lret
cmc
les
push
imul
lds
cwtl
add
dec
lds
enter
repz
daa
pop
mov
daa
rcrl
sarb
mov
push
jae
pop
jecxz
movsl
js
call
bound
rol
pop
mov
xor
test
movsb
lods
inc
movsl
cwtl
ret
popf
pop
xchg
and
xchg
jbe
inc
ss
jmp
jae
inc
inc
sarl
ret
outsb
jno
lds
sbb
ds
hlt
dec
mov
sbb
idivl
ficomps
add
les
scas
lret
stos
and
aas
inc
setl
in
pushf
rcrl
mov
rorl
loope
lods
fbstp
scas
jle
mov
in
push
clc
ret
pop
aas
lretw
dec
sti
inc
mov
hlt
mov
cmpsb
xor
daa
cwtl
sub
ret
mov
popf
and
popf
inc
cmc
cmp
jbe
fsubrs
adc
int
xchg
lea
ljmp
pop
divb
dec
idivl
movsl
in
cmc
and
jle
imul
and
sub
mov
dec
mov
dec
mov
ja
imul
clc
sahf
cmp
sbb
push
in
stos
or
xchg
repnz
mov
outsb
push
pop
and
out
xcrypt-ofb
cmpsl
insb
xor
cli
sub
jno
pop
in
cltd
jp
imul
sbb
fwait
cmp
and
lahf
leave
movsl
mov
sub
pop
lea
add
fwait
mov
jle
pop
cmpsl
hlt
add
adc
ret
pop
sub
mov
and
imul
mov
ds
jl
repnz
adc
xchg
mov
outsb
jecxz
enter
out
add
adc
cmp
mov
out
out
das
das
pop
dec
roll
arpl
push
pop
movsl
inc
jae
sub
sub
pop
xor
push
in
test
icebp
movsb
mov
andb
adc
ds
popl
cmp
sub
mov
pop
xchg
fsts
mov
rcll
inc
jae
subl
mov
or
stos
mov
aaa
inc
sub
sarb
and
add
push
leave
adc
out
ret
xor
out
sbb
pop
lahf
cmpl
fnsave
push
cmp
push
xor
pop
lock
mov
cltd
push
mov
dec
pop
or
lods
cmpsl
into
cmp
in
mov
std
mulb
pop
ljmp
mov
test
outsb
mov
mov
mov
out
adc
stos
addr16
scas
call
mov
dec
lods
filds
adc
in
xchg
pop
sub
adc
sahf
jg
sub
rcrb
xchg
loop
addr16
mov
jle
jno
imul
jae
andl
aas
add
cltd
cmpsl
lret
or
and
stos
push
into
lret
imull
xor
and
xchg
sbb
ret
sahf
xchg
and
es
push
stos
ret
cmp
jg
ds
mov
daa
adc
pusha
scas
push
and
in
jl
bound
mov
into
mov
lods
or
sbb
mov
mov
gs
push
jbe
in
mov
ret
xchg
mov
push
dec
loopne
xchg
lods
fbstp
sbb
in
xor
mov
mov
fcmovb
bound
push
cmpb
sub
push
push
add
rcrb
gs
imul
pop
cmp
lods
adc
pop
and
mov
rolb
and
js
cmpsl
jge
stc
cmp
mov
addb
sbb
dec
sbb
mov
dec
daa
push
fdivl
push
pop
nop
aaa
push
push
repz
jnp
jnp
lret
jo
inc
incb
mov
mov
pop
mov
daa
mov
jbe
adcl
pop
mov
es
mov
adc
fs
lods
xchg
rolb
fdivrp
adc
push
inc
addr16
push
pop
faddl
sbb
xor
mov
inc
jae
and
pop
ja
mov
js
bound
mov
lock
mov
test
dec
jp
fimuls
shl
sub
insb
jne
dec
adc
fabs
imul
pop
mov
orl
or
sti
std
dec
mov
jb
test
lsl
inc
add
sbb
push
add
out
push
cli
aaa
or
pop
test
mov
das
lahf
xchg
sahf
inc
stos
ljmp
xor
pop
scas
push
scas
dec
xchg
xor
cmp
xchg
sbb
jecxz
mov
pop
iret
sub
int3
sahf
lds
int3
adc
push
jb
in
outsb
xchg
jp
sbb
loopne
leave
loop
js
mov
rep
fcomps
insb
add
push
pop
pop
mov
pop
adc
xor
mov
in
pusha
jne
push
sbb
jp
pop
mov
jle
adc
or
mov
fistpl
xor
add
fbstp
incb
js
arpl
xchg
adc
and
jg
xor
lea
mov
pop
pop
in
jnp
mov
hlt
scas
clc
push
mov
js
lods
push
lock
test
jns
in
les
sahf
mov
sbb
mov
mov
xor
fisubrl
xchg
push
and
adc
xchg
or
jbe
sub
dec
adc
cmp
xchg
clc
int
xchg
stc
or
test
adc
enter
je
les
pop
or
fdivr
or
adc
out
sub
and
test
es
cmpsb
enter
fmul
fidivl
jp
jnp
std
mov
inc
push
lcall
cmp
into
jno
add
push
in
lods
mov
outsb
shlb
dec
inc
js
insb
test
pop
aad
and
jmp
js
lahf
mov
xchg
sub
ss
xchg
adc
scas
sbb
jbe
and
sub
mov
jp
andb
js
add
jle
pop
vpcmpgtd
add
das
sbb
cmp
pop
pop
into
add
jbe
in
or
dec
adc
aas
testl
lds
push
xor
pusha
adc
inc
sub
inc
call
cmpsl
nop
repnz
push
push
dec
xchg
inc
mov
mov
adc
ret
mov
push
or
mov
cli
cmp
dec
jmp
xor
cmp
inc
mov
mov
mov
xchg
mov
or
cmpsl
add
and
in
lods
shrl
repnz
mov
sbb
lret
and
mov
or
dec
mov
scas
sti
and
rclb
lock
jle
xor
adc
mov
xor
fnsave
mov
sbb
hlt
pop
xor
xor
jne
ss
aam
arpl
push
sbb
or
test
mov
test
xor
and
js
movsl
xor
push
inc
inc
sbb
mov
sub
xchg
insb
mov
test
ljmp
call
xchg
jnp
ss
and
xrelease
enter
ja
movsl
fwait
mov
outsb
mov
fwait
popf
shll
adc
xor
scas
or
add
pop
add
jp
xchg
cld
ljmp
and
jae
inc
notl
std
fildll
rcrb
out
in
mov
and
test
xchg
adc
imul
inc
adc
or
sub
mov
in
push
enter
insb
popf
iret
add
push
mov
dec
push
add
pop
in
dec
dec
push
sbb
pop
fidivl
and
movsb
and
mov
je
fs
test
or
cltd
cmp
iret
pop
dec
adc
push
pop
add
ja
aaa
mov
cmp
jb
pop
pop
aas
pop
mov
push
jge
les
ret
cmpsl
xchg
pop
int
sub
arpl
mov
inc
xchg
mov
pop
cmp
sbb
pop
push
xor
mov
add
xlat
and
sbb
lret
call
pop
rcr
or
adc
push
cmpsl
mov
scas
test
xchg
repz
gs
getsec
inc
test
adc
pop
cwtl
mov
cltd
nop
enter
cmpsb
lds
iret
lcall
xchg
lods
rorl
and
xchg
and
mov
das
cwtl
cmp
bound
sub
inc
inc
mov
pop
in
shrb
sbb
xor
push
pop
jnp
stos
inc
xchg
xchg
jnp
xchg
jge
add
mov
dec
mov
push
call
aam
inc
xchg
ret
xchg
add
mov
gs
test
fwait
and
shll
test
iret
push
fdivs
cld
sti
mov
inc
out
or
mov
dec
or
mov
ret
fld1
lods
sbb
adc
add
mov
adc
sbb
aaa
mov
push
push
out
in
mov
shl
rcrl
inc
adc
dec
lods
and
adc
or
mov
or
pop
add
in
xor
shr
mov
ffreep
push
movsl
inc
mov
pop
jg
inc
daa
adc
pop
sub
push
xchg
adc
pop
filds
push
ljmp
loop
lds
xchg
leave
inc
adc
mov
or
loope
sbb
jb
sbb
cli
ret
push
mov
rclb
test
in
pushf
in
sub
adc
inc
cmc
int3
rorl
dec
ja
shlb
mov
inc
pop
repnz
cmc
loopne
aad
and
and
insl
xor
sub
dec
dec
or
out
jmp
or
addl
rcl
icebp
adc
int3
jae
or
insb
mov
cmp
das
push
lcall
xchg
inc
push
jp
xor
mov
pop
jb
mov
imul
or
hlt
fcmovbe
stos
mov
insb
fs
sbb
jae
cltd
cmp
and
sbb
pop
incb
lods
lret
cwtl
shll
aam
clc
mov
imull
movsl
adc
lcall
xchg
icebp
in
fs
sub
dec
adc
lret
add
mov
out
inc
outsl
push
lods
xchg
andb
lods
ret
dec
mov
push
xchg
cmpsb
sbb
xor
and
cmc
ds
gs
xchg
in
jo
loope
xchg
cmp
leave
jnp
ja
mov
mov
mov
jmp
xchg
scas
fnstenv
loop
and
sub
xor
jbe
hlt
pushl
fisttpl
shlb
fldl
inc
int
test
or
lcall
mov
ja
jae
dec
repnz
leave
in
dec
inc
in
sbb
jno
mov
pop
inc
sahf
dec
add
sub
add
sar
js
ljmp
sbb
pop
ljmp
push
sub
xchg
lret
inc
dec
pop
jbe
loopne
xchg
into
es
andb
pop
scas
lods
cmp
bound
sahf
mov
out
call
xor
cmp
mov
push
scas
call
iret
push
hlt
pop
test
pop
sar
sub
pop
iret
orb
lock
sbb
cli
mov
dec
add
xor
in
and
sbb
add
ficompl
inc
int3
mov
add
push
mov
lret
mov
fldt
mov
ds
mov
les
decl
push
popa
popf
fimull
xor
mov
jo
repz
inc
out
xchg
mov
pop
mov
lods
adcl
fisubs
push
js
cli
or
dec
out
lea
aam
ret
pop
push
mov
add
hlt
and
adc
in
xorl
adc
cmp
nop
out
mov
cvtps2pd
xchg
shrb
cmp
jg
sbb
mov
dec
out
int3
push
cld
fistps
mov
pop
cmpsl
mov
inc
aad
xor
call
addr16
fcomp
aad
mov
leave
aad
bound
and
ss
sahf
cltd
hlt
mov
dec
xchg
aaa
mov
insl
sub
xlat
or
out
mov
ret
mov
pop
sbb
ret
xchg
jbe
rcr
cwtl
inc
mov
mov
adc
insb
pop
mov
lahf
daa
push
stos
cli
enter
mov
cld
mov
not
nop
jge
lahf
xchg
test
xor
adc
clc
clc
es
mov
int3
mov
cmp
das
xchg
push
mov
dec
scas
out
push
xor
cmp
and
adc
inc
fimuls
mov
xor
std
pop
inc
xor
fists
and
shlb
sub
mov
jmp
dec
sub
rcrb
jo
inc
mov
fs
enter
xor
push
and
mov
adc
movsl
aam
es
mov
stos
faddl
xor
jnp
rcl
ret
add
je
adc
shlb
iret
lret
fbstp
and
fldl
mov
jns
xchg
lock
add
pop
inc
je
icebp
test
mov
sahf
inc
jae
sarb
int3
jmp
pop
and
pop
pop
pop
jmp
cli
clc
push
dec
mov
mov
adc
into
ffree
sbb
call
repnz
mov
xor
pop
jb
fwait
mov
insl
jb
pusha
mov
insb
sub
in
arpl
fwait
pop
sub
cli
test
dec
popf
pop
or
int3
push
outsb
clc
daa
pop
add
popa
adc
jge
cmp
add
mov
sub
or
test
pop
push
mov
imul
xor
mov
add
mov
push
jno
cmpsb
dec
aam
and
mov
sarb
mov
fmuls
mov
sbb
aad
push
add
mov
inc
xchg
or
cmpsl
es
loop
leave
in
aas
fsts
xor
clc
jno
ror
sub
sahf
lcall
or
or
or
mov
xlat
jno
add
mov
xchg
and
push
and
fistps
subb
clc
mov
add
or
mov
mov
dec
add
and
iret
push
mov
fidivs
sub
test
sbb
cmp
mov
jnp
mov
xchg
aad
push
ficomps
jns
mov
nop
xchg
lahf
aad
mov
xor
gs
cltd
mov
fs
popa
adc
xor
dec
push
pop
dec
stos
cmpsl
cmp
icebp
and
mov
xchg
fwait
imul
xor
dec
mov
and
cmp
stc
clc
mov
jnp
adc
pop
sbb
or
mov
adc
cmc
or
inc
call
xchg
insl
jo
dec
shlb
testl
roll
mov
mov
jae
fwait
pop
js
xchg
std
aaa
fs
idivb
or
cltd
or
rcrl
cltd
push
xor
stos
mov
movl
inc
das
daa
fstpt
push
shlb
les
lods
into
xor
adcl
jp
push
ljmp
cmp
imul
inc
and
mov
sub
sub
inc
pop
test
push
aam
fwait
sbb
mull
pop
in
pop
movsl
cmpb
jo
add
push
sub
cmp
sub
push
cmp
es
mov
and
js
mov
movsb
out
push
and
das
jo
outsb
ljmp
bound
adc
lea
fldl
test
mov
outsb
ss
mov
mov
fs
cmpsb
flds
mov
pop
jns,pn
xchg
in
mov
movsl
lret
sub
iret
hlt
arpl
inc
mov
sbb
out
pusha
push
dec
sub
shll
inc
and
cld
mov
movsl
mov
push
jnp
aam
pop
ret
lret
and
imul
cmp
jno
aaa
jne
arpl
cwtl
inc
jmp
mov
mov
std
adc
inc
enter
jmp
mov
jno
sarb
call
add
scas
fldcw
imull
loopne
mov
lock
pop
inc
jae
mov
rcll
cld
mov
and
gs
push
pop
pushl
add
xor
cld
test
imul
lret
loopne
ja
sbb
or
pop
jae
mov
add
mov
jmp
mov
out
pop
hlt
movsb
bnd
sbb
in
ljmp
loopne
sub
mov
jge
mull
cwtl
loop
mov
sub
das
sub
pop
outsb
popa
mov
xchg
into
mov
or
sub
in
xor
cmp
adc
sbb
cmpl
mov
xor
sbb
push
int
shl
jno
cmp
jno
sahf
dec
add
nop
or
xor
incb
pop
mov
cmpsb
dec
xor
cltd
mov
rorb
push
aam
sub
mov
mov
push
and
pop
lods
aad
cmp
cs
fmuls
xlat
or
std
popa
xor
push
jnp
add
xchg
xor
sbb
popa
lods
pop
andl
fistpll
cld
lcall
or
popa
mov
imul
jg
jl
pop
cmp
iret
loop
mov
jg
lock
cmc
sbb
popa
test
leave
mov
adc
add
xchg
rolb
jge
inc
mov
push
or
sub
lret
pusha
imul
xor
in
or
adc
pop
cltd
adc
aaa
std
mov
mov
dec
pop
inc
inc
dec
xor
push
sbb
inc
xor
fistpll
pusha
js
inc
fwait
ret
fst
leave
push
jecxz
mov
addr16
cmp
rol
inc
sub
jp
test
pop
stos
inc
jns
add
dec
filds
pop
js
sarl
mov
addb
dec
xchg
stos
int
cli
lret
lods
sub
inc
mov
icebp
outsb
clc
ljmp
fcomp
enter
sbb
mov
dec
nop
and
dec
cmpsl
or
mov
inc
cmpsl
iret
icebp
jmp
mov
jmp
stos
aam
ja
mov
mov
xor
cmc
xor
enter
movsl
jmp
sbb
add
pop
inc
repz
fdivp
insb
pushf
aad
lret
sbb
push
je
inc
test
jp
loopne
cmp
fcoms
lock
insb
shl
mov
icebp
lahf
jnp
push
mov
xchg
dec
jecxz
mov
sbb
sub
push
dec
jmp
dec
xchg
jo
mov
pop
inc
xchg
rorb
xor
testl
rcll
shl
adc
std
xor
jae
orb
frstor
push
xchg
orl
das
push
cmp
push
dec
mov
lea
jge
lret
sbbb
scas
inc
std
fcoml
call
or
ret
daa
jl
daa
mov
pop
imul
mov
pop
insl
push
mov
jg
jne
or
into
out
jnp
popf
movsb
out
dec
adc
pusha
or
fcomi
mov
and
add
jge
or
mov
sbb
jbe
or
ljmp
int
xor
xor
add
lds
xor
or
mov
mov
add
pop
or
cwtl
into
sub
xor
pop
xchg
stc
movsl
mov
xchg
or
ds
out
cmp
cmp
xchg
data16
sbb
mov
les
or
push
out
ficomps
jg
clc
test
fdivrs
inc
jecxz
iret
xor
std
cmp
or
adc
sub
and
cmpsl
and
cmp
mov
in
je
add
xor
cmp
sarl
pop
cld
xor
test
sbb
decl
push
jecxz
rcll
or
cmpsl
aad
mov
les
and
out
imul
push
inc
imul
les
hlt
and
aam
popa
xchg
adc
cmp
xchg
or
lcall
repnz
and
movsl
sub
inc
and
fcmovu
xor
push
pop
int
pop
mov
adc
adc
mov
jecxz
bndldx
push
loopne
enter
jg
scas
sub
mov
cs
push
sbb
push
xchg
mov
adc
and
jne
sti
add
push
inc
iret
xchg
popa
jbe
sbb
cwtl
push
cmc
and
mov
fbstp
out
cmovs
sub
xor
and
int
inc
outsb
bound
insl
aad
sbb
mov
and
xchg
cmp
cli
or
push
lds
outsl
outsl
ret
shrl
fnstcw
pop
sub
pop
les
add
fwait
cmp
xor
mov
ret
xchg
mov
and
add
imul
pushf
add
xchg
iret
in
xchg
mov
push
outsb
inc
pop
dec
sub
stos
dec
cli
ret
test
shr
xlat
or
jo
lds
inc
imul
xchg
loope
addb
adc
pop
aad
sbb
adc
test
lock
add
pop
or
popf
insb
in
push
mov
lcall
arpl
add
dec
push
push
push
gs
int3
pop
push
cmp
xor
shlb
push
dec
mov
push
insb
pop
imul
jo
jg
jmp
push
sub
lea
xor
incb
in
push
xor
inc
inc
cmp
test
mov
jl
cmpsb
fidivl
fisttps
jne
ss
hlt
testb
add
lret
jecxz
scas
or
mov
imulb
cmp
fcmove
jnp
pop
aam
scas
les
jno
push
in
or
sbb
mov
daa
pop
xchg
or
fwait
vucomisd
or
and
pop
sti
inc
das
fucomp
pop
mov
fcoml
jo
lods
cmpsl
data16
mov
sti
xor
jo
xlat
jl
repnz
les
jns
std
xabort
in
dec
adc
cwtl
sbb
outsb
fcmovnb
adc
cs
xor
mov
pop
ljmp
xchg
je
lods
xor
and
aaa
cmpsl
jne
push
fs
push
sbb
and
test
insl
push
shlb
jg
xchg
xor
int3
and
xor
lds
in
test
inc
cmpl
cmpsl
and
and
je
sbb
inc
sti
pop
lock
push
xor
xor
call
xchg
fcomp
pushf
je
jge
pop
aam
into
ljmp
test
cmp
fs
jo
ret
ror
add
mov
xchg
jo
pop
mov
mov
ret
dec
dec
mov
push
inc
add
add
jns
data16
jmp
sub
push
mov
fdivrp
je
dec
pop
outsb
cwtl
sbb
jae
cmp
in
divl
orl
push
fisubrs
filds
arpl
dec
aad
sub
loop
out
xchg
xrelease
outsl
mov
loopne
inc
sbb
adc
cmp
pop
fisubrl
push
jl
dec
adc
hlt
mov
xor
popf
sahf
iret
sub
add
push
out
test
insb
xchg
inc
xor
ja
lds
inc
clc
xor
loop
rcrb
sbb
cmc
cmc
xchg
in
cmp
mov
test
lret
jno
imul
nop
xchg
jb
jmp
in
popa
and
push
sbb
cmp
jne
mov
adc
fldt
hlt
sbb
sbbb
je
cli
insb
mov
adc
sbb
jp
adc
int3
mov
push
stc
xchg
cmp
add
jmp
je
add
loope
and
inc
stc
dec
in
sbb
adcl
movb
stos
scas
mov
imulb
fisubs
lcall
push
inc
popa
insb
mov
inc
lahf
push
mov
aad
mov
in
xor
je
js
xlat
stos
inc
shll
sub
imul
mov
rolb
in
mov
push
inc
push
ret
adc
inc
adcb
dec
jbe
mov
jnp
xchg
pop
mov
lods
xchg
test
int3
add
jl
jmp
in
les
addr16
shlb
xor
inc
mov
jns
addl
shlb
es
mov
mov
dec
jl
ss
mov
adc
sbb
xchg
pop
cwtl
cld
daa
repz
rcrb
dec
aam
cmp
dec
movsl
xchg
mov
mov
sbb
mov
mov
andl
jb
mov
push
pushl
pop
mov
repnz
adc
or
shll
cltd
sbb
adc
cld
mov
in
mov
and
xlat
sbb
lahf
pop
inc
mov
xor
fwait
data16
mov
mov
in
or
jbe
mov
rol
xchg
inc
xchg
roll
xlat
cmpsb
stos
jmp
mov
add
add
push
mov
cmp
pop
lcall
mov
pop
add
xchg
fcompp
xchg
fbld
ja
out
inc
icebp
fimuls
push
jbe
daa
out
out
out
cmp
outsb
and
xchg
movsb
in
cmp
in
jne
aaa
cltd
jle
iret
xor
dec
adcb
mov
lock
sub
int
nop
pop
lcall
lods
mov
mov
loop
sub
push
aad
adc
push
dec
dec
scas
dec
pop
testb
clc
mov
cmp
fistpl
dec
mov
fcoms
add
add
sub
aaa
lret
jge
jbe
adcb
in
or
xor
mov
inc
stos
lods
xchg
xchg
addr16
cmp
loope
mov
mov
or
or
xchg
push
mov
push
mov
sub
shr
mov
mov
push
in
bound
cltd
imul
add
mov
or
or
dec
pop
sbb
push
inc
and
pop
imul
arpl
lcall
mov
sti
into
cmp
mov
mov
inc
push
push
mov
loop
cmp
jae
aaa
cmpsl
imul
fsubrs
ficomps
push
push
arpl
fsubs
fcmovb
ffreep
out
mov
stc
loopne
scas
xchg
jmp
pop
xor
xchg
xchg
add
cs
es
popa
jge
fistps
pop
outsb
jle
lds
sbb
jae
mov
lods
pop
movsl
das
adc
mov
int3
mov
dec
aaa
xorl
xlat
mov
iret
je
cmp
dec
lret
lret
push
fistpll
push
pop
xor
cs
pushf
cmp
cmpsl
sbb
xchg
mov
cmp
hlt
scas
jmp
out
jno
inc
mov
pusha
lods
sbb
mov
cmpsl
pop
push
ja
lcall
mov
popa
inc
int
mulb
inc
xchg
fiaddl
aaa
dec
cltd
loop
jg
mov
pop
mov
dec
in
imul
int3
test
add
lods
les
xchg
out
repnz
sub
mov
jle
mov
cmpsl
dec
mov
nop
push
es
fistl
insb
fwait
lea
call
adc
enter
inc
jnp
arpl
bswap
and
idivb
cs
insb
pusha
sub
sets
ret
jne
jo
adc
add
arpl
rcrb
and
stos
push
xlat
jns
and
out
scas
cmp
mov
rclb
and
cli
and
loop
insb
sahf
in
jnp
dec
fsubs
cmpsl
mov
sbb
dec
xchg
jnp
cld
sbb
outsl
sub
imul
clc
aaa
fldt
movsb
and
and
fsubrs
gs
cmp
xchg
mov
cmc
js
or
inc
pmulhw
ret
sub
jae
lcall
cltd
movsb
ljmp
xor
hlt
xchg
cli
iret
add
xchg
and
inc
push
sti
int3
sahf
adc
stos
jg
pop
mov
ja
arpl
xlat
nop
push
js
fdivrl
movb
mov
iret
push
sbb
dec
mov
push
add
inc
loopne
xor
aas
rorl
mov
xchg
lahf
fisttpll
leave
push
mov
push
mov
mov
negb
ret
ljmp
xchg
add
sbbl
mov
arpl
jl
arpl
aas
leave
cmc
lcall
add
add
sub
inc
cwtl
mov
shll
dec
cmp
int
aaa
bound
jne
outsb
push
xor
test
or
adc
sbb
bound
aad
call
lock
sub
sbb
sub
orb
sbb
sub
push
sbb
stc
cmp
mov
push
mov
xor
int
add
andb
and
or
fwait
cmpsb
inc
dec
inc
mov
mov
mov
jne
add
jbe
inc
lods
mov
aaa
jmp
in
jnp
mov
imul
ss
xor
sti
shll
push
xchg
sbb
xchg
jl
pop
aaa
fidivs
xchg
inc
xor
fimuls
cmp
stos
dec
imul
pop
shll
xchg
mov
jb
push
imul
sbb
push
or
jbe
fwait
jns
out
xor
fbstp
mov
xor
sti
clc
mov
sbb
fsubl
ret
xchg
pop
mov
hlt
pop
not
fidivs
pop
fistpl
pop
sub
pop
dec
lret
std
sbb
cwtl
inc
aad
cs
pop
xor
clc
subb
dec
inc
add
gs
and
cmpsl
in
pop
jae
push
cli
sbb
mov
mov
push
mov
jns
sbb
insb
lds
mov
xor
std
or
nop
loopne
out
and
ret
push
jae
sti
jmp
xchg
jg
xchg
xchg
repnz
pop
mov
dec
and
jno
lret
in
outsl
movsl
mov
arpl
push
sub
loop
enter
mov
sub
pop
adcb
icebp
mov
and
aad
cld
insl
jge
jge
mov
adc
fisttps
sarb
push
or
test
sbb
pop
inc
xor
jl
or
xchg
pop
mov
mov
sub
lods
cmp
fists
jl
stos
and
xor
push
lods
and
mov
add
inc
cwtl
repnz
push
sub
xchg
push
shl
cmc
xlat
jg
cltd
nop
mov
cmpsb
cmp
dec
lea
dec
scas
jno
sbb
aad
mov
movsl
add
testb
in
out
out
rorl
ret
js
and
loop
dec
cmp
addb
sub
xchg
push
xor
aas
add
push
insb
mov
cld
mov
mov
jmp
sub
paddsw
test
pop
sahf
pop
mov
sbb
mov
mov
mov
out
js
imul
and
lock
stos
mov
xor
adc
ljmp
outsl
sbb
sahf
or
out
stos
xchg
leave
je
xlat
push
xlat
mov
xorb
aad
push
ret
test
mov
ljmp
adc
addr16
adc
hlt
lret
xchg
arpl
pop
test
jg
pop
pusha
insl
out
in
int
ss
iret
sub
subb
stos
xchg
data16
test
mov
subl
rorb
rcrb
mov
fsts
inc
into
fs
cmc
sub
dec
loopne
subl
inc
imul
jmp
dec
ret
xchg
push
lret
add
imul
push
outsl
test
icebp
mov
sub
ds
sbb
adc
adc
imul
mov
xor
es
mov
xchg
lahf
flds
mov
insb
or
scas
mov
jnp
loope
addl
xchg
mov
push
icebp
mov
xor
fwait
jne
mov
ljmp
dec
dec
adc
cmpsb
xchg
outsl
stc
fcmovbe
add
test
ret
pop
aaa
mulb
jecxz
shlb
pop
repnz
push
adc
scas
inc
xchg
mov
add
dec
cmp
les
mov
cltd
jg
mov
scas
adcb
je
xchg
jle
fst
push
fnstenv
dec
adc
adc
and
or
lret
pop
push
cs
out
push
jne
and
mov
and
lods
repnz
cmp
rorl
test
mov
rcr
pop
inc
pop
push
inc
cltd
hlt
xor
mov
mov
dec
and
iret
inc
test
dec
clc
mov
xor
addr16
jg
and
push
mov
les
mov
add
sub
gs
push
repnz
movl
sbb
jb
lock
fwait
les
lods
outsb
sti
cmp
jne
leave
aad
push
fs
or
xor
shlb
adc
hlt
sub
insb
and
fs
jmp
dec
test
jnp
int
dec
push
inc
dec
jo
notl
jl
jge
into
and
pop
je
jns
dec
nop
push
jno
push
mov
in
into
nop
cmp
into
scas
loopne
out
or
xor
rorl
xor
mov
xor
rcrl
xor
jbe
mov
cmp
dec
ljmp
mov
jle
mov
ret
ja
sub
xlat
push
adc
mov
xor
or
jns
ja
insl
sarl
or
fdiv
ja
movsl
testl
rorb
xchg
sbb
cmp
jecxz
or
inc
test
push
and
lds
jo
mov
mov
dec
cmp
out
js
dec
jge
push
xchg
and
icebp
mov
test
je
int
pushf
xchg
aaa
mov
insl
mov
mov
xor
mov
push
lret
add
jno
jmp
aas
cmova
pop
and
sahf
sbb
push
loopne
xchg
in
mov
stc
push
cmpb
xchg
imul
mov
sbb
addr16
and
adc
cmpsl
roll
clc
mov
mov
into
jp
adc
add
ret
les
and
and
inc
pop
xchg
pop
jae
ljmp
mov
sbb
inc
xchg
lahf
in
and
and
adc
dec
cltd
out
adc
mov
pop
ret
cmp
movsb
lock
test
sub
mov
sub
rcrb
sbb
push
ficomps
push
fdivl
in
lret
jae
jne
cmpsl
and
mov
mov
adc
sbb
lret
das
pop
cmp
mov
stc
sub
test
sbb
dec
dec
pop
mov
dec
je
bound
push
mov
ficompl
pop
sarl
jno
sbb
jge
adc
sub
xchg
sub
ja
mov
scas
out
ljmp
dec
stos
nop
pop
stc
mov
xlat
push
rcrl
leave
nop
inc
popf
jb
loop
loope
cmp
xor
fwait
out
mov
das
pop
or
dec
mov
pushf
pop
jo
push
fs
cltd
add
xchg
out
insl
std
cmpb
mov
aas
aad
add
scas
movsl
add
cvtps2pd
cs
sahf
ret
ror
popa
loop
mov
sbb
je
inc
testl
sub
repnz
imul
mov
add
push
jae
mov
push
test
and
icebp
add
push
daa
push
adc
xchg
mov
add
loop
insl
sub
fildl
cmp
cltd
mov
jge
je
and
mov
enter
lcall
cltd
ficomps
les
lods
cmp
clc
shl
inc
sbb
pop
add
shll
dec
jbe
dec
test
out
fstl
jns
or
je
inc
inc
clc
xlat
dec
mov
in
jle
andb
or
fstps
sbb
int3
int
and
push
sub
sbb
ret
push
add
dec
test
cltd
pop
daa
xchg
shrl
cmp
das
push
xor
fwait
sbb
jg
xor
rcll
jae
and
ljmp
adc
xor
jno
loopne
addb
cld
dec
cmp
cmp
cmc
les
mov
push
cmpsb
pusha
xlat
in
ss
pop
repz
repz
scas
rcrl
xchg
mov
movsl
jp
aas
shl
lret
mov
jo
adc
imul
mov
lahf
sub
scas
xor
mov
loop
cmpl
mov
push
sbb
mov
sbb
and
addl
in
mov
pop
shlb
lods
leave
xchg
xchg
push
jp
negl
mov
pop
popa
out
dec
xchg
dec
add
or
push
mov
nop
ret
mov
repz
and
adc
and
orl
push
xor
imul
fwait
test
adc
push
pushf
pop
loope
hlt
inc
movsb
xchg
addl
adc
cltd
rclb
test
dec
add
xchg
cmp
sbb
sub
sub
jae
idivl
sti
mov
mov
pusha
push
loope
add
into
rcrl
insl
push
je
fdivs
lcall
sub
mov
loop
jbe
cs
fistps
add
dec
or
sbb
addl
call
mov
insb
or
mov
lea
xor
pop
out
dec
pusha
fwait
fs
mov
xchg
inc
cmc
jge
lds
mov
dec
popa
into
push
dec
into
decb
jp
repz
das
push
rorl
add
dec
cmp
mov
scas
push
adc
iret
mov
jecxz
adc
outsl
nop
sbb
ret
adc
xchg
rep
cmp
add
xor
xor
sahf
mov
in
jb
out
add
add
dec
sbb
int3
push
cmp
movb
rcrl
mov
cmp
in
sarb
int
mov
faddl
push
and
repnz
pushf
inc
movsb
push
mov
jo
xchg
out
inc
mov
insb
clc
cli
scas
sub
lods
add
add
cmp
ja
testb
inc
out
fwait
mov
add
xor
ret
dec
psadbw
dec
add
pop
pop
or
arpl
mov
hlt
add
mov
lahf
repz
out
xor
cmp
push
lea
dec
nop
shlb
mov
js
push
or
mov
cmp
cmpsb
aad
mov
pop
imul
insl
push
js
mov
sub
ror
aam
nop
add
or
out
call
add
aas
cltd
push
xor
loope
shll
sbb
sub
rol
xchg
test
movsl
lock
in
adc
rorb
push
movsb
test
jmp
lret
es
pop
lods
mov
dec
lret
jecxz
sub
sub
xor
push
aam
call
sub
ret
adc
jno
mov
rclb
js
cwtl
mov
ret
fdivrl
hlt
sub
incb
out
push
insl
orl
es
aad
out
stc
jb
es
mov
subl
and
pop
fildll
mov
je,pn
jge
or
loope
and
push
aaa
sub
and
ja
mov
adc
bound
add
data16
cld
pusha
cmp
popf
in
dec
loope
jp
push
pop
jp
repz
add
pop
xchg
sarb
and
loop
or
and
push
fisttps
dec
insb
cmp
pop
pop
cmpsb
loope
sahf
cmp
cmp
arpl
insb
test
jbe
or
cli
jo
and
jae
jge
or
cld
jg
fildll
xor
ret
lock
hlt
bnd
dec
lret
jns
or
push
sbb
data16
fcoml
inc
fisubrs
cld
dec
mov
mov
loop
cmp
inc
ret
adc
jg
jecxz
pop
dec
mov
aaa
dec
mov
and
push
stc
jno
add
push
and
cmpsl
bound
mov
andb
int3
into
pop
addr16
xor
mov
adc
jae
mov
pop
add
pushf
mov
push
sbb
push
jmp
rorl
sbb
rorl
in
mov
and
add
mov
inc
jae
cmp
test
cmp
lahf
out
mov
or
stos
popf
clc
add
push
mov
pop
les
jnp
xorl
clc
pop
lcall
addr16
cli
aad
pop
sbb
jb
cmpb
mov
pop
sbb
movsb
in
rcr
cmp
jmp
sub
repnz
inc
push
mov
jo
dec
xchg
mov
fcoml
and
dec
or
loopne
testb
pop
or
ret
repnz
push
nop
daa
xor
mov
cli
jnp
mov
dec
xlat
jmp
stc
fiadds
jge
jg
add
xchg
mov
mov
xor
call
mov
popa
mov
push
or
mov
mov
out
fisttpll
mov
iret
pop
mov
lea
imul
popf
jle
repnz
mov
mov
xchg
mov
scas
mov
clc
dec
bound
jl
mov
icebp
cs
inc
add
in
push
sbb
jmp
cld
aad
jp
push
inc
and
sbb
cmpsb
stos
xor
or
lea
mov
cli
out
enter
push
andb
dec
fiadds
mov
dec
inc
popf
das
xor
dec
add
mov
sbb
jle
call
sbb
push
gs
ret
mov
pop
xchg
fwait
lods
fcomps
pop
push
inc
fimull
pop
outsb
lret
pop
je
data16
and
add
les
sub
xchg
insb
les
sbb
or
out
mov
sarl
cmp
sarb
jge
lock
mov
mov
fstpl
mov
inc
fistps
add
lahf
add
add
or
add
mov
cmp
repnz
pop
add
cmp
lret
out
mov
pushf
shll
fs
mov
scas
les
mov
fwait
mov
bound
addl
inc
sub
inc
fwait
movsb
xor
jno
cmpb
out
rcrb
iret
test
rclb
mov
sarb
cmpsb
aaa
lds
fmuls
sahf
mov
es
push
fisubrl
decl
cmpsl
iret
pop
jp
scas
jne
sub
lods
test
jl
rclb
mov
mov
push
mov
mov
lret
cmp
es
xchg
andb
lcall
and
clc
in
leave
jno
xchg
test
pop
mov
jmp
cld
mov
je
stc
int
and
outsl
pop
mov
xor
cs
push
jb
push
fsts
inc
adc
xchg
stc
aas
repnz
mov
jmp
in
adc
cmc
clc
pushf
jge
push
pushf
ret
lods
xor
xor
inc
mov
mov
mov
jno
pop
cmp
or
inc
add
lcall
int
xchg
push
pop
add
cmp
cmp
in
fs
and
xchg
js
pop
out
bound
or
xchg
ja
xchg
adc
xor
adc
aad
mov
mov
jl
lea
js
and
lea
outsl
or
test
mov
imul
icebp
add
sub
adc
sar
fstps
sbb
cltd
mov
imul
mov
xor
jmp
push
repz
in
aad
mov
cmp
inc
dec
mov
outsl
sbb
mov
cwtl
add
ja
cltd
dec
in
mov
sub
shll
fs
jo
inc
xchg
pop
mov
and
adc
fsubs
push
andb
jp
shl
test
pop
push
cmp
jae
xchg
jns
jle
int
dec
inc
push
jbe
out
test
insb
and
mov
fisubrl
mov
bnd
in
ret
data16
sbb
cvttps2pi
push
loopne
add
or
or
leave
popa
and
cmpsb
adc
cmp
stc
cmp
push
inc
jns
movsb
imul
lods
int
insb
je
push
xchg
rcl
sar
mov
mov
sbb
dec
and
iret
loope
pop
sti
test
xchg
lahf
adc
int3
inc
int3
jne
aam
cmpsb
faddl
flds
mov
mov
dec
and
cmp
stc
add
fistpl
jecxz
adc
ficoms
sub
jb
rorb
pop
adc
cmp
not
cwtl
cwtl
inc
frstor
loop,pt
pusha
jp
ficomps
mov
int3
push
je
jl
cmp
cltd
or
xor
mov
out
pop
mov
pushf
pop
sti
or
xchg
sub
int3
gs
stc
movsl
jb
add
popa
add
add
das
cld
sbb
rcrb
adc
jmp
mov
cmpsl
adcl
sub
les
cli
cmpl
lret
pop
sahf
lock
js
pop
mov
and
repz
lds
sbb
fcompl
aaa
inc
icebp
aas
test
mov
out
add
ja
mov
ss
les
scas
push
add
mov
mov
stc
aas
into
xor
lods
sbb
in
loope
lock
cmc
push
mov
popa
imul
and
pop
inc
movsl
sti
int3
loopne
out
cmp
cmp
in
push
push
cmp
rolb
leave
and
mov
push
aas
or
jns
push
jge
mull
nop
mov
sub
pop
sti
mov
movsb
xor
inc
negb
je
pop
subl
iret
std
add
cmp
data16
pop
xchg
or
in
rcll
mov
repz
rorb
repnz
shlb
cmpsl
bnd
es
imul
sbb
cwtl
jecxz
add
sub
iret
mov
dec
into
ficoms
and
sbb
mov
cmpsb
stc
cwtl
subb
and
inc
aam
out
cwtl
loope
hlt
subb
mov
jg
push
xchg
clc
not
sub
ja
gs
lock
mov
pop
retw
into
cmpsb
ret
adc
loope
jg
mov
testl
push
mov
lahf
xlat
std
adc
es
insl
push
lcall
jae
dec
dec
pop
fisttpll
push
jmp
and
sarl
push
push
leave
lcall
icebp
pushf
jb
out
out
cld
imul
popl
xchg
jbe
es
xor
and
lods
out
or
sbb
mov
gs
stos
int3
imul
xchg
pusha
xchg
fwait
iret
sbb
fldln2
jae
fildll
bswap
fs
test
cmpsl
xchg
insl
inc
outsb
fmul
mov
sub
xchg
addr16
out
mulb
jae
icebp
jns
jae
cmp
sbb
and
add
lret
fadds
pusha
std
cmc
mov
adc
mov
pop
repz
les
aad
add
sbb
aaa
loope
jno
sub
and
mov
cld
stc
sub
mov
mov
add
outsb
inc
fildll
test
dec
fmul
sbb
mov
imul
arpl
xor
push
push
mov
or
stos
sub
ljmp
aaa
jp
stos
hlt
mov
mov
mov
sbb
jnp
pop
mov
rcll
test
xor
test
sbb
pop
subb
aaa
cld
fwait
movsb
add
out
push
outsl
jge
fidivs
into
test
insb
mov
and
stc
push
pop
or
push
cmp
xchg
lret
lods
jno
pop
popa
and
in
das
xchg
jne
in
xchg
jecxz
roll
adcl
jnp
or
std
xchg
sbb
jmp
pop
pop
pop
out
mov
in
or
test
or
es
dec
out
into
js
shr
mov
xchg
xchg
pushf
add
pop
lds
pop
mov
mov
scas
lret
mov
dec
sub
inc
or
cmp
pop
mov
pop
js
ret
cli
scas
sub
test
sub
push
call
imull
sti
push
sbb
xchg
jmp
sub
ss
xor
add
rcr
inc
scas
test
insb
dec
sbb
lds
mov
shrb
dec
sbb
mov
jns
mov
out
test
hlt
in
int3
mov
mov
add
out
adcb
loopne
call
mov
add
jno
ds
outsb
lods
aaa
inc
and
in
insl
in
sbb
sti
sbb
mov
cs
push
sub
mov
imul
aad
or
dec
bound
rolb
popa
negb
dec
mov
dec
lahf
popf
aas
xchg
push
imul
cmp
jmp
imul
push
jmp
outsb
push
xchg
cmpsb
and
or
mov
jbe
mov
sti
jmp
cmp
int
mov
loope
sbb
cmp
aam
lahf
insl
sub
xor
fs
sub
push
push
xchg
pop
rorb
std
push
cltd
insb
sbb
sub
aad
clc
push
xchg
dec
scas
into
jno
cmp
push
lods
fsubrl
mov
push
xchg
jae
mov
or
push
pop
ret
xor
adcb
int3
xlat
imul
xlat
mov
cli
lcall
out
jecxz
jecxz
fucomp
lahf
mov
pminub
add
cmp
jne
dec
xchg
push
sub
dec
sbb
push
jecxz
je
adc
fwait
icebp
lods
inc
cltd
fiaddl
sub
movsl
sbb
push
pop
psubb
ficompl
sbb
vmovq
mov
sub
dec
fsts
lea
orl
sub
ds
push
dec
mov
adc
fidivl
or
iret
cmpsl
sti
in
inc
sarb
inc
stc
push
mov
sbb
inc
insb
xor
lods
cmp
push
test
paddq
xchg
sbb
cld
xchg
in
repz
nop
inc
test
sub
xor
xchg
mov
adc
dec
ds
xchg
mov
dec
xor
lods
xchg
mov
mov
je
lret
lahf
dec
mov
loope
data16
jg
pusha
jecxz
sbb
jg
cmp
inc
adc
fnstenv
aas
cmp
lret
jge
or
leave
sbb
ljmp
xlat
call
jle
stc
mov
and
loope
adc
xchg
cld
lock
ficoml
mov
in
push
loopne
lahf
shlb
subl
push
sub
push
or
cli
and
enter
orl
sub
das
dec
lcall
aad
out
fnstsw
sbb
inc
mov
bound
mov
sub
inc
shlb
pop
clc
imul
test
push
iret
aam
mov
or
or
add
je
and
scas
aas
mov
add
mov
fildl
or
data16
in
fstpl
xchg
bnd
sti
out
scas
in
push
pop
fdivl
outsb
addb
sahf
push
movq
ljmp
pop
add
jbe
xchg
mov
ror
and
push
rorb
in
cmc
rcll
sbb
stos
or
test
and
scas
lods
jno
cli
dec
rclb
pop
xor
adc
fadd
pushf
sub
pusha
in
popf
jge
clc
dec
or
mov
jo
loop
in
mov
push
xchg
xor
pop
push
hlt
dec
cmpsb
jmp
mov
xor
sub
gs
loope
jo
divb
xlat
pushf
mov
cli
mov
jbe
movss
pop
mov
xchg
and
fnsave
sahf
xchg
add
mov
sbb
pushf
stos
jns
scas
dec
leave
fcomps
add
popa
scas
dec
les
fisttps
adc
inc
fnstsw
mov
test
inc
enter
xor
pop
leave
stos
fmuls
scas
jp
aam
aas
test
gs
inc
jb
out
pop
jge
mov
xor
rol
fldl
aaa
jae
clc
sti
bswap
in
add
les
or
jne
mov
push
and
in
mov
dec
cwtl
mov
mov
mov
sbb
pop
pop
fistpll
daa
sahf
lcall
repnz
lock
xor
out
loope
push
adc
add
cmpsl
xchg
inc
push
inc
jb
mov
aaa
repnz
xchg
in
test
shl
mov
inc
test
cltd
xor
sbb
icebp
push
lods
or
mov
push
jg
pop
cmp
movsb
clc
loop
mov
push
lock
push
lret
je
dec
lds
test
sub
sbbb
bnd
insb
movl
fs
adc
out
xchg
xor
jle
into
sbb
xor
jb
mov
cmc
xlat
repz
jge
xchg
stc
inc
xchg
mov
mov
es
pop
mov
aas
xchg
fadds
ret
in
dec
cld
inc
push
data16
cmp
add
sub
stos
add
ja
lods
lret
ja
test
lret
and
sti
aas
adc
scas
movsb
negb
mov
out
aad
jecxz
sahf
dec
xor
cli
xchg
mov
in
shll
push
rorb
insb
lahf
push
cmovp
mov
ss
mov
xor
inc
push
jne
mov
xchg
cmpsb
mov
push
mov
out
int
inc
mov
jns
lret
fidivrl
mov
pop
sahf
rcrb
std
hlt
stos
xlat
aas
js
jle
inc
jmp
movb
adc
sub
push
scas
shrl
inc
out
or
es
cmp
ret
push
and
sub
pop
mov
dec
pop
sbb
cmp
rcl
idivb
out
jge
jecxz
push
xor
mov
add
test
js
or
dec
dec
fstl
dec
shll
cwtl
ret
leave
shlb
jne
mov
jp
add
mov
shr
test
cmpsb
rcrb
jge
xchg
ret
xlat
add
gs
ljmp
xor
popa
add
imul
repz
or
pop
sub
out
push
dec
adc
sub
adc
or
ret
cmpsl
xor
jnp
shlb
pop
aaa
and
cs
lea
enter
test
insl
and
scas
cmc
add
mov
out
or
rcrb
xchg
lods
out
mov
rorl
lods
arpl
jo
cmp
in
lret
lahf
jecxz
cmp
fxam
in
imul
push
test
outsb
stos
and
jno
sbb
xor
pop
jnp
sub
fwait
mov
add
sub
inc
xor
xchg
cmp
xchg
lock
movsb
jp
mov
xchg
ljmp
pushl
xchg
sub
mov
ret
loop
cmp
xchg
insb
gs
in
mov
add
insl
pop
fstpl
pop
xor
cmpsl
mov
into
inc
jmp
outsl
paddw
xor
dec
add
jns
jle
mov
xchg
aad
sbb
sbbb
push
repz
mov
out
popa
mov
stos
scas
sbb
xor
je
into
dec
and
movsb
test
dec
dec
sahf
notb
mov
or
cmpsl
mov
stos
cmp
mov
jp
jl
xchg
push
sti
pop
dec
or
dec
mov
test
adc
or
fdivrs
je
jge
ftst
mov
fs
lcall
lods
mov
daa
imul
test
jbe,pn
fimuls
aam
xchg
jecxz
aad
imull
mov
orl
aam
lcall
dec
adc
push
cmp
lret
lahf
test
jge
push
inc
sub
or
pop
ret
inc
test
inc
or
pop
jbe
fisttps
inc
addr16
lods
lcall
lcall
mov
xor
les
in
roll
jbe
fstpl
sahf
pop
and
jl
cltd
insb
fdivrs
mov
or
cmc
jnp
test
push
scas
add
mov
lcall
dec
test
loope
cld
adc
sti
fstpl
out
clc
mov
mov
pop
test
nop
add
push
aaa
cmp
sti
mov
lret
mov
stc
or
sub
pop
dec
roll
jg
pop
jne
and
shrl
adc
and
shll
ds
mov
cmp
fcomi
pop
sub
imul
push
xchg
mov
add
popf
jo
fsubs
or
adc
cmpsl
jmp
insb
mov
stos
in
pusha
dec
bound
mov
cmp
dec
mov
sub
pop
loopne
push
and
xor
and
arpl
jb
aam
mov
popa
cmp
lock
and
xor
add
xor
push
or
pop
xchg
cmpsb
setne
ficompl
cmp
insb
or
fsubrs
dec
dec
int3
inc
ss
sbb
push
jge
inc
sbb
push
in
xchg
outsb
cli
cld
pop
and
imul
mov
call
imul
or
mov
int3
imul
pop
lret
cwtl
mov
ret
leave
xchg
inc
iret
mov
mov
mov
test
add
fisubl
mov
cmp
pop
adc
mov
fldenv
or
sti
push
add
adc
les
xchg
add
add
gs
stos
mov
cwtl
mov
ss
push
shrb
and
clc
sub
jp
aam
scas
dec
ret
mov
xchg
movsl
xor
sbb
jecxz
sahf
mov
mov
xor
into
stc
sbb
icebp
adc
sub
fisttpl
pop
fxtract
inc
jmp
lcall
cmp
loope
sub
scas
movsl
lret
mov
and
addl
push
insl
cmpb
sub
pop
dec
js
mov
ret
xlat
pushf
sbb
aaa
sub
add
dec
nop
scas
adc
icebp
imul
mov
gs
mov
pop
mov
xlat
add
pop
inc
and
push
mov
sbb
mov
aaa
add
pop
sbb
dec
pop
mov
stc
inc
ret
repz
aam
sub
xchg
push
mov
test
add
and
xchg
mov
mov
fistl
jns
pop
mov
cmp
mov
push
pop
jmp
mov
sarb
aad
xchg
cmp
inc
adc
andl
sub
sbb
add
sbb
sar
xchg
popf
jae
adc
xlat
outsb
cmp
mov
fnstenv
mov
ja
push
inc
shrl
adc
mov
dec
and
call
xchg
loop
adc
cmc
mov
pop
add
cmpb
mov
adc
addl
shrl
aaa
sbb
sub
mov
mov
xor
xor
fists
mov
dec
stos
lcall
mov
idiv
mov
xchg
out
ja
adc
cmpsb
lret
mov
enter
cmc
aad
push
in
add
lcall
jl
adc
mov
inc
cmp
jg
repz
adc
sbb
imul
pushf
mov
out
jno
cmpsb
lcall
dec
xchg
xor
outsb
mov
fdivl
ja
idivb
push
mov
adc
or
aaa
xor
push
les
xchg
jnp
and
pop
nop
cmp
cmp
mov
push
das
adc
push
sbb
enter
iret
enter
xor
adc
sbb
jle
cmp
xor
pusha
inc
or
aam
fdivrs
and
inc
out
mov
iret
je
div
sub
in
int3
outsb
fistpll
in
outsl
mov
faddp
xor
stos
sub
pop
mov
aas
or
decl
xor
in
and
dec
rcrb
lret
imulb
repnz
mull
pushf
and
call
data16
aaa
cmp
ss
mov
fisttpl
mov
fimull
push
sub
mov
sbb
inc
rcrl
aad
xchg
idivb
imul
test
or
movsb
jb
sub
les
pop
add
fcoms
not
arpl
push
les
aad
out
push
repz
loopne
js
or
mov
pushf
sbbl
push
repnz
orl
or
cs
lret
repz
pop
lods
jle
fnstenv
and
push
test
call
adc
rorb
xchg
sub
int
in
pusha
dec
mov
fucom
je
lea
push
add
or
hlt
test
fwait
in
mov
cmp
and
jmp
cltd
ja
xchg
or
popf
mov
test
imul
icebp
xor
adc
add
xlat
or
pop
inc
mov
pop
mov
mov
push
pop
pop
out
adc
adc
cmovae
and
movsl
rorb
mov
jnp
ret
jb
inc
out
ret
add
andl
add
dec
test
shll
fsubrs
mov
in
ja
test
imul
mov
xor
fisubs
or
and
je
xor
dec
and
stos
outsb
faddl
or
adc
adc
daa
mov
cltd
stc
add
or
shll
or
mov
dec
sbb
repz
sbb
jae
jecxz
inc
lahf
cld
jmp
or
fwait
push
movsl
daa
es
pop
xchg
inc
addb
aas
gs
add
sub
bound
add
popa
xchg
addr16
je
das
add
inc
jno
and
mov
pop
xor
pop
push
popa
mov
fs
mov
push
out
push
enter
repnz
loope
shlb
cmp
sub
lcall
fisubs
roll
pop
fnstsw
fwait
std
adc
jmp
sub
mov
lahf
lahf
xchg
mov
cmp
adcb
xchg
jg
or
mov
cmp
ja
mov
cmp
aaa
inc
shrb
cmp
outsl
mov
push
stc
loop
iret
lcall
or
fsubl
adc
daa
adc
inc
stos
sbb
pop
push
inc
cmp
sti
pop
mov
add
inc
sti
pop
leave
cmpsl
push
dec
jne
and
pop
ss
in
testb
or
out
out
jns
lret
push
xchg
jmp
dec
rcl
mov
pop
aam
outsl
xor
stc
in
test
jbe
dec
mov
sbb
clc
imul
movsb
stc
lea
cmp
xchg
jnp
popa
or
dec
or
fmuls
cmp
rolb
orb
add
outsb
pop
add
pop
mov
clc
pop
xchg
lods
jne
mov
iret
sub
dec
arpl
lea
jo
push
jns
mov
loop
cmp
mov
push
les
cli
roll
cmp
js
sub
cmpsl
insb
fdivrl
negb
out
or
push
fisttpl
cmc
loopne
sub
push
testb
sub
mov
cmp
pop
push
jmp
pop
stos
mov
clc
das
jbe
loop
pop
inc
jo
idivl
loop
test
or
jb
fcmovnu
xor
cmp
jmp
push
mov
imul
push
test
cmpsb
neg
call
cmpsl
inc
stc
lahf
popa
mov
push
sbb
fsubrl
movsl
pop
out
dec
cwtl
mov
or
xor
pop
stos
push
mov
pop
fisttpl
xchg
push
and
mov
test
addr16
pop
mov
outsl
cld
xor
es
into
popa
or
cmc
xchg
xlat
push
inc
hlt
pop
shll
arpl
dec
shrl
xor
xchg
jg
xchg
daa
pop
xor
mov
push
lcall
arpl
dec
inc
xor
mov
jo
out
hlt
ficoml
adc
imul
add
push
sub
sub
jmp
push
into
adc
call
ret
push
pop
loop,pt
inc
xor
test
and
mov
adc
adc
dec
dec
out
dec
push
inc
stc
lea
xchg
inc
out
ljmp
and
stos
pusha
daa
sahf
scas
xchg
mov
lods
lret
cmp
mov
and
sub
das
and
pop
imul
imul
aas
or
insl
out
shl
std
xchg
mov
pop
mov
mov
lahf
das
mov
mov
out
jo
cmp
enter
imul
mov
mov
enter
ss
inc
pop
movsb
and
loopne
js
sub
das
add
jo
mov
shll
or
lods
sti
xchg
jno
inc
js
push
andl
xchg
roll
sub
or
add
int3
mov
and
cmpsl
repnz
jnp
fstl
xchg
mov
daa
cmpsb
xor
ret
sbb
addr16
enter
or
loopne
sub
and
cmp
or
cmp
test
inc
in
pusha
cmpsb
adc
xchg
push
lret
add
jnp
clc
mov
movsl
push
adc
js
adc
or
adc
xlat
outsb
iret
rorl
pop
rcll
icebp
out
insl
jle
das
or
jne
std
sbb
pushf
add
les
jecxz
js
testl
add
xor
add
adc
add
sbb
inc
or
sbb
jle
test
std
sub
das
sbb
xchg
call
fwait
cld
push
mov
inc
pop
mull
xchg
out
inc
mov
iret
and
in
xchg
mov
call
icebp
imul
push
inc
das
sahf
addb
inc
cmp
lock
mov
jecxz
mov
inc
fcomps
stos
or
or
imul
ljmp
pop
pop
cmp
pop
mov
vandps
inc
arpl
incb
or
test
fisttpl
out
bound
xchg
and
mov
rorb
les
mov
stc
popf
mov
mov
repnz
popf
dec
faddl
ficomps
or
inc
pop
jl
out
mov
insb
push
aas
cmpsl
mov
mov
cmp
sahf
mov
mov
lea
shlb
je
jl
ret
dec
movsb
or
mov
mov
pop
mov
push
pop
sub
push
das
jae
inc
sahf
imul
lcall
sarb
xchg
in
adc
fcoml
adc
out
jae
pop
and
enter
fwait
xchg
pop
jmp
ret
sub
js
test
incb
or
pop
mov
sub
and
push
add
and
aam
lds
push
pusha
adc
enter
negb
sbb
sbb
jmp
lcall
mov
fwait
pop
scas
pop
or
pop
or
test
or
push
je
inc
scas
int3
pushf
mov
das
ljmp
mov
js
aas
mov
mov
scas
outsl
repz
and
sbb
in
jle
pop
das
icebp
sub
cmpsb
mov
fwait
int3
mov
add
es
pop
lods
jmp
jo
pusha
sub
sbb
cmp
cmp
mov
dec
popa
mov
divb
inc
in
loopne
and
adc
adc
gs
sti
lahf
mov
dec
insb
pusha
or
jg
or
hlt
lcall
add
xchg
xchg
ret
pop
dec
dec
sub
data16
mov
jne
xor
fisubrl
mov
int3
xchg
sub
into
test
fs
fidivrl
dec
mov
push
pop
sbb
push
je
ss
not
insb
lret
sbb
add
pop
xchg
or
pop
mov
mov
cltd
mov
and
adc
lret
pop
sbb
mov
fdivr
adc
pop
push
test
repz
out
loop
ret
test
dec
std
xor
dec
and
pop
testl
in
sub
jae
push
sbb
lret
jl
jbe
std
iret
dec
mov
and
push
lret
shlb
leave
xor
mov
pop
inc
dec
jns
dec
nop
push
inc
push
addr16
and
pushf
mov
mov
lea
mov
mov
aam
xor
mov
test
insl
cmp
insl
dec
lods
loop
mov
cmc
cld
xchg
xlat
mov
add
icebp
ss
xchg
loopne
push
and
or
xchg
clc
insb
std
and
or
jl
sub
dec
jo
popf
mov
mov
iret
jne
or
das
cmpsl
push
sub
cld
aam
jo
sub
jg
lahf
mov
xor
adc
push
data16
outsb
mov
ljmp
mov
lods
adc
aam
adc
xchg
push
inc
pop
stos
fdivs
out
pop
movsb
les
fldcw
add
fstpt
insb
in
and
push
adc
movsl
jb
mov
mov
xchg
inc
xor
cli
out
mov
xchg
or
insb
sbb
jg
jmp
pusha
inc
lods
mov
or
movb
out
hlt
out
bound
mov
leave
or
push
out
sti
dec
aad
mov
mov
push
in
push
sub
dec
insl
loop
out
fs
jp
cmp
mov
pop
stos
aas
pop
cmp
mov
dec
ror
addr16
push
js
pop
cld
or
pop
push
and
adc
xor
pop
mov
outsb
ljmp
lret
dec
jmp
test
add
icebp
mov
out
scas
jecxz
frstor
jmp
lret
data16
or
xor
scas
mov
jb
mov
das
xchg
xor
shr
insb
sub
ss
bound
aad
push
arpl
fs
add
jns
xchg
inc
cmp
dec
test
lret
add
orl
loope
out
cli
aaa
hlt
sahf
or
xchg
es
mov
mov
inc
jmp
jnp
adc
adc
daa
inc
in
shrb
pop
pop
xchg
pop
dec
inc
sbb
addr16
mov
and
inc
aaa
add
jb
pop
popf
cmc
mov
cld
pushf
ffreep
xchg
aad
sbb
sub
and
mov
pop
mov
jnp
fs
xor
add
into
xlat
das
cmp
dec
stos
jmp
dec
rolb
ds
lea
fidivrl
bound
mov
adcl
add
jecxz
adc
cmpsb
sbb
fld
dec
fs
xchg
movsb
shll
aam
setge
mov
and
out
xchg
xchg
cmpsb
int3
stos
jge
inc
add
mov
add
or
mov
jae
shr
out
ds
mov
dec
cmp
out
dec
out
add
in
repnz
pop
mov
jne
xchg
lcall
jle
and
shll
lea
mov
lds
mov
shrl
pop
push
mov
test
xchg
arpl
cmp
idivl
mov
or
rcr
aad
and
jl
inc
adc
mov
lahf
rcrl
mov
lea
dec
maskmovq
stos
stc
ljmp
in
cmp
cmp
dec
push
inc
pop
mov
imull
clc
push
into
mulb
cmp
mov
and
mov
adc
jae
fisttpl
mov
inc
push
popl
in
movsb
xchg
mov
sub
adc
lods
xchg
xchg
jb
lock
or
inc
roll
out
push
sub
push
push
out
fists
adc
icebp
shlb
add
jmp
data16
test
inc
call
mov
sub
fwait
mov
add
rorl
arpl
push
mov
push
lock
inc
mov
xchg
inc
mov
sbb
lea
in
pop
jle
xlat
cmp
outsl
fisubrl
fidivrl
mov
movsl
dec
out
stos
mov
loope
stos
mov
lcall
push
negb
mov
notb
jmp
pop
stc
shll
mov
mov
pop
sbb
inc
mov
pop
faddp
clc
jns
cmp
dec
jae
lods
and
xrelease
xor
enter
movsl
js
in
ret
dec
add
push
fbld
pop
test
test
sub
push
jne
mov
scas
testb
je
add
jmp
xor
les
adc
or
insb
repnz
mov
xchg
pop
mov
add
ljmp
cltd
cmc
or
inc
jno
or
and
sub
das
lahf
cmp
push
in
mov
lds
xlat
push
mov
mov
jnp
cmp
rcrl
inc
pushf
movsb
in
mov
test
js
adc
shl
or
bound
and
add
inc
pop
lret
xor
scas
insl
ret
sub
aad
mov
mov
decl
out
incb
add
cmc
popa
sub
movsl
std
test
push
sbbb
dec
fisubs
gs
iret
mov
jae
push
sbb
xor
add
popf
push
push
repz
xchg
lret
sahf
mov
lds
push
jae
xor
mov
mov
mov
push
sub
fidivrs
bound
add
or
cmp
std
pop
loop
add
int
cwtl
popf
adc
lahf
push
mov
cmp
inc
lods
dec
push
in
push
sub
lods
cmpsl
push
ret
xor
inc
test
lea
and
sbb
sub
sti
sbbb
in
inc
sub
lea
js
aaa
bnd
push
xchg
mov
ficoml
push
mov
cmp
iret
jbe
mov
push
mov
scas
pop
pop
mov
inc
adc
push
cld
and
in
xchg
inc
das
adc
xchg
mov
mov
adc
fwait
cld
fs
in
out
xchg
jno
mov
imul
adc
mov
lds
push
push
sub
pop
and
addr16
xchg
sbb
mov
scas
cmp
cmp
outsl
mov
mulb
fmull
out
jp
ljmp
scas
cmc
xchg
lea
cwtl
addr16
in
inc
bsf
add
mov
pop
pop
repz
jbe
ja
inc
movb
xchg
clc
imul
pushf
lret
sbb
pminub
lds
mov
fbld
jp
mov
rorb
pop
pop
mov
adcl
cmpsb
lret
cwtl
and
fucomi
dec
mov
sub
xor
push
mov
cmp
hlt
fldenv
sub
inc
mov
subb
dec
jecxz
dec
or
movsb
cmp
mov
adc
lods
loope
dec
insl
cmp
or
xchg
call
mov
inc
pop
push
lds
sub
xchg
mov
ror
int3
js
outsb
jge
add
cmp
adcb
pop
jg
xchg
push
pop
and
jp
lods
outsl
sub
jno
aaa
pusha
sbb
sub
mov
dec
push
nop
and
fstl
dec
mov
aad
mov
jnp
xor
loope
inc
dec
dec
sarl
mov
outsb
mov
mov
fsub
pop
jo
outsb
xorl
fidivrl
pusha
sub
repnz
sub
loope
fsubr
push
dec
xor
inc
loop
or
mov
sub
rcll
cld
mov
pop
inc
popa
or
or
push
dec
arpl
fcomps
xchg
adc
pusha
dec
dec
cld
xchg
cli
inc
lods
cmp
push
adc
scas
int
aas
xchg
jne
jmp
icebp
mov
fdivrs
xor
fdivr
popf
cmp
xchg
shlb
mov
lret
fimull
add
stos
mov
pop
aam
cwtl
lds
add
adc
test
loope
xchg
movsb
bound
adc
xchg
sub
pop
imul
jae
mov
int
dec
imul
sub
cs
stc
sub
loope
push
stos
out
xor
sbb
mov
loop
adc
mov
pop
movsb
pop
pusha
or
lods
cltd
mov
add
xchg
popf
inc
jbe
repnz
mov
sbb
test
arpl
sbb
xchg
mov
cmp
adc
int
xchg
stos
lret
inc
ja
mov
pop
divb
inc
mov
dec
mov
repz
xor
push
ss
mov
sbb
sbb
or
adc
int
mov
bound
and
in
rolb
mov
mov
xor
mov
stos
pop
adc
dec
idiv
bound
mov
push
arpl
and
xchg
call
xor
loopne
xor
lods
xchg
push
or
mov
fdivrp
in
ds
jmp
pop
cltd
push
in
push
popf
gs
lods
daa
aas
adc
mov
lret
cmp
movsl
push
lret
cmp
xchg
push
dec
cld
aam
out
inc
dec
fs
inc
or
fnsave
pop
ja
mov
mov
add
mov
dec
or
sbbb
dec
mov
mov
mov
or
out
pop
icebp
jo
shl
or
dec
pushf
push
jmp
xor
sbb
icebp
into
xor
jae
xchg
test
roll
int
jge
xor
or
arpl
add
vdivss
inc
or
movsb
inc
les
xor
aas
add
outsl
lahf
cmp
imul
inc
lret
movsl
mov
loopne
pop
mov
push
or
pop
jne
inc
mov
sbbb
inc
mov
cmpsb
mov
xchg
mov
dec
hlt
push
int3
subb
test
fsts
xor
repnz
in
and
repz
nop
adc
mov
mov
hlt
in
stos
xchg
dec
lea
cs
je
push
inc
xor
inc
push
mov
sbb
lret
hlt
aas
sbb
inc
stos
mov
enter
push
xchg
mov
mul
add
mov
popa
mov
mov
rclb
pop
push
icebp
mov
pop
shrb
push
jecxz
lds
ret
out
cmp
add
and
sub
sub
arpl
aad
push
sahf
add
enter
repz
fiadds
xchg
rclb
loope
pop
inc
stc
xor
mov
xchg
cmp
jmp
mov
roll
mov
sbb
lret
das
mov
jle
sub
push
insb
cwtl
aaa
dec
outsl
sbb
sbb
adc
insl
ljmp
in
rolb
notb
sub
inc
int
fcmovne
mov
and
add
rorb
lret
sarb
cmp
or
out
mov
and
and
iret
jmp
mov
cld
xor
je
and
pop
mov
adc
test
outsl
arpl
xchg
loope
les
pop
pusha
test
lea
xchg
lcall
in
clc
dec
xchg
int
cs
pushf
pop
call
inc
pop
movsl
fnstenv
xchg
and
jge
xor
and
pop
pop
jbe
mov
jno
repnz
push
scas
adcl
jb
jecxz
sub
stos
cmp
or
test
hlt
or
aaa
icebp
cmpsb
pusha
pop
and
xor
mov
out
insb
add
pop
lods
imul
scas
add
nop
lea
popa
lods
fsubs
jmp
cmp
fld
add
xlat
lcall
mov
mov
dec
fbld
hlt
mov
and
and
dec
mov
in
adc
mov
sbb
mov
sub
push
int
pop
push
jle
mov
hlt
xor
iret
or
sbb
jns
mov
cmp
xchg
pop
xchg
mov
in
jmp
cmp
add
jg
cli
and
or
inc
dec
pop
add
ds
pushf
pop
adc
fwait
arpl
cmp
push
and
xchg
call
jecxz
jl
xor
push
sti
adc
sub
jmp
test
repz
scas
cmp
xchg
ja
pop
fadds
pop
fsubr
mov
xor
lret
popfw
sub
rcll
sbb
inc
loope
and
ficomps
lahf
in
pop
mov
or
mov
popa
inc
inc
ret
aas
push
cmc
dec
stos
std
popf
into
mov
and
push
xchg
mov
xor
sahf
cmp
sbb
stc
out
ret
in
sbb
mov
imull
divl
push
xor
pop
rcrl
jp
pushf
inc
shl
mov
inc
pop
push
mov
jecxz
fiaddl
fdivs
imul
btr
pop
std
pop
mov
or
push
and
mov
pusha
hlt
in
icebp
fcompl
mov
sub
inc
inc
lock
jnp
mov
mov
jle
or
adc
and
mov
mov
cmc
std
jg
out
jp
mov
cmp
in
jmp
push
insl
movsl
pushf
into
xchg
ret
pop
idivb
dec
repz
and
cmp
shll
in
xchg
and
nop
lret
push
mov
leave
aas
addr16
lods
or
inc
sbb
sbb
stc
inc
xchg
or
jb
ljmp
xchg
subl
jp
loope
aas
out
imul
shlb
or
mov
nop
notl
sahf
pop
jge
xchg
gs
fimull
fcoms
mov
xorb
out
push
ret
aad
sub
stos
add
sub
push
xor
out
sbb
iret
orps
and
test
je
and
push
ja
cmove
loopne
dec
lods
mov
inc
adc
je
push
push
push
sbb
neg
and
jmp
pop
fnstenv
jecxz
les
fimuls
lretw
sub
test
andb
fwait
jl
ss
test
rol
in
int3
push
sub
mov
cmpsb
mov
fdivrs
in
lea
jl
cmpsb
adc
out
cmp
push
xchg
mov
add
cmpsl
popa
stc
and
pop
negl
mov
adc
dec
cld
orb
mov
and
xor
cwtl
adc
xchg
jo
xchg
dec
loope
push
sbb
mov
mov
inc
push
push
sahf
mov
inc
stos
inc
push
movsl
repz
xchg
add
inc
dec
xchg
iret
fnstsw
add
sub
or
dec
cmpsl
mov
and
lret
in
push
call
jae
xchg
call
xor
inc
out
sbb
jecxz
mov
arpl
lods
pushl
outsl
icebp
cmp
inc
mov
xchg
enter
sub
adc
jl
je
and
lret
in
pop
test
loopne
mov
mov
or
addr16
cmc
ret
sbb
lds
pop
fmuls
mov
js
or
jns
or
inc
in
xor
pop
mov
repnz
repnz
mov
repnz
leave
lods
adc
ja
pop
fldt
shl
std
sub
out
jo
or
xchg
popa
adc
jl
dec
xlat
cmp
mov
mov
adc
aad
jae
and
lods
enter
stos
sub
sbb
push
or
mov
insl
je
add
xlat
add
in
rorb
popa
pmullw
sarl
adc
lods
loopne
stos
push
push
roll
cli
push
les
ficompl
sbb
sbb
push
fidivl
cmp
push
xchg
insb
adc
andl
scas
pop
negl
xchg
imul
and
data16
les
inc
xor
cmpsb
mov
sbb
loopne
and
mov
sbb
dec
sub
xor
fiadds
lret
out
out
adc
jnp
mov
dec
fdecstp
movsb
aas
dec
mov
xchg
xchg
or
xchg
xchg
stc
mov
lcall
push
pop
fs
in
popf
push
roll
dec
pop
xor
fidivrs
mov
cmc
popa
and
push
add
inc
std
clc
jnp
fidivrs
push
add
int
hlt
scas
fldl
jmp
aad
negl
or
sub
add
inc
out
push
or
pop
pop
adc
dec
int
insb
push
shrl
and
xchg
ja
rep
test
push
test
xor
jne
pop
addb
dec
xchg
inc
pop
aas
cmpsl
mov
mov
call
cltd
xorb
mov
lock
sti
inc
add
pop
sbb
or
nop
push
inc
negl
in
cmp
adc
mov
ljmp
cli
aaa
adc
mov
jmp
add
dec
add
aam
mov
and
or
xchg
in
lret
add
xor
xchg
in
lds
fistpl
or
jno
stos
movsb
cwtl
not
jo
jns
lods
jne
aam
in
les
xchg
and
jle
mov
mov
push
jne
and
sbb
push
lahf
adc
jecxz
enter
mov
loope
mov
mov
shll
out
ds
outsb
cmp
add
fists
into
popa
add
sahf
dec
icebp
ret
imul
lds
pop
pop
and
les
add
cwtl
inc
ret
sbb
inc
jnp
push
movsb
dec
out
aad
not
lods
movsl
dec
fs
xor
lret
jmp
cmp
mov
dec
into
outsb
outsb
outsb
mov
popf
ret
jbe
fildl
popf
add
push
loope
cmpsb
pushw
and
inc
lcall
push
mov
into
pop
xor
push
shlb
xchg
je
repnz
cmp
sub
imul
loop
dec
mov
stos
add
push
test
int3
das
fistps
sub
daa
cs
jg
add
or
inc
ret
aas
fcmovu
popa
push
dec
inc
xchg
mov
test
nop
in
movsb
inc
pop
and
int3
fmul
add
rcll
add
imul
or
mov
jo
aad
pop
pop
loop
pop
jmp
mov
inc
add
inc
insb
cmpb
mov
movsb
adc
add
sahf
iret
xchg
or
push
pop
xchg
mov
inc
inc
lret
arpl
or
dec
adc
cmp
sbb
mov
jmp
xorb
mov
push
xor
imul
fisubrs
and
test
aad
fcomi
out
push
out
push
frstor
adc
pushf
xlat
xor
jl
repz
inc
or
aad
sbbl
inc
cmp
or
je
push
cmpsb
and
enter
push
idivl
aam
es
sbb
test
sbb
test
jl
cmp
lahf
mov
insl
mul
into
cltd
aam
ja
jp
inc
loopne
stc
cld
lcall
out
testl
scas
push
pop
in
repnz
lret
push
jnp
in
mov
cmc
pop
cmp
jmp
adc
mov
mov
mov
ffreep
dec
and
sub
xor
shrb
dec
push
js
aad
jge
aas
dec
stos
and
jno
outsl
sub
in
or
add
outsl
stc
cmp
inc
ret
mov
test
mov
test
out
daa
mov
push
or
cmpl
or
fisubl
mov
xchg
push
stos
and
ficoms
jns
inc
iret
pop
shll
mov
pop
bnd
jns
test
push
fdivl
jns
insb
lds
nop
dec
mov
aas
std
or
mov
jnp
dec
inc
xchg
popa
inc
loopne
int3
adc
ljmp
lock
pop
stc
jbe
push
xchg
lcall
cmpsb
fimuls
pusha
xor
adc
xor
fdivs
and
scas
aaa
std
mov
faddl
pop
add
leave
je
int3
clc
aaa
loop
mov
dec
push
lret
loope
ret
aas
jae
mov
push
stos
xor
cmp
es
and
dec
sbbl
in
mov
cmpsl
cmp
insl
jo
aam
addl
dec
or
or
pop
addr16
sub
rcl
push
fcoml
mov
imul
ficompl
test
shr
dec
imul
clc
popf
rorl
xor
push
mov
sub
and
divb
fbstp
mov
pop
lret
inc
adc
fidivrl
outsb
adc
iret
push
sbb
mov
shll
and
xchg
and
jo
jle
adc
mov
add
fwait
shrl
mov
aaa
push
adc
push
insl
jl
pushf
outsb
sti
cmp
lea
lea
push
mov
jae
jno
add
inc
andb
cmp
jo
out
int
xor
out
mov
cli
bound
pop
int
pop
in
push
lock
dec
fimuls
ljmp
mov
jo
and
outsb
fucomi
xor
movl
bound
push
rcrb
negb
push
or
not
or
dec
loop
stos
test
ljmp
push
clc
fidivrl
in
mov
loope
lock
adc
mov
push
push
fs
mov
push
fidivrs
das
adc
xchg
mov
jns
pop
push
cwtl
mov
pushf
repnz
test
cli
das
sub
in
push
in
mov
call
cmp
push
scas
push
cmp
arpl
sub
xor
pushl
sbb
gs
push
ror
pop
outsb
xor
fisubrl
cmp
mov
jge
jge
out
test
repnz
mov
pop
je
loopne
popa
gs
faddp
test
pop
xchg
inc
insb
addb
int
pop
xchg
loop
nop
lods
dec
enter
daa
idivb
push
insb
rol
outsb
test
scas
fdivs
cwtl
sbb
mov
jecxz
mov
add
push
rcr
mov
push
bound
sbb
je
mov
mov
sbbl
mov
ret
int
add
mov
xor
call
adc
out
unpcklps
frstor
add
xor
dec
and
push
xchg
aas
out
hlt
das
sbb
inc
stos
mov
or
xor
lret
ficompl
inc
jnp
ficomps
test
jp
inc
mov
getsec
mov
fdivs
scas
test
in
pop
ja
dec
adc
or
jno
ret
pop
stos
data16
xor
outsl
negb
jle
stos
into
push
mov
and
xor
fs
xchg
xchg
aas
fldt
sbb
sub
mov
and
jecxz
scas
xchg
push
imull
pop
pop
jl
pop
shrb
sbb
ds
jbe
pop
mov
in
es
mov
inc
mov
stos
jmp
or
outsl
ljmp
push
jbe
xor
dec
sub
mov
int
lret
adc
insl
dec
in
ret
lock
xchg
xlat
adc
add
cmp
jns
and
aad
jp
enter
mov
loopne
xor
sub
test
cmp
and
adcb
add
pop
xchg
in
sub
jle
popf
call
cmpsb
and
repz
mov
lock
test
and
adcl
cmp
pop
mov
sbb
jge
inc
insl
pop
pop
fwait
cli
xchg
negl
mov
xchg
dec
clc
jg
divl
dec
es
fcmove
jne
loopne
es
leave
repnz
push
insb
mov
in
push
shlb
cmc
arpl
mov
scas
dec
sbb
cwtl
subl
or
rorl
or
push
cli
shll
mov
test
stos
mov
adc
or
mov
push
inc
pusha
inc
lock
pushf
pop
mov
inc
pop
jb
inc
aas
ficompl
bound
fnstenv
push
loopne
inc
call
daa
push
popf
and
sbb
sti
cwtl
test
fiadds
and
sub
es
and
sbb
je
addr16
sub
xlat
xchg
sub
adc
in
call
stc
push
mov
jne
sub
xor
fs
sbb
xor
mov
gs
repnz
or
cmpsl
in
rorb
add
leave
xchg
popa
popf
or
pop
jl
sub
stos
and
outsl
je
imul
xchg
popa
pop
out
and
sub
gs
mov
jp
sub
jns
mov
loopne
rol
test
push
iret
pop
mov
insl
fsubrs
push
adcl
add
adc
mov
xchg
and
fcomip
sub
adc
test
dec
jl
in
clc
xor
mov
scas
mov
ss
shlb
inc
in
popa
mov
iret
int3
jno
dec
cmpsl
data16
in
jb
cmp
mov
repnz
jmp
mov
mov
inc
loope
or
dec
sub
or
lcall
in
add
lods
fistps
in
repz
movsb
cmp
pop
adc
bound
pop
into
sub
mov
fs
xor
clc
cmp
addl
nop
sahf
cmpsb
sbb
ret
or
mov
dec
fldcw
pop
push
adc
lahf
sbb
push
cmp
push
or
outsl
pop
dec
adc
movsb
std
xlat
les
ret
mov
xor
rol
or
shll
xor
mov
loope
xor
loopne
xchg
lcall
cwtl
xor
in
icebp
mov
and
out
and
cmpsb
inc
or
les
stc
out
mov
ss
lods
ficompl
clc
mov
jo
mov
sub
push
cltd
cli
cmp
sub
inc
int
jae
inc
pop
es
data16
dec
adcl
pusha
call
or
shrb
dec
xor
mov
divl
mov
sar
in
sbb
jnp
out
fstps
push
rclb
pop
jnp
jg
in
fs
loopne
insb
inc
inc
icebp
fstpl
inc
mov
cmp
jl
jg
subb
pop
inc
add
out
push
icebp
mov
cmp
in
xrelease
mov
daa
cmp
sbb
and
nopl
push
lea
cli
pop
sbb
or
repnz
dec
jae
jge
scas
stos
sbb
nop
mov
push
push
cmp
stos
jle
add
mov
in
add
test
lock
cmpsl
sbb
dec
scas
xchg
inc
fildll
hlt
sti
add
cmp
arpl
jle
rorl
je
popf
mov
or
jp
pop
popa
int3
adc
popa
add
es
int
enter
inc
jle
add
xor
out
inc
cli
cmp
dec
push
or
ljmpw
jns
pop
out
lret
pop
mov
cmp
out
dec
lret
dec
mov
hlt
sub
push
shll
adc
mov
ret
lds
inc
push
ja
stos
outsb
add
jno
lret
sub
mov
xor
mov
lret
cmp
xchg
dec
pop
aam
and
xchg
add
daa
imul
and
out
push
sbb
cltd
mov
flds
and
loope
bound
mov
inc
push
mov
ret
or
xchg
pusha
pop
imul
cmp
xor
icebp
jge
lock
shll
push
movsb
pop
in
in
inc
push
je
ucomiss
jmp
ljmp
pop
dec
jae
and
mov
push
mov
xor
lahf
sub
stos
push
stc
push
js
loopne
push
cmp
sbb
pop
hlt
rcrl
xorl
mov
pop
cmp
cwtl
jp
test
insb
popa
jnp
sub
fwait
jne
push
aaa
dec
shlb
add
pop
and
repz
lds
js
pop
iret
mov
pop
inc
add
adc
loope
sbb
sub
iret
dec
inc
adcl
jo
mov
and
ret
out
xchg
incb
imul
jg
movsl
mov
aad
sbb
lret
mov
pop
notl
mov
add
mov
test
jns
cwtl
es
lahf
jle
and
inc
xor
add
pop
jl
fbld
lret
xor
jecxz
faddl
pop
push
sub
dec
cmp
test
pop
sub
outsb
subb
pop
add
inc
scas
xchg
mov
sub
int3
arpl
push
cld
mov
aad
loop
jnp
cltd
movzbl
mov
xchg
add
sub
push
jg
test
xchg
lret
stos
in
shlb
pushf
jle
aas
or
int
sbb
fcmovb
adc
dec
movsl
mov
cmpl
cs
push
jns
in
mov
inc
push
or
je
sbb
into
in
les
out
out
neg
js
inc
pop
pop
inc
leave
adc
aas
leave
xchg
andl
sbb
jge
xchg
lods
mov
sub
add
inc
pop
xchg
in
test
and
xchg
lods
mov
add
fadds
cmp
lock
stc
pop
pop
in
ret
dec
mov
xor
shl
ucomiss
jae
loop
fwait
nop
and
xchg
sbb
pop
rcrl
xor
and
iret
frstor
inc
sahf
movb
lea
xor
orl
daa
ljmp
enter
out
jnp
push
mov
xor
push
pop
cmpsb
add
mov
adc
test
inc
mov
andl
and
pop
xor
sbb
into
cld
inc
sub
mov
popf
xlat
mov
fcmovu
sti
xchg
jno
inc
add
cmp
inc
pop
mov
rolb
into
or
sub
push
mov
cmpl
out
imul
lret
cmp
cmp
stc
stos
xchg
xlat
es
pop
mov
jp
add
inc
sub
jb
mov
mov
push
jmp
dec
mov
scas
gs
std
sbb
mov
std
jbe
jg
dec
or
jge
xchg
push
xchg
pop
iret
std
cld
hlt
push
jl
cmp
mov
lds
pop
cmp
lods
jmp
mov
lds
jnp
add
xor
inc
leave
xchg
int3
xchg
jecxz
outsl
loope
data16
push
push
inc
ss
mov
popa
cs
out
mov
push
insb
js
pop
inc
rcll
or
shlb
and
jnp
jmp
cmp
idivl
pop
or
push
jle
int3
xor
enter
addl
ret
and
cmp
fs
test
pop
stos
repz
roll
adc
xchg
sbb
jmp
stos
scas
call
push
push
insl
adc
insb
adc
xchg
popf
bound
mov
daa
and
out
icebp
push
lret
pusha
test
repnz
rcrb
dec
ret
xlat
testb
dec
adc
addr16
mov
xor
adc
jle
mov
push
fcoml
dec
xor
push
add
mov
lcall
aaa
cmpsl
test
xchg
aam
mov
mov
movsb
pushf
adc
sbb
mov
pop
adcb
lds
xor
out
dec
mov
dec
adc
incb
sti
sahf
ss
mov
xchg
cmp
push
pop
xchg
and
sbbb
aam
adc
and
mov
aad
mov
pop
pop
pop
jo
popa
dec
xchg
in
xchg
mov
aam
outsl
scas
fiaddl
rorb
pop
inc
adc
sub
push
jnp
adc
or
pop
scas
and
or
rcll
xchg
cli
jg
cltd
fsubrp
push
clc
gs
mov
fdivp
inc
fsubrl
addr16
inc
mov
pushl
sub
out
mov
xlat
popa
adc
ljmp
jbe
push
and
sbb
adc
add
inc
jecxz
cld
jle
push
dec
dec
pop
out
inc
push
fs
jle
sub
popf
cmp
pop
jl
mov
decl
lret
adc
data16
xor
mov
or
inc
icebp
cld
in
dec
loope
insl
andl
and
in
int
je
loop
lods
ficomps
lods
pop
cs
push
fnstenv
aam
testl
xchg
sbb
jle
adc
pop
mov
cmp
adc
cmp
pop
dec
push
mov
dec
in
inc
sub
imul
shrl
jns
xor
shl
cmpsl
jp
mov
add
xchg
xchg
std
cld
cs
xchg
sti
adc
imul
jns
inc
and
and
test
inc
and
inc
jae
push
and
inc
pop
lret
insb
mov
mov
sar
movsb
mov
lea
mov
sub
xor
in
dec
push
mov
dec
add
xchg
sbb
aaa
dec
addr16
mov
gs
mov
lcall
outsl
push
dec
jle
sti
pushf
cmc
std
fldcw
lret
mov
fs
int
orl
nop
negl
dec
pop
mov
js
int3
fidivrl
xorl
fucom
or
aas
cmp
mov
ret
add
xor
pushf
out
inc
cmp
mov
rolb
stos
xchg
cmp
push
pop
pop
push
lcall
jne
shr
cmp
cwtl
repz
cmc
lahf
ljmp
sub
dec
stos
lcall
mov
pop
add
jo
xor
ljmp
mov
pop
pop
jbe
push
add
dec
cmp
pop
fcoml
xchg
mov
outsb
push
cmp
shrl
mov
imul
push
icebp
xor
pop
test
es
out
dec
mov
loope
hlt
mov
adc
ja
fistpll
and
outsl
adc
sub
pusha
cmp
fstl
sbb
push
dec
stos
fcompl
jmp
mov
lods
dec
mov
es
jne
adc
js
mov
push
pop
lock
and
xor
or
sbb
mov
fdivs
clc
jne
add
fistps
dec
xchg
pop
iret
inc
ret
icebp
push
and
or
pushf
mov
repz
test
adc
rcll
sub
sbb
jae
lock
hlt
pop
adc
push
shrl
push
xor
mov
movsb
imul
jb
ljmp
repnz
cs
mov
sub
add
jle
nop
sub
cli
and
jo
lock
sbb
adc
lock
mov
mov
out
popa
sub
rolb
nop
loop
insl
sbb
popf
scas
pop
inc
jmp
cmp
xchg
movsb
insl
sbb
pop
std
pop
push
xchg
xor
lds
or
sub
scas
mov
lret
les
lcall
aam
aam
xor
mov
mov
clc
mov
rolb
fldenv
rcrl
and
sbb
insb
hlt
pop
das
adc
mov
js
cltd
test
pop
stos
scas
jae
imul
pop
xchg
jae
jl
pop
mov
mov
ljmp
push
jg
jns
push
lods
push
in
sbb
or
sti
pushf
cmpb
out
pop
aas
sbb
sbb
sub
sub
scas
push
jbe
loope
adc
mov
ret
mov
out
js
add
ret
or
out
in
jns
cmp
push
xchg
mov
xchg
movsb
sub
push
test
add
cli
and
gs
aas
lds
xchg
les
out
pushf
scas
xchg
shlb
bound
subl
jmp
rclb
jmp
out
insb
ljmp
jge
xchg
push
cmp
mov
and
sub
xchg
les
jns
repnz
int3
inc
xlat
orl
xor
cmp
jge
into
ds
push
ficoml
xchg
dec
scas
push
out
clc
lcall
int
xor
push
push
mov
movsb
push
in
enter
add
lods
imull
pop
sub
mov
fnstcw
fcmovnbe
mov
mov
adc
dec
push
mov
sbb
jle
push
daa
es
add
jg
jno
out
pop
push
movsb
jae
push
and
push
lods
mov
popa
cltd
subb
rolb
cmp
inc
adc
or
stc
pop
dec
gs
xorb
cmc
idivb
push
ret
cmpsl
jg
insl
movsl
sbb
lahf
sub
cmp
dec
imul
daa
enter
and
pop
ss
sub
push
je
bound
jge
jmp
pop
pushf
mov
lret
aaa
cs
adc
shlb
pop
fcoms
jo
je
inc
test
ucomiss
cwtl
dec
mov
push
test
gs
xor
inc
scas
pop
sbb
jmp
cs
fwait
in
scas
lahf
mov
loopne
sub
cmc
xchg
in
stc
dec
fwait
clc
or
push
sbb
push
add
push
xchg
out
sahf
mov
jbe
mov
int3
loop
je
dec
cld
mov
dec
adc
sbb
add
push
xchg
ret
jecxz
or
sbbb
xor
mov
std
jl
jecxz
loopne
pop
adcb
test
or
mov
ds
iret
mov
test
inc
mov
xor
out
pusha
es
cmp
scas
inc
loop
xor
popa
sbb
xchg
inc
lahf
pushf
add
mov
add
push
or
push
xchg
mulb
jmp
mov
je
popa
outsb
push
or
jne
hlt
adc
cltd
sub
lock
test
aas
mov
push
pop
mov
into
daa
push
leave
icebp
or
scas
adc
stc
fistpl
test
push
popf
mov
lret
pop
shrb
rsqrtps
icebp
sub
add
mov
out
scas
push
pop
in
jb
pop
rorl
or
shll
and
ret
ds
mov
bound
sar
jecxz
push
add
cmpsl
xchg
sti
pop
cmpsl
in
repz
js
ds
mov
int3
adc
cli
adc
or
add
ret
lret
fdiv
testl
call
mov
stc
add
push
add
sub
dec
pop
xor
cmp
pusha
sbb
mov
fildll
inc
adc
sub
out
jmp
pop
cld
ds
cmp
imul
adc
idivl
cmpsb
mov
adc
or
xchg
inc
xor
inc
popf
pop
xlat
hlt
sbb
outsb
mov
mov
sbb
lret
into
rcrl
jg
aad
repz
orb
pop
sub
lret
aas
mov
cmp
and
push
or
scas
loopne
or
pop
xchg
adc
faddl
stos
xchg
cli
shl
and
aam
mov
shl
or
jnp
movsl
lods
lahf
insl
sub
xchg
aad
gs
and
cmp
sbb
js
pop
or
cwtl
stc
push
aas
add
fadd
in
jmp
pusha
xorl
dec
fwait
invd
or
test
mov
or
aas
cmp
cltd
mov
mov
in
xchg
sbb
jg
dec
adc
cli
sub
rorl
mov
leave
and
pop
and
dec
cld
in
xchg
movsb
pop
dec
pop
and
dec
sbb
adc
sbb
sub
loop
mov
scas
xor
sbb
xchg
in
adc
test
stos
enter
sub
push
push
pushf
loopne
rcl
push
arpl
hlt
int3
lock
cltd
mov
insb
adc
repz
xchg
decl
xlat
inc
mov
je
je
jmp
outsl
int3
sbb
cmp
adc
push
push
scas
subl
ret
dec
push
inc
loope
in
scas
mov
or
cwtl
cmp
pop
addb
ror
pop
push
aam
inc
mov
jge
repz
push
gs
or
lods
out
xor
in
shl
aam
or
mov
and
loopne
jb
mov
mov
add
ds
sbb
push
pop
inc
test
or
mov
iret
push
dec
fistl
bound
into
mov
mov
xchg
mov
push
std
call
lods
pop
and
push
push
xchg
add
test
por
xchg
add
fs
mov
push
bts
add
pop
jp
outsb
lret
and
push
add
cmp
call
test
dec
sub
adc
rolb
xor
dec
xchg
out
gs
push
lret
sbb
out
mov
dec
stc
stc
mov
in
cmp
dec
sub
jl
dec
fbstp
sbb
fsubl
aaa
push
add
adc
jp
mov
loop
add
inc
pop
push
push
call
or
popf
mov
bound
iret
lret
pushf
sub
xor
jbe
enter
mov
addr16
test
adc
xchg
cmpsb
push
push
or
jno
push
je
mov
pop
sahf
mov
pop
out
cltd
add
mov
fistps
aad
mov
jmp
pop
jg
add
out
add
xchg
jl
add
sub
stos
mov
addr16
mov
jp
sbb
add
movsb
pop
fmull
adc
fsin
sbb
movb
cmp
pop
std
lds
cmp
push
popa
roll
jb
inc
inc
or
js
nop
hlt
dec
jb
subb
repnz
stc
push
in
lahf
and
ret
ficompl
sub
lods
sub
mull
add
in
fucom
mov
les
mov
adc
inc
test
shlb
stos
pop
dec
dec
fdivp
outsl
stos
push
xchg
add
xchg
push
pushf
scas
pop
cmp
imul
insb
or
jo
cwtl
add
cmpsb
mov
xlat
rclb
mov
mov
outsb
push
dec
pop
jno
and
imul
jnp
popa
insb
jge
into
stos
mov
pop
lret
mov
mov
repnz
sbb
adc
in
bound
xchg
push
and
sub
xor
and
inc
decb
ljmp
cwtl
je
jge
iret
adc
jg
mov
cmp
scas
inc
push
lret
cmpsl
adc
mov
out
and
ds
fcmove
roll
cli
xchg
jnp
cmp
mov
push
push
add
loopne
inc
xchg
in
push
xor
xchg
stos
cmp
sub
inc
mov
xor
xchg
in
inc
mov
xor
xchg
fadds
jo
jbe
pop
repz
aas
std
mov
fbstp
mov
aad
lock
mov
fstps
or
xor
mov
lahf
jns
push
nop
sub
sbb
les
sub
mov
mov
ja
sbb
add
dec
inc
mov
lcall
add
sub
pop
aaa
lods
inc
dec
xor
mov
repnz
int
lret
call
push
mov
and
sbb
icebp
fwait
adc
inc
mov
iret
lods
addl
shlb
and
push
push
xchg
aam
sbbb
add
xor
repnz
repz
dec
mov
lock
mov
aaa
xchg
sub
lds
dec
cs
lods
je
es
lret
arpl
mov
imul
cmp
jecxz
cmpsb
cmc
xlat
in
adcl
rorl
and
mov
jo
xor
and
mov
xor
sbb
stc
icebp
mov
arpl
jl
fldt
fadds
inc
test
jnp
jne
xchg
xchg
movsb
cli
ljmp
adcl
push
xchg
jecxz
push
es
orb
sub
and
repz
std
ja
mov
jecxz
xchg
incl
cmc
push
adc
das
ja
daa
out
xchg
mov
out
push
gs
gs
movsb
in
in
push
sbb
stc
outsl
mov
cmp
jmp
test
fnstenv
fisttps
pop
add
add
adc
and
data16
mov
out
mov
cmp
jns
daa
cmp
sbb
dec
pop
into
sub
cmp
in
xchg
mov
cmp
leave
hlt
jp
mov
pop
fwait
mov
mov
cltd
xchg
jae
push
repnz
insb
mov
cld
sbb
dec
repz
xor
or
cwtl
repz
xlat
push
mov
xchg
jmp
cli
xchg
cmp
fisubrl
cmc
cmp
ret
jp
sub
test
xchg
mov
out
push
lret
mov
fidivl
iret
lock
aaa
sub
xor
adc
addb
gs
or
pusha
sbb
jo
xchg
jns
and
icebp
push
and
dec
lock
mov
lcall
mov
test
int3
fs
or
clc
popa
outsl
sub
pop
or
addb
xchg
pop
lcall
fimuls
insl
jle
stos
pop
mov
ja
sub
dec
out
pmullw
arpl
std
xchg
cmp
out
push
jp
test
or
test
stos
inc
cmp
mov
and
imul
cmpsb
das
repnz
imulb
adc
mov
test
loope
mov
and
pop
jp
mov
add
push
and
sbbb
cld
xor
leave
xchg
sahf
or
xchg
xchg
fisttps
mov
nop
xor
mov
xor
mov
and
mov
lea
lock
js
fiaddl
add
loope
jae
adc
push
cmp
cli
lock
cmpsb
test
int
movsl
orl
dec
in
outsl
dec
dec
shlb
ret
xor
inc
xchg
pop
cmp
push
js
dec
pop
inc
inc
lea
xchg
and
sbb
lock
aam
sub
in
call
call
lahf
lret
mov
push
daa
in
mov
fisubl
insl
test
xchg
jp
sub
cmpb
mov
fildll
iret
test
dec
mov
mov
push
fistpl
test
stos
pop
inc
and
pop
and
push
insl
leave
pop
push
fst
test
ja
mov
pop
jge
subl
mov
pop
pop
push
add
lcall
jl
jnp
xor
out
addb
outsl
scas
rcl
mov
mov
jo
out
dec
lahf
xchg
ret
les
iret
add
das
fucomip
cmp
ja
lahf
xor
enter
xchg
mov
fildl
jge
push
sub
push
mov
sbb
loopne
or
enter
movsl
lds
pop
bound
hlt
ds
aas
fwait
jns
mov
jb
mov
mov
addr16
lock
mov
cld
dec
mov
call
pop
or
add
imul
and
movsl
sub
xor
out
in
je
aam
push
xor
xchg
mov
xchg
iret
mov
xchg
leave
xor
xchg
jge
mov
outsl
mov
mov
mov
push
loopne
cli
push
mov
sbb
dec
xchg
sbb
test
push
iret
mov
leave
ja
push
outsl
popa
inc
and
out
xchg
adc
cmpsl
mov
fcmovnbe
add
mov
cmp
aad
dec
or
outsb
or
dec
movsb
dec
or
lds
fisttpl
imulb
sti
mov
push
adc
xor
push
shlb
pop
xlat
cmp
mov
xor
and
inc
ss
lahf
leave
outsl
mov
sub
es
dec
andl
iret
sti
mov
stc
pop
dec
in
adc
push
std
inc
in
shrb
mov
aas
sbbl
sysenter
adc
mov
pop
and
xor
in
and
jnp
lods
add
or
add
hlt
fcomi
test
or
mov
shll
sub
into
popf
push
rolb
gs
push
call
addr16
repz
sbb
jge
xor
or
push
subb
jp
stos
leave
dec
mov
scas
sbb
jge
mov
xchg
gs
mov
xchg
in
insb
mov
in
cmp
push
insb
dec
bound
add
and
push
jl
mov
nop
scas
pop
fwait
jae
sub
movsb
xchg
mov
lock
or
xchg
sub
sub
lods
mov
fdivrl
sbb
jno
or
pop
cmp
xchg
jo
jp
pop
xor
pop
and
ret
cwtl
xor
mov
pop
pushf
lods
rcl
xchg
test
sbb
mov
mov
push
fldt
dec
int3
jl
push
fwait
arpl
cs
add
mov
or
loope
imul
es
cli
push
fcoms
dec
jo
mov
jp
sub
cmp
stos
push
loop
aaa
fstps
push
hlt
loopne
jo
or
inc
stos
mov
jo
imul
ss
insl
jne
mov
lret
xchg
stc
push
fldenv
jg
loopne
inc
mov
xchg
mov
mov
fs
push
ret
cmp
jb
and
mov
push
outsb
ficompl
fs
or
push
jo
test
aas
popa
mov
divl
out
les
loopne
push
push
icebp
popa
inc
mov
out
cmp
mov
ja
sbb
aad
dec
int3
rcl
hlt
mov
fs
cli
enter
cmp
loopne
or
jae
dec
fs
xor
cmp
cmpsb
sub
xorb
mov
pop
ljmp
insb
mov
je
ret
leave
xchg
stos
fs
adcl
fbstp
sbb
mov
out
movsl
pop
adc
jae
xchg
and
out
pusha
inc
pop
scas
push
adc
les
adc
mov
shlb
repz
xor
out
xchg
xchg
dec
push
push
fistps
inc
cmp
xlat
adcb
mov
hlt
iret
ljmp
lcall
gs
test
fsubp
fimuls
jl
sub
ljmp
jp
sub
test
inc
adc
lods
sub
add
adc
jp
sqrtps
dec
push
mov
cld
mov
lods
divl
loop
adc
sbb
sarl
icebp
and
mov
adcl
inc
mov
xor
jle
inc
js
mov
iret
cmp
push
cmp
xchg
repnz
xchg
dec
mov
in
outsb
cmc
pop
dec
das
outsb
dec
mov
icebp
data16
inc
test
fs
mov
push
mov
fists
jns
in
jmp
and
mov
cs
std
pop
rclb
shrb
insl
movsb
mov
mov
push
pop
repz
pop
mov
popf
push
pop
sbb
leave
in
adc
dec
and
pop
push
leave
sbb
lods
jmp
inc
imul
stc
or
cmp
mov
inc
insb
mov
hlt
in
inc
mov
push
aaa
call
mov
call
inc
mov
jl
adc
add
dec
aaa
push
fsubrl
add
adc
xor
jl
and
into
fidivs
xchg
mov
cmp
xchg
cmc
and
xchg
nopl
jg
fcmovnu
cmp
push
and
popa
inc
mov
iret
and
mov
xchg
decb
sub
push
dec
or
or
sub
dec
aaa
pushf
into
cmp
test
jae
push
imul
ds
pop
mov
mov
gs
or
mov
inc
dec
aad
adcl
dec
repz
inc
sbbb
or
mov
shlb
notb
fisubs
push
jg
out
inc
arpl
xor
movsl
loope
sti
push
aas
les
mov
repnz
out
sub
xchg
cs
aad
add
fcmovnb
xchg
pop
sub
orb
sbb
inc
stc
xor
xor
and
rclb
adc
loope
fcomps
sub
shll
testb
cmp
das
loope
jp
fs
test
or
out
jns
sbb
dec
lea
inc
adc
push
and
ljmp
cmc
dec
loope
mov
cltd
fcomps
out
xchg
test
in
cmc
fdiv
xchg
mov
cs
popf
adc
scas
mov
in
jo
stos
stc
fstl
mov
cli
sub
je
jp
scas
and
jae
sbb
out
cs
imul
jle
add
pop
add
dec
mov
mov
jnp
add
hlt
cli
inc
xor
cmp
je
fwait
imul
jo
sarb
xchg
addb
mov
out
js
mov
push
insl
pop
cld
adc
dec
push
xchg
cmpb
cwtl
fidivl
repz
test
jno,pt
push
dec
popf
inc
clc
daa
pop
cwtl
mov
lahf
fs
jl
andl
xchg
or
jno
cmp
jb
jno
loopne
stc
push
sahf
mov
or
dec
adc
mov
jns
fs
dec
adc
push
mov
jge
xchg
adc
inc
lock
movsb
inc
pavgb
push
call
adc
mov
push
cmpsl
adc
mov
dec
dec
ficomps
repnz
and
add
lods
dec
xor
push
lret
jno
das
xchg
outsl
iret
mov
push
jns
push
push
jle
jb
cli
addr16
outsb
xor
cmpsl
sub
stc
insb
stos
int
cld
mov
dec
mov
jns
les
sbb
int
xchg
xlat
mov
or
mov
dec
sub
or
cmpsl
sub
fsts
xchg
sbb
fmull
sub
and
sbb
loop
lock
enter
push
pop
ljmp
js
clc
scas
mov
popf
mov
ljmp
es
inc
imul
in
jb
mov
and
sbb
stos
data16
push
test
addr16
xchg
mov
aad
jle
into
and
cli
cmp
nopl
inc
outsl
enter
sarl
std
mov
aas
negl
sub
mov
sbb
rclb
imul
in
sti
mov
inc
and
inc
hlt
subl
mov
out
mov
test
je
data16
lret
sub
jmp
lods
mov
ljmp
test
lret
xchg
cltd
adc
mov
jmp
jne
rcrb
popa
aas
jno
insb
dec
arpl
xchg
sub
mov
sbb
cmp
insb
xor
mov
jb
ss
das
repnz
sub
xor
pushf
cmp
pop
stos
repnz
xchg
je
push
jle
out
push
repz
fsubs
sub
ret
popa
push
jmp
or
mov
xor
jmp
rclb
push
test
add
jb
xchg
movsb
mov
jp
mov
add
xchg
inc
and
outsl
arpl
adc
fldt
hlt
arpl
add
push
notl
orl
popf
dec
and
xchg
sbb
std
add
cmp
cmp
cmp
sub
pop
jle
or
adc
idivb
fists
xchg
mov
push
xchg
mov
xor
pop
loop
mov
dec
mov
and
mov
cmp
ss
push
xor
icebp
fdivrl
enter
and
stos
sub
pop
aam
out
adc
pop
cmpsl
xor
call
sbb
xlat
std
inc
mov
xchg
and
jns
mov
cwtl
dec
or
call
inc
and
and
movd
pop
scas
stos
cmp
aam
test
dec
out
out
int3
daa
sbb
inc
js
inc
mov
sub
out
lahf
inc
push
bnd
pop
jg
scas
cmp
jmp
jno
rcll
or
or
jb
insl
popa
push
push
loop
inc
jmp
mov
add
adc
pop
xchg
dec
mov
sti
sahf
imul
test
mov
ret
in
daa
xchg
jle
cmpsb
pop
addb
in
xchg
ret
pop
mov
int3
pop
fldt
and
mov
addb
imul
rcll
inc
aas
enter
push
dec
rorb
mov
movsl
mov
xchg
shrb
cs
pusha
movb
add
ds
xchg
inc
xchg
and
cmc
daa
orl
sub
mulb
lret
inc
pop
push
pop
push
lea
cmpsl
pop
jb
call
je
pop
fcoml
mov
bnd
push
jg
sub
int
add
pushf
inc
int
mov
out
pop
sbb
add
mov
jmp
sub
and
cmpb
jmp
xchg
inc
imul
or
pushf
stos
jmp
out
push
xor
mov
arpl
lret
adc
add
mov
rcrb
cmp
pop
push
dec
pop
inc
repnz
mov
add
ret
fs
add
xchg
es
imul
mov
jecxz
test
outsl
aaa
xor
cld
loopne
pop
sub
jne
test
inc
scas
dec
or
std
xor
mov
xchg
shll
jnp
cmp
or
aaa
int
xchg
mull
xor
rcrl
aaa
mov
je
jge
push
fistl
jnp
adc
imul
nop
inc
repnz
mov
push
aam
mov
ret
push
fbld
push
repz
test
ss
push
sbb
loope
cmp
add
cmp
mov
pop
lea
xor
sbb
push
mov
fnsave
loop
loope
sbb
xchg
test
ret
pop
or
xor
xchg
iret
cmp
dec
add
jle
push
xchg
test
push
jp
data16
pop
push
movsb
sbb
push
fcmovne
mov
mov
mov
xchg
lret
mov
lods
pop
xor
shl
lods
jns
lods
jae
arpl
ret
es
into
jno
pushf
inc
or
mov
aaa
out
clc
pop
imul
mov
mov
daa
dec
cmp
pop
xchg
push
and
pop
jp
inc
aad
test
rorl
pop
jg
mov
cmpsb
aad
lret
xor
fstl
loop
add
test
negl
cmp
pop
daa
pusha
in
call
sbb
jg
lods
xchg
xor
mov
or
inc
ljmp
cmp
sub
mov
mov
fnstcw
stos
add
jbe
mov
xchg
pop
icebp
push
lods
aad
xchg
lahf
std
sti
add
loop
xlat
cld
shrl
adcl
mov
inc
shr
push
xor
fcmovnu
inc
mov
cmp
cli
add
sti
pop
nop
push
mov
call
sahf
or
mov
mov
dec
dec
fistpl
mov
add
fistl
xor
inc
into
sahf
add
repz
lea
dec
dec
aas
push
xchg
adcl
jge
adc
aas
ja
mov
or
nop
add
xlat
mov
aam
mov
out
popa
daa
jb
in
mov
das
push
outsl
clc
rcll
push
dec
pop
and
aas
arpl
dec
rorb
and
dec
jp
xor
aam
jecxz
pop
sbb
popa
or
sub
mov
jae
stos
jns
adc
pop
roll
jns
push
sti
xor
into
add
fcoms
out
jb
mov
shl
or
rcll
aas
add
scas
not
mov
not
adc
popa
sarb
dec
inc
push
mov
rol
testl
lds
pop
sti
or
shrb
xor
ror
daa
mov
in
or
mov
fbld
cmpsl
mov
and
test
xlat
int
sbb
loopne
testl
and
sbb
daa
fisubl
jns
xor
lret
les
jg
and
dec
pushf
cmp
sub
and
mov
daa
cld
int
dec
dec
cltd
inc
popa
pop
add
aam
mov
mov
mov
adc
mov
ds
aaa
out
jo
lea
and
push
adc
stos
orb
test
ret
jmp
add
mov
lahf
xor
mov
mov
mov
xor
addr16
fists
pop
imul
cwtl
sub
repz
push
or
stos
mov
and
popf
pushf
in
nop
imul
inc
shl
pushf
push
cmp
pop
sbb
sti
inc
jg
mov
scas
adc
mov
popf
mov
sarl
jmp
xchg
in
xchg
int3
ljmp
inc
xchg
call
pop
int3
hlt
sub
jecxz
in
push
adc
repnz
outsb
mov
adc
call
sub
lret
je
sub
cltd
mov
jnp
decb
push
andl
jle
sbb
jl
cwtl
xchg
or
iret
push
divl
sub
mov
sbb
mov
fs
fwait
cmp
sti
or
inc
in
enter
lds
dec
cmp
into
fs
push
pop
mov
scas
ret
adc
adc
push
dec
push
aad
pop
scas
movsb
mov
movsb
jae,pt
nop
and
sbb
aam
push
rep
mov
and
in
in
das
add
ja
mov
mov
ficomps
outsb
jb,pt
adc
dec
mov
stos
xchg
or
jae
mov
les
inc
je
clc
loopne
push
movsb
inc
lret
and
popf
mov
aad
idivl
mov
and
cmp
in
mov
pop
sub
sbb
push
dec
add
xchg
xchg
loope
rclb
cltd
aaa
push
lret
sub
insb
cld
dec
stos
call
out
lret
push
cmc
stos
xor
jp
push
fsub
pushw
push
cmpsl
mov
fsubrs
dec
insb
xor
add
push
sbb
jbe
sub
ss
jecxz,pn
adc
mov
pop
push
inc
add
inc
push
mov
or
ss
shl
jae
sti
mov
ljmp
mov
mov
mov
das
add
fcoml
cltd
lods
mov
rcrb
in
pop
icebp
mov
jmp
in
cltd
iret
decl
negl
cmp
add
and
aam
test
scas
rol
pop
in
fstpl
fsubs
movsl
add
and
cmp
pop
xchg
lret
stc
popa
jb
sub
inc
pop
mov
and
xchg
nop
test
lret
scas
movsb
ret
daa
cmpsl
pusha
jno
inc
rolb
pop
fs
add
xchg
inc
repz
in
cmp
mov
fimull
lret
adc
or
jno
jnp
rolb
ja
or
inc
loope
jae
bnd
jge
shll
jb
xor
cmp
xchg
mov
out
cmp
dec
dec
mov
icebp
cld
inc
xor
out
inc
aas
lods
cmp
repnz
movsb
mov
enter
test
aam
stos
mull
adc
scas
xchg
gs
outsl
movsb
xor
sub
arpl
push
loope
xor
xchg
xchg
lret
out
pushf
push
repz
xor
jmp
jge
push
lahf
hlt
cmp
xchg
js
daa
dec
push
jne
outsl
xchg
sahf
add
mov
xchg
test
ds
mov
jns
jb
and
bound
inc
and
test
imul
pop
mov
pop
mov
ret
in
adc
xor
aam
sbb
push
push
jl
movsl
push
into
pop
mov
aaa
push
dec
jp
inc
icebp
arpl
scas
ret
xor
shlb
out
jns
adcb
jne
jmp
testl
int
mov
inc
jnp
inc
or
loopne
fisttps
lock
mov
lret
mov
es
sub
mov
imul
push
or
dec
mov
mov
mov
mov
hlt
jo
outsl
imul
shll
test
sub
sbb
or
or
test
int
data16
xchg
addr16
dec
out
pop
das
inc
gs
mov
in
mov
push
loopne
inc
mov
inc
or
pop
sub
adc
int3
mov
add
sub
mov
xchg
clc
jecxz
jnp
das
pop
push
cmp
dec
sbb
mov
inc
out
es
push
jp
aaa
xor
sti
fdivrp
mov
xor
aad
pop
das
and
jae
inc
push
jg
mov
sbb
out
lods
mov
lods
pop
into
movsl
faddl
or
and
sbb
es
pushf
sahf
jbe
imul
or
subl
mov
mov
rcrb
push
lret
fwait
stos
xor
push
sub
mov
ss
xor
out
push
adc
xorl
addr16
cmp
pop
mov
adc
std
sahf
enter
push
fstps
mov
pop
xchg
mov
jns
add
adc
jmp
add
out
into
dec
lret
mov
push
dec
out
xchg
jp
int3
leave
mov
cli
es
cmp
out
mov
popf
ljmp
int
push
shl
inc
sub
pusha
mov
mov
jle
push
scas
xor
enter
pop
jecxz
mov
inc
xchg
divl
mov
adc
aaa
loop
add
insl
iret
testb
xchg
test
aas
fcomps
sbb
mov
orl
add
push
test
adc
mov
sub
ljmp
fwait
cmp
cltd
aam
inc
xchg
ja
push
jl
loope
xchg
insl
inc
sbbl
pop
ds
test
test
sbb
push
mov
sar
lods
mov
enter
xchg
clc
sbb
cmp
cmp
cmp
sub
es
push
cmp
and
inc
add
je
xchg
imul
mov
into
scas
mov
enter
in
or
rorb
sub
push
jp
stc
mov
clc
arpl
inc
push
mov
pop
mov
push
mov
adc
lea
loop
sub
cmp
movsl
xor
jbe
push
sbb
data16
jns
xor
cs
jns
or
pop
sti
xchg
inc
mov
jnp
mov
mov
nop
imul
lods
xchg
lret
jbe
dec
repnz
outsl
std
mov
jge
xor
push
adc
ss
lcall
and
rorb
jbe
popa
xor
xchg
mov
pop
ret
xor
movsl
dec
pop
mov
shrb
outsl
hlt
xor
jg
lock
ljmp
movb
sbb
fnstenv
mov
push
ljmp
xor
xchg
loope
cmpsb
jl
scas
jns
pop
aad
jp
mov
mov
insb
pop
divl
pop
ss
sub
pop
loop
xor
sub
gs
stc
push
mov
push
pop
popf
repnz
gs
loopne
adc
inc
faddp
mov
mov
mov
les
pop
stos
sub
aaa
movsl
fsubs
push
or
add
and
pop
and
sub
and
nop
adcb
adc
add
or
gs
cmpsb
inc
cmc
adc
mov
popa
dec
pop
mov
or
sbb
dec
cmpsl
cwtl
flds
mov
ds
add
imul
gs
es
lods
fcomip
ja
and
nop
mov
mov
jb
pop
in
fdivrp
jns
sbbl
sbb
cwtl
shl
sbb
xchg
cli
test
push
mov
mov
lahf
push
out
or
dec
push
xor
xor
adc
adc
jmp
push
daa
popf
or
clc
in
cmc
lcall
dec
rorb
and
mov
add
in
lods
addb
les
inc
call
outsl
stos
xchg
or
test
sbb
or
pushf
stos
push
xor
jle
test
test
sbb
mov
push
dec
lds
mov
mov
sub
mov
pop
mov
mov
cmp
jmp
push
in
loope
pusha
mov
mov
dec
xchg
inc
xchg
out
xchg
mov
sbb
jb
jmp
clc
cmp
lahf
loop
mov
mov
pop
lcall
out
mov
sub
jnp
jb
repnz
dec
loope
dec
push
daa
lods
add
pop
cmp
rorl
add
imul
dec
or
jge
cmp
insb
pop
jbe
enter
mov
or
sub
je
jb
jb
rorb
xchg
push
popa
out
repnz
and
jbe
pop
lret
jg
mov
lods
imul
enter
dec
fcoml
imul
sub
pop
xor
mov
adc
sub
div
imul
push
out
loope
mov
jl
xchg
ljmp
xchg
jb
inc
nop
cmp
dec
inc
js
fs
in
and
nop
jge
dec
insb
push
mov
sbb
stos
scas
popa
loopne
bound
adc
dec
shll
imul
pop
sbb
jne
sub
ss
outsl
mov
xorl
stos
es
push
ljmp
stc
jecxz
int
cmp
daa
fdivrs
idivl
das
xor
cmp
popa
and
mov
repnz
mov
lahf
xchg
lret
out
fwait
inc
and
add
clc
lahf
ds
inc
adc
mov
xchg
lods
aad
pop
xchg
dec
loopne
mov
fucomp
clc
ljmp
cmp
test
mov
mov
fiadds
lret
std
subb
cmpsb
mov
stos
inc
mov
test
jmp
popf
mov
or
int3
andl
mov
loopew
addr16
lock
cmp
loope
mov
cmp
or
fsubrp
in
lret
imul
out
cmp
jmp
in
add
inc
dec
add
je
iret
stos
dec
jl
or
pop
fldenv
jns
mov
dec
sub
mov
call
inc
pop
or
pop
popa
jl
rcr
mov
outsb
insb
lret
imul
aad
sti
mov
sub
or
stos
in
xchg
ficomps
outsb
xchg
sahf
sti
sahf
push
xor
test
inc
push
arpl
in
iret
and
cmp
mov
xchg
mov
sbb
leave
mov
xchg
movsl
mov
jae
lock
mov
mov
push
addl
sub
ljmp
push
mov
mov
fwait
sub
test
lds
add
lock
ror
dec
loope
sbb
add
jae
aaa
mov
or
inc
loop
or
in
xchg
in
add
cmp
das
jmp
adc
and
inc
adc
push
insl
ljmp
out
inc
pop
fdivrs
cltd
ja
aas
lret
adc
jo
mov
iret
or
pop
cmp
push
pop
sbb
cld
mov
mov
adc
in
jl
vpacksswb
movsb
ficoms
mov
fstl
add
pop
int3
sbb
cmp
pop
arpl
jl
and
cmpsb
sbb
lret
clc
int3
mov
icebp
hlt
aam
and
flds
outsl
push
mov
aam
imul
mov
ljmp
cmp
dec
xchg
sbb
mov
add
and
icebp
pop
push
sbb
popf
mov
push
test
and
lahf
sti
test
loope
loop
mov
jmp
inc
jo
fmuls
xor
out
mov
pop
hlt
mov
lods
cvtpi2ps
mov
sub
pop
ret
daa
in
out
dec
sti
inc
add
mov
inc
push
ljmp
push
cmpsb
inc
mov
cli
pop
pop
mov
insl
lret
fsubl
lock
fnstcw
sub
pop
inc
xor
lret
xor
jae
faddl
out
fucom
sti
jmp
test
imul
cli
jl
test
stos
pop
push
push
xlat
add
dec
jne
pusha
jge
leave
test
push
or
shrd
jp
xor
sbb
xchg
pop
jb
mov
outsb
insl
rcrl
sarb
cwtl
ss
ds
stc
dec
jne
and
adc
mov
xor
adc
push
ljmp
lahf
sub
cwtl
sti
cltd
mov
push
fidivrs
sub
jmp
pop
shlb
leave
ljmp
into
ror
mov
cmp
notl
mov
mov
push
hlt
out
mov
fcoms
addr16
imul
pop
cmp
mov
dec
mov
jmp
xor
aam
pop
movsb
jecxz
cmp
lea
xor
pusha
int
fiadds
jle
cmp
sub
in
pop
push
mov
pop
addl
cmp
scas
ret
mov
sub
adc
out
mov
or
popf
sbb
adc
jb
imul
jo
jmp
dec
mov
test
inc
out
xchg
lahf
aam
mov
loopne
scas
adc
add
cmpsb
out
jp
and
lret
jb
sarb
cs
push
add
xor
sub
inc
adc
mov
jp
jb
pop
push
jbe
add
andb
ret
sahf
inc
insb
dec
ljmp
xchg
pop
jl
aas
subl
ret
les
inc
notb
ret
out
shrl
ret
inc
inc
mov
and
inc
mov
pop
sub
mov
data16
or
fdivr
packuswb
jae
ss
mov
cmp
inc
arpl
bound
mov
jmp
xchg
into
inc
out
lahf
pop
outsb
ljmp
mov
sbb
mov
lret
push
lock
mov
or
scas
mov
lret
xor
ficoml
push
inc
add
data16
enter
dec
ret
xor
in
clc
and
inc
mov
scas
and
outsl
test
in
movsl
and
daa
dec
jnp
mov
cmp
std
add
and
pushf
mov
pusha
adc
mov
mov
xchg
adc
ljmp
js
push
movsl
movsb
push
cli
enter
pop
lret
jb
and
lea
xchg
subb
adcl
lret
jb
sub
xor
jnp
inc
loopne
arpl
mov
mov
mov
adc
mov
movsb
inc
xchg
jne
adc
xlat
pop
xor
adc
lret
arpl
sbb
test
jmp
pop
sub
xchg
lret
mov
xchg
inc
pushf
inc
fmull
mov
mov
mov
and
xor
push
movsl
mov
mov
mov
ds
rcrb
mov
cmc
add
ret
aas
bound
or
add
cmpl
adc
pushf
mov
cmp
sbbl
jge
push
fldcw
mov
scas
cmc
cmp
out
fcmovnbe
pop
in
pop
cmc
cmp
inc
outsl
cmc
data16
fsubr
jne
cmp
and
jo
pop
ucomiss
xchg
push
sbb
ret
ljmp
sbb
leave
andl
test
lds
xlat
pushf
jge
sub
fwait
sti
or
mov
mov
mov
mov
jge
mov
xor
loope
xor
xor
pop
sub
jbe
jb
pop
inc
outsb
out
pop
cmp
mov
adc
push
push
icebp
mov
sbb
dec
inc
xchg
loope
inc
ret
clc
xor
jne
pop
leave
lods
inc
pop
inc
push
cmp
cmc
mov
xor
loop
test
es
insl
jge
fcoms
cmp
rcrb
sub
mov
shll
repnz
icebp
jb
xor
call
add
cmp
fs
xor
inc
adc
cmp
sbb
popa
adc
jb
dec
jl
sbb
iret
pop
gs
stos
jl
test
jmp
pop
xor
cmpb
dec
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
inc
loope
push
jp
je
lea
xchg
fisttpl
mov
xlat
mov
popa
rol
adc
xor
push
jp
mov
test
adc
daa
sbb
mov
negb
cmp
sub
cmp
dec
xchg
lods
or
gs
loop
xchg
fsubrl
pop
add
pop
xchg
cli
pop
dec
cmp
pop
fwait
mov
je,pt
mov
insb
xor
cs
cmp
jne
pop
daa
or
add
add
xchg
popf
daa
push
shlb
and
jle
and
sub
sub
ret
insl
sbb
adc
fmuls
mov
aaa
sbb
shll
ljmp
xor
dec
push
push
stc
es
mov
mov
rclb
adc
jnp
jne
bnd
arpl
fildl
push
mov
into
adc
xor
sti
adc
push
mov
push
lea
jns
insb
push
sub
enter
cli
push
imull
out
stc
lret
add
add
negl
lods
fcomps
push
rorl
cmp
push
add
fcomip
adc
negb
and
jmp
and
sbb
jle
negb
and
or
lret
js
repz
fisubl
in
es
mov
int3
push
xor
pop
xchg
pop
xchg
and
out
pop
and
jnp
cli
lds
xchg
fldenv
cmpsl
pop
pop
sub
pusha
ljmp
lahf
adc
shrd
mov
movsl
mov
push
cld
fstpt
push
mov
mov
adc
jne
dec
add
test
push
jno
aaa
aaa
popa
enter
nop
xor
xlat
jo
cmp
adc
cmc
iret
jns
out
push
push
xlat
test
sub
mov
dec
dec
and
aam
insb
mov
or
mulb
cmp
sahf
or
adcl
cli
pop
cmp
sbb
dec
mov
inc
inc
xchg
mov
pop
sbb
xchg
lods
int
rclb
dec
lcall
adc
inc
pop
dec
in
pusha
sub
jle
shlb
pop
jecxz
push
jge
cltd
push
das
xor
jno
movsb
fnstsw
pop
jg
push
stos
cmp
mov
cmpl
or
pop
mov
fistpll
nop
inc
sbb
in
ret
xor
mov
inc
in
inc
stc
fists
mov
push
mov
and
cmp
sti
movsb
pop
rcrl
pop
out
lret
stos
mov
andl
in
cmpsb
les
pop
clc
xor
es
adc
insb
jl
aas
cmp
ja
movsb
xchg
mov
fisubl
mov
and
push
addr16
push
outsl
sub
int3
nop
mov
out
mov
test
mov
and
out
cmp
jmp
push
js
dec
out
lea
or
clc
xor
les
mov
fadds
pop
and
fsubr
push
arpl
jmp
jae
add
jnp
xchg
mov
test
pushf
addb
fs
pop
imul
popf
cltd
pop
stos
pop
pop
jge
test
addr16
outsb
dec
add
mov
fistpll
sub
fstpl
sub
pop
pop
inc
sbb
ds
xor
jle,pn
daa
or
fwait
test
int
loopne
mov
pushf
and
stc
iret
popf
mov
push
add
or
jg
xor
and
ficoms
fists
push
push
dec
push
sti
xchg
insb
push
add
aad
xor
js
push
sbb
mov
xor
push
mov
mov
enter
mov
imul
push
scas
inc
xorb
aam
lock
cli
pop
gs
or
adc
das
cli
jne
mov
sahf
arpl
dec
mov
ljmp
adc
mov
repz
jle
push
dec
scas
xchg
mov
test
lds
clc
in
outsl
ljmp
aam
sbb
jns
pop
cmpsl
lds
fildll
and
lahf
sub
cmp
aas
adcb
inc
popa
add
sahf
jl
mov
push
inc
sub
add
and
enter
fidivs
xor
mov
push
ss
lcall
xor
push
dec
scas
xchg
inc
xor
pushf
cmp
pop
add
ret
std
xor
cwtl
and
imul
mov
testb
faddl
cmp
pop
push
pop
adc
jns
xchg
xchg
jb
dec
ds
sub
jne
mov
mov
inc
lods
iret
cmp
orb
push
pop
xor
and
fnop
fwait
dec
pop
loop
fs
imul
inc
popa
mov
popf
mov
jnp
lds
fdivrs
lret
out
ret
cli
int
mov
mov
lahf
sbb
mov
mov
insb
mov
test
mov
add
inc
xor
push
xchg
ret
fimuls
lret
nop
inc
gs
iret
pop
pop
fisubrl
xchg
std
xor
ficompl
jg
aaa
fwait
imulb
lret
cmpsb
dec
or
xchg
imull
push
adc
idivl
imul
adc
cmc
addr16
loopne
data16
faddl
push
push
nop
ja
or
jg
je
or
push
mov
xor
sti
imul
pop
cld
jns
sbbb
lret
cmp
pop
mov
jne
leave
jns
sbbl
mov
mov
dec
and
push
adc
or
lahf
mov
jecxz
gs
pop
pop
inc
or
ret
inc
inc
mov
jns
repnz
andb
push
pop
push
rorb
mov
xchg
adc
arpl
andnps
iret
cmpl
rcll
cmp
adc
int3
push
cs
imul
inc
fistps
sub
cmp
jnp
loopne
or
xor
and
sbb
pop
sbb
cld
xor
rorl
inc
insb
cmp
adc
stos
fcmovnb
add
xlat
cmpsl
add
mov
mov
repnz
jle
int3
stc
daa
addr16
mov
cmpsb
mov
les
push
enter
sub
xchg
mov
les
sahf
test
mov
cli
xchg
adc
jle
mov
lods
mov
fsts
fidivl
addr16
out
lock
fisubl
pusha
jne
and
adc
dec
rcr
sub
fistpl
inc
and
fldl
push
jl
mov
outsb
stos
xchg
sbbl
push
repz
fwait
mov
mov
mov
pop
in
fcmove
cmp
sbb
jo
xchg
mov
lret
in
push
mov
in
mov
enter
inc
add
push
outsb
inc
xchg
dec
pop
xchg
jo
push
push
mov
and
cmp
sub
fldcw
jne
xor
xchg
ja
int3
fs
mov
push
addr16
xor
dec
or
jbe
mov
pusha
hlt
jbe
icebp
jle
sbb
imul
or
jno
inc
sbb
bound
push
in
pop
das
jge
clc
ret
mov
loop
lret
shl
mov
jge
ljmp
insl
mov
mov
loope
loopne
out
xor
sahf
xchg
mov
dec
std
enter
inc
sbb
or
sbb
outsb
popl
subb
inc
lds
out
dec
rcrb
pop
jge
xlat
lds
faddl
lock
push
and
cmp
inc
dec
cmpsl
cmc
cmp
lret
divb
dec
dec
sbb
add
std
fldcw
and
ret
push
mov
lret
aam
xor
inc
clc
mov
mov
xor
push
cli
fnstsw
lret
sbbl
int3
movsl
adc
mov
xor
jae
mov
pop
pop
pop
mov
mov
ja
sbb
mov
fidivs
mov
mov
push
cmc
jg
cmpsl
xor
mov
pop
scas
fsts
clc
shlb
call
int3
mov
mov
out
xor
xchg
in
sti
cmc
dec
sbb
rclb
in
cli
subl
inc
pop
rol
arpl
jae
mov
xchg
ret
xor
jo
loope
cmpsl
inc
mov
int
dec
cmp
addl
leave
inc
mov
jb
cld
lods
loop
or
ljmp
add
mov
and
add
jle
cmpl
int3
lret
test
clc
jecxz
test
pop
add
test
mov
rcrb
sub
test
sbbl
dec
cmpsl
mov
fucom
pop
or
adcl
test
inc
push
add
iret
mov
xor
es
sub
fidivs
cs
sarb
or
jne
xor
xchg
scas
sbb
sub
cmpb
jmp
mov
jns
icebp
mov
xchg
mov
outsb
ror
jp
imul
in
mov
roll
ja
sbb
mov
out
gs
push
pop
insb
dec
inc
sbb
add
push
sub
mov
sbb
outsl
jo
jmp
les
dec
add
lcall
push
in
nop
cmp
inc
test
in
movsl
mov
test
inc
adc
in
lret
js
and
xchg
not
add
or
cmpsb
add
cmpsb
xchg
bound
into
bound
pop
cmp
inc
cltd
jge
xor
sarb
add
loopne
jge
jl
mov
imul
push
cmp
inc
test
pop
lahf
adc
imul
sub
je
fmull
fs
ror
mov
jns
mov
outsb
push
addr16
add
fmull
out
pop
and
loope
jae
jb
xchg
xor
fisubs
mov
ljmp
gs
inc
jge
fisubrl
mov
xor
adc
mov
dec
dec
fst
xchg
pop
stc
aaa
test
cmp
pop
aaa
fsubrl
mov
lods
cmpsl
ds
or
mov
push
repnz
out
addr16
sahf
lahf
pop
xchg
repnz
xchg
les
hlt
dec
xor
outsl
in
mov
xchg
jo
inc
cli
mov
nop
notb
lods
fs
push
test
push
lret
loopne
repnz
ret
mov
pusha
inc
test
jmp
jno
cmpl
adc
xor
jne
cmp
jne
sahf
xchg
sarl
add
dec
dec
xchg
inc
rolb
pop
push
jne
mov
sbb
dec
xchg
test
insl
mov
ror
mov
cmpsb
nop
ret
bound
int
jne
jecxz
adc
adc
jp
and
call
xor
jb
out
mov
xchg
sbb
ret
mov
mov
in
addr16
mov
mov
pop
xor
hlt
xchg
ret
sbb
jo
cmpsb
stc
popa
scas
pusha
data16
in
mov
add
and
lea
push
xchg
mov
pop
cs
dec
xchg
adc
jbe
outsb
fbstp
and
lds
cmp
mov
jl
roll
mov
jmp
ret
mov
leave
lret
loopne
xchg
adc
mov
mov
sbb
cmp
lods
cmp
dec
adc
into
aaa
xlat
mov
push
lret
inc
fucom
or
testb
sbb
mov
sti
mov
mov
mov
rorl
frstor
ficomps
rcll
out
cmpsb
pop
adc
fsub
xchg
inc
lods
pop
sbb
dec
push
push
scas
mov
xor
adc
sbb
out
pop
lret
push
dec
add
enter
rcll
mov
ljmp
xor
lcall
xchg
call
fldcw
lcall
jno
xor
xor
in
test
leave
gs
inc
jbe
sub
pop
out
cmpsl
loop,pn
rolb
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
ja
add
mov
