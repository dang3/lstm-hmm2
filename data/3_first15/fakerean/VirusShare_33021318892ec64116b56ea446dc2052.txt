les
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
inc
add
inc
and
add
add
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
sahf
mov
shlb
into
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
imul
and
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
inc
mov
shlb
xchg
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
and
mov
shlb
dec
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
or
and
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
ja
mov
pop
ret
mov
push
push
mov
or
xor
repnz
not
dec
cmp
jae
mov
or
repnz
mov
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
lea
push
push
push
call
add
movb
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
or
xor
mov
repnz
not
dec
mov
lea
cmp
jb
pop
mov
pop
pop
ret
push
mov
mov
or
xor
repnz
not
dec
lea
cmp
ja
mov
or
repnz
not
sub
pop
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
sub
add
push
push
push
call
add
movb
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
movl
mov
and
cmp
jne
mov
mov
dec
je
dec
je
sub
jne
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
mov
movl
mov
movl
call
mov
lea
push
push
push
push
call
mov
lea
push
push
call
lea
lea
push
push
call
mov
mov
sub
lea
push
push
call
mov
add
lea
push
mov
sub
push
cltd
sub
mov
sar
add
mov
push
push
push
mov
add
push
push
call
mov
push
call
mov
mov
push
push
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
mov
call
mov
mov
push
push
push
push
call
mov
cmp
jl
mov
call
mov
lea
dec
push
push
push
push
call
lea
lea
push
push
call
mov
mov
cmp
mov
jg
mov
mov
push
push
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
push
call
mov
mov
mov
push
push
call
push
mov
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
movl
pop
pop
pop
pop
add
ret
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
mov
mov
xor
cmp
mov
je
mov
push
push
push
push
mov
call
shr
and
mov
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
push
push
call
mov
push
push
push
push
call
push
call
cmp
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
call
mov
lea
push
push
push
mov
call
mov
mov
mov
mov
push
mov
mov
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
test
je
mov
push
push
push
push
call
push
call
test
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
movl
call
mov
lea
push
push
push
mov
call
mov
mov
mov
add
mov
mov
mov
mov
shr
and
push
dec
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
xor
call
mov
push
push
push
push
call
test
jle
mov
lea
push
push
push
push
mov
call
test
je
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
mov
neg
sbb
mov
and
push
add
add
mov
sub
mov
mov
mov
mov
sub
sub
cltd
sub
lea
sar
add
mov
mov
push
mov
push
push
mov
push
call
mov
inc
call
mov
push
push
push
push
call
cmp
jl
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
movl
movl
mov
test
jne
lea
movl
call
jmp
push
mov
mov
mov
and
dec
mov
je
sub
je
sub
jne
test
je
mov
mov
and
cmp
jne
cmpl
jne
and
mov
movl
testb
je
movl
mov
mov
mov
mov
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
movl
testb
je
test
je
push
mov
call
mov
or
mov
jmp
movl
mov
test
je
test
je
mov
mov
mov
mov
mov
push
test
je
mov
cmp
je
cmp
jne
mov
push
push
call
test
je
lea
push
push
push
call
test
je
cmpl
jne
movl
lea
push
call
mov
test
je
mov
mov
push
push
call
mov
mov
push
push
mov
call
mov
mov
push
push
call
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
lea
push
push
push
mov
call
mov
mov
movl
push
mov
add
push
mov
push
lea
push
mov
push
push
push
push
call
mov
mov
push
push
call
push
call
mov
mov
movl
mov
mov
pop
test
je
test
jne
mov
mov
and
cmp
jne
and
mov
mov
and
cmp
jne
movl
testb
je
mov
mov
mov
mov
movl
mov
push
call
push
call
mov
push
push
mov
push
push
call
mov
movl
testb
je
test
je
mov
and
test
jne
push
mov
call
mov
or
mov
jmp
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
je
movl
lea
movl
call
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
mov
and
cmp
je
push
mov
push
call
mov
push
mov
push
push
push
call
push
call
mov
push
push
push
push
call
push
call
mov
push
push
push
push
call
pop
jmp
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
call
test
je
mov
push
push
push
call
mov
push
call
test
je
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
push
mov
call
mov
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
push
push
mov
push
xor
push
mov
mov
mov
mov
call
mov
cmp
jne
pop
pop
xor
pop
ret
push
push
call
cmp
jne
push
push
call
test
je
mov
mov
movl
movl
mov
push
call
pop
mov
pop
pop
ret
push
call
push
mov
call
xor
cmp
pop
pop
sete
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
cmp
jne
push
call
mov
ret
mov
push
test
je
mov
cmp
jne
call
test
je
push
push
call
test
mov
je
jmp
movl
xor
pop
ret
mov
mov
push
mov
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
rep
mov
mov
mov
mov
test
movl
mov
pop
je
lea
push
push
push
call
add
jmp
movw
lea
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
neg
sbb
not
and
add
ret
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
inc
add
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
fcmovnbe
and
fcmovnbe
and
and
fcmovnbe
and
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
push
push
push
mov
xor
push
cmp
je
mov
mov
mov
push
push
call
add
test
je
mov
add
push
push
call
add
test
jne
cmpw
je
lea
push
push
push
call
add
test
je
mov
test
je
mov
inc
add
cmp
jge
push
push
call
lea
add
cmpw
jne
mov
pop
pop
mov
movw
pop
pop
ret
pop
pop
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
movw
xor
mov
test
je
and
push
lea
push
push
call
add
test
jle
push
push
push
call
add
lea
push
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
push
movw
mov
push
push
call
add
ret
push
mov
push
movw
call
mov
mov
lea
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
add
ret
mov
lea
push
push
call
add
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
lea
movl
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
push
call
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
test
jne
pop
xor
pop
ret
push
mov
lea
push
mov
push
lea
push
push
push
push
push
call
test
jne
mov
cmp
je
cmp
jne
mov
test
jbe
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
push
call
test
je
push
call
add
xor
push
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
mov
lea
lea
add
rep
mov
push
lea
push
mov
call
mov
mov
shl
add
mov
lea
pop
lret
inc
add
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
add
mov
mov
test
mov
jne
push
push
push
push
call
add
mov
push
call
mov
jmp
mov
or
xor
repnz
not
push
call
mov
mov
or
xor
add
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
test
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
xor
movb
mov
test
je
push
lea
push
push
call
add
lea
mov
push
call
test
lea
jne
mov
push
call
add
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
push
call
add
test
je
mov
test
je
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
xor
test
mov
jle
xor
mov
lea
push
push
call
add
test
jle
mov
inc
add
cmp
jl
mov
push
mov
call
mov
lea
mov
rep
mov
cmp
jl
mov
inc
xor
cmp
jne
cmp
je
push
call
add
mov
mov
mov
mov
jmp
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
mov
mov
mov
jmp
mov
cmp
jg
cmp
jle
mov
mov
shl
add
sub
push
lea
push
call
mov
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
add
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
sub
push
mov
shl
add
lea
push
call
mov
push
call
mov
mov
mov
mov
sub
inc
add
mov
jmp
lea
push
push
mov
call
mov
mov
mov
shl
shl
add
add
shl
shl
sub
lea
push
push
lea
mov
shl
add
lea
push
call
mov
add
add
mov
xor
mov
rep
mov
xor
shl
add
pop
shl
mov
mov
add
mov
lea
add
rep
mov
dec
test
jne
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
lea
push
mov
call
mov
xor
movb
mov
test
jle
xor
mov
mov
test
je
cmpb
je
mov
push
push
push
call
add
mov
mov
add
push
push
push
call
add
mov
inc
add
cmp
jl
mov
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
add
lea
push
push
call
mov
add
test
je
movb
mov
inc
mov
add
mov
je
mov
mov
push
push
call
add
test
jne
mov
jmp
inc
push
push
call
add
test
jne
mov
cmpb
je
push
push
call
add
test
jne
mov
push
push
call
add
mov
dec
cmp
jne
mov
lea
sub
push
push
push
call
add
test
je
jmp
lea
or
xor
repnz
mov
not
dec
push
lea
push
push
call
add
test
je
mov
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
lea
sub
inc
add
movsl
mov
push
mov
lea
push
call
mov
mov
shl
add
lea
cld
fildl
adc
add
rep
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
mov
add
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
mov
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
mov
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
shl
add
xor
shl
mov
shr
rep
mov
and
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
mov
rep
mov
push
push
push
call
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
movw
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
test
je
push
push
call
add
lea
push
push
push
push
call
add
test
je
pop
pop
xor
pop
ret
mov
push
push
push
push
call
mov
add
push
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
test
je
mov
push
push
call
add
jmp
mov
mov
push
push
push
push
call
lea
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
mov
movw
mov
add
test
je
push
push
push
push
call
push
push
push
call
add
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
test
je
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
pop
ret
push
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
push
call
mov
pop
ret
nop
nop
mov
push
mov
push
push
mov
push
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
test
je
mov
push
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
mov
add
movw
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
add
movw
movw
movw
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
sbb
pop
add
adc
call
call
call
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
push
push
call
mov
outsl
mov
incb
mov
xchg
mov
add
add
add
add
mov
cmc
add
loop
add
add
leave
push
xlat
clc
add
aam
pop
ret
imul
aam
rcrl
xchg
jns
mov
in
add
push
push
push
lea
push
call
test
push
pop
add
add
test
mov
mov
push
fadds
in
cmc
stos
icebp
add
mov
push
mov
movb
pusha
push
add
mov
cld
add
add
pop
repnz
jmp
add
outsl
add
in
hlt
lcall
inc
in
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
fs
add
add
std
loopne
add
hlt
xorl
add
loope
movsl
leave
jp
lret
insb
xorb
gs
negl
xchg
add
stos
mov
add
add
jne
cmpsl
aad
mov
stos
add
lcall
push
push
push
lea
push
call
mov
xchg
rolb
xchg
add
push
mov
mov
lahf
add
pop
pop
imul
mov
add
in
hlt
pop
push
push
push
push
lea
push
lea
push
call
imul
jmp
je
add
fucomi
mov
std
add
add
aad
out
add
add
sti
add
roll
gs
mov
lahf
jp
xchg
add
jmp
xchg
jns
jne
loopne
add
mov
sub
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
stos
xchg
jne
add
out
add
out
out
int
add
clc
add
add
add
add
add
add
addl
add
loop
add
js
lret
loope
rcr
add
shl
adcb
add
lcall
inc
sub
add
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
pop
ret
add
lcall
add
add
out
jl
add
add
add
mov
add
sub
pop
call
push
push
lea
push
push
push
call
int
add
add
addb
add
in
mov
add
mov
faddl
add
add
testb
add
add
jp
add
add
loope
add
push
add
out
add
fiadds
jo
pop
sub
pop
push
push
push
push
lea
push
push
call
mov
add
mov
cld
add
add
mov
js
mov
add
fbstp
add
xchg
add
in
movsb
add
lcall
add
add
lds
add
pusha
add
add
add
jne
add
nop
add
lret
pop
add
push
push
push
push
lea
push
lea
push
push
call
add
add
insb
add
add
add
iret
add
add
push
add
add
test
add
add
pop
add
ja
cltd
add
fidivrl
into
add
jecxz
jb
repnz
lds
add
lods
clc
add
ror
int3
in
jb
xlat
add
test
add
push
push
call
add
loope
out
add
add
push
pusha
fmul
add
add
add
add
add
mov
pop
les
add
movl
add
imul
clc
lcall
push
lea
push
push
call
into
imul
lds
int
fcmovbe
test
add
pop
rcll
xchg
in
in
pop
add
add
add
mov
lcall
inc
hlt
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
fwait
xchg
imul
mov
add
add
jnp
test
add
lahf
mov
movsb
mov
add
xchg
in
fdivr
lcall
pop
hlt
add
push
lea
push
lea
push
call
gs
pop
std
add
in
add
arpl
roll
mov
mov
mov
test
add
add
add
mov
push
add
xchg
int3
add
jns
add
in
add
add
jno
mov
testl
sub
pop
add
add
push
push
push
push
push
push
push
push
push
call
add
mov
add
add
xchg
mov
test
add
mov
mov
add
add
add
xchg
add
add
js
addr16
add
xchg
add
arpl
add
outsl
cmc
hlt
addl
incb
jae
stos
mov
pop
mov
xor
push
push
lea
push
xor
add
sub
sub
sub
add
shr
xor
pop
inc
pop
push
push
push
lea
push
push
lea
push
call
add
int
xchg
add
mov
add
add
jp
mov
imul
mov
data16
addr16
jno
add
add
mov
jbe
popf
add
mov
mov
lods
add
jne
cltd
pop
stc
add
lcall
jne
call
push
push
push
lea
push
call
jle
add
add
jp
cwtl
popa
push
enter
add
add
imul
add
add
add
add
push
imul
out
mov
add
add
leave
add
in
mov
test
bound
pusha
pusha
add
add
add
inc
lock
push
push
call
add
add
mov
leave
pop
add
add
add
jecxz
mov
aad
out
add
jmp
push
add
rolb
add
movsl
stos
cmpsl
add
lea
mov
add
add
ja
popa
out
mov
inc
call
push
push
push
lea
push
call
popa
add
xchg
test
hlt
push
add
xchg
mov
mov
add
mov
cmc
arpl
jge
add
shrl
push
mov
add
into
sub
pop
lea
push
push
push
push
push
lea
push
push
push
push
call
push
aad
fld
cmpsl
add
leave
add
mov
add
popf
sarb
add
add
add
int3
add
mov
movsb
add
push
pushf
aam
add
iret
mov
mov
fiadds
add
add
push
add
add
add
push
clc
add
in
loopne
lcall
jne
pushl
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
pop
add
js
add
test
cmpsb
mov
scas
fcomps
call
add
loopne
aad
cmpsb
add
jle
xchg
cmpsb
aam
mov
rorb
add
mov
stos
push
xchg
add
mov
mov
add
call
push
push
push
push
push
call
jae
icebp
cld
add
fcompl
add
mov
pop
add
add
in
add
add
push
fs
pop
pushl
pushl
push
lea
push
push
lea
push
push
push
push
lea
push
call
loope
cltd
fwait
testl
scas
arpl
add
add
add
xlat
int3
mov
jo
xchg
jbe
jge
pop
sahf
out
push
test
mov
xchg
xchg
in
mov
in
loopne
lcall
push
cmp
add
pop
mov
and
add
sub
ror
sub
sub
add
pop
lea
pop
push
push
push
lea
push
push
push
push
call
mov
enter
lods
add
mov
lods
add
cmp
lock
add
lea
add
add
mov
rolb
test
add
call
je
mov
sub
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
xchg
hlt
fadds
add
add
add
push
int
mov
add
je
add
add
mov
sub
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
test
pop
xchg
add
add
fwait
fwait
cmc
xchg
imul
pushf
push
jno
hlt
mov
std
sub
pop
push
push
push
add
not
push
or
inc
add
rol
sub
sub
shl
add
dec
pop
rol
pop
push
push
push
push
push
lea
push
push
push
push
push
call
mov
filds
add
mov
test
add
jno
movsb
jnp
xlat
add
rclb
mov
out
add
xchg
add
jo
add
add
xchg
cld
xchg
push
pusha
mov
add
add
icebp
mov
add
call
add
test
mov
mov
in
fdivr
lcall
push
push
push
push
lea
push
push
call
cld
add
add
bound
add
lcall
mov
out
xchg
xchg
add
mov
push
push
add
jbe
add
cld
add
pop
addr16
stos
call
push
mov
and
clc
add
push
add
pop
std
popf
add
add
jecxz
pushf
sub
pop
call
push
push
push
call
clc
aam
add
xchg
pushf
out
jge
add
xchg
jl
add
mov
mov
add
clc
add
cmpsl
in
add
jmp
jmp
add
rclb
out
add
fildl
push
mov
jle
sbbl
pop
sub
pop
mov
push
push
push
call
ret
test
arpl
mov
add
add
add
gs
stos
push
push
mov
add
add
add
jl
add
xchg
mov
add
sub
pop
push
push
push
call
jle
mov
pop
arpl
xchg
js
into
test
mov
add
cmpb
add
mov
add
cwtl
fwait
mov
lcall
lods
add
pop
hlt
push
push
call
add
push
shll
shrb
add
pop
or
mov
add
xchg
mov
add
add
add
push
jmp
add
lea
jbe
test
add
add
jge
add
add
add
add
ljmp
lret
add
mov
sarb
in
clc
pop
add
add
push
push
push
call
incb
add
cltd
pop
fidivs
add
mov
add
loopne
pop
ret
add
loopne
stos
aam
add
mov
jne
lea
cli
add
ret
pop
inc
add
push
push
push
push
lea
push
lea
push
call
push
add
add
mov
mov
add
data16
add
data16
add
add
pushf
lea
xchg
lret
lds
add
add
xchg
sti
lret
stos
add
cltd
add
sarl
sti
add
pop
cmpsl
mov
lods
fwait
add
icebp
filds
pop
add
shrl
in
call
xor
adc
mov
pop
add
add
test
popa
imul
shlb
imul
mov
add
enter
lcall
pop
clc
loop
mov
iret
xchg
test
out
imul
add
add
mov
popl
jmp
cmc
mov
stos
add
add
call
lcall
xor
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
iret
lret
mov
sarl
jl
test
jbe
add
add
mov
stos
lods
out
add
lret
add
add
out
add
rolb
cwtl
jmp
in
add
xchg
add
add
les
push
push
lea
push
call
push
lods
loope
add
add
xchg
add
cmpsl
jmp
add
outsl
imul
add
int3
stc
mov
sbbl
add
mov
push
rclb
jo
cmpsb
into
xchg
jne
add
in
divb
stos
jnp
pop
add
out
in
lock
lcall
jne
push
lea
push
push
call
push
test
add
in
add
add
mov
push
cli
jmp
out
fiadds
add
xchg
test
je
pop
push
mov
add
stc
add
jnp
in
nop
std
gs
sub
pop
push
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
divl
cmc
mov
fwait
jbe
add
jecxz
arpl
in
hlt
stos
mov
sub
add
jl
adc
sti
add
std
xchg
int
add
add
sub
pop
xor
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
xchg
cmpsb
push
add
cmpsb
mov
lock
mov
imul
aam
jmp
sahf
fwait
popf
add
jns
addb
add
out
mov
add
mov
stos
xlat
into
add
addb
mov
add
jl
add
add
mov
jp
arpl
in
add
outsl
add
pop
add
push
push
push
push
push
push
lea
push
push
push
call
cli
mov
push
xchg
jno
rolb
scas
add
in
lods
add
mov
pushf
mov
insb
sub
pop
add
pop
push
push
push
push
call
add
nop
imul
les
push
jle
xchg
outsl
in
pushf
add
add
push
add
add
aam
add
test
fsts
mov
mov
pop
cmp
add
add
lock
add
add
pop
enter
jo
xchg
add
fiadds
add
sbb
int
mov
rorb
lcall
dec
add
xor
adc
mov
enter
push
push
lea
push
push
call
add
mov
lahf
pop
loope
scas
add
std
rolb
add
push
add
add
out
add
add
add
add
add
add
les
cmpsl
mov
lret
add
mov
add
scas
add
shlb
lcall
or
push
push
push
push
push
push
call
mov
fildll
testl
xchg
add
add
add
add
clc
flds
jl
add
push
pop
add
mov
add
bound
mov
mov
add
pop
add
flds
movsb
cmc
mov
out
testl
xchg
add
loop
movsl
add
jne
loope
add
add
les
push
push
push
call
push
push
jmpw
rolb
pop
lea
add
add
add
pop
add
xchg
add
sti
mov
push
sahf
out
movsb
pop
add
outsl
out
into
add
test
sti
add
mov
add
mov
into
add
jle
add
jno
sub
pop
push
mov
xor
push
push
push
push
push
push
push
call
imul
je
pop
icebp
popa
pusha
jle
add
push
mov
add
sahf
add
mov
add
jl
sub
pop
sub
push
push
lea
push
call
mov
add
test
bound
add
cmpsb
lcall
add
pop
add
mov
in
add
add
add
in
pop
push
ljmp
jle
mov
sahf
add
lcall
push
push
push
push
push
lea
push
lea
push
call
add
add
add
mov
addb
test
add
pusha
bound
imul
add
data16
mov
add
add
bound
int3
mov
repnz
xlat
lcall
add
test
pop
add
aad
in
jp
add
pop
addl
push
push
push
push
push
lea
push
push
push
call
mov
add
lds
jmp
repnz
add
add
pushf
add
aad
test
imul
mov
add
xchg
jle
mov
add
add
pusha
add
add
add
fcmovne
cld
add
sahf
add
add
push
test
add
out
sub
pop
pop
mov
push
lea
push
call
add
mov
lods
xchg
lcall
leave
enter
pushf
gs
hlt
pop
add
imul
add
xchg
scas
sub
add
xlat
outsl
pop
add
stos
add
imul
in
clc
lcall
pop
in
push
push
lea
push
push
call
mov
add
mov
add
movl
insb
jge
add
stos
mov
jmp
xchg
lcall
jno
pusha
iret
popa
mov
in
lock
lcall
ret
add
add
add
push
push
push
push
push
push
call
push
pusha
push
clc
fistpl
fisubs
addl
pop
add
pushf
xlat
add
add
lock
cltd
filds
std
add
sub
pop
mov
xor
push
push
push
push
push
push
push
push
call
add
fdiv
pop
in
push
push
clc
push
add
movsb
add
pusha
loop
add
test
in
loopne
mov
xor
push
push
lea
push
push
push
push
push
call
add
test
add
xchg
add
mov
out
jmp
add
stc
jb
cmpsb
add
mov
add
mov
add
add
mov
mov
addb
add
pop
rclb
imul
sub
adc
cmpsl
call
add
jae
leave
add
test
cli
frstor
add
add
out
add
fisttpl
add
jp
fnstcw
jb
add
sarb
mov
mov
add
ret
push
add
push
mov
xchg
bound
std
add
cmpsb
add
sub
pop
add
add
push
push
push
push
push
push
push
push
push
call
mov
add
pushf
data16
add
cli
loop
outsl
add
subb
ja
mov
mov
push
add
pop
iret
rolb
xchg
add
push
pop
push
aad
addr16
jmp
in
fdivr
lcall
fsubrs
repz
not
push
xor
add
ror
inc
shl
sub
not
add
inc
sub
pop
shr
pop
push
push
push
call
push
add
mov
lock
aam
mov
add
aam
add
loop
add
mov
in
pop
add
jnp
data16
pop
add
add
jle
xchg
xchg
add
in
in
add
add
pop
mov
hlt
pop
roll
jbe
add
mov
sub
pop
pushl
push
push
push
call
add
addl
jns
mov
repnz
in
add
add
add
out
add
add
xchg
out
mov
in
hlt
lcall
aad
add
push
push
push
ror
push
or
not
add
xor
sub
rol
inc
pop
xor
lea
dec
pop
push
push
call
jnp
push
popf
push
add
aad
cmc
loope
xchg
fwait
call
add
add
movsl
xchg
cmpsb
add
add
ret
mov
add
add
add
add
addr16
mov
fsubs
loop
jle
add
mov
sub
pop
push
push
push
push
push
call
xchg
add
mov
lcall
jns
add
cmpb
lods
add
pop
add
add
std
popf
test
test
lcall
rorb
call
pop
pop
push
push
push
not
pop
mov
add
push
lea
push
call
push
jbe
xchg
popf
push
cli
andl
mov
xorw
stos
addb
test
leave
add
mov
lret
in
clc
pop
add
push
add
not
pop
add
push
push
push
push
push
push
call
sbbl
in
jae
mov
add
add
add
add
loopne
add
mov
add
fwait
add
mov
jmp
call
mov
xor
push
sub
sub
pop
add
push
xor
dec
pop
push
push
xor
add
xor
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
push
call
cmpsb
ja
into
xchg
popa
add
jbe
add
add
add
mov
jo
add
movsl
addr16
add
add
add
outsl
scas
add
lcall
add
push
push
call
add
add
add
popf
adcl
fsts
add
mov
add
ljmp
mov
add
call
add
add
add
add
int3
add
add
add
clc
lcall
les
ror
sub
shl
sub
pop
add
pop
push
shr
sub
pop
mov
push
push
push
push
push
push
call
add
mov
add
cmc
add
add
xchg
xchg
fisubl
iret
rolb
add
iret
stos
jno
into
add
add
icebp
jne
add
xchg
add
add
pop
add
add
js
mov
aad
add
cmc
fwait
pop
leave
lods
rol
stc
add
add
add
fildl
rcrl
mov
add
xor
push
lea
push
push
push
push
push
push
push
push
push
call
mov
push
add
mov
add
test
stos
jle
xchg
lret
ret
jae
add
popa
mov
jae
add
mov
cwtl
push
mov
xlat
add
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
push
add
jnp
push
cltd
add
add
add
add
stos
add
in
add
push
js
add
add
add
add
add
addb
add
pop
imul
in
loope
sahf
add
fdivr
lcall
movsb
push
ror
add
pop
mov
xor
push
add
pop
or
je
mov
push
push
push
push
lea
push
push
push
push
push
call
lds
sti
scas
mov
pushf
add
add
mov
add
push
out
rolb
add
int3
mov
les
scas
xchg
mov
xchg
add
xchg
mov
loope
jl
scas
add
int3
add
into
add
xchg
add
scas
add
movb
cltd
mov
xlat
jge
add
xor
push
lea
push
push
push
call
add
cmc
rolb
fs
nop
add
cli
add
f2xm1
mov
add
add
add
fwait
addb
jmp
js
add
lock
add
xchg
add
push
xchg
sahf
cmc
mov
je
in
lock
add
push
lea
add
rol
pop
mov
xor
push
lea
add
pop
add
push
push
push
push
push
call
mov
add
add
add
mov
mov
lahf
imul
add
add
std
add
add
add
leave
add
sub
pop
add
push
push
push
push
push
push
call
push
popf
add
mov
add
cld
add
add
jge
add
sti
add
movb
insb
add
add
in
fbld
jp
fmulp
add
add
add
mov
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
fsts
popl
ljmp
jo
sti
aad
add
mov
ljmp
mov
jae
movsl
add
add
add
push
clc
stc
add
iret
add
add
add
fdivr
lcall
add
push
push
lea
push
lea
push
push
push
push
call
incb
rcrl
mov
mov
call
add
addb
cld
add
roll
lcall
add
rcrl
add
ja
add
mov
add
mov
add
in
lcall
les
inc
pop
add
push
not
pop
pop
push
lea
pop
rep
mov
push
push
push
call
xchg
pusha
add
add
mov
push
mov
jbe
into
clc
roll
pop
imul
add
addl
mov
enter
xchg
jmp
jmp
add
lret
add
jmp
loop
pop
or
add
hlt
sub
pop
xor
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
repnz
jne
add
jo
add
cmpsb
outsl
lret
hlt
mov
add
add
iret
imul
mov
add
aam
mov
mov
shr
in
fcomps
les
dec
pop
or
je
push
lea
push
call
xlat
popf
cmpsl
mov
out
add
xchg
pop
pop
lds
lock
scas
jmp
filds
in
clc
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
call
stos
repnz
add
add
add
push
std
add
mov
lds
jmp
nop
mov
add
into
movsb
xchg
mov
add
jmp
add
roll
mov
imulb
add
add
int
fisubs
add
pop
add
js
sub
pop
add
push
pop
add
push
push
push
push
push
push
push
push
call
push
add
mov
add
add
mov
push
add
mov
add
cwtl
insb
xchg
shrb
aad
fwait
scas
out
repnz
add
add
xchg
out
loop
mov
add
jl
add
add
fwait
add
shlb
lcall
movsb
push
rol
pop
pop
push
push
shl
not
inc
dec
push
and
add
shr
sub
shl
pop
add
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
add
fsubr
roll
popa
xchg
clc
push
mov
fildl
add
call
mov
push
jno
fldenv
add
add
pop
mov
imul
add
xchg
movsl
test
mov
add
add
jo
addr16
outsl
addl
push
testl
sub
pop
pop
push
push
push
push
push
push
push
call
jb
add
xchg
jecxz
add
shl
push
imul
loopne
out
add
add
add
add
add
pop
lds
scas
add
icebp
sahf
popl
add
faddl
add
mov
flds
movl
mov
movl
add
add
add
movsl
lcall
jo
arpl
in
in
mov
push
sub
pop
mov
push
ror
xor
add
rol
pop
mov
jmp
push
push
call
add
outsl
pop
add
add
xchg
test
lcall
xchg
add
movsl
movsb
jae
mov
add
outsl
roll
clc
in
mov
fwait
rolb
add
add
push
fwait
add
lret
sub
pop
push
push
push
push
push
push
lea
push
call
add
hlt
aad
add
cmpsb
xlat
add
jp
cld
in
mov
add
add
ror
push
mov
add
add
add
popf
test
call
mov
add
push
shl
inc
add
pop
push
push
push
shr
shr
add
add
pop
push
push
push
push
call
lds
mov
add
test
add
int
push
xchg
roll
pop
in
add
add
incb
add
add
pop
add
mov
push
dec
sub
shl
pop
pop
push
dec
add
dec
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
add
cltd
mov
xchg
xorb
add
movsb
jp
fmuls
cltd
lcall
fidivs
add
mov
mov
fldcw
pop
pop
push
shl
shl
pop
pop
leave
push
push
push
lea
push
push
call
add
push
add
xchg
hlt
mov
jbe
pusha
add
aam
add
test
je
leave
mov
faddl
push
add
mov
sub
pop
ret
push
push
push
call
add
add
add
jp
ljmp
push
lea
xchg
xchg
add
add
subl
add
int3
add
add
outsl
aad
add
add
arpl
gs
mov
aad
mov
sub
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
popf
add
add
mov
fadd
mov
mov
add
add
lea
pusha
in
lahf
jl
cli
add
add
test
jns
int3
add
add
push
add
out
scas
add
mov
add
fwait
add
popf
loope
test
test
aad
in
fdivr
lcall
in
push
ror
pop
add
push
push
not
not
rol
pop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
in
mov
mov
data16
les
pushf
add
in
lahf
in
add
out
icebp
mov
sbbl
xchg
add
add
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
cmpl
add
add
mov
add
add
mov
ja
test
mov
jo
lock
mulb
rolb
shlb
gs
scas
flds
stos
test
lcall
inc
cld
add
add
push
lea
push
call
add
jmp
in
movsl
test
rcl
lret
aam
mov
aad
cmpsb
mov
add
data16
add
add
lods
jl
add
mov
add
iret
test
mov
out
in
clc
pop
addl
test
je
push
ror
lea
rol
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
mov
add
test
add
add
out
iret
xchg
test
add
add
add
ret
in
fcomps
pop
push
push
call
fiaddl
push
fldl
pusha
aam
jecxz
add
fnstenv
add
jnp
mov
test
subl
add
add
push
jae
xchg
add
sahf
add
add
arpl
loopne
jmp
sub
pop
pop
push
shr
pop
pop
push
push
call
xchg
test
add
jle
lret
roll
scas
add
in
lods
add
add
roll
pusha
xchg
pop
add
cli
popf
nop
outsl
mov
sti
add
add
rcl
add
popa
hlt
add
pop
sahf
call
fildl
jne
jge
add
in
clc
pop
leave
ret
push
push
push
call
nop
add
pop
in
pop
add
add
in
fistpl
nop
add
jb
out
add
mov
add
ret
xchg
jmp
enter
test
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
enter
xchg
add
jmp
add
add
add
testb
arpl
xchg
add
lret
mov
xchg
mov
add
mov
movsb
sub
pop
mov
add
push
push
push
lea
push
push
lea
push
push
push
push
call
pop
popa
call
xchg
mov
jecxz
pop
xlat
jae
lock
xchg
icebp
shlb
mov
mov
hlt
jne
mov
jbe
fs
roll
fadds
sub
pop
push
push
push
lea
pop
push
push
push
push
push
lea
push
push
push
call
icebp
add
jae
lds
sti
add
sti
je
add
add
push
fs
pop
lcall
add
std
mov
nop
repnz
add
testl
add
push
add
add
stos
xchg
jb
addb
movsb
lods
std
in
add
push
sahf
sub
pop
testl
addl
push
push
lea
push
call
add
stos
cmc
add
add
add
mov
mov
jmp
add
add
lcall
jb
add
hlt
pop
push
call
push
push
push
push
push
push
push
push
call
fildl
jae
js
mov
je
stc
add
stc
sahf
sti
add
movb
add
int
jns
mov
add
gs
add
into
les
movb
add
mov
cmpl
add
add
in
sar
mov
in
jge
push
add
inc
cld
push
lea
push
push
push
lea
push
lea
push
push
call
add
mov
mov
lret
add
mov
into
fidivl
add
xchg
add
test
add
add
aad
aad
mov
jle
add
add
add
add
lcall
jne
push
ror
shl
pop
push
push
push
inc
sub
dec
sub
pop
call
cmpl
jne
push
dec
sub
pop
pop
pop
push
push
lea
push
push
push
push
push
push
call
stc
mov
pop
sti
arpl
add
lods
add
ret
out
add
in
addb
push
add
loopne
in
push
add
mov
add
add
insb
add
faddl
add
mov
add
in
les
add
popa
sahf
pop
add
div
clc
rolb
xchg
movsb
fwait
je
in
loopne
lcall
push
push
push
push
push
push
push
push
push
push
call
addr16
add
lahf
push
insb
hlt
mov
add
add
push
add
call
add
add
imull
add
fldl
in
lods
jns
testl
test
jecxz
loope
add
add
lea
data16
add
add
xchg
push
add
add
add
pop
add
leave
sub
pop
pop
push
dec
sub
ror
pop
leave
ret
push
add
pop
push
push
push
push
push
push
push
push
call
push
pop
fnstcw
jge
mov
testl
add
arpl
add
pop
add
cwtl
jns
push
jl
js
jmp
in
jmp
pop
xchg
insb
add
cltd
xchg
cli
xchg
mov
pop
mov
push
ror
ror
ror
pop
add
push
push
dec
rol
pop
push
push
shr
ror
pop
push
push
push
push
lea
push
push
push
call
add
add
bound
mov
add
mov
mov
xchg
xchg
loope
roll
add
lcall
push
push
push
push
call
mov
pop
std
jo
push
add
push
test
mov
lret
add
hlt
insb
add
add
pushf
jae
shr
add
add
pop
xchg
mov
aad
loopne
cwtl
rcl
add
add
test
add
cmpsl
add
mov
add
mov
in
lock
lcall
inc
cld
add
add
pop
push
call
push
push
push
push
call
add
mov
add
test
add
add
add
add
add
ja
mov
add
hlt
mov
add
movsb
out
lea
add
add
add
fsub
add
lods
stos
stos
add
add
jae
fwait
add
out
add
rolb
jl
stc
cmpsl
in
add
in
sub
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
push
call
jmp
add
mov
add
std
mov
cli
add
add
add
imul
add
add
add
mov
gs
pop
call
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
sbb
movsb
movb
in
push
int3
add
insb
add
mov
test
add
arpl
add
js
xchg
rolb
add
int
std
std
cmc
jbe
fdivs
add
add
movsb
add
fs
in
add
add
lcall
insl
cld
add
test
push
push
push
push
push
push
push
push
call
andl
addl
xchg
pop
pop
popa
push
add
jne
sbb
aad
cwtl
pop
add
add
rolb
add
add
icebp
add
mov
add
loope
out
xchg
xchg
mov
into
cwtl
mov
je
lret
pop
add
mov
sub
pop
pop
push
shr
add
rol
pop
pop
push
push
push
lea
push
lea
push
push
call
icebp
in
add
jnp
pop
clc
jno
add
fisubrl
in
add
stc
xchg
orb
stos
mov
add
jnp
add
out
lods
imul
test
call
pop
pop
push
xor
shr
xor
pop
leave
push
dec
pop
ret
push
ror
ror
pop
push
push
xor
add
shr
pop
mov
push
xor
add
pop
add
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
roll
add
jo
add
mov
add
xchg
add
xchg
jns
xchg
sub
pop
push
push
push
push
push
push
push
lea
push
call
add
add
hlt
out
pop
bound
out
push
mov
lods
add
add
add
aad
jecxz
out
add
fildl
add
mov
add
add
add
cmc
cli
call
add
xchg
mov
add
add
lahf
int3
orl
mov
add
aam
mov
push
push
inc
pop
push
push
shr
pop
mov
push
dec
inc
pop
lea
sub
push
rol
ror
add
pop
mov
shr
push
lea
push
push
push
push
push
call
out
add
shrb
push
insb
insb
repnz
add
lcall
mov
add
add
popf
hlt
add
xchg
add
lret
add
add
jle
push
clc
xchg
idiv
in
hlt
add
insb
iret
cmc
jmp
stc
lret
add
add
add
scas
add
add
pop
pusha
out
mov
pop
add
mov
push
shl
dec
shl
pop
mov
add
push
xor
sub
shr
pop
add
push
lea
push
push
call
insb
add
int
arpl
testl
add
add
in
mov
mov
lods
fistl
add
cltd
sahf
push
nop
add
addr16
mov
aad
add
hlt
pop
mov
mov
push
push
push
lea
push
lea
push
call
jbe
std
add
jge
call
mov
add
js
xchg
add
xchg
add
add
jns
add
mov
insb
lods
add
in
in
pop
cmp
jne
push
push
call
arpl
mov
add
fiadds
add
add
incb
jl
add
add
call
cmpl
mov
cmpsb
imul
add
add
pop
mov
into
add
sub
pop
cmp
jne
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
jnp
push
add
mov
jp
mov
shll
xchg
mov
add
mov
gs
mov
or
add
leave
fwait
add
add
add
add
rclb
add
loopne
shrb
push
jecxz
cltd
add
repnz
sub
pop
mov
push
push
lea
push
push
lea
push
call
add
add
add
imul
iret
shll
add
add
cld
add
outsl
in
add
pusha
add
mov
mov
lcall
add
std
add
add
xchg
add
add
add
add
cltd
cld
cmpsb
rol
out
adc
loope
add
push
push
call
test
add
jae
xchg
int3
jge
mov
addr16
add
push
pop
add
add
add
cli
hlt
add
sarb
in
shlb
loopne
mov
fnstenv
ljmp
ret
js
add
test
pop
add
inc
cld
push
shr
pop
mov
push
shr
pop
sub
jne
push
lea
not
pop
mov
push
lea
push
call
push
subb
mov
cmpsb
shlb
add
lcall
xchg
addr16
mov
in
icebp
mov
fldt
add
push
into
mov
mov
push
add
jmp
add
add
sub
pop
movl
push
xor
inc
dec
pop
jmp
push
lea
push
push
lea
push
push
lea
push
call
je
pop
scas
add
lret
add
jo
mov
push
add
add
lahf
cli
mov
jecxz
add
lods
in
in
jecxz
add
lcall
inc
cld
push
dec
pop
mov
push
push
lea
push
push
push
call
jae
mov
scas
add
ljmp
add
mov
imul
testb
mov
jns
test
loope
pop
add
fdivrl
sub
pop
cmp
jne
mov
push
sub
pop
movl
push
lea
push
push
push
push
push
push
push
push
call
mov
test
xchg
add
enter
add
cmpsl
jae
add
call
push
add
add
mov
out
add
add
jo
js
scas
test
mov
add
jbe
pop
add
lret
sub
pop
jmp
mov
push
add
add
shl
pop
cmpw
jne
mov
push
lea
push
push
push
push
push
lea
push
call
fiadds
out
mov
pop
add
add
loop
js
add
fildl
xchg
add
add
call
add
addr16
fdivl
movsb
int
movl
mov
in
in
movl
push
pop
jmp
pushl
push
push
push
push
push
call
mov
mov
out
add
mov
push
add
sbb
out
lods
mov
jnp
add
into
mov
add
fsin
add
pop
pop
push
add
add
pop
mov
push
ror
dec
sub
pop
mov
push
pop
mov
push
push
push
sub
add
sub
sub
shr
xor
shl
pop
xor
sub
lea
add
pop
push
push
lea
push
push
lea
push
call
add
int3
mov
jne
leave
rolb
rcr
sti
movsb
add
add
jmp
push
out
add
in
pop
xchg
pop
push
add
add
jmp
jbe
jnp
jmp
add
fs
mov
add
loop
into
sti
inc
rclb
add
mov
add
push
push
call
push
sub
pop
cmpl
je
push
push
lea
push
and
add
shl
sub
not
sub
ror
shl
pop
add
lea
pop
push
not
ror
ror
pop
push
push
push
push
call
xchg
into
popl
add
mov
mov
jle
add
add
jo
pop
add
loop
js
add
popa
add
add
add
add
out
leave
add
add
clc
jne
add
ljmp
add
hlt
pop
call
cmpl
je
push
push
rol
push
xor
add
ror
sub
sub
shr
sub
rol
shr
pop
shl
shr
pop
push
push
push
lea
push
call
add
add
mov
mov
push
mov
add
add
pop
mov
add
pop
add
xchg
add
addr16
add
add
in
hlt
add
add
sub
pop
push
push
lea
sub
pop
call
push
push
lea
push
push
push
push
push
call
pop
add
add
negl
int
mov
add
add
out
add
add
add
jnp
add
lods
add
mov
out
mov
add
jb
testb
add
add
xlat
iret
add
mov
pop
add
add
add
add
popf
popf
add
jl
sub
pop
cmpl
je
push
push
inc
shr
push
sub
add
add
xor
ror
sub
add
xor
pop
rol
ror
xor
pop
push
rol
inc
pop
push
push
push
lea
push
lea
push
push
push
call
add
mov
lods
add
sti
push
add
mov
add
push
fs
add
add
jo
add
push
test
add
add
incb
add
add
mov
in
call
call
cmpl
je
push
push
xor
not
push
push
pop
add
dec
shr
sub
shr
not
ror
not
pop
sub
shl
dec
add
pop
push
not
pop
push
push
push
push
lea
push
call
add
mov
add
add
outsl
pop
xchg
rcr
jae
loope
xchg
add
add
mov
cltd
stc
mov
xchg
mov
add
mov
push
pop
xchg
add
pop
add
scas
fucomi
push
stos
mov
lcall
jbe
add
push
push
push
push
push
push
push
lea
push
push
call
nop
stos
in
add
mov
jbe
loopne
lock
add
add
add
rclb
add
push
fwait
add
xchg
popa
xchg
xchg
stos
add
loope
out
mov
fistpll
push
pop
cmpl
je
push
push
add
shr
shl
add
push
sub
add
not
shr
inc
not
sub
sub
pop
add
lea
ror
pop
push
push
call
popa
arpl
repnz
add
add
add
add
add
mov
mov
add
add
cld
movsb
out
push
stc
mov
add
cmc
nop
int
cmpsb
add
add
imul
add
in
clc
pop
push
push
lea
push
push
push
push
push
push
call
add
add
add
cli
in
xchg
arpl
add
add
stos
xchg
add
xchg
out
lea
add
cltd
sub
pop
call
push
lea
push
push
call
add
add
add
add
xchg
outsl
add
fldt
arpl
mov
add
lods
lret
cltd
mov
add
add
add
call
leave
mov
jno
add
push
add
add
ret
sub
pop
cmpl
je
push
push
push
xor
add
not
dec
sub
ror
pop
shr
rol
pop
push
ror
rol
pop
push
push
push
push
push
push
push
lea
push
call
nop
xchg
add
add
jae
add
mov
jmp
outsl
add
int3
add
add
add
imul
addl
push
add
sub
pop
call
push
sub
shr
pop
cmpl
je
push
push
xor
add
add
inc
push
sub
add
sub
ror
rol
inc
not
pop
dec
ror
sub
pop
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
repnz
jle
mov
add
cwtl
add
roll
test
mov
add
add
scas
int3
add
add
lahf
incb
flds
add
mov
mov
add
add
jne
xchg
add
fcompl
call
push
push
lea
push
push
call
sarb
jmp
add
mov
add
add
imul
jno
aad
add
mov
in
lock
cmpl
je
push
push
inc
ror
sub
push
or
inc
add
not
sub
shr
pop
sub
pop
push
ror
pop
push
push
rol
pop
call
push
lea
push
push
push
push
push
push
push
call
add
add
lock
add
add
negl
pusha
add
add
loope
roll
add
std
pop
add
jno
jae
cmc
add
into
popf
roll
add
lcall
cmp
rol
je
push
push
rol
shr
lea
push
or
inc
add
xor
sub
inc
sub
shr
lea
not
pop
inc
add
pop
push
lea
push
lea
push
push
push
call
sahf
add
add
add
leave
jb
jnp
iret
lea
rcrl
enter
add
add
add
nop
rclb
cwtl
push
cltd
imul
add
push
iret
jne
mov
je
add
loopne
jle
mov
add
add
push
call
push
push
lea
push
call
add
add
cmc
add
shlb
aam
add
xchg
lcall
add
push
add
xlat
pop
jle
sahf
stos
pop
bound
int3
stos
mov
add
jl
popl
scas
push
fldcw
add
out
add
sub
pop
cmpl
je
push
push
sub
push
or
not
add
sub
ror
sub
sub
pop
rol
pop
push
rol
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
test
in
add
fisubrl
add
add
add
imul
add
into
add
sahf
leave
jae
fisttpll
mov
jecxz
add
out
add
add
jmp
add
loopne
lcall
stos
xor
add
out
in
add
shr
pop
cmpl
je
push
push
shr
not
shl
push
and
add
sub
lea
pop
add
shr
sub
pop
push
add
sub
pop
push
call
push
add
ror
dec
pop
cmpl
je
push
push
not
shr
push
or
inc
add
inc
sub
shl
dec
sub
pop
not
shr
rol
pop
push
push
push
lea
push
push
push
call
xchg
add
jl
mov
add
mov
std
bound
out
xchg
stos
xchg
test
arpl
sti
add
mov
add
aam
fadds
add
pop
pop
mov
add
add
mov
lods
add
add
lcall
push
lea
push
push
push
push
push
push
call
add
add
jns
jge
stc
sbbb
add
add
add
add
out
faddl
xchg
mov
push
add
add
lcall
xor
add
loope
pop
cmpl
jne
push
lea
push
call
lahf
sahf
jmp
mov
add
add
add
add
mov
test
data16
call
push
mov
add
jl
mov
cmpsl
xchg
push
mov
leave
mov
in
clc
pop
mov
push
push
push
push
push
push
lea
push
call
add
add
add
mov
repnz
sar
add
add
ja
mov
addl
lds
je
imul
add
add
je
add
pop
pop
gs
sub
pop
movl
jmp
push
sub
pop
xor
push
lea
lea
pop
pop
push
inc
sub
inc
pop
pop
push
lea
rol
pop
pop
push
push
push
push
push
lea
push
call
pop
add
add
popf
jb
push
push
add
imul
xchg
pop
xchg
lods
mov
insb
lods
add
add
add
add
mov
fiaddl
add
add
pop
fadds
add
add
push
lea
push
push
call
add
test
add
jbe
std
mov
lods
add
add
add
add
lea
imul
jns
pop
sub
pop
leave
push
push
push
push
call
add
lea
push
xchg
add
push
add
add
add
add
xchg
cmpsl
xchg
add
mov
pop
out
add
xchg
add
add
add
jle
mov
mov
fsub
mov
iret
xchg
lods
insb
xchg
add
mov
sub
pop
ret
push
ror
lea
shr
add
pop
push
mov
push
push
push
push
lea
push
push
call
add
imul
test
add
pop
lahf
mov
add
scas
xchg
add
add
add
add
push
std
shlb
add
mov
add
lret
add
add
add
add
popl
stos
popf
add
sub
pop
add
push
sub
ror
inc
add
pop
cmpl
jne
push
push
sub
shr
inc
push
and
add
ror
sub
shr
xor
pop
dec
xor
pop
push
shl
inc
add
pop
pushl
push
push
lea
push
push
lea
push
call
test
jle
pop
loope
add
cwtl
popa
mov
test
pop
add
mov
pop
repnz
jns
add
mov
jmp
add
add
testl
call
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
mov
outsl
mov
pop
fidivs
fstp
jbe
mov
lcall
testb
sub
pop
push
push
shr
pop
call
push
shr
pop
jmp
cmpl
je
push
push
push
call
testb
xchg
popa
xchg
bound
pop
add
add
out
arpl
fcomip
ja
add
add
jne
add
add
add
mov
pop
add
add
cld
clc
out
insb
mov
mov
xchg
mov
lahf
stc
mov
in
hlt
lcall
jge
add
add
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
aam
fs
stos
cltd
xchg
add
add
in
add
fadds
in
add
lcall
pop
leave
push
lea
push
call
xchg
pop
cli
mulb
mov
jle
iret
add
out
push
add
add
pop
test
addb
mov
add
test
int3
add
lcall
les
push
xor
pop
pop
push
push
push
push
push
push
push
push
push
push
call
mov
icebp
faddl
add
add
add
add
ljmp
cmc
icebp
imul
add
add
add
sbbl
jle
xchg
pop
add
ret
add
cltd
iret
roll
pushf
andb
sub
pop
pop
push
push
push
lea
push
push
push
call
xchg
mov
add
mov
cli
enter
orb
lock
jmp
add
add
add
filds
shrl
sahf
mov
mov
mov
lcall
pop
push
push
lea
push
lea
push
lea
push
call
mov
in
add
mov
mov
add
mov
int
imul
add
loop
xchg
add
imul
fsts
in
in
in
pop
leave
push
ror
inc
pop
add
push
add
ror
pop
ret
jmp
push
dec
add
pop
cmpl
jne
push
push
shl
rol
push
xor
add
not
shr
sub
shl
sub
rol
pop
shl
shr
pop
push
sub
sub
pop
pushl
push
sub
pop
call
push
push
sub
pop
call
push
lea
shl
pop
jmp
cmpl
jne
push
push
call
push
lret
mov
mov
fadds
fucomp
add
add
lahf
int
faddl
loopne
add
cli
js
pop
jns
int
add
repnz
add
add
add
mov
add
imul
leave
jae
add
add
stos
add
pushf
popl
add
clc
pop
mov
push
push
push
call
lcall
fwait
mov
ljmp
add
add
in
out
scas
sbbl
push
add
add
fldl
enter
roll
mov
enter
movsl
add
iret
shll
hlt
pushf
xchg
add
sub
pop
mov
push
push
call
add
add
jo
mov
add
outsl
add
mov
scas
scas
push
add
add
add
jecxz
add
loope
push
int3
test
add
bound
add
add
push
add
xchg
add
add
imul
add
movb
in
clc
lcall
push
push
ror
push
or
not
add
dec
ror
sub
sub
pop
not
ror
pop
push
inc
pop
pushl
push
push
lea
push
call
add
js
jmp
jno
add
nop
cli
out
pushf
outsl
xchg
add
stc
nop
add
add
add
mov
add
push
mov
add
test
add
popf
add
pop
add
xchg
movsb
scas
add
add
test
lcall
addb
jno
fdivr
add
add
add
inc
sub
add
shrb
dec
int
push
sub
add
push
sub
add
shr
sub
not
add
sub
rol
rol
pop
ror
shl
pop
push
rol
pop
pushl
push
push
call
add
add
add
add
add
add
mov
xchg
push
add
add
push
js
lea
push
add
add
add
push
mov
add
lock
pop
fs
fwait
test
out
cld
xchg
add
push
add
mov
xchg
pop
add
xchg
sub
add
shrb
cmp
push
push
not
push
or
inc
add
add
shl
ror
lea
sub
sub
pop
sub
lea
lea
pop
push
inc
pop
pushl
push
add
pop
call
call
push
push
not
xor
push
and
add
xor
sub
sub
ror
inc
xor
inc
pop
ror
pop
push
push
call
imulb
add
hlt
pushf
addr16
data16
gs
add
add
test
mov
add
add
add
add
add
add
add
add
add
call
cli
add
add
add
add
cmpsb
push
out
push
movsb
jb
test
add
test
jne
push
lea
push
push
call
hlt
add
pop
mov
scas
arpl
push
push
push
add
add
add
out
xchg
aam
add
adc
data16
jecxz
add
add
add
jmp
add
xlat
std
pusha
add
rolb
add
hlt
pop
call
push
push
push
call
cli
add
add
jl
arpl
add
add
ret
add
add
add
test
lea
mov
insb
pop
add
jmp
mov
repnz
flds
test
add
add
add
test
push
add
add
add
add
add
hlt
lcall
shrb
jno
cwtl
push
lea
rol
add
push
sub
add
dec
inc
ror
sub
shl
pop
inc
inc
xor
pop
push
add
lea
inc
inc
pop
pushl
push
add
shr
pop
call
call
push
push
not
push
or
not
add
sub
shr
sub
lea
pop
add
pop
push
add
pop
pushl
call
push
not
pop
call
push
push
lea
shr
push
sub
add
sub
sub
xor
ror
pop
xor
pop
push
push
call
loop
add
mov
int
add
out
stos
add
xorl
addb
add
add
pop
xchg
aad
shrl
lcall
jne
push
lea
push
call
clc
loope
add
add
cli
rolb
add
add
in
add
bound
add
fildl
loopne
add
popl
jae
in
clc
lcall
shll
dec
jecxz
cmpsb
push
call
add
loopne
pop
in
rorl
lret
mov
add
movsl
hlt
gs
mov
je
call
add
add
xchg
add
in
testl
pop
call
push
push
add
rol
push
sub
add
inc
shr
sub
rol
inc
ror
pop
inc
sub
pop
push
shr
pop
pushl
push
lea
push
push
call
imul
cmpsb
mov
movb
add
push
aad
mov
or
add
fdivr
cmpsb
mov
int3
addb
std
add
add
pop
add
xchg
push
add
lds
add
out
jo
add
jl
add
ljmp
xchg
inc
aad
push
shr
not
sub
dec
push
xor
add
sub
sub
lea
rol
shl
pop
ror
inc
lea
xor
pop
push
push
push
push
call
pop
jmp
mov
jmp
cwtl
xchg
push
lahf
add
flds
add
xchg
int3
pop
add
add
xorl
mov
addb
add
popa
add
in
xchg
xchg
sub
pop
pushl
call
push
dec
pop
call
push
push
dec
add
not
push
push
pop
add
sub
sub
rol
shl
pop
inc
not
pop
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
les
add
bound
add
js
xchg
mov
push
add
add
iret
in
jo
pop
stc
mov
call
add
pop
add
add
pop
add
popf
add
add
add
test
lcall
out
out
int
cmpsb
pop
add
in
loopne
lcall
jne
push
push
lea
push
call
into
pop
movsb
cltd
push
bnd
add
add
pop
loopne
add
incb
add
mov
rolb
add
aad
add
fnsave
pop
jno
mov
cltd
add
add
pusha
aam
xchg
add
shlb
jge
fldl
add
lcall
and
add
push
sub
add
pop
lea
push
push
call
add
add
add
rolb
add
movl
stos
lock
add
je
sub
pop
push
call
push
push
add
push
xor
add
lea
add
sub
sub
shr
ror
pop
not
add
not
ror
pop
push
shr
add
not
inc
pop
pushl
push
shr
add
xor
sub
pop
call
push
push
push
call
aam
add
gs
jo
add
mov
push
xchg
testl
stc
xchg
add
lea
add
idiv
test
add
in
add
add
fiadds
mov
lods
pop
mov
push
add
push
sti
int3
fildl
add
int
push
lds
sub
pop
call
push
push
ror
shr
push
or
inc
add
sub
pop
dec
pop
push
push
call
loope
cli
iret
add
mov
add
mov
clc
pop
push
add
add
int
add
add
mov
pusha
add
add
add
mov
mov
int3
pop
sti
imul
popa
sub
pop
pushl
push
sub
sub
pop
call
push
push
lea
push
call
add
xchg
add
jbe
add
add
pushf
add
add
cmpsb
nop
shll
add
add
pop
mov
pushf
mov
add
add
add
test
push
popa
sub
pop
call
push
push
rol
not
add
push
and
add
shl
not
dec
sub
sub
pop
rol
lea
rol
not
pop
push
lea
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
rolb
iret
add
jmp
aam
imul
push
mov
mov
test
stos
jecxz
fcoms
add
add
xchg
in
icebp
mov
enter
xchg
sub
pop
pushl
push
add
pop
call
push
ror
pop
call
lea
push
push
lea
xor
add
shr
push
sub
add
add
sub
sub
shr
xor
ror
pop
sub
ror
sub
pop
push
lea
push
call
mov
mov
xchg
add
addr16
out
add
lret
add
xchg
add
push
ja
test
add
cmpl
cli
lods
int3
loop
add
add
add
imul
mov
add
movsl
add
icebp
repnz
pushl
push
rol
sub
rol
pop
call
push
shr
pop
push
push
sub
pop
call
push
push
add
sub
dec
push
and
add
rol
sub
dec
sub
sub
shr
pop
shr
pop
push
xor
add
rol
pop
pushl
call
push
lea
ror
pop
call
push
inc
pop
mov
push
push
sub
not
sub
push
push
pop
add
ror
sub
sub
add
xor
pop
sub
rol
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
add
ljmp
js
mov
add
ljmp
mov
les
push
add
imul
add
pusha
in
movsb
jecxz
loop
popa
adcl
add
cld
shl
in
loopne
lcall
jne
push
push
push
lea
push
push
push
call
add
xchg
add
add
mov
mov
add
imul
sti
add
add
cld
data16
push
add
add
xchg
sub
pop
call
push
push
push
push
push
push
push
push
call
outsl
add
cltd
add
pop
add
js
add
push
add
test
ja
add
icebp
add
add
mov
pop
mov
int
add
add
push
shll
pop
add
fiaddl
add
jne
call
push
push
shr
push
push
pop
add
not
sub
rol
sub
add
sub
rol
pop
xor
shl
add
pop
push
lea
push
push
lea
push
push
push
push
call
add
ljmp
mov
scas
xchg
add
lods
imul
fidivl
add
clc
add
fsubs
add
pop
add
test
add
add
cld
lods
call
cwtl
add
mov
lcall
jne
push
push
push
push
lea
push
push
call
add
leave
jmp
cmc
mov
fwait
add
out
xchg
fwait
movsb
add
lds
pop
mov
add
imul
loop
clc
lahf
call
add
pop
out
pop
ror
loope
add
add
popf
add
push
add
sub
pop
call
push
push
shl
add
dec
push
xor
add
add
rol
sub
inc
sub
add
pop
add
ror
xor
pop
push
push
xor
shl
dec
push
or
not
add
inc
rol
add
shr
sub
add
ror
pop
shr
shl
pop
push
lea
push
push
push
push
lea
push
call
arpl
add
add
int
push
add
scas
xlat
add
add
loopne
add
xchg
mov
rolb
add
add
lds
add
clc
js
cwtl
mov
stc
add
call
push
push
rol
push
and
add
shl
shl
sub
sub
sub
add
pop
add
pop
push
lea
push
push
push
call
pop
add
stos
std
lret
les
ja
add
int3
add
add
faddl
lahf
cld
add
hlt
lret
add
pop
add
push
mov
push
lods
into
push
add
jge
add
lds
sub
pop
pushl
call
push
push
call
add
scas
nop
push
scas
add
faddl
movsb
mov
jne
add
add
add
add
fcomip
add
mov
mov
add
xchg
jnp
out
add
push
fcmove
jmp
clc
les
add
clc
std
imul
movl
add
jecxz
mov
mov
jbe
in
add
movb
pop
mov
push
shl
dec
pop
lea
push
push
lea
push
call
add
enter
add
test
add
jbe
addb
add
push
xchg
lcall
mov
add
into
sub
pop
lea
push
pop
push
push
lea
inc
ror
add
pop
push
push
shr
pop
push
push
add
pop
push
push
shr
dec
inc
pop
push
push
push
not
sub
sub
rol
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
iret
js
add
push
xchg
fiaddl
mov
add
pop
out
cltd
addr16
add
in
add
pop
add
add
add
jne
push
shl
sub
not
pop
push
call
push
push
lea
push
push
pop
add
xor
lea
sub
shl
pop
shr
pop
push
add
xor
add
ror
pop
pushl
call
push
inc
add
sub
pop
call
push
push
lea
push
lea
push
push
lea
push
push
call
mov
add
sahf
cli
test
push
les
add
add
add
mov
add
add
add
mov
mov
mull
jecxz
xchg
add
int
jns
mov
push
repnz
xchg
call
rorb
jmp
leave
jmp
mov
sub
pop
mov
push
push
push
call
add
pop
out
lret
in
pop
push
add
jae
add
cli
mov
test
add
popf
add
cwtl
jmp
mov
add
xchg
lahf
stc
pop
add
sub
pop
pop
push
push
push
push
call
lret
sti
push
xchg
addl
add
lods
frstor
out
fadds
add
jae
lock
andl
add
out
add
mov
lock
dec
jne
push
sub
sub
pop
jmp
call
push
push
add
rol
shr
inc
push
push
pop
add
sub
not
shl
lea
pop
xor
pop
push
not
pop
pushl
call
push
not
add
sub
pop
push
call
push
lea
add
rol
pop
mov
lea
push
push
lea
shl
push
or
not
add
lea
sub
xor
pop
inc
shl
pop
push
push
push
call
cltd
arpl
add
sti
jle
add
add
clc
lock
mov
fnsave
in
hlt
lcall
jne
call
push
ror
add
xor
pop
push
call
push
push
dec
push
xor
add
inc
not
ror
inc
sub
xor
xor
dec
shr
pop
sub
pop
push
push
call
push
xchg
arpl
rcll
loopne
lret
add
imulb
add
popl
pop
add
add
add
add
fwait
bound
push
push
mov
negl
add
ficoml
add
cltd
sub
pop
pushl
call
push
sub
pop
call
push
push
lea
push
call
pop
in
add
add
aam
hlt
les
lods
fsubrs
addb
add
insb
xlat
mov
add
push
rcll
add
pop
xchg
int
add
add
xchg
mov
xchg
stc
add
add
rolb
sub
pop
mov
push
lea
pop
lea
push
push
lea
push
and
add
lea
sub
ror
sub
add
add
shl
sub
pop
sub
not
add
rol
pop
push
push
lea
push
push
call
add
rcr
xchg
rclb
mov
in
add
mov
add
add
add
bound
cmp
flds
pusha
icebp
insb
add
add
add
nop
mov
and
add
jnp
lret
add
add
add
add
lcall
jne
push
lea
push
push
push
push
push
push
push
call
jno
fiadds
cmc
cld
add
lcall
add
mov
add
test
add
add
movsl
add
fwait
movb
add
xchg
cmpsb
leave
add
add
cwtl
push
insb
xchg
mov
addl
mov
add
loopne
lcall
xlat
adc
sub
pop
call
nop
add
add
addb
imul
stos
call
mov
mov
cwtl
jo
sub
pop
lea
push
push
push
lea
push
lea
push
call
lods
lods
mov
xchg
xchg
gs
test
mov
add
jb
shlb
mov
enter
push
mov
sti
add
jp
mov
cmpsl
add
addl
fmulp
icebp
push
pop
add
aam
lcall
add
push
shl
ror
pop
push
push
push
push
push
call
mov
add
add
add
data16
xchg
les
loop
stos
add
add
test
add
mov
scas
xchg
in
lock
lcall
add
jne
push
push
lea
ror
inc
push
or
not
add
inc
sub
sub
sub
shl
sub
pop
xor
pop
push
push
push
lea
push
lea
push
call
add
in
add
jb
xchg
addr16
mov
fsubp
add
add
imul
clc
popa
mov
push
hlt
add
add
sbbl
in
pop
mov
add
mov
pop
add
rolb
cmc
arpl
out
pop
sti
lcall
in
in
pop
push
push
push
push
push
lea
push
call
xchg
add
mov
add
add
pop
add
add
add
out
mov
add
add
add
mov
mov
add
cwtl
add
push
add
lea
lahf
jnp
add
incb
shrb
and
fiaddl
fistl
leave
incl
sarl
add
ffreep
ret
or
dec
and
xor
add
pop
pop
push
add
rol
lea
xor
pop
pushl
push
push
push
lea
push
lea
push
call
lcall
mov
pop
jnp
add
gs
gs
rclb
loope
add
test
add
add
enter
andb
sub
pop
call
push
sub
pop
push
push
xor
pop
call
push
push
dec
rol
ror
push
sub
add
ror
sub
shl
lea
pop
pop
push
sub
pop
pushl
push
shl
add
pop
call
call
push
pop
jmp
pushl
push
shl
add
lea
pop
mov
push
inc
rol
lea
pop
jmp
push
push
add
rol
sub
dec
push
and
add
shr
add
sub
dec
dec
pop
xor
not
lea
shr
pop
push
sub
rol
pop
pushl
push
shr
shr
pop
call
push
push
push
push
push
push
push
push
call
add
shlb
jp
pop
mov
cli
cltd
add
add
lahf
mov
jmp
lret
add
in
lcall
shrb
je
xlat
push
shr
not
push
xor
add
not
sub
ror
not
add
pop
not
shl
pop
push
shl
dec
pop
pushl
call
push
push
push
push
push
push
lea
push
call
nop
ja
bound
add
add
add
add
cmpsl
cld
push
lds
rcrl
out
add
les
mov
cmc
cwtl
add
lods
mov
les
bound
mov
xlat
movb
add
add
call
push
add
sub
pop
leave
push
shr
xor
not
dec
pop
add
push
push
push
lea
push
push
push
call
add
cwtl
add
xchg
jmp
mov
add
jb
mov
jae
add
mov
add
add
addb
push
mov
outsl
add
add
sarl
add
mov
call
fldl
lea
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
iret
incb
out
add
mov
movsl
testl
add
add
add
movsl
add
add
mov
roll
mov
mov
mov
add
add
insb
add
jmp
add
sub
pop
pop
push
push
push
push
push
push
push
call
jp
xchg
jecxz
add
js
lret
les
test
add
roll
testl
mov
sub
pop
pop
leave
push
push
push
lea
push
push
push
push
push
call
add
xchg
mov
push
add
mov
add
lock
add
in
arpl
add
add
aad
sub
pop
add
push
push
lea
push
call
faddl
std
xchg
mov
add
add
stos
repnz
stc
in
cli
jbe
jo
add
mov
arpl
movsl
int3
mov
add
add
add
add
fwait
mov
add
shlb
add
add
add
add
add
xlat
add
in
hlt
lcall
push
lea
push
lea
push
push
push
push
push
push
push
call
lahf
mov
add
add
add
jbe
add
loop
add
mov
add
add
add
rolb
movl
sub
pop
leave
push
shl
add
pop
ret
push
shr
shr
sub
pop
push
mov
push
not
dec
add
pop
cmpl
jne
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
fiaddl
popa
mov
push
add
jb
fdivs
les
lea
pop
loopne
fdivrs
add
add
add
out
rolb
add
xchg
mov
je
roll
add
pop
int
test
push
jp
push
add
xchg
add
add
sub
pop
mov
push
push
lea
push
call
je
ljmp
mov
mov
add
add
lock
cld
enter
lahf
mov
lods
add
in
js
jae
xchg
mov
add
add
lcall
jle
add
push
push
push
push
lea
push
call
cmc
add
mov
push
out
add
loope
add
sti
fistl
shll
les
scas
ja
mov
add
je
add
push
ja
add
jecxz
cli
add
popf
pop
add
jle
imul
add
call
add
lcall
inc
or
ret
shl
rcrl
and
xor
push
dec
not
pop
xor
push
not
sub
pop
add
push
add
pop
xor
push
dec
add
pop
dec
push
shr
dec
pop
sub
jmp
push
ror
xor
pop
sub
push
not
add
inc
pop
pushl
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
loope
add
xchg
add
ficompl
into
jno
sbb
add
add
add
pusha
add
rolb
bnd
add
mov
cmpb
add
xchg
add
imul
scas
push
std
lret
mov
add
add
mov
in
fdivr
lcall
jmp
push
pop
cmp
jne
push
push
push
lea
push
lea
push
push
push
call
mov
xlat
add
sahf
test
mov
fisubrs
jmp
push
add
mov
xchg
jno
std
lret
mov
jnp
sar
std
jo
add
add
add
hlt
push
scas
mov
out
add
add
aam
add
mov
push
sub
lea
pop
lea
push
push
push
push
lea
push
push
push
push
push
push
call
pop
fscale
fimuls
add
jge
loopne
mov
insb
popf
jecxz
add
jnp
into
mov
add
add
xlat
mov
push
add
mov
jne
push
add
mov
add
push
add
stos
add
add
add
outsl
add
out
in
fcomps
jmp
subb
into
xchg
pop
mov
push
push
push
lea
push
push
lea
push
call
add
int
jo
mov
mov
mov
int3
cmpsb
imul
push
in
fiaddl
add
shrl
add
in
in
add
push
add
add
add
jmp
cmc
lock
call
cli
push
add
mov
add
add
repnz
xchg
repnz
pusha
js
movsl
add
add
sarl
mov
push
add
xchg
pop
add
insb
add
js
add
mov
in
clc
lcall
enter
icebp
pushf
push
push
push
push
push
push
push
call
add
lea
add
add
mov
mov
rolb
filds
sarb
xchg
add
add
lcall
jmp
push
lea
push
call
insb
add
add
bound
jecxz
test
add
add
outsl
mov
add
push
fiadds
add
jnp
add
sarl
aam
lds
fdivl
lcall
push
push
push
push
push
call
nop
jp
lea
pop
lret
mov
data16
pusha
xlat
cwtl
mov
roll
add
lods
add
fists
les
popa
gs
stos
add
add
popf
fcompl
jmp
add
add
lods
jno
arpl
mov
cmpsb
add
lcall
jmp
stc
pop
and
sub
push
push
push
push
lea
push
push
push
push
call
add
xchg
jl
std
cmpsl
add
popf
lret
call
sti
filds
add
jns
fwait
into
faddl
sbb
movb
xchg
fidivs
jnp
mov
mov
add
add
addl
add
test
sti
call
or
sbb
add
add
nop
add
loop
ljmp
test
lahf
rolb
mov
fimuls
pop
add
ret
push
dec
lea
sub
lea
pop
push
mov
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
icebp
out
pop
js
addr16
jns
add
out
add
add
mov
rcr
mov
hlt
add
imul
je
in
in
in
add
jecxz
push
add
cwtl
in
mov
pop
push
add
icebp
mov
xchg
add
add
add
add
lcall
cld
push
dec
lea
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
xor
add
rolb
jmp
push
mov
fucomp
add
add
in
push
stc
add
out
icebp
ret
loopne
add
add
movsl
hlt
pop
nop
add
mov
add
mov
add
add
add
mov
movsl
sub
pop
push
push
push
push
push
push
lea
push
push
call
mov
movsb
arpl
add
jb
add
add
sti
rclb
mov
mov
add
rolb
xchg
add
add
pop
push
push
lea
xor
pop
push
push
lea
push
push
lea
push
push
lea
push
call
push
add
add
out
xchg
add
add
imul
add
push
popa
pop
test
mov
add
mov
lahf
faddl
imul
add
stos
push
add
add
cmpl
sub
pop
mov
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
ret
clc
add
scas
rolb
add
add
xchg
xchg
push
add
add
outsl
add
ret
data16
mov
aad
sub
pop
lea
sub
push
sub
add
pop
mov
push
push
push
lea
push
push
call
mov
fwait
mov
push
jmp
add
pop
popa
add
add
ljmp
mov
add
add
sti
add
insb
icebp
ror
loope
aad
stos
movsb
mov
cmc
xchg
add
enter
add
jne
pop
out
pop
add
xchg
add
insb
push
fildl
ljmp
fs
imul
fwait
addb
add
pop
or
xlat
call
add
add
add
rol
add
add
add
cli
sti
jb
pop
add
out
add
add
add
lock
xor
fs
add
insb
repnz
fdivrs
push
add
mov
out
movsb
in
add
popf
pop
mov
push
sti
call
add
xchg
sub
pop
mov
add
push
ror
pop
xor
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
add
jge
add
add
xlat
add
add
lret
add
add
add
cltd
push
add
add
ret
jb
jp
jl
add
add
clc
add
jmp
andb
push
add
add
ret
fcomps
xlat
and
push
push
lea
push
push
push
call
jmp
add
stc
add
mov
negl
sti
idivb
add
les
add
add
sti
jnp
icebp
add
add
loope
imull
icebp
add
mov
movsb
xchg
add
gs
data16
icebp
test
mov
rol
push
shl
xor
pop
rol
push
push
push
call
mov
add
push
add
cmc
in
add
sahf
call
addb
ficomps
int3
jge
ljmp
roll
jmp
aad
fisubrs
mov
add
push
push
add
xlat
faddl
add
add
add
sub
pop
xor
push
inc
ror
lea
pop
inc
cmpb
jne
push
dec
pop
add
push
add
pop
cmp
je
add
push
shr
shl
ror
pop
cmpl
jne
push
lea
push
lea
push
push
push
push
push
push
call
test
jnp
mov
xchg
add
add
push
mov
fistps
mov
add
add
outsl
imul
shll
mov
add
adcl
pop
outsl
popl
xchg
jecxz
push
pop
add
sub
pop
xor
push
push
push
push
push
push
call
xchg
gs
mov
leave
stc
add
add
add
xchg
push
negb
test
movb
mul
cwtl
add
add
add
int3
std
movsb
add
lock
xchg
jbe
pop
pop
mov
mov
repnz
add
lcall
pop
push
sub
pop
pop
push
add
sub
add
add
pop
pop
push
inc
ror
pop
pop
push
xor
add
not
pop
leave
push
push
push
push
push
call
addl
add
call
xlat
lods
fbld
add
nop
add
in
aam
rolb
add
cmpsb
xchg
jecxz
add
imul
fsub
add
sub
pop
ret
push
sub
pop
mov
add
push
shl
sub
shr
pop
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
mov
mov
add
shlb
cmpsl
cmp
pop
out
add
add
in
add
addl
add
add
add
ficoml
imul
mov
in
loopne
add
mov
push
push
push
push
lea
push
call
add
stc
scas
pusha
out
popf
add
jns
add
rolb
arpl
rcr
mov
mov
in
pop
add
add
pop
gs
int
add
mov
js
pop
mov
add
jmp
aam
roll
add
jp
mov
pop
add
add
fnstenv
out
add
in
in
pop
testw
push
sub
shr
inc
dec
pop
pop
push
shl
add
inc
pop
pop
push
add
sub
pop
mov
push
rol
xor
pop
push
push
sub
add
not
xor
pop
call
push
dec
pop
xor
push
push
call
flds
icebp
add
sarl
add
add
out
mov
add
xchg
mov
pusha
add
add
fld1
test
andb
call
out
add
lds
add
xchg
mov
sahf
mov
add
pop
add
push
mov
xlat
add
aad
sub
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
imul
add
add
push
add
pop
fiadds
mov
add
pop
mov
cwtl
jnp
movsl
in
pop
test
hlt
rolb
add
in
gs
std
pop
add
add
filds
add
add
jecxz
test
push
addl
inc
push
push
push
push
lea
push
push
call
xchg
jmp
mov
ret
icebp
repnz
aam
add
mov
fiadds
mov
leave
xchg
jns
std
roll
jle
notl
add
add
loope
int3
cli
mov
push
movsl
stos
push
stos
cld
aam
add
add
push
rol
pop
pop
push
sub
pop
pop
push
ror
add
inc
pop
leave
push
push
push
push
push
push
lea
push
call
cmc
in
add
bound
cwtl
xchg
add
add
pop
add
pusha
loop
mov
add
mov
push
shl
add
movsb
add
sub
pop
ret
push
push
push
lea
push
lea
push
push
push
push
call
stos
pushf
add
add
add
mov
jb
mov
xchg
fiadds
add
add
int
push
ja
rolb
sub
pop
mov
push
inc
pop
add
push
shr
pop
push
push
push
lea
push
call
aam
add
jno
add
mov
imul
lock
add
mov
add
nop
fistpll
add
stc
add
add
add
add
imul
shrl
push
push
push
sub
add
lea
add
pop
mov
push
push
inc
shl
pop
pop
lea
push
lea
push
call
sub
add
jbe
negl
js
add
mov
mov
mov
add
add
sub
pop
sub
push
shr
add
pop
mov
shr
push
push
call
fcmovne
fbld
xchg
fisubrs
add
add
lods
lret
mov
fwait
add
add
add
add
loopne
add
add
scas
mov
add
call
mov
lock
add
mov
lcall
ficoml
lock
inc
pop
mov
push
push
push
call
add
add
add
add
cmpsb
out
andl
add
test
lock
xlat
add
orb
add
add
add
jns
add
pop
add
pushl
push
sub
lea
pop
popl
push
push
push
push
push
push
push
call
jge
add
insb
mov
add
mov
hlt
cltd
xchg
mov
cmc
add
movsl
jle
add
data16
push
add
add
cmpsb
rcrl
in
in
lcall
jnp
add
push
rol
dec
pop
xor
lea
push
lea
push
push
push
push
push
call
add
imul
xchg
popa
imul
mov
xchg
ljmp
shr
fs
repnz
lcall
adc
pop
add
push
lea
push
push
push
call
add
lea
out
add
add
mov
jl
in
aad
add
lret
pop
pop
add
jnp
add
fwait
in
mov
aam
add
hlt
roll
push
movsb
movsl
add
sub
pop
xor
push
push
call
lea
add
lods
mov
int3
pop
mov
xchg
sahf
mov
rcl
scas
mov
mov
add
loop
mov
add
jmp
mov
add
mov
cmpsl
test
add
jbe
jnp
stc
add
in
mov
addb
mov
add
lods
les
add
push
fisubl
add
sub
pop
rol
nop
push
lea
push
push
lea
push
push
push
push
push
call
mov
icebp
jne
xchg
add
in
mov
add
les
mov
test
add
add
add
add
add
outsl
cwtl
add
popl
out
test
add
int
add
add
add
sub
pop
nop
push
push
push
push
push
push
call
add
out
imul
popl
les
arpl
add
rolb
in
push
mov
loope
ljmp
icebp
iret
mov
add
mov
loop
out
lret
mov
xchg
shll
add
add
add
in
leave
mov
lcall
lcall
add
in
call
add
add
add
add
mov
lds
roll
int3
add
enter
add
add
fcompl
mov
loope
add
xchg
mov
add
popl
nop
push
lea
push
push
call
push
add
xlat
mov
add
roll
addb
add
mov
popf
lds
sbbl
repnz
add
fs
idivl
hlt
lcall
push
push
push
lea
push
push
push
push
push
push
call
lret
outsl
push
fldl
xchg
pushw
shl
stos
add
add
add
add
nop
lcall
int
add
pop
add
cmpsb
xchg
out
add
icebp
lahf
ja
lcall
sub
pop
nop
nop
push
push
push
push
push
call
add
data16
add
out
bound
test
add
add
mov
test
loop
out
flds
mov
add
fiadds
add
loop
add
add
push
mov
fwait
add
add
mov
add
testl
ljmp
lcall
cmp
jne
push
sub
add
lea
pop
add
nop
push
push
push
call
js
pushf
aam
add
cmpsl
mov
sti
add
lret
bound
add
movsb
jge
bound
add
rcr
xchg
add
xchg
add
andb
add
mov
mov
cmpsl
add
jmp
add
lock
in
hlt
lcall
cmp
je
push
shr
sub
pop
nop
nop
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
xchg
mov
lds
add
mov
pop
jle
in
add
jecxz
mov
add
add
add
stos
sub
pop
inc
push
lea
add
pop
nop
push
add
shr
sub
shl
pop
nop
push
push
push
push
push
push
push
lea
push
push
call
mov
movsb
cmc
fdiv
movsl
xchg
enter
add
push
loopne
add
add
data16
loopne
xchg
sub
pop
cmp
jb
push
lea
push
lea
push
push
call
jp
add
lret
add
in
fst
mov
add
lods
jecxz
int3
add
in
add
add
lods
jp
mov
mov
test
sub
pop
xor
push
push
lea
push
call
add
add
jo
add
movsb
add
test
mov
push
std
xchg
add
add
test
icebp
aad
popa
add
fs
andl
imul
add
mov
add
jbe
sub
pop
jmp
push
lea
push
push
lea
push
push
push
push
call
push
push
add
add
add
add
fmulp
xchg
pusha
mov
jo
add
add
shl
add
mov
add
add
add
les
add
popf
add
data16
add
jbe
pop
add
loopne
add
mov
add
lcall
push
and
push
push
push
push
push
push
push
push
call
gs
mov
add
mov
add
add
int
testb
jle
add
lds
stos
pusha
mov
add
bound
aam
mov
add
xchg
stos
iret
rcll
add
add
add
fldcw
add
stc
push
enter
mov
lret
add
sub
pop
add
push
sub
shl
pop
movzwl
push
ror
pop
mov
add
push
ror
add
rol
pop
mov
xor
push
not
rol
pop
xor
shl
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
jo
push
cmc
clc
jle
test
add
stos
call
add
add
add
pushf
rorb
xor
push
xor
shl
add
pop
shl
push
push
push
push
push
lea
push
call
mov
push
pusha
cld
fcmovbe
add
push
cli
push
mov
add
push
add
add
add
add
add
add
mov
add
push
add
stos
jns
sub
pop
xor
shl
push
shr
shl
pop
xor
push
add
sub
rol
pop
mov
push
push
push
push
push
push
call
pop
add
add
int
add
mov
pop
add
add
mov
call
add
add
add
outsl
popf
out
in
cwtl
jge
add
nop
mov
ja
in
call
add
pop
push
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
int3
test
enter
jge
lock
push
xchg
fisubrs
add
mov
add
shrb
clc
fstpl
leave
pop
jns
imull
cmpsb
loop
add
fdivr
lcall
push
shr
rol
inc
ror
pop
leave
ret
push
push
push
lea
push
call
scas
add
xchg
clc
add
int3
rcrl
add
mov
add
add
mov
add
add
add
fcompl
add
add
add
mov
fs
xlat
xchg
cli
pop
jge
mov
mov
add
add
mov
loopne
add
leave
add
in
lock
lcall
push
shr
sub
rol
inc
pop
mov
push
push
call
add
cltd
stos
add
movsl
negl
add
test
pushf
out
cmc
push
xlat
add
mov
pop
add
jmp
push
add
mov
add
jne
incb
add
add
cmpsb
outsl
add
add
in
mov
xchg
stos
in
add
pop
flds
pop
ficompl
add
add
add
push
dec
pop
push
push
ror
add
ror
pop
push
push
push
lea
pop
mov
push
sub
ror
add
not
pop
mov
push
not
sub
shr
pop
mov
push
push
push
lea
push
push
push
push
lea
push
call
in
add
ret
add
add
jle
mov
mov
filds
pop
shrl
pushf
gs
mov
mov
cmc
push
xchg
mov
mov
push
add
mov
rol
add
fiadds
add
add
sub
pop
test
je
push
push
call
scas
filds
add
add
cmc
mov
lret
fadds
in
icebp
add
imul
in
mov
mov
add
les
mov
add
fsubrs
roll
add
clc
pop
mov
push
push
lea
push
push
call
pop
shlb
add
add
lea
add
lods
add
add
add
fwait
addb
add
test
test
je
mov
push
shr
add
pop
mov
mov
push
push
push
push
push
push
push
lea
push
push
call
stos
hlt
jp
push
push
lret
add
add
jae
std
not
stos
popa
push
add
test
push
push
add
sahf
jbe
call
incb
add
add
add
xchg
stc
xchg
add
jmp
jb
add
add
lcall
cmp
je
push
inc
lea
pop
test
je
mov
push
lea
pop
inc
push
xor
dec
add
pop
cmp
je
push
not
dec
sub
shl
pop
test
jne
push
lea
push
push
lea
push
push
push
call
stos
add
add
add
add
add
add
add
lock
add
add
sub
pop
xor
pop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
jp
add
lods
push
add
add
xchg
mov
in
push
add
add
movl
jmp
mov
add
push
fwait
add
push
sbbl
lock
nop
leave
pop
insb
add
xor
jge
cwtl
add
pusha
sub
pop
pop
push
pop
pop
pop
push
dec
rol
pop
leave
push
add
shl
inc
pop
ret
push
lea
push
push
push
push
lea
push
push
push
push
call
arpl
jae
add
mov
add
push
add
rolb
addb
add
mov
outsl
mov
nop
pop
out
int3
out
fcomps
imul
sarl
popa
add
mov
jb
add
test
add
popf
mov
add
lods
jle
add
test
mov
push
shr
pop
inc
cmp
jne
push
lea
add
pop
lea
mov
push
push
push
push
lea
push
call
aad
in
jne
add
rorb
add
add
arpl
mov
int
mov
xchg
in
cltd
mov
ljmp
fsub
mov
add
mov
int3
in
add
cmc
iret
add
lcall
in
test
add
add
lea
push
push
lea
push
call
add
bound
test
xchg
mov
add
add
leave
popl
fldcw
test
add
pop
hlt
add
into
jns
add
add
scas
lahf
jge
jns
mov
sub
pop
mov
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
les
nop
mov
imul
add
mov
pop
lock
add
add
icebp
add
fs
pop
data16
add
insb
add
clc
xchg
add
mov
aad
pusha
in
in
loopne
lcall
movb
push
push
push
lea
push
call
add
fildl
out
out
add
in
mov
mov
cmpsl
add
add
fdivr
add
in
add
xchg
stc
mov
mov
add
add
mov
add
movsl
add
add
mov
in
in
lcall
loopne
test
cld
call
lret
rorb
inc
add
add
push
xor
sub
pop
mov
push
push
push
push
push
push
push
call
jge
mov
jae
loopne
movsb
add
pop
add
jae
nop
add
add
mov
add
xchg
mov
sub
pop
add
push
xor
lea
pop
cmp
je
jmp
push
lea
push
push
push
push
call
add
popf
lds
add
pop
lds
add
add
cltd
mov
lock
add
push
pop
lahf
add
cli
jne
mov
add
out
add
add
mov
add
add
mov
pop
add
push
roll
mov
sub
pop
xor
pop
push
lea
push
call
mov
add
xchg
rolb
add
jns
add
movsl
add
loop
mov
jbe
hlt
jp
add
mov
popf
shll
push
add
mov
add
test
nop
mov
jbe
scas
mov
add
sub
pop
pop
pop
push
lea
pop
pop
leave
push
ror
shl
pop
ret
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
movsl
in
icebp
mov
test
movb
in
add
add
xchg
add
add
push
xchg
sub
pop
lea
push
lea
sub
pop
pop
pop
push
push
push
lea
push
push
call
stc
mov
cmpsb
cmc
jmp
add
add
fstps
popa
icebp
sti
cwtl
aad
add
xchg
iret
mov
mov
stc
mov
jns
add
add
in
add
add
cwtl
lahf
add
pushf
movsl
add
aad
add
lods
lods
clc
mov
add
add
sub
pop
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
pop
add
data16
iret
pop
mov
add
clc
xchg
roll
sti
test
add
cltd
mov
mov
add
add
xchg
add
cmpsb
mov
sub
pop
leave
ret
push
lea
pop
mov
push
shr
shr
dec
add
pop
pop
pop
push
push
push
lea
push
push
push
push
call
add
add
pushf
ror
nop
add
add
fs
lret
add
add
mov
add
call
mov
add
jne
add
stos
push
cld
mov
add
in
in
lcall
pop
push
push
lea
push
push
push
push
push
call
rolb
clc
ljmp
add
clc
add
stos
mov
jbe
jnp
add
mov
stos
roll
push
push
lea
push
push
push
push
push
push
call
xlat
pushf
cltd
add
jecxz
add
popf
scas
out
test
push
add
add
lods
add
jnp
add
xchg
add
ja
insb
repnz
int3
cmpsb
add
scas
aam
xchg
push
add
lods
lock
push
add
add
stos
insb
add
add
add
addr16
pop
ret
xor
cmp
adc
adc
and
adc
push
cmp
adc
cmp
xor
adc
jb
adc
mov
add
repz
jg
fdivs
mov
gs
rorb
inc
rorb
cli
sbb
dec
jne
testl
int3
xor
add
pop
cmp
arpl
add
jns
mov
xor
cmp
cmpsl
hlt
int3
popa
dec
insl
imul
pushf
sbb
dec
xor
enter
jp
in
jmp
jecxz
out
pop
add
lret
pushf
jmp
jne
daa
pusha
dec
xchg
xchg
lds
cmpsl
jmp
xor
stos
mov
push
addl
jecxz
jge
movl
shrl
sbb
movsb
fdivrl
ss
jne
jnp
jnp
imul
rcll
mov
rcr
loop
stos
sbb
data16
xchg
fscale
and
mov
leave
jae
out
cwtl
rcll
cmp
or
inc
lods
ljmp
or
test
mov
lret
stos
mov
mov
test
mov
addr16
pop
ljmp
out
ret
xchg
lahf
xchg
pop
scas
imul
shrb
xchg
cli
dec
xor
testb
and
push
sbb
sti
jo
sarl
sti
imul
js
mov
xchg
test
insl
lods
fwait
clc
cmpsb
fdivl
mov
ja
scas
outsl
add
xor
iret
sbb
xchg
fbstp
movsl
xchg
push
and
push
add
mov
mov
add
cmp
rorl
jb
mov
pop
je
stc
stos
mov
mov
cmp
adc
lahf
sti
lcall
cmp
icebp
aas
movsl
test
imul
xchg
cli
hlt
subl
lcall
out
popf
inc
bswap
ret
lock
test
jb
inc
sub
push
ret
je
movaps
frstor
push
xchg
cld
dec
xchg
and
imul
adc
gs
gs
or
jge
sbb
mov
adc
push
or
and
sbb
sbb
push
jl
push
ret
shll
mov
sbb
or
inc
cmp
xchg
jl
shlb
scas
sub
mov
clc
adc
xor
jp
stc
sahf
shl
test
push
scas
clc
cs
pop
jg
xchg
std
jecxz
sbb
inc
loope
push
andl
stos
into
sbb
xchg
mov
inc
sbb
rorl
mov
cmc
and
jge
push
jns
jecxz
scas
bound
js
xchg
fnstcw
xchg
sahf
test
mov
loop
into
fisubrs
decl
int
sbb
xchg
push
call
clc
out
or
cli
jl
ds
es
js
cli
mov
or
inc
std
cmp
shlb
insl
sub
jbe
mov
lods
out
xchg
cmpsl
push
jge
int
inc
and
enter
cmp
addr16
gs
push
loopne
cmp
cltd
pop
mov
fnstenv
push
out
mov
jmp
dec
xor
repz
stos
cmp
ja
mov
xchg
fldenv
sbb
sti
enter
repz
pop
clc
ja
push
jnp
leave
cltd
test
sbb
aaa
adc
xchg
fidivrl
dec
jne
jecxz
xchg
addb
ss
xchg
stc
mov
sbbl
cmc
out
xchg
pop
fcomi
imul
shrl
jb
leave
orb
adcl
rol
sbbl
xchg
xchg
and
shlb
sahf
sahf
stc
xchg
orb
mov
and
aad
aaa
xchg
xchg
das
mov
mov
mov
pop
xlat
in
in
xchg
test
sbb
mov
cs
sahf
xor
dec
sub
ret
mov
bound
ret
sub
add
mov
enter
out
push
pop
cmpsb
lcall
repnz
rorl
push
in
lcall
jbe
fidivs
fxch
jmp
es
fcmovbe
and
test
stos
dec
pop
hlt
and
and
cmc
mov
dec
repnz
fsts
pop
iret
or
in
pusha
aaa
insb
mov
adc
or
mov
gs
mov
sub
lods
nop
sub
int3
adc
xor
aaa
iret
das
in
ss
testl
and
enter
gs
mov
xchg
add
rcll
jns
sbb
xchg
inc
jmp
inc
push
add
outsb
pop
cmp
scas
in
dec
jb
aam
shrl
add
sbb
dec
lret
xchg
or
xchg
xchg
insb
ja
sbb
cli
ret
stos
or
leave
and
faddl
scas
add
cwtl
add
fldenv
test
pop
sbb
cmp
mov
jne
fwait
pop
push
ds
mov
cmpsb
push
es
cld
andl
mov
das
sub
add
push
imul
sbb
loop
adc
lret
add
rcr
test
mov
lea
out
stos
dec
out
out
fsubs
jno
sub
adc
enter
sbb
arpl
cmpsb
xor
js
mov
and
mov
inc
or
inc
stos
fcmovnbe
mov
loop
mov
cmp
sbb
mov
in
push
int3
xchg
into
inc
inc
cmp
or
xchg
xor
loop
push
ja
fnstcw
sbb
adc
cmp
enter
push
cmp
int3
xchg
je
ret
add
sub
mov
ret
mov
scas
int3
out
xchg
pop
aas
pop
jecxz
outsb
push
scas
out
daa
jnp
jno
xchg
inc
fs
lods
and
mov
mov
sub
pop
xor
cmp
jns
pusha
iret
int
test
xor
push
add
popf
lret
and
movb
je
mov
jge
pushf
inc
dec
aas
ja
adc
sub
les
xchg
mov
popf
mov
add
ss
push
push
push
out
push
cmc
popf
addb
adc
imul
mov
jne
rcrb
xchg
add
test
sbbl
ljmp
movsl
adc
jne
push
push
ret
or
in
repz
cltd
mov
enter
and
add
xchg
jg
cli
fcmovu
add
sbb
mov
fwait
in
enter
stos
pop
push
xchg
cmp
push
xor
iret
push
mov
movsl
xchg
adc
sbb
int3
jmp
decb
fcompl
inc
xchg
xorb
jmp
jno
adc
dec
stc
and
movsb
in
fucomip
out
jbe
mov
inc
cmp
adc
dec
dec
cmpsb
cmc
stc
jnp
fs
push
enter
inc
inc
dec
mov
call
cltd
mov
repz
aad
cmp
inc
fwait
pop
add
pop
aad
pop
cmc
pusha
ljmp
sbb
adc
sub
aam
sahf
shll
into
pop
dec
ret
enter
adc
inc
inc
jecxz
loope
lcall
fimull
pop
in
repnz
repz
cmp
clc
pop
mov
push
cli
add
js
aaa
push
popa
out
cmp
xor
adc
fs
outsl
rorb
decb
push
aas
inc
mov
mov
ljmp
nop
pop
rclb
lods
pusha
fisttpl
cld
xchg
sbb
dec
inc
in
insb
xchg
xchg
pop
cwtl
int3
pop
outsl
mov
push
inc
push
aaa
push
dec
out
dec
sub
xchg
jnp
lock
shrl
jo
icebp
push
adc
push
mov
or
lea
mov
fistpl
adc
ja
test
imul
push
push
mov
pop
mov
pop
icebp
sub
in
enter
jo
aaa
lock
das
insb
div
mov
dec
sbb
fisttps
push
jg
loope
lods
xchg
add
imul
mov
pop
or
loope
fisubrs
in
mov
add
fs
inc
sub
cmp
mov
mul
and
adc
sbb
fcoml
add
pop
rcl
lret
movsb
lea
roll
mov
out
inc
subb
adc
pop
and
ja
aad
pop
movsb
sbb
cmp
xchg
mov
lret
mov
insb
adc
pop
shrl
fwait
sub
sub
push
out
pop
xlat
xchg
aam
mov
aaa
stos
iret
fimuls
js
test
daa
dec
out
or
fldenv
out
lahf
fsincos
xor
imulb
fdivl
inc
sti
or
xor
xchg
cmp
cmp
call
push
jne
push
cmp
loopne
add
push
cld
cmp
jle
jne
xchg
jbe
sub
push
int
inc
js
sub
mov
loope
cld
or
jo
xchg
ret
mov
jecxz
jno
icebp
jge
pop
mov
push
int3
scas
push
cmp
fadd
mov
adc
stc
into
jge
fstps
hlt
mov
lock
fisttps
icebp
mov
sbb
jmp
dec
int3
push
pop
aaa
ret
decl
les
xchg
and
or
sbb
loope
add
fdivrs
shrl
add
mov
ret
incb
pop
outsb
push
fsubrl
dec
cmp
nop
sbb
inc
push
sub
fnstcw
cltd
add
jno
aas
inc
xorb
jnp
push
shll
cltd
add
mov
std
jp
loopne
dec
mov
mov
xchg
pop
jle
pop
imul
xchg
mov
gs
lret
rcll
sahf
pop
pop
ret
xchg
pop
lret
mov
mov
lock
std
test
xchg
ds
enter
inc
jmp
xor
sbb
repz
notb
jl
push
lds
iret
aad
in
xchg
jp
lahf
mov
das
xor
ljmp
sarb
dec
jae
sahf
and
jne
adcl
idivl
pop
xor
mov
mov
adc
jae
pop
sahf
lret
pop
movsb
roll
lcall
insl
mov
xor
dec
pop
dec
dec
xchg
jmp
cmp
sahf
outsb
or
in
in
add
fcmovb
ss
mov
sub
mov
inc
stos
dec
lea
dec
iret
bound
dec
subps
adc
mov
imul
xor
mov
jg
imul
cmpb
mov
push
imul
into
cs
add
ds
movsl
loopne
in
loope
mov
xchg
stos
cltd
sbb
push
gs
out
jbe
sub
loope
dec
jae
mov
data16
jg
call
and
cmc
insl
mov
je
testb
ja
xor
xor
shrb
dec
jne
imull
xchg
xchg
jbe
repnz
xchg
scas
je
pop
fstpl
icebp
xchg
push
mov
mov
dec
pop
movsl
inc
sub
fstp
lods
xor
mov
clc
out
stos
popf
mov
adc
pop
imul
xchg
out
imul
cmp
in
in
mov
cmpsl
mov
pushf
mov
imul
and
out
outsb
sti
sub
mov
inc
leave
movsb
push
push
test
and
dec
jp
sub
or
push
and
mov
xchg
add
pop
fisubrs
std
lea
shl
pop
add
divb
fdivs
or
lahf
inc
or
lcall
lret
sub
out
sbb
lret
add
js
out
xor
in
cli
rol
lret
iret
mov
adc
popf
push
ret
adc
xchg
push
in
aad
xchg
roll
mov
mov
sti
arpl
jbe
add
inc
insb
and
dec
stos
adc
dec
push
mov
push
fwait
inc
aad
aas
les
inc
sbbl
leave
mov
adc
gs
cmpsb
pushf
sub
mov
cltd
jno
fcmovbe
arpl
adcb
add
out
frstor
xchg
sbb
jbe
sub
lahf
fistps
mov
xchg
cli
or
inc
rorl
pop
push
mov
lds
imulb
gs
stc
test
sbb
and
out
in
les
inc
in
xchg
add
in
in
jns
test
or
fimuls
in
and
ss
imul
clc
scas
push
push
cs
rcrb
mov
nop
mov
pop
fstl
mov
test
dec
shll
mov
xchg
fs
adc
cmp
xchg
insb
xchg
rcrb
test
or
sbb
jle
xchg
adc
lea
or
insl
jecxz
adcl
mov
movsb
mov
ljmp
fldenv
std
cmp
mov
lds
dec
rol
lahf
mov
and
subb
push
add
cmpb
cmc
add
add
lcall
std
movsb
jg
xchg
sbb
pop
mov
or
leave
mov
and
les
testb
test
aam
dec
negb
sub
sub
jmp
es
inc
das
lret
cltd
ret
mov
fdivrs
inc
mov
push
inc
loope
fneni(8087
icebp
xchg
lret
pop
les
stos
movsb
lods
loop
ss
xorb
add
and
flds
push
icebp
and
es
jg
xor
mov
outsb
aam
push
je
mov
test
adc
xor
add
nop
jle
roll
ret
adc
int3
aam
dec
das
jno
movsb
mov
dec
mov
cmp
mov
jae
xchg
scas
cmp
xlat
push
push
das
jl
clc
add
aaa
ret
lock
in
and
cmp
jbe
jb
in
or
lock
cs
dec
mov
mov
insb
fmuls
sub
ljmp
pop
stos
jae
mov
dec
xlat
les
dec
mov
int3
xor
add
mov
xchg
es
in
out
stc
int
in
out
ret
cmp
rol
or
daa
push
xor
push
insl
or
inc
xchg
es
movsb
lcall
fstps
out
mov
or
mov
pop
rcll
dec
nop
xchg
mov
outsb
lret
cmpsl
lret
outsl
jp
adc
adc
sbb
outsb
dec
sub
test
xchg
jnp
and
test
and
add
fwait
mov
inc
or
jb
and
sbb
cmp
pop
addr16
cmc
sti
pop
stos
or
xor
ljmp
test
inc
stos
jge
shlb
jmp
mov
inc
cmpsl
or
repz
hlt
js
inc
or
loopne
js
xchg
or
repz
xchg
dec
dec
lds
pop
sub
adc
jno,pt
arpl
cli
adc
fwait
ds
je
and
frstor
xor
push
cmp
push
fiadds
test
pop
scas
outsl
add
lahf
imul
test
lcall
adc
fsubrp
ret
cmpsl
pop
xor
xor
enter
mov
mov
mov
xor
shlb
mov
xchg
add
out
dec
cld
into
dec
mov
add
sti
orb
and
sbb
push
adc
iret
xor
sub
std
cld
shrl
popa
sub
ficoml
mov
and
outsl
cmp
push
dec
xchg
pop
and
insl
and
cmp
jg
adc
lods
ljmp
dec
mov
pop
cmp
outsb
mov
cmp
pushf
or
in
outsl
sbb
xorl
xchg
push
pop
sub
fistps
out
movb
lret
and
xor
divb
daa
cmpsb
dec
movsl
inc
sub
aad
rcrb
popa
aas
ficomps
psubusb
cmp
sbb
pop
outsl
popa
and
addr16
je
stc
xor
dec
mov
aas
add
mov
xor
push
outsb
cmp
add
jle
mov
sarl
xor
xchg
nop
mov
rcl
lahf
lods
pusha
and
out
jmp
sub
xor
push
fsts
or
inc
cmp
sub
push
adc
jo
push
or
pop
rolb
scas
loopne
sub
daa
xchg
jl
imul
subl
mov
xchg
fwait
sub
addr16
cmp
shlb
mov
daa
and
addr16
lcall
ljmp
sbb
daa
add
jne
pop
push
jnp
jmp
cmpsb
sub
lea
mov
loope
in
cmp
pop
inc
push
dec
ds
aaa
jmp
dec
dec
ja
pop
testb
ret
inc
out
xchg
js
sbb
sbb
sahf
shlb
pop
aaa
dec
sti
out
jb
cld
jge
sbb
push
mov
shrl
jne
gs
dec
sbb
in
into
and
andl
cmpsl
and
hlt
xchg
jns
xchg
push
lcall
into
mov
inc
xchg
pop
push
int3
hlt
test
das
ljmp
xchg
xchg
aad
mov
mov
cmpsl
loope
jg
sbb
mov
add
pop
das
lret
call
fmull
xchg
jae
les
vmovss
adc
add
mov
jmp
mov
lcall
adc
int3
and
ljmp
jge
lods
push
inc
xchg
stos
int3
cli
jbe
jmp
dec
push
cltd
pop
dec
dec
test
hlt
cmp
xor
int
enter
jae
cld
ja
add
aaa
xchg
sub
ljmp
xor
jge
pop
add
fimuls
sbb
mov
sub
sti
adc
testl
cmpsb
lret
mov
or
lds
adc
imul
jns
pop
mov
fwait
shrl
or
fwait
mov
and
movsb
idivl
lods
dec
pop
jae
lahf
push
fcmovbe
adc
dec
mov
pop
nop
inc
jnp
dec
rorl
pop
cmp
fstpl
int
mov
cs
pop
and
repz
movsb
loopne
xchg
mov
mov
movsb
testb
adc
repnz
mov
mov
fadd
iret
jbe
mov
addl
inc
jg
adc
sub
fistl
sub
js
ret
push
inc
mov
push
test
stc
stc
dec
xchg
ret
jmp
lds
add
daa
mov
push
enter
enter
sub
fs
or
mov
test
inc
pop
lea
cmp
fs
lcall
js
shlb
adc
mov
inc
cmp
adc
lret
jp
dec
repz
and
int3
mov
xor
or
jecxz
mov
pop
imull
out
dec
adc
sbb
mov
movsb
cltd
mov
test
pop
sbbb
add
pop
fwait
in
idivb
fs
dec
adc
lret
sti
sbb
ds
mov
jg
push
data16
xor
mov
mov
push
pusha
inc
mov
out
inc
mov
xchg
inc
sbb
ret
call
int3
outsb
daa
adc
fwait
pop
rcr
pop
push
shll
mov
imul
mov
out
xor
xchg
xor
mov
or
rolb
out
jg
aad
addb
adc
xor
ficompl
fnstenv
sub
cli
js
ret
fadd
aaa
and
loopne
xor
and
xor
les
aad
out
jg
inc
fistpl
sarl
daa
out
sbb
sub
xchg
xlat
jne
adc
ret
enter
mov
es
test
mov
shl
cwtl
add
adc
adc
in
xor
icebp
pusha
sbb
mov
sub
pop
push
icebp
je
inc
push
push
push
negl
xchg
inc
and
mov
ds
mov
cli
mov
adc
dec
xchg
inc
jns
and
sbb
imul
jae
inc
inc
adc
mov
push
mov
xchg
data16
mov
xor
mov
pop
aam
mov
addl
jp
push
or
stos
or
fistpll
mov
fnsave
cvtpi2ps
sbb
push
or
push
cmp
aas
jb
sub
insl
add
rolb
je
adc
movb
add
movsl
mov
mov
or
xchg
out
lods
mov
xor
fldl
mov
or
jb
dec
or
fisubl
push
les
push
lret
out
out
jl
jmp
into
dec
pop
andb
ret
xor
inc
in
xor
in
xor
push
xchg
and
repnz
sarb
out
push
gs
mov
mov
xorb
and
add
sbb
adc
lods
cld
push
cltd
dec
imull
jg
xchg
push
adc
mov
xchg
int
fs
dec
ss
pop
xchg
repz
repz
fwait
jbe
push
xchg
daa
jp
repnz
add
jp
mov
xor
pushf
leave
mov
mov
popa
push
decb
popa
outsb
inc
test
mov
lret
sub
sub
jge
ljmp
fucomi
sub
aad
jns
add
aad
jne
fs
cmpsb
aam
inc
cwtl
and
sub
mov
gs
or
cmp
out
loope
test
inc
jmp
andl
xlat
inc
fistps
lds
ljmp
cmp
mul
cmp
dec
or
icebp
andl
xchg
push
jecxz
sbb
out
imul
mov
jl
xor
sbbb
imulb
xchg
ror
jno
adc
adc
add
or
mov
sub
sbb
add
xchg
pop
xchg
cmp
push
ds
test
dec
hlt
push
dec
sub
aad
sub
xchg
lea
imul
mov
stos
ret
push
push
pop
gs
lahf
cmp
icebp
ja
mov
pop
dec
call
sub
inc
xorl
mov
scas
add
xor
loope
sbb
push
cmp
dec
roll
aas
out
cmp
pop
mov
out
icebp
xor
and
daa
and
and
mov
adc
addr16
icebp
aam
jbe
add
lret
push
pusha
mov
pop
sbb
scas
sub
mov
fcoml
or
popa
test
test
out
test
pushf
add
sub
das
arpl
rcr
ret
jmp
mov
jmp
push
add
dec
jae
adc
mov
lods
into
ss
xor
inc
push
mov
aam
dec
ret
loope
xor
jmp
cltd
jp
dec
xchg
enter
jne
cmp
sub
loop
mov
sub
inc
sub
cltd
mov
lret
and
bound
pop
bound
push
xor
mov
push
pop
push
and
mov
dec
xchg
pop
jne
ret
pop
out
ficoms
cmp
and
outsl
insl
sbb
sub
xchg
or
shrd
les
sbb
int
jno
mov
fidivs
xchg
cmpsb
outsl
scas
jbe
xor
and
adc
sub
push
mov
xchg
sti
inc
push
xor
pop
push
es
xor
sub
cs
test
das
mov
lds
stos
in
outsb
std
fs
sbb
mov
push
add
daa
rorb
movsb
xchg
add
je
shll
xlat
mov
inc
mov
stos
jmp
cwtl
scas
lret
sub
mov
inc
inc
adc
in
sub
push
test
mov
insl
adc
rorb
cmc
cmpsl
or
fists
ror
leave
or
inc
lods
incl
popa
in
jp
adc
imul
mov
adc
mov
jg
lea
fisttps
mov
sbb
lcall
xor
mov
aas
enter
jae
or
sahf
andl
or
bnd
mov
movsb
fs
or
sub
sub
scas
sub
xlat
call
popf
in
cmp
and
das
or
rolb
xchg
insb
movsl
popa
fidivrl
mov
jne
in
mov
aas
mov
dec
idivl
mov
stc
mov
shr
ljmp
push
shlb
dec
push
stos
inc
pop
dec
repnz
mov
push
stc
in
ds
mov
mov
dec
ret
out
sti
pop
sub
mov
lds
mov
or
in
test
add
lea
cmp
push
nop
mov
xor
push
popf
lods
xchg
inc
pushl
ss
sub
std
xchg
add
cmpsb
clc
fnstenv
mov
mov
lcall
cmp
pop
mov
push
mov
inc
jae
jp
dec
mov
dec
imul
add
aad
imul
jmp
jae
cld
jae
lret
mov
xchg
mov
sbbb
lods
push
cmp
adc
ficomps
jbe
lods
and
dec
shll
test
mov
lock
pop
sbb
ss
push
or
popf
xchg
enter
cli
cmp
pop
push
xor
mov
lcall
cmp
push
rclb
cld
xchg
xor
jp
jnp
mov
inc
lret
xchg
xchg
adc
loope
fwait
sub
cmp
sbb
je
fdivrp
and
in
pushf
jbe
push
push
rcr
mov
push
idiv
call
lea
mov
das
jno
jne
pop
sbb
fsub
dec
mov
push
adc
adc
test
fistpl
xor
add
testl
sub
push
xlat
fs
test
jnp
iret
movsl
lds
mov
xorb
push
insb
or
stos
nop
jle
mull
sub
insl
ret
sahf
mov
xor
rorl
sub
daa
mov
jo
xor
scas
cltd
insl
add
add
mov
fcomps
imul
xchg
mov
movsb
xor
cld
inc
aas
stos
jnp
push
xchg
fsubrp
insl
cmp
sbb
lret
negb
cmp
or
mov
fsubrs
test
xor
pusha
stos
push
dec
addr16
mov
sbb
add
or
cmc
movsb
cltd
nop
pop
sub
and
cmc
xchg
pop
adc
push
scas
std
call
sub
fwait
and
repz
xchg
in
rcrl
or
and
and
add
je
adc
in
cmpsb
mov
jmp
repnz
loop
rol
xchg
out
or
push
fwait
mov
xchg
sub
mov
ret
or
sahf
add
vmovaps
and
or
inc
cmp
xchg
jnp
pop
ror
in
jno
mull
adc
jbe
jge
push
mov
ss
sub
sahf
push
test
fnstcw
pop
xor
adc
frstor
lock
dec
cmp
outsb
push
stos
ja
mov
xchg
jp
call
push
cltd
pop
mov
gs
push
jg
dec
cmpsb
test
pop
in
stos
pop
adc
mov
pop
mov
and
inc
jle
mov
stc
in
cmpsb
cs
lods
mov
icebp
fcomi
call
mov
dec
pop
cs
cli
in
pop
and
inc
aaa
push
sbb
or
jp
dec
jo
xchg
and
aas
and
mov
adc
mov
jns
jmp
test
xor
ljmp
jg
dec
xor
add
mov
mov
rclb
imul
and
ret
xchg
and
test
aam
and
jmp
and
roll
mov
insb
push
cmp
movsb
loope
mov
sbb
cmpsl
mov
push
jnp
aad
xor
aaa
xlat
pop
push
lahf
jne
mov
push
imul
flds
test
or
xchg
ret
and
xchg
ljmp
mov
and
add
stos
inc
add
clc
shr
clc
loopne
fiadds
pop
mov
in
lret
cli
clc
inc
sbb
xchg
int3
mov
bound
lcall
xchg
and
cli
pop
add
bound
add
jmp
xor
push
pushf
mov
and
lods
pop
sbb
push
mov
pop
fwait
xlat
mov
inc
sbb
push
push
xor
dec
adc
cmp
js
sbb
push
out
jno
lcall
popa
ds
fnsave
mov
clc
fs
cmp
and
cmpsl
stos
dec
adc
hlt
ljmp
sub
les
ret
insb
or
xlat
imul
popa
and
pop
es
add
push
push
sbb
lea
push
mov
stos
out
push
mov
mov
std
xor
icebp
je
cmpsl
dec
test
jg
enter
stos
jns
shl
mov
xchg
out
leave
push
push
mov
push
hlt
mul
and
adcl
xlat
stos
mov
mov
mov
lahf
stos
iret
jge
pop
inc
ljmp
push
lock
das
andl
out
push
das
mov
mov
push
mov
insl
repnz
mov
and
xchg
xor
pop
orb
xchg
jmp
shlb
jb
repz
in
bound
in
or
pop
cmp
test
rcll
or
rclb
cmpps
sub
cmp
dec
iret
cwtl
cmp
ja
adc
loop
dec
stos
loope
cmc
mov
repnz
xchg
mov
cs
mov
mov
jb
xchg
pop
inc
xchg
jmp
adc
or
movsb
sbb
dec
adc
cmp
je
mov
lret
add
cld
lods
faddl
dec
xor
adc
add
movsb
cmp
sti
jns
adc
dec
xchg
pusha
aaa
and
test
push
add
dec
jne
xor
pusha
jb
ret
call
outsb
jge
iret
sbb
add
sbb
dec
mov
inc
test
sub
and
mov
testl
test
pushf
pusha
cwtl
sub
push
push
push
lods
cmp
add
in
dec
lcall
flds
or
add
pop
das
dec
xchg
mov
jmp
rorb
rcrb
lret
mov
lea
out
mov
into
mov
andb
mov
hlt
leave
insl
fdivrl
xor
xchg
adc
orl
and
adc
test
jb
mov
sub
pop
pushf
push
repz
add
add
mov
jns
cmpl
xor
aaa
cmp
insb
rcrb
flds
neg
adc
outsl
jmp
push
pop
mov
cmp
or
cmpsl
dec
lds
stc
or
push
cmp
lahf
xchg
dec
cmc
mov
cmp
mov
mov
shrb
fnstsw
cmp
pushf
xor
ret
push
sub
mov
mov
sub
hlt
lahf
jbe
ljmp
inc
or
push
push
mov
jmp
pop
movsb
inc
scas
mov
jnp
imul
xorl
push
xchg
xchg
jmp
aam
sarl
mov
popa
pop
or
inc
xor
add
hlt
sub
notl
outsb
cwtd
sbb
xchg
xlat
bnd
sbb
sub
mov
adc
dec
push
imul
and
fidivs
push
popf
ja
das
stos
or
xlat
roll
scas
out
jp
xchg
js
jbe
pop
jnp
xchg
xor
shll
mov
xchg
dec
push
jg
xor
lret
cmp
cltd
hlt
sti
xor
jge
jne
call
aas
sub
fnstenv
mov
xor
sti
inc
mov
mov
adc
rcrl
dec
or
dec
jns
mov
inc
cmpsb
dec
neg
bound
into
push
and
sbb
faddp
dec
lods
rcl
test
and
test
pop
cmp
shlb
or
cmp
fnstsw
or
bound
nop
mov
lcall
cltd
jbe
rcl
mov
pop
divb
jns
jge
push
pusha
xchg
aad
iret
jge
leave
movsb
xlat
push
dec
movsl
sbb
sbb
test
mov
call
mov
push
or
setp
pop
in
lret
xchg
clc
and
addr16
cld
outsl
and
outsl
push
dec
das
clc
inc
ret
scas
and
fs
mov
adcb
dec
ret
sbb
inc
inc
fnstcw
xor
les
pop
cwtl
mov
xor
fimuls
xor
cmpsl
daa
mov
enter
cld
pop
pop
scas
je
sbb
fldt
dec
les
or
mov
movsl
out
mov
mov
jns
dec
mov
movsb
in
sbb
pop
int
aas
addb
jge
sub
stos
bound
mov
and
inc
mov
jg
sbbl
sub
rcr
in
or
dec
jecxz
and
push
hlt
loopne
sbb
adc
mov
xlat
add
pop
dec
lea
pushf
and
repz
jmp
orl
or
pop
mov
mov
sbb
mov
cmc
rcrl
push
lock
mov
push
push
or
fs
jnp
lret
xor
mov
inc
subb
daa
add
push
out
and
mov
pop
xchg
dec
movsb
mov
icebp
nop
push
imul
mov
aas
sbb
add
pop
push
push
mov
xchg
test
pop
cmp
out
sbb
in
dec
or
scas
cltd
mov
jp
fimull
or
xor
adcb
xlat
daa
jp
dec
inc
pop
scas
xor
shll
inc
clc
int
ret
mov
inc
fcmovnbe
or
pop
fisubrs
fcmovnbe
outsl
push
out
dec
lcall
call
aam
imul
js,pn
sbb
ret
test
fldenv
es
ds
inc
into
test
dec
andl
pop
cmpsl
sbb
arpl
bound
add
pop
lfs
addb
mov
aas
mov
mov
loop
jnp
fildl
pop
sbb
push
std
bound
sub
dec
lret
cmp
das
mov
or
and
enter
stos
mov
sub
mov
mov
movsb
lret
xchg
pushl
cmp
ret
mov
inc
shl
mov
ds
mov
cmp
cmp
orl
in
and
mov
mov
sbb
pop
mov
ret
jne
test
daa
out
dec
lcall
mov
ret
sbb
sbb
push
out
mov
sahf
mov
xchg
imul
cmc
jbe
inc
jmp
add
iret
inc
or
pop
add
push
mov
and
shl
in
stos
enter
sbb
les
aad
andl
cmpb
xor
mov
jno
push
jns
fwait
xor
push
and
pop
xor
lock
ret
sbb
mov
inc
jl
mov
ds
cmpl
jnp
adc
add
xor
lahf
xlat
dec
mov
push
les
mov
sub
pop
cli
jle
inc
jg
push
or
pop
dec
popf
movsl
mov
out
jl
xchg
movl
fsin
mov
rcr
inc
and
cltd
adc
push
fcom
scas
jb
aam
pusha
mov
lret
xor
jnp
add
pop
fcmovnu
fisubrl
lret
jnp
shrb
push
leave
stos
out
jecxz
pop
andl
push
jmp
scas
cmpsl
xor
mov
mov
mov
movsb
xchg
jnp
inc
es
adcb
test
sub
mov
pop
mov
pop
sbb
fsubrp
fsubs
or
mov
pop
xchg
cmpsl
or
add
shl
aam
movl
xchg
jne
add
loop
outsl
mov
jbe
pop
nop
xchg
dec
add
push
xchg
dec
loope
xchg
sub
hlt
sub
add
xor
mov
jmp
sbb
movl
call
sub
xchg
pop
adc
repz
mov
in
cmp
loope
mov
rol
cmpsb
push
and
mov
sbb
inc
scas
xchg
sbb
push
movsb
cmp
out
xor
fimull
mov
adc
popf
ret
jl
aaa
cmp
movb
mov
aad
dec
dec
xorl
aad
or
pop
adc
push
nop
call
test
loope
in
cmc
pop
xchg
jne
lock
mov
cwtl
dec
adc
fsubrs
mov
sub
inc
ficoml
sbb
mov
shlb
sub
lahf
mov
sub
ret
pop
jo
in
xor
call
jecxz
xor
ret
insl
imul
movsb
push
ret
sub
cld
in
push
mov
lea
fisttps
adc
sbb
jecxz
dec
in
fisubrs
enter
hlt
fwait
sbb
arpl
dec
test
aas
jge
push
mov
pusha
clc
jmp
mov
xchg
dec
adc
push
sbb
cmpsl
mov
hlt
inc
sub
mov
lods
xor
xor
add
sbb
push
xchg
push
adc
into
in
aad
mov
js
xchg
jecxz
cmp
jno
ret
nop
jbe
shll
xchg
sub
sub
jecxz
ljmp
push
fwait
in
imul
xor
sbb
push
lods
pusha
jno
mov
mov
add
or
inc
cmp
test
mov
repnz
sbb
cmpsl
imul
and
pop
xchg
jbe
and
lods
cmp
jmp
dec
cmp
or
dec
fnsave
and
push
xor
inc
mov
mov
movsl
sub
xor
enter
dec
mov
fidivrs
call
repnz
fsubrs
add
ret
xor
imul
cmpsb
lods
xchg
aam
and
mov
pop
xchg
nop
movsl
pop
sbb
push
inc
sbb
fisubs
dec
adc
dec
xchg
repnz
int3
ficomps
cli
or
mov
lods
or
push
repz
inc
xor
dec
pop
scas
or
and
mov
cltd
push
incb
dec
xor
jmp
loop
sub
jecxz
fstps
jo
dec
clc
add
pop
mov
je
dec
inc
int
xchg
jbe
es
jae
ret
bswap
mov
roll
sub
outsb
sahf
mov
insb
push
int
cltd
fdivp
imul
sbb
xchg
adcl
xchg
jno
mov
in
sbb
pop
pop
and
and
xlat
xor
mov
aam
pop
sbb
mov
setne
mov
dec
mov
jge
jo
lods
push
aam
pop
inc
daa
sti
hlt
insl
idivl
out
arpl
outsl
iret
pusha
fdivr
stos
sbb
outsl
jns
aaa
inc
ret
sub
pop
xor
jl
aaa
sbb
mov
lds
popa
jnp
pop
imul
inc
push
ja
pop
jo
jmp
pop
xor
scas
in
stos
xchg
jle
sbb
and
insl
inc
clc
enter
cmc
xchg
and
adc
mov
or
cli
cmpb
pop
daa
shl
sbb
push
stos
sti
js
mov
popa
testl
aas
lods
out
fcomps
mov
fadd
movsb
leave
xlat
nop
out
les
ret
fisubl
jge
rcrb
push
lods
popa
add
lock
cmp
push
or
and
push
mov
adc
sbb
mov
mov
cmp
rclb
xor
mov
adc
sub
inc
push
xor
nop
imul
jecxz
adc
mov
lcall
sbb
or
aas
pop
cmp
lret
and
xchg
jge
dec
and
jne
fcmovbe
mov
cmp
fldl
or
jae
test
inc
subb
adc
xchg
add
xor
mov
pop
loope
stos
lods
mov
push
add
mov
inc
dec
popa
push
in
xor
pushf
in
roll
mov
fsubrl
mov
dec
pop
xchg
sarl
test
repnz
and
adc
rcrb
int3
mov
outsl
rorl
push
push
cmp
xor
sub
stc
gs
int
mov
out
lock
lods
sarl
sub
pop
mov
add
ss
lods
arpl
outsl
xchg
lds
inc
adc
pop
lahf
inc
add
push
clc
into
shlb
mov
or
xchg
push
push
pop
into
cmpl
push
fs
adc
jp
sti
stos
imul
mov
or
addr16
in
jl
ret
or
and
insb
dec
fbstp
and
out
xchg
cmp
sbb
jmp
movsl
pushf
pop
fcompl
sub
testl
dec
xchg
lahf
push
sub
mov
or
rol
ret
fnstenv
lods
mov
repnz
push
mov
mov
sbb
and
or
out
ds
push
push
ret
and
pop
enter
aaa
sub
mov
pop
cmp
xor
aas
sahf
cmp
dec
ljmp
inc
jle
mov
xor
fsubl
jns
xchg
int3
mov
pop
sbb
xor
cmpsl
iret
inc
xor
mov
mov
ja
jno
sub
lea
mov
loopne
aas
adc
fwait
in
lods
add
je
cmc
mov
imul
pop
and
lock
pop
dec
lods
push
std
add
xchg
movsb
or
and
loopne
sbb
outsb
and
fcomp
cmp
dec
pop
push
mov
mov
rolb
movsw
sbb
in
bound
sbb
repz
lret
or
sbb
mov
jle
mov
repz
cli
xor
mov
sbb
arpl
push
enter
push
pop
jns
mov
lcall
fstl
scas
imul
cmp
mov
aas
xchg
aad
xchg
sti
orb
stc
repz
ljmp
test
sbbl
push
outsb
cmpsb
aaa
push
dec
jmp
sbb
cmpsl
xorps
sub
in
jo
pop
adc
dec
cs
dec
or
stc
or
jbe
mov
push
mov
push
sub
add
imul
xchg
adc
adc
mov
or
cmp
or
dec
mov
sub
sbb
cmpsl
mov
dec
dec
arpl
or
jl
sbb
sbb
das
test
push
mov
aaa
mov
outsl
push
mov
push
and
jb
ret
inc
lods
iret
ucomiss
movsl
je
aaa
aam
bound
sbb
push
cs
cld
cmpsb
rcrb
inc
testb
movsb
and
mov
inc
lods
clc
xchg
out
int3
out
iret
mov
loopne
jbe
xchg
aaa
fistpl
fs
sti
lahf
mov
dec
fcoml
stos
jecxz
sbb
sti
rcll
or
adc
push
stos
mov
adc
cmp
adc
sub
test
jmp
mov
mov
cmp
sbb
cmc
lods
negb
inc
popf
adc
lds
xchg
in
sub
lcall
mov
dec
testl
ljmp
lods
stos
adc
push
and
xor
mov
shrb
repnz
ss
stc
icebp
fldenv
dec
jo
lcall
pop
push
in
loopne
dec
out
out
cmp
and
aad
pop
push
lcall
dec
push
nop
insb
sub
xor
ret
mov
dec
add
pushf
inc
cmp
mov
dec
sahf
cmp
iret
ret
out
and
dec
cmp
jg
mov
roll
or
mov
and
add
jnp
cld
or
sbbl
daa
clc
cmpsl
lcall
jo
cmp
adc
rorl
clc
cli
test
jns
push
xor
pusha
jbe
inc
loope
movsb
push
dec
sbb
inc
loop
inc
mov
icebp
push
mov
push
insl
fisubrl
bound
pop
jmp
fcmovb
cltd
sbb
out
pop
cmpsl
push
movsl
mov
push
push
mov
mov
mov
adc
cli
stos
daa
and
mov
push
push
incl
and
cmovle
mov
jp
dec
lea
hlt
lds
lock
and
fadd
inc
lret
fistpll
mov
outsl
ret
inc
xor
movsw
pushf
push
adc
lret
fwait
jo
mov
outsl
jb
in
dec
mov
cwtl
jp
push
sbbb
add
push
pop
mov
lods
dec
sahf
xchg
jle
popf
repnz
add
in
adc
mov
dec
dec
or
lds
outsb
push
add
data16
dec
imul
pop
and
das
hlt
pop
test
mov
hlt
cmp
or
mov
fstpl
dec
ss
cmc
sub
push
push
inc
adc
outsb
push
pop
cs
test
jbe
es
mov
pushaw
int
std
pop
mov
pop
iret
jne
loop
mov
or
dec
imul
fistpl
repnz
sahf
jne
ret
xchg
cmc
clc
cld
sbb
sbb
js
in
or
les
gs
dec
fimull
les
jp
mov
sar
cmp
adc
sbb
imul
sub
bound
fs
fsubrs
and
jnp
lahf
cmpsb
adc
ret
mov
es
jp
sub
mov
inc
pop
xlat
jae
repnz
out
jbe
xchg
cltd
lods
fistl
insb
mov
xchg
ss
outsl
fstps
in
loop
scas
enter
aam
mov
jnp
lock
mov
call
insb
push
add
lret
jno
mov
aam
dec
insb
jmp
iret
decl
mov
adc
lock
and
movsl
pop
mov
enter
push
ret
sub
enter
pop
jnp
cmc
pop
mov
pop
pusha
xor
pop
jmp
pop
mov
dec
stos
dec
and
mov
rorl
xchg
insl
mov
mov
es
push
int3
xor
push
testl
je
dec
dec
xor
addl
xor
push
cmp
adc
das
fcompp
inc
arpl
jbe
loop
mov
enter
ljmp
sub
ficompl
ds
test
mov
xor
daa
daa
cmp
jns
mov
test
adc
jne
cmp
inc
and
dec
icebp
push
jo
leave
dec
lea
mov
scas
inc
or
fs
lret
popw
adcl
bound
jle
sub
imul
sub
stos
es
push
cmpsb
and
loopne
sbb
cmp
sub
movsl
dec
jns
popa
xlat
stos
scas
ljmp
mov
cmp
dec
cmc
test
movsb
pusha
enter
sbbb
enter
les
adc
mov
filds
cmc
xor
xor
repnz
dec
out
mov
lods
aaa
and
jmp
fmuls
xor
mov
sub
push
xlat
addr16
pop
jl
insb
and
add
cmp
lret
inc
sar
ret
sbb
xchg
mov
lock
or
daa
and
shl
aad
arpl
cmp
test
daa
pop
in
cmp
lock
cmp
fdecstp
arpl
xor
ja
cld
int
das
out
shlb
cmp
xchg
out
cmp
inc
dec
cmpsl
sbb
or
mov
aas
bound
int
imul
or
cld
clc
sub
clc
xchg
xchg
cwtl
pop
inc
imul
cmpsl
aam
leave
and
mov
leave
xchg
dec
pop
mov
outsb
ror
mov
pop
inc
push
test
in
inc
push
cmp
cmpsb
fucompp
in
xchg
xchg
cmp
out
test
jns
iret
xor
sub
xorl
les
je
or
mov
adcl
sti
cltd
fld
xchg
pop
in
pop
inc
ja
clc
xor
mov
jo
push
std
int3
loop
fists
and
jle
gs
shr
mov
bound
int3
sahf
xor
ljmp
data16
xchg
adc
mov
mov
or
fnsave
outsl
mov
mov
add
ja
xchg
and
push
dec
mov
push
xchg
or
movd
out
add
scas
mulb
in
sbb
cmpsb
xchg
in
fstpt
mov
dec
pop
jmp
xchg
xor
cmpl
arpl
scas
dec
or
dec
inc
mov
pop
lods
fistpll
cmp
xor
jp
inc
inc
insl
out
pop
gs
and
into
divb
push
mov
inc
mov
sbb
dec
jb
mov
pop
inc
aas
or
shl
clc
push
sub
int
test
fidivrs
jecxz
cld
test
movsl
cmp
imulb
jbe
fwait
push
outsb
mov
and
ret
mov
daa
pop
cltd
xor
test
out
cmpsl
cmpsb
sbb
movsl
inc
arpl
fadd
insb
pop
push
xor
xor
jle
jl
or
movsb
out
subl
lods
mov
int
sub
fucom
stos
hlt
sub
and
mov
in
add
je
in
jns
mov
pop
ja
pop
cmc
xchg
ss
loop
jbe
scas
or
xchg
popf
inc
rclb
jb
jno
mov
or
pop
pop
test
sbb
arpl
ljmp
mov
ljmp
mov
mov
xchg
addb
push
add
mov
jae
push
ret
cwtl
sahf
je
cmc
insl
jge
leave
frstor
cmpsl
push
popa
mov
mov
xchg
popa
mov
mov
add
jnp
shrl
inc
jg
fdivr
jno
aad
aas
or
je
cmp
push
mov
pop
out
or
nop
jne
jp
pushf
fnstenv
scas
pop
mov
repz
icebp
push
xor
call
mov
fwait
cs
aam
push
sbb
shll
inc
nop
cmp
jmp
push
data16
add
cmpsb
xchg
mov
fucomp
aam
mov
ret
mov
lods
mov
pushl
xchg
ljmp
push
outsb
es
aad
shrb
inc
inc
mov
or
cmc
jg
mov
pop
jb
push
aam
mov
push
nop
or
pop
pop
sbb
fisttpl
fstpl
int
and
xchg
mov
stos
mov
mov
inc
and
push
sahf
xorb
in
mov
push
mov
bound
dec
stos
divb
test
pusha
test
or
push
cltd
jae
fadds
test
pop
xor
dec
es
xchg
lods
insl
pusha
mov
lcall
sbb
repz
add
movsb
mov
push
loope
bnd
out
mov
dec
movsl
cmp
sub
lcall
rcrb
dec
shrl
mov
dec
test
pop
or
add
lds
and
adcl
mov
lea
shll
fstpt
cmp
lcall
lret
adc
fs
arpl
fists
xchg
inc
xchg
sub
jne
daa
jecxz
push
es
cld
mov
xor
xchg
push
leave
out
push
xor
pop
jmp
xchg
adc
fadd
mov
xor
movl
cmpsl
bsf
fisubs
lock
adc
xor
pop
and
mov
sti
sbb
int
pop
in
mov
lahf
pop
test
ja
jmp
fdivrl
jg
mov
ret
xor
leave
mov
pushf
mov
repz
and
and
add
xor
or
jge
lret
jge
lea
xchg
inc
inc
mov
jmp
arpl
mov
jl
sarl
stos
xor
push
sub
fildl
std
adc
inc
add
rorb
sarb
push
and
and
fistps
cmpsb
out
push
push
sub
mov
mov
mov
and
testb
xchg
push
sbbl
xchg
xor
pop
inc
scas
adc
int3
jae
jnp
add
sbb
pop
mov
inc
mov
popa
sub
ss
cmp
repnz
push
je
sub
xchg
mov
cmc
push
test
mov
pop
add
and
sahf
int3
xor
pop
aam
xchg
mov
pop
fstpl
push
fstps
mov
imul
pusha
insb
or
stos
mov
xchg
out
push
mov
push
jl
test
movsl
jl
mov
leave
adc
loope
daa
lea
jbe
push
je
or
jns
repnz
cwtl
into
lahf
cmpsb
rcrl
jg
adc
inc
test
jo
push
dec
das
dec
sub
jmp
leave
mov
adc
in
das
int3
adc
xchg
xor
cli
sahf
out
and
js
pop
mov
mov
in
jb
addb
or
pushf
sub
xchg
std
or
adc
push
inc
gs
lods
pop
test
in
inc
sarl
lcall
cmc
mov
xchg
add
xor
cmc
sbb
pop
cmp
mov
mov
out
push
add
loopne
das
mov
js
mov
jno
push
popf
mov
in
xchg
xchg
xorb
or
and
lcall
in
add
xor
mov
cmpsb
jle
addr16
repnz
and
stc
mov
leave
sbb
movsl
and
stos
outsb
insb
fnstcw
outsb
inc
sub
cmp
dec
adc
adc
popl
fcomi
cmp
in
js
push
cmpsl
incb
push
xchg
inc
xor
gs
add
and
or
test
inc
xchg
add
call
push
inc
shll
ret
stos
imul
pop
fwait
sub
in
mov
and
subb
mov
sub
mov
fcoml
fsubs
and
adc
in
adc
mov
std
push
decl
fwait
stc
and
int3
ltr
mov
sub
lds
or
outsl
fcomp
scas
sbb
mov
sbb
or
lds
adc
sbb
push
xchg
sub
sub
jmp
xchg
or
mov
out
xlat
lods
cmp
or
sarb
mov
out
cltd
les
pop
fcomps
cld
sub
shrb
mov
pop
testb
mov
addb
mov
jge
rcrl
and
dec
fdivrs
inc
adc
dec
cltd
jle
fisttpl
rclb
xchg
mov
or
mov
jns
aas
xchg
out
cmpsl
cwtl
push
jl
daa
lds
andl
aaa
popf
daa
xchg
fmul
adc
cltd
daa
add
mov
mov
fnstcw
clc
jl
mov
fidivrl
and
js
pop
xor
mov
stc
lahf
sub
xchg
aad
xchg
or
mov
pop
sub
jae
jns
cmp
xorb
sub
jne
repnz
ret
xor
or
pop
lods
div
les
popf
inc
cmp
ds
pop
stos
sbb
cld
subl
pop
test
jns
shl
lods
icebp
mov
mov
imul
pop
call
fucom
jge
sub
add
shll
jp
sub
xor
lock
xor
pushf
leave
xchg
xchg
hlt
std
fstpl
xchg
ffree
add
mov
fistps
lods
popf
adc
dec
push
mov
sub
das
rol
mov
xor
iret
leave
pop
xchg
mov
outsb
out
cmp
cmpsl
bound
dec
sbb
es
push
adc
cmpsb
jo
dec
mov
mov
ficomps
fstp
in
mov
ss
and
fmul
aaa
lret
add
outsb
fbld
cmp
test
fwait
lods
imul
dec
iret
enter
or
bound
sub
cs
or
dec
stos
leave
mov
cmpsl
and
aad
and
and
mov
es
sub
xor
call
pop
ret
lret
xlat
and
movsb
push
cmp
js
xchg
add
inc
hlt
icebp
jns
mov
aaa
cwtl
jbe
mov
push
aas
sbb
stos
in
lods
fsubp
popa
add
out
and
cltd
adc
in
fimuls
movsb
cwtl
cmp
leave
mov
cmc
and
into
push
stc
mov
dec
movsl
mov
popf
jmp
pop
xchg
sbb
dec
jno
and
pushf
cmpsl
push
pop
and
cmc
imul
lods
add
mov
in
pop
mov
std
dec
in
or
fistpll
push
xlat
mov
popa
lcall
inc
adc
fcmovnu
xchg
lahf
insb
xor
rcrl
push
sbb
repnz
imul
addr16
cmc
ret
cwtl
mov
and
sahf
pop
adc
addb
popf
pop
bound
outsl
pop
jo
add
mov
jo
fs
adc
movsb
je
lods
ficoms
mov
or
outsb
mov
andb
xchg
lcall
dec
mov
sub
roll
shrb
jnp
push
out
pop
mov
xor
int
sbb
jbe
xor
aas
ret
mov
imul
pop
popa
push
cmp
cmp
ret
inc
sub
jmp
jl
and
jno
outsl
xor
and
out
lahf
xchg
lret
xchg
es
mov
inc
outsl
lret
xor
push
insl
jl
sbbl
clc
mov
fdivrs
jmp
xchg
enter
mov
fistl
pop
jmp
mov
popf
inc
xchg
and
icebp
paddw
xorl
lret
int3
jbe
ret
ret
and
xchg
ret
xorb
inc
repz
dec
test
mov
mov
roll
loopne
inc
inc
sub
scas
xchg
jnp
sahf
shl
jb
and
xchg
mov
push
add
mov
cs
ja
mov
xchg
pop
inc
cmp
mov
push
loope
lods
cmc
cmpb
jb
pop
in
xlat
mov
mov
dec
adc
push
pop
mov
pop
sub
xlat
lret
iret
dec
sub
aaa
lretw
inc
dec
ror
mov
mov
mov
in
and
popa
cli
cs
ficomps
push
mov
mov
dec
sahf
andb
pop
ret
pop
cmp
test
shrb
nop
fadds
movsl
fsubrl
popf
inc
nop
adc
lea
mov
jp
loope
cmp
xchg
or
dec
xchg
xchg
inc
mov
jl
ja
sub
add
xor
adc
jmp
xor
cmp
jbe
xchg
push
inc
add
repz
and
lret
xor
xlat
ret
inc
pop
xlat
fcoms
pop
test
xor
sti
pop
pop
pop
adc
sub
dec
and
cmpsl
push
iret
in
icebp
pop
pusha
xor
lods
call
and
xor
addr16
sbb
loopne
adc
mov
push
inc
int3
and
and
aas
gs
cli
ss
mov
rolb
mov
push
xor
aas
cmpb
sub
dec
pusha
les
lea
xchg
sub
test
push
mov
mov
ds
adc
jle
popa
mov
test
loopne
jmp
adc
roll
or
pop
je
adc
cmp
inc
cmp
orl
faddl
adc
pop
mov
insb
mov
mov
jo
push
pop
pop
out
sub
sbb
cmp
test
hlt
aad
mov
mov
xor
push
or
scas
loopne
mov
mov
mov
pop
mov
sub
fsubs
jo
test
test
mov
adc
adc
cmp
xor
and
xchg
mov
icebp
inc
nop
inc
adc
xor
pop
jae
ret
mov
ss
mov
sub
mov
xchg
pop
fstpl
xor
mov
bswap
pusha
jle
mov
fwait
add
cmp
dec
or
fst
dec
imul
sub
js
and
dec
inc
cmp
pop
aam
xchg
mov
push
or
dec
sarl
in
xchg
aaa
xor
sbb
divb
push
repnz
orb
adc
cmp
hlt
pop
out
ss
jmp
mov
rcll
mov
xchg
and
stos
pusha
gs
test
mov
sbb
mov
dec
rclb
insb
fwait
xor
orl
movsb
loope
pusha
imulb
dec
or
in
sbb
cmp
cs
jp
or
add
push
mov
ljmp
cld
sbb
push
xchg
fwait
xor
data16
push
push
inc
leave
fbld
adc
icebp
push
inc
xchg
out
ja
sahf
icebp
fstl
test
cwtl
addr16
push
inc
adc
pop
cld
push
enter
inc
cli
cmp
push
leave
sub
ja
pop
mov
push
in
inc
loopne
pusha
daa
nop
sbb
jb
ljmp
lds
in
add
stos
adc
jp
mov
push
xor
cltd
mov
ds
mov
mov
pusha
daa
mov
sti
clc
cltd
cmp
mov
or
lahf
jge
cmpb
hlt
or
mov
lret
or
arpl
dec
mov
inc
in
insb
roll
cli
cli
dec
sub
lret
lds
or
push
popa
bound
xchg
fisubrl
push
sub
mov
push
fdivs
mov
pop
or
mov
jno
shrl
cmpsl
sub
pop
push
int3
sbb
fadds
in
mov
xlat
outsb
dec
push
inc
into
dec
pop
mov
movsb
fstl
sahf
sub
or
lahf
jle
lock
or
cmpsl
or
xchg
pop
pop
aaa
loope
add
jl
cmp
xlat
mov
das
jg
test
dec
loope
xor
pop
movsl
inc
cmp
jge
insb
mov
or
or
test
push
inc
hlt
andl
mov
mov
sbbl
cmp
pop
cld
stos
xchg
sub
xor
lret
or
divl
jbe
mov
sbb
cmp
hlt
out
in
fcmovnb
jns
adc
add
xlat
popa
cltd
into
in
fwait
mov
adc
mov
fs
sub
mov
cmp
xchg
aam
fs
mov
cmp
cs
sub
mov
fwait
out
lock
aad
mov
xchg
cld
push
jl
sub
pop
in
ror
fcomps
ficoml
xchg
stos
or
xchg
pop
sahf
push
sbb
loope
or
jg
xor
and
jge
in
push
into
das
cmp
loop
push
aad
loopne
addr16
dec
xchg
xchg
push
push
xchg
push
sbb
jae
aaa
leave
test
ret
mov
pusha
mov
mov
pop
sar
jb
call
sbb
sbb
ficoml
sar
push
add
pop
push
ret
jp
mov
inc
ss
popa
add
push
or
sbb
xchg
negb
nop
mov
jmp
rolb
test
cmpsb
cmc
pop
scas
repnz
cltd
imul
mov
aaa
push
jbe
adc
push
arpl
mov
into
dec
iret
push
fcmove
cmp
mov
in
mov
dec
mov
push
xor
insl
stos
fisubl
out
test
jb
adc
decb
repnz
lods
das
lock
pop
jbe
mov
call
sub
pusha
ja
and
lgs
arpl
adc
mov
sbbl
pop
rorl
sahf
pop
repz
sub
cmpsb
pop
xlat
cld
sbbb
dec
or
repnz
xchg
xchg
adc
or
or
mov
aas
jge
fwait
xchg
ret
test
jp
cmp
loope
mov
mov
mov
push
in
insl
shr
inc
fidivs
xchg
cmp
xchg
clc
pop
ljmp
fs
add
iret
pushf
cmp
lahf
insb
daa
pop
pop
aas
xor
or
nop
pop
sbb
sarb
insb
sbb
pop
mov
scas
movsb
pop
popa
mov
push
mov
lcall
xchg
mov
jecxz
mov
sbbl
outsb
or
popf
sti
or
mov
js
or
enter
test
and
lods
jo
xchg
cmp
lret
pop
add
aam
dec
sub
mov
sbb
and
test
pop
mov
loope
frstor
inc
fwait
push
inc
xchg
js
loop
jge
mov
push
add
inc
or
cmc
inc
mov
rcr
pushf
sub
outsb
in
cmp
mov
clc
mov
enter
sti
das
xchg
js
and
xchg
imul
sbbb
inc
or
or
cmc
stos
sub
or
jecxz
jle
pop
imul
hlt
lcall
push
out
jbe
cmc
push
mov
adc
movsb
pslld
popf
pushf
pop
negl
push
popa
pop
xchg
inc
stos
shrb
xor
sbb
je
lcall
mov
fucomip
insb
mov
loope
outsb
loop
push
pop
mov
fwait
xlat
mov
mov
loop
in
dec
std
icebp
xchg
les
ss
fucomp
cld
call
sub
xor
lcall
mov
adc
adc
test
and
dec
bound
jmp
popf
out
xchg
xor
int
ja
movb
cwtl
std
fiadds
mov
out
addr16
and
pop
cmpsb
push
inc
repnz
pop
and
jle
sbb
sub
jge
fs
and
or
addr16
jg
xor
or
sbb
push
lock
rcll
jo
cmp
mov
ds
xchg
pusha
pop
ss
movsl
push
data16
scas
pop
sbb
xor
js
sbb
push
in
fs
in
lds
add
aad
mov
popa
lock
jp
addr16
mov
xor
adc
mov
out
int3
xchg
mov
or
aad
outsl
pop
ljmp
lds
std
dec
xchg
in
test
outsl
sub
sub
jecxz
aaa
mov
push
shlb
mov
movsb
mov
js
jns
lea
lods
and
jne
ja
lds
and
fsub
mov
pop
ret
iret
dec
je
xchg
or
out
xchg
dec
clc
add
push
push
shlb
or
pop
jge
cli
into
inc
mov
cmp
popf
sbbb
lret
int3
adc
sbb
addr16
adc
push
jb
ror
add
imul
jp
add
ret
out
xchg
jb
xchg
pop
fstp
mov
sbb
sub
ja
leave
enter
in
fwait
xchg
repz
mov
pop
popa
mov
outsl
inc
lods
pop
insl
gs
lods
or
jle
stos
out
xchg
or
cmc
and
loop
lret
mov
mov
inc
outsl
dec
scas
outsb
and
in
adc
loope
mov
mov
popa
iret
xor
xchg
sub
mov
test
push
mov
repnz
push
jmp
out
add
jo
dec
pop
adc
stos
es
mov
lcall
or
js
fs
mov
adc
sub
push
sar
add
loope
inc
or
call
loopne
pop
push
mov
and
pop
icebp
cmp
mov
int3
add
mov
nop
inc
lods
call
js
jmp
lahf
mov
pop
jg
jno
repz
addr16
movsb
test
xchg
mov
adc
loope
je
jns
inc
sti
jno
pop
mov
aaa
jle
xor
stos
mov
es
xchg
sar
mov
pop
push
inc
test
sahf
jmp
cmp
loope
test
cltd
xchg
pop
jno
stc
scas
inc
adcl
sbb
sbb
aas
in
sbb
inc
ret
pusha
pop
sbb
enter
push
je
movsl
test
inc
cmp
scas
pop
inc
outsl
xor
lock
mov
test
into
or
and
or
bnd
xchg
push
loop
insl
jmp
lods
icebp
pop
dec
xchg
insb
pop
add
scas
mov
jecxz
in
jne
das
jae
sub
jno
sbbb
jne
ljmp
mov
mov
sub
int
jne
insl
cs
insl
add
ffree
mov
pop
mov
idiv
repnz
in
pop
xchg
psubsw
push
push
push
jo
insb
icebp
sbb
cmp
sub
out
lcall
dec
fmuls
fdecstp
cmpsb
lea
stc
add
fimuls
dec
pushf
mov
mov
scas
incb
ljmp
mov
jae
outsb
cwtl
mov
inc
repz
inc
fstpl
push
jl
into
popa
mov
insb
mov
sbb
mov
into
leave
jb
inc
dec
rclb
lret
ficoml
cmp
out
mov
jb
outsl
lret
iret
or
sub
jl
push
lods
lcall
mov
xorl
fstpt
movsl
imul
mov
repnz
ss
out
xchg
scas
rolb
fwait
pop
xchg
bound
dec
aaa
mov
addr16
xchg
cmp
stos
mov
xchg
dec
dec
in
adc
pop
stc
or
inc
lea
loope
popa
jp
fdivrs
jo
xchg
in
xchg
ret
push
lret
cmpsl
jle
mov
lahf
and
jbe
cmp
mov
mov
sbb
loope
or
jb
aaa
mov
add
lods
lret
jl
inc
pop
les
push
les
mov
lcall
xchg
mov
shll
adc
mov
jmp
cmp
test
xor
add
aaa
fwait
cmp
dec
roll
pusha
in
push
jbe
inc
jg
inc
inc
mov
imul
mov
loop
in
ds
push
pop
mov
xor
adc
icebp
mov
jbe
lock
mov
mov
mov
jp
into
fsts
lcall
and
popa
add
into
std
pop
pop
jbe
xchg
enter
pop
cmpsl
inc
mov
in
pushf
adc
push
les
stos
push
out
xchg
inc
cltd
insb
popa
fs
ds
jbe
jnp
out
cmp
nop
sti
mov
or
jne
jae
faddl
pop
test
repnz
push
stc
into
or
or
lods
inc
push
dec
mov
jns
pop
cmp
lods
rclb
mov
mov
inc
aad
das
or
mov
negb
sbb
in
int3
inc
mov
inc
xchg
mov
dec
mov
cmc
gs
jo
jl
or
outsl
out
test
pop
je
pop
sbb
cmc
pop
xor
loope
mov
add
dec
loop
inc
sbb
push
jl
outsb
shll
aas
es
fldt
pushf
test
and
pop
shll
dec
cmp
mov
adc
push
mov
je
cmpb
jmp
dec
out
xchg
push
cld
and
ficompl
ret
or
fwait
pop
push
jbe
test
push
testl
cmp
in
mov
insl
adcb
mov
ret
fnsave
push
scas
ret
outsb
divl
add
dec
xchg
call
dec
inc
jl
hlt
rorl
add
scas
pop
pushf
int
in
loopne
push
mov
adc
xor
icebp
mov
into
push
ret
push
push
loop
sti
jo
icebp
push
jecxz
ret
aaa
xchg
sbb
jnp
cmp
outsl
xorb
jae
scas
pushf
sub
dec
mov
icebp
div
fcoms
sbb
shll
xchg
sbb
jns
pop
aaa
test
je
or
push
sti
es
adcl
mov
fisubs
pop
scas
ss
jno
mov
ljmp
call
out
arpl
repnz
ljmp
lcall
or
lock
xor
pop
push
adc
fs
mov
push
mov
push
inc
flds
ljmp
in
ror
fidivs
dec
popa
inc
jmp
mov
adcl
mov
mov
int
or
dec
inc
mov
add
cmp
xchg
es
pop
xor
out
jp
imul
dec
idivb
xor
dec
sub
jle
add
jg
adc
sbb
adc
mov
push
add
mov
jle
cmp
and
cmpsb
repz
adc
mov
xchg
jnp
jns
push
ret
stos
add
pop
pop
pop
es
out
fwait
daa
int
jecxz
int3
jmp
ret
push
std
sub
lret
into
insl
cmpsl
mov
xchg
rorl
leave
stc
pop
xchg
pop
sahf
std
imul
cltd
movsl
test
xor
push
lods
sbb
fistl
add
sbb
cmpsl
pop
stos
ja
popa
ds
mov
and
call
shrl
dec
jl
xchg
iret
loop
or
xor
mov
cltd
jmp
jle
lea
pop
xchg
lock
adc
mov
cltd
xor
mov
mov
lods
mov
fistpll
outsb
cmp
fucomp
in
jae
push
movsl
sub
imul
pop
shll
int
mov
add
les
lods
dec
stos
imul
bound
xchg
push
in
jl
adc
iret
add
sub
dec
push
sub
cltd
lcall
addl
or
inc
repnz
insl
and
pop
in
insl
cmp
adc
in
push
sbb
adc
mov
sbb
scas
push
jae
repz
je
scas
lret
loopne
fcmove
imul
popa
leave
mov
divb
mov
shll
fs
in
mull
jb
push
fadds
xchg
ja
dec
mov
xor
mov
push
subb
adc
decb
xchg
and
cmp
pop
stc
in
adc
in
cmp
jnp
pop
rcr
push
test
sbb
popa
mov
hlt
orb
xor
jo
dec
or
movb
mov
dec
adc
in
icebp
jbe
sbb
and
mov
dec
int3
cmp
mov
fsubrs
xlat
add
inc
mov
cs
xchg
pop
pop
dec
lret
inc
hlt
sub
sub
xchg
xor
les
adc
and
and
mov
fisttpl
push
xor
pop
int
inc
pop
pop
mov
mov
out
xor
adc
sub
cmc
daa
test
lahf
mov
popa
xchg
leave
mov
repnz
xchg
pop
mov
fwait
xchg
lahf
xlat
aad
dec
add
ss
jecxz
cmp
stos
mov
shrb
cmc
lcall
arpl
inc
sub
add
call
inc
xorb
test
or
dec
lcall
xchg
sbb
xchg
std
icebp
jns
test
lds
push
adc
mov
int3
loopne
cmp
mov
cmc
jp
and
pushl
mov
fsubrp
or
mov
rclb
cld
repnz
push
mov
sub
inc
pop
push
shll
sbb
lret
dec
das
cmp
test
mov
xchg
mov
xor
dec
xor
ljmp
mov
cs
jecxz
pusha
lret
es
loopne
adc
push
repnz
inc
push
lret
clc
xor
fbld
sbb
push
ja
cmp
fdivp
and
adc
jnp
add
push
mov
mov
ret
jle
in
repz
in
mov
adc
pop
mov
jmp
lret
push
dec
mov
sbb
lret
jl
sub
loope
xchg
call
cmpsl
sbb
sahf
dec
mov
xlat
push
sub
xor
inc
aam
pop
pop
jp
mov
test
xchg
sbb
mov
pop
dec
stc
pop
push
fwait
jge
jo
fnstsw
adc
add
lret
arpl
pop
jp
sub
or
xor
dec
mov
cmp
push
jg
mov
js
xchg
mov
xchg
pop
cwtl
idivl
or
xor
xchg
test
inc
sti
pushf
adc
lods
loope
and
xor
push
std
jge
mov
and
pop
cmc
mov
mov
inc
movsl
xchg
fisubrl
stc
adc
cs
inc
pushf
movl
bound
xor
rcr
roll
or
adc
pushf
dec
loopne
mov
aaa
mov
inc
repnz
sub
les
pop
sbb
leave
mov
dec
outsl
dec
cmpsl
add
mov
sahf
in
inc
xor
cltd
push
sub
test
out
or
or
inc
jbe
jmp
pop
push
xchg
cmp
jg
aas
cld
dec
mov
lods
das
test
cwtl
add
jns
inc
lret
mov
cmp
aam
lock
xchg
or
sarl
push
jecxz
pop
mov
add
mov
shl
in
test
jle
clc
cmp
push
jb
cmc
lea
test
idivb
add
test
mov
sbb
in
cmpb
xor
mov
clc
mov
adc
popa
lods
xor
adc
adcb
test
imul
push
xlat
outsb
or
or
inc
js
dec
dec
jb
insb
rorl
sar
jle
mov
and
inc
fcompl
xchg
call
jg
imul
push
ja
inc
loope
xor
adc
testl
js
sti
int3
sub
adc
sar
repnz
adc
sbb
test
pop
pop
adcl
xchg
ljmp
pop
dec
test
in
mov
sbb
or
jae
xor
xor
jmp
js
mov
and
push
imul
out
clc
icebp
pop
imul
gs
js
pop
add
sub
mov
out
sub
fisubl
fists
mov
out
ja
fldenv
jg
pop
cmpsl
fs
lcall
push
out
popf
fsubl
addr16
inc
pop
pop
int3
jp
std
xchg
cwtl
popa
xchg
cmp
mov
aam
subb
adc
cmp
sub
rcl
jae
mov
ror
cmp
and
mov
bound
jae
and
push
sub
mov
sub
cmp
cmp
pop
ja
jl
jge
xchg
push
add
lods
cmpsb
adc
cltd
loopne
xchg
sub
nop
adcl
ljmp
sahf
insb
adc
sbb
fs
js
fstps
popa
adc
xchg
ds
mov
cmpsb
xchg
pusha
xor
out
fsubrl
add
push
sbb
push
hlt
fmuls
lahf
push
iret
lahf
std
mov
push
adc
dec
ds
jno
xchg
pop
push
lahf
sahf
or
test
pop
xchg
add
jns
ret
cmp
test
adc
les
sub
mov
cmp
dec
sub
stos
xchg
aas
or
or
sbbl
mov
cltd
add
and
adc
lea
jge
dec
mov
jno
inc
mov
mov
mov
icebp
add
insb
call
sti
add
push
scas
fistl
xor
pop
inc
mov
daa
inc
jge
decb
xchg
sub
mov
sbb
popa
loop
std
movsb
cmp
adc
or
pop
fcmovnb
je
repz
and
push
test
xor
xchg
xchg
mov
movsb
dec
mov
mov
int3
das
pop
nop
xor
lea
add
xchg
movsb
pop
pop
sub
xchg
or
leave
popa
imul
sahf
pop
sub
je
frstor
cmpsb
sarl
aas
push
xchg
mov
mov
lods
mov
int
mov
push
bnd
and
adc
pop
push
push
cmp
cmpb
lret
and
sbb
scas
insb
call
inc
push
jnp
enter
pop
mov
cld
bound
int
jge
repz
pop
or
jg
sub
pusha
das
daa
mov
mov
mov
cmp
lea
pusha
inc
insl
mov
test
jae
pop
or
push
inc
iret
push
xchg
enter
popa
sbb
xchg
and
imul
cli
lds
add
push
mov
mov
jns
sahf
js
pop
push
das
push
popf
adc
shl
popa
cmp
call
inc
bound
sbb
sub
scas
push
add
loope
push
js
inc
lret
test
loopne
or
mov
lret
mov
xor
xor
inc
cmpl
jae
pop
mov
xchg
mov
lret
scas
mov
fiaddl
and
lods
mov
mov
xchg
repnz
adc
jns
int
inc
ja
cltd
sbb
sub
sub
and
daa
sbb
jnp
push
ja
icebp
xchg
xor
mov
fs
cmp
movups
adc
into
add
jae
xor
je
sti
mov
rcrl
xor
loopne
or
call
xchg
adcl
sub
inc
push
rorl
adc
jmp
in
mov
xor
dec
test
mov
fwait
and
or
cmpsb
add
lods
mov
jo
repz
fisubl
cmp
enter
outsl
je
sub
adc
push
xchg
pop
jo
sarb
xor
xchg
push
push
repnz
popa
mov
int
mov
out
std
cltd
daa
cwtl
rcrb
add
ljmp
xor
dec
adc
pop
xchg
xchg
jl
push
in
aaa
movups
clc
idivb
push
sub
std
fcoml
rcrb
push
std
nop
scas
addr16
xchg
mov
insl
push
cmpsb
ss
loope
repz
fidivs
mov
imul
scas
notl
sbb
adc
add
xchg
mov
cmp
push
push
dec
das
inc
jle
xor
pop
popf
call
in
mov
icebp
push
mov
jp
sbb
loop
mov
pop
iret
mov
in
and
mov
and
xchg
mov
lret
fst
lods
add
add
leave
jb
imul
push
stos
mov
mov
jp
dec
jmp
cmc
jns
xchg
mov
dec
jae
das
pusha
push
add
idivl
int3
popa
xlat
fcomi
mov
jno
jno
sti
sbb
xor
fmull
popf
lea
fdivp
pop
adc
dec
or
repz
mov
xor
imul
lahf
sub
cltd
sbb
xchg
jns
test
inc
call
push
in
movsb
repnz
lahf
fnstenv
cmpsl
test
stc
jno
loope
test
aad
mov
in
cmp
pop
jp
mov
lahf
or
scas
rol
clc
mov
je
rolb
mov
cmpsl
cmp
inc
xor
leave
ja
push
mov
ja
imul
cmp
jno
mov
jp
and
cld
pusha
dec
or
add
fucomp
xchg
xorl
test
xchg
mov
add
movsl
testb
movsl
ds
in
subb
mov
add
inc
pop
andb
outsl
or
sub
mov
lock
dec
call
jecxz
pop
daa
inc
mov
mov
mov
aad
jne
mov
lock
adc
pop
cld
adc
aad
sahf
imul
and
popf
ds
aaa
cmp
xor
push
into
inc
dec
mov
cmp
sub
mov
in
jg
loope
ret
xchg
sub
stos
cmp
mov
sti
pusha
fstps
pop
mov
and
ja
cld
push
mov
daa
push
or
add
in
pusha
sbb
pop
rcr
jne
insl
lea
sub
in
cmp
fcoms
repz
ret
pop
jbe
mov
shll
repz
pop
divl
sbb
mov
mov
sbbl
addr16
mov
cmp
loope
push
mov
je
pop
push
prefetcht1
pop
mov
and
stos
push
adc
movsb
pop
stos
stc
lods
lock
ds
ret
mov
bound
inc
jmp
push
xchg
lahf
add
loope
and
xlat
cmp
xchg
or
mov
shrl
lock
mov
movsl
dec
jno
pop
adc
sbb
push
push
dec
and
pop
out
stos
xor
cltd
leave
or
mov
shr
mov
rolw
icebp
jmp
int
cld
adc
jno
jns
imul
fisubrl
fadd
jecxz
pop
push
ss
add
movsl
data16
aad
les
lea
out
pop
shl
xchg
sbb
mov
jg
leave
push
icebp
mov
insb
xchg
push
iret
das
jno
imull
dec
sbb
andl
inc
lock
fwait
and
xchg
dec
jne
aad
dec
movsl
icebp
hlt
pop
and
ljmp
fnstcw
stos
adc
push
orb
xchg
pop
and
xor
sahf
cltd
les
stc
mov
bound
insl
daa
dec
lret
mov
sbb
test
test
sbb
testb
push
jle
js
pop
adc
xor
pop
loopne
rclb
divl
rep
xor
pusha
fcmovu
pop
cmpb
or
pop
inc
sbb
in
push
pop
and
pop
xor
rorl
mov
stos
cmpsl
cld
add
mov
cmpsl
pop
pop
add
and
pushl
daa
sbb
xor
cmpsl
std
xchg
xchg
mov
mov
sbbl
jmp
pop
lods
dec
shrb
popa
stos
cmp
cmp
sub
xorb
jnp
shl
rol
and
mov
mov
adc
xchg
push
mov
loope
stos
dec
lret
repz
sub
je
xor
sbb
jno
divb
mov
mov
dec
cmpsb
add
aas
adc
cwtl
cld
ds
push
and
andl
sbb
loope
ds
push
and
xchg
iret
inc
add
mov
mov
cmpsb
or
xchg
and
push
mov
pop
jne
data16
and
in
aam
ret
idivb
mov
daa
pushf
fcompl
je
aas
lods
and
adc
popf
cmpsl
inc
push
out
jmp
outsb
dec
cmp
xchg
and
dec
ret
or
out
and
iret
aam
mov
js
iret
shrb
data16
notl
xchg
aam
cli
mov
shrb
or
test
inc
pop
and
mov
sub
ljmp
add
xor
roll
out
and
idivb
jae
mov
andl
push
scas
pop
adc
hlt
sub
pop
shll
pop
int3
out
hlt
in
cmpsb
mov
mov
cmp
or
shr
sub
mov
ret
cmpl
movsb
pushf
and
sub
scas
add
lods
xchg
call
push
xchg
cli
jo
dec
and
hlt
add
push
mov
jecxz
fnstenv
xor
imul
push
mov
jae
mov
jle
test
jns
mov
dec
push
in
push
push
jg
movsl
mov
out
dec
adc
dec
sar
xchg
and
cmpsb
pop
or
out
scas
mull
or
outsl
jbe
orb
out
cmc
mov
fimull
movsb
push
lock
mov
scas
mov
adc
pop
xor
out
xchg
pop
cmp
ret
pop
xchg
in
imul
clc
adc
push
xchg
mov
xor
xchg
add
imul
sub
insl
inc
pop
pop
nop
inc
shlb
mov
fiadds
scas
or
call
or
inc
xor
aam
call
dec
data16
ficomps
fcoms
out
jmp
aam
mov
daa
ret
mov
xor
out
cmpsl
mov
cmp
lcall
inc
dec
mov
add
cmp
roll
or
shlb
pop
loopne
pop
flds
jb
mov
leave
push
repz
leave
mov
inc
inc
gs
and
jl
in
or
pop
out
pop
gs
repz
jmp
lock
jno
stos
cs
cmp
fimuls
inc
ret
shl
stc
jecxz
add
aam
xor
lods
inc
fwait
cltd
add
rorb
int3
insb
out
fnsave
mov
fadds
push
sahf
iret
mov
jae
aam
sbb
je
sub
movsl
test
jmp
sub
hlt
or
push
iret
lret
pop
or
cld
das
push
mov
pushf
scas
cs
sti
sbb
inc
fnsetpm(287
testl
jecxz
sub
lds
je
xlat
dec
pmaxub
js
mov
aad
stos
mov
jne
mov
xchg
mov
push
test
and
dec
and
push
clc
add
ret
add
mov
daa
cs
push
sub
inc
jp
test
jg
insb
outsb
lods
dec
aad
mov
mov
dec
xchg
rcl
rcll
pop
insb
fadds
iret
adc
add
aas
ljmp
rolb
cwtl
daa
cmp
mov
inc
push
nop
pop
repz
scas
sti
lret
aam
iret
push
cmc
into
cmp
jge
cmpsb
jnp
mov
cmp
neg
mov
xor
add
bound
shl
lds
cmp
push
ljmp
mov
cmpl
fwait
mov
clc
push
pop
mov
les
cmpsl
dec
jnp
fsub
push
fldt
push
push
stc
jns
or
fwait
cmp
inc
dec
sbb
xchg
repz
mov
mov
fcmovnb
std
xlat
cli
rcrl
add
inc
pop
mov
push
sub
les
and
jb
and
fs
mov
movsl
out
xchg
dec
xor
repz
divb
xor
pop
add
lods
push
test
ds
test
sub
ss
push
lret
mov
jl
aas
cmpsl
or
push
or
cmp
shlb
leave
xchg
jle
fstl
movsb
cmp
mov
std
rorl
in
cmp
jo
pop
lods
mov
scas
or
mov
mov
rorl
js
addr16
jp
jns
ret
xlat
inc
sub
push
pop
out
into
iret
xchg
pop
pop
xor
mov
packuswb
clc
pop
mov
pop
xlat
push
fxch
in
push
pusha
fsubl
loope
notb
lds
and
adc
test
inc
lret
mov
outsl
popf
sbb
repnz
sub
adc
sahf
aaa
or
out
lahf
insb
cwtl
sub
shlb
in
loopne
sub
stc
les
je
lahf
push
sti
bound
xchg
fisttpll
inc
lcall
shrl
imul
std
insb
mov
scas
and
movsl
inc
and
das
es
dec
pop
test
imul
mulb
push
mov
sahf
ja
insl
hlt
dec
jecxz
sbb
test
lahf
pop
inc
inc
enter
lods
mov
test
pop
xor
loopne
repz
out
jmp
iret
cwtl
mov
loope
ret
or
mov
fdivrl
xor
cmp
ds
sbb
outsb
add
jo
dec
fisubrl
popf
add
add
xchg
xor
inc
adc
xor
xor
lcall
fisubrs
lods
pusha
add
mov
sbb
repz
cmp
out
fsub
and
lods
fsubl
loop
and
mov
data16
inc
stc
fidivrs
loop
filds
inc
dec
xchg
inc
pusha
test
pop
mov
mov
push
jns
inc
adc
test
adc
jecxz
nop
outsl
push
test
dec
ret
mov
shl
push
jne
inc
loop
xchg
dec
dec
test
fisubrl
xchg
lret
and
push
fsubp
ljmp
adc
cld
rcr
push
leave
shlb
bound
mov
jo
sarb
rclb
mov
pusha
pop
jl
cwtl
lods
mov
ficompl
xlat
repnz
lea
sub
dec
inc
in
test
jnp
cltd
ds
xor
dec
xorb
or
pushf
xchg
cli
fnsave
out
ret
cli
imul
or
pop
push
jg
and
and
popf
out
fidivrl
gs
fildl
ss
push
jmp
adc
dec
sub
rorl
test
adc
xlat
xor
stos
adc
inc
sub
shlb
in
repnz
pop
inc
cmp
jg
inc
or
movb
jge
jae
jbe
mov
lahf
test
mov
mov
aad
adc
movb
lods
pushf
mov
inc
and
or
fstpt
sub
into
mov
mov
sub
inc
push
add
pop
out
scas
xchg
inc
xor
pusha
mov
adc
inc
mov
xor
std
jecxz
add
jle
or
lret
or
jmp
jae
cwtl
inc
cmpsl
pop
js
dec
inc
adc
test
lods
cmc
daa
xchg
xchg
pop
fsubrs
add
adc
aad
pop
lods
adc
scas
popa
or
dec
orl
adc
adc
push
jecxz
imul
jno
hlt
jge
sbb
xor
int3
mov
in
sahf
test
sar
cs
pop
jmp
fistpll
mov
stos
mov
enter
imulb
call
iret
push
push
push
xlat
data16
notl
pop
jno
clc
and
mov
in
aaa
insl
mov
lea
lret
xor
pop
push
dec
lea
divb
pop
je
sbb
cmp
dec
aam
cmp
cmpsb
repnz
je
mov
inc
sub
pop
cmpsl
add
ds
mov
cmc
in
dec
pusha
pop
pop
pop
jo
inc
data16
sub
punpckldq
jo
and
cmp
scas
shl
rorl
sar
shrl
jnp
xchg
mov
negl
jmp
inc
sbb
jl
loopne
in
lret
xchg
xor
sbb
int
decb
test
cmp
inc
sbb
bound
mov
nop
rol
mov
adc
popa
aad
nop
cmpsl
and
sub
or
jo
and
fiaddl
cmp
or
dec
aaa
jo
les
push
mull
xchg
jae
repnz
or
jmp
test
sbb
sub
jbe
xor
lret
call
mov
lods
bound
cmp
loope
sarl
mov
nop
mov
xchg
cmp
dec
or
leave
cmpsl
bound
fldl
adc
xchg
lds
mov
add
std
shlb
aaa
jp
dec
dec
pop
pop
inc
out
push
push
ljmp
fwait
mov
pusha
xor
sbb
fistl
lods
jne
in
sub
add
sbb
mulb
mov
mov
sahf
sahf
shr
add
lods
xchg
and
stos
nop
push
push
loopne
in
inc
dec
loope
push
mov
divb
test
mov
nop
sub
mov
mov
cs
xchg
movsl
call
jp,pn
nop
sbb
xor
mov
push
add
jae
cwtl
dec
adc
inc
sbb
fldl
or
cmp
cmp
call
les
bound
pop
mov
dec
scas
adc
mov
xchg
ficoms
mov
adc
adcl
rcll
sub
hlt
orb
adc
jae
fsub
mov
into
sti
shrl
add
sbb
out
fistpll
fwait
xlat
pusha
insl
jg
lods
and
mov
mov
cmp
cmp
shrl
jmp
mov
outsb
push
pop
push
mov
and
bound
push
lea
sub
mov
jb
xchg
push
inc
nop
and
push
test
loopne
cld
in
cmp
insb
aas
enter
lea
cmp
cmpsl
out
insb
inc
insl
dec
sub
jl
xchg
jo
push
jl
aaa
xchg
cld
mov
xor
mov
jmp
xlat
cltd
dec
sbb
xor
fsubr
cmp
insl
push
test
aaa
inc
sarl
sbb
inc
push
and
daa
inc
je
imul
xchg
mov
mov
dec
xchg
fsub
enter
popf
xchg
mov
das
jp
ret
ret
fcmovb
sub
mov
lret
mov
shrb
mov
push
fwait
int
jo,pn
jb
inc
fwait
sub
inc
and
std
call
test
add
outsb
lds
subb
mov
and
les
jnp
push
shll
and
mov
push
lock
adc
lods
mov
xchg
cwtl
cmp
jbe
ljmp
add
xchg
or
mov
ljmp
lret
jmp
pop
pop
xlat
fimull
test
ror
insl
mov
mov
repz
xchg
sahf
xor
pusha
mov
mov
cltd
and
cmc
push
mov
daa
lret
xor
divl
cli
push
es
sarb
mov
outsl
loope
ret
lock
les
movsl
pop
aam
xchg
inc
and
mov
cltd
ret
sbb
mov
popa
rcrb
add
icebp
sahf
daa
jecxz
addr16
mov
jmp
ja
insb
push
rcr
dec
movsl
gs
fiadds
jmp
lcall
jb
xchg
stos
lods
mov
mov
sbb
mov
out
cli
imul
fcom
mov
jns
pop
scas
movsl
cld
ret
mov
xor
fwait
dec
adc
mov
jnp
ljmp
dec
sahf
adc
jp
aam
sbb
add
idivb
pop
test
int3
aas
movsb
data16
scas
cmp
ds
insb
cs
ss
mov
xchg
insb
lods
addr16
lock
shl
sbb
int3
call
xchg
mov
adc
bnd
insb
jno
adc
cld
and
insb
scas
mov
pushf
jle
stc
mov
xchg
roll
clc
jge
outsb
pusha
cmp
push
xor
ret
iret
xor
mov
jb
cltd
xlat
iret
jmp
push
iret
sbb
adc
cmp
fdivs
popa
inc
mov
xor
cmpsb
add
mov
rorl
push
outsl
push
inc
movsb
xlat
pushf
icebp
push
mov
jmp
xchg
mov
ret
cltd
fwait
or
mov
das
sbb
stos
cmp
mov
add
insb
sbb
and
push
rcll
pop
and
sar
popa
mov
adc
dec
cmpsb
scas
rcrl
lds
dec
loop
xchg
stos
xchg
push
adc
xlat
in
add
clc
jo
fildl
jle
sub
fucomi
mov
ja
pushl
repz
cmp
stos
fnstsw
cmpsl
cmp
in
add
stos
pop
inc
cmp
rol
mov
fwait
sbb
repnz
int
cmp
into
cmpsb
mov
lock
xbegin
xor
clc
aas
lds
iret
sarl
inc
adc
mov
mov
push
mov
sarb
mov
mov
push
push
jnp
sub
aam
divl
inc
frstor
shrl
push
xor
mov
sub
fisubrl
and
pop
xchg
sub
sbb
test
push
mov
sbb
test
or
rolb
iret
dec
loope
jnp
jle
outsl
addr16
outsl
aad
push
into
lret
adc
nop
int
pop
hlt
push
sub
movsb
int3
xlat
scas
out
test
sarb
inc
sahf
cmp
mov
adc
shrl
dec
icebp
mov
dec
inc
clc
mulb
pushf
xor
add
jecxz
lock
push
ret
or
pop
notl
jecxz
and
pop
mov
or
mov
pop
or
mov
out
and
sbb
adc
test
imull
cmp
and
jl
xchg
sbbb
mov
add
out
pop
jge
sub
movsl
sub
dec
sbb
mov
xchg
movsl
xor
mov
clc
xchg
repz
movsb
sub
sub
mov
les
or
mov
iret
adc
cwtl
dec
mov
cmp
or
adc
inc
mov
add
lret
lahf
sahf
cltd
loopne
popl
or
cs
pop
in
and
add
lock
jle
rcl
xchg
bound
sub
mov
pusha
cs
pop
loopne
push
mov
dec
ret
ds
arpl
imul
xchg
dec
mov
pop
shll
ljmp
es
pushf
imul
stos
leave
icebp
insb
inc
sahf
jmp
inc
adc
int
enter
ljmp
cmpsb
mov
inc
push
mov
addl
stos
sub
mov
xor
sbb
sbb
sub
pop
shll
sub
imul
fstps
repz
addr16
outsl
rclb
mov
or
sarb
jns
repz
mov
jmp
jnp
sbb
test
fidivl
push
adc
and
jp
std
roll
push
rclb
dec
xchg
pop
lock
scas
xchg
nop
outsb
aas
int
imul
jmp
and
in
popf
popa
inc
outsb
sbb
loopne
in
cmc
ljmp
hlt
movsb
pop
js
mov
sbbb
insl
jp
outsb
cmp
mov
test
sub
sarl
in
xchg
fs
addr16
pop
mov
or
add
aad
into
pop
iret
cwtl
pop
sbb
cwtl
fs
push
mov
push
xchg
loope
or
loope
and
cs
inc
sub
mov
icebp
jecxz
jp
jle
pop
les
mov
pop
loope
int3
mov
or
add
and
fmuls
add
and
icebp
popf
scas
int3
outsl
lds
or
push
movsb
or
cmc
fwait
stos
mov
sbb
loop
sarl
mov
jp
inc
inc
cmp
sub
dec
mov
dec
negl
dec
fstl
popf
or
clc
repz
push
idivw
sbbb
int3
and
insb
push
repz
jge
into
jecxz
xchg
xor
mov
aam
cmp
into
int3
ss
subb
fcoml
data16
sbb
or
jo
lret
inc
cmpsb
sbb
mov
fisttps
cmp
xchg
jecxz
cmpsl
jbe
testb
outsb
sahf
xor
cltd
lods
ds
pop
inc
add
setb
xlat
pop
mov
shrl
rolb
or
jmp
mov
rorw
out
mov
dec
xchg
push
inc
dec
push
shrl
mov
dec
jbe
adc
sub
jo
das
arpl
adc
mov
mov
fisubs
in
push
fisttpll
and
sub
loope
icebp
mov
and
pop
or
bound
jne
out
mov
int3
sub
push
pop
cmp
cwtl
pop
adcl
mov
addr16
fimull
mov
icebp
rcrb
pushf
mov
push
cmpsl
insb
nop
aas
mov
ret
cmp
mov
es
or
adc
loopne
rclb
pop
dec
in
aas
add
fcompl
aas
xchg
mov
mov
pop
cmp
or
pop
andl
mov
addl
std
mov
or
mov
add
lods
push
js
or
or
enter
lods
dec
xor
mov
repz
jns
xchg
jns
addl
enter
xchg
add
pop
xchg
out
imul
insb
sbb
shll
or
cmp
loopne
cmc
mov
stc
rorb
lret
dec
call
aaa
and
int
adc
push
repnz
push
push
into
test
aam
int3
repz
aaa
sub
test
scas
push
les
dec
sbb
aaa
movsb
pusha
int
bound
pop
inc
mov
cmp
sbb
aas
cmpsb
sbb
mov
adc
mov
sbb
ja
fnsave
jbe
adc
jmp
rorl
pop
inc
scas
add
mov
jmp
or
mov
enter
xchg
add
fbstp
adc
cltd
mov
sub
arpl
adc
scas
sbb
push
or
imul
push
pusha
cmp
inc
in
iret
mov
fcoml
mov
lock
rolb
add
or
dec
gs
icebp
imul
xchg
mov
in
push
dec
mov
out
es
xchg
adc
dec
push
adc
pop
ja
or
psubsb
leave
mov
sbb
sbb
inc
xor
mov
pop
pop
dec
sub
insb
lret
inc
xchg
std
add
ja
pop
push
mov
fisubrs
push
ret
add
mov
ja
xchg
push
fstl
mov
stos
rcll
imul
inc
adc
cmp
mov
pop
and
xor
jnp
add
dec
lock
sbb
roll
mov
mov
adc
jge
xchg
jns
xor
repz
in
jg
sbb
cmp
in
arpl
or
out
or
pop
js
popf
mov
or
push
xor
inc
mov
jge
push
jge
mov
xchg
adc
cmc
pop
push
pop
mov
mov
jo
cmp
mov
rcrw
les
into
jo
stos
bound
test
jge
adc
mov
jb
xchg
mov
add
xchg
popa
sub
lahf
mov
insl
cmp
arpl
mov
int3
in
scas
js
jp
adc
mov
jmp
and
xchg
add
pop
pop
mov
cmp
in
inc
movsb
in
in
add
fwait
mov
adc
add
data16
inc
imul
mov
imul
pop
je
and
fmuls
pop
dec
pop
adc
push
jb
imul
xchg
rcrl
sbb
jnp
data16
mov
in
mov
mov
iret
cwtl
fwait
sbb
push
movsl
aam
movsb
xor
adcb
add
popa
adc
push
cwtl
ret
xor
mov
aad
adc
mov
fnstcw
sub
dec
adc
inc
or
mov
inc
jno
cmp
ss
stos
dec
jp
int
xlat
dec
add
adcb
sub
fwait
out
shlb
mull
aas
cld
mov
int3
dec
ds
or
dec
mov
syscall
lret
arpl
and
pushf
push
dec
cmpsb
hlt
into
inc
xchg
or
cmpsb
jb
fstpl
lods
sbb
jecxz
adc
cld
add
jge
stos
rclb
add
bound
repz
and
inc
sbb
imul
mov
testb
xor
sub
or
sbb
ret
sub
cmpsl
popf
inc
and
pop
les
cmc
pop
call
mov
rorl
daa
decb
push
jl
mov
cld
pop
fmuls
test
inc
push
int3
cmpsb
test
mov
pop
inc
adc
dec
sbb
imul
sbb
les
or
xor
mov
mov
lret
xchg
shlb
das
imul
cwtl
mov
cmp
or
or
cmp
inc
mov
enter
int
outsl
idiv
ret
or
mov
ret
add
out
clc
daa
int
jbe
jmp
inc
lods
mov
andl
pushf
das
cmp
sbb
fcomps
addr16
push
rcr
ss
adc
fimull
push
or
cltd
rcll
fs
mov
enter
fdivs
std
lret
inc
enter
cmc
mov
loop
jmp
daa
pop
shrl
mov
cltd
pop
xor
and
mov
sarl
pop
push
test
ljmp
out
or
add
bound
mov
mov
arpl
xchg
inc
and
xor
popa
and
mov
jp
mov
pop
xchg
push
mov
dec
stos
dec
xchg
subb
or
and
mov
mov
add
pop
popf
pop
fistl
nop
jne
mov
add
push
sub
pop
inc
cmp
enter
jmp
imulb
cmp
mov
mov
ljmp
incl
push
dec
push
jl
sahf
push
jno
ss
pushf
pop
and
and
call
dec
jne
cmpsl
fidivrs
cmc
nopl
test
movsb
or
fwait
js
sti
outsl
sbb
adc
test
es
jmp
fdivs
leave
mov
test
push
pop
xchg
adc
out
cmc
je
pop
sub
jo
lods
pop
fmull
cwtl
movsl
pop
lds
loope
sub
addl
cwtl
gs
push
add
addr16
lret
stc
adc
repz
add
rcll
cmpsb
push
jb
cmc
outsl
mov
dec
scas
xchg
push
stos
adc
fwait
int3
xchg
pop
lret
mov
aam
aad
mov
test
mov
dec
mov
mov
out
lcall
cmp
and
dec
shll
sbb
sbb
push
jmp
mov
aas
sbb
stos
add
jmp
jp
cmp
inc
ss
jge
pop
xchg
jb
gs
es
dec
mov
popa
jp
fidivrl
nop
cmp
mov
ljmp
lret
sbb
adc
push
mov
dec
stos
add
movsb
mov
mov
stos
cld
dec
cltd
arpl
sbb
mov
and
into
push
or
pop
or
mov
mov
xchg
pop
adc
shl
fdiv
mov
add
dec
mov
hlt
pop
lea
cmp
push
cmpsl
cmp
js
stos
jae
mov
push
pop
into
add
xor
pop
loope
sub
orl
stos
sub
mov
hlt
jns
mov
jl
icebp
into
ficoms
jmp
xchg
movsl
mov
push
pop
movsl
stos
mov
int
push
mov
repnz
and
fcmove
adc
inc
mov
mov
push
jno
loop
sahf
push
popa
dec
les
xchg
xchg
mov
pop
data16
arpl
mov
inc
sbb
call
rolb
lahf
pop
lds
rclb
cld
sbb
cmp
xorl
push
sbb
stos
cld
sub
dec
mov
and
imul
sub
jno
sbb
fs
in
xor
xor
test
shrb
bound
out
test
push
xchg
mov
divl
sbb
mov
iret
iret
in
cmpsb
mov
push
stc
outsb
adc
fimuls
ficoml
test
or
cld
jb
adc
xchg
std
pop
mov
insl
push
push
mov
out
aaa
cmp
imul
pop
stos
mov
mov
xor
lock
aaa
aas
stc
xlat
cwtl
inc
jp
das
scas
icebp
seto
xchg
xchg
sbb
stc
push
into
mulb
sbb
adc
sbb
int3
scas
sahf
mov
push
in
fcoml
and
add
lret
fstps
add
jns
push
xchg
mov
or
dec
stos
movl
cmp
cmp
sub
add
xchg
sub
in
movsb
fsubs
pop
outsb
test
rcll
xor
jno
movsl
pop
ds
add
and
cmpsb
adc
cmp
std
fistpl
xchg
cmp
sub
add
sbb
mov
in
pop
mov
xor
add
adc
fwait
cmp
dec
mov
adc
push
or
std
pusha
je
stc
pushf
int
push
dec
jp
xor
fbld
lea
test
xor
inc
jg
dec
loop
mov
aam
push
pop
dec
mov
popa
test
jbe
pop
pop
fwait
lahf
xor
jmp
inc
add
mov
xor
inc
mov
pushf
dec
lahf
jne
add
mov
mov
inc
popf
scas
cwtl
cmp
sbb
cwtl
call
daa
aam
pop
cltd
insb
cmp
idiv
sti
fsubrl
setne
pop
xor
jnp
aad
xlat
inc
mov
flds
push
mov
adc
sahf
dec
mov
lahf
mov
mov
test
jl
out
or
pushf
ljmp
lret
cmc
mov
add
stos
xlat
or
inc
pusha
leave
movsb
dec
fnstsw
pop
dec
cmp
nop
adc
incl
mov
inc
ds
into
add
daa
mov
jmp
jo
push
fstl
sbb
or
jp
test
cmpsb
icebp
xchg
pop
loope
pusha
jb
pop
or
sbb
mov
xchg
repz
add
dec
lds
sbb
ror
and
xor
add
das
scas
cmc
cwtl
xor
dec
clc
adc
or
sub
adc
fs
pop
xchg
lret
sbb
call
cs
ja
push
pop
lcall
mov
cwtl
mov
mov
in
push
call
iret
jle
xchg
cmp
add
mov
fwait
sbb
fimull
push
and
into
int
push
add
es
xchg
or
xor
or
hlt
add
add
mov
loope
decl
xchg
je
fwait
sbb
mov
bound
add
or
push
jp
pop
cmc
in
dec
pusha
push
xchg
loopne
adcl
cmp
inc
and
lahf
imulb
mov
sub
cmc
mov
xchg
jp
ljmp
sub
addr16
stos
mov
cs
dec
test
dec
fadds
movsl
xchg
add
mov
and
ja
add
inc
fdivl
xchg
inc
lea
cmc
and
sti
sub
mov
sub
add
lcall
js
inc
sbb
test
push
pop
clc
inc
push
ja
jmp
loopne
push
loop
rcrl
and
mov
mov
and
xchg
aad
fwait
jl
imul
push
xchg
sub
imul
aam
mov
jecxz
add
sarb
ja
in
outsl
cmp
loopne
fldz
mov
rcrl
aaa
xchg
clc
insl
pop
je
sub
scas
lcall
dec
mov
divb
dec
repz
jle
sahf
cmp
mov
js
dec
sbb
jge
mov
pop
sub
sti
jmp
push
js
sbb
leave
mov
and
pop
pop
fbstp
cmc
outsl
call
cltd
sbb
add
or
and
push
mov
adc
dec
cmp
out
aad
rcl
cli
fs
ja
lock
mov
loopne
sub
jmp
test
test
out
push
xor
xor
sbb
stc
aad
xorl
dec
pusha
lds
inc
cmc
jge
sbb
les
fisubs
iret
repnz
pop
mov
js
lcall
mov
sbb
pop
and
repnz
js
in
insl
mov
push
jmp
fs
push
leave
push
or
mov
addr16
mov
loopne
cmp
out
jg
jecxz
xor
xchg
add
jp
nop
cmp
stos
cmpsl
cmp
int
fmulp
cmp
fcomps
cwtl
das
hlt
loopne
movsb
sbb
xchg
and
add
sbb
and
sub
addr16
inc
pop
mov
in
or
mov
jb
arpl
push
sub
adc
inc
push
and
mov
stos
sbb
mov
andb
sbbb
lea
and
push
jl
pop
cmc
movsl
mov
sbb
hlt
lea
ret
int3
in
lods
xchg
fs
xor
idivl
fisubs
adc
mov
xchg
mov
push
push
cld
enter
repz
xor
cmp
mov
aad
or
cmp
adc
aaa
fsubl
in
dec
sbb
mov
push
pop
pusha
sarb
int
sub
jecxz
dec
iret
ret
or
push
stc
push
dec
pop
or
pop
js
repnz
pop
outsb
scas
xor
loop
inc
or
movsl
pop
test
dec
xor
inc
outsl
andl
das
test
mov
adcb
addr16
iret
out
sbb
arpl
jmp
jb
cmp
mov
xor
dec
dec
in
das
pop
insb
mov
cmpsl
adc
loopne
add
pop
add
popf
sub
jne
and
jge
addr16
mov
sbb
test
jg
lret
inc
out
or
imul
mov
jmp
pop
adc
mov
xor
adc
xchg
rorl
push
mov
mov
push
aad
subl
or
and
dec
rorb
add
lret
jbe
mov
push
sbb
repz
ss
jge
cwtl
mov
jmp
jmp
nop
rep
fwait
icebp
mov
ds
mov
pop
ja
push
lds
into
int
and
mov
std
pop
imul
insb
sti
orl
add
repnz
mov
into
cmpsl
imul
lahf
mov
dec
mov
inc
xor
pop
loope
dec
bound
jbe
mov
adc
mov
stc
jle
je
out
dec
and
xchg
mov
out
jle
test
fwait
xchg
jo
popf
mov
aam
xchg
push
jle
out
xor
mov
xchg
leave
orl
jecxz
mov
push
pop
sub
aad
pusha
cld
or
cmc
pop
push
mov
prefetcht2
dec
ljmp
inc
dec
inc
mov
jno
or
mov
into
into
xchg
mov
outsb
ss
mov
cmpsl
shl
mov
fisttpl
je
daa
lret
add
test
dec
imul
into
popf
iret
mov
loope
shll
ja
sub
inc
or
insb
shrl
adc
and
jg
cld
xchg
push
nop
adc
aaa
nop
ret
xchg
inc
popf
roll
and
adc
xor
mov
jnp
rcrl
mov
adc
loope
add
push
sbb
das
test
std
pop
jbe
arpl
dec
adc
mov
enter
pushf
cmp
nop
mov
adc
inc
out
int3
lcall
adc
and
mov
retw
pop
imul
fsqrt
std
in
sbb
scas
add
cmpsl
xchg
mov
xlat
arpl
push
jae
ljmp
sti
sbb
pushf
xchg
jns
hlt
xor
dec
movsb
push
jmp
lods
and
arpl
mov
insb
fs
cmpl
pusha
pop
and
mov
cwtl
xchg
mov
ljmp
mov
pop
lret
cmp
xor
je
adc
into
pusha
pop
lret
adc
mov
sbb
lea
in
js
inc
adc
xchg
sub
inc
fnsave
or
mov
outsb
aam
cmp
test
inc
ds
cmc
ds
mov
adc
scas
mov
outsb
or
out
sbb
js
stos
push
jecxz
sub
loop
testl
out
cmp
inc
nop
filds
cli
das
insb
sbb
dec
jo
sub
scas
sub
adc
insl
test
insl
pushf
adc
test
sti
push
decl
jl
mov
and
sbb
jle
lcall
jge
xlat
sbb
pop
jp
adc
mov
icebp
jo
xchg
repnz
adc
push
cltd
adc
or
dec
popf
jp
sbb
fwait
js
add
jns
xchg
pop
pop
aas
out
mov
sub
sub
sbb
push
sbb
lock
stos
mov
into
mov
aaa
push
std
fstpl
fildll
into
jno
dec
aam
mov
mov
int
xchg
lods
push
jp
pop
cmp
sbb
add
inc
lods
push
and
xor
daa
fisubrl
std
pop
mov
fildl
jg
fbld
imul
jecxz
fildll
repnz
aad
pop
inc
jbe
mov
push
bound
add
or
ret
dec
xchg
stos
push
sahf
int3
outsl
or
adc
pop
pop
pop
leave
aaa
mov
mov
push
cwtl
sub
cmpsl
out
movsb
adcb
xchg
int
or
mov
xor
and
subl
shlb
stos
push
daa
fidivrl
push
push
push
es
loopne
mov
aam
test
xor
jl
fdivl
pop
pop
cmp
scas
sbb
aad
or
cmp
cltd
sar
sahf
imul
jne
mov
daa
xchg
leave
dec
ret
or
pusha
sti
xchg
mov
out
xlat
fsub
std
sub
pop
pop
lea
and
mov
push
push
mov
testl
jmp
xor
loope
pusha
mov
mov
jmp
push
sbb
pushf
add
pop
cmp
push
sub
js
sub
test
inc
lret
pop
push
add
mov
dec
cmpsl
das
fmul
xchg
jns
fwait
adc
aas
jnp
fstpt
xlat
fidivs
cmp
out
fnsave
inc
or
cmp
popf
mov
or
in
divb
cmp
out
in
and
leave
lcall
xlat
sub
lods
in
add
mov
movsb
cmp
scas
shr
in
popf
aam
fidivrl
adc
inc
ret
and
sbb
pop
mov
notl
lds
jns
xchg
movsl
out
sbbb
scas
xchg
or
divb
and
loop
cmp
push
adc
or
loop
adc
xor
or
mov
xchg
xor
xchg
sub
push
lock
loope
sbb
cmpsl
repnz
aaa
lods
aad
repnz
rcrl
add
cmp
dec
add
imul
aad
scas
loop
test
xlat
mov
test
clc
mov
cmp
jge
lret
pushf
jmp
jmp
push
divb
sbb
out
mov
orl
out
sbb
es
aam
pop
test
inc
mov
dec
repz
inc
push
ja
jmp
pop
xlat
test
jnp
adc
pop
sarb
push
pop
sub
cmpsl
or
push
mov
adc
out
mov
mov
lret
ret
xor
je
push
ss
scas
dec
xor
pop
into
stos
rolb
insb
jg
mov
into
add
inc
cs
pop
and
aam
aam
push
mov
mov
inc
stc
push
jno
in
cmp
lret
jo
and
fdivrp
inc
add
xbegin
fcompl
shlb
mov
repz
mov
aas
and
xchg
shlb
pushf
ficompl
xchg
inc
push
icebp
inc
or
outsl
mov
in
into
inc
je
jno
fcomp
xchg
rcrb
cmp
xchg
adc
pushf
mov
or
nop
ss
addr16
push
movsl
pop
pop
pop
inc
push
xor
pop
cmpl
cmp
rclb
ja
out
cmp
fsubrl
out
sbb
rcll
mov
fs
fstl
movsb
insb
add
mov
add
js
and
data16
sub
scas
xchg
out
es
iret
dec
jae
movl
dec
adc
cmpsl
pusha
and
ret
xchg
data16
sub
pop
xor
adc
sbb
popa
icebp
push
sub
mov
sbb
adcb
sub
jbe
jl
xchg
jbe
xorl
push
out
insb
dec
sbb
aam
or
icebp
fnstenv
rclb
lods
lret
mov
idiv
inc
cs
push
ret
xchg
popa
push
mov
mov
mov
aad
push
jmp
xchg
mov
mov
inc
pop
mov
jne
outsl
es
ret
je
ret
push
sbb
outsl
mov
loopne
sbb
or
sbb
dec
fwait
sahf
dec
push
jbe
dec
inc
mov
cld
fmul
push
xchg
push
xor
imul
shrb
xorl
hlt
dec
mov
les
push
test
dec
loop
lds
subb
ret
movsl
aaa
ss
lods
test
into
iret
imul
movb
scas
into
nop
cwtl
ret
test
xor
or
push
loope
mov
popf
inc
mov
sub
arpl
pop
jno
jb
es
mov
adc
or
adc
movsb
dec
dec
outsl
jo
mov
pop
lret
insb
ret
xor
mov
fs
jl
push
jmp
scas
jo
clc
mov
movsl
xchg
jecxz
pmaxsw
mov
outsb
shrb
fbld
addr16
fcoml
push
pop
fimuls
cld
jmp
jnp
mov
jo
lahf
rcr
test
rorb
js
mov
pusha
cmpsb
cli
gs
jmp
scas
pop
lds
or
shlb
dec
push
push
cmp
fs
jmp
mov
add
repnz
pop
roll
fcmovbe
jmp
lcall
dec
aam
les
jecxz
loop
push
ljmp
mov
sub
daa
out
pusha
push
dec
stos
out
xor
jb
mov
subb
aad
push
mov
iret
ret
data16
jge
push
mov
mov
subb
out
push
idivl
push
adc
sbb
dec
pop
addr16
fidivrs
cmpsb
push
clc
popa
es
pop
lahf
pop
cs
xor
lock
enter
insb
std
bound
jg
pop
mov
adc
repz
mov
sar
dec
inc
jne
or
subl
leave
inc
inc
xchg
mov
test
cld
pop
test
test
test
fnsave
in
inc
push
jne
sbb
add
mov
push
test
push
outsl
xor
stc
sub
push
push
and
ds
lods
mov
cmpb
insb
jecxz
pop
test
pop
sub
rcrl
mov
aad
mov
push
ljmp
outsl
pop
xor
lods
pop
mov
ret
in
inc
xor
fisttpll
mov
nop
sbb
xor
pushf
sbb
lock
sbb
stc
pop
pusha
dec
sub
fsubrp
cltd
testl
dec
adc
int
adc
icebp
or
mov
lret
icebp
and
mov
xchg
lahf
dec
rcrl
push
mov
aam
ljmp
dec
inc
or
adc
lods
adc
lret
xor
cmp
add
cmc
ss
mov
mov
fistpl
fldl
sahf
sbb
aaa
sub
push
mov
int
subb
sbbb
xor
xor
int3
lret
mov
ret
adcl
xchg
mov
aad
inc
xchg
mov
xor
dec
test
jne
mov
jl
mov
mov
xchg
xor
je
icebp
les
rcrl
sbb
adc
dec
int
cld
out
ret
fwait
das
les
negb
int
repnz
xchg
push
or
cmc
data16
sub
add
xchg
adc
ss
stos
inc
leave
mov
ja
out
adc
inc
pop
pusha
pop
sbb
mov
jo
pop
pop
sub
ret
jge,pt
jo
push
mov
xor
es
or
mov
or
mov
add
pop
mov
inc
adc
mov
adc
mov
arpl
cmpsl
cmp
lods
ds
cmp
mov
or
pop
xchg
aaa
mov
cmp
sub
jecxz
push
mov
mov
leave
sub
cmp
push
adc
in
aad
shll
jno
mov
push
cltd
push
addr16
or
inc
cmp
notl
mov
shll
fcomip
inc
or
popa
jmp
dec
pop
mov
xchg
popf
nop
pop
icebp
cltd
jle
rcrb
mov
bound
addb
loop
in
shll
pop
cld
aaa
pusha
cmp
mov
sbb
insb
movsb
sti
adc
jno
push
xchg
fs
movb
imul
xchg
jb
pop
pop
push
mov
cmp
sub
shlb
jno
jmp
ret
mov
hlt
mov
or
bound
xchg
or
imul
adc
cmpsl
mov
adc
aam
mov
dec
and
addr16
mov
addl
cmp
adc
into
fwait
lcall
push
cmc
mov
xchg
xchg
jg
pop
loopne
stos
lds
sbb
push
xlat
mov
jne
es
aas
and
imul
addr16
loope
push
arpl
stc
js
scas
shll
cmpsl
fildll
ret
lock
mov
lea
adc
pusha
sub
xchg
std
popw
insb
push
or
out
jge
jo
ljmp
lahf
test
dec
iret
pop
mov
xchg
pushf
mov
sbb
mov
jb
jo
mov
mov
jle
mov
cli
and
jmp
push
enter
sub
loop
dec
ret
mov
jnp
imul
inc
sbbb
mov
pop
test
lea
pop
and
and
mov
icebp
in
fst
shlb
mov
dec
cmp
mov
xchg
xor
pop
test
lahf
pop
xchg
scas
stc
ret
sub
lcall
mov
or
push
xor
jmp
adc
test
call
scas
ss
mov
jns
fs
out
jge
filds
rcll
repz
jno
inc
fwait
or
sbb
add
xchg
push
jb
mov
fistl
ljmp
cmpsl
enter
jbe
mov
out
es
and
stos
push
sbb
mov
ret
loop
popf
in
cmp
out
sbb
adc
xchg
jp
out
adc
pop
adc
and
or
sbb
idivb
xor
jb
sbb
mov
inc
sbb
or
cmpsl
inc
adc
mov
sbb
adc
enter
sbb
xchg
mov
cmpsb
inc
or
pop
lcall
shl
push
adc
mov
pop
insl
adc
pop
push
jp
push
xchg
hlt
movsl
mov
in
xor
movsb
adc
rcr
sahf
movq
fmull
mov
or
dec
sbb
hlt
xchg
mov
pop
mov
stos
subl
lods
push
inc
push
and
xchg
leave
mov
mov
push
call
ljmp
push
inc
ficoms
sarb
xor
dec
test
inc
jne
mov
mov
add
jns
movsb
cmp
sub
inc
rcr
fsubs
rcr
loopne
nop
mov
shll
xchg
fbld
jl
sub
rcr
fs
push
aas
pop
dec
loopne
fldt
pop
imul
add
mov
inc
xchg
mov
jns
lods
and
xchg
adcl
shll
popa
jnp
or
in
adc
lea
mov
pop
inc
jo
jo
mov
sbb
dec
adc
push
pop
mov
lea
clc
dec
scas
idivb
mov
or
mov
fsubrl
movsb
mov
adc
dec
inc
push
jae
loopne
pop
aaa
sub
push
mov
cmp
lcall
and
aaa
adc
pop
jp
test
out
or
push
inc
add
ret
jb
pop
pusha
sub
jle
movl
mov
test
popf
jnp
roll
mov
mov
adc
push
inc
inc
sub
ret
je
aam
mov
movsl
enter
out
push
mov
jecxz
jbe
call
int3
mov
and
loopne,pn
or
sub
xchg
orl
fnstcw
enter
inc
das
or
call
pop
sub
sbbb
cwtl
mov
xor
fldcw
iret
ret
es
mov
jp
or
add
ja
adc
mov
mov
cwtl
push
mov
sub
or
sti
lea
sub
cmp
push
mov
lea
inc
and
movsl
dec
sub
out
sub
testb
lods
pcmpgtb
or
and
mov
add
test
mov
xchg
fsubs
neg
jge
popf
in
out
int
cmpsl
cmp
rorb
mov
jb
insb
mov
dec
mov
dec
mov
fs
fiaddl
mov
jge
sub
ljmp
mov
inc
dec
cmp
out
pop
les
mov
in
frstor
sti
pop
push
ja
pop
repnz
or
push
incb
inc
sub
pop
adc
xor
js
test
jge
aaa
clc
out
notl
in
subb
cmpsl
dec
adc
fisubl
add
adc
repz
adc
mov
mov
push
or
iret
xchg
ss
pushf
inc
aam
mov
xorl
std
and
outsl
addb
fwait
in
jecxz
jo
xor
jg
lret
int
imul
loope
dec
es
imul
sti
mov
fcomps
ja
cmpsl
dec
lahf
mov
pop
out
mov
inc
mov
ljmp
scas
arpl
aaa
and
mov
ss
insl
ret
push
sub
mov
jo
xor
or
loopne
add
in
mov
jp
ret
inc
and
add
cli
jns
ds
xor
test
lock
cmpsb
nop
lods
pop
jbe
jb
das
sbb
rcl
ss
jle
es
fwait
dec
stos
fadds
adc
inc
pop
dec
std
push
pop
inc
inc
lret
addr16
setg
pop
jg
pop
lcall
jmp
inc
pop
push
push
add
pop
cmp
pop
test
idiv
mov
xor
cmp
jl
daa
push
jbe
out
jbe
or
scas
idivl
lret
mov
and
nop
mov
movsb
cmp
mov
mov
mov
in
ret
push
sti
xor
sbb
in
sub
popa
mov
loop
lret
add
add
adc
xchg
jecxz
icebp
jle
fcmovnbe
push
mov
xor
pusha
outsb
dec
je
fcomp
cmpl
cltd
sbb
hlt
pop
lcall
xchg
sub
xchg
outsl
mov
pop
mov
mov
adc
xchg
push
je
xor
or
cmp
lods
sbbl
popf
sti
mov
test
idiv
inc
mov
imul
mov
jg
sub
js
mov
pop
ss
pop
out
shrb
jo
arpl
sbb
or
imul
inc
rorb
aas
divl
sahf
lock
out
popa
enter
and
mov
or
daa
lret
fdivrs
outsl
cmc
inc
inc
fdivrl
jp
imul
int3
mov
xchg
rorl
cmp
notl
orb
pop
mov
mov
rcl
xchg
stos
jb
xchg
jne
fdiv
pop
pushf
push
std
add
leave
or
jg
or
enter
pop
lahf
ja
and
pop
jo
push
cmp
outsl
jns
dec
or
inc
sbb
dec
out
xor
into
sbb
shll
cmc
cmc
popf
cmpsl
ljmp
out
mov
mov
xchg
fwait
in
cs
jb
outsl
inc
test
in
inc
outsb
push
push
sbb
test
fldcw
clc
in
in
and
add
mov
mov
cmp
ret
pop
outsl
adc
pop
aad
xchg
iret
sub
cmpsl
push
mov
sub
and
inc
mov
mov
fiadds
outsb
or
daa
pop
lret
jp
jb
push
movsb
gs
mov
movsb
scas
sti
jecxz
jb
das
scas
dec
not
and
add
iret
int
addr16
mov
lcall
add
and
mov
incb
in
mov
pop
pop
jnp
mov
mov
notb
stc
movsb
sarb
sbb
test
jp
push
sub
jne
idivl
and
outsb
mov
jno
call
sub
mov
divb
push
int3
sbb
adc
dec
pop
mov
out
addr16
insl
jo
push
sbb
add
inc
outsl
xchg
lcall
stc
mov
jge
sbb
lock
mov
or
adc
outsl
cs
mov
mov
sarb
sbb
les
xor
pusha
loop
jle
scas
into
push
movsb
sub
lds
lgs
int3
iret
mov
sub
mov
cli
iret
std
pop
incb
imul
mov
jmp
xchg
inc
dec
test
cs
pushl
imul
test
push
xchg
add
out
sub
push
int3
clc
ds
mov
int3
mov
or
or
adc
sar
jb
dec
jle
lock
aaa
adc
subb
sbb
repnz
sub
stos
cmp
or
cmp
lahf
jle
stc
shll
inc
jnp
jp
sub
mov
xchg
daa
enter
cmp
test
cmpsl
je
xchg
dec
shlb
mov
int
cmp
dec
loopne
insb
sar
fsts
shrl
inc
mov
test
sub
hlt
loop
pop
in
rcll
stc
call
jl
mov
mov
mov
cld
cmc
mov
in
push
sub
add
cmp
les
jge
mov
divb
or
fsubl
cltd
clc
ja
fldenv
lods
pop
xchg
sbb
imul
test
pop
pusha
push
jle
cltd
mov
out
stos
lcall
inc
push
mov
adc
xor
lods
loopne
xchg
imul
lret
and
xor
and
loopne
jp
sub
push
sub
outsb
icebp
pop
repnz
jle
or
sti
push
dec
lret
test
pop
add
mov
clc
mov
sahf
inc
loop
cmp
bound
hlt
sbb
jb
jno
daa
js
in
hlt
push
pop
push
pop
mov
rclb
jne
add
cltd
push
stos
dec
cli
jmp
xchg
jbe
add
cltd
mov
xor
cwtl
rorb
push
push
mov
cwtl
inc
and
inc
sbb
xchg
shll
hlt
mulb
lock
mov
into
dec
inc
movsb
scas
mov
sbbb
sub
mov
mov
push
sub
adc
push
cld
dec
xchg
add
jo
into
jno
shlb
in
and
mov
and
xor
mov
mov
decb
cmpsb
ret
inc
or
xchg
xchg
pusha
adc
clc
fcmovu
push
stos
mov
neg
es
pushf
out
xchg
mov
cmpsb
xchg
int
call
dec
cltd
loopne
pop
xor
jp
jle
rolb
pushf
pop
pop
das
jo
sbb
jmp
insb
lcall
sub
mov
xchg
imul
pop
cmp
jmp
int
lock
in
dec
push
je
sbb
pop
mov
xchg
cli
mov
jnp
xchg
lods
xor
shll
mov
add
imul
sub
jecxz
mov
in
cmc
in
cwtl
xchg
lods
xor
push
mov
lahf
push
popf
aaa
xchg
frstor
bound
pusha
sti
jecxz
mov
push
xor
xchg
xchg
xor
push
mov
jns
in
incb
cmpsb
mov
out
ret
std
shl
imul
hlt
mov
and
sbb
or
std
cmc
or
pop
mov
mov
pusha
ret
mov
std
mov
jge
mov
mov
push
mov
mov
push
dec
jge
test
jae
out
add
xor
pop
test
jecxz
andb
adc
ss
jmp
lretw
aad
jecxz
push
mov
jne
int
cmpsl
les
ffreep
xchg
cmpsl
dec
push
in
outsb
lahf
loope
int3
jns
sub
inc
mov
fstpt
aad
idivl
daa
mov
xchg
and
cld
mov
sub
movsl
testl
sbb
loope
das
xor
xchg
data16
xchg
jge
arpl
in
nop
push
gs
sbb
xchg
mov
sbb
outsb
movsb
dec
xor
fmul
push
mov
mov
mov
xchg
out
lock
out
popa
aad
stc
cmpsb
push
ljmp
stos
cld
inc
daa
bound
les
dec
leave
or
jae
push
int3
or
stos
mov
pop
xchg
adc
mov
inc
cmp
adc
xchg
popf
jmp
xchg
jb
jns
cmp
lret
rolb
adc
cmp
fcmovbe
cmc
cmp
dec
loop
sbb
xor
cmpb
enter
mov
mov
push
sbb
pop
aad
inc
pop
sti
mov
aam
cltd
mov
cmpl
out
ror
pop
ficompl
outsl
lock
mov
ja
inc
xor
sub
push
daa
xor
roll
adc
leave
gs
sbb
test
sbb
mov
inc
rcl
hlt
lods
cmp
ljmp
xlat
xor
into
lret
fistpll
sub
xlat
lods
imul
pusha
data16
jb
lahf
insl
inc
or
mov
rorl
js
cmp
in
gs
mov
sbb
jnp
pop
jle
popa
mov
jbe
in
mov
jmp
test
idivl
test
divb
cld
adc
cmp
fcomi
in
xchg
ret
mov
adc
pop
xor
mov
repnz
mov
cs
push
subl
lret
mov
call
into
rcrl
cmpsb
rorl
test
sub
mov
pop
andb
outsl
lret
jmp
cltd
jbe
or
enter
sbb
xchg
lds
shlb
dec
pop
les
and
adc
orb
ficomps
or
std
mov
lret
std
add
mov
mov
sbb
les
aaa
xlat
ret
adc
cltd
pop
mov
push
test
repz
lret
lea
add
dec
in
cmpsl
jb
jne
mov
bound
int
cmc
cld
sahf
xor
push
mov
loop
rol
out
adc
pushf
xor
mov
add
xor
xor
sub
ret
loopne
pop
daa
adc
mov
test
loopne
sub
sbb
pop
sahf
adc
inc
pop
ss
jnp
sti
jecxz
inc
call
loope
ret
or
lret
shlb
loope
les
testl
cwtl
adc
and
jg
sub
arpl
mov
dec
adc
lods
jo
push
add
aam
and
pop
jecxz
mov
sbb
cmpsl
fstps
cmp
jg
add
in
lea
out
dec
jmp
push
jmp
mov
cmpsb
in
insl
stc
cltd
fwait
stc
int
stos
call
in
xlat
sbb
lds
jmp
xlat
mov
sub
add
loop
xchg
xor
pop
dec
pop
sbb
mov
push
outsb
lods
rcrb
fwait
iret
lahf
jl
dec
inc
xchg
push
inc
insl
mov
fsubrl
push
test
pop
je
es
mov
pusha
mov
xor
nop
cs
add
mov
lret
adc
add
pop
repnz
inc
int3
lea
cmc
ret
stc
sub
or
stos
sahf
sub
movsb
inc
xchg
or
sub
xor
mov
push
inc
mov
xchg
add
xor
mov
pop
movsb
dec
dec
arpl
push
xor
pop
jg
fimull
jno
inc
push
sbb
mov
pop
xchg
clc
outsl
das
movsb
bound
aam
fadd
loop
imul
push
imul
add
mov
jge
lahf
iret
add
arpl
push
cli
inc
jne
scas
cmp
int
dec
inc
lods
gs
outsb
leave
jnp
scas
sub
ret
mov
jns
inc
nop
dec
push
inc
push
push
lahf
loope
pushf
icebp
adc
mov
cmc
bound
pushf
mov
fcomip
or
stos
aad
lods
inc
sarb
pushf
sahf
icebp
aam
negl
pop
xchg
xchg
and
in
outsb
dec
inc
je
pusha
pop
mov
mov
xchg
mov
out
clc
sub
push
stos
jb
fimull
pop
arpl
inc
lods
sub
fstl
loop
pop
mov
inc
fldcw
mov
jae
dec
pop
mov
jmp
inc
mov
mov
divl
sbb
mov
sub
ret
jge
stos
lock
mov
and
sub
or
int
sbb
cwtl
push
mov
aad
sub
cmp
jo
cmp
testl
jb
ljmp
xor
jl
xor
and
fld
fcomi
xchg
inc
pop
mov
or
xor
sbb
fildll
push
outsb
minps
lcall
nop
xor
roll
into
std
cmc
sub
call
push
test
xor
xlat
cs
int3
or
ljmp
mov
int3
int3
icebp
ljmp
sbbl
pop
cmpsl
mov
lret
sbb
inc
mov
push
in
mov
or
imul
loopne
and
cwtl
cmp
mov
inc
jmp
mov
test
push
mov
in
mov
aas
aas
cmpsl
sbb
pop
sbb
out
call
das
dec
lods
xor
addr16
sbb
mov
cmc
mov
outsb
std
xchg
jo
clc
arpl
fcomps
mull
and
imul
sbb
push
movsl
bound
mov
sub
sahf
cltd
out
jp
aad
jmp
aaa
push
lret
dec
push
xchg
pop
loopne
mov
mov
jb
shr
jmp
jo
cmp
in
rcrl
xchg
loopne
push
movsl
push
push
cmp
inc
ljmp
inc
outsb
and
dec
out
out
mov
or
sarb
pushf
jae
push
jne
push
xchg
xchg
ret
mov
aas
jne
into
pop
jl
jle
mov
push
frstor
mov
iret
rep
mov
leave
stos
jle
adc
push
lods
dec
mov
lods
sub
mov
mov
in
ss
mov
test
es
pop
insl
lock
mov
mov
imul
mov
lcall
not
gs
fsubr
outsl
cltd
idivl
sarl
pusha
mov
jo
mul
cltd
in
mov
jbe
popf
dec
mov
jp
jo
movl
or
movsl
adc
pop
lret
aaa
orb
in
mov
add
sbb
bound
fdivrs
cmc
sub
add
hlt
adc
mov
inc
ss
rorl
sbb
jns
inc
cli
repnz
insb
mov
push
in
xor
decl
in
aam
lcall
jns
or
js
lds
or
dec
popa
ffree
iret
adc
cmp
push
les
outsl
fistpll
aaa
jmp
test
and
dec
adc
in
aad
mov
mov
xchg
int
xchg
rclb
add
test
push
pop
and
jbe
cmpsl
mov
hlt
lds
xor
pop
nop
push
jle
outsl
mov
int
out
jmp
xchg
lcall
xor
adc
and
decl
mov
stos
fsubrl
in
inc
js
jle
mov
loope
jbe
lods
adc
call
int3
stc
stos
sub
sarb
sbb
mov
dec
jo
pop
or
dec
pop
in
xchg
or
sarb
scas
cmpsb
push
sub
cmp
push
add
add
scas
in
andl
push
xorb
sub
dec
push
xchg
pop
fbstp
jnp
jmp
outsl
std
sub
xchg
je
dec
cmp
dec
dec
repnz
lret
xchg
jle
pop
adc
gs
xlat
sbb
ljmp
or
outsb
sbb
fdiv
cs
bound
or
fsubs
aad
xchg
rol
and
push
pop
push
mov
int
addb
jno
cwtl
test
out
int3
mov
jge
rclb
xlat
sbbb
mov
or
gs
lcall
fnstcw
sarb
mov
jo
out
fistps
cmp
je
loope
popa
push
push
mulb
loope
inc
lcall
lret
mov
pushf
je
jecxz
into
mov
mull
sub
loope
test
cmpsl
jmp
push
test
sti
jns
xlat
jge
pop
andl
cld
les
es
push
js
push
push
jge
adc
aaa
lcall
icebp
pop
xor
jmp
into
lods
or
add
aad
andb
test
movsb
push
push
and
lods
call
mov
fs
loopne
cmp
push
loopne
or
xor
lahf
sti
adc
sbb
inc
je
fs
jbe
aas
pop
inc
lret
adc
push
jnp
dec
adc
out
cmp
fwait
rcll
push
repz
ljmp
pop
fcom
mov
inc
mov
frstor
mov
mov
icebp
ja
aam
fadds
mov
loope
cmp
sub
pop
data16
and
mov
or
outsb
roll
test
movups
aam
sub
mov
loope
inc
mov
neg
mov
ret
out
pop
out
test
xor
cltd
mov
cmpsl
xor
lods
xchg
lds
xchg
in
push
inc
stc
inc
aam
cmp
pop
fldt
fwait
push
or
movsl
movsb
xor
inc
repz
adc
mov
mov
xchg
fmull
or
push
cld
inc
sbb
call
jno
sub
and
sub
or
aas
es
inc
pop
pop
adc
push
jg
test
jnp
fisttpll
or
je
push
push
jge
movsb
call
xor
xchg
jmp
pop
mov
cmp
pop
sbb
xrelease
xchg
fwait
loopne
in
jo
xchg
mov
push
movsb
insb
aad
jle
mov
jecxz
mov
dec
lret
repz
cwtl
adc
xorb
iret
xor
mov
jmp
cs
mov
add
imul
mov
fucom
leave
push
push
ljmp
inc
push
and
int
frstor
imul
add
scas
addr16
cmp
lcall
jb
test
sub
je
movsl
mov
sbb
cmp
mov
stos
adcb
inc
inc
popf
sub
mov
sub
pusha
aaa
sti
das
push
cwtl
inc
lods
cwtl
sbbb
add
pop
mov
inc
lods
and
sub
arpl
in
iret
xchg
dec
test
jmp
repnz
push
aaa
les
mov
jb
or
andb
rol
ret
or
push
inc
rolb
or
lock
sub
inc
filds
xchg
shrl
jne
out
jl
or
dec
pop
scas
into
mov
lahf
lret
or
pop
test
outsl
jge
popa
sbbb
flds
sub
outsb
dec
stos
sti
xchg
push
mov
sar
xchg
mov
mov
lea
aaa
sub
cmp
insl
ljmp
jecxz
add
sub
adc
jmp
pushf
jg
jp
repz
in
data16
and
popa
mov
dec
push
push
repz
push
insl
hlt
iret
cmp
mov
or
pop
and
mov
jae
or
into
out
mov
aaa
xlat
out
out
push
and
pop
es
adc
xor
xor
addl
add
in
sbb
push
mov
inc
ljmp
decb
aam
add
jp
and
stos
xor
mov
loop
cmp
and
scas
fmuls
mov
jae
lea
or
push
mov
and
neg
insb
adc
mov
roll
xchg
cmp
aad
inc
test
add
xor
push
sbbl
divl
add
mov
in
int3
dec
cmp
mov
dec
and
sbb
mov
sub
fxch
insl
xor
xchg
dec
xchg
jmp
pop
insl
daa
lds
cmp
in
cmc
rol
cmpl
fs
stos
outsb
fs
notb
ss
cmpl
mov
lods
inc
sub
cmpsl
mov
mov
jnp
jb
inc
lock
insl
xorl
xor
outsb
add
push
cs
ret
inc
fdivl
sbb
fisubrs
add
dec
mov
in
inc
push
stc
pop
xor
or
push
xchg
push
sti
push
mov
je
mov
add
mov
dec
mov
mov
cli
push
pusha
xchg
inc
add
std
mov
mov
xchg
cli
mov
add
mov
icebp
sub
inc
mov
pavgb
inc
imul
adc
and
psadbw
test
inc
in
stos
movsb
dec
jmp
scas
ret
loopne
arpl
adc
push
das
sbb
mov
enter
cwtl
movsb
clc
dec
and
cmpsl
cmp
test
std
jmp
or
int3
sahf
pusha
pop
mov
loopne
lret
icebp
or
jb
mov
stos
and
mov
push
xchg
pusha
mov
insb
dec
jae
shll
xchg
mov
mov
push
mov
iret
mov
enter
pop
sbb
mulb
outsb
cli
lea
pop
add
dec
add
xlat
icebp
test
pushl
rcrb
imull
es
mov
test
mov
es
sti
enter
mov
sub
mov
call
adc
or
add
mov
mov
out
jg
push
push
cmc
aas
int
pop
adc
cmp
insl
inc
addr16
dec
cld
jbe
jno
push
jmp
adc
push
enter
mov
inc
daa
xchg
mov
test
jns
repnz
sub
mov
loope
imul
push
rolb
jl
adc
fmul
sub
ja
mov
loop
int3
lret
xchg
xchg
arpl
dec
int
adc
or
xchg
outsl
xchg
cmp
pop
rcrl
movsl
out
push
insb
lret
sbbb
in
das
into
inc
sti
adc
dec
push
pop
mov
subl
dec
mov
mov
mov
cli
lcall
bound
jl
cmp
pop
cmpsl
and
repnz
das
lret
js
xchg
mov
add
popf
xchg
xchg
es
xor
clc
dec
icebp
bound
pop
imul
cmp
jg
loop
dec
adc
repnz
mov
fsubrl
sbb
cmpsl
push
mov
dec
jge
lcall
popa
int3
push
cmpl
mov
loopne
and
out
push
imul
outsl
movsl
icebp
dec
add
cmpsb
add
ficompl
jl
xor
pop
pop
jns
aas
push
in
dec
fsubl
bnd
xchg
dec
enter
int
int3
mov
push
outsb
mov
test
xorl
adc
jecxz
sbb
loopne
sbb
movsb
jb
inc
add
lods
nop
int
inc
push
adc
aas
out
jge
lods
push
int
aas
cld
or
repz
pushf
scas
movb
rolb
lret
pop
mov
gs
or
das
mov
stos
orb
cmp
sahf
test
push
test
jmp
loop
xchg
sbb
les
sarb
xor
jmp
sub
push
arpl
ja,pt
inc
aas
jne
ljmp
mov
imul
jecxz
cmc
xor
test
inc
outsl
mov
pop
loopne
jmp
sbb
push
cwtl
push
inc
lds
jno
or
jb
sbb
cli
ror
clc
je
std
mov
mov
cmp
dec
imul
arpl
cmpsb
fldcw
subl
xor
jmp
sub
cmp
es
push
sbb
push
sub
lret
cmp
dec
psrlq
xchg
dec
out
int
leave
inc
xlat
mov
enter
xor
cld
push
cmpsl
icebp
sub
outsl
sbb
daa
out
sub
vmread
popf
adc
cmp
pop
mov
push
gs
imul
cmp
mov
inc
xor
jne
int
sbb
push
shlb
mov
and
pop
testb
adc
cmp
jbe
ja
fcomps
xchg
and
cld
inc
push
clc
sahf
jae
jne
mov
fdivp
sub
xor
push
lock
data16
test
lock
pop
scas
push
xor
rcrl
je
adc
ds
mov
mov
test
std
push
pop
pop
mov
insl
popf
aam
fcoml
sti
mov
aas
clc
mov
aaa
pushf
push
xchg
or
pop
dec
in
int
lret
jns
jno
lods
mov
xchg
and
arpl
adc
cltd
lods
outsb
in
mov
testb
adcl
or
dec
scas
fisttpll
pushf
pop
add
lcall
dec
test
and
mov
or
sub
cwtl
dec
imul
dec
inc
push
pop
int
jae
or
mov
bound
repnz
ret
mov
arpl
pop
bound
xchg
or
mov
cld
stc
inc
mov
add
sbb
push
cli
cmp
std
iret
cmp
mov
lods
fcompl
sbb
mov
aad
adc
adc
adc
or
dec
dec
aas
sub
repnz
mov
push
test
sub
mov
das
sub
mov
scas
and
out
add
mov
mov
call
popf
pop
imul
call
in
sbb
aaa
mov
sbb
mov
lods
arpl
dec
sbb
lmsw
lret
pop
cmp
mov
cli
sub
lret
jge
lahf
test
rcll
adc
into
mov
outsl
xchg
mov
js
sub
mov
out
adc
jns
or
push
xchg
in
jle
jns
adc
xchg
adc
js
subl
bound
sbb
nop
mov
popa
cmp
mov
mov
int
pop
lret
push
insl
icebp
out
insl
and
scas
sbb
push
mov
dec
ret
mov
jbe
xchg
add
jg
or
jb
mov
jbe
sub
ret
sbb
mul
in
inc
mov
iret
or
cmpsl
jb
cltd
mov
pop
push
in
fiadds
and
xchg
nop
mov
arpl
cmpsb
jno
pusha
xor
sbb
jge
push
outsl
jns
cltd
mov
sbb
add
mov
outsl
and
mov
dec
xchg
dec
jecxz
addr16
jb
inc
xchg
out
fnsave
fcomp
mov
rol
movsb
psrlw
sbb
adc
xchg
in
cwtl
hlt
sti
mov
or
call
les
cmpb
mov
rol
and
cmp
or
std
scas
xchg
mov
mov
jge
or
popa
jmp
mov
nop
push
mov
pusha
nop
cmp
outsb
xor
xchg
subb
jge
ljmp
push
dec
dec
cmc
push
jae
lods
cmc
shlb
inc
inc
rcll
or
jne
mov
movsb
icebp
pop
in
add
push
das
jo
andb
xlat
cmc
mov
add
inc
fwait
out
xchg
lret
insl
sub
dec
mov
int3
jecxz
push
sar
mov
shll
mov
jae
dec
lret
fdivl
mov
push
cld
mov
lret
aad
xchg
and
aad
mov
jge
sahf
ret
andl
test
jp
scas
cmpsl
mov
pop
push
in
xchg
jecxz
inc
ficompl
gs
leave
inc
lret
or
pop
hlt
sahf
shll
outsb
stos
push
pusha
fidivs
sbb
cmp
repz
or
mov
and
mov
pop
imul
xchg
inc
clc
iret
fsts
cs
cmp
cmpsb
push
adc
je
insl
and
stos
or
pop
insl
ficoml
fwait
call
push
int3
dec
xchg
mov
stos
jnp
insb
mov
iret
insl
scas
mov
pusha
sbb
dec
stos
pop
push
or
data16
outsl
cmp
daa
int
call
nop
pushf
stos
sub
add
ljmp
fwait
sub
inc
mov
sub
aaa
sbb
outsl
idiv
dec
adcb
dec
cmpsb
imul
dec
lret
daa
popa
shlb
push
mov
mov
inc
fwait
es
lret
out
loopne
test
daa
cmp
adc
cmp
in
mov
lahf
mov
bound
xchg
and
jg
pop
xchg
mov
jbe
pop
dec
test
fdecstp
inc
mov
int
leave
xor
in
ds
enter
mov
das
cmp
xchg
aam
mov
and
cli
in
lock
xor
repz
adc
pop
jmp
scas
push
loop
lahf
pop
mov
jne
sahf
popa
cmp
jl
push
push
loope
and
add
cmpsl
xor
and
divl
jecxz
push
dec
inc
dec
mov
pop
mov
stc
pop
mov
adc
xorb
push
into
jne
mov
xlat
call
imul
pop
fisubl
popf
inc
push
pop
mov
insb
add
and
in
mov
mov
push
test
fstps
adc
cmp
je
out
popf
push
mov
insb
lds
sub
lods
rorl
addl
test
ljmp
inc
in
sbbl
xchg
data16
repz
or
test
push
fsubrp
jge
add
shr
sub
jp
xchg
adc
mov
ss
adc
or
mov
arpl
cmp
inc
stos
daa
leave
adc
fidivrs
rclb
ljmp
xchg
mov
sub
cmp
scas
mulb
pop
aas
dec
or
cmp
push
mov
clc
repz
push
sbb
adc
clc
into
js
pop
idivl
cltd
jp
or
idivl
xchg
xchg
add
mov
jmp
cmp
scas
dec
in
shlb
cmp
sbb
das
in
int
mov
fistl
xchg
lahf
mov
lods
jns
aas
jg
lea
into
sbb
aam
int
out
mov
push
movb
inc
adc
mull
ss
cmpsb
xchg
sub
cmp
hlt
pop
andl
int3
push
push
xlat
push
lods
scas
imulb
int3
add
popf
mov
jns
jmp
mov
mov
pop
pop
repnz
lods
cld
rolb
cmp
mov
call
cmp
xor
xchg
aad
jg
iret
push
not
iret
add
xor
cmpsb
push
pop
daa
push
cmpsl
xor
test
mov
popf
dec
inc
sub
mov
subl
sub
dec
pop
pusha
movsb
insl
adc
into
pop
pop
adc
lahf
add
or
sbb
sub
sbb
mov
sahf
jne
inc
add
rcll
cmp
pextrw
mov
dec
cltd
xchg
movsl
das
ds
adc
mov
cmpsb
cld
fistl
out
aaa
sub
in
dec
ret
adc
xchg
test
jmp
push
lods
les
insl
clc
pop
sbbl
cltd
xor
adc
adc
jecxz
push
out
sbb
test
mov
pop
xchg
xchg
imul
jno
fs
clc
rcll
add
repz
shr
inc
and
jl
pop
repnz
cld
fisttpll
mov
sbb
jmp
aam
jae
mov
push
mov
or
xchg
fistl
cmp
cmp
xchg
xchg
test
mov
xchg
std
movsb
xor
add
sub
cmpsl
shrl
pop
or
add
inc
lahf
neg
or
sbb
sti
inc
adc
fsubrp
andl
push
sbb
fwait
jne
mov
das
pop
test
dec
add
mov
inc
repz
xchg
mov
xchg
movsb
adc
sub
jns
lret
push
sub
add
sti
sarb
jg
inc
fidivrs
xor
cmpsb
push
int3
sub
out
mov
fisttpl
sbb
in
or
dec
icebp
add
inc
fbstp
add
adc
subb
into
popf
mov
inc
pop
cmp
stos
xchg
xchg
scas
push
testb
lods
sub
lahf
xchg
movsb
push
test
fs
jl
mov
cmpsl
icebp
mov
sub
iret
cmpsb
mov
testb
iret
popa
push
push
cli
mov
mov
aas
pop
popf
sbb
jmp
addr16
pushf
ficoms
dec
jp
in
loopne
rorl
cmc
or
nop
mov
pop
pop
push
dec
lret
cmp
int
iret
sbb
xchg
lret
pop
cmc
cmp
push
les
ljmp
ret
aad
xchg
pop
repz
add
xor
outsl
ja
stos
or
test
sub
cwtl
pop
mov
daa
jecxz
jle
outsb
mov
aam
or
cmp
loope
sarl
insb
pop
sahf
mov
jmp
push
lcall
es
ja
sbb
xor
ds
test
scas
fisubrl
lds
dec
lods
pop
inc
jbe
lcall
jmp
pushf
lods
or
lahf
subb
pop
and
je
cmp
dec
iret
push
divb
inc
fadds
out
mov
std
es
add
les
push
dec
test
scas
xor
fcmovbe
pushl
cmp
loop
shrl
inc
add
mov
adc
pop
insl
movsl
stos
in
inc
push
pop
mov
psraw
push
push
xchg
cmp
cwtl
and
cmpl
movsb
shrl
sbb
mov
dec
ljmp
sbb
frstor
addr16
das
in
or
es
mov
xchg
pop
or
jno
mov
sub
cld
les
xor
leave
cmp
pop
mov
push
xchg
shl
push
cmp
mov
test
push
mov
mov
outsl
lret
pop
std
xchg
out
stc
sub
loopne
jno
test
adc
sti
pop
and
repnz
aam
test
mov
mov
bound
inc
mov
dec
shr
push
or
outsb
ljmp
mov
aaa
add
out
push
lret
pop
insl
or
jecxz
test
sahf
mov
imul
icebp
pop
mov
loop
sbb
xor
or
xor
cmp
jno
arpl
inc
lea
loop
ret
sbb
popa
shlb
jno
or
xchg
cmp
mov
or
repz
mov
test
repnz
scas
imul
sub
jmp
cmp
xchg
sub
jb
das
test
cmp
mov
xchg
testl
ljmp
aad
mov
fidivrl
into
jb
adc
into
mov
fbstp
ja
push
ja
fidivrs
pushf
ret
cmpsb
dec
fldt
or
push
sbb
mov
adc
das
xchg
incl
out
jns
dec
mov
dec
fdivr
push
sbb
andl
jp
push
jb
sti
mov
jno
cmp
xchg
dec
lods
lock
xchg
sub
or
mov
pop
dec
test
mov
jmp
aaa
sar
das
or
aad
push
test
inc
test
pushf
cli
mov
add
cmpsb
lds
sub
jno
in
push
xchg
xchg
nop
outsl
push
xor
test
sti
cmp
mov
popf
or
jl
mov
fs
ret
push
push
pop
insl
addb
repnz
or
fldenv
and
adc
mov
add
in
jno
daa
mov
pop
xchg
or
int
fisubrs
mov
add
push
inc
add
push
and
pop
mov
mov
mov
cs
fsubs
sti
mov
cmpsl
xchg
xorb
pop
inc
mov
mov
mov
lods
mov
add
fimull
and
rcr
and
outsl
outsb
lcall
icebp
mov
or
jge
test
pop
xchg
data16
dec
scas
test
ret
stc
lahf
cmp
mov
mov
repz
push
dec
in
push
adc
mov
and
jp
push
das
mov
mov
repnz
xor
pushf
testl
xor
cmc
cmp
or
in
mov
nop
mov
int
or
mov
pop
dec
xchg
cwtl
hlt
or
dec
sub
fldl
sbb
fmull
mov
pop
inc
adcb
repz
fnstenv
mov
sbb
popa
mov
mov
pop
daa
adc
cmp
fists
sub
testl
and
idivl
or
fidivrs
jecxz
xchg
scas
das
dec
adc
gs
sti
fcomps
mov
mov
lret
dec
push
push
popa
push
cmp
sbb
mov
and
stc
push
popf
cmp
jmp
dec
scas
dec
js
mov
inc
cmc
hlt
push
data16
jge
in
sub
lar
lods
cmp
loopne
dec
xor
and
sbb
es
push
aaa
imul
ret
dec
mov
lods
in
fbld
jb
mov
fsts
mov
xor
out
sub
and
cmp
or
fimuls
inc
rorb
lret
int3
out
jne
movsb
xchg
imul
push
push
sbb
xor
jp
int3
push
xchg
xor
mov
inc
xchg
push
xchg
sbb
mov
out
and
sti
lock
daa
push
out
cmp
jp
push
add
dec
jnp
fsubrl
loope
movsl
jg
sub
stos
arpl
xchg
rorl
das
jle
inc
cld
adc
cmp
adc
pop
mov
jg
ljmp
jb
ret
add
xchg
mov
shrl
dec
cmp
mov
mov
xchg
or
push
jge
fbld
jle
push
and
jno
cli
pop
cwtl
fdivrs
shrl
in
out
mov
enter
jg
jnp
mov
cmp
xchg
aas
test
push
mov
and
mov
mov
imul
and
testl
cli
lods
in
or
xor
push
incl
jo
xchg
push
loope
xor
sahf
outsl
lods
sub
scas
lret
xchg
fscale
ffreep
mov
aaa
add
lock
and
xor
pop
or
rclb
pop
adc
stc
lahf
dec
cmp
out
and
mov
mov
mov
rolb
fcoms
mov
xchg
sub
gs
inc
mov
pop
mov
roll
nop
mov
in
pop
loopne
sub
cmp
cmpsl
push
jb
repnz
call
movsb
ret
cmp
xchg
cmc
mov
dec
or
jmp
push
xlat
fwait
and
mov
enter
or
jle
mov
xchg
cmc
into
xor
and
subl
mov
icebp
leave
stos
cmp
mov
inc
insb
addb
fidivl
aas
fsubs
add
cmp
pop
ret
enter
dec
jo
lods
xchg
repnz
pop
mov
sub
sub
jns
ljmp
and
outsb
cmp
push
fisubrl
leave
push
mov
fwait
mov
sbb
movsb
ret
jno
push
clc
xchg
mov
or
jno
nop
xchg
and
out
lods
sub
adc
movsb
out
loope
and
xorb
and
push
insl
lret
add
ret
std
cmp
iret
mov
sub
addr16
insl
jbe
jle
xchg
mov
mov
gs
cmp
sbb
xor
and
dec
push
rcrb
stos
and
mov
roll
out
mov
jmp
xor
push
mov
adc
mov
add
je
fsubs
inc
add
scas
hlt
imul
cmpsl
movsl
andb
xchg
push
mov
push
push
test
je
sbb
ljmp
rcl
out
fbld
das
lret
lahf
sarb
pshufw
pusha
jecxz
cmpsl
dec
lock
pushf
out
sti
adc
add
imulb
push
hlt
add
cmc
les
scas
mov
push
inc
loop
dec
cld
imul
mov
sti
pop
sbb
xor
adc
mov
lods
in
das
push
rolb
ret
lret
xchg
jo
or
imul
cmp
xor
mov
outsb
lock
stc
and
or
xchg
and
inc
lea
lret
mov
jnp
sbb
jae
xchg
xor
or
xor
idivl
repnz
shrl
dec
into
cmc
sbb
mov
mov
pop
mov
mov
ds
cmp
aad
out
outsl
lret
fldl
popf
mov
test
xor
and
fisttpl
aam
pop
sbb
push
in
lret
xchg
fstpt
ds
jno
fucomip
out
andl
rorl
imul
sti
enter
cmp
out
bound
mov
mov
add
inc
das
mul
or
cmpsl
push
mov
cmp
add
adc
pusha
adc
lock
cmpsl
cmpsb
call
dec
or
lods
pop
rorl
movsl
es
mov
scas
fwait
daa
or
xchg
enter
cmpsl
add
lahf
sbb
fisttpll
or
inc
daa
adcb
pop
xchg
pop
mov
fldcw
adc
mov
scas
test
loopne
fldl
and
adc
pusha
inc
cmovne
cwtl
fcoms
sbb
popa
mov
cmc
repnz
mov
addr16
clc
or
mov
filds
test
shlb
stos
jmp
leave
rolb
clc
neg
dec
mov
sub
sarb
adc
mov
aad
test
into
into
cmp
nop
lret
test
ret
popl
gs
xchg
es
sub
dec
je
pushf
mov
adc
jae
leave
dec
mov
cmp
or
jns
idivl
cmp
or
out
mov
subl
data16
movsb
or
es
jg
popf
push
dec
imul
or
loope
or
out
in
jne
xchg
push
cltd
vunpcklps
jo
fldcw
jo
mov
cltd
mov
cwtl
fisubrs
push
imull
mov
mov
in
xlat
in
lahf
add
into
fistpl
lret
ficompl
jp
mov
cmp
sub
shrl
sbb
xchg
push
lods
add
gs
mov
mov
lods
daa
dec
mov
xor
fstpl
inc
ljmp
push
data16
or
fdivrl
test
jbe
shll
mov
iret
jo
mov
stc
aas
adc
push
mov
je
dec
and
adc
fs
cmp
push
sbb
loop
lret
push
cmp
or
pop
mov
mov
sub
dec
inc
jmp
je
sub
test
xor
jl
mov
or
aam
lret
or
or
adc
xlat
dec
les
and
fidivl
mov
pusha
data16
ror
and
adc
insb
jecxz
out
inc
push
jge
ret
mov
mov
mov
mov
and
repz
fbld
push
mov
fcoml
pusha
jg
stc
pop
loop
sbb
sti
xchg
push
pusha
inc
adc
or
and
jmp
out
fstl
outsb
push
inc
cmp
lret
sub
rcl
insb
inc
cmpsl
in
mov
cmp
test
dec
mov
stos
fstpt
mov
pop
rcrb
imull
pop
in
outsb
in
notb
push
mov
fs
leave
mov
loopne
jne
adc
push
sbb
pushf
jl
xchg
into
jmp
scas
out
push
xchg
mov
push
xchg
mov
leave
inc
sbb
andb
ds
jg
inc
jne
repnz
mov
fmull
fimuls
fbld
rclb
jbe,pt
mov
xlat
insb
mov
in
pop
fldl
sub
shrb
scas
xchg
in
sbb
sti
test
sti
jb
add
test
xchg
sub
and
sbb
cld
push
pusha
mov
sbb
push
pushf
out
pop
movsb
jmp
jmp
rorb
jns
dec
inc
inc
std
mov
and
pop
sbb
out
pop
das
pop
xor
scas
hlt
data16
adc
sub
jnp
sbb
jg
lcall
lods
or
add
lret
addl
jp
fcoms
adc
and
das
mov
xchg
mov
pop
mov
cmp
xchg
and
insl
fwait
popf
imul
pop
icebp
dec
lcall
inc
rcl
xchg
fsubrl
les
mov
aad
adc
or
jae
and
icebp
mov
cmp
dec
ret
jg
es
add
pop
outsb
or
dec
fwait
push
adc
pop
pop
mov
adc
jge
ljmp
inc
fwait
xor
arpl
sub
lods
ret
xchg
fstpt
mov
add
icebp
mov
adc
pop
in
int3
inc
mov
lcall
pushl
sti
je
or
add
fistl
cli
out
or
and
lret
push
jp
incb
pop
test
test
test
lcall
add
in
mov
div
pop
test
xor
cmp
mov
or
jecxz
sub
lds
sub
aad
repnz
fsubrp
dec
idivl
and
je
adc
iret
aam
sbb
sbb
icebp
int3
popa
lea
sub
sub
mov
inc
jp
sti
sti
clc
xor
in
cmpsb
push
jg
jnp
inc
mov
pop
or
into
test
mov
fwait
mov
or
xchg
or
mov
mov
sbb
outsl
insl
sahf
adc
and
jmp
xchg
addr16
stc
cmpsl
fdivs
xor
daa
stos
pop
sbbl
dec
loop
lahf
cmpb
icebp
jge
mov
repnz
sbb
inc
cmp
fldt
sahf
test
mov
or
pop
testl
sbb
das
xor
or
dec
mov
sub
mov
fcomp
lahf
imull
sub
xchg
hlt
aaa
lahf
fidivs
push
xor
rcrl
inc
xchg
or
and
movsb
mov
push
or
insb
sub
rcr
cmp
in
inc
ret
and
addr16
cmpsb
test
cmpsl
rorl
mov
ror
mov
xchg
dec
popa
bound
xor
cmc
jecxz
push
mov
movsl
pop
jb
mov
inc
push
or
mov
arpl
jecxz
out
aad
in
sarl
loope
sub
dec
lds
xor
mov
sti
outsl
mov
es
inc
mov
notb
repz
push
mov
in
dec
inc
test
add
lock
inc
xchg
repz
in
jecxz
mov
vpsrlw
mov
dec
popl
xchg
dec
mov
pop
cmc
push
lods
fs
fiaddl
adc
xor
xor
push
jno
daa
fbld
pushf
dec
js
pop
push
mov
cmp
push
xor
js
cltd
cmc
imul
aas
mov
in
push
fucomp
in
movsb
sub
sbb
cmp
sub
pop
mov
or
mov
pop
hlt
jecxz
stos
inc
insl
test
loope
dec
xchg
das
pop
inc
pushf
imul
dec
jecxz
sbb
fistl
mov
out
call
dec
inc
repz
roll
fcomps
and
and
dec
dec
or
dec
jmp
out
add
aaa
xchg
fdivrs
inc
es
out
jnp
cmpsl
dec
and
or
sub
test
iret
sub
outsl
dec
dec
in
fcoml
and
inc
sbb
hlt
test
inc
or
ret
lods
mov
popf
in
mov
rcll
mov
inc
jecxz
shll
push
dec
add
int
sbb
inc
mov
mov
add
in
inc
js
xor
bswap
notl
cmp
ret
out
lods
push
testl
adcb
jecxz
movsb
inc
mov
jb
adc
cmp
xchg
or
mov
add
sbb
lock
push
jmp
dec
movsb
pop
mov
cmpb
outsl
dec
adc
mov
xor
dec
mov
jl
cmp
iret
mov
add
shll
jbe
push
daa
mov
rorl
xchg
mov
or
pop
dec
cmpsl
cmpsl
mov
or
data16
pop
xor
add
cmp
lds
adc
dec
fidivrl
push
daa
inc
stc
arpl
in
out
or
stos
inc
frstor
xor
push
fs
jp
fidivrs
out
fs
mov
jmp
dec
push
cmp
dec
fnstsw
jnp
loopne
out
sub
and
mov
pop
ja
and
dec
and
jne
rorb
sub
dec
out
add
rcll
sub
pop
adc
push
lret
xor
pop
fiaddl
cmc
jns
ds
dec
mov
jnp
lahf
lock
xchg
add
adc
out
xorb
xor
scas
fistl
lcall
add
ret
cwtl
rcl
xor
in
sub
xchg
test
popa
stos
add
js
add
nop
cwtl
iret
push
js
cmc
cmp
outsb
jne
jne
and
loopne
or
nop
sub
xchg
push
push
jl
subl
ficompl
sbb
dec
lret
xchg
rcrb
in
cmp
pop
mov
ljmp
cs
lcall
daa
outsb
inc
sbb
jl
jb
lock
add
push
mov
sub
push
rolb
fists
mov
int
sub
inc
and
lods
cltd
mov
shrd
gs
xchg
cmp
lret
or
inc
scas
dec
scas
mov
pop
sub
lock
cmpsb
loopne
mov
sub
sarl
adc
inc
fistps
mov
int
push
mov
jecxz
push
mov
dec
inc
pop
mov
xor
adc
push
push
leave
call
cmp
test
sbb
jecxz
fistps
cld
test
loop
mov
mov
or
push
and
in
test
pusha
push
pushl
js
cwtl
fnstenv
jmp
mov
jmp
xchg
cmpsb
lcall
ja
lahf
rcrb
adcb
aaa
aad
in
leave
jg
popa
mov
fldt
pop
repnz
xor
cmpsb
aaa
xor
test
xchg
sti
sbb
test
pop
nop
fnstenv
xor
mov
xor
sub
test
loope
loop
test
es
jle
scas
or
mov
push
sub
xchg
push
das
mov
adc
cmpsl
aam
mov
bound
or
fnsave
loope
clc
xchg
in
ror
xchg
pop
mov
mov
fists
gs
or
in
mulb
fstp
int3
idiv
ljmp
cs
cmpsl
leave
pop
xchg
bound
cli
lcall
imul
push
inc
inc
or
jg
out
push
aas
imul
add
mov
pop
ret
push
sub
jne
dec
gs
push
adcl
dec
shrl
ret
inc
adc
dec
stos
sub
ljmp
outsl
inc
mov
and
dec
stos
ds
test
dec
pop
out
jne
nop
rol
and
int
lret
insl
mov
jecxz
cmc
xchg
or
int
push
in
imul
iret
add
call
fldl
jge
jb
pop
cmp
inc
test
sub
fistpll
mov
out
sub
xchg
test
in
loop
mov
bound
add
std
in
gs
in
sti
js
dec
push
repnz
test
inc
add
pop
xchg
cmc
inc
aas
mov
dec
push
or
call
fwait
dec
es
or
int3
mov
fisttpl
gs
jbe
cs
cli
sti
icebp
sbb
and
nop
xlat
inc
jg
leave
and
testb
mov
sub
or
push
fcoml
arpl
jmp
push
out
stos
ret
das
jno
sbb
andl
lahf
stos
mov
push
mov
jb
cmpsl
or
cld
dec
fildl
and
lds
scas
pop
in
and
addr16
mov
iret
inc
outsb
add
frstor
mov
xchg
pop
jne
adc
test
scas
sub
or
pushf
int3
ffreep
xchg
aad
outsl
in
dec
adcb
xor
xor
mov
sti
negb
mov
sub
add
push
sbb
jnp
clc
cmpsb
jbe
mov
cmpsb
call
aam
and
incl
push
loopne
mov
data16
jge
aaa
push
mov
adc
cmc
dec
push
mov
sub
add
sahf
xorl
xor
in
dec
xor
and
add
cmc
loope
xchg
adc
inc
dec
mov
imul
loopne
xchg
xchg
mov
add
popa
push
out
bnd
and
push
adc
inc
stos
in
out
rol
push
sub
pop
dec
mov
pop
or
xor
fisttpl
in
mov
sub
add
loop
imul
push
mov
pop
pop
and
into
test
jno
shl
stos
stos
pop
xchg
std
pop
mov
cltd
lock
push
subb
cmp
dec
movsl
or
inc
push
test
inc
test
lods
mov
push
aad
mov
and
popa
insb
jecxz
scas
popf
and
test
icebp
jecxz
add
stc
mov
mov
mov
mov
or
dec
and
jbe
pop
fiaddl
aaa
fisttpll
add
mov
pop
leave
divb
jl
pop
imul
jge
ficoml
gs
cmpb
or
xchg
adc
xorb
xchg
lods
push
mov
cs
cmpxchg
bound
call
pop
jae
xchg
push
jb
fcom
arpl
rol
sahf
fstpt
pop
jne
bound
sub
add
loope
xlat
icebp
fdivs
test
mov
xchg
mov
jl
sbb
sbb
sahf
or
jb
mov
mov
xor
int3
inc
in
mov
rol
inc
and
and
sbb
fcomp
lahf
mov
jge
gs
inc
call
rcrl
repnz
add
mov
jmp
adc
stos
pop
lods
insb
out
or
sub
decl
push
adc
fsubr
int
in
cmp
jle
and
xor
pop
inc
mov
lcall
mov
js
mov
popa
sub
push
sub
adc
cmp
dec
or
xchg
mov
xchg
scas
in
leave
push
insl
push
adc
sahf
addr16
pop
inc
dec
addr16
aam
loopne
in
or
inc
push
out
sahf
mov
or
jp
push
rolb
das
and
or
or
mov
sub
push
pop
call
int3
loope
lods
cmpsl
out
pop
inc
push
or
popf
fidivl
ret
adc
adc
ljmp
imul
or
ficoml
push
xchg
and
cmp
pop
mov
xchg
xor
aas
inc
test
cltd
sub
flds
loopne
fists
mov
cld
repnz
mov
clc
or
fmuls
mov
out
rcr
mov
add
sub
shrb
pop
in
jmp
mov
inc
jg
jo
fadds
les
sbb
fsubs
sbb
sbb
mov
sub
shrl
or
xor
ret
leave
lret
mov
loopw
call
jmp
movsb
jle
push
xchg
jae
add
jns
cmp
xor
mov
mov
lahf
mov
out
xchg
mov
cwtl
mov
sbb
in
add
jne
adc
pop
repnz
ja
jmp
aaa
add
jp
movb
push
loope
into
add
sub
fs
stos
addl
or
xor
leave
mov
dec
pop
fwait
aam
push
push
outsb
mov
pop
orl
xor
aas
xchg
push
sbb
sbb
int
add
inc
xchg
pop
jae
add
dec
dec
jb
stos
pop
lret
loopne
jae
dec
sbb
out
aas
decl
pop
out
sub
push
ret
and
fsts
add
mov
mov
sub
jle
jp
push
and
lds
add
inc
ljmp
sub
stc
ficoml
enter
dec
addl
test
inc
cmpsl
cltd
add
add
mov
lret
clc
mov
jmp
mov
mov
sub
cmp
push
and
dec
push
mov
mov
cltd
sbb
xchg
insb
loop
and
sub
in
or
sub
movsl
dec
enter
pop
lahf
mov
jp
mull
movsb
sub
popa
jmp
or
js
cmpsb
call
cmpsl
call
sbb
xchg
sbb
andb
dec
frstor
jno
mov
aad
pushf
lods
pop
add
adc
popa
ds
and
inc
sub
push
mov
dec
pop
daa
outsl
repz
xor
stos
add
mov
and
lret
xor
xor
fdiv
fistl
push
and
cmp
aam
sub
leave
divps
ljmp
xor
in
and
sbb
loop
mov
fsubl
mov
adc
loop
sbb
fnstenv
pop
xor
icebp
or
cmp
push
or
insl
outsb
cmp
test
or
or
sbb
outsl
repnz
sub
clc
push
and
bound
sbb
push
push
test
cmp
mov
xchg
sti
clc
ret
push
push
xchg
sbb
push
mov
mov
sbb
push
jae
jle
sbb
lds
insb
cmp
cmpsb
add
inc
pop
xor
iret
lret
decb
mov
and
out
xor
sbb
fcmovnbe
mov
imul
jb
addr16
imul
add
iret
push
out
inc
xchg
or
es
add
jecxz
mov
push
clc
incl
test
jg
push
and
icebp
mov
and
out
dec
cmp
inc
mov
repnz
mov
pop
fimuls
jnp
mov
loopne
jmp
inc
and
mov
cmp
es
sbb
inc
repnz
or
mov
je
out
pop
imul
pop
xor
add
add
sahf
jmp
mov
in
shl
push
mov
lcall
aaa
adc
pop
pushf
das
cs
sbb
bound
cmp
inc
cltd
notl
fildl
jo
mov
imul
rorl
into
ljmp
push
xor
sbb
jb
inc
cltd
leave
xchg
outsb
into
cmp
push
enter
je
icebp
aad
aad
popf
mov
push
xlat
inc
mov
push
aaa
in
pop
imul
sbb
jbe
das
xchg
inc
pop
add
inc
jbe
dec
sbb
push
out
in
jge
sbb
jle
in
xchg
push
stos
repz
aas
jle
movsb
addb
jmp
stc
out
and
push
popf
addr16
andl
daa
bound
sti
mov
bound
shufps
lahf
testb
adc
fnstenv
lock
inc
or
fldt
sub
mov
xor
inc
test
xchg
les
push
mov
aad
pusha
iret
adc
adc
cmp
imul
xchg
inc
and
scas
ss
mov
or
pusha
and
icebp
fsubrp
pop
jne
adc
and
jb
jg
or
fnstsw
jle
sbb
push
dec
push
gs
daa
lea
call
or
fcomps
enter
fstpl
adc
movsl
scas
dec
int3
popf
lahf
mov
or
xchg
mov
mov
js
xlat
cmp
jl
push
push
or
mov
push
and
icebp
push
out
sbb
scas
inc
hlt
and
inc
enter
xorl
out
into
jnp
insl
sbbl
jnp
pop
add
push
xchg
xlat
fldl
int3
add
ret
aad
xor
enter
cmp
mov
cmp
es
fdivl
push
add
movsl
fistl
roll
jns
xlat
into
hlt
jne
fs
mov
mov
ljmp
in
sub
xchg
adc
or
les
cmp
test
aad
pop
xchg
jb
mov
adc
icebp
jne
enter
inc
aaa
and
and
cmp
movsl
and
imul
or
cld
jle
cmp
call
mov
frstor
iret
sub
xchg
repnz
int3
or
add
xor
test
dec
jbe
movsb
andb
xchg
xor
xor
pop
dec
shlb
aam
or
pop
sbb
inc
lret
test
mov
push
daa
data16
fwait
and
jle
out
popa
in
out
mov
dec
call
push
dec
inc
cmc
into
push
add
sub
sbb
mov
adc
popa
mov
adc
out
sbb
jne
pop
pop
sub
mov
cld
mov
fstpt
xchg
xor
and
and
loopne
aas
xchg
aad
in
ret
ljmp
stos
bound
push
fcompl
pop
repnz
add
popf
xchg
in
cld
insb
jmp
xchg
push
jns
ja
inc
das
in
outsb
mov
pushf
sub
dec
jnp
jno
int
xor
dec
jbe
dec
scas
js
jge
push
mov
add
iret
mov
pop
pop
sbb
xchg
jae
sbb
and
sbb
pop
scas
inc
push
dec
mov
scas
ds
xor
imul
sub
repnz
pop
adc
in
inc
xor
enter
ds
cmp
dec
mov
jns
push
jb
jae
mov
dec
pop
data16
subb
sbb
idiv
xchg
andl
push
or
xchg
or
xlat
mov
xor
hlt
cmp
dec
push
mov
cmp
add
or
jl
xchg
sbb
bound
pop
sbb
adc
scas
xor
rorb
daa
cli
pushf
enter
pop
inc
and
mov
adc
cwtl
pop
js
mov
xor
mov
push
lret
and
out
mov
into
xor
aaa
fwait
adc
jne
in
xor
mov
pop
cmp
cli
sbbb
clc
rcrl
cmovge
fildll
loopne
pop
push
dec
out
cmp
add
ds
mov
jl
or
add
mov
lcall
pushf
add
pop
cmp
jle
jl
arpl
dec
stc
int3
lahf
jae
es
jp
icebp
mov
mov
lods
add
add
cmp
fidivl
out
scas
add
adc
out
hlt
les
test
cltd
in
sbb
rorb
sbb
popw
es
jge
adc
int3
fcoml
loopne
in
mov
or
out
cwtl
fdivr
push
stos
ljmp
lods
popf
jg
mov
xchg
push
das
stc
push
xchg
pop
jno
popa
dec
test
or
fstl
cmpsl
aas
dec
das
or
push
sub
ret
jp
stos
mov
hlt
mov
ret
push
out
mov
imul
add
mov
xchg
jl
adc
add
sbb
pop
add
jb
xor
ss
and
cmpsb
popf
test
imul
sbb
dec
cmp
mov
mov
inc
sbb
test
nop
inc
mov
cmpsl
pop
sub
sub
in
inc
aas
pop
adcl
cwtl
sbb
push
xchg
addl
loope
addr16
cli
xchg
or
test
add
mov
mov
pop
xor
pop
mov
out
pop
mov
mov
xor
mov
pop
cmp
mov
jae
push
clc
stc
les
add
xchg
mov
aam
adc
xor
inc
pop
inc
test
clc
fisubrl
stos
or
stos
inc
pop
jae
pusha
adc
inc
xchg
cmp
stos
int
adc
jbe
jnp
adc
and
scas
ja
inc
outsb
sub
stos
or
and
sub
int3
mov
jb
inc
push
mov
in
or
outsb
cmp
cmp
scas
aad
add
adc
dec
push
fnstcw
cmp
pop
movsl
pop
xor
rcr
pop
bound
mov
int
cmpsl
pop
and
lods
dec
sbb
jmp
pop
sub
out
xor
push
push
or
stos
sub
cs
or
shlb
dec
jg
addr16
pop
mov
aas
dec
inc
mov
push
jnp
idivb
loopne
imulb
test
inc
popf
add
iret
aaa
lcall
ret
sarb
imulb
xlat
pop
mov
jo
addl
cmp
push
repz
pop
jp
inc
pop
push
adc
push
hlt
popa
pop
mov
xor
ror
mov
insb
cmp
and
adc
andl
fcompl
scas
and
pushl
daa
dec
pop
ljmp
jns
lcall
in
enter
push
inc
lock
xor
mov
adc
add
inc
ud0
add
pop
insl
into
sub
adc
xor
inc
mov
roll
inc
xchg
shll
js
jae
sahf
fs
inc
gs
pop
xor
jb
fucom
push
cmp
dec
xor
fstps
pop
outsl
insb
rolb
sbb
stc
mov
push
test
movsb
pop
and
add
pop
or
pop
push
ret
xchg
rcl
rclb
in
or
and
cwtl
sbb
ret
push
or
xor
add
lahf
push
outsb
rorl
adc
imul
pop
add
jmp
sub
sarl
daa
scas
push
mov
jge
sbb
punpcklwd
incl
mov
fnstcw
jne
or
ret
push
icebp
cmc
adc
xor
test
arpl
cwtl
and
int3
xor
push
dec
push
mov
inc
dec
scas
jl
jg
loope
sbb
fs
aad
icebp
sbb
pop
sub
xchg
stos
movb
iret
mov
xor
mov
pop
mov
dec
mov
pop
mov
mov
xor
mov
in
jo
lret
loop
pushf
mov
das
or
push
movsl
pop
fs
int3
add
xlat
andl
divb
pop
lock
mov
sbb
mov
or
loope
xor
leave
or
xchg
aas
or
push
mov
push
sub
and
cwtl
mov
pop
mov
call
dec
or
outsl
push
inc
jno
aas
das
push
cmp
mov
fs
sti
movsl
movsb
test
insb
fdivrl
xlat
das
xchg
add
add
pushf
enter
mov
jb
in
stos
leave
xchg
xchg
pusha
jae
add
add
dec
into
jae
lret
popa
inc
outsl
decl
pusha
inc
ljmp
fidivrl
movl
popf
arpl
sub
iret
sbb
push
mov
rcrl
push
insb
pop
daa
outsl
push
mov
sub
adc
popf
dec
dec
mov
ljmp
xchg
adc
aad
ja
rorb
xchg
loope
iret
and
lret
repz
sbb
xchg
bound
movsl
mov
shlb
lds
xor
inc
pop
mov
cmp
cs
xchg
rcrb
push
jmp
xor
stos
add
and
subb
xchg
cmpsb
jl
inc
jo
mov
out
pushf
inc
int3
nop
mov
pop
push
mov
inc
lret
xchg
sub
add
sub
pop
in
mov
pushf
inc
cmp
pop
icebp
xchg
cltd
imul
fcoms
and
dec
mov
stos
aaa
fwait
sti
jmp
lahf
sub
repnz
xchg
push
das
mov
stos
push
aam
push
in
clc
push
push
movsb
mov
in
push
fcoml
mov
mov
icebp
push
aam
sub
popf
dec
sub
je
and
push
ret
jp
or
sbb
iret
out
xor
mov
or
fidivrl
imul
roll
inc
adc
js
fisubrl
sbbl
sahf
sub
pop
ja
mov
sub
mov
rolb
out
movsb
pop
xchg
lods
fcomps
adc
dec
iret
or
cmc
outsl
add
xchg
icebp
sbb
imul
mov
sbb
imul
jne
int3
and
mov
or
pop
sub
inc
sbb
aas
push
in
xor
pop
jmp
jle
or
and
mov
or
iret
pop
adc
push
pushf
and
jle
cmp
xchg
sbb
jg
roll
xchg
rcr
cwtl
push
jmp
mov
daa
outsb
xchg
and
sub
dec
jg
jp
sahf
jmp
shl
es
fwait
ss
fsub
into
lock
xchg
ja
jo
mov
sbb
sub
out
push
fs
pop
xor
mov
aad
mov
sub
sbb
mov
or
pop
cltd
scas
popa
daa
pop
sbb
mov
repnz
mov
xor
faddl
iret
xor
nop
mov
pop
dec
xlat
ds
push
inc
je
adc
sub
sahf
imul
test
enter
jle
mov
cmpsb
dec
sbb
mov
pop
or
jb
adc
fs
adc
loopne
mov
add
jp
and
gs
xor
xchg
jge
insb
addr16
sbb
pop
inc
sbb
cltd
cmpsl
aam
popf
stos
test
jns
loopne
mov
mov
pop
and
push
aaa
xlat
movsl
imul
bound
fsubrp
mov
inc
mov
xorl
adc
scas
outsb
mov
xor
sbb
aas
or
movsb
imul
fs
dec
repz
sub
push
lock
lcall
mulb
int
leave
jp
lcall
cmp
pop
sbb
mov
or
cs
stos
mov
fnstsw
fnsave
daa
and
push
or
mov
inc
pop
pop
xchg
lret
loopne
ss
mov
lea
mov
and
cltd
xlat
mov
cmp
daa
push
cmp
and
add
aas
inc
mov
lods
sub
call
mov
fdivr
mov
push
cld
movsl
addl
xchg
pop
add
clc
mov
cmp
scas
faddl
loopne
icebp
sub
push
pop
pop
mov
movsb
cli
cmpsb
ss
sub
push
xor
pop
cmc
push
mov
mov
sub
call
cltd
mov
fwait
insb
pop
or
adc
xlat
xchg
push
cs
sub
jnp
mov
sub
ficompl
and
pop
push
pop
pop
enter
pop
arpl
loop
idivb
fdivl
sub
mov
dec
out
cltd
xchg
cmp
mov
mov
dec
xor
inc
sub
les
in
fcmovb
mov
ret
jne
cmp
in
lock
pop
jns
jle
out
imul
aas
xchg
adc
int
stc
mov
push
test
dec
add
setg
mov
std
test
loope
mov
pop
aaa
in
sbb
ss
xchg
mov
and
add
cmp
mov
shlb
or
cwtl
bound
fmull
xchg
rorb
aas
outsb
adc
lock
pop
imul
add
out
adc
lret
mov
cli
push
lods
mov
mov
insb
les
rcrl
or
cmp
jl
xchg
add
in
pop
inc
inc
imul
or
int3
mov
ffree
mov
xor
mov
sub
mov
jecxz
fsubl
adc
mov
jne
dec
lahf
clc
sbb
lods
movsb
neg
stc
imul
sbb
lods
sub
push
cli
sub
je
call
pushf
shlb
lret
mov
sub
clc
or
iret
mov
adcl
jmp
sahf
subb
es
aaa
jmp
popf
dec
pop
xchg
adc
lods
jmp
clc
stos
scas
push
or
push
loop
inc
gs
repnz
sahf
add
cmp
test
into
push
daa
enter
rclb
push
mov
ss
xchg
sub
pop
lcall
shll
ljmp
pop
inc
cld
shlb
pop
sbb
jg
test
or
incl
pop
call
pop
dec
pop
lods
lcall
mov
shrl
mov
stos
lret
mov
jno
inc
dec
adc
call
push
lret
sbb
add
inc
push
mov
adc
sti
adc
xchg
sub
mov
rolb
dec
pmulhuw
add
pop
inc
out
sub
mov
aam
scas
stos
aam
and
cltd
shll
mov
fstps
mov
fs
stc
sub
cli
mov
pop
fildl
dec
pop
jmp
out
fstpl
scas
adc
test
jle
dec
stos
cmc
inc
stos
test
dec
xchg
cmpl
xor
rorb
mov
cmpsl
add
sbb
repnz
out
aaa
clc
inc
fiaddl
insb
inc
movsb
inc
adc
adc
mov
sti
int
popf
add
cs
mov
dec
jbe
mov
addr16
jg
aaa
cld
sub
mov
mov
or
ljmp
or
xor
push
xlat
setp
mov
jbe
mov
or
out
mov
jae
mov
xchg
int
jno
arpl
mov
jecxz
mov
adc
push
mov
mov
mov
xor
push
jecxz
jns
out
pushf
xorl
xor
cmpb
sbb
popa
mov
out
mov
not
sub
jle
loop
repnz
stos
jbe
mov
jl
pop
decl
outsl
mov
add
es
sub
clc
ja
daa
jno
fsts
stc
push
setno
sub
iret
testb
lods
ret
cmpsl
es
sbb
pop
cli
ss
push
shlb
loopne
decl
mov
cmp
fdivl
jno
fisubrl
sub
bound
xchg
sbb
loopne
add
adc
add
dec
push
mov
adc
and
add
mov
push
lods
mov
test
xor
andl
jnp
out
mov
les
xor
fistps
add
mov
lea
rep
adc
sub
psubq
repnz
es
in
insb
sub
lahf
rcl
cmp
xchg
cmpsl
inc
or
movsl
shlb
pop
sub
lods
sbb
xchg
fadds
cmp
inc
add
icebp
lret
loop
mov
adc
cmp
adc
or
jno
xor
cmpsl
dec
xchg
scas
cwtl
or
pop
mov
add
imull
rclb
inc
xor
sbb
and
mov
bound
jge
arpl
sub
imul
adc
cmc
popa
sub
icebp
lods
jbe
adc
pop
repz
shll
mov
xchg
push
add
popa
mov
mov
jae
outsl
xchg
add
loope
notb
sbb
xchg
jo
xchg
in
cmp
cmp
xchg
mov
stos
dec
dec
movsb
sbb
gs
ret
push
adc
inc
shrb
cmp
jbe
icebp
sbb
sbb
sbb
pusha
lcall
mov
dec
xor
sub
lods
test
sti
push
fimull
push
pushf
iret
jb
mov
push
mov
loopne
and
xchg
scas
push
xchg
inc
xor
adc
jmp
pop
mov
sub
and
push
dec
aaa
loope
cli
rol
ret
jge
pop
sub
push
js
push
sbb
je
cld
sbb
loopne
mov
push
sbb
imul
ds
lret
mov
pop
rcrl
ds
cmpsb
push
jb
insl
dec
out
xchg
test
mov
insb
inc
inc
pop
lcall
adc
jge
std
inc
ret
fstpl
push
int
or
loop
lods
das
jl
mov
leave
inc
loop
call
jg
scas
in
xchg
adc
ret
outsb
xchg
sbb
scas
es
xchg
cmp
fdivrl
dec
xor
mov
loopne
xchg
fimuls
not
xchg
int
dec
in
push
aam
fstl
mov
out
sbb
clc
xchg
or
mov
sbb
add
psubsw
jbe
rcl
clc
xor
and
cwtl
jae
add
adc
xchg
sbb
aaa
aam
mov
push
cmp
int
pushf
inc
push
test
inc
xor
stos
mov
inc
aaa
adc
pop
hlt
sub
xor
sub
xchg
sub
in
stos
enter
mov
adc
xor
loopne
cmp
cmp
cmp
das
xor
fxch
mov
push
lods
inc
loopne
mov
inc
sbb
cld
xchg
xchg
scas
jb
and
aam
lods
movsb
pusha
mov
xor
mov
dec
mov
xor
loop
mov
jae
sbb
movsl
mov
in
xchg
inc
jae
lret
imul
cltd
stos
push
push
xor
js
and
and
add
pop
js
jno
or
pop
mov
scas
jne
ljmp
jne
xchg
push
ja
incb
sbb
jno
xchg
pop
xor
stc
popl
xor
adc
push
cld
push
inc
inc
lock
sahf
in
sub
and
dec
adc
or
stc
pusha
jge
xchg
mov
inc
cmc
cmp
fst
cmp
or
mov
pop
sbb
rcrb
xor
fstpt
icebp
adc
ret
push
mov
lcall
sub
rcrb
fisttpll
sbbl
cmp
and
nop
mov
xchg
and
mov
cmp
into
mov
or
icebp
sbb
jb
jg
dec
gs
ficoml
push
fists
and
into
inc
popa
mov
cld
sbb
mov
or
push
mov
lahf
sahf
jl
sbb
sbb
cmp
xorl
ret
stos
pop
outsl
xlat
mov
stos
or
xor
sub
enter
jnp
decl
mov
or
jnp
ja
mov
orb
mov
push
pushf
inc
jge
aaa
or
push
push
addr16
mov
or
das
jbe
sub
sub
sbb
jmp
jl
cmpsl
pop
outsl
sub
scas
and
dec
out
sub
push
adc
sub
xchg
add
jnp
sub
add
outsl
movsb
sbb
add
mov
mov
repnz
inc
loope
test
popa
rolb
pop
push
fsubp
push
jp
jbe
fwait
shrb
in
movsl
int3
jno
test
or
adc
sbb
outsl
gs
fisubs
inc
xchg
scas
movsl
rcrb
lahf
mov
aaa
sti
cmp
mov
test
imul
in
mov
sub
es
out
or
mov
lret
inc
lea
fldt
jns
jbe
movsb
mov
mov
sbb
imul
sbb
mov
push
jns
movsb
call
loop
push
push
sub
ljmp
data16
fisttpll
jl
jbe
loopne
pop
cmp
dec
mov
and
push
std
push
cmp
mov
fmull
cmpsl
jb
jne
xchg
neg
adc
sbb
hlt
adc
in
fnstsw
cmpsb
dec
ja
xor
mov
inc
xchg
lahf
jecxz
jo
and
jae
and
jb
sub
popa
sub
cwtl
jecxz
iret
insl
push
jbe
mov
sub
or
jg
in
lret
popf
dec
jo
ret
jle
aam
mov
sub
out
push
aas
mov
push
les
sub
pop
cmp
xorb
dec
xchg
pop
popa
pop
sarb
mov
aas
jmp
xor
mov
shlb
mov
test
outsl
aam
clc
bswap
sub
or
cmp
fisubs
sti
leave
jbe
lods
pop
mov
jns
pop
aam
data16
insl
and
ret
xchg
ljmp
or
dec
cmpb
dec
sub
cmp
mov
fsubrl
push
call
mov
jmp
dec
mov
pop
xchg
xchg
cmp
mov
dec
dec
sub
cmpsb
push
ss
add
mov
mov
fwait
xchg
mov
pop
mov
sbb
push
loopne
xchg
mov
test
movsl
fcomps
fimuls
pop
ds
lret
inc
outsl
aam
cld
data16
jns
inc
repz
inc
mov
arpl
mov
ljmp
das
sahf
aad
mov
push
imul
clc
pandn
int3
into
aad
aas
loop
xchg
shl
xor
push
pop
mov
mov
imul
cmp
mov
stos
xchg
aaa
mov
or
mov
xor
ret
mov
rorl
leave
cmpsl
movsb
inc
adc
test
sets
mov
js
inc
xlat
aas
mov
jg
cld
daa
and
divl
dec
adc
scas
mov
hlt
push
aas
scas
mov
sahf
pusha
data16
sub
adcb
jmp
adc
bound
subb
outsb
movsb
fwait
add
xchg
es
insb
xchg
add
ret
xchg
scas
repz
push
std
xchg
int
xchg
sub
push
ror
sbb
and
ljmp
pop
sub
sub
movsl
ss
xlat
popf
sbbl
enter
pushf
fucom
mul
inc
inc
test
xchg
int
loopne
fs
clc
lock
sbbl
pop
adc
pop
jmp
ljmp
push
and
push
std
pop
mov
fcmovnb
pop
jp
jmp
or
sub
push
aaa
mov
sti
mov
cmc
inc
or
call
or
out
jnp
test
xor
enter
aas
jp
imul
ds
mov
sub
fldt
mov
movsl
stos
pop
jb
or
stos
jg
jge
dec
test
enter
xorl
in
or
jns
adc
push
cmp
or
mov
pushf
or
stc
push
pushl
dec
adc
in
imul
inc
lret
mov
out
iret
mov
adcb
xchg
xor
mov
lock
lcall
pop
out
or
cs
icebp
loope
es
aas
mov
mov
mov
test
jns
pop
jo
fyl2xp1
mov
jae
call
adc
xchg
out
int3
sub
xor
out
inc
and
popa
add
jmp
sbb
imul
lret
insb
popa
dec
push
outsl
movsl
mov
jg
mov
test
push
xchg
cmp
xchg
sbb
sbb
fadd
out
repnz
aam
pop
mov
loope
shl
movsb
cmp
js
xchg
enter
subb
outsl
or
mov
sub
mov
cmp
aaa
jg
jle
aaa
aaa
ja
daa
mov
movsl
js
cmp
arpl
adc
inc
cmpl
pop
fimull
test
out
shlb
dec
push
and
add
mov
stos
add
push
loopne
mov
in
jmp
fsubrs
push
loope
jmp
push
stos
xchg
pop
jae
fstpl
dec
stc
mov
jnp
sub
dec
cld
cltd
xchg
bound
iret
mov
lock
xor
mov
subl
popf
dec
sbb
jnp
push
jne
sbb
xchg
xlat
or
xor
push
cli
inc
rclb
imul
shr
loopne
push
cmpsl
scas
push
leave
xlat
daa
rclb
sti
push
cmc
xor
fidivl
cmp
pushf
mov
leavew
jbe
jg
mov
dec
testl
ds
fldl
pop
inc
mov
dec
sub
dec
dec
outsb
repnz
jnp
sub
int3
cmp
mov
add
pop
addr16
stos
jbe
mov
mov
dec
nop
xchg
push
jbe
inc
std
lahf
movsb
lret
popa
les
movsb
or
out
fs
mov
jns
mov
add
xor
push
jg
jb
aad
pop
mov
daa
orb
movsl
mov
mov
insb
cmp
out
pop
out
repz
out
lahf
add
and
mov
in
int
dec
mov
push
in
inc
fdivl
inc
lret
xchg
and
outsb
out
xchg
mov
popa
sarb
outsl
or
lret
push
mov
hlt
fs
jl
pop
sti
movsb
push
sbb
sarb
popl
std
mov
sub
xor
sbb
jmp
sbb
push
or
xor
sbbb
push
out
push
imul
add
pop
idivb
rcr
mov
jb
inc
pop
imul
lock
sub
adc
pusha
jo
clc
leave
in
mov
out
js
das
inc
jae
aaa
shrb
out
out
test
cmp
mov
sub
adc
mov
aaa
mov
out
iret
dec
xchg
sub
xchg
sti
xor
push
lods
daa
int3
sbb
push
sub
sarb
jecxz
in
pop
std
cmp
or
xlat
cmp
mov
adc
push
add
mov
mov
xchg
popl
dec
rol
jge
fdivr
dec
aas
adcb
hlt
out
aam
mov
jns
mov
sahf
pop
mov
sub
ficomps
gs
stos
mov
adc
add
scas
cmp
mov
mov
mov
js
push
mov
xor
cmp
xchg
insb
and
jle
test
mov
fcmovu
jle
jge
pop
mov
xor
pop
pop
bound
rcrb
in
ds
call
lds
push
push
and
push
sub
imul
jmp
add
xchg
push
roll
push
mov
ds
clc
jb
or
imul
jb
imulb
push
negl
and
imul
lret
xchg
pop
movsl
push
sub
pusha
xchg
in
leave
add
or
lahf
pop
je
jl
push
adc
into
xor
cvtps2pd
popa
and
es
ficoms
testb
mov
out
movsl
inc
sub
add
cmp
lea
cwtl
ret
xchg
lea
es
lock
fs
call
push
pusha
jnp
dec
xor
fldenv
inc
imul
es
push
or
int3
adc
stos
icebp
inc
or
cwtl
jnp
push
adc
mov
mov
dec
sub
add
popf
add
lahf
repz
mov
jge
pushf
in
out
cmc
notb
xor
xor
push
jle
xchg
fisubrl
jb
xchg
insb
cmp
or
adc
sbb
pusha
jbe
test
movsb
cmp
scas
add
loopne
jae
lret
scas
addr16
out
xchg
das
inc
in
jecxz
int3
std
fists
in
int
mov
mov
pushf
ja
dec
lsl
push
fisttpll
push
lock
aas
jecxz
mov
imul
repnz
dec
xorb
je
jo
imul
shrb
incl
push
or
jns
push
add
notb
xor
cmp
add
xor
rorb
or
mov
mov
inc
psllq
iret
pop
inc
mov
das
dec
inc
lahf
cmp
pop
stos
shrl
adc
scas
adc
jg
arpl
loopne
stos
decl
in
mov
nop
fmulp
rcrl
out
pop
dec
movsb
xchg
cmpsb
pop
fstps
push
lret
icebp
fidivs
push
jae
fiaddl
adc
xchg
pop
sbb
pop
cmpsl
push
and
and
dec
sbb
mov
add
xchg
dec
xor
jo
dec
sbb
in
xorl
jg
lret
pop
push
sbb
bound
sub
inc
in
xor
test
es
mov
cltd
aam
cmpsl
adc
mov
push
popf
mov
neg
test
fcoms
sub
mov
fistpll
cmp
pop
fbld
sub
xor
mov
loope
pop
js
jns
std
jne
mov
nop
repnz
out
pushf
daa
je
test
insb
adc
dec
and
cmpsl
adc
xor
sub
rcr
pop
cli
or
stos
negb
xorl
xlat
adc
fcompl
inc
xor
fsubrs
shll
mov
sub
repz
mov
in
mov
sarb
movsb
movl
pop
pop
out
fs
jg
mov
xor
mov
lods
lret
fsubrs
xor
or
add
loopne
and
js
iret
pop
cmpsl
mov
adc
xchg
sub
adc
adc
icebp
lahf
ror
xchg
stos
fs
jo
mov
or
pop
sbb
int3
scas
xchg
movsb
outsb
add
loop
sub
out
je
js
jb
push
mov
adc
sub
shll
sbb
lcall
dec
jmp
mov
int3
dec
mov
into
mov
xchg
aas
push
pop
in
jne
sbb
in
mov
out
sbb
sub
out
jecxz
sbb
jnp
dec
lods
cmc
lea
cmp
xor
insl
mov
sub
sbb
xchg
arpl
xchg
inc
pcmpgtb
mov
out
jae
data16
or
lods
in
sahf
inc
xor
dec
out
arpl
in
lret
popf
les
subl
sbb
mov
or
aam
out
xacquire
daa
ljmp
pop
jb
ss
js
jae
and
ficoml
jmp
push
jns
sbb
stc
ret
xchg
mov
pop
in
repz
std
fiaddl
rclb
dec
pop
fwait
fs
cmpsb
call
mov
mov
cmpsb
je
cli
mov
pop
dec
inc
mov
cmp
imul
adc
and
shlb
and
pop
shlb
daa
daa
in
push
shll
in
cwtl
xchg
add
je
mov
jb
mov
pop
xchg
mov
push
out
inc
adc
fdivp
bound
data16
adc
mov
out
out
das
ljmp
sub
iret
repnz
jmp
xchg
add
stos
lds
jns
shll
mov
hlt
loope
or
fistl
jne
cmc
jbe
xchg
fldenv
ja
stos
xchg
push
je
xor
adc
and
pop
addr16
dec
addr16
xchg
fisttpl
lea
imul
cmp
push
dec
adc
pop
pushf
cmc
outsb
jmp
test
add
pop
xchg
popa
sub
dec
imul
in
outsb
sub
cmp
js
out
test
test
cmp
int
into
lock
outsl
movsb
into
mov
sub
outsb
xor
jae
push
icebp
movsl
incl
mov
je
cmpsl
push
pushf
pop
inc
js
and
fcompl
fsubrs
testl
pop
push
lret
cld
test
push
aaa
push
cmp
mov
xchg
pop
dec
jbe
imul
popf
xchg
aaa
inc
sarl
or
call
imul
rcrb
mov
xchg
and
pcmpeqb
ja
pop
push
dec
es
test
xchg
and
sub
xchg
push
sahf
mov
lock
fldt
mov
push
xor
test
fldt
test
mov
dec
xor
popf
test
mov
lods
or
ret
out
test
jns
pop
dec
lock
dec
leave
test
mov
mov
push
ja
dec
je
mov
add
es
and
push
mov
push
mov
pop
jl
inc
dec
mov
and
or
cmp
push
loope
shl
std
pop
xchg
test
pop
jne
lods
data16
imul
ret
je
dec
cwtl
adc
cmp
call
lret
xchg
pop
dec
lea
xlat
mov
add
aaa
sbbl
ret
stos
lcall
add
adc
lods
in
icebp
jl
test
pop
dec
shl
lods
add
sub
imul
fldlg2
or
imul
sbb
or
fs
lods
stos
pop
jle
fdivl
popf
aam
push
sub
jl
adc
out
or
push
mov
mov
shll
outsl
loop
add
movsb
insl
int
inc
mov
mov
jns
cld
fcomps
shr
adc
sub
mov
test
aad
es
sarb
jae
hlt
call
lcall
ror
test
fs
cli
xor
add
shl
jbe
outsb
shr
mov
sbbl
imul
cld
pop
call
push
push
push
sbb
testb
sahf
xchg
enter
sbb
add
repnz
out
inc
mov
popa
pop
in
ss
cmp
push
mov
cmp
and
dec
fwait
push
jae
nop
sub
mov
mov
mov
stos
inc
push
ljmp
mov
lds
jne
mov
or
sbb
loopne
arpl
sahf
out
push
push
pop
push
decb
xchg
popf
or
out
xchg
mov
mov
punpckhwd
cmp
adc
mov
out
xor
adc
dec
out
jmp
xor
insb
push
xchg
out
adc
pop
and
or
xchg
fisubrl
cmc
mov
pop
or
addr16
mov
lahf
test
and
mov
adcl
push
adc
outsb
ror
data16
xchg
xchg
push
andb
popf
push
add
loopne
test
fwait
inc
inc
cmp
inc
push
and
mov
aaa
adc
cmp
and
add
imul
inc
stos
mov
iret
iret
lcall
inc
adc
repz
dec
xchg
fadds
or
adcl
mov
pop
stc
push
cmp
call
test
popf
fsubr
int3
mov
cmp
and
and
adc
mov
jle
popa
xchg
rcrb
mov
lea
int
sbb
sub
in
or
xorl
imul
mov
rorl
mov
stc
int3
mov
xchg
sbb
dec
lods
sbb
adc
hlt
pushf
mov
lods
cmp
popf
xor
ds
jne
mov
or
xor
call
xchg
mov
mov
addb
lock
in
movb
jb
fsubs
dec
std
jp
sub
xor
repz
push
mov
fdivrl
outsl
dec
xchg
sbb
inc
sarl
jmp
cmpsb
andb
push
addr16
out
cmpb
ds
rorb
iret
shll
mov
xor
push
mov
ds
or
xor
pop
xchg
add
out
push
xor
test
lea
leave
test
mov
cmp
fdivrl
xchg
dec
sub
push
rcrl
repz
fs
aaa
sbb
xchg
sub
rorb
inc
iret
jae
pop
mov
pop
enter
jmp
jb
cltd
and
in
and
and
mov
sub
gs
xchg
aad
in
imul
cmp
and
fisttps
pop
mov
dec
sub
fs
push
fimull
xor
stc
jl
cwtl
inc
sbb
mulb
jl
in
pop
jg
add
fdivl
rol
mov
mov
pop
mov
push
xor
sarl
out
popf
push
mov
sub
arpl
adc
mov
sub
stos
ljmp
jmp
pop
sbb
push
xor
xchg
addl
pusha
stc
sub
add
xchg
sarb
add
add
jge
pop
subl
cmp
add
mov
push
add
push
scas
pop
pushl
cmp
pop
shr
enter
call
mov
cmpsl
inc
mov
dec
mov
xor
xchg
pop
in
inc
fimuls
xor
adc
rcrl
sub
aaa
pushf
ss
xor
flds
or
mov
dec
pop
fnstcw
xor
pop
imul
es
inc
fcomps
roll
sub
jnp
push
add
pusha
mov
or
dec
sub
xor
leave
aaa
cmp
add
dec
jp
cmc
into
mov
shrb
sub
inc
lret
imul
jnp
pop
mov
pop
push
push
loopne
add
pushf
out
out
leave
add
cld
inc
jge
pop
sub
add
aad
jp
add
jae
adc
mov
out
dec
or
dec
mov
or
pop
adc
mov
cmpsb
lds
pop
xor
dec
xlat
jnp
subl
cmp
sbb
lods
add
sub
or
repz
inc
adcb
das
sub
jg
ret
xor
cli
shrl
ffree
lret
lahf
movsb
lcall
ret
or
mov
ficoml
adc
inc
out
sub
adc
jl
or
pop
cld
and
jle
lret
jb
mov
rorl
and
arpl
scas
aad
iret
mov
mov
popf
and
and
fbstp
xchg
cmp
frstor
bound
inc
sub
xchg
leave
xchg
jp
ljmp
xor
inc
insb
enter
lret
cmp
loop
mov
jbe
xchg
mov
xor
and
sub
data16
jo
or
or
sub
pop
fmuls
sahf
pop
inc
push
ret
push
aam
insb
in
lds
das
incb
stc
es
pop
in
inc
jmp
mov
popf
dec
jp
bound
jo
mov
pusha
out
push
out
test
pop
and
outsb
pop
mov
dec
dec
shr
inc
xor
icebp
or
mov
aaa
pop
call
jne
addl
subb
mov
add
jno
pop
testb
push
in
dec
addr16
les
xor
cmc
jo
xchg
pop
jg
repnz
xor
lcall
nop
mov
outsl
clc
stos
mov
dec
push
push
cmp
cmp
in
movsl
lret
dec
ss
mov
pop
dec
fbld
or
fiaddl
bsf
outsl
cltd
sahf
js
stos
pop
mov
and
shr
xchg
ja
add
inc
xor
testb
out
lods
cmp
cmp
ljmp
aas
fisubl
xchg
ss
pop
xchg
jle
jae
dec
dec
shrl
mov
rcll
adc
pop
aad
xor
mov
in
add
loope
lea
xchg
pop
xor
inc
ret
fwait
dec
xchg
lahf
pop
negl
testb
dec
add
xchg
gs
nop
ret
bound
outsl
lahf
jmp
sub
ror
pusha
pop
sahf
cmp
rcrl
lods
pushf
aam
andl
sbb
jne
cltd
or
clc
call
cmpsl
ret
xchg
cmpl
xor
call
push
outsb
call
std
xor
mov
jg
cmp
jg
jno,pt
jb
and
ret
lock
sbb
ret
pop
jb
xchg
dec
test
aaa
and
cld
inc
addb
test
cmp
test
mov
adc
push
adc
into
ret
mov
bound
push
fsubs
loope
xor
sbb
jne
fidivl
jecxz
push
ds
adc
aam
fdivr
jmp
dec
ljmp
mov
mov
loop
bnd
mov
clc
pop
mov
add
movsb
dec
cli
dec
pop
or
cmpsl
add
repz
sbb
paddw
rclb
fistpll
fcoms
xchg
or
cmp
and
in
mov
leave
pop
xchg
pop
iret
or
or
scas
mov
loopne
dec
push
sbb
push
loop
lahf
leave
cmpsb
in
loope
pusha
ror
lret
lods
fistpll
loop
xor
sub
xor
fdivr
outsb
cmp
inc
mov
imul
and
popf
in
push
jae
out
data16
pushf
mov
out
loope
mov
mov
es
sahf
xor
das
cmpsl
cwtl
lock
test
xchg
das
mov
dec
cmc
mov
push
cltd
les
jmp
mov
bound
mov
lret
mov
mov
push
pop
or
insb
fs
dec
adc
lret
pop
in
ret
test
scas
or
jl
aas
popa
inc
mul
clc
scas
aas
gs
mov
mov
cwtl
push
or
jbe
stos
mov
dec
sti
cmpb
mov
repnz
mov
pushf
rep
or
sbb
dec
mov
or
mov
faddl
cmpsb
cmp
mov
shrb
adcl
or
cltd
push
mov
sbb
mov
ljmp
push
js
jmp
mov
bnd
js
pop
outsl
pop
movsb
nop
push
mov
sbb
sub
shlb
cwtl
fisubrl
jg
push
pop
or
jmp
je
out
ljmp
sahf
fwait
xchg
add
pop
dec
sbb
xchg
cmp
cmp
enter
in
cmp
aad
ss
mov
sub
jae
cltd
test
push
adc
push
push
add
sahf
adc
mov
test
jle
nop
mov
pop
add
std
pop
mov
mov
xor
mov
aas
and
sbb
inc
push
dec
adc
scas
call
addr16
hlt
aaa
mov
jnp
repz
dec
xchg
add
or
add
shrb
pop
mov
mov
push
shr
cli
mov
loopne
or
pop
dec
mov
arpl
pop
sbb
inc
push
push
mov
sbb
add
xor
decl
mov
call
andb
push
in
ds
fcomps
test
jo
ja
push
lods
lock
jb
shr
pop
push
cld
int
jbe
pop
xchg
shlb
fs
xor
les
shll
addl
sbb
aad
mov
inc
push
dec
decb
sub
mov
jbe
into
push
push
pop
movsb
pop
xor
mov
daa
xchg
popf
jle
inc
aas
in
pop
cs
jge
mov
and
xchg
mov
adc
pop
inc
scas
outsl
push
sub
sbbb
mov
xor
push
jle,pt
mov
or
lds
arpl
xor
and
jecxz
lcall
bound
out
xlat
dec
in
sbb
rcll
or
rcrl
daa
mov
dec
leave
ljmp
inc
fiaddl
loope
dec
jg
pop
mov
jecxz
xchg
repnz
rcrl
vpminsw
sub
sbb
call
and
push
movsl
icebp
ss
xchg
shlb
ret
push
daa
insl
xchg
mov
or
loop
add
dec
out
pushf
pop
cmc
sub
addl
xor
addb
push
pop
jmp
sahf
add
adc
fnstsw
cmpsl
push
mov
test
dec
call
push
rcrb
jecxz
stc
imul
leave
mov
scas
iret
and
jmp
stc
and
fucomip
mov
les
movsb
fcmovnb
les
xchg
lods
lcall
add
inc
jmp
std
into
setno
xchg
fdivl
dec
xlat
mov
jae
addb
ja
push
movsb
pop
jno
mov
cmp
lret
add
sbb
pusha
adc
cmpsb
bound
and
movsl
les
stc
add
xchg
pop
sarl
in
xchg
xchg
cmc
decb
or
pop
jmp
lods
setae
pop
out
lcall
pop
or
xchg
lret
ds
cld
nop
push
lods
divb
nopl
jo
in
dec
cmp
and
mov
popf
push
popw
and
roll
aam
sbb
pop
inc
add
inc
mov
outsb
insb
repz
loopne
jno
loope
jge
mov
repz
outsb
or
fs
fs
sti
dec
xchg
call
filds
sub
imul
or
sbb
nop
lock
sub
fldenv
mov
negl
mov
mov
mulb
pop
rorl
jno
iret
xchg
xchg
xor
cwtl
in
jl
push
or
js
sub
and
pop
or
aad
int
xor
add
repz
out
jecxz
ret
sub
insb
stc
lret
pop
cmpsl
imul
jo
mov
adc
stos
push
jnp
and
lods
mov
lods
push
xchg
mov
xchg
xchg
lret
rcrb
push
jae
or
lret
or
in
xchg
pop
ds
pop
xor
sub
movsl
xchg
lea
jg
scas
mov
cmp
sbb
xchg
jae
dec
inc
pop
dec
stos
addr16
xchg
mov
repnz
adc
hlt
xchg
jg
testb
stos
dec
push
in
adc
aam
inc
mov
out
test
daa
dec
xchg
mov
and
bound
lahf
jl
mov
jnp
out
jp
or
inc
push
iret
xor
xchg
push
dec
in
hlt
dec
inc
arpl
insl
sub
adc
lcall
jnp
xchg
ds
testb
into
shll
stos
test
adc
addr16
cld
cmp
add
xchg
mov
xor
xor
popa
inc
outsl
xlat
lea
mov
xor
sub
std
jle
xchg
repnz
out
lods
pop
xor
fwait
insb
xchg
scas
andl
add
add
push
inc
and
imul
fucomp
flds
popf
or
shll
sub
dec
xchg
ja
out
sub
or
test
mov
and
fmul
xor
cli
push
fwait
lock
fisttpl
hlt
pop
sti
inc
mov
or
mov
pop
and
fdivr
sub
mov
jle
mov
or
add
mov
out
xor
clc
mov
stos
repz
insl
sub
shlb
jno
xchg
or
sub
add
mov
ss
shrl
fwait
js
lret
adc
fneni(8087
repnz
adc
mov
add
out
inc
mov
rorl
push
adc
and
mov
shlb
dec
mov
sbb
jle
lock
add
push
mul
push
xor
xchg
js
dec
andb
xchg
lcall
push
xorb
push
mov
stc
loope
mov
sub
mov
or
sbb
mov
jb
pandn
lret
subb
rcrl
add
inc
mov
call
bound
repnz
loope
test
jo
and
add
popf
jecxz
in
jnp
in
jp
das
daa
mov
sbb
push
mov
into
je
lods
jns
std
pop
pop
mov
xor
sub
frstor
add
imul
arpl
in
push
mov
insb
in
adc
pop
dec
inc
insl
xor
imul
pop
dec
add
mov
mov
cltd
lsl
push
add
popf
arpl
sbb
out
jle
push
cs
mov
arpl
sub
movsb
xor
mov
inc
pop
outsb
jo
jae
test
mov
xor
repz
mov
loopne
cmc
aaa
fadds
out
pop
fnstcw
xor
mov
jbe
jmp
flds
outsb
fwait
cld
aad
mov
lods
push
data16
or
cmp
dec
pop
mov
xor
popf
mov
jnp
jmp
cmpsb
cmpsb
imul
aas
test
inc
cmp
sbbl
sbb
dec
push
cs
xchg
imul
push
pop
push
das
or
ror
loop
nop
pop
mov
inc
xor
cmpsb
lret
loopne
jnp
sahf
inc
bound
mov
pop
xchg
aas
mov
mov
xchg
pop
sarb
adc
or
pop
jb
xchg
bound
add
test
and
xor
add
push
je
sti
inc
cld
pop
hlt
sysexit
imul
loop
and
mov
fwait
mov
incl
pop
or
pop
les
xor
mov
inc
scas
bound
ss
mov
lret
jo
pop
cmp
cmp
shlb
es
xchg
mov
xchg
jg
mov
xchg
cwtl
inc
mov
xchg
test
mov
js
jb
test
lret
das
movsb
lret
jl
std
cmp
push
std
xor
fstl
cmpsb
jle
inc
and
add
shrb
jno
and
push
xor
rol
xchg
popf
or
pop
or
xchg
sti
icebp
xchg
push
push
loopne
je
ss
popa
test
mov
and
clc
jge
xchg
or
dec
inc
pop
add
add
sbb
or
les
jne
push
push
xlat
xchg
jb
imul
push
repz
aas
dec
not
shl
mov
inc
pop
enter
in
xorb
movsb
mov
adc
lods
ffreep
pushf
mov
dec
pop
pop
jmp
jnp
imul
jle
mov
and
daa
clc
aad
mov
dec
loopne
addr16
sub
mov
jne
sbb
sub
nop
or
lock
aad
or
adc
scas
outsb
jp
push
test
outsb
add
mov
sahf
shrb
mov
push
popf
push
dec
lods
add
jp
popa
bound
xchg
dec
sub
stos
shl
ljmp
jno
mov
push
ret
sbb
mov
fistpl
stc
lret
or
cli
outsl
loop
test
jp
lock
imul
dec
into
inc
xchg
add
sub
xchg
mov
sbb
adc
imul
ret
je
pop
lods
into
inc
jbe
sbb
mov
jae
xor
push
js
stos
popa
pop
cwtl
and
and
ss
mov
pop
popa
inc
das
and
inc
or
bound
cmp
push
pop
mov
xchg
dec
std
mov
in
mov
stos
roll
negb
cs
test
test
pop
jecxz
xchg
and
dec
loopne
sbb
mov
push
adc
cmp
repz
popa
arpl
mov
ret
insl
jmp
cmp
add
out
shlb
sbb
js
ljmp
stc
adc
fst
fimull
or
xor
sbb
push
lea
dec
inc
jmp
pop
add
xor
dec
inc
nop
mov
imul
rorb
fimull
aas
adc
ja
mov
cmp
add
mov
mov
dec
or
outsb
repnz
scas
lods
pop
sub
aaa
lret
push
jmp
jns
xor
jmp
push
data16
inc
xchg
js
cmp
pop
test
hlt
jl
add
push
cmpsb
add
cltd
mov
fsubrs
aam
push
jle
pop
in
sarb
sbb
outsb
mov
imul
add
test
xor
xchg
insl
imull
and
push
icebp
test
jmp
or
or
cmp
adc
lahf
mov
pop
insl
stos
push
or
fidivrs
and
push
popf
rcrb
jns
out
repz
sbb
mov
in
into
sub
push
or
jae
int
xchg
dec
int3
shlb
jge
push
pop
pop
and
xor
jbe
pop
fs
xchg
rorl
lds
dec
mov
pop
out
icebp
push
jae
xchg
jge
ret
mov
loop
pop
lret
mov
mov
xchg
dec
sub
adc
mov
pusha
daa
push
mov
shlb
mov
add
fisubrs
adc
mov
add
push
push
jl
pushf
mov
jecxz
sbb
movsb
lock
insb
push
data16
add
jp
out
dec
mov
inc
jne
mov
movsb
fimull
pop
push
mov
push
int3
nop
sar
mov
dec
xchg
xor
jnp
jne
add
mov
lds
int
or
popf
cmp
aam
stos
js
in
xchg
xor
cmp
sub
call
cmp
data16
sbb
cwtl
dec
jnp
jb
mov
iret
shlb
or
xchg
add
cmp
pusha
push
das
decb
lret
mov
ss
xchg
cmp
sub
scas
fwait
push
test
stos
negb
sti
shr
iret
fdivr
sub
and
lds
inc
dec
dec
movsb
rol
out
lods
movsl
inc
pop
jnp
mov
shrl
adc
push
imul
mov
jae
shlb
sbb
lahf
xor
clc
in
test
insl
in
push
fidivl
xor
mov
dec
aaa
and
mov
mov
jg
mov
rcrb
inc
and
mov
cmp
mov
push
sahf
ret
out
sub
and
and
mov
pop
pop
mov
pop
les
jnp
adc
daa
aam
sub
mov
pushf
push
dec
push
and
xchg
mov
lea
mov
movsl
xchg
std
jl
pop
outsl
iret
jno
mull
popa
sbb
stos
in
lahf
or
push
adc
push
in
rorb
mov
shlb
mov
cmp
je
pop
and
jl
dec
xchg
jae
nop
xor
sub
js
pop
push
mov
jbe
out
popf
xchg
lods
dec
mov
pop
das
repz
insl
aas
sbbb
mov
imul
jecxz
mov
push
mov
rorb
punpcklwd
sbb
push
ja
or
test
jnp
dec
sbb
into
inc
add
repnz
scas
jmp
push
mov
das
int3
fs
sti
arpl
pop
in
mul
cmc
jl
or
pop
out
inc
adc
cli
mov
xchg
rep
jb
cmp
cmp
mov
aaa
aad
test
mov
enter
cmpsl
xor
fistl
push
rclb
cs
daa
sub
mov
mov
pop
cmp
scas
cmc
pop
jle
sti
xchg
jo
cltd
pushw
add
xor
add
mov
or
push
imul
lods
dec
inc
pop
aaa
pop
xchg
aad
rcrl
push
shrb
lods
cld
or
bound
in
out
mov
push
fisttpl
mov
aad
cmpsl
push
or
or
cmp
xor
push
aad
adc
hlt
test
push
mov
sbb
imul
in
add
add
idiv
add
sub
out
mov
ret
xor
mov
adc
in
pop
jge
test
imul
add
icebp
push
or
cmpsb
das
jno
rolb
stos
imul
leave
dec
movsb
daa
jns
lahf
int3
push
rcll
mov
push
aas
clc
lods
pop
lods
insl
add
mov
push
popa
pop
xorb
or
flds
js
leave
sti
imul
ja
xchg
lea
pop
add
ficoml
xor
inc
jns
leave
arpl
loopne
jge
lods
sub
nop
or
out
test
sbb
in
outsb
xchg
mull
lods
dec
roll
test
aad
mov
stos
lea
adc
fldlg2
popa
mov
dec
mov
xchg
jo
mov
rcrl
out
jecxz
jo
xchg
add
rcr
std
mov
xor
mov
cmpsb
pop
je
lcall
fisttpl
repnz
add
mov
jb
and
insl
xchg
cmp
rolb
dec
sbb
xor
mull
cmp
sbb
cld
popl
popf
insb
adc
outsl
inc
icebp
lods
lock
dec
sub
pop
jb
lock
lret
loope
outsb
fdivs
aad
into
rcl
insb
push
mov
mov
sbb
orl
shll
mov
in
pop
cmp
sbb
div
push
sub
jne
test
and
lret
jle
fs
js
bound
xchg
push
arpl
add
push
mov
daa
scas
imul
call
lret
sbb
cmc
movsl
rcrb
or
sub
pushf
in
cmp
mov
lea
sub
mov
roll
dec
lret
or
lea
inc
shr
jno
fst
mov
pusha
aas
subl
cld
inc
inc
in
in
outsl
push
rolb
or
jae
clc
pop
pop
je
fisttps
adc
sbb
jl
frstor
mov
push
ss
jb
jl
movsl
sarb
pop
add
in
hlt
shl
pop
jae
addb
shlb
cmp
pop
cmp
adc
in
negl
jmp
pushf
jp
mulb
insl
lcall
in
inc
push
mov
pop
cmc
lret
mov
lods
pop
and
lods
or
xor
data16
cld
jle
mulb
insl
jb
cmp
mov
push
mov
and
cmpsb
sahf
sub
push
in
mov
les
sbb
pushl
push
xchg
adc
in
movsb
push
jge
and
dec
cmp
add
out
loop
jle
out
push
mov
shl
add
popf
sbb
adc
and
mov
rolb
lock
mov
adc
mov
jo
mov
add
xor
cltd
sub
xor
mov
inc
leave
xor
ja
jmp
cltd
fs
les
vxorpd
sbb
icebp
insb
cltd
fbld
lds
pop
aaa
jecxz
mov
addr16
xchg
es
sub
cli
mov
push
mov
cmp
bound
mov
arpl
mov
pushf
jle
dec
int
fsubl
popa
push
mov
push
dec
pop
cmpsl
fisttpl
jg
repnz
lret
jl
rcrl
jns
fnsave
push
imul
lods
sbb
aam
adc
add
lods
sbb
filds
sbb
popf
int
out
sti
inc
mov
std
lret
xchg
mov
mov
arpl
mov
lods
mov
inc
out
repnz
xchg
leave
xor
jnp
test
mov
xor
xor
gs
inc
call
sub
push
sub
cmp
jo
or
and
loopne
pop
and
icebp
mov
jmp
jno
mov
xor
mov
mov
or
setl
into
loopne
test
movsb
shlb
stos
jbe
je
test
enter
mov
in
subb
fidivrl
loop
pop
jne
push
mov
sub
subl
test
pop
jmp
and
or
lock
fnsave
mov
mov
add
inc
cmpsl
or
scas
mov
or
sub
pop
aas
mov
stc
mov
jmp
inc
sbb
push
in
cltd
add
inc
cmp
jne
mov
pop
push
xor
pop
fdivrp
cmp
and
mov
xchg
jo
cmp
mov
add
or
aaa
cli
mov
mov
sbbl
xchg
mov
mov
test
lods
repz
add
fisubrs
mulb
pop
je
inc
mov
mov
push
das
shlb
imul
fisubl
out
jp
cld
loop
lret
in
dec
rcr
push
lock
xchg
stos
ljmp
push
adc
xor
lock
jo
push
xchg
or
mov
xor
pop
mov
or
cmc
jno
xor
sub
or
pop
mov
fisubrs
je
mov
aas
mov
xlat
test
mov
add
sub
mov
or
dec
jge
cmp
divl
sbb
mov
push
push
shlb
test
add
adc
or
lret
jae
out
dec
mov
jl
sub
pop
mov
push
sbb
cmpsl
adc
lods
mov
jp
mov
dec
adc
mov
or
or
xchg
jne
mov
mov
or
mov
rorl
cld
maskmovq
xor
jl
sbb
sarl
movsl
pop
fnstsw
inc
add
icebp
seto
mov
in
rcl
movsb
negl
mov
mov
stos
stos
cmpsb
mov
xchg
dec
push
or
fstpt
sbb
jge
repz
adc
popl
pop
xchg
shll
stos
das
cmpb
out
inc
aam
push
xor
mov
pop
lock
icebp
jp
out
lret
popl
adc
enter
ljmp
mov
jl
lods
dec
mov
lahf
bound
pop
cmp
lcall
sub
jne
cltd
push
jle
jb
stc
fsts
cmc
fwait
sti
and
inc
daa
sbb
xlat
xor
push
sbb
inc
repz
dec
cmp
dec
imul
subl
nop
mov
xor
push
or
mov
popf
jl
xchg
xor
pop
adc
test
sbb
lret
xchg
dec
mov
cmp
call
mov
imul
pmaxub
iret
or
push
push
aam
push
mov
std
outsl
xor
addr16
pop
sti
int
push
movsl
lods
lret
int3
cmp
sbbb
pop
dec
lods
shlb
lret
aaa
push
pusha
ror
popf
cmp
dec
out
jae
pop
and
jg
xorl
push
scas
pop
sbb
cltd
xor
movsl
add
lock
push
test
xor
push
vpsraw
jne
sbb
xlat
sbb
das
sbb
adc
shr
or
cmpsb
xlat
ret
pop
movsb
test
mov
mov
mov
xor
inc
leave
stc
movb
xchg
std
cmc
cmp
xchg
in
lahf
pusha
outsl
fs
cmpsb
repnz
sbb
repnz
icebp
pop
inc
arpl
cld
ljmp
sbb
mov
imulb
rolb
sbb
jnp
jns
push
or
sub
sbb
lods
xor
xlat
xor
mov
sahf
push
cli
lcall
outsb
les
add
dec
or
mov
push
loopne
push
or
sahf
mov
mov
scas
mov
leave
push
aad
mov
and
pop
push
cltd
push
ja
imul
ds
popa
adc
stos
stos
or
push
arpl
mov
inc
mov
mov
aas
movsl
cmp
sahf
push
jecxz
aam
jle
addr16
xor
fidivrl
adc
pop
lahf
add
push
insb
pop
aaa
pushw
nop
test
hlt
pop
push
andl
xor
cmp
mov
push
mov
dec
cmp
lret
stos
pop
pusha
jp
into
add
lock
jecxz
pop
imul
arpl
shl
inc
dec
pop
dec
aad
adc
push
jb
std
in
push
or
std
movlps
adc
scas
fnsave
sub
roll
aad
fwait
adc
mov
jb
stos
or
adc
pop
push
xchg
sbb
stc
popa
pop
ds
nop
imul
add
dec
incb
jg
fmul
add
sbb
andl
xor
adc
mov
in
data16
cli
xor
jns
jae
incb
outsl
mov
aam
leave
jl
dec
pop
mov
fs
insl
xor
sbb
or
jne
jns
cld
shrb
sub
sbb
test
test
pop
jl
dec
in
jne
pop
iret
inc
fnsave
scas
addr16
ds
and
jge
int
das
cmp
xor
push
hlt
push
rorb
cmp
sbb
and
lods
in
lods
mov
dec
sub
sub
pop
sar
lods
aam
out
data16
clc
mov
test
push
dec
cmp
push
mov
jns
int
mov
mov
les
pop
lret
fnstcw
stos
push
daa
mov
xor
xorb
push
adc
pusha
sub
int3
repz
xchg
in
pop
pop
scas
push
rcll
in
adc
pop
xchg
negb
scas
adc
int3
sub
and
clc
cmpsb
jmp
outsl
fcoms
shl
adc
pop
sub
or
mov
push
xchg
stos
inc
xor
out
in
scas
mov
scas
nop
push
hlt
aad
into
and
rcr
jnp
aaa
push
fdivrp
insl
f2xm1
mov
and
scas
addr16
sub
inc
stos
push
gs
jb
mov
lret
in
stc
hlt
sti
loop
aam
adc
xor
and
ljmp
dec
cmp
aam
out
xor
clc
lret
push
jbe
and
sub
lahf
jecxz
jmp
jle
sbb
das
push
ret
xor
es
stos
ja
sbb
mov
enter
pusha
pop
bound
out
mov
jl
push
rorb
sbb
lret
cvtdq2ps
cmpsb
add
inc
iret
out
inc
out
js
not
xor
mov
cmpsl
add
dec
mov
dec
insb
int
inc
addl
movsl
and
sbb
or
add
insb
add
movsb
mov
in
inc
and
pop
testl
negl
or
xchg
int
and
fimull
jle
adc
addb
call
add
and
movsb
push
mov
stos
inc
stc
cmp
cld
mov
push
xor
jae
lahf
in
loope
loope
pusha
sub
mov
dec
add
mov
fcomip
and
cmp
fcmovne
mov
adc
in
pop
jg
scas
jbe
mov
pop
insb
out
cmpsl
call
bound
push
sarl
push
push
cli
pop
bound
enter
ja
pop
loopne
shl
inc
mov
pushf
inc
cmpsb
lods
and
xlat
xchg
data16
out
daa
mov
sbb
xchg
mov
aaa
xor
bound
cli
mov
iret
cs
ds
jmp
aas
das
and
pop
in
cs
jp
aaa
mov
pop
push
cmp
aad
imul
and
mov
lahf
rorb
lcall
jecxz
dec
pop
and
adc
in
insb
mov
je
xchg
test
dec
ljmp
pop
fwait
pop
lret
or
int
cmp
fisttpll
sbb
aas
pop
int3
push
xor
nop
movsb
jle
cmp
mov
or
lret
add
aas
insl
fadds
cwtl
test
adc
pop
cs
pop
loope
or
inc
mov
xor
clc
mov
inc
mov
mov
lret
rcll
mov
sbb
mov
fidivrs
xor
movaps
mov
push
enter
mov
xor
mov
test
or
fldenv
inc
xchg
outsl
inc
xchg
idivb
movl
push
aas
lret
mov
dec
push
mov
jnp
hlt
pop
ds
inc
adc
test
testb
push
scas
out
aad
movsl
std
loop
mov
jne
cmp
js
jmp
aas
lret
cwtl
rcll
sbb
ficompl
cmpsl
pushl
scas
rolb
pushf
cmp
mov
or
outsb
outsl
mov
mov
addr16
sbb
insl
xor
lcall
ret
mov
fiadds
sbb
push
cmpsl
cwtl
iret
sub
andb
lods
mov
adc
test
xor
cwtl
fs
pop
mov
sbb
jae
xchg
mov
lcall
fnstenv
repz
ja
hlt
cmpsl
imul
or
pop
scas
fbstp
scas
adc
mov
jg
mov
int3
inc
sarl
xchg
insb
aaa
les
out
hlt
shrl
mov
ret
pop
cltd
xchg
xor
call
insl
inc
out
cmpl
push
hlt
rorb
arpl
in
out
out
pop
push
jno
lods
test
and
int3
loope
adc
lcall
test
add
je
push
shlb
stos
push
dec
jl
sub
mov
xchg
cltd
cmpsl
aaa
add
mov
dec
rdpmc
pop
sbb
push
lret
mov
bound
mov
lret
loopne
sub
push
stc
lret
adc
xor
lsl
popa
jb
les
stos
enter
js
fwait
and
jl
aam
inc
xlat
mov
and
dec
add
movsb
dec
mov
and
mov
int3
sbb
loope
mov
xor
pop
xchg
lret
sbb
xchg
cld
dec
pushf
test
clc
fldl
shrb
test
ror
push
sub
ret
clc
shlb
xlat
xchg
loopne
adc
cmp
xor
sbbb
mov
dec
xor
push
lcall
and
sub
push
xor
adc
arpl
icebp
cmp
nop
xor
sbb
jmp
and
jle
loop
mov
or
jo
cmp
outsb
xchg
mov
iret
or
je
cltd
aas
xor
sbb
mov
mov
mov
or
mov
pop
test
xchg
inc
xor
fs
adc
popa
sbb
orb
lahf
xchg
imul
addr16
jle
xchg
push
mov
xor
add
aam
dec
loopne
add
xchg
test
adc
cmpsb
imul
pop
test
sbb
mov
add
mov
movd
mov
and
hlt
sti
push
jg
aaa
push
mov
push
test
mov
bound
jo
test
add
pusha
ret
test
mov
fwait
jmp
imul
ss
sbb
imul
mov
pop
xor
aaa
mov
int
aam
rclb
idiv
in
xor
icebp
ret
jno
loop
mov
sub
xorb
scas
dec
jecxz
push
arpl
inc
mov
dec
mov
jns
lea
pop
repz
mulb
pop
mov
jge
xchg
sti
push
ret
and
xchg
xchg
jg
mov
std
xor
sbb
jp
add
mov
mov
xchg
outsl
sar
lds
loop
push
pop
xor
xchg
push
rclb
xchg
stos
mov
rcl
mov
push
jbe
inc
iret
enter
add
pop
ret
push
mov
iret
rolb
xchg
outsl
xor
xor
jge
iret
adc
fists
inc
jb
cmp
jo
cmp
lods
push
push
mov
jb
sub
int3
sbb
cmp
out
mov
jb
ljmp
xchg
mov
fs
insl
jg
or
push
dec
js
fbld
xchg
lahf
adc
push
sub
test
mov
fcom
enter
and
xor
outsl
mulps
add
or
fwait
es
dec
out
xchg
pop
xor
scas
sti
lds
test
lock
push
mov
lods
ret
dec
xchg
push
stos
dec
cmc
fcoml
sub
mov
cmp
lahf
aam
inc
loop
sub
aad
push
push
add
cld
mov
mov
das
inc
ret
cmp
pop
int
pop
or
out
xlat
popf
insl
stos
js
jg
xchg
push
in
movsl
and
mov
adc
popf
lods
mov
dec
push
pop
lock
or
sets
dec
insb
and
outsb
sar
mov
repz
jmp
inc
arpl
icebp
sub
stos
jmp
vcvtss2sd
cmp
mov
dec
repnz
xchg
adc
outsb
fxch
sbb
imul
andl
ret
icebp
shl
enter
divl
or
sbb
xor
ljmp
stos
cwtl
test
out
je
jle
mov
mov
sti
ret
xchg
add
cmpsl
xchg
lock
push
dec
sbb
inc
out
xchg
mov
loop
mov
or
outsl
sti
push
xchg
clc
xor
cli
stos
cmpsb
sub
push
add
es
fstl
mov
scas
xchg
fnstcw
inc
pop
int
lret
mov
jo
loop
leave
jmp
lock
movsl
or
push
in
insl
dec
add
push
andb
scas
in
scas
in
lcall
hlt
stc
or
mov
adc
push
cmp
jae
dec
inc
inc
sub
in
add
adc
outsl
lret
repnz
dec
mov
push
or
or
adc
shrb
sub
fdivl
dec
inc
stc
cmp
mov
out
pop
cmp
loope
xchg
ret
scas
sbb
inc
pusha
subl
and
cmp
mov
ror
lock
out
mov
out
sti
xchg
sub
pop
sub
inc
das
and
jecxz
stos
or
call
and
or
iret
lahf
add
inc
mov
or
js
pop
in
es
sbb
xchg
fwait
adc
inc
fnstcw
mov
and
adc
inc
xchg
dec
stos
les
addb
scas
push
insl
jbe
sarl
gs
jmp
es
jnp
pusha
ficomps
lret
imul
lods
adc
pushaw
and
jmp
leave
faddl
jecxz
mov
cli
pop
mov
inc
cld
pop
imul
loope
mov
fs
adc
icebp
dec
add
dec
aaa
ljmp
jo
push
mov
ficompl
add
push
lret
adc
fcmovne
loop
popf
push
arpl
and
cltd
push
lret
adc
js
xchg
sub
das
fcompl
les
sub
movsb
sub
add
sub
dec
pop
lahf
mov
push
or
test
xor
sub
dec
dec
orl
sub
js
push
fidivs
cmp
pop
xchg
adc
or
sti
and
mov
shlb
mulb
push
inc
push
cmc
pusha
xchg
lds
sbb
test
cli
imul
std
xchg
out
jne
and
mov
mov
or
adc
mov
mov
scas
leave
adc
into
push
jne
mov
popa
xchg
push
xor
mov
xor
cmp
add
cmp
movsl
xchg
addr16
xchg
inc
aas
adc
repz
pop
xor
and
mov
movsb
adc
jns
imul
cmp
adc
sub
fidivs
in
pop
repz
pop
mov
cltd
cmc
inc
add
lret
xchg
icebp
sub
sbb
cmp
inc
add
fsts
mov
xchg
shrb
dec
inc
push
arpl
xor
sbb
pop
notl
outsb
mov
jb
xor
and
subb
or
add
js
repnz
movsl
fcoml
add
stos
bound
adc
mov
push
stc
sbb
shll
mov
incl
jns
insb
addr16
nop
aas
add
pop
lret
sti
lahf
movsl
dec
out
dec
and
nop
addl
hlt
lds
lods
add
mov
cmp
adc
inc
jbe
inc
pop
jecxz
pop
scas
arpl
xor
mov
scas
ljmp
lcall
movsb
mov
loope
aas
adc
fisttps
dec
ret
popa
and
sbb
mov
imul
ret
xor
push
push
ret
mov
test
loop
cwtl
cltd
fistpll
pushf
jno
imul
push
push
jmp
lds
mov
xor
mov
xor
movsl
cmp
mov
je
loopne
ret
lret
arpl
test
pop
xchg
adc
xor
mov
jnp
cmpsl
sub
ljmp
jno
mov
ss
test
inc
icebp
push
pop
sub
sbb
or
xor
mov
pop
into
fwait
xlat
and
loopne
mov
ret
loopne
push
pop
jle
rcrb
add
xchg
repnz
push
rclb
insl
or
inc
mov
in
xchg
dec
inc
lods
jae
mov
int3
jns
fs
mov
loopne
add
movsb
inc
out
push
out
ret
imul
add
js
push
cmp
and
out
mov
loope
sub
outsb
lahf
lcall
aaa
cmpsb
mov
jge
mov
in
icebp
xchg
jne
push
xor
nop
dec
jle
jns
ret
mov
lds
mov
das
outsb
pop
jg
je
pop
xchg
mov
and
in
arpl
outsb
pop
ljmp
enter
or
add
mov
jno
dec
mov
imul
neg
or
pop
mov
into
ret
push
jae
lods
inc
nop
arpl
aaa
push
xchg
hlt
xor
pushf
dec
stos
scas
arpl
inc
xchg
lret
fstpt
xchg
pop
inc
stos
or
pusha
mov
mov
xchg
add
mov
add
mov
mov
mov
pop
ljmp
mov
outsb
sbb
inc
mov
adc
mov
or
cmpsb
lds
or
cmpsb
xor
pop
xor
add
scas
subl
mov
popf
jmp
dec
push
repnz
cmp
pop
cmpl
add
mov
sbb
sbb
mov
inc
aaa
pop
int
and
test
push
jmp
std
adc
mov
clc
adc
push
sbb
mov
pop
sahf
out
mov
data16
icebp
ds
ror
xor
adc
loop
fbstp
or
int
pop
and
inc
mov
shrl
in
out
sbb
pop
out
data16
jbe
in
jo
or
fsubrl
sbb
xchg
mov
inc
cmp
xor
pusha
xchg
cmp
adc
mov
rcl
xchg
xor
sarl
jecxz
jp
jecxz
sub
pop
fs
out
pop
adc
or
jl
pusha
push
pop
mov
mov
jge
stc
adcl
cltd
cmp
mov
xchg
add
cld
pushf
cmp
sbb
and
lcall
xor
dec
jns
mov
out
pop
pop
ljmp
data16
pop
dec
insl
das
iret
sbb
cmp
test
cmp
shll
in
add
xchg
jo
pop
sub
fldenv
fdivrs
aam
inc
sahf
mov
pop
jmp
and
push
in
mov
sahf
dec
int3
mov
mov
adc
pop
sub
mov
std
mov
cli
xchg
movsb
lret
xor
and
loope
mov
jmp
ret
xchg
cmp
arpl
ret
push
pusha
cmp
xchg
aam
jns
lcall
in
push
pop
dec
adc
jg
rcrl
enter
push
dec
pusha
sub
ljmp
inc
lds
pusha
mov
pop
or
cmp
and
insb
and
jp
data16
test
pop
jae
lahf
pop
jo
mov
stc
stos
in
int
mov
loop
xor
inc
pop
fwait
in
mov
inc
mov
aam
ret
mov
sbb
inc
sub
popf
shl
adc
xor
fs
call
add
or
pop
cmpsl
jo
lods
mov
xchg
loop
xchg
test
data16
or
test
es
mov
push
aad
jb
sub
into
mov
nop
xchg
sbb
mov
int3
sbb
lret
push
sub
ds
or
repnz
lock
dec
loop
mov
or
add
push
push
test
mov
xchg
negl
aad
rcrb
dec
cmp
cmp
lds
scas
mulb
jae
pop
addr16
cmp
sbb
in
into
sbb
xchg
loope
shrl
in
fstpt
pop
pop
xor
add
mov
push
pop
sahf
fnstenv
mov
je
aad
lock
je
mov
stos
jl
jmp
fs
inc
insb
xchg
sbb
aas
mov
subb
mov
pop
test
ljmp
xor
fidivrs
mov
scas
sbb
out
aaa
push
mov
or
mov
jno
sbb
subl
data16
inc
jno
mov
and
or
inc
call
adc
icebp
aas
cmp
in
sbb
dec
out
clc
mov
mov
pop
or
out
push
push
es
hlt
push
in
pop
popa
js
sbb
xchg
sub
cmp
dec
xor
jb
int
gs
scas
fstl
shlb
scas
xchg
inc
mov
mov
sub
mov
sbb
xor
test
push
mov
leave
ret
add
ljmp
sbb
cltd
rclb
icebp
inc
out
adc
aas
inc
repz
xor
loope
and
aaa
lcall
ret
dec
jnp
cmp
jl
or
nop
leave
stc
dec
mov
sbb
mov
adc
dec
loope
dec
jnp
ss
inc
fdivrl
push
or
xchg
orl
jb
inc
mov
mov
imul
dec
clc
mov
push
jne
imull
insl
sub
add
pop
icebp
popa
mov
test
jo
sahf
push
mov
movsl
inc
jb
or
call
cmpsb
inc
push
inc
mov
cmp
sub
or
or
lods
cmp
into
mov
xorb
rcrb
push
dec
loope
fstpl
xchg
and
adc
adc
aas
int3
inc
flds
mov
dec
sub
add
dec
sbb
mov
mov
test
inc
sbb
pop
loope
cmp
sub
test
popa
sbbb
mov
xchg
cmp
sbb
lds
xor
xchg
loope
pushl
ret
in
outsb
lahf
inc
push
dec
adc
mov
adc
or
mov
lods
out
aam
inc
icebp
sbb
cmp
jmp
aaa
pop
jg
push
push
mov
xchg
xchg
leave
cmpsb
ret
mov
into
aad
add
fsubrp
and
popf
shlb
sbb
es
insb
xchg
cs
mov
lods
cli
xchg
stos
jp
fwait
jle
enter
push
insl
xor
cmp
cmp
xor
sahf
loop
in
mov
sti
fistl
adc
mov
or
lahf
push
jae
loope
cmp
dec
pop
in
pushf
aam
mov
mov
cmp
dec
shl
xor
addr16
pop
add
test
cmp
or
jle
lods
lret
in
pop
inc
xor
lcall
xor
xchg
dec
cmpsb
pop
loopne
mov
repnz
out
and
cmp
sbb
sub
stos
cmp
ret
xlat
add
faddp
and
adcb
mov
aad
mov
xchg
lret
cmp
rolb
ret
aad
pop
push
push
ror
lock
adc
inc
xchg
jge
cli
mov
fidivl
pop
pop
mov
rcll
hlt
dec
fs
js
mov
adc
cld
in
into
popf
push
addr16
loope
jae
das
nop
lods
aam
loop
pop
nop
sub
mov
jae
repnz
mov
push
lret
insb
movsb
shrb
test
lahf
in
out
dec
test
sub
ret
pop
inc
mov
out
add
rolb
push
fcoms
sub
int3
lds
jl
jb
xchg
mov
cltd
cmp
not
xor
mov
push
scas
mov
mov
sbb
adc
sub
enter
cmp
xor
jne
outsb
cmp
mov
xor
cmp
pop
xchg
lcall
sbb
push
and
clc
xchg
add
pop
mov
test
mov
jl
mov
adc
mov
fistps
movsb
enter
lods
cmp
jns
adc
call
hlt
xchg
add
inc
mov
lds
and
xor
aaa
js
cmp
aad
testb
ljmp
mov
mov
cmpsb
jb
stos
ds
in
or
dec
jl
and
mov
adc
ja
dec
jne
lcall
add
and
sbb
inc
xchg
mov
mov
movsb
lret
lods
test
adc
xor
or
nop
nop
repz
add
pusha
xchg
push
fadds
cld
int3
out
cmp
je
shrb
out
pop
sub
jbe
stos
cmp
sahf
xchg
arpl
icebp
aaa
fwait
pop
bound
inc
std
jmp
adc
into
add
cltd
xchg
or
or
bound
dec
ljmp
and
into
lcall
push
push
cmp
shll
dec
mov
popf
jns
out
pop
aam
lcall
jmp
mov
and
and
stos
lds
xor
fstl
add
mov
pop
pop
movsb
jns
lcall
stos
dec
in
and
mov
out
and
xchg
adc
push
pop
ss
cmp
jg
out
lods
imull
cmpb
ror
push
mov
pop
in
xchg
and
cld
cmpsb
add
jbe
fildl
in
subb
jno
xchg
pop
inc
ja
jge
testb
pop
mov
mov
js
and
mov
xchg
cmpl
in
adc
out
aaa
inc
fisttpl
or
je
and
xor
test
aaa
cld
rcll
out
scas
loope
je
lock
xor
add
xchg
fldenv
cmp
xchg
jo
pop
xchg
mov
add
mov
inc
dec
jb
xchg
cmp
repnz
mov
cltd
std
mov
bswap
pop
mov
adc
xor
push
dec
in
push
mov
cmp
pop
adc
andb
mov
or
inc
mov
mov
inc
mov
xlat
clc
pop
out
cld
cmpsl
xchg
loopne
mov
fbstp
and
mov
jbe
pop
inc
nop
js
rclb
das
lds
shr
add
or
xchg
add
or
pop
push
test
inc
fcomip
push
mov
dec
nop
add
imul
cwtl
fsubl
sub
add
dec
aas
sbbb
add
test
sub
fucomip
mov
sbb
jp
fs
pop
scas
pop
xchg
outsb
xor
and
lds
frstor
ret
loope
scas
mulb
pop
sbb
arpl
mov
mov
lahf
dec
and
xor
pop
xchg
ljmp
ret
push
and
add
push
or
lods
add
lods
xchg
add
mov
xor
movsb
jecxz
mov
pop
repnz
mov
fs
scas
popf
pop
push
jle
fnsave
loope
ret
cli
out
push
in
mov
mov
sub
pop
jo
cmp
jl
loop
jbe
adc
or
or
rcrb
and
jg
out
cmp
cmp
add
push
cmp
cmp
addr16
cmp
jg
inc
in
shrl
aaa
orb
xor
rolb
jecxz
dec
ret
lahf
dec
dec
fsubrl
lahf
loopne
std
ss
mov
sarl
jns
les
adc
sub
outsl
jl
ljmp
in
add
ss
pop
dec
xor
je
mov
movsl
subb
insl
mov
hlt
add
mov
rcrl
lcall
sbb
or
jl
insl
mov
xor
dec
in
xchg
or
dec
jmp
fimuls
sub
or
movsl
addr16
mov
shl
test
dec
and
lock
and
xchg
pushl
jno
inc
dec
and
rorb
leave
xor
inc
fwait
xor
mov
popl
dec
lea
jmp
mov
and
hlt
pop
sarl
mov
movsb
rcrb
ljmp
test
xchg
and
mov
out
stos
xchg
in
cmp
xor
add
repz
shll
mov
add
push
sub
cmp
cmp
inc
imul
xchg
rclb
data16
ja
stos
push
repnz
sbb
lcall
sbb
in
push
leave
add
orb
cmp
adc
fs
adc
js
adc
aam
dec
rsqrtps
hlt
adc
dec
out
push
xchg
cmp
imul
xchg
or
fcmovne
jae
cmp
xchg
psrlw
xor
dec
mov
sub
pop
xchg
inc
sub
fsub
inc
into
mov
ret
int
push
je
nop
sub
or
aas
mov
subl
xchg
inc
hlt
rorl
sbb
and
out
outsb
fadds
sti
pop
pop
push
addb
mov
xor
sbb
idiv
lods
lahf
pop
lcall
mov
clc
icebp
out
pop
rcrl
ret
inc
inc
inc
sti
sbb
pop
loopne
mov
sbb
subb
xchg
jo
out
push
ret
out
cmp
adc
xchg
inc
lds
cmp
lcall
js
dec
xchg
mov
daa
cmp
movsb
sbb
dec
mov
ds
mov
ret
xchg
push
jg
movsb
mov
push
jo
aad
jmp
mov
sub
loopne
adc
sti
arpl
pop
xor
popa
test
inc
jne
xchg
sbb
jns
cmp
iret
or
mov
pop
xor
mov
test
mov
arpl
xchg
call
adc
in
dec
pop
mov
ror
xchg
xchg
xchg
stos
dec
lds
mov
hlt
xor
lock
pop
xor
or
iret
stc
jg
mov
xlat
and
pop
and
or
mov
neg
jge
adc
dec
pusha
push
inc
enter
pop
aam
jmp
inc
jmp
mov
ss
adc
adc
ljmp
jmp
mov
cmpsb
mov
pop
add
je
aad
sbbb
push
pop
insb
int3
cmpsb
add
je
jnp
xor
lds
cmp
push
movsb
fidivrs
loop
hlt
lahf
cmp
cwtl
inc
mov
sub
mov
ds
loop
lret
popf
jb
sarb
mov
fistpl
mov
mov
mov
in
add
test
add
fdivl
fsubrs
sub
xorb
push
or
fnstsw
push
dec
and
negl
sub
mov
cltd
in
mov
bound
cmp
cmc
aad
cs
xchg
lret
test
push
lret
shll
jb
stc
fidivs
insl
dec
xor
sbb
push
mov
pushf
xchg
sub
mov
rclb
lods
xchg
out
loope
or
iret
cmp
adc
xor
stc
lcall
jb
inc
daa
jecxz
loop
pop
push
test
or
adc
rolb
cwtl
rcrl
inc
shlb
mov
cmp
mov
ja
add
cld
loop
inc
sar
pop
das
xorb
cld
inc
add
negb
adc
fstpl
repz
popa
cmc
push
mov
sbbl
in
push
cmp
or
add
inc
fnstsw
push
and
nop
sbb
push
xorl
inc
insb
xchg
push
pop
jge
xchg
stos
and
and
push
mov
pop
orb
roll
and
test
adc
xlat
mov
daa
andl
adc
or
inc
push
and
or
cmp
push
int3
adc
loop
insb
inc
rorl
jb
or
imulb
fwait
pop
das
mov
mov
and
fiaddl
ds
rcl
jp
xchg
dec
sbb
cmp
lods
and
mov
cmp
ds
mov
or
gs
add
dec
in
std
sar
lcall
in
aad
add
imul
pop
loop,pn
lods
push
add
in
pop
fdivrl
cmpsb
add
push
fwait
push
loopne
inc
push
add
push
outsb
jnp
dec
ljmp
cwtl
cmp
jmp
cld
hlt
loopne
sub
leave
dec
insl
std
and
jbe
les
or
dec
cmp
insb
fisubrs
js
rcll
iret
mov
arpl
push
jmp
mov
outsl
bound
xor
mov
mov
sub
lods
das
int3
pop
gs
or
mov
push
jmp
jmp
add
arpl
mov
bound
mov
lahf
pop
jge
xor
out
rolb
sub
ret
movsb
repz
push
mov
loope
sub
iret
dec
mov
jno
sub
cmp
fwait
mov
add
pop
sub
jo
ja
cmp
jo
std
pop
or
subl
pop
adc
dec
or
xchg
les
push
je
push
push
fcoms
sub
sbb
cld
add
push
mov
sub
faddl
push
xor
lock
repnz
or
sbb
and
fwait
fwait
and
ljmp
imul
stc
testb
dec
aaa
cld
sti
pop
add
jl
imul
sbb
mov
idivb
in
push
daa
sbb
sub
sbb
fwait
rcll
test
test
mov
mov
pop
pop
push
xchg
jge
pop
scas
adc
das
jecxz
fsubrl
xor
mov
notb
dec
int
lea
and
cld
cmp
jo
pop
xchg
dec
xchg
test
les
xchg
in
das
and
shll
mov
xchg
cmc
aas
push
lret
inc
movsl
xchg
cmpsb
mov
cli
inc
push
and
lods
nop
jnp
jne
cwtl
iret
test
fwait
decl
or
fdivl
shll
pop
leave
sbb
seta
sub
pushf
int3
fildl
pop
popa
movsb
clc
mov
movsl
mov
loope
mov
js
aam
pop
shl
push
subl
xchg
add
cmp
cmpb
and
or
cmp
jle
sub
call
xor
mov
data16
push
cmpsl
cld
sar
mov
mov
xchg
sub
mov
lcall
shll
push
in
out
xchg
aad
test
sbb
pusha
sarb
jle
inc
inc
out
push
mov
lods
jae
scas
test
sbb
jno
mov
and
push
inc
iret
fs
inc
mov
call
repnz
cmp
adc
jbe
cmp
call
in
lret
mov
lret
sub
jbe
sahf
sti
repz
mov
push
pop
jno
loopne
imul
fildl
or
stc
push
adc
in
popf
push
cmp
push
lcall
push
xchg
jl
xor
jge
sbb
mov
xor
xor
out
adc
or
pop
out
mov
mov
mov
pop
inc
cs
mov
sub
shlb
mov
insl
jge
and
cltd
jnp
dec
dec
jl
lods
data16
inc
test
pop
push
sub
rclb
int
call
jns
pop
test
fdivl
into
enter
loope
sbbl
aas
cld
jg
adc
dec
and
inc
out
mov
and
mov
mov
jp
mov
and
add
lcall
shlb
cmp
fwait
ljmp
pop
mov
outsl
xchg
ja
insb
dec
sti
das
outsb
jno
das
out
shufps
cmpsb
pop
pop
stos
rclb
mov
mov
int
and
xchg
sub
push
ja
jecxz
lret
ret
jle
and
jno
jg
sbb
jo
in
cltd
lods
sbb
xlat
xchg
or
cld
xor
out
lods
inc
sub
xchg
fidivrs
or
mov
lods
cld
das
popa
cmpsb
xor
loope
or
dec
imul
sub
shrb
stos
shll
inc
aaa
jl
es
sbbb
push
rcr
and
push
dec
jns
lcall
je
imul
pop
packuswb
loopne
dec
shrb
es
call
mov
inc
sub
loope
lret
xor
mov
cmp
cmpsb
push
out
icebp
pusha
ret
std
fcmovu
pop
lods
mov
xor
sbb
lods
aas
mov
jmp
xorl
dec
push
ds
scas
adc
sbb
adc
in
repnz
fldl
test
mov
insb
sbb
sbb
lea
int
mov
sbb
out
ja
xor
lea
sub
icebp
dec
loopew
mov
pop
cmc
push
lods
je
ds
cltd
mov
jbe
arpl
in
jl
inc
scas
xchg
adc
and
xor
mov
adc
xchg
aad
in
nop
std
pop
cmp
int3
pop
fisubs
inc
cmc
insl
rol
imul
mov
pop
dec
mov
pop
add
je
xchg
pushf
push
cwtl
and
cld
mov
pop
pop
pop
mov
fs
and
mov
or
addr16
add
sbb
jns
sahf
dec
push
testl
addl
xchg
icebp
fwait
loopne
dec
fisttpll
call
test
sbb
dec
dec
push
aas
mov
jge
mov
sarb
sub
add
jo
lea
lret
push
mov
fnstcw
xor
push
std
aam
inc
xchg
hlt
pop
xchg
sbb
cmp
cmpsb
xchg
mov
iret
xchg
fstl
movsb
pop
push
fwait
lcall
aaa
sub
or
jmp
pusha
imul
ret
mov
mov
enter
mov
in
push
das
mov
mov
sbb
push
call
add
cvtps2pd
lods
fdivl
xchg
dec
sub
int
mov
nop
pop
lret
sbb
enter
mov
je
dec
cli
insb
sub
idivl
pop
pop
outsb
cmp
lcall
fwait
push
cmp
std
pop
jo
or
dec
les
lcall
std
mov
mov
sbb
js
sbb
icebp
inc
cltd
stos
out
or
loopne
lcall
mov
inc
cmpsb
les
push
cmpsl
outsl
sbb
sti
es
xor
pusha
add
sub
xlat
nop
mov
lret
subl
mov
stos
push
mov
iret
xchg
or
stos
push
lret
mov
mov
inc
pop
loop
cmc
xchg
fnstenv
jns
shll
jg
push
test
inc
xchg
shll
push
arpl
lret
mov
xchg
decl
repnz
pushf
xchg
or
xchg
cmp
sub
ljmp
push
xor
movsl
in
mov
decb
adc
pop
sub
push
js
shll
cmp
inc
push
sahf
shlb
pop
dec
scas
dec
adc
icebp
loopne
cltd
mov
and
mov
inc
xchg
cmp
dec
test
sub
pop
cmp
aad
mov
sbb
xchg
add
push
fdivs
lret
lock
js
adc
aam
inc
mov
iret
adc
mov
fs
jge
dec
cld
xor
icebp
push
out
pop
dec
idivb
mov
push
and
insb
lea
bound
fimuls
cwtl
dec
xor
inc
jg
je
mov
jmp
jae
in
imul
icebp
mov
mov
fsubrl
ljmp
out
cmpsb
mov
hlt
mov
push
mov
push
scas
enter
mov
out
mov
stos
xchg
sub
or
pop
push
inc
sti
pushf
cmp
mov
int
push
adc
ret
out
cli
add
inc
mov
push
sahf
cmp
xor
push
lds
clc
daa
ljmp
push
cs
adc
in
jbe
sub
adcb
mov
jnp
xor
into
pop
std
test
sti
add
push
out
or
add
lret
jmp
and
cld
imul
int3
and
loopne
out
jge
dec
add
inc
scas
int3
sahf
scas
pop
out
lods
xchg
ds
mov
and
xor
xchg
std
movsb
cld
mov
es
test
sbb
test
mov
jae
and
add
lods
das
jp
inc
jmp
insl
adc
pop
or
push
jns
rorl
mov
adcb
pop
leave
push
shll
lds
xor
negb
mov
jo
daa
insb
or
subb
jbe
int3
cmp
inc
mov
push
pop
stos
fwait
push
fcomps
gs
and
mov
mov
rcl
jae
sbb
hlt
push
pop
jg
andl
mov
int
dec
adc
adc
shrl
les
pop
mov
fsub
and
sbb
das
cmp
pop
xchg
jmp
xor
leave
mov
xor
loope
push
jge
jmp
sub
cld
or
mov
mov
jb
cltd
xor
call
push
cmpsb
test
xchg
stc
pop
in
sub
test
sub
in
hlt
cmpsb
xchg
sub
cwtl
fwait
jb
int
adc
dec
xchg
sbb
mov
cmp
cmp
rcrb
into
mov
sub
sbb
xchg
int3
lahf
inc
mov
ds
outsb
sub
push
loopne
pop
add
enter
xchg
hlt
cmpsb
xor
pushf
push
das
aaa
les
fcomps
stos
xor
addl
loop
repnz
and
imul
fisttpll
insl
punpckhbw
jg
pop
sub
inc
xchg
cmp
nop
and
sub
or
mov
add
ss
in
kmovw
dec
and
pop
aaa
mov
or
lret
aaa
cltd
mov
out
inc
sbb
rcrl
jle
inc
xchg
dec
xchg
pop
jecxz
jmp
movsl
scas
jne
sub
js
fimull
cmp
lock
inc
std
mov
daa
fnstenv
mov
xchg
aam
jge
test
es
push
mov
popf
and
inc
sub
out
adc
xor
add
stos
popf
popf
nop
popa
arpl
ret
insl
and
daa
inc
icebp
shlb
orb
out
hlt
int
push
add
lods
bound
into
sti
dec
fdivr
lcall
sbb
jo
test
out
ljmp
mov
je
push
test
xchg
mov
scas
sub
inc
sahf
add
xchg
push
out
mov
data16
push
negb
inc
addr16
lock
cmp
cmpsl
xchg
inc
lret
lea
ficompl
outsl
adc
stos
jl
or
inc
sbb
cmp
gs
jecxz
push
dec
jl
addb
adc
xor
popa
mov
or
mov
cwtl
add
push
sbb
mov
dec
aad
push
xchg
xchg
add
mov
je
sbb
pop
adc
ja
xchg
push
dec
inc
jg
int3
int3
push
in
sbb
push
xchg
add
popa
fwait
out
fiadds
mov
aas
loope
cld
gs
mov
mov
leave
les
js
aad
mov
cli
xchg
shll
xor
pop
sub
inc
inc
cmc
mov
push
fldt
mov
sub
or
dec
dec
imul
aam
data16
rcr
adc
cltd
shr
imul
sar
mov
fisttpll
mov
aam
cmc
adc
mov
sub
sarl
gs
push
jno
dec
xor
popa
int3
xchg
orb
inc
pop
mov
jp
movsl
mov
out
pushf
js,pt
in
aam
call
pop
cvtdq2ps
fldl
cwtl
pop
cld
mov
gs
mov
loop
mov
jo
cli
lds
ficompl
shl
push
cmp
ja
jge
mov
push
mov
dec
sub
push
dec
mov
sub
cmc
jbe
inc
add
test
xor
dec
repz
mov
mov
add
pop
fadd
ds
pop
sbb
aam
or
add
sbb
hlt
cwtl
fidivrs
xor
test
sub
dec
incb
insl
into
and
adc
inc
jb
dec
xchg
cmp
aas
mov
test
insb
mov
std
andl
movsl
movb
pop
xchg
fsubs
xchg
nop
push
xchg
xchg
xor
lahf
push
jnp
push
mov
sub
mov
inc
stos
or
sti
push
movsl
fstpl
stos
sub
or
insl
jle
popa
call
lahf
and
sub
pop
push
and
add
roll
nop
fiaddl
xor
in
jecxz
jg
add
mov
mov
sarb
scas
js
in
jbe
movsb
jnp
js
cmpsb
lahf
scas
imul
xchg
adc
sbb
push
jmp
scas
push
inc
mov
aaa
inc
xchg
jmp
add
insb
roll
pushf
fnstenv
xchg
sbb
in
or
pop
mov
jle
push
sub
insb
cmpsl
and
sahf
mov
sub
bound
int3
nop
and
add
je
sbb
es
jno
je
add
sub
cmp
test
mov
std
outsl
cmp
sub
xor
jecxz
idivb
or
jns
out
jo
repnz
pop
mov
jnp
cmp
cwtl
leave
pop
outsb
negl
cmp
insb
icebp
imul
lods
and
cmpsb
test
scas
pop
inc
addr16
movsl
or
push
add
cmpsl
popw
push
repnz
add
lock
push
xchg
xchg
dec
ljmp
clc
cmp
imul
jmp
pop
aaa
or
ret
mov
cs
fdivr
push
adc
mov
jmp
jg
xor
shll
xchg
add
stos
data16
push
cmp
mov
adc
add
push
add
pop
cltd
mov
add
outsb
or
outsl
out
jmp
insb
insb
nop
pop
sub
imulb
mov
fwait
lds
pop
xchg
or
scas
cs
adc
out
mov
imul
fistpl
sub
pop
scas
cmpsl
push
icebp
fwait
pop
jae
sub
push
outsl
lods
call
scas
aam
rolb
movsb
or
or
inc
in
inc
mov
pop
mov
mov
cmp
addb
movsb
xchg
dec
das
cmp
pop
pop
repz
mov
lds
mov
cmp
and
insb
lea
rorl
pushf
subb
xchg
mov
arpl
gs
sbb
push
in
sub
pop
bound
and
dec
pop
rolb
xor
dec
jae,pn
or
mov
add
pop
mov
or
xlat
fs
popf
lret
dec
mov
add
sbb
out
std
mov
cmpsb
loope
xor
sub
jg
int3
xchg
inc
sbb
pusha
mov
roll
clc
stos
jo
fisttpll
adc
dec
in
outsb
sbb
sub
shrl
or
mov
mov
out
sub
js
test
aaa
dec
imul
cmp
aas
sub
sbb
ficomps
pop
into
jl
mov
add
sub
sbb
cmc
leave
lahf
int3
push
sub
push
out
test
aaa
jle
jge
fdivr
pusha
jbe
lahf
inc
xchg
dec
and
sub
mov
xor
cmp
add
xchg
sub
fistl
mov
outsl
cmpsb
cmovg
loope
aas
rorl
sub
int
imul
scas
jbe
ljmp
or
lods
cmpl
add
das
stc
cmp
sbb
ds
sbb
icebp
lret
sub
sar
lods
shlb
imul
and
xchg
add
sub
push
mov
scas
popf
pop
add
sub
inc
xchg
dec
leave
inc
lods
sbb
sbb
das
lret
inc
adcl
cmp
fcompl
iret
xchg
nop
orb
ja
addr16
lock
jbe
cmpsb
mov
and
jecxz
mov
cmp
fisubrs
and
jg
cwtl
imul
movsb
in
jl
test
lock
test
ljmp
fmul
cwtl
and
outsl
mov
xchg
lock
sbb
out
jp
xchg
push
add
es
aas
dec
je
adc
add
sti
jle
dec
xchg
push
out
adc
mov
push
jb
xor
and
enter
stc
mov
stos
push
pop
das
mov
inc
loope
xchg
inc
push
mov
test
call
imul
sub
add
out
imul
lea
xor
int
sbb
movsb
jae
mov
test
and
mov
and
inc
mov
cld
cmp
xchg
iret
pop
sub
cmpsb
inc
sub
mov
aam
mov
push
push
mov
xor
mov
int
je
add
out
mov
test
lods
inc
cltd
jg
add
mov
data16
adc
mov
xchg
fisubrl
fimuls
sbbb
sbb
popf
push
sahf
pop
pop
ds
mov
cld
ret
dec
cmp
subb
ds
jae
fsubr
cmp
sbb
or
fimuls
in
addl
imulb
lock
ret
lods
or
jae
inc
dec
in
jns
or
cwtl
mov
insb
xchg
add
lcall
push
movsb
ret
mov
jno
les
into
in
les
lock
leave
movsb
push
ret
test
scas
jmp
dec
xor
cmpsl
push
sub
mov
int
test
outsl
sarb
mov
jnp
push
scas
mov
inc
fsubs
cmp
mov
mov
imull
push
addr16
inc
or
out
cmp
cltd
or
sub
fcomip
fstps
sbb
loopne
lret
mov
jo
scas
pop
inc
cmp
mov
inc
xchg
arpl
mov
push
push
mov
dec
pushf
or
outsl
cmp
sub
pop
into
aas
div
xchg
stos
cs
iret
and
inc
inc
lea
xlat
push
sbb
leave
jns
je
xchg
out
subb
mov
inc
and
sub
jno
xor
push
into
shlb
jne
in
jae
push
pop
xchg
push
xor
xchg
or
jbe
pusha
jl
pop
mov
mov
test
jae
jb
add
pop
test
dec
nop
xlat
xor
sarb
mov
or
mov
test
sub
out
mov
lret
sbb
aaa
stc
add
dec
lret
pop
mov
pop
xchg
dec
negl
or
mov
aaa
or
jbe
jmp
jbe
scas
les
ss
jb,pn
push
mov
cmp
xchg
lcall
jl
pusha
mov
testl
flds
pop
fdivl
je
inc
int3
cmp
loopne
sbb
cmp
dec
aad
mov
addr16
xor
rclb
inc
into
outsl
ss
push
adc
mov
cwtl
dec
push
xor
xor
jle
inc
push
test
xlat
xor
jno
xchg
data16
es
call
scas
cmp
cmp
into
mov
cltd
and
stos
sbb
sbb
movl
dec
cwtl
ljmp
cwtl
es
mov
lea
and
mov
ficoml
dec
inc
xchg
loope
lahf
xor
cmp
enter
push
fists
and
int
in
inc
or
mov
pop
pop
adc
in
test
xchg
stos
and
cmp
xchg
push
fs
and
mov
dec
js
inc
push
addr16
inc
lods
mov
into
mov
data16
or
mov
push
or
iret
or
and
orl
insb
out
arpl
mov
and
cmp
movsl
decl
or
orb
mov
addr16
jae
popa
mov
jne
aaa
or
scas
pop
insb
xor
jmp
cmp
pop
mov
mov
jb
mov
repz
test
aam
inc
cld
cmp
orb
push
cmc
loopne
pop
andb
daa
out
rolb
dec
push
aas
mov
aad
shll
push
sub
xchg
xlat
jp
or
arpl
sti
loope
ja
jns
hlt
ja
inc
mov
push
xchg
mov
loope
dec
inc
imul
inc
aaa
xor
test
movb
sbb
xchg
je
mov
jnp
mov
xchg
leave
and
mov
jmp
and
cld
mov
push
popa
pop
jb
dec
test
adc
xchg
sbb
das
sbb
jno
loopne
mov
or
aaa
xchg
test
mov
mov
cmp
dec
sub
jmp
ds
imul
je
nop
add
imul
fcmove
xor
addb
mov
push
adc
insb
mov
rolb
jae
or
dec
mov
xchg
fs
add
cmp
xchg
xchg
scas
sarb
mov
imul
cmp
fwait
mov
mov
sbb
mov
scas
lahf
cmc
mov
test
pop
insl
fcoms
cmpsb
add
mov
cmp
push
or
mov
pop
fidivrl
cwtl
sub
xchg
imul
push
cld
xlat
test
cld
and
sbb
sub
sarb
xor
clc
cld
pop
repz
aaa
mov
lods
pop
push
scas
pushf
mov
int
mov
or
into
maxps
xor
and
inc
fildll
inc
xchg
aas
pop
jmp
nop
mov
mov
jp
xor
adc
data16
leave
mov
sub
sarb
xor
or
adc
and
jmp
jo
sbb
fldt
lock
pop
xor
fs
hlt
sub
and
aaa
jmp
sahf
inc
stos
clc
adc
fsubrl
add
andl
push
iret
or
pop
or
cmpsb
xchg
inc
andb
aam
jle
fdivl
add
sub
nop
test
repnz
sahf
xor
push
mov
mov
scas
sbb
xlat
xor
push
xlat
in
movsl
lea
jbe
enter
mov
pop
in
cltd
adc
shl
dec
sub
popf
aas
jns
enter
jns
push
jecxz
les
xchg
xor
jns
xchg
jbe
jmp
cmp
insb
jb
and
sbb
cmpsl
stos
dec
iret
xor
xor
inc
push
jg
dec
inc
xor
pop
mov
stos
push
cltd
dec
add
cmp
mov
mov
add
in
xor
mov
out
fldl
jo
insl
clc
adc
jg
mov
mov
fimuls
fisttps
data16
jge
sub
loop
stc
aaa
cld
stc
xor
dec
mov
gs
in
ja
xchg
js
cwtl
mov
int3
adc
shl
dec
inc
aad
mov
out
cmp
or
xor
ret
lret
dec
push
add
pop
pop
cmp
xchg
sub
jae
dec
xchg
cmpsl
js
test
into
sbb
jecxz
into
stc
shrl
mov
xchg
push
inc
sub
insl
dec
and
aaa
pop
push
and
push
cli
pop
or
aas
movsl
pop
loop
jbe
sub
push
cmpsb
xorb
ret
dec
ja
fiaddl
repnz
daa
dec
push
in
mov
sub
mov
xchg
test
scas
filds
nop
pushfw
cli
add
jbe
mov
scas
jbe
pusha
xor
push
or
outsb
ds
xchg
mov
fwait
jns
pop
and
dec
jb
stos
aas
imul
mov
adc
inc
shll
mov
int
push
xlat
hlt
jo
outsb
mov
sub
aam
pop
es
and
bound
repnz
pop
jge
repz
bound
ja
mov
dec
jl
rcrl
aad
jae
jmp
and
cwtl
sar
push
and
aas
adc
mov
sbb
xor
mov
adc
icebp
jns
scas
sbb
insb
jbe
sbb
cmp
xchg
iret
sub
adc
add
push
pop
xchg
adc
add
dec
aas
lahf
mov
xchg
push
data16
adc
sub
fstp
hlt
cwtl
sub
mov
mov
jl
test
insl
push
rolb
mov
push
lret
mov
in
mov
jl
bsr
inc
cmpsb
call
scas
test
fisttps
add
std
das
xor
cmpsl
add
in
xor
inc
rorl
das
es
movsl
lods
push
push
fwait
sbb
sub
sub
ja
enter
roll
aam
lcall
mov
jno
xchg
jne
cmp
into
mov
fildl
loope
fmuls
sahf
mov
fsubs
mov
mov
ljmp
stc
add
adc
dec
xorl
dec
into
mov
hlt
push
cmp
or
cmc
mov
xor
cltd
aad
loopne
xchg
les
jne
dec
lret
mov
adc
add
lret
and
adc
test
lock
xor
fcomps
sbb
adc
add
fcomps
mov
and
and
leave
sbb
aad
loop
mov
xchg
sub
clc
xor
jl
or
xchg
or
jl
jnp
sete
xchg
pop
sub
test
mov
push
mov
into
jns
sarl
ja
out
lahf
cmc
sub
dec
jmp
adc
xchg
lods
je
jns
mov
or
shlb
fsub
jge
push
pusha
pop
mov
xchg
pop
es
lea
xor
test
jmp
lahf
or
jns,pt
jbe
inc
call
xchg
mov
fs
cli
sbb
xchg
pop
cmpsb
xchg
sub
mov
pop
inc
inc
pop
mov
push
sub
lret
mov
mov
subl
xor
pop
inc
pop
leave
outsb
xor
and
loop
mov
jmp
push
fwait
stos
add
stos
adc
fwait
or
adc
arpl
add
xlat
sub
xchg
aas
out
enter
stc
cld
cltd
pop
pop
out
fsubl
mov
insl
jae
sbb
aas
insl
cmpsb
outsl
clc
add
jp
add
ds
int3
lock
jg
loop
mov
fcmovnbe
popf
ss
or
cld
mov
popf
push
xor
mov
mov
mov
adc
dec
mov
shrb
xchg
shll
stc
and
cmp
add
dec
shll
fnsave
xchg
jmp
dec
mov
dec
jbe
mov
out
subl
mov
and
or
mov
mov
xchg
cltd
mov
jne
and
bnd
xor
je
testl
aas
loop
sbbb
inc
mov
cltd
mov
mov
dec
mov
xchg
lods
xor
iret
std
inc
cld
jnp
xor
mov
out
push
cmpsb
daa
int3
cld
xchg
dec
jnp
xchg
ss
mov
arpl
fwait
pop
ja
je
ret
mov
push
loope
sbb
xchg
scas
rcrb
or
cmp
fstps
push
movsl
jge
mov
insl
arpl
cmp
mov
nop
lsl
jmp
ss
or
sti
nop
push
and
data16
scas
dec
in
push
xchg
mov
lods
test
ja
xor
call
sub
dec
fs
sub
daa
sub
icebp
repnz
sub
mov
lock
mov
or
fildll
pop
xchg
dec
xchg
mov
mov
scas
pop
insl
mov
jb
stos
sbb
sub
out
adc
leave
or
scas
lock
pcmpgtw
repnz
xorb
rcrl
push
dec
dec
aas
cmp
shr
rolb
idivl
out
sti
push
inc
sahf
push
xchg
adc
dec
cli
add
loop
xchg
outsl
stos
xchg
push
adc
jbe
test
imul
mov
ja
jbe
xchg
xchg
xlat
leave
int
in
sbb
xchg
mov
ffreep
or
addr16
push
and
inc
aas
sub
scas
jecxz
nop
jmp
inc
xchg
test
ror
loop
jb
fisttpll
inc
push
add
pop
fucomi
dec
inc
jae
popa
fwait
pusha
mov
stc
rolb
test
add
sbb
xor
sbb
rcr
adc
mov
or
inc
sbb
mov
sub
movsl
cmpsb
jle
fs
jp
cmp
and
es
int
je
shl
insl
sarb
in
lret
xchg
adc
test
cs
and
cld
repnz
pop
cmp
lds
neg
or
or
popf
mov
sti
popl
adc
fldl
xchg
and
aam
sub
cs
lds
sub
ss
mov
adc
mov
cmp
mov
and
loope
sub
sbb
mov
add
jnp
test
or
push
xchg
in
mov
sbb
jo
cmpsb
in
mov
mov
rcrb
cs
sahf
loop
mov
and
mov
inc
jge
jne
test
fidivs
jbe
rcrb
dec
outsl
xchg
push
mov
mul
mov
jae
jne
cmp
out
xor
pushf
push
fnstcw
cmpb
sbb
mov
push
pusha
imul
and
mov
arpl
into
mov
fnsave
mov
movsb
sbb
lods
mov
adc
ret
ss
enter
mov
jbe
pop
jecxz
xor
add
aad
sbb
lods
scas
fisubs
test
lahf
and
repnz
pop
bound
mov
es
adc
lret
sub
enter
mov
or
and
fsubrl
shrl
repz
mov
mov
add
fisubs
lret
push
inc
orb
frstpm(287
stc
insl
adc
cmp
fwait
push
pop
loop
insb
adc
mov
add
jle
jge
pushf
inc
push
inc
jmp
pop
outsb
xchg
fs
push
push
mov
icebp
dec
xchg
out
sbb
cs
jl
inc
mov
adc
adc
lods
mov
mov
mov
xchg
or
adc
les
in
push
nop
mov
xor
jmp
mov
into
mov
xor
push
inc
outsb
cmp
mov
mov
xchg
mov
mov
shll
ficompl
imul
sti
xor
dec
in
mov
ljmp
daa
mov
sub
pushf
xchg
dec
cmp
icebp
dec
sbb
adc
clc
adc
fildll
xor
mov
inc
jbe
jno
outsb
or
ret
and
adc
daa
cmpsl
jns
mov
test
mov
xchg
ret
out
xor
sbb
adc
mov
xorb
icebp
lds
mov
pop
outsl
jecxz
jg
sbb
push
dec
sub
or
es
call
xchg
adc
cmpsb
and
int3
stos
addr16
sub
push
sbb
js
jb
es
icebp
int
pop
mov
fisttpl
adc
sub
sub
fstpl
and
in
push
out
int
mov
mov
in
dec
jno
lret
pop
or
sbb
xchg
sub
xchg
dec
and
push
push
adc
adc
jmp
xor
aam
push
into
push
es
mov
sub
mov
push
data16
xor
mov
mov
cmp
fwait
pop
mov
sti
push
add
adc
test
mov
cmp
sub
lea
push
movsl
pop
jb
pop
sbb
xchg
mov
cwtl
add
add
xor
jno
fadds
pop
rep
inc
cli
fidivrl
sub
inc
fdivrp
cmp
jmp
mov
xchg
push
jb
int3
push
adc
movsb
or
lods
dec
test
push
add
leave
loope
push
pop
dec
jmp
stos
xor
sbb
inc
lret
adc
call
stos
aaa
imull
cmp
jmp
cld
cmpsl
dec
adc
mov
loopne
daa
xor
repz
mov
push
call
lcall
ss
out
adc
cld
push
jge
pop
pop
pop
adc
jecxz
dec
xor
lret
sbb
les
sub
mov
sti
iret
xor
movb
pop
xor
call
scas
mov
aaa
dec
cld
sub
sbb
add
sub
pop
iret
pop
xchg
ficompl
shll
ja
cmp
sub
iret
mov
pop
or
xchg
lods
andl
mov
clc
push
xchg
in
sbb
mov
and
insb
pop
push
xchg
dec
mov
fdivs
adc
jl
in
bound
mov
fsubr
cld
xchg
sub
mov
and
sub
rcll
mov
mov
rcll
mov
lret
xchg
mov
lret
mov
mov
out
adc
shlb
xor
push
daa
in
addr16
ss
leave
push
cli
scas
bound
loope
out
mov
add
insb
jns
inc
or
sub
ret
aaa
push
loope
pop
lahf
cmp
sbb
mov
and
xchg
inc
sbb
lahf
push
add
mov
push
dec
imul
cltd
ss
xor
sti
cmp
outsb
dec
aam
mov
or
aas
xor
cli
clc
cwtl
dec
mov
faddl
pop
negl
insl
pusha
arpl
cmp
and
rcrb
das
out
dec
inc
ljmp
jo
pop
mov
aaa
mov
sbb
adc
stos
fstl
movsb
sti
daa
jb
loopne
sub
dec
dec
mov
or
add
mov
push
repnz
jge
cmpb
imul
adc
js
lods
inc
data16
fisubs
bound
les
sub
testb
outsl
dec
add
pop
mov
imul
mov
mov
mov
add
adc
mov
push
add
add
pop
lock
test
or
adc
cmc
fimuls
or
inc
jmp
mov
jp
push
imul
add
jae
sub
test
and
jge
mov
mov
inc
mov
add
xor
lods
dec
cmp
pushf
in
cmp
mov
out
cli
inc
test
ljmp
pop
sbbb
ljmp
jge,pt
outsl
data16
data16
mov
mov
das
mov
pop
pop
and
mov
cmp
sub
in
jle
sbb
and
and
fisttpll
repnz
or
mov
popf
xor
rcl
fnsave
test
inc
test
nop
cmp
es
nop
xor
cmp
scas
cmp
clc
jge
rcrl
ja
pop
cmpl
daa
fstpl
push
mov
jbe
adc
mov
dec
sahf
xchg
push
or
push
xor
jle
fmull
xor
adc
dec
mov
das
inc
popf
fidivl
fisubs
int3
cs
lret
test
xchg
fdivs
sbb
or
jp
jge
sub
loopne
arpl
popf
xor
test
mov
aam
out
cmp
add
addr16
cmpsl
jae
stc
cmc
mov
cmpsb
sbbb
loopne
xchg
int3
mov
loop
xchg
or
stos
les
test
inc
and
js
clc
jb
pop
xchg
mov
fs
jmp
mov
cmp
lret
push
call
mov
test
dec
cmp
mov
aam
and
push
out
or
xchg
jle
orb
jb
jmp
sbb
cmp
ljmp
loop
push
mov
xor
or
sbb
pop
jle
xchg
xor
aas
movsl
pop
cld
mov
xorl
xchg
leave
inc
xchg
and
lods
sbb
fisubs
xchg
int3
pop
and
popa
shlb
movsl
push
cmp
and
fcmovb
gs
jmp
into
subb
or
mov
jge
iret
jae
out
xchg
pusha
cs
adc
imul
lea
adc
aaa
cli
or
icebp
mov
repnz
jl
popf
dec
fs
xlat
xlat
and
sub
dec
insl
or
ret
repz
mov
add
or
mov
cltd
xchg
push
push
rcrl
pushl
leave
js
push
adc
or
mov
test
xor
sbb
aaa
shlb
mov
mov
or
and
cwtl
fstpt
xor
pop
dec
push
xor
mov
pop
dec
push
add
jo
daa
aam
shrb
fwait
mov
pop
hlt
sbb
icebp
jb
dec
jmp
add
sub
rcrl
pushf
pop
adc
mov
into
lret
cmp
or
int
push
addr16
mov
icebp
stos
into
int
mov
mov
fsubrp
mov
test
clc
out
mov
cmp
dec
inc
push
push
mov
adc
stos
add
mov
cmpsb
mov
lret
push
es
sbb
ja
cmpsl
shll
pop
push
mov
rcll
jbe
fdivl
aad
jno
outsl
xchg
cld
movsb
test
cmp
xchg
cld
and
iret
add
xchg
cmp
jl
mov
fdiv
in
cmp
xchg
insl
jb
pop
or
cmp
dec
cli
lahf
insb
or
dec
ds
jg
mov
mov
dec
cmp
xchg
repz
neg
jge
push
dec
test
es
iret
outsl
mov
adc
dec
add
mov
mov
pop
adc
xlat
jecxz
xchg
movsb
lock
movsb
inc
inc
mov
cld
or
in
lock
push
ret
repz
popf
jmp
aas
repz
mov
adc
dec
loopne
pop
lock
mov
push
pop
outsb
mov
insl
mov
sub
shlb
loop
push
jg
push
icebp
push
mov
mov
pop
and
insb
xchg
scas
sbb
mov
dec
push
or
test
add
leave
scas
and
jno
sub
mov
push
pop
pushf
nop
mov
sbb
xor
sub
xchg
iret
cmp
jge
inc
jecxz
sbbl
out
cs
inc
rol
xchg
adc
mov
loop
cmp
jmp
mov
ret
lret
dec
jle
and
xchg
cmpsb
pushf
in
and
insb
sarb
imul
rcr
scas
and
push
lock
pop
mov
xchg
mov
fisubrl
mov
mov
xor
aas
cmp
orb
push
leave
xor
hlt
xor
jno
aad
pop
addr16
rorb
mov
lcall
lds
push
sbb
push
mov
adc
jns
cltd
dec
repz
das
add
cmp
xchg
mov
lock
imul
or
mov
ret
sub
lret
insl
jns
mov
movsb
pop
arpl
pushf
add
int
insl
movsb
sbb
jg
add
movsb
push
addl
cmp
imul
ljmp
lock
adc
sub
sbb
pop
push
jno
addr16
dec
dec
mov
pop
insl
pop
add
cmp
iret
lods
push
outsb
jne
inc
jae
addr16
pop
scas
std
icebp
xchg
stc
fcmovne
pusha
fistpll
imul
mov
xchg
cmp
rcr
mov
add
shl
add
sbbb
mov
out
xchg
mov
jno
or
xlat
pop
movsl
enter
pop
loopne
xchg
popa
stos
jnp
xchg
stos
repz
lahf
sub
xor
pop
sti
int3
push
mov
daa
idiv
negb
popf
jne
es
adc
fld
dec
je
jmp
out
and
jns
mov
std
xor
sbb
enter
addb
mov
xorl
jmp
gs
icebp
dec
cwtl
xchg
mov
jno
lods
add
xor
int3
ss
dec
aaa
jb
inc
cli
inc
dec
clc
fsubs
adcl
xorb
stc
loope
push
mov
add
mov
mov
inc
cs
cmp
mov
jns
out
jecxz
jb
adc
inc
mov
dec
jge
mov
cmpsb
mov
inc
ret
fnstsw
popf
cmp
in
lcall
xchg
je
mov
push
cmp
rcrl
lods
add
fnstcw
fsubp
mov
mov
push
add
cmp
mov
push
dec
push
adc
sub
mov
add
add
sub
gs
nop
popa
sub
inc
dec
rcrb
add
push
adc
loope
mov
jg
cs
mov
test
xchg
repz
ss
sub
cltd
xor
fcoms
scas
jnp
mov
lods
call
repnz
inc
iret
testl
pop
outsl
mov
lods
pop
add
push
ss
insl
lock
jo
and
jbe
pop
js
xchg
test
xchg
cmp
das
int
mov
inc
xchg
js
js
sub
pop
mov
ret
outsb
ret
push
les
xchg
ret
insl
cmpsl
pop
push
xchg
stos
cli
inc
jmp
xor
mov
je
arpl
lcall
repz
imul
out
mov
inc
inc
pushf
and
pop
pop
cwtl
stos
rcpps
cltd
cwtl
mov
push
shrl
int3
adc
sub
or
or
jmp
jb
jnp
mov
jns
mov
sbb
notl
xchg
mov
xor
mov
pop
imul
arpl
stc
aad
pop
cltd
imul
cwtl
lret
xor
adc
or
sub
hlt
cmpsl
mov
shl
notl
sub
imul
cmp
test
mov
adc
xor
and
mov
popa
or
iret
inc
sub
imul
ljmp
in
and
pop
push
jne
std
mov
std
pop
lea
daa
out
gs
xchg
mov
aam
adc
fcmovnu
pop
fcmovb
aad
mov
pop
add
push
aam
pop
cmp
cltd
imul
loopne
mov
les
dec
iret
xlat
lods
sarl
aas
call
adc
xchg
mov
dec
push
lcall
adc
jae
stos
push
ret
jae
mov
or
mov
cmp
sarl
pop
int
lods
push
int3
mov
das
mov
cmp
mov
add
cs
xchg
repnz
ret
xor
mov
es
inc
addb
push
in
js
int
idivb
mov
jno
inc
xchg
xor
lods
je
out
cli
or
xchg
xchg
test
jmp
mov
mov
jl
pusha
mov
and
lea
into
les
adc
add
es
and
mov
lret
mov
lds
fidivrs
jmp
cmc
aad
mov
sbb
jge
rol
call
adc
mov
mov
fadds
push
inc
decl
push
leave
mov
adc
fchs
dec
ficoms
jmp
loope
and
ret
xor
shl
dec
clc
mov
fcmovb
inc
ja
mov
das
inc
scas
or
jb
adc
mov
jle
push
jecxz
rcl
jl
dec
xchg
sbb
mov
out
xchg
popa
push
psllw
pop
mov
pop
xor
sub
rcll
sahf
dec
jo
mull
jmp
shrb
and
mov
push
test
add
xor
push
mov
adc
jne
mov
pop
pop
push
xchg
and
ret
ljmp
push
rclb
push
out
cli
jmp
cwtl
ss
push
lret
cld
jp
mov
cwtl
dec
dec
dec
dec
fucomi
xlat
and
icebp
cltd
push
mov
and
je
jo
outsl
mov
js
sbbb
push
mov
ljmp
sbb
mov
negb
or
imul
add
subb
clc
pop
stc
xchg
lds
in
dec
mov
mov
cmp
mov
cs
xor
out
in
ss
jae
arpl
mov
je
into
rorl
xchg
mov
fadds
jno
das
pop
dec
sub
xchg
pusha
add
mov
dec
xor
in
lock
pop
lcall
lahf
andb
pop
and
push
cmp
arpl
mov
push
les
pop
mov
fildll
xor
cmpsb
adc
dec
adc
jb
sbb
push
ds
and
push
or
scas
fs
imul
or
js
test
fcmovnu
test
das
lret
xchg
sahf
push
cmp
test
mov
popf
mov
lods
mov
mov
dec
sti
dec
and
lahf
push
in
mov
mov
mov
mov
data16
jns
cmp
adc
repz
inc
out
cmp
dec
lea
ja
inc
dec
sahf
out
inc
shlb
xor
inc
shrb
jg
jp
scas
add
inc
sbb
mov
scas
cld
and
or
push
cmc
sbb
outsb
jecxz
pop
ret
fldpi
or
dec
or
push
repnz
inc
jg
lds
push
stos
stos
mov
push
dec
inc
lock
loopne
imull
sbb
aaa
scas
ds
xchg
out
jb
add
je
sub
cmc
xchg
mov
push
ror
xor
adc
push
loop
jg
or
outsl
flds
arpl
bnd
out
mov
cli
scas
fst
mov
xchg
stc
in
push
or
adc
sti
inc
adc
add
lock
es
and
add
out
xlat
mov
ret
iret
subl
andl
pop
pop
jg
fnsave
mov
adc
mov
mov
dec
or
pushf
loopne
ljmp
iret
inc
add
lods
push
lahf
pop
stc
jmp
cmc
fisubs
addr16
xchg
aam
shlb
jb
mov
in
cs
gs
sub
mov
mov
iret
mov
mov
stos
add
adc
pop
inc
push
das
pushf
lret
ljmp
mov
ljmp
inc
sbb
adc
cmp
add
sarl
jl
inc
stos
or
sub
lea
cmp
or
test
mov
in
sbb
lock
sbb
fmuls
idivb
dec
ret
push
movsl
loop
cld
and
lahf
int
xchg
jg
xor
lock
scas
add
pop
jge
int
mov
jo
sub
fs
xchg
gs
nopl
mov
push
mov
add
addb
adc
test
fbld
xchg
jbe
jmp
js
jno
arpl
sar
cmp
jno
mov
and
addb
mov
jbe
sbb
dec
inc
inc
gs
jnp
ss
lea
mov
je
cmp
sbb
mov
addr16
sub
cmp
xchg
jle
fwait
data16
or
dec
divb
out
outsl
xchg
xchg
sub
ficomps
push
jns
aam
and
enter
int
mov
xor
sub
iret
push
push
idiv
mov
fwait
mov
adc
ficompl
test
push
repz
pop
fisubrs
cmp
pushf
in
dec
mov
jns
inc
aad
sti
add
pop
push
mov
adc
mov
jae
jne
ret
out
adc
mov
dec
sub
cmc
fisubs
call
popf
imul
and
mov
pop
or
or
inc
es
jle
pusha
cmp
cmp
test
lret
lret
fadd
pop
testb
mov
sbb
insl
lret
test
inc
jo
dec
mov
dec
xor
cmp
or
lahf
add
xchg
jbe
and
mov
fisubl
sarb
arpl
push
rcll
adc
cld
neg
dec
in
test
sub
movsl
xor
pop
insl
popf
mov
ljmp
mov
imul
int
mov
and
xchg
mov
mov
repnz
and
lea
or
add
ja
repnz
mov
pop
xchg
mov
adc
mov
je
inc
pop
dec
scas
shlb
bound
sarb
pop
outsb
js,pn
nop
iret
mov
std
inc
imul
xor
loope
js
add
or
int3
and
sbb
cmpsb
cwtl
fidivrs
cmp
mov
fiadds
sti
pop
mov
lcall
lret
inc
ss
enter
xchg
push
hlt
and
or
lcall
mov
movl
mov
jo
push
xor
lahf
mov
ss
mov
or
lret
sbb
sbb
icebp
mull
dec
pop
paddw
repz
mov
mov
negb
inc
fistpl
mov
loopne
test
jecxz
test
mov
inc
cmpl
shlb
icebp
pop
pusha
push
jmp
imulb
mov
pop
xchg
lds
mov
mov
inc
sbb
push
repz
or
mov
lea
xor
cmp
xor
or
push
rorl
imulb
xor
shrl
fsub
cmp
cmp
ror
push
jae
into
rclb
int
inc
icebp
ljmp
outsl
mov
shll
xchg
inc
pop
test
mov
enter
les
or
dec
push
mov
lock
mov
fdivl
and
jp
sub
and
lahf
xlat
mov
cwtl
inc
xlat
cmpsl
jae
stos
mov
jns
xor
setns
addb
pop
lock
push
fstpl
fwait
and
jnp
mov
sti
lods
bound
mov
or
fisttpl
iret
ficomps
out
cmp
jecxz
mov
shlb
jg
fs
ficoms
sub
inc
inc
sub
ljmp
or
push
les
loopne
mov
test
addb
jmp
push
inc
mov
sub
pusha
xchg
sbb
cmp
repz
mov
imul
addl
hlt
mov
out
nop
insb
iret
dec
iret
imul
stc
mov
mov
in
daa
mov
pop
sub
rclb
leave
mov
in
lock
aas
pop
pusha
int
test
lahf
inc
mov
cmp
iret
cmp
fimuls
jb
add
cmc
ret
call
pusha
mov
cmc
jle
jb
test
jmp
repz
add
test
and
jmp
dec
ficomps
js
cmc
xor
dec
icebp
jl
insl
push
pushf
mov
fisubrl
and
add
imul
jae
pop
daa
add
fcoms
data16
or
add
push
mov
jno
faddl
in
js
or
mov
rcrl
pop
pop
pop
sti
mov
cmc
mov
mov
addr16
in
inc
push
cltd
stc
jmp
pushf
add
pusha
lcall
outsl
jge
das
dec
xor
into
xor
add
test
stos
in
mov
inc
mov
mov
sub
loope
lahf
cs
movsb
mov
lods
ret
and
push
cmpsl
sarl
cwtl
jg
and
fucomip
pop
inc
add
mov
aad
mov
or
mov
xor
mov
push
lcall
add
cmp
mov
mov
mov
adcb
pop
jnp
insb
cli
int
fldenv
xlat
into
add
andb
sub
mov
frstor
out
cmp
pop
xchg
xlat
push
repz
jl
fs
lahf
out
sbb
mov
aaa
nop
xchg
xchg
cmpsl
idivb
push
ja
mov
sub
repnz
imul
test
lcall
ss
push
and
push
movsb
mov
insb
loop
test
cmpsl
out
jmp
cwtl
adc
pop
enter
and
inc
in
mov
mov
push
sahf
pushf
dec
or
sbbl
or
add
popa
mov
rcrb
mov
mov
cmp
xchg
aam
add
jb
lahf
push
push
pop
jae
cltd
pop
xlat
jbe
push
mov
xchg
or
loopne
push
push
mov
jle
fidivrs
in
es
mov
outsb
fisubl
sub
adc
call
mov
push
das
imul
hlt
ret
jmp
mov
inc
ret
das
inc
js
inc
cmp
sti
test
push
clc
jmp
inc
jb
iret
push
mov
fsubs
fists
dec
jbe
cmpsl
mov
jl
sar
mov
rcr
mov
jae
push
andl
sarb
and
leave
fs
les
int
adc
pop
lahf
lds
jg
adc
jne
sub
push
add
gs
cmc
jnp
inc
fiadds
ret
shr
fcmovbe
shl
lea
push
jne
dec
das
pop
sub
push
hlt
jle
inc
js
repnz
orb
test
xor
jecxz
repnz
or
lods
fistpll
out
lea
unpcklps
lods
jmp
sub
mov
and
in
or
pop
sti
sub
ss
jmp
and
clc
lcall
xor
mov
dec
lret
mov
and
add
xchg
movsb
push
loop
adc
cmc
insb
nop
dec
arpl
cmc
scas
dec
mov
sahf
in
push
icebp
cmp
adc
mov
js
xchg
ret
xchg
cmpsb
sbb
jmp
mov
repz
mov
ljmp
push
push
cmp
hlt
sbb
jecxz
sbb
mov
enter
sarl
xchg
mov
mov
sbb
stos
aaa
leave
push
andb
cmp
cld
cmp
loop
adc
bswap
repnz
ret
jg
mov
xlat
stos
push
xor
aam
mov
ss
popf
fcompl
sbb
aam
mov
andb
adc
scas
out
into
xchg
add
test
pop
outsb
jmp
imul
push
movb
sahf
mov
into
push
mov
pusha
pop
cmpb
movsl
xor
in
lea
das
loop
imul
sub
sub
stos
pop
rorb
pop
push
or
cmp
jb
jo
rol
inc
stos
out
movsl
add
enter
adc
fs
add
inc
daa
pop
cwtl
sub
cmpb
shl
psrld
movsl
insb
nopl
and
out
hlt
fiadds
aad
mov
scas
bound
cld
lret
jl
mov
leave
sbb
add
popl
stc
mov
fidivs
imulb
jp
pusha
xor
pop
mov
sahf
int3
jge
mov
data16
aam
aas
xor
xchg
ret
cli
xor
stc
shrb
xlat
xchg
sbb
and
sbb
xor
mov
ret
shll
insl
mov
popa
xchg
pop
or
js
aas
lcall
leave
sub
std
add
mov
ret
stos
add
mov
and
xor
or
cmc
cmp
shrl
jl
ja
or
mov
push
or
sarb
mov
stos
xchg
inc
push
shr
jae
inc
cld
or
dec
jno
cmc
dec
ds
pushf
pop
test
fistpll
sbb
lea
inc
lds
loopne
movsl
daa
sahf
ljmp
jmp
xchg
mov
aas
leave
jno
pop
inc
push
out
xchg
jmp
mov
inc
add
xchg
mov
mov
mov
jns
out
cltd
xchg
std
sbb
sti
cmpsb
jae
test
inc
push
imul
aad
lea
or
lcall
mov
push
fimull
dec
insb
push
dec
mov
lock
mov
mov
stos
fsubl
cli
and
mov
or
gs
and
sub
inc
push
pop
mov
xor
clc
push
and
jge
in
shrl
dec
push
sbb
andl
enter
mov
cltd
mov
xchg
inc
adc
push
cld
in
xor
pop
shrb
clc
jbe
out
pop
in
out
sub
ret
sbb
rol
sub
mov
jg
sbb
popa
int3
imul
dec
icebp
pop
clc
dec
sbb
pop
pop
sarb
rcr
jle
push
lahf
push
sub
popf
xchg
add
fldcw
lea
pop
xor
jo
imul
std
subb
jb
sbb
aam
rorb
cld
incb
xlat
gs
lds
jbe
xor
arpl
je
push
fisttpl
fidivs
sahf
inc
loope
inc
orb
and
jae
std
rol
push
add
mov
lcall
sbb
inc
ja
sub
ljmp
add
out
mov
inc
jbe
movsb
aad
pop
mov
ret
ds
add
lock
pop
xchg
nop
stos
insb
pmuludq
jo
stos
xchg
aas
dec
jb
add
adc
adc
cmpl
sub
jg
gs
xor
jge
xchg
mov
mov
or
push
cmp
out
icebp
fsubrs
sub
out
inc
scas
cmpsl
mov
push
fptan
cs
mov
scas
or
xchg
scas
push
sub
dec
fdivrs
dec
pop
dec
sub
fnstsw
cmpsl
cmpsb
or
aas
or
in
mov
dec
mov
leave
sbb
inc
sbbl
je
clc
int3
jns
imul
mov
xor
pop
xchg
rcrb
inc
cmp
adc
cld
leave
out
dec
fcomps
mov
bound
js
pop
sub
arpl
lcall
inc
stos
mov
mov
jae
int3
es
and
in
push
adc
adc
sub
std
in
dec
std
jnp
pop
and
push
les
not
loope
sbb
jae
icebp
pop
clc
ljmp
cmpl
inc
mov
clc
sub
xchg
jmp
cld
call
in
lret
enter
fwait
push
push
popa
push
lds
cltd
notl
fwait
lock
pop
addr16
jmp
stc
ret
push
mov
push
je
mov
mov
clc
fstpl
mov
sti
mov
push
jns
mov
outsb
fnstcw
hlt
fistpl
xchg
and
imul
xlat
int3
lret
rolb
std
gs
loopne
test
adcb
jnp
jle
sub
mov
add
dec
jo
or
fldt
inc
mov
push
fisubrs
push
ret
sub
add
add
in
xor
xor
dec
push
into
into
das
mov
insl
inc
aam
sub
pop
mov
and
jle
mov
jge
sub
ret
push
fnstsw
sub
mov
mov
dec
push
rep
mov
inc
je
insl
imul
inc
add
scas
push
push
jnp
pusha
cmpsl
neg
pusha
xchg
pop
cs
lock
rclb
leave
popa
xor
xor
mov
out
cmp
cli
jno
jge,pt
pop
cmp
ret
sbb
and
sub
lds
jecxz
rcl
je
cld
sub
imul
cmpsb
lock
leave
push
call
push
inc
sbb
jns
shr
sbb
pusha
jle
push
into
mov
inc
popa
jmp
dec
fistpl
dec
lahf
ret
loopne
xchg
inc
adc
test
sbb
cmp
xor
shll
out
loop
scas
subl
pop
movsl
or
mov
mov
xchg
pop
sub
subb
push
or
pop
xorl
test
fsubs
clc
or
stos
add
cwtl
lds
mov
push
mov
rolb
arpl
mov
es
xchg
mov
or
testb
or
nop
dec
pop
pop
and
sbb
xchg
ja
jmp
out
ja
adc
std
push
push
or
test
mov
jns
push
sbb
loop
lods
push
cmp
dec
mov
inc
incl
pop
mov
sub
enter
adc
sbb
sub
cmp
ds
ror
vmwrite
call
ret
std
add
loop
xchg
mov
dec
cs
call
mov
fwait
pop
push
push
dec
mov
gs
test
icebp
cltd
cmc
jno
enter
pop
gs
enter
js
sbb
inc
sarb
movsb
lret
add
add
into
aas
pop
dec
mov
push
mov
mov
lcall
jl
imul
xorl
jle
imul
pop
scas
or
in
stc
xchg
dec
ret
test
pop
ds
pop
sbb
sbb
lahf
subl
mov
cmp
push
mov
fbstp
adc
or
xchg
lret
int
xchg
ficompl
inc
mov
addl
dec
lret
mov
ja
int
or
inc
int
push
sbb
or
hlt
in
pop
add
mov
adc
and
push
dec
enter
enter
mov
jl
dec
xchg
push
add
push
das
dec
sbbb
dec
and
sub
mov
fisubrs
movsb
pop
xchg
daa
jl
lods
xchg
mov
insb
in
or
sub
lds
jne
cmp
pop
or
aaa
dec
jecxz
inc
orb
iret
inc
xchg
and
test
addr16
xchg
ja
fsubrs
test
lds
mov
pop
aas
call
pop
xchg
in
mov
lods
rorb
or
addl
xor
roll
cld
clc
rorl
lret
std
add
sub
rolb
dec
mov
push
les
dec
shl
clc
xchg
lods
sbb
jle
es
out
mov
inc
and
dec
addl
mov
jnp
pop
sbb
stc
mov
enter
pop
xor
or
mov
sub
or
inc
mov
and
xchg
inc
xchg
fcoml
loope
bound
sub
mov
sbb
jb
pop
xchg
insb
lock
ss
jno
inc
sub
jns
push
int3
bound
les
push
jg
fsubs
movsb
cmp
lds
fwait
insl
lret
push
rcpps
ret
cli
mov
pushf
out
add
mov
adc
cld
loope
mov
addr16
decl
out
xor
xor
rclb
je
rorl
xchg
xchg
test
cwtl
fbstp
lds
adc
ds
xorb
std
adc
and
adc
into
ss
sbb
jl
inc
mov
push
push
shl
sti
mov
das
cmp
jbe
mov
mov
jmp
fimuls
jnp
rorb
fidivl
test
adc
pop
aaa
sbbb
or
mov
ja
sub
mov
xchg
mov
or
mov
out
clc
mov
clc
sub
push
aam
test
mov
cmp
ret
imul
sub
test
add
mov
stc
lods
dec
mov
cmp
and
sub
sub
or
shll
aas
cmp
dec
cmp
jo
cli
mov
xor
rolb
or
lds
je
push
sbb
lret
mov
and
inc
pop
push
lods
bnd
jno
and
out
cld
imul
dec
es
sub
ja
xor
push
push
fcoml
addr16
mov
add
cmpsb
dec
mov
arpl
jnp
add
and
or
push
test
xor
add
pop
push
push
sbb
stos
pop
mov
fldl
cmp
dec
jg
addb
xlat
sub
je
pop
mull
icebp
addl
add
pop
hlt
mov
inc
sbbb
addl
adc
daa
add
jge
add
dec
repnz
dec
push
push
pop
addr16
into
sbb
jb
sbb
pop
stos
ret
push
out
lods
loopne
enter
daa
adc
aaa
scas
and
pop
mov
dec
repnz
enter
mov
jp
push
leave
scas
clc
push
loopne
mov
js
cld
shlb
mov
mov
push
xchg
scas
mov
and
dec
cmpsl
mov
jne
out
mov
outsb
sub
or
outsb
mov
mov
pop
into
dec
cmp
out
fwait
lock
adc
sbb
dec
cld
mov
xor
sbb
aad
mov
fs
fnsaves
lock
jne
jbe
pop
not
icebp
inc
roll
sbb
daa
repnz
daa
data16
fs
testl
shlb
mov
ret
pop
fisubl
lret
jo
outsb
dec
pop
jg
dec
and
sub
nop
sbb
adc
mov
scas
imul
cld
lods
aad
pusha
rcrl
sbb
and
jg
jecxz
mov
cmp
mov
stos
xlat
lahf
jl
mov
pop
stos
xchg
add
inc
loopne
daa
mov
push
xchg
mov
push
lea
add
insl
int3
cmpsb
cmp
cmp
lcall
mov
mov
adc
shll
mov
jecxz
cld
imul
sti
mov
sbb
and
ss
int
push
js
insl
popf
cmp
pop
push
ret
cmp
pop
addb
mov
repz
imul
xchg
add
es
out
mov
inc
cmp
fistl
xor
inc
ja
cmp
es
push
adc
cwtl
clc
arpl
jno
or
cld
xor
mov
addb
cmp
mov
fdiv
std
mov
pop
adc
lcall
push
xchg
dec
sub
xor
je
in
cltd
mov
pop
or
in
loope
arpl
sbb
addb
mov
mov
call
adc
xchg
mov
aas
nop
and
ret
insl
xchg
xchg
xor
jns
push
notb
dec
in
icebp
aas
push
dec
xchg
cmpsl
call
mov
add
xor
jle
or
cli
leave
imul
lcall
ja
jle
nop
enter
into
pop
pop
into
icebp
lods
lcall
pop
fdivp
push
lcall
aaa
sbb
sub
pop
in
mov
dec
aam
cmpl
sub
pop
jg
dec
movsb
push
ret
cmp
dec
outsb
push
gs
notl
cmp
fcom
dec
call
inc
inc
push
out
out
int3
cmp
xorl
xchg
inc
lods
jae
push
fnstcw
mov
dec
jg
daa
cmp
cmp
sbb
mov
dec
dec
mov
je
push
mov
push
js
mov
pop
mov
sahf
loop
push
inc
mov
sub
jns
xlat
pop
imul
dec
xor
prefetcht0
js
adc
into
movsb
mov
insb
cltd
in
or
jp
int
stc
add
push
fistpll
mov
sbb
add
pop
repnz
jnp
test
xchg
das
fidivl
cmp
sahf
mov
jne
mov
movsb
inc
iret
cmp
and
repz
bound
decb
ds
and
add
js
pop
xorb
add
scas
imul
mov
addr16
sub
arpl
fimuls
jne
or
mov
jge
mov
cmp
fwait
pop
mov
stos
int
iret
cmp
out
test
pop
push
jg
out
out
pop
dec
mov
sar
inc
pop
mov
or
std
fbstp
mov
dec
cltd
xchg
adc
mov
jecxz
stos
sbb
or
or
jae
dec
push
jne
dec
test
dec
dec
and
inc
dec
data16
mov
test
cmp
loope
out
imul
jno
in
sbb
push
dec
pushf
mov
dec
and
add
faddp
and
push
xchg
sbb
ja
jae
dec
xchg
ljmp
inc
fidivl
xor
xchg
jmp
push
sbb
add
xchg
xchg
popf
bound
mov
mov
jb
xchg
push
and
paddusb
jo
sbb
lret
inc
push
lods
mov
leave
dec
cmpsb
iret
iret
repnz
jae
test
xchg
pop
test
bound
icebp
sbb
fiadds
cwtl
mov
ret
aad
mov
push
xor
std
mov
xor
cwtl
mov
fnstcw
in
cld
repz
imul
insb
mov
cmp
cmc
jmp
and
sub
popa
mov
test
lret
xor
ficompl
sbb
add
ljmp
gs
cmp
lret
icebp
mov
jne
push
xor
in
cmp
mov
test
daa
mov
or
cmp
faddp
mov
int
dec
aam
pop
mov
je
mov
or
cs
mov
daa
pop
cld
lock
mov
das
sti
cmp
cltd
sarl
dec
pop
or
lods
mov
push
jno
cmp
movsb
mov
add
mov
xor
cmp
mov
js
inc
mov
leave
dec
mov
sub
scas
sub
mov
sbbb
lea
rorl
outsb
loope,pt
or
push
mov
sbb
icebp
out
ret
and
add
mov
mov
sahf
icebp
mov
adc
mov
rorb
in
dec
daa
mov
sahf
ja
test
scas
cmp
sub
mov
pop
jne
out
cmp
sub
push
dec
aad
mov
lcall
in
outsl
dec
pop
sbb
or
mov
pop
out
lock
push
test
inc
sub
mov
push
and
adc
sub
sbb
push
mov
inc
repz
xor
add
sar
cld
push
lret
stos
dec
push
add
push
test
test
xor
or
mov
mov
sub
fiadds
aaa
inc
push
sbb
sar
cmp
ss
xchg
xchg
xor
enter
cwtl
daa
in
adc
xchg
popf
xchg
out
xchg
push
in
addr16
mov
push
enter
mov
adc
out
xchg
mov
jne
fdivr
das
or
inc
data16
sbb
mov
mov
xchg
shl
cmp
repnz
bound
mov
or
outsl
push
jne
fs
pop
xchg
adc
lea
inc
add
test
sbb
jmp
in
loopne
dec
push
jbe
fcompl
aam
jecxz
inc
mov
or
cmpsl
rorb
notb
ja
adc
int
test
cltd
or
loope
inc
cltd
les
sub
mov
or
in
mov
and
xchg
jne
repz
pop
fs
test
lcall
stc
jnp
jae
movsb
inc
xor
shll
je
je
rcrl
mov
mov
lds
xlat
or
outsb
pop
pop
pushf
jns
imulb
jo
rcll
sub
push
in
jbe
or
fs
adc
jnp
sub
test
adc
sahf
xor
ljmp
mov
dec
nop
leave
cs
jae
pop
loopne
aaa
push
icebp
mov
xchg
push
cmp
push
push
mov
xchg
add
out
ffree
xchg
mov
sbb
pusha
lret
sub
dec
dec
or
xor
inc
cwtl
out
xor
stc
outsl
int3
mov
lret
jno
ror
cltd
mov
ja
int
in
inc
out
add
sbb
and
inc
push
mov
mov
mov
cmp
aam
cmp
movsb
lea
inc
sub
fwait
insl
jg
ret
sti
mov
cmp
das
leave
jae
pop
in
int3
cmpsb
push
shr
push
stos
push
hlt
xchg
ret
or
sub
cmpsl
arpl
sub
fistpl
and
jne
push
push
or
and
xorb
out
aas
xor
jne
shr
mov
mov
xchg
push
rol
sub
adc
stos
sti
xchg
xor
jl
ds
in
xor
stos
pushf
cmp
xor
sbb
cltd
jno
pop
and
outsl
test
ds
fs
and
dec
push
movsb
jbe
fsubrp
xchg
popf
aas
dec
jne
jmp
xor
iret
fnstsw
jmp
lret
arpl
jns
jns
cmp
xchg
lea
pop
push
ljmp
sbb
adc
cmp
sbb
xor
icebp
dec
adc
aad
insl
xchg
divb
mov
movsl
and
repnz
ret
outsb
mov
cmp
mov
ljmp
pop
xchg
sbb
iret
js
cli
lods
pop
cmc
mov
dec
lods
sbb
dec
mov
sub
sub
sti
stc
scas
mov
mov
add
test
into
ss
inc
mov
jno
jge
loopne
fwait
jl,pt
mov
and
imul
fdivl
insb
ljmp
inc
je
push
jb
sbb
mov
ljmp
fs
imul
gs
mov
jl
addr16
loopne
sbb
xchg
test
push
sbb
iret
lea
mov
pushl
xor
dec
xchg
rclb
cmc
sub
pop
pop
fistl
test
cli
xchg
inc
stos
xchg
dec
jp
cli
and
sbb
dec
mov
movsb
pop
inc
sbb
out
add
cmc
bound
sarb
sbb
outsb
cmp
cmp
cmp
jp
and
sbb
push
fisubs
lea
shlw
andb
dec
jg
es
jbe
icebp
inc
push
inc
repnz
nop
and
daa
mov
cmp
ret
test
fs
sub
cmp
test
xchg
xor
push
mov
into
sub
fildl
xchg
jmp
inc
outsb
inc
adc
sbbl
rorb
adc
lret
mov
cmp
test
and
incb
cmc
lds
out
mov
mov
adc
pop
sub
loopne
pop
push
popa
sub
xchg
sub
jo
js
push
push
jbe
lahf
pusha
icebp
mov
call
movsb
sub
mov
sbb
mov
mov
call
push
aas
pop
pop
lods
idivl
add
repz
cltd
xchg
adc
adc
push
add
subb
adc
or
sub
cmp
and
or
dec
out
push
jne
mov
and
pop
pop
sbb
pop
mov
icebp
pop
add
jb
flds
loop
je
test
out
test
shrb
mov
addr16
mov
aad
pop
aas
fsts
cmp
dec
jge
lods
arpl
cmp
int
pop
dec
mov
adc
rcll
leave
mov
adc
mov
pop
inc
fisttps
insb
ret
negb
lods
sti
add
cmpsl
mov
roll
cmp
push
insb
xchg
dec
jnp
insb
mov
jecxz
and
xchg
jl
clc
fimull
inc
imul
mov
mov
rcrl
xor
outsb
push
pop
jp
jg
push
or
mov
lcall
inc
adc
cmp
iret
add
dec
test
jnp
mov
xchg
fidivl
inc
lea
xor
xchg
xchg
dec
pushf
test
xchg
mov
arpl
push
push
repz
outsl
pop
xchg
sbb
out
xchg
jge
mov
inc
push
and
xchg
pusha
fidivrs
mov
mov
dec
cmc
cmp
sub
adc
lods
mov
jno
xor
cmpsl
mov
rcl
cld
int3
jle
pop
clc
mov
orb
les
insl
aad
cmp
enter
mov
mov
arpl
push
ja
mov
adc
pop
jbe
out
push
sbb
mov
jmp
or
popa
jmp
xor
fadds
jmp
addr16
xor
repz
xchg
push
pop
mov
jp
mov
test
inc
cmp
stos
pop
loop
dec
dec
popa
repz
pop
int3
lods
jb
repnz
mov
into
fisttps
pop
xchg
push
mov
test
test
push
sbb
cmp
xchg
pop
push
jg
inc
adc
push
push
pop
lahf
add
movsb
in
shlb
xor
adc
pop
pop
repnz
push
pop
fimull
shlb
or
jl
jnp
movups
flds
in
or
imulb
mov
mov
bound
mov
push
pop
rclb
pop
loop
out
sbb
xchg
add
xor
cmpl
daa
mov
add
sahf
outsb
cmpsl
je
mov
inc
inc
mov
test
and
inc
xor
jmp
mov
lcall
lahf
mov
cmp
mov
push
jmp
mov
mov
jle
sbb
insl
inc
dec
cltd
jle
push
pushf
sbb
xchg
aas
aam
jecxz
in
add
mov
dec
jecxz
xchg
orb
sbb
jb
enter
or
inc
fwait
lds
jg
stc
sbbb
dec
gs
mov
adc
nop
mov
rcl
loopne
pop
lock
jnp
setp
jp
mov
xchg
les
pop
push
mov
mov
adc
enter
cwtl
push
out
jnp
xchg
lahf
push
aaa
adc
cmp
repz
lahf
xchg
stos
sub
xor
pop
gs
or
add
sbbb
sahf
pushf
jle
int
and
dec
leave
jmp
cmp
outsl
or
adc
xor
movsb
cmp
cmp
adc
xchg
imul
fisubl
lock
push
imul
pop
enter
add
pop
cmpsb
lahf
ja
shlb
cld
or
test
out
inc
add
push
int
xchg
sbb
fcomp
in
xor
shrl
imul
jno
add
out
in
push
repz
and
sahf
dec
call
sti
hlt
fiaddl
test
inc
adcl
int
aas
stc
sub
sub
int
add
test
push
pop
mov
sub
enter
daa
adc
xchg
mov
or
insl
adc
and
adc
xor
hlt
cmp
outsb
or
xchg
mov
add
xchg
jo
fsubl
push
lock
rcrb
fcomp
lcall
jge
adc
and
lahf
shll
fdivs
loopne
hlt
dec
xchg
ja
jle
and
imul
sbb
popa
mov
pop
clc
std
cmp
push
adc
add
rcrl
dec
nop
jbe
pusha
aas
sti
sub
js
pop
and
call
jl
or
ljmp
jge
cmp
xor
or
xor
hlt
jmp
ret
bound
addr16
jg
mov
fildl
inc
outsb
pop
ret
out
ret
pop
fldt
popf
mov
imul
xchg
push
fwait
ja
addr16
xor
stos
and
insl
jle
xor
xchg
mov
testl
shl
push
add
cmpsl
stos
scas
shlb
int3
aam
cmp
xchg
xchg
xchg
popa
pop
pop
jl
out
sbb
pop
or
stos
scas
adc
fstl
pop
fbld
pop
dec
adc
lods
daa
or
mov
jmp
lahf
daa
cmpsl
or
lods
hlt
aas
dec
fstps
pop
lret
je
mov
dec
clc
lcall
sahf
mov
xchg
push
ljmp
fistpl
jno
dec
add
ret
mov
sub
pop
or
jp
ret
and
ljmp
or
je
in
add
push
bound
or
scas
cld
or
js
sub
add
jno
js
dec
insl
in
cmpl
and
jmp
jne
jmp
jb
imul
mov
xchg
ja
test
dec
out
add
popa
addr16
sub
inc
and
sub
shrb
in
rcll
lods
jo
out
repz
fildll
adcb
roll
mov
push
inc
dec
in
mov
ficomps
sub
jns
dec
ljmp
jnp
popf
imul
mov
sbb
adc
xchg
mov
mov
cld
icebp
jns
adc
mov
sbb
insl
fadds
nop
test
cmp
mov
push
sbb
cmp
or
jl
arpl
int
lcall
test
or
inc
mov
out
sbb
sub
inc
jb
stos
push
movsl
xchg
jbe
shlb
jg
sbb
cltd
lret
punpckhdq
aam
lock
sbb
lahf
aas
sub
jmp
in
jo
test
dec
es
mov
jecxz
xchg
outsl
jp
inc
mov
dec
mov
sub
bound
mov
aas
repz
andb
pop
das
cmp
cmpsb
lret
enter
mov
dec
test
repnz
jg
mov
fstps
pop
jecxz
mov
call
lret
ss
lods
clc
and
cmp
push
xor
idivb
repnz
xchg
testl
leave
stc
push
sub
and
inc
imul
mov
xchg
mov
xor
into
cmpsb
xor
adc
add
add
xchg
imul
inc
loope
popf
xlat
sbb
pusha
addr16
mov
mov
flds
xor
cmpb
xchg
dec
jle
and
and
loope
es
or
pop
xchg
and
cwtl
and
mov
rclb
mov
fimuls
cmp
movb
das
rep
in
mov
push
cmp
pop
pop
push
and
sub
add
xchg
mov
push
adc
mov
jmp
int
pop
push
scas
add
js
js
ret
xchg
or
pop
push
sbb
scas
insl
rcrb
xchg
cmp
lcall
in
jl
dec
loopne
cld
pushf
mov
push
push
and
fcoms
mov
in
pushf
dec
and
inc
mov
dec
push
ret
adc
fcoms
in
and
insl
ja
xchg
lcall
dec
push
add
out
cmp
fs
packuswb
inc
add
lahf
inc
lahf
gs
dec
sbb
and
add
jp
jmp
js
xchg
push
movsb
icebp
mov
stos
rorl
mov
add
stc
sbb
loopne
jg
scas
ret
sahf
lret
int3
mov
cmp
and
push
test
je
adc
xchg
ds
xchg
adc
loopne
call
xor
adcl
push
ret
push
ljmp
jb
mov
cld
fildl
mov
push
cmp
dec
or
push
push
les
sbb
xchg
xchg
ret
in
cltd
dec
test
dec
rep
jnp
loopne
aad
sbb
cli
insl
data16
divb
mov
sahf
arpl
hlt
add
mov
sti
loope
mov
mov
in
dec
mov
add
or
int
mov
xchg
mov
iret
std
aam
movsl
sbb
cltd
add
fsubrl
dec
mov
sbb
and
cmp
sbb
out
out
fistpll
cmp
mov
fnstcw
popa
mov
sub
jmp
dec
hlt
sbb
cmpsl
or
jmp
inc
loope
adc
xchg
ss
fsub
xchg
das
sbb
dec
dec
cmp
jb
adc
and
insb
shl
lret
cmp
push
inc
sub
movsl
xor
cmp
loop
pop
or
add
and
inc
clc
cmp
jae
mov
iret
adc
pop
scas
jb
pop
or
dec
push
adc
jae
jle
gs
insb
or
add
mov
enter
in
inc
iret
std
jmp
jb
call
and
dec
pop
ss
push
xchg
jge
nop
or
paddsb
fcomip
or
xchg
mov
mov
aaa
lds
rcl
add
pop
pop
imul
inc
inc
pop
rclb
add
jo
push
in
push
jne
or
push
lea
xchg
or
sbb
cmp
hlt
xchg
imul
mov
sub
frstor
test
les
call
mov
mov
stc
int
sbb
xor
rclb
es
push
iret
cmp
fwait
lahf
add
into
fsts
and
out
sub
xchg
pop
add
aas
fstpt
shll
fldenv
adc
faddp
push
jns
daa
inc
mov
jne
es
pop
xor
cmp
mov
lock
mov
aam
adc
in
lods
mov
mov
js
jg
dec
sbb
jne
xchg
test
pop
out
push
mov
fwait
stc
lds
push
pop
cmp
in
push
bound
mov
scas
cltd
mov
std
fs
push
lcall
cmp
lods
dec
or
rorl
jl
mov
mov
xlat
lock
stos
pop
outsl
mov
xor
es
push
aaa
cld
cmpsb
std
outsl
mov
outsb
or
mov
loope
xor
mov
scas
dec
or
std
push
mov
jmp
push
push
inc
adc
sub
and
push
lcall
xchg
ret
fwait
ret
jno
xchg
loop
repz
mov
pop
mov
adc
xor
aad
scas
mov
add
lock
movsl
push
dec
jb
scas
cmp
js
inc
push
aad
sub
idivb
sub
stos
in
mov
cld
xor
dec
push
mov
push
jge
icebp
push
push
movsb
ds
in
call
cmp
xchg
in
mov
fisubs
incl
mov
cwtl
pavgw
sbb
mov
xor
jne
fdivl
xor
mov
pop
stos
mov
enter
fnsave
enter
mov
bound
cmp
daa
jmp
xchg
xlat
inc
out
fucom
xchg
pop
pop
and
lret
pop
rorb
jo
in
sahf
push
push
dec
cmp
add
stos
mov
dec
cmc
mov
stc
andb
push
hlt
lret
and
ljmp
xor
add
mov
roll
orb
pusha
xor
or
adc
and
outsb
cwtl
leave
push
rcrl
in
ja
fsubrs
mov
lods
cmp
sti
sbb
push
test
xchg
push
and
dec
movsb
sti
paddd
add
xlat
imul
inc
xchg
arpl
pop
push
test
add
mov
pop
sub
sub
xchg
mov
enter
pop
jmp
lock
cmpsl
pop
add
fwait
testl
lds
out
shlb
mov
les
cmp
cli
shr
cmc
cmpsl
push
add
je
loope
fistpl
into
mov
sti
mov
ficomps
push
dec
mov
xchg
mov
test
into
adc
pop
pusha
scas
jmp
dec
jns
imul
sbb
adc
idivb
scas
and
loope
js
dec
dec
jno
out
mov
lcall
push
pop
add
mov
lcall
movsl
divl
or
mov
adc
mov
add
mov
jb
ss
mov
fsubr
imul
mov
mov
adc
mov
loope
enter
aaa
lods
hlt
stos
xor
cltd
jno
sbbl
xchg
pop
out
stos
fcmovnu
mov
xchg
push
mov
xchg
adc
and
and
stos
sti
out
and
icebp
mov
dec
cli
cmp
aad
dec
test
cmp
mov
out
mov
sub
pushf
addr16
test
in
inc
cwtl
mov
push
mov
mov
call
bsr
sbb
dec
push
ret
in
xor
adc
cmc
mov
jnp
ffreep
cmpsb
xor
mov
mov
dec
stos
mov
push
push
adc
out
sub
mov
sub
mov
push
addr16
imul
ljmp
ljmp
add
push
jmp
xchg
inc
scas
jo
cmpsl
in
lods
arpl
pushf
inc
ret
xchg
mov
adc
push
cmp
gs
cli
cmpsb
push
mov
cs
test
mov
jge
cmpsb
aam
jmp
scas
mov
dec
jno
jb
ret
jp
test
or
call
push
test
inc
mov
sub
or
dec
inc
mov
inc
dec
mov
cmp
insl
jns
adc
inc
dec
inc
mov
fwait
shlb
lods
mov
and
mov
shlb
das
imul
xchg
xlat
mov
sub
jmp
xor
jns
leave
rcl
jge
cltd
aad
cltd
sbb
inc
fdivs
pusha
pusha
inc
adc
or
pop
dec
outsl
icebp
mov
or
or
inc
lds
push
ret
ja
lcall
bound
lods
aam
xchg
sbb
lods
pop
pusha
sbb
pop
xchg
ljmp
outsl
repz
push
mov
imull
adc
xor
push
leave
mov
call
addr16
adc
insl
inc
insl
cld
ror
push
fcompl
movsb
jae
jo
xor
dec
mov
ja
pop
out
or
xor
inc
xorb
fmull
fsubs
scas
ja
mov
or
xor
shrb
cmpsl
aaa
push
push
mov
mov
pop
or
mov
and
fsubp
sbb
jmp
int3
out
xchg
xor
pop
push
fdiv
leave
mov
and
add
inc
cs
ds
adc
arpl
and
mov
push
into
and
imul
fwait
negb
mov
fcoms
roll
add
fildll
adc
hlt
shlb
ds
movsl
fidivs
dec
jg
add
pop
rcll
mov
sbb
shll
xchg
add
xchg
jl
or
add
inc
rorb
xchg
inc
cmp
jbe
pusha
into
fsts
jp
push
sbb
pop
cwtl
test
sbbl
icebp
sub
pop
inc
add
bound
dec
shll
popf
in
std
data16
mov
fistps
lret
enter
push
jo
rolb
pusha
xor
rolb
or
das
cmp
sub
idivl
push
adc
addl
cmp
push
jbe
in
aaa
and
push
dec
je
cli
stos
scas
int3
xchg
pop
shrl
bound
daa
inc
es
enter
mov
dec
sub
mov
sbb
fwait
mov
jmp
lret
cld
movsb
adc
test
or
arpl
insb
outsb
xlat
loop
dec
stos
hlt
lods
scas
xchg
int3
mov
out
or
mov
mov
jg
sarl
movsl
xor
fisubrs
ja
dec
add
adc
out
push
or
popf
fdivl
stc
mov
dec
cli
in
stos
xchg
mov
add
bound
adc
int3
lods
inc
dec
pop
test
stc
sarl
xor
loop
movsb
cli
out
mov
int3
inc
adc
jno
inc
imul
add
xor
stos
fldl
fisttps
jbe
sub
mov
adc
movsb
mov
mov
cltd
aaa
push
loop,pt
je
out
jae
jbe
inc
lcall
pop
std
mov
sbb
popf
inc
dec
mov
cmpb
fcmovnu
addl
jnp
mov
and
sbb
mov
mov
xor
imul
fnsave
stc
out
sub
rcrb
loope
pop
xor
jae
mov
push
inc
mov
iret
mov
adc
call
adc
add
std
cltd
and
pusha
test
fwait
mov
sbb
mov
aam
adc
lock
xchg
mov
repz
adc
inc
sahf
aam
inc
sbb
xlat
dec
xor
lods
add
inc
and
inc
and
dec
outsb
xchg
push
jle
mov
sub
shrb
sub
push
inc
xlat
or
inc
xor
mov
outsl
sbb
outsl
jmp
push
add
test
mov
mov
das
adc
pop
cmp
push
pop
mov
mov
data16
icebp
adc
in
sub
lcall
adc
add
sub
xchg
push
inc
mov
cli
adc
or
push
lods
push
sbb
xchg
mov
je
shrl
mov
mov
lcall
fldenv
cli
xor
push
mov
les
clc
mov
lret
pop
push
cwtl
js
jne
inc
sub
sub
xchg
inc
jb
dec
mov
push
call
hlt
mov
aad
push
mov
lret
xchg
or
das
and
pop
outsb
cli
sbb
test
dec
xor
dec
shll
lret
test
sbb
nop
into
jne
dec
jle
inc
repnz
mov
mov
rorb
call
push
or
test
cltd
or
pushf
fidivl
and
cwtl
sub
das
das
jg
ljmp
adc
jg
add
xchg
loope
aam
xchg
xchg
std
daa
fdivrl
sbb
jnp
inc
pop
inc
mov
fdivrs
sub
fsubrp
test
push
push
or
xor
dec
mov
add
xchg
add
fmulp
test
xor
xchg
das
and
dec
movsl
jle
mov
cs
jle
sbb
or
aam
and
out
arpl
jmp
sbb
xlat
inc
in
ss
jmp
mov
fcoml
stc
lods
xor
cmp
push
jae
sub
cmp
mov
lds
pop
pop
fisttpl
lock
jg
inc
push
jne
out
mov
loope
sbb
push
lds
or
pop
fstl
fwait
pop
xor
cltd
movsb
cmpsb
pop
sub
mov
xchg
or
mov
ljmp
in
daa
outsl
outsl
push
and
lret
movsl
andb
sbb
pop
bound
lcall
sub
jp
add
and
sbb
lock
mov
dec
xlat
push
call
fists
fdivl
xchg
push
ds
push
push
mov
pop
pop
and
push
les
inc
sub
push
cmp
in
pop
pop
in
cmp
rcrl
pop
addl
jecxz
sbb
cs
fnstenv
cli
fwait
lock
mov
ret
stos
jns
mov
mov
icebp
orb
jno
out
cmpb
repz
mov
mov
mov
sbb
nop
xchg
xor
jns
pop
icebp
pop
add
jp
add
icebp
xor
pshufw
jge
cld
and
pop
mov
mov
outsl
sub
or
mov
add
inc
sub
jb
fcomps
adc
shll
xor
loope
jne
mov
push
and
int3
xchg
out
pop
insl
out
call
cmp
nop
push
orl
xchg
pop
imul
cmp
ret
ljmp
stos
shlb
sbbl
lret
push
adc
aad
dec
mov
out
fisubl
imul
mov
inc
mov
lods
in
je
icebp
movsl
and
daa
lret
into
inc
dec
test
lds
ret
add
nop
xor
adc
aam
adc
popa
push
pop
xchg
cli
xor
cmc
xor
sbb
sbb
xchg
pop
fldenv
ret
call
loop
jo
sbb
jbe
mov
cmp
sbb
mov
ret
filds
sub
in
mov
cwtl
je
std
aad
and
cs
push
leave
mov
push
pop
or
and
xor
and
testb
cmpsw
shlb
loopne
leave
xor
pop
cmc
imul
inc
repz
mov
movsb
enter
mov
inc
mov
cmp
add
or
adc
fsub
mov
aaa
fistpll
aam
aaa
stos
cwtl
lods
dec
loopne
mov
shlb
pop
sub
hlt
pop
jne
fst
repz
mov
push
push
movsb
ret
repnz
mov
addr16
xchg
ret
add
cmp
xchg
jb
pop
fiaddl
add
shl
mov
mov
ljmp
xor
cmpsb
mov
cmp
or
adc
pusha
add
cmp
cmp
aas
pop
xor
daa
mov
ret
sbb
mov
sti
aas
faddl
sti
jmp
jb
jmp
or
cld
dec
sbbl
shll
stos
test
cmpsb
cmp
sub
jnp
push
movsb
lret
scas
push
data16
test
push
dec
inc
fwait
mov
pop
mov
and
mov
xchg
inc
xor
jno
pop
sti
jp
lock
jbe
cmp
adc
mov
mov
xchg
dec
ret
add
push
bound
xorl
test
cmpsb
dec
adc
add
in
dec
push
aad
mov
mov
fstpl
mov
mov
out
mov
mov
fwait
pop
out
dec
push
dec
and
add
mov
int
xchg
dec
ret
fdivr
mov
and
mov
pushf
fsts
cmc
rorl
dec
test
das
js
dec
push
add
push
cli
jmp
pop
inc
les
in
mov
sub
sub
cld
jp
pusha
mov
jbe
in
into
inc
out
push
scas
mov
ljmp
sub
sbbb
dec
das
jle
test
movsb
fiadds
stc
ja
pop
inc
aas
cmp
pop
dec
push
mov
push
std
rol
adc
jmp
in
mov
sub
sub
das
push
add
test
xchg
xor
pushf
outsl
ljmp
pop
xor
and
pop
call
repz
int
push
push
lods
or
mov
stos
xor
repz
in
or
faddl
frstor
arpl
call
inc
cld
pop
or
xor
jnp
inc
aam
cmp
pop
xor
jge
lock
sti
aam
sub
mov
inc
bound
shlb
sbb
lock
fidivrl
dec
cltd
out
push
and
push
test
leave
mov
ret
ror
mov
loope
test
mov
sbb
aaa
push
nop
mov
lcall
adcb
inc
sahf
add
lods
ret
dec
push
ret
movsl
mov
pop
rclb
aad
in
mov
pop
repz
aas
movsl
lret
pop
push
push
fdivrl
loop
push
aas
pusha
mov
fidivs
call
push
in
and
enter
jmp
and
div
xchg
inc
fstpt
or
shlb
shlb
shlb
fisubs
adc
mov
movsb
sub
rolb
imul
xchg
cmpsb
jo
frstor
fwait
lret
jbe
mov
mov
or
scas
or
out
jns
lock
dec
je
push
mov
push
add
fldl
xchg
icebp
sub
sbb
dec
mov
scas
aaa
adc
cld
pop
mov
push
inc
clc
xchg
mov
mov
decl
daa
pop
xchg
mov
xchg
cmpsl
push
int3
hlt
aam
pop
and
lock
jnp
dec
jmp
dec
pop
in
jp
add
lcall
cmp
mov
bound
lea
bt
cmp
mov
xchg
cmp
jmp
std
jecxz,pn
cmpsb
xchg
mov
sub
aas
cld
lds
cmp
shl
jb
rclb
sub
adc
aaa
sub
rcrb
sbb
fdivrs
int3
xchg
ja
pop
pop
stc
xor
push
xchg
sbb
xor
cmp
pop
and
xlat
in
sub
imul
rorl
pop
or
and
xchg
movsb
xor
xchg
adc
dec
pop
scas
fldl
rcrl
push
push
loope
push
xor
imul
pop
xchg
jecxz
pop
dec
or
lahf
les
mov
or
ret
loopne
cwtl
lods
fimull
adc
and
mov
lahf
jae
movsb
stos
pop
les
or
inc
xchg
rcl
sar
imul
jae
orl
jno
imul
push
rcll
mov
cmp
ucomiss
loopne
pushf
test
adc
outsb
and
adc
lahf
push
out
icebp
scas
fidivrl
xlat
and
push
lahf
in
mov
add
mov
outsl
lods
hlt
push
xor
pop
xor
lods
add
pop
std
cmpb
stc
mov
mov
jo
mov
pop
jbe
dec
rcl
shrl
push
cld
mov
into
push
mov
push
dec
dec
dec
mov
or
adc
jl
mov
dec
xor
mov
xchg
fistps
cmp
mov
xor
push
xchg
aad
pop
ljmp
mov
movsb
lahf
mov
cs
adc
iret
das
jo
mov
lods
mov
mov
adc
sub
cmp
xor
cli
and
pop
leave
aam
sub
int3
cwtl
insl
enter
adc
ds
xor
jns
mov
mov
adc
fsts
cmp
sbb
inc
enter
test
mov
or
sub
cltd
cwtl
sti
and
mov
iret
cltd
lea
jecxz
pop
icebp
jbe
sub
xchg
xchg
test
loopne
push
cmp
or
pop
xor
jo
pop
pushf
addl
aam
jg
sti
dec
roll
in
call
push
insl
repnz
jmp
rolb
mov
hlt
and
insl
push
cmp
scas
mov
sahf
sub
js
pop
sbb
push
mov
xchg
stos
call
jl
adc
vphadduwq
jl
push
jbe
xchg
jnp
arpl
mov
sub
inc
push
cmp
push
jmp
xor
mov
push
fwait
push
nop
mov
lret
rcr
xchg
jnp
stc
xchg
mov
arpl
xchg
xchg
jb
pusha
cmpsb
sarb
sbb
das
mov
mov
adc
and
pop
cmp
stos
hlt
int3
les
test
pop
scas
and
pop
mov
xchg
inc
push
mov
mov
cltd
push
and
mov
cwtl
sar
add
push
or
inc
ret
dec
xor
mov
and
push
test
imul
clc
and
and
mov
repz
add
push
pop
ljmp
movsl
call
rcll
stos
mov
mov
push
sub
jbe
in
mov
pop
jbe
aaa
inc
fmuls
in
ret
ljmp
mov
push
cmp
sahf
ljmp
stos
cli
sub
out
mov
or
out
and
ds
or
xor
push
call
fstl
pop
xchg
shlb
aad
and
js
incb
ret
out
jg
and
cmc
adc
cmp
xchg
inc
dec
cs
push
mov
sub
mov
mov
add
adc
adc
jg
aam
addr16
lret
xchg
add
cmp
push
js
ficompl
xorb
or
mov
insb
stos
add
cmp
xchg
mov
mov
and
into
xlat
div
shlb
lahf
loop
mov
lcall
aam
and
clc
pushf
push
jecxz
jle
nop
mov
ret
repz
lret
mov
outsb
xchg
test
faddl
mov
mov
mov
xchg
fcomip
cmc
inc
das
lret
sar
movsl
xchg
cmp
lret
mov
inc
lret
movsb
dec
mov
lcall
lcall
frstor
push
aas
sub
fwait
add
in
cld
push
pop
jp
jns
icebp
add
or
sub
enter
mov
xchg
cli
andb
in
mov
cwtl
adc
call
mov
cltd
cli
sbb
sbb
sub
hlt
pop
adc
outsb
aad
mov
push
push
jle
or
repnz
flds
stc
jp
push
lock
repnz
div
pushf
inc
adc
push
rcr
inc
or
icebp
sti
lret
xchg
aas
jnp
push
inc
ljmp
int
fcoml
loope
mov
cmp
pop
inc
cmp
xor
mov
xchg
jmp
frstor
lcall
mov
out
mov
clc
loope
mov
lea
xor
jo
mov
or
pusha
xchg
xchg
jb
mov
repnz
ljmp
outsl
and
pop
int3
lret
cmp
and
aas
sbb
movsl
jmp
rcl
sarl
jno
rolb
xlat
mov
jnp
addr16
and
sub
stos
add
iret
push
outsl
jb
call
sub
push
xor
cmpsb
jmp
inc
mov
sbb
jae
jecxz
incl
or
pop
fbld
xchg
sahf
dec
jb
push
adc
pop
loopne
mov
in
aaa
std
mov
in
fstl
rclb
dec
inc
inc
ds
ss
xlat
dec
ret
lock
mov
out
jge
data16
mov
nop
push
insb
jns
les
push
addr16
inc
and
lret
jnp
lret
fists
pusha
dec
rolb
into
push
out
adc
cmp
xor
data16
dec
bnd
sub
cmp
ljmp
stos
cmc
and
imul
jg
in
xor
cmp
inc
sbb
sti
and
mov
cltd
aas
repz
and
adc
xor
scas
ret
sar
stc
in
scas
cmp
mov
and
outsl
mov
jnp
cmp
inc
and
scas
inc
pop
pop
imul
loopne
or
clc
xchg
inc
xor
jno
dec
data16
and
shrl
arpl
outsl
aam
es
jo
adc
sub
sbb
xor
pop
mov
jnp
jg
or
movsl
popf
in
in
fs
jb
mov
je
xor
repz
inc
arpl
je
lock
cmp
lock
xchg
push
sub
add
gs
mov
repnz
test
fimuls
inc
push
mov
jle
lcall
push
pop
xchg
movsl
xor
mov
iret
push
sbb
cmpsb
pop
popf
es
pop
out
pop
int
popf
cmpsl
cmp
lret
clc
add
rclb
mov
ss
fstpl
cmpsb
scas
pop
movsl
dec
std
inc
lret
mov
ds
sub
inc
pop
out
mov
inc
sahf
aaa
xchg
loopne
inc
or
jb
fwait
icebp
stc
and
loopne
rol
and
jle
loopne
enter
insl
sahf
fstpl
mov
leave
loope
push
sub
xorl
out
lret
cmc
rcrl
mov
push
imul
sub
cmp
xor
and
inc
cmp
mov
movsl
and
cmpsb
mov
inc
adc
nop
shl
insb
dec
test
or
jne
pop
test
lds
jnp
adc
data16
out
repz
js
xorb
xchg
adc
loopne
mov
xchg
push
lock
sahf
aaa
adc
mov
jl
or
mov
push
ss
push
stos
sub
arpl
dec
psubsb
lret
imul
inc
inc
aas
push
dec
jmp
and
jnp
mov
jecxz
mov
push
test
mov
sbb
in
xchg
mov
sarb
out
shll
fistpl
and
fimuls
sub
sub
hlt
rolb
xchg
hlt
lock
inc
mov
test
jbe
es
scas
bound
hlt
xor
shll
pushf
and
push
jbe
xorl
pusha
outsl
movsl
ficomps
xlat
mov
cld
mov
xor
adc
loopne
cmpsl
push
dec
insb
dec
pusha
push
jns
or
sbb
jno
data16
adc
inc
mov
or
lcall
loope
shr
jne
push
icebp
ja
jecxz
clc
dec
sub
in
std
mov
fxch
lds
xchg
arpl
jo
sub
test
mov
cmc
adcb
mov
sbb
ss
mov
inc
call
sbbl
mov
outsl
pop
daa
jo
and
adc
cmp
test
scas
inc
dec
mov
stc
dec
sbb
pop
mov
inc
mov
mov
rcrb
scas
insb
and
dec
scas
idiv
popl
push
out
mov
aam
jg
and
xchg
outsb
push
hlt
gs
jecxz
call
push
push
pop
cmp
lret
jl
inc
sbb
aad
insb
mov
lcall
xchg
sbb
stos
scas
cli
mov
add
fs
fdivrl
xlat
test
lods
mov
lds
test
mov
fstps
mov
clc
stos
jne
mov
aaa
sbb
xchg
pop
clc
sub
scas
int3
lcall
fcompl
mov
jge
xor
adc
inc
jp
and
mov
pop
lret
ja
aad
mov
xchg
inc
dec
ret
and
dec
inc
sbb
dec
jmp
stc
roll
cmpsb
cmpsl
std
mov
mov
cmp
mov
rcr
addr16
sbb
enter
add
gs
inc
push
jmp
and
mov
and
dec
enter
inc
push
stc
enter
out
jg
jae
movsl
mov
xchg
lock
cmpsb
mov
cs
push
jp
jp
mov
or
lret
movd
ficoml
adc
jmp
test
sub
ss
cld
insl
mov
ljmp
and
add
mov
icebp
out
push
cmp
mov
pusha
pop
mov
push
mov
aam
pop
ret
rclb
dec
cmp
cmpsb
pushf
xorl
js
dec
pop
cmp
dec
cmp
lea
and
popf
cmpsb
loopne
sbb
sbb
and
cs
jb
xor
dec
hlt
stos
sbb
jo
sub
inc
lea
ja
xor
mov
add
sub
dec
out
push
adc
cmc
outsl
dec
push
aam
sbb
push
repz
mov
aaa
scas
daa
push
subl
arpl
xchg
ss
cmp
jle
dec
and
inc
in
fdivs
test
mov
in
and
iret
xchg
dec
movsl
cmc
add
push
xor
add
mov
cltd
mov
jge
sbb
inc
sub
xchg
mov
and
daa
rcrl
xchg
and
popf
pop
push
jmp
cmp
jbe
mull
jo
jbe
rcrl
push
popa
push
add
pop
inc
cmp
iret
icebp
insb
repz
xor
fldenv
xchg
pusha
popa
hlt
adc
and
lahf
dec
roll
cld
lods
mov
scas
pop
mov
and
push
xchg
xchg
cmp
mov
and
cmc
pop
aas
pop
scas
inc
lods
out
sub
imul
pop
lock
or
and
push
fadds
imul
mov
dec
sahf
jecxz
sub
adc
mov
aaa
ljmp
adc
add
sbb
add
or
mov
aad
adc
ss
xor
add
ss
lods
loop
cmp
mov
jo
or
jge
add
dec
push
inc
subb
or
imul
iret
pop
dec
mov
ret
sahf
add
lds
mov
push
mov
bound
popf
test
dec
jae
repz
jns
jge
fisubl
cld
inc
add
inc
sar
push
es
xor
adc
inc
cli
outsl
rolb
or
push
call
outsl
add
fwait
inc
call
inc
shrl
jbe
nop
testl
ret
jecxz
cmp
xchg
or
dec
and
loopne
pop
sub
jne
add
scas
mov
push
test
mov
leave
insb
mov
adc
fistpl
lret
adcb
add
xor
push
js
sub
push
inc
pop
movsb
jge
xchg
push
in
dec
sub
push
mov
adc
or
xchg
out
sub
mov
adc
or
fs
mov
es
xchg
cmp
cmpltps
cwtl
or
xor
cmp
jl
in
and
sub
adc
mov
jb
jmp
popf
je
xchg
mov
push
aaa
enter
mov
ss
sub
and
nop
insb
lret
dec
mov
fs
xchg
xchg
xlat
popf
xchg
arpl
fcomps
inc
mul
sbb
fcmovnb
inc
mov
outsb
xorb
fsts
mov
cltd
loop
loopne
int3
pop
loope
jg
icebp
and
pop
mov
inc
das
pop
mov
jge
cs
shrb
shl
ret
sbb
sub
and
cwtl
mov
insl
mov
gs
mov
xchg
inc
cmpsl
dec
inc
xor
outsl
or
push
jge
mov
sub
lcall
sub
mov
lea
sbb
negl
adc
mov
push
dec
add
sbb
das
or
pop
fdivp
fstpl
and
sbb
xchg
sahf
ret
test
mov
test
jns
jge
lods
push
lea
stos
cltd
adcb
adc
mov
test
ret
aaa
int
jmp
jmp
xor
aaa
in
jo
test
test
inc
inc
cmpsb
jbe
out
sti
iretw
movsl
mov
js
mov
popa
push
repnz
dec
jne
jg
cltd
daa
mov
jge
fcomi
int
loope
lret
and
push
imulb
mov
fbld
jp
aam
dec
daa
adc
push
push
mov
mov
cmp
sub
das
sbb
sbb
xor
int3
gs
pusha
icebp
or
cmpsl
into
clc
in
mov
push
scas
or
xchg
pop
sbb
pop
cmpsb
sti
cwtl
dec
dec
mov
inc
hlt
icebp
movsl
xor
and
push
jns
jge
int3
sahf
mov
in
outsl
fnstsw
sbb
inc
mov
fldt
out
pop
pushl
mov
and
mov
or
insl
sub
enter
mov
sbb
xchg
jg
xchg
mov
mov
adc
in
testb
fbld
out
in
js
fisubrs
dec
cld
xor
jne
test
push
int3
daa
push
adc
mov
adc
sub
sbb
push
sub
in
adcl
stos
lea
push
movsb
inc
in
push
inc
add
or
jb
lret
inc
xchg
rorb
es
pop
pop
stos
test
sbb
or
xchg
mov
lea
xor
jnp
push
or
in
fs
dec
aad
jne
mov
jno
or
jns
test
mov
js
mov
movsl
mov
popf
cmp
cmp
loop
mov
jnp
loop
push
cmp
repnz
loop
xor
dec
fidivrl
sub
shlb
outsb
bound
bound
test
ds
rcll
ja
inc
jnp
or
mov
pop
adc
jne
lods
in
loopne
outsl
shlb
leave
popf
cmp
test
outsb
sbb
jb
or
mov
test
jnp
cmp
jecxz
sbb
xchg
dec
addr16
icebp
sbb
pop
push
cmp
mov
loop
mov
pop
xchg
ja
pop
or
mov
add
std
dec
jg
fsubs
fimull
ja
mov
inc
xchg
mov
stos
xchg
mov
pusha
jno
xlat
mov
xor
out
xchg
aas
pushf
add
in
jl
fwait
jb
mov
cld
aam
mov
cmpsl
sbb
jle
dec
es
lea
xchg
jo
scas
es
pop
stos
jmp
push
or
pushf
sti
add
mov
jge
in
mov
out
sbb
adc
mov
cli
mov
mov
push
jae
dec
push
add
pop
test
cmpsl
pushf
adc
ds
iret
cmp
dec
pop
andl
xor
jl
jbe
mov
mov
adc
or
enter
stos
jle
mov
dec
and
push
fwait
inc
lods
mov
ficompl
mov
add
insb
out
mov
mov
lock
ficoms
call
enter
add
mov
mov
fidivrl
rcrb
iret
into
lahf
dec
mov
std
mov
lds
bound
mov
adc
jg
add
shll
cmp
add
xchg
daa
push
loop
lahf
loope
adc
out
ss
out
int3
xor
fcmovnbe
aam
fisubl
aas
mov
mov
cli
jae
adc
dec
pop
dec
stc
dec
mov
inc
pop
popf
subb
pop
jnp
ss
roll
scas
mov
mov
test
movsl
or
mov
xor
or
rcrb
ljmp
jbe
pop
xchg
sub
jge
std
fdiv
xchg
sub
push
push
ror
cmpsl
and
xchg
adc
sbb
sbb
test
stos
popa
in
push
scas
jno,pn
mov
mov
push
adc
jl
jbe
pop
fmul
sub
mov
cld
ret
loope
dec
in
outsl
sub
repz
js
loopne
dec
fimuls
dec
inc
jl
rorl
aad
dec
sub
insb
pop
sbb
cwtl
sbb
pop
repz
hlt
xchg
and
sub
cltd
jp
sub
add
sub
dec
and
int
sbb
cmpl
in
adc
mull
nop
idivl
mov
jae
cmc
bound
inc
push
sub
jne
add
fucomp
test
mov
mov
mov
test
xor
ss
outsl
push
mov
push
or
dec
jnp
arpl
lret
push
xor
fwait
mov
negl
gs
xchg
gs
xchg
imulb
fs
imul
stos
pop
movsl
ret
jae
push
std
xchg
cwtl
sbb
imul
outsb
sub
stc
idivl
movsb
out
mov
hlt
mov
cmp
and
pop
push
pinsrw
adc
aaa
out
and
insb
mov
repnz
adc
lahf
repz
push
iret
mov
xchg
adc
mov
pop
xchg
es
inc
divl
pop
sbb
les
push
in
adc
mov
movb
push
cli
lret
mov
or
xchg
cmpb
pop
inc
dec
ljmp
mov
insl
cld
shlb
xchg
cmp
ret
loope
aaa
jle
bound
loope,pt
lods
sahf
mov
stos
or
push
push
xchg
cltd
sub
jns
std
and
jge
imul
pop
push
popa
arpl
or
cs
cmc
mov
sub
sarb
dec
movb
test
stc
shl
sti
ret
push
rcll
cmp
lret
inc
cmpsb
jae
fdivrs
xchg
cs
mov
dec
xor
pop
ror
daa
pop
aaa
sbb
les
lods
inc
stc
add
bound
rcrl
push
test
xchg
push
cwtl
mov
mov
imul
int
fwait
xor
outsl
inc
push
andl
dec
xor
pop
mov
pop
pop
sbb
push
cmpsl
loop
pop
shlb
cmpsl
in
push
sub
xor
pop
cmp
fcoms
inc
hlt
mov
sub
outsb
adc
xchg
js
cwtl
xor
lods
testb
lahf
mov
jecxz
outsb
stc
sub
dec
dec
cs
pop
leave
jnp
push
ret
call
sub
push
mov
pop
aam
jns
xor
js
loope
test
xor
mull
cwtl
or
push
repnz
test
popf
mov
mov
xchg
fisubs
test
push
sub
mov
out
mov
flds
test
or
pop
das
jle
mov
dec
enter
jp
fsubrs
movsb
in
in
pop
lea
inc
jecxz
pop
adc
sub
or
fwait
dec
pop
xor
rolb
adc
repz
out
and
dec
pop
mov
mov
sub
stc
sbb
mov
jecxz
mov
sbb
jns
cs
dec
xchg
and
ret
mov
mov
fsubrs
mov
sub
inc
mov
xchg
push
mov
xor
popa
mov
add
sahf
or
push
cmp
test
cmp
push
mov
pop
cmp
pop
mov
or
roll
fs
gs
or
icebp
stos
xchg
mov
test
pop
andb
mov
mov
cmp
fsubl
sbbb
xchg
push
popf
xchg
lcall
mov
jbe
push
cmp
scas
jecxz
adcl
dec
or
loop
cmp
jecxz
jg
jg
inc
insb
xchg
jmp
dec
cld
push
ljmp
loope
outsl
orb
hlt
cli
xor
enter
dec
into
push
jo
loopne,pn
sar
dec
inc
fistpll
es
jno
aam
lret
insb
cli
pop
xchg
popf
add
sub
jg
iret
add
pop
cmp
insb
arpl
jae
cmp
dec
pop
or
push
sub
jp
scas
cmp
sbb
lea
cmp
sbb
mov
hlt
dec
ja
push
aam
inc
jnp
pop
push
mov
les
into
aad
vpcmpeqd
outsl
mov
cmc
inc
mov
imul
sub
ljmp
daa
rcrb
orl
aaa
arpl
mov
or
mov
js
cld
mov
clc
cs
fldt
add
cmp
and
add
inc
sti
adc
mov
jl
out
xor
push
in
outsl
jnp
cmp
pop
dec
pop
ds
imul
push
call
adc
jmp
mov
loop
aam
ja
sbbb
and
in
pop
outsl
pop
push
inc
sbb
inc
and
push
and
or
push
es
add
enter
ss
mov
movsl
jae
lods
test
push
sbb
mov
movsl
inc
mov
rcr
ljmp
mov
scas
xchg
adc
dec
jmp
sahf
in
shlb
jno
cmp
dec
ds
or
mov
pusha
add
aam
cmpsb
scas
mov
pop
sbb
aaa
lock
jo
lods
jo
gs
das
mov
loopne
push
adcb
mov
aam
std
lods
call
mov
fidivs
jge
arpl
push
mov
aas
nop
shlb
push
shll
stos
enter
call
pop
jbe
cmp
js
mov
pop
mov
lods
jae
insb
cmp
push
fnstcw
movl
test
xor
jl
cmp
sub
sets
mov
push
xchg
pop
inc
mov
jbe
push
nop
cmp
mov
jp
daa
dec
cmpsl
cmp
lea
jmp
cmpsb
lahf
fisubs
push
mov
mov
cmp
fsubrl
lock
inc
mov
pop
add
push
dec
cmpsl
xchg
jmp
les
mov
aas
jecxz
les
leave
call
adc
stc
dec
push
mov
cmpl
fs
mov
outsb
inc
xor
mov
flds
inc
jg
pop
cmp
in
add
pop
jns
xor
adc
mov
stc
xchg
cmp
mov
and
xchg
arpl
push
stc
jo
and
or
call
jne
int3
sub
sub
inc
aaa
hlt
pop
std
negb
jp
inc
mov
push
enter
fidivs
popa
or
es
pop
imul
xor
cmp
sbb
cmc
fisubrl
inc
mov
lods
lods
adc
cmp
icebp
cmc
lret
lock
add
cmpl
in
push
pop
iret
add
pop
dec
int3
mov
sbb
mov
inc
je
and
popf
leave
testl
xchg
fsubrs
popf
gs
mov
js
cmpsb
inc
or
xor
lahf
std
mov
jle
mull
dec
in
mov
xchg
inc
repz
fdivs
xchg
jno
div
lahf
or
xchg
mov
repz
mov
cltd
xor
cmp
cmp
lds
xchg
jno
subl
add
clc
push
mov
iret
mov
repnz
mov
mov
ds
cmp
ja
dec
mov
inc
dec
jecxz
adc
cwtl
cli
ret
test
out
and
jae
repz
jbe
adc
outsb
icebp
and
int3
and
or
jg
pop
mov
adc
push
jge
jle
out
dec
push
int3
xor
pop
cmp
iret
cld
roll
mov
lret
xchg
push
sarb
das
imul
sub
mov
ds
sbb
sar
out
in
sbb
cwtl
cmpsl
pop
bound
out
mov
add
adc
sti
imulb
adc
je
jo
add
mov
jge
loope
lcall
or
and
xor
pusha
ret
jo
popa
mov
fcoml
stos
scas
xchg
add
cmp
pop
pop
xchg
pop
movsb
call
pop
or
testl
dec
and
and
push
inc
jmp
ret
aad
adc
out
fildl
add
jno
adc
aam
and
sbb
repz
cmp
je
aaa
mov
dec
jae
ja
rol
jp
mov
push
cmp
xchg
into
sub
sub
lret
mov
xchg
in
push
cli
xor
lds
mov
out
out
stc
dec
es
ja
cs
mov
ja
dec
stos
xlat
js
fs
or
cmove
frstor
data16
ficompl
or
sbb
sub
dec
into
xor
dec
sbb
aas
xadd
imul
shl
das
dec
push
jae
jno
push
icebp
sbbb
push
pop
in
or
sbb
sbb
testb
pop
dec
jg
sub
pop
xor
mov
hlt
ss
inc
mov
sub
loopne
jae
movsl
and
xchg
xlat
mov
lock
sub
xchg
sbb
jmp
jmp
sbb
mov
cmp
sub
push
subl
call
shlb
dec
dec
es
cltd
test
mov
sbb
mov
std
in
popf
pop
stos
loop
ret
imulb
leave
and
mov
sbb
jne
imul
in
add
dec
push
jb
gs
pop
pusha
xor
mov
cltd
pop
lcall
cld
sub
das
xchg
nop
mov
mov
xchg
xor
cwtl
xchg
jae
xchg
dec
shrl
in
incb
jnp
aad
fcompl
fimull
inc
in
xchg
push
iret
push
sbb
xchg
add
mov
xor
jo
mov
out
inc
repnz
jns
outsb
iret
sahf
mov
jecxz
push
dec
cmp
sub
and
fldl
data16
inc
jbe
inc
cli
int3
and
and
rorl
mov
les
mov
pushf
dec
sub
daa
inc
scas
sub
and
adc
cmp
bound
inc
add
fbld
xchg
mov
sub
addr16
push
bound
lods
sbb
popf
int
mov
in
inc
push
lods
int
push
fiadds
adc
xchg
fistps
cmp
mov
pop
sub
xchg
ret
mov
sub
cmc
aam
mov
scas
addr16
int3
mov
dec
and
add
andb
dec
add
pop
and
push
and
hlt
and
mov
repnz
mov
fiaddl
pop
lods
push
or
mov
cmp
adc
cmp
jmp
push
aas
les
pop
sbb
jne
dec
push
je
sub
mov
sbb
fimuls
xchg
add
pusha
aaa
shll
clc
cmpl
mov
adc
cmp
inc
inc
sub
push
aas
inc
dec
mov
stc
dec
dec
push
cs
pop
repnz
jb
cmp
pop
mov
or
cwtl
push
sti
add
dec
sbb
dec
add
roll
pop
xchg
cmpb
mov
je
xlat
push
fwait
add
in
stos
and
dec
xchg
pusha
rcl
outsb
pop
call
mov
loop
aaa
fadds
mov
push
xor
jecxz
out
call
xchg
test
cmpsb
sbbl
xchg
jge
or
fwait
test
test
scas
fiadds
pushf
xor
mov
notb
push
jmp
xchg
jbe
pop
xlat
aam
aam
mov
sti
lret
scas
push
adc
adc
icebp
aad
cmpsb
pusha
xchg
xchg
in
test
inc
pop
inc
sbb
rcll
or
gs
lret
adc
enter
pushf
push
pop
jl
push
adc
pop
mov
xchg
loope
stc
pop
add
mov
adc
enter
mov
test
loope
xchg
jl
lahf
adc
nop
rcll
outsl
dec
xor
daa
fmull
xchg
addb
xor
ljmp
jge
xchg
or
push
sub
mov
loopne
xchg
dec
mov
jo
in
ljmp
fcoms
ds
repz
adcb
add
loope
das
dec
sbb
stos
mov
test
sbb
pushf
pop
rcrb
scas
push
ja
subl
jge
sub
mov
hlt
xor
inc
jb
shr
shlb
dec
jno
ror
add
inc
shrl
adc
jge
ljmp
data16
fdivl
ja
call
fistpl
or
test
idivb
leave
pushf
cmp
and
sub
cmp
sub
jno
sbb
aam
repnz
inc
loopne
orb
insb
pop
in
mov
push
lock
into
sbb
mov
fbstp
xchg
ss
lods
pop
bound
push
fldenv
fistpl
xchg
push
sub
and
loop
push
das
inc
sbb
rcll
movw
adc
xor
xchg
loopne
mov
shll
mov
insb
fldz
sbb
pop
std
cmp
push
sar
std
xchg
dec
xlat
out
and
int3
enter
xchg
repnz
das
or
cmp
mov
jae
stos
bound
in
arpl
push
dec
xchg
daa
xor
popa
ljmp
jecxz
mov
mov
push
int
adc
call
xlat
fsubrl
or
fs
cli
and
lea
sub
and
rorb
out
add
ljmp
fildl
aad
mov
das
rclb
xchg
ret
xor
call
les
jno
or
sub
adc
decb
daa
push
fcompl
int3
fcmove
push
mov
jo
jle
mov
mov
ja
pop
in
lods
stos
sbb
push
sbb
in
movsl
fcomip
inc
cwtl
pop
rol
out
dec
repnz
fwait
and
je
fildll
push
popa
pop
movsb
ss
fidivrs
sbb
daa
aad
mov
xor
sub
mov
lock
push
das
mull
sbb
push
fnsave
out
inc
out
sbb
test
dec
xchg
sub
shrb
pop
and
xor
into
lea
mov
out
pusha
jns
inc
rclb
dec
jnp
inc
clc
outsl
push
dec
xchg
imul
sub
or
mov
out
pop
in
xchg
mov
push
add
sarb
inc
ljmp
dec
insl
and
test
mov
std
push
lret
and
sbb
sbb
addl
xorb
fisttps
vmovaps
outsl
or
push
clc
movsb
push
lcall
mov
jl
cmp
sub
mov
aaa
aad
cmc
mov
addr16
push
mov
and
sarl
add
pop
add
jne
lahf
cwtl
pop
in
mov
addr16
aad
out
jno
jo
xchg
jp
dec
and
jno
out
into
aas
and
lret
mov
pop
bnd
sar
cmp
push
mov
je
push
pop
popa
outsl
cmpsb
call
push
shlb
loop
aam
movsb
lock
mov
push
jp
gs
pop
orb
loopne
pop
mov
adc
fdivrs
imul
rcll
ret
testl
xchg
lret
sbb
testl
loop
sbb
mov
movaps
push
andb
in
mov
sti
fstpt
out
sub
pop
xchg
cli
jg
xchg
sbb
scas
mov
inc
adc
xor
inc
dec
sahf
or
les
cli
jb
repnz
cmp
ret
xchg
lret
out
sbb
cld
nop
or
fmulp
je
mov
adc
lret
in
test
jns
mov
jg
je
insl
nop
stos
lods
fistpl
cmpb
pop
or
xor
das
adc
inc
loop
jp
outsl
fistps
inc
mov
imul
fldt
fcoml
inc
shrl
test
shll
dec
insb
and
test
stos
xchg
mov
data16
ret
in
xor
in
sbb
lcall
outsw
push
call
cmpsl
mov
or
xor
mov
adc
in
add
jle
lcall
lret
jb
add
jnp
mov
xchg
jb
stos
cmc
lret
xchg
inc
cmpb
gs
lcall
cmp
test
xchg
hlt
lahf
rorl
lods
sbb
mov
lods
sub
stos
push
sub
xchg
fcmovnbe
mov
dec
or
mov
cli
push
arpl
add
mov
pop
in
sbb
sbb
movsb
push
int3
mov
push
xchg
fiaddl
fdivrl
push
js
jmp
sbb
inc
adc
mov
xor
enter
add
xchg
fmuls
jge
sarb
sti
jmp
mov
fstpl
inc
push
inc
jae
mov
fcmovnb
sar
and
shl
pusha
and
cwtl
mov
popa
sbb
xchg
iret
insl
adc
adc
push
push
js
lods
mov
add
and
jp
cmp
test
aad
loopne
push
mov
mov
mov
jmp
and
push
es
sub
inc
push
mov
frstor
xor
push
inc
rorb
test
or
sarb
shll
pop
sarb
cmc
lcall
fsts
js
mov
push
fs
loop
cmc
pop
push
lcall
mov
fcmovnbe
lea
fistps
push
in
push
jno
xchg
xor
and
das
movsb
bound
fistl
cmp
jl
movl
xor
aam
addr16
lahf
fidivs
subb
push
inc
pop
xlat
lea
dec
fninit
jno
shll
sar
sbb
rolb
add
adc
push
enter
out
jns
and
in
insb
sahf
inc
shll
xchg
add
fidivrs
aam
mov
and
mov
adc
loope
into
xchg
nop
out
adc
outsl
xchg
mov
pop
dec
jb
jl
shl
imul
dec
ds
jmp
xor
aad
je
jecxz
jmp
aam
stos
pop
dec
in
xor
inc
insl
lcall
adcb
mov
sar
nop
push
sbb
inc
imul
jne
movsl
cmpsl
out
cltd
or
repz
es
mov
cmovnp
mov
mov
mov
mov
sub
mov
mov
xor
out
cmp
call
test
or
cmp
lock
push
stc
xchg
sbb
adc
cwtl
push
jg
dec
test
sbb
loop
pop
aas
mov
imul
xor
ja
jb
xlat
rcrb
out
cmp
mov
mov
cmp
sahf
fistps
mov
iret
loop
xchg
sub
popf
popa
adc
jns
jno
xor
rorb
mov
js
sub
pop
ja
fcoml
cld
aad
fcompl
lahf
aam
pop
aam
int
push
push
movsb
or
sub
popa
and
sub
imul
cmpl
dec
pop
mov
jg
cmp
and
stc
ljmp
inc
imul
and
insb
or
outsb
dec
pop
xchg
cmp
lods
bound
push
xor
imul
movsb
and
inc
add
cli
das
inc
lea
dec
mov
je
movsl
into
int
inc
nop
cltd
decl
jp
inc
and
xchg
int3
xchg
cli
bnd
cmp
push
out
adc
mov
xor
xchg
mov
lds
in
mov
shll
mov
jl
and
cwtl
out
inc
stos
in
cmp
jmp
popf
rcrl
push
lahf
clc
loope
xchg
out
cmp
push
jmp
jle
sub
xchg
popf
xorl
push
aam
mov
push
ljmp
insb
push
bound
pop
jecxz
adc
and
cmp
push
aam
in
test
push
lds
cmpsb
dec
inc
stc
je
push
bound
adc
jae
xor
lock
je
and
xchg
lahf
popa
popa
pop
push
or
push
movsl
lods
test
mov
mov
inc
test
sbb
sbb
jg
sti
add
fdivrl
xor
dec
jmp
mov
xor
mov
cltd
xchg
arpl
pop
lds
ficompl
jg
outsl
mov
xor
sub
adc
adc
sbb
inc
dec
int3
movsb
sub
sbb
jbe
loope
add
xchg
dec
push
cmp
or
sbb
cmpsl
outsl
jae
xlat
cmpsl
aas
repz
or
mov
mov
sub
push
xchg
push
add
sub
add
xchg
jbe
xchg
imul
or
leave
jns
or
push
fwait
push
loop
mov
sarb
bound
mov
movsb
fcmovne
pop
out
and
int3
leave
cli
lahf
shlb
inc
add
add
mov
mov
aam
push
or
pop
aad
leave
inc
or
inc
roll
add
jmp
cmp
adc
loope
rcll
mov
pop
es
or
inc
mov
aam
popa
repz
mov
ja
xor
cmpsl
test
xor
push
mov
push
mov
pop
movsl
call
cmp
adcl
or
mov
mov
sbb
or
std
inc
mov
out
ret
add
mov
test
sub
xchg
stc
add
shlb
sub
imul
inc
mov
push
scas
out
and
sarb
fisubl
aam
dec
shlb
in
mov
cmpsb
in
aas
push
jg
sub
inc
loope
pop
loop
cmp
popa
psubw
add
and
inc
daa
mov
mov
xlat
pop
nop
mov
arpl
clc
xor
cmp
test
pushf
stc
push
lods
xchg
test
testb
pushf
call
xlat
inc
movb
add
dec
sub
sub
and
mov
sbb
into
and
xchg
adc
push
pop
cld
mov
negb
std
cwtl
adc
iret
cltd
xchg
inc
xchg
ljmp
fiadds
in
jecxz
and
popa
rcll
dec
loop
mov
addl
lahf
dec
xchg
inc
movsb
cmpsb
pop
xlat
push
pop
dec
jmp
les
andl
xchg
fcompl
into
aaa
bound
test
popf
cmp
dec
dec
adc
rolb
aad
arpl
stc
push
lcall
fsubrl
test
imul
scas
lahf
inc
inc
out
sbb
aad
add
xchg
inc
movsl
xchg
ret
rcrb
or
nop
data16
ret
divb
jae
out
fsubr
xor
rcrb
sub
pop
pop
xchg
mov
aaa
cmp
orb
flds
imul
pop
mov
pop
repz
mov
aaa
lock
outsl
mov
xchg
push
adc
xchg
loop
sub
sti
stos
cmc
stc
out
add
pop
push
adc
xor
xor
lods
inc
adc
mov
adc
mov
push
add
pop
and
sub
push
jae
icebp
sbb
dec
mov
inc
pop
dec
dec
lods
xor
inc
std
cmp
sahf
mov
dec
dec
xor
jle
roll
and
fwait
cmpsl
cmp
sub
sbb
push
mov
in
sti
push
in
getsec
mov
imul
xlat
inc
jecxz
fcom
inc
cmpsb
sub
sub
lret
movsl
adc
push
mov
les
stos
and
lods
stos
mov
dec
cwtl
filds
loop
lcall
push
data16
xchg
out
js
mov
lss
out
and
mov
mov
cltd
gs
mov
les
inc
ret
popa
fs
adc
out
std
in
push
mov
pop
std
adc
test
leave
pushf
popf
gs
add
mov
or
loope
rolb
dec
sbb
mov
mov
loop
popa
xchg
inc
jl
cmp
push
cmp
add
in
xchg
sti
neg
repnz
out
mov
mov
adc
inc
roll
pusha
ja
movsl
outsb
loop
js
pop
sbb
lock
and
imul
jno
lret
lret
lods
fs
sbb
out
clc
inc
incl
ss
fs
mov
cmp
and
incl
and
sbb
sbb
push
shrl
lret
jg
mov
xchg
sbb
mov
pop
cmp
mov
inc
jne
cmp
ja
sub
int
push
push
es
pop
lcall
dec
fsubs
cld
iret
les
mov
mull
mov
adc
mov
call
jbe
push
mov
inc
out
lcall
xlat
lea
and
mov
xchg
fcmovnbe
pop
cmp
pop
push
ficomps
mov
adc
mov
add
add
pop
dec
sbb
aad
testl
mov
cli
cmp
adc
jp
imul
lret
mov
stos
mov
call
arpl
popa
in
adc
lods
mov
jmp
bound
xor
stos
xor
icebp
fsubr
outsl
sub
sub
mov
jne
pushf
push
push
cmp
adc
in
jae
mov
push
sub
push
or
xchg
rorl
sub
xor
mov
lret
add
in
mov
sbb
pop
pop
mov
jo
push
mov
push
xlat
sub
pop
outsl
fcmovu
iret
loope
push
cwtl
jl
push
push
sbb
and
es
jl
and
rorl
imul
mov
lds
test
and
push
or
rolb
ja
push
xchg
or
mov
push
mov
cmpl
mov
pop
ds
mov
or
nop
les
ss
insb
fildl
mov
jne
shlb
pop
add
mov
data16
inc
sahf
or
rolb
call
inc
push
pop
aam
adc
inc
leave
enter
pop
mov
jge
xchg
mov
jbe
fisubrl
pop
mov
fwait
fwait
ret
and
stc
data16
clc
data16
pusha
out
cmp
sbb
add
cmpsb
lret
ss
out
mov
ret
bound
out
ljmp
dec
jnp
or
test
ret
fadd
mov
mov
mov
xorb
adc
mov
mov
fisubl
popf
sub
adc
vunpckhpd
jmp
adc
and
flds
xchg
mov
dec
scas
lcall
aad
ss
daa
sub
sbb
mov
popl
aad
mov
inc
fdivrl
pop
mov
sbb
leave
cmp
cmp
es
mov
mov
arpl
add
je
pop
lea
iret
lret
xchg
rcrb
mulb
shlb
mov
jae
sbb
pushf
ss
adc
sbb
pop
int3
or
sub
aam
bound
sti
sbb
lds
and
cmp
push
xchg
clc
imul
stc
sub
inc
mull
or
adc
rorl
cmpsl
mov
cmp
sbb
orb
push
jns
insl
sub
rdpmc
andb
mov
pop
jne
test
push
push
in
into
push
sahf
mov
mov
aam
in
mov
stos
ror
jne
popf
xchg
xor
test
dec
fdiv
xchg
add
loope
xchg
mov
stos
imul
mov
jl
inc
add
repz
push
xor
movsb
arpl
ret
dec
push
xchg
decl
and
mov
movsb
stc
insb
lods
aad
daa
movsl
inc
fcoml
imul
mov
test
dec
lcall
stos
in
sub
dec
inc
aaa
or
nop
cli
mov
xchg
test
movsl
aaa
test
cs
jl
mov
mov
cmp
cmc
repnz
jmp
xchg
out
push
add
xor
iret
or
rorl
stos
mov
xor
adc
movsl
lret
stc
js
testb
ja
dec
xchg
cld
pop
addr16
test
ret
fs
adc
or
add
cmc
dec
adc
movsb
fiaddl
pop
rol
ja
into
xorl
or
and
jns
mov
lock
pop
bound
cltd
mov
lods
dec
mov
sarl
bound
adc
ljmp
or
scas
push
or
cmc
mov
in
xchg
cli
lcall
loop
dec
ret
lds
xchg
cld
scas
sbbb
add
lds
jge
push
mov
es
int3
xchg
repz
cs
mov
push
pop
bound
adc
fiadds
push
push
cmp
aaa
mov
es
cmp
jg
mov
xchg
outsl
cmpsb
out
and
jbe
cwtl
xlat
scas
ret
sbb
add
mov
arpl
test
push
dec
jns
mov
cmpl
jle
inc
shll
fcmovu
fucom
xchg
xcrypt-ofb
cmpsl
test
sti
lock
shlb
in
insl
lock
movd
push
xchg
out
jno
push
lcall
dec
dec
outsb
pop
mov
enter
sbb
mov
sbb
sub
iret
cmp
xorl
xor
mov
sbbl
pop
in
sbb
pop
dec
jmp
icebp
repnz
dec
sbb
fisttps
jbe
dec
mov
xor
fisubrl
shr
mov
test
add
xor
je
or
sbb
adc
pop
scas
out
jo
jmp
cmpsl
negb
pop
xchg
mov
aas
dec
sarb
popf
popf
rep
cmp
in
test
scas
push
mov
mov
mov
sbb
add
popf
test
fisubl
cli
mov
inc
add
lret
test
fiaddl
das
mov
call
pop
in
and
loop
mov
cmpsb
cmp
inc
dec
cltd
insb
popl
jg
aaa
rcrb
mov
stc
ja
dec
cltd
pop
out
jp
imul
enter
cs
sbb
rclb
mov
mov
mov
popa
test
notl
jmp
add
sahf
mov
scas
adc
cmp
lret
xor
mov
jl
push
movsb
arpl
popf
add
inc
dec
jmp
xchg
xor
inc
xor
sub
jmp
testl
xor
cwtl
dec
cltd
test
xor
and
adc
imul
shlb
adc
scas
sbb
ja
push
lcall
mov
lret
arpl
sahf
cmp
pop
add
cmp
sbb
clc
cltd
sub
adc
pushf
hlt
xchg
jb
sub
fnstsw
mov
push
adc
fldt
mov
cs
movsb
js
pop
inc
sbb
call
sub
stos
movsb
data16
out
clc
je
xor
mov
lods
mov
and
pop
int3
push
fs
mov
movsl
and
sarb
pop
fildll
loope
je
adc
repnz
pop
bound
outsl
clc
pop
cli
pop
pop
test
lret
and
jmp
xchg
inc
mov
out
loop
loop
ret
xor
sub
xchg
popa
pop
cmp
rcrl
sbb
adc
mov
inc
aas
inc
sub
dec
pop
insl
mov
push
inc
fiaddl
or
dec
sbb
jo
push
dec
add
iret
jecxz
dec
mov
test
push
mov
hlt
dec
cmp
push
movsb
out
test
mov
push
aam
flds
dec
or
adc
or
lcall
jge
ljmp
int3
stc
call
jno
nop
mov
jle
pop
ret
sarl
jbe
mov
les
addr16
and
or
aaa
adc
adc
and
mov
cmp
jge
cmpsl
adc
in
pop
mov
fstpl
push
xor
dec
cwtl
movsl
sti
fildll
aas
dec
cmc
jb
xchg
jae
dec
or
mov
pusha
das
dec
lahf
lcall
jne
dec
enter
les
addr16
add
add
rep
mov
mov
data16
sub
data16
xchg
jbe
inc
and
and
stos
sub
jecxz
ret
in
lock
cmc
ljmp
add
or
jo
ret
fistpl
pop
or
xchg
mov
jo
and
mov
and
sbb
push
loop
add
adc
sub
jo
dec
testb
xlat
push
icebp
mov
nop
add
sarl
pushf
test
mov
roll
fcomps
xbegin
xlat
cltd
hlt
shll
pop
sbb
sar
cmp
fcoms
xchg
cmp
hlt
mov
sbb
lock
test
mov
xor
add
xlat
outsb
ljmp
icebp
aas
mov
and
sub
mov
fstpl
xor
test
imul
aaa
inc
js
lds
xor
insb
cmp
adc
mov
and
sarb
cmp
imul
insb
hlt
jecxz
mov
out
mov
jns
clc
sub
mov
inc
mov
push
inc
push
or
orl
mov
jp
mov
ljmp
jmp
fmulp
or
movsb
rclb
int3
je
and
aas
dec
outsb
icebp
mov
fsubrs
fcmovne
shlb
push
sti
dec
mov
add
mov
xor
insb
mov
daa
scas
pop
add
inc
iretw
cs
iret
inc
ds
mov
or
aam
stc
cs
sbbb
lahf
xor
or
cmc
movsb
neg
in
sbb
enter
insl
int3
es
jl
push
cmpsb
push
int
xlat
push
mov
add
cmp
xchg
pop
cld
jno
mov
push
repnz
mov
adc
or
addr16
cmp
repz
fists
mov
scas
int
add
and
add
jecxz
jp
orb
cmp
pop
jg
das
add
mov
jl
sub
push
and
mov
xchg
or
movmskps
movaps
out
pop
dec
out
insl
daa
inc
mov
cwtl
stos
into
lods
xor
jle
push
mov
ret
xlat
dec
sbb
insl
pop
dec
lock
dec
xchg
repnz
cmp
call
gs
pop
inc
and
int
jg
push
lock
mov
fimuls
incb
lret
rcrb
orb
xor
add
ret
sub
mov
xor
push
mov
mov
push
in
mov
add
insb
rcrl
js
pop
xchg
dec
xchg
out
inc
ja
pop
mov
lock
dec
pop
addb
js
out
cld
inc
push
mov
cmp
fimull
ret
add
lods
mov
lret
pusha
int3
imul
cmp
inc
daa
out
into
cmp
outsl
jp
test
inc
cmpsl
ret
adc
dec
push
pop
fistl
inc
mov
inc
push
pop
int3
pop
mov
xchg
jnp
cltd
out
icebp
push
inc
js
fldt
or
jge,pt
jp
mov
mov
mov
inc
je
add
cli
cmp
inc
mov
mov
loope
loope
pop
mov
push
jno
jle
hlt
xchg
out
iret
push
xchg
sahf
adc
nop
xor
fildll
pop
xchg
add
cmc
inc
mov
enter
sti
xchg
or
clc
cmp
inc
or
cmp
sub
pop
outsb
push
push
mov
stos
fcom
mov
jle
sbb
repz
push
in
imul
clc
xchg
adc
or
mov
stos
mov
std
dec
bound
cli
lods
mov
push
cld
inc
ljmp
xchg
fiaddl
push
sti
adc
xchg
test
add
sbb
dec
andnps
aad
xchg
sarl
adc
movsl
into
idivl
mov
pop
lret
idivl
cmp
and
aas
loop
jns
aaa
mov
mov
inc
mov
iret
mov
lds
jbe
dec
or
pop
dec
inc
ret
loop
cmp
mov
sarb
lds
ret
inc
cmp
shlb
inc
fsubl
mov
repz
or
aas
imul
fisubrs
xchg
lret
outsb
adc
mov
cmp
xchg
pop
pop
dec
ret
fisubrl
or
faddp
aam
jg
inc
add
mov
mov
ljmp
mov
lds
pop
xchg
ljmp
sbb
jb
adc
jae
test
shlb
addb
mov
iret
mov
movsb
movsb
shlb
xor
cmp
jmp
mov
push
inc
movzwl
stos
sbb
inc
mov
jae
stos
sub
lahf
mov
inc
popa
fimuls
mov
scas
shll
stos
repnz
add
orl
inc
mov
dec
in
jmp
lea
outsb
scas
mov
inc
cmp
jp,pn
cld
repz
ljmp
xor
mov
or
fnstenv
pop
mov
sahf
jbe
loope
cld
cmp
loop
call
loopne
cltd
sub
repnz
inc
push
xor
xchg
mov
cs
jne
int3
xor
adcl
mov
leave
ret
or
mov
orb
sbb
cltd
cmp
cmp
or
es
test
inc
rolb
pop
xor
inc
repz
imul
daa
mov
loopne
xchg
movsl
jl
dec
or
mov
jne
fildll
orl
sarl
push
mov
ss
jl
add
add
mov
or
or
ficoml
fidivrs
cs
and
dec
sbb
movsb
xor
push
dec
lods
xchg
sub
imul
mov
mov
pop
test
dec
fbld
mov
jmp
daa
sbb
lcall
dec
fists
sbb
push
inc
dec
ret
or
scas
cmpsl
into
mov
aas
lret
mov
stc
pop
lea
push
sub
lret
lcall
xchg
in
sti
insb
popa
mov
arpl
adc
push
pop
dec
xor
adc
lret
rclb
or
ja
fidivrl
fs
sub
inc
ljmpw
and
jbe
popa
clc
push
adc
movsl
push
ss
call
test
rcll
test
loopne
movsb
inc
dec
repnz
add
cmp
insb
inc
scas
xchg
pop
or
sub
push
out
fiadds
stc
lret
jp
mov
clc
loopne
loopne
push
rcl
xchg
imul
cmp
cmpl
xor
sub
sub
pop
mov
call
mov
dec
sahf
and
adc
inc
xchg
or
test
adc
lcall
add
pop
cltd
dec
outsl
push
sbb
mov
push
jns
pop
mov
push
jae
cmp
sbb
loope
scas
jae
and
outsl
scas
call
adc
or
xchg
sub
idivb
js
mov
stos
sub
sub
dec
stos
and
or
adc
cmpsb
fstp
add
or
add
inc
xchg
mov
jle
pop
sub
cmpl
sbb
repz
xor
xor
push
xchg
pop
pop
pop
push
and
scas
insl
mov
mov
repz
gs
in
in
cwtl
and
mov
and
push
fcmovnbe
cs
js
mov
shl
xor
sub
inc
rclb
mov
cwtl
aas
lret
data16
or
jecxz
fcmove
outsb
xchg
jnp
mov
push
mov
inc
dec
sbb
leave
rolb
inc
dec
adc
leave
lahf
xchg
ss
mov
add
adc
lcall
cmc
mov
xchg
mov
or
or
xorb
dec
in
imul
or
mov
clc
inc
jae
ljmp
jns
or
bound
pop
dec
push
jae
shll
mov
adc
jle
cli
sbb
inc
jo
inc
cmp
inc
in
adc
lock
push
pop
or
fisubs
mov
xor
pop
ret
add
jge
sub
lock
in
test
xor
stos
jb
leave
jl
fistpll
push
cmpsl
ljmp
je
rorl
mov
aam
jp
mov
adc
cmp
fs
adcb
sub
sbbl
push
ljmp
xchg
fwait
into
mov
cmp
xlat
adc
cld
pop
les
mov
sub
cltd
lret
xor
sbb
sub
push
adc
mov
insb
fs
mov
fsubp
cld
and
testl
inc
int
mov
and
out
sub
jecxz
pusha
pop
out
sub
pushf
fldcw
sub
mov
adc
addl
pop
movsl
jnp
aad
lret
inc
btr
aam
jle
and
pop
fsubl
aad
push
push
es
mov
pop
xor
test
test
dec
sbb
inc
cli
das
ss
dec
les
in
fucomip
cmp
jb
inc
outsl
or
adcl
fs
out
sbb
test
push
js
test
jo
imul
mov
out
aad
mov
rorl
nop
jl
xlat
jo
and
dec
jmp
outsl
push
stc
and
imul
jbe
cmpsl
sbb
and
add
add
into
xchg
jp
cwtl
xchg
jl
dec
jl
add
int3
mov
daa
jle
xor
pop
dec
rcll
and
jo
movntq
jb
leave
cltd
and
divl
ja
mov
fxtract
xor
and
mov
mov
mov
fs
jb
fwait
cmp
popa
jp
fnsave
jmp
cmpsw
push
inc
pop
xlat
pop
shll
mov
adc
sbb
mov
pop
imul
xchg
mov
add
aaa
popa
insl
rcrb
ds
mov
xor
dec
lods
xorl
iret
ficoml
xchg
push
leave
fwait
mov
ss
in
or
and
or
fbld
inc
pushf
sti
push
xlat
adc
dec
add
std
imul
dec
stos
imul
pop
jo
cli
add
sbb
xor
inc
push
inc
aaa
fwait
xlat
sub
aaa
ret
movsb
out
sahf
inc
xlat
in
xor
xorl
fs
in
lds
xchg
xor
cld
sub
fcomip
push
out
jbe
sub
cmp
xchg
and
clc
adc
sahf
loopne
inc
popf
push
inc
cmp
pop
lahf
jae
mov
mov
dec
xchg
pop
lcall
fwait
sbb
adc
sbb
or
or
dec
adc
jbe
jne
das
insl
hlt
mov
outsl
jnp
dec
pop
loope
cld
jle
pushf
xor
pop
push
test
sub
in
xor
cmp
and
lahf
sbb
insl
push
in
mov
or
jno
into
pop
xchg
add
sbb
rorl
xchg
mov
lods
push
lret
pop
das
outsb
cmpsl
mov
xchg
sub
mov
aam
jbe
hlt
mov
adc
es
push
adc
into
jmp
aad
push
adcl
sarb
and
repnz
stos
fcomp
jl
addr16
movsb
es
push
and
pop
dec
lea
lods
outsl
add
movsl
and
push
ret
sbb
pop
sub
cmp
clc
sarb
out
out
popa
inc
push
mov
or
xor
add
ss
arpl
add
addr16
cmp
iret
filds
popa
jb
aas
pop
jbe
ret
inc
adc
outsl
pusha
pop
sub
xor
mov
fnstcw
daa
ljmp
sub
mov
out
fbld
movsl
sub
subl
outsb
movsl
lds
inc
jp
pushf
rolb
iret
lahf
push
cmp
cmp
add
mov
jmp
cmpsb
pop
xchg
or
mov
push
mov
shrb
mov
or
aas
outsl
test
pop
and
xor
insl
sub
loopne
outsb
mov
mov
pushf
repz
adc
movsl
adc
aam
and
sub
jmp
dec
aam
dec
cmp
xchg
and
test
push
cltd
nop
add
cmpsl
mov
int3
and
jbe
xchg
inc
loopne
ss
xchg
add
les
mov
mov
inc
test
sub
mov
cmp
dec
dec
lahf
or
sbb
mov
lods
push
xchg
sub
sti
or
iret
and
fcoml
pop
mov
addb
mov
mov
test
mov
push
sbb
cmpsb
cli
dec
cmovge
ljmp
pop
xlat
add
insb
adc
lds
xor
mov
mov
fcmovne
or
mov
mov
pop
lea
jmp
mov
pop
daa
je
test
int
pop
insl
mov
fs
lret
push
cmp
popa
xchg
xchg
cs
pop
insb
push
inc
mov
xor
mov
je
mov
jns
icebp
add
das
push
push
add
data16
insb
or
add
add
rorl
movsb
add
mov
jp
lods
movsb
sub
xor
fldl
pop
mov
fistpll
std
mov
ret
jno
push
sbb
dec
out
daa
xchg
test
mov
push
xlat
pop
test
sbb
scas
ljmp
mov
and
out
imul
pop
int3
jmp
outsb
daa
aam
pop
mov
pop
sbb
sar
cmp
or
mov
scas
sahf
pop
test
mov
mov
push
fcmovu
cmc
sbb
js
push
sti
adc
inc
test
push
sbb
pop
xor
jnp
das
push
sub
ds
cmp
lcall
loop
repz
lahf
sbb
fcoms
and
and
dec
loope
dec
xchg
mov
addr16
test
adc
mov
jmp
jo
pushw
stos
mov
push
sbb
add
sbb
and
aaa
fadds
mov
sti
fstpl
cmp
scas
fildl
push
mov
lahf
icebp
sub
mov
ret
xchg
aaa
dec
mov
mov
sbb
stc
xchg
jno
sbb
jae
or
ds
jnp
inc
mov
rcrb
sub
mov
mov
mov
xchg
pusha
jmp
aad
out
inc
mov
cltd
shll
in
dec
jecxz
in
or
imul
shll
pop
jecxz
jo
add
cmc
and
add
dec
fists
mov
fdivrl
push
out
jl
dec
sub
sahf
iret
dec
jg
sub
mov
push
nop
cld
sub
lcall
adc
popa
fbstp
jle
and
loopne
ja
jl
call
or
cwtl
or
pop
or
fwait
lea
fsubs
jl
lods
stos
lods
sbb
popf
fdivl
aaa
sbbl
nop
ret
lods
or
jg
mov
push
pusha
ds
or
or
ljmp
fstl
xor
mov
cmp
data16
fld
in
sbb
and
pop
lea
jbe
leave
and
xlat
stc
push
mov
jne
inc
ljmp
lds
test
mov
sti
mov
ret
sub
jae
mov
xchg
fwait
je
aaa
push
add
nop
adc
dec
rcrl
pop
scas
xchg
js
lahf
push
cmpsb
mov
fxch
add
es
mov
push
sbb
pop
sub
push
testb
fwait
mov
mov
test
push
or
push
gs
rorb
and
fwait
outsb
mov
mov
stos
daa
fnstenv
ucomiss
lods
int3
sbb
loop
outsb
call
icebp
push
in
cmp
in
adc
inc
or
aas
testb
cmp
jns
leave
sbb
subl
movb
cmp
lods
pop
sbb
mov
bound
dec
dec
call
dec
lock
pop
sbb
jb
je
xor
and
jne
lea
cmpsl
mov
jne
std
add
sbb
lea
das
fs
xor
lahf
mov
movsl
jecxz
mov
cwtl
xchg
iret
xchg
ret
call
push
popf
gs
sti
in
jp
mov
jle
pop
aam
push
cmpsl
out
xor
aam
cmp
xchg
leave
out
pop
xchg
sub
jl
xor
shl
popf
subb
or
sahf
xor
scas
xor
icebp
call
aaa
xorb
sarl
jp
xchg
in
jg
xor
pop
mov
add
cmpsb
popa
lret
lock
repz
sbb
mov
out
add
push
mov
mov
cwtl
cli
js
mov
sub
pop
cmpsb
ds
pop
int
jge
hlt
pushf
xchg
iret
jle
call
push
dec
leave
out
ret
add
arpl
fdivl
push
xor
push
les
sbb
sub
push
dec
push
mov
dec
clc
sbb
and
cmp
shl
in
aas
xchg
xor
mov
sub
jb
mov
mov
sub
or
dec
and
cmp
shl
inc
sub
dec
push
add
push
and
into
push
loope
imul
mov
add
je
in
mov
push
lret
jbe
dec
lret
shll
pop
sbb
call
into
cs
push
lahf
aaa
insb
inc
insb
jae
mov
add
sar
call
fisttpl
push
add
mov
stc
push
cmp
adc
lret
jg
mov
or
in
pusha
mov
cmpsb
hlt
mov
sub
adc
xor
mov
mov
imul
add
mov
aam
adc
outsl
fdivl
fidivrs
scas
inc
jl
rol
scas
cmp
lret
int
cwtl
inc
push
and
ds
pop
dec
jle
out
inc
adc
clc
xorb
test
sbb
push
into
loope
out
into
les
push
pop
fcmovnu
pop
pop
leave
and
push
xor
mov
sub
lcall
das
jae
sub
pop
pop
dec
xorb
jecxz
mov
lds
adc
out
jecxz
and
mov
adc
xor
push
div
mov
mov
daa
cmpb
aad
fs
pop
out
cli
roll
fistpl
mov
int3
and
mov
mov
sbb
mov
cmp
loop
adcb
fdivl
push
daa
ljmp
fs
add
inc
adc
dec
shl
repnz
pop
push
fwait
and
inc
fs
fiaddl
sahf
fxch
pop
rclb
sub
pop
loope
or
cmp
testl
inc
js
push
push
sbbl
sahf
xchg
mov
adc
cwtl
das
lea
inc
ds
lds
subb
and
jmp
je
rol
add
inc
cmp
xor
test
and
cmp
pop
push
jb
xor
addr16
add
dec
mull
stc
shrb
xor
sbb
ljmp
cld
mov
pop
insl
insl
jle
out
push
repnz
pop
out
or
test
rol
scas
mov
das
push
scas
xlat
mov
jle
loope
adc
dec
fcomip
ret
sub
in
movsl
push
cmpsb
push
outsl
in
into
mov
pop
push
into
lret
xchg
push
inc
cmpsl
insb
iret
mov
roll
xchg
pop
test
pop
xor
call
adc
mov
and
jb
cmp
aam
xlat
pop
lods
inc
and
cmpb
rcrb
xor
lahf
jb
xor
xor
test
jge
imul
repz
call
pop
or
stc
in
ret
mov
sbb
sar
imul
sub
test
mov
test
inc
ljmp
sbb
pop
xor
insl
jbe
out
pop
mov
outsb
in
sbb
pop
adc
icebp
pop
insb
imul
popf
jle
dec
xchg
popa
adc
mov
dec
dec
sbb
sahf
or
pop
pushw
jl
and
xorl
inc
sbb
jne
mov
sahf
sahf
fstp
sub
mov
fwait
test
xchg
ret
popl
push
scas
leave
pop
inc
lcall
mov
mov
add
pop
or
dec
fimuls
sbb
mov
jnp
gs
adc
movsl
iret
outsl
xor
movsb
inc
pushf
int
outsl
enter
push
mov
or
mov
jnp
loopne
xchg
call
or
pop
inc
imulb
pop
stc
lret
jl
pop
mov
mov
cmp
insb
lcall
mov
ret
lods
out
cmp
add
in
popa
test
es
add
dec
add
fildll
push
push
sbb
imul
push
movsl
insb
add
cmpb
dec
cmp
out
adc
mov
outsb
add
in
iret
mov
mov
mov
nop
mov
push
inc
in
subb
clc
sub
lret
xor
adc
xor
lret
dec
orl
lock
push
outsb
pop
push
mov
mov
addr16
in
jmp
hlt
xlat
int3
lret
adc
push
cli
pop
push
and
adc
mov
je
ficoml
lods
add
mov
cmp
sbb
push
enter
sub
xor
and
loopne
sti
xchg
add
mov
mov
and
add
and
shrl
int
lock
jg
inc
mov
push
dec
push
movsb
push
pop
or
clc
mov
lods
enter
add
sbb
inc
fidivrs
orl
bound
mov
pushf
nop
out
and
out
adc
push
scas
out
insl
out
out
inc
jle
imul
xlat
xchg
dec
lds
nop
jne
inc
xor
mov
lods
pusha
sbb
dec
sub
mov
sbb
cli
scas
xor
movsl
push
and
outsb
inc
cmp
sub
jle
sbb
or
dec
pushf
fsubl
pop
test
mov
inc
adc
jle
inc
xor
add
mov
or
sbb
scas
cmpsl
imul
mov
adc
imul
inc
test
into
repnz
and
pop
jae
mov
push
cmp
mov
inc
jl
adc
push
jp
pop
inc
cmpsl
xor
and
jb
pop
adc
dec
repz
imull
pop
jl
cmpsb
jle
add
shrb
mov
xor
fldenv
mov
mov
aad
mov
sti
mov
add
adc
inc
pop
jbe
jno
loopne
fwait
inc
cld
arpl
push
sti
pop
cld
ss
clc
dec
jmp
in
mov
call
xor
outsl
jecxz
pop
arpl
loop
stc
int
testl
push
push
cmp
roll
out
cmp
xchg
jg
adc
je
ljmp
in
scas
lods
mov
aaa
dec
lret
push
call
push
xchg
push
add
test
pop
dec
push
xchg
mov
ja
mov
std
std
je
stos
mov
mov
adc
mov
dec
inc
loop
xchg
insl
mov
cmp
pop
insb
xchg
pop
sbb
mov
sbb
or
push
rol
sub
inc
mov
jle
shll
xchg
xchg
push
cmp
pop
enter
adcl
jae
xlat
pop
inc
push
jl
inc
push
cwtl
addl
lret
loop
hlt
jg
lret
std
mov
xor
mov
hlt
pop
sbb
je
inc
adc
adc
lods
leave
adc
sub
repnz
add
or
push
fdivs
test
cli
mov
std
loopne
stos
cmp
sbb
jo
or
lret
or
mov
sub
icebp
movsb
xor
pop
sub
lods
outsb
cmp
inc
testb
cwtl
xlat
ret
repz
mov
mov
adc
mov
jg
mov
cmp
and
xchg
inc
test
pop
xchg
push
or
xchg
mov
int
lcall
and
ret
and
gs
das
cmp
mov
test
cmp
xor
push
shl
xchg
sbb
sub
cli
inc
test
sahf
pop
or
and
mov
xchg
push
scas
frstpm(287
pop
dec
inc
and
loope
jmp
ja
mov
andb
adc
cmc
add
xor
and
add
jmp
or
sbb
fsubrs
jae
add
insb
int
cmpsl
sbb
daa
out
adc
or
xlat
xchg
sahf
mov
in
stc
xor
cmp
push
in
xchg
aas
xchg
gs
and
jo
mov
cmpsb
pop
push
jb
jbe
lret
scas
push
cmp
xor
xlat
jnp
ljmp
and
mov
xchg
xor
shll
mov
mov
enter
inc
add
mov
cmc
shrb
dec
sub
jp
stos
and
inc
sbb
mov
sub
std
jo
cmpsl
sbb
cmovns
shlb
ss
and
push
or
push
roll
push
scas
mov
sbb
ja
adc
fmull
xor
lret
imul
and
push
jbe
cmpsb
push
loopne
not
rcll
push
adc
push
and
or
das
mov
xchg
jo
dec
ffreep
lds
mov
lea
daa
dec
sbb
push
xchg
jecxz
dec
mov
adc
pop
out
jb
cmpsl
out
aas
fisttpll
lcall
mov
jmp
sub
out
out
cld
loope
mov
sti
xchg
mov
xor
loope
jae
cmc
shll
add
pop
jmp
push
mov
inc
xor
test
push
dec
add
xchg
adc
mov
out
lock
xchg
adc
in
rorl
ljmp
push
inc
enter
std
aad
pushf
adc
pushf
mov
adc
mov
js
xchg
lahf
outsl
cmpl
sub
cmp
push
cmpsl
push
iret
mov
dec
mov
call
push
add
mov
and
cmp
test
in
jmp
data16
and
xor
pop
testl
movsl
stc
jl
clc
js
ficoml
mov
inc
mov
jo
cmp
les
xor
or
repnz
push
out
je
daa
cli
sub
jecxz
xchg
fbstp
mov
mov
in
cmpsl
data16
arpl
mov
xchg
lds
sbb
adc
xor
lcall
mov
mov
into
add
pop
push
aad
cmp
scas
xor
dec
xchg
mov
stos
pop
sti
mov
xor
loopne
adc
jno
inc
repz
sbb
mov
jne
push
add
sub
xchg
arpl
fwait
movsl
rclb
pushf
xchg
out
jo
xchg
mov
dec
scas
push
or
loope
call
cmp
adc
loopne
and
xchg
pop
push
fsubr
dec
sub
pop
xor
jmp
dec
iret
cmpsb
shlb
sti
dec
int
lret
add
jns
mov
fisubs
lret
jmp
jo
pop
test
lahf
daa
push
pop
int3
sbb
into
popa
xor
cmp
jno
xorb
outsb
jp
dec
in
adc
fnsave
cmp
mov
inc
loope
mov
popf
mov
stos
fmull
pop
push
push
pop
xchg
int
cs
cmp
cmc
inc
test
add
cmp
les
cmp
mov
mov
aaa
hlt
xchg
jns
pop
rcll
jge
leave
mov
in
int
aad
arpl
dec
dec
mov
scas
loop
xchg
push
es
aad
insb
cltd
leave
xchg
dec
jae
cld
call
fsubrs
outsl
in
int3
dec
add
mov
jnp
xchg
dec
enter
xor
mov
fwait
mov
jnp
dec
scas
lods
subl
xor
mov
inc
mov
stc
es
xchg
popa
shll
ja
incl
xlat
scas
dec
sbbl
aad
cmp
pop
pop
adc
ret
add
sub
pop
scas
xchg
jp
mov
push
shlb
push
aas
pop
int
lret
imul
inc
shll
push
data16
push
add
sub
adc
add
lret
out
inc
adcl
stos
test
adc
popl
enter
mov
popw
or
pop
pop
push
sub
out
es
mov
push
dec
xor
mov
cltd
xlat
mov
inc
mov
push
sub
repz
dec
out
and
pop
sbb
push
mov
cmpsb
xchg
aad
leave
xor
inc
pop
sbb
push
aad
pop
out
push
scas
sbb
xor
loopne
in
jp
sbb
mov
dec
aas
in
cltd
out
jecxz
xchg
icebp
pop
arpl
je
sbb
lods
inc
fisttpll
pop
add
pop
dec
shlb
int
or
xchg
sub
pop
into
add
mov
add
xchg
push
adc
loopne
stc
lcall
xchg
int3
mov
fsubr
es
jo
rclb
clc
ret
and
mov
xchg
sbb
sub
xor
jl
stos
aas
sub
lret
lds
lods
jp
push
jno
mov
inc
cmp
xor
jg
movb
xlat
std
fsubrs
call
add
pop
mov
das
and
rcrl
pop
lret
jmp
test
sub
cltd
jb
jb
fwait
add
and
push
popf
pop
cmp
outsb
push
mov
jns
mov
adc
cmpsb
mov
cli
pop
push
jno
sub
adc
xor
add
xor
and
and
into
sbb
push
xchg
dec
jmp
lcall
and
mov
and
shrb
mov
sub
pop
pop
xor
sbb
stos
pushf
call
adc
xorl
push
dec
cmp
andl
mov
mov
push
push
xor
jns
jns
imulb
sbb
call
push
mov
enter
in
sarb
push
scas
sub
xor
push
jae
sub
sub
sbb
push
inc
cmpsb
and
push
aaa
inc
ljmp
sub
out
sub
lods
repnz
roll
and
push
jbe
dec
add
fildl
sahf
shll
dec
jo
hlt
cltd
jg
jbe
pop
test
divb
inc
addr16
jg
jge
in
popf
lea
or
xor
and
ja
insl
push
ja
rcrl
push
mov
test
push
push
inc
sbb
pop
add
loope
cmp
xchg
add
ret
xchg
cli
mov
sti
int
sub
dec
push
add
xlat
xchg
iret
fists
in
cmc
sub
dec
xchg
xchg
ret
inc
pop
push
rcrl
cwtl
in
mov
mov
ljmp
fmulp
inc
lods
into
mov
sub
inc
add
jns
push
mov
inc
movb
leave
lea
loopne
adcb
mov
fisttps
cmpsl
addr16
mov
js
das
aad
jb
test
shl
sub
adc
imul
push
bound
sahf
inc
mov
scas
cmp
imul
lret
mov
fstpt
out
cld
orb
cmp
add
mov
mov
push
inc
add
loopne
push
mov
loope
sub
into
leave
jne
loope
sub
out
jmp
fs
add
popl
jg
sub
movsb
repnz
or
lret
push
mov
add
cmp
mov
mov
and
mov
ret
push
dec
arpl
je
jns
cs
sahf
call
push
out
sub
adc
mov
mov
ljmp
pop
and
and
cmpsl
aaa
mov
cmpsb
loop
mov
push
push
out
stc
dec
and
dec
loopne
adcl
jmp
rorl
cltd
cmp
inc
sbb
xor
scas
push
jmp
aas
push
int
insb
rcrl
and
lea
cmpsb
into
push
xor
jns
add
push
fldlg2
jle
xchg
sbb
sbb
push
pop
or
int3
push
lods
jb
pop
out
add
and
add
adc
scas
jp
inc
sub
sbb
xchg
mov
pusha
lds
frstor
lock
fwait
dec
movsb
js
pmullw
enter
pop
cmpsb
adc
xor
lcall
loop
loope
jb
ficoms
adc
jne
es
cmpsl
and
andb
loop
mov
jbe
out
stos
dec
mov
js
xchg
inc
fwait
sbb
inc
cmc
loop
pushf
sbb
outsl
movsb
add
lods
icebp
cwtl
shrl
push
data16
lcall
pusha
aad
xchg
fstl
mov
mov
sub
in
pop
imul
out
mov
cmpsl
and
cli
lret
add
out
lock
sbb
pop
sbbl
out
inc
xchg
mov
mov
pop
cmp
aad
and
gs
xor
lret
push
jmp
xchg
cmpsl
out
sub
notl
mov
shl
out
push
je
mov
mov
icebp
xor
or
xchg
enter
jmp
cmp
and
sbb
pop
fmulp
cmp
out
cmp
rep
xchg
jns
lret
nop
mov
pop
add
repz
jmp
sbb
dec
aad
and
scas
cmp
jecxz
movsl
push
xchg
sub
xchg
popf
sub
sbb
imul
rcrl
mov
sbb
bnd
aaa
push
testb
cmp
roll
or
inc
fcmovnu
cld
jnp
dec
cmp
fcomp
je
and
dec
cmp
into
gs
xchg
leave
rorb
mov
cli
outsl
mov
or
mov
daa
out
pop
sub
jnp
fs
popf
scas
adc
xor
jne
add
mov
inc
repz
mov
xchg
add
lods
jmp
movsl
pop
inc
ficomps
jecxz
pop
int
inc
mov
inc
js
fisttps
in
mov
pop
faddl
mov
cmpsl
jmp
repz
loop
je
loop
pushl
adc
pop
arpl
inc
lea
cmpl
push
aad
dec
arpl
out
into
pop
pop
mov
std
jae
xchg
imul
xor
xchg
inc
add
mov
movsl
out
jg
cli
and
pop
pop
inc
mov
shlb
mov
or
xchg
push
mov
xor
push
ss
mov
mov
testl
cmp
aam
cwtl
cwtl
add
pop
push
ss
movsl
cmp
popf
dec
in
mov
mov
sub
push
inc
les
cmpsb
shlb
fisubs
mov
movsb
mov
scas
outsl
pop
icebp
xchg
popf
and
add
xor
xchg
mov
call
adc
jns
mov
and
sarb
fidivrl
inc
mov
pushf
pop
fldenv
mov
cmpsb
ljmp
jg
jl
mov
add
into
xchg
pop
int
ret
xchg
adc
xchg
fnstcw
inc
fyl2x
lock
push
mov
jmp
stc
addr16
mov
fcomip
repz
fucom
dec
enter
int
cwtl
aas
cmp
mov
and
lcallw
insb
sbb
add
add
adc
lret
mov
adc
repnz
subb
aad
dec
je
out
movsl
enter
mov
cwtl
mov
push
mov
roll
or
je
push
setp
cmpsb
or
mov
push
inc
cmp
cmp
iret
pop
mov
bnd
jecxz
adcl
scas
aad
iret
or
and
repz
pop
popf
pop
pop
cmp
lea
bound
push
or
sbb
int3
mov
fucom
iret
fwait
xor
shr
adc
loope
inc
cmc
and
ljmp
es
pop
mov
push
call
adcl
xchg
popa
jae
addr16
push
fwait
add
and
sub
inc
call
add
imul
idivb
or
arpl
mov
test
inc
xor
aas
sub
and
mov
push
pop
push
and
sti
sbb
ds
test
or
mov
mov
pop
push
ret
fldl
dec
sub
rcr
repnz
rorb
fdivr
clc
rorb
pop
mov
inc
add
hlt
mov
xor
ret
mov
aad
push
jnp
jmp
movsl
mov
loop
mov
mov
push
sbb
sub
in
add
ja
inc
sub
push
inc
adc
pusha
xchg
sbb
mov
and
insl
inc
mov
and
and
cmp
cmp
lods
push
jmp
jl
or
cltd
mov
scas
pop
or
ret
push
push
mov
xchg
push
lds
pop
sub
pop
xor
inc
in
jae
jl
stos
shl
popf
into
test
add
lahf
dec
sub
pop
lds
notl
or
xchg
cmpb
lods
test
ja
and
or
ljmp
lock
insb
push
mov
aaa
inc
push
sbb
mov
pushf
ret
dec
push
fldenv
xor
gs
push
inc
cltd
adc
fs
sti
sub
test
ret
aas
sub
adc
inc
bound
push
andb
js
lock
fsubp
lds
xlat
lret
sahf
add
inc
jae
call
jge
pushf
adc
adc
aad
outsb
inc
pop
mov
pop
testb
fidivl
dec
test
in
pop
outsb
cmpsl
xchg
in
pop
andl
cmp
mov
xchg
adc
in
in
push
xchg
stc
adc
push
in
mov
movsb
inc
sbb
mov
in
in
sub
mov
ret
loopne
daa
sbb
mov
das
inc
cmp
mov
mov
add
dec
lods
pop
xor
scas
and
push
and
mov
sahf
mov
xor
outsl
ja
rol
mov
xchg
push
push
inc
in
xor
dec
add
int
cmp
mov
xchg
xchg
aaa
xor
mov
in
fldl
adc
mov
aad
push
in
pushf
loop
jmp
mov
js
xor
les
xor
adc
bound
int3
mov
pop
cmp
inc
xchg
and
not
xchg
jne
xchg
xchg
ret
xor
ret
int3
and
mov
xor
rcl
lret
xchg
add
inc
aad
jl
mov
repz
addl
shrl
aam
dec
or
mov
mov
dec
dec
aad
dec
pop
hlt
jne
lret
lea
mov
mov
jo
pushf
dec
fistpl
loop
insb
jmp
cwtl
movb
les
mov
push
mov
gs
je
jmp
and
mov
push
imul
cmp
cmp
data16
sahf
aad
inc
mov
pop
stos
jnp
stc
mov
je
lret
adc
mov
test
jl
aaa
lret
push
inc
jae
enter
lods
orl
out
jle
into
jo
xchg
js
cmp
push
sub
xor
mov
loop
cmp
jno
xor
test
inc
addr16
cmp
or
pop
test
mov
enter
lds
dec
popl
mov
inc
xlat
fcmovu
ffreep
adc
popf
jbe
movsb
fiadds
scas
sarl
jno
fwait
or
shr
ljmp
or
push
adc
mov
lea
push
lcall
mov
in
adc
adc
mov
fsubrl
cs
sub
push
rcrb
push
mov
mov
iret
adc
lea
inc
jae
fs
je
dec
outsb
sarl
dec
hlt
inc
out
add
movsl
push
test
jmp
movsl
enter
data16
adc
ds
pop
lea
mov
shrl
je
aaa
mov
xchg
mov
sub
xchg
lds
xchg
dec
cmpsb
inc
xor
adcl
jbe
lock
sbb
adc
aas
xor
enter
and
leave
in
mov
fisubl
test
jns
jno
mov
mov
shr
loopne
or
mov
sub
mov
pop
ljmp
mov
pop
lret
ficomps
idivb
notb
cmp
add
sub
jecxz
pop
inc
mov
xchg
ljmp
jg
pop
lret
gs
dec
and
cmp
jno
sarb
repnz
xor
dec
cmc
push
push
das
mov
jo
insl
dec
inc
xchg
cmp
aad
adc
push
nop
push
lods
push
imul
mov
aaa
in
les
gs
mov
sub
sbb
jne
mov
nopl
cmpsb
ja
out
mov
cmp
sub
inc
scas
or
mov
fs
out
lcall
out
std
inc
adc
and
adc
mov
adc
loop
les
jne
sbb
pop
pushf
cs
insb
jmp
pop
xor
xor
dec
jae
mov
jae
fs
std
add
and
cmp
outsl
pop
lcall
pop
fnstenv
das
out
add
mov
jmp
scas
mov
fiaddl
pop
stc
shrb
and
jmp
insb
mov
mov
jmp
call
mov
adc
shl
stc
dec
jmp
push
inc
adc
cmp
bound
adc
cmp
sbb
jge
jb
js
pop
int3
rolb
filds
sar
dec
or
xchg
mov
in
xchg
std
dec
mov
xchg
sbb
loope
aam
pop
out
es
lock
inc
fcmovbe
imulb
cld
and
inc
jnp
jbe
sub
pop
push
shld
popf
push
notl
sbb
xor
pop
gs
pop
push
andb
sub
stos
sbb
ret
sbb
es
movb
xchg
aaa
mov
push
inc
xchg
aas
test
imul
mov
fidivl
inc
ror
push
in
and
jp
jl
cmp
loopne
rorb
movsl
test
mov
push
xor
pop
dec
out
insb
mov
pop
xor
cmp
mov
xlat
stc
call
xor
out
mov
insl
lret
adc
mov
mov
fs
jp
dec
mov
pushf
add
imul
out
and
mov
sbb
daa
mov
outsl
shlb
daa
test
cmpsb
pop
xor
mov
iret
sbb
cmp
dec
jne
aaa
insl
lcall
insb
test
sbb
bswap
jg
loope
loopne
pushw
cmp
fnstsw
mov
pop
dec
push
jo
add
inc
stos
andl
repnz
ljmp
mov
pop
mov
pop
dec
cmp
xor
jg
xchg
fidivl
leave
subb
mov
mov
addl
adcl
cld
inc
fcoml
jae
ret
xchg
arpl
repnz
fistpl
cld
inc
cmpsl
fldl
or
testb
push
inc
pop
mov
pop
pop
imul
xchg
sbb
repz
sbb
pop
mov
gs
add
push
lret
and
xchg
in
addr16
or
push
jae
mov
lret
lahf
scas
mov
ret
add
push
adc
mov
inc
ljmp
push
add
push
cmpsl
fistl
movsb
cmpsl
cli
xchg
mov
pop
xor
enter
mov
and
inc
rorl
hlt
jp
jo
rcll
cmp
sub
inc
push
and
add
ret
cwtl
test
jecxz
push
add
xchg
cmp
jnp
dec
dec
sbb
mov
or
in
in
les
sub
fimuls
xchg
iret
and
add
dec
call
add
out
xchg
cmp
xor
dec
cli
pop
xchg
and
arpl
and
push
ret
push
xor
ret
aas
into
and
les
or
push
cmp
dec
cld
in
cmp
inc
jae
ss
call
repnz
adc
stos
add
popf
sbb
and
jne
pop
addb
aam
es
sub
pop
mov
or
adc
push
call
jne
cltd
dec
movsl
aas
dec
sti
add
mov
sbb
subb
lcall
faddl
xchg
add
ljmp
fistpl
push
push
lea
outsl
xchg
push
and
add
je
adc
lock
sub
gs
test
iret
push
pop
inc
adc
ljmp
pop
je
movsb
push
mov
pop
cwtl
xchg
push
push
jmp
push
add
sti
lahf
icebp
jne
lahf
mov
mov
fcoml
popa
mov
jmp
push
fnstcw
cli
push
sbb
add
inc
lahf
or
push
jecxz
xchg
in
xchg
jo
pushf
sub
mov
ds
or
mov
dec
leave
mov
xchg
or
push
sbb
mov
ret
jge
imul
xchg
mov
xchg
enter
xchg
inc
jge
enter
cld
sbb
cli
mov
jl
repz
sbb
mov
aam
sub
push
push
nop
and
push
in
adc
cmc
sahf
fidivs
scas
jecxz
clc
jbe
repnz
sbb
cltd
push
xchg
and
inc
push
imul
pop
xor
cmp
or
jge
push
mov
in
movsb
loopne
popa
loop
daa
adc
out
xor
in
lret
dec
mov
mul
push
std
idivl
xor
and
cmp
test
jge
rolb
outsl
sbb
out
pop
xchg
test
or
xchg
rol
jno
cwtl
movsl
cmp
outsb
push
outsb
sub
les
loope
popa
push
repz
int
out
push
inc
pop
xor
mov
or
incb
mov
xchg
xor
fmull
shrl
mov
lret
and
add
push
jne
mov
into
rorl
or
test
dec
xor
scas
push
cmc
fsubl
sbb
pop
mov
mov
clc
xor
inc
inc
xor
cmp
cs
jnp
mov
or
loope
jne
cs
fwait
decb
inc
stos
mov
out
mov
lods
movsl
pop
shll
arpl
push
fs
pushf
iret
fcompl
je
loop
outsb
dec
push
xchg
fstps
int
and
scas
das
and
out
cmp
jae
mov
divl
jge
imul
cld
out
adc
jno
sbb
or
and
push
sub
int
in
movsb
mov
fstpt
pusha
sub
lcall
adc
leave
fists
enter
fwait
mov
outsl
in
cltd
xchg
cmp
mov
dec
jae
push
jmp
jge
mov
shrl
and
iret
pop
fisttpll
outsb
lcall
je
cmp
mov
jp
and
loop
ds
pushf
mov
inc
sub
hlt
jle
mov
cmpb
mov
cwtl
sti
mov
pop
cmp
or
pop
hlt
add
xchg
bnd
xchg
cwtl
flds
adc
jp
sub
push
cld
js
add
js
cli
dec
jmp
push
push
das
inc
push
jnp
mov
or
bound
out
test
jmp
into
mov
inc
loope
pushf
dec
and
mov
xor
or
dec
xor
shl
adc
mov
inc
ja
and
pusha
mov
sbb
mul
iret
dec
fcoml
or
add
push
xchg
xlat
mov
fdivp
and
pop
push
xor
sub
or
or
stos
cmp
dec
pop
scas
imul
call
int3
dec
pop
inc
repnz
jb
loop
cmc
mov
int3
scas
imul
push
jmp
outsb
sub
adc
std
in
gs
push
mov
test
jne
mov
int
or
ljmp
sub
adc
pop
sbb
dec
dec
cli
orb
add
inc
dec
mov
inc
pop
xchg
cltd
mov
mov
sbb
cwtl
sub
repz
or
mov
fsts
mov
cli
or
mov
jb
jae
push
jp
adc
rcrl
dec
aad
and
std
cmpsl
rcll
and
mov
loopne
adc
nop
lret
or
lret
mov
pusha
out
into
idivb
rcr
lret
cmpsl
pop
jl
ret
cld
xor
lret
mov
insb
faddp
jge
push
and
jae
mov
movsl
sbb
inc
mov
iret
mov
sub
insb
mov
lea
lds
mov
in
pop
data16
inc
adc
std
add
jbe
or
push
or
loopne
ret
popf
pop
or
push
add
ljmp
sub
aaa
iret
pop
jbe
inc
jns
xor
testb
mov
or
push
sbb
cld
jl
ficoms
data16
scas
jnp
mov
fcomps
shufps
and
jne
fcmovnbe
xchg
dec
enter
mov
push
mov
addr16
bound
aad
xor
jne
outsb
or
jecxz
sub
ret
sti
jns
inc
adc
int
scas
add
arpl
inc
xchg
popa
aad
int3
push
xchg
mov
xchg
adc
mulb
scas
sbb
test
dec
rcrb
lods
jge
fnstsw
nop
sbb
dec
notl
repnz
or
pop
add
in
cmpsl
jno
lcall
or
sbb
push
dec
pop
xchg
push
int
pusha
rol
sub
lods
and
jns
fs
loop
xchg
dec
adc
mov
pop
rol
cwtl
ss
add
xor
jl
jns
je
adc
es
fwait
xchg
cld
stc
in
in
pop
xchg
mov
adc
std
sbb
adc
jns
aaa
jns
push
pop
or
into
pop
adc
out
repnz
dec
jnp
shlb
xchg
inc
subb
pusha
mov
push
mov
mov
mov
and
jge,pt
dec
and
ret
mov
das
test
cmp
mov
mov
fsubs
dec
jb
ret
rcrl
sub
xlat
movsb
jnp
rorl
out
sbb
movsb
into
sbb
xchg
aas
and
mov
mov
mov
into
in
int
inc
shll
mov
lock
inc
push
adc
mov
xchg
sub
loop
stc
pushf
mov
ljmp
aad
adc
jae
adc
mov
mov
fisubl
int
subb
mov
cwtl
fdivr
sbb
xchg
fisubrs
push
xchg
icebp
into
ljmp
loopne
int
out
cmpsl
les
cmp
dec
push
xor
addr16
ss
cwtl
push
mov
mov
jmp
push
inc
ljmp
cmp
or
xchg
jno
adc
sahf
cmpsb
xchg
lret
mov
and
add
push
push
scas
inc
ja
test
sub
fidivs
lret
push
repz
stos
add
jmp
ss
adc
xchg
gs
and
mov
mov
mov
mov
and
outsl
jne
lods
sti
mov
mov
pop
xor
lcall
enter
and
cmp
pop
popf
enter
std
wrmsr
push
arpl
cmp
mov
xchg
push
dec
xchg
iret
or
iret
dec
jae
add
mov
xor
enter
jno
popl
pop
scas
inc
jle
daa
out
mov
pop
imul
andl
lret
sbb
jg
rcll
xchg
out
je
nop
cmp
mov
out
sbb
and
cmp
cmp
andl
dec
cmpsl
imul
push
outsl
scas
mov
cli
xchg
data16
push
mov
lea
pop
mov
mov
add
cmp
and
mov
fnstenv
out
fldenv
fistl
add
addr16
mov
stos
xabort
mov
inc
stos
inc
test
jnp
icebp
cmpsb
int
pop
int
jo
ljmp
sub
push
sub
mov
inc
data16
rorl
hlt
std
pop
or
lahf
outsl
lods
mov
pop
and
loopne
leave
insl
and
psubq
clc
popa
xor
lahf
jmp
xor
imull
sbb
pop
cwtl
mov
xor
xor
popf
xchg
dec
movsl
mov
jns
push
cmp
fidivs
ja
pop
adc
dec
sahf
fs
clc
pop
sbbb
and
mov
xchg
jb
xchg
mov
lcall
mov
rcl
and
ss
lret
sub
gs
lret
sub
jb
adc
or
ret
movsb
pushf
xchg
pop
call
jge
mov
imul
push
fwait
jns
dec
mov
jl
mov
and
inc
in
int3
lods
cli
test
dec
insb
adc
lods
push
adc
sbb
mov
arpl
sub
hlt
sbbl
or
jle
push
ds
fs
add
icebp
dec
lcall
mov
push
xor
cmpb
loope
pop
sbb
or
enter
push
pop
fisubs
push
push
pop
aaa
aaa
sub
cli
mov
mov
lcall
lock
out
inc
adc
sarl
sub
cmp
mov
shlb
repz
mov
aad
jmp
call
mov
ja
mov
movsl
ss
cmp
lock
shrb
repz
push
in
push
mov
and
xor
fnclex
or
enter
xchg
shrl
sahf
mov
test
js
jle
sub
sub
ret
inc
xchg
inc
shll
xor
mov
inc
out
and
je
in
push
cld
ja
jbe
out
xchg
or
fsub
mov
sub
inc
clc
call
push
sub
jnp
cld
mov
pop
andb
cld
pop
ret
and
or
out
outsb
or
int3
fadds
pop
jns
xchg
dec
xor
mov
lret
nop
mov
mov
jnp
js
inc
sub
int
xchg
or
adc
or
lods
iret
into
adc
sahf
test
ret
cmp
pop
int3
and
aad
aaa
neg
adc
xchg
leave
insb
hlt
xchg
mov
pusha
daa
cwtl
in
ror
sub
pop
outsl
sub
outsl
mov
and
adc
jae
push
pop
inc
push
and
push
add
mul
mov
push
xchg
pusha
das
sub
inc
or
outsl
outsb
adc
out
push
cmp
mov
lret
repnz
dec
lret
sbb
and
imul
cmpsb
and
fstps
mov
sub
jae
xchg
push
push
lahf
add
push
push
cmp
pop
mov
pop
jl
test
and
mov
pop
sub
fwait
push
test
add
scas
mov
sarl
pop
sub
xchg
mov
mov
fldenv
rorl
xor
sti
mov
ficomps
nop
jbe
sbb
imul
outsl
fdivrl
xor
je
push
xchg
pop
xchg
cmp
adc
clc
out
pop
and
sbb
mov
lods
sub
push
xchg
adc
pop
xchg
fmull
es
inc
cmpsl
sarl
scas
jns
dec
and
mov
mov
aaa
enter
pop
adc
dec
sarb
cmpsl
int3
in
add
mov
xlat
mov
lcall
dec
mov
or
int3
sti
hlt
andl
repnz
jmp
add
pop
mov
adc
xor
dec
add
pop
repz
call
and
loope
pushf
nop
or
cmp
mov
in
daa
pop
rclb
cmp
mov
out
pusha
jne
ret
clc
push
pop
andb
ret
cld
jne
xor
outsb
inc
and
mov
cwtd
fldcw
jg
xor
ficomps
xchg
mov
out
inc
ljmp
jge
les
and
les
sbb
aaa
decb
pop
hlt
push
xor
call
jne
xchg
jnp
ror
mov
pop
bound
rcrb
pop
add
mov
ret
cmp
dec
js
jb
sbb
adc
repnz
icebp
jbe
fsubs
mov
mov
fbld
rcll
pushf
jns
mov
mov
imul
mov
outsl
adc
push
shlb
aas
in
xchg
dec
mov
std
add
push
sarb
xchg
jo
jp
popa
sbbl
insb
mov
jbe
cmp
icebp
add
ss
mulb
pop
cmp
sub
sbb
xchg
loope
ficoms
lods
sbb
jp
sub
sbb
xchg
sahf
xchg
cmp
push
fidivrl
dec
rorl
cmpsl
jno
mov
inc
jl
jae
fs
lar
pop
lahf
mov
int
adc
cmpsb
mov
xchg
nop
pop
xlat
popa
ror
cmpsl
sub
std
adc
xor
adc
leave
jecxz
stos
jb
shrl
push
sub
das
cmp
ljmp
inc
sub
std
jnp
in
add
xor
imul
mov
fdivp
ja
adc
mov
rcrl
aaa
mov
ret
xchg
push
scas
mov
push
push
sub
fbstp
es
cmp
fwait
dec
xchg
xor
lods
lea
pop
ss
add
clc
pop
add
fmul
in
into
filds
mov
push
inc
jmp
aad
inc
scas
ficoms
mov
aam
sub
je
jbe
xchg
shl
xorl
adc
in
sub
fnstenv
stc
jo
push
or
mov
mov
sbb
adc
cmp
xchg
add
mov
dec
daa
hlt
push
pop
dec
cltd
inc
imul
pusha
lret
mov
jl
dec
cmpsl
popf
pop
shr
sbb
imul
cmp
xor
add
cwtl
loopne,pt
outsl
leave
jg
in
and
jbe
xchg
stos
sub
insb
psubsw
in
mov
or
in
ljmp
xor
pop
pop
es
add
cli
test
sub
sub
add
add
jl
push
xchg
testb
jns
out
xor
push
mov
into
test
mov
push
push
sbb
lods
test
xchg
ret
sbb
clc
xchg
xor
sub
add
ja
dec
pop
andb
sbb
and
and
mov
mov
adc
pop
subb
cmp
pop
and
nop
sbb
pop
and
push
or
and
cmpsl
or
out
xchg
and
sub
mov
jle
sbb
xlat
scas
cmp
sbb
pop
popl
js
jno
push
inc
iret
dec
int
sbb
jl
adc
or
fwait
aaa
call
cwtl
xchg
icebp
lret
das
fnsave
mov
fadd
mov
or
cld
fs
imul
das
jge
aaa
or
out
dec
mov
lcall
mov
test
cli
pop
cmp
pop
push
and
mov
ss
rorl
xchg
add
cmpsb
lea
push
mov
mov
mov
cmpsl
xchg
in
or
jno
pushl
in
sbb
and
mov
out
and
jbe
xor
xor
jae
in
movsb
mov
dec
adc
dec
sbb
pop
insl
lret
ror
stos
push
adc
aaa
jmp
adc
das
pop
inc
lret
outsb
xchg
imul
fwait
and
outsb
ret
arpl
cli
out
movsb
ja
push
ret
adc
cld
out
cmc
dec
js
mov
jmp
jo
out
sbb
test
lret
repz
push
es
lds
adc
fsubs
xor
loopne
mov
pop
popa
push
enter
pop
cmp
shl
negl
mov
cli
cmp
mov
fsubs
es
cmpsl
out
in
daa
mov
daa
lods
shll
shrb
vroundps
jp
loope
mov
xchg
loop
jg
xor
in
add
or
mov
insl
add
sub
jmp
cmp
pop
loopne
mov
mov
sub
ret
movsb
push
pop
ja
je
mov
adc
inc
inc
and
pop
loopne
shlb
out
mov
cmp
cltd
int
or
mov
insb
lea
stos
push
adc
pop
pop
or
sbb
mov
xchg
xor
xor
or
or
hlt
nop
inc
push
mov
loopne
gs
adc
pusha
ret
sbb
out
add
jno
xor
pop
jne
jg
xor
mov
ret
filds
sub
pop
dec
push
testb
clc
jmp
fucomi
and
movl
jo
out
mov
push
mov
fmul
loopne
outsl
in
add
and
jp
std
out
nop
dec
scas
mov
xor
shll
enter
jb
mov
aad
mov
gs
mov
sbb
imul
pop
outsb
repz
lret
jp
jge
cs
and
stos
clc
fldcw
in
push
cltd
and
mov
dec
insb
adc
or
pop
addr16
cmpsb
and
dec
loopne
push
sbb
test
mov
or
fwait
aaa
sub
repz
xor
scas
repnz
jge
pop
or
and
test
xor
js
insb
mov
inc
jbe
cltd
cmp
cwtl
pop
shlb
daa
data16
mov
xchg
xor
cmp
inc
add
push
mov
mov
inc
imul
cmpsl
push
mov
cs
clc
sbb
ja
imul
dec
mov
movsl
pop
jno
bound
imul
jge
into
pop
add
xor
or
jo
fidivs
mov
data16
rclb
dec
js
pop
pop
push
inc
imul
fimuls
and
call
xchg
fimuls
lock
add
dec
jne
jb
loope
stos
jnp
cmp
cmc
sti
lret
ret
fldenv
movsl
jns
adcb
pop
out
push
das
push
data16
push
push
xchg
jg
push
jg
cwtl
dec
mov
jae
pop
std
xor
pop
inc
test
mov
pop
mull
cmc
xor
dec
cli
jl
add
pop
mov
or
int
lock
xchg
ret
mov
dec
mov
lea
out
jnp
imul
movsl
inc
and
aad
push
pop
inc
and
outsl
stos
fcoml
rclb
lcall
xchg
jmp
aam
clc
mov
stc
repz
mov
scas
sub
mov
jmp
sbb
lcall
cmpsb
into
fwait
push
in
int3
loop
jno
and
test
cmp
faddl
pop
cmp
daa
mov
push
sbb
filds
jae
sub
fcmovb
pop
arpl
int3
sbb
gs
cmp
adc
jo
cmp
xchg
add
cli
ja
pop
dec
int
repnz
dec
sub
arpl
or
sbb
adcb
scas
dec
imul
sub
cmp
adc
dec
sub
rcl
pop
fwait
mov
lock
sbb
xchg
imul
rorl
mov
mov
out
dec
or
push
ljmp
sbb
movsl
xchg
mov
pop
and
insl
ss
sbb
adc
xchg
pop
adc
shll
cmpb
mov
adc
jbe
es
mov
adc
insb
lock
imul
popa
lock
adc
pop
xchg
cltd
sahf
scas
mov
add
push
bnd
sbb
clc
fstpt
ss
int
dec
or
or
sbb
mov
loope
pop
push
jbe
mov
sub
rclb
fst
aad
outsl
or
mov
repz
fwait
xchg
xlat
jnp
mov
jnp
add
pop
dec
jp
inc
stos
add
test
pop
iret
push
xor
lret
or
mov
fdivrl
inc
rcr
in
mov
push
add
call
sbb
ss
scas
nop
mov
pop
jp
fimuls
test
cmp
cs
push
cld
mov
pop
push
in
pop
cmp
in
mov
sub
in
inc
sti
jo
clc
cltd
repnz
or
scas
xchg
sub
jae
mov
pop
adc
xor
sarl
xchg
pop
add
imul
into
dec
loope
pusha
mov
enter
sub
sub
push
insb
cwtl
add
mov
ja
jne
repnz
mov
scas
xlat
or
jae
jg
cmc
ds
xchg
repz
inc
pop
cwtl
mov
xchg
jnp
cmpsl
das
inc
das
out
add
and
adc
mov
adc
push
push
cmp
or
sbbb
rorl
repz
lret
and
call
inc
lret
repnz
mov
pop
inc
inc
push
fldlg2
popf
bound
les
fildll
clc
pop
sbb
bsr
jbe
movsb
into
sub
test
imul
lock
jne
aas
fdivrp
inc
add
or
or
push
mov
and
outsl
jp
lcall
imul
aas
adc
push
and
lods
push
jg
ja
jg
cld
scas
xchg
sahf
pop
sub
mov
aaa
sbbb
pop
out
or
push
push
sbb
std
icebp
cmp
fcmovne
or
push
mov
adc
mov
std
sti
repnz
mov
sub
ja
mov
jge
subb
out
mov
jno
cmp
fneni(8087
xchg
adc
or
and
sarb
jns
xlat
add
sbb
lea
scas
jg
mov
cmpsl
sti
shll
xor
mov
ss
and
mov
repz
xchg
mov
sarb
movb
sahf
pop
add
or
and
push
sbb
jns,pn
jp
push
sahf
push
daa
adc
sbb
pop
inc
je
pop
dec
mov
je
xchg
add
sub
repnz
mov
or
jo
out
icebp
sub
sbb
ret
jno
ja
mov
out
or
dec
push
aaa
mov
pop
xchg
sub
mov
sub
jnp
sbb
dec
add
outsb
xchg
lcall
mov
mov
in
lea
sbb
pop
xor
mov
mov
mov
icebp
fisubrs
inc
jl
ret
lds
adcl
adc
sbb
cmpl
jmp
pop
add
fs
or
mov
insl
adc
daa
imul
sub
add
cmp
jg
fistpll
mov
pop
and
lea
inc
jns
xor
pop
lods
inc
lock
xchg
mov
mov
sbbb
jg
movb
and
ljmp
cld
mov
inc
hlt
mov
xchg
dec
mov
xchg
fwait
lock
js
lods
push
jmp
pop
popl
js
mov
fnsave
lods
jne
mov
jae
mov
lret
cmp
cwtl
popa
pusha
mov
dec
lea
pop
adc
push
sbb
ret
adc
and
shlb
int3
repnz
pop
pop
clc
push
mov
mov
sbb
lea
xchg
pop
mov
xor
ss
dec
dec
mov
sbb
pop
enter
pop
inc
lret
sarl
rcrb
lret
ja
fcomip
sub
adc
push
pop
or
push
sar
sbb
bound
dec
jb
inc
loopne
pusha
aaa
jae
aam
sbb
sti
stos
xor
jg
into
mov
ds
scas
pop
fisttps
sub
mov
je
inc
les
xchg
mov
data16
pop
pop
inc
cmp
mov
xor
push
xor
and
jnp
push
cmp
mov
pop
aam
popa
addb
aad
hlt
cmp
inc
or
lahf
push
add
pop
sub
mov
bound
and
inc
pop
ds
adc
jbe
imul
movsl
jg
test
jg
test
aaa
in
jp
clc
xor
int
mov
mov
inc
idivb
add
xchg
cmpsb
adc
icebp
fwait
in
push
jbe
and
jo
cli
sar
cmp
jmp
int3
mov
insl
mov
mov
adc
jl
xchg
daa
adcb
pop
sub
jmp
pop
pop
or
dec
sub
ds
out
xchg
or
or
shl
inc
rorl
divl
sbb
loopne
lahf
sub
mov
mov
nop
addr16
inc
les
adc
inc
fstl
adc
inc
xlat
imul
arpl
ss
imul
lds
or
or
repz
push
jno
cmp
mov
test
cltd
adc
lods
negl
cmp
aad
push
cwtl
mov
sbb
pop
dec
out
test
in
roll
mov
fistpl
xchg
mov
jb
inc
jbe
das
fimull
jnp
adc
sbb
add
sbb
leave
adcb
roll
stc
cmp
ror
fisttpl
pop
jp
jmp
test
push
mov
mov
js
cmp
out
jle
iret
in
jnp
das
aam
sub
push
dec
ror
push
std
hlt
jbe
mov
push
daa
in
inc
or
les
inc
repz
cmpb
mov
psllw
cmp
stos
fsub
jp
mov
pop
into
xor
out
imul
xchg
add
push
icebp
sahf
inc
leave
jp
xchg
sbb
lds
cld
ret
fnsave
arpl
in
cs
push
es
popa
add
test
mov
or
mov
pushf
shl
idiv
hlt
out
and
and
xor
cmpsl
dec
cmp
pop
pop
imull
push
nop
stos
jecxz
pop
inc
popf
mov
aas
ret
stc
leave
jbe
cmc
or
inc
cmpsl
ret
ja
stc
lcall
pop
pop
out
jno
push
es
daa
pop
push
xor
fdivrp
push
inc
lock
outsb
mov
ret
push
sbb
gs
adc
jg
test
fdivr
int
rorb
mov
mov
cmpsb
cmp
mov
dec
repz
mov
scas
adc
scas
push
mov
shrl
pop
and
cli
push
cmc
stos
xchg
fbstp
cmp
xor
cltd
adc
mov
inc
inc
rcrl
xchg
sbb
jmp
ficoml
mov
adc
cmp
inc
in
pusha
mov
mov
lock
addr16
sti
cmp
xor
cmpb
clc
out
pusha
inc
ljmp
sbb
sub
adc
clc
and
mov
fwait
icebp
or
sub
iret
iret
dec
pop
dec
pop
jge
push
data16
cmp
sub
std
push
push
and
fiadds
pushl
ja
xchg
jne
xor
xor
cmp
fistpll
add
mov
mov
hlt
stos
jnp
repnz
jbe
scas
sarb
jae
es
fs
jno
cld
out
sbbl
adc
mov
add
sub
mov
mov
shlb
lods
dec
in
push
push
leave
aaa
pop
or
in
sarb
add
mov
imul
push
enter
addr16
mov
addr16
lea
cs
addr16
push
sbb
or
add
cld
xchg
data16
mov
inc
jae
pop
mov
aaa
jo
fs
mov
dec
repnz
dec
xor
jp
pop
out
test
sbb
fisubl
mov
jmp
dec
push
lret
lret
adc
jmp
int
and
cli
mov
loope
aas
jg
aad
and
add
lods
lret
pushf
xchg
mov
ja
inc
test
sub
notl
sbb
aas
in
js
jne
pop
and
clc
pop
ja
and
sahf
lods
cmp
test
cmp
gs
xchg
adcb
out
adc
cmp
fstpl
notb
sub
xchg
add
sarb
mov
mov
aas
in
iret
xor
jle
mov
mov
fimull
sbb
xchg
hlt
sbb
sub
pop
pop
jo
xor
rorl
fstpl
shlb
xchg
nop
ret
dec
movsl
repz
jnp
and
imull
stc
sbb
fwait
add
gs
push
lds
xchg
pop
fidivrl
or
in
out
cmc
mov
dec
iret
pushf
mov
pop
mov
scas
dec
jne
iret
aam
loopne
mov
xchg
mov
lret
xor
rcr
sbb
outsl
hlt
ljmp
inc
jo
imul
inc
imul
ds
ficomps
mov
sti
mov
aaa
push
fbstp
or
xchg
pop
je
mov
hlt
xchg
push
jmp
sbb
test
sub
or
xor
inc
or
sub
push
hlt
mov
arpl
sbb
sti
pop
inc
cmpsl
loope
into
in
and
in
cltd
imul
out
mov
and
mov
int
es
data16
enter
mov
ret
sub
and
outsl
cltd
and
pop
imul
xchg
push
jle
and
cs
inc
bound
sti
mov
test
scas
out
mov
inc
xchg
mov
mov
hlt
dec
cmp
mov
jle
or
mov
lcall
out
jno
adc
inc
inc
rclb
sahf
and
rcr
cmc
dec
fadd
push
jl
std
cmp
inc
push
loope
cmp
push
es
roll
dec
xor
call
insb
popl
mov
ja
push
or
daa
call
mov
xor
or
mov
stos
and
test
rcrl
js
mov
cld
lods
cmp
inc
jmp
mov
mov
ds
ja
inc
pop
lret
dec
mov
data16
test
sbbb
arpl
sub
cwtl
addl
stos
sub
mov
add
repnz
test
addb
xor
test
rorl
orb
fwait
pop
std
pop
shlb
mov
xchg
push
das
arpl
sub
loopne
sbb
or
ljmp
xor
and
fsubrp
pop
pop
cli
sbb
inc
inc
push
dec
nop
out
or
cmp
std
xor
out
call
dec
int3
add
mov
push
sbb
jb
push
fistpll
mov
xchg
push
mov
xchg
nop
sub
pop
mov
push
xor
or
insl
mov
in
repz
inc
push
fcmove
dec
in
sub
jo
stc
adc
push
loope
inc
push
cmp
cmp
sub
scas
cmpsl
cmp
and
roll
nop
xlat
das
add
xchg
pop
in
fiadds
mov
and
cmp
add
xor
cs
jp
mov
ljmp
jbe
aas
mov
push
insl
dec
aas
pop
cli
inc
cmc
and
add
out
xchg
cli
stc
jnp
test
aam
inc
test
gs
push
in
insl
push
pop
popa
pop
add
fwait
mov
out
pop
in
and
sub
ret
inc
ds
mov
and
leave
dec
dec
out
push
cli
xchg
pop
or
pop
push
je
and
mov
sub
xor
jbe
and
cltd
mov
inc
fnstcw
or
cmp
or
fsts
insb
xor
jb
dec
insb
rcll
lahf
gs
insl
lidtl
mov
jecxz
repnz
out
lcall
mov
dec
or
rclb
insb
icebp
pop
sbb
xchg
jmp
mov
pop
std
mov
or
xor
int3
aad
out
mov
pop
cmp
cmc
test
inc
addl
xchg
ljmp
dec
mov
es
pop
mov
arpl
adc
pop
xlat
jmp
push
pusha
mov
push
adc
xor
mov
jecxz
dec
loopne
icebp
test
rcrb
jge
dec
xchg
dec
push
mov
sahf
into
out
insl
xchg
jmp
cmp
ja
fimull
push
mov
out
mov
xor
dec
adc
loopne
add
orb
dec
in
sbb
jle
subl
sti
cli
or
stc
dec
push
jnp
cmp
mov
xchg
cmp
mov
jnp
stos
mov
subl
jbe
popa
cs
cmp
jecxz
dec
mov
sub
mov
cmp
push
inc
jmp
ds
fisubrs
mov
lret
ds
aam
int3
mov
xchg
inc
jae
in
dec
cmp
addr16
mov
pop
popa
roll
jb
inc
inc
inc
xchg
icebp
fwait
jg
pop
ss
mov
push
jno
inc
aad
add
std
add
fadd
xor
scas
xchg
or
mov
and
ds
add
cltd
lds
cltd
lret
jmp
cmp
sub
mov
cmc
pop
ja
mov
xorl
cmp
mov
imul
mov
add
mov
dec
sub
mov
pop
div
insb
mov
out
movsb
xlat
rolb
rcll
in
or
cwtl
fadd
cltd
pop
repz
push
inc
cmpb
nop
mov
sub
adc
cltd
push
push
outsb
jmp
mov
leave
pop
out
dec
push
lea
cmp
hlt
prefetch
or
out
test
push
movsb
and
jno
sub
ljmp
je
je
std
imul
int
sbbl
or
mov
gs
fiadds
out
shlb
mov
sbb
xchg
dec
mov
scas
out
dec
test
pop
add
std
repz
adc
jo
adc
scas
adc
test
add
les
push
mov
dec
push
xchg
mov
pusha
pop
cmp
lods
sbb
les
push
or
in
hlt
mov
push
pop
lods
push
mov
ss
ror
sub
pop
fwait
jp
mov
scas
push
data16
mov
dec
scas
inc
jo
sarl
jae
adc
cs
sbb
and
iret
hlt
in
push
sbb
mov
cltd
sarb
sarb
out
cwtl
pop
inc
mov
xchg
add
mov
out
and
popf
mov
adc
sub
in
in
sbb
dec
xchg
sarb
jns
fwait
jo
jle,pn
jae
nop
test
sti
pop
mov
ljmp
xchg
mov
outsb
test
loopne
mov
adc
fmull
mov
repnz
sbb
out
pop
out
sbb
push
loop
pop
movsb
shlb
or
xchg
stc
imul
mov
cmpl
and
sub
mov
nop
ficomps
pop
pop
in
pop
xor
movsl
fcoms
clc
fiadds
or
scas
das
dec
and
imul
addr16
insl
xchg
lock
inc
aaa
dec
ljmp
sbb
pop
sbb
push
cmpsl
fidivrl
dec
and
cmp
sbb
push
and
fsubs
xor
aad
mov
shlb
and
push
cmp
pop
sbb
and
lret
mov
jb
out
icebp
lcall
mov
pop
dec
dec
lds
js
lcall
adc
push
bound
mov
mov
gs
mov
push
xchg
pop
mov
dec
dec
mov
or
mov
push
les
lock
sbb
adc
mov
mov
and
adc
cmp
test
sub
pop
pushw
mov
inc
aas
rcll
sarl
pop
scas
ret
insl
push
cmpsb
clc
and
mov
andl
dec
fwait
xorb
mov
sbb
mov
je
mov
mov
push
xchg
mov
push
in
ret
adc
scas
adc
jle
and
int
pop
out
cltd
pop
sti
cltd
lds
mov
hlt
and
lock
pop
mov
cmp
into
hlt
sbb
ljmp
mov
gs
call
adc
es
xlat
in
orb
insl
and
ret
sub
loop
cmp
cmp
push
add
xchg
mov
mov
js
inc
mov
addr16
mov
push
mov
sub
cwtl
loop
mov
in
lds
mulb
adc
adcl
cmp
cmp
sub
cmp
subb
cmp
adc
adc
push
in
pop
cmpsb
jge
pop
enter
dec
insl
jge
int3
pop
mov
push
clc
cmp
push
jge
xor
pop
cmp
subl
cmpsl
roll
lea
mov
or
pop
fistl
stos
mov
dec
mov
mov
jle
mov
fwait
or
xchg
jns
or
leave
mov
ret
rol
call
push
xchg
xlat
loopne
mov
jae
mov
inc
scas
pushf
in
push
pop
lahf
mov
hlt
popf
in
mov
add
pop
or
stos
test
aam
pop
sbb
data16
sbb
push
mov
fs
jb
adcl
pop
dec
stc
lcall
jns
adc
lcall
sbbb
jle
push
mov
out
xor
pop
pop
scas
xchg
add
dec
fsubrl
sbb
pop
dec
in
pop
xlat
jg
stos
cmc
push
clc
daa
aad
add
pop
jnp
dec
xchg
dec
aaa
shlb
cmp
sbbb
inc
sub
popa
xor
pop
shr
jmp
cmp
pop
lock
dec
add
aas
inc
loopne
nop
icebp
jno
add
dec
xchg
cmpl
cmp
orl
loope
les
cwtl
xchg
mov
inc
dec
push
push
div
or
test
stos
inc
sub
xlat
in
arpl
adc
orl
cmp
out
into
int
cltd
icebp
cmc
popa
inc
xor
std
out
jb
scas
scas
int
dec
je
rclb
and
dec
mov
out
outsb
sub
in
xor
stos
insl
jnp
loop
push
dec
push
dec
sbb
pop
pop
and
push
cmp
cmp
loope
cmpsb
js
inc
pop
int
sub
mov
jl
addb
push
ss
inc
fildl
scas
xlat
or
lret
pop
or
addr16
fs
or
mov
push
or
xchg
dec
add
mov
imul
lahf
jnp
int3
sti
pop
adc
test
test
shll
movsl
inc
out
icebp
jae
ret
xor
dec
rcrl
push
add
or
push
mov
dec
out
xchg
xor
repz
sti
inc
mov
cmp
push
or
sahf
adc
sbb
es
decl
cmp
test
shll
dec
call
or
jns
lret
jecxz
js
or
icebp
pop
mov
dec
push
loope
int3
pop
sbb
int3
mov
mov
jg
call
mov
nop
movsl
outsl
ja
dec
jno
push
ds
pop
cli
jnp
inc
mov
repnz
mov
ss
imul
dec
dec
jae
shll
test
adc
inc
and
mov
or
pop
scas
adc
mov
pop
mov
mov
jecxz
mov
int3
mov
das
dec
aas
aaa
lret
mov
push
push
pop
je
and
fcomps
pop
or
mov
dec
shl
jnp
jl
cmp
mov
jbe
js
jmp
xor
imul
scas
pop
push
ret
mov
xchg
clc
sub
xor
push
push
fsubrs
inc
inc
dec
xchg
cwtl
mov
rorb
adc
lahf
jmp
adc
xor
add
fdivl
jnp
jb
pop
pusha
jns
shrb
dec
xchg
movsl
push
dec
push
int3
dec
jl
test
shll
cwtl
in
push
fwait
jmp
fadds
bound
dec
xor
sahf
jae
stos
jo
test
mov
lea
popl
xor
sbbl
mov
inc
cmp
lcall
loope
imul
outsl
pop
xchg
or
pusha
scas
stos
in
pop
fistpl
mov
nop
orl
insl
xchg
sbb
jle
jnp
fdivl
fists
dec
sub
cs
mov
cmp
out
inc
xchg
inc
sub
xchg
movsb
xor
dec
sbb
dec
cmp
cmp
sbb
fwait
inc
in
and
mov
jmp
jno
lahf
pusha
hlt
jns
xor
jns
lahf
xor
and
pop
xchg
subl
mov
add
or
mov
mov
cmp
lret
mov
sub
fnstenv
loop
das
mov
fs
mov
in
jnp
pop
ret
outsl
mov
cmp
fs
cmp
mov
xchg
inc
xchg
jns
int
push
jl
je
inc
ret
cld
add
fwait
sub
enter
add
mov
lea
push
pusha
mov
scas
jne
cmp
scas
imulb
int3
mov
pop
jg
inc
sbb
movsb
mov
mov
inc
fisttps
cltd
ret
or
imul
cli
std
daa
cld
out
in
pop
outsl
or
sub
push
std
xchg
pop
cmc
push
mov
dec
jne
repnz
roll
sahf
fs
ss
into
mov
dec
adc
jg
cmp
outsb
xchg
dec
adc
sbb
and
int
xchg
sub
inc
movsl
inc
jno
mov
add
mov
or
inc
jne
icebp
and
scas
fldenv
pop
divl
inc
dec
cmp
outsb
cltd
dec
mov
fwait
addl
xchg
clc
mov
das
es
mov
sbb
mov
in
mov
test
stos
popl
jle
inc
add
xor
loope
mov
pop
jl
mov
cltd
enter
lock
sub
test
inc
push
adc
xchg
aam
rcrl
inc
push
stos
aaa
les
subb
jg
cld
rcrl
fsubl
xchg
fnstenv
adcb
and
cs
out
inc
imul
int
sub
cltd
sbb
jne
movsl
adc
rclb
imul
mov
je
mov
loop
inc
mov
repz
jecxz
jo
rol
cmc
cmpsb
pop
mov
lret
test
movsl
push
daa
jecxz
cmp
loope
iret
mov
lea
fldt
push
leave
das
icebp
daa
cli
mov
add
inc
out
js
sbb
lret
or
sbb
sub
cmp
hlt
dec
jmp
and
aas
push
daa
adc
mov
mov
inc
xchg
xor
ja
mov
adc
pop
icebp
js
jge
test
cmp
lea
pushf
fisubrs
orl
inc
xor
subl
rcl
call
mov
mov
and
std
hlt
push
jge
push
jecxz
in
les
daa
ljmp
cmp
jle
mov
pushf
fbstp
ror
push
pop
adc
shld
jo
je
int
push
push
dec
into
mov
adc
imul
sub
frstor
in
dec
push
repnz
mov
rolb
push
xchg
push
scas
xchg
imul
andl
negl
daa
xchg
lcall
xor
cs
add
dec
xchg
shl
scas
fildl
imul
cld
and
pop
cmc
shlb
dec
pusha
mov
lret
lods
popa
test
int
mov
sbb
jae
in
cwtl
inc
lcall
sbb
push
imul
dec
popa
sbb
push
xchg
pop
les
lea
or
dec
dec
jns
or
sti
les
inc
fcomps
jne
cmpsl
mov
push
xchg
adc
test
popa
cmc
add
imul
cs
xchg
int
and
push
inc
add
mov
test
lds
cmp
mov
mov
add
lret
test
or
or
aas
sbb
addr16
push
and
loope
ss
sub
fwait
jmp
push
mov
dec
andl
xchg
cmp
ret
or
stos
arpl
dec
inc
sub
inc
mov
pop
xchg
pop
ja
sbbl
jne
fwait
inc
sub
xchg
pushf
mov
pop
idivb
sbb
mov
out
in
std
popf
mov
pop
mov
jbe
shll
cmp
adc
xor
mov
js
xor
or
push
lds
negl
push
sar
and
mov
dec
stc
dec
dec
push
cmpsb
dec
inc
arpl
jnp
add
scas
add
jae
xor
mov
pop
mov
jns
mov
aam
jmp
mov
jge
sbb
pop
loopne
insb
rcr
popa
jecxz
enter
sti
ss
cmp
test
fsubs
enter
fs
push
mov
sahf
adc
inc
mov
shlb
mov
pop
push
dec
rorb
xchg
mov
das
cli
mov
push
xor
pushf
arpl
movsl
jbe
rclb
jne
cmp
sbb
push
mov
test
cmc
mov
pop
in
popf
pop
pop
cmp
lea
inc
divb
mov
sub
inc
or
fisttps
ret
pop
or
mov
stc
cmpsl
adc
in
push
repnz
negb
popf
out
mov
scas
and
sub
mov
xchg
xor
ds
xchg
addr16
or
xor
jge
mov
or
pavgw
or
jp
sbb
imul
int
in
jnp
out
inc
mov
xor
mov
in
fisubrs
les
hlt
inc
lock
adcb
pop
jecxz
movsbl
mov
aas
pop
test
push
inc
in
mov
stc
push
call
push
or
ret
not
sub
out
xor
outsl
and
pop
neg
sub
out
hlt
std
mov
xchg
dec
les
enter
aas
xlat
sub
or
pop
xchg
and
sub
ret
mov
dec
jl
into
dec
iret
push
outsl
sbb
inc
fwait
in
adc
fidivrs
xor
addr16
sbb
sbb
mov
sbb
int3
enter
in
jge
or
or
repz
cwtl
mov
mov
shr
cmpsb
inc
jns
fdivl
jp
adc
lahf
add
xor
arpl
out
dec
stos
cwtl
pop
rcrl
lcall
sbb
clc
shlb
test
jle
mov
mov
cwtl
aaa
rcrb
out
cmp
push
fs
nop
and
lcall
iret
mov
pop
movb
jo
sbb
pusha
xor
adc
cmp
es
out
inc
jae
sub
jmp
push
jnp
xor
mov
cmc
ret
sub
scas
lcall
xor
add
mov
repnz
mov
test
repz
inc
jae
and
xor
cmp
jl
inc
js
aad
dec
stc
sub
jne
cwtl
pop
sbb
mov
sahf
mov
fstl
into
jbe
fcmovb
insl
lock
xorb
icebp
flds
in
push
jp
jecxz
call
xchg
sub
sbb
mov
jmp
and
into
dec
fisubrl
push
dec
push
sub
decl
mov
xchg
stos
mov
xchg
pop
pop
push
push
shlb
imul
push
push
adc
hlt
cmpsl
adc
daa
fst
movsl
and
cmp
or
and
outsl
cmp
add
movsl
push
jnp
dec
out
mov
call
cmpsl
arpl
push
push
push
test
mov
pop
in
push
fbld
faddl
jg
ljmp
xchg
and
mov
out
nop
lret
push
cmp
xchg
fisttps
dec
mov
iret
xchg
jle
xor
sarb
clc
mov
sti
xor
jbe
push
push
cmp
imul
pop
int3
popa
cwtl
out
mov
icebp
push
addb
push
mov
cltd
dec
add
scas
addl
das
outsb
lcall
mov
fs
mov
in
std
xchg
push
std
xor
shl
sbb
add
mov
nop
adc
pushf
pop
xchg
push
xor
test
xor
inc
ret
sti
mov
shrb
push
xor
mov
addr16
mov
xchg
movsb
fwait
dec
jl
out
std
mov
in
rorl
ja
mov
sbb
xchg
mov
int
je
outsl
adc
jnp
cmc
mov
out
stos
or
dec
xchg
js
mov
sarb
movsl
pop
xchg
sbb
xchg
dec
test
aaa
insl
sbb
ret
push
or
scas
aaa
adc
out
mov
rcrb
lahf
pop
xchg
mov
loop
sti
lods
sub
addr16
cmpsb
in
or
mov
jge
add
inc
mov
ss
dec
dec
popf
mov
lods
aas
outsb
and
je
lahf
aaa
in
popaw
fxch
stc
test
push
insl
in
jns
dec
outsl
inc
aaa
dec
xchg
or
pop
push
pop
cmp
mov
arpl
test
dec
sub
fmul
jmp
sbb
fildl
stc
adc
popf
xor
lahf
leave
lods
enter
push
dec
je
dec
sub
add
mov
lods
imul
scas
jge
pop
xchg
xchg
lock
das
sbb
and
imul
iret
sar
aad
dec
add
fsubs
mov
ret
dec
imul
push
lods
enter
andb
ja
jbe
mov
mov
xchg
out
pop
mov
ror
adc
pop
and
dec
repnz
xor
loope
in
dec
icebp
xorl
dec
jge
pop
mov
mov
mov
sahf
cmpsl
rorb
xlat
jne
and
cmp
push
arpl
or
loopne
jae
sbb
dec
and
xchg
lret
inc
lret
and
mov
jge
dec
push
or
jb
in
cltd
push
sub
xor
arpl
into
pop
cmp
insl
lret
add
idivl
repz
xchg
ljmp
jmp
ja
aas
adc
jle
sub
ja
fnsave
ja
or
stos
scas
and
ss
ja
jae,pt
inc
pop
movsl
fisttpll
mov
xchg
inc
xchg
cmp
xlat
mov
movsb
xchg
sub
fdivrs
and
leave
cmp
mov
add
dec
out
adc
mov
iret
mov
outsb
lcall
jne
test
dec
jne
inc
rclb
cmp
es
pop
and
xchg
mov
add
push
fs
das
pushf
ret
pop
cltd
loope
lcall
fmuls
ds
xchg
push
push
dec
pop
push
icebp
jl
xor
cmp
movb
dec
sbb
xor
ss
out
lret
jbe
pop
leave
enter
negl
push
push
mov
arpl
out
mov
fs
cmp
mov
bound
mov
insl
stos
add
and
mov
lods
nop
jnp
and
out
pop
xchg
icebp
cmp
insl
jo
push
pop
adcl
lds
and
ja
pop
pop
jmp
mov
int3
lds
vpbroadcastw
mov
mov
in
int
rep
cmovnp
mov
lods
aam
imul
bts
inc
jp
sub
and
dec
loop
jge
sub
fsubrs
popa
loop
ja
adc
jg
push
and
push
popa
mov
xchg
out
andb
cmp
pop
jge
adc
dec
xor
mov
pop
cltd
xchg
sbb
mov
mov
test
sub
test
stc
inc
jne
out
adc
push
fsub
push
nop
pop
lahf
dec
cmc
lahf
jle
cli
sub
popa
fistpl
mov
sub
popa
add
mov
nop
cmc
or
hlt
xchg
xchg
mov
out
lds
cs
add
inc
daa
fdiv
data16
and
push
mov
pop
dec
adc
push
leave
out
rcr
mov
xchg
cmp
pop
scas
cmp
into
pushf
xor
xchg
mov
xor
or
lret
and
in
fdivrl
das
mov
stc
out
ret
aaa
sub
sti
push
ja
popf
sbb
xlat
xchg
sti
xchg
cli
and
cmp
stc
inc
cmp
rolb
add
sbb
pop
sbb
es
arpl
cmp
mov
arpl
flds
inc
xchg
and
add
ret
xor
or
aas
stos
sti
lcall
inc
test
dec
inc
push
cltd
adc
push
subb
cltd
movsl
mov
push
rorl
cltd
xchg
ret
and
fs
fs
and
fcmovu
jnp
add
pop
shrb
adc
mov
mov
out
jle
xor
jge
sub
add
ficomps
or
xchg
divb
subl
cmp
jl
data16
dec
jne
fldenv
jecxz
push
dec
cld
rolb
repz
mov
cmp
mov
xor
xlat
out
les
enter
in
cli
mov
shr
popa
lods
push
dec
jle
dec
mov
push
mov
jae
jo
sbbl
enter
aam
sbb
adc
pop
mov
clc
or
scas
push
adc
in
insb
sbb
stos
sub
rcrb
mov
push
movsl
add
dec
js
mov
and
mov
xchg
push
mov
lret
jb
fwait
div
daa
pop
aad
add
aad
inc
lock
int3
movsb
pushf
push
and
sbb
mov
loope
sahf
out
dec
sbb
out
decb
xchg
loopne
adc
push
pop
sbb
add
mov
fmul
mov
or
idivl
bound
jae
cmp
xchg
adc
xor
scas
push
dec
mov
fwait
jl
sbb
lcall
rcl
nop
mov
leave
mov
rcr
leave
mov
xor
push
sub
dec
bound
jb
xchg
xchg
out
xor
cli
adc
imul
mov
lods
out
add
xchg
sub
mov
stos
insl
push
and
lret
dec
in
movsb
and
dec
ds
pop
jecxz
or
mov
and
push
cmp
fdivs
popf
xchg
aad
enter
inc
lods
into
jns
test
rorl
add
ja
add
outsb
pop
fwait
xor
or
mov
pusha
sti
xchg
shl
fiaddl
in
mov
js
adc
jno
inc
in
shrb
xor
cmp
jg
cs
and
adc
ljmp
xchg
iret
jbe
pop
mov
push
lds
fdivl
popa
mov
cmp
orl
and
pop
mov
mov
mov
rcr
adc
out
lods
mov
std
sbb
add
jno
out
push
pusha
lea
out
incl
rcrb
jns
jnp
aam
mov
lret
rorl
pop
adc
and
mov
inc
enter
stos
cmp
test
test
mov
cmp
shlb
daa
cmp
cld
bnd
bound
sbb
dec
sti
dec
inc
lods
xor
pop
je
shlb
outsl
dec
xor
sbb
outsl
scas
or
stos
fisttpl
mov
hlt
dec
mov
sti
pop
loop
nop
scas
xchg
pop
and
jp
adc
mov
inc
push
sbb
shlb
push
mov
mov
mov
jae
push
lods
or
jg
xchg
pop
shll
and
jnp
je
or
xchg
cmpsb
xchg
mov
movsl
popf
pop
out
xchg
pop
sarb
and
in
aaa
xor
mov
mov
cmp
outsb
scas
sub
nop
insb
add
mov
push
dec
dec
pop
pop
data16
ffree
enter
rcll
pop
mov
mov
xorl
js
mov
cs
shl
aam
lods
in
rcrl
sub
clc
lcall
xor
clc
fwait
adc
jl
pop
ja
mov
imul
and
ss
aaa
mov
xor
push
pop
js
dec
xor
lods
lret
pop
aaa
cmc
ds
sub
aam
push
insb
imul
cmp
in
lds
ljmp
test
cmp
pop
pop
cmpsb
jae
cmpsl
negl
adc
mov
jg
shll
mov
dec
int3
outsl
hlt
dec
push
and
jecxz
cmpsb
fdivrp
xchg
xchg
mov
xchg
mov
pop
jecxz
shll
stos
call
push
aad
loope
xchg
orb
fidivrs
vpaddb
dec
mov
fildll
pop
xor
test
test
mov
dec
ljmp
stos
xchg
dec
insl
xor
push
lcall
adc
ret
outsb
xor
cwtl
mov
das
xchg
and
rolb
adc
mov
popa
cmpsb
fs
push
xchg
bound
or
lahf
mov
fsts
test
add
xor
movsb
stos
popa
mov
xor
xor
hlt
adc
pop
mov
or
xlat
push
dec
popf
adc
add
lods
jg
mov
pop
or
loopne
divl
mov
cwtl
es
mov
sbb
jmp
daa
sahf
arpl
xchg
fldcw
test
lods
sub
xchg
sub
sbb
push
pop
adc
inc
jno
mov
sbb
and
repz
cmp
aaa
push
fisttpl
xchg
adc
stc
pop
jle
imul
pusha
adc
add
inc
dec
lahf
and
cmp
in
adc
jb
fisubs
jg
icebp
push
cmpsb
out
int
cld
inc
and
hlt
aaa
jbe
pop
iret
mov
adc
ja
push
add
pop
xchg
shll
xor
add
imul
sbb
mov
out
lds
in
mov
test
dec
adc
gs
inc
jle
push
outsb
ficoms
cmp
in
jl
mov
fcmovb
lcall
pop
fs
pusha
jmp
jle
std
push
jecxz
mov
das
xchg
frstor
aam
aaa
pop
cmp
lret
pop
dec
cmp
sar
mov
mov
into
cmp
bound
popf
or
and
daa
fisttpll
je
mov
movb
scas
jle
jg
pusha
imul
loopne
pop
lcall
mov
popf
mov
or
mov
int3
and
push
int
push
and
pushfw
pushf
dec
cmp
mov
or
sbb
mov
addr16
outsl
iret
jae
sbbb
cmp
or
lret
psllq
sbb
je
cmc
aam
adc
fnstcw
insb
hlt
ds
fst
xor
leave
fdivrs
test
jae
dec
xchg
pop
push
xorl
fnstenv
sbb
or
iret
inc
loop
jne
loope
mov
xchg
icebp
jo
pop
in
sub
adc
add
leave
outsl
fsubrs
or
roll
sbb
aam
das
out
fldenv
mov
enter
cmp
push
mov
inc
fisubs
sbb
int
dec
test
fbld
iret
inc
pop
subb
pop
cmp
xchg
dec
add
jbe
sar
in
fcoml
jae
cs
aaa
sub
rorl
das
lcall
mov
sbb
popa
jmp
jbe
pop
cmp
out
ds
mov
sbb
xor
pop
push
ret
add
push
test
mov
mov
pop
and
cmp
cmp
xchg
mov
ret
cltd
jae
je
bound
and
ret
xchg
lods
mov
pop
in
push
inc
aam
add
cmpsl
test
dec
pop
sbb
in
ss
xorb
cmpsb
addr16
and
or
pushf
aas
push
push
or
test
mov
rcrl
aaa
popl
pushl
fldt
pop
or
xchg
adc
mov
test
add
subl
aas
scas
movsb
add
into
sbb
les
adc
push
icebp
jmp
or
jg
adc
and
push
fsubrl
push
pop
loope
rolb
or
lret
push
test
lret
sarb
fwait
loop
sahf
jg
out
mov
jl
popa
cld
dec
pop
push
jge
scas
pop
pop
inc
push
add
inc
in
fs
pop
int3
xchg
es
in
ror
pushf
add
inc
or
dec
into
sbb
inc
jne
pushl
cwtl
mov
push
sub
xor
push
jnp
or
mov
enter
sub
and
loope
mov
mov
jbe
xchg
dec
insb
nop
pop
in
test
jb
inc
jae
and
sub
jle
fmul
scas
int3
or
nop
add
sub
jnp
adc
mov
cmpsl
mov
mov
int3
cld
jae
mov
cmp
pop
aaa
pop
jmp
imul
sub
or
fs
mov
xchg
adc
xchg
rorb
cmc
idivb
pop
inc
inc
outsb
movsl
inc
scas
insl
bound
and
jmp
mov
add
dec
daa
jp
adc
xor
xchg
cli
mov
cmp
jb
add
test
mov
loop,pt
insl
pushf
in
sub
jge
fdivrs
gs
fwait
push
cmp
loopne
jno
or
test
scas
pop
addb
pusha
mov
fistpl
lods
inc
cmp
dec
mov
pop
push
or
scas
sti
ds
inc
push
inc
mov
mov
cltd
cmc
out
xlat
insb
nop
daa
js
loope
adcb
outsb
call
arpl
push
mov
cmp
inc
in
iret
aas
or
xchg
and
sub
or
es
out
cltd
andl
sub
adc
imul
jg
mov
push
push
bound
or
lret
lock
pop
xchg
and
sub
push
mov
xchg
adcb
repnz
sbb
aaa
jle
pop
push
shl
dec
lods
xchg
jle
xchg
or
and
mov
or
stos
ljmp
sar
xchg
jae
movsl
test
rcll
fstpt
sbb
push
mov
jne
xor
repnz
out
mov
push
testb
dec
daa
sub
jb
xor
orb
xchg
imul
or
scas
roll
repnz
sar
shr
loope
jle
add
ficoms
add
in
or
sbb
xor
push
sub
hlt
push
pusha
mov
shlb
cltd
or
xchg
dec
test
xorb
leave
pop
cmpsl
mov
xorl
stos
xor
cld
pop
testl
cli
pop
pop
sub
xchg
mov
scas
inc
mov
adc
lods
lods
ret
jb
inc
cltd
leave
cmp
pop
lahf
inc
fisubrl
mov
inc
xlat
sub
mov
pop
rol
loope
adc
xor
aaa
fdivr
insl
cmpsl
jg
add
xchg
pop
into
insb
push
mov
xor
ja
imul
es
cmp
mov
sbb
sub
cmpl
push
sbb
push
adc
sbb
jl
shrl
mov
xlat
gs
out
bound
in
xchg
dec
or
lahf
scas
outsl
adc
orb
ja
mov
movsb
jecxz
sub
ret
jns
or
lcall
and
inc
std
std
shl
dec
stos
icebp
jecxz
pushf
add
jg
pop
test
sub
jp
jb
dec
aas
je
rcr
inc
mov
dec
test
leave
lods
xor
sub
imul
out
ss
pop
inc
rep
cwtl
mov
lds
gs
lahf
idiv
shrb
test
stos
nop
stos
fs
mov
js
cld
mov
pop
les
out
pop
mov
repz
xor
push
fs
pop
fsubs
mov
push
mov
adcl
adc
movsl
das
pusha
xchg
adc
xchg
cs
ljmp
lods
mov
nop
test
pushf
xor
sahf
push
xchg
adc
sti
inc
iret
scas
test
xor
cli
cmpsl
sub
jb
pop
pop
mov
clc
xchg
lds
out
orb
jo
or
or
rcrl
push
and
dec
jmp
xchg
fadds
outsb
cmp
push
fcmovbe
push
or
repz
scas
jg
and
insl
xor
cmpsl
int
test
stos
cli
loope
je
adc
fidivs
ds
jl
mov
aam
mov
sbb
fcomps
pop
loopne
leave
sub
push
mov
lods
sub
insl
jns
sbb
inc
pop
das
je
pop
xor
cmp
lret
lret
add
sub
push
popf
leave
std
cs
dec
loope
push
testb
jmp
mov
mov
lahf
ret
xchg
add
dec
push
enter
ds
dec
pop
pushf
adcl
in
xchg
sahf
sbb
lcall
mov
cmp
in
rcr
daa
xorps
andl
sahf
pop
insl
push
push
out
xchg
mov
adc
loopne
push
cmp
mov
stos
add
jns
cmp
xchg
adc
arpl
out
cwtl
testl
pop
insl
shrl
mov
mov
mov
mov
mov
push
pusha
pop
data16
cmc
xlat
push
xor
dec
out
mov
lea
aaa
sbb
les
add
js
mov
jae
push
xor
mov
insl
pop
add
push
xchg
adc
mov
xchg
xor
pop
in
push
es
inc
xchg
cmpb
jbe
mov
in
jb
cmp
mov
out
ds
rcll
jge
out
sub
push
sbb
cmpsb
enter
push
xor
mov
jnp
and
test
ret
jg
inc
cwtl
pop
and
or
mov
fisubs
sbb
xor
xor
lcall
hlt
in
ljmp
aas
cmp
aaa
stos
adc
stos
sbb
out
popf
pop
movsl
leave
cmp
jne
stos
or
adc
mov
pop
je
cltd
or
dec
pop
mov
test
sub
add
mov
jae
imull
mov
lret
push
rclb
test
sbb
xchg
in
not
push
hlt
inc
pop
add
mov
sub
add
pop
fiadds
fldt
xchg
cmp
push
xchg
jnp
sahf
mov
cmp
dec
ret
mov
in
push
sbb
add
popa
and
dec
les
jp
dec
mov
add
sub
xchg
test
xchg
sub
outsb
mov
dec
add
mov
cmp
arpl
jl
enter
mov
mov
xlat
and
mov
dec
js
mov
popf
enter
arpl
xchg
fs
pusha
xorl
js
icebp
cmp
add
arpl
rcll
add
add
add
dec
shlb
or
xchg
jmp
jno
jno
cmp
mov
pop
stos
mov
jb
xchg
dec
das
mov
add
xor
mov
inc
jmp
in
test
cmp
push
aad
inc
and
inc
aam
sbb
inc
loop
aas
mov
cli
pop
lahf
mov
xchg
lret
adc
js
add
int3
add
sahf
outsl
popa
lret
adc
dec
pusha
int
mov
iret
or
jle
push
inc
and
cmc
add
ja
dec
push
mov
or
add
add
and
xor
lret
add
push
iret
jno
in
adc
push
jle
add
cld
add
insb
inc
or
cmpsb
dec
repz
pop
jne
push
dec
xchg
pop
xor
sahf
je
pop
cltd
scas
push
imul
stos
in
pop
xor
test
es
push
sbbl
fsubs
mov
sbb
push
stos
shl
hlt
outsl
lds
scas
mov
fs
hlt
push
xor
enter
int
mov
lahf
out
and
fsubrl
xorl
outsl
xchg
es
mov
arpl
fbld
and
or
gs
repnz
inc
adc
sar
mov
sarl
mov
push
push
mov
jmp
dec
xchg
add
adc
xor
aam
cld
test
sbb
mov
filds
jb
clc
nop
lea
pop
pop
test
scas
sbb
fs
insl
jb
enter
cmp
lock
imul
into
lret
les
mov
sub
mov
cmp
jbe
jle,pt
push
mov
test
sbb
sub
mov
repz
loop
jnp
mov
imulb
imul
test
in
add
jno
mov
xor
aas
push
scas
mov
fwait
mov
xlat
enter
jmp
fnstenv
xchg
mov
stos
push
or
daa
lret
addr16
xor
dec
out
dec
mov
adc
enter
add
push
divb
mov
cmp
cmp
call
movsb
int3
push
push
sub
xchg
xchg
test
mov
jnp
adc
fcomi
fsubl
pop
les
sub
decb
xchg
jae
pop
mov
fnstsw
arpl
xor
movsb
lret
lods
sbb
pop
cmpb
jb
js
pop
sub
mov
xchg
mov
push
pop
dec
stos
push
lods
adc
pop
pop
mov
xor
fstpt
sub
inc
mov
insl
icebp
push
jb
cli
sbb
inc
push
jno
lea
push
xor
icebp
dec
dec
aas
cmp
dec
es
in
mov
mov
enter
xor
das
popf
popa
sub
rcrb
or
sbb
sub
lret
rcl
arpl
mov
popa
jmp
jle
mov
adc
sub
bound
or
and
jle
out
adc
xor
mov
jno
mov
bound
push
scas
js
aam
dec
push
stos
loop
je
push
addr16
mov
mov
outsl
mov
push
ds
and
xor
loopne
repz
shr
mull
inc
push
ret
lcall
cmp
out
mov
outsl
or
mov
xor
cltd
adc
mov
mov
out
pop
int3
xlat
sub
lods
add
and
add
jecxz
pop
inc
cmpsl
push
dec
mull
mov
arpl
leave
push
jge
xchg
ficoml
jl
push
bound
ja
addl
and
ret
jbe
roll
pop
xchg
xchg
xchg
jbe
dec
xchg
jbe
dec
xchg
and
insl
fstl
mov
in
cli
fwait
sarl
bound
in
xchg
gs
lds
aaa
add
nop
xchg
dec
movsb
jae
mov
adc
dec
cmp
push
xorl
jnp
sbbl
or
pop
sub
xchg
movsb
sbb
pop
movsl
clc
and
lock
movsb
dec
mov
lock
add
addr16
push
and
cli
rcr
lcall
cli
dec
pop
ret
int3
ret
add
push
pop
enter
leave
add
test
enter
mov
push
xor
mov
dec
xor
nop
mov
dec
inc
sbb
pop
shrb
mov
xchg
imul
shr
cld
push
stos
sub
pop
push
mov
fucomip
mov
pop
xor
sbb
xor
in
cmp
js
xor
imull
or
out
hlt
popa
mov
scas
dec
cmp
in
sar
mov
sti
repz
push
dec
popf
jmp
fsts
pop
in
pop
bound
loopne
stos
ror
jb
mov
sbb
leave
and
shlb
sub
test
and
iret
jo
cwtl
push
jge
or
in
xorl
arpl
pop
in
daa
std
inc
add
mov
subl
call
push
cmc
cmpsl
push
les
xchg
cmp
sbb
into
or
aam
inc
inc
add
dec
ljmp
dec
mov
subl
sbb
testl
shlb
and
ror
push
mov
int3
ljmp
rcll
sbb
mov
mov
pop
push
jno
pop
jns
dec
push
cwtl
inc
fidivl
xchg
push
sbb
or
into
flds
mov
and
cmpb
pop
dec
inc
xchg
and
addb
pop
cmp
je
or
mov
jg
bound
xor
push
jbe
leave
inc
sub
xchg
mov
sbb
daa
sbb
pop
fisubs
int3
lahf
fcmovne
fistps
mov
addr16
push
or
enter
push
xor
ljmp
adc
int3
and
pop
push
xchg
push
cmp
pop
mov
pop
or
add
mov
inc
pop
adc
shll
pushf
and
sarl
push
mov
clc
push
mov
mov
iret
mov
sub
jle
add
fidivs
dec
mov
mov
xchg
pop
cmpsl
mov
sbb
sub
adc
ret
test
popf
rclb
inc
push
xlat
xor
xchg
mov
js
mov
or
aad
pop
push
fistpll
sbb
nop
call
enter
stc
lods
scas
mov
aas
and
pop
pop
sub
lock
xor
sbb
pop
stos
cs
lcall
int
dec
xchg
pop
popa
pop
das
mov
arpl
arpl
jbe
repz
xchg
pop
sbb
sub
mov
cmp
cmpl
pusha
inc
adc
jo
out
jecxz
jo
fs
pop
mov
lret
dec
mov
fistl
bound
iret
shll
movsl
enter
lods
insl
lret
inc
sbb
aaa
sbb
rclb
mov
test
xlat
sub
add
and
mov
inc
adc
jo
std
sarl
xor
sbb
shlb
inc
add
loopne
outsl
pop
shll
out
lea
hlt
lds
pop
subb
jge
ret
loop
dec
adc
jmp
mov
fildll
inc
lret
add
cmp
xlat
outsl
jno
popa
mov
inc
mov
pop
mov
sarl
dec
data16
cmpsb
cli
es
dec
inc
aas
test
scas
and
cmpb
and
sub
cli
mov
sub
daa
mov
and
cmp
push
push
lods
xchg
adc
dec
int
repz
jge
adc
xchg
std
arpl
in
adcl
pop
jmp
xor
incb
cli
mov
add
lods
imul
mov
dec
or
mov
pop
loope
in
push
sbb
inc
test
fistpll
dec
outsl
xor
clc
pop
jne
popf
cmp
lods
jns
out
rorl
or
ss
loopne
add
data16
pusha
in
adc
sbb
jns
pop
addr16
mov
cmc
xchg
and
cmp
jo
das
push
test
mov
daa
data16
cmp
xor
xchg
jae
out
xchg
mov
push
jecxz
icebp
daa
nop
fldl
cmp
call
test
xor
xchg
insb
mov
dec
cmp
addr16
jge
sbb
nop
mov
mov
rcrl
sub
push
cs
ja
incl
and
call
adc
out
xchg
cmp
es
mov
mulb
fwait
movsl
xchg
adc
test
out
out
std
jle
and
fs
xor
mov
pop
pop
or
xchg
outsb
cli
xor
dec
sub
sub
adcb
hlt
mov
lock
jae
sbb
inc
fsubrl
gs
les
pop
mov
loope
arpl
rclb
aas
jl
push
rclb
mov
das
mov
push
sub
mov
mov
in
xor
mov
lret
xchg
call
pop
leave
sub
dec
push
rolb
hlt
insb
xchg
leave
lock
outsl
xchg
jp
and
jle
push
jno
addr16
inc
ljmp
mov
dec
pop
iret
cmc
repnz
sub
movsb
mov
addr16
cmp
sbb
mov
pop
call
fs
or
pushl
cmpsl
sti
add
mov
sub
fs
push
sti
mov
and
stc
rclb
cmc
sub
and
or
out
ret
pop
inc
test
pop
test
add
xchg
arpl
popa
repz
cld
and
aas
loopne
dec
enter
sarb
mov
cmpsb
jae
jg
pop
inc
mov
push
fdivr
sarl
inc
xchg
das
cmpb
ret
outsl
ja
testb
les
adc
cld
enter
add
iret
add
xchg
mov
xchg
sub
mov
aas
sub
movb
adc
test
lock
mov
cmpsb
nop
dec
cmp
adc
sub
inc
add
add
sbbl
pop
mov
in
fisubs
xor
frstpm(287
sbb
mov
stos
aaa
mov
xor
cld
sahf
and
jbe
sub
popf
pop
mov
add
cmc
movl
aas
iret
cmp
or
ret
stos
push
shll
sarb
scas
pop
fists
xor
xor
shl
mov
aas
popa
pop
in
jo
stc
mov
cltd
cmp
jmp
cltd
sbb
cmp
mov
mov
pop
scas
pop
or
and
xlat
sbb
cmp
pop
sbb
mov
push
mov
adc
pop
int
xchg
fstpl
test
inc
out
jnp
xor
and
xchg
fcmovnu
jmp
ret
cltd
push
adc
xchg
fnstsw
jmp
add
xchg
pop
stc
dec
dec
loope
inc
xor
or
pusha
loope
insb
jp
mov
aad
js
stc
xchg
xchg
sub
sahf
add
in
cs
incb
and
cmc
inc
loopne
mov
sbb
loope
dec
adc
push
inc
push
rorb
and
leave
fwait
lods
ds
mov
loope
pusha
outsb
add
shrl
push
mov
inc
jle
pop
gs
xor
inc
das
xor
in
insl
aaa
and
xor
inc
inc
sub
sub
mov
mov
inc
adc
sbb
out
mov
data16
out
gs
add
push
mov
and
and
mov
xchg
xor
inc
cmp
aad
cwtl
lret
mov
cmp
mov
sbb
jmp
inc
shl
pop
xor
inc
jns
dec
mov
xchg
fldt
inc
fwait
pop
loopne
rcrl
cmp
ljmp
jecxz
xchg
aaa
andb
rcl
mov
sbb
scas
imul
fiadds
xchg
aam
mov
push
lods
or
imul
enter
mov
ficomps
push
mov
imul
xchg
js
test
movsl
dec
addr16
sbb
inc
scas
sub
mov
cmpsb
jl
stos
dec
ss
sbb
je
jecxz
arpl
mov
fs
stos
out
in
mov
push
stos
mov
dec
fwait
enter
sub
push
xlat
cmpsl
mov
xor
mov
sbb
enter
add
leave
jg
fisttpll
sbb
pusha
mov
adc
fs
adc
pushf
xchg
insl
sbb
mov
pushf
dec
mov
xchg
cmpsl
mov
test
push
xor
xor
jecxz
or
out
in
mov
adc
divl
and
xor
cmpl
aas
int3
mov
stc
popf
mov
int3
in
invd
sub
mov
enter
jle
sub
sub
gs
dec
aaa
push
movsl
lret
aas
fmuls
pop
inc
mov
mov
mov
xchg
or
push
lea
xchg
cmp
cmp
mov
lahf
nop
lods
movsb
mov
fsubr
cmc
inc
pushf
mov
orl
mov
in
add
xchg
je
mov
insl
pop
std
push
push
je
pop
sbb
lret
jle
inc
lods
adc
jo
pushf
xor
dec
push
cmp
repz
dec
insb
shll
jno
xchg
lock
xlat
and
lcall
mov
outsb
push
mov
in
xchg
mov
test
push
rorl
and
jle
out
and
rcr
and
mov
test
ljmp
xchg
std
xchg
dec
and
cli
add
push
sub
mov
mov
repnz
add
inc
mov
shl
sbb
jbe
jne
popf
add
js
cli
roll
mov
inc
pop
test
dec
sbb
es
mov
push
push
mov
and
ret
sbb
in
sbb
adc
dec
jno
mov
cmpsl
dec
pop
xchg
push
or
fdivrl
mov
mov
es
push
push
inc
xchg
ss
jmp
sub
mov
mov
sti
fiaddl
pop
imul
ljmp
push
adc
jno
aad
jl
mov
push
cmpsb
xor
add
adc
inc
jmp
inc
test
mov
arpl
rolb
sub
dec
cli
xabort
shr
imul
inc
inc
pop
test
cmp
cli
xor
popl
cmp
into
inc
mov
lods
and
cltd
lods
jl
dec
mov
dec
test
int3
sbb
repz
push
mov
inc
gs
xor
jb
adc
js
dec
inc
clc
dec
push
pop
je
xor
icebp
outsl
imul
loope
pop
pop
mov
mov
xor
inc
fsts
mov
pop
fsubrs
orl
pusha
sbb
jp
mov
sbb
sbb
sti
mov
pop
mov
mov
mov
push
and
lods
or
or
push
jp
pop
jl
xchg
sub
dec
fnstcw
and
adc
inc
mov
iret
fistl
sbb
sub
add
ret
sub
mov
das
jmp
add
push
fistpl
ret
movsl
pop
xchg
pop
aad
cwtl
fs
pop
mov
pop
xchg
mov
push
jno
daa
dec
lcall
mov
outsb
dec
ja
fisttps
rcll
ljmp
push
pop
mov
sahf
pop
cld
xor
jg
fnsave
ror
imul
stc
out
mov
sti
pusha
aaa
mov
jnp
mov
fs
outsl
out
loope
jg
sbb
movsb
xorb
fcompl
nop
mov
adc
out
and
cmpsb
std
mov
xlat
or
outsb
imul
adc
in
xlat
mov
imul
testl
pop
and
and
in
sbb
fldcw
repz
push
arpl
int3
hlt
sbb
xchg
rdmsr
or
adc
clc
rcrl
ja
add
std
test
mov
call
mov
cmp
outsl
or
dec
out
ja
arpl
lret
xor
push
jb
outsl
jg
mov
mov
xchg
dec
pop
jns
or
bound
inc
neg
out
adc
test
jmp
mov
sub
in
xchg
insl
push
mov
mov
mov
das
push
xlat
inc
pop
cmpsl
test
jge
stc
fbstp
aam
mov
hlt
xchg
and
or
dec
aam
hlt
xchg
leave
jne
adc
mov
mov
add
int
mov
mov
push
xlat
imul
jl
jg
adc
imul
cmp
xchg
mov
adc
inc
jle
cld
ds
jbe
jne
adc
push
and
and
inc
xor
outsb
jne
xchg
adc
and
cmp
ficoms
repnz
loopne
mov
roll
sti
pop
cld
in
movsl
inc
repz
jmp
or
push
adcl
jl
lock
push
sbb
or
jbe
mov
out
mov
lods
fsubrs
push
data16
mov
push
jne
scas
jb
jns
pop
cltd
sub
lea
mov
mov
fcmovbe
jecxz
sbb
ds
fdivp
xor
lods
sub
xor
rcrb
int3
dec
jbe
int3
xor
pop
jne
add
movsb
push
sbb
add
xchg
sahf
add
rclb
xchg
shrb
lea
or
sbb
icebp
push
in
dec
xor
push
add
ljmp
mov
or
add
jne
mov
pop
jno
popf
into
jl
les
mov
and
lcall
pop
add
fimuls
andl
mov
inc
iret
dec
cmp
xor
cmp
sbbl
and
jbe
jns
cmp
pusha
cmp
call
data16
lock
inc
mov
pop
into
ljmp
xchg
xchg
or
paddb
lcall
push
lahf
sbb
cmp
bound
and
shr
mov
sbb
mov
clc
mov
pop
call
sbb
push
pushf
repz
imul
cld
out
mov
xchg
push
insb
call
ja
into
dec
jge
loopne
outsl
loope
jb
cmpsl
or
out
pop
shll
or
xchg
xchg
push
out
xchg
loop
ljmp
jp
lods
push
rcr
cmp
xchg
jns
testl
xchg
fcoms
mov
movsl
in
dec
pop
or
lock
inc
in
orl
xor
and
xchg
and
fmuls
cmp
pop
gs
and
clc
xchg
sub
mov
subl
jne
cmp
fstps
mov
inc
addr16
and
cltd
es
add
sahf
sub
mov
add
sub
xchg
cmp
xchg
movsb
dec
mov
mov
push
inc
cmp
loop
divl
sti
das
cwtl
mov
push
push
clc
and
bound
push
stc
mov
pop
sub
push
pop
je
dec
insl
jno
pushw
xor
mov
push
xchg
jae
push
into
jnp
loopne
mov
lods
in
mov
push
and
xchg
or
inc
out
ret
das
inc
or
dec
jmp
scas
xchg
or
or
push
sbbb
push
xor
pop
in
mov
fmuls
xor
mov
inc
aad
jo
test
push
in
cmp
mov
adc
out
ja
gs
cmp
fisubrs
ret
jo
nop
fsts
imul
std
lock
leave
call
enter
adc
mov
add
ret
cmpsb
dec
fwait
rep
dec
dec
adc
jbe
fwait
and
xor
inc
test
into
mov
pusha
add
aad
or
in
call
andb
and
jg
in
divb
xorb
shlb
push
push
rcrb
test
outsb
push
sub
incl
mov
sbb
outsb
inc
xor
xchg
pop
adc
test
mov
loopne
shrl
rclb
sbb
sbb
rcrb
mov
popl
rorb
dec
mov
test
add
ret
cli
aad
loopne
inc
adcb
push
or
repz
or
mov
addl
jb
add
mov
push
packuswb
call
fnsave
out
push
sub
push
pop
inc
adc
data16
cmp
push
lods
push
stos
in
clc
test
xchg
xor
adc
and
shll
xchg
icebp
pop
xchg
in
dec
out
rorl
xchg
xor
icebp
xchg
js
sbb
out
dec
sbb
push
lock
test
adc
push
adc
push
test
iret
nop
pushl
scas
imul
loop
jae
adc
xlat
subb
mov
in
inc
and
in
std
sahf
jmp
outsb
adc
daa
ret
pop
ds
cmp
dec
out
xlat
jmp
mov
cli
adc
jno
mov
lods
xchg
in
cmp
sub
in
in
nop
mov
push
icebp
inc
mov
fdivl
test
in
push
imul
inc
mov
jnp
xchg
xchg
bound
je
ss
imul
stc
mov
jnp
adc
cltd
sti
pop
xor
jns
pop
sti
xorl
push
jl
and
add
sub
std
loope
imul
or
or
divl
inc
test
daa
inc
sahf
scas
shrl
or
sbb
jmp
adc
lds
push
cmp
push
mov
xchg
xchg
xchg
xor
or
or
gs
in
lahf
add
test
out
icebp
xlat
push
adc
add
pop
inc
scas
ret
push
cmpsl
subl
rorb
push
lcall
and
xchg
push
cmc
stos
loopne
inc
and
les
pop
lock
inc
jne
addr16
rcr
jle
adc
sub
xchg
mov
mov
or
inc
mov
and
repnz
pop
cmp
add
lret
push
outsl
gs
jmp
hlt
mov
mov
dec
fucomp
xchg
mov
clc
popa
xor
scas
and
push
stos
push
movsl
pop
or
pop
fildll
test
mov
outsb
fadd
test
iret
cmp
sbb
pop
inc
pop
icebp
mov
int3
orl
and
imul
hlt
ret
xor
mov
js
inc
mov
jp
mov
fisttpl
push
out
xor
sbb
dec
inc
ljmp
dec
fcmovbe
outsb
ja
sub
arpl
cmp
cltd
ds
dec
nop
push
ret
lret
sahf
lea
xorl
sub
cmp
ret
mov
or
jl
popa
sub
and
sub
das
add
mov
cmc
xlat
and
sbb
jb
adc
inc
mov
test
xor
xor
add
movsb
pop
or
imul
push
imul
jno
inc
jmp
sbb
aas
test
pop
es
mov
mov
pusha
loope
xchg
lock
ja
aam
mov
xor
inc
push
stos
in
iret
pop
jl
scas
ss
movsb
fldcw
push
inc
cmp
and
lret
push
jno
mov
inc
repz
inc
push
ret
cmp
jo
lret
andb
decl
stos
mov
ds
cmp
adc
jp
fldl
xchg
mov
dec
addr16
es
rorl
leave
mov
xchg
inc
fidivl
xor
mov
cmp
cwtl
push
icebp
inc
and
xchg
das
call
mov
push
gs
cltd
add
les
mov
lahf
add
sbb
or
mov
fwait
adc
je
jbe
mov
ss
mov
xchg
sbb
mov
push
pushf
mov
jnp
xlat
js
jl
sarb
or
popf
push
pushf
stos
jo
add
xor
adc
mov
mov
mov
mov
aad
rcrl
incb
jg
jno
mov
nop
or
fs
add
push
outsb
mov
rolb
inc
xor
mov
jne
pop
lcall
subb
dec
out
push
xor
mov
add
out
rorb
rcrl
mov
xchg
pushf
inc
mov
movsl
je
scas
pop
lods
sub
rolb
pop
into
mov
inc
aam
test
sbb
pop
rolb
sbb
xchg
shl
outsl
sahf
jcxz
cs
js
add
leave
or
push
sbb
and
movsb
xorl
cmp
iret
psrad
mov
fcmovne
push
pop
push
pop
cwtl
mov
sbb
fs
jns
mov
push
or
jg
and
stos
movsl
sub
aad
cmpsb
add
mov
adc
and
cmpsl
push
popa
mov
xchg
arpl
adc
xor
mov
jp
push
jnp
stc
sahf
dec
or
fs
mov
call
pop
mov
push
loope
aas
in
pop
push
inc
popa
gs
mov
cmp
test
leave
lock
mov
movsl
aas
push
mov
or
popa
fiaddl
mov
adc
adc
or
and
cs
idivl
or
out
sbb
lret
int3
mov
rorb
jl
dec
dec
cmpsl
lret
mov
and
aad
in
mov
xchg
arpl
xor
js
shl
adc
xchg
sub
mov
shll
into
fnstcw
cmp
movsb
add
dec
mov
or
dec
shll
mov
xchg
stos
ljmp
mov
leave
sub
sarb
outsl
add
popa
cwtl
in
jp
mov
daa
inc
lret
sub
dec
leave
adc
pop
aas
pop
mov
scas
xor
out
inc
dec
jge
and
cmp
lods
mov
inc
shlb
imul
iret
push
fcomps
bound
hlt
pusha
pop
sahf
xor
mov
nop
adc
pop
inc
adcl
mov
xorl
cli
test
pop
pop
in
jae
sub
lcall
push
xchg
fdivrp
sub
aad
movsb
clc
inc
mov
mov
sti
les
int3
jae
jmp
sub
mov
enter
rcrb
stos
adc
bnd
mov
rcl
stos
adc
subl
lret
enter
int
or
add
sti
inc
sub
inc
and
dec
add
sbbb
aad
inc
in
out
add
pop
cmpsl
iret
popa
dec
fcmovb
cmpsb
in
inc
outsl
in
xor
push
out
jne
adc
daa
xchg
and
outsb
stos
mov
jo
shll
mov
movsl
cmp
cli
jl
aam
cmp
pop
cs
xor
mov
or
jge
imul
sub
and
lods
test
test
outsb
mov
sti
popf
shrb
and
lods
pop
and
push
sbb
pop
lahf
dec
push
outsb
inc
cwtl
sbb
add
pop
or
rcrl
das
stc
insl
sbb
push
imull
imul
push
pushl
imull
push
lcall
cmp
and
ss
cmp
jl
mov
cmp
cmp
icebp
fs
test
mov
aaa
out
inc
loopne
sub
fdivl
iret
sub
cmpsb
jmp
sbb
jnp
inc
sub
sbbb
xchg
lods
repnz
jle
je
std
popf
xchg
bound
outsb
std
sbb
shrl
ljmp
mov
xchg
pop
ljmp
jo
push
lods
pop
inc
push
pop
test
cmpsb
ja
cmp
pop
and
call
out
iret
adc
stc
push
stos
lcall
adc
test
loopne
jl
fldt
inc
xchg
push
sbb
popf
xchg
xorb
cmp
add
or
sahf
dec
xchg
and
cwtl
push
pop
loop
or
pop
lods
shl
mov
pshufw
popf
lods
bound
jnp
cli
xchg
mov
add
jo
std
inc
mov
jge
lahf
adc
es
dec
pop
outsl
notl
mov
mov
movsb
les
mov
notb
inc
jno
and
adc
jle
dec
addr16
sbb
repnz
loope
mov
lret
xlat
pop
fmuls
xor
mov
vpandn
scas
inc
in
pop
inc
jmp
sub
imul
or
cmp
insl
dec
stos
scas
jl
cmp
mov
xchg
mov
add
cmpsb
pop
dec
push
cmpsl
inc
insb
cmpsb
popf
mov
sub
pop
jo
pop
cwtl
lds
stos
dec
ret
add
mov
rol
pop
push
xchg
push
xchg
xor
lds
mov
adc
enter
fsubs
and
mov
test
ret
pop
or
test
mov
aam
xorb
xor
test
icebp
xchg
mov
mov
pop
pop
stos
nop
test
je
add
lock
scas
sbb
outsl
sarl
jge
xor
adc
lods
call
pop
movsl
push
inc
adc
cmpsl
mov
pop
or
or
lcall
loopne
leave
rcr
fwait
inc
cmp
jb
loop
inc
dec
or
xchg
push
adc
imul
mov
iret
gs
push
push
mov
outsb
pop
cwtl
movsl
int
call
xor
jne
les
pusha
lret
sbb
cld
sub
push
test
ret
jl
mov
test
test
xchg
sub
push
push
ret
push
jmp
icebp
dec
xor
push
mov
test
xorb
jp
mov
cmp
push
jecxz
and
xor
adc
or
mov
mov
mov
xor
addr16
test
sbb
jmp
push
push
mov
jle
and
sahf
pop
cld
loopne
insb
lcall
ss
xor
xor
pop
les
xor
push
ljmp
out
sbb
nop
in
cmp
roll
das
data16
ret
ret
or
sbb
stos
lret
insl
test
inc
outsl
xchg
jbe
xlat
mov
inc
xor
pop
push
adc
mov
daa
loopne
add
pushf
rcrl
ds
int
out
mov
sti
cs
mov
loope
cltd
xor
jae
sub
inc
push
mov
jnp
out
xchg
loop
enter
jge
out
cli
fwait
mov
jmp
hlt
les
scas
fisubrs
pop
popf
addr16
scas
outsl
adc
or
dec
push
lret
stc
loopne
shll
mov
les
in
cmc
sbb
xor
xlat
push
pop
jbe
rclb
xchg
lods
jnp
lods
inc
rcrb
hlt
xchg
jo
xchg
call
push
jne
fs
sbb
sub
push
pusha
inc
mov
ja
test
je
push
jae
inc
cmp
aam
jnp
sarb
jb
xchg
mov
sbb
cmp
sarb
mov
ret
out
cmp
xchg
pop
sub
add
xchg
xor
stc
push
out
rolb
and
pop
movsl
leave
sub
pop
rcr
fs
shrb
adc
mov
ret
mov
mov
pop
in
mov
dec
inc
sbb
das
mov
adc
jmp
add
cmp
jle
clc
push
pop
or
es
xchg
push
int3
cld
cmp
dec
or
lods
in
lahf
push
xor
dec
cli
push
sbb
inc
and
loop
imul
lods
add
and
out
repz
xor
mov
mov
inc
dec
xchg
pop
inc
mov
cmp
mov
into
xchg
rclb
xor
jb
ret
fwait
mov
mov
stc
aaa
mov
out
pop
pmulhw
call
or
inc
xor
adc
js
int3
pop
and
testl
lods
lret
dec
negl
and
xor
movsl
pop
dec
lea
subl
fisubrs
out
jbe
adc
mov
mov
ss
pop
in
jecxz
scas
jg
sub
xor
lods
in
mov
in
in
shrb
aaa
jns
loope
das
mov
into
mov
jge
popf
fdivs
rorb
sub
and
mov
addr16
cmp
push
daa
mov
mov
dec
mov
movsb
push
in
inc
mov
jmp
das
adc
cmpsl
ret
repz
test
pop
mov
addl
std
xor
xor
aad
cmpl
push
fadds
pop
jo
push
or
mov
sbb
and
xchg
mov
mov
je
sbb
cmp
hlt
loope
xchg
xchg
push
xor
loopne
adc
xor
ja
pop
xor
lcall
jle
or
into
jge
jbe
repnz
sbb
jns
jnp
insl
ds
mov
repz
cmp
or
clc
adc
push
jl
addb
cltd
dec
xor
mov
mov
push
mulb
xchg
popf
sub
fwait
jnp
or
shll
out
dec
out
loope
into
cli
stc
js
sub
fucomip
xchg
outsl
iret
cmc
lock
xor
inc
add
insb
xor
lret
mov
out
jg
jle
add
or
dec
pop
mov
repnz
jp
mov
outsb
std
jmp
lea
mov
inc
jne
xchg
outsb
out
imul
les
sub
cmc
pushf
and
jb
dec
inc
mov
jb
iret
jp
cmp
insl
jb
push
ret
nop
push
mov
pop
xchg
push
cmpsb
lret
jecxz
inc
xchg
pushf
aaa
xchg
movsl
vlddqu
cmp
add
lods
adc
popa
inc
pop
jmp
insb
or
popa
divl
mul
insb
roll
push
mov
mov
in
outsl
cmp
sub
push
mov
clc
push
fcomip
fwait
mov
nop
sub
pop
mov
mov
rolb
addr16
pop
or
cmc
pop
nop
jnp
xor
inc
cmpsb
pop
mov
lret
jmp
and
aas
stc
jnp
add
sbb
mov
mov
jne
adc
mov
iret
mov
lock
test
lods
mov
int3
lods
cmp
push
imul
pushf
cmp
dec
repz
sub
out
push
xor
jno
pop
inc
das
add
outsl
pusha
bound
loope
mov
jecxz
mov
aaa
xchg
jge
push
in
dec
loope
lret
repnz
cli
inc
cmp
mov
test
add
mov
inc
les
add
jecxz
test
mov
adc
jbe
fld
cwtl
sbbl
movsb
pop
repnz
mov
sti
push
mov
and
insb
xchg
adc
push
stos
pop
or
mov
mov
xchg
jg
icebp
outsl
mov
sub
dec
int
popa
aas
sub
cmc
adc
daa
lret
out
stos
push
pop
dec
fwait
push
movsl
lock
jb
cmp
cmp
pop
lods
jl
sub
imul
ds
push
int
mov
aam
mov
enter
iret
adc
mov
loopne
mov
subb
shrl
inc
dec
xchg
xchg
xlat
loope
xchg
lods
repz
mov
daa
jmp
mov
xor
iret
mov
adc
sbb
lods
and
and
arpl
ljmp
jge
xor
sbb
fildl
push
out
cwtl
sub
push
mov
dec
pop
ret
int3
movsl
fidivrs
xor
xchg
dec
outsl
xchg
xchg
or
rolb
jo
ss
das
insb
ds
add
mov
call
shll
jle
out
les
pop
mov
rclb
or
call
cmp
test
cmp
or
loop
cltd
incb
dec
xor
sbb
dec
dec
mov
cld
stc
imul
std
push
pop
cmp
mov
cmc
xor
lods
pusha
in
addr16
mov
push
pop
sub
and
push
add
aas
into
xchg
xchg
xor
lcall
rcl
push
xchg
sbb
push
push
imul
sbb
mov
cmp
xor
cwtl
push
push
fistl
add
dec
scas
lret
cld
lock
cmp
adc
ret
or
fstl
or
dec
xlat
push
into
push
cmp
rcrb
push
jnp
xchg
stc
imul
push
cmc
mov
xchg
enter
inc
jae
push
pushf
stos
ljmp
adc
fistps
cmp
jo
push
push
icebp
mov
fistpl
push
movsb
imul
out
jnp
les
pop
orb
cmp
mov
add
pop
sbb
imul
cmc
movsb
sub
inc
dec
arpl
stos
mov
push
outsb
cmpl
rcrl
inc
outsb
lcall
xchg
xchg
cmpsl
mov
cmpsb
inc
stos
jg
fisttpl
inc
xor
push
ss
rolb
push
scas
jb
mov
test
or
nop
fisubl
dec
mov
sti
push
lret
mov
lock
or
mov
int
aad
pop
and
and
mov
pop
or
mov
popf
inc
adc
or
sbb
lods
popf
mov
out
push
adc
jbe
int3
sub
popa
shll
lret
cbtw
xchg
push
xor
jo
nop
xor
insb
mov
inc
iret
push
dec
testb
lods
arpl
cld
fnsave
std
int3
push
movsb
int3
jbe
xor
dec
divb
add
mov
mov
mov
addr16
xor
xor
ret
in
sub
sti
fcoms
int
dec
or
rorl
jb
imul
pop
or
orb
push
mov
push
jnp
outsl
js
xor
push
arpl
mov
jge
mov
es
adc
jecxz
push
xchg
dec
out
inc
hlt
sbb
movsb
or
aaa
jno
xor
aam
or
sub
cwtl
xchg
dec
jnp
jo
loopne
std
lret
push
jbe
aam
mov
mov
or
mov
xlat
fsubr
xchg
jle
mov
mov
push
inc
aaa
push
rcl
pop
out
popa
aas
fcomp
and
add
enter
lahf
mov
adc
sahf
pop
push
pushf
inc
negl
lcall
mov
sbb
lret
sbb
out
jecxz
int
xchg
cs
mov
cmpsl
jle
or
and
mov
mov
insl
pop
lea
adc
sub
xor
mov
adc
lahf
dec
stc
mov
inc
xchg
adc
dec
nop
popa
test
push
jo
lods
stc
push
test
cmpl
sub
jecxz
repnz
in
mov
xchg
push
test
push
push
mov
lret
fldenv
xchg
mov
mov
adc
jle
xor
jo
hlt
mov
add
adc
adc
aad
cmc
adc
jmp
xchg
test
cmp
test
int
sub
mov
dec
push
jbe
pop
adc
inc
pop
or
test
xchg
pop
js
mov
fldt
inc
in
adcl
arpl
movsb
fwait
inc
pop
xlat
test
iret
jbe
movl
add
testb
mov
mov
jae
movsl
xor
js
icebp
add
lret
cmp
in
and
xchg
adc
lcall
xchg
aam
aam
cmp
push
mov
pop
jo
lods
add
test
or
adc
iret
cmp
jecxz
jmp
add
shlb
aad
jg
mov
add
or
sbb
cmpsl
sub
repz
jbe
jo
out
addr16
and
or
pushf
into
cmpsb
push
cmp
jae
mov
mov
pop
repz
mov
pushf
fsts
jmp
ja
xchg
dec
jle
push
jo
or
popf
add
out
mov
cli
push
sahf
pop
push
pop
ret
ret
outsl
jecxz
inc
or
mov
aaa
adc
xor
mov
mov
mov
add
icebp
js
pop
xchg
xadd
stos
pop
inc
mov
mov
jle
sbb
shll
xor
stos
and
lretw
xchg
pop
jl
ds
cmp
movsl
cli
int
bnd
xor
daa
mov
rclb
xor
stos
jns
fisubrs
xor
sub
sub
push
cmp
inc
push
enter
repz
in
popf
cmp
and
sub
cmpsl
pusha
and
mov
aas
cld
cmpsb
push
xchg
mov
cs
mov
xchg
insb
ss
repz
push
leave
mov
inc
popa
enter
stos
add
xchg
out
and
push
cs
in
in
cs
jbe
iret
jno
sub
mov
cmp
mov
push
sti
inc
int
add
or
or
mov
xchg
fidivl
pop
outsl
shlb
das
fsubl
shr
arpl
fwait
movsl
nop
ds
fmull
and
push
stc
jns
xchg
jns
es
inc
xchg
popa
mov
or
lahf
les
push
out
sbb
mov
scas
pop
mov
hlt
movsl
imul
lods
cld
mov
sbb
in
in
sahf
int3
dec
cmp
pop
nop
pop
popa
push
push
inc
dec
push
pop
lahf
push
xchg
jno
sti
outsb
insb
loope
dec
ss
xchg
mov
inc
mov
rcrl
ss
push
jmp
hlt
movl
rorl
cmp
scas
fwait
mov
adc
das
or
adc
jb
lods
sbb
sbb
cmc
pop
test
test
sbb
pop
gs
stos
insb
cmp
sahf
les
lret
shl
pop
in
dec
adc
dec
mov
popa
and
mov
ret
cmpl
xchg
xor
fcomps
test
lcall
xchg
lock
xchg
sub
incb
xor
outsb
dec
push
int3
add
adc
aam
imul
clc
and
add
daa
test
inc
mov
mov
sahf
mov
push
xlat
pop
push
add
push
lock
scas
insb
loopne
paddq
adc
popa
pop
mov
ficoml
lret
lret
mov
dec
insb
addr16
shlb
test
outsl
and
xchg
sbb
jge
mov
add
push
inc
cmp
dec
out
add
icebp
push
inc
mov
cmp
lahf
dec
js
popf
mov
aam
ds
pop
mov
pusha
xor
mov
jl
inc
jmp
add
adc
inc
add
into
cmp
std
xchg
dec
jo
mov
cmpsl
xchg
sub
lret
lret
cli
mov
mov
adc
loopne
std
push
in
jnp
cld
sbb
ret
fcomi
xor
and
out
mov
or
jne
add
dec
sbb
sub
push
jmp
xchg
lahf
xchg
pop
lock
xorb
jb
subb
pop
sbb
xchg
rol
cmp
iret
mov
push
shlb
adc
ss
loopne
cmpsb
push
rcll
ds
pop
fwait
cwtl
pop
dec
cmp
outsb
scas
push
les
jo
les
shl
xchg
jb
mov
stos
jae
leave
mov
sub
cltd
lea
pop
push
cmp
or
xchg
mov
mov
ss
sub
jle
sub
jecxz
enter
jmp
or
mov
leave
sbb
push
mov
mov
pushf
jge
pop
clc
mov
nop
std
xor
jle
inc
mov
sub
outsl
shll
es
mov
mov
sub
sbb
mov
sbb
jno
dec
cmp
lahf
cmp
mov
push
mov
mov
jmp
les
insb
sub
ja
sub
dec
add
mov
add
push
arpl
pop
or
cmp
ror
psubsb
lret
in
push
cmpsb
gs
cmp
add
popf
mov
jae
shlb
cs
fnstcw
xor
cli
mov
inc
sti
mov
aam
pushf
enter
push
shl
xchg
and
adc
dec
xchg
dec
pop
inc
push
sub
gs
cmp
enter
or
xor
jns
xlat
jns
pop
fcomip
sub
call
mov
cwtl
mov
dec
xor
ret
adcb
adc
jg
mov
pushf
push
cli
sub
popa
mov
aas
adc
imul
lods
repz
dec
xor
or
inc
mov
push
aas
push
test
xchg
and
gs
xchg
lret
jb
sti
loop
addr16
ja
cmp
rcl
mov
outsb
push
cmc
jge
push
test
pusha
cwtl
test
or
int
xor
inc
lods
mov
bound
push
jne
mov
call
lret
std
repnz
sbb
push
cmp
jecxz
lea
sbb
dec
cmp
and
ficoms
fisubl
pop
xchg
inc
pushf
jns
dec
and
push
icebp
xchg
dec
pop
rcl
lods
pop
loop
lcall
sbbl
xor
lods
jne
sbb
scas
stc
clc
adcb
testl
aad
sub
cmp
fstps
jae
out
xchg
cmp
inc
or
inc
jg
push
xor
mov
mov
popa
stc
dec
fimuls
sti
pop
imul
and
sbb
sbb
mov
cwtl
or
pop
pop
adc
and
xchg
outsl
xor
xor
movsb
sbb
shll
dec
cmpsb
dec
adc
shll
stc
andl
fwait
adc
faddl
dec
jb
fiaddl
outsl
in
cld
mov
push
mov
xchg
jne
cmp
imul
push
push
jge
xor
je
push
fwait
mov
inc
bound
in
out
mov
daa
stos
and
fildl
fcmovnbe
cmpsb
dec
sbb
dec
je
popa
push
test
and
int3
pushl
jmp
xchg
flds
int
addr16
add
iret
inc
mov
hlt
rcrl
jmp
and
ds
inc
das
fidivs
daa
and
sti
push
loope
sbb
sub
adc
inc
in
dec
mov
xchg
aam
inc
jne
ss
sti
pop
ja
fbstp
lods
mov
push
and
fidivrs
in
out
out
mov
sbb
jp
push
dec
sub
pop
jb
mov
test
jge
dec
leave
jle
div
xor
fiadds
xchg
add
adc
inc
and
sub
cmp
cmp
mov
mov
adc
aas
inc
lret
xchg
jmp
xor
stc
addl
and
adc
daa
adcb
jbe
call
push
adc
adc
push
and
aad
push
mov
es
mov
pop
lret
rcrl
pop
lret
adc
inc
xchg
sbb
stos
xlat
pusha
mov
jae
sahf
dec
jns
aad
aaa
inc
ja
lahf
fisttps
ljmp
aam
aad
in
cmp
lock
or
pushf
mov
data16
aam
xor
inc
mov
sub
aam
rolb
imul
jecxz
inc
out
fcmovne
xchg
ret
mov
bound
aam
es
and
int
ss
dec
pop
lret
inc
rcrb
or
cli
xchg
enter
adc
mov
dec
ja
movsb
pushw
divb
adc
pop
mov
cmp
loop
mov
dec
loopne
sbb
jp
shll
cli
roll
xchg
or
stos
mov
xchg
in
popf
xchg
push
stos
sub
pop
lods
cli
nop
jge
cli
push
sub
inc
inc
shll
cmp
inc
adc
ljmp
fcmovb
aam
push
in
lret
mov
stos
jb
dec
mov
mov
cmpsl
daa
das
scas
fwait
dec
mov
adc
and
mov
xorb
mov
sbb
mov
sbb
loop
fstpl
loopne
in
sub
cmc
push
xchg
movsb
dec
cwtl
out
inc
sub
xor
or
in
cmp
xor
dec
iret
shlb
sbb
ror
pop
mov
pop
gs
adcb
push
daa
inc
xor
pushf
faddp
stc
rclb
sbb
arpl
xchg
cmpsl
push
rcll
push
and
ss
dec
add
sbb
mov
mov
repz
cmp
stc
idivl
clc
mov
enter
fwait
jb
or
mov
pushf
or
icebp
pusha
sbb
push
mov
mov
adc
nop
mov
rcl
mov
add
mov
pop
cmc
outsl
sbb
xor
add
js
data16
faddl
sub
je
mov
jns
bound
pop
mov
push
scas
imul
pushf
in
movsl
xchg
cmp
pushf
xchg
std
push
mov
cmc
pop
and
pop
pop
addr16
cmp
stos
mov
pop
cltd
cli
das
jp
push
push
cld
inc
out
int3
add
imul
js
xchg
dec
mov
loope
mov
lock
out
push
adc
out
stos
push
push
xor
add
jno
sbb
stos
sbb
and
dec
mov
shlb
mov
inc
xor
fimuls
add
shl
inc
xor
add
jae
aaa
arpl
pop
mov
or
and
jbe
fmull
push
mov
testl
call
les
jno
sbb
fldt
add
jnp
inc
cmpsb
cmp
cmpb
pop
push
mov
int3
inc
adc
call
int
ret
or
fmuls
outsb
inc
xchg
add
ss
push
outsl
in
aad
pop
jo
push
in
ja
xlat
xchg
xchg
push
in
jnp
sub
and
xchg
mov
dec
loope
leave
and
sahf
add
nop
insb
imul
push
ds
push
mov
or
or
inc
dec
fsubs
cwtl
cli
and
fldt
pop
and
repnz
adc
out
sub
jp
push
cltd
xchg
sub
cmc
sub
mov
cmp
or
add
ja
test
xchg
xchg
xlat
cmp
pop
cld
adc
adc
xchg
pop
aam
fimull
sbb
mov
mov
push
jmp
arpl
mov
xor
add
loopne
dec
add
lret
pop
jl
sbbl
aam
push
pop
inc
add
mov
ljmp
rclb
scas
in
xchg
xlat
jnp
inc
out
testb
cmp
mov
sbb
sbb
sbb
in
movsb
xor
notl
jbe
in
scas
into
xchg
lret
aaa
daa
add
ja
mov
push
sti
outsb
cmp
sbb
sbb
pop
shrl
or
jno
cmpsb
int
sub
cmp
out
fstp
pop
and
fstl
sbb
adc
cwtl
in
test
ljmp
stos
mov
jg
mov
cmp
into
out
xor
jl
cmp
mov
negb
pop
jno
rcl
subb
aas
pushf
dec
and
shll
cmp
jbe
mov
mov
and
pusha
loope
cmpsb
cwtl
bound
dec
ret
rol
int
push
pushf
jae
ljmp
jmp
mov
pop
push
inc
test
sub
push
add
sti
insb
xchg
push
cli
mov
sbb
xorb
xor
mov
inc
and
push
fwait
test
jecxz
push
or
vmovaps
push
xchg
dec
arpl
or
inc
push
dec
mov
shll
sti
in
aas
push
incb
cmpsb
cmp
fsubr
loope
lcall
jle
xor
push
aas
push
dec
inc
test
lods
in
pop
daa
jmp
push
mov
outsl
in
add
sub
dec
scas
dec
push
xor
repz
mov
mov
in
jae
add
in
jmp
lcall
fadds
sbb
push
loopne
or
cmp
add
aad
jecxz
sahf
jecxz
jl
mov
ljmp
xor
mov
mov
or
sti
nopl
rcrb
mov
addb
adc
mov
jno
push
push
add
into
jo
andl
je
lret
or
divb
das
subl
jbe
cli
mov
sbb
push
cmp
mov
pop
cmp
les
repz
in
dec
inc
add
icebp
sub
cmovae
cmpsl
jae
loopne
cmc
lods
sub
adc
cltd
push
cltd
pop
and
mov
shll
xor
lods
stos
inc
int3
push
testl
mov
dec
sub
aaa
add
in
inc
pop
xor
aas
mov
inc
mov
outsb
je
scas
or
pop
dec
xchg
fxch
add
cmovs
push
lock
dec
stos
stc
xor
ror
xor
fnstcw
jge
loopne
int
sbb
shrb
clc
imul
cli
outsl
test
inc
iret
or
mov
or
mov
mov
out
and
gs
fwait
int
xchg
addb
mov
sub
test
cs
fstpl
push
aaa
fistpl
pusha
xchg
push
jae
add
fstpt
cmpsb
mov
adc
push
pop
movsl
imul
xchg
push
leave
mov
push
adc
inc
in
cmp
lods
mov
mov
xchg
mov
jmp
fsubl
mov
push
in
lock
pop
sbb
sti
sahf
push
aad
sub
push
jb
cmp
pop
inc
rol
in
push
xor
cmpsl
xchg
daa
cmp
ja
rolb
dec
aad
sbb
cli
pop
xorb
dec
push
mov
mov
dec
leave
loop
jg
ja
mov
adc
pop
stos
dec
inc
mov
cld
inc
out
dec
fcomps
ss
cld
adc
adc
fbstp
repnz
mulb
aad
xor
je
cmp
insl
xchg
movsl
add
fldt
inc
and
push
push
nop
pop
mov
mov
or
jb
loopne
or
pop
popa
insl
xor
mov
pop
es
lret
insb
les
push
aam
sub
ja
cwtl
loope
in
dec
sbb
cmp
in
aam
mov
mov
stc
mov
pop
test
std
das
ficomps
jecxz
xor
push
out
adc
subl
rorb
pop
sub
jg
rorl
xchg
pop
cmp
xor
rol
flds
pop
loopne
test
lods
adc
ret
cmpsb
push
arpl
in
push
push
dec
add
xor
test
ja
fistl
aam
clc
pop
test
ret
and
pop
adc
lds
jae
lahf
fwait
das
mov
es
push
dec
xorb
jnp
xor
jnp
in
mov
insl
int3
pop
xchg
push
sbb
mov
mov
gs
cmp
test
pop
das
pop
xor
test
rcrb
mov
lods
push
loop
lds
subl
and
xor
dec
push
test
or
lods
push
fcomi
ret
loope
adc
vpand
mov
test
enter
iret
pop
out
xchg
xor
sbb
outsl
xor
test
std
inc
mov
notl
mov
pop
inc
push
ljmp
cmpsl
int
mov
dec
rclb
mov
sbb
xor
fsubrs
cmp
cli
cmp
daa
add
lea
mov
loop
mov
pusha
enter
cmc
pushf
sub
jge
jecxz
repnz
enter
sub
bound
mov
fcoms
sbb
xchg
add
mov
inc
fiadds
leave
enter
int
cmp
mov
ret
inc
jbe
sub
out
mov
xor
add
cmp
inc
mov
cmp
int3
cmc
mov
lcall
adc
test
pop
outsl
dec
aas
inc
es
mov
jl
imul
es
xchg
jo
sti
add
mov
loop
iret
js
inc
jle
jg
adc
sub
push
add
scas
mov
push
lcall
jno
stos
sub
ljmp
dec
cmp
push
je
call
fldl
sbb
mov
iret
fldl2t
pop
pop
outsb
bswap
fidivrl
sbb
lods
pop
jno
sub
xchg
loope
push
mov
jg
adc
xor
dec
xor
pop
in
adc
int
jbe
mov
in
sub
pusha
pop
sbb
sub
nop
cmc
in
test
dec
dec
out
inc
sbb
push
xchg
dec
vpmaxub
push
in
or
ret
inc
sbb
test
adc
cmpsb
lret
fs
pop
xor
lret
add
mov
sbb
inc
addr16
movsb
sub
sbb
stc
sahf
fidivrs
es
push
push
testb
adc
adc
and
sti
nop
testl
into
mov
or
fbld
mov
ret
in
in
mov
das
je
sar
jns
mov
add
dec
xchg
movsl
les
pop
pop
les
cmc
pop
in
lret
adc
test
cmc
cmc
push
dec
mov
dec
mov
std
lret
nopl
insb
add
mov
mov
stc
cltd
mov
dec
xchg
test
push
out
lcall
insb
addr16
mov
pop
aas
cmp
and
add
cli
cld
cmp
fdivl
adc
mov
int3
ja
and
mov
lcall
xor
xchg
cli
cwtl
insl
or
aaa
insb
in
sub
lahf
mov
cli
xchg
lret
std
mov
dec
shrl
adc
daa
sub
pushf
fsubr
adc
data16
sub
aas
sahf
push
cmc
pop
shrl
sbb
imul
lea
pushf
jb
sub
dec
or
sbb
jge
add
js
cmp
mov
jne
testl
dec
sbb
jge
push
data16
xchg
scas
sub
pushf
es
jmp
dec
negb
pop
call
in
lcall
push
adc
cmp
cmp
cmp
xor
aam
lods
loopne
add
push
fmuls
stc
insl
push
mov
pop
fwait
dec
jns
jne
jo
cwtl
bound
sarb
insl
fistps
aas
sahf
fwait
mov
sbb
pop
adc
arpl
mov
es
xchg
ds
rcll
addl
xchg
xor
add
pop
cwtl
ja
cmpsl
lahf
js
sti
mov
sub
sub
data16
dec
lods
mov
mov
sub
mov
mov
xchg
push
sbb
push
mov
sub
jns
daa
cltd
lea
js
lds
push
fwait
in
xor
popa
pop
mov
jo
neg
mov
dec
out
mov
nop
and
das
add
scas
insb
clc
xchg
mov
jne
bound
clc
fwait
pop
mov
push
aas
and
int
in
jle
sbb
and
rclb
in
push
popa
test
aam
ljmp
jge
pushf
lods
pop
lret
dec
jp
ret
sbb
popf
stc
outsl
bound
push
push
jmp
xor
les
cmpsb
jge
jp
sarb
pop
mov
inc
insb
cmp
inc
shrl
scas
popa
mov
test
dec
and
xchg
sbb
xor
fdivs
stc
fistpll
out
jmp
xchg
pusha
or
out
cmp
iret
push
lock
push
and
les
xorb
jg
sbb
xchg
pop
data16
lods
xchg
or
out
xor
pop
and
mov
mov
test
sub
and
fstpt
jnp
test
jo
sbb
in
mov
pop
cli
in
mov
sahf
mov
in
jmp
cmp
jno,pn
gs
cwtl
jne
cs
xor
imul
jo
jns
xchg
cmpsl
out
lret
push
jmp
fsubr
call
orl
fnsave
sub
leave
bound
shr
xchg
mov
out
arpl
jmp
cmp
push
cld
aam
ss
test
or
inc
sub
out
lahf
or
mov
jnp
push
dec
adc
cs
add
out
inc
rcrl
adc
mov
filds
push
gs
push
pop
mov
xchg
imul
or
out
clc
inc
and
jle
mov
scas
fnstenv
sub
test
lods
cmp
mov
or
jnp
jnp
lock
leave
push
outsl
jno
pop
jo
stos
cmpsb
outsb
add
popl
not
aaa
mov
sbb
mov
xorl
mov
pop
leave
push
cmpsb
cs
mov
and
pop
notb
je
mov
xchg
pop
sub
jnp
loope
out
frstor
mov
sbb
sub
shl
outsb
out
fldt
push
pop
arpl
adc
and
jbe
xchg
loope
test
mov
call
cmp
jmp
cmc
mov
sbb
mov
fstpl
jle
xchg
and
test
push
jae
push
or
pop
popf
mov
rorl
cmp
add
jp
mov
stos
adc
or
sub
sbb
rcrl
in
jnp
pop
adc
pop
ret
jbe
imul
lds
or
imul
movsb
mov
sbb
mov
pop
jg
cmp
shr
add
jae
mov
and
mov
hlt
sub
iret
mov
xor
data16
jb
cmpsb
sub
mul
push
loopne
ljmp
iret
sbb
mov
xchg
in
mov
sub
sbb
cmp
ss
push
xor
sti
enter
or
sbb
popf
fisttpl
js
fldenv
test
lcall
aaa
sarb
and
sbb
mov
jns
out
popl
mov
dec
insb
sarb
test
jge
cmc
pusha
and
jns
cli
test
mov
cmp
mov
mov
jl
es
pop
imulb
mov
add
mov
or
out
sahf
nop
xor
fs
cmp
inc
xchg
nop
and
inc
jne
movsb
inc
mov
push
mov
xchg
xor
mov
push
xchg
sub
xlat
jbe
cld
insl
push
icebp
je
ds
sbb
gs
sub
jae
lahf
popa
sti
arpl
addr16
in
out
loopne
inc
clc
fwait
out
push
shll
jnp
insl
inc
dec
xchg
pop
jae
enter
jbe
shlb
movsl
outsb
or
pop
xor
int3
mov
cmp
out
sbb
scas
jbe
nop
rcl
imul
stos
popa
mov
pop
dec
outsl
loop
insl
adc
out
mov
add
call
fiaddl
lods
lods
popa
call
loope
pop
add
inc
pop
mov
jl
sub
push
cmpsb
std
push
faddl
lods
jp
cmp
aas
jle
jno
add
imul
pop
aas
adc
push
pop
jne
daa
pop
mov
pusha
mov
xor
aad
lret
mov
fcomp
inc
adc
inc
sbb
xchg
xchg
daa
ss
popf
fbld
cmpsb
in
push
jae
push
mov
add
ret
adc
lock
nop
mov
mov
mov
sahf
jp
mov
mov
sub
push
subb
pop
push
pop
outsb
add
andb
bound
lcall
pop
jae
or
cwtl
aas
out
and
dec
pop
xor
in
push
mov
adc
lods
pop
mov
mov
cltd
and
hlt
stos
lret
sub
add
push
icebp
cmpsb
and
stc
pop
stos
in
mov
or
stc
sti
push
bound
sbb
andb
fdivrl
jb
les
das
mov
lds
cmpb
aad
mov
adc
pop
mov
mov
inc
fidivrs
sub
cmp
rolb
sub
sub
loope
add
outsl
in
clc
fdivs
ja
test
xorl
mov
xlat
rorb
outsb
iret
jns
pop
push
pop
add
sub
xchg
data16
pop
subb
or
sub
lds
ss
pop
into
pop
pop
dec
cmp
mov
scas
mov
lcall
add
stos
sub
and
push
dec
jns
and
fs
loope
and
into
push
push
adc
cmp
xchg
int3
bound
mov
mov
sbb
pusha
arpl
cs
jbe
push
mov
pop
dec
out
out
push
das
sub
fisttpl
jbe
xchg
push
dec
sub
arpl
dec
pop
rcrb
rcrl
test
clc
mov
popa
adc
enter
je
hlt
loopne
cmp
adc
inc
lahf
cmpsl
dec
setl
das
lret
push
jl
push
mov
std
jno
xor
inc
adc
mov
mov
mov
dec
ret
sbb
pusha
or
cld
in
out
fnstcw
jmp
push
loop
scas
adc
daa
xchg
and
pop
icebp
insb
rcr
push
dec
or
or
xor
gs
ret
nop
add
test
pop
lea
mov
inc
or
mov
arpl
jle
xchg
mov
fcmovne
in
xorb
and
xchg
aas
lahf
leave
push
scas
inc
sahf
adc
out
jbe
xor
lds
mov
hlt
ss
mov
xchg
push
jmp
dec
sbb
scas
ret
rolb
mov
dec
dec
jns
popa
mov
rcrb
jg
cmp
sub
arpl
sub
jg
daa
test
add
sbb
ret
fs
jo
lcall
cwtl
shll
or
stc
sbb
cmp
mov
clc
leave
addl
mov
cmp
mov
mov
cmp
pxor
loopne
std
jecxz
inc
jp
mov
and
mov
cmp
mov
lcall
lock
fwait
jae
mov
popa
pop
and
jmp
das
test
js
mov
pusha
mov
insl
aad
xchg
add
into
add
jp
in
dec
adc
loopne
push
leave
cs
out
scas
add
mov
fstpl
stos
in
lds
adcb
leave
pop
adc
ss
mov
stos
aas
cmp
out
enter
push
mov
jae
pop
popf
lds
add
sub
jmp
addr16
or
in
imul
shll
dec
mov
gs
test
jmp
inc
lds
into
and
jnp
stc
mov
pop
testb
out
sahf
adc
ficomps
pop
xchg
or
add
xchg
cmpsb
jo
call
cmpsb
int3
pop
xchg
incl
pop
in
loope
mov
inc
popa
leave
fwait
lret
leave
mov
lods
xor
das
test
mov
addr16
and
mov
push
enter
lcall
or
mov
push
mov
sub
sub
cmp
aas
xchg
pop
xchg
jae
imul
mov
test
xchg
mov
inc
out
je
sub
mov
arpl
push
xchg
cmc
dec
sub
mov
push
outsl
ret
shl
sub
bound
ljmp
popa
sti
sahf
xor
push
out
and
std
popa
in
xchg
cmc
xor
aas
mov
shll
pop
dec
add
in
ret
sbb
ljmp
jnp
cmpb
out
add
fdivr
pop
or
stos
cmp
add
sbb
and
jns
inc
and
mov
rol
mov
in
push
cmovae
add
and
dec
pushf
nop
sub
imul
sbb
mov
push
add
cltd
scas
sub
pop
mov
pushf
insb
mov
lds
mov
testb
fdivrs
push
sub
gs
popf
mov
mov
mov
je
mov
cld
xchg
add
dec
sahf
aam
add
mov
fisttpll
xor
mov
in
sub
xchg
adc
push
adc
push
push
xchg
push
add
leave
inc
cmp
xor
add
adc
dec
in
test
xchg
cmp
xor
pop
ljmp
sbb
je
popa
ja
in
jae
dec
adc
pmulhuw
repz
xorl
xchg
gs
lock
or
cmp
mov
dec
hlt
arpl
orb
pop
lcall
cmpb
or
insl
ja
lods
nop
dec
sbb
sbb
sbb
xchg
dec
xchg
dec
lods
rclb
xor
out
sbb
div
adc
js
int3
fiadds
push
in
pop
sbb
clc
push
xchg
pop
jg
dec
pop
adc
in
mov
sbb
inc
icebp
sbb
inc
add
or
xchg
fistpl
push
or
adcb
das
cmp
aad
jecxz
dec
int
ss
inc
stos
js
dec
xchg
sbb
jne
sbb
mov
cmp
decb
dec
adc
and
fbld
inc
sti
jle
cmpsl
cmpsl
outsb
pop
pushf
push
ret
imul
pushf
mov
stc
sahf
stos
mov
popa
negb
call
repnz
daa
mov
xor
mov
fisubs
stc
in
shrb
pop
leave
mov
shl
or
punpckhwd
jmp
dec
push
pop
out
data16
xchg
fistpl
cmp
sbb
mov
popa
mov
mov
inc
fcoms
cmc
xchg
push
or
mov
mov
jge
call
add
sub
add
inc
push
sahf
jp
xor
or
ret
and
mov
lahf
scas
stos
jne
jp
sub
adc
iret
fdivl
dec
push
fiaddl
sbb
cmp
js
and
pusha
inc
mov
adc
jp
inc
jae
mov
rolb
jecxz
iret
lcall
or
std
movsb
leave
mov
push
add
dec
in
fbstp
insb
cmp
sahf
inc
adc
push
and
fwait
and
decb
jbe
scas
or
add
push
inc
ja
adc
ljmp
imul
jmp
pop
push
stc
cwtl
mov
sbb
dec
out
push
or
stc
pop
dec
cmpsb
inc
int
cmp
mov
lods
or
or
sub
add
pop
xchg
push
aaa
cwtl
popa
rcl
cmpsl
or
push
rorb
jp
cmpsb
lret
shll
xchg
imulb
loope
out
inc
imul
aaa
in
jp
add
outsb
arpl
frstor
cwtl
cmpsl
hlt
add
sbb
stos
aam
jle
mov
mov
jae
enter
mov
mov
dec
int3
dec
shll
ja
cmc
mov
outsb
lods
hlt
ret
das
push
push
ja
cmovnp
or
or
jne
sahf
lods
cmp
push
int3
sbb
iret
cs
stos
mov
fwait
xlat
cmp
insl
or
lods
add
dec
push
cmc
inc
xchg
pop
fisttpl
outsl
mov
push
inc
pop
inc
daa
jecxz
clc
loop
out
adc
js
cmp
jno
mov
push
mov
inc
notl
sub
mov
dec
dec
inc
popf
pop
movsb
add
mov
dec
cmpsl
movsl
cmp
out
sub
fldcw
jbe
ljmp
lret
sbb
cmpsb
jne
repnz
int
lods
stc
das
xor
sbb
cmp
pop
dec
shl
pop
outsl
mov
xlat
dec
ffreep
ds
arpl
je
xor
adc
inc
mov
mov
mov
lret
or
enter
jp
rcl
lcall
push
xchg
and
and
nop
mov
inc
sbb
mov
pop
insb
push
cmc
pop
pop
mov
testl
xor
mov
pop
mov
jmp
sar
aas
jmp
push
icebp
cmp
adc
mov
pop
fs
lods
pop
jecxz
sub
aas
xchg
out
inc
xchg
jo
cmp
aas
or
outsl
mov
push
lret
repnz
xlat
cmpsl
leave
push
repnz
addr16
cmc
jg
sbb
inc
cs
testl
sub
push
shr
je
cltd
fimuls
out
cmpl
cmp
mov
and
and
inc
ficoml
pop
dec
ja
imul
int3
mov
cmc
les
add
aam
sub
jns
lret
cmp
nop
pop
push
xor
shrb
xchg
popa
shlb
notb
and
popf
mov
mov
insl
outsl
jp
ret
and
das
jno
dec
punpckhbw
push
and
test
loopne
or
jecxz
repnz
mov
inc
fisubs
pop
sbb
add
daa
xchg
ljmp
insl
lahf
call
inc
ljmp
sbb
adc
popa
jae
aad
mov
sub
je
pusha
mov
dec
push
cmp
xor
daa
fsubs
sbb
mov
fcompl
cltd
jns
and
pop
xchg
loopne
test
lock
iret
fidivl
fistl
mov
push
dec
jae
fisttpll
inc
lret
pop
loope
pop
stos
insl
xor
in
mov
xor
add
orb
and
pop
test
adc
enter
movsb
jno
ds
repz
imul
inc
sub
and
inc
out
leave
xchg
pusha
mov
inc
push
fistpl
and
lret
cld
xor
jno
ljmp
clc
mov
and
jns
addr16
jnp
sbb
icebp
out
fmuls
jmp
mov
push
aad
mov
dec
lret
and
pop
iret
and
jmp
outsb
insb
mov
dec
push
sub
dec
mov
fdivl
dec
inc
test
vpmacswd
xor
mov
out
fwait
or
mov
cmpsl
jle
aaa
lds
shr
pushf
sub
sub
lea
sti
fwait
test
shlb
ja
jno
outsl
fwait
cltd
xor
inc
jbe
dec
data16
test
jg
cmp
or
inc
sarb
mov
mov
aas
adc
ss
iret
arpl
jecxz
jbe
sub
adc
dec
loope
jmp
fidivl
pop
and
xchg
xchg
jns
mov
cmpsl
ds
cmp
adc
adc
leave
push
mov
testl
pop
repnz
or
push
jnp
stos
scas
mov
sub
cmp
push
mov
pop
mov
jmp
pop
adc
sub
movl
adc
push
dec
les
or
mov
sbb
push
adc
jp
or
inc
lret
outsb
out
cmp
rcll
andl
in
pop
cltd
push
test
ljmp
mov
imul
pop
fdivl
ljmp
mov
xchg
aas
mov
aaa
mov
sbb
repnz
jg
sub
xchg
arpl
out
cwtl
mov
jg
inc
mov
ficomps
mov
stos
enter
jle
cmp
push
dec
aad
jmp
loope
sub
dec
pop
arpl
loop
push
and
pop
jns
mov
sub
out
and
shll
jge
cmp
mov
les
push
and
bound
stos
jb
mov
jl
mov
out
test
std
push
fisubrs
jle
mov
sbb
mov
mov
inc
int3
adc
push
std
xchg
and
mov
test
mov
sbb
add
sbb
and
xorl
repz
push
and
xchg
jge
dec
inc
les
lock
cwtl
mov
aam
vxorps
xchg
cmp
into
jge
push
stc
xor
faddl
or
leave
inc
imul
push
test
imul
pop
push
imul
add
adc
and
push
test
jns
push
in
rorl
mov
lahf
push
aaa
cmp
mov
call
push
adc
repz
inc
mov
push
push
inc
jne
add
mov
iret
inc
je
push
jecxz
sbb
add
fidivs
aas
xor
scas
jnp
push
and
call
push
adc
push
out
push
clc
nop
mov
shrl
popf
cmp
das
inc
enter
in
sbb
stc
mov
pop
aam
rcr
jnp
pushf
sbb
dec
adc
aad
xchg
arpl
and
push
or
movsl
int3
psrld
mov
lods
sub
dec
inc
cli
cmp
leave
mov
aad
in
mov
mov
call
sub
das
inc
mov
repz
or
mov
fs
psllw
out
adc
arpl
adc
cmpsl
inc
pop
xor
bound
ret
add
lock
std
xor
out
pop
xchg
dec
jno
push
mov
imul
insb
cs
sbb
js
daa
andb
loop
jmp
aam
mov
pop
lcall
bound
enter
lret
sbb
fs
adc
or
cmp
cmp
or
xor
add
cmp
outsl
jnp
inc
add
xchg
adc
mov
aaa
data16
cwtl
pop
push
mov
and
sete
leave
stos
push
leave
jl
cmp
cmp
push
repnz
in
mov
sti
dec
mov
andb
pop
dec
out
or
sahf
test
xchg
lcall
pop
int3
in
fwait
test
mov
inc
out
lods
cmp
out
mov
xchg
shll
loope
es
xor
lods
sub
fisubl
cld
popf
iret
adc
pop
dec
pop
aad
jmp
mov
ja
sbb
sub
sub
loopne
dec
lods
sub
ret
xchg
inc
adc
sbb
movsl
adc
gs
mov
ja
pop
jge
mov
xchg
or
stc
add
and
jle
inc
sahf
imul
insb
inc
xchg
add
adc
pop
ja
dec
test
jecxz
call
mov
fcmovne
mov
jg
xlat
test
cmp
dec
jle
mov
jp
out
jae
popa
sti
les
out
xor
adc
fdivrs
fwait
push
out
push
repnz
cli
popf
scas
cmp
jle
dec
je
fidivrs
loope
or
push
outsl
pop
data16
mov
mov
push
adcl
dec
orl
insb
mov
adc
mov
repz
insb
popa
leave
cmp
das
push
cmp
cmp
jbe
test
es
cmp
insb
adc
fsubs
jl
xchg
fcmovnb
outsb
adc
enter
or
