sbb
add
mov
xchg
mov
scas
call
sub
cmp
pushw
bound
inc
std
cmp
mov
push
pop
rorl
lock
inc
and
jo
lds
mov
test
mov
jp
inc
jl
imul
sub
mov
lock
adc
cmp
movsb
lds
dec
pop
mov
mulb
in
pusha
push
stc
sub
mov
lods
dec
mov
inc
xor
ss
pop
and
addr16
js
lods
aam
jbe
arpl
sbb
not
add
push
mov
arpl
roll
out
and
arpl
in
inc
shl
pop
mov
loopne
cmpsb
jns
lock
push
cltd
xor
xor
sbb
mov
inc
test
loopne
subl
test
add
or
sub
cmpsb
pop
movsl
add
and
sub
je
fwait
sub
scas
cltd
xchg
or
imul
or
pop
mov
cmpsb
or
pop
cmp
sbb
sbb
xchg
or
sub
inc
repnz
xchg
dec
jae
seta
mov
stos
mov
and
mov
mov
jle
cmp
jmp
cli
sbb
and
xor
mov
int
movsl
pop
push
rorb
push
sub
cld
shll
sbb
xor
xchg
add
jns
or
xlat
dec
ja
inc
fistpll
cmp
add
fld
inc
add
xchg
jmp
jnp
or
sbb
jno
push
les
aaa
lahf
pop
divb
loope
aam
dec
in
rcrb
int
ret
add
sbb
mov
rorb
pop
in
pop
pop
addr16
pop
cmc
inc
stos
push
imul
xchg
aad
and
fwait
inc
aas
insl
cmp
ja
add
sub
ret
jge
mov
add
xchg
xchg
jae
jecxz
push
fcompl
nop
dec
or
cmp
hlt
shr
iret
shl
cmc
dec
sub
xchg
das
adc
movsl
xchg
hlt
loope
inc
cs
add
jp
push
ljmp
mov
jl
mov
pop
sahf
push
and
add
dec
stc
or
das
push
or
stc
mov
sub
lods
cld
xor
lods
int
xchg
sbb
jno
cmp
mov
xor
mov
lret
ret
sahf
aaa
movsb
or
mov
push
outsb
mov
in
cld
push
popa
xchg
insb
outsb
test
movsl
dec
push
or
mov
push
jo
inc
cmp
movsb
push
shll
cmpsb
cmp
and
lods
sub
cli
mov
mov
inc
mov
popf
push
scas
aas
mov
lret
out
lds
jns
xor
sub
cmp
pop
icebp
mov
mov
sbb
xchg
mov
jmp
inc
insl
sbb
mov
mov
xchg
cmpsb
and
dec
mov
mov
outsb
or
lock
test
roll
push
iret
lret
in
adc
dec
stc
pushl
ds
insl
lret
gs
rcrb
imul
rcll
aam
mov
cmp
adc
push
lahf
mov
lock
jg
bound
stos
loop
add
pushf
ss
sbb
push
xor
inc
outsb
xor
jne
call
notl
mov
movsb
lods
jne
cmp
popa
rolb
test
out
loop
push
sti
mov
lock
sub
int
push
scas
aam
push
jnp
ss
insb
and
xchg
push
ret
jecxz
xor
not
les
mov
add
lret
jne
and
inc
addr16
fwait
mov
sub
lret
fcoml
push
dec
and
jb
ja
dec
out
out
int3
repnz
lcall
inc
and
insl
cmpsb
sub
inc
stos
pop
cmp
adc
ja
mov
sub
test
mov
in
mov
push
sbb
in
data16
inc
rorb
adc
lcall
mov
mov
jl
push
adc
and
fisubrs
or
xor
add
xchg
aam
nop
test
cld
pop
adc
cmp
mov
stos
mov
sbb
push
rolb
ja
ja
jge
sbb
or
push
fstl
fnstsw
ja
pop
mov
push
sbb
sub
add
loop
mov
sub
xor
fninit
movsl
imul
fimuls
mov
add
idiv
bound
cmpsl
mov
test
leave
fisttpll
pop
ljmp
jb
jmp
add
jbe
mov
test
fcomip
and
mov
incl
xchg
pop
mov
mov
pop
dec
lea
mov
rorl
xchg
mov
aad
lods
insl
and
lcall
jmp
hlt
sbb
rolb
mov
cmc
push
daa
roll
push
inc
test
push
pop
dec
repz
dec
fdivrl
lret
adc
mov
sbb
add
jbe
mov
xor
jecxz
iret
addr16
cmp
jne
stos
mov
ss
push
int
push
and
xchg
mov
pop
pop
loop
pushf
push
repnz
mov
jns
lds
ja
in
sarb
adcl
push
jecxz
roll
sti
mov
jl
sahf
pop
incl
pop
pop
rcrl
repnz
xor
xorb
out
sub
imul
cmp
and
or
movsl
push
adc
in
inc
idivl
cmp
xor
or
test
sub
adc
add
mov
in
sub
mov
adc
sbb
movb
fwait
daa
dec
aad
ss
je
stos
mov
jns
mov
or
fcom
inc
jmp
cmp
lock
or
xchg
bound
int
ss
xor
pop
push
mov
xchg
sbb
mov
ss
pop
sub
pop
fidivs
sub
adc
das
sbb
in
and
mov
movsl
adc
jns
test
cmpsl
pop
pop
jmp
jmp
scas
or
xchg
push
jle
sub
jecxz
or
dec
cwtl
test
xchg
rcrb
push
sbb
fstp
mov
xchg
cmpsl
mull
sbb
pop
js
outsl
incl
cmp
std
mov
insb
ffreep
cwtl
icebp
jae
ja
adc
sub
bts
xor
int3
xor
aas
mov
jp
dec
fidivrs
and
fs
dec
or
scas
and
nop
test
xchg
and
xchg
cmpsl
pop
inc
in
stos
dec
xor
cmpsl
sbb
sub
mov
rclb
scas
jmp
add
test
fs
jge
ret
mov
sbb
data16
sbb
push
lret
dec
aaa
ficomps
lods
lock
cmp
cmpsb
and
pusha
jg
xchg
les
test
mov
xchg
mov
lcall
ja
fistpll
mov
mov
pusha
jge
mov
inc
jl
test
mov
outsb
and
sub
loope
push
into
or
inc
and
cltd
push
jg
push
add
xchg
movsl
call
stos
cwtl
cld
test
ret
fsubs
sub
outsl
inc
mov
add
jo
popf
int
adc
dec
lds
mov
ljmp
repz
test
fisubrs
ja
mov
inc
xchg
iret
in
insl
dec
jle
fiaddl
pop
popf
cmc
sub
gs
jne
imul
faddl
and
out
push
xor
loop
jge
js
cmp
stos
les
aas
and
daa
push
xor
es
pushf
inc
enter
in
das
jno
inc
sbb
lahf
pop
into
sub
push
rcrb
js
mov
movsb
add
pop
shlb
or
jg
mov
popf
cmpsl
sub
or
lock
inc
fdivrl
js
xchg
mov
js
pop
sbb
sbb
mov
jg
js
xlat
xorl
or
mov
xchg
lcall
clc
hlt
fcoms
add
dec
sub
enter
int3
lret
sub
pop
xchg
dec
test
stos
lret
mov
insb
jl
mov
iret
js
mov
cmp
movsl
sub
xor
xor
mul
xchg
mov
icebp
aas
int3
shl
mov
mov
xorl
mov
psubsb
into
xor
inc
sbb
ljmp
aam
lahf
je
add
mov
sbb
fs
test
sub
xchg
xor
ja
ret
movsl
sbb
cmpsl
mov
aaa
push
mov
or
cwtl
jecxz
cmp
test
mov
mov
lret
sbb
mov
xor
sub
out
push
imul
dec
cmp
clc
xchg
ja
inc
lods
pushf
dec
jle
push
std
in
dec
ror
aas
cmp
xor
aad
ja
xor
dec
icebp
test
lahf
daa
cmp
push
repz
repz
aaa
cmp
dec
push
push
fnsave
inc
jle
lret
jbe
loopne
pusha
gs
mov
aas
aas
lahf
fistl
dec
popf
or
cmpsl
inc
imul
test
fildl
jbe
or
push
out
test
stc
or
push
insl
inc
imul
mov
mov
pushf
push
cli
push
push
mov
or
test
cli
pop
les
jno
inc
in
enter
aad
fnsave
or
add
xchg
inc
sub
dec
or
leave
adc
push
inc
jp
stc
mov
arpl
mov
push
xchg
out
push
xchg
jae
dec
ror
mov
in
int3
outsb
push
jmp
imul
dec
es
add
sbb
cmp
pop
jbe
sbb
mov
js
adc
sahf
dec
pusha
cmp
ss
cli
cmp
mov
push
rorl
pop
add
xchg
jecxz
and
add
into
xchg
int3
pop
mov
mull
icebp
fsubs
rcll
mov
lea
or
es
dec
aaa
cmpsb
jne
addb
xchg
lret
fwait
mov
pop
loope
loopne
mov
je
in
push
repnz
jno
xor
fsubrs
pusha
cmp
notb
aaa
rolb
xchg
push
addr16
inc
cmc
pop
mov
ficompl
inc
lret
cli
mov
std
xchg
dec
std
repnz
mov
ja
sub
push
push
ljmp
loop
push
icebp
dec
xchg
in
jae
push
daa
ljmp
outsb
push
loope
into
push
push
outsb
loopne
stos
ja
in
or
push
sub
mov
lods
cltd
pop
lahf
mov
push
sbb
imul
lea
into
jno
xchg
xchg
jb
movsl
nop
movsl
push
clc
cmp
mov
mov
iret
push
xor
pop
and
repnz
jbe
jl
aaa
out
or
mov
xor
sub
lds
pop
loopne
ljmp
adc
cli
int
mov
jne
stos
and
repz
jp
and
outsb
jns
sbb
rcrl
cmp
mov
rorl
ror
push
sub
cmpsb
aaa
push
fdivrl
sbb
rcrl
hlt
push
inc
cwtl
add
push
inc
xchg
sbb
push
mov
ja
push
xchg
rcl
popa
inc
js
xchg
les
daa
mov
clc
pop
sbb
lahf
in
jge
sub
adc
pop
movsb
adc
jns
dec
pop
inc
xchg
xchg
icebp
pushl
mov
dec
sarb
and
mov
pop
es
mov
mov
dec
call
mov
lret
and
shlb
mov
cmpsb
pop
inc
sbb
stos
adc
sbb
daa
sbb
pop
mov
cmp
xchg
adc
repz
adc
push
ret
mov
ret
cmp
cwtl
or
arpl
mov
mov
sarb
stc
rorl
xor
enter
inc
and
xor
cld
and
mov
fs
andps
push
mov
cmpsl
push
bnd
es
popa
mov
jmp
clc
jne
aad
hlt
and
shll
lret
inc
mov
iret
ds
push
bswap
cmc
shll
or
insl
pop
dec
cltd
jecxz
fwait
xor
mov
mov
xor
fs
shl
in
inc
or
xchg
aad
fnsave
divb
iret
loop
es
cmpsb
das
jno
fmuls
mov
flds
popf
insb
add
outsb
imul
lret
or
push
jo
adc
lods
out
ljmp
ret
xor
jge
test
sub
jns
xlat
xchg
mov
jno
jne
xor
mov
adcl
rorl
dec
das
in
bound
cmp
mov
xor
inc
mov
or
ficoml
xchg
xor
insl
fldenv
pusha
push
jl
fwait
xchg
out
inc
dec
iret
jl
push
push
cmp
lds
dec
iret
xor
lret
push
ret
or
pop
pop
in
cmp
xor
xchg
andl
pop
push
add
adc
pop
mov
aaa
xchg
mov
jbe
imul
mov
sub
dec
fldl
lods
movsb
data16
inc
jns
movsb
shlb
enter
pop
push
jns
push
push
les
in
subl
push
mov
mulb
daa
dec
in
fs
push
sahf
movsb
pusha
add
jae
mov
adc
lahf
sbbl
mov
ficoml
ljmp
cmpsl
xchg
inc
ret
mov
and
jne
shll
mov
aad
xchg
imul
mov
add
inc
les
bound
jle
test
ret
add
sbb
lods
test
mov
inc
std
xchg
jmp
lret
and
je
imul
add
mov
cmp
lret
push
mov
jge
mov
push
mov
mov
icebp
xorb
int3
cli
jecxz
out
lods
or
sbb
xchg
add
fstpt
fwait
mov
cwtl
pushfw
xchg
and
mov
inc
xchg
dec
sub
imul
xor
ss
sub
jecxz
mov
inc
out
ss
scas
xchg
mov
adc
out
xor
lcall
pusha
in
inc
dec
ret
mov
xor
inc
pushf
scas
repnz
mov
jle
add
fmuls
sbb
push
add
dec
cltd
pop
push
cmp
aas
pop
subb
add
dec
loope
cmc
push
lds
scas
mov
jns
out
cltd
int
cltd
outsb
jle
sbb
cli
dec
add
daa
push
mov
or
fwait
and
inc
loopne
push
scas
push
in
in
sub
insl
dec
inc
stc
mov
cmp
push
int
xchg
pop
cmp
xchg
sahf
test
cwtl
int
mov
mov
mov
add
lea
or
pop
fisubrl
mov
xchg
subl
mov
mov
js
xchg
sub
mov
xchg
popf
leave
adc
push
fs
inc
push
or
add
xchg
mov
pop
xchg
popf
sbb
dec
dec
jb
inc
xor
jle
aad
pop
out
scas
cmpl
pop
sub
pushf
pushf
jp
test
std
xchg
jg
std
imul
inc
pop
addb
dec
cmp
mov
cltd
pushf
mov
pop
loop
lcall
out
inc
nop
out
in
xchg
pop
cltd
repz
mov
mov
imul
xor
orb
pop
aad
push
sbb
mov
cmpsb
cmp
repz
pop
ja
push
jnp
imul
xor
rol
or
sub
sbb
mov
pop
jo
mov
push
and
jnp
call
lret
pushl
and
or
pop
inc
addr16
cmp
sti
inc
mov
fsubrp
sub
or
jnp
rcrl
and
out
mov
sahf
adc
dec
repz
mov
sbb
aam
and
mov
lret
xchg
pushf
popa
dec
mov
mov
inc
xchg
scas
or
jp
fldl
mov
push
mov
sti
mov
sub
push
mov
sub
dec
je
sub
add
adc
imul
jb
cmp
adc
fstl
push
mov
ror
aam
cmp
sub
ljmp
cmpsl
in
outsb
cmp
jne
popa
push
sahf
xchg
cmp
movsb
imul
inc
inc
inc
cbtw
add
mov
sub
xor
or
hlt
push
insb
pop
sub
push
push
rcll
mov
pop
mov
mov
mov
outsl
jo
loop
daa
jae
rcrb
xorl
nop
xlat
cs
jg
into
dec
jns
cmpsb
and
cli
movsl
or
loope
imul
scas
jo
stc
insl
push
cwtl
fisttpl
outsl
jp
es
js
arpl
mov
mov
dec
pop
cmp
and
inc
cs
jge
rclb
cmc
inc
fcmove
fadds
lcall
jns
inc
out
jne
call
xor
and
iret
jne
push
jle
lahf
sub
aad
aad
data16
fisubrl
xlat
psrlq
ljmp
sbb
and
popf
jmp
mov
mov
add
int3
jnp
cld
adc
mov
mov
jle
cli
pop
mov
mov
dec
xchg
data16
xor
jmp
fsts
popf
cmp
cltd
outsb
sbb
jo
or
mov
aad
adc
ret
sub
or
sub
rcrb
dec
repz
jecxz
test
out
inc
ds
jnp
cs
push
mov
mov
sub
int
xchg
xor
call
jnp
or
push
fstpl
mov
stos
fidivl
or
fnsave
dec
xchg
pop
lock
in
push
sub
jge
shl
nop
das
je
mov
xchg
in
push
cmpl
push
mov
cltd
fdivp
mov
pop
or
out
xor
shr
pushf
inc
gs
cmp
adc
movsl
or
dec
rorb
inc
stos
pusha
push
sbb
scas
testb
push
cmp
scas
add
adc
xor
sub
repz
rcrl
xchg
mov
dec
stos
cmp
pop
dec
movsb
ja
mov
in
push
push
sarl
sub
or
mov
xchg
inc
out
cmpsl
adc
movb
sbb
out
sub
test
mov
mov
shrb
push
push
cs
jns
push
lods
loope
lret
int
xchg
popl
mov
stos
inc
mov
jecxz
mov
sahf
std
jns
iret
daa
in
mov
shrl
insl
add
cmp
test
xchg
push
and
push
push
scas
xchg
stc
outsb
mov
mov
outsb
dec
sbb
in
pop
sbb
ror
cmc
fmull
dec
aad
sbb
add
in
jnp
popa
gs
xchg
cmpsl
pop
adcl
xlat
pop
loope
push
fbld
iret
int
cs
pop
mov
lds
add
das
or
mov
dec
add
fstps
xchg
sbb
fs
es
popf
cltd
mov
mov
cwtl
enter
adc
or
in
mov
daa
dec
movsb
xor
xchg
test
sub
and
push
cwtl
ljmp
lahf
push
cmp
stos
cltd
sub
into
sbb
andl
movl
sbb
mov
orw
repnz
std
fs
fldenv
movsb
out
mov
jnp
sti
sub
sub
lods
dec
pusha
ret
jge
jle
jns
outsb
emms
jecxz
dec
lds
test
push
out
pop
and
adc
in
fldt
in
leave
mov
je
cmp
test
jae
popa
je
dec
mov
cmpsb
popa
mov
orl
cs
jmp
sub
out
pushf
cwtl
jg
shlb
inc
fidivrl
adc
repz
adc
and
push
test
sub
pop
jnp
test
or
sub
std
out
in
cmp
cmp
sbb
repnz
dec
jmp
cmp
in
push
jp
scas
jle
cs
outsl
mov
mov
cmpsl
ret
and
lock
in
popa
dec
fidivrl
movsb
inc
mov
sti
out
jae
scas
push
or
mov
mov
xchg
popaw
cld
ds
xchg
enter
sub
in
test
jns
sbb
loop
jne
mov
sub
push
cs
jne
xor
lock
repnz
clc
add
dec
scas
rolb
outsb
push
pop
or
xchg
arpl
je
out
adc
std
repnz
dec
dec
orb
incl
test
add
mov
scas
sbb
xchg
fidivs
fsubrl
cmp
mov
sbb
sub
inc
push
lahf
cld
inc
cmp
xchg
mov
insl
push
mov
xchg
mov
repnz
insb
inc
mov
inc
test
mov
push
lods
xchg
out
or
scas
addl
ret
roll
or
mov
mov
sbb
xor
jo
cltd
xor
pop
fisttpl
mov
fsub
fucomp
cmp
adc
into
std
xchg
push
jnp
push
push
mov
cmp
jle
jns
addr16
xchg
ret
movb
dec
movb
stos
inc
addl
out
test
fsubrp
and
cwtl
fmull
test
jmp
adc
bound
adc
fisubl
shlb
mov
dec
mov
dec
jbe
das
push
fs
mov
fildl
lret
jl
and
push
sub
repnz
arpl
mov
mov
pop
ljmp
sbb
outsb
out
addr16
xor
call
leave
popa
cmp
out
sbb
imul
mov
fistl
mov
sbb
ss
fldenv
das
pop
das
push
stc
lock
aaa
icebp
xchg
or
jmp
mov
inc
mov
adc
loopne
ds
aad
dec
test
sbb
inc
lea
inc
mov
or
push
mov
lcall
push
xor
rorl
xor
je
je
rol
rorl
pushf
enter
xchg
cmp
stc
in
daa
sbb
xchg
into
sbb
cwtl
push
sub
xchg
les
xchg
and
stos
or
movsb
pop
xor
sub
mov
xchg
jbe
stc
not
xchg
mov
pop
or
lcall
xchg
or
adc
push
adc
popa
jp
icebp
jns
mov
mov
push
sub
pop
shll
jae
scas
mov
ljmp
aad
adc
cmp
aad
push
adc
add
aaa
jp
mov
call
and
outsb
adc
cmpsb
mov
mov
mov
in
lds
repz
lock
out
mov
xchg
lods
orl
insl
into
pop
lret
insl
mov
jns
pop
mov
enter
sbb
loop
sub
jmp
cmp
sub
lods
in
les
lcall
xor
ljmp
fldcw
addr16
popf
fsub
notl
or
int3
sbb
xor
cmc
enter
test
adc
xor
testl
adc
loopne
jae
mov
notb
inc
pop
scas
nop
pop
xchg
or
popa
inc
pop
rep
jns
mov
pop
repz
jns
push
out
dec
in
fucom
lret
xor
loop
icebp
mov
sub
lods
pop
test
inc
cltd
ret
adc
clc
mov
mov
in
xor
cld
pop
dec
add
movsl
rcll
lcall
decl
sub
call
insb
xchg
inc
div
mov
ror
clc
xchg
inc
pop
xlat
inc
sbb
or
mov
xor
pop
xor
iret
add
roll
jae
cmpb
inc
mov
lds
cmp
faddp
ret
or
sub
stc
cs
movsl
dec
sbb
or
popa
mov
and
inc
push
fbstp
outsb
in
imul
stos
test
pushf
scas
mov
and
dec
outsb
rcll
lcall
push
in
xchg
test
xchg
dec
mov
jmp
fimuls
testl
mov
les
fsubp
aaa
rcll
sbb
add
pop
inc
xchg
pop
mov
scas
xchg
sbb
jle
and
jns
daa
adc
stos
mov
or
sbb
movsl
fists
pop
mov
pop
enter
xlat
cmp
gs
stos
ja
xchg
in
inc
cld
jmp
fistpl
sbbb
imul
xor
fmul
adc
add
scas
pop
xchg
rcl
out
out
cwtl
ficoms
out
pop
daa
das
push
inc
xchg
push
add
hlt
cmp
pop
cmp
pop
sti
and
pop
outsl
repnz
sbb
xlat
jle
xchg
lods
je
sbb
add
sbb
leave
sahf
xor
mov
inc
scas
aad
insb
jbe
add
push
dec
test
dec
jns
xor
push
mov
xor
xchg
fmuls
push
xchg
inc
addb
add
xor
sbbb
test
popf
lock
and
and
xchg
push
push
jp
or
imul
mov
shlb
rolb
jb
es
dec
pusha
sbb
sbb
and
jbe
jmp
and
rcl
test
xchg
ljmp
jge
inc
mov
mov
iret
add
adc
shr
push
das
test
inc
push
xor
sub
movb
jmp
repz
je
ljmp
jo
inc
or
push
add
cmpsl
shrb
orl
pop
jne
dec
repz
mov
push
mov
testl
sub
imul
shll
int3
pop
leave
dec
jmp
in
in
inc
data16
lahf
gs
stos
inc
pop
pop
aam
add
push
lods
mov
loop
xlat
lods
cmp
fadds
ds
inc
shl
fsubp
dec
and
scas
mov
mov
mov
pop
jmp
add
dec
iret
mov
lods
sti
push
xor
lods
lret
push
dec
jb
rolb
ds
cmc
aam
jnp
jecxz
in
add
xlat
adc
outsl
push
sub
or
sub
movsl
mov
ret
ret
jmp
call
push
push
loop
call
arpl
or
fstpl
sbb
lea
loop
xchg
aam
mov
shll
push
adc
push
mov
xchg
test
cmp
and
jno
fisubrl
xchg
and
sub
mov
sub
sub
les
or
pop
jns
push
inc
lahf
mov
ror
mov
pushf
dec
mov
pop
jl
cwtl
inc
mov
std
push
sub
adc
sub
out
orl
popf
les
jb
push
xor
dec
fildll
scas
pushf
pop
stos
and
outsl
lock
aam
mov
hlt
jns
xchg
fucomp
loop
dec
cwtl
push
imul
cltd
mov
test
jbe
or
mov
idiv
arpl
fldl
push
sub
cli
jbe
subb
cli
cmp
nop
ret
push
iret
jno
stos
subb
mov
in
ret
fsts
pop
scas
filds
enter
rcrb
xchg
je
jp
outsl
lcall
or
sbb
lea
add
cmpsl
fcoms
imul
outsb
cmp
fbld
mov
in
imul
repnz
bound
xchg
sbb
popa
push
adc
mov
mull
adc
sub
lea
xor
add
or
pushf
orl
int3
mov
cmpsl
add
scas
int3
aad
mov
andl
jb
orl
cmpb
pop
subb
pop
nop
jo
dec
loop
cltd
inc
jmp
jae
and
cmp
sbb
fcomps
sbb
out
mov
daa
in
hlt
les
or
push
pop
data16
add
bound
dec
nop
or
sbb
fiaddl
xchg
inc
pop
mov
mov
mov
lahf
mov
sbb
aaa
adc
xchg
and
inc
int
repz
jg
rdtsc
icebp
mov
adc
push
mov
and
scas
mov
fstpl
test
mov
imul
mov
out
or
repnz
adc
in
es
movsb
cltd
dec
jle
xchg
test
incb
mov
jmp
pop
cmp
adc
jns
cltd
jg
mov
push
xchg
sbb
cmp
mov
push
jo
enter
sbb
aam
inc
out
pusha
testl
xlat
fcmovbe
jns
in
mov
adc
rorb
sbb
sbb
aas
cmp
jb
lea
push
icebp
or
push
mov
inc
and
cwtl
xor
pop
push
clc
std
xchg
sbb
lret
jno
lcall
xchg
mov
negb
add
fwait
jp
fnsave
jns
fcoms
popf
add
sbb
out
fdivl
aas
push
int
xchg
arpl
inc
jmp
fsubrs
cwtl
mov
lock
fisubrl
in
scas
dec
stos
dec
inc
jno
or
ljmp
dec
dec
in
sahf
dec
mov
insb
push
cmpb
icebp
fmuls
cmp
lcall
test
clc
inc
inc
inc
pop
inc
rol
pusha
enter
sti
jg
jp
mov
xchg
test
inc
lcall
adc
shl
inc
push
mov
insb
stos
jb
jmp
pop
repnz
jnp
cmp
inc
insl
data16
xchg
mov
inc
mov
out
lock
dec
sub
mov
mov
mov
adc
testb
or
insl
jg
inc
adc
mov
ss
aam
fnstcw
fdivl
dec
pop
xchg
and
xor
fistpll
pop
push
jg
jo
push
divl
mov
push
pop
mov
and
andl
mov
arpl
or
iret
out
push
repnz
mov
iret
mov
push
popfw
and
jle
cs
ja
fcompl
cmp
loope
mov
test
xchg
mov
or
push
or
xchg
rcrl
push
xor
popa
sbb
aas
popa
sub
test
or
out
mov
push
sbb
inc
sub
popa
jp
mov
push
rorl
cmp
imul
int
or
je
cmp
mov
pushf
xor
inc
fdivrs
loop,pt
in
jge
decb
lds
push
sbb
filds
and
dec
xchg
xchg
or
shll
cmpsb
jp
out
push
jmp
cli
or
pop
mov
stos
pop
je
icebp
push
mov
andl
cmp
mov
or
jno
push
push
bound
jge
and
mov
xchg
out
or
sbb
daa
push
jge
pop
sbb
lret
outsl
inc
push
lret
xchg
test
lret
lret
jno
ss
repnz
pop
repz
mov
mov
mov
and
data16
cmp
sbb
xchg
pop
movsb
jle
nop
test
pop
or
pushf
into
aam
les
mov
mov
popf
ret
loopne
mov
outsb
or
bnd
fcmovbe
dec
pushf
inc
push
mov
addr16
pop
mov
cmp
mov
push
addr16
jg
add
aaa
sti
inc
imul
out
xor
mulb
inc
mov
xor
mov
xchg
pop
test
fistps
lret
push
insl
into
jle
in
ret
fsub
sbb
adc
mov
add
test
pop
xchg
xchg
cmc
arpl
or
ret
arpl
xor
std
lret
mov
daa
jl
or
hlt
inc
and
lret
sub
addl
mov
in
adc
imul
sbb
adc
push
cltd
sarl
mov
jp
pop
mov
add
shll
lock
xchg
sti
shrb
fcmovbe
nop
ss
mov
xchg
add
xor
mov
jecxz
lods
sub
mov
cmpsl
dec
dec
dec
push
popa
std
mov
mov
hlt
sub
movsb
add
jmp
xlat
jne
dec
add
arpl
addr16
push
jl
pop
outsl
mov
iret
xchg
push
push
and
aam
cmp
mov
or
les
fdiv
fistl
fisubl
outsl
jl
xchg
lods
xor
mov
repz
xchg
arpl
call
jnp
push
in
in
lcall
dec
arpl
push
les
lea
push
cmp
cmp
inc
or
lock
mov
xchg
testl
lds
fcompl
out
push
fidivs
lret
aaa
xor
lahf
dec
pop
inc
ljmp
adc
xorb
inc
inc
pop
ficoms
dec
cltd
jl
add
sbb
jmp
pop
das
scas
fisubl
add
inc
or
mov
cmp
out
pop
dec
repz
and
lea
daa
adc
in
xorl
daa
in
add
mov
repz
ljmp
filds
add
push
call
imulb
sub
dec
js
adc
push
shll
jae
jbe
cmp
in
xchg
es
and
test
adc
outsb
mov
xchg
in
lods
jmp
sub
bound
and
ds
lret
cwtl
add
xor
xlat
test
and
mov
jle
lahf
xchg
scas
mov
dec
pop
sti
jno
in
daa
scas
stos
add
pop
and
in
scas
jge
inc
iret
lock
rcr
or
pop
mov
fsubrp
jb
jp
outsb
ljmp
sarb
add
xchg
popa
fdivl
and
jnp
dec
popf
fnstcw
mov
lret
mov
icebp
cmpsl
movsl
xchg
es
ficompl
into
inc
ret
test
lods
pop
fisttpll
xchg
stos
add
mov
xchg
mov
std
xchg
push
in
mov
pop
pushf
xor
xchg
jbe
or
and
js
mov
sub
xor
cmp
call
outsb
popf
mov
call
push
mov
roll
cmp
sbb
cmc
dec
mov
js
sbbl
xor
outsl
sti
imul
pop
lret
push
cli
pop
gs
pop
fs
ret
mov
mov
inc
in
or
out
in
mov
mov
push
insl
add
enter
jle
mov
or
jb
inc
movl
push
dec
push
mov
in
mov
call
jno
shrl
stos
in
nop
xchg
adc
cmp
cmpsb
out
jae
cmp
ds
jo
xchg
jmp
pop
xor
jmp
out
aaa
clc
dec
mov
cmp
mov
aad
add
cltd
mov
fistps
repz
leave
out
sahf
ficoms
and
iret
mov
push
test
mov
adc
mov
loop
adc
repnz
sub
xor
or
leave
rcl
add
pop
pop
add
test
cmp
push
mov
push
cmp
adc
pop
lock
cmp
pop
xchg
ficoml
push
pusha
cmpsb
testl
mov
pop
popa
lock
addr16
test
test
mov
push
xor
cmp
sub
sub
scas
jecxz
add
or
xchg
cwtl
ret
not
imul
jmp
cmpsl
in
add
mov
adc
ja
xor
lret
jle
decb
add
cmp
push
dec
fbld
pop
jnp
out
das
pop
and
push
mov
xchg
les
adc
call
inc
fmull
dec
aam
cmp
clc
rolb
pop
movsb
inc
ret
adcb
xlat
xchg
push
mov
xlat
arpl
dec
cmp
xor
cmp
mov
xorl
mov
rolb
lods
insl
inc
hlt
sbb
fwait
add
cmpsl
bound
push
movsb
push
adc
iret
mov
aam
adcl
cmp
pop
insb
imul
or
das
jl
xor
out
or
fnstcw
add
loopne
fs
sbb
das
mov
jmp
inc
pop
mov
dec
pop
mov
je
mov
rcr
xchg
pop
loope
xlat
dec
mov
loope
xchg
sbb
fstl
jno
pop
mov
mov
aaa
xor
mov
in
push
push
data16
inc
subl
add
jns
cwtl
jp
jno
icebp
push
std
jmp
int
xchg
jg
mov
pop
rcrl
or
lds
mov
dec
xor
add
dec
adc
sarl
adcb
pushf
jecxz
pop
cmp
lock
imul
jbe
popf
or
mov
mov
mov
mov
add
pop
lahf
jns
cmp
xchg
aam
popf
mov
mov
dec
inc
push
sbb
xor
pop
dec
hlt
xchg
das
sahf
or
add
int
pop
outsb
mov
adc
data16
cmp
jnp
add
xchg
jecxz
popf
insb
sbb
dec
xchg
shl
push
mov
add
repz
sbb
inc
xor
stc
fsubl
iret
lret
mov
xchg
push
inc
inc
jo
inc
in
sbb
jmp
test
setbe
xchg
cmp
loopne
call
imul
mov
ds
sbb
mov
dec
out
mov
push
ljmp
addr16
xchg
sti
aad
pop
sahf
and
addl
inc
sbb
push
fmulp
dec
iret
push
adc
aad
sti
ror
mov
int3
es
insl
into
call
mov
outsb
jmp
std
insb
dec
setno
inc
call
fistpll
insl
jmp
and
aad
ja
xor
ljmp
imul
negb
jbe
shll
jl
jne
inc
out
mov
stc
cld
adc
pop
adc
sub
xorl
fdivl
stc
repz
xor
imul
push
dec
mov
aaa
add
daa
pusha
xlat
mov
imul
fisubrs
stos
daa
jae
rcrl
mov
out
jle
repz
jmp
and
sbb
dec
addr16
pushf
out
jne
pop
mov
fistps
imul
xor
xchg
std
mov
mov
in
cmp
pop
in
out
jmp
call
xchg
sub
add
adc
in
push
sub
mov
sbb
cmp
in
outsb
dec
rcll
adc
leave
mov
push
sbbl
mov
mov
mov
lock
bsr
ficompl
pop
add
stc
sub
out
xchg
mov
nop
mov
and
adc
add
cmpsl
xchg
jmp
pop
daa
cltd
ret
cmp
jno
push
stc
insb
adc
pop
cmpsb
inc
and
push
inc
ds
xor
gs
xlat
jbe
jb
mov
adc
repnz
lods
add
and
rcrb
shll
in
add
xor
pop
cld
jge
mov
add
add
or
push
push
sbb
and
pop
fisubs
xor
inc
es
mov
or
push
bound
mov
adc
mov
lods
xlat
xchg
jb
mov
jge
adc
mov
sbb
std
pop
insb
jmp
jmp
inc
inc
test
mov
aaa
or
fucomip
xor
push
outsl
std
movsl
mov
xor
into
movsb
dec
out
pop
xchg
testb
pop
adc
add
and
xchg
shll
pop
pop
jo
scas
mov
and
mov
ret
mov
bound
or
repnz
bound
enter
mov
add
adc
mov
jecxz
cmp
stos
jnp
pop
pop
mov
cli
frstor
lock
cld
leave
or
inc
xchg
dec
in
sbb
ret
lret
push
test
mov
ja
shrl
into
mov
stc
icebp
xchg
std
mov
loop
fsts
in
push
repnz
add
mov
adc
lea
cmp
les
sub
inc
notb
xchg
sarl
or
mov
sub
cltd
lahf
adc
mov
in
rolb
into
mov
mov
xorl
push
es
dec
js
mov
movups
xor
cmp
repnz
std
push
ficomps
pop
or
cmp
add
mov
adc
mov
loope
int
ss
out
cld
js
popf
stos
outsb
out
rol
fisttpl
ds
jg
add
sub
orb
lcall
sub
inc
push
fdivp
nop
shll
lcall
pop
jmp
add
imul
fisubl
jge
dec
mov
adc
adc
fdivrs
sti
or
sti
mov
hlt
shrb
or
aad
outsb
mov
jne
rcrb
hlt
das
mov
repnz
lahf
insb
mov
push
orb
loopne
push
sbb
fmuls
fildll
in
mov
addl
sbb
in
sbb
fistpll
cmpsl
arpl
pop
std
cmpsl
lret
cmp
push
lods
ret
sbb
pushf
xchg
xchg
in
mov
and
pop
leave
cmp
nop
rclb
fs
cmp
inc
out
mov
test
xor
in
ds
mov
cmp
push
mov
cld
xlat
mov
push
and
ja
sbb
das
aas
jbe
aas
arpl
or
pop
or
push
adc
scas
shlb
insl
push
ds
xchg
insl
movsb
cwtl
mov
sbb
test
and
xchg
pop
sti
or
negl
sti
adcb
pop
xrelease
out
sti
pop
xor
cmp
ljmp
mov
mov
jmp
shlb
enter
push
push
ficompl
dec
stos
or
test
popf
xchg
push
mov
scas
lock
and
jmp
xor
sub
testb
js
mov
xchg
jle
cmp
push
pop
bound
aad
aas
fsubl
jb
mov
mov
aas
test
shl
pop
jp
mov
sbbl
or
aad
sbb
jbe
mov
or
test
or
mov
rcr
mov
push
movhlps
ljmp
push
mov
jp
inc
mov
xchg
into
je
jge
outsl
in
test
repnz
ss
loopne
in
insb
repnz
pusha
sbb
aas
add
loop
lea
sti
add
inc
rcr
sub
adc
inc
mov
push
pop
xchg
fs
popf
pop
fs
mov
jne
jnp
pop
lret
pop
sti
dec
push
pop
insl
add
jecxz
pop
inc
push
jp
dec
xorb
idivl
int
mov
inc
nop
push
xchg
cmp
jp
clc
ja
in
adc
xchg
pop
mov
adc
cmp
aas
adc
ds
or
pop
dec
movsb
mov
nop
jmp
int
shr
xchg
cmp
fisttps
popf
sub
cmp
dec
mov
inc
push
mov
cld
outsb
inc
sbb
fcos
and
sbb
mov
push
and
jae
push
xchg
insb
xchg
mov
or
xor
inc
sub
sbb
or
push
imul
test
daa
ret
fsubl
mov
push
sbb
adc
loop
test
enter
shrb
outsl
mov
ret
ret
lret
shlb
shl
cmp
lods
or
in
fisttps
xchg
pop
repz
fisubl
or
mov
lahf
jo
jnp
repz
and
xchg
shll
mov
icebp
push
adc
pop
and
dec
jb
rclb
xchg
xor
test
enter
hlt
xchg
loope
push
fisttps
jnp
movsl
js
sub
mov
leave
cmp
jns
pop
jae
int
inc
xor
ficoms
jmp
out
loopne
sbb
mov
xchg
adc
mov
repz
mov
push
jno
mov
sti
or
repz
lods
xchg
push
and
or
mov
xor
iret
or
test
lret
out
push
in
sbb
out
scas
mov
xor
jp
cmp
sbb
in
inc
ret
sub
add
add
sub
gs
fnsave
stc
jp
cld
xchg
bound
lcall
xor
xchg
mov
lret
xchg
subl
push
clc
mov
sbb
clc
lahf
cmp
shl
and
mov
and
lock
ss
push
movsb
xchg
push
pusha
adcl
cmpsl
dec
pop
lock
mov
hlt
into
popf
and
mov
xchg
aaa
in
pop
mov
adc
jmp
dec
cmc
jno
fsts
les
in
mov
sub
lahf
fcomps
movsb
loope
xor
sub
sub
cwtl
stc
dec
jne
push
fcmove
jle
gs
jns
xchg
gs
pop
aad
push
dec
sub
test
lcall
test
repz
out
jno
xchg
and
jnp
sub
mov
pop
jmp
std
imul
cmpsb
call
cmp
mov
inc
pop
out
xlat
lret
rclb
add
jnp
in
cmpsb
fs
stc
out
call
or
push
adc
dec
add
xchg
add
out
in
push
mov
pop
or
lret
adc
xlat
or
in
xchg
fldenv
clc
daa
jle
daa
sbb
sub
lcall
sti
push
xor
lods
xchg
sub
xor
push
imul
add
push
cmp
mov
loopne
mov
jp
adcb
sbb
mov
aaa
call
xor
jle
mov
repz
sti
insb
addr16
cmc
shl
loop
cmp
dec
shrb
cmp
and
cmpsb
nop
rorb
sahf
ss
inc
push
inc
inc
mov
ss
fwait
ret
pop
in
xchg
cmp
pop
jmp
pusha
cmpsl
sar
mov
push
or
aaa
pop
sbb
mov
sbb
andb
mov
ficomps
shr
pop
push
dec
push
fs
add
jmp
shlb
mov
repnz
push
cli
xchg
icebp
aad
xchg
mov
cwtl
add
adc
cwtl
and
cs
pop
mov
out
jl
add
add
cwtl
out
rcr
pop
imul
and
in
mov
imul
jo
mov
pop
adc
mov
out
pop
mov
faddl
leave
jp
mov
shll
adc
or
sahf
lods
fmuls
xchg
push
inc
sub
in
andl
test
inc
fistpll
adc
fwait
pop
mov
mov
fiaddl
insl
inc
data16
mov
inc
lods
test
xchg
clc
mov
inc
fcomip
imulb
xchg
push
pop
cmp
aam
and
icebp
mov
out
xchg
mov
cmp
rstorssp
xchg
xchg
pop
xorl
ja
lods
xor
cmovno
imul
cmp
mov
iret
xor
mov
rep
add
fwait
sbb
jnp
mov
push
inc
adc
adcl
mov
aaa
xchg
idivl
out
push
popf
jae
mov
shl
repnz
std
cltd
stos
and
fsubs
jecxz
jae
mov
xor
std
mov
sbb
fstpt
loopne
jnp
mov
es
sub
popa
push
outsb
dec
stc
fs
adc
cwtl
xchg
aaa
mov
daa
inc
jmp
lret
add
rcrb
push
mov
imul
ds
jg
les
push
inc
or
or
outsb
ret
ror
and
jns
cmp
in
cmpsl
push
rcr
push
out
push
push
pushf
sarb
movsb
mov
push
fst
mov
sub
out
push
sbb
daa
sub
adc
sub
push
push
mov
mov
xchg
cmp
push
test
adc
bound
fidivrl
fdiv
cmc
push
aaa
nop
jnp
shrb
inc
in
mov
pop
int
loop
outsl
inc
fdivrs
push
sahf
push
insb
mov
jmp
push
movsl
mov
imul
lds
or
mov
xor
rorb
std
sarl
jecxz
push
testb
imul
std
add
push
and
daa
dec
clc
mov
imul
cmp
xlat
xor
or
jns
imul
icebp
int3
cmpb
jmp
or
jle
add
repz
outsl
xchg
adc
cld
fisubrl
inc
push
xchg
push
pop
incl
and
sub
shll
inc
or
pop
cmc
mov
lock
nop
fdivs
in
mov
xor
inc
xor
xor
mov
fsts
xchg
jnp
xchg
rcrb
imul
stos
dec
data16
inc
dec
lret
jno
stos
xor
or
sbb
jl
pop
adcl
push
push
rcrl
jmp
les
cmp
inc
dec
xchg
imul
mov
jno
mov
cmpsl
xchg
je
in
insb
pop
lret
pop
sub
pop
ficompl
mov
stos
scas
insl
add
lret
jle
mov
dec
loopne
lret
or
sbb
shlb
mov
pushf
pop
and
lcall
sahf
sbb
xchg
insl
inc
jge
add
and
pop
lds
les
jecxz
sub
dec
pushfw
lret
xor
test
xchg
jae
pop
xor
into
jge
pushf
stos
mov
inc
push
mov
push
sbb
pop
dec
pshufw
pop
xchg
inc
imulb
lock
or
add
mov
cld
aaa
sbb
daa
jecxz
data16
mov
movmskps
cmp
je
das
xchg
push
int
sbb
add
mov
loope
lock
xor
test
add
pop
mov
jge
dec
fsubs
jp
pusha
imul
fistl
push
out
sbb
push
out
inc
sahf
mov
test
lcall
inc
div
pusha
call
cld
xor
insb
clc
xlat
mov
cmp
mov
loop
cmp
and
jl
add
ss
outsl
adc
push
jae
xchg
sti
xlat
cmpsl
inc
stos
sti
pop
cmpsb
adcl
in
orb
cmp
out
in
test
imul
cmpsl
es
movq
stc
push
aas
xchg
pop
mov
and
ret
mov
mov
mov
xchg
xlat
mov
test
test
jge
lcall
dec
cmp
cmp
outsl
pop
push
cmp
movsb
outsl
mulb
jmp
sub
sub
inc
fidivrl
jge
xor
jle
jmp
add
and
pop
jle
add
fst
test
in
call
add
les
fsubs
test
push
xor
lods
add
mov
xchg
pop
adc
fsub
add
pop
outsb
mov
sub
xchg
xchg
idivb
addr16
mov
jg
inc
inc
nop
adcl
and
pop
jp
clc
sbb
push
sbb
les
inc
cmp
mov
cmp
inc
adc
mov
lds
mov
add
jmp
inc
push
push
ja
push
mov
icebp
lods
add
or
xlat
sbb
das
divb
inc
idivl
out
dec
pop
pop
jbe
cmpsb
dec
push
sub
pop
scas
test
cli
fcomps
test
leave
js
stos
mov
sub
jg
mov
pop
and
sbb
push
or
addb
int3
mov
push
nop
dec
and
dec
out
sbb
jp
jns
movsl
stos
repnz
fldt
rcrl
jp
pop
inc
inc
push
pop
cmpsl
data16
fs
or
stc
sbb
movsl
cmc
xlat
mov
sub
pop
lcall
jbe
in
leave
mov
sbb
mov
stc
movnti
mov
cmpb
mov
mov
les
imul
pusha
push
or
mov
or
dec
fcompl
mov
movsb
fdivrs
lcall
fistpll
inc
mov
xchg
imul
out
xor
sbb
jg
xor
inc
push
mov
pop
jmp
fisubl
jmp
in
mov
mov
mov
push
lea
in
inc
lods
add
jp
jmp
fisubl
xchg
or
inc
jecxz
movsb
xor
xor
sbb
sti
movsl
aam
fsts
sub
and
dec
mov
add
and
movsb
push
clc
loopne
jecxz
hlt
and
lds
test
mov
mov
push
inc
lods
and
aaa
arpl
mov
aad
fistl
shll
sbb
mov
inc
shll
and
repz
in
aaa
fxch
mov
shrb
or
out
pop
ljmp
and
in
leave
sbb
dec
xchg
stos
pushf
fisttps
shl
mov
sahf
mov
and
xor
cltd
ss
mov
mov
je
btc
loope
xlat
xor
mov
push
nop
xlat
stos
mov
call
shrl
mov
flds
mov
sahf
out
fcoms
shrl
sub
inc
mov
test
mov
dec
lret
jle
lock
in
jne
fs
ret
pop
repnz
dec
xor
bts
ret
int3
mov
nop
push
jle
add
push
sbb
jmp
scas
scas
lahf
test
dec
mov
pushl
mov
dec
dec
decl
cmp
and
adc
int3
in
lods
and
pop
leave
into
sti
sbb
add
jb
lock
sub
push
xchg
xchg
fbld
out
push
bound
in
cmp
adc
or
xchg
lock
fistpl
mov
xor
dec
adcb
jl
sahf
out
xor
lahf
ljmp
cmp
sub
sar
neg
mov
add
daa
jg
mov
xor
pop
nop
cmp
dec
inc
gs
push
cmp
test
mov
mov
ss
ja
out
sbb
sar
orl
jne
mov
movsb
mov
and
data16
enter
mov
xchg
inc
dec
movsb
inc
push
aad
xchg
xchg
bound
or
call
leave
add
mov
and
sbb
dec
out
dec
loope
jle
jg
and
insb
call
lret
fwait
xor
pop
mov
mov
fimuls
jl
mull
aad
movsb
mov
pop
push
les
jge
cltd
push
ljmp
test
mov
daa
jg
xchg
out
push
scas
pop
add
repz
cwtl
sub
mov
inc
or
mov
sub
and
in
inc
addl
xchg
repnz
fldl2t
sbb
shll
lods
and
rcr
inc
insl
lock
into
add
inc
and
xor
push
fsubs
cmp
jmp
cmp
pop
mov
stos
mov
xchg
aaa
addr16
gs
dec
sbb
out
adc
insb
push
cltd
mov
mov
sar
pop
repz
shlb
leave
stos
xor
mov
dec
lcall
inc
in
fidivrs
mov
push
clc
repz
repnz
out
jb
call
and
cmp
daa
jg
add
or
adc
arpl
adc
ret
xchg
cmp
fisubrl
bt
rorl
loope
pushf
scas
outsl
popa
aam
popf
xor
mov
xchg
repnz
loopne
mov
jge
jb
lea
test
repnz
pop
out
jbe
ss
jp
lods
test
mov
cltd
insb
cwtl
sub
pop
adc
fscale
adc
outsl
fldpi
cmp
jns
stc
xchg
js
std
aas
jge
jge
cmp
ficompl
mov
xchg
test
aad
insb
ja
call
and
pop
lahf
dec
dec
fildl
lea
jbe
mov
inc
or
adc
fwait
js
xorl
xor
loop
cmp
jo
sbbl
adc
sub
jno
and
add
stos
mov
inc
dec
push
hlt
and
mov
mov
adc
or
scas
xchg
cmpsb
loopne
jnp
adc
ret
push
stos
sub
inc
mov
out
or
mov
inc
or
fistps
jge
sbb
lods
xchg
sub
test
xchg
jle
push
xchg
lcall
add
inc
mov
or
sub
fnstenv
xor
xor
data16
cs
in
dec
das
icebp
mov
rcll
nop
jecxz
dec
ss
lcall
jnp
mov
movsb
fdivp
out
shlb
sub
pop
or
pop
mov
loop
sti
pop
rolb
call
outsb
outsl
mov
push
nop
jg
cmp
push
dec
in
movsb
out
adc
mov
or
mov
push
mov
push
adc
mov
dec
andb
lret
das
and
or
out
push
adc
movsl
hlt
xchg
ljmp
cmpsb
push
mov
out
idivb
mov
inc
jle
cmp
push
and
in
jl
lock
aam
or
cmpl
iret
push
ja
inc
cs
adc
xor
icebp
pop
subl
jge
adc
fwait
lods
leave
adc
jecxz
into
jle
mov
lcall
outsb
adc
das
pop
xchg
sbb
daa
sbb
mov
mov
lods
xchg
icebp
cmp
pop
in
jle
jp
lea
bound
ret
or
mov
mov
aam
add
cmp
test
mov
icebp
sbb
xchg
cmp
jl
mov
mov
mov
repnz
push
push
pop
loope
xchg
sahf
repz
insb
lcall
and
stos
or
sbb
es
mov
push
pusha
push
inc
icebp
cmp
inc
or
inc
int
pusha
out
mov
dec
mov
mov
inc
push
cmp
outsl
mov
idivb
push
stos
mov
jnp
mov
mov
lret
jmp
mov
pop
movsb
je
xchg
sbb
mov
inc
ror
add
push
in
out
jb
and
jecxz
mov
jno
call
dec
add
mov
adcb
cwtl
ja
out
daa
movsb
imul
add
push
pop
jb,pt
mov
pop
cwtl
sbb
and
mov
cmp
and
add
stos
push
test
cmpsl
sbb
and
sub
dec
ds
iret
aas
cmpsl
add
adc
pop
repz
stc
inc
mov
adc
mov
cmc
repz
imul
mov
leave
sub
cld
xor
jb
imul
mov
jns
cmp
daa
mov
adc
hlt
inc
dec
sbb
fwait
pop
outsb
sbb
mov
int
les
jno
inc
rcrl
push
in
adc
clc
mov
in
aam
sti
dec
cmp
sbb
xor
lock
aad
inc
data16
jnp
mov
clc
lret
push
push
adc
shlb
xchg
jl
out
xor
imulb
das
mov
mov
jl
rcrl
int3
jg
testl
add
movsb
lret
add
out
adc
inc
js
sub
mov
lock
pop
shlb
test
fsub
xchg
push
jg
sub
cld
inc
inc
pop
das
cmpsl
push
loop
sbb
mov
mov
popf
lods
mov
lds
ljmp
jno
in
lret
add
lret
xor
push
iret
xchg
and
imul
testl
stos
jp
inc
ss
mov
scas
push
xchg
sub
sub
jbe
lods
test
ja
xor
mov
iret
jecxz
xor
cwtl
repnz
adc
scas
cmp
jbe
bound
test
jge
add
sti
push
je
xchg
leave
out
adc
jns
lahf
subb
mov
push
xchg
bswap
xchg
ss
xchg
lods
int3
idivb
rorb
push
xor
or
mov
pop
cmpl
and
inc
jne
push
leave
jne
or
xchg
cltd
hlt
jle
jecxz
push
and
jle
xor
pusha
loopne
stos
je
sub
xor
bound
jle
in
int3
andb
pop
clc
xlat
cmpsl
xchg
jmp
lahf
hlt
xor
mov
xor
movsl
jge
adc
aam
outsb
repnz
mov
or
aas
test
mov
mov
pop
xlat
je
xchg
mov
mov
fidivrl
mov
aam
inc
ret
mul
add
mov
in
dec
out
nop
and
aad
push
jnp
mov
xchg
pop
push
sub
jmp
out
sbb
add
add
adc
scas
mov
xchg
shrl
mov
xchg
cltd
xchg
outsl
xchg
push
push
mov
inc
jge
jno
loope
aam
sbb
mov
push
fsubs
cld
repnz
xchg
mov
cld
mov
testl
inc
fdivs
cltd
lahf
sar
ret
or
xchg
leave
ljmp
cmp
popf
add
fs
pop
in
xchg
adc
out
dec
inc
aad
mov
pop
and
jle
jno
inc
mov
sub
test
push
std
imul
loopne
or
mov
jne
or
sbb
mov
cmc
je
sbb
sti
lahf
cmp
arpl
push
and
xor
mov
int3
sub
lret
xor
imul
fs
scas
jp
bound
scas
mov
popf
loope
std
test
test
pop
leave
gs
lret
jp
mov
lods
int3
xchg
icebp
jns
test
test
nop
jp
and
imul
jl
or
and
mov
mov
ss
stc
fsubrl
adc
icebp
mov
call
and
test
cmp
lret
pop
mov
pop
repz
mov
mov
in
shl
stos
inc
sub
shl
fildll
xchg
cmp
jno
out
mov
fisttps
test
cmp
xchg
push
push
lods
insb
mov
mov
fildll
subb
jno
lods
or
repnz
pop
pop
dec
xchg
adc
pop
test
lods
sub
jl
mov
sbb
mov
xor
iret
jecxz
jg
jg
sub
loopne
sbb
xchg
dec
push
int3
sub
sbb
mov
mov
popa
sub
test
sbb
rcl
inc
gs
cmpsb
roll
fucomip
arpl
dec
test
test
mov
mov
fcomi
mov
divb
sub
push
sbb
mov
mov
ret
test
add
mov
mov
cmp
mov
mov
mov
lcall
es
push
sbb
bound
dec
cmp
call
fs
mov
jmp
loope
xchg
jle
test
cmp
xor
adc
test
shl
and
xchg
jne
stc
sub
sub
mov
adc
jle
push
or
mov
pop
dec
imul
inc
repnz
call
mov
lds
fcmovnu
bound
mov
inc
xor
aam
add
ret
test
je
add
and
sbbl
ret
lds
subb
gs
std
stos
test
lcall
in
out
pop
shr
jp
cmp
shrb
pop
popa
sahf
divl
sbb
in
xchg
outsb
cmp
out
sub
aam
pop
push
add
push
jns
adc
dec
nop
in
push
enter
xor
sub
xchg
fmulp
or
mov
stc
pushf
mov
loop
scas
lret
sub
out
xchg
lcall
lods
adc
arpl
bswap
adc
adc
or
out
faddl
xchg
or
mov
fmull
mov
xor
mov
lods
aam
fdivl
clc
mov
mov
sub
imul
push
cli
xchg
mov
es
mov
jo
and
aam
xor
pushl
mov
sbb
cs
stc
aas
dec
and
jl
cltd
mov
fcoml
push
or
dec
outsb
xor
or
bound
sub
bound
jne
jo
add
les
addr16
leave
bound
pop
shlb
pushf
enter
push
xchg
add
mov
jbe
sub
inc
xchg
pop
jmp
cli
mov
mov
test
ret
xor
lret
mov
pushw
sub
inc
repnz
out
inc
xchg
cmp
aaa
and
repnz
test
daa
and
push
test
add
pop
ret
push
mov
cmpsb
mov
or
std
stos
sbb
dec
ret
mov
fyl2x
push
cmp
lods
push
in
pop
cmp
mov
jno
in
jge
lret
test
pushf
and
fisttpll
lods
pop
arpl
xchg
call
loopne
sti
ds
shr
out
lods
jecxz
ds
jnp
push
jo
mov
adc
add
push
js
xlat
iret
enter
dec
adc
inc
mov
dec
pop
push
add
lock
cwtl
mov
out
sbb
xor
sbb
cs
jnp
mov
dec
in
addr16
jecxz
das
and
out
or
test
cli
aam
xchg
scas
mov
dec
dec
stos
imul
pop
icebp
subl
andl
dec
sub
daa
add
in
dec
mov
and
fildl
pop
popw
cmp
frstor
scas
test
pop
jno
pop
or
mov
and
call
test
inc
arpl
mov
loopne
inc
inc
inc
popa
mov
or
adc
test
shll
outsl
mov
xchg
lret
dec
mov
pop
into
js
popf
and
pop
mov
sub
mov
and
cmp
xchg
mov
cwtl
pop
pop
jp
test
out
mov
enter
pushf
jmp
lods
fimuls
ja
pusha
cmp
je
sbb
jle
or
pop
inc
jl
stc
jnp
js
inc
jecxz
in
cmpsb
out
out
enter
adc
push
fs
jb
fs
out
or
jbe
pop
cwtl
mov
and
sub
dec
jmp
out
xor
mov
pushf
ret
xor
or
xor
movl
and
mov
insb
pop
ljmp
das
push
add
mov
out
sarl
insb
jp
fadds
adc
or
inc
mov
sti
sbb
dec
mov
jmp
and
add
scas
push
pop
outsl
adc
jecxz
fistpl
pop
mov
xor
fwait
inc
push
add
idivl
in
mov
negl
add
mov
test
xchg
aam
pop
inc
or
jnp
mov
out
es
jb
out
jmp
push
add
sub
jne
jge
jb
in
fimull
sub
adc
jecxz
rol
lods
and
push
xchg
mov
loopne
pop
xchg
in
cmpsb
and
inc
into
xor
cmp
adcb
stos
jae
repz
fucomip
xchg
ret
repnz
pop
mov
enter
pop
xor
ret
loopne
inc
jo
cmpps
and
mov
out
arpl
cmc
sbb
jns
adc
aas
xchg
out
rcrb
jmp
clc
mov
and
or
pusha
fs
sub
ret
aas
sub
fwait
sub
xchg
dec
or
getsec
mov
mov
lock
or
arpl
and
fistpl
mov
repz
xchg
iret
cmp
daa
mov
addr16
lret
popa
pop
cltd
lret
mov
sub
and
outsl
jmp
add
cmp
dec
idivb
lcall
lahf
cmp
xor
in
mov
adc
inc
fdivrs
pop
inc
mov
jo
cwtl
lahf
mov
jl
das
das
rcl
incb
insl
test
out
push
mov
mov
and
loopne
gs
inc
xchg
lret
jne
pop
jecxz
mov
bound
les
incl
mov
mov
mov
jnp
add
cmp
mov
push
daa
in
xchg
aas
enter
mov
je
sub
lcall
add
or
and
movsl
pop
add
cs
dec
fdiv
jmp
popa
jns
sub
cmpsl
scas
push
sub
adc
xchg
xchg
mov
push
stos
xchg
push
lahf
and
adc
sbb
fcmovne
mov
lret
aam
cwtl
push
sahf
popf
in
or
out
scas
fsubrl
xlat
aas
mov
xor
jmp
sub
ret
enter
adc
out
outsl
rcrl
fistpl
cmc
out
repz
jbe
push
xchg
test
inc
imul
loope
xor
adc
adc
test
outsl
insl
mov
inc
push
inc
stc
sub
push
push
push
lds
nop
cmp
scas
lahf
or
sub
dec
and
lods
pusha
rcrl
test
pop
push
push
adc
out
jecxz
clc
fs
fwait
inc
cs
imul
add
popa
je
lds
dec
pop
leave
aaa
jns
mov
adc
push
movb
mov
mov
flds
xor
invd
and
pushf
in
add
stos
imul
cmp
xchg
mov
pop
and
hlt
outsl
ja
add
push
das
pop
jae
and
cli
push
out
into
xor
push
lods
cmpsl
repnz
sahf
mov
stc
mov
xchg
pop
pop
int
lahf
mov
int3
int
sbb
adc
in
pop
xlat
jb
cltd
inc
xchg
mov
or
std
jae
ficoml
fnstcw
adc
inc
xchg
hlt
cli
fiaddl
adc
inc
mov
xchg
xorl
sub
adc
add
mov
xor
xchg
sub
lock
cmp
mov
ret
es
cmp
and
addr16
and
and
xchg
xchg
sbb
test
imul
add
nop
push
pop
subl
roll
insb
sarb
sbb
or
xor
lea
test
adc
fucomi
mov
mov
les
fildl
repnz
test
sub
and
mov
mov
xchg
xchg
or
push
daa
xchg
adc
rcrb
testl
pop
cmp
xor
jne
cmp
and
inc
mov
push
sbb
dec
push
push
test
jmp
xlat
setns
dec
ljmp
imul
add
test
lea
or
mov
xor
sub
pop
hlt
push
dec
push
pop
movsb
xlat
cli
push
sar
add
jo
pushf
sti
aad
gs
xor
add
aas
rolb
mov
add
jge
xor
sarb
mov
clc
mov
hlt
aas
movups
jg
xchg
xchg
insl
adc
ret
movsb
mov
pop
jecxz
test
mov
mov
out
ss
mov
iret
loopne
mov
pop
addr16
cli
xchg
inc
cmp
dec
mov
mov
popa
add
pusha
scas
in
push
inc
in
pop
leave
push
mov
adc
hlt
inc
mov
push
xor
xchg
lock
in
or
mov
int3
cmp
in
push
scas
dec
hlt
adc
sbb
and
mov
add
and
push
mov
data16
push
sbb
push
push
sbb
adcb
imul
mov
pop
cltd
orl
pop
jg
xlat
ficoms
fmull
sbb
mov
adc
sahf
jl
add
xor
cmpsl
sub
push
insb
dec
ss
sub
lret
into
aam
mov
sarl
shrb
cs
cltd
pop
adc
mov
fistpll
and
pop
and
jg
jbe
dec
lret
mov
jp
adc
imul
das
adc
mov
and
frstpm(287
push
ljmp
lods
mov
cmpsb
adc
addb
push
leave
mov
lea
sbb
pop
jge
xchg
movsb
addr16
dec
dec
pop
sahf
aas
movsb
dec
icebp
insl
mov
movsl
inc
mov
sahf
mov
sbbb
stos
xorb
or
nop
xchg
loop
imulb
cmc
adc
fwait
xor
push
xchg
mov
jne
cmp
lret
sub
hlt
jbe
jge
push
repz
daa
decb
pop
mov
es
and
cltd
pop
paddq
xchg
mov
pop
push
pushf
pushf
xchg
bndstx
push
add
push
jmp
dec
push
cmp
pop
lods
sti
fiadds
aad
mov
mov
jbe
and
xor
xor
inc
jns
cmp
vmovapd
adc
add
mov
cwtl
mov
jno
js
aas
mov
cmp
mov
inc
fistl
fstpt
and
dec
insl
and
daa
push
into
popf
pop
add
sbb
cmpl
jg
pusha
sbb
mov
frstor
xlat
fcmovne
sub
cmp
outsl
push
mov
xor
mov
lahf
sahf
test
stc
mov
mov
lods
mov
shl
xor
ret
jbe
clc
fxch
shrb
pop
mov
pop
add
xor
mov
jp
pop
or
in
mov
fmull
xchg
or
sub
aad
dec
loopne
xchg
mov
andl
push
lea
inc
xor
movsl
pushf
adc
push
mov
lcall
fs
filds
jb
es
and
xchg
loope
in
xchg
xor
scas
test
mov
adcb
pop
testb
in
push
das
push
sub
insb
decb
aad
xchg
jae
imul
ror
and
jae
jno
pop
pop
push
push
in
add
or
cli
inc
mov
fwait
stos
dec
test
cmpsb
jg
inc
clc
pop
repz
fnstcw
mov
cmp
mov
inc
cs
sub
push
sub
sub
outsb
fdiv
lods
push
sbb
es
mov
and
lods
fstpl
xorl
test
enter
jl
xchg
and
dec
arpl
mov
or
xchg
adc
mov
mov
add
mov
movsb
clc
add
push
mov
xchg
jno
sub
cltd
pop
jl
stos
orl
movsl
cli
sbb
cmp
call
jl
frstor
fildl
pop
lods
adc
xchg
clc
cmp
adc
es
in
pop
shr
ja
pop
rcr
ret
sub
sub
lret
and
outsb
dec
xor
in
in
adc
lea
adc
jbe
int
lods
loope
pop
movsl
imul
mov
sti
call
imul
jp
xchg
adc
or
fdivrp
sarb
add
add
pop
xor
dec
cltd
dec
scas
jno
mov
call
xor
mov
push
fistl
iret
mov
stos
jnp
and
inc
sub
shl
sbb
add
insb
mov
iret
in
clc
jl
push
add
andb
xor
add
push
jmp
sub
ret
pop
clc
push
outsl
les
repz
fidivrs
pusha
test
xor
ss
jmp
stos
ret
imul
jnp
fidivl
je
sbb
xor
sub
pusha
scas
jp
test
or
ret
inc
daa
int
adc
call
pop
cmp
nop
outsb
outsl
inc
lock
pushf
daa
and
push
dec
inc
into
imul
add
test
pop
das
dec
jge
subb
lea
xchg
mov
lock
out
dec
mov
in
xlat
dec
test
test
jne
subb
xchg
les
out
xor
mov
push
rcrl
fidivrs
pop
pop
jno
dec
ds
xor
or
mov
pop
cli
fnsave
ja
cs
pop
iret
pop
push
mov
sbb
shl
les
fmull
and
jo
stc
pop
int3
clc
es
out
add
das
leave
inc
push
or
mov
pop
mov
or
xchg
mov
outsl
in
mov
pusha
iret
movsb
mov
sbb
xchg
andl
and
and
push
and
andl
xor
int
adc
push
ret
push
rcrb
jmp
mov
adc
dec
fisubrl
stc
jo
dec
xlat
es
loopne
or
hlt
lock
sub
ss
cmp
addr16
shlb
adc
mov
imul
xlat
xor
ja
jmp
push
mov
push
addr16
out
shrl
out
or
ja
je
mov
and
sahf
roll
stos
add
pushf
push
xchg
test
mov
jg
stc
xor
sub
loope
push
inc
fsub
pop
and
inc
popa
ss
movsl
cmc
inc
dec
repnz
stc
and
push
loop
adc
pop
add
cmp
aaa
push
cmpsb
mov
inc
mov
xchg
fildll
pop
push
xchg
lret
in
xor
jl
daa
out
xor
notl
into
lahf
gs
push
lret
and
mov
ss
mov
mov
adc
fcomp
sub
jge
adc
cld
testb
fbstp
pop
dec
fsubrl
cmp
je
popa
incb
aas
rcr
pop
jnp
repz
xchg
sbb
loope
sub
lea
mov
in
ss
pandn
mov
pop
push
fmulp
imul
movsl
cmp
jecxz
xor
mov
xor
scas
mov
cs
mov
cmpsl
mov
cmpb
bound
scas
ret
dec
stos
add
mov
addr16
mov
xor
scas
leave
mov
and
aad
dec
sub
mov
fcoml
mov
cmp
push
jle
stc
shlb
mov
fcoml
sub
adc
into
rorl
fs
sbb
outsl
xor
xchg
add
mulb
mov
and
jb
inc
xchg
lods
adc
mov
ret
sbb
std
mov
fwait
outsl
test
dec
fimuls
loope
xor
sahf
outsb
jmp
enter
pusha
ds
test
test
ret
push
jne
push
adc
lcall
sbb
out
in
cmpsb
xchg
or
xchg
enter
or
pcmpgtd
or
fldenv
pop
xor
xchg
pop
mov
pop
orb
inc
mov
pop
push
sbbl
push
dec
xor
addl
je
dec
mov
sbbl
andb
and
jge
and
insb
js
dec
repnz
pop
roll
shll
pop
adc
idiv
sahf
lcall
add
into
dec
je
rclb
lret
jnp
mov
int
movsb
int
sarl
adc
xchg
and
incl
aam
jbe
jg
push
pop
xor
pop
jnp
bound
mov
testl
and
push
mov
lret
fiaddl
cmp
adc
mov
jns
mov
mov
sub
int3
cmp
pop
ret
lds
add
xchg
lds
add
pop
and
push
daa
pop
mov
cmp
inc
loopne
and
jge
outsb
andl
loopne
pop
lock
hlt
cli
inc
dec
lahf
push
adc
fcompl
cltd
xor
ret
and
pop
xor
jbe
in
cli
push
lcall
mov
cmovp
fsubs
insb
xchg
daa
cmp
mov
ljmp
fs
dec
test
dec
inc
js
xlat
dec
add
add
nop
xor
inc
sub
cmpsb
shlb
movsl
adc
adcl
dec
test
inc
insl
or
and
imul
lods
test
fdivs
fisubs
gs
bound
inc
push
adc
cld
pop
sbb
hlt
mov
adc
push
cld
push
cwtl
cmp
cld
leave
out
adcl
test
sahf
ret
add
mov
pop
fs
push
fwait
out
hlt
and
add
sarb
orb
notl
sub
bound
cmp
jnp
add
enter
inc
sub
loopew
pop
jp
xchg
mov
dec
sub
sbb
jbe
and
call
push
push
jl
inc
jbe
lods
ljmp
xchg
mov
inc
sahf
mov
xchg
mov
pop
lcall
xchg
pop
pop
cltd
lret
movsb
ss
or
sub
pop
fcmovb
mov
mov
pop
or
ret
adc
sbb
push
sbb
inc
aad
ja
out
xor
add
xlat
imul
jge
mov
pinsrw
jae
mov
and
mov
fists
dec
sub
cmp
pop
iret
mov
and
in
in
out
fisubl
popf
fisttpl
popl
cmp
mov
stos
push
or
fsubrl
aas
out
in
js
in
icebp
mov
aad
dec
outsb
leave
sahf
mov
or
xor
stos
jp
or
cmc
dec
sahf
outsb
and
mov
jg
or
stos
shlb
gs
inc
dec
push
sti
cmp
and
push
outsb
xchg
jae
pop
pop
lret
add
iret
test
mov
or
sar
mov
cmp
in
pop
pop
je
cs
cld
adc
push
ret
notl
fidivrs
push
mov
add
leave
ja
repz
jbe
add
jne
fcomip
push
push
sub
sub
jb
imul
mov
mov
rcrb
fldcw
inc
fisubrl
repnz
mov
inc
aad
addb
jb
inc
cmp
jno
in
push
lcall
jg
mov
mov
out
in
lea
pop
cld
push
mov
pop
pop
push
inc
sbb
cmp
sub
stc
adc
pop
dec
pop
add
loopne
jecxz
lcall
mov
xor
dec
pushf
shlb
xchg
sar
add
xchg
cli
and
xor
jecxz
lahf
mov
out
fidivs
sbb
movsb
enter
adc
notl
in
test
bound
test
sbb
int
fwait
add
sub
dec
or
jge
push
cs
das
cld
and
mov
enter
sahf
adc
jg
mov
les
jmp
cmp
dec
lods
shlb
fisttps
push
push
addb
mov
dec
scas
jne
mov
popl
xchg
xchg
repnz
loopne
mov
xchg
arpl
adc
sub
sar
das
xor
test
inc
add
lock
stos
pop
jo
test
dec
mov
xchg
dec
push
mov
dec
adc
lret
inc
pop
js
mov
cmp
cld
jge
lahf
xor
in
mov
and
xchg
lods
xchg
add
dec
andb
xchg
mov
xchg
or
insb
in
sub
jecxz
inc
add
and
mov
stc
incl
rorb
ss
mov
adc
xor
sub
enter
add
out
stos
adc
mov
pusha
and
leave
cs
loop
push
fbld
xchg
dec
mov
pop
movsl
xor
mov
mov
sbb
jbe
or
lcall
pop
es
adc
fcoml
pop
daa
lret
mov
lcall
je
bound
jge
es
sub
push
mov
mov
cmp
jnp
inc
or
mov
shrb
and
repz
lret
cmpsl
rorb
jl
xor
aaa
loopne
sub
jnp
adc
stc
sub
sti
mov
pusha
scas
inc
xchg
negb
pushf
push
arpl
pop
sbb
adc
xor
xor
lds
jmp
add
pop
fsubrp
or
test
mov
add
scas
lods
xchg
fsubl
insb
push
lcall
pop
ret
mov
mov
push
arpl
ja
adc
mov
and
jnp
dec
and
add
aas
lahf
xchg
adc
inc
inc
dec
push
outsl
and
inc
or
loop
mov
stos
inc
sbb
je
repz
insb
sahf
add
fcoms
rcrb
sbb
fwait
adc
add
cld
mov
cmp
sub
enter
test
lcall
and
push
aaa
int3
cmpsl
insl
ljmp
addr16
filds
fldl
pushf
add
sub
das
pop
jnp
push
push
mov
mov
lea
lcall
popa
jns
mov
mov
cmpsl
rcrb
mov
test
daa
jns
fcmovnbe
sub
shlb
stos
lock
xchg
add
mov
push
lret
ret
xchg
arpl
inc
lea
ficomps
pusha
mov
xor
pop
sub
xchg
or
jne
mov
into
adc
and
push
mov
and
scas
arpl
leave
mov
lcall
mov
in
in
stos
addr16
push
pop
xchg
imul
xor
bound
dec
jb
shr
adcb
fldl2t
cltd
orl
mov
mov
aad
xchg
rcll
push
inc
imul
sbb
push
pop
or
sti
fcomp
pusha
pop
cmp
xchg
mov
test
jbe
push
popf
jno
loop
pop
mov
push
std
insl
into
push
add
lock
popf
imul
jae
sbb
fmull
sub
ljmp
mov
adc
jno
into
mov
dec
mov
in
lods
xchg
gs
cmp
in
das
cmp
adc
loop
push
pop
in
cmpsb
insl
pop
mov
lret
shrb
sarl
adc
and
xchg
sub
out
out
cmpsl
or
or
int
mov
add
xor
loop
inc
xlat
stc
pop
clc
out
in
jae
pop
sahf
cld
mull
andl
vmovlps
cltd
cli
call
jbe
loop
inc
jo
sbb
aaa
inc
xchg
lds
mov
stc
xchg
sbb
mov
cmp
clc
test
xorb
adc
ss
daa
mov
dec
cmp
mov
push
imul
sbb
out
cs
inc
sbb
lret
out
cmc
or
xchg
mov
test
adc
xor
pop
jnp
addr16
cmp
lret
bound
cmp
cmpsb
popa
movsb
push
or
data16
jbe
nop
fwait
std
sbb
sub
sub
mov
add
dec
icebp
ja
pop
sbb
cmp
int
cmc
pop
out
pop
and
fldenv
js
jno
test
xchg
out
dec
mov
dec
aam
ret
fcmovbe
iret
movsb
jg
fisubrl
shrl
test
mov
dec
iret
ficomps
lock
ds
push
mov
in
xor
loopne
dec
sub
pop
aas
xor
jns
lret
sarb
scas
jl
outsb
out
mov
push
mov
out
jg
xor
ret
test
cmp
dec
mov
jecxz
in
stc
push
test
subb
fcoml
dec
popf
sti
pop
mov
stos
and
jmp
push
add
inc
fadds
test
push
mov
iret
iret
hlt
push
add
cmp
cmpsl
mov
pop
xchg
jl
aas
lods
icebp
leave
adc
fs
or
stc
loope
pop
xchg
decl
push
arpl
pop
shlb
cmp
imul
repnz
in
test
mov
stos
addr16
xor
or
in
and
jge
in
sbb
dec
dec
pusha
jg
seta
cmp
mov
loop
and
rcr
mov
stos
pop
sub
add
bound
or
push
sbb
pop
dec
sbb
dec
cld
cmp
pop
cmc
mov
mov
cmpsl
mov
test
sub
inc
jg
icebp
inc
or
sub
mov
subl
mov
adc
lret
adc
mov
cmp
and
jmp
add
jns
js
fisttps
push
addr16
xor
mov
pushf
lret
xor
adc
dec
cli
dec
loopne
cltd
loope
push
out
push
push
jmp
ret
and
adc
xchg
sub
lods
out
mov
in
xchg
mov
dec
inc
cltd
cmp
jmp
ja
ljmp
in
xor
sub
xor
mov
jg
xchg
mov
mov
ds
or
add
jmp
fs
out
daa
test
and
add
aas
aam
lea
jg
jge
pop
sbb
clc
pusha
insl
stos
cmpl
ret
or
js
push
das
les
push
ret
mov
push
imul
repnz
cmpsb
gs
inc
sbb
xchg
lods
arpl
inc
add
fwait
cmp
sbb
rorb
pop
in
nop
loope
shll
shr
ret
cmpsb
push
xchg
sti
mov
fbld
mov
scas
roll
and
dec
and
ljmp
push
mov
ja
in
loopne
cmpsl
adc
popa
popf
cli
cmp
test
lcall
jne
je
ja
out
cmc
jl
inc
lea
fs
out
mov
fs
mov
sarl
adc
mov
lods
xorb
insl
hlt
mov
leave
shll
xchg
add
add
in
cmp
adc
cmpsb
jmp
sarl
into
xor
scas
sahf
sub
pop
sub
sub
repz
pop
and
xor
add
push
fnstcw
mov
fucom
sbb
cmpsl
or
jp
aad
test
cmc
or
xchg
push
clc
fs
sbb
adc
cmp
in
push
cmp
shrb
dec
jne
aam
jae
jnp
inc
pop
test
enter
jl
mov
test
test
fwait
push
push
call
or
push
shll
movsb
les
dec
push
jnp
in
mov
aaa
clc
jne
lret
inc
sub
lock
cld
gs
lret
add
leave
inc
scas
mov
ss
or
aad
enter
or
das
daa
jbe
rorl
loope
or
mov
cmp
fstpt
dec
push
mov
ret
or
dec
pop
mov
pop
mov
nop
pop
or
push
or
leave
sarl
js
xor
push
add
mov
mov
mov
or
int
push
push
sbb
push
inc
push
push
pop
jbe
scas
jge
outsb
pop
lds
push
push
sbb
cmp
mov
repz
cmp
xchg
int
pop
inc
adc
es
test
push
mov
xchg
test
lret
push
loop
pop
sub
test
mov
sti
mov
jp
adc
loope
push
pushf
xchg
and
add
mov
xlat
movsl
sahf
dec
mov
xchg
js
jmp
xchg
lods
dec
jo
jo
pop
push
into
dec
sti
ss
jg
pop
ds
lea
aaa
loop
dec
xrelease
or
push
pop
repnz
xchg
xor
mov
dec
aam
lcall
fsubl
and
in
mov
sub
inc
outsb
test
mov
stos
sahf
clc
mov
inc
in
mov
loope
dec
xchg
add
mov
cli
out
divl
adc
inc
fmul
pop
mov
and
pushw
push
out
sub
lods
imul
notl
jbe
das
aad
adc
jno
cmp
mov
lods
xchg
adc
mov
jnp
jge
fcmove
dec
outsb
and
jp
imul
movsb
fisttps
das
rorl
or
fnstenv
xchg
icebp
xlat
xor
stos
xchg
pop
leave
or
pushf
js
jle,pt
cmp
fdivrl
into
ljmp
jg
mov
repz
pop
outsb
add
inc
lahf
inc
ret
mov
xchg
dec
cmp
stos
inc
mov
push
and
sbb
es
iret
xchg
hlt
inc
pop
pop
jge
or
inc
loopne
pop
or
xor
stos
or
clc
gs
xchg
or
and
or
fidivs
cld
add
nop
test
outsl
xor
mov
std
mov
scas
data16
mov
dec
cmp
pop
das
mov
pop
adc
and
mov
jg
sub
lcall
fistl
xor
xor
enter
jge
add
lret
add
add
pop
fwait
movsl
adc
mov
adc
stc
xor
ljmp
xlat
sub
and
std
sbb
stos
xor
mov
adc
popf
shrb
int
cltd
leave
mov
xchg
lcall
xor
aam
outsb
clc
add
in
enter
std
xchg
cwtl
pop
mov
js
push
lods
arpl
and
popa
js
xorl
shl
loope
adc
inc
and
or
dec
mov
and
and
mov
sub
push
jae
aad
dec
mov
sub
test
inc
inc
mov
icebp
push
add
arpl
repz
mov
pushf
jge
mov
xchg
loope
ljmp
jge
andb
sub
add
fsubrl
xor
inc
dec
imul
push
popl
mov
aas
inc
out
nop
out
lds
sti
mov
sbb
addb
mov
add
xchg
aas
enter
cmc
fmuls
jl
stos
push
xchg
mov
outsb
aam
lret
mov
pop
gs
ret
cmpsl
xor
sub
jle
fmul
mov
stos
push
rcr
inc
repnz
loopne
cmc
pop
push
lahf
stos
data16
cmp
mov
nop
cli
or
mov
pop
shlb
and
mov
icebp
mov
mov
xchg
pop
push
clc
xchg
mov
imul
add
push
sub
pop
inc
lds
mov
std
push
out
sbb
mov
cld
es
pop
jo
cmp
dec
aam
adc
shlb
mov
insb
adc
fnstcw
ret
sub
aas
inc
sbb
inc
cmp
cmp
fcomps
cmp
push
fmuls
jnp
jle
incb
out
mov
addr16
mull
mov
inc
scas
js,pn
sub
out
sbb
mov
stos
xchg
jb
insb
and
cltd
cmp
xchg
push
gs
pop
jns
lds
inc
sbb
sub
jns
stc
dec
mov
push
mov
cltd
jg
jns
cmp
push
add
sbb
sub
scas
aaa
repnz
jno
fisubl
nop
xor
push
test
pop
je
neg
dec
sbb
add
pop
lods
or
xor
and
add
pop
add
inc
pop
aas
in
pop
pop
jle
mov
sbb
cmp
dec
imul
mov
sub
ljmp
icebp
data16
xchg
push
out
push
movsb
inc
xchg
lock
stc
pop
xchg
stos
add
imul
data16
pop
xchg
fidivl
sbbb
mov
sbb
into
adc
test
rep
sub
std
mov
pop
push
rorb
pop
push
aaa
rorb
xor
push
addr16
mov
cmpsl
cmpsb
dec
imul
aam
lea
add
xchg
or
mov
stos
push
xor
dec
pop
das
mov
sub
leave
fdivrl
inc
mov
imul
add
lods
lret
fdivrs
mov
call
pop
adc
test
repnz
pop
out
add
rcrb
movsb
test
sbb
sbb
inc
pusha
test
shlb
test
xchg
push
push
test
rcll
xchg
popf
sbb
cmpsb
and
fwait
call
add
or
cmpsb
jnp
addr16
mov
lcall
addr16
cmp
mov
negl
into
movsl
and
arpl
js
popa
std
lods
sbb
adc
xor
adc
mov
mov
int3
iret
jns
dec
push
mov
jg
loope
sbbb
xchg
lret
sub
out
addb
int
dec
adc
shlb
mov
dec
mov
sti
enter
sahf
sbb
cmp
push
pop
and
push
sub
push
rorb
fnstcw
and
sub
adc
jmp
repz
mov
rcrb
dec
insb
adc
sub
sbb
sbb
xchg
call
repnz
cmp
stos
xchg
fstpl
dec
sub
add
push
mov
sbb
inc
jmp
xor
out
pop
xchg
lea
sbb
testb
lea
ret
lock
pushf
fldcw
adcl
xchg
sbb
xchg
dec
adc
lretw
popa
push
cmpsl
maxps
nop
les
sub
sub
push
lea
push
out
pop
push
mov
aad
fs
jae
xchg
std
movsl
ds
mov
subb
jb
fcoml
mov
outsl
sbb
dec
xchg
aam
popf
sti
jbe
pop
out
addl
ficoml
dec
mov
mov
lret
xchg
or
mov
xchg
aad
aad
fdivr
pop
sbb
xchg
jne
iret
or
xor
popa
sbb
iret
pop
mov
cwtl
loop
mov
aaa
push
jbe
mov
jno
jnp
loopne
movsb
jne
pusha
and
or
test
test
or
outsb
xor
xchg
mov
or
xchg
push
lods
shl
pop
push
cwtl
jo
gs
and
int3
xor
icebp
or
repz
fdivl
daa
shlb
test
mov
pusha
mov
inc
clc
lods
xchg
loopne
sbb
sbb
mov
repnz
sbb
fstpl
pushf
in
jne,pn
push
insb
cmc
and
and
inc
mov
test
enter
out
sbb
enter
sbb
popa
fwait
lret
cwtl
cmp
popf
rcrl
adc
scas
pop
cwtl
push
lods
xchg
push
push
aaa
ret
add
mov
xchg
pop
pop
sbb
adc
test
fstps
mov
lods
sahf
xor
daa
cmp
iret
xchg
mov
imul
pop
enter
out
inc
jns
mov
cmp
xor
adc
jecxz
ret
push
notl
aam
sbb
sbb
mov
out
jo
fcomip
pusha
call
lods
sub
icebp
scas
imull
adc
sub
wbinvd
pop
int3
cmc
push
or
mov
enter
jno
int3
shrl
sbb
add
cwtl
rcr
or
emms
cmpsb
cli
js
adc
xor
pop
std
mov
lds
fs
scas
je
push
lcall
sti
movsb
jl
lock
cmp
mov
leave
js
div
inc
and
fsts
sbb
lcall
adc
inc
ss
jge
jne
inc
jno
xchg
pusha
mov
es
mov
fcmovb
fiadds
add
cmp
lret
dec
ljmp
sahf
cmpsb
repz
and
xor
ja
jg
insl
or
push
sbb
jae
mov
jne
xchg
or
pop
pop
cmp
jno
dec
mov
sbb
or
mov
imul
shlb
ficoms
inc
jbe
loop
jo
mov
int
cmp
cmp
xchg
cwtl
shr
jnp
adc
xchg
popa
xchg
fsubrl
arpl
aad
push
mov
daa
push
mov
fisttpll
cmp
or
out
ret
mov
es
pop
push
outsb
pop
aas
int
stc
lock
pop
and
aaa
insl
jg
std
inc
push
sub
out
xor
pop
pop
dec
mov
ficoml
push
out
xchg
lock
out
popf
sub
dec
jns
pop
mov
inc
mov
push
fnclex
and
std
jmp
and
and
stos
pop
pop
pusha
clc
xchg
repnz
lcall
push
insb
out
dec
js
sub
outsb
popa
add
xchg
test
in
push
fisubl
sbbb
sub
data16
ret
dec
mov
lea
mov
sti
das
inc
repz
and
clc
mov
cmp
sub
lcall
sub
mov
mov
lods
push
bound
mov
adc
mov
xchg
jb
xlat
mov
stos
cli
add
mov
dec
lcall
dec
ja
push
testl
cwtl
aaa
flds
jecxz
sbb
test
inc
arpl
ja,pt
push
clc
mov
adcl
out
aam
jmp
or
dec
and
lahf
stos
pop
adc
call
aas
lods
inc
es
fmul
in
nop
xchg
cmp
ljmp
cmpsb
or
adc
and
or
incb
dec
loope
and
data16
insb
divl
fwait
sbb
stos
push
iret
push
inc
fs
negb
or
dec
test
imul
cld
jbe
das
fnstsw
or
inc
les
notl
push
mov
lods
out
jg,pt
or
in
addr16
clc
inc
aam
loope
pop
dec
fsts
shr
fsub
and
movsb
mov
push
ja
in
mov
xor
xor
jmp
jb
into
adc
cld
xor
idivb
cmp
pop
out
dec
sbb
xor
cmc
shr
cmc
xchg
mov
insb
mov
subb
push
mov
mov
cltd
lcall
lods
sbb
adc
les
loop
sub
out
add
test
xor
xor
mov
mov
or
pop
mov
pop
mov
xchg
js
mov
mov
cmp
nop
lret
mov
dec
ret
movsb
jnp
and
mov
and
jne
xlat
mov
cmpsb
in
xor
dec
adc
pushf
mov
movsb
leave
decb
hlt
jp
push
cmp
fstpt
rcrl
xchg
repnz
fsqrt
pushf
cmp
fxtract
pop
pop
xor
repz
pop
add
out
shlb
pushw
js
cmpsb
lods
jge
lods
add
sub
xor
movsb
cmpsb
lods
xchg
push
fimull
mov
popa
mov
mov
mov
push
loopne
sbb
xor
mov
mov
sarl
mov
lahf
or
push
mov
add
outsb
dec
push
jb
mov
jg
xlat
mov
pop
adc
add
or
stos
xor
cmp
or
insb
mov
jp
lcall
scas
fldt
push
mov
jne
lahf
sub
mov
popf
xor
xchg
sbb
mov
addr16
xor
adcb
out
mov
xor
cs
icebp
sbb
imul
sub
das
or
out
in
mov
inc
divb
fucomip
arpl
cs
movsl
inc
loope
ret
adc
adc
adc
dec
jae
pop
daa
cmp
mov
xchg
push
and
outsb
mov
scas
out
ret
sarl
jp
xchg
xor
and
ljmp
divl
and
or
cmp
or
pop
in
mov
push
pop
xor
pop
dec
negl
aas
popf
das
dec
adc
xlat
pusha
out
int
inc
mov
xorb
sbb
jge
and
stos
scas
fistpl
push
addr16
dec
mov
dec
push
sub
jmp
std
ret
fisubs
lret
add
pusha
inc
jp
data16
cmp
sti
xor
or
push
sbb
shlb
movsl
push
adc
mov
sbb
jbe
cld
mov
cld
cmpl
scas
hlt
and
decl
sbb
test
ja
sbb
mov
hlt
sbb
mov
lahf
js
clc
or
fwait
loop
push
sbb
jne
scas
cmpsl
and
add
movsb
dec
sbb
and
movsb
xchg
movsb
out
mov
subb
mov
je
sarl
mov
shll
mov
xor
add
gs
pop
bound
sbb
adc
cmp
in
push
mov
jnp
push
xor
mov
int3
ds
pop
clc
fimuls
inc
mov
mov
push
xor
sbb
popl
fdivp
adc
or
icebp
dec
mov
stos
pushf
jbe,pt
lods
insb
pop
jmp
out
xor
icebp
sarb
out
cli
insl
sub
mov
aam
repnz
int3
lahf
pushf
adc
out
iret
mov
js
add
ds
mov
push
xchg
movsl
mov
mov
daa
loopne
inc
mov
loopne
xchg
leavew
sub
lods
jb
cmpsb
push
xlat
jge
mov
into
pop
inc
sbb
outsb
cs
cmp
mov
xchg
xor
fsubrs
dec
inc
sub
jb
lods
out
mov
fcmovnu
iret
pop
adc
and
push
mov
ret
idivb
push
shrb
cmpl
pop
int3
add
sub
into
inc
outsb
lods
jge
xchg
add
pop
jbe
push
mov
insb
xor
lret
xchg
rcll
sbb
mov
add
lahf
dec
scas
stc
xor
pop
pop
in
mov
mov
pop
mov
test
or
push
xor
adc
adc
clc
push
aas
stos
outsb
or
shll
gs
dec
sti
in
out
das
daa
inc
or
lahf
out
or
dec
dec
add
inc
lahf
inc
out
push
pop
push
outsb
mov
movsb
nop
add
testl
mov
fsubrl
test
stos
sti
push
rorb
xchg
pop
mov
dec
inc
popf
cmp
adc
jle
mov
push
or
and
cmp
dec
mov
std
xlat
sarb
rcrl
or
xchg
push
sbb
pop
and
nop
dec
dec
out
mov
mov
sbb
in
jb
daa
add
xchg
xchg
sbb
shrl
or
inc
inc
and
add
sbb
movsl
pusha
int
cmp
cltd
add
int3
and
mov
or
out
mov
lret
fidivs
and
jae
loope
lret
dec
dec
push
out
cmpsl
in
lahf
jne
adc
stos
pop
in
and
leave
xchg
inc
into
test
idivb
mov
add
adc
fdivp
fsubrl
sbb
aaa
aaa
sub
out
adc
cmp
mov
rorb
mov
pushf
and
mov
xchg
and
sbb
adc
nopl
cmp
fistpll
push
xchg
idiv
fsubs
xor
mov
cli
shrl
push
push
jge
and
aam
inc
pop
cmp
loop
push
jae
repz
jne
mov
sub
cmp
cmc
lea
mov
xchg
or
sti
sahf
das
int
dec
cmp
xor
in
cltd
js
sbb
andl
and
fdivrl
pop
sbb
jge
mov
and
jb
push
in
add
inc
push
pop
pop
mov
add
inc
mov
push
jl
push
mov
push
jg
sub
sbb
push
add
dec
pop
or
pop
cwtl
mov
ret
or
rcrb
shlb
jb
jnp
dec
fidivs
mov
aas
mov
adc
stos
mov
loop
rcrb
mov
pop
enter
mov
xor
cwtl
sti
shll
pop
xor
aas
iret
xlat
test
add
mov
popl
loope
lret
jb
mov
icebp
sbb
scas
adc
inc
aam
or
lds
popf
and
out
mov
mov
sbb
cmp
jbe
test
mov
inc
inc
jo
bound
rcr
pushf
pusha
sbb
dec
inc
rcr
and
int3
lcall
je
lock
int
inc
jecxz
sbb
push
arpl
je
imul
insl
scas
pop
sti
fs
xchg
popa
pushf
pop
mov
in
dec
dec
test
dec
fldt
jno
repz
sbb
cmp
push
pop
ficompl
mov
mov
clc
dec
repnz
stos
xor
das
or
icebp
jge
pcmpeqd
cmp
loopne
mov
aad
bound
and
pop
mov
jg
jmp
and
inc
mov
push
dec
sbb
shll
addb
sub
xchg
fstpl
push
in
sbb
or
cmp
outsb
scas
lret
loope
jae
dec
pop
cs
mov
inc
ficompl
aad
or
cmp
pusha
jle
push
push
mov
push
jae
das
aas
aam
out
and
or
negl
inc
ss
ss
or
decb
cmpsl
jb
dec
mov
xor
mov
jb
inc
xchg
push
testl
mov
mov
icebp
xchg
inc
int
inc
test
sbb
jmp
aad
xchg
mov
testb
mov
jmp
sub
roll
outsb
mov
idivb
out
sar
pop
mov
addr16
pop
xchg
dec
pop
xor
icebp
mov
pop
xchg
nop
cmc
lea
popa
push
sbbl
mov
add
mov
xchg
jno
ss
add
dec
shr
sbb
lret
stos
outsb
sti
decl
pop
outsl
fiaddl
add
cltd
out
adc
je
push
in
push
jae
jmp
fcoml
and
lret
shr
les
dec
pop
cmp
xchg
mov
cmpb
lret
jge
xchg
out
lss
mov
push
and
add
mov
mov
pop
pop
jg
out
rclb
and
jmpw
ss
mov
in
xchg
test
inc
test
in
icebp
test
insb
fimull
divb
xor
in
xchg
pop
dec
mov
insb
std
aad
inc
xor
mov
sti
sbb
jo
jno
xor
mov
xor
or
sub
xor
adc
lcall
rolb
popf
sbb
repnz
add
filds
call
fnsave
repnz
mov
cmpsl
xorb
cmp
mov
push
and
xchg
in
mov
call
mov
cwtl
jbe
outsb
push
jecxz
or
ret
pop
sub
mov
sar
nop
loopne
loop
stos
mov
jb
jecxz
and
fs
xor
dec
adc
jne
cmp
stc
mov
jo
pop
ss
cmp
add
and
vcvtudq2pd
push
lds
cmpsb
push
test
adc
push
arpl
add
inc
inc
cmpsb
jp
xor
movsl
mov
mov
push
mov
push
insl
xorl
fs
int3
lods
cmpsl
aas
mov
inc
xor
bnd
mov
mov
jb
test
pop
mov
xchg
push
jmp
mov
dec
and
sub
sahf
jg
push
sbb
test
xor
in
aaa
in
mov
and
adc
inc
andl
jns
sub
pop
pop
scas
inc
fcomi
or
pop
pop
dec
pushw
call
xchg
aad
mov
mov
push
in
mov
repz
fnstsw
add
ret
sub
adc
inc
stos
adc
or
shll
and
imul
sub
movsl
cmp
mov
jecxz
and
mov
push
lock
scas
scas
shlb
popf
jg
aas
in
sbb
testl
rolb
and
lret
push
pushf
adc
sarb
mov
sub
notb
cmpl
xor
loope
pop
jnp
lret
dec
sti
sub
mov
rclb
jae
dec
mov
sbbl
jbe
jns
jns
xchg
in
test
imul
adc
fbstp
jae
xchg
std
adc
sbb
fisubl
inc
loop
jl
mov
mov
stos
test
cwtl
mov
stos
jecxz
cli
xchg
lods
jo
cmpsl
inc
lcall
stos
lcall
popf
pop
cmpsl
mov
loopne
rclb
fmull
popf
mov
sbb
fmul
das
in
add
fdivl
gs
out
xlat
inc
or
inc
pop
fcoms
popa
cmp
pop
add
mov
mov
xchg
push
sub
dec
scas
aad
in
adc
stos
jl
xor
mov
dec
inc
jl
rorl
int3
pop
je
push
fimuls
out
and
mov
mov
and
sbb
loope
xchg
xor
mov
out
jl
pop
xchg
dec
push
inc
aas
aam
pop
inc
pop
add
xchg
mov
sar
sbb
bound
xchg
mov
in
xor
push
mov
cli
xchg
mov
cmpsl
push
inc
out
mov
push
dec
inc
inc
push
bound
dec
ja
les
jno
lahf
mov
dec
inc
push
mov
jb
mov
jge
cmc
enter
xchg
or
pushf
andb
sbb
test
ss
jmp
mov
jae
jae
cmp
ss
mov
xor
pusha
jge
cld
das
rclb
mov
adc
fisttpl
jl
aad
stos
mov
das
lods
pusha
stc
ret
xchg
push
adc
mov
popa
lods
pop
mov
out
shll
inc
and
jmp
subl
push
addr16
nop
mov
or
mov
mov
outsl
mov
in
arpl
incb
ret
pop
mov
inc
mov
and
in
mov
sti
lds
sub
sbb
push
daa
lock
lea
add
fcomi
cwtl
and
je
inc
in
outsl
sbb
mov
roll
xor
and
mov
sub
jecxz
xchg
pop
push
sar
xorl
adc
fldenv
inc
lcall
movsl
mov
sbb
icebp
push
xor
loop
ror
lods
pop
sbb
subb
ret
ficoms
jb
add
bound
pop
mov
add
sar
out
pop
out
jge
mov
cmp
in
lret
pop
mov
movsl
stos
rcr
or
adc
or
xchg
lret
cmpsl
adcl
jo
movsb
sarb
stos
pop
mov
pop
or
jl
mov
fmul
jbe
outsl
gs
jns
fs
scas
in
jge
or
int
gs
mov
orb
repnz
repz
test
lret
lods
shrb
cli
bound
mov
push
cmpsb
mov
pop
pop
lcall
icebp
imul
sbb
jg
shl
in
jnp
xor
cmp
dec
pop
das
and
adc
xchg
or
fsubr
int
inc
scas
cmpl
xor
pop
int
js
out
frstor
repz
lods
neg
mov
sub
fs
and
outsl
lret
insl
mov
pop
rcll
subl
loope
inc
sub
das
out
mov
aaa
inc
cmp
fwait
movsb
adc
dec
adc
pop
shlb
xchg
call
daa
xchg
and
fisubl
test
in
testl
adc
sahf
jge
inc
mov
inc
xor
jecxz
sgdtl
int3
sahf
subb
out
js
les
push
aas
adc
push
adc
in
xor
ljmp
jns
xchg
sbb
gs
inc
loope
paddb
add
jmp
and
mov
scas
mov
xor
daa
or
out
dec
jo
xor
out
pop
test
es
rolb
fbstp
xchg
inc
and
jge
hlt
test
les
out
jmp
ljmp
xlat
push
es
or
iret
sbb
addl
sbb
dec
aam
aas
xor
add
imul
mov
dec
inc
mov
mov
mov
aam
adc
push
or
cmc
in
inc
sbb
cltd
mov
xchg
jb
movsl
xchg
imul
mov
mov
inc
adc
or
dec
ja
lea
xchg
sub
xor
xchg
cmovb
rorl
pop
jg
test
lahf
mov
aas
mov
pop
notb
mov
jne
pop
enter
shlb
add
pand
xchg
jb
or
xor
bt
ljmp
add
jo
inc
outsl
mov
and
hlt
sbb
icebp
loopne
cmp
je
mov
xor
sbb
mov
shlb
mov
dec
out
cmp
cmc
insl
dec
test
mov
inc
fwait
or
negb
shl
inc
pop
mov
jp
jge
dec
sbb
iret
fwait
movsb
adc
neg
xor
daa
xchg
sub
popf
cltd
push
stos
adc
imul
psubw
pop
popf
lock
mov
lcall
stc
jle
enter
sbb
mov
in
outsl
stos
jle
mov
es
pushf
pop
xchg
inc
mov
out
cmc
iret
or
adc
xchg
outsb
mov
pop
sbb
adcl
popa
scas
mov
and
movsb
sub
cmp
mov
sbb
popa
in
jb
fucom
daa
movsl
mov
ret
or
inc
dec
mov
mov
xor
ror
push
fdivrs
mov
or
jle
pop
jae
jae
jb
lock
jns
push
mov
fcom
fs
adc
xor
sub
push
sbb
outsb
cmpsl
stos
cld
movsb
mov
push
out
rolb
stos
movsl
add
adc
and
arpl
fcmovbe
sbb
aam
or
sahf
fwait
sub
imul
cmp
and
addr16
xchg
xor
jne
shlb
and
out
jle
push
stos
rclb
mov
adc
not
xchg
arpl
dec
fildll
sbb
call
cmpsl
movsb
pop
cmpsl
mov
in
xor
stos
addb
mov
test
xchg
int
das
aad
mov
in
lods
js
xchg
cwtl
cs
mov
imull
jae
xchg
push
sub
ds
mov
push
adc
xor
test
scas
adc
adcb
js
push
inc
push
lret
call
stos
movsb
mov
test
cmp
push
xor
mov
add
add
jnp
lea
push
sti
cmpl
xor
sub
cltd
adc
push
test
je
gs
jecxz
bound
lahf
jb
adc
clc
fadd
pop
insb
push
lret
adc
add
dec
jl
and
and
jnp
pusha
mov
fcomip
shl
inc
vrsqrtss
les
dec
out
pop
mov
bswap
lahf
lds
lods
fcoml
rcrl
and
movb
outsb
or
push
sub
lahf
mov
ret
jecxz
push
je
ret
jno
int3
push
add
mov
cltd
aas
out
aaa
add
out
cli
in
daa
dec
ds
pop
xchg
cmp
inc
jecxz
fidivl
clc
fdiv
ror
push
outsb
rcr
push
cli
pusha
jl
cmp
lahf
nop
and
jmp
fcmovb
xchg
cmp
stos
mov
cli
or
push
push
sbb
das
movsb
movl
in
xor
lds
xchg
xor
pop
mov
outsl
test
sbb
push
pop
xor
lods
clc
test
lahf
testb
orb
into
ss
xor
push
sbb
pop
sub
dec
pop
mov
dec
xor
push
mov
mov
cmpsl
mov
inc
daa
outsl
movsb
pop
scas
flds
daa
in
stos
push
or
pop
ret
dec
add
cmp
mov
lret
jae
loop
pop
imul
sub
push
cmp
push
stos
dec
std
xchg
in
adcl
dec
xchg
mov
sbb
into
or
gs
adc
stos
rol
pop
pop
push
inc
mov
mov
sub
out
push
push
outsb
xchg
push
shlb
aaa
xchg
pop
jl
or
adc
push
pop
mov
aam
out
jmp
cmp
push
jbe
pop
das
enter
inc
or
mov
mov
push
dec
inc
pop
clc
jmp
enter
frstor
lahf
jnp
xchg
cmp
loope
xchg
inc
mov
pop
push
sbb
push
pop
ja
addr16
xor
lea
clc
and
jp
lret
inc
cmpb
mov
lcall
leave
sbb
dec
mov
or
sbb
rorb
xrelease
adc
jle
xor
push
ds
or
jae
pop
in
ja
repnz
mov
mov
lock
jo
out
rcrb
out
cmp
inc
out
jns
adc
cmp
sahf
cwtl
and
out
loope
jge
cs
sahf
fisttpll
pusha
mov
ret
pop
movsl
cmp
pushf
xchg
js
imulb
das
sub
in
gs
sbb
dec
jo
movsb
mov
dec
pop
int3
pop
stos
ja
mov
adc
adc
jns
test
xor
sub
lods
leave
sub
and
xchg
imul
push
subl
pop
inc
jecxz
mov
shr
ljmp
and
sub
cmp
lea
adc
movaps
ss
test
cmpsl
push
ja
loop
dec
push
loope
shl
and
aas
pop
cltd
and
jmp
xlat
lock
xor
sbb
int3
into
jecxz
xor
lcall
xorl
scas
out
pushw
sub
pop
xlat
adc
and
push
xchg
loope
mov
mov
out
xor
pop
mov
ljmp
mov
pop
arpl
std
xchg
jmp
mov
mov
cmc
fsts
sbb
leave
pop
pop
aam
movsb
int3
mov
or
into
add
rorb
sbb
sbb
jne
push
cmp
out
pop
pop
inc
inc
cmp
push
fcom
gs
sti
fiadds
cmpsb
dec
jg
mov
fisubs
lret
cmpsb
add
jl
mov
jg
mov
dec
rorb
mov
popa
inc
enter
sbb
int
aad
cli
stos
dec
mov
pop
cmc
sub
test
popa
mov
xchg
inc
push
sub
outsl
cmc
outsl
repnz
xchg
test
mov
and
adcb
pusha
orb
in
fidivrl
mov
jmp
ss
ret
imul
loopne
push
aad
cmp
ficoml
setle
sbb
sbb
fstl
inc
into
xchg
sub
xor
cli
out
inc
push
or
aam
push
mov
daa
mov
sub
jp
leave
xor
jmp
cmp
outsb
lods
je
sbb
clc
imul
cmpl
mov
mov
jmp
adc
rcr
and
out
or
cld
push
mov
inc
lret
cmp
jnp
cwtl
sub
int
sti
out
les
sbb
fwait
test
jge
sti
enter
fwait
shlb
lods
cld
jne
add
and
mov
xor
adc
add
dec
adc
stos
imul
pop
push
imul
push
stos
call
mov
xchg
loop
fcompl
mov
mov
xor
and
loop
dec
hlt
add
cmp
int3
mov
jne
inc
inc
lds
xchg
out
loopne
and
adc
sbbb
mov
incl
xor
or
sahf
sub
out
aaa
push
fnstenv
ficoms
lods
jg
stos
fsts
in
test
fcomi
ret
enter
scas
xchg
or
in
not
aas
fsubrl
ret
lods
sub
movsb
fidivrl
ficoms
sbbb
cmp
mov
ljmp
int
mov
pushf
sti
push
cmp
mov
imul
cwtl
push
adc
adc
aas
jg
ret
imul
cmp
lock
mov
in
into
xor
xchg
lods
popa
int
aaa
cltd
xor
stc
inc
stos
fildll
jl
sbb
mov
adc
cmp
data16
out
pop
in
jae
mov
dec
mov
rcrb
dec
push
and
or
imul
sti
ret
jmp
fstl
inc
cld
jb
je
fstpl
push
fildll
popf
ret
xchg
mov
push
das
jae
xchg
add
test
sbb
add
push
or
sub
sub
mov
std
or
in
mov
inc
xor
mov
shl
sub
jno
push
pop
xchg
pop
cmc
out
pop
cmp
sbb
xor
shrl
rorl
mov
mov
push
lods
sub
sbb
dec
pusha
dec
imul
pop
aaa
data16
out
fsubl
push
ljmp
mov
decl
add
sub
and
and
aam
add
imul
jne
mov
or
adc
imul
and
fadd
mov
sub
fdivrp
loope
inc
jo
in
jmp
inc
mov
push
sbb
lret
inc
xlat
pop
fnstsw
xchg
mov
mov
mov
in
or
inc
sahf
ret
mov
mov
repz
stos
fldl
ret
add
inc
pop
fst
add
mov
nop
push
push
cltd
gs
es
pushl
add
push
iret
mov
lods
jae
adc
out
arpl
int
ja
sti
xchg
xchg
push
lret
ljmp
mov
cmp
jecxz
call
pop
push
ljmp
or
add
or
adc
fwait
push
data16
inc
mov
add
stos
aaa
jbe
jnp
ds
pop
andl
repnz
jb
sbb
jo
inc
fnstsw
sub
push
and
dec
pop
lds
mov
out
cmp
sbb
mov
sbb
or
cli
lahf
inc
shl
ja
ss
xchg
xchg
cs
pop
lahf
pop
mov
in
lods
pop
pop
lock
ja
into
rcll
nop
cmp
mov
sub
jo
test
push
xor
push
push
daa
loope
sbb
sti
xchg
shlb
rolb
mov
fwait
in
cmp
sbb
push
or
pushf
jle
pop
stc
loop
loopne
mov
lcall
xchg
mov
imul
mov
popf
std
ret
jle
cld
fld
push
in
xchg
xchg
fsub
mov
out
fmull
enter
les
push
inc
inc
push
and
mov
aaa
push
out
mov
lods
sbb
xor
and
add
mov
jnp
std
ss
adc
or
mov
ficompl
xchg
mov
outsb
add
pushf
cli
mov
shlb
nop
hlt
out
pop
inc
fildl
out
dec
fcomp
mov
ds
add
push
loop
xchg
inc
dec
inc
outsl
xchg
pop
js
push
mov
jnp
cmp
aas
cmp
out
pushf
xchg
daa
loopne
lods
hlt
pop
ficoml
mov
leave
fidivl
sbb
addr16
shrb
mov
js
sbb
jae
decb
jmp
and
cli
out
and
outsl
push
or
jae
adc
icebp
stos
and
fstps
jbe
cmpl
jne
fistpl
add
mov
push
mov
push
mov
xlat
in
les
xchg
dec
imul
les
jo
adc
or
icebp
lret
lds
rolb
aad
lret
sar
loopne
xchg
mov
fldenv
push
mov
sahf
adc
xchg
dec
or
push
movl
mov
pop
sarl
adcb
xchg
fnstcw
gs
pop
out
fcomps
movsl
sbb
mov
mov
test
dec
fisubrs
out
lret
dec
mov
movsl
and
loop
es
cmp
addr16
jae
mov
or
enter
xor
pop
sub
mov
test
pop
pop
mov
imull
sbb
cmp
inc
cmp
bound
ds
pushf
jns
jno
xchg
push
inc
scas
cmp
sub
push
dec
imul
pop
sbb
xor
mov
sub
lea
jae
or
movsb
push
fisttpll
pop
dec
aas
or
std
mov
mov
aaa
rcrl
mov
sub
shrb
test
sub
pop
loop
call
es
inc
in
mov
lret
cmc
pop
push
jbe
leave
xor
mov
cli
inc
roll
es
fisubs
popf
es
mov
inc
cmp
out
xor
mov
outsl
mov
addr16
stos
rclb
xchg
cmp
mov
sbb
push
in
xchg
repz
mov
fidivrs
cli
fildl
dec
push
pop
lods
pop
daa
sbb
cmpsb
mov
loop
adc
cltd
mov
xchg
fs
jae
into
jge
inc
das
mov
les
cmp
sbb
or
roll
fimuls
xchg
test
mov
scas
popf
or
fildll
inc
dec
je
cmp
loop
sbb
lds
stc
and
arpl
mov
mov
inc
dec
push
push
sub
mov
in
add
fnsave
loope
and
mov
insl
pop
mov
xchg
movsl
sub
je
movsb
xchg
mov
fisttpl
fs
inc
sub
scas
aad
push
test
dec
jecxz
mov
xchg
jecxz
aaa
or
inc
jbe
dec
push
xchg
test
rcrb
xlat
and
push
and
clc
cmp
lock
mov
cmp
pusha
mov
xor
dec
jb
pop
jnp
negb
fldlg2
add
xchg
test
dec
lret
adc
outsl
je
push
xor
dec
and
in
imul
mov
pusha
movsb
sarl
fwait
jmp
mov
iret
lea
dec
adc
fwait
js
int3
xchg
mov
in
pop
divb
jmp
add
sbb
pushf
jae,pt
add
dec
pusha
push
out
pop
mov
cmpsl
xchg
sahf
into
sub
add
jne
js
mov
or
ficoms
pop
dec
sub
jbe
cmc
popa
adc
sbb
shl
shrb
pop
mov
and
lock
sbb
or
mov
fwait
mov
push
mov
dec
jle
insb
mov
ss
push
or
aas
in
icebp
scas
pop
inc
loope
sbb
or
jo
outsl
cmp
stos
icebp
xor
xlat
jecxz
cmc
xchg
rcr
dec
pop
fadds
lcall
or
inc
jae
lahf
xor
mov
dec
stc
jg
scas
sbb
adc
mov
dec
or
test
pop
lock
cmpsb
insl
jmp
insb
ss
jno
push
int
or
push
loope
mov
std
sub
pop
adc
sbb
and
push
lret
jno
inc
test
cmp
out
je
or
adc
or
inc
inc
rorb
xchg
adc
sbb
push
dec
aas
sub
movsb
dec
iret
xchg
shlb
out
cmpsb
xchg
mov
xor
mov
xor
cmp
mov
rorl
xor
dec
jb
inc
out
fisttps
xor
xchg
cmpsl
cmpsl
aad
mov
push
lds
icebp
fisttpll
sub
xchg
inc
js
sbbb
cmp
adc
data16
lock
add
std
scas
movsl
shrb
inc
out
pop
pop
icebp
mov
mov
outsb
push
outsl
rclb
outsb
cmpsl
dec
mov
lret
test
enter
repnz
pop
pop
out
adc
sbb
cmpsb
mov
or
sub
add
add
lock
loope
mov
cltd
add
xchg
sahf
xlat
jg
and
gs
aam
aam
mov
xchg
sbb
pusha
xor
xchg
mov
xorb
std
int3
dec
sub
xchg
out
cmp
clc
mov
mov
stc
xchg
insb
fidivrl
hlt
jp
scas
idivl
hlt
xor
out
mov
push
inc
mov
addr16
add
shl
pushf
in
lods
in
shl
mov
adcl
mov
daa
jno
push
sahf
lds
or
insb
or
dec
jle
pop
lock
cli
ja
sub
lods
in
sub
fmul
stos
int3
rorb
arpl
sahf
jbe
inc
in
lahf
out
mov
or
cmp
push
xor
jl
les
mov
cs
leave
idivl
ja
test
sbb
lods
mov
stc
sbb
pushf
pop
sub
into
imull
jl
imul
inc
cmp
ds
jle
xchg
sbbl
sbb
nop
mov
rclb
add
sub
jp
clc
cmp
xor
dec
aam
dec
sub
inc
gs
sti
push
sub
add
jp
dec
rclb
js
lahf
xor
cli
jno
mov
das
push
mov
sbb
jg
sar
push
adc
repnz
stos
xchg
ret
sahf
lcall
es
loope
repnz
push
adc
xor
mov
mov
jge
inc
sub
mov
les
mov
inc
cmp
adc
cmpsl
push
scas
leave
sbb
xor
es
js
lret
gs
ds
int3
aad
out
or
mov
push
inc
sbb
ljmp
xor
fs
inc
lods
add
cli
jb
sbbb
xchg
xchg
in
rcr
stos
outsb
fdivl
xor
sahf
xor
fildl
cmc
sub
std
rclb
sbb
nop
dec
and
gs
clc
pop
addr16
scas
test
push
iret
test
sub
je
cwtl
lahf
sti
das
mov
mov
mov
jp
insb
mov
push
sahf
cli
pushf
jae
dec
ja
add
dec
fsubrl
and
pop
inc
adc
mov
or
dec
jae
setno
xchg
ds
adc
loope
push
das
fwait
xchg
mov
push
fstps
faddl
fmul
sub
lea
add
fidivs
xchg
dec
lahf
lea
lahf
sbb
jbe
sbb
cltd
pop
inc
xor
ss
les
cmp
push
fcomip
jmp
xor
sub
jb
jne
adc
in
gs
xchg
pop
cmp
push
mov
fwait
inc
adc
mov
mov
or
mov
mov
scas
rcl
sarb
or
pop
out
sbbl
mov
inc
lds
int3
adc
in
mov
cmpsl
negl
pop
jo
add
xor
addr16
insl
jecxz
pop
arpl
xor
enter
dec
cmp
cmpsb
nop
lods
orb
or
fistpl
mov
ss
push
cli
mov
out
xor
cmpsb
and
loopne
jno
mov
call
xor
cmpl
popa
movsb
pop
jns
xchg
outsb
mov
data16
xchg
sub
sub
adc
fists
les
mov
pop
xor
adc
mov
dec
sti
in
pop
aad
adc
push
jb
in
pop
mov
lahf
nop/reserved
and
bound
push
hlt
test
insb
out
loopne
push
enter
sub
les
into
and
mov
data16
add
cmpb
xchg
adc
pop
sub
xchg
inc
cmp
add
mov
mov
js
lret
mov
js
inc
mov
pop
xlat
insb
mov
jne
pop
shll
push
int3
ljmp
pop
sbb
add
testb
jb
ljmp
push
shll
fldt
fnstenv
fisubs
jmp
adc
push
ficoml
mov
xchg
or
iret
outsb
fisubs
sbbb
cmp
sub
mov
std
jmp
mov
sbb
and
das
dec
lcall
cmpsl
jb
xor
and
je
fwait
jge
out
add
ret
sub
and
push
cwtl
and
gs
inc
aaa
imul
or
in
mov
fdivrs
cld
cwtl
clc
pop
in
fsubrp
movsb
mov
call
xor
pop
arpl
xchg
sub
push
mov
je
outsb
pusha
adc
lea
fimull
add
push
mov
adc
mov
mov
sbb
mov
lahf
into
mov
dec
pusha
cmp
out
test
cmpsl
add
inc
jg
popa
dec
out
xchg
imul
push
jb
hlt
adc
int
bound
in
xchg
mov
sti
pusha
dec
and
or
adc
int
add
mov
adc
cmpb
push
lock
stos
scas
jg
dec
cwtl
inc
add
fsubs
popa
jg
hlt
cli
or
fiaddl
mov
xchg
mov
push
xchg
enter
inc
ret
es
add
lret
sub
cmp
push
sarb
jle
lock
fs
jge
adc
lods
mov
dec
and
mov
xor
cwtl
push
aad
out
test
fdiv
add
in
fistpl
mov
stc
icebp
xchg
inc
shlb
aas
adc
inc
pop
add
popf
or
xchg
jp
push
sbb
loopne
cmp
imul
stc
mov
mov
ret
sub
std
dec
adc
out
sbb
add
rolb
clc
cli
rclb
jge
lahf
repz
cs
lds
inc
lods
ret
lods
mov
fmull
test
mov
jg
push
mov
out
add
rolb
and
add
jno
fildl
pushf
in
dec
and
repz
add
adc
idivb
inc
push
imul
rclb
fistpl
or
les
add
fndisi(8087
xor
test
fmull
in
inc
push
mov
incl
data16
lcall
inc
cld
mov
pop
idivl
movsb
aas
rcrl
sti
lods
xor
jg
fdivl
jge
fpatan
js
add
loope
int
add
lods
fmull
mov
clc
mov
sbb
and
inc
out
push
mov
and
add
adc
push
outsl
xchg
stc
insb
xchg
or
inc
lock
sub
and
inc
pop
enter
arpl
and
pusha
and
gs
push
mov
sub
jge
insl
fwait
scas
or
mov
inc
ds
adc
jo
and
mov
sub
lcall
dec
and
cmpsb
mov
dec
mov
dec
ficompl
jge
shll
push
xchg
xchg
pop
push
xchg
add
jnp
mov
jl
imul
pop
fcomps
hlt
stc
lret
cmc
fcomi
push
xchg
les
sbb
dec
push
jns
xchg
out
jmp
adc
mov
cmp
and
mov
mov
test
js
push
pop
setne
repz
and
lods
and
mov
mov
dec
in
fcomip
mov
adc
in
loope
lret
int
rolb
sub
fisubrs
and
adc
or
adc
mov
pop
xchg
andb
mov
inc
js
mov
xor
cwtl
mov
xchg
pop
xchg
sbb
in
pusha
cmp
decb
jle
mov
cli
jb
loopne
mov
jg
cmp
testb
cmp
pop
push
dec
lods
cmp
insl
out
or
dec
mov
mov
mov
mov
mov
inc
cld
sbb
scas
jb
cmpsl
or
pop
dec
dec
or
xchg
movsl
inc
cmp
test
loopne
roll
pusha
mov
fs
fldt
test
scas
cltd
mov
add
ror
test
bound
add
movsb
lahf
mulb
xchg
cwtl
jnp
cmp
pop
fidivrl
leave
icebp
and
cmp
ljmp
fists
xchg
pop
cmp
mov
xchg
mov
adc
add
pop
jle
jnp
add
outsl
dec
arpl
or
shll
add
push
ss
jae
popf
xchg
fdivl
mov
mov
test
xchg
pop
pusha
insb
rorl
outsl
push
shlb
out
std
jecxz
andb
in
popl
and
or
mov
insl
fdivrs
add
aam
mov
lret
xchg
cld
fucomip
pushf
orl
gs
cmp
int
pop
cmp
push
sbb
add
stc
and
div
lcall
inc
cld
in
loope
je
or
test
push
jecxz
pushf
mov
pop
sarb
into
gs
xchg
xor
es
mov
or
pop
ja
pop
add
pushf
push
fstpl
xor
loopne
mov
test
sbb
arpl
fistpl
mov
sub
dec
mov
push
pushf
fistps
mov
cmp
movsb
out
outsl
fnstcw
sti
mov
sub
inc
in
jo,pn
es
fmuls
icebp
scas
imul
jnp
jnp
stc
dec
add
popf
stos
imul
in
clc
clc
push
fistps
test
cmp
pop
dec
lds
movsl
jne
xlat
jo
pop
js
loop
and
pusha
inc
ja
imul
std
jo
popf
fisttpl
mov
adc
mov
push
sub
stos
out
cmp
cld
jnp
cmp
mov
jmp
or
outsb
shlb
outsl
push
cmp
jae
hlt
gs
cmc
sti
test
add
out
pusha
push
sbb
xchg
mov
sbb
fs
mov
in
add
mov
or
mov
lods
inc
jno
jecxz
jb
add
and
mov
inc
jle
mov
sub
mov
sbb
push
jg
fs
pop
pop
xchg
test
pop
dec
xor
adc
aaa
sbbb
ret
push
lea
bound
adc
out
add
in
into
sub
in
pop
imul
bound
push
lock
std
test
xchg
mov
jbe
loope
jle
ficoml
xor
pop
mov
leave
unpcklps
decb
les
mov
lock
lret
pop
ret
rcl
xor
imul
sahf
dec
das
dec
sbb
in
mov
lret
xchg
jmp
jge
pop
in
fisubrl
adc
dec
stos
insb
adc
add
mov
mov
je
mov
clc
in
mov
pop
lds
fwait
lock
push
repnz
stos
pop
lcall
sbb
jno
movsl
loop
cltd
jge
and
roll
mov
adc
call
enter
call
cmp
pushf
mull
int
sub
mov
hlt
pushl
popf
mov
mov
gs
mov
pop
scas
push
pop
in
aam
loopne
rolb
jb
xchg
cmp
xchg
icebp
mov
or
pop
push
push
fisttps
test
jbe
into
xchg
push
mov
rorb
mov
sub
out
jo
ja
aad
icebp
and
inc
aam
push
sub
push
add
fisttpll
out
sub
cmp
arpl
mov
inc
and
or
out
or
xor
in
sub
adc
cmp
cmp
pusha
ret
pop
sbb
call
xor
fbstp
mov
push
adc
call
shl
rsqrtps
sub
inc
cld
inc
in
xchg
insb
mov
ss
xor
enter
sahf
cs
pushf
movsb
mov
mov
insb
cmp
sub
insl
data16
ret
add
stos
cmp
adcl
sub
jbe
mulb
mov
call
sbb
into
ljmp
divl
dec
arpl
shl
cwtl
push
lods
lcall
pop
andb
ss
adc
inc
push
icebp
inc
jb
idivb
and
mov
test
es
pop
pop
push
push
test
mov
dec
sbb
and
int
scas
adc
xor
lret
dec
sti
ljmp
lods
mov
in
or
aam
inc
pop
pop
push
fldenv
xor
and
in
xor
push
test
loop
mov
mov
or
daa
jge
jle
scas
jnp
push
adc
popf
xchg
shlb
ds
sbb
jge
js
inc
ljmp
xchg
insb
inc
cmpsl
arpl
movsl
xlat
xor
or
xor
fcmovb
fdiv
stos
shll
stos
mov
stc
in
leave
fcoml
xor
ljmp
cld
aaa
inc
sahf
xchg
mov
testl
ljmp
mov
mov
sbb
xor
mov
and
push
addr16
lret
sub
adc
dec
mov
shll
insl
lods
je
das
cwtl
outsl
mov
xor
mov
andb
push
into
pop
test
mov
inc
add
popa
cmp
das
shrl
stc
jecxz
pop
stos
and
cmp
jno
mov
pushf
mov
cltd
call
dec
add
add
and
repnz
jecxz
dec
shrb
add
xchg
jge
mov
xor
dec
adc
imull
fwait
mov
cs
rcr
and
rcl
repz
aam
jmp
mov
out
mov
dec
out
push
add
mov
push
jne
xor
sti
rclb
out
callw
pop
xchg
pusha
imul
xchg
adc
in
popf
std
popa
push
cwtl
cmpsb
sbb
sub
and
enter
mov
jo
mov
fwait
lods
jmp
inc
fistpll
mov
mov
lods
and
rclb
jbe
cli
or
cmp
jl
push
cmp
fadd
setl
imul
out
enter
data16
push
ss
xchg
cld
sub
insb
out
mov
add
mov
pop
xor
push
andb
jecxz
pop
xchg
jnp
adc
lahf
fisttpll
fs
pusha
lcall
push
test
push
mov
mov
lcall
cli
sbb
loope
and
inc
mov
sarl
mov
cmp
cmp
cmc
outsb
sub
cli
mov
cld
decl
out
push
out
dec
push
loop
and
rclb
mov
iret
sbb
and
cmp
inc
lret
jg
pop
sbb
divl
cmc
imul
pop
scas
adc
mov
jbe
mov
dec
xor
in
adc
aad
lcall
xchg
adc
add
xchg
addr16
subl
jne
ficoms
ja
popa
cmp
inc
lcall
xor
pop
bound
aad
mov
repnz
popw
sbb
repnz
or
lock
popf
cmpsb
add
das
dec
popa
popa
in
mov
or
test
xor
jmp
shrb
test
rclb
mov
lea
jnp
push
insl
popf
test
jae
cmp
push
xorl
loopne
cwtl
out
dec
dec
and
xor
movsl
lret
xor
add
js
add
dec
scas
scas
imul
iret
out
lods
mov
stos
pushf
add
adc
add
adc
mov
xchg
dec
cmpsb
aaa
lahf
xor
cli
add
xchg
mov
jo
sahf
popf
lods
mov
push
add
popa
cltd
stc
push
pop
cwtl
ja
push
mov
insb
movsl
ja
dec
movsb
or
arpl
sub
inc
enter
and
scas
push
adc
dec
and
test
xor
ret
cmp
xchg
ret
jmp
push
or
jne
into
sbb
jl
jns
sbb
shl
lds
orl
fists
dec
stos
jmp
jns
mov
fadds
jae
mov
inc
push
enter
out
xor
bound
pop
adc
in
jle
dec
aad
inc
inc
mov
jo
das
mov
xor
adc
push
out
mov
das
xor
in
and
das
push
enter
push
scas
sbb
dec
out
pop
pop
loop
inc
aam
lock
mov
push
push
xchg
ret
call
xor
add
lret
sub
xchg
add
pop
or
repz
std
mov
pop
cmpsb
fnstcw
repz
pmulhuw
xchg
leave
enter
push
sbb
hlt
leave
mov
sub
lods
sbb
or
inc
ret
mov
jbe
sbb
cmp
jl
fistpll
mov
insb
cmpsb
xchg
sbb
pop
adc
dec
out
pop
xor
push
arpl
fmull
sarl
roll
repnz
sbb
inc
sbb
stos
les
movsb
popl
pop
iret
jbe
mov
add
cmovs
test
jecxz
aaa
loopne
shll
mov
movb
jg
xchg
js
add
cmp
pop
inc
mov
pop
add
inc
mov
adc
dec
das
or
lods
loope
cmp
jbe
xchg
inc
and
pop
inc
in
ja,pt
inc
into
xor
mov
or
mov
pop
or
out
jle
push
jbe
ljmp
mov
rcrl
pop
jb
call
lcall
pusha
jo,pn
jecxz
pop
loopne
xor
add
pusha
mov
xchg
andb
lock
inc
sbb
cmp
testl
mov
push
pop
lret
inc
aaa
fwait
mov
call
xchg
adc
jo
int
pop
fidivrs
pop
mov
jmp
xor
test
cmp
pusha
test
or
inc
sbb
push
test
dec
and
shl
lahf
or
or
add
inc
xchg
sub
movsl
das
add
aaa
xchg
add
clc
push
fidivrs
mov
or
add
mov
outsb
sar
repnz
push
mov
jp
testl
add
and
int3
loop
cwtl
aas
pop
cmp
imul
xchg
pop
jae
aas
mov
movsb
gs
push
sub
dec
in
dec
cmp
mov
scas
add
lret
sub
jns
xchg
xchg
cmp
ret
mov
out
push
cmc
ficomps
xlat
pop
dec
or
or
es
aaa
push
and
iret
pop
push
stos
jb
loop
xchg
sub
add
icebp
into
xchg
repnz
enter
push
cli
outsl
and
bound
jg
pop
ljmp
jg
cmp
and
popa
add
mov
and
ds
popa
xor
movsb
jp
ret
hlt
xchg
mov
das
sbb
mov
pop
inc
cld
mov
sbb
cld
mov
test
out
fstp
inc
or
in
mov
test
sbb
movswl
push
sbb
sbb
pop
lds
cmpsl
mov
test
push
pop
adc
pop
inc
pop
mov
add
inc
out
lret
dec
aam
hlt
add
stos
aad
push
pusha
test
mov
pop
in
fisttps
sub
lods
mov
pop
out
push
lods
dec
mov
add
xor
xorb
xlat
arpl
mov
ret
mov
fbld
lock
pop
into
cmc
sub
ljmp
push
js
cmpsb
push
dec
mov
adc
and
ret
dec
add
int
mov
fcomp
sbb
inc
cmp
sub
pusha
inc
lret
mov
or
sub
adc
out
insb
data16
dec
faddp
cld
push
xor
test
pop
int3
aas
xchg
pop
mov
or
daa
mov
hlt
mov
inc
or
push
xor
test
test
sbb
mov
aaa
jbe
pop
mov
rcrb
jge
push
push
lret
mov
xabort
dec
xchg
fwait
rolb
dec
sub
leave
rorb
mov
sub
push
fucom
mov
fbld
sub
push
cmp
push
int3
popa
push
stos
addr16
ret
test
fsubrl
jle
popa
out
push
cmp
xor
cwtl
push
or
mov
pop
stos
out
adc
jp
inc
mov
mov
das
mov
mov
lock
data16
adc
mov
add
adc
in
cmpsl
mov
adc
lock
shr
cltd
cmp
andl
push
movsw
cs
mov
nop
repnz
push
fdivs
cltd
arpl
pop
insl
rorl
mov
ja
cmpsl
xchg
adc
fcomp
dec
insb
fsubs
lret
rolb
popl
lock
mov
lcall
jmp
pop
mov
mov
les
mov
loope
mov
shll
mov
mov
es
mov
outsb
fwait
les
inc
jne
cmc
or
push
lret
fcmovb
mov
test
fpatan
mov
test
mov
sahf
inc
inc
mov
add
lods
scas
pop
cmp
mov
jmp
shl
xchg
addl
add
pop
fnstcw
repz
pushf
mov
add
sub
dec
adc
pop
inc
sbb
dec
add
shlb
pop
xchg
mov
add
lret
cmc
and
lahf
cmc
incb
xor
and
out
jmp
fidivl
stos
mov
jecxz
xchg
es
jmp
pop
daa
jnp
int
or
xchg
sub
fdivrs
or
aad
stos
in
mov
test
stc
mov
adc
dec
lods
sub
inc
sbb
dec
jmp
adc
bound
sub
decb
jmp
aad
mov
lea
dec
lcall
rcrb
loope
mov
ffree
lods
iret
es
ja
lock
orb
rcrb
push
push
sbbb
sub
inc
movsl
xchg
lods
in
lcall
xor
stc
push
mov
xchg
cmp
adc
flds
push
test
lea
mov
xor
pop
jbe
int3
jge
mov
dec
adc
mov
mov
les
lea
insl
dec
pusha
cmp
sub
popf
mov
mov
enter
lcall
jge
sbb
sbb
clc
cmpsl
cmp
and
jne
add
and
lea
and
sysret
cmp
aam
loope
lods
fildl
gs
jbe
fldcw
sbb
imul
push
adcl
pop
push
outsl
inc
test
mov
mov
and
aas
fs
jecxz
push
js
pop
cmp
aas
imul
sbb
outsb
inc
lods
xchg
mov
ja
test
sub
adc
xchg
xor
leave
test
es
orl
add
mov
pop
test
jle
loopne
dec
sarl
enter
in
sub
dec
enter
jecxz
add
aam
fsubr
lock
sbb
lea
jne
push
and
push
int
in
cmpsb
push
adc
pop
mov
push
aam
das
pushl
ror
ja
lcall
push
stos
mov
sbb
dec
mov
xor
pop
mov
mov
sub
mov
sub
in
cmp
jns
js
and
frstor
repz
ret
dec
jb
mov
sahf
out
dec
aas
xor
sbb
popf
cmpb
sub
ss
dec
pop
aaa
cmp
push
fsubl
pop
test
add
jge
mov
fdivrs
adc
sti
add
push
repnz
scas
xchg
xor
sbb
fwait
push
sarl
pusha
fldt
lahf
jne
mov
mov
aaa
stc
sti
mov
cltd
dec
ss
jne
nop
adc
or
out
jne
inc
sbb
popf
inc
icebp
inc
mov
mov
mov
xor
imul
jb
icebp
je
test
mov
outsb
jg
dec
shrl
pop
xchg
and
jne
outsl
je
cwtl
xchg
xchg
int
in
lret
out
and
ret
leave
test
xor
outsl
xchg
ja
lods
dec
in
sbb
dec
popf
or
cmp
int
insb
mov
jg
pop
int3
inc
add
fdivrl
push
inc
sbb
or
sbb
xchg
mov
and
mov
shr
jns
lahf
loope
cmp
mov
ficoms
add
iret
sbb
inc
add
jge
adc
scas
in
int3
cmp
daa
jnp
addl
mov
ljmp
add
stc
xor
mov
sbb
xlat
jg
mov
negb
int
or
sbb
ficompl
rcl
mov
sbb
test
pop
jne
xlat
pop
mov
push
int
dec
int
cli
lcall
outsl
int
call
sbb
mov
cmp
add
push
push
popa
lret
lods
jge
cltd
and
add
inc
xor
cmpsl
sub
dec
lcall
cmpsb
fistl
scas
test
sbb
jecxz
jle
mov
std
sbb
call
inc
or
pop
lahf
lret
sahf
pop
lock
imul
rorl
jmp
cmc
ds
gs
push
mov
push
sbb
out
push
leave
mov
jbe
push
jecxz
xchg
iret
add
testb
and
sub
adc
or
jbe
jno
in
adc
mov
cmp
mov
pop
sti
das
jns
adc
ds
cltd
stc
xor
jmp
xchg
xchg
ss
adc
and
decb
sahf
ret
or
push
fistpl
shll
test
lcall
sbb
repnz
fldl
inc
dec
dec
mov
pop
push
inc
mov
dec
dec
jge
push
xor
mov
cs
xchg
dec
and
enter
shlb
jo
sub
cmpsl
cwtl
jno
mov
pop
pop
sub
stos
mov
scas
out
xchg
popf
jo
inc
cmp
les
xchg
stos
xchg
rclb
jno
xor
ljmp
mov
test
adc
cltd
or
out
pop
pop
fwait
inc
add
cli
push
inc
ret
push
imull
sbb
xrelease
repz
cmp
inc
sub
mov
test
xchg
pop
mov
outsl
pushf
clc
adc
repnz
mov
sub
ja
mov
lret
iret
add
ja
not
and
adc
into
cmc
push
adc
dec
ds
cmp
js
xlat
push
in
cmpsb
repz
mov
or
xchg
inc
xchg
pop
je
mov
rcr
lahf
add
scas
or
cmp
and
mov
mov
insl
popf
insb
sub
mov
xchg
add
rcl
adc
dec
sbb
inc
js
push
mov
sbb
ja
push
and
mov
jl
add
inc
sbb
ljmp
inc
and
pop
fstpt
test
pusha
jmp
xchg
jl
lea
cmpsb
in
dec
cmp
jne
xor
xchg
jmp
es
jb,pn
orl
dec
ret
sbb
lods
idivl
pop
es
xchg
into
push
int
add
mov
movsb
loopne
and
jo
cwtl
lea
pop
lods
and
sti
xlat
mov
fimull
cmp
xchg
ljmp
mov
stos
int
xor
mov
push
shlb
dec
rcrb
aam
mov
and
add
fwait
into
in
test
sti
pushf
cmc
nop
aas
jl
out
mov
jno
in
out
mov
loopne
xchg
cmc
in
gs
and
jle
xor
xor
int3
std
push
iret
pop
aad
push
mov
push
pop
ja
faddl
sub
xchg
and
icebp
xor
push
mov
push
dec
pop
xchg
mov
inc
inc
lea
call
push
pop
xchg
icebp
sub
cwtl
add
loopw
adc
jmp
mov
sti
cltd
jae
sbb
dec
fsts
subl
mov
loopne
into
xchg
shlb
lds
das
pop
cmp
repz
mov
rolb
mov
jno
mov
push
aas
in
shll
xchg
jno
cmp
xchg
mov
jbe
jo
lock
cmpsw
inc
inc
push
loopne
xor
jns
xor
cmpsb
sub
jno
cwtl
leave
mov
lahf
inc
aaa
movsb
push
mov
push
xor
loope
imul
push
pop
mov
sub
dec
or
rcrl
dec
fisttpl
sub
adc
sub
cld
scas
sbb
or
inc
fwait
sti
lock
adc
sbb
inc
jbe
adc
push
add
jns
mov
stos
push
jb
push
popa
test
jns
pop
loope
fwait
stos
jne
cmp
repz
cltd
jb
cmpsl
add
mov
cmp
inc
das
call
lock
call
and
insb
xrelease
hlt
push
insl
in
out
cmp
mov
jg
addb
mov
mov
push
fs
js
push
pusha
xchg
test
inc
cltd
enter
mov
cwtl
sbb
in
out
mov
into
pop
repz
fsub
xchg
and
cmp
lret
add
lods
and
lahf
hlt
jp
mov
cmp
or
inc
int
and
filds
stc
imul
imul
sbb
sub
cmc
ljmp
mov
pop
cltd
ljmp
iret
mov
ds
jg
inc
and
inc
das
cld
ror
jl,pt
push
js
shlb
popf
scas
stos
dec
xchg
add
popa
dec
and
inc
dec
imul
into
inc
xor
out
test
lcall
lock
or
pop
out
pop
cs
stos
dec
sub
lcall
mov
ljmp
cld
xchg
imul
mov
rcrb
mov
test
shll
mov
push
jo
jl
mov
dec
scas
lcall
mov
daa
dec
aad
xorl
adc
sar
imul
lds
mov
cmc
mov
jbe
jb
sbb
mov
aad
daa
icebp
andl
fnstsw
jnp
add
inc
sbb
mov
arpl
gs
pop
add
jbe
icebp
int3
es
ror
fsubl
mov
aad
sbb
out
out
mov
loop
and
push
push
lock
mov
xchg
int3
sbb
cmp
cmp
incl
dec
mov
repz
pop
mov
xor
rcl
loop
mov
lea
stos
insl
insb
shl
lahf
int3
stos
mov
lods
in
mov
stos
mov
jnp
les
pop
jle
mov
out
cld
push
jae
or
pop
ljmp
insb
cmp
sbb
orl
nop
int
lods
sbb
call
jmp
jmp
adc
decl
mov
add
sbb
addl
pop
fwait
les
dec
or
test
inc
mov
mov
mov
mov
dec
mov
dec
hlt
pop
aas
cltd
or
hlt
jmp
mov
mov
pop
roll
enter
rcr
nop
add
jmp
daa
jns
jg
add
orl
arpl
dec
mov
ljmp
push
sbb
mov
or
repz
xor
out
mov
fs
cmp
dec
stos
jbe
imul
test
fiadds
mov
push
mov
daa
push
add
insl
in
nop
test
enter
add
dec
sti
ret
adc
out
dec
push
push
xchg
int3
sub
mov
loope
out
push
pop
xor
std
imul
es
dec
dec
arpl
jae
xchg
xor
jo
mov
mov
and
cmpsb
mov
mov
xchg
jge
push
rolb
fidivrl
jae
popf
add
stos
in
sub
ret
shlb
jg
jmp
test
push
dec
mov
sbb
mov
mov
jno
mov
adc
push
cld
lahf
or
insb
stos
push
add
pushf
and
insb
and
in
loopne
dec
scas
ss
out
mov
jg
je
shlb
das
ret
das
sub
fbstp
sbb
sub
mov
jle
jno
repz
mov
ss
mov
mov
es
jmp
js
dec
adc
sti
xor
mov
rcll
cli
mov
pop
dec
divl
sbb
daa
sub
lods
xchg
subb
sahf
ss
stos
subl
adc
pop
and
imul
mov
xchg
cltd
aaa
aaa
or
hlt
and
ret
daa
out
in
jp
aad
or
mov
cmp
push
jo
jl
aad
inc
xlat
mov
xchg
and
movsb
aam
and
lahf
pop
arpl
call
es
fwait
xchg
mov
or
js
insb
arpl
jg
cmpsb
mov
dec
ja
mov
mov
or
jnp
std
pop
je
or
jnp
icebp
js
xor
test
jbe
dec
mov
jecxz
push
fs
jne
cli
or
adc
fstp
and
or
sbb
mov
jae
fidivl
dec
stc
pushf
push
inc
js
mov
test
mov
mov
adc
imul
cmp
cmp
pop
push
pop
mov
cmp
rorb
or
jle
jbe
rcl
xchg
stc
xorb
pop
sbb
jno
out
and
and
ret
fadds
stc
add
aam
lods
mov
jle
adc
sub
addr16
mov
cmpsl
loopne
dec
cs
sub
fwait
mov
dec
mov
jb
dec
imul
jbe
hlt
add
int
addr16
ss
pop
add
and
push
jecxz
sbb
jns
repnz
ficoml
push
cmp
in
xor
add
cld
decl
out
jle
adc
mov
ror
pop
je
push
xor
mov
add
lods
xor
add
xchg
mov
inc
cmp
out
mov
cmpsl
cmp
ret
mov
cltd
sub
sbb
iret
adc
out
mov
lcall
cmp
inc
ret
pop
sbb
and
loope
adc
aad
and
test
push
dec
sbb
add
push
sti
and
es
lods
mov
arpl
cmpsl
ds
fldl
mov
enter
sub
mov
les
push
lcall
inc
roll
dec
lods
test
mov
xorl
mov
pusha
mov
xchg
dec
addr16
bound
mov
loope
popa
adc
mov
arpl
les
pop
adc
jle
xlat
mov
add
mov
cld
cmp
je
out
pop
cwtl
jae
and
fndisi(8087
in
mull
inc
mov
xor
inc
fs
repz
mov
mov
imul
loop
ret
int
lahf
sub
inc
pop
push
pop
adc
push
jne
int3
insl
movsl
sub
je
out
mov
add
mov
mov
das
and
arpl
xchg
push
xchg
inc
dec
lock
out
shlb
push
hlt
shl
pop
or
or
xchg
out
out
xlat
lcall
xchg
push
and
xchg
inc
sub
inc
xchg
shll
das
add
inc
movsl
jns
add
clc
xchg
fnstenv
out
scas
in
pushf
jg
pop
mov
out
xchg
add
jnp
imul
jne
lahf
add
mov
inc
pop
out
add
lcall
sub
arpl
sbbl
shlb
mov
pop
sbb
mov
inc
mov
or
and
mov
push
and
out
dec
jge
stc
sub
push
add
jg
std
stc
shll
icebp
push
mov
outsb
mov
icebp
sbb
mov
out
popf
xchg
push
jbe
mov
mov
pop
mov
sub
xor
push
mov
mov
dec
shlb
movb
fcmove
or
fstpl
mov
or
hlt
sti
stos
in
mov
out
inc
inc
mov
cmc
loope
mov
sbb
xchg
test
jmp
or
sbb
out
popf
sbb
in
dec
mov
js
repz
dec
dec
inc
dec
adc
xchg
add
shrl
mov
es
mov
pop
out
cmp
pop
adc
or
mov
xchg
or
rclb
xor
sub
popa
in
ret
sub
popl
sahf
clc
std
loop
mov
mov
adc
lret
pop
aaa
test
pop
ja
mov
push
lea
cltd
mov
stc
pop
sub
jle
sub
add
sbb
lcall
xchg
dec
mov
pop
cmp
fsts
pop
int3
cmp
sbb
divl
add
imul
push
adc
ja
test
into
add
inc
dec
iret
sbb
mov
and
rorl
push
dec
mov
jge
inc
push
gs
cmp
mov
sub
call
add
jbe
leave
frstor
xor
ds
repz
mov
pop
push
mov
sbb
adc
pusha
cmpsl
fldcw
cs
fadds
pop
shlb
pushf
mov
add
cmp
add
mov
jl
cmp
insl
and
adc
pusha
in
pop
push
xchg
mulb
and
ljmp
pop
and
sbb
imul
pop
fmul
stos
or
icebp
cmp
outsb
insb
mov
addr16
or
ljmp
bound
or
mov
adc
scas
mov
jne
cmp
adc
jp
dec
pop
or
dec
insb
daa
rolb
dec
inc
aas
fadds
lahf
sub
xchg
call
sti
inc
movsl
adcb
cmpsb
into
sti
add
sbb
popa
adc
push
in
mov
pop
jge
ret
mov
imul
inc
jge
insb
int
lret
cmp
pop
and
popa
in
push
fcompl
mov
lret
push
xlat
int
faddp
dec
adcl
sub
jl
jo
orb
adc
gs
inc
xchg
jge
xor
stos
mov
imul
dec
mov
jae
into
inc
hlt
mov
loop
mov
adc
mov
sbb
ret
pop
mov
test
xor
rol
jns
notb
js
cmp
pop
std
dec
inc
push
inc
mov
stos
stc
shlb
rolb
iret
mov
mov
daa
decb
push
and
xor
inc
cmc
jge
je
scas
jno
jl
xchg
cmpsl
cmp
pop
fcmovne
movsbl
mov
test
sub
cmp
out
repz
mov
pop
dec
jmpw
sbb
addl
repnz
dec
mov
mov
inc
popa
jno
inc
sti
int3
repz
pop
sub
scas
and
sbb
or
pop
stc
sub
push
sbb
ja
test
sub
or
out
lea
leave
sub
jecxz
or
sbb
push
adc
xor
jg
outsl
dec
mov
test
xor
cmpsb
mov
xchg
mov
sub
dec
out
adc
rcr
repz
das
fistl
aaa
scas
jbe
lret
push
mov
jns
pop
cmp
stos
stos
push
ja
inc
out
mov
jmp
popa
xchg
movb
hlt
add
lds
jne
jne
ret
xor
push
adc
push
jbe
test
hlt
xchg
aaa
dec
xor
or
imull
addb
pushf
sarb
aam
mov
lea
dec
movsl
les
dec
xchg
push
xor
enter
mov
insb
mov
mov
push
loopne
sbb
lods
jb
outsb
stc
ljmp
iret
inc
jmp
xorb
sub
pop
mov
cmp
sti
pop
call
pop
jae
in
sub
jl
inc
in
jecxz
inc
mov
nop
cmc
cmpsl
xchg
sahf
icebp
jb
and
imul
xor
int
cmpsl
rcrb
cmpsl
movntq
push
imul
ret
and
cltd
mov
cwtl
sbb
in
lahf
mov
xor
stc
shlb
lds
fldl
lret
xor
xchg
pop
test
ljmp
sub
adc
jecxz
xor
inc
pop
cld
int
test
mov
out
out
xor
cli
icebp
sub
sbb
mov
sub
inc
in
or
sub
sub
pop
dec
lds
daa
stos
inc
movsb
mov
mov
or
ror
sahf
testl
in
jns
aam
inc
leave
cmpsl
mov
testb
jne
in
lret
mov
mov
adc
xor
push
gs
xchg
and
mov
add
out
insl
mov
lret
addb
cwtl
stc
sarl
subl
out
adc
out
mov
sahf
sbb
push
sti
call
cmpsb
sbb
cmc
mov
jmp
pusha
jg
shrb
sub
inc
fs
cmp
js
inc
daa
imul
test
mov
sbb
fsubl
push
sbb
inc
add
imul
sbb
xor
lahf
test
sub
push
out
scas
das
std
add
in
pop
in
sbbb
push
pop
in
arpl
xchg
xchg
mov
mov
or
cli
add
cmp
out
ret
jg
add
mov
cmc
ds
mov
push
inc
call
inc
push
mov
fsubl
pop
dec
mov
lret
push
lods
dec
mov
cmp
sub
cmpsb
inc
fiadds
lock
jb
xchg
in
add
hlt
inc
mull
push
and
xchg
mov
les
shlb
inc
push
sub
pmulhuw
cmpsl
cmp
push
inc
shlb
cltd
pop
clc
lods
daa
fisttpl
cmp
fwait
jb
sbb
cs
jmp
mul
push
dec
sbb
movsl
out
inc
dec
jae
mov
in
clc
std
aad
lcall
mul
push
es
lret
xchg
fdivrs
sbb
jo
push
push
pop
xchg
adc
cmpsb
cs
mov
lahf
xchg
repnz
pop
lea
pushf
decb
xlat
loop
jnp
mov
jmp
lret
loopne
or
std
mov
xor
pop
ror
cmp
push
cmp
call
xchg
insb
jl
lods
iret
ds
push
repz
push
pop
sbb
sbb
add
cmp
push
subb
sbb
add
cmp
fiadds
out
sub
loope
cmpsl
aad
push
repz
mov
jb
stc
movsb
movsb
fistps
stc
cli
mov
sbbb
dec
cmp
loopne
push
stos
inc
push
push
add
std
dec
xor
sub
inc
fstpt
leave
mov
inc
sarb
lock
mov
xor
aaa
jnp
push
sbb
pop
jmp
inc
jno
push
mov
push
ja
add
test
addr16
aaa
jbe
shrb
jae
add
gs
and
lock
sub
rclb
jns
fwait
or
push
les
imul
test
xor
xor
sahf
mov
push
cmpsl
insb
mov
mov
pop
gs
inc
hlt
or
push
adc
popf
lds
cmpsl
sbb
inc
movsl
adc
popa
enter
jb
and
inc
dec
jmp
orb
daa
or
mov
sub
push
pop
adc
or
call
pop
or
out
inc
adc
mov
push
sti
call
or
lock
pop
test
xor
fdiv
xor
repnz
mov
add
mov
mov
jle
imul
rclb
shrb
and
or
mov
jge
or
lea
sbb
ja
cmp
test
jo
jbe
add
xchg
xchg
push
lret
pop
loopne
lods
lret
cmpsl
inc
imul
cmp
imul
adc
mulb
dec
pop
adc
leave
lcall
mov
sahf
sbbl
icebp
sub
pop
pop
sub
sub
fwait
push
add
add
adc
push
gs
sbb
cld
sub
mov
cmpsl
mov
add
adc
push
inc
imul
in
lahf
popf
inc
and
in
mov
push
or
jge
mov
xor
fs
fwait
cld
clc
rol
sbb
pop
xlat
inc
pop
or
and
popa
adc
imul
test
aas
in
int3
adc
push
test
dec
push
push
adc
shl
enter
idivl
push
mov
mov
inc
push
aam
or
pusha
cs
aam
data16
or
cmp
stos
sbb
in
aaa
bound
stc
jne
mov
mov
into
xlat
xlat
or
jbe
pop
mov
xchg
pusha
cmpsl
mov
pop
inc
mov
inc
flds
nop
lahf
jle
jb
mov
jo
faddp
fidivs
inc
jmp
push
cmp
aas
out
cmp
test
les
jp
lods
xchg
cmc
inc
mov
aas
mov
sbb
daa
jg
inc
icebp
jecxz
jae
add
fidivrl
sarb
popa
sbb
push
pop
ss
ja
add
cmp
inc
push
sbb
and
add
pop
push
sub
xchg
roll
icebp
jl
xor
add
lods
and
dec
pusha
adc
popf
je
jno
imul
xchg
and
aas
aad
jnp
pop
enter
inc
jecxz
icebp
lds
enter
pop
jp
jnp
mov
scas
in
add
mov
jne
mov
call
outsb
jae
imul
xchg
xchg
subb
call
sub
jae
jl
push
ret
stos
icebp
cmp
mov
imull
mov
cltd
inc
xchg
into
test
aad
sub
dec
lahf
movsl
scas
xchg
jnp
lods
pop
rolb
sbbl
dec
dec
mov
pop
pop
cmpsl
push
fcoml
jmp
flds
add
pop
in
or
ss
mov
enter
jecxz
pop
xchg
iret
icebp
mov
pop
inc
out
mov
pop
cmp
xchg
jle
lret
outsb
dec
das
xchg
mov
call
stc
dec
jae
dec
addr16
xor
fsubl
push
fsubr
sbb
cs
test
repnz
popa
clc
orl
inc
cli
out
ja
pop
jnp
mov
enter
xchg
push
mov
rorb
push
fidivrl
jbe
jle
outsb
add
int
xchg
mov
cld
inc
imul
jg
lret
std
and
scas
addb
jb
jnp
scas
push
cmpsl
xor
les
push
push
insl
hlt
and
std
mov
cmp
adc
xchg
into
cwtl
fs
or
fiaddl
xorl
repz
or
cmp
mov
int
icebp
or
push
into
aad
lret
jl
ja
inc
sbb
jl
sbb
lea
xchg
je
pop
pusha
imul
xor
cmp
inc
jmp
xor
in
mov
aaa
push
stos
fldt
xchg
sbb
and
jae
inc
clc
addr16
jp
adc
out
mov
clc
sbb
xchg
sub
cmp
dec
pushf
or
mov
mov
pop
inc
les
loop
bound
sarb
lcall
dec
testb
sub
sbb
add
xor
cmp
fstps
push
outsl
test
adc
pop
mov
fistpl
imul
adc
dec
push
daa
mov
xor
andl
xor
pop
ljmp
inc
push
add
lods
mov
imul
out
xchg
jbe
ret
into
jae
scas
loope
adc
sahf
imul
push
adc
add
dec
jle
sub
vphaddbw
lcall
add
jnp
xor
push
loopne
in
push
loop
adc
dec
adc
add
stc
fwait
pusha
pop
mov
ss
das
jnp
xlat
clc
xchg
test
push
adc
je
push
mov
pop
inc
loopne
sbb
out
fisubs
and
sub
pop
xchg
jbe
cltd
out
enter
adc
inc
lods
lock
repnz
pop
cmp
lds
and
lods
adc
les
add
pop
lcall
iret
inc
gs
push
ret
mov
sbbl
inc
int3
xadd
push
xor
cmpsb
xchg
push
jno
sbb
xlat
jnp
std
adc
imul
out
pop
fwait
inc
jne
outsl
loop
lret
repz
mov
test
les
inc
sbb
xor
stos
add
cmp
xor
repnz
loop
inc
add
popa
sti
pop
adc
outsb
dec
shlb
xor
mov
rorl
insl
mov
push
int3
add
sub
mov
jp
jl
jae
cmp
adcl
push
sbb
repz
pop
add
jae
pop
mov
cmc
out
cmpsb
fstpl
addr16
push
adcl
bound
pusha
xchg
jne
cmpsb
addr16
mov
adc
inc
mov
fisubs
data16
mov
cmpsl
ljmp
gs
sbb
lds
xchg
fs
andw
and
stc
inc
mov
ret
dec
and
sbb
inc
negl
xchg
adc
dec
inc
cmpsb
sub
cmp
cmp
and
cmp
cs
sbb
stos
lret
dec
pop
jnp
movsb
push
dec
loop
mov
xor
inc
jmp
mov
or
daa
xor
int
mov
movsb
lret
iret
pop
cmp
inc
ss
or
and
js
cmpb
js
std
mov
fidivl
dec
sub
inc
cmp
dec
mov
leave
gs
push
int3
rcrl
paddsb
sub
dec
jns
xor
or
inc
ds
jmp
add
cmp
dec
inc
mov
int
sbb
aam
data16
push
mov
fwait
stc
arpl
lahf
mov
mov
orl
mov
jnp
sbb
outsb
or
fidivrl
fwait
sbb
jg
movsb
pop
test
cwtl
std
aas
enter
pop
push
fiadds
out
or
fs
sahf
xchg
fistps
cmp
les
outsb
mov
int
lcall
jo
mov
jg
aam
sysexit
stos
clc
lea
out
popa
pop
xchg
and
jp
sub
enter
or
inc
xchg
movsl
pop
dec
mov
jg
sub
or
add
ret
and
push
sbb
mov
pop
xlat
loopne
mov
sub
test
bnd
inc
and
cmp
jl
nop
push
inc
ja
cli
pop
dec
dec
jae
ret
sub
fiaddl
cmp
ret
xchg
in
fnsetpm(287
xor
addl
push
js
nop
push
mov
mov
lret
ret
in
aas
incb
xor
xchg
scas
icebp
pusha
popf
or
fstpl
pop
dec
shrl
insl
movsb
add
fs
cmpsb
divb
cmp
loopne
cmp
dec
fbstp
xchg
and
into
pop
and
in
mov
lods
inc
cmpb
adc
mov
rolb
jb
cmp
mov
stc
xchg
pop
dec
and
pushf
adc
mov
cmpl
nop
ds
cltd
mov
xchg
add
or
add
std
mov
jp
gs
jbe
or
xor
sbb
sahf
mov
add
test
shll
test
aad
lcall
js
lods
dec
pop
jl
pusha
out
and
roll
sub
adc
jecxz
outsb
mov
adc
sbb
in
outsb
sub
xchg
popf
ret
lds
mov
pop
outsb
cmp
xchg
push
cmc
pop
test
and
sub
sbb
or
inc
xor
cwtl
mov
fmuls
rorb
pop
cmp
mov
inc
iret
cli
mov
mov
sbb
cmp
or
or
pushf
sub
inc
jno
mov
sub
fiaddl
mov
lcall
lcall
leave
ljmp
fimull
int3
pop
xchg
dec
dec
and
jmp
mov
cld
rolb
dec
jno
addl
idivb
js
pop
mov
insl
sub
and
mov
adc
dec
insl
sti
ja
xchg
mov
stos
enter
fcmovb
jae
sti
sbb
mov
pop
mov
movsb
mov
xor
fnstenv
pop
push
pusha
pop
arpl
dec
ds
pop
xor
jg
and
pop
jg
or
inc
and
add
neg
xchg
xchg
movsl
movsl
and
add
cltd
mov
push
les
jg
mov
jl
stos
jg
lock
pop
jne
test
adc
orb
pop
outsl
jns
xchg
imul
mov
lods
fisttpl
shl
jnp
push
mov
dec
adc
dec
mov
addl
jo
arpl
pushf
das
mov
sub
xchg
in
sub
roll
jmp
mov
push
jl
ja
inc
push
adc
pop
jl
imul
dec
into
mov
inc
adc
mov
mov
dec
xchg
xorl
mov
push
and
fadd
adc
aas
inc
fistps
bound
js
mov
inc
adc
sbb
add
pop
test
dec
lea
lret
xchg
cmp
mov
outsl
int3
fcoml
addb
aas
mov
xchg
enter
dec
inc
in
mov
repz
dec
sti
fadds
leave
sub
shlb
out
add
clc
pop
xlat
subb
jl
xor
cmc
xchg
adc
lcall
inc
mov
scas
cmc
psllq
jb
add
sub
jno
rorb
jmp
jecxz
imul
adc
pusha
jge,pt
inc
cmp
das
lret
jl
out
adcb
mov
movsl
dec
stos
lahf
fwait
imul
mov
sub
push
cli
pop
stc
ror
rcrl
mov
mulb
add
das
push
das
inc
mov
bound
push
ret
ret
or
mulb
add
movl
out
sti
xchg
jno
les
insb
cltd
fimull
dec
aaa
dec
sub
pop
mov
addb
dec
pop
mov
dec
pop
jl
int
insb
mov
inc
cmpsl
enter
repnz
fildl
xor
fistl
xor
adc
testl
pusha
sub
push
cmp
push
mov
out
insl
shll
jnp
fdivl
mull
rcl
cmp
adc
adc
mov
sbb
xor
jns
xor
adc
clc
out
push
ffreep
inc
or
jbe
mov
lcall
bound
and
dec
add
psadbw
cmp
jb
scas
inc
ret
mov
fbstp
xchg
and
ds
and
push
or
lods
add
push
cmp
jge
mov
pop
cli
adc
imul
cmp
dec
xchg
xor
into
mov
int
pop
ja
test
adc
loope
sbb
cld
inc
mov
pusha
mov
daa
pop
sbb
xor
pop
jmp
lcall
add
inc
loope
mov
mov
mov
repz
dec
outsb
inc
adc
add
xchg
test
sbb
dec
sbb
sbb
cmp
jg
ss
cmpb
mov
aaa
popa
fdivs
in
pop
cmpsb
test
sbb
inc
aaa
sub
bound
add
pop
sbb
mov
mov
pop
push
loopne
cmp
jbe
data16
and
and
loop
aaa
sahf
inc
aad
inc
jmp
jnp
adc
and
add
lret
add
mov
leave
jecxz
and
or
stos
into
icebp
xlat
push
in
xlat
adc
jge
push
inc
add
int
ljmp
pop
pop
cmc
inc
subb
call
loop
popa
inc
jle
mov
or
leave
sub
ss
cmc
pop
mov
or
xorl
mull
push
ljmp
xchg
inc
lret
testb
xchg
or
fst
leave
aas
gs
inc
outsb
pop
push
and
pop
rolb
ret
ret
fimull
mov
out
ficomps
in
hlt
cmp
mov
adcl
cwtl
add
cld
mov
clc
icebp
lcall
add
xchg
aam
push
outsl
sbbl
xchg
xchg
pop
repz
mov
cmpsb
clc
call
aam
mov
popf
mov
push
jecxz
adc
sahf
pop
cli
fadds
xchg
imul
loopne
imul
aas
out
mov
pop
push
or
pop
mov
dec
repz
ja
push
jle
lea
mov
and
or
cmp
inc
and
bswap
adc
gs
pusha
xchg
mov
sbb
fs
push
test
sub
xor
add
jp
jl
std
mov
inc
pop
dec
push
xchg
mov
cmc
addr16
add
loopne
sbb
stos
mov
add
mov
aam
scas
mov
popf
inc
sub
aad
inc
adc
lret
mov
xchg
sub
out
js
pop
lods
push
ret
out
jae
sub
dec
adc
jo
adc
in
add
insb
aaa
loopne
repz
push
ja
filds
jb
sbb
loopne
xchg
andl
inc
sar
aam
xchg
adc
mov
inc
outsb
mov
inc
outsb
shll
dec
dec
imul
pop
orl
pop
ss
in
push
movsb
mov
arpl
and
pop
jg
int3
pop
push
dec
push
sub
dec
sbb
push
and
jl
pop
shrb
mov
frstor
xchg
insl
add
mov
cltd
push
repz
xchg
or
fsubr
add
daa
out
dec
pop
adc
mov
insl
push
pop
fcmovu
pop
in
pop
and
xchg
mov
je
sub
cli
mov
hlt
mov
test
data16
jge
jle
shll
popa
pop
jp,pt
dec
out
lcall
and
push
cmpsb
sub
dec
loopne
pop
ja
std
pusha
into
inc
mov
mov
or
dec
add
push
ja
inc
nop
ds
lods
xchg
jmp
and
adc
pop
pop
jp
pop
xchg
fsubrl
mov
or
mov
push
fcomps
adc
dec
mov
dec
out
push
leave
outsl
jo
or
lcall
scas
dec
pop
daa
shrb
pop
ja
faddl
sahf
stos
ret
les
push
push
mov
test
hlt
aaa
pop
into
out
cmp
inc
add
dec
push
xor
cmpsb
hlt
ret
push
sbb
xor
test
cltd
arpl
out
enter
adcl
test
aas
call
pop
mov
cmp
in
cmp
test
mov
pop
adc
inc
mov
sub
hlt
adc
pop
jmp
xchg
faddl
add
add
sbb
ja
dec
out
ljmp
mov
fprem
rcrl
mov
jp
mov
out
leave
push
sub
outsb
mov
pop
fs
pop
inc
jb
stc
add
and
andb
fldl
lods
cmp
fdivl
and
xor
adc
and
fcmove
scas
and
lret
sti
mov
mov
cmp
adc
ja
out
ret
ficompl
push
leave
inc
test
imul
decl
int
sysenter
cmp
pop
ficomps
adc
pusha
stos
pop
jecxz
jle
aas
dec
dec
fwait
add
push
lock
int
jg
xor
inc
lcall
mov
cmp
inc
push
pushf
icebp
pop
imul
test
or
cmp
into
into
scas
mov
pop
push
cmp
mov
push
inc
dec
add
testb
push
bound
sbb
hlt
subb
sbb
lock
pop
mov
add
sbb
mov
jp
push
rorb
mov
clc
out
and
enter
xchg
inc
fidivrl
test
xor
sbbl
or
sub
xchg
jmp
sbb
and
insl
jbe
adc
ds
ja
cmp
inc
loopne
addr16
cmp
push
cmp
dec
adc
cs
pop
push
daa
notb
push
mov
inc
mov
std
jmp
fs
xchg
js
imulb
outsl
lahf
cmp
mov
sub
mov
sub
inc
cmc
or
sbb
push
cltd
mov
pop
add
pop
xchg
cmpsb
sbb
push
pop
sub
test
rorl
and
mov
xlat
mov
cmp
mov
cli
fldl
leave
test
xor
or
andb
faddl
pop
mov
cmp
jle
test
mov
and
xor
dec
out
and
in
dec
insl
dec
or
and
pop
sub
add
movsb
arpl
lods
push
jl
cli
sti
xchg
xchg
repnz
js
fistpl
xchg
ret
outsl
cmc
addl
mov
in
pop
loop
ffree
fsubl
sbb
adc
je
dec
das
out
xor
test
cld
cmp
roll
mov
sbb
mov
push
mov
cs
cli
sbb
and
add
mov
dec
cmp
sub
dec
pop
sbb
dec
adc
jle
jae
aaa
sub
pop
jl
inc
cmp
sub
or
call
jne
ja
inc
sub
push
scas
clc
stos
or
loopne
pop
divl
mov
push
dec
clc
aaa
jecxz
scas
jecxz
out
xchg
add
ljmp
ja
pop
cmp
andl
mov
xchg
mov
mov
push
in
pop
sub
push
repz
nop
lods
cs
xchg
dec
jp
or
jl
mov
and
pop
push
push
int3
mov
in
mov
enter
mov
rclb
stos
stc
sbb
lock
xor
jb
pop
lret
xchg
addr16
xor
pop
jg
mov
push
lahf
xchg
nop
jp
daa
nop
dec
add
pop
jne
push
push
shlb
jg
sub
gs
or
push
decl
xlat
dec
lahf
cld
dec
inc
mov
inc
stc
push
testb
add
stos
mov
test
jl
adc
cli
cmpsb
dec
or
clc
ficoml
push
cltd
in
cmpb
pop
icebp
imul
mov
xlat
inc
arpl
ds
pushf
push
cmp
push
addr16
loop
ljmp
iret
lock
and
jnp
jae
in
dec
rolb
pop
data16
jle
sbb
loop
es
out
jge,pt
out
in
nop
pop
pusha
adc
inc
push
cld
add
shr
mov
jnp
js
push
call
mov
lock
cs
jle
shlb
ja
enter
pop
ds
cltd
sub
xor
cltd
sbb
js
subb
nop
cmp
or
dec
push
imul
test
movsl
dec
jp
in
mov
cmp
push
loop
lods
cmp
push
rorb
jmp
loop
add
push
sub
arpl
adcb
cmp
clc
lea
xlat
mov
imul
cmp
inc
movsb
outsb
lcall
jmp
scas
out
adc
das
inc
pop
xchg
sbb
data16
lcall
dec
push
adc
imul
dec
in
inc
push
jle
pop
xchg
mov
inc
incb
push
cmp
cmp
out
xchg
pushl
ret
or
aaa
or
inc
cmp
or
mov
pop
stos
enter
sbb
adc
xor
fldl
cmc
push
negb
fwait
shll
and
sub
adc
pop
std
jg
pop
das
xor
jecxz
cmp
roll
or
mov
scas
adc
mov
mull
xchg
xor
xor
scas
test
daa
adc
repz
aam
stos
and
mov
cli
scas
hlt
mov
cmpsb
ja
ss
sbb
adc
ds
push
lret
xor
pop
push
xchg
test
push
pop
test
insl
loopne
mov
ja
lahf
sbb
pop
pop
jnp
jbe
dec
sub
xchg
test
sbbb
dec
clc
or
lcall
gs
idivl
xchg
lcall
mov
cmpsl
ss
dec
popf
mov
mov
test
or
ret
dec
pop
push
jb
cmp
xor
or
push
ror
outsl
lret
cmpsb
jg
iret
xor
dec
and
cmp
sub
imul
imul
cmp
cmp
xor
out
dec
movsb
sbb
xor
xchg
cwtd
sbb
decl
jno
xor
and
sbb
ud1
inc
imul
popa
sub
loopne
jecxz
mov
cmpsl
call
fisttpll
jnp
mov
es
mov
das
mov
xor
xchg
out
shld
mov
cli
incb
mov
pop
jo
jae
xor
int3
inc
data16
sub
jle
sub
into
clc
mov
jbe
imul
imull
data16
hlt
or
sub
hlt
jle
insb
sahf
push
repnz
pop
fiadds
arpl
addr16
pop
sub
push
pop
lds
popa
rcll
fstpl
pushf
shrl
pop
add
mov
pop
or
rep
loope
cmp
mov
jmp
cmpsl
lcall
leave
mov
pop
sti
ret
lods
rorb
push
push
sub
cmp
xor
imul
mov
or
sbb
jno
out
rorl
push
adc
push
shrb
xor
ds
cmp
enter
xchg
pop
lods
mov
scas
aam
adc
outsb
das
cwtl
popf
insb
adc
push
aas
ret
sti
mov
jns
xor
mov
xchg
ja
xor
repz
cmpsl
mov
push
cli
in
int
add
int
inc
push
in
push
mov
add
mul
imul
aaa
and
cmp
gs
movsl
mov
mov
rcrb
addr16
adc
jo
inc
mov
sarl
jle
nop
scas
xchg
dec
repnz
cld
or
cld
sti
add
inc
test
cmp
xchg
mov
jle
xchg
pmaddwd
mov
sub
mov
ja
inc
jl
xchg
jb
arpl
out
gs
cmc
mov
jmp
popa
xchg
or
jbe
mov
in
push
xchg
loopne
sbb
sahf
leave
mov
cmpsb
addl
cmp
outsb
stos
ret
call
mov
push
sbb
mov
aas
inc
pop
sub
xchg
shl
jecxz
add
loop
xor
mov
jp
push
cmp
sbb
ret
lahf
fcomi
dec
subb
push
jno
dec
cmp
ds
push
add
pop
movsl
notl
and
xchg
dec
mov
and
jae
or
adc
and
mov
push
and
cs
xlat
ficoms
push
xchg
adc
inc
jbe
mov
out
dec
out
arpl
sarb
sbb
adc
sub
addl
ficompl
pop
dec
dec
test
cs
mov
in
sti
adc
es
add
pop
jae
inc
sbb
insb
adcb
or
mov
scas
pusha
sbb
lods
es
and
and
fmuls
adcb
xchg
daa
inc
add
fistpl
add
jno
pusha
push
gs
test
mov
lods
push
mov
mov
fwait
in
fsub
dec
movsb
mov
jge
out
out
and
adc
repnz
xchg
mov
and
movl
cmp
xchg
mov
lock
in
rol
and
out
mov
sar
xor
popl
fadd
imul
cmpsl
lret
mov
or
kmovb
ret
lock
push
cmp
scas
mov
inc
sbb
les
or
xor
jmp
fmuls
or
mov
cmp
mov
bound
pop
xchg
out
cmpsl
sub
jnp
mov
popf
imul
lods
cld
push
out
nop
cmp
cld
or
add
cwtl
cmp
pop
xor
cltd
add
pop
lahf
add
scas
and
pop
mov
jle
std
pop
imul
test
mov
movsl
scas
aam
sbb
xchg
outsl
mov
or
mov
push
sbb
sub
out
adc
leave
mov
testb
jbe
dec
sbb
lret
lret
arpl
adc
xchg
lock
mov
pop
out
cld
xor
lods
pop
pop
nop
dec
cmpsl
adc
cwtl
inc
pop
push
in
mulb
mov
cwtl
and
scas
push
xchg
pop
aad
xlat
pop
inc
je
sbb
inc
scas
ret
xchg
inc
cmpb
notb
mov
lcall
mov
fwait
out
stos
push
mov
push
pop
xor
mov
pop
test
mulb
imul
push
cld
stos
mov
push
andb
movsb
call
in
push
cwtl
and
test
mov
sub
pop
dec
sub
out
mov
rorb
jp
testl
stos
lcall
nopl
enter
pop
mov
out
sti
or
in
ja
inc
jbe
xor
hlt
jecxz
stos
mov
jg
aad
mov
push
pop
loopne
adc
xor
lcall
mov
in
or
insl
pop
xor
jle
adc
inc
add
bound
cmp
mov
inc
dec
push
lcall
xchg
dec
aaa
inc
rolb
mov
into
cwtl
xchg
fidivrs
loopne
mov
call
nop
jp
jmp
jl
mov
std
and
nop
adc
ret
cmp
add
mov
pop
ja
inc
and
xchg
stc
inc
push
xor
mov
scas
fwait
pop
insb
mov
pushf
dec
stos
jge
jp
xor
and
fldl
add
je
add
fbstp
stc
idiv
and
pop
fadds
adc
mov
pushf
in
sahf
sbb
in
xchg
insl
adc
pushf
inc
jne
into
adc
ret
inc
scas
mov
mov
xchg
xchg
mov
pop
pushf
and
popf
sbb
dec
add
add
jg
mov
bound
mov
shl
cmpsl
das
out
pop
adc
push
dec
xchg
mov
sbb
dec
dec
add
push
out
loopne
pop
movsb
rorb
int
fadds
rcrb
aas
ret
out
and
push
jl
shlb
jae
idiv
and
xor
rcrl
and
dec
jmp
inc
inc
pop
mov
cmp
add
and
sub
ret
mov
nop
mov
subb
cltd
sbb
fs
mov
sar
dec
data16
lea
pop
jns
sbb
adcl
repz
fwait
mov
cmp
mov
fxch
cmp
mov
and
sbb
mulb
push
and
repz
cmp
xchg
out
into
shrl
jle
pop
insb
std
iret
sub
xor
mov
mov
das
cmc
xchg
arpl
and
popf
or
movsb
xchg
mov
pushf
fsub
mov
jno
aam
nop
shrl
hlt
test
orl
or
mov
cmp
cmp
in
mov
lahf
mov
pop
aaa
int3
out
out
and
nop
mov
jle
lret
gs
jbe
arpl
mov
xchg
mov
jge
iret
test
dec
mov
xchg
sub
bnd
loope
in
jno
ret
sub
xchg
mov
mov
andl
ja
test
ja
push
cmp
jp
orl
arpl
mov
ficompl
add
fistps
or
in
jl
pop
lea
mov
and
mov
xchg
ror
inc
dec
push
sbb
sti
xchg
cmc
pop
jnp
cmpsb
leave
incl
icebp
dec
cmp
scas
ret
push
jl
adc
fistl
cli
mov
aad
jmp
inc
popa
repnz
push
xor
je
jo
pop
and
pop
add
mov
push
dec
sbb
pop
sub
cmc
and
leave
xchg
in
xor
in
pop
lds
je
mov
and
imul
daa
imul
mov
push
mov
sahf
lods
cwtl
sar
popf
repz
sarb
imul
adc
test
and
cmpsl
mov
mov
addr16
orl
neg
adc
rcrb
les
pop
in
jg
and
lock
repz
mov
out
js
sub
lock
push
adcl
or
cld
pop
mov
mov
fcomi
jne
notl
xchg
jge
fstpt
sahf
cmp
xor
cwtl
adc
adc
inc
repz
pop
mov
pop
mov
and
cltd
mov
pushf
test
and
or
push
or
cmpsl
jbe
add
mov
pop
cmpl
ljmp
es
imul
push
or
sbb
and
cmp
push
xor
push
shrb
sub
imul
mov
ja
shlb
cli
xor
ja
pop
and
xchg
xchg
cltd
push
cli
arpl
shlb
add
xor
les
mov
imul
int3
in
push
add
movsb
adc
push
test
fistl
popl
fcmove
leave
int
repz
mov
lcall
sahf
push
lahf
xor
sbbb
movsl
lds
hlt
sub
divl
cmp
ret
sub
cwtl
test
outsl
push
push
jns
sbb
repnz
sbb
adc
js
push
push
and
lcall
push
xor
mov
push
addr16
ret
sub
iret
add
mull
arpl
pop
push
rcrl
adc
rorl
mov
shlb
into
popf
cs
add
pusha
jl
jnp
cmp
inc
dec
je
sub
xor
inc
cwtl
or
pop
xor
shrb
out
insb
dec
shll
shll
xlat
jae
inc
pop
rcll
repz
adc
or
ret
lcall
jmp
add
sbb
je
jns
sbb
jp
cmp
hlt
stc
and
mov
cmp
cmc
jp
cmp
sbb
xchg
nop
in
add
ret
mov
out
pop
inc
clc
xchg
int3
pop
xlat
or
popa
sti
mov
pusha
mov
mov
xor
in
ret
cmp
push
arpl
push
add
mov
lds
cs
sti
iret
bound
inc
add
nop
inc
ret
sub
in
stos
and
mov
mov
sbb
ss
mov
pusha
xlat
shl
add
or
xor
rolb
adc
mov
xor
inc
inc
add
mov
dec
add
or
out
cmp
movsl
clc
xlat
add
out
mov
ficoms
movsl
sbb
xor
out
xchg
ss
pop
enter
in
pop
sbb
mov
jnp
xor
push
idivl
dec
mov
rcll
rcrl
lods
or
mov
sti
in
jnp
imul
mov
decl
adc
scas
mov
push
and
out
dec
and
cmp
xlat
jmp
lods
mov
int3
das
cltd
adc
fistps
add
and
stos
cwtl
cmp
push
jg
repz
loop
mov
ljmp
out
mov
std
in
push
mov
pop
fiadds
adc
xor
lcall
sub
xchg
mov
fadds
leave
bound
out
enter
pushf
sbb
push
repnz
push
sbb
shl
jo
enter
xlat
shrl
and
cmp
pop
sarl
push
shll
lea
imul
fcmovbe
cli
mov
xchg
jns
and
sbb
cmpl
shll
adc
in
or
add
imul
insb
mov
fs
pop
and
jbe
add
js
daa
xchg
cmp
xchg
lods
and
push
fmuls
jg
std
stos
inc
shll
ss
movsl
mov
pop
addr16
adc
xor
jne
jecxz
pop
push
cmp
inc
inc
ljmp
push
cld
or
stos
stos
adc
inc
pop
fiadds
roll
shlb
stos
xchg
imul
inc
ljmp
xor
rdpmc
xchg
dec
subb
xchg
mov
scas
fnstsw
jg
dec
loopne
and
fistpl
inc
iret
aam
push
ficoml
rorb
daa
mov
int3
in
xchg
stos
sti
dec
cmpsb
dec
aad
mov
fistl
mov
insl
fwait
clc
out
insl
push
push
dec
mov
cld
and
sti
mov
pop
xor
call
repz
mov
or
xchg
test
je
cs
pop
sbb
gs
je
aas
sub
sub
cmp
jp
mov
roll
xchg
js
mov
push
insb
es
push
inc
xor
push
jp
loope
add
sub
clc
push
cmp
stc
adc
jl
pop
arpl
dec
mov
js
adc
leave
mov
cltd
add
insb
stc
stc
xor
cmp
mov
into
xchg
fsqrt
sub
pusha
cmpsl
idivb
xlat
mov
mov
enter
iret
imul
jmp
fwait
jge
dec
lret
sbb
fildl
loopne
inc
sti
xchg
adc
std
sti
lret
es
test
push
insl
xchg
test
rorl
jp
and
xor
lahf
mov
push
xor
lods
inc
pop
or
loop
or
js
pop
inc
dec
mov
fcmove
rcrb
cmpsb
nop
in
fidivs
sbb
sub
mov
pop
mov
or
inc
outsl
sti
sbb
sub
sti
pop
movsl
dec
incl
xabort
adc
inc
and
sbb
cli
adc
or
mov
dec
xchg
sahf
mov
xchg
push
dec
sub
movsl
pushf
xchg
mov
or
mov
das
xorl
sbb
xchg
in
fisttpll
add
into
addl
pop
pop
outsb
mov
sbb
mov
lahf
imul
pusha
cmpsb
pop
sbb
dec
mov
adc
cmp
repnz
jl
int3
scas
lret
out
inc
dec
inc
test
outsb
lock
jge
jl
shll
or
cltd
test
dec
lods
pusha
pop
pop
aas
push
aam
popa
out
std
pop
std
sbb
mov
mov
dec
or
dec
or
mov
and
es
xor
sub
xchg
mov
adc
mov
jnp
and
sub
gs
jnp
pop
cs
repnz
or
pusha
jl
or
xor
sbb
aam
inc
lret
mull
xchg
aad
out
push
push
jno
mov
sbb
lcall
adc
insl
lcall
in
decl
adc
or
jnp
jb
rorl
jne
aaa
inc
int3
pop
lret
mov
out
andl
pop
aaa
cmp
xchg
jle
adc
insb
adc
cmp
aad
xor
and
jnp
and
aam
rcrl
es
jl
adc
push
mov
adc
push
test
xor
xor
je
adc
push
sahf
frstor
push
leave
mov
xor
pop
fbstp
stos
mov
ljmp
and
stos
jb
dec
out
xor
repnz
cltd
pop
into
mov
mov
repnz
call
and
fsts
mov
cld
fistl
popf
xor
adc
pop
pop
mov
aas
shll
popf
dec
xor
inc
and
sbb
xor
push
jmp
jo
cs
into
cli
jbe
mov
pop
js
loopne
xchg
cmpsl
add
out
dec
ret
push
and
loopne
jle
xorl
push
inc
ret
pop
push
call
push
push
xor
inc
jne
gs
enter
xlat
lahf
sbb
je
xchg
pop
movsl
dec
jecxz
subb
rorb
sbb
sbb
js
stos
cmp
shll
arpl
fmull
add
push
aas
aad
fstpl
fisubrl
dec
stos
loop
xchg
icebp
in
outsl
out
popa
or
rcr
push
lcall
jp
shll
dec
aad
xchg
int3
jmp
cmp
rcrl
sbb
xor
out
adc
push
outsb
mov
out
mov
lahf
xor
jb
and
loopne
inc
fucomip
cld
sub
cli
xchg
or
movsl
std
pop
or
mov
fcmovnu
mov
in
push
into
lahf
mov
leave
push
imul
adc
inc
addb
push
in
stos
popf
inc
lea
stos
xor
dec
cltd
lods
lods
jnp
cmp
inc
insb
sub
dec
dec
sbb
ja
pop
jae
inc
pop
push
xchg
push
cmp
pushf
and
add
ljmp
adc
stos
int
fcmovne
or
dec
pop
or
mov
add
xchg
pop
aas
shl
ja
push
mov
xor
sub
mov
jmp
inc
xor
sub
loopne
jnp
fs
movsb
xchg
cmp
data16
or
inc
sbb
aaa
jl
sub
jmp
hlt
mov
mov
or
jge
pop
xchg
std
iret
jns
lds
push
sub
jns
push
pop
lret
xor
mov
pop
imul
or
xchg
mov
mov
cli
adc
sub
xor
push
in
xor
mov
jle
mov
xchg
adc
xor
mov
lret
movsb
add
dec
lea
stos
ljmp
pusha
fsubrp
ljmp
dec
pop
push
adc
add
push
test
mov
sbb
iret
shl
movsl
pop
jae
sbb
dec
popa
pop
adc
xor
sbb
cmpsb
cmpsb
mov
mov
cmp
xor
ljmp
stos
mov
ret
adc
aam
cmp
cmp
stc
xchg
push
xor
mov
cmp
push
aas
hlt
sbb
mov
push
mov
insb
jae
jl
pop
and
push
push
ss
ss
out
popa
cld
mov
mov
testl
sub
addl
adc
into
arpl
mov
or
cmp
inc
inc
aad
inc
stos
jl
pfrcp
stos
mov
add
adc
popa
sub
pop
mov
cmp
repnz
imul
insb
push
fidivrl
test
sub
push
and
arpl
popf
imul
push
inc
out
lahf
test
sahf
enter
aam
fmul
jecxz
jo
jle
adc
dec
mov
adcl
xchg
stos
jno
aad
mov
jp
push
dec
inc
out
repnz
int3
xchg
mov
scas
mov
stc
jmp
mov
mov
pop
push
lock
mov
data16
and
jl
iret
adc
mov
loope
nop
pop
adc
scas
xlat
jecxz
pop
es
repz
movsb
sub
orl
mov
mov
jno
xchg
mov
fists
pop
stc
out
add
dec
jg
test
add
or
out
sub
push
aaa
int3
mov
mov
mov
jle
jne
insb
sarb
mov
dec
xor
xchg
cmp
js
add
es
and
sub
xchg
popa
fstps
cli
sub
sbb
xchg
mov
sbb
or
xor
pop
push
stos
test
pushf
pop
cmc
inc
les
ror
xor
mulb
je
mov
push
xlat
imul
cmovl
sti
out
push
mov
mov
push
call
jp
lret
in
xorl
pop
xchg
jne
pushf
test
cmp
in
xor
cmp
push
jb
stc
jl
cmc
inc
push
inc
adc
mov
pop
repnz
jns
xor
fistl
jo
in
jo
sub
xchg
int
sub
jg
add
inc
pusha
out
into
dec
cmpsb
mov
cmpsb
loope
loope,pt
cmp
sub
ret
mov
mov
xchg
notb
daa
push
xorb
inc
aad
jb
sub
call
outsb
add
scas
mov
jle
xorl
cltd
inc
cld
fcmovnbe
jle
jl
mov
fsts
xchg
mov
dec
add
fs
sub
into
pop
lods
popa
xor
mov
adc
jmp
pop
shlb
std
movsl
pusha
fidivrs
insb
jnp
jecxz
insl
jae
push
pop
leave
das
sub
and
push
pop
jno
jle
jnp
subb
adc
mov
sub
xchg
fnstsw
jge
pop
sbb
mov
xchg
test
loop
push
lods
jno
ljmp
mov
push
push
repnz
and
fsubrs
notb
cmpsb
test
fbld
jl
cmp
hlt
push
or
int
js
xchg
jno
xchg
push
mov
mov
repz
mov
inc
bound
add
in
jbe
shr
add
and
dec
push
in
cltd
icebp
mov
hlt
call
aad
xchg
jae
std
inc
fcomp
ret
enter
fbld
dec
rcrb
adc
shrb
xlat
sti
mov
pop
incl
cmp
ror
xor
arpl
inc
cmp
mov
adc
mov
pop
pop
cld
sti
pop
jne
orb
sub
inc
pop
fisttpl
push
shl
cmp
out
clc
outsb
sbb
lods
mov
xor
subb
out
mov
inc
subb
cmpsl
inc
push
pcmpgtw
mov
jge
sbb
jne
add
mov
fadd
mov
mov
mov
pushf
rolb
call
das
imul
xchg
pop
ret
pop
inc
dec
cmp
jbe
les
leave
lret
outsl
jecxz
adc
data16
loope
cmp
push
sbb
dec
fs
insb
sbb
push
mov
add
or
ss
bound
fldenv
popf
cmp
xor
popf
inc
inc
repnz
test
or
sub
push
mov
pop
cli
icebp
cmpl
mov
inc
inc
loope
jae
xchg
nop
add
xchg
mov
xchg
cs
mov
fadd
iret
int
out
out
mov
mov
cmp
cwtl
sbb
mov
lea
ds
out
addl
jge
dec
pop
inc
cli
loop
decb
push
sbb
das
mov
add
enter
mov
mov
cmp
lods
int
xchg
xor
lcall
movsb
and
das
add
addr16
insb
adcb
or
push
inc
cmp
xlat
ret
or
or
push
cmpsl
push
cmpsb
jle
jbe
or
ja
roll
xchg
ds
mov
jecxz
movsl
test
inc
pop
stos
sbb
testb
push
sbb
jne
pop
adc
sahf
xchg
repz
xchg
je
and
cltd
xchg
cmp
add
icebp
xor
push
sbb
push
pusha
into
dec
xor
loopne
stc
aam
je
into
mov
movsb
pop
outsb
setne
shl
and
sarb
inc
mov
neg
cmpsb
jnp
xchg
loope
call
cmp
outsl
ja
adc
lods
or
movsl
fwait
adc
or
ss
inc
scas
jo
popf
xchg
loopne
sbb
gs
repz
jmpw
adc
cwtl
dec
sahf
sti
dec
fldt
fwait
add
aas
jne
fs
and
push
imul
mov
adc
frstor
jne
pop
adc
xor
dec
inc
cmp
pmaxsw
nop
xchg
pusha
cmp
test
and
xor
cmpb
lods
aam
add
fnstsw
dec
sbb
cmp
cltd
xor
xchg
aaa
push
or
mov
es
push
movsb
subb
notb
jmp
inc
fsubrs
mov
fisubl
inc
ljmp
in
outsb
mov
pop
sbb
aam
out
push
and
xor
in
repz
and
cmp
cmc
cwtl
popf
push
mov
outsl
mov
push
xchg
cmp
loope
fstl
lds
jle
sbb
repz
mov
cmp
in
jp
jo
adc
out
imul
test
inc
test
inc
and
and
pop
cli
or
adc
dec
fistpll
fisttps
jns
and
push
jnp
sub
cli
enter
add
pop
dec
adc
hlt
rcrl
ljmp
bound
in
rcr
mov
cmp
out
int3
pop
adc
icebp
loopne
sbb
cmp
push
jns
int
mov
push
xor
sub
mov
sub
mov
push
mov
ja
fdivs
xor
clc
and
sbb
inc
gs
lock
cmp
into
add
js
in
adc
negl
pop
imul
adc
add
pop
ret
cmp
mov
push
dec
mov
jnp
dec
jo
out
push
push
lds
in
or
lods
dec
scas
mov
fnstcw
into
xchg
sbb
pusha
or
dec
call
sub
movsl
adc
pop
movsl
shrb
addr16
les
inc
push
cli
dec
cmp
adc
fidivl
in
loopne
pop
cmp
aas
pop
sub
and
dec
push
or
cmp
out
test
fiaddl
movsl
cld
push
pop
and
inc
dec
out
incl
fwait
and
xor
cmp
inc
pop
add
mov
cmp
mov
add
adc
aas
dec
dec
push
mov
cwtl
adc
bound
sub
pop
mov
cltd
test
jb
sbbb
pushf
rsm
cltd
jne
imul
aas
xor
inc
insb
mov
movsb
push
imul
jl
jne
push
int
test
fildl
cwtl
out
arpl
add
jge
or
dec
insl
and
fs
adc
mov
mov
or
push
pop
and
fisubl
in
adc
inc
xor
ficoml
or
xchg
lds
jb
cmp
mov
add
sub
xchg
sbb
test
dec
repz
in
js
loopne
sbb
xchg
add
imul
adc
sbb
sub
dec
dec
fsubrs
inc
les
inc
or
or
jg
mov
and
jne
subl
xchg
cmpsb
sub
out
inc
dec
aaa
xorb
and
int
and
add
out
push
ja
nop
pop
add
shll
repnz
pushf
ja
mov
fsts
or
or
pop
push
leave
std
icebp
insl
push
add
hlt
sbb
mov
jo
idivb
sub
xor
jne
cmc
pop
aas
inc
push
inc
inc
cltd
addr16
pop
mov
push
cwtl
out
add
sub
test
gs
fwait
or
xor
cmpsl
lea
mov
cmovb
movsb
cli
and
dec
xor
addr16
shll
lock
test
mov
js
dec
push
xchg
mov
dec
push
xchg
lea
leave
sbb
xor
cmp
lods
dec
out
into
sub
cmp
lock
insb
loopne,pt
xor
sub
test
icebp
test
into
rorb
fwait
test
jb
mov
mov
jmp
adc
leave
lahf
fidivrs
xchg
fdivl
movsl
inc
out
clc
mov
jmp
dec
sbbb
mov
jle
leave
aas
dec
adc
jmp
pop
ret
les
mov
in
jbe
ficomps
mov
and
fs
sbbl
scas
leave
push
les
aad
fwait
insl
bound
cmp
mov
xchg
cld
mov
roll
jne
mov
pop
popa
xor
call
sbb
lret
cmc
test
sbb
push
push
aas
ljmp
movsl
mov
aad
and
rcl
push
jo
dec
jl
cmp
adc
add
mov
test
mov
enter
mov
mov
push
adcb
pop
mov
cmp
in
mov
je
sub
data16
fsubrl
cwtl
mov
xchg
clc
dec
adc
mov
or
mov
adc
jb
jp
das
xor
cmc
mov
xchg
lea
adc
adc
or
adc
inc
mov
cs
cld
int
pop
hlt
xchg
loopne
xchg
sbb
xchg
or
fwait
or
xor
data16
pop
pop
ror
inc
lahf
addl
mov
std
jb
mov
sbb
jl
lahf
xchg
int3
add
mov
pusha
or
lahf
cli
mov
sahf
sbb
sub
aaa
inc
lea
xor
mov
js
cld
mov
push
leave
insb
sbb
sahf
adc
mov
fstps
sub
jp
sarb
mov
mov
push
cmp
out
aad
fisubs
add
das
mov
xor
mov
adc
enter
push
nop
pusha
mov
lock
sbb
pop
pop
mov
lods
cmp
mov
cmp
mov
data16
jo
ja
jae
jnp
pop
mov
gs
out
xchg
inc
pop
and
mov
xchg
adc
cmc
lret
popf
shl
push
add
jecxz
and
scas
pop
add
sahf
test
cmpsb
push
adc
xlat
movsb
mov
addb
xor
loopne
xchg
inc
adc
addr16
pop
cs
or
dec
addb
push
mov
idivl
lahf
popa
fisttps
fidivrs
fistl
xchg
lds
jo
clc
jecxz
lock
mov
sub
int
adc
and
hlt
sub
mov
aaa
adc
or
inc
testb
out
subb
shlb
scas
pop
outsl
xor
mov
xchg
subb
fwait
pop
mov
add
icebp
std
inc
or
fwait
dec
movsb
or
nop
mov
std
push
mov
inc
sbb
addr16
jo
fdiv
leave
add
inc
es
push
mov
jbe
fldenv
lods
les
push
dec
and
pusha
adc
cld
lea
mov
add
adc
bound
or
mov
mov
mov
mov
or
aaa
aam
inc
leave
sub
push
nop
jmp
mov
js
test
in
dec
out
lret
pop
push
aad
xchg
adc
push
inc
dec
add
adc
popa
mov
dec
jp
aam
push
mov
arpl
shlb
lcall
ja
cld
stc
xchg
sbb
xchg
outsl
bound
cmp
add
mov
popl
sti
pop
mov
or
xor
inc
movsl
fldl
dec
fildll
sub
push
imul
and
push
movsl
adcb
sub
mov
in
clc
sub
inc
or
les
daa
insl
jecxz
sbb
xchg
pop
adc
and
sahf
imul
popf
loop
cmp
out
cmp
lods
xor
inc
stos
mov
mov
adc
ja,pt
out
jno
sub
nop
jmp
in
cmp
stos
inc
mov
mov
addr16
fimull
cmp
notb
ret
push
ja
in
add
mov
int3
sub
sbb
fwait
mov
mov
mov
pop
pop
xor
pop
test
test
pop
outsb
mov
fs
pushf
call
das
cmp
aaa
adc
jmp
xchg
add
movsb
sub
jbe
jo
out
mov
jge
cmp
rcr
lds
xchg
cmp
mov
aas
test
xchg
out
and
add
xchg
mov
dec
inc
inc
jb
mov
adc
xchg
mov
push
daa
jb
aad
xorb
out
ss
xor
movsb
jne
jnp
mov
jecxz
jecxz
sub
sub
incb
aaa
add
cmp
dec
push
in
out
dec
mov
subb
aam
not
pop
incb
les
sub
sbb
cli
out
into
xchg
jnp
jns
fistpl
add
out
clc
outsb
pop
daa
cmp
ret
add
dec
pop
stos
push
mov
shrb
mov
xor
xchg
scas
enter
repz
in
movsl
cwtl
push
jae
test
sbb
insl
pop
fdivs
cmc
push
jecxz
or
xchg
pop
mov
jg
sbb
adc
orl
sub
sub
cmp
rol
insl
into
push
bound
sub
xor
xor
sbb
inc
or
xor
xor
inc
cmp
pop
mov
or
mov
cltd
and
adc
fstps
push
dec
lods
jne
inc
out
ja
push
pop
cld
iret
mov
stc
sbb
movb
xchg
les
in
mov
cmp
cmp
dec
push
nop
aas
daa
movsl
mov
pusha
pcmpeqb
test
pop
pop
ss
ljmp
push
add
jno
pop
mov
lret
ret
mov
in
les
push
out
dec
sub
dec
out
sbb
push
movsb
jmp
pop
dec
or
and
or
or
dec
stos
repz
push
dec
lcall
inc
inc
int
sbb
push
push
jp
out
clc
and
dec
pop
xchg
mov
shl
mov
test
outsb
fnop
jge
mov
jnp
mov
mov
push
movsb
notl
add
and
mov
mov
sub
loopne
repnz
stos
test
stc
scas
push
xchg
inc
ret
push
xor
sbb
inc
inc
or
pop
mov
lds
enter
or
mov
sub
or
pusha
pop
xor
incb
adc
decb
inc
and
pop
xchg
xor
push
jge
fisttps
push
xchg
pop
and
and
out
loope
rep
jnp
push
jnp
cmp
out
loop
dec
test
dec
jle
test
imul
out
inc
addr16
cwtl
call
add
dec
scas
bound
or
lret
inc
add
push
sbb
push
out
pop
js
scas
loope
mov
nop
sub
pop
sbb
xor
mov
mov
xor
imul
fbld
out
movb
jns
loopne
outsl
push
or
pusha
lahf
mov
jnp
adcl
jns
cld
mov
mov
mov
test
nop
mov
in
push
inc
sbb
mov
mov
mov
mov
fisttps
jnp
sti
rclb
scas
into
das
dec
jg
fdivl
shll
jo
pop
jmp
and
jmp
out
sub
mov
fcompl
inc
test
or
push
jns
enter
rol
cmpsl
pop
xlat
pop
xchg
mov
cltd
stos
push
mov
jne
pusha
fwait
and
or
adc
pop
lods
push
cmp
jb
pop
outsl
sahf
notb
fldcw
mov
or
sub
test
in
outsl
adc
sbb
clc
xor
das
mov
mov
sbb
mov
adc
scas
push
jle
ds
fiadds
mov
lods
sbb
inc
jg
mov
add
dec
je
ss
add
ficoms
jbe
mov
sbb
sbb
and
push
mov
jno
xor
add
xchg
sbb
pop
clc
dec
fmull
inc
dec
and
outsl
push
mov
imul
push
xor
loop
adc
add
ds
xchg
mov
push
xchg
mov
call
popf
mov
jne
iret
jle
mov
cmp
add
mov
ja
sub
pusha
xor
mov
sti
fidivl
sub
mov
push
mov
movsl
aaa
lods
test
pusha
mov
bound
and
inc
cltd
xor
pop
mul
daa
lcall
daa
clc
adc
add
mov
xchg
mov
xchg
push
jle
test
inc
popf
push
iret
movsl
ret
pop
adc
pusha
dec
iret
aam
sub
out
into
testl
xlat
pop
inc
stos
sub
rol
cmp
jo
sahf
add
dec
movsl
jns
xor
and
ja
mov
mov
scas
stc
leave
daa
aam
jle
pop
stos
push
cmp
fiadds
pop
subb
int3
lret
pop
and
mov
inc
outsl
and
add
je
sbb
pop
push
add
das
fstps
inc
adc
cmp
loope
xchg
push
out
mov
inc
dec
cmc
int3
sub
stos
iret
mov
dec
sbb
cmp
pop
push
cmp
int
insl
mov
mov
sub
movsl
outsl
psubw
subb
insb
iret
mov
or
cmpsl
mov
push
movsl
mov
and
add
aas
cli
jno
loop,pn
pop
mov
scas
daa
aaa
inc
push
xor
loopne
int
rorb
faddl
mov
fdivrl
add
inc
popa
jecxz
lcall
mov
sub
adc
push
dec
loopne
flds
ficompl
das
pop
dec
sbb
lods
movsb
mov
push
stc
jno
dec
pop
cmpsb
jle
sti
jns
dec
es
cmpsb
ss
xchg
stos
testl
fildl
push
jae
dec
leave
mov
rclb
arpl
pop
xor
loope
call
pop
cltd
pop
ror
leave
out
xor
jnp
sahf
lds
ja
dec
cmc
bound
int3
mov
imul
and
ret
divl
mov
out
mov
repnz
cmpsb
sarb
pop
sub
push
cmp
adc
aas
in
imul
cmp
sbb
sub
ds
push
sub
pushf
pop
and
xor
cmp
enter
cmp
dec
xchg
dec
mov
inc
xor
test
test
js
pop
dec
or
jmp
lods
pushf
mov
sbb
pop
jmp
mov
fs
in
call
lret
outsl
fsubrl
jmp
lret
sarl
jae
jnp
jmp
dec
and
pop
out
ds
pushf
cmp
mov
shlb
mov
sub
and
ds
pop
mov
dec
ljmp
xlat
xor
fld
cmp
jae
in
out
mov
jbe
xor
push
ficoms
shll
ficoml
inc
adc
aam
inc
cltd
ljmp
or
push
jmp
call
cmp
movups
cmp
int3
mov
xor
div
inc
pop
jno
icebp
lock
mov
je
cltd
inc
mov
xchg
cwtl
popa
push
add
xchg
jne
xor
icebp
std
xor
leave
pop
fs
push
sbb
pop
lds
mov
lds
hlt
lret
icebp
stos
dec
popf
jg
push
xor
push
in
mov
sub
aaa
mov
out
rcrb
inc
fldl
fisttpl
dec
push
and
or
es
jbe
mov
dec
faddl
jl
fimuls
rcl
outsl
adc
mov
push
sub
jg
pop
filds
sub
inc
ja
stc
loopne
in
fistpll
cmp
inc
fimuls
scas
jl
in
out
jae
push
push
jb
xchg
fcomp
std
push
out
lock
sbb
xor
cmp
sub
mov
jno
aas
popf
clc
popf
and
lods
mov
jb
xor
push
adcb
jo
gs
sarl
jg
push
jns
lds
inc
test
dec
jno
popa
sub
ds
cs
fcomp
mov
xor
outsl
cld
pop
jnp
or
or
je
imul
ret
loop
lea
in
sub
into
cmp
mov
test
mov
ja
mov
mov
sahf
scas
cli
jae,pt
inc
lods
add
mov
jae
insl
and
mov
sbb
fbstp
jbe
mov
or
xchg
or
shrl
or
inc
and
les
movb
stos
mov
cmp
adc
and
fs
add
imul
scas
sub
mov
popf
and
repz
push
pop
frstor
sahf
or
mov
mov
rcrl
orb
test
sbb
dec
rcrb
xor
fisttpll
mov
xchg
and
popf
push
push
add
sbb
cmp
pop
in
pop
sub
add
orb
jns
fcmovne
aad
mov
in
sbb
into
stos
enter
bound
insl
ljmp
das
jge
xchg
cli
ret
mov
push
push
sbb
adc
push
mov
dec
fwait
js
std
xor
icebp
jnp
insb
push
cmp
rep
arpl
leave
mov
shrl
mov
mov
mov
lods
jge
pop
pop
ret
gs
mov
das
adc
dec
mov
test
andl
sub
xchg
mov
fistpll
lret
push
call
out
inc
xchg
push
sub
and
sarb
adc
jns
pushf
pop
lret
movsb
or
push
aad
jle
popa
xor
cli
test
sbb
aas
sub
sub
rol
rorl
ret
jg
inc
in
inc
mov
sub
rorl
into
cmp
push
lahf
mov
insl
repz
clc
inc
lret
pop
inc
push
cwtl
and
mov
loopne
shlb
test
xor
lcall
fdivr
and
imul
sub
xor
jmp
mov
mov
leave
sub
adc
sbb
push
in
or
mov
hlt
test
mov
les
hlt
pop
xor
adc
loopne
mov
jmp
and
test
sbb
mov
xor
shl
testb
cmpsl
pop
jmp
inc
sub
pop
out
call
mov
insl
inc
ret
jle
cmpsl
mov
jnp
mov
outsl
mov
out
xchg
xor
jmp
inc
push
scas
push
fstpt
outsl
cld
push
pop
and
int
call
in
mov
jae
mov
adc
fs
out
fdivl
dec
mov
rorl
das
mov
mov
push
cltd
pop
stos
jno
repz
ds
dec
xchg
pop
and
lret
inc
push
fwait
or
into
jg
loope
aas
or
xchg
cmpsb
popf
xchg
mov
cmp
fiaddl
loope
pop
outsl
mov
adcb
negl
inc
cmp
or
sbb
sub
jne
inc
rcrl
pusha
add
mov
pop
or
xchg
int3
dec
jle
dec
stc
stos
jnp
lcall
shll
ret
mov
add
xorl
sbb
imul
xchg
sahf
hlt
inc
shlb
mov
mov
sbb
subl
xchg
cmpsb
cltd
sub
push
mov
xchg
add
add
lcall
nop
insb
out
pushf
dec
xchg
lret
pop
les
hlt
mov
ret
mov
jge
lea
jbe
addr16
pop
int
jmp
jno
jmp
inc
into
lcall
jecxz
mov
clc
add
dec
int3
stos
cmp
inc
jge
je
and
dec
add
rolb
ret
inc
lret
xor
pop
jnp
pop
cmp
adc
imul
sbb
std
xchg
push
in
aaa
lods
int
dec
std
sbb
mov
sub
lea
fisttpll
inc
add
or
sbb
mov
addr16
mov
jno
push
movsb
mov
mov
jecxz
mov
pop
and
jecxz
rclb
sbb
pop
jno
shlb
pop
clc
pop
cmc
inc
out
idivb
inc
outsb
mov
icebp
aaa
mov
mov
inc
mulb
push
sbbl
insb
orb
or
bound
and
add
lea
lcall
lcall
lods
in
mov
xchg
pop
dec
das
jg
lcall
adc
in
jg
mov
popf
adc
inc
fs
jns
and
cmp
inc
in
add
dec
shlb
movntq
hlt
sarl
mov
jle
mov
inc
mov
hlt
stc
xchg
insb
cltd
scas
push
xchg
jg
mov
pop
jl
bound
lcall
je
adc
je
dec
aaa
push
adc
fsubrl
cmp
add
sub
pop
les
js
adc
decb
das
stos
lcall
pusha
cmp
loopne
loopne
fnstsw
mov
in
out
inc
xchg
repz
sub
sbb
and
push
stos
sub
ret
xor
mov
push
fnstcw
aaa
ret
int
lret
mov
adc
sbb
ds
add
and
cmp
in
in
mov
fsubs
loop
scas
int3
xchg
cs
mov
js
test
jl
icebp
in
sbb
xchg
xchg
xor
jns
cmp
inc
roll
out
push
inc
ja
icebp
add
in
fldl2t
xor
sub
xor
pop
xchg
cwtl
push
cmc
jbe
jae
sub
jo
test
int3
repnz
sbb
mov
dec
movsl
stc
mov
push
testb
sub
push
data16
xchg
scas
insl
leave
push
jo
jb
cli
cli
mov
mov
mov
fcoml
xchg
dec
repnz
xor
push
mov
stos
test
mov
mov
xor
mov
and
test
jae
test
push
lcall
stos
icebp
adc
sbb
pop
xor
push
mov
xchg
stc
xchg
inc
pushf
xor
scas
jecxz
inc
pop
add
push
and
sbb
stos
out
xor
jp
mov
addr16
je
dec
push
nop
push
in
pop
pop
xchg
or
dec
out
loope
lods
mov
sub
aad
cmpsb
push
lds
add
mov
mov
add
outsl
jnp
fldcw
lret
bound
dec
stos
nop
xor
cli
outsb
sar
shr
sbb
decb
mov
xorb
mov
hlt
sbb
orl
adc
jmp
dec
adc
xchg
jae
xor
sbb
inc
mov
jno
shrl
push
cmp
scas
roll
push
jo
insl
mov
cmp
jge
pushf
adc
dec
stos
stos
fists
xor
js
test
pop
dec
push
jp
xchg
in
sub
mov
dec
jge
insb
call
or
inc
xchg
stos
cmpsl
das
push
rclb
cmpsb
add
mov
adc
pushf
and
push
pop
outsb
test
xchg
mov
xchg
xchg
push
arpl
pop
sbb
bound
outsb
jecxz
pop
orl
inc
sub
imul
lcall
insl
add
mov
jnp
push
dec
sub
dec
cmpsb
adc
sidtl
movsl
push
jo
pop
ja
jle
sub
roll
int3
imul
add
loopne
test
ljmp
nop
push
xor
repz
xchg
and
and
loop
xchg
arpl
jae
jno
addr16
mov
xor
adcl
cli
pop
out
cwtl
stos
loop
jo
scas
cmpsb
sub
iret
pop
cwtl
mov
xchg
cwtl
adc
jns
xor
test
outsb
sbb
jo
mov
dec
mov
pop
imul
faddl
jne
out
pop
adc
lds
aam
jecxz
add
add
lcall
push
adc
adc
xlat
std
and
fdivs
shl
movsl
lods
inc
lret
jmp
clc
mov
pop
inc
pop
cld
mov
daa
hlt
fs
pop
loop
jae
mov
pop
or
shll
sub
popf
ja
xor
mov
lret
add
mov
inc
mov
sbb
lret
jae
jbe
in
stos
add
dec
insb
sbb
pop
sbb
loope
inc
add
and
call
add
mov
jns
cltd
test
xor
jae
pop
xchg
xchg
pop
mov
test
cmp
adc
ret
mov
fmull
mov
xchg
push
fstpt
arpl
lods
jl
fistpll
stos
inc
add
jl
mov
test
inc
not
aas
sbb
subl
adc
out
sbb
lods
stos
in
cmp
subl
cmp
pop
mov
sub
icebp
mull
stc
pop
cmp
mov
mov
test
lods
leave
fcoms
jecxz
shll
sub
aad
sbb
jns
xor
rcr
and
mov
aam
push
hlt
in
mov
shll
cmpb
jp
xchg
push
subl
js
subl
inc
pop
push
cmpsb
mov
jmp
jmp
cmpb
inc
push
sbb
sub
cltd
jmp
jne
xchg
es
sub
rcr
or
mov
pop
inc
repz
daa
mov
int
shl
mov
jne
jns
mov
lret
xor
fldt
bound
mov
pop
push
jnp
pop
jecxz
aam
stos
sti
imul
repz
or
sub
stos
aam
int
xlat
rcll
and
add
adc
adc
push
or
mov
shrl
push
sbb
push
nop
dec
out
js
enter
enter
ja
jb
push
and
xor
jnp
stos
or
shll
rclb
add
gs
or
cmp
rorb
dec
inc
sbb
in
stc
push
mov
arpl
imul
inc
sbb
sbb
fwait
pop
outsl
adc
nop
inc
or
fwait
rcrl
xor
mov
fnstsw
ret
jbe
aam
xchg
stos
movsb
ss
and
out
sub
sub
push
ret
js
mov
stc
and
pop
cmp
xchg
sub
adc
push
ret
adc
ss
mov
sbb
stos
loope
add
sub
ret
in
aad
adc
xchg
mov
sub
lds
dec
push
xchg
rclb
inc
adc
mov
ds
repz
cmpsb
notl
jle
jo
dec
bound
xor
ljmp
rorb
sub
bound
push
cmpl
nop
lock
adc
call
push
dec
dec
and
mov
lret
fwait
dec
call
fcmovu
add
insb
in
imul
pop
inc
and
mov
aaa
or
shrl
pop
les
testl
jns
or
rorl
or
fcomi
roll
push
gs
pop
je
sub
orb
xor
aas
push
repnz
jle
iret
aas
adc
push
adc
pop
or
cmp
imulb
test
inc
or
mov
jb
loopne
pop
repnz
mov
pop
xchg
shrb
mov
inc
test
outsb
test
xor
fadds
sub
str
repz
pop
leave
insb
mov
xchg
rorl
cli
outsl
imul
daa
jg
adc
or
xchg
cmp
add
adc
stc
mov
or
das
dec
int3
fbld
pop
sub
lfs
push
test
jo
call
mov
mov
nop
mov
cmpsl
nop
rcl
inc
arpl
lahf
and
icebp
sub
je
mov
push
or
stos
pop
jmp
cmc
cmc
out
add
push
in
mov
imul
cmpsb
lea
loop
sahf
in
out
test
push
jmp
aad
insl
pushw
inc
addr16
mov
pushl
jnp
xchg
aam
pop
mov
out
xchg
cmp
jo
shlb
idiv
outsl
movsb
int
mov
insl
add
jns
in
movsb
out
dec
stos
sbb
mov
cmp
push
rcrb
push
mov
bnd
dec
es
insl
test
add
pop
notl
mov
jne
mov
scas
mov
inc
xor
or
sti
test
insb
lds
xor
and
pop
and
loopne
jmpw
add
xchg
sbb
inc
mov
cltd
add
push
les
add
inc
and
inc
js
push
aad
inc
in
mov
pusha
adc
scas
ja
loopne
push
add
mov
popa
movsb
mov
xchg
cmpsb
cmp
cmp
ljmp
xchg
insb
je
mov
xchg
sub
iret
and
repz
mov
push
mov
incl
imul
xlat
imul
aad
fwait
or
add
inc
pop
enter
sbb
xchg
jl
xchg
or
or
outsb
push
mov
scas
inc
aam
inc
call
cmpsb
decl
bound
into
ret
inc
mov
xor
rolb
adc
jae
inc
stos
pop
jae
pop
cltd
sbb
pop
mov
mov
les
pop
or
pushf
gs
mov
mov
rcll
incl
iret
dec
add
jmp
lret
jmp
cmp
mov
pop
jp
or
xchg
jmp
or
and
rsqrtps
xor
jno
int
or
lods
scas
ljmp
stc
xorl
push
mov
icebp
es
lock
repnz
movsl
fsub
pop
xchg
idivl
fwait
lcall
aam
push
enter
test
mov
mov
or
mov
mov
icebp
hlt
add
out
aas
cs
popf
icebp
jg
aam
jp
mov
imul
lahf
aaa
or
ljmp
mov
or
adc
leave
mov
out
mov
xor
repnz
xor
hlt
jecxz
ljmp
or
jge
movsl
lret
insb
sbb
sbb
shlb
aas
push
inc
ds
xchg
pop
xchg
add
es
rcrb
xor
pop
fidivrl
jmp
loop
enter
pop
lret
testb
es
mov
xor
cmp
inc
into
rep
pop
es
lea
pop
xor
ljmp
outsb
bound
mov
fdivs
gs
push
adc
icebp
outsl
add
frstor
sar
movsb
mov
test
rolb
xchg
call
push
pusha
sbb
jns
cmp
ret
cmp
or
out
out
stos
xlat
jbe
mov
divl
out
test
movsb
pop
xchg
jnp
xchg
xchg
std
xor
stc
jns
ficoml
mov
xchg
sub
xchg
les
jp
test
insb
push
jmp
adc
and
mov
divb
ja
mov
add
xor
and
fs
int
jno
clc
jecxz
ljmp
fcmovu
and
rol
push
hlt
cld
jge
lret
inc
pop
ljmp
insb
jmp
lock
jg
mov
dec
and
mov
enter
cmp
pop
ret
mov
inc
adc
mov
and
mov
and
daa
ret
and
and
fcmovne
pop
push
mov
aaa
jae
dec
mov
daa
xchg
pop
mov
push
outsb
into
jmp
movsb
lds
popf
push
jb
jnp
inc
lret
pop
adc
loopne
js
mov
or
in
in
jl
sub
lret
xorb
cltd
sti
mov
sub
in
push
roll
loop
lret
jbe
incb
jns
lods
dec
lahf
jno
ret
jmp
lret
push
push
out
pop
sub
mov
sbb
and
data16
iret
popf
push
mov
sub
sbb
shrb
dec
lret
dec
cmp
mov
xchg
jmp
cmpsb
xchg
fmul
scas
aaa
data16
sub
ret
out
cld
test
jnp
jne
mov
lea
xchg
in
push
pop
mov
popl
outsl
cli
adc
mov
enter
lahf
or
imul
xchg
test
sbb
inc
jge
xor
jl
in
rcrl
pop
sub
scas
sar
cld
mov
dec
sbb
fwait
or
xor
ret
aam
push
fisttps
fisubrl
cmp
jmp
xchg
sti
pusha
fcomps
bound
arpl
ja
push
jl
ljmp
outsl
xor
sbb
xchg
outsb
lcall
inc
aaa
mov
out
adc
outsb
rcl
lret
dec
and
arpl
je
and
jae
aad
ret
add
dec
movsb
xor
push
repnz
or
cltd
push
pop
pop
pusha
loope
ss
mov
push
outsb
aam
enter
mov
loopne
loop
xchg
call
fs
outsl
out
addr16
es
testb
or
and
cmp
stos
add
cli
jle
movsl
jo
outsb
or
out
fdiv
aaa
push
adc
push
sbb
push
lret
cmpsl
mov
rcrl
inc
popa
sbb
inc
test
ja
fcoml
mov
mov
xlat
fistps
movsb
fisubrs
sub
outsl
pop
dec
mov
fcmovnbe
sub
hlt
and
mov
insb
fadds
adc
push
das
sbb
lea
popf
xlat
mov
aam
push
mov
fwait
or
bnd
fcomps
jo
lret
pop
cwtl
add
or
jae
les
push
leave
in
cltd
adc
cmp
cmc
sti
movsl
lret
repz
enter
xchg
pop
ds
rcr
sub
xchg
lds
xchg
ret
std
mov
xchg
fst
insb
imul
or
add
mov
scas
mov
aas
xchg
scas
aad
sbb
cmp
ljmp
add
xchg
lds
add
sbb
sub
mov
adc
sbb
in
xchg
out
rcrl
daa
jns
cmp
cltd
jbe
adc
xor
xchg
adc
or
dec
mov
outsl
push
and
adc
inc
sbb
fisubrs
adc
test
in
rcll
cmp
sub
aaa
and
cli
jp
mov
or
lods
lea
jne
cmp
imul
loopne
add
incb
adc
dec
sub
mov
add
mov
adc
push
jne
mov
pop
pop
or
xor
xchg
xchg
mov
aaa
lret
inc
jle
jmp
rcrl
mov
stc
test
pop
mov
xchg
cmp
sti
test
enter
sbb
cmp
outsb
cltd
jb
pcmpgtd
int
push
test
nop
dec
mov
push
adc
repnz
leave
fsub
out
inc
test
adc
fs
shrb
add
xchg
or
push
dec
stos
sti
jge
pop
mov
aam
scas
lea
fnstsw
pop
pop
jl
into
dec
pushf
pusha
dec
sub
shll
dec
cmp
mov
insb
jge
push
push
xchg
jg
inc
mov
stos
loope
stos
mov
in
ja
pop
and
xlat
jns
lock
pop
adc
imul
clc
cmpsb
inc
mov
push
aaa
pop
js
fistpl
ret
aam
xchg
jp
and
adc
or
das
inc
adc
les
add
fstps
mov
add
mov
fisubrl
cmp
clc
push
or
mov
pop
cld
and
fdivrp
pop
in
lods
push
push
pop
jp
out
pop
jge
test
push
mov
push
mov
ljmp
pop
cmp
mov
add
aas
scas
or
push
jae
dec
in
popf
movsb
pushl
iret
nop
scas
arpl
adcb
pop
lret
movsl
stos
and
dec
daa
cmp
popa
mov
out
mov
mov
mov
xor
shlb
ss
push
daa
mov
adc
jl
out
cmp
sbb
adc
inc
aad
sbb
lods
popf
xchg
xor
cli
xchg
jle
std
push
insb
outsb
mov
les
test
adc
shr
inc
push
rol
mov
inc
lret
ljmp
popa
fwait
push
inc
js
mov
iret
popa
cmpsb
ret
aam
xchg
cltd
dec
pop
jl
hlt
push
xchg
adc
bound
movsb
mov
push
push
push
mov
ja
add
aas
out
lahf
dec
inc
repz
enter
mov
gs
push
sahf
inc
xor
jmp
jne
or
sub
jle
in
out
cmc
hlt
xor
ret
sbb
jecxz
jmp
xor
jbe
rcrl
arpl
adc
add
push
mov
cwtl
fidivrs
push
outsb
xlat
andb
mov
sbb
repnz
ret
add
fildll
mov
dec
or
dec
pop
ja
push
orb
enter
sub
nop
scas
aad
hlt
ret
mov
xchg
sub
inc
mov
xor
test
bound
orl
adc
xchg
lahf
leave
xor
adc
cs
insb
outsb
cli
jno
mov
hlt
push
data16
xlat
movsl
jnp
leave
mov
mov
mov
fsubl
xchg
cmp
stos
loope
and
clc
and
fwait
sbb
jo
pop
mov
xor
xor
fsubrl
fisttps
std
lcall
notl
pop
jae
lahf
xchg
mulb
jns
loopne
mov
js
cmp
dec
ret
xor
push
add
jns
cmp
std
sbb
out
mov
push
inc
dec
fwait
into
testl
fs
and
test
test
and
xchg
jp
popa
jp
daa
sbb
scas
stos
lods
push
jge
sub
lret
stc
test
imul
mov
in
aaa
dec
push
sti
cltd
push
test
xor
addr16
loope
sbb
mov
in
and
arpl
xchg
dec
or
arpl
or
dec
nop
mov
pop
jne
lcall
mov
dec
xchg
out
scas
iret
add
pop
fmuls
sub
and
popf
xchg
les
jne
sub
scas
push
popa
cmp
arpl
enter
mov
std
test
pop
insb
cmp
cmp
mov
dec
pop
dec
cwtl
mov
icebp
mov
sub
mov
hlt
frstor
scas
mov
rcll
rorl
insl
add
jne
aam
mov
sbb
xchg
cmp
pop
out
clc
fdivrl
addb
fiadds
faddl
push
repnz
in
or
mov
pusha
jbe
cmpsl
pop
push
mov
pop
cmpsb
lret
mov
cli
mov
dec
xchg
mov
pop
push
jbe
inc
adc
xor
or
mov
add
push
loop
filds
fsub
or
inc
add
add
scas
fcoml
lods
mov
or
mov
addr16
cmpsl
jb
scas
xor
fldt
dec
jno
sti
xchg
cmp
xchg
push
inc
xor
inc
mov
xchg
loop
aad
jns
pop
add
adc
es
imul
outsb
pop
fildl
std
dec
dec
lock
inc
iret
adc
addr16
int3
pusha
inc
and
push
dec
mov
outsl
push
sub
push
lret
xchg
cld
mov
out
xchg
xchg
movsl
pop
fcmovnu
in
lods
or
and
leave
cltd
lahf
inc
insl
jmp
outsb
outsl
gs
xchg
andb
jne
inc
loop
lahf
lcall
jp
jbe
je
gs
cmpsl
dec
inc
adc
aad
xchg
inc
cmp
push
sarb
mov
testb
in
cmp
add
popa
mov
push
fcoms
dec
imul
xchg
fucomp
inc
sub
add
aad
cs
into
adc
ds
push
push
and
rclb
adc
or
incl
mov
sub
imul
push
jmp
jns
es
fadds
fiadds
jp
fwait
push
movsb
adc
fwait
pop
lods
dec
roll
mov
jl
int3
sub
jb
adc
mov
repz
aam
add
stos
idivb
adc
scas
and
cmp
xor
fidivl
imul
or
push
fdiv
add
or
leave
and
pop
mov
mov
jmp
push
lods
sub
push
in
xor
lock
or
mov
sbb
cmp
jae
jle
cltd
fwait
arpl
xchg
rorb
xchg
push
sbb
js
mov
nop
cmpsl
ret
and
dec
mov
xchg
addr16
ret
popa
fdivl
jecxz
xor
push
mov
mov
std
jno
jp
xchg
loope
sub
int3
xchg
lahf
lcall
es
ret
sahf
inc
jecxz
cmp
inc
iret
adc
arpl
cs
inc
sub
or
aas
pop
mov
mov
shll
es
add
jmp
daa
jge
outsl
sahf
jle
adc
mov
add
sub
push
mov
lds
in
outsb
xor
pop
out
adc
imul
xor
xchg
outsl
lea
inc
aam
lods
and
daa
mov
or
mov
pop
push
ficoml
aaa
pusha
in
in
mov
and
mov
insl
in
dec
sub
push
rclb
rolb
sbb
mov
mov
movsl
fs
inc
fcomps
mov
jge
cmp
inc
mov
add
mov
mov
psubq
fcmovnu
add
jbe
mov
fisttpll
push
not
sbb
notl
cmp
pop
bound
add
jmp
cld
mov
repnz
inc
or
icebp
add
sub
jle
mov
nop
push
sub
and
cmp
mov
or
pop
lret
call
adc
out
gs
pop
add
cmp
sbb
push
js
lods
out
sub
popa
and
jg
mov
dec
fisubrl
int3
jmp
out
push
push
lahf
jmp
rcll
jmp
stos
pop
adc
test
and
xor
mov
and
cmp
daa
mov
bound
lods
data16
jno
add
mov
xor
dec
pop
push
shll
dec
pop
mov
push
fadd
mov
stos
test
pushf
pop
xlat
add
mov
or
and
add
mov
bound
enter
roll
sbb
pop
pop
xor
mov
adc
js
loope
das
sub
xchg
daa
imul
ds
and
or
mov
out
xlat
inc
stos
iret
xor
mov
and
popf
test
push
fsub
fucomip
out
sub
icebp
add
cmp
cmp
cmp
test
cwtl
add
or
xorl
test
lods
cmp
cwtl
pushf
sahf
inc
out
rol
neg
or
movlhps
xchg
mov
js
insb
shlb
pushf
cmp
lods
push
mov
mov
pop
std
pop
push
fisubrs
iret
sub
xchg
pushf
loop
mov
scas
or
push
adc
das
hlt
pop
lock
inc
icebp
mov
arpl
stos
or
cmpb
cmp
adc
out
notb
leave
test
sbb
fmull
mov
sub
ja
jmp
mov
ds
dec
imul
adc
gs
fldcw
js
fldt
inc
shlb
pop
or
cmc
sti
orb
mov
cmovle
inc
lods
addr16
jns
aas
pop
push
fsubrs
arpl
and
test
lea
cltd
sub
or
xchg
js
add
mov
ret
cld
rcll
inc
imul
push
xlat
mov
mov
mov
out
jnp
mov
mov
adc
dec
pop
xchg
cmpsb
je
movsl
inc
xor
data16
adc
dec
mov
dec
fcmovne
adc
xchg
push
cmp
loop
mov
imul
mov
ret
ret
adc
push
push
scas
imul
jns
repz
mov
mov
add
push
out
ljmp
gs
mov
enter
movsb
xchg
mul
mov
add
adc
ja
jb
hlt
mov
push
mov
mov
mov
dec
jle
inc
cmpsl
mov
mov
cmp
mov
dec
push
pop
rcr
cld
dec
shlb
out
cmpl
xchg
frstor
add
inc
cltd
mov
inc
aam
adc
pop
mov
out
js
test
lret
sti
sbb
xrelease
ja
cmp
add
inc
xchg
jg
adc
xchg
cld
sahf
nop
mov
jnp
and
push
int3
jge
fadds
adc
data16
and
iret
outsl
add
clc
jae
adc
dec
mov
mov
dec
adc
inc
lods
mov
repz
mov
pusha
sahf
mov
add
adc
xor
dec
or
jle
inc
lcall
stos
lods
scas
ret
je
push
dec
mov
pop
fildl
mov
imul
mov
xor
push
negl
mov
xchg
push
sub
lods
pop
or
shlb
mov
mov
add
fidivl
mov
mov
out
pop
pop
testb
cli
jne
xchg
fcompl
jg
dec
out
movb
rorb
or
rcrb
mov
mov
test
inc
lahf
cmp
jmp
lahf
lea
cmpsl
ljmp
lret
nopl
cmpsb
push
cmp
mov
push
jnp
cli
cmp
das
jg
mov
call
iret
mov
lock
ds
lret
test
popf
or
jl
adc
in
add
push
lret
addr16
and
out
mov
mov
dec
insb
imul
push
lahf
cmp
ljmp
fwait
xor
dec
lods
and
loope
xor
jl
push
mov
dec
ja
jl
dec
movsl
int
jge
not
repnz
push
sahf
adc
ret
xor
cltd
out
cmp
push
mov
test
xor
add
xchg
pop
daa
pop
out
outsb
aad
stc
jp
xchg
clc
scas
push
add
cs
add
scas
xor
fs
push
mov
push
xor
mov
lcall
clc
fsts
shlb
in
add
mov
pushf
out
pop
cmp
nop
push
adc
mov
xor
push
in
xor
mov
mull
sbb
pusha
fidivrl
outsb
imul
push
jno
fbstp
dec
sarl
test
sbb
test
fisttpl
mov
pop
or
sub
and
lret
jecxz
or
cmp
cmc
movsb
xchg
in
sub
pop
arpl
out
mov
arpl
cmpsb
xchg
cld
je
push
jp
jne
cmp
into
stos
scas
adc
nop
push
aas
jbe
in
mov
add
xor
pop
inc
sub
into
jbe
cmp
sbb
and
insl
adc
mov
jo
cmp
les
popf
mov
nop
sub
stos
mov
stos
dec
cmp
mov
int3
dec
data16
inc
push
xchg
mov
mov
sbb
dec
or
pop
ljmp
icebp
xchg
fldl
cmp
scas
loop
das
ret
pusha
ja
scas
push
mov
movsb
mov
js
mov
inc
xchg
enter
sub
jns
test
jmp
inc
adcb
dec
movsl
pop
fstps
movsl
fwait
stos
or
cmp
fsin
push
test
out
jge
ja
popa
mov
and
mov
add
xchg
pop
mov
sub
adc
jg
fistpl
popa
mov
leave
push
stc
fucomi
sti
push
add
sbb
sub
cmpsb
sti
aas
cmp
add
call
fcmovbe
xchg
cli
jecxz
dec
lock
and
int3
nop
int
out
int3
cmp
clc
pop
pop
or
xor
outsl
pop
lret
scas
mov
cltd
dec
rol
icebp
enterw
not
pop
sarb
imul
xor
mov
or
jbe
clc
add
jmp
arpl
push
sbb
push
mov
pushf
cmp
ja
ja
sbb
sti
cmp
mov
rcrl
cmpsb
jle
jae
mov
inc
mov
mov
ret
daa
sbb
xor
mov
ss
dec
mov
daa
xor
filds
popa
push
sbb
push
push
lds
inc
adc
xchg
in
dec
loop
not
push
loopne
ss
int
jno
icebp
adc
fisubl
jb,pn
xor
mov
cmpsb
sub
push
clc
jge
stc
leave
lods
sbb
gs
mov
aam
mov
xchg
push
mov
loopne
pop
lret
dec
jne
lahf
notl
inc
outsb
mov
sbb
inc
push
out
test
cmp
dec
adcl
xchg
fcoms
and
xchg
mov
sub
push
insb
mov
inc
mov
mov
push
lock
cmc
int
test
stos
inc
in
dec
lret
lret
and
mov
push
inc
xchg
mov
sub
fisubrl
mov
fimull
rdpmc
xchg
mov
xor
cmc
mov
insb
out
lret
out
push
lcall
push
lcall
jmp
inc
or
sub
jnp
xchg
popf
outsb
sub
xchg
inc
adc
cs
pop
shll
sbb
sarl
pop
xchg
ljmp
cli
pop
inc
xchg
mov
outsb
pop
rorl
mov
mov
pop
push
adc
sbb
jle
xchg
cmp
add
stos
sub
mov
mov
adc
jp
orl
out
clc
sbb
rol
stc
mov
push
sbb
push
test
loopne
inc
xchg
jge
imul
lods
rol
adc
pop
pop
insl
cmp
xchg
or
cwtl
mov
pop
push
sbb
loop
xchg
sub
dec
outsb
cli
aad
mov
int3
mov
aam
movb
idivl
add
push
out
addr16
sbb
fisubrl
mov
inc
push
push
mov
inc
pop
jns
jae,pt
rcll
iret
pop
rcrb
mov
mov
pop
xchg
stos
imul
lock
jmp
pop
movsl
jno
lret
scas
xor
or
cmp
mov
orb
inc
or
jp
or
and
test
cmp
xchg
jnp
push
cs
mov
sbb
add
fsub
mov
fs
jp
inc
push
sbb
sbb
in
jmp
add
jge
mov
push
dec
stos
xor
scas
adc
push
repz
dec
jnp
xchg
das
scas
aaa
out
sub
xlat
jns
rclb
xchg
sahf
out
rcrb
dec
sbb
add
movsb
xchg
or
clc
sbb
mov
and
mov
xor
mov
dec
pop
mov
cmpsl
sub
sub
cmp
xorl
int3
dec
mov
or
jbe
aaa
cmpb
imul
push
adc
bnd
push
ss
out
mov
ljmp
sbb
xchg
fisubs
data16
mov
mov
xchg
dec
inc
mov
sub
cmpsb
div
mov
cwtl
clc
xchg
mov
sub
adc
xchg
pusha
fdivs
mov
and
lret
sbb
stc
or
jg
push
add
lret
movsl
mov
xchg
lods
insl
or
mov
inc
add
lock
nop
adc
push
call
imul
nop
pop
ljmp
add
pushf
icebp
sbb
sbb
scas
mov
push
or
fwait
pushw
xor
fdivr
push
in
jbe
out
fcompl
push
pop
aas
jg
lahf
ret
movsl
cs
je
push
push
movsb
fistpl
mov
pop
pop
std
xchg
test
xchg
sub
out
nop
pop
scas
xchg
pop
mov
inc
movsl
sar
mov
fwait
inc
lahf
adc
or
repnz
fisubrs
repz
mov
or
push
push
cmp
test
xor
xchg
push
aaa
fidivrs
inc
addb
aam
arpl
xchg
cmp
jb
dec
pop
sub
fistpll
cmp
loopne
lcall
loop
std
stos
mov
sub
dec
sub
mov
xchg
add
jmp
lock
push
lock
out
in
dec
push
pop
fwait
dec
mov
mov
add
scas
dec
mov
scas
sub
icebp
popa
mov
aad
lock
mov
adc
adc
fs
pop
sub
lret
pop
repnz
and
jbe
repnz
pop
mov
or
cwtl
sub
outsl
jno
das
fcmovnb
ss
add
cmp
insb
xchg
jp
fwait
push
leave
imul
jmp
pop
out
mov
cld
mov
subb
fimull
test
out
inc
sar
fisubl
dec
aad
push
jmp
js
xorb
lret
mov
pop
aam
fstpl
lret
iret
insb
jno
cs
xor
mov
daa
sub
push
xor
fdivrs
inc
pop
mov
mov
mov
and
pop
mov
sti
jmp
add
xchg
jmp
mov
pusha
cli
sbb
lcall
ss
sbb
mov
das
mov
dec
imul
lods
aam
cmp
pop
cmc
xlat
inc
cmp
pop
insb
les
xchg
mov
jae
xchg
push
cmpsl
push
es
mov
sbb
das
push
adc
fucomp
jl
push
lods
inc
pop
xorb
mov
xchg
cmp
pop
nop
es
jmp
mov
into
test
lods
cmpb
test
into
ljmp
mov
mov
aam
stos
test
sub
out
iret
jo
mov
test
dec
andl
pop
fucom
jb
mov
leave
aaa
repz
add
cmc
push
adc
mov
dec
push
mov
push
and
daa
hlt
iret
jle
movsb
loop
push
add
fcomps
xor
mov
data16
int3
add
xchg
mov
mov
loope
xchg
test
xchg
mov
xorb
dec
cwtl
jmp
int
nop
ja
fnstsw
nop
add
popa
stos
xchg
sbb
pop
sbb
cli
xor
jg
ljmp
cmp
ds
fwait
sbb
xchg
xchg
cmp
ffreep
jle
cmp
lahf
cld
xor
int3
inc
adc
fistpl
jnp
movsl
popf
push
movsb
clc
push
pushf
pop
cmp
in
mov
sbb
xor
pop
cmp
jnp
cmp
inc
push
mov
dec
inc
aas
mov
xchg
arpl
push
mov
nop
sbb
mov
or
mov
xor
inc
xor
nop
mov
jo
aad
xchg
pop
fsubp
addr16
outsb
cmpsb
sub
and
or
in
xor
ficoml
jne
mov
inc
aas
imul
fstpl
adc
sbb
pop
fisubl
cmc
rorl
inc
std
and
and
in
xlat
orl
adcb
jmpw
mov
adc
or
inc
ljmp
divl
fxch
popa
fldl
fsubl
cmp
in
jmp
in
aad
cmp
xlat
or
jp
push
dec
add
jo
pop
push
out
std
or
lods
test
xchg
push
lret
jle
sahf
stos
nop
loopne
outsl
xchg
push
xchg
xchg
clc
xchg
push
inc
xchg
arpl
daa
sub
das
stc
inc
loop
pusha
jae
insb
cmpsl
sub
push
xchg
dec
xchg
push
scas
pextrw
sahf
xchg
push
enter
inc
or
dec
jl
push
int
sti
cs
cs
iret
dec
mov
aaa
cwtl
js
into
cmpsb
fstps
pop
mov
mov
imul
loop
push
sbb
bound
test
call
xor
push
mov
pop
popa
inc
mov
sub
sahf
sbb
fnstenv
hlt
repz
lock
jle
mov
je
dec
pop
sarl
ret
mov
add
mov
push
push
loop
xchg
sbb
aas
dec
xchg
es
fisttpl
cltd
sbb
fldenv
daa
stc
jg
xchg
jmp
aas
pop
mov
and
mov
sbb
jns
loope
jbe
xchg
subl
inc
loope
sbb
jl
fdivrl
lret
jnp
pushf
outsl
pop
dec
testb
fldt
or
cmp
loop
dec
cmpsb
pop
jmp
sub
jne
sbb
push
negl
mov
fnstenv
or
repnz
test
cmp
pop
adc
inc
mov
lret
out
mov
push
scas
adc
dec
cltd
xor
or
add
xchg
popf
push
in
cmp
mov
pop
fsubs
or
xor
cmp
xchg
mov
mov
mov
mov
push
mov
and
and
mov
and
iret
push
pop
loopne
nop
pop
add
push
das
in
faddl
mov
scas
adc
xlat
fnsave
mov
cli
sarb
pushl
mov
mov
lahf
orl
pusha
iret
cmpsl
lret
push
add
out
clc
pop
xor
rsqrtps
mov
je
jae
repnz
jne
xor
rcll
lahf
fwait
pop
push
pop
xlat
jbe
and
cmpsb
test
nop
dec
cwtl
jo
xchg
mov
test
sbb
push
adc
xchg
ss
outsb
pop
xchg
ret
jns
push
cmpsb
inc
hlt
cld
cltd
fdiv
xchg
data16
fmul
es
scas
mov
inc
pushf
call
xchg
sti
js
cmpsb
or
pop
pop
shlb
sub
xor
xchg
das
adc
jne
mov
subl
jnp
sarb
dec
jg
mov
pop
sbb
ss
dec
lea
sbb
es
inc
sarl
jg
jge
push
mov
push
mov
mov
mov
sub
fcmovb
lret
mov
ja
jne
fsubrs
mov
lock
sbb
lea
ljmp
adc
jne
cwtl
orl
outsb
fistl
fnsave
loop
stos
mov
xor
mov
insl
ds
mov
and
fst
cmp
arpl
xlat
sub
xor
push
sahf
lret
and
adc
fsub
jo
sbb
xchg
xor
sbb
adc
sub
inc
adcb
loope
xor
jb
push
hlt
and
or
mov
pop
push
jae
enter
daa
scas
scas
loopne
stos
mov
enter
popf
js
dec
sub
mov
xor
xlat
or
loopne
iret
push
dec
mov
ds
push
jno
sbb
out
lods
leave
scas
stos
dec
shlb
inc
and
fsubs
mov
mov
lahf
dec
add
push
push
xchg
mov
lcall
inc
or
dec
sahf
test
adc
dec
leave
sti
cmp
cs
sub
fsub
adc
push
and
sub
add
subb
and
xchg
pop
pop
jne
in
adc
mov
fldenv
addr16
pusha
cmc
cli
mov
mov
popf
sti
ficoml
dec
sbb
cmp
push
and
lds
cmp
repz
mov
jno
jo
inc
mov
xchg
rolb
icebp
pusha
mov
fmuls
ss
scas
stos
push
in
std
mov
icebp
mov
data16
cmp
clc
mov
add
mov
movsl
ljmp
fisubrl
cmp
sarl
pop
std
or
sub
lret
ss
cli
ret
cs
pusha
inc
pop
cmp
ret
jmp
cld
leave
dec
out
lret
and
in
stos
fwait
dec
gs
lret
jge
add
icebp
add
insb
incl
fldt
cmpsb
inc
aaa
stc
sub
and
daa
sub
fcmovnb
ffreep
cmp
lods
ret
shl
pushf
sbb
fs
dec
dec
imul
addl
push
imul
cli
and
out
stos
inc
xchg
mov
jns
pop
rcll
and
into
imul
enter
inc
add
addr16
lds
sti
adc
je
xor
in
xchg
lds
dec
and
cltd
fwait
pop
cmp
cmp
inc
fnstenv
and
out
mov
loop
movsl
imul
cmp
adc
out
xor
dec
ret
mov
xchg
xchg
out
or
add
ret
pusha
sub
inc
popf
fmul
cmpsl
push
mov
xchg
jns
stc
xchg
jo
popa
mov
cmp
iret
mov
loop
jmp
stc
mov
ss
rcrl
test
hlt
mov
sbb
inc
xchg
inc
jno
push
push
insb
inc
movsb
sarl
mull
aas
int3
cli
mov
adc
ret
je
movb
test
mov
or
leave
inc
pop
popf
and
jo
jp
test
and
sahf
std
push
push
jnp
cmp
jg
fiaddl
icebp
add
sub
mov
mov
push
imul
add
pop
or
or
pop
outsb
not
dec
jno
lea
das
cmp
jb
int
mov
mov
test
ljmp
call
push
push
mov
stc
sbb
div
dec
or
std
iret
push
sub
and
xchg
sbb
das
xor
mov
xor
inc
in
out
cmpsb
pop
mov
test
sahf
dec
sbb
data16
call
fnstcw
pop
mov
dec
stc
push
in
sbbl
inc
shrb
add
sbb
jecxz
adc
sbb
cmc
cmp
mov
add
iret
sbb
xchg
mov
xor
xchg
adc
in
sarb
cmc
lods
and
rclb
enter
movsb
arpl
sahf
stc
and
into
sbb
fcoms
lcall
andl
ss
xor
or
dec
paddw
xchg
xchg
dec
add
sbb
add
mov
out
xchg
mov
cmp
jle
mov
out
xchg
in
adc
xchg
inc
mov
dec
adc
dec
rorl
vpavgb
addr16
cmpsb
outsl
clc
nop
mov
mov
rcll
fstl
mov
push
les
aad
insb
xor
adc
stos
and
mov
mov
push
ds
xorl
add
mov
xchg
sbb
outsl
inc
cmp
cmpsl
push
jb
mov
pop
cwtl
cmpsl
jb
mov
xchg
fimuls
push
rorb
adc
xchg
loopne
pop
aam
sub
cmc
cwtl
lret
xor
jecxz
shrl
aaa
xor
outsb
daa
adc
mov
xchg
stc
xchg
mov
and
adc
iret
and
push
aam
fs
ds
insb
mov
xor
mov
andb
sarb
cltd
leave
xchg
cmp
dec
stos
jmp
fistl
pop
pop
adc
inc
sbb
cmpsb
adc
jbe
aas
ljmp
xor
cmpsb
push
pop
add
push
or
xchg
xchg
mov
aas
pop
xchg
loope
aam
jle
jg
aad
aad
jecxz
out
adc
in
dec
out
lcall
sub
xchg
xchg
mov
das
sahf
aaa
movsl
pop
shl
popf
je
test
addr16
inc
push
jmp
and
jnp
push
sti
jge
sbb
dec
fisubl
jno
ret
mov
mov
lea
fcomp
xchg
icebp
lea
add
adc
shl
push
mov
xchg
xorl
cwtl
xor
rcll
mov
push
mov
dec
insl
iret
ret
pushf
fcoml
aaa
aas
and
push
pop
repz
fildl
pop
sbbb
sbb
push
xor
mov
insb
push
adc
shll
sub
clc
mov
adc
inc
mov
pop
push
icebp
jmp
adc
or
aas
mov
ret
repnz
push
mov
adc
inc
cmc
cmp
adc
xchg
pop
cmpsl
sbb
adc
jns
mov
cmp
inc
push
dec
sbb
add
bound
dec
int
arpl
push
inc
xor
loope
dec
add
movsl
cmp
add
hlt
loop
cwtl
jnp
mov
cmpsl
xor
cmpsb
inc
mov
sbb
mov
int
jbe
and
div
push
loop
les
fstpl
xor
loopne
mov
sbb
inc
xchg
addl
outsb
mov
mov
std
out
dec
xchg
mov
or
call
jnp
dec
lahf
xchg
fadd
sarl
out
aas
add
mov
mov
movsl
ja
mov
repz
push
es
fildl
jmp
ror
jge
lret
into
test
xchg
sbb
lahf
outsl
sbb
xorb
shlb
mov
lea
mov
sub
push
jo
sub
mov
cmp
jg
mov
aad
out
add
out
rol
push
std
xchg
popa
das
gs
lret
pop
adc
in
jmp
push
cmp
sub
test
repnz
inc
arpl
xchg
inc
mov
push
outsl
loop
iret
sbb
jns
hlt
inc
cmp
or
inc
add
shlb
jo
mov
addl
push
pop
loop
outsl
push
adc
adc
sbb
and
test
test
enter
adcb
sbb
addr16
lret
cli
mov
inc
mov
cmp
int3
cmp
push
dec
pop
push
pop
xchg
pop
add
sub
lods
xor
leave
hlt
adc
mov
xchg
push
push
inc
jnp
jle
jne
or
inc
std
mov
xor
adc
mov
pop
ljmp
sarb
je
mov
add
ficoml
xchg
ffreep
jne
vshufpd
mov
xor
adc
pop
js
adc
stos
scas
imul
add
aad
data16
pusha
dec
push
sti
or
add
scas
pop
jae
cli
in
xor
mov
inc
aad
addb
enter
out
mov
inc
shlb
pop
or
inc
stc
in
sub
dec
sub
scas
outsl
and
ljmp
push
add
jp
mov
stos
fwait
movsb
js
xchg
std
hlt
jge
int
xor
xchg
add
insl
fnstenv
mov
enter
jno
adc
shr
cmp
sahf
ja
xor
or
push
lret
cld
or
mov
sub
jg
and
jmp
xchg
pop
iret
push
icebp
jae
iret
add
ficomps
hlt
xchg
rcrb
out
cmp
inc
arpl
in
dec
ret
mov
es
dec
orl
je
rol
jno
sbb
adc
pop
fldl2t
outsb
jne
or
pop
adc
adc
addr16
lret
dec
add
sub
call
mov
addr16
imul
push
pop
loopne
lret
push
es
aam
xchg
ljmp
push
jns
cwtl
adc
rol
fs
adc
sub
and
cli
jnp
mov
lods
stc
loope
and
jecxz
enter
bound
mov
dec
cmpsb
inc
adc
push
stc
inc
cmp
cmp
data16
pop
je
cmp
pop
mov
push
lds
cli
aad
jbe
and
shrl
ja
xor
pop
adc
test
mov
or
push
mov
cmp
fs
rolw
adc
gs
push
stc
jg
mov
xchg
je
fwait
dec
std
testb
adc
inc
imul
or
shr
or
add
pop
pop
dec
stos
adcl
clc
inc
push
adc
insb
push
pop
hlt
sub
jg
dec
stos
popf
sub
inc
adc
lods
xchg
push
push
arpl
rorb
sub
and
jno
lahf
stos
xchg
ss
adc
cmpsb
arpl
pop
or
mov
inc
xchg
data16
sub
pop
movsl
sub
and
push
and
xchg
aaa
jecxz
sub
das
call
pushf
rorl
xchg
mov
dec
adc
aad
sub
dec
sub
cmpsl
ss
push
or
and
arpl
adc
ja
imul
das
cmpb
lea
add
ljmp
popa
cmp
shlb
jno
sbb
or
rcrl
and
popf
repz
sub
pusha
cld
dec
test
outsl
popf
loop
xchg
ficoms
sarl
mov
dec
dec
hlt
cli
cwtl
mov
test
and
jge
fmull
sbb
clc
out
sti
pop
mov
add
repz
xor
ds
xor
mov
sbb
insb
rcrl
push
popf
and
jo
in
xor
enter
addr16
push
xlat
popa
rclb
ljmp
das
inc
icebp
push
popf
xlat
push
vmread
out
fisubs
lahf
xor
iret
in
inc
sub
lock
das
mov
add
dec
cmp
mull
add
test
pop
add
out
push
insl
jbe,pn
inc
push
mov
and
dec
mov
clc
mov
xor
sub
mov
adc
push
pop
inc
test
loop
sub
jg
sarl
sbb
dec
sahf
inc
popf
cmc
aaa
xor
addr16
lds
adc
cmp
cmp
xchg
push
jns
adc
repz
or
inc
enter
inc
dec
insb
mov
adcl
push
dec
xchg
adc
pop
jns
idivl
rolb
bound
mov
adc
stos
lock
das
js
sbb
pop
out
mov
inc
and
int3
shlb
push
aad
jge
aaa
mov
fstpl
out
jmp
xor
sub
sahf
in
sbb
repnz
xchg
sbb
js
leave
add
dec
adc
add
and
clc
cmpsl
mov
pop
push
inc
mov
out
jnp
cmp
outsl
fs
pop
mov
scas
mov
int3
fisubrs
lcall
sti
fs
cmc
jmp
mov
inc
sub
rcrl
rorl
xor
ljmp
add
mov
popa
cmp
popa
jg
stos
mov
fcmovne
push
cmp
insb
cmp
or
lods
push
jle
pop
sub
imul
fstps
inc
test
adc
jmp
push
pop
ficomps
adc
movsl
inc
cmp
incl
push
mov
ja
in
sahf
scas
loop
pop
jne
popf
jecxz
xchg
sbb
aaa
or
sysenter
inc
inc
jge
xor
int3
clc
fidivrl
cmpsl
and
sub
mov
mov
mov
jae
jne
mov
fistps
push
movsb
aam
cmp
enter
lret
arpl
mov
jo
ds
insl
std
pop
adc
inc
xor
push
mov
stc
xor
stc
idivb
movb
dec
fisubrl
std
xor
jge
aas
cmc
sub
ret
orb
mov
and
xor
jmp
bound
lock
icebp
and
sub
mov
xor
fwait
ret
call
jecxz
jbe
int
iret
je
sbb
ss
lret
sub
sub
inc
stc
cmpsb
hlt
test
dec
xor
movsb
dec
jno
mov
push
lcall
rcr
inc
dec
inc
icebp
pop
jle
test
fwait
pop
pop
mov
imul
jg
out
ret
sub
xor
inc
mov
mov
inc
or
lods
movsl
iret
data16
xchg
mov
cmpsl
or
stos
out
lgs
fldenv
xchg
pop
lahf
hlt
mov
jmp
shrb
ror
in
dec
mov
aad
es
enter
arpl
cli
push
icebp
lea
test
xor
andb
inc
bound
leave
lods
shrl
pop
push
lods
jns
push
iret
lods
stc
nop
shl
push
sub
in
push
dec
lock
ja
repnz
insl
push
pop
dec
mov
pop
fistps
mov
and
pop
xchg
test
bound
movsb
loop
sub
pop
push
jns
stc
xor
stos
push
and
test
xchg
xor
pop
test
pushf
mov
in
mov
cltd
notb
push
cli
jb
mov
add
xor
pop
jecxz
movsl
adc
pop
push
push
scas
add
sub
ds
sub
sbb
mov
mov
xchg
lret
pop
dec
add
and
cmp
addr16
add
xor
test
sub
clc
dec
push
add
cmp
fwait
xchg
push
xchg
mov
inc
mov
sub
adc
jecxz
mov
add
or
jbe
cld
repz
sub
mov
int
pop
sbb
shrb
out
or
mov
fstpt
aam
pop
ret
in
xor
clc
cltd
sub
xchg
or
add
cs
loope
out
sbb
sub
fsubl
jecxz
out
jmp
nop
mov
inc
out
lahf
repz
cs
jge
and
nop
push
faddp
jo
jmp
mov
div
mov
jle
push
push
or
gs
divb
pop
je
lock
and
das
pusha
jecxz
push
adc
sub
cld
jae
ja
lods
pop
pop
lcall
lea
xchg
inc
sub
jno
std
mov
mov
pushf
sbb
movsb
xchg
mov
dec
cltd
and
aas
outsl
cmpsl
popa
dec
pop
ljmp
pusha
add
repnz
add
push
stc
ja,pt
adc
push
bound
xor
pop
shrl
push
andb
cmp
push
mov
pop
stos
and
pop
pop
xor
cwtl
int
jo
imul
lods
out
push
cmpsb
add
fwait
add
test
fwait
fwait
jnp
cmpsl
lea
out
decl
ds
xchg
rol
mov
repz
inc
mov
lock
sbb
mov
ret
xor
mov
lahf
add
xchg
mov
or
dec
ja
xchg
inc
ror
js
inc
cmc
xchg
sbb
jo
pop
dec
jg
pop
outsl
xorb
jmp
rol
out
testl
jecxz
push
popa
cmp
xchg
outsl
lds
and
xchg
adc
mov
sahf
mov
in
pop
sbbl
push
sub
mov
inc
pusha
xor
pop
bound
mov
add
out
jecxz
adc
loop
les
sbb
jecxz
add
nopl
mov
dec
mov
xchg
push
inc
in
sbb
shll
fidivs
cmp
lret
popf
or
mov
inc
dec
inc
mov
mov
inc
pop
cld
cmp
inc
xchg
dec
in
orb
jns
lods
mov
or
insb
in
fcomps
xchg
cmpsb
fidivrl
adc
sbb
ds
xlat
ret
mov
lea
xchg
lea
mov
jl
jns
or
xor
xor
jmp
std
jmp
aad
mov
pop
aaa
jbe
mov
push
aaa
jb
sahf
push
lods
ret
dec
movsb
dec
cli
or
cmp
js
loope
sub
pop
ljmp
test
and
cmp
sbb
dec
sbb
fdiv
xor
and
stos
mov
jno
data16
ds
add
mov
pop
or
push
cld
stos
repz
imul
inc
hlt
arpl
int
pop
fwait
mov
xor
pop
xlat
xchg
dec
xor
jl
dec
test
inc
aas
dec
ljmp
inc
jno
dec
inc
testb
insl
adc
cs
push
jge
sbb
repz
fldcw
bound
cmp
sbb
jne
aam
jmp
xchg
mov
pop
xor
sub
or
push
sarb
stc
out
sub
jo
xchg
mov
xor
cs
xor
test
mov
sbb
jle
xchg
test
std
sbb
fsubrs
sbb
cli
xor
and
adc
cmc
cmpsb
cli
outsl
iret
sub
loop
shll
stc
out
loopne
pop
push
movsb
int3
adc
cmp
outsb
mov
mov
pop
je
push
dec
adc
push
push
gs
fistpl
cwtl
cmp
enter
ss
rcll
insl
pop
repz
call
fidivs
cmpb
jne
pusha
mov
sti
mov
dec
xchg
mov
mov
sub
cmp
adc
pushf
les
out
rcrb
aas
ss
push
jb
int3
cmp
movsl
shlb
scas
pop
push
ret
mov
push
mov
dec
and
out
pop
adc
xor
add
int
aad
sbb
mov
imul
addl
jecxz
stos
sub
inc
ljmp
lcall
arpl
mov
inc
push
sub
sub
iret
outsl
arpl
mov
push
cmp
mov
pop
pushl
inc
dec
hlt
js
test
xlat
adc
aaa
inc
xlat
jle
mov
roll
adc
mov
cmp
jb
lahf
mov
sbbl
xchg
mov
jmp
in
xchg
testb
dec
push
push
xchg
jo
test
fdivp
data16
mov
inc
mov
and
lods
stos
mov
mov
add
sti
cmp
adc
or
sbb
dec
out
push
dec
insb
mov
test
lret
lea
pop
out
out
mov
cltd
clc
test
adc
fldcw
or
call
cmc
push
adc
mov
inc
mov
push
imul
movsl
cmpsb
add
test
out
dec
or
inc
aad
pop
leave
sbb
mov
inc
push
push
or
push
pop
gs
add
xor
xchg
divb
dec
jmp
mov
fldcw
push
js
cld
shll
lods
fwait
imul
mov
fsub
xor
fisttpll
adc
ret
pop
clc
jl
cmp
jbe
xlat
push
xor
ljmp
xchg
adc
cmp
push
repz
xchg
push
imul
cmp
jle
dec
arpl
hlt
das
adc
lods
mov
fwait
ret
out
icebp
aas
xor
loope
or
sub
addr16
adc
fnsave
pminsw
addr16
daa
sub
mov
sub
rorl
daa
fmuls
sti
bound
outsb
in
jno
jno
mov
add
mov
test
pop
out
push
push
shr
fnstcw
pop
xchg
repnz
pushf
add
negl
lret
fbld
pop
cmpsb
xchg
mov
js
jl
mov
xchg
and
xchg
lods
mov
hlt
inc
gs
rolb
xchg
sub
popf
mov
stos
hlt
stos
adc
orl
dec
adc
dec
test
out
je
test
add
jo
cmp
mov
repnz
pop
es
sti
mov
push
test
mov
mov
jp
adc
sub
or
and
xor
mov
ljmp
dec
aad
jle
sub
mov
inc
jg
sbb
mov
cmc
add
sbb
adc
inc
call
pop
stos
push
in
insb
ja
inc
fisubrl
xchg
fidivrs
arpl
subb
loopne
loop
aaa
xorl
cmc
lods
loop
xor
sbb
sbb
pop
jg
sbb
sbb
push
push
sub
stos
xchg
and
dec
mov
jb
cli
addb
mov
shll
sbb
ret
das
fst
jp
add
in
call
lret
xchg
cli
inc
cmp
call
out
lds
ja
movsl
jnp
arpl
add
mov
movsl
inc
test
dec
xor
inc
fisubl
movntq
std
jne
fs
cmp
push
daa
outsb
sbb
daa
outsb
shlb
jne
mov
fs
cmp
enter
cmc
push
and
cmpsb
out
lea
mov
arpl
adc
cwtl
scas
into
lret
stos
repz
push
fs
pop
jno
lods
xchg
xlat
xchg
ret
pop
mov
cmp
icebp
pusha
fs
or
fisubl
add
aaa
jecxz
les
js
fld
fcmovne
and
mov
sbb
inc
jl
decl
lcall
rcl
cltd
dec
dec
enter
inc
push
push
imul
sub
clc
cltd
xchg
test
fimuls
es
adc
xchg
fwait
mov
xchg
sub
pop
adc
xchg
xchg
js
or
inc
sub
sub
mov
jns
ja
ja
out
adc
out
add
arpl
fcomps
pop
es
pop
sub
repnz
mov
and
loop
and
push
and
ret
imul
mov
mov
jp
pop
orl
dec
and
sub
dec
and
inc
pop
mov
xor
mov
rcl
xor
test
push
mov
pop
cltd
and
cmp
inc
add
inc
and
call
imul
icebp
xchg
call
xchg
fsubrs
lret
dec
aaa
inc
push
cmpsl
je
and
push
mov
pop
push
stos
xchg
dec
cmp
or
into
scas
cltd
loope
xchg
test
adc
and
mov
mov
jne
push
mov
out
ljmp
sbb
jns
add
cmp
cmp
cmc
sti
stos
mov
inc
sub
cmp
xor
leave
add
xchg
cmp
orl
xor
xor
rolb
es
push
or
mov
dec
inc
cmc
cwtl
cwtl
mov
repnz
sub
in
inc
mov
into
mov
jl
jnp
stc
pop
jmp
scas
out
pop
imul
daa
adc
fwait
sbb
dec
cli
jns
jg
into
imul
clc
add
inc
jge
or
mov
xchg
sbb
andb
xchg
or
mov
aad
popa
pop
mov
mov
jne
cmpsl
std
cs
out
call
repnz
or
dec
xchg
xor
test
adc
ficoml
dec
adc
and
cmp
and
xchg
orb
push
jecxz
lods
push
hlt
xchg
adcl
dec
and
push
mov
adcb
test
dec
loop
xor
sbb
xor
orb
dec
and
nop
stos
sbb
dec
lahf
mov
xchg
dec
rcrb
jecxz
mov
loop
adc
cmp
mov
pop
inc
cmp
xchg
int
xor
inc
loop
inc
push
add
das
mov
push
adc
icebp
mov
call
and
cltd
sbb
inc
ja
mov
mov
sub
sbb
cmpsl
sub
scas
xchg
adc
fistpl
pushf
mov
mov
pop
lret
cmpsb
and
dec
icebp
xchg
insl
push
ret
jnp
mov
push
cmpsb
dec
lcall
daa
fisttpll
push
shlb
ret
cmpsl
pusha
gs
aam
mov
xor
aaa
cmp
fwait
adc
jmp
je
pop
sbbl
aad
add
shrl
pop
mov
inc
fwait
xchg
out
sub
xchg
inc
fs
shlb
pop
pushf
gs
imul
dec
ljmp
push
fcomip
js
in
inc
aad
addl
mov
mov
jg
subl
imul
in
rcrl
and
pop
inc
repz
lcall
scas
cmc
mov
adc
call
sbb
cmp
push
mov
pop
adc
ds
dec
mov
rcrb
out
pop
hlt
add
and
xor
icebp
cmc
jge
mov
or
mov
les
test
les
arpl
push
fdivr
into
mov
psubsb
lret
mov
mov
cmp
mov
cwtl
xor
sub
movsl
loopne
mov
mov
inc
or
sbb
dec
xorl
in
sub
fldcw
ss
stos
ret
jg
notb
enter
mov
xor
cld
loopne
dec
inc
mov
sbb
sbb
jg
scas
aad
jle
dec
shr
bound
rclb
fs
push
lahf
in
sbbb
fstps
push
arpl
push
adc
test
icebp
pushf
sbb
fisubrl
jnp
pop
or
sub
mov
dec
cwtl
sbb
lea
push
ret
mov
mov
mov
in
daa
xchg
xchg
jp
loopne
out
push
or
fcompl
push
out
xchg
loopne
jg
and
push
out
push
adc
jo
lods
or
adc
sbb
pop
test
jno
mov
pushf
cld
inc
clc
jg
and
das
insl
add
sub
roll
pusha
inc
xor
out
push
mov
mov
inc
mov
add
in
and
mov
sbb
outsb
shrl
mov
push
movsl
cwtl
addr16
sbb
test
and
add
rcll
xor
xor
addb
cli
xchg
inc
mov
cmp
dec
mov
fwait
pushl
out
adc
add
stc
ret
out
xor
lods
stos
bound
push
or
or
inc
dec
xor
ret
cli
mov
dec
cmp
xchg
inc
js
call
mov
es
jo
mov
inc
popa
adc
test
int3
loope
cmp
leave
and
aaa
adcl
lret
and
sarb
push
popa
mov
mov
or
adc
add
pop
push
sbb
mov
lods
movl
push
inc
push
mov
fnstsw
pop
xchg
or
dec
jno
imul
inc
and
cli
addl
insl
sti
nop
xchg
mov
cwtl
sarb
stos
imul
in
js
inc
xor
cmpb
stos
sub
jae
dec
dec
mov
xor
sub
outsl
fwait
daa
gs
xor
mov
mov
pop
frstor
push
addb
frstor
ljmp
mov
dec
xor
shll
shll
jmp
imul
inc
xor
xor
add
push
imul
loope
xchg
insb
jb
add
jl
rorb
mov
pushf
icebp
negl
xlat
xor
inc
xor
fildll
add
stos
imulb
shlb
clc
push
sbb
clc
bound
xor
fistps
sub
and
add
mov
je
add
stos
pusha
out
js
xor
stos
pop
mov
pop
cmp
in
out
iret
fnstcw
ljmp
insb
jp
inc
ljmp
push
xlat
in
cmp
stc
out
add
pop
and
fadds
shrb
out
push
incb
inc
ficompl
sub
mov
xchg
movsb
mov
fs
push
cmp
cmp
push
movl
imul
int3
push
jmp
mov
xchg
pop
mov
sbb
dec
lods
mov
adc
rcrb
das
or
add
in
pop
jo
push
xchg
lea
xor
push
mov
xlat
jg
pop
and
outsb
js
sbb
jae
jns
data16
out
mov
out
mov
mov
movsb
mov
jnp
movsb
sbb
jno
add
in
sub
xchg
int3
nop
bound
loop
adc
mov
movsb
stos
jns
repz
outsb
aad
cwtl
cli
push
dec
mov
inc
movl
test
and
add
jmp
lock
sbb
sub
mov
rol
ja
add
ljmp
pop
or
addb
hlt
sub
iret
or
ljmp
iret
aaa
fimuls
fwait
into
or
inc
jge
mov
mov
inc
fs
cld
mov
orl
mov
push
mov
lds
js
push
mov
mov
cmp
sub
adc
testb
lock
sbb
imul
cltd
orb
movsl
jmp
xor
cmp
xchg
sub
jo
mov
push
ficoml
adc
mov
dec
adc
sti
jg
xchg
mov
shlb
push
aas
outsb
inc
pop
out
repz
iret
pop
inc
pop
or
negb
ss
push
mov
insb
cmp
mov
cmc
sbb
lcall
mov
pop
xlat
jne
in
xor
js
test
add
aad
mov
xchg
adc
bswap
mov
adcb
sbb
fldenv
loopne
cmp
arpl
outsl
cmpsb
pusha
rcrb
in
xchg
push
aas
test
pop
scas
lock
pop
leave
js
enter
mov
or
lahf
mov
in
dec
dec
pop
insl
xchg
outsb
stos
icebp
push
orl
test
sub
mov
lods
lock
mov
dec
rcll
dec
das
adcl
sub
pop
sbb
imul
movsl
movsl
lods
push
inc
inc
scas
call
add
jns
sbb
loope
mov
dec
ljmp
sbb
in
inc
aaa
cmpsl
js
rcr
cmpl
cmp
push
and
xchg
mov
inc
pop
fs
mov
ljmp
ja
mov
outsb
fldenv
push
fisttps
das
in
call
outsl
sub
mov
hlt
loop
mulw
adc
imul
adc
mov
dec
xor
repz
adc
sbb
mov
push
push
dec
mov
adcb
test
push
aam
int3
cli
mov
rcrl
ljmp
mov
add
lds
or
inc
clc
add
mov
daa
out
jbe
outsl
movsl
aad
inc
sub
mov
arpl
stc
dec
mov
cmp
cmc
cmp
in
xlat
dec
sti
xchg
cmpsb
imul
and
arpl
adc
aam
aaa
pop
mov
adc
movsb
mov
imul
jmp
lahf
sub
dec
out
fidivl
enter
ret
cmpsb
cmpsl
pop
in
std
imull
jno
aaa
xchg
icebp
pop
popf
fsubrs
mov
jmp
jl
pop
adc
or
push
xor
sbb
dec
mov
inc
js
mov
ret
call
add
mov
xor
repnz
shrl
scas
movsl
lods
mov
aam
sub
sub
fcmovnb
and
cmc
mov
sbb
pop
push
xchg
dec
int3
add
sub
sub
ret
pop
jo
shl
mov
cld
and
out
in
sub
shlb
jae
mov
das
outsb
dec
push
cmovbe
outsb
ret
stc
pop
shll
pop
and
sar
mov
sub
mov
xchg
push
jmp
popa
popa
in
add
insl
push
pop
loope
sub
adc
jg
sbb
lret
aad
sub
lahf
sahf
imul
std
cmp
insb
cmp
ss
mov
test
mov
mov
push
xor
inc
scas
or
imul
adc
adc
lret
xchg
aaa
cmp
cmp
daa
adcl
xchg
daa
xor
pop
cmp
mov
jp
dec
lret
pop
imul
push
scas
xor
or
sbb
or
jns
sbbl
nop
mov
imul
pushf
inc
cs
add
push
shll
into
sub
adc
pop
inc
das
mov
aad
aad
mov
add
or
fadd
mov
inc
stos
or
in
dec
in
data16
cwtl
lahf
mov
sbb
sub
pop
mov
outsl
cmp
insl
add
dec
adc
and
push
adc
sti
in
or
mov
cld
enter
and
lahf
in
jno
or
sub
test
shlb
je
and
daa
lds
cmp
imul
pop
scas
inc
cmp
xor
in
orl
aam
into
adc
fs
inc
jg
mov
xor
cmp
fisubrs
sbb
out
cmp
add
dec
outsb
daa
nop
scas
hlt
or
sarl
jo
push
xchg
or
sbb
fmull
pop
mov
push
es
data16
loope
jnp
lods
inc
xor
xor
scas
aad
outsb
push
xlat
mov
or
pushf
lahf
dec
pop
xor
leave
pop
jns
sahf
addl
pop
or
shll
push
xor
pop
mov
mov
test
push
daa
and
cmovae
pop
xchg
repz
dec
mov
loop
sbb
loope
xchg
mov
pop
fsubrl
xor
jb
mov
test
push
into
in
and
data16
stos
ljmp
jge
in
and
insb
stc
rolb
push
data16
rcrb
negb
cmpsl
inc
add
out
jg
adc
loop
mov
sub
push
arpl
xor
push
cmp
sti
daa
sub
xchg
and
cmpsl
jge
adc
mov
fisttps
lods
fstps
ja
ret
mov
mov
nop
addr16
enter
jne
push
push
int
add
jae
fs
mov
xlat
aad
xchg
repz
xor
loop
cmp
jmp
call
test
jge
fimull
adc
je
mov
hlt
cld
shlb
ja
add
inc
idivb
jle
mov
or
inc
popa
inc
lods
xor
adc
or
pop
or
adc
sbb
mov
sub
xor
push
push
inc
xchg
repz
mov
jg
stc
xchg
in
in
clc
push
or
int3
xchg
sub
sub
es
in
pop
xchg
jne
and
cwtl
sub
jp
pop
hlt
movsb
xor
subb
sbb
aas
pop
movb
pop
aas
add
pushf
jle
cmp
add
gs
dec
sub
test
dec
mov
daa
lret
mov
push
out
add
mov
out
imulb
mov
scas
rorl
xchg
aam
xor
mov
pop
neg
pop
pop
xchg
xchg
mov
jae
and
and
arpl
or
hlt
xchg
pop
stos
cld
push
jg
into
xchg
adc
lcall
lret
movsl
lock
jge
lahf
cwtl
daa
cltd
mov
pop
fiadds
xor
jg
insb
mov
cld
aam
jo
jne
fnsave
mull
mov
fs
cmpsb
add
flds
dec
xor
sub
sbb
push
in
and
push
jl
add
jp
mov
jno
sbb
loopne
xor
xchg
adc
mov
outsb
xchg
imul
xor
and
push
mov
inc
jecxz
cmpsb
imul
push
icebp
xorl
pop
movsl
pop
sub
inc
push
add
dec
sahf
mov
cmpsb
cli
mov
pusha
fs
cltd
cmp
orl
jbe
out
and
jno
xchg
pop
sbb
mov
repz
and
inc
push
cmp
mov
mov
movb
movb
pop
cmc
jle
imul
xor
xor
ljmp
inc
xor
lods
and
daa
dec
pop
fs
arpl
loope
mov
fwait
xchg
cmp
nop
shl
stos
int3
pusha
lods
push
ret
jge
jb
fsubl
mov
aad
std
dec
insl
scas
orl
xor
in
add
repz
and
mov
fmuls
mov
int3
es
xor
lea
and
outsb
push
sub
jmp
ds
prefetch
bound
mov
push
cltd
cmp
das
cld
mov
imul
aas
inc
aad
cmc
ret
jb
cmp
in
icebp
or
sub
outsb
rcrl
lock
gs
stc
mov
pusha
pop
mov
mov
icebp
sub
jl
test
or
stc
addl
fstpl
aas
adc
shll
test
idiv
add
adc
adc
mov
mov
jbe
and
iret
ljmp
or
and
sub
jg
das
sarl
mov
movsl
xchg
pop
out
mov
lock
into
out
xor
mov
outsb
mov
jnp
jne
pop
add
xchg
dec
inc
je
les
fstpl
xchg
inc
sbb
addb
inc
xor
in
lahf
test
sbb
or
cmp
jge
stc
ja
insl
loopne
pop
cmp
iret
mov
aas
cltd
adc
call
cmp
lahf
sbb
mov
xorl
push
test
or
mov
iret
pop
sub
mov
clc
in
mov
insb
cwtl
pusha
outsb
stc
lock
mov
pop
into
sub
sub
in
pop
jecxz
push
pop
inc
mov
test
jg
lret
add
fmuls
in
subb
repz
ljmp
and
sub
out
xlat
repz
push
les
mov
pop
mov
loop
adc
stc
mov
cmp
scas
testb
aas
sti
cli
push
inc
mov
mov
ja
in
and
inc
add
jno
loop
xor
popa
sub
mov
scas
adc
mov
xor
mov
aaa
jnp
add
movsb
sbb
sub
fistpll
in
int
or
sbb
mov
sub
xor
dec
in
mov
pop
loopne
ds
stc
in
or
mov
mov
inc
sbb
lret
imul
jle
ljmp
int3
mov
cmp
push
jmp
sbb
xchg
xchg
movsb
xchg
hlt
and
push
rorl
sub
and
pop
out
pop
push
jno
mov
sub
and
pop
fists
roll
mov
into
xor
out
or
stos
stc
xchg
mov
and
inc
jns
push
nop
pop
cli
push
pop
push
cltd
adc
popf
sbb
dec
test
popa
mov
je
jp
push
or
push
jae
in
sbb
lock
pop
adc
adc
xchg
jle
data16
add
and
lods
test
iret
mov
sub
scas
push
add
mov
scas
pop
jl
loopne
enter
xor
stos
daa
int
leave
dec
dec
pop
andl
push
shlb
pop
enter
push
and
outsb
sbb
mov
mov
and
fs
push
cwtl
add
push
clc
sub
adc
sbb
mov
dec
into
je
cmp
popl
mov
xor
addr16
mov
inc
sub
push
mov
sbb
xchg
lods
ret
jmp
cmp
push
fsubrp
fisubl
negb
cltd
jno
mov
ret
lret
movsb
xor
push
lea
addb
pop
shrb
ljmp
push
or
mov
sbb
mov
or
xlat
sbb
nop
push
and
dec
xor
xchg
stos
dec
aad
pop
jle
cltd
mov
aaa
jne
lahf
inc
stc
inc
mov
jp
in
xor
xchg
adc
fisttps
les
lock
jge
xlat
jae
sub
jno
sbb
loope
jl
mov
ja
imul
pop
jb
fs
pop
aas
cmc
add
mov
movsb
mov
xchg
inc
sub
mov
push
mov
sbb
stos
mov
dec
mov
ja
addr16
dec
sub
lods
mov
cmp
fld
xchg
dec
sbb
add
repz
adc
pop
dec
inc
enter
and
cld
and
test
adc
cwtl
sbb
lods
or
frstor
pop
imul
or
and
ljmp
xchg
mov
mov
dec
int3
jl
call
and
sub
lods
scas
sub
or
test
mov
insl
inc
sub
mov
out
push
repnz
inc
xor
mov
lods
sbb
je
roll
lea
jmp
adc
push
fimuls
je
add
cli
sub
movsl
je
cmpsb
popf
sub
mov
xchg
out
arpl
inc
and
pop
cld
xchg
shl
push
not
data16
dec
imul
mulb
push
mov
ja
pop
xor
pusha
popa
lahf
adcb
mov
jnp
bound
sbb
mov
mov
xchg
orb
lahf
sub
xchg
shrb
lcall
mov
lret
cmpsl
fxch
pop
sub
repz
pop
mov
nop
test
test
sub
imulw
rcl
imul
or
and
inc
xchg
out
jne
xchg
adc
test
popa
pop
lods
xchg
mov
mov
mov
shlb
xchg
subb
cwtl
shrb
mov
ds
cmpsl
mov
pop
jo
out
lret
xchg
pusha
mov
in
leave
mov
dec
cmp
out
outsb
insb
ds
cmpb
popa
roll
pop
iret
push
sbb
addr16
sbb
lock
inc
sbb
xchg
pop
roll
movsl
inc
hlt
add
or
rorl
dec
sarl
push
adc
in
shlb
fildl
ja
int
cmp
outsl
mov
icebp
fdivrl
in
popa
subl
std
adc
and
mov
dec
roll
cmp
jecxz
fisubrs
std
mov
xor
fmull
xor
cmp
clc
loope
aad
add
aam
ret
fucomi
jne
mov
and
sets
clc
xorb
dec
js
out
lods
shl
cmp
cltd
pop
les
in
mov
dec
xchg
stos
and
and
jg
sub
mov
mov
call
fstpl
sub
cld
jns
jno
stos
stos
sbb
cmp
test
bound
fstpt
out
jmp
arpl
jl
xchg
push
fiadds
mov
sub
ret
xchg
repnz
aam
je
or
dec
mov
add
test
pop
xchg
xchg
fmulp
rcll
loop
gs
dec
mov
or
and
sub
stos
notl
push
jl
fs
enter
inc
push
ret
and
fstps
xchg
loopne
gs
mov
push
out
pop
add
jle
dec
mov
insb
hlt
fadds
in
outsb
jo
xchg
je
mov
fistps
pop
inc
mov
cs
es
shll
call
fdivrl
dec
cmpsl
out
repz
adc
add
iret
out
imul
or
mov
push
orb
js
shll
negl
lods
lock
jae
adc
loope
test
sahf
jnp
loop
add
pop
out
mov
ljmp
cmp
pop
or
mov
mov
adc
ljmp
ss
in
nop
sbb
mov
xor
push
inc
pop
push
fsubl
mov
xor
shrl
xor
add
fldcw
sbb
fs
icebp
out
xlat
jne
add
clc
adc
xor
jmp
fcmovb
add
dec
data16
lcall
adc
ss
or
sahf
sub
mov
arpl
xchg
in
out
add
enter
out
cmp
xchg
xlat
orl
clc
or
cmp
and
pop
mov
into
pushf
sbb
jge
push
xchg
fs
addr16
scas
mov
insl
mov
cmp
clc
xor
jmp
xchg
sub
pop
mov
mov
mov
cmp
xor
and
sub
scas
add
cltd
mov
ss
pop
jb
int
jnp
es
mov
ja
jmp
rcll
in
adc
int
add
cmpsb
dec
sub
jge
pusha
lds
nop
xor
mov
mov
test
push
sbb
je
sub
scas
pushf
lea
dec
imulb
xor
stos
or
scas
jmp
add
xlat
test
mov
xor
ja
xor
adc
fs
pusha
aas
jne
je
mov
stos
sbbl
fsubp
stc
sub
rclb
mov
and
inc
es
lods
inc
jo
dec
lock
popf
in
add
jbe
push
push
sahf
rcr
fsubrs
and
add
cltd
mov
cmpsl
sbb
dec
das
mov
mov
adc
xchg
out
out
push
aaa
mov
sub
fidivrs
daa
cmp
nop
and
test
cmp
adc
jae
dec
add
jge
movsl
sub
push
rclb
out
inc
pop
push
aaa
fcoms
imul
shll
dec
cmp
sbb
adc
in
xchg
addr16
popa
cmp
jle
pusha
or
cmp
cltd
sub
ficomps
shlb
pop
arpl
adc
jo
sbb
mull
outsb
rorb
cmpsl
lret
pop
jle
jge
pop
cmp
dec
cmpsb
sub
mov
incl
stos
sbb
pop
mov
int
jl
xchg
sbb
add
mov
push
jno
adc
fnsave
out
push
dec
sbb
test
stos
or
das
cld
fdivl
dec
jno
mov
loopne
mov
imul
lock
sarl
aad
push
pop
push
and
pop
add
ja
scas
fsubl
xchg
jae
je
or
xlat
cmp
push
mov
dec
fstpl
fwait
lret
cmp
adc
lahf
into
mov
push
jns
movsb
loop
sbb
lret
shlb
lock
out
mov
loope
jo
es
outsl
fisttpll
pop
push
sahf
out
cs
test
sbb
inc
cmp
pop
outsl
test
das
push
clc
subl
mov
andb
sbb
sahf
push
je
and
out
cmpsl
fldpi
in
push
iret
push
pop
add
loope
test
enter
cmp
lcall
adc
lcall
add
repnz
or
enter
sbb
jg
pop
push
mov
mov
xor
dec
push
subl
cmc
jnp
shlb
adc
stos
mov
ret
pusha
stos
ret
dec
aam
notb
leave
icebp
dec
jnp
sahf
dec
xchg
and
pop
mov
mov
sahf
xchg
cmpsb
inc
pop
mov
mov
add
test
call
pop
pop
sub
xor
hlt
in
das
out
xchg
cld
loopne
or
data16
lock
and
jno
std
jecxz
or
xchg
out
dec
inc
mov
xor
dec
cmp
mov
xor
loopne
ljmp
in
mov
xchg
int3
cmp
push
mov
notb
mov
lods
leave
lock
pop
xchg
ret
add
mov
sti
nop
shrl
dec
out
mov
xchg
sarb
jnp
fwait
xor
dec
das
xor
mov
mov
stos
cmpsl
subl
sub
lods
movsl
jo
test
jne
fucom
xchg
xor
pop
sub
inc
pop
outsl
testb
cmc
movl
cwtl
loop
sub
fidivl
in
call
jb
cmp
scas
jns
test
loop
xchg
sbb
or
pop
mov
adc
lods
and
sub
and
dec
jne
pmaddwd
pop
sub
jle
fidivl
inc
jge
pop
mov
jp
insb
or
sub
imul
jle
test
pop
mov
inc
xchg
lret
mov
ja
inc
negl
push
jo
dec
aas
sbbl
and
pop
sbb
xchg
mov
and
and
cwtl
out
dec
pop
mov
ds
jb
ret
hlt
or
int3
ljmp
neg
loop
fadds
jmp
and
inc
dec
or
or
inc
cltd
fcmovu
push
aam
iret
cwtl
rcll
in
sti
imul
ja
cmp
insb
rorb
test
es
push
movsb
add
add
fimull
dec
insb
mov
inc
add
arpl
xchg
bound
repnz
pop
int
mov
test
into
incb
gs
jns
mov
and
mov
add
push
cltd
cltd
pop
lcall
cmp
clc
mov
mov
cmp
sub
xor
das
push
cmp
bound
sub
fs
dec
stos
test
mov
add
or
dec
outsb
lock
add
aas
dec
out
mov
sbb
mov
in
ficoml
aas
mov
mov
rolb
movsb
andl
subl
rol
mov
mov
dec
das
lods
xor
pop
int
rcll
inc
xor
jecxz
or
shrl
jge
mov
and
in
int3
mov
cld
mov
push
out
ret
pushf
insl
addr16
sti
xchg
or
ja
xor
add
and
push
movb
cmpsl
inc
ljmp
or
pop
js
adc
int
add
inc
pop
dec
xor
mov
xor
jno
add
icebp
jno
fcoml
popf
mov
mov
jle
push
popa
dec
in
or
or
push
andl
push
or
pushf
std
add
adc
pushf
xchg
and
test
sbb
dec
jae
pop
out
xchg
inc
wrmsr
addr16
adc
loope
scas
jecxz
rcrl
and
jnp
loopne
adc
add
insb
mov
jae
cmpsl
adc
cmp
jbe
xlat
test
and
mov
jmp
bnd
cltd
sub
dec
inc
aam
jno
pop
adc
push
jns
jle
jbe
lcall
and
adc
aad
mov
mov
xor
push
scas
inc
in
nop
xor
bound
adc
mov
sti
rol
sub
cmp
dec
and
scas
push
cmc
sub
repnz
call
outsl
aam
xchg
inc
inc
pusha
lret
xor
xchg
mov
mov
mov
lods
fwait
mov
dec
outsb
push
xor
pop
jbe
div
pushf
sub
orb
or
jge
test
sbb
mov
push
imul
cmp
xchg
xor
jl
mov
pusha
nop
int3
mov
xor
dec
nop
and
mov
mov
inc
popf
push
xor
jle
test
xor
or
pop
fiadds
mov
dec
and
ljmp
arpl
push
push
into
btc
sbb
push
repz
outsl
xchg
pop
xchg
jb
fldl2t
add
xchg
or
lret
mov
cmp
pusha
pusha
mov
lods
fwait
into
ret
gs
data16
fistps
insb
sub
decl
faddl
out
dec
mov
pop
fmul
fsub
jecxz
fwait
mov
adc
cli
ss
lods
stos
or
cwtl
stc
in
ss
sbb
xchg
mov
add
mov
sbb
negl
sahf
pop
xor
or
add
fcmovu
push
ja
lret
nop
xchg
pop
jnp
cmp
adc
or
repz
dec
cwtl
sahf
dec
addr16
xlat
jle
addr16
lcall
or
sub
mov
mov
lods
push
inc
inc
mov
jge
and
sbb
sti
dec
sarl
pop
and
jl
dec
mov
xor
pop
sahf
jne
fidivs
push
jle
add
or
cs
data16
jp
outsl
std
lods
jae
xchg
xor
adc
test
cs
cmpsb
push
cmp
mov
cmp
stc
imul
inc
sub
jge
sarl
xor
pop
cld
dec
jg
jbe
jno
imulb
fwait
lds
out
dec
push
cmp
les
outsl
fwait
das
mov
loope
cmp
inc
sar
xchg
or
sub
les
adcl
test
and
jo
dec
clc
into
inc
in
into
xor
pop
shl
enter
popf
aas
stos
ljmp
pusha
inc
repnz
push
mov
jne
cmp
and
in
jl
outsb
bound
popf
adc
clc
sbb
ds
pop
jnp
aas
jnp
scas
fcompl
mov
adc
imul
mov
lret
inc
mov
sub
inc
or
lods
andl
jae
out
adc
fnstsw
cld
pop
or
push
mov
sbb
ds
push
dec
xchg
cwtl
dec
stc
inc
mov
subb
adc
movsb
mul
jle
fidivrl
test
mov
xlat
dec
fwait
push
pushf
mov
fdivrs
loopne
addr16
cmp
or
shr
sub
fldl
loope
jb
adc
xchg
in
add
pop
insw
pop
lods
adc
or
hlt
lods
rcr
xor
xor
imul
nop
mov
push
in
rclb
scas
jle
xchg
adc
mov
repz
mov
xor
dec
sub
in
sti
ljmp
push
jg
fildl
push
sbb
mov
outsb
cld
adc
mov
jne
mov
xor
xchg
sti
repz
sub
jle
inc
icebp
or
in
sbb
fistl
into
adc
fisubrs
push
or
pusha
aad
inc
jge
pusha
xchg
xor
add
filds
nop
ret
xchg
mov
push
in
pop
std
mov
js
test
lock
out
pop
xchg
test
jge
adc
insl
std
push
mov
cwtl
dec
pop
jb
xor
jae
cld
push
cmpsl
and
ja
fstpl
stos
push
inc
mov
push
push
rcl
cltd
push
jnp
cli
jns
out
add
ljmpw
out
and
pop
push
in
sbb
xorb
iret
scas
fidivl
mov
mov
mov
inc
mov
dec
or
and
and
mov
repz
mov
test
paddusb
aam
in
mov
jp
sub
roll
push
mov
lahf
jp
mov
push
cmpsb
xlat
pop
bnd
stos
push
or
loope
jo
loope
iret
inc
inc
mov
xchg
cmpsl
jne
cwtl
loopne
mov
aaa
cmp
sbb
outsl
movsb
movsb
mov
xchg
mov
stc
inc
push
mov
jb
push
pop
mov
ljmp
push
lods
sub
ss
lcall
jecxz
push
add
or
adc
daa
insb
je
add
addr16
add
sbb
jo
call
add
pop
jmp
pop
or
pop
dec
inc
sbb
adc
ja
jmp
mov
xor
mov
mov
pop
es
test
aas
je
scas
jl
jecxz
int
imul
rcr
lret
aaa
hlt
lret
jo
sub
pushf
cmc
cmpsb
into
or
adc
lea
jbe
mov
jp
push
dec
ret
jo
mov
jmp
jecxz
cmpsb
stc
pop
mov
mov
pop
stos
loope
loop
into
in
int3
out
adc
loope
in
mov
insl
jg
xchg
addr16
bswap
adc
pop
scas
adc
dec
lcall
into
insb
mov
faddl
fwait
mov
ftst
nop
jbe
movsb
mov
icebp
int3
into
cmp
hlt
mov
out
and
mov
rorl
mov
sbb
inc
dec
lcall
mov
xor
out
mov
repnz
or
ljmp
sub
jbe
jne
fmulp
pop
sub
cmp
cmp
lret
cmpl
and
idiv
repnz
rcll
insl
mov
xor
shlb
pop
andb
dec
adc
sub
test
pusha
setp
cli
fdivr
xchg
nop
add
jg
mov
xchg
popf
dec
mov
out
in
push
scas
xor
mov
dec
sbb
xor
adc
sub
push
fsubrs
sub
xchg
inc
into
in
mov
sbb
mov
xchg
out
ss
out
mov
pop
test
or
pop
movb
mov
add
pop
out
enter
stc
inc
mov
push
lds
sbb
mov
popf
shrl
xchg
lods
cld
pusha
ljmp
loope
or
shll
inc
add
fldcw
sub
scas
sahf
and
xchg
out
mov
xchg
jg
or
push
xchg
iret
out
leave
fiaddl
xor
jge
jle
inc
dec
in
lods
test
push
sub
es
sub
call
push
mov
mov
push
push
sahf
pop
icebp
loop
repnz
xchg
push
xchg
push
pop
popl
sbb
dec
push
fistl
pushf
dec
mov
jnp
stos
jo
dec
add
js
sub
in
ret
adc
stos
or
or
ljmp
xchg
push
xchg
or
or
movzbl
and
in
stos
daa
lahf
push
xor
mov
lods
fistpl
jo
inc
aas
js
stos
aad
push
imul
dec
sahf
test
or
lods
inc
idivl
mov
add
push
fwait
or
xor
xchg
adc
jmp
mov
cld
insl
cltd
mov
fs
mov
push
sub
cmp
sbb
test
and
pop
push
mov
cltd
pop
test
or
ret
out
clc
inc
xchg
sbb
fdivr
mov
inc
sub
das
test
mov
jns
gs
or
insl
xchg
icebp
cwtl
ds
cs
in
rcr
mov
fs
aaa
sub
and
pop
and
stc
lds
mov
cmpsb
adc
test
xchg
jmp
addb
jae
arpl
leave
cmp
lahf
jo
sub
in
xchg
das
xchg
mov
rcl
lahf
xchg
sub
pop
add
fldl
jmp
mul
jl
sti
lahf
enter
add
push
add
xor
sbb
xchg
out
push
push
filds
xor
fs
cmp
xor
aam
add
lcall
mov
push
je
or
xchg
cmp
test
xchg
mov
cmp
sbb
fnstcw
add
inc
ret
add
inc
sbb
push
into
jl
jp
mov
mov
fwait
sahf
pusha
inc
adc
dec
cs
daa
pusha
ja
leave
add
movsl
inc
lahf
clc
push
mov
mov
rol
inc
mov
not
shll
sbb
les
test
sti
xor
mov
imul
cmp
or
popf
sarb
pop
add
and
div
das
mov
stc
outsb
js
cltd
mull
add
push
icebp
or
push
pop
jl
ficoms
les
cltd
xor
dec
mov
mov
loop
fistl
inc
lods
sub
movsb
leave
sub
je
add
int
sbb
mov
sti
mov
adc
mov
lods
adc
push
push
jbe
jae
sub
mov
mov
or
mov
loop
mov
push
ficomps
adc
mov
sub
andb
adc
sbb
or
push
sbbl
sbb
out
js
pop
shrb
add
mov
push
sbb
addl
outsb
fldl
or
mov
bound
movsl
jns
sub
xchg
cmp
add
mov
nop
repnz
sahf
dec
in
js
mov
popa
js
in
pop
sbb
out
adc
jmp
ret
js
jns
std
enter
mov
xchg
sbb
sti
iret
push
sbbb
add
aas
sub
adc
jl
or
xchg
mov
mov
cli
orb
gs
mov
nop
outsb
rorl
hlt
enter
jns
xor
xchg
popf
dec
movl
ret
pop
sbb
int
dec
jge
inc
mov
jmp
add
xor
add
rcrb
xchg
iret
int3
add
xchg
push
and
fsubrs
lea
icebp
lods
or
dec
mov
and
add
mov
test
adc
int
sub
data16
in
inc
add
add
push
push
js
shlb
mov
add
add
int3
fists
lock
inc
arpl
inc
popa
fstl
adc
xor
and
aas
cmc
xor
ficoml
imul
addr16
lods
in
sbb
loope
testl
inc
popf
cmp
push
fcomip
inc
in
dec
mov
ss
rcrb
push
cld
lods
push
and
hlt
sbb
pusha
roll
xchg
es
cltd
mov
mov
push
out
sbb
jbe
inc
lahf
fisubs
mov
int
popa
mov
ret
shlb
in
clc
jp,pn
dec
fdivrl
add
xchg
movsl
rolb
cwtl
mov
push
sub
stc
stos
out
iret
dec
jae
adc
jmp
addl
mov
mov
pop
sub
push
jns
lahf
xchg
xor
sub
cwtl
pop
fmull
cli
sbb
flds
bound
xor
decl
mov
fidivrs
sbbb
js
in
mov
mov
cmp
xor
xchg
inc
lods
and
mov
pop
xchg
iret
jno
popa
lea
jo
xchg
fsubr
cltd
xor
lahf
aaa
push
sub
loop
ficoml
ja
cmp
dec
or
testb
fmuls
push
je
add
push
xor
pop
mov
test
adc
fwait
repz
xor
adc
lock
mov
arpl
mov
push
and
mov
repz
sarb
test
xor
jns
test
repnz
lret
data16
fs
gs
xor
hlt
pushf
repnz
sub
cltd
mov
xchg
xchg
dec
ret
stos
cmpsl
mov
jmp
arpl
in
sub
push
or
inc
jne
ljmp
shll
dec
aad
in
or
stos
ss
sahf
stc
pop
push
stos
add
in
in
mov
lods
test
jnp
sub
inc
dec
cmp
push
popf
cmp
ljmp
dec
cmc
jge
push
and
jnp
pop
jl
xorb
jmp
mov
inc
nop
pop
test
rcll
sti
lret
inc
nop
cmp
cmp
xchg
aam
fnstcw
and
pusha
dec
fnstcw
pop
nop
sti
cmp
mov
aad
adc
mov
push
push
push
int
icebp
pop
jno
mull
sub
dec
and
ret
xchg
hlt
out
xchg
out
jbe
xor
clc
mov
xor
je
jbe
in
fcomi
orb
loope
jnp
mov
lds
dec
lcall
cmp
int3
daa
leave
push
pop
adc
push
leave
jbe
adcl
push
mov
push
jns
in
or
fisubl
sbb
popa
icebp
sahf
imul
dec
mov
and
bound
sbb
insl
outsl
xchg
mov
test
push
mov
icebp
push
lds
fs
adc
lahf
aam
jno
cmp
mov
pop
pop
mov
jge
shrb
popa
adc
insb
loopne
daa
aad
dec
shrb
jnp
mov
call
sub
shlb
push
xchg
aam
pop
lahf
sbbl
mov
rcrb
inc
mov
les
stc
loop
add
cmp
xor
lret
imul
roll
add
sti
or
fstl
cmp
inc
cmpsb
push
add
jno
mov
in
cwtl
shl
addr16
out
pop
lret
sbb
ss
cmpsb
sarb
push
or
add
push
lds
xchg
pop
mov
ror
sub
adc
movsl
pop
cmp
stos
mov
sub
pop
sbb
shlb
mov
leave
movsb
pushf
mov
imul
xchg
xchg
lods
pushf
flds
mov
sti
movsl
inc
pop
decl
cmp
aad
xor
inc
push
xchg
fnstenv
push
int3
and
gs
aam
mov
cmp
aaa
std
je
jne
int3
data16
push
and
out
cmp
inc
fsubrs
and
fwait
push
cs
adc
incl
dec
mov
xchg
dec
jb
es
shrl
push
lods
outsl
pop
test
jae
in
sub
mov
push
repz
mov
or
daa
jle
outsb
xchg
jne
mov
cmp
enter
loopne
sbb
cmc
insl
ret
dec
sahf
and
push
cmp
mov
es
ret
rolb
lcall
cmp
insl
jp
xor
add
or
sub
into
in
adc
negl
imul
faddl
aad
cmp
inc
repz
add
xchg
push
mov
jmp
fmuls
in
idivl
add
add
push
mov
dec
push
arpl
ss
dec
add
fsubrs
cmc
popw
inc
insl
xchg
lcall
push
adc
cmpsl
test
mov
or
pop
in
sub
out
cmp
mov
lds
dec
or
arpl
ds
call
clc
mov
fmuls
fcoml
je
inc
dec
nop
in
adc
repz
adc
adc
push
jp
cmp
mov
movsb
dec
pop
out
rorl
xchg
repz
testb
sub
dec
das
xchg
js
jns
jmp
sub
aad
pop
and
pxor
adc
aam
imul
push
out
fs
out
xchg
xor
dec
dec
ljmp
sbb
pop
cmp
xchg
mov
fs
mov
adc
add
lret
cmp
testl
fidivl
add
jno
loop
cld
fdivr
mov
rolb
dec
mov
icebp
xor
shlb
xor
mov
cmp
xchg
rcrb
fisubrl
fwait
nop
movb
xchg
test
dec
je
stc
pop
cli
adc
mov
cmp
aas
lret
jge
adc
repz
jno
shl
pop
xchg
sbb
pop
je
aam
fildl
push
pop
mov
popa
lcall
mull
adc
pop
in
fdivs
inc
and
shrl
outsb
jl
inc
dec
sub
add
pop
scas
push
jl
jg
inc
ror
fucom
cmp
jl
pop
or
sbb
fsubl
insb
fwait
lret
mov
nop
mov
out
lahf
sub
xchg
stos
cltd
mov
std
push
repnz
aas
cmp
fisttpl
mov
mov
sbb
jbe
or
add
dec
out
shlb
xchg
dec
dec
xor
push
push
jge
movsl
sub
adc
dec
fdiv
repnz
cli
cs
xchg
scas
jae
jne
and
mov
es
cmc
fildl
stos
inc
mov
dec
adc
fwait
mov
scas
mov
jns
add
add
lock
jo
xchg
mov
sbb
jo
jne
arpl
mov
or
test
jmp
add
add
mov
and
and
sub
testl
je
and
xor
xchg
fists
cmp
clc
sti
gs
imul
pop
mov
mov
bound
subb
mov
int
xor
push
sub
add
fnsave
add
inc
pop
and
or
aas
pop
pop
enter
rdtsc
mov
xchg
mov
adc
xchg
xchg
push
ljmp
add
adc
mov
or
repz
rcrb
aaa
movb
xor
dec
adc
mov
insb
mov
cmp
adc
mov
push
pop
inc
in
push
push
lods
fadds
mov
or
in
xor
xor
lock
cld
test
cmp
mov
sub
jo
repnz
shr
movsb
inc
add
popa
mov
pushf
fwait
mov
push
loope
mov
lret
lods
aaa
cmc
lock
dec
popa
mov
pop
mov
call
lods
pop
fsubs
mov
es
xchg
aas
lret
rcrb
push
jmp
xlat
adc
dec
lcall
jg
and
dec
int
jp
sub
mov
push
imul
outsl
sbb
mov
mov
lods
mov
mov
push
aam
pop
sub
test
loope
fsubs
fnstsw
es
mov
dec
push
ja
push
mov
out
stc
jecxz
sbb
fcmovnbe
mov
imul
mov
fimull
cs
inc
out
out
mov
xchg
sti
cld
enter
jge
dec
push
lea
pop
xchg
stos
stos
jmp
jle
xor
jae
popf
adc
testl
negb
icebp
out
mov
pop
mov
lahf
push
inc
das
les
lahf
push
stc
lods
push
mov
jg
push
insl
sti
mov
repnz
jbe
test
push
fwait
add
add
adc
pop
and
xor
inc
mov
stos
call
jmp
push
rcrl
jae
dec
xlat
cmp
lcall
xlat
add
cmc
cmp
mov
cs
or
push
pusha
ja
xor
jmp
neg
lods
fstl
mull
insl
outsb
pusha
fwait
mov
frstor
xlat
test
stos
mov
push
and
jge
aaa
out
jae
mov
cmpsl
xchg
inc
movsl
cmp
fistpl
mov
fdivl
xor
shrl
push
pushl
cwtl
jg
fbstp
lret
lds
roll
subl
fmull
test
and
push
fs
adcl
mov
adc
nop
shl
xor
bnd
and
mov
inc
loopne
adc
test
pop
int3
xchg
mov
cmp
push
cmp
loopne
push
ss
ljmp
sub
dec
sbb
popf
cmp
stc
jbe
fnsave
inc
in
lods
lcall
mov
dec
add
rorl
daa
test
push
cmp
push
cmc
jb
scas
lock
inc
mov
push
cmp
pop
lock
mov
shlb
and
xor
es
aaa
repz
and
mov
mov
mov
jecxz
pop
ss
aaa
inc
stos
pop
bound
icebp
xchg
or
roll
stos
dec
pushl
lcall
scas
imul
lcall
inc
adc
or
mov
inc
mov
adc
ret
test
jb
out
stc
in
cs
and
nop
sbb
mov
add
cmp
or
fistpll
dec
and
mov
aas
fucomip
mov
stos
enter
hlt
shll
dec
outsb
push
imul
push
xor
xor
pop
out
jg
mov
pop
adc
jmp
sub
mov
iret
imul
add
sub
iret
fsubs
fdiv
stc
pop
icebp
sbb
ja
outsb
add
pop
stos
out
call
pop
xor
fcomps
int3
hlt
fisubrs
inc
popa
adc
rcl
xchg
ds
mov
aam
push
das
lcall
xor
test
sahf
xlat
das
xor
mov
pop
mov
fnstcw
push
mov
and
sub
mov
mov
pop
sahf
stos
pop
sbb
mov
data16
push
inc
push
pop
sarb
test
pop
pop
sbb
push
sub
mov
sbb
sahf
cmpsb
fwait
es
outsl
repnz
jmp
popf
je
jmp
int
lock
xlat
fldl
test
into
or
pop
inc
pop
xchg
stc
xchg
jne
divl
clc
mov
dec
dec
dec
repnz
mov
adc
movsl
adc
arpl
or
test
arpl
sbb
in
dec
lahf
fsts
pop
enter
das
dec
cwtl
loopne
or
subb
out
in
dec
sbb
jp
sbb
sbb
push
xchg
imul
jnp
or
lcall
test
es
pusha
jbe
sahf
stc
xchg
mov
xchg
imul
xchg
neg
push
cmp
adc
jle
jecxz
jne
mov
dec
add
pusha
mov
shr
and
pop
or
jmp
xchg
push
je
loop
push
int
mov
sub
pop
lret
insb
ret
push
jge
cmp
stc
sbb
out
in
sub
inc
mov
inc
cld
arpl
in
push
jbe
fsub
or
adc
cs
lcall
ret
js
push
stc
cmp
mov
je
ret
outsl
inc
loop
int3
and
clc
and
pop
dec
data16
fimuls
inc
rorl
mov
mov
jle
pop
cld
arpl
push
add
lds
push
mov
mov
ret
cmp
sbb
mov
cld
arpl
mov
jmp
and
das
jne
cwtl
mov
out
fsts
nop
mov
int
lret
mov
push
daa
and
arpl
adc
test
xor
or
cmp
add
jecxz
pop
fs
or
xor
or
push
mov
cmp
popf
inc
rclb
adc
lods
fbstp
mov
ds
dec
inc
jg
dec
mov
imull
or
pop
jno
and
jmp
pop
pop
stos
xchg
sub
arpl
xchg
lock
fldt
push
flds
xor
mov
loopne
or
mov
adc
orl
jg
adc
jae
pop
les
movsb
lret
fsubs
idivl
jb
shl
mov
mov
push
and
lret
stc
fmull
jo
add
paddusb
stos
testb
out
jp
push
adc
cmp
out
mov
jmp
pop
dec
xor
mov
arpl
repnz
mov
data16
mov
rorl
adc
dec
xchg
lcall
addb
cmp
push
enter
jns
loop
repz
movsl
out
or
shrb
mov
addr16
fisubl
testb
push
fists
mov
cmp
cmp
cmp
xor
sub
or
fidivrs
fidivl
adc
frstor
stos
jb
sbb
xchg
mov
stos
jle
pop
push
xchg
and
add
or
mov
pusha
inc
mov
orb
fisubl
xlat
movl
lds
in
or
xor
xchg
insl
orb
aad
mov
fcoml
stos
mov
jns
lods
pop
mov
movsl
push
jecxz
cmp
pop
ja
pop
lods
ss
lret
imul
sub
xchg
cmpsb
inc
pop
sbb
aam
into
jecxz
fisubs
pop
mov
ss
mov
pop
and
enter
icebp
fistpll
mov
les
jmp
int3
cmp
mov
cwtl
xchg
dec
ljmp
sbb
or
push
push
xchg
std
lds
jbe
ljmp
and
xchg
xchg
inc
sub
jbe
imul
inc
leave
add
mov
dec
xor
lahf
pop
sarl
ficomps
sub
ret
sbb
sub
ds
lea
movsl
push
dec
js
or
shl
xchg
js
addr16
sub
scas
loopne
sbb
adc
and
push
lods
sub
test
and
sbb
mov
inc
mov
add
mov
xlat
sbb
mov
ret
mov
fadds
sub
out
push
jp
orb
sub
push
cmpsl
xchg
cli
fidivrl
xchg
push
pop
jmp
jmp
xorl
push
andl
ljmp
loope
mov
adc
lcall
jl
jnp
inc
push
jns
inc
mov
loope
pop
xor
fadds
push
je
pop
call
jecxz
lods
xor
jmp
mov
mov
mov
in
movsb
pop
shr
clc
adc
xorb
dec
dec
jle
cmpsl
repz
cs
fadd
cmp
lock
jne,pn
jne
or
cltd
inc
xor
add
push
in
inc
test
and
in
sbb
or
jnp
xor
adc
or
ret
and
jae
fmull
divl
dec
shr
enter
push
jb
or
scas
push
test
jmp
js
or
add
mov
arpl
test
popa
jne
insb
sbb
jmp
dec
je
loop
dec
loopne
imul
in
cwtl
aam
pushf
popf
pop
mov
mov
add
pop
sub
add
dec
mov
push
ret
addr16
lahf
lods
fistps
mov
repz
cmp
int3
repnz
imul
fcmovb
enter
xchg
sahf
loopne
cmp
lcall
scas
pop
fmul
pop
xor
fwait
dec
rcrl
xchg
and
movl
movsl
and
dec
or
nop
mov
jo
jl
pop
aaa
faddp
jecxz
mov
mov
lahf
sbb
xchg
incb
mov
push
addr16
cmpsb
pop
int3
mov
mov
jl
jp
leave
sbb
in
mov
mov
rolb
cld
dec
xchg
js
adc
jb
jge
arpl
jmp
cli
out
fdivrl
scas
mov
jmp
jb
mov
jg
stc
jo
push
xchg
lods
inc
mov
pushl
jo
sub
je
jge
sbb
inc
int
xchg
push
shrb
push
insl
fstps
dec
js
xchg
inc
and
add
pop
loope
or
rcr
lahf
dec
sub
xor
xchg
xchg
mov
dec
inc
aaa
pushf
jl
mov
rolb
stc
flds
std
adc
into
pop
scas
cwtl
cmp
dec
shrb
pop
ja
out
mov
mov
bound
mov
ja
or
es
aam
repnz
mov
pop
add
into
aam
rorl
addb
dec
inc
add
xor
xchg
popl
mov
js
pop
cmp
mov
pop
dec
dec
jo
mov
lea
or
add
lods
sti
and
mov
inc
mov
and
fwait
dec
inc
repnz
enter
andl
mov
bound
and
dec
xchg
mov
mov
or
and
test
jb
mov
cmp
sbb
xchg
or
or
cmp
pop
lret
ds
adc
nop
aaa
fldt
rcl
mov
xor
cmp
dec
cmp
cmp
lret
jle
ret
xchg
hlt
pop
imul
dec
stc
nop
ffree
pushf
jg
jo
jno
test
bnd
stc
xchg
mov
test
addr16
or
ljmp
into
sti
mov
sub
enter
add
cmpsl
loop
aaa
ret
sti
pop
mov
xor
shrl
js
mov
push
outsl
xlat
mov
dec
mov
mov
mov
test
lods
jl
or
or
fxch
orb
xor
in
mov
pushf
xchg
fwait
add
or
cmpsl
int
js
sub
loope
and
sub
pop
aas
xchg
out
enter
pop
xor
cmp
testl
jb
pop
dec
fdivl
sti
insl
xchg
adc
dec
ljmp
sbb
and
sti
dec
sar
push
out
sub
sahf
xchg
sbb
jmp
xorl
and
das
fwait
cmp
imul
ret
mov
enter
xor
inc
shl
hlt
icebp
jnp
insb
jmp
pop
in
leave
fsubl
adc
loope
enter
data16
pop
out
ret
adc
imul
jb
inc
enter
mov
pushf
lret
subb
mov
es
push
fbstp
out
add
mov
addb
fcompl
cld
int
fsub
pop
pop
pusha
pop
mov
cmp
lds
sub
add
stc
mov
in
ds
fiadds
test
mov
add
pop
jbe
repz
gs
push
leave
movsl
lock
pop
push
ja
pop
or
rclb
dec
das
dec
frstor
into
xchg
and
push
push
out
pusha
jp
mov
andl
sar
jecxz
gs
ja
rol
cli
mov
jb
inc
xor
divb
pusha
push
ret
sbb
fldl
in
sbb
sbb
ret
shrb
gs
jae
stc
cmpsb
ror
in
push
lods
and
dec
jl
sub
dec
rcrl
fidivl
jge
sub
pop
std
lea
ret
cs
out
push
int3
xchg
cwtl
popf
inc
add
int
call
bound
xchg
jp
mov
jge
adc
mov
mov
adc
std
ljmp
negb
push
icebp
pop
xor
jp
imul
outsl
jo
xorl
xchg
jne
dec
outsl
jmp
xlat
push
je
push
test
push
inc
hlt
ds
insb
pusha
jmp
dec
ret
mov
mov
mov
test
movsl
sbb
daa
mov
or
lcall
jo
push
enter
stos
dec
and
imul
neg
xor
cmp
loope
and
aaa
jp
adc
aas
lds
xchg
outsb
ds
sarl
icebp
cmc
movsb
cmp
hlt
mov
nop
outsl
orl
pop
loopne
dec
lret
sbb
sbb
test
int
cltd
xor
xchg
int3
in
test
sbb
out
xchg
std
ret
lret
shrl
insl
add
and
jl
daa
adc
inc
sbb
cmp
stos
mov
repnz
iret
mov
mov
push
aam
out
jl
nop
xchg
pushf
jb
lods
cmpsb
jnp
push
dec
cmp
mov
aas
repnz
push
ret
adc
mov
xor
dec
int3
dec
push
dec
mov
inc
xor
xlat
gs
andb
xlat
jg
push
xor
sbb
pop
and
enter
add
fisubrl
pop
dec
in
cmpsb
mov
ja
adc
inc
mov
pushf
lahf
sub
xchg
inc
pop
adc
das
out
jg
mov
inc
jns
dec
mov
xor
dec
aas
pop
pop
xorb
cmp
hlt
stos
sbb
dec
cld
bound
jp
pop
ficomps
repnz
jo
arpl
add
pop
imul
xor
test
xchg
mov
fsts
lahf
fidivrs
sahf
pop
xchg
orl
mov
pop
dec
or
mov
orl
jmp
jp
and
xor
jecxz
cmp
dec
repz
les
xchg
xor
aad
mov
data16
xchg
or
mov
mov
pop
push
xchg
adc
inc
orl
cli
lods
sub
stos
push
mov
mov
xor
out
jmp
sub
scas
sub
add
cmc
pop
push
fs
push
cmp
dec
int3
stos
mov
lahf
movsl
mov
cli
inc
jbe
into
mov
jp
repz
xchg
and
push
cmpl
dec
cwtl
push
mov
cmc
scas
push
lds
dec
pop
jno
arpl
imul
lds
test
and
sub
rcl
dec
sub
test
insl
cs
nop
jp
cmp
pop
ja
mov
or
xchg
xchg
imul
xor
sub
push
adc
jecxz
orb
cmpsl
or
inc
les
fs
lea
mov
adc
xor
jae
outsl
jno
pop
sti
inc
add
add
iret
mov
inc
xchg
imul
out
jg
adcb
or
xchg
sar
sahf
movsl
fdivrl
int
ret
sbb
sbb
sub
adc
rcrb
pop
les
push
dec
lcall
push
into
sub
mov
shlb
mov
insb
mov
jae
rcrl
lahf
dec
add
out
loope
jnp
cs
insb
scas
stos
fildl
bound
pop
xor
sub
out
dec
das
cmp
cld
dec
loopne
data16
imulb
shlb
sar
dec
sub
inc
add
push
dec
sub
outsb
hlt
hlt
inc
add
adc
sub
mov
pushf
ljmp
jmp
or
add
adc
mov
sti
or
out
sbb
mov
push
sti
sbb
mov
mulps
xchg
shll
xor
and
or
std
subl
xchg
stos
fists
xor
lods
xor
sti
out
push
fsub
loopne
inc
lcall
xlat
fiadds
std
xchg
test
and
jne
inc
inc
jecxz
inc
aas
fidivs
xchg
sub
jnp
pop
fs
sbb
ds
out
pop
outsb
adc
xor
sub
lods
cltd
pop
push
mov
icebp
jb
mov
xor
sbb
test
xor
cwtl
add
xchg
mul
movsl
push
adc
pushf
fdivrs
shll
bound
ss
jno
popf
mov
cwtl
push
push
cmp
out
lods
and
loope
aaa
mov
in
mov
das
xor
sub
lahf
fs
push
stc
pop
cmp
add
jae
pop
mov
repz
xor
inc
aam
mov
sbb
dec
int3
rol
mov
orl
fsubs
sbb
mov
fnclex
cmp
jge
ret
mov
out
or
adc
movsb
xchg
inc
xor
ljmp
sbb
test
mov
mov
or
dec
adcl
inc
icebp
rorb
stos
rorl
call
aaa
pop
xchg
and
dec
jno
pop
cwtl
sbb
jecxz
and
and
ds
jle
and
add
cmp
mov
ret
sub
idivl
inc
cmpb
ljmp
arpl
je
cmc
ljmp
pop
jo
mov
mov
icebp
scas
pop
popa
pop
inc
jne
or
xor
xor
xchg
pop
lret
shr
aam
mov
pop
rorl
sbb
xchg
addr16
clc
push
push
sbb
in
fbstp
jg
je
sub
in
repnz
out
fnstcw
sbb
pop
lods
imul
popf
mov
mov
outsl
cld
mov
icebp
dec
sbb
and
jbe
imul
sbb
jge
popf
mov
adc
dec
popl
pop
inc
arpl
sub
and
cwtl
sti
xchg
cltd
orb
push
js
jg
xchg
aaa
or
mov
rcr
mov
movl
sbb
jns
pop
jo
pop
mov
test
sub
cmp
mov
sti
xchg
add
cli
and
push
imul
mov
sbb
cmpsl
xor
jnp
std
wbinvd
subb
cmp
outsl
jl
push
ljmp
cmp
pop
pusha
scas
loop
and
push
dec
je
sbb
lods
and
inc
outsb
leave
lea
mov
adc
fildl
sahf
jmp
mov
fyl2xp1
in
and
int3
js
dec
in
aam
push
aas
bound
out
je
int
daa
imul
loope
hlt
mulb
pop
or
push
addl
pop
or
out
jl
mov
aad
pop
bound
cmp
cmovns
iret
inc
mov
push
push
ret
enter
hlt
mov
dec
cli
inc
push
scas
clc
jl
rcl
shll
mov
mov
es
aad
shl
arpl
xchg
lea
lds
mov
aad
aad
pop
mov
loopne
push
rolb
mov
push
adc
jecxz
call
push
push
fbstp
fnsave
iret
mov
mov
mov
or
pop
outsl
ss
aaa
and
mov
dec
sbbl
ret
repz
push
loope
mov
xchg
orb
mov
push
js
ret
push
xor
or
mov
arpl
les
repz
xor
daa
scas
outsl
into
add
pop
sub
out
test
stos
cmp
pop
fsub
scas
mov
insb
daa
dec
daa
call
pop
adc
lock
mov
push
inc
jle
jge
jns
lods
decl
cmp
ret
and
std
cmpsl
xor
xor
fs
in
std
add
fnstenv
push
sbb
or
jno
cmp
sbb
xchg
fsub
popf
pop
mov
jmp
sbb
pop
fcompl
push
push
shll
mov
and
xchg
pop
in
mov
cmove
push
ss
xchg
xor
test
xchg
add
sub
imul
mov
or
sahf
aas
in
int3
ja
xchg
jbe
xor
mov
call
add
push
mov
adc
add
inc
jae
xchg
mov
push
icebp
and
or
data16
adcb
outsl
cs
inc
movsl
pop
pop
les
inc
ficoml
stos
outsb
mov
cmpsl
shlb
inc
xchg
inc
or
mov
push
lret
cli
out
jb
push
xor
outsb
inc
es
push
divl
hlt
push
lret
int
sti
jbe
mov
pop
push
dec
inc
js
fisttps
adc
jge
movsl
or
scas
jmp
scas
jp
call
aas
iret
cmp
mov
test
jno
mov
adc
mov
mov
lahf
xchg
arpl
dec
pop
cs
cmc
ficoms
sti
sahf
into
or
adc
movsl
inc
lahf
test
pop
fcoml
shr
mov
push
dec
push
mov
push
sub
fs
dec
out
cmpl
dec
sub
sbb
test
lret
adc
nop
push
repz
and
sbb
enter
ret
or
test
jecxz
mov
adc
jns
in
fisttpll
lret
outsl
inc
movsl
or
rcrl
mov
sub
adc
sbb
stc
scas
dec
adc
das
loope
fisubl
mov
ds
xor
add
orl
stos
shrl
pusha
inc
jbe
fs
dec
push
cmpsb
stos
pop
xchg
hlt
jbe
js
dec
mov
xor
mov
pushf
add
xchg
mov
push
lret
xchg
cmp
jge
or
int3
dec
mov
stc
mov
loop
push
jo
mov
insb
adc
inc
jmp
hlt
inc
adc
jmp
adc
dec
pop
or
movsb
add
nop
mov
xchg
mov
push
mov
jmp
jl
outsb
mov
subb
xorl
jp
xor
je
addr16
xor
repz
inc
inc
mov
xchg
add
outsb
hlt
xor
leave
sbbl
dec
mov
iret
adc
out
sahf
xchg
sbb
or
psubd
xchg
cmp
sub
jle
dec
and
sub
ret
rolb
into
mov
lahf
adc
mov
mov
jle
adc
cmp
cmp
adc
aam
ss
icebp
stos
pop
sub
sbb
add
inc
sub
push
je
clc
pop
sub
mov
fsubrs
pop
or
mov
rep
xchg
push
lret
arpl
and
movsb
cmpsb
push
mov
and
ret
inc
icebp
xchg
ljmp
mov
insb
in
inc
out
int
out
loop
jg
lahf
shll
mov
jnp
imul
ljmp
imul
cmp
sbb
and
push
mov
loopne
cvtps2pd
mov
push
xchg
addb
addr16
xor
or
jb
aas
ss
stc
xor
sub
setg
adc
jecxz
stos
stc
and
xor
es
cmp
je
cmp
xor
jg
mov
xor
into
divl
ret
cmp
outsl
movsb
cmp
into
sbb
out
fcmovnbe
push
movsb
add
lcall
andb
mov
outsb
push
pop
add
jg
ficompl
cs
add
cmp
daa
push
sub
xor
sbb
fmuls
bound
jl
movsl
adc
sbb
xor
mov
lea
ret
xchg
inc
pop
es
cltd
pop
jno
test
add
call
sbb
jge
mov
outsl
fisttps
lret
jmp
jb
mov
jl
mov
and
or
mov
sti
loop
ficoms
dec
xor
stos
cmp
xchg
pop
cltd
or
pop
push
popf
adc
pop
push
mov
mov
push
jmp
fnop
fdiv
mulb
out
mov
loop
lret
jnp
scas
orl
mov
sub
pop
xchg
push
out
jmp
insl
fimuls
jl
jne
stc
je
mov
lods
push
movsl
pop
movsb
add
sahf
push
or
stc
mov
orl
push
ds
test
in
aaa
push
cld
jle
push
in
shlb
inc
cmp
and
sbb
sahf
je
or
outsb
mov
cs
inc
adc
or
sarb
pop
ja
cmp
lds
mov
add
push
cli
inc
add
push
inc
push
movsl
add
push
lcall
dec
dec
js
mov
pop
and
sarl
push
inc
arpl
inc
jnp
pop
in
push
fisttps
fs
push
int3
xor
add
scas
popa
sahf
add
out
jmp
gs
cmp
sbb
cmpsl
add
mov
add
test
push
lds
and
jne
mov
pop
push
xor
sub
scas
adc
popa
imul
les
out
dec
cmp
shl
and
lret
fisubs
xchg
loop
cli
or
movsb
testl
and
sub
mov
addr16
xlat
int3
incb
cli
test
inc
mov
mov
and
jg
shlb
mov
hlt
mov
test
in
pop
cs
or
and
les
test
aam
sbbl
test
mov
js
pushf
pop
into
jne
dec
add
out
das
adc
mov
xchg
outsl
adc
mov
cmpsb
sbb
mov
and
test
int
lea
xchg
lcall
fdivs
rcrb
andb
or
aas
sti
fs
sub
add
ret
add
mov
xchg
and
stc
cmc
dec
ds
daa
pop
push
leave
lea
pop
test
sub
jno
sub
jecxz
push
xor
addr16
sbb
in
mov
sbb
inc
jbe
es
push
hlt
xchg
in
or
aam
pop
cltd
fimuls
fsub
cli
cmpsb
es
addb
xchg
jg
cwtl
lods
mov
push
pop
push
adc
and
popf
mov
sub
xchg
jae
xchg
cmp
inc
clc
push
mov
xor
test
loop
ss
aam
outsl
mov
xor
es
and
xchg
inc
jne
xchg
cli
clc
sub
mov
cld
fmul
cltd
inc
adc
sub
das
push
jmp
sbb
mull
jge
xchg
add
js
mov
mov
push
lcall
mov
call
mov
sub
jne
mov
dec
mov
xchg
test
xor
stos
rorb
das
mov
inc
loope
repnz
adc
dec
xchg
pop
int
fidivrl
fstpl
or
pop
inc
leave
push
sbb
cmc
mov
ljmp
movsl
push
out
outsl
mov
pop
in
mov
test
idivl
xchg
sahf
lahf
dec
xlat
shll
mov
xchg
je
pop
fs
orl
loopne
and
idivl
fcomi
cmp
push
inc
in
and
sub
adc
addr16
imul
jae
jo
shll
dec
cmpl
mov
push
jbe
pop
mov
or
outsb
mov
les
xlat
mov
es
pop
stos
insb
xor
push
icebp
pusha
mov
call
sti
imul
popf
pop
ljmp
pop
push
fstl
test
pop
push
lahf
cmp
rol
lods
mov
movd
mov
xchg
sbb
cmp
ljmp
sub
leave
out
mov
mov
sahf
or
pusha
push
xchg
and
or
sti
sbb
inc
or
lds
outsb
test
dec
xor
loopne
ljmp
stc
ja
mov
or
mov
mov
mov
dec
sbb
inc
mov
out
imul
xchg
xchg
rclb
adc
xor
div
push
in
aam
mov
mov
inc
dec
pusha
pushf
insb
enter
iret
repnz
jne
out
xor
lret
aaa
or
pusha
push
pop
mov
jne
pop
inc
out
cmp
lds
lds
sbb
fdivl
mov
sbb
mov
xlat
repz
ret
loop
xchg
jecxz
xor
push
dec
adc
xadd
sub
adcb
cmp
aad
xchg
lea
das
pop
xor
stos
lods
adc
pop
adc
add
das
lahf
adcb
sub
adc
mov
dec
lahf
fdivs
stos
iret
and
stos
scas
testl
nop
add
shufps
lret
mov
ljmp
cmpsb
add
pop
ds
pop
add
dec
push
rcrl
jne
fcompl
std
and
aam
cwtl
sbb
dec
popa
fwait
push
xor
jl
mov
and
lcall
arpl
aas
dec
shrl
out
test
dec
pop
mov
addr16
push
jmp
pushf
bound
mov
ss
mov
xchg
adc
inc
aam
and
mov
ss
sbb
arpl
xor
push
xor
mov
scas
shlb
dec
jp
mov
rorl
pusha
mov
movsl
sbb
jp
divl
add
xor
mov
inc
push
sub
imul
test
int
divb
scas
dec
lret
test
cmp
xchg
or
or
mov
pop
add
mov
pop
xor
xchg
sarl
rcrb
in
xchg
mov
shr
push
xchg
lret
inc
pop
into
sahf
xchg
push
andl
movsb
push
pop
pop
xorl
popf
cmpsb
daa
inc
sub
xchg
loope
lods
cmpsl
shlb
mul
cwtl
push
shl
push
out
cmc
ja
dec
cmp
pushf
xor
popa
xlat
inc
jb
inc
and
pop
scas
xlat
dec
incb
ljmp
push
ret
shrb
mov
or
shl
incl
pop
mov
clc
addb
fnstenv
dec
add
sub
daa
out
and
adc
lret
leave
add
ljmp
mov
push
push
ja
mov
stos
cmp
imul
jmp
cwtl
and
xor
xchg
fmuls
scas
mov
out
inc
or
sub
jbe
fildl
loop
popf
arpl
push
adc
les
xor
xchg
inc
imul
push
movsb
out
mov
hlt
rorb
notl
jns
push
jg
scas
lds
sbb
mov
leave
movsb
push
sub
daa
adc
cmp
mov
push
xor
add
test
xchg
in
xor
dec
out
insb
leave
xor
fistpll
jle
add
fwait
add
hlt
popa
insl
push
cld
pushf
mov
lods
cmp
jae
out
jb
inc
popa
cltd
hlt
insw
lea
call
lock
mov
test
sbb
les
pop
push
scas
cmp
bound
aaa
push
arpl
repz
mov
aas
mov
cmp
and
push
movsb
sbbb
lods
sbb
jo
mov
outsb
adc
jns
sbb
xor
addr16
lods
pop
outsl
jecxz
or
jmp
scas
addr16
cmpsl
repnz
jg
leave
inc
push
push
sub
aas
push
dec
push
decl
and
jl
daa
into
fnstenv
cmp
lods
cmp
test
pop
mov
ljmp
shll
ret
ret
dec
ss
pusha
bound
sbb
fdiv
fdivp
scas
xor
sub
or
xchg
popa
xor
sahf
mov
xor
dec
nop
cmp
ss
call
sbb
push
test
xor
push
in
dec
push
pushf
clc
iret
cli
mov
and
adc
aaa
nop
dec
jbe
jae
inc
push
push
shrl
aas
inc
sahf
mov
add
push
or
xchg
xor
fwait
aad
mov
sub
cmpsl
sub
iret
adc
imul
test
fwait
add
push
leave
push
jp
xor
int
sahf
pop
push
leave
je
dec
adc
scas
jnp
lret
fxam
xchg
mulb
in
aad
mov
cmc
cmp
jbe
push
ljmp
add
pop
cmpsl
daa
mov
pop
dec
subb
and
lods
test
adc
out
lret
fisubs
cmp
sub
ss
rclb
movsb
adc
adc
daa
das
in
mov
xchg
xor
sti
js
fdivr
jae
add
out
sbb
ret
hlt
pop
loope
mov
mov
lret
rcrb
cwtl
stos
mov
jae
pop
js
xor
cli
pop
xor
insl
jg
adc
lret
inc
cltd
out
and
and
xor
aad
inc
lret
rorl
adc
rcrb
sbb
jmp
dec
cli
lods
or
ffree
adc
inc
mov
fwait
add
stos
push
jl
scas
xor
jp
inc
or
add
adcb
dec
adc
mov
add
pop
mov
int
jns
sub
iret
rcrb
dec
push
shll
jno
jo
cmp
in
add
add
xchg
inc
xlat
dec
xchg
jp
insb
scas
test
jecxz
fisttps
pop
scas
outsl
inc
fnstcw
in
mov
lods
jbe,pn
lods
jbe
in
pop
sahf
lods
mov
aaa
leave
mov
inc
stc
shl
shrl
push
xchg
jbe
stos
add
stc
mov
push
mov
xchg
jmp
cmp
movsl
cwtl
shlb
hlt
sub
xor
push
xchg
sbb
mov
pop
fstpl
xchg
imul
jns
jmp
sbb
jl
hlt
outsl
dec
xor
adc
lods
mov
js
data16
add
in
in
testb
xchg
rclb
add
cmp
rorl
add
add
and
scas
call
dec
inc
mov
dec
ffree
sbb
adc
jmp
dec
in
fwait
test
out
enter
lods
addr16
pop
inc
shll
sub
and
fwait
and
add
sub
stos
int
and
push
rolb
and
cmp
push
fisubl
adc
rorb
and
pop
xchg
mov
test
push
insb
subl
leave
add
popa
xchg
sbb
pop
fs
fadds
mov
aaa
ljmp
mov
cmp
jbe
in
adc
sbb
lds
xor
or
sbb
sub
int
push
xor
mov
xchg
test
jmp
ljmp
test
in
dec
test
inc
xchg
xor
cs
stos
mov
pop
jno
add
notl
aam
sub
fs
mov
popf
ret
mov
xchg
rclb
xchg
inc
sub
outsb
push
decb
lret
inc
lret
scas
ss
fisubs
out
imul
dec
push
ret
xchg
mov
lods
push
mov
pop
mov
inc
stos
enter
mov
dec
adc
repz
ds
cltd
xorl
movsb
pushf
call
cmp
jo
dec
xor
xor
dec
outsl
dec
jecxz
pushw
push
ffree
xor
cmp
stc
cwtl
lret
outsl
mov
addr16
cmpsl
mov
add
inc
sbb
cmp
gs
inc
scas
xchg
dec
xor
pop
addr16
sub
fisttpl
mov
fimull
fadds
out
jg
lock
fimull
imul
sbb
insl
dec
cmp
cltd
push
loope
mov
mov
push
call
test
ljmp
mov
add
aad
add
call
xchg
mov
stos
aam
loope
sbb
int
inc
lea
sbb
jmp
mov
sub
mov
pop
pop
and
pop
mov
je
or
adc
pop
pop
push
sarb
or
cli
ss
push
shlb
lds
or
jecxz
add
jb
pop
xchg
stos
or
lret
or
into
movsl
dec
orl
jo
mov
iret
mov
icebp
and
cmp
imul
lock
in
xor
in
es
lds
cmp
or
sub
addl
sub
mov
mov
aam
and
jl
and
loop
in
push
hlt
or
fadds
pop
sbb
dec
stc
mov
mov
xchg
aas
push
mov
outsb
cmp
jnp
inc
push
popa
jmp
and
sub
cmp
in
xchg
mov
jg
or
mov
decb
js
stos
mov
lret
mov
shlb
int3
repz
shll
inc
test
sub
rcrb
fcmovnu
cld
xchg
jl
push
mov
dec
add
js
leave
leave
add
test
addr16
jne
gs
sub
add
xor
cwtl
test
add
pop
xchg
call
aam
mov
dec
pusha
mov
mov
imul
and
and
add
xorl
push
dec
add
rcrl
push
test
or
mov
stos
or
adc
hlt
mov
stos
or
popf
jl
lret
or
pop
out
jbe
mov
jg
dec
test
lret
cs
lcall
lea
add
jb
scas
cmc
jae
dec
push
mov
jge
test
outsb
ds
fs
notb
test
pop
into
push
or
iret
stos
and
xchg
and
shlb
or
out
xchg
cmp
mov
ja
sbb
addl
jne
mov
movsb
xchg
fsubrl
and
add
jae
jb
mov
jge
inc
ds
mov
cmc
and
cli
pop
cmp
cli
in
mov
and
popa
out
xor
es
mov
inc
rorb
jno
pop
aaa
push
rol
xchg
sub
adcl
cmp
adc
scas
add
cmp
mov
pushf
in
cmp
sbb
in
lret
inc
xchg
adc
shll
divl
sbb
xchg
sbb
dec
adc
out
xchg
sarb
mov
sahf
adc
orb
lret
jle
ljmp
adc
and
out
push
fbstp
lahf
roll
xor
pushf
shr
mov
push
cmpsb
push
xchg
je
out
mov
mov
jb
push
cmp
mov
jg
mov
inc
iret
into
push
rorb
jb
fists
lock
pop
dec
xchg
ds
and
sub
xchg
mov
jmp
pop
push
cli
outsb
push
add
incl
push
push
mov
nop
push
cmpsl
fadd
imull
testb
les
leave
inc
mov
addl
aas
repz
xor
and
aad
mov
mov
call
mov
lret
stos
or
sbb
push
mov
dec
ror
imul
inc
mov
mov
sbb
cmp
jns
cs
add
mov
xlat
mov
aad
jge
lahf
aam
aad
mov
xor
jecxz
lock
hlt
dec
xchg
inc
adc
gs
jae
cmp
mov
pusha
int
push
int3
stc
inc
mov
dec
test
out
ds
push
in
push
jns
and
dec
add
push
push
and
adc
div
fdivp
pop
clc
cs
sub
inc
fwait
jmp
mov
inc
inc
out
adc
nop
mov
cmp
or
xor
lret
aam
push
or
inc
push
xor
std
stos
jnp
cmpsb
adc
jbe
lret
repz
adc
aas
imul
add
dec
ja
lret
xchg
sarb
mov
mov
add
pusha
add
push
mov
jno
or
lods
jmp
push
into
scas
cmp
cs
or
lcall
or
add
int3
lcall
xor
out
stos
adc
pop
push
dec
test
iret
and
add
mov
ret
or
mov
xor
cmpsb
fisubrl
mov
mov
pop
xchg
call
insl
out
adc
jo
sub
xor
inc
add
and
inc
int
test
jge
cmp
shl
je
stc
js
shl
push
push
mov
cmp
lock
jae
push
ret
inc
imul
je
shl
jp
inc
mov
xor
add
ljmp
cmp
cld
mov
mov
js
sbb
adc
dec
add
test
adc
movl
push
cltd
loope
xchg
inc
jl
jle
aaa
ss
push
aam
in
stc
les
jae
outsb
mov
mov
xor
enter
dec
dec
and
bound
and
call
test
mov
in
pop
ljmp
xchg
es
push
lock
scas
mov
ret
jmp
subl
push
inc
jbe
and
jg
hlt
mov
sub
cmpsb
xchg
cld
je
inc
daa
adc
mov
repz
inc
add
ds
and
mov
pop
movl
jae
xchg
sbb
pop
pop
fidivrl
aas
ret
or
or
ds
add
sub
rclb
push
aas
repz
mov
int
adc
les
jnp
int3
mov
leave
rcrl
or
adc
imul
pop
inc
xchg
push
cmp
mov
push
cmp
pop
sbb
ror
push
shll
mulb
insb
loope
stos
jns
fwait
stos
mov
stc
xor
mov
cli
enter
repnz
dec
fists
outsl
xor
pop
ljmp
cmpsb
mov
push
xor
js
ss
jp
dec
js
out
sbb
push
lret
cmp
push
icebp
in
mov
adc
push
icebp
dec
mov
mov
push
insl
mull
sub
push
aad
push
pop
ror
cmp
js
sub
fwait
adc
xchg
js
sbb
xor
subb
push
or
jnp
xchg
sbb
pop
mov
mov
xlat
inc
fcmove
jge
cmp
push
and
cmp
ret
jo
out
mov
leave
adc
inc
mov
sub
addl
sti
lods
inc
mov
xor
movsb
sub
shrb
icebp
add
repnz
jl
lea
ret
jb
dec
jns
lods
cmc
pop
cmp
or
fcomp
bound
cmpsb
add
ja
sti
xchg
pop
sarl
and
add
lret
jl
loop
jecxz
movsb
sub
push
shl
mov
sbb
cwtl
or
int3
shrl
pop
dec
mov
sub
data16
aam
mov
mov
jl
iret
daa
rcrl
mov
lcall
xor
fmull
add
je
xchg
add
inc
in
jne
mov
fcompl
push
rol
je
sbb
inc
mov
jle
push
xor
sbb
insb
add
add
mov
or
push
ret
jle
in
call
sbb
add
mul
or
pushf
pushf
mov
push
inc
sub
cmp
sbb
add
xor
mov
and
cmc
cs
fsubrs
scas
inc
add
push
nop
dec
mov
in
sub
push
lret
inc
dec
rol
rcrl
mov
dec
sbb
mov
push
jmp
add
sbb
xchg
push
jge
fwait
js
dec
add
cltd
pop
mov
lcall
adc
or
test
mov
adc
sahf
add
and
adc
mov
and
mov
test
aaa
push
jle
sbb
mov
cmc
xor
sbb
mov
mov
mov
mov
lcall
lea
xor
mov
fdivrs
mov
xchg
pop
inc
mov
sbb
push
stc
enter
mov
fsubrs
fbstp
inc
dec
adc
outsl
sahf
sbb
fimull
fidivs
test
xorl
xchg
mov
test
je
fisubrs
lods
cwtl
test
and
mov
jne
je
sbb
push
sub
pop
dec
out
push
dec
arpl
xor
inc
outsl
push
jmp
rcl
addr16
flds
or
cs
add
lahf
out
jge
adc
inc
adc
sbbl
mov
pop
mov
push
les
cmp
in
out
cmp
sarl
fwait
int3
adc
mov
ljmp
std
int
push
insb
cmp
jno
nop
sbb
imul
out
sub
push
mov
pop
iretw
mov
adc
rcll
mov
and
iret
icebp
in
cltd
loopne
fdivrl
lahf
int
stc
push
mov
ss
in
pop
xchg
js
xchg
lods
add
sub
xor
sbb
mov
jae
lret
pop
daa
sbb
roll
sbb
hlt
scas
mov
pop
jns
and
lret
add
xchg
je
stos
daa
loopne
xor
mov
repnz
jle
imul
jl
mov
push
and
in
pop
jle
pushf
cmpsl
mov
popf
sub
push
sbb
stos
pop
les
adc
push
pushf
cmpsl
mov
sub
lret
adc
ljmp
xchg
dec
das
movsb
aas
xor
pop
repnz
iret
stos
xchg
cmp
xchg
xor
mov
xor
mov
js
dec
mov
push
jmp
mov
test
lret
inc
pop
test
mov
inc
cmp
cmp
std
push
loop
sbbl
std
sub
cmp
push
cmc
test
pop
sub
movsb
and
push
insl
xchg
pop
xor
push
xor
inc
push
jb
push
aaa
cmp
out
cmp
insb
adc
and
jns
test
mov
cs
sarb
xchg
xor
push
and
cmp
stc
adc
out
insb
out
jnp
lods
add
imul
jo
rcll
adc
adc
push
dec
jg
stos
stc
push
pop
outsb
or
mov
xor
or
in
sub
jle
cmp
pop
cwtl
xor
sbb
in
out
in
ljmp
pop
xchg
sbb
add
clc
mov
insb
imul
jnp,pt
or
xchg
fwait
mov
push
aad
dec
lea
daa
cld
mov
push
add
pushf
lds
or
pop
mov
add
jmp
xchg
push
ss
ja
es
push
jmp
push
repz
mov
add
pop
test
cmp
mov
xlat
inc
mov
add
sub
cwtl
inc
sbb
and
jle
ljmp
mov
push
in
push
push
aam
push
pushl
flds
call
js
or
fwait
rcrl
maskmovq
idivl
xorl
xor
leave
lea
testb
pop
sub
rolb
enter
out
sbbb
rorl
rolb
mov
pop
dec
add
outsl
cli
cli
nop
data16
dec
mov
mov
in
movsl
arpl
mov
mov
push
out
ret
ret
call
pusha
and
jecxz
push
je
cmp
mov
imul
cmpsb
jl
in
inc
mov
lcall
mov
jo
jnp
cmpsb
mov
test
and
shrb
arpl
mov
jno
shl
jmp
mov
adc
lds
mov
mov
add
test
mov
cmp
mov
and
gs
inc
fistpl
pop
push
scas
mov
loope
jne
sub
jecxz
nop
cld
xchg
or
or
adc
inc
mov
imul
int
mov
xchg
rcl
mov
mov
xor
lret
push
imul
fwait
out
xchg
aam
mov
in
sbb
jb
lea
inc
fbstp
testb
add
lods
add
shrb
sub
cmpsb
lret
outsl
cmp
mov
sbb
or
xchg
in
es
push
jecxz
cmc
andl
sbb
mov
cmp
xchg
into
mov
fs
mov
ret
sahf
and
or
inc
sub
pusha
mov
and
jns
fildll
enter
dec
pop
dec
mov
pushf
js
jg
mov
scas
adc
xchg
push
shrl
jo
movb
cmp
jmp
inc
inc
shrb
cwtl
lods
jmp
fadd
lahf
sbb
cmp
notb
sbb
outsl
ret
mov
xchg
iret
pop
mov
push
add
xchg
call
pop
std
outsl
lret
popf
cmpsb
arpl
mov
adc
test
cmp
inc
nop
xchg
adc
jbe
push
scas
and
pushl
repz
jp
into
ret
push
dec
leave
in
sbb
xchg
mov
sub
lds
mov
or
inc
sbb
repnz
adc
and
add
hlt
clc
aam
rcrb
adc
arpl
or
adcb
mov
shrl
push
call
xchg
add
lock
and
cmp
xchg
popf
jae
scas
jmp
inc
imul
sbb
int3
sbb
jge
or
inc
and
push
aam
xchg
int3
or
xor
repnz
sub
add
loopne
aaa
xchg
mov
fimull
lret
push
cmpsb
xchg
lods
test
repz
stc
test
dec
sub
loop
mov
in
popf
lds
jg
das
adcb
insb
mov
subl
jmp
pop
and
fmul
movsb
subb
andb
imul
jg
in
leave
xor
xchg
jno
loop
fcom
insl
incl
pop
addr16
stos
lcall
jbe
rcl
out
ret
fwait
and
mov
out
rcrl
sarl
or
dec
std
jo
xlat
mov
mov
fwait
and
jns
jb
aad
and
xchg
or
mov
les
pop
insl
in
pop
js
negl
ljmp
popf
adc
std
dec
jmp
mov
int
adc
bound
jnp
lret
fcmovnu
daa
sbb
mov
lret
and
ss
cltd
rol
leave
push
out
sbb
and
dec
pop
sub
pop
xchg
xor
pcmpeqd
adc
sbb
mov
pop
mov
push
push
mov
or
xor
repz
mov
inc
repz
xchg
out
mov
push
orl
fdivs
cltd
xor
ret
pop
inc
sbb
sub
int
pop
jne
mov
icebp
cmp
push
push
out
outsl
dec
and
add
lcall
cmp
lret
insb
sar
pop
mov
xor
or
jmp
xchg
mov
daa
pop
out
imul
add
xchg
mov
lods
out
cmp
mov
arpl
dec
fiaddl
cmp
ret
std
stos
mov
repz
stc
mov
inc
sbb
dec
imul
outsb
ds
lds
repz
mov
mov
cltd
xor
cmc
lahf
cwtl
xchg
add
and
scas
idivb
out
fsubl
in
mov
data16
in
ja
fldcw
imul
aaa
adc
clc
lret
cmpsb
arpl
dec
inc
push
into
mov
pop
or
icebp
in
push
shlb
add
jo
pop
xor
imul
pop
mov
ljmp
mov
addl
loopne
sbb
lahf
fwait
sub
loopne
int3
inc
or
into
loope
and
pop
add
push
rorb
mov
mov
jnp
andl
inc
push
jno
or
xor
test
call
ret
xchg
sarl
adc
fldenv
or
adc
adc
data16
pop
adcb
lahf
ds
mov
add
popf
stos
mov
and
jae
add
mov
cmpsl
xchg
push
dec
pop
cs
xchg
mov
mov
daa
pop
stc
scas
or
fidivrs
js
dec
or
pop
add
lds
imul
out
jmp
cmc
in
std
or
sbb
jae
xchg
testb
mov
inc
pop
mov
cmp
mov
mov
push
jae
push
pushf
sbb
lea
xor
aad
mov
shl
imul
xor
mov
inc
popl
mov
repnz
bound
sbb
leave
leave
rcl
dec
jle
rcr
roll
add
or
adc
mov
xchg
jmp
fimull
mov
sahf
adc
push
or
sub
into
inc
add
stos
aad
or
les
stos
jmp
sbb
fsubrs
and
fcomps
add
adc
jle
cmp
rclb
loop
xor
notl
lahf
adc
mov
lcall
sahf
rclb
hlt
das
add
mulb
inc
stos
repz
sbb
push
stos
std
mov
stos
push
xchg
pop
imul
push
mov
xor
pop
sub
cmp
add
and
leave
aas
inc
pop
dec
push
or
mov
lahf
mov
out
mov
sub
test
xor
xor
jbe
and
mov
rol
movsl
lock
push
mov
inc
mov
push
inc
mov
repz
hlt
out
in
jb
cwtl
fstpt
adc
ja
aad
or
mov
jl
dec
jmp
in
mov
nop
in
sbb
push
loope
pop
lret
jne
fnstsw
xchg
nop
enter
test
test
repnz
sarb
xchg
mov
push
les
movsb
push
leave
in
cmc
addb
mov
cs
mov
loope
scas
iret
mov
mov
mov
or
mov
xor
push
cmpl
xor
mov
pop
sub
push
xchg
sbb
pop
or
das
jl
xchg
sarl
inc
cltd
les
mov
je
push
shlb
fidivrs
mov
test
jmp
adc
add
test
repnz
xchg
popa
pop
dec
adc
mov
jecxz
add
pop
adc
sbb
adc
imul
out
cld
inc
push
test
lods
pushf
in
lods
mov
mov
in
jb
scas
cmp
loopne
aaa
orb
mov
call
jnp
adc
mov
icebp
leave
and
dec
mov
sbb
mov
das
popa
int
inc
rorl
mov
or
pop
loopne
cmp
das
jmp
test
add
popa
mov
push
nop
dec
push
add
add
ljmp
sub
jb
sbb
ficoms
sub
scas
pop
in
shl
or
orb
mov
sti
insl
mov
fldcw
jno
cwtl
fbstp
fidivs
mov
ret
iret
sbb
xorl
repz
cmp
cli
xchg
test
inc
adc
adc
gs
mov
jno
std
mov
lcall
mov
mov
mov
fyl2x
mov
xor
loop
aaa
add
repnz
rorb
lock
pop
inc
add
inc
movsl
fldenv
test
xchg
jb
daa
mov
inc
ret
xor
mov
push
xor
stc
notl
scas
push
sbb
lret
cmpl
jle
enter
lods
fpatan
int
sbb
into
or
stc
das
cmpsl
mov
das
loope
inc
addb
and
xlat
sub
dec
sbb
pop
inc
mov
mov
mov
xchg
ljmp
movsl
lret
orb
addb
jle
add
add
fildll
lret
cmpl
frstor
shll
sbb
add
cli
jb
in
ja
xor
pop
out
scas
fmull
out
jno
cmpsl
fmull
stos
arpl
cmpsl
loop
flds
enter
popa
xchg
inc
mov
pop
adc
stc
sub
cmc
mov
pop
jmp
cmp
data16
shlb
scas
gs
test
add
adc
push
ja
jno
or
lahf
or
xor
stc
rorb
das
mov
lea
aas
sahf
in
pop
mov
xor
repnz
xchg
mov
push
cmp
lock
push
fdivr
adc
and
push
jl
add
and
aam
shrl
pop
int3
push
jne
loopne
inc
xchg
mov
inc
in
xor
jmp
fbstp
and
pusha
test
inc
stc
jno
mov
adc
xor
mov
stos
stos
push
icebp
test
cmp
sbb
xor
sbb
xor
subl
scas
inc
lea
dec
shlb
xor
insl
stos
cltd
push
js
add
cmp
decb
outsb
mov
cmp
dec
xchg
aaa
mov
cmpsl
les
test
mov
leave
fisubs
push
inc
pop
faddl
and
mov
mov
push
sub
es
xor
mov
adcb
fs
xor
cld
sbb
test
stos
jb
icebp
lods
jge
jmp
sub
insl
jbe
data16
inc
cmp
xor
fistpll
pop
mov
pop
jecxz
pop
loope
stos
aam
cmpsb
sbb
xor
fdivrs
andl
push
call
mov
pusha
or
sbb
call
push
jmp
jae
adc
mov
or
aad
std
subl
outsl
inc
cmp
les
inc
aaa
mov
cld
lcall
xor
movsl
push
sbb
xor
mov
scas
loop
and
jle
in
out
stc
inc
sub
mov
cmc
xchg
or
add
lea
fisubl
pshufw
fstps
pop
leave
cs
ret
jle
inc
leave
ljmp
cwtl
push
popf
cwtl
stc
popa
iret
shl
loop
jge,pt
push
mov
clc
ret
into
cld
dec
dec
inc
mov
loopne
cli
cld
fsubrl
lret
jg
jecxz
sub
mov
sti
mov
mov
inc
inc
sub
out
push
cmp
and
int
das
mov
stc
pushf
mov
shl
add
int3
dec
dec
fidivl
decb
push
movb
mov
xor
jmp
les
add
fidivrl
add
cli
xlat
adc
insl
out
push
and
repnz
aas
aad
test
pop
adc
insl
loope
mov
dec
mov
aas
mov
mov
clc
xchg
inc
into
cli
fmulp
sbb
cmp
call
adc
or
mov
out
jne
loop
jo
add
ficoms
mov
mov
or
push
inc
aas
test
sbb
or
pushf
fbld
fildl
clc
jnp
std
cmp
popf
jnp
iret
pop
subl
incb
push
cwtl
fidivrs
sbb
into
imul
test
pop
loope
dec
call
lods
push
or
das
ss
loopne
aas
push
andl
mov
pop
xor
ds
daa
push
mov
push
cmp
std
pop
je
pop
or
mov
rorl
shl
fisubs
and
icebp
scas
fmulp
sbb
cmp
into
js
mov
inc
sub
or
adc
stos
je
xor
insl
gs
mov
jp
sub
jno
cmc
xchg
mov
pop
cmp
repnz
sbb
rorb
xor
and
push
xchg
lea
imul
or
inc
or
mov
aam
or
hlt
inc
test
clc
loop
add
and
test
test
shl
adc
out
push
scas
mov
or
aad
das
jb
sbb
test
notl
inc
movsb
fldpi
stos
fstpl
je
subl
ds
fbstp
mov
shrb
fs
pusha
je
popf
les
push
mov
inc
andb
jnp
cmp
jnp
fisubrl
sti
and
inc
in
icebp
add
orl
mov
rolb
es
dec
hlt
fcmovnbe
mov
cmpl
xor
stos
dec
jmp
push
push
std
cmpl
sbb
test
push
adc
pop
pmovmskb
outsl
mov
cli
xchg
pop
mov
mov
stos
inc
add
clc
push
xor
cltd
sbbb
hlt
outsl
cmc
dec
popa
inc
ds
sub
test
pop
jns
mov
jg
or
pop
xor
data16
sti
xor
and
ret
call
jne
andl
sub
push
xchg
or
and
fsubl
repz
and
dec
leave
mov
cs
aad
cmpsl
stos
mov
bound
sub
shr
mov
jbe
pop
jecxz
ficoml
repz
ljmp
pop
das
lock
mov
jle
scas
mov
testl
jns
adc
pop
mov
sbb
jp
and
mov
bound
daa
push
xchg
mov
inc
inc
lds
and
push
test
jle
daa
loope
push
test
mov
scas
push
int3
xchg
mov
roll
add
jge
aam
sbb
xor
sbb
sbb
push
push
sub
pop
sbb
stc
inc
xor
sub
mov
test
pmaddwd
insb
sbb
movsl
subl
push
pop
lods
mov
jmp
ror
cmp
or
dec
rcrl
imul
pop
insl
jp
iret
xchg
ficomps
mov
lea
testl
into
dec
ret
cmp
adc
xchg
mov
cmp
push
jl
sub
pop
inc
flds
pusha
out
fimull
arpl
rcrl
cmpsl
sbb
int3
mov
repz
pushf
or
lahf
test
into
sub
sub
int3
stos
jecxz
sbb
or
sbb
imul
push
cli
mov
jg
cmp
sbb
xor
pand
jo
mov
mov
mov
lds
add
scas
rcll
xchg
dec
int3
xlat
xchg
cmpsb
dec
sub
sub
mov
inc
or
aad
push
lds
icebp
mov
int
mov
sbb
sub
mov
inc
mov
sti
fs
pop
mov
fsubrp
add
movsl
movsb
movswl
adc
xchg
mov
cs
xchg
cmp
mov
pop
lret
lock
call
insl
pop
arpl
ds
test
push
shl
mov
or
imulb
mov
sete
pusha
aam
jns
cmpsl
fwait
dec
mov
es
movsb
arpl
clc
jnp
lahf
jo
testb
pop
ja
pop
adc
fidivl
mov
call
shll
cmpsl
out
xor
cmp
divl
test
nop
imul
lods
adcl
mov
fwait
nop
push
mov
or
dec
sub
and
xor
and
pop
repnz
cmpsb
pop
leave
fstps
and
in
cs
cmp
out
dec
repz
inc
xchg
mov
std
lcall
mov
das
xchg
ret
mov
push
vsubss
or
in
jg
pushf
sbb
jb
fbstp
and
mov
es
mov
add
inc
ja
mulb
mov
mov
adc
jl
sahf
mov
adc
nop
ret
cld
arpl
scas
inc
fsubs
loopne,pt
sub
sarl
pop
add
mov
pusha
push
stos
fisubrs
test
dec
iret
mov
dec
sbb
out
ljmp
outsb
add
mov
mov
cmc
add
outsb
and
push
insb
cmp
mov
jnp
push
sbb
cli
and
aas
testl
sbb
lret
ret
repnz
aaa
xor
pushf
pop
pop
lods
cmp
inc
mov
dec
arpl
jnp
dec
int
jmp
dec
aam
pop
js
mov
stos
aad
sbb
mov
add
dec
inc
adc
inc
xchg
and
imul
sub
mov
testb
xchg
inc
cmp
cld
mov
sbb
xor
adc
lahf
mov
jl
out
sub
pop
push
lret
or
xchg
inc
cmp
rcrb
sahf
out
pop
push
andl
cmp
dec
jmp
movsl
inc
rclb
fstl
cmp
call
ljmp
or
into
jmp
sub
mov
jns
sar
scas
fs
xchg
push
setg
xchg
mov
sbb
subl
jae
test
cmp
sbb
mov
xchg
pop
xlat
jno
aam
addr16
out
pop
mov
ret
xorl
es
or
mov
divl
xlat
lcall
xor
dec
add
stc
nop
adc
ret
outsl
xchg
js
fwait
test
mov
jbe
lods
push
arpl
adc
dec
cmp
mov
mov
dec
push
cmp
push
cmpb
aad
fs
roll
or
out
les
in
shlb
rcrl
push
dec
lock
repz
cmc
or
add
pop
xchg
pop
cmpsb
sub
jecxz
lahf
pusha
in
mov
and
pusha
cs
jle
and
or
bound
iret
mov
xor
ss
and
jno
xchg
jae
popa
xchg
cmpsl
orb
xchg
daa
push
adc
pop
test
sub
mov
lret
push
and
iret
sub
aas
imul
cmp
scas
idivl
daa
orl
imul
lock
stc
test
inc
sbb
sbb
repz
icebp
in
enter
push
mov
mov
jle
xchg
pop
out
and
lret
lds
push
in
cmp
inc
mov
inc
mov
pop
xor
push
or
add
popf
xchg
call
lods
and
pop
mov
hlt
imul
sarb
cwtl
negb
mov
mov
add
jbe
or
enter
bound
mov
jecxz
rclb
sbb
dec
inc
testl
xlat
mov
sti
push
xor
dec
jge
sbb
clc
lret
jbe
sub
push
aas
cld
xchg
mov
aaa
test
or
jecxz
xrelease
mov
jnp
pop
cmp
add
mov
cli
pop
fiadds
in
into
je
test
jge
push
mov
out
jle
rcrb
mov
imul
pop
pusha
add
jg
enter
lea
xorb
and
andb
and
add
add
pop
gs
jp
fst
or
mov
dec
add
xor
fidivrs
loope
shlb
sub
gs
xchg
fistps
inc
jns
dec
jl
pop
pop
push
pushf
repnz
pop
add
lahf
dec
jmp
push
mov
jl
mov
xor
clc
inc
jae
cs
insl
divb
js
fstps
cmp
iret
sub
jp
push
pushf
fimull
mov
mov
test
jle
mov
pmaxub
popl
shll
fiadds
jns
mov
lock
cld
shrb
test
dec
xor
pop
hlt
shll
jle
pop
insl
add
mov
aad
jb
sbb
jmp
xor
adc
inc
shll
sahf
mov
lret
mov
dec
mov
into
push
xor
mov
fnstcw
ret
or
sbb
out
js
and
adc
in
aad
push
arpl
outsl
xlat
sbb
lods
aam
in
mov
add
gs
jnp
mov
mov
xor
sbb
dec
push
mov
sarl
pop
fidivs
jbe
xor
mov
dec
jp
push
pushl
stc
popa
xor
jb
pop
dec
and
mov
and
shrb
xor
mov
cmp
mov
pop
sub
dec
popf
test
sbb
jno
daa
arpl
int
mov
lret
push
data16
and
adc
mov
scas
jg
pop
and
jg
hlt
mov
dec
fidivrs
test
and
dec
lea
inc
repnz
fcompl
loop
ja
repz
out
or
xor
pop
xchg
or
push
xlat
addb
pop
loop
es
cmpsl
push
cmp
push
adc
cs
mov
ljmp
push
pop
inc
inc
movsb
push
lods
stos
shll
iret
jno
sbb
or
shll
inc
call
rcrb
mov
mov
and
mov
sbb
out
inc
mov
je
cld
mov
cvttps2pi
inc
lahf
lods
in
insb
cmp
inc
in
test
push
cmpsb
les
push
rol
cltd
lods
mov
ja
xor
xor
or
ljmp
sbbb
jo
push
mov
cmpsl
popf
fdiv
fmuls
ss
je
pop
ret
cmp
dec
cmp
mov
pop
jp
fs
inc
lcall
lods
cmp
outsb
mov
pop
aaa
std
sarl
std
inc
fidivrs
inc
jb
lea
push
mov
pop
pop
mov
and
mov
sub
cmp
pop
adc
stc
mov
adc
push
and
aas
pop
xchg
rcrb
fsubrl
adc
sbb
inc
lods
adc
loop
shrb
bound
inc
out
clc
stc
and
push
and
cmp
cltd
add
mov
inc
daa
or
push
pop
add
nop
mov
add
xorb
adc
pop
and
lea
pusha
cmpsl
std
jbe
pop
push
add
sub
xchg
mov
js
sub
mov
loopne
push
pop
lods
ljmp
outsl
bound
ror
push
stos
test
shlb
sub
xchg
iret
dec
pop
push
popa
out
cmp
popa
xchg
mov
adc
pop
sbb
sahf
dec
fstpl
inc
pop
aaa
push
push
aam
mov
dec
outsb
or
test
fsubl
fildl
cmp
aad
mov
dec
mov
fcomi
jl
cmpsl
xchg
test
adc
or
push
fisttpl
sub
jg
mov
push
aad
lods
lea
pop
jb
mov
cmp
icebp
and
mov
dec
xchg
mov
cmp
cs
sub
imul
xor
loope
xchg
and
out
ss
scas
xor
push
xor
xchg
outsb
mov
ret
and
sub
sbb
or
sti
cmp
sahf
leave
clc
push
sbb
js
aam
xchg
loopne
and
xor
push
lods
pop
dec
jo
arpl
xchg
cld
loope
or
push
mov
data16
mov
js
and
test
jo
aad
imul
xchg
cmc
out
add
jecxz
mov
aaa
xchg
dec
in
push
jae
ja
stos
movsl
xchg
mov
push
sarl
fstp
aam
iret
rclb
mov
mov
fidivl
mov
cltd
test
dec
sarb
mov
dec
fldcw
ret
inc
mov
push
stos
lods
std
dec
xchg
je
out
push
cmpsl
pop
dec
mov
repz
push
out
clc
mull
jecxz
iret
rclb
lods
sarl
mov
pop
lock
movsb
dec
cs
xchg
or
aaa
mov
ficoms
dec
aad
imul
int3
sbb
ljmp
inc
cmpsl
mov
ja,pn
inc
push
imul
outsb
push
ja
xor
orl
jb
or
fildl
ret
push
mov
mov
sbb
mov
add
or
clc
cmp
and
sub
dec
push
clc
loope
jae
jo
and
aam
xor
fmull
fs
call
dec
xchg
lcall
mov
xchg
pop
xchg
mov
mov
shll
jmp
loopne
mov
test
mov
icebp
in
lret
jbe
lahf
stos
pusha
add
int
fidivs
mov
test
and
sbb
xchg
adc
xor
or
add
push
push
mull
xchg
out
call
aam
dec
movsl
incl
mov
cmp
add
jp
pop
jne
rcl
ffree
xor
push
pop
pushf
lret
bound
enter
fwait
add
out
sbb
cmp
jmp
mov
pop
add
int
sub
jns
xor
insl
xlat
test
iret
je
dec
fmull
clc
add
arpl
pop
test
in
les
movsl
inc
fwait
sahf
push
iret
sarb
inc
inc
sub
inc
stos
jne
push
cmpsb
mov
ret
lret
sbb
gs
shrb
sub
out
jns
loopne
dec
mov
mov
int
mov
cmc
adc
push
inc
add
xchg
adc
xor
mov
or
push
xor
push
cli
pop
test
push
xchg
and
push
int
xor
push
cmp
xchg
dec
ja
pop
icebp
test
mov
popa
lods
arpl
dec
push
cmpsb
aam
cli
addr16
loope
sub
dec
cmp
rcll
outsb
iret
jne
test
cwtl
leave
popf
xchg
addl
dec
ljmp
jnp
movsl
sub
adc
aam
mov
mov
xor
sbb
jnp
cmpb
jbe
mov
sbb
jne
xchg
sub
adc
lock
mov
jle
cwtl
xchg
rcl
cmp
mov
je
cmpsl
test
arpl
pop
lods
gs
xor
mov
cmpsb
pop
repz
xchg
in
test
add
ss
and
ss
hlt
mov
hlt
out
out
sbb
mov
sbb
cmp
add
lods
outsb
inc
or
mov
lea
mov
lahf
shlb
mov
pop
lea
outsl
add
jp
vmwrite
mov
push
out
movsb
in
pop
jo
test
subl
notb
jle
loopne
fs
sbb
push
pop
xchg
lods
sbb
mov
popf
jmp
mov
inc
push
sub
or
cmpsb
or
adc
lahf
mov
dec
outsl
fisttpll
dec
shl
push
xchg
in
pop
jp
inc
sahf
cld
movsb
jno
add
mov
xchg
movsl
lock
jne
jle
xlat
outsl
mov
int3
fs
xchg
hlt
mov
shr
dec
enter
mov
dec
adc
ficoml
call
add
xor
or
leave
call
or
jg
add
xor
test
push
inc
or
inc
jl
pop
daa
add
pop
call
and
push
mov
mov
pop
mov
or
add
aas
jno
test
popf
xchg
mov
adc
add
sbb
sbb
push
or
out
mov
mov
or
sbb
scas
mov
in
cld
sbb
idivb
stos
aaa
cmp
add
repnz
popa
adc
adcb
js
mov
xor
in
cltd
jle
out
add
add
dec
xchg
hlt
adc
push
and
jae
dec
mov
sbb
mov
pop
or
adc
or
jb
movsb
andb
cltd
cmpsl
xchg
inc
int
movsb
std
nop
into
adc
movsb
cmovg
scas
and
sbb
cmp
pop
mov
or
rorb
fmuls
and
pop
mov
stos
icebp
lcall
out
lcall
aaa
add
pop
mov
adc
movsb
and
mov
xor
loope
pop
sbb
outsl
xchg
pop
jmp
enter
negl
xchg
pop
or
add
aaa
imul
or
dec
dec
xor
adc
arpl
icebp
rcr
ljmp
insl
sarb
stos
mov
loop
aad
fdivp
mov
mov
pop
or
movsb
lds
sbb
jecxz
movsb
push
push
rol
pop
ljmp
add
aas
loop
insl
push
aad
and
out
jge
clc
pop
and
enter
mov
shl
cld
jbe
subb
cmp
test
gs
or
jnp
fwait
xchg
stos
pusha
test
stos
adc
fidivl
pushf
out
in
push
push
loop
dec
jmp
leave
xchg
aam
push
push
or
leave
and
data16
lret
pop
xor
std
pop
inc
push
movsb
int3
cmc
out
movsb
inc
sti
cmp
dec
pop
fistl
xchg
aaa
push
sub
in
scas
jge
push
insb
sub
std
inc
jne
inc
mov
loope
dec
fnsave
pop
and
adc
in
in
inc
test
jnp
inc
cmp
xchg
jo
test
out
xchg
and
push
mov
stos
mov
xor
push
rcrl
inc
inc
ficoms
ret
insb
cmp
je
arpl
inc
jae
daa
lock
or
push
mov
push
imul
idiv
sbb
outsl
movzbl
mov
push
mov
cld
push
or
and
cmpsl
enter
mov
lds
sbb
jbe
or
sub
jmp
jecxz
ljmp
lahf
lods
xor
in
jmp
mov
out
dec
cmpsl
mull
jnp
xchg
aad
mov
sub
jle
out
mov
shr
xchg
orl
mov
xchg
out
in
aas
dec
sbb
pop
mov
mov
xorb
adc
adc
in
sarl
push
outsb
fs
jo
or
leave
les
js
cmp
or
or
dec
mov
xchg
fildll
push
loop
inc
ja,pn
pop
cli
dec
sub
mov
mov
add
inc
jo
cmp
cmpl
pop
xor
cmp
and
data16
jge
shrl
cmpsl
inc
mov
fimull
jne
je
mov
pop
jns
lcall
xor
sbb
call
enter
jge
je
adc
xor
repz
gs
jae
dec
js
mov
xchg
inc
sahf
fisubl
or
xor
jno
lret
pusha
cmpsl
loopne
das
adc
inc
cmp
pop
dec
or
dec
dec
enter
fwait
daa
test
jne
cs
movsb
pmulhuw
enter
mov
and
push
test
mov
scas
xor
inc
dec
leave
ret
sbb
dec
mull
dec
dec
pop
jns
pop
mov
mov
sbb
add
mov
mov
inc
fisttpl
jle
fnstcw
sets
loopne
push
into
jg
or
and
inc
rcrl
scas
pop
cwtl
aam
into
filds
les
flds
add
jge
scas
repz
mov
xor
sbb
dec
push
loope
pop
addl
add
mov
pop
scas
push
xchg
mov
mov
cltd
sub
add
dec
add
pop
xor
in
pop
inc
js
xchg
sbb
xchg
sub
outsb
mov
loopne
fldenv
cld
sti
sbb
aam
subl
adc
mov
cmp
mov
inc
cli
lea
idiv
sti
loope
adc
jae
aas
cs
mov
or
fwait
xchg
fwait
add
xor
gs
aam
dec
cwtl
push
sub
das
mov
xor
jns
cmpb
rcrb
vmwrite
loopne
rolb
inc
dec
mov
xchg
insl
xchg
ret
je
adc
in
cmp
out
lcall
dec
adc
fwait
in
sub
push
cmpsl
jl
mov
movsb
ja
call
imul
mov
ficompl
mov
add
adc
rorb
bound
xor
and
mov
push
add
shrl
shl
fwait
jg
test
pop
rclb
fcoms
test
inc
test
aad
pop
add
aaa
pushf
jne
pop
lock
mov
orl
cwtl
sbb
add
pop
add
aam
inc
out
notb
mov
push
jns
pop
mov
cmpsl
sub
inc
xchg
push
rorb
dec
fwait
and
ret
adc
test
cli
jns
mov
movlhps
inc
sarb
adc
mov
inc
fs
fdivl
int3
test
scas
daa
jmp
stc
dec
jecxz
jno
adc
lods
dec
mov
cmp
mov
dec
gs
xchg
lret
mov
xchg
shlb
pusha
movsl
mull
sahf
fistpl
cmp
xchg
jp
movsb
jg
sahf
and
pop
or
adc
mov
in
ds
sbb
add
pop
test
outsl
dec
fisubrs
mov
add
pop
test
int
out
int
or
dec
xor
lods
bound
cmp
imul
pop
and
and
xor
enter
adc
or
inc
xchg
es
adc
hlt
xor
adc
or
daa
inc
repz
pop
push
mov
int3
int
jo
test
fisubrl
adc
mov
movsb
rorl
out
in
and
adcb
xchg
pop
flds
inc
loopne
cmp
push
jnp
mov
dec
test
je
dec
shrb
lds
das
int
ficomps
mov
cmpl
lret
lods
shll
and
stos
test
pushf
loop
sbb
mulb
movsb
stos
or
dec
mov
pop
push
sbb
movsb
popa
lods
arpl
ds
imul
push
dec
push
mov
sbb
inc
stos
addb
and
pop
mov
daa
pushl
jne
sbb
push
filds
sbb
ss
jae
cld
scas
jle
es
push
push
adc
sbb
or
lods
call
pop
mov
pop
jne
jmp
daa
jo
add
fsubr
add
aad
stos
je
inc
ds
hlt
nop
sbb
aad
nop
scas
and
jne
aad
imull
xor
cmpb
dec
sbb
fwait
das
bswap
loop
xor
or
push
xor
dec
arpl
push
outsb
sbb
pusha
popa
pop
pop
test
jnp
or
nop
sub
sbb
rcrl
mov
add
mov
jge
push
push
das
adc
out
xor
adc
nop
mov
pushf
add
push
adcb
das
mov
loop
inc
or
cmp
rolb
stos
inc
mov
shlb
mov
jbe
cmc
inc
pushf
mov
aam
inc
adc
xlat
sbb
push
cld
imul
das
mov
push
js
arpl
mov
addr16
dec
cmp
push
mov
cmpsl
or
mov
imul
add
jp
and
adc
mov
out
movsl
cmp
mov
notb
popa
shll
inc
dec
test
push
into
mov
pusha
mov
sahf
sub
into
gs
add
jge
dec
sbb
insb
fsubp
loop
and
repz
insb
in
outsb
sub
push
mov
inc
pop
loop
cmp
hlt
cmpsl
movl
pop
inc
and
test
out
pop
xlat
ss
imull
xor
mov
loop
in
subl
data16
idivl
inc
in
mov
fmuls
fadds
test
add
sahf
push
xchg
sbb
and
jp
xchg
aaa
loope
sub
jle
ret
and
sub
and
mov
add
push
iret
push
push
and
leave
lock
ja
add
roll
and
orl
shll
clc
adc
lods
popf
cs
loope
loope
sbb
mov
xor
call
fucomip
sbb
mov
imul
jg
insl
das
outsb
std
push
mov
imul
test
fcoml
pop
inc
mov
je
cmp
pop
sar
repz
inc
or
in
ja
adc
sub
clc
and
xchg
aam
int3
rolb
movsb
jg
dec
loope
sar
out
in
outsl
loop
and
fs
mov
cs
jecxz
push
xchg
sahf
or
pop
das
out
lahf
mov
xor
add
mov
sar
jne
mov
sub
pop
lahf
jne
jecxz
mov
mov
pop
mov
or
sbb
rorl
inc
ds
das
in
or
cs
and
mov
bound
addr16
sbb
in
dec
fdivl
pop
mov
dec
loopne
mov
lea
gs
sbb
cmp
cmp
movsb
repz
sub
adcl
jg
jne
pop
sbb
dec
mov
fcmovu
cmp
and
aaa
xor
adc
push
lret
pushf
inc
xchg
xor
pop
pushf
pop
fidivs
aas
fs
xchg
pop
push
aas
xchg
xorw
jle
dec
cmp
call
insl
or
ds
mov
mov
push
in
stc
mov
jp
mov
in
cmp
insb
adc
push
sub
push
arpl
jne
insb
outsl
into
xchg
adc
hlt
mov
add
mull
addr16
mov
dec
jp
xor
out
add
call
push
mov
jo
pushf
sub
jns
out
sub
inc
sbb
adcb
push
mov
jne
jl
lods
push
sub
jbe
sub
cmp
into
push
aam
or
fwait
test
add
scas
outsb
stos
cmp
add
mov
iret
mov
mov
push
or
dec
inc
add
pushf
xchg
xchg
mov
leave
out
iret
cmc
dec
cwtl
daa
and
cmc
aam
push
inc
not
out
lret
mov
and
jnp
mov
ja
imul
bound
mov
xchg
nop
cld
xor
loop
je
sbb
or
fs
cmp
incb
mov
stc
es
pop
shl
sub
lods
dec
inc
xchg
push
outsl
xchg
add
divl
and
pop
repnz
pop
leave
das
cmp
out
pop
cmp
mov
pop
fists
fsubs
lcall
pop
jge
xor
mov
fwait
xchg
test
dec
lods
inc
mov
cmp
pop
mov
jl
addr16
out
push
push
clc
test
out
gs
mov
bound
inc
jle
push
adc
push
imul
dec
mov
xchg
imul
sub
mov
and
cmpb
icebp
lods
ficompl
in
mov
and
push
cmpsl
pusha
leave
fsub
add
mov
lods
cmpsl
adcl
mov
hlt
push
stos
cmc
dec
mov
jecxz
or
pop
jo
adc
fsubs
pop
inc
scas
test
add
scas
push
test
inc
pop
lret
popf
jae
mov
mov
movsb
mov
addl
adc
cmp
or
mov
fcom
add
sbbb
xor
cmp
mov
mov
pop
hlt
ja
outsl
stos
andb
fmul
xlat
sbb
jno
inc
jp
xor
idivb
pop
adc
pop
out
je
lahf
orb
icebp
adc
and
cwtl
icebp
repnz
mov
inc
xor
shlb
pop
pop
fsubrs
jb
pop
adc
lea
cmp
pop
add
ds
xorl
xchg
cli
xchg
insl
push
or
iret
sti
sub
pop
inc
ljmp
hlt
mov
xor
jecxz
dec
sti
cmp
pushf
jmp
in
or
mov
repz
xor
mov
out
fnsave
mov
push
bound
add
pop
cwtl
dec
mov
mov
add
nop
lea
dec
and
faddl
sub
into
mov
jg
test
psubq
loop
add
out
mov
scas
xchg
inc
fs
lahf
push
lods
ja
cmpsl
test
and
inc
cmc
outsl
fwait
loop
lahf
xchg
aaa
scas
and
hlt
or
inc
cmc
call
adc
ds
jle
or
mov
inc
jns
fisttps
faddp
fnstenv
add
adc
jmp
dec
pop
andl
notb
jmp
test
lahf
outsb
mov
push
dec
cs
fmul
and
fdivrl
push
cs
repz
inc
test
es
mov
or
aaa
out
mov
sub
scas
leave
insl
pop
ret
jnp
leave
mov
push
ret
es
pop
adc
stc
aam
xchg
pushf
xchg
inc
pop
addb
or
add
dec
mov
or
inc
cmc
call
pop
outsl
mov
aam
aaa
and
fisubl
aas
les
outsb
jno
faddl
push
imul
aam
fiadds
jno
and
imulb
xchg
cmp
mov
outsb
mov
dec
sub
push
gs
pop
mov
add
jbe
xor
popf
lea
fisubrs
sti
xlat
pop
xchg
jo
mov
mov
cltd
adc
or
sub
outsl
in
cmpsb
movsl
xchg
rcll
mov
mov
mov
cmpsl
or
inc
adc
loopne
add
test
cmp
add
lret
lcall
into
push
divb
cmc
inc
add
mov
and
mov
jnp
cmp
jle
mov
stos
mov
cltd
cmp
dec
jp
test
mov
jge
and
sub
jmp
dec
subb
iret
inc
mov
mov
sub
xor
lea
repz
pop
insb
test
in
cs
jbe
in
push
or
dec
sbb
mov
xor
test
mov
jno
mov
add
adc
movsb
xchg
push
pop
jne
loopne
ret
insl
lret
jae
lods
ret
adc
lods
movsb
sub
push
cld
jne
mov
scas
addr16
mov
and
aam
push
jmp
inc
lea
pushf
pop
cltd
or
xchg
dec
and
repz
or
jnp
sbb
mov
mov
adc
sbb
mov
jns
iret
mulb
push
jne
and
mov
mov
lods
aad
cmp
cmpsl
lods
sub
adc
sub
shrl
mov
sub
fs
fwait
jae
inc
iret
scas
dec
inc
pop
mov
push
les
mov
dec
test
lds
sbb
fcmovnb
mov
cmp
push
test
sahf
pop
ds
mov
fldl
ss
or
orl
cmpl
popf
test
ljmp
sbb
notl
sub
cmp
cltd
lds
out
gs
push
arpl
mov
imul
xlat
sbb
or
mov
js
sub
adc
lcall
test
in
lret
and
or
sbb
fldcw
outsb
cmp
adc
jl
icebp
adc
in
sbb
ret
dec
or
fcoml
xchg
sub
push
das
ja
nop
mov
push
mov
arpl
popa
adc
in
mov
loope
cltd
loope
leave
sub
xchg
xor
popa
popa
imul
fstl
push
jmp
and
push
fidivl
add
mov
adc
aad
and
dec
sub
ss
into
popa
xchg
popa
add
aaa
xor
outsl
pusha
pop
mov
cltd
mov
or
dec
cmp
add
xchg
fnsave
push
into
cmpsb
pop
mov
rorb
scas
mov
cwtl
mov
movsb
xchg
xor
dec
jo
xchg
scas
out
mov
adc
fsub
xor
inc
lcall
or
fstl
pop
cmp
mov
lret
sbb
gs
cwtl
mov
push
stos
push
cld
pop
iret
add
jp
adc
std
xor
rcrb
daa
dec
cmp
mov
test
jecxz
mov
mov
outsb
xchg
scas
xchg
or
js
jb
imul
sahf
rorl
mov
jecxz
add
das
out
dec
scas
add
pusha
aaa
xor
daa
icebp
lods
aad
mov
call
idivb
cmpsb
pop
adc
dec
out
add
aaa
ret
pop
lds
notl
les
in
adc
dec
push
cli
cmpsl
jecxz
jo
jmp
mov
popa
mov
mov
xchg
arpl
jle
adc
insb
aaa
jo
outsl
jl
test
cmc
dec
cmpsb
and
sub
arpl
stos
pushf
jns
adc
dec
sub
or
shrb
sbb
inc
test
and
sub
pop
sbb
pusha
adc
cli
inc
mov
pop
adc
xor
scas
stc
inc
popa
mov
in
sub
adc
cmpsl
and
movsb
idivb
call
mov
add
fmull
in
adc
cwtl
or
mov
dec
jb
xchg
inc
jecxz
push
pop
cli
call
push
mov
and
mov
hlt
inc
dec
mov
dec
out
insb
jg
scas
and
sub
pop
dec
xlat
scas
pop
mov
adcl
inc
repz
mov
mov
popf
push
dec
add
repz
icebp
push
adc
sti
ret
out
dec
pushf
fs
add
dec
dec
lea
pop
push
xchg
shlb
sub
sbb
or
sbb
push
mov
ds
mov
xchg
mov
push
xor
inc
in
ret
aam
add
xor
js
dec
lea
and
repnz
sub
xor
xor
xor
in
ja
mov
lock
sub
push
mov
lcall
xchg
cld
cli
sbb
out
xlat
xchg
scas
cli
aad
sub
ret
rorl
fwait
lret
bnd
cmpsl
fsubs
inc
pmaddwd
dec
clc
push
mov
shlb
xchg
or
sarl
push
dec
aaa
cmp
arpl
out
and
ret
adc
in
shl
pop
call
add
mov
inc
shlb
iret
std
pop
jmp
int3
sub
call
fistpll
dec
dec
les
je
xchg
sahf
call
ljmp
out
push
adc
sub
sbb
mov
cmp
lret
mov
cmp
cld
or
adc
xchg
daa
and
add
mov
push
pusha
jge
jno
or
sahf
test
and
push
pop
xchg
jno
jge
movsb
js
add
scas
ljmp
pusha
dec
mov
data16
add
add
inc
pushf
fcompl
pop
clc
rep
sub
mov
jmp
mov
sbb
xchg
scas
out
rclb
aad
cltd
inc
int
pop
call
in
enter
push
and
jne
mov
dec
and
dec
or
inc
test
cmp
sub
cld
add
push
inc
push
mov
ljmp
push
scas
push
loopne
sub
insb
mov
adcb
jo
dec
and
and
push
and
cmp
stos
pop
pminub
cmp
test
sub
stos
xor
pusha
add
fisubl
insb
push
frstor
outsb
dec
shlb
and
subb
bound
int
adc
mov
push
pop
fisttps
and
xor
mov
mov
cmp
aas
imul
shr
and
outsl
stos
xchg
pop
inc
popa
aam
rorl
mov
adc
lret
daa
js
cltd
push
xchg
mov
loop
xchg
sbb
mov
push
aas
sub
enter
scas
std
rolb
xor
adc
push
shlb
mov
scas
mov
fcom
imul
cwtl
mov
aas
shr
icebp
cmp
fdiv
lahf
xor
lods
cmp
shr
icebp
in
cld
mov
sub
inc
or
sbb
pop
pop
outsl
dec
mov
and
aad
stc
push
mov
imul
xlat
push
repz
push
add
xchg
or
jmp
cmp
lods
pop
in
inc
mov
clc
mov
inc
pop
loop
sbb
leave
in
sbb
das
xchg
cmp
pop
cmp
div
popa
out
push
aad
adc
mov
mov
xchg
cmpsl
decl
mov
aam
daa
rolb
cld
dec
outsl
frstor
add
sub
insl
add
call
mov
imul
sbb
iret
sbb
jg
jno
cmp
movsb
lea
pop
sar
cli
xor
dec
jge
daa
xchg
sbb
je
xlat
ret
sbb
xchg
cmp
lods
sbb
jb
or
popf
cld
loope
scas
inc
lcall
pop
loope
repz
shrb
insl
add
add
xor
add
dec
or
notl
inc
push
add
sahf
ret
and
arpl
ret
hlt
leave
fnstsw
sbb
stos
or
mov
xchg
fsubrs
mov
jle
add
xchg
pop
mov
inc
mov
xlat
cmp
mov
pop
inc
mov
inc
fcmovbe
sbb
daa
pop
mov
nop
loopne
adc
aam
jo
mov
in
loope
popa
sub
add
push
add
mov
mov
or
int3
inc
ror
divl
pop
test
xchg
or
outsl
pop
in
ret
inc
mov
cmpsb
lret
mov
push
and
nop
or
push
jns
fcompl
dec
dec
ds
mov
loopne
jns
dec
shrl
mov
test
adc
repz
inc
inc
cwtl
and
sbb
sub
mov
push
push
test
and
jge
insb
cltd
jns
xchg
ficoms
xlat
shlw
clc
or
mov
ss
xorb
cmpl
xchg
push
sub
enter
mov
dec
push
ret
add
fldcw
pop
and
aad
ds
mov
aam
or
push
or
mov
jo
push
aam
mov
and
das
sti
mov
dec
mov
jle
clc
sub
mov
rolb
out
out
out
inc
aad
xchg
sbb
push
or
or
dec
and
cld
mov
mov
in
add
dec
pop
shl
xor
enter
jbe
test
mov
jbe
mov
jne
jge
aas
mov
stos
ljmp
jp
cwtl
mov
xchg
call
imul
jae
push
aas
divl
jp
arpl
push
mov
jmp
and
mov
jns
pusha
and
pop
popl
mov
es
cmp
test
xchg
popf
xor
test
add
dec
dec
movsl
std
push
cmp
push
fdivrs
pop
or
push
push
lods
mov
in
sub
mov
dec
mov
hlt
incl
add
mov
mov
repnz
je
xchg
out
mov
xor
jl
in
leave
jne
lods
dec
jno
sbb
icebp
movsl
es
test
jbe
sarl
das
jp
shr
pop
les
repnz
rcrb
sub
imul
rcrb
mov
sbb
pop
pop
xchg
outsb
jbe
xor
pop
int3
aam
fst
add
push
repnz
or
xor
js
pusha
mov
xor
lcall
pop
outsl
popf
ds
je
push
add
lods
fidivrs
test
jbe
or
xor
sbb
cli
xor
sub
and
sub
fdiv
orb
inc
mov
mov
and
push
mov
jmp
mov
test
inc
and
movups
scas
mov
loop
pop
loope
leave
stc
out
ljmp
sahf
inc
sbb
and
testl
into
push
sarl
xor
ja
lods
hlt
xchg
push
sbb
mov
fwait
in
lods
xor
movsl
push
mull
loope
pusha
add
xlat
aam
or
mov
adc
hlt
mov
in
insb
imul
ret
sbb
mov
push
sar
mov
mov
inc
call
sub
xchg
movsl
or
push
out
jge
imull
jle
out
cmpsb
out
outsb
int3
adc
and
mov
xor
xchg
ret
add
mov
sbb
add
mov
sub
icebp
icebp
xor
sti
cmp
cmpsl
jno
clc
xor
clc
sti
sub
cli
or
jle
adc
or
js
and
cmp
or
sti
push
outsb
dec
inc
lods
scas
aas
pop
lock
daa
sbb
test
divl
inc
in
loope
inc
loop
jp
movsb
loope
jnp
mov
cmpsb
mov
add
mov
cmp
mov
dec
and
daa
adc
enter
in
clc
mov
outsl
test
adc
mov
inc
stos
movsl
and
xor
data16
daa
scas
out
aaa
adc
jp
mov
sbb
pop
push
into
arpl
xchg
xor
outsb
dec
cmp
xchg
shll
add
inc
pop
pop
mov
out
push
jl
cli
push
adc
sbb
xor
out
add
stos
aad
movsb
sarl
jb
adc
aaa
lock
inc
push
jns
lret
and
jbe
ljmp
add
in
pop
notb
stos
push
push
mov
mov
je
push
push
and
pop
adc
push
dec
lock
cmpsl
dec
test
jecxz
cmp
xchg
adc
and
insl
lods
aam
jno
jp
aad
outsb
mov
movb
mov
fimull
les
xchg
inc
adc
or
cmpsb
mov
scas
jmp
lea
fs
dec
out
repz
xchg
stc
outsl
repnz
out
aam
and
loopne
lcall
sbb
inc
mov
jmpw
mov
imul
lods
inc
add
jp
jp
clc
movsl
mov
pop
pop
cli
xrelease
pop
rcr
out
add
fcmovnu
nop
dec
adc
mov
rcr
rcrl
pop
je
jb
out
and
adc
in
pop
ret
push
cmp
mov
jp
cli
cwtl
test
add
jno
dec
cli
mov
and
mov
jp
repnz
scas
add
orl
movsl
and
or
push
mov
test
out
lcall
das
inc
jge
or
jg
mov
mov
pop
fnstenv
adc
xor
jbe
mov
test
or
fwait
lret
cmp
pusha
or
mov
std
mov
pushf
inc
mov
inc
inc
popa
rolb
mov
in
pop
jecxz
push
lret
jmp
test
fisubrs
movsl
cwtl
psadbw
mov
push
subl
int3
mov
or
test
loop
insl
jl
dec
jb
mov
decb
ss
mov
push
push
cmp
mov
pop
jbe
jle
arpl
insb
out
stos
adc
iret
aad
jge
xor
pop
adc
sub
pop
jg
mov
xchg
popf
int
enter
mov
pusha
mov
test
jbe
xchg
dec
mov
pop
xchg
xchg
data16
ret
nop
sub
jo
into
cmp
out
push
scas
push
aam
in
sbb
mov
adc
pop
jno
fistps
sbb
cmp
cmp
imul
hlt
mov
sar
in
sbb
das
sub
iret
xchg
idivl
aad
mov
lods
cli
mov
jmp
lahf
imul
push
jns
sub
out
pop
sahf
fistpll
movsl
enter
inc
push
jp
mov
mov
insb
inc
imul
mov
cmp
xchg
push
cmp
mov
mov
dec
pop
test
clc
in
orb
scas
adc
sbb
mov
jg
inc
insl
js
lods
lock
push
rcll
aad
lods
pop
jae
or
cmp
xchg
xlat
int
into
insl
xor
fisttpll
ljmp
adc
fsub
push
cli
adc
js
inc
das
js
sub
mov
push
mov
inc
mov
lds
push
xor
test
fistl
aas
adc
in
and
and
mov
mov
mov
daa
int
cmp
xchg
push
loop
add
cmp
mov
cs
add
jae
jae
cmpsl
arpl
popa
data16
xchg
push
jne
movsb
nop
sbb
mov
scas
sbb
jg
out
jno
sub
pop
shrd
xlat
add
pop
mov
ror
mov
sub
mov
enter
jmp
dec
arpl
int
cmc
xor
pop
cli
sbb
lcall
int3
fistps
rol
jle
stos
and
and
int3
lret
aas
adc
sub
push
pushf
xor
std
push
mov
jmp
dec
mov
movsl
sarb
sub
push
data16
pop
shll
std
mov
aaa
nop
inc
sub
dec
leave
add
pop
lahf
adc
cmpsl
shll
xor
sarb
mov
cmp
pop
bound
pop
sub
jne
std
imul
clc
jae
xchg
push
or
and
and
push
in
ret
adc
ds
sbb
sbb
sub
mov
popa
fildll
scas
add
pop
pop
adc
ss
cltd
rolb
enter
ljmp
inc
cmpsl
push
dec
lods
sti
mov
daa
cmp
fidivs
fisttps
enter
cmp
mov
imul
push
aad
inc
push
or
add
push
push
push
push
or
dec
std
adc
int3
outsl
insb
add
mov
call
shrl
adc
jo
xor
ret
lock
cmp
rcrb
mov
or
mov
sbb
hlt
xchg
repz
fsubs
bnd
mov
gs
cwtl
sub
daa
xchg
adc
inc
int
in
imul
out
outsl
mov
daa
xchg
aaa
add
fimull
ja
popa
sbb
addl
stos
xchg
out
insl
out
push
jg
fdivl
dec
es
sahf
arpl
cmp
or
lret
xor
xlat
lds
movsl
xchg
and
dec
sub
dec
roll
jl
lcall
mov
lcall
fstpl
cmp
pop
call
popf
pop
js
test
out
cmp
imul
loope
sub
mov
lock
pusha
out
jl
xor
lea
push
jmp
stos
outsl
lcall
fwait
pop
nop
subl
insl
loopne
popf
or
rcrb
mov
pop
inc
pusha
mov
lds
cltd
jb
lods
push
loop
pop
pop
mov
jle
adc
sub
das
mov
add
inc
enter
add
pop
cld
push
jo
orb
clc
mov
jmp
test
addr16
dec
rclb
js
ret
push
pop
push
jecxz
pusha
hlt
cld
mov
test
mov
mov
icebp
sub
mov
sbb
push
les
cmp
inc
es
push
popa
out
aas
or
popa
pusha
call
adc
mov
iret
cwtl
pushf
arpl
outsl
mov
xchg
fcoml
sub
pop
cld
mov
cmp
decb
aam
jb
mov
outsb
xor
jle
outsb
xchg
scas
rolb
jnp
sbb
pop
jb
insb
fnsave
sub
jp
cmc
jl
data16
sbb
dec
repz
mov
jg
sti
dec
jne
mov
scas
sbb
and
movb
out
sub
cmp
pop
pop
jp
sbb
add
jg
lds
sahf
fdivrl
xor
dec
dec
iret
js
xchg
mov
fmul
out
pop
adc
movsl
notl
add
inc
and
adc
mov
inc
and
in
fistpl
je
cmp
cmp
push
mov
sub
in
stc
fldl
sahf
shrb
and
outsl
rclb
popa
xchg
in
insb
cli
out
dec
add
addl
lods
movsb
dec
cmp
int3
mov
cmp
xchg
xor
fimull
in
pusha
push
rcll
mov
push
leave
fisttpl
popa
js
gs
jp
sub
cmp
push
enter
xchg
out
sbb
mov
xor
jne
sti
inc
mov
mov
jge
or
fucomip
sti
push
sub
in
bound
pop
mov
bswap
sub
mov
in
in
adc
pop
jno
pushf
mov
and
cld
sti
sbb
es
les
std
pop
sbb
dec
test
inc
subb
push
mov
aas
mov
push
out
cmp
cwtl
imul
sub
lret
stos
mov
mov
movsb
sub
fidivrl
mov
out
cmp
leave
and
pusha
and
in
cmp
sbb
fndisi(8087
fidivs
and
in
add
nop
jnp
mov
rclb
ret
mov
push
insl
sbb
mov
adc
jp
jp
jge
std
mov
iret
test
dec
xor
xor
fwait
cwtl
movsl
mov
jg
ss
hlt
or
push
pop
jge
pop
sub
cmp
icebp
std
cmp
js
stos
lahf
hlt
test
testb
jmp
movsb
je
call
sub
int3
dec
dec
mov
outsb
push
cmp
xchg
rsqrtps
mov
fcmovnb
std
xchg
aas
xor
iret
test
and
negb
pushf
mov
sub
or
sbb
mov
mov
test
inc
jns
push
es
pushf
dec
enter
mov
fabs
pop
sbb
fistpll
fwait
call
pop
cli
or
cmp
lods
shll
pop
inc
icebp
and
push
pop
lods
in
mov
jp
or
mov
jle
or
into
mov
mov
xchg
lret
pop
jbe
aaa
jg
sub
mov
sbb
mov
add
imul
ljmp
daa
je
dec
das
sarb
adc
sub
inc
test
clc
adc
lea
cmp
jns
xchg
dec
mov
adc
xchg
sub
out
push
inc
and
sbb
sahf
les
ud0
lahf
jb
imul
ret
inc
xchg
fistpll
mov
push
jge
cmpsb
push
hlt
in
mov
decl
shl
ret
loop
mov
inc
iret
ret
cmp
jae
inc
mov
lret
shrl
popf
das
mov
mov
cmpsb
jge
add
mov
sub
scas
arpl
push
movb
mov
ret
pop
rolb
leave
out
jne
sbb
inc
pop
jne
aaa
hlt
loop
or
dec
cmp
cli
int
cld
mov
or
jmp
and
push
jp
dec
dec
mov
dec
xor
imul
subb
mov
push
and
sbb
or
inc
and
mov
or
pop
insl
push
dec
test
adc
jg
in
in
jns
or
dec
into
sub
jecxz
jbe
jae
bound
add
mov
push
mov
sti
aad
cmp
jle
cmpsb
jnp
movsb
movsl
add
pop
and
inc
out
aaa
add
cmp
add
and
xor
ret
idivb
notb
mull
iret
push
fists
pop
js
subl
cli
add
jnp
jp
push
fwait
or
push
sub
fcomi
sbb
push
lcall
pop
mov
jp
sbb
cmpsb
ljmp
dec
mov
adc
adc
add
mov
adc
pop
fwait
psubw
push
ds
pushf
push
mov
daa
in
inc
fwait
pop
jno
dec
jnp
adc
mov
inc
mov
lcall
adc
and
imul
rorl
movsl
sub
shll
popa
leave
sbb
add
xor
pop
jne
dec
inc
aam
sti
add
loop
rcrl
lahf
sahf
xchg
xlat
jmp
add
xor
sub
push
cmpsl
arpl
out
push
lret
xorb
adc
sbb
pop
enter
cmp
add
nop
imul
jns
push
and
cli
popf
mov
aaa
mov
adc
and
ret
cld
xchg
sarl
in
popa
aaa
sbb
rorl
mov
imul
pop
sti
dec
or
push
mov
add
pop
dec
int3
mov
inc
xchg
mov
cmp
mov
mov
push
xchg
fldenv
add
fstps
push
ret
xchg
or
enter
addr16
cltd
loop
mov
sub
push
adc
mov
pop
out
sbb
mov
xchg
ss
call
push
and
xor
jb
loopne
addb
bound
mov
mov
test
sbb
scas
ja
sub
add
outsb
gs
jecxz
add
jae
cs
jl
roll
inc
push
push
js
adc
push
ss
out
push
or
insl
jle
gs
jbe
scas
add
or
lock
ret
and
call
sarl
andb
xor
push
and
repnz
rol
xchg
add
fwait
repz
decl
dec
inc
lea
mov
pop
xchg
lahf
lods
xchg
push
pop
or
hlt
les
mov
int3
xchg
call
fsubrs
lret
jb
scas
mov
es
xor
pop
pop
sub
jno
inc
sub
cmp
xor
mov
xor
ret
insl
in
mov
xchg
insl
add
pop
les
jle
inc
mov
notl
sub
or
out
daa
cmpsb
dec
movsl
subl
pushf
push
and
mov
mov
int
les
jmp
dec
add
jmp
or
jmp
insl
call
mov
jle
mov
and
mov
or
js
or
jcxz
sub
aam
inc
sbb
test
add
movsb
pop
cli
lds
ljmp
mov
addr16
fsubrs
push
push
popf
loope
stos
in
mov
jp
mov
insb
xor
jmp
pop
popa
add
test
and
fst
lock
sub
rol
push
push
out
or
mov
add
insb
mov
out
in
inc
ss
fsubl
mov
dec
jl
sbb
add
xchg
enter
xor
mov
xchg
xchg
out
inc
shrb
mov
jnp
ds
mov
pop
cmpb
out
pop
push
pop
jmp
sub
cltd
fisubl
adc
movsl
leave
imul
popf
or
stos
ljmp
mov
call
sbb
std
out
in
jmp
insb
jo
pop
jge
xor
movsb
or
mov
fdivr
mov
sbb
shll
cmp
test
bound
mov
and
jo
mov
mov
mov
mov
add
test
cmpl
and
add
loope
inc
stc
adc
cmp
sbb
jp,pn
adc
outsb
sub
pop
dec
lahf
jbe
test
push
iret
mov
add
in
inc
pushf
pop
xchg
mov
in
sbb
les
movsl
cmp
sarb
outsl
imul
divl
xchg
adc
data16
gs
add
test
lret
dec
mov
aad
insb
aas
pop
das
jg
mov
mov
jl
popf
jg
fisubrs
add
jno
imul
cmp
jns
lret
mov
cmpsb
cwtl
mov
xchg
sbb
les
int3
lds
lea
int3
push
jno
jne
ds
outsl
fmul
inc
sub
sbb
filds
pusha
mov
xor
mov
call
mov
jae
mov
xchg
pop
or
cld
imul
dec
pusha
andl
fisttps
das
add
inc
cltd
test
sbb
fwait
push
imul
push
fwait
and
cmp
mov
in
rorl
sub
clc
insl
mov
mov
hlt
xlat
jmp
enter
bound
faddl
movsl
mov
push
and
dec
mov
movb
lock
aaa
sahf
cmp
movsb
daa
data16
lock
ss
xor
inc
cmpb
add
inc
adc
pop
fs
sub
mov
mov
xchg
cmp
push
mov
imul
dec
lods
cmp
icebp
lahf
fmulp
dec
jo
mov
nop
xchg
popf
xchg
inc
xor
mov
stos
jne
lds
enter
xor
or
fdivrs
imull
dec
mov
in
add
ja
cli
push
sahf
mov
mov
movsb
out
aad
push
push
fistl
jns
mov
test
jns
sbb
call
cltd
repz
out
xor
mov
orb
mov
xchg
pop
add
mov
adc
push
in
pop
gs
fs
stc
mov
or
loop
xor
cmpsl
push
sub
push
cld
mov
mov
mov
inc
xchg
xchg
int
cmp
xchg
outsb
lods
and
in
mov
jne
scas
dec
shrl
repz
mov
jae
arpl
nop
in
push
std
xor
push
adc
out
clc
daa
loope
ja
loop
jmp
or
js
stos
push
push
iret
push
cmp
cmpsl
outsl
lds
aas
inc
arpl
pop
inc
xchg
gs
mov
or
je
dec
cmpsb
movsl
push
mov
cmp
push
pop
lods
cmp
sbb
ljmp
jnp
repz
movsb
movsb
pop
aad
test
push
das
pop
fdivp
jno
xchg
adc
dec
dec
outsb
js
jmp
push
cmpsl
xor
jmp
fs
mov
shll
mov
out
mov
pusha
out
das
or
cmpsl
push
pop
inc
hlt
sarl
push
pop
pop
cmp
in
push
and
cmpsl
aad
adc
push
jb
xor
lcall
push
xor
mov
mov
dec
jne
mov
aaa
sbb
iret
add
ficoms
roll
xchg
push
xchg
mov
pop
xor
sbb
or
out
jbe
pop
add
xorl
test
and
add
lahf
mov
adc
fildll
pop
sti
rcrl
and
out
in
or
inc
jns
test
pop
fdivs
mov
push
movsb
mov
push
inc
sbb
or
pushf
push
mov
pusha
xchg
cli
cmp
mov
out
and
pop
notb
sahf
inc
in
insl
lea
insb
inc
clc
fiadds
xor
test
cmp
mov
and
mov
push
xor
xor
sbb
cmp
add
je
push
xchg
push
inc
sbb
inc
pop
mov
xor
and
mov
aam
dec
stos
pop
pop
mov
sahf
xor
inc
ret
mov
lcall
mov
dec
or
pop
or
adc
push
enter
add
sahf
jle
lret
enter
push
pop
test
pop
mov
test
add
sub
adc
loopne
inc
xchg
xchg
movsb
sbbb
adc
movsb
bnd
xlat
lods
push
mov
out
clc
cmpsl
pop
pop
xchg
ret
lods
dec
test
in
stos
sbb
mov
xchg
aad
mov
adc
andb
rcll
mov
mov
mov
pop
or
push
sub
or
hlt
xchg
xor
adcb
or
mov
test
imul
and
cmp
cwtl
mov
adc
pop
pop
imul
testb
addr16
push
xor
dec
adc
xchg
adc
sub
push
xlat
inc
dec
pop
jns
outsb
out
jecxz
shl
cmp
jp
push
and
das
nop
aam
fwait
jns
cmp
and
fmull
out
js
jmp
adc
mov
test
mov
call
loopne
aaa
pop
es
ljmp
shrl
pusha
inc
bound
and
hlt
cmp
cmpsb
adcl
push
push
test
xlat
and
fmul
adc
or
xorb
pop
repnz
push
mov
mov
pop
repz
in
fimuls
jl
xor
sbb
push
ljmp
adc
push
shll
xor
sbb
mov
jns
ret
push
daa
inc
mov
into
inc
ds
and
dec
lret
jne
cmp
mov
shrb
sbb
xchg
fs
mov
cmpsb
mov
cmp
cmp
outsl
pop
push
mov
xchg
int3
mov
pop
popf
aad
add
outsl
mov
jecxz
jl
insl
add
sub
push
pushl
leave
adc
ljmp
hlt
mov
mov
test
outsl
pop
hlt
mov
cmp
dec
push
cmp
jns
shlb
pop
xor
mov
mov
jmp
push
mov
loope
dec
and
lods
xchg
jb
and
outsl
dec
push
push
inc
push
mov
xchg
jbe
adc
call
mov
dec
adc
rclb
subb
fs
call
mov
mov
cltd
sub
xor
push
push
andb
es
fwait
shlb
sbb
xchg
xor
ss
icebp
push
pop
jbe
adc
sarb
mov
mov
shlb
in
sub
hlt
dec
jl
add
inc
mov
out
jle
sub
in
ja
jno
aas
je
insb
adc
mov
inc
inc
push
das
and
orl
cmp
test
pop
mov
push
jb
mov
out
icebp
fdivrl
jge
add
mov
inc
xchg
test
lret
jp
popa
insb
xor
xor
aad
dec
or
or
imul
cmpxchg8b
lret
add
inc
lods
popl
out
cmp
pop
push
movsb
fs
gs
loopne
out
sub
mov
xorb
adc
insl
cmpsl
mov
mov
iret
pusha
adcl
xchg
shll
aad
sar
fnstsw
dec
push
out
push
pop
popf
push
aas
mov
js
inc
pop
cwtl
lret
test
pop
in
dec
sbb
mov
in
rolb
or
sahf
mov
int
and
repz
sbb
and
pop
outsl
pop
in
out
push
add
push
pusha
fcomps
jnp
imul
mov
dec
mov
data16
and
inc
insl
out
sbb
bound
clc
cmp
outsb
fwait
outsl
mov
sub
mov
jnp
ss
fildll
jmp
mov
loop
jle
pop
mov
stc
sub
jmp
pop
add
lea
ret
sub
addr16
dec
std
add
add
fistl
inc
out
pop
shll
out
dec
pop
mov
sbb
xchg
inc
push
hlt
int
sbb
divl
std
icebp
ss
xor
lcall
into
fldl
test
inc
lock
sbb
jp
xlat
out
stos
adcb
xor
add
jnp
out
mov
outsb
js
out
xor
push
lcall
je
or
mov
das
pop
in
jecxz
pop
sub
add
add
and
out
scas
popa
cmp
xchg
sub
shll
pop
adc
pop
test
jbe
jle
jno
pop
mov
out
and
je
out
push
sbb
pop
lret
sti
fnsave
or
adc
sbb
push
lea
aaa
test
stos
jp
mov
out
enter
ret
insb
and
dec
jl
push
subb
imul
mov
mov
movsb
sub
inc
jne
movsl
dec
add
jno
ss
int
mov
xchg
mov
addr16
inc
lock
pop
adc
jl
out
cltd
dec
je
jae
test
loop
test
les
mov
repnz
jl
roll
xchg
push
sbb
lret
enter
enter
mov
sub
addb
icebp
push
sbb
push
push
cwtl
dec
mov
sahf
and
push
std
lret
mov
push
gs
xor
sbb
jbe
dec
shl
xchg
jno
sbb
stos
ret
mov
add
int3
les
in
sub
inc
movsl
sbb
je
sub
mov
std
push
mov
sub
fsubs
mov
dec
jl
add
cwtl
repnz
push
shlb
xchg
stos
lret
imul
xor
and
jbe
jae
cs
rcll
ja
nop
mov
jns
xor
call
cmc
mov
outsl
in
add
xlat
or
xor
out
push
insb
repnz
push
int
mov
jb
dec
mov
aaa
inc
popa
push
subl
pop
dec
mov
pop
dec
les
nop
cmp
in
jbe
gs
and
enter
add
mov
ss
xor
int3
xchg
jle
call
mov
push
adc
pop
pop
or
les
loopne
jecxz
xchg
inc
cmp
cmp
mov
shlb
fldcw
xchg
loope
cli
jg
cmpsb
xchg
dec
push
cs
push
add
stos
mov
pop
decl
mov
and
roll
jno
sbbb
adcl
rolb
adc
aaa
inc
lods
adc
stos
das
mov
sub
mov
into
scas
xchg
ja
movsl
push
cmc
jns
jno
test
mov
cmp
cltd
adc
cmpsl
std
mov
stc
or
or
int
xchg
fsub
fldt
pusha
mov
mov
int
in
pop
mov
cmpsb
mov
outsl
fcmovnb
jmp
add
outsb
aaa
icebp
daa
das
or
mov
push
add
ss
scas
nop
xchg
adc
inc
adc
xchg
dec
or
pushf
fistpl
out
cmp
jmp
aas
scas
arpl
cmc
or
std
leave
mov
stos
cmp
test
not
aaa
mov
xor
jbe
std
lret
jmp
insb
aad
and
into
mov
stos
lods
ljmp
mov
cmpl
stos
dec
adc
call
xorl
shrl
and
pop
xchg
stos
roll
popa
xchg
in
sbb
lds
inc
add
add
inc
push
shll
inc
repz
sub
test
and
push
push
mov
mov
movsl
adc
xchg
or
dec
adc
rolb
mov
push
sbb
andl
inc
insl
xchg
hlt
cld
mov
out
lods
lcall
paddb
xlat
cld
shrl
xor
jp
sbb
shl
xchg
jge
out
ljmp
or
stos
pusha
dec
mov
or
xor
pop
faddl
mov
push
cli
adc
push
nop
and
lods
xor
movsb
pushf
mov
mov
mov
jne
jle
xor
adc
or
jp
and
mov
xor
hlt
push
jge
aas
fistps
jle
fs
jae
add
xchg
cwtl
sbb
sarb
fdivr
and
sub
add
cmp
sub
aaa
out
xchg
jg
lret
loop
sbb
ss
cltd
cmpl
decl
sub
add
dec
in
jle
outsl
push
lea
xor
cmpsb
mov
call
and
pop
stos
lods
fldt
repnz
sub
push
dec
std
xchg
mov
in
pop
mov
mov
lret
imul
push
rorl
push
loopne
or
or
mov
iret
std
push
lahf
aam
rcr
fidivrl
ljmp
sbb
mov
out
ja
xlat
es
movsb
or
sub
aaa
popa
mov
int
sahf
mov
pop
imul
jecxz
int
mov
push
movsl
jbe
shrb
sahf
add
dec
popf
jnp
mov
int
and
sub
xor
sti
sbb
ss
mov
lahf
mov
push
inc
dec
aaa
test
test
stos
pop
push
loop
xchg
in
push
pop
lock
daa
adc
fstpt
sbb
jae
daa
in
shlb
pop
scas
inc
mov
hlt
cld
add
xchg
das
aas
mulb
js
jne
jg
fnstcw
shll
or
push
pushf
jnp
mov
call
mov
sbb
inc
cmc
push
sarl
into
inc
dec
adc
push
mov
push
jg
ja
push
loope
xchg
insb
lret
rcr
push
pop
sbbl
adc
shl
adc
jbe
std
sbb
in
filds
scas
out
ljmp
iret
cmp
stc
int3
mov
push
xor
jae
sub
sub
and
mov
mov
lret
mov
int3
pusha
dec
lock
mov
stos
push
nop
cwtl
push
leave
mov
scas
inc
test
jo
or
lret
xor
bound
jl
sbb
insl
xor
adc
pop
lahf
fwait
jecxz
iret
shlb
hlt
mov
lret
lods
mov
lret
mov
inc
mov
int
inc
daa
je
mov
scas
sbb
outsl
test
and
or
and
xorb
in
xor
push
imul
jge
dec
mov
xor
sahf
ret
sbb
mov
push
push
push
jl
inc
add
and
jmp
gs
daa
and
loopne
mov
mov
sahf
in
dec
lahf
stos
mov
cmpb
fiaddl
xchg
cmpsb
and
lahf
cs
push
int
ret
adc
or
shrl
test
shl
and
xchg
adc
leave
flds
jmp
push
and
bound
lahf
lcall
dec
iret
jo
push
sarl
mov
inc
cmp
sub
repz
out
inc
gs
push
cmp
dec
cmp
mov
gs
aas
and
mov
jns
imul
fidivrl
mov
add
shl
pushf
lret
push
mov
fistps
pop
loope
pop
xchg
push
inc
push
mov
xchg
sbb
fbstp
std
jmp
push
je
pop
xor
and
and
fidivrs
dec
mov
icebp
dec
in
fsubrl
xchg
mov
popf
jg
adc
jmp
enter
in
mov
and
adc
push
inc
mov
sub
fldt
sti
mov
lret
xlat
jbe
je
cmpsl
push
sub
mov
cmp
mov
mov
movsl
cs
cmp
jge
out
lds
out
cmp
mov
push
jb
push
adc
mov
xor
adc
xchg
sub
movsl
insb
es
xchg
cmp
dec
cmp
ljmp
lock
arpl
rolb
lret
or
or
dec
inc
stos
mov
pop
imul
rclb
imul
push
aam
add
fsubr
nop
sbb
lahf
push
adcl
sub
and
mov
jmp
mov
addr16
mov
cmc
cld
and
shll
mov
jae
idivl
pop
and
mov
rolb
scas
in
push
jle
insb
or
jp
inc
dec
popa
sub
das
or
fwait
clc
sub
ret
test
ljmp
mov
ror
fimull
sbb
lahf
sbb
sbb
mov
adc
add
cmp
pusha
out
nop
mov
test
push
mov
pop
loope
ljmp
push
pop
add
test
fistpll
aam
pop
out
in
sbb
and
pop
jnp
shr
inc
call
mov
or
clc
dec
mov
mov
xchg
ja
xchg
int3
lods
inc
jnp
stos
inc
out
mov
scas
call
jmp
xor
and
fistps
mov
add
repnz
xchg
lods
lahf
push
jmp
xor
push
jl
mov
pop
sub
daa
lods
scas
dec
pop
push
add
test
jns
insb
pop
or
ds
jp
loop
and
fcoms
ss
pop
vmwrite
sahf
daa
pushf
add
stos
sbb
imul
cmp
sbb
je
and
call
je
fistpll
sbb
aam
stc
imul
loop
add
or
or
stos
sub
nop
pop
and
mov
cmp
in
or
sti
mov
mov
jp
add
pop
loop
jb
cltd
jecxz
push
nop
and
outsl
push
cmp
pop
push
push
lret
dec
sub
cmp
enter
inc
je
sbb
xor
cmp
mov
aas
mov
cmc
and
add
out
pop
inc
sub
xor
ss
dec
icebp
into
gs
pop
in
pusha
sub
fldt
dec
and
sub
xchg
shrl
test
push
bound
push
mov
mov
or
cmp
or
sahf
insb
add
xchg
cmpsb
push
das
aad
int3
sub
jnp
xchg
inc
adc
dec
and
icebp
push
mov
sub
fcomps
mov
xchg
rol
outsb
push
enter
adcl
pusha
out
mov
push
aad
das
lds
jae
cmp
pop
push
jg
mov
rolb
mov
pop
cmp
push
sub
lret
es
mov
or
ds
icebp
sbb
into
aaa
movsl
add
pop
xor
daa
je
jg
in
cmp
dec
enter
call
dec
jl
popa
jae
mov
mov
das
and
adc
add
jb
and
fwait
adc
xor
and
insl
inc
sbb
les
jns
fucomp
cmp
adc
xchg
sub
sub
xor
call
cmp
and
mov
jae
cmpsl
loop
sub
rcll
addr16
xlat
fdivrl
loope
ljmp
scas
pop
jno
orl
dec
sbb
fldt
pop
sahf
inc
ds
xlat
ljmp
popa
mov
pop
push
ja
std
pop
clc
cmp
cmpsl
xor
fwait
mov
jne
sub
cmp
pop
jo
pop
jle
aad
sub
inc
stc
xchg
and
ljmp
shlb
lahf
jae
and
stos
jmp
sub
jmp
xchg
mov
pop
movsl
push
push
enter
xchg
xor
mov
sub
xor
out
out
popf
stos
inc
mov
and
pop
cmp
dec
mov
dec
aas
in
inc
mov
psubw
sbb
mov
test
jno
add
test
mov
std
mov
mov
repz
mov
test
jno
xchg
lcall
mov
enter
adcl
push
in
arpl
pop
aam
hlt
sbb
lds
mov
aaa
das
dec
pop
mov
pop
bound
sub
nop
push
jbe
pop
add
and
sbb
adc
jb
mov
stc
pop
fsub
int
adc
jle
pop
push
mov
or
jo
lods
jge
jl
push
mov
mov
stos
mov
lock
pop
jae
xchg
fwait
dec
scas
pop
adc
sbb
lcall
cmp
pop
lret
xchg
inc
sbb
data16
popa
pop
ljmp
lret
or
push
sahf
sub
idivl
repz
pusha
jecxz
mov
out
xor
lret
and
xchg
insb
adc
inc
add
pop
js
adc
inc
pop
inc
pushf
inc
cmp
mov
jge
and
mov
push
ret
fidivrl
and
std
inc
sbb
cmpsl
iret
out
out
xor
mov
cmp
adc
scas
pusha
mov
popa
sbb
mov
pop
and
aad
ja
stos
add
rcrl
push
fcoms
faddp
dec
mov
lret
mov
gs
stos
test
out
sub
ret
xchg
mov
inc
paddd
pusha
or
pushf
arpl
fisubs
or
or
in
mov
cmpl
fistps
js
sbb
sbb
cli
jae
jmp
xorl
or
and
orb
clc
or
pop
mov
outsl
mov
out
inc
cwtl
mov
mov
push
xchg
flds
jne
sbb
enter
mov
add
rol
bound
mov
or
cmp
cwtl
lret
jne
mov
loope
xchg
and
push
cmc
out
stos
popa
hlt
sub
sub
adc
cwtl
jo
or
hlt
insl
lcall
inc
dec
jp
cs
gs
roll
inc
bound
in
ds
outsl
jno
fwait
enter
int3
fldenv
fs
inc
in
mov
rcll
adc
call
jg
jmp
addb
dec
in
rorl
in
stos
and
xchg
movsl
sbb
scas
add
sbb
mov
jb
or
sub
lret
push
sbb
or
ffreep
and
cmpsb
iret
jg
andb
sub
xor
fcoml
cmp
xchg
cmp
and
lcall
in
or
cmp
inc
arpl
mov
mov
loop
les
jnp
into
pusha
xchg
int3
pop
cltd
or
std
inc
lods
jge
loopne
cmp
sub
leave
xor
push
dec
rcll
sahf
add
mov
es
add
and
push
mov
in
adc
add
mov
movsb
loop
frstor
cmpsb
popa
imul
sbb
std
or
push
jg
adc
js
es
out
loopne
nop
cmpsl
jbe
test
loope
call
test
mov
xchg
lret
mov
xchg
mov
mov
int
ja
xchg
sub
fidivrl
jbe
sti
insb
cmc
addl
lret
lods
adc
cmp
add
js
loopne
es
mov
mov
mov
pop
in
push
push
inc
ficoml
xchg
xchg
sbb
jnp
pushf
add
ss
out
mov
js
mov
loope
stos
rcll
testl
pop
xor
in
pop
or
dec
mov
add
pop
or
loope
nop
dec
lret
sub
arpl
fisttps
sbb
popa
jmp
and
jno
mov
xchg
cld
lret
leave
in
and
and
in
out
fcmovnu
aas
jne
repz
push
lret
add
cmp
push
xchg
mov
jle
lret
mov
mov
mov
add
insb
das
insl
dec
or
ss
xchg
sub
xor
or
lahf
jo
sub
and
push
pop
in
insb
js
inc
inc
pop
gs
push
dec
sbb
dec
mov
scas
jle
add
add
stc
xor
rclb
mov
xchg
loope
mov
insl
jo
loope
into
movb
in
cltd
cmp
leave
cmp
std
dec
inc
add
dec
pop
add
cmp
adc
lahf
ret
fs
jns
cwtl
imul
lret
insb
xor
sbbl
test
pop
inc
pop
cmp
rcr
xchg
inc
sub
mov
push
movsl
in
jp
fdivrl
cmc
jle
ja
add
fcmove
jb
push
add
xchg
fucomip
sub
jb
sub
dec
jae
les
in
or
or
mov
jl
scas
adc
inc
xchg
and
mov
push
lret
sar
ret
rclb
popf
inc
test
mov
aad
lret
pop
fcmovu
and
inc
sbb
pop
xor
jl
nop
aam
pop
sbb
imul
hlt
lods
adc
cli
push
cli
in
in
insl
or
shrb
xor
packsswb
push
mov
xchg
jge
xchg
fists
push
jmp
dec
imul
fcoms
int
or
sub
pop
push
mov
daa
adc
pusha
cli
mov
pop
push
fmul
aad
hlt
faddl
xor
lds
outsl
sahf
push
add
shl
inc
imul
cmp
mov
pop
mov
xorl
mov
or
adc
push
xchg
movsl
and
cwtl
add
jns
xor
jne
cmc
insb
rcll
inc
add
pop
cmp
sub
insl
jns
call
jecxz
cmp
mov
hlt
repz
adc
nop
mov
push
adc
das
or
mov
jbe
xor
lock
mov
jns
pop
sub
inc
push
lret
pop
mov
mov
les
and
add
lock
sarb
clc
and
out
imul
mov
pop
ss
bound
hlt
xchg
lea
adc
dec
cmp
inc
xor
xor
shl
std
and
xlat
or
xchg
add
fs
sbb
and
pop
insb
outsl
movsb
inc
push
cli
in
mov
insb
mov
in
jb
jmp
mov
std
xor
stos
add
insl
test
mov
xor
call
xchg
push
je
cs
mov
leave
daa
lock
stos
mov
js
and
sbb
inc
xor
inc
xchg
ljmp
les
adc
or
adc
flds
das
xchg
movsl
pop
popa
sti
imul
cmp
shrb
cmpsl
sahf
and
inc
sub
fwait
imul
pop
xchg
add
lock
clc
dec
xchg
sahf
mov
mov
cwtl
int
inc
adc
fistl
or
and
adc
dec
and
jge
xor
pop
pop
mov
out
cld
dec
mov
adc
push
lds
xchg
mov
lret
mul
xor
cld
imul
push
mov
and
mov
mov
push
test
pushf
insl
and
add
mov
cwtl
sti
pop
xor
xchg
fcompl
shrb
and
cmpsl
js
add
sbb
dec
pop
call
lea
ret
outsl
jle
popa
sub
mov
icebp
mov
out
xchg
loop
popa
sbb
scas
push
cmpsb
and
rorl
lcall
xchg
cmp
push
lret
loop
ret
add
xchg
fbstp
dec
add
lods
sarl
add
sbb
dec
test
or
cld
push
or
jmp
push
mov
mov
pop
jnp
pop
sti
xchg
aas
lret
movsb
push
sbb
dec
out
repnz
repnz
sub
dec
xor
or
aaa
mov
lea
xchg
lods
jp
or
cmpsb
lds
cwtl
addr16
or
lahf
fisubrl
dec
push
rol
cmpsl
mov
pop
dec
jl
sub
adc
xor
lahf
rclb
icebp
leave
cmpsb
inc
in
dec
mov
popa
aaa
mov
and
pop
lahf
or
movsb
call
hlt
jle
mov
leave
lea
das
push
add
std
gs
xor
mov
inc
jecxz
push
pop
lods
xor
or
jecxz
cmp
aam
imul
fimuls
repnz
test
out
xor
subl
add
and
gs
nop
cmp
add
jbe
je
mov
mov
mov
dec
es
and
ret
das
add
je
jnp
fwait
js
out
insb
add
aas
mov
test
add
sub
cmp
mov
xchg
daa
push
xchg
mov
test
lcall
in
sub
insb
mov
loop
add
jo
insl
into
rcll
gs
jmp
add
out
cmp
repnz
pop
cmp
xor
jne
rclb
sbb
enter
test
xchg
cmpl
sahf
rclb
mov
insb
ja
mov
scas
icebp
or
insl
notl
lcall
fmull
mov
xor
arpl
pop
and
leave
sub
aad
jb
jb
repz
ds
add
add
test
mov
ja
sbb
sti
push
and
imul
pop
test
cmc
sbb
pop
out
xchg
vpand
sub
pop
add
push
inc
clc
mov
lcall
imul
push
pop
xor
fwait
insb
jb
cli
and
bound
pushf
insl
mov
mov
push
ljmp
adc
dec
adc
mov
std
data16
dec
clc
repnz
out
lcall
das
out
cmp
imul
jnp
cmpsl
sub
mov
ret
setbe
call
add
adc
push
or
add
pop
rolb
sbb
inc
pop
xor
push
sbb
xor
shl
jmp
ja
pop
xor
cltd
outsl
add
data16
inc
push
jo
nop
adc
fldcw
push
push
test
sub
hlt
arpl
into
shll
or
repz
jns
retw
dec
inc
lret
mov
xchg
xor
test
push
xchg
mov
mov
js
lret
lods
xor
lods
jo
lcall
jo
adc
cmp
dec
nop
les
jo
fdivrs
movsl
sti
lods
in
mov
inc
adc
sbb
daa
mov
rorl
and
sahf
pop
sbb
mov
mov
shrd
stc
push
loopne
mov
pop
mov
inc
js
imul
cmpsb
xchg
jg
jge
sbb
lods
add
jnp
aaa
inc
insl
addr16
cmpsb
aad
inc
mov
scas
sbb
mov
out
in
lret
add
sti
dec
fstpl
sub
mov
divl
xchg
mov
cmp
inc
xor
mov
mov
jno
push
mov
pushf
inc
in
mov
aaa
mov
ljmp
jne
shrl
jp
adc
aam
loopne
das
jbe
fldcw
xchg
ffreep
cmp
push
insb
xchg
xchg
jg
xorl
mov
inc
push
inc
dec
mov
xor
pop
in
or
push
int3
lcall
cmp
loope
push
push
aad
sahf
filds
mov
cltd
popf
pop
hlt
stos
jl
add
sub
rol
or
or
rorb
xchg
out
popa
jp
jg
test
lods
adc
mov
cltd
les
ljmp
mov
dec
loopne
gs
nop
hlt
adc
cltd
call
insl
jge
loopne
jmp
fidivrs
idivl
add
xchg
fnstsw
cmp
loop
hlt
push
ds
stos
sbb
push
or
jge
std
dec
in
jns
pop
inc
loopne
pop
mov
xor
insb
xor
add
lret
mov
push
test
lods
cmc
aam
cmp
cmp
sub
subl
adc
fidivrl
xor
and
xchg
xchg
or
stos
sbbl
jo
sub
pop
and
mov
in
daa
out
stos
ret
pop
pop
cmp
icebp
mov
adc
dec
das
xor
mov
xchg
mov
xor
mov
jmp
mov
sub
add
das
and
rclb
popf
jb
lods
add
lcall
inc
pop
fstl
das
or
cld
sub
or
jg
repnz
pop
dec
mov
shlb
roll
daa
pop
mov
adc
jg
outsl
pop
aam
pop
mov
mov
add
cmc
shlb
xorl
lahf
testb
xor
fwait
dec
and
cmp
adc
sbb
push
bound
dec
sbb
or
popf
or
lods
add
outsl
sub
into
add
sbb
rcrb
fmull
xchg
lea
negb
inc
dec
call
jp
sbb
loope,pn
or
cmp
fisttpll
cmp
and
andb
cli
sub
jecxz
jns
mov
push
and
in
in
inc
das
mov
std
pop
fisubrl
pop
test
jecxz
leave
mov
loopne
data16
cmp
adc
cltd
je
mov
or
jo
test
and
cmp
cmp
andb
dec
mov
adc
cmp
xchg
rcrl
dec
lock
fidivrl
or
sub
mov
int3
andl
and
cli
pop
into
sti
adc
fnsave
clc
cmp
insl
xor
adc
sub
push
xorb
ss
add
inc
movsb
nop
pop
fildl
xchg
sbb
fs
outsl
xor
dec
mov
mov
mov
or
mov
xchg
div
inc
test
xchg
leave
inc
clc
xchg
mov
nop
jle
call
dec
jge
inc
pusha
add
hlt
xchg
lods
mov
cmp
mov
stos
loope
adc
idivb
adc
add
in
add
lahf
adc
daa
add
jecxz
dec
xchg
ss
jmp
sti
test
stos
xchg
inc
pop
pop
mov
pop
xor
sti
jmp
mov
enter
mov
dec
mov
or
sub
addr16
sub
mov
jne
in
das
inc
add
in
jns
imul
jmp
pop
int
orl
lods
push
adc
ficompl
in
sbb
into
imul
shll
ret
cld
mov
push
jae
push
add
adc
xor
mov
cmp
pop
mov
int3
and
or
in
cs
jge
xor
sub
mov
or
xchg
div
call
dec
add
es
out
fwait
inc
aas
inc
rcrl
mov
push
arpl
sbb
xchg
hlt
cli
mov
dec
xor
mov
lret
mov
pop
pop
imul
cmpsl
mov
xchg
sub
cmp
movsl
sub
push
arpl
jno
hlt
aam
fsub
scas
sbb
loop
ds
or
loop
pop
arpl
inc
cmpsb
outsl
adc
pusha
inc
add
sub
ja
mov
mov
pop
stos
jl
jnp
cwtl
sbb
imul
pop
mov
xchg
bound
js
push
lea
mov
push
scas
outsl
cmp
or
mov
xorb
call
push
repz
aam
cmovb
and
jl
fs
xchg
adc
mov
mov
sbb
cmp
stc
loop
test
or
loopne
pop
ljmp
loop
fisubs
daa
jp
mov
ret
scas
xor
mov
cmpb
popa
sbb
jle
lods
mov
sub
mov
xchg
popa
imul
push
stos
in
dec
lcall
outsl
in
pop
and
ficoml
fucomip
and
inc
loope
fldenv
frstor
lret
fidivl
xor
mov
push
inc
stos
add
xor
jle
push
insl
loopne
cmpsl
loopne
and
dec
call
inc
loope
shll
dec
and
push
call
adc
arpl
in
xor
mov
je
adc
inc
test
mov
lea
jns
imul
int3
jg
mov
in
je
lods
enter
mov
data16
xchg
shll
xor
and
lcall
inc
inc
je
and
pop
push
adc
pop
or
fs
fs
or
xlat
add
or
xorb
scas
dec
xlat
push
xlat
sti
mov
sub
out
mov
repnz
mov
sbb
les
xor
sti
decb
inc
mov
aam
cli
das
jns
dec
fdivrs
add
mov
pop
push
cld
push
imul
inc
mov
xchg
fsincos
adc
inc
sub
idivl
mov
test
sahf
popa
push
cmpsl
pop
out
jmp
std
pushf
rclb
negl
icebp
mov
aad
insb
mov
mov
ljmp
roll
push
mov
stos
inc
lcall
into
dec
adc
add
test
add
mov
dec
fisubrs
not
add
push
in
cmp
outsb
xchg
or
testl
push
cmpsb
mov
mov
add
dec
fs
add
les
sbb
mov
andb
imul
in
rorl
fistl
in
mov
packsswb
scas
jo
in
push
pmaddwd
dec
push
pop
mov
push
or
xor
enter
push
cmp
adc
mov
mov
mov
inc
ja
mov
add
pop
mov
shr
inc
pop
jmp
fsts
jo
repz
xlat
ljmp
iret
dec
push
xchg
push
cwtl
scas
adc
lods
cmpsb
push
or
sub
mov
cmpsb
cmpsb
push
mov
addr16
pop
clc
fdivrs
out
jb
sti
and
adc
lds
xchg
outsb
cs
inc
adc
jne
mov
hlt
je
add
and
pop
adc
sub
fsub
pop
mov
mov
repz
mov
sub
leave
sbb
stos
xchg
push
out
faddl
pop
mov
out
outsl
push
mov
pop
or
or
xor
sub
and
xchg
out
insb
push
mov
mov
xchg
cs
sub
orb
mov
arpl
addr16
imul
pop
sbb
dec
cmp
sub
nop
imul
shlb
imul
clc
add
pop
xchg
test
jmp
xchg
dec
mov
lea
cli
add
fucomip
xchg
outsb
fcomp
xchg
sub
fnstsw
jo
push
push
xchg
cmp
mov
loop
sahf
ret
jne
inc
push
mov
and
sti
test
mov
ja
scas
add
out
ja
popf
lret
insl
push
test
pop
xchg
inc
data16
les
xlat
fsubrl
mov
cmpsl
aas
mov
add
mov
adc
cwtl
push
push
repz
imul
stos
and
xchg
cmpl
dec
int
xlat
aam
mov
scas
mov
jo
cmp
fstps
nop
cwtl
xor
repnz
stos
rcrl
daa
or
inc
fmull
inc
cli
adc
jmp
push
ljmp
scas
aaa
iret
xor
sahf
mov
icebp
jmp
mov
adc
xchg
fwait
sbb
inc
or
mov
add
and
dec
sub
daa
out
lock
insb
mov
push
std
xchg
mov
jecxz
cmpsl
mov
rcrb
sub
cltd
add
dec
jle
ret
inc
data16
pop
iret
test
inc
mov
inc
dec
subl
sarb
or
pop
out
push
sarb
sbb
pop
mov
subb
mov
divb
das
mov
xlat
fdivrl
aaa
imul
dec
adc
scas
mov
pop
ds
and
fimuls
push
sub
push
and
fnstenv
adc
jno
sub
adc
push
pop
xlat
push
push
out
sbb
adc
js
mov
push
xor
or
jmp
xor
push
scas
scas
push
or
xchg
nop
lahf
fwait
inc
les
loop
cmp
roll
sbb
push
pop
leave
fistpll
cs
mov
mov
inc
stc
cmpl
inc
insl
shll
add
jnp
cwtl
sub
or
xchg
mov
cltd
and
stos
sub
data16
inc
add
jecxz
ljmp
pushf
rcrb
xor
mov
mov
js
fcompl
mov
repnz
aad
push
test
clc
repnz
jg
sub
into
sub
dec
dec
ret
mov
outsb
pusha
jge
sub
dec
hlt
push
rorl
cli
mov
mov
mov
xor
push
cltd
mov
insl
pop
pop
cmpsl
sub
test
lcall
push
scas
xchg
inc
mov
push
mov
mov
ss
sahf
mov
out
or
xchg
sahf
inc
sbb
shlb
fldl
xor
mov
xchg
mov
test
push
xor
aaa
mov
outsb
popf
xor
mov
jbe
aaa
out
mov
fwait
mov
sbb
push
out
call
rclb
mov
aam
pusha
das
scas
jge
adc
rol
leave
sbb
mov
push
adc
je
mov
xor
mov
xor
repz
inc
jmp
push
and
into
mov
adc
dec
dec
jne
ficoms
jge
lods
int3
or
insl
or
mov
scas
jmp
aaa
mov
ret
outsb
in
ficoml
cld
fcompl
sub
sarl
imul
cmp
push
fildl
and
add
js
xchg
xor
and
lods
shll
fildll
daa
cmp
shll
lret
and
pop
xchg
cmp
aaa
test
cmp
xchg
and
lret
jle
mov
pop
mov
icebp
repnz
stos
jae
dec
cmp
fsub
imul
out
es
lret
xchg
int3
cmpsl
push
stos
fsts
add
pop
mov
sbb
xor
out
push
mov
std
mov
pop
pop
hlt
pusha
loopne
nop
sar
adc
in
dec
outsb
pop
mov
movsb
and
mov
int3
adcl
or
mov
loop
in
adc
add
and
lret
push
or
inc
stos
fnsave
leave
jns
mov
lods
pop
inc
mov
lods
xchg
jne
xor
or
loop
pop
jecxz
out
dec
iret
lahf
add
push
mov
cmp
pop
fcmovb
scas
sbb
clc
jle
sbb
jb
add
subl
inc
fisubrl
mov
pop
fs
push
cmp
mov
into
cmpsb
into
popf
jg
jnp
sbb
mov
jle
pusha
mov
dec
push
rorb
mov
hlt
in
sub
mov
faddl
mov
mov
xchg
cmp
cmp
jns
and
jnp
push
mov
movsb
lret
jmp
leave
jmp
mov
or
and
push
push
jb
mov
and
test
bound
pushf
std
xchg
pushf
adc
xor
imull
cmp
scas
je
inc
cmp
hlt
in
cmp
int
mov
push
cwtl
push
cmp
movsl
sbb
xor
push
test
daa
jg
cmp
mov
shl
adc
ja
inc
and
outsb
dec
sub
pop
mov
cmp
mov
stc
pop
jl
sbb
out
inc
orb
faddp
cmc
popf
and
fiadds
insl
xchg
sbb
inc
js
sbb
bound
mov
sbb
jmp
ret
push
xor
sub
loopne
xchg
and
push
call
cli
popa
mov
jl
in
inc
cmp
mov
loopne
ja
pushf
loopne
cmp
add
jmp
sbb
pusha
mov
xor
sub
mov
dec
adc
test
dec
pop
loope
lret
test
adc
dec
pushf
into
xchg
sbb
std
mov
push
pop
sbbb
add
lock
call
sbb
xor
jnp
cld
pop
sbbl
pop
aaa
jecxz
fs
inc
shlb
add
movsl
pop
cwtl
and
sub
inc
cmp
inc
movsl
sub
and
aas
mov
test
add
ds
aas
jmp
or
decl
push
addb
or
xor
mov
mov
jecxz
lahf
or
inc
stos
das
ret
ljmp
adcl
and
fbld
push
sub
aas
int
jne
dec
add
dec
mulb
mov
popa
inc
push
sbb
nop
push
dec
inc
mov
fnstsw
adc
nop
insl
pop
add
dec
xchg
insl
xlat
popf
xor
xor
xchg
jmp
push
push
jmp
mov
xchg
cmc
cmp
ds
pop
lods
push
mov
jbe
test
addr16
jmp
sub
out
sub
data16
pop
mov
adc
test
push
insl
and
jge
cmp
lcall
insb
cld
addr16
mov
and
push
rorb
mov
scas
icebp
sub
xchg
lock
mov
cmp
sbb
adc
in
insb
jns
daa
sbb
xor
xor
sti
pop
addl
pop
shrb
and
sub
cmpsl
fsin
xor
sahf
loope
mov
or
mov
push
cmpsb
jge
push
shl
rcr
adc
fnstsw
add
pushf
push
movsl
test
mov
popf
push
dec
imul
inc
cmpl
sub
iret
das
pop
decl
fisttpl
fisttpl
mov
fwait
mov
pop
call
mov
adc
mov
sarl
mov
lds
imul
clc
push
pop
clc
push
stos
push
das
in
sbb
pop
inc
fsubr
cmpb
lret
xchg
push
jae
xchg
mov
mov
inc
xchg
sahf
dec
adc
fstpt
aam
loop
mov
adc
mov
xchg
movsb
in
je
pop
data16
imul
push
and
nop
test
daa
push
loop
sub
add
rorl
rolb
fsubrs
push
das
xchg
loop
jecxz
mov
xchg
sbb
fs
jl
je
push
ljmp
scas
cmpsb
mov
xor
out
sarl
stos
fistpll
dec
imul
fistpll
repz
movsl
dec
ja
stos
mov
mov
test
xchg
sbb
add
loope
jmp
cmpsb
dec
rcll
adc
mov
outsb
jb
into
jmp
mov
mov
and
pop
cmp
fnstsw
xchg
sub
inc
test
mov
mov
jno
push
sbb
jecxz
jbe
sub
das
sbb
jp
ret
and
lret
jmp
lods
push
dec
shll
xchg
addl
lea
push
or
or
sub
cld
mov
popf
add
jl
ret
fisttpl
leave
idiv
cmp
jg
rclb
xor
gs
test
dec
pop
sbb
mov
loop
add
nop
decl
ret
pop
mov
and
mov
gs
enter
orb
mov
cmp
aad
notb
pop
inc
bound
negl
scas
cmpsb
pop
fisubrs
add
movsl
jae
fwait
dec
adc
mov
ret
popf
and
jbe
test
jnp
popf
add
jp
dec
mov
lock
mov
filds
nop
in
jmp
and
or
cmp
jnp
add
sti
orb
jp
in
loope
adc
icebp
mov
cwtl
cmpb
or
mov
aad
jne
hlt
push
fcmovnbe
mov
lahf
cld
adc
jnp
sub
in
dec
jns
jge
xor
fistpl
xchg
mov
jl,pt
pop
cmp
bound
pop
popa
pop
iret
popa
inc
pop
lods
mov
mov
ss
cld
mov
test
divl
inc
dec
divb
insb
loopne
jb
and
cmp
xor
mov
push
sbbl
dec
loopne
and
and
sti
cmp
xchg
mov
add
sbb
mov
in
push
jle
jb
dec
mov
lret
rorl
lret
pop
mov
repnz
rorl
xchg
or
mov
outsb
adc
or
subb
stos
les
fiadds
std
push
xchg
outsb
ret
loop
stc
xchg
push
push
sub
std
in
fnsave
jnp
insl
or
push
loope
push
mov
add
pop
pop
lret
lea
adc
and
and
jp
loopne
cmp
and
mov
negl
push
push
ror
cmp
fwait
adc
xor
mov
inc
add
aas
dec
nop
jle
sub
ret
in
jae
shll
push
add
out
and
dec
jmp
fs
jmp
jl
inc
or
mov
rcrl
clc
loop
mov
adc
sub
or
add
push
pop
cmc
mov
adc
xchg
jmp
dec
adc
scas
sub
or
adc
lret
sahf
subb
pusha
arpl
ds
or
inc
jecxz
aas
cld
push
aad
xchg
dec
jle
imul
xor
popf
roll
in
add
push
nopl
gs
or
cmp
xchg
lcall
fisttpl
push
shl
and
mov
sub
mov
cli
pop
xchg
mov
lds
pop
call
js
or
icebp
pop
mov
pop
rclb
cld
in
xchg
inc
ja
mov
scas
lahf
and
enter
js
fildl
mov
push
idivb
mov
push
mov
inc
sub
pusha
cmpl
cld
fwait
insb
or
cmp
fsub
xor
fisubl
outsl
sbb
dec
loop
mov
mov
cltd
sub
or
mov
out
and
out
cs
mov
cmc
xor
out
add
adc
mov
insb
adc
cmc
dec
pop
lock
mov
icebp
dec
mov
mov
test
inc
mov
push
iret
xor
add
push
inc
adc
xchg
push
out
dec
add
xlat
aaa
lods
dec
cmp
popa
mov
stc
push
pop
pop
or
mov
fmull
or
sub
inc
push
dec
and
xchg
push
cmc
lea
cmp
pop
popf
mov
push
mov
mov
imul
outsl
adcb
jle
cld
outsl
cli
rorl
jns
jg
shrb
adc
rclb
lahf
gs
cltd
push
pushl
add
push
imul
pushf
push
push
ds
stc
inc
xchg
aad
out
inc
lret
ds
test
xor
mov
jbe
cmp
jo
enter
fwait
xchg
push
lret
xchg
fcomps
and
adc
mov
sub
int3
sbb
lcall
out
adc
stos
icebp
adc
adc
sbb
push
push
pop
jne
in
loopne
rcll
orl
xor
push
jns
push
push
xchg
push
or
aam
dec
adc
stos
cmp
and
outsl
js
insb
push
pop
sbbl
push
aaa
xchg
push
ss
mov
cmpsl
dec
and
jns
xor
inc
dec
pop
push
inc
sbb
push
push
ljmp
push
add
call
sub
stc
inc
xor
xchg
scas
cli
sbb
add
test
in
or
sbb
dec
inc
lods
fsubrp
ds
test
and
push
add
push
sbb
data16
and
iret
pop
pop
adc
sub
aad
sbb
insb
cmp
into
test
xor
cmp
push
pop
xor
xor
scas
frstor
das
rorb
outsl
adc
dec
cmp
stc
outsl
in
sarl
or
dec
mov
gs
cmp
add
repnz
or
aaa
dec
jb
mov
lds
cmpsb
cli
xor
andl
jl
xchg
inc
pop
cmp
mov
cmp
push
ret
cltd
or
int
les
mov
or
adc
insb
dec
cld
sub
cld
dec
ret
sarb
inc
jmp
ljmp
je
es
dec
xor
int3
cmovl
inc
push
loop
test
sub
mov
cmp
lret
add
rcrl
orl
scas
cld
jle
xorb
inc
and
pop
stc
and
mov
pusha
push
test
push
xchg
xor
lcall
xchg
xchg
mov
mov
lea
lock
ret
insb
sbb
lods
mov
aad
sub
divl
adc
bound
push
mov
mov
and
jb
mov
movsb
inc
ret
je
out
loop
div
fdiv
repz
adc
insb
mul
adc
mov
test
fnstcw
lods
loope
addr16
mov
pop
mov
adc
pop
ja
push
mov
ret
addr16
xchg
idivl
add
arpl
int
aad
outsb
pop
jo
sub
popa
pushf
imul
xchg
fwait
jle
leave
and
aaa
push
mov
pop
and
rorl
mov
xor
sub
xchg
mov
dec
les
inc
add
cmp
hlt
int3
sub
lds
lock
dec
cmp
sbbl
pop
push
dec
das
mov
test
inc
or
push
dec
fimull
mov
pop
pop
xor
pop
xchg
call
mov
mov
hlt
pop
les
mov
jbe
push
movsl
stos
push
cli
fisttps
imul
xor
xchg
lahf
enter
lcall
das
jp
dec
sub
std
inc
push
pop
int3
sub
sti
movsb
shll
sahf
enter
es
push
inc
ficoms
sti
out
insb
add
call
cltd
or
aam
outsb
push
mov
imul
es
shlb
jne
insb
int3
jmp
pop
cmc
push
int3
insl
arpl
aas
push
popa
mov
fistps
pop
fs
dec
mov
ds
mov
les
cmpsl
or
pop
add
sbb
mov
and
popa
and
jmp
dec
sbb
ror
mov
add
imul
scas
add
xchg
cmp
push
stos
test
in
jb
inc
std
mov
leave
dec
js
xchg
mov
cmpsb
bound
ret
jg
out
and
inc
pop
lds
jecxz
xchg
xor
ja
imul
or
and
add
pop
mov
lret
jl
loop
mov
mov
inc
dec
pop
scas
pop
jns
fcomi
push
inc
sbb
jl
pop
ret
mov
int
scas
add
push
mov
fistpll
test
pop
push
cmpsb
in
stos
sub
ds
and
push
xor
xlat
out
aaa
inc
push
dec
jp
push
lea
xchg
mov
je
insw
xchg
dec
add
rcrb
ficoms
test
mov
test
cmpb
stos
lock
call
fwait
mov
mov
clc
and
loop
add
jl
jb
pextrw
inc
and
ds
insl
test
fisubrl
and
mov
xchg
js
hlt
jb,pn
add
dec
int
dec
repz
addr16
xor
mov
shl
ret
xor
adc
ja
mov
mov
cmpsb
cwtl
repz
and
jbe
cmp
pop
scas
outsb
pop
jg
add
test
mov
mov
scas
inc
pushf
clc
js
shlb
and
and
loop
sub
cli
mov
xchg
addl
inc
rorl
fsubl
pop
add
mov
dec
cmp
outsl
mov
das
inc
cltd
jno
je
mov
inc
enter
stos
lret
ja
jo
ss
xchg
ret
clc
cmpsb
sar
push
mov
mov
jbe
or
out
xorb
lret
divb
mov
inc
push
mov
in
enter
cmp
sarl
clc
pop
rol
out
or
mov
or
push
push
arpl
cmp
adc
movsl
insl
jl
sbb
add
dec
ret
mov
fnstsw
push
xor
push
adc
std
adc
jmp
arpl
cmpsb
push
sbb
mov
dec
add
xor
sbb
sub
mov
cwtl
pusha
es
xor
ljmp
mov
decl
cld
or
cwtl
xor
ficoms
adc
mov
pop
das
insl
jae,pn
xchg
mov
jmp
aas
sbb
test
popa
and
lods
inc
pushf
xchg
arpl
push
lahf
xlat
in
jmp
lahf
bt
shl
aad
add
scas
ret
jnp
pop
and
and
sub
mov
inc
fsubs
ret
fidivrs
jmp
loopne
jbe
sbb
sbb
adc
mov
dec
cmpsb
rolb
adc
sbb
gs
mov
orb
inc
inc
inc
or
push
push
push
cmp
sti
push
std
or
es
repz
mov
add
idivb
or
dec
scas
pop
test
int
jg
notl
insl
je
aam
pushf
dec
sbb
or
jno
mov
pop
or
andl
or
jns
pop
loop
test
ret
sbb
ss
divb
ja
push
and
push
dec
enter
fidivs
fisttps
xchg
fnstenv
subb
popf
aam
sub
sbbb
or
cmp
mov
stc
mov
lcall
and
xlat
pushf
test
inc
and
subb
iret
mov
xchg
sub
add
cmp
repnz
or
mov
mov
fnstsw
inc
jns
pop
ficoms
in
in
push
mov
dec
in
sbb
fsubr
adc
mov
jecxz
mov
pop
scas
or
push
inc
stc
sbb
sbbb
jmp
cmp
xor
xor
lods
std
sub
lea
lahf
and
adc
push
rorl
jle
xchg
or
decl
enter
clc
or
mov
ss
sbb
fnstcw
data16
loop
je
pop
inc
pop
mov
sbb
fwait
pop
mov
les
inc
js
xchg
sete
sub
and
sub
push
mov
neg
sbb
lock
ret
xor
and
push
xor
xchg
jg
lods
pop
adc
fwait
mov
xor
lea
sbb
dec
lds
jmp
xor
je
jg
cmp
imul
loope
bound
and
pusha
lds
xchg
mov
sti
test
push
xor
je
mov
outsb
and
mov
cmp
and
xor
pop
lds
stos
xchg
sbb
lret
imul
xchg
out
and
jbe
cli
jns
xchg
cltd
lret
mov
sti
icebp
sbb
add
lds
xor
sbb
out
lock
mov
loop
jmp
mov
dec
push
and
lcall
and
fsubrs
jo
imul
into
mov
scas
jnp
pop
adc
push
xchg
cmp
mov
or
iret
inc
xchg
fdivp
pop
inc
or
add
push
jnp
movsl
popa
inc
mov
mov
fsub
sahf
cmp
add
stc
es
or
mov
btl
lock
xchg
inc
mov
dec
mov
dec
pusha
xorl
aad
out
mov
xor
inc
loope
jge
xchg
or
mov
rol
lock
push
sbb
fs
test
mov
jecxz
add
cmp
push
test
mov
ret
xor
inc
pop
mov
xor
inc
cmp
cmp
and
out
xchg
stc
hlt
shrb
xchg
js
jp
mov
js
popf
js
mov
icebp
fs
lock
cmpsb
jbe
rol
je
push
sub
sahf
or
insl
pop
cmp
sbb
mov
sbb
orl
sub
arpl
mov
in
add
jns
dec
ret
outsb
mov
sbb
lods
andl
add
test
sarl
or
xchg
mulb
fisubl
push
mov
shlb
ljmp
sub
pop
aad
lcall
nop
fdivr
rcll
adc
pop
test
pushf
mov
sar
in
fisttpll
pop
mov
mov
loopne
adc
jg
fldcw
and
repz
stc
inc
dec
add
jl
xchg
adc
sub
jecxz
lea
adc
push
sbb
and
xor
inc
out
cmc
mov
xlat
loop
xor
lods
popf
jae
xor
pushf
inc
inc
test
ret
xchg
int3
ljmp
std
add
pop
int
je
es
iret
clc
or
pop
clc
lds
and
add
mov
fistl
xor
sti
das
sbb
incb
cmpsb
icebp
push
push
mov
push
std
xor
lcall
sbbb
icebp
lea
aaa
sbb
sub
jmp
roll
out
mov
push
ret
lret
xor
mov
int
mov
les
push
adcb
jecxz
sbb
jmp
inc
insb
dec
add
xchg
mov
xor
cmp
xchg
inc
mov
sub
sub
jns
push
jp
loop
sbb
adc
mov
sub
cmpl
adc
adc
push
jge
fisttpl
cmp
dec
outsl
and
cmp
int3
add
loopne
inc
mov
mov
jp
movsb
fsubs
or
lea
sahf
mov
push
pop
or
movsl
add
push
aaa
jno
stc
jo
xor
iret
cmpsb
and
jnp
or
or
add
add
add
flds
and
mov
jmp
pop
out
push
dec
sub
rclb
mov
dec
repnz
mov
ret
imul
sti
dec
sbb
push
pop
cmp
cs
xchg
add
insb
jb
pop
mov
pop
repnz
sub
xor
out
push
test
jmp
arpl
mov
nopl
pop
jle
mov
rorl
sub
subl
test
sbb
lret
or
dec
adcb
or
add
call
or
dec
mov
les
cs
mov
mov
movsb
into
into
fdivrs
push
adc
and
sbb
pop
inc
jecxz
pop
mov
sbb
dec
enter
xchg
fwait
loop
ds
xor
pushf
call
rcl
cmp
pop
gs
std
scas
push
sahf
jns
mov
push
and
jmp
and
mov
or
jp
loope
stc
pop
adc
fisubs
mov
add
push
dec
out
add
rcll
loopne
jbe
das
aam
mov
cmpsl
rcrl
jecxz
jmp
mov
xor
stos
shr
or
div
pop
inc
test
clc
pop
loop
aam
xchg
or
xchg
addr16
mov
jnp
imul
cld
aaa
add
or
aaa
pop
add
cmp
cmp
jecxz
add
mov
insb
and
jg
je
sbb
adcl
mov
xor
inc
push
outsb
shrb
and
and
push
in
mov
fs
pop
cmp
jp
addr16
mov
repz
mov
out
dec
ret
out
inc
cltd
cld
push
push
sub
sub
ficoml
and
lret
push
je
loope
icebp
sbbb
scas
mov
mov
gs
bound
xabort
insl
in
ljmp
sub
scas
imul
cmp
xorl
jecxz
bound
cmpb
outsb
sub
outsb
stos
xchg
sarb
push
ret
mov
push
popf
adc
ffree
iret
mov
ret
popf
adc
jb
out
pop
daa
mov
sbb
lahf
scas
sbbl
jbe
leave
dec
push
jb
out
or
mov
pusha
lods
mov
mov
sar
sub
mov
sbb
test
mov
jae
jbe
jg
icebp
xlat
pop
lods
xlat
push
decl
ret
loope
loope
add
xchg
aad
sub
add
roll
push
test
test
jg
pop
ds
cmc
cmp
testb
lds
and
push
jge
je
xchg
popf
xchg
dec
in
sbb
mov
inc
sbb
scas
or
mov
inc
jo
repz
shlb
mov
lock
jns
mov
repnz
js
jo
arpl
push
sbb
leave
cltd
sar
inc
movsl
addr16
pop
xchg
dec
mov
roll
frstor
push
lods
insl
clc
movsb
and
or
mov
test
xchg
outsl
push
into
xor
sub
pusha
mov
jle
inc
rol
orl
jne
out
jae
cmp
in
adc
jecxz
pushf
push
out
in
lods
nop
insl
push
inc
fucomi
adc
mov
mov
neg
flds
cmp
lods
jge
jg
sbb
pop
addr16
mov
and
inc
pop
push
rcrl
insl
in
jnp
into
cmc
mov
jbe
sbb
or
mov
or
andb
stos
xor
xchg
mov
mov
pop
pop
xchg
leave
mov
mov
or
popl
sarb
cmp
testl
cld
push
push
into
xor
pop
gs
leave
sbb
test
loope
jge
xchg
imul
lods
stos
xadd
fcomi
push
cltd
mov
inc
fwait
jnp
pop
pop
inc
push
inc
cmp
cwtl
pusha
pop
in
stos
sahf
je
scas
inc
xor
xlat
in
add
dec
gs
xchg
adc
popf
push
addl
out
mov
cmp
stc
push
xchg
loopne
loop
pop
bound
insl
inc
arpl
lea
cs
sub
adc
and
sbb
sbb
pop
adc
fwait
pop
call
leave
jl
imul
stos
outsl
cmp
pop
enter
andb
xor
mov
out
sti
orb
lock
mov
shlb
stc
arpl
push
aas
mov
cmp
xor
dec
sub
pop
sub
lahf
stos
in
pushf
std
pop
andnps
adc
pop
fstpt
ret
push
xchg
pop
push
mov
rclb
enter
mov
adc
and
jmpw
adc
shll
cwtl
mov
adc
cmpsl
sbb
add
mov
dec
lea
inc
stc
and
inc
cli
add
xchg
sti
mov
jg
pop
lret
jmp
fdiv
les
pusha
mov
sub
adc
dec
sbb
jl
push
mov
lods
iret
lods
bound
lods
adc
inc
xlat
fsts
scas
cmp
adc
push
rcrb
pop
arpl
inc
xchg
and
xchg
popf
aam
dec
adc
mov
flds
sbb
test
pop
push
push
ja
mul
adc
stos
cmp
mov
mov
ret
pop
shl
sub
icebp
mov
inc
sahf
xchg
call
xchg
jno
cmpsl
sbb
xchg
add
ss
pusha
jo
jp
testb
loopne
movsb
jl
aad
out
js
jl
daa
jns
out
aad
or
aas
les
cmp
push
out
mov
into
xor
mov
cvtps2pi
cmc
repz
xchg
fisttpll
addr16
pop
movsl
lods
test
shlb
into
test
test
call
mov
push
in
nop
pop
or
lock
daa
mov
ja
xchg
push
and
fwait
inc
sbb
repz
jo
std
les
push
adc
imul
leave
sbbb
sbb
xchg
adc
pop
cltd
bound
pop
mov
cmpl
xor
dec
xor
sbbb
inc
repnz
push
pop
and
push
call
xor
or
ds
std
lea
inc
loop
in
fcom
mov
es
fdivrl
inc
arpl
inc
or
inc
imul
cmpsb
ja
mov
sub
fstps
in
xchg
sub
lahf
insl
hlt
daa
repz
loopne
out
or
lds
cli
test
loope
cmpsb
lock
pop
jmp
pop
sub
pushf
imul
pop
cmp
inc
adc
mov
jbe
mov
adc
pop
out
xchg
in
dec
jae
pop
inc
xchg
jg
jl
xchg
addr16
mov
inc
int
movsb
dec
ds
je
fdivrp
sub
cmc
and
inc
lret
pop
scas
jl
stc
xchg
xorb
pop
cmp
mov
loop
ffreep
cmpb
out
jnp
mov
mov
jns
roll
jge
sub
sub
lds
sub
push
fwait
mov
ret
mov
sahf
scas
xlat
clc
faddl
stos
fdivrs
push
push
or
popa
sub
jecxz
add
jno
or
push
push
hlt
jnp
inc
dec
adc
xchg
int3
mov
sbb
or
jne
cs
xor
inc
dec
movsl
jp
je
cld
push
sbb
ja
add
dec
pop
adc
push
inc
fists
out
cmpsb
mov
mov
xor
ljmp
jb
dec
lods
mov
lds
jl
subl
sbb
xor
aam
inc
mov
pop
inc
xchg
mov
push
and
inc
popl
push
mov
cmp
pop
adc
mov
xchg
outsb
test
pop
xchg
push
mov
stos
mov
cmp
jo
idiv
dec
ret
adc
cmc
fwait
stos
mov
sbb
push
add
stos
jge
lock
push
addr16
or
add
in
aaa
fs
cli
test
inc
cmp
adc
push
inc
sub
lods
mov
pushf
outsl
in
mov
test
dec
cld
pusha
icebp
sti
je
sbb
inc
out
enter
pop
loopne
out
inc
mov
cltd
popf
dec
or
mov
sahf
adc
xor
pop
adc
jo
mov
jl
mov
fwait
or
jns
shrl
sbb
mov
xchg
sub
mov
add
int
aaa
adcl
lods
adc
pop
popa
pop
test
pop
outsl
movsl
sbb
jbe
cmpsl
ds
in
stc
jae
movsl
in
mov
xchg
xchg
pop
mov
aam
fcom
ljmp
dec
daa
pop
dec
cmp
mov
shrb
cmp
inc
and
test
mov
xor
jmp
pop
mov
loop
and
pusha
mov
pop
int3
ret
fimuls
not
xchg
push
loopne
mov
popa
notb
inc
adc
ja
fidivs
imul
mov
or
lcall
mov
cwtl
xchg
xchg
out
or
shlb
sub
test
pop
jo
push
jp
lods
ss
shll
add
call
mov
lods
lods
push
push
je
bound
mov
sub
jl
jg
js
rolb
outsl
ds
in
arpl
adc
pop
mov
sbb
lods
adc
and
fdivrl
xorl
mov
popf
gs
fiadds
sub
or
movsl
mov
jmp
sbb
clc
pop
cmc
cmp
call
mov
popf
xor
cmp
add
ljmp
add
and
xchg
loopew
stc
cs
leave
in
sahf
rcrb
es
xchg
dec
inc
adc
mov
or
jge
flds
sub
add
push
inc
into
pop
imul
rcl
jmp
sar
cmp
in
push
adc
arpl
aad
jae
cltd
lds
movsl
into
loopne
loope
shll
fisubl
iret
jp
stc
mov
int3
push
mov
adc
clc
pop
dec
in
push
rclb
push
or
out
in
xor
add
and
repz
cwtl
mov
push
cli
popa
jmp
jg
scas
jnp
or
lret
push
popa
out
jno
mov
add
mov
push
enter
loopne
cli
lahf
fistpll
es
cmp
push
jle
jl
mov
jb
andl
inc
cmc
daa
push
push
stos
iret
xchg
sub
cwtl
mov
dec
scas
mov
mov
aaa
lret
subl
int3
jbe
ret
mov
stos
addr16
jecxz
add
sub
mov
xor
stc
call
inc
adc
nop
push
push
jbe
arpl
leave
mov
rcrl
pop
fnstenv
aas
fs
test
fwait
cli
inc
fisubrs
inc
jne
fbld
push
sbb
outsb
cmpsb
pop
stos
dec
rclb
insb
pop
stos
scas
mov
lret
cmpsb
dec
ja
insb
or
adc
mov
lods
add
aaa
in
sub
mov
push
sbb
dec
jge
pop
imul
addr16
jge
add
jns
mov
scas
cwtl
test
arpl
push
shrb
outsl
add
shlb
sbb
lret
out
or
sbb
xchg
pop
push
shrl
or
int
cmpsb
jno
push
ret
sti
leave
loop
mov
sub
pop
or
adc
test
cld
mov
mov
inc
addr16
ss
cmp
enter
cmc
cmp
cmp
xchg
gs
jle,pn
adc
push
rorb
out
jno
outsl
xchg
lahf
and
hlt
shlb
xchg
cmp
imul
test
sub
xlat
orb
ficompl
cltd
pop
aaa
addl
in
or
cltd
jne
and
jmp
mov
ror
push
mov
jecxz
mov
mov
lret
pop
daa
ja
xchg
jmp
lret
push
aas
push
ret
cmp
insl
mov
in
mov
mov
sbb
xor
adc
ret
mov
sar
jnp
pop
fadd
cld
adc
ja
xor
pop
inc
pusha
pop
mov
out
loope
std
mov
jae
test
les
addl
clc
mov
sub
xchg
js
cmp
clc
cmp
jge
rcrb
into
dec
cltd
add
mov
dec
cmc
loope
into
nop
inc
in
js
push
push
dec
sbb
stos
mov
movsl
arpl
fdivl
sub
sbb
pop
out
ljmp
xlat
stos
cwtl
mov
xchg
jge
shrl
outsb
mov
inc
and
aam
aaa
nop
jge
push
sub
or
leave
mov
mov
pop
xchg
testl
mov
aam
mov
inc
insb
stc
lret
cwtl
mov
mov
xchg
loop
jno
cmp
gs
test
pushf
jecxz
sbb
push
inc
dec
sub
xchg
mov
jge
repz
pop
jmp
xchg
jne
jl
sbb
gs
cmp
or
cmp
mov
stc
pop
ds
xor
push
mov
dec
push
and
hlt
mov
shufps
stos
sbb
mov
pop
cltd
ret
setle
jno
ja
jbe
fsubrl
js
aad
pop
inc
jb
push
jb
cmc
push
xchg
push
hlt
and
dec
xor
outsl
shrb
jecxz
out
add
adc
xchg
mov
mov
sbb
repz
loop
arpl
aad
xchg
testb
scas
jg
inc
das
push
in
stc
jns
cld
jg
mov
dec
inc
xor
ret
cltd
scas
outsl
hlt
cmpsl
pusha
nop
leave
xchg
and
shlb
xchg
aaa
lods
sar
ficompl
pop
adc
in
sbb
aaa
test
das
add
xchg
xor
mov
sbb
push
pop
cltd
out
mov
ret
test
cmp
adc
int
cmp
jmp
jp
inc
adc
cmc
dec
and
xchg
sbb
inc
arpl
pop
imul
test
sub
mov
pop
inc
and
pop
xchg
push
enter
ret
loopne
lods
negl
aam
dec
mov
mov
imul
out
adc
negl
sub
arpl
jo
je
outsl
pop
jne
fstl
inc
das
cmpl
add
xchg
inc
jp
dec
mov
xor
dec
push
jbe
sub
mov
push
imul
dec
imul
sbb
lea
mov
cmc
out
popf
popa
data16
shlb
or
out
pushf
sub
push
mov
daa
cmp
repnz
push
dec
or
fs
jp
out
lret
je
push
mov
arpl
mov
loop
cli
push
adc
or
add
xor
lods
loope
rol
jecxz
out
push
cmpsl
jo
pop
stos
out
cwtl
or
cmc
mov
scas
das
pop
jnp
mulb
cmp
bnd
mov
outsl
inc
test
repz
scas
orl
mov
test
fildl
sub
insl
mov
cmp
jg
push
dec
jge
xor
fdivl
ss
ljmp
jne
adc
sahf
jecxz
adcb
out
loopne
adc
mov
test
xlat
in
in
leave
loope
cltd
out
pop
mov
cmp
xchg
std
sahf
out
out
push
in
push
jl
mov
sub
enter
xchg
iret
icebp
or
loope
inc
sbb
mov
nop
lods
jns
test
inc
pop
and
ds
inc
add
shll
jns
lds
aad
lret
aas
dec
adc
or
adc
sub
add
hlt
xor
sti
int
jns
and
push
popl
psubusw
insb
jg
ljmp
push
and
into
std
stos
inc
daa
loopne
in
jge
and
jne
movsl
lcall
aaa
subl
mov
and
repz
adc
inc
xchg
push
xor
inc
enter
fcom
pop
lea
fmull
xchg
lods
popf
cmpsb
nop
sub
add
mov
loopne
ret
and
xor
pusha
rcl
inc
xor
jmp
jg
push
xor
and
push
xor
mov
fadd
push
mov
arpl
fndisi(8087
sub
sub
jno
rolb
dec
xor
loope
fadds
mov
sbb
imul
pop
push
jne
int
or
mov
mov
cmp
in
jns
sub
aas
jl
cmpsb
and
sar
inc
and
imul
out
jbe
cmp
enter
sbb
gs
call
xor
jae
fisttps
pushf
cmp
outsl
les
add
push
inc
pop
xchg
lds
adc
inc
lods
notl
push
jecxz
mov
sbb
or
add
jmp
aam
jg
movb
sbb
cmp
sbb
jae
push
stc
inc
cmpsl
pop
bnd
jns
dec
inc
push
into
imul
dec
push
test
xchg
jg
test
xor
inc
dec
ja
sub
insl
in
data16
addr16
mov
data16
add
lods
mov
mov
xchg
das
cmp
xchg
jecxz
shrb
inc
lcall
rcl
pop
push
sub
pop
push
ja
xor
mov
fnsave
ja
xchg
arpl
test
fs
add
test
lcall
xor
ja
adc
sub
jno
out
out
repz
mov
orb
lods
adc
add
inc
test
mov
insl
ss
push
leave
jae
dec
test
xchg
notb
mov
cwtl
pop
pushf
movsl
mov
mov
mov
push
mov
je
inc
push
and
pop
cmc
cli
js
or
mov
dec
repnz
clc
jp
test
pop
outsl
pop
popa
cmc
ret
sub
mov
out
insb
aad
pop
in
add
push
fxtract
mov
lcall
mov
test
pop
dec
pop
sarl
gs
outsl
daa
or
aaa
push
sbb
loope
nop
cmp
dec
movl
sub
inc
jnp
inc
fisttpl
mov
pushf
push
lods
xchg
adc
mov
roll
push
rcrb
lods
jmp
push
or
lea
xor
jl
jbe
inc
les
lods
in
insb
sar
push
lret
stos
mov
fcmovne
jbe
push
fistpl
or
orl
arpl
imul
repnz
xchg
dec
inc
fdivrp
pop
sub
push
mov
jge
hlt
jg
int3
adc
cld
adc
jne
mov
loop
cmpsl
jno
push
mov
std
sub
pop
test
push
out
rolb
inc
sub
pop
mov
xor
push
pop
les
aas
dec
enter
mov
cmp
xchg
pusha
out
or
cld
rorb
adc
inc
mov
popf
incb
sub
push
lock
popf
mov
jl
add
lock
xor
dec
iret
push
addr16
insl
cmp
mov
aas
xorb
xor
pop
and
mov
mov
mov
lcall
jecxz
ss
add
push
in
lret
popf
lds
scas
push
mov
cld
loopne
fadds
mov
pop
jmp
push
jle
jecxz
mov
inc
pop
int3
nop
movsb
pop
mov
mov
mov
out
scas
add
icebp
jnp
aam
mov
sbb
leave
fidivrl
addr16
pop
adc
pop
pop
lret
lods
jae
arpl
xor
cli
sbb
js
mov
mov
jle,pt
sbb
sbb
out
shrl
mov
inc
or
mov
lock
lds
fdivp
in
jbe
mov
adc
jmp
pusha
roll
notb
sub
enter
push
xchg
aam
pop
outsb
rclb
lcall
mov
or
push
or
popf
cmc
and
mov
orb
and
lcall
adc
mov
data16
xchg
sub
pop
and
dec
iret
xchg
shlb
mov
imul
cld
xor
sbb
xchg
ja
in
dec
or
cmp
or
push
in
jmp
mov
and
cmp
insb
cltd
pop
mov
adc
or
lods
int
mov
sbb
xor
mov
bnd
outsb
push
push
ret
pop
ficoml
mov
lock
leave
in
sub
jbe
idiv
or
mov
mov
xor
xlat
stos
das
lret
mov
out
pop
sub
outsb
sub
pop
cmp
push
popf
cli
adc
aam
mov
and
mov
mov
mov
ret
dec
fldl
mov
xchg
push
mov
gs
gs
test
jmp
jns
jo
nop
lcall
cs
push
cs
out
insb
pause
adc
inc
mov
xor
mov
imul
jns
jecxz
in
int
or
push
pop
outsb
cmp
mov
mov
dec
in
mov
xor
inc
adc
pushf
ja
aaa
and
rcrb
aam
test
lds
inc
aam
aam
inc
xchg
pop
test
psubsw
in
fs
xlat
cli
mov
or
cmp
frstor
shl
push
pop
push
std
jl
aam
sub
scas
push
call
mov
icebp
pop
xor
dec
adc
hlt
stos
mov
mov
xchg
mov
orl
mov
adc
sbb
movsl
push
fildl
sub
mov
scas
jle
xchg
lea
jns
repz
mov
ds
mov
jne
inc
out
scas
xchg
add
mov
mov
inc
imul
mov
cs
js
pop
ret
jg
inc
cmpsl
inc
clc
hlt
mov
xor
lret
loope
icebp
mov
shlb
pusha
repz
lods
leave
call
lods
pop
pop
out
sbb
cmc
cs
cmp
dec
add
cmp
dec
hlt
movsb
cmp
cwtl
dec
cmp
sahf
cwtl
cmpsb
fldl
cmp
xor
and
dec
repz
push
sbb
fisubs
push
pusha
aaa
rcrl
orb
mov
inc
in
xor
ds
sub
ljmp
push
xchg
push
cld
bound
pop
dec
bound
cltd
cmc
cmp
dec
dec
mov
imulb
push
inc
inc
mov
or
pop
cmp
js
push
push
lcall
cmp
mov
imul
dec
and
bnd
fstl
or
sbb
lock
aas
or
and
adc
aad
or
jbe
loop
addr16
pop
fiaddl
rcl
mov
jne
jecxz
test
lods
mov
mov
inc
subl
stos
test
rorl
cmp
ret
int3
imul
outsl
test
sahf
mov
sub
push
add
adc
lea
shlb
fbld
cmp
jl
out
clc
fists
jne
mulb
loopne
insb
repz
popa
adc
pop
aas
shl
pop
leave
xchg
es
cmc
out
push
daa
aas
in
add
push
int3
dec
push
pop
xor
rclb
inc
mov
inc
push
mov
rol
test
jle
addr16
xor
cmp
aam
repnz
aam
das
xchg
mov
bound
push
adc
maxps
xchg
stos
outsl
jg
call
ds
jecxz
adc
lahf
jp
xchg
outsl
mov
int
fsubl
xchg
pop
sbb
mov
sbb
test
enter
subb
xor
mov
lcall
aas
in
mov
scas
mov
ficoml
xchg
or
add
and
and
fildll
movsb
pop
lcall
mov
mov
rcr
mov
sbb
pop
mov
add
xor
nop
pop
hlt
pop
adc
icebp
cltd
jo
test
mov
jg
aaa
out
add
test
in
adc
sti
mov
lret
imul
dec
inc
push
sbb
pop
pop
mov
jecxz
mov
pusha
xchg
and
rcll
and
dec
add
dec
adc
sbb
xor
shlb
dec
lea
lea
xor
mov
insl
fidivs
test
mov
sbb
cli
in
lods
cmc
sbb
add
fsub
jle
inc
addr16
ljmp
lahf
jle
and
lahf
fbld
ja
cmp
stos
das
outsb
jp
test
push
and
pushf
jp
inc
push
and
es
sub
jbe
js
scas
cmp
dec
sub
rorb
aaa
aad
ret
mov
test
jo
pop
mov
adc
inc
cld
jno
sub
add
cmp
out
xchg
lock
add
jecxz
mov
pushf
fs
ret
adcb
repnz
ficomps
and
add
sti
jge
outsb
push
ret
xchg
push
pop
cmpsb
xor
cmpsl
call
push
cli
pop
fidivrl
jp
and
jp
ljmp
dec
enter
push
add
jbe
dec
pop
push
pop
test
stc
shrl
adc
xchg
pushl
arpl
outsl
and
mov
pop
stos
pusha
or
dec
fsubs
rolb
jns
pop
push
pop
shlb
test
ret
test
negl
nop
pop
je
cmp
jae
xchg
mov
and
into
jo
pop
iret
call
sub
sahf
xor
adc
test
add
mov
push
xchg
add
xor
movsb
mov
mov
test
cld
insb
fsubp
xchg
mov
aas
pusha
fsubl
mov
pop
in
or
jbe
sarb
adc
xchg
xchg
xor
jb
add
pop
inc
dec
addr16
in
daa
xchg
cmpsb
mov
decb
sub
shll
addb
aam
mov
mov
in
xchg
ljmp
mov
es
mov
or
cmpsb
rorb
or
xlat
shl
rorb
scas
aas
adc
data16
scas
push
pushf
xchg
jns
dec
xchg
xchg
pop
aas
jns
dec
mov
ret
jmp
imul
fiadds
xchg
fs
andl
int
outsb
jne
mov
orb
adc
out
out
lret
dec
inc
scas
lea
outsb
pop
imulb
ss
mov
in
sub
push
pop
inc
into
enter
dec
lods
sbb
in
mov
add
inc
sub
lods
or
jp
jp
mov
int3
jnp
repz
test
cmp
push
sbb
cli
xor
jge
int
pop
mov
cmpb
adc
orl
xor
push
dec
mov
mov
mov
shrb
pop
imul
add
fsin
fimull
in
movsl
mov
mov
ds
jbe
adc
mov
mov
mov
icebp
mov
test
jo
xor
dec
cmp
inc
sub
jl
gs
out
jecxz
sub
loope
repnz
aaa
ret
or
test
and
jo
scas
dec
ja
aaa
add
xor
adc
mov
and
std
jbe
lret
dec
inc
subl
xor
nop
test
mov
jge
sub
ljmp
sub
add
repnz
jecxz
mov
pop
adc
inc
outsl
xchg
and
out
iret
xchg
xchg
decb
cmpb
pop
test
popf
sbb
cmp
push
cwtl
test
lock
jg
iret
test
jmp
inc
enterw
jl
popf
push
inc
mov
xchg
mov
movsb
popf
cld
cmp
leave
inc
ja
clc
mov
stos
ss
in
jne
jns
push
cmpsb
cmpsl
out
xchg
rol
cmp
pop
das
fidivrl
dec
push
jo
popf
fnstenv
sub
xchg
loopne
cmc
inc
arpl
cmp
mov
dec
enter
out
hlt
fidivrs
xchg
xor
add
sub
aaa
mov
dec
int
dec
mov
ret
xchg
shll
jmp
fnsave
cmp
pop
pop
mov
shll
add
stos
in
sbb
cld
ret
xchg
cli
imull
fldt
jb
jno
inc
outsl
or
loope
leave
jns
mov
lea
xchg
mov
lock
push
fsub
add
or
movsl
in
push
bnd
invd
imulb
aam
aam
sbb
dec
dec
out
ljmp
repnz
mov
sbb
push
and
cmpsb
inc
stos
or
iret
bnd
movl
adc
jmp
out
inc
add
test
cmp
sbb
and
xchg
incb
out
hlt
jg
cmp
stos
push
lods
aad
add
fnsave
fisttps
mov
leave
sub
push
inc
das
lods
push
cli
dec
enter
add
dec
orb
mov
or
sub
push
dec
stos
or
fildll
pop
push
fimuls
cmp
or
shrl
lds
xchg
mov
or
lock
xor
dec
imul
aam
mov
shl
or
popf
int3
nop
jecxz
sbb
in
and
icebp
jo
jl
js
arpl
popf
mov
lret
mov
into
nop
loop
dec
push
sbb
mov
xchg
mov
scas
xchg
stc
and
in
mov
xchg
dec
test
test
mov
cmp
outsl
xchg
mov
mov
mov
push
push
mov
addr16
push
movsb
scas
inc
xchg
es
mov
push
leave
insl
xor
mov
mov
push
inc
jl
aas
mov
mov
jmp
mov
pop
inc
mov
sub
out
jg
add
enter
std
push
mov
insb
sahf
jecxz
pop
mov
in
cmp
aas
loopne
into
mov
in
add
outsl
push
cli
aad
cmp
fsubr
fwait
cmp
pop
jb
dec
daa
sbb
test
xchg
adc
mov
test
call
and
jnp
jno
pop
adc
pop
popa
and
sbb
xchg
call
xlat
xchg
and
movsl
mov
pop
and
rcll
jp
mov
xchg
pop
dec
jo
add
pop
hlt
movsl
sbb
aas
cmc
call
push
mov
std
inc
pop
or
mov
in
mov
mov
mov
rcll
mov
adc
jge
xchg
lcall
ja
shrl
scas
out
xchg
imul
pop
and
lods
test
stos
sbb
mov
fucomi
push
pop
mov
mov
scas
adcl
incb
lods
repz
lods
lods
add
mov
iret
xor
xorb
mov
pop
repnz
jecxz
mov
ljmp
jl
xchg
lods
xchg
std
jo
sub
cmpsb
in
divl
outsb
push
fcoml
pop
into
cmp
mov
xlat
rcrb
xchg
movsb
aam
icebp
jne
xor
repz
cmp
scas
xrelease
mov
mov
xor
sub
sub
ret
repz
mov
imul
xchg
or
cmpsb
sti
mov
xchg
mov
ss
cmp
out
fiadds
pop
mov
and
push
inc
sub
out
cmc
jecxz
rcrl
or
jecxz
sub
fs
sti
sbb
pushf
xor
les
push
flds
stos
jnp
fists
adc
jge
push
daa
ja
loopne
mov
fcoml
addr16
pop
jg
mov
aas
into
in
in
inc
in
ss
je
sarb
insb
sti
jbe
gs
or
mov
jge
pop
or
cmp
neg
mov
push
es
cmp
sbb
xchg
or
rclb
cmp
bound
ja
aas
popa
cmc
push
push
imul
mov
push
icebp
mov
or
add
adc
hlt
lcall
jmp
push
js
lock
dec
mov
andb
movsl
roll
mov
dec
sbb
fcmovnu
aam
dec
mov
mov
mov
je
xchg
iret
mov
or
or
popf
inc
pop
mov
lea
repz
cmp
xor
inc
je
stos
jae
jne
xor
and
inc
mov
mov
stc
cltd
or
imul
outsb
outsl
pop
cmpsl
or
jmp
rolb
push
or
rcll
stos
xchg
lret
incl
flds
popf
imul
jb
pop
mov
ljmp
shrb
mov
notl
sub
pop
stos
mov
test
push
in
mov
lcall
les
push
lea
sahf
cmpsb
shlb
jg
jno
es
sub
mov
mov
mov
sti
cltd
hlt
ja
mov
test
das
push
xchg
js
mov
lea
jle
lcall
adc
rclb
dec
push
sbb
xchg
jle
lods
mov
loope
stos
xor
inc
scas
out
cmp
sub
cmpsb
test
xor
or
sbb
cs
sbb
adc
adc
push
fs
adc
sub
fidivrs
mov
lret
inc
jmp
lds
inc
jl
push
test
cltd
daa
call
leave
test
fldenv
div
cmc
cli
jl
int3
adc
pushf
movsb
out
fsts
jae
cmp
pop
push
mov
divl
shrl
push
mov
push
or
inc
mov
std
mov
das
in
fcoms
xor
push
dec
mov
ficompl
sub
xor
mov
or
or
pop
mov
cmp
sahf
loopne
sub
int3
mov
clc
stos
push
aad
daa
sbb
xchg
gs
xchg
inc
leave
pop
dec
das
pop
test
pop
push
and
dec
mov
adc
inc
repnz
lcall
pop
jae
sti
loop
notb
dec
pop
aam
pop
cmpsl
mov
add
repnz
js
push
xor
ret
aas
fcoml
sbb
xor
mov
inc
xchg
push
push
mov
ljmp
jecxz
jle
cli
sub
sbb
mov
enter
mov
mov
stos
mov
jl
xchg
shl
sbb
out
pop
sarl
push
in
sbb
fwait
mov
xchg
neg
cs
call
loop
adc
lods
mov
or
sbb
test
mov
inc
sub
pop
lods
lea
push
mov
arpl
leave
mov
cmp
xchg
sub
cmp
jp
and
int
inc
stos
mov
ss
mov
sarl
dec
stos
sub
arpl
ret
push
mov
dec
xchg
hlt
daa
sbb
dec
push
cltd
push
push
xor
sub
es
push
ficoml
sbb
enter
sbb
push
mov
and
add
mov
xchg
push
mov
imul
mov
out
rorl
mov
pop
mov
jp
add
sbb
or
sbbb
or
sub
shr
fdivl
mov
mov
sti
inc
cltd
sub
les
lret
cmc
cmpsl
aas
push
and
push
rclb
fisubrs
fs
jecxz
push
stc
xchg
and
xchg
sahf
push
xchg
sbb
enter
js
jmp
xchg
adc
xlat
mov
iret
inc
into
fisubrl
outsb
or
cli
sbb
jmp
xlat
scas
sarw
mov
and
xchg
jle
sbb
dec
cmp
jb
and
sub
stc
xorb
sarb
pop
mov
mov
push
push
mov
fs
pop
nop
pop
xchg
cmp
ret
pop
sbb
sti
cltd
push
imul
xchg
sti
mov
jb
cmpsb
or
imulb
test
jl
xlat
clc
mov
lret
mov
and
ljmp
daa
jb
xor
out
lahf
mov
mov
dec
out
lea
fsubr
imul
sahf
pop
scas
xchg
mov
das
aas
mov
orb
cmp
lahf
nop
and
mov
inc
aam
lcall
test
cltd
cmpsb
or
jp
es
cwtl
mov
bound
and
or
pop
mov
and
lea
ljmp
popf
frstor
fcmove
inc
test
mov
jmp
push
mov
lss
int
jmp
xchg
lret
xor
movsl
inc
insb
dec
imul
pushf
test
pop
dec
pop
push
or
mov
stos
std
push
cmp
cmp
sarl
push
cltd
mov
xchg
ja
adc
xchg
jg
inc
mov
adc
mov
sbb
jl
push
scas
enter
and
into
jl
in
in
arpl
pop
xchg
xchg
xor
ret
cld
jge
adc
in
cmp
pushf
push
ss
mov
das
sub
fstpt
test
push
inc
popf
out
je
adc
xlat
sbb
das
data16
add
popl
inc
jle
mov
cmp
ret
add
push
test
inc
filds
add
pop
loope
sub
mov
inc
cmp
jnp
or
shl
and
cmpsb
sbb
lods
lock
cli
push
mov
or
xchg
push
jmp
test
inc
jecxz
mov
and
popa
or
jmp
mov
xchg
xor
cmpsb
lods
mov
aaa
push
stos
stc
repnz
inc
ds
fmul
call
icebp
fistpll
rclb
jecxz
jns
scas
cmp
icebp
sahf
add
add
xchg
mov
leave
push
enter
outsl
jo
xchg
in
dec
sub
out
roll
in
push
fstps
xchg
out
stc
cmp
push
sar
cmp
pusha
mov
xchg
ja
xchg
push
out
sub
mov
push
mov
dec
test
xor
loope
jae
lods
inc
jo
mov
test
jns
jb
shrl
cmp
sub
ja
imul
ss
leave
ret
push
and
sti
mov
in
cmp
test
arpl
adc
lret
mov
lea
cltd
jmp
xor
imul
xor
pop
push
cli
xchg
call
pop
addr16
enter
push
paddsb
mov
add
aam
aaa
lcall
jne
xchg
push
lods
dec
xor
bound
push
sub
and
addl
clc
js
push
rolb
cmp
repz
mov
sbb
inc
ds
push
pop
les
ds
sahf
xchg
and
jl
es
ficoml
arpl
aaa
jle
inc
faddl
lods
push
sar
decl
inc
in
cld
fldcw
sbb
scas
mov
aas
jge
in
das
add
adc
clc
sbb
dec
outsl
pop
add
inc
gs
and
aas
push
enter
clc
cmp
inc
lcall
into
jge
rorb
in
xchg
mov
push
push
xor
int3
add
ljmp
adc
and
fimull
cld
int3
leave
popa
repz
movsb
mov
inc
mov
scas
cmp
xchg
repnz
cmp
notl
nop
mov
xchg
pop
stc
shlb
rol
inc
mov
mov
outsl
je
jae
call
push
cmpsl
insb
mov
outsb
adc
jecxz
orb
mov
adc
push
divl
jo
mov
sbb
loop
and
int3
mov
popa
loope
sub
push
ja
outsl
adc
mov
dec
xchg
add
or
fcmovnu
jmp
xchg
fdivs
mov
jmp
iret
or
and
push
fadd
push
sub
sbb
out
cltd
aad
imul
shrl
cmp
and
into
push
xor
test
pop
in
adc
dec
sbb
test
mov
sar
or
jbe
jle
int
fiadds
push
fiadds
int
add
rorl
mov
int
out
push
call
xchg
cmovo
inc
or
jecxz
mov
add
test
pop
push
mov
in
sbb
jl
mov
adc
inc
fmul
insl
xchg
cmp
jbe
sub
push
push
inc
push
nop
outsl
jae
lret
faddp
and
or
int3
mov
sbb
hlt
iret
xchg
sbb
daa
xor
inc
push
insb
push
pop
pop
pop
lcall
arpl
out
fwait
mov
rorb
lock
xchg
loope
sub
xchg
pop
ficomps
push
js
faddl
psrlw
inc
cwtl
push
int3
out
icebp
xor
adc
repnz
xchg
mov
pop
push
add
mov
je
out
jbe
cli
inc
cmp
jo
loopne
cmp
leave
mov
jg
movsl
adc
hlt
cs
or
pop
and
clc
insl
dec
int3
lock
repnz
add
jnp
or
insl
adc
andl
and
push
and
nop
xor
sub
jecxz
pop
pop
hlt
lds
xchg
fsubrl
mov
jle
sub
cltd
les
je
nop
pop
das
cmp
and
or
pop
mov
shlb
jle
das
movsb
mov
xchg
inc
fndisi(8087
fs
add
sbb
xorl
lea
dec
mov
or
pavgw
sub
repz
add
daa
sbb
jb
hlt
orl
mov
pusha
pop
jecxz
mov
push
adc
pop
xchg
mov
or
cmp
mov
adcb
mov
sub
xor
ror
gs
int3
xchg
cli
pop
inc
cmpsb
or
push
push
movsb
jae
enter
imul
sti
vmread
shr
add
arpl
cmp
and
jns
in
xlat
insb
xor
xchg
test
cmpsb
aam
xchg
xchg
jae
out
jns
negb
ret
pop
inc
cmp
shrl
inc
call
mov
pop
jbe
sbb
mov
loopne
mov
xchg
gs
hlt
ret
in
inc
push
adc
out
or
inc
inc
lahf
add
les
mov
sub
cltd
xor
lods
xchg
data16
inc
lret
fcoml
dec
aas
mov
mov
test
mov
pop
mov
fcomip
mov
pushf
outsl
outsl
mov
loop
imul
sbb
test
xor
jbe
jb
sbb
outsl
sysenter
fsubrp
adc
xorb
ljmp
dec
ficompl
filds
add
aad
daa
push
dec
cmp
xchg
pop
inc
hlt
outsl
jae
in
aas
push
cmp
pop
lods
cmc
xor
in
sub
xor
cwtl
and
or
aas
xor
ds
movsb
add
outsl
aas
push
inc
into
jns
xchg
xor
ficoms
bound
add
out
push
xor
or
imul
pop
jnp
and
popa
pusha
or
add
push
cmp
or
push
ror
mov
pop
push
push
adc
repz
rcrl
inc
adc
in
mov
sbb
rorl
incb
adc
aaa
xchg
daa
jne
mov
jecxz
cmp
test
mov
and
push
jmp
nop
and
mov
xor
add
cmpsb
push
aaa
mov
push
mov
js
out
shrl
fldenv
xchg
and
inc
rorl
mov
sub
sarl
adc
cltd
lea
or
sbb
repnz
xor
pop
jbe
js
rclb
rorl
bts
sub
push
inc
sub
lods
in
mulw
jmp
mov
mov
pop
repz
xchg
pop
mov
cmp
stc
pop
jns
lock
test
jo
sub
inc
push
lock
sub
sub
mov
lret
cmp
pushf
mov
cmc
enter
jns
mov
dec
push
mov
iret
jae
shll
push
rolb
sub
repz
or
adc
jns
lds
sub
xor
in
cld
popf
add
jno
movsl
pop
call
notl
call
dec
push
sar
testb
fidivl
std
outsl
cmpsl
fwait
int3
into
cmc
push
cmpsb
stos
fisubs
nop
inc
or
gs
int3
xor
xchg
cli
sbb
jl
cli
testb
repnz
mov
arpl
add
xchg
xchg
pop
push
inc
push
cltd
ret
sub
lahf
cltd
or
jp
clc
sbb
sub
jg,pt
or
or
jno
cld
jg
out
loop
pop
hlt
leave
test
jecxz
cmp
and
sbb
in
xor
outsl
iret
mov
aas
cs
aas
loope
andl
outsb
ret
fdivrs
cmp
pop
xchg
repnz
out
in
in
sti
pusha
push
daa
repz
out
jo
inc
pop
jl
push
pop
cmc
sub
mov
mov
push
add
jno
xor
das
jge
cmp
icebp
push
lcall
stc
sbb
lods
mov
sbb
cwtl
mov
jecxz
xor
add
out
add
add
dec
loop
cmp
pop
loopne
js
cmc
testl
push
lret
shll
leave
gs
or
mov
and
jbe
notb
fistps
cmp
adc
mov
out
fs
insl
xor
mov
cli
jno
out
inc
lret
stos
pusha
cmp
mov
jl
cmp
lret
push
adc
xchg
mov
les
stos
sub
repz
lahf
scas
xorl
arpl
jge
aam
mov
cld
xchg
and
subl
stos
fxam
es
test
out
aad
inc
pop
mov
rcr
pop
inc
cmp
imul
dec
cmpb
jno
jno
rorl
pop
nop
and
hlt
aaa
and
lock
shl
pop
cmpxchg
sbb
int
sub
daa
incl
orb
pop
inc
js
test
imul
and
dec
mov
pop
or
cs
mov
sbb
int
jne
stos
dec
shll
inc
and
mov
notl
filds
mov
shl
data16
cld
movsl
orl
push
in
addr16
xchg
and
jle
mov
js
or
xchg
add
or
sti
les
pop
jmp
inc
data16
cmp
xchg
adc
mov
xchg
sbb
mov
fcoms
inc
xchg
pop
inc
lea
adc
cld
mov
imull
jle
dec
or
loope
clc
jp
imul
dec
mov
ror
je
jmp
stos
das
pop
adc
pop
add
mov
dec
xor
stc
and
xor
xchg
xor
aad
push
or
pop
mov
ret
out
test
loope
inc
stc
pop
out
sub
mov
sbb
jmp
adc
xor
add
xchg
pop
push
ljmp
addl
icebp
adc
mov
orps
stc
pop
mov
dec
adcb
sbb
repz
or
retw
ficomps
cmp
aam
cmc
sbb
bound
dec
into
iret
adc
dec
dec
jle
cmp
mov
sbb
aas
cltd
lret
jo
mov
cmc
addr16
jbe
adc
ds
and
fsubl
adc
xor
lock
bound
add
pushf
hlt
xor
jmp
xchg
adc
cmp
mulb
dec
lcall
in
jp
cmp
test
fldenv
fs
lods
inc
push
push
pop
test
into
lcall
jb
and
mov
aas
sub
pop
mov
dec
pop
jg
je
mov
jae
ja
flds
outsl
sbb
dec
sub
dec
es
out
push
div
iret
sbb
insb
sbb
cmp
cmp
scas
jmp
push
pop
inc
pop
adc
or
push
push
cmp
into
xlat
push
out
repnz
add
inc
mov
sahf
mov
push
xchg
inc
push
push
ret
loopnew
push
stos
or
out
mov
mov
cld
push
sbb
ljmp
out
mov
push
adc
dec
dec
enter
adc
sbb
sub
jl
out
cmpsb
mov
mov
push
dec
mov
aam
mov
lret
xlat
inc
add
push
xlat
lahf
ret
jbe
cld
dec
loope
xchg
ds
daa
push
movsb
inc
sub
mov
aam
add
push
mov
ds
jl
loope
mov
cmp
or
loopne
ret
pushf
xchg
jnp
scas
and
leave
dec
adc
push
add
jmp
fists
in
in
lahf
sub
inc
mov
fistps
or
mov
repz
jle
sbb
cli
lahf
and
arpl
mov
sub
sub
stc
mov
shlb
xor
sbb
inc
cs
inc
cmpsb
es
xchg
push
test
adc
pusha
sub
inc
out
popa
add
fisubl
add
rcrb
outsb
leave
inc
dec
roll
ds
push
mov
insb
nop
rorl
iret
lods
movsb
sbb
lds
lock
push
add
mov
jnp
nop
cmpsl
jnp
jge
test
cmpsl
gs
aam
cmp
cmp
fidivl
sub
mov
xor
sbb
and
mov
je
xchg
cs
gs
mov
andl
dec
dec
sub
ss
xor
movsb
test
pop
in
mov
push
imul
mov
sub
fwait
adc
xchg
mov
fsubrl
sub
popf
xor
push
cmp
js
out
imul
inc
dec
mov
mov
negl
jae
push
out
pop
sub
jb
mov
nop
in
mov
xchg
mov
sbb
xchg
sub
mov
popf
fcoml
fisubrs
fnstcw
cmp
nop
dec
pop
xor
push
dec
lret
and
pop
rcll
or
push
push
out
adc
clc
jle
dec
sar
in
lcall
mov
pushf
fs
iret
or
je
and
lcall
dec
cwtl
xor
stos
fldenv
jne
cmp
lret
push
pop
xor
sub
imul
push
pushf
lods
aad
sbb
in
or
sbb
ret
sub
orl
and
lods
aam
xchg
lahf
cltd
test
in
xchg
fmuls
in
dec
pop
out
out
and
jg
xchg
lds
pop
sbb
bnd
into
lret
sbb
cs
or
orb
out
mov
mov
pop
inc
pop
cmp
int
xchg
scas
lods
insb
inc
dec
in
jge
push
sbb
and
cmc
jp
adc
push
xchg
dec
sub
scas
aad
mov
test
lea
lds
add
loop
lea
push
imulb
stc
sub
call
adc
sti
xor
fsubrl
pop
loope
jp
sub
xor
push
rorb
mov
push
xchg
clc
in
mov
fidivl
inc
cs
add
int
mov
insl
mov
xor
test
sbb
and
mov
sub
in
and
out
inc
icebp
add
rcr
jp
je
or
xor
and
movsb
roll
mov
fldt
rorl
out
pusha
in
lods
mov
or
inc
fidivs
mov
leave
scas
dec
call
popf
jl
pop
inc
dec
xchg
cltd
aas
addr16
call
pop
xchg
or
icebp
jge
or
and
xor
mov
pushf
dec
cmpsb
push
adc
das
scas
movb
jp
sbb
mov
out
cld
pop
cmp
sub
jg
mov
imul
fldt
outsl
mov
mov
jecxz
or
rcrb
mov
hlt
movsb
lods
or
mov
jns
movsb
pop
mov
cmpl
loope
out
mov
push
scas
bnd
xchg
hlt
mov
lock
jne
pop
jl
bound
rorb
or
xor
jnp
xor
jne
inc
cmp
scas
scas
leave
int
mov
xchg
jns
inc
add
xor
push
mov
mov
icebp
inc
ja
push
aaa
ja
mov
xchg
xchg
pop
mov
jg
stc
push
adc
mov
jge
iret
xor
jnp
mov
bound
cmp
ret
in
ljmp
mov
xor
in
imul
sbb
data16
add
cltd
repnz
sbb
cmpsl
mov
and
lcall
and
stc
xor
notl
lahf
mov
in
std
test
add
lahf
add
arpl
jb,pt
cmp
cmp
rorb
insl
mov
mov
fisttpll
and
push
aam
mov
mov
xchg
pop
pop
std
dec
test
mov
mov
sub
popf
push
jo
inc
lret
jne
popf
imul
lods
test
loop
sub
xor
push
xor
notb
adc
sti
dec
test
lahf
loop
adc
sti
outsb
imul
in
inc
dec
and
push
and
andl
hlt
xor
pushf
mov
in
aad
cli
out
pop
inc
stos
cltd
icebp
pushf
pop
daa
dec
stos
cmpsb
repnz
jbe
cld
sbb
adc
cmpsl
mov
mov
outsl
sbb
hlt
pop
out
pop
mov
mov
mov
outsl
out
or
aaa
in
jae
xchg
cs
sub
jnp
mov
pop
push
sub
pop
add
mov
adc
mov
mov
mov
mov
pop
pusha
scas
arpl
sbb
data16
loop
ret
pop
cld
xor
push
mov
cltd
add
inc
int3
lret
xor
jo
jno
push
sbb
orl
sub
fistl
dec
cld
adc
and
outsl
pop
mov
cmc
dec
pusha
das
xchg
ret
imul
insl
enter
pop
pusha
sbb
rclb
pop
pusha
scas
sbb
pop
out
xchg
and
ret
inc
lcall
mov
or
pop
js
and
inc
imul
cmc
pusha
insl
jae
xlat
in
push
in
mov
xchg
add
mov
int
mov
aam
outsl
cmp
mov
jns
bound
dec
das
test
sti
jns
hlt
inc
sub
arpl
xlat
out
mov
xchg
or
xor
adc
lret
lea
lea
mov
mov
sub
ja
lods
inc
fwait
mov
xor
clc
cmp
sbb
push
xor
sbb
or
lret
mov
xor
push
bound
loope
pop
sbb
jecxz
fbld
shll
stc
pop
add
loop
repz
imul
sbb
push
add
fstpl
sub
xor
popf
mov
mov
jl
add
pop
int
lret
or
repz
mov
jmp
test
sub
mov
push
sahf
mov
dec
stos
ficompl
mov
add
xorb
int3
pop
loope
jmp
push
adc
cmpl
jge
ret
mov
or
dec
sarl
arpl
daa
sbb
decb
sbb
dec
mov
dec
xchg
mov
stos
pop
int3
push
cmc
lea
jg
shll
mov
xchg
shrb
mov
lret
out
adcb
adc
mov
jne
ret
movsl
sub
push
in
outsl
push
shlb
mov
scas
xor
push
lock
cs
xchg
jae
outsl
fs
pop
inc
push
push
pop
mov
xchg
scas
cmp
mov
std
ds
out
dec
in
xor
repz
movsb
repz
mov
add
arpl
aas
ret
or
sti
sub
test
lods
dec
mov
dec
and
pop
sbb
mov
je
jp
xor
shl
sub
stos
popa
in
push
ret
and
push
popf
ret
add
mov
xchg
and
xchg
cmpsl
mov
sbb
push
ljmp
push
or
ljmp
vpshlq
cmp
ror
pop
fisttps
imul
inc
xchg
addr16
lret
xor
aas
lods
sub
ds
leave
push
pop
add
jmp
cmp
das
and
fs
stos
adc
hlt
inc
data16
cld
or
les
pop
dec
sbb
xlat
cmp
push
notb
cmpsb
fimuls
std
lea
repz
pop
cli
jp
xchg
wbinvd
lock
aas
or
cmpsb
fs
daa
dec
cmp
fisubrs
push
jle
push
xor
int
mov
mov
filds
adcl
aam
inc
int3
outsb
psrlw
ljmp
jle
fistps
out
cmp
mov
cltd
into
fwait
jo
fildll
cli
scas
lods
stos
arpl
in
jecxz
je
push
stos
adc
add
insl
adc
adc
mov
sahf
mov
xchg
jecxz
je
popf
repz
add
out
xchg
xor
mov
popl
mov
mov
bound
mov
xchg
xor
stc
xchg
movsl
push
xchg
stc
stos
rcrb
cmpsb
pop
mov
and
push
sbb
lods
js
ret
int3
das
pop
jecxz
clc
arpl
xor
out
adc
movsb
xchg
lock
jle
inc
mov
jo
and
loop
lock
sub
pop
adc
or
bound
out
inc
xor
mov
out
or
add
mov
push
add
xlat
hlt
lcall
pusha
scas
xor
scas
test
xchg
push
adc
xchg
cs
mov
xchg
out
arpl
lret
mov
adc
jg
push
pop
sub
mov
or
lods
dec
push
adc
xlat
cmp
and
je
mov
sti
aam
push
push
ljmp
dec
jmp
push
push
cmp
rorb
mov
pop
out
and
mov
rclb
scas
inc
cltd
in
push
push
dec
scas
jmp
into
clc
xchg
cltd
inc
jle
flds
xor
sbb
icebp
repz
jle
inc
add
or
clc
xor
xchg
cmp
in
pop
cmp
pop
inc
sti
and
pop
and
cmpl
cmp
jle
sbb
inc
dec
lret
pushf
rolb
fwait
nop
in
and
mov
fwait
pop
dec
sub
lds
rorl
xor
mov
mov
or
in
negb
aad
nop
int
ss
adc
sahf
mov
dec
jns
push
inc
pop
mov
test
push
sti
bound
adc
insb
pop
or
scas
push
fidivl
jnp
loopne
int
inc
mov
lret
enter
jge
pop
cmp
sub
or
rcl
out
bound
jge
jno
cmpsl
enter
fcmovnb
cmp
ror
ret
out
push
cwtl
push
pop
aam
mov
pop
inc
out
lock
jecxz
je
mov
mov
es
pop
insb
inc
cmp
lret
data16
jae
scas
lcall
xchg
add
mov
pop
add
push
test
pop
jge
xchg
and
mov
je
push
in
dec
icebp
mov
out
cmp
pop
jmp
sbb
add
jle
test
fcmovnb
cmc
mov
inc
icebp
bound
hlt
xor
imul
rcrb
lahf
pop
cmpsl
imull
xor
repnz
shrl
imul
gs
cmp
add
test
stos
push
xchg
ss
mov
add
iret
xchg
lds
mov
inc
adc
lea
add
push
scas
mov
xor
test
leave
or
fistpll
roll
inc
push
cmp
mov
call
xor
xor
sub
pop
xchg
dec
or
in
cs
cmpsb
ret
adc
mov
mov
sub
aaa
or
mov
push
test
sub
mov
or
sbb
jecxz
and
and
aaa
and
add
pop
les
and
sbb
mov
orb
xchg
mov
mov
mov
jl
rcll
lret
lock
push
dec
jnp
xor
lods
adc
dec
sub
ljmp
cs
lds
push
rcll
test
mov
loop
adc
xor
repz
subb
mov
fistl
add
leave
sbb
jecxz
mov
sbb
jl
pusha
icebp
jbe
mov
scas
mov
adc
push
lret
jae
in
jle
add
pop
push
jmp
mov
mov
pop
rol
adc
sbb
js
inc
xchg
in
xchg
repz
xchg
imul
imul
mov
lea
fmuls
gs
and
idivb
pop
fidivs
loopne
xchg
in
addr16
pop
int
pop
out
sbb
in
mov
shl
push
ja
int3
xchg
out
or
incb
dec
fmul
loop
pop
das
xor
xchg
sar
jns
scas
fwait
mov
test
add
xchg
lock
pop
sub
sub
sub
mov
les
ljmp
fadds
xlat
cmp
stos
sub
pop
lods
enter
jae
inc
xchg
sub
fwait
montmul
cmpsb
add
push
mov
int
fnsave
mov
cmpsb
out
cmp
push
repz
rcll
ficompl
repnz
mov
or
xchg
dec
pop
or
mov
sub
mov
popa
aaa
mov
sbb
in
aam
subl
pop
or
mov
jecxz
cmc
push
xchg
mov
popf
out
sbb
mov
movsb
call
loope
arpl
inc
xor
jnp
mov
fnstcw
inc
loope
jne
fcompl
fs
dec
cmp
out
out
fsubr
jbe
mov
mov
ss
into
xor
and
mov
or
adc
mov
dec
mov
mov
pop
shlb
icebp
sbb
lret
fiadds
test
or
cmp
dec
fwait
mov
loop
fucomp
cmp
xchg
jb
lock
and
addr16
pop
insl
scas
mov
jg
dec
push
fcmovnbe
jmp
les
in
push
lret
adc
mov
in
sbb
and
dec
cmc
mov
sbb
inc
push
sub
cmpsb
scas
and
sbb
cld
add
xchg
insb
push
mov
add
lds
dec
dec
std
imul
sbb
leave
jne
cld
push
rclb
jp
jbe
sub
addr16
jp
jge
roll
mov
cmp
pop
popf
cmc
jmp
mov
rcll
leave
fistl
test
xor
add
lahf
jmp
cmc
pop
or
pop
sub
push
mov
stc
test
pusha
xor
mov
cmp
shl
xchg
mov
mov
cltd
mov
or
sub
dec
loope
adc
mov
dec
test
mov
in
sbb
xchg
sub
jnp
jno,pn
std
aam
and
mov
pop
add
stos
cmp
pop
jle
push
mov
mov
dec
pop
mov
imul
repnz
and
lea
roll
xchg
and
cmp
sbb
mov
sbbl
mov
out
hlt
out
rorb
scas
mov
mov
jmp
mov
adc
xchg
lods
fwait
adc
xchg
ss
ja
dec
icebp
sub
push
mov
in
or
scas
push
add
inc
lea
adc
fisttpl
dec
pop
xor
lcall
lods
imul
jne
xlat
pop
and
das
neg
jp
aad
lcall
inc
push
testb
sbb
inc
jnp
and
adc
jl
daa
pushf
xchg
add
jne
inc
stc
and
in
sub
scas
sub
ljmp
jae
enter
mov
xor
mov
fcomps
and
lcall
mov
pop
adc
lock
mov
iret
pop
pusha
push
adc
sarb
out
cli
add
pop
lods
cli
arpl
stc
lods
mov
clc
inc
ja
jns
repz
sbb
daa
decb
outsb
subl
dec
sahf
jge,pt
and
jb
arpl
int
stos
mov
test
rcrl
pop
imul
movsl
clc
add
mov
sub
lea
jno
push
daa
cmp
jne
sub
push
lea
fldl
shl
fidivrs
loop
stc
and
jmp
das
jle
shlb
xchg
push
rorb
fnstsw
lret
mov
jne
or
lcall
jmp
pop
push
fidivrs
lods
xor
into
push
jmp
fsubrl
popa
xor
sbb
add
lahf
out
push
inc
repz
xchg
or
inc
push
pusha
mov
push
cmp
dec
pop
mov
push
mov
or
adc
sub
mov
fadds
frstor
sbbl
mov
lock
scas
or
stc
orl
cli
adc
jge
mov
or
or
mov
mov
inc
sub
jle
lods
mov
lret
fs
insl
shl
ljmp
jns
rcrb
mov
outsb
stos
dec
inc
pop
stos
jns
pushf
cltd
mov
cmp
jne
push
jb
cld
mov
loopne
mov
sub
jb
inc
imul
fdivs
jl
jecxz
xor
and
fwait
lret
into
sbb
mov
inc
dec
jne
out
mov
adc
lea
xor
push
ror
push
jb
inc
push
dec
shl
push
jne
xor
jno
pop
sbb
lcall
mov
cs
pop
sbb
adc
or
cli
and
jnp
mov
popl
sti
pop
xor
and
dec
xchg
pop
xchg
adc
nop
inc
push
add
cld
setb
xchg
add
lds
xor
lock
pop
cmc
nop
jno
pop
imul
dec
mov
xchg
icebp
fnsave
movsb
js
jno
fistpll
add
ljmp
xor
add
aam
or
jnp
sub
jl
push
test
out
in
loop
pop
mov
mov
or
adc
push
xchg
icebp
pop
add
xor
mov
mov
sub
cmp
sub
xor
repnz
bound
repz
sti
popf
mov
jo
cmp
lahf
test
xor
orb
lods
enter
pop
push
iret
sbb
xor
test
lcall
add
xchg
inc
out
das
je
push
sbb
int3
push
xlat
popl
div
push
jo
push
shll
xchg
pusha
mov
sub
into
icebp
aam
or
adc
xchg
fstpl
add
lods
xor
xchg
push
pop
fcoms
js
test
jno
mov
mov
cmp
popa
aad
push
call
or
movsl
arpl
stc
fisubrs
lds
addr16
fcomps
cmp
shld
xor
mov
mov
xchg
sti
sub
cmp
adc
popf
dec
jecxz
push
in
fcoml
adc
xchg
mov
lahf
add
outsl
addr16
xchg
inc
ret
or
mov
into
ficoms
push
js
scas
nop
inc
addr16
xchg
negl
mov
fidivs
stc
imul
inc
cmp
mov
push
add
cltd
ljmp
sahf
push
xrelease
jmp
loope
movsl
movsl
mov
xor
jecxz
mov
aad
jbe
adc
shrb
in
mov
out
xchg
jae
or
add
jmp
mov
and
hlt
sub
push
cmp
push
int
or
xchg
iret
mov
jns
xor
testb
jp
hlt
mov
dec
xor
mov
xorb
sarl
leave
push
fwait
pop
and
outsl
push
into
lret
xor
cmp
sbb
cltd
int
xchg
inc
mov
sbb
add
or
add
jge
test
and
mov
mov
xchg
aad
jno
inc
jb
mov
pop
ret
icebp
pop
fs
mov
jmp
or
cltd
loop
shr
inc
push
xor
mov
mov
mov
push
jmp
pop
out
fbstp
mov
out
test
sub
lgs
inc
cmpsb
ljmp
and
push
enter
add
cmp
or
xchg
and
out
mov
push
mov
and
xchg
cmp
cld
jle
cmp
andnps
mov
add
addr16
sbb
imul
dec
sbb
pop
loope
test
rcrb
addr16
cmp
lahf
xor
push
pusha
movsl
sub
cmp
jle
test
pop
movsl
rol
dec
loopne
xchg
mov
add
rolb
push
xlat
es
les
mov
add
rcll
and
das
cli
or
cmp
push
jl
or
jecxz
inc
push
lock
adc
and
adc
loopne
push
mov
mov
punpckhbw
ret
xor
push
insb
subl
mov
jns
ja
jp
in
xor
mov
jae
das
daa
jo
and
mov
test
dec
rcrl
jae
or
lahf
sbb
scas
jo
stc
sub
mov
push
scas
out
dec
push
inc
ds
insb
mov
pop
mov
mov
and
test
inc
leave
cmpsl
clc
jne
xchg
loopne
inc
jle
or
fcompl
imul
pop
lahf
stos
xchg
adc
int
mov
andb
test
xchg
and
es
std
inc
les
mov
cs
mov
test
xchg
pop
fildll
div
adc
cmpsl
out
fldl
cltd
in
xlat
lods
idiv
mov
negl
push
add
xchg
mov
xchg
push
sbb
jmp
mov
mov
dec
stos
jge
loopne
jp
sub
push
dec
daa
cmpsb
call
aas
or
xchg
xor
jbe
movntq
out
repnz
add
cmp
xchg
dec
clc
outsl
ljmp
hlt
pop
out
inc
mov
lret
daa
int
cwtl
mov
cmp
out
ret
adc
push
cwtl
sahf
jg
push
push
das
and
dec
mov
inc
sbb
push
push
mov
cmp
cld
hlt
mov
xlat
sbb
push
fcos
or
inc
push
push
pushf
jg
jbe
pop
rcl
cmc
mov
add
imul
mov
popf
hlt
bound
mov
sbb
or
add
test
test
mov
pop
int3
lret
adc
repnz
insl
leave
add
push
and
pop
clc
dec
xchg
aas
mov
sbb
insl
arpl
pushl
adc
push
sub
adc
inc
roll
fdivrl
loope
mov
iret
add
mov
fisubl
xchg
sbb
je
add
sbb
insb
mov
sbb
jl
sub
lret
popf
sbb
sub
scas
jae
jns
repnz
cltd
sahf
test
xor
loope
sub
or
sub
mov
fisubl
and
inc
or
andb
jnp
mov
lea
inc
movsb
mul
or
push
je
lret
icebp
inc
gs
imul
inc
and
mov
sub
cmp
push
repz
push
pushl
sbb
cmp
mov
add
in
mov
sbb
adc
bound
and
jg
jno
fnstsw
jns
stos
sub
dec
scas
cmp
inc
clc
xor
cmp
fcoms
movsb
adc
fisttpl
roll
inc
ljmp
and
dec
and
jp
xchg
mov
jne
dec
mov
mov
pushf
mov
out
pop
cmpsl
lea
filds
fdivs
sub
mov
cli
push
mov
filds
pop
jp
pop
lcall
stos
imul
loop
cmpsl
jns
dec
std
or
sub
mov
mov
and
stos
or
pop
inc
pop
xor
mov
mov
inc
and
or
sub
les
lds
xchg
push
and
sub
hlt
loope
xorl
outsb
sbb
pushf
mov
cmp
ds
fnstsw
pop
popf
cltd
xor
xchg
cli
gs
out
mov
add
rcr
jle
xchg
rcrb
ja
jo
lods
mov
or
ret
out
stc
push
fnstsw
popf
dec
adc
stc
jl
push
ret
test
outsl
lods
jg
mov
inc
sub
jle
loope
inc
lods
test
mov
mov
dec
cltd
popf
data16
pop
stos
sbb
mov
xchg
push
dec
cmp
or
ret
xchg
dec
dec
push
cltd
loopne
push
jae
gs
fisubrl
ja
jecxz
pop
adc
gs
ss
cmp
mov
clc
leave
int
add
push
cmovbe
je
fsub
cmpsb
cld
mov
pop
jle
push
xor
pop
add
pop
pop
into
loopne
jne
stc
fisttpl
cmp
sub
sbb
fadd
pop
lods
adc
out
outsb
rol
sti
sbb
icebp
inc
sub
mov
and
sub
jo
or
or
pop
ss
aaa
mov
pop
ret
movsb
int
int3
test
imull
push
test
mov
int3
push
mov
mov
ficompl
icebp
outsl
mov
xchg
mov
lret
dec
push
cmp
cmp
icebp
lea
jb
arpl
mov
stos
outsb
push
lret
sub
je
in
in
fwait
jle
idiv
mov
jb
mov
fmuls
cmp
scas
mov
mov
lret
pop
loopne
mov
add
aaa
add
ss
xchg
cwtl
push
orb
arpl
sbb
cmpsb
mov
out
jmp
mov
sub
aad
nop
mov
mov
or
scas
sbb
pusha
cs
and
xchg
ljmp
pushf
cmc
in
push
aas
scas
inc
cld
mov
pusha
cwtl
loop
or
adc
ss
stos
jp
sahf
xor
adc
and
dec
lock
out
cmp
push
mov
pushf
jmp
and
dec
inc
pop
nop
add
or
cmp
jle
das
aad
jmp
cmp
xor
cmp
sbb
sbb
test
ds
test
jns
inc
jne
inc
jb
out
sbb
stc
xor
push
mov
pop
cld
add
test
mov
mov
cld
cmp
cmp
or
test
pop
mov
test
mov
stos
ljmp
pop
jl
cs
sbb
or
fldlg2
lret
sar
mov
xor
aaa
lret
lds
in
inc
cmp
sahf
ret
ja,pn
cmp
jmp
aad
adc
jle
test
sub
inc
dec
mov
hlt
jb
xchg
das
xor
das
je
cmp
push
icebp
cmp
repz
mov
xor
push
scas
and
mov
pcmpeqw
dec
xor
call
mov
es
jne
pop
push
cld
cmpsl
daa
dec
ljmp
jne
ljmp
mov
arpl
xchg
or
inc
push
scas
inc
lods
add
stos
inc
xor
shl
and
or
imul
arpl
cwtl
popf
xor
xor
mov
orb
les
sahf
xor
mov
ds
cli
sbb
dec
jae
adc
push
andb
xchg
stos
mov
cmc
fidivs
and
cmp
addr16
es
je
adc
jge
daa
mov
loope
testl
pop
jg
pusha
rclb
mov
adc
rorl
lds
xor
xlat
mov
mov
xlat
gs
test
push
sahf
icebp
outsl
inc
push
mov
cmpsb
or
iret
negl
xor
adc
out
jbe
cltd
push
xchg
pop
sub
clc
fwait
in
mov
rcll
add
mov
cs
test
popf
inc
pop
cwtl
jge
xor
or
fistps
and
jnp
test
mov
mov
stos
sbb
into
push
rorl
cmpsl
mov
jl
inc
movsl
cmp
dec
jmp
sub
sub
adc
popf
adc
dec
add
xor
adc
loopne
or
add
std
fcomps
in
and
or
incb
jmp
fimuls
rcl
fs
fdivl
jno
shr
mov
dec
add
cmp
add
shll
or
das
jae
test
mov
jne
rorb
push
xchg
push
ret
pop
ret
jl
cmp
insb
fimuls
push
out
xorl
sub
pminub
adc
sub
pop
in
push
push
mov
cmpsl
dec
ret
mov
pushf
inc
sub
imul
mov
iret
sbb
daa
sub
insl
adc
jmp
sbb
faddl
out
mov
cli
adc
lds
mov
sub
lods
lods
mov
mov
mov
add
sbbb
dec
push
aas
popf
xor
inc
jl
xor
stc
rcr
aaa
nop
mov
sub
pop
fmull
sub
and
add
xchg
daa
mov
cmc
ss
test
scas
daa
fdivrl
dec
add
aad
ret
mov
add
jp
inc
pop
pop
es
and
jl
or
lock
xchg
and
and
insl
shlb
or
test
dec
xchg
cmp
fwait
inc
cmp
mov
loop
fidivrs
mov
sahf
aaa
cmpsl
cmpl
inc
arpl
shl
arpl
jno
pop
cmp
dec
inc
sbb
jns
adc
adc
lea
jb
inc
sbb
fsubs
push
mov
ss
jo
xchg
push
dec
or
orw
call
xor
xchg
xor
mov
aam
xor
imul
roll
mov
push
fidivrs
lods
jle
leave
adc
pop
imul
scas
es
push
or
adcb
mov
push
enter
fstpt
jecxz
sbb
je
fldl
lods
movsb
jae
inc
out
mov
sbb
cs
and
pop
lea
sub
adc
in
adc
inc
fmuls
add
xor
or
mov
das
mov
sarl
sti
into
rolb
jge
loopne
inc
pop
push
rcrb
sub
cs
mov
cmpsl
adc
inc
das
cmp
and
dec
aam
and
pop
jg
jl
jae
mov
repz
fidivl
outsl
loope
xor
aad
xor
enter
das
or
jbe
in
jnp
in
out
xchg
arpl
cwtl
jmp
out
dec
test
and
in
insl
outsl
push
push
dec
push
sbb
stc
pusha
dec
and
lock
mov
or
gs
fiaddl
push
jl
enter
inc
adc
ret
sub
aaa
repz
or
mov
xchg
push
dec
or
mov
adc
lods
icebp
pushf
call
jne
mov
js
inc
in
xchg
mov
pusha
push
or
push
lock
nop
dec
iret
jecxz
lock
sbb
insb
repz
je
jecxz
ja
sbb
int3
loope
xor
pop
cmc
xchg
ja
icebp
std
lds
cmp
push
jo
xchg
and
xchg
lods
pushf
cmpl
aad
movsb
fwait
cmpsl
repz
push
cmpsb
stos
movl
and
leave
add
shl
cmpsw
add
icebp
ja
pop
popf
inc
push
and
sti
mov
mov
or
xor
cwtl
jae
insb
fs
inc
jle
sbb
and
jmp
lahf
pop
mov
mov
mov
cmp
mov
lods
pop
cmpsl
pusha
add
call
inc
insb
mov
das
sub
lret
pop
sti
cmpsb
ror
inc
ds
mov
arpl
movl
inc
iret
pop
cmp
pop
jnp
adc
pop
frstor
xor
idivb
jle
lock
sti
xchg
sub
fadd
xchg
daa
mov
mov
js
push
lahf
les
pop
pop
popa
and
and
out
iret
cmpsl
repz
xor
addl
in
pop
add
xlat
add
fdivr
mov
shlb
mov
cmp
jno
dec
xchg
pop
pop
lock
xchg
sub
pop
mov
pop
in
jmp
lock
leave
dec
out
mov
loopne
enter
into
subb
popf
lret
add
cmc
jl
jle
fsubrl
pop
cwtl
addl
lea
mov
push
movsl
dec
inc
cmp
cmp
fcmovnb
call
or
popl
aaa
cmp
jb
bound
inc
bound
dec
pop
fsubl
int3
fdivrl
cld
or
cli
popa
ret
pop
adc
xor
sbb
mov
stos
sub
jp
dec
repz
cmp
and
adc
int
sub
xchg
mov
mov
repz
mov
gs
add
mov
and
pop
insb
cmp
decl
mov
sbb
and
pop
fistps
fistl
cmpsb
xor
push
lahf
and
push
loope
pop
adc
test
shll
subl
push
sbb
mov
sbb
xchg
test
mov
mov
sbbb
out
cwtl
js
sub
rclb
adc
and
mov
fisubrs
mov
movsl
push
inc
push
add
call
sbb
fnstcw
inc
addr16
das
dec
pusha
in
mov
pop
and
xchg
mov
lods
xlat
jbe
jnp
lods
ficomps
adc
lock
addr16
call
jmp
rorl
inc
mov
inc
aam
mov
mov
push
jecxz
xor
mov
jns
nop
roll
mov
and
and
pop
inc
push
adcb
test
cmp
mov
aas
sub
ret
jb
sub
push
xor
test
mov
cs
inc
test
mov
sbb
jb
push
mov
jbe
pop
imul
sbb
mov
bound
inc
push
lret
xchg
cs
jmp
movsl
xchg
add
and
rcrb
push
cli
filds
xor
xchg
push
jne
and
shrl
sbb
jl
xlat
test
js
out
hlt
jmp
pop
jb
sbb
add
jl
cmp
jbe
pop
or
jle
inc
push
adc
adc
or
sub
icebp
and
and
pushf
jl
sarb
rclb
cld
mov
jno
enter
jge
pop
data16
inc
das
mov
incb
and
pushf
ds
mov
decl
in
jns
popa
lret
xor
add
sub
imull
inc
mov
neg
or
pop
dec
cld
leave
cltd
jmp
sub
mov
and
icebp
test
xor
pusha
push
test
jge
xor
xlat
dec
add
fists
cmp
je
pop
mov
clc
push
push
cmp
cltd
add
xor
pop
addl
pop
loop
rcrl
addr16
xlat
add
and
icebp
xlat
les
pushw
gs
fstpt
pusha
sub
and
dec
adc
jae
je
mov
popf
add
out
or
jge
es
dec
arpl
lods
push
sub
pop
adc
sbb
repnz
sahf
mov
pusha
test
cltd
pop
mov
lods
iret
jge
in
lods
or
and
push
insl
mov
in
ja
into
cltd
sbb
fisubs
pop
dec
lret
xchg
ljmp
xor
arpl
or
push
jbe
gs
push
enterw
or
sti
in
sahf
stc
inc
jp
adc
pop
in
dec
sbb
add
cmpsb
imul
test
jno
cmp
or
inc
enter
bound
fiadds
in
push
xorw
popf
mov
sbb
repz
fidivrl
fldcw
ret
adc
push
adc
mov
dec
incb
and
pop
dec
mov
call
lahf
cmp
and
push
das
or
nop
in
pop
mov
pop
jmp
daa
jnp
push
mov
adc
push
xor
imul
push
or
push
xor
sahf
add
xor
negl
and
lds
subb
mov
gs
dec
pushf
push
ss
out
sti
mov
arpl
and
hlt
push
leave
jmp
and
adc
lds
push
adc
mov
push
ss
mov
push
xor
add
js
mov
mov
test
cmp
add
and
out
push
mov
test
jno
or
rorl
ret
jbe
int
mov
xor
jno
in
test
and
test
mov
insl
pop
mov
sbb
dec
jl
dec
test
pop
xor
and
xchg
and
mov
ja
push
mov
jns
fdiv
mov
sub
push
scas
out
out
push
or
xchg
loopne
xor
popf
push
not
addr16
mov
push
inc
dec
and
adc
jne
mov
addr16
popf
in
mov
shll
cli
aad
mov
xor
movsl
xchg
fwait
aad
sbb
push
outsb
lcall
mov
and
rcl
in
jae
xchg
into
pop
jnp
push
xchg
into
je
or
dec
lea
mov
cmp
iret
pop
enter
push
lds
jno
mov
xchg
pushf
jae
cs
cmpsl
in
aas
adcl
loop
xorl
cmp
mov
xor
in
data16
test
jecxz,pn
scas
loopne
xor
lods
mov
movsl
pushf
and
lods
add
jecxz
pop
sbb
insb
cld
sub
xor
sti
push
xchg
dec
std
insb
add
subl
jb
pop
fistpll
in
decb
jge
test
rorb
dec
push
ucomiss
jo
movsb
enter
jae
jl
jmp
xor
sbb
jmp
or
scas
stos
mov
ret
jecxz
pop
lock
cltd
xchg
sahf
frstor
enter
loopne
mov
xchg
jg
es
in
aam
jae
movsb
push
mov
aam
push
adc
and
jne
insl
ret
cld
push
cs
call
sub
and
ds
fstpl
dec
stos
jne
jno
mov
test
in
int3
push
and
mov
mov
pop
out
and
sbb
inc
push
fistpll
pushw
inc
in
mov
loop
pop
pop
lods
cs
adc
inc
jmp
std
jne
cld
push
loope
add
sub
and
lods
movsb
mov
fwait
aam
and
push
pop
cmc
jg
stos
sbb
xchg
jne
imul
imul
mov
ja
and
scas
mov
and
push
mov
mov
mov
scas
sbb
cltd
add
fiaddl
jecxz
pop
adc
imul
push
call
lret
push
jb
scas
and
push
aad
xchg
aas
push
xchg
fcoms
hlt
add
addr16
cs
jae
push
mov
loope
add
mov
jb
dec
inc
ret
loopne
popa
test
into
mov
in
loop
jg
push
dec
add
in
scas
roll
je
mov
cmp
and
push
mov
clc
push
or
cmp
test
frstor
dec
inc
xor
fimull
insb
push
iret
jg
cmpsb
ffree
mov
and
mov
mov
sbb
pop
pop
rol
aaa
pop
and
mov
or
pop
call
data16
fst
and
cmp
addl
out
pop
mov
mov
cmp
cli
xor
jnp
push
ljmp
jge
daa
test
mov
xor
mov
enter
call
or
or
pop
add
xchg
or
push
xor
pop
xchg
aad
jecxz
cwtl
imul
aad
add
cmp
cltd
popf
loop
adc
xchg
ret
adc
int3
pusha
testl
addr16
notb
xchg
sbb
xor
jbe
sbb
stc
or
push
pusha
inc
pushf
jbe
fmuls
jge
icebp
and
pop
xchg
sti
sbb
arpl
repnz
pop
in
mov
or
mov
ret
dec
push
call
add
in
xor
sub
cmp
cltd
mov
xchg
and
jb
divl
and
mov
cmpl
std
call
and
aas
cs
push
fdiv
sub
cwtl
xor
push
mov
jge
les
or
mov
adc
insl
leave
test
cmp
mov
jmp
push
add
push
into
dec
pop
mov
stc
out
dec
shlb
cs
or
push
xchg
lods
inc
hlt
add
ja
sti
and
call
js
imul
clc
out
sub
mov
test
test
int
js
sub
inc
in
mov
cmc
aad
or
mov
lret
imulb
in
aas
cmp
mov
test
inc
mov
or
sti
pop
cltd
mov
xor
aaa
fidivs
push
mov
fsts
pushf
mov
pop
mov
mov
loop
in
stc
imul
jg
rorl
xadd
xchg
and
fmuls
lcall
dec
xchg
lcall
or
call
pop
cmpsb
push
mov
jg
push
push
cltd
movsl
pop
fmull
xor
ret
jne
and
test
jl
inc
shlb
jmp
mov
pop
js
inc
sub
popa
cli
cmp
lods
jae
add
ds
mov
fisubrl
lahf
insl
jge
pop
mov
inc
std
sahf
mov
insb
push
out
push
push
testb
fistpll
insl
test
xchg
stos
push
in
xlat
fwait
add
out
mov
mov
dec
ret
mov
stc
adc
les
dec
inc
pop
mov
imul
daa
sbb
lret
mov
fsubs
mov
pop
adc
mov
pop
dec
fldenv
nop
lahf
cld
mov
sti
lods
sub
push
jno
mov
aas
add
mov
nop
pushf
ljmp
cld
pop
fs
inc
ja
push
js
daa
dec
cs
mov
sub
repz
and
cmp
sahf
xchg
popa
jmp
in
xor
inc
jbe
dec
movsl
mov
dec
les
or
adc
fildl
call
push
sub
fimuls
cmp
fisubs
and
rcl
testb
sub
xchg
fidivs
leave
sbb
xchg
iret
xor
sarl
mov
jae
repz
jge
enter
rsm
inc
dec
xchg
sbb
mov
stos
push
fstpl
stos
aam
sbb
push
sbbb
jge,pn
mov
ret
pop
mov
or
pop
movsb
fdivrp
push
mov
add
icebp
cli
push
jbe
mov
mov
jl
cmp
jge
shll
sbb
cmp
dec
cld
cld
xor
icebp
xor
xchg
cmp
sbb
push
mov
subl
iret
add
cmp
add
mov
pop
in
and
xchg
int
testb
xor
mov
sarb
pop
sub
xor
adc
adc
jmp
repz
and
dec
js
sub
pop
fwait
leave
ds
out
sub
inc
dec
dec
lock
xor
insb
int3
iret
xchg
outsb
pop
sub
sti
mov
push
adc
mov
push
jo
pop
jno
jmp
stc
xchg
int3
sub
add
imull
enter
ss
js
inc
sbb
lahf
es
imul
adc
mulb
insl
lods
int
push
pop
fxch
roll
mov
pop
mov
xor
dec
test
add
mov
inc
loopne
pusha
cmpsl
ficompl
popa
xor
cmp
mov
sbb
mov
or
scas
clc
cmp
shl
push
ja
inc
xor
mov
aaa
push
scas
les
movsb
das
shlb
xor
xchg
pop
outsb
shll
jg
in
in
cwtl
xchg
sub
ds
jg
dec
fs
sbb
cs
popa
adc
push
test
jp
dec
push
aad
adc
xchg
push
frstor
mov
mov
dec
mov
jb
add
cs
in
pop
xor
imul
stc
dec
lret
fldenv
shr
fadd
iret
cmp
lock
mov
inc
ficoml
sbb
mov
push
stc
fwait
sbb
inc
push
jo
bound
xchg
cmpsb
sub
fmuls
sub
pop
icebp
push
xchg
push
mov
adc
inc
inc
mov
xlat
das
mov
jge
arpl
das
int
inc
fldl
clc
sbb
stos
sbb
cmp
aaa
lea
les
or
nop
push
cs
mov
mov
xor
cli
out
push
xchg
dec
sbb
xchg
popf
xchg
cmpsb
stos
repz
test
mov
aam
lret
stos
mov
rorl
mov
fwait
jg
add
icebp
pop
mov
scas
bound
outsb
inc
push
pop
int3
xchg
mov
cltd
push
inc
outsb
and
push
jg
incb
pop
mov
insb
repnz
aas
cmp
sbb
ja
push
xor
movsb
repz
and
int
and
ret
fnsave
adc
jnp
bnd
sahf
add
jae
cmpsb
cmp
jno
ljmp
mov
pusha
aad
or
mov
or
aad
and
scas
pushf
xor
sti
mov
and
nop
cmp
sarb
dec
jl
fwait
adc
stos
jg
sub
insb
xchg
xor
sti
sbb
add
rorl
dec
jecxz
adc
add
pusha
add
jle
test
mov
into
inc
mov
mov
sbb
cmc
cmp
lcall
dec
movsb
adcl
jo
push
mov
push
cmc
add
pop
daa
and
and
inc
mov
jo
add
testb
aam
lods
fsubrs
push
sbb
inc
ja
jne
xorl
lods
inc
repz
sarb
and
mov
nop
js
test
cld
popa
sub
fld
int3
jae
mov
mov
mov
repz
xlat
out
sti
push
cmp
shr
loopne
pushf
daa
mov
mov
mulb
push
stos
out
cmc
arpl
xor
aad
mov
push
outsb
test
push
sub
jne
mov
push
pop
je
shlb
stos
mov
xchg
aas
aas
mov
jle
jge
int
enter
js
ret
cmp
ficomps
iret
push
out
leave
mov
jle
imul
push
dec
and
in
jmp
and
daa
arpl
xor
adc
int
adc
fdivl
add
jmp
and
incl
repnz
es
shlb
add
xchg
mov
stos
pop
adc
std
mov
idiv
inc
pop
pop
in
test
push
pop
add
int
xor
cmp
mov
sub
es
sub
push
add
pusha
mov
pushf
test
out
pusha
cmp
xchg
adc
jge
mov
jae
xor
fisttpll
dec
stos
sbb
cmpsl
pusha
xor
adc
sbb
cmp
stc
cli
loope
xchg
jns
and
popa
out
inc
adc
sbb
push
mov
cmp
shll
cld
insb
gs
inc
mov
jns
sbbl
call
adc
fwait
pop
mov
and
pop
sbb
fnstsw
ret
and
jnp
incl
movsl
push
add
xor
mov
fiadds
scas
leave
adc
pop
lret
pushf
outsb
test
or
mov
loop
sbb
int3
xchg
pop
jnp
aam
ja
xchg
adc
sub
add
movsl
mov
scas
xor
xor
sbb
int3
nop
cs
and
cli
jne
inc
lods
cltd
xor
adc
cwtl
cli
pop
hlt
fst
adc
mov
das
movsb
or
push
sbb
push
xor
hlt
movsl
test
xor
xor
pushf
in
jmp
mov
in
pusha
mov
add
xor
sarl
fwait
cmp
pop
mov
fldcw
add
aad
pop
fnstenv
cld
mov
push
fs
xchg
cli
jecxz
dec
mov
test
mov
mov
cli
xor
orb
mov
mov
jmp
adc
cwtl
cmpsb
sub
sti
clc
dec
ret
fidivrl
test
pop
scas
bound
sbb
push
les
cmp
jns
subb
add
popa
repz
jg
mov
out
mov
or
push
dec
jl
xor
ret
xchg
xchg
fistpll
ja
add
mov
mov
sub
inc
pushf
and
xchg
jp
add
adc
imul
pop
scas
je
cli
insb
jp
std
adc
imul
in
mov
lods
pop
data16
cli
sub
movsl
popa
push
ds
dec
std
or
lahf
mov
dec
aam
outsb
and
lock
test
and
adc
stc
dec
xchg
dec
lods
lahf
fistpl
add
test
cld
adc
mov
mov
int3
jb
push
mov
sbb
out
xchg
fstpl
jle
inc
inc
loopne
fiadds
mov
scas
daa
sti
js
push
sub
cltd
repnz
inc
jae
push
jo
jle
in
mov
cmp
dec
cmpsl
mov
push
jns
mov
rcll
sbb
push
fwait
out
pop
dec
das
inc
xor
add
mull
or
cmp
xor
xor
dec
cmp
pusha
jp
fidivs
dec
in
clc
jge
sbb
mov
rol
negl
dec
bound
out
sub
test
in
mov
clc
jb
inc
adc
push
dec
sub
mov
inc
push
xor
stos
stos
movlps
push
pop
stc
popa
sbb
fcoml
in
mov
daa
addr16
cmpsb
cmc
or
push
jo
or
cmp
shll
jg
rcll
shll
push
xchg
call
cmp
lods
iret
ds
into
test
aam
sub
or
aad
xor
mov
sub
mov
cmp
jmp
lret
jno
lea
cmpsb
ljmp
loopne
je
or
imul
stos
test
mov
xor
aaa
sti
pushf
pusha
mov
push
sbb
repnz
imul
stos
popf
sbb
dec
lods
push
mov
dec
add
xor
adc
mov
mov
fnstsw
call
cld
jg
xor
inc
ljmp
sbb
mov
cmpsb
dec
mov
inc
add
mov
ss
adc
imul
xrelease
lds
mov
scas
xchg
jno
clc
mov
outsl
sbb
or
cmpsl
loopne
sti
fisubl
out
mov
xchg
mov
xchg
sbb
pop
fcoms
mov
loop
fs
fbld
xor
push
fcmovu
push
mov
sub
in
or
adcl
mov
inc
dec
aaa
xlat
or
pop
mov
adc
dec
imul
loopne
loopne
xor
pop
or
lret
jbe
pusha
in
jno
and
pop
adc
inc
inc
lds
sbb
push
xchg
fwait
dec
mov
push
xchg
mov
mov
or
pushl
icebp
mov
push
jns
clc
jbe
mov
cld
cld
xor
sbb
adc
nop
lods
out
sub
jo
out
aas
jg
dec
jecxz
subl
xor
js
pop
sbb
ja
add
rclb
ds
fistpl
mov
test
dec
sarb
iret
ds
popf
jecxz
mov
lcall
xchg
jle
and
icebp
cmp
mov
mov
adc
mov
inc
ror
adc
ret
mov
ss
add
out
push
stc
pop
shrl
inc
jg
nop
popf
add
icebp
or
xchg
mov
mov
xor
xlat
mov
or
fidivrs
xlat
add
dec
enter
xchg
jge
sbb
fnstenv
xchg
jb
push
jle
cmp
jo
or
jmp
push
jo
cmc
cwtl
xchg
std
xor
pop
sbb
sub
out
pop
dec
mov
loop
push
mov
xor
dec
hlt
sbb
pop
jo
jno
jae
inc
and
push
loope
in
fcmovbe
cld
push
adc
adc
fnstcw
lcall
std
hlt
stos
xchg
push
out
push
jbe
xor
sub
aaa
repnz
imul
jne
adc
lret
or
pop
and
pop
mov
lea
adc
pop
bound
ficoml
sub
cmp
aas
test
loope
xchg
stos
mov
add
int3
cmpl
cmp
cltd
mov
in
fcmove
mov
lret
insl
push
adc
in
ljmp
lret
das
ds
gs
pop
fcomp
stos
pop
jnp
addb
sbb
inc
mov
ja
clc
mov
loope
push
mov
pusha
in
cmp
jne
mov
fwait
out
ds
ss
ss
add
es
addb
iret
idivb
xchg
pusha
movsl
pop
data16
mov
sarb
in
cmp
and
outsb
fs
inc
pop
fisttps
sar
sub
add
push
or
dec
sub
fnstenv
pop
and
adc
adc
out
daa
movl
inc
aas
cmp
jg
push
push
push
roll
cmp
mov
jnp
aas
jmp
jge
aas
jecxz
icebp
mov
cmp
clc
sbb
test
scas
dec
stos
daa
clc
aas
out
jecxz
les
stos
and
fcoms
je
xor
mov
ret
jnp
fidivl
and
data16
scas
cmpsl
int3
xchg
jbe
or
aaa
decb
aad
jne
mov
faddl
xchg
stc
test
sbb
jae
cli
xchg
pop
push
shrb
imul
test
shrl
inc
sbb
ds
pop
xor
xchg
insb
std
rolb
lds
andb
ret
repz
mov
mull
sub
imul
insl
cmp
insl
mov
pop
cmp
inc
test
fsts
clc
test
sub
fidivs
and
cmpsl
cld
or
pushf
xchg
cltd
call
outsb
outsb
dec
push
aaa
ja
mov
imul
inc
and
sub
cld
stos
sub
xchg
xchg
push
gs
xchg
xchg
test
insb
shll
cmp
mov
data16
sub
ja
ljmp
ss
fwait
push
pop
mov
lcall
mov
icebp
imul
sti
out
sub
dec
xchg
cmp
jb
xlat
in
push
cmp
cs
dec
stc
pop
icebp
test
xor
inc
cmp
lea
or
jmp
mov
test
sub
repz
add
fdivrs
ficomps
ljmp
loop
scas
ret
addr16
sub
loope
fs
xor
pop
int
ja
es
pmuludq
inc
and
ja
push
adc
mov
scas
fmul
mov
shlb
pop
push
in
aad
sbb
notl
popa
or
mov
mov
pop
pop
pop
test
popa
dec
push
dec
lea
pop
mov
inc
sarb
rclb
outsb
mov
inc
or
push
add
push
into
inc
fisubrl
inc
int3
inc
insl
pop
cmp
movsl
push
leave
fimull
aam
clc
add
imul
or
sti
jecxz
jle
xchg
cmp
jno
mov
lds
sahf
xchg
inc
mov
stc
out
push
scas
cmp
popf
cmp
adcb
xchg
lcall
add
in
dec
jg
pop
pop
inc
push
xchg
or
mov
mov
push
repnz
loope
and
fdiv
cmpsb
js
adc
add
test
mov
cmp
xor
outsl
dec
lods
dec
and
mov
shrb
aam
test
test
xor
lcall
pop
mov
xchg
mov
sub
fs
out
or
shlb
test
or
push
das
test
sbb
ss
sahf
push
daa
cmpsb
or
sbb
mov
jo
enter
mov
mov
fs
mov
ja
or
shlb
sahf
outsl
mov
in
xor
in
jp
sahf
pop
in
dec
movsl
mov
jle
pop
mov
jo
ret
in
sub
mov
dec
dec
mov
pop
pop
xchg
xor
xchg
stc
sahf
rcrb
cmp
add
xchg
dec
dec
pop
sti
or
insl
das
jmp
popa
mov
idivb
rcr
mov
ss
add
lret
xorb
scas
push
test
xchg
lods
sahf
cmp
movsl
push
std
mov
int
sub
out
decb
adc
add
jmp
add
inc
shl
fnstsw
jge
lock
bound
out
push
xor
sub
adc
bound
push
sar
inc
gs
inc
fs
and
cmp
das
outsl
test
cmp
sub
inc
mov
sbb
mov
loopne
cmpb
repz
xor
push
pop
inc
in
loope
cmp
call
ss
xor
adc
xchg
add
adc
jecxz
or
jge
arpl
xchg
out
stos
mov
push
fimuls
dec
add
mov
cwtl
and
pop
adc
sub
push
xchg
and
std
mov
dec
out
fldl
mov
cmp
imul
adc
cmp
mov
sbb
pop
sbb
push
repnz
mov
das
test
jbe
and
pusha
pop
stc
add
popa
inc
xchg
xchg
push
mov
scas
shrl
push
xchg
xor
inc
lcall
cmpsb
dec
test
out
test
addr16
les
dec
mov
out
jmp
jl
pop
hlt
xchg
sbb
cmpsl
or
mov
dec
xchg
sub
mov
sub
clc
adcl
sub
xor
lods
iret
lcall
xchg
fidivrl
jno
cli
arpl
pop
pop
or
cmp
mov
or
xchg
das
lock
insb
adc
mov
mov
leave
mov
xchg
ret
jge
dec
popf
mov
and
xchg
and
or
testb
adc
sbb
inc
icebp
hlt
sbb
out
movsb
sub
pop
cmp
xor
inc
pop
int
push
jbe
or
in
movsb
fstl
sbb
mov
popf
adc
gs
loope
cmp
outsl
das
movsb
enter
ffree
int
insb
dec
adc
test
mov
mov
add
push
movsl
pop
call
xchg
or
add
fsubp
mov
fcoml
jae
mov
push
xlat
js
shrl
dec
sbb
pop
xchg
xchg
dec
add
mov
test
mov
out
jp
pop
hlt
mov
scas
lock
sbb
adc
clc
adc
out
cwtl
pop
loopne
cmp
fwait
xor
or
cmp
int3
mov
bound
ljmp
adcb
pop
mull
push
mov
jnp
pop
sbb
mov
xchg
hlt
or
pushf
ss
adc
std
mov
fucom
nop
insl
jo
sub
mov
clc
inc
add
roll
les
arpl
xchg
iret
iret
pop
idivb
push
aaa
daa
lret
bound
jbe
daa
mov
push
mov
push
int3
cwtl
xchg
ficoms
mov
xchg
and
frstor
mov
add
sbb
dec
mov
mov
fsubrs
xlat
pop
xchg
mov
imul
jne
pusha
stos
mov
pop
cmc
insb
pop
cmc
fs
je
roll
inc
ja
aaa
jb
dec
mov
xchg
add
out
int3
dec
mov
dec
bnd
adc
icebp
imul
sub
imul
lock
lret
sbb
inc
mov
or
out
mov
out
jbe
stos
dec
aad
push
pushf
xor
push
xor
imul
rorl
dec
xchg
cmpsb
lock
inc
test
cmp
adc
rcr
ss
jne
xchg
add
ja
testl
insb
test
mov
in
cld
push
xchg
jnp
clc
and
into
in
xchg
das
jo
dec
insb
push
adc
sti
fstpt
scas
pop
jle
xor
jg
or
and
cmp
xor
jl
dec
jg
push
mov
andl
addl
jns
adc
mov
aam
add
icebp
cmp
adc
fs
testl
jl
movsb
xor
ss
mov
adc
mov
and
push
cli
pop
cmp
int
stos
outsl
mov
jge
in
lds
repnz
ret
flds
xor
push
inc
xchg
mov
das
pop
cmp
xor
mov
loope
and
mov
pushf
xchg
rorl
add
loop
jnp
outsb
mov
rcrb
mov
lea
dec
mov
imul
mov
add
add
popf
mov
cmp
ss
cmpb
aas
sbbl
cmp
daa
cmp
sbb
pusha
int
cmpsb
clc
jnp
aad
and
xchg
pop
push
mov
cli
lods
cmp
cmp
jecxz
xlat
cltd
add
sbb
push
dec
icebp
scas
mov
fs
loope
mov
push
in
scas
loope
jmp
std
sarb
sbb
andl
mov
sbbb
mov
loop
push
push
cmpsb
mov
sbb
sbb
ret
xchg
inc
outsl
dec
inc
in
mov
fwait
jecxz
pop
mov
or
mov
pop
call
mov
xor
lret
cmp
int
lahf
add
call
test
inc
sub
adc
mov
mov
inc
cltd
adc
pop
aam
ja
in
loopne
pop
ret
mov
dec
jge
mov
add
xchg
or
pop
pushf
jmp
mov
mov
sbb
insb
stos
ret
xor
out
lret
add
es
or
fbstp
and
mov
outsb
mov
pop
mov
jg
aas
and
jne
aas
sub
xor
cmp
test
mov
prefetch
jns
sbbb
mov
dec
sti
add
push
add
scas
dec
test
sub
psubsb
inc
arpl
push
cli
or
or
adc
sbb
stos
sbb
mov
xor
cmovg
popf
sbb
lea
je
xor
aas
flds
pop
inc
sub
sbb
push
inc
xor
es
sbb
sbb
adc
mov
in
sub
cmp
mov
mov
or
lret
fisubs
and
out
roll
push
jecxz
mov
outsl
ret
cmovne
cmp
jnp
lret
jnp
jae
out
dec
rorl
test
imul
mov
std
mov
pop
xchg
cs
xorb
adc
pushf
pop
xorl
push
xlat
into
add
lret
enter
outsl
mov
xlat
movsl
int
imul
cmp
pop
pop
imul
push
adc
gs
lods
xor
cltd
jg
jne
sahf
jmp
mov
or
xchg
adc
or
push
cmp
ljmp
jns
ja
insb
mov
mov
dec
inc
jl
mov
and
mov
push
das
repz
out
jmp
and
movsb
dec
jle
scas
sbb
mov
sub
ss
fs
mov
aas
std
notl
ljmp
ja,pt
pop
and
mov
or
insb
ds
bound
iret
adc
inc
pop
daa
lret
mov
inc
jb
or
xor
push
aaa
or
dec
and
cli
outsl
adc
nop
ret
sti
add
int
cmpsl
lahf
loope
ds
scas
cmp
dec
push
xor
adc
stos
pop
loop
pop
dec
dec
mov
mov
sub
cmp
scas
fiaddl
neg
pop
insl
xchg
inc
imul
addb
js
push
test
test
mov
add
fimuls
adc
iret
and
sbb
dec
sub
arpl
fs
inc
cs
dec
pop
test
repnz
ror
xchg
aas
arpl
add
push
mov
push
jnp
les
fs
dec
push
in
adc
enter
imul
es
fsts
sbb
xchg
sub
push
jns
aad
fidivrs
jo
dec
or
inc
std
pop
mov
xor
mov
and
push
dec
adc
or
or
xor
push
and
sub
rcr
test
out
mov
dec
jp
ret
mov
lret
aas
hlt
out
jo
je
push
xchg
cli
bound
mov
and
mov
mov
fwait
xchg
repnz
sub
or
aas
or
negl
insl
mov
adc
push
es
dec
mov
fisttps
mov
mov
test
das
lock
test
cli
pop
rep
test
fisttpl
xor
adc
dec
int3
sbb
inc
lret
into
cli
sub
lock
or
ret
call
ss
mov
or
sub
shlb
repnz
cld
outsl
jge
mov
out
popf
inc
mov
call
mov
fstp
sub
xchg
mov
sbb
call
ljmp
rcrb
xlat
inc
loope
or
mov
das
lahf
fwait
pop
shll
mov
jle
mov
jae
aad
out
scas
inc
or
jge
inc
pop
inc
incl
pusha
repnz
mov
fbstp
xchg
mov
or
cmp
aam
pop
stos
das
dec
ficomps
dec
inc
mov
scas
inc
popf
xor
insb
mov
in
mov
clc
sahf
bswap
or
push
lods
pop
push
iret
mov
daa
stos
fdivrl
jmp
sbb
xchg
mov
jbe
loope
jnp
pop
pop
adc
and
outsl
out
mov
out
fs
sbb
pop
push
dec
dec
cli
add
dec
stos
lret
jb
loop
sahf
push
mov
insl
stc
dec
dec
xchg
mov
movsb
into
pusha
je
es
xchg
cmp
clc
mov
or
pusha
aas
xor
ja
aam
jnp
jns
es
test
xchg
mov
xor
mov
cmp
lods
adc
stc
repnz
adc
mov
dec
or
mov
repz
sbb
xor
insb
lods
gs
lret
gs
cmpsb
sbb
and
orb
push
movsb
sbb
shll
add
rcrl
popa
sbbl
adc
mov
es
inc
adc
pop
xchg
mov
stc
xor
outsb
out
lods
xchg
sbb
xchg
jns
outsb
dec
rolb
jmp
popf
adc
or
hlt
xchg
cmpsl
ja
movsl
mov
bswap
and
test
call
xchg
push
insl
dec
aad
mov
dec
sbb
mov
data16
loope
jnp
mull
enter
inc
nop
xchg
cs
pop
cmc
cmp
push
dec
xor
or
sbb
mov
adc
jno
mov
rorb
xchg
dec
xchg
fists
test
sarl
jae
insb
adc
mov
cmp
popf
sbb
or
clc
loopne
scas
mov
mov
adc
jecxz
sub
fwait
add
sbb
es
or
sti
sbb
popa
rorb
fsubl
sub
int
cmp
ret
leave
movsl
jmp
push
dec
jbe
mov
ds
popa
jbe
leave
push
mov
mov
and
add
xor
pop
lock
fs
mov
aad
jmp
ja
and
pop
je
repnz
jle
int3
aad
ja
mov
das
cmp
xor
js
roll
out
cwtl
and
push
sub
test
inc
xchg
test
xor
adcl
pop
xlat
mov
sub
mov
inc
mov
insl
dec
sbb
outsb
add
inc
mov
inc
fldln2
cmp
push
sub
mov
pop
jmp
pop
dec
push
out
ret
pop
shlb
xchg
adc
xchg
xlat
addr16
hlt
xchg
dec
ss
inc
adc
test
xor
sbb
mov
push
testl
xchg
dec
inc
outsb
aad
dec
lock
and
outsl
sbb
cmp
vmovd
jnp
stc
pop
fistpll
insl
movsb
out
cmpsl
rcrl
or
sbb
in
scas
fnstcw
decl
cmp
in
mov
ljmp
inc
add
jmp
push
sbb
imul
sarb
mov
jg
push
dec
pop
cmc
mov
adcb
or
add
sub
dec
outsb
push
jne
xchg
in
repnz
inc
mov
ret
pop
in
fdivp
fisubl
and
xchg
stos
cmpsb
aaa
xor
test
out
sbb
and
pmulhuw
xor
mov
cmpsl
sbb
addr16
or
ret
push
rorb
add
fwait
cmpl
or
cmp
add
jae
mov
xlat
dec
sahf
data16
and
xor
push
test
imul
push
jmp
subb
cmp
push
sub
lret
shll
filds
or
jno
stos
lret
push
stc
xor
call
push
mov
jns
add
movsb
imul
jb
inc
cltd
insl
jno
lea
es
pop
mov
iret
adc
rcrl
or
inc
sub
sub
fildll
mov
mov
repnz
inc
dec
jbe
jb
out
xor
and
enter
jb
popl
aam
mov
xor
inc
movsl
add
out
add
lret
jg
lods
sub
jne
xor
push
imul
nop
cmp
xchg
mov
jmp
mov
jne
aaa
repz
das
jle
out
stos
sbb
jae
cmp
adc
fcoms
icebp
xlat
xor
jp
aaa
inc
mov
mov
jl
test
xchg
clc
push
loope
lret
add
adc
jg
aaa
mov
pop
dec
cmp
outsl
jl
test
js
test
cmpsl
and
or
movl
mov
imul
inc
pop
popa
jns
shrb
push
xchg
stos
sub
push
jl
add
jb
mov
add
adc
mov
pause
jle
mov
fcomps
jnp
add
cmp
sub
dec
and
pusha
xor
int3
lret
addr16
mov
cmp
dec
jnp
pop
push
pop
cwtl
cmp
daa
int
push
push
sub
xor
dec
mov
xchg
sahf
leave
ret
cmp
cmp
bound
cltd
xchg
dec
mov
ljmp
pop
je
pop
outsl
jno
outsb
jge
das
mov
insb
movsb
dec
xchg
rorl
test
xchg
fistps
ret
mov
sbb
fdivl
scas
inc
outsl
fsubrs
mov
loope
sahf
gs
arpl
dec
adcl
and
movsb
cmpsb
adc
les
negb
scas
lea
incb
cmp
mov
xchg
mov
mov
mov
push
add
adc
xchg
mov
clc
divl
xor
push
xor
repnz
or
int
popa
clc
adc
xor
int3
dec
iret
dec
insb
xchg
mov
jae
in
dec
and
jl
or
jb
into
xchg
jae
jae
es
cltd
mov
push
test
and
ja
push
ret
arpl
jg
mov
xor
mov
jp
push
inc
xor
test
out
sar
leave
andl
js
out
inc
dec
mov
xor
mov
mov
ss
and
movsl
mov
jbe
push
fsts
daa
jmp
test
xor
xor
adc
jb
dec
arpl
pushf
push
gs
test
pop
mov
mov
lds
movsb
mov
jbe
gs
lret
push
jno
hlt
dec
push
or
jmp
test
sub
loopne
or
mov
ficompl
and
xchg
test
xor
pushf
stc
cs
mov
icebp
rorl
jb
loope
iret
cmp
sub
lret
imul
mov
inc
jne
mov
orb
or
loop
jb
cmp
mov
sub
mov
negb
add
mov
cmp
jo
jg
pop
jae
fsubl
testl
adc
int3
jmp
mov
out
cmp
jmp
cli
and
adc
hlt
and
stc
add
jno
sbb
dec
add
mov
push
mov
sub
or
je
sbb
and
sbb
adc
aam
mov
fwait
adc
add
push
and
or
cmp
cmp
xor
es
outsl
mov
out
dec
stc
mov
add
mov
insb
into
aam
enter
shl
es
adc
test
cli
mov
fistl
pop
ljmp
inc
sub
ficompl
mov
mov
ret
daa
xchg
mov
lret
xor
add
dec
adc
bound
add
ret
xchg
add
fimuls
cwtl
imul
sub
dec
ljmp
stos
adc
loope
jp
ret
sub
lock
testl
mov
sub
or
bound
sti
lock
jp
mov
cmp
out
dec
adc
out
test
fcomps
insb
and
dec
inc
adc
outsb
mov
fidivrl
iret
or
jae
fwait
test
push
or
imul
cld
xor
jne
pop
and
sbbl
test
icebp
inc
cwtl
rorl
fwait
push
in
and
adc
lods
inc
cmp
mov
xor
jae
jno
es
test
sete
xchg
mov
in
push
aaa
mov
or
repz
fwait
idivb
and
sbb
pop
les
cmpsl
xchg
or
sbb
scas
xchg
jno
sub
cmc
aad
cmp
jbe
fistps
cli
and
fsubrl
lds
sub
shl
push
cmp
xor
push
xor
in
daa
pop
sub
pop
push
sub
es
sti
es
mov
lret
shrb
insl
and
cmp
cltd
gs
dec
jp
and
push
pusha
adc
aam
pop
cltd
add
mov
aad
mov
adc
fisttpl
imul
outsb
sti
or
push
sarl
add
ss
stos
push
repnz
jg
test
rcl
jl
imul
mov
mov
ds
pop
ja
scas
mov
push
jb,pn
push
test
inc
loopne
cmpsl
adc
xor
mov
push
stc
mov
comiss
pop
xor
inc
ret
cltd
mov
arpl
scas
pop
stos
mov
jo
push
or
stos
je
pushf
push
mov
lahf
xor
sub
loope
jne
inc
sub
ja
inc
icebp
mov
xor
cmp
cmp
mov
cmpsb
adcl
sbb
aam
mov
lock
and
dec
pop
fdivp
aam
insb
lods
push
xor
push
loope
in
pop
cli
mov
sbb
orb
or
push
data16
xor
lock
fstpt
lods
mov
or
mov
jae
jo
or
lcall
add
push
mov
lock
das
loope
add
mov
sub
adc
xchg
cwtl
data16
xchg
mov
je
inc
xchg
pop
xor
in
mov
xchg
adc
mov
push
jmp
orl
jmp
fmuls
test
adc
mov
rcll
dec
cmp
pop
adc
fiaddl
cmp
jno
xchg
add
mov
out
adc
or
xor
out
sub
clc
mov
outsb
jne
mov
shrb
iret
mov
mov
jae
pop
sbb
push
hlt
add
outsb
mov
aam
dec
mov
pop
in
sbb
xchg
fnstcw
and
jno
mov
sbb
test
pop
in
adcl
mov
pop
jp
push
mov
mov
repnz
mov
js
or
mov
ret
fiadds
sub
mov
into
jno
into
xchg
inc
addl
es
clc
and
sbb
in
pop
std
cltd
mov
jno
cwtl
jg
push
aaa
test
cltd
popf
cmpsb
iret
xchg
mov
mov
cli
sbb
adc
adc
in
loopne
nop
add
repnz
dec
adc
jmp
push
js
mov
mov
pop
jae
sbb
adc
repnz
cmp
test
inc
pushf
inc
js
into
rolb
cmpsl
js
push
xor
dec
or
dec
in
imul
ss
dec
int3
int
push
aam
add
pop
and
pop
or
lock
push
addb
scas
es
addl
test
in
stc
mov
mov
lods
mov
pop
or
fwait
inc
icebp
ja
and
fwait
inc
fdivr
xchg
lret
cltd
jg
mov
jo
mov
sub
enter
dec
mov
xor
dec
pop
xor
push
fsts
pop
aaa
imul
lods
mov
xchg
xor
daa
sub
sbb
subb
adc
imul
popf
and
sub
mov
cmc
fwait
gs
and
in
test
mov
ror
push
jae
test
repz
in
cmpsl
push
pop
test
mov
xchg
les
lds
sbb
xchg
popf
fld
jae
inc
xor
sub
push
in
ret
cwtl
in
daa
push
inc
scas
int3
iret
loopne
push
imul
fxch
add
in
xchg
push
out
je
push
inc
push
pop
dec
insb
sbb
jns
adc
sbb
ror
sahf
sub
ja
into
aam
loopne
fwait
gs
int
call
imul
popf
jno
inc
sbb
cs
aam
std
and
les
cmp
lret
aas
outsl
sub
lock
fsub
or
andl
mov
pop
mov
cmp
cltd
icebp
and
push
fwait
jl
aas
out
xor
inc
pop
ret
stos
clc
jae
inc
sahf
cltd
mov
pop
sti
push
rcrl
push
xor
out
or
add
push
fdivs
mov
jno
jle
in
jg
cs
iret
adc
add
mov
sbb
jb
enter
rcr
lods
cld
mov
and
jp
dec
iret
mov
and
xor
pop
inc
cmp
lcall
xchg
pop
pop
jecxz
out
paddd
shl
pop
rorb
jle
repnz
les
jnp
push
and
loopne
test
into
rsm
fdivrs
movsl
sub
and
mov
mov
dec
out
fucomp
imul
adc
ds
cmpsb
shrb
jg
adc
mov
adc
adc
loop
rclb
xchg
ss
je
add
int3
adc
fsts
adc
adcb
fldcw
mov
push
mov
aaa
aad
aaa
or
adc
pop
push
lret
or
fwait
lods
lea
dec
adcb
outsb
pop
mov
mov
or
repz
mov
mulb
and
mov
ret
jnp
adc
cmc
jge
test
and
shll
cld
fwait
loopne
add
add
inc
aad
jb
or
mov
add
out
mov
mov
adc
call
jg
adc
stos
ljmp
mov
push
inc
push
adc
adc
in
or
in
sti
sbb
aas
cmc
hlt
js
sub
adc
sub
loop
mov
sub
ret
push
push
loope
cmp
orb
rcrl
insb
inc
sub
shl
dec
fcmovbe
ret
jge
xchg
push
add
test
push
mov
sbb
pop
or
mov
and
xchg
pop
xor
clc
add
test
jmp
test
mov
mov
xchg
imul
mov
cmc
jne
dec
xor
inc
sub
mov
dec
adc
adc
lcall
sti
addr16
sbb
mov
mov
xchg
and
insl
and
pushf
lea
repnz
jo
fildl
mov
mov
pcmpgtd
dec
or
add
es
test
xchg
stos
lret
mov
stos
xor
or
cli
les
ss
or
sub
call
dec
cmpsb
outsb
sti
sti
pushf
sbb
pminsw
add
jmp
scas
adc
in
ficoms
repnz
and
es
test
mov
imul
push
out
imul
inc
movsb
bound
lret
xchg
sti
push
mov
shrl
xor
je
icebp
aas
in
loop
mov
mov
pop
mov
iret
xchg
mov
movsl
mov
push
sbb
inc
out
sbb
push
mov
pop
inc
js
out
lahf
adcl
lret
sub
out
out
hlt
mov
sbb
inc
push
or
pop
loope
mov
sub
and
jle
xor
jno
push
popf
dec
leave
movsb
outsl
jno
adc
push
or
jmp
jecxz
in
shlb
aas
fsubrs
mov
xchg
inc
jo
outsl
ss
inc
in
mov
and
ja
fimuls
or
push
add
push
mov
movsl
lods
fists
dec
rcll
mov
inc
unpcklps
cmpsb
imul
add
mov
pop
sbb
cmp
insb
ds
and
cmp
les
jo
lcall
or
inc
loope
inc
add
cmp
mov
jmp
push
xor
cmc
aaa
cmpsb
pop
xchg
mov
sahf
stc
shll
adc
dec
loop
scas
adc
and
pop
push
stos
inc
mov
sbb
and
aad
fdivs
add
add
adc
or
popf
cmp
xchg
mov
add
subps
movl
cmp
adc
sbb
cmpsb
imul
dec
pushl
sub
push
mov
sub
insl
or
aad
push
test
dec
loop
bnd
arpl
aas
iret
popf
inc
pop
mov
dec
mov
push
into
lds
dec
pop
adc
jne
lret
dec
sub
cmpsb
fdivr
jmp
mov
scas
sbbb
jl
ljmp
ficomps
sbb
int
xchg
push
or
xor
xchg
cmp
outsb
movsb
dec
mov
daa
lds
push
sub
sbb
shrl
lds
pop
pop
jnp
roll
jne
sti
fsubrl
js
lods
add
and
mov
hlt
shl
fs
stc
aaa
push
lcall
and
mov
and
xor
xchg
testb
repnz
adc
aas
xor
or
aaa
pop
xchg
push
mov
mov
daa
mov
mov
add
jae
gs
fdivrs
jle
mov
dec
cmc
cmp
fnstsw
dec
pop
jb
and
rep
sub
repnz
add
testb
pop
mov
inc
xchg
push
scas
mov
rcrb
stos
pop
sbb
mov
jne
push
add
dec
lds
inc
and
inc
lea
xchg
stos
sbb
jle
bound
iret
add
out
lea
lods
div
cmp
fwait
pop
jbe
and
pop
and
xor
push
pop
popa
or
cld
inc
or
cltd
out
js
lret
push
mov
jg
mov
mov
in
dec
andl
pushf
jnp
nop
sbb
popa
mov
lods
push
or
lock
mov
dec
xchg
inc
popf
pop
inc
jle
xorl
jmp
mov
scas
xchg
push
andb
inc
fidivrs
cmp
cmc
pop
out
jno
xchg
sbb
loopne
jp
cmpsl
dec
icebp
int
outsl
in
fwait
movsb
lods
roll
call
int
sbb
insl
mov
rcrl
loopne
sarw
das
or
or
lcall
stc
test
add
cmp
stc
mov
pop
aam
inc
adc
sbb
call
dec
jo
jns
repnz
adc
cs
xchg
fdiv
mov
inc
imul
lcall
aam
enter
adc
test
inc
hlt
pop
sub
or
scas
and
push
xchg
lods
loop
inc
inc
pop
daa
scas
add
icebp
mov
ret
shlb
cli
add
loopne
out
faddl
or
addr16
enter
push
sub
mov
xchg
cmp
mov
push
inc
gs
mov
dec
jae
inc
add
shrl
insb
fwait
stos
cmc
cmc
pop
repnz
push
cld
rcrb
scas
popa
jnp
pop
dec
xor
sahf
popf
test
enter
call
xchg
jae
lahf
pusha
pop
ds
lods
add
pop
nop
jmp
rcr
cmp
sub
inc
jae
out
test
add
outsb
fdivp
push
mov
cmp
adc
int3
test
jo
and
jecxz
sub
pop
fidivl
push
clc
fsts
sbb
jecxz
mov
nop
sub
xor
pop
and
mov
xchg
int
mov
mov
fcoml
sbb
fnsave
jno
xor
daa
repnz
add
orl
push
imul
add
sub
movsl
and
cmp
cwtl
xchg
pop
mov
rcrl
in
pop
andb
fsubrs
mull
inc
and
pop
scas
cmp
adc
jle
sbb
enter
push
push
dec
in
into
nop
push
iret
ljmp
loop
sub
add
mov
push
test
jmp
cltd
push
pop
test
or
sbb
xor
jg
sbb
enter
xlat
jp
inc
aam
fs
mov
inc
xchg
adc
lds
xor
lahf
sbb
add
adc
mov
mov
ljmp
fsubs
jp
jge
push
mov
in
packuswb
adc
inc
sub
fbstp
cmp
pop
arpl
ja
push
dec
mov
inc
in
xor
adc
dec
idiv
jecxz
movsl
dec
adc
dec
rol
sbb
add
test
popa
sbb
cmp
cltd
cmp
mov
xor
lods
lods
mov
mov
xchg
leave
xchg
stos
roll
xor
movsl
jb
clc
dec
sub
add
jns
and
push
lret
dec
inc
fcmovnu
and
test
jge
je
js
test
lret
subl
dec
test
dec
sarl
pop
into
xchg
mov
cld
inc
loop
dec
cli
jp
arpl
call
xchg
es
inc
in
hlt
push
imul
mov
lock
xlat
scas
adc
xchg
jno
jle
ss
sub
loopne
and
xchg
sbb
jmp
mov
mov
mov
mov
roll
pop
imulb
fnstenv
push
insl
lods
aaa
pop
dec
stc
cmp
test
mov
sti
test
mov
push
inc
xchg
or
inc
mov
inc
jne
xor
dec
cs
inc
adc
mov
inc
pop
push
lds
shll
aaa
arpl
je
test
cmp
loope
sarl
mov
xchg
push
sbb
push
stos
mov
push
sahf
lea
setl
sbb
in
in
xchg
inc
mov
and
or
xchg
jbe
or
std
inc
cmp
arpl
dec
sti
pop
gs
pop
ljmp
sahf
cmp
pop
pop
ss
repz
pushf
xchg
pop
test
sub
sbb
es
sbb
rcrl
pushf
shlb
sub
dec
push
out
loop
lahf
cmp
out
or
outsb
rcr
xor
mov
sub
lods
jl
jnp
dec
mov
subl
mov
mov
ja
loope
push
fnsave
in
adc
and
es
into
int3
dec
pushf
out
sbb
jge
mov
jbe
xor
push
fcmovnb
sub
imulb
lret
sbb
inc
sahf
mov
outsb
pushf
adc
adc
pop
add
push
fcomps
jg
and
mov
cli
in
push
and
jbe
mov
cmc
addr16
cld
cli
rclb
in
orl
int3
bound
xchg
sti
xchg
jbe
fsubrl
imul
push
cmp
jns
xor
jle
dec
lods
pop
das
or
lea
inc
dec
pop
shll
loop
and
jb
loopne
push
mov
xchg
sub
iret
inc
dec
negl
pop
clc
or
mov
shll
fisubrl
xor
rcr
or
lods
xor
call
std
or
cmp
push
mov
fsubs
push
cmp
cmp
pop
jecxz
or
mov
ret
stos
rcll
pop
mov
xor
shll
test
cld
mov
sub
ss
test
pop
or
dec
testl
inc
je
pop
xchg
lods
dec
pop
and
and
inc
loopne
add
cmc
xchg
daa
sbb
daa
ss
inc
adcb
mov
test
sysret
mov
sbb
sbb
xchg
popa
jge
shrb
sbb
cmp
lcall
mov
fidivrs
or
stos
sub
xchg
add
dec
int
stos
cmc
hlt
faddp
mov
bound
sarl
enter
push
cltd
mov
add
test
lahf
add
inc
addr16
or
call
pop
mov
stc
aaa
and
les
pop
push
push
mov
arpl
cltd
adc
in
and
adc
mov
into
jnp
fs
sti
mov
jb
sbb
aam
test
call
pop
nop
cwtl
ret
xchg
mov
jecxz
xchg
pop
movsl
dec
frstor
sbb
jno
fldpi
and
cmp
sbb
add
data16
daa
cmpsl
pop
fstl
sub
and
xchg
repnz
out
lret
notb
sti
out
es
mov
pop
int3
mov
add
dec
cmpsl
pop
inc
das
mov
stos
lods
in
inc
fmull
repz
andl
movsb
hlt
andb
fmull
sbb
popa
xor
sbb
std
lock
jmp
and
inc
call
mov
mov
int3
fstl
mov
mov
mov
loope
xchg
sarl
mov
push
inc
leave
scas
and
jo
or
imul
xchg
loope
adc
pop
add
sbb
mov
dec
add
sub
adc
or
xchg
jbe
push
dec
pop
aaa
cmc
xchg
inc
add
dec
adc
push
adc
addr16
add
dec
mov
ret
cmpsb
stc
push
in
mov
arpl
in
mov
popa
push
jg
test
imul
sub
pop
and
aam
fcmovb
notb
fucomip
addb
and
push
xchg
ret
mov
cld
mov
cmc
pop
pop
ss
mov
fsubs
popa
movsl
gs
es
push
lods
mov
nop
inc
mov
inc
test
sbb
cmp
fstpl
mov
scas
xor
push
cmp
popa
pop
cli
movsl
fstl
mov
nop
negb
push
xor
arpl
testl
adc
pop
ljmp
popf
ja
loop
testb
mov
cmpsb
mov
sub
andb
les
mov
test
xchg
flds
mov
adc
mov
jo
dec
mov
xor
loopne
test
cltd
xor
aas
adc
std
repnz
dec
mov
jns
mov
je
sub
xor
push
les
mov
arpl
pop
cmpsl
aam
adc
xchg
rcr
mov
test
mov
sub
jbe
pop
lods
jmp
push
sub
gs
setnp
xor
mov
fs
jo
push
sbb
push
lock
imul
je
mov
mov
xlat
addr16
fnstsw
mov
stos
ror
ja
cmp
dec
ret
clc
cmp
jecxz
pusha
inc
mov
cmp
push
push
mov
xlat
mov
xchg
dec
out
fdivl
movsl
in
pop
add
mov
jmp
jmp
sbb
push
mov
xchg
push
lds
test
fisubrs
cmpsb
test
or
jg
pop
popf
rorb
adc
push
dec
js
push
sbb
mov
daa
dec
mov
pop
daa
jmp
jle
or
ret
lret
sahf
sbb
in
jecxz
and
inc
cmpsb
arpl
shl
scas
loopne
stc
jne
cmp
cli
out
xchg
xchg
test
gs
inc
dec
ret
mov
or
xchg
add
or
pop
shl
fisubrl
pop
aad
mov
in
sub
mov
jg
lods
gs
mov
jae
cmp
jp
out
dec
or
iret
mov
ret
aam
xchg
bound
sub
test
dec
jge
loop
out
push
xor
mov
std
inc
or
mov
push
mov
pop
cmp
sbbl
fs
sti
loop
adc
lcall
lods
lods
cltd
sbb
dec
pop
int
fists
rcrb
push
mov
push
xor
push
xchg
and
mov
outsb
jmp
scas
jge
fcmovnb
sbb
ds
jmp
or
mov
jne
sub
push
les
clc
decl
push
fdivp
cmp
jmp
ret
stc
and
leave
or
lcall
stc
in
sub
mov
push
cltd
pop
imulb
hlt
leave
pop
test
jle
adc
push
gs
stos
xchg
xchg
push
push
icebp
dec
call
push
aad
dec
stos
ja
in
mov
sbb
cwtl
fidivrs
xor
add
push
mov
xlat
cmc
aad
stc
dec
xchg
popa
sub
testb
insb
dec
scas
jno
add
insl
jae
mov
shrl
mov
out
pop
lcall
mov
fildll
push
push
movsb
xor
sti
inc
out
jo
jp
aad
xchg
mov
bound
sub
in
mov
push
int
inc
sarb
cmpsb
mov
lods
xchg
sbb
xor
sbb
mov
pop
insb
js
mov
out
inc
stc
sub
inc
jg
adc
xchg
les
pop
push
mov
jb
or
ja
cmp
aam
xchg
stc
sub
inc
inc
in
int3
cmp
mov
imul
push
adc
and
mov
and
scas
or
imul
ljmp
push
add
dec
jno
popf
jns
push
push
sahf
and
aad
cmp
sub
and
jle
jmp
mov
mov
cmp
pop
into
ret
and
insb
jb,pt
rclb
push
roll
jg
and
mov
mov
sarl
mov
pop
icebp
enter
insl
repnz
cmovno
cli
jnp
mov
xchg
fnstenv
fucomi
jge
or
add
push
cld
call
int
cmp
inc
mov
inc
push
loope
mov
fcmovnb
cmpsb
jnp
in
decb
mov
mov
xorb
and
scas
xchg
int
mov
pop
call
push
aaa
ret
mov
mov
pop
rorb
scas
lcall
in
inc
setae
mov
shll
inc
flds
sbb
jp
mov
dec
add
test
mov
pop
pop
xor
lods
push
adc
add
inc
or
cmp
repnz
mov
rcrl
push
loope
into
loop
filds
jno
xchg
movsl
loop
scas
push
or
std
data16
and
or
cmp
mov
adc
ret
and
cmp
imul
inc
push
mov
cmc
movsb
mov
jno
push
cld
mov
test
sbb
pop
mov
insb
and
dec
pop
jns
bound
and
xchg
rcrb
pop
sub
adc
jl
xor
push
pop
fsubs
jns
cmp
sar
ss
aas
adc
out
and
ljmp
mov
pop
xor
cmp
mov
les
jbe
scas
and
mov
push
sbb
xchg
lods
stos
in
daa
or
lret
ficoml
stos
mov
aam
fistpll
movsb
dec
pop
or
test
inc
jl
inc
mov
aas
dec
lods
jge
cmpsb
xlat
add
inc
and
push
frstor
aaa
andb
push
push
fbstp
xchg
push
loopne
sti
popf
pushf
ja
add
inc
xor
push
or
inc
dec
jae
lds
sti
add
sahf
mov
jg
jge
push
cld
pop
lahf
cmp
dec
mov
inc
dec
in
pop
sbbl
into
aam
mov
aas
push
push
sub
test
sub
xor
xchg
adc
adc
outsb
sbb
loopne
xor
lods
out
cmp
ret
xchg
test
cmp
nop
xchg
and
or
pushf
sub
mov
movntps
push
adc
les
mov
jno
repz
jg
call
jo
add
cwtl
rcll
icebp
sub
loop
ret
fcmovbe
sbb
jge
dec
scas
outsb
loope
push
addr16
repz
cmpsb
lahf
mov
pop
mov
cmove
add
jl
mov
adc
orb
hlt
adc
mov
pop
sbb
fs
xchg
aad
sub
js
rcl
cmp
or
outsl
jne
xchg
daa
leave
stos
mov
push
sahf
mov
js
and
push
bound
lds
xchg
inc
gs
in
or
insb
test
mov
out
je
addr16
aaa
push
and
std
call
add
jno
and
cmp
lods
add
iret
push
daa
push
adc
jmp
mov
bsr
mov
mov
pop
sahf
xorl
push
and
addr16
cmp
mov
test
pop
imul
sahf
outsl
cltd
fdivp
push
pop
aad
das
ljmp
mov
push
shlb
fisubrl
or
pop
xor
movsl
jo
ds
psrlq
sub
pop
aas
test
icebp
or
ret
push
mov
imul
or
flds
adc
cmp
rcr
and
andb
cltd
int3
add
popf
arpl
cmpsl
fdivs
movl
dec
movsb
out
push
test
jg
xor
in
xchg
jno
inc
test
sbb
xor
inc
inc
xchg
jbe
add
jnp
insb
test
ret
addb
push
cmp
cmp
pop
lock
enter
inc
inc
mov
jne
popa
inc
xchg
cmc
into
cs
fwait
ljmp
push
and
test
pop
jne
mov
inc
lock
dec
mov
out
mov
xor
push
fldl
adc
xchg
in
lahf
add
in
jo
push
jns
pop
stos
dec
pop
inc
add
push
sbb
adcb
sub
add
inc
mov
jp
cmp
pop
or
mov
dec
int
sub
and
and
stos
pop
xchg
xor
bound
push
sub
sbb
sbb
pusha
je
jb
data16
dec
push
aad
lock
outsb
dec
mov
stos
jae
and
das
inc
data16
loopne
xchg
outsl
ffree
je
shl
mov
jge
xor
rclb
jmp
cs
iret
dec
pop
mov
and
test
mov
mov
add
sub
and
xchg
stos
cld
shll
in
jge
mov
push
dec
xchg
mov
ss
arpl
lret
cmp
mov
mov
jg
popf
call
fadd
push
inc
insb
add
das
test
mov
fidivrs
xchg
push
push
sub
inc
xor
cli
loopne
mov
xlat
test
icebp
outsb
ficomps
leave
mov
addr16
mov
jecxz
push
or
cmp
ja
fnstenv
movsl
divb
adc
inc
and
add
pop
sti
popa
sti
xchg
mov
insb
sbb
lret
cli
out
push
push
adc
jns
jmp
daa
out
xchg
cltd
mov
sbb
bndldx
shrb
xchg
scas
pop
jae
jno
cmp
or
orb
enter
xor
ret
dec
loop
dec
mov
addl
add
fisubrs
jnp,pt
sbb
loope
or
mov
repz
cmp
stos
jnp
arpl
icebp
push
fadd
and
mov
inc
mov
frstor
inc
jge
int3
xchg
mov
addr16
xchg
pop
xchg
pop
aam
es
out
ss
and
fstl
or
dec
and
scas
mov
addr16
test
xor
imul
imul
loop
test
insl
shrb
or
push
test
outsb
push
inc
in
push
and
cmp
imul
sbb
loop
stos
out
mov
pushf
loopne
mov
adc
xchg
mov
and
cmpsl
lods
adc
cmp
ficoms
mov
inc
loopne
stos
call
and
mov
lods
sub
shlb
rcrb
loope
loop
addr16
push
jne
pop
gs
ja
movsb
cmpsb
je
ror
clc
jb
mov
xor
repnz
fimuls
cltd
js
les
xchg
xlat
imul
pop
lods
lret
inc
mov
jg
jl
xor
mov
fcomip
and
mov
inc
push
js
bound
shr
je
push
int
loop
cld
cmp
add
mov
xchg
andb
fnstenv
pop
push
pop
scas
inc
mov
insb
and
pop
jge
fcompl
inc
mov
mov
cli
adc
cmp
xchg
add
jb
sbb
push
leave
jle
xor
lea
or
fucom
xlat
insb
ljmp
arpl
loop
push
jno
mov
sahf
mov
push
aam
and
pop
push
test
bound
or
inc
imul
inc
hlt
mov
xchg
inc
pop
or
jbe
jns
sbb
rcr
into
dec
jg
mov
imull
inc
mov
mov
adc
and
dec
xor
add
mov
xchg
scas
cmc
cmc
xor
je
mov
cmp
xchg
rorl
and
movsl
fdiv
sub
lret
outsl
push
sub
lea
loopne
pop
stos
pop
insl
dec
movsb
lahf
insb
mov
push
rcr
mov
sbb
add
sub
xchg
dec
stc
inc
sahf
insb
arpl
fnop
add
sub
test
insb
or
dec
sahf
inc
and
push
mov
mov
out
movsb
test
cmp
pusha
js
add
jo
clc
mov
xlat
or
out
in
nop
addr16
aas
pop
adc
pop
mov
scas
fists
mov
xchg
arpl
shrl
dec
leave
jnp
test
sarb
pushw
and
ljmp
clc
cmpb
lods
add
pop
pop
das
ljmp
cmp
stos
fimull
push
repz
add
xchg
xchg
jge
xchg
cmpsl
pop
adc
jl
cmp
test
cmpsb
out
nop
sahf
insl
loopne
jae
dec
pop
push
iret
xchg
lret
inc
dec
pop
pop
adc
adc
sahf
inc
mov
inc
mov
cmp
int
pop
mov
clc
iret
mov
lods
fnstenv
mov
xchg
cmp
cmpsl
dec
pop
daa
fnstenv
inc
add
fmuls
xor
negb
or
jl
jge
xor
popf
push
sbb
fbld
ss
daa
xchg
testb
stos
in
push
js
hlt
mov
mull
arpl
stos
jge
adc
scas
stos
aam
aaa
add
push
cmp
test
shrb
loope
orl
jmp
push
ss
sahf
jne
js
stos
add
or
and
mov
mov
pop
into
sub
mov
hlt
pop
leave
and
fwait
mov
and
gs
icebp
adc
sbb
inc
loop
push
push
rolb
pop
jno
pop
mov
daa
cwtl
gs
sbb
mov
xchg
add
push
and
fldt
in
sub
jnp
test
or
std
pop
pop
dec
mov
lds
cmp
mov
repnz
xlat
cmpl
out
call
or
xor
clc
pop
ret
sub
xchg
pop
fcmovu
loope
faddl
sbb
imul
out
sub
and
aad
jb
xchg
sahf
or
aaa
cmp
mov
fs
adc
repnz
adc
jae
or
clc
out
test
iret
jae
rcll
or
xlat
cmc
std
mov
mov
pop
xchg
out
mov
insb
outsl
cmp
daa
sub
test
cld
test
sbb
xor
dec
ret
movsb
fimull
add
lods
sbb
sbb
mov
ljmp
cltd
sub
mov
out
subl
rolb
pushf
sbb
and
push
add
arpl
shlb
lods
roll
dec
ret
or
xor
inc
pop
insl
jmp
xor
and
aad
loopne
or
push
mov
cmp
add
push
pop
inc
jb
pop
xchg
ss
sahf
adc
mov
ja
push
sbb
rclb
bound
jns
lea
xchg
insb
sub
adc
mov
xchg
test
scas
cmp
xor
mov
sbbl
sbb
sub
or
testb
testb
and
inc
cs
cld
xchg
fadds
dec
fld
pop
mov
out
outsb
rorb
jle
cli
jmp
dec
gs
movsb
mov
jb
push
das
sub
clc
rcll
xor
dec
test
push
sbb
jge
lea
aad
iret
out
cmp
mov
or
add
dec
sarl
adc
je
push
lock
idiv
xchg
inc
cmpsl
push
stc
push
dec
fdivp
cwtl
je
mov
push
xchg
repnz
mov
scas
cs
mov
imul
mov
fs
pushf
mov
enter
inc
xchg
test
mov
push
lahf
or
out
lret
jge
imul
test
dec
xchg
inc
xchg
add
nop
xchg
push
xor
mov
xchg
mov
out
adc
adc
inc
sub
xchg
clc
lock
sbb
mov
sti
dec
loopne
in
lcall
mov
fbstp
xor
sbb
aaa
xor
add
mov
movsl
cld
cmp
cltd
in
inc
stos
sub
jbe
iret
or
sbb
cmp
or
fcoml
stos
divb
movsb
test
popf
push
add
aaa
clc
icebp
sub
jmpw
rolb
and
jne
fisttpl
xor
push
push
sbb
jns
and
shrb
shlb
dec
dec
mov
clc
aam
cmp
rcr
fcomi
push
push
loopne
lods
rolb
sub
sub
inc
or
adc
push
inc
stc
out
outsb
sbb
insl
out
adc
mov
mov
mov
pushf
xchg
insb
out
dec
adc
fmul
movsb
ret
mov
dec
loopne
fmuls
mov
pop
or
mov
popa
add
in
jle
mov
aad
insl
push
lcall
fs
mov
mov
dec
rcrb
test
and
push
sub
test
sbb
or
subb
pop
push
repnz
sub
push
and
daa
sar
mov
int3
pop
or
jg
mov
mov
xchg
outsl
vcvtdq2pd
add
push
aaa
enter
je
stos
push
fstpl
and
cmp
scas
and
stc
es
fistps
ss
or
mov
ljmp
xor
std
testl
xor
jb
outsl
adc
mov
loop
es
cmpsb
rcrb
iret
xchg
dec
pop
js
xlat
shrl
push
sub
jle
add
jl
jecxz
mov
jae
bound
lock
or
inc
mov
xor
push
mov
test
in
sub
js
push
arpl
pop
mov
lahf
test
adc
or
hlt
xchg
inc
aas
cmpsl
rolb
aaa
push
add
adc
cs
repz
aam
inc
and
jl
hlt
pushf
roll
std
loopne
shlb
subb
int3
xchg
or
jb
stos
clc
xor
pushf
sbb
xlat
cmp
mov
fwait
cmp
flds
add
dec
lret
pop
inc
or
inc
sbb
push
and
dec
shlb
mov
in
inc
lock
roll
add
testl
loop
ftst
mov
xchg
cmpsl
cmpsl
and
pop
or
fildll
dec
xchg
shll
dec
cs
push
ja
cmp
add
bound
sti
ret
push
test
cmp
hlt
cmpsb
stos
inc
je
loopne
dec
insb
das
cltd
test
xchg
roll
fbstp
sbb
push
xchg
xchg
sub
call
addr16
insl
sbb
addb
repnz
pavgb
xor
or
hlt
andnps
xchg
dec
xchg
cmp
fmuls
testb
cmp
push
pusha
pop
jmp
adc
pop
sbb
sbb
mov
movsl
jbe
in
xor
mov
mov
hlt
sbb
test
or
cmovns
mov
rcl
jb
pop
imul
int
jecxz
aaa
int3
shll
push
jbe
sti
bound
sub
xchg
js
sti
shr
and
inc
cli
cmp
mov
inc
sbb
ljmp
xor
and
xrelease
mov
inc
xchg
or
push
cmp
mov
ds
pop
pop
mov
mov
loop
sbb
test
or
cmp
push
in
xor
call
es
pop
aaa
inc
popf
sbb
test
or
pop
outsb
movsl
sti
jns
xor
inc
shrl
stos
inc
ret
or
jns
mov
in
lcall
popa
push
or
add
pop
sub
pop
imul
adcl
xchg
aad
arpl
sbb
cmpsb
loop
jne
cltd
sub
test
push
lret
jbe
fstpt
or
jno
rorb
cltd
lahf
push
testl
xchg
dec
mov
xor
push
adc
repz
in
sub
cmpsl
push
mov
mov
push
and
cmpsb
decl
jmp
cltd
xor
push
jg
mov
orb
dec
mov
push
jle,pn
data16
mov
cmp
sub
test
shl
mov
adcl
sub
pop
in
mov
mov
mov
inc
ja
js
pushl
jg
inc
outsb
fmul
repz
cld
mov
mov
movsl
dec
pop
inc
pop
jae
pusha
mov
pop
or
sub
cmp
push
les
or
rolb
adc
xchg
jl
lahf
insb
lds
into
jecxz
sbb
pusha
divl
jmp
fisubrs
mov
push
cwtl
pop
xor
jno
cmp
push
pop
cmc
jmp
test
andb
fstl
fs
out
shrl
xchg
pop
clc
mov
xor
fcoms
xor
scas
mov
mul
dec
pop
outsb
movsl
adc
mov
mov
adc
and
insb
movsb
mov
ja
cmp
jne
lds
jp
mov
sbb
fs
dec
stc
aaa
push
mov
mov
mov
hlt
lahf
flds
pop
push
lret
jb
fcmove
lret
divl
add
lcall
lods
xchg
scas
adc
mov
dec
xchg
movsl
cmp
nop
fsubrs
mov
inc
cmpsl
xor
hlt
cwtl
bound
inc
jb
mov
xchg
les
add
pop
cmp
stos
dec
lret
cld
sub
mov
adc
sar
shlb
inc
mov
inc
andb
stos
mov
sub
pop
mov
lfs
and
in
mov
dec
js
scas
cmpb
mov
faddl
cmpsb
in
mov
or
daa
xchg
push
sbb
or
mov
add
rclb
jo
loop
bound
and
xchg
sub
movsb
mov
mov
mov
icebp
out
pop
fisubs
inc
movsl
push
int
mov
mov
adc
divb
add
jmp
pusha
int
mov
rorl
dec
jbe
push
pop
aad
sarl
std
dec
pop
sub
jns
adc
adc
sub
into
outsl
int
fdivl
insl
jl
fnstsw
test
pop
in
outsl
jl
addl
adc
les
in
lret
cltd
jle
cmp
adc
lret
mov
loopne
inc
inc
andl
js
cltd
inc
call
inc
xchg
adc
lret
lods
mov
inc
pop
sti
movsl
outsl
mov
imul
std
bound
add
leave
xchg
dec
xchg
inc
cmpsl
inc
cld
lcall
add
lds
clc
cmp
jecxz
cmpsb
je
xchg
dec
lcall
lret
sti
bound
das
popf
xchg
outsb
test
mov
scas
xor
adc
add
pop
mov
inc
mov
js
mov
xor
adc
imul
dec
cmc
dec
pop
jl
aam
dec
pusha
xlat
std
cmpsb
and
jp
pop
out
and
push
pop
mov
push
mov
jnp
pusha
jo
rcrl
xchg
loop
into
xlat
inc
push
inc
inc
imul
aas
mov
dec
fsubr
xor
pop
mov
hlt
xchg
mov
sbb
jle
lods
push
mov
xchg
inc
dec
les
dec
imul
xor
jmp
push
pushf
xchg
push
pop
jo
cmp
xor
mov
xchg
punpckhbw
sbb
jmp
iret
sbb
dec
mov
or
lock
pop
mov
sahf
enter
cmp
popf
mov
out
xchg
sbb
int3
xor
mov
pop
shll
push
lret
pop
add
xor
insb
cmc
jb
xchg
stos
pop
push
test
or
imul
inc
jle
fimull
shlb
test
xchg
lahf
push
addr16
lret
or
es
xor
loopne
negb
out
rorb
mov
sahf
xor
cwtl
dec
inc
xchg
jno
sub
mov
insb
xchg
mov
icebp
sbb
loop
sbb
adc
not
stos
dec
cmpsl
xor
arpl
in
scas
mov
push
dec
mov
sbb
in
sbb
divl
fnstcw
int3
push
push
psrlq
movsl
pop
push
cmp
cmp
pop
addr16
ja
jnp
sbb
sahf
inc
cmp
pop
leave
mov
insb
sub
add
shlb
pop
pop
add
dec
outsl
mov
add
adc
inc
ja
jno
stos
cmpb
dec
jecxz
mov
je
cmp
pusha
jno
mov
mov
jmp
pop
jno
xor
adc
mov
lds
xlat
jnp
xor
xchg
mov
cmp
sarl
push
lcall
or
les
mov
imul
scas
test
xor
test
mov
fcmovbe
test
sahf
bound
ret
fidivrl
in
jp
add
cmpb
aad
sahf
les
fcoml
rcll
or
push
push
xchg
lret
movb
popf
in
ret
data16
xchg
push
aad
sub
and
sub
in
hlt
pop
cli
data16
daa
add
add
jg
or
lcall
cmp
xor
popf
xor
jae
sub
aad
adc
in
push
rol
sub
stc
sbb
jle
out
jne
gs
and
push
les
jnp
movsb
sub
dec
mov
cwtl
scas
xor
lret
dec
sbb
inc
add
lods
inc
push
in
or
adc
inc
loopne
xor
loopne
lds
loope
testb
jno
je
mov
mov
adc
cmc
push
out
xchg
dec
and
push
cwtl
popf
sahf
pop
xchg
jle
jmp
inc
call
mov
inc
int
cmpsl
mov
out
repz
push
int
test
jo
xchg
and
jecxz
test
fwait
xor
mov
in
cltd
cmp
cmp
adcl
in
dec
pop
test
mov
leave
out
dec
addl
test
push
and
xor
pop
rcll
push
repnz
js
add
xchg
xor
fprem1
lret
mov
mov
jle
and
out
enter
inc
aas
adc
xor
mov
push
pop
jecxz
mov
imul
cmp
cmp
or
xor
push
mov
push
fdivs
inc
dec
adc
cltd
mov
or
lods
loope
loop
push
sbb
ret
cmp
ret
and
imul
ja
daa
and
ss
inc
jmp
push
xchg
fwait
je
sarl
xchg
jg
push
push
adc
dec
push
jecxz
lods
lcall
loopne
fmulp
xchg
mov
or
lds
push
jne
cmp
out
push
cmp
in
repz
fidivs
sbb
push
icebp
inc
sarl
or
stc
inc
and
iret
sub
cmpsl
adc
lods
push
testb
imul
pop
je
push
jns
fidivs
mov
sub
imul
in
ja
pop
xorl
mov
movsl
popf
dec
or
mov
pop
shl
lea
testb
flds
pop
sarb
and
scas
cmp
cmc
pop
fstpt
xchg
xor
nop
das
shr
push
pop
sbb
or
fldcw
sbb
xchg
mov
cmp
ds
ficoms
xor
inc
dec
test
inc
loop
adc
addr16
dec
mov
adc
add
fs
cmp
subb
rdpmc
sub
add
push
fsubl
adc
repnz
jno
imul
lcall
pop
iret
stc
in
fdivr
lcall
sets
lcall
aad
ret
mov
push
js
mov
imul
fsubrl
fadds
cmp
push
mul
pop
mov
add
std
das
into
les
ja
push
xchg
adc
lock
cmp
cmp
movsb
mov
ret
lahf
mov
repnz
xchg
xor
add
sub
jne
andl
add
out
push
jle
xchg
repz
cmp
xchg
mov
sbb
xlat
mov
loop,pn
dec
gs
insb
aad
cmp
jg
movsl
xor
daa
pop
add
inc
out
lods
xchg
pop
cmp
pushf
mov
or
sub
cmp
sbb
lret
lods
popf
int
fadds
loopne
xchg
enter
lock
into
pop
lahf
popf
inc
or
push
es
out
dec
xchg
andb
sub
jle
mov
sbb
sub
jl
and
into
add
gs
dec
sub
sub
or
push
adc
test
push
cmpsl
jp
repz
imul
pop
pop
jnp
push
adc
les
lret
inc
cmp
inc
or
mov
sarb
call
push
inc
in
cmpsb
mov
fsubs
jo
cli
or
leave
xchg
repz
leave
pop
mov
lods
adc
push
mov
js
jge
or
ret
jg
stc
cmp
pushf
dec
mov
mov
cmp
fs
jo
bnd
and
scas
out
rorb
shlb
mov
pop
ficompl
dec
inc
repz
scas
shrl
aam
xor
pop
out
mov
mov
adc
insl
mov
sbb
push
shlb
je
xorl
into
mov
jae
dec
stos
stos
vsqrtpd
lea
jge
sub
push
imul
jmp
pop
xor
add
mov
stos
xchg
xchg
mov
iret
xor
sahf
xor
pop
mov
push
jbe
lods
sbbb
xchg
int3
jg
lods
imul
xchg
hlt
cmp
jp
lret
std
sbb
fmull
mov
test
jmp
pop
or
dec
pop
or
jne
inc
or
xor
inc
jns
or
or
lock
mov
push
insl
push
and
shrb
mov
pushf
fs
sar
push
insb
lods
mov
stc
mov
orl
addr16
popa
mov
cs
dec
out
subb
scas
sbb
repz
leave
mov
enter
call
jb
push
cmp
stos
sets
stos
dec
nop
les
repz
cmp
mov
xor
xchg
fs
jbe
xchg
pop
mov
std
shl
cmp
js
jnp
or
xor
call
xchg
hlt
adc
jnp
add
scas
leave
stos
imul
mov
xchg
push
mov
lahf
dec
sbb
data16
fs
xchg
jnp
dec
push
ret
imul
cli
scas
mov
scas
dec
test
cmp
sbb
inc
jl
pop
enter
repnz
andb
cmp
loop
mov
add
or
inc
push
push
ret
lcall
xor
xchg
mov
or
out
aaa
subl
ljmp
xchg
mov
loope
cmc
xchg
inc
pushf
or
data16
repz
repz
adc
xor
movsl
xchg
insb
rclb
push
int
adc
popa
in
xchg
sub
xchg
or
jns
sbb
pop
movsb
repz
shlb
imul
daa
adc
in
dec
ret
xchg
jmp
push
lods
mov
lea
mov
inc
inc
insl
lcall
dec
outsl
pop
sbb
fcomps
jp
adc
stos
out
mov
or
jo
jge
nop
decl
xchg
adc
punpckldq
inc
outsb
inc
dec
xor
ds
jno
dec
mov
and
sbb
aaa
shrl
imul
and
scas
jl
mov
outsb
sbb
ret
cld
jge
or
jp
and
mov
das
mov
cltd
ret
out
mov
fstpl
jle
mov
sbb
nop
push
fcomi
lock
mov
xchg
mov
out
mov
or
sbb
push
aas
cli
and
push
jno
and
ds
and
xchg
in
shlb
out
cld
mov
push
sbb
lahf
mov
inc
xchg
cmp
test
add
jmp
icebp
push
push
test
ret
adc
jmp
lods
imul
ja
adc
scas
pushf
pusha
mov
loopne
scas
mov
dec
and
popa
sub
or
mov
cmpsb
jge
gs
mov
or
push
inc
fisubl
xor
cld
lahf
push
aas
jo
push
lea
sub
imul
std
ds
repnz
sbb
imul
cmpsb
jl
mov
sub
repnz
sub
out
add
daa
sub
rorl
jb
mov
ret
mov
and
insl
lods
adcb
jbe
jle
sbb
sti
jns
or
mov
iret
movsb
daa
iret
pop
sbb
in
adc
xchg
sub
mov
inc
imul
mov
ss
dec
xor
ret
mov
jo
stos
fcmovnu
jp
or
add
xchg
dec
mov
ficoml
ljmp
arpl
push
pop
pop
rclb
sbb
mov
jle
or
dec
mov
fistpll
and
add
inc
fcompl
mov
push
push
jns
cmp
mov
add
ret
mov
pop
pop
mov
sub
dec
aaa
dec
shrb
dec
sbb
jo
rcrb
fadds
push
faddp
mov
cmpsb
mov
scas
sub
btc
xchg
mov
shll
jno
fidivl
xchg
es
xor
or
cmc
mov
stos
and
adc
push
cmp
lret
dec
or
dec
in
js
shlb
scas
xor
jno
jecxz
jbe
sbb
xchg
mov
push
cmp
cli
pushf
mov
and
fnstsw
leave
pop
mov
xchg
nop
inc
inc
jg
out
mov
clc
cmp
inc
jb
imul
in
loopne
hlt
mov
mov
movsl
stos
sbb
lock
mov
out
pop
fmull
sub
and
xor
xor
push
loop
adc
fwait
mov
xor
jecxz
imul
in
cmp
dec
sarl
mov
movsl
insl
inc
dec
lock
mov
cmpsl
pop
es
mov
mov
mov
adc
jl
add
stos
and
or
lcall
jp
push
lock
dec
push
cltd
ficompl
push
inc
mov
fdivs
mov
add
add
adc
sbb
dec
xchg
ja
jmp
inc
cmpsb
inc
lods
jne
inc
sub
js
ljmp
xchg
push
mov
fbld
add
inc
inc
stc
xchg
pop
add
sbb
enter
jl
ret
js
mov
mov
mov
pop
lods
mov
out
jns
add
xor
iret
ss
mov
icebp
arpl
mov
xchg
cmp
jno
mov
sbb
mov
dec
xchg
popf
cmc
mov
scas
ficompl
dec
nop
push
add
pusha
and
shrb
mov
or
imul
mov
call
je
test
jge
dec
lahf
nop
adc
mov
inc
ljmp
xor
mov
les
adc
scas
imul
addr16
popa
mov
mov
cmp
int3
jmp
stos
in
data16
cmpsl
sub
fnstenv
mov
sbb
sub
push
mov
iret
adc
jo
out
lock
inc
ss
data16
insl
data16
fimuls
mov
inc
mov
lods
loop
xor
lods
sub
add
out
sbb
adc
cmpsb
mov
dec
arpl
sub
pop
ss
outsb
fwait
jle
pop
xor
and
jns
mov
shl
lret
addr16
adc
push
pop
bound
cmpsb
insb
andb
stos
test
in
shrb
addl
xchg
fisttpl
mov
icebp
ret
sbb
out
movsb
xchg
ja
test
cmp
push
je
push
out
cmc
lea
stos
ficomps
pop
cmc
xchg
and
decb
scas
push
and
xchg
sbb
dec
add
inc
inc
sub
aam
rcrl
js
sub
xor
xchg
mov
popa
into
andl
push
fwait
loopnew
mov
in
jo
mov
icebp
cmc
adc
cmp
sbb
ss
mov
mov
repnz
ret
sub
mov
cld
push
push
xchg
pusha
xchg
mov
fists
dec
jl
test
clc
cmpsl
mov
xchg
aad
push
or
xchg
ror
gs
popa
cmc
enter
or
sub
jge
dec
and
cmp
call
inc
outsl
and
jmp
jnp
mov
js
outsb
aas
pusha
xor
ljmp
je
jnp
lahf
cmp
xorb
mov
mov
loope
and
notb
imul
in
jl
test
lods
add
cmp
lahf
inc
xchg
shrl
push
push
rol
cwtl
inc
or
add
dec
movaps
inc
pusha
cmpsb
ljmp
lret
push
push
test
xchg
shlb
mov
mov
mov
dec
push
cmp
hlt
dec
bound
sub
push
xchg
imul
es
and
xchg
dec
jns
sbb
mov
lret
std
jnp
inc
push
mov
xchg
popa
jbe
repz
sbb
fimuls
push
push
xor
jae
repnz
cmpsb
test
add
stos
adc
es
pop
jmp
repnz
push
iret
cmp
add
push
pop
leave
add
ds
pop
scas
cmc
in
mov
add
inc
pop
arpl
enter
cmpsb
loop
arpl
mov
scas
aas
dec
rcl
cltd
cmp
push
dec
xchg
lock
jmp
inc
xor
loope
cmp
loopne
adcb
in
mov
pop
inc
in
lock
mov
int3
xor
jl
mov
inc
xchg
bound
sub
push
mov
cmp
mov
ret
push
add
jge
ret
enter
adc
mov
loopne
adc
inc
fs
hlt
fcomp
sahf
sub
mov
sbb
popl
lahf
iret
ss
dec
xor
je
hlt
imulb
and
cmp
in
pop
mov
cmp
jp
out
mov
into
leave
insl
gs
mov
mov
cld
jnp
sub
jecxz
add
fwait
push
cmpsb
lock
dec
adc
lds
mov
in
aad
sub
mov
aam
in
sub
rolb
rorb
inc
repz
fstpl
dec
mov
jmp
notl
ss
mov
cmp
mov
les
lods
inc
bnd
xchg
push
push
adc
inc
lods
mov
lods
es
test
push
xchg
adc
les
inc
pop
sbb
pop
xor
adc
lock
stos
data16
inc
adc
scas
nop
sub
insb
lods
pop
loope
cmp
das
adc
cmp
movsb
jle
cmp
dec
sbb
sub
mov
inc
cmp
pop
loop
lods
shl
enter
loope
mov
in
dec
int
pop
inc
lea
mov
leave
repz
andb
sbb
lods
out
ficompl
jecxz
cmpsb
inc
cmpsb
mov
or
pop
mov
pop
jno
cld
test
insl
fs
pop
fcmovnu
and
int
sbb
sub
paddw
push
and
mov
std
or
push
lahf
add
das
or
sbb
scas
and
leave
push
mov
les
inc
cmpb
ret
mov
sub
jb
fs
push
fidivs
xlat
and
push
mov
mov
sub
fnstcw
pop
dec
test
lea
sub
push
push
inc
das
jg
or
jecxz
jnp
lret
mov
push
push
gs
lret
std
push
cltd
add
adc
dec
jge
mov
pop
sbb
popf
pop
xor
jle
hlt
inc
lods
cmp
push
xchg
pop
jp
push
movsb
add
loopne
inc
pop
mov
or
dec
jg
addr16
into
push
jae
xor
mov
repnz
mov
std
mov
shlb
arpl
into
vmovdqa
pop
or
test
push
pop
test
repz
test
shll
addr16
xchg
cli
mov
mov
cs
xchg
xchg
mov
sbb
dec
push
aas
sub
dec
subl
push
push
sub
scas
add
jne
adc
dec
mov
mov
xor
call
int
mov
push
sbb
add
pop
ja
stos
mov
dec
aaa
inc
sahf
call
mov
imul
repnz
cli
sub
inc
jl
leave
mov
sti
xchg
and
add
push
mov
dec
push
xlat
sbb
in
inc
fsubrs
subl
lret
mov
add
mov
hlt
dec
stos
jmp
adc
mov
cmp
mov
sbb
in
lds
dec
ret
cmp
pop
and
dec
inc
jne
push
gs
popf
pop
lret
push
adc
sarl
scas
mull
in
inc
mov
jecxz
or
xor
jbe
jle
mov
inc
jnp
mov
repz
faddl
adc
mov
or
popa
pusha
and
nop
cmp
inc
or
and
ljmp
icebp
xor
and
xchg
aam
mov
ficoml
adc
dec
jmp
cmp
mov
jp
imul
mov
add
mov
rcr
clc
add
ss
mov
jmp
cmp
xor
jle
fmul
push
push
movsl
sub
jo
leave
lcall
scas
mov
lret
cmpsl
jmp
lcall
push
test
jmp
int
push
mov
adc
mov
pop
xor
imulb
sub
cmp
pop
test
test
add
sti
movsb
xorb
mov
xchg
mov
cltd
out
jle
loope
mov
in
pop
push
mov
xchg
mov
fsubrs
ja
jns
mov
inc
stos
lret
icebp
cmp
jb
xchg
inc
mov
sub
or
fcoml
sbb
jecxz
cld
or
and
pushf
or
repz
push
ret
and
leave
and
push
gs
rorb
or
lods
gs
add
ret
sahf
pop
dec
outsb
fwait
es
xor
add
inc
out
rorb
push
jecxz
jle
xchg
mul
xchg
inc
out
int
imul
shl
in
cli
pusha
hlt
xchg
fnstcw
sbb
out
rcrb
sub
rolb
mov
loopne
and
fcomip
inc
pop
scas
jmp
push
test
fldl
jecxz
jnp
movsl
out
in
and
pop
cmp
sub
xlat
loope
adc
inc
out
addr16
mov
movl
shl
xchg
fdivl
aam
jo
mov
inc
jns
outsb
mov
adc
xor
jbe
outsl
gs
shl
mov
ss
dec
push
lcall
repnz
aas
mov
sub
xchg
lcall
push
add
lock
sub
mov
cmpsl
jo
add
pop
push
in
call
mov
or
repz
int
mov
stos
dec
cmpsb
sub
fldl
cmp
stc
insl
in
mov
push
mov
mov
dec
jmp
mov
dec
fimuls
out
push
add
add
mull
popf
mov
pushl
mov
imul
ds
dec
mov
dec
out
cld
dec
fstpl
pop
sbb
aam
incb
dec
mov
rorb
adc
loope
movsb
xor
push
xchg
mov
and
pop
mov
sub
sbb
cmpsb
out
jge
lahf
inc
loop
cmp
push
rorb
pushf
jo
jns
aas
ds
in
mov
lret
or
mov
aas
jo
push
aas
or
xor
icebp
in
dec
mov
or
add
jae
in
fs
add
jmp
mov
cmpsb
cmc
push
cmp
int
xor
repz
jge
insb
les
sbb
dec
enter
mov
pusha
pop
das
and
repnz
or
outsb
sarl
or
test
mov
shlb
clc
add
adc
inc
roll
lcall
test
out
into
jl
test
mov
push
in
mov
mov
stos
pop
lock
pusha
fld
dec
ja
push
lods
lods
jle
xor
mov
pop
cmpl
or
jne
repz
jbe
jge
xor
pusha
sbb
jmp
sti
adc
add
inc
outsb
jp
loopne
add
and
int
and
mov
mov
movsl
sub
test
pop
pusha
jne
jp
xchg
lahf
scas
and
push
mov
mov
mov
mov
inc
inc
add
das
sbb
cld
dec
pop
hlt
mov
ljmp
jle
adc
add
fnstenv
add
xor
out
add
pop
xor
mov
inc
pusha
mov
xchg
mov
inc
repz
inc
ds
pop
test
jle
negl
js
or
mov
sub
testl
outsb
fs
in
add
ljmp
cmpsb
pop
rolb
frstor
sbb
movsb
test
icebp
xchg
insb
mov
dec
cmpl
push
pop
jp
xchg
outsb
aam
xchg
stos
cmpsl
mov
jae
mov
dec
inc
adc
call
jne
or
out
cmp
fiadds
adc
mov
popf
xchg
add
or
cmpsb
jmp
adcb
lods
add
mov
jmp
movsl
mov
add
dec
inc
and
xlat
dec
push
ljmp
push
push
out
insl
push
sbb
push
xchg
out
add
cmp
std
int3
outsb
pop
add
mul
out
push
mov
pushf
pushf
repz
pop
and
mov
addb
bound
lea
push
insb
cld
insb
outsb
xor
clc
out
dec
sub
push
repnz
mov
lcall
sbb
in
sti
jp
push
mov
das
insl
lods
add
sti
clc
inc
mov
ja
adcb
mov
loop
pop
sarl
insl
cmp
add
dec
shrl
adc
xchg
mov
cmc
fsubrs
aam
ds
in
push
xchg
xor
jl
sbb
sub
push
rcl
adc
cld
sub
aad
and
cld
into
pop
std
lods
and
push
cld
fiadds
loope,pt
adc
std
xchg
sti
and
xor
dec
push
fimuls
fsub
sub
mov
jo
lock
pop
or
cmp
mov
sti
mov
inc
js
pop
rolb
lahf
aam
jmp
push
addl
jo
in
jmp
idivb
adc
cmp
push
cs
adc
cmc
inc
jbe
xorl
mov
push
addr16
aad
mov
negb
jge
not
inc
pop
xchg
xchg
ds
rcrb
mov
pop
loopne
jl
or
jno
pop
mov
dec
daa
add
mov
inc
insb
mov
mov
dec
cmp
xchg
out
pop
and
dec
test
mov
fcompl
nop
inc
int3
inc
ss
rsm
pop
scas
mov
push
jp
mov
mov
in
cld
shr
dec
cmp
lahf
insl
mov
sbb
sub
mov
mov
sarl
sbb
jecxz
sbb
jmp
sbb
mov
fdivl
subl
xor
mov
fistpll
test
mov
addb
pusha
lcall
cmp
xchg
push
dec
ja
dec
ret
iret
lea
out
daa
call
mov
lahf
into
jl
mov
add
jae
and
add
xor
add
xchg
in
dec
dec
fiaddl
jnp
notl
jo
ja
xchg
ljmp
xor
int3
stc
hlt
dec
jbe
push
xchg
fisttpll
and
popl
xchg
mov
or
imul
movq
mov
andl
ret
decb
cmpsb
imul
mov
fdivp
loopne
jecxz
int3
inc
xchg
push
sub
pop
in
mov
flds
adc
lahf
mov
popf
scas
loope
fdivrl
mov
mov
dec
xor
fstpl
push
cmc
mov
jge
cld
sbbl
mov
dec
jg
pop
xchg
jno
fidivl
adc
fsubrl
bound
inc
outsl
cmp
push
into
icebp
sub
mov
push
movsb
int
xchg
pop
shrb
in
movsl
cs
adc
mov
jbe
ja
jae
sti
sti
dec
shlb
inc
ds
in
cmp
jns
add
mov
out
mov
jge
in
ss
test
fdivs
and
cmpsb
gs
xchg
pop
mov
das
ficomps
pop
push
mov
pushf
test
cmovg
push
cmc
fisttpl
push
jg
cld
jge
jl
or
fwait
inc
aaa
repnz
std
inc
dec
clc
and
dec
xor
cwtl
push
or
cmp
mov
push
add
adc
jle
andb
test
test
push
arpl
push
mov
in
inc
repz
mov
aaa
fisubrs
push
pop
enter
pop
addl
cltd
repnz
push
xchg
js
adc
inc
lods
test
and
fldenv
stos
or
out
mov
mov
faddp
mov
sbb
add
dec
mov
add
mov
ss
loop
sbb
and
loop
into
lods
test
repnz
nop
adc
rorl
and
arpl
push
pop
add
and
outsb
sbb
stc
movsb
and
mov
xchg
loop
xor
xchg
lret
enter
mov
lahf
andl
jb
popa
sbb
ja
sbb
nop
push
aam
scas
ljmp
lret
out
stos
mov
pushf
adcb
movl
or
bound
or
add
push
pop
cwtl
dec
repnz
cmp
add
pop
mov
inc
mov
fcmovb
jecxz
sub
mov
loope
aam
fwait
pop
mov
fwait
xchg
add
xor
pop
pushf
lock
in
or
scas
in
push
ficoml
adc
sub
out
test
add
call
cwtl
test
pop
jmp
rclb
jl
push
decb
adc
shl
int3
xor
addr16
ret
fs
xchg
dec
mov
mov
xor
jg
test
push
test
ja
orl
in
sub
in
test
pop
dec
rorl
mov
or
fiaddl
pop
lods
std
addr16
sbb
mov
inc
test
sub
pop
dec
hlt
loop
sbb
xchg
lret
xchg
add
lds
outsl
sbb
mov
loopne
push
scas
mov
jle
xor
icebp
inc
js
inc
mov
pop
adcb
adc
xchg
push
lea
imul
jae
ds
in
lcall
lret
lods
pop
sub
xchg
fisttpll
xor
add
mov
mov
insb
sub
iret
leave
add
scas
push
int
adc
mov
xchg
in
cwtl
or
imul
mov
mov
jne
cmp
pop
xor
repnz
sbbb
arpl
add
push
shrb
pop
leave
push
dec
xlat
push
adc
adc
int3
orb
mov
negb
jns
lock
jb
aam
lds
sbb
mov
shlb
dec
sti
into
stos
into
rolb
mov
jl
xor
xchg
out
adc
adc
jle
cwtl
in
sub
dec
add
pop
cmp
pop
jge
outsb
sbb
push
test
jmp
dec
imul
jmp
in
push
jbe
xor
dec
push
or
movsl
loope
cmp
dec
out
sbb
cmp
mov
cmp
aam
inc
aas
in
sbb
mov
data16
adc
cmpsb
xor
pop
and
movsl
push
sbb
sbb
ret
dec
fbstp
in
ss
adc
stc
inc
push
inc
pop
out
push
jno
sbb
add
in
movsb
or
hlt
push
cmp
dec
ja
pop
lods
loopne
inc
ret
add
test
jmp
jp
ja
pop
inc
dec
cmp
mov
inc
push
nop
sbb
aam
sbb
movsb
push
jecxz
pop
lahf
jae
cmpsb
imulb
out
inc
mull
call
lcall
ds
jo
mov
aam
mov
mov
rcrb
jle
sub
mov
lds
test
fcomp
test
jo
neg
sbb
jbe
push
loop
or
and
je
addr16
inc
or
dec
push
fdivp
mov
xor
imul
and
lcall
dec
lret
test
inc
jmp
or
das
subl
jnp
in
out
mov
xor
cmp
js
das
add
xchg
dec
mov
pop
mov
outsb
pop
lahf
loopne
sbb
test
mov
icebp
pmaxub
or
xchg
pop
or
or
and
jmp
ja
ret
sahf
or
rcr
sub
rorb
xor
push
sbb
and
rorl
mov
cmp
xor
mov
stc
data16
sbb
aas
jne
push
add
cli
lret
push
ss
push
push
xor
dec
test
jmp
js
in
pop
orl
pop
mov
hlt
fistps
xchg
pusha
xchg
pop
repnz
into
jl
cs
shll
out
jge
adc
mov
or
leave
add
add
mov
add
stos
inc
nop
mov
adc
jl
aaa
mov
neg
add
mov
sub
daa
shll
es
add
inc
push
push
sub
outsb
pop
pop
inc
mov
mov
pop
cli
pop
add
nop
pop
add
les
dec
mov
in
push
imulb
sbb
rcrl
jno
inc
cld
loop
stos
lahf
jb
addl
sbb
out
js
shlb
fildl
mov
push
nop
dec
test
fisubl
push
mov
gs
lret
cmp
fwait
imul
adcl
cmpsb
jae
xchg
sbb
ds
stc
sub
push
call
dec
das
jbe
mov
cmp
sbb
adc
icebp
mov
mov
aas
pop
mov
pusha
ret
mov
mov
xlat
das
inc
or
loope
pop
or
sub
in
dec
xor
dec
sbb
lret
xor
in
mov
add
mov
out
sbb
jecxz
jno
adc
test
das
cltd
pop
fldl
lds
jo
jecxz
add
outsb
sti
sbb
les
loopne
sahf
jne
mov
cmpsl
mov
adc
mov
xchg
aad
xchg
push
scas
adc
lods
jle
mov
sub
ucomiss
jmp
mov
fdivs
or
pop
lods
shll
mov
jae
pop
aad
pop
movsl
inc
mov
sub
mov
mov
mov
xor
fsubs
scas
xlat
mov
lret
movsb
inc
xchg
pop
icebp
add
mov
outsb
dec
fistl
orb
cli
lret
in
mov
mov
insl
sbbl
paddusw
push
cli
xor
sti
xlat
insl
fs
test
adc
mov
movsb
and
sahf
mov
add
adc
insl
sbb
jno
mov
and
push
xchg
loope
out
movsl
sahf
fadd
xlat
jo
push
negl
jl
mov
push
subl
ficoml
loopne
dec
gs
xor
arpl
scas
mov
xor
pop
out
sub
or
or
iret
lret
shlb
push
mov
mov
stc
pop
setno
or
ror
adc
sbbb
lds
mov
fstpt
clc
adc
lea
out
insb
pushf
mov
gs
hlt
xchg
pop
gs
mov
in
sub
in
int
iret
dec
or
popl
push
subl
jnp
jb
test
jns
cltd
cmp
mov
mov
icebp
pop
lret
inc
addr16
mov
out
cmp
je
xchg
push
ljmp
xchg
mov
repz
cmp
mov
leave
fistpll
daa
xchg
in
adc
xchg
insb
add
xchg
loopne
aaa
bound
call
xor
sbb
mov
xor
out
push
loope
out
pop
out
repz
aaa
ljmp
arpl
push
cld
mov
jne
mov
sar
filds
sub
mov
adc
repz
insl
dec
je
xchg
cmpsl
arpl
test
push
add
dec
lcall
lea
repz
fidivl
cmp
mov
inc
test
mov
xchg
data16
mov
adc
je
das
aaa
and
ret
xchg
fsts
mov
jmp
gs
out
cmp
jno
pusha
jg
stos
dec
mov
sti
xor
add
aaa
mov
mov
lret
pop
push
lock
push
inc
cmp
sbb
mov
inc
sub
sbb
xor
and
jp
and
mov
arpl
bound
adc
ss
mov
mov
or
adc
fs
add
add
pop
inc
push
shr
xchg
pop
imul
mov
dec
shrl
popf
shll
xor
comiss
clc
pop
jl
sbb
mov
xchg
pop
popa
jb
push
adc
aaa
out
lds
dec
cmp
or
icebp
and
pop
cmpsb
xchg
btc
in
and
jbe
jbe
pop
jo
add
fstpt
pop
pop
repz
pop
sub
mov
or
add
cli
mov
and
add
addr16
sbb
out
mov
test
jo
stos
fdivs
add
shlb
sub
lods
mov
ss
add
inc
inc
jg
add
xchg
mov
or
outsl
iret
dec
dec
adc
test
jae
lods
cmp
and
inc
fists
push
dec
in
and
sti
stc
sarl
push
add
repnz
mov
out
lret
pop
sti
inc
lret
dec
sub
add
mov
int
inc
cwtl
cld
xor
lcall
cmp
mov
fs
or
push
fnstcw
outsb
cwtl
pop
aas
mov
int
and
xchg
je
add
mov
sub
push
jle
mov
dec
mov
sarl
fstps
and
cwtl
addr16
push
add
xor
cmpsb
or
test
inc
xchg
imul
push
ret
push
mov
arpl
cmc
movsb
push
sbb
cmpsl
daa
ljmp
inc
xchg
xchg
push
arpl
ret
rolb
mov
cs
cltd
adc
mov
jo
sub
mov
orb
pop
push
out
popf
and
adcl
or
mov
adc
cwtl
push
arpl
cmp
rcrl
sbb
lock
push
push
shlb
and
out
fsub
nop
push
jmp
xor
sbb
das
add
inc
arpl
cld
lret
pop
sub
mov
add
pop
jle
adc
inc
insl
loop
inc
aad
mov
dec
jno
ret
push
cwtl
sbb
js
outsb
push
mov
mov
jnp
in
cmp
mov
inc
or
rcll
sti
jl
cmp
negl
pusha
mov
scas
inc
inc
xchg
adc
mov
push
lahf
les
mov
push
inc
push
push
outsl
xchg
ret
mov
bsf
or
xchg
fstl
repnz
movsb
in
cmp
lods
rolb
in
gs
outsl
lock
stc
sub
inc
clc
leave
call
mov
jge
mov
push
lods
clc
mov
outsl
push
aas
rorb
dec
popa
imul
je
repz
pop
xor
inc
popf
add
xor
pop
leave
cmp
add
aas
xchg
xlat
jnp
add
pop
insb
inc
push
in
push
lods
cmp
mov
cwtl
and
pop
mov
push
xchg
xchg
imul
std
outsb
andl
testl
push
mov
dec
mov
sub
test
aas
jne
mov
xlat
cmp
std
pushf
jb
pop
fsubrl
in
imul
in
insb
xchg
stos
outsb
ret
imulb
push
inc
cmpsl
jg
inc
xor
sbb
cmp
or
adc
rclb
push
popf
fsts
stos
aas
pop
aam
test
add
mov
push
cmpsl
ds
and
mul
lds
pop
iret
out
rcll
cmpl
lods
vmovups
and
test
dec
lods
insl
ret
clc
insb
add
jnp
push
and
loopne
cs
sub
sti
cmp
cmp
ret
aad
mov
inc
test
out
rolb
daa
pop
fldl
push
mov
je
xor
add
push
push
dec
ss
clc
daa
xor
pop
xchg
sub
fldt
sbbl
push
orl
fwait
mov
mov
out
call
or
lea
mov
xor
or
cmc
je
jno
inc
call
xchg
or
xor
test
add
push
xchg
test
sahf
cmp
lea
outsl
adc
adc
popa
adc
add
insl
inc
out
and
lods
adc
jge
push
lods
cmpsl
int3
adc
dec
cmp
cltd
lcall
inc
je
in
lret
sub
lods
sub
pushf
pushf
aas
sahf
jns
out
das
push
inc
cmpb
sub
stc
mov
push
rcrb
leave
test
repnz
sbb
xchg
sub
je
dec
xor
adc
add
xor
aam
ds
and
pop
mov
in
cmc
sub
push
ret
out
stos
or
pop
inc
test
sarb
xchg
xchg
fwait
gs
js
cmpsl
out
dec
mov
fxam
test
lahf
fs
lock
nop
fisubs
cmpsb
pusha
btsl
mov
pop
jg
xchg
movsl
mov
cmc
aam
xor
xor
mov
das
xchg
mov
daa
ss
cwtl
lret
pusha
fcomi
dec
or
cld
xor
orl
adc
in
add
in
push
js
addr16
or
add
jp
dec
cmc
popf
aad
sub
xor
leave
xor
outsl
mov
mov
jb
and
cmp
dec
arpl
fimuls
adc
push
pop
mov
xlat
call
in
push
mov
sbb
push
dec
icebp
stos
out
xchg
fiadds
or
iret
sub
sti
and
xchg
jp
pop
test
fprem
inc
fstps
or
aas
mov
sub
mov
sbb
sbb
fs
int3
dec
cmp
jo
lret
lcall
or
pushw
lock
pop
lret
je
mov
xchg
sub
mov
ss
mov
push
int3
sub
mov
les
out
push
sub
or
cli
jb
pop
push
imul
xlat
inc
push
jae
pavgb
mov
loopne
add
jmp
add
call
mov
cli
dec
gs
fs
push
rclb
test
jae
push
lret
es
jge
rorl
add
push
insb
inc
repz
bts
or
test
movzwl
pop
xchg
fwait
sarb
insl
adc
inc
or
in
jmp
in
jl
xchg
mov
push
ljmp
xchg
ror
iret
in
aas
movsb
jmp
xchg
sbb
movsb
sbb
inc
adc
cmpsl
out
leave
out
fbld
ja
lock
inc
lahf
adc
fsubrp
test
cltd
mov
push
inc
repnz
inc
ljmp
bound
insb
test
scas
ds
mov
loopne
sub
or
push
test
push
aas
loope
dec
fwait
cli
out
cmpsl
stos
sub
inc
adc
mov
cmc
xchg
iret
out
xor
jnp
mov
sub
push
xchg
aam
sbb
pop
sub
pusha
lock
sar
rcrl
cmp
shlb
add
pop
fcoml
cmp
pop
xchg
inc
vrcpss
adc
stos
ret
inc
xor
mov
leave
mov
jno
xchg
sub
into
xor
out
movsb
adcl
std
in
xchg
loope
shrb
xchg
inc
cs
push
sbb
or
cmpsb
mov
pushf
mov
mov
cmc
cld
lock
lahf
push
or
and
and
pop
mov
mov
push
mov
vpermilpd
decl
and
jae
lock
jno
outsb
scas
inc
ljmp
pop
push
inc
insb
xchg
orb
movsb
ss
repnz
mov
xlat
leave
jnp
or
popf
sub
ret
dec
push
dec
add
aad
scas
or
pop
jne
movsb
scas
std
mov
movsl
movb
xor
cmp
mov
mov
cmp
fists
xor
pop
shl
loop
adc
fs
pop
movsl
pop
popa
imul
xchg
insb
cmp
mov
mov
movsl
mov
fstpt
nop
lret
cmp
jae
stos
or
loope
push
cld
in
outsl
jp
fs
sbb
inc
movsb
addr16
jb
ret
aaa
sub
sbb
xchg
ficoml
repz
jmp
repz
inc
xor
mov
and
dec
and
ss
insb
test
mov
jg
push
mov
ret
inc
mov
in
or
xchg
sbb
xor
pop
or
adc
add
outsb
dec
sarb
in
and
in
push
shl
mov
fnsave
add
cmc
cli
mov
and
xor
push
int3
mov
ret
and
sti
sub
imul
das
and
jge
dec
leave
push
repz
xor
icebp
sub
shl
ja
cmp
push
cmpsb
adc
dec
jmp
mov
mov
lods
scas
insb
and
pop
jge
je
int
mov
push
inc
into
std
test
cld
push
xor
scas
sahf
push
dec
call
mov
movsb
ret
inc
setno
out
fwait
mov
cmpsl
pop
ficompl
aam
lahf
mov
dec
pusha
cmp
mov
cwtl
cmpsl
xchg
dec
out
jg
push
lahf
dec
sub
inc
push
push
xchg
lret
cmpb
loope
sbb
or
int
xchg
xchg
sahf
ret
ja
jns
clc
mov
in
and
test
push
fldcw
movsl
lods
inc
int
sbb
mov
xchg
jbe
xchg
stos
out
or
xchg
adc
les
pop
pop
xor
mov
or
lret
es
inc
push
cmpsl
idivl
roll
std
call
mov
dec
mov
imul
lret
pop
stos
adc
ret
sti
add
jno
or
fisttpl
add
subb
inc
int3
jmp
sub
adc
adc
mov
push
int3
sarb
nop
cmp
in
scas
and
stc
div
cmp
push
inc
outsl
dec
cli
mov
and
inc
add
std
push
imul
xchg
movsb
das
sbb
push
jo
inc
cwtl
test
int
cltd
adc
clc
push
pushf
out
lock
xlat
mov
jae
and
mov
movl
out
das
jmp
imul
in
addl
out
cs
ljmp
ficomps
stc
adc
scas
jbe
int3
movups
lea
mov
adc
pop
jge
xchg
dec
dec
negb
jmp
jmp
jnp
sbb
xchg
push
adc
test
decb
push
ret
jnp
loop
ss
idiv
test
and
jle
fisubs
mov
call
push
xchg
les
out
ljmp
cmp
shrl
jl
mov
pop
scas
fmuls
add
dec
rcrb
outsb
ljmp
stos
in
push
imul
popf
pop
pop
hlt
add
rcrl
stos
ficoml
mov
scas
lods
pop
push
lcall
push
aam
testl
cld
sbb
mov
rclb
daa
mov
mov
cmp
push
sbb
rcll
adc
call
in
scas
loopne
mov
clc
mov
xchg
popf
pop
dec
vmovups
pop
jg
push
or
add
xlat
dec
fmuls
aaa
xchg
iret
xor
xor
push
push
xor
mov
inc
push
fdivs
sahf
sub
push
sub
add
jmp
fs
shr
push
sub
in
hlt
test
lcall
jne
fimuls
sub
ret
jbe
sub
syscall
pop
push
mov
imul
pusha
mov
xabort
mov
test
arpl
add
mov
arpl
jecxz
inc
mov
xchg
fdivs
cmpsb
cmp
jge
xor
ret
push
push
sub
ljmp
int
and
addr16
fcmovbe
je
movsb
jg
push
or
sahf
shl
daa
jg
jle
sub
sti
mov
xor
cmp
dec
or
push
es
pop
pop
ficomps
nop
xchg
sahf
js
shl
adc
je
movsl
mov
pop
mov
out
ficompl
jp
mov
xor
es
lods
stos
or
dec
push
mov
orb
rolb
out
rol
push
jle
loop
fcmovbe
das
mov
ret
cmp
mov
cmp
push
push
mov
lcall
adc
jge
iret
push
fs
xchg
xchg
je
cmp
mov
xchg
ljmp
das
cmp
bound
mov
jge
imul
push
dec
jl
jns
andl
out
adc
add
in
xchg
cltd
fsubrl
aad
or
les
mov
fildll
mov
ds
iret
fidivs
clc
test
repnz
test
fildl
sbb
mov
daa
lods
dec
pop
and
loope
xchg
pop
jbe
in
lcall
push
sbb
jl
lret
xchg
das
idiv
jne
and
xlat
mov
cmp
dec
sub
test
mov
and
mov
sub
xor
pushf
fldl
ss
xchg
sub
xchg
dec
sbb
mov
sti
fdivrl
nop
xchg
cs
pusha
outsb
shrl
dec
stc
lcall
push
xchg
cltd
sbb
dec
scas
adc
cmp
in
pop
sarl
jne
and
loopne
int
push
mov
sub
sbb
xor
jecxz
dec
cmp
rcll
gs
addr16
cmp
and
js
mov
std
mov
ret
ret
inc
dec
fildl
pop
xchg
mov
cmp
push
ret
out
roll
sbb
movsl
xchg
xor
bound
push
subl
mov
xor
loopne
hlt
in
cmp
pop
inc
mov
mov
xchg
les
clc
movsb
out
sbb
jnp
cwtl
mov
sbb
cmp
call
popa
les
pop
dec
pop
addl
add
push
shll
dec
adc
pusha
cld
mov
sub
clc
cwtl
push
pop
mov
out
clc
add
fdivrs
es
test
ljmp
inc
jne
ss
and
pop
outsl
mov
pusha
dec
repz
loopne
lret
movsb
fwait
jl
lea
dec
inc
mov
dec
mov
sub
push
sub
repnz
loope
cmp
inc
and
lret
mov
push
ljmp
xchg
jno
xchg
pop
loop
inc
lcall
jne
jmp
xor
mov
add
and
fsubs
pop
xchg
adc
xchg
enter
xchg
shrb
sub
inc
push
stos
cmp
cmc
sbb
mov
les
outsb
jno
aad
jmp
xchg
add
test
rclb
and
mov
insl
xor
adc
jl
xchg
stc
lret
popf
sub
pop
pusha
push
popf
les
cmp
sarl
mov
or
mov
push
cmp
int
and
aas
jle
pop
xchg
mov
inc
popa
dec
adc
scas
nop
fdivr
fnstsw
daa
mov
scas
enter
push
mov
or
cmc
sbb
cmpsb
add
sub
imul
lcall
add
inc
xchg
fldz
jns
mov
sahf
mov
sbb
adc
test
lds
faddl
daa
mov
xchg
or
bnd
jle
push
lcall
enter
mov
mov
sahf
xor
xchg
scas
fmulp
inc
insl
test
psubq
fs
or
bound
pop
pop
loop
das
sbb
pushl
adc
pop
sbb
push
adc
loopne
cli
sbb
push
and
push
addr16
or
pop
dec
das
enter
ficomps
push
and
mov
mov
stc
mov
mov
inc
sahf
fisttpll
dec
jl
or
xchg
add
das
rcrl
xchg
sti
fildl
cmp
or
int3
sahf
push
notl
push
add
cmc
inc
mov
push
sbb
mov
dec
sub
push
hlt
es
push
jmp
xchg
out
jge
decl
adc
in
push
outsl
fdivrl
clc
and
inc
outsl
icebp
addr16
pushf
es
sti
pop
out
loop
xchg
sub
iret
mov
inc
mov
int
add
aaa
pusha
jno
into
loopne
jmp
mov
jo
ljmp
xchg
xchg
lock
mov
xor
mov
jl
scas
mov
sbb
fiaddl
out
add
pop
add
ljmp
and
and
cld
into
sub
push
lret
test
push
jae
ja
add
icebp
movzwl
pushf
scas
sub
pop
cwtl
loopne
push
scas
push
or
and
cltd
pop
adc
roll
pop
mov
int
inc
and
aam
push
insl
pop
in
shrl
xor
repnz
sti
sub
mov
add
mov
out
sbb
mov
sbb
cmp
xchg
add
insl
leave
fisttps
mov
push
xchg
pop
xor
outsb
xchg
test
xor
mov
mov
cli
push
sub
mov
push
repz
das
jle
shlb
sub
push
arpl
add
mov
inc
fcomip
inc
ficoms
ds
shrl
mov
repz
pop
mov
call
aam
push
inc
push
into
insl
push
push
pop
shlb
mov
or
mov
fxch
xor
xor
mov
inc
dec
ret
lock
insl
sbb
cltd
sub
jge
adc
mov
cld
sbb
inc
neg
sub
mov
sarl
jnp
fisubrl
cmp
jnp
pop
jb
sub
mov
xchg
add
lock
movsb
jnp
out
adcl
orb
scas
lcall
je
out
sub
loope
aad
xorb
push
aad
mov
jl
rclb
cmp
mov
in
test
mov
push
loop
sub
arpl
lods
and
lahf
popf
aam
or
idiv
push
and
scas
xor
cld
mov
repnz
sub
sub
push
mov
xchg
sub
cli
dec
pop
push
das
jle
arpl
inc
or
jecxz,pt
mov
mov
xor
pop
sbb
std
and
dec
insl
or
repnz
xchg
loope
int3
test
xchg
loopne
test
cmp
ds
stos
clc
add
imul
popa
js
mov
pushf
jecxz
shlb
pop
nop
mov
dec
sbb
scas
mov
sub
pushf
imul
in
jmp
stos
mov
out
pop
imul
jmp
pop
cld
addr16
scas
das
jmp
xchg
and
jnp
add
fwait
cmp
jl
push
sub
rcrb
popl
sbb
mov
lods
and
movsb
rcrb
into
loope
mov
fimuls
repz
faddp
pusha
push
enter
outsb
mov
scas
lahf
lock
cmp
rclb
fpatan
outsl
mov
movsb
fnstsw
sub
mov
sub
dec
adc
out
dec
inc
xor
and
xchg
into
pop
jl
popa
dec
sahf
loop
and
add
sarb
adc
subl
xchg
adc
jns
addr16
loope
or
ja
movsb
add
mov
iret
out
jp
das
pop
xchg
inc
inc
dec
mov
inc
popa
in
test
bound
jo
push
clc
inc
cmpb
dec
sub
js
or
ret
subl
pop
loopne
out
shll
es
sbb
bound
ret
shl
add
cs
jp
icebp
stc
cli
sub
gs
inc
lahf
mov
adc
in
nop
push
orl
push
mov
cltd
xchg
push
and
rcrw
in
int
mov
jecxz
cwtl
push
jno
lods
insl
sbb
insb
sub
and
fdivrl
sub
cmp
xor
dec
push
sub
enter
push
xor
or
daa
xchg
or
adc
sbb
jb
pop
pop
loope
sbb
stos
movsb
fists
add
cmp
rorb
cwtl
xchg
pop
add
sub
mov
and
subl
pop
fcoml
pop
xchg
adc
testb
sub
movsb
imul
inc
cmpsb
imul
jmp
les
fistpl
mov
sub
adc
mov
sub
mov
jo
scas
mov
xchg
sbb
sbb
sub
jnp
and
xchg
lods
cmpsl
inc
cmpsl
shlb
cs
push
push
scas
sarl
sahf
movsl
ret
test
leave
inc
jbe
push
ror
std
pop
dec
or
outsb
jg
inc
sbb
pop
mov
into
pop
xchg
sbb
ret
cmpsl
push
inc
iret
aad
adc
idiv
xchg
xor
push
inc
adc
inc
pop
mov
mov
lahf
sub
mov
les
cwtl
outsl
mov
push
aaa
into
shlb
inc
mov
dec
loop
adc
adc
add
rcrb
imul
cmp
mov
loopne
jno
repz
lret
sbb
fsubrs
andl
ja
fnsave
out
int3
xlat
dec
or
jno
push
movsb
add
jge
inc
inc
cmc
movaps
adc
inc
cs
inc
insl
add
push
mov
std
fsubs
out
xor
sub
push
mov
daa
push
fstl
fiadds
das
mov
xorl
pop
mov
call
out
add
inc
pop
xchg
out
jo
mov
and
mov
pop
inc
sub
mov
add
mov
jnp
push
sub
test
jo
insb
inc
lds
sub
lret
adcl
scas
addr16
fistl
xchg
jge,pt
pushf
fneni(8087
lods
pop
push
lret
popf
pop
xchg
or
scas
lds
in
push
fwait
mov
push
test
in
sbb
fs
js
and
insb
push
xchg
xchg
cmp
xchg
mov
jge
add
sti
int
push
push
sbb
sub
dec
idiv
sub
or
loopne
sbbb
cmp
xchg
cmp
cs
jge
cs
fisttpll
stos
or
lcall
add
jne
and
jo
enter
add
pop
movsl
sub
add
daa
cmovs
in
push
clc
pusha
and
jmp
out
push
cld
leave
fbstp
dec
test
imul
jae
sub
xor
pop
fiadds
in
jp
cmpsb
enter
jecxz
fldl
mov
and
jge
or
imul
out
cmp
std
lea
stos
data16
jno
push
xor
jo
bound
ret
scas
lahf
xchg
xchg
adc
jmp
std
jae
or
or
aam
inc
add
xorl
call
fisttpl
pop
insl
adc
xor
iret
es
and
mov
gs
ss
or
icebp
cmp
dec
scas
xlat
es
dec
jecxz
lods
jg
sbbb
sub
mov
stc
jmp
stos
jbe
xchg
insb
inc
push
push
sbb
pusha
push
xchg
fldl
lea
sti
rcr
je
mov
cmp
js
xorl
aas
push
fs
in
and
inc
call
push
mov
rorb
mov
lcall
in
bound
arpl
ret
iret
leave
fmull
inc
or
xor
nop
loopne
lds
icebp
pop
sub
add
add
lods
aad
inc
movsl
mov
mov
cli
or
cmpsb
leave
push
ss
scas
cmp
mov
or
outsb
sbb
ret
mov
fldenv
imul
movsl
and
data16
and
out
js
scas
iret
and
jmp
int3
push
fisttpl
xchg
sbb
test
mov
mov
or
mov
inc
lret
push
push
jno
adc
xor
repz
xor
shl
fcmovu
addr16
pushf
adc
adc
test
xor
xor
daa
pop
adc
xor
jle
pop
ss
add
xchg
pop
insl
test
adc
dec
arpl
push
sub
push
xor
push
add
into
adc
or
mov
repz
clc
inc
out
xchg
scas
mul
aad
rorl
and
call
lret
xor
push
cmp
ljmp
notl
sub
jmp
div
push
pushf
fwait
in
pop
jle
stos
inc
pop
daa
pop
in
push
cltd
jb
sub
ror
out
sbb
pop
loop
sarb
fstps
sub
addr16
inc
mov
icebp
mov
lcall
mov
leave
mov
push
inc
movsl
je
hlt
push
imul
add
or
out
adc
call
dec
inc
rolb
orl
and
cmp
bound
outsb
aas
fcmovbe
mov
xchg
lock
xlat
cmp
add
jl
dec
jbe
pop
ret
or
sub
dec
das
add
xchg
aam
call
pop
xchg
and
testb
call
leave
dec
mov
adc
add
xor
out
cmc
xor
mov
or
cmp
cmp
xchg
sbb
popf
aas
imul
les
add
das
loop
adc
inc
inc
andl
test
adc
stc
test
add
or
hlt
lods
mov
ret
test
out
or
mov
repz
hlt
xor
adcb
fwait
pusha
dec
js,pt
sub
inc
fs
push
mov
inc
xor
push
mov
pop
dec
or
lock
aad
pop
xor
mov
stos
cmpsl
dec
and
jae
sbb
jae
inc
out
xchg
push
sub
xchg
imul
jmp
mov
aas
adc
lea
pop
xor
stos
das
fcmovnu
push
orb
cltd
jge
lds
fldl
add
lods
dec
popa
add
out
adc
pop
lret
aas
inc
cmp
mull
sbb
mov
shrl
out
rol
cmp
mov
in
dec
xor
mov
jb
mov
iret
mov
lods
adc
std
je
jno
subb
jl
adc
sahf
les
mov
fwait
adc
iret
adc
inc
dec
adc
inc
xor
pop
inc
jle
mov
and
push
test
mov
ss
jmp
add
mov
add
pop
loopne
pop
push
jne
adc
pop
sbb
mov
movsb
int
popa
pop
sub
lds
xor
imul
into
push
pop
mov
je
xchg
mov
dec
inc
jbe
fwait
ljmp
cmc
inc
aaa
repz
inc
inc
das
cmp
and
add
movsl
sahf
lds
jns
push
jnp
cmp
mov
imul
popf
lods
imul
pop
arpl
xor
sbb
inc
jle
push
int
mov
int3
int3
stc
enter
xlat
int
mov
jbe
push
pop
xor
insl
test
insb
add
push
popf
imul
movsb
in
lods
pop
in
lahf
pop
test
lcall
in
into
mov
mov
ljmp
cmp
push
dec
xchg
les
sbb
push
mov
fidivs
sbb
iret
adc
testb
lahf
ds
xchg
fcompl
loop
jecxz
fistps
in
sbb
jne
aad
jae
mov
pop
shlb
cmp
adcb
jle
testb
xor
stos
inc
cltd
pop
mov
xchg
stos
push
les
push
into
ja
mov
push
xchg
cmp
jl
icebp
aaa
rorb
popaw
mov
aad
add
add
call
jne
test
push
adc
xchg
out
bound
xor
cli
loopne
push
dec
xlat
adc
pop
push
out
cmp
test
mov
ds
mov
insl
les
lea
sbbb
mov
jno
xchg
jge
mov
push
add
int
test
addl
stc
ds
scas
aam
xchg
xor
arpl
or
cmp
jg
inc
or
das
mov
int
ret
or
sbb
mov
or
xchg
pop
cwtl
add
out
push
xchg
cltd
imul
jnp
pop
mov
push
add
cli
xlat
jmp
cmp
mov
mov
les
pop
aad
enter
push
xchg
mov
sbb
cmp
pushf
jnp
pop
sbb
enter
xchg
add
push
test
xorl
popf
sbb
xchg
jl
out
pop
pop
xchg
mov
and
dec
lcall
imul
ds
pop
leave
cmp
mov
repz
les
dec
stos
dec
jl
push
add
push
add
add
pop
in
aam
imul
xor
jbe
mov
xchg
outsl
adc
pop
mul
pop
aas
jae
subl
std
clc
adc
inc
js
pop
xchg
and
das
out
sbb
sti
mov
and
add
pop
lods
sub
imul
mov
arpl
int3
pmullw
jp
xchg
fs
mov
test
or
inc
push
mov
mov
or
mov
scas
sbb
xchg
adc
push
lods
sub
fwait
movntps
insl
sti
addr16
push
mov
cmc
mov
fs
jle
pop
into
aaa
inc
mov
sub
mov
scas
sub
stos
adc
inc
push
pushl
pusha
jns
fmull
ljmp
mov
ja
aad
push
sbb
inc
fdivl
dec
jl
mov
adc
repnz
pop
shrl
clc
mov
cmpsb
adc
cmc
lret
dec
pop
in
inc
sti
rorb
stc
jno
arpl
out
fdecstp
imulb
scas
mov
js
test
inc
fisubs
ss
or
rcll
sub
add
mov
dec
sbb
je
adc
ret
adcb
dec
in
mov
cmp
mov
imul
mov
cwtl
jmp
and
ljmp
mul
loopne
stc
fnstsw
lret
bsr
dec
and
cmp
sub
sbb
sbb
mov
cmpsb
out
test
cmp
lret
xchg
stc
enter
rolb
mov
xor
je
shlb
shrb
movlps
xor
mov
jl
xchg
les
fisubl
lret
pop
inc
jno
mov
aas
ds
xchg
ret
nopl
xor
jmp
subb
arpl
xchg
adc
xchg
rcrb
jle
jo
arpl
fisubs
aam
sub
aas
jl
adc
push
push
add
lahf
ss
hlt
push
xor
js
mov
adc
jg
nop
mov
dec
push
insl
xchg
ljmp
scas
movsb
out
push
jbe
jb
inc
jne
ret
shl
imul
ret
sub
imul
in
popa
mov
cwtl
xchg
pop
mov
mov
rclb
outsl
pop
xor
or
daa
lods
gs
inc
ss
push
fstps
dec
jne
and
les
aam
and
inc
or
mov
ss
daa
in
insl
in
fnstcw
dec
xor
mov
testb
mov
mov
xorb
mov
lcall
cld
in
subl
jae
pop
std
xor
push
sub
loope
ljmp
insb
stc
ds
or
cmpsl
push
push
mov
sub
fbld
test
cli
cmp
mov
in
mov
insl
xor
dec
mov
jae
shll
bound
lret
or
dec
pop
add
movsb
mov
xor
pop
mov
mov
jl
jmp
and
dec
lods
jno
push
daa
mov
in
dec
fs
add
mov
lcall
jge
adcl
mov
ret
mov
xchg
cwtl
mov
mov
ret
roll
xor
out
and
dec
lret
lds
stos
cwtl
dec
lret
add
mull
fidivs
lods
xchg
cld
fisttpl
xor
mov
ljmp
xlat
pop
pusha
imul
add
jge
stos
dec
test
push
lret
rol
or
out
pop
lods
xor
std
push
js
mov
mov
jmp
add
sub
icebp
arpl
or
jle,pn
cwtl
and
push
loope
lcall
cltd
gs
lret
xor
push
cmp
jns
and
cli
dec
andb
mov
push
ds
mov
sub
adc
jno
mov
cmc
fistl
xchg
jne
sbb
mov
mov
ds
mov
jmp
stc
xlat
lods
adc
dec
or
add
dec
mov
popa
xor
lret
xchg
int3
aas
loop
sub
xchg
jnp
shlb
scas
jg
mov
pop
xlat
movsb
mov
out
mov
out
mov
cmc
out
fidivrl
inc
idiv
ss
mov
xchg
or
jae
push
jge
bound
insb
sub
pop
mov
lret
inc
out
or
cmc
pop
adc
mov
pop
nop
sub
mov
out
cmp
ja
cmp
dec
repz
cltd
test
pushf
pop
pop
iret
sbb
ds
mov
sbb
pop
les
lret
mov
jecxz
pusha
shlb
mov
stc
fwait
bnd
imul
dec
mov
mov
stos
add
adc
test
inc
imul
icebp
jmp
jnp
xchg
in
mov
adc
testb
rorl
icebp
inc
mov
xor
add
push
aam
mov
lret
test
xchg
mov
mov
lods
inc
fildl
xchg
in
mov
push
das
xchg
jno
xchg
cs
jecxz
mov
jmp
lods
lea
xchg
mov
dec
adc
rol
filds
and
imul
mov
popa
mov
cld
mov
loope
mov
xchg
ja
cmpsb
push
int
mov
orb
in
add
cmp
lds
enter
icebp
fsubs
pop
cmp
cmp
dec
or
pop
inc
mov
jmp
jb
aaa
add
add
pop
mov
out
idivb
push
int
or
mov
mov
shr
xchg
ljmp
js
add
and
jmp
int
sbb
mov
stos
jg
jg
jb
jns
arpl
test
leave
jecxz
inc
or
pop
ljmp
stos
popf
stos
jp
inc
mov
pop
jno
icebp
into
scas
mov
add
mov
sbb
and
jp
das
fs
lcall
jmp
inc
cmc
mov
jo
xchg
faddl
pop
mov
inc
lea
repnz
push
mov
xor
popa
sub
cmp
xchg
jnp
aaa
cwtl
rclb
mov
cli
cmp
lds
mov
in
push
lea
das
lcall
pusha
push
gs
or
jg
test
mov
sbbl
cmc
popa
pop
xchg
jno
std
lret
mov
shrl
lret
movsl
in
pop
mov
call
mov
xchg
iret
push
cmc
and
ret
and
jno
lret
ss
inc
daa
xor
sub
sti
lret
sub
imul
insl
dec
xchg
stos
push
inc
mov
sub
orb
jge
shl
adc
cmp
jge
scas
in
ret
sbb
stc
arpl
xchg
sbb
lret
arpl
cmpsb
adc
wbinvd
cmp
adc
inc
daa
fcmove
adc
push
mov
dec
mov
fsts
mov
bound
pop
pop
add
pop
mov
cmc
out
adc
mov
addb
aas
sti
mov
cwtl
int
push
sbb
add
jae
incl
into
mov
and
add
pop
mov
mov
dec
enter
push
sub
std
mov
adc
popa
fsincos
mul
stos
jb
xchg
cmpsb
lds
pop
in
icebp
insl
jl
mov
jnp
daa
cmp
xlat
xlat
push
mov
mov
test
add
pop
dec
lea
fwait
aam
adc
xor
bound
movsl
xor
loope
daa
aad
sub
out
jle
popa
xchg
in
sbb
sub
xchg
es
sub
adc
push
cmp
mov
cmp
aaa
je
jle
sahf
cli
xor
xor
inc
cmc
mov
fildll
sub
popa
sbb
mov
in
push
push
cmp
cmp
sbb
out
fsts
xchg
lea
sahf
bswap
and
mov
mull
jmp
pop
cli
pop
adc
sub
adc
aaa
movsb
sub
aad
mov
popa
sub
or
lret
jnp
dec
lock
shrb
mov
cmp
lods
ret
lahf
or
adc
lods
insb
negb
sbb
aas
testl
test
aam
loopne
mov
leavew
imul
inc
out
in
arpl
insl
jno
adc
out
sub
movsb
std
push
mov
sbb
hlt
mov
ds
pop
cld
cmc
mov
mull
rclb
cmc
or
dec
call
rcr
xchg
sbb
enter
sub
push
or
push
test
inc
in
mov
push
xchg
mov
iret
popa
sub
pop
ja
cli
jl
add
xchg
lret
fcmovbe
push
mov
popf
scas
fistpll
ficompl
adc
out
wbinvd
cmp
jge
xor
or
mov
adc
mov
cmp
cli
or
popf
imul
mov
loopne
inc
ret
cmp
xor
xor
cltd
dec
mov
stos
mov
sbb
aaa
mov
xchg
jmp
mov
jo
inc
cmp
cmc
pusha
cmpsb
push
testb
orl
xchg
push
or
mov
or
nop
push
lret
xchg
shl
push
and
push
xchg
dec
inc
dec
mov
xor
imul
cltd
movsl
lods
sbb
insb
ds
mov
xchg
arpl
mov
cwtl
in
push
xor
xchg
lods
inc
and
jae
sub
outsl
and
movsb
xchg
pop
xchg
or
mov
pop
xor
mov
inc
lret
sbb
popf
enter
mov
ds
in
pop
jmp
fistpl
or
psrlw
adc
aam
push
aaa
imul
and
int
jne
ja
cmpsl
mov
popf
jns
insb
or
lcall
les
std
xchg
hlt
and
gs
mov
inc
repz
pop
mov
mov
pusha
xor
jb
dec
into
mov
or
cwtl
push
xor
imul
mov
sbb
addr16
cmp
out
dec
dec
jge
lret
gs
sbb
or
fadds
clc
jbe
repnz
ss
mov
pushf
xchg
dec
mov
sbb
mov
jne
or
lods
sub
fbstp
mov
pop
ret
idivb
jne
std
sub
lret
xorb
in
pop
or
jne
mov
mov
xchg
icebp
divl
mov
mov
cmp
pushf
pop
out
xor
push
inc
sar
push
test
cmp
pop
xlat
jle
inc
call
ret
aas
fwait
stos
mov
lods
jnp
or
mov
add
aam
imul
xchg
negb
dec
mov
cmc
sub
loop
popf
clc
in
jne
xchg
fwait
dec
subb
lcall
lods
pop
test
push
jmp
cmc
mov
es
mov
into
fs
mov
in
mov
and
es
fpatan
adc
je
xchg
test
cli
loop
dec
adc
and
cmp
out
lods
push
mov
lds
jp
sub
imul
push
cmp
fs
test
add
mov
lea
fstp
mov
fidivl
sahf
cmp
pusha
insl
pop
fdivrl
mov
inc
jg
push
adc
ficoml
leave
add
fmul
mov
sub
xchg
pop
fcom
lcall
fst
mov
dec
or
mov
mov
sbb
pop
sub
subl
add
dec
out
cmpsl
cmpl
ror
and
and
pop
pop
cld
ljmp
mov
add
push
shll
pop
pop
call
cmp
push
arpl
ds
mov
sbb
xor
loopne
pop
dec
stos
and
ss
lea
adc
hlt
jp
mov
pusha
pop
xchg
push
cmpsl
push
push
out
mov
mov
mov
fs
popf
and
das
pushf
stos
in
mov
imul
or
enter
push
adc
lea
sbb
lods
popl
subl
jmp
lret
add
rcr
push
in
cmp
dec
rorb
pop
push
push
mov
fwait
or
jge
ret
xor
pop
negb
movsl
enter
push
jmp
insb
loopne
imull
divb
dec
arpl
aas
cmp
mov
jns
test
xor
pushf
insl
outsb
icebp
sbb
mov
cmp
jg
push
mov
inc
rorb
shrl
pushf
dec
dec
adc
jne
push
push
lds
lock
fldl2e
pop
dec
jae
test
inc
lret
outsb
push
nop
push
pop
xor
stos
add
mov
and
loope
lea
jmp
rorl
stos
dec
scas
lea
sbb
arpl
dec
out
cmp
enter
mov
inc
inc
icebp
aas
push
inc
mov
clc
icebp
lods
scas
in
popf
xchg
filds
jno
xchg
and
daa
add
pop
dec
push
hlt
sub
jecxz
add
inc
cmp
xchg
cwtl
inc
cwtl
mov
push
pop
movsl
inc
pop
mov
sbb
xorb
shrl
fstps
jge
xchg
pop
insl
imul
out
adc
adc
jmp
pop
mov
dec
push
xchg
dec
je
mov
js
jge
out
cmp
fwait
loop
out
xchg
outsl
cmpsl
cmp
stos
lods
xchg
inc
cmp
mov
fcmovnu
fisttps
mov
movsb
add
pop
fwait
jae
shr
sti
or
xchg
mov
cltd
xor
addr16
or
nop
jns
fbstp
scas
mov
or
pusha
aaa
bound
or
mov
jo
inc
cld
addb
pushf
daa
lret
xor
xlat
sub
fwait
mov
mov
test
xor
inc
iret
xchg
xchg
jg
push
sub
pop
jnp
ret
pop
pop
xchg
cmp
fstpl
imul
add
add
pushf
sahf
ljmp
mov
aas
jae
push
in
xor
mov
imul
xor
or
inc
dec
add
dec
xchg
inc
in
push
mov
cli
or
insb
scas
dec
pop
nop
lods
lds
xchg
lcall
add
lds
jns
push
cmp
ret
psrld
test
scas
pop
pop
shll
lret
enter
xchg
in
mov
xor
jmp
jo
cmp
sar
sub
jb
xor
mov
sub
rorl
pop
mov
dec
outsb
mov
out
mov
and
pop
push
xor
int
push
cmpsl
ret
clc
in
out
rol
in
cmp
mov
mov
cmp
mov
pop
imul
bnd
mov
cmp
sbb
dec
inc
shlb
or
fdivs
shr
rorb
pop
adc
fcompl
jge
inc
subb
jno
push
xor
push
push
sub
add
or
jno
cs
cmc
mov
mov
mov
and
adc
pop
ljmp
movsl
ss
lock
dec
pop
test
int3
ja
icebp
aas
adc
pop
rcll
aaa
add
ja
jbe
pop
inc
xor
dec
pop
test
in
into
gs
push
jmp
ret
scas
sysret
mov
and
inc
aaa
arpl
cmp
sub
and
ret
dec
sbb
mov
push
imul
push
pop
sbb
rclb
inc
add
loop
mov
aaa
sbb
testb
rol
mov
push
push
xor
push
stos
push
mov
sti
outsb
inc
cmpl
fmuls
cmc
ljmp
mov
mov
and
pop
sti
imul
outsb
mov
jb
lret
stc
lret
sbb
aas
add
ss
push
mov
aaa
mov
jbe
mov
inc
xor
cmp
push
cmc
push
pop
stc
mov
xor
pop
jbe
push
or
imul
jecxz
jno
xchg
jns
or
xchg
or
hlt
hlt
add
push
jg
dec
aam
dec
xchg
or
cmpsl
pusha
popf
or
aas
xor
xor
adc
mov
sbb
cld
shlb
ljmp
movsb
cmpsl
jecxz
sub
mov
mov
push
in
repz
mov
lods
outsl
ud0
dec
and
and
and
xor
in
je
insb
mov
mov
xor
jp
pop
dec
hlt
mov
mov
and
test
dec
fs
rcl
shlb
mov
xlat
dec
push
jb
rcl
mov
add
add
icebp
cmpsl
mov
loope
xchg
jmp
out
jae
pop
in
adc
sbb
push
and
mov
cmc
mov
dec
imul
cmc
or
cmp
cmp
lods
mov
cmpsb
aad
push
aam
xchg
fdivs
inc
xlat
clc
pop
iret
sahf
shlb
jae
jae
mov
jae
push
pop
sbb
popa
mov
pusha
les
data16
shlb
fnstsw
cmp
popa
sbb
fadds
xorl
loope
and
testl
ret
xor
mov
dec
mov
test
mov
call
lds
andb
cs
add
xchg
loope
sbb
ret
xchg
mov
sbb
xlat
or
inc
jae
mov
adc
ret
mov
sbb
pusha
rorl
scas
mov
pop
jle
adc
insb
inc
lahf
jle
xchg
fidivs
sbb
mov
or
fisttps
cmp
arpl
adc
sbb
lods
ret
cmpsb
js
mov
jb
imul
outsl
stos
ficoml
xchg
lret
mov
inc
ljmp
mov
dec
inc
int
addb
cmp
and
push
nop
sub
lock
push
pop
or
in
mov
hlt
sub
not
xor
dec
jne
into
mov
mov
and
push
mov
ljmp
dec
pop
inc
out
mov
inc
xchg
shrl
inc
xor
jo
mov
xchg
xchg
xchg
arpl
fbld
xchg
mov
sbbl
cmp
hlt
out
sub
pop
fs
lcall
outsb
cmp
xor
sbb
loop
cmp
fsubr
iret
push
inc
mov
cmp
jb
ret
cmp
dec
or
xchg
xchg
outsb
lcall
mov
dec
subb
jle
in
mov
stc
js
repnz
popf
sub
jnp
aas
aam
cmp
aas
jo
stc
cmp
fwait
addr16
jl
fdivs
into
sub
cmp
push
loope
add
fisttpll
mov
jg
iret
push
xchg
std
and
mov
shl
lods
rolb
stos
cmp
mov
in
loope
lods
out
and
das
sti
test
cld
test
mov
xchg
test
mov
in
aam
in
xchg
ljmp
jb
or
in
addb
scas
jg
fildll
inc
push
loopne
push
mov
negb
rorl
or
lret
adc
out
and
dec
test
cmp
cmp
cwtl
mov
ljmp
aas
jecxz
and
jecxz
push
jae
imul
cmpsl
and
push
mov
jae
ja
jle
xchg
mov
mov
orb
loope
fwait
inc
gs
daa
sbb
mov
xorl
pop
pop
and
aas
adc
fwait
call
pop
add
xor
xchg
add
insl
mov
dec
mov
les
xor
inc
dec
pop
jae
xor
pop
outsl
es
adc
dec
and
jle
dec
mov
shll
mov
setns
xchg
push
lcall
adc
push
pop
adc
es
lods
dec
sub
add
add
mov
dec
push
push
cmpb
mov
in
mov
decl
stos
je
popa
cli
adc
and
pop
or
mov
out
mov
mov
adc
insb
sub
inc
fsubrl
loop
push
mov
xor
mov
adc
adc
imul
aad
rorl
inc
push
imul
cmpsb
sub
cmc
xchg
pop
or
adc
cwtl
in
or
in
lods
adc
out
test
test
jecxz
dec
dec
and
lds
lock
mov
dec
cmpl
xorl
fldl
mov
jl
out
jne
jo
bnd
aam
movsl
and
mov
dec
adc
adc
and
adcl
pop
std
fmuls
scas
lods
jns
pop
mov
ret
and
add
and
add
in
mov
lahf
inc
imulb
dec
xchg
jb
xchg
test
int
pop
in
mov
data16
adc
push
mov
movsb
mov
clc
divb
add
loop
pop
cmpb
pushf
cmc
sub
pop
inc
jp
loop
jmp
push
mov
ret
mov
sahf
add
sbb
jno
rcrb
std
pop
xchg
push
ss
dec
fs
les
fidivl
lea
repz
xchg
addr16
sbb
shll
cmpsb
idivl
and
shrb
popf
fsts
xor
pop
jecxz
mov
imul
and
inc
sub
sub
lods
jns
insl
pop
nop
xchg
cltd
xchg
imul
out
test
pop
mov
aaa
rorl
addb
stc
dec
push
jb
test
or
je
sbb
add
pop
and
loopne
dec
dec
out
mov
clc
xchg
movb
mov
dec
pop
sub
pop
inc
popf
aam
loope
jge
cld
mov
int3
aad
mov
jnp
adc
ret
je
addb
sub
shlb
mov
dec
inc
not
ret
add
mov
inc
leave
into
xor
fisubrs
aaa
daa
xchg
popf
stc
enter
adc
ss
mov
pop
dec
rolb
cli
jecxz
xor
xchg
xchg
sbb
dec
pusha
loopne
mov
and
lods
aaa
dec
mov
je
and
adc
xchg
mov
loopne
mov
mov
cmp
push
jg
imul
out
xchg
adc
pop
mov
fxch
outsl
shr
mov
add
add
xor
decb
mov
xchg
mov
lods
xchg
jg
mov
test
jne
pop
xchg
fcomi
ljmp
or
inc
lds
push
xor
idivb
gs
lret
ret
pop
gs
adc
ss
cltd
xor
iret
insl
xchg
xorb
call
add
jge
faddl
pop
lret
cmp
xor
lods
inc
and
in
arpl
hlt
in
and
aas
cmovl
jge
or
sbb
loop
sub
push
xor
fiadds
clc
inc
fidivrs
mov
imul
add
adc
lret
or
or
aas
jns
test
pop
mov
push
cltd
push
addr16
ret
gs
inc
fdivp
jbe
jecxz
rcll
xor
loopne
in
adc
lret
rol
loope
and
lods
out
jp
out
enter
std
push
loope
daa
test
jnp
mov
pusha
dec
fistpll
out
push
roll
outsb
cmc
push
jns
dec
pop
inc
xor
roll
push
inc
pop
adc
aaa
mov
enter
ror
lods
adc
leave
dec
cmp
lret
es
mov
ret
mov
daa
std
imulb
xorb
test
es
pusha
cmc
mov
sub
inc
xor
mov
dec
nop
cli
popa
scas
jecxz
add
xchg
cli
xchg
push
jne
push
sbb
gs
pop
addb
ficoml
mov
mov
jecxz
pop
push
mov
gs
rcr
adc
bound
cwtl
sbb
mov
in
and
rorl
xchg
fistpl
mov
add
leave
filds
aad
iret
mov
testb
pop
jge
and
xchg
push
stc
ds
jp
out
pop
adc
mov
cmc
scas
fwait
out
mov
hlt
shrb
imul
jnp
jno
sub
inc
ss
push
shl
mov
dec
scas
movsb
and
jmp
pop
es
lods
pop
testl
adc
stc
cmpsl
into
add
rclb
lock
jmp
lea
aaa
sbb
add
rcr
pop
xchg
or
fistpl
popa
dec
pop
add
hlt
inc
push
cli
insb
rep
pop
stos
pop
or
sti
imul
aam
sub
decb
dec
sbb
call
mov
sub
repnz
cmp
push
jae
cmpsb
dec
sub
loope
das
sarl
enter
test
arpl
arpl
pop
adc
scas
sarl
cmp
xor
jle
lods
inc
jb
outsl
push
stos
out
lea
xchg
jno
stc
test
cs
cs
jge
enter
repnz
or
pop
push
in
dec
pop
lods
push
shll
decb
push
js
or
lods
push
data16
jae
data16
dec
adc
popa
mov
sarb
push
adc
aaa
sbb
mov
sub
pop
lret
aam
out
scas
test
push
lea
or
out
int3
mov
mul
add
adc
inc
jno
lret
dec
add
mov
mov
test
mov
ja
push
adc
jecxz
sub
fmull
lds
shrb
gs
stos
out
cld
xor
lds
mov
dec
addr16
xchg
or
cvtpi2ps
lahf
inc
xchg
mov
ret
cld
daa
jle
lods
stos
pop
sbb
inc
pop
into
pushf
mov
enter
subl
inc
stc
adc
mov
mov
mov
in
cltd
pop
adc
cli
fimull
jp
xlat
je
mov
rclb
loope
out
push
loopne
pop
out
mov
rorl
mov
fsubl
fs
add
sti
jl
flds
or
repnz
add
cmp
test
inc
or
aam
xor
jnp
addr16
ret
jle
lods
jg
ja
push
pop
jne
jno
testl
roll
pop
lcall
sub
jno
sub
dec
xchg
jp
lcall
pop
stc
std
xchg
loope
add
andl
lods
adc
cmpsb
in
stos
test
leave
outsl
mov
pushf
and
jae
fimull
call
loop
stos
mov
cmp
movsb
push
rclb
and
xor
xorl
dec
jae
ljmp
in
cmp
mov
mov
lret
int
push
jae
cmp
inc
mov
testb
lods
mov
mov
dec
rorl
inc
pop
outsb
sub
jl
and
push
int3
in
lret
nop
ss
stos
cs
lret
push
clc
sub
adc
mov
adc
dec
hlt
mov
leave
inc
adc
and
movsb
lcall
nop
shrb
rcrb
lcall
test
lods
imul
mov
lods
cltd
stos
leave
aas
cmpsl
lcall
dec
aaa
fimuls
inc
push
push
aam
jnp
jo
shlb
outsl
push
push
stos
mov
cli
out
xor
xor
dec
fsubrl
pushf
cmp
or
mov
push
jo
bnd
cmp
or
xorb
cmp
mov
test
in
mov
movhps
shll
xchg
xor
dec
daa
and
jmp
mov
lock
sbb
pop
inc
push
dec
xlat
stos
and
sbb
in
mov
repz
jecxz
hlt
rol
std
sbb
or
jae
add
enter
xor
std
imul
imul
dec
cli
rcl
sub
add
ret
adc
dec
xchg
rcll
cmp
inc
sub
mov
jl
mov
pop
in
into
jge
cli
imul
jmp
push
fwait
push
mov
aam
xor
imul
lcall
aas
adc
inc
bound
sbb
jle
pop
or
xchg
pop
arpl
jb
jo
mov
fistpll
push
hlt
lods
mov
loope
push
push
push
mov
jae
jmp
out
dec
daa
pop
enter
test
iret
adc
or
xor
sti
fstps
mov
cmp
not
aaa
xor
ss
pop
xor
cli
loop
xor
push
cmp
jbe
dec
aad
xchg
lret
xor
inc
mov
push
dec
and
adc
cmpsb
xchg
push
mov
mov
insb
imul
and
push
sbbb
enter
adcb
pop
into
jns
jecxz
sub
jle
push
fistps
push
xchg
das
lahf
and
mov
and
push
stos
in
sbb
push
flds
jbe
in
adc
lock
es
inc
add
cld
pop
test
jns
gs
js
dec
jecxz
dec
ljmp
daa
ja
and
movsb
adc
xor
mov
movsl
cmp
int
lcall
pop
adc
and
and
inc
pop
lds
lea
cs
rclb
sbb
add
jbe
jmp
insl
xchg
fstps
mov
and
outsb
lret
das
cli
insb
dec
jecxz
popa
xorl
sub
push
je
pop
and
aad
ret
cmp
cmp
arpl
loope
arpl
lds
cltd
sub
mov
ds
mov
mov
outsb
or
sahf
cmp
cwtl
adc
cli
mov
push
sub
movsl
cmp
push
repz
out
dec
dec
sub
xor
mov
lahf
pcmpgtb
cltd
lods
lea
loopne
stc
dec
mov
test
dec
push
nop
dec
pop
call
movsl
dec
jmp
iret
xchg
aaa
sbb
mov
mov
lock
cld
xchg
rorl
rorl
dec
fcompl
and
loop
andl
cmp
out
push
inc
das
add
dec
add
and
cmp
add
popa
inc
cmp
es
jo
into
icebp
mov
fcomip
in
adc
ficomps
push
fnstenv
and
sbbb
and
jo
pop
scas
nop
push
pop
cmp
xchg
call
jge
popl
jbe
iret
std
int3
sbb
sahf
mov
scas
dec
lea
cs
pop
int
ss
inc
pushl
or
hlt
pop
loopne
xchg
mov
sbb
sahf
loope
sub
sub
rorl
push
push
jae
xchg
pop
mov
movl
subb
std
pop
sti
xor
mov
lahf
iret
in
out
leave
test
and
sbb
xlat
int
xchg
es
add
and
add
xor
push
idivb
shll
xor
cmc
movsb
ret
pushf
pop
cmp
nop
sub
lcall
pop
and
push
jmp
ds
popa
push
in
and
test
mov
jae
scas
cmp
popf
mov
xchg
jnp
sub
jle
cmp
push
jbe
xchg
ret
out
ret
pop
out
cmpsl
cld
popf
int3
adc
dec
imul
fistl
sub
jnp
aaa
enter
jg
jae
movsb
cli
inc
dec
inc
rcl
push
pop
pop
pusha
shrl
add
inc
cmpsb
add
push
sbb
add
sub
test
sbb
loop
cmp
les
cli
mov
repz
fistl
cs
push
cmpsl
outsl
add
int3
daa
movsb
or
mov
sub
pop
pop
rol
and
pop
sti
dec
inc
mov
jo
push
cli
cmpsb
push
insb
fldl
aad
mov
adc
lods
mov
in
sbb
jnp
cmpsl
adc
insl
mov
push
jl
int
fidivrl
icebp
push
sbb
and
mov
cmp
cli
leave
xchg
scas
sarl
lock
incb
test
mov
fs
push
jns
push
mov
adc
out
scas
xlat
inc
cmp
add
mov
fldl
mov
fucomip
in
push
out
jmp
mov
cmp
pop
inc
or
adc
jo
popf
je
xchg
pop
in
jno
jl
iret
popa
gs
sub
inc
push
rcrl
mov
xchg
dec
outsl
dec
mov
loopne
fmulp
xor
sbb
lea
jl
data16
fisubrl
pop
stos
inc
sbb
shrb
shll
rorb
js
pop
fcmovb
stos
add
cmp
repz
fmuls
xor
jmp
iret
adc
fstpt
lret
aam
fisttpll
fwait
adc
inc
stc
push
mov
sbb
imul
mov
inc
adc
mov
add
loope
fwait
cmp
xchg
repnz
mov
ja
push
inc
push
test
mov
push
cmp
pusha
enter
repnz
in
dec
push
mov
jmp
or
cmp
in
lahf
test
and
mov
xchg
cmp
mov
sti
out
out
scas
imul
popa
shlb
call
pushf
dec
sub
iret
inc
loopne
clc
test
mov
das
mov
push
gs
sbb
lods
push
xor
xchg
shll
push
jg
adc
cwtl
leave
enter
cs
fcoml
sbbb
adcl
sbb
fldt
cltd
pop
jo
enter
fs
imul
sbb
add
xor
addr16
repz
push
sti
test
push
stos
mov
enter
leave
adc
orl
iret
icebp
add
push
push
and
mov
out
sahf
outsl
xchg
mov
dec
mov
sbbb
push
arpl
imul
or
das
xor
push
mov
and
cmp
lahf
in
cmpsb
shl
stos
out
sbb
andb
inc
ljmp
ds
leave
xchg
dec
mov
movsb
and
scas
xchg
test
popa
xchg
pusha
lods
cmp
int3
cli
jb
xchg
out
icebp
cmc
inc
sbb
enter
lds
pop
iret
cmp
fisubs
inc
pop
push
and
sub
sbb
mov
add
sbb
mov
push
cmc
push
cmc
sbb
dec
inc
testb
jp
mov
or
jg
sbb
cmp
inc
inc
hlt
icebp
daa
aam
stos
xchg
jmp
mov
add
fmull
cmpsb
je
mov
pop
jp
cmp
cmp
ljmp
jae
filds
leave
xchg
aaa
xchg
sbb
and
fwait
test
add
adc
aaa
or
sbb
loopne
push
push
loopne
pop
aas
and
call
cmp
ret
pop
shll
rolb
fdivrl
mov
dec
adc
out
jbe
test
dec
call
in
rol
jno
mov
mov
cmp
mov
es
pushf
jecxz
mov
adc
add
push
adc
mov
comiss
bound
add
jmp
addl
and
mov
mov
iret
mov
js
cpuid
test
js
outsl
test
sbb
sbbl
cmp
and
cwtl
mov
xchg
push
cmp
lret
cmpsl
or
mov
cmp
pop
jmp
js
xchg
mov
adc
inc
adc
sub
es
addb
or
xchg
jle
out
or
add
in
sbb
xchg
sbb
or
add
andb
pop
mov
sbb
repz
jecxz
mov
cmpsl
adc
pop
cmp
aam
and
mov
dec
sub
test
loop
push
decb
out
pop
adc
loopne
sub
mov
pop
cltd
add
pop
jbe
pop
sbb
xchg
mov
sub
dec
mov
jecxz
neg
testb
pop
shlb
ds
cwtl
pop
lret
pusha
or
inc
icebp
rcl
jecxz
mov
or
ret
or
divl
adc
into
dec
cmp
popf
xor
xor
iret
outsl
fwait
sarb
push
push
decb
sbb
js
add
xor
jecxz
test
mov
dec
sub
outsl
clc
or
mov
push
cli
in
adc
adc
testl
xor
sub
jg
xor
fwait
scas
mov
mov
cmp
jmp
std
cmpsb
and
sub
cmp
fbstp
scas
in
jo
out
data16
sub
lods
gs
test
xchg
outsb
cli
mov
add
cmpsb
fnstsw
imul
add
dec
sti
jp
push
sub
lods
adc
and
adc
arpl
pusha
cmpsb
rcrl
jns
cli
or
sti
sahf
aam
push
shrb
out
add
cmp
mov
dec
add
std
dec
push
pop
mov
xorl
popf
and
shlb
cvtps2pd
shrl
pop
sarl
xorl
xor
or
sbb
push
and
gs
addr16
sti
inc
arpl
jb
pusha
mov
cmp
push
mov
cs
jmp
sbb
std
and
inc
or
lret
or
rcll
aad
pop
cld
aad
lret
in
mov
bound
xor
adc
add
out
andb
push
jns
pushf
pop
xchg
lahf
pop
out
push
jmp
jb
fsub
cmp
jecxz
pop
pop
iret
orb
mov
xchg
push
hlt
inc
mov
ja
pop
pop
xchg
lock
insb
movsl
add
pop
pop
or
aam
pop
aad
rclb
sbb
inc
adc
dec
clc
imul
jl
pop
mov
adc
sub
adc
dec
rorl
inc
adc
xor
jne
inc
mov
cmp
fcomps
push
bnd
in
stos
inc
sub
push
mov
in
cli
in
outsb
or
std
mov
xchg
repnz
loopne
cmp
scas
cmp
dec
test
xchg
aas
fnstcw
and
les
sbb
mov
pop
and
mov
aam
mov
jp
adcb
push
je
stos
lret
sbb
push
mov
jge
js
jo
call
mov
add
out
enter
mov
jecxz
mov
mov
out
push
out
adc
arpl
adc
in
cltd
pop
pop
pushf
pop
jae
xor
imul
adc
mov
add
add
dec
jb
jecxz
mov
bound
pop
push
pop
repz
jo
pop
and
push
hlt
popf
or
leave
sar
push
aas
iret
and
add
aas
in
ljmp
sbb
fisubrs
jo
push
stos
and
mov
sbb
push
jl
xchg
xchg
divb
mov
mov
std
movb
ret
scas
xor
stos
xor
pop
addr16
les
jae
and
nop
mov
inc
sub
inc
fdiv
sbb
xchg
mull
fwait
or
adc
idivb
xchg
mov
jae
out
aam
cwtl
cmp
aaa
push
icebp
cwtl
pop
shrd
xchg
pop
inc
mov
add
cmp
jns
or
je
pop
in
repnz
jle
jnp
adc
mov
jl
pushf
jne
mov
icebp
int3
mov
dec
roll
push
es
rolb
arpl
ret
cmp
inc
hlt
sbb
jno
pop
stos
cmp
mov
int3
fisttpl
xchg
xchg
int
xchg
push
inc
faddl
ret
pop
faddl
pop
xchg
sbb
mov
mov
cmp
inc
fwait
aam
in
icebp
mov
les
pop
popa
push
pop
add
ljmp
ret
mov
in
dec
gs
xchg
push
inc
scas
lret
jge
mov
push
in
pop
cmp
xor
out
pop
xor
jp
adc
xchg
cwtl
pop
cmp
ljmp
insl
add
scas
cmp
addr16
jle
jnp
out
icebp
add
jae
jge
bound
jle
cmp
add
mov
pop
pop
imul
cwtl
sbb
aas
insl
sub
adc
sub
mov
cld
es
test
loopne
inc
xchg
pop
jmp
push
sbb
frndint
pop
push
sbb
push
lret
push
fstp
jmp
loope
sarl
xor
test
pop
push
jnp
xchg
or
push
roll
test
scas
inc
test
pop
out
ret
ss
fwait
loop
xchg
idivl
inc
adc
cld
in
add
repz
push
pusha
dec
or
test
arpl
flds
lahf
idivb
outsb
add
lahf
loop
and
push
or
call
sub
sub
fldl
out
add
out
mov
shl
cld
inc
int3
sub
xchg
imull
adc
outsl
mov
ja
cmpsb
mov
lcall
mov
jg
stc
push
adc
jb
add
inc
fistpll
in
cltd
mov
mov
xor
test
jg
das
ret
sbb
loop
jns
pop
adcb
xchg
xchg
and
pop
sarl
mulb
xor
outsb
add
jo
sub
out
or
test
pop
into
subb
ret
enter
mov
push
cld
xlat
je
test
xchg
aam
lods
fildll
sub
mov
cmpl
adc
fisubs
pop
sub
adc
outsl
inc
xchg
add
xor
jp
mov
pop
rcrb
stos
xlat
rorl
add
jae
or
lcall
inc
test
push
fmulp
rep
ret
mov
push
loop
inc
in
or
std
pop
inc
cmpsl
pop
pop
aaa
sub
dec
or
jmp
cmp
fdivrl
aas
inc
inc
repnz
addr16
pop
in
outsb
cmp
fcmovnu
dec
and
int
icebp
sbb
xchg
scas
ja
rcll
dec
mov
clc
mov
inc
es
cmp
push
mov
out
pop
sbb
jmp
cmpsb
int
cli
jbe
pusha
incl
mov
pop
stc
cmp
iret
orb
lahf
das
mov
add
mov
lock
jne
fsubl
and
sahf
mov
test
dec
lcall
sbb
daa
mov
jae
jp
mov
mov
push
ss
js
jo
rorb
and
pushf
int
ror
daa
add
or
fdiv
into
cmp
pushf
in
sbbb
addl
scas
jno
scas
push
xor
mov
shrb
mov
pop
out
cmp
clc
jb
mov
and
mov
add
imul
lret
loop
inc
sub
ss
hlt
jno
notl
inc
cmp
dec
or
or
pop
pop
xor
into
iret
dec
sbb
cmp
inc
sub
divl
xchg
mov
negb
sub
stos
jnp
sbb
out
jmp
repz
fwait
divb
xchg
pop
fsubrs
mov
xor
aad
jnp
cltd
add
mov
pop
lea
sbb
in
push
dec
popf
loop
mov
jbe
sbb
addr16
push
dec
mov
sub
and
sub
dec
add
out
sub
xchg
jno
insb
mov
lods
mov
shrl
lds
aaa
cld
push
lcall
mov
loopne
scas
add
jno
fsts
fistl
mov
mov
pop
sub
cwtl
andl
or
test
add
ret
das
adc
lret
cmp
cld
sub
das
push
enter
jmp
cmc
arpl
lock
test
sti
sbb
mov
mov
addb
imul
add
xchg
scas
pop
gs
dec
push
std
dec
mov
xor
inc
imul
movsl
adc
mov
stc
xchg
jno
cmpsb
les
lahf
orl
cltd
sub
fimull
sbb
sahf
pop
mov
in
cwtl
mov
ja
leave
mov
scas
mov
mov
xchg
jmp
pop
dec
fbld
sbb
push
cmpsl
popa
pop
inc
loop
jbe
dec
popa
mov
xor
xchg
fsubrs
xchg
shll
ljmp
jge
xor
dec
ret
or
push
mov
xor
add
stos
fisubs
inc
or
pop
jmp
lcall
add
repz
sbb
and
add
je
sub
or
cmpsl
xchg
mov
dec
inc
lds
add
inc
aaa
and
inc
mov
add
and
cmp
pop
pushf
mov
enter
cmp
push
lret
sub
cmp
test
scas
arpl
loop
and
or
in
adc
fistps
sub
jmp
aaa
lret
outsb
mov
add
test
xchg
mov
enter
adc
mul
jo
mov
mov
pushf
and
xchg
rcr
adc
outsb
lods
outsb
fwait
dec
out
mov
mov
mov
out
jnp
fs
pushf
test
leave
and
ljmp
orb
add
pop
xlat
adc
jbe
push
jmp
adc
ja
jns
loop
sahf
jb
test
push
cmpsb
adc
rep
and
cld
nop
push
pop
bound
es
lods
adc
lds
js
aam
jle
roll
or
mov
js
les
sarl
subl
jns
jns
adc
cmp
push
sub
je
or
adc
push
cmp
js
jo
inc
dec
jle
fidivs
fcoml
mov
cmc
pusha
sbb
lret
shl
ja
cmpsb
pop
push
aad
scas
lea
nop
mov
movsl
inc
pop
pop
sub
outsb
xchg
mov
mov
inc
push
jg
pop
sbb
adc
cmp
or
rorb
sub
sbb
inc
sbb
push
pop
cmc
mov
cmpsl
notl
jecxz
daa
stos
lea
das
and
jns
lods
out
call
mov
test
push
rorb
jo
jns
jle
xor
or
ds
push
cwtl
sub
jo
inc
mov
jmp
andb
dec
sub
push
push
shl
fs
in
xlat
rclb
pop
mov
insl
enter
cmp
clc
gs
icebp
popf
test
fmuls
lcall
jle
int3
ret
stc
rclb
mov
mov
movsl
pop
or
push
cmpsb
sub
popf
and
xchg
push
cmp
mov
pop
mov
inc
and
push
cmp
add
sbbb
pop
sti
cmp
mov
js
jb
pop
mov
dec
ja
rclb
mov
rclb
pop
outsl
mov
jge
xlat
js
fwait
sub
test
xor
inc
addr16
xchg
dec
push
pop
add
std
jo
adc
not
imul
and
jns
or
int
mov
sbb
xchg
dec
sbb
xor
das
mov
stos
add
mov
jp
fldl
cs
xchg
mov
mov
xchg
nop
mov
inc
adc
pop
cmp
lcall
iret
insb
or
xor
cmp
repnz
jbe
mov
mov
adc
insb
jnp
push
xchg
mov
out
hlt
cmp
or
shll
dec
cwtl
movsl
xor
cmpsb
out
cwtl
and
daa
mov
mov
mov
xor
mov
dec
push
outsb
in
pop
lcall
cmpsb
shlb
jecxz
sub
cmp
addr16
jmp
imul
fwait
outsl
push
cli
in
jg
ret
sub
test
ss
daa
jp
add
jmp
stos
mov
sbb
pop
pop
mov
in
pop
outsb
xchg
lahf
pop
data16
fstl
mov
adc
mov
adc
sbb
push
cwtl
loopne
jecxz
cmp
and
out
fisttpl
ss
pop
outsl
pop
cld
mov
pop
mov
roll
mov
xchg
push
mov
ret
mov
push
sarb
mov
sub
fnstsw
pop
aas
add
push
pop
sbb
lock
idivb
loop
push
in
pop
outsl
push
push
dec
push
sbbl
fidivs
test
int3
int
pop
inc
pop
pop
cld
inc
pop
int3
int
in
lea
xchg
pop
mov
and
punpckldq
addr16
maskmovq
testl
push
push
and
in
pop
ljmp
pop
pop
add
lahf
test
stos
jp
inc
mov
push
mov
in
insl
repz
sbb
jle
cltd
repz
sbb
fstpt
push
stos
or
das
movsb
inc
testl
fld
lods
negl
mov
loop
add
adc
aad
adc
mov
dec
fcompl
sub
cmp
sub
push
xlat
lock
hlt
test
movsb
adc
adc
adc
scas
add
push
out
jp
mov
sub
sbb
lahf
mov
daa
fdivr
or
fisubs
or
pop
mov
lea
or
jbe
mov
jle
cli
xchg
imul
inc
sub
sub
decb
lret
clc
add
sbb
dec
popf
fnstenv
mov
lcall
adc
jg
ds
mov
inc
int3
push
sbb
cmc
pushf
pop
jmp
imul
loope
dec
jae
fidivl
push
or
pop
test
mov
mov
inc
xchg
jp
stos
cmp
cmp
mov
ljmp
adc
dec
or
test
sbb
loopne
xor
fadds
xchg
sub
cmpsl
mov
out
pop
punpcklbw
jmp
sbb
mov
aam
pusha
cwtl
jg
in
cwtl
and
loopne
test
cld
cli
in
mov
xor
insl
je
push
iret
add
loopne
lds
and
mov
pop
stos
push
dec
cmpsb
sub
aad
lret
adc
daa
or
jecxz
loop
divb
bound
lods
ret
data16
cs
shlb
add
and
iret
mov
aad
stc
nop
mov
xor
leave
mov
lods
repnz
pop
cwtl
mov
pop
and
xor
roll
fcmovbe
call
jns
lret
scas
mov
leave
shr
add
insb
popa
lret
lcall
jb
xor
call
pop
sub
js
mov
push
xchg
inc
lods
cmp
mov
mov
pop
cmp
mov
mov
cmp
xchg
or
fistpl
xor
in
inc
jecxz
mov
mov
fcomps
stos
dec
jle
dec
and
cld
push
call
mov
int
mov
sub
jns
shrb
add
loop
aaa
loop
cwtl
lods
add
std
mov
cmpsl
loope
outsl
mov
jns
sbbl
int3
andb
push
jnp
popf
pop
push
push
jno
inc
fisttpl
dec
cltd
stc
or
sbb
xlat
out
mov
mov
dec
push
push
dec
mov
into
fsubl
aaa
scas
or
clc
inc
mov
mov
mov
xlat
pop
cli
push
stos
mov
sub
jl
inc
cs
push
jae
setp
int
hlt
sub
stos
aas
add
fwait
sbb
push
out
int
je
in
cwtl
stc
mov
jg
nop
mov
add
mov
scas
xor
aaa
ljmp
ljmp
daa
cwtl
mov
daa
stc
cmp
mov
addl
in
ret
cmp
jne
imul
push
dec
inc
decl
insl
fcom
dec
rcrb
int
movsl
fmull
xor
jne
in
add
shll
inc
push
aad
mov
ja
je
int
sbbl
shlb
push
pop
mov
pop
jle
add
addr16
sub
inc
jnp
mov
repnz
mov
cli
stos
xlat
and
jbe
in
inc
add
push
movsb
jno
push
or
dec
mov
and
fldcw
dec
xor
stos
enter
cmp
jg
repz
jecxz
pushf
sbb
test
xchg
dec
dec
xchg
jle
ficoms
out
ljmp
dec
aad
pop
stos
dec
jg
or
push
sbb
push
loopne
mov
ficomps
add
dec
cwtl
dec
push
push
stos
mov
adc
pop
lret
push
lcall
xor
repnz
jno
mov
inc
jo
loop
cmp
xchg
mov
mov
sub
sub
sbb
popl
nop
nop
add
les
les
jp
pop
dec
push
jge
xchg
cli
mov
adcb
xlat
out
clc
sbb
ffreep
fwait
jno
lds
jae
popf
pmovmskb
lahf
sbb
rcrb
lahf
les
sub
js
int3
add
sub
dec
pushf
lahf
jae
fstpl
cmp
push
sub
imul
dec
int3
mov
dec
into
jle
inc
mov
pusha
xchg
mov
and
out
outsb
nop
orl
pop
imul
jge
int3
add
outsb
cmp
adc
lock
int
push
lock
scas
cwtl
push
xchg
mov
mov
mov
js
fnstsw
mov
inc
adc
stos
daa
mov
out
or
dec
stc
mov
dec
jle
mov
mov
adc
mov
push
scas
mov
dec
mov
in
test
clc
add
mov
mov
stos
mov
sbb
lea
push
into
mov
xchg
test
inc
dec
fwait
jg
lock
dec
xor
xor
and
les
fwait
ret
into
lcall
cmpsb
pop
scas
pushf
push
call
xchg
ret
sub
fcom
stos
sbb
push
mov
and
jmp
aam
mov
js
inc
jp
icebp
mov
out
add
pop
fstps
sbb
imul
sub
outsl
shll
pushf
leave
sbb
sub
push
andl
mov
xlat
adc
lods
cmp
xchg
xchg
mov
int3
ljmp
xchg
pop
mov
stc
stos
xor
movsl
mov
mov
sub
enter
adc
mov
cmc
mov
aaa
cltd
ds
push
mov
jmp
mov
call
sub
insb
into
mov
icebp
xor
scas
cmp
daa
lret
push
cmp
jno
push
test
push
push
iret
push
inc
and
and
js
and
inc
out
movsl
pop
imul
incb
xor
iret
push
mov
nop
fsubrs
cmpsb
push
stos
loopne
push
jb
cmc
jb
mov
cltd
out
inc
xchg
mull
loop
mov
adc
xor
pop
mov
cmpsb
lret
mov
jo
addl
jecxz
repnz
sbb
loop
mov
sbbb
lahf
ljmp
shr
or
push
into
fadds
js
mov
pop
je
mov
cs
dec
roll
pop
pop
mov
call
cli
xchg
mov
test
in
adc
and
xor
sub
sarl
push
jg
in
lret
stos
lea
mov
rcl
push
adc
inc
fisttpll
lret
arpl
mov
sbb
mov
sti
scas
xor
test
es
ret
aas
push
and
repz
push
imul
in
fwait
mov
xlat
cmpsl
adc
add
out
imul
lds
sbb
mov
iret
push
stc
or
or
sbb
or
dec
les
cmp
add
sahf
sub
jno
mov
movsl
mov
or
orb
test
mov
je
repz
test
sbb
icebp
imul
shl
push
mov
xchg
dec
clc
dec
mov
xchg
mov
shll
inc
mov
data16
pop
push
loope
push
mov
rorl
xor
fsubs
xor
jb
ret
push
aam
xor
sub
push
mov
cli
mov
sub
add
int3
dec
mov
mov
enter
lods
xor
fdivr
sbb
dec
xchg
jg
enter
sub
jno
popf
pop
pop
divl
out
outsl
cmp
pop
lds
shrb
out
ret
imul
loop
mov
jo
frstor
mul
jge
ljmp
and
dec
lcall
cmp
adc
add
lea
rcrl
js
leave
and
dec
psubsw
push
movsb
andl
cwtl
lods
push
push
jl
rcl
adc
in
mov
mov
inc
inc
cmpsl
ret
test
out
jo
jmp
pop
xor
pop
pop
cmc
sbb
insl
pop
jp
adc
or
cmpsb
std
sub
xor
lds
and
push
out
out
add
insl
pusha
sbb
xchg
inc
xchg
inc
and
or
pop
adc
sbbb
repnz
add
pop
xorl
lods
outsl
fisubl
mov
pop
daa
dec
mov
movsb
aas
dec
add
int3
xlat
lahf
rcrl
in
xlat
push
mov
mov
push
mov
jno
andb
sub
pop
arpl
les
ja
jecxz
xor
out
mov
push
push
in
ficompl
leave
sub
inc
xchg
lods
lods
mov
pop
pushf
aas
push
test
and
nop
iret
cmp
or
imul
call
xchg
int
into
test
cmc
movsb
push
mov
cmpsl
adc
inc
lret
xchg
icebp
cld
mov
and
es
xchg
cs
xchg
loope
insl
and
hlt
stos
dec
fistpll
and
push
add
popf
pop
pop
and
push
dec
fnstsw
ret
sbb
in
test
stos
js
cs
ja
adc
ficoml
ss
lods
xchg
int3
mov
xor
xchg
xchg
inc
jnp
fstpt
pushf
mov
outsb
in
sbb
and
subl
cmp
cwtl
dec
cmc
pop
icebp
cmp
sub
add
sub
insb
sbb
ljmp
inc
in
and
aas
shr
pop
inc
mov
sub
add
sub
jno
lods
cmp
scas
lods
mov
cmpsl
pop
pop
pop
pop
mov
and
insb
or
jle
mov
pop
int3
pop
dec
fldt
jl
inc
into
push
cli
mov
dec
sub
sbb
dec
into
mov
adc
xchg
mov
mov
fs
xlat
in
xchg
jo
cltd
clc
jmp
add
and
daa
lds
push
fmuls
lret
cmc
jge
test
fisubrs
jmp
pusha
dec
mov
inc
mov
vandps
add
jnp
fistpll
test
hlt
in
or
cmp
in
enter
aas
stc
jge
filds
insl
mov
mov
cmp
out
cmp
imul
in
and
push
daa
push
flds
scas
push
fwait
je
cli
lds
test
out
enter
sbb
daa
fdiv
hlt
dec
leave
sarb
and
inc
cmp
mov
and
sti
mov
mov
test
mov
lahf
mov
testl
add
sub
repz
add
arpl
xor
data16
dec
loope
cmc
inc
push
mov
mov
jmp
fs
popa
call
stos
outsl
and
mov
inc
jp
mov
inc
inc
jl
jns
stos
loope
jae
call
cmp
mov
iret
es
sub
scas
jae
cmpsl
test
mov
in
data16
jmp
mov
mov
or
and
push
inc
mov
shl
sbb
mov
fimull
movsb
cmp
lods
loopnew
enter
sub
jg
cli
jge
sbb
or
pop
and
pop
repnz
pop
mov
test
test
pop
push
jmp
xlat
scas
std
adc
sbb
imul
lahf
or
cltd
sbb
popf
dec
scas
stos
sbb
jb
mov
push
addr16
mov
repz
jmp
shlb
add
in
lds
mov
xor
jecxz
filds
loop
std
enter
enter
xchg
ret
xchg
cld
cmp
addb
lods
aam
add
mov
adc
call
or
pop
jae,pt
lea
loop
jp
ja
insb
push
xchg
les
cmc
add
stos
mov
lds
test
dec
mov
pop
pop
dec
cltd
pop
cwtl
test
fiadds
xor
push
call
pop
into
cltd
xor
and
je
mov
popf
addr16
es
outsl
es
cmp
lret
mov
call
cmc
ret
mov
inc
cmp
call
cmpsl
jle
iret
fnstsw
aad
std
leave
xor
pop
rcrb
mov
cmp
pop
push
cmp
xor
iret
sub
ja
xchg
dec
sub
dec
xor
gs
jnp
pop
test
cmp
aam
xor
or
jle
xor
ja
jecxz
or
cld
out
pop
jno
xchg
jne
jne
stos
push
cmc
mov
or
jbe
into
push
push
in
mov
movsl
in
popa
into
xor
dec
mov
out
fisubs
lcall
mov
leave
mov
scas
int
mov
mov
call
xchg
inc
push
xchg
sbb
lock
mov
fists
ja
das
push
iret
lahf
xchg
jp
mov
ja
fiadds
insl
xchg
push
push
cli
mov
clc
jecxz
les
lret
mov
jne
popf
repz
jmp
fdivrl
cmpsl
inc
shl
lcall
fistpll
cmp
std
jnp
inc
lods
pop
xchg
dec
roll
inc
loop
in
ret
cmp
pop
out
mov
adcl
push
cmp
pusha
clc
imul
xor
adc
repz
push
and
adc
sub
jns
and
ja
xchg
cli
ja
das
mov
or
dec
sub
ror
mov
sub
movsl
nop
xchg
aaa
iret
mov
ror
test
cli
jae
in
les
sub
cmpsb
andl
and
cli
js
add
or
insb
sbb
loop
pop
jns
test
bound
jne
jle
cmp
sbb
es
or
push
ret
and
xchg
xor
rcl
inc
jb
sbb
outsl
repnz
dec
sbbl
jne
cmp
jle
lcall
add
aas
int
int
fdiv
sbb
dec
push
ret
out
xor
int
dec
and
and
dec
adc
popa
mov
mov
repz
cmpsl
dec
imul
and
mov
test
push
lret
out
dec
xor
outsb
mov
mov
pop
sbb
sahf
fistpll
dec
imul
xor
int3
popa
lahf
clc
dec
and
cltd
mov
divl
push
or
adcb
xchg
lcall
test
adc
cmp
fwait
in
mov
push
jge
jae
or
push
insb
jbe
stos
sub
cld
not
es
and
lret
pop
insb
xor
or
pop
cmpsl
mov
test
mov
out
idiv
insl
std
mov
cmpsb
insl
sub
inc
out
cld
outsb
sbb
mov
fistpll
mov
cmp
je
aad
les
sbb
push
push
clc
fsubrs
ljmp
mov
outsb
cmpsl
scas
pushf
rcrb
adc
xchg
imul
ja
push
mov
scas
mov
jmp
sub
loop
lret
sbb
leave
stos
imul
and
push
shll
add
imul
xchg
cmpsb
add
fsts
jmp
jle
movsl
call
inc
mov
xlat
outsb
adc
mov
mov
xchg
xor
cli
mull
jge
arpl
pop
rcll
jnp
fstps
scas
cs
pop
jle
shl
stos
xchg
aas
scas
pop
xlat
sbb
outsl
lods
orl
ljmp
mov
fidivs
sub
sub
adc
sbb
test
xchg
enter
std
pushf
mov
mov
imul
loope
scas
mov
jp
xor
dec
aam
mov
inc
out
lret
xchg
ret
xchg
xchg
in
cmp
imul
inc
loop
xchg
data16
sub
mov
pop
jge
jmp
pop
xor
sbb
or
mov
jle
adc
popa
or
out
xchg
sub
push
leave
or
es
xchg
add
lock
cmpsl
std
arpl
into
idivb
stos
xchg
mov
jp
jge
jge
dec
dec
push
add
jo
rcrb
popf
jge
popf
xchg
push
xor
jno
adc
lods
cld
lea
into
xchg
cwtl
push
shrl
inc
adc
pusha
sub
rclb
dec
ljmp
scas
add
scas
jle
adc
rolb
xor
in
fld
mov
mov
fwait
lret
or
jecxz
sahf
insl
fistpl
loope
jge
dec
pop
mov
inc
jecxz
lock
inc
movsl
push
xchg
mov
mov
arpl
xchg
cmp
in
fisubrs
jb
dec
in
add
mulb
mov
fmulp
mov
outsb
mov
mov
lahf
add
dec
fwait
push
mov
incl
push
rcr
fwait
mov
cmp
mov
gs
lock
fs
int3
aas
into
sub
pop
in
jecxz
xlat
fucom
pop
out
clc
popa
add
sbb
and
inc
imul
adcl
dec
stc
mov
fsubrp
xor
aaa
enter
jecxz
fisttpll
mov
std
fldt
loope
mov
xchg
jecxz
sahf
repnz
aas
imul
inc
out
cmp
jns
cwtl
gs
pop
mov
adc
jl
in
adc
sub
outsl
pop
mov
push
inc
js
addb
cli
cli
or
fmull
ret
mov
mov
std
dec
fsubs
adc
mov
je
orb
std
mov
sub
xchg
cld
stos
loopne
and
xor
test
sti
scas
pop
in
jl
cltd
lods
ss
pop
test
dec
sarl
pop
adc
mov
lret
xchg
xchg
xor
xchg
mov
mov
in
or
sub
inc
fistl
arpl
adc
stos
test
sub
pop
or
xor
fucomi
xor
sahf
test
adc
pop
sub
and
dec
or
sbb
rcr
stos
ja
test
push
mov
iret
mov
daa
mov
pop
cs
sarb
test
int
aad
dec
or
ror
or
cltd
xchg
pop
stc
sub
lods
mov
xor
aam
sti
es
sbb
mov
xchg
adc
movsl
daa
mov
cmp
fsub
movsb
push
or
mov
inc
xchg
clc
popa
inc
sbb
mov
sbb
xor
and
dec
push
fdivr
aaa
inc
mov
fistps
sbb
js
push
pop
sub
sbb
hlt
pop
pop
call
push
jl
test
jmp
jmp
pushf
mov
push
sbb
mov
insl
mov
push
push
and
push
nop
popa
add
push
xchg
in
sub
mov
subl
pop
pop
fisubl
push
loopne
test
jge
fcoms
fimuls
and
movsl
jmp
xor
push
call
call
jns
sbbb
lods
mov
xchg
pop
cmp
pop
inc
adc
das
dec
shlb
pusha
and
sub
adc
rorl
ds
add
jmp
out
je
bound
cwtl
ds
dec
jnp
cmp
das
xor
lock
sub
pop
out
mov
ds
push
subl
push
add
mov
push
cmp
mov
xlat
fs
mov
ja
repnz
test
rcll
mov
ljmp
subb
mov
test
xchg
leave
sbb
add
subl
adc
scas
daa
popf
inc
xchg
inc
mov
add
or
lock
inc
or
xchg
pop
push
out
jb
fdivrs
jne
pop
cmc
out
out
mov
popf
dec
sbb
inc
push
in
xchg
xor
decl
push
aaa
mov
rcrl
popf
mov
es
dec
test
push
sub
cmpsb
push
push
push
rorb
sub
inc
adc
push
and
negb
sahf
mov
jmp
aas
ljmp
xchg
andl
iret
imul
fnclex
inc
adc
insb
or
aaa
inc
out
stos
sub
imul
daa
mov
pop
nop
data16
push
stc
bound
mov
mov
arpl
jbe
repz
adc
sub
movsb
andl
sub
xchg
cmp
mov
sahf
xorb
mov
xchg
mov
iret
mov
test
iret
pop
iret
xchg
jbe
lea
mov
jnp
cmp
into
inc
fwait
pop
adc
shlb
leave
cld
aaa
mov
mov
inc
xor
ds
std
nop
mov
daa
js
inc
test
shrb
cmp
xchg
xchg
pop
addr16
insb
cmpsl
mov
inc
mov
jne
psubusb
lcall
inc
cmpsb
push
pop
add
ret
and
ss
mov
lcall
in
in
inc
push
arpl
arpl
mov
das
es
xorb
push
bound
xchg
call
and
xchg
scas
xchg
movsb
inc
mov
in
add
push
dec
or
cmpl
xchg
call
push
adc
dec
dec
cmpb
xorl
mov
sbb
pop
inc
outsb
mov
mov
cmp
and
mul
push
loope
adc
sub
pop
in
mov
add
and
dec
test
lahf
dec
push
ss
push
int3
pop
pop
lahf
sub
scas
jl
repz
sbb
out
loop
addr16
test
dec
xor
in
mov
mov
pop
adc
stc
loop
jle
es
sahf
lods
cmpsl
add
pop
into
mov
inc
or
aam
jmp
jno
stos
cmp
lods
xchg
rolb
int3
mov
push
jb
pop
inc
or
pop
stos
xchg
jmp
adc
push
xor
xor
dec
xorl
enter
fsts
mov
das
push
out
mov
jnp
xchg
fwait
xor
cmp
xchg
les
lods
je
and
das
inc
and
daa
insb
test
loop
movl
sbb
outsb
jle
faddl
lret
repz
ret
je
jne
in
pop
inc
jbe
stc
jns
loopne
mov
test
xlat
xlat
out
lret
js
aad
and
xchg
rolb
ret
inc
inc
mov
cmpl
sub
mov
mov
or
xor
adc
sub
sbb
das
jno
popf
repnz
ja
mov
lcall
sbb
xlat
nop
jb
jl
dec
jg
cmp
rorb
jg
insl
cli
mov
out
cmp
add
movsb
mov
xchg
jg
shll
cmp
fists
in
mov
jle
out
repnz
xchg
add
dec
and
or
pop
push
fs
xchg
mov
rcrl
shll
mov
mov
in
sub
cltd
rcrl
jg
dec
enter
xchg
test
test
mov
sarl
or
mov
imul
inc
ljmp
inc
xchg
pushw
and
gs
fnstcw
ret
cmp
cwtl
loopne
jae
mov
push
cwtl
je
xor
adc
int3
cli
mov
mov
bound
add
mov
lret
pop
sub
xchg
mov
xor
test
or
cmpsb
add
mov
adc
dec
pushl
outsl
cmpsl
loopne
rolb
int3
inc
cmp
jl
xor
or
fstl
cwtl
mov
ds
cmp
xor
popa
add
cld
test
ljmp
adc
jbe
xor
loop
nop
in
jg
std
mov
mov
bound
pop
push
jge
in
pop
aad
mov
or
pop
pop
lcall
sti
inc
or
cs
cli
xchg
sbb
shll
mov
adc
dec
push
dec
push
cmpsl
in
enter
nop
sub
xchg
xchg
pop
faddl
jmp
and
and
dec
loopne
pushf
sub
notb
mov
fldl
mov
xchg
mov
icebp
cwtl
nop
rorb
ljmp
and
int
js
sbb
test
mov
clc
adc
out
lods
ret
push
add
pop
mov
lods
iret
dec
flds
jle
lods
mov
fists
push
mov
push
stos
lea
mov
ret
in
inc
mov
in
add
jle
call
int3
divl
imul
push
repz
inc
fisubrl
xor
mov
mov
pop
and
call
mov
test
arpl
imul
mov
cs
gs
in
out
aas
leave
cmpsb
test
mov
sbb
cmpsb
xlat
imul
sbb
rolb
sti
mov
jo
or
mov
sbb
lret
mov
pusha
mov
xchg
cmp
sbb
shlb
push
xchg
inc
mov
call
mov
call
mov
dec
mov
xchg
xlat
loopne
pop
cs
inc
fprem
xchg
mov
stos
adc
gs
jbe
pop
mov
pop
pop
pop
mov
popa
jl
movsl
int
ret
and
jns
out
popa
arpl
andl
int
insb
jecxz
xor
daa
lret
aas
mov
inc
hlt
pop
out
testl
insb
outsl
push
xchg
pop
dec
decb
iret
jge
pop
mov
jle
push
rcr
fdivrp
data16
adc
jae
out
mov
mov
mov
fnstcw
jae
into
mov
jno
outsb
lea
and
jo
scas
test
aaa
pop
sub
not
push
inc
leave
jne
loope
in
and
imul
xchg
sti
mov
push
sub
xor
sahf
sub
sub
fdivrl
sub
sbb
daa
pop
fnstcw
jg
decl
cld
adc
mov
or
jo
test
push
mov
test
int3
mov
sub
int3
inc
repnz
pushf
push
xor
adcb
mov
inc
jecxz
cmpsb
xchg
pop
xchg
push
inc
das
dec
popf
add
pop
xchg
loope
leave
das
push
fs
lret
push
pop
lock
adc
inc
cmp
ficomps
sbb
mov
mov
adc
negb
fwait
daa
fwait
inc
repnz
inc
and
call
ret
pop
scas
lods
stc
cmp
out
shl
dec
test
sti
mov
fistps
ret
adc
leave
mov
insl
test
mov
cmpsb
push
xchg
jp
pop
lret
pop
rorl
push
ja
inc
aas
nop
and
add
adc
push
sti
loope
and
add
mov
or
sub
test
pop
cld
mov
jno
sbb
jecxz
inc
jae
and
pop
fldt
dec
add
das
call
ret
fisttpl
out
push
cmp
mov
fildll
pop
pop
inc
pop
mov
mov
std
sub
sbb
mov
dec
adcl
addr16
mov
call
ret
xchg
xchg
and
cltd
gs
xor
inc
test
lret
int3
aad
movsl
jp
dec
dec
jecxz
iret
imul
xchg
cmp
sbb
fidivs
and
imul
pop
cmp
lcall
and
sbb
jnp
jmp
lcall
fimull
xor
shrl
mov
add
adc
dec
aam
cltd
xchg
jge
dec
jg
cmp
aad
out
rorl
pop
dec
xchg
sbb
cmp
jae
popa
cltd
pop
adc
pop
jl
adcb
jnp
aas
lds
xor
jecxz
ret
inc
ret
push
sahf
call
les
and
xchg
insl
push
jg
mov
push
leave
aad
imul
push
jno
adc
cmp
mov
imul
mov
push
jb
jnp
xor
into
ds
iret
xor
dec
inc
es
out
fstpl
popf
neg
clc
imul
hlt
mov
test
insl
dec
cmp
outsb
pop
pop
pop
xor
and
das
popa
cwtl
mov
out
lcall
repz
ljmp
lock
sbb
into
popa
leave
xor
and
in
out
cmpl
ds
mov
or
and
sub
loop
popf
arpl
xorb
or
xchg
jge
inc
iret
xor
xchg
movsb
sub
pop
scas
lret
and
mov
inc
sub
xchg
lods
in
std
ds
push
inc
inc
div
pop
int
rcl
pusha
sub
lret
pushl
jp
sbb
fbld
roll
stos
cmpsb
lea
sub
out
cwtl
push
or
test
bound
xchg
das
scas
mov
sub
mulb
aad
xchg
adc
das
sahf
inc
into
xchg
xchg
xchg
sub
sbb
leave
sahf
mov
imul
or
popa
pop
push
stc
adc
fsubrl
addl
fisttps
xor
add
push
or
inc
rolb
dec
sbb
roll
iret
daa
or
lret
push
aas
cmp
push
cmpsl
or
lods
outsl
mov
mov
into
dec
rorl
mov
imul
lods
jg
sub
loope
hlt
and
pop
jl
push
insl
add
sbb
fcoml
mov
fnstcw
fadd
lea
sub
cmpsl
repnz
mov
xchg
cld
enter
movsl
xor
sbb
xor
testl
cmp
jnp
sti
add
mov
add
in
out
sbb
inc
xor
mov
arpl
mov
test
and
pop
cmpsl
mov
sbb
add
aad
sbb
mov
jb
mov
xor
xchg
cwtl
fdivs
idivl
mov
out
push
or
les
inc
sti
mov
insl
cmp
push
stc
pop
sti
jle
pop
out
push
in
push
mov
cmp
mov
sbb
nop
pop
dec
pop
xor
inc
lea
cmp
outsl
push
call
mov
push
subl
adc
mov
adc
mov
nop
ss
sub
repz
cmp
clc
arpl
jp
pop
jns
cmp
cwtl
scas
xor
addb
ror
inc
sbb
test
add
bound
xchg
push
xchg
and
xchg
jmp
pop
call
add
xchg
addr16
xor
jae
in
push
lcall
pop
sbb
fldenv
clc
call
cmp
outsl
or
xchg
fisubl
aad
in
cmc
mov
mov
test
xchg
lds
outsb
out
shll
inc
call
pop
adc
cs
pushf
fldt
sub
mov
lds
mov
cltd
aaa
mov
ds
add
ljmp
dec
fs
hlt
cmp
jae
in
xchg
bound
mov
xchg
push
pop
add
scas
arpl
test
lea
mov
xchg
xchg
ret
jmp
adc
neg
ja
test
enter
inc
inc
inc
mov
pop
cmpsb
xchg
xchg
lock
repnz
add
inc
xchg
xor
cmovae
xor
repz
lret
push
jno
insb
inc
mov
out
adc
xor
mov
and
pushf
rcl
sub
sub
pop
xchg
iret
ss
fcom
das
cmp
jl
pop
dec
loopne
or
pusha
leave
cmp
bound
out
xor
sub
int
xchg
test
pop
push
jb
fs
add
xlat
mov
push
jmp
adc
adc
nop
scas
lods
cld
sbb
lock
pop
ficomps
sub
mov
cwtl
add
mov
popf
leave
outsb
fmul
push
cmp
mov
xchg
jmp
test
rol
cmp
mov
in
dec
xchg
sub
xor
jo
pop
setne
mov
bnd
mov
movsb
xor
mov
inc
or
or
mov
or
mov
add
and
pushf
popa
pop
sub
mov
mov
mov
cmp
vmovntps
stc
int
fists
fisttpl
outsl
adc
or
xchg
lea
mov
jb
rorl
jns
lods
out
pusha
mov
dec
pop
mov
mov
mov
rclb
push
popa
dec
push
jecxz
mov
jg
bound
test
xor
or
push
stos
inc
pop
fstpl
hlt
in
bound
adc
subb
nop
pop
xchg
inc
movsl
in
cli
aam
cs
lock
xlat
jp
xchg
js
xchg
push
sub
and
jp
test
adc
add
sbb
into
out
mov
sub
repz
mov
ret
cmp
sbb
movsb
lcall
movsl
mov
push
bound
shrb
imul
or
sbb
aaa
add
insl
jg
xchg
and
sbb
mov
les
ss
dec
cmp
pop
scas
shr
inc
add
popf
mov
sub
cmp
jb
cmc
jo
xor
bound
jb
cmpsl
lret
pushf
mov
xchg
div
insb
sbb
cmpsl
lds
jb
mov
loop
idivb
mov
lret
mov
adc
inc
add
scas
out
in
adc
scas
xchg
aam
int3
repz
shrb
mov
pop
inc
jae
cvttps2pi
and
shlb
fstsw
add
jmp
dec
popa
push
mov
mov
pushf
lret
lds
mov
lea
mov
outsl
bound
loope
imul
cmpsb
ja
outsl
dec
mov
pop
loopne
rcrl
js
xor
push
cmp
push
push
adc
repnz
in
mov
pop
ss
test
cmp
pushf
ret
xor
adc
movsl
adc
and
inc
inc
into
dec
fs
cli
lret
out
mov
xlat
jae
mov
xor
out
icebp
pop
xor
imul
pushf
mov
icebp
bound
mov
inc
shrl
imul
and
inc
or
hlt
lret
xchg
jno
aam
inc
xor
mov
orl
sbb
cmp
imul
std
jge
push
jno
mov
cmpsl
adc
push
add
lods
repz
mov
sub
and
cmp
pop
jmp
sub
cmp
inc
sub
lret
inc
lcall
mov
and
cltd
cld
outsl
inc
push
jl
xor
mov
push
sub
inc
jmp
fstps
cli
mov
int3
xchg
push
mov
sub
mov
hlt
lahf
pusha
cmp
or
sarb
mov
ret
push
or
lds
cmc
mov
dec
and
xor
xor
cmp
subl
mov
je
jbe
lret
fwait
je
aas
adc
mov
jle
shlb
add
in
adc
jae
cmp
push
rcrb
push
mov
decl
pop
mov
insb
sbb
pavgb
aam
sbb
xor
stos
inc
mov
mov
icebp
push
pop
push
sub
and
add
ja
cwtl
push
sub
lods
daa
mov
add
or
bound
jle
pop
movsl
das
lods
iret
lret
mov
test
fs
in
daa
mov
pop
je
sbb
loope
xchg
ret
dec
mov
pop
hlt
sbb
mov
sub
stos
int
das
insl
mov
inc
lock
dec
cmp
dec
pop
inc
mov
cmp
mov
adc
and
cmp
in
or
mov
fucomip
rorb
in
and
mov
out
lret
adc
push
xlat
pop
in
or
dec
xchg
xor
cmp
mov
dec
clc
fwait
xor
dec
pop
dec
ja
mov
pop
sbb
ror
fidivrl
inc
mov
inc
fdivrp
mov
or
jnp
imul
lcall
addr16
xlat
mov
rorb
add
inc
imul
fisttpll
negb
enter
xor
movsb
mov
addl
inc
jb
inc
sti
shr
inc
adc
pushf
mov
cmp
in
xor
sbb
into
out
out
sub
inc
int3
and
inc
push
daa
bound
stc
and
out
iret
pop
adc
sub
xchg
int
ja
jg
inc
int
loopne
mov
xchg
dec
js
movsb
movsb
lods
mov
jecxz
adc
or
cmp
repz
push
xchg
sahf
in
aaa
push
jmp
cs
push
pop
and
ds
sbb
or
xor
pop
jae
mov
mov
das
lock
mov
jb
popf
pop
jg
inc
leave
cmp
fwait
and
mov
ja
sti
rclb
das
or
add
sub
jae
dec
out
aam
jns
sub
out
call
ss
js
dec
push
ds
pop
std
aad
sub
xlat
xchg
xor
cmp
jne
dec
test
jmp
push
repz
call
inc
jns
dec
stc
or
test
xchg
pop
adc
ret
fsubrs
sub
push
pop
push
daa
mov
decb
lret
lret
inc
mov
das
push
adc
and
and
xchg
pop
sub
xchg
add
loopne
frstor
aad
mov
mov
mov
outsl
aas
or
pushf
sahf
or
cmpsl
or
jmp
lcall
insl
mov
je
repz
lret
sbb
ret
sahf
cltd
pop
lcall
and
cmp
mov
mov
push
mov
inc
jne
test
les
xor
pop
or
fsubs
sbb
xchg
xchg
add
fcomps
jge
cmc
jns
shll
sahf
push
fs
push
pusha
ret
and
imul
xchg
push
push
cmp
and
cmc
push
jno
mov
test
test
in
cltd
cli
je
fwait
mov
test
into
sub
fsubrs
fcoml
aaa
insb
dec
addl
cli
leave
jmp
pop
pop
add
add
cmpsl
xchg
cmc
mov
dec
jg
sbb
in
adc
sub
push
fucomi
or
stc
dec
jb
std
lods
aam
jg
xchg
jb
nop
pop
sub
ficompl
push
aad
dec
jecxz
xlat
leave
adc
fcompl
mov
sahf
stc
push
int
imul
shl
or
fstps
pop
xor
popf
addb
push
gs
dec
cld
xlat
pop
movsb
pushf
adc
dec
dec
fcompl
movsb
stc
lea
andl
in
sbb
sbb
out
enter
out
xchg
cmc
mov
or
test
andb
inc
stc
les
mov
sub
adc
dec
push
cmpsb
jmp
dec
bound
in
mov
sbb
jmp
or
sub
lret
jno
jne
dec
sbb
xchg
mov
scas
das
movsl
xchg
out
loopne
mov
jo
andb
adc
cmpsb
jg
sub
rclb
jbe
or
imul
js
and
mov
cltd
pop
pop
sbb
xchg
outsl
cli
xor
jecxz
jecxz
fcmovnb
adc
ret
jns
ss
jb
ret
stos
arpl
cmpb
add
dec
mov
adc
push
mov
cld
add
or
shr
call
ss
icebp
mov
test
lods
test
mov
lcall
stos
shlb
jg
pop
popf
xlat
bound
xchg
jno
push
cmp
lahf
xor
lret
ret
sti
add
je
mov
cltd
out
std
test
int3
mov
loope
xchg
loopne
outsb
sti
shlb
adc
fsincos
dec
pop
mov
xchg
sub
jo
shl
mov
adc
mov
ljmp
ud2
cmpsb
insl
std
mov
add
xchg
out
les
aaa
jmp
pop
push
xorl
sbb
mov
dec
adc
aaa
sub
mov
jae
mov
fiaddl
bound
rorb
mov
mov
jle
xor
mov
fdivl
xchg
pop
ss
sbb
xor
cli
xchg
jecxz
push
mov
out
inc
cmp
cmpsb
dec
cmpsb
push
pop
push
popa
ljmp
xchg
sbb
into
nop
loopne
sbb
fadds
repnz
test
pop
dec
imul
popf
pop
pop
addr16
cli
shrl
fwait
dec
jns
ret
add
xchg
inc
inc
and
or
ds
sbb
sbb
push
pop
or
popf
adc
scas
les
push
mov
jns
gs
inc
sbb
push
mov
xor
xor
cmp
mov
push
mov
dec
loop
jno
lcall
movsl
nop
xchg
pop
addb
add
inc
dec
in
fs
stos
push
cwtl
sahf
rcll
rcr
cmp
xor
adc
scas
or
push
cli
fs
scas
mov
ja,pn
mov
je
shll
aas
int3
cmp
aam
pusha
in
add
inc
jno
insb
lock
mov
jmp
std
or
out
scas
add
mov
mov
nop
enter
scas
mov
int3
and
sub
jl
cmp
push
dec
add
or
mov
je
mov
or
mov
sub
inc
aam
cwtl
dec
fwait
push
movsl
cmp
popa
in
and
imul
cs
pop
mov
sub
add
neg
jnp
loope
mov
incl
jo
sarl
lret
int
in
test
adc
cmp
mov
push
xchg
xor
in
xor
xor
and
icebp
add
iret
mov
push
lcall
pop
call
mov
loope
sub
xchg
mulb
xor
stos
and
cmp
rcrb
mov
cmp
mov
push
mov
imul
sub
ljmp
pop
adc
int
scas
in
dec
mov
sub
imul
fnstenv
aam
add
and
mov
push
idivl
je
add
cmp
xchg
sbb
lret
xor
lock
sahf
fstpt
xchg
jne
cli
add
fildl
out
sub
in
loope
cmp
jns
jg
lods
inc
das
es
push
scas
jl
loop
mov
inc
icebp
fbld
adc
and
inc
adc
sbb
sub
push
add
jae
push
nop
dec
cld
and
imul
sbb
mov
adcb
cli
dec
sar
inc
cmp
push
in
dec
sbb
test
inc
lcall
dec
lea
inc
cld
sub
mov
ret
pop
icebp
mov
bound
jae
test
mov
sub
fsubr
jg
push
dec
in
cmp
sub
mov
xchg
sub
sahf
es
jge
popf
add
or
jle
mov
mov
dec
fadds
lcall
mov
je
loopne
sbb
inc
pop
jnp
xlat
mov
push
aaa
xchg
scas
xorb
in
call
jbe
cmp
xchg
dec
stc
aas
fldt
imul
movsl
xchg
leave
inc
stos
cmc
adc
dec
pop
lods
sbbl
popf
test
iret
xor
jb
mov
sbb
js,pn
ss
ret
push
cmpsb
pop
push
int
in
cmpsb
push
fistpll
cmp
pop
bnd
jnp
inc
xor
call
gs
insl
inc
lock
jle
inc
stos
pop
mov
adc
repnz
jg
add
mov
xchg
inc
sbb
addb
dec
cld
into
pop
pop
cmp
lds
push
adc
cld
jl
imul
xor
jnp
in
sbb
xor
mov
es
pop
aaa
daa
popf
pop
push
test
std
int3
push
lea
repnz
ljmp
ds
push
aaa
testb
mov
ds
mov
lea
mov
mov
xchg
fimull
iret
or
gs
cmp
sub
enter
test
push
mov
dec
imul
dec
stos
sbb
aad
push
arpl
lea
rorb
mov
or
dec
adc
ljmp
xchg
jo
push
xor
pop
and
jle
rcr
aaa
shlb
out
adc
push
mov
js
cmp
aaa
pop
add
mov
xor
sub
out
adc
cmp
sub
int
insb
in
or
lret
cmp
fdivrl
popf
popa
pop
in
dec
leave
xor
fwait
jbe
pop
xchg
mov
cmp
fcmovne
add
mov
loop
test
mov
or
add
add
jno
add
dec
sub
gs
add
xchg
jmp
mov
repnz
mov
cld
sbb
mov
fsubrs
in
xor
xchg
mov
aaa
mov
and
aas
aam
mov
gs
les
cmp
repnz
ret
loop
push
in
xor
call
rcr
or
pop
test
lahf
or
dec
aas
fadds
roll
add
cmp
xchg
mul
stos
fisttps
xor
int3
cmp
lea
xor
shl
xor
cvttps2pi
fdivrs
stos
jmp
inc
test
std
rcll
leave
stos
mulb
push
pop
xchg
or
in
sub
push
jmp
jge
imull
adc
dec
mov
in
push
mov
push
sbb
popf
xchg
push
pop
mov
sahf
in
rorl
rol
das
fsubrl
in
add
mov
scas
aam
adc
sbb
ret
lods
add
jmp
xor
popf
cwtl
or
call
lods
jne
or
rolb
lods
adc
enter
xchg
sbb
mov
cmpsb
inc
fwait
pop
cmpl
and
mov
cmp
dec
nop
inc
cmpsb
dec
dec
xchg
and
pop
ljmp
lcall
pop
imul
aaa
pop
cmpsb
je
and
jnp
inc
cmp
into
mov
lret
orl
pavgb
pop
push
fwait
xor
inc
mov
dec
pushf
cmc
imul
aas
les
xor
stos
outsb
inc
in
adc
fists
imul
cmp
push
mov
lea
pop
sub
xor
push
mov
sti
fs
shl
mov
sub
dec
mov
mov
stos
inc
dec
lahf
inc
pop
icebp
pop
in
pop
or
outsl
loop
cmp
iret
out
lock
jne
sub
and
pop
push
lds
das
adc
aam
roll
pop
add
movsl
icebp
push
aad
push
test
pop
faddl
ss
push
sbb
jl
and
into
or
repnz
or
cmp
pop
jg
dec
adc
xor
sbb
or
sub
cmp
jo
imul
xor
test
pop
and
addl
push
aam
shl
mov
mov
out
jmp
fmuls
mov
addr16
ret
cltd
imul
ljmp
sub
dec
pop
xlat
stos
stos
inc
sbb
stos
rol
push
ret
stc
mov
cltd
mov
cmovg
push
mov
cmp
shlb
mov
call
or
rcll
fistpl
cmp
inc
andl
dec
addl
push
out
xchg
in
cli
push
icebp
ret
sub
shll
sbb
ss
add
jg
add
add
test
xchg
scas
add
sahf
jno
ss
loopne
insb
out
negl
ss
inc
jmp
int3
sbb
inc
mov
cltd
lcall
jbe
inc
ss
mov
xchg
aas
push
adc
cmp
pop
aam
outsl
sub
outsl
mov
mov
bound
les
aad
jmp
icebp
or
jo
mov
in
push
test
and
pop
sbb
je
cmp
add
lret
pop
push
hlt
inc
push
dec
sbb
add
aaa
pop
jo
add
lcall
mov
sbb
mov
mov
lahf
shl
in
in
cwtl
out
or
mov
push
cmp
into
dec
fnstsw
lods
ljmp
mov
mov
insb
pop
xor
jne
pop
or
cli
iret
in
or
adc
pop
adc
sub
aaa
insl
or
pop
test
daa
lods
dec
push
or
clc
or
mov
mov
sbb
fsubr
aad
lsl
mov
loope
ds
xor
inc
das
or
jno
pop
and
push
pop
inc
into
sub
out
cmpl
add
in
sub
fstpt
mov
in
out
mov
std
mov
lods
gs
jno
pop
cmp
xchg
lret
mov
fisubrl
mov
inc
or
add
xchg
cmp
push
out
test
push
add
cli
adc
lods
gs
gs
adc
clc
lcall
cltd
pop
sub
data16
cltd
das
push
sub
sti
xor
mov
mov
imul
cs
jge
and
loop
mov
lret
pop
xchg
imul
fnstcw
js
sahf
iret
outsb
outsb
sti
loope
ret
pop
and
flds
notb
push
jbe
out
and
clc
mov
xchg
pop
xchg
cmp
out
jle
jns
fimull
adc
cmp
pushf
cmpsb
out
shll
mov
test
xlat
push
idivb
or
rcl
insl
mov
es
inc
mov
repz
sub
sbb
pop
dec
call
or
pushf
xchg
jl
sarl
stos
adc
xchg
push
fstpt
iret
dec
mov
rcrl
pop
clc
adc
dec
cld
popa
add
jecxz
pop
jae
lds
xchg
mov
loopne
push
dec
jo
cli
idiv
into
cli
mov
push
sub
ja
iret
mov
in
or
lock
lock
dec
clc
es
shlb
aam
jle
into
add
dec
mov
es
cmp
jnp
xlat
rolb
je
push
stos
push
mov
mov
or
fisttps
mov
dec
cmp
xchg
outsl
mov
popl
lock
adc
xor
out
fcompl
cmp
out
mov
sahf
pop
repnz
shll
scas
jl
test
pop
sbb
stos
mov
test
es
lahf
or
in
add
in
stos
scas
push
out
repnz
inc
jmp
jnp
mov
mov
pop
mov
xchg
out
jge
xchg
ret
cmp
sarb
inc
fimuls
jle
inc
cmp
loopne
mov
fsubr
cs
jmp
jbe
loope
lahf
ja
shrl
cmp
and
cmp
mov
and
jp
pop
std
test
or
mov
dec
push
mov
enter
scas
jb
jns
jbe
xchg
cmp
stos
xchg
fsubrs
in
outsb
mov
add
aam
stc
cmpsb
popa
scas
test
sahf
mov
push
gs
mov
xor
test
inc
jae
sbb
ret
and
mov
add
add
push
outsl
data16
pop
mov
in
lahf
pop
add
lahf
push
shll
hlt
dec
fs
in
stc
clc
jb
push
sub
out
ret
ret
in
mov
or
cmp
cld
jg
or
mov
dec
push
movsb
mov
xlat
jle
nop
negb
mov
imul
jmp
add
jge
in
push
mov
sub
fiadds
dec
or
popf
outsl
inc
inc
ficompl
cmp
cs
xchg
mov
inc
pop
xchg
mov
fcmovnu
pushf
mov
pop
sbb
cwtl
dec
xchg
sbb
sahf
lret
pushf
lods
and
or
add
addr16
mov
jbe
inc
js
push
jne
movsb
or
pop
xor
push
mov
pop
pop
stos
icebp
and
shl
mov
adc
pop
lods
xlat
jmp
test
loop
test
lds
xor
fidivrl
cmp
aaa
pop
jmp
inc
jns
inc
xrelease
xchg
fimuls
push
gs
sbb
leave
ret
orl
addr16
or
imul
push
pmaxsw
fs
push
cltd
mov
lcall
mov
inc
jge
cmpsl
loope
pop
mov
add
call
xchg
test
cmp
mov
mov
xor
xchg
lret
cli
adc
xchg
ficoms
or
cmp
lret
lea
pop
sbb
jns
jle
sbb
scas
std
xor
std
xchg
ret
mov
cmpsb
xor
pop
and
out
add
mov
in
in
sti
fisttpll
icebp
xor
not
xor
xchg
dec
cmp
dec
fisttps
or
mov
mov
clc
pusha
jbe
insb
fistps
and
ja
test
xor
enter
or
jmp
addr16
pop
fs
push
mov
dec
dec
out
int
mov
repz
int
mov
aas
fistpll
je
outsl
or
add
jne
pop
jns
sub
and
cmp
enter
inc
jmp
mov
das
nop
adc
xchg
pop
dec
or
add
mov
in
repnz
xlat
arpl
mov
lret
ret
repnz
pop
jb
repz
out
mov
adc
mov
mov
sub
adc
in
jnp
notl
mov
in
test
decl
xorb
sub
push
mov
mov
jne
imull
adc
push
dec
mov
mov
les
add
jge
mov
outsl
xchg
cmp
inc
sbb
iret
inc
pop
repz
push
ja
std
and
dec
lret
xlat
adc
sahf
mov
sbb
mov
daa
stos
inc
insb
in
ss
and
imul
mov
pop
fsubrl
mov
push
xor
inc
sub
or
cmpl
add
loopne
inc
fadds
imul
fcomps
je
jae
add
mov
push
es
jmp
and
mov
and
filds
cs
out
push
testb
cmp
mov
mov
mov
pop
je
mov
cmp
sub
jge
inc
cmp
les
and
pusha
pop
mov
xorb
popf
inc
mov
out
rorb
xor
pop
cmpsb
test
jmp
out
ret
ljmp
addr16
pop
in
ljmp
and
imulb
jbe
cli
push
cmpsl
and
pop
add
push
dec
or
xor
shll
cmp
and
adc
mov
ret
dec
add
xor
fcomps
loop
xor
mov
es
dec
pop
sub
or
xor
outsb
stc
std
sbb
sub
stos
or
and
jnp
shll
sbb
jg
loop
sbb
out
fdivp
loop
lret
lods
xchg
mov
int
mov
inc
mov
lea
mov
sub
xor
test
sub
push
lods
push
popf
aas
push
mov
add
pop
cmp
mov
fwait
mov
ret
fwait
sub
cmp
sbb
xor
pop
dec
pminub
push
lods
jb
dec
jnp
sub
adc
push
or
sarl
inc
inc
jp
das
fmull
xor
and
out
add
subb
lods
lea
and
push
push
mov
push
inc
mov
scas
pop
flds
cmp
test
add
fdivrs
or
hlt
sub
push
lods
fidivs
out
push
mov
or
sahf
in
sub
jcxz
cwtl
in
outsl
jno
addr16
sub
sub
adc
or
push
lds
test
call
pop
pop
sbb
fptan
push
pop
jge
pop
mov
inc
or
push
movsb
inc
stos
sbb
fcoml
incl
mov
or
rcll
or
int
fsubrl
dec
fidivrl
neg
push
pop
pop
push
insl
sti
test
mov
and
push
adc
cmpsb
dec
add
adc
mov
test
sti
mov
jnp
push
std
loop
mov
daa
pop
pop
mov
adc
xor
insl
mov
jb
lret
lods
and
daa
sbb
cwtl
loop
rcrb
leave
jne
mov
mov
shll
jo
repnz
sub
pop
lods
movsb
jns
xchg
cld
or
sahf
mov
dec
repz
dec
mov
shll
sbb
insb
pop
add
cs
mov
movsl
mov
cmpsb
dec
and
and
cltd
ss
mov
push
mov
sbb
movb
or
sahf
addr16
adc
jg
out
xor
sub
outsl
fwait
stos
fldt
iret
stos
cmp
jmp
fwait
mov
mov
or
test
push
push
in
flds
popa
in
mov
cmpb
pushf
das
xchg
ljmp
add
jns
aam
inc
xchg
adc
aaa
sbb
sub
mov
mov
push
pop
inc
lcall
dec
sbb
jb
in
xchg
xor
pop
pop
in
insl
mov
lods
mov
shlb
xchg
mov
mov
sub
test
dec
scas
and
xor
push
out
scas
pop
mov
iret
out
stos
pop
jmp
pop
mov
push
and
xlat
jmp
arpl
inc
jp
dec
popf
lahf
leave
adc
inc
ret
shll
sti
xor
rorl
out
push
lea
test
cmp
sbb
repz
fcoms
lret
mov
inc
ret
aas
fs
shlb
xor
out
xchg
xchg
movsb
push
scas
dec
pushf
jno
and
aam
dec
fstps
mov
outsb
or
lds
mov
hlt
or
inc
jmp
insl
mov
bnd
lds
repz
iret
or
mov
xor
stos
inc
mov
int
mov
mov
imul
cmp
and
adcb
sub
sub
pop
in
mov
in
jno
push
cs
add
movb
mov
movl
cmpl
pushf
aam
cltd
and
push
popa
movsl
das
jp
pop
je
sub
mov
int3
cmp
les
inc
jo
roll
pop
and
negl
lret
rolb
dec
mov
stc
mov
dec
mov
pop
mov
loope
xchg
mov
pop
mov
and
xlat
fs
inc
push
aam
add
mov
popf
in
mov
pop
out
mov
test
add
test
mov
or
or
xchg
std
sub
fstps
and
xor
sub
out
in
jno
xor
push
add
int3
loopne
mov
mov
mov
mov
adc
push
lods
fwait
cmp
jle
into
bnd
js
or
and
notb
pop
out
inc
jl
inc
adc
pop
int
and
and
test
or
imulb
fldcw
testb
inc
cmc
rcr
lods
pop
lock
loop
mov
mov
rolb
sub
xor
xchg
cli
aas
push
lock
mov
jne
pushf
and
and
add
push
ss
dec
and
push
mov
outsb
inc
sahf
or
dec
shr
mov
les
mov
mov
andb
adc
push
push
icebp
or
in
ds
int3
or
mov
or
cltd
cmp
pop
sub
jg
test
nop
movsb
loope
fidivrl
mov
jnp
xchg
mov
loop
cmc
lock
outsb
out
inc
mov
jnp
rorl
out
inc
xor
daa
xchg
mov
push
fnsave
sbb
inc
xchg
jbe
int
mov
icebp
clc
outsb
or
std
mov
or
mov
pop
fldt
cmp
imul
jbe
daa
mov
xchg
push
repz
cli
nop
test
xchg
shlb
addr16
das
and
jbe
and
popa
push
add
repnz
dec
call
mov
je
daa
sahf
fcmovbe
fisttpll
das
mov
push
cmp
xchg
xorb
sbb
mov
aad
or
add
xchg
rsqrtps
rorl
mov
les
fs
outsb
push
jecxz
inc
repnz
fsubp
dec
sbb
pop
inc
int
jns
out
mov
and
cwtl
sti
out
cli
cmpsb
adc
adcl
scas
outsb
mov
jae
and
out
stc
jle
fcmovnb
in
ja
insl
ss
aaa
xor
sahf
mov
xchg
push
pop
out
mov
pop
addr16
ljmp
mov
int
sbb
mov
cmp
out
scas
add
lea
sahf
loopne
adc
add
test
xor
mov
addr16
divb
mov
ficoml
int3
adc
jb
ss
bound
roll
fldenv
mov
insl
push
les
jmp
mov
sbb
cmp
sbb
inc
cmpsl
std
imul
dec
mov
xchg
rorl
cwtl
xchg
xor
test
enter
pop
pop
fdivl
mov
sarb
sbb
xchg
or
push
pop
pop
dec
adc
pop
jl
push
scas
inc
jg
jnp
push
pusha
xchg
and
xchg
dec
sarb
arpl
mov
add
mov
lret
pushf
fucomip
mov
push
call
je
aas
fcomps
mov
into
jecxz
outsb
xchg
push
mov
outsb
sbb
dec
sahf
nop
xchg
in
sub
cmp
adc
out
pop
ljmp
enter
cmp
or
xor
add
ss
mov
ror
cmpsb
rdmsr
jo
jl
sahf
pop
push
js
pop
lcall
inc
jge
add
orl
inc
inc
dec
ss
lock
dec
or
add
je
loopne
imul
das
add
inc
push
orl
test
outsb
and
mov
push
cmpsb
mov
sub
rorl
aaa
ret
mov
xor
sarb
dec
cmc
scas
and
inc
inc
ss
jl
jo
mov
fstpt
or
test
mov
fs
aas
sbb
jg
pop
mov
and
lahf
les
xor
sbb
inc
rol
cmp
push
ffree
jmp
inc
lret
lea
cmp
and
pop
and
cmpsl
fnsetpm(287
inc
pusha
dec
sub
mov
outsb
dec
fs
sub
push
jno
or
out
notb
mov
pop
jo
fistps
faddl
movsb
xchg
xchg
inc
dec
out
add
mov
push
xor
shr
lea
xlat
inc
inc
xor
lods
inc
in
insb
mov
shl
dec
sbb
cli
dec
int
xchg
jle
dec
sub
mov
add
jmp
mov
roll
xchg
mov
mov
out
sbb
push
shlb
or
jo
xchg
int
and
clc
add
jecxz
jo
xchg
mov
andb
push
ds
pop
add
rcrl
mov
movsl
fildl
inc
fidivl
icebp
mov
push
test
hlt
mov
push
jp
add
into
mov
addr16
inc
insl
push
repz
sub
test
jnp
and
sbb
mov
fmul
scas
out
mov
sub
cli
out
ret
or
mov
pop
pusha
rcl
pop
sbbb
inc
and
push
sub
xchg
pop
xchg
shlb
and
xchg
gs
fcmovnbe
xchg
push
pop
ss
sbb
adc
sub
insb
je
pop
in
mov
add
pushf
std
mov
lcall
pop
push
call
loopne
das
jg
int
mov
stc
test
negl
pop
jle
hlt
subb
xchg
jge
test
inc
hlt
test
les
mov
mov
sti
test
das
mov
lret
or
cmp
int
cmc
mov
xlat
ljmp
inc
mov
dec
pop
push
cmp
mov
fsub
ja
pop
push
adc
fidivrs
test
out
addr16
sub
lret
pop
xor
xor
pop
xchg
xor
stc
pop
push
es
pop
rcll
int3
mov
xchg
xor
dec
mov
out
fisubl
lret
sub
ret
imul
pop
sbb
cmp
ljmp
push
divl
loop
xchg
push
and
inc
mov
dec
and
jnp
loopne
xchg
loopne
daa
fsubrl
xchg
adc
add
fistpll
scas
pop
enter
rclb
mov
dec
xchg
cmc
js
lret
pop
jne
cli
stc
out
out
sbb
cmp
lea
aam
adc
js
movsb
and
add
in
ljmp
js
fadd
pop
pop
or
pop
sbb
orl
ja
or
xchg
fldl
enter
nop
lret
add
sbb
nop
push
int3
mulb
add
dec
ret
jl
push
mov
cmp
mov
repnz
add
push
jnp
xor
cmp
jae
sub
pop
bound
out
sub
fwait
repz
mov
add
cmpsb
mov
in
adc
rcrb
or
ret
ss
leave
mov
and
push
inc
cltd
lods
daa
lcall
push
arpl
mov
sub
push
adc
pop
mov
mov
xchg
add
inc
outsb
ss
test
push
cmp
dec
div
in
jp
es
sbb
rcrl
or
sbb
jb
push
in
mov
mov
and
mov
and
jle
jns
fs
or
cmpsl
outsl
nop
sub
outsb
aad
lods
push
push
jmp
jecxz
adc
popa
stc
je
mov
sub
fdivrl
add
xchg
xchg
cmpsb
movsb
jg
jne
fistl
cmp
stos
ret
fisubrs
dec
testb
xor
dec
hlt
lea
fucomi
sub
push
jp
push
test
push
push
dec
xchg
xchg
sub
push
push
cwtl
lds
push
push
xchg
movsl
mov
ficomps
add
mov
daa
shl
mov
out
outsb
jne
push
pop
sbb
ja
mov
xchg
mov
mov
in
stos
daa
mov
push
hlt
cmpsb
inc
xchg
cmpsb
push
mov
ds
push
cmp
and
stc
fisubl
testl
push
mov
xor
cs
in
push
cli
sub
mov
xorb
sbb
mov
std
fildl
cmp
mov
cwtl
sub
or
pusha
cmp
lods
clc
scas
lods
xlat
xchg
xor
adc
repnz
orl
and
dec
adc
inc
cmp
mov
add
outsl
inc
push
and
ljmp
or
insb
pmulhuw
loop
fsubl
subl
dec
dec
jmp
inc
je
cmp
cmp
repz
xor
pop
inc
arpl
lahf
add
mov
dec
loopne
stos
insl
push
xchg
and
dec
pop
test
sbb
adc
das
sub
pop
shl
xor
scas
arpl
xchg
xor
call
pop
ret
subb
inc
inc
mov
xchg
pop
adc
mov
mov
arpl
mov
jmp
fwait
xor
add
insb
mov
xor
and
cld
test
arpl
adc
rolb
inc
dec
xchg
pop
scas
push
sub
je
in
add
movsl
in
or
mov
outsb
ficoms
lcall
mov
or
mov
pop
mov
popf
inc
xchg
test
sub
arpl
cmp
pushf
xchg
jp
jne
sar
pop
mov
mov
jl
sbb
popa
jno
mov
xchg
loopne
sub
or
add
in
out
int3
sarl
cltd
and
inc
mov
sub
jge
mov
and
mov
outsl
mov
fmull
xor
ret
pop
outsl
push
mov
or
jmp
je
xchg
cmp
mov
fbld
je
mov
popl
lods
popa
movsb
sbb
insb
and
ja
lahf
mov
jl
jp
inc
mov
cmpb
mov
pop
push
sti
ret
and
jecxz
data16
bswap
mov
fwait
loopne
nop
mov
fimull
notl
mov
or
xor
mov
lea
adc
inc
push
in
inc
xchg
add
adc
jne
nop
out
or
in
adc
push
jo
dec
fldenv
adc
sbb
roll
jb
fwait
loopne
fdivs
mov
outsb
mov
insb
xchg
gs
jmp
and
mov
mov
stc
je
mov
pop
push
jl
lds
mov
rolb
ss
jb
mov
mov
rcll
das
mov
mov
frstor
arpl
dec
xlat
std
pop
das
push
popa
mov
push
bound
test
pop
add
push
inc
add
and
dec
xor
xchg
push
in
jns
mov
add
cmp
inc
cs
pop
and
shl
dec
sbb
pusha
mov
sti
cmpsb
pop
movsl
mov
xchg
js
xchg
inc
sbb
test
jle
ficoms
push
popf
neg
mov
xor
cmp
ljmp
andl
add
fisttpll
je
pop
movsb
jns
inc
rcrb
es
sbb
arpl
in
cmp
mov
icebp
clc
jge
movsb
dec
into
inc
adc
pop
or
or
add
aam
out
aad
mov
mov
dec
cmp
lahf
inc
lods
inc
lds
cmp
pop
enter
lea
rorb
lret
mov
xlat
push
insl
mov
and
repnz
pop
mov
add
add
pop
mov
pop
pop
addr16
pop
inc
jle
loop
inc
daa
lcall
aad
ficoml
push
cmp
outsb
das
loope
inc
mov
mov
imul
xor
pushf
and
pushf
dec
std
bnd
decb
cmc
loopne
dec
sub
pop
xor
xchg
cmpb
push
dec
xchg
mov
shrl
mov
jl
push
adc
loope
test
aaa
inc
jns
jmp
cmp
addr16
push
pop
and
xchg
inc
push
sub
aad
dec
loope
shlb
adc
push
mov
stos
mov
mov
jecxz
push
sbb
in
fs
push
adc
pop
inc
sub
adc
push
mov
xchg
outsl
jge
jmp
loope
pop
arpl
jnp
cmp
and
jns
or
cmp
xchg
cmp
out
push
push
lahf
mov
paddsb
lods
out
std
ds
and
call
fistpl
mov
scas
mov
shrb
shl
call
addr16
enter
movb
cmp
mov
inc
dec
and
sub
jl
jmp
fprem
js
lds
adc
cwtl
push
ud0
push
pop
fs
inc
ror
movsb
cmp
cmpsl
arpl
faddl
cmpsl
pop
inc
sahf
cmp
mov
and
lcall
fwait
cmp
mov
sbb
jbe
xlat
pop
mov
adc
sbb
add
sub
ffreep
mov
pop
pop
and
icebp
aam
sbb
sub
fadds
mov
icebp
fstpt
sahf
stc
sti
hlt
xor
test
aaa
mov
repz
sti
jecxz
xor
mov
aad
lods
movsl
mov
push
push
sahf
ljmp
scas
mov
loop
lds
lods
cmp
das
sub
cmp
jp
add
push
jne
jecxz
pusha
and
int
cmp
imul
and
mov
push
push
add
jno
inc
shlb
sbb
push
mov
mov
lret
aas
xor
jno
loopne
dec
mov
xor
xchg
movsl
mov
loop
int
add
dec
xor
push
mov
lea
pop
ftst
inc
add
sahf
fnop
or
ret
sbb
jb
pop
push
inc
ja
mov
and
and
shll
or
mov
data16
cmp
jg
daa
sbb
test
push
mov
push
into
inc
lcall
imul
cmc
push
hlt
cli
je
xor
sub
adcl
pushf
jno
fnsave
icebp
push
pushl
xchg
add
arpl
pop
xor
mov
add
dec
xchg
fwait
shll
iret
mov
add
mov
in
rorb
mov
xchg
and
popa
movsb
and
aam
rcrb
or
ret
push
addb
mov
cmpsl
mov
mov
flds
jbe
aaa
cmp
push
and
mov
mov
iret
out
enter
push
xchg
jecxz
xchg
sbb
jp
mov
movsl
leave
or
or
int
divl
out
sbbl
mov
push
add
shrb
mov
xor
ret
pushf
sarb
imul
movb
sbb
ss
arpl
popa
testb
mov
dec
push
dec
rorb
cltd
mov
push
jns
subl
hlt
fimull
cmpsb
sbb
sarb
rorb
pushf
pop
inc
stos
xor
xchg
xorl
or
dec
addr16
inc
scas
xchg
jb
jno
daa
pop
jne
push
lcall
repnz
pushf
xor
test
inc
mov
cmp
and
pop
xchg
in
push
sbb
adc
jmp
ret
pop
and
sbb
daa
xchg
pushf
nop
ret
sub
movb
or
pop
pop
sahf
mov
sbb
mov
icebp
shl
dec
adc
aaa
bound
fs
dec
sub
xchg
std
aas
aad
hlt
mov
mov
or
xchg
mov
cli
andl
cli
xor
mov
ret
out
clc
push
das
in
or
outsl
mov
push
pop
clc
add
fdivs
mov
xor
repnz
inc
cs
pop
sbb
clc
aad
fdivl
lds
jae
inc
and
push
mov
insb
add
data16
shrl
ss
push
cmp
dec
xor
and
pop
dec
sbb
js
in
dec
sbb
sbb
out
lds
das
mov
jb
sub
jns
cmp
lea
push
call
add
scas
shl
iret
ret
cli
sbb
mov
cmp
lret
cltd
insl
xchg
add
mov
push
outsb
or
mov
int
in
jmp
mov
cltd
cmpsb
xor
adc
stc
and
dec
vunpcklps
xlat
xor
das
andb
ja
push
mov
lret
out
sbb
clc
xorl
inc
nop
or
fwait
arpl
and
dec
int
pop
out
cwtl
mov
loop
xor
cmp
jmp
xchg
pusha
cmpl
push
add
in
or
mov
cli
loop
ss
idivl
jge
cmp
dec
mov
sbb
jb
rcrb
pop
mov
pop
lcall
rolb
xchg
cli
ja
and
pop
cmp
je
fwait
ret
xor
jnp
pop
mov
into
shl
pop
addb
xor
pushf
in
mov
sub
sbb
lock
or
mov
out
call
into
jp
jl
xor
push
mov
xchg
loope
inc
dec
xchg
loope
inc
cmp
xor
roll
std
push
jmp
mov
mov
sbb
dec
mov
inc
push
cmpsl
mov
imul
mov
mov
push
pop
cmp
mov
mov
xchg
addr16
xchg
mov
and
frndint
adc
cltd
xorb
inc
add
and
out
int3
popa
in
cmpsl
sub
idivl
leave
sarl
jb
push
adc
adc
int
or
jge
push
sbbl
scas
mov
pop
out
ret
out
dec
stos
es
add
leave
in
cmp
sub
jae
aad
clc
fmulp
mov
mov
leave
adc
cmp
or
pop
int
js
mov
clc
mov
sub
jae
lock
cltd
aam
cmp
out
mov
add
scas
mov
movsl
mov
mov
and
push
add
aam
and
fcmovu
inc
mov
sti
jge
inc
enter
cmp
xor
ret
mov
mov
fidivrl
pop
je
and
lds
sbb
or
hlt
and
push
in
jmp
insb
jle
rolb
aam
out
sbb
jb
cld
and
inc
mov
cltd
ror
push
ss
add
in
fs
add
dec
push
lods
je
inc
addr16
push
imul
and
out
mov
xchg
sbb
sub
aam
sub
icebp
in
jmp
mov
movsb
cmp
inc
scas
rorb
pop
xor
xchg
push
pop
or
sbb
push
cwtl
and
shlb
test
nop
jbe
mov
jne
repnz
push
lahf
pop
js
ja
push
adc
sbb
dec
xchg
popa
xchg
inc
dec
fstps
mov
mov
pop
mov
pusha
inc
push
cmp
pop
sub
mov
push
mov
adc
stos
outsl
inc
pop
mov
mov
call
popa
jmp
adc
loopne
lahf
lods
arpl
pop
jmp
std
jae
sub
into
test
ljmp
mov
nop
imul
jge
pusha
pop
into
and
movsl
aad
xchg
out
jge
cmpsl
dec
jns
adc
or
out
mov
rorb
inc
pop
pop
jl,pn
clc
test
fdivs
adc
fcomps
cmp
cmp
mov
idivl
sbb
enter
jecxz
sub
sub
sbb
fisubrs
xchg
cwtl
pop
dec
lcall
inc
lret
cltd
lret
dec
sbb
push
insl
leave
jae
mov
xchg
test
sub
cmp
and
cmp
jg
pop
fs
std
test
or
mov
bound
test
mov
mov
popw
cmc
xchg
fdivs
call
lods
adc
sbb
test
mov
dec
jbe
sbb
or
mov
enter
out
insl
in
pop
push
or
out
in
pop
neg
stos
popa
jge
icebp
cmp
in
lock
enter
adc
and
pop
inc
scas
negb
dec
rcll
mov
pop
mov
or
pop
ret
dec
mov
pushf
scas
loopne
imul
movsl
jmp
mov
mov
mov
push
xor
xor
int3
pop
sbb
pop
lea
sbb
clc
icebp
cltd
mov
mov
mov
ficompl
repz
pop
nop
scas
or
popa
mov
mov
sub
cmpsb
push
imul
mov
xchg
mov
jmp
scas
andb
aaa
xchg
loope
jle
push
sbb
je
stos
cld
ret
jmp
push
cmc
or
pop
pop
fs
mov
dec
or
aam
jp
andl
mov
xor
les
sub
adcl
add
jg
sahf
adc
mov
xchg
call
mov
imul
leave
mov
push
mov
pusha
stos
rcl
mov
xor
cmp
sbb
inc
inc
cmp
lret
inc
mov
add
insb
hlt
push
adc
or
jb
dec
int
jb
shlb
adc
das
ja
nop
xchg
pusha
add
test
lock
jecxz
mov
mov
lahf
dec
mov
inc
cmp
aam
mov
es
and
jg
mov
mov
or
mov
pop
adc
outsl
push
pop
jb
mov
fs
mov
jnp
mov
dec
xchg
popa
stos
lahf
mov
icebp
in
sbb
dec
push
stc
sbb
cmp
movntps
int3
xchg
lea
adc
hlt
lods
outsb
lahf
dec
cmp
push
sub
and
xor
cli
ljmp
dec
or
icebp
mov
mov
mov
mov
add
cs
sub
push
and
leave
and
fwait
gs
cmp
lea
pusha
cs
movsb
dec
xchg
cmp
sub
or
dec
pop
lret
jo
ja
movsl
sub
insb
outsl
dec
and
cltd
rolb
mov
and
lahf
popa
das
out
lea
push
out
ss
pushf
mov
jns
dec
fstps
xchg
or
pusha
pop
and
sub
cli
dec
jae
pop
out
cld
push
lahf
sbb
or
mov
inc
mov
cmpsl
popa
stos
xor
pop
inc
xchg
std
pop
sub
pop
adc
popf
and
popl
lcall
addb
inc
orb
faddl
adc
out
jb
pop
xor
test
sbb
cwtl
push
insb
int3
shl
push
and
push
daa
into
jae
cmp
dec
iret
adc
lods
mov
adc
popa
pop
push
stos
inc
jp
inc
lcall
inc
jae
adc
or
push
mov
and
push
lds
or
jo
inc
das
pop
inc
mov
mov
cmpsl
int3
das
scas
xchg
mov
outsb
mov
leave
mov
mov
stos
iret
inc
xchg
cmp
push
in
push
or
movsb
xorl
pop
insb
sub
adc
in
cltd
and
insb
add
sub
mov
xchg
divb
daa
xchg
lret
add
sub
push
xchg
loopne
fildll
dec
mov
lods
popf
cld
cmp
cwtl
sar
mov
pop
xchg
icebp
addl
xor
mov
ret
popf
pushl
push
sbb
imul
mull
push
xchg
xor
popa
sbb
into
imul
pop
out
idivl
fildll
dec
imul
cmpsl
andl
loopne
imul
mov
scas
cmp
clc
or
imul
stos
ss
or
pop
and
es
gs
lds
fucom
add
sub
lods
dec
and
das
test
mov
mov
xor
out
nop
xchg
and
mov
adc
icebp
xor
push
add
inc
mov
popf
add
or
jmp
ret
cld
add
aam
sbb
inc
loopne
cmp
lds
cltd
dec
arpl
adc
or
cwtl
cmpsl
je
pop
popf
aad
outsb
stc
or
pop
lods
dec
lods
adc
iret
push
mov
fdivrs
pusha
mov
push
mov
ret
dec
pop
pop
jbe
ret
or
sbb
sbb
push
or
mov
leave
inc
sbb
add
stos
stc
mov
dec
fbld
or
fwait
pop
ss
lds
fcoms
jle
fidivl
push
add
inc
movsl
pop
cmp
in
mov
jne
or
fimuls
adc
or
test
iret
cmp
cwtl
fcmovnb
out
stos
mov
fistl
push
rcrb
int
popf
mov
je
xor
push
push
push
xchg
fdivrs
xchg
jmp
aad
inc
sbb
cmc
sub
stos
shrl
and
mov
icebp
loop
ds
stos
sti
sub
inc
cmp
xchg
sahf
inc
mov
in
sbb
inc
mov
imulb
sub
stos
sti
dec
hlt
pop
adc
dec
idiv
addr16
test
jp
aad
xlat
lds
pushf
xchg
pop
sub
pop
mov
lds
adc
enter
jno
xchg
mov
sbb
sub
mov
cwtl
into
std
xor
inc
dec
push
mov
fs
push
sub
add
ljmp
push
cmp
lds
and
lock
clc
jecxz
outsb
cli
xchg
cmp
pop
or
xor
repnz
sub
sub
mov
xchg
push
and
test
add
movsb
pop
adc
rcrb
cmp
jb
sahf
in
into
cmp
cmpsb
ds
adc
popf
cltd
cmp
push
shrb
aad
add
jo
and
or
add
cmpsl
xchg
les
imull
stos
ss
xchg
jns
sbb
aad
cmp
mov
test
adc
lahf
xchg
jnp
cmp
inc
jmp
jp
mov
test
lods
cmpl
dec
jp
xorl
sub
push
mov
out
inc
mov
int
nop
es
mov
daa
jno
push
pop
ffree
leave
dec
lret
movsl
aam
cmp
repnz
push
imul
push
pop
xor
bound
fldcw
pop
pop
adc
jmp
pop
jns
cld
jb
mov
outsl
push
lods
xor
mov
push
or
gs
push
inc
shlb
mov
push
lcall
xor
jnp
sub
gs
add
jbe
cmp
sbb
test
mov
push
xor
push
aas
out
out
adc
push
pop
adc
mov
enter
and
clc
pop
or
insb
dec
loope
loop
aam
cmpb
inc
inc
or
scas
rorb
mov
sub
push
test
push
dec
mov
mov
mov
sub
mov
test
enter
test
jno
cmp
push
and
push
cmp
int3
sub
stos
nop
xchg
ficompl
push
jle
push
mov
xchg
les
psadbw
cmpsb
pop
pop
push
mov
mov
mov
or
ret
repnz
pop
xchg
jno
imul
mov
pop
cmp
popa
sbb
movsl
and
aaa
shl
sub
shl
adc
ljmp
sub
fwait
lock
les
pinsrw
stos
push
mov
cs
lods
mov
dec
scas
mov
cmc
or
aam
fbstp
cmp
or
push
xlat
mov
data16
xchg
lods
loop
mov
mov
fdivrl
mov
flds
inc
add
push
lds
popa
inc
inc
ds
andps
sbb
in
and
xor
mov
movsb
into
sbb
sbb
dec
int
sbb
mov
jle
push
push
mov
sub
pop
fbstp
es
mov
and
popf
sub
test
pop
into
pop
and
jmp
pushf
lcall
push
pop
dec
adc
sbb
inc
xchg
pop
push
mul
lret
mov
std
js
mov
cmp
sub
dec
xchg
sub
push
test
jno
insb
psrlw
js
cli
jno
fisubl
mov
dec
lret
fwait
push
js
and
sahf
fsubl
jne
aam
cmp
pop
jnp
clc
in
mov
es
inc
js
cld
sbb
or
pop
xor
xchg
cmpsl
mov
xor
shlb
cmc
pop
cmp
lcall
mov
fiadds
js
insl
cmp
inc
jecxz
cmpsb
inc
pusha
or
adc
pop
xor
pushf
push
push
cmp
call
imul
jl
nop
jge
ror
cmp
pushf
subl
cmp
adc
adc
je
or
push
sbb
ss
stos
xlat
mov
dec
jno
pop
daa
in
fstl
add
mov
or
pushf
jl
cmc
add
scas
mov
aas
fwait
or
inc
popa
out
inc
sub
add
in
mov
ljmp
add
jns
adc
leave
ret
jp
inc
icebp
sub
gs
ret
inc
mov
mov
or
jo
pop
cltd
cli
insl
dec
insl
int
xchg
cmp
mov
dec
xor
pop
and
or
adc
aas
adc
bound
or
dec
push
mov
lods
mov
in
fstpl
and
popa
fnstcw
adc
repz
dec
scas
mov
in
incl
dec
aas
ret
daa
mov
lock
cltd
jmp
inc
es
xchg
cli
push
nop
in
aam
cmp
test
dec
push
pop
xchg
aam
or
std
add
daa
lea
push
test
fstps
pusha
fnsave
rcl
mov
xchg
adc
or
push
mov
jae
lcall
hlt
outsb
in
adc
ret
cmp
nop
jg
aad
pop
push
out
int
xchg
xlat
mov
xor
shlb
xor
sbb
popa
stos
fcoms
outsl
xchg
and
lret
outsl
dec
ret
std
mov
dec
cmpb
and
jae
xchg
jo
cmp
push
xchg
or
xchg
hlt
adc
mov
add
mov
sub
pop
mov
inc
test
pop
jnp
and
movsl
in
mov
mov
jo
out
mov
mov
mov
mov
lahf
inc
into
dec
xor
jne
fnstenv
lahf
cwtl
sub
mov
fnstsw
fistps
and
stc
and
imulb
xchg
pop
stos
mov
push
jmp
sahf
adc
sbb
test
jmp
inc
pop
jnp
cmp
pushf
leave
test
mov
outsb
int
sti
adc
push
cmp
outsb
lret
pop
lods
xchg
and
pop
pop
lcall
aas
pop
push
loopne
int3
sti
repz
mov
int
mov
jno
aaa
jg
or
rcrl
aad
jecxz
add
mov
popa
and
xchg
xor
sub
mov
leave
xor
sarb
aad
in
fdivr
sub
ja
mov
adc
scas
dec
cltd
into
clc
scas
je
dec
movsl
lods
das
mov
pop
es
inc
pop
push
sub
mov
xchg
js
outsw
jnp
push
pop
orl
lods
aam
inc
mov
xchg
roll
jl
or
dec
btc
push
es
sahf
loop
sub
nop
push
dec
dec
xor
outsl
add
subl
lock
jge,pt
jo
dec
or
stos
aas
scas
faddl
pop
inc
push
in
popa
insb
push
adc
dec
mov
mov
mov
sbb
sbb
ds
and
jge
dec
jae
cmpsb
xchg
mov
xchg
lret
jb
adc
or
aaa
insb
mov
inc
pop
jecxz
sbb
sbb
fwait
hlt
sub
pop
xchg
addr16
andl
jnp
out
aaa
sti
leave
push
sub
xor
sti
les
dec
rorb
je
mov
fsub
scas
test
or
and
cmpsb
rorl
mov
stos
inc
ss
dec
and
insb
lods
in
test
scas
xor
loope
push
jbe
sbb
jg
subb
push
lahf
sub
or
mov
fisttpll
cld
mov
push
lock
xor
sbb
cltd
mov
sahf
sub
icebp
mov
mov
push
jmp
dec
aaa
cmpsl
ret
fcmove
push
mov
pop
stc
mov
push
inc
jae
mov
jbe
xchg
loope
jle
xor
jmp
lods
icebp
adc
mov
mov
fadds
insb
aad
or
dec
inc
pop
movsl
shrl
or
lahf
mov
jmp
fiaddl
sbb
cs
mov
mov
cmp
sub
sbb
sbb
push
and
cmp
pop
fsubrl
mov
push
xlat
add
in
jge
cmp
adc
jnp
insb
push
lret
inc
sub
jno
fadds
jg
jecxz
cmp
test
xor
and
sub
dec
add
fstps
push
lds
jo
loopne
negb
popa
xchg
xor
sti
push
mov
scas
mov
pop
add
test
pop
ror
push
out
popf
out
cwtl
xor
xlat
fsubl
and
mov
mov
or
pusha
xor
cmp
mov
jecxz
cmp
movsb
sahf
in
test
inc
or
outsb
nop
test
xor
jae
xchg
inc
cmpsl
dec
fdivs
xchg
mov
xchg
lods
lock
mov
push
mov
xlat
pop
je
cmp
stos
enter
insl
mov
adc
cmp
insb
jb
fimull
mov
inc
cli
nopl
out
je
ds
daa
mov
push
jg
push
test
sub
or
sarb
lahf
leave
adc
inc
enter
lods
push
xchg
mov
push
testl
repz
dec
xchg
into
dec
push
xchg
subl
pusha
inc
dec
xor
movb
jnp
in
push
fbld
jns
xchg
cs
sbb
cmp
sub
testl
mull
sbb
mov
in
stos
ja
push
sub
dec
or
fcompl
sbb
test
xchg
sub
es
mov
mov
stc
mull
aam
inc
dec
mov
push
cs
xchg
int
mov
adc
pop
push
cs
jns
cltd
pop
mov
and
cmp
fdivrs
adc
hlt
mov
mov
stos
in
fistpll
pop
and
dec
rorb
mov
mov
dec
adc
add
call
arpl
ficoms
mov
shl
or
dec
or
push
fwait
or
mov
xchg
sub
lret
cwtl
jo
add
call
mov
mov
pusha
hlt
leave
inc
inc
add
push
inc
fnstsw
sub
cld
aam
stos
dec
inc
mov
test
sahf
out
mov
stos
in
pusha
ljmp
mov
add
mov
cli
ret
or
mov
inc
fwait
cld
push
or
inc
add
scas
mov
out
repz
jmp
inc
sbb
addb
inc
mov
fwait
imul
ret
xchg
xor
push
insl
or
es
pop
mov
mov
popa
gs
cmp
mov
je
cmp
pushf
add
push
ficoml
leave
mov
jmp
fcomi
dec
pop
jg
xor
or
push
pop
dec
sub
adc
outsb
sbb
mov
cmpl
dec
inc
mov
cld
imul
outsl
adc
pushf
pop
push
or
repnz
das
xor
cld
xor
push
inc
jnp
inc
sub
push
inc
ret
push
lock
push
push
push
jl
inc
gs
into
fwait
outsl
cmp
xchg
add
scas
jae
inc
adc
and
inc
ljmp
xor
add
xor
mov
pop
or
fists
cmpsb
pop
loop
xchg
addr16
xor
jo
out
mov
in
sub
xor
add
sbb
inc
push
in
mov
xchg
ljmp
pop
movsb
lds
ja
mov
aad
leave
adc
fs
lahf
icebp
lea
enter
sub
mov
test
pop
movsl
shrl
adc
push
push
push
out
pushl
push
jno
popf
ja
insl
ljmp
ds
and
push
pop
stc
mov
fstpt
fwait
iret
pop
sti
cmp
mov
lods
xchg
push
push
sub
lcall
les
mov
test
cmpsb
mov
pushf
ja
lods
out
mov
push
mov
mov
adc
lock
mov
pop
iret
lahf
mov
lds
push
cmc
rolb
or
jmp
mov
ss
fimuls
cmp
addr16
aad
fucomip
sbb
lods
push
xor
pop
inc
inc
xor
mov
sbb
jl
es
mov
xchg
jbe
jmp
adc
lds
inc
and
insl
adc
popa
jbe
jno
fnstcw
je
jb
into
pop
xchg
fsts
negl
push
xchg
in
mov
inc
jge
sbb
push
cmp
inc
sarb
out
mov
adc
mov
repz
pop
loope
xor
mov
cwtl
cmp
fisubs
test
jg
out
cwtl
cmc
shlb
enter
sub
push
scas
fisubrl
in
or
mov
or
lea
sbb
mov
mov
stos
iret
push
andb
add
iret
sub
lret
adc
dec
in
push
cmpsl
andb
cld
and
movsl
out
push
sti
sbb
daa
icebp
repz
out
sahf
mov
pusha
jb
mov
cmpsl
testb
int3
loopne
inc
inc
sbb
jmp
dec
or
fdivrs
in
in
fidivs
ljmp
mov
es
aam
dec
adc
stos
push
cmp
xchg
pushf
ficoml
add
sbb
lods
pop
dec
pop
stc
inc
loopne
das
jo
enter
pop
jbe
out
mov
inc
aaa
jae
mov
mov
ja
xchg
sbb
dec
pop
add
adc
test
les
enter
inc
sbbl
or
popl
jbe
mov
mov
jecxz
inc
jle
mov
pop
jle
push
sbb
call
mov
mov
ficompl
jg
or
sbb
push
adc
inc
ret
xchg
imul
xor
dec
mov
jg
fsubrp
xchg
xchg
jo
xorb
push
xchg
mov
subb
sarl
clc
mov
inc
mov
mov
mov
insl
mov
rcrb
dec
addl
xor
or
xchg
xchg
je
out
int3
int
inc
pop
repz
jecxz
into
xchg
aas
sub
loop
sub
sbb
les
sub
dec
stos
jbe
repz
dec
push
xor
pop
dec
inc
mov
dec
arpl
hlt
je
mov
jecxz
or
xor
jp
repnz
push
xlat
lret
jns
js
xchg
xorb
adc
lahf
xor
flds
adc
jmp
dec
mov
mov
push
movsl
repz
dec
sbb
in
je
les
cmp
or
mov
je
out
jo
pop
dec
and
push
lret
leave
js
imul
lret
mov
and
js
ror
imul
insb
fcoml
outsb
pop
loope
shll
shl
add
mov
inc
test
loop
inc
adc
ljmp
mov
sbb
adc
out
jbe
cmp
push
cmp
add
loopne
dec
jbe
cmpsb
sbbb
stos
es
aas
or
les
fcmovne
insl
nop
sub
pop
cmp
xchg
cmp
fists
xor
mov
stc
sub
ror
dec
aas
mov
add
out
fsubs
into
mov
inc
and
pushf
xlat
sub
sbb
js
push
pop
clc
enter
adc
xorl
sti
mov
sbb
ljmp
or
testl
data16
les
andb
pop
mov
loop
dec
cmpsb
out
adc
fdivl
pop
inc
mov
fsts
adcb
and
xor
add
pop
push
mov
and
mov
movsl
sbb
mov
push
outsl
loopne
popa
xor
push
imul
xchg
fidivrl
cmp
push
or
outsl
popf
int3
jecxz
int
mov
jmp
cwtl
adc
xchg
pop
int3
insb
iret
test
cmpsl
and
pusha
loopne
or
mov
xchg
xchg
popa
cmc
dec
leave
out
ficompl
lret
shl
scas
adc
gs
pusha
inc
stos
push
xchg
pop
movb
mov
jae
in
add
pop
idiv
jl
sub
pop
fidivs
loopne
leave
lds
pusha
xchg
aad
push
mov
aam
cwtl
clc
push
mov
sub
aas
jnp
pop
xchg
cli
cmpsb
iret
in
sub
inc
nop
push
rolb
hlt
mov
icebp
mov
push
inc
and
aas
aas
fdivs
mov
pop
arpl
xchg
xor
inc
dec
push
mov
ret
cmp
adc
jecxz
cmp
jl
mov
xor
cs
ja
lods
mov
cld
dec
xor
movsl
arpl
mov
jl
outsl
push
repnz
mov
push
push
divb
fisubrl
sbb
inc
repz
jne
lea
dec
andb
fs
push
daa
adc
jmp
sbb
push
lods
lret
bound
jns
lahf
lahf
enter
and
dec
jmp
fcmovnb
inc
inc
xlat
mov
add
xchg
cmpsb
pusha
jle
sti
inc
les
js
sub
pop
sahf
shl
ret
rorb
in
adc
dec
cmp
push
rcrl
outsb
xchg
mov
repnz
jle
push
repnz
and
dec
outsb
test
repnz
rclb
mov
lea
dec
imul
bound
pop
inc
mov
outsl
mov
clc
sub
pop
jne
insl
and
fidivs
and
and
rorl
pop
mov
out
jnp
cmpb
aad
sbb
add
sbb
mov
pop
cmpsb
adc
ljmp
and
pop
pop
enter
lahf
movsl
sub
mov
or
sub
sbb
aad
push
lret
add
mov
in
cmpsb
jb
jno
fdivr
cwtl
test
add
jl
adc
push
shrl
aam
push
sbb
jmp
mov
sbb
imul
jmp
js
add
rol
xchg
mov
nop
mov
int
sub
lret
push
in
xchg
cmp
es
loopne
loopne
pop
pop
orb
add
rorl
out
test
cmp
add
jns
pop
in
shr
and
aam
shll
or
neg
jns
pop
push
mov
pusha
push
mov
into
lcall
or
popf
xlat
xchg
stos
repnz
jae
mov
nop
rclb
xchg
mov
add
or
mov
or
sbb
push
test
fs
lcall
stos
add
add
testl
mov
sub
xor
xchg
xchg
xchg
imul
cwtl
cmp
mov
pop
lret
fisttps
pop
stos
push
or
call
dec
sub
push
lods
ret
lmsw
inc
push
faddl
or
stos
jmp
fsubrl
fcoms
mov
or
mov
roll
and
push
fcoml
cmpb
sarl
cmc
les
cmp
cmpb
mov
ret
int3
in
cmp
outsb
mov
pop
jb
xlat
pop
xor
push
jmp
arpl
das
cmpsb
mov
add
sbb
mull
cltd
mov
cmp
sub
std
fbstp
jnp
cmp
in
jns
popa
aas
cmp
push
pop
mov
mov
sbb
ffreep
push
movsl
push
mov
push
inc
cmpsb
mov
xchg
pusha
mulb
push
stc
inc
loop
adc
fwait
push
aas
mov
jnp
addl
sti
xor
aaa
out
ret
lds
dec
mov
mov
daa
jp
xor
cs
int3
sub
dec
adc
or
add
divb
idivb
imul
push
imul
sub
inc
out
adc
ljmp
fs
scas
and
inc
in
daa
pusha
cwtl
into
int
rclb
mov
jne
clc
cmp
imul
jns
mov
popa
cli
orl
mov
pop
push
sub
std
jle
mov
movl
jge
or
pop
adc
in
xor
xchg
dec
push
cmp
cmp
add
sbb
sbb
mov
mov
xor
iret
adc
shrl
lds
test
push
ja
lret
lahf
rclb
push
lcall
imull
sub
or
xor
xchg
popaw
je
xor
cmp
in
dec
xor
pushf
push
popf
es
call
sti
or
lods
scas
sub
push
imul
jno
int
testb
xchg
leave
mov
dec
movsl
movsl
xchg
in
out
inc
xchg
test
fidivs
xor
orb
dec
xor
rcll
cmpsb
push
sarl
fnstsw
pop
pusha
shrb
outsb
cwtl
loopne
cmpsb
push
xchg
gs
or
mov
and
sbb
cmp
inc
adc
sub
jae,pt
and
sub
cmc
sub
pop
sahf
mov
mov
fwait
jae
into
int
dec
in
and
pop
mov
xor
sub
out
sbb
ja
jmp
jecxz
in
subl
dec
jno
push
mov
into
lcall
pop
ja
push
orl
sub
je
and
xchg
xor
xchg
imul
pop
loopne
ret
mov
shrl
sub
mov
cwtl
cli
xor
idivb
in
pusha
dec
aam
mov
scas
pop
ds
mov
nop
jae
add
aam
cmc
jecxz
jb
jg
jno
inc
and
loop
dec
fldenv
mov
jo
mov
mov
push
pop
push
in
in
dec
lds
sarl
pop
fcomps
or
insl
xchg
es
sub
push
pop
xchg
add
hlt
jns
into
aaa
xlat
xor
jmp
pop
xlat
jl
fadds
in
nop
pop
jo
rcl
inc
mov
stc
sbb
insl
adc
inc
cli
push
pop
xchg
xor
mov
jb
scas
mov
jecxz
add
pop
push
cmpsl
lods
or
ljmp
std
aas
scas
mov
pop
mov
std
mov
pop
mov
sbb
imul
sub
fwait
rorb
jle
push
fs
push
jnp
and
sti
loop
in
mov
icebp
push
lods
pop
les
repnz
jo
xor
mov
xor
test
add
push
lret
and
jns
mov
movd
xor
xchg
icebp
add
mov
int
out
dec
pop
loopne
jb
push
mov
lods
cmp
inc
jns
sbb
push
inc
ds
iret
stos
add
cwtl
add
adc
jnp
push
sub
push
mov
xor
push
lds
and
sbb
push
sub
dec
shlb
xlat
dec
sub
dec
sbb
leave
fcoml
aaa
cli
mov
in
rcrl
nop
sub
xchg
imul
repnz
aad
inc
dec
sbbl
lods
cltd
int3
in
jno
cltd
mov
xchg
fwait
sbb
jmp
daa
push
addr16
mov
mov
sub
mov
jbe
mov
push
inc
loopne
lods
push
mov
and
fcom
pop
push
cmp
mov
push
pop
or
sub
out
xchg
inc
cltd
out
and
mov
add
xlat
mov
and
ret
loope
lea
or
push
sbbl
std
cmp
push
xchg
les
dec
adc
and
xchg
testb
mov
dec
dec
ljmp
xchg
mov
dec
iret
or
mov
fwait
push
push
cmp
or
mov
push
jne
loop
cmp
dec
ljmp
mov
scas
dec
mov
dec
adc
mov
outsb
ljmp
lret
sbb
fcmovb
fidivl
sub
adc
sbb
and
shrl
rcll
je
or
je
jle
sbb
dec
xchg
jecxz
push
xchg
lahf
std
jg
js
imul
out
dec
jo
xchg
xlat
das
mov
ljmp
repz
test
push
out
sahf
sbb
push
and
jg
or
jnp
xor
xchg
add
call
cmp
add
cltd
mov
mov
rolb
out
ficoms
scas
les
or
cmp
pop
fistpll
pop
xchg
fimull
add
jae
lcall
inc
clc
jae
cs
mov
jge
sub
dec
loop
jno
inc
xchg
cmpsl
jne
das
movsl
cld
mov
aaa
and
loope
call
outsl
mov
xor
dec
sahf
cmc
pusha
lcall
and
mov
push
mov
mov
cmp
mov
aam
sub
sbb
fwait
fwait
cmp
test
shlb
cmp
outsl
jecxz
push
push
pop
sbb
clc
popl
xor
add
addl
mov
adc
lods
lea
mov
and
cmp
jle
inc
mov
xorb
lods
je
ljmp
hlt
xchg
and
cld
and
pusha
mov
cmc
outsb
inc
add
xchg
pop
sub
adc
cmp
cmp
cs
orl
sub
jl
fs
jmp
cmp
inc
repz
cmp
push
push
outsl
mov
lock
popa
pop
push
adc
or
push
das
add
loop
lahf
sub
int
push
call
push
or
gs
push
andl
movsl
hlt
pop
loope
stc
fcoml
cli
repnz
lds
loop
inc
pop
and
pop
ret
repnz
mov
pop
push
inc
push
inc
dec
fsubrl
ret
xor
cmpsb
jne
adc
out
jbe
inc
lret
jmp
repz
sub
inc
insl
mov
out
push
sub
mov
pmullw
shufps
repnz
sahf
jo
cmp
xlat
scas
nop
push
leave
addl
pop
loope
xor
mov
es
xchg
pop
lods
fmuls
push
dec
cmpsl
mov
push
xlat
insl
push
pusha
or
imul
popa
adc
negl
or
movntps
dec
divl
sbb
movzbl
movl
pop
push
inc
dec
iret
adc
ljmp
aam
dec
fwait
jne
jbe
pushf
daa
pop
push
xchg
movsl
ffree
imul
push
jo
call
inc
popf
inc
push
int3
or
push
xchg
mov
jno
call
clc
mov
inc
xorl
shlb
je
inc
pop
test
push
dec
ja
or
xchg
inc
and
pop
imul
icebp
mov
mov
loop
sar
and
dec
lods
xor
or
and
insb
sub
dec
scas
add
das
es
aad
mov
std
push
jl
aam
push
ror
and
push
push
addl
test
push
adc
pop
inc
cld
clc
fwait
cmp
ja
lods
mov
fwait
aaa
pop
push
mov
addr16
fs
jb
xchg
test
imul
pop
sub
xor
cmp
std
int
data16
dec
push
mov
xlat
out
iret
sbb
repnz
bound
push
into
pop
into
pop
bound
push
shl
out
testb
push
adc
adcl
sti
sub
push
sbb
cld
push
test
sub
sub
lods
inc
and
hlt
adc
cmpb
incb
cmp
shll
movsl
sub
jecxz
and
iret
movsb
jge
mov
aad
ss
insl
imul
xchg
arpl
mov
ret
xchg
adc
adc
dec
idiv
fldt
je
jle
test
jg
das
mov
sbb
pop
bound
or
fwait
rclb
scas
push
push
shlb
xchg
lea
movsl
add
jns
pop
xchg
lock
inc
dec
popa
sub
movsl
mov
pop
stc
bswap
mov
mov
xor
mov
push
add
pop
jae
mov
xor
add
add
stc
das
xchg
jne
jl
popa
mov
flds
mov
and
test
sub
adc
insb
jne
loop
loope
sahf
mov
shlb
jle
xlat
lret
leave
xchg
ds
xchg
fcoml
push
cmc
push
xchg
std
popa
push
xor
minps
add
sub
popf
add
sbb
jl
je
std
and
add
leave
ja
jbe
ss
int3
jno
std
mov
jne
sbb
pop
adcl
mov
xchg
mov
push
into
cmc
inc
mov
in
loop
adc
test
es
lcall
repz
shll
sbbl
aas
mov
and
popa
add
push
cmp
repz
xor
pusha
add
je
mov
icebp
mov
mov
das
gs
int
ret
cld
cltd
sbb
pushf
int3
test
xchg
xchg
inc
pop
sbb
pop
gs
xor
inc
stos
loope
gs
pop
sub
scas
add
pop
adc
mov
cmp
inc
divb
test
mov
inc
jno
loope
imul
xchg
fs
movsl
les
dec
push
popa
xchg
repnz
inc
xor
add
xchg
cmp
daa
dec
ja
fs
int
sti
cmpb
outsl
insb
pop
sahf
xor
sbb
or
insb
lds
push
mov
xchg
jmp
ljmp
mov
les
pop
mov
mov
cmp
mov
xor
add
sub
and
xchg
cmpsl
adc
or
orl
movsb
and
aad
cwtl
cmp
jno
jp
testl
scas
add
mov
dec
push
test
stos
decl
js
cmp
jmp
test
inc
sbb
sub
cli
jnp
movsl
mov
std
lods
ds
add
or
lcall
gs
dec
out
xorb
je
mov
imul
push
inc
inc
xor
fstpl
dec
mov
scas
test
testl
orl
fbld
mov
test
push
leave
loope
pop
cltd
popa
pop
ret
int
cld
push
xor
rcrl
fmul
push
jle
add
add
daa
or
push
cmp
xor
fwait
lods
test
cmpsb
cmp
iret
cmp
mov
jle
add
ss
loope
jge
repnz
aad
dec
data16
idivb
out
ja
fistps
cmc
out
jmp
loop
add
icebp
sbb
ja
jmp
pop
xchg
lahf
inc
jne
jecxz
cmp
or
push
inc
test
xor
xor
pop
mov
inc
xchg
fiadds
cwtl
and
cmpsb
sarb
rol
in
cmp
adc
jo
mov
lret
movsl
imul
ret
in
jecxz
push
push
mov
mov
faddl
div
ret
mov
shlb
sysret
inc
push
xchg
adc
xchg
shl
mov
push
cmp
push
pop
fdivl
aam
mov
neg
iret
mov
scas
stos
out
lods
out
movsl
mov
mov
outsl
ja
xor
xorb
rolb
or
sbb
and
dec
xor
push
inc
mov
jbe
cmc
in
adc
mov
push
xchg
cwtl
inc
loope
mov
fucomi
popf
ret
fcmovbe
mov
mov
idiv
filds
divl
cltd
fidivrs
adc
xor
xchg
scas
xchg
sub
mov
repnz
mov
xor
add
lods
outsl
lods
out
mov
out
mov
inc
cmc
clc
inc
rcrl
lret
cli
into
ja
shrl
sbb
sub
pop
enter
mov
mov
lcall
push
rcll
or
test
or
mov
shrl
lods
arpl
pop
or
adcl
icebp
push
or
lcall
cmp
out
bound
pop
pop
sbb
sbb
cmp
daa
out
adc
dec
push
push
bound
jae
fdiv
int
inc
lea
call
popa
scas
pushf
sub
cld
xchg
sub
push
push
stc
and
and
add
in
sub
insb
xchg
sahf
or
sbb
inc
add
inc
mov
je
scas
fcmovnbe
pop
movb
mov
jns
push
cmpl
cmpsl
dec
fsubl
mov
sbb
adcb
add
std
sub
add
loop
pop
loopne
scas
nop
add
xor
int
dec
push
mov
mov
cmp
insl
jmp
shll
cmp
subb
xchg
hlt
and
jae
push
mov
daa
dec
sbb
lcall
insl
dec
clc
mov
cli
add
cmp
and
dec
add
push
pop
pop
or
inc
add
loope
sub
subl
and
sbb
bound
mov
fnstsw
and
mov
inc
mov
jns
xchg
es
push
dec
stos
pushf
imul
movsb
orb
push
shlb
lds
cmpl
mov
sbb
shlb
leave
ljmp
cmc
xor
pop
or
sbb
mov
in
lret
adc
mov
xor
cld
jp
mov
push
push
adc
nop
mov
mov
dec
xchg
rcrb
stc
call
jl
int
sbb
loop
addr16
jp
mov
popf
and
mov
or
imul
push
xor
push
fstl
hlt
xor
cmp
jl
add
xchg
incl
jb
xchg
and
das
lahf
push
pop
loopne
pop
or
pushf
jecxz
enter
cmp
insb
add
out
shll
mov
cs
leave
mov
hlt
and
inc
mov
cmc
mov
clc
push
movl
movsl
add
jnp
js
pop
fbld
adc
cmp
inc
stos
push
orl
sbb
ret
icebp
int3
or
das
loopne
jmp
inc
dec
adc
cltd
mov
pop
hlt
pop
pop
push
or
insl
push
test
or
mov
pop
fs
les
inc
push
mov
fimull
stc
imul
sbb
pop
push
and
or
addb
sbb
and
xchg
ljmp
cltd
aaa
rcrl
cld
push
pop
mov
sahf
bnd
add
dec
xor
jbe
add
outsb
fstps
imul
or
xor
fadd
jo
xlat
xchg
and
and
dec
mov
into
imul
test
push
test
xor
cwtl
fsubrl
stc
adc
mov
aas
xor
mov
mov
xchg
icebp
aam
sbb
ljmp
push
enter
mov
sti
cmp
sub
data16
adc
dec
add
orb
and
dec
int3
jecxz
xchg
hlt
test
fsubrs
es
call
scas
cmp
inc
or
sub
mov
adc
push
mov
es
adc
inc
cwtl
mov
mov
cmc
js
xor
in
mov
cltd
xor
loop
sbb
xor
xchg
pmulhw
fs
lcall
xchg
repnz
cmp
movsb
add
call
pop
js
mov
pop
cmpsb
and
movsb
fs
mov
dec
jmp
push
sbb
mov
push
ss
mov
lahf
stc
stc
loope
aam
lret
inc
lock
mov
lahf
and
jne
ret
sub
lret
daa
mov
pushw
or
pop
in
xchg
jmp
pusha
incl
in
jg
and
test
xchg
xor
push
lods
stc
add
stos
cmp
adc
test
mov
inc
dec
push
jnp
mov
push
xor
xor
dec
or
rorb
sarb
add
iret
pop
imul
adc
mov
fimull
rcr
mov
negb
xor
cmp
insl
inc
jp
mov
xchg
imul
popa
or
das
mov
push
mov
or
std
cmp
pop
pop
push
stc
pop
push
aas
push
lret
out
mov
sub
push
mulb
ljmp
scas
xchg
sub
aaa
sarb
mov
xchg
and
ss
lea
sbb
xchg
pop
enter
subb
clc
nop
mov
push
sbb
cmpsl
add
aas
jp
inc
aaa
pop
rcrb
mov
add
scas
pop
pop
fnsave
push
add
lea
pop
mov
stos
xor
and
sbb
mov
lds
push
mov
sbb
adc
cwtl
inc
popf
add
movsl
inc
mov
sub
call
lcall
inc
shr
pop
mov
and
in
xor
aas
bound
in
pop
or
and
or
sti
add
sbb
dec
dec
stos
dec
add
xchg
cmp
dec
dec
sbb
jo
vxorps
push
inc
sahf
mov
enter
xsha1
cmpsb
dec
stos
lret
add
sbb
sbb
pop
testl
dec
les
loop
scas
sub
nop
push
nop
addb
sbb
pop
incb
les
jg
js
popf
xchg
sub
imul
add
mov
out
pop
pop
mov
sbb
mov
les
xlat
fadds
add
and
cmpsl
sarb
mov
rolb
fmuls
adc
cmpsl
mov
xlat
popa
icebp
mov
xchg
xlat
stc
inc
movsl
add
lahf
mulb
movsb
xchg
js
mov
xor
shll
push
lret
les
lret
jg
lods
orb
mov
es
dec
sbb
inc
stos
andb
pop
pop
mov
adc
push
fstps
adc
sbb
mov
rcrl
sub
xlat
sbb
or
push
add
leave
push
adc
test
mov
and
inc
sbb
mov
imull
fldcw
icebp
fistps
mov
mov
cmp
test
lret
pop
mov
inc
fdivrl
orb
daa
xchg
lods
or
sub
inc
jo
jno
adc
rcrl
sarb
cmp
push
mov
bound
sahf
sbb
lahf
jae
in
test
pop
das
push
add
hlt
cmp
jo
stos
and
popf
dec
jmp
cmpsw
push
mov
clc
mov
or
inc
out
inc
leave
mov
pop
xchg
push
mov
imul
sbb
mov
mull
mov
pop
lds
jo
jl
repz
into
mov
scas
ret
test
and
rcrl
sahf
loop
mov
jbe
enter
jp
adcl
mov
mov
dec
and
dec
loop
push
sub
pop
leave
and
sbb
push
aaa
jns
mov
inc
sbb
ja,pn
pop
jo
push
pop
mov
int3
test
push
cmp
and
orb
cld
pop
lret
cmp
add
rol
cmp
stc
fisttpll
movsl
jge
ljmp
cmpl
or
je
loop
movsl
cli
adc
test
cmpb
mov
xchg
idivl
sub
lds
in
cmpsl
push
mov
pop
jge
sbb
popf
mov
mov
in
mov
enter
push
out
mov
sbb
jno
inc
adc
lea
je
cmp
inc
outsl
cli
push
add
cmp
outsl
hlt
in
rcrb
sbb
into
mov
pop
gs
mov
push
loopne
dec
adc
or
pop
push
lea
inc
lcall
dec
scas
mov
addl
in
roll
cli
sbb
push
jne
push
fisubs
ret
or
xchg
aaa
icebp
cmp
add
mov
inc
mov
sbbb
xchg
pop
mov
lods
pop
push
lods
ljmp
popa
pop
pushf
push
push
arpl
repnz
lahf
mov
popf
sbb
adcl
and
mov
inc
push
popa
lods
loope
inc
dec
jnp
push
xchg
test
int
rorb
pop
jg
fisubl
adc
or
add
sub
mov
or
fnstsw
insb
leave
pop
xchg
add
aas
sbb
out
jbe
std
jp
jns
movsb
or
sbb
and
xchg
aas
int
pop
aam
xor
ja
sbb
shrb
clc
push
mov
pop
insl
inc
lcall
pop
or
inc
std
mov
clc
dec
movq
loopne
or
hlt
ja
jae
pop
mov
js
testb
add
inc
ret
xlat
xchg
ds
xor
mov
xchg
xchg
add
mov
inc
aas
daa
mov
mov
xor
push
outsl
inc
jnp
out
fs
lds
mov
enter
mov
jmp
push
pop
mov
dec
mov
leave
jbe
loop
scas
push
cmc
clc
ljmp
adc
in
rol
and
push
pop
add
adc
xor
mov
pop
jne
je
fistpl
xorl
inc
mov
ja
clc
add
dec
lds
mov
movsl
int
pop
adc
push
mov
ja
jb
pop
pop
mov
or
mov
shl
fs
fsubs
mov
mov
dec
push
add
dec
lea
shll
mov
clc
xor
jne
mov
sub
jne
push
fstpl
int
pop
rorb
jns
mov
pop
mov
cli
test
inc
mov
je
outsl
das
jp
not
or
dec
mov
daa
mov
add
stc
xor
xor
cs
stos
pusha
mov
mov
jg
jbe
js
ret
jmp
jnp
cmp
pusha
and
add
inc
sbbl
push
imul
xchg
and
outsb
loop
lods
bound
pop
loopne
mov
mov
dec
push
mov
das
ss
outsl
fcompl
mov
jno
addr16
jecxz
jae
inc
push
jecxz
sahf
in
sti
mov
xchg
add
out
jmp
movsl
mov
push
movsb
call
movsb
mov
out
mov
movsb
aad
mov
stc
jle
in
insb
sti
and
aaa
sbb
xchg
mov
sbb
test
nop
adc
test
jno
push
lods
lds
es
lods
and
pusha
push
scas
xor
push
mov
mov
jg
xchg
push
gs
repz
sbb
ds
movsb
xchg
add
add
repnz
cmp
lret
out
testl
andb
dec
stos
iret
fnstsw
js
in
sbb
in
imul
mov
inc
movsb
mov
mov
xchg
lret
jb
jae
div
xchg
fidivrs
inc
fwait
popl
sbb
shrl
add
sub
cmp
aas
addr16
out
repnz
fiaddl
pop
rcl
arpl
pop
push
pop
adc
in
leave
adc
aaa
mov
dec
inc
or
add
mov
aaa
add
pop
insl
popf
sbb
sub
push
xchg
xlat
adc
fdivs
xchg
faddl
leave
cmp
je
xchg
jb
sub
cli
enter
push
pop
mov
cmp
mov
cmp
xor
mov
addl
mov
outsb
test
xchg
fldl
loope
repnz
call
scas
mov
jmp
xchg
cwtl
enter
out
and
mov
scas
xor
addr16
xchg
cmp
fstps
lods
lret
xor
int3
ds
dec
adc
movsb
inc
or
shr
testl
pop
mov
mov
inc
ret
jp
out
nop
cld
dec
fwait
adc
sbb
or
inc
cli
jns
movsl
out
adc
cld
sub
mov
dec
icebp
fmuls
rolb
shll
lcall
push
pop
shrl
jg
scas
inc
ret
push
pop
xchg
sbb
lret
push
mov
mov
dec
bound
imul
ja
lret
inc
jge
mov
jo
nop
jecxz
fldenv
mov
das
dec
xchg
pop
jne
sbb
jne
xchg
adc
xor
ljmp
aas
stc
mov
xor
xchg
sbb
les
or
cmp
out
outsb
mov
mov
fnstcw
push
lcall
and
insb
in
aad
inc
push
mov
push
test
icebp
push
and
and
sahf
mov
or
add
jns
mov
push
lds
sbb
arpl
sub
cld
pop
in
inc
out
aam
lock
dec
mov
aaa
in
add
mov
int3
cli
mov
les
push
in
mov
pushf
and
fisttps
push
cmp
cs
add
stos
loopne
rcr
imul
add
sar
pop
mov
jo
add
xor
hlt
xor
and
inc
shrl
push
or
sbb
idivl
cmp
jbe
mov
or
mov
mov
jmp
ljmp
mov
js
filds
jb
in
xor
imul
nop
xchg
or
sbb
dec
lret
stos
cwtl
hlt
mov
add
fsubl
cmp
inc
int
mov
xchg
in
push
insb
mov
pop
pop
xor
adc
dec
out
push
xchg
leave
es
ds
and
mov
mov
jno
dec
in
push
cmpsb
mov
mov
hlt
aas
fwait
push
jnp
xorb
xchg
dec
mov
das
arpl
inc
pop
xor
movsl
popf
insl
xor
and
loop
push
imul
add
cmp
icebp
out
ja
js
inc
and
pop
and
divb
or
lcall
les
in
stos
repnz
push
push
cmp
add
adc
and
cmp
ds
call
loopne
jne
cmp
jp
mov
std
cwtl
test
sbb
insl
imul
mov
aas
popa
dec
lcall
cli
shlb
mov
cmp
ret
imul
cs
jnp
cmpb
xor
mov
ret
imul
sbb
negl
push
and
pop
sahf
stos
xchg
push
push
fiadds
aas
cmp
pushf
add
sbb
xchg
pushf
add
scas
or
test
lds
pop
arpl
or
jbe
outsb
stos
jnp
ljmp
inc
mov
pop
leave
lods
and
sahf
pop
jne
sarb
adc
push
jmp
jle
test
arpl
fildll
adc
aam
adc
dec
xchg
sbbb
in
mov
jae
and
dec
cwtl
sarl
mov
loope
pop
stos
xchg
cmp
loop
adc
push
mov
mov
jo
shl
xor
out
dec
insb
inc
push
inc
mov
rol
adc
push
daa
cmc
mov
inc
inc
mov
lods
mov
mov
sub
rcll
xchg
mov
jo
mov
int3
inc
fsub
icebp
xchg
pop
insl
pop
xlat
jnp
push
and
icebp
fdivrs
dec
or
mov
xor
or
jnp
fwait
mov
inc
mov
xchg
insb
jb
aam
add
in
leave
imul
add
sub
push
in
push
mov
or
scas
int
mov
sub
popa
mov
jmp
xor
xchg
jnp
jg
push
inc
cli
and
cld
clc
icebp
movsb
inc
pop
clc
cli
fistl
cwtl
and
push
dec
mov
pusha
cmp
aas
loope
pusha
sahf
shr
arpl
xor
icebp
jno
or
xor
xchg
push
hlt
orb
daa
add
fadd
push
adc
mov
inc
push
loope
int3
fsubrl
mov
out
fsubrs
in
aam
daa
and
in
mov
mov
mov
fs
pushf
push
fs
fnstenv
loope
push
jmp
lahf
popf
xchg
daa
sub
mov
lods
xchg
lahf
cmp
ja
dec
dec
jle
outsb
mul
pop
add
cmp
sub
stc
lcall
pop
outsl
mov
out
call
push
cli
sub
inc
adc
push
push
sbb
fisubrs
cmp
js
push
fisttpll
das
hlt
out
xchg
leave
xor
cmp
nop
jb
loopne
and
movsb
pop
aas
insl
and
outsb
cmp
mov
xlat
xor
loop
addb
jecxz
ja
jmp
cmpsb
flds
test
jb
test
jp
inc
in
adc
fdivrl
cmp
pop
adc
dec
roll
inc
int3
pop
call
ret
orb
add
les
or
adc
repz
push
and
lods
mov
mov
cmc
movsb
pop
loop
sbb
scas
movsb
out
mov
pop
shl
inc
add
xchg
add
pop
popf
das
adc
scas
aas
hlt
xor
sahf
ja
cmc
mov
in
xchg
mov
out
insb
addb
in
daa
pop
mov
jl
xor
jecxz
xchg
dec
xor
adc
jae
hlt
dec
pop
mov
push
insl
xchg
mov
push
xor
cmp
xchg
or
decl
dec
mov
cwtl
inc
les
cli
push
hlt
jp
push
and
sbbb
fcmovbe
scas
ret
imul
cmpsl
fld
xor
jae
jle
or
xchg
lret
jns
jae
repz
push
or
lods
lock
cwtl
push
xchg
or
cmp
xor
movaps
sub
push
aas
push
jbe
pop
outsb
xor
clc
dec
cmp
ljmp
inc
les
mov
add
inc
mov
sbb
mov
pop
or
add
add
xchg
jae
cli
dec
dec
fstl
add
loopne
mov
and
lahf
mov
inc
xlat
popf
mov
fistpll
popf
xor
pop
sub
jnp
cltd
cmp
xchg
lods
or
cs
outsl
shlb
and
sbb
cs
ja
pop
lock
imull
insl
xchg
mov
xor
mov
or
movsb
subb
scas
jp
inc
int
mov
fists
js
int
xchg
xchg
movsb
test
or
test
bound
cli
aam
insb
out
pop
pusha
std
jns
sub
sub
inc
aas
mov
out
insb
add
xor
outsl
stc
mov
cs
xchg
daa
leave
inc
sub
pop
dec
xchg
cld
add
lcall
sahf
sti
sbb
sar
adc
loope
pop
ret
xchg
ficoml
inc
adc
dec
jmp
mov
jne
dec
push
stos
mov
cmp
into
dec
mov
push
inc
add
adc
cli
add
fadds
fimuls
out
hlt
aad
dec
out
xor
sub
mov
xchg
sahf
pop
addr16
ja
movsl
sbb
and
loope
and
imul
xor
sub
pop
and
sahf
aam
mov
push
sub
scas
scas
inc
adc
inc
mov
mov
dec
jno
adc
fwait
stos
mov
test
movsb
push
stos
add
sbb
jae
mov
std
js
shlb
out
mov
push
cli
loopne
pop
pop
jnp
fbld
mov
mov
xor
or
inc
imull
add
addl
outsl
xor
enter
or
inc
ret
sbb
xchg
divb
mov
dec
mov
lds
sbb
test
mov
bound
aas
mov
add
xchg
lods
pushf
fxch
into
data16
or
arpl
xchg
js
dec
inc
mov
xor
movsb
push
mov
aaa
add
push
cmp
push
in
or
dec
inc
in
push
in
test
jecxz
scas
daa
mov
xor
sarl
mov
in
cmp
lret
std
or
push
inc
jmp
add
cmp
mov
xchg
push
push
dec
pop
popf
cmpl
cmp
ficoms
xor
sbb
icebp
mov
sbb
arpl
mov
in
dec
inc
mov
xlat
jno
lret
dec
fcomps
cmpsl
test
fwait
ljmp
lahf
add
mul
adc
inc
in
popa
adc
xchg
jno
repz
hlt
mov
cmp
inc
adc
nop
adc
xor
jne
sub
and
movsb
adc
sub
mov
stos
mov
pop
sbb
sbb
and
or
mov
daa
in
movsl
inc
sbbl
imul
insb
push
ret
jl
lcall
cmp
loope
out
xchg
rcrl
jle
xorb
pusha
movsb
jo
and
aad
pop
push
loop
mov
scas
sub
cmpsl
hlt
dec
cltd
sub
popf
out
or
bswap
data16
push
nop
hlt
shl
mov
inc
sbb
mov
pop
shr
xchg
lds
xlat
lret
clc
jnp
incb
push
ret
data16
sbb
fsubs
in
add
jo
stc
inc
sub
fwait
xor
mov
fwait
pop
pusha
add
sub
mov
mov
jno
pushf
nop
lods
dec
shlb
dec
leave
and
cmp
xchg
mov
jle
sub
push
push
xchg
nop
imul
in
mov
xor
xor
loop
nop
int3
pop
jg
sub
fadd
xor
jecxz
mov
and
adc
mov
sbb
push
fsub
fistps
fcmovnb
out
aam
push
mov
imulb
jl
xor
pushf
out
or
pop
inc
pusha
lock
xchg
mov
stc
jnp
in
hlt
bound
fmul
enter
dec
inc
push
ds
xchg
jge
out
int
xchg
push
jmp
jnp
inc
movsl
add
ss
mov
inc
int
mov
fadd
xchg
adc
add
jo
sub
imul
rcll
ds
ja
ret
and
push
aas
ror
daa
insb
faddl
clc
stos
add
mov
xchg
add
nop
shrb
shl
mov
outsb
dec
cmp
add
sub
xchg
lret
fcomps
call
jae
xor
ficoml
nop
mov
dec
mov
fs
jl
xor
push
movsb
rcll
lods
sub
js
sub
stos
and
jno
imul
jg
pusha
inc
sbb
push
aam
xchg
pop
mov
jae
pop
push
jge
daa
push
repnz
js
daa
into
aaa
mov
ret
sub
rcrb
out
mov
pop
inc
dec
mov
jno
aaa
mov
cmpsb
mov
jbe
mov
out
dec
mov
out
mov
ret
repz
inc
adc
fnsave
enter
lcall
pop
shl
call
mov
cmp
inc
jg
fs
push
xor
and
cmp
in
test
imull
pop
mov
dec
fdivrl
jmp
pop
xor
xor
daa
sbb
and
js
mov
push
int3
es
dec
loope
adc
dec
test
sbb
out
int
addr16
lcall
out
xor
push
rolb
aaa
add
out
add
lea
sbb
xor
jbe
sub
xchg
mov
sti
fisubs
repz
push
data16
mov
mov
and
sub
inc
cs
and
push
and
addr16
fwait
xchg
dec
js
sti
mov
incb
imul
inc
shlb
outsb
dec
jbe
mov
and
sti
cmp
daa
sub
scas
add
jp
sahf
mov
lcall
pop
fbstp
sbb
mov
scas
pushaw
sbb
in
mov
mov
movsb
pop
rcrl
insl
fisubs
cmp
call
xor
mov
in
fwait
fs
dec
icebp
insl
jb
dec
xchg
jb
pusha
test
pop
ss
push
clc
mov
jae
sub
ja
imul
push
cli
loop
adc
stos
fdivs
inc
lock
xchg
in
jae
ret
jge
jge
jno
ficomps
fwait
inc
ljmp
mov
mov
and
ds
test
add
push
rcll
lods
xlat
sbb
jmp
hlt
xor
pop
gs
sbbl
rolb
adc
cmpsl
mov
subl
popa
sbb
out
test
lods
loopne
int3
testb
push
sub
scas
insb
hlt
out
movsl
pop
ja
mov
out
stc
jmp
rcll
js
addr16
mov
hlt
push
ret
fistpll
sbb
xchg
dec
sub
int3
lcall
inc
pop
clc
lock
push
xchg
pop
in
cmp
repz
cwtl
popf
xchg
scas
ss
sub
cli
adc
lret
cli
test
push
lcall
jmp
shrb
insb
call
sub
and
jae
in
xor
imul
ds
js
adc
divb
and
gs
mov
aad
mov
imul
pop
or
ret
in
push
jb
repz
fwait
sbb
mov
jle
je
mov
mov
mulb
inc
loope
mov
adc
cmp
sarl
sahf
xchg
sbb
shrl
fwait
dec
cld
push
xlat
cmp
push
aaa
jle
adc
lcall
cmp
in
daa
leave
lods
dec
sbb
aas
and
movsl
adc
push
sbb
push
cltd
sbb
or
lds
xor
popf
or
js
dec
cmovb
jmp
outsb
mov
xchg
loop
loopne
jbe
mov
mov
mov
add
mov
nop
scas
xor
push
fs
or
repz
sbb
aas
xor
adc
push
jbe
add
mov
mov
xchg
sub
xchg
add
mov
cmp
dec
push
mov
cmp
dec
push
cwtl
popa
pop
or
movsl
pushf
xlat
in
sbb
and
sub
pop
xchg
adc
mov
xor
and
xchg
xchg
repz
jle
mov
std
cmp
mov
clc
in
inc
shrb
fsubr
leave
jns
repz
add
sub
or
daa
inc
mov
xor
jb
and
add
cmp
outsl
rcrb
push
push
sbb
insl
fiaddl
leave
movsl
jb
aam
xchg
test
arpl
popa
dec
sbbb
cmpsl
and
lods
insl
call
js
adc
int
mov
add
jno
push
ret
mov
jge
mov
inc
push
sub
inc
loope
jae
pop
dec
pop
push
cmc
or
adc
jae
push
int3
bound
pop
pop
insl
push
xchg
into
cmpsl
scas
inc
and
or
xchg
mov
hlt
push
xor
sbb
subb
int
aad
mov
jbe
insl
idivb
sub
shlb
push
sub
in
mov
aas
inc
sbb
jecxz
jno
push
lret
cmpl
fadds
mov
inc
sti
ljmp
cmp
pop
and
ja
push
fs
adc
jg
sbb
adc
popa
fmulp
imul
dec
cmp
adc
jae
push
inc
bound
xchg
addr16
lea
add
xchg
scas
cld
int3
mov
sbb
enter
sbb
dec
loope
lods
sub
lods
inc
pop
mov
xchg
inc
rcrl
xchg
mov
xchg
popf
lret
test
or
adc
lahf
ljmp
adc
iret
sbb
ja
ss
rolb
sub
push
push
addr16
shr
or
dec
mov
mov
sbb
inc
rclb
fmul
leave
mov
mov
cmpsl
movsl
push
loopne
and
rclb
nop
mov
adc
xor
cmp
inc
dec
lcall
ret
lods
mov
lret
in
inc
adc
pop
push
fcmove
pop
test
mov
pushf
test
out
rcr
sub
cmpsl
xchg
cltd
icebp
adc
jb
es
jnp
push
fiadds
addr16
pop
arpl
add
mov
shr
rcr
pushf
ss
clc
jg
push
add
or
or
bound
sbb
cmpsl
scas
sbb
add
pop
pusha
push
sub
hlt
aas
pop
into
cs
push
cs
ret
and
cmp
adc
add
sub
mov
mov
and
fstpt
inc
pop
daa
jl
into
inc
mov
adc
pop
adc
push
cmp
mov
test
cmc
dec
fcoml
cld
xor
test
xor
pop
sbb
or
lret
lea
repnz
lods
push
mov
add
test
xchg
jl
mov
arpl
arpl
inc
mov
mull
or
aad
shlb
roll
mov
sub
jne
mov
xchg
in
inc
mov
push
lods
jo
divl
shll
mov
div
ljmp
mov
lds
dec
adcw
xor
mov
in
lds
ffree
imul
mov
daa
enter
sbb
xchg
pushf
adc
shr
es
cmp
cmc
push
and
adc
stc
push
push
inc
rcl
mov
fdivp
cmc
das
and
cmpl
pop
lea
mov
pop
mov
sbb
and
add
xor
imul
cmp
daa
mov
add
fcoms
cmp
sub
enter
into
mov
or
cwtl
mov
jl
push
jl
push
jns
or
xor
mov
test
adc
ret
sub
lods
decl
pop
out
adc
pop
jle
mov
in
fcoml
aas
std
jae
bound
dec
sbb
shlb
mov
in
sub
pop
and
pushf
sub
movsb
pop
lret
loop
jmp
cmp
push
xor
repz
lock
inc
lcall
je
test
cs
xchg
mov
adc
xchg
iret
mov
xorb
xor
sbb
and
jmp
stc
sarl
andl
das
int
in
sahf
aaa
incl
sbb
les
xor
push
mov
xlat
inc
mov
fwait
add
dec
inc
lock
sbb
mull
xchg
and
inc
mov
or
movsb
or
pop
je
sahf
dec
andl
jne
and
and
jnp
shl
fldl
movsb
call
fcmovnbe
test
in
mov
hlt
arpl
test
or
xor
or
sarb
in
fisubrl
mov
jb
fsubrl
jp
nop
sbb
sub
pop
lret
ss
rol
pop
mov
out
stos
cmp
scas
push
in
dec
int
push
cmpsb
stos
movsb
lret
add
push
xchg
out
pushf
inc
aas
xor
aad
and
add
or
xchg
pusha
cld
stos
and
cld
mov
filds
popf
mov
add
adc
pop
adc
cs
mull
adc
mov
das
div
adc
adc
add
mov
loopne
inc
or
loop
and
je
push
xchg
inc
mov
mov
pop
pop
popa
call
sbb
xorl
add
jl
jb
push
jns
sub
iret
mov
dec
cwtl
mov
es
icebp
icebp
nop
mov
leave
sbb
mov
push
dec
cli
cld
cmp
cltd
fsub
in
dec
pop
mov
cmc
dec
xor
and
inc
popa
push
pop
clc
pusha
dec
and
popa
rorl
jp
mov
and
pop
in
out
cwtl
cmp
mov
sub
sarl
stos
das
pushf
mov
jge
out
fildll
into
out
fdivrs
aaa
in
out
pop
jbe
in
xchg
cmp
add
stc
out
fsts
adc
dec
inc
sbb
out
inc
add
sbbb
orl
jbe
sbb
and
inc
push
inc
movsl
cli
outsl
mov
into
popa
pop
sbb
mov
call
divl
roll
cmp
in
inc
mov
sarl
test
arpl
lret
leave
sub
test
or
and
inc
push
dec
fwait
int
out
lret
pop
xchg
sbb
imul
xchg
xor
je
cmp
fcomps
adc
hlt
adc
dec
mov
das
sub
lea
cmp
xchg
jp
pushf
dec
add
inc
repnz
jecxz
mov
and
fcoms
les
mov
popf
cmpsb
imul
sbb
push
outsb
out
pop
cmc
fucomi
push
push
add
dec
inc
clc
enter
push
fsubrl
test
fcom
pop
loopne
inc
push
mov
sbb
add
loopne
sbbb
fisubrs
and
cmc
and
imul
aam
call
repnz
ficomps
ljmp
lret
adc
mov
pushf
mov
xchg
loope
test
mov
jge
or
inc
push
mov
decb
mov
cld
inc
adc
mov
inc
pop
adc
mov
cmp
jb
pop
sbb
int3
adc
jbe
jb
adcl
pushf
and
sahf
jge
cmp
out
shlb
mov
mov
jle
pop
addr16
lret
movsb
push
mov
mov
adc
add
mov
mov
ffreep
std
adc
add
push
xchg
imul
mov
lods
mov
test
ret
lea
pop
xchg
jle
pop
cmp
mov
imul
adc
adc
sub
push
subl
mov
push
xchg
xor
sbb
or
sbbb
inc
fmuls
push
out
push
in
adc
sub
mov
sbb
cwtl
lds
pop
push
cmpsb
rcrb
outsl
push
les
pop
shlb
and
jb
mov
jecxz
jl
push
daa
out
lret
xorl
add
repnz
icebp
or
cli
jnp
sbb
xchg
inc
cmp
mov
pop
mov
and
or
adc
mov
inc
ljmp
push
scas
lcall
ss
push
mov
cmp
stos
cmpb
xchg
lea
mov
adc
xor
dec
pop
push
xor
gs
call
ficoms
xor
shrl
pushf
lock
jbe
sbb
scas
lcall
xchg
cmp
ficoms
das
pop
inc
test
xor
fisubs
int3
push
mov
inc
mov
pop
mov
mov
jae
pop
or
jp
aam
pop
push
jnp
ret
mull
jle
and
cli
pop
out
ficoml
jb
xor
rolb
pop
push
or
mov
popl
jo
push
and
in
popf
pop
push
push
pop
stos
loope
lock
jg
push
xlat
adc
and
aas
iret
xor
test
lock
pop
inc
xchg
out
xsha256
cmpsb
push
jmp
xor
push
pop
xchg
mov
das
mov
in
mov
cli
mov
iret
or
pop
fiadds
lcall
cld
push
pusha
mov
hlt
xor
jae
xorb
pop
jmp
ja
cmp
rcl
hlt
mov
in
insl
inc
stos
mov
xlat
arpl
sub
mov
jle
aaa
jle
sub
xchg
fwait
and
mov
mov
in
xchg
xchg
and
pop
cltd
push
sbb
push
xor
cltd
inc
cmp
pushl
sbb
push
and
dec
lret
jns
aam
or
xchg
mov
mov
jge
ljmp
adc
cmp
push
rclb
lcall
pushf
in
loope
adc
dec
push
scas
aad
pop
int
mov
popf
es
das
sbb
popf
adc
xchg
add
fcoms
xor
repz
daa
fcomps
out
jbe
xchg
loope
inc
dec
ret
mov
jmp
jne
in
adc
jns
lds
add
jnp
or
pusha
faddl
lods
mov
sub
enter
sbb
mov
push
pop
jecxz
xchg
test
jbe
inc
pop
pop
xchg
scas
adc
xorl
into
pop
pusha
jge
adc
aad
loopne
sub
mov
mov
xorl
loopne
adc
mov
movsl
mov
pop
or
inc
xor
insb
sbbb
jmp
cltd
ds
pop
jg
lea
push
mov
sub
jl
mov
push
xchg
xlat
mov
sar
pop
ret
js
loop
jmp
or
enter
into
or
loop
push
pusha
jecxz
mov
arpl
lahf
pop
adcb
jb
sub
and
out
mov
add
lret
popf
out
subl
mov
clc
pop
cmp
fs
xchg
bound
cmpb
psraw
mov
adcb
push
inc
rorb
push
mov
sub
fstps
sub
jne
dec
sbb
fadds
and
mov
add
outsl
mov
mov
cmpsb
loope
leave
push
not
inc
pop
pop
into
sub
test
cmpsb
dec
push
mov
addb
test
jecxz
nop
movsl
xchg
nop
xchg
aaa
mov
hlt
dec
xchg
push
in
mov
cmc
xor
lock
insb
push
loopne
in
mov
mov
cmp
rcl
mov
jmp
xchg
add
mov
mov
jg
int3
insl
cmpsl
mov
lcall
lds
les
stc
ss
cmc
jmp
lret
in
xchg
in
insl
jne
mov
mov
lcall
cmp
push
inc
or
mov
dec
push
jecxz
inc
outsl
test
data16
push
fdivrl
and
cmp
inc
vmovq
jns
add
push
fs
xchg
mov
or
test
sub
cli
jp
fistl
xchg
in
aad
mov
jns
leave
or
shll
add
add
popf
ficoml
cs
js
adc
in
enter
push
inc
sbb
jp
in
testl
push
test
and
ja
xchg
arpl
addl
lock
cmp
or
inc
mov
mov
out
cmp
xor
push
leave
mull
mov
xor
fwait
push
popf
das
mov
dec
mov
xor
pop
stc
inc
pop
xor
inc
das
dec
leave
cmp
iret
clc
xor
sbb
in
lods
push
pushl
call
in
mov
sbb
loope
addl
jg
nop
mov
fyl2xp1
mov
sar
mov
arpl
lret
xchg
es
or
mov
xor
test
sahf
sti
cmp
gs
sub
call
insb
mov
rolb
push
loopne
jno
xlat
push
in
aas
repnz
lcall
ja
mov
aam
shll
jbe
mov
mov
dec
je
dec
jmp
push
nop
xchg
lret
pop
add
mov
jo
push
lods
push
leave
adc
adc
xchg
pop
and
out
adc
stc
mov
out
mov
mov
push
dec
lods
mov
scas
shrl
movsl
adc
andb
iret
jne
or
test
mov
pop
or
scas
pop
pop
cwtl
adc
leave
cmp
subl
fbld
xlat
hlt
in
nop
pop
pop
xlat
test
push
imul
pushf
mov
jae
pop
das
sbb
ja
sbb
movsl
pop
in
xchg
jmp
fwait
stos
ja
sbb
test
ror
mov
jnp
inc
or
cmp
shlb
in
push
jle
push
or
je
lds
test
test
sbbb
sbb
dec
push
imul
bsr
push
xor
sub
mov
xchg
fwait
das
rcl
push
imulb
or
push
je
sub
sub
shr
call
mov
add
stos
ja
cwtl
lret
sarb
scas
aad
cmp
arpl
ja
push
inc
xchg
sub
sbb
bound
xchg
sbb
sbb
mov
mov
decb
jge
test
rcll
repnz
aas
sub
jmp
repz
pop
loope
out
pop
xchg
movsl
dec
adc
sub
movsl
pop
loope
pop
mov
or
cmp
dec
pop
cld
fists
aas
test
call
cmpsb
leave
popa
int
shr
daa
pop
scas
sub
jl
sub
push
cmp
sbb
inc
push
ss
stc
pop
dec
aaa
in
xchg
mov
mov
cwtl
mov
cmpb
insb
cmpsl
in
push
mov
lret
mov
jecxz
mov
bsf
xchg
xor
or
sbb
out
or
mov
call
adc
popf
test
mov
hlt
sub
adc
add
stos
mov
and
pusha
inc
push
mov
jmp
test
or
xchg
adc
xchg
out
adc
dec
sahf
add
adc
pushf
ljmp
pop
or
cld
sub
push
and
mov
mov
jno
add
push
push
repnz
push
sahf
add
dec
inc
daa
in
ljmp
push
adcb
inc
jle
imul
jnp
jg
fdivl
xchg
pop
add
sbbl
push
pop
push
je
out
leave
dec
cmp
inc
add
test
fcom
sbb
add
insb
push
dec
jne
dec
lds
movsl
stos
xor
mov
fistps
push
rorl
popf
add
fistpl
sbb
ss
cmp
add
or
dec
loope
push
jnp
aas
lock
loope
imull
cmp
fisttps
ret
sbb
xor
jbe
imul
dec
jmp
sub
and
rcll
push
cmp
cs
add
sarb
lods
mov
cmp
push
add
mov
push
ljmp
mov
insb
inc
icebp
sub
enter
jl
mov
xchg
rorl
jp
xchg
loope
mov
jne
ss
mov
pop
lods
fcomp
or
cli
out
push
in
pop
repnz
mov
push
pop
mov
dec
mov
lret
lahf
stc
xchg
outsl
push
xchg
and
scas
fnsave
scas
xchg
or
pop
scas
dec
jnp
mov
fimull
sarl
xchg
inc
add
push
jno
jp
cmpsl
add
nop
xor
fiadds
in
out
cmc
lds
call
jae
cld
das
inc
jg
mov
or
cmp
jle
fstpl
sub
fsts
lahf
ret
sub
or
sarl
dec
jle
jae
xchg
pop
mov
or
loop
cmpsl
and
pop
addl
je
cmpb
stc
int3
mov
and
sbb
sbb
push
in
sbb
mov
push
sbb
adc
notb
sub
pop
mov
xor
mov
push
mov
mov
sbb
mov
repz
divb
sub
pop
cld
mov
sbb
jo
sbb
jge
add
mov
rolb
es
cmp
push
pop
jno
inc
sub
mov
xchg
scas
mov
cmc
fstl
daa
xchg
mov
das
xchg
ret
adc
repnz
mov
lock
and
orb
mov
pop
add
pop
push
pusha
mov
xor
fidivl
add
xchg
outsl
xor
ss
xor
subb
push
lret
int3
lods
jg
das
int3
call
mov
lods
push
testl
std
loope
push
notl
ret
add
or
jp
cmp
fsubrl
stos
or
imul
xchg
or
mov
add
cmc
lea
mov
out
fdiv
lods
movsb
lds
stos
fisubl
in
xor
sti
jno
cmp
dec
jmp
push
add
aas
xchg
cli
jg
dec
mov
xchg
dec
gs
xchg
lea
mov
or
xor
cltd
ljmp
pop
mov
sub
out
repnz
push
notb
addr16
gs
and
add
xor
pop
adc
scas
je
hlt
adc
pop
gs
sub
leave
aad
mov
pop
jb
push
add
mov
push
sub
rcrl
xor
movsb
jge
data16
mov
mov
pop
pop
push
dec
lods
push
insb
jmp
xchg
out
lock
je
adc
lea
jbe
xor
adc
divb
mov
cmp
imul
mov
or
adc
cmp
mov
rcrl
mov
out
lods
into
int3
mov
or
mov
stos
mov
dec
push
loope
sub
mov
es
mov
icebp
push
push
enter
xchg
and
mov
fbld
mov
les
dec
mov
rorl
pop
les
xchg
sbb
jg
pop
cmpsb
mov
mov
jge
pusha
jl
pushf
jbe
dec
cs
jle
imul
sbb
add
bound
push
loopne
sarl
mov
xorb
cltd
int
xchg
mov
scas
test
out
repz
or
shll
mov
inc
ja
sbb
cmp
sub
popa
sahf
repz
mov
ret
mov
pusha
cmpsl
pushf
fs
data16
push
cld
stc
xchg
add
mov
add
negl
addr16
stos
jae
nop
jmp
add
inc
sbb
xchg
divb
les
push
xor
inc
pop
repnz
or
mov
push
arpl
lock
pop
adc
xchg
sbb
in
rorl
das
mov
ja
inc
ret
adc
imul
popf
out
inc
xchg
aas
push
cmp
dec
adc
fadd
lret
repnz
imull
test
pushf
and
pop
imul
cmpsb
lds
adc
mov
dec
sbb
xor
out
adc
xchg
out
jmp
and
and
ja
cli
and
mov
cltd
mov
cld
outsl
lahf
subb
sub
inc
loopne
adc
test
adc
je
push
leave
jne
imul
add
xchg
jmp
ja
cmp
push
sub
ja
jg
pop
push
sub
cmc
aam
cli
cmpsl
ds
jno
out
pop
popa
jb
cli
or
mov
lea
or
lahf
clc
fisubs
sbb
pop
stos
icebp
inc
dec
xor
lcall
sub
jmp
fisttps
adc
xchg
xchg
stos
push
cmpb
mov
clc
xor
fst
mov
cmp
out
pop
pop
loopne
xor
and
mov
adc
jnp
outsl
mov
test
ja
or
lods
xlat
dec
push
lahf
mov
pop
cli
faddp
loope
mov
dec
fcomps
xchg
into
and
or
in
cmpsl
push
xchg
cmp
push
ret
mov
icebp
bound
dec
cmp
scas
mov
je
cs
fidivrl
mov
testl
push
add
out
push
cmp
cmp
mov
push
lods
and
pop
inc
mov
int3
adc
in
sub
xor
flds
pop
adc
fsubrs
outsb
jg
pop
ret
inc
dec
mov
inc
mov
lock
jnp
push
clc
dec
subb
xor
cmpb
xor
and
fwait
push
cmp
movl
sahf
pop
cmpsl
add
mov
vfnmsub231sd
sahf
push
xlat
rcrb
add
mov
cmp
in
outsb
add
sbb
jbe
std
adc
jnp
dec
pop
mov
jmp
lds
test
lock
pushf
mov
xor
add
mov
and
clc
ja
adc
dec
jle
sbb
hlt
enter
inc
jno
in
cmc
sbb
or
imul
imul
xor
add
daa
cmpsb
adc
cld
fisubl
cmp
push
mov
sbb
cmpl
sbb
mov
mov
dec
pop
jecxz
adc
xchg
add
pop
add
js
or
aaa
mov
aaa
sbb
jl
repnz
or
inc
cmc
hlt
and
mov
lods
icebp
mov
dec
mov
mov
mov
push
xchg
div
arpl
jnp
leave
pop
sbbb
jns
ret
mov
xchg
jns
addr16
mov
aas
push
hlt
jmp
sub
dec
in
or
adc
mov
rcr
xchg
sahf
rclb
aam
inc
insl
cmp
inc
mov
jecxz
mov
or
mov
aas
pop
outsl
in
ljmp
stos
adc
lahf
lcall
fs
mov
xchg
jbe
ficompl
lret
insb
sub
lahf
dec
or
outsl
mov
mov
and
add
jbe
jge
pop
mov
add
xor
jb
inc
jbe
mov
into
xchg
cs
cmp
leave
jg
push
ja,pt
cmc
out
mov
and
xchg
dec
cmpsl
sub
out
adc
or
orl
pop
dec
cmp
imul
movsb
adcl
mov
push
jmp
mov
mov
jp
mov
loopne
pop
push
push
and
mov
into
aaa
cmpb
test
mov
cmp
negb
push
xchg
dec
mov
xchg
jl
out
pop
inc
xor
xor
push
add
fimuls
insl
test
mov
fildl
out
aam
lahf
adc
call
insb
lds
push
js
popa
cmpsb
jo
js
mov
mov
adc
or
rorb
int
ret
fistl
pop
ss
sbb
jo
iret
lret
cmp
jb,pt
mov
rorl
and
inc
notl
sbb
mov
roll
loope
out
mov
rorb
mov
fiaddl
cmp
jge
loope
cs
push
in
add
pop
mov
jp
inc
cmp
pop
sub
mov
ret
dec
stc
sub
lods
cmp
cli
arpl
push
into
jmp
sbb
or
push
cld
fs
repnz
inc
outsl
sub
xchg
and
stc
dec
nop
outsb
mov
mov
sub
pop
inc
mov
sub
mov
mov
pop
mov
mov
fwait
push
mov
mov
push
fdivl
mov
pop
test
adc
mov
dec
adc
xchg
sbb
fnstsw
pushf
inc
inc
xchg
decl
adc
mov
and
test
cmpsb
cld
out
stos
mov
and
jb
sub
add
dec
and
jb
inc
dec
push
add
mov
push
call
or
mov
addr16
movsb
mov
fcmovnb
push
mov
add
pop
pop
jge
jno
pushf
scas
scas
testl
mov
out
mov
sbbb
jle
xchg
mov
out
xchg
xor
push
jl
push
fwait
movsb
lods
test
out
mov
inc
mov
mov
jne
add
mov
mov
sub
stc
out
fisttpl
shl
sbb
cmpsb
cmpsb
sub
ds
push
sbb
xchg
jb
or
inc
dec
dec
lcall
mov
lods
or
adcb
lock
add
jg
add
cmc
in
push
loop
ficompl
mov
mov
mov
mov
push
ret
test
push
pop
or
gs
js
rclb
mov
jbe
sub
out
imul
mov
bound
lods
jnp
imul
push
push
daa
push
rcll
mov
fimuls
xor
pop
fdivrs
push
cmp
cmp
add
or
pop
or
push
pop
arpl
adc
aam
jp
mov
inc
dec
sbb
xchg
pop
js
or
out
cmp
nop
sub
and
adcb
pop
inc
push
ljmp
fstpl
dec
sub
push
fidivs
push
xlat
outsb
push
add
cmp
mov
fptan
cmpsl
push
dec
add
arpl
ret
push
jle
out
xchg
add
bound
dec
mov
movsb
pop
pop
test
inc
jmp
mov
xchg
jns
stos
sub
mov
repz
sbb
or
inc
cmp
fcomp
cwtl
cmpsb
pop
popa
ret
lahf
add
mov
shrb
jl
cmpsl
sbb
aam
sub
inc
sub
fdivs
cmpsl
in
mov
loopne
cmpsl
loop
sbb
dec
hlt
xor
adc
or
sbb
call
daa
pop
add
push
or
pop
pop
add
inc
scas
je
xchg
loope
pusha
jle
adc
cwtl
or
or
fsub
cli
and
mov
jns
lock
sub
ljmp
es
dec
push
ss
cmc
xorb
out
fucom
pop
mov
cmp
ja
mov
cmp
cmp
rolb
mov
mov
fisubrl
xchg
jp
push
adc
add
movsb
and
pop
addr16
mov
leave
jg
ret
stos
mov
or
sub
mov
add
mov
jge
or
aad
xor
push
add
dec
pop
je
jae
out
inc
fisubl
aad
lret
and
sub
mov
xrelease
xor
jne
push
or
ss
nop
fisubrl
mov
stc
pop
xor
mov
insb
rclb
fwait
mov
ret
xchg
push
mov
mov
xchg
aad
mov
pop
jg
ljmp
inc
pusha
aad
in
ja
jp
mov
aas
jge
call
lods
fildll
aas
gs
and
mov
ja
jne
shrl
dec
cmpsb
dec
cmpsb
jp
mov
out
push
mov
xchg
sbb
stc
shl
mov
cwtl
stos
and
daa
add
fcmove
aaa
push
sbb
mov
fs
shl
sbb
dec
bswap
sub
fsubrs
jne
outsb
sub
repz
fidivrs
jae
mov
cwtl
pop
pop
pop
sahf
sbb
adc
mov
inc
mov
daa
cmp
in
filds
inc
cld
push
mov
std
xor
sub
pop
mov
mov
stos
fidivrs
adc
dec
lcall
sub
sbb
pop
ljmp
add
xor
sub
arpl
scas
cmp
ja
int3
jle
clc
dec
dec
add
sbb
and
outsb
xchg
or
sbb
nop
jle
mov
sbb
pop
bound
mov
cmp
scas
es
mov
sub
leave
adc
adc
push
add
outsl
inc
push
dec
hlt
pushf
mov
or
data16
push
pop
notb
xchg
lret
pop
add
aad
cmc
sbb
and
cmp
roll
clc
add
popf
jle
leave
pop
std
mov
cmpsb
mov
jmp
pop
aad
mov
jno
lea
inc
out
mov
pusha
push
stos
lcall
mov
call
and
sbb
fidivs
pop
cmp
inc
inc
adc
or
jecxz
leave
icebp
pop
pop
test
scas
adc
pushf
dec
jbe
pop
out
jge
push
mov
stos
push
fstps
dec
jbe
stc
cmp
lahf
add
lods
adc
leave
xor
mov
adc
mov
cmp
dec
sbb
dec
push
and
dec
and
pop
je
mov
sbb
push
or
xchg
testl
inc
cmpsl
dec
mov
sub
or
pushf
imul
repnz
jne
sub
shrb
aam
adc
push
sub
dec
scas
cld
mov
and
mov
fs
lods
pop
ret
outsl
out
in
inc
mov
adc
pop
and
xchg
adc
in
clc
mov
and
sbb
shll
sub
mov
orb
lret
and
inc
jno
dec
mov
cmp
adc
stos
mov
movsb
push
mov
push
xchg
add
mov
pop
xlat
sbb
and
xor
movsl
mov
cmp
loop
cmp
repnz
mov
fwait
js
aam
cmp
jecxz
mov
ss
xchg
sub
mov
scas
nop
lods
lahf
jb
outsb
adc
pop
add
mov
lock
insb
in
mov
jnp
iret
leave
das
dec
adc
xchg
dec
mov
orl
sub
inc
ljmp
cmp
adc
or
pop
xor
xchg
cmp
int
out
xor
or
mov
in
insl
mov
test
jge
sbbl
popf
out
lret
mov
iret
clc
xchg
arpl
jae
test
dec
dec
psubsb
add
add
mov
test
loopne
repnz
sub
test
sti
mov
imull
jno
adc
sti
test
leave
jb
orl
cwtl
sbb
pushf
xor
cmp
mov
mov
and
mov
sub
xor
xor
movsb
jmp
and
mov
adc
lods
sub
repz
scas
xor
sbb
outsb
jb
fdivrs
ljmp
push
das
sbb
lahf
dec
ljmp
jecxz
jne
xchg
pop
push
mov
ror
sub
mov
mov
jge
mov
jno
insl
and
movsl
andb
daa
jbe
and
call
cmp
into
cmpl
out
mov
mov
scas
mov
ds
xchg
mov
mov
lock
mov
test
xor
call
mov
jecxz
xchg
add
push
loope
pushf
pop
addl
leave
mov
cmp
lahf
and
lret
add
stc
out
cmc
dec
xchg
mov
and
inc
and
sbb
sti
jae
dec
negb
mov
movsb
jecxz
inc
jne
and
test
pop
mov
test
js
icebp
aaa
xchg
inc
mov
cmpb
xor
dec
movsb
jo
sub
shr
push
add
mov
cmc
and
lret
cmp
clts
enter
cmp
jne
aam
xchg
lcall
gs
sbb
xchg
hlt
xor
lret
or
jnp
cli
xor
push
mov
fiadds
sbb
sbb
sub
cmpsb
das
stc
jno
add
enter
dec
fmuls
pop
es
add
jl
mov
and
fstpt
mov
lahf
je
jne
push
pop
leave
adc
mov
cmp
in
mov
js
add
lods
std
xchg
add
cmc
pop
dec
sti
adc
nop
push
or
sbb
fstl
mov
xchg
or
adc
in
push
and
lock
movsb
xchg
pop
lcall
icebp
int
movsb
pushf
inc
mov
pusha
sbb
fcmove
inc
rclb
sti
xor
jae
mov
sub
mov
inc
int
cmpsb
test
jmp
stos
or
cwtl
jne
ss
pop
mov
sbb
inc
sub
or
dec
inc
cmpl
hlt
and
dec
mov
bound
je
int3
daa
mov
stc
mov
mov
or
cld
shll
jl
aaa
mov
sub
dec
inc
inc
fisubrl
aad
out
mov
cmp
mov
inc
sbb
fistpll
cmp
cli
lods
das
sub
outsb
or
push
sbb
in
dec
call
lods
loope
pop
inc
push
xchg
cmpsb
stos
adc
sbb
mov
subl
push
idivl
dec
test
adc
rcrb
mov
call
cmpsb
fs
shl
repz
add
leave
push
push
pusha
jb
mov
jns
pop
cmp
add
mull
mov
lods
in
jmp
dec
ds
add
inc
adc
cld
outsl
icebp
or
bound
aaa
fcmovnb
imul
int3
jecxz
pop
enter
xor
hlt
test
jge
push
mov
add
fisubrs
fdivs
lock
bound
or
imul
pop
fs
jle
enter
xchg
xorb
mov
lcall
scas
cmc
xchg
xchg
cwtl
mov
cmpsb
xchg
xor
add
cmp
fcmovnu
xor
sbb
jnp
sbb
cmp
and
gs
out
cmp
mov
jl
xor
mov
pop
cmp
fnstenv
mov
leave
sub
mov
scas
xor
pop
mov
popa
xchg
ja
test
adc
nop
ds
pusha
imul
jnp
fcmove
or
adc
aas
mov
push
outsl
outsl
inc
testl
mov
or
daa
js
adc
push
ret
cmp
cmp
inc
or
dec
rcl
jg
or
pop
sub
mov
adcl
mov
lahf
mov
movsl
or
cli
xor
arpl
sti
push
insl
std
mov
arpl
sub
pop
cmpsb
dec
pop
dec
dec
movsb
fwait
inc
xor
test
mov
test
out
cmpsl
xor
orl
insb
add
ficompl
inc
ljmp
js
sahf
jge
sbb
inc
fimull
push
les
sub
jbe
xchg
sbb
cmp
push
xchg
pop
and
dec
clc
xchg
xchg
icebp
in
movsb
fs
dec
ds
fidivrs
std
addr16
xor
mov
fcmovb
jne
rol
sbb
cmc
or
pop
rorl
mov
or
cmp
out
push
mov
fstps
dec
out
pop
dec
das
aam
adc
mov
xchg
mov
in
xchg
mov
inc
rol
outsl
jl
xchg
sub
jo
pop
jge
or
mov
in
cmpsb
xchg
in
dec
push
xchg
pop
dec
stos
mov
lods
mov
popf
push
xor
and
or
jecxz
imul
mov
clc
fmull
cwtl
pop
testl
jl
jle
lcall
cli
cld
loopne
jb
pop
xchg
je
or
test
cmpsl
fnstcw
sarl
ret
inc
arpl
mov
sub
js
popa
cmpsl
cmp
inc
dec
push
add
shr
pop
mov
in
and
xor
fwait
shll
adc
js
push
cwtl
in
xchg
mov
lea
jbe
sbb
out
lods
fsub
xchg
loopne
shr
sub
fcmovne
in
xorb
mov
dec
inc
icebp
aam
js
dec
mov
xchg
cmc
xchg
lods
mov
loope
movsl
inc
dec
movsb
stos
push
fmuls
fs
xor
mov
lods
jae
dec
fwait
adc
push
xchg
cli
mov
push
xor
sub
jno
xchg
pop
cmc
lods
inc
mov
gs
add
jb
dec
popa
sub
iret
inc
or
mov
push
sbb
dec
lods
push
jmp
cmp
std
jne
xor
sbb
fildll
sbb
movl
sti
dec
mov
sarl
jbe
outsb
sub
adc
xor
jecxz
xchg
sbb
sbb
fistps
adc
add
es
ss
add
sbb
idivb
je
inc
loop
addr16
sub
jmp
push
mov
cltd
push
lea
cld
sub
adc
es
pop
add
insw
cmp
mov
lock
xlat
stos
aam
cmp
dec
fildl
leave
in
mov
sub
loopne
fists
test
test
sahf
dec
cmp
orb
sub
out
mov
roll
in
push
lea
fidivrs
std
dec
out
aas
icebp
push
xchg
jmp
in
xchg
lds
adc
add
or
andb
stos
stc
mov
sahf
sbb
mov
xor
push
mov
mov
sbb
out
je
into
std
push
inc
push
movsl
in
push
into
mov
sub
mov
fsubl
leave
pushf
enter
ljmp
jne
daa
mov
mov
dec
cmpsb
pop
and
lea
jle
cmp
mov
push
test
push
push
adc
dec
mov
xchg
or
and
scas
out
cmpsl
add
mov
inc
aaa
pop
mov
pop
pop
sbb
repz
insl
orl
aas
push
cmp
jb
jle
or
lods
cmp
cmp
inc
sar
add
aaa
movsl
adc
popa
sub
lcall
or
lods
sbb
cmp
mov
or
imul
stos
imul
mov
lret
fmul
inc
rcll
xor
mov
mov
mov
cli
mov
rclb
mov
mov
stc
jmp
jg
stos
pusha
jmp
jns
pop
cmp
cmp
shlb
inc
mov
cld
xchg
push
testl
mov
fcmovnb
mov
and
xchg
jbe
ss
or
jl
lds
das
std
popf
je
dec
imul
inc
dec
and
push
or
xchg
into
jne,pt
dec
outsb
outsl
pop
adc
add
sbb
fldenv
sub
jg
arpl
cmp
mov
or
testl
mov
repnz
mov
mov
mov
pop
push
ljmp
cmc
jecxz
mov
outsb
in
mov
test
sbb
int
idivb
mov
and
sbb
jno
dec
movsb
inc
into
push
in
fisttps
push
inc
adc
out
xchg
adc
roll
mov
scas
insb
jb
push
jne
call
sub
xchg
mov
dec
outsb
int
jnp
lock
int
hlt
jle
imul
test
sub
mov
mov
push
cmp
push
dec
mov
insl
test
xchg
dec
out
jbe
test
call
call
sbb
lcall
repnz
imul
mov
icebp
nop
sub
jge
pop
jns
cmpsb
or
dec
dec
nop
daa
das
js
and
xchg
iret
dec
test
popa
loop
sbb
xchg
repz
stos
push
inc
sbb
jae
lret
pop
cmpsl
dec
imul
dec
sub
adc
dec
and
ret
test
xor
subb
xchg
call
jp
or
or
sbb
xor
xor
sahf
pop
test
or
cmp
sbbl
lahf
sbb
inc
leave
out
sbb
or
inc
adc
lret
mov
pushf
add
imull
add
mov
mov
xchg
mov
test
push
pushl
mov
stc
push
aad
icebp
xor
maxps
inc
push
cs
lret
jbe
jmp
jp
sbb
push
aam
das
fsubrs
shlb
aam
mov
ss
lea
les
enter
sbbb
repnz
adc
push
inc
lretw
lret
push
icebp
adc
add
push
mov
mov
and
push
insb
gs
dec
adc
shlb
stc
and
xor
test
mov
arpl
popf
cmpsb
xor
jge
out
xlat
cltd
inc
roll
cs
inc
cld
fs
incb
lret
jae
inc
push
pusha
imul
fs
fwait
dec
cmpsb
in
or
sbb
pop
dec
mov
mov
xor
addb
out
ficompl
fistpl
scas
xchg
inc
jecxz
insb
test
hlt
push
stc
and
repnz
inc
fsubrs
dec
fimull
repnz
stc
xchg
mov
push
jno
fdiv
mov
mov
roll
imul
test
outsb
fcomps
fnstenv
jno
cmc
inc
out
cmp
lahf
inc
dec
mov
sti
iret
lods
sub
sbb
xchg
cld
ret
add
das
xchg
shrb
insb
clc
mov
cmp
gs
sub
int
dec
dec
xor
xlat
sub
repz
push
jmp
pop
xchg
jecxz,pn
or
mov
xchg
xor
pop
push
sub
mov
xor
das
and
jne
sbb
notb
andb
mov
cmp
into
in
lds
cld
hlt
mov
push
mov
sbb
adc
mov
out
push
clc
je
xchg
mov
and
push
or
pop
jae
addr16
aaa
cmp
jbe
push
dec
inc
ljmp
adc
jae
inc
xchg
andl
call
inc
mov
sahf
sub
sbb
jp
push
inc
neg
nop
push
sub
lcall
mov
ret
test
mov
adc
mov
mov
add
inc
pop
jbe
ja
cltd
scas
cmp
scas
sbb
repz
mov
mov
jmp
shlb
and
nop
mov
call
and
lret
dec
pusha
mov
js
mov
sub
pop
popa
iret
popa
inc
dec
xor
xor
shll
loope
mov
mov
dec
and
cmovs
jbe
push
shld
outsb
inc
inc
add
lret
loopne
int3
jns
mov
ljmp
sbb
loope
mov
insl
jb
popa
inc
mov
add
and
andl
adc
push
xchg
jns
pop
adc
push
test
ds
adc
xchg
es
push
pop
loope
test
pop
out
loope
add
jo
daa
rorl
ror
dec
push
or
adc
cmpsl
adc
cmpsl
xchg
dec
dec
mov
mov
clc
in
pop
andl
jecxz
clc
fsubrl
dec
lods
and
push
adc
dec
inc
lcall
jge
and
adc
add
sub
mov
outsl
or
inc
nopl
out
imul
call
sbb
comiss
sbb
mov
jo
ljmp
rclb
cwtl
or
cld
cmp
ret
inc
popf
pushf
int
sub
stos
rol
loope
lods
ret
mov
repz
mov
mov
jns
ret
lods
addr16
aas
mov
mov
add
xchg
gs
aas
or
cmp
call
mov
lods
pop
and
fcoml
adc
pop
stos
jae
mov
push
popa
mov
xchg
filds
and
fs
mov
push
sub
in
scas
ficomps
mov
insb
imul
add
lock
mov
adc
pop
stc
js
imul
inc
aas
sub
mov
jne
pop
or
sub
cmp
lock
sbb
inc
pop
xorl
mov
cli
flds
mov
outsb
je
notb
cli
push
adc
loop
shll
mov
movsl
leave
sub
scas
mov
jno
mov
clc
fmuls
lret
add
test
movsl
outsl
scas
lea
mov
or
jmp
sbb
gs
sub
inc
in
jb
push
jmp
dec
addr16
mov
mov
ret
int
test
scas
in
adc
movsl
sub
repz
fistl
ds
mov
jmp
in
pop
call
cli
outsb
fs
and
ret
aas
insl
mov
je
hlt
jmp
pop
lods
push
cld
aam
pop
sub
sbb
or
iret
mov
rcrl
jecxz
jae
jnp
push
jmp
jl
push
inc
mov
loop
leave
data16
sub
scas
jae
xchg
adc
xchg
je
dec
outsb
out
daa
pop
out
insb
mov
cmp
movsb
jae
movsb
sub
fdivrl
cltd
dec
cmp
imul
push
into
fldenv
inc
mov
in
sub
pop
add
aas
rorb
bound
pop
cmp
lahf
mov
mov
mov
push
lock
lret
insl
push
dec
jge
sbb
cmp
pop
popf
cmc
add
dec
mov
pop
call
push
lahf
inc
adc
or
test
std
push
roll
insb
inc
jb
stc
out
push
rcrl
push
fdivrl
faddl
in
cmp
ja
adc
push
mov
fidivl
mov
jmp
fs
adc
sbb
pushf
int3
xchg
xchg
lea
adc
enter
mov
sub
ja
dec
xor
pop
fcom
add
or
push
xor
repnz
jno
test
cld
fnstenv
fs
negb
outsb
out
imul
xchg
push
adc
scas
pushf
sbb
mov
roll
ja
test
push
mov
sbb
dec
adc
xor
sbbl
icebp
mov
gs
rclb
jp
sarb
sub
in
repz
jmp
int3
sbb
cmpsl
mov
out
cmp
out
sub
lcall
mov
test
xlat
lret
rolb
sub
mov
and
xchg
std
inc
inc
add
push
xor
out
ficoms
cmp
fildll
xchg
jmp
cmp
pop
xchg
jnp
je
xor
adc
mov
or
and
xor
sbbb
push
testl
mov
movsl
repz
sub
into
cltd
pushf
adcb
imul
leave
and
sub
xchg
mov
testl
aas
add
or
into
imul
gs
jl
ljmp
mov
add
push
pushw
push
cltd
mov
jnp
mov
notl
adc
xor
les
js
pop
jecxz
mov
jae
call
outsb
out
ficomps
loop
out
cmpsl
dec
jnp
imul
cli
js
jae
mov
out
mov
lods
sbb
mov
outsl
mov
test
inc
xchg
addr16
xchg
adc
sub
andl
enter
inc
les
sub
push
dec
into
testb
mov
xchg
xchg
iret
repnz
push
sbb
enter
inc
mov
sub
fnstcw
dec
scas
and
cmpsl
mov
cld
fisttpl
cmc
sub
mov
or
hlt
pop
aas
lods
rorb
inc
adc
ljmp
in
mov
dec
out
sahf
in
adc
out
mov
dec
incl
lods
iret
mov
pop
test
shrl
pop
fidivrs
and
xchg
lods
jge
pop
out
in
bswap
or
outsl
rorb
mov
push
push
shrb
adc
ret
sbb
call
xor
xor
dec
mov
pushf
pop
popa
dec
cwtl
rclb
dec
ss
pop
jae
add
cmpsl
fs
mov
cli
adc
cmp
mov
inc
add
mov
sub
jl
adc
out
sub
test
fwait
insb
popf
mov
cltd
jl
push
outsl
mov
inc
xchg
ficoms
push
push
imul
dec
or
movsl
pusha
push
testl
jmp
insl
ss
or
cwtl
sub
inc
sub
dec
cmp
inc
dec
mov
mov
lret
push
xchg
inc
js
popl
mov
jp
fucomp
sbb
mov
out
repz
test
jns
int3
fmull
aam
test
inc
mov
pusha
fwait
push
out
mov
or
inc
enter
nop
in
insl
daa
mov
andb
rcr
fisubrs
pushf
dec
pusha
pop
test
adc
test
cmp
das
sub
ss
decl
sub
sarl
and
fs
pop
xchg
fcomi
cwtl
mov
push
dec
data16
mov
out
insb
push
jp
popa
and
sti
imul
and
inc
or
adc
aam
push
or
and
push
add
clc
imul
movb
mov
lods
call
adc
test
jnp
in
repnz
push
pushf
scas
or
into
push
xchg
pop
je
push
sub
cmp
sub
cmpsl
test
mov
shlb
outsb
or
push
cmpsl
insl
and
adc
addr16
or
out
sub
andb
mov
iret
pop
cmc
in
dec
jb
cld
cmp
gs
push
daa
test
push
cmpsl
jmp
imulb
xchg
mov
lahf
scas
pop
addb
cmp
test
sbb
outsb
inc
addb
push
fisubrl
mov
fcmovnbe
lods
mov
xchg
add
mov
daa
lcall
sbbl
and
aad
mov
test
jl
fsubrs
aas
sbb
mov
cmp
xor
or
test
sub
out
pop
aas
mov
push
into
jp
xor
faddl
xchg
aaa
nop
or
mov
fmuls
sbb
in
popf
xchg
lea
lcall
push
in
jl
jmp
lock
out
adc
int
and
mov
daa
sbb
and
jg
mov
nop
mov
inc
xor
sbb
add
pop
stos
shrb
mov
inc
push
pusha
ds
cli
jmp
popf
and
cli
stos
es
push
ja
gs
push
xor
jecxz
mov
addr16
jnp
nop
inc
and
fmuls
enter
aam
cwtl
scas
rcll
jge
aam
in
pop
mov
jns
aaa
std
test
js
in
sbb
stos
jg
cmp
fwait
push
mov
subb
adc
or
or
les
shr
lods
fists
mov
jnp
dec
cmp
test
push
lret
mov
rcrb
inc
loopne
mov
stc
test
push
mov
lods
hlt
aad
or
ss
inc
push
xlat
add
cwtl
mov
not
orb
jl
pop
data16
xor
xchg
int3
add
push
mov
movsb
scas
mov
jp
adc
or
in
sub
js
aas
test
add
jno
push
sub
and
sub
repnz
xor
jo
lds
push
fs
repz
cmp
mov
add
mov
loope
insb
jnp
adc
in
jle
and
enter
cwtl
inc
jne
jl
cmp
dec
fnclex
stos
iret
push
fstpt
adc
jecxz
dec
xorb
cmp
ret
or
lock
jo
cld
mov
orb
mov
mov
xor
cwtl
push
ss
loop
les
jge
add
repnz
sub
loope
popa
in
dec
push
out
das
cli
xchg
lea
mov
pop
mov
push
ja
imul
lret
stos
fnstcw
push
xchg
scas
call
rcll
xchg
push
jns
jge
jmp
movsl
and
jl
jbe
push
and
sti
dec
cmp
push
insb
xchg
jp
sar
popf
scas
mov
mov
sti
test
sub
rorb
and
or
cltd
cmpsl
ror
stc
xor
mov
pop
push
fcoml
cs
mov
inc
cs
mov
out
out
in
fnstsw
jg
dec
push
ds
pop
aam
add
mov
test
push
xchg
repnz
push
bound
mov
sbb
pop
fmul
fsts
ficoml
cmp
push
outsl
insb
jecxz
mov
rcrb
inc
mov
inc
out
cmpsl
xor
in
imul
inc
mov
pop
xor
rolb
or
xchg
mov
into
mov
ja
stos
adc
popa
add
imul
lock
mov
pop
test
das
and
mov
loopne
test
cmp
push
insb
and
sti
mov
repnz
or
jecxz
movsl
push
fstl
into
outsl
repz
adc
into
stos
pop
dec
in
cli
fsubl
jbe
mov
xchg
xchg
jg
in
test
inc
vmovapd
subl
jne
add
aad
jne
scas
cltd
inc
and
sbb
bound
inc
xor
call
aaa
movsl
scas
xor
mov
fisttps
dec
sub
sahf
mov
jecxz
jg
mov
call
inc
ja
cmpsb
xor
and
fmuls
adc
gs
lret
dec
xor
xchg
adc
scas
movsb
xchg
lock
mov
cs
leave
add
repz
cmp
jno
push
aaa
out
sub
lret
cmp
push
movsb
jno
leave
es
loopne
xchg
fsubr
add
sbb
sub
daa
or
icebp
fbld
mov
mov
cmp
out
lods
sbb
mov
xchg
or
std
fisttps
sub
inc
in
adcb
lds
jae
scas
or
fists
and
sbb
fdivs
xor
pop
movsl
inc
cld
sbb
enter
inc
leave
lods
mov
xor
fwait
hlt
push
mov
cmp
in
inc
sub
call
aad
xchg
mov
lea
or
jb
push
movsl
pop
daa
lods
mov
jge
jge
cltd
jg
pop
add
js
ficompl
stos
ret
pop
jo
mov
cltd
notb
cmc
test
imul
push
mov
mov
jl
out
cmp
sub
mov
or
outsb
mov
imul
mov
mov
outsb
shr
imul
fs
lret
rolb
fstps
jle
ret
gs
and
sbb
and
mov
adc
mov
inc
pop
fisttps
mov
or
xchg
in
xchg
dec
fbld
jbe
out
lods
les
mov
jp
leave
icebp
outsl
and
and
push
das
fnsave
jmp
mov
roll
insl
xor
shlb
enter
mov
in
xor
jne
xchg
xchg
pop
add
mov
sbb
loope
aad
cs
cmpsb
aas
cltd
pop
inc
jbe
mov
xchg
cmc
adc
movsl
faddl
push
out
add
push
jg
pop
pop
mov
cltd
cmp
pop
add
xchg
imul
xchg
jbe
push
out
push
inc
out
mov
cmp
test
jbe
push
add
sti
inc
xchg
int
cmpsl
test
data16
adc
inc
fcomps
lret
stos
cwtl
stos
mov
pop
arpl
pop
insl
add
mov
icebp
cwtl
dec
filds
adc
and
fadd
das
dec
adc
xchg
mov
mov
cmc
push
cmpsb
cmp
lea
add
stos
adc
hlt
inc
std
popl
sbb
xchg
mov
mov
je
jnp
push
dec
sbb
mov
and
xchg
mov
stos
adc
into
out
outsl
and
dec
and
or
xrelease
ret
aaa
and
clc
je
xor
mov
dec
dec
mov
repz
jo
xchg
mov
fwait
fwait
mov
sub
repnz
test
test
sub
cmp
mov
pop
inc
xchg
add
pop
inc
xor
subl
mov
dec
jl
inc
ficomps
lahf
rcll
adc
outsl
cs
sub
lahf
mov
cmpsb
cmp
aam
dec
pop
mulb
stc
aaa
ror
jecxz
xchg
xor
mov
into
into
xor
outsb
mov
xchg
in
cmpsb
cwtl
outsl
pop
cmp
xor
test
xchg
jge
xchg
pop
cltd
dec
repnz
cs
mov
sbb
insl
push
mov
inc
fimull
push
push
and
cmc
bound
add
sbb
mov
arpl
cli
cmp
fisttpll
fsubrs
mov
xchg
mov
add
fisttpl
out
sbb
insl
ds
sbb
fninit
mov
cltd
cmp
mov
fwait
cltd
imul
adcl
stc
dec
xlat
and
jno
pop
ret
pop
hlt
adc
leave
jp
dec
cmp
dec
inc
pop
test
add
pop
movsl
aaa
lea
lds
cmpsb
std
fs
pop
mov
rcll
sub
out
jle
dec
sbb
fsubrs
roll
insb
jo
lds
les
and
mov
lahf
inc
out
imul
push
jle
aas
cmp
sbb
xor
pushf
push
xchg
inc
jg
movsb
lds
out
in
jmp
or
add
xchg
jp
push
mov
fbstp
lods
mov
sbb
fldcw
mov
dec
test
icebp
aam
cwtl
sub
pusha
in
mov
repnz
loope
and
fildl
mov
in
jo
dec
in
fdivs
sub
push
xchg
les
imulb
xor
add
arpl
add
icebp
in
xchg
rolb
test
mov
mov
or
or
and
mov
sub
cmp
ljmp
mov
imul
sbb
mov
sbb
jmp
js
test
lds
xchg
mov
pop
int3
sub
cmc
stc
call
mov
out
fadds
push
add
ret
inc
das
or
adc
and
fsubs
adc
into
ljmp
imul
pop
lock
mov
adc
imul
ret
lods
push
dec
sub
push
adc
and
cltd
movsb
and
lret
inc
in
mov
orl
xor
rol
es
xor
call
xor
mov
inc
faddl
xor
dec
sub
repnz
sub
mov
test
or
dec
cmp
popa
mov
setno
out
insb
or
lret
mov
mov
dec
idivb
jb
jle
scas
mov
xchg
xor
xor
dec
push
add
mov
xor
scas
lods
cmpsb
mov
std
sbb
lods
dec
mov
mov
add
and
push
sbb
cmp
insl
loopne
mov
adc
pop
cwtl
inc
inc
push
stos
out
add
ljmp
jo
data16
les
mov
in
js
jle
iret
pop
enter
push
xor
cmc
sub
or
xlat
push
jo
in
add
andl
add
sbb
lea
jne
push
leave
frstor
fdivp
cmp
lret
add
push
shl
nop
inc
idivb
fdivs
lret
pop
mov
sub
push
lahf
fistpl
push
ja
dec
jae
add
push
movsl
and
and
testb
sahf
mov
push
sub
sbb
sbb
and
sub
jb
outsb
xchg
mov
inc
xchg
imul
lret
pop
mov
add
mov
pop
pop
inc
sti
movsl
cmp
cmpsl
loopne
lods
pop
dec
movb
cmpsb
pushf
push
pop
jno
push
xor
fdivr
cmc
and
xchg
lahf
imull
stos
fdivs
arpl
enter
fwait
jne
stos
loope
lcall
ljmp
sbb
pop
pop
push
std
cltd
lahf
add
roll
ljmp
mov
aaa
cwtl
sub
xor
pop
cli
cmp
out
into
dec
sbb
inc
out
fwait
pop
insb
push
cwtl
shr
rorl
std
in
daa
outsb
jmp
adcb
push
mov
outsb
xor
inc
icebp
cmp
dec
mov
test
mov
scas
and
movsl
inc
cld
pop
aas
xchg
pop
jns
cwtl
cs
sahf
push
popa
adcl
cli
inc
inc
fnsave
mov
jp
addr16
fs
mov
add
inc
or
push
and
stos
pop
imul
roll
insb
sbb
int
inc
ljmp
or
xchg
js
mov
ss
sub
jl
mov
fmull
stos
hlt
cmc
outsb
inc
fstl
or
adc
stos
add
fadds
xchg
js
movsb
mov
insb
sub
adc
xor
das
sub
adc
push
dec
sub
dec
push
fsts
lahf
xor
and
test
test
inc
into
push
xchg
popa
enter
adc
dec
pusha
mov
sub
xor
imul
dec
jno
rolb
fistpll
xor
jns
outsl
mov
or
push
fmull
or
or
shll
jg
ss
std
nop
inc
sbb
fiaddl
jl
jo
xor
xchg
pop
popa
aam
sbb
test
int3
adc
add
sbb
add
mov
lcall
enter
push
pop
jl
pop
and
clc
out
xchg
cmpsl
cltd
sub
movsb
push
faddl
idivl
mov
cli
ljmp
pop
jne
sbb
xchg
mov
jnp
mov
addb
jno
inc
outsl
aas
cmp
out
mov
push
xchg
jg
xchg
fisttpl
sub
cld
inc
xchg
pop
push
mov
mov
ret
cli
cld
scas
lods
pop
and
adc
push
pop
ljmp
jbe
mov
jp
mov
jecxz
adc
mov
movsl
stc
popa
mov
jne
mov
sub
mov
clc
in
cmp
shll
dec
loope
push
and
test
push
pushf
push
xor
cmp
daa
or
and
icebp
adc
clc
hlt
inc
pusha
push
sbb
sbb
pop
adc
lds
jecxz
mov
cmp
adcl
cmp
and
enter
pop
lcall
movsl
fistl
decb
cmp
fwait
lds
rolb
mov
rcr
ret
push
es
das
loope
push
push
jp
test
es
jb
aaa
pop
call
incl
adc
xchg
mov
fcompl
imulb
sbb
xchg
aam
ss
fdivs
outsl
movb
push
ficoms
shrb
dec
in
push
loop
mov
clc
push
fildl
pop
adc
dec
xchg
dec
mov
xchg
sbb
fisubs
into
lsl
popf
push
out
cmp
jp
cmp
stos
movsb
bound
dec
xchg
push
xor
aad
push
mov
ret
loopne
fnstenv
xchg
dec
jp
xor
add
ss
jno
cmp
dec
mov
mov
lret
imul
jecxz
xor
add
xchg
push
dec
ds
test
xor
mov
aad
or
ds
pop
cltd
adc
aad
xchg
cmp
jns
sahf
and
xchg
xor
stos
pop
sbb
mov
xchg
push
and
mov
mov
hlt
icebp
xchg
fcoms
shr
outsl
lock
xor
or
in
dec
clc
or
pop
cld
icebp
insl
idiv
lret
lods
adcl
lock
and
adc
mov
subl
fucomi
cmpsl
jl
add
or
mov
leave
xor
mov
lret
outsb
loope
push
mov
add
imul
push
xchg
nop
pop
clc
sub
pop
pop
and
push
add
mull
dec
loopne
add
je
fnstcw
je
dec
dec
cmp
icebp
fs
push
and
ja
xchg
adc
mov
adc
mov
cmp
cli
divb
add
mov
sar
jne
pop
pop
adc
pop
push
mov
jns
add
pop
adc
lods
pop
sbb
shrl
and
test
adc
sahf
pushf
pop
lcall
or
push
sbb
adc
inc
insl
lods
gs
lret
mov
sti
add
rcl
mov
int3
lahf
inc
aaa
xor
in
cmp
shlb
mov
xchg
and
pop
fiaddl
cmp
xchg
cmp
xor
test
test
jecxz
push
xchg
test
mov
mov
inc
xchg
fstl
mov
ret
xor
push
pop
pop
or
insl
add
adc
rcll
lods
movsb
push
xor
fistl
dec
xchg
mov
fmull
les
fildl
inc
adc
lock
js
daa
cld
sbb
clc
mov
xor
adc
popf
push
dec
cmp
sbb
mov
aas
aaa
mov
push
arpl
fidivs
push
mov
stos
xor
pop
adc
out
cmp
lret
mov
in
mov
inc
cmp
jl
xchg
push
push
jl
int
rorl
cmp
pop
repz
hlt
xor
adc
mov
mov
or
dec
or
je
add
ljmp
mov
orl
mov
sub
int
xlat
in
shrl
mov
stc
lea
fwait
dec
jle
lret
xchg
inc
iret
iret
and
or
test
leavew
xor
xlat
insl
adc
push
lcall
xchg
xor
push
and
inc
test
je
sahf
dec
mov
sbb
or
sub
mov
sbbl
stos
add
push
sbbl
sbb
aas
sub
lock
cld
jge
fisubrl
adc
popa
test
mov
ds
adc
fisttpl
clc
sbb
fstl
mov
fs
mov
mov
cmp
push
sti
pop
iret
inc
jnp
inc
dec
sub
lahf
rcl
int
fstps
mov
mov
mov
repz
add
sbb
mov
out
mov
das
jle
ja
add
ljmp
mov
sbb
sbb
cwtl
jne
cmc
jmp
cs
jae
inc
xchg
jo
shll
enter
jl
outsl
ret
nop
pop
daa
test
xor
mov
mov
pop
pop
mov
mov
insl
mov
push
jne
mov
cmp
push
jmp
pop
cltd
inc
dec
fistl
cmp
mov
sbb
lahf
jb
sbb
mov
and
add
fsubrl
imul
dec
push
lods
push
and
pop
and
mov
xchg
insb
adc
pop
sahf
fdivrl
stos
jg
sbb
outsb
adc
lods
xchg
sub
fadds
sub
je
data16
stc
xor
js
sbb
ror
imul
leave
insl
pop
sti
mov
pushf
xor
pusha
cmovbe
daa
sti
aam
dec
xor
push
mov
call
repz
push
push
jl
jns
cwtl
ja
push
lcall
loope
sub
inc
sbb
cmc
loop,pn
into
aam
adc
pop
repnz
in
insb
push
xor
test
cmc
sbb
mov
ret
and
orb
push
mov
pop
add
loope
mov
sbb
inc
mov
inc
xlat
add
jge
aam
adc
jns
rep
xchg
pop
cltd
incl
mov
inc
mov
rep
adc
inc
dec
pop
ja
sbb
int3
mov
adc
lret
leave
cmpsl
movsl
leave
fcomp
test
sbb
mov
xchg
shll
ret
jnp
sub
mov
xchg
imul
aam
bnd
adc
adc
mov
xchg
jns
jl
xchg
inc
lea
rcrb
dec
popf
mov
mov
fists
push
mov
test
es
dec
mov
cmp
les
test
sarb
outsb
pushf
jmp
push
sub
push
add
test
fdivs
pop
jl
je
xor
xchg
cltd
repz
stos
cmp
mov
mov
hlt
mov
and
xor
test
xor
sbb
outsl
call
jo
cmp
int
push
or
mov
jecxz
lret
xchg
mov
ret
push
rolb
jbe
jo
cwtl
xchg
je
pop
cmp
cmp
xor
push
les
xor
mov
push
mov
insl
hlt
push
repz
pop
mov
sarl
jge
or
sbb
lea
int
push
out
xchg
and
and
jmp
scas
lods
and
loopne
xor
bswap
addr16
cmpsl
dec
pop
cs
mov
inc
fimull
xor
sub
dec
gs
add
cltd
mov
movsl
ss
dec
jl
stos
adc
rol
fst
mov
pop
movb
fwait
push
inc
in
loop
hlt
mov
lret
sbb
loop
das
add
pop
lret
cmpsl
inc
mov
xchg
xlat
div
outsl
in
cmp
adc
adc
jp
mov
mov
dec
push
std
in
test
xchg
xor
pop
cmp
loop
mov
aam
ja
lea
inc
or
add
pop
fs
outsl
pop
rclb
mov
jnp
inc
data16
xchg
pop
mov
pop
dec
and
cli
mov
pop
clc
xchg
cmp
cmp
jmp
sbb
or
xchg
push
int
inc
in
imul
daa
shll
and
aam
mov
shl
incb
mov
in
sarb
aad
or
mov
mov
mov
cmp
call
inc
fstps
dec
ss
add
xchg
repz
push
test
jo
cwtl
mov
dec
or
shl
int
fiadds
xchg
mov
cld
cmp
pop
aad
or
into
or
inc
mov
cmp
shl
sub
jbe
subl
scas
pop
mov
icebp
hlt
loope
xchg
sbb
call
loopne
cmp
test
mov
pop
mov
adc
les
or
jo
popa
push
push
jb
es
cmpsl
mov
jbe
lds
mov
in
cmp
fwait
inc
insb
xor
stos
ret
xchg
jge
adc
pop
xor
adcb
dec
rorb
inc
test
inc
out
jle
pop
xlat
sar
aas
sub
jmp
pusha
xlat
mov
scas
shlb
pmaxsw
sbbl
inc
lock
sub
stos
popa
xchg
repz
xor
pop
mov
or
ds
insb
lods
cld
push
data16
rcll
stc
push
cltd
out
imul
inc
add
dec
dec
outsl
mov
test
in
enter
rcll
add
hlt
mov
jo
imul
adc
stos
push
add
or
xchg
mov
fmul
test
enter
test
js
cld
xchg
push
mov
pop
jae
or
cmc
jg
movsl
pop
mov
or
movsl
ret
test
dec
pop
fld
aaa
pop
cmp
jmp
fwait
xchg
and
push
lret
cltd
clc
rcrb
test
push
stc
aas
add
cmp
pop
icebp
js
in
cmpsl
int3
lods
js
sbb
sub
inc
cmc
fsts
mov
fnstcw
dec
imul
jecxz
sbb
lods
inc
add
inc
sahf
nop
mov
mov
adcb
test
push
sbb
add
das
jno
mov
add
ljmp
adc
mov
mov
into
xlat
scas
mov
outsb
mov
add
decl
test
inc
sbb
movsb
mov
jbe
cmp
mov
inc
rorl
push
daa
push
repnz
push
lret
nop
cld
enter
or
ret
ljmp
outsl
mov
jl
add
pop
mov
test
pushf
jne
je
lods
dec
sbb
or
mov
icebp
clc
test
xchg
rorl
mov
cmp
or
mov
fsubl
outsl
mov
rorl
lds
loopne,pn
dec
and
push
loopne
shr
dec
test
movsl
dec
inc
sbb
mov
mov
push
add
lcall
ret
gs
fstps
inc
in
add
loop
mov
add
mov
mov
xchg
sub
pop
or
push
movb
sub
roll
mov
sub
dec
jno
or
xchg
pop
mov
lods
lret
or
mov
rol
ret
sar
dec
mov
mov
adc
outsb
dec
mov
fistpl
mov
pop
cmpsb
out
repz
add
repz
in
mov
mov
stc
daa
idivb
in
and
loop
xchg
dec
or
in
and
cltd
sbb
mov
loope
ret
push
mov
and
mov
inc
lock
mov
push
inc
mov
pop
adc
xor
sbb
dec
push
push
mov
jge
add
addr16
cli
or
iret
mov
inc
dec
shrb
ds
dec
iret
subl
lods
imul
mov
mov
fistpll
push
out
fistpll
jl
xor
dec
push
shrb
scas
addl
cmp
ret
or
or
jmp
addr16
repnz
cmp
int3
pusha
shrl
inc
lcall
xchg
pushf
jne
cmpsl
xchg
xor
jmp
jp
and
xor
or
or
cmp
jmp
mov
dec
and
mov
inc
sahf
and
rcl
fld
xchg
pop
out
sub
cli
push
xor
inc
or
movsl
rorl
in
cmpl
mov
lds
and
jne
pop
jbe
xchg
shlb
xor
ret
dec
jbe
mov
or
push
or
data16
idivl
fiaddl
stc
outsl
jnp
mov
sbb
loopne
push
add
in
jg
mov
mov
lods
scas
sahf
mov
inc
sti
push
add
mov
test
mov
jl
push
cwtl
xchg
out
add
mov
mov
std
add
aas
sbb
jge
sti
xchg
fdivrs
imul
fldt
js
fcmovnb
adc
pop
xor
dec
popl
and
shrl
xlat
mov
arpl
subl
mov
divl
lret
inc
movsl
inc
lret
scas
xchg
nop
lret
jns
xchg
pusha
xchg
dec
outsl
popa
pop
or
adc
rolb
ljmp
or
stos
push
aam
jne
gs
pop
cwtl
loopne
sub
xor
mov
mov
sub
aad
cmp
pop
scas
iret
fidivl
xor
andl
mov
sbb
sahf
inc
sbb
sbb
inc
mov
xor
test
mov
xor
test
xchg
test
leave
push
pop
mov
test
dec
xor
pop
mov
rcll
in
pop
addl
fiaddl
negb
jge
fisubs
test
sbb
test
pop
std
jmp
mov
repnz
negb
daa
lods
lods
fisubl
mov
test
dec
enter
stos
int
mov
cpuid
push
xchg
inc
xlat
dec
add
cmp
lret
xchg
adc
cmpsb
test
ja
push
mov
ret
out
cmp
dec
daa
mov
inc
dec
inc
sbb
sti
nop
mull
xor
cld
sub
fwait
sbb
mov
jb
repnz
mov
scas
enter
lret
push
cmp
cwtl
sub
push
insb
loop
add
inc
fiadds
and
dec
xchg
push
xlat
jns
cmpsl
fldt
add
ljmp
lea
dec
sub
into
imul
rorb
inc
fwait
scas
sbb
and
loop
mov
and
cmp
ljmp
mov
mov
mov
in
leave
sbb
ja
rcr
scas
jb
mov
ret
and
test
mov
inc
jecxz
inc
imul
bound
pop
xor
jo
xchg
mov
mov
rorb
sub
clc
test
fldcw
pusha
jo
aaa
int3
test
mov
push
jle
sub
sub
jp
aaa
ret
icebp
int3
int3
cmpb
clc
push
sbb
incl
jecxz
inc
scas
mov
std
xor
and
or
xor
aaa
lret
idivl
inc
push
cmp
xchg
lods
cmp
xchg
lcall
test
or
int3
jne
jae
add
or
cmp
shll
xor
inc
mov
push
pop
adc
mov
loopne
inc
dec
dec
or
test
aaa
pop
xchg
gs
aas
dec
in
cs
mov
dec
pop
repnz
mov
sbb
popf
les
xchg
iret
int3
sbb
clc
and
stos
jno
sbb
repnz
addr16
stos
inc
in
je
adc
dec
ret
add
dec
lods
cmp
push
adc
pop
not
ficoms
adc
aas
fsubrl
pusha
nopl
dec
push
hlt
push
out
mov
mov
inc
adc
mov
adc
imul
cmc
xor
inc
mov
mov
xchg
test
or
push
cmp
cmovbe
inc
add
shrb
cmpsb
sbb
out
and
jmp
aaa
jge
push
inc
mov
push
jecxz
scas
cmp
add
clc
and
cmp
popa
cmp
lret
adc
add
cmp
dec
mov
pop
sbb
inc
push
xchg
push
inc
pushf
bound
sbb
es
sti
push
std
pop
xchg
sahf
jge
mov
loopne
mov
std
mov
or
xor
out
clc
xor
cmpsl
adc
shrl
shl
cmpb
cwtl
nop
icebp
mov
cld
cltd
mov
mov
fistpl
stos
movsl
movsl
inc
jge
imul
sub
repnz
push
xchg
int
adc
mov
push
fwait
sbb
cmpsb
adcl
gs
lea
cmp
hlt
dec
cmpsb
out
inc
gs
out
iret
leave
popf
je
sbb
dec
cmpsl
sub
mov
loope
pop
cwtl
cmp
cmpsl
outsb
jecxz
mov
xor
push
popf
cmpsb
insb
rorl
addr16
xchg
xor
or
or
jae
out
add
add
lahf
sahf
sbb
repnz
loopne
mulb
xlat
dec
adc
inc
jbe
add
dec
out
push
mov
insb
xsaveopt
imul
inc
sub
xor
mov
arpl
add
bound
push
out
or
out
addr16
dec
adc
mov
mov
mov
popf
or
jmp
das
push
icebp
aam
inc
and
and
test
mov
sub
rorl
add
out
sbbl
out
xchg
lock
jno
fistl
cmpsb
xor
int3
js
xchg
push
or
or
pop
test
xchg
lock
fisubrl
or
cmpsl
xchg
pop
test
stos
mov
shlb
add
pop
enter
fwait
sub
add
jmp
call
pushf
mov
aas
cld
pusha
mov
mov
xor
add
pushf
mov
or
inc
xor
jp
enter
mov
mov
mov
aaa
adc
push
loop
adc
mov
adcb
mov
lcall
daa
icebp
mov
pop
jo
lods
imul
movsb
adc
mov
sarb
dec
sub
pop
adc
std
icebp
test
sbbb
jae
in
scas
scas
inc
inc
cs
pushf
fisttpll
mov
aam
outsl
pop
fsubp
out
in
call
pop
iret
icebp
popa
leave
add
cmpsb
mov
imul
or
cmpsl
loop
mov
test
imul
ja
sbb
mov
sub
orb
xor
lds
mov
test
jge
lock
int
mov
and
in
sarl
mov
mov
xchg
or
into
imull
call
cmp
stc
jg
out
sub
jge
je
xor
in
gs
mov
push
ret
bound
imul
je
mov
imul
add
scas
pop
insb
and
popa
mov
into
or
gs
cli
sub
out
pop
push
test
outsb
mov
cmp
outsb
xchg
movsb
sbb
xchg
add
iret
xor
orl
or
jae
shl
cmp
or
not
aas
fistps
mov
cwtl
lret
je
mov
dec
mov
mov
inc
shlb
aaa
fistpl
pop
add
sbb
jnp
or
dec
jb
lds
or
iret
lods
jo
push
mov
pushf
jb
mov
pop
sarb
mov
or
xor
fstps
dec
mov
cmp
inc
inc
imull
inc
pop
cmp
add
mov
jbe
ljmp
push
dec
mov
mov
lret
inc
sbb
int
popf
fstpl
arpl
pop
mov
addr16
mov
mov
and
jg
lock
push
out
mov
rorb
or
gs
lock
out
mov
stc
rcl
adc
das
mov
push
xchg
jmp
mov
bound
and
xor
movsb
sahf
lret
pop
jnp
gs
adc
negl
mov
stos
sub
sub
xor
fdivs
sbbb
jns
inc
imul
mov
sub
jmp
cmp
clc
jno
mov
cld
mulb
sub
and
jecxz
mov
jno
jns
sub
outsb
cmc
inc
insb
gs
jp
mov
repz
bound
dec
jp
loope
adc
and
jle
iret
scas
test
jge
mov
cmp
fsubrs
enter
imul
in
xor
xor
sbb
xor
mov
leave
jns
inc
dec
mov
aam
pop
sbb
adc
movsb
mov
fcmovnb
jb
inc
sbb
movsl
jmp
icebp
dec
or
sbb
fcompl
or
mov
sbb
out
aam
out
mull
lret
fnstsw
mov
push
sbb
xchg
inc
stos
cltd
ljmp
pop
fmuls
mov
loopne
pop
add
push
mov
fcmovnu
xor
mov
pop
mov
pop
dec
sahf
popf
pop
mov
insb
xchg
nop
dec
inc
and
jno
xor
add
loopne
xor
arpl
divb
scas
xor
pop
xchg
nop
sub
std
cli
adc
ja
mov
cli
xchg
sub
shrl
dec
jbe
pop
pop
lds
jae
cmp
mov
lds
xor
imull
pushf
je
aaa
sub
enter
jb
inc
ret
or
pop
sbb
dec
lcall
cmp
mov
fsubrl
les
mov
imul
clc
in
sub
and
outsl
or
cld
filds
push
xchg
inc
fs
daa
ret
ljmp
sarl
push
jbe
enter
xor
outsb
adc
rcl
test
aas
adc
inc
pusha
xchg
bound
mov
loop
add
jo
adc
scas
mov
pop
jg
and
stos
test
pop
shrl
mov
or
jno
out
imul
xor
pop
incl
into
jae
cltd
imulb
sbb
out
loope
add
scas
pop
cmpsl
jae
sbbl
or
mov
lcall
and
pop
loopne
enter
repz
xchg
xor
gs
inc
jmp
mov
je
lea
sub
mov
out
in
int
inc
xchg
into
xchg
ret
pusha
jg
popf
pop
mov
push
jmp
int3
stos
popa
insb
cmp
inc
mov
cmp
mov
mov
dec
xor
popf
rorl
std
hlt
mov
inc
sub
loop
in
pusha
xchg
sbb
push
xchg
mov
in
cmp
add
lahf
out
cld
dec
sahf
mov
mov
pop
push
lret
cs
add
sub
and
mov
sub
jmp
cmpsl
in
inc
aas
jb
xor
fnstcw
mov
dec
cmpl
in
dec
fsubs
fmuls
insl
jnp
push
out
pop
jns
iret
lea
add
lea
aaa
lret
jecxz
rcrl
add
aas
testl
or
add
push
mov
fidivrl
test
popa
lret
xchg
mov
mov
jg
mov
jecxz
ds
clc
insl
icebp
xor
push
or
push
xchg
cmp
out
sbb
ja
stc
push
pop
ret
lods
cmpsb
movsb
xor
push
mov
lea
pop
cmpsb
in
pop
jmp
jbe
jno
lret
jnp
or
cmc
or
pop
addr16
scas
mov
mov
cmp
jbe
mov
ss
jp
leave
je
mov
adc
adc
mov
push
arpl
inc
mov
jae
sahf
icebp
testl
jp
sbb
add
dec
push
shrb
sbb
loopne
mov
into
outsb
clc
mov
arpl
test
fdivr
sbb
daa
outsb
pop
xor
xor
arpl
pop
push
jecxz
mov
cmpsb
sbb
sub
dec
adc
sbb
addr16
ret
jmp
sti
icebp
mov
cltd
cmpsl
jbe
movsb
aad
test
fildl
mulb
push
stos
gs
jnp
xor
ret
cmp
das
loopne
lret
mov
dec
xor
cmp
or
fucomip
es
jle
rcrb
iret
pop
stos
sbb
or
ljmp
in
jle
xchg
int
or
lret
int3
mov
xor
or
ficompl
into
adc
mov
adc
and
sub
in
cld
es
leave
xchg
xchg
icebp
push
adc
test
arpl
paddb
test
or
pop
aaa
sub
fisttpll
aam
jge
and
mulb
mov
mov
pop
daa
inc
push
in
int3
mov
dec
add
and
xor
setne
add
pusha
sub
lcall
or
dec
xchg
pop
or
lock
sti
and
cmp
xor
add
je
out
sbb
aam
dec
jg
jb
pusha
test
sarl
lds
cwtl
jl
int
sahf
repz
sbb
add
movsb
loope
gs
mov
test
xor
lret
aaa
sub
shll
test
push
aaa
cmp
adc
sub
mov
icebp
popa
fistps
adc
xchg
xor
lods
fmul
xchg
arpl
push
lcall
xchg
pop
into
xchg
jmp
mov
jmp
cwtl
cmp
inc
inc
dec
mov
jp
jmp
sti
std
lahf
gs
cli
sbb
fbstp
gs
fs
lcall
mov
mov
mov
pop
scas
fisttps
mov
and
fwait
repnz
xchg
lock
das
out
sahf
rcrb
repz
loopne,pn
aas
fbld
jno
push
int
sbb
mov
fdivrs
mov
iret
add
and
repnz
pop
push
push
sarb
dec
clc
sub
or
xchg
dec
pop
xlat
rolb
pushf
sbb
cmp
and
clc
xlat
lahf
rorl
repnz
cmp
hlt
sbb
pop
ljmp
and
call
repnz
lock
pop
incl
jb
in
mov
mov
aas
pusha
sub
loope
pop
mov
fcmovu
or
sti
cwtl
test
xor
dec
cmp
xchg
outsb
iret
insl
inc
fwait
mov
adc
dec
in
mov
push
mov
gs
jo
add
ja
and
out
adc
inc
jge
pushf
pop
test
mov
scas
mov
lret
movsl
das
rcrb
shl
outsl
sahf
enter
jecxz
inc
call
adc
fcmovne
jne
jle
in
sti
int3
or
sbb
jle
jae
nop
ljmp
mov
dec
push
inc
mov
inc
fldcw
call
je
mov
leave
jmp
mov
add
mov
mov
jl
xchg
push
enter
xor
cmpb
mov
cmpsb
mov
pop
daa
jp
or
dec
xor
shlb
mov
inc
add
push
imul
bound
sub
jp
push
negb
add
dec
adc
push
or
call
testb
loope
idiv
mov
out
shrb
repnz
pop
push
outsb
mov
push
arpl
cmp
mov
mov
and
lock
jno
xor
fsubr
test
loop
mov
scas
mov
adcb
cs
into
inc
mov
shlb
adc
arpl
or
setp
lret
sub
ret
add
or
lret
xor
fildll
les
sar
mov
pop
stos
adc
push
sub
arpl
ret
hlt
rorb
sar
add
outsl
stc
loope
mov
xchg
pop
pop
push
sbb
push
inc
sbb
xchg
xor
sbbb
stos
cmp
xchg
and
add
std
flds
loop
pop
jge
fildl
inc
setl
mov
and
and
jle
mov
lea
jl
loope
add
insb
pop
imul
sbb
cmp
mov
mov
mov
fdivrs
cmpsb
xchg
mov
dec
mov
sbb
mov
das
data16
jmp
hlt
jp
sar
xchg
cwtl
jb
xor
push
imul
or
mov
mov
lret
add
inc
outsl
sub
imul
push
inc
jle,pt
jmp
imulb
insl
mov
loopne
fdivrs
in
daa
mov
mov
and
ljmp
sub
in
and
lds
lods
xor
mov
shlb
jmp
jmp
push
pop
cmp
fs
cli
test
test
test
js
sbb
loope
cmpsl
xor
sbb
sbb
les
or
xor
mov
in
xlat
lods
lods
mov
divl
into
in
pop
lret
hlt
outsl
lock
testl
jg
in
cwtl
sbb
jl
sub
dec
mov
iret
scas
test
popf
cmp
imul
dec
inc
stos
ja
int3
stc
cld
pop
sti
pop
push
jg
jns
jecxz
aam
xchg
jbe
mov
stc
jne
add
push
jmp
mov
cltd
add
icebp
push
out
fcomip
je
mov
shlb
testl
ret
mov
stc
outsl
mov
das
cli
dec
mov
aaa
jo
rorb
jbe
fadd
xor
xchg
inc
fwait
cld
sbb
cmp
popf
arpl
arpl
mov
aaa
les
clc
mov
out
out
jo
jmp
fsubrs
dec
outsb
jns
out
push
push
pop
sub
gs
sbb
test
dec
push
or
adc
lods
jne
cld
fstpt
sub
aad
mov
repz
xchg
push
xchg
xorl
and
lcall
into
inc
fisttpll
gs
cmp
lock
jo
dec
inc
iret
clc
jmp
imul
mov
sbb
mov
fsubrs
sbb
pop
into
lret
mov
test
mov
pop
mov
enter
mov
sbb
lahf
jae,pt
iret
adc
or
dec
aam
jbe
pop
rcr
std
cmp
sub
test
xchg
mov
lock
cmp
cltd
shl
roll
rclb
sub
xor
jg
fildll
sub
stos
mov
popf
push
mov
jecxz
add
jb
insl
jns
daa
imul
cmp
dec
xlat
repz
xlat
fucom
mov
fidivs
sub
push
or
lahf
cwtl
cld
push
daa
aaa
aam
inc
sbb
mov
sub
rorb
dec
mov
push
pop
les
rclb
lea
stos
test
dec
inc
mov
test
dec
fcomi
adc
mov
ss
es
outsb
jecxz
sub
adc
lcall
and
jl
mov
pushf
xchg
xor
mov
stos
dec
mov
orb
pop
and
xchg
add
mov
imul
cmp
mov
sarb
rcrb
pop
add
fdivr
gs
das
cs
frstor
mov
mov
popa
or
jl
addb
daa
imul
mov
imul
call
inc
int
outsl
sbb
xor
ror
bnd
into
xchg
into
loope
shrl
push
imulb
mov
ja
cmp
test
pusha
push
lcall
xchg
dec
fcom
pop
mov
rcll
cmp
ja
push
push
pop
sub
xchg
fistpl
push
and
out
fldcw
lods
movsb
jl
or
or
xchg
mov
pop
adc
insb
push
stos
adc
ret
in
sahf
push
stos
aad
ds
mov
pop
int3
lods
in
mov
dec
jmp
jnp
in
mov
cmp
jb
xchg
xor
ds
sbb
filds
ror
pop
bnd
sbb
mov
fidivrl
cmp
fsubl
mov
dec
pop
dec
les
or
add
adc
aas
or
push
mov
mov
jo
dec
jmp
lods
mov
add
es
xor
pop
insl
push
push
jne
dec
dec
jb
das
pop
adc
out
and
cmp
adc
scas
loopne
das
jae
mov
cmp
mov
sti
fstp
ret
and
dec
jno
add
test
cmpb
inc
lahf
sub
insl
push
test
mov
mov
xor
cs
push
inc
mov
jg
and
mov
in
mov
xor
mov
aam
jl
fs
push
xor
cmp
and
xchg
pop
cs
fldcw
cwtl
push
ss
xchg
out
pop
cli
enter
orl
lds
xchg
jge
sub
adc
mov
jb
xor
pop
out
mov
and
or
mov
mov
pop
push
sbbl
and
pop
fisubrs
into
dec
test
call
pop
dec
dec
inc
pop
jge
xor
sbb
mov
dec
pop
ret
popa
inc
sub
les
fcomip
mov
xchg
pop
mov
cltd
call
or
mov
fst
fdivrl
sbb
jo
mov
gs
pop
xchg
mov
xor
inc
ret
test
iret
test
test
pop
sub
sub
popa
sbb
imul
int
mov
imul
cmp
xor
sbb
push
out
fists
movsl
ds
pushf
mov
cmpsl
inc
mov
cld
mov
cmp
loop
mov
aam
jmp
jle
aas
pop
negl
dec
iret
repz
xor
add
cltd
add
outsb
call
dec
mov
pop
sti
hlt
hlt
std
lea
inc
mov
iret
xchg
and
cltd
dec
fwait
push
inc
pop
std
lcall
mov
mov
mov
dec
idivl
xor
rorb
push
pop
xlat
or
data16
ljmp
jmp
ret
sub
cmp
xor
shll
hlt
xor
pop
ret
cmp
icebp
cs
fs
xor
rol
popf
insb
push
ljmp
lahf
dec
imul
lock
mov
imul
int3
dec
mov
mov
push
neg
adc
mov
cli
dec
insl
add
mov
cmp
test
mov
jle
fcmovu
mov
aad
pop
mov
or
or
add
jno
test
les
sub
imul
dec
adc
ss
dec
incb
std
pop
add
outsl
sub
cmpsb
pop
dec
pop
out
mov
roll
cmpsl
mov
dec
pop
loope
push
lea
das
out
sub
push
push
inc
addr16
jns
in
loopne
insb
jb
pop
inc
shr
add
jle
shlb
adc
in
fdivs
daa
push
aad
inc
push
lret
cmpsl
out
xchg
clc
fcoml
ja
xor
shll
adc
xchg
cs
lcall
adc
mov
lret
jnp
scas
mov
aaa
mov
xor
fistl
push
ja
fimuls
cltd
or
lahf
fistpl
inc
int3
rcl
arpl
addr16
xchg
aas
imul
or
mov
adc
jmp
jns
mov
shll
mov
push
cwtl
pop
jmp
mov
adc
pusha
arpl
rol
aam
es
inc
out
inc
xorb
rcl
faddl
out
cmp
jle
or
enter
repnz
inc
xchg
stos
xchg
ficomps
lock
jp
or
aam
add
insb
dec
scas
sbb
cmp
cmc
push
sbbb
fwait
adc
insl
pop
inc
xor
fsts
add
adc
or
imul
jmp
sbb
add
subl
pop
stc
ret
add
add
cmp
xchg
xor
lods
out
fistl
repz
xchg
sub
add
int3
out
or
testb
ja
cmp
xor
cmp
rorl
shll
and
jmp
and
push
nop
push
sbb
out
repz
mov
mov
dec
mov
fcom
xchg
mov
mov
mov
inc
icebp
or
dec
imul
repnz
popa
lret
lock
inc
fcompl
lock
push
mov
jne
sbb
hlt
lods
jmp
outsl
incl
xor
je
xchg
cmp
pop
jecxz
aam
arpl
jecxz
aam
clc
movb
arpl
push
pushf
sbb
cmp
cmp
push
pop
jmp
hlt
pusha
cmp
cmp
aas
sbb
gs
sti
sbb
ja
scas
xorb
mov
sti
mov
ret
inc
pop
xchg
mov
divb
js
jb
add
sub
adc
push
aam
fisubl
fucomp
and
inc
or
cwtl
xchg
repz
sbb
out
pop
out
mov
add
leave
fucomp
popa
dec
sub
mov
cmpsb
test
jg
test
inc
cs
loope
add
cmpsb
mov
in
cmp
dec
pushf
jecxz
out
shlb
in
inc
inc
mov
push
jl
pushf
xor
stos
dec
imul
aad
scas
xor
mov
fldcw
scas
into
xchg
lahf
dec
xor
les
insb
cli
xor
dec
mov
aas
pusha
or
into
outsl
testb
add
test
std
ljmp
std
pop
dec
sub
out
data16
test
add
cmpsl
les
insb
sub
ljmp
push
xor
push
bound
mov
push
mov
add
sub
add
and
in
mov
int
inc
cmp
add
cmp
ret
call
xor
out
mov
mov
scas
loop
sub
je
jnp
xor
lods
fwait
cmp
pop
loop
imul
sub
jp
mov
pop
push
testl
mov
gs
jns
mov
ss
mov
fmull
xor
cld
sbb
shll
movsb
push
jp
out
jne
lods
in
or
lea
rcrb
mov
pop
mov
mov
ret
and
ret
test
ss
mov
je
mov
lds
add
cmp
pop
add
xchg
mov
mov
cmpsb
inc
jl
push
pop
xchg
jae
js
xor
fadds
insl
jp
mov
mov
out
dec
or
add
iret
jmp
loope
push
shlb
or
dec
mov
jb
and
shll
dec
add
imul
loop
mov
pop
call
push
jmp
mov
test
popa
xor
lret
inc
or
xor
inc
mov
mov
mov
mulb
pop
lcall
mov
outsb
jmp
mov
add
pusha
or
xor
sub
jae
mov
adc
out
add
mov
fimuls
or
lret
xor
sti
bound
out
lahf
jg
lahf
sub
mov
sbb
cmc
pop
sbb
test
xchg
shll
pop
mov
mov
das
dec
fnstsw
andl
cwtl
not
arpl
je
mov
je
pop
ret
movsl
or
jl
mov
ds
in
outsl
jp
cmp
jo
aas
punpcklwd
out
sub
out
cmpsb
pop
cmc
je
in
sbb
js
xor
inc
mov
xor
lcall
push
fsub
push
mov
mov
sarl
insl
xchg
cmpsl
sbb
in
scas
mov
into
aam
popf
sub
notb
ret
inc
add
fcmovbe
cmp
adc
xchg
icebp
adc
scas
hlt
test
and
jmp
mov
push
stos
std
fisttpll
insb
cmp
push
push
jg
sbb
out
mov
sub
jo
lcall
xor
cmp
pop
xchg
push
pusha
stos
aad
push
inc
cmp
es
hlt
pusha
test
rcl
sub
xchg
xchg
jno
push
rcr
out
add
xchg
add
std
pop
test
or
cltd
lock
test
push
xchg
pop
adc
test
adc
push
int
cmp
lret
in
mov
sarb
mov
lahf
inc
inc
mov
jnp
pop
xor
add
cmp
mov
sti
sahf
fcomi
xchg
jo
push
js
xchg
out
adc
faddl
xor
imul
xchg
arpl
push
or
jle
popl
cmpsb
lock
test
xchg
xor
sahf
jne
push
adc
sbb
lods
pop
enter
xchg
fiadds
fisttpll
leave
inc
adc
sbbb
adc
movsb
adc
cltd
xchg
mov
test
fdivr
add
adc
add
and
push
jb
pop
cltd
push
xor
sahf
lea
jl
mov
dec
cmpsl
arpl
cmp
mov
ret
jle
lds
aas
push
cmpl
inc
test
mov
call
imul
aam
sbb
xchg
andb
aas
sbb
dec
xchg
in
xor
and
shll
lods
pop
mov
cmp
adc
mov
xor
lods
mov
dec
sbb
inc
or
test
cld
mov
addl
subl
cmpsb
lahf
cwtl
rorb
jmp
and
sbb
add
das
movb
cmpsl
scas
or
push
cmc
xchg
xchg
fcmovu
stos
in
imul
cmp
fildll
mov
pop
aad
jo
and
mov
or
push
shr
mov
inc
add
shrl
repz
xor
cltd
adc
mov
cwtl
jo
test
pop
pop
or
pushf
dec
mov
pop
pop
jns
mov
lods
and
fsts
out
push
push
outsl
adc
dec
mov
cmp
fwait
sarb
push
push
mov
mov
lcall
adc
push
or
and
data16
and
cmpsb
dec
movsb
sahf
xor
mov
or
movsl
add
cwtl
or
sbb
mov
inc
push
xchg
insb
xor
arpl
js
dec
ret
lret
cmpsl
mov
jb
jae
inc
testb
sbb
mov
cltd
sub
mov
sub
xor
int3
in
loope
les
stos
adc
enter
loope
stos
dec
inc
sbb
push
inc
sbb
fdivrl
mov
sub
lods
leave
pushf
scas
jno
xchg
je
enter
leave
mov
outsl
jmp
ficoms
fs
mov
das
pop
scas
outsl
out
cmp
pop
xlat
dec
outsb
cli
jnp
mov
leave
and
ja
inc
arpl
xchg
lret
or
mov
jbe
xchg
clc
pusha
pop
outsb
int3
lahf
sub
and
push
push
ja
in
ret
cmp
adc
psubsw
arpl
jge
stos
imul
and
mov
xlat
cwtl
lds
sub
repnz
ds
lods
add
out
xchg
idivl
dec
roll
push
mov
sub
test
and
popf
imul
loope
jecxz
jae
or
sub
shl
subb
push
xchg
push
outsb
ds
fwait
lock
or
mov
adc
popa
inc
inc
dec
jnp
cmp
jb
mov
fsts
lds
add
lcall
xor
cltd
sahf
fwait
xchg
inc
jnp
xchg
pop
scas
hlt
sar
leave
dec
lds
loope
mov
sbb
fisttpll
je
xchg
xchg
or
mov
popa
mov
sub
adc
add
sti
jge
sub
cmpsl
xchg
adc
wbinvd
adc
movsb
xor
iret
pop
mov
test
mov
aad
les
xchg
sub
pop
push
iret
jl,pt
dec
sub
and
jg
repnz
jmp
testl
xlat
push
loope
add
out
pop
popa
pushf
add
adc
in
aam
push
fiadds
pop
mov
xchg
xlat
sub
lods
and
inc
and
scas
lods
and
mov
adc
ficomps
jge
pop
out
mov
pop
adc
jle
int
or
add
fisubs
mov
les
or
imul
lahf
loop
movsb
sub
loopne
stc
add
xchg
or
rcll
pop
dec
jae
jns
dec
fnop
xchg
adc
jl
cmp
or
sti
inc
dec
shll
cmpsl
mov
stos
call
jno
sarb
sub
push
inc
push
sbb
sti
subl
in
adc
mov
movb
jae
xor
ljmp
call
mov
loop
pushf
mov
xchg
ljmp
jg
mov
xchg
push
outsl
lock
add
mov
sub
fs
stos
mov
subb
lods
insb
add
loope
fldl
mov
mov
loop
cmp
xchg
xchg
push
xor
sbb
jnp
rcl
xor
mov
in
and
in
gs
xor
mov
xchg
jmp
int3
sbb
repz
and
add
subb
sub
cmp
out
lcall
push
rcrb
or
jecxz
push
mov
aam
ljmp
pop
pop
mov
shl
pop
pop
xchg
bound
lcall
lods
inc
sbb
push
icebp
dec
lods
les
cmp
jne
shll
bound
bound
adc
jge
mov
sbbb
stos
loopne
stos
std
mov
jmp
sbb
fnstenv
inc
ficoml
cmp
and
xchg
in
adc
inc
and
pop
push
rol
jl
pop
movsb
xor
pop
out
inc
enter
dec
inc
cltd
push
rclb
pusha
pop
cmp
fmulp
jb
es
out
popa
lods
scas
scas
or
into
mov
out
dec
adc
dec
in
jne
std
pop
cmp
les
adc
or
mov
push
clc
adcl
jp
jns
jmp
pop
addb
cmpsb
mov
mov
movsb
or
mov
in
gs
dec
xchg
adc
and
lods
add
rcrl
dec
lcall
mov
out
inc
inc
in
pop
in
push
out
shr
pop
fidivl
jle
inc
push
fstpt
ja
in
fwait
push
out
inc
adc
mov
pop
loope
pusha
out
fs
jle
mov
adc
popa
scas
or
leave
fiadds
shrl
push
test
pusha
out
mov
cli
mov
add
pop
pop
scas
push
popa
fcoms
inc
and
push
paddusb
mov
movsl
shll
imul
rolb
stos
and
lret
push
loop
nop
cmp
lret
aas
out
mov
lods
out
pushf
fstpt
sbb
jl
int3
inc
inc
xchg
lods
sub
pusha
dec
or
inc
xchg
icebp
mov
pop
jle
mov
out
insl
mov
mov
inc
push
call
jns
pop
or
jg
fcomip
push
xor
inc
scas
int3
lret
adc
mov
and
xchg
lods
push
mov
cmp
aad
pop
jbe
add
xor
mov
lock
imul
mov
movsl
mov
mov
movsb
xchg
or
and
std
in
jno
nop
xor
xchg
push
pop
lock
idiv
sbb
dec
out
imul
lret
lret
cmp
jb
into
cmp
cmpxchg
rorb
mov
push
cld
fists
xchg
lea
in
pop
ljmp
pop
in
rcll
aaa
aaa
outsl
sbb
dec
mov
icebp
xchg
ret
push
bound
xchg
cs
or
push
add
cmp
aam
ljmp
mov
daa
popf
push
aad
cmp
imul
scas
clc
xchg
cltd
stos
std
mov
inc
pop
cmp
adc
pushf
and
sbb
fwait
mov
or
outsb
dec
adc
sbb
test
aad
dec
adc
mov
pop
jns
das
adc
mov
push
jge
test
mov
and
sarl
xorl
push
arpl
pop
dec
test
add
test
lock
sbb
shr
arpl
mov
mov
push
cs
adc
mov
mov
inc
in
push
pop
sti
leave
inc
mov
lret
cmp
mov
push
xchg
sbb
jecxz
pop
or
mov
dec
sahf
xchg
mov
pushf
jns
loop
pavgb
ljmp
jp
pop
aad
dec
inc
push
mov
frndint
clc
hlt
mov
int
dec
and
and
pop
test
enter
inc
arpl
mov
mov
xor
mov
mov
scas
or
lahf
xor
nop
cmp
xchg
fists
jno
mov
or
or
jp
jmp
xchg
mov
in
push
in
add
ret
int3
mov
fsubs
and
pop
xor
and
int
mov
addr16
jle
xchg
and
mov
dec
outsl
jmp
or
es
mov
cmp
das
mov
out
daa
mov
add
rcll
movsb
and
in
imul
out
dec
sub
jg
sub
xchg
push
pop
stos
es
test
hlt
jno
ljmp
ljmp
inc
inc
cltd
add
rorl
add
push
shrl
aaa
mov
pop
mov
adc
pop
out
and
push
cmp
push
clc
mov
cmpsl
lods
andb
dec
fwait
mov
sahf
mov
int
scas
and
push
cwtl
xor
das
in
inc
ss
sti
call
daa
or
inc
push
or
test
jns
out
stc
jp
mov
or
les
xchg
pushf
rorb
inc
sub
jecxz
jge
jnp
hlt
je
shlb
lahf
clc
fwait
cmp
add
xor
stos
fsubr
xor
aaa
cltd
iret
in
xchg
adcb
and
jmp
call
and
adc
inc
jp
addr16
push
xchg
push
cltd
inc
xchg
in
jp
bound
btc
lods
xor
es
xlat
jg
xor
leave
mov
xor
int3
pop
test
inc
movsl
pop
jns
xor
stos
dec
add
dec
pop
lods
mov
xlat
jecxz
cmc
mov
push
pop
mov
xor
fcoms
adc
mov
xor
mov
hlt
gs
addr16
and
dec
les
jae
clc
mov
or
out
rorb
mov
jmp
and
mov
and
in
or
ucomiss
xchg
out
mov
dec
xchg
ret
sub
adc
mov
mov
push
rcll
lods
es
adc
jae
pop
cli
mov
nop
scas
mov
xchg
lods
adcl
stos
xlat
pop
push
xor
cmpsl
stos
fists
cmpl
push
or
or
mov
lret
repz
daa
mov
cwtl
jo
inc
pop
in
cmp
xchg
xor
daa
fs
push
dec
aad
lods
std
fwait
xchg
mov
insb
dec
mov
push
pop
dec
pop
sub
lcall
rorl
xor
mov
pop
adc
or
push
xchg
xchg
shl
sahf
popa
inc
pop
hlt
subl
pop
inc
sub
decl
mov
xor
xor
arpl
sub
jnp
and
imul
dec
shlb
xchg
hlt
mov
es
cwtl
push
icebp
sub
das
rcrl
call
je
pop
mov
mov
xchg
pop
dec
lcall
dec
cmp
pusha
jnp
push
pop
mov
push
sahf
clc
aad
adc
dec
js
push
push
sbb
pop
cld
mov
rolb
fs
sbb
adc
out
jno
jb
scas
mov
push
cmp
loop
dec
pop
aaa
jge
mov
andb
jnp
mov
stc
clc
dec
push
int
and
out
dec
push
jbe
test
fwait
pop
mov
mov
mov
sbb
rcrb
mov
pop
fs
data16
mov
cmp
sbb
stos
xor
scas
adc
jle
jb
inc
insb
mov
sub
sub
ret
and
or
icebp
sti
insb
push
popa
mov
loopne
sbb
xor
repz
inc
push
xchg
add
add
dec
lret
jae
shll
clc
mov
xorb
and
xor
mov
ret
mov
shlb
push
adc
int3
ljmp
scas
repnz
sub
stos
and
in
out
cmp
repz
adc
push
pop
aaa
mov
shll
sub
divb
shll
cmp
sbb
out
and
cli
in
mov
sahf
movsb
pop
push
xor
cli
sahf
and
xlat
es
add
aam
xchg
and
test
add
in
stc
loop
outsl
cli
jle
lcall
cli
aaa
xchg
pusha
cmp
outsb
sub
jo
sub
xor
xor
lcall
lods
push
pop
mov
cmpsl
add
subl
mov
das
jmp
lahf
pop
push
inc
arpl
and
fcmove
adc
push
mov
xor
fwait
cmp
aam
jp
jb
xchg
shll
ret
mov
cmc
xlat
push
call
cmp
pop
add
pop
pop
dec
aam
adc
mov
sarl
fnclex
jo
fnstcw
xchg
jecxz
jle
test
mov
mov
pop
sub
enter
ja
pop
movsl
fldenv
lret
ja
lds
test
es
pop
xchg
add
scas
fidivrl
sub
inc
mov
lods
icebp
daa
add
jb
mov
or
inc
daa
push
test
dec
in
scas
hlt
dec
jns
iret
and
ds
or
fistl
mov
jbe
pop
test
rorl
test
lds
push
mov
fiadds
vpunpcklbw
imul
and
mov
add
scas
mov
dec
aaa
jbe
sti
outsb
mov
movsb
ja
lods
aad
and
inc
or
pop
rorl
xchg
dec
popf
cli
popf
inc
lods
mov
mov
enter
mov
dec
sub
push
mov
lods
xor
lcall
popa
pop
push
add
xchg
push
xor
das
lret
and
ja
or
cwtl
lods
push
pop
inc
ficomps
inc
cmpsl
daa
mov
and
shrl
cmpsb
insb
cmp
fimuls
iret
and
icebp
jb
data16
cmp
adc
xchg
ja
add
sti
cld
sar
push
rorb
movsb
pop
pushf
aad
addr16
shr
xchg
pop
pavgw
and
imul
and
psubd
jmp
mov
pop
mov
imul
mov
aam
push
push
daa
mulb
adc
fwait
lahf
dec
sbb
add
inc
getsec
cmp
addr16
in
xor
pusha
add
paddusw
std
jo
cld
inc
inc
push
loop
pop
sub
xchg
mov
jb
fiaddl
mov
sbbl
rolb
xlat
gs
inc
lods
push
cli
mov
pop
push
pusha
jmp
jnp
dec
push
xor
jmp
mov
pop
lcall
dec
xchg
fnstsw
mov
adc
mov
xchg
imul
mov
add
xchg
cmc
add
lods
into
sub
stos
push
stos
pop
sub
xor
stos
jbe
bound
xchg
lods
mov
sbb
inc
in
dec
mov
mov
jmp
les
es
jg
jns
xchg
adc
push
and
dec
pop
daa
test
mov
sub
dec
push
push
push
xchg
or
adc
outsb
repz
call
mov
in
movsb
add
push
adcl
xchg
cmp
pushf
adc
jb
mov
pop
xchg
fs
fimuls
xchg
mov
jg
sbb
sarb
adc
push
inc
addb
or
or
jecxz
pop
ljmp
or
out
popa
pop
push
imul
mov
pop
inc
mov
lods
repz
aam
stc
cmp
xor
mov
hlt
mov
roll
pop
or
orb
mov
cld
push
add
xor
pop
xor
xor
jo
jecxz
jb
mov
ds
cld
movsb
jb
mov
push
push
pop
mov
rcr
adc
cli
int
pop
vpshufhw
dec
adc
hlt
repz
mov
push
push
ret
cmpsb
roll
pop
pop
lds
sahf
call
xor
mov
sbb
out
mov
icebp
test
inc
mov
cltd
cmp
in
lds
and
arpl
xchg
bound
roll
clc
aaa
dec
jns
sarb
int3
into
out
sub
bound
mov
iret
mov
push
pop
sub
scas
dec
pop
fs
xlat
mulb
loop
xchg
mov
into
pop
fwait
mov
int3
push
fmull
cmp
bswap
aaa
adc
lds
rcl
pop
enter
sbb
sub
adc
mov
adc
inc
mov
cmp
hlt
in
mov
nop
adc
xor
push
movsl
rcll
sub
daa
adc
or
jmp
and
jp
jb
or
mov
in
rol
notb
mov
test
sub
cmp
fcomps
sub
in
xchg
push
scas
mov
in
divl
xorl
js
sub
cmp
dec
add
repnz
and
repz
dec
mov
mov
push
insl
sahf
test
cld
cltd
jmp
popf
int
aas
ja
hlt
insb
or
push
mov
pushl
push
nop
sbb
outsb
adc
inc
push
xor
std
inc
dec
mov
jns
popa
das
and
rcrb
jno
dec
fcomps
mov
adc
dec
idivb
sbb
sahf
xor
lcall
cltd
stos
das
add
dec
mov
ret
out
mov
cmp
mov
jmp
cmpsl
mov
sub
and
adc
and
hlt
maskmovq
negl
push
popa
enter
sahf
cmp
xchg
sarl
xor
in
add
push
xchg
cwtl
in
sbb
add
cltd
mov
daa
xor
pop
mov
aam
adc
or
or
sahf
cmc
add
push
xchg
aam
lods
cs
mov
shr
push
dec
cmc
ss
sub
test
push
lahf
inc
push
mov
loopne
test
dec
mull
outsb
scas
pop
iret
icebp
cmp
scas
test
repnz
stos
arpl
xor
ja
ljmp
jne
aam
gs
int3
xor
mov
jne
push
popa
dec
or
jns
cmp
lea
push
lock
or
je
push
mov
mov
add
jp
push
pop
in
hlt
add
fnstsw
movsl
inc
pop
jmp
mov
mulb
daa
stos
fcoml
mov
xchg
fstp
in
sbbl
fs
sub
lret
push
lss
jmp
xor
push
fmuls
rcrl
imull
push
xor
sar
addl
sahf
in
scas
loopne
je
pop
inc
mov
xchg
into
jmp
dec
lcall
add
into
lahf
lods
pop
test
lods
ss
xor
sbb
mov
enter
xchg
ds
adc
xchg
inc
cmp
es
pop
leave
inc
repnz
or
xor
pusha
xor
shrl
jl
push
cltd
xor
xor
xchg
mull
pushf
dec
inc
xor
xchg
mov
insb
cmp
adcl
stos
xor
and
and
fs
xchg
or
negl
sbb
in
xor
iret
and
cwtl
shrl
add
mov
push
rcrb
push
xchg
cmp
cmp
insb
imul
mov
xchg
stos
inc
jl
mov
les
mov
inc
push
insb
pop
enter
mov
add
ret
push
jne
negb
adc
adc
pop
and
or
add
cli
jns
mov
movsb
les
sarl
out
stos
add
es
inc
stos
xchg
out
mov
sbb
push
mov
ret
roll
adc
fcomip
jecxz
rep
sub
pop
aad
sbbb
lock
pushf
addr16
mov
xor
sbbb
out
xor
lea
loopne
sbb
or
lahf
inc
mov
push
mov
jecxz
ds
dec
sub
push
icebp
xlat
les
int
daa
addr16
push
mov
inc
scas
dec
es
sub
push
cwtl
mov
mov
je
xchg
pusha
sbb
js
xchg
ret
test
lahf
bsf
sbb
or
and
fldenv
and
es
leave
int3
nop
sub
outsb
xchg
inc
sbb
lods
mov
loope
xlat
inc
addr16
add
sahf
out
sti
inc
adc
mov
outsb
mov
loop
jno
push
frstor
and
inc
movsb
pop
xchg
fs
mov
loop
sub
fcompl
pushf
shll
mov
add
lods
and
loop
lea
lds
stos
jmp
dec
insl
ret
insb
mov
mov
and
add
out
xor
dec
ss
aas
rolb
jne
push
aas
arpl
pop
push
repz
pop
lods
out
popa
adc
cltd
bound
cmpsb
sbb
mov
pop
mov
xchg
adc
mov
pop
inc
aaa
je
mov
adc
push
or
or
xlat
rcrb
cmc
testb
pop
lahf
sbb
sub
inc
das
cld
hlt
add
add
sub
sub
sbb
das
out
cmc
lods
aam
mov
mov
das
jae
inc
gs
test
sub
dec
sbb
inc
test
insb
xchg
jge
aas
jg
jle
xchg
in
mov
shrb
adc
or
mov
mov
shr
add
stc
fimuls
nop
bound
xor
jg
xorl
xor
pop
fnstsw
adcb
jno
test
sbb
fcoml
ss
ret
imul
dec
sub
mov
cltd
outsl
adc
aad
push
stc
fcomip
push
sbb
mov
pop
adc
arpl
ret
mov
leave
ljmp
fsubrp
jb
test
clc
fldcw
lahf
push
sbb
push
maxps
int3
push
fsubrs
in
imul
lcall
push
fs
jmp
rcrl
cs
add
incb
push
cld
aas
cmp
jnp
cli
clc
sub
pushf
in
pop
jl
test
rcl
xchg
in
cmp
mov
xchg
or
in
shl
sti
lods
dec
or
cltd
outsb
mov
push
and
cwtl
push
dec
iret
mov
add
imull
or
cmp
or
adc
aad
sbb
dec
fs
shlb
lret
or
mov
or
leave
or
and
daa
pop
mov
jle
pop
mov
or
aam
dec
mov
lahf
pop
repz
mov
adc
aad
xchg
hlt
arpl
cmp
xor
jle
sub
in
leave
jno
nop
adc
ret
cmp
pop
test
jle
imul
pop
loop
jp
cltd
mov
repz
sub
push
sub
inc
adc
scas
hlt
push
int
push
stos
imulb
imulb
add
shl
mov
pop
iret
scas
cmpsl
inc
cmp
imul
xor
std
popf
sub
lret
mov
mov
mov
xlat
jns
outsl
dec
or
adc
cmpl
mov
pop
xchg
sub
popf
xor
test
xchg
les
insl
inc
stos
ja
pop
scas
sub
je
push
jge
and
imul
hlt
jns
sbb
mov
and
cld
and
std
test
pushf
fcompl
pop
subl
ret
inc
push
sbb
jge
ret
jb
dec
and
popa
adc
fnstcw
xchg
ss
shrl
mov
sub
jp
loop
cmp
stc
hlt
ret
pop
repnz
push
mov
shlb
adc
jle
leave
lods
mov
push
adc
lds
jmp
sub
add
ret
outsb
mov
loope
inc
adc
push
sbb
jl
stos
pop
std
or
test
dec
sqrtps
imul
fiadds
sarb
add
xchg
or
pop
aam
lods
scas
cmc
pop
cmc
mov
adc
je
bnd
aad
fs
das
jae
outsl
ljmp
push
lahf
pop
xchg
add
mov
imul
xchg
fbstp
and
mov
cmpsb
ss
int
mov
xor
push
dec
or
int3
mov
into
pop
orl
sub
lds
lea
insb
fs
insb
xchg
test
dec
push
icebp
push
mov
xchg
xor
cmp
xchg
mov
enter
pop
push
test
fsubr
cmp
enter
addb
dec
dec
ja
stc
popa
mov
jo
movsw
loop
or
loopne
insb
in
bt
fwait
jbe
cs
outsl
jbe
inc
push
in
pop
mov
or
adc
in
dec
jo
jnp
jo
enter
shl
dec
mov
push
lods
jle
sub
lods
mov
dec
pop
shll
jp
cmp
aad
test
rcrb
daa
add
and
movsl
dec
xchg
and
mov
rclb
sub
sub
ror
aas
adc
dec
ljmp
xchg
cmp
roll
dec
stos
add
jo
dec
hlt
or
mov
jns
ffreep
fsubrs
cld
jno
pop
popf
pop
and
add
sbb
cmp
jle
movsb
xchg
dec
push
xorb
ljmp
ret
jo
dec
lahf
test
pushl
cmc
imul
cmp
dec
dec
xchg
push
ds
lods
outsb
cld
pop
int
ret
inc
cmpsb
scas
rcll
jl
mov
ja
mov
jo
mul
testl
rorl
popa
mov
test
push
add
shlb
push
dec
jnp
push
adc
ljmp
jecxz
xchg
xchg
call
fistpl
ret
cmc
xchg
jb
iret
mov
sbb
jge
andb
int
test
inc
mov
ljmp
add
aas
into
xchg
shl
ficoml
dec
int
mov
vpcmpeqb
mov
dec
dec
xchg
mov
add
sub
mov
sbb
fmuls
dec
jo
jp
popf
inc
mov
adc
fwait
ljmp
fimull
jb
iret
sahf
cs
mov
jno
mov
mov
jnp
cmpsb
fnstsw
mov
mov
dec
pop
cmpsl
daa
and
xor
data16
cwtl
push
arpl
jecxz
adc
mov
adc
xchg
repnz
ljmp
and
mov
cltd
sub
mov
jo
scas
add
mov
cmp
in
pop
data16
ret
dec
pop
iret
rolb
out
out
push
rclb
pop
lcall
mov
cmpsb
jbe
int3
xchg
test
pop
outsb
xor
dec
fistpll
call
jmp
leave
cmp
xchg
sub
jb
xor
addr16
dec
es
jmp
inc
int
jp
mov
idivb
cmp
rclb
ljmp
pushf
loop
dec
ja
mov
jae
mov
movsb
adc
clc
sub
add
dec
data16
ja
jg
fs
cmp
inc
mov
inc
cli
sbb
push
js
cmp
aas
stc
loopne
fwait
mov
bound
or
and
loop
addl
lss
jge
cltd
lds
jmp
decl
sar
sub
cmp
xchg
cltd
and
mov
lock
mov
mov
sbb
jle
mov
rcrb
insl
push
mov
popa
inc
push
and
lret
xor
pop
stos
push
mulb
or
adc
adc
pop
das
cmp
gs
inc
and
das
inc
mov
mov
pop
push
cmp
movsb
cmc
inc
sbb
or
xor
jns
test
mov
sbb
addr16
fnstcw
shrl
xchg
popa
scas
pop
pusha
adc
jl
test
out
bound
push
dec
cmp
and
add
lods
das
dec
test
jbe
aaa
mov
xchg
es
mov
or
in
fwait
mov
sahf
xlat
xchg
mov
cmp
rorb
mov
cmp
jno
aaa
in
sbb
in
dec
nop
mov
xor
mov
js
push
popf
dec
pop
loopne
or
cmp
lock
int3
dec
push
lret
dec
dec
pop
push
mov
rcrb
inc
hlt
in
mov
lea
out
imul
mov
js
mov
adc
aad
add
or
lret
ss
mov
mov
sub
in
or
bound
fiadds
testl
stos
fstpl
inc
inc
inc
dec
jle
test
sti
addr16
inc
movsb
aas
loop
arpl
in
es
pop
subb
mov
push
add
test
out
xchg
pop
ss
out
cmc
rcl
cmpsl
psubsw
cmp
imul
mov
inc
or
xchg
or
in
repnz
cs
xor
push
insl
xchg
ljmp
and
mov
andl
dec
cmp
mov
sub
loopne
pop
leave
mov
loop
or
aad
imull
mov
test
out
jb
test
sub
push
movsl
cli
cmp
mov
mov
xor
cmp
push
sub
pop
xchg
jg
sub
cmp
test
push
cmp
inc
hlt
mov
sbb
xor
adc
sub
add
and
cs
xchg
cmp
pop
into
sbb
or
in
pop
or
cmp
ljmp
sti
movsl
test
mov
sti
lods
push
jge
xchg
outsb
push
es
xchg
cli
addb
xchg
ds
pop
sti
mov
adc
decl
iret
mov
ljmp
pop
addb
inc
add
jecxz
inc
mov
test
pop
out
pushf
and
inc
lea
loope
and
lcall
addr16
cmp
bound
mov
jbe
movsl
aad
inc
aas
mov
out
mov
lea
clc
rorl
movsl
pop
cmc
sub
sar
in
or
aad
lock
jecxz
adc
incl
es
mov
subb
repnz
and
bound
ljmp
xchg
andb
mov
jbe
dec
repnz
cwtl
data16
jne
or
dec
clc
lahf
cmp
inc
imul
in
xchg
xchg
stos
sub
jno
xor
adc
lods
aam
mov
sub
loop
out
mov
repz
negl
jge
stc
pop
cltd
mul
pusha
dec
out
insb
xor
push
movsb
mov
adc
jge
sbb
notb
push
xchg
adc
xor
insl
mov
decl
mov
cmc
mov
mov
push
inc
mov
jle
dec
pop
pop
lods
add
arpl
mov
fstps
inc
mov
sahf
aas
xor
je
aad
push
jnp
mov
and
dec
loopne
lea
sub
or
push
sbb
js
push
and
decb
dec
jo
psrlq
scas
loopne
mov
sbb
cmpb
lcall
jle
inc
cwtl
and
mov
xlat
in
pushf
inc
pop
inc
into
hlt
dec
xchg
fisubs
lea
test
test
mov
mov
add
push
xchg
lea
mov
inc
dec
and
xchg
adc
sbb
cmp
repnz
pop
lcall
pop
inc
test
or
ja
int
push
bound
hlt
jbe
cld
dec
adc
push
and
jge
cltd
push
loop
or
jle
sub
xor
jecxz
sar
inc
cmpsl
or
rorl
or
repnz
and
out
test
fstl
pop
icebp
fs
cmp
xchg
aam
inc
adc
enter
xchg
repz
cmp
xorb
jno
jge
push
into
adc
ljmp
or
aaa
cmpsl
add
repnz
insb
in
orl
ljmp
mov
call
cld
cmp
jb
cs
inc
push
adc
into
sbb
fstpt
cmp
outsl
inc
pop
cli
sbb
dec
cmpsb
xor
out
mov
data16
add
sub
dec
aam
push
call
je
movsb
hlt
dec
xchg
mov
pusha
mov
mov
jmp
pop
and
and
dec
cmp
jnp
pop
das
lret
mov
enter
add
add
jge
pop
and
int
jo
add
lods
mov
into
mov
ljmp
popf
cmc
shlb
cld
and
mov
les
sahf
push
std
decb
in
push
pusha
into
movsl
lret
mov
popf
push
sbb
dec
call
jg
and
fincstp
dec
sar
xor
jbe
add
mov
jb
in
pop
push
repz
adc
xchg
mov
adc
mov
and
or
fcom
nop
xor
mov
pop
sbb
jl
fs
mov
in
mov
sbbl
aaa
in
daa
ret
iret
cmc
mov
in
ret
mov
sub
jmp
rcrl
js
dec
cmp
ljmp
cmpsb
lods
mov
mov
adc
sub
fwait
daa
push
imul
daa
sbb
test
lret
dec
adc
test
cwtd
pop
pop
leave
or
mov
nop
jecxz
int
push
insl
test
mov
jle
and
jg
xchg
insl
aas
aaa
sbb
ret
mov
mov
adc
sti
add
fcmovnbe
fistpll
inc
int
xor
dec
push
cmc
hlt
out
add
test
ljmp
lret
mov
pop
mov
outsl
fbld
nop
xchg
cmp
lods
outsl
fnstenv
pop
cli
fwait
add
movsl
shlb
mov
enter
sbbl
std
lods
push
in
push
out
sub
sti
inc
fadds
enter
std
jl
pop
pop
call
out
jecxz
aaa
and
jbe
rclb
xchg
jecxz
aad
mov
fisubl
or
xchg
mov
and
stos
jl
mov
dec
in
rcr
mov
sub
lods
hlt
leave
push
in
ror
mov
push
push
jo
push
jne
shl
in
int
adc
xchg
mov
data16
cmp
ret
jbe
out
xor
push
inc
scas
lds
popf
ret
aaa
ret
add
imul
fwait
inc
lret
aaa
cmp
int3
mov
imul
sbb
bound
jne
xor
lods
daa
inc
cmp
xchg
lahf
push
fsubrl
sbb
mov
mov
sub
push
popa
xlat
adc
jge
stos
pop
movups
mov
mov
popf
iret
sbbb
jge
mull
xor
cmp
and
jns
call
xor
inc
mov
int3
clc
jo
sbb
sbb
clc
xor
cmp
sahf
or
outsl
pop
sbb
movsb
push
int
xlat
outsl
icebp
pop
mov
pop
mov
dec
loopne
dec
out
movsb
stc
mov
mov
addr16
inc
stos
jg
in
mov
lea
jae
ljmp
frstor
hlt
push
sub
push
mov
les
clc
adc
xchg
mov
jmp
ret
lods
scas
mov
ret
adc
outsb
xor
stc
pusha
dec
dec
mov
je
or
xchg
push
pop
fidivrs
add
fsubr
pop
movsb
push
pop
inc
mov
out
ret
pop
repnz
jae
or
test
pusha
imul
pop
mov
mov
xchg
fidivrl
into
inc
jle
mov
ja
and
mov
movsb
inc
ljmp
mov
fsubrl
mov
aam
insl
out
mov
sbb
push
lea
fsubrs
sbb
inc
cltd
ret
xorb
cmp
ficompl
pushf
mov
push
test
cmp
xchg
stos
scas
sbb
mov
scas
mov
or
push
push
lret
add
scas
sbb
stos
fcomi
sbb
enter
push
xchg
cwtl
or
ss
mov
and
sbb
sub
mov
aad
pop
push
leave
adc
jp
das
mov
add
jp
and
inc
rcrl
out
jecxz
cmc
push
in
dec
push
jnp
jnp
rclb
pop
push
jmp
mov
std
shll
xchg
and
mov
mov
popa
cmp
jmp
dec
mov
hlt
inc
mov
cmc
outsl
mov
add
jecxz
jne
or
pop
aas
ret
subl
add
out
lahf
repnz
pop
adc
adc
pushf
xchg
shrb
inc
movsl
and
or
jecxz
jae
nop
fisubl
inc
jnp
adc
mov
addr16
inc
sti
ds
or
push
push
sbb
js
cmp
or
push
or
movsl
mov
xchg
add
inc
inc
bound
or
aaa
sbb
lds
test
sti
test
cmp
lods
mov
push
cltd
das
dec
inc
inc
fwait
jle
mov
in
ret
and
cmp
int3
mov
js
dec
stos
shl
push
push
or
test
hlt
addl
xor
xor
pop
cmp
jb
loopne
xchg
add
mov
fs
or
xchg
popf
cld
out
xor
pop
fnstcw
push
fbstp
dec
adc
inc
lret
scas
outsb
shrl
out
and
sub
sub
movsb
scas
stos
jmp
xchg
cmp
xchg
xor
dec
cmpsb
bound
rorl
dec
jno
ficompl
addl
sub
add
cmp
mov
and
dec
and
hlt
lods
adc
add
dec
pop
mov
movsb
mov
fsubl
lods
sbb
popf
fists
and
ljmp
jns
subl
or
mov
fsubrp
jno
mov
cltd
pop
mov
call
js
mov
mov
fiaddl
inc
sub
sbb
xchg
mov
mov
jne
adc
out
pusha
cmp
into
jns
cmp
xlat
rcr
test
lock
push
cwtl
cmpsl
mov
push
ljmp
jo
or
add
push
cmp
pop
lea
jecxz
inc
mov
rorl
in
and
ja
rcl
out
mov
inc
push
filds
mov
cwtl
mov
or
dec
mov
dec
inc
fidivs
aaa
mov
pop
jns
and
push
incb
movsb
ljmp
in
dec
push
lret
add
roll
test
adc
jno
pop
test
nop
push
jb
std
sti
add
and
stc
push
aas
and
repnz
jle
in
jecxz
push
add
sub
out
arpl
mov
mov
popf
or
pop
sub
push
mov
mov
mov
jnp
into
in
xchg
and
lret
jne
fistps
dec
cmpsb
divl
jl
jp
add
cld
je
lea
sub
and
ds
add
sbb
sbb
negb
mov
lods
sbb
cmpsl
test
clc
sbb
push
imul
sub
and
add
xchg
cmp
push
sub
inc
xchg
jbe
cmp
test
es
das
in
inc
bnd
mov
add
cli
sar
repnz
fnsave
les
jmp
out
pop
movsl
and
idiv
sbb
jg
sti
ret
inc
aaa
test
sbb
mov
fcomp
mov
xorw
fstpt
int3
cmp
ss
push
or
arpl
push
loop
mov
fidivrs
push
enter
addr16
dec
call
rorl
loopne
cwtl
lret
cmc
scas
lahf
iret
sub
xchg
rolb
mov
or
test
xor
aaa
xchg
sub
test
inc
shll
jle
inc
cld
mov
sub
rclb
fcoms
jg
sahf
pop
jge
mov
dec
out
jle
or
dec
mov
sti
cltd
je
xor
inc
jbe
jmp
cs
icebp
or
sbb
repnz
and
sbb
movl
stc
inc
cltd
out
out
in
iret
mov
sbbb
std
lock
jne
iret
mov
xchg
shrl
insb
das
and
and
lods
bound
mov
xchg
gs
mov
mov
mov
sub
cmp
adc
mov
jae
or
mov
cmc
leave
mov
gs
push
pop
aam
notl
xchg
fsubr
jae
cmp
outsl
test
inc
sbb
hlt
mov
ret
xchg
popl
leave
jno
test
mov
xlat
xchg
fimull
lcall
cs
push
aas
jbe
in
and
mov
adc
shll
ljmp
add
loop
fdivrl
roll
xchg
mov
int
dec
xor
mov
mov
dec
ljmp
hlt
gs
push
sub
fstpt
aad
xchg
out
shll
mov
xchg
fdivrs
ror
xchg
add
sub
push
rorl
adc
and
jg
outsl
xor
addr16
das
mov
fadds
add
in
mov
xchg
addr16
pop
mov
push
mov
and
inc
imul
sub
ljmp
dec
int3
mov
sbbb
push
lds
leave
outsl
mov
xchg
dec
outsl
enter
pushf
rclb
sbb
sub
scas
xchg
xchg
clc
cmp
gs
and
dec
xlat
iret
ret
mov
push
insb
and
push
xor
mov
inc
popa
daa
repnz
sbb
insb
outsb
sbb
into
push
out
lcall
test
mov
pop
test
mov
daa
lods
pop
sub
pop
dec
xchg
dec
push
or
jle
pop
lds
xchg
jno
test
mov
and
mov
jns
dec
mov
test
push
push
xchg
mov
sbb
inc
mov
jo
sbb
mov
mov
add
call
shr
lahf
jnp
lds
stc
lahf
mov
xor
loop
sbb
mov
jecxz
inc
test
jecxz
mov
lds
xor
xchg
xor
popa
rclb
cmp
or
dec
sub
push
pop
jbe
mov
sbb
idivl
ds
pop
test
mov
test
jnp
or
cmp
dec
addb
cld
xlat
sbb
test
dec
and
test
xlat
mov
scas
mov
dec
popf
or
sbbl
xor
sbb
ret
push
mov
jb
and
adc
push
or
out
repz
xor
jbe
out
cli
pop
sub
and
stc
jmp
mov
pusha
adc
cltd
fsubrl
push
cmp
xchg
xor
cmpsl
and
push
pop
call
mov
jae
and
push
or
or
inc
daa
dec
sbb
pop
jo
sti
adc
add
xor
cmp
sub
pushf
push
mov
xchg
cmc
sbb
icebp
pop
push
ja
lods
lea
pavgb
mov
cmp
push
cs
dec
mov
xchg
ret
lahf
or
cmp
daa
cmpsb
pop
out
push
or
adc
clc
cmp
dec
jle
mov
jbe
pusha
push
jmp
pop
cli
xchg
inc
mov
mov
cmpsb
inc
pop
jbe
leave
jmp
out
cmp
into
xor
push
lock
ljmp
in
iret
movsb
cmc
sahf
jl,pn
mov
rcrb
dec
xchg
xor
inc
xor
ret
xchg
pop
or
and
nop
data16
int
int
out
icebp
fstpl
mov
mov
pop
popa
push
lret
mov
jnp
xor
dec
dec
jne
jle
js
fstps
adc
adc
push
out
jge
lea
dec
in
dec
rcrb
cmpsb
sbb
pop
out
leave
cmp
jmp
sbb
add
es
push
push
jne
shrl
lds
jle
loopne
cld
xchg
mov
jmp
and
scas
pushf
adc
leave
and
les
nop
xor
xor
movb
push
pusha
cld
jl
nop
clc
cltd
aad
lret
cli
mov
sub
jecxz
iret
cmpb
sub
mov
in
sti
adc
adc
andb
mov
aad
push
inc
push
adc
push
sbb
movsb
adc
or
in
aad
sbb
in
in
sbb
jmp
daa
xor
cmpb
dec
push
adc
cmp
ficomps
rcll
int
inc
adc
and
push
pushf
jns
rcrb
adc
xchg
sarb
jmp
sbb
hlt
adc
pop
mov
mov
lds
les
xor
push
test
dec
sub
ds
jo
cs
xchg
les
in
leave
mov
call
xor
mov
dec
mov
in
loopne
into
lea
xchg
shlb
xor
mov
adc
push
push
inc
mov
add
aam
sub
popa
fnstenv
cwtl
cwtl
lods
mov
hlt
inc
xchg
popf
push
repnz
sub
jmp
insl
push
push
sbb
addr16
mov
fsubs
mov
ret
mov
notl
mov
ret
dec
aam
sti
lcall
loope
add
sbb
lcall
test
mov
arpl
cmc
mov
mov
lret
insl
cmp
cli
and
les
test
mov
xchg
int
popa
loopne
out
inc
xchg
adc
clc
cli
int3
xchg
les
cmp
int
jo
adc
push
imul
stc
jecxz
mov
pop
out
unpcklps
iret
push
push
dec
enter
icebp
push
xor
jo
pop
aad
xor
insb
cmp
clc
cwtl
lahf
loope
mov
or
pop
push
mov
push
addr16
shll
pop
mov
into
vmovapd
js
lock
jl
rcrl
shll
mov
fmuls
or
cmp
jl
push
or
cld
cmpsb
jp
int3
xor
xor
add
push
ret
mov
call
jbe
jnp
inc
test
je
add
mov
add
sub
test
and
mov
cmp
leave
icebp
cmp
xchg
and
xor
and
mov
aam
into
push
dec
mov
adc
mov
push
sti
jmp
pop
mov
add
xchg
flds
dec
outsb
xorl
xchg
mov
jge
ljmp
add
sub
push
test
sbb
cwtl
adcl
sub
sbb
xchg
jge
movsb
cs
loop
shll
push
sub
sub
push
jbe
je
addr16
or
outsb
cmp
mov
pop
cmpsl
push
adc
sub
mov
mov
movsb
and
inc
mov
push
sub
loop
imul
out
mov
scas
add
lds
fcoms
les
lock
out
sub
paddusb
push
add
push
jecxz
daa
ja
pop
xchg
cld
dec
xor
xor
mov
jge
jne
and
lods
xor
test
pop
sbb
xchg
loope
loopne
cmc
jno
mov
aad
mov
aas
jb
iret
pop
aam
pop
pop
stc
jb
xchg
or
int3
aaa
and
mov
xor
push
scas
pop
inc
jne
push
dec
mov
mov
pop
jl
adc
ljmp
and
divb
loopne
sbb
xchg
jo
jns
mov
mov
into
push
xchg
testb
into
ss
inc
mov
out
push
inc
mov
out
stos
dec
ds
fiaddl
inc
ljmp
add
clc
mov
jge
dec
insl
aad
xor
inc
dec
push
sub
cmp
cld
add
xchg
fdivrl
test
and
sub
in
cmpsb
pusha
and
imul
out
shrl
dec
sbb
fildll
fisttpl
aam
dec
push
mov
mov
dec
xchg
sbb
in
cmp
ljmp
subl
lds
push
jge
mov
jle
xchg
negb
push
dec
xchg
and
sbb
dec
and
jno
daa
xchg
mov
stc
das
js
dec
push
sbb
add
dec
les
xchg
push
out
add
pop
stos
lock
idivl
mov
leave
outsb
scas
cs
paddq
pop
cmp
push
in
mov
jp
popa
je
cltd
mov
jmp
jmp
xor
rcrb
cli
jo
inc
cmp
sub
jmp
aas
mov
add
mov
les
int3
mov
mov
mov
sub
pop
cmp
std
out
cmp
movsl
mov
adc
xchg
mov
stos
xor
insb
jne
mov
mov
ds
scas
jo
out
lret
cmc
sbb
psrlw
lds
leave
lods
out
sub
call
test
nop
arpl
xlat
dec
out
sbb
push
pop
xchg
add
fisubs
in
jnp
ja
test
fdiv
push
mov
aas
fwait
and
scas
jns
fwait
int3
mov
hlt
loopne
cmp
push
popa
dec
mov
lea
dec
push
imul
xor
push
hlt
sub
push
popf
push
pushf
pusha
cwtl
fsubp
daa
and
mov
loope
xchg
add
faddl
xchg
jg
js
push
aad
push
ja
and
and
pop
jae
mov
jecxz
scas
test
push
aaa
inc
adc
and
ficompl
or
xor
or
stos
mov
cmpsb
mov
xchg
push
mov
mov
push
push
in
fs
inc
inc
adc
lahf
jnp
nop
rorb
jo
jnp
adc
sub
xor
leave
mov
shlb
fisubrs
mov
sti
and
jnp
outsb
mov
jno
nop
mov
mov
jbe
lds
dec
outsb
jp
fidivs
xchg
cmp
aaa
bound
inc
mov
cs
pusha
cwtl
mov
imul
test
int3
mov
xchg
cmp
mov
pop
loop
sti
xorl
in
rcll
stc
fs
pop
fcos
lcall
xchg
into
push
sbb
call
mov
jb
in
pop
scas
das
cmc
jo
mov
call
cmpsl
push
push
pop
pop
add
shr
inc
paddb
test
push
setg
movsl
dec
gs
and
jp
push
fidivrl
sbb
cmpsb
mov
dec
pusha
aam
push
lcall
and
popa
enter
fwait
jnp
jmp
test
cmp
loopne
lcall
cltd
out
mov
popa
movl
push
rcll
lods
sbb
aam
inc
push
fs
iret
movsb
aas
ja
push
dec
jb
andl
or
cmp
test
mov
popa
loopne
sbb
pushf
pop
movsl
in
add
aaa
notl
push
mov
xor
je
ja
xorl
imul
sub
sbb
xor
adc
dec
cld
lds
xchg
ficoms
movl
bound
pop
jmp
and
and
outsb
adc
mov
fstps
mov
jg
adc
dec
test
int
repz
scas
mov
addl
mov
fucomip
xchg
hlt
and
aad
std
lock
ret
pop
sub
mov
js
mov
sbbb
out
mov
test
add
xchg
outsb
negb
loop
fdivp
jecxz
push
ds
and
sub
sub
ret
or
imul
add
and
lods
jmp
js
inc
push
push
mov
inc
and
cmp
inc
int
mov
sub
jmp
stc
cmpsb
dec
xor
inc
cmpb
cs
mov
jg
xchg
inc
popa
mov
pop
into
shl
push
push
sbb
push
pop
xor
mul
lds
adc
xor
ror
aas
inc
inc
les
add
inc
mov
mov
add
dec
pop
sbb
push
cmp
testb
mov
mov
movsl
jmp
add
out
push
and
clc
push
fwait
push
lcall
popf
inc
inc
jo
add
ljmp
cwtl
test
addb
sarl
outsb
cmp
jnp
dec
test
mov
nop
rorb
jns
fs
icebp
mov
cltd
mov
push
push
je
jbe
pop
inc
out
rorl
lret
test
movzbl
push
lret
sbb
movsl
sbb
das
and
sub
pop
cmpsb
add
rcl
fwait
dec
mov
insl
in
jecxz
fisttpl
rclb
add
jp
outsb
jne
test
xchg
addl
fsubl
xchg
imul
mov
mov
outsl
sbb
mov
subl
jb
dec
mov
and
jle
xlat
jae
imul
and
cld
nop
xchg
jno
fmul
loopne
and
push
pop
movsl
and
pop
in
xchg
dec
xchg
lret
out
add
roll
bound
and
movsl
ss
aad
mov
dec
iret
mov
sarb
dec
xchg
out
adc
mov
pusha
push
and
pop
jge
mov
sbb
jnp
fs
sub
mov
jmp
fmuls
frstor
sub
xor
lret
repz
rcrb
adc
enter
sbb
lods
or
scas
lahf
jge
or
pop
aam
dec
add
insl
fucomi
add
and
jno
cmp
cs
jbe
test
mov
ficompl
outsl
sbb
sub
dec
add
repz
xchg
lods
jle
loopne
in
cwtl
hlt
ljmp
fisttps
sbb
fnstenv
js
xchg
cmp
cmp
negb
aad
xchg
push
mov
imul
and
inc
dec
or
jge
mov
and
and
ljmp
popf
xchg
mov
aam
push
mov
jnp
cmp
aad
bound
lods
adc
pop
mov
mov
fwait
outsl
mov
cmc
or
jp
shlb
or
adc
mov
xstore-rng
cmpsl
pop
mull
das
scas
daa
push
jg
movsb
inc
lock
push
ficomps
push
stc
cmp
pop
enter
fistpll
aam
or
sarb
mov
jmp
xchg
jle
std
repz
cmp
neg
jnp
push
cmp
fsubrp
xlat
push
jg
rorb
in
inc
push
fsubrl
bound
xor
cld
cs
xchg
cmp
mov
push
sbb
push
xchg
pop
pop
cmp
xchg
inc
sbb
sub
out
and
aas
jo
jnp
pop
cli
mov
jns
push
inc
or
out
fistl
or
cld
xor
loop
jle
es
xor
popa
adc
inc
cmp
test
sub
cwtl
and
and
sub
xchg
bnd
nop
dec
enter
in
pop
jmp
mov
mov
xchg
dec
dec
stc
cltd
mov
mov
mov
add
or
xchg
inc
cld
daa
cwtl
pusha
ljmp
call
xchg
js
pop
test
fdivrs
enter
leave
loopne
and
xor
cmp
loopne
scas
in
iret
push
lret
lds
lock
ret
or
add
dec
sbb
ret
fcmovnbe
and
mov
and
inc
sbb
mov
pop
push
and
push
test
pop
and
push
push
sbb
sub
popa
cli
fwait
popa
bound
fwait
ret
or
sti
pop
push
pop
ja
sbb
mov
test
xchg
push
push
scas
xchg
xchg
mov
mov
mov
sti
mov
iret
xchg
pop
cmpsb
imul
push
mov
pop
inc
inc
in
ret
js
jge
cmp
aas
pop
repz
add
stc
cmp
subb
stos
out
iret
in
pushf
sub
outsl
sub
mov
outsb
insb
jg
movsl
por
mov
imul
adc
out
movsb
mov
and
push
inc
dec
lea
adc
add
cmp
out
xor
cld
icebp
out
loopne
ss
sahf
xor
mov
lock
shlb
jge
or
shl
sar
pop
divl
jge
dec
inc
orl
inc
ficomps
mov
sbb
mov
lcall
inc
lret
test
imul
push
pushf
xchg
leave
or
test
fwait
sbb
xchg
loopne
dec
inc
addb
add
ds
inc
mov
arpl
sahf
loopne
scas
inc
out
out
outsb
insl
cwtl
sbb
into
cmp
std
in
mov
lds
fldl
in
xchg
pop
imul
movsl
xchg
sbb
push
dec
lds
int3
cli
jle
push
adc
jg
iret
pop
sub
sub
xchg
roll
filds
dec
into
fbld
ljmp
dec
pop
cmp
xchg
mov
icebp
xor
pop
int3
push
xor
movsl
or
or
sub
les
hlt
repz
mov
out
adc
popf
in
cmp
cld
dec
pop
je
inc
pop
jne
jmp
in
and
scas
and
sbb
inc
cmp
cltd
pop
data16
sarl
ds
divb
or
or
or
pop
cld
xor
ret
dec
and
mov
lods
cmc
call
inc
test
push
mov
enter
cmp
outsl
pop
andl
and
notb
mov
sbb
hlt
mov
fsubrl
lock
in
loopne
add
and
insb
rcll
lea
push
mov
pop
out
shll
xchg
xor
sub
push
sbb
adc
in
enter
cmp
sbbl
lds
sub
aaa
gs
fistpll
nop
push
or
loope
push
adc
and
lcall
push
lock
cmc
push
dec
dec
scas
sti
cmpsl
xchg
dec
xor
cmc
ss
mov
xorl
mov
cmpb
cmp
ret
mov
push
mov
jle
popf
in
lea
mov
fnsave
mov
lea
mov
sub
lret
pop
sub
fs
out
stos
fcoml
push
stos
pop
popf
add
cwtl
loope
inc
push
jbe
sub
sbbb
ljmp
test
int
dec
rcll
popa
xchg
xchg
aad
fbstp
cmp
out
lock
mov
sbb
dec
pusha
or
adc
xchg
jge
push
adc
notl
and
mov
mov
aam
dec
hlt
aas
outsb
movsb
shlb
add
outsl
jnp
pop
sub
in
and
xor
inc
ljmp
js
mov
sub
inc
std
jnp
pop
insb
mov
mov
rclb
popf
mov
fsubrl
mov
hlt
je
scas
and
mov
fs
lds
sarb
insl
testb
dec
cmp
sbb
pop
scas
xchg
cli
add
jne
jl
sbb
cmp
inc
adc
iret
xchg
lods
sub
arpl
jmp
fwait
out
sbb
fnstcw
cmpsb
jp
insl
jo
push
pop
pop
incb
and
sti
out
call
jne
jle
jmp
or
cmpsb
enter
dec
aaa
fidivl
mov
push
pop
cmc
jmp
mov
mov
adc
scas
xchg
pop
mov
jle
into
ja
mov
mov
push
aad
cmc
jbe
dec
outsl
sbb
adc
xchg
push
xor
dec
and
dec
rcrb
push
mov
testb
repnz
stos
imul
sbbb
mov
sbb
imul
pop
inc
pop
fs
or
bnd
adc
dec
movsl
lret
test
and
lock
mov
out
or
inc
stos
xchg
nop
lock
or
xchg
or
or
sub
addl
lods
repnz
sahf
mov
stos
imul
or
or
jb
xchg
xor
ss
out
cli
icebp
test
fs
xchg
jbe
bound
xchg
leave
ret
lea
dec
jb
mov
js
ret
shlb
inc
int3
xchg
mov
jle
enter
in
scas
xor
dec
mov
push
sbb
hlt
pop
pusha
fsubrl
cmp
add
push
inc
call
dec
xchg
push
pop
int3
out
add
inc
icebp
mov
or
fisttps
mov
push
pop
popa
cmpsb
mull
cltd
call
shrb
xchg
lret
xchg
fnstsw
push
xchg
scas
or
dec
outsb
enterw
std
test
lcall
aam
push
rclb
ljmp
movsb
mov
adc
adc
scas
ret
mov
push
adc
mov
sbb
scas
push
mov
mov
sbb
cmpsb
out
das
or
test
es
aaa
cs
pop
mov
out
insl
cmc
adc
mov
fnstsw
adc
addr16
or
adc
roll
pop
bound
mov
cmc
ljmp
cmp
std
fstpt
jnp
push
lret
and
jecxz
adc
shlb
sub
add
dec
test
imul
rcll
mov
sub
jae
fdiv
outsl
repnz
add
add
ss
mov
push
xchg
imul
mull
dec
and
ja
lret
outsb
xchg
fidivrl
sbb
push
fdivrp
test
test
aam
xor
pop
xchg
xchg
out
cltd
pusha
push
push
push
aaa
push
mov
and
push
insb
arpl
xchg
int3
cmp
mov
aas
ret
or
push
dec
stos
and
push
inc
cmpsb
jnp
and
or
xchg
and
std
lock
sub
lcall
icebp
out
pop
pop
mov
es
or
or
and
jbe
pop
loopne
je
cltd
push
adc
repnz
insl
insb
inc
sbb
rorl
shrb
jnp
push
outsb
xor
push
mov
push
notb
or
test
stos
jecxz
pushf
in
jo
add
scas
call
or
insl
sbbl
ret
adc
test
dec
mov
sub
mov
pop
push
and
es
add
andl
icebp
dec
jecxz
lahf
lret
push
adc
jge
gs
push
aad
inc
dec
fsts
js
stos
pop
cli
lcall
fidivs
leave
xchg
fwait
sub
inc
lock
push
mov
pushl
ret
mov
and
cld
jp
nop
jle
pushf
cmp
test
fstps
stc
pop
add
push
cmp
add
dec
or
dec
sbb
fcoms
jns
dec
mov
stc
push
mov
stos
popaw
testb
in
scas
sti
dec
sbb
movsb
das
adc
enter
test
mov
sti
ds
lock
jg
sbb
cltd
sbb
imul
push
leave
sub
call
push
sub
scas
push
aas
inc
jne
push
jne
push
and
mov
jb
es
negl
xchg
hlt
mov
outsb
xor
jns
jecxz
pop
and
insl
mov
shll
test
stos
lods
jne
sbb
insl
loope
mov
push
pop
ja
xchg
xchg
test
push
mov
popa
pop
xchg
and
mov
or
adc
ja
or
mov
xor
popf
pop
outsl
sti
loope
mov
ret
inc
inc
jnp
lods
xor
push
stc
push
xchg
das
mov
xor
mov
xchg
mov
mov
jnp
test
fimuls
dec
aas
call
inc
icebp
inc
pusha
push
adc
imul
ds
loopne
push
mov
mov
es
fucomip
insb
mov
out
inc
fidivrs
pop
inc
js
lret
and
out
push
mov
pop
pop
fwait
in
adc
cmpsl
jns
gs
stos
push
adc
pop
cmp
inc
push
shrl
and
cmpsb
repz
mov
xor
loope
xchg
fiaddl
mov
dec
pop
outsl
push
and
subl
lahf
dec
outsb
sub
or
mov
ffree
lret
xchg
jp
imul
push
xchg
out
scas
stc
mov
test
orb
xor
inc
ljmp
loope
pop
icebp
notb
xor
xor
pushf
jmp
fs
or
shll
fsub
rcrl
inc
das
add
dec
jmp
pop
gs
aas
or
out
out
push
mov
icebp
gs
pop
mov
cltd
sub
or
mov
sahf
cmpsb
push
stc
xor
neg
fwait
sbb
lcall
xor
xor
sbb
ja
arpl
mov
mov
pop
mov
btc
mov
add
inc
ret
hlt
out
nopl
jp
inc
in
aas
cmpsb
xchg
neg
xchg
dec
dec
jb
push
loop
shrb
push
inc
cmp
or
aas
sbb
or
sbb
sub
out
mov
into
imul
fwait
mov
xchg
pushw
enter
jp
lods
pop
jnp
sub
mov
adc
loopne
ficomps
lea
outsb
out
xor
dec
lods
or
add
sbb
scas
and
pop
or
mov
sahf
sahf
sbb
jb
test
or
push
push
sub
jp
outsb
xchg
fbld
movsb
rcl
gs
or
sarl
sbb
out
mov
insb
int
jg
jbe
cmc
adc
pop
mulb
fcoms
xor
ficomps
test
inc
mov
xchg
cwtl
es
pop
clc
out
add
in
insl
pop
inc
loop
imul
jno
ja
movsl
rcl
fsts
push
cmp
stc
push
sub
fiadds
inc
lret
push
shlb
and
fldcw
xlat
mov
shlb
iret
pop
sti
fldt
aas
xchg
sbb
mov
push
and
mov
lds
fistpl
aaa
leave
popf
push
clc
in
inc
jg
mov
test
jmp
xor
push
sub
jmp
dec
xor
sub
mov
adc
mov
les
imul
scas
sbb
clc
sbb
and
pop
cwtl
rcrb
dec
adc
shlb
xchg
movsl
inc
mov
jmp
icebp
xor
sub
mov
mov
lret
sub
ljmp
and
mov
in
cmp
dec
inc
mov
sbb
jmp
sahf
lret
fistl
out
les
or
or
cs
shl
sub
enter
or
ds
push
sub
dec
add
jge
sub
psubq
repz
dec
bswap
or
jecxz
xchg
imul
outsb
out
cs
call
xor
mov
push
pop
add
daa
shrl
les
pop
xorl
cltd
xchg
outsb
mov
test
add
in
inc
inc
stos
cltd
loopne
and
or
dec
aad
fistl
lret
sbb
dec
adc
add
shr
ficoms
gs
or
imulb
xchg
dec
and
cmp
mov
lahf
out
sub
jge
popf
mov
jbe
cld
push
sbb
fisttps
loop
jge
mov
xchg
adc
sub
fldl
inc
fstl
mov
mov
mov
sbb
cmpb
xchg
into
or
and
sub
pop
adc
push
mov
enter
add
push
adc
add
stc
adc
sbb
adc
loope
jne
inc
push
mov
ds
pop
inc
in
loop
je
xor
insb
mov
xchg
add
out
nop
in
jns
pop
push
int3
cmp
xchg
popf
imul
ret
out
pop
mov
or
xchg
add
pushf
jmp
dec
jnp
ficoms
sbb
cmp
mov
lds
cld
mov
cmp
add
jne
mov
or
test
and
cmc
lcall
shrb
stos
popa
in
jb
dec
mov
ljmp
repnz
push
ret
add
push
push
test
mov
mov
push
push
xor
je
mov
adc
push
adc
jb
push
jo
into
dec
rolb
xor
pop
adc
fs
sbb
lock
adc
les
mov
aaa
sub
les
mov
mov
mov
jp
inc
push
shlb
fiadds
fcmovnb
mov
sbb
push
inc
adc
push
loop
cwtl
inc
je
cmpps
inc
cmp
add
xchg
jle
add
inc
xchg
fmul
insb
xchg
out
cmc
repnz
cmp
or
adc
arpl
and
jge
les
lahf
add
add
pop
xor
push
pop
mov
aad
push
mov
xlat
cmp
cltd
sti
movaps
adc
js
add
dec
jmp
cld
mov
mov
incl
pop
sbb
aam
das
pop
iret
mov
fistl
push
mov
test
ljmp
ljmp
push
mov
pop
nop
in
mov
cmpsl
or
testb
iret
xchg
paddd
enter
jns
fcmovnb
movsb
xchg
js
stc
mov
push
inc
in
movsl
push
das
fwait
pusha
jnp
movsl
sub
pop
jb
outsl
sub
push
imul
adc
xchg
test
mov
rclb
xor
lahf
shlb
adc
xor
push
adcl
mov
push
adc
mov
jb
jnp
mov
push
into
les
adc
scas
jo
icebp
sub
prefetch
and
cmpsb
int
mov
sbb
pop
xor
adc
pop
rolb
out
jne
jb
cmp
and
hlt
mov
leave
jecxz
lock
stos
mov
cmp
sbb
out
fwait
or
push
bound
dec
aaa
shll
sub
mov
popf
out
xor
mov
dec
out
popf
jne
movsb
xchg
mov
push
xor
cmc
inc
stc
adcl
adc
scas
mov
mov
jb
fwait
inc
pop
shll
les
clc
hlt
es
movsl
pop
add
in
popf
dec
je
mov
inc
or
sbb
daa
lret
dec
mov
jbe
xchg
lcall
mov
lcall
sub
mov
lock
clc
jp
add
mov
sbb
je
js
cmp
call
lods
shll
and
lea
rol
popf
loop
and
cmp
data16
mov
clc
inc
lea
lods
testb
cmc
mov
ret
dec
dec
pop
xchg
push
lods
das
in
xchg
movsb
icebp
sub
adc
imul
push
and
push
pop
add
ss
aam
jb
pop
push
push
mov
aad
out
xor
push
rol
shlb
test
or
inc
clc
popa
rcrl
inc
nop
out
xchg
mov
gs
mov
dec
pop
mov
push
xor
into
sub
lds
and
sbb
test
xchg
pusha
mov
cmp
icebp
lcall
adc
ljmp
mov
fwait
mov
rorl
ret
dec
xchg
mov
dec
pop
and
push
sbb
jge
inc
sbb
cmpsl
xchg
push
pop
shrl
in
pop
in
pushf
out
shrb
lds
fwait
lock
push
xchg
adc
mov
sarl
mov
fs
fisubrs
adcb
jno
cli
lods
insb
mov
jne
xor
dec
shrb
pushf
lcall
pop
jle
lods
xchg
xor
out
or
lret
jmp
inc
dec
insb
or
mov
sub
xchg
fisubs
xchg
shr
stos
out
addb
lret
adc
leave
jg
test
pop
mov
adc
lcall
xor
inc
pop
mov
shr
mov
mov
dec
adc
jecxz
pop
pop
cmc
les
nop
addl
mov
int
test
pop
cmc
notl
sti
cmp
push
mov
int
sub
mov
jo
mov
mov
lahf
lcall
adc
out
movsb
sbb
xor
and
dec
lahf
fbld
inc
enter
ret
lock
mov
repz
xor
lods
lcall
sub
ja
pop
cwtl
pop
inc
leave
movsb
hlt
rcr
les
in
cmp
arpl
sbb
sub
loope
shr
xchg
negl
pop
pop
mov
push
xor
mov
adc
imul
mov
xor
out
mov
scas
ss
mov
mov
dec
jp
sbb
sub
mov
add
cmp
sub
clc
or
mov
dec
xor
and
mov
lock
mov
test
fistl
into
adc
dec
hlt
sbb
iret
addr16
leave
sbb
lret
test
stc
push
je
mov
jl
out
loop
fsubrl
sbb
jle
popa
ljmp
js
push
pop
jg
leave
and
insb
outsl
cmc
pop
cmp
adc
lret
xchg
xchg
aam
ret
dec
push
mov
mov
loop
repz
ret
sub
xor
xchg
adcl
mov
sbb
fwait
xchg
scas
and
inc
add
out
push
hlt
sub
xchg
je
enter
mov
jmp
popf
lret
lea
pop
sub
repz
fisttpll
popa
sub
push
dec
and
sbb
or
gs
sti
fsin
xor
ret
outsb
xchg
cmc
mov
pop
mov
lock
pop
add
inc
dec
out
pop
xchg
jns
fdivrp
dec
repnz
arpl
xchg
rcr
mov
repnz
insl
jle
scas
mov
imul
and
push
shlb
orb
call
mov
movsb
jb
pop
cmp
lea
xchg
jnp
daa
clc
cmp
lds
out
into
sbb
mov
mov
xchg
dec
icebp
xchg
sub
enter
mov
mov
es
fwait
stos
inc
inc
push
and
jg
lret
fldl
sub
sub
je
call
imul
mov
fwait
or
push
jae
dec
mov
push
and
lret
inc
cmp
popf
xor
sub
loope
popl
and
scas
ja
cli
std
sub
mov
fisubrl
xchg
incl
emms
cli
pop
dec
sub
repz
push
mov
in
arpl
shrb
out
adc
mov
mov
scas
lods
das
xor
shrb
adc
push
int3
jecxz
cmp
call
stos
sahf
bound
test
pop
cltd
xor
dec
inc
jle
xchg
ss
dec
inc
fdivr
aaa
icebp
neg
xchg
lods
sarb
out
mov
pusha
push
xchg
gs
push
dec
mov
mov
add
push
cltd
push
xchg
fisubs
pop
test
sub
fs
int
bswap
adc
mov
push
out
push
mov
ffree
gs
inc
push
jnp
lret
rep
jne
sub
mov
push
addb
add
jle
push
or
lods
jp
repnz
pop
dec
insb
fcoms
push
sub
jecxz
mov
sahf
lds
dec
push
sbb
sub
pushf
in
pop
sbb
adc
enter
pop
adc
sub
mov
ss
mov
flds
insl
jo
shrl
dec
pop
rolb
adc
adc
test
cld
and
cmp
fisttpl
pop
faddl
in
mov
cli
lahf
loopne
mov
sbb
ljmp
pop
add
xor
mov
fs
and
std
pop
stos
xchg
mov
mov
lds
bound
inc
mov
outsb
pop
imulb
push
cmp
pop
dec
jnp
repnz
mov
jecxz
mov
add
or
or
movsl
adc
bound
dec
cmp
je
xor
out
push
leave
fiaddl
dec
sti
fdivrs
pop
std
fcomps
rcrl
movb
push
cltd
mov
adc
js
mov
mov
ror
dec
or
popa
and
mov
fdivs
add
cmpsb
xchg
xor
or
mov
add
and
mov
xor
lods
cld
xor
aam
fs
inc
sbb
mov
jns
call
inc
inc
and
lcall
test
ds
pusha
outsb
fiaddl
cmpsl
dec
adc
jge
push
lret
cmp
dec
sub
and
lcall
add
fcomps
fwait
je
push
cmp
xchg
dec
sti
pop
scas
xchg
mov
rcrl
lock
dec
jp
xchg
daa
mov
sub
sub
and
jge
push
mov
sub
push
lcall
stos
jbe
and
cs
pop
enter
cmpsl
jnp
mov
or
icebp
mov
and
xchg
imul
pop
aas
xchg
fistps
cmc
cmp
cmp
stc
xchg
andb
sbb
insl
imul
mov
push
call
mov
push
lret
and
xor
cmp
pushf
push
lret
mov
mov
and
es
test
adc
sbb
or
adc
scas
in
neg
hlt
cmp
popa
out
cmpsl
pop
call
push
jno
pop
and
pop
hlt
in
ja
push
sbb
add
out
xchg
pop
dec
rcr
dec
out
or
and
shlb
lock
mov
rorb
push
push
std
popf
adc
push
mov
jae
cs
xlat
loop
mov
fwait
add
pop
or
out
inc
cmp
xor
mov
mov
push
cmp
mov
ret
scas
dec
dec
lret
mov
mov
add
bsr
cmpsb
outsl
add
or
fwait
into
xchg
aaa
fiaddl
dec
adcb
ljmp
sti
lock
fiadds
sti
dec
xor
sub
enter
sbb
cmp
in
sub
loopne
add
jae
dec
and
outsb
icebp
test
xorb
cld
andl
pop
push
inc
in
xor
out
mov
movsb
jge
jg
mov
cli
mov
mov
push
lcall
mov
sbb
insb
aaa
ret
test
xor
sbb
cli
outsl
lods
test
jp
out
mov
pop
pop
enter
pmaddwd
cmp
insb
xchg
scas
sub
inc
dec
xor
movsl
icebp
add
cmp
data16
mov
jmp
adc
fs
mov
xchg
and
pop
sar
and
sbb
shll
sub
scas
roll
loop
and
mov
jae
stos
imull
jl
jg
push
fidivs
inc
adc
add
out
mov
xchg
leave
repz
in
sbb
xchg
shrb
and
pushl
mov
mov
movsb
les
or
decb
mov
lahf
pop
lea
mov
imul
test
cli
ja
in
ds
cwtl
leave
push
adc
fstps
pop
out
sbb
insl
pop
sub
push
repnz
out
int
cwtl
js
adcl
or
repz
sti
insl
xchg
and
pop
push
mov
add
fsubrs
lods
cmc
cmp
push
bound
xor
and
in
xlat
pop
dec
hlt
pop
sbb
lods
mov
mov
pop
push
dec
mov
or
push
stos
xor
mov
stos
push
test
mov
stos
jle
or
pop
stos
xchg
loope
outsl
ljmp
inc
and
nop
xchg
jae
std
add
cs
js
or
ret
mov
pop
xor
dec
add
pop
iret
cmp
mov
push
rcl
in
lods
call
mov
repnz
xchg
and
fs
not
mov
xor
popa
xchg
outsl
mov
mov
cmc
mov
dec
mov
sub
jl
enterw
add
popf
add
call
push
dec
cmp
cmp
cmp
or
mov
data16
add
jns
mov
mov
mov
notb
mov
cs
dec
push
sbb
jne
arpl
fwait
icebp
insb
add
ljmp
push
xor
test
lods
dec
mov
cwtl
movl
scas
jb
leave
jle
scas
inc
lds
add
sahf
push
mov
cmpsl
repnz
push
int3
cmp
shlb
in
and
mov
aas
in
jge
repnz
loop
iret
mov
jo
dec
add
in
push
nop
add
bound
add
jmp
aas
dec
xchg
enter
ret
and
sub
or
fs
jecxz
pop
mov
lret
scas
insb
mov
mov
pop
add
sbb
imul
jns
out
xchg
mov
aad
in
stos
shrb
test
lcall
or
inc
rorb
fbld
in
ss
mov
mov
xor
push
stos
test
push
xchg
pop
jb
jb
push
xor
fnsave
xor
imulb
lods
pusha
xor
call
pusha
in
stos
mov
scas
jge
xchg
or
xor
xchg
dec
or
and
xchg
andl
dec
push
or
add
cld
ret
rclb
push
leave
jne
dec
shr
or
dec
sub
mov
fidivs
adc
sub
aad
fsub
xor
cwtl
sub
insb
loopne
adc
ret
mov
or
sub
push
adc
leave
lret
sub
test
jbe
xlat
adc
inc
mov
adc
dec
push
movsb
mov
xor
popf
dec
cld
mov
gs
xor
push
rolb
jno
and
xchg
lds
test
jg
mov
cwtl
int
jmp
jns
std
mov
pop
out
sub
fsubl
sub
xchg
or
jp
add
inc
add
push
xor
mov
push
and
xchg
fdivrs
mov
stos
dec
xchg
push
push
mov
sbb
mov
sub
negb
popf
iret
dec
data16
cmp
sbb
outsb
add
adc
mov
sahf
push
out
mov
jp
shlb
cmp
lcall
xchg
out
mov
daa
shlb
outsb
roll
mov
pusha
in
mov
xchg
xsaves
push
rcr
jmp
xor
sbb
ss
fcmovnbe
push
cmpsb
aas
mov
call
neg
loope
jmp
movsl
js
cmp
add
aas
push
es
mov
cli
inc
and
xlat
stc
fisttpl
pop
cwtl
adc
fldl
add
movsb
loop
mov
daa
cmp
pop
cmp
ds
mov
imul
insl
scas
lea
xchg
lock
ja
testb
xchg
std
scas
xchg
stc
add
xchg
sub
mov
xchg
mov
je
test
sub
loope
test
or
ret
push
fs
inc
popf
inc
sti
enter
and
or
push
dec
cmp
inc
or
xchg
les
sub
push
lea
cmp
mov
jp
pushf
leave
mov
pop
jg
xchg
daa
and
sbb
fld
subb
xchg
stos
push
fcoml
pushf
shlb
lock
pop
jle
imul
xor
jmp
js
cmp
daa
decl
shlb
xor
mov
inc
es
outsb
add
mov
jb
repz
nop
push
mov
or
stos
jg
inc
mov
sbb
shlb
test
in
pop
loop
sub
loope
orl
cmp
dec
hlt
pop
xchg
push
loope
out
notl
sbb
sub
xchg
lahf
pusha
lods
bound
adc
lods
inc
out
adc
imul
and
cli
enter
inc
testl
loopne
imul
mov
and
insl
push
xor
xchg
push
out
mov
adc
and
and
cld
and
sar
xor
sbb
cli
push
jne
push
hlt
cmp
lcall
int3
lods
push
inc
shll
out
pop
cmpl
cmp
subb
and
inc
or
sub
jp
pop
push
testl
cli
cmp
out
ret
mov
faddl
push
and
pop
jne
xor
adc
dec
imul
lock
mov
sbb
mov
add
mov
sbb
mov
and
xchg
mov
insl
mov
pop
dec
mov
inc
xor
out
or
pop
lods
in
mov
mov
je
or
mov
enter
add
xor
mov
mov
adc
xchg
push
outsl
rolb
mov
ret
sub
cmp
mov
inc
ficoms
leave
mov
scas
add
mov
in
mov
sub
call
push
jns
dec
mov
sbb
dec
sub
lods
int
mov
leave
leave
and
int3
icebp
je
dec
mov
inc
push
out
jp
out
lock
lods
ret
jl
xchg
fildl
insb
dec
ljmp
ds
xchg
dec
insl
dec
pop
mov
inc
sub
cmp
movsb
insl
mov
fsub
bound
bound
add
outsb
dec
div
add
push
dec
mov
xor
sbb
std
mov
pop
xor
sub
lret
out
adc
push
sbbl
dec
mov
sbb
inc
pop
into
shrl
xchg
dec
int3
sub
fmuls
imul
ret
and
ret
sub
dec
fistpl
les
imul
and
repz
sbb
daa
cwtl
push
loopne
insb
shl
push
mov
xlat
fcompl
cmpsl
xor
ds
pop
xchg
out
or
ljmp
sub
push
mov
shll
fsub
push
test
add
inc
hlt
and
and
imul
and
mov
or
outsl
xchg
xorl
test
jge
addr16
aam
cmp
pop
sub
push
cmp
mov
or
cmp
lea
cmp
movsl
jae
pushl
dec
inc
add
cmp
mov
cwtl
outsl
pop
xor
pop
inc
push
in
jge
fisttpl
adcl
scas
fwait
xor
dec
fst
cmp
jbe
js
add
adc
aad
mov
inc
xor
ret
rclb
movsb
js
es
lahf
pop
dec
pop
pop
push
pop
mov
ror
mov
enter
push
dec
or
adc
outsb
test
sbb
jbe
push
out
cwtl
and
pusha
in
fistl
mov
add
cmp
lods
push
sbb
cmp
mov
sub
pop
insb
xchg
aas
in
pop
jmp
mov
pop
dec
cmp
mov
jno
mov
jo
dec
test
lahf
repnz
pushf
mov
jne
cmp
cwtl
ss
xor
xor
ljmp
rolb
mov
fistpl
int
into
pop
push
testb
sub
jbe
int
and
jae
pop
push
jno
cli
popa
and
xor
insb
mov
jg
mov
add
addr16
lcall
fsubr
ja
inc
orb
push
mov
cmpl
mov
inc
add
fsubrl
push
push
cltd
mov
xchg
jmp
aad
nop
xchg
cmp
fildl
repnz
js
rorl
insb
mov
iret
cs
icebp
pop
mov
adc
push
add
shl
push
fmul
das
xchg
ss
and
loop
ss
call
call
sbb
jno
or
roll
jl
clc
inc
or
pop
mov
daa
cli
into
data16
dec
imul
roll
sti
and
ficomps
sbb
cmp
stc
xor
mov
icebp
pop
jl
xor
ljmp
pop
jns
xorl
cmp
call
or
arpl
int
cmpsl
iret
sbb
and
pop
sbb
mov
inc
pop
int
fsubl
or
inc
or
xor
leave
xchg
jae
mov
test
push
in
sarl
aaa
out
dec
leave
aad
mov
jno
xchg
ss
mov
add
jbe
cmc
outsl
or
fbstp
sub
in
xor
mov
sbb
aas
sub
bound
icebp
mov
mov
stos
xor
pop
icebp
movsl
mov
outsl
jle
adc
add
mov
sub
aad
mov
out
sub
and
pushl
jge
test
cmp
dec
sbb
lcall
scas
shlb
stos
in
or
dec
adc
sub
sbb
inc
pop
cs
addr16
dec
gs
mov
inc
or
xchg
xor
pop
fcomi
push
into
pop
mov
pop
xchg
addr16
rcll
mov
adc
add
xor
data16
xor
push
sahf
mov
dec
shl
adc
xchg
adc
fidivl
jo
sbb
or
loop
jl
inc
and
mov
stc
sub
xor
or
cwtl
data16
xchg
cmp
shll
pop
frstor
ss
mov
call
inc
jl
dec
mov
pop
mov
int3
cmpsb
mov
mov
or
mov
dec
das
hlt
xchg
pop
lahf
daa
cwtl
xchg
mov
pushf
mov
sub
inc
sub
add
jg
and
ret
jmp
mov
je
and
rep
pusha
popa
rcr
cmpsl
filds
xchg
mov
lahf
cmp
inc
lret
add
jge
dec
shll
sub
sub
jbe
xorb
je
inc
mov
pop
dec
xor
fisubrs
xlat
jecxz
xchg
and
xor
fadd
xchg
andl
lea
dec
xchg
xchg
into
sub
test
xchg
mov
cmp
cmp
dec
cli
loop
pop
sbb
cmc
xchg
sar
daa
out
xlat
popa
arpl
fcoms
gs
add
xor
xchg
lock
push
and
or
bound
out
loope
repnz
enter
sbb
ret
add
fiadds
mov
data16
pop
and
fsin
test
or
rcrb
ss
dec
cli
push
jg
push
mov
repz
test
and
scas
mov
pop
xor
push
int
add
je
mov
dec
shr
jge
andl
je
leave
mov
adc
cmp
fistpl
pushf
repnz
jmp
or
inc
push
xchg
dec
xor
fistps
mov
and
clc
lods
dec
std
movl
mov
inc
mov
push
mov
hlt
test
rcl
xchg
insl
dec
inc
fsubrp
adc
sti
dec
adc
adc
xor
mov
sbb
mov
insl
sbb
test
dec
or
ljmp
sub
inc
xor
mov
jae
test
push
adc
imul
cmp
sbbb
iret
test
imul
sbb
cmp
push
push
shl
fwait
negb
xor
inc
cwtl
pop
sub
sbb
int
repnz
out
xchg
gs
cmp
in
fwait
cmpsb
sbb
cmpl
dec
rcll
mov
adc
in
ss
pusha
sub
xchg
sbb
lret
sbb
icebp
add
cmp
enter
jno
pushf
sti
and
jno
imul
xchg
push
xor
mov
je
fs
mov
pop
test
lret
mov
xchg
frstpm(287
gs
add
xchg
inc
inc
xor
adc
xor
cwtl
lret
inc
mov
jae
and
sbb
shrl
sbb
adc
cmp
xor
jl
jmp
inc
cmp
in
test
testl
pop
das
pop
pushf
inc
jbe
mov
cmpsl
mov
mov
push
push
mov
cwtl
sub
jnp
xchg
or
sbb
push
xor
in
jecxz
dec
adc
and
inc
fsts
addr16
mov
rorb
or
ja
xlat
xchg
mov
push
arpl
cmc
xlat
lret
push
lret
pusha
enter
jae
lahf
cli
jg
xchg
pop
inc
icebp
ljmp
inc
test
notl
mov
insl
ds
mov
nop
icebp
push
stc
enter
std
insb
icebp
repz
out
int
xlat
lahf
pop
clc
sub
xchg
das
mov
xchg
test
pop
xor
movsb
pop
push
cs
push
inc
sahf
pop
mov
test
stos
sbbl
enter
mov
add
stos
sbb
es
in
mov
adc
or
mov
outsb
aaa
nop
ja
push
inc
iret
jl
xchg
negb
jecxz
pop
js
filds
sbb
push
int
sbb
in
mov
xorl
call
cwtl
aaa
inc
addr16
ret
mov
and
jnp
and
outsb
sub
or
xchg
jo
mov
test
imul
imul
jg
xlat
sbb
in
icebp
adcb
mov
fisttps
rclb
rolb
lahf
inc
mov
enter
mov
cli
clc
dec
ret
lods
push
xchg
out
and
orb
mov
mov
repz
cli
imul
lods
sub
vpsrlq
popa
sbb
add
add
inc
jge
fisubrs
loop
insl
adc
dec
sub
mov
stos
stc
ret
xor
jmp
ds
cmp
and
xchg
jmp
fisttpl
mov
xchg
rcrl
and
sbb
xlat
push
and
mov
pop
popf
push
aam
lea
sub
jp
or
inc
cmp
shrb
ret
in
shr
add
jns
and
movsb
loopne
cmpsl
aaa
xchg
mov
outsb
add
mov
xchg
test
hlt
push
xchg
out
mov
sub
sub
popa
xchg
adc
aam
jb
jp
push
out
test
inc
aad
add
jb
cmp
dec
xor
cmp
fimull
sbb
dec
add
sub
fnstcw
inc
test
gs
xchg
inc
movsb
fstpl
scas
or
std
cmpsb
bndstx
iret
lods
sbb
lret
add
dec
dec
adc
and
sbb
dec
cltd
loope
rorl
adc
ljmp
cmp
int3
add
xor
push
jne
insl
stos
sti
mov
outsb
stos
jae
adc
std
std
cmp
inc
xor
mov
xor
in
out
sub
int3
inc
loope
jmp
cmpsb
jb
dec
loop
movsl
jae
jbe
mov
jb
and
fistl
dec
push
xor
pop
push
fs
loopne
out
sub
xchg
arpl
pusha
xchg
inc
fcoms
sti
inc
cli
out
sub
out
jmp
mov
jnp
popf
out
out
xchg
in
outsb
mov
js
fcoml
scas
rclb
jmp
movsl
inc
cmp
add
out
mov
int3
xor
adc
push
xor
sbb
loop
in
fcmovnbe
push
testl
shlb
sahf
into
mov
imul
aaa
jle
and
loop
or
out
aaa
pop
icebp
lea
sbbb
and
add
fwait
shrl
data16
bound
cli
test
or
inc
mov
test
sbb
lock
iret
and
dec
add
adc
scas
shlb
sub
roll
jns
fucomi
xchg
fstps
scas
push
idivb
les
push
mov
mov
push
sbb
andl
ljmp
add
mov
mov
mov
pushf
cmp
and
cli
shll
xchg
cli
aas
fiaddl
test
repz
sbb
sbb
adc
in
jno
push
movsl
js
dec
mov
lods
add
sub
sbb
mov
inc
clc
lahf
call
lock
shlb
mov
in
mov
orl
out
cmp
cli
icebp
mov
pop
clc
inc
mov
add
repnz
outsl
fbld
pop
scas
pop
xchg
jmp
rcr
scas
add
cltd
mov
aaa
aas
cmc
mov
xor
std
jno
mov
adc
mov
mov
dec
xor
jno
push
xchg
and
das
fcom
xchg
repnz
xor
mov
aas
shll
aas
pop
add
bound
fisubl
imul
or
movsl
cmp
fisubs
mov
mov
mov
pop
mov
aaa
push
mov
sub
xchg
loopne
sbb
sub
lahf
mov
jbe
addr16
cmc
mov
inc
cmp
sbb
cld
js
jbe
xchg
out
rcr
and
mov
sahf
idivl
mov
movsb
mov
stc
stos
add
cmp
scas
stos
mov
insl
add
pop
fsts
aam
fcoml
loop
fpatan
xchg
stc
inc
jge
aas
jns
leave
or
lds
sub
mov
sub
aaa
mov
and
shll
jno
adc
xor
mov
pushf
testl
icebp
movsl
das
dec
or
loope
aam
fsubrs
pop
push
push
orl
jge
jecxz
cmp
push
push
push
clc
out
xlat
lods
push
mov
sbb
fcmovnb
aam
xlat
in
imul
scas
inc
int3
xchg
or
sbb
and
imul
cmp
bound
dec
xor
and
loopne
test
push
fadds
adc
pop
lcall
push
hlt
jge
push
lahf
cmp
int3
xchg
sbb
mov
add
repz
and
out
int3
std
lds
xchg
push
mov
iret
aad
jmp
xchg
shrb
arpl
inc
shrl
sbb
rcll
jg
out
jp
mov
xchg
pop
lock
in
orl
dec
xor
repnz
jbe
mov
dec
inc
lcall
cmc
or
mov
dec
push
xor
mov
adc
or
xor
jno
andb
xchg
pop
call
xchg
adc
repnz
rcr
mov
jo
mov
sar
push
push
iret
in
enter
and
jg
inc
inc
dec
movsb
pop
repz
sbbb
xchg
and
and
out
sub
out
stos
call
inc
hlt
sub
and
rcr
inc
sbbb
add
cmp
push
decl
das
lds
dec
pop
repz
ficompl
nop
imul
cmp
xor
call
inc
pop
adc
pop
xchg
stc
jb
jae
pop
cltd
inc
xor
jp
mov
push
popf
icebp
inc
push
xor
push
repz
sub
cmp
mov
pop
ss
test
repnz
mov
fcomi
fnstsw
mov
int
mov
adc
test
inc
lret
jnp
mov
mov
dec
or
add
push
sbb
stos
xor
or
mov
xchg
mov
mov
mov
dec
jp
fs
rcr
push
xchg
mov
lret
sar
xor
mov
dec
popa
cmp
out
and
push
fldenv
mov
jge
repnz
mov
ret
mov
and
xlat
mov
dec
cmc
lret
enter
insl
xlat
aad
jnp
mov
mov
fistpl
adc
push
mov
xchg
sub
inc
movsl
push
sti
cmp
cmpsl
jl
cld
mov
dec
sbb
andb
lahf
inc
insl
out
inc
xlat
into
mov
cmp
or
loopne
add
adc
inc
mov
ss
ljmp
lcall
dec
scas
push
dec
movsb
xchg
cltd
cwtl
lea
cmp
lods
test
inc
cltd
test
mov
and
ret
test
adc
ret
inc
xchg
iret
stos
or
jle
xchg
gs
and
lcall
adc
jbe
push
jo
xor
jle
pop
xor
fstl
ficoml
sbb
push
ret
mov
rcll
cmp
out
call
xor
or
pushf
inc
or
add
xor
push
mov
data16
popf
add
cmpsb
sub
adc
js
adc
loope
push
add
aam
mov
push
or
call
push
fistps
and
push
xchg
scas
cmp
push
mov
sub
add
imul
jne
push
lcall
cmp
out
xor
add
add
adc
lock
imul
push
movsb
jmp
or
mov
jmp
add
sbb
lock
arpl
sbb
or
pop
inc
and
fdivrl
mov
fstps
out
cmp
xchg
test
lock
shlb
popf
and
xchg
shl
jo
insb
shl
lcall
aaa
aad
pop
jle
enter
or
adc
or
xor
push
fildll
dec
xchg
jecxz
and
cs
jp
fsubrl
repz
sub
and
stos
stos
dec
dec
fidivrl
out
in
imulb
and
ret
add
stos
jne
decb
dec
shr
rorb
roll
push
push
mov
mov
inc
push
enter
aam
jl
out
cmc
lahf
pop
pop
cs
mov
shlb
imul
int3
xchg
lcall
stos
inc
cli
mov
and
dec
gs
mov
add
fs
sub
or
lods
cmp
lcall
addr16
xlat
repz
adc
jp
test
sbb
mov
adc
and
inc
iret
repz
xchg
movsb
jp
inc
xchg
inc
popf
test
add
dec
push
fucom
jge
mov
fcoms
xlat
lods
sahf
xchg
sti
addr16
lods
mov
insl
stos
lock
nop
jge
inc
lret
xchg
jbe
add
push
loop
lods
adc
fucomi
mov
roll
mov
dec
pop
nop
test
sbb
stos
sbb
pop
ljmp
insb
movsb
lret
xor
fiadds
rcrl
popa
dec
lahf
dec
adcl
sbb
add
ret
iret
ja
gs
mov
jb
and
and
cld
add
jg
add
mov
xor
pushf
inc
ja
sbb
sahf
sbb
cwtl
lahf
push
in
addr16
inc
jbe
push
fistpll
inc
data16
scas
in
push
out
xor
fsub
pop
jmp
negl
xchg
adc
int3
xchg
enter
stos
roll
mov
sahf
das
jle
ret
sbbb
and
pop
lret
xlat
and
ja
sahf
xor
mov
lahf
pop
mov
pusha
mov
clc
dec
icebp
inc
xchg
add
sbb
adc
andb
mov
cs
push
pop
inc
shl
dec
jl
sbb
inc
adc
cmp
or
enter
movsb
gs
xor
fiaddl
out
loop
jae
mov
into
sub
inc
in
or
inc
mov
leave
or
rcrl
outsb
fwait
mov
repnz
xchg
lods
cmp
cmp
jp
lods
sub
push
jne
gs
sbb
jle
cltd
stos
bound
jp
adc
sub
inc
inc
or
sbb
call
je
jns
dec
cmpb
mov
xor
daa
and
outsb
jge
push
mov
outsb
push
xchg
shlb
in
repnz
jmp
shrb
mov
test
push
aas
dec
divw
lahf
cmc
pop
cwtl
xlat
dec
xchg
mov
jns
sub
dec
jae
xor
sub
xor
in
jmp
add
mov
or
and
push
dec
mov
fidivs
ret
lea
scas
scas
mov
jmp
push
das
or
enter
mov
fwait
shl
in
lahf
pop
sbb
stc
xor
push
fidivs
push
aas
xchg
ret
mov
stc
pushf
cmpsb
dec
push
push
test
popa
cmp
cmpsl
lret
popf
xchg
cmp
call
stos
rcll
les
pop
enter
call
outsb
cwtl
mov
push
push
pusha
leave
and
clc
addr16
mov
mov
aam
inc
arpl
and
push
repnz
imull
mov
inc
pop
stc
and
sbb
pop
xchg
inc
sti
insl
subl
into
addr16
ret
push
movsb
cmpsb
movsb
xor
dec
shlb
or
xlat
mov
test
sbb
imul
push
sbb
dec
enter
or
test
inc
jg
jbe
cmp
xchg
mov
pop
jle
testb
aad
nop
mov
rol
xor
dec
sub
pop
inc
scas
mov
js
into
push
in
bound
out
mov
pop
add
movsb
divb
sub
push
adc
test
scas
mov
and
stos
fsubrs
xor
dec
add
inc
sub
int
hlt
sbb
xchg
xor
les
into
lret
cmp
popf
sbb
and
stos
mov
cmc
xchg
cmc
sarl
and
cmp
lcall
sbb
xlat
cmpsb
and
push
ret
int3
loope
fwait
shrb
insb
loop
and
xor
repnz
lods
hlt
push
sbb
pop
in
and
jp
fcmovne
fldcw
push
lahf
mov
mov
je
adc
les
emms
bound
mov
dec
pop
and
cwtl
js
mov
loope
dec
mov
test
xor
in
sbb
push
and
mov
push
aaa
sbb
mov
pop
jmp
mov
cmpsb
xor
lret
sub
int3
mov
adc
subl
xchg
dec
jno
pop
pop
fdivs
xchg
cmpsl
and
jne
les
ficomps
sbb
test
rorl
mov
mov
ja
repz
lcall
adc
insb
cmpsl
jae
shr
xchg
pop
cmp
lret
mov
loope
mov
xchg
out
les
xchg
in
out
jp
fcmovnb
dec
das
pop
cmp
mov
imull
sbb
sub
ljmp
loop
dec
aas
sahf
inc
popf
scas
jle
xchg
xor
jmp
loop
mov
cmp
out
pop
icebp
jecxz
scas
add
mov
popf
test
sub
mov
int3
inc
pop
pop
fmul
leave
loopne
adc
mov
and
jb
mulb
xor
ret
or
mov
add
xchg
mov
or
jae
mov
es
imul
ret
std
cld
scas
inc
mov
push
mov
or
mov
add
cwtl
sub
sbb
mov
mov
mov
or
jmp
push
sub
lods
aaa
xor
fsubs
loopne
out
mov
test
sbb
adc
loope
test
fs
addb
test
adc
push
cmp
add
out
add
out
mov
mov
shr
lock
push
push
jecxz
sub
inc
cmp
push
push
lret
sbb
subb
mov
mov
xlat
mov
rcl
jge
fldl
and
mov
repz
inc
dec
fcmovu
xor
nop
sbb
dec
aas
cmp
icebp
lahf
jl
adc
xor
add
std
enter
insl
fiaddl
add
mov
sbb
jb
sbb
adc
pop
inc
stos
jbe
fwait
movsb
add
push
test
jae
sub
pushl
xchg
cmp
cmp
je
stos
sbb
stc
arpl
adc
mov
sbb
push
shrb
shll
or
stc
and
push
mov
daa
cmpl
pop
push
stos
cmpsb
lahf
xchg
dec
sub
mov
shrl
loop
nop
std
pop
enter
aam
push
dec
sub
repz
movsb
sbb
clc
shr
dec
jbe
mov
pop
in
jmp
cmp
jno
lea
data16
pop
lods
clc
xchg
and
es
lret
loope
mov
mov
movsb
fisttpl
xorl
icebp
xchg
mov
es
stos
lret
movsb
sbb
loopne
and
adc
and
cs
jo
mov
inc
lods
inc
rcll
out
inc
push
jne
mov
cmp
xchg
arpl
loope
add
mov
pop
mov
adc
xor
lcall
outsb
call
mov
loop
popa
and
idivl
fcomps
inc
gs
bnd
in
loope
rcrb
shr
pusha
push
mov
push
jmp
fisubs
push
cmp
imul
jge
mov
mov
in
insl
xchg
jecxz
xchg
pop
dec
inc
loop
jne
sti
inc
jno
lods
iret
and
cltd
add
into
in
popa
pusha
adc
add
sbb
repz
cs
and
lret
xor
push
xor
mov
xchg
xor
loope
add
cmpsl
push
push
inc
jae
test
adc
add
sbb
push
repnz
repnz
aaa
mov
cmp
xchg
jge
mov
xchg
cmp
sub
rorl
pop
mov
xchg
push
xor
adc
add
cmp
loope
imul
inc
mov
bound
std
jle
sbb
daa
decl
popa
inc
mov
or
lcall
leave
ret
and
das
adc
inc
sbb
subb
cltd
lds
cli
popf
and
mov
mov
pop
mov
pop
testb
sub
mov
pop
or
xor
adc
xor
and
xchg
mov
mov
push
lods
add
xor
cltd
sub
xor
xor
gs
daa
lret
sti
hlt
popa
insl
inc
pop
ljmp
push
and
stos
push
add
lahf
insb
inc
add
sbb
fndisi(8087
nop
cmp
es
inc
mov
fcoms
xor
mov
add
add
and
xlat
mov
je
hlt
and
pop
test
mov
sub
fiadds
ljmp
mov
mov
aaa
pop
dec
mov
test
dec
cmpsb
fs
add
mov
pop
inc
mov
loop
jbe
lcall
in
into
and
and
stc
add
jmp
cmp
scas
jbe
aam
flds
sbb
mov
mov
dec
insb
sub
mov
jns
dec
sti
pushf
lret
lea
je
fisttpll
add
shlb
call
stos
xchg
jmp
test
into
cmp
dec
scas
sarl
jbe
pop
aad
popa
push
mov
sti
lret
shll
mov
scas
mov
add
jp
xchg
push
ret
jns
cmp
sbbl
out
pop
sub
aas
gs
ja
out
in
mov
repz
inc
jns
addr16
jmp
leave
add
cmp
jge
add
mov
fistpl
add
add
sti
jmp
bound
cltd
fstps
add
cli
cmp
mov
or
lcall
adc
xchg
jge
xor
add
stos
sbb
cmp
andb
inc
sbb
lea
or
lea
mov
xor
aad
aas
dec
xor
in
sbb
pop
addr16
icebp
jmp
pop
jmp
add
loopew
pop
xchg
push
faddl
inc
mov
ret
decl
sub
jecxz
sub
aaa
ficoms
xchg
out
ret
rorb
shl
and
iret
xor
aaa
scas
push
popa
mov
pop
mov
stos
cmp
test
fmull
rol
jnp
push
shlb
jle
ja
mov
callw
push
fld
inc
mov
xchg
mov
push
cmp
cwtl
call
lret
cltd
inc
push
xor
jo
or
out
inc
inc
dec
xchg
scas
jne
push
out
cmpsb
mull
out
jo
push
pop
pop
sub
in
je
in
mov
jo
or
test
imul
xchg
xor
outsb
sbb
sbb
leave
test
dec
test
icebp
mov
aaa
mov
dec
and
sbb
or
push
adc
mov
jp
adc
cmp
lds
dec
sbb
push
xchg
sysexit
cli
or
inc
fsubrl
sub
sbb
sbb
sbb
cmp
jmp
mov
mov
pop
scas
or
mov
mov
mov
or
cmc
js
mov
adc
and
sub
sti
je
loopne
jmp
int3
lcall
lcall
jnp
int
xchg
sub
movsl
test
jl
shll
xchg
sub
aas
xchg
lret
iret
add
adc
shl
rclb
arpl
lds
jb
pop
push
push
dec
sub
inc
dec
xor
fimuls
stc
mov
xor
dec
jb
bound
mov
cmp
cmp
imul
mov
stos
into
pop
in
cs
adc
or
cmpsb
sub
mov
outsb
ljmp
icebp
push
scas
addl
clc
cmp
xchg
dec
pop
out
mov
ljmp
mov
inc
and
shl
ds
mov
or
xchg
test
jo
mov
sbb
out
jp
mov
jle
push
nop
pusha
call
clc
jnp
push
cmp
mov
addl
loop
stos
xlat
pop
jae
adc
jle
shrb
stc
inc
mov
cmp
xor
or
jmp
fs
sbb
mov
ss
dec
mov
popa
inc
daa
andl
or
imul
fsubs
mov
in
shll
loop
fs
sub
cmp
outsb
xor
adc
sbb
pusha
add
fcoml
aaa
xchg
cmp
fdivl
mov
xor
and
mov
jmp
out
stc
cmp
xchg
adc
jle
aas
xlat
ja
or
outsb
bnd
pop
push
and
aaa
push
test
orl
je
add
mov
lret
push
mov
ja
jecxz
in
popf
pop
cltd
or
lcall
push
aaa
mov
fdivrs
push
xor
push
or
pop
sub
push
andl
and
ret
xor
cmpb
out
add
stos
or
mov
adc
and
sub
lret
icebp
mov
into
cli
out
lea
pop
imul
aad
roll
ror
and
frstor
and
pop
fcomip
ret
pusha
jns
mov
sub
inc
add
add
mov
mov
jne
daa
test
in
aam
jbe
sub
xor
push
andb
mov
jp
ret
int3
mov
adc
mov
fistpll
leave
aas
mov
mov
shll
mov
pop
aad
movsb
push
daa
mov
adc
add
daa
jl
push
sub
mov
adc
pop
lret
fs
and
push
jp
and
lret
cwtl
cmp
xchg
fcom
int3
xchg
aad
xchg
es
xor
cmp
ljmp
scas
pop
pop
loop
imul
add
push
data16
arpl
loopne
cmp
out
xchg
insl
xchg
cmp
xor
cwtl
imulb
aas
nop
test
mov
jbe
lods
xor
mov
es
add
aas
push
scas
xchg
cmp
cmp
pop
cmp
in
stos
loope
xor
cmpsb
pusha
sub
scas
jge
cmpb
fnstenv
repz
lock
or
sahf
push
fisubrl
cld
inc
dec
loope
in
fisttpl
dec
mov
xlat
jle
frstor
ja
out
call
mov
int3
push
shll
xorl
inc
jnp
push
bound
orb
adc
cmp
jbe
mov
dec
divb
and
shrd
dec
and
dec
rclb
jmp
rcrl
mov
push
lods
sar
in
and
inc
ret
inc
push
and
lods
outsl
jg
sub
dec
movsl
arpl
nop
cmp
mov
js
jg
jecxz
lock
cmp
lcall
jo
adc
pop
mov
cmc
loope
and
sub
lahf
cwtl
pop
push
mov
movb
and
xchg
out
cmp
jo
iret
leave
dec
lahf
xchg
aas
idivb
test
xchg
dec
add
pop
shll
mov
int3
aaa
mov
jp
xlat
pushf
sub
mov
pop
and
loop
push
add
pop
mov
sti
imul
in
xchg
stos
out
adc
push
sub
scas
lds
loop
fstl
rcl
stc
stos
xor
add
push
lods
imull
shl
and
mov
shlb
popa
cmp
in
fdiv
cld
pop
sbb
cmc
std
pop
pop
mov
lahf
sbb
cmp
pop
aas
jo
ja
mov
hlt
int
dec
mov
mov
push
scas
das
fbstp
cmp
scas
cld
insl
inc
insb
insb
jl
int
dec
cmp
fs
addl
daa
mov
int
push
das
xchg
and
mov
mov
insl
not
xor
add
push
push
pop
je
test
add
incb
lds
cs
in
xchg
aad
lds
cmp
js
repnz
enter
fdivr
fimull
shrb
push
mov
mov
test
mov
data16
dec
mov
movsl
sbb
out
imul
mov
int3
std
in
cmp
or
sbb
fsub
ret
js
inc
stos
stos
mov
stc
or
sub
push
lahf
cmp
arpl
mov
inc
fisttps
rorl
sbb
clc
call
xchg
push
daa
or
mov
push
scas
adc
or
aad
cmp
call
jbe
or
fisttps
jmp
clc
wbinvd
clc
sbb
notl
imul
in
mov
sub
push
dec
and
ds
cmpsl
mov
aam
xor
sub
push
mov
aam
pushf
ja
xor
iret
hlt
push
scas
fsubrl
push
or
add
jbe
push
pop
out
xor
mov
pusha
in
in
push
or
xor
pop
pop
leave
xchg
fsubrp
jmp
jae
and
fwait
addb
scas
out
aad
sti
xchg
mov
fisubl
cli
lea
movsl
jg
ljmp
bnd
movsb
mov
xchg
insb
and
pop
stc
lret
dec
dec
dec
das
shrb
pushf
rolb
ja
push
cmp
scas
iret
jmp
sub
dec
hlt
ljmp
sbb
cmp
enter
outsl
pop
sahf
movsb
test
mov
sub
add
adc
shrl
mov
cmp
mov
pop
pushl
outsl
js
fdiv
or
jl
rol
pusha
sub
fbld
out
leave
jg
stos
xchg
mov
lahf
cmp
insl
gs
xor
push
sub
mov
inc
adcl
nop
mov
and
push
sub
inc
cli
ja
ds
aam
lods
add
add
jns
inc
out
lods
push
pop
test
sbb
add
mov
sub
adc
and
aaa
push
sbb
shrl
push
stc
js
jns
xchg
push
cwtl
popa
mov
fcomp
xchg
clc
mov
adc
or
scas
aaa
lods
mov
add
or
cli
stos
and
jge
nop
add
xchg
or
push
lret
adc
aam
out
outsl
js
cwtl
mov
shrl
dec
push
cmc
ljmp
ret
or
pop
or
shll
sbb
adc
lods
or
mov
xchg
or
mov
and
sub
fmull
popf
mov
mov
sub
inc
in
push
xchg
sarl
mov
stc
sub
dec
jnp
subb
fmuls
cmp
fmul
inc
daa
mov
push
pop
mov
mov
or
adc
lds
ja
mov
aas
lret
outsb
jbe
aas
daa
jg
aam
mov
sahf
adc
push
adc
sbb
in
jp
push
rcrb
pusha
fcompl
push
push
mov
insb
jl
add
adc
mov
mov
loop
jb
call
adcl
jnp
mov
jp
cmp
or
dec
lcall
call
or
loopne
add
dec
int
pushf
mov
decb
mov
xor
pop
xchg
push
push
mov
sbb
jo
outsb
scas
adc
sti
adc
sti
ja
insl
sub
cmp
repnz
add
data16
retw
dec
cli
in
sub
and
sub
inc
mov
inc
cmp
mov
cmp
xchg
inc
jl
pop
aad
inc
fcoml
ljmp
movsb
or
ret
imull
nop
mov
sbb
xor
clc
cmp
scas
xchg
mov
shlb
sbb
push
scas
test
push
sbb
outsl
cmp
iret
xor
repz
push
popa
daa
jne
out
cmp
jae
dec
jecxz
hlt
push
out
rclb
dec
adc
inc
cmpsl
std
adc
js
jne
or
data16
pushf
cmp
scas
dec
and
je
inc
out
pop
mov
nop
ja
in
jp
repnz
movsl
dec
mov
repz
pop
int
lods
insl
sbb
adc
and
hlt
adc
mov
shrl
mov
ficoms
dec
lock
aam
inc
dec
into
subb
ljmp
inc
jne
dec
sahf
pop
pushf
inc
shll
dec
das
mov
dec
enter
adc
jecxz
mov
shrb
adcl
xchg
mov
loope,pt
lret
std
dec
jmp
loopne
pop
push
xor
nop
fisttps
idivb
mov
cld
xchg
int3
inc
jb
cmp
mov
push
add
fbstp
jno
ss
test
dec
mov
sbb
daa
call
data16
jns
sbb
xlat
fcoms
jmp
rorl
or
clc
xchg
insb
fldt
mov
lea
mov
mov
cmp
cmp
data16
ja
jecxz
mov
inc
sub
mov
incb
mov
in
sub
sahf
jp
mov
jecxz
cli
data16
divb
xchg
mov
stc
or
lock
jmp
clc
ja
ret
outsl
loopne
stos
or
jmp
mov
cmp
pop
int3
fdivrs
push
icebp
sub
fwait
mov
xlat
popf
shl
and
lea
dec
xor
imul
orl
cmp
jne
dec
out
nop
mov
ja,pn
hlt
xchg
and
int
xchg
cs
jo
push
mov
xorb
cld
test
mov
addb
in
insb
or
xchg
addr16
inc
rorl
in
bound
and
bound
cwtl
sub
fsubr
daa
inc
lea
insb
and
pop
cmp
cwtl
inc
rol
subl
push
ds
jae
jl
jbe
out
cmp
dec
xor
leave
jno
jne
rolb
out
cmp
or
ret
push
lret
movsl
inc
dec
jnp
cmp
adc
lret
ja
and
sbb
adc
xchg
ja
or
in
pop
cmc
push
jb
ljmp
movsb
sti
cmpsl
out
in
xchg
jmp
push
or
fcoml
jp
dec
ds
rcrb
dec
ds
adc
pop
mov
inc
nop
nop
push
shrl
cwtl
xor
mov
pop
mov
mov
loop
cvtps2pd
xor
addr16
cli
jg
mov
bound
fwait
insb
ja
fucomip
cmc
ret
movsb
lods
mov
int3
jnp
daa
sbb
dec
dec
outsl
cltd
add
icebp
adc
les
outsl
out
test
test
imul
es
pop
repz
and
push
jno
pusha
xor
ds
gs
pop
push
mov
out
shl
adc
fcomp
dec
xchg
mov
lcall
rorl
push
scas
add
cmp
sti
and
xchg
push
inc
lea
cmp
xor
mov
dec
pop
mov
sbb
push
mov
or
clc
inc
test
adc
daa
adc
inc
pop
jbe
jp
dec
lcall
cmp
sub
cs
fwait
push
inc
jno
sbb
fs
push
mov
or
in
cmp
or
aad
stos
or
adc
pushf
dec
rcll
repnz
xor
cmc
xchg
fnsave
jae
aad
inc
push
or
mov
and
es
test
je
das
testl
add
push
and
in
pop
and
jmp
mov
das
loope
ss
sub
inc
cmc
push
inc
jae
pop
mov
mov
xchg
call
cs
fidivrl
pop
or
hlt
adc
adc
mov
xor
jp
dec
pop
repz
stos
add
mov
xor
cmp
push
xchg
bound
into
dec
or
inc
lret
xor
mov
sbb
daa
dec
mov
jno
cltd
std
ss
popa
mov
push
sub
andl
xchg
lcall
dec
add
out
lock
push
in
dec
pop
and
js
jnp
and
inc
inc
xchg
pushf
bound
sahf
aad
in
inc
push
sbb
scas
push
sti
dec
dec
leave
mov
inc
test
iret
lcall
push
sbb
into
xor
or
inc
ret
popf
rcr
and
repz
idivl
xchg
pop
cmp
test
mov
clc
mov
sub
sbb
cmc
cmc
jo
mov
int
movsb
jb
pop
daa
lods
rolb
mov
xor
and
in
shll
daa
xor
fprem
out
fnstenv
lods
cmpsl
pusha
test
adc
int
test
pop
xchg
addl
cs
dec
or
enter
xchg
movsl
fidivs
adc
into
mov
mov
pop
cmp
scas
subb
xor
test
cli
fiaddl
insl
addr16
lret
mov
xor
fucomi
shll
mov
pop
fidivrs
test
push
xor
dec
or
xor
rclb
xor
fstpt
push
dec
jecxz
mov
cld
mov
sub
jns
or
xchg
je
pop
mov
stos
ss
cmpsl
sti
mov
mov
push
pop
lods
in
xlat
jle
hlt
mov
jp
int3
mov
pop
mov
and
daa
rcr
cmpb
scas
ja
in
cltd
ljmp
cmc
and
jno
mov
movl
in
ds
mov
or
mov
push
outsl
pop
gs
dec
push
lds
ret
mov
mov
push
shl
bound
nop
icebp
cmpb
fldenv
daa
daa
cmc
sarl
sbbl
sbb
call
fidivrl
jp
je
lds
int
or
mov
fs
xchg
test
pop
les
fidivs
das
scas
sbb
es
sbb
lcall
xlat
ss
cmp
shll
sub
mov
popa
dec
push
ret
push
out
xor
movsl
ficomps
mov
scas
hlt
push
mov
mov
lock
aam
push
stc
jg
shl
xor
xchg
dec
ljmp
cmpsb
lahf
dec
sbb
fsub
sub
pop
repz
fdivp
je
sub
shlb
dec
push
dec
mov
pop
adc
push
jecxz
fimull
call
popa
pop
lahf
jge
lds
or
jge
dec
sub
lahf
sbb
cmp
dec
and
or
push
lret
pop
gs
adc
sbb
out
ficompl
add
sub
sub
bound
std
mov
std
lods
inc
scas
cmpsl
xor
or
pop
push
loopne
scas
inc
stos
mov
into
push
jbe
sahf
xor
shll
out
subl
sarb
ss
mov
lods
test
jmp
int
mov
loope
sub
mov
jl
or
and
leave
aad
add
jne
sub
xor
push
pop
xlat
aas
mov
nop
push
rorl
pop
in
ss
addr16
mov
inc
or
movsb
lods
push
mov
scas
push
gs
mov
push
out
loope
fisttps
xlat
adc
add
lock
cwtl
xchg
in
jbe
xor
fcmovb
out
fmulp
or
inc
and
into
cmpsl
outsb
sbb
xor
shrl
jae
jne
mov
ret
adc
jge
jecxz
jb
sbb
rcr
adc
pop
fwait
ds
dec
push
scas
cmp
lods
xchg
xor
adc
add
cmp
push
pop
icebp
adc
jg
addr16
mov
cmpsl
fisttpl
dec
ret
xchg
inc
and
inc
call
dec
xchg
or
push
xchg
mov
out
mov
cld
jae
ljmp
xlat
jl
mov
mov
and
jne
mov
dec
add
aaa
stos
and
fs
jb
fistl
cmp
aad
or
add
inc
loopne
or
outsb
mov
push
add
mov
jae
rolb
andl
or
mov
mov
addl
ss
cmp
xchg
push
je
mov
inc
fstpt
fsubl
stos
into
dec
rorb
popf
xor
mov
lahf
cs
cmpsb
aaa
mov
jle
mov
sahf
lcall
dec
lods
std
or
mov
xchg
movsb
mov
movsb
dec
lret
cmp
xor
inc
fs
jmp
mov
jno
mov
gs
push
mov
sbb
das
sub
mov
cld
arpl
out
sbb
mov
inc
inc
sub
aaa
into
push
in
aaa
insb
repnz
stc
je
and
cmp
sarl
aas
ljmp
int
jg
push
jp
lock
rcrb
and
jbe
mov
xchg
scas
or
addl
enter
movsl
xchg
mov
or
sbb
test
nop
sub
xchg
test
push
adc
push
icebp
lods
je
sbb
das
add
frstor
leave
fmulp
imul
xchg
insl
and
imul
mov
ret
rorb
jb
jbe
jmp
jmp
add
inc
and
pop
push
jmp
repz
cli
dec
fsts
lods
addl
lahf
testl
sbb
mov
adc
daa
fs
idivb
fwait
movsb
movsb
sub
or
sbb
mov
jo
lret
popa
cmp
sub
jmp
movsl
roll
ficoms
fistpl
mov
negb
and
or
out
out
les
enter
xor
sbb
add
out
out
sub
add
jecxz
inc
stos
aad
dec
cmp
push
adc
jg
push
movsb
or
or
jb
idivb
dec
into
jecxz
or
cli
leave
addr16
lods
xchg
or
ja
js
push
dec
push
fiaddl
pop
xor
mov
sub
jno
imul
mov
jle
jns
add
xchg
and
xchg
pop
mov
push
rolb
mov
push
mov
xchg
xor
lea
fisubrl
gs
hlt
adc
fwait
ja
stc
je
inc
shll
mov
cltd
test
lret
imul
mov
das
jg
rcll
scas
insl
push
lods
inc
xor
inc
bound
add
dec
incl
jo
fisttps
popa
push
cmp
sub
adc
push
iret
out
push
cmpsl
and
mov
lds
dec
repz
repz
sbb
mov
jg
cmpb
xor
ret
mov
xchg
test
fisubs
adc
jb
sbbb
sbb
ds
pop
sti
mov
lcall
pop
jl
addb
aaa
cli
add
subl
xchg
or
sub
fucomi
lcall
cltd
xor
das
and
mov
cmp
and
stos
shlb
sahf
lea
mov
mov
xor
gs
mov
lahf
mov
xchg
in
jmp
xchg
lahf
imul
sbb
sbb
inc
arpl
jne,pt
loopne
dec
mov
xor
dec
in
out
and
or
push
stos
cld
mov
arpl
sarl
icebp
cmp
inc
test
jo
rclb
cmp
in
pop
jo
xchg
mov
dec
mov
dec
push
js
cwtl
jle
aam
repnz
jl
loope
pop
aas
fisubrl
and
mov
hlt
mov
jp
jecxz
push
sarb
dec
jnp
lret
mov
cmp
icebp
call
push
mov
rclb
pop
inc
sbbb
xor
stos
jno
scas
or
nop
cmpsb
push
ret
mov
inc
mov
inc
sbb
inc
fisttpll
pop
jmp
jl
sbb
add
icebp
jp
mov
dec
les
outsb
bound
in
mov
and
inc
sbb
in
push
mov
dec
lods
cmpl
int
loope
adc
adc
cltd
jnp
push
inc
es
cli
jns
lcall
sar
cmp
mov
in
cmp
or
jnp
cvtpd2pi
pop
xchg
fsubl
mov
fadds
popa
pop
mov
pop
sti
aaa
and
cwtl
test
lea
xor
enter
in
mov
xchg
xchg
mov
sbb
lods
gs
outsl
xchg
jns
sbb
cmc
and
mov
and
xor
out
and
inc
sub
xor
sub
sub
mov
jmp
leave
cmpsb
aad
add
sbb
cmp
cmp
jne
pop
shll
cmc
test
pop
fistps
xchg
int
lds
movsb
das
jae
aaa
jns
sub
pushf
in
out
ja
into
push
mov
adc
lret
jb
or
std
in
xor
pushf
ljmp
mov
imul
add
dec
divl
scas
xchg
iret
repz
stc
cltd
jge
add
jo
in
stos
pop
mov
faddl
sbb
dec
ja
popf
mov
jns
imul
out
rclb
pushf
or
loop
ja
dec
jno
and
dec
insl
mov
dec
pop
es
adc
xchg
jmp
sbb
sar
adc
xor
cmpsl
jmp
call
popa
push
out
ficoms
push
xor
pop
fsubrl
inc
push
out
imul
leave
mov
hlt
jecxz
mov
pop
and
xchg
addl
push
jg
inc
jbe
mov
pushf
xchg
sbb
bound
jno
test
js
pop
mov
sbb
outsb
aaa
std
je
push
dec
lods
sahf
lods
js
jecxz
fidivs
adc
mov
and
aam
mov
xor
loope
mov
scas
push
rolb
addl
into
mov
out
je
cmp
xchg
mov
shlb
lret
cmp
shrb
nop
shll
sub
mov
rcll
push
lret
xor
pushf
xor
jb
xchg
jmp
dec
jmp
out
pop
xlat
pop
jnp
cmpsb
fs
pop
repz
cmp
sbb
push
shll
push
subl
add
dec
push
jne
cld
je
cmp
js
dec
pop
cmc
mov
ret
outsl
divb
stos
sbb
xor
sbb
out
cmp
mulb
dec
push
fldenv
int
dec
xor
jne
sub
popa
or
fs
lea
mov
pop
sub
or
mov
sbb
les
jb
std
rcrl
cmp
loope
cltd
ret
sbb
bswap
fdivrp
fdivrs
mov
sbb
loope
adc
fisubrs
je
stos
ss
aam
imul
push
ss
lcall
movsl
mov
sarb
sub
popa
fists
and
adc
shr
mov
adc
xchg
stos
push
dec
repz
das
in
fisubrs
loopne
cmp
cld
sub
mov
jbe
xor
lods
and
sbb
and
jne
shll
imul
imul
adc
lock
and
stc
out
dec
mov
sub
or
lcall
imul
stos
xchg
jmp
test
es
iret
add
push
test
and
jo
daa
int3
dec
pop
popf
roll
imul
sbb
mov
ret
add
push
cmpb
mov
push
lret
adc
push
movsb
test
pop
push
inc
inc
das
iret
and
pop
cmc
adc
insl
xor
jmp
inc
aad
jo
clc
leave
cs
pop
fcoms
mov
les
into
mov
nop
inc
sub
xchg
enter
inc
dec
or
enter
in
mov
testl
mov
pushf
push
fidivrl
lret
arpl
imul
inc
push
scas
sbb
pop
and
jmp
and
sub
int
or
adc
out
cmp
cld
imul
lcall
pop
cs
ljmp
mov
or
out
outsl
mov
pop
and
out
mov
test
sbb
mov
sub
mov
sub
cmp
ffreep
pop
mov
aad
dec
inc
stos
push
sub
mov
jg
sub
sub
les
mov
and
idivb
push
aas
ret
ret
xor
jae
dec
mov
adc
mov
pushl
mov
pop
push
sbb
mov
cli
movsb
push
dec
roll
xor
das
repnz
arpl
xchg
fcoml
jbe
pop
pop
fmuls
push
leave
repz
xorb
in
inc
mov
cmp
push
push
not
mov
into
mov
shrl
enter
dec
inc
xor
cwtl
adc
push
fs
mov
insb
inc
pushf
pusha
cmp
push
adc
push
xchg
fs
and
imul
cmp
iret
shrl
clc
nop
cwtl
push
jl
mov
pop
dec
lock
lds
and
popf
cmpsl
push
inc
test
mov
fidivl
dec
in
lods
jmp
pop
dec
and
movsl
sub
inc
sub
jg
loope
rorl
inc
cmc
fwait
inc
mov
scas
dec
or
mov
xchg
inc
jae
dec
mov
adc
push
outsl
insb
mov
mov
jb
test
mov
mov
push
or
sbb
pop
stos
enter
lea
xor
loopne
xor
adc
bsf
adc
add
mov
rorb
mov
mov
hlt
testb
pop
push
les
dec
adc
addr16
iret
add
jmp
loop
xor
inc
adcl
mov
call
mov
inc
cmpsl
loope
scas
jl
fxch
mov
jmp
sti
ljmp
adc
aad
cwtl
cmpsb
sub
add
subb
mov
out
aad
add
push
ret
iret
xor
call
mov
andnps
sahf
lea
in
sbb
jmp
mov
insl
ffreep
test
movsb
mov
les
clc
rcll
xchg
or
pushf
gs
push
mov
jecxz
push
adc
cmpb
and
movsl
push
mov
pop
test
mov
test
imul
repz
out
pop
bound
int
icebp
cmovl
mov
stos
jmp
adc
push
push
sbb
push
cs
cld
mov
ss
lods
int3
repz
cmp
mov
ror
adcl
push
gs
outsl
insb
jnp
ret
ja
mov
and
mov
fldenv
ja
inc
xchg
mov
pop
inc
cmp
int
inc
fwait
incl
mov
jg
xorps
mov
jno
pop
out
ret
xor
inc
ss
cltd
dec
std
pop
mov
mov
scas
arpl
jb
add
bound
lods
and
and
sub
jl
outsb
xor
push
insb
rcrl
push
int
lcall
jo
mov
dec
sbb
fists
mov
arpl
jbe
pop
out
push
clc
jb
or
rcl
dec
xchg
cmp
sahf
lea
cmp
jle
out
cmpsb
xchg
cmp
je
repz
push
pop
jb
xchg
stc
pop
jmp
sbb
sbb
xchg
mov
jo
mov
xor
xchg
cmp
pop
arpl
std
push
add
jno
mov
mov
inc
pop
xchg
cli
push
icebp
and
dec
push
add
paddw
jl
fstl
pop
out
ret
sti
sub
cmp
xchg
xor
mov
jb
mov
clc
loope
mul
inc
push
sub
div
fdivrs
push
jge
push
test
xlat
ljmp
sbbl
jle
ds
adc
ss
sub
mov
sub
ret
xor
out
add
cmp
gs
vmread
dec
pop
pop
xchg
jle
stos
clc
out
shr
in
aam
adc
mov
or
push
jne
or
in
fmuls
movsl
into
pop
inc
pushl
xchg
bound
pop
js
subl
push
sub
test
enter
leave
push
or
jmp
mov
fyl2x
xor
mov
movsb
sub
scas
fmuls
scas
test
pop
lods
sub
imul
inc
sti
in
sbb
fistpl
mov
sarl
mov
push
fs
jecxz
outsl
adc
ret
push
mov
scas
mov
push
out
cmc
movsb
fldenv
pop
ret
mov
jmp
mov
mov
test
add
fcmovu
cltd
push
fiadds
mov
inc
or
out
shll
adc
and
hlt
leave
test
xor
mov
add
xlat
jae
pop
push
cmpsl
sub
shlb
mov
loope
stos
out
fsubl
roll
and
xor
dec
cmp
insb
sbb
scas
push
ljmp
cs
clc
xchg
scas
mov
sarb
xor
mov
push
lret
fsubrs
in
mov
test
nop
sti
addr16
sub
test
sbb
sub
jg
bsf
xor
dec
sbb
push
iret
imul
imul
xchg
outsb
insb
jne
ja
test
imul
pop
xchg
in
cwtl
cmpsb
lds
push
leave
inc
or
mov
shr
outsb
lret
sbb
xor
es
xor
jmp
or
mov
xor
imull
xchg
iret
adc
stos
popf
sub
push
mov
nop
jmp
pop
bound
jecxz
lea
dec
fisubrl
push
xor
jbe
mov
les
ss
out
lods
add
jg
test
jns
pop
dec
adc
xor
sarb
xor
xor
inc
sub
cmpb
dec
sbb
sbb
fcomi
push
push
stos
mov
dec
gs
hlt
pop
add
mov
and
sub
clc
jno
cmpsb
adc
push
scas
shl
cmp
out
hlt
test
in
aas
enter
push
jo
push
mov
add
pop
sahf
xor
pop
ret
insb
dec
outsb
sahf
clc
js
xchg
cli
jb
bound
adc
pop
hlt
and
mov
ja
push
out
aaa
jle
nop
lock
lret
popf
pusha
xor
fadd
enter
push
pop
and
hlt
insl
outsl
imul
push
int3
lock
int3
mov
inc
xor
andl
mov
push
inc
popl
lret
imul
mov
shlb
mov
or
dec
pop
lcall
shl
pop
mov
imulb
icebp
rol
scas
fdiv
mov
adc
push
pop
cmp
push
lods
sub
xor
or
jge
lods
or
mov
fistps
xchg
xchg
fwait
sub
xchg
push
push
cmc
xor
mov
add
mov
jl
jno
and
popl
std
repz
dec
insl
xchg
and
add
lea
lods
inc
pushf
push
stos
xchg
imul
lahf
jl
jae,pn
xlat
sti
push
xchg
bound
inc
rolb
and
data16
add
or
adcb
push
inc
and
rcl
aam
lret
icebp
mov
in
pop
outsb
mov
dec
mov
cmp
sub
sbb
jns
sbbb
xchg
xchg
jecxz
ja
adc
test
data16
sub
movsl
xor
cmp
fistps
jecxz
cmp
pop
push
clc
rcll
pop
dec
jecxz
pop
push
push
inc
nop
cmp
je
dec
push
aas
stos
ds
pop
inc
shll
cmp
mov
mov
jae
dec
or
xchg
out
jp
insl
test
icebp
jp
jmp
and
out
clc
pop
aaa
jmp
jb
test
fstpt
sbb
xor
xchg
test
repnz
sti
and
js
sbb
add
pop
jecxz
mov
js
cmp
add
rcr
jb
add
mov
mov
cmp
sbb
loop
add
fs
lods
in
pop
sbb
fldl
cmc
xchg
mov
add
ret
cmp
and
aaa
fcmovnb
imul
ret
pop
push
lahf
cmp
xor
add
mov
jne
mov
mov
das
pop
or
loope
xor
mov
push
mov
movsl
std
or
fildll
add
leave
sbb
int
inc
or
ret
lret
add
dec
inc
aad
ja
push
mov
imul
out
push
fbld
cwtl
jae
ret
xchg
or
mov
xchg
dec
cmpsl
mov
lret
gs
jmp
xchg
cmp
push
mov
and
mov
add
push
dec
jo
mov
push
mov
test
in
lea
mov
or
les
inc
inc
jno
addr16
adc
mov
inc
sbb
loopne
pop
mov
add
pop
dec
stos
out
push
jle
rcrb
xor
xchg
jne
add
mov
rcr
mov
mov
xor
cli
pop
cli
cld
push
pusha
push
add
cmp
inc
cmpsl
lret
pop
test
cwtl
push
divb
insb
push
jne
dec
mull
aas
push
rclb
test
add
les
repnz
stos
pop
jl
mov
jge
das
mov
clc
dec
dec
das
pop
add
xchg
movsb
in
sub
fdivl
mov
sahf
mov
lock
mov
inc
lret
mov
sub
pop
sahf
mov
push
jl
sahf
in
call
xor
and
testl
add
adc
add
les
in
mov
into
sarl
lock
int3
xor
mov
push
in
sbb
mov
mov
mulb
sbb
mov
int
jl
mov
sub
sbb
int
test
xchg
mov
jns
stos
cmpsl
add
dec
mov
mov
mov
jnp
and
mov
aam
pop
into
pushf
in
mov
leave
js
std
add
scas
and
xchg
test
sbb
sub
out
test
pop
mov
in
hlt
cmpsb
lods
aas
add
inc
cmc
loopne
nop
xor
gs
aaa
push
insl
shrl
sahf
lock
mov
sub
insb
jnp
and
or
fcmovne
jb
sub
sbb
out
fisubl
call
loope
xchg
fists
cmp
enter
in
mov
mov
movsb
out
jo
jae
cmp
jp
inc
xor
mov
add
aam
cmp
in
out
jmp
and
sbb
pop
xor
push
xor
into
mov
adc
movsb
push
ja
mov
cmpb
fwait
ja
jge
and
sbb
inc
mov
cmpsb
lds
ret
push
cmp
jl
stos
jo
outsl
int
mov
inc
into
sbb
shl
xchg
xchg
lret
and
hlt
and
out
mov
push
mov
sti
adc
xchg
jnp
jmp
mov
popf
mov
loopne
ss
stos
xchg
dec
clc
lcall
lea
les
or
inc
mov
stc
mov
sbb
sahf
adcl
mov
aas
jbe
pop
sbbb
inc
fmul
push
in
or
stc
mov
popf
pop
test
jno
stos
sahf
mov
leave
sti
jmp
pop
imul
hlt
inc
pusha
js
xchg
jae
popf
es
jno
icebp
xor
sbb
outsl
test
cmp
fidivrs
cmc
fsts
pop
jmp
pop
dec
es
aas
dec
rclb
pop
xorb
lret
sub
mov
adc
imul
inc
ljmp
mov
or
mov
add
das
pop
xor
mov
fdivrs
pop
cmp
pop
mov
int3
jmp
test
inc
mov
call
fldt
clc
push
jne
popf
ret
xor
add
ja
push
adc
push
adc
jl
shl
vmovups
fldt
adc
pop
fsts
out
nop
cld
push
shufps
pop
pop
add
test
loope
cmpsb
std
out
mov
mov
into
xor
xchg
pop
jmp
sbb
adc
scas
lods
fmull
insb
int3
mov
adc
jmp
sub
lret
iret
cmpsl
fnstsw
adc
mov
pop
mov
pop
dec
out
jmp
movsl
add
xchg
movsl
push
shrb
cmp
movsb
xor
inc
push
in
push
pop
dec
stos
push
and
mov
sub
sbb
add
sbb
add
lcall
push
aam
out
dec
shr
inc
mov
popa
pusha
stos
pop
pusha
mov
sbb
out
dec
pop
sbb
shrb
push
or
and
adc
mov
add
mov
fwait
mov
std
clc
test
and
adc
or
loop
int
lods
out
repz
dec
ret
loope
lret
mov
movsb
ja
dec
iret
push
push
pop
and
dec
cmc
cmpl
dec
pusha
cmp
std
ret
xchg
adc
rorb
stc
xor
fcoms
xchg
out
jge
push
add
inc
inc
test
mov
push
into
out
cmp
push
es
cmc
orl
sbb
mov
fiaddl
aaa
inc
add
test
sub
rcr
jge
push
push
inc
cmc
test
addr16
and
xor
stos
mov
imul
sti
and
inc
pop
adc
shll
repnz
call
sbb
stc
fcoms
dec
pop
icebp
cmp
cwtl
insb
add
cli
cmp
xor
popw
pop
fimull
sbb
in
pop
cmc
std
enter
jae
pop
jnp
push
push
pop
xchg
cmpb
jg
push
dec
jo
pop
adc
adc
or
mov
repnz
xlat
xchg
std
pop
mov
stc
sub
mov
ljmpw
push
lods
xor
jbe
jl
adc
and
or
ja
or
lcall
mov
mov
cmp
scas
leave
cmp
push
pushf
repnz
push
mov
aad
adc
in
pushf
ljmp
mov
mov
adc
lods
mov
or
push
lahf
mov
psllq
push
sub
inc
loope
and
jle
jnp
ljmp
pop
adc
jl
shl
pop
popf
sub
inc
scas
pop
xchg
aaa
sub
xchg
out
mov
loop
inc
lcall
lret
jae
int
and
out
lret
cmp
insb
push
mov
fidivrs
out
or
push
sti
jp
fcompl
jecxz
mov
xchg
xor
test
push
jo
nopl
loope
js
xchg
jmp
lods
inc
repnz
inc
and
in
and
dec
dec
lock
pop
push
rorb
dec
or
mov
sbb
lret
push
les
cmp
jno
mov
inc
push
insb
adc
xor
jecxz
xor
adcl
push
jecxz
mov
sahf
in
push
imul
add
xlat
mov
testl
xor
jecxz
and
cmp
std
sbb
jg
aaa
sub
xor
ljmp
nop
cwtl
shlb
adc
in
lcall
adc
xor
sbb
jmp
dec
xchg
jnp
ja
or
lds
lret
popl
in
xchg
ja
jmp
mov
nop
daa
fldl
jle
jo
sbb
lret
pop
sbb
cltd
pop
pop
dec
mov
and
in
insl
fs
add
pop
in
aad
and
mov
sarl
jb
shrl
jp
arpl
xor
lds
xchg
sbb
jp
xlat
and
push
cltd
mov
decb
mov
sbb
mov
hlt
mov
mov
aaa
mov
mov
jo
subb
push
push
popa
loope
ss
jp
in
xlat
ror
jmp
xchg
sub
cmp
cmp
cmp
jl
push
imul
insb
loop
ret
ficoml
dec
pop
cmp
subb
mov
daa
mov
pop
shr
xor
out
cmp
imul
cs
test
fcmovnbe
add
lods
cwtl
fwait
aam
and
sub
mov
jnp
daa
std
push
adc
out
and
es
and
xchg
rclb
cmp
mov
icebp
int
mov
jnp
jne
adc
mov
mov
rorb
lahf
mov
jno
pop
xor
jne
lea
cld
fisubrl
mov
insl
xchg
pop
fsub
addb
repnz
sbb
in
pop
fistpll
mov
adc
or
loop
xor
adc
cltd
or
xor
adc
add
lods
cmp
xor
jecxz
jns
or
dec
test
stos
in
mov
pop
inc
lods
jbe
mov
and
add
push
inc
out
cmp
test
lahf
inc
ss
cmp
cmc
jmp
pusha
sbb
mov
lret
push
repz
xor
lahf
cmp
inc
mov
adc
mov
jp
fdivrp
out
lret
cld
scas
lret
mov
xor
add
xor
push
mov
aad
test
push
iret
hlt
adc
mov
stos
sbb
shll
add
jbe
push
push
add
das
and
jno
jb
int3
or
les
scas
mull
enter
add
mov
pushf
sub
cmpsb
das
repnz
inc
xor
pop
jo
int3
sbb
out
inc
cmp
push
stos
adc
jbe
mov
shrb
pop
out
add
push
cltd
movsl
mov
add
sar
dec
lahf
mov
ret
icebp
repnz
push
push
lret
push
test
cld
sub
mov
push
mov
mov
push
mov
lods
mov
push
pop
push
lret
lods
icebp
imul
and
push
dec
in
sti
rcrb
fstp
popf
cld
push
pusha
lea
lret
add
fisttpll
cmp
dec
lcall
dec
popf
mov
pop
sub
stos
ljmp
inc
addr16
jl
or
pop
xchg
clc
mov
inc
pushf
lea
pop
fsts
movsb
insl
in
insb
les
enter
addr16
xchg
sbb
sub
or
lea
jecxz
repnz
jmp
notb
in
jle
or
fstps
mov
jmp
or
xor
or
inc
jle
mov
mov
push
push
xchg
push
fimull
dec
fistpll
call
fildl
jmp
out
jno
fidivrl
jl
inc
faddl
das
push
jo
add
sbb
das
pop
insb
push
pushf
mov
daa
add
leave
dec
in
sub
xchg
mov
jns
ret
imul
cs
xchg
shlb
xor
icebp
xchg
int3
xchg
push
jmp
sbb
push
int
insb
jo
adc
mov
cmp
orb
sub
pop
movl
xchg
sarl
shld
jne
xor
scas
mov
mov
stc
or
mov
mov
add
jb
lahf
pop
mov
insb
cmpsb
ret
dec
pop
push
sbb
bound
cs
cmpsl
push
les
cmp
lret
cs
cmp
fildl
outsl
in
xor
insl
pop
mov
icebp
pop
or
fimull
ljmp
dec
je
movsl
cs
addb
mov
aam
jge
mov
hlt
inc
sbb
movsb
cmp
mov
insb
jl
xchg
sbb
lock
fiadds
ret
mov
ljmp
sub
cmp
cmp
bound
aaa
aaa
push
fcomi
cmp
pop
sbb
and
loope
pop
imul
inc
rcrb
mov
call
dec
inc
fwait
jbe
and
and
pop
and
outsl
push
outsb
fists
sbb
dec
pop
outsb
jp
stos
ffree
outsb
pop
push
dec
out
add
repnz
mov
push
pop
aad
pop
fwait
adc
jb
arpl
cmpsb
jg
add
mov
adcb
mov
dec
inc
divb
fimuls
movb
dec
std
push
pop
mov
add
pop
icebp
test
scas
roll
pop
mov
push
or
push
adc
xor
fists
sub
pop
push
ja
cwtl
mov
add
mov
sub
imul
sub
aam
or
sahf
ja
dec
cmp
mov
or
mov
cmp
xor
mov
loopne
sub
mov
lcall
adc
push
fdivrs
mov
add
leave
add
fwait
mov
sbb
rclb
lods
xor
jo
fcmovnbe
mov
xor
movsl
jmp
fwait
push
stos
adc
mov
fldl
mov
adc
sub
sbb
fisubrl
mov
mov
push
and
jl
mov
jecxz
lahf
adc
fwait
popf
lods
fs
jmp
push
fildll
imul
sub
mov
lods
outsb
int3
aad
bound
popf
mov
loopne
shrb
xor
ds
and
ret
into
test
pop
inc
test
outsb
shrl
and
mov
mov
xor
inc
outsl
sbb
cmpsb
and
mov
stos
inc
mov
rol
int3
repz
xlat
movsl
lcall
xchg
mov
pop
push
pop
pavgb
cltd
sbb
adc
mov
addb
iret
cmp
nop
repz
ljmp
push
pop
mov
out
xor
sbb
sbb
mov
test
cmp
fsubs
mov
and
jmp
adc
dec
pop
jecxz
aaa
sub
xchg
cltd
mov
sub
pop
add
shll
pop
cmpsl
push
sub
loop
mov
shlb
xchg
ret
fwait
mov
push
cmpsl
push
xchg
mov
dec
push
sbb
test
pop
jge
popa
insl
push
pop
test
jbe
dec
int
iret
inc
or
xchg
xor
js,pt
push
call
sub
lret
jecxz
outsb
pop
dec
mov
lock
fwait
das
and
mov
mov
push
js
dec
sahf
and
xlat
inc
lods
stos
pop
sub
push
and
adc
leave
mov
inc
cmpsb
fs
fsubrl
inc
mov
je
sti
mov
mov
outsb
jbe
sbb
xchg
jl
pop
or
outsl
jo
movups
mov
shrb
pop
addr16
js
mov
add
xchg
leave
xchg
push
push
addl
fisttps
jno
dec
dec
clc
gs
dec
jnp
push
mov
aas
test
mov
pop
cmp
imul
cs
sub
dec
mov
xchg
mov
scas
daa
lahf
pop
sbb
pop
sbb
loopne
mov
push
icebp
xchg
cmpsb
push
dec
mov
fsubl
aad
pushf
jge
out
pop
cmp
fsubs
lock
orl
hlt
mov
xchg
dec
fistl
adc
pop
test
xchg
aas
jnp
adc
xor
arpl
daa
sub
jg
xor
stos
pop
cmp
addr16
adc
cmp
push
jmp
mov
dec
lahf
cmc
pop
push
mov
outsb
xlat
lods
xchg
push
bound
stos
es
mov
jno
popf
idiv
in
push
adc
ret
mov
mov
add
sub
outsl
xor
inc
int
lahf
xor
mov
jnp
pop
hlt
inc
jg
jmp
adc
or
sbb
fcompl
sub
ss
daa
sub
push
loopne
repnz
into
std
data16
mov
sbb
daa
loope
ljmp
sub
out
ss
icebp
pop
hlt
mov
cmpsl
shrb
mov
int
xchg
mov
push
pop
and
and
adc
cmp
xchg
sbbl
inc
loop
jmp
loopw
mov
mov
popa
xchg
insl
mov
xchg
jecxz
jns
pop
mov
inc
adc
push
sbb
aaa
mov
sbb
mov
fildl
pop
or
and
dec
or
jle
cltd
mov
jmp
xchg
xor
fmuls
rcll
or
pop
scas
fists
shr
repz
fistpl
push
neg
push
jmp
fnstsw
cltd
mov
sub
aad
ljmp
dec
imul
outsl
xchg
fsubrs
arpl
fdivrs
push
inc
cs
insb
fimuls
ja
sar
push
cld
mov
fisubrl
sub
jne
jbe
out
sahf
sti
or
cld
add
cli
pusha
cli
cmp
dec
xchg
sub
shlb
mov
inc
or
push
repnz
arpl
adc
cmp
aad
imul
loop
stos
je
aam
jo
mov
push
add
mov
sti
in
jae
pop
mov
xchg
pusha
lock
into
push
mov
push
nop
loop
xor
in
and
cld
inc
adc
sarb
sbb
fdivs
xor
adc
jp
mov
stc
xchg
jns
lahf
xchg
sub
pushf
cmc
pusha
jo
dec
pop
sub
out
aam
pop
inc
insl
adc
test
cmp
adc
cmpsl
ja
fnstenv
push
mov
mov
mov
sbb
sub
imul
sbb
mov
in
in
enter
aad
enter
sbb
leave
loop
enter
mov
loop
xchg
or
xorl
mov
or
jo
jo
xchg
xchg
push
mov
xor
mov
add
ja
mov
adc
push
cwtl
sub
mov
arpl
mov
sbb
leave
sbbb
xlat
leave
stos
adc
sahf
test
inc
scas
lahf
insl
cld
data16
test
adc
addb
insl
mov
lea
dec
daa
or
addb
or
repnz
push
jecxz
sbb
cmp
int
idiv
push
mov
xor
iret
push
and
adc
fwait
mov
js
add
xchg
xchg
or
xchg
int3
sub
push
push
mov
adc
pop
or
jnp
ss
or
mov
hlt
and
xchg
cmpsl
ljmp
add
lea
pop
add
fwait
push
fs
dec
pop
adc
ss
lock
inc
aas
outsb
lcall
inc
shlb
push
mov
push
mov
in
hlt
fs
pop
mov
fdivrs
jl
dec
pushf
insl
xor
mov
shrw
cmp
fimuls
mov
jbe
dec
mov
pop
jmp
or
mov
lods
mov
dec
push
test
push
lret
push
sbb
data16
rcrl
push
sub
roll
sub
sub
jno
ror
jns
scas
and
dec
cld
fcoms
jg
lds
repz
adc
hlt
js
lcall
adc
or
add
inc
push
daa
mov
mov
add
lcall
lock
outsl
dec
mov
loop
or
test
lods
sbbb
sti
pop
pushf
lret
inc
fsubrs
lds
es
jbe
mov
pop
mov
aam
sub
xchg
jns
aas
in
push
sbb
pop
cwtl
xchg
mov
jnp
mov
es
pop
js
jb
dec
jae
loopne
imul
xchg
fcos
insb
sub
push
and
sarb
or
outsl
lds
cs
sbb
jl
pop
je
insb
ja
adc
sbb
scas
aaa
aaa
aaa
add
push
data16
in
mov
cmpsl
jb
mov
xor
mov
add
es
std
and
sahf
adc
stos
dec
into
andl
out
ret
arpl
push
mov
outsb
xchg
lret
add
popa
jae
and
dec
mov
and
inc
push
ret
mov
dec
jle
pusha
dec
xor
jmp
push
or
xchg
push
xchg
mov
add
jl
jg
jmp
xchg
repnz
xchg
xchg
lds
ja
pop
movsb
inc
mov
insb
push
pop
mov
in
push
outsb
mulb
outsb
xor
out
in
lret
pop
mov
dec
dec
inc
imul
push
adc
call
sub
arpl
cmp
int
pushf
xchg
xchg
push
movsl
mov
std
pop
dec
in
push
jo
jae
sub
scas
ret
movsb
and
ret
mov
fisubs
ror
xor
movntq
jae
or
adc
imul
insl
jb
mov
xchg
in
push
je
popf
daa
xchg
xchg
fimuls
or
add
shrb
xchg
outsl
arpl
fsubrs
jno
dec
mov
ds
xchg
xchg
loopne
sbb
ja
or
icebp
negb
mov
in
andl
mov
bound
popf
dec
push
das
outsb
pushf
jne
out
lock
and
pop
push
cmp
add
or
push
mov
lcall
and
lods
pushf
decl
adc
mov
sbb
push
arpl
out
ljmp
mov
add
aam
mov
sti
test
inc
iret
fwait
sbb
out
addr16
loop
xchg
std
stc
mov
and
and
loop
xor
mov
dec
addr16
jp
or
icebp
shl
mov
lcall
push
add
sub
and
test
mov
ret
push
pop
orl
adc
mov
add
xchg
sub
gs
jmp
in
ret
arpl
out
stos
enter
xor
jb
ss
arpl
aad
insl
inc
pusha
sar
fcmovb
stc
pop
xlat
sahf
add
fidivrs
xor
lods
outsl
dec
or
repz
add
sahf
je
popa
xor
mov
jb
pop
xor
cmp
mov
xchg
pop
pushf
mov
stc
roll
lea
fisttpll
shrb
add
jmp
lcall
outsl
movsl
jo
insb
es
xchg
out
sub
inc
sbb
dec
int3
fnsave
fstl
arpl
xorl
in
cli
sbb
int
repnz
inc
and
mov
movsb
jecxz
fldenv
sbb
mov
adc
out
out
cmp
incl
lds
mov
decb
shrl
sub
or
nop
mov
shlb
dec
jle
or
or
pop
clc
pop
cld
mov
inc
adc
inc
adc
addr16
push
push
mov
push
movsb
out
xchg
cmp
fstp
int
dec
mov
xchg
rcl
rol
pop
popf
adc
xchg
adc
into
sub
sbb
add
sti
mov
add
cwtl
or
jmp
dec
pop
mov
xlat
fs
xchg
cmpsl
add
add
imul
push
or
jecxz
mov
jl
lea
pop
mov
lea
iret
mov
dec
xor
lds
xchg
dec
sbb
ja
in
sub
push
mov
or
cmc
sub
rolb
nop
in
and
ss
in
nop
jo
xor
jmp
or
add
mov
insb
bswap
lea
ret
xor
push
push
mov
cltd
sbb
xor
pop
ja
mov
out
pop
sub
outsl
fsts
iret
sbb
jo
or
jb
mov
mov
xchg
and
fidivrl
dec
mov
mov
outsl
or
sbb
lods
inc
jns
test
insb
jmp
pushf
sbb
inc
dec
add
insb
cmp
mov
and
mov
cld
dec
and
xchg
mov
mov
lea
insl
pop
pop
jge
ja
jp
adc
leave
mov
jle
pusha
inc
cmpsb
enter
repnz
sub
push
jp
jp
cwtl
testb
push
int
pop
sbb
cwtl
out
shll
pop
push
repnz
stos
add
in
mov
xchg
daa
adc
ror
pop
push
ja
and
mov
jg
outsb
out
cmp
out
aam
push
push
and
lock
pusha
or
and
test
iret
xor
fucomip
inc
pop
pop
mov
mov
lds
dec
and
shrd
mov
jo
out
mov
inc
ror
xor
and
mov
sarl
dec
mov
ja
pop
fadds
shlb
xor
lea
movsl
sahf
adc
dec
lret
pop
cltd
jbe
add
xchg
jge
jo
iret
mov
push
nop
es
stos
push
cmp
mov
js
ret
inc
push
sbb
and
mov
and
fsubl
dec
les
dec
fcomi
addr16
out
adc
push
cli
ds
dec
dec
fldt
xchg
sbb
ret
fsubl
sbb
movsl
gs
and
xchg
add
xor
scas
cmc
pushf
fidivrl
stos
inc
inc
out
mov
or
lds
and
pop
lcall
xchg
les
lcall
pop
xchg
mov
test
mov
lret
pop
adc
or
imul
icebp
dec
xlat
je
pushf
hlt
test
out
popa
loop
negl
jne
mov
in
adc
and
stos
jns
adc
sarb
in
outsl
push
cmp
pop
pop
cli
addr16
stos
gs
and
insl
fwait
pop
shlb
in
arpl
dec
sbb
dec
ss
sbb
sbb
and
adc
mov
xchg
inc
lcall
pop
aaa
fistpl
and
in
or
movsb
cmp
test
mov
push
jle
mov
pop
xchg
xchg
pop
cmc
mov
mov
cs
pop
inc
movsl
mov
in
lods
or
or
das
cwtl
loopne
sub
xor
or
sbb
inc
stos
scas
ss
mov
xchg
or
mov
addl
fnstenv
imul
pop
mov
test
cmp
or
xor
cld
je
inc
leave
fwait
jnp
jne
adc
fimuls
xchg
dec
push
mov
and
and
mov
xlat
jp
push
and
out
outsl
test
lret
push
sti
add
mov
jmp
xchg
outsb
and
adc
hlt
push
stos
lods
pushf
cld
adc
mov
mov
dec
mov
and
bound
push
xchg
repz
in
stc
out
or
xorb
inc
mov
push
movsb
in
xor
sti
push
iret
lds
lahf
add
arpl
adc
out
xor
dec
xor
dec
pop
cmp
scas
orl
das
push
into
jmp
cmc
inc
imul
mov
and
dec
in
inc
and
add
jns
sbb
scas
mov
xlat
stc
fwait
push
je
aas
ret
fwait
pop
popa
aaa
and
enter
cmpsl
cmp
jbe
lds
xchg
jmp
sahf
inc
jl
aam
push
cltd
sub
popa
leave
popa
or
pop
insb
aad
adc
sahf
add
jmp
jo
icebp
and
cli
or
xor
movsl
push
add
push
jnp
daa
add
add
ds
pop
mov
cmpb
mov
int
das
aas
jno
dec
push
inc
scas
xchg
pop
xor
mov
add
xor
jge
push
push
psrld
popa
lcall
rcll
jb
das
pop
pop
outsl
or
ret
sbb
outsb
cmp
int3
jl
pop
cwtl
add
rcll
fwait
sahf
and
or
jne
sbb
daa
inc
popf
sbb
ret
jp
subb
addr16
dec
xchg
sbb
sbb
aas
sbb
xchg
bound
jnp
and
pop
xor
sub
jmp
dec
cmp
lret
rcl
ret
xor
pop
ljmp
sarl
test
xchg
test
test
add
jnp
inc
loope
dec
or
xchg
test
pop
mov
ficompl
leave
call
dec
lds
scas
mov
out
inc
inc
stos
sub
and
xor
ss
jb
cmp
cmp
jecxz
subl
insb
sub
adc
xor
cmpsb
scas
pop
cmp
je
pop
or
sti
andl
inc
test
sti
cmp
orps
fstpt
cmp
xor
dec
aaa
fbstp
mov
sbb
adc
jg
and
cli
test
xorl
ss
sbb
sahf
lret
sub
ret
push
sbb
pop
pop
sub
or
mov
enter
pop
push
xor
jle
js
mov
outsl
arpl
lcall
jns
lahf
cli
repz
or
dec
in
adc
adc
loop
mov
fsubrp
cmp
mov
xor
sbb
mov
loop
mov
sbb
sbb
lcall
loop
mov
into
xchg
jg
ss
lds
ret
divb
leave
in
jl
out
adc
movsl
and
mov
bound
std
push
or
dec
loopne
jle
leave
xchg
pop
inc
xchg
imul
cmp
pop
in
sti
clc
sub
mov
push
pop
sar
lret
mov
pop
negb
stc
jmp
ret
inc
push
xchg
pusha
lret
idiv
data16
subl
mov
sti
repz
ljmp
out
sbb
push
test
inc
cmp
push
mov
jecxz
data16
out
daa
sbb
mov
int3
mov
psrlq
std
das
std
mov
je
sbb
push
mov
cmp
pop
ret
inc
loope
xor
adc
jbe
adc
pop
sti
aas
icebp
rorl
stc
sbb
pop
fimull
gs
std
dec
les
inc
jo
inc
mov
inc
mov
fwait
bound
dec
add
iret
xor
xorl
ret
adc
sub
mov
inc
sbb
in
fdivrl
mov
rcrl
inc
mov
cmp
enter
pop
sbb
cli
je
xlat
push
jp
pop
jg
cld
inc
pusha
lret
sbb
shr
lods
loope
sahf
jg
mov
int3
repnz
mov
outsb
push
iret
jns
inc
jae
xlat
adc
mov
mov
sub
test
frstor
inc
lcall
out
push
and
cmp
subl
push
xchg
pop
inc
dec
mov
test
clc
loopne
xor
or
mov
pop
push
mov
inc
adc
mov
push
push
movsl
popf
lods
mov
cltd
fstpt
std
inc
stc
xor
mov
jecxz
negl
fdiv
out
into
les
test
xor
jp
sub
addr16
jecxz
js
add
popa
test
mov
arpl
and
cmp
mov
aas
push
adc
adc
push
xor
or
add
lret
adcl
cmp
fisubs
cmpsb
sbb
mov
xor
inc
sub
iret
push
add
inc
ljmp
sub
daa
in
and
push
int3
pop
xchg
divb
dec
and
aad
push
push
jnp
dec
aas
mov
out
lds
mov
inc
ret
jmp
lea
fdivl
mov
out
pop
jp
popa
daa
lock
inc
and
push
and
out
outsb
fs
incb
call
mov
pop
xchg
xchg
inc
fsubs
cli
rorl
addr16
scas
into
in
pop
mov
adc
inc
negl
mov
mov
inc
jbe
sub
pop
call
test
mov
jno
push
popa
in
nop
jle
xchg
jge
shrd
jae
xchg
mov
clc
test
and
dec
jmp
cmp
mov
mov
or
in
insl
push
loopne
out
shlb
mov
lea
ja,pt
mov
push
dec
lock
push
or
adc
push
leave
jbe
or
insl
jle
shrl
arpl
cwtl
stos
xchg
adc
scas
rcrb
stos
cmc
mull
jns
xor
inc
sub
push
mov
aas
adc
lods
cs
out
loope
mov
in
mov
xlat
pop
into
xchg
and
iret
dec
sbb
pop
mov
int3
mov
iret
jnp
cmp
rcll
fildll
push
or
and
cmpsl
mov
jae
out
mov
mov
jb
fisttpl
mov
xor
mov
cmpsl
cmp
cmpsb
rcrb
test
push
lods
push
mov
sbb
mov
stos
mov
sbb
jns
testl
fstpl
in
lods
push
ss
jecxz
test
adc
arpl
lahf
sub
mov
push
mov
outsb
mov
pop
xor
xchg
rorl
addb
pop
je
lds
xor
mov
es
test
fcompl
in
sarl
mov
bound
testl
dec
jl
pop
mov
or
ret
repnz
mov
and
push
sti
stos
mov
sar
sbb
movsb
mov
pusha
xor
jmp
rclb
pop
jmp
push
push
test
rorb
scas
jae
loop
jecxz
push
cli
ror
inc
lods
stos
bound
nop
dec
sub
jae
insl
sbb
add
inc
je
bound
jp
js
xchg
insb
push
sub
jmp
mov
jne
outsl
mov
jb
lahf
jle
lahf
jno
jecxz
xchg
adc
test
mov
pop
insb
lcall
imul
insb
mov
movsl
cli
fcmove
test
in
ss
sub
mov
mov
dec
or
loope
in
xchg
aam
imul
scas
aas
add
inc
pop
push
fnop
mov
fcompl
xor
int3
mov
push
fs
sub
lret
fs
ljmp
ss
popf
sbb
dec
pop
adc
mov
dec
jl
enter
push
repnz
dec
xchg
pop
movsb
cli
arpl
or
dec
mov
sub
sar
mov
mov
sbb
stos
mov
push
mov
fmuls
bt
dec
sti
pop
sti
sub
xor
popa
inc
loop
pop
in
pop
or
sbbb
push
sahf
sbb
cltd
out
adc
ss
ljmp
adc
adc
addb
and
and
fsts
enter
mov
out
mov
adc
push
dec
dec
xchg
dec
cmp
push
mov
sub
xor
mov
mov
push
das
insl
loope
mov
sub
or
push
shlb
add
xchg
mov
pop
bound
jne
xchg
push
sub
and
lahf
push
lds
adcl
pop
scas
mov
push
dec
mov
scas
aam
sub
ljmp
and
xchg
push
aam
adc
iret
sbb
js
mov
mov
ss
inc
mov
jg
adc
fimull
and
adc
int3
xchg
loope
hlt
dec
loope
andl
dec
das
lahf
mov
inc
sbb
pop
fbstp
lret
rclb
mov
mov
push
cld
jge
insb
mov
mov
loopne
cmp
inc
mov
lcall
add
out
lea
mov
subb
jp
dec
dec
jmp
lret
inc
inc
arpl
popa
lock
cmp
adc
leave
std
jnp
das
icebp
clc
lea
adc
dec
rcl
push
mov
jmp
imul
and
iret
insl
or
sar
arpl
shrl
pop
add
lahf
xchg
or
ja
mov
sarl
pop
inc
sbb
push
adc
lcall
mov
ja
stc
mov
sub
mov
inc
les
push
jg
xor
jne
sub
push
xor
outsb
inc
jl
loopne
jg
insb
sbb
fisubrs
push
sti
pop
mov
and
xchg
xor
push
imulb
scas
mov
aas
aad
inc
xchg
aam
shll
stc
push
mov
jae
lock
rcrl
sub
lock
jg
stc
gs
fcoms
push
daa
add
sti
movsb
mov
cld
loopne
mov
mov
pop
xchg
insl
bound
pop
das
test
push
or
stc
pop
cld
or
sbb
into
nop
imul
sub
add
fmul
jmp
aaa
repz
scas
jno
mov
imul
cld
lcall
ss
pop
inc
fdivr
push
pop
ja
inc
in
mull
outsl
add
pop
push
inc
aad
sub
or
or
mov
jmp
dec
push
test
addr16
sub
daa
sbb
ret
fisubl
xchg
mov
sarb
push
and
mov
xor
loope
sub
xchg
sahf
call
test
or
dec
into
loopne
imul
and
jno
pop
pushf
xchg
pop
sub
pop
gs
cmp
movb
mov
dec
xchg
push
jl
or
cmp
xchg
sbb
adc
adc
repnz
xchg
pop
sahf
jecxz
mov
iret
or
shl
clc
pop
loope
adc
sti
jae
shlb
push
lret
shll
imul
aad
dec
xchg
xor
sub
pop
adc
push
mov
cmp
mov
pop
insl
mov
lahf
ret
push
in
stos
call
cltd
sub
xchg
push
testl
movsl
adc
cmp
test
dec
out
cli
dec
cmp
push
in
adc
pop
jo
jp
shrb
mov
fwait
sbb
idivb
xor
lock
mul
in
daa
pop
cli
sub
int3
cmp
nop
popf
shr
mov
enter
adc
inc
sub
jmp
dec
insl
cmp
popa
mov
pop
cli
nop
in
lods
pop
icebp
mov
shr
into
push
adc
jae
push
xlat
stos
xchg
xchg
ret
mov
leave
shrl
and
ror
ds
pushf
mov
push
mov
movl
jmp
xchg
sbb
add
loope
xchg
and
mov
shlb
scas
mov
inc
cmp
fstpt
shlb
xchg
mov
or
add
xchg
xor
mov
stos
push
xor
adcb
mov
mov
inc
mov
daa
add
xchg
stos
adc
mov
pop
imul
pop
and
ljmp
lods
mov
repz
xchg
aad
pusha
jo
andb
out
add
out
daa
xor
mov
fildll
jp
popf
mov
cli
stos
in
out
aad
repnz
sub
loopne
jg
jle
sarb
ss
mov
push
sti
out
mov
jno
ljmp
fwait
lea
jns
outsl
fisttps
or
mov
inc
mov
or
aaa
add
es
rcr
push
push
inc
mov
mov
cli
dec
lock
xchg
mov
pushf
cli
idivb
popa
push
jp
and
and
mov
xchg
inc
rol
lcall
nop
rcll
outsb
xchg
out
enter
pop
push
pop
xchg
nop
mov
loop
and
xchg
mov
dec
je
xchg
mov
dec
scas
sub
pop
dec
lods
push
add
data16
adc
ficomps
add
cltd
inc
mov
mov
pop
daa
xor
mov
call
mov
popa
cmpsl
shrb
and
mov
sub
std
pop
lcall
jmp
sbb
mov
in
mov
movsl
mov
mov
cmp
xor
in
fbld
or
scas
mov
inc
jne
push
mov
push
frstor
and
mov
sbb
std
mov
mov
lret
rorl
popf
dec
cs
ret
clc
mov
or
push
pop
cmpsl
mov
mov
insl
hlt
sbb
nop
aas
sti
ss
aad
movsl
test
loopne
cmp
xor
dec
das
push
xor
mov
gs
xchg
lret
jecxz
fcoml
mov
inc
mov
imul
loopne
fmul
fwait
aad
mov
imul
mov
fcompp
jo
and
mov
int
jbe
sub
data16
popa
xor
hlt
adc
cmp
mov
cmpl
ds
and
popf
ret
fadd
pop
push
sbb
sub
lods
and
rclb
mov
out
fmuls
push
pop
cmp
mov
add
push
mov
push
or
mov
pop
add
insb
mov
clc
mov
fsubrs
push
xchg
insl
or
addb
test
mov
cmp
push
pop
pusha
pushf
pop
adc
insb
dec
dec
mov
movsl
test
les
inc
push
dec
dec
sub
jo
iret
xchg
insb
insl
loopne
outsb
insb
jno
fildl
sbbb
adc
push
imul
test
lds
int3
mov
jmp
je
fisubrl
xorl
aaa
inc
mov
sti
sbb
inc
xchg
stos
repz
add
outsl
and
inc
jb
dec
enter
mov
in
xchg
add
xchg
int3
fs
ret
xlat
sub
or
ss
shrb
ds
mov
imul
and
mov
inc
sbb
insb
cmp
out
cmpsl
inc
push
fisubrl
cmp
pusha
fdivr
movsb
mov
xchg
aaa
dec
sbb
mov
fwait
mov
dec
cmp
lock
jnp
jecxz
pop
ret
nop
roll
cmp
xchg
test
repz
mov
mov
inc
lcall
or
popf
int3
mov
inc
lods
lahf
push
mov
iret
adc
out
out
jmp
add
test
ss
xor
neg
or
les
jle
outsl
adc
shr
mov
test
popf
pop
int
loopne
cmp
lods
jmp
pop
ret
dec
adcl
cmp
push
jle
outsl
inc
mov
ds
inc
add
cmpsl
pop
add
imul
scas
cmp
add
jae
lret
mov
adc
pop
das
mov
push
addb
cwtl
mov
pop
or
lahf
mov
adc
inc
push
pop
out
leave
jle
pop
mov
xchg
fldenv
movsl
mov
lods
ret
stos
and
mov
add
dec
jns
mov
cmp
fcmovne
cmp
mov
cli
sub
xchg
mov
movsb
inc
rcrl
mov
push
add
sub
push
mov
push
lods
add
ret
xlat
or
xlat
lods
hlt
sbb
movsl
idiv
arpl
dec
jmp
pop
lret
jno
shl
jge
dec
or
cmp
and
xchg
mov
pop
push
daa
mov
cmpsb
stos
imul
sbb
ficomps
in
mov
jmp
or
hlt
popf
or
in
adc
out
pop
add
fiaddl
stos
outsb
mov
sub
stc
test
and
lcall
int3
sahf
nop
jo
inc
push
shlb
adc
adc
inc
and
cwtl
pop
xchg
imul
and
add
sbb
lods
les
lock
lea
xlat
xor
cld
clc
scas
cmp
das
push
lods
pop
int3
imul
imul
pop
fistpll
mov
add
scas
cli
jo
les
and
xor
jnp
mov
lahf
test
fcmovbe
cmp
and
mov
push
jp
xchg
pushf
div
and
fldl
sbb
out
pop
sub
push
fwait
dec
lds
or
mov
aas
loop
inc
inc
mov
cmp
fadds
or
int3
xchg
dec
cmc
clc
les
mov
xor
push
in
mov
fiaddl
push
xchg
mov
jp
mov
sub
pop
mov
xchg
pop
shll
jecxz
das
dec
push
jmp
in
inc
xchg
cmc
jge
ret
mov
sbb
out
insl
imul
mov
inc
out
test
pop
push
adc
add
cmp
cmovo
sub
cmpsb
mov
and
cld
xchg
mov
jo
outsl
sub
pop
jbe
and
pop
fsubrl
push
decb
clc
leave
jno
xor
inc
pop
dec
push
lds
and
std
clc
xchg
inc
jbe
mov
test
shlb
pop
pop
repnz
repz
and
lcall
fisttpll
int
mov
sbb
ljmp
les
repz
mov
adc
push
dec
rcrb
push
inc
je
enter
mov
push
sub
xor
repz
aad
jge
mov
cmp
push
daa
pop
mov
addr16
pusha
lcall
jno
fldt
repnz
xchg
bound
cld
jns
and
nop
or
push
add
cltd
inc
and
pop
mov
add
cmpsb
pop
and
loope
into
bound
loop
jb
sub
xor
loop
mov
fisubrl
arpl
or
add
and
lcall
stc
xchg
mov
popf
dec
or
dec
jmp
mov
rcl
daa
sub
in
popf
add
mov
mov
mov
lds
rcll
xlat
lret
sbb
xor
xchg
or
cmp
insl
loopne
in
mov
jge
data16
sbb
cmp
test
mov
in
clc
mov
xor
jns
shll
inc
ja
pop
fs
test
test
mov
push
aad
xchg
fisubl
push
adc
jae
sbb
inc
sub
cli
data16
loopne
inc
mov
xchg
adc
dec
stc
lret
fdivl
lock
outsl
aad
stc
mov
loopne
jae
test
mov
push
xchg
data16
insb
lret
movsb
mov
enter
das
cmp
sub
mov
cmp
sub
cwtl
sub
and
pop
push
icebp
test
shr
jmp
pop
dec
jo
outsb
jnp,pn
test
aaa
mov
ret
out
imul
sub
sub
pushl
xor
lods
mov
imull
xchg
lret
decb
xchg
xchg
xchg
jge
stc
out
jb
jmp
push
or
lret
mov
shlb
cmp
pop
sub
adc
sbb
ret
jno
movsb
rorl
pop
pop
hlt
xlat
ret
dec
sub
cmp
xchg
in
fstl
push
or
loopne
mov
lret
jo
js
inc
sbb
movsb
cmp
es
pop
fcompl
and
dec
icebp
xor
push
movsb
out
lea
adc
add
mov
push
xlat
fwait
bound
jnp
or
mov
mov
daa
test
popa
outsl
shll
or
ja
and
lock
icebp
dec
cwtl
sbb
add
lods
lds
pushf
sarl
mov
fdivl
iret
popa
add
adc
fwait
pop
outsb
idivb
mov
btr
xorl
sub
dec
mov
jl
outsb
mov
rcr
shlb
pusha
lods
push
xor
xchg
mov
push
push
jmp
adcb
testl
sbb
sub
adc
in
stos
mov
loop
xchg
push
and
adc
ret
adc
adc
cli
repz
mov
sbb
aad
lods
jnp
data16
out
or
out
mov
mov
pop
mov
ret
mov
enter
xor
cltd
enter
push
jp
jecxz
nop
lret
or
es
lock
sti
dec
test
sub
pop
cli
mov
sub
xor
adc
andl
push
sub
jg
push
sub
cmp
jge
sub
lret
lds
adc
sti
cmpl
fcmovnb
jecxz
enter
in
mov
mov
xchg
daa
repnz
xor
push
push
adc
fistl
xchg
lds
sbb
out
mov
mov
lock
or
sahf
ja
pop
les
gs
adc
cmc
cmp
and
fstpl
jmp
push
jbe
inc
pop
fadds
shlb
cmp
mov
jno
dec
sbb
push
cmpsb
adc
mov
pop
mov
mov
xlat
icebp
xchg
lock
fildll
mov
test
adc
xor
pusha
mov
xchg
mov
xor
repnz
mov
xchg
mov
imul
mov
mov
fimuls
arpl
lcall
xchg
inc
lock
lcall
push
inc
mov
lcall
dec
arpl
mov
shll
outsl
mov
loope
ja
les
outsl
aaa
inc
mov
cmp
sbb
jp
cmp
pop
lret
jl
call
out
pop
jne
dec
pushf
and
add
and
cltd
aam
sbb
and
mov
sbb
adc
arpl
inc
lods
pop
mov
mov
dec
dec
inc
cs
cwtl
icebp
push
dec
pop
or
mov
sbb
adc
fisttpl
jne
lahf
sbb
rorl
jne
out
xchg
fnsave
test
int3
outsl
ret
das
lock
ss
mov
movsb
pop
jl
es
inc
fcoml
push
push
adc
sti
cmp
push
pop
add
sub
mov
push
cmp
fisttpll
lds
test
adc
call
pop
dec
cwtl
inc
lods
push
mov
movsl
cmp
jl
cvtps2pi
cmpb
shll
inc
in
stos
out
data16
push
dec
addb
stos
push
rolb
lret
pop
mov
jg
iret
gs
jae
dec
pop
loopne
lcall
divb
insb
mov
push
add
mov
pusha
cmc
xchg
dec
shl
mov
cmp
push
repz
vxorpd
adc
push
pop
in
je
cmpsl
data16
rolb
cmp
pop
js
push
xor
push
test
jmp
ljmp
xor
cmpsb
fucomip
popf
lret
dec
push
std
inc
shl
in
js
xor
fcomi
pop
mov
xor
jne
push
xchg
xchg
sbb
int3
lods
adc
cwtl
cltd
adc
popa
lea
int3
je
mov
outsb
lret
dec
mov
xchg
pop
or
pushf
mov
lahf
mov
jmp
xchg
cmp
idivl
jge
mov
push
pop
ss
psrld
aam
mov
cld
cmpsb
test
test
adc
xchg
cltd
or
mov
dec
cmp
mov
mov
mov
adc
adc
inc
push
movsb
pop
int
mov
testl
lock
das
inc
cmp
stos
lret
dec
lds
nop
out
cli
das
roll
test
adc
inc
enter
addr16
add
pop
mov
mov
fbstp
sti
lods
mov
movsb
xchg
aas
fnstsw
gs
aam
adc
je
or
notl
dec
aad
aas
push
outsb
dec
sbb
ret
fcoml
jg
fcompl
stc
mov
xchg
cmpsb
in
sbb
call
aam
mov
jge
sarb
jb
or
notb
jle
jmp
mov
sub
mov
mov
repz
jmp
clc
xchg
testl
mov
icebp
scas
push
jmp
mov
jbe
movsb
jnp
rcr
xorb
xchg
jge
je
mov
aaa
xchg
cmp
cmp
dec
push
repz
dec
into
lret
jl
fadd
or
fildll
stos
mov
sub
aad
daa
out
xchg
std
push
sti
adc
inc
ror
push
cmpsb
pop
pop
addb
jno
movsl
sti
out
sbb
adc
fsubrl
mov
mov
add
movsb
sbb
scas
pushf
sti
ffreep
fists
jnp
sbb
sbb
mov
mov
fcompl
push
adc
pop
jle
adc
lahf
jecxz
jo
sbb
and
and
dec
fsubp
std
daa
movsl
xchg
std
loope
xchg
or
aad
and
inc
jp
sbb
in
jge
inc
inc
inc
jmp
inc
push
insb
filds
pusha
sub
add
xor
jnp
pop
adcb
repnz
stos
sub
idiv
mov
adc
mov
sahf
add
out
add
test
in
cmp
je
sub
push
fistps
lret
hlt
xchg
push
pop
std
rolb
in
mov
idivl
jg
jnp
out
inc
pushf
mov
jne
lea
sub
lock
repz
leave
inc
popf
rolb
cmp
or
into
sub
pop
ret
popa
or
lahf
repz
mov
and
sub
pop
jns
stos
sti
shlb
cmc
adc
daa
add
mov
inc
jnp
rcrb
xchg
add
out
dec
push
adc
pop
add
push
ret
adc
inc
lret
and
push
out
mov
pop
mov
lahf
mov
cmc
sbb
aad
xor
sbb
inc
xor
je
outsl
jle
pop
les
pop
jl
dec
or
fwait
mov
scas
sarb
pop
lea
imul
xor
incb
cmp
xor
sbb
lock
dec
or
xlat
xor
ficompl
mov
xchg
in
movsl
shr
test
xchg
mov
loopne
je
fprem1
cmp
mov
lret
aad
jl
nop
jp
fucomp
or
sub
clc
push
xor
cld
scas
mov
mov
sbb
loop
xor
loopne
pusha
jo
lock
push
sbb
or
jnp
adc
in
pop
das
in
and
stos
sahf
in
dec
pop
add
clc
jno
pop
out
leave
pushf
out
xor
mov
xor
fwait
fwait
jnp
sub
ss
dec
mov
push
sbb
and
and
and
rorl
ficoml
inc
das
or
fdiv
mov
ret
call
fs
lds
repnz
imul
and
test
les
cmp
xlat
mov
les
mov
sbb
pop
pusha
fistpll
sub
xor
lea
xor
cmp
loop
movsb
in
add
inc
inc
test
xchg
mov
ret
mov
in
pop
mov
mov
insl
jmp
ja
jne
adc
jecxz
mov
repnz
ret
or
in
insb
fdivrp
mov
pop
pop
inc
or
and
adc
addb
cli
ret
cmp
xchg
add
and
std
scas
cmp
fs
push
jb
mov
in
incb
imul
add
cwtl
dec
data16
xlat
dec
mov
aam
cmp
repnz
xlat
inc
mov
sub
daa
xchg
cmp
mov
mov
js
fsubs
xlat
cmp
lods
jmp
or
stos
mov
dec
adc
pop
xor
in
inc
insb
jbe
jecxz
or
imul
mov
fdivrl
jmp
mov
repnz
cmp
mov
and
mov
pop
sbb
popw
dec
fstpl
movsl
pop
xor
push
fbstp
jb
loop
xchg
adc
sub
jno
jmp
xchg
sti
and
repz
test
cmp
stc
cli
add
imul
and
call
lret
push
xor
xchg
rclb
xor
mov
cmpsl
and
jge
test
leave
clc
push
out
mov
mov
in
into
sbb
arpl
sbb
xor
xor
adc
add
mov
jb
cmp
nop
mov
out
repz
mov
cwtl
cmp
adc
inc
stos
mov
out
shrl
mov
jne
out
pop
aaa
scas
jecxz
lea
cmc
aam
shrl
pop
or
mov
dec
mov
loope
out
arpl
inc
pusha
add
xor
or
fsubs
dec
iret
jae
xchg
leave
inc
scas
scas
sub
imul
jp
and
hlt
push
xchg
pop
mov
loop,pn
leave
jl
jge
lret
mov
xchg
inc
test
fildl
sti
test
mov
outsl
stos
cmpsl
sbb
test
orl
mov
inc
adc
arpl
adc
roll
out
xchg
outsb
sti
sbb
lods
adc
and
cmp
mov
cmpsb
sbb
cmpsl
cmpsb
std
cmp
fmul
mov
mov
loopne
add
inc
jmp
andb
xor
aad
mov
idivl
dec
fadds
cmc
or
sti
repz
xchg
xorl
mov
ret
mov
inc
lcall
mov
insl
add
into
dec
pop
adc
mov
cmc
dec
cmp
inc
hlt
hlt
arpl
dec
push
mov
add
mull
lret
jl
ret
mov
inc
jnp
test
pop
jnp
leave
inc
sbb
ret
inc
push
out
lret
cli
push
movsl
popa
cmp
loope
popf
out
daa
pop
jle
in
pop
lock
pushf
push
add
dec
dec
jmp
xlat
jecxz
int
mov
xchg
mov
movl
sub
test
cmp
sbb
mov
cltd
out
js
dec
ja
jmp
scas
push
ds
test
xor
add
cmp
dec
mov
xchg
clc
push
shrb
leave
or
fs
js
lds
mov
push
add
xchg
jmp
push
dec
adc
in
les
cmp
or
outsb
pop
or
and
test
stos
mov
mov
sub
jl
lret
test
shrl
sti
fcoms
inc
out
mov
mov
jle
stos
xchg
mov
add
mov
xor
dec
inc
add
sub
cmp
sbb
and
in
sahf
sti
call
fsubr
scas
pusha
into
in
mov
in
lret
stos
xchg
pop
dec
test
and
into
lods
bound
xchg
mov
pop
aaa
enter
pop
sbb
fldenv
insl
push
in
xchg
sti
or
sub
push
pop
mov
mov
mov
rdmsr
ret
lock
out
jecxz
xchg
ret
sarl
push
mov
lods
mov
hlt
push
insl
enter
test
xor
data16
lds
rcr
js
jno
jle
int3
xchg
movsl
cs
inc
xorb
adc
movsb
xchg
ja
and
jp
add
emms
into
mov
xor
adc
pop
sbb
dec
popf
pop
cwtl
mov
and
xor
sub
bound
orb
inc
adc
es
in
insb
push
xchg
jp
xor
jl
nop
sub
push
mov
dec
add
mov
mov
pop
jg
lods
adc
pop
jp
lock
cld
sbb
loope
mov
adc
fsubp
jno,pt
js
add
xchg
cli
sbb
clc
pushf
mov
pop
test
hlt
cli
insb
xor
sahf
mov
or
ficomps
je
cmpsb
pop
cmp
jns
jl
sub
adc
pushf
mov
lds
stos
add
pop
sarb
cmpsl
sbb
mov
add
cwtl
mov
sbb
scas
fistl
cwtl
dec
adc
lods
imul
cmp
cmp
adc
js
xlat
mov
int
cmpsb
out
lea
adc
popf
mov
aaa
xchg
lret
xchg
push
jmp
inc
lods
mov
int
addb
int3
inc
loopne
fisubs
or
jnp
arpl
cmp
or
xor
daa
pusha
lods
idivl
cmpsb
ffree
dec
adc
add
inc
mov
mov
xor
scas
roll
icebp
pop
and
pop
out
enter
and
mov
sti
shrb
or
xor
sahf
cmpsb
mov
and
cmp
scas
pop
lds
nop
es
out
fwait
mov
cmp
mov
data16
out
add
aad
fistl
subb
adc
cltd
bound
hlt
jg
adc
push
lcall
pop
adc
outsl
sub
xchg
push
push
hlt
arpl
cli
inc
data16
jnp
dec
outsb
or
push
arpl
decl
cmp
loopne
out
jmp
loope
into
stos
sub
shlb
bound
mov
mov
inc
mov
xor
cmpsl
mov
sub
jle
std
rolb
pop
cmp
in
mov
mov
test
iret
sbb
jns
add
cmc
adc
sub
or
adc
js
fisubrl
fidivs
leave
pop
xchg
adc
repnz
xor
xchg
lock
xor
pop
and
jp
scas
xor
scas
dec
out
rorl
jecxz
add
or
mov
arpl
mov
sbb
insl
ret
pop
rolb
sub
pop
into
lret
push
out
push
bound
sbb
xchg
sti
testl
mull
jns
cmp
ja
imul
adcb
sbb
mov
mov
dec
shrl
mov
lea
xchg
mov
out
sub
pop
fbld
fsts
mov
out
popf
out
fsub
rcl
xor
mov
test
insb
xchg
push
js
mov
add
mov
jmp
cli
pop
stos
sub
cmp
pop
fistpl
add
cmpsl
xlat
adc
and
jl
rcrl
cmpb
jns
lcall
pop
inc
vpmacsdql
push
fsub
pop
push
jg
pop
or
shll
xor
inc
cmp
test
xor
clc
xor
int
shll
xchg
cmp
add
or
xor
push
movsb
test
mov
fwait
or
in
jl
icebp
add
jg
pop
iret
mov
pusha
push
fmull
pop
fdivp
insb
pop
mov
xchg
hlt
dec
jp
pusha
faddl
stos
repz
dec
add
mov
fisubrs
cwtl
sahf
jne,pn
add
and
or
xor
outsb
in
pop
seta
jns
pop
or
push
add
or
mov
aaa
cltd
lcall
adc
pusha
dec
cli
cmp
or
movsb
scas
mov
or
dec
gs
or
lret
subb
pop
and
test
cmp
repz
push
fnsave
xor
das
cld
into
mov
mov
out
and
repz
out
jne
pop
push
movsb
push
dec
xchg
call
jmp
inc
jmp
jae
and
and
cld
jl
sbb
leave
add
inc
lods
xchg
ljmp
push
fmuls
or
xor
fildll
bts
xchg
cwtl
outsl
js
enter
lods
lret
xchg
jecxz
loopne
lea
jecxz
fdivs
push
test
mov
mov
jle
ljmp
mov
push
mov
and
push
inc
jg
push
pop
mov
add
roll
mov
outsl
loope
das
lcall
mov
outsb
jmp
or
sub
push
inc
add
fs
in
js
jl
dec
or
xchg
mov
or
data16
dec
sarb
test
jl
or
scas
hlt
dec
jge
test
inc
jge
add
sub
mov
stc
stos
lcall
mov
xchg
xor
es
xorl
inc
adc
cld
dec
cli
mov
mov
std
cmp
pushf
cs
std
dec
shrl
lock
aas
and
or
cmp
push
mov
cwtl
lcall
lds
push
mov
sub
lods
jp
orl
les
inc
cmp
xchg
xor
ss
sbb
stos
mov
loop
lret
add
lahf
ret
push
js
fiadds
ret
dec
cmpsl
mov
jae
test
add
xchg
jae
pusha
rolb
adc
sarl
das
push
xchg
rolb
push
pop
push
aad
cmp
push
fbstp
jae
mov
and
xchg
out
adc
xor
test
ds
lock
xchg
data16
cmp
or
inc
jns
adc
mov
xor
sub
push
xchg
fptan
cs
pop
ds
push
ss
popa
mov
shll
aad
iret
popa
shll
pusha
lods
nop
pop
push
jbe
loope
pop
xchg
sbb
inc
popa
pushf
mov
xor
pop
outsb
and
add
mov
stos
out
and
aad
xorb
mov
cmc
sbb
out
adc
stos
jae
cmpsl
mov
pop
jnp
or
int3
adc
and
sbb
jns
loope
cwtl
add
dec
in
jle
sahf
imull
mov
leave
lods
mov
jno
and
dec
cmp
addr16
das
arpl
out
xchg
movsb
adc
daa
inc
adc
insb
inc
push
xchg
and
mov
mov
sahf
lret
inc
dec
cmc
add
mov
adc
sub
or
add
pop
ficompl
mov
push
pop
idivb
lret
arpl
aam
cmpsb
les
lcall
xor
and
sbb
jmp
mov
inc
mov
cmp
movsb
iret
mov
out
add
adc
testl
add
adc
xchg
lahf
shrb
pop
mov
mov
mov
mov
popf
outsb
sahf
outsl
mov
mov
add
outsb
mov
push
push
movsb
aas
aam
data16
fs
loope
jge
test
sbb
mov
bound
test
daa
inc
cmpsb
adc
mov
adc
loope
icebp
popa
pusha
cwtl
in
movsl
cmp
jecxz
add
adc
movsb
jecxz
cli
push
popa
push
sub
mov
lds
sub
dec
jge
mov
loope,pt
xchg
enter
or
and
mov
mov
je
sahf
cmp
mov
fstpl
sub
lds
mov
std
or
push
mov
push
aam
and
test
and
aad
fwait
mov
xor
insl
push
subb
scas
shlb
inc
push
stc
out
sub
push
je
mov
xchg
popa
subl
pop
mov
or
pop
inc
add
dec
add
add
sbb
aas
sbb
lahf
jb
xchg
mov
push
insl
nop
mull
sbb
add
and
das
rclb
lret
int3
lret
repz
push
push
and
adc
mov
adc
test
ret
fiaddl
lds
iret
mov
das
jbe
shll
ret
mov
xor
or
or
pop
or
lods
push
inc
xchg
mov
mov
lds
sub
cld
test
push
mov
cli
out
push
jno
mov
add
dec
push
sbb
orl
pop
mov
pushf
sbbl
out
jb
ret
xor
inc
into
and
jb
pop
int
pop
sti
jl
jmp
cmp
cmc
xor
mov
cmpsb
faddl
inc
dec
in
lahf
mov
js
xchg
xor
push
sbb
cld
rorl
es
movsb
cld
test
sahf
repnz
mov
push
cmp
jmp
adc
lea
dec
fs
pushw
cmpsl
rcrb
inc
adc
jg
dec
outsl
pop
loop
mov
inc
leave
jl
push
jp
sbb
dec
pop
or
rcll
fsubrs
cmp
adc
cltd
loop
frstor
mov
jg
cmpl
call
lock
dec
ljmp
insb
arpl
out
ja
or
cmp
movsb
movsb
test
push
mov
inc
sbb
sub
fcomps
xchg
xchg
inc
jge
sub
orl
jne
fisubrl
add
jle
aaa
jb,pt
jmp
pop
addr16
sub
subl
fld
pop
fbld
pop
sub
fists
xchg
arpl
push
jbe
jle
or
lret
es
pop
insb
mov
mov
cmp
jno
or
mov
mov
inc
pop
mov
sarb
dec
in
jae
popa
std
mov
xchg
cbtw
inc
int3
dec
sub
aad
adc
sub
pop
clc
dec
xor
mov
imul
popa
mov
ficompl
sarl
cwtl
pop
jp
popa
add
aas
pop
lds
add
dec
movsl
pop
push
test
es
iret
clc
lods
adc
popf
mov
insb
sbb
clc
sbb
iret
nop
xchg
dec
jb
xchg
jo
xchg
pop
ret
call
sub
out
xor
sub
push
pop
xchg
pop
adc
daa
out
xor
xor
fwait
and
clc
repnz
jns
pop
loopne
rcrb
push
mov
sbb
sub
inc
mov
in
adc
fisubl
es
popa
in
test
push
stos
mul
pop
addr16
cmpsb
js
add
icebp
pop
shl
and
testl
push
adc
inc
dec
pop
sti
aam
and
cltd
add
jns
repz
repz
pushl
popa
jg
int3
in
mov
jno
xchg
add
nop
int3
sbb
aas
into
sbb
fs
xchg
decl
scas
outsl
mov
mov
pushf
xchg
push
fucom
notb
aas
push
hlt
dec
aam
jge
test
in
stos
shrb
push
iret
mov
inc
jno
mov
push
mov
xor
ficomps
push
mov
imul
int3
adc
shl
pop
imul
and
movsl
adc
jnp
jae
roll
scas
iret
into
or
xlat
or
pop
fmuls
in
or
fldt
jge
dec
icebp
cmp
daa
xorl
jge
scas
je
sbb
lods
mov
movsb
je
pop
sub
jg
xchg
xchg
xchg
pop
pop
mov
imul
xor
push
xchg
inc
push
pop
and
aas
mov
and
xor
lds
out
sub
das
repnz
lods
shl
in
ja
add
and
int3
jbe
mov
sbb
jecxz
jge
mov
inc
adc
jg
loopne
mov
xchg
imul
cmp
or
add
lods
stos
or
insl
add
test
sub
pop
movb
push
cmovo
test
stos
mov
jle
add
add
cmp
fidivrl
insl
sub
lods
fdivr
jne
xor
xorl
push
xlat
pop
js
imul
mov
jge
frstor
mov
filds
ret
enter
xchg
push
sahf
mov
in
ret
les
lcall
sub
jge
inc
lret
lods
sub
push
loopne
jp
fisttpl
dec
aas
addb
jnp
dec
scas
fistl
rcl
insb
pusha
xchg
dec
adc
test
divl
rcr
jb
jg
in
inc
cwtl
fdivl
iret
insl
xchg
lret
mov
jbe
jo
and
ud0
fadds
sub
and
or
cmp
pop
ja
fidivl
adc
xchg
test
test
inc
lret
ret
xor
xor
outsb
adc
dec
xor
out
cmp
cmp
ret
jl
inc
loopne
ja
xchg
xor
and
fsubl
xor
lods
test
or
jne
pop
jb
stos
sbb
push
xor
push
pop
push
or
jbe
push
int3
adc
into
and
ror
aam
jge
aam
loop
and
jns
cmpsl
ljmp
int3
sbb
push
sub
imul
lret
iret
jno
mov
icebp
inc
lods
cmp
pop
aad
arpl
fdivl
ds
xchg
dec
lds
ret
pop
mov
pop
adc
scas
adc
pop
push
inc
scas
out
jp
and
mov
push
add
hlt
sub
stos
js
mov
and
cwtl
stc
push
int3
sub
int
int3
aaa
push
or
aam
and
jnp
adc
fstpt
sub
xchg
cmp
and
push
xchg
iret
dec
mov
fcom
xorl
cmp
mov
jle
rclb
add
and
adc
xchg
push
in
dec
outsl
imul
insb
add
jo
mov
int3
fidivrl
sbb
fisubl
sub
add
xor
nop
lods
and
mov
mov
je
adc
lds
daa
cmp
push
orb
rcrl
inc
dec
jnp
mov
les
or
popa
daa
pop
or
xlat
mov
fwait
out
pop
mov
sti
mov
pop
inc
pop
inc
xor
jecxz
popa
cs
iret
jo
out
adc
mov
imul
push
sbb
shll
cmp
xor
sub
stc
mov
or
mov
mov
fstp
cmpsb
jle
push
mov
cmp
mov
xchg
and
and
mov
ss
jl
mov
mov
add
mov
cmp
nop
xor
int
mov
xchg
xor
mov
fs
cmpsb
push
fstpl
or
inc
stos
mov
mov
dec
test
stc
pop
in
sub
nop
mov
mov
or
push
es
mov
sub
and
ret
push
neg
inc
nop
mov
cmp
pop
sbb
test
stc
movsb
daa
movsb
inc
cwtl
notb
aaa
pop
adc
push
decb
sub
push
or
pop
dec
cli
or
mov
push
cmp
mov
call
pop
loopne
jns
push
sahf
ret
mov
mov
fdivl
push
inc
pop
fiadds
iret
push
out
enter
jne
outsl
out
in
bound
hlt
bound
cmc
sahf
jg
mov
mov
pop
xor
cwtl
xlat
push
ret
dec
add
stos
popa
or
stc
xchg
dec
repz
popf
out
sbb
lahf
dec
sub
cmpsb
lds
jnp
cmpsl
pusha
or
mov
aaa
ret
xor
add
dec
fmul
cmp
stos
outsb
xlat
push
shll
rorl
outsl
xchg
push
sahf
mov
ss
stc
jmp
popf
xor
add
add
popa
lahf
mov
fwait
dec
xchg
inc
sbb
pop
jge
andb
push
sub
xor
jb
stc
cmp
jbe
shrb
and
jg
dec
fldl
mov
cmpsl
pop
xchg
mov
cs
sub
jne
in
mov
push
lods
adc
dec
or
je
push
xchg
pusha
cli
dec
loopne
sbb
dec
sbb
sbb
pop
ret
push
add
and
cmp
pop
push
jns
loop
les
nop
ret
pop
mov
pushf
jno
xchg
mov
nop
cmpsl
in
popf
adc
xor
std
jg
inc
and
cmp
mov
inc
sbb
ror
scas
loopne
xchg
push
aam
lahf
push
in
lcall
sbb
dec
push
ja
and
jge
aaa
push
cmp
test
lds
enter
jmp
add
inc
mov
push
jbe
lods
stos
lcall
mov
or
and
movsl
out
pop
push
shr
xlat
imul
or
sub
fwait
push
lods
push
flds
std
movsl
xchg
imul
inc
push
int
pop
xchg
je
hlt
adc
out
jle
popf
sub
cmp
decb
fmulp
mov
sbb
jo
jae
iret
sub
leave
inc
mov
pop
mov
lret
xchg
jmp
adc
mov
repnz
testl
mov
mov
out
adc
or
test
cld
stc
push
rcrl
out
add
add
pop
sbb
fiadds
push
xlat
pop
daa
pop
or
inc
imull
and
ja
je
sbb
icebp
pop
pop
pop
call
scas
adc
jne
loopne
data16
mov
outsl
adc
mov
insl
fldcw
js
lods
gs
sub
dec
or
mov
xor
clc
stos
push
sbb
or
pop
cmpsl
sbb
push
jecxz
ljmp
mov
or
and
hlt
xor
or
fistpl
mov
scas
xchg
ret
ljmp
stc
fisubs
daa
and
scas
xlat
mov
daa
sub
daa
xor
sub
jne
push
insb
xor
mov
sarl
shr
mov
xor
xchg
dec
outsl
adc
pop
mov
cmp
aad
jecxz
inc
mov
bound
test
cltd
das
cld
callw
shll
jb
jmp
xchg
stos
test
ffree
dec
stos
dec
mov
push
fstl
adc
in
int
adcl
xor
fwait
cmp
hlt
insl
inc
cwtl
leave
out
psubusb
inc
push
mov
int
rcr
gs
mov
pop
lods
gs
dec
push
jb
divb
xor
mov
jnp
sub
fsubr
sbb
fdivl
fisubs
out
inc
std
fsubrl
and
nop
xchg
sbb
aam
insl
dec
xchg
xor
adc
adc
imul
cmp
pop
mov
rclb
stos
cmp
loopne
in
push
inc
cmp
test
or
pop
push
push
aad
pusha
pusha
test
insb
lahf
rcll
jns
loop
loop
scas
pop
ret
push
int
pop
sub
adc
push
inc
cwtl
mov
int3
xchg
or
test
test
lcall
mov
out
pop
rcll
les
and
push
xor
push
xchg
dec
dec
inc
sbb
hlt
leave
div
cmp
push
xlat
and
dec
lret
cltd
dec
add
mov
dec
lcall
or
pop
or
test
in
movsl
nop
and
mov
mov
mov
shll
jo
fs
shrb
aad
push
lret
sahf
les
inc
in
push
jle
loop
cmpsl
sbb
sti
xor
ret
into
pop
lods
pop
jmp
cmp
xchg
mov
push
js
jecxz
cmpsl
and
adc
push
mov
pop
and
adc
add
sub
xorl
xchg
mov
jp
mov
js
stos
in
mov
scas
mov
pop
sbb
push
stos
fstpl
adc
sbb
test
xlat
imul
pusha
lcall
inc
and
and
and
adc
mov
inc
jae
pop
jns
fwait
mov
pop
jl
mov
dec
push
rorb
outsb
sub
mov
push
lods
repnz
insl
ja
push
lret
cmp
subl
lea
lret
in
iret
mov
shll
xchg
loope
ja
mov
adc
rcrl
dec
or
stc
addr16
fcoms
push
subb
xor
adc
movsb
jp
loopne
and
sub
int3
xchg
xor
mov
jecxz
out
ret
shll
stos
dec
lret
inc
pusha
je
push
aam
cmpsb
lret
sub
jae
ljmp
das
pop
fsubs
pop
push
and
mov
sbb
cmpsb
push
test
test
push
cwtl
pop
loop
ret
je
mov
jmp
xor
repz
fmuls
jb
xchg
push
jbe
and
jmp
pusha
xor
push
jbe
lret
adc
rcll
or
pop
movsl
lahf
ljmp
lcall
cmpsb
pusha
mov
jbe
dec
cmp
or
es
xchg
xchg
stos
push
fldcw
stc
loopne
out
loope
lea
cmp
sti
add
mov
and
sbb
sbb
cmp
inc
rcll
xchg
or
and
xchg
sti
adc
adc
jmp
aas
ret
add
push
xor
xchg
icebp
and
adc
loopne
pushf
stos
ret
sub
cmovb
add
pop
mov
dec
daa
inc
and
pusha
mov
xchg
mov
call
adc
shrb
add
add
jns
stc
movsl
inc
movsb
dec
pop
imul
lret
test
daa
pop
or
cmp
mov
xor
jo
nop
aad
push
mov
or
lret
sub
push
adc
daa
mov
in
cmp
xor
das
cmp
cmp
bound
pushf
outsl
scas
jmp
mov
mov
insb
pushf
push
popa
cmpsl
fs
lahf
xchg
pop
and
xor
stos
xchg
xor
pop
or
sbb
popa
ljmp
fs
dec
mov
sbb
and
push
sbb
sub
inc
xchg
lret
or
enter
inc
hlt
cmp
add
pop
fldlg2
cmpsl
xchg
out
sti
cmp
cmpl
pop
xor
pop
push
in
cmp
pushf
jmp
iret
sub
loop
cwtl
sbb
popa
xor
test
mov
clc
and
std
inc
popf
pop
xor
cmove
mov
sbb
pop
xor
nop
insl
lock
mull
int3
lret
mov
add
mov
cltd
inc
lret
or
lahf
stc
imul
push
or
or
jle
inc
lret
push
imul
popa
adc
jb
push
pop
push
or
sbb
test
xchg
out
push
or
jmp
mov
lret
mov
push
sbb
loop
push
jg
jg
aad
insl
movsb
cli
lret
je
outsl
xchg
scas
pop
push
mov
and
add
shr
out
fwait
xor
push
cmp
push
push
in
lea
or
jge
dec
cld
insb
push
or
pop
xchg
icebp
mov
rcrl
jl
and
or
lcall
test
addb
cmp
scas
cmp
jns
adc
cmpsb
inc
and
lock
stc
test
xlat
adc
inc
pop
and
xchg
ret
mov
dec
adc
xchg
cs
jl
xor
jg
jecxz
or
or
movsl
iret
or
icebp
icebp
pop
xchg
xor
filds
int
mov
sahf
jge
or
xor
rcrb
lea
push
aas
ja
sarb
or
add
ss
push
inc
jns
xchg
jge
jmp
mov
adc
jae
call
sub
mov
mov
xchg
aad
xchg
cmp
xchg
movsb
imul
mov
les
mov
loop
fsubl
add
cld
or
push
lret
fists
jl
mov
iret
or
mov
fisubrs
test
js
enter
gs
out
sar
rcl
addb
pop
mov
fmull
push
xor
mov
sbb
push
push
pop
lods
jne
scas
pushf
xchg
pop
pushf
fwait
nop
sbb
mov
dec
xchg
fs
pop
daa
lods
xchg
hlt
sub
dec
cmp
clc
test
xchg
scas
ficomps
dec
out
push
sbb
rcrb
dec
sti
sbb
dec
lea
push
sub
pop
or
icebp
push
in
or
icebp
mov
adc
fs
pop
sbb
fdivs
xor
popa
mov
and
fstl
mov
pop
dec
sub
insb
sbb
cmp
rcll
mov
ficoml
lds
hlt
mov
into
cmp
stos
data16
jbe
cmp
movb
pop
pop
jnp
xchg
and
adc
xor
jl
jnp
mov
insl
cmp
sti
pop
fwait
movsl
out
adc
xor
imul
xchg
adc
push
popa
insl
xchg
aaa
push
push
stos
adc
imul
jge
dec
sbb
and
sub
lahf
test
addl
push
jge
and
call
adcl
mov
mov
or
mov
mov
sub
mov
sub
outsb
mov
std
sbbb
fndisi(8087
aam
fldenv
cli
sbb
ljmp
test
shrl
lret
pop
cmpsl
movsb
dec
sbb
fisttps
ljmp
push
push
jbe
dec
out
sbb
aam
popf
cli
push
or
jmp
cmp
sbb
mov
xor
ljmp
xchg
out
adc
repnz
gs
cli
cmc
jp
cli
xchg
scas
cmp
adc
loope
pop
jb
and
xor
mov
ljmp
inc
arpl
scas
mov
rcrb
test
andl
cmpsb
cmp
inc
rorl
ja
push
or
fs
fsubrs
sti
pusha
cmp
pop
push
mov
mov
sbb
lds
mov
pop
sbb
repnz
jbe
nop
xchg
stos
rorb
negb
mov
sti
mov
push
fs
jne
cld
and
and
push
sub
ds
iret
in
out
mov
dec
mov
pusha
imul
in
rcrl
outsl
mov
push
test
mov
lret
call
das
in
add
cmp
loopne
fimuls
test
ljmp
or
mov
inc
push
push
xchg
stc
clc
push
inc
mov
cltd
push
aam
and
push
jg,pt
jno
stc
cmp
decb
sub
xor
in
ljmp
lret
xlat
pop
cmpl
jnp
xchg
pop
out
dec
lea
repz
inc
fst
iret
notl
ss
cmc
xchg
mov
jnp
lea
sub
stos
inc
xor
andb
cld
sbb
ds
xchg
sbb
cmpsb
xor
mov
sub
ja
mov
test
jp
and
or
jge
jle
xor
fdivl
sub
or
or
adc
inc
clc
aam
xchg
mov
push
pop
cmp
test
insl
shll
int
add
popa
or
mov
sub
and
gs
rorb
push
sub
in
mov
pop
call
mov
test
shll
jmp
mov
push
push
sub
dec
ja
jge
mov
enter
xchg
push
das
xchg
addb
aaa
inc
out
test
movsl
xchg
mov
and
outsb
rcl
xor
push
std
cmp
stos
aad
scas
xor
test
leave
push
pop
xor
arpl
lods
dec
jns
iret
ja
mov
pushl
push
push
mov
add
fs
aaa
mov
lahf
subl
test
mov
dec
shlb
push
or
subl
mov
lret
xor
std
mov
es
test
inc
jne
jae
mov
lret
dec
int3
pop
xchg
lods
inc
cmp
xchg
jg
mov
sub
arpl
outsl
fmuls
lods
test
pop
pusha
out
inc
dec
push
scas
mov
shl
fwait
dec
out
outsb
cmpsl
test
js
sub
mov
xor
aam
lret
mov
test
out
out
xchg
aas
xchg
orb
call
ja
mov
inc
loopne
call
sub
mov
int3
int
jb
outsb
push
pusha
mov
loopne
fnstcw
or
mov
sbb
push
jb
sub
out
in
and
push
add
popa
ror
jmp
lods
inc
mov
rcrl
cli
fidivrl
roll
xchg
push
mov
das
loope
xor
aad
es
xor
xchg
popf
mov
mov
int3
xchg
cmp
sub
daa
imul
cmpsb
iret
out
shl
mov
xchg
mov
sub
dec
fs
loopne
int3
es
aam
jno
add
stos
cmp
nop
adc
test
fwait
push
jmp
dec
lods
xor
fidivs
mov
lret
ss
xchg
enter
movb
outsl
popa
stos
scas
adc
sarb
sar
xchg
in
push
js
xor
pop
repnz
cld
sub
push
ss
mov
ja
xchg
add
cli
nop
xchg
outsl
out
cmp
pop
mov
sub
xchg
mov
pop
dec
mov
dec
insb
pop
mov
jecxz
fisubs
movsb
jmp
adc
and
cmc
lea
or
inc
cmp
sbb
mov
fs
xchg
mov
ret
in
aaa
dec
push
mov
push
imul
cmpsb
fs
aam
add
mov
insl
popf
mov
push
ljmp
jmp
addl
or
mov
jge
pop
cmp
add
cmp
push
fldt
cmpsb
ret
xlat
lods
mov
test
aaa
pushl
and
pop
mov
stos
xchg
daa
cmc
inc
lret
or
sbb
sbb
cwtl
fisttps
scas
shll
push
icebp
daa
or
popa
xchg
push
add
push
in
or
imulb
dec
ret
add
ja
push
inc
sub
call
in
sbb
push
cmpb
enter
mov
mov
stc
pop
jne
cmp
mov
inc
lret
xor
dec
lret
sarb
push
push
pop
pop
scas
repz
faddl
sub
jge
dec
mov
sub
or
test
das
xchg
adcl
xchg
andb
mov
mov
cmp
and
jns
xorb
rorb
cmp
mov
inc
xchg
into
cmc
jo
addr16
or
int3
and
cwtl
in
xor
jp
cmpsb
push
sub
mov
scas
pop
mov
into
push
push
andb
inc
je
pusha
sahf
mov
int
push
xor
mov
stc
cmpsb
into
outsb
xor
popa
adc
adc
fwait
clc
push
fs
out
push
xchg
jnp
sub
daa
idivb
pop
mov
mov
pop
xor
push
pop
nop
xor
shl
xchg
xchg
xor
repnz
push
std
repnz
mov
stc
or
negw
bound
stos
cmpsl
dec
int3
shlb
push
or
jmp
cmpsl
loop
mov
pop
xor
push
lret
push
cmpsb
xchg
mov
shld
inc
cmpsl
mov
mov
bound
sbb
mov
xchg
adc
xchg
xchg
arpl
xchg
into
jae
or
ljmp
dec
jp
scas
adc
cltd
enter
and
dec
mov
dec
mov
mov
aad
out
mov
in
lds
popf
xor
fcmovb
test
decl
adc
mov
cmpsl
mov
push
xor
popf
pop
ss
mov
inc
mov
adc
cmp
lods
lods
sub
data16
jnp
sub
cmp
sbb
push
or
adc
out
sar
xchg
rcrl
out
loopne
mov
jl
cli
repnz
xchg
into
inc
inc
les
loopne
sbb
pop
mov
int3
cli
lods
roll
jo
pop
bnd
mov
popa
push
cmpsl
add
mov
inc
orb
lds
sub
or
sti
fisubrl
pop
sub
ror
jp
movsl
jo
jns
ds
mov
jecxz
pop
movsl
xchg
ss
push
jb
fwait
fwait
std
sub
in
xchg
mov
push
xlat
sbb
lret
loope
mov
hlt
pushl
jecxz
add
scas
daa
jmp
push
ss
sbb
data16
mov
cmpsb
sub
jo
cmpsl
mov
not
jbe
mov
mov
sbb
or
mov
out
pop
adc
cmpsl
mov
push
jnp
pop
push
inc
mov
inc
fwait
dec
test
jne
add
xor
cli
add
mov
fbld
mov
out
add
xchg
mov
cs
dec
jae
jmp
add
aas
andb
mov
xchg
ret
xor
push
xchg
sbb
pop
pop
mov
aam
cli
adc
lret
scas
in
mov
jmp
or
push
mov
repnz
call
xor
inc
inc
es
or
dec
jnp
dec
pushf
xchg
sbb
out
sub
mov
adc
pushf
sahf
notl
icebp
dec
fnstsw
not
pop
mov
pop
int
inc
mov
pop
mov
ja
pop
lds
subb
sarb
int
mov
mov
aas
outsl
pop
add
inc
jne
mov
daa
jo
jecxz
push
mov
lret
sbb
xlat
rolb
aas
push
jle
cltd
inc
or
call
dec
cld
ror
insb
cmp
es
scas
cld
ss
inc
sbbl
cltd
mov
outsl
outsl
cli
out
insb
dec
and
notl
mov
mov
xor
add
pop
addr16
xchg
test
mov
ja
repz
sbb
lahf
dec
mov
lds
lea
xchg
pusha
jbe
subb
sub
rcrl
test
mov
frstor
ret
loopne
pusha
sub
pop
stos
out
fwait
cli
lock
xchg
scas
add
fldt
dec
in
inc
mov
cmpb
fcmove
pop
dec
pushf
mov
xor
sub
jg
pop
clc
sub
xor
ret
mov
out
jmp
fimull
cmc
aam
lea
inc
xor
sub
cs
mov
and
sbb
push
pop
cmp
jno
push
jae
out
shl
xor
add
shrb
dec
inc
inc
cmp
mov
cmp
scas
je
and
mov
nop
push
test
cmc
insb
adc
stos
hlt
cmp
lods
xor
aad
cmc
call
xchg
mov
fs
sbb
call
insl
call
mov
sti
sti
fmul
inc
dec
cmpsb
or
sahf
gs
mov
xchg
in
mov
pushf
or
roll
push
mov
push
mov
in
mov
cmpsb
mov
jl
stos
adc
sub
pop
adc
and
xchg
or
test
imul
adc
dec
and
lret
push
dec
mov
aaa
cmp
gs
or
aam
and
mov
mov
popf
mov
fwait
mov
andb
sbb
icebp
xorb
int
notl
ljmp
das
inc
rorl
dec
and
push
loope
mov
repnz
fxch
loopne
icebp
sub
inc
or
lods
add
rclb
mov
lahf
rcll
push
mov
imul
sbb
xchg
add
popf
push
sbb
out
pop
mov
and
cmp
jge
cld
xor
mov
lds
call
jecxz
leave
push
cmpsl
jne
inc
jle
insl
ss
mov
fstl
xchg
push
push
sub
jnp
mov
sbb
jne
pop
inc
cmp
insl
les
xchg
lock
stos
adc
loope
inc
xchg
out
adc
cli
push
cli
mov
inc
mov
repnz
out
xor
jl
frstor
jbe
out
out
sarl
sub
cmp
test
xchg
dec
add
in
ds
mov
shll
or
daa
xorps
aas
xchg
xchg
lret
js
aam
push
fisubrl
pop
xchg
les
cmpsb
cwtl
or
je
cli
mov
push
mov
xlat
cmp
mov
cld
push
dec
sbb
mov
lods
je
xchg
sti
fs
ds
sub
fcom
jge
cli
adc
sbb
test
mov
aas
das
iret
lret
int
xor
lods
mov
push
mov
adc
lds
xor
loop
in
pop
lret
jo
mov
cmp
leave
or
push
pop
dec
cs
jns
push
fdivrs
das
mov
xchg
ss
or
cmp
cs
imul
adc
add
mov
dec
add
push
mov
pop
cltd
jmp
mov
xchg
movsl
daa
icebp
jmp
mov
dec
shlb
movsl
lods
and
stc
jle
mov
test
adc
daa
pushw
inc
jecxz
push
push
push
inc
pop
add
fiaddl
mov
loope
je
push
outsl
arpl
in
fcmovnb
frstor
adc
jmp
and
out
pop
cltd
out
add
scas
push
adc
mov
inc
fcompl
lods
lods
pop
cmc
lock
in
fildll
ljmp
icebp
ja
lods
cli
dec
sbb
jge
fistpll
lds
insb
stc
inc
xor
push
jmp
xchg
push
mov
ds
aaa
hlt
jmp
mov
jg
test
leave
pop
cltd
lds
nop
cltd
mov
ljmp
lahf
pop
std
in
outsl
and
push
fidivrs
popl
jnp
adc
mov
cltd
mov
jne
stos
jmp
sti
orl
pushf
cmp
xchg
jnp
loop
dec
pop
jmp
jmp
xchg
add
sub
sub
ret
mov
movsl
add
pop
imulb
lahf
in
jb
dec
lods
xchg
mov
shl
mov
into
ret
cmp
jns
out
lds
or
bound
mov
mov
insl
push
rcrl
mov
jle
mov
lods
movsb
mov
js
jecxz
or
push
xchg
mov
lea
mov
mov
jnp
sub
jbe
mov
jmp
int
aam
lea
ljmp
ljmp
mov
xchg
es
les
inc
jle
lds
mov
sti
jmp
lcall
in
test
xchg
lahf
data16
jno
fistps
rolb
pop
stos
push
fcoml
insb
jno
xor
or
dec
pmuludq
adc
lods
add
xor
test
loopne
pop
adc
daa
mov
jae
xchg
jb
mov
inc
enter
dec
mov
push
int
mov
daa
testb
push
pop
inc
push
and
sub
outsl
mov
jmp
sub
pop
icebp
jb
jae
aas
les
dec
cs
add
filds
in
ret
push
in
test
ror
adc
mov
push
fdivrl
imul
and
lahf
mov
das
jmp
mov
outsb
gs
or
mov
push
push
fdivl
adc
repnz
ffree
or
lcall
sub
stos
stos
mov
push
push
inc
aas
or
divps
xor
mov
xorb
mov
lods
inc
adc
cld
out
mov
xchg
loopne
pop
add
int3
adc
and
fwait
and
sub
dec
jmp
add
fisubl
iret
push
push
and
dec
es
inc
imul
jnp
enter
cmp
jle
fs
icebp
sub
pop
popa
fdivrs
cmp
xor
and
test
test
clc
fisubs
cmp
nop
ja
int3
int
xor
ret
xchg
jg
shrl
fsub
dec
ret
cwtl
pushf
pop
inc
jae
and
cltd
cmpsb
inc
nop
aas
dec
das
insb
sbbl
loope
adcl
inc
fisubrl
mov
jo
xchg
push
popf
adc
test
adc
inc
mov
dec
add
push
outsl
icebp
pop
repnz
sti
loop
sahf
cli
fisubl
sbb
and
aam
push
mov
xchg
iret
cmp
jl
rolb
push
sarl
sbb
std
iret
lds
xchg
adc
in
xchg
fwait
popf
call
dec
cmp
imulb
or
jmp
xor
aas
inc
jo
dec
sub
test
repz
or
sbb
push
loope
sbb
mov
clc
rcll
call
imul
popa
iret
jl
arpl
jae
rolb
xchg
jle
pop
mov
mov
sub
inc
mov
lods
nop
add
loopne
or
scas
outsb
mov
in
jno
add
xchg
dec
sub
push
pop
xchg
or
pop
mov
jnp
out
add
test
mov
mov
push
out
fbstp
in
jl
jbe
push
inc
push
fcompl
xor
or
aam
test
test
and
jne
and
pushf
pop
dec
sbb
xchg
mov
lds
imul
mov
add
xor
popa
mov
cwtl
iret
sarb
mov
rcrl
xor
addr16
dec
test
ror
out
add
mov
or
lds
jnp
pop
daa
jmp
jnp
fists
addb
popf
xorb
dec
aam
std
js
test
xchg
sub
mov
negl
popa
rcl
leave
sbb
andb
mov
or
lods
outsb
in
ljmp
dec
pop
jmp
cs
outsb
hlt
mov
sub
into
icebp
pop
cwtl
mov
add
leave
or
leave
fisttpll
push
or
int
arpl
leave
xchg
out
or
jge
mov
bsr
push
flds
stos
insb
gs
adc
dec
cwtl
pop
sti
out
in
mov
test
push
dec
fs
xor
jo
mov
mov
push
jo
jb
out
sbb
xchg
insl
mov
sub
jns
into
dec
test
sub
pop
push
sbb
int3
aam
push
ds
and
xor
jno
jmp
xchg
cmp
dec
out
das
mov
adc
lods
pop
inc
imul
xchg
outsl
orb
sti
ja
stos
sbbl
push
mov
dec
inc
mov
out
mov
es
rol
mov
cs
mov
aas
js
cmc
mov
sub
rcll
xor
es
insl
push
mov
push
or
je
insl
std
hlt
inc
imul
push
mov
aam
adc
mov
cmp
mov
pop
insl
sub
mov
arpl
lods
cmpsl
fildll
cmpl
enter
and
mov
insl
cmp
cmp
add
or
xchg
jo
sbb
adc
lods
ljmp
rol
das
jne
sub
fildl
xor
or
push
dec
mov
push
sti
and
movhps
jle
sahf
pop
jmp
mov
adc
lods
lods
cs
cs
cltd
in
shll
insb
push
popf
loop
outsb
sti
rcrb
mov
filds
popf
pop
mov
and
lahf
mov
and
inc
popf
and
out
mov
fisubrl
ja
cmpsl
xorl
jns
pop
dec
jg
cmp
call
rcl
imull
xchg
out
and
sub
addr16
mov
scas
cmp
and
inc
push
dec
ljmp
retw
sub
jge
sub
adc
pop
std
hlt
shl
sbb
repnz
xor
in
nop
xchg
xchg
cmpsb
ret
clc
mov
xor
push
pop
mov
lock
shlb
rolb
repz
arpl
xchg
push
cltd
mov
adc
hlt
popa
mov
xchg
out
orl
in
repnz
lcall
jg
jno
dec
jecxz
adc
dec
add
cmpsl
lret
scas
mov
and
or
jne
pop
adcl
leave
and
out
lahf
adc
mov
mov
jl
cwtl
repz
xor
ret
insb
dec
mov
and
sub
cmp
fsubrs
jmp
rcr
and
xchg
cltd
adc
int
ljmp
mov
mov
adc
in
aaa
mov
mov
push
popf
jg
sub
data16
sahf
int
sub
test
inc
out
dec
ret
sub
loopne
rolb
sarl
push
lds
jbe
mov
mov
loop
mov
or
and
mov
cli
push
dec
outsb
lret
push
fs
nop
adc
sub
pop
mov
scas
pop
mov
push
adc
in
adc
in
pop
rorl
cmp
sti
cmpsb
mov
xor
mov
sub
out
dec
sbbb
loopne
lcall
jb
fists
call
push
jp
ljmp
rcrl
or
mov
xchg
jle
sub
and
stos
repz
mov
add
cmpsb
repnz
arpl
fnsave
jae
xchg
test
push
push
sub
lods
xchg
fsubrl
mov
jns
icebp
popf
push
je
mov
popa
arpl
in
leave
push
pop
or
fsubr
add
nop
and
ss
push
xchg
mov
lods
dec
imulb
shlb
je
notb
fistps
cmp
add
gs
enter
mov
push
out
mov
cmp
clc
js
ret
lods
rcll
inc
add
outsl
mov
and
sbb
inc
stc
pop
jg
mov
aas
out
rclb
inc
lret
push
int3
xchg
loopne
mov
cs
test
fists
cmp
mov
jae
nop
lods
cmc
mov
and
sub
mov
cmp
imul
sbb
inc
loopne
xchg
sub
cmpsl
imul
jbe
cmpsb
mov
sub
mov
pop
lock
iret
lcall
adc
daa
jmp
cli
in
clc
or
idivb
mov
mov
inc
aaa
aam
std
aad
aaa
adc
hlt
nop
and
iret
orb
frstor
insb
fs
js
push
xor
sub
pushf
lret
dec
jnp
bound
push
sbb
outsb
lahf
mov
and
enter
push
jo
lahf
ret
push
add
dec
dec
sarl
mov
sub
loop
pop
cld
adc
inc
mov
out
cwtl
sub
pop
int
sbb
dec
into
dec
ss
pushf
imul
jo
ficomps
jecxz
xchg
and
sbb
pop
or
and
fsubs
mov
sub
sub
insb
or
sub
pop
mov
daa
inc
lret
add
lods
imul
data16
mov
xor
xorb
out
pop
xchg
shll
inc
insb
stc
andl
add
int3
test
jmp
cli
inc
cmp
mov
ss
loopne
pop
mov
sti
mov
pop
popa
mov
movsb
fnstsw
loopne
cmp
js
or
sub
sbb
and
jne
stos
pop
pop
out
mov
int3
stos
push
and
inc
inc
rcll
and
jne
les
out
subb
push
and
jnp
xor
push
xor
pop
mov
jae
pop
or
stos
add
and
push
fbstp
dec
insb
iret
sti
out
inc
mov
mov
int
movsl
adc
in
adc
movsl
adc
xor
imul
pop
stos
jmp
int
outsl
imul
shrb
or
outsl
aaa
push
push
in
pop
add
sbbb
js
les
push
push
lret
int
aam
jbe
lcall
mov
int
mov
adc
addl
aad
sub
push
sbb
pushl
adc
adc
dec
inc
pusha
inc
and
imul
xor
mulb
aaa
pop
xchg
push
inc
mov
add
clc
cs
andl
xchg
xchg
and
subb
in
imulb
cmp
cmp
out
xchg
fisubs
pop
dec
jecxz
adc
mov
ret
inc
sub
mov
cmp
sub
inc
into
andb
insl
cmp
insb
test
shll
test
add
lock
jb
push
pushf
dec
add
push
add
pop
xchg
dec
xor
mov
or
pop
fstpt
and
imul
fidivs
mov
or
out
inc
add
ret
imul
data16
xchg
pushf
cmp
outsl
cmpsb
mov
pop
mov
stos
imul
sub
inc
into
pushf
pop
pushf
sbb
and
cmp
cmp
test
mov
out
test
dec
scas
enter
out
sub
test
mov
and
jnp
testl
or
dec
dec
sbb
or
cltd
inc
inc
mov
lods
add
jmp
fidivl
pop
xlat
mov
ret
cs
shl
xchg
xchg
mov
mov
mov
outsb
ficoml
push
inc
adc
les
sub
pop
pushf
and
stc
jo
dec
jle
mov
sbb
ret
mov
stos
or
and
es
xchg
imul
xchg
jle
popf
int
sub
xchg
push
and
xor
sahf
cmp
fdivrs
add
in
ds
insl
jno
popa
je
in
lods
adc
or
outsb
fildll
inc
xor
fwait
push
mov
lock
xchg
push
arpl
xchg
mov
aas
dec
mov
int3
insb
dec
lods
pop
or
sbb
fists
je
jae
mov
insb
cmp
cltd
sub
cwtl
inc
xchg
in
ds
mov
das
add
insl
mov
mov
and
int
test
xchg
pop
stos
push
and
movsb
roll
pop
mov
negb
sub
outsb
inc
lret
fdivl
enter
xor
mov
push
pop
hlt
rcll
adc
push
movsl
xchg
jg
call
stos
sbb
dec
shrl
popf
pop
pop
cmp
cwtl
arpl
movsb
fnsave
xchg
negb
adc
cmp
sbb
test
mov
xchg
addr16
sbb
sub
shlb
js
jnp
dec
xor
repz
xchg
mov
mov
sbb
sub
out
int3
xchg
fstpt
xor
cmp
sub
xor
fwait
adcb
jmp
jle
out
and
adc
in
jge
stos
lods
add
xchg
fildll
movsl
addr16
popa
push
pop
in
ret
sub
mov
lret
sbb
sbb
jmp
rolb
out
nopl
lahf
jecxz
and
getsec
out
inc
inc
fadd
rcl
clc
loope
inc
pop
adc
lret
push
imull
dec
out
sbb
xor
in
jae
adc
dec
push
arpl
jecxz
mov
das
ficoms
enter
pop
cli
inc
fmul
and
rclb
lock
lcall
inc
push
add
pop
mov
sub
cld
enter
aaa
mov
loope
nop
cmp
clc
lret
out
mov
js
lahf
loopne
inc
shrb
je
addb
popf
divl
pop
dec
orl
gs
sub
dec
lret
pop
in
incl
and
dec
sti
scas
cmpl
jns
jmp
fnstcw
inc
mov
sub
bound
push
enter
mov
mov
sub
inc
call
push
insl
push
dec
lret
mov
into
hlt
test
insl
push
lahf
fwait
call
xchg
jnp
jp
add
mov
pusha
xchg
xchg
js
jecxz
xor
test
ret
cld
xchg
push
inc
iret
sbb
jno
bnd
lret
pop
push
testb
pop
repnz
popa
cli
pushf
pushf
mov
jne,pn
ss
pop
loopne
sbb
jbe
lret
les
mov
loop
pop
xor
lcall
daa
outsl
or
ja
sbb
jnp
sub
popa
sbb
mov
movsb
pop
stos
pushf
xchg
push
pop
cmpsb
mov
or
push
ds
push
jmp
enter
gs
inc
inc
leave
lds
xor
jge
dec
rclb
scas
jecxz
lds
pushf
hlt
mov
jg
cmp
shlb
aas
lock
xchg
fadds
push
call
push
je
sub
dec
movl
xchg
adc
xor
xchg
adc
in
mov
out
add
popa
pushf
out
cld
pop
into
test
pushw
and
aad
es
or
test
addr16
aas
pop
call
mov
adc
fildll
mov
sbb
sbb
ret
mov
sbb
sarl
sahf
lods
xchg
mov
mov
xchg
mov
orb
xchg
enter
das
xchg
sti
in
xchg
sarb
imul
sub
push
shlb
xchg
jp
mov
stc
add
inc
lock
dec
pop
pop
rorb
iret
mov
push
mov
stos
fidivrs
lods
jbe
aas
test
xchg
fmull
jmp
andb
or
push
and
or
lret
push
pop
ret
cmp
push
jmp
mov
push
dec
mov
and
sbb
outsb
adc
call
ret
je
pushf
pop
adc
dec
cmp
imul
sbb
xor
ret
mov
call
mov
or
gs
dec
nop
adc
mov
xor
cmp
sbb
mov
and
push
mov
xor
lds
dec
cmc
push
jne
lret
inc
test
sub
loop
jae
push
push
notl
outsl
gs
inc
popa
push
jmp
add
data16
scas
ds
out
and
pop
and
in
imul
and
or
and
pop
pushl
clc
imul
arpl
jae
movsl
and
imul
je
push
in
jb
jbe
push
testb
mov
pop
lods
inc
inc
mov
and
in
enter
lret
and
xlat
xchg
movsb
test
mov
dec
popa
data16
or
xor
jle
jl
or
das
loope
aam
movsb
mov
dec
iret
fidivrl
mov
data16
hlt
enter
iret
movsb
testl
cwtl
adc
inc
aam
imul
daa
mov
arpl
sti
lods
sbb
dec
and
adc
stos
clc
shll
loopne
roll
mov
fcomip
mov
xchg
cmp
mov
shlb
mov
mov
push
jmp
or
rorl
jne
pop
stc
pop
shrl
xor
or
rorb
mov
cld
ret
andl
mov
push
cmpsb
dec
sub
orl
in
sarb
mov
mov
cli
addb
adc
sub
jae
pop
inc
push
push
subl
lret
sub
repnz
inc
mov
ret
cs
out
pop
in
cmp
lahf
fwait
push
fstl
mov
ret
flds
mov
cmpsl
sti
jmp
fidivl
mov
adc
nop
insl
push
or
in
and
mov
mov
lock
cmp
fsubl
scas
xor
ds
adc
cli
sbb
int
loope,pn
es
orb
mov
aaa
repz
dec
stos
adcl
push
cmpb
xchg
jno
addl
fwait
xchg
call
jl
cmp
mov
test
out
scas
inc
aaa
jmp
bound
sub
or
dec
pop
shlb
push
sbb
cmpsb
dec
stc
mov
sub
scas
xlat
fistpll
sahf
incl
jbe
rorb
dec
add
cmp
cmp
popf
scas
iret
loope
push
dec
mov
adc
test
fidivrs
xchg
rorl
mov
ffree
pop
out
mov
add
ret
xchg
cs
dec
scas
lods
cmpsl
and
iret
insl
inc
pop
dec
into
mov
ret
mov
lret
clc
in
lahf
or
outsb
mov
jns,pt
or
mov
sub
inc
data16
out
xchg
insl
popa
and
mov
pop
jecxz
jae
shlb
test
push
add
out
xchg
mov
xchg
nop
aam
repz
adc
rorl
je
outsl
shl
adc
clc
subl
adc
cmp
incb
or
in
adc
imul
mov
fwait
inc
lret
stos
adc
inc
sub
mov
js
xlat
fsts
xchg
filds
nop
mov
cmp
scas
adc
fcmovbe
and
insl
adc
sub
lcall
std
dec
adc
mov
cmp
jno
dec
fs
imul
mov
loopne
jl
test
jbe
and
add
push
jge
pop
xor
xor
stos
mov
jbe
push
test
sbbb
xchg
out
mov
and
mov
pushf
jle
rcll
sbb
movsl
jne
cmp
mov
mov
cmp
in
imul
dec
push
mov
sub
mov
in
mov
cld
sarl
lret
pop
cmp
mov
test
push
dec
xor
xor
cs
sbb
mov
xchg
lock
jae
add
push
mov
lahf
mov
jno
mul
xchg
jb
enter
jae
std
xchg
sbb
shrb
pop
mov
loop
xor
je
pop
jecxz
cmp
pop
sub
popa
and
pop
out
ficoml
or
pushf
xchg
jo
ficoml
stos
xor
mov
nop
addr16
sbb
inc
pop
loope
lret
or
jo
mov
xor
in
jns
pushf
inc
in
cld
push
cmc
into
mov
jmp
leave
out
mov
push
xor
adc
stc
sub
loope
jle
inc
sub
push
fmul
loopne,pn
mov
xor
jp
loopne
data16
pop
xchg
xchg
inc
jl
xor
jge
test
push
dec
mov
iret
sti
and
mov
movsb
push
in
xchg
mov
jnp
or
ret
sub
insl
fdivl
lods
scas
add
push
push
lods
xchg
in
push
pusha
adc
add
repz
pop
addr16
ficoml
in
mov
xor
mov
rcr
adc
mov
inc
lods
adc
or
dec
push
sub
repnz
pusha
mov
mov
jp
push
mov
int3
test
orb
push
icebp
enter
cmpsl
pop
xchg
xchg
mov
mov
fxtract
movsb
das
xchg
push
mov
nop
sbb
and
test
jle
mov
lea
shll
mov
push
fists
ja
add
ret
jnp
jp
pop
and
stos
stc
roll
aas
inc
test
push
pop
sahf
test
imul
into
sub
xchg
das
push
or
dec
mov
pop
rcrb
in
outsl
inc
mov
cmpsb
imul
inc
inc
or
ret
cltd
adc
adc
leave
int3
sbb
and
dec
das
dec
in
add
negb
ja
push
daa
movsl
push
add
adc
std
jge
add
dec
or
push
ja
fwait
aam
jge
lock
test
out
and
xchg
dec
lahf
xor
dec
push
jns
lock
test
push
sbb
fwait
inc
lcall
jg
pop
add
xchg
push
pop
or
pop
test
pusha
mov
push
repz
xchg
icebp
sbb
and
jae
rcr
out
cld
jno
mov
push
movsl
push
mov
mov
mov
and
cmc
add
loopne
test
data16
std
mov
xor
sbb
sub
stos
hlt
jne
les
clc
data16
inc
cwtl
insb
add
loopne
dec
daa
lds
xor
jmp
stos
imul
xchg
dec
cmp
jecxz
dec
xor
pop
hlt
cmp
xor
flds
std
movsb
fildll
call
or
sub
mov
ds
lods
jne
das
dec
cltd
ljmp
call
hlt
sub
xchg
js
aaa
aas
cmc
inc
xchg
addb
enter
loop
iret
out
lcall
mov
xlat
xchg
xor
fwait
jnp
add
imulb
in
or
xor
faddl
sub
and
out
push
cmp
mov
and
rolb
lock
sub
dec
jno
fwait
inc
cmp
scas
jno
xorb
push
cmpsl
sub
push
sarb
cmpsl
out
mov
inc
mov
push
cmpsb
mov
sahf
cltd
loop
shll
in
scas
loopne
mov
add
movsb
push
fcompl
adc
shl
sub
ja
mov
repz
aas
scas
sub
fisttps
movsb
fiadds
adc
xor
pop
lret
das
pushf
sti
imul
int
insl
sub
dec
push
lcall
adc
dec
daa
pop
jge
cvttps2pi
jne
xchg
sbb
adc
sbb
sti
enter
inc
pop
cs
daa
fsubrl
xchg
mov
inc
mov
stc
jge
jecxz
or
js
out
cwtl
fisubrl
es
lcall
loop
mov
scas
repz
jbe
inc
pop
dec
mov
test
fisttpl
ljmp
aad
mov
int3
adcl
sbb
daa
in
mov
sti
cmp
dec
out
out
sbb
movsb
jno
das
and
repnz
and
aam
cmc
outsb
stc
lods
cmp
or
stos
outsl
ja
leave
rcrb
mov
or
js
jle
and
dec
add
aas
call
jge
fsubrl
push
insl
sub
popa
push
sahf
imul
push
in
jns
mov
js
test
fs
pop
jge
mov
shll
hlt
cs
loop
mov
sbb
mov
lds
pop
sub
adc
mov
cmc
xlat
push
lret
in
push
sbb
imul
imul
sbb
enter
insl
hlt
adcb
jns
push
int
adc
mov
fnstcw
inc
pusha
orl
ss
mov
mov
mov
sbb
xchg
jmp
xor
fwait
lahf
add
dec
lods
leave
fdivl
clc
adc
dec
lahf
leave
cmp
sahf
test
xchg
or
ja
addr16
xor
dec
pminsw
pusha
xchg
mov
inc
sbb
xor
js
xchg
enter
xchg
gs
or
pop
aad
sbb
sbb
ret
addr16
call
fadd
mov
ljmp
scas
jns
stos
sub
imul
sbb
popf
ja
jno
in
aaa
inc
pop
mov
sbb
imul
inc
adcb
pop
adc
ja
loop
movsl
lahf
test
dec
loope
push
cmp
js
cmpsb
mov
sbb
push
add
xchg
dec
xor
jno
sbb
test
daa
out
push
fwait
jbe
and
sbb
mov
push
std
xchg
repz
out
ficoml
insb
test
xchg
bound
aas
jno
scas
int
insl
int
xchg
add
ljmp
bound
jp
addr16
aas
cltd
into
pop
sbb
jl,pn
push
adc
into
xchg
add
sub
popl
into
mov
enter
popa
xlat
push
push
ficomps
cld
fsubrl
jle
mov
enter
and
loopne
pop
loop
push
aam
sub
mov
stc
sbb
pop
addb
call
popf
inc
xchg
push
in
dec
jbe,pt
jp
sub
or
scas
icebp
add
out
sahf
mov
test
push
std
mov
in
xchg
adc
scas
cmp
jge
out
push
adc
leave
popa
aam
jbe
leave
imul
arpl
imull
popa
pop
inc
out
pop
inc
jle
mov
add
jecxz
and
inc
jbe
mov
mov
add
loope
mov
push
sub
xchg
jae
dec
inc
push
push
dec
test
adc
push
dec
xchg
lods
and
in
mov
sahf
cli
mov
imul
xchg
loop
mov
lret
pop
sbb
pop
add
push
roll
in
sbb
mulb
xchg
mov
adc
adc
lret
lea
inc
lea
inc
fcmovnbe
and
cmp
mov
iret
lahf
xchg
mov
pop
sbb
mov
aam
and
in
aam
in
fistpll
xor
sub
inc
mov
xchg
jbe
add
inc
call
cmp
fiaddl
fists
js
lock
or
notb
xor
dec
ljmp
stc
jae
bndstx
xchg
mov
gs
xchg
sarb
sbb
nop
icebp
push
cmpsl
imul
cmpsl
lcall
ficompl
daa
scas
add
aam
sub
and
arpl
push
and
test
movl
mov
pop
sbb
pop
adc
inc
insl
jl,pn
mov
jb
sub
sbb
ret
loopne
mov
nop
cmp
push
dec
fsubr
pop
pushf
dec
add
fcmovnb
lcall
loope
pop
lds
dec
loopne
push
adc
or
pop
sbb
insb
lods
or
xchg
adc
mov
faddp
pop
add
outsl
frstor
je
mov
data16
inc
sbb
push
scas
add
je
sti
cmc
push
push
mov
jge
iret
xor
mov
int
lahf
outsb
sub
xchg
js
rolb
dec
inc
fsubrl
mov
inc
fidivs
xchg
cmp
int
sarl
adc
in
outsb
adc
cmp
nop
jne
xor
daa
mov
pushf
push
pop
arpl
cmp
les
mov
mov
pop
xchg
incb
add
pop
sbb
or
or
andl
jns
mov
rorb
xchg
jns
pop
cli
in
mov
mov
aad
insb
mov
icebp
in
gs
insl
xchg
leave
loopne
add
stos
mov
mov
int
mov
inc
lods
jle
cld
call
or
stc
fwait
addl
add
sbb
and
sbb
lea
insb
mov
push
fists
fwait
jle
out
das
adc
clc
xor
js
jmp
int
dec
fists
mov
lahf
dec
shl
enter
loop
in
in
mov
aam
push
insl
cmp
jnp
sbb
xchg
push
jbe
mov
sub
xor
js
dec
clc
dec
pop
push
inc
in
xchg
jb
or
lods
call
fsubrs
push
mov
aam
dec
test
addb
in
sub
int
or
pushf
pushf
inc
jbe
and
mov
test
push
mov
mov
sbb
cli
jmp
mov
fisubs
mov
int
fnstcw
adcb
int3
pop
cmp
insb
jl
out
shlb
in
sub
lahf
je
xorb
bswap
xor
pop
mov
mov
jl
js
add
js
not
cmp
les
add
btr
rorb
js
enter
cmp
out
insl
xchg
and
stos
xor
cmp
dec
aaa
push
repnz
lcall
rcll
jl
scas
sub
daa
sub
lds
in
mov
dec
mov
xchg
and
adc
hlt
leave
nop
or
mov
dec
popf
and
and
cmp
test
and
mov
or
xlat
add
les
mov
dec
sub
fbld
sub
sti
movsb
mov
insl
mov
repnz
and
ret
jp
rolb
popf
fmuls
shrb
loop
dec
dec
pushf
sahf
in
mov
imul
dec
imul
cmp
mov
lds
int3
std
pop
movsb
orl
push
jnp
ror
enter
mov
pop
push
pop
ret
cmpsb
aad
dec
mov
push
mov
arpl
insb
ret
movsl
jmp
jo
sarl
xor
stos
and
and
loope
in
sub
sub
scas
jns
adc
insl
xor
pop
sub
sbb
cmp
loopne
ljmp
push
lcall
jo
lea
pop
xlat
mov
jmp
mov
xchg
mov
cs
sbb
cmp
pop
pop
repnz
dec
xor
jnp
cli
addl
mov
jl
jno
aam
or
aaa
test
rclb
outsl
lods
lret
jp
sbb
mov
adc
test
push
push
stc
movsl
fsubp
cmp
ja
jmp
cmp
xchg
dec
sbb
bound
in
std
xor
xchg
xchg
shr
mov
mov
mov
adc
dec
mov
es
iret
movhps
test
adc
mov
pop
in
nop
addr16
ljmp
idiv
sub
xor
pop
leave
lods
outsl
pop
mov
pop
push
je
xchg
addl
repnz
js
sbb
inc
sub
cmp
add
or
popf
andl
cmpsl
call
mov
in
stos
popa
xchg
leave
nop
lahf
int3
jg
jne
and
push
pop
mov
xlat
pop
repz
roll
das
es
cmp
push
jns
mov
adc
pop
xor
inc
mov
cmc
fwait
adc
cld
pop
lcall
mov
push
xchg
bound
xchg
sbb
xchg
mov
and
push
mov
xor
lds
mov
xchg
mov
ret
in
pop
cmpsl
mov
mov
scas
mov
push
iret
lods
lcall
or
or
cltd
mov
sub
cmp
lods
xorl
mov
mov
xor
or
jae
xchg
cmp
cmpsl
or
xor
in
and
xor
pop
lods
mov
inc
cmp
cwtl
fnstcw
dec
mov
xor
fstpl
pop
cmc
stos
outsb
jle
imul
testl
lock
repnz
movsb
adc
fisubrl
je
pop
add
add
cmp
jo
push
lock
into
lcall
pop
popf
add
stos
js
xchg
in
cmp
out
scas
push
push
add
adc
adc
jge
std
xchg
stos
inc
sub
jg
jne
jecxz
mov
cli
mov
outsl
dec
test
repnz
adc
mov
jb
fdivrl
add
sbb
adc
mov
mov
jle
dec
cli
js
xor
rcll
mov
push
dec
imul
dec
jae,pn
and
push
mov
cmp
movl
add
ljmp
je
sub
and
jl
daa
aas
push
mull
ds
cli
mov
inc
mov
mov
mov
pop
popf
dec
jbe
pop
fcmovb
cmp
ljmp
nop
nop
push
js
and
cmp
pusha
lret
mov
pop
xor
outsl
test
das
divb
mov
jb
shlb
adc
loop
popf
and
mov
sbb
or
jo
lret
es
lret
fdivs
fisubrl
xchg
cld
ja
shll
cmc
inc
repnz
fdivrs
xor
lods
hlt
cmp
and
cmp
pop
lahf
jns
std
cli
inc
push
fcoml
gs
in
mov
lods
jb
cmp
xchg
cmp
mov
ret
sub
jo
jnp
adc
sub
xor
push
jg
sub
sub
addb
xchg
sub
outsl
out
inc
xchg
mulb
outsb
push
pop
out
dec
jo
rorl
je
inc
dec
stos
mov
mov
push
cs
jecxz
repz
and
mov
aam
int3
xchg
adc
sub
dec
mov
mov
sbb
lret
sbb
cs
jnp
sub
out
mov
sub
xor
insb
call
shll
push
xor
ljmp
shrb
mov
cmp
jecxz
ljmp
add
std
fisubs
mov
mov
fnsave
imul
sub
shrl
mov
mov
loopne
inc
jne
pop
idiv
subb
inc
rcrl
cmp
jp
aaa
jno
cmpb
push
mov
sub
shll
mov
xchg
aad
dec
inc
add
xchg
adc
push
shlb
pop
dec
ret
jg
insl
rorb
and
fndisi(8087
push
push
push
mov
negl
test
aas
out
outsb
inc
loope
je
xor
cmp
aaa
test
lret
enter
fwait
xlat
push
adc
icebp
or
addr16
adc
les
add
rclb
mov
pop
leave
pop
add
les
pop
sbb
dec
add
or
mov
roll
pop
xchg
out
bound
adc
int
aam
jnp
sarb
jne
cmp
push
add
dec
jno
jge
jb
or
push
test
sbb
loope
insb
adc
fidivrl
lret
addb
cld
movsb
and
icebp
sbb
xor
loopne
add
lods
nop
cmpsb
adcb
dec
std
nop
imul
mov
push
dec
or
push
xchg
mov
xchg
inc
xor
insl
add
scas
mov
ljmp
xor
enter
xchg
xchg
xor
xor
fisttps
call
dec
ljmp
mov
loope
dec
push
leave
sub
cmp
clc
xchg
das
or
jnp
frstor
enter
jmp
cmpsl
addb
std
pop
movsb
pop
inc
xchg
das
cld
sbb
inc
aas
js
fistl
bound
movsb
or
jmp
int3
fdivr
mov
es
mov
xchg
ror
orb
or
dec
mov
mov
and
dec
scas
test
pop
and
loopne
push
adc
es
clc
idivb
mov
push
movsl
cmp
iret
test
js
sub
inc
lods
mov
and
jp
loope
sub
push
xchg
dec
popa
add
push
repz
orb
inc
pop
dec
ret
loopne
insl
mov
mov
mov
mov
mov
push
shll
and
jge
pop
gs
scas
fldt
sub
sub
arpl
sbb
cmp
lock
xlat
stc
pop
pop
mov
cltd
push
xchg
fs
inc
mov
mov
fisubrs
push
dec
fbstp
stos
jg
movsl
mov
xor
repz
sub
repnz
fadds
out
popf
or
inc
fcomps
cmpsl
mov
addb
push
hlt
mov
jb
xchg
jecxz
push
sub
and
movsb
xorb
aad
ja
cmpsb
fnstsw
jecxz
jnp
xchg
jns
fsubr
mov
cmp
shrl
sbb
outsb
add
lods
leave
int
mov
push
dec
cmp
or
in
push
and
call
cmp
mov
ss
cmc
pop
xor
jmp
cmp
stc
les
xchg
aam
lea
or
mov
pop
ds
imul
dec
xchg
xchg
mov
lahf
mov
fcomps
clc
sub
or
add
xchg
daa
push
pop
dec
movsl
sti
cli
fistpll
mov
sbb
sub
pop
lret
rcll
inc
sub
mov
cmp
stc
bound
dec
js
xchg
outsb
pop
cmp
xchg
pop
mov
repz
mov
lods
jge
insl
sbb
imulb
xor
or
in
iret
sub
mov
lret
adcb
adc
mov
ja
sbb
mov
and
std
push
mov
push
dec
xchg
ljmp
inc
and
jl
scas
in
jns
decl
push
cld
hlt
pop
and
testl
nop
cltd
bnd
xor
sbb
ror
push
cmpb
jne
dec
rcrl
call
in
sub
inc
ja
add
test
movsl
xor
cmp
mov
arpl
jns
dec
push
fst
fsubrp
jg
sbb
sbb
or
xchg
into
jb
adcb
shrb
xchg
sub
in
pop
xchg
lods
lods
push
lods
aaa
mov
xchg
test
outsb
or
outsl
push
push
xlat
cmp
push
scas
fs
mov
subb
xor
in
stos
xchg
aad
nop
lret
les
loope
in
iret
sahf
push
ja
nopl
add
or
int3
sub
xorl
clc
sub
aas
sbb
cmpsl
cmp
out
adc
push
rcll
loope
clc
mov
sub
pop
daa
in
pop
jns
cmp
popa
scas
inc
nop
or
jnp
hlt
xchg
imul
sbb
test
test
mov
mov
pop
shll
outsl
and
pop
fwait
mov
inc
lods
and
in
aas
mov
mov
mov
fcmovne
out
add
lret
mov
in
push
push
ret
fidivs
pusha
jl
fcmovnu
subl
push
out
adc
loopne
jl
or
sub
sub
subl
rol
pop
rcrl
repnz
and
aaa
adcb
mov
push
lock
mov
jnp
leave
or
out
daa
push
jno
mov
in
cmpsb
insb
pushf
mov
imul
xchg
test
push
xor
and
jl
mov
pop
xchg
push
loope,pn
push
add
idivb
les
clc
nop
daa
aaa
mov
fisubrl
call
dec
je
cmp
daa
scas
pop
jo
xchg
and
jge
ret
ja
les
pusha
fs
and
sti
fsubrs
xchg
cli
stc
mov
js
lea
test
test
out
cltd
and
xor
mov
mov
sbb
mov
mov
xor
inc
dec
add
pop
pop
cmpsl
loopne
cmpsb
and
mov
rcrb
jp
mov
popf
xor
ror
xor
cmp
lret
arpl
testb
lock
vminss
fsubrs
sti
cltd
and
xor
mov
fnstsw
dec
loopnew
pushf
xor
xor
xor
sbb
adc
adc
or
or
aaa
mov
lahf
or
sbb
cmp
mov
fwait
or
je
ljmp
jle
push
leave
xor
mov
push
add
add
lods
adcb
fs
mov
fdivrl
cmp
mov
ret
fdivr
mov
inc
cmpsb
inc
or
xor
imul
scas
xchg
movsl
sub
fsub
into
dec
jbe
push
pop
cmpsl
psllq
fcmovnu
hlt
cmp
and
jne
ja
add
jl
jle
lret
cmpsl
call
lahf
jns
sbb
dec
pop
push
fldl
rclb
ljmp
xor
sbb
sbb
mov
aam
fisttps
out
call
leave
xchg
fidivrs
shl
insl
lret
jg
sub
cmpsb
cmp
mov
add
mov
push
mov
adcl
ss
mov
clc
mov
push
sbb
sahf
and
ljmp
out
push
mov
std
shll
rcl
mov
jmp
das
imul
inc
pushf
scas
pop
pop
cltd
cmp
es
sahf
inc
ja
push
mov
sub
add
add
or
std
xor
adc
and
fstpt
mov
sub
mov
loope
ds
xchg
inc
pop
leave
int
mulb
cs
jb
cmp
adc
sub
and
pop
in
adc
pop
decl
xchg
call
fidivl
int
or
lret
adc
jl
repz
mov
stos
cltd
aam
dec
shl
cmpsl
lods
scas
cmc
mov
jnp
mov
movsb
stos
or
lahf
dec
fs
pop
sub
fstps
and
in
movsl
stos
jne
leave
sbb
pop
or
or
popa
push
out
sbbb
ret
dec
jbe
sbb
dec
jns
mov
and
pusha
inc
insl
test
dec
fs
sti
clc
xorb
loope
sbb
test
mov
push
mov
outsl
sbb
jnp
mov
lcall
daa
stos
mov
popf
cmp
sbb
aas
add
into
mov
mov
cli
aaa
test
mov
jbe
je
data16
int3
insb
cltd
jle
outsb
fcomip
orb
jnp
movsl
jb
js
std
sub
les
das
lds
mov
push
int
push
add
test
ljmp
adc
adc
pop
ljmp
cltd
mov
ja
jo
jg
push
in
xor
lea
lods
mov
xchg
xchg
sub
pop
js
add
jbe
pop
ds
test
popa
xlat
xchg
hlt
loop
aas
out
sti
add
dec
iret
sahf
sub
xor
outsb
sbb
jp
aaa
into
jbe
mov
in
test
ss
es
jmp
lea
pop
and
or
mov
mov
sbb
imulb
jb
mov
jns
and
xor
or
jg
push
addb
loopne
fsubrl
ret
dec
add
xchg
test
fnsave
sahf
push
insb
aam
movsl
jns,pn
xchg
mov
lret
cmpsl
lret
and
movsl
mov
std
jo
pop
mov
and
mov
mov
fidivl
sahf
out
scas
filds
rol
add
push
adc
aam
mov
or
test
or
mov
jmp
sbb
jb
cs
inc
movl
lret
in
addr16
inc
setge
and
mov
mov
test
cmp
popf
push
leave
cwtl
in
xchg
or
inc
push
pop
mov
stos
xor
call
add
xchg
lock
fisttpl
cmp
push
push
and
mov
dec
lret
xor
out
je
push
push
nop
arpl
mov
cmp
adc
dec
mov
imul
mov
sub
jmp
xchg
mov
mov
fwait
add
dec
movsb
cs
loope
mov
pop
mov
lahf
xor
push
popf
or
xchg
cmp
leave
mov
cmp
mov
xor
insl
das
xor
or
xor
xchg
mov
add
in
xchg
or
pop
les
arpl
shlb
leave
into
icebp
fwait
jns
xchg
fcomp
pop
lock
xor
clc
push
jne
in
rorb
mov
mov
inc
sbb
out
iret
mov
jnp
sub
sbb
sti
inc
and
sub
mov
bound
sahf
fdivrl
inc
mov
xchg
cmpl
jmp
cmp
pop
cltd
adc
push
fcmovnu
in
dec
adc
xlat
pop
call
ret
adcl
add
push
push
ss
push
mov
outsb
out
dec
mov
xor
push
xchg
bound
push
fstps
or
daa
mov
enter
fbstp
lahf
mov
mov
lods
sub
rolb
fnstsw
jp
rcr
jae
call
lcall
movsl
enter
daa
rclb
cmp
ljmp
call
bound
cmpsl
xor
xchg
pop
movsb
dec
ljmp
loopne
jmp
jns
aaa
mov
jmp
leave
arpl
mov
jl
lret
mov
pop
ljmp
xor
stc
jmp
jg
inc
jae
clc
daa
leave
roll
loop
mov
dec
and
into
fsubrl
daa
dec
jns
mov
loopne
jmp
sbb
push
pop
into
dec
xor
jge
ret
stc
mov
push
mov
pusha
mov
pop
testb
sbb
sbb
mov
outsb
mov
push
xor
setbe
cmp
call
cmp
stc
mov
jns
mov
pusha
loop,pn
jge
mov
pop
js
pop
and
sbbl
jo
add
stos
push
cmp
jecxz
scas
aas
lds
mov
cmp
push
idivl
inc
arpl
mov
mov
xchg
add
jne
mov
test
jae
pop
mov
cmp
push
sub
in
sub
fcmovu
fadds
dec
outsb
fchs
and
imul
xchg
movsb
int
out
aad
xchg
mov
jmp
mov
pop
sbb
mov
jns
fcoms
add
mov
jle
jnp
mov
push
xchg
and
bound
iret
fs
dec
aam
fists
cmp
bound
scas
aaa
shlb
cs
and
lret
or
mov
mov
jae
stos
fdivl
and
mov
pop
in
aam
cld
addl
fimull
into
jno
sub
sub
hlt
in
pop
leave
mov
arpl
inc
aad
sarb
pop
jae
xchg
test
adc
pop
dec
adc
pop
mov
rcrl
pop
sbb
fsts
lea
cmc
pop
stos
aas
insl
rorl
in
lds
xor
jge
nop
add
adc
mov
push
and
insb
lret
mov
nop
lds
ja
shll
movsb
shlb
fld
xor
pop
pushf
fcoms
jecxz
dec
movsb
xor
push
lds
aad
inc
je
fcomi
outsl
shll
push
jb
jl
mov
xlat
in
cmp
mov
repz
mov
inc
xchg
adc
fucomip
ret
es
rorb
xchg
mov
jbe
xlat
mov
mov
cmpsb
test
loopne
mov
and
mov
clc
sbb
outsl
mov
cmp
inc
sti
and
enter
enter
out
inc
mov
push
rcr
repnz
lock
jl
dec
pop
lods
add
dec
adc
adc
stos
outsb
repz
cltd
mov
out
cmpsl
mov
sub
sub
lea
xchg
comiss
sub
push
push
pusha
add
test
adc
lahf
pusha
push
push
mov
dec
pop
mov
popf
adc
adc
adc
pop
enter
xor
dec
sbb
cmpsl
mov
test
mov
cmp
pop
loopne
sub
lock
ret
cld
jbe
std
and
data16
pop
into
pop
ds
inc
sub
cmp
lret
scas
xor
arpl
push
pusha
mov
or
adc
ljmp
dec
out
sub
pop
push
cli
sub
test
insl
outsl
and
lret
pcmpgtb
lods
mov
hlt
inc
mov
loop
add
and
in
arpl
pop
clc
and
ret
loopne
cmp
mov
jmp
stc
mov
mov
pushf
arpl
mov
or
ds
add
ljmp
int3
push
or
rclb
data16
adc
dec
push
push
jl
std
fisubl
inc
xchg
gs
add
insb
pusha
push
and
scas
cli
int3
pop
adc
jno
cmc
push
sbb
icebp
mov
cmc
mov
scas
test
sarl
jbe
loope
es
lods
sbb
pop
mov
xor
sbb
xchg
jno
jg
in
popa
fstpt
pop
call
sbb
sti
popa
insl
out
inc
jb
mov
daa
push
or
sarl
mov
jge
loope
adc
push
je
cmp
stc
add
jb
test
imul
add
repz
insb
xchg
repnz
jo
sbb
or
arpl
int3
sbb
mov
lods
inc
adc
mov
loopnew
mov
pop
mov
dec
sub
xor
dec
out
add
in
mov
jae
add
test
lds
push
icebp
hlt
mov
sbb
jecxz
xchg
push
rorl
cs
fidivrs
mov
mov
fdivl
sub
popa
jnp
pusha
lock
mov
jb
add
push
cli
xchg
icebp
sub
aam
pusha
gs
leave
cs
fst
sub
mov
sbb
xchg
mov
push
jp
push
dec
jle
ret
mov
movsl
bound
std
mov
frstor
xchg
mov
pushf
jge
lea
jae
test
sub
out
nop
loop
test
test
idivl
sarl
and
cmp
sub
ljmp
outsl
inc
fcmovnu
mov
inc
cmp
cmp
mov
test
fstps
iret
sbb
xchg
pushf
inc
adc
fcompl
mov
inc
lods
js
cmp
nop
jbe
xlat
fs
repnz
xchg
cmp
xchg
andb
mov
sbb
ds
xor
ret
xchg
out
mov
sub
or
mov
sbb
sbb
mov
mov
add
test
cmp
add
sbb
mov
sub
aaa
divl
movsb
cmp
dec
out
subl
inc
pop
arpl
fdivs
cmc
test
pop
enter
and
fincstp
aas
mov
sub
aam
ss
outsl
push
cmp
jl
in
mov
cmp
inc
mov
or
loopne
in
and
push
ds
dec
jo
jp
outsl
push
mov
ret
sbb
addr16
xchg
cmp
and
pop
push
and
or
mov
jmp
mov
pusha
sti
pop
sub
lea
sub
int
add
ss
mov
out
sar
sbb
les
rol
jge,pt
jae
andl
push
mov
add
pop
add
loop
push
push
rorl
mov
xor
fmuls
movsl
pop
lcall
jle
mov
dec
mov
dec
imul
iret
subl
add
icebp
js
sub
lahf
aaa
and
stos
sbb
pusha
xor
arpl
xorb
insl
jmp
mov
jge
repz
xchg
push
test
or
dec
fsubs
jp
pop
sbb
pop
ror
mov
dec
dec
push
pop
cltd
adcl
adc
js
fstl
pop
popl
dec
mov
add
jns
out
iret
rcrl
pop
fstpt
cltd
push
or
jge
je
jb
aaa
mov
jno
pop
jp
pop
jnp
mov
lcall
shlb
popf
dec
sbb
daa
cmpsl
adc
pop
mov
adc
sub
rcrb
ljmp
mov
inc
cmpsl
adc
push
xchg
fbld
jecxz
mov
sub
mov
or
mulb
cmpsb
in
push
aas
push
fs
adc
and
sbb
jecxz
test
pop
push
mov
adc
popf
lds
pushf
in
sub
push
adc
push
xor
or
cmp
sbb
ljmp
int
pop
mov
sbb
inc
mov
mov
fucom
jge
mov
cmp
repnz
into
cmp
lock
pop
xchg
mov
and
dec
or
cwtl
lcall
inc
push
push
pop
inc
sub
xor
xchg
xchg
xchg
push
lcall
in
xor
inc
sub
imull
pop
scas
xor
lahf
or
mov
push
inc
sar
push
sub
mov
jmp
aaa
push
sub
cli
mov
mov
mov
test
or
test
push
movb
sete
in
loop
mov
xor
push
jns
incl
and
sub
mov
inc
sahf
enter
xchg
pop
lret
repnz
mov
sub
std
std
cmp
add
mov
sbb
push
out
out
loopne
cs
dec
sbb
mov
pop
js
sub
push
jp
dec
push
sarb
scas
pop
rolb
outsw
inc
jl
xor
rorb
idivl
xor
xlat
popf
lret
and
pop
and
cmp
sar
lods
mov
jge
fiaddl
mov
mov
cmp
sub
outsb
xor
addb
jle
call
mov
dec
imul
jl
movsb
insb
loop
mov
bound
js
fdiv
adc
arpl
repnz
mov
jbe
xchg
fcompl
cld
sti
cmc
xchg
aad
and
lods
add
adc
dec
jne
sbb
fneni(8087
fsub
movsb
push
jns
fnstsw
inc
sahf
mov
lret
xlat
xchg
jns
add
das
int3
cmp
loope
ret
cmp
jl
or
fdivrs
push
and
xorb
sbb
push
xchg
inc
andb
lods
mov
xchg
or
mov
in
movsb
fdivl
inc
mov
xchg
push
loopne
adcb
in
outsl
nop
aad
psrlq
pop
sbb
pop
in
and
les
ja
lahf
mov
adc
push
into
repnz
mov
iret
aaa
or
jg
push
pop
call
fsubrl
std
xchg
mov
add
sub
push
jae
clc
push
sub
push
lret
jle
aam
shlb
psubd
inc
inc
mov
pop
cmp
testb
cwtl
enter
push
sar
jne
lods
dec
pop
lret
aam
xor
hlt
inc
or
mov
dec
pop
sbbl
pop
jno,pt
daa
mov
or
cli
xchg
das
daa
fbld
push
popa
testl
cld
fidivs
fsubr
cmp
pop
push
in
sarl
add
mov
in
pop
pop
lret
in
pop
mov
std
mov
mov
sbb
dec
loopne
out
daa
mov
jecxz
ja
rcr
test
icebp
mov
push
int
jl
stc
gs
sti
pop
in
ret
add
push
fsubrs
inc
mov
out
push
mov
add
imul
rcl
or
mov
es
shlb
jno
nop
adc
add
jmp
sbb
sbb
xchg
and
lods
add
pushf
icebp
push
sbb
imul
pop
in
sahf
xchg
orb
and
pop
arpl
push
int
out
in
xor
jle
jo
fmul
ss
mov
inc
stc
xor
adc
xchg
inc
test
mov
negb
daa
fs
outsl
lea
xor
fisubrl
test
jb
and
cmp
lea
push
test
dec
dec
clc
outsl
popa
push
pop
cmp
in
mov
jl
mov
cwtl
and
cmp
jl
stc
dec
jne
ret
in
enter
ret
insl
cmp
movsb
ficomps
hlt
and
sbb
mov
fistpl
outsb
sbb
cmpsl
pusha
cmp
mov
lock
test
dec
insl
adc
iret
mov
rcrl
and
mov
popf
pop
jnp
repnz
mov
mov
aad
std
outsl
push
mov
stc
add
cmpsb
arpl
xchg
mov
jns
xchg
mov
jecxz
int3
pop
cli
aad
repnz
data16
filds
pop
cmpsb
cltd
xor
adc
test
pop
cmpsl
sbb
xchg
jecxz
cld
mov
out
out
loop
out
rcrb
adc
adc
sbb
sub
jecxz
bswap
fsts
std
ljmp
mov
fwait
jl
mov
inc
loope
add
mov
aaa
in
addr16
out
les
outsb
cmp
sbb
pop
mov
push
data16
arpl
add
adc
xor
mov
adc
lods
out
sbb
into
es
mov
or
cmp
nop
push
and
into
mov
pop
in
rcrb
push
es
insb
rorl
push
mov
pop
add
sbb
ljmp
dec
daa
dec
mov
fidivrl
pop
mull
divb
pusha
xor
cwtl
add
in
sarl
add
pop
es
push
ficomps
cmpsl
xchg
gs
lcall
ja
fimull
mov
pop
mov
aas
adcl
adc
push
fucomi
mov
movsb
sub
push
jnp
pop
jp
push
adc
mov
mov
out
scas
roll
push
mov
shl
lods
fidivl
push
mov
xchg
xchg
lods
out
lea
lds
imul
popl
or
mov
pop
movsb
jl
push
test
in
inc
ds
leave
imul
sti
sub
test
jne
out
mov
pop
xchg
popa
jbe
xchg
mov
push
jne
orl
sbb
std
movb
hlt
xchg
jno
ret
jge
jmp
sub
xor
insb
xlat
repz
mov
push
fidivrl
in
shrl
pop
lea
xor
inc
mov
lds
xchg
pushf
jge
sbb
cwtl
mov
movsb
pop
aaa
jl
inc
pop
out
stos
sbb
cmp
aaa
xor
xor
mov
mov
enter
cmp
andb
xchg
mov
jg
dec
lret
aaa
ja
mov
shl
mov
ret
mov
fstl
fisubrs
inc
mov
rcl
or
jnp
ljmp
lods
cmpsb
adc
shlb
sbb
loope
lret
loopne
mov
pop
fidivl
leave
add
xlat
inc
aad
mov
xor
cmp
sub
jmp
jle
daa
adc
hlt
aad
add
int
int3
test
adc
popf
pop
dec
das
lret
adc
aaa
insl
rol
cwtl
add
and
xor
or
rclb
sub
popa
lahf
out
dec
ljmp
sbb
subb
and
rcr
in
loop
in
mov
lods
push
inc
out
jne
mov
xchg
sti
or
mov
inc
lods
dec
mov
push
addr16
adc
or
cmpsb
adc
mov
mov
mov
outsb
stc
push
jl
stos
hlt
adc
inc
push
mov
dec
jge
aad
cmpsl
call
xchg
rorb
ds
imul
in
inc
push
sub
out
xchg
lea
mov
inc
pop
mov
bound
call
adc
insb
mov
in
push
int
pop
lret
sub
dec
dec
xchg
jns
data16
rorb
lahf
xchg
scas
notb
ljmp
imul
aad
pop
xchg
fwait
loop
mov
adc
xchg
insl
mov
dec
push
and
mov
adc
mov
lea
js
jns
and
pop
lock
dec
imul
movsl
hlt
jb,pt
mov
outsl
inc
fcmovne
jl
mov
mov
fbld
inc
mov
pop
push
inc
dec
lea
lret
adc
cmpsl
aad
shll
mov
and
and
arpl
pop
or
cmp
pop
dec
fs
cmc
std
add
mov
mov
mov
add
mov
jecxz
aaa
jecxz
push
cwtl
jnp
shrl
stc
xchg
jae
xor
aad
add
xchg
push
scas
sbb
sub
sti
in
fnstsw
outsl
frstor
push
xor
ja
push
and
cmp
inc
pop
jge
cmpsb
jno
daa
imul
jns
aam
ret
mov
inc
xchg
jp
sub
mov
stos
sarb
pop
dec
push
mov
xchg
ret
cmpsb
out
cmp
xor
add
sahf
bound
neg
fiadds
fs
stos
in
cmp
ds
icebp
push
popw
out
or
fcmovnb
hlt
mov
fcomps
test
cmp
ja
fidivs
jl
inc
and
push
mov
jecxz
sbb
mov
jmp
movsl
fbld
jl
push
or
das
dec
mov
cmp
shlb
and
dec
call
aam
and
lcall
jb
imull
mov
dec
gs
cmpsl
and
sti
pop
xchg
sarl
lods
lahf
cmp
cs
push
or
mov
mov
imul
iret
movsb
or
jo
adc
push
enter
stos
lcall
cmp
les
jb
sbb
mov
adc
pusha
inc
sbb
into
int
jb
mov
cmpsb
in
jne
fiaddl
or
jno
add
xor
je
sbb
pop
adc
and
fldcw
ret
add
xchg
cltd
inc
cmc
daa
add
lcall
push
mov
mov
fsubrl
imul
jp
std
in
xchg
sub
mov
adc
cmp
adc
repnz
enter
push
xchg
jge
mov
sub
lret
test
mov
mov
push
insb
out
test
aad
repz
xchg
and
test
mov
xchg
mov
stos
add
cmp
in
lret
mov
pop
xchg
adc
leave
cwtl
fidivrs
js
fcmovu
rcll
xchg
repz
icebp
imul
pushf
pop
jl
push
sub
dec
das
jecxz
and
and
ds
xchg
adc
test
test
pop
push
repz
lods
int3
add
rcrb
dec
or
pushf
insl
mov
adc
cmpb
xlat
xlat
xor
outsl
xor
inc
dec
inc
or
sub
loope
mov
jge
add
stos
ljmp
pop
pop
cltd
sbbb
aas
cmp
imul
jae
sub
pop
mov
into
sub
inc
jae
inc
rcl
hlt
mov
lods
sarb
std
sub
xchg
xor
sub
or
sbb
xlat
repnz
pop
jge
out
fwait
mov
sbb
test
lret
test
and
punpckhdq
sbb
sbb
mov
xchg
xor
test
repnz
xor
rorb
and
sbb
sub
push
xchg
icebp
push
pop
adc
test
fildll
aaa
add
jmp
xchg
xchg
sub
dec
mov
jg
scas
adc
mov
pop
mov
adc
mov
cli
hlt
mov
pop
push
pop
or
xchg
or
and
jmp
mov
pushl
fidivl
aam
dec
push
push
shll
imul
into
adc
cwtl
subl
dec
lods
jg
push
shlb
clc
lods
mov
sahf
pop
and
fidivrl
add
lods
mov
xor
popf
lods
cmpl
pop
mov
cmp
pop
insb
adc
cmp
jb
test
rolb
icebp
sub
aad
dec
add
mov
jecxz
fistpll
jmp
fimuls
popf
dec
repz
inc
icebp
push
leave
adc
pop
in
aas
jb
pop
adc
dec
sbb
in
shrl
lret
mov
addr16
pop
cwtl
loop
mov
sbb
int
or
ror
clc
xor
jg
int3
inc
test
push
mov
pop
jge
cmpsb
inc
stc
scas
sub
dec
les
jl
pop
pop
ficoml
mov
adcl
xchg
mov
ljmp
clc
adc
ljmp
stos
sar
bound
cs
loopne
jg
add
push
aad
push
xchg
add
fbstp
pop
movsl
mov
xor
stc
and
jl
clc
stos
sub
sbb
jl
mov
push
mov
or
dec
pop
mov
les
cmpsl
in
int
arpl
test
push
add
add
shlb
adc
push
mov
jbe
in
xchg
aam
fsts
add
jo
or
icebp
cli
and
pop
sub
stos
mov
insl
or
call
outsb
out
arpl
or
jmp
xchg
jne
or
hlt
pushf
les
shrl
mov
and
push
in
adc
push
fsubl
lods
insl
and
ret
insl
adc
dec
nop
jno
ret
dec
out
lcall
adc
pop
sbb
sahf
int
mov
dec
dec
cs
in
push
out
xorl
in
out
hlt
pusha
push
sub
cmp
idivl
sub
mov
int
cmp
dec
clc
pop
in
test
data16
loop
jmp
shlb
insb
int
pop
stos
and
popf
push
dec
xor
lea
adc
xchg
outsb
sbbb
or
js
jle
xchg
mov
mov
sti
or
jae
and
rolb
movsb
loope
rorl
jb
mov
sahf
adc
fdivrl
lods
mov
cltd
test
cltd
stos
mov
dec
aaa
mov
fimuls
inc
add
call
cmp
dec
imul
sub
xchg
cmpsl
dec
in
mov
and
int3
addr16
mov
and
jae
or
cmp
test
mov
inc
mov
dec
push
or
xchg
push
inc
xchg
xor
sbbb
enter
adc
pop
rorl
adc
loope
adc
repnz
and
divb
cmp
psadbw
fistps
fwait
call
lods
jge
out
fstl
out
fs
jns
dec
sub
mov
add
test
cmp
or
adc
lods
dec
cmp
jo
jmp
lds
addr16
mov
pop
add
fwait
xor
lock
mov
or
push
mov
mov
mov
mov
push
ficoms
mov
and
push
adc
push
push
pop
pop
mov
lods
insb
in
gs
inc
add
xchg
addb
pop
orb
ficoml
pop
sbb
mov
mov
inc
fdivs
pop
mov
dec
aaa
clc
shll
movsl
movsl
cmpl
and
xor
popf
jbe
push
ss
mov
or
mov
lds
push
mov
loope
insb
fdivl
sub
or
aad
add
aaa
xchg
leave
sti
mov
subl
add
push
movsl
jl
push
pop
out
in
adc
fmuls
clc
inc
xor
cmc
push
mov
and
fbstp
push
add
loope
imul
and
push
data16
cmpsl
xor
out
jge
pushf
sbb
push
sub
lret
ret
popf
inc
fistps
jo
mov
insl
mov
dec
dec
stos
shll
out
dec
aad
xor
scas
rorb
aaa
in
mov
movsb
stos
add
mov
adc
push
das
iret
jmp
pop
adc
dec
sahf
hlt
sbb
test
cmp
push
xor
loop
mov
into
mov
xchg
sbb
ds
test
into
push
dec
imul
jae
mov
imul
cmp
fs
sbb
inc
adc
and
addr16
xchg
or
aas
inc
xchg
jno
leave
repnz
jp
pop
add
xchg
fsub
sahf
cmp
movsl
xchg
jo
xrelease
mov
xchg
mov
scas
insl
xchg
aad
inc
dec
in
mov
adc
imul
mov
movq
ret
and
pusha
shrb
mov
lods
je
push
push
and
aad
rol
xor
imul
mov
sub
bound
loopne
bound
dec
or
repz
jae
psubb
in
dec
push
mov
call
mov
outsl
jmp
add
xor
data16
sti
mov
mov
inc
repnz
sub
mov
mov
add
xchg
sahf
xchg
xchg
ds
and
inc
inc
mov
xor
mov
out
je
mov
mov
cmpsb
daa
ret
icebp
clc
mov
jp
push
mov
inc
shl
outsb
lods
movsl
jp
clc
notb
jns
dec
nop
repz
dec
int3
imul
sbb
jae
fisubrl
cltd
sub
push
mov
push
xor
xor
dec
pop
and
mov
mov
movsl
jmp
je
aaa
arpl
cs
repnz
fcmovnbe
mov
sbb
sub
stc
and
xchg
push
xchg
in
loope
mov
mov
or
cli
lret
aam
push
cmpsl
jge
inc
add
aas
stc
imul
add
mov
daa
lret
inc
sub
xchg
jae
mov
add
test
add
gs
cmp
and
xchg
test
lret
cmp
mov
loope
mov
xlat
push
incb
out
loopne
int3
into
lods
mov
add
dec
in
mov
dec
gs
cwtl
pop
push
add
inc
dec
sub
sub
ljmp
pop
aas
jo
cmp
inc
call
aad
in
in
mov
fs
pop
enter
bt
lods
push
imull
adc
cmc
gs
iret
fxch
aad
pop
adc
dec
mov
dec
or
push
in
dec
cmp
call
inc
sub
stc
testb
sbb
out
jmp
stos
cmp
addr16
cwtl
pop
je
pop
and
adc
jns
cli
cmp
pop
pop
jne
imul
jnp
jae
ds
and
add
cld
int
dec
mov
sbb
inc
xlat
aaa
popf
xchg
and
pushf
ficoms
fmuls
sub
sbb
jbe
adc
js
mov
gs
pusha
daa
sub
sti
bound
ljmp
lahf
aaa
jecxz
clc
loope
insl
adc
andl
jnp
rcll
cmp
nop
scas
sbb
and
jmp
add
enter
inc
sub
sub
adc
popl
xchg
sub
outsl
cltd
enter
mov
clc
mov
pop
icebp
xorb
cmp
sub
cmp
or
stos
loop
sar
lock
push
into
insb
imul
lods
dec
gs
push
pop
mov
mov
cmpsl
mov
xor
in
scas
mov
add
pop
fildl
cmpsb
mov
ljmp
push
rcll
mov
adc
jnp
shll
mov
or
jo
rorl
fldl
push
scas
dec
or
sbb
sbb
filds
mov
cmp
andl
jb
add
push
mov
or
jge
inc
sbb
enter
stos
loop
xchg
jmp
and
jge
mov
imul
rorl
gs
cli
jecxz
sti
add
lea
push
inc
sbb
fstps
cmp
dec
aaa
js
aaa
and
shlb
addr16
out
cltd
lds
sbb
adc
push
push
test
jns
addr16
aaa
insb
daa
cld
dec
pop
cmp
jl
sub
cmp
sbb
jns
in
pop
inc
insl
push
lret
icebp
xchg
dec
adc
outsb
fbstp
jb
fnstsw
sbb
sub
sub
mov
fwait
pop
push
cmp
cwtl
cld
test
pusha
pop
jecxz
or
adc
adc
mov
push
cmp
repz
mov
insb
mov
xor
inc
push
pushl
add
dec
cmp
mov
xor
lods
push
cmp
outsb
mov
int3
pop
inc
xor
nop
ljmp
js
in
xor
es
push
clc
orl
popa
mov
and
pop
sub
daa
push
mov
xchg
sbb
shlb
andb
cld
rorl
outsb
shlb
mov
addb
mov
mov
int3
stos
pushf
mov
js
fldt
es
jnp
push
hlt
lahf
shrb
xchg
xchg
call
push
test
test
enter
outsl
repz
adc
or
xor
lods
hlt
dec
pop
les
jno
lcall
sbb
mov
testb
xor
sahf
jp
bound
fcompl
test
fwait
and
movsl
mov
jo
dec
test
je
mov
rcr
or
fsubrp
aas
add
lock
or
xchg
aas
and
push
jl
ja
push
adc
mov
mov
test
push
jne
out
xorl
ja
sub
loopne
cmpsl
fdivl
inc
lock
das
add
ficoml
lock
sbb
decb
mov
sbb
lods
sub
cmc
mov
imul
mov
gs
cs
inc
imul
aam
xchg
repnz
stc
jns
push
inc
rclb
sub
shlb
pop
lret
lock
mov
int3
stc
sub
mov
in
mov
lds
dec
or
add
cmp
mov
out
and
scas
es
insl
ja
sbbb
sub
cmp
imul
pusha
lock
in
dec
imul
mov
js
sahf
int
lods
dec
sub
sbb
mov
hlt
sub
jecxz
cmc
fwait
and
cltd
mov
inc
jbe
push
aam
pop
test
inc
push
mov
pop
xchg
fmuls
imul
push
shll
xlat
mov
shll
mov
jle
fbstp
popa
pop
and
mov
inc
pop
xchg
mov
pop
fcoms
aas
ljmp
cmpsl
insb
xchg
cmp
push
or
dec
mov
pop
push
sbb
and
aas
push
jecxz
lods
cmp
mov
or
and
in
aam
ja
mov
icebp
jbe,pn
xor
out
cs
shlb
pop
sahf
dec
sub
push
mov
mov
mov
and
pop
cmp
jne
dec
adc
mov
into
mov
xor
or
and
cmp
int3
lret
clc
sub
dec
stos
push
cmp
in
notb
pop
arpl
xor
mov
icebp
xor
mov
shl
adcb
popa
dec
adc
sub
fisttpll
lds
mov
jbe
ljmp
ds
mov
and
sahf
and
std
xor
push
test
repz
rep
xchg
daa
jge
mov
mov
push
in
and
data16
pop
aas
addr16
lds
rolb
stc
or
lods
xor
push
fidivs
cmp
jle
and
and
mov
sbb
fwait
cmc
jb
or
sbb
lcall
add
aam
into
sbb
pop
in
inc
mov
movsb
into
pop
ss
aam
xor
in
lods
push
push
jge
jb
popa
or
sbb
and
in
mov
adc
inc
push
push
mov
xor
pop
insb
push
sti
imul
sbb
push
sbb
call
enter
jb
dec
aas
inc
into
aad
pop
aas
pop
idivb
sti
mov
test
out
leave
in
nop
mov
sbb
mov
popf
inc
subb
and
jae
sub
andb
cmp
mov
mov
bound
fisubrl
je
shrb
jo
adc
mov
movsl
or
insl
cmp
js
jp
fiadds
lods
daa
jae
mov
xor
sbb
test
jp
sub
cltd
test
xor
fiaddl
dec
inc
imul
in
neg
adc
jno
sahf
push
leave
mov
and
outsl
insl
jmp
fstps
sahf
sub
push
rcll
pop
mov
aas
mov
mov
jns
mov
pushf
leave
test
mov
pop
aam
cltd
pop
pop
addr16
inc
lea
adc
pop
add
jl
lret
sti
cmp
test
out
cmp
mov
mov
andl
pop
adc
pop
jl
push
cmp
and
cmp
pop
mov
ret
add
add
ret
jmp
sub
ds
pop
pop
mov
movsb
jne
add
test
call
cmp
dec
xor
repz
xor
cmp
ljmp
jae
inc
push
sub
adc
es
rclb
adc
push
mov
out
push
mov
adc
xorb
push
add
adc
test
imul
push
sbb
xor
sbb
repnz
in
out
cmc
mov
int
cmp
xchg
push
notb
xor
into
sbb
sti
les
mov
stos
ret
xor
mov
push
jo
into
mov
or
push
xchg
mov
test
xchg
adc
jge
insl
in
push
test
xorl
jecxz
iret
xor
push
shrl
movsl
ja
movsl
fsubr
adc
sbb
push
xlat
test
push
scas
sub
mov
test
push
xchg
xor
in
fcomp
xchg
pop
jbe
push
and
cmp
xchg
mov
jl
jne
div
ucomiss
mov
test
cwtl
cmp
pop
cmpsb
and
jae
and
fsubs
cwtl
pushf
mov
mov
repz
ret
xor
shll
add
fisubl
ja
movsb
movsl
mov
data16
cltd
jmp
int3
lahf
cmp
mov
xor
sbb
inc
mov
sub
cmp
dec
outsb
jne
or
leave
pop
lock
xor
and
int3
in
loopne
or
outsl
push
sbb
movsb
mov
fistpll
inc
faddl
popf
mov
jbe
testl
or
or
cmp
push
lahf
push
push
aam
aas
pop
xlat
popf
dec
jle
and
xchg
inc
push
iret
or
add
out
push
inc
stc
xor
add
mov
jnp
imul
rorb
jne
call
push
movsl
cmc
jns
cmpsb
mov
repnz
adc
push
adc
pop
cmpsl
adc
movsb
cmp
dec
mul
jp
shlb
fdivl
xlat
xchg
repz
xchg
dec
mov
out
push
sub
cli
imulb
mov
cmovne
mov
rcll
dec
test
add
in
adc
jno
fimuls
push
ds
cltd
adc
and
flds
clc
lea
pop
addl
pop
xchg
fimull
fsin
scas
push
and
test
jg
pop
stc
xchg
xlat
aam
fldcw
xchg
or
sub
mov
add
push
iret
inc
or
mov
adc
fyl2x
add
jg
sub
lret
stc
iret
stos
lods
jno
lcall
mov
pop
xchg
stos
jecxz
mov
aas
push
iret
ljmp
scas
add
call
sbb
pop
cmp
scas
adc
filds
lcall
out
pop
add
outsl
stos
out
xchg
mov
jl
into
and
push
addr16
mov
mov
adc
mov
mov
inc
or
mov
pop
bound
idivb
cmpsb
mov
cmpsb
push
pop
push
adc
rol
sbb
cmp
jns
jp
mov
and
outsb
jge
lock
adc
cmp
sub
push
mov
add
adc
das
cmc
je
les
xor
jmp
int3
jmp
cmc
in
aad
popf
jo
fwait
pop
icebp
mov
int
cmpsb
mov
pslld
or
add
cli
pop
mov
pop
sti
add
sbb
xchg
roll
popa
mov
adc
imul
dec
sbb
subb
in
gs
add
pop
ljmp
and
or
mov
movsb
outsl
hlt
push
ret
dec
push
adc
sub
pop
pop
inc
repz
or
imul
testb
test
sti
mov
insb
adc
inc
insb
pop
jnp
lret
xor
or
xor
pop
cmp
int3
aaa
inc
insb
xchg
adc
sahf
push
cmpsb
jge
sub
mov
sbb
pop
add
les
nop
addl
iret
idivb
dec
add
mov
dec
mov
inc
xchg
and
insb
shrl
or
mov
mov
adc
popf
fistl
repz
pushf
dec
test
push
mov
sbb
jno
inc
cltd
jl
out
pushf
sbb
cmc
cmp
xlat
es
sbb
xlat
push
sahf
jmp
sbb
or
fstpl
mov
hlt
imul
pop
jg
add
cmp
cmpsb
insl
ljmp
sahf
jmp
out
movsb
dec
mov
cmp
xchg
mov
inc
pop
xchg
push
inc
jle
or
adc
das
in
xchg
push
mov
cmp
in
inc
cmp
in
mov
shrl
pop
mov
call
fildll
inc
pop
out
mov
push
jmp
bound
mov
shlb
cmp
dec
dec
pop
or
ficoms
jnp
mov
fmulp
shll
push
fcoms
jnp
cmp
movsl
mov
out
xchg
mov
lahf
adc
ret
sbb
jns
mov
data16
rcrb
add
pop
dec
loop
add
cmp
stos
aad
or
outsb
in
nop
sub
ret
lret
push
add
jbe
push
lods
cmp
lret
push
lods
test
cmp
lds
nop
mov
cmpsl
mov
cmpsb
jp
cmp
pop
addr16
stos
je
les
jb
sar
and
fsubrl
push
iret
mov
fdivrs
mov
pop
pop
xchg
and
inc
mov
out
and
xchg
add
sbb
vprotb
jecxz
les
and
shll
mov
sahf
aad
mov
inc
cmp
frstor
nop
fisubl
flds
mov
mov
xlat
cs
mov
add
mov
jmp
sub
sbb
hlt
sbbl
jae
lods
aad
xor
cmp
mov
sbb
iret
je
sahf
cmpsb
mov
push
cwtl
gs
daa
cmp
xor
out
rolb
cmp
jbe
push
repnz
pusha
repz
enter
jno
sbb
aas
jo
add
or
add
push
inc
ret
cmpsb
pop
sbb
adc
cmp
inc
pop
xchg
sub
mov
jbe
shll
cltd
push
in
add
jle
or
cmpl
sbb
mov
add
or
xor
dec
pop
adc
mov
hlt
cmp
inc
mov
cs
neg
push
test
mov
inc
mov
push
pop
faddl
push
fists
repz
xchg
dec
adc
pop
addr16
inc
sbb
insb
sbb
dec
add
pop
test
mov
adc
sbb
sahf
dec
dec
push
xchg
nop
xchg
movsl
rclb
sbb
cmp
inc
xchg
xchg
cmc
and
fs
sahf
icebp
imul
lods
mov
scas
cli
cli
jp
mov
insb
stos
mov
loope
mov
sub
es
add
js
pop
loop
mov
into
xor
pusha
xchg
les
mov
xchg
mov
leave
xchg
out
dec
js
jl
dec
call
arpl
jle
mov
arpl
and
adc
fidivs
push
sub
int3
aam
cltd
stos
push
notl
push
or
rorl
and
loope
arpl
pop
test
adc
dec
or
dec
or
pop
and
jnp
imul
or
pop
add
sahf
dec
push
and
xchg
pop
movsb
cmp
iret
and
aam
adc
lods
sbb
imull
add
inc
cmpsl
ds
repnz
mov
mov
and
repz
cmp
push
les
mov
push
hlt
jne
into
sub
inc
sub
pusha
mov
mov
inc
jae
ds
outsl
clc
je
fs
jne
xchg
loope
xchg
sub
bound
and
ja
inc
call
xor
int
mov
inc
xchg
leave
fsts
mov
jne
xorl
pushf
sub
pusha
in
inc
rolb
nop
negb
pop
pop
push
sub
in
outsl
inc
ret
mov
ret
addr16
addr16
mov
in
incb
sti
cmp
pusha
addr16
shlb
inc
sub
push
shll
xchg
xor
rcrb
popf
mov
lods
fistl
clc
cmp
sarb
pop
xlat
jno
in
outsb
int3
mov
adc
repnz
or
mov
adc
cmpsb
mov
outsb
cmpsl
cmp
xchg
or
ficompl
je
ror
ja
insb
call
mov
mov
test
mov
stos
xor
les
lods
imul
fwait
nop
stos
int
xor
jne
hlt
clc
mov
inc
je
flds
push
push
loopne
loope
testl
nop
imul
rcll
pop
jo
sti
loopne
add
mov
inc
lods
jno
push
cld
data16
enter
outsl
mov
cld
call
sarl
out
push
into
jae
push
addr16
xor
in
test
xchg
ljmp
push
pop
test
xchg
cltd
es
sub
call
sarl
fsub
jecxz
rcrb
mov
cmp
push
push
popa
push
mov
movsb
dec
aaa
mov
jecxz
out
daa
adc
jge
or
fwait
cli
push
push
push
test
cmpsl
mov
jns
or
insl
icebp
sti
inc
or
cmpb
sub
mov
pop
stos
scas
push
ds
imul
ret
movsb
sub
lahf
mov
sbb
imul
jns
mov
mov
movsl
add
or
je
mov
dec
bound
sbb
mov
adc
jne
ljmp
mov
or
cld
insb
stos
sub
push
mov
push
pop
and
out
and
mov
aam
sub
into
sub
out
sbb
dec
push
xor
stos
insl
sub
jne
int
hlt
adc
or
mov
aam
xlat
lods
pop
icebp
gs
hlt
push
repz
es
stos
xchg
call
sub
iret
adc
std
sbb
cmp
mov
jae
in
pmaxsw
push
dec
mov
dec
jb
push
jg
push
in
sbb
push
pop
cvtps2pi
insl
int
xchg
jp
dec
ret
push
jb
cmpsb
aad
xchg
loope
add
insb
pop
lods
gs
out
lret
adc
movsb
push
jg
add
xor
stc
xor
xor
arpl
cwtl
clc
xchg
inc
scas
push
cmpsl
cmp
xor
mov
lods
xor
addr16
fdivl
lcall
push
andb
push
jmp
sbb
dec
sarb
js
cmp
jecxz
addr16
out
test
sbb
std
jmp
jecxz
mov
and
dec
push
icebp
lcall
sub
dec
aas
xor
and
jnp
je
les
mov
inc
cmpsb
sbb
int3
ret
mov
into
push
lods
sub
pop
mov
rorb
xor
mov
lcall
inc
fisttpl
in
inc
mov
xchg
fdivr
mov
pop
pop
sbb
sbb
aam
mov
rep
cltd
or
mov
adc
cmp
out
loopne
jp
and
jne
notl
jle
cltd
sbb
xchg
xchg
sbb
push
xchg
jge
sbb
gs
sub
jno
mov
push
push
mov
jecxz
shl
and
popf
in
into
popa
push
into
mov
cmp
stos
xchg
scas
sub
addl
mov
adc
ss
jne
lahf
cmpsl
repnz
or
xor
addb
je
xchg
sub
into
sti
jge
cmp
popf
push
aam
lds
iret
cmc
sbb
mov
sbb
orl
sbb
sub
lock
cld
mov
jns
int
negl
sub
sub
lock
lock
out
aas
pop
jb
mov
out
std
jae
clc
cmp
sbb
pop
inc
arpl
inc
cmpl
into
xor
xchg
mov
testb
push
repnz
cmpb
xchg
daa
pusha
test
or
pop
sub
iret
arpl
pushf
or
imul
inc
addr16
movsb
out
ret
xchg
int3
xchg
adc
push
pop
std
rcrb
scas
addr16
push
pushf
mul
sbb
mov
push
mov
pop
das
adc
or
iret
mov
sbb
int
or
xchg
cltd
rcrl
adcl
into
push
add
mov
gs
mov
adc
cmp
fcmovb
lods
cmp
shl
idivb
out
imul
std
test
outsl
scas
fwait
je
lret
out
sqrtps
stos
sub
bound
pop
mov
fisubs
or
pop
sub
mov
mov
fisttps
add
outsl
pop
add
cmc
pop
add
jo
sarb
xor
cwtl
or
daa
xchg
lret
and
ljmp
jns
movsb
pop
push
stc
jp
aaa
mov
sub
std
dec
sahf
fisttpl
cmp
push
stc
jl
push
push
xchg
push
sbb
jbe
sti
clc
xor
daa
in
xchg
imul
mov
mov
mov
ror
mov
hlt
shl
lds
dec
rolb
xlat
mov
mov
outsl
fildll
push
fldenv
sbb
and
in
xor
sub
rol
in
dec
test
add
adc
or
movsb
mov
push
lret
mov
xor
or
clc
arpl
lods
dec
fsts
sti
cmc
mov
mov
int
mov
mov
add
sbb
js
sbb
aas
pop
cs
push
scas
xor
sti
fdivr
sbbb
mov
fwait
pop
xchg
mov
inc
jbe
dec
jae
adc
push
jae
in
inc
or
dec
movsb
aam
jno
mov
fisubl
add
outsl
jmp
aam
mov
call
ret
stos
jg
dec
test
push
fsincos
sbb
dec
ds
addb
scas
adc
pop
out
xchg
sub
dec
ss
mov
repnz
stos
int
jo
pop
inc
jno
outsl
test
xor
insb
repz
fwait
imul
mov
js
je
in
push
leave
lea
fsubl
jl
mov
push
insl
es
xchg
jp
jne
cmc
ljmp
mov
ss
push
dec
sbb
push
fwait
aad
push
push
lods
mov
mov
mov
fidivrs
xor
jge
sub
push
icebp
adc
mov
and
push
dec
lret
sub
xchg
cmp
aam
aam
fs
into
mov
mov
jmp
adc
inc
insb
or
push
sub
pinsrw
jb
ret
push
std
push
push
cmc
adc
or
push
jo
fs
lods
jns
inc
lds
inc
sbb
addr16
cmp
xor
ss
push
leave
int3
push
sub
jns
shll
dec
mov
lods
cli
pop
cmp
sub
jae
sub
push
repz
mov
adc
ss
mov
sub
sub
mov
sbb
jns
out
dec
lods
fldenvs
xor
jbe
ficompl
out
jo
daa
or
mov
sti
xor
cmp
les
nop
stc
enter
addr16
push
shlb
scas
es
int3
addl
inc
test
adc
adc
adc
fmull
fdivrs
aam
xchg
jecxz
test
or
in
popa
int3
rep
sub
inc
roll
aad
pop
mov
xor
cmp
xor
xchg
and
adc
push
les
push
notl
mov
mov
jno
jo
mov
push
in
xchg
cltd
mov
arpl
mov
out
lcall
lds
mov
dec
shld
and
cltd
push
xchg
arpl
cmp
and
clc
dec
loopne
test
push
and
dec
loope
jns
cmp
xchg
mov
mov
cld
xor
cld
cs
test
mov
jbe
fwait
xchg
adcl
addr16
in
fisubrl
xchg
js
jp
add
xchg
fildll
pop
add
int
push
xchg
mov
inc
fldenv
mov
xorl
dec
lds
into
cld
scas
fmuls
mov
push
repz
mov
jno
fldt
push
imul
xor
ret
adc
aad
in
stos
aam
dec
push
pop
daa
cmpsl
cs
call
pusha
pop
mov
fadd
pop
ljmp
xlat
shll
sub
cs
test
adc
sbb
shlb
mov
sbb
sub
cmp
ja
insl
lock
xchg
mov
leave
inc
clc
addr16
xor
ds
fcmovnb
push
mov
xlat
mov
mov
jecxz
push
inc
sbb
je,pn
mov
jnp
sar
jg
cmpb
push
mov
or
insb
and
ja
inc
pop
dec
insl
fists
ljmp
pop
xchg
aam
rcr
cld
frstor
lret
mov
repnz
insl
dec
lgs
insl
xlat
test
inc
xchg
aas
sti
sbb
clc
or
mov
ja
push
cltd
arpl
ret
sbb
sub
and
xor
adc
add
xchg
inc
das
lods
cmpsb
movsb
stos
xchg
sbbl
pop
fwait
aad
mov
adc
xchg
ds
je
xor
fucomip
and
pop
roll
push
pop
lcall
xor
adc
lods
arpl
cmpsb
fwait
lods
add
dec
lods
lahf
cmpsb
shrl
arpl
clc
repnz
jne
or
mov
stc
test
mov
jp
push
ds
outsl
mov
push
or
mov
push
mov
or
mov
pop
test
pop
lcall
push
jb
aad
jp
lods
xchg
test
daa
into
lods
push
or
loop
testl
mov
arpl
inc
fstpt
stos
sub
jecxz
jge
dec
mov
test
out
sbb
adc
inc
xor
mov
cmp
pop
adc
mov
add
js
pop
inc
sub
cwtl
cmp
das
jl
cmp
aad
pop
xchg
jo
and
jle
inc
int
decl
adc
test
out
lcall
movsl
mov
push
and
jecxz
mov
lods
clc
test
mov
in
xchg
jmp
mov
out
mov
sbb
jnp
fildll
mov
sub
or
andl
in
mov
clc
jnp
or
sbb
sub
adc
jl
xor
call
int
out
jbe
add
mov
pminub
loope
dec
sbb
mov
fildll
inc
and
inc
je
arpl
sbb
rclb
jb
imull
add
int3
stc
cmc
push
inc
xor
xor
push
popf
fisubl
and
mov
pop
push
push
outsl
fildl
sbb
mov
iret
ret
ljmp
pop
sarl
jnp
or
aam
mov
sbb
mov
addr16
xchg
mov
adc
adc
sub
cs
fistpl
mov
js
test
arpl
push
test
push
sbb
jp
fsubp
test
lds
push
xor
pop
adc
imul
mov
testl
inc
gs
fcomps
sbbl
pop
inc
movsl
mov
inc
push
cld
rorb
adc
cmp
sbb
jmp
inc
jns
clc
pop
shll
loope
hlt
inc
pop
mov
pop
test
xchg
xchg
cmp
mov
mov
lahf
fstpl
lret
popf
ds
lret
out
and
adc
xorl
push
shll
mov
cmp
xchg
push
sbb
push
je
mov
shll
lods
cmp
dec
fnstenv
pop
push
pushf
decb
jns
push
in
mov
in
fstps
hlt
push
mov
jo
lcall
icebp
adc
dec
stos
iret
aas
fstl
dec
rcll
mov
popa
add
add
lds
je
push
notb
cmc
jnp
push
icebp
std
jle
xorb
out
repz
or
sbb
add
mov
mov
lock
stos
sub
dec
and
inc
stc
dec
notb
cli
dec
decl
push
pop
inc
test
xor
jmp
cmp
orb
call
and
int
pop
jmp
xor
push
push
lea
js
fcmovb
push
sarb
sub
stc
mov
dec
adc
jge
sub
sub
enter
call
xchg
inc
out
bound
rcrb
test
mov
or
in
cwtl
fdiv
pop
or
jb
xchg
pop
push
clc
xchg
outsb
xlat
mov
jl
mov
fdiv
loopne
mov
mov
stos
push
jle
mov
dec
or
ljmp
push
fs
nop
mov
sub
cmp
dec
les
cli
sub
outsl
icebp
stc
push
mov
popa
jne
push
fmull
inc
in
outsl
mov
gs
dec
out
wrmsr
shll
jae
sbb
enter
pusha
jl
xchg
je
xor
fisttpl
movsb
pop
xor
dec
or
pusha
push
xchg
bound
loope
push
int3
and
jge
lea
je
sti
mov
mov
imul
mov
mov
sub
push
imul
xchg
je
std
enter
sub
ret
cmpsb
daa
movsb
xlat
inc
push
cld
jbe
nop
in
adc
sbb
push
sahf
shll
out
clc
dec
fldcw
jle
imulb
and
mov
fstpl
adcb
iret
mov
fildl
cmpsb
mov
inc
mov
push
decb
in
cmp
sub
mov
mov
mov
shlb
pop
imull
mov
nop
xchg
sbb
and
mov
dec
in
cld
gs
jl
aam
xchg
sub
lea
mov
test
out
xor
ret
xor
rcl
ja
cld
shlb
xchg
das
xchg
cmp
ss
insb
and
xor
cmp
cmp
orl
insb
mov
leave
daa
outsb
addr16
sbb
aam
in
call
notb
pop
testb
inc
adc
popf
fstpl
xchg
test
jnp
mov
std
sbb
cld
adc
in
cmp
iret
clc
dec
imul
repnz
inc
mov
aam
push
mov
inc
pop
lods
pop
out
push
out
mov
add
xor
or
setnp
inc
outsl
cmp
push
pop
cmp
pop
in
stos
pop
in
cmp
fisubs
cmpsb
inc
xchg
icebp
or
clc
inc
stos
mov
lret
pop
sub
fcomps
pop
fidivl
xor
adc
xchg
aaa
pop
xchg
pusha
je
xor
lock
adc
xchg
inc
cmp
int3
cmc
mov
mov
mov
dec
push
mov
xchg
mov
fldl2t
xor
sbb
sbb
test
pop
push
das
repnz
dec
movsl
fxch
lahf
fdivrs
insb
dec
daa
add
xchg
fsub
std
sbb
xchg
stos
sub
fnop
mov
pop
movsl
enter
in
inc
sbb
lds
jle
lret
loope
inc
imul
jo
bound
xor
loop
adc
push
into
mov
mov
movsb
pusha
mov
sbb
xchg
inc
pop
cmp
lods
or
fcomp
mov
repz
mov
cmp
ret
out
aaa
mov
aad
xor
insb
addr16
lahf
sbb
xchg
or
xchg
adc
rcrb
ret
add
and
inc
add
fs
cmp
cli
or
cmp
mov
adc
push
mov
fs
sti
push
xor
sub
ret
outsl
mov
dec
mov
into
shlb
lea
and
adcl
xor
pop
rcrl
orl
es
and
lods
inc
sbb
mov
shr
mov
test
jne
ret
or
imul
jle
adc
lods
mov
pop
insl
lret
dec
adc
inc
xorl
pop
sub
push
mov
jle
inc
fistps
imul
aas
mov
xchg
call
xchg
outsb
push
dec
inc
adc
out
and
mov
cmp
xchg
jecxz
movsb
mov
mov
dec
rorl
stos
xchg
xchg
jae
stc
sti
sub
rcll
pop
leave
test
and
mov
in
scas
enter
mov
cmp
jle
outsb
mov
adc
lods
pushl
movsb
sti
inc
cmpsl
mov
push
rcl
ds
cld
stos
inc
mov
rorb
or
int
shrl
ja
imul
insl
mov
sub
das
mov
add
fs
cli
adcb
sbb
movsl
lods
mov
or
insb
push
push
jle
ljmp
enter
cltd
hlt
and
aas
mov
pop
xchg
lea
in
out
adc
mov
adc
fs
sub
stc
mov
scas
or
dec
fstpl
call
loope
iret
data16
mov
fs
ret
int3
int3
xor
lahf
inc
leave
push
push
adc
fsubr
xchg
fucom
mov
push
in
lea
sbbb
sbb
inc
pop
and
add
lahf
popa
ret
ret
jl
ds
fsincos
add
movsb
and
pusha
lahf
cmc
les
dec
ror
dec
call
aaa
mov
xchg
push
mov
jg
mov
je
fisubs
jl
add
ljmp
daa
mov
dec
cmp
pop
mov
jl
sub
or
test
icebp
pop
rorb
cmp
cmp
fldcw
pop
push
dec
jmp
orl
xor
push
xor
or
mov
stc
mov
adc
mov
mov
out
lods
cmp
hlt
aad
sbb
clc
push
inc
add
or
pop
fists
push
sub
jmp
test
jno
out
add
loopne
mov
add
or
das
push
and
xchg
insl
mov
in
xlat
jg
lea
jmp
sbb
inc
push
test
pop
lds
jecxz
or
subb
mov
jo
int3
jns
mov
push
cmp
sbb
test
mov
mov
cmp
mov
adc
fldt
push
fxtract
ljmp
shlb
fchs
loopne
mov
or
push
into
cwtl
test
cmp
idivb
lahf
push
in
mov
imul
mov
adc
das
and
mov
shl
fisubrl
repnz
mov
sub
lahf
push
std
test
cltd
xchg
bound
pop
rcrl
ss
push
push
jge
mov
mov
cmp
sbb
mov
nop
jno
and
lods
pop
aad
in
inc
out
leave
cltd
xlat
lret
shl
inc
push
or
loopne
sbb
test
push
xchg
fiadds
xchg
fs
mov
sbb
bswap
jle
jecxz
mov
data16
ret
mov
pop
test
jecxz
or
jl
andb
hlt
dec
pushf
pop
shll
dec
add
dec
lock
mov
push
leave
xchg
mov
mov
push
in
inc
sub
fbstp
mov
mov
adc
mov
mov
lea
subl
jb
daa
iret
stos
mov
bound
lds
fidivl
xchg
and
mov
cmc
cmpsl
xchg
lea
outsl
cwtl
fmuls
insb
lcall
std
push
into
daa
test
xchg
jnp
sbb
xorl
outsl
mov
add
mov
dec
sbb
cmp
push
mov
and
push
pop
cli
les
cmp
jl
or
cmp
adcb
scas
dec
out
add
insl
sbb
jns
push
imulb
sbbl
add
cmp
ficompl
push
sub
cmp
aas
fisubrl
fadd
jb
sbb
rclb
out
shrl
rclb
and
cmpsb
outsb
scas
xchg
sahf
mov
outsl
stc
enter
or
jbe
mov
leave
and
repnz
sub
or
call
cmp
shrl
push
mov
xor
shrl
pop
stos
pop
or
out
xchg
inc
jae
jbe
jne
xchg
adc
mov
lds
popa
pop
jns
out
mov
cltd
push
pop
cmp
jo
movsb
imul
out
xor
cmp
jnp
xchg
xor
cs
jo
loopne
aad
sub
or
in
jmp
sub
sbb
outsl
push
cltd
call
or
pop
stc
test
adc
call
jno
sbb
cmpsl
subb
addr16
iret
test
and
roll
cmp
dec
mov
inc
nop
aam
in
cmc
sub
dec
sbb
fdivl
iret
repz
cmc
out
cld
and
xor
adc
data16
xchg
pushf
pop
fldenv
outsl
inc
nop
subl
push
sub
dec
pop
sub
pop
sarb
dec
notl
testb
scas
jecxz
jbe
and
lods
shlb
lock
add
fists
rorl
adc
andb
mov
das
mov
jns
xchg
jmp
sub
dec
fidivs
js
neg
sbb
mov
xchg
dec
imul
mov
mov
push
mov
pop
mov
aaa
cs
fwait
jnp
mov
adc
rcrb
ja
sti
mov
ret
in
call
xorb
dec
mov
outsb
jns
cmpsl
mov
cmp
ds
jae
mov
pushf
xchg
movd
dec
sub
mov
mov
fildll
insb
pusha
mulb
arpl
mov
rorl
jb
fwait
xchg
mov
out
cmpsl
notl
sti
sub
repnz
sbb
mov
nop
sbb
pop
xor
xor
cmpb
rcrl
mov
mov
roll
mov
pop
add
lret
jae
je
cwtl
inc
cli
movsb
lods
lods
mov
in
std
jnp
popa
aam
fsqrt
mov
jge
int3
jnp
aad
and
xlat
insl
sbb
test
add
stos
int3
adc
xchg
xchg
inc
fcom
loopne
mov
clc
jns
jae
ds
or
mov
pusha
push
pop
nop
push
push
push
cltd
into
add
sbb
rcr
xchg
cmpsb
or
ror
jns
mov
dec
push
in
aaa
mov
sub
in
xor
test
or
sbb
fsubl
out
and
cmpsl
sbb
movsb
and
movsb
sarl
sbb
cmp
mov
sahf
xchg
xor
ljmp
enter
pop
fsub
add
aad
fldl
xchg
dec
sub
fs
cmp
popa
xchg
jns
lret
push
jecxz
xchg
fbld
jbe
int
cli
cmc
xchg
mov
lcall
inc
inc
std
cmp
aas
pop
fmull
dec
sbb
cmp
notl
mov
test
bound
test
xchg
std
imul
push
xchg
test
mov
sub
in
scas
fiaddl
inc
fnstsw
es
jmp
jmp
push
test
xlat
call
scas
cmp
jecxz
lret
fsubrl
jbe
enter
mov
dec
fiadds
lret
jmp
arpl
sbb
push
lahf
jb
adc
jp
mulb
jle
dec
mov
cmpsb
push
pop
sarb
int3
or
aam
pop
cwtl
rorl
in
ljmp
mov
inc
mull
les
shrl
inc
adc
mov
ja
jg
push
fildl
jp
pop
push
fidivs
cli
sbbl
cs
xchg
mov
add
push
fstl
mov
inc
shll
inc
sbb
scas
pop
push
lds
repz
aaa
cmp
lcall
push
sbb
xchg
cmp
and
pop
adc
dec
stc
add
add
add
jo
std
xchg
mov
rcl
subl
fcmovbe
mov
movl
cwtl
in
je
in
cmp
mov
push
cmp
push
call
aaa
push
stc
mov
fsubrl
outsl
xchg
jno
push
mov
push
sbb
xchg
popa
imul
sbb
mov
lods
fidivs
sub
dec
xor
add
cmp
fdivl
mov
push
ja
fisttpll
mov
popa
xor
fs
sub
into
add
xor
jmp
lea
addb
ss
nop
add
enter
paddusw
popa
adcb
imul
add
mov
mov
push
cmpsl
sbb
sub
pop
push
mov
and
push
leave
insb
cmp
jle
js
or
fldcw
test
push
cmpl
and
movsb
cs
fisttpl
repnz
xor
and
mov
movsl
or
inc
jp
mov
addb
stc
mov
mov
shlb
mulb
cmpsl
call
imul
lock
leave
sbb
pop
xchg
or
adc
mov
jecxz
addr16
mov
movaps
pushf
push
sti
dec
jns
or
sahf
repnz
jl
cwtl
incl
popa
jae
or
dec
mov
lcall
sbb
loope
xchg
push
hlt
lahf
into
sbb
call
xor
pop
cmp
addr16
jl
hlt
jmp
imul
sbb
popw
add
xlat
jne
sarl
in
int3
mov
enter
sub
add
adc
mov
scas
movsb
fucom
loop
ss
repnz
mov
or
adc
add
sbb
in
popf
scas
jo
or
cld
es
xchg
jo
inc
into
clc
mov
pop
popf
xlat
jno
lret
push
mov
fldl
test
lea
lcall
mov
inc
inc
push
dec
std
lods
adc
inc
dec
cmp
das
bound
pop
mov
ret
add
sbb
int
adc
arpl
ret
adc
divl
cmc
and
dec
sub
ret
adc
lret
scas
xorl
sbb
fdivs
and
cmp
or
and
icebp
xchg
jp
les
out
aaa
rol
hlt
js
xchg
add
sbb
lret
add
cltd
bound
push
outsl
mov
jge
sub
je
jbe
push
sbb
mov
mov
loop
movsl
in
adc
push
stos
pushl
fdivrs
and
dec
jae
and
xchg
or
and
in
inc
pop
sub
sub
movsb
mov
mov
cs
sub
movsb
and
mov
lret
jo
adc
test
xchg
xor
or
sbb
stos
jae
add
sbbb
jle
mov
pop
mov
pop
aaa
pop
fildl
xor
mov
mov
jns
aam
adc
leave
cs
adc
and
js
xor
cmp
cmpsl
outsb
jmp
dec
cli
test
ss
cltd
add
adc
mov
jne
test
cmpsb
dec
sub
inc
jb
sti
shlb
mov
clc
push
popa
xor
push
inc
sbb
xor
sbb
mov
fs
into
dec
dec
adc
mov
ret
jle
or
ljmp
add
add
out
push
cmc
add
ja
stos
xchg
les
imul
mov
or
add
leave
int3
stos
std
js
iret
imul
or
outsl
cmp
mov
mov
loope
mov
jmp
and
mov
mov
mov
mov
test
sbb
out
sub
test
mov
mov
sub
cld
adc
aas
add
in
out
xlat
xor
testb
jle
push
jmp
imul
in
adc
pop
mov
push
cltd
out
mov
lcall
lods
enter
jecxz
mov
mov
jmp
cmp
sub
sub
mov
out
mov
mov
mov
push
aam
loopne
mov
gs
lret
sub
xor
push
aad
sbb
mov
fwait
cmpsb
or
or
cmpsl
in
xchg
and
cmp
mov
fs
addr16
test
cmp
loopne
leave
subb
aam
out
mov
leave
inc
jns
mov
adc
pusha
or
jg
pusha
lods
jecxz
scas
and
sub
lods
ret
mov
ds
push
gs
xchg
clc
mov
cmc
mov
or
sub
lock
adc
or
imul
inc
jo
pop
faddl
pop
lahf
dec
add
movsl
es
inc
js
fisttpl
aam
add
xchg
pand
xchg
cwtl
mov
push
mov
or
push
test
xor
mov
pop
xchg
xchg
fbstp
sub
or
push
cmp
cmp
ss
mov
pop
and
sti
or
add
sub
mov
cmc
pop
xchg
fists
roll
outsl
rolb
jne
cmp
rorl
addb
je
jl
xchg
dec
add
scas
pop
mov
add
out
mov
dec
sti
into
xor
out
mov
dec
ret
xchg
pop
xor
cmpsl
es
in
mov
and
andl
shld
xchg
sbb
pop
xor
push
xor
push
loop
xchg
push
or
mov
mov
inc
push
dec
pushf
or
gs
in
mov
sbb
cltd
push
idivb
xchg
test
stos
rorl
arpl
jbe
cmp
xor
test
lahf
cld
arpl
in
aaa
aad
imul
xchg
stos
mov
cld
jbe
push
jb
aas
daa
pop
popf
inc
and
mov
mov
xchg
inc
sbb
add
cs
dec
ljmp
lret
les
call
int
out
rclb
jp
adc
fs
mov
scas
xor
cmpsl
cmpsb
filds
out
cmp
push
in
pusha
les
mov
or
push
fsubrs
pop
inc
pop
ret
xor
lahf
dec
push
pop
push
inc
idivl
repnz
pop
mov
loop
fisubl
mov
mov
xor
dec
imul
in
sbb
fdivs
cld
shrb
in
inc
or
or
ret
xor
js
jecxz
mov
pop
std
push
xchg
mov
push
xchg
fidivl
push
xor
sahf
icebp
loopne
jg
ljmp
sub
fimull
ljmp
notl
jbe
jne
psrad
in
popa
and
insl
vmovhpd
icebp
ror
inc
push
iret
je
adc
subb
adcb
aas
xchg
dec
sub
mov
test
push
test
push
pop
shrb
push
or
cmp
pop
add
stos
xchg
mov
call
in
movsb
xorl
xchg
push
repz
shlb
enter
cmpsb
xchg
cmp
fdivrs
inc
dec
cmp
jecxz
mov
push
aam
sbb
jle
sahf
test
xchg
adcb
test
mov
cmp
cs
cwtl
lret
xor
lret
xor
xor
je
pop
inc
mov
push
push
sahf
addr16
sub
push
and
popa
cmp
adc
mov
lret
orl
push
add
or
jle
lret
fcoml
push
mov
cld
data16
xchg
mov
inc
into
dec
jne
subl
pushw
in
rorb
pop
iret
rcll
lcall
loope
sar
ret
clc
sub
das
jns
iret
pop
outsb
adc
sub
ret
dec
or
push
movsb
icebp
scas
mov
mov
pop
and
scas
sbb
pop
int3
adc
add
jo
sbb
lods
jns
and
in
or
imul
add
adc
and
lret
adc
loope
pop
lcall
cmp
fstps
inc
cmp
push
cltd
and
jmp
out
dec
mov
adc
repnz
in
push
push
mov
cltd
jmp
sub
sbb
or
or
sbb
lea
lcall
mov
sbb
fs
pusha
pop
xchg
addr16
inc
dec
push
mov
cmc
fldenv
jle
mov
add
addr16
scas
and
cmpb
or
mull
lods
addr16
je
mov
les
sti
jle
lods
adcl
addl
addr16
jnp
jae
adc
lret
out
cmp
sub
and
shlb
xchg
test
push
xor
dec
or
insl
and
jae
mov
movsl
mov
out
pop
inc
dec
sub
push
sahf
push
add
adc
add
fnsave
and
adc
mov
mov
jno
mov
adc
dec
push
inc
sti
pop
dec
mov
adc
cmp
jl
imull
outsl
lock
jl
mov
pusha
inc
xchg
sbb
ljmp
pusha
jae
lret
dec
out
push
es
mov
andl
or
push
add
cmp
repnz
imul
ja
out
lret
xchg
pop
ficomps
repz
sbb
mov
xchg
mov
or
fistpl
ret
mov
pop
pop
pop
les
int
mov
or
cmp
pusha
addr16
out
adc
testb
ret
ficoml
test
lea
mov
sub
lcall
clc
sbb
jns
shl
pop
add
and
mov
fwait
jnp
mov
or
cmp
ss
sbb
scas
mov
jg
stos
insb
sbb
rcrb
stos
ss
test
push
add
cmp
out
pusha
das
push
out
add
jp
xchg
xor
gs
pop
cs
pop
fisttpl
daa
fimuls
pusha
mov
mov
pop
adc
xchg
push
in
jo
dec
mov
dec
clc
or
movsb
and
sbb
decb
inc
lret
aas
out
insb
dec
push
rep
add
test
stos
ljmp
cmpsl
inc
fimuls
leave
in
loop
cwtl
in
jno
jecxz
xchg
shlb
stos
imul
push
mov
ljmp
mov
mov
ret
adc
and
push
pusha
xor
ljmp
mov
mov
in
inc
jns
and
into
bound
imul
sbb
mov
inc
lret
and
mov
adc
je
stos
in
jb
fisttpll
sub
adc
mov
gs
xor
clc
testb
rcll
and
inc
sub
es
fwait
cmp
rcll
pop
aas
xchg
or
sti
mov
sub
sub
test
or
xchg
sbb
add
jge,pt
andb
loop
sbb
and
pop
xor
mov
inc
sub
push
mov
mov
mov
ss
dec
pop
pop
jle
ror
or
gs
jb
xchg
sub
pop
or
negb
xor
psraw
stos
mov
pop
ficompl
jp
mov
xor
cld
ja
jecxz
dec
fwait
mov
stos
pop
jecxz
xlat
cmp
wrmsr
inc
cld
cmpsb
loopne
popf
push
pushf
les
jbe
jne
mov
xchg
xchg
lea
push
dec
pop
test
and
aas
ja
jl
dec
psubq
push
pop
and
cld
shrb
add
jns
clc
mov
jp
cmp
inc
or
jns
shl
sbb
xorl
xchg
mov
idivb
stos
add
dec
mov
das
cmp
repnz
xor
pop
push
mov
rcrb
mov
cmp
lods
push
xor
lahf
pop
mov
mov
jge
sbb
push
pop
xchg
push
mov
mov
jne
stos
aad
xchg
rorb
xchg
sbb
mov
sub
push
push
addr16
mov
sbb
mov
mov
dec
jnp
xor
cmpsl
into
imul
xchg
ljmp
cltd
out
push
ja
test
lret
adc
ret
lea
cmpsl
add
fs
pusha
mov
lock
cmp
fistpl
add
orl
hlt
mov
pop
dec
pusha
ficoms
add
movsb
addr16
or
insb
jle
movsb
sbbl
aam
dec
outsl
negb
aam
cs
stos
xchg
popf
ret
xor
movd
lret
fsts
cmpb
xchg
jp
lahf
pusha
jge
pop
inc
xor
pushf
call
and
dec
jmp
push
addr16
add
sub
outsb
out
insb
xor
inc
jbe
inc
movsl
int
stos
sub
mov
xor
lret
and
push
imul
inc
scas
xor
repnz
rcl
fsubs
rcrl
in
add
leave
dec
mov
pop
pop
stos
jnp
inc
test
ficompl
add
xor
ja
in
stc
dec
icebp
jns
ficoms
mov
push
mov
in
lahf
inc
add
jl
fcmovbe
stos
ret
in
stc
out
inc
pop
insl
sub
call
add
pop
insb
push
xchg
insl
sub
xlat
push
jae
and
sub
adcb
mov
push
cmp
lds
popf
mov
mov
mov
out
xchg
rolb
insl
push
pop
lea
jae
dec
mov
outsb
sarb
adc
push
fdivrl
jns
and
pop
mov
cmp
into
leave
xchg
cltd
mov
mov
insb
mov
ds
xchg
sti
popa
clc
jae
push
out
outsb
lds
or
sbb
dec
xchg
mov
test
in
fildll
jl
mov
or
aam
push
mov
pop
sub
xchg
jecxz
js
jg
xorb
jnp
mov
mov
repnz
pusha
adcb
jbe
lret
ret
and
xor
ljmp
ss
push
pop
pop
pop
in
xor
iret
or
sbbl
fwait
jbe
out
sbb
cmp
in
scas
mov
or
pop
je
lock
sub
add
or
mov
mov
lea
push
and
xchg
filds
cwtl
jne
aad
pushf
aam
outsl
adc
addb
fsubrp
lcall
push
xchg
add
lahf
rclb
aad
imul
xchg
cmpsl
inc
pop
pop
jne
jno
mov
scas
adc
enter
pop
sub
mov
pop
mov
xchg
inc
mov
push
xchg
mov
movsb
and
rorl
fidivl
scas
dec
data16
mov
mov
add
push
inc
sbb
test
sub
push
inc
mov
and
test
loop
scas
xchg
lcall
hlt
rorl
stc
into
cmp
lahf
sbb
mov
adc
aam
ficompl
mov
lods
add
ljmp
push
arpl
cld
loop
fucomp
movsb
pop
sub
mov
mov
mov
mov
adc
push
xor
ret
push
clc
sbb
cmp
sub
dec
icebp
sbb
fmull
scas
inc
fistps
mov
pop
adc
fmuls
lds
rcrb
les
pop
popf
insb
jo
ja
xor
loope
dec
icebp
mov
or
fimuls
in
mov
dec
jecxz
add
xchg
out
in
inc
push
mov
cmp
push
ret
iret
and
jg
cli
dec
mov
or
lcall
pop
imul
or
inc
rcr
adc
mov
add
adc
mulps
imul
and
adc
inc
add
repnz
pop
pop
lret
in
addr16
sbb
dec
inc
sti
sbb
mov
sbb
push
push
sbb
sub
jno
sub
or
das
sub
lahf
hlt
scas
repz
out
inc
inc
mov
gs
add
andb
xchg
dec
stos
push
add
push
movsb
test
mov
aas
or
jnp
call
xor
xchg
outsl
test
imul
addr16
push
and
xchg
xchg
iret
int
lcall
sub
addb
rcl
sbb
daa
sub
rolb
dec
mov
adc
dec
mov
sub
xchg
jb
pop
pusha
lock
sar
lock
scas
mov
jbe
push
lcall
not
mov
adc
ja
fldl
inc
popf
imul
out
shrb
out
aaa
xor
mov
lret
addr16
js
or
dec
mov
fldenv
aas
movsl
pop
xchg
dec
inc
repnz
andl
rep
mov
scas
pusha
xchg
fsubr
cmp
mov
repz
jmp
hlt
pop
push
mov
pop
pop
push
adc
and
cmpsb
inc
ja
push
call
enter
mov
cmovp
dec
adcl
jb
nop
insl
dec
xchg
and
std
fisubrs
cmp
push
cmp
cmpsl
loop
add
cmp
push
or
sub
add
fstp
jle
push
hlt
mov
jg
cld
xchg
leave
mov
jae
clc
scas
pop
pop
arpl
repnz
cwtl
shl
and
adcb
icebp
insl
lret
jae
jno
jg
cmpsl
in
or
lret
nop
inc
adc
pop
pop
popa
xchg
aam
sti
ljmp
push
in
shr
adc
push
mov
add
lods
das
pop
imul
xlat
ficoms
addr16
loope
loopne
pop
out
in
jle,pt
ljmp
xor
adc
fs
int
test
int3
imul
dec
insl
and
aam
ret
mov
sbb
cmp
add
divb
out
addr16
mov
lret
push
add
sub
sbb
mov
lahf
sub
mov
jge
pushf
mov
jle
mov
mov
leave
mov
out
add
rolb
jo
int3
ds
outsl
cmpsl
jl
push
push
add
jns
fs
mov
inc
push
shlb
mov
xor
adc
and
movsb
sub
ret
je
fistl
jmp
ss
xchg
dec
in
cwtl
fadd
xchg
rorb
test
adc
pop
test
mov
mov
pop
adc
or
rorl
jae
psrad
fisttpl
fbld
insb
arpl
push
ja
xchg
icebp
adc
or
jmp
test
push
decb
fisttps
stc
push
pop
jb
addr16
out
es
mov
loopne
xchg
cmc
fidivl
daa
stc
ret
addr16
jmp
mov
or
pop
in
inc
push
cmp
mov
mov
in
mov
and
repz
cmp
sub
out
jno
xchg
cmpsb
or
loopne
cmp
out
xor
mov
jb
jl
aas
lahf
xor
mov
arpl
dec
cmpsl
arpl
sub
rorb
mov
add
mov
dec
inc
adc
push
jle,pt
pusha
mov
inc
xchg
xlat
aam
outsb
jg
insb
pop
inc
mov
aam
or
pop
popf
in
push
add
lods
add
test
fisttps
aas
push
push
jmp
cmpl
xchg
adc
mov
pop
setg
sub
inc
push
dec
pop
bound
pop
push
dec
aam
jb
dec
outsb
mov
aas
jmp
or
iret
aaa
mov
mov
leave
add
rcrb
daa
mov
inc
mov
fstpt
fs
stc
aas
mov
out
pushf
pop
cwtl
mov
xchg
sub
dec
sub
fdivrs
idiv
outsb
push
sub
repnz
inc
sbb
xchg
test
xor
pop
insb
xor
std
and
lds
jns
cltd
pop
ficomps
pop
adcl
addr16
cmp
orl
dec
int3
add
loopne
sub
mov
mov
bound
es
pop
push
lahf
mov
dec
mov
sub
push
sbb
fidivl
and
mov
add
sbb
aad
rorl
jo
and
xchg
mov
xor
adc
mov
lcall
lock
mov
scas
ret
test
cmp
pusha
xlat
ja
cmp
cmc
pusha
rcll
pop
movsl
das
mov
sarl
mov
xadd
pushf
jg
and
cld
gs
jmp
das
addb
ss
movsl
cltd
outsb
pop
cmp
pop
filds
lods
pop
sbb
mov
lods
sbb
aaa
sbb
inc
inc
cmp
in
mov
repz
aaa
jns
xor
pop
mov
shl
popa
maxps
repz
xchg
cwtl
cmp
lods
inc
and
pop
pop
rcrl
roll
push
add
std
aaa
hlt
adc
xchg
nop
mov
mov
xlat
xlat
lods
mov
dec
push
xchg
idiv
add
mov
jecxz
xor
inc
add
mov
pop
mov
loope
aaa
in
icebp
andl
in
xchg
lods
call
cli
subb
or
test
ror
xchg
lds
fwait
ss
ds
mov
jnp
sub
adc
fwait
jecxz
jae
imul
jle
mov
adc
addl
mov
adc
out
mov
mov
xchg
sub
ljmp
cltd
cmc
rol
int
mov
arpl
mov
pop
out
sub
xor
push
pop
pop
call
mov
inc
xor
jle
ljmp
inc
scas
dec
mov
inc
sbb
popf
and
mov
mov
leave
lods
dec
imul
mov
test
jle
ret
leave
xor
mov
subl
adc
push
ja
lret
pusha
fnstcw
push
xchg
ret
mov
cmp
xor
js
or
movsl
push
shlb
outsl
cmp
imul
lods
pop
cmp
dec
jno
test
sub
pop
shlb
repnz
cld
repnz
push
cld
sbb
mov
jne
bound
lock
xchg
inc
pop
dec
inc
lods
jns
mov
imull
mov
inc
jle
mov
leave
out
add
pop
out
lcall
subl
mov
adc
test
sbb
jmp
hlt
add
ja
fcmove
movsb
aaa
sarb
push
ss
and
mov
popa
movsb
int3
popa
mov
cmp
clc
sub
arpl
inc
jns
lcall
sub
cmpsl
arpl
and
add
adc
mov
pop
outsb
jns
push
les
or
or
inc
movb
cmpsb
adc
stos
dec
jmp
mov
orb
clc
add
sbb
aam
xchg
movsl
push
add
repnz
mov
std
repnz
push
lock
jo
add
sub
cmpsb
xchg
cmp
push
loope
loopne
addb
shlb
dec
roll
inc
movsb
mov
mov
test
lcall
dec
stc
cmp
ds
popf
and
and
cmpsb
mov
xor
xor
mov
nop
out
inc
sbb
dec
movsl
lods
cmc
cmpb
mov
push
loop
cli
out
push
mov
loop
mov
and
mov
mov
sub
dec
fwait
xchg
loopne
fisubrs
insl
push
xchg
cmc
sbb
add
ret
dec
mov
dec
clc
rcll
adc
es
loope
and
add
je
pushf
lcall
mov
cs
sbb
sbb
push
mov
and
adc
lods
jle
cmp
arpl
push
outsl
push
je
dec
stos
jl
jbe
popa
test
mov
sbb
pop
push
mov
test
in
int3
xor
int
movl
sbb
mov
or
idiv
or
add
cwtl
sarl
in
cmpsb
push
mov
jns
scas
and
daa
and
sub
mov
jb
inc
rolb
push
pusha
mov
push
loop
std
jp
inc
inc
xchg
cld
mov
xchg
mov
push
out
mov
jge
xchg
xchg
inc
fldt
sbb
xchg
push
dec
leave
lea
xchg
push
lods
pop
mov
adc
movsl
movsb
pop
popa
call
push
jp
mov
push
int
push
adc
mov
or
xchg
add
int
add
add
xor
dec
adc
sti
add
fs
adc
outsb
in
aas
lcall
add
push
jmp
inc
jne
repnz
test
xchg
lods
xor
scas
xchg
pop
and
popa
xor
in
jle
inc
push
rcl
test
clc
adc
push
enter
push
mov
push
push
mov
push
lret
sti
fstpl
mov
outsl
xor
mov
push
ret
lahf
out
jge
daa
sub
or
outsl
popa
aam
fcompl
lods
adc
fyl2x
nop
cmp
js
push
dec
std
call
lock
sahf
fwait
dec
or
push
in
ret
push
or
mov
mov
lcall
ret
scas
daa
incb
dec
int3
push
fbstp
test
jo
sbb
xor
xor
xchg
hlt
and
push
insl
xorl
cmp
psubsw
and
or
pop
or
push
pop
ljmp
xchg
dec
xchg
bound
jne
xchg
out
dec
es
pop
push
xor
push
dec
xchg
push
scas
rcl
jnp
imul
xchg
jo
adc
xchg
inc
test
and
icebp
adc
in
lock
clc
mov
fiadds
mov
pop
jnp
mov
or
add
inc
mov
out
mov
icebp
xlat
sub
mov
sub
or
or
mov
test
mov
jmp
popf
xchg
std
push
mov
repnz
aas
inc
out
fcmovu
lock
leave
mov
xchg
aas
sahf
jbe
xchg
enter
xchg
test
xor
in
in
pop
xor
notb
in
inc
jbe
pop
dec
movsb
mov
xor
sahf
testl
or
je
pushf
mov
dec
sub
nop
push
pop
daa
xchg
xchg
rclb
addl
add
imul
push
jmp
inc
mov
neg
push
aam
inc
adc
dec
add
int3
mov
dec
fstps
scas
pusha
dec
mov
insl
inc
testl
cmpsb
jnp
fistpll
push
lahf
dec
scas
fsub
push
pop
push
mov
je
push
sbb
bound
ficomps
std
lods
xchg
inc
test
sub
sbb
jg
incb
mov
mov
adc
xchg
out
clc
add
push
clc
jp
dec
fadds
push
repz
scas
xchg
call
rcll
in
jmp
lods
fildll
test
jbe
cmp
xor
push
inc
ret
pop
push
jl
fisubs
sti
lods
std
fucomi
xchg
xor
outsb
mov
sub
leave
rcll
mov
stos
loopne
cmp
aam
mov
ds
inc
add
mov
insb
push
fwait
sub
cmp
or
es
fidivl
fmul
fwait
sbb
push
cmp
stc
ds
divb
dec
or
rorl
aam
adc
mov
pop
sub
imul
mov
inc
inc
adc
adc
mov
aas
pinsrw
sub
pop
and
pop
xor
pop
pop
inc
mov
imul
outsl
inc
mov
insb
inc
push
shll
or
addb
dec
mov
dec
sub
jo
mov
and
lea
push
xchg
push
cmp
sub
cli
xor
popa
mov
inc
cmp
push
lock
clc
jo
std
dec
cmpsl
int3
in
sbb
pusha
jo
pop
bound
sub
shl
popf
popf
sbb
sub
mov
push
push
pop
jmp
adc
and
xor
icebp
mov
enter
addr16
in
push
mov
add
cmp
pusha
xor
push
xchg
insb
mov
jmp
mov
stc
aad
sbb
mov
dec
outsb
cld
jae
pop
scas
adc
int3
fmul
push
ret
lahf
add
out
popa
mov
xor
movsb
in
iret
push
sbb
xor
mov
movsl
mov
jns
out
cmp
divl
jns
cmp
dec
mov
pushf
aas
gs
es
ret
pop
jp
stc
dec
mov
xchg
pop
pop
push
fcoms
inc
notl
popa
in
test
push
sub
gs
scas
mov
mov
call
aas
sub
cmp
mov
movl
int
mov
pop
lsl
inc
pop
out
mov
call
inc
test
and
movsl
dec
add
cwtl
add
shrb
mov
mov
mov
xchg
adc
fwait
jmp
adcb
mov
push
pop
ljmp
adc
xlat
dec
test
es
ja
inc
data16
dec
das
insb
cmp
or
call
mov
xchg
int3
mov
cld
loope
jge
outsb
mov
jge
jg
jo
cmp
fcmovu
mov
adc
pop
mov
in
add
adc
and
push
pop
repz
popf
lods
pop
fisttps
push
sub
data16
adc
xchg
leave
lods
add
int3
cld
les
dec
loope
xchg
popa
cld
cli
mov
xchg
sub
bound
sub
jl
stc
rolb
or
sbb
and
int
and
cs
out
test
mov
fstpt
cwtl
mov
sti
cld
rcl
ficomps
jl
shll
cmp
xchg
or
bound
out
out
inc
lods
sarb
jle
cld
cmp
mov
ret
ret
int3
outsb
mov
mov
testl
fnstsw
and
mov
stos
es
sub
les
out
or
or
pop
cmp
loopne
sub
or
mov
sub
mov
pop
call
push
int3
sub
xchg
and
stc
jge
cmc
cwtl
data16
mov
xor
repnz
addb
sbb
or
in
or
jne
pop
int3
jne
or
sub
bound
cmpsb
cmp
fdivrl
loopne
push
popf
dec
or
std
rcll
and
jne
jmp
jle
cltd
js
cmp
mov
js
icebp
mov
add
out
jnp
mov
sub
mov
push
clc
add
mov
jl
mov
adc
outsl
mov
jle
mov
xchg
fcmovb
rorl
sbb
inc
mov
xchg
push
movsb
rolb
pop
fstps
jle
add
add
nop
jno
ds
mov
in
pop
push
je
aam
mov
fmuls
jno
or
dec
inc
shl
mov
cmpsl
ss
out
or
adc
push
daa
icebp
in
pop
or
andb
or
mov
inc
imulb
mov
jecxz
mov
outsb
sub
divl
dec
aas
mov
cli
dec
xchg
lcall
jo
mov
mov
dec
std
xchg
add
notl
sub
cli
inc
and
adc
xlat
sub
cmp
inc
inc
jnp
aam
in
sbb
loop
dec
or
cmp
lock
mov
lods
push
sbb
insb
sbb
mov
mov
fidivl
and
invd
rclb
sbb
dec
outsb
fsts
shlb
push
xchg
cmp
aam
lret
fucomp
rorl
js
into
cmp
mov
adc
add
pop
xor
dec
dec
andb
icebp
dec
insb
or
push
xchg
xlat
pop
and
pop
int3
loope
mov
cmpsl
aam
xor
push
aaa
mov
test
adc
inc
inc
xchg
push
push
lcall
jnp
je
insl
loope
jnp
mov
dec
pusha
call
jl
ja
ret
cmpsl
sub
xor
sbb
adc
jge
pop
sbb
dec
ja
filds
mov
out
add
imul
mov
mov
es
iret
or
sbb
push
pop
mov
stos
jb
fsubl
insl
xchg
add
push
or
and
pop
add
mov
dec
push
push
out
sbb
cwtl
daa
and
push
cmp
sbb
push
add
dec
xchg
push
in
bound
in
pop
loop
loope
mov
ds
orb
xor
push
rorl
inc
mov
out
dec
mov
sbb
cli
outsb
ud0
mov
dec
std
inc
and
loop
popa
ret
mov
xlat
pushl
scas
dec
incb
jl
cmc
jnp
and
fstl
sbb
inc
mov
cmc
pop
fstpt
cld
mov
fildll
fstl
mov
push
push
xchg
and
imul
addr16
or
mov
fsubrl
mov
fmuls
mov
jb
jmp
pop
nop
jg
pop
pop
imul
popf
scas
sub
and
jno
hlt
testb
and
gs
movsb
mov
xor
mov
aam
push
pop
lods
out
xor
pop
and
pushf
dec
xor
fnstenv
movsb
cli
and
jle
mov
shr
andb
daa
and
or
fnstsw
sub
pop
imul
cmp
xchg
cmp
and
aam
popf
ss
xor
inc
pop
outsb
hlt
pop
jecxz
jnp
mov
test
dec
adc
push
sub
jnp
push
dec
add
hlt
test
gs
mov
cli
pmulhuw
repnz
mov
adc
push
or
inc
push
stos
lds
mov
or
in
cmp
outsl
pop
aas
lods
repz
inc
sbb
clc
stc
cmp
rcrb
imul
push
scas
punpcklwd
cmc
leave
jo
jecxz
pcmpeqw
test
xchg
mov
rclb
scas
jne
leave
movsb
cmc
push
mov
adc
or
clc
push
and
imul
sub
stos
std
xchg
mov
inc
daa
pcmpeqb
adc
mov
bound
jno
cmp
jmp
mov
jmp
lcall
cli
fidivrl
jecxz
rolb
loopne
pop
mov
xlat
faddl
popf
dec
rcrb
xchg
in
pop
test
jecxz
icebp
aaa
sbb
jbe
pop
inc
sbb
pop
out
mov
call
cmpsl
xor
mov
mov
inc
cld
rclb
sbbl
and
dec
test
and
shll
cmp
in
jne
repnz
rorb
mov
fdiv
pop
jae
les
out
xor
pusha
stc
aas
or
and
sub
movb
shlb
dec
es
mov
cmp
lahf
pop
xor
push
add
or
push
mov
jg
inc
xor
or
mov
cltd
les
and
loope
mov
cwtl
mov
jle
hlt
fnsave
gs
mov
out
nop
adc
fadds
into
add
pop
jbe
jg
lcall
lret
lock
repz
mov
repnz
dec
pop
inc
movsb
cld
sbb
mov
jnp
cmp
paddq
mov
std
movsb
addb
or
pop
mov
sti
fcomps
mov
pop
out
and
cmp
sbb
div
jp
inc
dec
and
js
lcall
aas
lods
dec
add
es
imul
mov
clc
jns
movq
fisubrs
add
or
or
xchg
in
and
imul
jb
cmp
in
jecxz
pop
pop
sti
sahf
jnp
add
outsl
inc
add
and
sahf
mov
loope
or
jbe
movb
xor
out
ret
ds
outsb
inc
ja
push
dec
in
push
mov
xor
into
testl
jg
mov
mov
sub
mov
xorl
aaa
mov
aaa
add
int3
test
int3
nop
xchg
xor
sbb
int
sub
scas
pop
xchg
xchg
sbb
inc
lcall
mov
aam
xchg
int
and
fwait
jecxz
jle
jg
pusha
cmpsb
popf
pop
cmpsl
loopne
ds
push
xor
sbb
imull
lcall
cmp
shlb
insl
leave
inc
push
fists
pusha
xchg
pop
mov
imul
push
sbb
push
repnz
add
stc
or
mov
fcompl
aam
and
adc
stos
and
stc
cmp
jl
outsb
mov
sahf
xor
addr16
pop
mov
stos
shrl
sbb
or
sub
sub
mov
dec
inc
cli
cli
cmp
addr16
dec
push
mov
dec
fidivrl
mov
ljmp
mov
leave
pop
push
cmpl
jecxz
addr16
or
scas
rorl
lods
fsubrl
shll
aaa
jp
fistps
xchg
push
push
sbb
pop
fldl
test
xor
jl
mov
dec
cmp
inc
movsl
xchg
iret
fldl
jecxz
adc
lcall
pop
dec
cmp
aaa
cmpsb
movsb
push
adc
and
push
mov
xor
insl
out
mov
dec
rol
xlat
out
sub
sub
mov
pop
xchg
xor
lret
mov
repz
aas
scas
inc
shr
dec
popf
push
sub
cmp
pop
inc
lahf
lea
sub
add
dec
mov
push
cmp
insl
adc
out
cmp
pop
add
out
cmp
and
popf
push
or
loop
inc
popf
jo
push
mov
testb
add
jo
xchg
adcl
mov
push
mov
lods
inc
hlt
std
cmp
inc
sub
add
sbbb
ljmp
lods
pop
clc
int
fsubrs
shlb
mov
push
mov
cmpsl
sub
call
add
cs
push
cmp
mov
xor
mov
mov
in
mov
insb
fiaddl
dec
in
inc
jl
daa
aas
data16
aam
mov
push
sti
add
push
push
pop
jb
jp
mov
pop
xor
sub
mov
idiv
hlt
jne
leave
test
fsubl
adc
pop
ret
mov
shrl
arpl
ss
jp
cltd
sub
mov
or
mov
iret
lret
lods
andb
repz
movsl
pop
das
or
cmp
popa
cmp
imull
fwait
mov
or
or
icebp
mov
cmp
sub
iret
adc
mov
add
xchg
es
int3
xchg
dec
adc
lret
jb
aam
sbb
clc
sub
dec
xchg
dec
cmp
push
and
enter
aad
sbb
adc
fiaddl
mov
push
loop
jnp
jmp
mov
and
inc
push
and
and
pop
sahf
daa
or
add
shl
sbb
jl
ret
cltd
je
cli
mov
push
mov
jnp
sbb
xchg
jb
adc
fistl
out
push
imul
mov
in
add
push
cmp
out
and
ffree
stos
add
f2xm1
xchg
push
adc
rolb
inc
jg
arpl
adc
fs
repz
jl
ficomps
push
popf
xchg
sbb
test
xlat
fs
and
cwtl
sbb
arpl
lock
jl
loop
jge
jle,pn
movsl
mov
push
scas
xchg
int3
add
out
or
rcrb
push
push
insl
test
outsl
pushf
mov
sub
mov
sbb
mov
jns
bound
pop
popa
push
ret
mov
cmp
or
push
shlb
test
mov
lcall
bound
sbb
xchg
icebp
jmp
or
pop
mov
aam
xchg
test
and
bound
imul
inc
dec
pop
nop
mov
sub
scas
mov
jmp
inc
bound
movsb
jmp
xchg
cmc
jne
lods
sarb
je
aaa
mov
popf
fsubs
jmp
out
and
mov
jp
adc
push
add
mov
adc
in
fstpt
fsub
push
sbb
fidivs
or
leave
aad
loope
jno
test
sub
push
movsb
dec
mov
repnz
mov
test
and
and
lock
shrb
add
xor
aas
shrb
mov
xor
out
push
or
stos
fs
lahf
sbb
scas
xchg
jp
fnstsw
add
cld
enter
and
xor
inc
lret
jmp
pop
insb
mov
push
jge
pop
mov
adc
jb
addb
push
mov
cmc
in
sbb
jmp
cmp
repnz
repnz
in
ret
cmpsl
pop
icebp
jb
sbb
mov
mov
das
test
leave
daa
sub
je
cmc
or
mov
or
fcmovu
jmp
or
ret
sub
nop
dec
into
insl
sti
imul
fadds
sbb
lret
inc
addr16
in
inc
push
adc
jmp
rcrl
aam
dec
gs
mov
dec
mov
cmp
cmp
lcall
and
mov
scas
mov
mov
jmp
sarb
mov
icebp
adc
xorb
dec
inc
pop
xchg
fisubs
inc
mov
je
inc
or
in
out
and
pop
cmp
int
addb
jbe
shl
xor
adc
xchg
jno
lahf
pop
roll
xor
lret
mov
lea
dec
std
and
std
or
lea
jecxz
jecxz
iret
sbb
gs
insl
sbb
jo
sub
rcll
mov
fs
ljmp
inc
cmp
mov
sub
mov
sbb
stos
dec
pusha
and
sbb
mov
insl
mov
jp
jnp
sbb
adc
sbb
pop
pushf
cmp
lods
andl
mov
sar
loopne
ljmp
sbb
lock
jl
inc
ret
imul
lods
xchg
cltd
xlat
dec
pop
js
popf
ret
push
and
push
rorl
jno
gs
pushf
inc
pop
ja
sti
cwtl
dec
adc
jbe
xor
xor
pop
lcall
xlat
nop
jle
fnstsw
clc
xchg
mov
out
sub
out
jo
jl
jae
outsl
sahf
idivb
xchg
mov
cmpb
xor
xchg
mov
push
sbb
add
jle
enter
rolb
lea
cmpb
add
lahf
or
add
dec
popf
gs
jl
xor
or
out
imul
xor
sbb
adc
js
jg
inc
ds
dec
cmp
adc
push
and
sbb
add
movsl
pop
fscale
and
out
mov
mov
jmp
xor
pop
es
xchg
in
push
sbb
push
movsl
or
movsb
lahf
xchg
dec
mov
add
sub
jmp
cltd
mov
xchg
orb
pusha
xor
jb
sbbl
fdivs
in
daa
mov
pop
xchg
lret
push
daa
pop
cmp
mov
lcall
lea
sbb
aas
repnz
jbe
cmp
mov
xor
pop
xor
shlb
pop
push
jno
daa
pop
xor
cmp
rorb
xchg
cld
sarb
setne
adc
fs
shr
outsl
push
insb
mov
xchg
lods
add
push
and
loopne
sub
mulb
xchg
call
pop
test
push
inc
jne
adc
mov
pop
xchg
mov
dec
jbe
fbstp
xchg
mov
std
mov
cmp
cmp
adcl
cwtl
jnp
pop
and
outsl
sti
xchg
inc
rorl
test
mov
cltd
mov
int
into
enter
pop
shl
ret
cmpsb
cmpb
in
sarl
daa
mov
sbb
and
cld
push
cmc
sti
adc
sbb
in
sub
movsb
pop
mov
push
and
pop
jmp
repnz
in
scas
adc
cltd
rclb
jl
xor
lcall
mulb
pop
adc
arpl
push
lea
aas
seta
sub
mov
ret
mov
loopne
out
aad
test
jg
xchg
push
xor
sbb
inc
mov
cld
cmp
insl
xor
and
dec
sbb
fldt
mov
mov
mov
call
out
xor
decb
adc
rcl
cltd
mov
aas
jecxz
std
pop
dec
xchg
lret
int
dec
test
xchg
fldenv
in
lock
fadds
aaa
scas
into
test
test
inc
sub
stos
inc
inc
fcomp
push
push
call
sub
js
fwait
jle
mov
pop
pop
icebp
addl
test
icebp
aaa
xchg
popa
std
adc
jg
mov
xorl
jle
loopne
je
push
in
jg
fstpt
pop
nop
push
sub
in
paddw
push
cld
and
or
inc
cmc
rcr
push
cltd
cli
pop
sti
aam
adc
and
xchg
into
mov
xchg
sub
ljmp
dec
jns
out
xor
int3
add
dec
mov
inc
inc
leave
repnz
add
lret
and
cwtl
xor
xor
int3
or
push
inc
add
hlt
jle
lret
push
leave
bound
mov
adc
jge
xchg
sub
shlb
ret
scas
and
xchg
test
clc
out
pop
dec
into
fldenv
aas
xor
cs
scas
inc
dec
adc
cmc
ja
mov
incl
sub
test
lret
mov
or
pushf
xchg
dec
lahf
adc
or
cmp
cmc
rorl
imul
ret
mov
sub
inc
pop
inc
pop
jle
enter
pop
es
enter
mov
push
pushl
cwtl
cmpsl
bound
aas
mov
mov
movsb
stos
inc
subb
mov
jnp
dec
fldl
ret
sbbl
push
test
and
cmp
movups
pushf
aas
enter
ror
cltd
xor
adc
jnp
rcll
lcall
ret
and
push
and
xor
es
mov
ja
filds
dec
call
push
andl
repnz
push
in
aas
loopne
ja
mov
fsubr
jb
pop
mov
pop
mov
dec
mov
hlt
ds
jmp
insl
leave
pop
pop
xchg
mov
mov
xor
lea
xchg
push
push
and
push
adc
mov
xchg
mov
scas
lahf
pop
xchg
cmpsb
mov
loope
mov
cmp
imul
scas
pop
int
xchg
cltd
mov
out
mov
jns
scas
cli
push
stc
push
popa
and
sarl
outsb
dec
push
in
xchg
fistpl
xor
ret
mov
ret
aas
pop
dec
mov
daa
lods
mov
fidivl
mov
ret
cwtl
dec
xchg
lods
test
mov
cs
jo
adc
push
adc
aaa
sub
jl
jb
cld
shll
mov
sub
gs
jo
xchg
xor
outsb
data16
mov
or
fnstsw
inc
mov
xchg
push
and
adc
nop
pop
jecxz
lcall
jbe
push
mov
push
and
mov
sub
cmp
js
jmp
lock
clc
pop
int
cli
int
push
sbbb
xchg
dec
iret
insb
dec
daa
lahf
cmp
mov
xchg
xchg
pop
shl
es
fwait
cmc
leave
xchg
ret
je
lret
and
mov
mov
push
pop
pusha
shrb
out
xor
repnz
pop
mov
add
xchg
fs
aaa
cs
adc
pop
lds
sub
daa
aaa
dec
ss
and
mov
ss
pop
adc
xchg
popa
pop
cmpb
jb
jmp
push
xchg
adc
icebp
sub
jecxz
pop
push
cmp
pop
sahf
lea
adc
mov
jo
mov
mov
fadd
daa
xor
mov
jno
ds
mov
lea
or
inc
inc
addr16
mov
push
xor
xchg
sub
in
push
mov
call
out
rorl
shrl
mov
ds
dec
insl
jle
sbb
mov
jno
sub
jo
movsl
add
fists
mov
in
gs
test
adc
xchg
dec
xor
xor
pop
mov
jp
rorl
pop
sub
add
inc
in
jns
push
lods
stos
sahf
push
cmp
and
adcb
inc
test
sub
cmp
stos
pop
shll
fistps
ret
lods
jp
dec
cmp
fs
sub
dec
hlt
inc
lahf
add
mov
push
movsl
aam
cltd
jno
test
cmp
loope
inc
out
outsl
es
das
and
or
inc
movsb
pop
test
jecxz
lock
lcall
scas
les
repnz
fwait
xchg
popf
mov
jge
push
sahf
xor
stc
cltd
cmpsb
add
xchg
shrb
push
je
in
adc
repnz
mov
dec
mov
pushf
lahf
adc
cmpb
pushf
xor
push
cmp
in
movsb
fbstp
push
xchg
mov
test
and
fists
push
adc
rorb
mov
es
push
ss
xor
dec
das
cs
loope
rorl
test
in
icebp
fcmovnu
aam
and
loop
add
shll
mov
aas
cmpsb
test
sbb
xchg
or
ja
adc
xchg
imul
mov
add
adc
enter
mov
scas
push
push
push
mov
push
test
mov
jne
aad
pusha
test
add
push
cmc
ss
adc
sub
and
roll
cltd
jmp
pushf
cmp
cli
push
sbb
nop
pop
sub
rcrl
lods
mov
ret
sbb
inc
dec
dec
inc
push
push
cltd
out
cmpsl
push
cmpsb
sbb
jmp
jae
fcmovu
xlat
mov
mov
outsl
pop
jecxz
aad
add
or
jae
mov
jne
js
in
int
mov
jne
fs
xor
mov
mov
push
jl
sbb
sub
rcl
scas
sti
into
sbb
xlat
movsb
adc
mov
jnp
inc
pop
pop
incb
push
mov
into
push
insb
hlt
mov
push
and
and
mul
movsl
cld
test
test
out
inc
fs
je
dec
andb
sbb
fistpll
fstl
out
push
sbb
pop
jl
faddl
lods
shlb
scas
mov
popf
jbe
call
out
pop
sbb
orl
or
adc
xor
stc
jns
jmp
jae
mov
push
push
fimuls
popf
xchg
into
pop
imul
add
sub
mov
jmp
in
lock
bound
adc
xlat
cli
hlt
fidivl
fmull
test
fists
mov
mov
inc
inc
add
xchg
aaa
and
push
inc
or
xchg
mov
pushf
jle
cmp
std
sub
mov
or
add
lcall
test
push
push
loope
test
pop
jae
lahf
sarl
cmp
enter
mov
mov
fcoml
push
cmp
push
or
pushf
or
adc
iret
push
fiadds
bound
inc
cwtl
sahf
cmp
xchg
aam
xchg
and
call
xchg
sbb
dec
jae
push
dec
popf
add
popa
xchg
sub
xor
cmp
sahf
rolb
xchg
dec
sub
lds
mov
sbb
push
adc
sub
inc
scas
and
jae
cmpl
add
out
push
icebp
pop
pop
mov
lahf
ret
shrl
mov
adc
fs
xor
mov
add
pop
insb
std
loop
or
mulb
shlb
mov
lods
stos
es
cltd
scas
mov
stos
cwtl
push
push
xlat
mov
stos
sbb
mov
es
jno
arpl
enter
push
fdivrs
jecxz
int3
inc
dec
sbb
xor
imul
or
add
lret
in
xor
add
push
mov
imul
pop
or
sub
fwait
pusha
loope
or
call
adc
sub
stos
push
insb
mov
pop
mov
mov
iret
mov
incl
jle
add
lock
js
pushf
test
test
sbb
inc
mov
cmp
jno
je
sbb
lahf
addr16
mov
int3
mov
or
ret
dec
shlb
mov
xor
shrl
shlw
jnp
add
inc
or
roll
pop
mov
sub
cmp
jle
cltd
add
insb
sbb
push
mov
scas
sar
mov
ds
pop
push
mov
imul
cs
fidivrl
stos
cmp
mov
sub
push
jmp
lahf
xor
sbb
xor
in
and
rorl
add
negb
cld
adc
aas
or
push
inc
sbb
and
faddp
stos
xor
jmp
add
xchg
mov
stos
mov
cmp
inc
out
das
test
jae
ja
jmp
sbb
imul
imul
mov
jb
push
scas
in
jns
inc
sbb
pop
ss
mov
pop
dec
jl
fmul
mov
cld
shl
mov
pop
mov
push
mov
idiv
sub
sbb
add
mov
or
stc
adc
loopne
cmpsl
test
movsl
push
pop
and
ficoms
stos
mov
popf
fistpll
push
push
jmp
inc
addr16
jecxz
jmp
pop
sbb
subw
pop
mov
xorl
inc
dec
dec
scas
dec
insb
xor
xchg
les
adc
mov
inc
inc
adc
xchg
xchg
pop
je
push
lret
aaa
int3
stos
xor
xchg
outsb
imul
jbe
xor
cmc
add
les
hlt
xor
push
pop
sub
int
int3
sub
pop
cmp
repz
cld
rcll
pop
inc
test
insb
push
loope
sub
je
fs
xchg
out
jecxz
push
addl
imul
scas
nop
push
fidivs
push
xchg
push
inc
daa
aam
push
mov
shll
lea
popf
pop
push
cmpsb
incb
jo
subb
hlt
lret
mov
cmpsl
lock
inc
cmpsl
add
stos
or
sub
jns
push
out
xorb
cmpsl
and
dec
mov
pop
mov
xor
cmpsl
lahf
mul
scas
test
mov
lret
xchg
inc
mov
dec
fs
pop
call
sub
or
push
in
pop
inc
ljmp
insb
pop
sbb
scas
xchg
fcompl
adc
shll
mov
stos
cmpsl
cmp
es
mov
dec
insl
fwait
jecxz
fxch
stc
dec
add
cmp
cmpsl
mov
mov
sub
mov
cmp
sub
insb
pop
xor
aaa
inc
rorl
or
ljmpw
ret
mov
stos
jo
lods
jecxz
dec
sub
test
testb
hlt
jmp
into
mov
and
fdivl
mov
mov
addr16
xor
mov
xchg
push
pop
mov
dec
jge
add
fwait
loop
sbb
mov
mov
xlat
pop
pop
jae
sarl
pop
xchg
pop
shll
shlb
xor
shrb
repz
nop
fwait
scas
hlt
or
adc
out
mov
arpl
roll
int3
cmp
or
push
and
mov
loope
jns
ret
jbe
repnz
imul
add
inc
sub
stos
sub
enter
jns
aad
adc
pop
test
popa
mov
lahf
ficoml
shl
mov
pushf
dec
bound
xchg
outsl
rcrb
jmp
mov
adc
xor
and
jmp
repnz
dec
jg
mov
scas
cmp
and
fsubl
arpl
xlat
cmp
sbb
jge
cs
jg
xorl
xchg
and
xchg
sarb
fcomip
mov
or
mov
mov
pop
mov
adc
xchg
push
pop
aas
jmp
sbb
lods
inc
pop
mov
push
mov
jbe
dec
cld
mov
dec
dec
or
out
int3
mov
xor
lods
pop
jae
sub
fs
int3
inc
push
sbb
in
pop
cmc
sbb
ret
mov
jo
insl
push
mov
inc
lahf
cwtl
bound
mov
stos
mov
sub
and
mov
jg
aas
or
dec
push
fsubl
jne
mov
mov
nop
roll
sub
push
stc
stos
mov
loop
add
loop
lds
repz
lcall
jo
mov
pop
and
in
cmp
inc
cmp
push
pop
adc
mov
pop
pop
int3
inc
repnz
add
jne
mov
cmp
push
or
jnp
lea
mov
and
dec
outsb
negl
hlt
xchg
popf
shlb
and
or
mov
jo
xor
lock
dec
jns
and
test
into
loope
lock
jecxz
or
stos
pop
sbb
ret
aas
in
push
xchg
inc
test
cmp
mov
aam
roll
and
sub
jmp
aad
test
scas
int
rcr
lods
call
sahf
xor
scas
xor
mov
adc
pop
or
ret
inc
inc
bsf
in
dec
test
dec
test
jns
shr
out
ja
in
jae
jmp
dec
int3
xor
jo
arpl
test
mov
push
push
rcrl
and
jl
sub
and
in
ss
cmpb
push
lods
xor
pop
shlb
sub
jae
ljmp
mov
imul
pop
push
jg
lods
ljmp
lcall
popa
sbb
add
dec
xchg
xchg
sub
dec
add
cld
add
jge
adc
out
shll
xor
stos
iret
mov
bound
sbb
adc
add
xor
test
or
fnstsw
pop
mov
push
dec
out
aad
int
stos
lret
pushf
xchg
mul
mov
in
adc
cmp
cmpsl
lods
inc
push
mov
inc
mov
mov
jp
or
jb
out
xchg
cltd
adc
sarb
push
jb
mov
pop
aam
lds
jecxz
mov
nop
test
jge
lock
inc
xchg
popa
mov
rcrb
ds
imul
nop
or
out
cltd
lods
or
and
dec
mov
inc
daa
nop
adc
pop
lcall
cmp
mov
test
cmp
rcl
test
std
mov
lods
lds
dec
adc
notl
jo
inc
xlat
sub
cmp
jae
mov
js
cmp
mov
testl
das
incl
or
in
sub
xchg
push
jb
or
or
sub
inc
pop
mov
nop
mov
pop
mov
or
fcoml
sahf
test
in
ret
push
xchg
sbb
add
in
or
insb
jbe
movsl
xchg
sbb
adc
xchg
lret
int3
insl
imul
out
je
add
cs
and
movsl
scas
mov
dec
enter
loopne
cli
ja
sub
pop
and
cwtl
adc
adcl
dec
fnsave
popf
xor
subb
jne
stos
pop
mov
jo
lret
imul
cli
das
daa
shr
rol
xchg
push
push
mov
sub
dec
repz
mov
mov
shll
aaa
push
dec
pusha
pop
hlt
xor
pop
mov
jmp
daa
outsl
jge
mov
loopne
jp
jae
loopne
mov
lods
lret
in
jae,pt
cmc
xchg
sub
pop
shlb
mov
inc
cli
pop
inc
ret
inc
movsb
mov
cs
adc
mov
mov
inc
addl
mov
sub
add
fs
shlb
fisubrl
lret
loop
leave
add
sbb
lds
fs
aad
xlat
ficoms
mov
mov
and
in
jbe
mov
cmp
jg
movb
and
inc
or
call
pop
pop
mov
into
jecxz
fmull
jp
ds
mov
rorb
in
mov
iret
cld
je
std
test
adc
xor
jge
dec
lahf
or
lea
jl
repnz
mov
cmp
sub
mov
ljmp
inc
inc
cwtl
xchg
scas
and
fmul
loope
mov
adc
mov
adc
cltd
jae
lret
imul
aad
fidivs
add
test
rcll
js
shl
pushf
loopne
xchg
dec
jb
mov
xor
sub
out
sub
enter
mov
out
pushf
push
ret
sbb
cmp
leave
add
fsubs
xor
adc
test
xlat
imul
outsb
jmp
xchg
sub
cmp
js
lcall
lock
dec
icebp
xchg
into
or
push
scas
pop
xor
and
and
jo
sub
add
cs
test
adc
insb
xchg
aam
out
in
je
push
and
mov
pop
push
jl
es
pop
cmp
and
adc
int
jmp
mov
test
gs
add
mulb
stc
nop
aas
mov
xchg
test
ret
xchg
and
lock
lret
mov
outsl
sti
insl
push
mov
dec
xchg
push
hlt
sub
into
icebp
repnz
xor
movsb
xchg
les
xchg
fsts
pop
inc
jmp
jp
into
add
xor
sbb
fildll
pop
xor
pop
repz
mov
aam
pop
cld
jne
stc
inc
mov
cs
xor
sahf
or
mov
orl
add
movsl
jge
cmp
pushf
jno
cmc
mov
icebp
bound
in
test
xor
jb
xchg
sbb
and
cltd
lock
and
mov
or
enter
aad
shl
test
andl
call
mov
enter
push
inc
or
push
or
adc
pop
aas
neg
xlat
push
mov
xlat
iret
and
lock
mov
and
mov
sar
xor
lahf
addr16
mov
and
test
pop
test
movsl
pusha
les
xchg
fdiv
jecxz
adc
mov
jne
sub
push
mov
cwtl
mov
rcll
cmpsb
or
icebp
or
inc
cmp
pop
test
in
out
into
popf
xor
add
mov
mov
sbb
dec
push
pop
mov
test
mov
scas
loope
xor
adc
cmp
xor
adc
mov
or
push
imul
je
jmp
lea
imul
aad
movsl
scas
hlt
mov
inc
inc
inc
ret
aaa
orb
inc
jns
in
mov
jne
ja
fldenv
addl
push
out
aam
pop
iret
mov
leave
iret
lock
ja
mov
jge
cmp
xor
in
dec
cmpb
in
inc
das
jl
cmp
shrb
and
or
dec
aaa
lds
int3
pop
dec
jns
repnz
ret
jb
jl
xor
mov
stos
sti
mov
sbb
xchg
nop
lock
add
jl
idiv
shll
loop
cmc
dec
xchg
push
push
stos
das
into
vcvtps2pd
xchg
addb
sub
inc
dec
push
test
std
popa
pop
ss
mov
das
sub
clc
ret
mov
fistpl
sti
out
adc
orl
loop
push
repz
inc
insb
jae
add
add
mov
mov
shrb
aad
iret
sub
cltd
lret
add
push
jbe
popf
cmpsb
xor
subb
inc
ret
pop
popf
sub
movsl
cmp
xchg
call
sbb
fs
sbb
test
adc
adc
xor
jne
push
in
jbe
sbb
xor
popa
dec
dec
mov
and
test
jb
sarb
aaa
mov
aam
popa
sub
push
mov
cmpsb
popf
fmuls
test
xchg
push
pop
hlt
stos
imul
cwtl
dec
cli
xchg
adcl
lock
sti
call
mov
sub
insb
bound
aad
sti
dec
push
fs
jecxz
adc
pop
sub
stos
lods
cmp
aas
sbb
outsb
popa
mov
sub
xchg
fcmovne
test
ret
or
add
cmc
pop
cmp
add
leave
or
aas
xor
mov
cs
rol
imul
mov
mov
mov
js
sub
mov
sub
sbb
addr16
mov
cmp
js
or
adc
ret
mov
jge
not
pop
mov
push
and
inc
fdiv
out
sbb
aad
lret
shrl
f2xm1
addb
push
inc
shll
stos
ja
mov
jp
and
fsub
js
dec
cmp
pop
lds
jp
ja
sbb
xchg
and
add
xor
ss
test
test
xor
sbb
and
iret
xor
in
xchg
add
xchg
les
add
mov
fs
fildl
cld
push
sub
push
inc
push
and
mov
mov
ret
cmpsl
xor
and
cmp
lods
add
arpl
mov
iret
jne
jmp
xor
inc
add
aam
dec
xchg
fdivrs
ds
adcl
lds
mov
or
mov
aaa
call
jo
cmp
xor
cmc
movsb
inc
xchg
vmwrite
sbb
pop
adc
leave
test
out
jno
xor
or
and
mov
scas
push
adc
rorl
sub
les
nop
mov
cs
or
repnz
jge
movsl
add
xchg
pop
jge
push
pop
das
dec
or
sarl
jns
sahf
jne
pop
inc
pop
add
loop
push
or
sbb
mov
negb
push
push
ret
cmp
mov
sarl
into
pop
cmp
push
xchg
sbb
pop
sbb
sub
ror
jb
cli
sub
dec
incb
or
mov
jo
push
dec
adc
stc
mov
and
sub
inc
mov
dec
fldl2e
cwtl
sub
scas
xchg
xchg
lret
aas
mov
sub
dec
mov
lock
inc
push
push
popf
dec
cld
mov
and
sbb
add
xchg
xchg
sbb
cli
in
cltd
insb
outsb
or
es
scas
ja
jle
repnz
int
sarb
stos
mov
xchg
xor
push
and
loopne
adc
push
loopne
add
lcall
roll
dec
add
insb
gs
pushf
outsb
xor
jmp
fwait
jo
popa
add
pop
loop
shlb
pop
xor
lea
pop
in
mov
mov
push
dec
dec
sbb
sahf
ja
mov
jns
push
dec
pop
cld
stc
mov
ret
movsb
jb
mov
adc
out
sub
adc
out
and
xor
push
pop
lahf
adc
xor
pop
fs
and
jo
in
push
pop
cli
je
lods
push
mov
repnz
cmp
pop
rol
mov
loop
lcall
jp
sub
cmp
lock
cmp
xchg
xor
dec
imul
fildll
mov
push
cmp
int3
or
ljmp
je
dec
push
inc
mov
aas
andl
scas
mov
mov
data16
sbb
ljmp
push
sub
ret
jle
jp
jecxz
in
out
jbe
mov
dec
ret
lock
stos
adc
xor
jg
scas
push
xchg
cmp
xchg
cmp
push
popf
sbb
cmpsl
add
inc
loopne
sub
aam
stos
jecxz
jns
popf
je
push
lods
loop
mov
add
aad
out
out
or
adc
in
cmp
xor
bound
test
and
mov
and
xlat
cmp
xor
mov
decb
pop
or
outsb
dec
add
pop
adc
jge
pop
add
sbb
push
icebp
imul
dec
ret
pushl
bound
jne
or
xchg
in
aas
xchg
sub
dec
pop
jno
jmp
insb
cmp
mov
imul
push
cmp
daa
mov
ret
test
pop
jl
stos
cmp
fisttpll
or
repz
mov
and
or
je
and
stos
and
pop
jno,pt
lods
jb
cmp
sbbl
int3
xor
rcrb
xchg
add
xchg
mov
jae
mov
inc
pop
pop
inc
jp
addr16
dec
insl
adc
test
and
insb
add
cmp
mov
or
adc
adc
jecxz
inc
jecxz
dec
xchg
mov
push
push
dec
nop
mov
and
push
mov
xchg
fwait
addr16
shrb
add
jl
xchg
fdivr
xchg
mov
inc
les
pop
add
popa
cmpsl
or
jmp
xchg
or
sbb
in
add
rorl
aad
mov
sub
add
push
js
fcmovbe
movsb
cwtl
dec
gs
push
sahf
inc
lahf
aaa
pop
jl
test
sbb
push
push
xor
inc
mov
adc
cld
mov
jno
sahf
sahf
xor
push
mov
leave
mov
pop
test
jns
divb
scas
sub
xchg
xchg
sbb
fdivs
clc
sub
and
scas
lods
dec
jno
cs
inc
add
ret
cmovs
push
lea
pop
mov
imul
cmp
ljmp
sub
mov
xor
mov
out
or
mov
aaa
ds
repz
stos
add
mov
lahf
sbbl
popa
add
add
or
fistpll
addl
lret
mov
xor
xchg
mov
call
cmpsb
mov
push
iret
bound
loopne
ljmp
adc
into
pusha
adc
mov
es
inc
movsl
and
mov
lcall
repnz
add
pop
mov
ds
iret
dec
imul
cmp
test
sub
xor
inc
pop
sbb
or
mov
jecxz
fildll
loope
test
adc
xchg
shlb
sub
int
mov
add
jmp
sub
mov
mov
add
lods
test
nop
das
aas
daa
pop
and
pop
andb
dec
ds
inc
inc
sub
jle
push
repz
icebp
ljmp
push
cld
sbb
test
mov
xlat
xor
out
sbb
or
xor
ja
jp
ds
xchg
adc
jne
adc
add
pop
push
jns
int
mov
ret
sub
lret
rcll
cmp
inc
clc
xlat
and
fcmovu
mov
stos
xor
adc
cli
adc
mov
xor
xchg
cmp
push
adc
mov
and
and
lcall
ja
ds
xchg
push
jns
hlt
pop
or
push
in
cmpsl
jle
sub
sub
fisttpll
and
inc
popa
pop
mov
jnp
aaa
rcll
addl
lods
xor
sub
add
xor
sbb
in
pusha
stc
add
in
call
mov
mull
pop
jo
cmp
and
pop
sbb
push
mov
mov
movl
inc
lcall
js
inc
loop
inc
jb
pushf
or
xchg
aaa
sarl
adc
ljmp
ds
inc
sysexit
push
out
roll
mov
push
jo
mov
cmp
add
ss
leave
add
xor
stos
xcrypt-cbc
cmpsl
push
adc
dec
or
sahf
mov
stos
and
mov
sbb
mov
push
test
movsb
sbb
mov
mov
xchg
fstp
or
add
cli
pushf
mov
xchg
int3
xlat
adc
loope,pt
pop
xor
push
inc
aad
mov
mov
std
push
add
add
jbe
cli
in
adc
push
or
jnp
xchg
cmp
mov
rcr
out
push
and
jg
xlat
jge
jmp
and
cmp
add
outsb
mov
sub
pop
lret
leave
fucomip
stos
push
insl
cmp
cmp
or
into
mov
dec
pop
iret
imul
mov
dec
lahf
lret
push
and
cmp
cmp
sub
and
dec
cmp
pop
cmp
clc
jnp
ss
add
lds
ss
pop
jbe
add
pop
cmpsl
mov
in
sahf
cs
xlat
test
or
xchg
outsl
adc
ss
mov
ja
or
icebp
in
sub
sbb
mov
jbe
icebp
fistl
imul
or
cmpsb
add
lea
jle
mov
jge
aam
mov
add
cmpsb
jbe
ss
fisttps
movsb
mov
js
outsl
add
mov
xor
or
aas
jae
test
and
inc
ret
jecxz
std
rcrl
imul
cmpsb
je
out
bnd
or
add
andnps
cmc
mov
mov
es
sbb
rclb
push
lret
in
cmpsl
mov
pop
clc
pop
fildl
iret
repz
sarb
rolb
icebp
jns
sub
test
sbbb
dec
inc
xor
ret
notb
clc
inc
cwtl
aas
and
fnstcw
inc
scas
sarl
std
cvtps2pi
mov
fisubrl
pop
sti
shlb
mov
inc
add
les
adc
cwtl
push
idivb
sbb
sub
rcrl
dec
dec
int3
pop
sub
xchg
cltd
rclb
std
xor
cwtl
ret
gs
pop
or
inc
aas
jnp
rolb
ds
and
ja
mov
fcompl
testl
mov
xchg
sbb
or
hlt
jo
pop
loop
sub
mov
loop
jae
clc
pop
ret
enter
std
mov
pop
jge
push
imul
mov
out
cmp
xchg
shrb
xchg
sub
scas
imul
int
mov
adc
hlt
xchg
jmp
daa
mov
xchg
xchg
loope
lds
es
es
and
icebp
loope
pop
inc
push
jb
ficomps
push
add
leave
into
or
xor
push
call
add
pushf
out
jge
mov
ja
jae
xchg
lret
ljmp
nop
ds
test
mov
mov
ljmp
imul
ss
pop
adcb
in
push
mov
pop
ja
daa
shl
push
xor
out
xchg
pusha
push
loop
addr16
lret
dec
rcl
gs
lret
jns
or
sahf
mov
notl
sbb
sarb
lahf
sub
mov
cmp
outsl
cmp
mov
pop
imull
pop
stos
xchg
cld
adc
pop
sti
in
loopne
data16
or
dec
add
aaa
ret
pushf
mov
in
rcrl
jl
mov
mov
pop
add
cs
dec
xchg
test
jo
lahf
xor
cmp
lods
sarl
dec
lods
lahf
sahf
nop
movsb
cmp
popa
mov
jnp
pushf
and
es
xor
xor
cmp
pop
mov
push
and
inc
popa
mov
or
lds
mov
mov
movlps
dec
add
lret
xor
mov
add
jecxz
push
loope
roll
rorb
in
inc
icebp
fmuls
cmp
jo
aas
sub
inc
mov
pop
pop
test
iret
push
out
dec
mov
sub
or
rcrl
jmp
test
ja
sub
mov
jl
inc
sub
pop
inc
sbb
pop
add
dec
mov
add
dec
insb
shr
leave
addb
jns
add
dec
js
pop
lock
aaa
loop
adc
xor
xor
cmp
cmpsb
frstor
dec
adc
xchg
adc
dec
xchg
lods
loope
ljmp
add
sbb
pushf
addr16
rclb
lcall
sti
pop
xchg
sub
insl
xchg
lock
leave
and
dec
sbb
lret
mov
and
mov
push
dec
mov
adcl
roll
push
adc
xor
mov
je
mov
out
mov
push
fcoms
sbb
jmp
loop
cltd
xlat
arpl
icebp
aaa
ljmp
cmp
fucomi
insb
sub
push
xorl
jmp
cmp
outsb
cmpsl
xchg
movb
sti
jne
pop
repnz
rcll
and
dec
mov
test
dec
test
jmp
add
sbb
bound
outsl
add
pop
mov
push
inc
inc
add
popa
movsl
lret
roll
sbb
xchg
xchg
push
xchg
out
xor
fwait
test
scas
gs
int3
jno
pop
jb
jle
je
scas
add
cli
xchg
cs
push
dec
outsb
jns
push
addr16
xor
jge
lea
inc
stos
jle
mov
insb
sub
xor
push
push
lock
popl
loop
out
and
xor
pop
mov
push
popa
or
jge
rolb
ret
out
dec
mov
cmc
ja
mov
pop
xchg
pop
loop
pop
sub
xlat
jo
push
adc
test
lods
pusha
fldl
inc
pop
adc
clc
stc
sbb
pusha
addb
fstps
stos
jnp
fcomps
mov
cmp
xchg
jne
shll
mov
or
cmp
adc
adc
pop
fistps
cmc
popf
push
mov
fists
inc
clc
inc
mov
push
ficompl
push
inc
pop
sti
pop
mov
dec
jne
pop
fs
xchg
addr16
push
push
aad
add
out
inc
dec
pop
push
in
clc
dec
repz
dec
inc
in
jnp
jmp
cli
xor
inc
push
sbb
adc
xchg
push
test
push
xor
sbb
dec
frstor
mov
leave
cmc
mov
jnp
and
sbb
jmp
orb
dec
cmp
dec
sub
xor
int
cmp
adc
push
dec
mov
and
push
in
jg
test
push
lret
cli
popa
xor
xchg
aad
cs
clc
cmp
xorb
sbb
ljmp
inc
and
inc
inc
js
aaa
pop
xchg
int3
fsubs
sbb
jecxz
or
rol
push
imul
push
dec
xor
mov
daa
push
movsb
scas
xor
inc
repz
sbb
pop
adc
mov
shrb
cmp
popf
mov
xchg
cli
mov
jge
add
fsubp
lret
loopne
rcrl
pop
sub
repz
pusha
je
cmp
iret
add
std
pop
cld
fidivs
mov
mov
or
iret
lock
gs
lret
mov
push
xor
arpl
pop
mov
adc
lea
or
adc
add
mov
mov
insb
out
out
mov
push
loop
test
mov
pushf
cmpb
jp
push
inc
push
repz
fs
xor
std
or
nop
mov
lea
jb
je
jne
in
pop
mov
xor
aam
cmp
sbb
ret
incb
push
data16
imul
jmp
sub
cmp
mov
sbb
sbb
addb
add
xchg
scas
xor
pop
aas
sbb
push
xlat
mov
adc
scas
sahf
pusha
aaa
in
sub
xchg
pop
dec
ljmp
nop
or
mov
sti
push
int3
loopne
inc
mov
out
xchg
pop
mov
xchg
cli
add
fildll
mov
add
lret
push
xor
fdivl
pop
mov
outsl
push
mov
addb
addr16
sbb
nop
pop
out
mov
cmp
or
ret
jecxz
cmp
into
cmp
sbb
push
dec
xchg
movsb
jae
ljmp
push
push
adc
xor
cmp
int
xchg
stos
addb
lea
mov
call
dec
jno
jns
imul
stos
in
jae
ret
mov
jp
adc
scas
int3
mov
sub
out
cltd
cmp
sub
jge
je
sub
jo
sbb
sbb
int
xor
cmp
dec
or
rep
sub
and
mov
fdivrs
cltd
mov
xorl
inc
mov
or
or
psubb
sti
out
add
add
cwtl
mov
sub
jne
arpl
mov
in
ret
inc
or
cmp
jp
pop
mov
fdivs
pop
out
or
dec
out
add
mov
jl
push
sub
xchg
ret
cmpsb
test
cmp
mov
aad
les
popa
push
roll
in
cmp
pop
imull
jnp
cmp
or
xlat
mov
shlb
inc
es
push
xchg
and
outsl
mov
jae
outsl
adcb
pop
mov
jns
cmp
cmp
std
lcall
sub
pop
sbb
test
ret
imul
pop
mov
cmp
repnz
push
jnp
clc
xor
mov
test
xchg
xchg
cmp
pop
hlt
call
push
out
jmp
dec
inc
pop
push
sub
sbb
sub
test
je
mov
xchg
int
nop
cmpl
pop
cmp
test
pop
and
rcll
mov
andb
mov
mov
push
mov
stos
in
add
push
sbb
into
xchg
jl
mov
push
repnz
std
xchg
ror
divb
stos
dec
cmp
and
jne
sbb
out
sbb
lock
call
push
popa
sub
leave
loop
js
cmp
iretw
adc
push
imul
sbb
hlt
xor
sahf
adcb
xchg
push
push
cmp
or
push
xlat
sub
or
cmp
icebp
ret
jmp
std
or
loope
add
jo
ds
push
pop
or
dec
mov
cmp
inc
test
shlb
jno
aad
inc
stos
lods
test
jmp
mov
sarl
xchg
aas
pop
mov
daa
xchg
stc
out
cmpb
in
add
ss
int3
dec
je
shrl
adc
movl
outsl
test
xchg
and
and
add
mov
xchg
and
imul
dec
pop
or
stc
jmp
adc
inc
mov
sbb
mov
lret
fs
dec
outsl
sbb
and
adc
std
jmp
out
mov
jns
shll
fmuls
orb
sbb
daa
js
insl
push
push
add
dec
or
mov
cmpsl
cmp
mov
sbbb
outsl
ror
pop
int
in
inc
es
sub
sub
imul
or
shll
jmp
lcall
mov
xchg
in
gs
xor
imul
aas
jb
std
movsl
mov
mov
push
or
loope
pushf
cmp
lret
mov
sub
and
mov
mov
mov
cli
xchg
push
xchg
xchg
test
inc
cmp
je
or
decb
sbb
out
push
dec
mov
adc
popf
fs
fisubrl
push
jns
add
stc
sarl
popa
insl
cli
and
sub
inc
cmp
std
les
adc
lahf
popf
sahf
pop
mov
call
scas
call
mov
orb
jg
subb
fsts
jmp
inc
mov
and
or
aam
mov
xchg
xchg
stc
negl
stos
mov
push
scas
iret
mov
in
popf
sub
mov
sub
into
cmpsb
mov
fisttps
cmpsl
lods
jno
mov
iret
ret
and
stc
mov
mov
adc
lret
insb
mov
cmp
fwait
mov
adc
aas
cmp
call
lock
jo
xor
sti
out
lods
pop
repnz
es
cli
push
mov
push
test
mov
and
push
pop
dec
xchg
sbb
xor
out
pusha
mov
ds
dec
mov
fldt
mov
xchg
jecxz
in
cmp
mov
cld
sub
mov
sbb
ret
mov
inc
jp
jp
xchg
pushf
imul
xchg
mov
sarl
or
cmpsl
or
inc
popa
inc
aas
ret
sbb
push
inc
add
pop
test
and
adc
push
adc
push
cmp
mov
repz
fcoms
rolb
mov
pop
xor
jmp
mov
pop
jle
or
hlt
jbe
cmpsl
jbe
sbb
nop
dec
hlt
push
inc
adc
cld
inc
pop
sub
andl
imul
movsb
sub
aaa
mov
sub
pusha
les
inc
jno
and
inc
adc
or
ljmp
ds
or
push
mov
cs
sbb
imul
sub
jge
xchg
sbb
in
mov
sub
dec
shl
jmp
gs
fidivl
mov
dec
and
mov
and
js
fists
push
or
subb
scas
test
xchg
out
jmp
sbb
cmp
sbb
test
inc
jge
loop
jp
and
test
sub
cs
loope
leave
cmp
mov
xchg
jnp
cmp
lret
lahf
push
ret
push
push
les
xchg
xor
shlb
and
or
pop
pop
mov
and
pushf
lds
or
mov
jo
sub
xlat
movsl
push
add
add
loope
data16
or
clc
mov
outsl
jns
add
cltd
das
jecxz
test
jle
add
lds
add
insb
mov
subl
lea
lret
xchg
push
cwtl
sbb
xor
scas
loope
push
pop
insl
cwtl
xor
or
fucom
adc
xchg
cmc
das
out
mov
icebp
push
imul
inc
inc
push
and
data16
pushf
fildl
faddp
and
mov
insb
jecxz
adc
stc
test
push
sbb
gs
rcll
mov
dec
leave
jbe
mov
and
cmp
les
mov
push
pushf
mov
lahf
cltd
shll
and
pop
fstps
hlt
xor
mov
pop
jns
jbe
aam
inc
lock
xchg
or
int
sub
les
mov
jmp
out
mov
ljmp
aad
mov
push
cli
lods
aad
fildll
ja
into
sbb
jle
xchg
push
in
mov
xor
gs
mov
shl
and
adc
sbb
add
dec
jbe
aam
mov
nop
cltd
or
into
clc
data16
in
fwait
out
scas
push
fs
stc
fisubl
mov
stos
icebp
loope
nop
jg
mov
sbb
call
pop
sub
inc
mov
aam
jns
fiadds
out
into
int
cli
les
xchg
outsb
fildll
lods
aam
jno
inc
adc
aam
cmp
xor
cs
out
nop
pop
pop
add
mov
subl
jp
jmp
push
fidivl
xchg
xchg
test
outsl
jne
lret
lahf
test
mov
mov
mov
adc
fisubl
inc
mov
aad
push
pop
sub
add
cmpl
divb
mov
or
cmp
mov
mov
dec
popa
xchg
in
adc
fcompl
nop
je
scas
jp
loope
mov
mov
push
lcall
mov
push
inc
mov
cmc
mov
jbe
addb
pop
dec
popf
repnz
ss
xchg
mov
push
pusha
pushf
and
ficoml
sub
leave
or
aas
pop
mov
push
push
ds
sti
fs
cmpsl
dec
dec
sbb
mov
call
adc
sub
mov
mov
jo
aam
in
imul
jmp
repz
adc
filds
sahf
cmp
ficoml
scas
iret
hlt
fs
pop
cmp
push
lret
rcll
loop
sub
mov
sub
pop
cmc
das
inc
push
push
and
cmp
adc
jbe
xchg
mov
push
lock
loopne
mov
notb
dec
aad
add
sub
aad
fnsave
and
dec
mov
rol
rolb
frstor
adc
mov
adc
pop
cli
sub
adc
test
push
xlat
cmc
cmpsb
lods
mov
and
data16
gs
pop
test
sub
outsl
std
push
cmpsl
and
test
mov
pusha
mov
scas
aaa
and
repnz
inc
sbb
jp
testb
dec
and
je
add
aas
push
mov
stos
and
inc
mov
push
test
movb
mov
inc
insb
push
mov
lahf
sub
insb
xchg
cmp
mov
in
xchg
add
inc
jge
jmp
xor
mov
pusha
and
addr16
xchg
xchg
pop
leave
pop
jle
into
in
sarl
cmp
or
mov
std
mov
aam
mov
nop
jnp
pop
fnstenv
addb
pusha
jne
jae
jl
mov
js
push
in
push
mov
cmp
mov
mov
sbb
jnp
call
or
mov
jo
lret
fwait
popf
jmp
xor
push
jne
mov
adc
jp
popa
push
imul
js
push
out
movsl
inc
div
adc
add
fildl
insb
push
popf
dec
add
and
sbb
or
std
fsubr
jp
pop
cli
sahf
mov
and
xchg
push
mov
pop
cmp
addl
xchg
and
mov
mov
mov
sbb
dec
inc
mov
int3
notl
lret
lods
mov
sub
cmpl
in
fs
out
int3
lods
inc
pop
lret
fnstsw
jbe
cmp
ja
push
ficompl
outsb
shll
lods
sub
stos
or
outsb
sbb
xor
testb
mov
jnp
sub
or
jecxz
lcall
or
jns
push
cs
sub
or
ficoml
add
adc
fbstp
mov
xchg
lret
jne
cmp
sub
cltd
xchg
cld
mov
testl
inc
add
shrb
jns
adc
xchg
pusha
les
in
mov
cmp
mov
xchg
aas
int3
lea
cs
jecxz
cmp
hlt
icebp
mov
sub
lods
popl
or
stos
xlat
std
xchg
fsubrs
gs
adc
pop
xchg
or
imul
mov
dec
popa
xchg
push
call
dec
or
lcall
js
lods
or
int
ret
dec
stos
mov
xor
push
int
popf
push
xor
xor
mov
mov
cmc
xor
arpl
int3
fcoms
add
jne
jecxz
push
sub
mov
dec
inc
mov
jecxz
repz
iret
mov
add
cli
mov
rcl
lret
cmc
mov
movntq
cmp
cmp
loop
out
xchg
cmpb
cmp
mov
push
push
push
enter
fcoml
and
jp
aad
test
outsl
pushw
and
mov
dec
ret
in
inc
movsb
dec
jmp
adc
pusha
mov
fcompl
cmc
and
mov
or
mov
inc
add
xchg
ret
outsb
pop
push
jg
dec
mov
mov
repnz
divb
mov
push
test
mov
dec
lcall
std
fs
xor
fdivp
lds
mov
sti
clc
sub
cmpsb
cld
jnp
leave
in
enter
xchg
rorb
inc
or
add
divb
call
data16
sub
shl
inc
and
aam
dec
out
jo
or
mov
jge
fsts
outsl
adc
mov
imul
mov
jge
roll
pop
jp
adc
mov
and
shlb
cwtl
dec
test
outsl
out
scas
mov
and
inc
mov
push
xchg
mov
xchg
enter
in
lcall
lret
aaa
es
loopne
mov
cmp
popa
add
imulb
stos
scas
imull
jg
andl
jmp
dec
dec
inc
out
inc
fs
xor
fdivl
lret
push
adc
xchg
sub
frstor
inc
dec
mov
inc
sub
jp
jmp
data16
stos
daa
push
inc
incb
cmp
movsl
push
xor
sarl
aad
sbb
test
call
sbb
pushf
sbb
xchg
push
pop
stos
jbe
movsl
xor
mov
repz
or
bnd
or
pop
outsl
mov
jno
dec
jo
pushf
inc
sub
and
shrl
stc
fxch
ret
mov
pop
jne
add
lods
das
mov
pop
cwtl
dec
or
dec
dec
fildl
fwait
inc
ljmp
xchg
jnp
ss
nop
or
sti
in
mov
jge
mov
sub
xor
loopne
push
push
cmp
jmp
hlt
mov
int
xorb
jg
call
xchg
lret
push
shrl
xor
ficomps
push
xor
scas
mov
orl
dec
sub
arpl
in
pop
xchg
das
aam
mov
shll
das
ret
fcmovne
dec
sti
fsubrl
lret
pop
in
adc
sbb
fadds
gs
es
mov
cld
mov
cs
testb
repz
fmuls
ret
icebp
in
shlb
bound
inc
aam
push
ss
icebp
inc
inc
cmp
fistpl
add
insl
cmp
call
push
movsl
inc
in
jmp
xor
fisttpll
push
jg
dec
xchg
xor
or
push
out
imul
mov
mov
xchg
stos
in
adc
lcall
push
test
add
jnp
or
lea
jnp
div
inc
sahf
gs
dec
jge
xor
dec
mov
out
push
loopw
push
push
jg
shlb
in
mov
pop
pusha
mov
ret
mov
push
fbstp
rorl
stc
cltd
lret
jmp
aad
push
mov
cmpsl
adc
std
mov
mov
sbb
faddl
jge
jnp
lea
movsl
insb
adc
dec
jl
push
mov
outsl
inc
sbb
jle
inc
imul
ficoms
jg
das
gs
ljmp
xchg
call
lret
sbb
mov
movsb
cwtl
and
lret
adc
jl
std
movsl
cmpb
xchg
das
repz
xchg
cmp
icebp
sub
sbb
mov
sarl
jbe
test
mov
sub
divb
bound
mov
inc
jle
outsb
testl
mov
jne
cmp
push
hlt
jle
pop
xchg
pop
sub
mov
mov
sub
or
pop
loop
add
out
cmp
and
aaa
or
rorl
add
jl
stos
sub
ljmp
mov
xchg
lds
lret
mov
mov
div
scas
imul
mov
jge
gs
mov
repz
pop
or
cmpsl
and
pop
imul
xchg
jmp
dec
pusha
push
and
js
or
fdiv
sub
dec
adc
mov
mov
dec
mov
mov
loopne
int3
daa
fbstp
stos
fidivrs
xorl
cmpsl
mov
pop
dec
nop
imul
xor
mov
movsl
dec
adc
test
push
jp
jp
fwait
inc
divb
jae
mov
arpl
mov
js
imul
inc
imul
std
shll
dec
rcll
inc
push
adc
sbb
movsb
dec
jecxz
mov
cmpsl
adc
repnz
or
movsb
pusha
inc
pop
pusha
xchg
mov
mov
push
jmp
cltd
je
rol
pop
cmp
or
out
dec
and
add
cltd
insb
ret
jl
and
xlat
in
mov
cmp
addr16
mov
sub
lea
jbe
lret
shll
xor
ljmp
out
ret
mov
enter
mov
lret
aas
int3
test
cmp
pop
lock
push
push
addr16
out
shrl
jmp
insb
mov
jg
imul
pop
jle
int3
sub
cmpsb
sahf
and
xor
pop
clc
daa
clc
xchg
pop
mov
cmp
pusha
xchg
arpl
xor
testl
mov
in
pop
and
xchg
lods
jae
cmp
mov
fs
sub
push
aas
push
pop
filds
push
push
iret
mov
xlat
dec
sub
sahf
aas
cltd
repnz
mov
inc
sbb
inc
in
push
push
inc
dec
cmp
cmp
adcl
iret
dec
imul
mov
cmc
pop
xor
add
fisubrl
and
mov
sub
push
movsl
or
imul
test
xchg
jno
adc
xor
aad
adcl
sub
mov
add
movsl
push
in
mov
and
lods
jle
jmp
fldt
fdivr
rorl
ss
pop
fbstp
pop
insb
xchg
or
jb
push
dec
insl
ret
inc
nop
inc
mov
xor
xor
jns
test
xor
imul
cs
sbb
mov
int
push
lock
iret
inc
xor
pop
dec
fsubs
cmpsl
inc
pop
sbb
dec
cmp
cmp
mov
cmp
stc
repnz
mov
add
add
imul
or
in
cmpb
mov
adcl
in
push
decl
mov
insb
or
outsl
shll
std
dec
data16
and
shll
repnz
mov
movb
xchg
out
adc
ficoms
mov
adc
mov
pushf
mov
pop
in
fadds
lods
enter
pop
or
and
xchg
add
jg
add
in
push
jae
xchg
jno
ja
jne
sub
nop
roll
xlat
call
mov
nop
sub
jo
insl
cmc
pushf
and
rolb
movsb
push
aam
test
ss
xchg
adc
sbb
repnz
adc
popf
rcrl
repnz
cld
outsl
sub
ret
repnz
sub
sub
out
ds
pop
nop
dec
mov
daa
push
int
loope
add
cmp
gs
cmp
mov
popf
pop
jg
add
mov
test
pushf
out
mov
mov
push
dec
test
jae
cld
popa
fisubrs
out
or
jo
or
cmp
out
rcl
dec
ds
mov
stc
fidivl
daa
push
cmc
xchg
adc
ds
ja
jge
pop
push
xchg
cmp
lock
inc
add
aam
dec
mov
adc
jae
push
pop
fmul
mov
jae
jp
mov
jbe
sbb
aam
mov
mov
andl
push
cmp
jecxz
add
pop
aas
outsl
cmp
nopl
mov
dec
add
das
pusha
stos
add
cmp
xchg
push
dec
mov
std
daa
xchg
rcll
fsts
ret
cmp
gs
xchg
and
push
mov
jmp
jb
loope
stos
sub
aam
fdivrl
clc
and
adc
arpl
mov
icebp
dec
push
in
mov
jecxz
cwtl
pusha
cmp
xchg
cmpsl
adc
rcrl
sbb
rolb
repnz
sub
sub
xchg
pop
pop
jns
dec
inc
leave
pushf
or
push
or
inc
mov
add
jl
mov
dec
mov
cmp
fwait
or
xchg
loopne
addr16
fldcw
insb
jmp
dec
push
push
insb
rorb
mov
jb
cmp
cmp
lret
rcll
jno
cmp
mov
pop
lock
jmp
arpl
mov
cli
adc
jp
fistl
xor
fwait
test
cmp
loopne
lahf
cmpb
cmp
mov
je
sti
xchg
ret
mov
mov
mov
xchg
push
les
cmp
ds
lahf
sub
scas
jmp
fbld
out
push
pushf
dec
popa
cmp
push
int3
lods
lret
adc
sbb
xor
xchg
stc
popf
push
sbb
cmp
fdivs
popf
inc
out
jo
add
outsb
dec
cmpl
pop
into
gs
mov
xchg
gs
test
pop
loop
inc
push
enter
xchg
cmp
lea
or
pusha
outsl
or
repz
sub
call
pop
jp
mov
xor
jbe
lret
xchg
ja
inc
das
dec
pop
lods
adc
imul
insb
rclb
aad
push
cwtl
scas
push
push
lcall
inc
shlb
jmp
jmp
pop
pusha
xchg
lcall
out
lock
jno
xor
mov
cmpsl
out
lods
inc
sub
sub
sbb
sub
jmp
lret
mov
push
mov
mov
add
insl
aam
xchg
sbb
xor
push
mov
icebp
cmp
pushl
scas
ud2
adc
cli
xchg
enter
xchg
sub
mov
int
mov
insb
and
pop
out
jnp
or
sub
lea
cmp
out
xchg
fildll
out
movsl
cmp
or
fildl
and
loop
xor
jge
insb
outsl
xchg
in
jno
pusha
and
pop
and
incb
sbb
and
ja
stc
or
mov
jle
inc
cmp
sbb
mov
jno
inc
ljmp
cmp
mov
mov
push
add
fists
lods
movsb
cmp
add
sbb
inc
cmp
loopne
and
test
or
inc
mov
adc
xchg
call
mov
out
mov
out
clc
test
pop
ss
mov
movsb
jecxz
pop
sbb
xchg
sbb
pop
push
cmp
adc
inc
or
and
xor
cs
bound
subb
dec
data16
btsl
sub
iret
sahf
pop
sarb
cli
lcall
orl
and
test
lcall
cmp
mov
sbb
pop
imul
movsl
dec
aad
sbb
inc
in
jl
push
pushf
mov
or
movb
push
xchg
jp
ror
clc
out
dec
in
aaa
adc
cs
inc
dec
cld
aas
and
jmp
ficoms
jbe
dec
shll
mov
les
pop
mov
mov
mov
insl
mov
mov
enter
sbb
hlt
aad
push
call
push
mov
int
fmull
pop
push
es
xor
mov
mov
or
jae
pop
ret
and
fldenv
inc
and
das
xchg
push
cmp
mov
pop
test
jle
inc
rcl
add
loopne
enter
push
push
xor
fildl
cli
cmc
xor
adc
fcomps
jbe
stos
test
sti
pop
jp
mov
lods
into
dec
push
punpcklbw
mov
mov
mov
pusha
sbb
add
adc
bound
sub
sbb
ret
dec
mov
sar
pop
stc
mov
sbbb
int
test
mov
xchg
cmpsl
out
xchg
outsl
xchg
scas
pop
mov
loope
aad
xchg
test
jae
cmc
mov
xlat
hlt
ret
sbb
loopne
push
cmp
jne
inc
jae
pop
or
out
inc
call
dec
mov
mov
cmpsl
in
jmp
fwait
add
xor
mov
add
test
lcall
mov
dec
call
push
mov
cmp
pusha
subl
outsb
cltd
mov
in
xor
popf
cs
xor
jg
and
stc
ja
fildll
ficoms
imul
lret
in
jle
test
lahf
leave
ret
pop
in
pusha
lds
and
jmp
adc
mov
xor
jle
imul
or
cmp
push
leave
idivl
cmp
or
cmpsb
es
mov
add
lret
mov
in
movsl
sbb
inc
mov
jns
jne
lods
out
xchg
adc
addr16
inc
xor
mov
or
inc
imulb
jp
test
arpl
aam
mov
rep
fsubrs
adc
xchg
cmp
inc
cmp
leave
ljmp
adc
dec
adcb
rol
sbb
or
adc
lds
jbe
inc
fwait
inc
xor
stc
adc
jne
mov
adc
pop
stos
insl
pop
sbb
into
mov
popa
inc
in
adc
mov
out
imul
cs
jl
out
enter
sub
xor
outsb
push
test
mov
out
mov
and
lods
rcl
pop
in
pop
aad
insl
das
jne
dec
cs
ret
in
jae
adc
ds
mov
xchg
mov
pop
data16
es
fs
jge
ret
push
mov
xor
sti
clc
fwait
test
push
adc
loopne
iret
cmp
mov
inc
dec
jno
add
jb
sub
lret
inc
aas
mov
add
inc
dec
outsb
lahf
fwait
mov
imul
inc
call
cmovb
pop
mov
mov
or
insb
inc
jl
push
mov
je
xchg
fsubrl
and
fwait
orb
mov
fdivr
andl
pushf
arpl
and
clc
xor
movsl
pop
jl
pop
sub
push
inc
dec
push
movlps
inc
xchg
test
adc
push
int
push
mov
pop
loop
sti
fistl
pop
jae
imul
fnstsw
or
xchg
fwait
lock
sub
sub
and
and
add
aas
fldt
in
mov
push
testl
add
cltd
cmpsb
dec
fcompl
xchg
pop
aas
ficomps
mov
pusha
dec
test
gs
jo
movd
mov
cmpsb
loope
pop
xchg
shrb
xchg
pop
dec
pusha
xchg
jo
jns
mov
das
xlat
dec
dec
cmpsl
xchg
cltd
aaa
in
pop
sub
dec
ror
push
push
jg
mov
cmp
add
roll
aas
fs
xor
xchg
xchg
jne
into
iret
cmpsb
ljmp
mov
mov
cs
cli
mov
lahf
sbb
lods
pop
sahf
mov
insl
fstps
jbe
xor
test
movsl
arpl
inc
xor
iret
ja
test
sti
bound
icebp
xor
outsb
jnp
xor
cmp
mov
sub
in
aas
aaa
bound
push
xchg
mov
js
xchg
mov
or
imul
into
fs
push
mov
sbbb
mov
jl
adc
sbb
decb
xchg
aam
xchg
je
in
sbb
mov
repz
push
mov
sti
dec
bswap
and
shll
mov
stc
pop
ret
fiaddl
hlt
movsb
out
dec
scas
lods
mov
mov
fwait
sahf
mov
inc
jns
arpl
popf
pop
lahf
xor
xchg
inc
lea
sub
call
push
inc
aam
xchg
mov
jg
scas
jl
mov
jecxz
loop
lcall
sbb
adc
bound
int
pop
test
stc
mov
popa
and
mov
add
jle
sub
cmp
movsb
xor
gs
repnz
imul
cli
daa
xlat
out
pop
or
shrb
cmp
loop
out
add
das
mov
mov
imul
mov
clc
pop
jne
lea
cmpsl
pusha
outsl
cmp
icebp
push
pop
inc
xchg
movsb
add
sub
fdivrp
mov
pop
mov
inc
cs
and
add
popa
mov
fistps
mov
jnp
cmp
jp
lret
and
mov
push
jmp
shl
rcll
cmp
mov
sub
xor
jns
mov
dec
xchg
lods
and
rcr
push
jmp
xlat
mov
dec
jg
adc
cld
push
push
dec
xchg
call
loope
cmp
mov
data16
sbb
jl
stc
pop
dec
mov
pop
mov
adc
pop
out
mov
mov
cmp
daa
data16
out
push
lret
hlt
repnz
scas
rcrl
hlt
das
xlat
xor
mov
std
shrb
or
cltd
leave
or
push
rorb
jns
jb
pop
lds
adc
jge
xchg
push
das
fs
jae
in
icebp
xchg
pop
cmp
pcmpgtw
hlt
dec
not
push
push
sbb
in
cmp
jmp
aam
push
xchg
sbb
and
push
inc
sti
inc
frstor
and
dec
xor
outsl
and
out
outsl
add
insl
loop
or
int3
cmp
test
mov
popf
movsl
test
mov
cmpsb
add
inc
ret
cmc
int
cmp
sub
sub
dec
mov
fwait
xlat
scas
push
pop
sub
adc
xchg
jno
jge
js
add
js
popf
and
adc
nop
inc
jo
adc
iret
orl
mov
loop
cmpsl
subb
jns
mov
jbe
xor
mov
mov
jo
or
pop
dec
aad
dec
mov
ret
dec
lock
shll
mov
nop
sub
dec
mov
sbb
sub
daa
fs
mov
jl
adc
add
xor
jno
fldt
ss
clc
jo
push
lds
sub
test
or
mov
popf
xor
and
pop
add
filds
or
dec
dec
lret
mov
cs
ds
xchg
push
jl
push
dec
jmp
popa
nop
jmp
inc
popw
cwtl
aam
ret
push
xbegin
inc
mov
cmpb
cmp
jb
gs
sub
lock
mov
addr16
lahf
popf
fstpt
shrl
adcb
mov
fcomi
inc
lods
insl
inc
cs
and
imul
jl
jl
addr16
fsubs
push
inc
and
add
mov
xlat
mov
out
sub
push
addr16
cmp
jle
or
bound
lea
sub
mov
add
mov
movsb
cmpsl
mov
xchg
sbb
gs
jmp
fcompl
rcpps
lea
mov
test
dec
sub
inc
or
or
movsl
mov
cmp
lds
lahf
loope
and
mov
loop
mov
cmp
adc
data16
xor
fdiv
lods
in
rcrl
cmp
in
mov
arpl
mov
aas
in
add
push
and
mov
inc
pushf
or
aas
in
cmpl
mov
jno
inc
insb
lcall
cmp
mov
outsb
in
inc
and
mov
fildl
jae
loope
insb
mov
sub
jnp
jmp
loop
dec
sbb
xor
sbb
pop
and
jno
stos
lds
orps
in
adcb
popf
sub
test
add
mov
inc
sbb
fisttpl
xchg
jo
in
mov
gs
mov
jo
iret
rcrb
mov
mov
outsb
pop
pop
inc
popf
and
cltd
or
int3
pusha
inc
push
push
scas
mov
push
push
pop
imul
cltd
fcompl
sarb
mov
xchg
sub
jge
fsubrp
out
scas
inc
stos
xchg
movl
cltd
enter
test
push
icebp
jl
or
int3
sbb
push
gs
sub
xchg
or
cwtl
cmp
js
orb
xchg
xchg
dec
mulb
shlb
adc
fwait
lret
or
fisubs
movsb
or
lret
mov
or
rorb
rcrb
cld
fwait
cmp
and
loope
add
adc
lods
leave
pop
ljmp
stos
rolb
int
pop
addr16
mov
lods
hlt
inc
adc
lcall
pop
or
or
mov
js
inc
enter
and
enter
jmp
gs
mov
repnz
das
cmpl
jp
lret
dec
jo
dec
dec
fmuls
mov
jo
mov
je
xor
in
dec
icebp
adc
rcl
jno
orl
iret
xchg
repz
stos
xchg
insb
out
sti
mov
xor
pusha
fcmovne
lret
cmpsl
enter
sti
ficoms
mov
and
inc
shrl
and
mov
pusha
push
repz
xchg
jecxz
and
cmpsl
push
pop
push
call
sbb
sbb
in
fdivl
xchg
adc
popa
push
dec
icebp
mov
int
xchg
insl
imul
jnp
enter
or
bound
inc
and
bound
fistl
jmp
or
inc
mov
rcrb
jp
cmp
or
aas
jns
lock
jmp
push
mov
sub
sbb
mov
bound
and
sub
sbb
jmp
jmp
movsl
sbb
pop
and
loopne
jae
inc
push
negl
testb
xor
stos
loopne
sub
jecxz
mov
sbb
sbb
sbb
mov
xor
jbe
popa
adc
pop
call
jae
mov
mov
sahf
add
mov
jle
cmp
adc
xor
mov
mov
cli
jno
sub
cld
decl
pop
popf
es
pop
fwait
sbb
addl
push
dec
mov
push
shrl
fdivr
cmp
jb
sbb
pop
push
lea
mov
in
inc
lret
fisubrl
mov
mov
xor
xor
repnz
mov
push
fwait
stos
enter
push
adc
rorl
dec
mov
loope
rcll
leave
sub
lock
out
push
insb
cltd
int
mov
xor
xor
fwait
cmp
inc
push
and
sbb
sub
int3
fisubs
lcall
icebp
call
pop
leave
cwtl
ret
adc
mov
and
or
cmp
mov
lods
popa
cmpsb
mov
pop
lods
lcall
inc
dec
mov
leave
mov
push
dec
mov
mov
gs
adc
add
data16
dec
add
jg
add
aam
pop
sbb
negb
xchg
add
cmc
movsb
mov
mov
xchg
mov
int3
mov
es
xor
scas
loop
adc
jbe
adc
and
jmp
dec
je
mov
stos
das
es
push
movsb
push
rcll
xor
xchg
adc
loope
xchg
push
cmc
cmp
cmp
scas
pop
xor
gs
cmpsb
push
mov
pop
fmul
add
insb
movsl
pop
inc
push
popl
jp
daa
add
cmp
cwtl
into
in
incl
or
pop
repnz
mov
in
xor
repz
or
sahf
ljmp
lahf
xchg
stc
insb
cld
call
xor
jecxz
icebp
pushf
mov
push
cmpl
nop
movsb
insb
push
add
inc
pop
xchg
and
fmul
test
jns
dec
scas
sbb
andl
xchg
pop
add
aam
mov
jb
cmc
add
mov
xchg
gs
and
cmp
dec
stos
andb
nop
cmp
ret
lret
das
pop
test
mov
int3
sbb
into
insl
mov
enter
cli
push
shlb
mov
pop
add
dec
pop
pop
sahf
pop
sahf
push
inc
pop
icebp
push
in
cmc
scas
shll
fldcw
pop
movsl
dec
pop
mov
and
mov
das
test
movsl
jae
sub
dec
xor
xchg
xchg
enter
idivl
xor
popa
mov
cltd
out
mov
mov
in
mov
add
arpl
and
push
ficompl
fmull
es
lods
pusha
in
rcrl
cmp
mov
push
fcmovnu
dec
insb
popf
or
ljmp
xorl
popa
jmp
andb
clc
jmp
lods
fstps
sarl
sbb
outsb
pop
enter
subl
fwait
and
sbb
or
jge
adc
xchg
mov
mov
xchg
hlt
or
pop
xor
adc
popl
outsl
sbbb
outsb
jae
mov
ficoml
in
lods
rclb
sahf
mov
add
test
xor
xlat
leave
or
movsl
in
ror
sub
add
dec
jp
mov
mov
jle
mov
push
negl
setge
mov
outsb
testb
dec
push
imul
popa
test
mov
sub
xchg
ffree
xchg
xchg
inc
dec
add
pop
push
cmpb
ret
sarb
pop
mov
dec
hlt
int
xchg
clc
adc
repz
adc
jb
das
aaa
cmp
and
inc
dec
movsb
insb
mov
sahf
mov
cmp
pop
scas
mov
sarb
xchg
jbe
movsl
add
add
popa
repnz
push
ds
sahf
fcoml
adc
cmp
dec
jae
and
addr16
inc
loopne
mov
push
ret
mov
mov
rorl
jp
dec
mov
test
ja
addl
adcl
jb
pop
mov
cwtl
clc
fmul
cmp
xchg
sti
pop
sub
sub
sbb
cmc
loopne
loope
popf
cld
aad
fld
data16
enter
inc
lock
or
fs
mov
fwait
jmp
sbbb
movsb
fnstcw
add
ds
scas
fidivrl
push
sarb
adc
dec
add
sub
lcall
int
add
shll
cltd
fnstsw
sbb
or
aas
ret
fiaddl
xor
test
outsb
pop
sahf
pop
aas
mov
je,pt
shrl
xchg
repz
adc
xchg
sbb
pusha
ja
pop
xchg
mov
cld
lret
loop
repnz
push
sbb
cwtl
push
or
in
idiv
out
mov
shlb
imul
outsl
scas
lea
xor
rcrl
add
fldenv
push
lods
in
test
js
mov
mov
ja
aaa
cmp
fcmovne
and
std
data16
xor
and
scas
xor
in
aam
ja
popf
clc
aaa
sub
lock
and
cmp
cmpsb
and
cmpsl
scas
mov
rcrb
jecxz
jne
xor
dec
scas
adc
xchg
and
xchg
dec
push
jmp
push
ljmp
gs
dec
mov
jo
adc
mov
sub
jle
xchg
stc
push
adc
mov
movsb
test
inc
lcall
and
push
icebp
xchg
jns
jnp
jae
dec
mov
pop
xor
les
add
xchg
sub
and
dec
outsb
xchg
xchg
imul
push
imul
ret
out
into
mov
add
pushf
adc
adc
and
mov
rcl
push
fisubrs
xchg
mov
rclb
pop
sub
pusha
nop
or
movsb
popw
jbe
icebp
add
dec
loop
sub
inc
pop
xor
sub
call
mov
pop
in
lret
xchg
loopne
jnp
and
leave
push
mov
popf
orl
sub
mov
jno
incl
or
cli
sub
notl
jg
jbe
cmpsl
hlt
out
ficompl
repnz
and
fstl
call
adc
inc
int3
aam
test
pop
xlat
xor
fisubs
jmp
andl
scas
out
mov
daa
scas
insl
and
fadds
push
jp
iret
in
hlt
in
adcl
and
adc
add
in
mov
mov
mov
ds
roll
loop
data16
std
mov
lcall
jbe
iret
or
mov
push
jmp
ss
clc
leave
xor
mov
adc
jns
loop
push
and
shll
add
pop
inc
add
js
jns
jmp
jecxz
roll
popf
fimuls
mov
das
or
adc
jb
repnz
jno
sub
sbb
mov
testl
imul
int3
push
loope
fmul
cmp
ljmp
pop
ret
dec
mov
mov
subl
seto
push
repz
dec
cmp
dec
mov
pop
or
jp
mov
mov
push
xor
mov
mov
mov
dec
hlt
lods
mov
mov
sbbb
xor
mov
xchg
pushf
pop
push
adc
sbb
stos
mov
push
jno
leave
aam
ja
push
imul
mov
push
data16
xor
fwait
xor
popf
xor
xchg
scas
fwait
jb
orb
imul
mov
test
test
lock
imul
sub
daa
mov
pushf
fistps
popa
or
out
mov
enter
mov
cmpsb
por
mov
clc
pop
dec
cmp
lods
dec
fwait
xor
push
and
ss
outsb
push
jecxz
cmp
jae
jecxz
push
inc
scas
mov
cmc
leave
xchg
out
and
pop
sub
push
out
adc
lods
shl
and
test
push
repnz
bound
jle
pop
ror
sbb
sahf
shlb
add
jnp
into
pop
das
push
jnp
loop
xchg
adc
jl,pn
jae
repnz
fsubrl
lods
jmp
addb
hlt
loope
push
enter
sbb
nop
or
or
add
push
iret
out
sbb
jge
gs
xorb
insb
cmp
sbb
enter
in
shlb
movsl
cmp
adc
rcll
pusha
jle
jge
and
daa
fwait
pop
mov
arpl
jbe
pop
mov
out
cld
and
xchg
jmp
or
add
nop
push
sub
mov
and
jmp
call
rcrl
dec
inc
mov
jl
jge
pop
jmp
inc
out
push
fs
cmp
inc
sbb
nop
outsb
dec
xchg
stc
popa
add
dec
fcoml
stc
pmaxsw
stos
sub
jle
sbb
sub
aad
xchg
aad
stc
test
shr
or
aam
and
rcrl
addr16
pop
test
inc
mov
stc
inc
outsb
std
stos
nop
or
scas
cmc
add
mov
mov
aas
xchg
vaddsd
in
imul
mov
icebp
xorl
xor
push
aas
lahf
or
mov
mov
mov
cli
push
lods
andb
xor
loopne
inc
pop
nop
and
push
inc
jle
add
sbb
int3
sub
xchg
add
adc
add
add
jbe
pop
jnp
mov
divb
icebp
xchg
ret
outsl
sub
xchg
lret
pop
shlb
push
sti
cmp
sbb
fbstp
test
jp
loope
xor
lods
ja,pn
sbb
scas
mov
pop
sbb
lahf
sub
in
push
adc
and
aas
mov
adc
pop
cs
mov
cmp
loop
add
out
in
arpl
es
jno
das
sbb
jmp
shl
xchg
add
fs
and
xchg
and
push
cltd
adc
push
or
sbb
dec
pop
aas
adc
syscall
notl
jae
fwait
xchg
mov
xchg
mov
mov
loopne
dec
pusha
outsb
sbb
xchg
dec
xor
aas
cli
pop
lcall
sbb
fistps
push
aad
je
fists
or
adc
mov
test
inc
sbb
mov
clc
roll
into
jmp
push
outsl
pop
je
jmp
rclb
ja
std
xor
pusha
mov
inc
lods
jo
fimull
xchg
stos
addr16
pop
xor
jp
popa
pop
gs
xor
jo
push
out
push
enter
inc
aad
mov
jne
pusha
push
ss
mov
mov
int
xchg
repnz
adc
call
insl
outsl
insl
mov
in
pop
inc
cmpsl
or
or
inc
cmpsl
pop
das
sbb
pop
sbb
test
xor
inc
xchg
cmp
xchg
inc
xchg
stos
mov
lcall
push
nop
popf
xchg
clc
adc
and
xchg
pushf
pop
xor
ret
dec
push
add
xlat
inc
shll
dec
pop
dec
pop
or
test
cmp
addb
sarl
mov
repz
xchg
and
dec
cld
dec
dec
and
or
loopne
rorl
cmc
adcb
xchg
and
lret
in
dec
sti
adc
stos
jb
xchg
es
dec
lcall
int
adc
gs
push
pop
cwtl
xchg
and
and
sbb
sub
sti
and
xor
xchg
mov
scas
add
addb
adc
xchg
aaa
inc
inc
add
push
mov
mov
sbb
aas
jmp
sbb
fwait
rcrl
dec
shlb
gs
test
push
test
out
mov
adc
jl
dec
jp
daa
test
imul
fsubr
cmp
inc
mov
sub
or
fisttpl
cmp
push
fiaddl
or
out
and
sub
cmp
or
ret
test
mulb
ret
cmp
add
push
add
add
fdivr
inc
jge
mov
push
push
adc
sub
xchg
rcr
add
add
or
dec
sub
dec
lock
popa
mov
loopne
or
adc
push
cwtl
or
enter
push
icebp
outsb
and
pusha
cmp
jg
push
cmc
enter
imul
mov
shlb
ret
rcrb
and
pop
jg
loop
and
add
xchg
ret
stos
mov
inc
mov
js
fistpl
jg
pop
jmp
or
sbb
aaa
popf
loope
dec
cmp
mov
add
add
out
mov
and
push
cmp
icebp
fnstcw
rorl
or
popf
int3
dec
cmpsb
sub
loopne
jmp
aas
int
push
fcmovne
push
popa
sbb
jp
and
mov
adc
mov
dec
mov
xlat
adc
stos
and
jno
adc
and
mov
mov
mov
adc
sub
iret
or
popa
lret
pop
cmpsb
clc
add
jb
out
stos
in
ret
shr
cld
cmp
xor
cmpsb
ss
push
push
sahf
xor
je
mov
xor
rcr
adc
add
push
aad
test
stos
imul
or
lock
daa
inc
addr16
adc
adc
hlt
jb
dec
in
enter
clc
or
or
pushf
jnp
mov
lret
aad
arpl
repz
xchg
cld
lock
cmpsl
frstor
jg
xchg
jns
sahf
or
dec
and
outsl
sbb
test
pop
mov
aad
cmp
inc
xor
mov
adc
ret
mov
xchg
jns
leave
sahf
mov
icebp
pop
and
mov
int3
adc
mov
das
xchg
fcoml
test
and
mov
or
std
iret
repnz
add
jmp
in
push
mov
mov
test
js
inc
sti
test
push
int
dec
arpl
and
lds
xchg
inc
sarl
sbb
insl
rcrb
in
jmp
mov
lahf
pushf
push
mov
dec
inc
fidivs
into
sahf
out
sbb
jno
shlb
push
add
sbbb
out
js
mov
insb
lcall
sub
and
fisubrs
push
mov
cmp
divb
xor
and
add
cmp
pop
lods
fs
mov
xor
dec
ds
fwait
lea
aaa
jmp
lret
cmp
mov
mov
pop
roll
movsb
movsl
popf
pop
xor
xor
xchg
bound
push
xchg
mov
sbb
xchg
sub
cwtl
adc
lods
loopne
lea
adc
pop
mov
mov
clc
push
add
jl
and
fsin
cwtl
sub
inc
arpl
loopne
nop
in
lods
add
mov
aam
lds
int3
ja
mov
filds
dec
cmpsl
cs
repnz
gs
jg
and
cltd
cmp
inc
or
inc
iret
test
mov
std
cmp
movsl
loope
sub
fsts
bound
mov
jl
jb
add
push
mov
adcl
sbb
jp
imul
test
dec
push
adc
sub
int3
es
adc
or
push
stos
rorb
in
aaa
inc
xchg
leave
xor
xchg
repnz
push
pop
cwtl
or
in
inc
adc
arpl
fdivs
aam
lock
pop
sbb
jo
int
je
mov
and
mov
xor
mov
inc
push
out
fldenv
inc
rorb
pusha
and
jb
shll
mov
adc
sbb
scas
shll
movsb
adc
fdiv
pop
xchg
mov
sub
cmp
cs
push
stos
or
je
in
push
pusha
inc
insb
mov
sti
imul
mov
fcoms
jo
sahf
push
lds
xchg
jp
adc
test
fldcw
and
mov
jg
ja
xor
ret
sub
scas
incb
sbb
add
stos
cltd
bnd
notl
xchg
push
jo
adc
mov
je
pop
and
das
push
dec
pop
cmpsb
push
sbb
xor
arpl
mov
outsl
lock
push
stc
add
out
data16
aam
jno
cli
sbb
sbb
add
dec
ljmp
push
loope
cmp
lods
push
cmp
jne
mov
sbb
lret
add
sub
fmul
sub
mov
and
insl
inc
or
xchg
and
adc
mov
lahf
cmp
add
int
sarl
jp
pop
xor
xchg
mov
sub
imul
xchg
cmp
stos
inc
and
shrl
popf
mov
cmc
push
inc
jmp
cmpsl
adc
sub
andl
jp
xchg
cld
cmp
and
out
mov
push
movsb
rol
notl
xor
loope
addr16
std
sub
dec
or
or
and
fdivrs
or
sbb
xor
push
loop
add
pop
scas
jae
loop
push
mov
sub
sbb
adc
jnp
add
int3
pop
mov
xor
pop
mov
outsb
pop
imul
pop
jmp
mov
scas
fmuls
push
xor
outsl
adc
stos
mov
mov
cmp
push
fcmovbe
adcb
in
fwait
shl
push
sub
movsb
push
cwtl
hlt
es
cmp
insb
jecxz
push
lahf
bound
cmp
xchg
pusha
insl
movsb
pop
mov
andb
push
aam
add
ljmp
clc
or
or
jl
sarb
push
push
xchg
mov
xchg
xor
dec
pop
xor
and
loop
mov
jae
add
lea
mov
inc
dec
sbb
jno
xlat
mov
lret
pop
in
insl
jmp
sahf
mov
xor
cld
mov
sahf
jmp
sub
xor
lea
jecxz
inc
xchg
lods
jns
data16
outsb
adc
dec
out
sub
cli
xor
mov
in
or
test
mov
push
ret
out
jmp
imul
pop
xorb
push
lea
loopne
push
loopne
cltd
pop
cld
cmovp
cmp
jp
add
mov
mov
sub
out
jns
adc
ss
xchg
sbb
testl
pop
push
dec
mov
into
shll
sub
insb
pop
ficoms
mov
xor
dec
jne
enter
imul
push
loopne
xor
pusha
gs
sbb
data16
stc
in
pop
push
add
iret
mov
dec
rcl
outsb
cld
dec
xchg
push
shl
dec
sahf
imul
repz
mov
pop
movsl
bound
xor
fidivl
sbb
jno
test
clc
and
imul
rorb
lret
xchg
cld
dec
adc
jp
les
std
int3
test
mov
push
jae
cmpb
inc
ficoml
icebp
mov
or
int
sub
sub
enter
lret
fidivl
lods
sub
pop
ss
loop
les
pop
in
fs
mov
std
mov
pop
cli
inc
xchg
cmp
sub
shl
push
in
pop
pop
pop
sbb
inc
jnp
leave
pop
sub
push
enter
cmpsb
lods
push
loope
jbe
inc
in
mov
lods
push
cmp
push
sbb
dec
orb
jae
cmp
add
inc
test
lret
mov
les
stos
ja
xchg
jmp
insb
mov
push
sar
movsb
and
dec
push
icebp
lock
xchg
insl
fcomps
cmovne
scas
cld
jp
rcr
xchg
sbb
cmp
sub
dec
jnp
test
sti
and
add
sahf
aaa
xchg
sub
dec
das
mov
arpl
inc
inc
adcl
adc
repnz
sub
mov
dec
popf
jne
mov
push
in
scas
mull
jl
bound
jo
enter
std
ja
or
icebp
daa
std
sub
cmc
push
addr16
icebp
imul
cmpsl
icebp
xor
pop
add
add
jno
out
mov
or
add
xor
ss
lret
andb
xadd
adc
xchg
pop
fdivrl
cmc
lock
cltd
fwait
xchg
test
mov
xor
in
in
daa
sbb
inc
mov
dec
mov
ja
inc
out
int
mov
repz
inc
cmpl
inc
mov
inc
fldenv
mov
je
gs
popa
test
cwtl
inc
sbb
dec
and
cli
sub
and
mov
stc
cli
add
es
mov
push
clc
in
inc
push
lea
push
or
jb
in
pop
imul
mov
ja
push
flds
into
bound
adc
adc
inc
mov
repz
cmp
and
data16
scas
mov
nop
jecxz
jb
out
jle
and
cld
mov
mov
sub
iret
faddl
or
roll
js
insl
repnz
rcll
or
rcrl
outsb
or
pop
aad
mov
shl
inc
sbb
movsl
add
ret
xchg
enter
pop
inc
ja
push
jg
pop
mov
push
out
xorb
mov
loopne
ret
jnp
add
xchg
xchg
scas
call
push
fsubs
cld
adc
loopne
lock
mov
aad
add
call
js
sub
sub
lds
mov
mov
mov
pop
sub
fs
adc
lret
roll
xor
fwait
pushf
or
mov
jae
jo
push
data16
cmpsb
ss
add
adc
imul
nop
pop
rolb
cmc
ret
pop
and
inc
mov
into
jp
adc
les
popa
ret
cs
or
fistl
fdivp
mov
lahf
push
push
das
xlat
adc
sti
sarl
lods
int
rcrb
xor
push
in
mov
adc
call
mov
jno
dec
xchg
add
test
mov
les
mov
sub
aas
xor
inc
push
scas
rcrb
jmp
pop
pop
leave
or
add
push
sub
cld
pop
push
dec
enter
hlt
loop
mov
rclb
dec
int3
adc
push
cmp
xorl
pop
jne
xor
mov
inc
jmp
popa
cmp
shlb
and
pop
mov
shrl
jle
adc
hlt
lcall
xchg
sub
es
and
rcrb
lret
or
push
mov
xchg
loopne
dec
hlt
fs
sbb
fsubrp
add
sub
pop
cltd
push
sub
fs
cmp
add
mov
cs
jne
mov
cmpsb
add
jmp
outsl
mov
sbb
cmp
inc
fcmovu
les
push
mov
pusha
das
pushf
mov
xchg
mov
lahf
xchg
mov
jg
fs
xchg
adc
or
dec
mov
sarb
sbb
push
imul
out
and
ret
sub
fwait
jecxz
fmull
shll
push
push
dec
sbb
or
lahf
testb
shll
ds
mov
or
imul
imul
xchg
mov
push
push
add
dec
lea
ds
push
cwtl
adc
and
popf
inc
fidivrs
in
pop
ja
sub
repz
and
mov
ljmp
sbb
mov
mov
push
loopne
push
dec
cld
mov
fs
loop
jno
int
cli
adc
and
pop
push
cltd
and
jo
cmp
pop
adc
fsave
das
add
adc
sbb
repnz
cmpsl
daa
es
lods
mov
negl
fwait
jnp
add
test
jl
dec
add
movsb
push
mov
pusha
ret
aaa
push
and
inc
pop
int
jle
lods
jmp
push
xchg
repz
add
adc
pop
imul
sahf
sub
sub
imul
push
and
mov
xor
mov
add
lock
dec
repz
popa
mov
sbb
sub
jb
cmp
dec
xchg
and
fsub
pop
xchg
add
in
and
das
cmp
mov
xchg
idiv
test
and
in
movsb
cwtl
ret
adc
ret
in
pop
mov
mov
stos
add
lret
fcompl
jo
test
mov
pop
hlt
sti
popa
xlat
out
je
mov
mov
addr16
inc
scas
xchg
shl
sbb
imul
cmp
pop
lret
cmpsb
cmovo
fsubrp
leave
les
push
cltd
xchg
repz
repz
mull
pusha
mov
jmp
ret
jno
rol
xchg
lods
arpl
fisttpll
sahf
add
loop
fsubs
in
sbb
xchg
push
add
ss
pushf
jbe
in
mov
and
int
fsubp
pushf
stos
aam
cmp
push
dec
jl
imul
addr16
mov
cmp
sub
lds
or
sbb
mov
add
icebp
inc
and
data16
mov
fcoml
out
rolb
pop
in
jae
cmp
add
cmp
popl
cwtl
or
call
les
lret
xor
jle
cmp
xlat
aaa
jno
push
push
xor
dec
adc
push
add
lock
dec
fwait
sbb
cmp
inc
cltd
shrb
push
clc
push
pop
pusha
cltd
sub
outsl
aaa
lods
dec
inc
fistpll
sub
push
jp
push
mov
sarb
lds
mov
inc
xor
xchg
in
or
inc
cmp
mov
loop
shr
pop
jmp
jno
xchg
lcall
dec
enter
lahf
xchg
lods
jb
in
stos
jg
fcmovnb
fcmovu
addr16
test
inc
mov
add
out
scas
addr16
xchg
jnp
fildl
rcr
shlb
cmp
cmc
sbb
sbb
mov
jge
test
lock
mov
sbb
inc
clc
sbb
adc
pop
push
bound
repz
jno
fisttpl
jns
filds
xchg
ja
fsub
int3
clc
xchg
mov
cmp
cmc
outsb
mov
push
mov
mov
push
pop
ljmp
pop
cmpb
fcoml
mov
inc
outsb
cwtl
ficompl
jnp
xor
and
jp
cwtl
lds
fistpll
xchg
xor
int
sbb
inc
inc
push
lods
push
or
adc
pop
inc
sbb
adc
push
shr
cmp
mov
push
inc
dec
psrlq
adc
push
inc
jl
lods
jle
adc
cmp
jne
and
dec
mov
lahf
sbb
inc
push
out
mov
gs
js
inc
loopne
stos
cltd
fwait
std
adc
mov
dec
xor
daa
mov
adc
jnp
in
sub
bound
adc
loope
gs
mov
push
fists
outsl
adc
adc
jmp
testb
aam
cld
movsb
aad
and
in
ss
xchg
cmp
sbb
ret
lds
cmp
sbb
loope
lock
adc
rcll
dec
es
testl
sarb
mov
adc
fisttpll
and
sub
inc
mov
add
pop
enter
ja
dec
enter
mov
push
jp
fnsave
inc
popf
jnp
movsb
out
sub
jp
xchg
push
outsl
popa
sub
add
insl
fsts
andb
std
jle
cmpb
jmp
mov
jecxz
push
adc
scas
mov
xchg
cs
sub
sti
rclb
inc
or
add
xor
nop
mov
dec
test
fcmovu
mov
and
lahf
push
sbb
xchg
inc
sub
sub
add
rolb
lods
push
jmp
sub
push
pop
sbb
test
dec
cmp
mov
lock
and
jns
out
jecxz
fsubl
ficoms
arpl
jge
leave
arpl
cmpsb
jae
or
add
daa
sbb
bound
jo
cli
sti
and
xchg
andl
lcall
mov
mov
sbb
jne
mov
fildl
pusha
arpl
imul
aam
pop
pop
dec
cwtl
iret
lret
sub
in
or
cmp
nop
fnstenv
jl
jne
out
icebp
dec
xchg
movsb
sbb
dec
dec
mov
dec
in
inc
les
xor
call
movsl
out
push
loop
test
xchg
dec
pop
pop
or
pop
cmp
mov
cmp
in
data16
pop
pop
out
add
sub
lret
xchg
mov
and
out
xor
xchg
mov
mov
out
mov
rcrl
jae
lret
fidivrs
jns
cltd
jg
lods
mov
jle
loope
cmp
and
jg
rolb
xor
pop
push
outsb
sub
ret
mov
sti
pop
jno
inc
push
iret
pop
adc
call
fsubrp
into
adc
test
pop
outsb
jg
add
sub
jbe
add
das
cmp
popf
cmp
xchg
and
push
sbb
mov
fdivrs
lods
dec
out
movl
add
inc
sub
dec
or
jno
vpmacsdd
movsl
ljmp
xor
xchg
push
out
cmp
shr
push
shrb
jns
jp
mov
push
push
fmuls
pusha
ja
data16
pusha
ss
nop
adc
adc
push
loope
dec
or
inc
call
sbb
fwait
mov
mov
out
fst
xchg
xlat
rcrb
lret
and
add
cs
jae
rcrw
sbb
mov
adc
jmp
orl
mov
inc
pop
sub
ret
in
push
lock
cs
fisubl
cs
jne
push
ret
leave
adc
dec
ret
sbb
inc
jae
xchg
pop
in
and
cs
cwtl
pop
shr
mov
lret
fdivrs
test
push
dec
sub
or
roll
mov
adc
push
lahf
ds
les
inc
sub
push
push
fcmove
aam
dec
out
leave
ja
pop
fildll
inc
mov
std
std
gs
jg
lcall
pusha
in
out
inc
das
popf
sub
cmpsl
jns
sbb
js
add
or
ss
dec
jo
subl
adc
mov
sub
in
and
clc
inc
dec
adc
fs
push
xor
stos
lock
icebp
sbb
lahf
pop
stc
inc
add
cmp
fldt
fdivrl
push
jg
push
mov
xchg
shrl
mov
fidivl
sub
cmp
xor
pop
adc
inc
nop
sub
sti
cmc
enter
or
ret
push
dec
cmp
lock
test
roll
inc
imul
sahf
insb
mov
inc
xor
mov
dec
arpl
dec
pop
fisubl
aaa
sahf
jo
aas
fsubrl
sub
jp
stos
xchg
jnp
iret
outsb
xchg
pop
jne
pop
scas
movsb
jae
mov
je
jno
mov
dec
stc
sbb
in
jle
xlat
mov
push
mov
mov
lret
push
stos
fwait
test
sub
lret
lock
inc
jns
mov
xor
hlt
push
push
xor
scas
adc
cli
jae
iret
les
mov
repnz
faddl
jae
push
mov
loopne
ja
test
je
mov
cwtl
inc
mov
loop
int3
pop
jo
xor
imul
add
hlt
test
xor
mov
int
aam
or
sub
sbb
popa
xchg
cmc
pop
sbb
cwtl
fcompl
sbb
lea
and
fisttps
jge
ja
xchg
push
push
xor
repnz
pop
sbbb
mov
adc
das
xor
mov
rcr
sub
sbb
in
mov
imul
add
cmp
daa
xchg
iret
fcompl
ja
cmp
les
in
popf
lods
sub
loopne
jb
jle
adc
mov
test
je
and
cltd
in
sbb
adc
inc
aam
lods
pop
lock
nop
cmc
jecxz
fsub
inc
cmp
mov
inc
pop
aaa
add
or
mov
pop
pop
enter
enter
mov
lods
sbb
push
mov
cli
lahf
xchg
and
mov
movsb
divl
xor
std
js
jmp
xor
inc
pop
in
and
mov
nop
cmpl
push
pop
lea
push
aaa
fstpl
das
xor
loope
repnz
into
xor
and
xchg
rolb
ret
and
jmp
outsb
imul
mov
sti
ljmp
inc
ljmp
xchg
loopne
and
push
fcoms
adc
cmp
fbstp
scas
dec
or
add
mov
roll
pop
das
ljmp
push
mov
mov
add
imul
cmp
push
orl
icebp
scas
add
ss
cmp
mov
cmp
and
sti
aaa
movsl
inc
and
sbb
or
mov
test
pop
push
les
jno
das
stos
aas
or
inc
jb
js
cld
xchg
shlb
insl
pop
mov
mov
add
mov
pusha
dec
push
adc
and
ds
mov
in
les
fbld
stc
aad
push
sub
push
pop
pop
loope
inc
pop
xchg
xchg
sub
jne
in
outsl
pop
adc
xorb
sbb
outsl
mov
or
inc
jns
sub
out
or
cmpsl
pop
icebp
sahf
xorb
jo
push
ja
add
pop
cmp
jno,pt
dec
les
stos
xchg
push
sub
sbb
out
mov
repnz
jnp
mov
push
push
fdiv
lods
xor
movsb
fidivl
xchg
mov
ds
jns
cmp
push
lock
sbb
push
sbb
pop
sbb
jb
sbb
lret
ss
xlat
pop
ret
sub
mov
js
jl
movsl
mov
mov
mov
mov
pop
lods
lcall
cli
popa
xor
adc
or
sub
ljmp
daa
dec
cltd
xor
iret
xchg
adc
sbb
adc
pusha
inc
jb
mov
addb
adc
mov
mov
fbld
les
mov
mov
push
stc
sbb
add
addl
push
cmpsl
pop
add
jnp
cmp
adc
fwait
hlt
inc
xchg
xor
sub
notb
out
faddp
es
xor
add
inc
dec
adc
test
mov
aad
push
movsb
push
mov
call
vmptrst
xchg
xchg
imull
mov
aas
ljmp
add
dec
push
cwtl
mov
mov
dec
jg
xor
or
ss
shll
dec
data16
cmp
pop
loopne
cmp
test
cwtl
mov
add
ret
sub
cmovg
imul
rcl
push
push
push
aaa
int3
addb
stos
adc
sub
cmp
jo
mov
add
push
xchg
and
in
insb
rcll
and
ret
sub
and
jns
imul
and
push
js
xor
out
push
scas
ret
push
loope
loop
movsb
arpl
arpl
stos
xchg
pop
mov
pop
stc
push
dec
mov
dec
in
adc
lret
ja
scas
inc
and
adc
sbb
out
xlat
inc
fisttps
aam
arpl
or
sti
adcb
lret
dec
fildll
adc
mov
repz
imul
jno
cli
imul
sub
mov
jbe
imul
scas
mov
push
push
js,pn
lods
stos
call
leave
mov
cmp
inc
faddp
mov
xor
push
sahf
test
mov
stos
and
imulb
xchg
ret
call
mov
xchg
push
cwtl
test
adc
cli
push
adc
and
test
repnz
push
or
mov
push
jb
icebp
decl
ja
cmpsl
incl
mov
cmpsl
ret
std
jbe
mov
mov
adc
ljmp
or
pop
dec
mov
inc
xor
xor
subl
push
mov
outsl
hlt
sbbl
adc
mov
repnz
lcall
dec
and
mov
inc
and
xorb
cmp
add
cld
lahf
mov
jecxz
push
push
cmp
push
out
ret
mov
adc
push
sbb
nop
rol
sahf
pop
aam
and
pop
jo
pop
inc
sub
pop
push
push
movsb
mov
js
fidivrl
push
jle
push
std
jne
sahf
sub
and
sub
and
pushf
pop
push
es
sbb
xchg
sub
cwtl
shll
stos
daa
jno
mov
test
mov
movsl
fisubl
je
adc
popf
in
cld
rep
scas
jge
pcmpeqw
aam
push
ljmp
sbb
pop
cmp
mov
loopne
jno
mov
pushf
xchg
push
fs
lahf
imul
lahf
iret
jg
push
mov
loop
cmpsl
cs
jmp
pop
aaa
call
pop
mov
jp
push
dec
arpl
sub
push
mov
adc
push
mov
leave
daa
jle
out
xchg
and
and
pop
pop
add
or
and
lds
in
js
sub
lock
mov
pop
adc
pop
sub
into
adc
mov
sbb
pop
inc
mov
cmp
inc
inc
div
mov
and
push
cmpsl
sbbl
push
push
cltd
lea
fiaddl
and
aam
outsb
movsb
ror
push
jmp
xchg
xchg
sbbl
pushf
jmp
push
jge
faddl
cmp
bound
inc
rorb
xchg
es
notb
fwait
roll
xchg
or
leave
xor
jnp
enter
popf
stc
push
xor
jns
pop
ljmp
shl
shl
sbb
mov
adc
add
pop
cmp
jo
lret
sti
movsl
and
daa
in
or
les
and
or
fldln2
adc
mov
rcl
decb
fwait
call
xchg
in
jge
cmpsl
lods
add
scas
mov
push
subb
mov
in
add
jno
hlt
fstl
cmp
ds
mov
or
xorb
jg
lcall
ja
pop
pop
jae
out
pushf
leave
test
dec
std
inc
mov
xchg
dec
adc
dec
enter
sti
out
and
xor
pop
mov
stc
leave
jecxz
mov
push
jp
and
and
icebp
jmp
ss
lahf
push
and
cmp
or
test
gs
les
aaa
shll
pop
ret
cwtl
jb
add
out
xchg
mov
xchg
aad
ds
xor
idivl
sub
mov
jecxz
cmp
in
loope
repz
into
inc
scas
xchg
lds
inc
jge
lcall
xchg
out
movb
xchg
sbb
dec
std
or
loop
imul
ja
je
and
mov
fsts
push
not
cmpsl
fimull
sub
scas
in
xor
adc
adc
or
out
clc
push
std
pop
inc
fidivrl
loop
xchg
int
jmp
cmc
xor
fcompl
sarb
xor
xor
jns
cmp
push
inc
test
mov
repz
sub
pushf
dec
add
lret
les
xchg
adc
shll
push
add
pop
push
call
fdivs
outsb
ret
lods
out
jno
lds
ljmp
mov
cmpsl
int3
lods
test
mov
jbe
leave
xchg
leave
std
das
fcom
out
pop
mov
scas
cmpsb
jmp
pop
sbb
sub
dec
or
cmp
aas
jl
sbbl
lock
mov
mov
dec
sbb
out
fiaddl
fsubl
jp
and
scas
stos
scas
call
in
mov
xor
enter
arpl
daa
dec
nop
lahf
gs
push
clc
mov
xchg
and
lret
fidivs
sbb
push
mov
iret
pop
repnz
nop
mov
cmp
jle
jns
or
and
push
fwait
pop
adcb
inc
ret
pop
clc
add
sbb
pop
repnz
and
insb
rcr
xchg
mov
xor
rcll
fstpl
jmp
inc
in
xchg
scas
xchg
loop
mov
enter
push
xor
jle
ds
mov
test
shrl
lret
cmp
subl
repnz
lret
mov
mov
std
lods
jmp
sub
mov
pop
push
mov
pop
mov
xchg
pop
xchg
mov
repz
test
jmp
fadd
sbb
sbb
rcl
sub
xor
inc
inc
lret
push
lret
cmp
dec
incl
cmpsl
test
rol
push
dec
cltd
nop
movsl
cmp
mov
add
cmp
jae
in
pop
and
hlt
cmp
leave
jmp
iret
popl
mov
pop
cmpb
loop
fadd
mov
add
inc
daa
aas
movsb
push
jne
jg
add
xor
outsb
stos
ret
rdmsr
std
dec
mov
or
scas
pop
fwait
andb
roll
int
xor
movsb
cmpsl
xor
orl
and
outsl
in
pop
mov
mov
mov
pop
or
rcll
aam
leave
mov
cmp
mov
inc
cs
cmp
push
inc
in
inc
dec
mov
xchg
clc
fsubl
inc
jg
sub
lods
rclb
std
xchg
cs
xorl
pop
xchg
add
dec
insl
les
add
adc
jns
dec
mov
mov
mov
lds
lret
mov
popa
lret
cmp
ret
insb
xlat
cs
fs
lods
and
js
dec
mov
out
fs
mov
pop
mov
pop
fsts
es
mov
fld1
push
xchg
cmp
xor
in
mov
les
cmp
loopne
loop
cltd
add
jge
inc
push
or
rcl
pop
and
into
in
or
aam
cmp
imul
aad
mov
mov
pop
pop
dec
fnstsw
aad
jb
mov
mov
les
in
daa
pop
jbe
mov
dec
adcb
dec
xlat
pusha
test
clc
jmp
add
add
jge
std
xor
mov
sti
mov
add
mov
dec
ja
dec
int3
adc
shl
fwait
movsl
xchg
loop
push
sbb
jne
push
jne
mov
xchg
mov
dec
and
jg
orl
push
push
aam
xchg
jo
jne
pop
fwait
inc
push
dec
call
adc
dec
mov
dec
in
data16
mov
adc
xor
nop
push
sbb
gs
addr16
sbb
out
cld
and
adc
lods
jge
mov
cltd
inc
aam
enter
popa
push
rcrb
or
pop
or
rorb
icebp
clc
and
cmp
sbb
leave
sarb
fs
sti
outsb
fstpt
aam
mov
gs
addr16
or
cmp
in
or
pop
xor
add
movsl
dec
and
and
lea
or
ja
cmpsb
pop
cld
hlt
test
dec
rorl
shl
lret
or
in
out
lret
add
jmp
xchg
rclb
mov
mov
ficoms
cmp
push
inc
inc
lret
sub
adc
pop
nop
mulb
xor
int3
mov
xor
je
xchg
xchg
lock
xchg
jnp
inc
jle
clc
pop
fs
adc
pop
loopne
lods
push
add
stc
bound
xchg
fs
jb
push
test
vmread
xlat
pop
add
or
xchg
jecxz
lahf
cmovbe
stos
imul
repz
mov
lods
dec
mov
push
cmp
inc
fcoms
and
add
pop
addr16
sbb
dec
das
sub
mov
scas
ficomps
imul
jmp
addr16
in
xor
je
pop
jmp
inc
fwait
xor
xchg
pop
inc
cmp
sahf
jecxz
ds
out
scas
xchg
insl
cmp
adc
out
ficompl
xchg
imul
xchg
push
xchg
cli
divl
repnz
xchg
std
push
dec
sahf
sub
or
push
out
and
push
stos
into
fwait
cmp
mov
cmp
mov
lea
aad
lret
cld
inc
add
xor
je
xchg
mov
movsl
stc
push
xchg
in
jmp
arpl
test
xchg
adc
mov
pushf
add
jmp
jg
xor
hlt
add
inc
and
inc
xchg
ljmp
out
dec
sub
cmc
push
rcrb
jb
mov
out
movsl
insl
movsb
loopne
loopne
stc
pop
dec
or
push
xor
or
rorl
xor
rclb
mov
mov
outsb
sbb
stc
cmovae
dec
inc
adc
push
mov
sub
mov
pop
cmp
ja
arpl
dec
push
ss
xor
bswap
push
cmpsl
hlt
and
pop
mov
xor
add
nop
in
popf
jg,pn
fildll
xor
xchg
enter
addr16
cli
cmp
loop
mov
push
and
mov
sub
ret
pop
jmp
xor
inc
aam
dec
outsb
movsl
das
sub
loop
imul
imul
add
adc
mov
fdivl
mov
lahf
repz
dec
dec
xchg
insl
inc
lods
in
add
xchg
mov
out
int3
push
lea
jge
sub
xchg
in
lods
jne
gs
or
shll
enter
imul
pushf
fstpt
pop
add
mov
dec
daa
shl
in
add
test
mov
jb
lret
movsb
and
or
stos
out
decl
in
mov
push
xchg
xchg
sub
and
push
insb
mov
jbe
addl
cmp
stc
hlt
dec
loope
pushf
dec
test
jp
adc
or
mov
sti
xchg
xchg
xchg
pop
ret
mov
add
mov
push
dec
mov
adcl
add
fwait
lds
pusha
pushf
lcall
movsb
or
push
movsl
stos
cmp
add
dec
cmp
fistps
inc
sub
les
lahf
mov
push
dec
xchg
mov
pop
sarb
sub
and
fsubl
mov
cmp
sarb
popf
scas
arpl
popa
test
jle
pushf
jns
fsub
mov
adc
icebp
add
dec
push
add
dec
pusha
cmp
inc
jo
insb
fidivrl
lds
mov
cmp
testb
aam
xchg
or
jl
jle
pop
sbb
push
push
mov
push
dec
mov
outsl
inc
xlat
sarl
mov
jp
cmp
in
aas
sbb
cmp
cmpsl
sub
filds
inc
mov
cmc
or
cmp
mov
pop
add
leave
rcll
cmp
call
pop
mov
out
xlat
jmp
call
mov
mov
dec
scas
cli
rclb
xchg
xor
shrb
ret
das
sub
popl
push
fwait
mov
out
test
sbb
vsubsd
in
pop
and
or
lea
xchg
jp
push
inc
stos
lahf
pop
ret
add
jbe
push
mov
fidivl
bnd
stos
xor
dec
int
lahf
icebp
roll
and
push
push
loopne
rcll
or
mov
push
inc
xchg
mul
mov
jge
xor
in
icebp
lret
pop
idiv
cltd
and
shll
sub
aas
pop
push
adc
addb
subb
lock
mov
std
lds
pop
fs
and
pop
out
sbb
ret
ret
arpl
clc
xchg
aam
loope
ss
insb
std
out
out
loope
mov
jg
loope
sarb
test
lods
and
or
cwtl
and
jo
loopne
xor
into
push
mov
pop
add
dec
mov
dec
sub
xchg
jl
dec
shlb
sub
jmp
mov
add
jp
aam
xchg
out
inc
pop
stc
dec
mov
mov
sub
pop
mov
add
xchg
rclb
jbe
in
inc
add
adc
mov
sbb
dec
insl
fldcw
fisubs
add
xlat
stos
fs
jae
out
cli
sbb
lds
or
stos
test
sub
xchg
sbb
ss
or
cmp
push
js
cli
adc
mov
pushf
mov
dec
add
sbb
or
add
add
pop
xlat
jecxz,pt
mov
sub
aad
mov
shlb
jnp
dec
mov
pop
ficoml
xor
cltd
clc
push
int
mov
mov
popf
mov
test
xor
std
push
mov
fwait
repnz
incl
mov
sbb
mov
imul
and
jg
out
mov
lret
lcall
addr16
mov
sub
jo
gs
aad
sti
jmp
out
cmp
mov
and
cmp
fnsave
or
mov
nop
rcrl
ss
jp
lods
mov
fs
cmove
stos
sysret
dec
bound
inc
addr16
and
outsl
bswap
dec
mov
and
lods
sbb
je
and
dec
xchg
push
mov
adc
test
in
pop
shlb
jmp
hlt
scas
or
ficoms
inc
or
int
aaa
dec
das
cmpsb
push
pop
fwait
aaa
pop
add
dec
push
mov
dec
ja
fwait
add
mov
xor
pop
out
loopne
lret
dec
mov
fs
xchg
mov
push
andb
sbb
lock
cmpxchg8b
cmp
mov
pusha
jl
cltd
xor
sub
ljmp
out
xchg
dec
imul
shlb
outsl
negl
mov
fnstenv
sbb
jmp
imul
push
pusha
adc
mov
sub
pushf
int
rolb
or
cmpsl
and
add
mov
inc
aas
jl
mov
daa
xor
mov
lods
cmp
push
jns
add
push
rcrb
mov
inc
dec
stos
jb
adc
mov
pop
cltd
inc
mov
fcomps
jg
loope
aas
subl
xor
sub
test
or
lods
mov
adc
lods
incb
inc
add
mov
ja
jnp
je
pop
push
jmp
fdivrp
out
inc
push
movsl
and
mov
mov
sbb
add
lods
scas
hlt
add
daa
jo
aad
cli
dec
movsl
mov
fidivrs
cmpsl
push
cmc
ljmp
mov
dec
jg
jns
push
or
mov
lock
ret
sub
movsb
adc
fistpll
cwtl
rcll
mov
lahf
int
mov
ljmp
pop
cmpsl
je
in
mov
shlb
push
xchg
inc
dec
insb
ds
sbb
jne
push
mov
sub
sub
std
sub
test
fwait
lcall
and
push
mov
mov
and
lea
negl
or
rolb
orb
xchg
mov
dec
aad
addl
jbe
mov
inc
xchg
cmp
add
hlt
popa
mov
sbb
and
push
iret
jg
pop
lahf
addr16
flds
rclb
loopne
push
je
cmp
sti
test
ds
arpl
call
pop
das
jae
mov
in
int
repz
sbb
imul
pusha
arpl
sarl
xchg
jle
repnz
ss
add
std
mov
add
and
lret
push
aam
adcl
or
xor
cmpsb
add
arpl
ficomps
fmuls
aaa
insl
cmp
dec
or
outsb
pop
scas
mov
pop
adc
ret
iret
sub
inc
orl
xor
inc
add
sbb
mov
inc
lahf
sub
pop
pand
dec
sub
xchg
mov
stos
cmc
hlt
fiadds
loopne
movsl
cmp
cltd
cmp
bound
rorl
jp
repnz
out
lahf
mov
lods
movsb
cmp
int3
xor
jg
int
jb
cli
and
dec
push
out
cmp
addr16
jecxz
inc
xchg
add
inc
imul
mov
push
dec
xchg
and
jne
xchg
push
mov
add
jmp
jne
out
pop
scas
fs
into
sub
xor
cmp
xchg
pop
xor
sbb
movsb
dec
cmp
jg
fisttps
data16
movsb
dec
pop
test
mov
lea
sbb
rol
inc
mov
dec
hlt
xchg
ret
aas
sbb
loope
aas
popf
sub
inc
imulb
xor
call
call
inc
add
xchg
inc
push
into
cmp
pop
scas
xchg
pop
arpl
add
in
in
lds
orb
in
fcmovb
adc
add
pop
cli
bound
pop
cmp
lds
loope
xor
mov
jno
aas
rorb
das
sbbb
cltd
int3
in
and
test
insl
fwait
dec
rcll
out
dec
mov
push
scas
or
out
adc
punpckhbw
lods
mov
add
pop
fidivs
fidivs
push
or
mov
dec
mov
jns
inc
or
into
lea
scas
out
cmp
test
xchg
pop
lods
repz
cwtl
mov
mov
inc
cs
jmp
testl
popa
mov
mov
cmp
and
and
cmpsl
sub
cli
lds
fcompl
clc
adc
jne
ret
xor
mov
mov
push
pop
sti
ficomps
jae
test
enter
push
pop
mov
sub
fisttpll
rclb
lods
jg
cmpsl
xor
and
insl
cmc
repnz
pop
arpl
sub
pushf
sti
adc
scas
lods
fs
out
aas
xchg
dec
mov
push
inc
fcoml
xor
hlt
mov
jne
pushaw
fs
pop
neg
dec
mov
pop
outsb
adc
pop
and
inc
aam
popa
and
adc
sbb
bound
iret
inc
jmp
popa
xchg
iret
loopne
mov
icebp
addr16
and
leave
lock
aam
jns
call
arpl
xchg
lods
fnsave
sbb
inc
mov
ljmp
fcomip
adc
inc
jecxz
xchg
pushf
bound
mov
je
lea
jne
movsb
xchg
jmp
adcl
mov
cli
fimull
inc
or
pop
insb
in
sub
jg
cli
mov
movsl
xor
mov
xchg
inc
jnp
fstl
lea
in
xor
cltd
jle
iret
imul
or
dec
lret
or
call
xchg
pop
fs
dec
jmp
inc
scas
mov
cmp
lds
jne
enter
repz
test
stos
shl
popl
loop
pop
shl
iret
pop
push
clc
cli
inc
je
loopne
jmp
xorl
fcompl
and
lahf
mov
dec
fs
mov
arpl
and
aam
data16
sti
sbb
pop
jmp
xchg
and
cmp
dec
sarl
mov
cmp
dec
mov
test
lds
dec
xor
test
cs
cmp
pop
sarl
repz
xor
push
stc
pop
cmp
js
loope
rcll
and
fwait
cmp
cltd
pop
loopne
out
mov
idivb
xchg
lds
scas
cmpsl
sub
inc
jp
call
and
rclb
mov
iret
cmp
xchg
jp
jge
outsl
imul
scas
sahf
cli
xchg
sbb
pop
scas
push
adc
cs
arpl
imull
aam
jle
and
jmp
inc
test
push
mov
xchg
mov
clc
adc
frstor
push
in
dec
ficompl
lea
mov
fs
xchg
pushf
aaa
mov
dec
stc
ja
loope
scas
data16
int
mov
das
in
inc
fs
int3
lcall
xchg
imul
pop
mov
cmp
cmp
hlt
loopne
dec
repnz
ds
push
into
dec
pusha
jmp
cmp
push
dec
shrl
and
movl
adc
mov
out
test
cmp
mov
pop
sbb
cmp
sbb
insl
gs
scas
add
pop
imul
cwtl
inc
xor
sub
paddsw
mov
and
mov
out
mov
pop
std
mov
ljmp
mov
push
das
js
mov
and
fnsave
xor
pop
notb
sbb
mov
mov
push
jb
sbb
sub
xor
ret
sbb
int
out
loopne
inc
jno
xor
js
cmp
mov
std
int
imulb
icebp
or
push
jecxz
lods
cwtl
loop
inc
dec
test
push
xor
ds
lcall
sbb
cmp
xor
sti
push
sub
inc
mov
fbld
rcrb
ret
xor
pop
movsl
pop
inc
mov
insl
sbb
movsl
add
mov
inc
int3
movsl
xor
aam
clc
mov
clc
push
out
mov
popa
orl
out
cld
push
aam
pop
mov
sbb
or
mov
inc
inc
fcomps
adc
icebp
sbb
arpl
push
insb
out
test
imull
jbe
jo
test
push
push
loope
mov
mov
mov
icebp
and
xchg
mov
pop
add
xchg
scas
popf
lock
data16
pop
adc
in
stos
jecxz
les
leave
aad
and
test
sbb
and
lods
xchg
cmp
push
or
dec
adc
fsubrl
or
cs
sub
sbb
nop
out
sbb
repz
xor
jae
jb
popf
xchg
stos
adc
adc
cmp
fs
sub
insl
inc
inc
addb
lods
loop
in
cmp
iret
xchg
popa
ret
ljmp
ret
sub
pop
rorb
rolb
mov
aaa
mull
push
lahf
inc
stc
jo
mov
jmp
gs
push
out
pop
mov
fbld
mov
and
out
pop
cmpsl
sahf
inc
imul
adc
xor
pop
imul
fdivs
jecxz
iret
popf
cli
andl
add
lcall
mov
cmp
fwait
jb
and
adc
pop
xor
arpl
addr16
data16
outsl
ret
fwait
stos
mov
xchg
scas
mov
inc
test
outsb
jne
fisubrl
push
pushf
dec
jl
lds
sub
push
add
cmp
sub
dec
pushf
pop
cmp
mov
push
iret
mov
psraw
scas
add
add
mov
xchg
mov
neg
jae
cmp
mov
pop
fstps
add
imul
pop
dec
imul
mov
add
test
cmp
xchg
sbb
test
push
and
sbb
mov
jnp
sbb
icebp
push
fwait
sahf
test
adc
mov
mov
add
addb
and
gs
mov
adc
int3
fxch
ds
mov
pop
hlt
inc
xor
mov
pop
mov
stos
pop
fists
inc
dec
and
inc
jb
adc
sbb
push
enter
in
pop
addr16
cmp
mov
lea
nop
ret
pcmpgtw
and
gs
mov
pop
xor
xchg
insb
jl
in
aam
jae
mov
insl
or
imul
cltd
jg
ret
inc
mov
cs
xor
push
xchg
incb
xchg
test
in
push
stos
es
jo
jno
jl
jl
pop
mov
jl
dec
xor
lods
ljmp
sub
pop
js
aad
push
jg
repz
aaa
dec
lock
mov
jbe
adc
outsl
sbb
jnp
mov
push
sahf
sarb
daa
mov
xor
sbbb
ljmp
mov
mov
movsl
inc
push
cmp
lcall
sbb
test
fiaddl
xor
bound
jg
inc
xchg
mov
cs
lds
push
js
popl
push
and
sub
lahf
xor
jae
lods
outsl
cmp
push
xor
out
add
outsb
mov
push
scas
mov
rorl
dec
pop
pop
mov
sub
lods
aas
push
push
adc
or
jae
rcrl
out
loop
dec
mov
adcl
stos
cmc
push
cltd
xchg
mov
mov
lret
mov
inc
and
mov
cs
ss
subl
push
sti
mov
jbe
sahf
pop
into
xchg
mov
dec
stc
or
adc
lcall
movsl
stc
in
mov
mov
push
xchg
adc
call
jne
jae
outsl
les
pop
xchg
dec
xchg
push
mov
test
addr16
mov
je
cmp
xor
mov
pop
hlt
inc
pop
es
divb
loopne
sbb
or
inc
repnz
inc
in
movsb
je
push
js
popf
call
jb
cli
imul
lahf
xor
fucomip
jne
push
dec
sbbb
pop
jmp
pop
adc
dec
inc
cmc
fs
lret
xchg
xchg
in
cs
sbb
popa
nop
arpl
xchg
mov
jg
adc
adc
lret
lcall
loope
sub
es
jns
push
js
into
shrl
faddl
sub
js
cmc
push
xor
shl
dec
mov
xor
inc
movsl
in
lock
cmp
or
push
sub
push
jmp
arpl
and
xchg
insb
or
daa
adc
mov
ficomps
insb
sbb
cmp
into
jnp
movsl
ss
loopne
loopne
mov
sbb
push
dec
xlat
subb
pop
pop
dec
pop
push
or
shrb
mov
fildl
mov
pop
orl
loopne
add
and
and
dec
sub
data16
stc
fsubrs
xor
or
push
xchg
imul
ret
pop
push
jns
push
stos
push
ds
divl
loopne
or
pop
pop
out
xchg
mov
mov
and
inc
mov
inc
out
stos
shrb
cmp
addr16
or
push
mov
js
aaa
pop
mov
sarb
inc
sbb
int
inc
or
aam
sahf
mov
out
ret
rorb
mov
loop
scas
mov
fcom
sbb
push
push
cwtl
dec
mov
mov
in
pop
das
fs
test
fiadds
unpcklps
cmp
xchg
out
fldcw
gs
push
in
test
xchg
and
inc
inc
ljmp
lret
lahf
cmpsl
cmp
add
pop
enter
xor
pop
insb
adc
or
out
call
shufps
dec
lock
xchg
inc
xchg
push
xchg
rclb
jmp
or
rclb
pop
nop
adc
out
push
mov
dec
sub
dec
add
out
mov
xor
cmp
loopne
dec
xchg
push
jg
cltd
cld
xchg
sti
hlt
loope
mov
popf
icebp
push
add
testb
test
inc
cld
pop
adc
jmp
lds
dec
adc
in
adc
jbe
js
in
cmp
in
sub
xchg
push
push
sub
xor
adc
imul
fisubs
mov
sub
pop
pop
mov
mov
pop
out
addr16
insb
cli
ret
mov
sbb
adc
push
mov
jg
sub
jb
dec
shl
pop
pop
mov
clc
int
loop
mov
push
dec
movsb
jae
lcall
sbb
test
sub
shl
fdivr
popf
scas
inc
pop
sbb
out
xor
mov
cmp
hlt
cmpsl
add
adc
or
into
add
add
mov
scas
xorb
fucomi
jmp
xchg
mov
mov
jp
mov
insb
push
dec
cmc
mov
into
add
int3
insl
insl
or
pop
inc
mov
lods
jle
mov
aas
mov
jmp
sbb
and
jne
loope
adc
cmp
out
fistl
cmp
mov
insb
pusha
movsl
or
mov
dec
mov
cmp
inc
push
ret
leave
pop
push
sub
jp
mov
jmp
clc
aad
cwtl
movd
fdivr
pop
pusha
popf
andb
cmpsl
xchg
mov
jecxz
dec
add
sbb
mov
mov
stos
dec
outsl
outsb
inc
sbbl
int
testb
and
push
cli
jle
arpl
pop
nop
aad
ljmp
cld
sub
push
subb
jbe
in
bound
or
cmp
cmp
clc
push
sti
fists
pop
mov
xchg
cmpsb
adc
jbe
cmc
outsw
mov
jg,pt
mov
push
mov
in
dec
mov
aaa
add
lret
sbb
test
cmpb
dec
filds
lds
jb
in
lds
pop
pop
push
jne
sub
mov
adc
inc
insb
pop
add
pop
in
pushf
adc
ss
pop
dec
jp
call
out
mov
add
inc
scas
fistpll
add
jne
xorl
pushf
cmp
push
xor
cs
je
inc
sbb
lahf
jp
in
insb
jno
cmp
cmp
lea
insb
dec
ss
addb
shl
test
fwait
hlt
pop
mov
add
mov
adc
cmp
subl
in
enter
push
ret
gs
jg
jns
popa
fstl
nop
push
push
push
repnz
push
xchg
mov
mov
jg
jns
nop
jne
decb
xor
xchg
jne
xchg
mov
sbb
xor
lcall
xchg
push
das
jl
xor
stos
mov
bnd
jne
inc
insl
jne
xor
ret
es
testl
popf
aam
mov
ja
cmpsl
cld
pop
stos
rcll
push
sub
dec
mov
fildll
shll
adc
fcmovu
fisubs
enter
inc
jecxz
pop
das
adc
popa
decb
ret
popf
adc
test
insl
cmp
jae
loopne
insb
adc
adc
dec
gs
in
testl
icebp
fbstp
shlb
int3
outsb
jmp
repz
xchg
addr16
data16
js
jo
and
mov
repnz
inc
scas
push
jno
push
daa
adc
jge
sahf
mov
into
mov
inc
ja
mov
mov
sub
pop
adc
mov
icebp
cwtl
lret
test
push
insl
std
dec
sub
fidivrs
icebp
push
mov
push
cli
popa
dec
cmc
cmp
mov
leave
insl
adc
sti
movsb
shlb
movsb
dec
jns
jo
and
or
cmp
xchg
cmp
inc
mov
adc
fidivs
mov
xor
imul
ss
mov
jp
rolb
jge
out
sbb
mov
push
xor
loopne
cli
jmp
outsb
xchg
mov
je
cld
bound
in
pop
push
arpl
out
and
out
fdivs
int
mov
into
testl
xchg
xor
mov
fildl
dec
mov
pop
dec
sbb
push
or
mov
lret
fildl
sbb
mov
mov
sub
std
jecxz
xor
pop
insl
lcall
pusha
test
loope
cmc
mov
xor
cmp
ds
inc
and
mov
addl
movsl
jo
inc
dec
stc
mov
adc
push
jbe
jne
mov
or
add
enter
push
es
aam
pop
call
pop
jne
adc
pop
scas
adc
xchg
pop
xchg
daa
out
mov
xchg
lcall
add
inc
adc
push
imul
dec
test
insl
in
movsb
pop
aas
fists
clc
jle
jae
sub
dec
aas
sar
das
inc
mov
push
or
ret
int
pop
lea
mov
cmp
icebp
cwtl
adc
or
fiaddl
and
mov
jnp
fwait
mov
out
push
lds
push
icebp
jb
or
test
cltd
push
push
push
ds
movsb
je
popa
sbb
mull
ret
fimull
pop
mov
jge
in
mov
pop
sbbb
arpl
ss
add
testb
movsl
in
dec
data16
loop
iret
out
pushf
sub
mulb
cmp
sbb
xorl
dec
imul
push
fnsave
orb
movsb
xor
and
push
cwtl
data16
aam
mov
ss
dec
movsl
jecxz
repnz
loope
add
dec
jecxz
int
aam
mov
rorb
fisttps
or
cmp
je
out
push
ret
mov
mov
xlat
mov
xchg
xchg
int
add
push
out
add
pop
xor
icebp
add
mov
andl
mov
hlt
mov
dec
cmp
ret
clc
dec
or
outsb
xor
mov
mov
cs
or
adc
test
cmp
ljmp
lret
enter
gs
jl
sub
gs
nop
mov
jg
mov
cmpb
pushf
adc
and
adc
pop
mov
lahf
aaa
aas
jg
jbe
jbe
jecxz
pop
xor
popa
ljmp
sub
mov
push
mov
daa
jo
mov
pop
fldl
cmp
in
bnd
push
pop
outsb
lcall
iret
mov
icebp
movsb
data16
and
loopne
cli
dec
xorb
lods
test
jb
push
aaa
fnstsw
add
pop
into
jnp
aad
insl
and
mov
lahf
out
push
lahf
fldl
test
inc
pop
out
mov
xchg
push
test
mov
push
test
cmp
or
call
mov
lods
pop
shlb
shl
addr16
hlt
stos
mov
movsl
scas
push
push
mov
imul
fnsave
dec
mov
and
enter
pop
mov
sub
mov
pause
fimull
fistpl
sub
and
repz
rclb
test
clc
sbb
push
rcll
mov
and
sbb
lods
xor
sahf
jbe
mov
pop
sbb
pusha
sbb
xchg
leave
push
mov
jl
pop
lahf
mov
out
cli
mov
dec
ficoms
lds
xor
xor
cmpsb
test
and
and
dec
fnstsw
sub
add
pop
fisttpll
stos
cbtw
inc
sub
cmp
adc
xorps
lret
push
mov
cmpsb
adc
ljmp
sub
xchg
push
gs
mov
in
movsb
fwait
and
stos
subb
mov
mov
pop
dec
or
jle
or
xor
movsl
or
push
xor
mov
lcall
lods
jne
stos
rcrb
dec
cli
xchg
jl
gs
int3
hlt
enter
mov
hlt
aad
sti
stc
into
or
sub
addr16
mov
mov
enter
out
inc
sbb
add
incl
inc
xchg
pusha
xlat
aas
pop
je
xor
out
adc
out
xchg
cmp
pslld
out
in
jg
and
ficoml
xor
mov
xor
and
cli
pusha
push
enter
add
ja
xchg
sub
and
loope
mov
mov
mov
divl
sbb
imulb
cli
jns
add
sbb
pop
cmp
xchg
shll
nop
fldl
pop
pop
and
hlt
inc
mov
mov
popf
mov
cltd
shrb
push
imul
cmp
das
lds
push
and
in
in
xchg
cli
fdivl
jne
mov
lds
sar
mov
xchg
push
cltd
sub
pop
nop
adcl
pushf
xchg
rcl
leave
and
sub
dec
xor
out
fstpt
inc
xor
mov
imul
xor
aam
icebp
daa
mov
jg
shrb
mov
stos
pop
mov
pop
fbstp
push
sub
sbb
cmpsl
jp
loopne
pop
shlb
jnp
xchg
stos
daa
loopne
es
jp
push
cmp
icebp
push
dec
xor
loop
adc
fisttpl
mov
and
mov
out
aad
sbb
sub
mov
mov
lret
in
mov
ds
cmp
int
icebp
xlat
lods
faddl
test
test
xchg
aam
test
insl
xor
cs
sub
fldcw
and
repnz
mov
outsl
lret
fadd
jg
xchg
movsl
or
or
inc
cmp
and
test
mov
fidivrl
lret
and
nop
push
push
pop
sahf
je
std
in
inc
cmpsb
xorl
arpl
mov
push
dec
fcmovnb
and
fwait
adc
call
scas
pop
enter
dec
mov
mov
sub
adc
std
push
orl
push
push
cmp
std
and
fidivs
xor
jnp
stos
pop
xor
cli
repz
jge
mov
pop
cmp
movsl
nop
mov
mov
cli
push
mov
popa
cmp
loope
cmp
cmp
js
and
add
inc
pop
jno
out
movsl
shlb
movsl
ss
inc
sub
je
xor
push
repz
xor
xchg
ljmp
cmp
movsb
into
in
xor
inc
and
xor
enter
adc
addr16
arpl
mov
xchg
jl
fisubl
lock
dec
mov
mov
sbb
push
push
dec
fisubs
sub
xchg
xor
mov
nop
jge
cld
jne
jb
movsl
cmc
shrl
shrl
xchg
xor
sub
or
mov
pop
loope
lods
scas
lock
push
lret
adc
jbe
dec
lea
push
mov
pop
xchg
adc
pop
aad
test
es
idiv
and
out
push
stc
and
mov
lock
shl
jnp
out
test
es
xchg
mov
jne
or
mov
mov
fnsave
lea
add
push
insb
js
jns
xchg
xchg
inc
xor
mov
inc
scas
adcl
and
je
push
cmpsl
add
orb
cmp
jl
movsb
xor
iret
fwait
dec
cmp
cs
dec
mov
push
dec
cs
mov
aas
xor
es
ss
mov
mov
add
mov
pop
pop
cvtdq2ps
call
and
jmp
in
lea
arpl
jl
inc
lea
sbb
ret
lret
aas
jle
cld
or
and
pop
rcrl
jae
ficomps
sbbb
xchg
inc
mov
jns
jb
pushf
out
inc
xor
idiv
sbbb
add
divb
xchg
pusha
mov
jb
pop
sub
inc
aam
fnstsw
jg
aad
adc
clc
xor
sub
xchg
clc
add
adc
mov
lea
les
dec
out
aas
push
mov
sub
inc
push
xchg
repz
xlat
pop
nop
cwtl
pop
mov
or
stc
sbb
mov
icebp
lret
cmpsb
loopne
xlat
std
adc
xor
lods
push
arpl
fstl
dec
dec
dec
adc
adcb
hlt
cmc
pop
sub
lods
rcrb
dec
icebp
aaa
arpl
lcall
rcrl
fstps
loop
jg
ja
mov
mov
xlat
sub
out
fidivl
push
mov
in
dec
push
jecxz
cmpsl
lea
dec
adc
aam
shrl
loopne
or
stc
xchg
and
mov
ret
add
imul
pop
insb
mov
sbb
inc
mov
mull
push
call
nop
aam
mov
sub
inc
ss
pop
inc
jne
sub
sbb
ret
iret
adc
cmpsb
mov
lahf
mov
lods
outsb
mov
pop
lret
rorb
sub
inc
test
hlt
fstl
cli
mov
pop
sysexit
call
lcall
lods
arpl
repnz
imul
adc
and
int
setl
lds
cmp
xchg
xchg
cmpsb
xchg
psubsb
add
jb
push
enter
xchg
jge
pop
adc
mov
jp
jge
mov
sub
fs
xchg
lcall
das
sub
cli
inc
sbb
scas
add
adc
lds
xor
inc
fisttpll
popa
mov
imul
push
test
fwait
loop
push
sub
fldt
xchg
xchg
push
lods
pop
ficoml
mov
inc
minps
dec
adc
mov
aas
xchg
cmpsb
push
lret
ljmp
gs
jl
cmp
sub
dec
imul
jmp
xor
cltd
shufps
ss
pop
ucomiss
or
xchg
sub
add
setb
cmc
inc
cmpsb
pop
or
js
sbb
jb
xchg
outsb
scas
mov
adcl
icebp
out
adc
into
mov
aam
in
xchg
cmpsl
imul
xchg
mov
jle
mov
pusha
xchg
pop
js
pushf
movsb
xchg
or
ds
adc
xor
test
xor
mov
cs
or
pop
cmp
fisubl
nop
popf
or
mov
into
mov
in
repz
fnsave
fistpll
aas
push
insb
mov
jecxz
mov
sub
jmp
sub
gs
mov
sub
out
mov
add
lds
cltd
clc
dec
sbb
xchg
mov
sub
into
rol
les
lods
mov
push
and
jg
pop
imul
xchg
adc
shlb
popa
xchg
add
adc
push
pop
lods
iret
imul
cmp
loopne
xchg
out
testl
and
andl
and
inc
jge
jl
shll
push
sub
xchg
push
stos
in
xchg
push
dec
mov
dec
xor
out
pop
sarb
icebp
fs
fmuls
push
cmpsl
xor
sbb
cmpsb
add
icebp
stos
icebp
sub
cwtl
rorl
repz
aas
xor
ljmp
mov
sarl
mov
and
xchg
dec
lds
add
loopne
mov
les
add
cmp
pop
fistpl
or
in
xchg
push
xchg
not
mov
js
mov
lds
mov
rorl
jne
insl
mov
or
dec
test
inc
es
add
fs
sub
lret
push
fdivrs
push
sbb
mov
lret
dec
push
js
aam
flds
aad
fistpll
mov
cmp
popf
scas
xor
push
adc
add
adc
orb
push
xor
fildl
lea
and
pop
loopne
and
pop
movsb
divb
inc
cltd
sarb
push
sarb
jl
dec
jno
outsl
jnp
shlb
mov
push
jnp
nop
xor
push
sarb
je
fdiv
and
cmp
mov
arpl
fnstsw
push
xchg
dec
unpcklps
pop
jbe
out
dec
cld
outsl
roll
stc
sub
das
adc
shrl
aaa
or
add
aad
jle
pmulhw
xor
cmpsb
push
push
test
repz
jg
cmp
push
ljmp
push
mov
push
mov
daa
pop
adc
mov
not
out
adc
xchg
sbb
or
popf
sbb
pop
pop
add
pop
mov
stos
mov
loop
aam
out
test
xchg
xor
mov
lods
lds
lods
push
mov
rcll
mov
mov
dec
das
push
cmp
orl
les
fcom
sbb
and
outsl
adc
xchg
mov
mov
xor
sbb
js
push
aam
scas
js
insl
clc
std
jns
sbb
xor
mov
daa
pushf
es
hlt
xchg
mov
dec
int
and
movsl
push
testl
push
push
jno
repnz
js
and
rorl
loop
test
jno
pop
fstps
repz
scas
fsubs
ljmp
outsl
inc
es
daa
loopne
push
inc
ret
jo
popf
sbb
in
test
pusha
or
or
in
cmpb
mov
mov
cmp
pusha
jb
push
push
adc
xor
mov
bound
ret
outsb
scas
ffree
pop
ret
out
test
adc
test
dec
out
mov
xor
nop
or
mov
adc
in
sbbl
int3
jge
dec
mov
or
mov
xor
lock
int3
movsl
inc
mov
scas
and
decl
push
add
andb
dec
and
inc
sub
out
popw
fbld
insl
in
mov
add
sti
xchg
imul
cmpsl
addr16
cmpsl
mov
mov
out
addl
mov
adc
roll
or
repnz
lods
xchg
lock
mov
lock
sarb
sbb
in
leave
push
sub
jnp
xorl
add
inc
mov
jp
lahf
and
imulb
xlat
enter
xor
pop
test
arpl
test
adcb
dec
mov
lret
jae
add
inc
enter
addb
pop
aad
jl
dec
jg
test
sbb
mov
pop
ds
dec
push
mov
mov
stos
jne
push
add
sub
or
js
or
fstpt
movsl
fwait
or
lret
in
add
lock
hlt
mul
fnstenv
xchg
and
or
adc
dec
loop
out
fdivl
loopne
movl
and
mov
arpl
lea
data16
pop
rcl
inc
repnz
stos
pop
sub
ljmp
mov
iret
pusha
sbb
insl
dec
shrb
aam
pop
lret
xor
pop
and
mul
lcall
adcl
mov
jl
orl
fcompl
xor
sarb
imul
xor
mov
lock
loopne
movsb
call
dec
or
inc
mov
test
dec
rcrl
scas
sub
fwait
js
lock
mov
sub
cmp
inc
roll
mov
adc
jbe
sub
inc
cltd
clc
and
pop
mov
pop
insl
scas
pop
ret
push
mov
andb
mov
in
push
jo
jne
aad
sub
sbb
add
into
data16
push
mov
sbb
stc
mov
mov
fidivrl
loope
pop
je
enter
js
clc
pop
xchg
insb
test
inc
sbb
xor
pop
ret
lcall
pop
repz
pop
xor
xor
lret
mov
cmpsb
sarl
inc
js
inc
mov
cmp
aas
mov
rcll
mov
cmpsb
popa
adc
or
fwait
mov
mov
mov
push
divb
mov
mov
aad
lret
sti
in
clc
xchg
ficomps
mov
call
xchg
icebp
lds
imul
daa
dec
in
lock
mov
mov
adc
decl
xor
cmp
lahf
push
movb
xchg
test
cmc
sub
stos
ja
arpl
mov
insb
jmp
and
pslld
pop
sub
in
mov
out
dec
pusha
dec
mov
sbb
dec
push
and
mov
imul
xor
cld
push
xor
cmp
sbbl
xor
pop
adc
hlt
out
fadd
adc
inc
lcall
in
push
dec
sbb
mov
imul
and
push
inc
into
pop
xor
rorb
add
sbb
inc
xchg
push
and
mov
adc
imul
call
push
test
dec
push
pop
lock
mov
sub
cmp
lods
add
enter
push
iret
xor
mov
dec
fdivl
cmp
jb
out
adc
push
cwtl
roll
pushf
ret
shrb
and
push
push
pushf
mov
cli
fsub
push
leave
daa
out
mov
stos
enter
loope
ficoml
adc
enter
push
andl
out
cmpsb
adcl
int
cs
in
adc
mov
xor
push
jl
call
vcmppd
sbb
int
mov
in
jns
mov
mov
xchg
testb
add
inc
mov
inc
stc
pop
jl
adc
sub
imul
adc
jecxz
mov
pop
imul
cmp
lods
ret
xor
fiadds
pop
jbe
subl
leave
cltd
pop
add
imul
mov
pop
scas
orl
pop
in
fmuls
pop
sub
lret
mov
stc
das
inc
int
pop
outsb
fistpl
outsb
insb
xchg
clc
xor
leave
loop
leave
push
fcompl
adc
xor
cs
jbe
xchg
mov
sub
jmp
lahf
xor
clc
and
out
mov
test
mov
adc
and
pop
aad
sbb
loopne
xchg
push
cmp
dec
mov
jecxz
sub
jecxz
scas
in
add
popa
pop
xor
xor
lcall
cmpsb
dec
ret
inc
fiaddl
scas
les
add
or
mov
sbb
loope
out
ret
test
je
inc
adc
mov
mov
scas
dec
jecxz
gs
addr16
mov
adc
push
addr16
and
aaa
stos
out
mov
loopne
daa
sbb
push
inc
popa
mulb
and
xchg
test
dec
cld
addr16
jo
mov
fisttpll
pop
jl
std
push
xchg
lock
arpl
roll
inc
test
xchg
nop
loop
add
daa
sub
push
lods
mov
fildl
or
outsl
loopne
add
repz
jle
xchg
movsl
outsl
xor
cltd
inc
pop
push
imul
stc
sub
push
inc
jmp
adc
out
xchg
xchg
sbb
frstor
push
jl
adc
push
lods
xor
push
or
out
loop
jnp
insl
lcall
in
in
mov
push
and
in
aas
pop
inc
xchg
cmp
sub
sbb
pop
ss
sbb
inc
sub
inc
fsubrp
adc
subb
fcompl
sbb
out
xchg
add
mov
mov
xchg
sar
roll
dec
shlb
fs
xor
pushf
mov
pop
data16
cs
in
in
aas
jl
push
sbb
js
out
xchg
cmc
dec
xor
arpl
das
jle
idiv
test
lds
inc
sarl
aam
jmp
repz
aas
adc
pushf
pop
sti
add
jmp
mov
pop
jo
scas
xor
sub
cmp
lret
fxch
push
jne
subl
arpl
loop
loope
movsl
aas
shlb
fcmovbe
xor
cmp
into
xchg
xlat
push
js
js
push
mov
cmp
sbb
sbb
cli
insb
cmpsl
cld
pop
push
sahf
add
and
and
out
add
subl
add
adc
xor
stc
lcall
ret
stc
hlt
adc
inc
or
sarb
pop
or
js
pop
fistpl
leave
mov
xchg
jp
loopne
data16
mov
sub
mov
xor
jo
xor
aas
fdivrs
mov
loopne
dec
aad
jg
in
xor
out
add
in
mov
int
pop
and
call
mov
mov
pushf
fbstp
xor
mov
cmp
hlt
push
rcrl
shl
mov
and
mov
push
lods
cmpsl
push
lods
out
jp
insl
lcall
hlt
jnp
push
fidivrs
add
dec
jg
test
in
hlt
scas
sub
into
and
inc
mov
sub
mov
pop
ficompl
je
mov
in
lods
out
mov
cmp
pop
dec
inc
xchg
mov
jns
popf
jge
mull
mov
and
push
lds
push
rcrl
scas
add
pop
dec
push
inc
dec
cmpsl
fdivs
sbb
fwait
pop
data16
jle
adc
inc
pop
lods
add
filds
lods
insl
cmp
cmpsl
sub
ljmp
or
iret
stos
sbb
and
insl
push
xchg
xchg
notb
cmp
mov
push
ret
add
sarb
or
xchg
dec
jge
mov
adc
adc
inc
xor
call
or
add
addl
dec
jns
ljmp
jp
sbb
add
movsb
filds
imul
jb
data16
xor
adc
mov
dec
xchg
flds
mov
ljmp
xor
jge
lcall
dec
outsb
cmpsb
shll
push
add
movsb
addr16
les
push
mov
stos
mov
div
jbe
add
repnz
sti
add
adc
daa
jbe
cmpsb
adcl
jmp
sub
arpl
int
xchg
pop
push
in
adc
jns
add
jmp
inc
ss
add
or
nop
jno
divl
push
push
bound
or
add
xor
sub
xor
mov
pop
xor
out
mov
in
jnp
into
cmpsl
mov
sub
inc
mov
mov
adc
sub
pop
loop
sub
pop
mov
jecxz
cmp
in
jp
jmp
pop
xor
mov
pop
test
lock
dec
lock
in
in
ret
cwtl
xchg
pop
xor
cltd
mov
or
mov
pop
xor
outsl
inc
popa
dec
push
sub
lds
je
decb
adc
je
int3
mov
loope
mov
insl
or
popa
insb
mov
mov
inc
jno
mov
shrb
pop
xchg
insl
or
andb
fidivs
dec
xchg
movsl
pushl
xor
imul
fs
jl
sbb
or
xor
mov
mov
scas
xchg
popa
daa
xchg
mov
cld
adc
ret
or
jne
jae
or
add
hlt
jae
fstps
mov
test
subl
cmp
cmp
lret
and
js
pop
adc
and
mov
sbb
push
jae
pop
dec
incl
cmc
aaa
and
mov
std
lahf
iret
mov
fsub
lret
mov
scas
int3
iret
cmc
jge
or
push
xchg
stos
orb
rorb
lcall
es
iret
hlt
test
outsl
into
jp
xchg
ljmp
std
je
aaa
shll
sahf
inc
stc
icebp
xchg
fsubrp
icebp
cmp
cmp
into
movsb
cmp
cmp
push
test
inc
inc
leave
xchg
cli
dec
mov
lea
in
push
fidivs
mov
jbe
int
cmpsl
into
addl
shl
pop
add
or
sub
movsb
ja
nop
clc
in
add
mov
add
shlb
add
xchg
shlb
stos
xor
insl
fisttpll
sub
fcomp
lods
dec
xchg
out
cmp
pop
mov
insb
jno
xor
cmpsb
push
inc
push
mov
jg
jns
inc
add
push
jge
adc
xlat
scas
sbb
dec
out
and
scas
out
xor
cltd
aam
adc
xchg
hlt
enter
es
inc
xchg
adc
pop
jns
xchg
pop
int3
mov
mov
mov
movsl
pop
mov
ret
in
or
jl
out
xchg
push
or
xchg
aam
scas
mov
push
cltd
ljmp
or
pop
scas
aas
out
fcmovnu
cs
pop
jl
inc
pusha
sub
cmpl
jmp
inc
adc
cmp
adc
inc
ds
sub
ja
in
push
push
lock
fisubrl
xor
or
pop
or
pop
cmp
addr16
xchg
call
fstl
sub
sbb
movsb
push
pop
or
pop
and
mov
addr16
and
loopne
insb
fistl
jne
pop
adc
out
mov
xchg
cmpsl
ss
adc
ret
or
and
adc
std
bound
mov
sub
cmp
or
stos
out
pop
out
ret
mov
movsb
jmp
fdivrl
pop
jb
fbstp
jle
mov
add
fs
ja
or
inc
push
lcall
xor
lret
insb
aas
ljmp
pop
xor
sub
or
dec
fstl
add
jl
aaa
xchg
mov
loop
mov
mov
push
sub
inc
mov
and
jae
pop
sahf
mov
cmp
dec
aam
rorb
dec
add
lcall
mov
mov
fwait
push
dec
mov
mov
inc
push
les
lahf
mov
inc
jbe
add
xlat
and
ljmp
mov
jle
inc
ja
in
sub
dec
cmc
add
ds
and
test
inc
sarl
negb
add
push
aaa
popf
iret
push
pop
mov
mov
jb
fldl
sbb
bound
jmp
sbb
xor
negb
scas
loope
scas
cmp
mov
cmp
mov
loopne
adc
jbe
sbb
xlat
xchg
mov
ljmp
stos
les
jge
xor
pop
fistpl
xchg
add
es
pop
push
push
movsbl
test
ljmp
dec
and
ss
push
add
stos
adc
clc
dec
xor
jl
loopne
pop
negb
outsb
inc
mov
cmp
cmpsb
cld
cwtl
movsl
inc
bound
scas
movsb
int3
arpl
push
push
jecxz
cmp
mov
std
sub
je
scas
inc
loopne
xor
jb
out
sti
push
bound
add
into
repz
pusha
xchg
or
stc
add
into
sahf
pusha
mov
icebp
or
adc
popa
cli
xor
orb
pop
jl
shll
push
jae
icebp
mov
das
cmc
jae
idivl
fimull
loope,pt
jp
inc
sti
xor
imull
rcrb
mov
outsl
add
and
stos
xlat
mov
cmpsb
in
xchg
fstenv
jns,pt
ja
es
xchg
and
or
test
mov
in
js
shll
mov
cmc
pop
push
clc
movsl
inc
adcb
mov
adc
cmp
push
push
imul
in
mov
imul
int3
mov
addr16
mov
test
add
cmpsb
repnz
ja
fdivrp
rorb
push
mov
clc
mov
pushf
mov
mov
add
push
lcall
mov
sub
sbb
mov
sub
in
es
ror
js
inc
jno
inc
adc
addr16
adc
out
test
adc
mov
xchg
xor
test
nop
lods
call
out
fadds
cmc
jl
das
inc
inc
fimuls
stos
testl
nop
xchg
adc
gs
xchg
in
popf
mov
fs
dec
inc
pop
sbb
ret
fcmove
loopne
nop
jg
lahf
fildll
test
sub
add
push
cmpsl
mov
pop
pop
sbb
fucom
mov
jbe
mov
in
mov
push
cmp
dec
andb
inc
aaa
inc
shl
jb
dec
test
mov
or
pop
cmpsl
ret
sub
and
out
add
cmpl
pop
add
sbb
xor
insl
pop
cmp
ret
out
cmp
dec
lret
insl
pop
ja
pop
mov
dec
push
test
mov
js
mov
fidivs
lret
daa
xchg
pusha
and
jns
mov
in
jbe
sbb
pop
cmp
ja
jnp
mov
or
fidivrs
movsb
ljmp
cmp
mov
mov
test
inc
adc
sbb
adc
dec
ljmp
rcll
daa
xor
push
mov
dec
mov
aas
inc
xchg
cmp
pop
pushf
add
out
mov
imul
insb
mov
loop
fistl
fldl2e
movsl
dec
mov
adc
das
pop
daa
dec
data16
push
jmp
sub
inc
push
cmp
std
jbe
xlat
lahf
jb
movsl
rcl
mov
jge
sub
cmp
add
and
out
test
arpl
imul
pop
mov
pop
dec
ret
pop
call
jns
add
push
lahf
pextrw
mov
pushf
push
adc
sub
adc
mov
xlat
push
aas
mov
push
loope
xchg
sub
cmp
pop
add
jb
adc
xor
sbbb
mov
inc
nop
in
cmp
add
iret
mov
push
int3
iret
test
out
push
pop
push
cmp
pop
sub
push
mov
lahf
roll
jg
ja
call
dec
inc
dec
mov
xor
adc
dec
push
cmp
fisttpl
xchg
xor
outsb
push
mov
icebp
in
mov
mov
mov
lea
or
enter
insl
repz
lock
stos
sub
sbbl
and
adc
and
in
or
sub
adc
scas
shrd
push
sbb
stos
in
push
pop
leave
pop
push
pop
ret
imulb
push
outsb
rcrb
mov
sbb
jne
xor
je
subb
lahf
adc
pop
enter
scas
adc
and
in
int3
add
jo
out
xor
outsb
decl
mov
xor
icebp
dec
cmp
jle
xchg
jge
cwtl
and
jne
sbb
cmpsb
insb
sub
das
mov
cmp
sbb
jns
mov
mov
mov
int
xchg
icebp
subl
shrb
adc
pop
push
sub
scas
add
in
into
sbb
std
mov
andb
pop
push
shll
ret
add
cmpsl
lret
cmp
fistps
shlb
es
inc
icebp
inc
andb
scas
pop
push
aam
jl
movsb
outsl
jnp
jbe
shll
leave
jo
pusha
insb
lret
lock
xor
jle
xchg
std
aaa
add
pop
inc
xchg
imul
js
icebp
lcall
les
xchg
cltd
jno
mov
or
orl
inc
fsubr
and
dec
xchg
xor
dec
mov
outsl
in
je
test
mov
mov
jno
xchg
outsl
in
lock
add
mov
push
sbb
gs
dec
pushf
insb
adc
pop
mov
push
jo
dec
sbb
dec
jge
pop
das
arpl
ret
xchg
sbb
xchg
mov
out
ljmp
cli
popa
push
pop
push
popl
aam
push
nop
and
mov
sarb
push
dec
sub
jns
adc
and
dec
inc
fmul
and
cmp
pushf
cmp
mov
xchg
in
inc
sahf
jl
dec
cli
std
in
mov
mov
mov
xchg
mov
mov
inc
adc
in
jmp
mov
sbb
cmp
jne
pusha
out
pop
and
push
xchg
xchg
pop
cld
imul
int3
ljmp
xor
or
shll
cmp
pusha
pop
loop
out
aas
pop
jno
js
stc
fs
cltd
add
fwait
mov
cltd
cld
loopne,pn
psrld
and
add
xor
sbb
insb
lds
adc
sti
daa
jecxz
push
loop
mov
in
pop
pusha
in
outsb
jb
adc
mov
leave
inc
mov
cmc
aas
or
sbb
sbb
mov
or
sbb
aad
sbb
lods
mov
aam
jle
pop
dec
test
jae
lock
dec
mov
aas
call
add
mov
adc
lea
lea
mov
inc
dec
daa
pop
fldt
jmp
pop
pop
pop
cld
push
clc
pop
decl
rcrb
cmp
pop
adc
jge
mov
push
adc
xchg
sub
cli
cld
inc
or
mov
inc
in
mov
pop
adc
leave
test
mov
in
jo
wbinvd
mov
ficoml
mov
push
dec
push
pop
int3
imul
gs
lret
in
cmp
sbb
or
push
dec
jns
imul
dec
add
negb
jl
ljmp
jno
mov
push
hlt
scas
dec
loopne
pop
fsubrs
jb
sbb
dec
nop
shlb
cld
dec
inc
outsl
outsb
outsb
mov
sbb
push
int
stos
mov
scas
and
sbb
and
cwtl
lea
icebp
lcall
xor
or
cwtl
push
dec
mov
cmp
xlat
sbb
in
and
fs
push
mov
push
test
and
xchg
mov
jb
clc
test
ja
inc
fmul
fisubl
out
ret
notl
jno
push
push
aam
icebp
mull
insl
arpl
sbb
ret
shll
pop
hlt
add
cmp
and
xchg
xchg
sub
test
jo
shll
adc
push
mov
lea
daa
add
sahf
xorb
cmp
mov
int3
fsubr
or
xlat
fidivl
mov
pop
add
stos
hlt
or
add
and
addb
pop
or
fnsave
ret
fnsave
mov
mov
pop
cmpl
mov
mov
rorl
mov
movsb
xlat
sub
loopne
sbb
loope
cltd
hlt
ret
lcall
push
inc
cli
jle
rcrb
mov
lods
push
and
xor
mov
arpl
add
jle
nop
dec
jnp
int3
xor
push
jg
push
rol
mov
in
dec
lds
lds
cmpsl
jbe
mov
lock
xor
push
inc
jno
and
push
jp
nop
ror
pop
scas
es
add
in
xor
pop
sarb
insb
jecxz
loopne
mov
insl
mov
xchg
imull
test
les
ja
mov
and
add
mov
stc
add
lret
cmp
lock
adc
cli
outsl
dec
je
push
push
mov
lods
mov
pop
insl
sub
pop
cmp
xchg
call
ss
or
xchg
outsb
mov
xor
loope
cli
mov
je
mov
cmp
subl
arpl
repz
stos
and
loopne
xchg
cmpsb
cmpsb
push
fisubrl
into
fsts
push
inc
addr16
mov
inc
pop
add
sti
insb
xchg
rolb
out
ss
sbb
cmc
xchg
xchg
rcrl
lret
mov
lret
unpcklps
cs
insb
cld
sahf
popa
dec
cmp
icebp
test
mov
and
lret
and
iret
fwait
imul
mov
xchg
mov
in
jle
pop
mov
xchg
mov
add
jle
cmp
cmp
dec
jbe
cltd
push
jp
cmc
movsl
dec
das
ljmp
xchg
imul
cmp
popa
sbb
out
shrl
add
fidivrs
adc
cwtl
sub
aaa
bound
test
scas
and
int
sbb
mov
sbb
push
shll
pop
lds
xor
push
cmp
jae
sbb
gs
inc
hlt
adc
inc
cltd
xchg
pop
mov
lods
cmp
ja
arpl
mov
inc
push
sub
cwtl
jae
bound
and
pushf
push
pusha
lahf
insb
cwtl
js
ja
or
mov
push
iret
rorl
lods
insl
or
shl
pop
enter
out
mov
pop
push
sub
adc
stos
lret
adc
push
mov
sarl
testl
mov
inc
xor
add
inc
adc
int3
lahf
out
lret
dec
dec
les
lea
dec
sub
jns
shll
fsubrs
out
arpl
add
cmp
and
xchg
loope
and
imul
ret
icebp
cwtl
push
push
ret
sar
movsl
shll
pusha
cmp
loop
stc
scas
pop
push
mov
ljmp
out
pop
or
jb
mov
or
fs
xchg
nop
mov
pop
xor
xchg
popf
jle
mov
sbb
xor
dec
rcrl
nop
mov
jge
sub
loope
or
mov
inc
sub
icebp
cmp
lock
pushf
sarb
push
xchg
in
sub
cmp
cmp
decl
mov
cltd
out
mov
cli
add
and
xor
or
gs
push
arpl
out
mov
lock
inc
aas
mov
mov
jg
test
mov
cld
incb
sub
popf
and
pop
xor
pop
pop
cld
pop
mov
mov
mull
sarb
sub
xchg
aaa
into
xlat
add
mov
xor
pop
dec
lahf
push
cli
inc
push
mov
lds
jl
pushf
sub
out
into
add
adc
xor
lock
or
pop
cmpsl
xchg
inc
stos
loopne
xchg
xchg
sbb
fnsaves
push
mov
xlat
pop
ret
stos
sbb
pop
and
jo
and
jg
pop
cmp
adc
xor
add
stos
push
inc
lahf
in
lods
adc
int
fstp
mov
aas
sbb
or
or
mov
std
aas
enter
cmpsl
adc
mov
popf
push
scas
mov
mov
pop
int
enter
ret
testb
push
sarl
repnz
xor
xchg
jb
cmpsl
add
cwtl
lret
nop
jbe
push
mul
add
adc
or
movsl
fcompl
dec
dec
lock
les
xor
push
aam
and
inc
mov
pop
insl
daa
dec
mov
and
lcall
psubb
test
sbb
mov
or
in
mov
jp
das
nop
ret
inc
pop
mov
or
dec
and
loope
xchg
fidivrl
mov
mov
je
push
dec
mov
shlb
xlat
int3
xchg
sub
std
imul
arpl
clc
cs
jmp
ret
jb
ds
mov
dec
push
push
inc
loope
aas
mov
mov
mov
and
mov
in
jp
sub
in
dec
dec
fidivs
xchg
cld
les
and
or
add
mov
js
jnp
mov
mov
iret
data16
or
pop
mov
out
pop
jle
cltd
popf
adc
jge
mov
push
pop
dec
rcrb
push
out
and
jnp
shll
fisttps
dec
jge
mov
dec
rcl
push
and
adc
rcrb
int
xor
cmc
mov
mov
shlb
aaa
xchg
gs
cmp
cmp
jecxz
je
xor
xchg
jne
ljmp
sbb
cmp
mov
pop
adc
out
je
sub
clc
adc
cmp
mov
and
inc
cwtl
ja
aam
aad
xor
aad
faddl
popf
addl
je
mov
push
pop
cmp
mov
mov
popf
int3
push
ficompl
hlt
xchg
scas
push
fwait
stos
aas
adc
shlb
dec
push
pushl
test
rorl
push
cmp
xchg
cmp
pop
scas
icebp
cmp
adc
jae
scas
xchg
js
jbe
pop
sub
xor
cli
aas
ja
mov
add
mov
shlb
stos
and
test
int
shl
and
std
xchg
sbb
stc
out
cmp
pop
sbb
in
test
jmp
pop
in
xchg
cmp
stos
and
mov
leave
xchg
mov
adc
sub
outsb
nop
xor
pop
inc
xchg
jl
test
ljmp
fnstcw
hlt
lods
cmp
pop
sub
mov
cltd
lahf
fistps
xchg
mov
sub
jg
outsb
nop
pop
and
xor
mov
push
inc
shll
pop
mov
pop
mov
lea
push
jg
stc
out
ret
push
mov
es
xchg
mov
fsub
adc
sbb
ja
and
xor
mov
add
jbe
ret
int3
jl
sbb
aad
js
js
mov
lods
mov
pusha
es
cmp
mov
std
mov
in
adc
stos
xchg
sub
mov
mov
add
js
out
stos
jbe
hlt
pusha
jecxz
jp
aam
push
mov
cmp
dec
testb
nop
repnz
arpl
pop
shlb
divb
mov
lods
insl
movsb
js
push
in
stc
es
in
fildll
xchg
sbb
repz
sub
push
aam
rcrb
sub
or
movsl
mov
pop
mov
dec
add
cwtl
xor
sub
icebp
cltd
sub
add
stos
add
xchg
loope
jne
or
pop
repz
daa
mov
jmp
ret
rcll
out
call
xor
sub
and
fcomp
sbb
stos
mov
imulb
xor
fnstsw
lods
push
jns
les
iret
sti
out
jne
mov
dec
jnp
jbe
mov
mov
inc
cmp
xchg
outsb
lods
dec
xchg
jmp
pop
jne
fistpll
out
int
test
mov
repz
and
rorb
in
push
inc
stos
or
addr16
jne
pop
ss
sub
out
mulps
mov
mov
es
push
pop
lret
cltd
sar
xor
ljmp
sbb
cmc
lds
xor
out
lods
cld
mov
mov
mov
sub
mov
stos
cmp
movsl
cli
push
xlat
xchg
mov
push
sub
mov
loopne
mov
cwtl
adc
jecxz
mov
sbb
icebp
and
fnstcw
pop
inc
test
pop
inc
pop
sbbl
pusha
lock
test
jmp
ror
dec
movsb
push
js
cmp
add
mov
lret
movsl
sbb
out
arpl
dec
adc
jmp
sbb
xchg
sahf
dec
push
xchg
mov
outsl
mov
stos
sub
enter
inc
fcoms
int
jbe
pop
sub
jb
outsl
shlb
xchg
or
inc
idivl
mov
loop
cmp
aas
jl
rclb
and
lods
add
jbe
ljmp
mov
ret
imul
pop
jg
orb
test
lret
popa
out
jno
jo
pop
dec
pop
mov
rorb
cmpsb
sub
pop
and
mov
cli
call
ret
inc
inc
push
jp
fadds
dec
addr16
pusha
insb
jb
sub
subb
popf
pop
xchg
pop
jmp
test
mov
in
aad
push
fimuls
hlt
mov
push
mov
add
shll
mov
mov
jne
sti
mov
rclb
and
movsl
mov
xlat
cmp
pop
movsb
pop
sbb
pushf
jmp
pop
arpl
push
jp
add
icebp
adc
outsb
shrl
js
imul
push
fwait
cmpsb
repz
pop
or
add
xlat
and
push
adc
adc
mov
pop
xchg
mov
sub
lahf
cs
push
mov
fsubrs
add
sub
into
icebp
mov
and
loopne
aaa
rcll
aas
pusha
test
pop
test
push
jp
sahf
pop
out
adc
sbb
cld
cmp
je
bound
jmp
mov
pusha
add
cs
call
rcl
mov
sti
or
xchg
sub
lods
lods
dec
mov
push
sarl
mov
je
or
mov
pop
pop
les
mov
addr16
sub
jge
fdivp
pop
enter
out
xor
cld
loopne
mov
decb
in
push
mov
testb
mov
shrb
stos
mov
out
pop
sahf
dec
sahf
popl
jecxz
cmp
cs
xchg
je
push
xor
je
lea
cmp
fsubl
push
stos
xchg
jno
cmpsb
icebp
jl
test
pop
test
cmp
sti
sbb
sbb
xlat
adc
inc
adc
movsl
xor
ljmp
inc
mov
mov
jge
lods
mov
fisubs
mov
or
push
push
dec
imul
scas
insb
dec
pop
loop
xor
movsb
push
or
mov
scas
jo
push
push
cwtl
mov
cmp
movsl
pop
ret
neg
clc
jbe
xor
repnz
push
out
stos
stc
push
sub
in
nop
imul
mov
hlt
sti
adc
adcl
lcall
arpl
inc
mov
popf
push
push
nop
gs
icebp
jl
ja
mov
or
xor
fidivs
lods
jno
mov
fbld
outsl
cmpsl
cmp
fldl
xorb
push
movsl
or
mov
jl
test
dec
test
fnstcw
xlat
in
testb
mov
sbb
dec
mov
sbb
call
inc
popl
pop
jo
idiv
sbb
cs
add
stos
cld
insl
pop
rorb
loop
push
div
imul
loope
inc
jmp
daa
data16
adc
movsb
jp
push
andl
xorb
lret
aad
xchg
ja
jo
gs
mov
inc
fldz
mov
jae
mov
cs
sarl
jae
jecxz
mov
sbb
jecxz
out
pusha
int
icebp
xchg
mov
bound
sbb
xchg
dec
pop
sub
inc
leave
es
xor
lds
pop
fisttpl
push
xchg
and
dec
cmp
nop
pop
pushf
inc
rorl
rcl
dec
cwtl
inc
das
push
sbb
mov
mov
mov
mov
popf
stos
dec
das
cmp
sbb
lret
std
rcrb
loope
pop
inc
add
pop
imull
inc
dec
xlat
sbb
xchg
imul
push
sub
adc
pop
js
adc
xorps
es
add
push
mov
enter
imul
popf
mov
push
mov
insb
pop
inc
sahf
dec
or
sbb
mov
insb
xchg
inc
pop
loope
out
pop
sarl
icebp
jmp
fcomps
cmpsl
inc
mov
nop
test
out
mov
jb
pop
popa
fsubp
inc
xchg
sub
dec
js
pop
sub
and
mov
leave
mov
lret
fadds
push
fsubrl
rorb
outsb
divb
jbe
push
add
push
mov
mov
scas
cmp
in
adc
xor
or
sbb
sub
inc
in
sbb
mov
jnp
jbe
test
mov
in
enter
ficoml
push
call
inc
shrl
inc
pop
fadd
fdivrs
rcrb
int3
pop
dec
test
std
aam
cmpsb
cmp
xorl
pop
or
mov
rcrl
cmp
sub
xchg
push
mov
aaa
ss
cmc
xor
push
std
lods
into
sahf
sbb
dec
out
jno
cld
fwait
mov
jge
int3
cmp
fwait
mov
test
and
mov
and
in
jns
fsubrs
scas
pop
test
pop
aam
add
sbb
xchg
aas
nop
and
pop
ja
insl
push
shl
fildl
mov
mov
rcr
jle
fsubrs
xchg
mov
dec
jg
aas
xchg
add
fisubrs
push
mov
xchg
stc
add
jb
sub
adc
pop
repz
sub
shrl
cmpsb
sbb
add
movsl
adc
dec
mov
into
mov
testb
outsb
dec
mov
dec
pushf
dec
inc
daa
adc
inc
mov
lcall
add
cmp
lea
add
stc
movsl
aaa
pop
dec
js
cld
xor
nop
and
dec
rcl
addr16
and
jecxz
mov
pop
fidivrs
fisttpl
dec
daa
xchg
mov
sub
cmp
testl
popf
lahf
fs
imull
les
mov
dec
push
repz
lcall
fstpl
mov
dec
insl
add
je
jbe
adc
xchg
lcall
test
int3
push
movsb
pushf
mov
adc
fcmovnbe
push
cmp
cmp
rorl
cmpsl
ret
mov
cmp
cmp
pop
cmpsb
mov
sti
push
xlat
fsub
jle
jnp
pop
cwtl
into
dec
pop
or
js
dec
je
xchg
rcr
add
and
aam
or
ja
je
lods
and
inc
xor
jb
rcll
sbb
outsl
mov
sub
jne
push
push
in
std
add
push
ja
mov
loop
repnz
movsl
cltd
cmp
fs
dec
cmp
insb
pop
cmp
add
cmp
sarb
xor
adc
jno
jl
push
xchg
addr16
mov
jnp
sbb
out
add
inc
push
mov
dec
xchg
icebp
xchg
lods
pusha
dec
adc
fimull
insl
in
pop
sbb
lret
pop
mov
mov
inc
cwtl
sbb
int
pop
ds
fs
sti
cld
ss
push
pop
fldt
pushl
out
push
mov
roll
aaa
adc
cli
out
xchg
popf
into
pop
mov
dec
mov
pop
out
cmp
mov
xchg
inc
cmp
fistl
test
cld
jns
cmp
fwait
push
in
cmp
js
push
mov
pop
mov
out
cltd
inc
in
push
out
imul
xchg
rcrl
mov
fcmovu
and
notb
jle
mov
dec
add
xchg
outsl
jno
loop
xor
mov
lahf
data16
call
mov
movsl
imul
ja
into
in
pop
loopne
mov
pop
sub
push
test
sbb
filds
dec
js
xor
xchg
push
lret
xchg
cmpb
ja
fldenv
xlat
mov
mov
push
xorb
adc
fdivrl
jnp
inc
cmp
pusha
fildl
pop
jecxz
adc
jne
dec
es
and
nop
push
xchg
enter
scas
jb
movsl
pushf
jle
mov
std
fidivl
imul
mov
movaps
idivl
stos
push
lret
repnz
push
arpl
in
bound
movsb
xchg
test
add
int3
das
mov
mov
mov
int3
mov
push
add
push
in
lock
inc
dec
repz
mov
xchg
sub
sbb
fdivrs
orl
out
scas
fnstcw
int
lock
in
cwtl
cld
mov
sbb
js
sub
sahf
add
outsl
int
or
add
scas
jno
fidivl
aam
or
rcrl
inc
stos
rcll
or
les
mov
cli
fcmovbe
sbb
cmp
mov
test
out
sub
jo
adc
les
arpl
sub
sub
test
cmp
inc
cmpsl
sbb
aam
and
pop
mov
adc
hlt
fwait
outsb
lock
push
aaa
loop
jp
hlt
sti
call
add
hlt
shl
test
outsb
and
rcl
sbb
scas
mov
in
mov
nop
insl
push
cs
cmpsb
or
mov
xlat
mov
or
arpl
data16
xchg
aam
adc
int3
fstpl
jno
rclb
mov
or
ja
sbb
xchg
dec
xor
mov
mov
addr16
and
es
cmpsb
repnz
popa
cli
fs
cli
insl
sbb
scas
xor
out
add
aam
inc
insb
xchg
dec
sarb
and
and
nop
icebp
sub
inc
in
or
push
and
vpavgw
add
lea
shlb
sbb
jmp
icebp
and
mov
ss
cmpsb
jmp
iret
mov
mov
adc
mov
pop
aas
aad
icebp
adc
je
enter
pop
or
jo
movsb
push
fstpt
push
sbb
std
jp
push
call
aaa
in
jg
mov
sar
and
outsb
out
cmp
decb
adc
fucomip
aad
sub
mov
xchg
dec
ret
pusha
cwtl
adc
push
mov
mov
xchg
jecxz
loopne
fdivrs
fnstenv
sbb
jp
pusha
pop
sti
sbbb
adcb
or
xchg
outsl
leave
xchg
lock
mov
test
mov
fidivrs
pop
sub
scas
outsl
rorb
mov
mov
xor
adc
test
sbb
data16
or
pop
imul
pop
xchg
sub
pop
mov
sti
imul
dec
xchg
jmp
roll
ljmp
in
repz
pop
test
lock
popa
xchg
mov
adc
jae
int3
adc
mov
enter
sub
jnp
rol
test
mov
push
sub
xchg
testl
daa
arpl
xchg
std
insb
mov
and
or
call
and
daa
mov
inc
in
sub
sbb
in
xchg
sub
xchg
or
push
inc
or
cwtl
sahf
sti
add
aaa
lret
es
inc
inc
add
lret
adc
hlt
xor
sbb
pop
dec
pop
mov
fimuls
aas
ficoml
mov
ljmp
shrl
jnp
mov
out
pop
add
mov
dec
lret
adc
mov
test
sbb
and
lods
mov
leave
sub
das
fcoml
push
je
inc
std
clc
push
loope
sub
fs
or
imul
sub
iret
push
js
movsb
dec
fdiv
xor
jge
mov
jb
ss
lods
push
cltd
in
fwait
cwtl
jg
push
into
iret
inc
xchg
enter
or
jmp
daa
nop
dec
cltd
sbb
xchg
in
lret
out
mov
add
mov
xchg
cld
scas
fwait
pop
aaa
xchg
insb
fnstcw
cmpsl
test
jecxz
nop
int
out
testl
addr16
fwait
aad
incb
out
rcrl
sbb
xor
push
push
mov
jae
jns
xchg
fdivrl
lods
sub
repnz
pop
imul
mov
jo
mov
std
inc
orl
add
addb
filds
pop
mov
aas
jbe
lcall
cmovl
lds
jp
mov
add
ja
lea
cmc
mov
mov
sbb
addr16
cwtl
int3
xchg
cmp
fisubl
mov
loopne
ljmp
inc
popf
push
pop
xor
mov
ja
xor
cmp
push
push
sub
pop
adc
gs
lods
pop
push
testl
bound
xchg
fists
jbe
dec
sbb
adc
and
pop
cmpsb
in
out
shrb
jmp
jle
fwait
push
inc
psubsb
fldenv
arpl
and
sub
and
scas
das
cmp
mov
adc
lret
xchg
cld
dec
mov
mov
fcmovnu
int3
lods
rcl
fisubrs
repz
icebp
frstor
or
sahf
enter
test
fs
pusha
xchg
dec
mov
outsl
cltd
dec
arpl
lahf
dec
out
fs
add
gs
in
or
cld
jne
mov
cmp
xchg
es
scas
mov
jl
imul
ss
xlat
call
dec
lret
sbb
mov
gs
pop
rcrl
pop
sub
jp
call
cmp
pop
cli
arpl
sahf
add
fwait
adc
imul
rclb
mov
and
xchg
orl
shlb
xchg
dec
iret
fprem1
sbb
or
out
inc
repnz
jmp
pop
das
popf
fsts
pop
mov
cmp
dec
or
dec
jg
mov
inc
ror
push
cmpsl
js
pop
rolb
mov
pop
fs
push
stos
mulb
dec
push
ljmp
je
nop
scas
sbb
jnp
push
mov
cli
aas
mov
imul
xor
jno
inc
arpl
or
mov
push
jo
cmp
jno
adc
jge
testb
mov
adc
lods
into
pop
and
filds
push
jle
push
mov
fisttpll
leave
movl
int
sub
sub
sbb
inc
xlat
add
xchg
dec
xor
popf
sub
or
ss
cli
sub
fs
push
in
stos
xchg
test
pusha
fisubl
xor
sub
leave
std
sbb
inc
fsubl
iret
dec
xchg
arpl
outsl
mov
subb
leave
test
push
ret
call
lret
push
xor
into
push
dec
lea
mov
xchg
or
aas
fstpt
xlat
jmp
cmp
xor
mov
pop
push
lods
mov
loope
je
pop
xor
push
fs
inc
orl
sbb
sub
mov
or
add
fdivl
add
test
enter
jg
inc
fdivrs
push
and
sti
out
fadd
loopne
mov
xlat
bound
es
sub
adc
push
ljmp
push
test
xor
jae
ret
dec
or
rcll
faddl
jnp
sub
add
aam
lret
movsb
push
loopne
cmp
fs
xchg
lods
pop
mov
pop
sbb
shll
adc
lods
arpl
mov
lret
xchg
sbb
aad
aas
aas
and
xor
pusha
ret
mov
or
xchg
inc
pop
ret
push
leave
jno
loopne
jb
mov
les
pop
fsub
popa
fs
mov
mov
into
aam
rorb
cmp
xchg
xlat
dec
or
adc
inc
sbb
and
in
push
loop
js
and
mov
mov
mov
inc
out
shlb
ja
fs
mov
dec
dec
mov
mov
int
add
jbe
xlat
sub
adc
dec
jnp
pop
psubq
xchg
js
or
or
lock
paddw
lahf
inc
shll
and
icebp
jae
mov
aas
inc
rolb
inc
test
stos
pop
jg
aas
xor
sbb
mov
inc
cmp
adc
inc
xchg
fisubrl
aad
mov
inc
inc
cwtl
push
ret
jecxz
stc
push
pop
mov
lea
inc
jo
or
lcall
lcall
mov
push
loope
inc
mov
fscale
idivb
jecxz
add
inc
jmp
adc
push
sub
and
out
sub
dec
sub
dec
pop
add
jns
mov
and
adc
popf
add
pop
push
push
sbb
loope
movsl
fidivs
pop
imulb
pop
push
jge
xchg
jnp
pop
cmpsl
cmp
fisubrl
pop
loop
fcompl
gs
or
push
fs
xor
lods
aam
lock
dec
imul
jecxz
and
jb
insl
dec
mov
loope
jmp
push
movsb
addr16
jne
xchg
or
popa
loope
fmull
das
insb
inc
nop
push
mov
pop
xchg
pop
pop
mov
nop
in
cmpsl
dec
imul
jb
icebp
push
iret
mov
cwtl
sub
inc
xlat
mov
add
sbbb
and
lret
ret
mov
cmp
cmp
cmp
dec
loop
into
fwait
mov
mov
fstpl
mov
dec
ss
sbb
fildll
repz
iret
rol
adc
push
movsb
aas
or
mov
jmp
xor
repz
xor
lods
inc
pop
mov
lods
pushf
sub
imulb
sbb
xchg
sahf
mov
data16
popf
imul
jle
xchg
jmp
loop
xchg
clc
inc
sahf
sub
jb
xor
clc
or
rorl
lods
arpl
aas
out
sarb
ficoml
and
andb
test
fsub
sub
ja
cli
cli
psubsb
pop
lahf
ds
jne
pop
inc
imul
xor
addr16
mov
in
xor
cmpsb
mov
or
je
sarb
jne
movsb
cmpsb
pushf
add
test
mov
imulb
lcall
push
lea
adc
inc
cmc
fdivr
cmpsl
mov
cmp
xor
push
adc
int
push
sahf
aaa
jmp
outsl
dec
in
jp
arpl
je
jbe
and
sbb
push
mov
lret
cmp
sbb
sti
push
inc
pop
cmp
call
aad
pop
pop
bound
les
push
cmp
xlat
mov
add
sbb
jo
insl
xchg
adc
push
into
fdiv
insl
add
cmp
out
out
movsl
rorb
inc
xchg
cmc
out
divb
jo
hlt
xorl
jbe
hlt
clc
mov
lds
in
lea
jno
dec
cli
sti
adc
int
fwait
xor
mov
scas
mov
test
push
jo
out
in
loop
mov
pop
push
out
call
mov
or
cld
inc
pushf
ds
ds
or
mov
pop
and
lods
adc
pop
insb
mov
xor
test
popa
clc
push
cmp
and
ror
jo
imul
inc
cmpsb
outsb
cltd
sbbl
fwait
mov
data16
ljmp
xorl
pop
cmp
and
ret
xchg
stos
outsb
stos
xlat
cwtl
clc
push
mov
or
pushf
mov
xor
int
adc
push
pop
neg
stos
mov
cmpsb
pusha
enter
mov
bound
sbb
adc
adc
sbb
xor
lcall
insl
fcomps
push
sarl
jae
lcall
cwtl
test
call
push
pop
insl
aam
push
xor
ds
out
push
jo
cmp
test
repz
xor
xor
xor
or
pushl
in
jmp
in
xor
fmuls
xchg
out
dec
aad
lahf
dec
inc
xchg
jmp
in
imul
andb
fsubr
inc
lret
mov
loope
mov
fmuls
inc
add
dec
into
imul
mov
clc
aaa
lea
adc
xor
add
adc
std
pcmpeqw
cmp
xchg
lcall
aad
xor
sbb
mov
ficomps
push
dec
add
js
fdivrs
roll
ffree
fimuls
add
pop
mov
jns
gs
inc
mov
sub
fadds
stc
push
mov
cwtl
push
pop
gs
lea
mov
cli
pushl
sbb
jge
mov
fistpll
push
mov
test
sbb
add
and
ficoml
jnp
adc
push
clc
ja
test
mov
sub
in
repz
iret
add
mov
mov
testl
inc
jle
sbb
test
push
mov
push
movsb
and
adc
inc
movsb
mov
std
andl
movsl
out
sub
pop
jmp
mov
rcrl
into
addr16
mov
mov
test
mov
push
sbb
and
rcll
je
orb
test
mov
sub
cmpsb
push
inc
fldl
test
sbb
pop
rorl
out
lahf
cmpsl
sub
or
lds
xchg
js
inc
hlt
ja
cmp
sub
in
aad
push
xchg
inc
inc
jge
dec
adc
pop
cltd
pop
or
inc
add
repnz
in
adc
push
cmp
lock
pop
test
cld
push
in
xchg
inc
fldenv
and
pop
dec
fwait
adc
test
dec
stos
sub
mov
rclb
xchg
jnp
and
insb
ljmp
sub
arpl
in
mov
hlt
cwtl
mov
dec
out
or
icebp
outsl
adc
inc
test
out
pop
jns
jns
les
fiaddl
mov
dec
sbb
and
or
ret
push
xor
mov
scas
cltd
enter
faddl
cli
pop
adc
pop
movsb
dec
and
pop
jl
pop
push
into
mov
push
movsb
ficomps
xor
fxch
or
xchg
sub
mov
mov
xor
mov
imul
mov
dec
mov
jo
sbb
std
mov
inc
or
push
in
xorl
xchg
andb
fstpt
mov
dec
pushf
test
lds
lret
inc
mov
adc
mov
inc
or
fpatan
mov
cmpsb
push
xchg
ret
es
out
xchg
fcoml
jnp
xchg
syscall
in
mov
push
mov
in
push
bound
popf
shlb
and
add
or
mov
jno
inc
andl
into
mov
outsl
pop
testl
divl
aaa
mov
dec
add
leave
mov
gs
insl
pop
pop
and
xchg
mov
inc
aam
int
dec
xchg
out
sti
mov
push
mov
shlb
test
mov
adc
jns
iret
cmp
mov
dec
sbb
movsl
ficoml
mov
xchg
jbe
dec
push
js
xor
add
add
mov
xor
and
dec
lock
xor
je
das
mov
adc
lcall
xchg
cmp
jge
into
push
jmp
out
and
mov
sub
inc
jnp
imul
ljmp
lods
and
push
jge
js
or
sbb
int3
scas
mov
dec
jecxz
jecxz
add
adcl
cld
xor
mov
dec
mov
cli
dec
lock
mov
aam
popa
sub
mov
fidivs
loope
test
push
out
mov
inc
pushl
popa
sbb
push
lea
enter
scas
test
xor
into
mov
rcrb
pop
fadds
fs
outsl
xor
fisttps
mov
adcl
mov
lea
pop
bound
fdivrl
cmp
stos
pop
lea
inc
xor
or
cld
out
es
pop
dec
push
fsubl
movl
je
jae
loop
adc
xorb
push
in
sub
mov
dec
insl
add
inc
jnp
inc
jno
dec
mov
add
dec
jmp
pop
adc
push
nop
cli
cmp
mov
cmpsb
lds
popf
fcmovnu
xor
jg
inc
add
push
imul
push
push
push
fwait
push
mov
mov
lods
pop
dec
ljmp
adc
ret
pop
xor
dec
sub
ja
inc
je
push
shrl
lds
push
adc
mov
xchg
push
int
aam
je
cld
jb
cld
fisttpll
cmpsl
lods
adc
shll
pop
dec
xchg
gs
jns
out
out
push
fsubrl
scas
push
jg
shl
outsb
add
xor
sbb
jg
dec
add
dec
jb
ljmp
xchg
test
loopne
mov
imul
sbb
mov
add
sub
sbb
cmpsl
imul
mov
xor
inc
push
add
sub
or
add
iret
pop
orb
xlat
dec
in
out
mov
and
jl
pop
idivb
int
xchg
lahf
jnp
imul
cmpb
stos
repz
lret
imul
aaa
xchg
xor
push
dec
dec
mov
call
js
dec
loopne
sbb
or
push
out
das
movsl
jg
inc
call
xchg
or
ds
in
dec
cmpsl
mov
dec
inc
mov
shl
pop
pop
dec
xor
ljmp
imul
pop
rclb
cmp
push
xchg
test
dec
lret
and
mov
js
and
aas
loopne
icebp
mov
sub
sbb
roll
xchg
daa
mov
fldenv
inc
dec
add
inc
fsubr
punpcklbw
aaa
lds
ljmp
scas
push
pushf
xchg
lahf
bound
add
stos
fildll
adc
mov
xor
insb
mov
add
pushf
inc
xchg
lods
pop
mov
or
out
pop
insl
xor
ret
xor
call
shll
mov
cld
stos
fildll
rclb
sbb
addr16
sbb
sbb
aaa
lods
stos
push
and
fists
out
cmpsl
jp
xor
mov
cmp
daa
mov
mov
lret
icebp
add
outsb
dec
cs
and
fbstp
popa
xchg
lock
gs
dec
fisubrs
pop
popa
std
dec
dec
es
mov
cltd
rol
jecxz
dec
pop
xchg
mov
or
or
lods
mov
mov
sbb
clc
pop
clc
sub
push
out
out
add
push
sbb
outsl
frstor
lret
xchg
and
sub
dec
jae
ret
insb
lods
inc
sahf
shll
cwtl
push
add
in
jmp
push
mov
cmp
mov
stc
stc
pop
pop
push
repnz
ret
or
adc
jbe
jle
inc
hlt
sbb
test
addr16
sti
dec
rclb
stc
lock
les
mov
ljmp
push
lods
and
mov
mov
xor
loopne
mov
imul
jl
push
popl
pop
andl
add
cltd
jbe
push
adc
not
mov
mov
inc
dec
shl
adc
dec
jo
cmpsl
pop
pop
cmpsl
cmp
inc
sbb
shll
and
adcb
jno
lods
cmpsb
ss
sub
inc
lea
xchg
ljmp
xlat
or
sub
or
jb
inc
add
cmp
repnz
fwait
mov
dec
arpl
stos
and
dec
iret
push
cmp
xchg
mov
lea
pop
lret
pop
ds
mov
lret
test
repz
sub
jne
mov
arpl
cmp
lret
cmp
pop
jp
dec
addr16
push
cmp
sub
loop
int
push
incl
cmp
in
xchg
pop
push
xchg
pop
or
pop
mov
dec
pushf
xor
mov
mov
shlb
je
iret
je
or
sahf
or
or
mov
dec
ror
cmp
inc
fidivs
lret
push
cmc
xchg
jle
pop
sub
sti
int3
push
inc
inc
push
addr16
sub
or
or
push
rolb
jne
insb
test
ret
mov
adc
aas
jns
sarb
jmp
cmp
sahf
mov
cltd
add
out
and
insb
mov
xor
pop
imul
fisubl
adcl
stc
fnstenv
out
lds
xor
mov
clc
inc
stos
mov
pop
jb
and
mov
push
and
adc
jbe
jmp
adc
mov
daa
xor
adc
mov
xchg
mov
mov
inc
cmp
pop
sbb
pop
dec
jno
sub
jmp
xchg
jge
pop
cmp
inc
cmp
les
and
mov
mov
push
cmpsl
push
dec
push
into
dec
stc
cmp
stos
pop
test
xor
call
inc
out
in
fsts
jmp
mov
push
jg
aas
adc
std
dec
scas
movsl
ja
popa
out
into
or
leave
add
popf
add
shrl
rorl
mov
push
clc
push
mov
mov
inc
adc
push
cli
pop
jle
fidivrl
pusha
jb
cmp
adc
sbb
sbb
mov
cs
xchg
lret
dec
out
xor
mov
add
add
imul
fidivrl
push
xchg
shll
mov
xor
cltd
rolb
mov
imul
xor
stos
subl
mov
sbb
adc
or
dec
pop
lods
jb
inc
sub
jge
mov
push
pop
adc
call
ret
cmp
in
add
stos
fmul
dec
sti
stc
mov
mov
dec
imull
jno
dec
lods
out
out
xor
push
shl
mov
xor
aad
sbb
lods
push
ret
sub
xor
adc
lahf
add
frndint
aaa
nop
mov
aad
push
cwtl
rorb
fld
push
ret
aad
mov
mov
mov
js
incb
add
fbld
mov
inc
push
pop
ss
jp
rolb
and
fidivl
push
ds
adc
mov
and
adc
inc
imul
xchg
out
imul
jge
push
inc
test
iret
addl
push
hlt
sub
lret
sbb
xchg
lret
sahf
cmp
mov
mov
mov
push
fiaddl
dec
les
or
jns
cmpsb
lret
jmp
mov
dec
xor
mov
into
xchg
dec
pusha
xchg
gs
shlb
xchg
push
mov
ficomps
xor
dec
pop
fwait
or
ret
jmp
add
rep
loope
mov
aaa
mov
int3
or
shlb
add
icebp
stos
scas
cmp
outsb
outsb
mov
xlat
inc
pop
imul
cmc
pop
loope
in
jmp
js
js
ret
mov
push
pop
xor
in
add
pop
sub
loopne
jnp
lea
xchg
mov
popa
das
and
into
out
stos
dec
push
leave
ja
aaa
sbb
jne
xor
cmp
fadds
xchg
sub
repnz
push
jno
pop
mov
push
jg
ret
in
jns
pop
ret
xor
cmp
mov
mov
test
shrl
adcb
and
lahf
jp
dec
aam
add
fs
mov
loopne
andl
pop
ja
adc
cmpsl
mov
mov
out
dec
cs
and
outsl
adc
aaa
outsl
add
in
cmp
xchg
push
test
lock
enter
mov
mov
lret
xchg
mov
add
bndldx
dec
sbb
push
stos
or
adc
daa
or
mov
in
or
mov
adc
dec
adc
fdiv
iret
mov
pop
and
stos
sub
dec
faddl
push
data16
pop
jp
or
push
cmp
frstor
mov
hlt
aaa
pop
jmp
and
xor
cmp
jmp
je
jns
mov
cmpsl
xchg
cltd
mov
jbe
cmp
inc
inc
sahf
jmp
push
xor
movsb
sti
push
gs
push
mov
repz
adc
hlt
jl
fstpt
fistpll
adc
dec
jecxz
cmc
mov
loopne
jo
ljmp
ficompl
xor
pop
or
test
cmp
cltd
push
and
pushf
pop
imul
jae
dec
mov
or
js
outsl
ret
icebp
ljmp
mov
sbb
inc
sub
fs
sub
sbb
cmp
cmp
into
stc
testl
add
sbb
pop
cmp
fbstp
das
mov
fistpl
sarl
pusha
and
rorb
xlat
out
xchg
sahf
xchg
dec
mov
inc
lods
imul
mov
mov
fcmove
daa
scas
mov
push
fcomps
rorl
sbb
lcall
cmp
lea
cmp
and
sbb
jg
adc
pop
mov
xchg
test
cmp
mov
cmp
push
or
dec
add
push
cmp
jbe
jmp
dec
loopne
lcall
cmp
and
adc
pop
jl
pushf
sub
mov
mov
aas
insl
data16
ret
in
cmp
aad
sbb
pop
sbb
or
mov
cmc
mov
cmp
mov
ds
in
or
out
fsubrp
ds
xor
mov
pushf
orb
xor
les
js
outsb
inc
lock
shlb
icebp
mov
stos
pushf
push
pop
jne
lock
in
mov
cmc
and
out
call
cmc
sub
xor
stc
adc
xchg
pop
xchg
mov
or
push
jo
cmp
cmpsb
sbb
mov
dec
adc
sbb
adc
shl
imul
sub
out
aam
jmp
sbb
aam
and
jl
dec
and
mov
mov
xchg
add
nop
dec
pop
mov
test
mov
xchg
mov
mov
push
ss
fistpl
mov
jno
mov
sti
shrl
mov
ja
or
xor
aad
mov
xchg
push
add
repnz
xchg
pushf
in
test
or
ljmp
push
in
add
jmp
pop
repnz
or
xor
mov
cmc
dec
xor
sub
sbb
mov
push
bswap
les
jp
lea
dec
sub
sbbl
sti
mov
lea
stos
lods
push
aaa
int
aad
sbb
xor
push
movsl
repz
push
in
lret
es
or
jbe
outsb
cmpsb
aaa
dec
ret
imul
jb
call
insl
arpl
std
arpl
clc
fcoml
popf
pop
fs
push
xchg
enter
incl
pop
pop
cli
xor
and
scas
pop
cmp
dec
sahf
xchg
movsl
pop
aam
mov
pop
mov
push
push
fsubl
addb
lcall
sti
cmp
sub
mov
shrl
cwtl
push
aad
scas
fucomip
pop
movsb
shlb
cmc
lahf
or
int3
push
pushf
scas
sahf
adcl
lcall
movsb
cmp
cmp
push
ja
js
cmp
jo
out
fimuls
mov
ljmp
push
aaa
sub
lds
repz
sahf
popl
mov
sub
add
pushf
xor
or
ds
ss
lea
sti
mov
and
fimull
sbb
mov
lods
or
scas
les
jne
jle
pop
and
mov
loopne
mov
inc
jnp
push
pop
gs
clc
sub
push
mov
push
imul
pop
lcall
sahf
cmp
fdivs
loop
adc
pop
xor
aad
inc
aam
push
iretw
push
in
outsb
xor
fsts
js
sahf
ret
outsb
out
adc
test
or
outsl
test
bound
or
xor
mov
xchg
fdivl
cmp
idiv
mov
mov
mov
iret
mov
notl
push
out
push
insl
cmp
loop
sub
push
bound
cmp
cwtl
xlat
iret
icebp
je
mov
shrl
xorl
xor
pop
push
xchg
scas
into
inc
out
dec
push
cmp
mov
mov
addl
lret
das
pushf
and
loop
sub
iret
and
adc
scas
fcom
push
repnz
aam
jns
sbb
imulb
pop
sub
test
sbb
nop
or
adc
data16
out
in
sbb
pop
add
ja
popa
cmp
data16
stos
cmp
mov
jne
movsl
or
int3
stc
mov
fwait
mov
mov
stos
push
ljmp
loop
cmp
leave
xchg
lock
lcall
movsb
jae
out
mov
push
mov
cmp
and
cmovge
inc
push
adc
mov
mov
xor
aad
sub
mov
pop
jecxz
jbe
mov
xchg
xchg
or
lcall
pop
les
mov
jbe
pop
dec
xor
mov
push
inc
add
or
sbb
xor
sub
jg
mov
sbb
cld
jl
sub
jbe
cmp
lds
bnd
out
sub
call
jmp
testl
aad
adc
or
jg
xor
cmpsl
cmp
pop
fucom
orl
dec
int
xchg
jmp
daa
outsb
sbb
movl
push
lret
aas
mov
push
sub
push
cmp
xchg
pop
or
stc
pop
xchg
or
mov
fcmovb
mov
rcrb
mov
aaa
ds
test
lds
xchg
cmp
push
aaa
jp
repz
aaa
sbb
imull
addr16
rorb
dec
nop
mov
fsubrp
leave
repnz
and
fcmovnbe
adc
jbe
sbb
mov
pop
in
lods
inc
xchg
ljmp
xor
push
dec
orl
or
fdivrl
loope
jne
jle
fldl
adc
movsl
adc
pop
ret
std
movsl
ret
xor
insb
rorl
sub
jmp
pop
sbb
insl
mov
add
testl
mov
fldt
sahf
test
xchg
gs
popf
or
add
lret
jae
add
jnp
and
shl
pushf
dec
stc
aaa
lods
pusha
pusha
mov
ror
js
adc
push
fstpt
shll
and
rorl
aas
orl
pop
sar
repz
inc
push
jb
mov
xchg
gs
in
sub
pusha
js
push
popa
push
andl
pop
fbstp
gs
and
inc
xchg
in
mov
repz
push
push
mov
sub
vmread
xorb
lea
icebp
mov
out
fadd
aas
lods
dec
loop
cmpsl
sub
test
jl
pop
pop
outsl
push
movsb
cmpsl
inc
mov
hlt
xchg
jns
pop
cmp
test
sbb
imul
mov
fwait
xchg
dec
mov
notl
push
mov
mov
inc
pushf
add
xchg
add
jl
in
pop
mov
xchg
dec
ret
aaa
icebp
js
cmp
mov
fstps
imul
push
push
inc
icebp
pop
rorb
and
xor
das
mov
ficompl
fiaddl
ds
jg
cld
aaa
popf
mov
cmpsl
push
call
pop
inc
mov
dec
dec
sub
mov
mov
out
lret
cltd
repnz
lcall
xchg
and
popa
dec
xchg
mov
test
insl
sub
sti
pop
in
outsb
jg
dec
mov
ljmp
rep
mov
outsb
sbb
in
scas
push
scas
jp
cs
aaa
push
das
test
cltd
dec
mov
sub
int3
lret
pop
xor
shlb
int3
push
xor
add
sarb
cwtl
insb
mov
sub
or
pop
cmp
jno
xor
out
sbb
roll
stos
inc
jbe
xor
popf
popa
bound
shlb
dec
or
aad
cmp
add
pop
mov
mov
cs
mov
xor
adc
mov
pop
jmp
mov
rorl
or
add
cmp
xchg
dec
xor
and
jnp
loopne
shrb
stc
jg
leave
jmp
add
rclb
mov
pop
sarb
pop
push
scas
mov
repz
icebp
lods
push
clc
cwtl
test
sub
testb
jge
and
sbb
in
xchg
sti
in
adc
inc
in
mov
test
lret
push
xchg
int3
pop
ret
jmp
sti
and
adc
sub
daa
and
inc
dec
ss
scas
loope
inc
dec
sahf
dec
dec
sahf
int3
add
xor
mov
sbb
clc
testb
lret
cli
mov
nop
cmp
xor
cmpsb
dec
push
mov
mov
cmpsl
fwait
aas
adc
mov
sub
cmp
rclb
mov
fsubp
cs
inc
ljmp
jnp
sar
pop
mov
pop
jp
push
stos
mov
shll
dec
les
ljmp
pop
lcall
mov
lock
mov
sbb
idivb
stos
movsl
in
push
add
jp
shll
enter
mov
out
sub
stos
nop
and
mov
sub
push
std
xor
xor
dec
mov
jg
mov
mov
lea
mov
mov
movsl
pop
test
arpl
push
dec
push
or
js
cmc
daa
dec
iret
pop
pop
test
test
imul
popf
xchg
mov
inc
in
leave
sbb
inc
and
push
add
add
jmp
mov
testl
jp
les
jno
pop
imul
xorl
sbb
roll
std
subb
sub
add
push
mov
mov
scas
mov
jle
xchg
aaa
mov
jp
inc
cmp
mov
mov
int
icebp
push
or
lods
fsubr
push
sbb
leave
jns
xchg
and
adc
jnp
loope
data16
fs
mov
mov
lret
push
fdivrl
int3
sarb
and
dec
adc
mov
addb
cmp
dec
sbb
dec
fdivp
out
sbb
add
fsubr
loope
xchg
movsl
lcall
loop
sub
mov
cwtl
cmp
lods
cmp
mov
arpl
mov
jb
xor
sbb
mov
and
int3
inc
mov
sub
mov
xor
jae
movsb
pop
mov
jl
sbb
jb
sub
jne
dec
fidivl
ficoms
fsubl
dec
punpckldq
das
pop
mov
xlat
nop
cwtl
pop
lods
lea
out
dec
mov
inc
cltd
pushf
adcl
std
out
pop
or
mov
or
mov
icebp
add
sub
or
mov
and
dec
cmc
dec
xor
jmp
pop
nop
std
add
xchg
add
xor
ficoms
sbb
fiaddl
jg
out
push
mov
add
push
out
dec
push
lock
lret
dec
push
int
jno
arpl
sarl
pop
sti
mov
pop
jmp
mov
add
jnp
dec
pop
inc
stos
mov
movsl
lea
cmpsb
sbb
pop
push
adc
adc
push
sti
mov
repnz
mov
aas
rcl
sub
fadds
les
jb
mov
cltd
dec
sbb
adcb
loope
subb
mov
add
mov
pop
cwtl
inc
push
fcomi
rorl
pop
movsb
mov
push
bswap
mov
and
addr16
stos
sahf
inc
mov
and
insl
xor
enter
lahf
leave
add
jecxz
mov
sbb
push
or
divb
push
call
push
leave
cmp
xor
imul
es
and
dec
push
sbb
push
add
pop
mov
jmp
je
xlat
xchg
jmp
mov
and
loopne
pop
pusha
push
notb
cmpsb
xchg
jns
cmp
xor
pop
add
mov
out
mov
sub
fdivl
jle
push
dec
iret
cs
mov
xchg
js
cld
loop
ret
cmpsb
les
in
je
imul
fwait
sub
dec
lret
mov
sbb
mov
gs
cmp
mov
mov
dec
mov
mov
mov
xchg
xchg
inc
mov
es
mov
rcrl
ja
push
cmc
enter
jbe
lods
push
fmuls
loope
fldcw
adc
xor
in
push
fsubrs
adc
in
push
push
enter
mov
add
pop
ja
pop
xor
pusha
add
rcll
mov
pop
push
adc
cltd
mov
test
sar
daa
push
xor
push
sub
std
cmpsb
out
xchg
adc
mov
mov
sar
push
jle
xchg
outsb
movsl
fwait
adc
dec
adc
loopne
out
and
pop
xor
sbb
dec
lea
orb
es
jne
xchg
lahf
cltd
add
fs
outsb
shlb
loope
mov
mov
mov
jge
jnp
sbb
cs
cmp
mov
hlt
xchg
sarb
dec
loop
loop
cmp
push
int3
test
xor
dec
or
sbb
in
xlat
aaa
xorb
push
in
adc
icebp
pop
ret
dec
icebp
mov
je
and
inc
pop
enter
sbb
inc
dec
sbb
shrb
lea
out
rorb
pslld
popf
iret
and
push
popa
dec
rorl
pop
mov
lret
fdivrs
bound
adc
popf
pop
pop
and
mov
cmp
pop
mov
sub
negl
mov
cmp
jne,pn
add
mov
push
lds
push
or
jne
jne
stos
jp
mov
ljmp
jb
outsl
popf
xorl
adc
fs
fdivl
push
nop
and
push
sub
xchg
popa
jns
dec
fbld
pop
and
mov
mov
insb
dec
push
inc
push
aad
movsl
dec
in
sarl
das
mov
sbb
pop
sbb
pop
sub
pop
movb
mov
vmovsd
inc
out
aaa
add
dec
mov
xchg
inc
hlt
lds
jecxz
cmp
lret
push
sbb
loope
aam
nop
jle
push
fistl
mov
sar
pop
xchg
inc
iret
loope
inc
or
xchg
xor
sub
aam
adcb
mov
mov
inc
cltd
arpl
test
loope
inc
add
shr
adc
les
out
pop
adcl
sbb
xchg
push
cmp
fdiv
mov
dec
jmp
lock
add
cli
jg
dec
arpl
and
jecxz
xor
and
jp
pop
in
movsl
je
lret
das
cmp
mov
or
ja
push
mov
cltd
lock
sarb
cmpsl
push
rcr
pop
shrl
or
xchg
inc
les
pop
push
mov
mov
pop
adc
pop
std
int
or
or
popf
push
push
xchg
pop
shl
jne
sahf
sbb
dec
inc
adc
add
pop
lods
inc
loope
jb
sbb
xchg
jecxz
ficompl
sub
jno
insl
into
adc
mov
mov
jns
cmp
fdivrp
dec
aaa
mov
ds
inc
mov
jbe
xchg
or
mov
dec
fnstcw
insl
mov
arpl
and
sub
sub
in
cmpl
out
mov
icebp
es
insl
iret
cld
test
fildl
cmp
cmp
dec
aas
or
sub
adc
jl
jb
mov
out
fists
aam
int3
inc
push
xlat
inc
mov
mov
jmp
jge
arpl
int3
hlt
pop
out
xchg
adcb
mov
aaa
jae
aaa
fisttpll
sub
dec
movsl
mov
or
pushf
xor
int
movsl
jl
add
icebp
repz
call
mov
jp
sar
mov
mov
fisubl
dec
push
lea
in
dec
jae
rcrb
sbb
mov
in
pop
sub
xchg
xchg
dec
out
mov
test
in
test
orl
xor
inc
fnstcw
stos
mov
shll
xor
pop
adc
or
outsb
cmp
iret
fsts
inc
push
mov
jb
out
add
add
stos
insl
fsubs
sbb
mov
jae
outsl
fcoml
lock
fbstp
push
lcall
je
pop
fistpl
fidivs
mov
imul
sub
rcr
repnz
js
fmuls
or
adc
sbb
jl
ret
std
fsubl
jmp
xchg
stos
inc
lcall
and
lea
mov
adc
cli
xchg
loopne
andb
enter
sbb
dec
call
ret
out
jg
movsb
out
imul
jnp
xor
pushf
sbb
cmpsb
cmp
out
pushf
lahf
int
test
xor
aas
inc
adc
pop
inc
test
jae
pop
test
jl
out
cmp
jl
jle
xchg
lods
xchg
push
lods
fisubs
pushf
dec
lock
in
lcall
cmp
and
cmc
aad
das
enter
adcl
pop
les
int3
out
in
cmpsl
mov
xchg
cld
cmp
lahf
jecxz
test
rorl
addr16
add
test
mov
das
push
out
out
or
lcall
lcall
mov
int3
outsb
or
sub
xchg
lods
mov
div
cmc
cld
adc
popf
fstl
or
xor
pop
sbb
mov
cltd
xor
cmp
sbb
lods
mov
push
pop
cmp
adc
xchg
push
add
dec
xchg
sub
lea
ja
imul
xor
ret
xor
xor
fisttps
in
popa
xchg
push
mov
outsl
pop
jne
int
pusha
fisubrl
mov
shrb
leave
fldenv
lret
in
fsubs
mov
aaa
push
mov
fcmovnbe
lods
daa
imul
jle
lret
jno
lcall
push
and
rcrl
stc
mov
mov
enter
int3
push
ja
adc
mov
aaa
mov
xor
out
ds
xchg
sbb
out
adc
jle
dec
inc
sub
cmpl
scas
mov
fwait
xor
push
aas
stos
out
fisttpl
push
cmc
xchg
add
int
fsub
std
movsb
clc
pusha
jg
cmp
lods
inc
in
pop
add
pusha
dec
cmp
repz
cmp
insb
call
mov
test
mov
leave
and
mov
cmp
ret
stc
popa
enter
cmp
pop
cmp
sub
bndldx
ss
add
sbb
addr16
or
xchg
dec
cmp
mov
cmp
sti
xchg
cmpsl
aas
out
pop
add
mov
das
enter
aaa
dec
popf
pop
mov
push
sub
scas
pop
push
in
fcomip
xchg
lds
out
test
mov
fsubrl
mov
jg
or
imul
cmp
xor
xor
imul
push
cwtl
nop
lock
mov
or
sub
mov
mov
xor
lods
xor
adc
test
ljmp
fs
jns
imulb
imul
push
adc
push
shrb
mov
sub
sbbb
mov
cmp
mov
int3
insl
pop
mov
sbb
popf
hlt
jo
mov
adc
cmp
inc
xchg
cmp
push
jmp
jmp
mov
add
mov
cmp
push
sub
test
dec
adc
lcall
outsl
adc
subb
and
adc
stos
xor
mov
sbb
mov
fdivr
mov
jl
add
add
sbb
pop
mov
pop
shl
sbb
in
push
je
jae
mov
sbb
lahf
insb
sbb
push
pop
rcrb
cmpsb
mov
or
imul
movsb
scas
mov
movsl
ret
lret
jnp
ret
jbe
pop
dec
or
mov
int
mov
mov
dec
jp
sub
inc
mov
ja
mov
sub
clc
inc
push
sarb
mov
je
add
jg
mov
hlt
cmpsb
xor
lahf
mov
outsl
les
cmp
mov
pop
mov
mov
add
dec
xor
es
call
fsub
mov
gs
xchg
sub
push
testb
hlt
hlt
movl
xor
push
mov
push
bound
pop
ss
js
jo
xor
stc
mov
test
js
xor
cs
ret
sub
mov
sub
or
pop
sbb
clc
shll
clc
xchg
sub
imulb
ret
sbb
mov
push
repz
mov
cld
cwtl
mov
push
or
out
hlt
mov
test
insb
xor
add
sub
rorb
and
jae
in
rcrb
pop
loop
orl
inc
popf
clc
repz
lock
outsl
loopne
mov
fadds
fsubl
sbb
xchg
lret
pop
outsl
ss
sti
push
xchg
mov
insb
cmp
clc
inc
ret
outsl
xor
int
inc
loopne
inc
dec
sub
pop
xchg
push
outsl
add
sbb
leave
insl
push
ds
pop
jo
mov
xchg
in
or
push
jmp
test
adc
inc
mov
add
in
lahf
int
in
inc
jb
notb
out
and
popa
ficompl
test
and
cmpb
cmp
nop
pop
cltd
insb
iret
mov
inc
scas
dec
dec
outsl
adc
or
fst
xchg
out
sbb
dec
mov
gs
imul
mov
in
lods
sahf
adc
xor
jge
adc
sbb
ficoml
aad
xor
pop
dec
pop
adc
mov
roll
sti
push
xchg
orl
outsb
les
arpl
and
sar
int3
or
xor
aam
add
inc
dec
iret
sarl
stos
test
in
mov
lea
mov
jge
mov
loope
nop
xchg
fs
mov
stos
daa
pop
insl
movsl
jo
cmp
lock
add
pop
pop
aas
out
movsb
push
mov
aad
int3
jmp
pop
xor
out
or
pop
ror
and
inc
cwtl
or
inc
fucomi
lret
cmp
adc
lock
and
das
icebp
xor
xchg
out
sub
cmpl
mov
jnp
leave
fstpt
lock
and
jns
jno
push
sbb
sbb
cmpsl
xchg
dec
adc
cmp
mov
pop
fisttpll
mov
in
dec
rorb
or
outsb
add
mov
add
pop
fwait
mov
dec
mov
dec
add
ss
xor
fistl
fnsave
iret
shll
aaa
cmpsl
xchg
lahf
js
xor
mov
repz
lods
adc
jb
mov
push
cmp
inc
mov
in
mov
incb
mov
xchg
mov
repnz
ds
test
ret
pop
js
mulb
fmul
int3
xor
pop
repnz
je
cld
add
sar
stos
cmp
pop
mov
and
mov
add
icebp
stc
in
pop
movsl
pop
addr16
rep
ljmp
sti
rclb
flds
push
xor
icebp
add
jmp
shr
js
xchg
test
xchg
hlt
inc
and
xchg
xor
ljmp
adc
lret
inc
jg
push
jae
rcll
fld
sti
adc
cltd
in
leave
pop
xchg
roll
sarl
gs
push
mov
cwtl
daa
outsb
pop
popa
push
lcall
adc
rclb
jae
xor
jnp
ret
fmull
aam
test
jns
stc
xchg
mov
ret
pop
xchg
push
xchg
adc
cwtl
cmp
xchg
in
dec
mov
scas
leave
mov
mov
shlb
inc
add
xlat
or
mov
dec
scas
stos
dec
pop
lods
loopne
xchg
sbbb
scas
inc
movlhps
adc
sub
xlat
nop
out
es
cli
inc
dec
add
or
or
fiadds
in
push
les
add
mov
sbb
mov
mov
inc
je
sahf
rcl
gs
ja
leave
shlb
subl
ret
xchg
pushf
int
out
fsubrs
inc
cmp
popf
push
and
je
das
lret
xchg
or
rcrl
sub
in
shll
shll
and
ja
mov
mov
jno
add
jne
stc
inc
gs
jg
mov
pop
mov
sbb
rcrl
lds
pop
out
popf
adc
nop
inc
cmc
addr16
lahf
lods
jl
jl
insl
cli
or
or
stos
mov
mov
pop
push
cs
add
lock
aam
jae
xor
shll
and
mov
in
shr
lahf
test
pop
pop
in
pop
btc
and
subb
arpl
inc
sbb
cmp
jo
out
sbb
scas
push
cmp
push
mov
jl
cmpb
sahf
mov
pop
sbb
xchg
out
sub
and
jno
stos
or
push
adc
into
orb
xchg
call
addl
aad
das
jae
sar
stos
jns
mov
or
or
xchg
out
out
xchg
dec
jb
shlb
sub
jne
stos
push
clc
int
push
sbb
flds
aam
bound
cmp
or
mov
ds
testb
pop
dec
or
xor
inc
cltd
sti
loopne
je
mov
xor
and
cmp
inc
mov
mov
sbb
lahf
cmp
xor
sbb
push
push
sub
in
push
pop
and
dec
sbb
imul
rol
fisubs
pop
mov
push
pop
mov
subl
pop
mov
outsl
sub
pop
push
hlt
inc
mov
aas
movsl
mov
movsb
sub
xlat
cmp
dec
lock
adc
loope,pn
movb
callw
adc
ret
dec
imul
outsl
xor
out
or
stc
sbb
inc
shll
addr16
shrl
adc
stos
insb
xor
shlb
shl
out
xchg
cmp
dec
mov
mov
rorb
aaa
out
pushf
or
mov
push
idivl
push
push
and
xor
inc
leave
mov
xor
pop
cltd
das
cli
lea
mov
call
push
je
mov
repz
pop
jns
jl
sbb
imul
mov
int3
adc
cmp
jl
sbb
mov
mov
xor
adc
fmuls
xor
ficompl
and
lret
loopne
xor
mov
pop
sbb
mov
inc
xchg
jecxz
repz
fcompl
fstp
das
xor
xlat
aad
es
push
push
out
or
xor
push
push
jmp
dec
inc
fadds
xor
cmp
xchg
in
les
sbb
lods
sahf
mov
testb
add
pushf
out
sahf
test
movsb
cmp
sti
cmp
outsl
aam
aaa
xor
push
aaa
push
popf
daa
pushf
nop
outsb
dec
sbb
jbe
mov
mov
push
mov
sub
enter
gs
cmc
cmc
sbb
adc
push
mov
and
mov
jno
and
shr
xchg
sub
stos
jmp
je
mov
mull
in
js
outsl
lret
sbb
inc
mov
cmp
sti
dec
mov
jp
test
mov
pop
aad
xchg
pop
iret
lahf
adc
xchg
xor
subl
sahf
in
jo
xor
inc
push
jmp
jnp
cmp
pop
frstor
pop
lock
gs
cmp
xchg
js
cmp
movsl
in
fwait
jo
rcrl
js
lock
test
pushf
cmpsl
insb
sub
js
faddp
fwait
rep
xchg
scas
leave
sbb
push
int3
les
ficomps
mov
adcl
sahf
sub
cmp
mov
out
push
inc
cmp
xlat
cmp
push
rorb
imul
pop
sar
mov
loope
das
js
stos
enter
add
cltd
fsubs
or
mov
leave
aad
mov
mov
jns
jnp
repz
in
rolb
push
adc
lcall
mov
jnp
sub
les
out
inc
xor
incb
mov
fxch
jno
mov
aaa
jecxz
inc
cltd
rcrl
mov
pop
xchg
scas
xor
sub
jb
and
cmp
ljmp
jno
fwait
sub
cmp
xchg
push
inc
push
aas
lahf
clc
push
jmp
lods
mov
hlt
ss
imul
testl
mov
mov
movsl
cli
mov
pop
cmp
add
shll
mov
jne
cmp
adc
ljmp
loop
push
inc
pop
movsb
insl
pop
movsl
in
pop
inc
ljmp
cmp
mov
rorl
cmp
cld
repz
lret
sti
push
pushf
inc
loop
xlat
call
inc
and
sbb
dec
inc
aaa
jno
mov
add
fmull
je
aas
dec
mov
popf
aam
push
test
mov
push
xchg
sbb
jb
mov
sti
or
roll
int3
sbb
push
loop
xchg
cmp
in
std
int3
stos
jb
lea
das
adc
ret
lret
xchg
and
aam
pop
mov
inc
imul
xchg
mov
xor
into
popa
push
dec
inc
jecxz
sub
adc
push
and
dec
js
mov
es
sub
stos
or
fisubrs
outsl
sbb
inc
jge
mov
inc
repz
sbb
ret
jg
sbbl
mov
sub
icebp
lret
test
enter
ficompl
filds
pop
pop
dec
mov
imul
sbb
cltd
ret
in
divb
add
leave
cmp
mov
sbb
mov
daa
push
sysret
xchg
mov
les
add
jmp
cltd
ret
pop
mov
cmp
lahf
lcall
and
xor
jmp
cmp
stos
in
mov
lret
pop
inc
dec
xchg
dec
popf
cld
xor
mov
mov
jecxz
xor
mov
adc
adc
and
dec
into
out
roll
roll
out
adc
push
mov
test
mov
jecxz
mov
stos
repz
jne
xchg
es
jge
dec
add
add
sbb
clc
mov
xchg
repnz
xchg
xor
aas
or
adc
in
shll
jne
xchg
lahf
shll
jae
or
cwtl
jmp
ja
andb
subl
inc
repnz
jo
and
movsb
sbb
xor
adc
sbbl
insb
pushl
inc
in
jmp
repz
sub
push
push
aad
scas
aaa
aam
mov
jbe
push
ljmp
adc
stc
ret
mov
ja
imulb
fdivrs
icebp
shr
ljmp
shrl
ss
xchg
xchg
and
jecxz
in
fwait
inc
mov
dec
pop
and
sub
popa
pop
mov
pop
jb
int
icebp
xchg
aas
xchg
pushf
cmc
loope
rclb
add
test
jg
je
arpl
add
js
adc
add
cltd
inc
sub
scas
xor
in
cmpsb
mov
dec
mov
jne
ljmp
inc
or
and
sbb
repnz
or
imul
in
inc
jp
lea
gs
mov
cs
push
sbb
loopne
ljmp
and
repnz
stos
sbb
or
xlat
xchg
push
shll
sahf
sbbl
push
ror
icebp
sbb
pop
pop
clc
lcall
negl
lcall
or
mov
xchg
ljmp
call
xchg
dec
and
xchg
mov
pusha
sbb
into
jmp
dec
dec
gs
cs
cmpsl
xlat
and
dec
out
cmp
sbb
aad
push
pop
aaa
aad
push
movsb
imul
dec
cmp
dec
mov
cmp
test
insb
jp
add
lret
sub
jle
lahf
jmp
and
and
into
loop
lods
add
inc
fstpl
lcall
pop
dec
inc
cmp
sarb
pushf
out
adc
rcr
jmp
inc
mov
mov
mov
inc
jae
mov
test
xor
gs
aad
negl
stos
push
pushl
imulb
je
mov
pop
int
inc
xchg
imul
adc
sbb
shll
mov
rcl
ficoml
gs
push
shll
outsl
loop
xchg
stos
insb
push
arpl
shll
pop
lods
mov
test
in
jb
pop
bound
pop
xchg
mov
out
adc
push
ret
and
cmp
jmp
popf
ret
bound
sub
inc
mov
bound
sti
outsl
inc
pop
or
and
cli
sub
insl
sar
push
lret
sahf
xlat
jb
push
int3
leave
mov
mov
and
mov
jge
or
jle
das
sbb
inc
fldt
push
ja
mov
std
inc
dec
xchg
inc
dec
mov
pop
pushf
adc
loopne
loope
or
push
test
in
sarl
pop
dec
or
nop
out
and
sbb
popa
adc
mov
sbb
add
fstpl
xor
daa
movsl
movsb
outsb
or
cld
pop
ret
xchg
xor
adc
add
add
dec
aas
sub
mov
fidivs
fwait
cld
xchg
rcll
loop
mov
imul
movsb
mov
and
movsl
dec
sbb
xchg
sbb
cmp
int3
mov
or
dec
ljmp
das
jle
imul
cld
or
jecxz
rorl
pop
xchg
xchg
push
push
outsl
int3
mov
js
sti
sub
dec
mov
adc
and
push
jno
outsl
jo
push
arpl
cltd
insb
out
in
sarl
std
and
in
jg
xchg
jnp
lret
sahf
and
dec
and
outsb
hlt
js
jl
xchg
mov
jnp
dec
adc
data16
mov
std
xor
test
push
cmp
sbb
inc
mov
outsl
test
clc
lahf
movsb
lahf
pushf
xor
dec
push
les
jns
daa
roll
xchg
inc
push
data16
iret
or
mov
out
xlat
xor
cmpsb
or
mov
mov
mov
test
int3
scas
mov
sub
push
jle
dec
shl
popa
sbb
mov
das
cld
xchg
and
aas
jg
rcrb
scas
scas
mov
cmpsb
cmp
pop
pop
sub
mov
fdivrs
call
xchg
nop
movsl
imul
and
mov
in
jno
jae
pop
das
push
outsl
cmp
pop
aaa
push
into
mov
jle
std
and
ds
inc
ss
cs
pusha
imul
pop
imul
int3
loop
jg
bsf
jmp
mov
pushl
sub
imul
xor
frstor
outsb
cmp
sbb
inc
add
ss
mov
popf
leave
or
outsl
sbb
add
popa
lods
inc
inc
mov
sahf
cs
cmp
shlb
lds
in
testl
jne
fimuls
fdiv
mov
movsl
cmpsl
mov
or
mov
je
and
push
aaa
call
pop
sbb
outsb
scas
lahf
cmp
mov
cmp
push
cmp
loop
mov
cs
aad
es
cmpsb
xchg
aam
loope
movsb
pushf
cmpsb
movsl
add
cmp
xor
pop
sbb
sbb
lsl
test
lcall
jl
add
and
adc
out
aaa
jb
test
mov
cwtl
push
sub
pop
cmp
test
ja
ret
mov
and
sub
insb
int
or
mov
aam
sbb
jl
and
pop
jns
je
inc
xchg
lock
out
into
push
and
or
mov
jne
and
test
and
jb
push
pop
in
faddl
xor
dec
jo
xor
cmp
lahf
call
sub
shll
push
xchg
fsubrp
add
mov
xor
mov
dec
xsha1
cmpsb
dec
xchg
andb
and
loope
sbb
cmp
mov
xor
push
and
adc
sarl
arpl
mov
out
sarb
je
cltd
mov
mov
fs
sbb
add
sbb
aad
cmp
sub
add
inc
std
push
sbb
daa
pop
xor
enter
test
or
enter
je
cmc
lock
mov
stos
shlb
stos
adc
mov
sar
jo
sbb
jne
push
push
xchg
push
fdivrs
add
mov
jno
mov
push
subl
js
inc
add
bound
pusha
test
int3
dec
dec
aad
lcall
es
popa
push
inc
mov
testb
cwtl
add
push
pop
mov
add
or
mov
push
fisubrl
inc
das
cmp
xor
lods
mov
xlat
loope
mov
adc
lret
test
leave
mov
mov
std
stc
ss
adc
ljmp
cmp
fmul
call
sub
test
pushl
xchg
push
mov
pop
aad
loop
jl
cmp
or
sub
cmpl
mov
loope
cltd
cli
fimull
repz
xor
adc
js
pusha
jno
push
xchg
divl
dec
or
or
leave
dec
daa
popa
dec
sarl
insl
fcomip
xchg
shll
sahf
pop
mov
test
and
xchg
lea
jo
add
fs
push
lret
push
lods
jle
and
jl
fcmovnb
mov
sub
pushf
stos
or
cmp
cltd
mov
push
push
stos
jl
mov
shll
adc
push
ja
dec
adc
xor
cmpb
mov
sbb
in
jns
pop
iret
pop
adc
ljmp
test
stc
mov
lock
push
outsl
scas
stc
bound
or
pop
push
adc
jl
mov
mov
xchg
out
sahf
popa
mov
push
call
push
insb
fmull
imul
stos
pop
xor
xor
repnz
test
xor
ret
or
pop
loopne
push
pop
scas
ret
lods
mov
cld
ret
sti
mov
je
imul
out
xchg
loope
and
sub
adc
add
out
sbb
xchg
or
ficoml
push
mov
push
pusha
adc
ss
cmpsl
sub
xchg
cmc
loope
cli
inc
cmpsl
push
out
sbb
or
js
enter
push
mov
mov
into
push
adc
movsl
ret
roll
bound
adc
adc
xchg
mov
test
out
repnz
cmp
adc
into
imul
mov
add
lcall
xchg
mov
ret
ss
cmp
mov
jl
and
cwtl
ljmp
shlb
push
lds
rorb
idivb
cmc
pop
sub
push
jne
ffreep
testb
sub
add
dec
sbb
pop
add
in
es
adc
addr16
mov
bound
dec
js
mov
icebp
add
ljmp
jg
pop
cltd
push
aaa
rcrl
scas
lock
andb
push
jle
dec
imul
sbb
and
sti
mov
sbb
js
cmpsl
push
movsl
int3
xchg
out
cmc
das
mov
cwtl
inc
dec
lea
mov
dec
scas
push
lret
es
push
pop
sbb
aaa
test
xchg
xchg
rcrl
clc
or
or
and
mov
das
ja
dec
mov
cmp
xor
stos
aam
cmpsl
pushf
aaa
bound
mov
imul
stos
test
repz
ret
out
pop
fs
dec
lret
xor
pcmpgtd
popa
mov
icebp
test
pop
scas
sbb
xchg
cmp
fistpl
fdivrs
xchg
jae
sbb
adc
xchg
outsl
int3
cwtl
adc
lds
inc
mov
movsb
and
xchg
popf
mov
jo
jns
sbbl
sahf
xor
lea
or
insb
dec
sub
mov
mov
xor
out
movsl
and
and
sub
enter
mov
push
cmpsl
lods
arpl
cmp
mov
push
pushf
adc
out
sub
stc
mov
aam
or
jbe
push
jg
je
dec
adc
das
scas
mov
push
ficoml
cwtl
mov
leave
sbb
shr
imull
and
jmp
sbb
pusha
inc
sbb
push
dec
or
adc
mov
lods
jl
xchg
push
ret
dec
shlb
daa
mov
sbbl
or
mov
std
fldenv
sahf
pop
jnp
jle
mov
mov
movsl
pusha
push
cmpsl
movsb
aam
and
or
gs
pop
in
movsb
xchg
lret
bound
mov
rcrb
push
or
lahf
rclb
lret
fsubl
dec
sub
stc
jmp
cwtl
jae
sbb
stos
pop
bnd
add
jge
fstl
add
inc
jle
in
int3
aam
pop
in
pop
or
mov
mov
push
add
pop
aaa
ss
ret
popf
repz
xchg
lret
pop
lret
repz
hlt
pusha
or
loopne
std
insb
int
lcall
stos
xor
in
cld
ss
lds
push
add
or
add
ds
inc
mov
shrb
cmpsl
in
repnz
or
lea
cmp
xor
lcall
ss
jae
add
adc
ret
into
out
test
adc
clc
mov
ret
cmp
iret
mov
sub
or
and
adc
push
into
sbb
inc
daa
cli
sahf
mov
inc
in
out
repnz
lds
mov
cmp
add
mov
mov
lcall
adc
sbb
loop
frstor
nop
jecxz
sbb
push
clc
sbb
sub
and
pop
test
hlt
rcrb
js
hlt
iret
add
mov
cmpsb
fstpt
or
aaa
mov
or
and
push
inc
push
cmp
or
adc
ret
and
fbld
lea
jl
dec
pop
push
movlps
mov
clc
add
or
lods
cmp
sub
jo
xchg
mov
pop
cmp
mov
sbb
xor
test
or
movsl
mov
jle
out
fdivrs
into
dec
es
leave
cmp
repz
cld
xor
inc
mov
and
sub
inc
pop
ficompl
jae
sbb
lcall
cltd
ds
cltd
cltd
xor
jmp
pop
fisubl
mov
testl
jmp
mov
inc
outsb
mov
or
xchg
repnz
gs
clc
fcoms
nop
adc
pop
and
imul
movsb
loopne
pushf
sbb
dec
sbb
sbb
push
sbb
lods
mov
int
in
sbbb
mov
pop
inc
xchg
xor
mov
ficomps
add
inc
add
dec
adc
ffree
in
clc
test
js
xchg
push
sbbl
pop
in
out
pop
call
lock
pop
adc
xorl
dec
cmp
xor
push
ss
sub
xor
push
cmpsl
mov
cs
jge
scas
inc
into
fldenv
iret
xor
xor
xchg
mov
jae
inc
inc
and
pop
imul
sub
adc
jge
sbb
pop
daa
in
fisttpl
pop
loope
roll
dec
push
and
out
jmp
dec
dec
sub
jbe
cltd
pushl
and
jg
call
xchg
jecxz
sub
cld
fidivrs
push
rorb
stos
jns
or
xor
push
test
shrb
daa
and
arpl
cwtl
push
cs
lcall
aam
call
inc
cmpsl
lods
movsl
cmp
lock
icebp
and
push
lcall
mov
js
into
fisttpl
aam
das
dec
sbb
sbb
cmc
pop
jno
gs
jns
loopne
and
inc
or
pop
cmp
cmp
es
ret
repnz
mov
insb
dec
mov
dec
sub
inc
or
adc
loopne
inc
std
add
cli
daa
iret
imul
mov
addr16
subb
xchg
or
fmull
dec
mov
xchg
add
fldenv
dec
jge
jne
pop
sub
jb
add
scas
lret
mov
cmp
or
mov
inc
loop
mov
das
inc
jg
xchg
dec
imul
mov
sbbl
sub
lea
cmpsl
push
adc
dec
inc
adcl
cmp
out
aad
mov
imul
lock
jecxz
sub
jl
aam
outsb
fwait
and
mov
jmp
jge
sub
xor
enter
mov
test
adc
into
sub
jo
xor
incb
ljmp
inc
mov
aaa
lahf
xchg
fcomi
mov
sbb
push
inc
mul
lret
pop
popa
aaa
push
test
adc
or
push
inc
insb
les
inc
mov
push
sbb
mov
in
loope
test
sbb
ficoms
inc
or
dec
adc
and
cmc
push
cmpsb
push
add
lcall
dec
push
pop
xchg
push
pop
lret
add
dec
in
sub
scas
xchg
movsb
inc
xor
hlt
je
pushl
not
shll
icebp
daa
ret
xor
enter
out
jp
shrl
mulb
shlb
repz
fdivr
jp
or
lea
lret
scas
mov
and
lret
andb
jmp
dec
xor
pop
ss
pop
fdivrl
rorl
out
adc
jle
mov
fldcw
dec
mov
das
sub
and
jl
cmp
mov
clc
and
or
lret
inc
pushf
dec
ret
inc
fdivrp
repnz
fimuls
shll
xlat
data16
push
mov
iret
push
outsl
es
inc
jo
out
dec
cmp
mov
in
mov
inc
nop
add
inc
ja
mov
insl
jp,pt
and
push
bound
lods
jns
mov
lret
js
xor
dec
aad
lcall
xor
fisttpl
mov
fwait
mov
or
rclb
push
cli
mov
cmp
jns
iret
and
lret
mov
jae
jg
sub
push
scas
leave
es
inc
popf
notb
das
sbb
fadds
sahf
sbb
out
fdivl
inc
xchg
bound
pop
sub
loopne
inc
repnz
push
repz
dec
cmpl
mov
mov
xchg
cmpsl
jecxz
xchg
sub
lock
or
sahf
dec
stc
cmc
push
in
mov
inc
and
lret
into
pusha
xchg
loopne
pop
pushf
push
jle
sub
scas
add
sub
mov
jecxz
push
lods
ret
pop
xor
imul
add
testb
sbb
push
outsl
mov
fmuls
popa
je
out
int3
adc
les
xchg
xchg
push
pop
fcmove
enter
aam
stos
mov
jg
xor
or
jb
pop
cmp
mov
xor
imul
test
sbb
mov
sub
add
cld
lret
in
mov
xchg
xchg
fsubl
sub
mov
xor
push
mov
lret
jns
stos
inc
sbb
stos
and
fists
bound
xchg
arpl
mov
xchg
pop
stc
dec
adc
mov
out
and
xchg
out
mov
mov
shlb
jbe
inc
mov
jb
sbb
mov
mov
imul
lret
dec
out
sti
adc
out
into
pop
nop
pushf
add
xor
int
or
inc
dec
mov
sub
aaa
rcrb
mov
mov
jb
pop
pop
xor
push
sti
into
inc
gs
push
shl
dec
pop
ret
aas
mov
pop
sub
jbe
movb
jge
repnz
cmp
pusha
imul
and
mov
mov
sbb
jae
sarb
hlt
pop
sub
pop
and
pop
mov
test
cmp
fstp
mov
aas
adc
or
pusha
inc
popa
cld
sbb
xchg
add
push
pop
cmp
sbb
sbb
js
aam
cmp
mull
fisttps
jg
inc
push
adc
and
sahf
out
mov
jno
push
push
mov
push
xor
dec
fmuls
and
jnp
or
inc
scas
jbe
dec
add
scas
test
inc
das
and
hlt
xchg
loopne
leave
inc
dec
into
lcall
push
aam
xchg
lcall
cld
div
mov
outsb
inc
dec
out
idivb
pop
cmc
loopne
xor
or
shll
push
add
ljmp
mov
mov
adc
das
outsl
shl
out
lods
insb
dec
scas
pop
leave
call
jl
inc
xchg
fwait
mov
jp
cmp
arpl
imul
mov
movsb
loopne
cmp
inc
jl
cmp
clc
dec
cmpsb
movsb
int3
mov
mov
cs
addr16
movsb
sahf
xor
mov
jno
scas
rorl
ja
dec
sbb
xor
ret
mov
pop
clc
clc
dec
out
daa
fldenv
fsub
bound
popa
push
movsl
jbe
mov
dec
or
adc
pop
mov
icebp
sahf
clc
add
addl
fsts
iret
and
imul
rcrl
fwait
out
data16
jne
ret
dec
jns
sbbb
aad
inc
rorl
movl
cmp
push
out
xor
xchg
add
jno
and
dec
stos
sub
js
cmpsl
inc
jg
mov
push
lcall
ret
test
dec
or
dec
pop
iret
jo
ret
pop
cmp
insb
pop
test
cmp
sbb
in
das
fidivrl
out
cmpsb
lods
or
fistpl
cs
and
push
push
lcall
scas
push
ljmp
aas
iret
hlt
dec
es
lahf
mov
shl
cmpsl
xor
mov
loop
nop
and
jl
pusha
fcmove
sub
xchg
loope
mov
mov
mov
mov
jb
rcl
push
fnstsw
push
sub
push
loope
jmp
adc
adc
out
fwait
adc
xor
dec
gs
inc
xchg
mov
jge
sbb
cwtl
push
addr16
aam
lock
xchg
mov
clc
pop
mov
or
add
xchg
adc
adc
xchg
dec
cmpsl
cmp
inc
cmp
push
pop
loop
test
je
jno
je
push
adc
xchg
cwtl
outsb
dec
mov
in
mov
jbe
cs
js
loop
xorl
popa
xchg
insb
mov
gs
mov
inc
mov
and
pusha
lret
scas
pop
or
outsb
xchg
roll
xchg
movsb
into
daa
sbb
jno
insb
mov
aaa
insl
out
insb
mov
xor
push
push
inc
cli
xor
fidivl
clc
add
xor
pop
cmp
outsl
mov
out
jecxz
xchg
lahf
lret
lods
xchg
inc
dec
in
pop
mov
or
inc
push
dec
repnz
sahf
mov
mov
cltd
popa
idivb
cmp
xor
out
aad
adcl
outsb
cmpsl
fsubs
arpl
imul
push
sbb
cmc
rorl
push
mov
and
inc
mov
cs
xor
push
roll
fldt
lret
enter
sbb
das
repnz
and
test
push
jbe
push
shrb
add
ja
pop
jo
adc
sub
loope
sub
test
rolb
inc
subl
add
jbe
mov
repnz
mov
in
adc
ljmp
roll
sbb
mov
jmp
mov
lods
cvtdq2ps
or
jg
lods
test
lcall
xor
leave
push
loop
mov
repnz
mov
push
ljmp
adc
ficompl
repnz
imul
add
nop
cltd
pop
dec
mov
push
scas
jle
push
daa
shll
mov
jbe
mov
and
jnp
inc
jecxz
pop
xchg
ja
or
call
and
jno
mov
cmp
loop
jae
inc
xchg
sbb
inc
fcomps
lcall
xchg
stc
push
or
movsl
mov
jae
fdivrs
fbld
jns
hlt
popa
xchg
movsb
aad
mov
ret
or
scas
pop
push
push
xor
dec
ret
mov
add
pop
aaa
xor
push
fcmove
sbb
insb
popf
jb
mov
mov
data16
add
push
push
dec
push
fldcw
or
das
mov
sbb
loopne
mov
leave
sahf
cs
push
jle
aad
add
push
push
test
lahf
push
pop
jne
ret
sub
push
xor
test
scas
adc
lods
adc
fwait
dec
xchg
stos
rcrb
int
popf
push
jp
ljmp
and
xchg
aad
sub
mov
cmp
jecxz
lahf
push
add
mov
in
inc
dec
add
das
pop
mov
dec
push
cmp
pop
sete
push
fildl
clc
push
es
push
aad
xor
sahf
aad
daa
movswl
jg
cs
mov
push
fldt
jge
idiv
inc
push
frndint
and
dec
dec
lods
cmpsb
std
mov
in
sub
test
xchg
popa
pop
mov
js
pop
loopne
add
scas
outsl
int
cmpsl
lea
repz
mov
cmp
push
xor
out
repnz
les
outsb
int3
das
mov
xor
mov
fstpl
cmpsb
dec
or
sub
repz
sti
mov
movsb
fbld
sub
hlt
cmp
lahf
in
cmp
xor
xchg
popa
stos
jle
mov
nop
mov
movsl
hlt
insb
jp
rcr
inc
ret
loop
push
xor
pop
ds
adc
cmp
into
push
popf
sub
movsb
lods
mov
mov
adc
adc
add
ja
pop
ret
lock
fucom
jecxz
dec
adcl
mov
aas
sub
mov
imul
add
enter
daa
mov
push
fnstcw
sub
cmc
aam
repnz
xor
leave
mov
dec
icebp
xor
jecxz
out
mov
rol
inc
cmp
imul
adc
rolb
shrl
fmull
sub
or
test
stos
cmp
push
xor
jmp
loop
frstor
xorb
pushf
popf
sarl
int
pop
ds
shll
shl
test
loope
shrl
mov
pop
jb
cwtl
or
and
andl
frstor
inc
daa
cs
jg
in
adc
pop
gs
les
flds
mov
das
cli
icebp
mov
std
ja
cmpsb
ljmp
dec
int
pusha
cltd
mov
or
je
test
and
pop
cld
mov
xchg
mov
jno
jl
ss
jle
cmp
stos
sbb
repz
sbb
in
cld
aad
pop
mov
dec
repz
cmpsb
xchg
shll
inc
push
xor
sti
mov
mov
inc
rcrb
and
fs
cmc
jae
xchg
adc
pusha
fcompl
stos
negl
fisubs
mov
scas
xchg
dec
xor
sbb
pushl
scas
test
cmp
cli
jo
movsb
pop
inc
scas
jno
and
mov
jb
mov
fs
enter
sbb
dec
movsl
adc
notb
push
addr16
mov
jnp
mov
and
xchg
rorl
dec
ljmp
mov
dec
pop
mov
test
int
pusha
push
xor
pusha
pop
mov
push
aaa
mov
loope
scas
mov
push
sub
pop
ret
cmp
pushf
cmp
loopne
mov
adc
xchg
cwtl
dec
push
adc
in
out
outsl
push
ljmp
in
sub
mov
cmc
sahf
sub
sub
mov
and
jnp
aas
stc
sub
cmp
inc
pop
fistps
cmpl
ds
adc
or
sbb
fistl
dec
hlt
cmp
jnp
movsb
xor
lret
jg
shr
mov
jb
pop
and
sub
in
mov
pop
jp
in
test
iret
ret
dec
push
pusha
into
test
pop
jb
jb
xor
pop
stc
lret
push
or
sti
adc
imul
lret
adc
out
arpl
cmp
into
pop
js
addr16
int3
ljmp
xchg
movsb
xchg
xlat
jmp
in
loopne
add
div
lods
loope
into
mov
dec
dec
popa
stc
mov
mov
scas
dec
loop
pop
sysexit
jns
mov
hlt
xchg
imul
sbb
repnz
arpl
dec
shlb
insl
sub
xor
xor
aaa
shlb
cmp
rcll
add
lods
cmp
xor
fdivl
mov
xchg
jno
jge
sahf
sub
sub
mov
fprem
adc
xor
inc
scas
or
shrl
sub
mov
pusha
arpl
cmp
insl
data16
xlat
or
mov
xchg
test
sub
loopne
imul
xor
push
mov
push
push
movsb
scas
mov
adc
ds
xchg
repnz
hlt
fidivl
xor
sbb
insl
push
int
mov
les
pop
mov
mov
sub
inc
sub
jne
hlt
divps
vmread
and
cmp
mov
mov
xor
dec
mov
popf
cmp
mov
imul
insb
xchg
pop
out
push
nop
aaa
sub
xor
hlt
js
fldpi
out
inc
leave
mov
and
aam
jns
ficoml
adc
sti
adc
pushf
fsts
sub
adc
test
cmp
ja
jne
pop
or
pop
jmp
push
mov
sbb
adc
dec
mov
ror
or
scas
sub
and
add
pop
daa
xchg
mov
nop
xchg
jecxz
dec
push
fucomi
rcll
mov
pop
sbb
push
fidivrs
mov
iret
repz
jl
mov
test
mov
jle
add
insb
mull
fpatan
daa
mov
push
cltd
cmpsl
aas
orl
or
das
dec
leave
and
cmc
push
sub
mov
dec
add
and
nop
cmp
mov
stos
push
adc
lret
adc
mov
mov
fidivs
xor
add
movsl
adc
out
shll
clc
pop
out
outsb
push
dec
push
dec
out
sub
insl
dec
pop
dec
das
pop
mov
and
xchg
loop
jecxz
add
or
rcrb
cmp
sub
mov
xor
lods
xor
inc
inc
movsb
mov
mov
pop
push
xchg
mov
and
jmp
xchg
sbb
sbb
aaa
insl
push
xor
lcall
insb
dec
test
out
inc
popf
fsubr
jl
mov
xchg
push
fiadds
inc
cmpsb
scas
jle
or
scas
scas
cmp
mov
add
adc
or
cmpsb
add
shrl
ds
mov
lret
xchg
fcmovnu
sahf
cmpsl
sub
cmpsl
es
pop
adc
test
inc
mov
mov
mov
icebp
shl
mov
sub
jg
popf
add
stc
lods
loopne
cwtl
cmp
mov
add
mov
test
push
pop
inc
or
lcall
inc
add
fisubs
outsl
and
icebp
in
dec
cmp
pop
pop
in
lret
mov
cld
js
repnz
out
subb
pop
adc
push
add
lds
xchg
fisubs
fldenv
or
push
mov
cltd
imul
loop
and
inc
loope
jge
dec
dec
add
lods
mov
jo
jle,pn
sbb
insl
xor
test
pushf
das
fwait
add
insl
notl
aas
jae
xor
and
xchg
iret
insl
xchg
push
xchg
mov
data16
call
push
adc
add
leave
ja
add
mov
in
movsb
gs
cmpsl
arpl
push
rorb
push
jl
cmp
loop
js
fbstp
xchg
imul
add
movsb
pop
mov
int3
push
mov
testl
push
sarb
popf
or
dec
clc
mov
rolb
inc
xor
hlt
jbe,pt
cmp
mov
call
cmpsb
outsb
mov
mov
dec
mov
mov
mov
mov
jp
ffree
sbb
dec
fcompl
cmpsb
cwtl
or
adc
lret
mov
jns
imul
dec
mov
fbstp
fsubrl
sti
popa
xchg
orb
add
pop
mov
cld
lret
adc
add
pop
add
in
cmp
leave
mov
arpl
pop
jp
idiv
imul
nop
movsb
inc
std
pop
in
fmuls
and
jns
inc
fidivrs
xor
pop
popa
jge
push
stos
aad
inc
js
out
aam
rcrl
lods
xchg
mov
mov
fiaddl
lret
lods
sti
dec
xchg
sub
add
call
test
addr16
cmp
dec
add
stc
loop
cmpsb
mov
stc
mov
pop
jno
mov
into
es
push
aad
mov
xchg
loope
cmp
push
push
dec
pop
scas
pushf
push
daa
pop
shrb
adc
dec
sbb
cmp
mov
fidivs
imul
ret
mov
enter
mov
mov
icebp
and
out
into
in
cmp
adc
rorb
jmp
popf
lods
sub
adc
pop
flds
xchg
push
cmp
cs
sti
sub
fucomi
js
pop
adc
mov
xchg
mov
inc
jmp
shrl
add
jl
mov
ljmp
in
mov
add
sub
jb
pusha
fs
call
inc
push
cmp
xor
inc
loop
xchg
aam
movsl
in
xchg
pop
pop
lods
xchg
add
cmp
pop
and
cmc
mov
push
dec
les
out
adc
lahf
das
pop
stos
sub
comiss
clc
popa
rorl
out
dec
das
mov
jae
outsb
mov
mov
repz
addr16
das
stos
out
out
cmp
jge
sub
mov
xchg
fists
fwait
sbb
xchg
mov
fwait
adc
inc
pop
and
lds
mov
xchg
push
mov
mov
out
sbb
sbb
pop
daa
lret
push
fs
aas
pop
dec
dec
push
repnz
xchg
sub
inc
mov
cmp
jb
or
mov
faddp
lods
xchg
out
fdivs
push
mov
pop
xchg
add
movb
and
out
jb
xor
repnz
dec
imul
mov
out
push
popl
mov
scas
loope
and
testb
push
shlb
cli
push
or
icebp
ret
in
fdivs
mov
jmp
in
test
mov
daa
mov
shll
je
cli
outsb
imulb
loope
ret
xchg
hlt
mov
and
and
or
scas
adc
pop
dec
into
fdivrp
out
mov
outsb
sub
pop
shll
rcrl
sub
sub
and
cmp
cmp
mov
movsl
xor
aaa
lret
ljmp
imul
stos
push
mov
cld
adc
sbb
movsb
xor
addb
dec
out
mov
mov
popf
sbb
jmp
ja
pop
mov
aam
push
mov
add
xchg
loop
mov
or
jecxz
xchg
shlb
sbb
sbb
cwtl
lds
jnp
flds
negb
mov
dec
aad
jnp
and
jne
mov
push
popf
icebp
negb
das
filds
pop
rclb
lret
es
lret
aas
xchg
das
ret
adc
jno
push
mov
jae
jne
mov
inc
xchg
or
cmpsb
xlat
dec
test
jp
jmp
fwait
ret
sub
ds
sub
mov
bound
cmp
jmp
xchg
push
int3
push
xor
arpl
rorl
movsb
xor
fimull
dec
sahf
ljmp
mov
pop
lock
ljmp
push
add
xchg
imull
mov
sbb
and
pop
loop
aam
stos
aaa
add
aaa
xchg
stc
ds
daa
jae
shlb
mov
push
por
sbb
jnp
sub
push
je
testb
mov
xchg
jbe
fsubs
mov
adc
aad
cs
lret
jecxz
mov
xchg
and
and
outsl
pop
xchg
roll
cltd
pop
adc
icebp
out
ds
fistpll
dec
or
inc
and
sarl
pop
nop
mov
leave
hlt
mov
es
cmpb
xlat
in
mov
movb
sub
sti
sbb
mov
es
sbb
loopne
cmp
xor
sub
and
call
pop
sbb
jp
or
les
mov
and
adc
cmc
cmpsl
std
dec
ret
lahf
into
addr16
mov
mov
outsb
dec
adc
pop
or
loop
out
pop
mov
inc
cltd
fcmovnbe
lods
push
mov
jno
outsl
add
push
aam
jg
push
pusha
inc
je
pop
rorl
sbb
ja
outsb
popl
xor
dec
dec
insb
adc
dec
loope
imul
and
and
rolb
xor
dec
sub
vcvtps2dq
lahf
fsub
push
add
or
mov
ds
repnz
dec
test
fimuls
xchg
mov
fmul
cmp
pop
popf
mov
jmp
addr16
test
mov
dec
jle
sti
je
ret
xchg
mov
dec
push
popf
pop
shlb
shrl
push
cmp
sub
and
data16
sbb
add
xchg
int3
xchg
xchg
and
adc
mov
mov
insb
and
test
adc
in
out
mov
sub
push
cltd
stos
daa
cmp
orl
or
out
ds
roll
stos
sbb
add
xchg
in
dec
sti
xor
rolb
and
push
ja
or
leave
pop
call
arpl
lds
pop
jnp
imul
xchg
cmc
add
push
out
push
repz
out
icebp
mov
in
nop
rcr
and
mov
call
mov
data16
lcall
adc
jmp
mov
imul
adc
addr16
shrl
sub
mov
rolb
inc
push
subb
push
cmp
jo
cmpsl
imul
mov
pop
cmpsb
call
mov
lea
push
hlt
push
sub
pop
adcb
inc
repnz
mov
lcall
and
inc
in
lock
cmp
pusha
pop
fldcw
sbb
popl
not
sti
xchg
xor
and
cmp
scas
cmpsb
dec
lds
insl
shl
mov
jo
out
test
inc
mov
lret
xor
mov
imul
sub
jle
dec
xlat
sub
daa
push
mov
pop
inc
imulb
mov
cmpsb
scas
dec
mov
cmp
mov
dec
aaa
in
in
jns
movsl
adc
and
stos
bound
js
adc
add
mov
pusha
sbb
mov
outsb
shrl
add
out
mov
and
or
jg
in
cld
sbb
inc
xchg
xchg
xchg
lret
push
pop
dec
xor
cmc
mov
dec
add
lods
dec
sbb
or
pop
and
xor
test
aad
or
std
cmp
mov
xor
or
inc
int3
inc
jg
push
addr16
daa
dec
xchg
xchg
insl
fcmovb
imul
fnstsw
leave
push
sub
dec
xlat
aam
mov
sub
addr16
in
mov
and
mov
mov
jmp
les
pop
xchg
add
mov
push
sbb
lock
push
xlat
adc
add
sbb
jmp
dec
dec
push
pusha
lahf
leave
push
in
fs
lods
call
push
push
mov
sub
fmul
out
js
rcrl
test
and
inc
mov
cmp
jb
pop
outsb
jle
and
pop
or
in
idivl
insb
loop
pop
jne
sarl
ljmp
mov
xchg
into
cmpsb
xchg
xchg
imul
mov
fdivs
test
add
outsl
lock
adc
insb
fwait
sti
leave
lods
mov
xchg
in
fldl
lcall
mov
dec
iret
add
sub
aas
daa
outsl
gs
mov
stos
and
ja
jg
adc
mov
pop
pop
f2xm1
cmc
jns
or
dec
pop
or
loope
push
pop
cmp
out
out
rclb
mov
sub
push
sbb
or
fsubr
cmpsb
push
fnstcw
xchg
sbb
movsb
fsubs
cltd
shlb
call
pop
js
pop
jb
add
in
jb
ficoms
xor
xchg
aas
mov
push
lods
xor
in
loopne
fistl
lods
clc
daa
clc
lcall
nop
mov
mov
cmp
dec
add
xlat
push
add
mov
or
push
pop
hlt
inc
inc
sti
iret
jnp
adc
or
loopne
mov
jno
mov
xchg
jno
fisttpl
ds
outsb
int3
cmpsb
leave
push
fisttps
mov
fadd
out
aaa
fs
pop
ficomps
aad
rorb
fucomip
dec
out
pop
pop
jle
mov
cwtl
dec
add
cmp
fistl
jnp
inc
push
les
cmp
loope
mov
and
mov
mov
pop
sub
loopne
int3
xor
xchg
int3
dec
sub
popf
or
cld
mov
sbb
jl
rorb
push
test
and
pop
es
dec
cmc
ss
loope
dec
ljmp
mov
pop
in
pop
jo
mov
and
test
sub
pop
movsl
inc
in
mov
xchg
subl
les
addr16
out
mov
lcall
test
inc
push
cmp
ss
mov
cmpsb
and
jb
jne
popl
out
mov
xor
bound
inc
inc
jne
xorb
cmp
xor
std
aam
addr16
shlb
inc
xlat
jp
cmp
scas
fprem1
out
mov
insb
scas
repz
jmp
adc
scas
pop
daa
outsl
push
jecxz
mov
mov
mov
cwtl
hlt
xchg
adc
jns
sbb
cmc
cltd
dec
mov
or
movsb
pop
add
inc
pop
aaa
adc
jae
js
mov
sub
jg
xchg
adc
sbb
mov
inc
mov
push
pop
repnz
add
ljmp
or
jp
mov
leave
scas
cmp
shrl
mov
sbb
scas
or
jbe
lcall
inc
loope
sub
dec
sub
inc
lcall
jge
sub
movsb
sbb
cmp
push
movsl
addr16
xchg
lahf
negb
mov
repnz
lret
shrl
ret
orb
push
rcrb
xchg
enter
xor
jns
cs
jnp
lcall
mov
out
sbb
fs
lahf
out
jne
pop
and
pop
cs
mov
xchg
and
test
out
mov
pop
movsb
cmpsl
lea
sbb
xchg
pop
add
mov
xchg
xor
add
lret
and
fdivrp
dec
fs
sahf
or
test
arpl
mov
sub
mov
mov
xchg
jmp
ret
sarl
test
dec
jmp
dec
and
cli
out
out
movl
insl
inc
in
and
push
movsb
ret
push
push
jecxz
and
daa
out
mov
cwtl
aas
jg
pushf
jbe
add
ds
std
or
jl
cmc
mov
rol
sahf
dec
xchg
outsb
dec
movsb
imulb
lcall
pushf
ss
xor
mov
jae
cmp
xor
test
cmp
mov
loopne
negb
shll
inc
rol
cs
mov
in
inc
sub
jns
mov
std
mov
cmpsl
xor
dec
les
adc
and
subl
test
and
scas
out
xchg
loope
and
hlt
and
add
push
sahf
jb
lock
mov
adc
and
shll
in
leave
mov
jmp
push
or
dec
sbb
cmpsb
in
icebp
out
out
mov
imul
jnp
push
inc
pop
sub
add
xor
or
xchg
and
lds
stos
cmp
out
daa
xchg
popf
xchg
adc
pop
inc
sub
nop
test
cmp
dec
ds
push
lret
jb
fisttps
aaa
mov
lods
mov
jp
mov
and
sbb
insb
sub
mov
jbe
pop
add
lret
fidivl
xorl
sbb
push
mov
mov
add
jp
sbb
mov
push
addr16
push
stos
inc
loopne
jnp
add
add
adc
mov
dec
inc
sub
cmp
push
mov
sbb
add
or
ret
xorl
xchg
adc
icebp
daa
xlat
lret
clc
adc
jo
aaa
rcrb
jmp
add
mov
mov
outsb
mov
fmulp
jnp
scas
arpl
setae
xor
push
fnsave
lcall
clc
jb
push
cld
xchg
mov
add
fadds
push
push
popf
popa
push
jae
jno
orb
adc
in
pop
mov
daa
addr16
pop
cli
mov
mov
pop
lea
cmpsb
xchg
jb
sub
loop
movsb
and
loope
or
repnz
out
push
dec
notl
loope
mov
or
xor
adc
stos
stos
jge
push
inc
jle,pt
insl
mov
push
inc
cmc
mov
sarb
xor
sub
in
bnd
inc
xor
add
jg
imul
jns
insb
cld
fcomps
in
adcl
pop
addl
or
ffreep
xchg
and
mov
xchg
sbb
cmc
stos
or
pushfw
pusha
pushf
inc
fsubrs
js
mov
and
sub
jmp
or
mov
push
sub
insl
add
xchg
movd
sbb
insl
inc
sbb
xchg
push
iret
stos
scas
sub
pusha
sbb
iret
dec
inc
add
pop
add
dec
jmp
pop
inc
xor
lahf
jge
inc
dec
sbb
or
jg
dec
scas
dec
sbb
dec
sub
push
jb
stos
pop
and
addr16
sub
mov
add
aad
aam
push
int
stos
test
xor
rcrl
push
lock
adc
jge
xlat
into
mov
xor
or
js
cmp
mov
loopne
fstps
inc
lds
and
je
cmp
cltd
or
lea
pop
sub
xor
fcomi
ffree
arpl
sub
fldt
int
xor
hlt
daa
je
rorl
add
imul
inc
pop
mov
outsl
sub
fstps
xor
pushl
movsl
cmp
and
dec
out
fwait
aam
loopne
scas
jne
add
adc
subl
sbb
jmp
or
jmp
push
jmp
push
lret
dec
add
xlat
call
inc
daa
mov
jmp
les
insb
and
or
and
aad
xchg
pop
mov
xor
pop
inc
pusha
test
jne
jno
add
mov
mov
inc
xor
jl
int
sbb
adc
jno
xchg
ja
add
sahf
jnp
inc
lcall
xlat
cwtl
sub
mov
xchg
out
add
shlb
mov
ret
push
and
sbb
leave
add
sbbb
mov
aas
pop
lahf
loop
fcmovb
jge
inc
adc
xchg
jns
dec
mov
mov
mov
movsl
sbb
mov
lock
adc
je
insb
inc
data16
jp
cltd
ffreep
fnstsw
outsl
sub
lret
adc
fs
or
xchg
fwait
xchg
push
sbb
xlat
ja
mov
call
cwtl
or
psrld
xor
and
cli
add
adc
aaa
mov
jae
out
lds
pusha
sub
fimull
dec
scas
hlt
dec
mov
fsubrs
or
mov
dec
getsec
mov
xchg
addr16
in
or
inc
sub
sbb
test
lds
in
pop
push
mov
stc
xchg
sub
mov
sub
dec
in
sti
mov
fldl
clc
or
icebp
sub
pop
hlt
xchg
std
jmp
jae
dec
shlb
mov
jecxz
mov
push
mov
add
jns
xor
xchg
and
xor
lock
aad
scas
sahf
mov
and
in
fistpl
stos
xchg
sti
scas
add
pop
mov
adc
jp
adc
mov
xchg
ljmp
and
adc
push
push
shr
xor
rorl
sub
sbb
jns
outsb
stos
and
add
outsl
push
xchg
pop
aad
cmp
push
lods
sbb
not
push
into
mov
shll
loopne
shr
daa
jns
dec
jno
xchg
lret
cmc
inc
add
push
push
cmp
incb
inc
inc
mov
outsl
mov
dec
inc
andb
out
pop
xor
push
lea
and
cmp
pop
jno
sbb
mov
mov
fs
pop
shll
cmc
jns
mov
clc
testb
add
adc
sub
lahf
jg
pop
xor
out
add
mov
stc
out
cmpsb
mov
nop
dec
and
icebp
add
out
cmp
shll
flds
xchg
xor
mov
push
movsl
test
bound
sub
mov
lcall
add
aaa
addl
push
sti
outsb
dec
cli
jp
jecxz
mov
push
pop
add
and
stc
inc
dec
mov
jns
popf
jp
test
lcall
fwait
mov
imul
mov
lods
into
insb
xor
adc
xchg
add
mov
mov
sbb
or
ret
out
popa
cltd
xor
jnp
js
addb
icebp
aad
or
mov
in
jns
leave
int
enter
lret
push
jo
test
cmp
xchg
mov
addr16
push
xchg
push
jbe
and
sub
loop
pop
aam
in
xchg
xchg
jno
cli
mov
in
ret
xchg
test
divb
sub
arpl
lock
ja
push
dec
js
sub
ret
mov
lcall
jne
xchg
pop
leave
jp
repnz
ds
outsl
sbb
shll
stos
lods
add
mov
mov
inc
mov
negb
push
mov
push
adc
in
das
adc
pop
or
je
repz
in
test
jmp
mov
mov
imul
fdivr
xchg
sbb
and
mov
outsl
lods
lds
in
loopne
jnp
aas
pop
fcmovb
pop
jmp
or
push
ljmp
jmp
aad
fs
push
popa
in
push
jge
push
sub
adc
lock
xor
and
sub
aad
cwtl
addb
and
pushf
cmpsb
inc
inc
xor
dec
cs
mov
add
icebp
gs
sahf
inc
cmpsl
and
jae
adc
addl
outsb
sbb
and
push
fdivrp
mov
loopne
div
dec
sub
pop
push
in
iret
jmp
sbb
pop
lea
xor
xlat
and
stos
mov
adc
loopne
sub
mov
lcall
iret
mov
add
shl
adc
in
in
xor
and
jl
mov
sbb
movsl
and
jle
push
outsb
inc
dec
stc
call
and
divb
push
cmp
cmp
fucom
test
xor
xchg
enter
push
loop
sub
inc
fsincos
add
xchg
add
mov
xchg
inc
repz
or
mov
adc
aaa
inc
mov
rcr
xor
mov
cmp
in
out
or
mov
mov
out
sti
sbb
test
sbb
hlt
pop
adc
adc
add
jmp
lret
sarl
movsl
mov
push
pusha
and
sbb
inc
pop
push
jg
pushf
out
or
add
sub
rcrl
mov
popa
or
andb
mov
sbb
icebp
mov
inc
xchg
pushf
insl
sti
pop
lret
stc
cmpsb
xor
dec
pop
roll
jo
adc
ret
jns
or
add
lahf
mov
popf
and
jle
sbb
iret
fbstp
jp
std
xor
dec
pop
lea
ffree
or
add
pop
ds
pop
popa
jbe
fmuls
dec
xor
ds
inc
daa
bound
mov
jo
std
stos
sar
xor
pusha
jns
adc
js
out
sbb
cltd
sub
lret
mov
cltd
or
mov
stc
or
cmpsl
xchg
fbstp
push
dec
sbb
xorb
mov
pop
xorl
jle
repnz
imul
fimull
mov
out
addl
dec
xchg
shrb
repz
std
adc
or
mov
out
aaa
addr16
pop
enter
stos
xor
and
and
jg
jp
stos
shl
aam
xchg
xchg
stc
jmp
hlt
xchg
jp
aad
repz
inc
and
mov
aas
movsl
pop
mov
jmp
xchg
cld
popl
movsl
pop
outsl
loop
mov
out
shr
sub
or
inc
js
fnsave
xchg
xor
xor
movsl
loop
inc
adc
xchg
dec
pop
pushf
mov
std
and
sub
pop
testl
stos
cltd
popa
pop
stos
sbb
mov
xchg
aaa
fwait
lods
fisttps
fidivrs
arpl
das
rolb
insb
fwait
xor
pop
dec
mov
sub
inc
and
pushf
sbb
gs
push
lret
mov
xchg
sub
xchg
dec
pushf
daa
imulb
pusha
push
add
lret
inc
push
mov
or
cmp
cvtps2pi
lods
in
pop
jmp
test
stos
test
sti
ljmp
into
icebp
dec
fwait
divl
push
cmp
mov
pop
adc
dec
arpl
xor
lret
je
rcr
jmp
push
mov
pusha
cmp
add
mov
gs
sbb
mov
push
lods
testl
adc
stos
clc
push
or
mov
jb
icebp
fistpll
pushl
aam
and
ja
and
pop
jmp
fists
imull
add
sub
mov
xor
icebp
push
adc
ret
roll
mov
pusha
xchg
test
pop
testb
push
mov
jp
jns
mov
imul
addr16
inc
cmp
and
movsb
out
sub
repnz
sbb
adc
sbb
mov
lahf
fnstenv
cld
xchg
aaa
mov
xorl
ljmp
sbb
ds
fdivl
daa
jo
in
inc
xor
aam
arpl
test
pop
gs
fwait
mov
sub
rolb
scas
and
shl
jmp
or
mov
jne
icebp
push
lcall
jl
lret
scas
push
inc
and
shrl
inc
dec
inc
loopne
roll
xor
mov
and
and
flds
stc
mov
sub
cld
mov
lods
aas
pop
and
mov
ja
lret
adc
mov
xchg
cs
xchg
movsl
add
adc
xchg
push
aas
fs
push
lock
gs
bound
lock
and
pop
jno
imul
pop
outsb
mov
pop
fs
in
pop
enter
xchg
jmp
push
mov
push
mov
sub
add
jne
or
mov
dec
bound
cmp
dec
mov
sub
call
sbb
das
mov
dec
sbb
inc
inc
data16
mov
sti
push
scas
out
in
mov
jg
cmpsb
or
mov
outsl
in
push
xor
mov
adc
pop
cmp
sti
ljmp
jmp
fnstcw
pushf
mov
fwait
cwtl
int
enter
jp
imul
adc
sub
adc
mov
mov
inc
mov
fsubrl
pop
ss
mov
cmp
sub
lds
inc
inc
push
jb
jmp
fyl2xp1
outsl
dec
xchg
jge
adc
mov
cmp
stos
rcl
jo
mov
sbb
push
xlat
gs
arpl
imul
lcall
jb
mov
push
adc
mov
int
aas
sbb
pop
inc
dec
lcall
sbb
push
shl
ljmp
lret
lret
mov
adc
jns
loope
mov
les
inc
ljmp
daa
es
clc
scas
hlt
dec
jbe
and
cmp
sbb
jmp
and
imul
fldl
mov
jo
mov
or
xchg
jp
pop
aad
add
pop
cmp
add
mov
arpl
lcall
or
cmp
loop
inc
and
sti
hlt
pop
cmpsl
dec
jne
push
mov
jp
pop
cld
insl
xchg
movmskps
jl
xor
sbbl
movb
fnsave
fsubr
and
push
testl
mov
jp
test
xor
inc
fwait
mov
cmpsl
cli
lods
sub
sbb
iret
aas
repz
out
jne
subb
arpl
std
ja
cli
out
shrl
xor
insb
pop
ret
pop
mov
xchg
sbb
in
mov
pop
cmpsl
jne
popf
mov
dec
lret
push
jg
cmp
test
das
mov
or
fisubs
popf
xchg
mov
fisttpl
xchg
mov
insl
pushf
pop
xchg
add
inc
and
push
inc
loop,pn
stc
sbb
mov
pop
ljmp
jmp
stc
and
ds
mov
addl
push
push
sbb
ljmp
cmpsl
aad
out
lock
cmp
pop
lcall
lock
jl
imul
es
xor
shll
xor
push
jl
test
imul
sbb
sbb
cmp
or
pop
iret
or
push
xor
insl
pop
pop
cmc
mov
repnz
push
out
dec
lds
inc
cltd
enter
popf
adc
aad
test
cs
mov
frstor
int3
pop
aaa
add
loope
subb
sub
rcrb
mov
jo
lods
fstpt
or
or
icebp
fstl
stos
sbb
mov
test
stos
fs
lea
test
rcrl
adc
lods
cmc
cmpsb
aad
imul
sub
leave
push
in
lcall
iret
mov
test
push
or
mov
push
push
shll
ret
xchg
push
xor
ljmp
add
aam
pop
in
inc
jb
push
std
aad
jecxz
push
enter
mov
clc
pusha
hlt
scas
pop
out
cmpsb
shl
cmp
jbe
add
jmp
lea
add
cmp
outsl
leave
pop
mov
icebp
or
sahf
lret
lods
das
cltd
xchg
cld
fldenv
push
or
cwtl
out
jbe
sbb
inc
dec
inc
in
int3
push
scas
jg
in
test
push
jp
pop
scas
sti
sahf
in
push
jae
imul
push
sub
push
sub
jb
out
mov
lods
leave
test
or
xor
outsl
push
inc
push
mov
popa
insl
sahf
sbbl
test
sbb
repnz
fbstp
push
lds
shrb
lock
mov
mov
push
test
sbb
lcall
movsw
inc
out
int
jbe
sarb
xlat
hlt
js
cmp
stc
or
int
aad
mov
sub
test
mov
ss
mov
jno
push
dec
add
cmpsb
aad
push
aam
adc
mov
dec
fmull
inc
pop
imulb
int3
sbb
pop
ficomps
stos
sar
mov
movsb
scas
dec
cmp
jle
cmpsb
push
xlat
sahf
in
jo
add
flds
into
sbb
mov
mov
lock
jg
sbb
leave
adc
adc
mov
jnp
push
push
jb
mov
test
push
jl
push
inc
sbb
jne
cld
in
in
repz
cmp
mov
cmpb
out
aad
jmp
jge
inc
pop
inc
mov
mov
test
adc
rorl
jl
outsl
add
jle
jg
out
xchg
xor
sahf
popl
mov
stos
sarl
inc
cmp
subb
dec
out
loop
inc
sub
sub
or
into
in
loopne
hlt
dec
sub
push
inc
or
add
pop
push
jge
mov
pop
xchg
js
jbe
xor
enter
mov
outsb
int
scas
loop
ss
idivl
frstor
jbe
mov
mov
in
pop
cmp
stos
outsl
xor
jmp
adc
cmpsl
sub
xchg
fstps
sbb
xor
xorl
popf
mov
inc
mov
test
or
mov
and
cmp
lods
movsl
cmc
mov
add
outsb
jmp
sub
movsb
jecxz
loop
jb
mov
xchg
loopne
jp
testl
jns
jmp
push
lahf
jmp
cwtl
nop
out
mov
cmpsb
fstpt
and
push
xchg
xchg
stos
pop
jo
or
movsb
out
shll
add
iret
push
cmp
dec
pop
sbb
sub
mov
rorb
icebp
cwtl
mov
insb
push
sbbl
test
xchg
movsl
mov
cmc
sbb
test
sarl
cmp
out
or
mov
icebp
ss
inc
inc
insl
rolb
pop
cs
xor
jno
add
das
pop
jmp
outsb
cmpsb
nop
xor
and
add
dec
mov
test
insl
call
fwait
jle
jae
pushf
xlat
mov
mov
sub
cmp
fisubrs
xchg
sbb
and
pusha
jl
inc
xlat
jle
cmc
pop
cmp
mov
imul
outsl
lds
cmpsb
mov
lcall
popl
cmc
jmp
arpl
sub
pop
or
hlt
pop
sti
xor
ret
cs
lea
mov
mov
xchg
out
push
jmp
enter
jl
xor
mov
add
aad
xchg
dec
sbb
popf
fs
fsubrs
mov
cmc
cmovs
std
sub
or
movups
xor
push
fsubr
shrl
mov
enter
ret
inc
je
mov
and
mov
and
add
mov
iret
dec
enter
dec
adc
push
jl
mov
cli
pop
cmpsl
lods
ljmp
jnp
mov
fisubrs
repnz
push
std
andb
adc
test
enter
xor
into
jp
repnz
in
dec
jns
cltd
dec
inc
movsl
andl
aaa
leave
sub
jo
pop
xchg
add
jo
lcall
daa
mov
fsubrl
mov
cmp
inc
sub
insb
or
sub
jle
ja
mov
xor
xchg
mov
jmp
jp
adc
fwait
mov
jle
jp
xlat
lods
jae
jbe
jmp
dec
pop
pop
fldenv
jnp
popa
cs
cs
movsb
push
cmpsb
dec
stos
sub
push
lds
dec
inc
clc
or
add
mov
int
pushf
add
out
or
xchg
bound
ljmp
jo
sub
push
pop
jmp
imulb
popf
cmp
sbb
pop
pop
push
nop
jp
dec
xchg
adc
pop
or
xlat
mov
xchg
dec
outsb
hlt
mov
fcompl
sub
adc
add
out
xor
fisttps
fwait
sti
dec
mov
cs
ss
clc
cmp
aad
mov
lods
jecxz
and
mov
mov
loop
stos
test
mov
ss
or
cmp
or
inc
dec
push
xor
cltd
shll
adc
sbb
lods
mov
lret
mov
test
repnz
mov
imul
mov
ret
pop
scas
call
dec
push
and
mulb
adc
lods
inc
pop
dec
ret
repz
cmpsb
inc
sub
dec
aam
jno
lea
inc
outsb
repz
lcall
std
adc
mov
mov
inc
ja
and
jo
nop
ficoml
dec
imul
push
gs
ret
mov
pop
jo
int
pop
push
fisubrl
in
jno
repz
aam
aas
dec
insb
jecxz
loop
mov
cmp
adc
fsubr
popa
push
or
int
mov
fs
mov
nop
out
data16
lret
shrb
inc
push
push
mov
mov
enter
lret
pusha
push
xor
filds
mov
cmp
dec
ret
shll
mov
fwait
mov
out
cmp
adc
insb
adc
das
adc
sti
adc
sub
inc
ret
cmpsl
dec
dec
mov
dec
fnstenv
divb
or
xlat
stos
jns
cmp
or
pop
repz
push
xorl
cmpsl
mov
stos
mov
insb
lock
icebp
mov
dec
div
outsb
paddq
jecxz
push
cwtl
shlb
jbe
mov
inc
in
jnp
ret
cmp
pop
js
and
xchg
imul
aas
and
fwait
mov
imul
jmp
mov
call
bound
xchg
neg
xchg
test
and
push
sub
pop
mov
push
in
cmpsl
ja
jo
arpl
mov
fnstenv
push
sub
xchg
or
aaa
sbb
and
popa
rclb
jo
js
scas
aad
jne
cltd
mov
je
pop
add
push
outsl
and
in
fists
and
std
add
sub
shrl
repz
pusha
pop
out
adc
sub
and
jnp
sub
push
je
sarl
jecxz
push
cli
push
out
test
sarb
mov
add
sti
mov
test
into
sub
rcll
jns
mov
xchg
mov
or
adc
repnz
inc
test
ljmp
lea
ficoms
xchg
pop
pop
cmp
push
and
out
jb
movsb
and
adc
sarb
jno
sub
movsl
out
jne
rorb
es
addr16
testl
inc
cwtl
and
or
lea
iret
dec
pop
fwait
mov
and
lahf
push
out
mov
pop
adc
xorb
or
addl
fcomi
sbb
mov
inc
mov
fwait
shl
sbb
dec
mov
adc
lds
adc
cmp
incl
and
out
cs
scas
jo
mov
pop
cmpl
cli
clc
inc
lcall
xor
mov
xchg
sub
in
imul
into
gs
ficoms
cmp
push
mov
xchg
pusha
mov
pop
in
out
movsl
sub
xor
stos
movsb
aad
mov
lods
das
hlt
sbb
fidivrl
cmp
and
adc
and
mov
xchg
shl
add
mov
sbb
imul
leave
push
call
push
push
dec
mov
inc
pushf
xchg
scas
inc
adc
out
mov
ja
test
test
fidivs
mov
xchg
hlt
sbb
std
in
adc
aam
int3
push
das
loop
mov
pop
dec
das
adc
mov
jg
mov
jmp
jae
inc
sahf
clc
mov
test
test
mov
loop,pn
mov
std
push
push
scas
jo
jg
cli
ja
pop
rcll
push
add
int
insl
jbe
jmp
add
and
mov
pusha
stos
inc
icebp
ds
mov
pushf
js
nop
sbb
pop
dec
insb
sti
fstpl
xor
in
push
adc
jp
ret
push
inc
scas
jmp
popa
movsl
xor
adc
jmp
inc
cltd
lods
push
dec
popa
xor
add
inc
pop
pushf
dec
sbbl
xlat
decb
ret
in
je
xchg
icebp
dec
mov
adc
or
jle
add
and
movb
xor
sbb
xor
hlt
mov
cmp
cmp
imul
leave
jno
mov
sbb
js
dec
sbb
inc
or
mov
cwtl
pop
and
mov
mov
adc
out
sti
mov
repz
xor
cli
push
pop
insb
mov
imul
push
aam
mov
xchg
xchg
dec
mov
pop
ss
cwtl
arpl
insb
xor
ja
jbe
or
mov
inc
xchg
pop
pmaxub
pop
mov
icebp
push
js
adc
into
or
mov
mov
pop
inc
mov
imul
mov
popf
push
pop
hlt
outsb
jmp
inc
push
and
imul
jns
clc
jno
mov
mov
popf
dec
and
cld
negl
jmp
int3
pop
xchg
xchg
stc
mov
cld
fnstcw
subl
push
addl
rclb
stos
xor
aam
lret
sbb
jmp
loope
jno
ja
stc
mov
xor
in
out
std
push
test
mov
adc
or
jmp
lods
mov
fcomps
scas
aad
fsubp
fs
jge
or
jmp
mov
je
cwtl
sti
or
mov
je
icebp
jg
inc
sbb
nop
adc
inc
in
adc
or
outsl
andl
out
xor
ljmp
cwtl
push
cmp
pop
or
iret
data16
sub
faddl
lds
mov
add
call
add
out
mov
f2xm1
or
sub
jp
pop
or
xor
stos
shlb
ss
ret
outsl
mov
cmp
jbe
or
and
xor
out
xlat
into
mov
movsl
out
mov
mov
cli
cmp
out
imul
inc
aas
das
push
jmp
mov
lret
dec
fsubr
mov
shlb
ret
inc
insl
stos
imul
lahf
incl
inc
faddl
dec
push
inc
xchg
and
adc
dec
and
pop
andb
dec
outsb
cmp
outsl
call
and
xor
push
icebp
mov
test
dec
pop
aam
sbb
icebp
sahf
adc
mov
mov
sti
shr
xchg
mov
add
mov
jmp
push
push
repz
scas
xor
sub
cmp
add
and
jle
xor
dec
sub
jbe
push
pop
sbb
fldpi
mov
mov
fnsave
pop
push
push
scas
xlat
imul
add
enter
leave
ljmp
lret
mov
xchg
or
lods
loopne
jp
jge
sbb
jmp
sahf
xchg
dec
dec
addr16
shl
sub
loopne
cmpsl
arpl
dec
inc
mov
mov
sbb
clc
int
pop
icebp
sub
test
lret
sti
mov
ret
mov
mov
add
push
jo
sbb
insl
test
sub
pop
rep
aaa
negl
add
jno
gs
int3
fstpl
mov
je
push
xchg
fwait
sbb
or
fisubl
inc
xchg
push
pop
shll
clc
or
mov
sbb
adc
mov
pop
repnz
icebp
scas
jb
lret
int
mov
pop
lods
stos
mov
add
or
sub
popf
mov
icebp
mov
jmp
outsb
mov
mov
cmp
insl
shll
push
pop
add
imul
cmpsl
rol
lds
pusha
dec
outsl
cmp
ss
xchg
sbb
lea
pop
dec
cs
movsl
out
adc
sub
mov
aad
test
and
dec
mov
pop
jns
es
push
xor
pop
arpl
mov
fidivrs
mov
xchg
jb
stos
push
push
aad
pop
cwtl
aaa
test
les
leave
pushf
mov
test
data16
lcall
xchg
lahf
pop
mov
sbb
arpl
xor
and
mov
out
sarl
fcompl
jb
push
out
je
cmpsl
sub
fnstsw
scas
xor
xor
ja
call
int3
and
lret
sbb
ss
mov
rcrb
mov
fildl
cmc
cltd
aam
dec
iret
mov
jns
lahf
cmc
test
movsl
movsl
inc
mov
loopne
or
sti
shrb
dec
push
ret
or
aas
adc
flds
hlt
cmp
shrb
inc
in
data16
int3
notl
out
roll
ret
clc
cmc
pop
dec
inc
mov
sbb
loopne
xchg
xchg
dec
mov
arpl
std
fsubs
sub
push
push
cltd
scas
js
xchg
xchg
insl
add
movsb
hlt
adc
scas
lods
xchg
in
sar
or
push
pop
or
pop
gs
out
jns
xor
aad
add
fisttpl
xlat
pop
xlat
and
pop
pop
xchg
or
sbb
daa
ret
push
push
pop
movsl
xor
add
iret
xchg
orb
xchg
adcb
std
fnsave
dec
aam
dec
sbb
iret
inc
xchg
mov
add
cltd
adc
aad
push
iret
sbb
imull
mov
pop
or
inc
add
mov
flds
fsub
mov
insl
or
lret
mov
cmc
xlat
xchg
sub
add
adc
mov
jle
je
dec
insb
or
int3
xchg
inc
jns
and
cltd
sbb
subl
lds
lods
xchg
or
das
jl
fs
outsl
dec
stos
negl
pop
movsl
pusha
cwtl
addr16
pop
cli
cmp
jbe
imul
sub
add
bound
arpl
xchg
cmpsb
xor
pop
pop
xor
mov
sbb
icebp
or
cmp
xchg
iret
pop
jp
lods
adc
sub
lds
push
leave
repz
sbb
fsubr
pop
cmp
test
adc
cwtl
sbb
jecxz
sub
fmulp
pop
xchg
cld
fwait
cs
lret
outsb
xorb
jecxz
add
cmp
out
popf
and
lcall
sub
cmp
test
xchg
cmp
xor
cmpsl
mov
test
push
outsb
adc
push
xchg
pop
mov
inc
das
or
jle
je
mov
ret
movsl
sahf
out
sbb
and
fdivrl
xlat
jb
inc
sub
jg
xchg
gs
call
test
jmp
loopne
mov
je
rclb
mov
and
and
jo
cmp
repnz
pop
shrl
dec
scas
dec
insb
xchg
push
arpl
jo
dec
inc
inc
fsubl
ljmp
fwait
xchg
lock
adc
sub
addb
stos
xchg
pop
in
imul
dec
adc
cs
inc
xor
jge,pt
in
cmpl
imul
in
jns
enter
pusha
and
and
into
add
loop
push
xor
ljmp
jge
jecxz
push
mov
leave
cmp
pop
dec
mov
pop
pop
inc
es
sub
shll
sub
xor
fdivrl
xor
push
arpl
test
sarl
xchg
movsb
pop
jle
loope
mov
lea
inc
cmp
pusha
sbb
in
dec
jl
mov
sub
dec
mov
je
mov
mov
cld
iret
rol
stc
ss
jae
and
jnp
pushf
or
push
jae
scas
add
mov
add
rcrb
push
xchg
lock
xor
lods
ds
pop
mov
mov
jbe
aad
xlat
and
sarb
lods
inc
addl
pop
push
mov
sahf
adc
out
jo
out
push
lret
cmpsl
push
rcrb
inc
xchg
test
adc
aas
or
jnp
pop
sub
test
mov
stc
stc
jo
movsb
pop
ja
mov
enter
inc
fiadds
dec
push
mov
cmpsb
dec
in
fsub
jge
fistl
test
jo
push
aad
mov
nop
pop
inc
sahf
fdivr
add
jns
and
or
movsl
imul
xor
inc
lcall
cmp
push
lcall
nop
mov
sbb
xor
sahf
mov
dec
cmp
call
in
mov
xchg
jns
inc
dec
rorb
add
das
xchg
cmp
fmull
popa
adc
mov
js
mov
int3
imul
xor
push
pusha
int
sbb
adc
repnz
xor
sahf
and
call
mov
loope
push
subb
sub
lret
or
add
outsb
bound
hlt
sbb
ja
mov
ret
pop
in
jle
push
stos
adc
inc
xchg
or
cmp
pop
xchg
insb
sub
push
arpl
out
int
lods
xchg
xor
rorl
fdivrl
mov
dec
out
and
lcall
shrb
jno
adc
inc
lcall
lahf
loopne
out
cmp
xchg
mov
fists
fistps
jp
xchg
fdiv
cltd
je
push
inc
push
mov
icebp
or
daa
fldt
insb
sbbl
inc
lods
hlt
sub
or
pop
stos
jne
mov
and
adc
fwait
mov
stc
ja
jbe
pop
movsb
push
fisttpl
jo
sbb
cmpsl
lds
lea
add
dec
xchg
or
add
add
sbb
sbb
mov
lock
push
ljmp
mov
into
gs
fldl
xchg
inc
cmp
lahf
fidivrs
sub
dec
daa
loope
pop
add
adc
lcall
outsb
ljmp
sarl
and
popf
xchg
cmp
push
add
push
pop
mov
sbb
push
dec
sbb
lods
leave
popa
jmp
mov
outsl
lcall
outsb
mov
fwait
rolb
decl
dec
pusha
add
sub
push
testl
hlt
out
loop
adc
sbb
inc
bnd
mov
shrb
xchg
jns
push
popf
shlb
xchg
add
inc
mov
dec
out
fildll
lods
mov
or
stos
dec
pop
lds
addr16
loope
dec
xor
inc
or
addr16
xor
mov
dec
imul
stc
add
jb
int
cltd
cmp
fidivrs
jge
pop
jge
xor
insl
rcrl
lock
jmp
jmp
dec
jg
xor
enter
or
insl
js
add
mov
jne
repz
and
xlat
mov
mov
and
mov
mov
bound
xchg
or
dec
cltd
lods
push
pop
pop
repnz
aam
push
cmp
fbstp
fisubs
rcr
mov
inc
leave
loop
jne
lahf
fildl
push
repz
negl
mov
xlat
in
push
aam
test
or
insb
xchg
xor
loopne
ret
std
or
pop
cmp
inc
out
call
xchg
adc
push
mov
mov
icebp
imul
ret
std
in
mov
aad
std
in
movsl
dec
or
xlat
mov
repz
imul
sub
popf
fwait
pop
adc
push
inc
cmp
cmp
jl
das
int3
cli
xchg
jne
std
jecxz
stc
pop
inc
mov
fs
imul
push
loop
pop
fs
repnz
dec
clc
dec
inc
gs
and
sub
js
xor
ficoms
sbb
jecxz
xchg
sub
outsl
call
add
cwtl
cmp
mov
jns
xchg
cmp
inc
scas
leave
dec
xchg
es
inc
out
jmp
add
in
dec
int
sbb
mov
int
aas
and
mov
inc
shr
xor
jb
mov
cmp
cmp
push
imul
pop
jle
scas
ret
sbb
cmp
ds
mov
cltd
lods
add
mov
movsb
add
and
adc
lock
leave
in
in
inc
hlt
into
adcl
mov
inc
mov
pop
cltd
pop
jl
je
lock
push
notb
and
push
mov
xchg
add
out
pop
cltd
arpl
xor
inc
ljmp
nop
lds
mov
sub
repnz
push
clc
or
inc
lahf
vmovntps
aam
push
out
xchg
add
sub
icebp
mov
arpl
shr
push
int3
in
loopne
ss
addr16
inc
mov
mov
movsl
jnp
jbe
jae
mov
mov
mov
push
xor
call
xchg
dec
jecxz
js
js
out
push
sub
mov
xor
and
nop
pushf
jmp
pop
test
pop
xchg
push
cmp
xchg
add
mov
loopne
outsb
mov
sub
lahf
nop
add
sbb
xchg
repnz
ja
sub
rorb
sbb
jg
cmc
inc
jbe
mov
adc
out
and
cmpsb
pop
dec
iret
pop
xchg
imul
cmpsl
sub
aad
xchg
and
fisttps
sti
imul
sbb
mov
cmp
sub
mov
add
subl
mov
mov
adc
mov
fcoml
pand
mov
inc
fisubl
sti
xchg
rol
in
rcll
add
cs
aam
xchg
loop
xchg
scas
inc
scas
in
or
or
mov
daa
push
data16
push
mov
lahf
fsubs
fistpl
push
les
outsb
pop
fpatan
mov
cmc
sbb
lcall
ljmp
movsl
cmp
cmp
lea
popf
push
pop
jnp
mov
xchg
stc
cmpsb
sub
rorb
flds
sbb
je
xor
push
push
add
and
lahf
mov
add
scas
add
pop
xchg
jno
pop
cmp
sbb
les
jae
push
js
scas
cli
fs
stos
into
in
pop
and
in
sbbb
mov
cmp
jb
sarb
rorl
adc
aam
sub
jne
push
sahf
xchg
sub
mov
fsubl
ds
bound
mov
ret
or
or
push
or
mov
dec
jmp
or
mov
pop
push
and
sbb
cld
pop
stos
fidivs
cs
dec
adc
popf
mov
sub
pop
cltd
inc
adc
pop
test
call
mov
dec
fbstp
add
lea
lea
decl
mov
sbb
je
xchg
aaa
testb
dec
mov
and
lods
push
ljmp
bound
push
jns
dec
jge
add
in
dec
scas
mov
incl
mov
lock
scas
repz
add
xor
outsb
mov
adc
inc
imulb
enter
sub
insl
adc
fistpl
fsubrs
adc
pusha
xchg
push
fabs
jnp
aas
cmp
jecxz
or
mov
fs
loope
xor
sub
sub
in
movsb
in
add
nop
mov
lea
pop
push
dec
les
mulb
dec
aad
jno
push
dec
in
aad
icebp
les
mov
cmp
pop
mov
sbbl
adc
pusha
dec
mov
jno
jne
pop
jo
loopne
mov
ljmp
icebp
mov
lahf
into
lahf
jb
cld
xchg
cmp
xor
inc
cs
stc
add
mov
fwait
mov
cmp
sbb
std
pop
dec
push
inc
out
inc
pop
pop
and
movsl
rcrl
mov
out
pop
push
sbb
dec
mov
adc
cwtl
hlt
leave
pop
ror
int3
fcomps
pop
adc
shrl
in
cvtps2pi
mov
cmp
cmp
or
or
xchg
roll
jno
out
mov
pop
pushf
insl
xchg
daa
call
cmp
lods
ss
bound
adc
xor
xchg
xor
divb
add
aad
movsl
and
in
aad
xor
and
lea
add
sarl
mov
pop
and
sub
test
add
pop
outsb
call
iret
popf
arpl
inc
fisttpll
out
or
cwtd
fimull
pop
movups
movsl
mov
insb
subb
adc
xchg
gs
mov
and
add
out
sub
shl
insl
aaa
pop
notb
dec
bswap
xchg
je
sub
out
cmpsb
scas
ljmp
mov
xor
sub
mov
xchg
push
cmp
clc
in
int3
add
mov
inc
mov
or
ds
sub
fwait
xchg
adc
mov
jae
xchg
or
pop
jmp
movsl
add
fisubrs
push
call
cmp
daa
dec
out
loope
adc
addr16
adc
add
or
outsb
inc
adcl
gs
shrb
das
dec
mov
fbstp
int3
mov
push
fmul
dec
pop
lcall
xorb
mov
jl
inc
pop
pop
and
cmp
je
jae
loopne
xchg
push
pop
scas
stos
jmp
into
cmpsb
daa
mov
ja
shll
lret
popf
out
pop
fimuls
addr16
jne
mov
xor
ja
jns
ret
cld
std
push
push
cwtl
ret
sbb
lods
popa
sub
push
out
nop
jb
xchg
bound
and
cmpsb
or
sub
push
mov
imul
iret
je
mov
in
cs
and
outsb
lcall
pop
push
pop
int
outsl
lret
std
aaa
add
inc
in
enter
scas
imul
lods
out
or
xor
fmul
xchg
cmp
cmpsl
das
cmp
mov
add
cmp
pop
mov
mov
pop
movsl
xor
stos
jno
pop
setns
inc
test
sub
shl
retw
fiadds
lods
sbb
dec
lock
xchg
dec
xlat
pushf
sbb
mov
jae,pt
pop
pop
ss
jp
sbb
mov
push
shrl
and
shl
fcom
push
shll
mov
fiadds
mov
jae
adc
bound
inc
lret
divb
jmp
xchg
or
adc
lock
jo
dec
loope
mov
lret
es
popa
lock
cwtl
fsubp
das
and
lea
push
jbe
in
sub
inc
stc
jnp
push
adc
cmpsl
aas
mov
test
movsl
mov
clc
push
enter
aas
pop
aas
sbb
jmp
inc
and
push
add
and
pop
push
aad
mov
jp
sbb
inc
rorb
add
enter
aad
les
jne
shll
insl
fdivs
inc
int3
mov
shll
decl
push
testl
dec
jp
sub
ss
jg
fwait
mov
add
jbe
or
mov
test
sbb
sbb
cmp
jno
scas
bound
mov
ret
in
nop
addr16
add
shl
repz
sbb
adc
mov
add
je
imul
scas
cmp
dec
inc
xchg
popf
sahf
enter
inc
fstps
movsb
add
xor
jmp
idiv
inc
and
dec
dec
les
xor
bnd
xchg
hlt
jp
out
stos
fildl
push
stc
nop
cmpl
fdivrl
jp
rcll
jmp
jp
loopne
fs
hlt
scas
movsl
xor
mov
insl
jl
lds
mov
xlat
notb
mov
sar
insl
test
mov
shll
fcom
xchg
gs
sub
dec
vmovhps
in
add
ss
shll
mov
es
push
sti
fildll
add
mov
fwait
sub
inc
push
sub
sub
in
lods
in
enter
in
mov
pop
int3
adc
pop
ds
or
sbb
add
dec
or
movsl
dec
mov
addr16
stos
mov
adcl
stos
call
adcl
inc
xor
xor
adc
lret
into
sub
mov
stos
leave
dec
sbb
mov
inc
add
js
jg
adc
ffreep
fimuls
cli
sbb
sbbl
xor
push
outsb
jmp
mov
sbb
pop
pop
lcall
or
adc
xchg
jl
xchg
mov
sti
jl
sub
pop
cld
mov
dec
and
mov
xor
gs
cmp
scas
mov
sub
cwtl
popa
idivl
inc
push
loopne
xchg
jae
cltd
jle
pushf
mov
ficoml
cltd
pusha
xchg
test
in
mov
rcrb
mov
xor
jecxz
addl
stc
jno
fs
xchg
lret
jp
iret
push
add
push
rolb
mov
cmpsl
sub
test
adc
dec
xchg
dec
and
xchg
adc
dec
dec
inc
iret
xchg
sub
sub
inc
das
jge
mov
mov
xchg
lret
push
sbb
add
adc
jmp
push
mov
repnz
jge
imul
rclb
cmp
test
js
fmull
xor
mov
enter
cmpsl
mov
stc
and
xchg
and
inc
mov
in
or
aaa
fistps
push
aad
fcmovb
xchg
mov
mov
movsb
fldl
nop
mov
pop
push
jo
cmp
jbe
push
push
hlt
mov
shlb
adc
testl
mov
xlat
inc
or
push
adc
cmp
shll
pusha
lret
jae
fisttpl
dec
jns
push
xchg
in
inc
es
imul
js
outsb
cmp
daa
rcrl
loope
loope
int
xlat
inc
mov
aaa
daa
or
inc
fdivr
pop
fdivrs
add
notl
push
hlt
sub
test
and
push
cmp
add
sbb
pop
repnz
sbb
out
pop
mov
adc
jg
xlat
stos
outsl
cld
lods
and
test
es
loope
popa
rcrl
in
cld
lods
insb
jns
jl
hlt
cli
adc
inc
out
fnstenv
gs
cmpsb
iret
jb
and
movsb
push
push
push
aam
ss
out
sbb
fildll
stos
push
xorl
cmp
xor
or
jne
fstpl
xchg
inc
mov
inc
mov
incb
pop
movsb
mov
loopne
adc
test
jnp
pop
jmp
mov
mov
or
sub
lret
test
inc
xchg
hlt
inc
pop
fcoms
mov
pop
iret
cli
enter
jg
inc
add
das
loopne
fiadds
insl
movsb
sti
rorb
loopne
lods
lock
sbb
rcrb
and
pop
push
mov
repnz
out
and
cmp
fimuls
daa
sub
xchg
mov
xor
cltd
inc
mov
mov
xchg
xchg
insl
mov
test
lock
jle
or
ljmp
inc
shl
xor
push
mov
stos
push
int3
js
pop
fadds
popf
and
imul
jg
add
mov
adc
jg
add
movsl
ss
je
in
mov
or
fcomi
sub
sub
jl
insl
lods
pop
int3
das
push
pop
pop
je
popf
ljmp
fisubrs
xor
jno
jecxz
mov
lea
je
cs
lcall
push
iret
add
nop
jns
stos
or
sub
mov
add
mov
pop
add
stc
and
insl
mov
ja
movsl
insb
ret
xor
lret
shlb
ffree
and
mov
mov
adc
sub
repnz
js
xchg
lods
sbb
ds
gs
xchg
mov
xchg
mov
call
sub
lods
sub
xor
add
push
sub
lea
in
fwait
xchg
mov
dec
adc
int
jg
shl
push
dec
clc
lock
xlat
in
call
lret
pop
adc
xchg
mov
adc
inc
and
mov
ljmp
sarl
repnz
icebp
leave
fstl
sub
enter
lds
inc
lock
dec
xchg
push
xor
stc
dec
pop
or
ret
mov
cmp
xor
pop
mov
pop
out
das
mov
jnp
inc
xor
insb
xchg
outsl
sbb
mov
aas
mov
cltd
data16
pop
jns
or
sub
cli
pop
or
or
xchg
dec
lret
and
notl
int
fdiv
ja
sub
adc
movsl
gs
push
test
mov
pop
out
rol
push
ljmp
test
push
pop
lea
test
nop
ffreep
mov
xor
in
sahf
dec
dec
icebp
hlt
int
pop
loop
out
in
push
addr16
xchg
push
rorb
or
push
push
jo
jge
fsubl
nop
shll
add
cmp
lds
dec
test
cmp
jns
cmpl
pop
addr16
jno
cmp
mov
imul
ret
mov
dec
jle
xchg
pop
xor
mov
imul
inc
xlat
or
inc
test
jge
arpl
stc
aas
and
sahf
stos
scas
push
mov
jmp
mov
sbb
out
xchg
cmpsb
call
push
test
test
push
into
stc
push
mov
or
mov
test
push
jne
popa
mov
mov
cmp
mov
shl
and
jmp
push
pop
aam
mov
inc
mov
popa
cmp
pop
push
push
addr16
loop
pop
lret
mov
pop
push
cmp
outsb
inc
dec
xor
lods
push
sub
int
and
pop
xchg
pushf
test
pushf
pop
xor
je
push
jp
insl
push
or
mov
adc
cmp
call
pop
int
sub
xchg
xchg
iret
or
lahf
inc
cmpsb
sbb
in
loope
popf
imul
dec
cltd
pop
in
xor
insb
push
pop
fwait
inc
pusha
sub
cwtl
pop
fisubs
push
fisttpll
push
je
mov
pop
cli
push
jecxz
xchg
pop
add
add
push
call
jg
mov
cmp
push
xchg
notl
adc
pop
jmp
mov
jbe
pop
push
jle
ret
cmp
xchg
dec
jl
mov
out
push
fisubrs
mov
inc
mov
mov
inc
pushf
out
push
jb
jno
stos
dec
lret
ret
fs
test
sub
cmp
cmp
add
pop
stos
pop
fwait
iret
gs
mov
ret
gs
sub
dec
and
mov
rorb
inc
jp
push
jmp
dec
jecxz
ss
mov
fwait
bnd
inc
call
jmp
fimull
test
les
dec
rolb
dec
xor
jae
fadd
or
and
fwait
lds
clc
xlat
push
int
xchg
sbb
pop
fldl
pop
out
ljmp
mov
dec
sti
or
outsl
test
jle
jae
mov
loop
cmpsb
loopne
fcompl
sbb
inc
ds
xchg
sub
mov
push
push
divl
je
movsb
jl
stc
add
pop
pop
stos
inc
out
xorb
insb
mov
mov
cmpsl
fcomps
mov
xor
lahf
loopne
cmpsl
xor
pushf
decl
adc
in
ror
and
xchg
notl
mov
mov
rcll
or
or
xor
cmp
pop
movsl
jl
mov
cvtps2pi
inc
notl
mov
lret
mov
mov
add
lods
mov
popf
addl
jne
ds
bnd
inc
dec
ret
cld
jp
xchg
adc
icebp
les
and
aad
pop
into
inc
cmpsl
imul
xor
iret
pop
xchg
inc
fdivrl
pcmpeqb
ss
adcb
ss
pop
push
cmp
lods
pop
fisttpll
fwait
stos
loopne
cmp
push
xor
mov
adc
out
or
std
cmpsl
and
ds
mov
daa
push
jae
stc
or
or
std
inc
sbb
fdivs
jp
dec
out
mov
test
add
mov
sub
out
push
scas
cmp
lahf
arpl
jg
mov
pushf
popf
mov
cmp
gs
movsl
loop
rcll
mov
mov
ds
idivl
shl
clc
cld
loopne
fisttps
sahf
lods
leave
xor
dec
cmp
sbb
or
scas
inc
ret
push
daa
lods
test
adc
jns
xchg
jb
loope
jl
cmp
or
cmp
cmc
cmp
aaa
dec
dec
fcoml
mov
je
push
xchg
in
lea
add
jo
inc
xor
jecxz
sbb
scas
add
cmp
mov
mov
fmul
pop
adc
scas
and
sub
dec
das
sbb
popa
cs
mov
jecxz
push
loop
mov
gs
xor
inc
cmp
lea
and
and
aas
jbe
mov
xor
andb
cmp
aas
sub
add
scas
popa
fnstcw
clc
cmp
push
xor
cli
leave
mov
adc
cli
popa
in
lret
int3
outsb
xor
repz
cwtl
jne
push
daa
out
imul
std
jae
fsubrl
das
movsl
pop
int3
jae
out
push
jns
lods
xchg
xchg
mov
mov
sarl
lea
out
test
filds
repnz
mov
xchg
mov
fildl
mov
in
or
pop
add
jl
xchg
lods
jl
out
imul
sub
jp
inc
xchg
mov
or
pop
mov
push
pushf
cmp
iret
ret
pop
jno
cld
test
ret
repnz
call
aam
sub
test
and
xchg
pop
pop
push
mov
rcrb
lea
or
mov
dec
es
pop
jecxz
xor
cld
adc
ja
rcll
cmp
xchg
movsl
mov
mov
jle
addr16
inc
fsubrs
xchg
inc
mov
sub
push
addb
jp
xchg
mov
in
enter
xorb
mov
data16
push
in
ljmp
jle
outsl
cmp
negl
aad
sub
fadd
fwait
pop
popl
js
mov
jns
mov
sbb
sbbb
jge
jae
xor
addr16
movb
imul
ret
xor
adc
rorb
pop
sub
scas
scas
adc
sub
mov
cmpsl
pop
adc
in
xchg
and
in
imul
jmp
jg
jno
jne
mov
call
add
xor
and
repnz
test
in
pop
dec
mov
loope
stos
repnz
imul
repz
add
inc
int3
stos
out
rorl
mov
sbb
loop
jns
jne
hlt
dec
push
arpl
jb
inc
cwtl
mov
in
lar
les
addl
negb
jl
pop
inc
and
stos
xchg
sub
push
outsl
push
lea
fisubrs
int
cwtl
xor
add
or
xchg
fyl2x
mov
jne
sahf
bound
bound
aad
xchg
test
rcr
jle
es
push
mov
push
inc
ret
mov
mov
pop
sbb
mov
inc
mov
inc
rclb
lods
mov
orb
push
stc
bswap
mov
cmp
sbb
xor
lods
js
pusha
sbb
push
jl
mov
mov
or
or
mov
or
enter
sbb
xor
jg
add
stc
test
fldt
int
enter
or
mov
pop
das
loopne
in
dec
ljmp
inc
lret
cmp
ret
or
adc
jl
push
pop
idiv
ss
jno
pop
imul
inc
fmull
mov
das
xchg
dec
das
pop
rorl
cmpsb
scas
push
aaa
push
push
xchg
je
lds
mov
and
add
pop
and
cmp
push
jo
rorl
mov
mov
or
and
mov
xor
fcoml
xchg
add
cmpsl
iret
jo
clc
mov
add
divb
mov
mov
test
and
arpl
or
std
mov
xor
js
pushf
jne
movsl
push
jns
lahf
cmpsl
int
push
mov
shll
dec
push
xchg
mov
dec
cs
xchg
mov
loop
jle
add
sub
repz
xchg
hlt
imul
push
pop
shrb
inc
jb
push
jb
sub
push
mov
xor
jns
movsl
loope
shr
dec
test
repnz
out
stos
ljmp
push
in
fisttpll
adc
lahf
cs
sbb
loopne
mov
cmc
sbb
ljmp
lret
or
neg
aas
mov
mov
imulb
popa
scas
je
sahf
lds
cmp
or
jl
and
or
push
test
movsl
rclb
mov
add
push
inc
dec
and
rorl
jb
cmp
push
inc
in
fisttps
sbb
fs
push
sub
mov
adc
inc
es
aam
push
push
scas
xor
push
into
lret
pop
pop
push
xor
pushf
ds
lods
push
or
inc
cltd
lret
mov
xlat
or
mov
xor
cmp
sub
jae
imulb
xchg
jle
enter
aad
aaa
push
imul
movaps
sbb
fs
out
inc
and
inc
stos
cmp
or
test
mov
inc
and
loop
dec
sbb
pop
sbb
mov
or
pop
mov
jl
push
mov
repz
push
cwtl
mov
or
arpl
ret
ljmp
jge
imul
jns
outsl
dec
inc
push
jnp
mov
mov
insb
xor
fcomps
outsb
jl
js
pcmpgtb
mov
bound
dec
cmp
jnp
push
icebp
xor
sbb
aas
cs
daa
xor
rcrb
repz
sub
bound
xor
xchg
mov
das
xor
in
js
repz
testl
push
cmp
adc
push
mov
iret
popf
pop
ja
loopne
push
xorl
jge
mov
adc
loope
pop
sbb
sub
xchg
xchg
cmp
dec
sbb
mov
out
test
jl
jmp
cld
hlt
cmp
cmpsl
aam
ret
dec
add
cwtl
jbe
push
jbe
int3
jb
data16
loopne
sub
orb
divb
pop
pop
pop
cmpsb
mov
adc
inc
pop
scas
fpatan
pop
in
push
push
gs
xchg
pop
lcall
js
dec
mov
aas
movsl
mov
rcll
xchg
and
or
inc
dec
pop
shlb
push
cs
fmuls
push
movsb
icebp
xchg
fucomp
jmp
movsb
mov
mov
addb
add
xchg
add
lret
loop
push
mov
mov
sti
ja
les
test
sbb
add
les
jecxz
movsl
rcl
std
jne
stc
je
sub
scas
add
pop
dec
push
mov
sbb
adcb
xchg
stos
call
jge
sbb
inc
dec
les
pop
in
sub
call
add
sbbl
lods
call
or
dec
sub
xchg
hlt
sbb
sbb
mov
fwait
scas
ss
loop
xchg
jg
js
mov
mov
xchg
shl
dec
test
jnp
rorl
test
jns
fsubl
dec
adc
dec
mov
jo
mov
in
xor
mov
xlat
sub
sub
xor
dec
inc
lret
lcall
insb
pop
fwait
pop
xor
shlb
jmp
pop
cmp
mov
pop
dec
and
sahf
add
jne
xor
sbb
aam
ds
out
int3
movsl
cwtl
mov
sahf
inc
push
mov
inc
out
fildll
mov
arpl
imul
fsub
jecxz
xlat
sarb
jnp
jge
cmp
notb
or
cwtl
push
cmpsl
push
ret
movsl
xor
sti
addb
cli
fsubr
loope
ret
mov
adc
jo
ret
in
stos
das
jecxz
mov
pop
dec
adc
add
push
sar
fdivp
orb
xchg
test
jg
aad
cmpsb
xor
pop
fldl
mov
es
iret
outsb
out
or
dec
xchg
jno
cmpsb
in
xchg
ljmp
and
mov
arpl
add
jge
loop
inc
fisubrl
sarl
lret
rcrl
les
sbb
test
and
xor
rcll
push
test
jge
nop
add
mov
pop
fbstp
js
xchg
mov
adc
popl
jl
and
and
pop
lods
mov
lcall
add
inc
je
insl
je
inc
push
jns
dec
ljmp
mov
xchg
mov
and
popf
outsb
insl
cmc
popf
cli
push
mov
xor
cmc
nop
hlt
das
aam
ret
pop
ljmp
gs
in
dec
imul
pop
icebp
pop
push
xor
inc
or
adc
xchg
mov
sub
sbb
add
test
gs
testl
les
cltd
daa
lods
xor
ss
fisttpll
mov
push
mov
add
sub
sbb
xor
and
push
fcoml
xorb
scas
das
lds
xchg
je
test
pop
push
popf
ret
stos
sti
repz
push
nop
js
cld
or
mov
sbb
sbb
cld
jne
enter
mov
pop
cmp
jbe
xorl
xchg
mov
xchg
pop
outsl
xlat
aas
xor
cmpsb
push
call
repz
mov
int3
push
insb
jmp
mov
mov
pop
lahf
mov
addr16
in
jecxz
inc
insb
and
outsb
in
mov
insb
add
add
imul
in
dec
add
adc
add
pop
inc
test
and
mov
aad
inc
adc
mov
addr16
push
sub
sub
aad
jne
jo
shr
pop
cmp
sbb
test
jbe
fists
mov
pop
leave
out
xor
pop
jge
adc
cmp
xor
adc
push
js
mov
push
pop
loop
or
loope
mov
aam
lcall
vmaxpd
test
mov
repz
cld
push
push
pop
std
cmpsb
add
dec
cmpsl
inc
dec
faddl
or
rorb
lahf
mov
movsb
shll
push
sub
xchg
xchg
sub
pop
push
hlt
pop
stc
push
lods
enter
test
sub
movb
inc
pusha
mov
xor
jg
dec
roll
cmp
cltd
gs
movsl
xor
fdivs
push
fildll
inc
aaa
mov
ret
ljmp
or
ja
add
push
jnp
mov
arpl
pusha
out
pop
pop
mov
cld
sbb
ret
out
sbb
aad
dec
dec
fsubrs
es
pop
and
imul
lods
add
cmp
mov
lahf
pop
mov
push
cmp
outsl
xchg
cwtl
call
sub
xor
decb
ss
cwtl
iret
fstpt
mov
sbb
sub
adc
das
or
push
mov
mov
aas
pop
adc
cmpsb
stos
mov
dec
mov
pop
icebp
add
jne
and
jge
adc
int3
xor
xchg
lahf
xchg
cmp
les
pushf
ret
mov
xor
pop
insl
sahf
shrl
push
xor
mov
cmp
push
int
and
xchg
sbb
ja
lea
add
lds
hlt
inc
std
sbbl
sub
fmuls
sbb
popa
ret
fistpl
jecxz
dec
dec
jg
lods
clc
cmp
fldl
stos
mov
ds
xchg
ljmp
xor
jmp
out
and
rorb
xor
pop
inc
das
fidivrs
mov
mov
add
pop
mov
cwtl
dec
mov
popa
jne
dec
ja
mov
cmp
cwtl
push
lea
call
sbb
add
das
dec
daa
adcb
es
aad
mov
sub
out
jnp
aaa
stc
clc
insl
and
sub
pop
xor
call
adc
pop
fcompl
fwait
xor
mov
test
add
loop
mov
and
nop
dec
inc
popf
add
les
push
add
push
fimuls
lcall
push
add
cmp
push
repnz
aam
test
mov
stos
xchg
sub
jmp
or
leave
adc
test
and
xorl
int3
jl
daa
jg
pop
mov
shlb
outsb
rolb
int
cwtl
lret
sti
xor
loopne
xchg
push
lahf
mov
out
jp
or
pop
pop
insb
dec
subl
lock
cmc
add
inc
leave
jbe
imul
fbld
jg
stc
adc
out
mov
cli
jno
js
filds
orb
test
int
ret
mov
mov
les
aaa
cmp
sarb
int
aaa
mov
jns
inc
xor
scas
pop
cltd
js
or
and
mov
cmp
popa
mov
aad
xchg
cmp
jo
popa
sbb
fnsave
sub
stos
gs
xor
sub
inc
daa
push
adc
movsl
fdivl
pop
mov
mov
pop
into
movsl
popf
pop
outsb
bound
xor
sub
pusha
and
mov
pop
icebp
mov
xchg
push
cmpsl
mov
mov
in
dec
mull
data16
sbb
sti
or
push
clc
mov
lods
inc
fstpl
shr
in
pop
scas
aam
mov
mulb
shrb
cmp
push
inc
aam
jns
push
xlat
jae
sub
lcall
push
mov
pop
jmp
xchg
insl
int
movsb
xchg
in
dec
add
in
lock
inc
xchg
insb
mov
or
nop
push
push
pop
cmp
adc
mov
aad
lods
add
fsubr
shll
mov
mov
jb
inc
mov
or
enter
outsl
fnstsw
aaa
lahf
adc
mov
mov
outsl
int3
add
das
cmpsb
mov
sbb
sbb
hlt
bound
cmp
mov
es
mov
xor
jle
mov
fcom
mull
ret
lds
outsl
in
std
add
sub
scas
sbb
stos
fldenv
orb
xchg
sbb
test
jge
xchg
inc
mov
repz
xchg
jg
mov
adcl
and
xor
bound
fsub
inc
fnstenv
mov
shrl
jbe
mov
pop
js
jg
xor
movsl
jnp
aad
push
fisttps
push
jb
loop
xchg
pop
repnz
xor
sbb
in
dec
adc
sub
fnsave
jne
out
fs
test
add
fidivrl
cmp
cmp
filds
add
xchg
pusha
ret
lds
aam
jb
xlat
sbb
test
adc
fwait
fdivrl
out
dec
adc
outsb
jle
jge
adc
xchg
cmpsb
push
rclb
cmpl
ljmp
imul
or
sbb
mov
enter
loop
and
or
pushf
cmp
lock
push
push
sbb
cmp
push
orb
fimull
daa
test
insl
push
xor
aad
add
ja
fimull
insl
jecxz
sbb
mov
loop
je
jp
pinsrw
xchg
inc
xchg
mov
jge
pop
arpl
das
ret
sahf
div
repnz
add
aam
jmp
loope
int
jne
cmpsl
arpl
les
xchg
pop
int3
addr16
xchg
ret
inc
mov
jecxz
jg
inc
adc
add
fadds
or
dec
in
xchg
xlat
lahf
dec
cmp
sbb
sbb
mov
fadd
insl
pop
pop
jmp
adc
outsb
test
add
dec
stos
mov
icebp
shlb
push
js
dec
and
fsubrs
popf
loope
adc
sti
and
xchg
and
mov
cli
xchg
clc
clc
inc
and
mov
arpl
ret
sarl
inc
mov
add
cmp
in
in
shlb
jns
cmp
int
inc
pop
aad
dec
cmp
ljmp
ljmp
adc
pushf
mov
or
mov
xchg
in
mov
xlat
and
insb
add
or
add
xchg
insb
jns
lods
rol
adc
rcrb
loopne
sbb
xchg
sar
call
dec
fdivp
and
jno
popa
scas
imul
adc
mov
and
xchg
pop
cli
dec
mov
push
fisttpll
jae
das
pusha
push
stc
ficoms
mov
sub
push
std
mov
scas
xchg
scas
inc
loop
add
es
pop
stc
jge
or
loop
pop
les
sub
adc
stc
movsl
mov
sarl
insl
jnp
inc
insb
stos
rsm
dec
sbb
sub
jo
inc
test
dec
sti
or
lods
sub
adc
stc
mov
out
adc
cmp
dec
lods
push
jecxz
and
cmp
dec
aaa
mov
into
fstpl
sub
arpl
mov
sahf
outsl
mov
add
xor
enter
sbb
adc
cmp
orl
xor
sahf
leave
ret
incl
std
mov
js
jbe
push
mov
or
aam
jae
adc
in
jbe
imul
clc
mov
and
mov
lea
repz
jecxz
jo
rorl
jbe
lcall
mov
icebp
cmp
mov
xorl
test
mov
loopne
and
xchg
add
lcall
je
cld
fcomps
push
mov
shll
xor
rclb
mov
pop
mov
xchg
movsl
clc
iret
sub
cwtl
cmp
add
push
in
mov
pop
xchg
cmp
dec
imul
mov
xchg
inc
xor
enter
test
push
fs
stc
clc
xor
int3
ja
fidivl
xchg
xor
adc
push
dec
jno
aam
xchg
push
adc
icebp
xchg
notb
sarl
xchg
cmp
or
sub
sbb
mov
in
lret
cli
mov
pop
mov
sbb
hlt
adc
jecxz
add
xchg
cmp
in
adc
fcoms
pop
jbe
and
aam
mov
not
mov
and
cmp
data16
fnstcw
pop
dec
test
adc
dec
dec
mov
leave
fwait
jno
push
dec
mov
roll
lret
sub
out
sub
pop
adc
xlat
insl
push
xor
push
or
inc
dec
nop
mov
repz
xchg
pop
stos
sbb
add
cwtl
dec
adc
inc
testl
aaa
rcrb
sti
and
and
movsb
lret
jns
repz
arpl
ja
jg
xchg
cmpsb
int3
mov
jl
push
lds
daa
stos
mov
xchg
out
push
mov
cmpsb
popa
or
hlt
pop
dec
leave
cli
and
stos
jmp
dec
sbb
push
sahf
popl
mov
in
xchg
les
fstpt
sub
pop
inc
add
push
sti
mov
aaa
mov
sub
jbe
outsb
mov
lea
fldcw
nop
push
adcb
scas
fildll
iret
and
xchg
push
bndstx
inc
in
mov
xchg
xchg
psrld
adc
andl
ss
pop
jge
jge
out
and
push
sahf
ljmp
fcmovnb
sbb
pop
addr16
adc
xor
add
xlat
and
shl
popa
sarl
int
arpl
mov
bound
sbb
mov
imul
or
jne
mov
pop
or
fmuls
mov
out
test
ret
mov
sub
je
push
pop
pop
movsb
scas
dec
subl
insb
cmp
xchg
ficoml
jle
rcll
lret
xor
xchg
push
out
iret
into
xor
xor
mov
cmpsw
iret
push
mov
mov
dec
inc
xchg
jne
and
push
ja
sub
add
fnstcw
nop
cmpsb
push
and
pop
outsb
mov
dec
jle
pop
push
sbb
lret
cltd
insb
sarb
jl
adc
sbb
xor
cmp
or
fimull
loopne
pop
and
xchg
jb
into
sbb
and
fisttpll
fbstp
add
testl
adc
enter
mov
leave
mov
mov
push
fdivr
xchg
int
adc
add
mov
push
pusha
in
push
jno
cmpsb
sbb
push
or
cwtl
mov
mov
cmp
sub
or
fnstenv
sbb
dec
jo
mov
frstor
xor
int
fistps
xor
dec
or
cltd
loop
jae
les
rcr
sub
mov
nop
fs
mov
inc
cmp
xor
mov
mov
popa
outsl
inc
mov
popa
test
adc
mov
leave
xor
sbb
xor
mov
mov
jle
dec
in
aad
lret
lcall
in
mov
xchg
jbe
ljmp
fadd
add
sbb
jp
push
cmp
jl
jp
xor
arpl
mov
les
shlb
repnz
pop
jbe
in
lds
pop
dec
push
add
adc
or
jae
inc
js
sahf
add
fcoml
xor
lods
notl
cwtl
adc
inc
dec
jp
int
and
sub
cwtl
int
outsl
sbb
call
cld
mov
inc
sub
mov
stos
lock
lea
add
cmp
aas
into
mov
test
xchg
test
mov
daa
int
fbld
ficoms
mov
nop
imul
imul
addr16
pop
shr
adc
add
mov
ss
jecxz
shl
addl
cmpsl
inc
iret
in
dec
iret
inc
je
pop
lea
sahf
lods
inc
flds
push
clc
test
ficoms
sti
aam
iret
pop
xlat
outsb
scas
or
cmpsl
mov
sbb
jo,pn
stos
pop
cmp
inc
iret
mov
loop
and
and
push
cmpsb
add
fwait
int
adc
xchg
push
loopne
lds
inc
in
cltd
jmp
ds
xchg
test
xor
push
xchg
cmc
movsb
scas
es
cwtl
sub
sbb
popf
push
imul
bound
pop
imulb
xor
and
ret
lods
mov
push
dec
dec
leave
lods
aaa
addr16
imul
dec
arpl
jg
loop
ja
insl
jb
mov
lock
push
pop
mov
sbb
pminub
mov
xchg
cmp
sub
push
mov
lcall
mov
push
sbb
jge
cwtl
jp
scas
aas
roll
insl
mov
dec
xor
movsb
pop
sahf
add
xor
adc
shll
out
sbb
xor
adc
xor
xor
jb
repz
cld
adc
adc
sbb
sahf
cmp
loopne
das
sub
test
cmp
xchg
lahf
cmp
mov
ljmp
jp
insb
push
js
cmpsb
daa
lea
fs
push
test
xchg
fimuls
sar
dec
cmp
in
sub
mov
sub
imull
lock
aaa
imul
iret
inc
mov
into
inc
pop
lcall
in
nop
adc
cwtl
in
jl
fwait
xor
lahf
loopne
loopne
pop
lahf
icebp
ret
sahf
lock
pop
faddl
popa
out
jno
jl
loop
jnp
mov
sub
das
stc
loopne
xchg
ret
int
jb
xor
das
jecxz
pushf
cmp
mov
mov
add
cmc
orb
cld
movsb
orb
dec
xchg
xor
sub
push
push
bound
pop
push
and
ljmp
cmp
jecxz
mov
mov
jbe
xor
rol
out
or
mov
mov
test
mov
scas
and
mov
rclb
mov
and
jo
mov
fisttpll
repz
push
mov
xor
loopne
dec
je
sub
or
and
jo
add
es
fcmovne
pop
mov
stc
lahf
aam
mov
xlat
push
mov
or
jne
mov
mov
mov
adc
in
ljmp
dec
ret
int
pop
into
ret
aam
push
mov
dec
int3
xchg
mov
mov
dec
mov
jo
imull
nop
fsub
and
dec
mov
je
xchg
stos
pop
or
xor
adc
xor
push
push
out
add
enter
push
popa
adc
mov
push
inc
subl
test
lea
cmc
arpl
int
or
inc
stos
xorl
lahf
jno
sub
out
cltd
or
or
andl
sbb
lcall
or
fiadds
sbb
pop
cmpsb
sub
adc
and
pop
fcom
cmpsl
mov
orl
dec
cmp
adc
out
iret
sbb
and
mov
cmp
mov
test
sub
pop
sarl
or
test
mov
or
xchg
gs
lods
jle
in
pop
push
xor
jne
in
jl
sbb
xor
mov
in
push
cmp
add
stos
movsb
adc
aaa
fsts
clc
js
xchg
cmp
sbb
or
inc
iret
sbb
mov
add
in
push
jp
xor
or
call
mov
sbb
fidivs
adc
lahf
add
ja
cmp
adc
popa
js
and
sti
imul
jns
and
xchg
int3
aaa
mov
pushf
dec
jecxz
cwtl
push
push
sub
pop
cmpsl
cld
pop
lock
push
sbb
iret
dec
jno
ljmp
push
xlat
cmp
and
pop
pop
jge
iret
push
cmp
sbb
push
sti
cwtl
jmp
mov
add
cmpsl
adc
cld
xchg
jnp
push
jecxz
scas
adc
sti
mov
xchg
in
ja
in
scas
fimull
push
rolb
fcmovnb
jg
imul
aaa
mov
xchg
imul
jno
push
jmp
int
insb
xlat
fisttpll
pop
loop
jno
pop
lods
loop
push
or
push
jne
out
cmp
aam
pop
ds
add
test
mov
jg
or
loop
add
adc
stos
jle
movsb
push
fnsetpm(287
push
xor
call
xor
das
dec
sub
cmpsl
mov
mov
inc
adc
test
fmuls
aad
addr16
insl
loop
pop
repnz
leave
push
or
xor
cmpsb
inc
inc
leave
lea
scas
pusha
jbe
push
pop
daa
push
js
test
push
add
lret
sbb
dec
pop
adc
out
in
jl
jmp
popa
lods
xchg
or
jle
mov
addr16
insl
bound
stos
mov
mov
cltd
jne
imul
pop
mov
mov
test
adc
insb
test
xchg
sub
jmp
repnz
sbb
pop
daa
jle
xchg
push
lret
mov
out
pop
xchg
mov
aam
mov
std
int3
arpl
in
in
xor
cmc
or
sub
nop
pop
gs
jae
jp
mov
or
test
ds
jle
xor
and
jae
and
or
xchg
xor
loopne
fwait
jb
stos
xchg
inc
cmp
sarl
je
popa
xor
lds
xor
pop
sbb
sti
push
xor
add
fidivrl
mov
xor
dec
enter
imul
cld
ret
fcompl
push
adcl
sub
dec
test
dec
cmp
adc
push
lret
pop
cld
fldt
mov
add
inc
in
incb
mov
sub
and
pop
mov
imul
push
pusha
xor
fstl
stos
pop
and
frndint
popa
imul
lods
add
xchg
pop
add
mov
dec
lds
jl
incl
aaa
out
cmc
push
add
gs
lods
mov
repz
jns
cld
out
and
fcoms
ret
ljmp
aam
repz
jno
fiaddl
adc
mov
rcll
xchg
jb
ds
xor
popf
in
cmp
in
mov
in
arpl
mov
mov
cmp
and
ja
cmp
popa
leave
mov
leave
mov
fildll
push
jb
mov
cmpb
sub
mov
outsb
inc
leave
jmp
cwtl
inc
add
in
mov
mov
sub
jecxz
sbb
fwait
pop
mov
mov
mov
loopne
xchg
icebp
adc
mov
cltd
and
adc
push
push
adc
mov
mov
adc
push
outsl
xchg
shrb
loop
ljmp
ficoms
ss
idivl
loop
dec
mov
mov
jp
jne
or
mov
pop
or
aaa
dec
dec
push
add
or
mov
sbb
outsl
dec
test
les
dec
push
dec
pop
push
fs
cmp
jbe
xor
push
nop
sets
mov
and
mov
add
and
cmp
lods
jp
and
adc
jnp
xchg
vsubss
sub
cmp
sahf
xor
fisttpll
adc
out
push
push
sub
sbb
fstpt
test
jae
or
jb
mov
enter
dec
int3
in
das
mov
adc
or
cmp
lods
dec
or
push
stos
insl
dec
cmp
mov
sub
sub
mov
loop
mov
or
fdivrp
mov
lock
pop
jno
xchg
xchg
mov
adc
mov
jnp
sar
inc
subb
xor
jnp
aam
iret
int
ljmp
push
push
push
outsb
cmp
push
mov
lods
sbb
dec
jne
insb
mov
mov
mov
push
mov
xchg
cmp
add
dec
push
fstpt
iret
insl
xlat
stos
or
cmp
xchg
orl
stos
test
mov
inc
mov
imul
test
sarb
mov
xlat
fisubl
xor
ds
push
test
cmp
mov
jmp
push
ret
gs
push
movl
push
or
decl
xor
pop
insl
jne
xor
lret
inc
shrb
ja
dec
rol
sahf
rcrb
ljmp
xchg
mov
or
adc
sbb
jle
sbb
pop
mov
test
orb
icebp
aam
sub
push
out
push
pop
repz
in
mov
dec
adc
mov
cmp
mov
sub
sti
cmpsb
movsl
push
cltd
dec
into
xor
aam
jg
adc
out
mov
xchg
cmpb
ss
push
lock
cld
rcrb
in
xchg
xchg
in
shrb
mov
dec
daa
dec
add
ja
icebp
xor
les
mov
into
shrl
in
mov
pop
push
push
adc
push
jne
jne
subb
roll
xchg
mov
dec
int
addr16
insl
lock
push
push
sbb
js
cmpsb
cld
mov
sahf
roll
insb
push
and
fdiv
addr16
inc
mov
adcb
in
xor
out
gs
mov
push
mov
test
popa
cmp
outsb
inc
outsb
mov
loop
push
push
inc
shl
scas
outsb
mov
mov
repnz
stc
jb
or
and
pop
ja
in
inc
lret
movsb
pushf
cs
adc
pop
dec
pop
cwtl
add
out
mov
mov
hlt
xor
negl
pop
add
cltd
in
xchg
in
adc
inc
dec
scas
mov
lret
daa
jae
push
lods
in
ret
mov
aas
inc
dec
imul
shrb
ficoms
mov
cmp
mov
sub
sbb
movsl
mov
jns
in
or
pop
dec
dec
addr16
fs
inc
pop
dec
fldt
imul
popa
and
sarl
addr16
outsb
mov
adc
adc
jg
xchg
mov
push
es
sbb
dec
sub
lcall
pop
mov
add
pusha
scas
loop
test
or
xchg
inc
jmp
or
inc
inc
inc
cltd
negl
loope
shrb
fwait
testb
mov
mov
adc
out
dec
mov
sub
xor
ja
jle
fmulp
cli
pop
jno
ret
mov
int
mov
adc
stc
int
mov
mov
sbb
inc
mov
ljmp
stc
js
xchg
fs
outsl
in
shl
js
add
out
aad
mov
in
xchg
sbb
pop
loop
jns
sbb
ds
insb
out
inc
add
scas
jp
pusha
imul
xor
cmc
push
mov
fs
divb
dec
icebp
int
lret
inc
sti
outsb
push
mov
sub
add
sub
push
dec
push
cmpsl
fildl
shl
mov
cltd
sub
xchg
pushf
scas
mov
push
mov
and
xchg
das
in
ss
lcall
test
inc
jg
stos
gs
or
test
adc
inc
push
and
jmp
push
push
adc
out
cltd
mov
in
cmc
xor
jbe
inc
sbb
push
jmp
xor
lcall
sub
jp
pop
jp
fnsetpm(287
xor
inc
rorb
pop
icebp
shrb
and
cmc
dec
popa
imul
repnz
jg
iret
gs
mov
test
aas
insl
ret
jge
or
sub
lret
fmull
bound
enter
sub
orl
xor
out
dec
or
test
and
adc
lret
cmc
movsb
lock
test
sbb
sbb
rcr
insb
cmpb
out
fwait
aam
cmp
pop
cltd
xlat
jle
leave
xchg
mov
push
scas
xchg
frstor
cmpsb
lock
push
out
cmp
mov
or
pusha
cs
mov
push
jae
out
cmp
cmp
mov
cmpsl
push
push
xchg
xor
daa
mov
mov
aas
call
or
mov
cltd
mov
in
push
in
and
pushf
adc
lods
xchg
add
int3
sbb
and
jne
aad
into
fistpl
mov
jb
inc
cltd
cmpsb
jg
pop
sbb
or
push
adc
sbb
das
push
lock
pop
xor
decl
repnz
data16
fildl
mov
imul
ja
mov
dec
jmp
je
divb
insb
sub
adc
pushf
cmc
iret
mov
rorb
adc
imul
in
xchg
dec
std
outsl
sub
cmp
iret
rclb
xchg
enter
nop
out
mov
ret
xchg
mov
add
fwait
and
and
push
add
mov
ljmp
mov
gs
xchg
xchg
xor
inc
int3
jns
pop
add
mov
pop
bound
loopne
jmp
sarb
leave
xchg
dec
xchg
test
push
ljmp
sbb
sbbb
pop
dec
push
mov
sub
ja
test
jecxz
sbbb
or
sbb
jle
sbb
inc
pop
out
pop
jge
out
dec
lods
gs
push
sti
or
scas
jg
cmc
pop
mov
sti
inc
mov
daa
jp
or
cmpsb
mov
imul
pop
mov
lock
xchg
xor
mov
mov
jl
sbb
cmp
lea
cwtl
dec
data16
mov
pop
fs
push
ret
enter
stos
cltd
sub
push
subb
lahf
xorb
and
rol
loop
jge
ds
xchg
fldt
loopne
cmp
movsb
or
or
jbe
sar
fisubs
jge
ret
cmp
jnp
xchg
or
cmpsl
pop
clc
mov
jns
pop
clc
adc
ljmp
or
in
adc
or
pop
arpl
push
add
sbb
insb
sbb
test
xlat
mov
jecxz
mov
sub
imul
repz
and
lods
inc
mov
cmc
cmp
inc
push
mov
mov
and
pop
lret
fdivl
and
mov
lea
jg
int
adc
adc
push
jnp
cmp
push
mov
je
jle
sti
scas
jecxz
mov
push
pop
add
ja
sub
test
sar
pop
out
int
add
sub
jp
cmp
cwtl
adc
adc
in
jmp
dec
pop
pop
sub
in
jle
clc
mov
jge
inc
pop
mov
pop
pop
pop
mov
add
addr16
push
adc
mov
dec
aas
or
mov
inc
mov
inc
sbb
loop
mov
push
and
push
xchg
jge
imul
add
mov
clc
je
push
fwait
decb
iret
clc
sti
ljmp
ds
cs
out
scas
and
dec
push
mov
iretw
lea
jle
mov
loope
mov
sub
mov
inc
fwait
xchg
sub
push
jae
fucomi
mov
pusha
push
shlb
mov
xchg
idiv
push
mull
fadd
jp
test
pop
int3
outsl
jmp
jmp
lods
arpl
jp
rcrb
loop
dec
mov
fdivp
test
insl
mov
aad
push
cmpsb
mov
mov
popf
mov
xor
push
mov
inc
and
test
add
aaa
sub
fstps
fiadds
push
mov
jge
inc
fildl
lahf
call
clc
fcoml
sarb
mov
add
fsubs
cmp
jnp
stos
popf
cs
push
adcl
mov
push
inc
js
icebp
pop
aad
cmp
mov
aaa
outsb
xor
loope
push
mov
jnp
pop
mov
xor
adc
cli
xor
jge
pop
ficompl
pop
fcomps
mov
shlb
cmp
ljmp
mov
icebp
repz
or
cmp
xor
jmp
sub
xchg
mov
add
or
dec
add
xor
cld
jns
push
call
cmp
mov
cli
jecxz
xor
insb
mov
jmp
imul
pushf
jno
push
inc
es
mov
push
call
loop
lahf
cmpsb
loop
ret
push
or
or
insb
sbbl
lods
inc
pop
test
dec
arpl
and
and
ds
inc
sub
gs
dec
clc
mov
cmp
pop
inc
push
pusha
rcrb
insb
out
stos
sbb
ret
aam
mov
into
jmp
inc
xlat
pop
add
in
mov
aad
sub
in
cmpb
xchg
pushf
fmul
dec
addr16
dec
lahf
cmp
jbe
in
in
scas
into
addr16
loop
stos
xlat
rep
xchg
repnz
pop
mov
enter
xor
mov
testl
mov
out
pop
rsqrtps
or
xchg
mov
addl
mov
adc
leave
mov
adc
out
mov
sub
ffreep
jp
leave
hlt
daa
fcmove
mov
mov
loop
inc
push
xorl
cmpsl
and
sbb
imul
rclb
lods
arpl
ror
mov
jg
mov
pushf
div
ljmp
call
adcb
sbb
mov
repnz
xor
push
aad
dec
adc
mov
jmp
or
fcmove
loop
lcall
mov
jno
ds
mov
lea
pop
mov
shrl
cli
inc
jge
xor
xchg
insl
shl
jbe
jno
dec
cmp
adc
push
and
cmpsb
adc
cltd
dec
mov
and
outsb
inc
mov
rorb
lret
sbbb
xchg
xlat
push
les
mov
ja
pop
mulb
inc
jecxz
test
lea
sbbb
jbe
fimull
pop
insb
sub
cmpsl
push
repnz
push
xor
push
sub
pop
sarb
in
cs
inc
rcrb
inc
or
test
test
shrb
mov
repnz
push
outsb
dec
jg
cld
add
cmpl
inc
push
push
mov
dec
outsb
mov
out
or
lahf
test
outsb
pushf
adc
arpl
pop
ficomps
dec
test
jle
xchg
imul
in
lds
scas
lcall
adc
cmp
aad
sbb
ror
cld
inc
mov
sbb
mov
adc
ret
ss
sub
lret
mov
xor
outsb
sbb
push
lcall
and
sub
dec
fsubrs
push
lahf
pop
inc
cmp
or
sub
and
push
lret
push
mov
mov
insl
scas
mov
push
enter
and
lcall
fs
stos
out
popa
pop
test
sub
jae
aad
dec
pop
fwait
test
popa
dec
jp
arpl
stc
aam
xchg
js
or
dec
or
inc
cmp
inc
add
lds
int3
adc
inc
sub
xchg
pop
rclb
cmpl
cltd
xchg
daa
inc
fmuls
cmp
iret
mov
sub
xchg
pop
fidivs
arpl
lret
addr16
sub
popf
jbe
pop
xchg
mov
aam
in
add
enter
or
lahf
mov
imul
test
push
sub
dec
sub
shlb
mov
out
adc
xchg
push
mov
cmp
xchg
jae
int
or
adc
ds
fcompl
jno
jae
xchg
and
ja
mov
daa
pop
mov
test
adc
fcoms
nop
out
lahf
in
jne
or
jns
and
xchg
adc
shll
mov
outsb
rclb
ds
adcl
aas
cmpsl
xor
lock
fcmovb
xor
cld
clc
call
cmp
mov
subl
adc
jecxz
and
fcmovnbe
call
push
xor
pop
jb
imul
dec
adc
imul
xorl
xor
imul
mov
test
je
fcmovbe
jbe
lret
lret
mov
mov
int3
pusha
mov
sbb
and
cmp
lods
repz
cmc
sub
push
std
popa
push
idivb
ss
sub
into
dec
jl
mov
imul
adc
ja
notl
pop
js
fldcw
ja
inc
mov
sub
or
adc
aaa
sub
sub
fsubr
add
in
and
and
xchg
sub
sti
outsb
cmp
xlat
cmp
xor
rcrb
jge
sbb
das
rcrb
sub
inc
cmpsl
arpl
flds
ja
and
lods
out
xchg
inc
mov
gs
cmp
lcall
mull
xchg
add
or
sub
lds
mov
imul
cmp
in
or
inc
push
xchg
movsb
popf
fiaddl
roll
inc
jl
mov
mov
push
push
ret
or
push
inc
rcrb
test
and
fisttpl
loop
pop
cld
cmp
inc
mov
lea
mov
mov
lahf
sub
cld
dec
inc
sub
stos
mov
in
test
jnp
xchg
js,pn
jg
push
dec
inc
ljmp
mov
push
loopne
shlb
inc
xchg
jo
cmp
lcall
dec
insb
xchg
fs
or
add
lods
outsb
int3
lods
hlt
lahf
clc
popf
mov
pop
pop
addr16
imul
mov
data16
pop
cmp
sub
cmpsb
xchg
cmpsb
imul
pop
xchg
jo
inc
cmp
pop
push
adc
cmp
and
or
xchg
sbb
dec
leave
scas
and
rcll
mov
xchg
fidivs
not
mov
gs
jecxz
cmp
push
jbe
xor
xchg
inc
outsl
sub
push
lock
stos
lods
mov
test
sahf
inc
sbb
scas
cmp
aam
and
insb
subb
cmp
xor
add
adc
sub
xor
xchg
mov
sbb
scas
aad
ret
call
xchg
and
inc
outsb
lods
and
insl
jg
push
cmp
sbb
decl
lods
ljmp
mov
and
pop
jo
adc
in
push
and
outsl
fstpl
or
insl
icebp
loop
subb
into
ret
rorl
mov
ds
cmp
movsl
add
out
ljmp
cmp
insl
cmp
lret
pop
fs
xchg
leave
adc
or
cs
mov
cmp
aas
movsl
mov
in
adc
ficompl
test
outsb
pop
arpl
leave
rol
jl
lods
add
aas
lret
loopne
sub
inc
adc
mov
add
lret
mov
loope
adc
es
outsb
dec
pop
adc
in
xor
mov
or
jo
ja
push
test
jmp
jns
pop
cmp
xlat
pop
lea
mov
sbb
push
scas
ds
fld
add
and
and
or
stos
push
pop
adc
pop
mov
lods
push
aad
test
push
popf
adc
xchg
dec
sarb
xor
bsf
pop
mov
inc
push
lods
dec
dec
fwait
sbb
adc
int
and
jbe
inc
push
sub
mov
hlt
jp
call
cmp
pop
mov
orb
sbb
push
ds
enter
jle
sahf
sbb
xor
and
repnz
or
lahf
decl
pop
xor
push
lahf
inc
or
cmpb
and
add
adc
das
and
aam
lret
clc
cwtl
xchg
xchg
or
xlat
push
out
lea
add
lea
in
adc
cld
mov
clc
imul
insl
xor
aam
mov
iret
pop
roll
loopne
iret
iret
jle
jecxz
incb
icebp
std
pop
sub
stos
jge
cltd
add
test
add
mov
cmc
xor
mov
cmp
mov
add
mov
add
jmp
or
jge
dec
push
add
addr16
int
inc
mov
ljmp
cmp
push
outsb
cmp
mov
mov
jnp
mov
or
jl
adc
inc
push
roll
xchg
popa
sbb
fs
adc
daa
push
rcrl
push
ss
mov
adc
nop
je
add
push
add
jnp
push
int
jmp
test
mov
test
int
int
inc
add
and
xor
mov
jmp
mov
movsl
jne
js
xchg
push
into
xchg
aaa
push
jmp
xchg
sbb
push
xor
jl
test
push
aam
adc
pop
andl
and
int3
and
mov
sarl
mov
lea
aas
cltd
mov
xlat
lret
add
pop
sub
cmp
out
add
xlat
cmp
xchg
add
aaa
scas
bound
and
add
in
movsb
out
xchg
hlt
jge
push
gs
rcrb
insb
icebp
push
out
mov
sarl
arpl
in
dec
nop
test
mov
dec
push
mov
iret
fisubs
push
fcomps
ficoml
cmpsb
scas
icebp
sub
jno
stos
test
inc
pop
cmc
stos
cmp
cltd
call
in
mov
in
movsl
outsl
add
mov
out
jle
xor
jle
sbb
jmp
pop
or
or
out
in
fwait
xor
and
add
push
xchg
aaa
inc
daa
sub
mov
out
mov
sub
jno
arpl
popa
xor
mov
cmpsl
scas
fwait
jnp
inc
cmp
or
out
fistl
dec
sub
cwtl
pop
pop
nop
pop
shlb
movsb
testb
mov
mov
push
and
imul
mov
and
jo
mov
loopne
lcall
enter
mov
push
ja
cld
inc
mov
mov
sbb
sti
testb
sbb
mov
lcall
aam
push
stos
insb
in
mov
ds
pop
push
dec
xor
push
repz
mov
aas
bnd
sub
cmp
in
test
imul
and
gs
cmp
test
movsl
insb
in
in
jns
idivb
std
pop
shrl
dec
mov
mov
test
incl
shlb
stos
lea
mov
add
sbb
mov
ljmp
mov
push
mov
sti
mov
sbb
pop
push
and
cmc
or
jge
sahf
pop
aad
or
mov
mov
ljmp
cli
cmp
adc
divl
aas
inc
xor
stos
stos
xsave
cmp
sub
cmp
lock
sbb
pusha
jge
fdivrs
jge
jbe
jb
cmpsb
enter
push
jg
cwtl
xor
add
adc
test
sahf
pop
adc
xchg
into
mov
and
push
pushw
mov
das
shr
cld
or
xchg
imul
or
insb
xchg
frstor
cld
lret
dec
mov
aaa
subb
or
push
push
jle
test
rcll
add
push
mov
pusha
sbb
mov
jbe
push
lret
pop
adc
or
sbb
dec
xor
test
jmp
lods
pop
aad
mov
aad
cmp
outsl
push
ret
pop
scas
mov
lods
pop
mov
outsl
dec
mov
add
lret
scas
push
aas
add
sbb
popa
add
lods
fs
pop
sbb
cltd
sub
loop
mov
or
dec
xchg
dec
sub
push
imul
clc
push
and
mov
stos
and
out
pop
shll
sub
mov
aas
test
les
adc
mov
or
loope
xchg
ret
cmp
xor
fwait
ja
inc
loopne
pop
testb
test
and
std
jge
pop
push
ret
or
js
sub
mov
add
jo
mov
mov
xchg
nop
loop
and
pop
out
jb
test
cwtl
icebp
repz
inc
jmp
add
pusha
and
mov
jns
call
xlat
out
adc
mov
loop
xchg
and
lret
adc
imul
push
pop
push
out
jp
insl
stos
xor
cmp
lock
inc
pushf
push
jo
popf
leave
push
icebp
push
aaa
mov
repz
lods
insb
stc
les
or
or
scas
inc
sub
fs
adc
sub
cmp
lock
imul
js
mov
call
rep
push
sub
add
push
ja
inc
xor
cmp
sbb
xchg
xor
dec
adc
pop
or
mov
adc
test
mov
hlt
lods
testb
test
mov
mov
push
inc
aas
mov
inc
jl
push
or
sbb
mov
paddusb
iret
insb
gs
std
push
movsl
xor
ret
push
aam
mov
cmp
jbe
sbb
dec
imulb
xchg
cmp
mov
xchg
aas
sahf
jno
push
pop
pop
mov
mov
xchg
dec
test
mov
imul
sbb
dec
mov
push
xchg
test
sub
xchg
stos
inc
mov
or
mov
icebp
lds
cmp
sbb
cmp
push
fnstcw
test
flds
or
imul
xor
jecxz
jmp
lock
pop
fwait
sbb
or
outsl
mov
xchg
and
fbstp
push
xor
loope
dec
sub
sar
push
mov
sbb
cmc
jge
adc
popa
xchg
cmpsb
std
push
xor
rorl
mov
mov
shlb
or
push
out
stos
mov
fcomi
xchg
adc
sub
jmp
xor
iret
sar
repz
xchg
movl
jae
test
dec
fwait
jg
mov
xor
xchg
pop
sbb
cmp
shrb
sub
in
enter
lahf
icebp
dec
out
adc
sbb
aam
in
lods
push
sub
cs
sbb
lret
and
mov
cld
sub
andl
lcall
xlat
out
pop
arpl
dec
cmp
xor
leave
cltd
mov
cmc
outsb
cmp
loope
xchg
lret
xchg
dec
pop
xor
mov
and
clc
push
lahf
lret
int
das
or
imul
jl
pushf
mov
jno
or
rolb
add
inc
iret
sbb
imul
pusha
adc
and
testb
out
iret
fs
sbb
mov
inc
jle
stos
aaa
popa
mov
dec
or
mov
cmc
sub
mov
inc
out
xchg
sub
cmpsl
adc
mov
roll
inc
dec
lock
sub
ret
test
pusha
or
pop
icebp
aas
scas
ret
push
loop
push
test
rorb
mov
mov
inc
sub
orl
test
pop
jge
fs
xor
sub
mov
stos
call
mov
or
icebp
push
or
js
push
xchg
and
mov
xor
fisubrs
rorb
cmp
and
nop
out
test
xchg
notl
cmp
std
fwait
adc
ficomps
fdiv
xor
iret
nop
sti
xor
hlt
test
out
xor
push
xchg
leave
lods
xor
lret
push
push
and
cmp
xor
ja
and
sbb
lods
add
cmpsb
push
jl
push
pop
push
out
stos
and
push
addr16
add
and
cmp
insl
xchg
and
stc
cmp
fistps
mov
mov
aaa
mov
ja
inc
mov
ljmp
sub
jmp
pop
xor
adc
jl
pusha
mov
scas
leave
push
pop
xchg
inc
mov
lock
and
lea
mov
fmuls
pop
ja
sti
hlt
dec
and
rcrl
and
mov
popf
rorl
aam
pop
stc
mov
aas
xchg
mov
sbb
xor
xor
adc
xchg
shlb
nop
mov
outsl
cltd
adc
fcmovbe
mov
dec
das
cmpb
cmp
add
inc
adc
sbb
pop
mov
pop
outsl
mov
imul
rcrb
mov
mov
addr16
mov
scas
push
jnp
mov
scas
adc
test
aas
cmp
into
nop
aam
add
xchg
jmp
adc
add
stc
push
push
cld
shl
dec
pop
mov
mov
pop
std
fdivrs
cmpsb
pop
pop
vmulps
push
adc
in
dec
sbb
pop
mov
test
orb
idivb
add
adc
mov
aam
and
es
rolb
outsl
fists
leave
mov
lods
jl
mov
jo
int3
repnz
push
jne
xchg
dec
clc
jo
jp
data16
jmp
adc
pop
icebp
gs
dec
mov
mov
sub
add
les
mov
ret
aad
push
call
jb
mov
lds
or
fwait
mov
mov
arpl
jg
adc
jp
dec
jmp
ljmp
push
ja
fwait
roll
xlat
cmp
cltd
aas
sti
push
mov
pop
icebp
pop
push
cmp
das
popa
jne
cmc
jns
push
sub
or
int
push
fsubrp
mov
rcr
jnp
add
fnsave
push
mov
dec
jbe
aaa
int
cli
in
sahf
sub
dec
loop
cmp
sahf
mov
insl
icebp
clc
pop
pop
xor
cmp
mov
pop
sbb
dec
inc
jb
adc
mov
rcl
adc
cmp
insl
arpl
push
mov
sub
repnz
out
and
xchg
int3
inc
mov
es
cmp
push
imul
orl
pop
pop
push
mov
ljmp
cmp
dec
fiadds
arpl
add
add
bound
pop
stos
xor
ja
std
mov
ljmp
insb
cli
push
adc
add
loope
fnstcw
xor
pop
cltd
cwtl
cmpsl
pushf
inc
add
shrb
mov
in
xor
lret
jnp
pop
xor
pusha
into
in
insb
pusha
jne
aad
add
faddp
jb
xchg
add
pop
inc
xlat
stos
dec
xchg
imul
popf
fstpt
addb
push
lcall
xchg
xor
lahf
lret
pop
inc
mov
mov
scas
sub
cmp
and
or
sub
fstl
int3
mov
repnz
pop
xlat
and
or
xchg
data16
enter
mov
ljmp
add
mov
dec
add
xchg
inc
adc
adcl
jecxz
ss
cs
out
inc
iret
xorb
fdiv
fst
jbe
aad
xchg
fmulp
scas
pop
dec
mov
or
divb
addl
sbb
repnz
add
push
imul
dec
cmp
out
test
jecxz
shll
shrb
insb
mov
xor
xor
inc
lds
je
inc
rcr
inc
cmp
pop
mov
push
iret
xchg
punpckhwd
add
cmc
pusha
lock
xor
inc
push
pushf
xchg
out
adc
fcompl
jle
rcll
sbb
stos
test
xchg
jmp
push
out
adc
into
into
pop
hlt
dec
xchg
rcrb
fidivs
push
or
fidivs
fwait
adc
pop
mov
add
movsb
xor
orb
je
dec
cmpsl
xor
adc
out
movsl
sub
subb
and
mov
andl
cmp
pop
sbb
in
daa
xor
sub
addr16
js
mov
mov
push
add
int3
dec
imul
rcr
clc
aad
xchg
mov
mov
enter
pop
bound
nop
shll
mov
xorl
addb
into
adc
pop
testb
mov
movsb
jle
subl
xor
inc
sub
lcall
lcall
pushf
mov
mov
imul
sub
jl
mov
testl
mov
test
mov
shlb
adc
out
push
mov
and
out
out
repnz
xor
scas
js
or
inc
mov
mov
out
add
shll
pop
shlb
repz
nop
fsubs
cmp
sbb
cmpsl
loopne
in
sbb
jl
dec
aam
pushf
cmp
push
xor
dec
or
mov
mov
cwtl
sbb
mov
iret
mov
and
push
mov
repnz
sbb
sbb
stc
or
jl
push
or
pop
jecxz
std
mov
sub
xchg
xchg
cltd
data16
mov
outsb
add
mov
ds
pusha
inc
in
mov
nop
test
and
inc
push
out
popa
or
gs
adc
pop
mov
popf
add
stc
arpl
repnz
add
push
in
or
bound
cmc
add
add
ret
out
aad
cmp
push
mov
mov
cmp
push
inc
dec
add
and
fiaddl
mov
lcall
orb
rcrl
or
push
mov
shll
push
xor
inc
pusha
push
addr16
sub
imul
add
add
in
out
lret
outsb
gs
mov
mov
pop
hlt
push
mov
jp
adc
jg
cld
xchg
pop
sub
mov
push
addr16
aas
lds
shl
jp
push
pop
loope
and
or
pop
lds
lret
xor
and
scas
test
mov
outsb
outsl
sti
ds
xchg
repz
sub
outsl
testb
int
push
jge
aad
scas
pop
dec
mov
mov
add
loopne
dec
cmp
push
pop
mov
shrl
mov
sbb
mov
test
mov
and
lods
gs
or
fldpi
lret
loop
cmpsb
aad
testl
gs
imul
lret
lahf
insb
lods
jge
mul
addr16
and
loopne
dec
push
and
aam
pop
inc
push
xchg
dec
shll
push
ja
scas
mov
pop
stc
and
popf
cmp
lds
mov
cltd
and
orl
ja
adc
aas
add
adc
mov
pop
js
testl
inc
pop
loope
sbb
imul
out
mov
mov
xor
decl
jnp
cmp
inc
mov
dec
mov
icebp
loope
cmp
ret
dec
leave
push
or
lea
cmp
xor
aad
jecxz
mov
xchg
xlat
or
jbe
push
xchg
je
fisubl
mov
idiv
into
and
adc
das
iret
call
shlb
push
rcrb
out
jl
mov
imul
or
insl
cmp
and
fimuls
aaa
lahf
mov
out
inc
push
push
or
adc
or
jle
pop
outsb
inc
popa
cmp
jge
jbe
sub
fildll
mov
add
push
mov
sti
lcall
mov
mov
cmp
add
adc
cmp
pop
jb
mov
test
add
es
sahf
and
test
xor
dec
clc
ret
cmp
push
icebp
adc
cmp
jbe
mov
divb
mov
xor
cmc
cld
sbb
mov
add
xlat
dec
insl
adc
jle
fs
notb
fisubl
aas
jecxz
pop
mov
mov
xchg
dec
loop
and
xchg
iret
xchg
scas
shlb
xor
mov
jno
lock
fstl
sbb
fs
dec
jl
inc
sbb
cmpb
incl
mov
enter
mov
fs
jae
inc
jo
mov
test
test
fidivrs
lahf
pop
icebp
aas
push
sub
lods
pusha
xchg
adc
mov
mov
mov
sub
push
out
dec
cmp
pusha
dec
xor
pop
jmp
mov
xor
push
xor
mov
xlat
mov
pushf
int3
mov
int
pop
dec
jo
xchg
out
push
bsr
dec
aad
fstps
cltd
enter
sarl
pop
js
cmpsb
mov
mov
test
jmp
in
rcrb
mov
push
mov
rorl
ret
cmpsb
fwait
negl
or
mov
sub
pop
test
xchg
pop
mov
xchg
jbe
or
push
and
cmp
lret
mov
stos
lds
dec
xlat
nop
shlb
push
sahf
jnp
stos
les
loopne
sbb
jecxz
in
cld
adc
sub
and
bound
movsb
or
aas
adc
mov
mov
jge
or
push
sub
int
sub
lock
xchg
dec
add
mov
mov
inc
stc
xor
or
sti
push
rcl
dec
mov
xchg
xor
repnz
sbbl
sbb
push
clc
lahf
sbb
cmp
xor
cltd
jbe
rorl
test
add
xlat
mov
xlat
push
sbb
fwait
scas
xchg
sahf
ljmp
jo
cmp
adc
xchg
js
cwtl
dec
or
dec
in
xlat
xor
add
mov
les
les
add
inc
daa
cmc
rolb
sbb
dec
mov
and
bound
push
cs
scas
jmp
out
push
mov
xchg
mov
stos
inc
jecxz
ja
fldenv
cli
fmull
cmp
ljmp
pop
jg
sbb
cs
enter
aaa
xchg
sub
daa
pop
push
inc
pop
es
jnp
lock
in
fisubrl
mov
push
inc
mov
andl
outsb
mov
arpl
push
and
enter
shlb
sbb
inc
lods
sahf
jmp
cmp
stos
sbb
push
loope
add
enter
xor
cmp
filds
sub
das
shl
movsl
cmp
out
inc
sub
xchg
or
enter
sub
xchg
push
int3
cmpsb
fmuls
cwtl
cmp
sub
dec
cwtl
clc
inc
xchg
enter
or
fcomip
sbb
jmp
popf
in
or
dec
shrb
or
and
lret
negl
push
push
in
or
hlt
cwtl
push
nop
add
jmp
jnp
test
subb
mov
clc
xchg
mov
dec
push
jl
add
dec
es
loopne
in
adc
imul
ljmp
movb
fists
ds
movb
outsb
mov
imul
and
jno
aad
hlt
sbb
flds
mov
loope
test
cmp
inc
lock
loopne
jbe
dec
int3
ror
clc
mov
int3
mov
repnz
xchg
or
cmp
scas
repz
add
hlt
sub
int3
std
push
pop
bound
push
add
popa
add
lock
push
fcoml
dec
pop
or
pop
jl
or
dec
push
jb
xor
adc
imul
push
inc
push
push
int3
xchg
lcall
adc
pop
inc
push
es
cwtl
xor
std
bound
xchg
movsb
aam
cmp
movsl
push
pushf
outsb
dec
dec
iret
push
jbe
stos
stos
std
fnstcw
push
push
inc
jmp
scas
test
lret
push
sub
pop
adc
pop
pop
dec
je
lcall
push
mov
jb
clc
mov
jbe
sbb
movsb
mov
xchg
aaa
push
clc
aas
inc
insb
mov
popa
repnz
stos
pop
mov
push
cld
jl
subb
cmpsb
dec
movsl
inc
xchg
fisttpll
negl
mov
mov
mov
mov
sbb
test
jg
pop
add
adc
popl
out
cmpsb
outsl
cmp
adc
jle
cwtl
dec
ds
mov
fstpl
loop
mov
stc
jl
std
dec
ljmp
aam
dec
hlt
jbe
or
ud0
pop
cs
sub
notb
dec
lret
sub
sti
push
and
jnp
in
cmp
dec
add
push
xchg
fdivl
sbb
fsubrl
jb
insl
in
jnp
inc
inc
sub
xor
arpl
lods
ss
cli
mov
jb
mov
xor
lods
addb
mov
sub
pop
pop
sbb
cmp
push
push
popf
or
add
or
out
and
sub
jo
dec
lock
jge
cmpsl
into
ss
int
fstpl
int3
mov
add
cmp
out
mov
or
inc
test
int3
mov
ja
inc
rorb
repnz
sqrtps
adc
jecxz
pop
dec
imull
adc
mov
cmp
dec
jecxz
out
xchg
fsubrl
or
pop
lahf
aas
rcll
push
inc
cmp
mov
xchg
add
popf
sub
add
mov
in
and
pop
dec
xor
sbb
jo
inc
xchg
andl
xchg
out
jo
ficoms
cmc
sbb
inc
cwtl
push
pop
sub
aaa
mov
inc
cmc
lods
sub
lret
sti
aad
xor
pushf
xor
das
insb
iret
cmpb
inc
jae
pop
jl
add
sbb
cmpsl
out
iret
jbe
dec
dec
pusha
sub
lock
fs
inc
loope
mov
lea
lret
pop
dec
xor
outsl
push
pop
mov
fsubl
loopne
iret
mov
out
add
into
aam
sbb
push
popf
adc
fnsave
out
pop
and
fst
push
int
pop
push
incb
popa
add
flds
mov
scas
stos
jae
or
mov
dec
dec
popf
adc
lds
jbe
push
inc
cmp
mov
insl
lds
insl
repz
lods
and
sbbw
pop
insb
xor
outsb
inc
mov
nop
fcomps
mov
mov
jecxz
lret
subl
cmp
cmpsl
pop
incl
shrb
fimuls
adc
cltd
out
stc
es
mov
sbb
fildl
mov
mov
sbb
mov
into
inc
dec
add
or
inc
lea
and
aas
daa
cmpsb
add
or
cwtl
in
jno
jmp
xor
cmpsl
pop
sahf
xchg
sub
ror
mov
and
push
scas
ja
inc
push
and
mov
dec
push
ficompl
ficoml
inc
jecxz
jb
push
xor
mov
and
cmp
or
push
out
popf
test
fs
std
dec
shrl
dec
lods
popa
push
lret
mov
sub
or
push
fs
lahf
cltd
outsl
fmul
out
jmp
jo
jae
shll
rolb
or
imul
and
call
adc
mov
lahf
sub
fstp
mov
mov
popf
mov
mov
outsl
and
xor
in
xchg
jae
fistl
inc
mov
and
fwait
aaa
sbb
sbb
sbb
or
sbb
sbb
jmp
scas
cmp
popf
xor
lds
cmpsb
cli
mov
mov
mov
out
and
das
jne
xor
push
icebp
dec
shl
movsb
das
push
sarb
push
mov
stos
insb
push
jbe
mov
ljmp
xchg
add
mov
dec
ficoml
fisttpll
nop
mov
fwait
mov
outsb
stc
mov
xchg
push
jecxz
mov
mov
arpl
lcall
add
loopne
pop
mov
daa
sub
inc
xchg
bound
repz
test
pop
nop
mov
xchg
dec
std
movsl
aas
test
mov
mov
into
in
call
sahf
mov
fs
ds
pop
xor
dec
sbb
push
pop
lahf
mov
mov
jmp
popa
push
fisttpl
insb
jno
scas
mov
adc
xchg
cmc
test
data16
push
mov
jns
outsl
ss
add
jp
aaa
cltd
and
gs
inc
stc
cmp
out
or
mov
pop
nop
push
test
mov
lds
shlb
mov
orb
and
aad
jmp
mov
fistpl
inc
inc
idivl
or
gs
mov
or
add
out
jg
sbb
or
insb
stc
ss
add
jmp
mov
xchg
push
xchg
cld
ja
jno
push
aas
push
and
mov
aas
bound
xchg
mov
into
fimuls
xor
cs
dec
ficoml
out
adc
loopne
xchg
jnp
rcrb
mov
push
mov
lds
dec
jmp
scas
outsb
popf
adc
shlb
add
repnz
xchg
fdivrs
or
add
addr16
xchg
pop
pusha
cmpsl
mov
loopne
pop
repz
lods
std
dec
and
pop
pop
pop
mov
call
popl
pop
rcl
jmp
imul
ret
mov
sbb
loope
sub
and
sbb
sub
pop
xchg
daa
mov
jle
je
sub
or
insb
jo
pop
inc
dec
add
fs
lds
ss
cmp
push
and
push
jae
sbb
pop
stos
pop
pop
data16
lods
mov
mov
jge
rcrl
movsl
push
adc
mov
mov
stos
push
shrb
or
shll
pop
in
gs
lret
cmp
jg
cld
mov
xor
dec
sbb
clc
bswap
outsb
sbb
pop
test
lods
out
and
push
scas
push
lods
dec
jg
andb
xor
push
and
mov
adc
in
cmp
addr16
adc
jle
movsl
push
hlt
stos
insb
ficoml
pushf
inc
add
ret
jns
pop
lahf
out
sub
ds
lret
filds
mov
push
or
jo
or
inc
fldcw
push
adc
repnz
gs
loopne
jb
mov
inc
xor
mov
insb
addr16
and
ret
ss
stos
lahf
loopne
ret
jno
pop
and
out
mov
adc
ret
adc
mov
outsl
out
ret
fwait
repz
xor
les
xchg
mov
sub
jnp
outsb
and
jns
inc
cli
lret
loope
and
cld
jno
sbb
sub
jbe
in
mov
cmp
xor
xchg
and
jo
xchg
std
xchg
mov
lds
xor
inc
ret
adcb
scas
aaa
pop
outsl
mov
xchg
xor
outsb
xor
lcall
fsubl
pop
sbb
dec
xchg
xchg
mov
fcoms
loope
ds
gs
ffree
out
dec
mov
xchg
sbb
mull
cmpsl
and
push
lock
pushf
lahf
sbb
data16
pop
push
dec
in
leave
dec
xchg
push
fsubl
push
mov
sub
push
pop
jmp
fisttps
mov
pop
mov
jl
cwtl
jecxz
test
jbe
sar
jnp
int
std
movsb
inc
adc
sbb
lret
sbb
jns
rolb
inc
mov
pop
iret
cmp
xchg
xchg
cmp
cmp
lods
cmp
inc
mov
fnsave
mov
cmp
mov
lds
aas
cmp
or
or
xor
cmp
fsts
jno
stos
scas
test
es
mov
xor
cmpsb
xchg
or
add
or
cmp
in
and
test
gs
cmp
ficomps
jle
scas
je
mov
add
xchg
mov
fidivl
dec
aam
cmpb
jge
insb
sbb
dec
sbb
inc
test
push
in
ficoml
adc
divb
mov
mov
dec
cmpsb
adc
aad
pusha
mov
cli
std
ficompl
adc
mov
cld
or
fdivrs
call
jp
es
repz
aad
inc
mov
cmp
out
mov
add
jo
sbb
xlat
push
loop
loop
pop
push
xor
mov
and
lea
inc
lret
ret
push
xchg
dec
jmp
cmpb
stc
lret
xchg
popf
cmp
xlat
push
outsb
mov
add
daa
ret
loop
jno
dec
cmp
xor
dec
les
subl
ja
dec
out
stc
fiadds
lcall
int
out
adc
test
lods
orl
jno
pop
jns
xor
aad
fisubs
xor
push
and
jb
xchg
je
dec
inc
or
ds
nop
out
add
push
xchg
xchg
in
xchg
add
push
dec
ds
idivb
fildll
fmuls
add
or
movsb
in
iret
in
sub
xor
xchg
fstl
int
mov
popa
jmp
dec
mov
push
jge
adc
loope
stos
loope
daa
imul
mov
pop
push
jle
aad
scas
clc
shl
inc
std
or
push
lret
xlat
mov
rclb
pop
sbb
and
sub
cmp
or
das
addr16
popf
pop
pop
fwait
adc
mov
ret
dec
cmp
lds
mov
or
xchg
lahf
and
cmp
inc
jl
sarb
insl
and
ret
shll
or
fimull
jb
or
negb
pushf
fwait
aam
out
cmp
xor
pop
and
sub
lods
dec
xchg
jmp
mov
push
dec
xor
add
mov
fmull
sbb
jmp
jae
leave
arpl
mov
test
lret
sub
adc
test
lock
into
sarl
dec
out
int
xchg
inc
sarb
xchg
imul
outsb
and
inc
push
inc
loopne
add
jo
mov
loop
out
sti
push
decb
and
inc
sti
add
pop
cmp
test
mov
ss
stos
sub
outsl
mov
in
adc
sbb
test
rcrb
or
aam
arpl
roll
pushf
sub
fcoms
adc
push
cmp
mov
lcall
xchg
in
inc
outsb
leave
inc
sbb
or
ss
mov
sub
xchg
daa
add
pusha
cmpsl
int3
dec
pop
fsts
pop
xor
or
lods
ret
cmp
insb
mov
mov
cld
push
pushf
imul
aaa
scas
in
fildll
mov
and
add
xor
in
mov
mov
in
inc
in
into
cmp
fsubrl
push
mov
sbb
stos
shll
adc
add
inc
inc
ret
lahf
jns
movsl
lret
and
xchg
mov
cmpsb
inc
mov
lock
or
push
test
inc
ds
test
push
lahf
pop
dec
or
das
xchg
inc
test
mov
call
push
lret
cmp
insl
jp
and
xor
and
repnz
cltd
adc
sbb
scas
in
jl
xlat
cs
and
sbbl
call
mov
mov
inc
adc
addr16
cs
cmp
xor
sbb
test
jns
sbb
jl
fwait
mov
loop
dec
inc
das
icebp
or
mov
and
mov
mov
jmp
jge
lods
push
xor
adc
in
dec
in
lods
mov
loope
popf
sub
push
rcl
xchg
ret
xchg
lahf
or
and
aad
sub
dec
mov
xchg
rorb
in
mov
lahf
adc
insl
cwtl
cmp
cmp
mov
movsb
push
cmpsb
sahf
cwtl
popf
mov
test
idivl
pop
daa
and
std
adc
xchg
dec
das
xchg
jecxz
or
loope
mov
imul
sub
and
jae
andl
mov
mov
or
mov
sar
mov
dec
or
lcall
mov
bound
insl
stc
xchg
mov
mov
jle
lods
sub
call
out
imull
cli
inc
lcall
mov
pop
icebp
sub
in
adc
jbe
sbb
repz
stos
inc
push
mov
fwait
data16
mov
sbb
insb
xchg
lds
fs
push
dec
loop
mov
enter
push
push
movsl
hlt
jo
aaa
lods
test
and
mov
fsubs
mov
push
repnz
adc
sti
and
lcall
mov
mov
pop
loopne
pushf
and
shlb
xor
out
lret
dec
and
xchg
mov
xchg
jg
loopne
mov
addr16
cmp
jg
dec
and
dec
sub
fdiv
xchg
mov
xchg
outsl
enter
mov
xor
andb
jecxz
mov
and
jmp
data16
loop
mov
outsl
add
mov
pop
inc
aaa
xor
cmp
pop
inc
sub
jb
andb
out
notb
adc
std
push
jecxz
mov
rcll
xchg
add
sbb
dec
push
pop
sahf
popa
nop
xchg
rol
jmp
jecxz
roll
xlat
mov
jmp
push
add
lods
bound
sub
sbb
adc
mov
mov
call
out
mov
scas
insb
mov
mov
mov
adc
ja
sti
mov
mov
xchg
loopne
out
pop
add
dec
inc
adc
out
lods
pop
jge
inc
jo
xchg
into
fsubrl
jae
in
mov
lcall
fld
push
loopne
cmpsl
in
inc
sub
pop
testl
pop
iret
mov
dec
mov
mov
jnp
xchg
jmp
dec
insl
inc
sbb
sub
cmp
dec
jne
xor
or
sub
fsubr
mov
pop
sub
sub
add
mov
mov
movsl
or
out
cmp
push
fistpl
sub
mov
push
je
int3
add
xchg
mov
outsl
out
add
movsl
add
fisttps
add
leave
test
enter
or
sarb
idivb
sub
testl
jns
pusha
cmp
lret
sbb
xor
cmp
mov
dec
imul
jae
test
sar
clc
dec
rolb
adc
mov
sub
hlt
xor
jnp
inc
xchg
push
sarl
lods
scas
leave
dec
fcmovu
jle
jg
push
push
sbb
and
addr16
pop
cmp
stc
dec
call
jnp
and
hlt
xchg
stc
lds
jo
push
xchg
sbb
fwait
and
aad
sub
enter
push
cld
jbe
call
loope
mov
mov
rcrl
gs
aad
mov
xor
mov
es
stos
jg
and
and
push
mov
out
push
outsb
test
dec
ret
mov
ljmp
xor
xchg
jge
fistps
sahf
sti
sbb
stc
mov
cmp
fnstsw
icebp
bt
jge
sub
cmp
xorb
aam
in
cmc
mov
mov
movsl
add
ds
ror
movsb
push
dec
pop
ljmp
pushf
or
pushf
adc
cs
xchg
repnz
lock
mov
inc
iret
leave
dec
rol
cmp
xor
push
dec
inc
fs
in
insb
das
jg
mov
decb
push
cmp
cld
stos
incl
lock
push
cmp
loop
insl
cld
fstps
mov
mov
adc
loop
imul
mov
movsl
sub
xor
mov
sub
xchg
fs
in
packuswb
test
enter
and
mov
int
fnstenv
out
xor
ret
pop
inc
out
outsl
addr16
add
add
daa
mov
push
xchg
xor
arpl
cmp
sahf
pop
inc
dec
sub
stc
rolb
movsb
push
aaa
scas
mov
test
and
cmp
addl
inc
aam
outsl
xchg
dec
cmpsb
inc
jns
mov
cli
jle
icebp
out
incl
xor
add
or
aam
das
mov
or
int
cmp
rorl
and
inc
fstps
and
leave
imulb
mov
rclb
adc
fisubrs
cld
xchg
rdpmc
scas
mov
mov
or
xchg
jg
repz
jnp
and
loop
int
test
test
pop
and
sub
cmp
nop
cld
inc
xchg
js
mov
jle
push
cmpsl
test
clc
mov
lods
dec
cmp
fstps
fs
imul
adc
jo
arpl
inc
sbb
lods
or
push
push
inc
push
add
pop
cmpsb
out
leave
cmpsb
sub
pop
jge
test
filds
cmpsb
ss
arpl
push
mov
icebp
dec
repz
mov
and
sar
push
aam
outsl
jg
aas
push
int3
add
fwait
mov
sub
dec
mov
sub
sbb
imul
inc
loop
push
pop
cmp
sbb
or
push
jae
mov
pop
sbb
sahf
popf
sbb
out
lods
lods
mov
movlps
push
sub
mov
jg
aaa
fimuls
mov
lahf
or
in
rol
adc
loope
roll
dec
adc
clc
addl
inc
pusha
lahf
scas
stos
mov
negl
add
pop
mov
je
ret
pusha
fcomps
sub
or
loop
mov
pop
push
cmp
sbbb
and
add
out
inc
rolb
mov
adc
mov
int3
std
push
xchg
ljmp
lock
cld
pop
pop
pop
ljmp
sti
mov
lret
ja
add
rclb
rorb
mov
push
nop
or
ficompl
mov
xchg
cs
mov
in
popf
sbbl
mov
fwait
push
xchg
frstor
pusha
jecxz
int
das
addl
inc
popl
inc
lock
and
mov
arpl
mov
test
and
pop
call
fdivp
lods
xor
inc
std
out
jmp
xlat
cs
push
test
imul
shlb
pop
lahf
inc
mov
mov
mov
scas
sbb
xchg
xor
xchg
mov
sub
add
movb
inc
shlb
shlb
cmpsl
test
orb
xchg
scas
cs
divl
jne
ret
into
lds
movsl
and
mov
scas
cli
enter
sbb
push
das
mov
push
lcall
sarl
adc
push
ficomps
sbb
ret
jno
add
cmp
outsb
sbb
jl
loop
adc
in
orb
fbstp
arpl
jl
stc
fnsave
jne
in
in
jmp
jg
add
push
frstor
sbb
loop
rcrl
ljmp
fmuls
push
lds
cmp
rcrl
pusha
daa
mov
mov
dec
subb
jb
xor
daa
jno
mov
cli
rclb
test
popa
or
int
mov
add
loopne
ja
repz
push
push
mov
sar
imul
dec
out
data16
pop
iret
call
sti
adc
andb
push
idivb
cmp
fs
dec
push
xor
test
into
ljmp
inc
lcall
outsl
fwait
cmp
pop
clc
scas
push
int
cmp
jns
popf
sbb
adc
movsl
mov
jns
sub
out
outsb
sub
adc
sbb
lea
in
aas
je
addl
sbb
out
push
lahf
popa
test
or
mov
cmp
jne
adc
notb
cmp
test
add
push
fimuls
movsl
or
pop
mov
icebp
add
dec
inc
loop
xchg
mov
mov
adcl
es
addb
rolb
mov
mov
push
in
adc
and
mov
xor
jecxz
scas
jno
repnz
mov
add
dec
mov
jns
mov
test
xor
and
nop
fsts
adc
in
and
pop
lret
mov
sarl
dec
mov
aad
dec
adc
mov
out
out
ss
push
dec
xor
jecxz
movsb
stos
fs
dec
dec
cli
jle
incb
adc
sarb
lret
push
adc
sub
test
xchg
mov
pushf
ret
inc
popa
push
inc
gs
cmp
or
sti
sub
fcmovnbe
push
imul
jmp
inc
in
add
into
fcoms
push
in
pop
and
cwtl
mov
std
insl
movsb
xor
and
mov
add
outsb
xlat
mov
mov
xchg
inc
push
jb,pt
mov
mov
push
je
jmp
fstps
aad
xor
mov
in
scas
jns
into
xchg
pop
or
xchg
in
cmp
mov
mov
mov
daa
mov
inc
ret
je
scas
ret
adc
scas
or
mov
cmp
jle
inc
push
sahf
dec
push
xchg
test
jl
and
add
lret
mov
js
cld
popf
mov
leave
jo
cmpb
cltd
mov
bound
and
adc
adcl
mov
sub
sbb
ret
push
pop
js
bound
into
mulb
js
ss
and
mov
xchg
add
aam
in
sub
ljmp
xchg
shll
std
insb
enter
xchg
jl
mov
xlat
lret
pop
jge
or
out
mov
sarb
xchg
addb
sbb
pop
push
sbb
pushf
leave
mov
mov
push
push
or
arpl
adc
cmpsb
add
jmp
pushf
call
sbbb
iret
lods
xchg
ficoml
pop
lods
fldl2e
loope
daa
iret
jp
mov
jns
dec
xor
ljmp
bound
jl
mov
addr16
jb
movsb
imul
pop
out
pusha
or
in
cltd
in
sbb
jecxz
push
xchg
fsts
dec
fistpll
aas
mov
xor
and
movsl
cmp
sti
shlb
mov
adc
sbb
insl
ss
and
pop
cmp
fidivl
dec
push
or
mov
cmc
pop
sbb
popf
jno
push
mov
aad
dec
hlt
pop
inc
inc
or
sub
jo
stos
xchg
sbb
ss
or
test
out
push
out
push
out
mov
push
dec
addr16
arpl
rcrl
mov
xor
out
cmp
xchg
add
adc
push
inc
mov
xlat
shlb
dec
das
dec
pop
cmp
and
jle
outsl
jns
cmc
imul
ljmp
mov
sahf
dec
loop
in
fcomp
daa
mov
mov
das
add
mov
adc
pusha
pusha
pop
insl
sub
cmovb
pop
add
mov
dec
sub
inc
sub
fisttpll
and
out
xchg
mov
sbb
inc
fdivrl
dec
inc
jmp
in
dec
aam
jp
arpl
xor
aam
call
xor
out
mov
push
mov
jl
xchg
pop
shr
or
inc
shrb
mov
cmp
shlb
stos
xlat
add
dec
mov
pop
pop
jae
inc
jbe
xchg
xor
push
jge
insl
scas
adc
arpl
adc
lcall
int3
inc
data16
mov
cmpsb
push
push
lcall
lock
push
clc
and
fwait
xchg
lods
into
idiv
inc
mov
ficoml
jmp
ljmp
pop
adc
dec
push
mov
scas
fsubl
ja
out
arpl
testb
add
loop
dec
out
mov
lea
add
fidivl
popf
sub
scas
adc
sub
mov
cmc
pop
xchg
jge
inc
jo
xor
shrb
test
hlt
imul
push
mov
inc
pop
lds
hlt
nop
xor
mov
adc
mov
std
mov
cmp
add
jmp
je
and
pop
out
test
aaa
mov
sbb
ss
fistps
mov
into
roll
out
addr16
scas
andl
jge
imul
lds
movb
stos
int
movsl
scas
adc
and
pop
mov
add
dec
movsl
bnd
adc
pushf
mov
std
inc
lock
das
adc
leave
pop
imul
movb
test
scas
xchg
adc
mov
rorb
shll
adc
fmull
lods
std
mov
jb
es
lods
fcmovnb
pop
mov
mov
iret
into
add
jae
jle
adc
mov
xor
aam
or
xchg
lds
orb
sub
lret
fldcw
je
dec
pop
sbb
ficoms
mov
adc
sahf
xchg
pop
xchg
fstp
scas
and
mov
imul
adc
push
pop
cmp
arpl
leave
dec
dec
fistpll
xor
sahf
pop
outsl
xchg
sbb
jbe
stos
adc
adc
clc
add
lock
out
ss
mov
pop
cmp
mov
lret
in
imul
jp
test
divb
mov
sub
stc
sti
cmc
xchg
cmp
shlb
mov
jno
dec
add
fwait
sahf
and
dec
scas
or
push
xor
or
sbb
push
clc
inc
sub
mov
cld
pop
lds
xchg
imul
push
mov
push
dec
sub
push
lods
xor
pop
mov
in
shrb
jl
jge
test
mov
pop
add
sbb
rorl
mov
les
mov
mov
push
into
mov
jns
mov
test
iret
dec
ds
mov
sti
sub
lret
or
xchg
xor
push
enter
add
xchg
pusha
ljmp
push
mov
popa
fldenv
cmp
jle
popa
cmpl
int
dec
cltd
sbb
mov
andb
push
je
lods
dec
addl
add
mov
xchg
outsl
outsb
dec
loop
mov
loope
inc
mov
cwtl
xor
add
xlat
cs
outsb
mov
dec
xlat
insl
jne
test
mov
aas
mov
jo
sbb
pop
or
int
push
ss
loopne
push
cmpb
cltd
xchg
and
fsts
aad
add
enter
les
sahf
ret
mov
rolb
jl
mov
push
mov
sub
dec
popa
sub
sbb
mov
xor
out
sub
mov
and
enter
mov
lahf
dec
stos
xchg
push
adc
pop
push
js
pop
sahf
mov
add
jmp
popf
in
test
in
xchg
test
in
scas
ficoms
mov
fcmovnb
sub
xchg
std
int3
hlt
jg
jbe
dec
test
mov
jb
xchg
adc
mov
mov
xor
add
xchg
inc
js
or
mov
inc
imul
addl
push
inc
cld
aas
mov
push
ret
es
sub
ds
movsl
pop
mov
lods
add
mov
inc
sbbb
lds
cmpsb
push
aaa
inc
data16
xor
sbb
mov
sub
add
push
loop
imul
or
icebp
movsl
push
mov
jbe
mov
xchg
imul
pop
jb
test
push
lahf
out
nop
jmp
pop
jg
sti
sbb
loope
and
cmc
stos
data16
sub
mov
add
popa
mov
ss
jnp
sbb
mov
inc
jns
lcall
and
push
pushf
xchg
dec
repnz
push
mov
pop
pop
sbb
cmpsl
shll
pop
jecxz
mov
mov
in
and
xchg
jne
nop
pop
inc
sbb
xchg
or
das
out
gs
sbb
xor
scas
outsl
sahf
arpl
mov
lahf
pusha
imul
push
sti
in
or
sahf
jmpw
jno
pop
and
repz
add
mov
mov
lcall
cmpsb
lods
jo
inc
xor
and
add
test
insl
mov
in
outsb
inc
mov
mov
sbbb
mov
les
call
and
loop
mov
mov
out
test
xchg
sbb
xchg
jg
lahf
adc
sub
int
inc
jne
xchg
lds
xor
hlt
push
mov
ret
xchg
fsubrs
aad
xchg
aad
mov
dec
in
xor
cmpsb
push
scas
ljmp
mov
pusha
imul
loope
out
scas
or
bound
mov
dec
sub
fnstenv
idiv
pop
in
mov
cmp
jo
cmc
es
out
in
push
jb
pop
mov
xchg
int
xchg
push
sbb
and
in
inc
pop
add
in
add
sub
jp
pop
inc
and
jmp
push
fadd
pop
pop
lods
into
and
jp
mov
loope
mov
mov
dec
xor
mov
pop
and
jge
mov
addr16
fucomp
push
notb
cli
fstps
sahf
xchg
std
mov
jmp
cwtl
mov
mov
es
rcrl
sbbl
mov
jl
jl
pop
and
mov
or
aad
jb
outsl
or
inc
or
xchg
bound
int
add
subl
outsb
dec
mov
jbe
test
or
jl
les
pop
and
sub
inc
notb
mov
push
fidivrs
mov
nop
aas
imul
mov
ja
xchg
in
mov
cmp
sti
pop
xchg
dec
aaa
ja
mov
repnz
pop
adc
jne
pop
lea
pop
repnz
mov
rol
test
les
sbb
xor
inc
xchg
xor
mov
mov
jl
sub
adc
jb
or
call
call
pop
dec
cmp
mov
jb
testb
in
lea
pop
and
cmp
sahf
pop
sarl
jp
mov
sti
popa
mov
adcb
das
call
rolb
out
arpl
xor
mov
sti
lods
jbe
and
mov
inc
dec
mov
testb
dec
or
lods
fcoml
test
adc
mov
and
mov
movsb
push
ret
rcl
sbb
mov
mov
mov
rcll
inc
sarb
cmp
fdivrs
fwait
cmp
aam
popf
jae
xor
std
mov
loope
adc
inc
into
inc
fbstp
out
dec
cmpsb
mov
or
add
adc
notb
mov
imul
xor
xor
gs
jno
pop
fimull
repnz
enter
ficoms
test
loopne
mov
sub
daa
fisubl
hlt
mov
ds
push
nop
push
push
sub
icebp
push
mov
mov
sbb
scas
shlb
dec
add
repz
repnz
cld
inc
inc
movsb
std
pop
rolb
inc
and
pushf
notl
mov
jp
in
cmp
out
rorb
cmc
stos
mov
xlat
mov
outsb
cmp
and
push
mov
sbb
aaa
in
push
lahf
jp
inc
mov
repnz
divl
mov
pop
or
lea
aad
in
mov
mov
jle
ret
jb
mov
pop
mov
and
xor
aaa
mov
mov
lahf
xchg
aad
lock
leave
scas
fmull
test
dec
cmp
pop
pop
inc
aaa
jecxz
add
js
push
push
popa
and
push
xor
adc
and
and
add
pop
bound
outsl
mov
pop
out
or
pushf
jns
mov
divl
test
bound
pop
mov
pop
mov
fcoms
pop
inc
lahf
ficompl
or
insl
nop
insl
add
add
pop
mov
adc
pop
push
push
adcb
movb
adc
out
popf
sbb
jno
push
movsl
add
pop
or
ret
jae
cmpl
stc
daa
adc
add
cld
or
shlb
jbe
pop
pusha
mov
push
ds
jno
repnz
mov
jns
pop
leave
mov
inc
sbb
mov
cmpl
xor
adc
xchg
sahf
push
data16
shlb
inc
jo
das
popf
arpl
lcall
add
pop
test
hlt
add
int
xchg
sbb
out
notb
mov
pop
in
out
inc
cmp
ss
sbb
and
sub
xchg
push
cli
faddl
push
push
push
push
test
loope
sbb
lret
scas
std
or
dec
jmp
mov
mov
mov
pop
int3
lds
cltd
sahf
rcr
fwait
das
jne
js
sub
sbb
lcall
mov
adc
and
stc
ret
negl
shll
jp
rep
popf
test
shll
aaa
mov
inc
and
push
mov
jbe
mov
inc
mov
adc
or
adc
inc
add
lahf
jl
mov
out
decb
aas
sub
in
jle
sub
cmp
xor
shll
dec
stos
sarl
pop
sbb
call
nop
ret
add
test
std
dec
in
jecxz
push
jg
xchg
cmp
bound
cmp
xorb
fmull
sbb
fwait
mov
mov
sub
dec
adc
enter
jecxz
mov
cmpsb
mov
dec
jb
into
sub
dec
push
cli
adc
or
ljmp
pushf
fistpl
ljmp
push
push
xor
adc
xlat
gs
and
dec
mov
jb
cwtl
dec
out
or
movsl
mov
xlat
sbb
dec
mov
xor
xlat
sahf
ds
jg
daa
rclb
add
jno
mov
je
cmp
sti
adc
xchg
add
fs
push
stc
mov
sbb
sbb
lods
dec
and
jnp
repnz
or
pop
dec
jle
mov
out
push
ret
mov
sbb
lea
addl
mov
jnp
gs
fmull
sub
lret
dec
loop
outsl
fisubl
mov
aaa
jmp
mov
scas
stos
xchg
test
pushf
je
fnsave
adc
mov
popa
cmpsb
sub
popl
int3
sbb
jae
sub
lods
sub
mov
pop
xchg
mov
adc
fsts
push
clc
add
dec
mov
pop
adc
xchg
jnp
cmpl
and
out
jl
out
mov
faddl
ret
jp
daa
enter
adc
popf
fldenv
or
push
mov
sbb
lock
ret
jae
out
shrl
sbb
push
fimuls
push
xchg
nop
cmpsb
inc
fwait
in
dec
gs
fs
xchg
lea
mov
xchg
xor
mov
and
lret
and
loop
xchg
dec
lahf
add
mov
xor
jb
or
sarb
adc
ret
xchg
pop
add
xor
outsl
dec
cmpsb
aas
xchg
test
xchg
mov
or
fisubl
push
out
push
or
add
sarl
push
add
scas
popf
and
stos
jmp
pop
push
xchg
xchg
int3
rcr
fucomi
mov
cld
into
sub
rcl
cltd
orb
and
dec
push
and
mov
xchg
pop
das
sub
cmp
jbe
lods
xor
pop
xor
enter
jg
pop
js
loopne
sti
lods
sbb
mov
daa
or
into
mov
rcrb
xor
pusha
inc
out
mov
icebp
or
sti
mov
or
and
iret
push
lahf
repz
add
mov
and
test
or
aad
shll
pop
cmc
mov
jge
outsl
jecxz
xor
and
aam
cmpl
pop
aas
mov
js
cmp
jbe
in
ja
and
dec
or
xchg
or
shrb
push
and
pop
dec
repz
repnz
arpl
cmpsb
jne
inc
nop
mov
jb
jl
lret
inc
rorl
dec
cld
inc
cld
mov
subl
xor
mov
mov
mov
push
cmovae
xchg
loop
xchg
cmpsl
and
rorl
adc
hlt
out
fiaddl
lcall
pop
sub
out
out
lods
shlb
lcall
aad
imul
test
jg
xchg
jb
cmp
outsl
testl
cli
fsubp
scas
mov
fisttpl
xchg
mov
mov
inc
jecxz
imul
leave
rcrb
pop
cltd
in
xlat
add
lcall
cmp
lret
cmpsb
ret
xlat
sub
mov
inc
jne
mov
mov
sbb
jg
inc
push
cmp
arpl
push
xorl
pop
inc
stos
nop
mov
inc
inc
fildl
mov
xchg
fs
push
xchg
and
bound
xor
mov
or
inc
iret
adc
repz
inc
pop
xchg
mov
cltd
lcall
pop
dec
mov
adc
or
loope
pop
xchg
adc
add
mov
test
enter
and
mov
mov
mov
or
adc
adc
test
xchg
movsb
or
enter
sub
and
mov
pop
cmovnp
push
subl
cltd
sub
mov
jl
push
loopne
gs
loopne
fcompl
jl
lds
in
mov
testl
sub
xchg
test
nop
pop
push
sbb
dec
mov
shrb
adc
movb
xor
and
pop
cltd
inc
push
mov
jge
mov
loop
pop
cwtl
xor
es
xchg
push
cmp
ja
sbb
adc
mov
xchg
or
out
fs
cmp
enter
inc
push
mov
int
addr16
outsb
add
ficoml
fwait
rorb
add
sub
sub
dec
mov
mov
sub
ficomps
out
adc
in
mov
inc
orb
cmp
add
xchg
clc
sbb
cli
std
mov
fyl2xp1
jmp
bound
pop
mov
mov
jle
jmp
dec
dec
or
jg
and
pop
dec
mov
sbb
shrb
cli
push
xor
out
rolb
and
jg
lock
or
mov
call
inc
add
pop
push
shll
xchg
inc
nop
dec
test
dec
movsl
cmpsl
mov
loop
pusha
adcb
sti
dec
addl
push
mov
xchg
imul
test
lahf
cmp
inc
test
mov
sti
sub
gs
mov
lcall
bound
cmp
xor
push
jb
push
iret
cld
test
cmc
jae
inc
call
data16
mov
adc
lret
lods
jns
adc
lea
push
pushf
push
mov
popf
xchg
lea
fiaddl
pop
mov
sub
fcompl
rorb
push
mov
push
sub
dec
and
xlat
stc
shrl
and
adc
push
inc
xchg
aad
hlt
push
cmpsl
and
xchg
inc
dec
addb
test
xchg
aam
mov
jnp
sarb
sahf
dec
andl
jmp
jne
cs
popaw
imul
sub
push
loopne
sbb
xor
icebp
aas
roll
jg
ds
ret
jnp
dec
fstl
pop
adc
mov
test
sbb
notl
scas
mov
fwait
daa
mov
jge
imul
xchg
ds
movsl
and
inc
sub
outsb
pop
sub
stc
add
lea
inc
xchg
mov
leave
mov
hlt
add
mov
cwtl
out
and
xlat
nop
sub
inc
mov
lret
xorl
je
xchg
add
daa
sub
mov
xor
mov
jmp
or
push
sub
aad
fnstcw
xchg
jb
fcomp
xchg
xchg
lods
dec
mov
jmp
sbb
test
cmpsb
dec
jb
adc
xlat
pop
pop
jmp
jg
out
nop
in
sub
faddl
loopne
inc
jb
mov
pop
test
ja
jle
push
push
lock
aaa
push
adc
aam
push
pop
mov
xlat
push
scas
and
adc
pusha
push
cmc
xor
add
pop
test
es
icebp
pop
nop
stc
arpl
shrl
pop
cmp
mov
test
dec
pop
sub
push
icebp
and
das
jmp
jmp
fsts
push
pushf
mov
sbb
dec
rdpmc
or
pop
clc
jecxz
jae
imul
cmpsl
enter
insb
popf
or
cmp
sub
sti
adc
shlb
dec
inc
adc
popa
stos
inc
gs
mov
sub
ja
pop
and
xlat
or
cmp
mov
jae
je
jecxz
xchg
jb
xchg
popf
shrl
mov
ljmp
mov
mov
int
pop
mov
adcb
sbb
inc
cli
ljmp
call
jp
xor
int3
dec
adc
nop
mov
and
enter
mov
lret
aaa
je
loop
push
lcall
mov
outsl
mov
mov
rolb
mov
mov
xlat
jbe
into
or
inc
out
movsl
scas
jl
shl
dec
imul
leave
repnz
les
mov
aad
dec
jp
or
mov
pop
inc
pop
cli
faddl
addr16
or
fisubl
out
mov
out
push
dec
mov
mov
aam
cld
insb
cs
sub
cmp
xchg
les
mov
add
clc
mov
std
rolb
loope
push
stos
cmc
stos
jg
pop
movsb
popa
push
ret
mov
or
or
inc
loopne
loope
add
pop
xchg
jnp
movsb
cs
cmp
jo
fistps
sti
mov
sub
push
rolb
jns
xchg
xor
jno
out
les
mov
cmp
aas
xchg
cmp
movsb
dec
jne
dec
insl
es
std
or
stos
lods
cmp
add
jo
leave
adc
mov
add
inc
and
sbb
inc
rclb
in
subl
popa
sbb
sub
adc
push
ret
adc
mov
int
push
out
arpl
nop
ljmp
out
negb
cmp
icebp
pop
hlt
and
push
sbb
inc
push
repnz
mov
mov
pop
mov
gs
jo
mov
adc
divl
push
xor
inc
out
shlb
mov
sbb
jns
lret
sub
pop
scas
xor
mov
ja
aad
int3
mov
je
in
jae
lock
jnp
xlat
xchg
notw
adc
push
xchg
sbb
fimull
les
xor
repnz
sbb
repnz
lcall
or
mov
mov
mov
pusha
push
enter
je
adc
mov
mov
aad
jl
add
sub
inc
mov
sarl
add
icebp
pop
ljmp
jns
out
dec
or
fistl
pop
out
push
ret
subl
xlat
push
xor
push
pusha
push
scas
into
mov
adc
pop
jl
fsubs
fstl
or
lret
ret
pop
ffree
fcompl
fisubrs
or
repnz
mov
mov
push
pop
dec
pusha
lret
stos
cmp
xor
or
es
fs
jle
cmp
cmp
dec
mov
imul
fdivrl
rclb
jp
stc
ja
sub
mov
pop
jg
repz
repz
mov
adc
inc
jmp
dec
std
pop
out
mov
hlt
pop
pop
push
sub
scas
sahf
mov
sarb
xchg
push
mov
sbb
sub
data16
popf
push
movsl
xor
jecxz
lret
stos
dec
lahf
clc
sub
sbb
sbb
rcr
jno
in
and
aas
mov
outsb
dec
mov
mov
shlb
not
leave
popf
sub
adc
mov
icebp
js
pushf
sbb
mov
xor
push
push
lods
insl
xor
mov
push
fsts
inc
add
xchg
lcall
dec
pop
outsb
jb
add
pusha
push
adc
dec
out
sti
dec
adc
mov
ds
sti
adc
dec
xchg
jne
mov
adc
xchg
mov
jl
dec
movsb
ficoml
rcl
pop
addb
jo
jne
inc
and
arpl
jnp
dec
imul
sbb
cmc
idivl
in
inc
mov
fcompl
mov
inc
adc
popf
dec
jno
cmc
pusha
fcomi
scas
and
mov
idiv
fdivr
fsubrs
sub
lock
mov
or
sub
jnp
inc
and
xor
and
and
cmpsb
sub
fists
leave
pop
sub
call
cs
cmp
xchg
icebp
lock
inc
rcll
mov
dec
sub
cld
cmp
mov
fsubs
mov
xchg
mov
lcall
out
in
dec
xor
inc
and
mov
xchg
inc
and
pop
sub
aad
imul
sub
and
and
sub
cmp
andb
inc
mov
stos
sub
pop
pop
jae
mov
loop
inc
mov
inc
popa
call
out
mov
bound
add
outsl
sub
test
mov
mov
sahf
adcl
xor
dec
out
mov
mov
lods
loop
jbe
cmp
fmulp
push
imul
fidivrs
sub
xchg
or
pop
lret
xor
push
ret
fs
jo
iret
mov
xchg
push
jno
imul
pop
into
in
mov
nop
cmc
movsb
add
cmpsb
mov
pop
jno
adc
dec
inc
dec
call
and
shl
mov
xor
mov
mov
xchg
adc
pop
test
jge
mov
fcompl
mov
out
clc
imul
xor
mov
addr16
mov
dec
test
bound
pop
nop
push
xor
mov
and
dec
dec
dec
xor
aad
add
cmp
sti
dec
fimull
notl
das
loope
les
push
arpl
mov
and
or
add
ret
mov
mov
leave
sbb
in
aam
jo
lds
mov
sahf
xor
iret
inc
imul
out
mov
inc
mov
repz
sub
filds
pop
outsb
pop
dec
mov
sbb
mov
ljmp
dec
mov
adc
xchg
mov
adc
mov
add
dec
data16
decb
jp
cmp
sbb
iret
mov
push
cmc
cmpl
inc
lds
mov
inc
testb
outsl
pop
roll
cmp
xchg
mov
int3
sti
mov
dec
adcb
ljmp
jns
mov
cmp
xor
cltd
dec
rcll
pop
cmp
dec
mov
in
pop
add
inc
pop
sub
aam
xchg
movsb
out
and
pop
imul
pop
adc
add
int3
call
add
mov
outsl
aas
mov
sbb
or
push
adc
pop
cmp
xlat
fcomip
fstpl
pop
pusha
dec
push
jns
in
and
push
mov
cmp
push
pop
std
icebp
adc
inc
sbb
and
out
pop
pop
lock
sbb
dec
fsts
stos
bound
jb
jmp
mov
inc
test
mov
xor
fprem
push
iret
enter
pop
or
fwait
jge
fidivrs
call
or
push
in
sbb
mov
and
jg
xchg
xchg
leave
imul
jae
mov
shrl
sbb
add
push
ss
jl
fs
cli
mov
inc
jno
jae
jae
ja
call
pop
nop
cmp
cltd
enter
inc
lcall
out
call
je
movsl
in
push
inc
mov
fsubs
iret
jae
jns
jne
in
adc
ss
xor
lds
iret
push
testl
repnz
jg
add
jecxz
negl
daa
mov
sub
cli
test
in
add
cmp
push
xor
in
dec
dec
shlb
push
sbb
adc
out
sti
pop
cmp
push
and
mov
push
je
xchg
cmp
sbb
cmp
scas
xchg
shrl
outsb
std
mov
pop
mov
shll
sbb
cmpsl
add
hlt
int
or
xorl
sbb
cmp
xchg
movsl
add
and
fisubrs
movb
jne
and
xlat
adcb
and
lea
xchg
mov
push
and
scas
and
mov
mov
scas
pop
dec
popa
push
or
iret
push
test
adc
jbe
js
andl
and
jmp
jae
sub
xor
dec
popa
insb
mov
mov
js
mov
call
ret
push
mov
mov
mov
or
repnz
fs
pop
outsb
lea
xchg
xor
mov
push
dec
ljmp
dec
cmpb
sbb
shrb
fdivr
pop
andb
mov
fwait
or
cmpsb
test
mov
pop
xchg
xor
add
dec
dec
jae
jmp
ret
mov
inc
or
push
pop
push
mov
inc
pop
cs
adc
stc
loope
mov
outsb
add
xchg
xchg
cmpsb
imul
adc
cmp
adc
xor
cmp
sbb
hlt
rolb
test
popa
je
adc
in
add
push
push
jge
push
jl
add
lahf
or
sub
iret
pop
fstps
or
dec
jno
sbb
xor
popf
bound
sbb
fucomip
scas
add
into
jg
inc
jbe
rolb
dec
imul
adc
aad
ds
xor
data16
cli
jmp
push
mov
cmpsb
xor
lret
cli
repnz
lds
ficompl
arpl
push
adc
ror
inc
cli
mov
dec
fists
inc
sbb
jecxz
inc
fs
fistpl
xchg
lret
sub
sbb
mov
or
push
dec
cmpsb
lret
xchg
push
outsl
js
sbb
xchg
xchg
or
fdivrl
adcb
push
mov
mov
ja
sahf
push
aas
decl
out
xchg
aam
mov
shll
mov
mov
push
xor
shl
into
ror
add
jnp
xchg
lods
pmaxsw
sub
rorl
push
mov
jp
fs
push
cmp
sub
repnz
mov
testl
pop
dec
rol
and
aam
sahf
sbb
jo
test
subl
push
dec
pop
xor
and
gs
sub
mov
mov
xchg
dec
cmpsl
or
int3
jp
inc
jnp
push
cmp
fmuls
add
jmp
inc
cmpsl
dec
inc
loop
mov
mov
adc
push
or
mov
xchg
sarl
hlt
sbbl
out
mov
mov
insb
mov
push
cwtl
jbe
cmp
mov
push
sbb
sbb
xchg
hlt
mov
ss
xchg
mov
xchg
add
mov
inc
stos
push
mov
sti
pushf
outsb
dec
lcall
and
gs
daa
shlb
out
cwtl
pop
subb
in
ss
sbb
sub
loopne
and
fidivl
dec
in
cmp
nop
iret
add
out
clc
stos
mov
dec
mov
xor
or
fnstsw
andl
into
or
xor
test
adc
lcall
mov
xchg
pop
cs
jnp
hlt
sbb
push
inc
flds
icebp
push
shll
jbe
pop
xchg
pushl
push
xor
fldenv
add
fdivs
cmp
rcrl
xchg
cmpsb
in
test
aaa
add
push
sbb
pushl
in
add
in
loope
dec
jne
addl
imul
ret
adc
and
fs
ret
adc
mov
push
mov
dec
mov
aad
inc
jae
dec
add
cmp
mov
test
aaa
rol
add
adc
dec
mov
frstor
push
clc
mov
test
data16
jne
pop
jo
mov
scas
sbb
or
inc
push
pop
jle
ret
push
loope
pop
or
jno
in
mov
scas
push
aaa
xchg
push
sahf
not
inc
aad
cmp
jmp
int
mov
js
pusha
sbb
sub
fldenv
sub
inc
std
cmc
popf
imul
xchg
cmp
out
mov
sbb
fdivrl
fistpl
mov
cld
mov
xor
mov
mov
orl
test
sub
pop
mov
mov
fnstsw
das
adc
rorb
mov
loop
or
or
mov
jns
mov
dec
jb
jg
inc
sub
das
sbb
dec
add
mov
adc
aaa
xchg
xlat
sarb
xchg
add
rclb
push
and
sbb
push
xchg
inc
mov
adc
int3
dec
fsubrs
aam
aaa
inc
push
ljmp
mov
adc
jmp
adc
outsb
into
sbb
pop
push
sbb
push
lret
scas
and
mov
push
lahf
std
mov
xor
jne
adc
lods
push
popa
push
sarb
sbb
dec
jae
ret
dec
lods
pop
mov
sarl
xor
push
dec
jecxz
pop
mov
dec
xor
lock
je
dec
jnp
scas
jb
mov
ds
push
xor
sub
movsb
popf
movsl
pop
push
in
add
and
shrb
enter
xchg
icebp
roll
lods
jmp
pop
std
xlat
xchg
dec
push
cmp
pop
sbb
mov
sub
adc
xlat
in
dec
sub
daa
dec
std
mov
aam
or
lock
lock
push
repz
mov
jae
push
sbb
inc
test
out
xchg
cmpsl
das
cmc
cmp
inc
addr16
out
push
ljmp
adc
loop
xchg
test
sub
and
adc
pop
mov
pop
loopne
and
fildl
movl
imul
aam
aad
out
rcll
push
int3
sub
int
loope
cwtl
mov
pusha
mov
pushf
sub
insb
jecxz
loop
call
push
je
les
jbe
hlt
sbb
push
inc
loope
ljmp
push
fwait
mov
gs
mov
cmpsb
adc
pop
push
inc
leave
mov
into
pop
xchg
je
loope
or
aas
loope
cmp
mov
xor
icebp
adc
push
mov
insb
xchg
pop
test
pusha
or
mov
dec
and
ret
enter
and
mov
or
fisttpl
push
cmp
inc
out
mov
pop
hlt
xchg
sti
std
pop
shr
movl
icebp
test
dec
pop
and
test
adc
outsb
lods
std
cli
mov
jp
outsl
mov
push
ja
inc
dec
jns
rolb
fmull
test
mov
aad
jmp
lods
cmpsb
cmp
repnz
call
inc
mov
mov
add
int
fxch
mov
aam
and
mov
repz
lods
mov
sahf
sub
hlt
mov
xlat
and
stos
adc
sahf
push
int3
and
int3
orl
imulb
pop
push
xor
popa
insb
icebp
cmp
cmpsl
mov
and
xchg
stc
push
cmp
add
mov
add
not
hlt
mov
mov
cwtl
sbb
fldcw
int
lcall
das
pushf
dec
adc
sub
lahf
xchg
mov
fs
scas
pop
lock
xlat
cmp
xchg
sbb
ds
into
jecxz
imul
fidivs
adc
and
shll
dec
push
sbb
fcoml
dec
xor
ret
lret
pop
aaa
stos
sbb
popf
fdiv
pop
jp
mov
outsb
movsb
dec
ja
xor
xlat
mov
jle
mov
test
int
lret
cmpsb
orl
test
xor
mov
lods
fnstenv
add
sbb
loopne
bound
lock
push
sub
test
loop
pop
adc
cmp
sub
lcall
loop
mov
mov
rcl
lcall
jae
mov
xchg
jne
and
pop
mov
pop
or
pop
in
stos
xor
xchg
adc
imul
mov
std
mov
push
mov
scas
test
inc
out
dec
arpl
ja
or
fcmovnb
pop
int3
dec
and
and
lret
jmp
cwtl
mov
pop
sub
or
xor
pop
and
mov
and
aam
jno
aad
dec
mov
pop
dec
ljmp
test
push
aam
push
sub
or
das
scas
dec
sub
add
sti
push
xchg
xchg
fsubs
inc
insb
lds
cltd
scas
pop
mov
stos
lods
xlat
mov
push
cmp
rclb
ret
cmp
lcall
sbb
mov
divb
loope
repnz
or
add
adc
std
rcll
and
icebp
scas
mov
push
and
inc
xchg
push
jae
mov
fsubl
int
lret
insb
push
fs
popf
ja
sbb
test
dec
cwtl
ljmp
sbb
mov
cmpsl
xor
inc
ret
mov
rorl
and
es
int
mov
outsb
pop
xchg
sbb
lcall
push
ss
iret
adc
jns
adc
sbb
jmp
jg
lods
incb
outsb
dec
lods
push
stos
mov
rorb
test
rcrb
out
mov
adc
inc
xchg
cmc
frstor
rcl
xor
cmpsb
clc
mov
out
and
mov
mov
cmc
mov
mov
xchg
inc
xlat
shrb
sbb
lock
fstl
insl
xchg
mov
cmova
les
xlat
push
mov
mov
stc
cwtl
or
iret
fs
ret
std
xchg
inc
mulb
xor
adc
gs
fsubs
rcrl
cli
lock
pop
lahf
add
mov
xchg
pop
and
call
stos
xchg
outsl
popf
pop
sub
push
ds
push
or
xor
int
in
fsubl
in
outsb
insl
mov
sub
sbb
les
or
sbb
dec
in
out
imul
imul
loopne
or
out
inc
mov
sbb
push
mov
aam
outsl
push
mov
sub
jmp
adc
mov
pop
jl
add
adc
mov
push
cmpsb
insb
mov
subb
fbstp
xor
lahf
clc
lods
int
push
mov
adc
es
aad
sarb
ja
push
mov
inc
mov
xor
mov
pop
int3
push
repnz
jge
jle
pop
loope
mov
fisubl
fwait
int
test
inc
insb
add
sarl
dec
sub
adc
das
mov
enter
les
push
sbb
inc
fs
push
sti
jo
cmp
sub
mov
out
mov
or
lcall
sub
sti
mov
inc
mov
push
imul
jne
inc
dec
fbld
jge
insb
pop
mov
jmp
jge
loope
lahf
outsb
lret
in
les
sti
jbe
jp
shr
cs
lcall
sbb
xor
push
push
xchg
notb
scas
jge
out
std
xor
jge
mov
pop
dec
mov
jl
ret
xchg
xchg
arpl
out
cwtl
rcrl
out
enter
inc
call
xchg
nop
xorb
bound
loope
mov
shl
fscale
ds
test
stc
sbb
sbb
xchg
rcl
mov
xor
xlat
lahf
aad
jns
out
outsb
sbb
inc
sbb
xchg
mov
into
rcr
iret
fisubrl
dec
insl
orb
push
xor
xchg
test
ffree
push
lock
mov
pop
sub
orl
out
repnz
es
and
test
jp
sbb
jns
arpl
aas
sub
cmp
lods
inc
sub
lret
xchg
jo
rcr
cmc
mul
mulb
addr16
gs
dec
arpl
cmp
sbb
push
inc
pop
pusha
mov
sub
das
jle
lock
ficompl
mov
nop
clc
rcrl
jae
repz
pop
jo
fs
xor
pop
and
cld
sbb
imul
pop
jno
jmp
filds
mov
xor
into
dec
mov
pop
aaa
add
sub
stos
fsubl
mov
dec
jbe
and
xor
ret
pop
js
jb
push
push
xlat
pop
xchg
push
mov
gs
sbb
jle
push
stos
mov
pop
test
int
ficomps
enter
lds
ret
ja
cmp
mov
into
repnz
or
imul
pop
rorl
clc
fsubl
pusha
pop
test
push
xchg
dec
loop
push
push
push
aaa
or
adc
dec
ds
mov
bnd
cmp
aas
gs
add
or
movsb
push
dec
lret
or
push
fwait
pop
push
fimull
dec
mov
xchg
mov
ret
loop
out
popa
inc
or
mov
adc
les
mov
jle
dec
mov
xchg
xchg
sbb
cli
arpl
push
dec
xor
mov
repz
mov
dec
pop
fbstp
shlb
mov
adc
add
cld
sbb
pushf
cmp
cwtl
sahf
fs
xchg
fistps
add
xchg
inc
pop
mov
shlb
sub
and
pop
dec
movsl
mov
pushf
pop
dec
push
jbe
pop
fldenv
mov
pop
ss
pop
test
mov
filds
lret
sbb
into
movsb
les
into
cmp
push
imul
mov
sbb
lcall
jp
movl
mov
test
cmp
xchg
arpl
mov
push
xor
inc
adc
cltd
lret
mov
int3
adc
adcb
icebp
adc
inc
ret
inc
mov
out
ret
in
jns
jp
xchg
out
mov
add
sbb
addps
call
jae
sub
dec
hlt
cmp
jp
xor
bound
xor
imul
pop
sbb
push
cmpsl
mov
dec
scas
xchg
rcrl
inc
out
fwait
loopne
clc
mov
jle
fs
rorb
mov
andl
and
aas
insl
sbb
and
into
adc
scas
mov
xchg
imul
mov
aaa
mov
add
xchg
xchg
lods
lock
daa
sub
xor
or
and
jne
sub
aad
cmp
movsb
pusha
xor
push
mov
mov
lret
adc
mov
cs
mov
imul
cmp
pusha
mov
or
sbb
or
dec
pushf
dec
push
ja
pop
pop
adc
lds
ljmp
mov
out
add
fmuls
rcrl
mov
sbbb
out
movsl
adc
cmp
je
scas
inc
das
push
in
rolb
jl
in
jnp
mov
mov
int
lea
pop
out
mov
insb
pop
pop
repnz
adc
daa
jmp
xor
pusha
xor
add
xor
sub
shlb
loope
sbb
cmp
adc
dec
push
cmp
or
out
mov
fwait
in
dec
lds
ja
and
scas
cld
roll
add
xchg
ljmp
xor
fildl
popf
adc
pop
cltd
jns
ja
cmpsl
sbb
push
int
pop
add
int
adc
mov
fistl
xor
js
dec
bound
jae
leave
jle
iret
pop
pop
add
fildll
ja
cmp
js
cmp
dec
imul
cmp
add
lret
and
mov
rcl
in
outsl
adc
test
popa
mov
sahf
seta
sarl
xchg
addb
sahf
cmp
das
or
dec
cmp
dec
rclb
scas
popf
insb
jge
and
hlt
dec
add
movb
lahf
rolb
mov
sub
faddl
or
popf
insl
and
add
scas
mov
mov
pop
mov
xchg
outsb
and
test
enter
push
test
sbb
out
or
inc
out
xor
mov
inc
lock
jb
mov
into
jbe
loopne
pop
adc
addb
stos
xor
lea
stos
or
mov
es
pop
in
cmp
mulb
in
loope
cs
cmpb
add
jne
push
sbb
pop
out
mov
jp
push
testb
push
addr16
dec
js
dec
stc
add
iret
mov
push
das
mov
add
loopne
mov
mov
enter
in
aas
jp
sbb
push
sbb
push
repz
cmp
xchg
or
sbb
xor
dec
ret
push
call
xor
dec
jmp
dec
xchg
les
add
jp
addr16
pop
movsl
inc
es
xor
xor
into
dec
jmp
icebp
or
loopne
jecxz
inc
cld
jns
mov
lret
nop
pop
dec
adc
mov
movsl
jp
jp
cmp
jb
pop
scas
inc
stos
das
jle
orb
xchg
cmpsl
sbb
movsl
jle
pop
jnp
push
pop
push
icebp
loopne
jge
mov
out
or
testl
pop
fs
test
dec
cli
loop
inc
fiaddl
jg
mov
mov
add
and
add
xor
or
cmp
inc
lcall
pop
pop
add
test
outsb
gs
sbb
mov
loope
jbe
adc
jmp
add
aas
shll
pop
mov
sbb
lods
stos
inc
push
jne
ljmp
add
insl
icebp
lods
sbb
xor
push
pop
pop
insb
enter
mov
repz
mov
jb
push
loopne
xlat
jnp
inc
out
enter
lcall
lahf
xchg
jp
push
stos
stos
call
inc
arpl
mov
pop
pop
pop
sahf
push
xchg
jae
xor
ret
ja
mov
push
xchg
mov
jbe
fbstp
fwait
in
aaa
or
cmp
div
cmp
or
mov
or
test
add
and
cmp
mov
fwait
and
je
fstpl
or
mov
cs
scas
lcall
movsl
loop
aam
xchg
mov
fisubl
stos
xor
loope
stc
xor
sub
jns
mov
flds
mov
insl
aaa
cmp
pop
rcl
pop
cmp
in
in
mov
test
push
dec
in
jae
or
adcl
cld
bound
sahf
divb
pop
pop
aad
pop
iret
inc
in
jge
push
push
jne
cmp
adc
mov
arpl
xchg
xchg
and
ljmp
lds
hlt
cmp
cmp
dec
loope
jg
mov
adc
inc
pop
push
xor
aaa
inc
adc
xchg
push
jmp
cmp
jb
pusha
addr16
jl
js
jecxz
scas
xchg
push
test
idivb
aaa
fstl
adc
pusha
je
pop
pop
push
ja
std
mov
lock
mov
pop
jns,pt
scas
fsubr
xor
or
addl
shlb
cmpsb
add
sub
pop
pop
cmp
mov
mov
movsl
ret
insb
inc
in
or
mov
mov
mov
mov
repz
jb
cmp
jg
cmp
insb
and
stos
xor
mov
fs
cmpsb
pop
jno
mov
cmp
stos
loope
inc
aaa
sub
jge
jne
inc
xchg
cmp
movsl
and
sbb
pusha
cmp
inc
mov
shrb
lahf
or
ret
add
inc
dec
dec
cs
mov
push
mov
mov
jae
push
in
test
or
push
xchg
insb
aaa
jmp
dec
pop
push
lcall
xchg
inc
lcall
cld
dec
je
jbe
xor
jns
lret
mov
adc
lcall
mov
add
xor
mov
cmp
out
les
xchg
inc
cmc
pop
cmp
repnz
std
adc
add
pop
push
scas
shlb
arpl
cmp
imul
repnz
pop
shrl
jbe
test
mov
rorl
push
xchg
fs
pop
testb
stc
sti
adc
push
out
sub
pop
sbb
xchg
mov
gs
lret
test
std
dec
cs
stos
daa
mov
cmp
insb
shlb
orb
jae
sbb
push
pushf
jnp
repz
sub
cld
movsb
in
sub
lock
dec
clc
and
xchg
inc
in
popa
inc
add
out
test
push
or
rcrb
dec
int3
sbb
jge
sbb
test
mov
push
push
cmp
loopne
leave
out
inc
and
mov
and
dec
push
cmp
pop
pop
push
pop
aas
mov
inc
outsb
push
fwait
push
scas
in
data16
adc
cmp
aas
in
mov
mov
cltd
pop
into
and
shlb
xchg
imul
mov
sub
pushl
test
mov
jmp
in
mov
mov
jae
enter
loope
mov
adc
icebp
xor
xchg
imulb
ret
and
es
push
sub
mov
in
scas
sbb
inc
lock
loope
push
lods
xorb
sbbl
nop
mov
into
fcmove
mov
push
and
cmpsb
jo
into
push
sahf
arpl
xor
add
jl
movsl
mov
jmp
cli
roll
push
dec
mov
jo
cmp
inc
icebp
mov
cmpsl
push
mov
and
pop
xor
cli
lret
scas
xchg
mov
cmpsl
mov
aaa
ja
test
mov
jb
adc
andl
push
or
dec
adc
int3
cmpsb
insb
pop
int
inc
sahf
int
add
add
testl
popa
push
loopne
jo
jp
rorb
dec
fstps
xchg
es
ja
jo
sbbl
sbb
xor
push
inc
mov
addl
movsb
dec
adc
add
stos
lcall
pop
inc
out
shll
add
mov
jb
xor
jmp
test
xor
and
mov
xchg
inc
mov
xorl
pop
aad
mov
mov
jg
add
sti
pop
insl
inc
movd
push
jae
jmp
pop
cmp
scas
ret
mov
sarb
cmc
cmpl
xchg
dec
aaa
pusha
mov
xchg
packsswb
mov
jecxz
test
xor
aad
div
sub
ret
or
loop
shll
xchg
push
and
sbb
and
jnp
xor
jns
cwtl
clc
pushf
mov
pop
and
pop
add
push
push
or
cmp
pop
mov
sbb
dec
and
inc
in
add
ja
mov
cmpsb
scas
sbb
pop
pop
cltd
fwait
sbb
hlt
in
es
and
push
popl
xchg
push
loopne
adc
sti
mov
lods
mov
es
mov
xor
mov
outsb
or
and
decb
push
jns
jne
sti
jp
mov
dec
cmp
inc
inc
daa
fldcw
mov
and
iret
pop
loop
cmp
xor
and
nop
cmp
stc
push
xorb
in
cwtl
clc
sbb
adc
out
jmp
loopne
not
lret
js
inc
push
sub
sbb
loopne
mov
sti
out
mov
inc
sbb
mov
xchg
cmc
gs
cmp
jne
pop
icebp
arpl
ror
test
cwtl
cli
mov
js
cmp
js
and
ja
sub
add
push
jnp
test
in
call
add
in
xchg
movb
jnp
mov
push
movsb
movsb
sub
mov
in
or
mov
and
daa
scas
and
cltd
pop
and
adc
lret
ds
xchg
cmpsb
cli
fisttps
dec
rorb
rcrl
inc
adc
jecxz,pt
jno
and
call
mov
pop
movsl
movsl
push
adc
push
js
mov
xor
fldl
aaa
mov
inc
inc
nop
pop
insb
in
push
mov
jno
inc
or
ljmp
aaa
mov
repnz
and
mov
sub
sti
pop
xor
pop
scas
jns
loope
loope
repnz
hlt
ljmp
push
add
xchg
mov
sar
inc
test
xor
lret
test
cmpsb
test
roll
out
call
aam
das
mov
cmp
bound
inc
cltd
iret
aaa
out
xor
fxch
xchg
lds
mov
adc
aaa
mov
mov
push
rcr
adc
pop
lds
mov
xor
lea
adc
push
cmp
mov
fsubl
icebp
jmp
xlat
rolb
shr
jmp
add
and
xchg
fistps
nop
lcall
adc
pop
sub
push
xor
mov
outsl
shrl
push
fidivrs
and
add
in
or
mov
jnp
int3
stc
enter
testb
mov
rclb
loope
pop
dec
mov
in
sbb
hlt
or
shll
jbe
and
inc
imul
mov
push
xchg
sub
shll
in
inc
push
mov
mov
out
inc
jns
stos
jmp
outsb
ds
pop
or
jns
cmp
sbb
inc
xor
add
adc
nop
daa
fbld
sbbl
push
and
jns
jge
jp
fistpl
mov
sar
sbb
jbe
insl
pop
adc
cs
jb
repz
sub
sub
dec
dec
mov
and
dec
mov
cmpb
into
dec
jno
iret
and
idivb
mov
repz
adc
das
adc
bound
mov
jbe
mov
mov
mov
cmpsl
mov
xchg
and
adc
stos
or
mov
out
in
lret
inc
clc
fcomps
pop
mov
loope
cmc
enter
push
sbb
aas
jae
jmp
xor
ret
mov
mov
addr16
flds
or
xchg
add
sbbb
outsb
pushf
lret
adc
repz
cltd
mov
cmpxchg
jo
push
into
test
xlat
scas
je
pop
movsl
lcall
and
into
stos
call
test
sahf
shr
and
push
pop
mov
imul
test
jecxz
gs
cs
sbbl
sti
pop
fistpl
stos
movsl
add
out
cmovge
shrl
ret
femms
fstps
jmp
cli
dec
and
dec
push
jle
adc
push
or
jns
pushf
lods
rcrb
xchg
pop
loopne
int
jge
pop
movsl
es
jno
push
jb
test
imull
jae
dec
icebp
xor
lret
mov
adc
mov
and
xor
outsb
lea
xchg
mov
push
test
insl
ds
push
jo
dec
fs
lods
push
adc
jl
scas
int
xor
into
in
test
push
mov
xor
lahf
mov
push
aas
cmp
and
pop
loop
movsb
dec
mov
ret
addr16
mov
add
push
cltd
dec
and
lcall
adc
jp
sub
sub
insl
call
insl
xchg
pushf
push
push
adc
arpl
lea
lock
jle
outsl
pushf
lahf
dec
sub
mov
cmc
adc
adc
cmp
lods
or
sub
scas
cmc
adc
inc
sqrtps
stos
insl
or
and
mov
nop
xchg
and
hlt
adc
xor
int
repz
aad
jbe
cmp
into
xchg
jo
pop
xchg
pushf
pop
mov
mov
lahf
cli
push
jne
jl
jg
xor
adc
test
mov
ret
inc
repnz
inc
stos
add
inc
rorb
inc
addl
cmc
aad
push
sub
sarb
pop
jge
mov
mov
lcall
testb
lretw
jg
nop
in
je
movb
jb
shl
pop
mov
xchg
inc
inc
aam
clc
xchg
mov
cmp
mov
sub
bound
or
and
jo,pt
cmp
lods
or
cmpsb
xchg
shrb
push
mov
add
cld
mov
pop
push
inc
cmpsl
ret
clc
mov
imul
pop
adc
adc
int3
into
inc
lods
ljmp
sbb
or
pushf
mov
sarl
cwtl
test
push
sbb
stos
mov
cmp
in
movsl
inc
add
ja
popa
mov
ret
inc
push
cmpsl
stc
pusha
cs
inc
dec
loope
aad
dec
bound
mov
jl
and
dec
rcrb
sbb
jge
mov
sub
xor
xchg
enter
js
sub
stc
je
push
xchg
mov
mov
test
shlb
mov
mov
jecxz
imul
fucom
call
in
into
out
inc
mov
stos
shlb
cmp
nop
mov
xchg
mov
imul
xor
es
hlt
hlt
lahf
call
loopne
push
xor
mov
inc
mov
cmp
movsl
mov
mov
inc
fistpll
ret
mov
mov
ds
and
ljmp
xor
sub
xchg
hlt
stos
cmp
insb
or
pop
and
add
insb
insl
lds
imul
adc
daa
mov
addb
shrb
xchg
sbbb
xor
ret
mov
or
xor
mov
cli
nop
dec
push
lret
das
call
sbb
shrb
pop
in
pop
jl
dec
clc
loopne
add
push
mov
out
in
xor
cmp
in
lret
addr16
fcom
test
in
adc
das
pop
mov
dec
mov
mov
and
pop
shr
sahf
jge
inc
sbb
sti
ret
out
je
jno
stos
mov
leave
shlb
jno
mov
jno
xchg
cmp
sahf
xor
into
movsl
dec
ret
or
scas
int
rcll
pop
imul
cltd
nop
cmp
data16
in
mov
mov
sahf
fstpl
loope
cmc
adc
or
add
stos
xor
add
and
cmp
jle
dec
cmp
mov
inc
mov
mov
cmp
gs
loop
jle
xchg
inc
jl
pop
cmp
xor
loop
sub
push
jmp
ds
jmp
dec
repz
outsb
pop
rclb
jns
xor
outsl
fstpt
aaa
loop
cmpsb
jbe
rclb
mov
mov
add
hlt
mov
test
aas
pushf
pop
inc
movsb
sub
pop
repnz
mov
lods
rorb
imull
addr16
aas
daa
jp
adc
sbb
es
into
out
sti
mov
cmp
push
jae
data16
or
mov
lret
mov
push
xchg
sbb
sahf
enter
ret
inc
stos
mov
int
or
xchg
xchg
pop
inc
adc
jge
data16
xchg
daa
jae
or
dec
jp
mov
push
and
mov
call
cwtl
lret
adc
xchg
fidivrs
gs
test
push
pop
cmpb
jo
mov
mov
cs
mov
push
addr16
test
add
outsb
scas
jo
mov
sahf
sbb
insb
or
outsb
cltd
call
test
push
fiaddl
arpl
mov
movsl
addb
mov
push
in
adc
cmc
cmp
fisttpl
in
shll
nop
into
scas
mov
xchg
xchg
icebp
jae
out
mov
stos
push
lret
mov
sti
sbb
in
dec
jg
and
insb
insl
push
movsw
xchg
jmp
fcomp
pslld
mov
fwait
pop
std
aam
adc
jl
repnz
mov
cwtl
dec
sbb
push
js
repnz
ret
fdivl
pop
xchg
ret
loope
xchg
repnz
jp
sbb
cmp
dec
xor
jbe
mov
jl
mov
inc
add
jae
shlb
in
sub
lret
faddl
or
nop
pop
sub
inc
sub
xor
fsubl
inc
xor
js
jle
or
and
hlt
movsl
fsubp
jg
cwtl
jp
mov
lret
sarl
outsb
cmp
dec
cmpsb
mov
popf
or
add
jnp
pop
dec
jno
in
cmp
and
lcall
cmpsb
pop
cld
xchg
les
out
xchg
fidivrs
adc
aaa
sub
mov
mov
push
outsb
jnp
push
xor
mov
jl
xchg
push
adc
mov
sub
jnp
push
jne
xor
dec
pop
pop
add
repz
push
xchg
xchg
pop
mov
pop
sub
adc
dec
inc
xor
mov
mov
cwtl
sub
sbb
xchg
mov
shlb
bound
push
filds
push
or
hlt
gs
xlat
mov
pop
popf
loop
aaa
scas
adc
mov
in
adc
adc
pop
inc
mov
or
and
lahf
jb
mov
pop
cld
mov
sub
xchg
popa
dec
sub
xchg
xor
je
out
cmc
mov
mov
or
lds
jge
xchg
roll
jle
or
push
pop
cmp
in
test
push
push
cwtl
jg
aad
aas
mov
jecxz
push
or
and
stos
pop
cmp
jno
sbb
ja
add
outsl
cld
push
sbb
xlat
daa
add
and
cmc
lcall
lcall
cmp
fidivrl
add
fdivs
add
mov
inc
hlt
mov
fisttps
lret
jge
cmc
shll
add
dec
out
fiaddl
or
das
or
movl
icebp
fs
fsub
adc
jns
stos
fdivl
cli
mov
xchg
cmp
mov
stc
leave
and
shr
adc
pop
fwait
xchg
cs
mov
lret
pop
pop
enter
or
cmp
test
lret
lock
clc
popf
popf
rclb
sub
xor
enter
adcb
push
out
adc
mov
mov
in
imulb
pusha
in
jle
aas
outsb
ds
inc
pop
lret
pop
mov
inc
push
ret
dec
arpl
pop
outsl
mov
mov
popf
test
mov
insb
cmp
sub
int3
pop
mov
out
sbb
dec
adc
lahf
xchg
hlt
jb
inc
mov
xchg
dec
xchg
movsl
inc
dec
cmp
adc
jb
pop
dec
push
dec
adc
inc
mov
bnd
leave
xchg
mov
divl
cmp
lds
sbb
dec
lret
push
pop
and
into
js
gs
fidivrl
mov
rcll
sub
adc
js
and
add
pop
xchg
push
add
testl
inc
out
push
fildl
adc
jb
filds
out
cmc
insb
xorb
inc
shlb
negb
fsubl
adc
push
mov
mov
pop
lret
adc
pusha
mov
push
jnp
pop
or
repnz
jl
push
jle
sbb
jl
cltd
push
popa
test
rcll
scas
sub
in
add
andb
sbb
or
add
ss
xor
push
icebp
fldt
xchg
dec
out
pop
or
jge
das
push
push
add
test
lods
adc
pop
and
xor
xor
fsts
adc
orl
cmp
addb
sbb
in
mov
mov
inc
jecxz
sub
in
sub
inc
adc
popa
stos
ja
pop
fcmovne
sti
dec
mov
xor
xchg
inc
adc
adc
push
addr16
add
adc
or
pop
mov
cmc
inc
cmp
xchg
fwait
mov
loope
icebp
jbe
sbb
mov
es
mov
fcomps
pop
ds
rorl
in
mov
ja
push
pusha
nop
shr
jl
push
add
and
xlat
sbb
fld
sbb
enter
xchg
aaa
inc
cmp
mov
pop
mov
nop
or
inc
minps
jne
shll
push
gs
xor
sub
gs
in
sti
in
shr
outsl
sahf
test
rcl
inc
cmc
insb
ds
scas
fwait
mov
sbb
jne
sarl
jg
mov
pop
iret
fistpl
pop
fcoms
add
cmpsb
dec
dec
mov
loopne
pop
data16
cld
mov
notb
cltd
mov
fidivrs
pop
sti
negl
ja
sbb
testl
in
scas
mov
mov
out
jnp
rcl
andl
or
nop
push
faddp
int3
fs
jae
mov
and
cld
add
idiv
sub
lock
fidivs
mov
sub
and
mov
xchg
pushf
and
push
rorl
out
sbb
xchg
movl
popa
mov
add
call
out
sub
adc
mov
shl
arpl
jp
mov
cs
mov
lcall
mov
lret
cld
push
imul
popa
pop
push
add
inc
aaa
cmp
sub
subl
fidivrs
daa
mov
js
dec
clc
pop
je
add
dec
push
lock
rclb
mov
jg
sbb
in
inc
ds
push
sbb
jne
sbb
xchg
aam
push
out
ja
stos
jae
imul
ja
cmp
daa
sbb
push
mov
daa
les
jns
bound
imul
mov
insl
push
jmp
mov
jp
pop
pop
cmp
addr16
loop
mov
jle
cli
mov
hlt
fadds
jo
dec
or
sbb
loopne
mov
lods
mov
test
movsb
arpl
cmp
lock
lcall
jae
adc
ret
fisttps
mov
inc
lcall
pop
push
jae
or
insl
notb
mov
inc
adc
pop
cmpsb
je
mov
mov
sbb
and
imul
sar
stos
repnz
cli
imul
data16
iret
lods
and
mov
xor
cli
mov
out
or
inc
xor
mov
lcall
outsl
into
push
hlt
movsl
js
fdivrs
inc
cmpb
es
adc
pop
sub
mov
add
mov
jle
notb
insl
lcall
adc
adc
cmc
cmp
std
xchg
pop
jl
mov
cmp
pop
rorl
test
pop
jno
fcomi
add
call
int3
outsl
mov
xchg
adc
std
push
lods
sti
cmp
nopl
dec
je
into
inc
mov
mov
rclb
js
movsb
mov
add
stos
inc
outsb
xchg
in
hlt
jmp
in
mov
and
roll
mov
jnp
cli
add
je
add
adc
aas
icebp
inc
movsb
mov
inc
add
push
xchg
xchg
dec
mov
dec
cmp
mov
or
out
sahf
mov
movsb
in
xor
or
dec
mov
inc
arpl
dec
ret
lds
shl
test
pop
inc
aam
aad
dec
push
jb
mov
loop
mov
ja
and
jp
cwtl
lcall
adcb
stos
xchg
inc
imul
fcoml
ja
fdivl
dec
outsb
sbb
cwtl
dec
pusha
ds
jmp
repz
dec
dec
inc
or
cmp
roll
or
push
adc
jmp
pop
mov
xor
fs
loope
mov
lea
ss
int
jl
jecxz
test
or
add
or
pop
idivb
lahf
repz
lret
nop
mov
andb
or
cltd
mov
or
pop
mov
push
and
lret
sahf
inc
jmp
sub
pushl
push
shll
lea
mov
test
movsl
inc
rcl
push
pop
aas
add
call
xor
iret
test
ljmp
push
hlt
mov
cmp
lea
aas
shrb
adc
negb
mov
test
cmpsl
jb
in
mov
pusha
cmp
pusha
cmc
mov
test
mov
lahf
jns
jle
pop
int
mov
inc
mov
inc
mov
loopne
and
std
cmc
xchg
stos
insb
fwait
and
fs
cltd
cmp
mov
pop
pop
mov
rcrl
mov
adc
int
or
cs
test
push
sub
movsl
nop
push
cmpsb
lock
adc
mov
xlat
cld
and
or
adc
sbb
xor
js
jo
cld
lahf
xor
lods
mov
push
das
add
adc
fstl
pop
pop
or
pop
gs
mov
cmp
adc
dec
shlb
push
mov
lods
ja
jmp
insl
or
cmpb
mov
inc
xchg
sbb
inc
cli
cmp
mov
test
mov
lahf
jae
cli
aad
pop
jne
add
or
out
xchg
or
fdivrs
add
xor
mov
xchg
fucomp
aas
imul
inc
mov
push
mov
add
aad
lds
push
insb
std
cltd
popf
call
jno
lret
xchg
cmpsl
adc
cmpsl
sub
or
pushf
xchg
dec
je
jecxz,pt
dec
mov
repnz
push
inc
iret
int3
push
fxam
inc
lds
cmp
mov
and
and
xchg
lcall
mov
push
into
adc
mov
and
push
xchg
pushl
das
adcb
dec
mov
stc
les
cli
inc
out
sahf
inc
scas
cwtl
in
rclb
repz
mov
xor
aaa
lahf
mov
push
imul
cli
fs
pop
and
popa
call
fiaddl
imul
mov
cmp
ljmp
popf
or
jg
mov
lret
int3
mov
xorl
mov
xchg
sbb
aam
mov
mov
push
repnz
cmpsb
xchg
jno
push
sub
lods
in
bound
pop
gs
mov
xor
frstor
sbb
mov
lods
ror
mov
push
mov
mov
and
lret
pop
repz
dec
mov
xchg
movsl
adc
out
adc
jmp
adc
dec
das
cli
loope
dec
dec
ret
mov
and
mov
out
jge
mov
push
lds
in
cmp
das
movsb
mov
into
mov
roll
adc
xor
iret
shll
mov
adcl
mov
dec
mov
test
sub
or
add
mov
cld
jle
mov
adc
and
arpl
push
std
add
repnz
push
and
ss
sahf
and
int3
fsub
cmp
jae
jl
mov
mov
gs
clc
jmp
mov
in
sub
rcrb
decl
clc
xor
jo
in
and
daa
jb
cmp
out
orl
mov
ss
dec
mov
push
or
jge
nop
out
addb
cmc
dec
cmp
inc
call
ljmp
pop
adc
ss
push
mov
cmpsb
imul
int
jne
pop
add
xchg
push
mov
mov
jp
sub
cmp
dec
mov
in
loopne
and
in
pop
mov
loope
subb
mov
mov
andb
push
mov
sbb
aad
popa
sahf
test
cld
fs
cmp
sbb
mov
inc
inc
adc
add
mov
inc
jl
pop
lds
mov
sbb
jno
mov
ficoml
mov
or
jb
int3
xchg
add
fwait
fs
femms
daa
pushf
dec
or
add
or
xor
cmp
scas
add
fidivrs
pop
mov
mov
xchg
bound
imul
sti
mov
ds
fwait
fwait
in
xor
pop
xchg
inc
roll
lahf
jge
arpl
mov
pop
sub
jmp
add
jp
test
rcll
sub
out
and
leave
jb
mov
dec
inc
push
jmp
std
daa
mov
push
xchg
insb
lret
repnz
mov
movsb
sub
or
dec
hlt
push
cmpsl
dec
jns
sahf
das
inc
inc
mov
movsb
adc
mov
out
mov
dec
fdiv
loopne
mov
cmp
stos
inc
add
adc
push
pop
imul
lahf
je
mov
mov
stos
mov
nop
mov
pusha
mov
adc
lods
outsb
sub
and
mov
dec
jle
test
test
sbb
mov
add
frstor
daa
add
ret
jmp
jmp
andb
mov
fisubrs
stos
test
outsl
lock
cmpsb
dec
xchg
or
sbb
dec
addr16
cld
stos
test
data16
mov
addr16
pop
mov
xchg
xchg
jmp
mov
rcrl
push
jbe
mov
jne
in
int3
jge
addl
jae
sub
je
gs
xchg
and
notl
cmpsb
ret
int3
mov
scas
mov
adc
cmpb
nop
xchg
jo
or
test
js
xor
xor
cmpl
ljmp
mov
movsb
cmp
sub
repz
pushf
lahf
mov
popf
fwait
sbb
imull
addr16
inc
push
rol
pminub
gs
xchg
popa
outsb
ljmp
xor
mov
and
cmpsl
mov
mov
nop
inc
push
xchg
ljmp
imul
aas
inc
xor
dec
hlt
push
sti
sbb
dec
jae
fsubr
shll
sub
ljmp
sbb
dec
std
sub
mov
adc
xor
icebp
sbb
inc
out
dec
mov
data16
jns
cli
flds
and
pop
xor
aad
mov
pop
clc
inc
fwait
test
mov
jns
lods
inc
ret
pushf
or
lret
sbb
pop
js
mov
mov
in
mov
cmc
push
add
mov
push
cwtl
cmp
pop
movsb
jo
pushf
jg
adc
js
xor
or
jecxz
adc
inc
clc
pop
mov
mov
insl
sub
mov
sbbl
fcompl
pop
test
mov
lods
outsb
adc
jmp
jae
dec
cmp
xchg
mulb
dec
cmp
int3
pop
sub
cld
sbb
lock
sbb
sub
sti
push
add
mov
adc
push
sti
nop
inc
pop
mov
in
subb
enter
mov
lahf
jmp
adcb
mov
and
push
cmp
or
push
out
mov
push
xchg
add
aas
inc
dec
push
and
sub
data16
fistpl
sahf
je
mov
lahf
es
adc
fs
icebp
mov
push
repnz
mov
mov
xchg
mov
repz
hlt
je
sub
loop
jmp
pusha
inc
or
test
push
push
lcall
jp
xchg
loope
sbb
mov
cmp
gs
andb
gs
lret
fwait
jle
mov
push
addr16
arpl
scas
pop
jo
inc
xchg
add
scas
mov
scas
sub
in
daa
les
iret
or
addr16
in
xlat
lods
in
cmp
lret
sub
pop
sbb
cmp
mov
adc
aad
pop
in
movsl
xchg
fsubl
xchg
pop
cmp
insl
fs
push
xor
adcb
cmp
jp
inc
mov
push
sti
aaa
push
pop
andl
outsb
dec
cmp
lock
and
mov
jbe
jle
push
pusha
jle
aaa
aam
int3
xchg
imul
std
dec
cwtl
sahf
xor
shl
jecxz
movsl
push
push
or
ret
dec
push
popf
or
shrb
popf
push
inc
repnz
fimull
loope
mov
pushf
shrl
cmpb
and
mov
mov
pusha
stc
push
rclb
adc
iret
sbb
data16
mov
popf
push
xor
xchg
out
mov
sub
call
test
loop
negl
mov
push
orb
xor
enter
add
jb
into
cmpsl
mov
sahf
mov
lahf
adc
adc
pop
mov
or
lret
xchg
mov
aad
wbinvd
mov
xchg
cmp
push
mov
lds
jne
scas
and
pop
fadds
sub
aas
call
call
add
push
cmp
jns
sbb
and
mov
les
je
jno
sub
xchg
mov
je
push
mov
pop
or
lea
mov
jge
push
pop
int3
push
xchg
fistps
sbb
add
sahf
mov
sahf
call
add
mov
pop
jl
xchg
movsb
into
adc
and
pop
inc
jno
push
jns
inc
push
stos
adc
cwtl
mov
xchg
in
mov
jmp
mov
stos
repz
repnz
fs
outsl
aaa
push
sub
sbb
add
int3
xlat
pop
je
push
mov
movsl
pop
mov
jb
and
mov
not
mov
fsubr
movsl
outsl
xchg
xor
push
jle
and
and
push
mov
js
dec
push
xchg
pusha
shll
sub
into
fdivl
mov
mov
and
add
and
cmpsb
cmp
aaa
push
push
jno
mov
or
hlt
jg
push
enter
mov
orb
addl
into
sbb
jns
loopne
insb
pop
cmovge
cmp
popf
push
xchg
pop
jbe
and
xor
cmp
and
jne
sub
xchg
mov
adc
add
les
lock
sbb
shrb
and
icebp
xchg
mov
clc
in
psllw
movsl
lret
push
or
xor
jno
and
hlt
fwait
adc
sbb
clc
cmpsl
ja
push
cmp
cmp
sbb
iret
enter
imul
add
push
xor
scas
ficompl
jae
movsb
pop
cmpb
push
pop
jne
mov
dec
adc
mov
mov
arpl
scas
fldenv
pop
xlat
push
cmp
mov
lret
jle
lahf
lods
and
mov
mov
jae
ret
cld
ds
je
mov
ljmp
adc
dec
xchg
mov
and
xchg
bswap
es
arpl
stos
sbb
lret
ds
movsl
mov
xlat
mov
add
ss
lods
filds
insb
mov
stos
psubd
pop
or
add
incb
xor
loopne
sti
cmc
ret
pop
lcall
push
insb
push
and
mov
mov
scas
push
movsb
xor
imul
push
push
lea
or
jb
fistpll
pop
xor
jmp
cwtl
cmp
push
xchg
xchg
jg
jns
fadds
cmpb
or
dec
mov
lods
jns
leave
sbb
ffree
dec
fdivs
hlt
stc
lock
bound
adc
jge
mov
and
in
push
cwtl
xchg
test
sub
adc
xchg
xchg
sbb
and
push
data16
jno
pop
shr
aam
sbb
or
ljmp
push
sbb
std
and
dec
push
ret
add
out
es
sbb
sub
pop
sti
jo
or
aam
mov
xchg
pop
sbbb
call
loop
out
inc
or
aaa
subb
flds
mov
js
fbstp
push
jae
pop
test
push
lock
lret
cltd
shlb
aas
mov
xchg
imul
xor
dec
lret
aas
cmp
lahf
jp
out
aas
mov
push
gs
or
ja
inc
leave
cmp
xchg
jno
ds
mov
and
push
pop
dec
in
sbb
flds
push
incb
icebp
jns
insl
fs
movsl
xor
sub
test
pop
push
cmp
jae
add
inc
cld
nop
adc
dec
xor
pushl
loope
fsts
ret
ror
outsb
jmp
push
int3
push
out
or
cmp
adc
xchg
cmc
lahf
cld
adc
xor
shll
pop
push
cmc
or
js
sub
xchg
rcrb
cmp
sbb
cmp
testb
imul
mov
sub
cmp
dec
mov
push
outsl
mov
out
xlat
mov
xchg
xlat
jecxz
daa
lods
push
sub
lods
or
adc
lods
test
sbb
xor
scas
shlb
movsl
and
xor
fstpl
aas
mov
decl
out
sahf
insl
mov
pop
jp
out
insb
pop
inc
push
mov
mov
mov
or
ret
test
mov
fnstsw
into
jno
cltd
cmp
add
cmp
shrl
adc
dec
loope
xchg
adc
xchg
adc
decb
sub
dec
out
add
jo
imul
mov
xor
dec
aam
sub
in
scas
push
les
inc
lea
dec
pusha
jb
add
push
inc
mov
add
push
test
sub
jb
loope
cmpsb
lret
xchg
adc
nop
push
mov
fnstenv
scas
ds
dec
sbb
lods
sbb
xor
jno
jl
pop
cwtl
and
mov
pop
inc
dec
ljmp
adc
les
jle
mov
lcall
dec
aam
sbb
and
mov
jmp
push
clc
dec
clc
daa
std
jns
or
add
sbb
call
outsb
mov
push
xchg
xor
fwait
leave
icebp
xor
lods
pop
xchg
lahf
pop
mov
or
leave
add
fldl
aam
mov
es
push
sbb
cli
jl
stos
popa
cmp
mov
mov
cli
mov
push
pusha
out
xor
lahf
jne
sbb
jmp
mov
cs
shlb
leave
sbbb
bswap
flds
nop
xlat
lahf
sub
dec
add
cmp
cltd
clc
xor
mov
add
aas
inc
movsb
scas
jg
mov
pop
insl
pop
stos
xor
jp
rcl
push
cmc
popf
leave
push
sub
std
sti
fimuls
or
inc
and
cmp
mov
add
inc
lcall
das
arpl
pop
scas
stos
fsub
loop
inc
add
sub
or
and
push
inc
lcall
jp
push
ljmp
jl
fisttpll
push
mov
push
jns
pushf
pop
jae
lret
mov
mov
and
movsl
jl
ficoml
shlb
inc
push
iret
and
shll
incb
cld
xor
cld
inc
les
sbb
frstor
cmp
in
test
into
push
jb
or
movsb
icebp
adc
inc
js
add
sti
jbe
aam
fstpl
in
loopne
stc
les
push
push
add
ss
mov
dec
stc
jnp
pop
sahf
aaa
jmp
not
subl
aad
bound
add
and
mov
int
xor
mov
inc
jns
popf
push
jnp
stc
inc
js
mov
sahf
mov
lahf
cld
push
mov
fstpl
inc
imul
into
scas
mov
in
jae
mov
das
sub
xchg
jp
or
mov
and
inc
popf
inc
inc
sub
mov
mov
fmuls
and
out
jb
arpl
add
int3
fucomip
pop
push
add
and
dec
ss
jne
ret
es
insb
data16
inc
jb
pop
xor
or
dec
adc
xchg
test
aad
inc
inc
clc
sub
push
ss
inc
jge
aam
and
cli
dec
arpl
ffreep
mov
push
xchg
xchg
push
ret
add
mov
inc
jge
inc
push
mov
xor
pop
cli
or
loope
lds
jge
cmp
jmp
pop
lcall
daa
out
mov
xor
or
push
mov
lahf
fmuls
xor
xchg
fidivl
mov
mov
jge
fisttpll
and
jae
sbb
or
and
cmc
lock
outsb
pop
mov
mov
cmp
sub
jl
fldcw
jecxz
scas
sar
jl
cmc
jnp
and
test
nop
dec
hlt
jp
push
rcrb
adc
sbb
loope
inc
push
push
jl
mov
push
loopne
cwtl
outsb
and
mov
and
das
jmp
movsb
mov
cmp
and
pusha
mov
fcmovnu
ljmp
test
jno
cmc
lret
cli
mov
inc
sahf
ja
mov
mov
outsb
repnz
mov
xor
mov
imul
in
inc
or
mov
scas
and
pop
mov
cmp
scas
sbbb
inc
sub
inc
mov
jmp
ret
movsl
push
stos
popf
xchg
mov
xchg
negl
arpl
xchg
jbe
orb
xor
pop
rcr
sbb
jno
cwtl
mov
in
fdivr
out
pop
xor
out
ror
xchg
push
test
adcl
mov
xor
xchg
fildl
mov
in
mov
fidivl
mov
mov
jo
mov
dec
in
out
loope
into
or
sbb
push
pop
fwait
repnz
jnp
mov
dec
call
push
int3
popf
or
mov
bound
add
std
and
push
out
subl
push
leave
lahf
cmc
hlt
pop
stos
sub
mov
fldl
push
test
adc
ffreep
arpl
gs
mov
dec
shlb
in
cmpsl
test
or
dec
sub
mov
cmp
ficoml
popf
push
repz
sbb
lea
ud2
sub
mov
mov
cmp
cmpl
sub
xor
movsb
js
cwtl
dec
sbbl
mov
sbb
repnz
jl
mov
xchg
lret
xchg
sub
test
pop
sbb
pop
xchg
mov
dec
inc
or
imul
sub
push
outsl
and
and
jbe
mov
jp
and
adc
cmp
pop
cmp
rsm
mov
in
mov
loop
inc
pop
jb
jmp
push
push
jno
mov
dec
loopne
inc
retw
dec
pop
mov
js
mov
pop
je
xlat
test
cmp
mov
push
test
pop
push
push
imul
out
loop
mov
and
fdivr
sub
mov
movsb
xchg
and
sbb
and
inc
stos
enter
sbb
mov
xor
cli
mov
shrb
cmp
fdivr
loop
push
mov
std
cmc
stc
jb
cs
pop
fldenv
lea
and
mov
js
xchg
sub
xchg
aaa
jno
add
xchg
stc
scas
add
sti
popa
rolb
fmull
ss
mov
icebp
sub
cmp
push
jle
mov
mov
mov
or
jle
sbb
sub
arpl
out
pushf
data16
fldpi
xor
adc
lret
loop
push
cmp
lds
xchg
out
push
lret
inc
inc
adcl
dec
sbb
sbb
inc
sbb
nop
and
pop
pop
clc
adc
sub
sbb
jge
xlat
push
and
clc
aad
movsb
dec
fildl
cmp
scas
rcr
fwait
repnz
outsl
sbb
bnd
pop
data16
test
scas
fists
pushl
mov
sub
push
xchg
test
sub
int
js
and
push
mov
sbb
loop
cmp
mov
ss
xchg
jb
rcl
ret
mov
jmp
jno
in
jne
xchg
pushf
mov
sbb
repz
fldl
jno
adc
sub
sub
or
out
and
int3
cmp
xchg
jmp
loope
xor
dec
daa
inc
insb
xlat
fistl
adc
inc
lock
gs
test
xor
and
push
cli
scas
push
popa
dec
ljmp
enter
mov
jg
in
lods
jbe
ficomps
lock
push
bound
or
mov
mov
dec
push
outsl
insb
insl
pop
orl
es
mov
cmp
add
test
out
outsb
mov
add
sub
cmp
lcall
push
out
sub
mov
adc
aam
dec
jmp
aaa
jb
push
mov
std
and
inc
pusha
pop
pop
adc
inc
push
mov
cmc
aas
mov
adc
adc
popa
and
jne
push
cmp
xor
cs
shrl
push
jecxz
sbb
out
dec
ja
adc
les
fsubr
or
imul
ficomps
jnp
subl
dec
jl
xchg
or
cmp
incb
xor
pop
stos
enter
jp
xor
jl
xor
bound
ss
sbb
cltd
bound
cmc
js
inc
in
imul
sub
cmp
sarb
aaa
popa
mov
dec
jl
or
pop
cld
mov
mov
insl
roll
mov
mov
stos
push
dec
das
adc
jne
clc
fistpl
out
xchg
mov
cmpsb
mov
jne
aaa
add
xchg
das
jae
jne
push
or
mov
push
pop
xchg
int3
and
push
bound
adc
es
add
arpl
sti
ret
ret
push
scas
js
dec
add
out
add
aam
or
popa
les
jg
loopne
ret
sbb
rorl
add
jo
das
push
aam
sbb
mov
xorb
loop
ret
das
stos
push
mov
outsl
mov
pop
out
push
mov
out
mov
jmp
pop
je
addr16
lods
xor
xchg
das
gs
daa
pop
inc
adc
aas
jl
cmpsl
leave
jno
adc
lret
std
leave
xchg
popf
fidivrl
add
jne
cmc
mov
push
ret
fs
clc
nop
mov
lods
pop
iret
and
lods
es
and
mov
pop
inc
arpl
jle
insl
gs
je
push
loopne
les
and
mov
add
movsb
imul
ret
pusha
lret
cli
mov
push
lret
mov
and
sbb
cs
repz
adc
or
cmp
xor
cmp
cmc
mov
mov
testl
jo
inc
mov
mov
mov
pop
inc
shl
imul
mov
scas
xor
xchg
cmpl
call
sub
shll
mov
fbstp
cltd
mov
jmp
bound
push
popa
xor
cmc
cwtl
jle
xchg
jne
idivb
lret
stos
adc
ret
mov
cmp
imul
lds
into
or
lahf
out
into
xor
js
lahf
mov
cmp
mov
jle
mov
fisttps
ss
pusha
push
inc
sbb
cmc
or
adc
xchg
andb
dec
xor
mov
pop
xchg
xor
jbe
dec
imul
mov
out
int3
xor
mov
xchg
sbb
cmp
add
sub
scas
imul
insb
inc
leave
shlb
jl
int3
ret
and
inc
out
popa
lret
cld
int3
in
pop
xchg
leave
arpl
cmp
sub
and
test
dec
push
xlat
mov
sbb
mov
sbb
or
inc
inc
push
stc
xchg
inc
mov
shll
push
mov
popa
inc
fistps
orl
jecxz
out
ror
mov
jg
inc
mov
jo
mov
adc
js
xlat
inc
mov
and
ljmp
jns
scas
popa
cmp
insl
sbb
inc
xchg
or
idivl
js,pt
or
pop
sub
ret
ret
rcrl
or
icebp
rcrl
and
faddl
push
clc
jmp
xchg
push
xor
dec
cmpsl
xchg
or
dec
sti
or
mov
pop
test
enter
jl
push
aaa
xor
xchg
ret
mov
loope
mov
outsl
cmp
loopne
into
test
icebp
xor
lds
xor
xchg
push
or
call
sbb
movsl
test
outsl
adc
mov
inc
je
subb
or
dec
loope
jae
inc
lds
inc
rorb
sahf
aam
negl
shlb
ret
cmp
enter
divl
xor
sbb
or
and
daa
test
dec
es
out
insb
std
jmp
cmp
andb
mulb
add
sbb
les
hlt
inc
adc
repz
mov
iret
cmp
inc
dec
inc
icebp
js
arpl
test
imul
addl
add
sbb
mov
daa
push
mov
sub
inc
pop
es
pop
xchg
das
mov
inc
mov
xchg
xchg
mov
mov
mov
jne
int3
in
gs
pop
loope,pt
dec
mov
test
push
clflush
cltd
pop
js
mov
imul
pop
notb
cmc
xchg
jbe
scas
imul
aam
sbb
std
mov
xor
lds
aad
int3
idiv
mov
cmp
mov
leave
ret
push
mov
jne
mov
add
sbb
mov
je
pop
xchg
aaa
push
and
pop
mov
pop
lods
mov
cld
or
test
cmp
mov
ficoms
inc
ss
pop
mov
jne
ds
mov
push
fsubs
xor
dec
ret
iret
cmp
dec
push
pop
test
in
xchg
insb
adc
sbb
addl
jae
pop
inc
sbb
dec
test
test
or
bound
shll
cli
add
mov
popf
xchg
lea
mov
loope
cli
push
clc
add
sub
adc
dec
in
call
hlt
push
jne
and
aam
mov
mov
mov
mov
ds
xor
cmp
outsl
jno
lods
out
mov
inc
sub
mov
fadd
test
addr16
negb
push
lds
mov
dec
std
pushf
test
in
inc
push
test
push
mov
icebp
inc
jns
add
dec
adc
lcall
xchg
and
adc
sub
fsubs
mov
add
mov
repz
sbb
mov
mov
gs
pop
mov
push
jle
xlat
pop
xchg
cmp
gs
fidivs
mov
xor
mov
aad
fs
enter
es
push
cltd
sub
add
mov
subb
or
cmp
inc
mov
adc
add
cmp
insl
std
lcall
add
in
mov
mov
or
cltd
add
push
sbb
rorb
dec
add
fdivrs
cmp
jl
jbe
adc
push
mov
insb
xlat
je
push
imul
push
xchg
int3
ds
inc
fstps
push
or
push
scas
jns
cmpsl
jge
inc
sub
icebp
push
in
sahf
push
xchg
mov
test
sbb
push
fisubs
pop
test
imul
mov
out
popf
mov
pop
pop
push
ss
sbb
insl
sub
inc
addr16
arpl
imul
aad
insb
xchg
nop
mov
mov
mov
mov
sbb
dec
cmp
ficompl
sahf
jg
mov
int
jl
mov
cmc
inc
fbld
lret
sbbl
cltd
mov
sub
test
mov
mov
adc
fwait
mov
push
outsl
or
fmul
pop
mov
cld
jp
xchg
jb
mov
test
sbb
add
jae
popf
rcll
xor
jns
outsl
push
cmp
scas
arpl
inc
outsb
dec
stos
and
inc
push
pop
sbb
mov
or
fcmovbe
or
sub
mov
mov
mov
mov
ret
fs
rcrl
dec
jbe
enter
cmpsb
adc
pop
in
jne
jle
sbb
xorb
adc
adc
sbb
sahf
sbb
mov
and
imul
ret
or
xchg
adc
xorl
push
aam
ljmp
hlt
pushf
jp
leave
fwait
and
decl
sarl
icebp
test
cli
adc
dec
std
adc
loopne
mov
pop
iret
sub
push
ja
lret
mov
stos
xchg
xchg
scas
addr16
dec
lret
mov
sbb
sbb
xchg
out
addr16
lcall
sbb
pop
cwtl
or
push
movsl
ja
push
xchg
lods
sub
mov
pop
out
jecxz
jbe
orl
loope
dec
in
fidivs
mov
pusha
rep
repz
push
sub
hlt
push
sub
mov
stc
leave
push
jl
imul
cmpsl
xchg
adc
push
aaa
xor
aas
lock
jno
ja
imul
out
jb
aaa
cmc
xchg
loop
dec
mov
fsub
leave
int3
mov
std
loop
andl
jb
jmp
ret
mov
mov
int3
mov
xor
clc
mulb
jp
jecxz
outsl
nop
push
sbb
inc
mov
jne
mov
sbb
and
in
add
dec
xrelease
cmpsl
pop
mov
rcr
es
dec
cmpsl
inc
adc
cmp
imulb
imul
loopne
fildll
dec
mov
mov
dec
sub
mov
jb
inc
jmp
dec
subl
test
mov
sub
ret
mov
sbb
mov
mov
divl
nop
or
and
add
cli
ds
sub
call
add
xorl
enter
hlt
xchg
icebp
sahf
dec
stos
ror
js
pushf
es
dec
and
rolb
and
and
pusha
mov
jecxz
cs
mov
loopne
mov
lock
into
cmp
in
add
cmp
jne
in
setg
dec
cwtl
xor
jle
lret
cmp
addr16
cmp
in
mov
aad
jmp
cmp
push
pop
lods
dec
xor
fucomi
cmp
inc
shrb
repnz
arpl
shlb
push
iret
cmp
hlt
push
and
pop
cmp
push
cmpsl
outsb
je
imul
ja
shrb
lea
gs
mov
ret
mov
push
inc
dec
dec
xchg
jl
pushf
outsb
jle
cmp
ljmp
imul
jl
cmp
mov
cmpsl
push
xchg
or
popa
cwtl
push
loope
and
dec
sti
or
std
loop
dec
movl
jmp
xchg
in
jg
dec
jp
jg
pop
push
xlat
test
fs
mov
push
mov
imul
adc
mov
sbb
lock
outsb
cmp
fwait
ss
insb
outsl
adc
shll
dec
sarl
mov
pushf
xor
aas
fwait
push
clc
clc
sbb
lret
jns
gs
sub
dec
cmp
fcom
es
mov
fcmovb
imul
inc
lahf
outsl
fnsave
mov
lahf
cmpb
or
push
scas
xchg
push
xor
lock
popf
nop
outsb
rcll
in
adc
imul
dec
jmp
jp
push
std
cmp
jp
cmp
addl
cmc
sub
daa
aad
pop
sub
inc
inc
out
pop
cli
in
mov
aas
test
es
xor
push
loope
sbb
push
cmp
sti
adc
and
sub
and
mov
adcl
cltd
stos
out
xchg
mov
mov
and
mov
neg
cmp
pusha
outsb
fst
add
addr16
mov
jne
sbb
pop
add
adc
inc
xchg
sub
jns
out
xchg
flds
xchg
or
fisubrl
stos
pop
js
inc
push
ja
xchg
test
fwait
call
xchg
nop
push
pop
cld
add
fisttps
mov
xor
cmp
repnz
xor
std
daa
cmp
cmc
xlat
test
pop
dec
inc
fsub
mov
lods
aas
push
out
sbb
in
push
mov
push
lods
aaa
push
sti
jge
jl
push
scas
dec
sub
sbb
cmc
dec
sub
push
icebp
je
cmpb
mov
push
movsl
paddw
sub
mov
js
xchg
cltd
outsl
daa
push
test
movsl
dec
loopne
sbb
sbb
mov
xchg
jno
push
jmp
ret
idivl
adc
push
ror
push
gs
in
jo
jne
mov
fistpl
dec
nop
rcll
aam
daa
loop
lods
adc
inc
pop
mov
xchg
pop
sar
addl
and
add
lds
ljmp
mov
fdivrl
int
movsl
adc
pop
in
leave
dec
dec
pop
adc
jb
sub
xor
fnstenv
fldenv
push
dec
sarb
xchg
test
and
rep
sbb
xor
repz
loope
cltd
mov
mov
les
ss
enter
sbb
adc
imul
xor
inc
pop
mov
jne
add
xchg
cmp
jnp
lret
fiadds
lods
dec
pop
outsb
lcall
jecxz
or
mov
push
icebp
push
repz
int
jl
jbe
add
adc
cld
movaps
mov
lods
das
adc
add
or
jp
adc
xlat
lret
insb
movsl
jbe
pop
idivl
mov
mov
enter
jecxz
dec
lcall
fmuls
imul
aas
or
bound
sub
mov
pop
test
iret
scas
mov
imul
rcrl
cmp
mov
jl
sbb
ficompl
xor
jnp
push
inc
lock
jns
out
popa
push
sub
jle
xchg
sar
clc
dec
mov
int3
imul
inc
cmp
jmp
out
sbb
or
dec
cwtl
and
push
mov
mov
enter
sub
mov
xchg
pop
cmp
gs
jecxz
and
fsubs
and
jl
push
mov
sti
pusha
shll
lock
in
dec
mov
pop
lods
and
mov
inc
xchg
pop
cmpsb
and
fdivp
fwait
push
fadd
inc
push
iret
mov
je
mov
fildl
xor
fsubr
pushw
mov
xlat
adc
mov
adc
dec
fsubl
fadd
cmpsb
push
jnp
xor
loopne,pt
fildll
mull
andl
mov
iret
or
hlt
fcoml
dec
pushf
nop
repnz
mov
ljmp
inc
mov
and
sub
dec
dec
mov
cmovno
leave
mov
out
mov
loop
sub
mov
mov
push
ret
bound
push
lea
imul
lock
inc
fisttpl
loop
repnz
xor
inc
jbe
sub
jns
aas
xchg
jno
push
dec
inc
call
fidivrs
mov
sti
mov
imul
outsl
adc
inc
pop
mov
fsubrs
rol
aas
insl
push
inc
popf
push
xchg
ss
mov
fld
insl
wbinvd
dec
mov
shlb
data16
lods
inc
shll
subl
or
cmpsb
pop
jmp
mov
inc
jmp
mov
mov
fnstenv
add
clc
repz
inc
subl
test
adc
pusha
notb
xchg
mov
mov
sahf
jb
sub
mov
dec
jne
sti
and
stc
push
lret
fwait
int3
jne
push
sbb
mov
std
xchg
xchg
ja
repnz
sahf
jle
cmpsl
sbb
aam
mov
andb
jne
out
pop
or
call
jl
adcl
pop
mov
lret
cmpsb
or
sub
and
adc
lret
push
fistpl
adc
in
stos
pop
fidivrl
ss
insl
dec
gs
ret
ja
in
cmp
pop
jb
ret
jae,pt
mov
jo
or
push
or
arpl
xchg
les
mov
out
loop
dec
popf
mov
mov
psrld
cmpsl
xchg
dec
stc
pop
jle
adc
adc
push
xor
cli
int3
dec
mov
fiaddl
push
enter
adcb
or
imul
outsb
rolb
xlat
mov
and
fs
xchg
loopne
pop
mov
dec
pop
cmp
notb
popf
mov
neg
pushl
xchg
dec
mov
add
icebp
fmulp
inc
inc
pop
lahf
or
or
pop
stos
loopne
cltd
andb
jle
sub
or
inc
push
sub
fmuls
test
fdivrs
jbe
xor
mov
sub
lret
nop
bnd
call
sub
adcb
xlat
psubsb
enter
ds
pop
sbb
loop
xor
push
outsl
push
inc
decb
enter
mov
jecxz
stc
je
push
or
fmull
mov
mov
pushl
adc
cmpsl
lcall
das
cltd
xorb
cmp
stos
daa
jmp
xchg
sarb
jne
mov
xlat
sub
mov
out
and
stos
fisttps
pop
xchg
scas
push
push
jmp
outsb
sbb
test
faddl
pop
insl
popa
lods
jmp
pop
jmp
dec
imul
popa
add
mov
dec
sbb
repnz
xor
xchg
sub
fdivrs
lds
popa
xor
gs
loope
jg
pop
xor
rclb
xchg
mov
fcomi
popa
push
adc
cli
xor
fadd
aad
jle
dec
out
lcall
sub
aam
sbb
ror
jnp
cs
aam
adc
cwtl
ficoms
iret
movsb
push
pop
lods
and
jg
popa
cs
mov
loop
in
mov
pop
fsubrs
cmp
jbe
fisubl
ss
insb
insb
mov
sbbb
inc
das
lahf
push
test
arpl
and
jmp
and
mov
lcall
cmp
nop
std
and
and
inc
xchg
sub
sbb
xchg
lcall
aas
test
popa
pop
mov
cmp
inc
push
ss
test
out
cmp
aad
jne
push
in
loop
stos
scas
scas
enter
fmull
mov
dec
jp
fimull
ror
cmp
push
loopne
mov
xchg
arpl
outsl
scas
popf
popf
dec
xor
or
dec
xchg
out
shlb
pop
cld
pop
dec
nop
xor
mov
mov
aas
outsb
std
dec
in
dec
inc
sbb
loopne
ret
ljmp
or
cmc
mov
pop
pop
mov
fcoms
mov
mov
call
les
mov
sti
cmpsl
bound
mov
adc
xchg
out
add
stos
ljmp
inc
mov
xor
mov
push
or
mov
idiv
and
sbb
rcl
cs
mov
mov
and
in
int3
push
rclb
scas
repnz
pop
pop
lods
sbb
jns
inc
sbb
jb
mov
je
push
in
sub
into
push
lds
mov
gs
cmp
aaa
mov
sahf
popf
sub
inc
ret
jne
and
repnz
mov
shr
loopne
dec
pop
in
jge
dec
jmp
in
aaa
xorb
add
fistps
into
xchg
insl
outsb
lea
mov
lret
hlt
pop
adc
push
sti
pushf
lret
xor
aaa
push
mov
and
push
or
pop
inc
iret
inc
jbe
or
cmp
or
sub
mov
push
ja
push
lods
push
inc
dec
lock
jmp
xor
fnstcw
jbe
in
mov
mov
lcall
dec
and
or
or
iret
fs
insl
inc
fiadds
in
xlat
cmp
cmp
iret
or
fstpt
sarl
not
push
sub
sarb
das
sbbl
dec
in
inc
mov
in
and
adc
mov
lods
out
pop
lret
inc
push
xchg
adc
cmp
mov
ljmp
xchg
or
mov
push
das
lea
pusha
test
gs
inc
pop
pop
cmp
mov
xchg
xchg
xchg
inc
mov
or
insb
addb
insb
push
mov
in
jge,pn
push
data16
nop
imul
lds
rorb
push
adc
lahf
jo
add
in
lret
mov
and
xchg
inc
or
xor
mov
push
xor
repz
jp
adcl
add
scas
lods
mov
dec
mov
mov
loope
push
imul
adc
das
add
push
dec
jp
pop
and
pop
add
cmpsb
and
add
inc
aam
jg
pop
test
in
pop
enter
idiv
or
cld
fdivp
jbe
jmp
stc
dec
aad
iret
push
pop
or
pop
incl
ret
mov
lds
ret
mov
aaa
mov
fdivrl
nop
push
cs
rolb
fisttps
int
stos
jno
out
outsl
mov
rep
inc
outsb
pop
and
rcrb
jo
dec
scas
imul
outsl
das
out
sti
jne
adc
movsb
adc
aaa
test
stc
insb
ljmp
mov
pop
stos
enter
xlat
jge
iret
in
data16
jle
clc
and
mov
aas
jnp
xor
xor
movsb
leave
and
lret
or
insl
imul
mov
xor
sarb
imul
enter
or
mov
lahf
xor
inc
and
dec
fsts
pushf
call
adc
inc
pop
lahf
out
jge
xor
int3
mov
fstpl
push
lea
cmp
xchg
iret
sub
sbb
xchg
cs
insb
roll
adc
outsb
stos
xchg
mov
pop
xchg
ret
jmp
into
pop
push
inc
lahf
cmp
sub
xlat
popa
rclb
pop
out
dec
dec
xchg
mov
ljmp
cmp
and
inc
mov
inc
push
out
je
call
nop
push
das
scas
lcall
jl
insl
hlt
xor
lds
xor
enter
or
pushf
mov
ss
fimuls
aam
sbb
sub
push
sbb
pop
mov
addr16
mov
pushf
aad
xlat
pop
and
jne
call
mov
jno
lea
arpl
mov
popa
sub
pushf
xor
mov
dec
inc
push
andl
shlb
popa
leave
arpl
jl
jae
je
nop
ja
test
pop
inc
sarb
jg
in
or
jb
pop
dec
add
int3
sub
jecxz
xchg
movsb
cmpsl
imul
jle
cltd
popa
mov
dec
shrb
push
shrl
push
xchg
shrl
out
sbb
outsb
rcrb
lods
out
imul
fmull
mov
mov
or
scas
les
in
cmc
out
pop
fiaddl
ret
outsl
fldl
pop
dec
cmp
data16
or
and
addl
pop
push
or
push
stos
mov
mov
push
cld
mov
call
sub
dec
sarl
shll
test
lods
mov
arpl
add
cmp
or
in
test
xchg
faddl
pusha
jno
lds
out
lret
xchg
sbb
int
mov
mov
stos
insl
xor
pop
cli
push
xor
pop
mov
lahf
dec
inc
clc
andw
ja
and
xor
inc
gs
dec
jge
pop
jb
cltd
stos
add
daa
push
push
loop
loop
or
andb
das
aaa
out
mov
xchg
cmp
das
fstps
push
in
jp
shrl
dec
enter
aam
pop
ss
jno
mov
jl
cmc
into
mov
xchg
cmp
ljmp
mov
ss
jne
dec
ljmp
repnz
adc
ljmp
sti
test
mov
inc
cmp
dec
sbb
repz
inc
les
pop
jnp
shrl
fiadds
stos
cmp
jne
adc
cmp
call
loop
mov
lds
mov
inc
mov
or
mov
and
fs
cmpsb
subb
jne
dec
cld
daa
and
das
xor
jle
lds
pop
pop
mov
outsb
cmp
push
adc
arpl
jmp
fisubl
jge
pop
add
sahf
push
outsl
mov
add
adc
and
xchg
sahf
xchg
or
jle
lret
test
pop
jae
adc
dec
push
mov
mov
loop
pop
cmp
jmp
mov
mov
inc
cmp
outsb
in
xchg
add
out
and
sbb
sub
loope
add
and
loopne
pop
in
or
cmpl
xorl
mov
rorl
icebp
out
pop
dec
cmp
jne
cs
xor
push
addr16
outsb
movsl
cwtl
in
jg
popa
out
mov
shlb
test
daa
ret
pop
mov
lea
clc
push
mov
dec
sub
or
out
mov
xchg
xchg
push
xor
xchg
fcompl
mov
xchg
sbbb
push
mov
adc
shlb
pop
inc
iret
lret
xchg
mov
icebp
pop
lods
mov
xchg
aas
lods
scas
in
jo
sti
and
adc
xchg
in
test
jnp
mov
push
push
xor
xchg
fisubrl
or
in
mov
push
int3
push
inc
nop
cmp
subl
out
sti
jl
or
cs
xchg
loope
jno
mov
push
mov
mov
aas
test
shlb
aaa
out
sub
jne
scas
repnz
flds
repz
cmc
and
and
or
mov
push
sub
xor
add
popf
pop
int3
sub
or
sub
popf
sti
in
in
cwtl
and
ret
subl
les
push
xor
sub
aam
push
mov
mov
rcrb
nop
pushl
sub
pop
push
gs
pop
sbb
in
dec
mov
sub
gs
mov
ljmp
add
addl
xor
pavgb
gs
or
ljmp
jnp
mov
loop
jmp
dec
sub
cmpsb
and
sbbb
push
dec
adc
shlb
dec
pushf
popf
les
dec
jge
aam
xor
add
rcl
xor
dec
dec
xor
pop
aam
push
movsl
aas
pop
mov
xchg
lods
dec
cli
push
sbb
stos
xor
call
or
push
mov
mov
sbb
fwait
insl
ljmp
inc
sarb
xchg
mull
ss
xor
in
jae
push
lock
repz
out
cltd
bound
daa
push
and
jl
adc
jno
lret
dec
push
push
lahf
pop
divb
sub
je
dec
nop
sub
iret
movsb
or
cmp
call
sti
inc
hlt
lahf
mov
outsl
xchg
sub
fwait
pop
fmul
sti
push
jmp
push
test
cmp
push
xchg
push
xchg
pop
loop
sub
mov
cltd
iret
mov
mov
ret
push
mov
inc
fmull
fsub
or
pop
mov
imul
jecxz
insb
fcoms
sahf
aaa
fdivs
pop
ret
xor
adc
in
mov
cmp
xor
xlat
dec
xchg
fs
pop
sub
xchg
mov
lock
dec
fisttpl
out
xchg
repnz
test
mov
fadds
add
sbbl
rorb
inc
push
aaa
inc
loope
pushf
inc
imul
mov
adc
dec
clc
in
fistps
imull
xchg
xchg
and
lods
sbb
xlat
mov
or
mov
into
sarb
xor
sahf
mov
repnz
pop
jp
fwait
test
out
lcall
push
push
push
sub
and
xchg
cmp
jo
jno
ds
or
dec
test
cmc
ds
andl
into
sub
fs
cmp
clc
inc
arpl
push
mov
in
popa
push
or
dec
jns
fs
ds
ds
xor
aad
out
mov
iret
push
add
or
test
jbe
push
adc
leave
mov
insb
pop
dec
mov
mov
xchg
cli
aas
cmc
scas
mov
adc
jbe
shl
mov
cwtl
push
xchg
loopne
jne
jmp
rcll
popf
sbb
push
in
inc
enter
or
fstpt
andb
sti
mov
cmp
cmpb
adc
and
pop
and
pop
mov
in
aas
roll
add
and
les
mov
mull
ret
adc
addr16
in
mov
ficoml
ret
into
arpl
stos
inc
lret
sbb
nop
xor
adc
insl
stos
dec
ret
fsubrl
shl
push
loop
mov
push
jecxz
jb
push
mov
sbb
jecxz
xchg
mov
lds
cs
mov
insl
jle
movsl
loop
mov
scas
pushfw
test
dec
dec
sahf
mov
push
push
mov
or
push
sbb
add
lods
inc
lahf
and
mov
dec
push
dec
push
lret
outsb
jb
mov
pop
stc
fstl
jp
jmp
mov
insb
jno
rcl
jl
mov
jne
mov
rcrl
das
insl
out
cmp
sub
and
xchg
outsl
sbbb
or
popf
hlt
and
lock
xchg
and
mov
inc
test
mov
pop
fsubrs
dec
data16
cmpsb
arpl
test
test
mov
bnd
inc
push
pop
imul
jl
lret
loope
cmp
adc
xorl
push
cmp
cmp
xchg
inc
inc
pop
lock
shl
lock
in
jnp
dec
les
jmp
jno
dec
cmp
inc
imul
mov
or
inc
cmp
loop
mov
mov
rclb
popa
mov
test
xchg
idivb
pop
js
std
xchg
xlat
mov
mov
mov
or
fcmovne
dec
out
mov
mov
mov
xor
push
sbb
out
pop
lods
ljmp
rcr
mov
jbe
dec
dec
test
cli
lahf
cld
xchg
fidivl
aam
ficoms
repz
xchg
in
test
orl
pop
cmpsb
xchg
mov
scas
rcr
je
rcr
push
scas
or
stc
sub
fsts
addl
fwait
stos
adc
repz
push
sub
mov
mov
pop
xor
rcl
push
repz
or
mov
pop
shlb
xor
fs
dec
xor
ljmp
push
xor
push
out
push
sti
push
jl
xchg
mov
bound
fildl
xchg
icebp
and
adc
push
hlt
add
repz
inc
xor
jmp
les
and
inc
rolb
xchg
dec
push
sub
inc
jnp
push
dec
jle
mov
orl
mov
pusha
jl
lds
rcl
pop
lds
lods
mov
xor
mov
outsb
mov
stos
out
cwtl
mov
cmp
cmp
mov
jo
sbb
cmpsb
xchg
cmp
lret
push
mov
orl
xchg
pop
into
int3
xchg
ja
cli
adc
sarb
adc
popf
pushf
dec
jns
sbb
in
pop
daa
jo
mov
out
inc
inc
add
pop
push
mov
imul
pop
mov
scas
jns
add
outsb
mov
add
add
jno
popf
cltd
jbe
test
sarl
dec
jle
js
push
add
cmp
push
adc
outsl
vmovdqu
dec
jge
stos
dec
fisubl
adc
sbb
add
adc
jns
push
cld
mov
mov
sub
in
jg,pt
xor
out
xor
or
jnp
sub
mov
add
pop
adc
mov
cmp
je
rorw
or
into
cmpsl
gs
inc
outsb
or
cmp
out
mov
inc
lret
stc
shll
bound
in
fcomps
dec
fldt
outsb
gs
dec
mov
ftst
sbb
add
out
sbb
sub
imul
sbbl
test
iret
repnz
stos
movsl
fildl
cld
cld
mov
cli
test
pusha
mov
xchg
imul
call
ficomps
mov
pop
sbb
xchg
mov
lret
movsb
push
mov
add
scas
sti
lods
pop
jnp
addr16
arpl
add
adc
fldlg2
mov
add
mov
jg
ficoml
adc
rorl
pop
popa
sahf
dec
or
fstl
lods
sarb
sahf
add
fldl
mov
or
or
add
std
cmp
data16
pop
jbe
enter
daa
and
test
mov
addr16
xlat
ljmp
dec
mov
add
cmpb
insb
xor
jae
scas
es
nop
test
mov
jo
sbb
mov
dec
jb
push
mov
pop
xor
cmp
pop
fisttpll
cmpsl
or
sub
mov
out
aam
mov
jle
mov
xor
test
mov
sub
mov
scas
xchg
pop
jb
mov
daa
xadd
push
sbb
sub
rorl
add
pop
inc
mov
fnstsw
inc
lret
mov
int3
cmp
push
dec
xchg
adc
or
jns
lret
cmp
rcrl
pop
cwtl
lret
lods
mov
push
sbb
dec
mov
lahf
cmp
mov
arpl
rolb
xchg
pop
push
pop
out
stos
xor
nop
push
call
fists
and
dec
fcmovnu
add
out
cmpsl
mov
mov
mov
jmp
punpckhdq
dec
hlt
mov
shll
push
push
ljmp
pop
mov
ret
int3
cmpsb
jecxz
movsb
sarb
inc
mov
adc
or
adc
icebp
in
sbb
test
inc
movsl
adc
lea
jle
mov
out
push
cmpsb
test
cmp
mov
imul
jecxz
dec
sub
mov
cld
lahf
icebp
push
push
inc
cmp
fwait
add
sub
incb
pop
stos
ljmp
int3
push
icebp
cli
popa
loopw
in
and
dec
inc
lods
aad
testb
jno
dec
or
fs
std
jbe
push
jb
xchg
dec
cmp
sub
pop
cmp
arpl
lahf
ds
push
mov
js
sbb
sub
pop
sub
mov
into
cmpsb
cmp
mov
inc
mov
inc
imul
add
clc
stos
and
out
loope
lea
stos
lret
cltd
push
cwtl
push
and
addb
in
cwtl
sub
dec
push
jno
cmp
jp
pop
test
cmp
rclb
cli
sarl
push
pop
out
dec
int
jecxz
inc
jnp
xor
sbb
cwtl
addr16
pop
test
jmp
notb
dec
mov
icebp
bnd
gs
mov
int
out
pop
jae
mov
int3
and
iret
loopne
adc
ja
jae
cld
jbe
out
push
pop
push
cwtl
nop
sbb
jae
jp
mov
hlt
and
popf
sbbb
stos
pop
cltd
push
dec
bound
in
or
lea
and
fnsave
sub
int3
cmp
add
test
test
push
xchg
push
lret
jl
dec
lahf
lods
push
loope
cli
sub
mov
imul
stos
cmpsb
add
in
push
out
xchg
mov
test
dec
xchg
nop
mov
adc
lcall
pop
std
pop
mov
orb
inc
push
sbb
mov
or
mov
xchg
addr16
out
ret
out
fstpt
sub
jne
adc
rorl
sub
outsb
std
mov
xor
add
fcoms
push
insb
les
and
pop
lods
leave
icebp
adc
inc
cmp
fs
jo
sub
push
sbb
fidivrs
int3
pop
lods
test
int3
mov
inc
sbb
xor
push
mov
inc
and
sti
inc
sbb
in
mov
and
fwait
in
enter
sub
clc
xchg
pop
adc
call
pop
cltd
ret
int3
loope
jns
iret
push
aaa
xorb
mov
sbb
adc
or
int3
push
xchg
mov
je
insl
out
and
insb
xchg
gs
or
stos
and
add
jae
mov
and
in
xchg
insb
mov
add
jecxz
sub
xchg
lahf
stc
fidivrl
xlat
jl
icebp
hlt
sbb
clc
fstl
pop
jnp
cmc
xchg
pusha
add
test
icebp
scas
mov
sub
enter
mov
dec
lret
lods
mov
addr16
in
adc
mov
push
rcrb
fldenv
out
jge
pop
cmpsb
xchg
lea
mov
jl
xchg
pop
gs
aam
lock
sbb
mov
jp
loope
xor
std
lock
insb
pop
mov
es
jl
dec
movsl
jmp
cli
pop
div
cmpb
push
clc
or
add
jmp
pop
hlt
jnp
hlt
sti
dec
stc
cmpb
or
mov
adc
sbb
jnp
and
cmpsb
sub
rclb
aad
into
jl
xchg
fsubrl
in
int3
fstps
lret
ss
incb
mov
mov
lods
or
rep
cmp
movl
dec
mov
mov
bnd
xlat
into
cmpsb
orl
and
jle
dec
imul
and
cmc
jp
mov
flds
fbld
add
pop
ret
dec
dec
push
arpl
rorb
xchg
rcrb
adc
pop
push
in
dec
lock
lcall
inc
test
jne
and
mov
sbb
xchg
and
leave
mov
xchg
in
loopne
fstl
mov
addl
and
ret
shrl
das
push
test
es
in
xchg
clc
subl
gs
sub
dec
paddsb
xchg
ljmp
push
xor
lret
testb
add
xchg
scas
popl
in
jnp
movsl
dec
fstpl
and
outsl
cmpsl
or
mov
das
sub
fucomi
cwtl
leave
lcall
shr
xchg
xlat
das
imul
xchg
jecxz
mov
adc
inc
xchg
addr16
jbe
out
popf
xchg
mov
repz
popa
pop
dec
xlat
xor
pop
and
aaa
push
mov
cmp
pop
pop
jo
sub
inc
jo
outsb
sub
jp
aas
data16
push
je
test
inc
pop
dec
fmull
daa
mov
and
pusha
push
xchg
fcomip
addb
scas
cmpsl
pop
jae
and
cmpsl
shlb
lret
outsl
sbb
jns
mov
sbb
mov
shrl
xor
add
fstl
add
cld
gs
mov
out
ret
jl
push
stos
xlat
pop
mov
out
and
xchg
add
pop
das
mov
pusha
xor
push
gs
pop
fnstcw
test
mov
out
xor
arpl
adc
out
movsl
mov
int3
scas
jbe
imul
int3
mov
cltd
fisubrs
pop
dec
dec
push
jo
mov
stc
adc
lods
xor
repz
lock
daa
mov
push
jg
jbe
mov
xor
mov
insb
pop
add
inc
addr16
je
xchg
push
addr16
jbe
movsl
pop
adc
lods
jne
or
outsl
int3
scas
push
ss
mov
mov
setle
or
ja
push
addl
inc
xor
push
and
test
rcrb
lods
test
es
movsl
ds
scas
xor
xor
xchg
rorl
xor
mov
push
sbb
into
in
cmp
lret
test
das
and
mov
je
ljmp
lods
ds
lds
aad
cmp
mov
mov
shrb
iret
dec
ljmp
pop
xlat
ror
fsts
pushf
imull
jne
xchg
mov
orl
push
pop
rcl
int3
jb
adc
xchg
sub
push
cmp
movl
test
outsl
xchg
mov
mov
sbb
add
mov
lret
fstpl
lret
add
mov
mov
aas
repz
sub
add
shlb
push
arpl
mov
mov
ficomps
sbb
fdivp
insb
repz
notl
jmp
adc
or
mov
push
lock
popf
adc
cmp
stos
or
fistpl
loopne
cmp
jb
je
loop
xchg
cwtl
sub
sbb
ficoms
mov
mov
rorb
sub
loope
dec
sbb
cmp
cltd
sub
insl
pop
rorb
push
dec
mov
sbb
inc
jecxz
xchg
ss
fistpll
inc
and
or
pop
push
imul
inc
in
cmp
cmpsl
ror
jo
nop
push
jge
sti
jne
mov
popf
aas
mov
lret
pusha
add
iret
rcpps
enter
push
int
imul
dec
adc
lcall
xor
shl
xor
loope
add
loope
xor
dec
mov
xorb
stos
add
adc
lret
dec
dec
stc
lret
std
ret
mov
sub
nop
out
dec
fimull
shl
insl
xor
rcr
mov
out
lea
mov
mov
adc
mov
sub
and
popa
jno
adc
sub
jl
sbb
mov
stos
loope
lret
sbb
gs
das
push
or
je
aaa
xchg
fsts
pop
xor
subl
xor
lds
push
andb
ret
mov
cmpsl
enter
dec
jb
call
push
ss
sbb
clc
xor
push
arpl
add
jg
push
mov
dec
int
mov
add
xor
jbe
js
cmp
int
in
jg
stos
in
sbb
inc
popf
mov
pop
add
mov
in
roll
idivl
push
jnp
inc
loope
sub
mov
xchg
je
movsl
mov
push
pop
int
xor
stos
cltd
or
jae
out
repz
js
cmp
jp
movsl
mov
push
fldcw
jmp
lcall
inc
push
push
adc
mov
mov
outsl
je
xchg
imul
add
pop
ficoml
out
decl
addl
push
cld
imul
ds
leave
mov
rolb
mov
lcall
or
fs
insl
pop
adcb
clc
mov
mov
sbb
or
dec
jp
push
arpl
arpl
lds
nop
jmp
mov
jg
cmp
sbb
loope
lods
mov
test
mov
adc
mov
xchg
imul
jbe
add
rorl
lret
popf
push
inc
push
es
xchg
or
xchg
push
mov
ss
add
lods
stc
test
mov
mov
jge
mov
neg
push
fdivr
mov
and
negb
arpl
and
sbb
and
sub
icebp
inc
lcall
enter
ja
aad
pop
jmp
mov
lds
pushf
popa
jnp
stos
aad
jnp
stos
mov
add
scas
aam
arpl
jg
fmulp
sub
out
mov
push
pop
jns
and
addr16
mov
cmp
stos
cwtl
out
mov
pop
test
lods
cltd
pop
mov
jno
stos
jp
sub
pop
sbb
sbb
loop
sbb
add
clc
std
cmpsl
mov
and
gs
movntps
test
push
imul
dec
dec
es
repnz
rcll
ja,pn
pop
jecxz
out
xor
sti
jl
pop
insb
mov
pop
aaa
inc
sub
push
call
push
jecxz
jns
mov
inc
fwait
mov
lods
xor
int3
shlb
sub
xchg
add
scas
or
push
imull
adc
xor
lods
or
popf
cmp
cli
and
push
and
adc
mov
loop
jl
insb
les
insl
jo
int
shrb
outsb
push
add
enter
test
fs
push
ljmp
jnp
test
call
mov
inc
pop
cmp
mov
xor
or
adc
sub
inc
in
jne
push
pop
or
out
aam
add
je
add
jb
out
in
test
or
jecxz
push
dec
dec
dec
test
lcall
fldcw
stos
sub
push
add
test
push
xor
div
mov
push
scas
jbe
pop
xlat
sbb
shll
xor
dec
std
in
test
or
or
loop
andb
rcll
sub
pop
or
in
lods
in
push
int3
pop
aad
mov
mov
lock
xchg
and
repz
and
aam
adcb
pop
adc
pop
mov
lret
jmp
jecxz
lods
dec
jae
lea
push
adc
fiaddl
and
aam
pop
or
mov
mov
std
or
mov
jno
and
out
mov
test
loopne
cmp
sarl
mov
mov
adc
sub
call
pop
mov
cmp
cmp
loop
movsl
lods
push
push
aad
push
jo
pop
jns
xor
lods
fprem1
fsubr
cmp
in
fisttpll
sub
sbb
push
icebp
ljmp
ss
jmp
pop
add
imul
mov
mov
jae
sti
or
lret
inc
ret
sub
mov
and
sbb
insb
shlb
sbb
ja
mov
sub
dec
add
arpl
daa
xor
inc
mov
insl
aam
mov
and
int
neg
and
fstpl
shlb
push
clc
sbb
mov
cmp
push
dec
out
bound
dec
pop
add
enter
test
repz
xor
dec
sub
sub
movsl
adc
outsl
movsl
mov
in
out
sub
xor
ja
repnz
or
lahf
mov
ret
dec
mov
dec
loop
mov
shlb
adc
loopne
dec
jp
push
icebp
fidivrs
cmp
adc
jbe
push
rorb
push
jl
out
test
push
popa
test
setne
lcall
movsl
ret
scas
dec
test
lods
adc
repnz
pop
add
add
cld
mov
aam
sarl
scas
arpl
sbb
xchg
call
mov
out
popf
push
ficoms
sbb
gs
dec
mov
push
xchg
sbb
std
out
push
out
outsb
mov
sbb
mov
add
out
mov
push
es
je
jecxz
xorb
aas
and
ret
popf
xchg
cltd
push
inc
mov
pop
iret
mov
sub
cmp
or
pop
test
lock
jae
scas
cwtl
hlt
cmp
adc
shlb
xchg
in
jecxz
push
imul
cli
inc
mov
dec
jg
scas
push
test
and
add
mov
mov
jno
adc
je
pop
pop
mov
ret
push
jge
inc
in
mov
shl
lcall
lret
je
xchg
dec
dec
out
push
dec
lock
mov
dec
push
test
mov
and
sub
fucomip
lret
push
xor
mov
jbe
add
sbb
in
int
pushf
aaa
xor
mov
in
out
jg
imul
out
jg
cmp
rorb
inc
popf
mov
repz
mov
and
insb
outsl
lcall
arpl
sti
test
cs
mov
and
pop
dec
imul
pop
lods
in
pop
xchg
cmpsl
lods
lret
popa
xchg
stos
xchg
inc
push
push
and
inc
lahf
ljmp
sbb
lea
fistps
fadds
push
push
fwait
or
neg
push
rcrl
pushl
jns
shlb
test
les
xor
jb
out
dec
clc
rcrb
cmc
cmp
cmp
stos
fiaddl
fcmovne
adc
test
xor
mov
mov
ja
xor
sub
inc
mov
test
jo
add
fstl
pop
sub
inc
inc
or
push
pop
adc
lcall
push
stos
loop
das
int3
jle
jnp
fnstenv
iret
pop
adc
xchg
cwtl
pop
ret
aas
pop
filds
lret
das
add
rorl
bound
dec
ja
lcall
cs
sub
loope
mov
or
ds
or
lds
adc
mov
lcall
pop
push
xchg
pop
je
fstl
es
sub
sahf
push
sub
rorb
fiadds
je
popa
mov
mov
jnp
mov
adc
mov
xchg
fsubp
dec
daa
sbbl
xchg
sti
mov
jge
shlb
aam
mov
movsb
andb
cmc
and
mov
add
jl
mov
xchg
nop
lret
and
mov
imul
adc
mov
push
cltd
jg
push
xchg
dec
fimuls
jg
out
jnp
in
cs
lahf
arpl
jge
xchg
mov
out
iret
popa
sub
adc
int
adcb
cmp
clc
int3
rol
lds
adc
dec
or
jne
rorl
daa
cmpsb
les
cmp
adc
clc
fwait
sbb
mov
inc
pop
or
imul
push
xchg
cwtl
sub
jmp
add
mov
cmp
sub
adc
iret
cli
or
jmp
imul
add
sbb
aad
and
or
loope
je
pop
faddl
shll
lods
std
fs
test
std
ds
loope
jg
push
jmp
loope
in
mov
xchg
iret
pop
xchg
sbb
loopne
inc
nop
pop
cmc
sbb
daa
push
dec
dec
lahf
xchg
xchg
pop
in
test
shlb
inc
fisttpll
cmp
mov
cs
xchg
insl
lcall
cwtl
cmp
int
and
fs
mov
mov
test
xlat
adc
mov
insb
in
dec
imul
add
mov
int3
or
rorb
or
outsb
sti
scas
jle
pop
lret
out
je
fisubrs
repz
inc
xor
ret
and
dec
and
shl
jb
and
loope
mov
je
popf
das
inc
insb
fcompl
cmpsw
inc
mov
hlt
cld
and
push
cwtl
iret
mov
in
mov
roll
orb
xchg
dec
mov
or
push
mov
notb
sbb
in
shrl
pop
mov
sti
push
dec
pop
xchg
mov
hlt
ficoms
pop
mov
enter
push
orl
imul
cmp
mov
and
cmpl
decl
xchg
movsb
mov
xchg
add
in
and
dec
mov
add
pop
clc
push
xor
xchg
xchg
sbb
leave
lahf
mov
jns
lds
es
hlt
or
adc
test
repz
in
cmp
dec
aam
mov
mov
test
shrl
xchg
test
xor
pop
cmpsl
push
stos
mov
fists
push
outsb
test
les
mov
test
xchg
inc
add
sbb
or
mov
lret
cmp
cmpsb
aaa
adc
add
sub
adc
mov
jge
daa
aam
pop
lret
jl,pt
lods
movsb
add
jge
and
mov
lret
lea
push
repnz
fdivl
ficoms
sarb
push
xchg
mov
or
inc
jp
stc
pop
in
subl
xadd
nop
mov
in
idivl
sbb
jle
add
or
xor
imulb
adc
push
cld
sti
or
cltd
push
cwtl
lahf
call
mov
dec
sub
pop
rcrl
jp
cmp
in
sbb
loop
int3
push
loopne
push
in
jmp
inc
pop
xor
mov
xlat
cwtl
xchg
add
rorl
mov
ss
mov
test
push
pop
test
loop
in
mov
adcb
and
call
add
cltd
pop
jne
pop
xor
ficoms
cmp
jo
mov
insb
mov
das
and
add
sahf
mov
loope
inc
subb
ljmp
sub
adc
cs
dec
inc
insb
ljmp
movsl
jae
jecxz
out
sub
pop
out
xchg
inc
stc
movsl
mov
adc
mov
pop
shl
xchg
in
loopne
sbb
outsb
pop
movsl
ds
jl
cmp
ljmp
xor
push
mov
lcall
xchg
jmp
dec
mov
shlb
cmp
or
js
sbb
jo
push
mov
out
or
dec
fcmovne
inc
cmpsb
stc
rep
add
adc
bound
enter
push
pop
sbb
inc
mov
mov
push
sbbl
inc
lea
je
push
lcall
jae
fs
fcompl
imul
sbb
xchg
adc
mov
into
push
fnstcw
xchg
nop
inc
sbb
outsl
push
sahf
mov
mov
repnz
mov
mov
add
pop
dec
xchg
inc
sbb
aad
adc
jge
xor
mov
cmp
dec
push
ss
lcall
testb
sub
sub
rorb
dec
jmp
xchg
fcoml
mov
mov
dec
pop
sbb
inc
xor
movb
in
jmp
fsubrp
cmp
xchg
sub
push
cmp
nop
leave
or
pop
push
fwait
push
mov
outsb
sbb
cmp
fcompl
xchg
xor
lret
fs
push
sbb
stos
inc
not
jecxz
insb
xor
bound
xchg
cmpsl
mov
dec
or
jno
cmp
or
xor
cmp
cmc
in
pushf
and
mov
stc
repnz
lea
sahf
outsb
dec
and
out
in
adc
cmp
sbb
or
xchg
dec
loop
cli
xor
pop
mov
sub
add
add
loop
cmp
add
rcrb
lods
jns
aad
lods
aas
arpl
rcll
mov
mov
call
loope
leave
fdiv
add
dec
adcb
and
cmp
jl
movsl
jae
loope
and
pushf
clc
test
in
orl
and
cmp
xchg
les
xor
and
mov
or
mov
decl
xor
mov
jno
fwait
stc
xchg
gs
js
cmc
stc
sub
xor
ss
sub
bound
stc
push
cmpsb
loopne
stc
jl
fdivrs
mov
xor
jns
popf
push
pop
or
hlt
cmpsb
push
out
ret
jae
push
cmp
test
movsl
ror
ljmp
subl
push
adc
inc
mov
in
mov
out
into
inc
out
test
hlt
dec
nop
ljmp
xor
and
jb
or
mov
cmp
cmc
repz
loope
inc
or
xor
mov
mov
adc
stos
cwtl
fsubl
jg
sbb
data16
lret
aaa
jns
sub
outsb
or
mov
imul
rolb
icebp
cmp
xor
cmp
lock
pop
clc
fucomip
aas
subb
xchg
add
movsl
cmp
xchg
mov
repnz
icebp
xchg
jne
lret
add
xchg
or
clc
test
maxps
fbld
fs
pop
into
adc
aas
fistps
push
lfs
pop
push
popa
pop
hlt
cmp
fidivrs
icebp
or
jb
mov
clc
in
loope
ret
push
bnd
or
pop
leave
xchg
dec
xchg
insb
inc
cwtl
insl
sbb
ret
scas
sub
rcrb
mov
fidivrl
jae
mov
cld
scas
add
out
test
orb
daa
pop
js
mov
mov
inc
daa
add
mov
outsl
mov
or
xchg
mov
outsb
sbb
push
sub
nop
xchg
push
pop
mov
cmp
push
int
inc
or
call
insl
out
mov
push
ficomps
pushf
and
ds
cli
sub
call
lock
outsb
mov
in
addr16
inc
icebp
scas
mov
push
push
dec
lods
mov
jno
and
testl
in
pop
sub
adc
or
mov
roll
pop
dec
enter
mov
pop
enter
inc
jae
xchg
dec
or
lcall
and
pop
mov
xor
pop
xchg
dec
aaa
mov
mov
call
cltd
sub
mov
lods
sbb
inc
rol
int3
ds
xor
in
es
sub
or
movsb
fildll
cmpsl
pop
pop
paddsb
dec
inc
repnz
push
cmpl
cs
ds
xchg
cmp
fwait
mov
cmpsb
fs
test
aam
cmp
mov
push
mov
inc
scas
int3
mov
or
mov
int3
pop
inc
fstps
sar
fsubr
xchg
rcr
cltd
add
jl
call
mov
mov
into
push
ljmp
mov
sbb
lea
cwtl
mov
iret
adc
and
inc
mov
lret
add
dec
xor
loop
negb
fwait
inc
push
mov
stos
cltd
xchg
movsb
notb
mov
das
out
ja
stos
in
jnp
icebp
in
and
jns
push
dec
rcr
rorl
push
fdivrs
xchg
out
and
mov
mov
out
jo
enter
or
and
adc
jecxz
psubusb
lcall
loope
arpl
or
mov
cmp
pushf
orl
bnd
jl
and
negb
aaa
adc
ljmp
outsb
stc
mov
dec
mov
std
push
imul
fisttpl
adc
add
popa
xor
data16
inc
test
sbb
push
cld
fisttpl
mov
popa
jne
repz
cmpsb
pop
mov
and
inc
mov
insb
xchg
xor
orl
pop
jo
push
sar
cld
cmc
fsubs
mov
push
into
xchg
dec
daa
std
repz
out
pop
xor
mov
sti
ds
ficoms
das
fisttpl
jle
xor
rcr
mov
arpl
and
cltd
xchg
jne
pop
lods
in
xor
mov
mul
les
push
mov
jecxz
sahf
adc
stc
push
sbb
inc
test
xchg
mov
ds
mov
cld
dec
sub
fisubrl
pop
nop
and
pop
sbb
lock
xchg
in
cmp
movsl
cli
movsb
test
xchg
dec
add
lods
inc
lock
add
mov
jp
xchg
sarl
test
in
aam
sbb
mov
out
sub
out
inc
rcrl
cmp
and
mov
js
mov
sarl
mov
xchg
mov
int
out
test
cld
imul
mov
jg
cmp
into
add
pusha
sub
outsl
pop
xchg
sbb
inc
fwait
add
cmp
lcall
repnz
shll
cmp
push
xchg
jp
mov
xchg
dec
int
xlat
cmp
jmp
ja
xor
aad
stos
xchg
mov
popa
inc
popf
enter
ja
jae
loope
lahf
scas
and
xlat
lcall
adc
cmp
subb
fnstcw
out
and
sub
sbb
cmpsl
sub
insb
mov
in
mov
jb
loopne
cli
mov
jp
jge
add
fs
mov
jg
cmp
cmc
mov
xchg
insl
fnstsw
lea
xor
mov
jge
adc
sub
push
ret
mulb
and
leave
or
mov
add
jns
mov
icebp
in
push
push
inc
ss
ljmp
out
icebp
leave
ret
rorl
repnz
sar
adc
je
call
aam
sbb
xchg
fdivrp
mov
xchg
pop
enter
fcomps
in
fs
inc
repnz
jae
cmp
jg
lock
push
xchg
testb
sti
mov
outsl
cmp
sub
pop
jge
fwait
and
or
dec
inc
aas
cli
lods
mov
sbb
jmp
mov
jb
dec
mov
mov
mov
shl
imul
jmp
repz
dec
mov
jo
mov
stos
dec
enter
pop
dec
enter
mov
fmull
xlat
aad
jae
xor
xlat
inc
dec
adc
xchg
pop
sar
mov
aad
imul
mov
mov
or
aaa
outsb
and
aad
outsl
sub
fs
gs
xchg
cmp
jle
test
xchg
call
int3
subl
mov
bswap
cld
fimull
push
dec
xchg
mov
lcall
cmpb
out
rclb
cmp
cwtl
pop
push
idivl
push
outsb
scas
out
jo
lahf
dec
repnz
hlt
mov
daa
and
stos
pusha
repnz
mov
rclb
pop
jle
push
xchg
mov
sub
mov
inc
dec
sub
or
fmul
add
lea
sbb
scas
push
outsl
sub
sub
mov
subl
call
sti
and
push
mov
xchg
je
aam
jl
inc
pop
call
repz
xor
rolb
cmpb
pop
xchg
fmul
xchg
dec
jle
pop
mov
rorl
cmpl
outsl
pushf
dec
dec
add
outsb
push
pop
jmp
sub
jle
ret
inc
lods
push
jl
sbb
mov
xor
insl
add
outsl
aad
gs
sub
adc
mov
std
repz
lods
scas
push
inc
mov
mov
xor
and
into
push
cltd
sti
out
lea
lock
pop
mov
das
or
insb
mov
jp
sahf
or
xor
jge
pop
dec
jnp
bound
sahf
pop
lods
repz
lahf
imul
or
pop
roll
inc
mov
xchg
cld
dec
xchg
fcompl
adc
rorl
popa
pop
je
jmp
dec
mov
test
sbb
or
add
stos
inc
icebp
jae
add
fwait
adc
shrl
mov
mov
sbb
and
nop
ja
ret
mov
out
xor
add
nop
inc
divb
daa
cmp
movd
cmpsl
xor
cwtl
mov
loopne
xor
dec
xchg
dec
push
fwait
imul
xchg
jl
movsb
pop
lds
inc
iret
mov
rolb
in
mov
mov
push
jg
out
sbb
out
dec
out
or
cmp
dec
xchg
shll
pushf
scas
rcll
rolb
xor
adc
out
int3
in
imul
jge
sbb
mov
cmpsl
dec
mov
mov
dec
sbb
mov
incl
lods
in
enter
int3
cmp
pop
lods
fistpl
adc
jbe
mov
fisubrs
data16
adc
ds
adc
pop
sub
inc
and
scas
push
mov
outsb
ret
push
push
add
ds
sub
jge
das
stc
mov
xchg
and
loop
int
mov
jl
icebp
shrb
rorl
lcall
inc
mov
dec
mov
into
les
movsb
sbb
call
inc
repnz
sbb
add
gs
lret
fisttpl
jbe
adc
dec
inc
sbb
nop
cmc
mov
mov
sbb
test
jmp
add
rcl
cmc
lret
sbb
data16
insb
testl
adc
push
ja
add
mov
and
shlb
mov
inc
fimull
inc
pop
insb
jl
push
enter
out
dec
mov
jne
pop
push
mov
xchg
xor
jg
cmp
inc
aad
jge
pop
fdivp
cmpb
or
aas
ret
mov
outsw
jl
or
pop
mov
negl
aas
or
push
imul
mov
fbld
add
test
jge
aam
xchg
in
in
mov
push
je
sti
or
in
ret
outsb
sbb
ljmp
stos
cli
out
xchg
arpl
ret
cmpsl
mov
inc
leave
and
pop
call
jb
xor
mov
jecxz
and
cwtl
sbb
addr16
add
jecxz
mov
imul
cmp
mov
inc
cmpsl
scas
mov
sub
test
repnz
push
sbb
imul
hlt
test
sahf
rol
pusha
sbb
push
mov
mull
add
arpl
setbe
sub
cmpsb
mov
adcb
mov
mov
cmp
scas
push
or
cmpsb
pop
cmp
adc
leave
popf
shrl
jae
fldt
xor
mov
dec
out
add
push
push
in
and
jb
fistpll
push
leave
outsb
dec
imul
mov
les
sbb
mov
mov
and
inc
jge
imul
dec
and
mov
in
arpl
cmpsb
push
jecxz
cltd
pop
movsl
or
rolb
mov
loopne
scas
test
jbe
ja
pop
push
lret
icebp
dec
lret
push
push
in
sbb
mov
sti
mov
inc
mov
push
mov
jnp
shll
stc
pop
xchg
fdivs
inc
inc
xchg
divb
adc
mov
mov
xchg
push
inc
inc
filds
movsb
call
out
stos
jmp
push
push
call
pop
stos
pusha
xchg
dec
imul
lcall
subb
jp
loope
xchg
call
adc
jmp
pop
xor
insl
test
loope
cmp
movsb
loop
mov
cwtl
mov
sbb
pop
xchg
push
mov
mov
aas
jp
notl
xor
adc
ljmp
cmpsb
mov
xlat
rorb
sub
imul
sbb
push
pop
into
loop
cwtl
or
add
sbb
xchg
lret
dec
int
fs
sub
pushf
mov
mov
mov
fcompl
lds
lds
mov
test
enter
mov
mov
je
xor
int3
shld
addr16
js
jge
cli
add
or
jg
sbb
cmp
lret
inc
pop
aas
mov
cmpsb
lahf
pushf
int
cwtl
jne
insb
mov
daa
push
xchg
xchg
sbb
hlt
sbb
cmpl
pop
lret
jmp
cmp
lods
std
inc
cmpsl
adc
sub
mov
cli
sbb
dec
pushf
popa
inc
pop
xchg
add
sub
xchg
imul
aas
pusha
push
ret
loopne
or
ds
jbe
xlat
fs
mov
inc
add
aas
and
imul
dec
out
pop
mov
ds
cmp
in
ds
into
fiadds
or
out
jae
shrl
xchg
iret
mov
in
mov
out
mov
ret
loope
enter
jecxz
fsubp
xchg
mov
push
fisubrl
insl
mov
xor
out
fistpl
fstps
xchg
dec
sub
out
popf
mov
and
xchg
loope
jge
in
cmp
mov
xchg
push
mov
dec
add
aam
dec
adc
stos
inc
jno
shl
movsb
je
jge
outsb
mov
jg
jmp
hlt
xchg
test
mov
jbe
cmp
lret
jne
aad
loop
and
sahf
mov
aaa
push
int3
test
or
ret
sbb
and
icebp
fdivs
orl
pop
pop
push
fnstenv
jne
test
scas
sahf
sub
or
sbb
xchg
es
enter
pusha
pop
mov
mov
lahf
int3
xchg
loop
call
loope
adc
icebp
cs
ljmp
insl
xchg
push
add
enter
popf
mov
enter
out
jl
imul
dec
or
pop
enter
mov
inc
clc
adc
push
jge
adcl
loop
pop
sub
shll
fisubs
or
enter
lret
cmpsl
frstor
pop
vpminub
movnti
dec
icebp
fsubl
sub
das
add
adc
es
cmc
push
inc
subl
cmpsl
in
jmp
in
pop
lea
mov
movsl
xorb
popl
cmp
sbb
mov
mov
inc
mov
je
orl
das
fldt
mov
outsl
pop
xor
or
sbb
insb
mov
or
notb
add
test
subl
arpl
xlat
es
stos
clc
std
cmpsb
fisttps
dec
cli
and
push
jno
rcl
pop
test
test
pop
mov
or
xchg
dec
mov
pop
ds
lcall
addl
cli
cmpsb
cwtl
cmp
push
shr
in
ljmp
aas
sub
add
push
dec
mov
pushf
mov
sub
cwtl
repnz
add
dec
ljmp
bound
mov
vpor
pop
sbb
pop
sidtl
and
sbb
sbb
fldl
adc
push
inc
roll
xor
not
aaa
jo
cmpsl
stos
add
js
sarb
jle
ss
shrl
shll
in
imul
and
roll
orb
mov
cmp
imul
mov
lds
aad
or
pushf
xor
dec
test
and
push
push
xor
mov
inc
std
outsb
clc
iret
dec
sbb
in
cmp
dec
test
ret
pop
push
mov
xchg
cmpsb
andl
or
mov
dec
hlt
xchg
lahf
lcall
jp
mov
out
jae
rorl
xor
fistps
xchg
sahf
or
cli
sti
pop
inc
ss
out
xor
push
lret
fwait
lods
arpl
aad
xor
xchg
fsubrl
xlat
add
or
pusha
sbb
mov
loop
arpl
xchg
outsb
out
sub
add
nop
ja
fwait
aam
rcrl
jae
fcoml
aas
scas
xor
add
jge
insb
divl
testb
push
int3
out
jo
inc
push
ret
insl
lock
mov
ds
in
cltd
cmp
inc
dec
pusha
sub
shlb
sar
cld
fnsave
inc
push
clc
jge
push
maxps
mov
out
lds
sarl
nop
ret
mov
push
bswap
xorl
jl
test
lcall
mov
popa
mov
je
cmp
movsb
mov
mov
clc
enter
add
sbb
inc
dec
lcall
mov
in
in
hlt
imul
insb
add
test
mov
xchg
jge
hlt
push
mov
xchg
xor
push
push
daa
mov
test
push
testb
lds
loopne
jp
xchg
cmpsl
lds
das
mov
mov
dec
leave
push
pop
xchg
test
pop
std
fnstsw
mov
sub
push
in
ljmp
cmp
fildl
dec
xor
cli
pop
sub
ja
shrb
mov
insl
arpl
mov
lcall
mov
test
ds
out
mov
pop
adc
push
push
popa
outsl
cwtl
mov
enter
jno
sbb
ljmp
mov
xor
jge
loope
data16
pop
cmp
cmp
test
push
pop
sub
cmp
ret
ljmp
loop
adc
dec
pop
xchg
mov
iret
call
repnz
out
arpl
aaa
and
fldln2
test
dec
lret
outsb
pop
jp
fisttpll
ret
loop
dec
adc
gs
lret
outsb
cmp
ljmp
xor
mov
out
xchg
xchg
shlb
jmp
loopne
aas
jle
outsb
dec
ja
jae
es
adc
cmp
add
jl
leave
jl
enter
mov
push
mov
push
scas
pop
out
push
mov
test
shlb
mov
mov
fwait
cmp
mov
fistpll
cmp
adc
mov
jae
mov
test
shrb
ljmp
nop
cs
popf
and
shll
outsl
scas
push
pop
push
mov
inc
dec
jnp
jnp
xchg
popa
or
loope
mov
jmp
ljmp
lea
rorl
stc
decl
jp
test
test
call
xchg
std
xchg
idivl
mov
subb
mov
mov
cmp
sbb
iret
int3
nop
dec
testb
int3
push
daa
push
lea
xchg
mov
xchg
ret
xchg
jl
jg
pop
or
rcrw
sub
fldt
rcrb
mov
in
adc
or
jo,pn
movsb
jb
jae
lock
xchg
xor
sbb
test
shlb
sahf
adc
xchg
dec
call
iret
into
mov
pop
fwait
jb
sbb
push
push
pop
daa
cmp
jo
subl
mov
pop
pop
or
push
push
insl
fnstenv
ja
adc
pop
mov
insl
repz
push
sub
or
cmp
jmp
scas
fsub
and
test
pop
jns
sahf
xchg
outsl
jl
and
call
test
mov
push
scas
push
jb
dec
pop
push
aam
jae
push
daa
push
sti
lret
out
por
aad
mov
stos
bound
cli
fidivrs
push
test
push
jne
xor
repnz
xlat
mov
int3
iret
stos
jecxz
cmpsl
cs
or
push
inc
es
and
je
xor
stc
flds
stos
rorb
int
sbb
or
sub
cmpsb
mov
jb
shrb
dec
cmc
fildll
or
inc
push
imul
leave
and
mov
sub
and
mov
ret
invd
loopne
cmpl
cmp
out
jae
aad
cmp
je
fldt
push
es
xorl
ljmp
lcall
xlat
decb
mov
sti
inc
mov
stos
mov
outsl
imul
pop
pop
pop
dec
das
notb
ret
rorb
lret
notb
jecxz
lods
cwtl
jo
ret
and
stos
inc
stos
in
jecxz
repz
mov
inc
cmpsb
mov
xor
mov
into
cld
push
je
xchg
pusha
fwait
ret
paddsb
xor
push
clc
xchg
or
mov
cli
lods
scas
xchg
repnz
stos
mov
dec
shlb
mov
dec
or
mov
out
mov
and
jno
dec
jae
fcoml
lcall
ror
push
sub
pop
leave
mov
jne
cs
xchg
flds
mov
jo
imulb
outsb
mov
pop
xor
and
test
outsb
nop
xchg
pop
xchg
sub
and
pusha
mov
pushf
dec
popa
into
fsubrs
or
add
hlt
cld
sbb
sbb
in
xor
lds
je
xor
jb
pmulhuw
lds
or
mov
lods
mov
jns
xlat
inc
adc
jmp
sub
shrb
jns
jns
cmpsl
imul
xchg
lds
mov
fadds
cmp
or
and
pop
leave
test
sub
sub
mov
out
out
js
add
les
insl
gs
lret
mov
shrl
mov
xchg
pop
or
mov
sub
test
xor
aad
enter
test
dec
lret
adc
repnz
cmpsb
xchg
iret
inc
cli
call
popa
arpl
bound
sub
or
jne
sub
aaa
or
pop
jb
xchg
shll
add
loopne
push
inc
subb
or
jmp
arpl
push
filds
add
leave
nop
daa
adc
xchg
in
aad
je
in
xchg
jnp
movsl
mov
addl
push
mov
xor
loopne
jne
and
xchg
jb
js
ror
or
sbb
fdivrl
repnz
shr
sub
loopne
cmp
cmpsb
xor
ret
push
inc
xchg
push
add
stc
aas
jbe
and
lahf
xor
stos
dec
sbb
xchg
xchg
inc
sti
dec
xchg
mov
sbb
outsl
repz
xor
push
adc
or
sti
cwtl
push
int3
push
loopne
rolb
cmp
add
or
movsl
mov
add
dec
aaa
inc
pusha
lods
cmp
test
mov
jbe
insl
jo
push
ret
mov
sub
or
fnstsw
mov
cmpsl
loop
das
sarb
xchg
adc
adc
enter
push
mov
adcb
pop
xorb
or
and
stc
inc
add
inc
mov
inc
dec
xchg
pop
add
outsl
sbb
hlt
scas
ljmp
cmpsl
insb
cld
insl
mov
cmp
test
fisttps
add
pushf
sub
call
mov
sub
or
outsb
pop
das
add
mov
icebp
xchg
iret
cmp
repnz
in
subb
aas
jb
pop
mov
test
mov
xor
or
lret
out
mov
test
mov
xchg
mov
sarb
xchg
lea
xorb
sub
int3
gs
sbbl
sub
cmc
xor
dec
test
sti
cmp
or
aam
mov
sbb
cmp
subl
insl
popf
fisttpl
popf
push
nop
mov
dec
mov
pop
xchg
pusha
push
xchg
addr16
cpuid
jb
mov
xorb
and
xchg
popa
mov
add
jb
pop
aas
sti
out
insl
lcall
pop
inc
aas
cmp
xchg
cmp
push
adc
adc
lret
mov
rcll
sub
and
inc
jmp
subl
push
xchg
mov
clc
aaa
and
fnstcw
out
cmpsb
add
scas
ljmp
mov
jp
add
imul
xchg
aad
lods
addb
call
aad
or
adc
mov
or
jbe
mov
sbb
or
mov
aam
mov
cmp
lea
les
inc
test
fs
push
cli
sub
and
shrl
fildl
xor
mov
cmp
mov
pushf
loop
push
shrb
fldcw
mov
test
js
aaa
jmp
test
cld
fdivl
aam
push
rcr
fcomp
xor
shl
push
fadd
fwait
imul
xor
pop
cmp
loope
push
fisubs
cmp
sti
push
fsubrs
cwtl
adc
pushf
mov
and
or
sbb
aad
push
adc
rolb
hlt
in
xchg
sbb
cld
jmp
clc
add
sahf
pop
cmp
mov
into
mov
jg
push
jbe
leave
xchg
mov
movsb
ret
jae
mov
fsubrl
jne
int3
leave
push
mov
aaa
or
cmpl
mov
pop
xchg
fists
ficomps
fdivrp
test
std
jge
fs
pop
adc
lods
xor
adc
cld
xchg
into
nop
dec
out
out
dec
movsb
jge
push
pop
mov
loope
add
cltd
dec
push
ss
mov
test
int
test
mov
inc
mov
pop
in
int
lds
cld
xchg
in
jle
mov
inc
mov
push
loop
pop
lock
int3
jo
shll
ljmp
jae
mov
clc
jecxz
mov
pop
adc
mov
fisubrs
inc
mov
aas
jo
lret
insb
inc
into
add
jae
aad
enter
mov
adc
pop
push
clc
cmpsl
cwtl
int3
test
xor
inc
out
xor
gs
clc
lret
faddl
shll
jmp
sub
dec
jae
mov
jmp
iret
sahf
xlat
add
cmp
pushf
out
sbb
fs
dec
jae
sarb
cli
lods
jne
ret
mov
mov
test
loope
cmpsb
push
jge
fcomps
jmp
inc
pushf
cmp
inc
dec
jmp
mov
adc
jo
adc
pop
cld
js
dec
imul
and
xor
xchg
popf
loopne
or
fwait
aas
adc
push
mov
fstpl
push
mov
pop
sbb
into
sbb
cwtl
mov
sbb
jns
xchg
rorl
fcomps
icebp
cmp
ret
xorl
lods
or
xlat
ljmp
hlt
cli
icebp
push
cmp
sbb
push
mov
xchg
inc
xor
int
out
test
fs
aad
pop
in
xor
push
icebp
push
in
arpl
je
push
aas
in
or
sarb
je
movsl
inc
lock
dec
cmp
cmp
sub
enter
repz
sbb
rolb
rcrl
xchg
lret
lcall
loop
mov
cmp
enter
mov
dec
aas
repz
mov
mov
ret
pop
loope
cltd
daa
aas
xor
in
add
push
mov
loopne
nop
push
jae
ret
xchg
and
pop
jmp
sbb
ljmp
add
xor
std
test
inc
iret
lret
inc
mov
add
ljmp
adc
js
jl
and
mov
push
push
mov
fistps
pop
fiaddl
xchg
mov
xchg
cli
fwait
push
cld
mov
daa
lods
mov
vcvttps2dq
fcoms
sbb
lds
shrl
dec
adc
ficomps
sbb
adc
pop
ja
xchg
jo
jp
shlb
pop
incb
sub
inc
lahf
movsb
xchg
ret
push
lods
das
or
mov
pop
push
or
and
test
cmpsl
fucomip
add
and
cltd
arpl
xchg
mov
ret
stc
icebp
test
sbb
push
enter
xchg
enter
jno
and
cld
inc
pop
movsl
push
or
test
adc
mov
jmp
sti
scas
dec
pop
jl
roll
out
dec
or
xchg
dec
jno
cmpsb
cmp
mov
xchg
jns
jl
jo
cmp
sub
cld
std
test
xor
sub
and
pop
mov
test
movsl
add
jmp
jne
mov
rcrb
mov
lahf
adc
dec
bnd
rorl
fwait
fwait
push
cltd
cmp
push
out
imul
inc
fucomp
adcb
fdivs
aas
aam
dec
push
cmp
xchg
addb
fstp
pusha
fs
dec
xor
fidivs
hlt
sti
push
mov
add
hlt
popf
fmull
sti
iret
aad
shlb
loop
xor
imul
jnp
xchg
push
in
mov
and
sahf
scas
add
jp
jbe
add
cmc
lock
fidivrl
inc
fs
iret
mov
imul
or
and
aad
cmpsb
unpcklps
and
dec
sahf
daa
call
inc
xchg
or
hlt
mov
sbb
jecxz
sbb
rcr
daa
xchg
push
mov
push
or
lahf
sub
call
dec
or
and
test
por
mov
ret
fs
inc
dec
dec
shrb
ds
dec
aad
mov
mov
popa
enter
sbb
mov
xor
data16
adc
aad
jge
inc
fsubr
test
fdivr
and
mov
mov
and
neg
fldcw
mull
addr16
fisubs
add
jns
sbb
push
xor
xchg
sub
es
inc
mov
jge
push
mov
ret
loop
mov
sbb
sub
jbe
mov
shr
xor
js
sbb
shlb
daa
fcomps
cmp
and
push
jl
roll
and
stos
scas
sub
les
mov
data16
jns
lods
push
mov
xchg
mov
fildll
and
outsb
arpl
cmp
ss
in
xchg
xchg
or
cld
mov
push
jb
and
imull
rcrl
sub
and
mov
adc
das
pop
and
jle
inc
xchg
je
inc
and
xchg
pop
xchg
inc
ret
ret
jb,pn
icebp
pushf
adc
movsl
sub
mov
imul
and
or
fldcw
jp
sti
ret
add
cmp
sub
jne
jmp
and
mov
repz
scas
push
addb
fs
sub
push
hlt
ds
pop
jg
lahf
pop
fcomps
aam
mov
dec
cwtl
pop
bound
dec
ljmp
pop
dec
add
cs
pop
iret
xor
dec
adc
xchg
mov
push
adc
lods
test
popf
and
in
popf
ja
sbb
lock
adc
cli
push
adc
jle
sbb
daa
xchg
dec
shlb
call
xlat
pop
mov
pop
sub
into
loope
addl
loop
je
and
inc
jb
sub
cmc
stos
pop
enter
test
sub
mov
jb
pop
insb
rorl
jo
stos
dec
pop
jbe
or
hlt
sbb
call
push
or
mov
push
xor
inc
and
mov
ret
in
icebp
mov
cmpsb
adc
paddd
cwtl
push
xor
adc
adc
out
add
add
int
fwait
xchg
push
or
scas
sbb
push
sub
cli
out
scas
out
into
enter
popf
cmp
clc
nop
das
popf
fisttpl
scas
scas
xchg
jecxz
scas
stos
xchg
call
and
pop
cmp
aad
fwait
pushf
or
mov
lds
pop
cld
jl
xor
and
nop
sbb
mov
jb
jge
adc
stc
sbb
push
xor
inc
add
add
sbbb
inc
jge
jl
fldenv
cmp
gs
jmp
xor
insl
push
outsb
mov
mov
aaa
insb
sti
movsl
out
daa
jmp
ret
ret
jge
adc
xor
test
stc
test
enter
sbb
cmp
or
es
out
andl
xor
jecxz
mov
mov
sub
mov
rep
mov
imul
mov
mov
dec
leave
loop
out
sbb
bound
dec
dec
cwtl
call
movsb
nop
add
les
or
test
jp
aad
adc
cld
into
enter
arpl
pop
stos
lock
pop
sbb
dec
jbe
jne
stc
pop
in
rcr
cli
jo
cld
lock
sbb
or
fmuls
les
xor
ljmp
aad
lahf
fsubl
push
aam
or
hlt
sub
mov
out
cmpsl
imul
in
fsubrs
inc
stc
sbb
pop
and
into
iret
bound
imul
dec
in
popf
mov
or
outsb
push
arpl
in
push
inc
jnp
test
push
dec
xchg
pop
ja
mov
mov
fisubrs
mov
push
adc
cmp
icebp
rcll
into
xor
push
and
pusha
add
fnstsw
xor
mov
lock
jmp
or
xchg
movsb
cmp
mov
mov
data16
into
mov
mov
sub
mov
push
mov
cmpsl
movsl
adc
mov
adc
fwait
jo
lock
icebp
in
sub
xor
int3
lods
das
cmp
aam
insb
dec
idivl
addb
adc
loop
mov
jne
push
dec
push
jle
or
out
mov
addr16
int
push
es
dec
mov
in
call
cmp
out
int
insl
pusha
arpl
ret
xchg
inc
ja
lret
jne
ds
cmp
fs
push
jne
adc
pop
popa
and
or
repz
orb
hlt
cmp
mov
and
jl
xchg
push
mov
mov
mov
cmp
lock
jl
xchg
mov
decb
cli
int3
or
mov
scas
push
xchg
ja
dec
mov
ret
int
xor
cmp
or
jbe
jmp
pop
adc
cmp
sahf
jb
sbb
nop
leave
pusha
pop
or
aam
cli
jle
mov
into
imul
fs
adc
dec
mov
fnstenv
push
mov
ds
lret
inc
inc
inc
sub
mov
xor
adc
adcl
sti
add
jge
insl
xor
jnp
mov
xchg
popf
inc
push
lds
adc
repz
mov
or
mov
cmpsl
push
out
in
jp
pop
push
pop
mov
jp
sahf
pop
inc
outsl
mov
jno
dec
xchg
call
test
jmp
mov
loopne
int
cld
xor
xchg
push
cld
add
fiaddl
xor
imul
xor
lret
addb
or
out
imul
sub
out
xor
adc
fildll
or
not
inc
adc
movsl
stc
rcll
rcrl
xorl
dec
nop
sub
pop
enter
sub
stos
pop
popl
mov
or
mov
push
mov
push
pop
xchg
cli
add
aaa
outsl
pop
add
lret
daa
pop
mov
inc
adc
xchg
mov
ficomps
mov
xchg
addr16
mov
es
sub
push
and
fs
and
push
pop
inc
pushf
loop
mov
and
dec
subl
outsl
inc
into
outsl
mov
inc
inc
or
shl
stos
maskmovq
imull
rep
dec
daa
xchg
imul
inc
and
loop
ljmp
or
push
es
xor
and
fmuls
sbbl
push
jge
hlt
inc
daa
adc
or
jb
sbb
ja
xor
ror
adc
lea
pop
stc
movsb
sbb
jp
sub
and
int
lods
dec
ja
out
cmp
bound
xor
xchg
mov
mov
loope
push
int
mov
call
sbb
lret
fadds
faddl
jmp
in
and
or
push
xchg
pop
add
jecxz
lahf
std
cltd
adc
mov
xor
imul
fadds
insl
call
sbb
mov
rcrl
and
inc
mov
lds
jge
dec
imul
jo
sub
call
or
mov
into
dec
popa
nop
mov
dec
shll
out
out
fnsave
outsb
xchg
vpmacssdqh
popa
lahf
and
ret
out
fwait
xchg
jnp
pop
int
mov
movsb
ret
int3
lea
data16
es
push
sbb
mov
fcmovnbe
mov
mov
pushl
push
cwtl
dec
mov
mov
cmp
js
sbb
aaa
push
pushf
test
popa
jno
cmp
sti
arpl
xlat
addr16
outsl
mov
inc
popf
add
cli
shl
gs
nop
popf
cs
in
cwtl
cli
mov
jo
insb
outsl
sahf
cmp
test
aad
pop
sahf
inc
fstps
push
fistpl
fisubs
add
addr16
mov
mov
inc
jnp
mov
repz
xchg
aas
ds
jne
je
sahf
movsb
ss
rorb
sub
mov
scas
mov
out
push
sub
xlat
out
dec
inc
cmp
data16
je
jne
mov
mov
out
fcoms
mov
adc
shl
nop
mov
inc
add
dec
pop
mov
popa
sbb
push
sub
or
aas
mov
sub
popf
adc
mov
xchg
jecxz
leave
dec
mov
lods
jge
jb
pop
popf
je
push
rcrl
popf
pop
add
arpl
cmp
pop
cmp
adc
gs
xchg
je
cs
or
xchg
sbb
pop
mov
jle
xchg
sub
mov
repz
aad
jp
mov
arpl
sbb
mov
loope
cs
fisubl
les
ret
cs
add
pop
mov
sbb
or
stos
das
popa
dec
sbb
jge
pop
xor
dec
hlt
mov
adc
cmp
test
or
mov
mov
xchg
aad
std
and
sub
outsl
pushf
ret
outsl
push
inc
dec
dec
push
loop
adc
sbb
daa
mov
outsb
imul
inc
cmc
gs
icebp
xchg
and
repnz
hlt
lods
adc
ja
sub
test
iret
xor
dec
ficoml
clc
fwait
sub
and
fsub
repz
xchg
push
sbb
add
cmp
pop
popa
repz
js
push
ljmp
pop
in
add
mov
mov
in
push
or
mov
aaa
mov
clc
sub
bound
subl
or
fstpl
add
sbb
aad
push
ds
mov
addr16
out
incb
inc
add
lahf
hlt
fs
cmc
lods
dec
pop
xlat
inc
ficoms
jle
out
in
or
sbb
rcrb
int
sub
ret
xor
movb
pop
mov
pushf
or
aas
jp
adc
and
leave
lcall
aam
pop
xchg
mov
xor
sub
add
in
or
jge
dec
cli
imul
imul
idivl
inc
cmc
xor
ret
stos
xchg
add
scas
into
push
cs
xchg
push
cli
ror
lock
mov
jge
mov
dec
jmp
out
fs
leave
cmp
mov
xor
enter
dec
xor
mov
call
and
sbb
xchg
iret
stc
dec
dec
jo
scas
dec
into
bound
cli
push
jns
mov
mov
sub
loop
push
xchg
xlat
scas
pop
je
scas
rorb
mov
mov
adc
insb
xchg
enter
add
adc
sbb
lods
mov
daa
and
mov
into
xor
cmp
je
push
ret
push
mov
lcall
sarb
loopne
jo
cld
inc
pop
movsl
push
pushf
mov
sub
push
push
cmp
adc
movsb
jmp
cmp
rclb
fwait
sbb
adc
in
and
shlb
sbb
pop
sub
push
pop
jecxz
add
xor
les
das
adc
addb
push
jo
dec
xchg
mov
push
shll
aad
enter
adc
lret
push
cmp
pop
lret
sbbb
jno
jl
mov
lods
jl
add
push
loopne
repz
sub
arpl
ret
rolb
push
std
loopne
adc
aad
push
mov
das
sub
stc
sub
pop
adc
lods
mov
xchg
cmp
arpl
or
jp
pop
flds
das
mov
movsl
inc
insl
add
or
xchg
mov
mov
addb
mov
dec
stos
mov
dec
cmpsb
test
jge
out
xchg
sub
outsb
jg
ss
adc
rcl
insb
notl
adc
aad
ds
mov
mov
pop
mov
and
int3
lret
cmp
fdivrp
sub
mov
push
xchg
rcrb
popf
shll
add
inc
adc
repnz
testl
add
js
mov
or
push
pop
int
jbe
mov
lods
xchg
jecxz
lea
add
push
mov
lea
mov
sahf
int
sub
inc
mov
pop
insl
mov
push
sbb
hlt
push
call
sbbl
dec
ss
sbb
push
sub
xor
sbb
out
adc
xor
adc
mov
xor
mov
lds
jl
lods
sub
popa
xchg
arpl
sbb
adc
adc
inc
jmp
push
sub
pop
data16
lock
jl
xor
lods
dec
fimull
pslld
mov
mov
jo
fsubrs
loop
sbb
push
push
loop
add
andb
addr16
inc
lods
push
mov
sbb
jno
mov
aad
and
mov
adc
push
ret
test
scas
sahf
inc
ja
jmp
insl
mov
aas
idivl
mov
cltd
fdiv
or
data16
loope
dec
xchg
pop
scas
movsb
dec
bndstx
shrl
xchg
add
lcall
pop
jg
jmp
ljmp
pop
or
push
das
adc
mov
sub
cmpl
fistpll
enter
orb
das
lret
sti
or
mov
das
int3
xchg
test
dec
sub
xchg
xlat
sub
ljmp
je
stos
jnp
sub
imul
mov
sbb
jno
int
sbb
push
sub
idivb
mov
pop
rcrl
mov
jle
imul
fucomp
mov
pop
add
xchg
or
and
pop
jmp
test
pop
rcr
push
nop
imul
sbb
jbe
test
outsb
ficoms
data16
pop
insb
fimull
fldcw
in
mov
pop
or
and
sarb
push
dec
mov
pop
movsl
lock
jo
mov
xlat
jg
aaa
dec
jno
neg
adc
das
pop
push
imul
in
inc
ja
arpl
or
int3
lock
hlt
jns
pop
sub
mov
arpl
dec
lret
dec
cmp
mov
inc
aam
push
sbb
or
cltd
cmpl
mov
mov
into
jnp
cmc
mov
mov
jne
out
push
addl
mov
stos
in
aad
inc
loopne
jmp
data16
pusha
pop
shrb
xor
fsts
out
in
fcomp
lcall
inc
fsubr
push
and
stos
mov
sahf
mull
mov
push
fnstcw
adc
cmpsl
or
xor
lcall
inc
jl
cld
mov
sbbl
dec
cs
sti
push
cmpsl
dec
jecxz
stc
dec
mov
outsl
daa
fcomi
pushf
sub
fisttpll
out
and
ret
adc
mov
mov
sbb
out
fs
addl
clc
insb
out
jnp
mov
push
dec
inc
and
mov
repz
cmpb
or
int3
icebp
scas
push
imul
iret
mov
adc
fisubrl
lds
jge
or
xchg
and
jmp
jns
cmp
push
sbb
in
loopne
jo
push
out
jne
mov
into
repnz
add
xchg
mov
xchg
out
std
add
mov
rcr
and
jp
pop
inc
test
nopl
dec
jg
lods
pop
xchg
jmp
adc
repz
jne
mov
mov
push
das
inc
xchg
cmp
xor
incl
jns
adc
jle,pn
mov
incb
push
arpl
jno
add
sbb
cwtl
mov
subb
jl
js
scas
out
mov
dec
mov
iret
std
bound
mov
dec
pusha
and
sub
jno
sbb
or
sub
js
fwait
ret
mov
pop
sti
add
sbb
pop
rcrl
xor
jle
xor
add
mov
icebp
push
shlb
mov
aad
add
push
push
sbb
mov
xchg
stos
or
fstp
inc
jb
lock
jns
xor
fwait
xor
xchg
lret
adc
mov
popa
gs
jo
dec
pop
fldenv
mov
xor
fnsave
sub
lock
adc
sbb
test
les
inc
push
sub
push
popf
cmp
cmpsb
in
dec
jne
mov
xor
clc
pop
xor
jne
jbe
jo
pusha
dec
pop
push
ljmp
ds
cli
inc
push
out
mov
addb
cmc
pushf
mov
and
adc
in
push
repz
loopne
mov
jmp
test
adc
cmpsl
pop
mov
xor
adc
lock
imul
stos
stc
js
in
sbb
mov
jns
imul
les
movsb
lods
sub
aam
out
pop
mov
clc
adc
out
outsb
cltd
cmp
das
subl
adc
jle
pop
addr16
mov
into
jb
cmp
mov
and
jle
or
cld
cmpsl
jge
cmp
out
lods
in
sti
out
iret
push
fstpl
fstl
dec
stc
mov
or
das
jl
xchg
push
pop
mov
stos
in
cmp
mov
and
rorl
push
sarl
and
fstpl
jo
push
dec
lcall
loop
mov
int3
jne
push
push
cmp
ret
sub
inc
fistl
push
mov
sbb
lcall
repnz
test
outsl
movsb
cmp
cmpsl
or
aaa
sbb
fcmovu
test
shll
xchg
xchg
jp
stc
jo
add
int3
jg
mov
movl
lock
xchg
aas
mov
stos
mov
sbb
lret
in
sbb
pop
xor
xor
mov
and
add
adc
cmpsl
add
and
mov
inc
push
xchg
pushf
adc
add
add
mov
aas
imul
push
or
cld
push
mov
mov
dec
stos
fwait
stos
push
leave
ja
mov
cli
test
sarl
fcoml
lret
cld
movsl
pop
adc
inc
push
sarb
push
insb
sub
es
sub
ret
mov
cwtl
fucomip
sbb
outsl
cmp
inc
loopne
cs
gs
xchg
adcb
adc
lods
cmp
mov
and
mov
pop
mov
xor
and
inc
pop
imul
roll
adc
std
iret
pop
pop
mov
push
mov
xchg
das
xchg
lds
push
int
cmpb
mov
jne
lds
dec
fbld
jbe
int
outsb
cmp
shlb
sub
ja
mov
js
cli
dec
push
push
sti
sbb
cmpsl
outsb
cld
out
sub
and
ret
daa
xchg
adc
xchg
imul
test
sbb
fcoml
test
arpl
sarb
push
adcb
stos
ljmp
ficompl
popf
ficompl
popf
xlat
lret
dec
cmp
loop
test
or
pop
xchg
sbb
test
pusha
and
popf
push
lret
shrb
enter
sbb
fistpll
fisttps
scas
arpl
jge
ret
jecxz
rdtsc
xchg
cwtl
pop
cmp
or
mov
dec
fs
push
std
in
jl
in
ja
imul
push
ja
xor
sbb
movsl
out
sbb
aas
in
mov
lds
mov
cmpsl
jns
xor
out
or
inc
mov
mov
lods
cmp
mov
add
add
ret
lods
jmp
or
scas
mov
dec
in
stos
adc
xor
xor
mov
mul
adc
dec
icebp
nop
mov
pop
inc
or
cmpsb
jge
test
subb
fidivs
mov
mov
fs
fiaddl
les
jb
movsl
and
mull
icebp
jl
mov
pop
sbb
in
push
or
adc
ljmp
sbbb
cmpsl
loope
pop
cld
mov
mov
not
sub
dec
lods
mov
inc
sti
or
push
out
scas
stc
or
cwtl
lods
xchg
xchg
push
sub
mov
push
add
mov
cwtl
fstl
fwait
andb
jge
pop
aam
mov
inc
push
inc
notl
lret
das
push
dec
lock
pop
iret
iret
ss
pop
icebp
jmp
sub
jecxz
test
aam
fsubrs
jg
das
push
mov
fs
fwait
mov
inc
xor
sahf
icebp
mov
sbb
popf
rcll
jo
mov
hlt
and
push
sbb
test
pop
repnz
adc
lcall
test
jmp
cmp
aaa
xchg
xor
xchg
aam
inc
outsl
adc
dec
insb
mov
jbe
fistpl
test
cmp
pop
dec
add
or
ljmp
scas
popf
and
popa
add
adc
jnp
xlat
subl
cld
cmp
sahf
and
in
mov
xor
xor
lock
and
gs
adc
test
sbb
nop
jl
jnp
int3
rcll
test
and
js
push
in
mov
jne
mov
dec
repnz
jmp
shlb
int3
shrb
aas
in
cmp
mov
inc
repz
xchg
xchg
addr16
shl
stc
cmp
push
rcrl
in
mov
xchg
pop
int3
pop
cmp
cld
int
das
hlt
mov
dec
test
adc
adc
and
dec
pop
cs
mov
insb
cld
cmpsb
cmc
xchg
xlat
push
jmp
scas
sub
sbb
or
sub
pop
push
add
cmp
or
cltd
in
pop
mov
aad
mov
aam
pop
mov
sbb
pop
pop
test
js
lds
stos
test
std
cmpsb
add
repnz
mov
mov
dec
pop
mov
pushf
push
xchg
dec
in
loope
adc
xorb
mov
cli
into
cmp
and
mov
jmp
sti
xor
fcoml
dec
xchg
ret
adc
in
or
adc
fildl
pop
movsl
push
mov
test
xor
cmpl
mov
or
push
scas
mov
cmpsb
lret
jmp
fdivp
mov
adc
mov
sub
pop
addr16
pop
test
xchg
rcrb
jns
add
nop
outsb
movsl
ffreep
sti
xor
add
lods
pusha
adc
sbb
inc
sub
ret
adc
mov
icebp
icebp
xor
daa
xchg
enter
inc
das
sbb
push
insb
sbb
loop
xor
cmpsl
jno
lods
inc
roll
fs
mov
das
fcoml
mov
test
pop
dec
sbb
negb
ret
mov
push
in
testl
mov
xor
adc
push
ret
inc
les
jne
stos
bnd
adc
push
int
nop
sarl
add
call
shlw
repz
pop
cmc
test
imul
movaps
in
rcl
jnp
mov
xor
add
arpl
imull
lret
mov
or
fbld
ss
mov
lods
cli
ja
lds
adc
and
jle
mov
lods
or
add
push
aam
fimull
scas
pop
xchg
or
out
mov
insb
std
mov
fs
les
xlat
imul
mov
outsl
inc
pop
test
adc
mov
lock
cmp
mov
dec
jnp
dec
fsts
pop
jno
imul
adc
jmp
adc
sub
lods
shll
daa
into
idivb
dec
mov
out
rol
popf
adc
negb
fists
adc
lcall
out
fdivr
je
outsl
pop
pop
test
pop
call
cmpsl
mov
and
or
inc
mov
and
dec
cwtl
aaa
cmp
sub
xor
push
arpl
gs
or
mov
or
lods
sbb
das
push
vminss
data16
pop
sti
jae
aaa
mov
jmp
aad
fistpl
add
in
jg
incl
dec
xor
cltd
mov
cmp
je
popf
sbb
pop
int
jbe
pop
adc
mov
icebp
pop
jne
leave
pop
add
add
sarb
enter
xchg
stos
arpl
jp
pop
mov
mov
sahf
out
and
loopne
hlt
cli
fildl
popf
jmp
cltd
insb
pop
int3
mov
jge
sbb
fcom
divl
push
or
in
pop
pop
mov
pop
jne
inc
xor
std
pop
push
dec
int
jo
mov
push
lea
and
jbe
mov
and
aam
test
movsb
cld
inc
cmp
or
xor
lods
repnz
movsl
jp
call
push
hlt
fxtract
mov
test
das
or
pop
ret
and
sub
sti
aam
add
pop
pusha
not
in
xor
jmp
ficoml
aad
fistl
call
fldcw
cltd
aad
aas
or
test
rcrb
pop
jle
adc
or
mov
jmp
ret
jae,pt
pop
aaa
in
lds
jmp
pop
mov
clc
pop
loope
dec
and
or
pop
jle
push
inc
fisubrs
gs
repnz
mov
imul
cmp
in
iret
mulb
inc
pop
call
dec
icebp
subb
mov
dec
imul
loop
sbb
sub
adc
aas
inc
fsub
outsb
stc
push
pop
xor
or
push
cmpb
ret
gs
repnz
ret
jnp
inc
call
xor
fstpt
xor
sbb
adc
sti
in
add
add
xor
sar
out
adc
hlt
push
iret
push
fs
daa
cs
aam
addr16
imul
cld
pop
jmp
divb
jmp
push
pusha
out
idivb
sahf
xchg
or
addr16
dec
repnz
add
push
xor
or
pop
mov
lret
jecxz
jl
mov
into
mov
mov
cmc
inc
imul
push
pop
int
aaa
jp
pusha
test
dec
mov
shrb
push
add
shll
mov
xor
cs
xor
xor
push
pop
scas
movsl
add
cmp
and
loop
enter
fisttpl
add
mov
xchg
lret
xor
ficoml
mov
fstp
mov
dec
push
lret
jmp
xchg
dec
fwait
or
xchg
xchg
xchg
in
or
pusha
inc
push
loope
cld
pop
pusha
pop
into
and
pop
loop
dec
cmpl
xchg
push
lahf
jo
pop
mov
sbb
jno
ja
mov
mov
jnp
or
ja
adc
popa
jp
mov
in
xchg
hlt
adc
flds
adc
sbb
and
jmp
ja
int3
imul
rcr
and
jecxz
pop
xchg
dec
pop
adc
movsl
cmp
push
mulb
mov
dec
mov
aam
lea
xchg
daa
xchg
dec
inc
inc
mov
loope
xor
nop
jo
push
jl
rorb
mov
test
add
xchg
and
cmc
inc
mov
adc
adc
add
in
xchg
subb
mov
adc
cld
push
xor
fstps
push
push
lret
das
mov
lahf
or
add
mov
lods
movsb
mov
lahf
pusha
mov
shll
mov
fadds
cmpsl
test
mov
fisubs
pop
jae
jg
mov
xlat
enter
mov
pop
cmp
daa
pop
loope
stos
add
out
repz
jbe
push
fdivr
inc
mov
stc
and
mov
dec
xor
ds
loope,pn
mov
mov
js
ljmp
xlat
stos
gs
rol
cmp
std
loop
clc
cmp
mov
cmp
jle
insl
cmpsb
leave
ja
scas
jno
jns
pop
xor
nop
iret
push
aad
push
pop
es
cmp
and
xor
bound
inc
in
or
loopne
mov
mov
push
clc
out
inc
aaa
setne
inc
jo
adc
ficompl
lock
lods
movl
cld
mov
scas
int
xchg
iret
jb
test
stc
addl
shll
pop
mov
pop
jp
in
cmp
sub
xor
xchg
dec
out
push
je
test
cmp
xchg
push
pop
mov
mov
dec
inc
push
mov
or
add
mov
sbb
setnp
pop
mov
mov
inc
out
and
stos
in
xor
add
rorb
fisttps
repnz
stos
dec
inc
push
inc
insb
sahf
xor
roll
shrl
mov
cmp
clc
mov
mov
ds
or
test
aas
mov
movsb
push
int
aam
xchg
movsl
inc
repnz
cwtl
data16
in
push
mov
pop
fsubrs
lcall
add
fistps
jl
jp
xchg
lods
inc
xor
nop
sub
push
inc
or
mov
enter
sbb
das
pop
movl
sbb
mov
test
inc
or
mov
fwait
push
shrl
jg
sub
dec
data16
shr
pop
popa
stos
sub
loope
push
repz
aaa
mov
lds
test
mov
xchg
and
outsl
shll
xor
pop
sbb
or
ja
dec
mov
mov
mov
lcall
adc
lock
cmp
test
or
sub
lds
jge
sarl
daa
pop
mov
xor
pushf
hlt
and
adc
mov
add
lds
cmpsl
ret
adc
jbe
in
inc
shll
flds
cltd
mov
stos
sahf
in
jnp
adc
pushf
jns
xor
mov
lcall
popf
stos
or
nop
inc
xlat
fstl
lahf
mov
xor
push
mov
mov
xor
test
mov
fistpll
mov
rcll
iret
add
mov
pop
imull
test
ljmp
xorl
sbb
dec
test
add
mov
pop
mov
inc
sub
mov
das
push
push
mov
dec
iret
push
and
sub
xchg
movsb
pop
shll
fldenv
inc
in
loop
lods
jb
dec
popl
icebp
stos
jge
ret
aam
aaa
lods
mov
xor
repnz
idivb
ljmp
arpl
mov
mov
jp
push
mov
test
push
inc
icebp
mov
in
stos
out
pop
stos
leave
testl
bswap
jo
fidivl
lret
faddl
clc
jecxz
jmp
add
adc
sub
mov
daa
add
in
and
add
or
mov
push
sub
dec
rcrl
mov
test
fidivl
aad
dec
lcall
jl
adc
in
aaa
push
sbbb
adc
xchg
fs
in
std
or
in
jge
imul
mov
dec
xchg
inc
xchg
xchg
mov
sbb
adc
push
andl
pop
mov
dec
mov
out
sbb
lahf
loop
push
and
imul
cmp
cld
fnstsw
std
dec
mov
xchg
js
cwtl
inc
bound
push
ficoms
add
sbb
mov
adc
dec
shrl
xchg
sbb
fidivrl
in
out
ljmp
dec
push
lahf
jmp
or
inc
js
es
pop
shll
cwtl
outsl
mov
cmp
scas
push
xlat
dec
into
scas
adc
push
clc
jmp
sarl
cmpsl
dec
pop
leave
movsl
inc
jmp
mov
and
lds
pop
xchg
stc
sti
es
push
je
je
xor
mov
lods
dec
je
jg
push
mov
mov
movl
adc
leave
pusha
movsb
push
or
pop
mov
jno
leave
mov
xchg
std
outsl
sbb
mov
pop
adc
out
xor
or
lds
sub
in
xor
js
cmp
add
xor
lret
lret
xchg
popa
push
clc
push
jl
lods
je
jbe
mov
sbb
xor
push
cmp
dec
cmp
xchg
cmp
sub
jmp
pshufw
xlat
dec
jge
mov
cli
mov
test
cmp
loopne
add
shll
adc
out
pushf
push
dec
imul
xor
adc
mov
in
out
pop
in
push
sub
xlat
in
sbb
pop
mov
sub
popf
daa
in
ds
icebp
pop
and
mov
push
jns
sti
fidivrl
push
int
push
cmp
loop
mov
int
xorl
lea
mov
sbb
xchg
xor
fisttps
sub
mov
cmpsb
leave
and
or
enter
inc
fimuls
jecxz
sub
test
in
pop
or
push
inc
mov
imul
xor
and
in
dec
xor
int3
pushf
in
xor
adc
dec
fldt
out
out
pop
in
sub
iret
mov
data16
lods
out
dec
mov
sbb
jno
call
lret
imul
jbe
aas
and
ficoml
mov
and
mov
cmp
popf
push
add
fcoml
jle
push
rcrb
mov
push
cs
lods
cli
cmp
loope
rcrb
or
leave
dec
jmp
cltd
jne
cmp
sbb
lods
pop
jno
mov
add
or
cs
pushf
jns
adc
std
lea
scas
xor
inc
mov
jnp
pusha
mov
subb
pushf
mov
mov
or
mov
sub
adc
xchg
push
lods
popf
lea
ret
xchg
pop
mov
test
scas
jne
movsl
rorb
nop
out
ficomps
pop
das
mov
sbb
dec
mov
jecxz
jp
outsl
mov
enter
and
xchg
xor
xor
enter
outsl
push
cmp
jne
jns
sbb
shll
xor
test
fbld
dec
cmp
pop
ret
sub
xchg
testb
repz
aad
pop
sti
dec
fisttps
enter
inc
jbe
cmp
xor
add
push
xchg
ret
jmp
push
shlb
and
mov
ja
enter
pop
xor
mov
jp
addr16
movsl
push
js
cld
fstpt
cld
and
sub
adc
lret
mov
or
xchg
jecxz
inc
ja
jmp
cmp
andl
call
cwtl
dec
aam
addr16
outsb
test
lods
dec
fstps
daa
sbb
in
pop
cmp
sahf
jg
pop
adc
mov
xchg
inc
mov
mov
nop
lods
xor
popa
sub
jge
xor
ret
mov
jne
scas
jg
movsb
mov
rorl
or
mov
shlb
pushf
movsb
pop
adc
repnz
sbb
or
in
mov
push
fwait
inc
imul
sub
dec
fmuls
dec
sti
pop
cmp
and
divl
scas
cmpsb
gs
repnz
bound
in
mov
loop
xchg
gs
add
jno
pause
loope
inc
jno
jae
jne
jg
aaa
pop
mov
sbb
cmp
insl
scas
rolb
je
int
xor
xor
iret
mov
mov
fsubr
jo
movsb
xor
ror
xor
fs
pop
push
push
rorl
std
xor
fcoms
pop
je
mov
mov
push
sbb
pushf
pop
lock
lret
daa
bound
push
test
out
add
pop
adc
adcl
clc
dec
jbe
xchg
sbb
in
mov
cltd
lret
inc
outsb
mov
sbb
pop
cmp
aad
push
sahf
aad
add
sub
push
outsl
mov
xor
and
repnz
outsl
mov
xchg
lahf
push
ds
loop
cmp
es
fcoml
notl
vextractps
je
daa
xor
adc
stc
insb
xor
cltd
fwait
fisubrs
pop
push
xorb
fnstenv
cli
test
je
insb
call
inc
mov
ds
cmpsl
frstor
test
fcmove
jge
cltd
stc
repz
fstpt
outsb
push
sbb
mov
movsb
inc
icebp
xchg
cmp
mov
xchg
sti
cmp
cmp
leave
cmp
icebp
bound
mov
je
int
mov
xchg
push
lret
jnp
cmp
pop
xor
pop
mov
and
iret
sbb
jae
mov
and
sub
scas
popa
pusha
or
pop
loop
fldt
pop
add
jle
or
imul
lret
and
daa
gs
movl
sbb
scas
enter
xchg
aas
lds
das
mov
lods
adc
pop
push
clc
std
fistl
imul
xchg
dec
inc
cltd
faddl
outsb
and
dec
adc
lret
dec
lret
mov
and
sbb
pop
aas
insl
psubd
cmpsl
cmp
mov
xlat
mov
out
jecxz
mov
fwait
sarl
shl
xchg
jp
ret
mov
das
enter
fadds
mov
xor
in
xchg
sbb
jecxz
jmp
push
es
inc
orb
dec
jecxz
sbb
cmp
fildl
sub
scas
rolb
push
aas
mov
cmp
insl
ret
mov
imul
lods
aas
or
ret
int
jae
add
movsb
dec
jecxz
out
dec
popa
stc
into
es
mov
mov
mov
das
in
jbe
aaa
inc
aad
sbb
adcb
dec
rolb
inc
sub
mov
js
xor
push
pop
stos
bound
dec
daa
add
imul
out
aad
cmp
mov
aad
in
cwtl
lods
push
xchg
leave
cltd
insl
push
aaa
xchg
pop
mov
cs
pushf
push
mov
notl
jno
call
mov
mov
pop
fisubs
negl
mov
stc
and
inc
mov
sub
cmp
cmp
arpl
pop
rcrl
push
jp
jl
loopne
addr16
pop
cmp
push
dec
xor
fwait
push
mov
imull
pop
xor
add
jp
sub
sbb
xchg
clc
fwait
pop
mov
pop
jl
push
aas
lods
ret
pop
call
call
popa
lahf
rorb
divb
mov
jle
cmp
cmp
fisttps
inc
xchg
stos
ss
cmp
pusha
ret
xor
stos
jmp
aas
push
mov
and
lock
fldcw
icebp
pop
daa
jl
dec
xchg
ret
jno
fmull
push
das
out
xor
lds
clc
shlb
and
add
cld
inc
cmp
fld
aas
mov
adcl
pop
push
outsb
mov
cmp
dec
adcb
cmp
xchg
xor
mov
mov
iret
sub
popf
aad
ret
xor
lods
jecxz
jge
stc
xor
shrb
xorl
inc
stos
mov
je
lahf
jae
scas
jnp
ret
ret
sub
or
push
mov
lea
cmp
popf
add
ret
repnz
pop
pop
pop
popa
fidivl
inc
adc
sarl
xrelease
inc
bound
pusha
inc
lods
pop
pop
pusha
loop
xor
inc
hlt
pushf
jmp
aad
out
cwtl
sti
mov
lahf
repnz
dec
int
fildl
push
inc
insl
adc
pop
inc
decb
push
mov
or
cmp
jne
repnz
adc
arpl
cld
or
fwait
jnp
test
cwtl
cmpsl
jns
aas
insb
in
and
xor
push
rcrb
cmp
mov
mulb
xchg
subb
pusha
cmc
pop
sbb
xor
loopne
pop
pop
mov
mov
push
cmp
fisttpl
xchg
scas
xor
mov
cmp
inc
cmp
mov
jle
popf
popl
mov
push
push
mov
cmp
cwtl
shlb
xchg
cmc
clc
xlat
nopl
xchg
cmp
add
and
repnz
les
push
repnz
adc
mov
fisttpll
mov
mov
shll
push
sbb
outsl
cwtl
frstor
pusha
iret
or
adc
out
jecxz
inc
sbb
adc
loopne
rorl
pop
outsb
test
mov
adc
add
dec
mov
adc
dec
push
cld
jp
enter
jb
sbb
or
push
adc
xchg
dec
loopew
fidivrl
das
daa
pop
and
clc
mov
add
pop
stos
adc
dec
sbb
inc
pop
add
xchg
cmp
mov
jbe
xchg
daa
pop
inc
xchg
pop
pop
xchg
or
or
xchg
push
roll
adc
jb
inc
add
jb
and
inc
and
or
xor
cmp
mov
dec
push
mov
push
lret
push
out
adc
add
sbb
or
ja
ret
xor
fiadds
xchg
add
ja
int3
cmpsl
dec
dec
xchg
scas
dec
cmp
and
fucom
or
call
lcall
mov
mov
in
shlb
push
cmp
wrmsr
bound
xchg
pop
cmp
push
mov
pop
xchg
lcall
mov
in
inc
and
mov
lea
pusha
mov
and
out
fwait
outsb
mov
mov
hlt
cltd
and
jno
std
aaa
pop
xor
aad
test
inc
loop
push
mov
mov
and
push
and
out
xor
pop
jae
fimuls
das
std
lds
and
inc
sbb
cld
fwait
cmp
xchg
or
jle
adc
mov
or
pop
enter
arpl
jno
mov
xchg
fucomp
sub
mov
xchg
pop
mov
adc
jnp
push
push
xlat
ss
je
jno
inc
test
dec
dec
cltd
cmp
sahf
jp
xor
ds
adc
dec
pop
mov
shrl
cltd
es
mov
mov
leave
loopne
sub
push
negl
sahf
std
pushl
dec
dec
mov
pop
hlt
cmp
mov
sbb
and
xchg
movsl
sbb
sahf
lret
je
add
lods
popf
cmp
pop
enter
cmp
mov
and
stos
int
mov
jns
add
push
stc
jns
fcomi
xchg
repz
test
mov
js
adc
cmc
push
shl
mov
jo
xlat
clc
mov
or
or
insl
scas
cld
lea
xchg
repnz
inc
mov
stos
sub
out
inc
lods
lret
jne
sahf
ficoms
mov
rclb
mov
dec
mov
or
loope
sbb
popf
cmp
movsl
ret
push
mov
testl
mov
add
dec
fld
and
push
js
and
mov
in
sub
mov
mov
sub
jp
push
mov
cmp
and
xchg
loopne
out
out
movsl
dec
or
call
mov
xor
push
push
push
cmpsl
pop
fdivl
xchg
lret
sahf
cmp
jbe
inc
mov
mov
adc
push
or
imul
xchg
or
dec
jle
mov
or
dec
into
fisttpll
dec
daa
pop
push
gs
jmp
pop
rcll
test
or
inc
pusha
mov
and
pop
dec
insl
cmp
sbb
leave
sbb
sub
mov
sub
jne
cmpl
cltd
into
imul
roll
imul
mov
xchg
or
arpl
aad
loope
sbb
mov
add
stc
pop
aam
lcall
and
aas
ffree
add
lods
mov
push
test
adc
sub
dec
fcmovnu
dec
fwait
ret
mov
dec
icebp
mov
fnstsw
nop
outsl
popf
ljmp
xor
add
sti
mov
and
shll
aas
push
sub
bound
push
icebp
jae
lahf
mov
mov
jnp
push
xchg
popf
hlt
cmp
cli
ret
sub
xor
mov
add
aas
adc
out
js
sub
mov
lret
aas
cmp
insb
jp
xor
data16
jmp
pushf
push
push
cmp
mov
mov
notl
lods
lea
push
in
lea
add
jge
inc
add
bound
aam
std
sub
xchg
test
mov
sub
cmp
insb
push
popf
mov
jecxz
and
mov
adc
sahf
lret
mov
adc
scas
jnp
ljmp
xor
stos
jecxz
out
or
in
jge
mull
js
adc
stos
lret
add
scas
pop
unpcklps
pushf
cmc
cmc
cmp
pop
pop
movb
jmp
sbb
lret
jns
adc
daa
rcrl
jge
dec
in
rorl
xor
je
xchg
ljmp
sub
addr16
cmpsb
dec
popf
ljmp
mov
push
mov
out
pop
mov
cmc
jecxz
addr16
movsl
sub
js
mov
jns
scas
mov
inc
and
pusha
test
dec
jp
dec
jmp
xor
scas
mov
push
inc
inc
ret
adcl
inc
js
fstpt
inc
jmp
mov
push
ss
add
stos
dec
xor
or
push
imul
jp
add
mov
mov
test
sub
jp
mov
jbe
jns
or
popa
in
fs
imul
cmp
dec
mov
movsb
fldenv
mov
scas
sub
mov
sahf
lea
daa
mov
sbb
sub
cmp
aas
jle
xchg
imul
xor
imul
out
loopne
fidivrl
jle
shrl
push
sbb
dec
add
mov
les
mov
adc
pop
or
lods
dec
mov
sahf
cli
sub
aas
sub
mov
sbb
ret
loop
loope
mov
jne
nop
mov
xor
outsb
nop
pop
gs
hlt
jno
lcall
inc
adc
ljmp
sbb
push
cmp
imull
fsubrl
lahf
cs
loopne
mov
sahf
pop
cld
adc
xchg
ja
push
and
fildl
xchg
push
icebp
dec
mov
rorl
shl
pushf
mov
and
out
nop
mov
and
in
jl
jnp
icebp
sub
stc
pushf
roll
shrl
jle
ret
fbld
fcomi
mov
pop
or
push
or
out
stc
insl
jg
negl
enter
dec
sbb
inc
adc
xchg
push
or
sbb
mov
inc
sbb
imul
das
lret
insb
jne
into
mov
jbe
push
arpl
ret
mov
push
fwait
imul
dec
andl
mov
repz
outsl
jno
xor
pop
cmp
mov
mov
cs
push
dec
sbb
popa
ljmp
cmpsb
add
xor
dec
loope
mov
inc
insb
mov
pop
cmc
push
bound
iret
ret
adc
push
mov
enter
xor
lods
std
xor
out
lds
xchg
sahf
pop
mov
mov
mov
lret
sub
insb
movsl
scas
sbb
jmp
push
xor
mov
pop
sub
roll
and
mov
pop
mov
ja
and
rclb
ljmp
in
ret
clc
or
mov
outsl
push
ljmp
in
pop
aas
push
push
std
loop
push
add
or
and
jae
pop
jae
sbb
mov
andb
fadd
push
xadd
push
loopne
sbb
scas
push
sub
sbb
ds
ret
xchg
push
aad
js
cmpsl
push
out
sbb
push
cmp
shll
cwtl
jg
inc
lds
inc
cmp
inc
or
cmp
xchg
mov
outsb
dec
push
adc
aad
sar
push
xchg
pusha
push
clc
mov
testb
jp
jno
cmpsb
iret
mov
test
sahf
mov
adc
push
push
scas
sbb
ss
jl
enter
push
inc
lret
push
mov
push
cmp
mov
mov
out
inc
push
xor
idivb
imul
mov
mov
or
xor
pop
jns
out
mov
mov
add
jns
pop
or
jle
movsl
lea
xor
push
stos
xorb
mov
lods
xchg
adc
negl
in
nop
stos
adc
xchg
push
aam
shl
mov
xor
jo
jle
test
in
adc
test
fdivrl
or
add
imul
push
in
jns
pushf
pop
shll
push
xchg
fldenv
fs
sahf
std
and
add
jae
popf
mov
inc
or
mov
cwtl
sub
cmpsl
loope
or
out
test
sub
stos
sbb
push
mov
lods
hlt
aaa
mov
sub
push
add
cld
data16
aam
outsb
imul
loopne
pop
mov
sub
jle
dec
stc
cmp
mov
sbb
js
shll
lods
xor
int
pop
cmp
jge
mov
jae
fsubrl
pusha
sub
push
loope
loop
mov
mov
xchg
pop
mov
add
dec
sbb
jno
dec
adc
cld
fsub
mov
pushf
dec
adc
sti
stos
pop
lea
fidivrs
adc
jns
fwait
jae
and
ljmp
nop
sub
loopne
adc
or
push
sbb
lods
inc
lea
in
push
jmp
mov
arpl
xor
jbe
ret
and
pop
xlat
fmuls
outsl
pop
xchg
fwait
enter
sub
and
cli
xlat
lock
movsb
int3
lcall
push
push
leave
and
sbb
out
adc
rcl
adc
xchg
inc
ljmp
sbb
insl
loop
aam
enter
sbb
add
mov
out
dec
mov
popa
xor
pop
add
jbe
mov
in
lods
jl
xchg
sub
popf
jge
fcomip
fidivrl
cmp
push
repnz
sub
xor
xchg
bound
adc
inc
inc
xor
dec
xchg
ss
insl
add
adcb
jg
aas
out
inc
add
lods
rorl
lods
pop
js
out
or
lods
dec
and
ss
push
in
cltd
xchg
ljmp
and
ret
aas
adc
xor
in
faddp
or
inc
stc
movl
add
rcll
cmp
and
xchg
cmpsb
icebp
ljmp
cmp
push
sub
orl
fidivrs
stos
lods
push
add
inc
call
mov
and
shr
inc
dec
sahf
and
xchg
sub
mov
xor
jb
pop
test
sti
mov
test
adc
jne,pt
sar
mov
inc
pop
aaa
ret
xchg
or
lret
in
jp
sub
adc
inc
cmp
int3
lods
adc
jmp
ss
lcall
pop
out
in
pop
pop
mov
inc
mov
adc
push
fimuls
inc
cld
fadds
adc
pusha
dec
adc
sarl
gs
mov
gs
adc
lcall
sbb
xchg
dec
xlat
outsb
pop
out
int3
inc
mov
incb
cmp
or
xor
xchg
into
movsl
mov
pop
cmp
mov
sub
into
scas
popa
call
scas
popa
or
mov
adc
decb
enter
mov
jae
push
arpl
insb
fwait
insl
rcrl
mov
stos
pop
inc
in
aas
hlt
loopne
cmc
sbb
mov
into
jno
jg
stos
or
es
mov
mov
jae
in
jl
sahf
dec
inc
bnd
shrl
lods
pop
push
inc
lods
mov
gs
sbbl
inc
ja
int3
repz
xor
mov
fdivr
ret
xchg
xchg
shrl
fs
add
mov
adc
aaa
xor
pushf
lock
lahf
add
cs
sub
enter
nop
movsb
hlt
popa
inc
xor
dec
push
sub
sbb
hlt
jb
mov
es
clc
sbb
icebp
push
push
jae
jb
xchg
and
push
mov
fnsetpm(287
push
insl
or
mov
scas
ret
cmp
xchg
or
in
sub
sub
sbb
mov
or
imul
push
ret
pop
inc
jbe
and
mov
cmpsb
or
inc
jp
cmpsl
js
jge
cwtl
adc
sahf
scas
cmp
stos
andl
aam
nop
push
xor
jp
mov
lret
enter
sbb
lea
fcmovnb
dec
mov
imul
scas
pop
pop
shl
sub
push
iret
and
and
sub
mov
sbb
mov
sar
cmovns
dec
xlat
add
cli
repz
clc
scas
sbb
jb
xchg
inc
cmp
gs
test
out
les
add
fidivrs
pop
dec
stc
mov
addl
mov
sub
jmp
inc
pushf
das
pop
dec
inc
jmp
push
xchg
hlt
rcrl
sub
pop
mov
mov
push
outsb
scas
arpl
mulb
jbe
jmp
cmpb
lock
mov
loope
sar
mov
int3
xchg
ss
pop
and
call
adc
pop
xor
fbld
mov
aaa
stos
add
out
dec
cmp
add
popa
inc
inc
mov
leave
sti
mov
or
cltd
cmpsl
xor
add
pop
fpatan
enter
jecxz
sbb
pop
insl
ret
jo
loop
push
mov
in
jae
dec
scas
sti
test
pop
push
and
jo
cmp
xor
fwait
jbe
pop
insl
mov
inc
in
push
lahf
out
sbb
dec
orl
sub
loope
pop
inc
ds
jnp
inc
mov
orl
sbb
ss
dec
mov
push
ljmp
lods
mov
fisubl
mov
mov
cmp
addr16
push
std
sti
lret
sahf
mov
clc
dec
in
mov
adc
jnp
pop
xchg
ss
pop
mov
jne
sbb
loop
or
pop
test
stc
inc
fucom
xchg
scas
jmp
into
stos
xchg
cmp
fistl
fcompl
or
cmc
out
iret
jl
gs
leave
jl
in
xlat
or
dec
sub
lcall
push
mov
mov
loop
mov
adc
test
in
aad
and
daa
hlt
fidivs
pop
pop
lods
xor
mov
push
jecxz
pop
cwtl
xor
mov
jno
mov
dec
loope
sub
std
push
jmp
push
mov
or
pusha
or
mov
jae
lea
pop
popl
ffree
jno
jl
repz
xor
cmp
sbb
mov
daa
in
shll
cltd
sub
in
aad
add
and
xchg
cmp
add
push
mov
mov
add
inc
add
les
lcall
daa
mov
ret
push
shl
pop
push
aaa
xor
aad
divb
icebp
push
xor
mov
pop
mov
arpl
pop
mov
mov
mov
mov
repz
pop
jno
push
dec
jle
mov
mov
into
add
lret
inc
cltd
adc
inc
daa
movsb
mov
mov
mov
push
out
scas
xchg
ja
cmpsb
je
cmp
loope
or
cs
mov
repnz
fisubrs
mov
push
mov
push
sub
inc
sahf
push
fbld
mov
sbb
insb
cmp
lds
xchg
mov
outsb
shll
nop
cs
mov
cmp
mov
or
mov
cmc
notb
sbb
sbb
popa
mov
ds
dec
pusha
scas
mov
inc
jge
xchg
bnd
jbe
mov
mov
push
jo
add
xchg
js
xchg
pop
mov
fdiv
inc
xor
sti
inc
mov
fcom
mov
mov
loope
pop
repz
loopne
clc
cmpsb
loop
loope
daa
inc
xchg
dec
popf
cmp
or
fsts
loopne
mov
xor
dec
sbb
dec
push
jmp
sub
push
cmpsl
cli
xchg
dec
or
jns
int3
add
mov
jle
dec
cmp
aam
sbb
mov
lahf
movsl
or
arpl
lahf
pushf
mov
dec
jae
mov
shll
pop
stos
js
add
mov
inc
mov
push
fstpt
outsb
call
jmp
out
mov
jg
or
subb
int3
shll
add
sahf
test
mov
jbe
out
fbstp
mov
xchg
xchg
push
cmp
stc
dec
fsts
pushf
popf
inc
outsl
push
int3
inc
cmp
icebp
ficomps
adc
add
lret
xor
mov
add
xchg
push
push
cmp
jp
nop
sbb
push
outsl
test
jg
and
jg
mov
push
adc
add
jo
popf
xchg
int3
mov
sbb
faddp
popa
nop
lahf
popf
cmpb
mov
xor
nop
mov
dec
ret
adc
cltd
adc
cwtl
iret
adc
sbb
pushl
daa
push
jo
shlb
lea
fsubl
xlat
pop
jmp
cmp
shlb
inc
enter
push
inc
cmp
insl
and
xchg
std
aaa
cmp
inc
lds
and
xchg
dec
add
mov
cmp
mov
adc
cmp
in
repz
mov
mov
mull
stos
xlat
and
mov
jne
in
scas
test
mov
mov
push
bound
out
arpl
incl
aaa
bound
in
xchg
lock
mov
aaa
xchg
imul
out
in
jbe
mov
pushf
std
jne
dec
clc
out
cmp
cmp
jl
and
add
bound
xchg
imul
mov
data16
push
mov
push
push
je
bound
xchg
push
mov
dec
fbstp
or
fists
out
sub
sahf
or
ss
xchg
aas
test
mov
pop
jg
scas
cmpsl
add
pop
ficoml
sub
mov
push
or
mov
sub
in
jmp
hlt
dec
and
loope
loop
testb
cmp
mov
dec
mov
dec
or
dec
sbb
pop
je
sub
cmp
in
sahf
testb
mov
pop
mov
or
pop
push
rorb
xchg
imul
fs
push
xor
or
mov
shll
stos
cmpsb
lahf
outsl
or
dec
jbe
fsub
movsb
sub
std
pop
sub
mov
testb
cld
in
inc
push
mov
jbe
xlat
sub
clc
mov
add
push
inc
dec
add
xor
hlt
movsl
lcall
adc
in
mov
cmpsl
orl
sub
fcmovnb
inc
push
hlt
xchg
cmpsb
repnz
cltd
mov
or
int
mov
les
mov
ja
or
mov
sti
jno
xchg
add
fs
inc
bound
xchg
cmp
or
xchg
sbb
rorb
mov
dec
leave
in
cmp
inc
jnp
stc
mov
xchg
imul
stc
mov
pop
pop
rol
inc
ss
js
push
push
inc
test
add
push
xchg
pop
in
add
mov
popa
in
sub
hlt
mov
push
ss
lea
sub
push
xorb
jae
sub
js
lcall
mov
sbb
sbb
mov
int
sub
jg
push
inc
xor
test
lahf
jge
into
or
jo
call
mov
mov
sub
pop
xchg
add
add
test
ja
out
pop
arpl
sbb
dec
lds
aad
movsl
fidivs
and
pushf
cld
lret
or
jno
lds
push
jg
lret
mov
mov
pop
cmp
lods
outsl
xor
jmp
and
imul
add
ljmp
cmc
jno
dec
das
sti
sub
sahf
test
cmp
sahf
data16
xor
pushf
lcall
loope
outsl
pop
xorl
pop
rolb
inc
das
aaa
inc
stos
test
xchg
out
dec
jb
sbb
shrb
shll
sbb
stc
jmp
iret
je
or
pop
dec
cmp
mov
xor
hlt
aaa
xchg
adc
in
adc
jp
in
das
and
adc
mov
or
inc
mov
pop
mov
test
xchg
rorl
inc
jo
test
inc
push
and
jge
push
dec
sbb
push
jo
sbb
gs
push
scas
add
ss
outsb
ds
or
je
mov
add
daa
lods
mov
mov
sbb
jmp
stos
loop
cltd
lock
xor
push
sbb
stc
rcrl
or
ja
scas
andl
int
mov
incb
mov
dec
rcll
inc
dec
in
jp
mov
inc
mov
cmpsb
push
xchg
jg
jg
ret
mov
fs
outsb
loop
fmull
mov
int
mov
add
pop
xchg
mov
push
jle
and
stos
sub
and
mov
ss
sbb
xchg
mov
stos
sub
jnp
pop
xor
ds
pop
mov
pminsw
ret
or
hlt
imul
rorb
imul
enter
rol
and
rorl
inc
scas
push
sbb
inc
dec
clc
lret
fsts
shl
jnp
jg
daa
or
or
dec
mov
dec
push
add
jo
pop
in
cwtl
mov
and
aad
shlb
les
or
bswap
scas
sbbl
xchg
mov
cmp
loope
xchg
insb
je
stos
adc
pop
cli
adc
shrb
mov
popa
xor
sub
dec
enter
fs
addr16
mov
inc
in
imul
es
imul
pop
es
jmp
jg
das
xor
clc
adcl
dec
xlat
iret
inc
rorl
andb
mov
lods
scas
mov
jo
mov
cmpsb
fiaddl
ss
cmp
mov
adcb
jo
test
call
aas
test
mov
sbb
xor
adc
cmp
inc
imul
test
stc
sub
aaa
fwait
or
push
jge
subb
lcall
sbb
lahf
scas
pop
dec
mov
stos
iret
ljmp
imul
cld
xchg
mov
pop
or
inc
jl
ds
mov
mov
jmp
std
fcomps
xor
nop
ret
pusha
inc
jae
aaa
test
jmp
leave
lahf
leave
aam
movsl
pop
popf
push
xchg
add
sysexit
cmp
stos
adc
out
adcb
lea
xor
loop
sbbl
and
ds
mov
sub
dec
and
enter
jl
push
push
pop
cmp
orb
pop
mov
cli
inc
cmp
dec
xchg
out
ror
cmp
loop
jbe
pop
xor
das
jp
mov
push
testb
out
lock
shr
sbb
mov
dec
xor
cld
push
out
sarb
xchg
fidivs
or
push
jno
and
cmp
or
push
jnp
pop
roll
push
adc
mov
jg
pop
and
pop
jne
pop
insb
aam
xchg
xor
in
cmc
stos
jg
jae
sub
xchg
add
adc
test
enter
and
push
mov
push
dec
add
nop
mov
sbb
add
loopne
cmp
lods
outsb
pop
subl
mov
mov
or
nop
pop
jns
push
xchg
fstpt
or
mov
pop
xor
lahf
inc
aam
push
pusha
add
inc
imul
dec
sahf
arpl
stos
dec
push
sbb
and
jmp
add
cmp
add
xchg
bound
mov
outsl
ret
sub
push
adc
fwait
cld
cs
jp
jmp
xor
sub
inc
sbb
rol
scas
aaa
mov
xchg
or
cmp
sub
xchg
add
or
loopne
dec
inc
mov
and
aam
jno
bound
popa
aam
cmp
enter
ss
pop
jns
push
cmp
aaa
dec
mov
adc
fdivp
pop
xchg
mov
imul
sbb
out
push
mov
add
insl
shr
aad
xchg
lds
push
pop
cmp
jmp
pushfw
test
out
lea
cltd
xchg
add
inc
mov
xor
mov
pusha
xchg
adc
inc
mov
add
js
adc
ja
in
push
les
enter
dec
cli
jo
dec
push
emms
mov
out
loope
scas
lahf
xchg
je
and
sub
test
insl
sti
fdivs
notb
mov
or
cmp
jecxz
dec
out
add
adc
sbb
pushf
xchg
push
out
or
sub
pop
fcoml
mov
les
fiadds
addr16
push
xchg
adc
je
push
lcall
aam
cltd
mov
push
mov
sbb
mov
sti
leave
push
xchg
dec
fistpll
sub
pop
popf
cmp
mov
leave
adc
cld
test
sub
out
iret
mov
shrl
rorl
or
sub
add
daa
mov
mov
push
in
jl
popf
jl
xchg
mov
sarb
or
stos
imul
movsb
and
sbb
dec
mov
push
sub
lods
mov
jae
or
inc
rolb
pusha
imul
mov
shrb
add
bound
sub
outsl
pop
leave
arpl
or
mov
arpl
dec
fs
les
push
rcll
loop
pusha
or
js
dec
es
daa
jp
add
adc
pop
mov
lret
push
push
push
adc
mov
je
jb
out
add
adc
in
imull
dec
pusha
xchg
pusha
stos
incb
outsl
lds
mov
repz
jg
inc
imulb
or
push
sub
jp
push
mov
inc
cli
fucomp
jae
and
adc
adc
ds
jecxz
pop
or
mov
xor
cmp
or
cmc
shlb
clc
cmpsb
ss
inc
xchg
insl
fbld
and
imul
cmp
out
inc
mov
mov
xor
mov
push
mov
sbb
pop
ror
push
clc
jne
dec
add
or
mov
cmp
scas
mov
fcmovnu
push
ljmp
jge
icebp
ljmp
enter
pusha
mov
jge
lods
inc
lock
mov
mov
jmp
mov
testl
ljmp
xor
mov
out
pop
sbb
aam
jne
jne
and
bound
sahf
mov
notl
push
jge
ljmp
jo
rep
inc
test
push
xor
pop
add
andl
xlat
cld
xchg
shl
cmc
outsl
xchg
cmpsb
pop
mov
popf
lahf
movsb
or
into
pop
gs
xor
outsb
out
fistps
jae
ja
cmc
jp
fs
loop
xchg
insl
shrl
popf
fwait
mov
in
adc
push
loope
mov
or
cli
lcall
dec
mov
repnz
pop
jg
outsb
dec
adc
inc
sbb
push
pop
lods
data16
mov
sub
xor
je
enter
out
shrb
fidivrs
loope
mov
push
shlb
jg
out
jbe
ds
sbb
or
jge
xor
loop
popa
push
ret
dec
inc
adc
add
rclb
push
inc
call
bnd
adc
pop
lods
xchg
mov
pop
test
add
dec
call
insl
push
jecxz
cmp
sbb
rcrl
fld
int3
ljmp
les
aad
and
fidivrs
push
stos
inc
hlt
jae
mov
pusha
addl
mov
or
outsl
iret
xor
mov
jp
sbb
fsubrl
push
loopne
shll
mov
dec
mov
rolb
in
cwtl
push
jle
jae
cmpsb
pop
js
xchg
push
cmp
add
fisubs
jecxz
mov
xlat
sbb
pop
or
push
cmp
in
fimuls
aas
movsl
inc
dec
loope
dec
pusha
mov
iret
and
aas
mov
pushf
cmp
dec
push
lock
gs
aad
jp
jp
fcmovnbe
or
arpl
fisttpll
xor
int
loopne
add
jp
add
icebp
sub
cli
repz
dec
movsb
push
mov
adc
push
cwtl
jo
incl
stos
test
cmovbe
mov
mov
leave
xor
sub
or
cmpb
mov
mov
rcrb
mov
dec
stc
movb
mov
add
xor
fstps
iret
popa
mov
nop
inc
ret
int3
sbb
aaa
iret
lret
into
loopne
loopne
leave
das
mov
mov
clc
mov
dec
jne
mov
movsl
leave
sub
aaa
aad
rcrb
shrb
xchg
ret
pusha
mov
les
jne
or
and
lods
cmpsl
test
push
lcall
sub
xor
adc
mov
jmp
int
jge
in
mov
inc
ret
inc
scas
and
jns
adc
jbe
sbb
and
dec
pop
flds
js
mov
in
mov
xor
notb
lock
in
pop
test
repnz
jae
mov
pop
in
mov
xchg
sbb
xor
or
pop
add
es
nop
mov
pop
bound
enter
nop
aad
shl
loope
fnstsw
add
test
ljmp
cltd
je
jae
mov
cmp
cmpsb
cli
fs
dec
movsb
mov
es
sahf
ljmp
push
bound
js
popa
call
outsb
xchg
ret
dec
push
add
out
mov
xchg
or
push
push
jecxz
pop
mov
mov
jmp
call
mov
std
dec
mov
lds
test
sbb
cwtl
pop
xchg
sub
cmp
data16
lock
dec
aad
pusha
fistps
mov
push
js
inc
push
lods
sahf
mov
in
cmp
sbb
in
mov
lods
notl
fdivl
adcb
and
scas
mov
xor
jno
in
in
outsb
jbe
mov
stos
sbb
ss
jge
pop
sbb
bound
bound
xor
out
mov
ljmp
mov
jecxz
add
cmpb
jbe
pop
cmp
fdivrl
push
inc
sbb
out
aas
sub
popf
sbb
push
pop
add
pusha
dec
int3
mov
sti
or
mov
xchg
pop
pop
cmpsl
dec
push
mov
mov
pop
and
shlb
inc
pop
push
addr16
jbe
push
dec
pushf
lsl
or
add
out
sbb
pushf
sbb
add
lret
cmp
and
pop
leave
scas
mov
dec
call
ret
mov
add
inc
out
mov
cltd
mov
mov
ret
xchg
clc
fidivs
xchg
xchg
xor
jg
andl
popf
cmp
les
jp
mov
cmpsb
jns
mov
das
push
mov
outsb
rorb
and
and
pop
mov
push
stc
lds
or
jg
xor
movsl
xchg
xchg
hlt
cmc
pop
xchg
mov
in
pushf
xchg
shrb
out
insl
out
jge
outsl
insl
xor
inc
and
repnz
je
jb
test
push
ret
ss
cmpsw
xor
insb
rcrl
and
leave
nop
xor
adc
dec
mov
repnz
sti
mov
jg
jo
mov
dec
in
mov
addr16
jae
inc
cwtl
fcoms
pop
jno
lcall
adc
sbb
add
test
sahf
and
pushf
pop
push
adc
in
inc
clc
fs
icebp
sub
lock
jb
shl
and
daa
out
cld
lcall
rclb
test
mov
fldenv
rclb
ljmp
fists
sbbl
push
leave
test
leave
adcb
shll
jnp
mov
push
les
movsl
cmpsb
in
mov
or
xchg
aam
dec
mov
cmc
aam
shlb
repz
jno
mov
cmpsb
rorb
stos
xor
pop
sbb
aad
adc
es
out
push
xchg
testb
xor
stc
adc
enter
in
add
arpl
js
or
cmp
pop
repz
in
cmc
add
stos
out
cmpsb
sub
and
push
cltd
imul
in
push
mov
sbb
mov
add
aaa
jg
and
inc
sub
sbb
push
push
decl
mov
test
xor
aam
loopne
aas
fs
push
ficoms
cmp
leave
jno
push
xchg
push
icebp
adc
shrb
pop
mov
jo
pusha
jae
lret
sbb
flds
lods
mov
xor
push
in
or
pop
andl
add
xchg
and
insb
ret
bound
mov
pop
cmp
mov
ja
das
test
mov
sbb
xor
andl
repz
je
sub
and
mov
jmp
jae
mov
das
sub
mov
lcall
dec
mov
mov
rep
pop
data16
mov
mov
fwait
push
mov
jno
xchg
fidivs
mov
mov
pop
cwtl
jne
xchg
popf
in
push
cli
nop
mov
into
add
popa
lea
mov
cmp
cmp
fldcw
int
or
aad
insl
iret
stos
orl
iret
pop
scas
outsl
ret
jbe
enterw
adc
lahf
or
mov
jns
sbb
xor
in
jnp
jbe
fdivs
pop
fidivs
sub
es
xor
fistpl
hlt
cmp
mov
inc
xchg
push
and
cli
pop
xlat
fstl
inc
in
jns
xchg
xorl
repnz
pop
outsb
mov
mov
arpl
push
jns
idivl
and
adc
adc
jecxz
sbb
push
mov
pop
sarl
loope
jns
sarb
dec
pop
js
cltd
std
inc
ds
or
fldt
sub
and
test
jne
jmp
mov
outsl
mov
out
cmpsl
dec
lret
xchg
outsb
mov
loope
dec
xor
shr
rcr
jl
ss
mov
test
inc
scas
imul
mov
testb
mov
sub
mov
jp
popa
xor
fstps
dec
or
and
or
stc
loopne
sub
aas
jbe
in
fcmovnb
adc
lret
and
imul
push
fbstp
test
mov
pop
out
mov
push
mov
pop
add
lahf
and
std
mov
jmp
mov
and
push
jg
stos
jno
setno
inc
pop
jno
shlb
xchg
inc
lcall
dec
pop
fstpl
add
bound
subb
dec
je
adc
cmp
cltd
repz
cmpsl
popf
scas
cld
mov
shr
call
test
jge
es
leave
push
inc
sti
push
in
cmpb
and
in
jbe
into
or
aad
add
loope
test
sub
cmp
imul
ror
test
mov
pop
imulb
xlat
mov
sarl
fs
outsb
xlat
jg
inc
mov
and
dec
rol
inc
roll
push
mov
sub
js
mov
mov
outsb
mov
push
jae
cmpsl
repz
stc
into
loop
cmpsl
push
push
loope
std
out
mov
clc
or
movsl
push
push
cmpsb
mov
and
push
xchg
push
pop
iret
call
lret
xchg
xchg
pop
mov
stos
pop
iret
sub
pop
stos
mov
pop
lret
shll
cmp
push
inc
cwtl
add
sub
pop
js
mov
sbb
inc
fadds
pop
aam
pop
push
cwtl
xchg
pop
sbb
nop
or
mov
ljmp
or
add
mov
jno
call
jg
sub
lods
out
es
outsl
jge
mov
xchg
loop
mov
movsb
push
test
jecxz
in
push
push
push
mov
mov
pop
fidivl
mov
lea
rcr
sti
mov
add
insb
ret
test
inc
xor
inc
sbb
fsubs
jnp
in
cmp
jne
jns
popa
cltd
testl
adcl
xor
insl
bound
inc
pop
bound
icebp
inc
sub
adc
sub
jle
xchg
xchg
call
jge,pt
rorb
cmp
xchg
addr16
adc
jle
out
mov
in
outsl
in
ficomps
jb
test
mov
mov
movsl
mov
pcmpeqb
sbb
cmp
xchg
mov
out
lock
xor
mov
in
mov
loopne
out
mov
cmp
cmp
jmp
adc
mov
xor
mov
cmp
mov
sbb
and
hlt
xor
add
sbb
data16
lret
sbb
sti
dec
in
push
mov
and
test
pop
arpl
imul
and
jae
std
shr
and
inc
dec
cmp
jge
fisubrl
in
out
gs
stc
mov
xchg
push
mov
dec
dec
push
std
pop
into
push
movsb
ds
mov
icebp
cmp
dec
rorl
sbb
jmp
mov
repnz
enter
stc
inc
and
add
lods
lahf
push
adc
in
xor
imul
push
mov
popa
js
sub
in
mov
pop
test
ja
dec
jecxz
xchg
sbb
aam
sbb
popf
pop
xor
mov
in
jbe
rcll
mov
and
dec
push
push
adc
or
dec
sbb
je
jle
ljmp
test
test
cmp
xchg
js
inc
jo
mov
inc
js
xchg
lds
cmp
pop
xchg
sub
pop
mov
popa
cmp
popf
push
out
mov
movsb
mulb
push
les
xchg
arpl
loopne
and
jb
xchg
mov
add
rol
decb
dec
lret
push
je
mov
jecxz
mov
sub
mov
jle
push
imul
sbb
loop
lock
inc
mov
imul
cli
or
jae
jmp
pop
sbb
and
xor
ss
lcall
jo
push
inc
jns
in
xchg
repz
mov
test
notl
mov
sbb
or
iret
sbb
sbb
xor
push
repnz
imul
in
adc
and
xor
or
or
scas
lret
sbb
pop
dec
pop
lds
mov
xchg
mov
std
ret
psubq
mov
in
movsb
loop
sbb
rolb
aad
jge
xchg
cmp
mov
test
repnz
loope
shrl
adc
push
ja
mov
inc
adc
pushf
arpl
mov
shrl
in
push
add
xchg
and
push
iret
je
insl
mov
and
fwait
adc
dec
mov
sti
sbb
rcr
mov
inc
jmp
xor
clc
sub
mov
dec
dec
lahf
adc
jne
xchg
mov
mov
int3
out
jae
cmp
scas
inc
push
cmp
test
leave
aad
inc
push
dec
hlt
jbe
add
popa
mov
add
inc
xor
call
iret
mov
fcompl
stos
mov
inc
pop
dec
fidivrl
iret
push
xor
loop
sub
pop
jl
pop
cmp
outsl
leave
js,pn
sub
cld
sbb
cs
add
fs
dec
clc
jo
arpl
pop
push
js
push
jmp
sub
test
sbb
stc
or
or
sbb
rcrl
pop
adc
and
xchg
test
imul
aam
pop
outsb
cmpb
pushl
and
sbb
or
dec
pop
push
rolb
pop
enter
dec
add
mov
pushf
ds
mov
or
jo
push
fdivr
ret
aas
ljmp
sub
ret
jmp
addl
je
test
add
jge
nop
jae
loop
out
mov
in
daa
loope
jg
or
mov
inc
xchg
mov
cmp
mov
mov
cmp
rcl
lcall
adc
ljmp
cmpsl
xchg
out
xchg
iret
jg
push
loop
ja
rcl
mov
sbb
and
push
aaa
mov
and
das
jg
andb
into
loop
jno
jle
jl
mov
sbb
sahf
fisttpll
push
repz
mov
pusha
lds
mov
mov
mov
xchg
and
ret
repz
in
pop
aam
outsl
scas
pop
cmp
sbb
xor
fnstsw
push
push
sub
dec
fs
mov
cmpb
jle
fnsave
pop
jecxz
mov
and
sbb
push
gs
fimull
ja
jge
jecxz
mov
push
xor
lret
push
movsb
xchg
push
jge
xlat
clc
jmp
push
pop
mov
rcrb
xchg
xchg
cmpsl
and
cmp
stos
xor
loopne
pop
not
jnp
sub
addb
jo
lret
fbld
fiaddl
adc
lock
cmp
cs
sub
mov
mov
inc
sub
sub
sub
popf
mov
mov
ja
outsb
push
je
jge
inc
add
mov
cmp
jge
movsb
daa
or
mov
mov
enter
aad
push
negl
mov
inc
std
inc
sub
aaa
and
push
pop
imul
mov
xlat
xchg
xchg
sbb
xchg
mov
pop
sbb
les
push
loopne
ret
jno
leave
dec
mov
pushf
jb
xor
outsl
dec
icebp
fs
cwtl
or
lods
test
mov
incl
push
jle
pop
dec
xchg
dec
xor
lock
xor
imul
jecxz
mov
dec
leave
notl
in
mov
aam
xor
in
sbb
clc
mov
mov
rorb
adc
jmp
jbe
mov
inc
repnz
sbb
or
cmp
movsb
sbb
or
pop
outsl
mov
mov
or
jne
cmpsb
xor
pop
mov
jbe
int
xchg
pop
or
mov
and
mov
mov
xor
xchg
loope
mov
jecxz
leave
pop
push
mov
and
mov
imul
cmp
xchg
pop
cltd
test
popf
into
pop
frstor
popa
lcall
add
cmpsb
stos
clc
jecxz
shlb
or
mov
dec
cmp
inc
jecxz
cmpsb
in
cmp
xchg
sbb
sbb
inc
jo
cmp
and
dec
sbb
arpl
fiaddl
jbe
out
add
imul
out
lcall
fmuls
test
jg
into
sub
fwait
mov
cwtl
mov
imul
testb
push
fsubl
mov
cmp
test
ret
out
adc
shrl
mov
adc
lret
popf
cmp
inc
js
inc
xlat
push
or
pop
jle
mov
lods
mov
mov
aaa
fs
sub
mov
daa
lods
and
add
mov
stc
pop
xor
pop
add
push
add
imul
pop
and
jl
stos
shl
or
mov
add
jns
lock
or
into
roll
dec
mov
sahf
inc
fistpll
sti
add
dec
arpl
jne
les
popf
pop
fisubl
das
in
jbe
or
xorb
pop
add
mov
sarb
lods
sarb
jge
pop
mov
andb
and
jl
je
xor
push
mov
cmp
ds
xchg
iret
popa
xchg
push
or
filds
xorl
sbb
cmp
out
push
sbb
dec
fisubs
add
adc
xchg
jge
into
popa
sar
jbe
stos
ss
jmp
std
sub
push
notl
and
xchg
movsl
pop
lahf
loope
gs
jns
dec
pop
push
add
mov
jns
push
add
ds
out
lods
hlt
rcll
stos
das
mov
clc
into
incl
fidivs
pop
pop
mov
add
dec
mov
fcoms
jmp
push
xor
repnz
inc
std
pop
xchg
and
pop
into
mov
fwait
sbb
sarb
mov
shrb
mov
clc
and
mov
jbe
and
lahf
mov
mov
mov
ret
jmp
push
insb
jbe
jge
daa
ss
sahf
fdivrp
imul
sub
out
add
mov
shlb
push
add
enter
mov
and
adc
sub
cwtl
inc
cmc
outsb
scas
push
leave
dec
jne
cld
pop
test
add
in
inc
pop
lods
xchg
stos
push
dec
mov
xchg
ret
and
jns
jmp
xchg
fmull
jmp
leave
in
imul
or
lcall
xchg
adc
je
pop
mov
icebp
inc
inc
in
sbb
sbb
pop
mov
and
cmp
xor
sahf
dec
addl
outsl
sub
push
xchg
loopne
std
adc
lcall
sbb
and
dec
jle
mov
xchg
call
sbb
fst
fdivr
dec
stc
or
loop
xchg
pop
ja
out
jmp
push
cs
sub
repnz
sub
test
popf
mov
mov
or
insb
cli
lcall
loop
xchg
in
mov
mov
mov
mov
mov
fcmovbe
filds
outsl
out
int3
dec
sub
mov
push
pop
icebp
mov
mov
scas
insl
je
add
inc
and
je
cmc
mov
cmpsl
push
and
in
es
pop
cmp
xor
add
add
xor
pop
sub
xor
push
stc
pusha
mov
inc
imul
adc
and
jne
ds
subl
call
push
pusha
sbb
inc
cmp
pop
loop
repz
mov
add
inc
push
loop
add
fisubs
and
aam
in
sarb
ret
ljmp
or
in
sub
and
mov
into
js
jns
out
aam
cmp
lret
mov
pop
pop
add
xor
push
dec
pop
leave
data16
pusha
sub
test
cmc
xchg
add
sbb
sbb
xchg
push
out
add
jmp
dec
lret
shrb
rclw
and
rcrb
lahf
xchg
xor
mov
pushf
cs
fists
dec
leave
lock
cmc
jno
cli
jle
out
jp
cmpsb
decb
cmp
lret
aas
dec
dec
data16
pop
jb
cmp
lods
push
push
sub
pushf
dec
mov
push
enter
or
adc
inc
mov
lods
sub
or
pusha
addr16
popa
adc
out
xor
int3
mov
mov
pop
add
ja
cmp
lds
int3
shlb
mov
fwait
ret
repz
ljmp
cmc
add
pop
push
out
iret
push
xchg
add
int
sbb
jb
test
or
rolb
lock
push
pop
xor
add
push
inc
mov
std
loop
inc
iret
adc
pop
jecxz
out
in
mov
add
mov
call
cltd
pop
adc
mov
push
sub
dec
and
pop
sbb
enter
dec
mov
mov
inc
std
add
inc
shrb
aas
and
shrb
mov
and
lahf
scas
fistps
xchg
stos
loop
jmp
imul
jo
jmp
jb
cld
add
adc
decl
enter
jns
out
sbb
inc
iret
mov
jnp
fnstsw
mov
push
mov
mov
sub
sub
stc
mov
add
ljmp
pop
test
mov
push
lret
xlat
dec
mov
pushf
jae,pt
aam
insl
and
push
jp
mov
xor
sbb
scas
div
lahf
cmc
in
outsl
out
aam
adc
test
popf
cli
or
loopne
push
pop
jns
cmp
int
out
mov
sbb
jecxz
lret
data16
xchg
cli
negl
sub
aaa
jge
gs
add
sarl
inc
jns
jle
pushw
in
imul
push
dec
rcl
pop
cs
xchg
or
adc
shrb
ret
jae
mov
int
sbb
insb
scas
pop
pusha
dec
or
fucomi
push
cmp
subl
hlt
xor
test
xchg
movb
sbb
call
pop
xor
xorl
ljmp
insl
mov
loopne
repz
push
repz
cmp
mov
hlt
inc
out
or
or
out
adc
out
mov
pusha
into
mov
daa
add
push
fidivrl
mov
sti
push
pop
fidivrl
xlat
ss
rclb
mov
sub
pop
xor
adc
and
mov
add
mov
pusha
ss
mov
iret
imul
in
orb
call
and
popf
es
jne
push
lret
adc
sub
add
outsl
test
mov
push
push
xor
xchg
addr16
add
outsb
js
mov
push
mov
mov
sbbb
sub
adc
mov
add
test
xor
jl
and
push
or
lahf
dec
loope
push
int3
aas
lcall
cli
sti
or
dec
sub
push
xchg
stos
mov
insb
cld
aad
mov
add
jno
pop
xchg
aaa
aam
mov
loop
push
and
sbb
fld
push
mov
dec
push
lret
or
sub
iret
rorl
mov
jne
fdivrs
xor
in
aam
lahf
adc
push
insb
dec
xor
mov
cwtl
fisubs
push
inc
lods
scas
call
jmp
and
bound
les
pusha
dec
cmp
or
sbb
jge
jno
mov
mov
loopne
xor
fdivrs
mov
fwait
nop
add
repz
cs
pusha
dec
xor
lock
push
and
in
aam
scas
dec
mov
addr16
fdivs
push
shlb
shlb
mov
js,pt
nop
test
dec
sti
not
les
inc
mov
fdivs
xor
push
xchg
into
mov
or
bound
lcall
enter
push
fisubrs
lods
adc
scas
mov
mov
push
mov
aas
pop
imul
mov
mov
inc
lods
shrl
iret
xor
hlt
dec
xchg
or
inc
cmp
sarb
mov
lret
sbb
inc
dec
daa
inc
add
test
add
sbb
or
frstor
ficompl
hlt
jbe
mov
out
in
sub
test
pmaxsw
xlat
insb
push
out
and
cs
push
lods
inc
xchg
add
cwtl
and
fildll
and
mov
fdivrl
push
jg
call
out
adc
push
mov
add
xlat
adc
sub
add
stos
lods
mov
xchg
jno
xor
fwait
cmp
daa
adc
dec
clc
cmp
mov
adc
test
mov
rcrl
in
cmpsl
mov
inc
mov
outsl
repnz
or
ss
pop
add
sub
adc
inc
or
bound
jge
pop
lret
inc
inc
adc
in
es
lea
pop
insb
push
mov
subl
push
dec
clc
sub
mov
mov
mov
dec
pop
and
fs
mov
cmc
or
inc
enter
adc
icebp
or
in
std
mov
cwtl
bound
sbb
movsl
pop
push
push
jne
cmc
sbb
pmulhuw
rcrl
call
and
dec
mov
push
call
inc
inc
xlat
and
aaa
xlat
ret
xchg
jmp
testl
mov
lahf
icebp
adc
xchg
in
cmp
jnp
filds
inc
fs
dec
mov
shll
xchg
pushf
fisubrs
mov
mov
gs
mov
addr16
or
push
dec
sub
sbb
mov
add
add
lods
cmp
and
fiadds
cwtl
xchg
lock
leave
push
adc
lds
addr16
lock
cmp
cmp
inc
daa
xchg
push
mov
mov
adc
inc
adc
sbb
adc
mov
decl
or
in
je
js
mov
push
fdiv
cltd
jl
mov
mov
push
lods
jmp
inc
movsl
not
cmp
js
inc
int
sahf
imul
jae
inc
ffree
stc
ja
pop
jbe
ret
hlt
jge
sahf
ret
scas
mov
sbb
xor
cmpsl
ja
mov
and
je
adc
insb
pop
movsl
test
xor
stos
ss
pop
dec
inc
jne
movsb
pop
sub
jns
cmp
sub
sahf
test
mov
mov
push
pop
mov
sub
int
test
iret
inc
movsb
pop
fisubrs
pop
mov
loop
int
into
fldl2t
test
daa
jne
sub
ds
jl
sti
mov
mov
adc
cmpsl
popf
aas
addr16
pushf
inc
dec
imul
lea
imul
cltd
cmp
cld
insb
mov
outsb
cmc
cmc
cwtl
or
mov
sbb
xchg
jae
nop
mov
jnp
lods
mov
lea
movsb
stos
js
inc
jmp
push
ret
mov
xlat
in
shll
fisubrl
je
jnp
dec
inc
sub
lds
popa
es
jle
cli
push
sub
pop
push
xor
in
lret
add
fisubrl
iret
add
rcrb
sub
push
adc
or
icebp
inc
or
mov
into
push
xor
ret
pop
jb
in
nop
iret
xor
xchg
mov
lock
mov
and
cmp
int3
lds
sub
lret
jp
insl
cmc
push
test
add
fadds
pusha
bnd
sub
or
int3
mov
sarl
stc
scas
in
fbstp
inc
push
iret
mov
add
and
stos
fmull
xchg
push
lock
dec
mov
cmp
push
xchg
adc
fsubrs
dec
arpl
jno
inc
xchg
int3
mov
ss
jne
stos
adc
mov
leave
push
sbb
imul
out
inc
subb
pop
imul
dec
cmp
pop
sub
lds
xchg
mov
lcall
and
lahf
enter
sbb
and
jbe
ja
mov
rorl
cld
mov
sub
mov
mov
pop
in
inc
das
sub
xchg
xchg
cmp
into
stos
jmp
stos
or
xchg
repnz
ds
pushf
ds
adc
xorb
sub
arpl
cmp
mov
in
ds
out
pop
out
stc
jmp
in
jns
push
test
outsb
and
or
mov
cmp
inc
aaa
adc
stc
nop
shrl
dec
enter
cmc
outsl
xchg
pop
pop
mov
fnstenv
mov
xor
sub
roll
lods
enter
xlat
pop
mov
cs
and
adc
roll
or
jno
xchg
pop
sarb
mov
adc
pavgb
adc
jne
mov
sub
add
test
call
insl
push
sahf
arpl
roll
dec
out
xchg
arpl
movsl
inc
jo
push
mov
jl
sbb
movsl
dec
in
push
sbb
mov
inc
mulb
xchg
push
fucomp
insb
je
pop
ds
inc
iret
insl
mov
jnp
jbe
mov
outsl
xchg
fsubrs
add
rolb
and
popf
repnz
sbb
or
loop
and
mov
js
sahf
xchg
sub
xchg
fiaddl
xor
push
int3
cwtl
icebp
adc
adc
daa
fistl
adc
mov
cltd
mov
add
and
je
push
xor
dec
shll
cmp
mov
and
jnp
lock
loop
jnp
inc
inc
xchg
sub
cmp
add
loop
mov
jl
rcrl
lret
pop
pop
add
cmp
jp
xchg
leave
out
sub
fld
xor
int3
js
pop
inc
pop
push
out
add
xchg
pop
xor
jbe
ds
rol
pop
repnz
popf
inc
cmp
jno,pn
cmp
pop
mov
inc
repnz
scas
sbb
adc
les
loopne
inc
cltd
dec
jns
insb
stc
loopne
lods
cmp
mov
jne
into
inc
jb
adc
imul
add
sub
in
xchg
push
jg
and
jg
xlat
int
inc
cmp
dec
hlt
insb
nop
xchg
or
into
mov
orb
mov
xchg
mov
adc
inc
push
lds
lods
fnstcw
outsb
pop
adc
pop
cmpl
mov
sub
jae
aas
sub
pushf
dec
or
xor
fildll
inc
mov
sbb
hlt
fdivrs
sub
insb
dec
cltd
scas
decl
inc
lahf
sti
sub
pop
fisubrs
mov
icebp
das
sub
faddp
popa
mov
jnp
subl
mov
pusha
mov
out
mov
testl
dec
cmpsl
push
adc
pop
or
scas
loop
out
jno
add
pushf
fdecstp
movsb
test
push
je
jle
lret
ljmp
cli
mov
loopne
jne
xchg
inc
sbb
sbb
mov
movsb
shll
mov
sbb
sar
roll
jl
xchg
fs
hlt
call
adc
add
and
insb
adc
cmp
fnsave
lods
cltd
in
mov
fwait
cs
cli
dec
sub
lea
pop
iret
or
jp
mov
ljmp
inc
fs
and
sub
out
mov
sub
into
jge
push
sub
and
pop
sbb
adc
push
inc
pop
sub
call
mov
fcomp
mov
jae
cmc
hlt
cmpsl
mov
fcompl
mov
lret
pop
mov
sbb
ret
xchg
mov
pop
jl
je
inc
mov
push
aaa
cmp
jnp
mov
xchg
ss
mov
add
cmc
mov
imul
cmpsl
sub
pop
cltd
mov
add
fabs
sti
ljmp
mov
imul
mov
jecxz
inc
ds
adc
mov
sub
xor
nop
icebp
gs
jp
jae
cmpsb
in
push
out
aas
mov
mov
and
in
xchg
jb
mov
shl
or
lcall
sti
pop
and
cvtdq2ps
pop
mov
push
add
lds
mov
icebp
in
mov
jl
aas
sahf
inc
mov
and
push
bswap
testb
add
andb
popl
rcll
inc
ds
cmp
test
mov
fstl
mov
mov
in
imul
dec
jno
repz
pop
nop
jge
jo
inc
hlt
jp
xor
pop
push
pop
push
rclb
lcall
test
mov
mov
push
or
mov
lods
jb
js
jno
rorb
push
inc
adc
insb
sbb
sti
scas
leave
es
sbb
jmp
pop
fcompl
aaa
jle
aas
icebp
jo
and
sbb
jae
mov
xchg
mov
adcb
fldl
out
or
hlt
xchg
adc
dec
sbb
aad
mov
in
mov
ret
cmp
inc
and
sarb
inc
xor
cltd
test
sub
fildl
mov
push
out
pop
cmpsl
fld1
pop
pushf
inc
jp
in
jns
pop
mov
mov
arpl
shrl
pop
mov
mov
inc
and
ds
shufps
mov
repz
dec
in
cwtl
insb
mov
sbb
push
ret
sbb
rol
arpl
insb
enter
popa
ret
aaa
cmp
cmpsl
je
push
insb
divb
aam
jae
pop
fisttpll
in
daa
xor
cmp
lods
dec
lock
adc
inc
popf
jp
jb
lods
hlt
pop
inc
cmp
xlat
scas
dec
mov
negl
sti
mov
or
cmp
mov
das
push
mov
push
nop
incl
dec
aam
sti
sub
add
jno
pop
push
in
pop
jmp
dec
pop
stos
or
mov
xchg
imul
dec
mov
cli
test
fs
rorb
push
xorb
popf
cmpsb
arpl
xor
mov
jl
cmp
sbb
fnsave
scas
pop
cld
std
dec
scas
movl
xchg
mov
fmull
sti
pop
pop
xchg
mov
jl
lds
stos
jns
add
in
adc
shrb
shlb
movsl
push
jg
fs
add
and
gs
ds
push
cmpb
push
lret
jns
in
fimull
xchg
mov
lret
outsl
fwait
aas
orl
xor
cmp
fildl
and
add
ror
lret
loop
addr16
sub
pushf
cmpsl
push
xchg
mov
movsb
mov
in
fiadds
sarb
nop
xlat
cmc
adc
sub
dec
cmp
xchg
pop
mov
pop
mov
mov
jbe
jne
scas
mov
push
jo
sub
push
sbb
outsl
pop
push
pop
sbb
sub
lret
cmpl
or
jno
sub
xchg
jp
in
mov
mov
jae
repnz
ret
mov
out
loopne
outsl
sti
popf
dec
sbb
mov
push
frstor
in
xchg
or
insl
mov
push
cmp
test
pop
aas
movsb
pop
rorl
sub
addl
stos
mov
rcr
movsb
sub
push
fbld
dec
pop
push
test
xor
jecxz
mov
insb
adc
lret
dec
jmp
add
push
xor
ja
mov
mulb
lret
fidivrl
mov
ljmp
into
push
jns
dec
ret
arpl
in
or
push
in
cmpsb
aam
sbb
or
or
push
pop
arpl
shr
outsl
enter
ror
or
sbb
sbb
xchg
jp
xor
or
ljmp
cmc
loop
jmp
dec
push
gs
inc
dec
mov
fs
push
pop
repnz
push
lock
shrl
push
pop
hlt
pop
ds
jne
or
push
shlb
int
int3
arpl
rclb
xchg
inc
jno
movsb
lods
and
mov
pop
jb
jmp
sub
stos
mov
push
inc
sbb
sahf
lea
clc
mov
xor
mov
mov
jmp
insl
mov
jl
push
cmp
inc
stos
mov
insl
adc
mov
test
leave
ficompl
fxch
cltd
cmp
and
mov
mov
cmp
ljmp
mov
adc
mov
mov
jmp
outsb
lret
inc
dec
lret
imul
dec
stos
mov
sbb
mov
fnstsw
jle
inc
mov
mov
popa
jbe
jmp
iret
imulb
mov
jle
enter
mov
push
adc
in
mov
push
inc
ljmp
push
jno
ja
cmp
jns
adc
out
mov
push
pop
mov
int3
cltd
jno
clc
push
mov
push
into
sti
cmp
stos
xor
inc
ja
mov
mov
loope
xor
cmp
test
decb
mov
xlat
lret
iret
jno
scas
cmp
cmp
fwait
xor
hlt
push
cmp
pushf
pushf
les
mov
mov
adc
pop
into
test
pop
ret
adc
push
rolb
pop
inc
adc
orl
cmp
add
pop
mov
popa
sbb
sub
ficomps
scas
sub
push
mov
inc
loopne
sub
cltd
fs
dec
pop
loope
ja
add
bound
lds
add
inc
test
ja
inc
jnp
lock
outsb
fnstenv
cmp
xchg
mov
out
mov
shrb
push
test
fistpll
stos
xchg
cltd
out
sti
lock
jmp
lods
push
adc
push
daa
pop
sub
dec
and
mov
cmp
out
out
jge
js
mulb
jmp
inc
xchg
mov
adc
mov
sbb
hlt
enter
cs
dec
arpl
iret
inc
lds
imul
add
nop
ror
xchg
or
popf
xchg
cltd
inc
cmp
jne
add
jnp
fists
sbb
mov
push
aaa
in
fwait
and
and
dec
mov
imul
aam
icebp
xchg
cmpsl
xor
loope
inc
mov
iret
scas
repnz
ror
insl
cmp
int
mov
out
ja
jle
and
out
mov
stos
loopne
aas
pop
pop
and
adc
fdivl
lcall
fxch
arpl
xchg
lcall
add
fstps
jns
outsb
cmc
std
f2xm1
dec
xchg
xchg
sub
cmc
pop
outsb
mov
in
repz
mov
push
test
pusha
addr16
inc
xchg
jo
inc
gs
dec
or
ss
ret
aam
movsl
hlt
aas
ds
call
mov
jmp
ljmp
push
aad
ret
fwait
scas
jae
dec
pop
js
inc
adc
xor
push
pop
cmp
mov
punpckldq
xchg
xor
cmp
jecxz
or
add
dec
ja
adc
jle
stos
and
hlt
fcmovb
lret
mov
add
cmp
and
xorl
push
dec
adc
and
out
sub
jmp
add
jns
fcoml
lods
faddl
test
sub
adc
cmp
ja
add
push
sbb
sbb
cmc
out
push
in
mov
cs
xchg
push
stos
inc
iret
hlt
shrl
cmpsb
mov
inc
aas
or
adc
push
mov
mov
dec
hlt
out
outsl
xor
adc
imul
ljmp
dec
lret
je
push
mov
icebp
sbb
shr
into
out
inc
pop
pop
pop
xchg
jle
loopne
cld
inc
sub
xor
push
scas
mov
inc
push
inc
fidivs
outsl
fstps
push
test
daa
jne
xchg
and
jb
xchg
lahf
sti
pop
faddl
imul
inc
cmp
push
push
mov
mov
popf
gs
mov
ret
xchg
vmread
ret
or
xor
jecxz
mov
or
cmovp
arpl
iret
cld
xor
repnz
mov
adc
adc
adc
lock
outsb
and
xor
testl
cmpsb
aaa
stos
jnp
mov
notb
xchg
pop
es
pop
jne
fildll
push
lret
int3
cld
push
popf
xchg
jp
sti
mov
fldt
gs
loopne
or
stos
shll
ffree
push
insb
jo
enter
in
mov
xacquire
inc
fimull
xor
xlat
push
or
cmc
fisttps
stc
divb
mov
mov
mov
inc
subl
cmp
cs
call
mov
and
in
mov
cmc
stc
mov
xor
xchg
loop
jno
mov
mov
sarb
int3
data16
and
dec
xor
out
sbb
mov
adc
into
cld
mov
out
sub
pop
sub
sub
fsts
adc
pop
cmp
ret
jecxz
push
adc
mov
ds
imul
lret
rclb
stos
bound
sub
adc
xchg
icebp
out
mov
xor
cli
jnp
xor
aas
mov
movsl
or
dec
scas
mov
cmpsl
sub
leave
repz
shrb
sub
mov
mov
pop
dec
js
push
lret
adc
int3
scas
das
test
loopne
imul
test
imul
xchg
or
or
lahf
add
push
xor
adc
and
jae
fs
mov
xchg
and
xor
xchg
mov
lods
pop
imul
mov
add
dec
pop
pop
adc
in
inc
dec
add
es
push
jo
ror
rclb
mov
jecxz
lods
and
and
mov
pop
push
xchg
xchg
mov
sub
roll
sbb
scas
pop
lea
aaa
dec
and
mov
and
add
mov
or
pop
out
cmp
adc
xor
xorb
setg
sbb
or
hlt
mov
jbe
das
push
sbb
and
xor
jle
mov
int3
mov
push
cmpsl
inc
bound
and
sahf
adc
imul
call
or
es
sahf
and
jecxz
jl
mov
cmp
dec
in
ret
add
mov
xchg
pusha
rol
in
dec
lcall
insb
xchg
jp
dec
cmpsb
mov
in
mov
in
sub
leave
rcl
mov
push
dec
test
es
sbb
xchg
jmp
dec
pop
mov
in
in
dec
jo
dec
add
dec
pop
dec
xor
hlt
xchg
pop
andl
mov
sahf
cmc
dec
pop
scas
jg
enter
testb
arpl
push
in
sub
cmpsl
das
dec
in
sub
add
dec
jno
xor
inc
inc
adc
push
push
jmp
cmp
outsl
sbb
jecxz
jp
aas
dec
xchg
fwait
stos
xchg
mov
push
cmp
sub
in
insb
add
add
mov
sub
lods
or
mov
pop
inc
rcll
dec
sti
data16
stos
jae
lea
sbb
mov
in
lret
ficompl
inc
shll
ret
mov
gs
pushf
jecxz
mov
xchg
and
xor
lcall
arpl
xchg
jo
test
xor
mov
jns
iret
push
cmp
mov
adc
sub
movsl
add
and
cld
sarb
sbb
jg
dec
jle
sarb
and
sub
mov
std
inc
dec
sbb
push
pop
call
xor
xor
sub
push
out
mov
xchg
push
aaa
in
adc
jmp
stos
pushf
xchg
ss
jmp
in
fwait
mov
inc
loope
push
lods
cli
xchg
mov
loopne
cmpb
jp
pop
mov
mov
or
sub
je
cmp
and
jecxz
pop
push
mov
fldt
cmc
fwait
cwtl
push
push
cmp
adc
stos
seta
add
call
sbb
or
pop
imul
test
imul
push
dec
push
pop
loope
leave
pop
mov
cmp
mov
frstor
xor
mov
xchg
clc
or
lahf
pop
lret
push
push
sbb
cld
xorb
mov
and
cmc
je
test
pop
and
fsts
dec
adc
xchg
rclb
xchg
xlat
loop
pop
icebp
out
lret
xlat
fsts
jnp
adc
cmpsl
sub
imul
push
xchg
aas
roll
and
sbb
sub
mov
cltd
or
mov
cltd
jl
sub
jo
sbbl
data16
or
aam
lock
popa
iret
jo
nop
push
movsl
movsb
test
sbb
xchg
ds
sub
mov
or
mov
inc
stos
bnd
fwait
repnz
jbe
push
sub
fisubl
push
ret
js
mov
aas
test
fs
dec
sbb
out
out
in
or
pushf
jae
lahf
mov
inc
ljmp
call
mov
frstor
and
mov
dec
jp
mov
arpl
into
lock
pop
stos
xor
pushf
popa
mov
and
repnz
mov
fisubl
add
cltd
sub
out
call
xchg
add
les
lret
aas
out
mov
jb
xchg
mov
inc
imul
sbb
loope
and
subb
dec
ljmp
test
jp
add
out
leave
addr16
pop
mov
fidivl
mov
inc
or
xchg
jg
add
addb
gs
clc
and
adc
popf
inc
cmovg
mov
sub
stc
adc
mov
daa
popf
les
clc
adc
pop
mov
dec
shlb
bound
push
xor
inc
xor
push
xor
fwait
and
sbb
lods
xchg
push
xchg
aam
repz
leave
les
arpl
xor
add
aam
sarb
mov
mov
out
inc
rorb
popa
push
fmuls
ds
mov
fnstsw
cmp
ret
cltd
sub
mov
jmp
cmc
and
jle
push
jecxz
std
gs
add
repnz
addl
int3
sub
shll
fcomps
and
dec
xchg
test
sarb
mov
cmp
mov
call
or
adcl
xchg
sbb
adc
dec
push
push
aad
adc
pop
iret
mov
xor
ret
das
clc
fs
aam
add
sub
push
add
les
loope
lods
popf
mov
jmp
xor
lock
jbe
scas
inc
sbb
xchg
enter
mov
out
and
and
and
xor
xor
iret
int
sub
mov
std
mov
add
push
adc
mov
sbb
xorb
jnp
mov
inc
xlat
decl
clc
cli
jo
or
push
mov
loope
add
pop
dec
lods
jg
sub
clc
mov
fsubs
push
cs
pop
inc
fcomip
mov
es
dec
int3
adcb
xchg
jmp
popf
imul
mov
dec
push
push
mov
cwtl
and
adc
test
add
lcall
pop
cwtl
dec
movsb
lods
rcll
in
add
mov
ja
add
adc
mov
xor
in
add
gs
push
lahf
pop
sub
das
add
ret
add
pop
lcall
xchg
ds
dec
sbb
dec
subl
es
pushf
stos
testb
aas
cltd
mov
push
jle
jp
xor
push
xorb
bound
xor
mov
ret
mov
lret
pop
xlat
cmpsb
push
lods
cld
imul
xchg
mov
sbb
mov
loopne
outsb
outsl
stos
jge
into
mov
push
shlb
sub
or
call
cld
leave
ds
mov
sarb
add
addr16
mov
dec
pop
cli
inc
sti
aam
aaa
out
xor
outsl
rolb
jl
out
sarl
xor
mov
adc
outsl
jb
lahf
mov
dec
adcb
loope
adc
add
cmp
push
xor
fidivrl
out
cmp
fstpl
imul
mov
cltd
and
jae
fst
jbe
popf
fs
or
jne
shrl
jae
ret
lret
adc
iret
jne
jl
mov
cld
leave
push
sbb
out
fcomi
mov
lcall
into
inc
inc
icebp
mov
stos
cmp
in
dec
aam
pusha
jl
call
push
insb
push
xor
and
cmp
sub
popa
hlt
gs
inc
test
test
imul
xchg
inc
mov
shrb
dec
mov
cwtl
jno
mov
bound
sub
inc
dec
out
mov
push
adc
fwait
popa
enter
imul
flds
add
test
xchg
das
jmp
xchg
cwtl
insl
arpl
push
xchg
fmull
sahf
mov
add
mov
outsl
movsl
mov
lods
mov
adc
ret
rol
aad
data16
and
xor
idivl
mov
or
loope
cs
in
mov
lds
cmp
xchg
aam
icebp
mov
inc
add
inc
negl
lds
rcl
je
jns
sbb
je
addr16
sbb
lcall
inc
mov
jge
insb
daa
shrl
cmp
adc
sbb
push
xchg
rcr
inc
dec
in
dec
mov
sub
jp
and
pop
sarl
into
scas
lret
pushf
stos
pusha
adcb
mov
aam
mov
or
popa
cltd
mov
je
sub
push
pop
dec
dec
je
mov
outsb
arpl
push
mov
jb
cmpsb
pop
cs
in
push
loope
aas
mov
or
adc
popl
leave
lds
cltd
jmp
test
les
mov
scas
mov
inc
or
imul
xor
pop
int
inc
xchg
popf
js
xchg
in
mov
sbb
scas
fimuls
dec
mov
nop
add
rcrb
sbb
jp
mov
fnstcw
pop
clc
mov
xchg
mov
fsubrl
mov
dec
jle
icebp
and
pop
int
in
and
push
pop
push
cs
addl
mov
cs
xchg
or
ljmp
mov
scas
mov
out
mov
dec
jle
mov
aad
push
pop
dec
jbe
jp
dec
pop
sbb
add
adc
out
nop
adc
arpl
cltd
xchg
rorl
repz
jecxz
adc
cmp
dec
ja
dec
jmp
stc
inc
cwtl
xchg
push
xor
jns
sub
mov
inc
stos
pop
test
inc
test
mov
adc
in
cmp
add
rcrb
xor
xchg
dec
or
mov
popa
xor
pop
sub
into
ds
push
hlt
js
xchg
rcrl
test
popf
scas
std
add
shrb
adc
jbe
pop
and
sahf
fimuls
aaa
push
cmp
daa
fnstsw
fidivl
xchg
sar
jecxz
or
jg
std
dec
sub
mov
stc
arpl
cmp
mov
dec
les
clc
sbb
jb
sbb
inc
js
scas
pop
mov
imul
inc
call
cltd
call
add
mov
fiaddl
jmp
test
repz
cld
daa
dec
add
das
fwait
and
and
fidivl
pop
xchg
scas
pusha
xchg
outsl
mov
cs
jno
aas
in
sbb
sbb
icebp
cmpsb
and
sbb
sub
sbb
push
mov
aas
xor
cmp
or
pushl
dec
decb
iret
leave
orl
mov
repnz
fsubrs
push
mov
jnp
iret
std
jle
inc
mov
mov
jno
mov
je
push
cmc
in
je
jnp
or
sbbl
mov
or
pop
mov
repz
mov
in
mov
adc
push
fistps
xor
repnz
push
push
imul
push
movsl
fildll
fmull
mov
and
xchg
xchg
xchg
xor
ja
add
ja
sbb
push
in
fiaddl
loop
xchg
test
xor
pop
ds
pop
jmp
nop
xchg
mov
negb
dec
mov
mov
es
adc
lret
movsl
insb
cmp
in
les
push
test
movl
and
andl
inc
sbb
xchg
add
or
mov
inc
sbb
or
ds
dec
out
mov
jbe
scas
aaa
mov
jmp
ret
testl
mov
mov
dec
jne
adcl
or
fidivl
sub
inc
mov
dec
stc
and
push
shr
or
pusha
arpl
test
mov
and
clc
arpl
lcall
xchg
mov
lods
mov
xchg
lods
inc
mov
add
sub
sub
lahf
test
add
iret
aad
and
mov
xchg
sub
pushf
push
mov
and
dec
in
add
push
neg
xchg
cs
insb
inc
int3
cmp
les
xchg
ror
dec
mov
in
fidivrs
sub
ss
dec
pop
jge
aaa
dec
aad
sarl
xchg
sbb
jno
rolb
orl
mov
sub
or
push
pop
sub
mov
movsb
mov
xor
mov
push
mov
out
add
or
sub
mov
mov
int
int3
push
or
xlat
sub
mov
call
push
test
or
mov
push
imull
jbe
mov
fs
div
inc
xchg
jb
imul
adc
mov
es
aad
sti
jb
gs
push
cmpsb
xor
mov
mov
imul
not
insb
icebp
add
adc
movl
data16
js
lods
xchg
mov
push
push
loop
xlat
xor
les
mov
je
icebp
jmp
fidivl
push
xchg
mov
mov
or
or
and
and
xchg
lcall
test
mov
pop
jl
stos
arpl
outsl
xchg
js
or
imul
push
cmpsl
cmp
aad
adc
pushf
sub
mov
add
add
sbb
xor
stos
aaa
shrb
jle
adc
cmp
je
sub
jge
push
sub
dec
mov
push
inc
out
cli
jb
mov
pop
in
push
and
pop
cmp
inc
mov
jp
add
outsl
in
or
shrl
or
push
xchg
pop
xor
sub
and
push
mov
daa
sub
push
popa
pop
add
dec
adc
cmpl
je
and
outsb
or
jg
jo
aam
jmp
and
xchg
lock
push
or
int
xor
add
aam
jle
outsl
xorl
and
sub
stos
decl
sbb
sbb
imull
jae
inc
pop
call
pusha
icebp
mov
out
mul
add
mov
adc
scas
andb
dec
mov
addl
insl
std
or
mov
push
mov
mov
inc
push
shlb
cmc
xlat
dec
mov
adcb
fbld
std
pop
jl
lea
out
sub
add
push
xchg
stc
mov
lea
subl
cmpsl
pop
loopne
mov
in
out
jbe
rcr
push
mov
scas
stc
iret
xorl
dec
jecxz
pop
ds
gs
lock
xor
and
hlt
inc
fldenv
movsl
pusha
jns
or
popa
xchg
or
inc
push
aas
dec
lahf
in
gs
nop
pop
decb
bound
cmpl
mov
mov
in
scas
push
xchg
xchg
mov
push
fidivrs
mov
cli
sbb
imul
bound
inc
lret
loop
jae
adc
mov
pop
dec
pop
pop
push
in
das
or
or
push
add
add
add
jne
dec
pop
and
pop
in
or
das
std
clc
ds
mov
cmc
lret
push
inc
xchg
push
adc
call
push
or
out
add
mov
testl
mov
mov
inc
js
out
mov
dec
ret
stc
inc
daa
rcr
push
push
lahf
xor
aaa
imull
jb
lock
pop
xor
push
xchg
lea
jb
cwtl
push
movsl
jecxz
repz
repnz
cmp
test
mov
jge
int
xchg
shll
or
fsubr
fs
arpl
lret
jne
sbb
outsb
pop
nop
cld
rclb
mov
js
lret
push
sbbb
out
out
outsl
bnd
and
in
movsb
push
mov
jnp
push
lods
add
mov
fcmovnbe
fisubs
stos
fcmovnu
xor
aad
fstp
inc
cld
cld
loop
popf
popl
inc
or
out
testb
insb
cmpsb
xchg
jmp
push
ret
pop
imulb
cmp
adc
pop
mov
mov
add
lea
mov
pushf
and
push
inc
push
frstor
mov
xchg
fisubrs
inc
gs
mov
dec
repz
push
in
rorl
xchg
out
jg
jae
in
movsl
sub
inc
pop
mov
rclb
aas
cli
push
subb
mov
xlat
inc
iret
adc
jg
jge
nop
or
shl
sub
cmp
dec
mov
cmpsl
out
lds
jp
sbb
inc
and
je
test
cmp
inc
enter
rorb
mov
and
daa
cmp
cwtl
cltd
sbb
in
pop
mov
xchg
mov
pop
jno
cmp
icebp
jmp
aam
xchg
orb
in
sub
pop
jns
push
das
in
roll
int3
fs
call
jg
out
cmc
mov
add
xchg
leave
stos
add
add
xchg
aas
mov
sarl
inc
pop
std
jl
pop
add
jp
mov
arpl
adc
cmp
sysenter
sbb
mov
mov
mov
ss
or
adcl
mov
mov
cmp
sub
push
jge
test
imul
add
xchg
lods
add
into
inc
mov
pop
decb
test
pop
mov
add
jns
sbb
aad
hlt
sub
mov
dec
pop
test
es
in
std
sub
leave
mov
cmp
arpl
cltd
je
or
add
xchg
lock
outsb
mov
rorl
insb
push
cmp
clc
nop
out
fnstcw
dec
mov
cmp
iret
mov
sbb
dec
hlt
mov
nop
fnstenv
mov
or
ret
sub
icebp
mov
loope
push
push
fcoml
sbb
fs
xor
fisubrs
pop
mov
lret
inc
imul
sub
inc
adc
movsl
cmpl
xchg
add
test
sub
push
push
outsb
push
dec
mov
mov
loop
jl
adc
fcom
sarb
in
cmp
dec
xchg
mov
ljmp
xor
push
addr16
in
xchg
xchg
loop
out
add
aam
cmp
jle
rcr
into
sti
jae
inc
adc
roll
in
mov
xor
insb
out
pushf
sbb
xor
out
push
or
enter
imul
jns
test
leave
sub
mov
xchg
mov
das
aam
subl
inc
mov
cmp
inc
das
xchg
je
mov
inc
adc
mov
jno
out
nop
adc
mov
mov
mov
sub
pop
push
pop
cmpsb
sub
ss
icebp
imulb
sbbl
loopne
xchg
push
mov
add
push
out
cmp
repz
cwtl
mov
pop
fidivs
cld
sub
lods
movsl
ja
mov
push
sub
xor
dec
xchg
sbb
orb
adc
xor
or
pop
out
xchg
ficompl
arpl
push
dec
inc
dec
cmp
inc
sahf
adc
sbbl
rcrl
fcompl
fisubl
add
sbb
push
sub
cmp
or
xlat
pusha
lahf
lods
sysret
dec
or
push
in
cmp
adc
cmp
insb
push
and
movsb
ss
mov
ret
xchg
add
xchg
xchg
rorl
mov
sub
inc
addl
adc
xchg
cs
repz
test
push
aas
and
cmp
fiaddl
push
cwtl
in
rcrb
sbb
call
incb
jne
xchg
leave
and
repnz
mov
xchg
sub
ja
cli
mov
fistps
std
or
jns
mov
sbb
mov
xorl
icebp
mov
mov
fwait
sbb
and
add
ret
fisubl
xor
insl
mov
push
jecxz
and
or
mov
push
dec
das
pop
lods
nop
out
fsubs
shrl
push
dec
movsl
lcall
popl
pop
imul
cmp
sarl
mov
adc
mov
pop
gs
sbb
insl
lret
cli
data16
xchg
nop
rorb
cmp
ss
mov
mov
push
mov
pop
gs
fstpt
and
mov
pop
and
sar
mov
xchg
dec
xchg
clc
hlt
daa
lret
dec
jp
test
into
lcall
out
clc
xor
mov
mov
sbb
jbe
and
mov
cli
in
jle
mov
mov
das
int
jb
adc
or
jbe
out
aas
xor
sbb
popf
adc
mov
es
xchg
inc
dec
jp
int
push
data16
add
xor
popa
test
dec
in
ljmp
jp
xchg
jl
xor
sub
sbb
adc
lods
cld
fisubrl
and
inc
lds
rcr
mov
or
inc
pop
xor
hlt
dec
enter
inc
pop
inc
cmp
sub
inc
inc
repz
loopne
xchg
xchg
add
loop
cltd
dec
push
push
fisubs
cmp
or
or
test
lds
outsb
xlat
dec
shll
imul
enter
imul
cltd
subb
addb
and
xchg
ficoml
push
je
xor
adc
fwait
enter
jecxz
cmp
fs
adc
pusha
pop
push
jnp
jae
int3
adc
or
adc
pop
xor
ds
fs
fisubrs
out
cld
adc
inc
lock
sti
dec
pop
sub
lods
das
jmp
jbe
in
arpl
cs
pop
pop
bound
ds
adc
mov
test
inc
sbb
jmp
outsb
jge
sbb
mov
arpl
subb
sbb
mov
mov
mov
ja
jmp
adc
cmp
stc
add
loope
pop
into
dec
bound
jbe
out
cmc
nop
push
inc
xchg
xchg
jb
and
das
pop
enter
mov
outsb
fcoml
xor
sbb
imul
sar
scas
push
push
pmaxsw
fadds
push
jp
testb
and
outsl
jae
push
push
stos
sbb
jnp
in
ret
decb
clc
add
inc
add
mov
pop
adc
sbb
insb
aas
push
cltd
into
clc
mov
pop
cmpsb
pop
js
fbld
cwtl
insl
push
and
pusha
movsl
cmp
and
push
dec
mov
push
outsb
daa
jecxz
and
pop
ds
xor
mov
mov
sti
mov
pushf
xchg
std
out
scas
js
pop
sbb
stos
fldcw
push
lods
pop
pushf
ret
shrb
gs
mov
cs
pushf
xor
jb
icebp
pop
ja
push
orb
mov
lcall
jmp
and
push
nop
adc
scas
or
das
dec
adc
imul
pop
das
pop
pop
hlt
aaa
mov
pop
cmpsb
mov
pop
fistpl
push
imul
cld
mov
shll
push
add
add
jo
adc
test
scas
sub
cmp
fstps
sub
xchg
mov
xchg
in
sub
outsl
scas
test
and
pushf
push
fcoms
add
or
add
push
cvttps2pi
fcmovnb
stos
lret
xor
rorb
mov
jmp
mov
or
cmp
jl
and
push
push
fnstsw
enter
cmp
or
nop
testb
in
cmp
in
mov
cwtl
dec
mov
cmp
xor
pop
mov
sbbl
mov
jnp
std
and
and
stos
sbb
pop
cld
mov
cmp
pop
inc
andl
mov
mov
lods
dec
and
addr16
out
or
inc
mov
jp
imul
add
mov
xchg
inc
std
or
jno
cmp
test
sub
adc
and
xlat
fdivs
es
inc
inc
jae
lcall
ret
push
xor
iret
ja
and
xchg
sarl
push
addr16
push
fiadds
data16
adc
push
int
lds
jg
push
icebp
push
bound
and
test
inc
fisubrl
movsl
ljmp
mov
xchg
aas
mov
pop
lcall
lea
mov
cld
mov
xor
repz
xchg
popf
mov
cmp
jmp
mov
cmp
leave
cmp
out
sub
imul
sbb
je
jae
adc
stc
add
and
and
es
mov
push
mov
mov
sub
xchg
stos
test
inc
cltd
cmpsb
mov
adc
xor
mov
jne
test
call
sbb
sbb
call
xchg
pop
cmp
sti
out
int
pusha
je
ja
cld
adc
cltd
movb
lret
or
fnstcw
sbb
mov
shr
lea
xor
repnz
call
scas
fs
adc
push
popl
arpl
add
cmp
rcrb
mov
repz
dec
sub
loopne
imul
sbb
fdivrl
cmp
arpl
or
sub
jne
mov
sub
mov
or
mov
ja
mov
sub
or
xor
pusha
xchg
test
cltd
inc
enter
pop
gs
cwtl
xor
push
dec
sbb
add
mov
mov
jl
jns
leave
dec
stos
mov
cld
js
in
int
and
or
dec
sbb
jo
xor
mov
sarb
neg
xor
xlat
aas
push
inc
or
in
adc
cli
adc
movsb
cltd
cmp
mov
repnz
dec
lcall
sub
jecxz
xor
pop
shr
addr16
mov
push
popf
inc
or
test
hlt
scas
insb
outsl
xchg
lcall
mov
mov
jo
jmp
cmp
in
cmp
imul
ja
out
out
movsl
jne
and
xor
pop
adc
loope
mov
add
and
daa
pop
fs
xor
adcb
test
mov
mov
shlb
movsl
insb
clc
pop
sub
arpl
and
dec
add
push
and
and
test
xchg
pop
es
jne
sub
insl
cs
mov
mov
sub
push
jp
xor
pop
inc
xor
push
sub
loop,pn
sbb
sbb
fsubrs
push
daa
stc
xor
or
inc
rclb
pop
iretw
fidivs
shrb
pop
jg
inc
xor
add
call
addr16
dec
jle
push
inc
pop
or
out
xlat
movaps
push
int3
insl
adc
inc
pop
aad
sbb
sub
insb
movsl
jae
push
pop
sti
push
popf
jmp
push
pop
outsb
sbb
or
dec
or
int
hlt
inc
push
lahf
cmp
and
aam
pop
mov
lahf
dec
mov
ja
inc
cmp
jns
call
push
sub
adc
jl
dec
pop
roll
xor
mov
mov
push
lods
out
notl
and
inc
push
lods
sbb
in
adc
jno
jp
and
dec
push
pop
add
and
inc
add
in
xor
cmc
arpl
cmp
inc
mov
aaa
sarl
mov
push
or
loop
fsubl
dec
mov
stos
mov
in
cmpsb
add
jp
decl
dec
mov
testl
jbe
jl
xor
jl
js
nop
mov
inc
xchg
cmp
decb
xchg
jnp
lods
sbb
ficomps
sub
push
mov
jbe
in
in
mov
enter
jnp
aas
mov
and
je
xchg
fdivl
bound
in
inc
arpl
push
ret
sbb
mov
out
or
cmp
mov
pop
pop
pop
out
jmp
jg
xchg
lret
movsb
int3
inc
adc
cmc
pusha
stos
xor
sbb
jecxz
ss
jl
mov
out
mov
xchg
cmp
arpl
lods
mov
rcrb
adc
dec
sbb
gs
in
dec
or
shlb
shrd
shl
dec
push
cld
xchg
out
fwait
notl
lods
xchg
mov
in
nop
cwtl
xor
sub
outsl
test
lods
jl
pop
sub
mull
cmp
adc
jmp
aam
and
ret
popf
jbe
jl
mov
sbb
push
mov
jp
daa
xlat
repz
add
lods
mov
loop,pn
int
push
push
xor
push
dec
das
cmpsb
cmp
mov
cmp
cmpsl
mov
xchg
test
testb
insb
call
and
jecxz
cmp
ror
or
jns
push
int3
fcmovnb
jno
out
lods
ficomps
hlt
xchg
rcrb
addr16
push
pop
add
faddl
les
sbb
add
push
lods
aaa
je
lret
repz
and
jle
rorb
sahf
mov
cwtl
xor
inc
stc
jge
inc
insb
rsm
aam
in
ret
out
gs
cmpsb
adc
fisttps
and
rcl
jecxz
shl
sub
inc
mov
data16
dec
dec
mov
cli
es
setae
popa
repnz
pop
stc
mov
mov
test
data16
pop
push
leave
fsub
pop
push
je
movsb
xor
mov
add
or
arpl
iret
jge
imul
stos
add
shlb
xor
jl
mov
adc
sub
mov
inc
push
leave
adc
fcompl
pop
push
cmp
xchg
test
jp
mov
inc
cltd
hlt
jno
jg
sub
pop
push
xor
mov
stc
fldenv
fisubrl
test
and
jae
mov
inc
sahf
je
cltd
jno
sub
arpl
push
add
sbb
sbb
and
mov
cwtl
ret
mov
subl
in
aad
adc
mov
xchg
imul
pop
mov
sbb
push
push
cwtl
cmp
stos
add
jns
xor
pusha
xor
ret
xor
mov
mov
cwtl
cwtl
jp
sub
adc
dec
inc
mov
sbb
rclb
roll
test
pop
add
xchg
dec
or
push
addb
dec
cs
insb
fadd
jbe
push
test
sahf
sahf
testb
inc
std
or
jg
rcll
sub
cmpl
clc
mov
add
pop
xlat
sub
and
aaa
iret
icebp
fistpl
dec
push
ja
add
jmp
mov
push
or
stos
jecxz
scas
roll
cltd
int
adc
cmpsl
cmp
mov
mov
mov
repnz
mov
jno
rcl
xor
cmpsb
and
aaa
mov
xor
lea
call
xor
mov
pop
push
mov
mov
jae
jb
cli
dec
into
dec
adc
inc
sbb
repz
rorb
pop
or
out
aas
push
cmp
fildll
pop
imul
mov
les
out
shl
xor
mov
in
out
mov
push
push
push
les
xchg
lods
jb
movl
cmpsb
negl
nop
or
in
pop
dec
cmp
sarl
dec
stc
fcoms
jno
xchg
stos
outsb
pop
xchg
xor
gs
jnp
xlat
insl
mov
pop
lret
jg
mov
in
pop
popa
lcall
stos
dec
es
nop
inc
out
not
outsb
jb
scas
outsb
rorb
inc
jle
add
stos
sub
mov
xor
inc
sub
adc
sbb
shll
imul
out
je
pop
sbb
fisubl
xor
dec
or
sbb
xchg
xchg
jl,pt
and
sbbb
mov
add
mov
push
in
incl
arpl
dec
xchg
mov
cmp
xchg
add
cwtl
add
in
clc
lea
push
andb
ret
pop
push
and
out
xchg
ja
and
mov
cmp
clc
mov
xchg
xchg
cmpl
add
mov
xorl
inc
cmp
in
xor
push
arpl
sbb
push
cwtl
push
sarl
cmp
popf
pushf
add
popa
testl
inc
je
imull
test
icebp
mov
and
mov
stc
xchg
push
push
jg
cwtl
xlat
push
es
xchg
shll
cmp
sti
sub
data16
out
ja
dec
jecxz
sub
inc
cmpsl
lret
loopne
and
movsl
mov
sbb
mov
rcrl
imul
lahf
sub
xsha1
cmpsb
int
out
repz
les
fcmovnb
pop
mull
sbb
sbb
roll
jns
loope
mov
push
jmp
loop
xor
cmp
mov
fmull
das
stos
mov
add
leave
fld
jle
mov
divl
mov
jnp
cmpl
je
mov
or
push
inc
imul
adc
es
jne
xor
popf
cs
fistps
sti
push
int3
ret
jae
and
iret
push
lds
lahf
jo
repnz
jns
sbb
fcomps
not
jnp
scas
mov
push
fldenv
imul
pop
push
jno
sbb
shrb
adc
mov
push
mov
adc
arpl
push
xchg
cli
xor
jmp
adc
push
xchg
mov
jno
fstps
mov
mov
xor
pop
or
aaa
and
mov
jg
out
mov
xchg
imul
leave
mov
sbb
xor
pop
sbb
stos
nop
js
aam
rolb
fwait
dec
loope
jbe,pn
mov
or
dec
push
jp
sbb
mov
faddl
js
dec
repz
mov
xchg
cli
inc
xor
push
iret
pop
fs
ror
xchg
rorb
xor
insl
jnp
lods
cs
dec
sub
push
aas
sahf
out
or
das
imulb
outsb
mov
xchg
leave
test
sti
fadds
outsl
mov
dec
fimull
xor
outsl
fwait
lods
addb
jg
add
xchg
imul
push
dec
sbb
mov
into
aas
stos
and
pop
testl
lea
je
fstpt
adc
loopne
push
cmp
je
xchg
sbb
xor
inc
push
divb
push
aam
jne
aas
shrb
cltd
mov
jle
into
jg
or
add
ds
fistpll
das
lcall
fcompl
fdivrs
inc
pop
jl
int
jae
data16
subb
test
imul
icebp
cmp
pop
shrb
and
test
add
out
mov
sub
mov
sbb
push
dec
xor
sub
loope
loopne
arpl
je
adc
or
push
in
fwait
mov
sahf
pop
inc
daa
daa
mov
dec
mov
mov
xchg
js
sub
mov
sub
and
fistpll
popa
xor
iret
test
or
add
dec
and
aaa
sbb
add
dec
mov
xchg
xchg
jl
mov
sti
mov
jecxz
enter
push
divl
ret
adc
leave
pushf
xchg
adc
dec
shlb
sbb
pop
daa
enter
jb
jae
pop
pop
test
aam
scas
and
mov
jo
or
and
sub
into
push
stc
mov
cmpb
pop
pop
dec
lcall
mov
mov
stos
jle
dec
mov
jge
les
int3
mov
call
mov
test
sub
int3
lea
fmuls
scas
ds
inc
or
out
sub
insb
rcl
xchg
cmp
add
repz
repnz
stos
or
inc
call
cmpsb
aad
mov
mov
fistpll
mov
fisubrs
inc
bound
cmpsl
lds
insb
or
rcr
xor
outsl
push
push
rorl
test
leave
shll
sti
pop
mov
test
xchg
inc
or
sub
adc
push
out
scas
inc
pusha
roll
aad
fs
int
out
mov
cmp
inc
frstor
or
and
leave
xor
mov
sbb
sarb
out
es
shl
pusha
or
dec
popf
popa
xchg
push
fs
pop
add
cltd
pop
lock
dec
adc
xor
out
mov
jne
xor
and
dec
and
add
roll
dec
repz
mov
ds
jo
into
xchg
lret
imul
jl
call
bound
mov
iret
dec
sub
pop
arpl
or
dec
ljmp
or
not
adc
test
ljmp
add
ret
cmp
jmp
sub
movsb
sbb
das
push
xor
push
pop
outsb
jbe
or
mov
mov
leave
jl
hlt
inc
ret
mov
insl
shrb
xchg
or
mov
adc
pop
sbb
pop
add
jg
mov
mov
shlb
aad
filds
cmp
or
int
cwtl
leave
movsb
clc
outsl
mov
jecxz
jp
loope
xor
or
out
imul
jecxz
loopne
test
stc
int
xor
addr16
xor
idivb
cmp
adc
aam
cld
xor
jp
subb
movsb
jns
fwait
adc
stc
stos
cmp
lahf
test
lret
xchg
gs
repnz
or
comiss
sarl
psubusw
add
mov
push
push
lods
inc
pop
xchg
mov
mov
arpl
cmp
and
daa
das
arpl
cli
push
or
jnp
xor
push
movsb
std
insb
add
cwtl
mov
cld
cmpsb
xchg
ficoml
pop
adc
int
aas
popf
pop
ljmp
lret
xchg
pop
inc
pop
add
popf
sbb
fucom
pusha
fidivrs
call
stos
lahf
repz
rol
loop
and
dec
arpl
leave
test
dec
mov
and
inc
pop
jle
sbb
adc
movsl
jo
jbe
sbb
imul
push
push
dec
scas
fidivrl
dec
adc
enter
adc
jnp
cltd
add
push
push
mov
lock
lcall
jo
roll
popw
gs
push
dec
xchg
mov
daa
jl
cltd
dec
clc
mov
xchg
adc
lcall
mov
jmp
mov
jbe
and
fldenv
push
mov
les
push
mov
adc
lds
enter
pop
mov
out
sbb
add
cmp
aas
mov
sub
repz
add
sub
inc
mov
sarl
cmpsl
ljmp
stos
adc
inc
iret
movsb
sub
fdivl
notb
pop
push
lret
lock
push
fiadds
das
adc
mov
cltd
imul
xchg
clc
xchg
add
xchg
icebp
push
push
nop
mov
pop
push
sbbl
cli
sbb
in
mov
loope
cli
aas
mov
xor
stos
leave
pop
and
aad
or
dec
in
aad
push
jl
cmpsb
pushf
jne
pop
fstl
jo
push
and
das
aam
lods
shld
jg
or
mov
adc
jnp
jecxz
sbb
stos
fucomp
sub
add
and
stc
add
loopnew
push
cmpsl
cwtl
push
pop
into
je
sti
mov
push
iret
in
sbb
jl
movsl
push
jnp
jbe
test
lods
mov
dec
jnp
mov
test
aad
and
inc
push
roll
ret
ret
lods
test
xchg
xchg
push
jbe
push
mov
mov
cltd
adcb
cmp
lret
fwait
imul
jecxz
lahf
mov
mov
push
pop
mov
adc
sub
cmpsb
and
mov
xor
repnz
push
out
mov
adc
mov
cwtl
or
jae
push
mov
mov
les
dec
mov
sbb
and
popa
in
aas
sti
sub
jnp
mov
mov
cmp
adc
jp
or
and
aas
out
and
jecxz
or
push
sbb
or
dec
imul
or
push
xor
fmuls
lahf
add
rcrb
stc
aam
fbstp
sarb
loope
std
lods
jp
test
mov
sub
aas
pop
stos
xchg
insb
inc
popf
je
loop
or
pop
pop
inc
pop
cwtl
cmp
dec
mov
insl
lds
add
inc
adc
xchg
xor
pop
mov
jo
into
jno
lahf
xor
jnp
xor
jae
mov
add
adc
jmp
fisubl
cmp
jb
pusha
xchg
jae
mov
loopne
or
mov
mov
mov
flds
mov
stos
daa
dec
or
push
test
sub
push
xchg
inc
sti
jno
ljmp
sub
add
inc
jg
xchg
ret
lret
je
and
fcmovnb
xchg
xchg
out
sub
fldenv
inc
sbb
push
push
xor
mov
or
xchg
mov
cmp
mov
outsb
ss
adc
ds
xorl
xor
imul
xchg
lds
mov
test
out
test
cmp
fldl
in
das
push
cmp
mov
iret
in
cli
inc
push
subl
mov
mov
sbb
cltd
gs
mov
leave
dec
or
xchg
decb
cltd
and
pop
mov
sub
jae
loope
insb
dec
outsb
inc
repnz
movsl
arpl
mov
mov
inc
out
lret
insl
inc
sub
leave
mov
and
leave
lds
fiaddl
mov
loopne
lret
jl
rep
mov
fmuls
dec
pop
clc
lods
jb
lcall
jnp
out
and
movsl
jp
cltd
pop
inc
bound
push
int3
pop
mov
push
and
xchg
jle
or
sub
pop
movsl
movsl
popf
aad
loopne
repz
mov
jbe
bound
xchg
out
jmp
push
out
insb
bound
add
or
rclb
insb
sub
ret
dec
and
loope
adc
fnstsw
or
stos
and
bnd
and
scas
fiadds
push
cmp
aam
jbe
pop
dec
loope
push
add
lahf
in
jecxz
ret
int3
cmp
inc
and
mov
add
jg
ret
add
mov
xor
pop
pop
repnz
or
push
and
addr16
inc
mov
push
push
mov
loope
lock
in
mov
push
mov
sbb
test
scas
adc
pop
je
xchg
mov
dec
sbb
add
adc
aad
imul
pop
adc
inc
sub
pushf
cmpsb
test
hlt
inc
sar
cld
fimull
dec
push
jl
fdiv
in
enter
and
in
lahf
adc
andl
push
adc
xchg
add
mov
pop
out
xchg
and
fwait
jno
shlb
sti
sbb
jmp
outsl
sub
lcall
pop
sbb
push
xchg
add
movsl
dec
out
mov
or
xchg
and
int
pop
xor
loope
dec
movsl
fs
jae
popf
out
shl
cmp
mov
inc
xchg
push
adc
cmc
lock
xchg
pop
push
mov
push
mov
jmp
add
sub
cltd
fnstcw
jl
or
mov
mov
xchg
mov
es
push
loopew
dec
mov
in
mov
mov
outsb
add
cld
stos
enter
cmp
iret
cld
cmp
adc
pop
int
dec
aad
and
cltd
mov
dec
and
das
rcll
ja
jns
aam
cs
sub
frstor
dec
push
dec
roll
leave
push
sub
xrstors
inc
mov
inc
shlb
mov
ds
or
cli
mov
dec
dec
sbb
jno
and
aad
add
stos
xor
jnp
movsb
outsb
mov
out
pop
jecxz
cmp
sbb
data16
scas
dec
adc
fs
pop
jmp
mov
mov
clc
xchg
scas
imul
fwait
xchg
jmp
jno
adc
repnz
mov
push
sbb
adc
pop
fst
mov
std
clc
pop
arpl
adc
shrl
inc
mov
mov
sbb
cwtl
pop
hlt
dec
adc
es
mov
shrl
aas
addb
roll
xchg
int
jbe
or
test
inc
mov
sub
repnz
test
lds
inc
insl
fildll
dec
cmc
jbe
push
sbb
jb
arpl
pusha
jnp
jo
or
in
icebp
jmp
add
das
cmc
mov
mov
xor
sbb
test
and
sbb
cmp
stos
subl
jl
and
or
mov
mov
sbb
cmp
bnd
out
lahf
adc
add
mov
shrb
xor
fbstp
and
sub
cmc
divb
addr16
xlat
int
stos
mov
or
adc
xor
adc
or
into
xchg
scas
mov
fsubrs
xchg
in
lds
jg
imul
push
loop
pop
push
pop
mov
scas
jae
push
sbb
and
je
in
loopne
adc
pop
pop
lods
faddl
popf
jg
mov
sahf
sub
xrelease
cs
nop
and
rolb
lock
imul
fistpll
pop
or
cmp
test
mov
mov
aas
sub
icebp
andl
pop
movsb
add
adc
aam
mov
fdivr
data16
out
pop
loop
mov
jae
test
loopne
cmp
pop
jmp
test
xor
jecxz
or
js
scas
mov
or
xchg
into
enter
nop
sbb
add
sahf
push
lret
mov
and
cmp
sbb
adcl
pop
mov
stos
in
loop
in
leave
push
sbb
add
shlb
ret
es
movsb
and
mov
pop
pop
shrl
ljmp
fimull
push
roll
and
inc
ret
ret
add
mov
ja
orb
movlhps
lods
jae
jecxz
pop
fcompl
test
push
into
repnz
jmp
ja
aad
mov
xchg
xor
in
jo
pusha
cmpsb
mov
out
sbb
fnstcw
or
int
jae
xorl
pop
insl
mov
inc
ja
adc
pop
and
pop
bound
subb
ds
gs
imul
sahf
inc
outsl
add
mov
mov
push
and
xor
es
mov
jo
sub
mov
daa
xchg
ret
negl
scas
inc
jle
lahf
inc
xchg
scas
fildl
xchg
inc
mov
pop
out
mov
bnd
outsb
push
stc
xchg
lds
sub
mov
lret
sub
rorl
xchg
or
gs
or
cmp
or
push
pop
test
mov
mov
push
push
push
sbb
aam
fnstsw
orl
aaa
pushw
jge
lret
push
jl
lret
js
jmp
sar
pop
lods
sahf
push
cld
xlat
push
jae
sbb
in
sub
mov
cmp
xchg
loopne
mov
pop
int3
cmp
jp
jle
add
fcmovnb
or
int
push
jle
pop
push
aam
stc
pushf
adc
aaa
scas
xchg
cmp
jae
sbb
fidivl
lock
addr16
in
sub
cmp
inc
mov
scas
enter
mov
lea
push
dec
icebp
xchg
and
notb
push
insb
pop
scas
test
cmp
js
or
cmpsl
ret
pcmpgtw
inc
dec
test
inc
adc
roll
in
mov
enter
cmpb
adc
ror
cmpsb
push
rcr
gs
dec
pop
sbb
jle
jle
aaa
xor
test
loope
inc
cli
mov
sbb
dec
adc
dec
sub
inc
jecxz
arpl
jns
in
call
xchg
pushf
jmp
or
xor
fidivl
xchg
xchg
dec
insl
mov
jmp
fucom
or
mov
sbbb
ds
inc
mov
mov
adc
repz
idivl
pop
sub
mov
popf
sti
jnp
dec
mov
pop
inc
in
btcl
inc
fwait
outsl
adc
insb
test
jo
mov
xor
jp
js
mov
pop
fs
push
icebp
loope
xchg
lret
push
popa
mov
xchg
or
or
sbb
stos
int3
rcrb
xchg
pop
dec
cmp
jae
xchg
lret
iret
es
enter
lods
adc
xor
test
lret
mov
mov
or
xchg
mov
leave
in
or
or
cmp
xor
out
sahf
jmp
imul
sahf
das
stos
insb
fiaddl
scas
test
xchg
jg
out
sub
cli
and
cmpsl
cmp
fidivl
jno
repnz
xadd
sbb
data16
xor
jne
ds
repnz
dec
pop
xor
data16
fiadds
push
outsb
iret
ja
mov
xor
fcmovnu
jle
push
fdivrs
faddl
or
jp
adc
sbb
lret
xor
fldcw
cmp
xor
adc
cmp
lahf
xchg
push
push
xchg
aam
cwtl
call
inc
mov
shl
jne
mov
xor
jle
enter
dec
mov
cltd
outsl
int
hlt
data16
notb
je
xor
sbb
in
ja
adc
adc
mov
push
cs
lods
jns
ss
pushf
pop
enter
divb
pop
inc
sbb
and
popf
mov
clc
movsb
aaa
mov
inc
je
mov
lock
or
mov
mov
loopne
pushf
add
or
xor
outsl
pop
sub
sar
jae
pop
xor
cmp
mov
xor
mov
lcall
push
add
xor
xor
ljmp
popa
inc
mov
mov
mov
test
sub
fstpl
inc
test
mov
jle
sbb
pop
push
shll
jecxz
mov
cli
adc
loopne
adc
je
lods
fimull
testb
cmc
rorb
dec
sbb
jae
aam
mov
in
cltd
inc
or
or
or
sub
jo
fistps
shll
inc
es
sub
push
or
fisubs
pop
mov
dec
aas
adc
sbb
xchg
dec
incb
jge
xchg
jns
or
lds
repz
pop
sahf
test
inc
adc
jns
xchg
loop
loope
mov
mov
pop
xchg
ror
jle
dec
adc
fidivl
int
xchg
loop
sarl
and
dec
pop
jle
push
jge
sbb
in
out
lahf
pop
shl
addr16
stc
aas
cmp
in
adc
mov
pop
lock
inc
cli
push
pop
dec
std
in
mov
xor
sti
lea
xchg
outsl
mov
cli
mov
sbb
and
push
mov
in
sti
popa
sub
xchg
push
popa
or
es
add
popa
imul
lods
jle
jle
jmp
inc
push
add
fsubl
sbbb
jbe
add
and
hlt
popf
pop
xchg
mov
ret
mov
dec
or
adc
sbb
clc
int3
dec
mov
cli
adc
mov
add
cltd
dec
inc
mov
loop
jg
push
push
in
call
xchg
pop
out
pop
shr
mov
and
and
mov
xorl
inc
ds
mov
fidivrl
es
shlb
fisubrs
pop
add
inc
aaa
pushf
addb
outsb
pop
in
rclb
repz
mov
sub
clc
xchg
add
add
out
xor
mov
iret
cmc
les
and
mov
jb
decb
cs
shll
or
inc
pop
xor
aad
cltd
sub
loop
jns
mov
pop
mov
adc
mov
or
mov
xchg
sub
iret
push
test
cli
out
test
xor
pop
and
stos
mov
jns
xor
pop
push
loope
ja
pop
push
mov
push
sahf
dec
cmp
xchg
pop
popa
stos
lcall
sbb
imul
inc
flds
imul
or
and
or
icebp
or
je
push
or
sbb
mov
push
xor
dec
mov
pop
aam
loopne
pop
jnp
mov
movsb
test
test
incl
out
push
push
cmp
xlat
pushf
xchg
repz
imul
shr
jp
add
push
imul
imul
pop
add
sbb
pop
inc
gs
adc
fdiv
das
mov
mov
idivl
xchg
incl
or
sbb
in
pop
mov
and
pop
mov
dec
mov
dec
and
lret
stc
cmp
jns
lea
cltd
mov
loope
xor
mov
dec
std
cmp
jmp
add
cmpsb
cmp
in
fistps
inc
ds
add
xlat
lds
sbb
mov
xchg
xchg
mov
jbe
mov
and
imul
push
mov
push
push
movsl
dec
mov
repnz
inc
inc
xchg
mov
lds
test
arpl
pop
sub
popa
pop
jno
adc
sbb
xchg
mov
insb
push
test
sti
cmp
imul
xchg
adc
jne
adc
pusha
xor
rclb
adc
cwtl
mov
mov
inc
out
add
jb
insb
dec
adc
pusha
mov
pusha
repnz
ss
lret
inc
jbe
cmp
in
fucomp
in
push
cmp
imulb
orb
jbe
out
cmpsl
cld
cmp
inc
sub
iret
push
dec
sbb
push
mov
sar
cmp
cmp
xchg
sbb
jnp
mov
mov
mov
cmpb
pop
addr16
rorl
test
fnstsw
lock
inc
imul
stos
dec
popa
jb
mov
cs
dec
and
dec
dec
mov
movsb
xchg
and
lods
xor
cmp
dec
sub
cltd
scas
adc
sub
jno
mov
mov
mov
pop
sbb
shr
ret
in
daa
imull
dec
clc
js
aas
outsl
mov
jno
loopne
and
push
data16
test
mov
jl
cli
cmp
cmp
add
cli
sub
enter
and
mov
fldenv
fadds
imul
test
in
jl
xorl
sbb
mov
sbb
adc
jle
add
lcall
mov
pop
lock
popa
fbld
push
cld
pop
pop
repz
andl
or
add
aas
push
pushf
outsb
inc
inc
lods
pop
mov
int3
aad
sbb
push
fwait
int3
pop
or
inc
subl
js
push
fidivs
cmp
pop
imul
cmc
int3
mov
push
jne
xor
inc
xor
xchg
aad
jnp
jae
xchg
or
fnstenv
aad
cmpsl
push
cmp
lret
sahf
sbb
loope
pop
jl
lods
and
sbbl
mov
jne
pop
xlat
ret
sahf
or
sub
imul
cmpsb
decl
xor
mov
add
cmp
sub
mov
mov
dec
lret
cwtl
fs
add
cmp
mov
mov
lods
fwait
xchg
bound
sbb
mov
test
xor
cmp
negl
pop
stos
clc
pop
sbb
add
xchg
mov
pushf
sbb
mov
ds
cmp
adc
cmp
mov
jmp
daa
pop
sbb
xor
inc
sub
or
cs
rorb
adc
push
movb
push
hlt
rep
lret
xor
mov
sbb
push
push
adc
aad
mov
stos
xor
pop
loopne
sub
cltd
pop
or
not
adc
gs
sahf
mov
pop
and
mov
je
mov
mov
inc
mov
or
addl
ret
mov
cmp
out
jg
jmp
ds
jge
bound
pop
cmc
inc
add
sbb
out
loope
add
iret
test
es
pusha
sub
sub
cld
nop
mov
adc
lock
sarb
mov
imul
xchg
mov
inc
ss
xchg
mov
pop
cmp
xlat
dec
aam
out
lret
clc
cld
xor
arpl
hlt
push
mov
rcl
push
test
cmp
mov
jecxz
jnp
xchg
in
out
les
jo
sahf
aam
push
cmpsl
das
nop
mov
ror
fwait
jge
roll
or
pop
outsl
push
jmp
or
and
cmc
or
or
std
out
mov
jno
lret
mov
inc
pop
cmc
shll
xchg
loop
push
pop
mov
cmp
inc
inc
xor
popf
stos
add
jl
sub
push
aad
call
mov
add
ja
jecxz
and
pop
icebp
cmp
cltd
inc
mov
in
mov
fsubl
xchg
inc
jecxz
unpckhps
les
shr
subl
mov
cmp
push
and
inc
pop
inc
pushf
enter
xchg
test
push
mov
pop
aam
ja
lods
into
dec
inc
xchg
jbe
sbb
jo
fldl
push
pop
pop
stos
out
push
fstps
pop
push
testb
jg
fadds
arpl
pop
ljmp
pop
or
inc
xor
popa
aam
xor
mov
arpl
test
mov
xor
imul
or
pop
call
mov
pop
dec
fstps
or
push
inc
rcrl
xor
in
add
mov
enter
mov
inc
inc
pop
int3
add
adc
jecxz
stos
out
ss
stos
lcall
js
fdiv
out
test
inc
or
in
icebp
mov
jge
ljmp
shrb
mov
push
out
mov
idivl
mov
push
dec
pop
aas
shlb
out
sbb
push
outsb
lods
lods
aas
lcall
pushw
shlb
and
xchg
je
sbb
hlt
aas
pushfw
call
inc
cbtw
stc
jne
cmp
sahf
test
pop
jae
inc
mov
push
out
fdivl
std
xchg
push
sub
dec
sbb
out
pushf
mov
mov
movb
outsl
add
mov
xchg
loop
jecxz
jns
insb
icebp
mov
enter
jb
pop
fwait
push
dec
dec
dec
fidivl
fnstcw
dec
dec
stos
pmaddwd
jp
jp
cmpsl
shrb
je
rol
icebp
push
or
jmp
ficompl
lods
inc
fcomps
imul
mov
out
lcall
add
mov
xor
shrl
add
and
mov
or
xchg
dec
pop
shlb
cmpsl
pushf
jmp
dec
ret
sub
xlat
inc
imul
cmc
xchg
adc
popa
loopne
das
mov
loopne
aad
lahf
xchg
je
mov
inc
sbb
cmpsl
inc
xchg
enter
in
lods
sbb
pop
movsl
push
and
sbb
roll
bnd
and
or
xchg
xchg
cs
xor
ljmp
fnstenv
dec
and
mov
inc
cwtl
in
fsubrs
xchg
popa
sub
test
add
pop
mov
jmp
test
jmp
push
fstpl
subb
popa
push
push
ja
dec
inc
xor
in
cmpb
add
dec
fisttpll
jb
mov
std
cmp
rcrb
xlat
cmp
scas
jle
push
add
out
mov
push
add
andb
mov
push
mov
out
add
inc
xchg
popl
add
cmp
or
dec
lret
and
mov
mov
xor
adc
cltd
mov
movsl
push
std
or
cwtl
aad
mov
jle
fidivl
insb
sar
pushf
adc
nop
mov
in
jnp
pop
jl
rcr
scas
cmp
ds
lahf
jno
pushf
cwtl
fisubl
xor
pop
jg
mov
cmp
xchg
lods
cmp
insl
inc
mov
fimuls
pusha
imul
andl
lods
cld
xchg
dec
xchg
fbstp
xchg
add
mov
mov
mov
jg
sarl
jnp
add
icebp
sahf
in
xor
subb
les
push
sub
jmp
push
imul
das
sub
dec
xlat
mov
sub
push
push
or
imul
inc
sub
or
jmp
out
ja
fwait
and
shlb
mov
lods
sti
sbbl
decl
xchg
xchg
outsb
or
push
sbb
or
xchg
cmpl
fwait
sbb
lea
xchg
and
pusha
pop
fsubl
out
push
or
ljmp
mov
mov
cmp
js
out
aam
xchg
out
enter
mov
add
push
out
cld
lea
and
nop
jp
daa
out
jno
and
inc
mov
sbb
and
sbb
pop
dec
daa
std
data16
cmp
in
leave
sahf
mov
push
outsl
jecxz
push
and
dec
mov
dec
sahf
pop
cmp
subb
pop
test
pop
push
dec
repnz
xchg
sub
xor
pop
xor
pusha
and
and
pushf
test
push
sub
movsl
sub
add
rorl
jl
push
aaa
repz
sub
push
mov
add
mov
outsl
add
lods
cmp
xchg
test
aad
pop
test
xchg
loop
dec
xor
mov
xor
mov
mov
or
pop
jmp
mov
xor
fwait
sbb
das
adc
cli
mov
fst
rolb
lahf
xor
jmp
popf
sub
push
enter
out
cmpl
push
into
imul
inc
cltd
in
out
pop
leave
push
and
pop
sub
mov
and
fincstp
fists
aam
jo
push
and
inc
repz
sub
fs
sub
aas
lods
adc
dec
inc
inc
xchg
dec
mov
xlat
xchg
adc
not
pop
insb
pop
pop
jb
add
jmp
xchg
jg
sub
fsubrs
push
stos
mov
iret
cli
outsl
xchg
inc
mov
cltd
mulb
inc
into
sbb
icebp
jecxz
add
movsl
aam
push
cmc
dec
push
sbb
repnz
mov
push
xor
push
out
out
or
hlt
dec
cmp
lret
xchg
push
mov
dec
out
mov
sbb
push
xor
dec
jle
fcomip
xor
xchg
pop
nop
adc
scas
inc
pop
xchg
push
mov
test
and
movsl
jge
and
cmp
mov
sahf
inc
or
insl
inc
pop
lret
cmpsb
cmp
fsubs
cmp
xlat
int
cmp
mov
jle
mov
jnp
xchg
inc
sahf
sub
addb
pusha
jecxz
mov
scas
add
sub
into
hlt
inc
movsb
out
jge
or
sub
and
sub
js
stc
push
ja
add
push
ficomps
mov
or
pop
or
or
ja
dec
mov
call
xchg
jno
pusha
lret
push
sarl
mov
mov
jl
adc
rorb
adc
int
enter
test
push
fs
cmpsb
fdivl
aam
push
jbe
rcrb
cmp
fidivs
shl
jecxz
and
and
jmp
mov
cmpsb
pop
push
cpuid
inc
inc
dec
pop
rcrl
or
call
sub
xchg
iret
jp
sub
popa
sub
fwait
jmp
mov
jl
and
int3
jbe
out
cmp
in
xchg
ret
push
sub
pop
add
loope
insb
jl
dec
hlt
lahf
xchg
pop
push
ljmp
mov
aas
pop
mov
xchg
sub
sbb
roll
jbe
into
adcb
je
push
jp
cmc
faddl
sub
jbe
inc
dec
outsl
xor
sub
mov
andb
pop
mov
ja
lods
push
mov
lsl
loop
faddl
add
ja
and
shr
cld
pop
ret
push
and
fnstenv
ss
movsb
js
mov
lret
andl
mov
sub
mov
out
and
jmp
loop
stc
jg
cmc
out
add
inc
jecxz
add
xor
adc
nop
sbbl
ret
ret
jp
add
mov
xor
or
mov
sub
adc
stos
mov
and
inc
fwait
sbb
out
sbb
das
mov
push
pushf
jge
mov
mov
les
in
add
xchg
shrb
aad
int3
outsl
sbb
mov
jp
insl
int3
or
push
jne
push
mov
cmpsl
dec
iret
adc
sub
shrl
cmp
shlb
pop
fwait
and
pop
adc
jns
outsl
mov
lods
xchg
flds
stos
repz
out
sbb
popa
cli
xchg
ret
dec
in
push
call
sub
jns,pn
in
mov
push
shlb
sub
mov
mov
mov
jle
cmp
mov
xchg
out
loop
aas
cltd
imul
jns
repnz
test
adc
mov
mov
mov
jb
sub
pop
xorb
andl
jl
adc
inc
lret
aam
in
movsl
push
inc
and
mov
sub
movsl
ljmp
ret
pop
adc
xchg
xor
push
mov
mov
pop
jo
add
xor
imull
or
xchg
pop
leave
jle
sub
push
add
mov
sbb
lret
mov
mov
scas
imul
mov
pop
repz
and
mov
xor
lods
push
lahf
add
icebp
ficoml
dec
fadds
fdivs
loop
cli
icebp
mov
mov
cmpsb
loope
mov
sbb
adcb
imul
push
notl
clc
inc
jmp
add
pop
xchg
or
mov
xchg
std
out
add
mov
pop
das
je
lds
inc
sub
ret
rcrb
out
lds
cmp
loop
mov
mov
fstl
mov
xor
xchg
mov
bound
sti
dec
insb
mov
mov
add
ja
xchg
fdivrs
in
or
lcall
and
sub
or
jmp
xchg
rep
mov
adc
inc
dec
imul
mov
mov
int3
int
dec
cwtl
cmp
add
sti
or
jmp
cmp
gs
and
imul
shll
mov
or
adc
test
sub
mov
jmp
fsts
scas
stc
adc
ja
popf
or
jle
out
or
pop
ficompl
cmc
imul
jg
test
out
xor
leave
scas
loope
or
insb
mov
mov
sbb
dec
push
add
cs
pop
ss
pop
rclb
ret
clc
push
push
dec
adc
sahf
outsb
pushf
ja
or
imul
iret
movl
push
mov
cmp
sar
stc
mov
into
fsubrp
dec
out
aaa
nop
es
xchg
jne
jmp
jle
push
push
pop
in
popa
mov
loop
push
jp
sub
jbe
push
imul
adc
add
sub
mov
sbb
cli
out
sahf
sub
ficompl
mov
push
cmp
sbb
mov
pmullw
xor
icebp
out
lcall
jecxz
dec
repnz
mov
pop
imul
pushf
lret
scas
xchg
sub
dec
call
push
and
adc
dec
jnp
and
dec
mov
scas
test
inc
add
push
inc
push
push
mov
xchg
popf
inc
inc
rorb
mov
add
out
pusha
lods
lds
in
lret
lock
dec
sub
jge
push
mov
lcall
lret
popf
mov
lds
dec
aam
call
je
xor
cmpsl
pusha
cld
loopne
mov
mov
mov
int
xchg
repnz
loop
loopne
mov
mov
pop
ljmp
mov
sbb
fidivrl
loope
dec
imul
test
negl
mov
dec
lds
enter
aaa
xchg
in
mov
arpl
sbb
fimull
xor
lahf
sbb
pusha
les
jne
fdiv
lret
jbe
loop
mov
mov
cs
dec
rolb
out
movsb
ficomps
in
inc
jmp
cmp
aas
dec
mov
sarl
jge
loop
iret
clc
mov
in
daa
jno
push
jmp
dec
addb
pop
xchg
lods
and
or
mov
faddp
pop
add
lretw
stos
add
and
pop
ret
into
dec
adc
sub
mov
clc
jnp
outsb
jl
push
push
pusha
mov
add
popa
int
or
out
shrb
mov
int
je
lods
mov
fsubr
lods
test
lahf
jo
mov
xchg
sbb
cld
xor
mov
ret
pop
and
in
dec
add
push
add
xchg
sub
dec
or
cmp
cmp
mov
cmc
mov
lret
cli
sub
jge
call
aam
addr16
inc
pop
faddl
xor
test
lahf
inc
call
pusha
out
insb
pushf
in
pop
xor
xchg
inc
jmp
fnstenv
pop
push
sbb
adc
popa
and
stc
xor
pop
mov
mov
xor
iret
fmul
test
sbbl
pop
mov
cmpsb
or
jb
jno
movsb
mov
gs
fmuls
sub
add
xchg
cmpsb
adc
je
in
notb
mov
jg
cwtl
xchg
xchg
inc
mov
icebp
push
pusha
push
lea
inc
or
pop
pop
push
inc
mov
push
xor
pop
xor
jle
and
adc
push
adc
pop
enter
stos
mov
std
std
scas
dec
cs
xor
pop
orl
enter
mov
jl
mov
pop
sbb
cmpl
mov
and
mov
xchg
jbe
jb
inc
xorl
cli
insb
push
cmp
mov
xlat
mov
invd
enter
loope
lahf
and
icebp
fwait
push
int3
out
enter
repz
sbb
sub
iret
jnp
stc
sarb
mov
xor
rol
or
add
rcr
mov
jne
adc
cld
cmpsl
jo
dec
mov
pusha
jne
mov
icebp
loopne
dec
dec
sub
arpl
mov
scas
jmp
imul
clc
dec
pop
add
insl
mov
imul
add
inc
ja
sbbb
fldl
scas
adc
imul
test
or
mov
add
cltd
add
dec
outsb
jge
lret
fldt
inc
sbb
pop
test
cltd
aad
mov
xchg
mov
outsb
mov
fsubs
test
mov
dec
sub
clc
adc
fdiv
insl
aad
ds
cmpl
push
fdivrs
adc
and
sbb
lret
mov
jl
stos
fadds
insb
ja
pop
rcll
negl
adc
and
jo
sti
test
jg
imulb
jecxz
sbbb
ljmp
jp
sbb
clc
aad
movsl
cld
sbb
pop
adc
mov
add
cmp
daa
inc
xor
mov
cmpsb
xchg
inc
arpl
mov
or
inc
mov
fdivs
xor
or
and
sub
out
hlt
inc
out
pop
ja
dec
jecxz
insl
cmp
jb
jb
lret
mov
dec
push
mov
les
in
jb
loopne
outsl
mov
xor
dec
jno
roll
inc
aam
jmp
pop
scas
cmp
aaa
std
jno
lods
andl
and
jns
mov
jl
daa
cmpsb
jg
arpl
mov
or
loope
xor
int3
lds
int
push
dec
push
bound
and
push
xor
leave
inc
push
sar
push
mov
divb
adc
mov
xchg
sbb
or
inc
jb
cmp
jle
ja
adc
outsl
lods
xchg
mov
pushf
xchg
adcb
icebp
pop
in
push
jmp
pop
roll
push
cmpsl
imul
xor
scas
shlb
mov
xchg
jg
push
adc
dec
mov
fistps
das
fadd
mov
xor
and
adc
daa
test
sub
push
jb
jmp
out
push
sub
adc
in
add
pop
mov
push
jbe
mov
sub
daa
xor
pop
or
add
sarb
mov
repnz
cmp
and
push
add
xor
test
aas
and
fs
js
pop
mov
nop
pop
ficompl
dec
and
push
pusha
ficoms
mov
jne
outsb
mov
lods
gs
mov
pop
out
divb
out
out
adc
addr16
dec
mov
sub
xor
enter
add
lcall
aas
mov
mov
xor
xchg
inc
cli
mov
xchg
mov
out
nop
hlt
scas
jne
mov
stos
mov
jg
pop
repz
dec
movsb
sbb
sub
mov
out
dec
mov
fstps
fwait
and
imul
mov
movsb
nop
pop
addl
sbb
xor
fidivrl
test
into
add
arpl
sbb
aaa
imul
mov
mov
xchg
aad
sbb
add
lahf
mov
xor
insl
ds
mov
mov
dec
iret
imul
lods
test
scas
jmp
mov
ret
fld1
xchg
loopne
xor
jl
inc
jp
cmp
or
mov
cld
add
daa
pop
push
sub
mov
push
andb
xor
jge
mov
repnz
aas
lret
inc
xchg
and
cmpsb
push
xchg
out
call
flds
clc
sahf
shll
mov
imull
enter
cs
sbb
mov
adc
sbb
ljmp
sub
push
test
dec
xchg
ss
jbe
loopne
ficomps
mov
lret
xor
sti
fwait
push
and
cltd
hlt
push
popf
fmuls
leave
add
andl
jne
sbb
jmp
leave
xchg
in
inc
out
mov
outsb
subb
sahf
cmpsb
outsb
daa
pop
inc
testb
pop
sbb
nop
and
lret
mov
jecxz
mov
cmp
insb
dec
repz
ss
icebp
push
rcrl
xchg
sbb
lds
ljmp
outsl
fistps
setp
adc
add
pusha
mov
push
cmpb
mov
bound
lods
push
ret
popf
jmp
lds
push
out
xchg
out
mov
fwait
mov
adc
imul
add
insl
fdivrl
scas
addr16
mov
mov
js
cmp
sub
adc
sar
sbb
inc
add
fnstcw
leave
jne
jmp
cmp
aaa
sahf
fisttpl
sbb
add
and
clc
out
popa
inc
scas
dec
ret
pop
lods
bound
shrl
es
addr16
mov
sub
mov
or
jecxz
mov
mov
std
jle
pop
inc
fsub
or
xchg
ds
les
or
gs
cmp
inc
mov
sahf
test
int
js
icebp
pop
subl
xchg
loopne
mov
testl
pop
insl
jae
xor
cmc
xchg
adc
aas
or
enter
and
pusha
xchg
loope
adc
int
sbb
and
dec
xlat
sub
sbb
scas
es
std
jle
ljmp
mov
dec
mov
jl
mov
dec
pop
mov
mov
enter
pop
ja
mov
cmc
pushf
sbb
mov
out
jmp
insb
movsb
pop
xor
or
pop
xchg
mov
hlt
pop
cmp
jmp
sti
jnp
inc
mov
ret
addr16
push
repnz
lds
arpl
cmpl
add
lcall
pop
rcrb
mov
jle
or
cmp
or
jo
fcmovnb
out
pop
mov
jbe
shr
push
sti
shl
jo
jp
xchg
popf
daa
pop
jmp
push
push
or
sub
xor
popa
mov
fnstenv
adc
jnp
in
call
in
xchg
lods
cmp
push
mov
push
mov
lods
fldenv
movsl
jnp
sub
out
stos
pop
lahf
mov
cmc
test
cmpl
popf
mov
scas
mov
sub
dec
lret
mov
sbb
lahf
repnz
idivl
push
xor
sti
pop
fdiv
inc
jnp
cmpsl
ret
push
out
cmp
xchg
setg
mov
and
fimull
aam
xor
xchg
mov
jg
pushf
xchg
push
push
push
fisubrs
mov
adc
xchg
adcl
lods
test
push
mov
pop
mov
mov
xchg
lods
lcall
subl
mov
sub
mov
mov
call
add
xlat
dec
inc
mov
aaa
jge
in
rcrl
xchg
mov
jmp
hlt
loop
jo
jle
cmp
xor
or
lahf
loop
push
lock
daa
cmp
xchg
movl
xchg
or
mov
dec
cmpsb
push
in
daa
std
mov
clc
push
scas
lock
movsl
sub
cmp
mov
scas
mov
pop
jp
ret
and
adc
sbb
inc
mov
insb
push
sbb
cwtl
testl
fsubrl
fs
bound
jne
arpl
pop
aas
scas
or
iret
hlt
push
and
sti
cmpsb
fcoml
aam
aam
adcl
or
dec
repz
mov
pushf
jnp
lahf
out
repz
clc
out
sbb
mov
push
dec
sub
fcomps
dec
mov
insl
js
dec
lcall
mov
ds
out
mov
dec
data16
in
add
arpl
mov
mov
dec
fcompl
ds
imul
aad
insb
out
xor
pop
and
sub
sti
daa
sahf
dec
sahf
jne
hlt
rol
lock
add
jns
mov
lods
les
jle
daa
push
cli
add
mov
mov
cmpsl
popf
cmpl
mov
fnstenv
xor
lods
sarb
fsubrl
xlat
shrb
pop
in
adc
andb
enter
sub
push
mov
jecxz
sbb
out
gs
mov
and
or
dec
test
cld
mov
jge
or
or
jg
clc
pop
pop
mov
call
test
stc
or
pop
pop
clc
push
sbbl
xchg
ja
or
mov
push
das
or
loopne
and
loopne
mov
fstl
push
adc
in
adc
cld
inc
insl
mov
rolb
xchg
clc
mov
add
jl
testb
outsl
adc
and
pop
mov
push
mov
xchg
insb
loopne
xor
fisubrs
xchg
sub
push
ret
icebp
inc
jg
cli
sti
ret
dec
sbbl
mov
mov
cwtl
ljmp
fmuls
ficoml
int3
scas
push
push
xchg
ss
and
pop
insl
push
jmp
out
sbb
sbbb
jo
je
dec
inc
cmp
push
loop
or
cs
test
and
xor
add
cli
pop
adc
fs
fcoms
adc
popa
xor
pop
flds
cmp
mov
pusha
pop
popa
int3
mov
add
and
pop
pop
adc
mov
sbb
or
jg
or
ss
pop
inc
cmpsl
jb
push
push
pop
jg
bswap
iret
bound
shr
inc
push
inc
pop
mov
fsts
pop
mov
enter
fistpll
sbb
xor
cmp
nop
cli
pushf
pop
pushl
pusha
pop
lods
inc
cld
ljmp
mov
push
ljmp
and
xorl
mov
mov
dec
lea
rclb
or
les
jno
lcall
push
rcl
push
sub
pop
mov
xchg
imulb
mov
iret
mov
lods
pop
jmp
cmpsl
lods
es
ffree
pop
mov
sbb
imul
push
mov
sub
or
sub
int
insl
inc
or
ret
push
push
adc
adc
scas
push
push
setbe
lods
mov
in
dec
in
cli
mov
pop
mov
cli
shrl
mov
mov
imul
into
lret
icebp
dec
addr16
nop
insb
fsubrl
mov
fs
add
leave
adc
pop
add
daa
push
push
out
xor
ljmp
fldcw
out
gs
mov
mov
repz
mov
rolb
dec
pop
cmp
and
cmp
dec
xor
jns
popa
jg
lcall
out
movl
in
mov
sbb
cmp
adc
les
mov
arpl
mov
stos
mov
jne
mov
adc
push
fs
cmpsl
xchg
push
push
ss
shrb
dec
fldt
js
insl
push
xchg
push
jne
jle
sub
xor
std
add
pushf
adc
mov
add
std
ficomps
imul
lret
movsb
push
hlt
lret
in
loop
ds
pop
in
jle
add
imul
sub
add
inc
mov
clc
adc
dec
xchg
ds
mov
hlt
dec
xor
lea
mov
repz
fldcw
and
dec
adc
push
pop
rcll
dec
sar
js
mov
test
xchg
mov
mov
xchg
mov
popa
mov
push
leave
aas
rol
push
jmp
rorb
pop
cmpsl
push
call
notb
aam
loope
ja
popf
ss
add
mov
icebp
mov
dec
leave
xor
dec
mov
mov
icebp
test
xor
xor
and
test
dec
ret
mov
cs
push
mov
xchg
cwtl
lret
mov
sub
mov
test
adc
dec
bound
divb
mov
jnp
int
sbb
push
aam
xor
sbb
insl
dec
adc
sub
pop
shrb
or
push
arpl
cmpsb
aas
jmp
scas
popf
or
push
sbbb
inc
rcrl
cli
pop
pusha
leave
cld
gs
cmp
jb
shrb
imul
add
push
mov
cmpsb
cmp
mov
dec
test
and
cmpsl
mov
pop
inc
add
gs
cmp
mov
stos
xchg
inc
rcr
mov
xlat
je
mov
loope
jns
in
ret
mov
flds
add
add
mov
dec
sub
inc
int3
jmp
insb
inc
fistl
adc
loope
and
adc
or
dec
popf
jp
cli
stc
or
sbb
xor
add
jmp
lea
fisttpl
imul
jp
pop
push
ret
adc
sahf
lahf
shrb
lods
pop
popa
imul
add
aam
fcmovnb
jp
xchg
xor
mov
jmp
inc
xor
pop
xchg
test
cmp
lret
mov
dec
aam
popa
popf
and
and
xor
mov
mov
js
inc
inc
lods
ret
ljmp
in
sub
push
jnp
loop
push
and
std
or
mov
xlat
push
mov
ds
add
fstpl
fisubl
je
imul
inc
andb
push
arpl
stos
and
and
adc
or
adc
sub
stos
jl
push
imul
mov
cmp
mov
lods
dec
cmpsb
cmpb
mov
sub
decl
addr16
mov
out
xchg
enter
addr16
add
in
loopne
lock
stos
push
insb
les
mov
mov
mov
movl
sub
adc
sbb
lock
lods
leave
pop
lds
jne
mov
clc
sub
pop
or
inc
fwait
adc
test
lea
add
xor
inc
lods
jge
pop
dec
inc
push
pusha
mov
pop
in
inc
lret
mov
push
and
jno
mov
stos
jle
or
hlt
mov
xchg
add
imul
xchg
and
jb
mov
xor
push
imul
adc
push
and
pop
xchg
rolb
dec
xchg
jbe
jp
sti
pop
hlt
pop
pop
testl
add
mov
add
arpl
repnz
lcall
sub
clc
mov
xor
dec
xchg
scas
and
pop
lods
pop
sbb
movsb
or
test
ja
out
dec
movsb
iret
jmp
leave
sarb
sub
mov
and
sub
xchg
cmp
sub
inc
push
and
imul
xchg
jge
mov
jo
int3
cmc
mov
or
dec
pushf
orl
lea
push
iret
add
cmp
adc
jl
fildl
jne
outsb
mov
inc
adc
je
in
adc
bound
xchg
mov
sub
mov
dec
nop
out
std
inc
push
dec
mov
sub
inc
adc
js
jne
add
cmp
mov
mov
dec
scas
icebp
adc
cmc
loopne
jmp
push
outsl
jo
mov
adc
sbb
and
or
gs
xchg
ss
das
jns
mov
jb
and
jmp
fwait
sti
cmp
stos
cmp
jb
xchg
xlat
push
mov
or
imul
xlat
jle
addps
cmpsl
dec
dec
rcrb
iret
in
or
cld
sub
outsl
dec
sub
cmc
sbb
int3
add
scas
xor
sahf
push
add
xchg
mov
icebp
xor
xchg
add
loopne,pt
pop
cmp
xchg
test
sahf
pop
and
xor
call
cmc
fsts
pushl
jbe
divb
sub
out
pop
aas
bound
dec
jnp
out
mov
push
loop
push
and
jbe
jg
cmp
add
jae
imulb
xor
sbb
push
sub
pusha
jne
imul
dec
cmp
xchg
ret
insb
sarl
mov
vpcmpeqd
dec
imul
xchg
mov
xor
inc
cli
jae
stc
insl
out
nop
jp,pn
mov
ja
jmp
sarb
cwtl
mov
push
or
push
ljmp
out
jmp
sbb
push
adc
add
pop
mov
add
cmpsb
test
sti
jmp
adc
inc
and
iret
push
inc
mov
jo
adc
xchg
cmp
mov
fucom
sbbl
loopne
push
ret
add
pop
fdivl
mov
fdivrs
inc
jae
sti
fstpl
jmp
mov
sub
shrb
add
and
pop
repnz
pop
ja
bound
adc
in
sub
test
pop
stos
mov
int3
out
push
jb
dec
or
dec
ret
adc
mov
dec
negl
addr16
add
pop
cs
inc
fcos
push
pop
pop
mov
jmp
jnp
or
mov
mov
sub
cmp
add
gs
jb
out
fstpl
stos
mov
mov
jge
sti
or
ja
mov
movsl
stos
adc
add
xchg
xchg
cwtl
iret
mov
cli
cmc
or
xor
faddp
icebp
jns
je
iret
mov
out
inc
xchg
dec
lret
mov
arpl
dec
fbstp
or
xchg
cmova
mov
dec
xor
push
fs
cmovl
push
lret
push
sarl
cmp
js
mov
push
or
mov
xchg
xchg
jne
add
push
mov
cmp
mov
and
dec
mov
cld
or
xchg
mov
push
sub
dec
push
inc
sub
aaa
popf
push
into
cmc
sub
mov
not
adc
arpl
lock
and
mov
xor
fidivrs
mov
push
mov
mov
rol
mov
or
sbb
dec
mov
fnstcw
xor
ds
test
push
mov
test
sbb
jo
jg
xchg
push
or
push
or
jg
repz
pop
ret
ds
xchg
xor
pop
popf
jnp
push
imul
fsubp
leave
test
mov
mov
or
inc
jb
xchg
das
pop
xor
imul
sbb
stos
mov
inc
dec
mov
std
fildll
imul
mov
sub
js
jmp
sarb
movsb
sbb
faddp
jb
bound
add
mov
jne
orb
loope
adc
scas
sbb
xor
insl
cmp
add
mov
out
jno
das
xchg
lret
push
jmp
inc
lods
cmc
ss
dec
cld
int3
outsb
cmp
mov
add
cmc
lahf
mov
xor
cmc
out
or
jmp
out
sbb
mov
dec
or
fisubrl
or
out
repnz
out
mov
adc
jne
iret
test
fisttps
lret
jb
mov
shlb
mov
mov
lds
out
loop
inc
lret
test
adc
jae
push
gs
rorl
ret
pop
jno
into
add
out
lock
test
cmp
fwait
cmp
nop
jl
lret
aam
es
mov
mov
mov
aaa
mov
clc
adc
das
fwait
lret
pusha
pushf
out
inc
cmp
movsb
add
mov
jp
fdiv
in
pop
aad
xchg
cmpsb
mov
inc
sub
or
lock
test
mov
shll
push
lock
stc
push
in
int
lods
sbb
xchg
mov
scas
inc
adc
xor
mov
sub
stos
inc
out
mov
loop
int3
jg
nop
jne
push
std
mov
lods
mov
mov
arpl
inc
fstp
dec
cmpsl
xor
and
imul
mov
jle
int
cmpsb
jne
xchg
cmp
stos
pushf
pushw
dec
pushf
dec
push
cmpb
dec
mulps
inc
xchg
xchg
fwait
add
adcb
loop
movsb
gs
or
aaa
and
mov
push
jbe
push
test
je
or
xchg
lcall
fdiv
fistpll
ljmp
pop
loopne
push
sbb
pop
xchg
pop
scas
bnd
or
xchg
call
ret
xchg
lock
mov
imul
push
lods
ds
rclb
xchg
push
sub
push
lods
aad
pop
adc
push
dec
push
imul
cmp
sbb
add
jle
push
jnp
jl
scas
loop
sub
clc
rorl
sbb
mov
mov
out
sbb
add
movsb
mov
nop
cmp
sub
stos
and
clc
out
int
out
cmp
push
aad
mov
pop
cmc
adc
jne
xchg
push
stos
pop
mov
test
inc
mov
jg
xchg
jb
int
mov
push
adc
shlb
mov
loopne
xchg
mov
add
jb
lret
sti
jmp
cmp
aam
dec
xor
sub
pop
and
mov
jp
aad
cltd
stc
mov
push
pop
int3
pop
inc
out
xor
mov
ret
and
xchg
sarl
sarb
mov
aas
repz
data16
movsl
fucom
xchg
sub
outsb
sgdtl
xor
push
nop
test
daa
adcl
rcll
inc
mov
neg
sbb
aaa
jns
mov
je
movsl
inc
and
cmp
sbb
mov
add
dec
movsb
incb
jb
ret
cmc
push
mov
fwait
aad
push
sbb
mov
nop
add
scas
mov
or
inc
ror
imul
leave
loope
roll
fsubp
or
and
pop
adc
mov
pop
mov
ret
jne
add
lret
lcall
mov
xor
dec
mov
mov
je
pop
xchg
inc
andl
addr16
xchg
rorb
orb
and
sub
cwtl
push
cmp
and
xchg
data16
mov
jmp
ret
imul
and
mov
stos
and
inc
stos
sbb
stos
call
leave
and
xchg
inc
jecxz
cmp
sub
out
or
sub
aad
mov
xor
fiaddl
pop
aam
or
xor
adc
ret
call
lock
mov
int3
daa
cltd
lds
mov
sub
mov
stos
add
popa
loope
test
daa
dec
sub
push
jmp
mov
je
adc
imul
inc
xchg
sbb
sbb
ret
cli
push
mov
mov
add
add
inc
cmp
jl
mov
push
mov
fucomip
shlb
popa
xlat
inc
cmp
gs
adc
es
fstl
dec
jl
adc
pop
shlb
aas
xor
rcrl
push
sub
rorl
adc
xor
add
add
loop
lret
dec
sbb
ja
push
ret
dec
jo
popa
dec
add
mov
stos
xor
pop
inc
test
icebp
lret
insl
sbb
leave
inc
dec
setns
push
jle
inc
xchg
cmp
mov
fcoml
fbstp
sahf
pop
out
adc
mov
xor
int
and
inc
jo
imul
jnp
xchg
cs
mov
or
or
adc
mov
fwait
xor
test
shrb
fwait
enter
in
inc
inc
add
xchg
jns
sbb
aas
add
mov
inc
fadds
xchg
jbe
mov
xchg
dec
mov
push
push
out
adc
pop
mov
sbbb
pop
push
test
or
in
dec
cli
and
hlt
push
ljmp
push
insb
movsb
bnd
popf
jl
push
push
mov
jo
dec
mov
mov
sbb
sub
fwait
push
xor
test
adc
stc
jg
jns
pusha
xor
addr16
pusha
nop
enter
push
dec
cmp
pop
mov
push
lock
stos
mov
dec
push
je
inc
arpl
mov
lahf
jp
nop
in
mov
fcomps
mov
jmp
movsl
jecxz
hlt
test
or
es
sub
xor
mov
jne
adc
sbb
int3
push
mov
pop
dec
pop
ret
repz
push
mov
xor
lea
scas
sub
gs
add
sahf
popf
cld
cmc
int
arpl
inc
dec
push
inc
cmp
sub
mov
pop
add
inc
pop
ret
fcomip
xor
ror
arpl
cmp
push
inc
push
loopne
lods
mov
adc
xchg
shlb
outsl
cmc
sarl
mov
cmpsl
dec
push
mov
gs
cmp
movb
repz
pop
ret
out
xchg
cltd
ja
lea
mov
xchg
xchg
dec
pushf
pop
mov
dec
push
pusha
jne
test
adc
jecxz
pop
xchg
mov
sub
xchg
stos
int
jl
dec
or
or
dec
call
ljmp
adc
call
and
pop
lock
insb
jmp
lahf
fcoms
xchg
push
daa
mov
jl
pop
dec
arpl
xor
mov
xor
xchg
dec
movsb
mov
fmuls
lahf
mov
pop
jns
jecxz
fwait
pop
jbe
aaa
jge
adc
je
int3
stos
int
je
xor
sub
pop
nop
jns
mov
xchg
cwtl
inc
pop
lods
dec
or
aas
sbb
inc
gs
cltd
cmp
in
add
xor
mov
aad
push
scas
daa
mov
and
mov
aam
hlt
outsb
dec
cmp
sti
push
outsb
sub
ret
adc
lret
mov
xchg
lahf
icebp
jb
je
loopne
imul
jnp
addr16
iret
int
fbld
sbb
adc
mov
and
icebp
or
mov
pop
movsl
daa
loope
in
ret
pop
add
or
or
call
mov
sbb
mov
jo
sbb
sbb
cmp
sbb
rcr
add
ret
out
adc
lahf
pop
mov
xchg
cmc
andl
sbb
push
je
scas
add
adc
lcall
outsb
dec
lods
xchg
or
lods
sbbl
and
int3
stc
jo
jae
push
jp
sub
ss
push
cmc
lcall
cmpsl
xchg
std
gs
movsb
sbb
in
sub
xchg
dec
std
xchg
cmp
push
xchg
xchg
inc
pop
shrb
loop
dec
mov
xchg
mov
fsts
sub
mov
lods
and
stc
xchg
sub
jmp
dec
nop
loop
or
sub
add
mov
cmp
aas
pushf
out
xchg
pusha
nop
mov
or
je
mov
cmp
into
fsubrl
jbe
or
inc
inc
movsb
xchg
packsswb
cltd
mov
adc
mov
loope
cmp
jmp
and
xchg
lods
mov
sahf
test
mov
cld
out
mov
cmp
mov
stos
cmp
push
mov
into
xor
outsl
cmp
pop
insl
sub
mov
jp
loop
add
sarb
aam
sahf
dec
add
cmp
xchg
sub
jge
mov
insb
dec
dec
jl
outsl
ljmp
bnd
lods
testb
inc
lahf
inc
aam
out
mov
jno
lea
outsb
fimull
jbe
pop
inc
inc
mov
adc
xchg
jne
dec
push
adc
int3
mov
sti
mov
loope
pushf
out
into
sbb
inc
ljmp
stc
cmp
inc
ja
adc
cmp
hlt
subl
add
lods
test
cmp
out
das
fadds
mov
and
jb
and
ljmp
pop
stos
mov
outsb
sbb
inc
pop
cli
and
aam
addb
sbb
scas
or
pop
mov
or
xor
das
xor
in
xchg
test
or
mov
dec
call
jo
pop
mov
and
dec
cmp
fiaddl
in
xor
adc
sub
or
leave
adc
xor
push
enter
arpl
mov
sub
pop
lea
ljmp
sarl
test
or
frstor
adc
mov
ja
stos
sub
stos
adcb
loopne
sbb
fisttpll
insl
test
sub
or
in
pop
pop
add
sub
push
js
push
xchg
ss
xor
mov
insb
add
sub
enter
cwtl
cmp
xchg
sbbl
repz
lret
stc
hlt
mov
iret
rolb
push
cltd
lods
fwait
outsb
mov
mov
inc
push
rol
rcr
cmpsb
mov
inc
loop
sarl
jmp
xor
lea
les
sub
or
and
in
or
jo
out
dec
jl
repnz
cwtl
sub
add
mov
xchg
repz
cmp
inc
xor
and
and
std
inc
jle
lret
xchg
popf
push
pop
mov
sub
imul
pusha
jb
and
arpl
jge
sub
add
cmc
clc
dec
push
xchg
jl
push
ret
ja
push
ja
outsb
test
clc
aam
loope
or
out
insb
adc
mov
jnp
push
in
insb
lods
aas
orb
cmp
add
cltd
in
dec
xor
lret
mov
xchg
inc
xor
dec
dec
push
xor
push
xchg
inc
jno
and
movsl
dec
jl
mov
loop
imul
jne
or
bound
lods
mov
scas
and
lret
sbb
pop
pop
jo
outsb
and
xor
and
jns
adcb
cmp
push
daa
dec
ret
je
ror
push
test
insb
lods
add
or
dec
mov
mov
xchg
sbb
cltd
or
mov
pop
loop
push
xchg
pop
bound
testb
stc
xchg
dec
mov
cmp
leave
faddl
std
lods
cmp
es
mov
sbb
or
or
cltd
xor
sbb
sub
mov
popa
je
in
jbe
push
cwtl
leave
fmuls
dec
xchg
enter
int
mov
notb
arpl
clc
sbb
sbb
push
adc
adc
mov
ss
out
call
test
push
or
fistpll
ds
subb
stos
dec
and
inc
push
ret
push
pop
ja
inc
fcmovne
and
inc
inc
ret
outsl
cmpsl
mov
inc
in
lea
aad
roll
adc
pop
xor
adc
cwtl
add
push
jmp
test
mov
push
pop
imul
shrl
inc
es
aad
cli
repz
bound
mov
rolb
fsubl
push
pushl
loope
pop
push
and
cmp
lret
stos
mov
push
add
mov
ss
dec
mov
jmp
rcrl
add
in
push
mov
std
xchg
lret
add
je
sub
in
movsl
lret
jo
dec
inc
push
in
push
inc
or
clc
push
jecxz
das
fimull
cmp
rcrl
test
testl
mov
and
mov
dec
daa
jmp
sub
xchg
inc
xlat
cmpsb
mov
xor
mov
dec
call
xchg
stos
cmp
jb
lahf
pop
rorl
fcoms
addb
nop
ror
ljmp
lcall
jle
push
ficomps
inc
gs
inc
mov
sub
lret
lea
xchg
or
mov
sbb
pop
cmc
and
jl
mov
lods
cli
outsb
cs
push
lea
pop
js
and
jmp
push
push
mov
and
pop
dec
inc
mov
aam
lods
lret
rclb
mov
or
inc
or
mov
xchg
or
xlat
dec
imul
xor
pop
mov
mov
lods
test
cli
rorl
fldt
add
add
mov
mov
movsl
push
out
stos
xchg
pop
leave
xlat
mov
mov
arpl
sub
jno
adc
cmp
test
push
divb
out
lock
pop
imul
dec
iret
pop
mov
addb
je
mov
pop
lret
pop
xor
pop
insl
aaa
and
push
sti
add
decb
add
sahf
nop
xchg
xchg
scas
dec
fistpll
mov
dec
mov
sbb
je
outsb
xor
out
mov
test
insl
push
hlt
push
xor
icebp
xchg
rcll
out
fsubl
notl
imul
cmpsb
sub
sbb
sbb
inc
ja
jmp
fstl
int3
arpl
bswap
bound
cmp
sbb
loope
mov
repz
or
aam
stc
je
fmul
add
push
inc
jl
cmpsl
jae
rolw
mov
mov
inc
pop
enter
jne
and
cld
std
xor
stos
mov
ja
rolb
push
fwait
in
and
aam
and
mov
test
add
lahf
loope
jmp
popa
mov
in
bound
leave
loope
jo
jg
dec
out
in
xchg
sbb
rcrb
roll
or
jge
inc
add
insl
clc
jg
jp
xchg
cwtl
loope
fidivl
xchg
inc
lods
adc
out
aad
push
dec
dec
aaa
inc
dec
xchg
in
mov
clc
push
adc
sub
dec
ljmp
mov
cmp
in
pusha
testb
pop
aaa
jns
dec
fwait
mov
pushf
cmpsl
jne
mov
push
mov
xchg
ljmp
out
pop
cmp
addr16
lods
inc
roll
hlt
je
ret
pushf
jno
insl
in
xchg
jns
scas
fnstcw
lret
push
jmp
mov
outsl
or
enter
stc
in
clc
lahf
xchg
sub
sub
and
add
hlt
or
mov
xchg
dec
dec
movsb
sti
jno
adc
ds
cmp
xchg
mov
lahf
pop
sbb
pop
cmpsb
int
xlat
xchg
int3
xor
xor
xor
pop
xchg
xor
xor
dec
loop
or
dec
in
mov
out
fdivrl
xchg
pop
addr16
pushf
sub
arpl
sub
out
push
ljmp
push
fwait
cmp
mov
lahf
test
add
adc
lret
adc
aas
and
test
add
lock
pop
push
mov
lods
and
stos
xor
pop
ret
sub
mov
inc
aas
pop
pop
inc
pop
and
mov
ja
out
sbb
dec
push
push
add
jg
xchg
cs
add
repz
xor
lds
pop
and
insl
xchg
xor
mov
dec
hlt
mov
inc
sti
outsb
sbb
push
xchg
rcr
jno
lret
push
mov
lret
jne
sub
lock
jno
xor
jbe
loopne
push
je
movb
xor
cmp
xchg
xchg
popf
sahf
loope
cmp
add
popf
aad
addb
repnz
lcall
les
push
lock
push
push
in
adc
mov
repz
bnd
add
rcrl
inc
mov
fmull
iret
mov
shlb
dec
jmp
sbb
sub
inc
loope
push
pop
mov
adc
add
jmp
or
mov
and
call
repnz
js
sub
xchg
test
pop
stc
outsl
dec
sub
mov
cli
pop
jo
dec
aad
aad
push
ja
lods
adc
ficomps
xor
inc
sbb
mov
sbb
push
xchg
outsb
sub
jnp
push
mov
push
movsl
push
pop
mov
dec
inc
sbb
xchg
popf
push
smsw
les
mov
out
push
add
stos
jl
adc
and
cmp
pop
and
and
sub
jge
pop
and
push
xor
stos
bound
aas
push
out
insl
test
inc
sbb
dec
outsb
add
add
iret
xchg
or
insb
fnstcw
mov
xor
or
jmp
rcrb
fildl
repz
mov
xor
mov
adcl
xor
lret
mov
cwtl
cli
cltd
aam
scas
jmp
sbb
aam
jecxz
pop
cmp
xchg
int
sub
adc
push
fists
imul
xchg
push
lods
jle
ds
out
loop
mov
insb
and
scas
inc
in
lock
push
xchg
frstor
fnsave
push
add
inc
cmpsb
cmpsl
push
test
inc
mov
mov
fs
fistpl
fcmovnbe
lock
jge
loope
push
and
cmpsb
jno
test
cmp
xchg
loopne
mov
inc
add
shl
shll
cs
pop
test
or
sub
lods
mov
loop
adc
jmp
aam
jno
cmp
and
jle
inc
subb
scas
pop
icebp
sbb
dec
mov
inc
mov
push
push
mov
adc
push
repz
sbb
gs
adc
pop
mov
push
lret
mov
jo
out
sbb
jno
imul
movsb
adc
add
inc
sbb
scas
leave
xor
dec
enter
ss
jne,pt
clc
fs
xlat
push
push
xor
cmp
add
fbstp
lds
add
pushf
mov
std
ja
jp
xchg
cmp
cmc
arpl
mov
in
fstpl
insb
dec
xor
pop
pop
and
in
std
add
and
or
pusha
out
xchg
sub
add
and
jmp
cld
xor
jp
popa
push
pop
decl
adc
and
dec
lea
adc
ljmp
test
loopne
aam
jmp
or
outsb
hlt
mov
mov
pop
add
mov
test
int
stc
dec
stos
jae
call
jbe
add
xchg
cmpsl
js
test
jge
outsl
or
testb
andl
mov
mov
mov
shrb
repz
or
aad
cld
std
in
mov
jb
adc
dec
mov
js
out
and
xchg
nop
mov
loopne
sbb
jae
outsb
cmp
cmp
push
enter
push
push
or
lcall
shll
shlb
popa
push
gs
adc
lods
pop
inc
jbe
scas
add
sub
add
lahf
cwtl
mov
jp
mov
or
cli
fldenv
mov
movsb
jl
repz
lret
fbstp
and
xor
push
jbe
add
je
sub
cli
and
xorl
jle
aas
pop
jecxz
cmp
pminub
loop
outsl
pop
add
shlb
cmpsb
shrl
test
sub
rcrb
xchg
cmp
shl
mov
inc
jnp
cmpsl
dec
dec
imul
push
xchg
mov
jg
jg
aam
xor
xor
loopne
leave
scas
sub
addb
mov
cmp
loope
pop
testb
push
xchg
push
mov
jl
call
xchg
nop
xchg
mov
daa
add
insb
push
rcrl
mov
mov
in
push
mov
adcb
inc
xchg
sub
mov
mov
jbe
push
xor
xchg
jmp
pop
pop
in
fnsave
jl
scas
mov
xor
pop
insl
xchg
adc
insb
mov
insb
push
push
jbe
movsl
xchg
jns
shrb
int
mov
inc
sbb
cmp
sbb
imul
or
mov
clc
xchg
call
jge
jp
shll
add
mov
cs
stc
xchg
shrl
xchg
sub
loope
pop
pop
add
aaa
test
xchg
cmp
xor
adc
cmpsb
and
lds
nop
mov
shl
dec
cmp
sub
loop
cmp
shlb
daa
lcall
insl
pop
jp
dec
icebp
push
daa
out
sbb
aad
dec
fucom
mov
shlb
fimull
pop
sub
xor
push
pop
push
popa
imul
inc
xor
push
or
frstor
ja
fdivs
movsl
gs
int3
fidivl
mov
add
sbb
xor
popf
add
pop
sbbl
test
or
pop
scas
push
lcall
rcrl
jae
push
inc
imul
ficomps
in
sub
out
pusha
rcrb
and
mov
mov
cltd
inc
xchg
sub
enter
ljmp
sub
fnsave
mov
cmpsb
fcomps
sub
or
adc
test
popf
jmp
aas
mov
adc
pop
cmpsb
jge
imul
in
ljmp
push
nop
sbb
jmp
ds
test
sti
adc
dec
cmpsb
int
mov
inc
push
mov
inc
push
sbb
scas
xchg
and
mov
cltd
mov
daa
jmp
inc
and
out
popf
ret
adcb
sub
call
sub
stc
loopne
into
sub
jp
add
aas
or
cmp
jl
xor
int3
pushl
ds
decb
mov
mov
ja
mov
mov
fwait
pop
aas
xor
inc
pop
sbb
cmpsb
mov
loopne
sbb
xchg
incb
leave
pop
movsl
push
mov
int3
mov
sub
in
mov
and
mov
enter
xor
pop
scas
sbb
ljmp
and
add
mov
or
and
jle
sbb
jb
pop
cmp
jnp
cmpsl
jl
jl
andl
mov
xchg
mov
popf
xchg
sub
call
out
push
jno
pop
push
xchg
jp
int3
cmp
cmp
sbb
push
mov
push
push
lods
and
flds
add
test
cmp
dec
mov
dec
jno
adc
add
push
loopne
stos
sbb
push
loope,pn
pop
test
xorl
rcr
cmp
ret
cmp
inc
scas
mov
sbb
out
dec
inc
arpl
aaa
add
inc
shr
mov
xor
add
popa
mov
mov
cwtl
inc
pop
lahf
pop
int
mov
inc
ljmp
xchg
xchg
aaa
cwtl
leave
outsb
mov
mov
mov
adc
gs
sbb
sub
jmp
pop
dec
push
jns
mov
outsl
icebp
cs
jno
es
ljmp
gs
push
icebp
push
jmp
mov
lcall
fcoml
cmpsl
pcmpgtb
mov
das
jmp
jns
pop
push
sub
sub
push
out
lods
jle
lret
cmp
ja
mov
andb
movsb
ret
addr16
clc
xchg
or
test
xrelease
push
bound
aad
out
nop
mov
add
mov
xchg
out
push
int
lds
jg
cmpb
repz
dec
out
mov
mov
ret
jae
pop
enter
scas
mov
call
jle
cmc
clc
stc
xchg
fcmovnb
add
shlb
mov
jle
pop
pushl
incl
lock
jne
mov
stos
push
mov
int3
mov
xor
inc
jo
test
or
incl
xchg
jno
dec
arpl
cs
push
das
adc
mov
and
iret
repz
jnp
cld
and
pop
call
sbb
push
jo
jb
mov
int
push
mov
faddp
loop
sbb
jmp
cmp
add
int
jae
pop
inc
fwait
outsl
mov
jp
cwtl
jnp
ret
or
jle
mov
or
and
push
call
mov
int
ret
in
imul
mov
daa
in
outsb
or
xor
pop
inc
cmp
dec
dec
jns
push
popf
cmpsl
push
fmuls
lret
jmp
rorl
pop
pop
cltd
stos
insl
pushf
fwait
or
lds
dec
das
fs
mov
mov
addr16
push
dec
lds
lea
jno
dec
test
test
into
cmp
out
jo
iret
push
into
jb
ja
sbb
pop
fisubl
adc
cmpsb
mov
ja
push
repz
mov
scas
and
and
xor
popa
addb
pop
jmp
ficoms
cld
and
add
dec
sub
add
js
xor
mov
add
packssdw
sub
mov
mov
sahf
cmp
sbb
mov
dec
and
out
jmp
in
mov
in
mov
or
ret
sub
cld
adc
cmovae
mov
loope
mov
or
or
flds
jle
std
scas
push
dec
mov
jp
imul
popa
addr16
adc
xchg
pop
stos
pop
into
dec
jno
jbe
imul
enter
jecxz
fidivl
cmp
nop
imul
mov
mov
pop
push
xchg
fistl
mov
insl
jnp
pushf
jmp
add
and
xor
add
jmp
xchg
fisubrl
jno
stos
mov
xor
nop
mov
xor
lock
jl
cltd
fadds
outsl
mov
jno
mov
mov
and
ljmp
clc
cmp
mov
cmovnp
and
test
mov
loopne
fiadds
sahf
mov
xchg
mov
jb
cmp
insb
popa
cmp
jnp
xlat
test
out
xchg
push
mov
push
les
mov
fwait
outsb
jo
popa
and
arpl
pop
mov
daa
jg
hlt
add
xchg
fsubrl
cmp
jp
xchg
jle
or
arpl
shlb
push
mov
repz
push
ret
cmp
subl
test
and
xchg
cmp
and
adc
or
mov
push
add
test
add
push
in
sub
lods
jnp
shll
add
pop
sub
mov
aad
adc
ljmp
mov
test
shrl
mov
fisubrl
push
insl
out
sbb
js
test
mov
or
dec
inc
fimull
jo
pushl
popa
mov
adc
sbb
xchg
pusha
jno
shll
mov
rorb
xchg
sbb
cmp
xlat
xor
add
scas
mov
xchg
mov
adc
push
test
push
mov
xchg
fdivs
pop
mov
fistpll
cmp
jl
adc
sbb
mov
or
stos
jb
add
ret
sub
in
jge,pt
in
fsub
and
cmp
dec
sbb
pop
daa
bound
push
mov
push
inc
sbb
mul
popa
mov
enter
and
cwtl
fdivrs
shrb
or
mov
inc
lcall
repz
cmp
jnp
mov
xor
jecxz
ret
pusha
out
mov
add
fwait
js
insl
jbe
das
push
mov
rcrb
jge
fsubrl
xor
dec
in
int3
ljmp
add
fidivs
in
xchg
insb
sbb
xor
or
sti
dec
inc
fwait
pop
in
push
es
je
cmp
repnz
cmc
pop
mov
mov
xor
xor
sub
jbe
adc
in
adcl
bound
mov
xor
andl
sub
jp
mov
in
add
sbb
adc
pop
xorl
fisttpll
jp
mov
xchg
sbb
lds
pop
out
mov
jecxz
push
pop
dec
jl
lock
sbb
add
xchg
ja
jge
xor
int
popf
pop
push
pop
inc
sti
push
push
aad
shll
xchg
add
cmp
add
dec
cltd
gs
js
jmp
jmp
mov
in
mov
mov
dec
lahf
ja
push
mov
icebp
nop
sbb
mov
loopne
addr16
jmp
xchg
jae
xlat
mov
xor
push
icebp
adc
add
popa
outsb
ret
rcll
mov
pop
pop
mov
mov
fstl
jns
iret
nop
pop
jns
cmp
push
mov
clc
or
sub
or
and
gs
into
les
ss
cltd
clc
or
xor
add
sti
dec
mov
cs
mov
add
ljmp
jp
dec
mov
sbb
dec
jle
push
mov
cmp
js
int3
inc
xor
jae
dec
lret
pop
sbb
dec
cmc
dec
call
rclb
pop
out
sub
test
mov
push
aad
fisttpl
pop
mov
outsl
hlt
push
rclb
pop
insb
shr
push
in
push
sbb
add
cltd
mov
iret
ret
sbb
out
pop
imul
add
adc
inc
imul
mov
scas
insl
mov
fsts
and
popa
xchg
lret
cmp
cmp
loope
and
add
xor
inc
push
mov
cli
mull
fs
and
xchg
je
adc
inc
jmp
icebp
enter
sub
mov
mov
ds
sbbl
adc
add
xor
dec
and
jecxz
xchg
inc
mov
push
bound
push
pop
out
xor
repnz
mov
jae
inc
jg
mov
ss
cmp
pop
xchg
sub
xor
stos
sub
sub
or
int3
scas
mov
jmp
xchg
cmp
cmp
and
push
xchg
daa
movsl
insl
std
ret
xchg
mov
mov
fcmovnbe
call
sub
dec
pop
cmc
clc
jno
jmp
clc
out
dec
cli
add
adc
cmp
jmp
mov
sub
xchg
xchg
test
jne
cwtl
insl
mov
fld
jno
call
mov
cltd
xchg
pop
jecxz
nop
xchg
sbb
outsb
xchg
mov
fdivp
xchg
outsb
sub
dec
mov
and
rolb
jp
dec
imul
cmp
sbb
insb
pop
cli
mov
and
ret
enter
lds
fimuls
shll
idivl
xchg
cmp
and
xor
lods
shll
xchg
lock
lret
mov
ljmp
leave
or
cwtl
adc
cmc
mov
dec
gs
push
insl
in
or
dec
mov
aad
sub
mov
adc
or
sbb
jne
gs
jmp
adc
mov
insl
sbb
into
shl
mov
in
imul
xchg
ret
arpl
aam
mov
jmp
add
push
push
leave
or
jecxz
adc
mov
aam
cmp
inc
loop
push
mov
xor
add
pop
or
cmp
push
jmp
cmc
enter
mov
out
sub
icebp
adc
xlat
mov
mov
mov
mov
sub
push
mov
adc
pop
out
lods
mov
jb
mov
loope
pop
and
xchg
jmp
or
xchg
xchg
idiv
bound
push
aas
jae
pop
outsl
loope
or
push
roll
xchg
movsl
fists
loopne
mov
clc
xor
outsl
in
fsts
dec
sbb
and
push
andl
push
mov
cli
push
inc
call
xor
test
lahf
mov
fcomp
lods
sbb
cs
push
mov
dec
jnp
stos
pop
imul
jecxz
pop
sub
ds
pop
sahf
push
lret
iret
test
and
mov
inc
sbb
ret
rclb
out
test
pop
add
inc
nop
push
sub
out
push
jge
or
jb
or
lock
nop
or
dec
mov
mov
repnz
test
mov
xchg
inc
inc
aaa
fcoms
repz
cli
xchg
shr
ret
and
lret
pusha
jo
xchg
mov
fsubp
cs
loopne
sub
test
addr16
fcom
pushf
int3
jnp
push
sarl
arpl
pop
xlat
testl
add
out
xchg
cmp
dec
test
adc
iret
das
lret
mov
jmp
aad
and
xchg
mov
dec
and
dec
xor
jl
imul
jno
xchg
jo
push
jb
sbb
repz
pop
movsl
adc
cmp
rep
sbb
add
sbb
es
fsubl
push
out
xchg
pop
int
jg
push
stc
lcall
ficoms
xchg
jnp
xor
or
int3
jns
mov
nop
pop
xor
inc
mov
jae
js
mov
paddusw
dec
push
test
xchg
cld
call
test
mov
mov
and
cld
frstor
stos
ficomps
xchg
adc
mov
pop
fs
push
int
sub
and
cltd
repnz
xor
pop
jno
xorb
shrl
rol
pusha
cmp
ffree
or
xchg
xlat
dec
and
pop
cwtl
inc
outsb
jae
mov
subl
or
cmp
sbbl
jp
mov
aam
scas
jge
lret
int
dec
xchg
fcompl
jbe
fldenv
mov
mov
push
inc
pop
adc
or
dec
inc
xor
mov
pop
sbb
push
movsb
aad
ja
or
mov
mov
and
in
std
lods
push
fs
aad
mov
inc
testl
sbb
inc
cmp
mov
xchg
mov
sub
or
fidivrl
add
xor
leave
repnz
push
xor
mov
stos
mulb
fldt
fnstcw
popa
xchg
jbe
out
xor
cmc
out
lea
sub
xchg
push
adc
jns
cltd
inc
loopne
cs
mov
roll
lods
xchg
lock
sbb
inc
je
addr16
insl
push
out
pop
and
adc
push
mov
cmp
or
xor
test
cmp
and
cmp
add
jg
pop
insl
pop
cmp
jae
testb
xchg
stos
out
xchg
ljmp
int3
jno
and
add
sar
mov
es
or
jg
stos
or
mov
push
and
andb
mov
lds
push
subb
cmpb
call
es
xor
jmp
mov
gs
in
pop
das
and
xor
pop
mov
xor
insl
sbbb
imul
jb
scas
dec
add
stc
jle
es
or
negb
cs
jns
cmp
lods
das
xchg
mov
adc
sti
mov
xor
xchg
jl
js
pop
xchg
push
imul
jne
jnp
imulb
mov
sbb
jl,pt
adc
adc
insb
dec
pop
and
or
pop
mov
es
cmp
push
fdivl
lcall
nop
push
jmp
arpl
inc
sbb
lods
insb
or
pop
push
fstpl
js
mov
push
or
cmp
cmp
shlb
fdivrl
xor
fsubl
or
adc
push
mov
or
arpl
jno
sbb
mov
xor
in
mov
fs
rcr
fisubrl
dec
pop
add
scas
and
adc
and
cmp
fbstp
pop
xchg
lea
mov
das
jp
mov
or
mov
push
cld
jmp
scas
incl
insb
out
lret
stos
pop
lock
mov
sbb
mov
mov
popf
adc
cmc
push
dec
inc
dec
inc
mov
xlat
lods
cli
jne
inc
nop
xchg
out
jmp
xor
mov
sub
or
cmp
xchg
inc
push
jne
fcompl
cltd
pop
add
push
rcr
adc
sub
sbb
pop
mov
and
pop
fistpll
pop
into
lods
jno
daa
imull
lods
ljmp
iret
pop
popa
add
push
icebp
mov
repz
repz
pop
add
addr16
push
xchg
sbb
pushf
pop
inc
adc
movsb
fs
mov
mov
or
mov
adc
xchg
roll
adcb
out
xor
cld
add
pop
ret
aad
and
loop
mov
adc
add
and
jg
jnp
mov
mov
mov
ret
mov
in
pop
push
sbb
push
pushf
cmp
pop
push
push
cmp
mov
adc
scas
jb
repz
leave
sub
les
pop
xchg
add
mov
enter
out
or
data16
ret
call
sbb
stos
test
jg
hlt
pop
pop
stos
iret
int
mov
lret
jne
push
inc
mov
lea
push
shrl
outsb
in
insb
and
jmp
xor
sub
enter
hlt
outsb
int3
dec
js
xchg
inc
outsl
loope
std
or
sahf
adc
push
ja
mov
roll
or
aam
scas
dec
push
dec
pop
aas
es
cmovb
xchg
cmp
rcrb
or
push
mov
cmc
xchg
jl
int
or
pop
pop
mov
mov
dec
dec
sub
aad
mov
mov
mov
cs
sub
xor
mov
cld
push
push
jns
pushf
mov
fisttpl
dec
test
jl
xchg
mov
xorb
fisubrs
xchg
xor
mov
popa
ds
and
xchg
nop
imul
cmc
mov
mov
outsl
loop
xchg
sahf
inc
sub
sub
push
push
pusha
mov
scas
idivb
cmpl
stos
in
sbb
push
sbb
shl
pop
xchg
sbb
push
pop
fwait
push
inc
push
aaa
stc
fwait
xchg
add
mov
stos
xchg
out
dec
jne
xchg
orb
mov
shr
add
jb
testb
mov
pop
sbb
mov
mov
aam
jg
jmp
popa
addr16
pop
lock
sub
push
mov
sub
push
ds
cwtl
lods
dec
xchg
mov
dec
repz
out
mov
sbb
mov
clc
loope
in
inc
int3
cmp
pop
adc
test
cmp
int
inc
cmp
lcall
sub
andb
pop
out
mov
aad
push
arpl
mov
sub
rolb
adc
mov
inc
in
in
jae
mov
sbb
gs
addr16
sbb
cmp
les
and
daa
xchg
push
mov
cmc
push
jnp
mov
mov
inc
clc
mov
pop
shrb
sub
fidivrs
cwtl
xor
mov
les
dec
outsl
mov
clc
jne
or
test
ss
mov
roll
clc
call
xor
lret
lea
ss
push
pop
loopne
shl
push
sbb
mov
arpl
mov
inc
push
jne
ds
test
testl
sbbl
pusha
xor
pop
scas
or
pop
das
insl
mov
in
mov
or
push
mov
mov
out
inc
dec
xchg
imulb
setno
dec
xchg
icebp
pop
dec
in
pop
fimull
adc
mov
sti
shll
mov
xor
rorb
dec
add
fcmove
and
sub
into
xor
cmp
push
shlb
shrl
push
xor
cld
mov
add
stos
pop
out
sub
ja
add
xacquire
incb
ja
lods
mov
xchg
std
jnp
negb
and
lods
jo
leave
outsl
dec
xor
mov
jl
mov
cmp
xchg
dec
in
pushf
sbb
dec
ljmp
cmp
inc
inc
jbe
fidivrs
adc
mov
in
jo
and
int
jecxz
mov
push
rorb
incl
jecxz
push
cmpsl
and
aad
cmp
sub
insb
stos
or
inc
inc
dec
pushf
xchg
mov
inc
xchg
jnp
js
aaa
push
movsl
xchg
or
cmc
outsb
cmp
mov
sub
sbb
dec
loop
push
sbb
cltd
xchg
pushf
mov
popf
jl
mov
imul
dec
push
sbb
push
repnz
jae
inc
fwait
popf
mov
pop
xchg
cmp
xor
nopl
popa
mov
stc
call
ss
and
mov
sbb
int
addb
xor
cmp
data16
in
push
jge
call
inc
or
adc
pop
mov
icebp
jmp
mov
mov
mov
cmp
cmp
mov
xchg
mov
inc
xor
pushf
xchg
add
cs
outsl
ficomps
cmpsb
push
mov
xchg
imul
adc
xchg
mov
jb
int
adc
jb
sti
and
pusha
push
out
shl
push
insl
je
ret
push
fcomps
mov
fistpl
cmp
adc
insl
add
inc
loopne
out
xchg
dec
bswap
xor
mov
cmpsb
dec
fldenv
add
xor
shrl
or
pop
cld
test
mov
movsb
dec
je
pop
int3
and
jmp
hlt
movsb
out
mov
pop
cmp
rol
test
xor
addr16
dec
repnz
push
bound
push
xchg
hlt
rclb
cmc
bound
stos
sub
jg
cwtl
and
add
cmp
xchg
fsts
dec
and
inc
or
arpl
shlb
push
fsubp
push
rclb
jo
cmp
xchg
mov
cld
mov
outsl
outsl
subl
xchg
cmp
adc
mov
icebp
dec
sbb
aas
or
sarw
prefetcht2
cmc
insb
xor
pusha
xchg
adc
pxor
mov
adcb
lds
jg
cwtl
sbb
xchg
add
dec
push
lret
into
or
pop
cmp
mov
daa
cmpsl
jge
cmp
lds
out
mov
mov
ljmp
mov
mov
sbb
mov
test
sub
push
sti
cs
jae
add
gs
sbb
test
lret
loope
iret
xlat
stc
ljmp
cs
imul
lcall
add
inc
fisubrs
addl
jmp
in
stos
or
pop
sub
hlt
pop
mov
sub
sahf
cmp
jl
in
icebp
adc
sbb
add
sarl
hlt
cmp
mov
fisttpll
and
out
inc
jle
xor
pusha
rcrb
mov
mov
dec
test
push
inc
jge
xor
sub
gs
lea
dec
push
push
sub
shl
test
js
inc
test
shrb
and
loopne
mov
cmp
movl
aam
xchg
xchg
fildl
and
outsl
xor
xor
pop
fadds
jb
push
cs
cwtl
or
in
cld
mov
mov
mov
pop
inc
into
aas
xor
cli
cmp
imul
fdivrl
or
xchg
cmp
call
push
add
cmp
fs
pop
push
fcompl
jae
adc
cltd
pop
rcll
mov
fisubrs
jbe
add
cmp
nop
pop
dec
aaa
cmp
repz
adc
dec
xor
div
or
fists
stos
jle
and
add
add
cmpb
mov
jb
imul
shl
out
adc
pop
jg
and
cmp
pop
lea
inc
pop
push
xor
cmp
les
fisubrs
add
sti
fbld
dec
dec
lret
fidivrl
ss
ja
ret
sub
mov
adc
push
cwtl
jle
adc
push
ja
or
mov
add
fsubs
dec
enter
mov
out
incb
xchg
sbb
repz
xlat
mov
clc
jmp
and
sbb
jns
pop
and
push
rcr
cmp
inc
nop
push
cmp
lret
sub
fimuls
add
inc
loope
subb
cli
jae
arpl
sbb
lds
push
popa
fdivrl
push
pop
mov
mov
test
push
lds
cmp
cmp
xor
or
pushf
gs
mov
lds
pop
loope
aaa
adc
xchg
add
jae
enter
inc
mov
pop
scas
aas
jl
or
xor
cmp
add
xchg
rolb
test
fldl
leave
loopne
and
iret
dec
pop
add
mov
addr16
clc
pop
pushf
fcmovnbe
or
dec
cmp
es
or
push
sbb
shlb
mov
xchg
in
enter
inc
sti
iret
jnp
sub
fstpt
dec
adc
jns
pop
push
cmp
and
add
mov
int3
sti
shl
cld
dec
pop
js
push
pop
or
cmp
aaa
mov
mov
push
cmp
xchg
add
clc
pop
popf
shrb
pop
hlt
pop
cmp
inc
fcomp
xchg
in
and
or
lea
mov
fadd
gs
out
adc
xor
fimull
mov
pop
sub
xchg
push
test
enter
xchg
sub
add
insl
in
loop
jg
dec
lods
bound
or
int3
in
loopne,pn
xchg
xor
inc
mov
mov
mov
dec
loope
int3
sub
mov
ja
movsb
and
std
dec
inc
jecxz
bound
bound
mov
sub
cli
pushl
pop
sub
jb
loop
xor
and
push
pop
or
inc
in
movsb
dec
hlt
js
pop
add
sbb
mov
imul
jmp
mov
or
out
lahf
dec
cltd
test
insb
dec
jne
or
xchg
aam
mov
cmp
out
orb
pop
popa
cltd
dec
xor
cmpsl
bound
inc
pop
fcmovne
es
idivb
fbld
inc
mov
xor
xchg
cs
jo
jle
fisttpl
xchg
movl
or
fs
jne
and
arpl
shrb
adc
ja
leave
int3
lret
cmp
cmp
pop
inc
outsb
xchg
mov
adc
stos
xor
mov
inc
icebp
in
xchg
sbb
mov
mov
and
dec
add
mov
bound
fnstenv
mov
cmp
test
xlat
mov
enter
pop
into
sbb
push
vmwrite
in
divl
jge
jb
xchg
cmp
test
xor
sub
cmp
hlt
fdivrl
push
bnd
or
adc
jecxz
push
jle
or
xchg
lds
cmp
rclb
lea
inc
pop
jp
cld
nop
push
sbb
int
jbe
inc
outsl
jne
push
pop
rcl
mov
cmpsl
imul
and
pop
repz
inc
js
mov
mov
pop
jno
xor
scas
ret
inc
cmc
pop
and
adc
in
fs
mov
sbb
push
ljmp
mov
sub
cmp
test
cmpsb
mov
adc
pop
lods
fidivs
aaa
add
leave
jl
incb
mov
andb
inc
push
daa
imul
pop
sbb
or
roll
push
rcrb
pop
pop
cmp
mov
cld
lock
xchg
cmp
push
cld
fistpl
mov
sahf
xor
repz
std
sbb
test
sub
ja
cli
sub
insl
lock
in
out
mov
in
mov
fwait
inc
cld
fldt
or
inc
rcrl
cmc
inc
push
cmp
out
sbb
sub
shrb
fidivs
pop
sarb
adc
cmpsb
sub
adc
push
xor
push
cld
test
fistl
mov
inc
fwait
pushf
pop
insb
adcb
cmp
add
mov
ja
cmc
into
jge
mov
scas
or
mov
xchg
out
mov
cli
in
adc
mov
call
cmp
mov
xor
sahf
je
inc
mov
enter
cmpsl
add
ret
mov
add
or
sub
je
out
inc
mov
rcll
testl
cmp
in
mov
rcll
add
sbb
adc
xor
call
mov
xor
jno
dec
add
out
and
xchg
sub
ficoms
push
movsl
repz
and
and
push
in
stos
mov
scas
repz
sbb
gs
sbb
ja
xchg
inc
insb
idivl
add
dec
adc
cmpsl
and
lock
or
inc
xchg
stos
pop
sarb
and
arpl
mov
sbb
or
fsts
or
lcall
push
jns
sti
or
shrb
xchg
lock
andl
ja
jbe
mov
sar
dec
pop
addr16
in
fucomp
ret
jnp
cld
push
mov
in
cmp
sbb
push
xchg
add
and
shlb
jb
push
ret
jmp
mov
jne
mov
out
mov
mov
sbb
mov
clc
add
sbb
cmpsl
pop
cltd
scas
fmulp
in
fs
test
imul
in
fldcw
es
aam
mov
add
mov
clc
in
ss
shlb
jnp
decb
mov
jecxz
cli
push
add
incb
or
movsb
and
jg
mov
movsl
xorl
lcall
and
sub
adc
and
mov
cmp
push
lods
jbe
pop
jp
jae
mov
inc
ja
mov
mov
ret
jmpw
and
shrb
popf
mov
pop
fwait
cmp
std
cs
add
int
movsl
dec
inc
xor
les
lret
loopne
jns
pop
inc
es
idivl
mov
outsb
imul
add
enter
movsl
repz
add
arpl
mov
lea
jbe
orb
cmp
lods
add
nop
mov
iret
test
dec
xchg
or
sub
int
fidivs
fincstp
mov
inc
test
add
or
push
mov
mov
enter
out
inc
mov
sub
jo
fldenv
add
mov
mov
daa
repnz
cs
xchg
test
and
or
cs
pop
or
notl
out
in
repnz
push
lock
fcom
sub
sbb
xor
stc
aad
cmp
adc
sbb
bound
push
fistps
pop
icebp
rcl
adc
lahf
pop
shlb
lahf
mov
ljmp
or
ss
fs
ss
sarb
neg
icebp
mov
adc
rol
pop
mov
pop
pop
jne
push
inc
arpl
jb
or
xchg
lret
sbb
xor
sbb
fnstsw
pusha
dec
xorb
gs
mov
xchg
cmc
mov
arpl
push
add
xchg
out
std
test
out
stos
cmp
xchg
fs
sub
or
or
jecxz
std
mov
repz
ror
dec
fildl
cmp
mov
xchg
in
adc
fadds
or
or
shl
mov
add
jbe
inc
push
mov
mov
lds
aam
std
cmpsb
cmp
stos
push
jnp
lea
mov
imul
xor
mov
in
and
mov
ljmp
add
inc
adc
enter
mov
mov
jp
pop
imul
cmpb
cmp
mov
xor
pop
dec
mov
dec
mov
dec
int3
cmc
sbb
jb
call
inc
push
jo
jae
xchg
fimuls
int
push
imul
dec
and
inc
xor
xchg
pop
shll
jp
jne
dec
adc
arpl
mov
sbb
leave
sub
mov
cld
pusha
xchg
push
xchg
jp
mov
mov
jne
xchg
mov
push
inc
dec
adc
cmpsl
push
popa
pop
sbb
imul
jbe
and
bound
jnp
nop
push
cmp
lret
lret
fldl
pusha
xchg
ljmp
pop
ja
cmpsl
or
or
mov
out
loopne
mov
in
xor
mov
daa
das
inc
arpl
dec
mov
add
mov
mov
repnz
adc
pop
add
lods
or
pop
xlat
lods
jno
cmove
arpl
xchg
data16
into
je
dec
xchg
and
cmp
sub
in
inc
adc
add
pop
adc
xor
loope
xlat
jge
pop
jns
test
sub
bound
mov
pushw
pop
pop
inc
mov
inc
push
pop
in
ss
jg
xor
lock
inc
xchg
xor
mov
and
jnp
mov
pushf
add
inc
adc
cmp
jbe
dec
add
adc
out
or
jne
movsb
ljmp
dec
hlt
inc
bound
cmpsl
test
and
add
xchg
mov
sub
cmpsl
or
test
inc
add
iret
dec
aam
push
xor
or
mov
mov
cwtl
sbb
inc
sbb
add
jp
repz
push
mov
sarl
imul
imul
mov
test
shrl
icebp
popa
stos
test
cmp
and
test
push
xor
inc
scas
das
xor
movsl
push
repnz
lea
out
mov
lret
sub
xor
cmp
cltd
lock
pop
pop
call
sbb
push
mov
xchg
rcrl
mov
xchg
mov
cmp
fstpt
push
cmp
inc
iret
test
jge
in
scas
inc
movsb
test
xchg
add
fninit
xorl
adc
push
jge
movsl
fcompl
push
notl
fistpl
push
sbb
fsts
dec
inc
jecxz
sti
loope
loop
jle
outsl
das
push
jb
fdivrl
inc
dec
inc
into
rclb
inc
jle
aad
jo
das
aaa
dec
mov
dec
mov
mov
cmp
in
jl
jb
adc
mov
add
xor
pop
das
xchg
es
or
jnp
fcoml
and
mov
jo
cmp
mov
mov
push
sub
imul
cltd
dec
sti
xchg
decb
data16
mov
in
and
mov
jo
pop
mov
xchg
push
xor
popf
sbb
cld
inc
out
jbe
das
in
push
out
andb
mov
stos
rorb
imul
mov
jp
fildl
xor
push
lret
mov
stc
cmpsl
into
cmp
imul
cwtl
testl
mov
rcrb
adc
pusha
mov
shll
shrl
sti
xchg
loop
mov
xor
enter
dec
dec
mov
aas
xor
jecxz
int3
or
jae
sbb
pop
mov
inc
pop
mov
popa
or
push
sbb
jbe
hlt
push
fidivrl
movsl
pop
adc
movsb
lods
test
lds
cmpsl
in
popa
idivb
sbb
and
lock
pop
js
or
repz
xchg
les
push
cmpsl
jb
mov
out
adc
push
in
loop
ret
pop
jb
and
lods
test
add
mov
clc
or
dec
or
loope
js
cwtl
rol
stos
sub
js
cli
mov
mov
dec
js
cmpsb
mov
loope
cmc
cld
je
and
cmp
outsl
das
das
cmpsl
mov
mov
mov
outsl
sahf
loope
ss
scas
adc
mov
jno
call
inc
insl
mov
add
cmp
xor
inc
jmp
outsb
add
pop
pop
push
mov
cmp
popa
aam
dec
nop
test
cmp
xlat
mov
mov
and
rcll
icebp
inc
int3
leave
clc
pop
lods
arpl
or
add
std
sub
mull
pop
pop
jo
push
adc
pop
dec
xchg
icebp
int
fdivl
out
and
addps
add
xchg
push
ds
push
pop
shrb
pop
enter
int
test
xor
adc
mov
dec
mov
outsb
bswap
aad
push
test
lock
and
mov
fisubrl
sub
mov
jnp
lret
cld
adc
aaa
int
ja
sbb
fstl
jae
jle
in
or
in
lcall
insl
cltd
movsl
aas
adc
int3
adc
push
std
out
sbb
or
and
pop
push
cltd
movsb
ficoms
jg
mov
jae
ljmp
mov
cmp
cmp
fiaddl
or
lahf
xchg
cmc
pop
sti
divl
movl
sbbl
cltd
inc
ja
mov
jmp
adc
dec
sub
out
popf
push
je
stos
jmp
jns
outsl
andl
dec
iret
and
add
push
inc
popf
cmpsl
loopne
in
ja
stos
fldcw
stc
mov
mov
cmp
xchg
ret
sbb
es
and
iret
and
cs
aas
inc
or
xchg
daa
sub
or
shll
mov
pop
mov
jne
lds
lcall
sbb
add
cmpsl
leave
dec
jl
mov
ja
mov
mov
test
cwtl
and
ret
incl
rcr
and
mov
cld
out
jbe
cld
ds
sti
imul
scas
jno
jno
pop
iret
data16
stos
push
rcrb
shrb
in
cltd
out
or
inc
adc
loop
or
inc
cmp
xchg
mov
cli
mov
in
sbb
fnstsw
and
enter
dec
cmpsl
leave
out
jmp
xchg
mov
mov
data16
mov
mov
mov
lods
mov
dec
fisttps
jmp
jecxz
cmpsl
push
test
aad
cmp
js
test
test
lds
xchg
pop
push
fadds
pop
inc
cltd
adc
sbb
aad
cs
push
and
hlt
jecxz
cmpsb
xchg
inc
das
add
test
shrb
das
mov
int3
int
push
iret
dec
aas
xchg
jne
push
cli
xor
dec
test
nop
gs
pop
cs
fistps
pop
xor
ficoms
jp
jle
cli
dec
push
stc
imul
or
ds
sarb
into
popf
mov
cmp
sbb
mov
std
out
inc
push
sub
stc
jp
cli
mov
pop
inc
fadds
adc
mov
adc
movsb
enter
lret
mov
mov
mov
mov
addl
adc
mov
imul
adc
push
test
xor
push
mov
jmp
leave
xor
ds
lcall
movsb
popl
les
sbb
dec
stos
shll
mov
rolb
stos
shlb
add
pop
sub
vfrczps
push
stc
pop
mov
sub
add
xlat
mov
ret
mov
push
mov
mov
or
imul
lret
popl
icebp
xchg
xor
dec
push
out
mov
aam
inc
in
sarl
fisubs
or
xor
push
imul
mov
negl
dec
or
dec
repnz
sub
imul
mov
fdiv
lahf
cmp
popf
cmpsb
sbb
pop
sub
inc
or
pop
cmp
lahf
sbb
pushf
sub
out
sbb
and
rorb
fnstcw
or
mov
sub
lret
mov
loopne
jns
xor
jmp
into
jl
movsb
in
and
inc
nop
incb
jbe
inc
sarb
aad
jg
adc
cs
cld
lret
mov
outsb
rolw
add
inc
jmp
add
jne
add
pop
fistl
cli
inc
adc
dec
inc
adc
pusha
enter
lock
int3
ret
cwtl
fstpt
mov
call
mov
cmp
jp
mov
pop
xchg
repz
mov
xlat
daa
adc
lods
pop
xor
insl
inc
inc
fwait
jnp
pop
inc
push
addl
fistps
popf
aam
or
cltd
sbb
adc
inc
jl
popa
sbb
dec
call
bsf
jl
push
inc
mov
xchg
pop
or
cmc
inc
gs
mov
bound
les
lock
cwtl
sub
push
insl
sub
and
cltd
mov
lret
pop
ljmp
movsb
add
popa
dec
std
pop
xchg
xlat
leave
mov
out
mov
push
pushf
mov
daa
addl
or
inc
lods
push
pop
inc
aas
xchg
mov
mov
sub
jecxz
lahf
mov
mov
xor
mov
sbb
idivl
and
outsb
jno
les
inc
sti
out
cmp
ret
hlt
jns
add
sbb
pop
loopne
sbb
xchg
inc
adc
ffreep
add
jecxz
xor
daa
test
rol
fidivs
add
out
not
sti
insl
pop
jae
cmp
test
sbb
rcrb
jle
leave
lcall
xchg
pop
popa
adc
or
dec
adc
fnstcw
xor
cltd
lods
push
mov
testb
std
sub
cmp
shlb
pop
iret
pop
jge
mov
adc
ret
mov
jb
testl
push
mov
xchg
out
ja
sub
jo
jmp
leave
call
inc
fsts
xchg
wbinvd
lea
or
push
sahf
push
add
jg
call
pop
dec
jp
inc
imul
ja
flds
pop
mov
add
fisttps
sub
int
adcl
imul
pushf
int3
dec
das
int3
xchg
mov
add
repnz
mov
sbb
stc
fisubs
mov
popf
movsl
sbb
outsl
pop
sbb
sbb
das
pop
addr16
out
fs
mov
popa
stos
cmp
jecxz
out
jo
mov
adc
mov
and
inc
cwtl
mov
pop
mov
push
inc
outsb
rcrb
aad
scas
or
cltd
aad
test
cmp
add
jo
repz
push
mov
xchg
mov
arpl
repnz
mov
pushw
push
lret
popf
mov
mov
and
pop
clc
out
arpl
or
sahf
push
sarl
adc
jge
mov
or
loop
jecxz
or
sbb
adc
xchg
repnz
ds
or
sbbb
lods
xchg
sub
imul
js
rcrl
sbb
arpl
jle
stc
inc
add
jbe
outsl
ficoms
mov
scas
dec
lret
test
test
dec
pop
scas
mov
mov
subb
push
dec
fildl
jmp
lea
inc
jae
mov
loope
shl
das
sub
sub
xor
xchg
cltd
stos
ret
imul
fiaddl
in
dec
sub
inc
ss
es
xor
in
and
mov
arpl
les
dec
ss
cwtl
adcb
or
jge
lods
iret
lods
std
jge,pn
mov
jmp
adc
adc
pop
jl
cmp
mov
sub
inc
shll
xchg
pop
pop
add
add
testl
mov
cmp
xor
sti
pushf
mov
cmp
jl
xchg
cltd
push
jg
mov
jmp
xchg
jecxz
je
xor
cs
adc
mov
mov
jg
lea
popf
stc
adc
leave
mov
xchg
hlt
or
mov
mov
inc
lods
ds
mov
mov
inc
scas
mov
xor
mov
sar
xor
and
jnp
rcrb
dec
mov
iret
sub
jnp
xor
pop
sbb
cmp
insl
adc
sbb
repz
mov
xor
cltd
out
roll
mov
mov
mov
fldcw
or
fs
test
scas
adc
push
negb
mov
int3
repz
dec
pop
push
js
xchg
jmp
ja
push
and
sub
cmpsl
pop
mov
mov
je
adc
mov
pop
cmp
rcr
mov
xchg
jb
mov
call
cli
mull
das
ds
mov
daa
mov
aad
jg
pop
stos
and
cmp
fs
jmp
dec
bound
les
negb
add
rcrl
cld
mulb
pop
cmp
jmp
mov
idiv
scas
mov
push
inc
leave
aam
imul
mov
test
repz
fwait
testl
dec
mov
xchg
pop
fdivrl
das
add
cli
jne
push
xchg
in
ds
add
mov
xor
pushf
test
xchg
adc
xlat
popa
aad
pushf
mov
fistl
movsb
stc
into
cli
jo
jno
or
out
ficomps
bound
cmp
push
pop
test
dec
jnp
ret
or
adc
subl
xchg
xor
add
or
push
mov
outsl
xor
jle
test
stos
sub
dec
jmp
bound
mov
mov
leave
outsb
shr
mov
std
xlat
std
sbb
addr16
fimuls
xchg
sbb
xchg
addr16
jae
std
and
es
dec
test
dec
inc
imul
jmp
outsl
pop
xchg
push
fwait
sbb
test
sbbl
lahf
mov
imul
pusha
sbb
lds
push
mov
mov
fcoml
adc
sbb
into
xlat
jmp
clc
arpl
ds
lret
test
or
or
dec
mov
sub
lahf
cmp
sahf
rep
pop
xchg
inc
scas
push
jb
icebp
add
ret
ret
out
xlat
push
and
sahf
sub
xor
jecxz
and
jg
mov
popf
or
mov
xchg
fisubl
lret
cli
stos
adc
movsl
or
jg
mov
aaa
je
ljmp
xchg
and
sub
scas
push
fiadds
xchg
pop
xchg
dec
cmpsb
push
aas
shrb
loopne
xchg
dec
test
scas
js
and
xor
je
and
rolb
xor
sahf
inc
push
divb
fs
loopne
jp
es
or
fcoms
faddl
jecxz
sahf
dec
cmp
lds
into
mulps
add
lods
add
mov
xchg
xchg
hlt
clc
fistpll
pusha
jecxz
loope
iret
sub
dec
xchg
mov
loope
xor
or
shlb
andb
mov
lods
js
sub
aad
mov
lret
mov
lcall
mov
into
sbb
mov
fs
push
adc
cmp
jns
call
arpl
icebp
arpl
test
lds
xchg
push
pop
ds
into
inc
testl
dec
ja
loop
ja
jb
lods
xchg
mov
cwtl
imul
dec
sub
adc
push
fisubrl
jno
sbb
ds
mov
and
jge
dec
push
pop
jg
lods
xor
enter
loope
ds
mov
ss
int
fists
mov
inc
jl
pusha
or
sub
push
lcall
popf
xor
jae
imul
pop
movsl
xor
es
adc
test
push
sti
pop
mov
push
cltd
xor
sbb
pop
lock
push
cmpsl
mov
adc
stc
and
and
aas
push
mov
fnstcw
push
jl
cmp
mov
xor
test
push
iret
xchg
mov
mov
aam
ss
rcl
push
mov
in
sarb
adc
adc
addr16
adc
jb
xor
lret
mov
imul
inc
mov
jbe
mov
ret
out
or
repnz
faddl
pushf
mov
movsb
cmp
jp
sbb
es
xor
xchg
pop
outsb
sbb
cmpsb
rcrb
pusha
xor
mov
mov
adc
aad
aaa
mov
push
push
adc
and
jns
add
notl
xchg
cmp
pop
lods
sbb
add
dec
jo
enter
and
and
cli
xor
sbb
loope
lods
das
lcall
jo
sub
mov
iret
xor
mov
fcmovu
outsb
popa
cltd
loope
adc
inc
xchg
dec
add
testl
pusha
pop
push
pusha
bound
stos
inc
mov
movsb
push
ss
and
dec
imul
lods
rcl
xchg
pop
cmpl
jb
insl
push
mov
jle
sbb
popf
mov
jle
jb
imul
in
lds
fbld
ljmp
adc
xchg
popf
stos
dec
push
shr
int
push
pop
adc
test
mov
cmp
mov
std
popa
inc
sysexit
mov
clc
dec
push
es
lcall
push
in
and
es
mov
popa
sub
or
pop
imul
test
dec
push
add
js
enter
mov
popl
sub
aam
sbb
jae
and
aaa
push
add
movsl
sbb
test
pop
call
and
xchg
and
dec
gs
mov
xchg
inc
ljmp
in
jnp
sti
and
xor
add
xor
xchg
sub
push
movsb
fsubrl
fidivs
rclb
sbb
pop
vmovntps
loop
cltd
cmp
mov
dec
mov
negb
dec
ds
stos
dec
sub
mov
cmp
push
fildl
push
inc
cmp
rol
xor
int
jno
cmpsl
cmp
les
pop
in
scas
int
lahf
cmp
add
in
cmp
pop
inc
xor
test
repnz
xor
aaa
xor
xor
cmc
iret
sbb
sbbb
mov
dec
xchg
pushf
outsb
xor
bound
add
scas
shlb
jl
push
cwtl
sahf
or
cs
jne
out
xchg
push
test
push
add
pop
adc
mov
cmp
dec
xor
xchg
mov
shll
xor
dec
mov
insl
xor
xchg
push
jmp
popf
mov
daa
mov
fcmovbe
jle
je
fiaddl
popl
pushf
ss
sub
push
outsl
inc
mov
and
mov
and
dec
int3
icebp
or
push
ret
xor
inc
cmpsl
xchg
mov
jg
pop
cmpsb
jl
cwtl
add
fnstsw
call
push
into
and
adc
jmp
ret
jbe
mov
inc
jg
enter
pop
aad
push
push
mov
dec
dec
jl
pop
scas
xchg
divb
xchg
pop
repz
movsl
cmp
mov
daa
or
adcb
int
adc
lcall
leave
lcall
cmp
add
repnz
jno
jo
sbb
bound
mov
jl
xor
push
xor
add
sti
mov
sbb
push
dec
xor
nop
mov
mov
iret
jo
cmp
imul
adc
xchg
mov
pushf
in
ret
cmpl
fs
push
inc
test
lret
repz
mov
js
sbb
sub
shl
xor
jg
and
stos
clc
inc
insl
scas
arpl
cmp
loope
lods
iret
adc
call
xor
push
popa
scas
les
adc
xchg
clc
jl
std
pushf
cmpsb
iret
imul
pop
shr
sbb
mov
jp
aam
add
or
mov
sub
and
sub
je
dec
cs
add
call
mov
pop
mov
outsl
pop
pop
rcll
add
xchg
inc
out
addr16
popf
faddl
and
inc
test
mov
sub
adc
jmp
mov
jp
gs
popa
inc
pop
and
push
add
leave
push
popa
and
xor
inc
je
idivb
and
jle
mov
aad
adc
inc
cli
data16
push
mov
mov
test
pushf
push
ffree
mov
pop
fwait
add
aam
iret
xor
lods
add
push
lock
sahf
leave
sbb
ds
je
or
xor
xchg
outsb
insl
ljmp
jg
dec
push
enter
xchg
xchg
jmp
dec
xchg
fs
jmp
test
lret
push
jmp
cs
mov
or
outsl
cmp
mov
xor
sub
loop
ss
out
push
mov
xor
dec
push
adc
cld
das
lea
sub
and
xchg
into
pop
add
lock
bndstx
hlt
xchg
lret
neg
mov
xchg
add
lock
in
ror
imul
in
cmp
pop
push
aaa
sarb
dec
push
ss
sub
and
pop
mov
int
adc
xor
or
ja
pop
or
push
adc
lock
push
or
sahf
in
cmp
jae
push
aas
xlat
jnp
mov
jnp
addr16
shlb
cmp
movsb
pop
mov
shll
jmp
dec
push
test
in
outsl
lds
add
pop
in
andl
mov
xor
cld
xor
fstpt
nop
pop
ret
scas
mov
xor
nop
bswap
pop
gs
adc
stos
jnp
jmp
and
and
fwait
push
mov
arpl
mov
inc
push
push
push
mov
cmp
jo
or
mov
sub
out
sbb
and
lret
bound
mov
testb
mov
mov
ja
jl
insb
and
push
mov
adc
pop
aad
movsl
xlat
cltd
sub
in
xchg
inc
and
pop
roll
cmp
jl
push
clc
mov
jl
push
fsubs
aas
or
mov
jae
sbbb
aas
inc
push
mov
pushf
push
stos
sub
push
and
out
pusha
sub
movzwl
cwtl
aaa
sbb
push
jl
ja
dec
cmp
mov
les
push
lcall
outsb
push
push
das
push
or
and
test
push
fcmovnb
int3
in
sbb
lods
test
or
idivb
js
jno
mov
call
in
pop
ss
pushf
loope
iret
popa
mov
mov
push
jo
mov
daa
aad
push
dec
mov
xchg
rclb
adc
mov
int
pop
sahf
adc
aaa
aaa
adc
sti
hlt
and
out
jo
cld
push
cmpsl
mov
leave
jo
jge
call
sub
scas
inc
mov
xor
jae
in
popf
nop
outsl
loop
xchg
out
stos
fidivrl
lods
es
mov
mov
xchg
test
or
insl
xchg
mov
fwait
divb
mov
mov
jno
mov
xchg
push
dec
or
mov
sbb
movsb
aam
fnsave
pushf
je
inc
dec
mov
push
xchg
das
mov
cli
mov
hlt
dec
push
fsubl
mov
push
cli
xchg
sbb
insb
push
add
sbbl
adc
or
push
sub
inc
mov
in
pop
xor
dec
loopne
jo
and
sbb
test
xor
mov
pop
loope
shr
stos
cmp
cmp
xor
adc
xor
jnp
stc
pop
jecxz
js
imul
cmc
push
jl
cltd
adc
and
aam
pop
int3
push
mov
orl
nop
jne,pn
mov
add
xchg
and
push
loopne
xor
adc
xchg
imul
lret
push
mov
push
scas
pop
inc
dec
in
xchg
ja
in
push
imul
xchg
and
push
test
lret
iret
fs
dec
movsb
enter
sahf
mov
clc
out
push
and
mov
arpl
fsubrl
xchg
cmp
scas
insb
fwait
stc
repnz
fldt
and
mov
fidivs
das
dec
inc
js
sub
not
shl
cmp
call
aas
or
js
popa
sub
xchg
jecxz
jae
outsb
mov
movsl
arpl
mov
add
or
frstor
cmp
mov
aaa
inc
or
outsl
dec
mov
jnp
sbb
sbb
cmp
mov
xlat
jmp
divb
test
xchg
sub
pop
or
das
adc
outsl
jge
lods
sarl
jne
test
es
pop
fsubp
sub
add
and
outsl
sahf
adc
rolb
add
mov
popa
jae
xor
in
push
mov
fs
pop
nop
adc
pop
testl
sub
cwtl
dec
stos
xor
mov
jge
cmp
dec
xor
sub
pcmpeqd
ficomps
mov
test
shll
insl
imul
add
fwait
int
mov
aam
push
sbb
xchg
sub
enter
fwait
outsb
lds
clc
and
lret
and
cmp
jl
mov
sbb
in
or
stc
outsb
aaa
mov
std
or
or
cmovo
dec
jae
cltd
push
jo
pop
xor
cmpsl
cmp
sti
mul
jns
mov
mov
lret
xor
pop
mov
psrlq
aad
std
jp
mov
test
push
loopne
push
push
jl
mov
jno
dec
push
or
and
pop
call
add
loop
adc
xlat
or
mov
jnp
xor
or
push
xchg
and
adc
jb
sbb
xor
pushf
loope
incb
xlat
mov
testb
add
mov
lcall
dec
jo
movsl
cltd
mov
jbe
mov
addr16
pop
jg
lret
stc
cltd
xchg
fists
mov
cmp
js
cmp
jl
add
ret
mov
mov
dec
pop
mov
cmp
cmp
pop
scas
mov
push
push
ja
in
inc
pop
aad
mov
or
mov
dec
cmp
movsl
pop
outsl
jecxz
pusha
cmp
aad
xor
roll
mov
mov
negb
mov
fadds
fdivrs
add
scas
inc
mov
lods
and
xchg
xchg
xor
test
dec
fldl
popa
sbb
mov
icebp
iret
or
lock
pop
adc
pop
push
dec
data16
mov
test
jecxz
rol
out
imul
dec
adc
mov
jge
pop
test
jecxz
test
sbb
lret
mov
jns
aad
or
ds
aas
mov
mov
push
add
or
sub
nop
push
or
rclb
push
mov
movsl
shrl
mov
inc
leave
inc
shll
and
jno
jmp
push
and
out
pop
sbb
sbb
mov
or
mov
inc
lahf
add
jg
push
outsl
mov
xor
add
push
cmpsl
and
inc
jns
lcall
cltd
push
cltd
jbe
mov
lds
push
and
or
fs
or
push
sarb
test
dec
sub
or
xor
popa
ror
dec
dec
pop
push
ja
add
xchg
call
push
jnp
lcall
push
sti
popf
xchg
cli
inc
popf
stc
leave
movsb
dec
shll
stc
mov
pop
stos
inc
add
inc
mov
mov
fdivrl
test
or
popf
mov
wbinvd
aas
mov
jbe
and
das
cmp
push
outsl
and
jmp
adc
aad
out
push
xor
inc
mov
dec
dec
repnz
dec
or
imul
xchg
outsl
and
xchg
notl
inc
and
fstl
xor
leave
std
les
cmp
lret
dec
mov
mov
xchg
lcall
test
xor
sti
push
mov
into
sahf
pop
push
jne
movsb
xor
dec
enter
rorl
xorl
xor
and
cmp
in
aas
sti
inc
in
jo
pushf
and
jge
cmc
jmp
or
xor
xor
adc
push
mov
or
ss
xchg
jmp
fstps
or
pop
add
arpl
mov
lret
lds
cli
mov
ficompl
cmp
cmpsl
into
and
daa
push
push
popf
xor
call
pop
pop
or
xchg
pop
out
mov
js
mov
mov
inc
rcll
fdivrs
stos
jo
jmp
ret
and
mov
lret
in
sti
push
inc
jb
scas
pop
or
pusha
imul
in
and
xor
rclb
xchg
int
popf
into
mov
push
xlat
mov
mov
xor
mov
sahf
in
fadds
sub
inc
xchg
mov
hlt
fdivrl
push
out
shll
mov
inc
mov
in
jecxz
sbb
and
lock
ret
mov
add
je
jnp
add
lahf
test
dec
inc
cltd
andb
mov
pop
xor
repnz
jo
xchg
addr16
dec
insb
aas
pop
scas
shl
mov
pop
mov
pop
xor
add
in
xchg
lahf
mov
add
xchg
addr16
out
xchg
je
cmp
push
lds
inc
xor
mov
rcrl
testb
inc
mov
cwtl
outsl
lret
sub
xlat
jmp
jmp
xchg
xchg
loopne
mov
inc
mov
mov
cmp
sub
add
cmpsl
jae
pop
and
sahf
mov
xchg
pop
ret
int
push
in
das
insb
add
push
pop
sbb
bound
popa
xchg
scas
sahf
leave
xchg
jno
orb
add
cli
pop
hlt
dec
repz
lock
outsb
sub
loopne
sbb
xchg
cmp
sub
lcall
xchg
bound
scas
cmp
cmpsl
cs
mov
daa
in
int3
dec
imulb
pushw
jae
cmp
imul
arpl
adc
push
arpl
dec
dec
out
pop
push
sarl
mov
ja
adc
loopne
stos
push
rcll
pusha
xchg
daa
add
mov
movsl
adc
pop
xor
jp
pop
and
or
dec
and
dec
pop
imulb
sub
clc
loop
rcl
xchg
in
out
aaa
and
icebp
jmp
xlat
dec
inc
popf
inc
jb
inc
xchg
dec
push
pushf
lcall
sbb
jecxz
pushf
test
fidivl
imul
mov
add
jecxz
ret
mov
aaa
dec
test
fsts
nop
xor
push
inc
mov
clc
lods
push
mov
xor
pushf
cli
dec
jae
mov
adc
mov
push
loopne
movsb
cmp
lds
movsl
imul
add
mov
cmp
jns
hlt
inc
jno
mov
inc
mov
jne
inc
xlat
jle
and
dec
inc
stc
std
cmp
addr16
cmp
adc
pushf
mov
fidivrl
cmpsb
cmp
pop
jmp
ffree
sbb
aam
sub
mov
imul
popf
mov
sbb
pop
adc
sub
fldcw
ret
aaa
adc
push
mov
insl
pop
filds
lods
mov
leave
das
or
xchg
push
xlat
enter
fsubr
pop
xchg
iret
jg
xchg
leave
repz
pop
pop
sub
add
xor
arpl
xor
or
sbb
sbb
sbb
or
pushf
mov
xchg
test
push
pop
xchg
adc
in
jae
es
cli
xor
add
dec
push
jb
mov
lock
es
mov
mov
shr
clc
dec
mov
outsb
ficompl
fildl
and
pop
sbb
or
dec
sbb
add
popa
sub
in
jmp
ds
js
das
mov
mov
sbb
inc
push
sbb
outsb
std
jp
lock
scas
add
jbe
in
xor
mov
jmp
adc
shll
aam
lret
adc
cmp
xchg
cmp
sti
sub
mov
cltd
push
das
aam
dec
jno
scas
jmp
daa
aad
sub
enter
jge
lret
sub
nop
fwait
add
lret
inc
in
xor
shlb
jge
ficomps
fwait
push
outsl
std
scas
repnz
cmp
repz
dec
mov
push
pop
sub
in
or
inc
test
and
jl
mov
add
push
mov
cmc
jmp
push
push
les
add
and
loope
loopne
cmp
sbb
cmpl
call
pop
push
fs
lds
adc
and
and
jg
sbb
inc
in
nop
add
add
adc
fsub
adc
aad
sbb
xor
pushf
cmp
es
mov
adc
sub
push
ss
or
punpckhbw
cmpsb
ror
aas
jmp
in
xor
xchg
inc
xor
fldl
adc
test
jne
fucomp
scas
add
mov
insb
xchg
sbb
mov
inc
daa
cld
sbb
jbe
std
test
pop
int3
xor
adc
fs
ljmp
pop
smsw
or
shlb
mov
sbb
jecxz
cltd
cli
mov
add
cmp
les
adc
mov
xor
movsb
mov
and
pop
inc
cs
fs
fbstp
loop
pushf
imulb
sbb
and
inc
pusha
decb
dec
dec
inc
outsb
cltd
dec
fdivl
pop
and
cli
adc
mov
xchg
mov
dec
mov
es
scas
add
icebp
rcll
xchg
outsb
and
and
or
leave
aaa
icebp
pop
cmpl
lock
pop
push
mov
inc
fdivs
and
push
sub
jg
fucomp
ret
adc
push
lahf
sbb
jns
and
xor
sub
inc
lahf
or
dec
push
stc
hlt
js
in
je
std
fdivl
addr16
rorb
sub
decb
mov
jmp
push
cli
inc
push
add
inc
and
and
inc
or
add
test
enter
push
loopne
rcrb
daa
aam
cmp
lock
popa
lods
jbe
xor
mov
lds
sub
addl
jp
cmp
adc
or
repz
mov
pushf
cmp
dec
int3
add
and
sub
int3
lret
fisubrs
sub
shrb
aaa
int
jo
xchg
outsb
adc
js
jns
jne
cmpsb
lea
jb
dec
dec
or
lds
inc
out
dec
mov
clc
rcr
mov
fadds
and
es
aam
mov
sahf
mov
add
test
and
andl
repz
int
mov
outsb
jns
movsl
dec
dec
lods
push
je
nop
mov
cmpsl
lret
fdivl
cs
mov
jns
add
cmove
out
pop
outsb
popf
pop
idivb
subb
aaa
xor
adc
and
jecxz
sar
lea
sbb
xchg
rclb
sub
jno
jne
jmp
gs
je
pushf
stos
jle
sbb
into
sbb
fs
lret
shll
xor
sbb
repnz
es
dec
dec
out
jns
add
xchg
out
cmp
pop
jle
push
mov
inc
lret
jp
jmp
sti
mov
rorb
push
sbb
jle
jmp
pop
inc
fdivrs
inc
add
loop
push
push
std
mov
in
push
jo
or
leave
pop
rcr
test
pusha
arpl
enter
mov
or
push
hlt
fstps
lock
pop
int3
scas
mov
dec
scas
jecxz
dec
lcall
adc
add
dec
sub
sbb
mov
out
xchg
lret
pop
push
dec
std
add
sbb
mov
fsubrl
mov
xorl
jg
and
es
xor
inc
pop
xchg
push
xor
enter
aad
scas
inc
or
mov
jecxz
add
pop
sub
es
bound
push
mov
lock
enter
je
fdivr
mov
insb
les
sub
out
rcll
sbb
ss
out
mov
jge
pop
adcl
les
ja
in
push
rcll
shrl
insl
mov
cmp
jo
ret
mov
std
ret
dec
cmp
out
insb
mov
pop
out
imul
movsb
xchg
mov
push
repnz
sub
popf
jnp
sbb
loopne
push
and
xor
inc
movsl
iret
sbb
enter
mov
xchg
pop
aas
xor
icebp
push
inc
and
movq
pop
push
mov
push
inc
sarl
test
dec
loope
inc
rol
mov
sarl
lea
jb
sub
push
lea
sub
test
cmp
mov
jl
nop
sub
fildl
jno
add
inc
or
bound
mov
jl
mov
orb
lds
dec
mov
inc
imul
pop
dec
mov
mov
mov
das
jb
ret
inc
aas
mov
stos
loope
shr
mov
inc
divl
xor
sub
int3
push
lods
js
lahf
or
insb
cmpsl
nop
jmp
xor
push
or
in
add
ret
and
sahf
sti
mov
orb
mov
addl
cmp
mov
icebp
lock
push
cmp
es
or
xor
mov
inc
cld
push
and
sbb
jecxz
arpl
xchg
cmc
or
bound
out
pop
fsubs
dec
sahf
lret
push
inc
lock
ret
dec
sbb
xchg
lock
jmp
mov
mov
cmpsb
lret
xor
ret
mov
fwait
sbb
or
cli
jb
shll
pop
lods
lods
sti
and
hlt
daa
jne
adc
jmp
fsubs
pcmpeqb
jae
cli
fcoms
or
push
jns
push
pushf
and
adc
in
icebp
push
adc
stc
cmp
jp
push
pushf
mov
dec
out
gs
repnz
jo
aaa
jno
inc
inc
test
xor
sbb
sub
rol
add
mov
sub
xor
push
inc
dec
dec
cmpsb
call
ss
pop
mov
and
les
xchg
xchg
mov
loope
cmp
out
sub
sub
loop
cmp
push
jecxz
jns
jnp
jmp
mov
dec
or
push
sbb
xchg
lret
dec
pop
cld
mov
cli
pop
in
pop
pop
inc
push
xchg
push
pushf
mov
ja
sbb
repz
ja
fstps
cmp
or
pop
clc
and
mov
push
push
pop
dec
in
lods
mov
push
xor
je
sbbb
mov
jecxz
push
add
repz
sub
mov
xor
imulb
pop
inc
sahf
loop
into
mov
sub
enter
cli
jge
jnp
leave
sub
add
cli
repnz
call
popf
inc
cltd
mov
mov
push
add
xor
dec
iret
or
mov
cmp
sbb
mov
dec
push
lret
xchg
outsl
fsubl
ljmp
add
mov
mov
jae
sbb
adc
fs
insl
mov
xor
sti
push
filds
dec
lods
jg
int
mov
jp
xor
dec
xchg
sbb
adc
leave
or
mov
test
inc
pop
ret
mov
dec
je
add
sub
jb
addr16
rcll
out
jno
test
pop
das
mov
mov
pop
pop
out
cli
out
mov
es
enter
in
xchg
add
daa
pusha
leave
xor
push
sbb
iret
iret
lock
adc
sbb
mov
outsl
js
sahf
push
stos
lret
dec
lahf
adc
and
push
cmpsw
or
mov
jb
shlb
inc
add
loopne
mov
push
push
sbb
xor
pop
pop
test
jbe
jmp
mov
jecxz
mov
sub
push
add
aaa
in
mov
adc
pushl
add
leave
imul
fbld
mov
inc
add
cmp
xchg
clc
pop
ljmp
push
xchg
push
or
fnstcw
or
mov
add
dec
cmc
mov
aaa
mov
push
xor
orl
aas
in
ss
xchg
mov
jp
stos
jns
and
xchg
dec
mul
inc
sbb
push
and
sbb
aaa
clc
mulb
stos
dec
or
lret
cmp
cli
hlt
mov
enter
add
arpl
push
aas
xchg
sub
fdivrl
loopne
clc
pushf
push
es
sub
pop
mov
sti
lahf
inc
jno
iret
jno
sub
add
int
out
ja
addl
scas
push
call
outsl
mov
ja
lock
call
cmp
push
ror
cmp
aas
loopne
push
inc
add
lods
gs
add
push
stos
out
sub
or
das
insl
sti
cld
push
pop
jg
lea
shrl
lods
sub
ljmp
inc
push
and
rorb
out
push
imul
insb
or
cmp
cmp
in
lds
or
pop
cs
push
inc
and
pop
adc
stc
mov
and
scas
loop
inc
imul
xorl
cs
xchg
mov
or
jmp
jo
scas
sub
pusha
movsl
idivl
fsubr
rcrl
ds
ret
testl
add
test
and
jmp
jge
int3
pop
inc
cmp
sbb
sub
rcll
and
test
pusha
xchg
inc
lock
xchg
sbb
insb
xchg
gs
and
mov
xchg
ret
sub
push
mov
and
mov
push
mov
inc
adc
mov
sub
fisubs
in
xor
push
sbb
inc
dec
rol
ds
pop
mov
pushf
mov
pop
xchg
loope
int
pop
push
jmp
xchg
push
in
sub
mov
addr16
in
mov
pop
jbe
pushl
or
or
out
push
out
pop
dec
loope
add
xor
mov
jmp
cwtl
fnstcw
ljmp
ret
in
out
loopne
mov
push
je
sahf
jp
ljmp
xchg
setne
and
lds
cmpsl
popa
out
mov
push
pop
pop
xor
jb
data16
int
scas
fimuls
call
shlb
adc
jnp
ret
ja
xor
sub
mov
inc
inc
mov
pop
and
or
addl
push
mov
fildll
call
sub
and
xchg
xchg
ds
in
add
add
data16
push
ljmp
ret
dec
mov
pop
bnd
or
adc
ljmp
sub
adc
jne
xchg
dec
lcall
stos
js
int3
sub
in
stc
cmp
xor
add
divb
mov
mov
fbstp
insl
outsb
loopne
gs
push
cmpsb
adc
subb
lret
clc
xchg
xchg
xor
dec
mov
push
enter
sub
sub
outsb
insl
mov
mov
adc
and
sbb
out
mov
jle
bound
aaa
bound
icebp
mov
fdivr
jnp
xchg
stos
imul
xchg
pushf
xor
std
imul
in
in
mov
xchg
outsb
xor
stos
xlat
jmp
aas
js
pop
pop
and
fisttps
adc
negl
push
adc
lcall
aad
mov
mov
daa
sahf
addb
mov
sahf
out
nop
push
stos
cmp
and
rorb
mov
scas
cltd
add
push
cmp
sub
imul
repnz
pop
add
pop
nop
and
sub
or
push
inc
sub
out
das
jnp
xchg
outsb
and
sub
mov
xchg
xlat
out
fsubrl
mov
inc
ficoms
pop
mov
mov
ja
inc
ror
jo
mov
outsb
xchg
int3
mov
xor
std
sub
scas
pop
insb
nop
mov
inc
mov
and
pushf
mov
roll
or
push
inc
cmpl
mov
inc
xor
jns
rclb
ds
sub
sti
xchg
bsf
sbb
fisttps
mov
xchg
sbb
sbb
dec
fstpt
cmp
orl
sbb
dec
lods
mov
inc
mov
mov
inc
cltd
aas
cltd
roll
mov
add
inc
and
mov
xchg
sbb
repnz
loopne
ds
dec
mov
cmp
es
scas
int
stos
shl
pop
cli
cmp
or
nop
sbb
jl
cmovnp
sub
out
int
or
mov
in
ret
jne
pop
mov
add
push
add
push
xor
xchg
movsb
incb
cmp
in
aam
testb
or
mov
inc
or
addr16
dec
mov
cmpsb
loope
jge
scas
movsb
cmp
icebp
push
mov
mov
and
pop
push
pop
or
out
xchg
lret
mov
mov
aaa
decl
xor
cmp
push
mov
dec
push
jle
inc
sbbl
jb
jle
fstpt
lcall
addr16
inc
lret
xchg
lcall
test
mov
gs
xchg
lock
ja
mov
std
push
and
daa
es
xchg
in
cmpsl
inc
fisubrs
cmc
mov
inc
inc
ret
sub
cli
cmc
xor
aas
mov
and
fmull
pop
xchg
lock
cwtl
and
daa
test
pop
pop
nop
mov
ds
adc
adcb
xor
pop
je
lret
jp
lds
jbe
xchg
scas
je
aad
push
sahf
cwtl
adc
into
inc
mov
mov
pop
aad
jnp
push
sbb
bound
pushf
jecxz
ret
and
ficoms
dec
push
ds
ss
add
and
and
adc
daa
push
dec
adc
cmpsl
xchg
xor
pop
xchg
in
mov
mov
lock
jns
test
and
stos
ret
std
sbb
out
loope
insb
cwtl
jne
lods
add
scas
mov
sbb
add
arpl
cs
push
negb
sbb
movsb
or
gs
dec
test
out
and
or
dec
lock
lods
mov
leave
lea
loopne
or
xchg
push
jns
jp
mov
inc
sub
movsb
repz
fldt
sbb
adc
jg
scas
repnz
jl
cmp
jns
into
cmp
popf
sbb
adc
cld
aam
or
cs
push
outsl
in
mov
pop
sub
mov
mov
loopne
lods
fidivs
add
jne
icebp
fwait
pop
dec
push
es
in
jbe
jb
xchg
jno
add
insl
sub
test
stos
repnz
cmp
push
xor
adc
xor
mov
arpl
ds
cmpsb
pop
notl
scas
icebp
rclb
sbbl
lods
mov
sbbl
push
and
lret
in
daa
bound
mov
jg
daa
cmpb
out
and
in
jno
scas
in
mov
add
pusha
addl
mov
arpl
bound
add
inc
cmc
repz
xorb
xor
cmpl
test
lcall
or
jmp
hlt
xchg
sbb
fimull
decb
cmp
add
repz
sub
mov
inc
outsb
mov
repnz
popf
and
push
icebp
adc
jnp
dec
push
arpl
push
mov
repnz
inc
add
push
lret
out
je
pop
inc
jb
cmp
dec
test
int
mov
jecxz
imul
inc
stc
les
inc
addl
pop
dec
push
and
and
rcl
and
lea
loop
lea
mov
sbb
dec
inc
cmp
outsb
mov
cwtl
idivb
mov
dec
call
pop
mov
or
mov
xor
ja
std
xchg
outsb
jnp
or
ljmp
mov
fsubrl
and
fdiv
daa
xor
mov
or
out
cmpsl
daa
adc
mov
mov
pop
push
inc
add
lea
cs
xchg
test
fisubrs
sbb
pop
push
inc
clc
cmpsl
cmp
xor
jae,pt
imul
mov
sub
sub
insb
insl
adc
mov
test
nop
fisttpll
cmp
std
mov
sbb
in
inc
sbb
es
push
mov
add
adc
cmc
xchg
das
mov
pop
fiadds
xchg
sub
jo
mov
iret
andb
jmp
jg
pop
mov
andb
cli
cs
or
mov
sub
loopne
call
popf
enter
push
enter
add
lock
rolb
push
inc
ret
push
xor
ret
dec
data16
xchg
lea
or
inc
sub
mov
pop
imull
adc
jmp
xchg
sub
pusha
mov
je
add
push
pop
fisttpl
dec
popa
mov
or
insb
xchg
enter
add
int
xlat
addr16
mov
or
xorl
or
mov
jmp
adc
fs
dec
pop
insl
je
aam
push
xor
adc
enter
xchg
outsl
xchg
aaa
iret
cmp
cmp
filds
mov
sbb
pop
jp
push
int3
jae
rorl
inc
pusha
fwait
mov
push
test
ljmp
stc
pop
add
xor
jmp
xor
sub
push
or
mov
inc
mov
add
popa
cmp
testb
mov
test
lret
mov
mov
dec
xor
imul
pop
test
jl
mov
jecxz
data16
mov
or
sbb
jg,pn
pushf
jl
or
mov
imul
cmpsb
loopne
mov
mov
aas
push
mov
push
shlb
subl
test
clc
movsb
shll
jnp
inc
outsl
dec
mov
xor
and
in
stos
mov
out
inc
cmp
fdiv
dec
adc
add
nop
jbe
pop
push
mov
aam
mov
and
mov
cwtl
aad
movsb
mov
mov
rclb
push
mov
cmpsl
adc
ret
leave
mov
ror
cld
lahf
test
aad
sbbb
rclb
je
xor
dec
push
pop
in
inc
cmp
push
push
pop
inc
fnstcw
mov
push
pop
jl,pn
in
daa
jp
jge
in
cmc
xor
shl
cmp
sbb
dec
push
cli
inc
fs
jb
cmc
cs
popl
sub
outsl
je
into
push
dec
sbb
pop
dec
sbb
jecxz
mov
or
cmp
int3
andb
and
push
mov
mov
shll
push
cmp
iret
ja
iret
mov
lret
dec
movsb
push
stos
mov
mov
scas
sub
idivl
xor
mov
mov
push
stc
inc
sub
inc
mov
cmp
or
mov
and
inc
lock
repz
jg
sbb
stos
ljmp
add
and
cmpsl
xor
mov
test
push
mov
or
push
jge
scas
xchg
test
or
xchg
stos
insb
test
mov
dec
adc
fcmovne
adc
cmp
cmpl
mov
cmpsl
add
add
inc
and
loop
pop
ret
addr16
outsb
inc
mov
push
push
cli
sbb
test
pop
pop
lret
aam
cmpsb
js
mov
test
push
push
xorb
test
xchg
pop
imul
dec
jb
fld
je
mov
movsl
mov
push
daa
add
lahf
jno
xlat
test
into
add
imul
jo
jp
cmp
jg
scas
mov
mov
sbb
mov
iret
aam
testl
ds
call
push
insl
movsb
xchg
pop
out
push
pop
into
or
push
adc
jp
ret
mov
ljmp
xlat
inc
sub
sbb
shlb
cmp
mov
pushf
jo,pn
inc
stc
cmp
hlt
movsl
and
call
out
push
sbb
test
incb
movsb
pop
jns
jns
mov
ljmp
lods
xchg
sbb
in
mov
xchg
adcl
jb
movsl
pop
hlt
dec
rorl
enter
js
roll
xor
push
mov
and
inc
call
xchg
xchg
cwtl
mov
push
stos
movsb
add
adc
dec
xchg
push
lea
sub
xor
lods
mov
mov
icebp
jbe
mov
inc
cmp
mov
mov
cmp
xor
int3
fimull
cmpsl
mov
ret
xchg
mov
sbb
insb
xor
and
int3
movsl
inc
adc
loopne
pop
in
ljmp
xchg
fisubs
sub
jmp
or
aam
sub
nop
pop
iret
sbb
and
bound
scas
mov
mov
test
out
clc
insb
push
mov
nop
movsl
sahf
ds
xor
call
aaa
out
jecxz
popf
ret
push
lods
test
test
addr16
xor
mov
cs
sahf
cwtl
in
aad
adc
push
push
mov
das
mov
fadd
inc
incl
inc
stc
daa
dec
popf
mov
es
hlt
lret
repz
stos
rcrb
jne
hlt
movsl
add
js
sub
xchg
out
and
mov
and
jae
jns
cmp
mov
orb
xor
inc
jle
out
xor
xor
shll
xorb
cmovs
pop
paddq
add
rolb
inc
loop
xchg
lret
mov
mov
pop
repz
jecxz
cli
push
outsl
ljmp
test
flds
mov
call
lock
mov
xchg
xchg
inc
je
lock
push
jl
push
repnz
sbb
mov
pusha
rcl
mov
or
jns
lahf
clc
bound
fmuls
rclb
call
cli
or
pshufw
mov
lock
push
or
mov
stos
push
xor
xor
aas
push
in
pop
shl
lret
xchg
jle
aam
xor
fs
insl
jnp
sub
and
mov
mov
xor
frstor
sbb
imul
icebp
mov
mov
xlat
mov
xchg
aas
mov
ss
jno
aaa
cmpsl
xchg
sub
sbbb
aaa
push
rcr
xlat
jno
lock
push
addl
rcrb
in
cmp
sub
pop
mov
fmuls
or
xor
pop
jne
ret
add
adc
push
or
xchg
and
dec
nop
jg
es
pushf
adc
repnz
pop
jns
sbb
in
lock
sub
add
das
ficompl
scas
xor
mov
out
and
stos
sub
add
popf
add
and
mov
data16
mov
dec
inc
adc
out
sub
test
adc
test
xchg
popf
cli
scas
leave
les
xchg
ljmp
adc
push
mov
fs
cli
push
or
gs
lcall
test
sub
iret
push
test
iret
cmpsb
repz
loope
addr16
and
pop
out
cpuid
xchg
psubw
das
shll
enter
push
out
cmp
pop
adcb
mov
push
daa
aad
add
popa
negl
popf
iret
in
push
pop
jae
out
movsl
int
cmp
xchg
jp
inc
je
sbb
mov
push
lcall
xchg
inc
int3
or
ret
int3
pop
hlt
and
sti
mov
cmp
xlat
xor
mov
mov
in
mov
dec
dec
mov
xor
mov
sbb
addr16
outsb
cmpsb
imul
jmp
jo
jecxz
aaa
pop
mov
xchg
sbb
popf
imul
fld1
mov
subb
out
jmp
fwait
gs
incl
fidivrs
shll
test
jae
dec
lods
outsl
lahf
mov
fwait
scas
fiadds
pop
push
mov
pop
adc
std
xor
rcrb
mov
sub
pop
ja
popa
mov
clc
push
push
or
add
sbb
push
clc
gs
idiv
loopne
lods
out
out
in
push
popl
mov
mov
ret
test
cmp
and
mov
popf
fisttpl
shlb
dec
sbb
aaa
shrl
jns
add
push
push
and
out
inc
jle
mov
mov
mov
push
or
mov
subb
mov
mov
je
mov
xlat
outsb
movsb
stos
adc
sub
addr16
xchg
pop
fisubrl
repnz
inc
ds
popf
ds
jae
sub
icebp
and
inc
imul
and
jbe
sbb
mov
mov
mov
leave
push
mov
push
fisttpll
push
test
cmp
cmp
lds
dec
push
push
jno
pop
fistpl
mov
push
mov
sub
lods
je
test
dec
iret
je
cli
or
sbb
enter
sahf
iret
test
push
lahf
movsb
movsl
into
push
inc
ds
lods
jae
cltd
loop
lahf
inc
mov
pop
es
pop
jmp
divl
and
aaa
lock
xor
cltd
pop
test
adc
push
cmp
in
xchg
push
rcrl
add
pop
mov
scas
frstor
lods
fcoml
jge
push
cs
sarb
dec
sub
pop
jg
loop
adc
xor
loope
addb
ret
xchg
addr16
jge
mov
mov
repz
inc
imul
fadd
adc
sbb
sbb
mov
mov
mov
push
mov
faddl
xor
mov
jb
loopne
idivl
cmp
xchg
sbb
mov
mov
mov
xchg
adc
scas
mov
mov
negb
pop
push
add
repz
out
ss
jle
mov
push
ja
sub
sbb
imul
push
sub
jp
lcall
sbb
cmp
stos
mov
fidivrl
cld
push
push
adc
call
rorl
mov
cltd
or
loopne
push
inc
dec
divb
or
xor
in
mov
jecxz
test
cmp
shll
jne
loope
js
mov
pop
cld
add
xor
imul
xchg
inc
shrl
sbb
sahf
push
mov
pop
mov
pop
cmpsl
cmp
dec
cwtl
add
in
inc
stos
sti
dec
rsm
test
add
lret
add
adcb
lret
sbb
in
jb
das
outsb
out
xor
xchg
sub
and
xchg
imul
stc
mov
call
iret
das
in
adc
aam
inc
and
xor
inc
cmp
push
mov
push
fwait
push
cmp
xor
jae
popf
pop
cmpsl
scas
mov
push
sub
out
mov
lods
js
lea
je
das
mov
lods
stos
jno
fisubrl
sbb
das
push
or
mov
push
fcmovu
scas
or
nop
xchg
mov
out
data16
insl
and
sti
aaa
and
push
je
sub
cmp
xchg
sub
mov
xchg
cmpsl
or
fsubrp
lahf
insl
cmc
not
sbb
je
test
dec
and
aas
orl
fldt
cld
inc
stc
cld
xor
add
out
adc
mov
in
cmp
pop
nop
test
xchg
pop
xor
sub
int
les
sub
adc
mov
fmull
add
push
add
or
aad
jl
sbb
sti
dec
jecxz
mov
cli
mov
cmp
jmp
mov
push
loopne
pop
in
fstpl
mov
shrb
jnp
push
lock
mov
mov
dec
cmp
fcoml
fistpl
nop
shlb
shl
dec
push
out
in
add
lods
sbb
jae
adc
fsubrs
mov
cmp
sbb
ja
test
ficompl
lcall
arpl
xchg
inc
xchg
or
push
cmp
push
fnsave
adc
add
mov
int
xchg
std
xor
xor
jmp
repnz
mov
cmpb
pop
jnp
orb
cld
iret
mov
test
aas
dec
adc
push
push
and
xchg
clc
hlt
lods
adcl
lahf
lds
shlb
jbe
icebp
es
ss
mov
fdivp
arpl
dec
test
test
inc
sbb
xor
xor
add
addr16
shlb
and
int
jecxz
lahf
je
add
js
or
inc
xchg
and
dec
jle
sub
sub
add
movsb
xlat
out
jge
or
ss
cmp
ljmp
mov
in
push
cmp
mov
mov
push
and
sahf
call
call
add
int
fisttpl
mov
adc
out
fs
lds
pop
xchg
pop
les
add
mov
loop
and
scas
cltd
sbbl
jb
int3
arpl
sbb
add
pop
sbb
lahf
pop
out
clc
inc
mov
cmc
scas
std
out
pop
dec
jo
addr16
dec
jno
xchg
cmp
lret
push
adc
sbb
loope
mov
pop
arpl
addl
loop
pop
adc
leave
cmpsb
sub
jmp
mov
xchg
xchg
jmp
mov
inc
fstps
jne
lret
mov
push
or
jno
aad
and
ffreep
jecxz
cltd
dec
adc
pop
push
test
add
jae
xchg
mov
and
jle
cmp
sub
insb
or
fidivrs
dec
push
xor
rcr
or
xchg
sub
xchg
cmpsb
push
addr16
push
cltd
inc
loope
push
in
push
mov
scas
push
lret
adc
dec
mov
repnz
imul
clc
sub
jnp
push
dec
out
ja
add
push
xchg
fsubl
int3
jne
out
sbb
inc
cmp
jle
arpl
jnp
fs
jae
cmp
add
or
data16
cmp
xchg
cmp
fisubl
jnp
cmpsb
popa
cltd
sub
popf
pop
fucomi
test
cmp
sbb
xchg
loope
pop
mov
sub
adc
les
lds
jae
mov
mov
bound
or
loop
adc
adc
cld
std
push
pop
mov
pop
dec
jle
mov
repz
insl
xor
outsl
jl
fiaddl
xlat
or
sbb
adc
fcomp
jnp
and
fsubrs
or
sti
loopne
cs
pinsrw
in
push
sti
in
mov
jp
mov
into
inc
mov
or
ficompl
push
and
mov
or
outsb
sub
add
cmp
pop
adc
jae
mov
sbb
mov
sbb
shr
jecxz
rcrl
xchg
leave
hlt
mov
push
xor
out
or
mov
cmp
or
xor
je
iret
pop
pushf
pop
pop
lret
sub
rcr
testl
pop
imul
sahf
fcoms
sahf
xorb
aaa
or
sar
or
mov
xchg
xchg
iret
fldenv
inc
inc
es
sub
dec
and
in
inc
dec
aas
mov
sub
mov
stos
jmp
lea
aas
jle
cld
int3
icebp
popf
mov
or
lds
or
dec
mov
inc
sbb
xchg
xchg
into
int3
lea
push
adc
sub
sti
sbbb
fcomps
and
shrb
les
mov
xchg
add
push
jg
shlb
out
cld
gs
ljmp
pop
and
mov
mov
jae
hlt
jl
pushf
push
ret
fidivs
jp
mov
repnz
cmpsb
adc
or
mov
mov
jb
xor
clc
aam
cmp
mov
add
sub
fidivl
ffreep
mov
shl
lcall
xchg
outsl
push
mov
and
inc
adc
in
mov
psubusb
shll
pop
xchg
push
lcall
aam
cwtl
push
andb
xchg
sarb
std
cwtl
out
jmp
cld
xlat
imul
pop
les
leave
movsb
fcompl
sbb
in
sbb
popf
cmpsb
mov
inc
rcl
cmp
out
fsubl
out
sub
mov
sbb
and
sbb
xchg
cwtl
mov
inc
iret
mov
fdivp
stos
aaa
inc
mov
aam
pop
dec
inc
dec
jecxz
push
or
sbb
arpl
js
bound
xor
in
sub
out
jo
lret
add
mov
gs
adc
popa
jns
addr16
inc
loop
in
jge
mov
pop
dec
xchg
xor
dec
adc
cmp
or
and
imul
inc
inc
lret
xor
ja
adc
push
xchg
pop
outsl
or
test
enter
mov
shrl
fsts
push
ja
add
sub
jle
je
lcall
stos
sbbb
aam
out
es
mov
sub
jno
mov
push
inc
in
push
arpl
outsb
call
sub
inc
sub
cmp
test
testl
shlb
cmpl
dec
lcall
or
rdpmc
cld
inc
aaa
out
add
sub
js
ss
or
into
outsb
fucomi
pop
mov
jmp
inc
sbb
loop
scas
test
and
insb
lods
inc
adc
sbb
sbbb
ljmp
inc
mov
jmp
lcall
mov
mov
popf
sub
add
mov
cmp
out
aad
inc
int3
mov
lcall
mov
fdivrp
test
imul
mov
xchg
fstpt
fists
outsl
adc
loop
or
pop
push
inc
test
jg
rcrb
cmpsb
mov
inc
mov
gs
in
xor
and
loopne
gs
cmc
enter
mov
sub
and
lock
jl
or
lret
shrl
imul
fisttpl
fisubs
repnz
cmpsb
adc
outsl
cmp
or
aad
out
push
sbb
sarl
cmc
jnp
mov
ljmp
out
fdivr
rcll
or
jl
mov
daa
and
in
and
pushaw
loop
dec
mov
sahf
nop
test
mov
emms
cmp
sub
sub
loopne
cmp
mov
mov
inc
rolb
mov
adc
mov
pop
pop
lahf
daa
in
repz
xchg
mov
lahf
aam
cli
add
aas
jmp
ja
xor
sti
outsb
pop
xchg
int
or
ficoml
xchg
xchg
mov
mov
jl
push
pop
nop
rcll
xor
idivl
repz
mov
daa
and
sub
push
shrl
pushf
mov
adc
loop
add
or
dec
mov
sbb
jp
aas
jns
repnz
fistps
push
add
push
mov
add
mov
push
repnz
fld
push
add
ss
out
jmp
hlt
enter
adc
in
js
adcl
cmc
daa
repz
imul
fwait
adc
stos
cld
iretw
scas
xchg
fstl
pop
sbb
cmc
jb
es
lret
sbb
jno
into
arpl
sbb
xchg
mov
add
pop
sub
sbb
and
xchg
mov
mov
inc
pop
dec
xor
out
jno
jnp
xlat
or
xchg
jne
jo
loope
xor
push
push
rcr
cmpsb
lds
scas
push
out
ljmp
add
jg
loopne
flds
cs
out
ljmp
xchg
test
mov
mov
repnz
adc
sbb
outsb
mov
adc
lret
jns
add
jecxz
lods
mov
ret
xchg
mov
inc
sbb
jne
push
int
popa
pop
ret
cwtl
fstpl
cmp
out
notb
sti
daa
insl
push
dec
or
inc
leave
scas
mov
hlt
mov
out
fcmovnu
cli
mov
mov
xor
push
scas
push
daa
sahf
push
cltd
neg
mov
outsl
mov
les
adc
stc
mov
shlb
popf
xor
sbb
adc
adc
das
cmp
scas
push
movsl
dec
xchg
and
cli
jnp
fs
mov
mov
mov
imul
call
nop
mov
sub
shlb
aad
cmp
sbb
mov
out
inc
out
jecxz
aaa
daa
cmp
or
mov
ljmp
xchg
xor
repz
mov
movsl
push
mov
xor
mov
test
push
xlat
cmpsb
mov
imul
scas
inc
cs
jnp
sbb
pusha
inc
cmp
push
test
lock
jnp
fistpl
loopne
fimull
lods
xor
aam
sub
loope
mov
mov
sbb
sarb
mov
lods
push
mov
idivl
add
rorb
jp
dec
adc
cmc
xchg
std
icebp
mov
push
mov
cmpsl
ret
mov
cmp
mov
test
sarl
mov
xor
lds
and
ret
cmp
out
inc
enter
adc
int3
gs
inc
les
mov
enter
mov
out
inc
push
imul
std
pop
cmc
test
in
xchg
push
inc
fnstsw
inc
cmc
nop
pop
fwait
movsb
sbb
push
imul
jecxz
jo
xchg
fucomp
hlt
inc
stos
popl
adc
out
dec
sbb
add
in
pop
xor
add
and
dec
and
sbb
int
scas
push
roll
ljmp
enter
mov
cmpsl
bound
xorb
inc
sub
add
mov
vmaxsd
jl
das
lds
outsb
sub
ds
xlat
cmp
les
roll
or
pop
pop
insl
clc
xchg
jge
or
add
aam
mov
mov
pop
fnsave
sub
icebp
jle
cmp
jno
aam
mov
and
mov
iret
in
loopne
mov
push
in
daa
mov
and
xchg
add
int
scas
and
lea
push
mov
pop
mov
stc
mov
data16
and
test
lahf
in
cld
rorl
mov
add
mov
insl
cwtl
fisubl
mov
adc
out
cmp
sbb
sbb
adc
and
cwtl
mov
negb
xchg
push
bound
bound
jo
mov
add
test
or
mov
add
sbb
add
mov
lods
push
ds
sub
inc
xlat
push
inc
jae
dec
xchg
adc
sbb
xchg
xchg
jo
mov
pushf
xor
sub
sarb
inc
jle
dec
out
nop
loope
cltd
inc
outsb
dec
push
fcmovnb
mov
xorl
lods
mov
push
iret
mov
repz
xor
int3
out
xor
sahf
pop
mov
adc
adc
and
and
push
xor
jno
out
xor
adc
aam
cmc
pop
cmpsb
hlt
stc
outsb
outsl
xor
and
enter
add
or
adc
push
adc
sti
ja
dec
mov
push
insl
cmp
jg
mov
jmp
cmp
outsb
nop
dec
rorl
jno
pusha
mov
mov
mov
jmp
pop
pmulhw
movsb
and
dec
les
jl
out
daa
pusha
nop
jnp
pop
inc
push
jp
push
jge
lret
icebp
lock
lods
xlat
dec
xchg
ficoml
icebp
aad
lcall
aad
lea
mov
xchg
push
lcall
mov
ja
add
mov
mov
mov
enter
jg
fistl
lock
mov
lods
and
xchg
push
iret
cli
int3
mov
sub
mov
or
test
or
xchg
inc
js
pop
es
imul
fstps
in
loope
test
movsl
test
js
gs
mov
sti
ret
fisubrl
push
inc
ds
int3
hlt
outsb
dec
push
mov
dec
add
jbe
cmp
jecxz
mov
xlat
lret
xor
test
icebp
add
jae
push
movl
fmuls
in
pop
hlt
adc
cmp
movsl
push
lock
fwait
iret
hlt
ret
jns
pushf
aad
jge
xchg
mov
adc
and
repnz
adc
rclb
cmp
mov
into
or
jl
insl
loop
push
clc
mov
in
dec
jae
setp
inc
sbb
mov
addr16
xchg
add
scas
cmp
jbe
adc
sbb
ret
ja
pusha
fucom
test
push
test
pop
pusha
pop
fmull
and
and
inc
sbb
sub
xor
fdivr
mov
inc
mov
inc
hlt
lret
adcl
push
inc
scas
je
push
popa
mov
scas
inc
sub
out
jmp
stos
pop
test
adc
inc
in
pop
aam
or
test
test
dec
movsl
add
adc
daa
mov
push
je
lret
fwait
sbb
cmc
push
insl
jecxz
adc
popa
ljmp
dec
xor
xchg
mov
addl
and
cwtl
jo
gs
jmp
sub
lgs
mov
xchg
cmp
adc
inc
cmp
stos
pop
jp
xchg
mov
maskmovq
mull
or
xchg
cmp
leave
adc
enter
aam
lcall
or
mov
push
dec
ret
sub
push
cwtl
popa
mov
push
push
jb
gs
scas
and
jp
lock
dec
jns
pop
xor
mov
mov
push
sbb
push
scas
out
stos
lea
adc
add
mov
mov
pop
in
int
jg
inc
loop
lahf
xlat
pusha
fcomps
dec
dec
arpl
mov
or
pop
mov
mov
mov
cli
lods
outsb
jo
mov
mov
sub
and
xchg
xor
mov
in
lret
mov
pop
or
mov
mov
test
xor
push
pushf
addr16
outsb
jle
push
push
mov
lods
xchg
fwait
push
mov
sbb
rorl
jmp
das
loope
dec
sub
outsl
lahf
sbb
bound
push
fmulp
enter
lcall
jo
mov
mov
adc
pop
cmp
shrl
imul
stos
into
inc
fdivrs
imul
notl
adc
int
les
mov
sub
adc
jno
pop
jmp
dec
insl
adc
dec
lea
xor
sub
test
jb
movsl
sbb
xchg
mov
arpl
ret
adc
xchg
sahf
les
xchg
jecxz
xorb
aaa
pushf
adc
lods
mov
out
add
xchg
mov
adc
sub
pop
test
mov
mov
jb
jnp
push
in
add
push
inc
addr16
xor
cwtl
outsb
adc
call
cmp
int3
push
sub
push
in
shll
rorl
in
pop
loope
outsl
adc
inc
jno
cmp
int3
adc
sbb
adc
mov
popf
sub
stos
xor
mov
dec
test
test
insl
mov
jl
pop
stc
test
pop
divb
sub
loopne,pt
mov
cltd
sti
dec
mov
repnz
mov
imul
movsb
jmp
movsl
xchg
cmpsl
xor
sbbl
and
add
mov
sub
add
test
pop
das
lods
xchg
push
fsubrp
and
popf
or
in
adc
insb
aad
cmp
or
push
push
imul
adc
lods
clc
sbb
xor
sub
data16
lcall
outsl
leave
sbb
adc
mov
mov
out
pop
ret
cwtl
aaa
sbb
leave
imul
sbb
popa
mov
popf
out
aad
lods
rorb
adc
xchg
test
mov
sub
call
shlb
cli
iret
cmp
inc
sub
cmp
pop
adc
out
cmpsl
xor
jo
int
pop
pop
jle
jb
xor
mov
les
jb
inc
ds
inc
into
ja
test
push
xchg
outsl
or
ret
sbb
mov
enter
dec
ja,pt
in
add
xor
and
aas
int
lret
sahf
shll
lock
clc
jmp
jbe
repz
mov
inc
loope
outsw
std
cmp
dec
outsl
inc
mov
and
xor
fcmove
pop
out
imul
dec
enter
cmp
add
into
out
mov
inc
xor
sub
adc
int3
adc
jne
pop
out
push
add
repnz
aam
ljmp
cmpsl
inc
movsb
test
mov
mov
mov
stos
and
data16
pop
outsb
push
std
shrb
aam
xchg
pop
inc
ficomps
add
repz
push
jae
je
lcall
inc
push
add
inc
sub
xlat
cs
inc
rcrl
xchg
loopne,pt
pop
push
fwait
sbb
int
or
mulb
ja
and
mull
sub
adc
adc
andb
lock
icebp
sub
jp
leave
mov
les
outsb
push
inc
jnp
mov
jno
jle
jmp
inc
inc
out
mov
sbb
xor
xchg
mov
or
sbb
inc
push
jge
push
inc
addb
sarb
insl
call
mov
stos
or
std
push
jbe
in
sti
int3
xchg
cmp
jp
lock
add
cmp
pop
cmp
leave
and
stos
add
dec
cli
xchg
adc
push
in
inc
jne
dec
xchg
xor
mov
pop
adc
or
cwtl
inc
rolb
les
aad
mov
popf
push
lock
shll
mov
orb
cmp
icebp
fsubrs
pushf
cmp
pop
jp
nop
or
cmp
adc
xorb
xor
je
arpl
repnz
inc
inc
out
cmpsb
add
sahf
icebp
out
daa
aas
cwtl
loopne
enter
mov
xchg
push
adc
jp
xchg
pop
adc
fdiv
xor
repnz
les
scas
loopne
and
lcall
js
push
es
push
adc
into
mov
leave
ret
pop
mov
mov
inc
shrb
jae
adc
xor
inc
xor
das
out
adc
mov
cmp
xor
jl
das
pop
in
test
sub
cli
and
jbe
and
outsl
cmp
push
dec
cmp
push
xchg
enter
pop
xor
out
cmpsb
xchg
int3
sub
sbb
sub
out
jne
aad
and
lods
mov
loop
clc
nop
adc
out
adc
int3
outsb
mov
xchg
jmp
xchg
retw
mov
xchg
sbb
and
and
jo
ret
test
rorb
int3
imul
int
int
sbb
jl
sbb
cmp
dec
inc
call
loop
jo
cmp
push
xor
mov
lret
je
dec
cld
hlt
test
repnz
vfnmadd231pd
and
les
out
jno
out
push
iret
xor
and
loope
sti
add
in
ds
lahf
scas
xor
jno
xor
mov
or
xor
ss
mov
mov
subl
sbb
movsl
test
mov
repnz
and
or
or
sahf
dec
in
jmp
push
cmp
pusha
mov
add
or
test
aaa
pop
ja
adc
sahf
test
fcoms
xchg
pop
cmp
xor
sub
xchg
jmp
pop
movsb
rolb
add
push
pop
dec
sbb
mov
ficomps
mov
jg
mov
jb
nop
xchg
mov
nop
sbb
mov
fstpt
dec
adc
mov
pop
mov
and
call
adc
lret
test
movsb
xlat
cltd
lret
and
fwait
dec
sbb
xchg
pop
cmp
cmp
hlt
cld
xlat
dec
or
mov
sbb
pop
ja
repz
dec
pop
rcrb
push
cmp
mov
jnp
mov
dec
sub
adc
mov
call
mov
and
jle
dec
ror
shlb
inc
cs
movsl
xchg
jo
orb
sbb
sbb
test
jl
adc
push
pop
add
mov
and
fucomi
je
aas
lea
test
lock
sti
insl
aam
mov
jno
push
adc
lcall
arpl
arpl
mov
pop
imul
pop
jmp
push
push
dec
vaddpd
jge
push
lea
mov
xor
cmp
mov
or
test
cmpsl
push
inc
shr
sbb
push
aas
ret
pop
test
ficoms
repz
jne
call
sbb
push
rcll
adc
mov
pop
xchg
mov
inc
sbb
cmpb
cmp
jae
test
xchg
sub
jne
lock
cltd
push
xchg
mov
jg
pop
mov
dec
outsb
mov
adc
imul
ss
jne
mov
popa
dec
xchg
mov
jae
xor
jno
rcrl
pop
xchg
mov
pop
mov
adc
dec
mov
rcl
xor
cs
fisubl
and
inc
sbb
lahf
push
repz
inc
ret
lret
out
xchg
jo
mov
dec
cmp
dec
inc
nop
jns
test
nop
lock
orl
sub
cld
shlb
xchg
mov
dec
or
rep
and
mov
push
and
out
test
push
jno
mov
cs
xchg
inc
pop
lock
sbb
shll
loop
inc
and
scas
enter
jb
ret
or
or
popa
outsb
gs
inc
inc
in
popa
and
pop
inc
je
push
loope
aam
and
xor
test
cmp
aaa
or
mov
adc
cmp
dec
test
cmp
ljmp
mov
mov
ss
cmp
mov
test
push
inc
divb
sahf
xchg
or
hlt
jge
movsb
addr16
lods
xchg
mov
and
inc
cld
xchg
dec
sub
out
mov
fdivr
ja
dec
testl
xchg
xor
out
in
repnz
xchg
jl
leave
pop
push
stos
mov
icebp
or
sub
or
je
rcl
cmpsb
xor
pop
mov
mov
or
imull
bound
push
addl
out
mov
push
jbe
ret
and
test
lret
push
lods
inc
add
add
jnp
cmpsb
sub
mov
sbb
aam
cld
mov
cli
movsb
jge
aas
pop
fdivs
inc
in
mov
cmp
mov
aaa
xchg
fs
pop
xor
pop
mov
sub
aaa
adc
mov
shll
test
or
sub
mov
fsubrs
jge
pop
fisubrs
inc
or
je
sub
ljmp
retw
rcrl
aas
mov
mov
xchg
mov
pushf
lock
sahf
inc
shrb
mov
sub
sub
filds
rclb
outsl
enter
jg
adc
mov
sub
push
mov
into
mov
pop
sahf
scas
fcmovnbe
inc
test
insl
pop
ss
fwait
into
inc
or
cmpsb
je
xchg
jne
mov
pushf
ret
test
xchg
repz
sub
add
pop
mov
sbb
addr16
mov
mov
inc
in
cltd
sub
adc
loope
imul
add
pop
loope
insl
ror
repnz
pop
pop
cmpsl
sbb
adc
jns
repz
cmp
loop
ror
and
dec
and
cmpsl
arpl
xor
xor
xchg
xchg
xchg
dec
push
cmpsb
int3
movsb
int
jle
add
lret
shrb
sar
fiadds
dec
lret
pop
mov
out
daa
pusha
in
mov
test
xor
or
sbbb
mov
aas
imul
in
jno
and
sub
arpl
pop
inc
xchg
xchg
insb
mov
mov
frstor
jnp
dec
mov
pop
and
testb
lods
xor
lahf
movsl
jecxz
mov
xor
daa
pop
ret
or
out
jae
inc
lds
dec
cmpl
es
inc
push
mov
lock
mov
iret
aas
or
pop
mov
pushf
out
leave
xchg
mov
xor
adc
jnp
or
xor
or
std
sub
insl
out
dec
cli
sub
frstor
sahf
jne
in
add
bound
aas
fiadds
push
test
out
nop
out
ljmp
lods
mov
in
jl
mov
sbb
aad
sahf
xchg
lods
jle
adc
sub
xchg
jns
scas
stos
push
fcmovnbe
test
mov
mov
inc
lret
and
inc
pop
push
mov
daa
inc
fs
jecxz,pt
aam
in
js
dec
mov
outsl
enter
mov
setg
sahf
in
xchg
mov
mov
inc
cs
pop
cld
repz
jbe
push
xchg
mov
cli
mov
xchg
arpl
data16
xchg
cld
xlat
ja
jmp
sub
das
xor
loopne
ljmp
mov
fimuls
xor
jbe
pop
or
mov
push
pop
dec
pop
fwait
inc
push
add
loop
dec
dec
mov
std
adc
dec
gs
jno
imul
test
jmp
sub
xchg
aaa
fldt
pop
xor
or
lret
enter
shll
inc
xorb
int
sti
aam
fsin
in
cmp
fsts
ds
adc
add
mov
enter
pop
mov
dec
aam
push
js
stos
or
cmp
adc
xchg
lahf
in
dec
pop
cwtl
dec
sub
xor
pop
pop
push
cmp
aas
xlat
pop
sub
popa
lret
out
in
sub
test
out
daa
jp
cmp
sub
cmp
jp
mov
sbb
scas
testl
fstpl
jl
push
push
rcrb
insl
divb
insb
and
mov
and
add
dec
push
js
sbb
mov
ud1
xchg
sbb
pop
aam
ret
das
or
aam
popf
ret
adc
push
inc
out
cmpsb
fbld
dec
les
mov
sahf
loope
les
pop
pop
pusha
xor
mov
xchg
pop
xor
sub
aad
inc
test
adc
dec
mov
jnp
inc
les
xor
push
cmp
mov
mov
adc
test
daa
xchg
and
lods
inc
imul
orb
and
enter
mov
sub
pop
adc
cmp
xchg
mov
adc
hlt
lds
ret
jb
pop
sbb
fldl
xlat
pop
in
xor
shl
inc
fnstenv
mov
pusha
jl
xor
inc
popf
inc
les
mov
jne
pushl
cwtl
sbb
pop
push
push
lods
pop
pop
pop
fldenv
scas
testl
adc
ret
int
sub
sub
dec
mov
add
push
and
inc
hlt
xor
and
xor
adc
enter
xor
jae
xchg
push
rcr
lret
addl
scas
add
jno
jb
sahf
lods
cmc
lret
sbb
push
test
pop
inc
popa
int3
data16
popf
nop
clc
lods
cmpsb
das
lds
sub
or
or
sbb
jae
fwait
sbb
inc
xchg
xor
js
or
sub
popa
jbe
negb
jl
test
int3
inc
cs
jne
int
out
fstl
push
lock
dec
push
sub
into
add
dec
insl
mov
repz
pop
lods
js
add
cmp
jmp
out
and
test
popf
add
aam
lock
inc
leave
xor
dec
das
jns
stc
movsl
push
mov
sbb
mov
fldl
fincstp
imul
sarb
jns
fucomip
cltd
fdivr
test
in
arpl
arpl
xchg
mov
jg
mov
dec
xchg
mov
out
seta
mov
aaa
loope
fistl
push
outsl
add
ret
rorb
jecxz
aam
sbb
mov
fistpll
stos
out
test
clc
inc
jl
stc
cmc
add
fld
cmp
push
pop
outsl
dec
dec
in
loop
lods
loope
js
adc
mov
push
arpl
or
cmp
xchg
mov
inc
sub
mov
movsb
mov
fisttpll
lods
or
jno
into
cs
fdivrs
fs
ds
jne
rcrb
xor
xor
push
adc
xor
fstps
loope
rorl
out
pushf
notb
pop
and
push
dec
jo
pop
inc
lds
icebp
cld
push
sbb
cmpsl
mov
xchg
in
and
lods
fnstsw
data16
pushf
mov
je
enter
cmc
out
sub
test
mov
dec
in
sti
mov
adc
jl
rorl
cmp
and
lods
fldl
mov
mov
sub
filds
push
push
ja
mov
sub
cwtl
scas
es
imul
call
popa
ljmp
repz
mov
aad
out
cmpsl
call
add
mov
push
loope
pop
mov
dec
out
int3
stos
cmp
adc
fcomps
xchg
xor
out
adc
scas
fistpl
jmp
pop
out
add
testb
cmpl
fisttpll
stos
ret
and
iret
loop
push
push
add
das
shrl
sbb
jb
addb
out
fimull
fsubr
iret
mov
shl
pop
pop
xchg
fisubrs
mov
jmp
jl
lret
pop
lods
clc
cmp
mov
jb
add
sti
add
mov
push
push
ja
aaa
mov
repnz
dec
inc
out
popa
adc
aaa
fs
sbb
dec
pop
sub
data16
insb
dec
mov
fdivr
int
cmp
lcall
inc
pushf
in
pop
jae
test
jae
mov
xorb
sti
mov
psraw
push
push
lods
add
enter
mov
das
in
sub
out
lock
sahf
cmp
ljmp
or
sub
pop
lock
jl
stc
pop
ficoml
stos
cltd
inc
lret
jns
mov
xchg
xor
iret
mov
sub
iret
and
cmpsb
push
sub
lea
cmp
and
push
push
lcall
cmpsl
mov
push
mov
mov
sysret
inc
add
hlt
xor
adc
stc
out
pop
fdivs
and
mov
xor
out
xor
imul
stos
pop
ds
mov
pop
xor
cmpsb
aam
mov
loope
xor
fldl
mov
shll
pop
xchg
jbe
outsl
ja
out
lds
jae
mov
mov
mov
pop
scas
sti
int3
mov
mulb
addr16
ljmp
push
mov
push
lods
lods
std
pop
add
sub
outsb
mov
xor
sahf
aas
clc
dec
cmp
mov
cmpsb
rcrl
xchg
shrl
dec
and
cmp
xor
sbb
test
and
nop
mov
jp
xor
test
daa
ds
fidivs
xor
xlat
mov
shr
mov
xor
add
shll
sbb
jns
adc
stc
in
xor
add
or
inc
inc
jecxz
leave
loope
sub
xor
xchg
andb
mov
jno
pop
jb
outsl
jecxz
cmp
mov
inc
inc
dec
xchg
lret
xchg
shlb
sbb
mov
mov
out
popf
je
ret
mov
inc
rolb
je
xchg
xchg
outsb
mov
cmp
dec
jmp
pop
push
pop
int3
insb
ret
sbb
int3
data16
sub
jge
repz
mov
repz
in
das
mov
xor
cmp
fisubrl
mov
push
cmp
mov
mov
test
or
dec
xchg
shrl
clc
js
movsb
test
sarl
call
dec
out
out
inc
or
ss
scas
ficoml
jno
xchg
sub
lret
xchg
mov
dec
imul
nop
cmp
and
pop
xor
or
sarb
shr
inc
xchg
and
pop
adc
pushf
cwtl
or
in
nop
cmc
enter
lock
xchg
push
sub
jns
or
fs
or
sub
test
fcoml
push
or
popf
xor
pop
and
xchg
hlt
dec
xchg
xchg
mov
data16
cli
pushl
out
dec
popf
fisubs
sbb
mov
lods
push
fwait
xchg
daa
lahf
clc
es
xlat
jnp
inc
mov
addr16
or
jl
mov
rep
lods
fisttps
mov
xchg
out
pop
es
cltd
mov
mov
push
jns
mov
xor
xorb
out
std
xor
mov
cmp
and
inc
call
fwait
lret
xor
pop
pop
fsts
loope
xor
mov
movsb
xchg
daa
mov
jp
test
mov
test
insb
lcall
push
jecxz
fs
mov
cmpsl
mov
add
dec
out
roll
adc
daa
cmp
mov
sahf
cwtl
or
mov
mov
iret
mov
or
xchg
pop
stos
sub
inc
bound
pop
xor
push
cmp
mov
mov
js
in
les
scas
jbe
or
loope
or
jbe
sti
imull
outsl
pop
sbb
outsl
pop
rorl
mov
aas
or
aam
jg
roll
inc
repz
jno
inc
xchg
test
adc
add
aaa
popa
adc
push
cmp
lcall
push
shll
loopne
pop
cmc
xor
test
out
std
inc
fwait
test
sub
push
clc
push
shl
adc
and
mov
popa
in
adcl
xor
addr16
stos
push
push
decb
popaw
mov
mov
test
adc
pusha
xchg
imul
insb
sub
xchg
sub
add
cmp
and
and
pop
jle
sbb
adc
pusha
or
das
and
xchg
icebp
push
cld
fnstsw
sbb
repnz
insb
adc
divl
inc
add
sbb
lret
mov
out
mov
lahf
push
cmp
and
xchg
xor
divl
orb
pushf
pushl
out
pop
push
ds
jmp
jno
mov
inc
push
push
xor
sub
mov
fldl
inc
pop
dec
das
ja
ss
stos
call
es
pop
push
and
mov
inc
arpl
xchg
mov
cwtl
push
jb
sub
scas
jl
pop
sbb
popa
js
in
mov
cmp
mov
push
out
push
push
push
mov
and
adc
cmpsl
jne
jo
push
pop
int
les
outsl
cmp
dec
sub
cltd
aad
movsl
aaa
push
mov
cmp
dec
lret
lods
stos
push
cmp
xchg
repnz
and
int
lcall
push
aaa
lahf
xchg
dec
mov
lods
les
test
notb
mov
sub
cmc
mov
aaa
cmc
or
insl
stos
movsl
and
je
mov
sub
or
xchg
shlb
xchg
push
sub
testl
fstpl
adc
std
popa
and
fbstp
sbb
stos
sbb
and
xor
lock
pop
or
aad
cmpsl
or
lahf
pusha
adc
push
adc
and
out
ret
lret
insl
jae
call
inc
and
sbb
in
xchg
cmp
xchg
xlat
pop
aam
lods
test
fists
rorb
jae
es
aam
jg
mov
orb
push
cmp
dec
into
jno
adc
nop/reserved
sub
push
outsl
mov
xchg
cld
test
daa
push
and
ss
imul
outsl
push
sub
jno
rol
shrl
sbb
fs
push
xor
sahf
out
inc
and
xor
push
fmul
out
shr
sub
les
mov
bnd
int3
int
popf
jae
jae
lock
xor
repz
dec
mov
jno
push
les
pop
stc
dec
ret
and
das
jmp
xchg
add
mov
cwtl
mov
mov
imul
clc
add
bndldx
ljmp
imul
movsb
mov
dec
or
dec
sbb
xchg
push
pop
lea
fildl
lods
lock
cmp
stos
inc
outsb
cld
push
shl
std
xchg
jae
xor
cld
jno
div
fistpl
push
stc
lods
mov
sarb
xchg
or
sbb
inc
sti
mov
xchg
mov
shrb
xchg
pop
adc
lret
jne
inc
xchg
std
mov
lods
xor
scas
inc
add
enter
and
bound
xchg
push
sub
dec
push
cltd
pop
jne
flds
jmp
adc
adc
into
in
jne
pop
push
inc
popf
push
pop
fcompl
mov
jp
and
aad
pop
sahf
sbb
fwait
in
dec
add
jne
pusha
cli
push
adc
scas
outsb
push
xor
notl
imulb
push
cmpsb
sbb
pop
das
pop
scas
js
sbb
xchg
test
add
sti
in
pop
or
sbb
in
bound
ljmp
repnz
xchg
mov
ror
xor
jle
stc
scas
sbb
xor
inc
das
push
jmp
neg
sub
inc
and
pop
shlb
mov
jno
sub
mov
push
mov
and
rcr
addr16
and
inc
mov
mov
fistl
mov
push
fnstcw
inc
clc
adc
lods
sbb
mov
outsb
test
std
cmp
and
loope
aad
ljmp
aaa
adc
les
mov
stos
cmp
les
nop
in
and
cli
sbb
enter
ficoms
mov
in
cld
mov
cmp
enter
lret
loop
cld
jecxz
push
xchg
sbb
pop
xor
xor
mov
aas
dec
stos
or
out
push
sbb
loop
or
mov
xlat
push
add
int
push
gs
jmp
popa
dec
rcrb
or
loop
int3
mov
cmpsl
push
test
loop
mov
push
ret
stos
or
pop
adc
addr16
adc
mov
mov
fnsave
inc
fists
add
push
pushf
decl
jnp
aas
dec
sub
xchg
sbb
cli
icebp
rcll
xchg
loopne
addb
mov
jb
ret
xor
or
mov
push
fstl
test
xor
mov
mov
adc
xor
push
out
or
xchg
pop
jb
lahf
xor
ret
inc
push
push
push
cmc
dec
incl
test
push
in
into
add
lahf
or
xchg
or
std
movsl
in
adc
mov
mov
inc
mov
mov
idiv
es
ljmp
sub
xor
pop
fcmovbe
dec
das
xchg
xlat
cmp
imul
add
loop
or
lea
jecxz
xchg
lds
ss
or
jae
loope
adc
jns
mov
sbbl
ss
lea
data16
jg
inc
loope
pop
xor
xchg
je
insb
push
pop
lcall
dec
add
or
adc
xchg
stos
shll
icebp
xor
or
pop
in
mov
and
pop
xor
repz
push
in
mov
mov
into
push
hlt
cmpsb
add
in
jo
cmc
mov
jg
add
cld
push
bound
out
mov
xchg
adc
cmp
cmp
cmp
loopne
outsb
sub
add
mov
addr16
sbb
sbb
mov
mov
jnp
pushf
push
xor
mov
in
out
out
into
aad
adc
aad
xchg
lods
jne
or
out
add
jb
mov
jnp
xor
add
test
or
adc
ljmp
xchg
add
fwait
inc
xor
pop
daa
add
push
js
jne
ffreep
cmp
mov
les
mov
inc
adc
pop
and
inc
mov
dec
fdivrl
pusha
mov
in
test
aad
jb
sahf
inc
push
sahf
inc
xor
ljmp
mov
sti
mov
jge
push
cmp
fdivs
push
mov
cmp
gs
jp
mov
js
dec
arpl
cli
ss
adc
into
movsl
outsb
rclb
inc
mov
pop
pop
push
mov
jmp
jbe
add
test
ljmp
and
dec
mov
ljmp
stos
ret
add
push
cmpsl
inc
jmp
dec
cmp
jnp
inc
aam
or
pop
mov
and
and
push
clts
mov
mov
or
test
scas
mov
xchg
pop
jno
insl
repnz
push
sarl
mov
fstl
cmpb
fisubs
popa
add
mov
push
rcrl
aam
mov
mov
xchg
mov
push
lret
jb
push
and
fiaddl
adc
or
add
inc
imul
pop
sub
inc
mov
les
scas
pop
cmpsb
and
sbb
adc
adc
mov
and
mov
lcall
mov
push
pop
in
jo
jmp
aad
xchg
pop
rcll
push
sbb
andl
aad
pop
ja
jl
pop
mov
loope
iret
leave
xchg
lea
jno
not
inc
imul
push
dec
loopne
adc
andb
inc
cmc
push
jmpw
outsl
vcvtss2sd
fiadds
stos
shlb
sub
je
int3
xlat
push
out
mov
mov
lret
xchg
cmp
sbb
pop
inc
repnz
imul
inc
lret
adc
pop
loopne
mov
xchg
fstpt
ret
push
nop
xor
jp
jg
into
pusha
adc
ljmp
sar
add
out
add
rorb
daa
adc
mov
scas
subl
cmp
scas
add
scas
inc
clc
imul
je
fxch
repz
cli
test
or
icebp
cmp
loopne
mov
jne
inc
stos
dec
lret
xor
xor
loop
test
popf
mov
lcall
and
or
mov
mov
and
lods
inc
iret
lcall
pop
or
sub
dec
data16
push
push
sbb
out
cmp
loope
and
push
adc
pop
ss
jp
jge
repnz
insl
cmp
data16
lea
dec
dec
lea
xchg
mov
iret
jg
jbe
adc
add
xor
add
lock
lahf
mov
test
dec
push
ret
lcall
dec
xlat
mov
mov
adc
add
mov
and
fs
cli
adc
xchg
int3
pop
cli
movsl
sbb
dec
mov
mov
jl
in
mov
dec
push
clc
sub
pop
xor
imul
adc
mov
aad
inc
mov
xchg
inc
lea
jl
insb
inc
jge
or
or
fimuls
pop
notb
cmp
mov
fistpll
out
mov
sbb
pop
leave
xlat
insb
rcrl
mov
mov
sbb
cmp
or
loop
mov
testb
out
hlt
aad
out
push
dec
jae
jl
inc
daa
cmc
and
ret
xchg
push
or
loop
cmpsb
mov
mov
rclb
out
call
sahf
pop
sub
pop
cmp
das
adc
cmp
adc
xchg
and
inc
aam
ret
adc
nop
mov
ret
cld
stc
mov
jnp
pop
xchg
lcall
ja
adc
mov
and
sub
inc
je
mov
or
sub
out
cmp
gs
push
sub
add
jge
and
adc
or
clc
data16
adc
dec
movsb
or
and
pop
ljmp
dec
mov
jno
hlt
loop
or
sub
add
popa
inc
lods
loop
xchg
repnz
rorl
mov
mov
lcall
push
js
rcr
enter
push
push
mov
pop
adcb
push
pop
push
andl
pop
cltd
or
fidivrl
loope
fwait
push
adc
pop
lea
jl
dec
push
cmp
insb
call
scas
dec
or
movsl
jp
out
int
sub
nop
popf
je
push
fs
pop
push
setl
shr
test
pushf
xor
push
push
pop
fsubrs
cmpsb
inc
cmp
cwtl
fmull
daa
leave
stos
mov
and
mov
adc
mov
xor
repz
push
push
jp
xor
fmuls
push
cmp
fdivrs
and
lods
adcl
rcrl
jo
mov
push
int3
lahf
aam
enter
ret
sbb
test
leave
mov
dec
test
shll
insl
bound
mov
dec
sarb
and
xor
fnstsw
sub
in
das
pop
dec
or
jb
icebp
lahf
ret
testb
mov
int3
daa
jne
int3
cmp
ss
sbb
fmull
jge
inc
sti
pop
or
mov
fstl
lods
or
js
sbb
adc
adc
xor
add
clc
ret
or
add
js
or
negb
push
testl
push
sahf
cwtl
xchg
fnsave
lret
mov
add
mov
iret
cwtl
iret
add
jecxz
mov
imul
cwtl
pop
arpl
jno
mov
mov
add
xor
jg
mov
cmp
fidivrs
mov
jle
paddsb
call
mov
es
in
outsb
pusha
mov
dec
and
and
xchg
int3
jge
daa
int
dec
dec
xchg
lea
jl
aas
stos
loope
xchg
loop
loop
lcall
out
push
pop
mov
jmp
mull
jmp
sub
inc
out
jno
mov
sub
push
shl
jns
xchg
or
ficompl
add
in
cmp
lods
push
mulb
sbb
fsts
ljmp
idiv
call
adc
lret
aaa
cmpsb
xchg
aas
mov
lret
insb
out
jge
mov
push
fwait
mov
mov
dec
adc
outsb
pop
pop
pop
std
cmp
fistl
xor
adc
fwait
fwait
add
jle
pop
push
popa
loope
sarb
ds
xor
pop
inc
adc
lds
test
add
int3
sahf
leave
repz
xor
jmp
fbld
sbb
sub
das
xchg
fs
scas
push
xor
sub
hlt
xchg
xor
iret
adc
mov
fcomi
je
leave
cmc
xor
adc
dec
or
sub
jmp
lds
adc
push
push
xlat
dec
adc
xchg
out
xchg
jb
cli
pushf
dec
cmp
test
fcmovne
mov
sbbl
xor
scas
jno
add
add
xchg
push
cmpl
xchg
and
dec
aam
cwtl
mov
out
nop
ret
xchg
cmp
data16
jbe
jg
test
jne
mov
fwait
dec
push
jnp
lods
cmp
mov
and
adc
ret
in
sti
xor
sarl
repnz
cmp
xor
fistl
out
sub
cmp
ret
xchg
shll
ficompl
icebp
int3
sub
sahf
outsb
dec
js
sub
pop
fdivrs
cmp
decl
mov
pop
pop
xor
mov
xchg
mov
insl
adc
mov
cltd
sbb
fnop
add
mov
int
ds
pop
cld
and
sub
push
unpcklps
dec
xchg
xchg
push
ja
inc
mov
pushf
jecxz
mov
cmpsb
mov
mov
cmp
int
mov
xchg
push
cld
mov
mov
mov
lahf
and
fnstcw
mov
and
jns
lahf
inc
xor
xchg
mov
mov
aam
push
into
xlat
xchg
or
lret
nop
jns
sub
sub
xorb
popa
mov
imul
sbb
pop
int
lods
jb
test
loope
xchg
icebp
test
and
mov
ja
cmpsl
sbb
and
and
cmpsb
jno
ret
fyl2x
in
xchg
lea
in
mov
jbe
adc
jl
sbb
or
sub
pop
jmp
push
adc
lahf
push
dec
jp
adc
cli
cmp
jle
adc
mov
mov
sbb
pop
aas
movsl
ss
ds
ja
inc
movsl
popf
stc
fs
or
rorb
js
insb
jecxz
jbe
mov
adc
imul
jle
dec
ds
testb
stc
stos
std
das
jnp
iret
xor
mov
in
xor
mov
mov
or
and
lret
arpl
fwait
cmp
lcall
mov
imul
fildll
jg
pushf
or
clc
push
or
cwtl
out
xlat
mov
les
outsb
inc
mov
adc
push
scas
bound
arpl
xor
das
loope
call
insb
in
fstl
repz
inc
out
xlat
push
popa
inc
xchg
mov
fdivs
sbb
add
ret
mov
mov
add
pop
inc
pop
rcr
xor
sub
test
scas
aad
sahf
pop
xchg
or
stos
ljmp
sub
call
mov
or
adc
jb
rcrl
test
shlb
mov
out
cmpsb
sbb
loop
xor
repnz
cs
sub
aas
popf
jno
xchg
test
cmp
cmpl
mov
outsl
fninit
inc
adc
lret
insl
cwtl
and
fwait
mov
mov
rcrb
je
cmpsl
mov
dec
sub
je
stos
mov
xchg
mov
shrl
ret
cmpsb
inc
aas
sub
cmp
fs
add
mov
movsl
push
inc
mov
mov
adc
fwait
or
or
scas
dec
or
xor
or
cmp
shlb
nop
inc
and
mov
add
jge
mov
popf
fcomps
clc
inc
enter
adc
je
fistps
add
xchg
lcall
inc
xchg
xchg
pop
test
push
push
jecxz
orl
lods
pop
jp
fs
arpl
movsb
or
jmp
sub
cmc
aaa
mov
push
jge
xchg
cmp
ret
imul
mov
ja
push
ljmp
jae
jg
movsl
arpl
jmp
mov
fs
cmp
and
pop
call
add
popl
push
lock
test
popa
xchg
dec
out
or
jge
lret
fdivs
or
xor
scas
xchg
scas
add
xchg
dec
orl
cmp
orl
xor
xchg
data16
repz
pushf
or
fsubrl
adc
jmp
test
pop
inc
push
test
icebp
push
pop
cmp
xchg
inc
loope
jb
mov
fisttpl
mov
test
orb
arpl
ljmp
cmp
ds
cmp
adc
or
mov
mov
mov
fisttps
jmp
mov
lods
loope
enter
jo
or
xor
imul
roll
pop
push
insl
add
jbe
cmp
es
sbb
sub
push
sbb
adc
arpl
daa
icebp
dec
lock
mov
jmp
mov
das
or
push
insb
mov
dec
int3
push
les
lret
hlt
jne
xlat
js
push
mov
adc
jb
xchg
mov
push
addr16
jb
pop
cmpsl
dec
push
add
fs
icebp
dec
fimull
mov
inc
stc
inc
pop
cmpsl
out
inc
push
sbb
cmp
jl
mov
mov
lret
daa
jno
sbb
sub
jg
pop
cmc
in
ret
and
repz
dec
jo
push
adc
mov
mov
out
int
sahf
mov
pop
idivl
mov
jp
test
lods
in
repnz
int3
test
rcrl
push
insl
jnp
and
fbld
lock
mov
popa
scas
mov
fisttpll
push
xchg
xchg
pusha
nop
xor
fwait
cmp
shr
out
sti
xor
repz
int
inc
pop
adc
push
push
jae
fbld
mov
xor
sahf
test
xchg
and
loope
xor
std
mov
cmc
loopne
mov
pop
sbb
sbb
xor
ret
scas
push
and
push
mov
lock
cwtl
sbb
pop
int
mov
sbb
push
push
movsb
divl
movsb
in
in
jl
daa
mov
and
shlb
and
push
orb
loope
xchg
mov
dec
mov
adc
xchg
sbb
dec
cmpsb
adc
out
mov
daa
rcll
das
adc
cmp
nop
cwtl
adc
into
push
imul
mov
dec
or
push
dec
nop
shr
lret
pushf
cld
push
push
push
icebp
out
sub
mov
fcmovnu
ficoml
xchg
ljmp
inc
imul
push
aaa
hlt
cltd
test
or
ja
testb
inc
jecxz
push
inc
int
fldt
push
lock
xlat
pop
nop
mov
ret
or
inc
mov
mov
inc
ljmp
push
mov
add
in
xor
es
sbb
dec
cmp
nop
les
aas
pop
faddl
jae
cmpb
add
test
aam
mov
popa
adc
jmp
jge
sbb
mov
jno
ss
std
xor
sbb
out
repnz
lods
cmpsb
push
push
dec
sbb
inc
and
fstpl
daa
pop
idivb
adc
jle
flds
push
jns
inc
or
jmp
mov
jnp
push
data16
adc
sub
negb
popa
rolb
push
xchg
cmpsl
mov
addr16
mov
jne
out
orb
aaa
or
mov
cmc
repnz
rcll
cwtl
xchg
mov
leave
dec
pop
push
mov
lret
popa
enter
pop
mov
fimull
adc
jg
cmp
adc
push
or
std
mov
add
lock
cmpsl
shlb
lods
adc
icebp
mov
or
sub
ss
mov
sub
push
out
cmpsb
pop
add
lahf
jno
hlt
dec
jg
fmul
into
sahf
xorl
pop
sub
lock
jne
adc
xlat
hlt
jg,pn
push
imul
dec
cwtl
daa
fisubl
scas
push
aaa
aam
inc
xchg
stc
adc
sti
inc
push
lcall
sbb
or
pushf
fisttpll
mov
and
inc
inc
ret
xlat
sub
mov
sub
scas
ljmp
adcb
dec
fidivrs
fdivs
xchg
xchg
es
nop
pop
mov
xor
imul
enter
or
inc
xor
arpl
bound
out
and
or
jl
out
pop
jns
xchg
xor
ficompl
pop
push
or
dec
jbe
mov
insb
enter
into
aaa
mov
jns
sub
push
pop
sbb
rcl
negb
xchg
mov
cld
add
jp
mov
pop
cmp
and
imul
push
mov
clc
sub
xchg
int3
outsb
sbb
icebp
push
adc
sbb
add
mov
mov
and
dec
stos
jns
test
je
sub
sbb
cmp
push
xor
adc
fldt
or
sbb
sub
scas
xchg
rolb
push
add
add
xchg
test
aam
mov
mov
mov
out
and
shll
push
jecxz
int
inc
inc
loope
aam
mov
adc
cmpsl
jo
sahf
sti
int3
jecxz
xchg
aad
and
xchg
test
push
mov
xlat
ret
xor
xchg
push
inc
push
aas
stos
stc
cwtl
jo
pop
jmp
or
popa
mov
xor
call
adc
inc
jp,pt
stc
mov
icebp
out
orb
enter
leave
cltd
fmuls
in
addr16
mov
nop
aas
xchg
daa
js
cmp
shll
je
adc
or
shll
scas
adcl
scas
lea
stos
dec
pop
lock
and
pop
sti
scas
pop
adc
mov
sbb
inc
lret
testb
add
mov
loopne
xlat
mov
test
mov
xchg
jecxz
cli
pop
cmp
xor
sub
mov
into
mov
xchg
fsubrl
ljmp
cmp
cwtl
repz
pop
imul
lods
test
and
jno
adc
inc
lcall
push
cmp
or
hlt
or
mov
sub
fimuls
mov
cmp
aaa
jmp
sbb
mov
icebp
push
jbe
cmp
roll
lea
inc
test
aad
insl
adc
mov
in
xor
pop
xchg
ja
pop
out
stc
mov
dec
sbb
fcoms
add
pop
nop
jmp
jle
aas
pop
stos
push
lret
and
pop
pop
mov
imul
adc
adc
faddl
rcrb
ret
fsubrs
pop
mov
stos
add
popa
nop
dec
adc
sbb
pop
ret
out
mov
gs
movsb
lret
pop
scas
xor
jl
adc
lret
test
aad
jno
inc
sbb
mov
mov
data16
mov
popa
fsub
xor
mov
mov
cmpsb
out
adc
sbb
sbb
jg
fbld
mov
in
mov
js
xor
dec
stos
pop
stos
jno
mov
pop
jno
xchg
cltd
arpl
push
mov
dec
outsb
sub
ficoml
test
imul
sbb
add
cmp
ret
insl
mov
push
mov
and
rolb
pop
in
xchg
lret
out
cmp
sbb
stos
mov
fldl
sub
dec
movsl
xchg
aad
mov
sbb
repnz
pop
imul
and
lea
sub
and
sbb
aas
and
sub
fs
jns
scas
inc
ja
inc
es
lea
xlat
das
nop
pop
sarb
add
xor
add
lahf
fidivrl
mov
iret
int3
adc
mov
mov
mov
adc
test
rcrl
sbb
xchg
int
fs
sbb
dec
xchg
inc
and
push
add
jl
and
add
in
movsl
in
mov
shll
mov
aas
cmp
jg
fistps
xor
mov
sub
leave
jb
add
cmp
sahf
mov
cmpsl
cmpsb
test
rcrl
lods
sti
std
or
push
push
aad
cmpsl
push
xlat
pop
dec
jle
adc
pop
pusha
ret
xchg
mov
adc
inc
add
decl
decl
pop
ds
jno
jno
lea
data16
ficomps
push
inc
add
lcall
or
pop
jecxz
mov
stos
dec
adc
idivl
xlat
notb
jae
sub
in
jmp
shlb
mov
nop
mov
cwtl
jo
fsub
shlb
out
dec
cmpsb
mov
push
xchg
or
pushf
or
lahf
push
or
adc
aaa
insb
rorl
mov
adc
cltd
or
int
push
ljmp
test
js
xor
andl
insl
or
add
mov
jne
mov
mov
fmulp
scas
pop
inc
push
into
jle
push
sbb
sahf
sbb
xchg
into
cmp
xor
mov
movsl
out
jns
in
add
bound
dec
mov
mov
fisttpll
in
sbb
mov
enter
jo
sbb
bound
xor
jp
repnz
pushf
cmc
push
and
lret
adc
mov
mov
pop
aaa
in
sti
clc
sti
adcb
add
cmp
xchg
or
jecxz
andb
stos
movsl
adc
std
sbb
test
imull
push
sti
mov
xlat
dec
fwait
sbb
inc
and
lods
loopne
cmp
mov
xchg
sbb
cld
mov
mov
cli
jge
mov
enter
mov
shrb
sbb
rcrb
mov
lea
aaa
xchg
sti
dec
aam
mov
mov
lock
sahf
ja
rorl
mov
ja
pop
push
jae
repnz
mov
and
cld
or
xchg
roll
data16
rcll
movsb
lock
push
dec
rclb
adc
push
scas
hlt
cmp
fisubrl
and
mov
mov
testb
gs
mov
cmp
les
mov
fisttps
stc
add
mov
mov
fs
xchg
fldcw
mov
lock
push
cmp
jge
inc
sbb
mov
das
mov
cmpsl
pop
xchg
aaa
scas
cmp
fcoml
inc
insb
call
ret
mov
cmpb
jmp
jle
sub
enter
push
movl
imul
sbb
sbb
mov
mov
cmp
push
imul
pop
fmuls
mov
inc
lea
iret
sub
mov
imul
out
sahf
adc
or
hlt
in
mov
dec
cli
jl
xchg
loope
inc
jge,pt
inc
in
pop
mov
inc
jmp
or
xchg
dec
cltd
sbb
jns
push
outsl
lret
jno
test
leave
mov
int
in
lret
std
fisubs
xchg
scas
mov
adc
popa
lods
adc
cwtl
xchg
cmc
add
pop
xchg
adc
rcrb
je
inc
jle
cs
imul
lods
aad
sbb
clc
cmpb
test
dec
bound
add
in
rcr
ficoms
aas
sbb
push
or
insb
cmc
das
ss
rorb
mov
stos
jg
pop
fdiv
xchg
stos
mov
jl
xor
inc
std
xchg
inc
jnp
ret
ss
cmp
aad
stos
sub
das
shrb
cmc
mov
cmc
lahf
test
or
push
stc
hlt
cmp
das
adc
xchg
mov
idivb
gs
xor
mov
mov
cmp
and
rcrb
out
push
jne
mov
jge
sbb
mov
repz
and
sbb
mov
imul
fbld
add
scas
jo
daa
push
mov
int
fnsave
pusha
repz
push
push
mov
sub
sbb
jp
cmp
and
rcr
js
add
fidivs
hlt
jb
shrb
test
insb
pop
xor
popa
mov
sahf
imul
xchg
pop
test
fsts
int
rcrb
xchg
decl
repnz
scas
xchg
jne
jmp
or
push
cmp
push
mov
pop
jle
inc
add
inc
inc
in
sub
cmp
dec
adc
and
jns
scas
repz
jo
mov
shl
jmp
outsl
imul
in
aam
jl
test
in
sub
mov
cmp
mov
mov
stos
lods
pop
and
rol
dec
loopne
sub
mul
cmc
lock
mov
mov
in
pusha
push
sub
adc
xchg
fistps
loopne
ja
cmc
in
dec
sub
add
and
mov
sbb
dec
jle
inc
inc
sbb
les
mov
cmp
jae
cmpsl
sub
lret
jle
outsl
adc
cmp
test
push
sbb
push
clc
repnz
scas
jo
aas
testl
and
cmp
jecxz
add
sbb
lret
mov
sbb
cmp
addr16
outsb
nop
jl
cmc
pop
js
lret
cmp
mov
mov
mov
minps
out
repnz
scas
out
push
and
nop
add
cmpsb
xor
sub
ja
ficomps
sub
test
push
fsubs
mov
mov
inc
cltd
lcall
mov
aad
dec
test
int3
pop
inc
cwtl
mov
xchg
dec
adc
insl
mov
adcb
mov
ret
into
lret
mov
push
mov
push
mov
jl
ja
sbb
fstps
dec
addr16
sbb
repnz
fnstcw
andl
jecxz
jmp
imul
mov
sub
and
mov
test
add
adc
aaa
or
or
cmp
dec
imul
mov
xor
ret
fcom
sahf
leave
xchg
mov
or
popa
sub
fldt
lds
xlat
push
lock
sbb
or
sbb
int3
gs
or
add
ja
jns
sbb
das
loope
xor
pushl
and
aaa
or
and
jne
lods
fistpll
adc
js
jmp
jb
fdivrl
aam
lea
loop
adc
adc
ds
push
popf
sbbl
jo
incl
negl
mov
or
std
movsbl
lret
movsb
popa
int3
aam
jl
xchg
dec
cli
pushf
sub
mov
or
add
nop
sbb
and
test
add
bound
jae
adc
sbb
cmp
cli
jns
divb
ret
mov
add
mov
jnp
hlt
inc
add
imul
and
xor
xor
imulb
fnsave
xchg
mov
xor
cmp
out
mov
xlat
popa
out
jbe
adc
and
mov
xchg
out
jno
int
sbb
lods
mov
sbb
add
pop
mov
and
xor
enter
fsubp
insb
sbb
popa
stos
out
lock
fisubs
push
outsl
pop
push
out
jl
push
pop
pop
loopne
lret
xor
divl
pushw
add
in
cmp
sbb
int
cwtl
aam
jo
pop
sbb
mov
jb
sbb
test
bound
sbb
jbe
sbb
rcrb
adc
into
les
outsl
xor
xor
aaa
push
les
rorb
inc
xchg
pop
push
xchg
add
inc
cwtl
daa
lea
fistl
nop
mov
decb
imul
jle
push
jmp
scas
xchg
mov
adc
mov
jb
das
jl
push
xchg
fstpl
add
movsb
jnp
cltd
ficomps
bound
push
movb
pop
pushf
fimull
stos
push
out
fucom
fidivrs
add
sbb
mov
jo
xor
daa
bound
sub
mov
mov
inc
lahf
loopne
int
repz
jae
lods
test
sbb
dec
xchg
inc
xlat
xchg
and
mov
cltd
sbb
iret
inc
aam
movaps
push
test
mov
or
mov
cs
cmp
mov
sbb
in
and
cs
cmc
popl
mov
ret
pop
lret
adc
testb
cs
and
push
scas
xchg
test
jno
lret
xchg
inc
dec
or
jecxz
mov
icebp
xchg
lahf
pushw
out
aas
sub
dec
adc
lods
mov
movsb
pop
popa
nop
mov
daa
loope
out
cwtl
jmp
lods
push
lds
pop
xchg
shll
scas
ret
shrb
jne
push
pusha
lea
jge
push
mov
mov
bound
xchg
pop
loopne
jno
xlat
test
mov
in
mov
rcr
or
icebp
xor
outsb
mov
cmp
mov
jno
data16
push
movsl
int
xor
sarl
mov
popf
or
imul
mov
cmpsl
adc
add
sarb
xchg
jno
or
inc
hlt
scas
add
es
sahf
fcompl
lock
xchg
mov
sub
push
cmp
xchg
adc
repz
int3
jno
cmc
lds
adc
sub
shll
and
stos
dec
in
orb
cld
jp
stos
gs
movb
add
mov
popf
pop
xchg
adc
xlat
xchg
adcb
dec
movsb
sbb
sbb
jo
int
cmp
xor
ficoms
dec
nop
pop
lods
gs
jl
push
cmp
cmpsb
inc
sub
je
sub
and
fbstp
loop
mov
mov
pusha
popa
push
out
fisttpll
jecxz
pop
xor
sarl
sub
jle
addb
pop
cmp
pop
cmp
loopne
cs
in
xchg
pop
inc
push
aad
mov
test
fisubrl
inc
xchg
icebp
inc
divl
mov
ds
call
mov
movd
inc
dec
aaa
mov
in
aas
adcl
out
mov
xchg
or
sbb
pop
loopne
jmp
mov
das
push
sbb
xchg
adc
or
push
xor
fsts
icebp
inc
out
fdivl
addl
gs
in
sbb
and
lock
cltd
shll
movsl
inc
test
rorb
mov
xor
cmc
sarl
iret
insl
icebp
rorb
cmp
xlat
mov
imul
mov
push
das
xchg
and
mov
xchg
shrb
pushf
jle
pusha
aam
jge
adc
rol
cmp
shl
inc
cld
movsl
cs
cmp
push
adc
jno
repz
fbld
xor
mov
push
ja
xor
add
pop
movsl
imul
or
mov
pop
and
cwtl
mov
xor
mov
sub
scas
lret
pop
in
shrb
dec
pop
mov
or
inc
cmp
aad
enter
inc
inc
insb
mov
pop
jecxz
pusha
neg
test
out
xor
xor
cmpsb
adc
add
mov
ror
jns
cwtl
push
pushf
test
dec
cmp
add
jno
scas
daa
cmpb
or
fs
pop
cld
pop
into
repz
stos
out
outsb
lret
iret
mov
jge
adc
add
icebp
and
call
pushf
imul
push
outsl
sub
ret
int3
pop
nop
repnz
inc
lahf
outsl
in
roll
pop
or
loop
mov
js
roll
test
loopne
mov
mov
push
inc
xchg
bound
wrmsr
or
mov
push
adc
fcompl
mul
jle
jecxz
cmp
xchg
xchg
aas
jle
pop
lods
cmpsl
faddl
es
imul
popa
ror
xlat
test
push
imul
dec
dec
and
decb
into
out
ja
sbb
cli
lds
stos
lret
pop
pop
xchg
into
dec
inc
mov
and
pop
cmp
mov
enter
inc
fdivrl
daa
dec
sbb
filds
mov
dec
iret
js
inc
cmp
cltd
add
mov
out
sbb
push
cmp
shrb
sbb
ret
nop
clc
inc
std
leave
or
and
leave
mov
or
sbb
sub
arpl
lds
mov
push
inc
sbb
fwait
aad
pusha
lds
mov
icebp
cmpb
je
xor
jmp
daa
cmp
push
push
lret
je
mov
sahf
adc
icebp
clc
inc
stos
mov
jge
test
int
sbb
mov
pop
imul
push
movsl
xchg
mov
lret
and
xor
push
mov
stc
push
aaa
in
addl
rolb
imul
jmp
jo
sub
shrb
ljmp
mov
sbb
add
leave
dec
lods
cmp
mov
mov
out
ret
aad
outsb
daa
mov
loop
test
int3
mov
xchg
pop
stos
or
jmp
pop
and
jmp
shll
xor
mov
inc
mov
inc
aaa
dec
shlb
adc
and
pushf
sub
push
mov
loopne
loop
adc
sub
push
pop
or
push
pop
cmp
pop
movsb
cli
lods
mov
test
inc
aad
xor
lret
out
jne
loope,pn
ja
in
add
les
add
cmp
out
pushf
mov
leave
cmpl
add
repnz
outsl
mov
sub
pop
dec
ja
sti
fcmovnb
sbb
stos
cwtl
jp
testb
repnz
mov
jmp
es
repz
and
outsl
xor
popa
pop
dec
add
aaa
cmpsb
push
pop
shrb
xchg
xchg
popa
pop
enter
lcall
aam
out
xor
frstor
test
mov
dec
pusha
les
add
cmpl
jecxz
add
cmp
es
xorb
cmc
push
xor
ss
dec
mov
hlt
mov
leave
cli
loope
jge
sub
stos
vpmaxub
in
jg
test
xlat
xchg
loope
pop
je
lahf
adc
mov
sbb
fsubl
fs
in
jmp
testb
in
xchg
dec
ret
hlt
test
sbb
jg
repz
jp
pop
aaa
xchg
mov
jmp
mov
sub
mov
mov
mov
mov
out
pushf
into
sbb
xchg
insb
sbb
adc
cmp
jmp
lea
sub
mov
add
movsl
xchg
inc
cld
pop
test
add
aas
aad
or
pop
jge
pop
push
inc
xchg
movsb
inc
arpl
jmp
hlt
sbb
test
pop
cmc
xchg
jg
adc
xchg
dec
inc
adc
add
add
xor
mov
xchg
sbb
mov
je
xchg
mov
mov
ret
notb
xchg
mov
imull
mov
jae
int
cld
sbb
imul
cmp
outsl
cs
jecxz
test
sub
xchg
das
lret
and
lahf
ret
and
sbb
xlat
bswap
pushf
add
dec
aam
fldenv
out
rep
dec
adc
mov
push
or
movsl
sub
call
adc
push
movsb
fwait
test
jle
push
in
xchg
testl
call
sub
rorb
and
sbb
inc
es
mov
int3
pop
or
je
mov
int3
dec
das
test
daa
or
and
cmpsb
add
and
cmp
das
imulb
xchg
jecxz
adc
xchg
stc
jns
stos
or
mov
jae
into
sbb
orl
bnd
add
mov
hlt
xor
jl
inc
push
lea
loopne
movsb
data16
cmpsb
push
mov
fsubrs
adc
and
inc
iret
sub
fnstcw
notb
testl
ret
adc
cmpsb
or
data16
push
addr16
arpl
lcall
and
mov
mov
xor
xor
mov
sbb
adc
or
and
out
es
mov
mov
or
jno
in
scas
outsl
jmp
je
jo
mov
jns,pn
xor
icebp
sub
popa
repnz
xchg
sub
rorb
xor
ds
imull
imul
iret
xor
adc
xor
pop
sarl
inc
in
out
push
dec
inc
insb
mov
dec
xor
pusha
ss
lret
rcrl
mov
cltd
sub
incl
es
mov
cmpsb
test
xchg
imull
ds
mov
xor
push
aaa
inc
pushf
shlb
xor
daa
dec
mov
sub
fs
push
mov
mov
je
inc
testb
mov
pop
btr
and
sub
jge
pusha
sbb
dec
data16
sbb
test
sub
fisubl
das
lret
lcall
and
sti
sub
jmp
inc
ljmp
rcrl
imul
dec
cli
popf
lcall
sahf
or
cmpl
xchg
cmc
adc
sbbl
cwtl
nop
gs
pushf
sub
pop
inc
cmp
mov
jae
push
ret
pop
test
hlt
xor
cmp
pop
lods
es
lds
sbb
inc
inc
std
sar
in
popa
inc
test
xchg
lret
insl
lret
cmc
aad
add
push
lea
add
loopne
cltd
inc
in
popa
call
xchg
jge
xchg
flds
lds
lcall
int
mov
and
repz
dec
mov
mov
shrb
int3
push
mov
jno
cmp
mov
xor
adc
mov
dec
paddusb
ret
jne
scas
add
out
cwtl
pusha
mull
xor
enter
ret
xor
mov
cmpsb
cmp
repz
lret
fdivr
mov
das
xlat
adc
push
enter
hlt
jg
push
insb
cld
in
and
jg
fsubp
addb
into
fldl
cli
sbb
lods
js
ror
int3
xor
inc
repnz
test
cmpl
hlt
dec
pop
xor
dec
pop
imul
adc
into
jl
and
add
mov
adc
cmpb
leave
out
push
add
push
and
sub
mov
pop
dec
sbb
dec
xorb
push
mov
nop
fcmovbe
fistl
inc
xor
insb
push
dec
mov
mov
jle
arpl
mov
adc
and
scas
outsl
inc
sub
xor
lods
mov
or
stc
inc
test
fldt
xchg
xchg
pop
push
jl
dec
and
stos
mov
les
sbb
xchg
fs
pop
mov
test
pop
cltd
scas
xchg
mov
test
scas
dec
push
xchg
mov
scas
dec
call
jl
and
lea
fwait
cltd
into
xor
nop
fisubs
pop
jb
cmp
cld
push
daa
roll
pop
pusha
ret
push
orl
cmp
push
scas
ja
sbb
jle
and
enter
ret
mov
sti
adc
lods
jns
adc
sar
ja
add
shll
fsubrs
out
gs
jg
cmp
into
xor
imul
mov
mov
scas
jmp
adc
cmpsl
xchg
adc
pop
pushf
iret
jle
inc
xorb
add
jp
fucomp
fsubrs
fildll
push
or
push
dec
and
jg
add
frstor
nop
sbb
notb
int
sbb
pop
dec
les
pushf
jae,pt
ss
ret
pop
clc
iret
sub
mov
inc
dec
pusha
and
push
pop
pop
ljmp
iret
ja
and
jno
lret
enter
jo
lods
dec
enter
or
push
sbb
xchg
lods
xchg
rcrl
clc
or
xchg
in
jle
lret
pop
push
jno
mov
and
mov
in
cmpsl
xchg
fmul
or
cmp
jnp
nop
or
jbe
and
dec
jo
mov
out
insl
jnp
pop
pop
aaa
roll
dec
cmp
xchg
inc
test
xor
shll
xor
add
cmp
scas
sbb
out
fimull
adc
mov
and
push
cmp
pop
shr
sub
jbe
sub
js
cmp
mov
cmp
gs
jne
push
lea
or
sahf
push
ss
daa
pop
and
sub
lret
add
mov
pop
fmuls
bound
pop
cs
add
cli
push
jecxz
std
push
imul
adc
mov
ret
rcrb
mov
in
je
cld
mov
mov
adc
xchg
sub
sub
fadds
iret
es
enter
int
xor
add
test
fnstenv
outsl
dec
imul
dec
in
push
jp
xor
jp
imul
and
clc
hlt
pushf
das
push
stos
mov
mov
sub
push
stos
and
sahf
fcomi
lahf
jns
inc
xor
outsb
popf
test
cli
pop
in
lods
sbb
dec
mov
xchg
cmp
and
dec
shrb
mov
pusha
in
cltd
adc
sub
insl
insb
out
lods
sbb
jmp
fwait
inc
mov
scas
jmp
andl
repz
cli
fwait
inc
or
in
leave
test
outsb
fidivrs
dec
ret
imul
shll
movsl
pop
test
mov
mov
pop
aad
lret
int3
cmp
add
imulb
orb
in
adc
cltd
jno
push
loope
inc
and
ret
cmpsl
push
int
jl
mov
inc
lock
pop
sub
push
mov
push
js
fistpl
jg
mov
or
inc
daa
lret
shrl
enter
xlat
ret
cmpsb
pushf
pop
pop
aad
js
popf
or
mov
out
jnp
mov
push
daa
in
popf
fldt
iret
test
lods
jb
inc
clc
das
faddp
jmp
movsl
std
test
inc
sarl
xchg
mov
cltd
leave
inc
cld
pop
pop
push
cmp
pop
or
push
xor
xchg
fidivrs
test
mov
push
mov
shrl
pop
fistl
sar
clc
inc
lock
cmp
loopne
push
incl
sahf
or
sbbl
and
pop
jb
add
fcompl
jnp
jmp
xchg
arpl
jo
pop
out
push
add
xchg
mov
scas
or
addb
mov
inc
movsb
xorl
push
jne
lret
pop
jns
jo
mov
mov
out
or
into
enter
or
mov
lods
popf
dec
cmp
fldl
aaa
stos
sub
push
jo
andb
nop
int3
cmp
lock
xchg
add
pop
sub
dec
cmp
push
adc
fs
popf
test
mov
inc
sbbb
fsts
push
hlt
shll
mov
lods
xor
pushf
mov
hlt
dec
xchg
jae
shlb
loope
test
xchg
jne
arpl
adc
push
lcall
pause
lret
cltd
ds
push
mov
dec
add
sub
pop
fbstp
in
mov
and
int
js
mov
sbb
jmp
dec
dec
mov
cmc
test
push
pop
inc
insl
nop
stc
in
jbe
inc
int3
push
outsb
sbb
mov
in
add
dec
imul
add
mov
jmp
mov
les
into
lcall
arpl
imul
sahf
loopew
stos
fwait
lods
fidivrs
jae
jmp
dec
adc
leave
cltd
add
and
fisubrl
test
incb
add
cmp
mov
push
dec
fistl
sar
mov
lock
dec
pop
scas
and
iret
loopne
push
sbb
fbld
hlt
fisubrs
sti
or
adc
inc
gs
sub
mov
in
mov
pop
or
mov
cmp
lds
and
jp
xor
aad
lea
fbld
cs
mov
leave
adc
mov
outsb
es
ret
add
jnp
imul
repz
pop
loope
mov
xchg
push
jmp
xlat
pop
and
in
adc
stos
jbe
pusha
pop
add
cmp
std
pop
pop
adc
dec
imul
inc
push
ror
jecxz
inc
xor
mov
add
dec
rcll
cmp
mov
or
sub
int
and
jge
imul
xchg
and
inc
xor
lcall
in
jae
lahf
fdivl
icebp
sub
pop
test
mov
testl
scas
outsl
push
inc
push
pop
repnz
sti
int
xor
sbb
and
mov
std
cmpb
iret
mov
adc
subl
sub
cmpsl
jno
xchg
stc
ret
test
std
pop
pop
dec
ljmp
out
fdivl
pop
or
lret
pslld
fildll
dec
into
inc
adc
nop
push
ss
jmp
stc
mov
dec
pop
xchg
mov
dec
jmp
cmp
daa
fistl
out
pop
xor
test
mov
pusha
test
loop
sub
adc
testl
inc
pushf
inc
pop
pop
cwtl
xor
or
pop
and
push
xlat
ljmp
pop
nop
mov
inc
xchg
cwtl
lods
or
mov
imul
cmpsl
mov
mov
jl
hlt
aas
rcrl
pop
mov
dec
mov
mov
sub
test
dec
sti
pop
jae
cmp
dec
in
lret
call
outsl
pusha
pop
rcl
inc
test
pop
and
mov
mov
enter
or
lds
mov
ret
scas
adc
fucom
dec
jmp
xor
mov
pushf
xchg
fldcw
daa
push
xor
lret
jmp
shll
mov
mov
mov
dec
les
popf
mov
loopne
in
addr16
cmp
or
scas
pushf
sahf
and
pop
shlb
ds
mov
loope
pop
mov
mov
loope
int3
icebp
dec
jne
mov
addl
xor
pop
xlat
jmp
or
ja
mov
mov
sub
adc
popf
mov
stos
add
inc
movsb
pop
test
hlt
stos
inc
xor
in
xor
mov
sbb
movsl
fildll
or
add
sbb
jl
cld
jmp
imul
sbb
cmpsb
cld
movsl
mov
mov
and
push
jb
inc
repz
cli
pop
dec
cmpsb
jl
in
pop
test
and
addl
xchg
es
mov
adc
adcb
cmp
jle
in
cmp
inc
inc
scas
in
rorb
sti
aam
mov
ss
mov
mov
cmpsl
mov
dec
pop
xchg
sahf
adcl
jns
or
sbb
lods
add
mov
mov
and
jp
outsl
push
call
mov
and
flds
movsl
cmp
stos
out
add
imul
movsb
mov
sub
shll
xchg
andb
imul
mov
dec
cmp
mov
jmp
dec
lcall
js
xlat
xor
cmp
stos
test
imul
or
popa
arpl
jno
int
hlt
add
xor
mov
jno
sbbl
cmp
fxch
movl
adc
push
fistpll
sub
pop
xor
pop
imul
out
sbb
mov
sub
nop
sti
jae
add
mov
dec
xor
or
adcl
mov
rol
dec
add
in
xchg
push
lea
out
add
ja
popf
cmp
and
xchg
fucomip
inc
mov
and
mov
xchg
push
aaa
push
jg
jge
outsl
fucomip
rorb
dec
mov
pop
fwait
pop
jmp
movsl
dec
mov
loop
jp
lahf
mov
or
gs
loope
adc
dec
or
mov
inc
cltd
sti
hlt
movsl
sahf
mov
daa
lret
or
data16
xchg
jle
xchg
pop
ljmp
xchg
mov
and
dec
cmp
or
add
inc
mov
cli
cmpsl
xchg
shrl
or
xchg
xor
shlb
xchg
int3
out
ss
or
push
push
das
data16
pushf
cltd
mov
cmp
mov
cld
stos
add
xor
add
xor
les
insb
cmp
loopne
rolb
lahf
mov
sub
mov
adc
leave
and
data16
add
cli
push
jae
adc
adc
jno
leave
stos
add
and
mov
inc
mov
cmp
loope
pusha
jbe
dec
aam
xchg
xchg
lahf
stos
call
fnstcw
xlat
clc
pcmpgtd
mov
and
xor
js
xor
mov
jmp
test
xor
xchg
repz
xor
popa
xor
sbb
pop
cmp
xor
lret
aaa
lret
lahf
cltd
loop
push
repz
arpl
mov
loop
mov
ds
cld
loopne
insb
jle
inc
cmpsb
push
repz
ss
rclb
pop
xchg
push
add
lds
mov
das
and
movsl
inc
sub
mov
adc
test
repnz
cmp
push
iret
mov
aaa
and
sarb
pop
sbb
scas
xor
call
int
xchg
fldt
cmp
jge
shll
pop
and
repnz
mov
xlat
ss
outsb
mov
cmp
pusha
repnz
fbld
shrb
je
out
mov
mov
fiaddl
movsl
out
imul
sbb
jle
adc
and
mov
insl
push
add
jge
mov
fcompl
jne
lods
jmp
push
mov
outsb
inc
push
iret
fidivrs
fdivp
loopne
movsl
dec
cmpsb
or
push
lea
push
shll
lock
mov
test
call
into
mov
xchg
js
pop
mov
arpl
push
jle
lahf
ret
decl
dec
int3
cmp
mov
mov
mov
mov
sub
cmc
xchg
push
inc
dec
fidivs
lahf
sbb
testl
cmp
xchg
pop
cli
lock
sbb
out
nop
orb
sbb
or
fiadds
pop
adcl
mov
cmp
jle
adc
stos
add
mov
les
push
jo
mov
lods
jp
loope
in
rorl
iret
mov
mov
mov
cmpsb
or
hlt
nop
out
push
lock
lods
movups
pop
fldl
mov
inc
jle
mov
in
cwtl
imul
fdivr
or
mov
add
mov
arpl
cwtl
push
mov
xchg
jbe
jecxz
pop
andl
mov
enter
icebp
or
xor
bound
xchg
lea
adc
pop
mov
mov
movsl
out
mov
dec
mov
cmc
rcrl
pop
fistps
cltd
pop
aad
hlt
data16
or
push
add
je
cmp
sti
sub
xchg
lret
daa
adc
stc
cld
mov
out
inc
cld
xlat
push
cmp
adc
scas
lahf
mov
lret
pop
push
mov
pop
jmp
or
sbb
mov
repz
loope
ret
push
sti
cmp
daa
arpl
cmp
xchg
ficompl
push
pop
xchg
push
sub
xor
or
sbb
imul
push
lods
lret
ljmp
outsl
loope
out
lds
lods
ja
sbb
mov
jnp
push
mov
mov
mov
pop
std
inc
lret
dec
sub
xchg
mov
std
addr16
in
xchg
aas
movsb
int3
sub
iret
mov
jbe
mov
ljmp
movsb
jmp
and
inc
lods
jle
cld
add
notl
and
sub
pop
ds
pop
pop
mov
repz
shl
loopne
icebp
inc
sbb
loope
add
mov
and
sahf
push
std
sub
iret
lock
ret
mov
sahf
jmp
sub
push
in
rcr
pop
push
stc
call
fistl
js
arpl
inc
pushf
push
or
shlb
pop
jp
sub
outsb
rcr
fidivrs
sub
aaa
lret
push
cmp
add
std
ljmp
xchg
insl
imul
adc
outsb
xchg
loopne
test
or
add
frstor
inc
test
imul
das
ja
mov
stos
or
imul
lods
test
imull
mov
xor
roll
shl
jnp
and
xor
imul
ret
int3
mov
cmp
dec
push
sub
push
mov
or
cmc
fdivs
xor
and
out
aaa
inc
push
inc
xchg
inc
push
adc
pop
dec
jmp
xor
cmp
pop
sbb
mov
xor
iret
cmp
lds
push
cmpsl
shrl
add
jmp
pop
jl
add
rcrb
loop
lock
mov
ss
xchg
data16
divl
jb
loopne
data16
aam
inc
pop
inc
ja
dec
jle
loop
sbb
int3
leave
shl
out
jnp
lea
jo
std
xchg
jecxz
fsubrs
bound
pushf
pop
mov
imul
adc
sbb
outsl
stc
test
cltd
testl
int
mov
cmp
jmp
or
push
cltd
push
call
call
sub
sub
pop
movsl
jmp
jg
stos
push
add
sbb
xor
inc
add
arpl
or
jnp
call
rcrl
fs
push
fisubrs
or
pop
hlt
adc
mov
test
mov
vmaxpd
xchg
je
ds
mov
push
push
pop
in
mov
ds
cld
ljmp
add
push
dec
push
fsubrp
xchg
mov
inc
in
adc
xchg
int3
mov
imul
mov
fisttpll
aam
cwtl
shlb
cmpsb
clc
dec
inc
adc
test
inc
push
insb
rcrb
loop
jmp
fildll
push
dec
inc
lock
or
cmpsl
adc
add
frstor
mov
mov
flds
mov
les
fcoms
int
xchg
and
cmpsl
pushf
mov
jne
adc
xor
dec
mov
popa
cmp
sub
sub
es
mov
push
insb
xchg
roll
push
in
sub
pop
testl
sarb
xchg
sti
je
add
mov
data16
inc
rcl
insb
xchg
dec
fimuls
mov
jmp
lret
mov
mov
mov
pop
loope
mov
bound
es
rcl
cld
push
loopne
or
push
and
mov
frstor
xor
jns
xchg
xchg
das
or
sbb
outsb
mov
sbb
and
push
xor
cwtl
pop
push
or
or
mov
mov
inc
xchg
hlt
repz
push
fcoms
jns
sbbl
add
xor
fldt
movsl
loope
inc
mov
rcll
mov
push
inc
push
mov
push
stc
leave
pop
pop
sub
cltd
stos
push
xor
add
enter
repz
out
add
lock
sub
push
jmp
ss
pop
pop
push
mov
clc
pop
jmp
mov
aam
or
mov
clc
sti
imul
ret
adc
mov
push
leave
add
and
mov
sbb
test
inc
iret
push
rcrb
mov
clc
adc
sbb
daa
pop
popf
inc
jo
mov
jno
lods
sub
pushf
xchg
mov
call
inc
inc
pop
scas
add
mov
outsl
fstps
push
push
mov
and
movl
dec
xor
mov
sbb
mov
lods
push
out
and
add
mov
ds
pop
xor
sbb
fwait
sbb
ja
mov
fidivrl
sbb
xchg
add
in
pop
and
ret
ficoms
xlat
daa
pushl
adc
test
and
or
add
cmp
es
pop
xchg
xchg
and
or
sbb
or
psrld
mov
adc
ret
out
dec
out
fsts
loope
sahf
fnstcw
or
inc
aad
xchg
xor
xchg
movsb
pop
jecxz
loope
and
and
cmc
mov
out
cmpsb
jl
sti
ljmp
loop
mov
push
or
mov
loop
faddl
jp
int
mov
jmp
add
icebp
cmp
jecxz
fcompl
fsts
and
inc
sbb
dec
cmc
ss
xchg
scas
dec
xor
and
rolb
ds
xor
incb
push
xchg
shll
outsl
push
xor
je
repz
fwait
mov
jns
dec
idiv
jp
push
push
lods
aad
repnz
push
cmpsl
pop
testl
pop
loopne
je
sbb
sarl
mov
xor
jnp
nop
scas
push
add
inc
adc
rolb
pop
jge
jb
iret
cmp
mov
inc
mov
jge
inc
push
push
jb
or
mov
dec
mov
fwait
les
mov
or
test
cmpsb
repz
aad
sbb
cld
call
mov
outsl
lea
pcmpgtd
inc
sub
mov
cmp
or
gs
push
popa
adc
inc
scas
ja
iret
jg
and
xchg
mov
das
movsb
mov
pop
and
rcll
mov
push
in
adc
xor
aaa
enter
dec
inc
xor
jb
test
in
jno
jl
int3
out
fwait
cwtl
popf
mov
mov
lods
push
xchg
inc
fnop
adc
fisubrl
inc
lret
in
mov
mov
adc
add
or
daa
mov
and
addr16
xor
xor
cmc
sbb
xor
dec
aas
pop
xchg
or
push
clc
pop
and
xchg
ficompl
lds
dec
pop
mov
outsb
fcomip
js
inc
mov
inc
and
xchg
push
mov
fiaddl
jne
lds
sarb
push
pop
jle
pop
push
dec
add
pop
js
subl
mov
sbb
jp
adc
cmp
inc
push
imul
iret
xchg
fcoml
mov
inc
movsl
or
lods
gs
add
add
decb
mov
dec
adc
cld
std
or
in
test
rorb
push
sti
ret
loopne
adc
fstpt
fsts
insb
lahf
mov
incb
pop
adc
in
cmpl
and
inc
xchg
add
aam
das
fiaddl
push
jbe
addr16
xor
jl
movsb
xor
mov
jg
daa
sbb
nop
cmp
push
stc
pushf
and
outsb
cmp
pop
mov
xchg
sti
outsl
insl
insb
xchg
pop
gs
aam
xchg
pop
fdivl
mov
fisubl
test
dec
lea
mov
push
mov
data16
out
loope
jnp
lock
jo
mov
dec
jns
arpl
mov
mov
movl
test
xor
les
mov
mov
jecxz
loop
inc
dec
xchg
jp
fstps
mov
pop
mov
in
lods
mov
lcall
xor
and
or
inc
test
insl
insl
xchg
movsl
cwtl
dec
js
and
dec
ds
cmpsl
pop
mov
loop
pop
cmpsb
pop
out
pop
lds
xor
inc
mov
daa
push
xor
aad
cmp
jae
cs
xor
push
sub
sbb
adc
hlt
mov
push
cltd
adc
dec
push
aas
jae
call
lcall
out
ds
push
adc
jb
lods
inc
xor
mov
cmp
cwtl
out
arpl
or
cmp
sub
mov
xlat
sar
mov
ss
loopne
push
popa
sbb
fdivs
fdivrl
add
sti
xchg
push
mov
insl
cmpsl
mov
addb
xchg
pop
cld
cmp
jne
ficoms
leave
lcall
shrb
loop
pop
jge
hlt
stos
insl
xor
mov
lock
push
mov
mov
in
leave
repz
js
dec
push
adc
add
in
inc
or
jae
ret
push
adc
jle
and
repnz
stos
mov
jmp
das
lret
sbb
pop
xlat
add
pop
movsl
push
xor
jecxz
hlt
jmp
sar
lock
cmpsl
stos
fldt
fimull
push
je
and
or
mov
andl
xlat
mov
inc
jb
or
es
add
inc
addb
mov
je
cmp
cld
push
stos
ret
adc
cld
sbb
jmp
adc
jmp
cmc
sahf
sbb
jg
dec
mov
das
and
dec
add
add
repnz
int3
mov
dec
jns
fwait
inc
push
in
xor
bound
fildll
addr16
addr16
int3
mov
adc
insb
imul
cli
mov
rol
outsl
add
dec
adc
dec
repnz
or
add
inc
rolb
mov
xor
dec
pop
out
das
mov
popf
js
xchg
mov
lahf
idivb
pop
ss
xchg
jnp
popa
ljmp
into
adc
cmp
mov
sbb
pushf
push
and
hlt
push
cltd
mov
dec
mov
sti
lret
aad
ret
push
and
popa
pop
and
out
xor
jnp
in
inc
jecxz
mov
push
cmpsb
sbb
cmp
xor
in
movsl
jno
fcmovnbe
das
or
mov
iret
xchg
xor
addr16
mov
sti
out
out
popa
push
xlat
imul
incl
pop
and
insb
scas
jp
ret
lret
idiv
mov
and
cltd
or
jmp
sbb
cmp
fbld
cltd
mov
or
sarb
mov
int
out
push
mov
jp
sub
mov
mov
pop
xchg
add
cmpb
jle
testl
xchg
mov
dec
outsl
cmp
ret
mov
dec
mov
push
jb
push
xlat
pop
inc
mov
adc
jle
pop
test
adc
lock
out
jl
xchg
movsb
fs
cmp
leave
movsb
jmp
std
fcoms
mov
cmpsl
sbb
mov
pop
pop
insl
outsb
fadds
xchg
into
stos
sbb
jecxz
adc
cld
dec
sarl
sbb
repz
and
repz
jae
rcll
movsl
mov
sbb
mov
cld
inc
mov
loop
sub
adc
lcall
xorl
xor
popa
inc
sbb
cli
sub
and
dec
insb
loope
jb
cli
dec
dec
scas
jo
xor
or
cli
fistl
stc
mov
lahf
adc
or
inc
sbb
addl
daa
out
push
cmp
cmp
mov
mov
cmpsb
xor
push
mov
out
cmp
or
sbb
dec
fwait
cli
xor
dec
imul
xchg
pop
push
mov
jns
inc
fsubp
out
sbb
add
mov
push
xchg
add
pop
js
lods
mov
inc
push
push
sbb
inc
xlat
insb
popf
inc
push
sub
or
subl
push
xor
into
stos
outsb
shrl
iret
dec
fildll
lret
sub
cmp
icebp
jbe
push
and
and
mov
mov
or
aas
push
mov
cmp
out
adc
mov
cltd
push
sbb
or
aaa
inc
mov
xchg
popa
jne
jmp
jns
es
sbb
sbb
insb
cld
in
sbb
pop
add
in
or
inc
sarl
cmp
adc
bound
pop
cmp
inc
and
mov
pop
test
imul
incl
xor
push
jns
sbbl
test
repnz
jg
add
das
sbb
push
adc
jo
mov
js
idivb
addb
push
lcall
mov
adc
or
xlat
cmp
lret
fistl
or
shl
bound
stos
xchg
int
stos
les
xor
bound
push
mov
imul
and
inc
push
xchg
decb
add
fcompl
jmp
xchg
fnsave
sahf
or
inc
jo
xor
adc
jae
mov
xlat
into
jge
adc
inc
inc
inc
lods
sub
fs
mov
add
push
mov
fwait
add
stos
cmp
fnsave
push
aas
xor
jns
movsb
ja
aam
stos
lods
mov
adcb
out
jb
and
mov
scas
pusha
orl
push
lret
xor
add
or
pop
dec
outsb
insl
or
cld
aad
xchg
lea
dec
and
lods
push
xchg
outsl
cmp
inc
repz
push
pop
outsl
in
add
stos
xchg
addr16
mov
pop
push
cmp
sub
lret
mov
jl
mov
xchg
imul
jle
loope
pop
cmpsb
sbb
push
loopne
ja
fsubs
adc
adcb
lret
dec
rolb
inc
js
mov
insb
pop
ljmp
dec
into
add
stc
cwtl
mov
adc
rcl
jg
mov
cmp
sbb
push
cmp
rcrb
shll
add
pop
adc
cmpsl
addr16
mov
inc
ss
repnz
in
icebp
enter
cmpsb
roll
xchg
test
mov
cmc
inc
sub
inc
mov
out
insl
mov
movsl
subb
mov
sbb
pop
repnz
xorl
ljmp
sbb
jmp
and
sub
xor
mov
jl
test
movlhps
mov
aad
daa
loop
fdivl
push
jne
push
pop
xchg
mov
pop
lods
xlat
sbb
xchg
shrb
in
mov
jnp
pop
xlat
gs
stos
cmc
test
movsb
rolb
mov
mov
cpuid
icebp
mov
sbb
inc
ret
inc
es
xchg
mov
jno
mov
xor
jns
sub
dec
imulb
cs
lods
js
mov
sbb
xchg
rorl
xor
lahf
out
in
test
jne
into
int3
aam
sub
mov
mov
hlt
push
mov
inc
xor
mov
popf
ds
addr16
fists
jle
jg
mov
fcoml
movsb
in
rcrb
lods
fdivrl
outsl
inc
pop
in
shr
sub
dec
cmp
jbe
xor
div
insb
in
movsb
aas
jo
imul
sbb
push
mov
cmp
nop
scas
das
cmp
std
sub
xor
or
adc
xchg
adc
xchg
je
pop
push
mov
pop
int
cltd
jae
xchg
pop
in
loopne
stos
jns
dec
out
das
cmpsl
mov
popf
jo
adc
xor
mov
push
orl
mov
push
pop
xorl
or
out
test
movb
xor
inc
das
inc
dec
cwtl
gs
aad
mov
mov
aaa
sahf
ja
insl
pop
mov
fimull
jg
ret
jp
fwait
and
out
xchg
notl
push
jecxz
notb
xor
push
sbb
in
stos
dec
xlat
sbb
clc
mov
test
or
out
xchg
addr16
arpl
arpl
enter
or
outsb
inc
pusha
xchg
leave
cli
adc
out
mov
mov
sbb
mov
es
ja
dec
int3
out
mov
dec
xchg
add
adc
jecxz
sti
lods
outsl
imul
mov
xchg
out
cltd
or
jae
lahf
icebp
test
adc
push
mov
xchg
fdivs
out
adc
push
mov
test
int3
push
mov
pop
dec
xchg
pop
or
pop
in
cld
adc
mov
inc
dec
lcall
lods
xacquire
inc
mov
ret
test
aas
inc
hlt
cmc
cmpsl
dec
adc
fistpll
testb
jge
dec
daa
or
pushl
and
rcl
xchg
fucomp
xchg
add
faddl
fnstsw
popa
sbb
add
jmp
insb
or
cmc
xchg
push
xor
xor
movsb
push
bound
jns
sbb
inc
pop
enter
int
arpl
rorl
sbb
or
lea
and
push
mov
pop
push
add
out
addr16
aas
les
add
pop
bound
jmp
mov
push
fcomi
pop
cwtl
std
rorl
mov
cmp
insb
repz
xchg
push
dec
adc
in
cltd
clc
fstps
push
mov
cmp
fcmove
jp
das
mov
icebp
xor
push
mov
inc
mov
lods
add
in
fildl
into
dec
daa
daa
cwtl
pop
fnstcw
and
xor
cmp
repz
pop
adc
push
fs
lea
popa
cmpl
cltd
jge
push
fs
sbb
subl
sar
sbb
es
push
jecxz
push
xchg
pop
pusha
das
pop
test
push
add
sarl
loope
sti
mov
nop
cli
jmp
add
add
sbb
push
push
xlat
sub
bound
mov
xor
pop
sbb
jnp
pop
or
xchg
and
lods
dec
adc
mov
xor
insl
inc
pop
adc
jle
mov
test
ljmp
jecxz
add
imul
dec
jo
add
outsl
xor
out
or
pushf
dec
into
fcmovu
lds
push
out
cld
cmpsb
leave
inc
xor
mov
paddd
mov
xor
mov
pop
mov
fildll
ljmp
int
pop
fcmovnb
test
leave
xchg
fcmovbe
sbb
adc
xchg
mov
jne
cld
dec
mov
pop
adc
jns
pop
pop
jmp
lahf
push
fcomi
rcll
mov
dec
clc
inc
aas
loopne
mov
add
cmpsb
push
in
mov
jae
push
gs
fidivs
jne
movsb
inc
inc
push
fs
shll
and
mov
cltd
outsb
je
xor
clc
adc
mov
stc
or
pop
nop
jo
jnp
int
push
scas
xchg
dec
jbe
jae
pusha
fsubr
pusha
add
add
jne
cmc
push
add
cmp
mov
mov
out
insl
hlt
shlb
jl
pop
xor
lcall
or
fs
cmc
ljmp
push
ss
adc
cmc
pop
cmp
push
dec
jp
push
mov
or
outsb
push
adc
das
ret
jno
jecxz
mov
out
pop
dec
orl
int
into
jnp
pop
mov
push
arpl
pop
mov
ljmp
imul
jg
inc
mov
push
pop
jecxz
shll
outsl
fmul
dec
jns
stos
lods
scas
addr16
loope
setnp
mov
mov
pop
sub
sbb
cmpsb
inc
stos
sbb
aam
pop
mov
cld
jp
dec
jg
cmp
jb,pn
lea
add
xor
and
gs
dec
or
addl
push
sbbl
mov
rorl
mov
and
dec
js
sbb
out
mov
xchg
pusha
xchg
push
repnz
sub
bound
je
and
dec
cmp
sub
leave
adc
std
adc
jecxz
add
icebp
cmp
lods
mov
mov
test
rcrl
adc
lcall
dec
rolb
iret
cmpb
xchg
dec
pop
aad
dec
arpl
mov
out
je
xchg
push
fidivrl
cmpl
rolb
fstl
xchg
adc
push
push
jmp
mov
arpl
clc
pop
sub
mov
addr16
sub
fldl
xor
insl
gs
fiadds
in
and
jbe
js
sub
lcall
add
dec
arpl
or
std
pop
pop
ja
sub
pop
cmp
mov
call
and
cltd
stos
sub
gs
mull
lods
imul
fisttps
rcll
dec
mov
cmp
mov
cmpsb
mov
xchg
push
push
addr16
mov
xor
ret
and
add
js
cmp
dec
lds
xchg
mov
imul
and
or
xchg
cmpb
repz
xchg
scas
fwait
push
mov
ret
mov
pusha
jge
dec
sbb
mov
sub
test
jno
ja
xor
mov
mov
or
fwait
clc
lods
adc
pushf
mov
jecxz
mov
js
dec
in
xchg
mov
cld
and
sbb
je
add
adc
lahf
add
pushf
pop
push
fsubr
pop
mov
pop
int
and
imul
xor
pop
cmp
sbb
mov
ss
into
fmuls
pop
es
cmpsl
fbstp
out
mull
mov
xlat
xchg
mov
xchg
bound
popf
loopne
imul
jecxz
adc
mov
sbb
rorl
mov
and
pop
in
stc
adc
inc
lcall
lea
sbb
jne
jmp
push
xor
stc
jmp
test
inc
outsl
push
cmp
das
ret
mov
dec
call
insb
dec
mov
push
idivl
fcoms
stc
icebp
pop
clc
in
lcall
pop
sti
sbb
ret
add
jle
sti
push
repnz
inc
sub
std
nop
repz
stc
scas
out
test
jne
pushf
test
xchg
jae
lock
dec
in
pop
mov
scas
adc
push
push
inc
js
adc
mov
popl
mov
leave
xor
xor
xor
jecxz
pop
fs
jns
adc
cmp
in
add
xor
psubusb
xchg
push
popa
mov
jo
aaa
fwait
cs
insl
add
sbb
jl
mov
mov
fdivl
push
movsl
cmp
or
and
repnz
std
aaa
fdivrl
in
dec
sahf
cmpsl
je
jge
mov
push
out
mov
mov
fcom
jecxz
imul
inc
sahf
adc
fdivp
add
jae
sar
push
sub
lcall
lods
xor
xor
loopne
lods
jmp
jne
push
idiv
dec
xchg
out
add
aaa
mov
pop
lret
outsb
jmp
cmp
add
inc
xor
test
aad
mov
outsl
enter
lods
out
mov
imul
cmp
pushf
decl
fbld
aaa
mov
xchg
jmp
ds
push
rcr
pop
fstpl
push
scas
int3
scas
adc
and
and
ficoms
arpl
mov
ljmp
mov
in
push
icebp
cld
es
xor
sub
jg
pop
mov
mov
scas
xchg
hlt
xor
sbb
jno
andb
lret
and
jno
dec
cmp
mov
jo
pop
mov
xor
mov
lods
cmp
jge
mov
test
sub
ret
pop
cmp
dec
mov
ja
inc
js
pop
sbb
rol
xchg
xor
mov
hlt
in
mov
xchg
out
cltd
xchg
int
push
movsl
xchg
pop
xchg
outsb
mov
dec
jo,pt
jne
rolb
inc
mov
mov
repnz
fucom
push
aad
aad
push
into
pusha
repz
insl
mov
inc
leave
sbb
mov
scas
ficoml
sub
into
stc
push
sbb
sarl
adc
loopne
imul
shlb
and
xchg
sbb
mov
xor
push
mov
cltd
jmp
xchg
pop
scas
mov
push
jl
pop
dec
xlat
pop
pop
xchg
shrl
or
or
aaa
imul
test
sti
xchg
and
ljmp
ljmp
enter
push
insl
lcall
sbb
jae
adc
das
and
cs
add
fucomp
lods
fistpl
jecxz
sub
repnz
out
and
aas
dec
push
out
push
mov
lods
xor
pop
adc
shll
arpl
fldcw
and
pop
or
or
fs
adc
stos
lret
push
cs
cmp
notb
jo
mov
movl
inc
adc
pop
pop
xchg
push
pop
sbb
jb
push
ja
std
jp
ds
dec
icebp
das
push
sbb
add
fldcw
sub
lock
dec
cmp
andb
xchg
sub
xor
sti
xchg
fwait
xor
fwait
mov
pushw
dec
nop
adc
lea
mov
dec
xor
mov
pop
pop
aad
mov
mov
es
data16
insl
push
nop
and
fistps
mov
scas
imul
inc
push
and
dec
lcall
iret
mov
mov
stos
mov
add
xor
pop
ret
aas
mov
jmp
jge
adc
xor
sub
in
xor
or
pop
mov
push
sub
or
js
cmpsl
ss
push
dec
mov
out
shrl
xor
int
lods
jle
fimull
xchg
push
sbb
mov
nop
dec
push
enter
pop
scas
cmp
aad
daa
xor
push
jb
scas
ljmp
push
addr16
icebp
fcmovne
sti
daa
jo
in
push
or
adc
movsl
je
cmp
mov
icebp
mov
fwait
or
cmp
negl
lgs
inc
mov
mov
shlb
adc
xlat
xchg
push
cmp
inc
xor
mov
adc
orl
adc
jp
ret
xor
cmp
je
mov
sbb
cmpsl
je
push
mov
fldl
cmp
test
mov
or
icebp
mov
in
jl
test
repz
cmp
in
dec
notb
pusha
push
dec
loop
fcmovne
jecxz
inc
pop
mov
outsb
pop
xchg
stc
mov
jo
ss
sbb
dec
mov
sub
lock
ja
les
int3
outsl
je
fcomip
pushf
in
pop
dec
sbb
and
int3
pop
mov
adc
clc
aas
or
repnz
push
jecxz
mov
popa
mov
aaa
lea
cmp
fcmovnb
sti
adc
add
out
add
or
arpl
xor
in
adc
das
dec
leave
mov
sub
adc
inc
xchg
sbb
fdivrl
inc
push
sbb
cltd
aaa
rcrl
lods
pusha
push
sbb
lret
lods
push
in
add
xchg
bound
fisttpll
push
iret
pop
pop
cmc
pushf
fwait
xchg
movsl
add
fisttpl
adc
cmp
arpl
popf
mov
stc
fiaddl
nop
inc
shrl
xor
inc
sahf
push
aam
or
xchg
roll
pushl
test
cmpsb
fcmovb
xor
dec
mov
adc
mov
pop
mov
insl
push
in
mov
xchg
push
xchg
xor
mov
rorl
lret
dec
pop
in
and
mov
fdivs
inc
cmp
pop
sub
mov
jo
cmc
dec
sbb
inc
or
xor
and
imull
andl
shr
xchg
mov
neg
push
test
sub
lea
mov
je
cmp
lods
sub
imul
jns
push
js
stos
stc
repz
repnz
nop
mov
daa
cmp
xor
iret
out
or
notb
lds
jns
inc
addr16
cmc
sub
lea
stc
mov
gs
add
push
repz
les
xchg
test
xor
inc
or
jp
pop
arpl
outsb
add
xor
mov
stos
pop
add
lret
sub
sub
push
xchg
movb
xchg
fwait
sti
nop
sub
push
movsl
aam
or
mov
into
pop
sbb
sbb
sbb
out
fwait
ljmp
gs
leave
or
pop
or
test
icebp
or
andb
test
xchg
cmpb
int3
cmp
adc
xor
je
imul
les
pop
popf
sub
adc
add
lea
mov
xchg
inc
ret
test
pop
cmc
jle
xchg
dec
fcmovnu
std
jnp
push
gs
out
push
test
negl
inc
cmpsl
mov
jl
aam
sub
or
ds
mov
mov
sub
pop
jne
inc
and
popa
sub
pop
sbb
mov
jne
mov
and
mov
ret
outsl
mov
sahf
add
and
sub
ffree
xlat
add
mov
or
arpl
loope
fwait
pop
insb
push
mov
aam
shlb
sub
lret
mov
push
addb
add
test
shlb
int3
lea
fistl
ja
js
mov
pop
testb
call
or
push
pop
pop
jecxz
lock
or
stos
repz
push
mov
int3
andl
ret
repz
mov
jmp
mov
inc
or
jns
cs
pop
orb
addr16
mov
in
into
jle
stos
jp
sbb
call
js
fidivrs
out
fdivs
rolb
xchg
sbb
mov
enter
push
xchg
jnp
dec
ljmp
insl
xlat
push
gs
cmp
das
or
jle
mov
mov
jae
push
inc
in
lret
sbb
lods
pop
mov
xor
out
xor
test
push
int3
fsubs
mov
lret
sub
sbb
push
aam
in
adc
push
data16
imulb
xchg
jne
dec
mov
mov
scas
mov
lcall
xor
push
jmp
fldcw
sarl
inc
cmp
stos
or
cmpsl
in
mov
cltd
test
dec
fidivrl
lret
std
stos
and
push
insb
sbb
fsubs
dec
pop
into
or
in
jmp
cmc
inc
testb
loop
cli
pop
out
sbbl
sti
inc
inc
dec
sub
mov
sub
iret
jns
push
jo
arpl
sub
mov
mov
sbb
adc
aam
push
clc
lret
cmp
mov
aad
cmp
loop
stc
repz
fiadds
andb
aad
mov
inc
daa
insl
cmpsb
fimuls
idivl
insb
or
ret
push
inc
push
in
lret
js
sub
mov
pop
and
push
imul
insl
pop
add
stos
xor
mov
imul
mov
mov
je
adc
cmpl
fs
or
stc
movsl
pushf
cli
dec
enter
arpl
bound
push
or
mov
in
rorl
iret
test
pop
mov
mov
sub
stc
pop
dec
fistpl
jb
inc
icebp
inc
test
mov
out
stos
push
dec
add
out
and
sub
mov
pop
cmp
push
insb
or
addb
das
in
shll
fwait
add
push
repz
lahf
xchg
adc
push
outsl
mov
jmp
cwtl
rcrb
pushf
das
xor
mov
xchg
jo
int
repz
add
rol
ds
jg
cmp
movl
cmpsl
leave
pop
push
imull
dec
or
nop
dec
rorl
xchg
mov
and
decl
inc
imul
dec
mov
sub
popf
mull
inc
insl
movd
adc
or
enter
push
out
cld
roll
sbb
sbb
sbb
inc
mov
sbb
mov
pushf
and
xchg
inc
test
xor
fdivrs
pop
es
add
jb
cmp
pushf
in
sub
bound
or
sbb
push
aas
xor
pop
sub
decl
pop
mov
jbe
inc
outsb
mov
xor
stc
pusha
fs
subb
sbbl
or
sub
mov
dec
loope
into
add
fistps
pop
sar
outsl
xchg
loopne
add
cwtl
xrelease
lods
inc
inc
cmp
lock
rcl
mov
fdiv
mov
pop
mov
or
pop
mov
jbe
lods
enter
jae
jbe
sbb
insl
divb
in
or
xor
cmp
lea
push
inc
xor
test
inc
mov
ret
push
lret
jecxz
dec
xchg
jno
int
out
loopne
ret
push
mov
sti
and
stos
dec
lcall
lcall
mov
and
cmp
mov
pop
jbe
dec
ss
sti
mov
fsubs
dec
iret
shlb
inc
sub
ret
loope
mov
add
pop
add
sti
fadds
pop
loop
call
pop
pop
mov
bndldx
mov
js
pop
or
sbb
or
or
fwait
mov
jp
jp
adc
insl
inc
arpl
out
mov
mov
daa
stc
jne
xchg
push
rcrl
mov
xchg
push
xchg
popa
inc
adc
andb
mov
and
mov
call
push
sub
or
sahf
mov
or
push
add
and
stos
push
mov
inc
shlb
lock
jae
fstpl
je
mov
cmp
repnz
ljmp
xor
ret
mov
mov
and
inc
mov
or
xorb
xchg
cmp
cwtl
jno
cmpsl
aas
inc
mov
fcomps
negl
ja
jns
dec
cmc
xchg
push
in
dec
xchg
sahf
sub
in
push
and
add
out
cmp
sub
insb
mov
data16
js
pop
scas
dec
pop
test
fildll
and
ficomps
cmp
cmp
fsubs
cmc
outsb
sbb
inc
xor
add
sarb
das
clc
in
pop
xchg
jle
arpl
mov
loope
cmp
test
ret
call
dec
stos
pop
mov
jns
ja
xor
add
pop
out
mov
pop
rolb
mov
push
add
lret
pop
lock
or
sahf
jnp
hlt
repnz
add
lock
xchg
xchg
fidivrl
lahf
mov
xor
xchg
mov
das
scas
mov
adc
in
sub
or
mov
xlat
add
xchg
in
aas
insb
add
adc
sub
pop
lret
gs
or
stos
jle
ljmp
call
and
sub
rcrl
stc
fcmovne
into
fiaddl
sub
ja
mov
mov
mov
push
jg
cltd
or
sbb
das
lock
hlt
dec
xchg
shl
lea
mov
jne
movsl
push
fnstenv
rolb
hlt
ret
and
loopne
imul
dec
das
xchg
mov
mov
jecxz
mov
sbb
notl
out
push
test
dec
pop
pushf
insb
in
push
and
inc
jmp
out
ret
dec
pushf
pop
dec
ljmp
and
mov
mov
ljmp
out
sarl
notl
cltd
test
orl
push
mov
pop
pop
andl
dec
push
in
xchg
in
stc
fisubrs
shr
xor
xchg
lea
pop
cmp
ret
jmp
sbb
leave
push
jecxz
pushf
leave
push
fsts
mov
adc
jnp
adc
push
xchg
inc
push
mov
push
bound
mov
leave
lcall
cmpsb
cmpsb
push
xor
or
daa
cltd
ss
sahf
ja
push
popa
dec
push
add
ja
xlat
sub
mov
jns
lea
cltd
sub
sbb
pop
jp
out
inc
scas
test
jl
orb
cmp
mov
mov
jo
cs
pusha
cmp
scas
mov
loopne
pop
jae
mov
push
xor
pop
and
sahf
aad
ljmp
aam
add
das
jns
ds
and
shl
inc
loope
test
jge
and
cmp
mov
sbbb
lods
xchg
xchg
arpl
push
mov
and
inc
fmull
pop
lret
mov
adc
adc
leave
fs
sub
test
pushf
dec
and
jne
mov
mov
dec
dec
int
sahf
and
adc
leave
or
add
sbb
ds
cmp
cmp
sbbb
jge
test
aas
inc
sbb
xor
jnp
std
mov
jno
stos
sti
fldt
jle
lahf
push
ret
cmpsl
xchg
xlat
and
movsb
xlat
ss
cmp
jnp
mov
mov
ret
in
mov
out
lcall
sbb
mov
lcall
dec
xor
cwtl
iret
test
icebp
mov
lods
in
ljmp
mov
pop
fcmovne
js
push
imul
loope
sub
mov
scas
dec
mov
sbb
pop
pop
imul
icebp
pop
xor
inc
or
pop
jno
mov
insl
push
int
jo
mov
adcl
test
add
jb
cli
push
inc
inc
movsb
dec
inc
mov
xchg
out
xrelease
pop
lcall
dec
int
sub
cmp
and
fbstp
lds
fstps
push
inc
inc
aaa
jecxz
mov
add
popa
xlat
sti
test
sbb
pop
xchg
mov
add
dec
cs
ret
push
pop
iret
add
sub
push
xchg
mov
pop
xchg
inc
xchg
mov
jnp
jno
push
push
push
test
jb
stc
insb
and
cmc
pop
cmp
stc
movsl
pop
dec
mov
sbb
rorb
adc
int3
jg
ret
stos
mov
push
mov
cmc
mov
xchg
add
movsb
bound
fisttps
jb
push
mov
xchg
cld
mov
adc
xchg
mov
ret
xor
in
jno
dec
adc
movsb
mov
pop
sub
pop
in
adc
mov
scas
push
pop
and
adc
ljmp
daa
mull
mov
sub
lds
cld
pop
loop
and
xchg
les
dec
jne
mov
std
adc
rcr
push
rol
imul
xor
imul
pop
mov
cmp
xor
and
enter
mov
je
sbb
outsl
lds
js
adc
sbb
sti
test
std
in
dec
fstps
rorl
sbb
lcall
scas
repz
pop
loope
inc
xor
pop
clc
lods
push
int
and
test
stc
add
clc
add
xchg
inc
lods
add
dec
and
jns
nop
dec
mov
lahf
or
and
mov
insl
cmp
jg
popf
lea
or
adc
js
andl
xchg
and
mov
pop
sti
gs
aad
and
mov
lahf
lock
jae
daa
jae
mov
adc
div
testb
xor
or
add
adcl
mov
mov
add
enter
mov
ljmp
sub
or
in
lods
jg
scas
and
pop
and
sbb
push
jns
fwait
addr16
rcr
pop
popf
mov
mov
dec
xchg
daa
mov
pop
fnstenv
add
loop
inc
inc
jno
icebp
fiadds
test
ret
sarb
jmp
push
imul
leave
iret
mov
inc
mov
add
jne
subb
mov
lret
mov
leave
or
adc
sti
movsl
xor
xchg
jae
testl
or
add
inc
dec
test
stc
inc
dec
and
adc
jns
or
push
lret
lahf
repnz
addr16
sub
pop
mov
fmuls
adc
bound
nop
imul
fisttpl
hlt
sbb
mov
sahf
rcll
shrb
movsb
movsb
fnstenv
dec
push
shll
push
mov
in
insl
repz
push
or
pushf
je,pt
jns
xlat
lahf
mov
daa
fmuls
pop
mov
or
push
rcll
fs
cmp
push
push
mov
fdivp
mov
repnz
lret
xchg
inc
loope
pop
push
jb
mov
pop
dec
mov
loop
mov
outsl
dec
scas
inc
lods
incl
mov
test
xchg
inc
or
aam
cltd
arpl
add
or
lock
pusha
sbb
inc
test
popa
lods
mov
mov
pop
sub
test
iret
fldt
call
cli
insl
mov
orl
or
xchg
pop
adc
clc
int3
rolb
jns
mov
xor
pop
ret
pop
pushf
leave
arpl
pop
idivl
stos
dec
lock
push
sahf
mov
cmp
testl
ja
inc
std
sbb
jl
popa
test
jmp
xor
nop
mov
nop
add
add
dec
shlb
insl
sbb
mov
push
cmpsb
or
jle
adc
repz
in
xchg
lret
fnstsw
pop
xchg
xchg
inc
mov
xor
mov
aas
out
aad
movsb
andl
xchg
loopne
test
jbe
adcl
sub
faddp
inc
fsubrs
ret
mov
pop
mov
xchg
mov
jmp
mov
push
mov
ds
adc
jmp
cmp
icebp
lea
mov
cmpb
push
repz
adc
pop
ss
jmp
push
xor
mov
xchg
testb
or
xchg
bound
sahf
adc
jnp
pop
leave
add
sub
rorl
push
movsl
clc
lahf
xchg
lcall
mov
or
jmp
sbb
jb
mov
xor
xchg
jle
fimuls
push
outsl
lcall
arpl
mov
mov
ds
lock
inc
addr16
jge
xchg
sub
xorl
fwait
cmp
test
and
mov
ficomps
cmovs
mov
mov
mov
imul
pop
scas
scas
bound
lock
and
lcall
int
icebp
dec
or
mov
mov
lcall
xor
dec
inc
insl
lods
subl
push
push
mov
enter
shlb
mov
nop
pop
xchg
fstl
cmpsl
hlt
les
adc
add
fdivrs
xlat
xor
mov
push
jne
mov
stc
or
das
inc
cmp
int
xor
cmpsb
roll
popf
ds
push
jnp
dec
arpl
and
adc
fwait
lods
int
test
inc
jne
sarb
mov
jmp
xchg
subl
pushf
mov
xchg
mov
dec
scas
cmpsl
mov
and
add
push
or
jno
je
jecxz
lret
sub
insb
clc
add
jmp
dec
std
adc
xor
jno
jecxz
jge
inc
sti
pop
imul
dec
pop
out
inc
js
popa
fst
movsl
mov
mov
and
popf
sub
fdivrs
xor
sbb
data16
sbb
jl
sbb
stos
loopne
xchg
cbtw
loopne
aam
inc
mov
mov
add
xchg
decb
push
ret
xlat
addr16
mov
mov
lods
daa
mov
sbb
mov
push
sub
jmp
test
int
or
hlt
pop
jno
push
cwtl
mov
adc
or
xor
inc
lret
std
fnstenv
pop
idiv
rcl
loopne
and
js
stos
add
leave
icebp
xor
adc
iret
fldt
mov
jmp
xor
dec
jnp
dec
push
adc
popf
mov
pushf
xchg
jns
loopne
xchg
mov
lea
shr
repnz
cmp
ret
xorl
ds
js
jbe
shrl
scas
jb
or
add
ret
frstor
pop
loopne
pop
xchg
jg
mov
jmp
outsb
cmp
inc
cwtl
mov
jmp
sti
clc
repnz
sub
fisttpl
jb
jnp
mov
imul
xchg
mov
mov
loop
cmp
cli
push
dec
mov
push
jbe
sub
and
xor
inc
mov
adc
and
add
dec
xlat
fsubl
xchg
scas
mov
and
sub
es
mov
pop
dec
add
in
rcl
sub
xor
pop
arpl
mov
or
int
sbb
mov
sub
in
pcmpgtd
push
dec
ja
mov
insb
dec
dec
push
out
lea
xchg
cmp
aas
sbb
sbb
loop
xchg
pop
sbb
jmp
hlt
loop
mov
push
ret
lea
push
pop
scas
mov
lods
jae
insl
inc
ret
sbb
jnp
in
adc
int3
jb
or
daa
add
mov
xchg
xchg
mov
outsb
inc
add
in
movsb
push
adcl
cmc
adcb
pusha
out
xor
shl
sahf
pop
push
adc
cmpsb
push
pop
adc
ss
mov
idivb
jg
cmp
pop
mov
push
dec
and
incb
cmp
sub
xchg
mov
pusha
dec
popf
ss
cmp
aad
test
insb
pusha
cmp
stc
add
cmp
je
jb
repz
out
ret
movl
add
jmp
cli
sbb
fdivs
cmc
cwtl
movsl
jae
and
xor
out
aas
jp
pop
in
mov
test
incl
xchg
test
addl
push
pop
inc
into
sti
in
mov
sbb
mov
loope
sub
sbb
andb
cmpsb
add
ret
aas
aas
cs
jecxz
sti
leave
leave
push
mov
pusha
in
js
ljmp
cld
icebp
dec
arpl
or
cli
mov
call
leave
xlat
xor
lods
sub
jne
xor
repz
or
mov
push
push
arpl
lods
test
nop
mov
jecxz
mov
pop
pusha
xor
pop
push
fadds
mov
adc
std
push
cltd
inc
or
dec
jge
decl
sub
testb
mov
test
sti
mov
xor
mov
push
and
push
cmp
mov
ljmp
fldl
mov
push
or
cs
adc
pop
xor
iret
ror
insb
mov
dec
inc
loope
gs
sub
jae
fimull
enter
sub
dec
mov
jecxz
mov
sub
mov
push
push
sbb
addr16
push
push
loopne
inc
jno
and
shlb
out
adc
ja
or
sub
push
sahf
mov
pop
push
mov
mov
fisttpl
and
xchg
in
push
inc
je
imul
add
push
popf
dec
xchg
adc
xor
xchg
jns
pop
stos
sarl
jb
addr16
icebp
pop
push
push
mov
imull
push
xchg
popa
fldt
add
mov
rcr
lret
ss
hlt
push
cli
les
push
cmp
stos
dec
in
xchg
ljmp
mov
test
daa
lods
ss
sbb
fcomp
fwait
insl
repz
imul
adc
idiv
mov
cltd
subb
sub
hlt
inc
into
xchg
aas
inc
sbb
cmc
xor
push
jg
push
push
loop
fisubl
pop
sub
repz
push
or
addl
cmp
sub
cmpsb
ds
sub
cltd
xor
ja
pop
add
add
jo
sahf
dec
imul
pop
dec
mov
fnstcw
jg
fisubl
sbb
and
and
dec
lods
jo
adc
pop
push
jb
inc
ret
movsb
mov
test
call
mov
push
jno
mov
mov
dec
add
or
push
cwtl
test
jo
fnsave
mov
pop
add
sub
add
pop
rclb
sub
mov
sub
shrb
push
leave
pop
movsl
mov
inc
dec
test
les
pop
rolb
mov
pop
outsl
outsl
or
ja
scas
inc
enter
repz
dec
fisubl
ljmp
xor
cmpsb
push
js
pop
out
mov
inc
lcall
fnstenv
arpl
cwtl
inc
sbb
sbb
xorl
inc
out
and
jmp
cs
pop
call
decb
xchg
fs
popa
mov
ficoml
pop
or
ds
dec
pop
cld
pop
push
cld
insl
mov
jp
jo
lahf
icebp
adc
fwait
je
loopne
inc
xchg
scas
cmp
sub
pop
lock
adc
push
lahf
jp,pt
and
pop
jnp
pop
mov
je
js
lcall
cmp
mov
xchg
pusha
hlt
popa
add
push
push
lret
test
and
rorl
mov
int
mov
push
sbb
sbb
xchg
ss
push
pop
push
jge
sti
test
mov
inc
add
loopne
push
fistpl
aas
pop
fiadds
into
jl
cmpsb
insl
mov
movsl
jb
das
sarl
rcll
xchg
cli
stc
inc
jbe
inc
shlb
mov
mov
push
dec
lahf
daa
push
adc
out
sbb
cmp
pusha
test
push
das
ss
push
cld
into
mov
clc
lds
stos
pop
fcompl
sbb
lret
imul
push
jg
int3
mov
les
cmp
and
mov
sub
or
mov
sub
inc
popa
jle
sbb
repz
fistpll
add
and
mov
pop
fidivrl
xor
mov
cmpb
ds
test
fidivs
jns
push
fdiv
push
and
xor
and
in
jmp
sbb
rorl
loop
rorl
jle
test
int3
sbb
jns
inc
outsl
cmp
dec
and
sub
or
cmpsb
pop
sbb
push
fisttpll
lds
jecxz
push
out
test
int3
aas
sub
dec
jmp
scas
pop
jno
mov
shl
xchg
xchg
out
scas
xor
adc
jo
ud0
or
pop
mov
cmp
push
adc
in
add
mov
or
mov
or
jo
lock
fbld
mov
inc
dec
cmpsb
cmp
lahf
arpl
adc
cli
mov
mov
insb
sub
sti
loope
sbb
or
jp
fcompl
lahf
cmc
clc
mov
aad
cmp
push
fstpt
mov
roll
int3
test
pop
xor
xorb
inc
pop
sar
push
mulps
dec
ljmp
sub
add
sti
fists
dec
or
mov
fbstp
add
fcmovb
fcoms
lret
fistpll
fnstenv
sub
or
ret
faddl
sub
mov
mov
outsb
daa
dec
push
xlat
cmp
bound
lds
orb
push
fisubrl
mov
mov
pusha
jo
into
addr16
push
pop
in
xor
cmpsb
dec
cli
adc
xchg
inc
push
lods
sbb
pusha
aas
loope
push
inc
and
fsub
mov
sub
mov
sub
stos
lahf
or
icebp
xlat
jns
shlb
cmc
push
push
js
pop
add
lret
mov
les
or
push
mov
rorb
cltd
xchg
cmc
and
iret
xchg
push
ret
adc
cmp
sub
pop
adc
int3
cmp
ss
push
pop
mov
adc
loop
sbb
fs
and
inc
jecxz
jg
mov
cmp
push
push
sti
cmp
sub
mov
mov
cmp
int3
sub
jae
or
cltd
leave
icebp
les
mov
loopne
dec
lahf
jo
dec
aad
xchg
mov
dec
jle
mov
mov
inc
xor
and
add
js
pusha
stos
push
xchg
cmp
inc
inc
shlb
dec
imul
jle
add
mov
or
enter
pop
xor
inc
adc
jge
popa
cmpb
sub
add
fnstenv
cmp
adc
sbb
fidivl
clc
jbe
arpl
bound
xchg
div
and
jo
xor
icebp
push
mov
inc
push
xchg
mov
jbe
loope
xchg
mov
inc
sub
sub
push
push
cmp
sbbl
xchg
hlt
js
and
in
cwtl
das
and
fwait
ret
adc
push
ret
mov
fs
cmp
loope
js
ljmp
popa
cli
dec
mov
push
add
pop
jo
sbb
int
jle
push
xchg
rol
cli
xlat
aaa
inc
pop
mov
ljmp
jmp
mov
iret
je
jmp
dec
das
xlat
in
push
pop
insl
jp
lock
js
inc
pop
sub
ja
lahf
and
insl
faddl
shl
ficomps
and
and
test
sub
or
sbb
movsb
jo
xor
stos
jbe
sbb
add
test
cld
push
lods
aas
and
ja
or
shlb
push
mov
int
add
xchg
int3
jecxz
sub
leave
mov
js
mov
xchg
xlat
jb
in
push
arpl
sub
clc
movsl
aas
push
jns
lea
adc
sbb
pop
std
and
pop
stos
mov
sbb
mov
cmp
jmp
push
xchg
scas
ja
cmp
aam
push
outsl
hlt
fs
jo
jns
icebp
or
inc
adc
push
enter
lret
inc
jecxz
cmp
subb
cltd
jbe
jns
and
mov
dec
ljmp
push
les
xor
mov
push
insl
aam
and
fisubrl
cmpsb
pusha
insl
ds
mov
dec
pop
pop
lcall
test
or
out
daa
cwtl
into
int
pusha
cmc
xchg
push
pop
lds
mov
pusha
jb
inc
cmp
clc
mov
insl
daa
gs
xor
stc
gs
cmpsb
jnp
in
or
mov
jle
or
push
aaa
xchg
outsb
push
mov
sbb
xchg
add
add
movsb
jle
jo,pn
fisttps
imul
sbb
sub
push
mov
sbb
cltd
int3
stc
notl
addl
inc
inc
popf
into
push
pusha
mov
popa
cmp
cli
sbb
mov
paddsw
aaa
mov
cld
xor
adc
add
sbb
icebp
or
sub
adc
cli
inc
cmp
push
into
repnz
dec
xor
jmp
aas
push
das
mov
ja
adc
fmuls
aam
push
sub
in
into
cwtl
push
int3
mov
stc
mov
stos
cmp
movsb
adc
push
fwait
lahf
sti
js
or
lds
add
jnp
mov
push
mov
js
xor
addr16
scas
lret
adc
rcl
sbb
pop
sbb
xchg
sbbl
cmp
add
inc
popf
rorl
fdivl
xchg
adc
xor
inc
inc
movsl
mov
push
mov
pop
nop
movsl
fstpt
popf
cmp
xchg
nop
pop
cmp
notb
in
lea
stos
xor
mov
adc
lock
ja
pop
mov
in
and
cwtl
and
ret
shl
insb
test
sbb
nop
mov
lcall
lea
cmp
inc
lcall
fisubl
xchg
adc
mov
out
test
xchg
mov
mov
in
es
push
in
and
in
jns
jbe
push
in
xchg
adc
dec
pushf
shll
xlat
xor
mov
loop
push
or
gs
add
pushf
adc
jbe
push
jl
gs
lods
movsl
outsb
bound
add
push
icebp
fwait
pop
insl
or
ror
xchg
std
cs
mov
sarl
mov
loop
jp
loopne
adc
cmpsb
clc
push
push
jne
cwtl
addr16
loope
iret
insl
pop
and
leave
ljmp
jmp
jl
loope
sbb
add
fisubrs
push
test
add
out
repnz
nop
lds
push
inc
stc
cmp
push
enter
pop
mov
cmp
ret
jae
test
bound
mov
imul
lret
gs
lds
fsubl
xchg
xchg
and
dec
je
push
sbb
movsb
jo
loopne
repnz
sub
clc
push
sbb
mov
outsb
negl
mov
daa
mov
add
dec
xchg
or
jge
add
mov
dec
ret
jno
cmp
adcb
fdivrp
add
jo
or
dec
sbb
cld
sbb
loope
gs
fs
je
cmp
notl
fiaddl
xor
or
mov
repz
ljmp
loop
sub
subl
cli
aaa
jne
ds
pop
cmpb
jecxz
call
out
jns
jb
inc
lret
or
aam
in
dec
insb
xchg
test
stos
test
push
dec
pushf
mov
sbb
gs
cmc
push
adc
dec
lds
arpl
sub
ret
mov
pop
dec
je
pop
arpl
jge
or
sub
inc
xchg
ss
cltd
or
and
inc
cld
xchg
testb
aas
jb
ret
push
xor
jp
shll
inc
push
xor
out
mov
cmp
or
fmuls
or
xchg
xchg
loopne
jl
out
pop
iret
dec
popf
fidivrs
aad
int
mov
sti
std
fwait
mov
pop
loopne
sahf
rorl
pop
cmp
imul
mov
lahf
mov
mov
jae
push
xor
xor
mulb
xchg
cmpsb
sti
loopne
jl
sbb
int
sbb
sbb
pop
cmpsb
sub
sti
lret
in
orl
adc
pop
mov
mov
dec
in
dec
dec
adc
cld
sbb
rcr
mov
dec
adc
sub
adc
cmpsl
pusha
jne
mov
arpl
in
enter
jae
cmp
jae
cmp
sahf
sbbl
test
adc
rol
fcoml
call
fsub
test
push
pop
push
scas
data16
mov
jmp
rolb
aam
std
jl
popa
xchg
and
insl
mov
arpl
xor
or
cmp
pop
and
mov
fcomps
cmp
xchg
dec
scas
jl
push
push
or
gs
push
bound
fcoms
ds
jmp
inc
push
adc
sbb
addl
xchg
sbb
add
xor
and
fbstp
daa
cmpsl
aas
adc
out
inc
and
sub
stos
aad
push
add
dec
or
mov
aad
in
addr16
sbb
push
daa
cmc
pop
sub
rorl
jbe
adc
jmp
xor
inc
lret
dec
das
or
ljmp
out
icebp
xchg
push
outsb
mov
push
sbbb
sbb
mov
xchg
scas
loope
dec
or
dec
pop
and
lret
xlat
rcrl
stos
dec
sbb
xchg
insb
jo
mov
mov
xor
int
and
sub
daa
xchg
dec
ret
xchg
lret
xor
jge
cmc
or
imull
out
push
rcr
xor
aad
cmp
xchg
out
testb
or
xchg
cmp
subl
dec
mov
fsubp
push
mov
xor
call
xchg
int3
shll
test
loop
cmp
and
cmpsl
push
sub
push
jl
jno
daa
repz
gs
cmp
dec
ret
testl
decl
dec
mov
ret
sub
dec
mov
je
mov
lock
test
xor
cmc
int3
cwtl
call
sahf
cmp
sub
mov
dec
popf
cli
mov
xchg
jmp
test
mov
in
lret
std
jo
jecxz
push
cmp
sub
sar
xor
loope
cmp
xor
dec
jmp
pop
andl
dec
movsb
out
adc
popa
and
call
dec
pop
mov
outsb
fiaddl
mov
pop
xchg
adcl
ficomps
adc
mov
push
push
jg
or
jg
fwait
push
mov
es
pop
pop
jne
and
test
push
inc
js
popa
inc
arpl
cmp
cmp
repz
scas
add
pop
fildl
sbb
subb
fsubrs
push
xchg
hlt
cmp
inc
pop
iret
nop
ret
repnz
sbb
in
repnz
or
inc
stc
js
mov
int3
push
gs
cmp
pop
adc
inc
push
mov
inc
sbb
icebp
leave
pop
pop
mov
imul
addr16
push
pcmpeqb
push
adc
cwtl
adc
mov
lret
adc
js
pop
inc
dec
or
into
pop
inc
pusha
xchg
and
push
fiaddl
mov
mov
stos
lds
dec
int
xor
clc
sub
fstps
fdivr
sbb
mov
shll
pop
cmp
add
stc
adc
rclb
das
cld
push
popf
cmp
hlt
add
in
addl
adcb
out
stos
mov
lret
aas
popf
arpl
xor
sub
idiv
hlt
lcall
popa
in
ror
sbb
or
and
mov
fsubl
cmp
pusha
or
jo
pushf
or
dec
scas
dec
test
mov
add
in
andl
xchg
mov
inc
adc
xor
and
xchg
out
shlb
xor
xchg
jne
push
sbb
sbb
push
fdivrp
xor
pushf
fistl
sbb
inc
pushf
aas
dec
cwtl
jns
sbb
lahf
out
or
adc
je
test
negb
and
push
dec
test
sub
inc
adc
add
lret
outsb
dec
mov
pop
arpl
aaa
iret
mov
push
out
mov
mov
lock
cmpsb
xchg
adc
mov
clc
cmp
lret
aam
out
jecxz
fstpl
stc
pop
adc
jge
or
iret
jo
inc
ret
outsb
xor
cld
mov
sbb
lods
pop
movsb
popf
inc
cmc
gs
adc
outsb
ja
lcall
jo
stos
movsl
fldlg2
aad
sbb
ja
call
gs
js,pn
fwait
xchg
mov
xor
jae
or
adc
mov
add
scas
pop
pop
es
popf
dec
jnp
sbb
int
vpshaw
addr16
jae
jge
pop
addr16
mov
je
xchg
loop
data16
sbb
lcall
or
adc
pop
sbb
dec
rcll
je
sbb
lea
insl
repz
insl
cmp
or
push
adc
sub
mov
mov
jge
adc
loope
test
mov
push
pop
mov
rcrl
jge
sbb
add
jmp
mov
pop
dec
nop
xlat
mov
movsb
sbb
pop
lods
cmp
mov
pop
int
aam
aam
cs
stos
jns
push
loope
pop
jmp
sti
jnp
aam
dec
int
add
inc
loope
loop
mov
cmpsb
and
cmp
sub
mov
lcall
in
inc
or
push
insl
xchg
shll
fidivrl
lods
inc
cltd
xlat
mov
mov
jmp
or
lea
pop
mov
mov
sbb
adc
add
mov
mov
cmp
bound
adc
mov
repnz
mov
sub
lock
mov
mov
ljmp
push
sahf
inc
call
mov
cmp
jl
jg
icebp
adc
insl
mov
insb
sbb
mov
stos
fisubl
clc
sbb
ficoml
add
cmpsl
fistps
pop
inc
jno
cld
xchg
pop
sub
mov
in
pop
inc
gs
imul
adc
jl
out
push
and
add
std
cmp
int
push
xchg
push
test
cmp
mov
push
add
sahf
nop
xlat
mov
sbb
jne
aad
gs
sbb
sbb
movsl
daa
pop
clc
jb
mov
daa
shl
push
mov
repnz
mov
dec
mov
pop
mov
mov
test
or
mov
leave
sti
push
add
aad
push
push
out
mov
fisttpl
cmpsl
pop
out
inc
nop
out
add
in
fnsave
aam
cs
inc
pop
or
sbb
fstps
fists
insl
je
adc
or
sub
mov
loop
aam
inc
push
mov
sbb
jo
adc
adc
push
add
sbb
push
std
aas
ret
push
fwait
add
stos
cmc
int3
add
subl
xor
hlt
pop
xchg
mov
imul
jl
dec
mov
fwait
xchg
fsubl
in
sub
repz
inc
cmp
mov
and
push
mov
mov
insb
mov
mov
xor
jnp
xor
cld
gs
push
push
lock
in
aas
push
lret
cltd
mov
fimull
test
imul
fcmovnu
in
je
fnsetpm(287
cmp
cmp
jg
sahf
adc
push
push
cmpsl
jl
mov
xor
jge
fsub
adc
jle
loope
je
xchg
cmpsb
mov
and
mov
idivb
dec
mov
movsb
xor
add
pop
cs
jae
test
xorl
fdivs
pop
les
lods
xor
aam
decl
popa
jbe
mov
out
fbld
xlat
sbb
cmpsl
xchg
mov
sbb
stc
lahf
add
push
movsb
int
loop
js
fnstcw
cmc
mov
mov
or
cld
stos
or
pop
aaa
pop
mov
inc
sbb
stos
xor
cld
jl
push
xchg
adc
adc
adc
add
add
mov
lahf
outsb
jle
fcoms
and
imul
add
mov
in
dec
in
divl
cld
lahf
jnp
or
or
int
and
lock
inc
mov
test
and
inc
pop
sbb
mov
xor
dec
and
sbb
in
pop
push
or
aaa
cld
cs
sub
stc
test
iret
xor
in
call
repnz
in
sbb
or
clc
sbb
mov
dec
rcrb
push
ja
ja
mov
leave
inc
inc
pop
push
mov
add
pusha
inc
or
dec
dec
pop
or
outsl
jne
pop
mov
and
mov
mov
cmpsl
mov
or
sub
shll
xor
popf
or
jmp
push
xor
cmp
jl
jp
mov
lods
lcall
dec
imull
mov
cli
cwtl
inc
outsb
mov
sbb
xchg
setne
fldenv
dec
hlt
fs
sub
mov
xchg
shll
mov
leave
sub
mov
ss
xchg
mov
mov
dec
mov
push
pop
sbb
sahf
mov
push
dec
xor
arpl
xchg
pushfw
rclb
inc
fcoms
mov
mov
or
mov
xchg
xor
xchg
push
sub
mov
pop
ret
imul
je
pop
pop
in
aas
dec
pusha
es
jne
sub
mov
pop
clc
pop
jb
cs
iret
xchg
xor
push
dec
dec
daa
dec
fldenv
mov
xor
mov
jg
mov
incb
popa
movsl
int3
cmp
push
fdiv
stos
mov
cli
dec
je
pop
clc
pop
or
stc
push
xor
test
aad
xchg
enter
arpl
in
dec
pop
sub
or
jnp
jb
cmpsl
pop
sub
pop
push
cwtl
dec
test
adc
xchg
push
cmp
scas
xor
ret
push
pop
mov
jb
dec
inc
push
cmpsl
aam
loopne
cmpsl
push
imul
scas
adc
adc
dec
cmp
in
lret
insl
and
add
adc
aaa
in
stos
jle
into
pop
cmp
dec
icebp
xchg
jecxz
dec
inc
ret
jo
scas
cmp
dec
mov
xlat
outsb
cmc
shll
ljmp
loop
lock
push
cmp
fdiv
shl
jle
repz
lcall
bound
inc
jg
inc
mov
repnz
cmp
mov
pop
adc
mov
movsb
ds
lods
cmp
mov
jne
pop
mov
ret
xor
and
xor
lods
cmovge
scas
std
jae
jmp
jl
mov
fsubrl
pop
or
cmp
jle
idiv
mov
mov
sbb
add
sti
dec
out
push
arpl
sbb
daa
xlat
into
loope
sub
fwait
jge
sbb
in
dec
mov
rorl
xchg
push
cmp
push
bound
outsb
dec
icebp
daa
mov
pop
call
sbb
je
out
loop
adc
add
lock
and
xchg
and
loop
dec
fstp
bound
add
nop
push
fdivl
xor
sbb
divl
mov
test
ja
popf
fistpll
sub
aas
cli
repz
fsubl
mov
pushf
in
xlat
int3
jb
lret
mov
mov
cli
pushl
push
cltd
arpl
das
push
ss
insb
mov
xchg
lds
pushf
jb
mov
fisubs
je
insl
bound
jl
xor
xor
outsl
jp
and
adcb
cmp
icebp
inc
jns
jge
mov
dec
cmp
xchg
pop
in
sbb
mov
cli
adc
mov
icebp
mov
cmpsb
xchg
dec
repz
cmp
push
pop
jo
sbb
pop
dec
sbb
pop
xchg
xor
sub
adc
push
das
push
cli
mov
repz
es
ljmp
sub
enter
pushl
adc
add
cmpb
scas
sahf
je
out
loop
ljmp
lea
or
sub
adc
push
out
fcoml
scas
xchg
ret
mov
jg
aad
repnz
pop
xchg
mov
xor
push
and
mov
mov
xchg
add
xchg
jp
in
shlb
sub
es
cmpb
mov
cmc
out
sbb
insl
or
les
ja
imul
xlat
repz
in
xchg
test
jns
adc
fisubrl
inc
xor
add
loopne
test
ret
int
out
or
or
push
mov
sub
jp
push
int3
xor
test
add
lods
push
push
inc
inc
out
sbb
sbb
rcl
das
add
push
in
cwtl
pop
mov
aam
jns
cmc
addb
jge
repz
jg
add
fldenv
lahf
inc
rcl
dec
popa
into
lock
bnd
mov
cmp
mov
adc
fwait
lods
fwait
into
jle
roll
hlt
or
jge
iret
cli
mov
xchg
mov
pop
ret
aad
lock
test
xchg
scas
andb
adc
xor
mov
test
sbb
cmpsb
sahf
ljmp
xor
adc
cli
and
jno
sbb
xchg
out
and
out
adc
imul
xor
es
sbb
mov
pop
and
cmp
add
push
adc
call
cmp
loopne
jg
and
push
sub
cmp
cs
cmp
pop
fwait
adc
ret
jmp
dec
ljmp
mov
push
rclb
ss
pop
repz
pop
cmp
mov
fdivr
rol
shl
xchg
out
rolb
ss
and
mov
pushf
cmp
or
xor
shl
frstor
loop
lret
movsl
jle
enter
in
cs
aam
cmp
jns
xchg
sub
insl
dec
adc
aas
and
jl
ret
jb
xchg
fs
and
js
mov
or
scas
ret
push
pop
push
push
test
hlt
push
or
repz
push
pop
out
in
out
cmpsb
lret
addr16
out
add
vcvtpd2ps
push
sbb
call
outsl
push
call
push
stos
cmpsl
fcompl
nop
data16
out
lret
lcall
fisubs
fxch
add
decb
xchg
lods
adcb
std
hlt
orl
loope
mov
adcb
in
fimuls
cltd
clc
cmc
jecxz
or
push
pop
dec
push
stc
fsubl
xor
in
rolb
cmp
outsb
dec
bound
rcrl
inc
sahf
mov
ret
mov
pop
jp
lock
mov
imulb
js
sbb
lcall
pop
inc
jle
pushf
push
ss
jmp
mov
es
cli
fmull
push
dec
cmpsl
jmp
dec
je
mov
or
or
cmpb
cmp
flds
inc
xor
push
nop
das
inc
jns
jbe
or
test
fisubrl
xor
mov
push
bound
leave
sbb
lds
ds
aad
xchg
xor
and
pop
cld
gs
rorb
add
out
pop
dec
mov
je
adc
lods
sub
psrad
dec
iret
pop
pop
push
or
xor
inc
fwait
nop
push
pop
data16
dec
push
fwait
enter
xor
ror
xchg
rcrl
lret
icebp
inc
jo
mov
repnz
mov
pusha
cmp
fidivrs
shlb
jne
mov
js
and
pop
push
movsl
xor
pop
js
inc
jmp
jo
xchg
add
shll
mov
mov
xor
push
push
push
push
cld
movzbl
fcoml
or
mov
adc
add
sub
call
test
pop
xor
int
adc
int3
xor
jecxz
push
sbbb
shrb
add
inc
push
jnp
pop
adc
jp
pop
inc
outsl
mov
push
or
cmpsl
mov
loop
out
rorb
or
cmpsl
mov
push
lcall
mov
push
and
sti
push
dec
lret
ljmp
scas
cmp
lods
icebp
push
add
mov
popf
push
fmulp
and
xchg
popa
cmc
or
add
push
cmp
jecxz
stos
cmc
cltd
mov
jae
and
bound
jmp
push
out
sbb
sub
sbb
sbb
in
lahf
scas
add
out
negb
hlt
fs
jmp
ficompl
push
out
out
loop
lock
add
leave
jbe
or
pushl
mov
pop
das
add
mov
dec
pop
jnp
mov
adc
jmp
adc
imul
fisubrl
xchg
xor
and
lret
jecxz
or
xor
gs
jae
push
insb
inc
outsl
dec
xchg
in
pushf
jmp
movsl
jmp
or
push
mov
fldenv
icebp
movq
jge
jge
cmp
pop
incb
js
ljmp
xchg
sub
mov
jmp
imul
fstps
or
stos
sbb
daa
pop
push
push
insl
mov
jg
and
push
push
and
aam
nop
pop
adc
jns
cltd
aaa
cmpl
add
mov
xchg
addb
leave
sbb
xorl
mov
adc
loop
not
jnp
dec
cmp
inc
mov
lods
xor
adc
pop
aaa
xor
stos
js
fwait
xor
cmp
fs
jg
mov
test
dec
sbb
mov
add
sub
das
or
and
jbe
lea
popf
lret
lods
insl
xor
pop
jp
popa
loopne
out
pop
ficoms
cmp
jne
cmp
outsl
fistl
mov
add
xchg
lods
adc
mov
leave
xor
test
cltd
lods
ds
mov
lods
sbb
movsl
arpl
mov
out
sbb
jnp
pusha
mov
out
xor
in
and
cli
xchg
gs
sub
and
add
push
add
xchg
pop
jbe
cmpsb
nop
inc
outsb
push
in
cmp
rol
in
sub
mov
ss
sahf
pop
lea
pop
inc
or
insb
addb
adc
bound
add
xchg
int
lock
cmp
in
and
or
xchg
sbb
xchg
or
in
cmp
xlat
out
je
test
mov
mov
xchg
adc
lcall
hlt
movsb
jno
inc
andb
xor
shrl
push
adc
pop
add
stos
cmp
mov
jge
mov
adc
cmp
pushf
mov
mov
push
mov
sbb
push
mov
adc
das
push
insl
and
movsb
enter
popa
cld
les
test
adc
loop
push
inc
clc
mov
int
jle
lds
rorb
cmp
lret
and
mov
or
jnp
inc
daa
out
mov
pop
push
dec
lahf
ds
das
jo
cmp
sahf
sub
shlb
or
mov
incl
cli
lds
jmp
cs
add
cmp
std
nop
or
insl
bswap
cltd
loope
xchg
push
cmc
push
fs
adc
dec
push
pop
add
or
inc
xor
push
add
adc
xor
adc
and
das
ficoms
push
cmc
pop
dec
loop
aam
mov
jae
mov
or
sub
ds
incb
sbb
sarl
mov
or
scas
aam
adc
ljmp
push
inc
pop
push
xchg
pop
mov
pop
xlat
pop
aad
loop
lods
pop
add
mov
jbe
ret
jg
mov
or
mov
in
stos
test
cmc
or
call
mov
or
xor
push
jo
insl
push
sub
push
xchg
mov
lea
loop
imul
push
popa
fmul
rol
push
pop
fcompl
loop
ror
lret
inc
sti
dec
cmp
sbb
addr16
rolb
pop
aaa
fsts
dec
cmp
fs
lret
cs
and
ja
test
fistpll
xchg
sbb
mov
mov
int3
cmpsb
dec
xchg
test
adc
jmp
sbb
cwtl
mov
mov
aam
lea
ret
clc
test
inc
inc
lret
in
nop
sbb
mov
shrl
sub
repz
sbb
or
sub
adc
movsb
jle
cmp
aam
bound
sub
add
dec
dec
icebp
std
pop
cmp
pop
std
pop
ss
sub
mov
sub
mov
aam
adc
or
adc
sbb
xlat
mov
jno
stos
sbb
addb
mov
jle
imul
mov
sub
mov
aaa
xchg
es
mov
mov
fisttpl
xchg
arpl
xor
cld
push
inc
movsb
mov
mov
push
inc
mov
out
push
push
je
aaa
push
pop
test
pusha
lret
test
and
adc
mov
out
adc
das
test
dec
mov
pop
mov
cmp
jne
jmp
lret
cmp
daa
pusha
mov
js
inc
in
out
bound
sti
cmpsl
outsl
inc
lds
out
mov
arpl
addr16
push
popf
daa
orl
jmp
test
insl
ret
pop
pop
into
mov
les
inc
mov
pop
and
cmp
lret
cwtl
arpl
icebp
call
add
outsl
adc
clc
fiaddl
dec
add
and
imul
jecxz
shll
sbb
inc
xchg
nop
push
cmp
shll
hlt
xor
out
lret
outsb
sub
or
sbb
movsl
push
rcrl
loope
xchg
ljmp
loopne
inc
add
cmpsb
pop
cmp
aaa
loope
or
clc
inc
adc
lret
lahf
jmp
jbe
rcrb
xor
cmc
jnp,pn
aas
pop
mov
mov
mov
aaa
stos
jmp
add
pushf
adc
adc
movsl
cmp
cli
adc
cmpsb
jg
fcompl
dec
in
outsl
sbb
push
and
scas
and
ss
jnp
hlt
push
lods
int3
sarl
stos
lea
in
jne
lret
insl
popa
aas
xchg
fmuls
xchg
adc
jbe
xchg
and
nop
pop
clc
mov
mov
lret
sahf
sbb
sahf
and
dec
cwtl
popa
pushf
or
cli
lcall
mov
jmp
pop
ss
stc
jmp
bound
or
and
gs
insb
out
aas
mov
fildll
jg
cmp
mov
sub
xchg
cmp
cmpsl
mov
fsubs
mov
inc
push
mov
sti
mov
xor
push
xor
jb
ret
cs
push
lock
push
sbb
or
dec
testl
add
repnz
or
scas
in
insl
dec
jb
lret
icebp
scas
popf
mov
fnsave
iret
pop
push
mov
push
dec
ret
mov
add
ja
rcrl
ljmp
pusha
shufps
pop
xchg
cmc
lds
or
xlat
cmp
add
add
and
dec
or
les
pop
pushw
in
mov
jae
cmpsl
lods
insl
push
dec
rclb
das
das
xchg
cmp
loopne
push
and
dec
les
popa
cmpb
in
sbb
jg
adc
cmpsl
loope,pt
xchg
arpl
push
lret
pop
sbb
or
dec
into
xor
push
enter
push
and
arpl
pop
xlat
faddl
mov
mov
jo
loopne
lret
test
xchg
pusha
mov
jbe
jge
enter
cmp
mov
xorb
add
mov
push
add
shll
es
pop
mov
js
push
pop
outsb
scas
loopne
out
xchg
call
imul
or
cmp
imul
xor
frstor
jg
faddl
scas
pop
fsts
push
push
xchg
std
nop
push
roll
xchg
mov
arpl
sub
sub
mov
aaa
pop
lcall
arpl
dec
insl
inc
add
jno
scas
xor
or
pop
imul
and
xchg
sub
mov
sbb
cs
ss
cmp
addr16
xor
cltd
rcrl
enter
mov
and
sub
shrb
push
mov
into
xchg
icebp
push
cbtw
unpckhps
xor
dec
xchg
dec
jl
sbb
mov
sarl
xor
andl
add
add
enter
or
lods
xchg
js
insl
popa
repz
loopne
popf
ret
rcll
mov
pop
icebp
fsubrs
popa
and
ds
jae
movsl
enter
xchg
mov
adc
pop
stos
and
in
or
pop
scas
imul
mov
fbld
sub
push
inc
xchg
add
ljmp
lea
adcb
je
out
jge
call
aad
in
lock
inc
in
xor
stos
jnp
std
fwait
das
dec
xchg
xor
adc
and
pop
dec
cmp
aas
in
sub
rcl
pop
jnp
stc
bound
mov
js
jl
fsubrs
pop
xchg
push
lock
idivb
jbe
xchg
pop
test
repz
lods
adc
rcrb
push
into
and
adc
ljmp
mov
imul
dec
xchg
clc
ret
mov
aaa
bound
sub
es
mov
cld
popl
sbb
ret
cmp
jle
lea
push
jae
jbe
jge
pop
mov
add
loop
and
mov
enter
xor
cmp
sarl
xor
data16
jmp
pop
jno
in
ljmp
push
outsl
daa
jae
shrl
add
or
pop
mov
jae
push
iret
out
fsubs
and
notb
mov
fdivp
out
jbe
int3
pop
jnp
imul
sub
dec
jge
fsubs
sub
es
jae
clc
and
add
cmpsl
sbb
fmuls
cmp
sub
je
xchg
das
and
xchg
sbb
pop
dec
inc
in
cmp
lret
cmp
inc
mov
daa
int3
sbb
add
shrb
loop
or
dec
pop
lds
pop
or
mov
sub
pop
pop
orb
dec
mov
xor
push
or
xor
shll
jno
mov
mov
inc
stc
shl
push
es
in
mov
cmpsl
pop
sub
xchg
lods
sub
cmpsl
stos
arpl
push
daa
or
or
xchg
pusha
outsb
or
scas
adc
add
dec
pop
add
fstpl
cmp
sti
mov
cwtl
sbb
popf
xchg
inc
pop
cmpsl
es
dec
or
push
or
xchg
daa
mov
int3
test
cmp
add
and
xchg
dec
fidivs
clc
addr16
xchg
arpl
xor
mov
movsb
int
xor
xor
imul
inc
sub
out
pop
ja
cwtl
sti
and
cmp
cmpl
loope
xchg
and
cmp
pushf
enter
push
enter
sbb
icebp
pop
jno
mov
pop
and
pop
sub
mov
fucompp
fs
mov
pop
pop
or
mov
test
mov
cmp
divl
lea
mov
or
aas
cld
aam
sub
and
popa
ror
mov
and
aam
lcall
fimull
pop
and
fnsave
add
jmp
push
xchg
imul
mov
push
iret
fwait
sub
push
insb
into
mov
sbb
mov
mov
jbe
es
insl
add
push
add
shl
mov
xor
movsl
mov
clc
sti
or
sti
mov
adc
int
dec
dec
incb
xchg
dec
jge
adc
pop
test
lock
bound
das
popa
jns
call
inc
push
imull
jge
sub
sub
cmpsl
sbb
test
sbb
leave
pop
jb
cld
shll
fisttps
pop
or
addr16
test
mov
push
ds
mov
test
inc
lret
cmp
sub
gs
fldcw
arpl
lock
push
test
jmp
cli
es
xchg
sub
addb
mov
ret
mov
fcoms
sahf
std
mov
dec
ja
ror
inc
mov
daa
aas
pop
mov
inc
lahf
push
xchg
dec
xlat
mov
jnp
dec
ds
push
mov
es
ja
and
or
lods
add
sub
cmpsl
or
nop
xchg
cmp
or
lcall
data16
cli
xchg
notl
fwait
jmp
dec
adc
pop
insl
adc
fcoms
sbb
pop
into
hlt
repz
aaa
adc
pop
xchg
xchg
call
lahf
cmp
int3
inc
cmpsl
add
mov
popf
jbe
inc
or
outsb
add
mov
adc
cli
jmp
push
ret
cmp
cwtl
push
adcb
cmp
or
cli
and
adc
roll
mov
in
mov
xchg
jle
jge
xchg
lahf
sbb
cmp
insb
jno
inc
add
sbb
inc
cmp
push
loop
jp
les
lods
and
or
ja
lahf
sbb
push
mov
jle
repz
mov
mov
jno
sub
ret
xor
mov
mov
cli
mov
or
insb
ret
nop
in
ds
popf
js
les
jmp
or
hlt
adc
sbb
xchg
int3
jbe
les
into
jle
clc
cmc
stos
aad
into
in
pop
hlt
add
loopne
or
mov
dec
xchg
int3
mov
inc
or
arpl
inc
mov
xor
adcb
movsl
aad
test
mov
insb
cmp
loop
bswap
rcrb
mov
xchg
jnp
sahf
cmp
xchg
aad
repnz
inc
in
dec
cmp
test
test
xchg
jecxz
int3
addr16
movl
js
cmp
cmp
mov
mov
iret
cmp
jmp
add
mov
ret
dec
out
push
aad
jae
std
aaa
and
pop
ret
das
out
jns
mov
jns
mov
adc
lock
adc
out
jae
sub
aas
xchg
sub
les
sub
mov
dec
adc
sti
adc
sub
mov
sbb
or
nop
xchg
xchg
dec
and
hlt
rolb
sarb
cli
and
out
scas
dec
mov
add
test
lock
call
cltd
pop
jns
aam
ljmp
xchg
pop
loope
xchg
jge
pop
mov
cmp
pop
test
mov
loop
jecxz
lret
leave
mov
pop
or
or
jl
rep
rcrb
cmp
jecxz
jbe
inc
ja
lea
stos
out
xchg
cmp
outsl
add
mov
call
pop
repnz
jecxz
mov
subb
push
test
idivb
mov
sub
push
xor
stos
xchg
dec
out
addl
lds
adc
mov
push
addr16
cmpb
sub
rorl
jb
mov
sbb
push
push
jmp
lret
incb
mov
outsl
mov
pushf
popf
aaa
push
or
mull
insl
inc
push
jno
xchg
lret
scas
jne
imul
fisttps
jle
scas
mov
pop
movsl
xchg
scas
fnstcw
dec
out
icebp
stc
mov
imul
push
in
mov
add
jno
out
lods
out
sbb
outsb
and
dec
mov
cmpsl
addb
outsb
add
mov
ret
push
sub
lds
sub
rcrl
leave
addr16
enter
stc
sbb
test
mulb
sahf
pusha
mov
sbb
out
movsl
mov
or
test
cmpsl
sub
or
loope
fs
cmpsb
and
pop
xchg
imul
leave
test
adc
push
cmp
adc
in
mov
inc
fisubl
mov
mov
xor
xchg
rcll
adc
mov
push
mov
loopne
cmp
cmp
jmp
mov
xor
pop
xchg
jo
sbb
jmp
mov
push
adc
out
ss
jo
sbb
cs
xlat
xor
pushf
push
dec
ret
jb
adcb
lds
add
sbb
fidivl
ficomps
cmp
inc
loopne
sub
mov
repnz
mov
jp
js
scas
xor
insb
icebp
jg
xchg
outsl
scas
iret
fisttps
cwtl
hlt
loopne
gs
xchg
insl
out
push
sub
clc
enter
imul
fadd
and
lock
pop
call
lock
jp
das
fidivl
mov
ficoms
cmpsl
inc
jecxz
pop
xor
xchg
rolb
idivl
add
mov
mov
push
mov
jle
test
rolb
ret
cmp
ss
sub
sub
fimuls
ja
fimuls
lahf
les
jge
shr
push
or
mov
xchg
insb
dec
inc
sub
dec
lods
pop
sub
or
push
inc
imul
jb
pop
loopne
cmc
or
jbe
dec
jo
sbb
mov
sarb
mov
popa
push
aas
dec
fs
pop
adc
fs
jg
dec
imul
adc
lcall
ss
ja
jo
mov
in
lea
xchg
cmp
lret
int
rorb
sbbl
int3
pusha
jecxz
sub
inc
cmc
xchg
out
jl
pop
cmpsb
movsl
lods
cmp
bound
call
cmp
xor
ja
in
mov
popl
out
test
cmpb
adc
or
adc
frstor
lret
mov
mov
das
sbb
imul
pop
mov
imul
enter
popa
ret
sbb
adc
mov
add
js
sbb
dec
std
jle
roll
pushf
mov
stc
xchg
ss
imul
testl
clc
ds
mov
adc
mov
add
imul
inc
mov
cli
pop
push
cltd
dec
or
outsb
pop
fcomps
mov
fsts
jle
adc
sbb
xchg
push
sbb
lahf
xor
test
sbb
mov
xor
jbe
xchg
add
push
sub
add
push
lret
xor
mov
insb
nop
push
and
cld
inc
add
rclb
push
sub
cmpsb
and
rclb
jmp
push
inc
jnp
dec
pop
call
es
push
jg
mov
xorl
cmpsl
dec
fdivrs
cmp
insl
out
test
aas
mov
sbb
movsb
inc
lods
lock
sti
test
mov
imul
les
push
lds
xchg
in
mov
mov
sbb
repnz
pop
ret
idiv
fildll
int
mov
push
sub
cld
xor
pop
inc
mov
pop
fcoml
fidivrs
std
sub
cmp
js
shrb
sbb
pop
push
ss
pop
insb
out
pop
inc
enter
insb
mov
pop
ret
xor
sbb
cltd
loop
ja
loopne
jmp
test
cmp
clc
leave
dec
cmpsb
adc
rcrl
adc
loop
sarb
popf
jb
xor
fstpt
push
lds
cld
xor
pop
ficoms
fs
adc
jae
inc
stos
pop
shlb
and
dec
test
clc
addl
jno
jge
inc
pop
sub
jmp
inc
dec
lods
sahf
movl
pop
jmp
sub
push
out
mov
pop
sub
sub
nop
btsl
and
popf
lea
dec
cmpsl
or
idivl
xchg
pop
fsubl
push
and
dec
cmpsl
punpckhwd
pop
je
gs
mov
pusha
push
xlat
push
pop
ror
xor
and
mov
loop
movsb
cli
into
leave
jg
movsb
imul
dec
test
cmp
fstpt
and
pop
scas
pushf
jle
adc
out
bound
ljmp
push
and
mov
sub
bound
lret
repnz
ret
ds
fs
push
cmpsb
push
ds
xor
in
inc
imul
mov
xor
daa
sub
in
mov
repz
dec
iret
mov
push
jae,pt
dec
cli
in
movsb
outsb
dec
lret
adc
lock
dec
jo
test
movups
pop
ja
and
or
movsl
ja
lahf
subb
repnz
insb
pop
dec
mov
out
and
hlt
outsb
loopne
cmp
sub
adc
mov
jne
mov
stc
fwait
out
ljmp
lret
and
push
js
push
jbe
leave
ret
lahf
push
hlt
xor
adc
arpl
push
aam
jnp
push
aas
shll
popa
repnz
cli
or
xor
lods
rorb
movsb
sar
push
add
int
or
adc
jmp
jmp
or
mov
xchg
scas
lahf
cmpsl
gs
jae
ss
sub
mov
or
in
sub
aad
push
add
ss
mov
loop
insl
out
sub
cmp
mov
sbb
fdivl
xor
lahf
push
mov
stos
fcmovbe
sub
imul
stos
scas
pop
adc
out
sbb
cmpsl
mov
cmc
lds
push
mov
mov
into
scas
xor
push
popf
sahf
jb
dec
imul
and
aaa
insb
mov
adc
mov
push
sahf
into
pop
xorl
je
xchg
xor
mov
movsb
adcb
addl
push
jbe
dec
lahf
cmp
cwtl
adc
cli
dec
out
pop
neg
gs
sub
push
data16
ret
std
mov
cs
add
les
cmp
add
aaa
pop
ret
and
jne
data16
orb
out
imul
ret
or
nop
lea
and
jg
call
sbb
push
idiv
in
cmpl
adc
pop
adc
js
loop
dec
mov
xor
call
jae
arpl
syscall
add
cmpsb
lret
adc
or
rep
sbb
and
push
pop
add
cmp
inc
or
lea
rcrb
mov
dec
sub
nop
je
push
test
sbb
nop
xchg
adc
sbbl
push
outsb
push
fisubrl
push
dec
add
pop
push
ss
mov
mov
sub
add
adc
cmp
aas
clc
ds
add
xlat
mov
pop
xor
and
pop
pop
jno
rcrl
enter
es
repnz
cwtl
insb
lahf
and
dec
pop
and
in
fs
adc
loop
dec
xchg
out
pop
leave
mov
es
mov
inc
cmc
arpl
or
push
lds
fldl
jne
bswap
add
adc
adc
jbe
into
adc
addr16
rclb
push
arpl
mov
cmpsb
inc
jg
add
in
mov
add
mov
sub
outsl
jl
push
jmp
cmp
stc
jo
mov
cmp
cmpsb
xor
cmp
test
and
pop
add
add
push
push
jp
in
sub
cmp
test
push
shld
xchg
stc
repz
push
loop
hlt
call
inc
inc
and
cmp
outsb
inc
pop
and
and
fmull
cmpsl
int3
adc
mov
addr16
and
mov
mov
stc
xchg
mov
scas
mov
pop
xchg
data16
mov
faddl
outsb
jno
sub
lock
inc
addr16
fwait
xor
iret
sbb
ljmp
insl
enter
out
pop
dec
andb
inc
inc
cli
arpl
or
mov
rcrb
cmp
imul
loopne
imul
mov
imul
clc
aad
xchg
mov
or
pop
sti
dec
pushf
rolb
sbbb
mov
mov
adc
rcrb
popf
lods
int
repz
mov
and
data16
adc
lds
in
and
ljmp
shrb
and
push
out
fwait
mov
mov
xchg
out
pop
fistl
xor
jbe
out
inc
cmp
ret
xor
ss
loopne
addr16
push
inc
test
adc
mov
pop
pop
fstps
and
mov
xlat
jmp
xchg
imul
loop
nop
or
dec
divl
jne
adc
clc
fiadds
mov
sub
idiv
fldt
jns
daa
mov
jg
xchg
xchg
sub
mov
xor
fs
out
repnz
enter
fldenv
cmpsl
xchg
lods
in
das
sti
mov
subb
jno
add
cmp
sbb
ds
add
or
lods
stos
jg,pn
sub
push
add
in
insb
std
push
mov
xchg
inc
jge
shr
mov
insb
cld
mov
lds
add
cmpsb
int3
pop
mov
loope
mov
cmp
in
dec
leave
imul
cmc
gs
xchg
jp
adc
adc
lea
xlat
pop
test
nop
xor
sub
into
imulb
mov
int3
pop
add
cmp
div
insl
mov
bound
aam
lds
push
out
aas
dec
nop
loopne
and
adc
mov
mov
push
jne
jl
or
mov
sub
arpl
add
mov
inc
addr16
pop
mov
insl
in
adc
pop
and
push
push
lret
dec
xor
dec
sub
sbb
xor
dec
or
xchg
aaa
mov
cltd
pop
sub
xor
jmp
bound
push
loopnew
xor
push
cs
repz
cli
subb
adc
je
cld
pop
hlt
cmp
mov
stos
in
test
test
push
sub
xchg
aaa
pop
int
inc
ss
mov
rcl
dec
orl
sbb
lods
mov
adc
cmp
sbb
mov
and
cmp
data16
fs
adc
les
loope
mov
dec
in
mov
add
adc
xchg
fs
jbe
dec
icebp
int
or
cs
int3
adc
ja
and
stc
inc
lea
in
and
pusha
push
ficomps
shr
jb
or
daa
shr
test
in
in
mov
fsub
mov
sub
adcl
aam
fstpl
push
fwait
imul
push
or
mov
out
or
or
repz
lea
push
mov
js
push
mov
out
cmp
iret
orl
cld
arpl
pusha
xchg
push
in
std
jnp
iret
dec
outsb
add
fsubs
outsl
dec
inc
and
loope
outsl
cmp
int
cmp
lret
ficompl
les
out
cltd
popa
push
jge
mov
or
es
add
mov
int3
or
cmp
inc
inc
sbb
push
unpcklps
xchg
outsb
push
insl
out
andl
jne
inc
sti
mov
sub
cmp
in
pop
orb
fsubr
mov
aas
inc
gs
push
outsl
stc
jo
rcrl
xor
pop
adc
mov
jae
jbe
jae
mov
insb
push
mov
cmpsl
es
sub
insl
lahf
cwtl
sub
ja
in
stc
lret
inc
mov
popa
arpl
mov
pop
mov
cmp
mov
sbb
cmc
jns
xchg
ret
dec
or
loop
test
pop
mov
iret
bound
mov
mov
imul
dec
cld
lods
push
cmp
notl
add
push
outsb
mov
incb
sub
xchg
mov
and
jne
jne
outsl
jmp
loop
in
data16
lods
inc
mulb
xchg
jl
mov
in
pushf
js
out
int
inc
cmpsl
adc
aas
cmp
pop
push
clc
ret
xchg
fwait
adc
sbb
lret
test
icebp
or
jo
icebp
add
loope
iret
jns
pushf
jmp
add
sbb
jbe
adc
cwtl
invd
inc
dec
mulb
lods
sub
mov
mov
test
mov
xchg
inc
mov
sbb
sysexit
sarl
adc
div
xchg
jmp
cltd
ljmp
cmp
imul
add
or
dec
addr16
mov
xor
push
inc
int
cs
scas
mov
inc
pop
mov
xchg
dec
push
mov
lods
int
or
mov
adc
cmp
sub
adc
mov
scas
cmp
fs
test
pop
jns
mov
into
out
outsl
push
mov
pop
add
jmp
nop
cmpb
or
xchg
and
adc
movsl
adcl
cmp
fwait
or
mov
loopne
push
adc
inc
cmp
scas
cmpsb
cmpsb
in
pop
xchg
cmp
sbb
and
inc
inc
fxch
jmp
add
adc
xchg
cli
daa
mov
mov
mov
push
jmp
cld
sbb
in
push
pop
adc
mov
pop
gs
mov
adc
ss
pop
mov
insl
sub
mov
jmp
push
pop
sahf
mov
pop
stos
lahf
enter
pop
mov
fistpll
xor
stos
faddl
imul
cmp
test
outsb
dec
cmpsb
pusha
add
insb
inc
or
sub
scas
push
jno
push
push
pop
mov
cmp
mov
ja
dec
xlat
outsb
pop
sti
outsl
cld
push
outsb
and
mov
popf
mov
xchg
cltd
bound
outsb
or
mov
scas
xor
stos
arpl
inc
stc
arpl
push
adc
out
jmp
in
pop
xchg
sub
insl
mov
mov
enter
out
pushf
outsb
mov
orps
or
icebp
adc
insl
mov
shr
fsubs
hlt
xor
mov
lea
add
in
sbb
pop
mov
das
xchg
fldl
es
aaa
add
std
xchg
pop
jne
and
add
scas
sbb
je
dec
pushf
mov
aas
sub
inc
cmp
fmuls
pop
add
stos
shll
adc
jg
pop
dec
mov
pop
push
lahf
mov
mov
push
or
loopne
xchg
jl
pushf
push
test
mov
sbb
fstpl
push
mov
inc
xor
and
ret
cld
and
stc
adc
mov
lock
rclb
rorb
lods
int3
sarb
xor
call
sub
xchg
test
mov
inc
out
inc
or
mov
push
popa
aas
aas
dec
sar
lods
repz
movsl
xchg
in
mov
sbb
jns
sbb
out
push
xor
loop
add
lret
out
and
mov
push
mov
sub
cmpb
fcoms
cmp
in
aam
and
aam
push
outsl
pop
sbb
scas
pushf
cs
dec
cmp
pushf
mov
push
xchg
aas
xlat
dec
icebp
adc
faddl
cmp
dec
cwtl
popf
or
int3
mov
int
sub
stc
mov
test
iret
in
cltd
pop
sub
push
fcomps
lods
pushf
mov
out
test
out
push
jae
mov
call
gs
call
pmulhuw
mov
lcall
outsl
or
stos
and
jecxz
std
test
clc
in
lds
mov
inc
es
add
mov
xchg
xchg
mov
jae
lods
outsb
in
pop
pop
jnp
cmpsl
test
and
inc
adc
out
repz
lds
into
sbb
adc
push
or
sti
fidivrs
xchg
jp
stos
cld
subb
jmp
fcmovnbe
mov
cmp
loope
lret
xor
std
or
in
push
iret
xor
inc
cmp
ja
into
and
push
push
inc
add
or
leave
xor
push
jb,pt
icebp
mov
pop
jle
and
dec
lds
lret
or
add
mov
fs
adc
pop
lcall
lds
xchg
aad
jmp
lret
mov
sbb
push
sbb
fisttpl
push
loop
or
inc
mov
call
fwait
cmp
adc
xchg
jne
xorb
mov
push
xchg
mov
out
cmpsb
mov
dec
push
in
mov
inc
mov
scas
mov
pushf
ljmp
sbb
cmc
jg
and
leave
loopne
aas
stc
cmpsb
jno
pop
shll
xor
xor
lods
and
cmc
rorb
xchg
xor
leave
pop
mov
inc
xor
fucomi
inc
mov
inc
cwtl
dec
call
out
push
mov
mov
xchg
divl
mov
mov
or
pop
ds
lock
lods
sbb
pop
iret
pushf
lds
xor
cmc
pushf
mov
iret
cmp
push
shl
loopne
jo
nop
pop
dec
jo
movsl
xor
inc
cmp
ret
inc
cmp
imul
inc
add
andb
xor
js
cld
push
and
mov
pop
pop
fnstcw
out
inc
add
mov
pop
int3
and
int
gs
popa
daa
movl
push
adc
movsl
out
mov
mov
shr
push
cmp
fimuls
rorb
sub
ret
out
xchg
or
inc
and
ret
loop
xchg
mov
fstpl
pop
and
arpl
mov
inc
ljmp
outsb
push
jo
in
mov
or
jl
scas
inc
call
mov
leave
ljmp
xchg
fildll
imul
jnp
mov
aaa
mov
jne
push
in
push
pop
sar
int
lahf
xlat
pop
sub
mov
xlat
xchg
dec
imul
sub
pcmpeqb
movsl
arpl
adc
cli
testb
dec
fwait
xchg
mov
mov
lret
aas
jo
sarb
push
movsl
cmp
ljmp
mov
cli
and
dec
lret
ret
jmp
or
aas
cmp
ret
push
bnd
add
or
movb
popf
popf
out
gs
dec
les
mov
xchg
sbb
cld
je
ret
aad
adc
xchg
or
call
pop
push
cmpsl
mov
js
pop
gs
test
bound
cwtl
xchg
xor
negb
out
xchg
fucom
push
mov
or
xchg
xchg
xchg
dec
xlat
xchg
iret
test
ficoml
push
inc
push
dec
add
cmp
je
push
jns
sub
sti
push
push
movsb
xchg
cmp
std
pushf
cmp
out
add
mov
ja
dec
adc
xchg
sbb
lcall
mov
add
adc
lret
inc
sbb
sub
sub
mov
cmpsb
mov
out
adc
sbb
xor
add
cwtl
jp
packuswb
sbb
call
imul
out
call
inc
test
mov
mov
lcall
das
sbb
mov
fdivs
lds
daa
or
pop
ror
movsb
push
sub
leave
push
pusha
dec
adc
jae
sub
gs
nop
fstpl
dec
pop
pop
hlt
inc
std
stos
cmp
fdivr
mov
jnp
mov
mov
mov
dec
sbb
cmp
stos
sbb
shlb
je
fwait
mov
bound
push
mov
xor
fistl
push
and
cmp
cld
shrb
jns
sub
or
xor
mov
notb
or
in
insl
sahf
cmp
aam
jno
in
aad
jp
adc
inc
push
cmp
jne
add
xor
pop
and
int3
cmp
jmp
push
pop
js
sbb
stos
repnz
cmp
enter
movsl
enter
inc
fdivs
lods
push
popa
jecxz
jg
popf
mov
jns
push
pushf
shll
or
mov
add
cmp
pop
mov
aas
jle
mov
xchg
push
enter
jl
cmp
or
shlb
push
fs
fstpl
push
cmp
pop
adc
xchg
xrelease
mov
mov
mov
pop
dec
je
mov
loop
or
push
cld
cmpsl
add
add
fcomp
ss
mov
iret
push
dec
inc
xchg
push
inc
sbb
jno
lcall
adc
mov
imul
js
js
pop
mov
and
mov
stos
int3
js
shrb
iret
test
jbe
pop
xchg
add
jne
mov
in
adc
addr16
pop
push
push
lea
mov
mulb
mov
dec
cmp
int
imul
and
jge
mov
insl
pop
sub
cmp
jno
add
repz
xchg
cwtl
sbb
out
push
les
sbb
jo
adc
ja
data16
icebp
push
idivb
cwtl
popf
and
ja
jns
aas
dec
jp
outsb
or
sub
fmull
jecxz
cmpl
sub
xor
mov
inc
xchg
cmc
cmp
jg
mov
lret
pop
dec
dec
mov
repz
andb
les
in
sbb
jno
mov
cmp
push
mov
enter
popa
cmp
stc
add
cmp
pop
push
loopne
and
daa
dec
ja
push
and
into
mulb
mov
xor
out
fcompl
gs
dec
int
bound
jo
dec
imul
cld
push
ja
lds
pusha
nop
dec
cmp
repz
add
mov
les
or
in
adcb
inc
sbb
out
cs
stc
lret
mov
in
mov
cmp
jl
push
es
mov
dec
mov
sub
xchg
dec
call
in
inc
lcall
pop
cwtl
ret
xor
adc
das
fwait
in
sbbb
sarl
xlat
lds
sub
jp
mov
sub
pop
mov
pop
shrb
insb
rcrl
shlb
push
imul
pop
and
mov
leave
adc
js
and
dec
ljmp
lods
dec
int
loopne
leave
jo
aam
cmp
pushf
mov
ret
adcb
push
fiaddl
into
push
adc
cmc
popa
xchg
loope
jbe
sub
fiadds
cli
inc
push
cmpsl
adc
inc
sub
sbb
inc
es
inc
adc
cld
cmpsb
xor
popa
in
aam
mov
push
sbb
and
inc
mov
fmuls
dec
aas
xchg
xchg
insl
test
pop
out
pop
jg
fidivrs
jecxz
hlt
call
out
call
lods
push
pushf
fiaddl
jns
jns
xchg
xlat
stos
sbb
in
stc
mov
jo
xchg
add
rcl
dec
movsb
lahf
je
mov
lea
cmpsb
inc
sbb
xlat
push
aam
es
imul
lea
and
addb
orb
in
lret
sub
insl
cmp
imul
xchg
sub
push
imul
addr16
mov
ds
call
pusha
pop
and
sahf
mov
aad
mov
push
xor
sbb
inc
andl
inc
test
xchg
mov
cmpsl
shll
dec
xchg
pop
jge
sub
cmpsl
inc
mov
mov
sub
enter
mov
sub
rcrb
cmc
cmc
nop
test
cmp
icebp
fcomps
cmp
jecxz
mov
xorl
sbb
insl
pop
imulb
xchg
ret
xchg
insl
adc
dec
mov
mov
sbb
xor
mov
rcrl
or
dec
or
jbe
cld
ss
cmc
jb
adc
push
mov
sahf
sbbb
fsts
lea
insl
fcmovnu
in
sbb
je
ds
jg
out
jg
repz
mov
sbb
mov
pop
loop
add
mov
insb
push
xor
ret
aaa
push
cmp
sub
imul
bswap
jne
nop
xor
test
pop
mov
mov
xchg
jbe
jae
fistl
mov
add
mov
or
loopne
pop
out
in
inc
adc
cli
mov
test
std
outsl
jnp
pop
adc
add
gs
and
out
js
cmp
aam
mov
daa
std
shrb
mov
imul
loopne
jno
rcrl
xchg
rol
xchg
scas
jb
mov
dec
movsl
cmp
adc
xchg
in
jmp
or
jns
push
enter
cmpb
mov
cmp
lds
daa
add
fmull
dec
xchg
out
pusha
sbb
or
add
sbb
pop
mov
push
popf
sbb
pushf
jne
xchg
jae
or
mov
or
xor
hlt
xchg
mov
jecxz
xor
nop
adc
sub
push
mov
arpl
loopne
xchg
adc
std
jb
sub
and
pusha
cmp
cmpl
test
jmp
sar
ss
mov
pop
jo
xor
cs
inc
xchg
mov
insl
dec
repz
inc
adcl
adc
adc
shr
leave
push
mov
mov
shll
out
xchg
pop
mov
inc
adc
in
lock
pop
xchg
push
sahf
imul
sub
cmpsl
sar
or
outsb
inc
xor
popa
imull
shrb
mov
int
and
jl
sub
daa
inc
inc
mov
lock
sbb
es
adc
push
daa
test
out
cmp
inc
ljmp
cmp
daa
cmp
jg
mov
js
popa
inc
mov
pop
hlt
push
in
mov
add
cmpsb
cmp
adc
popa
aas
imul
mov
dec
mov
pop
jecxz
pushf
loop
je
mov
in
cmp
or
jle
xchg
mov
xor
out
imul
jmp
push
movsl
mov
jae
sub
pushf
sbb
nop
std
dec
pop
mov
adc
jne
push
mov
sbb
fmul
nop
push
ds
int3
pusha
out
int3
sbb
aas
push
mov
jne
mov
push
cmp
mov
clc
sub
daa
mov
push
and
sbb
test
aad
adc
into
xor
sub
jne
es
mov
push
out
dec
push
sbb
in
imul
out
fsubr
add
popf
add
xchg
aas
dec
stc
or
inc
jmp
ret
mov
popa
ljmp
sbb
mov
popf
xor
fists
lock
xor
out
adcl
setge
mov
pop
fdivp
mov
cwtl
inc
xor
jg
mov
push
dec
pop
xchg
scas
hlt
stc
mov
inc
xchg
sti
mov
jg
xchg
out
sub
stc
sti
mov
not
mov
leave
popf
mov
enter
inc
mov
push
cmp
je
xchg
aam
lahf
sbb
sahf
xor
shl
mov
shlb
jno
mov
cwtl
lods
out
pop
push
icebp
icebp
fnstsw
out
gs
loope
test
cmp
fucomip
js
cmpsl
pop
into
dec
js
mov
xchg
dec
inc
push
push
jp
xchg
add
jns
lock
mov
fadds
loopne
xchg
jmp
xchg
cmp
add
xor
imul
jae
pop
xchg
lahf
sbbl
sbb
das
dec
fisubrl
push
add
inc
sbb
jb
dec
lret
out
xchg
xchg
mov
popf
mov
in
arpl
pop
sub
jge
cmp
and
dec
cs
scas
fdivrl
mov
add
stos
mov
fsubrl
rclb
addb
push
inc
inc
loop
fidivrs
or
push
jnp
andl
pop
xchg
daa
rcrb
popf
int3
jnp
pop
mov
sahf
add
cmp
cmc
addr16
inc
mov
push
inc
adc
ds
popf
aas
dec
jo
or
pop
and
mov
adc
or
rcrb
xlat
xor
loope
push
and
push
ja
sbbb
out
dec
fldenv
pop
out
mov
rorb
jecxz
inc
pop
push
jmp
jecxz
adc
int
dec
lods
inc
je
xchg
jne
mov
call
jbe
mov
fidivs
mov
les
sub
sub
rcrl
cmpb
or
inc
cmp
add
mov
xchg
aam
ja
adc
ror
mov
jb
mov
test
mov
and
call
xor
xchg
and
sub
xchg
dec
jmp
mov
das
mov
in
and
dec
add
popf
and
in
sbb
into
inc
movsl
jl
cmp
jae
movsl
add
popa
adc
cmpsl
pusha
arpl
lret
iret
mov
ljmp
ja
test
sti
mov
mov
jbe
cmp
into
lea
mov
xchg
test
push
imul
sub
and
jmp
int3
in
cmc
mov
mov
fadds
arpl
insb
dec
inc
dec
push
cwtl
cmp
cmpsb
rcll
xchg
mov
jno
arpl
mov
mov
lock
pushf
repnz
lds
jecxz
cmp
mov
or
pop
std
push
sub
mov
pop
clc
sbb
imul
adc
lea
repz
aas
lret
cmp
movsbl
sbb
std
fwait
xchg
cmp
outsb
test
dec
cli
loope
popa
xchg
int
vshufps
xor
jne
mov
add
stc
and
lret
out
mov
leave
mov
cmp
in
stos
decl
out
xchg
push
mov
dec
mov
pop
and
roll
shr
hlt
idivb
mov
jo
test
imul
or
fimull
lods
repnz
pop
or
pop
cmpsb
shll
xchg
int3
rcrb
pop
out
mov
les
adc
dec
in
dec
nop
jmp
mov
and
mov
jnp
sbb
dec
jp
imul
xchg
push
aam
add
shl
add
xchg
push
lret
and
movsl
dec
movsl
add
xor
jl
nop
notb
or
imul
or
or
roll
adc
push
and
dec
int3
scas
movsl
push
xor
or
jmp
test
cmc
pusha
push
lods
lods
adc
or
add
mov
cltd
outsl
mov
je
iret
sbb
dec
test
rorl
sarb
lds
les
out
movsb
inc
inc
sarl
cmpb
in
jecxz
pop
fsubs
lds
mov
inc
scas
loope
shlb
out
inc
mov
shlb
inc
sub
jg
cmpb
lret
jge
adc
cli
es
cmpsl
out
push
movsl
jbe
fwait
sub
sub
aaa
aad
jle
aam
sbb
ss
dec
push
xlat
pop
iret
repz
sarl
pop
dec
cmovae
cmp
lods
ljmp
jg
cmp
pop
shl
pop
int3
flds
xchg
insl
add
mov
mov
in
es
jg
int3
je
sarl
mov
mov
pop
pop
push
or
mov
lret
into
int
cmpsb
nop
ror
lret
les
adc
roll
or
repz
xor
fwait
and
dec
repnz
cmp
rcl
notl
cli
inc
mov
adc
stos
dec
ret
sub
inc
test
inc
enter
lock
or
lret
fwait
in
xor
in
xchg
pop
cmpsb
mov
iret
sbb
mov
jmp
xor
mov
jmp
mov
loope
pop
jp
push
xorl
shl
lods
jmp
sbb
cmpsl
sahf
jl
adc
xor
pop
sbb
ljmp
jnp
lods
outsb
lea
fsubr
xor
hlt
xchg
push
inc
cmp
mov
lods
xchg
mov
adcl
out
test
clc
pop
cmc
push
jp
push
notl
sbb
js
icebp
dec
inc
xor
fisubrl
scas
test
mov
in
aam
adc
jne
loopne
sub
cmp
cltd
mov
and
cmp
ljmp
pop
clc
das
mov
movsl
mov
mov
imul
gs
cmp
rcrl
xchg
push
aas
xchg
ja
call
ja
ljmp
stos
js
lret
mov
fnstcw
imul
dec
out
cli
out
movsb
inc
pop
jnp
adc
adc
lahf
dec
ret
pop
add
cltd
sbb
mov
stos
sub
aas
sub
adc
jne
sbb
daa
mov
mov
xchg
lods
in
add
xchg
or
inc
cwtl
leave
xorl
sarl
icebp
cmp
or
jns
lahf
push
dec
hlt
lock
in
or
in
and
pop
insl
orb
mov
push
and
ja
and
sub
insl
decl
aad
lea
mov
cli
lret
or
pop
lds
daa
dec
movsb
pop
xor
push
push
push
ss
xlat
sbb
sub
cmp
in
insl
xlat
inc
mov
testl
dec
imul
mov
mov
sbbl
fisubrs
mov
cmpb
mov
shll
xchg
pusha
cld
xchg
ret
sbb
loop
into
js
pop
sahf
scas
call
cltd
scas
scas
adc
pop
adc
cld
test
dec
cmpsl
dec
call
jns
addr16
sti
rcll
mov
mov
mul
mov
xchg
push
add
add
insl
pop
dec
movl
or
cmp
mov
fstpt
loop
imul
add
mov
enter
pop
testb
out
cmp
das
iret
inc
and
inc
mov
xchg
mov
xchg
mov
xchg
sub
sahf
mov
sbb
stc
outsb
pop
mov
clc
arpl
cmp
add
push
stos
insb
clc
fs
xchg
inc
es
ffreep
push
jg
cwtl
nop
out
jae
iret
pushf
sbb
push
pop
and
into
faddp
jg
adc
repz
push
mov
pop
mov
daa
cli
adc
and
xchg
test
in
adcl
xchg
xor
daa
std
outsl
rep
insb
aas
sahf
stos
popa
or
pop
enter
fisubl
mov
fisttps
fwait
lock
dec
lahf
pop
sub
or
out
sub
sarl
notb
mov
xchg
hlt
dec
inc
cmp
push
and
mov
ret
leave
aam
push
sbb
jno
in
jne
mov
mov
push
js
push
inc
mov
pop
and
xorb
or
lock
lock
xchg
xor
sarb
rolb
das
push
xchg
rep
mov
xchg
mov
mov
cmp
pop
sahf
push
pop
xor
loope
fwait
adc
cmpsl
ljmp
cmp
xor
jge
push
add
mov
push
pop
dec
movsl
arpl
dec
in
mov
sub
sbb
scas
sbb
icebp
mov
inc
sbb
xor
aaa
dec
jnp
lock
outsl
add
sbb
mov
inc
mov
fsubs
push
rclb
cmp
mov
js
sub
std
lods
int3
fwait
orb
jo
test
rclb
clc
adcb
sbb
lahf
std
mov
jl
push
out
subl
lock
mov
pop
out
lods
shrl
stc
sbb
imul
and
push
inc
adc
cmp
negb
inc
push
inc
add
or
xchg
add
insl
lock
mov
lcall
pop
mov
mov
sbb
mov
sbb
jnp
aam
lcall
xchg
aam
addr16
sar
xchg
fdivrl
sbb
jns
push
push
dec
and
stc
call
pushf
enter
push
pop
in
divl
shrl
outsl
or
xorl
xor
xchg
shlb
xchg
in
mov
aaa
push
cltd
pop
sbb
ds
or
xchg
xchg
and
insb
jl
fcoms
mov
ret
sbb
fsubl
jp
rcl
add
icebp
sub
cmp
sub
cmp
cli
cmp
pop
xor
loop
push
and
add
mov
xor
or
es
xlat
or
inc
push
lea
fldenv
js
sub
jne
divl
sub
mov
inc
push
aaa
ret
xor
mov
les
rorl
hlt
push
movsl
cmp
xor
push
and
xlat
sbb
pop
xor
or
xor
mov
stc
cs
mov
push
movsb
cwtl
pop
ds
mov
loop
cmpsb
outsb
push
cmc
xchg
imul
dec
das
outsb
inc
xchg
or
pop
lret
mov
pop
outsb
xchg
les
pushf
lods
ret
xchg
mov
push
and
adc
aad
mov
mov
fcomps
adc
cmp
xor
jp
sbb
mov
je
ja
lods
je
ljmp
popa
mov
in
or
dec
mov
fsts
jb
pusha
or
dec
cmpsl
jmp
icebp
add
test
test
inc
mov
sbb
aam
xor
mov
je
clc
adc
cli
mov
xchg
test
outsl
test
scas
hlt
inc
xchg
and
insl
adc
mov
sub
push
repz
shrb
dec
stos
jmp
jp
inc
push
xor
xlat
add
data16
pop
dec
mov
sahf
popf
ret
aas
xchg
in
inc
sahf
mov
xor
mov
mov
mov
pushl
repz
popa
push
sti
lock
jns
and
and
push
leave
sahf
push
mull
repnz
inc
xchg
dec
add
jecxz
xor
inc
mov
movsl
or
enter
insb
mov
push
sahf
dec
lahf
sbb
xor
xchg
dec
fldl2e
ds
subl
movsl
out
andl
cmp
mov
xor
mov
icebp
sbb
jae
bound
inc
test
stc
es
into
dec
aaa
negl
xchg
mov
aam
divl
xor
mov
xor
test
push
xlat
inc
aaa
mov
cmp
jne
int
sahf
mov
pop
sti
pop
sbb
xor
dec
or
xchg
xchg
jge
adc
xchg
fildl
or
pop
gs
out
and
sub
adc
mov
dec
daa
dec
cli
mov
xor
imul
adc
mov
enter
sbb
push
or
pusha
stos
cmc
mov
sti
add
xchg
hlt
stos
aad
jbe
cmp
dec
das
adc
daa
push
mov
aaa
jmp
mov
add
sub
and
test
xor
pop
aas
es
stos
jl
in
mov
pop
int
nop
std
jae
pop
sub
lahf
dec
movsl
scas
sbb
shlb
cmpsb
cmpl
gs
mov
xchg
sbb
xchg
arpl
test
lret
stos
or
daa
movsb
mov
jmp
scas
xor
sub
add
test
and
punpckhbw
jns
or
jge
lock
jbe
scas
mov
xor
lods
pop
jp
add
idiv
ffree
hlt
sti
xchg
push
jl
leave
adc
data16
ja
pushf
pop
sbb
das
pop
cmpsb
xor
dec
outsl
cld
imul
mov
insb
imul
pop
cmc
sbb
or
jp
popa
lock
adc
stos
in
daa
daa
pop
fisubrs
cli
xchg
add
out
or
mov
mov
or
mov
mov
or
adc
sub
dec
mov
inc
scas
movsl
js
mov
mov
mov
sbb
mov
fisubl
lods
lahf
fwait
pop
outsb
scas
xchg
cmpsl
mov
mov
lods
jle
xchg
stos
cmp
push
out
shrb
or
nop
insb
jge
fisubs
out
jmp
in
sub
jl
mov
jecxz
rcrb
sub
jg
sub
mov
fildll
movsb
insl
stos
filds
stos
and
adc
xchg
pushf
mov
repnz
or
ret
jb
add
pop
sub
sbb
jmp
loope
cmpsl
mov
scas
mov
xor
sbb
add
test
push
mov
lcall
jne
mov
lea
lahf
nop
mov
or
jecxz
lcall
scas
dec
dec
lret
pusha
mov
xor
in
cmp
sub
mov
call
jnp
out
movsb
dec
in
out
test
cmp
sbbl
pop
cli
push
scas
rol
stc
cmpsb
push
mov
and
scas
inc
adc
xchg
cmp
pop
pop
inc
nop
popa
test
inc
mov
fisttps
xchg
add
dec
mov
and
cmpsb
in
pop
mov
xorl
or
out
jb
in
dec
cwtl
fnsave
push
lods
add
jmp
xlat
xchg
mov
outsl
inc
movsl
inc
out
mov
push
pop
sbb
push
shll
inc
addb
inc
shll
pop
leave
adc
lcall
cmpsb
mov
ficoml
adc
and
lret
scas
mov
cmpsb
sbb
cmp
fwait
movups
cs
or
leave
sbbl
xchg
or
lahf
cmpsb
dec
das
mov
into
mov
mov
pushf
dec
mov
and
mov
mov
mov
scas
xlat
andl
arpl
dec
cmp
imul
push
adc
int
inc
cltd
mov
imul
andb
dec
push
jle
pop
sub
fs
jnp
aas
xor
mov
mov
mov
out
mov
and
outsb
push
movb
test
sahf
mov
lret
or
push
inc
and
aaa
arpl
mov
adc
mov
aas
push
or
outsl
pusha
and
dec
push
inc
dec
or
pop
loopne
inc
rcrl
or
push
mov
cs
xlat
jno
xor
aam
dec
dec
lds
cmp
or
rcr
popa
push
scas
and
movsl
dec
mov
aaa
or
lods
fnsave
fs
or
sbb
jge
adc
push
or
push
cmp
mov
ss
lahf
cmpsl
xor
rcrb
adc
sbb
cmpsb
shl
das
insl
mov
mov
pop
or
int3
cmpsb
mov
mov
push
test
stos
mov
pop
pop
lods
fimuls
push
inc
test
xlat
mov
je
sub
sub
and
test
test
nop
clc
repz
stc
fnsave
cmp
mov
xor
sub
and
and
test
sbb
sahf
jmp
add
fstps
shll
sbb
add
dec
cmc
call
test
stos
mov
push
lds
adc
lret
xlat
lret
cltd
xlat
mov
and
mov
aam
sahf
fwait
sbbl
aas
xor
pop
out
pop
nop
or
int
jnp
nop
cmp
xor
jle
insb
lds
lods
fmuls
pop
inc
push
mov
sbb
repnz
push
in
jl
push
jno
mov
fistpll
insl
cmp
mov
mov
and
cmp
xchg
mov
xchg
cs
repz
std
shlb
jo
sbb
stos
lds
pop
js
push
test
lods
fs
mov
jns
push
add
sti
bnd
addl
imul
mov
je
test
ja
xor
pop
jb
and
jg
cmp
lea
push
push
in
lock
adc
cmpsb
inc
repnz
into
xchg
xchg
xchg
mov
sbb
cmpsl
inc
cltd
jmp
shlb
pop
icebp
iret
mov
jb
push
and
mov
repz
aaa
fstpl
xor
addr16
clc
mov
clc
int3
xor
in
arpl
mov
jo
cmp
imul
xor
fnstenv
push
subl
lods
mov
les
shlb
je
leave
pminub
js
lret
cltd
jmp
imul
out
jbe
dec
in
stos
stos
pop
or
orb
dec
imul
cmp
or
push
ljmp
mov
sbb
jne
neg
bound
or
rcll
add
loope
mov
or
xchg
and
push
cmp
mov
or
es
cmp
mov
xchg
mov
roll
xchg
adc
sbb
jae
inc
pop
bound
adc
leave
cmc
dec
mov
js
cmc
inc
dec
inc
or
fstpl
iret
mov
call
add
addr16
xor
cmc
push
cli
negb
xchg
jmp
jl
adc
in
cs
xor
in
push
add
xchg
push
in
lahf
imul
jnp
xchg
jno
xchg
and
sbb
pop
mov
mov
ret
shr
repz
push
rcrb
out
adc
enter
lahf
dec
mov
sbb
aad
addr16
stos
mov
push
jne
and
inc
cltd
testb
add
inc
icebp
xor
or
in
imul
mov
aam
test
scas
out
jo
dec
xor
mov
push
sbb
inc
lods
and
pop
and
dec
push
xor
dec
inc
ss
mov
dec
gs
xchg
dec
in
and
std
sub
in
and
mov
ror
sub
scas
adc
ret
xchg
cmc
ss
sub
push
inc
jbe
mov
inc
sarl
outsb
in
out
mov
ret
mov
fxch
mov
dec
or
insb
stos
shrb
in
mov
xor
and
cwtl
cmpsl
mov
pop
xor
fdivrl
leave
inc
hlt
or
sahf
cmpsb
mov
jmp
dec
jne
mov
fldt
xor
les
pop
aas
add
mov
fwait
inc
jle
repnz
insl
adc
cmp
add
mov
cmp
loopne
lret
test
sbb
insb
pop
pop
sbb
pop
push
jmp
pushf
rol
sbb
push
push
aaa
out
add
imul
mov
lea
add
into
negl
sbb
xchg
add
add
xor
and
lock
fisttps
inc
test
popa
filds
jae
sarb
les
cmp
dec
xor
xchg
inc
fcomps
rol
cmp
pop
push
mov
push
stos
inc
lahf
sub
jbe
mov
xor
jo
arpl
dec
mov
sbb
pop
pop
adc
dec
ficoms
pop
stos
movsb
sub
ret
cmp
and
xchg
pop
mov
push
add
pop
iret
pop
push
jae
pop
pop
push
jae
fsts
push
pop
stos
add
rolb
mov
shll
jne
divl
mov
inc
add
mov
es
jmp
mov
mov
or
push
push
iret
bound
icebp
sahf
out
stos
inc
sbb
sar
sbb
jmp
dec
clc
or
cmp
mov
lods
xchg
jecxz
add
negb
xchg
popf
ds
fidivl
push
add
ret
cmp
shll
sub
mov
jl
lock
push
mov
cwtl
inc
sbb
xchg
xor
push
mov
xor
pop
jge
adc
stc
sarl
sbb
loope
pop
xor
jnp
repz
cmc
push
dec
test
sbb
test
nop
xchg
dec
sbb
cli
cmc
jge
sub
popa
mov
xor
add
into
pop
fisttpll
mov
std
rcrb
xchg
fisubrs
out
ret
js
sub
xor
or
mov
sbb
pop
xchg
xchg
iret
rorb
adc
jg
dec
xchg
imul
test
mov
mov
mov
xor
xor
mov
ffree
mov
mov
mov
repnz
loope
aam
inc
shlb
aas
call
sbb
outsl
loopne
lcall
shrl
fimull
mov
sbb
pop
adc
lcall
pop
cmc
mov
cmp
pushf
or
ja
inc
daa
fistpll
or
sbb
inc
lods
ja
push
xchg
mov
scas
push
sbbb
iret
cwtl
lods
enter
loopne
sbb
scas
xor
jmp
cmp
fbld
and
mov
mov
pop
pop
pop
dec
mov
mov
mov
xchg
popf
xchg
lcall
fstl
out
cmp
addr16
dec
adc
cmp
push
dec
loope
mov
and
rolb
repnz
out
jno
cmp
add
fidivrl
sarl
mov
push
repnz
pinsrw
dec
testb
add
shl
add
pop
je
in
pop
add
push
mov
insl
xchg
idivb
aas
xchg
ret
es
jg
and
outsb
mov
fwait
sub
mov
in
ret
sub
ret
loop
push
insl
cmp
shlb
or
hlt
pop
xor
inc
stos
loop
mov
mov
inc
hlt
xor
cmc
scas
jbe
mov
lret
xchg
aaa
dec
adc
jle
and
loopne
lock
sbb
add
inc
in
popl
sarl
xor
mov
popf
pop
bound
cwtl
es
push
fs
stos
jne
and
pushf
adc
orl
xchg
pop
push
or
dec
lock
inc
insb
mov
ja
xor
jno
dec
sarb
and
mov
test
lcall
es
imul
xlat
inc
sub
xor
int3
pop
add
mov
scas
addr16
mov
mov
int3
xchg
add
shrb
ret
cmc
sbb
es
mov
js
scas
jnp
stos
stos
push
scas
shlb
int
rcrb
jns
adc
jb
and
inc
daa
mov
into
je
aam
loopne
repz
dec
push
sti
dec
lds
testb
aad
adc
test
inc
pop
mov
jp
push
inc
xchg
sub
cmpsl
mov
sbb
out
test
sbb
dec
xor
mov
inc
cltd
data16
dec
out
movsl
mov
aam
xchg
push
adc
dec
or
add
mov
pop
cli
ja
test
ds
mov
push
lahf
jns
and
out
pop
sub
hlt
xor
je
outsb
lahf
pop
testl
or
or
xchg
mov
cmpsb
jne
rcrb
push
mov
xor
in
cli
sub
sbb
dec
mov
xchg
rorl
repnz
into
mov
fisttpl
sbb
or
jge
scas
mov
pop
in
push
push
les
nop
testb
imull
add
fistl
iret
repnz
push
notl
jo
or
int
daa
jo
and
mov
adc
rorb
mov
add
iret
je
mov
sub
popa
xchg
adc
into
das
add
dec
out
sub
or
pop
sbb
in
pop
mov
jmp
jns
xchg
lahf
dec
and
and
push
jl
mov
iret
or
rcrl
dec
pop
imull
add
mov
cmp
push
cmp
dec
movsb
and
hlt
subl
push
lds
gs
lret
sub
cmp
test
adc
cld
popl
out
dec
sti
lea
jmp
cmp
lret
pop
mov
jbe
inc
loope
outsl
daa
imul
lret
cwtl
adc
xchg
dec
pop
sub
mov
and
mov
sbb
sbb
enter
cmp
xor
cmp
clc
imul
sub
mov
arpl
xor
fst
dec
fs
cmpsl
pop
loopne
pop
dec
testb
mov
mov
cmp
je
and
push
les
rorl
pop
lock
sub
bound
int
mov
and
and
adc
lods
sbb
enter
or
popa
lea
xchg
pop
popf
das
pushf
cmc
hlt
pop
mov
mov
shll
mov
sbb
mov
or
cs
or
xchg
mov
cmp
scas
xchg
xor
fcmovnb
in
mov
es
fnstenv
sarb
cli
aaa
inc
cmp
push
add
test
xchg
test
mov
sbb
leave
fdiv
ss
fwait
negb
add
sbb
xor
lret
jp
cmc
add
jecxz
or
adc
je
idivb
fstps
pop
out
jo
sbb
mov
jge
scas
lret
and
xor
out
pop
xchg
and
pop
push
daa
iret
in
filds
cmpl
fistps
inc
fwait
sub
mov
rcrb
xor
fimuls
mov
xor
or
adc
test
mov
lds
jmp
inc
push
mov
inc
les
cmp
lret
pop
xor
movsb
pop
out
dec
xor
lods
sub
ret
inc
outsl
fwait
stc
and
mov
xor
out
add
mov
loopne
jl
jne
andl
jg
ret
subl
xor
sti
pop
ljmp
jmp
jp
fisttps
adc
std
adc
mov
xchg
pop
gs
pop
xchg
out
out
das
and
mov
inc
cmp
lret
jmp
sbb
fwait
pop
push
dec
ret
mov
es
cmp
sbb
into
inc
push
out
jbe
mov
mov
xchg
out
pop
repz
cmp
dec
out
inc
cmp
adc
mov
leave
sub
jbe
cmpsb
mov
insb
jmp
add
pop
imul
arpl
test
xor
adc
orb
test
sub
inc
std
hlt
add
mov
mov
push
sbb
push
sbb
out
mov
fldt
mov
dec
jecxz
inc
mov
imul
mov
mov
xchg
pop
rorb
sbb
xchg
sub
push
xor
pop
xchg
insl
push
stc
sub
sub
mov
xchg
pop
sbb
jl
pop
sbb
mov
push
rolb
dec
or
jnp
dec
out
and
dec
jno
cs
lea
fists
gs
xchg
push
jno
lcall
cmp
xor
adc
push
sbb
mov
outsb
in
mov
scas
adc
dec
xchg
jp
add
leave
ds
mov
roll
or
cmpsl
pop
fisttpl
dec
pop
ss
loopne,pn
imul
push
inc
stos
movsl
test
xchg
das
sbb
cs
leave
pop
xchg
cmp
test
mov
mov
push
push
popf
fnstsw
inc
cmp
mov
imul
dec
mov
out
mov
shrb
push
mov
xor
ljmp
in
jbe
fdiv
ljmp
push
rcrb
pop
jnp
xor
sub
ss
mov
mov
notb
mov
inc
imul
inc
push
push
popf
fldl
dec
inc
or
lcall
jb
popl
or
mov
inc
mov
inc
dec
mov
dec
pop
adc
pop
negl
ljmp
movb
in
add
xor
aas
sti
xor
pop
cwtl
mov
inc
ret
repnz
jl
sub
jecxz
fs
repz
jne
testl
or
loope
xor
enter
push
mov
aas
or
pop
leave
pop
cmp
pop
adcb
push
mov
scas
popf
xor
clc
add
cmp
and
push
fcmovb
cmp
and
cltd
out
lds
lret
loope
mov
and
movsb
cmpsl
cmp
pop
add
aad
ret
shlb
add
jnp
shll
sbbl
test
jmp
bnd
xchg
filds
outsl
imul
jnp
rclb
push
test
cmp
xor
push
ss
gs
dec
push
push
clc
inc
sub
pop
and
dec
inc
jno
rcll
aam
adc
or
orl
ja
add
lretw
pop
imul
repnz
cmpsb
sbb
cmp
mov
leave
mov
push
adc
xchg
repz
lcall
sbb
hlt
mov
ret
mov
fistpl
mov
repz
in
leave
pop
dec
or
mov
lea
or
pop
ja
dec
xor
jmp
sub
rorb
push
fcmovbe
rcrl
pop
jg
fwait
imul
outsl
mov
and
dec
cmovge
push
daa
inc
mov
jg
stos
or
xchg
test
sbb
and
dec
dec
cs
xchg
ja
lods
dec
pusha
xor
push
ds
addl
lret
mov
push
add
mov
fsubl
cmpl
cmp
xchg
vpunpckhbw
or
idivb
notl
aam
pop
adc
or
repnz
fldz
lret
or
shl
or
xor
mov
imul
jbe
ja
jle
outsl
in
sbb
xchg
movsl
push
mov
pop
add
sbb
aam
fbstp
jl
lcall
fiaddl
fsin
xchg
lods
ja
and
loopne
or
ljmp
or
xor
test
xorps
imul
call
adc
frstor
test
cmp
jle
cmpsl
add
adc
mov
add
inc
mov
movsb
jmp
dec
into
push
int
stc
add
fmuls
sahf
pop
ja
sub
mov
imul
clc
xchg
cmp
out
in
lret
dec
pop
jle
push
testb
daa
out
push
inc
sub
xor
lret
mov
add
add
xlat
sub
jp
pop
pop
enter
inc
shl
inc
daa
shlb
push
xchg
sub
lret
pop
cmp
cmpsb
or
sti
inc
cli
xor
push
mov
gs
in
adc
sub
scas
fldcw
daa
cld
sub
or
cmc
pop
adc
hlt
nop
mov
jae
call
rcll
mov
push
and
lods
mov
pop
jns
and
sbb
jge
cwtl
insb
inc
shr
pop
add
stc
and
xor
inc
cmc
mov
movsb
test
cmpsb
dec
mov
pusha
pop
movsl
sahf
sbb
faddl
or
push
dec
or
ss
test
imul
mov
and
jp
or
xor
test
cld
jae
cmovnp
popf
loopne
xor
xchg
stos
cmp
mov
dec
repz
orl
sub
or
and
insl
loopne
inc
fwait
xor
jecxz
push
dec
sbb
xchg
out
lock
push
mov
mov
insb
adc
xchg
scas
mov
cmc
cltd
xor
cmp
decl
in
cmc
xchg
mov
mov
dec
movsl
mov
and
mov
mov
ja
fnsave
hlt
fs
fnstsw
xchg
mov
divl
inc
jns
fs
sarl
jmp
sti
pop
pop
pop
shll
mov
push
fcomps
push
enter
and
dec
mov
sub
inc
jmp
int
fcomps
bound
jmp
aas
pop
cmp
xchg
pop
loop
dec
sti
jbe
out
stos
scas
add
add
xor
jae
add
insl
jl
xchg
adc
jbe
and
mov
fwait
aam
mov
sbb
xor
sbb
and
or
sarl
sbb
fmull
loopne
mov
lea
dec
push
mov
or
and
adc
and
mov
enter
mov
mov
push
int
cmp
and
and
xchg
mov
rcll
hlt
lahf
fidivrl
stos
nop
mov
mov
jecxz
lcall
sub
lret
cli
test
in
xor
sbb
mov
push
pop
shll
pop
add
add
push
jns
outsb
aam
je
in
cmp
aad
jne
sub
inc
xchg
insl
int3
mov
pop
sub
lds
xlat
adc
hlt
xchg
cmp
test
push
jmp
popf
in
dec
jecxz
pop
add
push
stos
icebp
fsubrl
mov
or
in
andl
jns
pop
push
cmp
negb
dec
dec
jns
lods
push
out
pop
insl
adc
mov
je
test
daa
ret
stos
push
xor
jbe
pop
rclb
sub
inc
push
fs
sbb
ret
add
dec
adc
mov
aad
fimuls
or
addb
xchg
mov
cmpb
arpl
xor
mov
and
loope
add
mov
imul
aas
push
sub
dec
lods
cmpsl
loop
or
das
mov
rcll
dec
movsb
orl
lahf
cld
fisubl
std
adc
test
lds
jp
xchg
dec
mull
fwait
sub
push
dec
jecxz
sbb
or
ficompl
jl
mov
cmp
xchg
movsl
add
and
ret
cmp
jmp
xlat
pop
mov
inc
push
or
stc
lahf
in
adc
loopne
jp
sbb
push
jb
sub
jge
sti
dec
imul
loop
ja
xchg
sub
fsubrs
les
lock
movsl
fcmovnb
cltd
xchg
sbb
fsubl
ret
adc
sahf
fisubrl
adc
jg
mov
daa
outsl
mov
or
mov
test
fisubl
sti
sahf
inc
mov
aaa
sbbb
test
cmp
repz
inc
sti
inc
dec
shrd
ret
cmp
stos
repz
mov
mov
subb
scas
inc
shll
test
addr16
daa
cmpsl
ficoms
jb
inc
mov
push
dec
adc
jp
outsb
into
fimull
cmp
fwait
jmp
push
push
pop
pop
lds
jne
jb
jg
enter
lret
sbb
inc
sub
push
ficomps
int
iret
inc
mov
dec
addr16
jbe
push
ss
clc
cmp
and
imul
push
inc
mov
fxch
and
inc
cmp
ret
dec
inc
pop
addl
fisttpl
ret
call
dec
push
mov
cmp
cmc
repnz
push
call
or
stos
insb
jecxz
cmc
lcall
jecxz
scas
mov
push
and
sub
xchg
dec
in
aas
jbe
push
or
rorb
aaa
and
negb
mov
xchg
repz
out
push
pop
jns
xchg
cmp
sbb
popf
testb
or
adc
push
shrd
cmp
mov
jmp
push
inc
std
fs
and
orb
out
sub
mov
addr16
lods
movsb
aam
pop
mov
lds
gs
ret
dec
jge
add
sub
sar
fcompl
daa
dec
inc
sbb
sub
fnstsw
dec
adc
scas
shrb
jge
sti
pop
cmp
stos
jp
rolb
xchg
add
cmpsb
sub
cmc
dec
cmpl
les
cld
scas
mov
filds
jmp
insl
fnstcw
mov
mov
movsb
arpl
cmp
sti
sub
mov
xorb
out
and
out
int3
hlt
push
stos
fsub
cmp
idivb
or
clc
and
inc
mov
pusha
std
insb
idivb
jg
ljmp
pop
mov
inc
andl
mov
fsubr
jb
je
or
jnp
pop
push
ret
jge
rcl
loop
dec
orb
adc
push
cwtl
inc
mov
mov
movsb
dec
mov
lods
jnp
add
int
or
xchg
imul
xlat
or
jmp
in
and
inc
pushf
rcrb
call
sarb
jmp
inc
jl
mov
xchg
sbb
icebp
push
insb
xorb
pusha
jg
jp
xchg
nop
pusha
dec
or
pop
mov
fwait
test
dec
adc
mov
xchg
push
adc
inc
jg
mov
sbb
in
sbb
mov
jne
ret
adc
loope
les
push
mov
testl
jp
add
sbb
inc
lock
adcl
xchg
or
in
mov
jns
xchg
test
sub
pop
sbb
icebp
push
int3
into
in
push
add
fwait
lret
push
fwait
dec
out
dec
xor
mov
mov
jb
insb
or
mov
jne
fiadds
mov
or
mov
loopne
iret
addb
das
jae
fwait
lock
in
dec
movsb
repnz
add
in
sub
xor
xchg
popa
xor
pop
or
fdivp
and
mov
fs
aad
add
stos
jb
fiadds
pusha
loop
sahf
jg
sahf
jecxz
push
or
xchg
fcoms
cwtl
imul
movsb
scas
push
and
shll
ret
enter
jno
xor
cld
mov
loope
xor
ret
popa
cmpsl
enter
mov
xor
lods
les
mov
xchg
cmp
repnz
loopne
test
push
negb
movsb
dec
push
sbb
push
lret
and
rol
adc
call
push
pop
mov
adc
add
cmp
cwtl
xlat
ja
mov
jmp
cmpsl
ret
pushf
jb
fnsave
mov
test
movsl
mov
or
jmp
fmulp
daa
xor
dec
rclb
or
orl
push
lock
mov
mov
push
pop
sub
fidivs
leave
cmpsb
inc
test
pop
fwait
out
arpl
icebp
cld
sti
in
push
dec
mov
decl
inc
loop
icebp
test
ss
test
sub
int3
xor
lcall
xor
lods
repnz
jecxz
call
je
fwait
xor
rorl
push
xor
dec
push
adc
xchg
cwtl
jecxz
add
fildl
adc
mov
add
jl
test
xchg
scas
aad
push
mov
call
xchg
test
jne
test
ss
xchg
lods
out
out
mov
bound
lock
imul
pushf
dec
lds
ljmp
jmp
das
bswap
and
xor
es
push
push
mov
out
push
cmp
push
fiadds
imul
add
mov
rorb
mov
arpl
es
mov
std
mov
stos
add
and
iret
dec
ret
lcall
cmp
mov
ret
dec
ds
and
add
push
xor
and
fst
cmp
sbb
mov
inc
negl
dec
lods
inc
shrl
je
dec
shrb
inc
jmp
sarl
filds
shl
js
pop
inc
inc
das
mov
jecxz
hlt
pushf
mov
js
insb
push
fildl
adc
add
pushf
in
xchg
push
push
pop
sbb
test
les
hlt
ja
push
movsb
cltd
pop
dec
test
mov
loop
mov
or
incl
mov
fistpll
dec
mov
popa
mov
imul
xor
xchg
sub
sbb
aas
cmc
aas
imul
lret
ja
xor
mov
rol
lods
mov
or
lcall
sbb
mov
mov
shl
xor
mov
vpaddd
or
add
adc
cmc
add
mov
inc
xchg
aam
std
lods
inc
leave
and
push
add
not
xchg
mov
es
movsb
jns
out
push
mov
push
mov
insb
push
mov
sub
xchg
inc
xchg
dec
jne
inc
out
inc
and
jb
xchg
xor
jmp
xchg
repz
mov
movsb
loopne
std
imul
cmpsb
jg
jmp
out
xchg
lret
mov
adc
loopne
test
cmpsb
cwtl
icebp
push
and
imul
dec
mov
push
xchg
inc
enter
xor
cmp
and
in
dec
adc
lods
mov
jbe
lds
dec
scas
iret
aaa
test
loop
es
data16
call
xchg
in
cmc
cwtl
imul
lcall
ret
cmp
sbb
xchg
call
imul
andl
add
xchg
mov
pop
cmp
cmpsb
lock
and
sub
cmp
ljmp
test
idivb
xchg
or
cltd
add
repnz
arpl
dec
and
or
xchg
mov
stos
mov
sub
add
rdtsc
sub
sbb
fistl
xchg
data16
mov
inc
out
or
xchg
sub
mov
mov
movsb
pop
bound
xchg
push
in
in
enter
es
bound
jae
mov
jp
dec
cltd
xor
outsl
push
fs
or
jle
sbb
ljmp
add
xchg
mov
and
xor
jg
aad
pop
mov
mov
dec
xchg
es
fs
in
test
in
incb
jae
rcll
jno
inc
xlat
outsl
adc
cmp
and
test
xor
xor
ficoml
and
push
bound
das
stos
xchg
sbb
or
dec
xor
xlat
push
mov
idivl
test
adc
push
cs
mov
xchg
adc
movsl
subb
daa
dec
insb
or
call
inc
mov
xor
jnp
jg
pop
ret
jge
iret
add
mov
push
negl
lcall
into
sarl
out
sub
or
cltd
jne
call
bound
push
loopne
mov
add
dec
outsb
inc
stos
in
mov
mov
imul
loope
scas
hlt
jns
popf
cmc
shl
int3
nop
test
inc
enter
outsl
stos
xor
push
rol
mov
push
push
cld
pop
subb
jle
test
js
inc
fisubrs
jmp
clc
adc
jno
hlt
shlb
sbb
stos
orb
es
jge
aad
cmp
add
pop
sti
pop
or
in
push
mov
jno
xchg
jecxz
cmp
mov
jae
inc
aas
cwtl
jecxz
enter
imul
imul
or
mov
push
mov
inc
adcb
jb
sbb
fbstp
or
cmc
cli
mov
jb
ljmp
clc
sbb
lcall
dec
xor
fmull
sub
or
adc
sti
sub
xor
mov
xor
jae
jle
adc
adcb
sbb
push
jl
jb
inc
out
fldpi
xor
insb
shl
add
add
je
imul
jns
fs
out
lods
aas
andl
lahf
sbb
add
jg
or
xchg
lods
nop
inc
icebp
stos
jbe
push
cmp
mov
adc
adc
imul
scas
sbb
sub
lods
insb
test
xor
inc
jp
and
and
aas
xchg
jg
jne
jne
sub
gs
jmp
sub
repnz
mov
inc
cmpsb
sti
jb
test
outsl
jg
enter
ret
mov
ljmp
into
iret
mov
mov
xchg
xchg
push
fidivl
adc
mov
adc
sub
test
data16
mov
and
push
or
dec
pop
pop
cmp
dec
ficoms
mov
iret
fnstsw
je
iret
xchg
gs
movsb
pop
sub
adcb
sbb
pop
into
hlt
pusha
lret
outsb
fs
inc
shrl
stc
inc
in
pop
shrb
out
and
stos
push
push
push
rclb
mov
add
push
arpl
test
into
pushf
jbe
mov
std
mov
das
sbbb
setns
fists
in
shrl
dec
xor
xor
xchg
xchg
mov
ds
mov
pop
shl
xor
lock
fiaddl
rcrl
sub
pusha
js
or
sbb
sahf
dec
adc
shlb
cmp
or
adc
lods
xchg
mov
mov
cmp
sbb
mov
imul
jo
aaa
shrb
mov
pop
ds
rcll
lahf
cli
aam
call
mov
lock
mov
mov
scas
xor
mov
subl
adc
jl
lret
dec
arpl
les
dec
ljmp
xor
fsubr
mov
push
popa
mov
scas
pusha
std
inc
addr16
aam
adcl
mov
inc
dec
jno
shll
inc
or
inc
loope
dec
ret
aam
sbb
jne
popf
repnz
rcll
in
pop
fsts
lcall
bnd
or
icebp
pusha
and
dec
lods
test
std
fbld
ja
adc
sub
or
imul
and
addr16
sarl
loopne
inc
rol
dec
movl
mov
cmp
lds
lods
cwtl
loop
js
adc
and
test
rorl
adc
std
mov
pop
test
mov
lcall
xchg
imul
jmp
mov
cmp
lcall
fwait
adc
sbb
lret
repz
jne
push
mov
dec
mov
lods
sbb
nop
jns
mov
shlb
xor
cs
js
cltd
jl
popa
flds
cmp
fildll
loopne
flds
data16
mov
dec
das
sbb
and
loopne
inc
hlt
mov
sbb
add
sub
and
adc
push
pop
cmc
add
lock
out
or
dec
inc
shr
mov
adc
in
ljmp
insb
mov
repnz
sub
rorl
jge
pop
mov
cmpsl
inc
sbb
push
popa
clc
lahf
test
pop
das
adc
imul
lahf
xchg
adc
imul
dec
inc
pusha
inc
lods
sub
push
loope
fiaddl
inc
jno
mov
daa
dec
jmp
arpl
into
jne
cltd
jns
clc
adc
rorb
popf
adc
push
push
shll
sarl
out
push
mov
or
cltd
mov
nop
xchg
or
and
pop
test
data16
xchg
jl
adc
insl
mov
clc
mov
mov
stos
call
ljmp
mov
iret
mov
lock
cli
sti
daa
add
mov
mov
mov
jnp
pop
insb
les
cmpsb
loopne
jg
fdivrl
xor
jecxz
mov
push
dec
pop
dec
aam
shlb
cs
fistps
in
stos
cmp
mov
in
cmp
and
mov
iret
mov
movb
sub
call
xchg
clc
cmc
mov
sbb
jae
xchg
sbb
pop
fwait
lods
adc
and
inc
xchg
out
sub
sub
fidivrl
cmp
sti
into
cmovs
leave
into
push
repnz
add
dec
shll
jne
lahf
gs
mov
insl
mov
addb
jo
mov
pop
fistl
adc
mov
and
lahf
dec
sarb
sub
frstor
or
fbstp
jmp
adc
xchg
icebp
lcall
pop
stc
and
sahf
dec
push
push
scas
popa
push
data16
mov
nop
fsub
pusha
js
cli
adc
lds
repnz
or
fisubrs
lock
ret
pop
or
mov
clc
fsubl
enter
pop
cmp
adc
fcmovnu
cmc
cmpsl
int3
mov
shrl
ffree
push
dec
cmp
in
cli
out
movsb
mov
aad
mov
jbe
lret
pop
sbb
pop
in
rcll
mov
dec
jns
dec
mov
jnp
les
xchg
sbb
adc
pop
ret
imul
jp
xorb
and
icebp
add
loope
insl
jns
repnz
popa
cli
push
scas
mov
add
push
and
xor
icebp
rclb
imul
ss
aaa
or
lret
or
inc
jp
movsb
out
xor
push
pop
popf
repnz
aad
inc
pop
or
inc
dec
lret
icebp
scas
pop
mov
js
subl
out
movsl
int
add
jnp
outsl
xchg
inc
sub
faddl
adc
xchg
out
xchg
jae
daa
out
lret
movsb
add
insl
cmp
xor
and
lcall
repnz
mov
aaa
cmp
mov
and
dec
xchg
testl
xorb
stos
pop
and
ljmp
call
add
das
jle
fbld
push
mov
push
mov
push
call
jecxz
adc
xchg
or
mov
ljmp
js
or
cmp
xchg
mov
xor
outsl
or
push
jmp
lods
call
sub
mov
jle
xor
mov
add
cmpsl
jmp
pop
stos
into
mov
fadd
repz
nop
in
or
cld
rorb
cmp
dec
ret
push
push
pop
pop
dec
jbe
enter
cltd
push
call
add
push
out
xorl
out
pop
cmp
addr16
push
cmc
jmp
mov
add
loopne
aad
cli
out
outsl
inc
test
sahf
mov
sahf
repnz
outsl
hlt
push
mov
inc
icebp
and
mov
add
xor
xlat
mov
addl
in
insl
push
cmpsb
leave
pop
cli
jbe
out
aaa
or
lds
and
or
call
inc
jmp
insb
orb
xor
hlt
sub
stc
data16
adc
lock
or
xor
push
fistl
jecxz
push
push
mov
add
xlat
push
inc
or
push
cmp
rolb
pop
mov
sub
jnp
xchg
xchg
mov
xor
ror
loopne
imul
scas
inc
mov
insb
sbb
jge
or
or
pop
push
popf
ffree
adc
add
rolb
fbstp
mov
xchg
sub
aad
sub
pop
hlt
aad
lcall
and
dec
xor
add
fs
xchg
loop
or
sub
subb
add
or
bound
out
jae
pushf
imul
scas
imul
es
jp
or
test
das
xchg
and
pop
and
popf
xchg
hlt
and
pop
push
push
pop
cmp
push
pop
js
mov
sbb
or
jecxz
mov
add
or
ds
add
xchg
cmp
repnz
jmp
in
repnz
test
scas
das
mov
cmp
loope
pop
mov
ret
pop
cmpsl
outsl
mov
fcomip
rcrl
call
bound
cs
pop
popl
and
or
std
cmp
pop
fwait
cmp
mov
adc
loop
aas
mov
add
add
mov
imul
mov
loop
test
mov
in
pop
mov
adc
mov
mov
inc
pop
xchg
inc
mov
fisttpl
ja
or
popf
jnp
push
mov
test
add
js
cmp
mov
pop
pop
xchg
in
mov
lock
inc
sbb
mov
jle
mov
iret
cltd
sti
stos
push
stos
pop
inc
inc
insl
das
jno
adc
mov
jl
mov
jo
sarl
and
or
ret
lret
nopl
or
fs
insb
test
lods
mov
cmc
inc
cwtl
fs
mov
jmp
mov
lret
ret
ss
out
mov
push
sub
dec
mov
inc
and
mov
and
or
ss
shlb
aam
movsl
rep
faddl
movsl
or
or
test
mov
push
lods
sub
sub
adc
pop
xchg
in
aam
mov
rolb
push
dec
add
repnz
adc
pop
rcrb
int3
in
cmp
js
cmpsb
ja
mov
sti
or
int3
mov
or
xchg
in
xor
jecxz
and
push
cmp
andl
clc
test
std
bound
ds
lods
push
inc
xor
adc
xorl
xor
cmp
rorl
aad
test
sub
xlat
jl
add
fs
pop
sub
mov
sub
out
movsb
inc
dec
std
popa
and
mov
jb
mov
fistpll
dec
bound
f2xm1
aaa
movsl
jg
xchg
push
add
pop
clc
das
sbb
popf
cs
movsb
adc
outsb
subb
inc
adc
sahf
push
mov
mov
mov
cmpsb
pop
push
xor
mov
or
iret
aad
xchg
addl
pop
inc
xchg
jae
jno
adc
mov
or
es
je
xchg
fidivs
push
addl
test
xchg
pusha
icebp
fwait
add
mov
loop
adc
ja
sbb
cltd
dec
mov
xchg
testb
adc
dec
cmp
scas
xchg
xchg
dec
add
into
fsubs
push
sbb
or
mov
cmc
adc
lods
ja
xchg
mov
aad
dec
lea
xchg
or
cmc
std
jb
pop
pop
popf
inc
andl
sbb
dec
inc
dec
xchg
popf
xchg
test
fldl
xchg
test
scas
icebp
adc
jno
sub
mulb
xchg
cmp
cmp
ljmp
adc
mov
adc
lds
or
clc
adc
and
adc
mov
popa
xor
add
jns
test
mov
push
xchg
insl
dec
icebp
push
shl
jge
out
lret
loope
ljmp
imul
fidivrl
push
out
xor
ja
ljmp
jp
fwait
sbb
lret
popl
jb
xchg
lods
jecxz
std
or
outsl
add
cmp
clc
mov
hlt
aaa
and
or
xchg
sahf
jecxz
push
and
ret
cli
out
pop
pop
rolb
pop
and
and
rcrb
cmpl
ja
mov
sub
jge
mov
sbb
lods
mov
mov
filds
inc
in
push
adc
inc
and
and
inc
sub
sbb
lods
ficompl
xchg
push
sbb
adc
inc
pop
adc
cmp
lret
fnstcw
mov
bound
hlt
mov
lock
inc
outsl
out
test
mov
dec
or
and
js
popa
and
sub
pop
jp
add
aaa
xchg
imul
pop
divb
sub
cltd
repz
jae
jle
sbb
jbe
mov
inc
cmpsl
jle
clc
movsb
int3
mov
fwait
sub
cpuid
mov
inc
xchg
push
sbb
cwtl
and
add
inc
xchg
xchg
pop
movsb
xor
sti
in
cmp
dec
dec
fs
lret
sub
mov
negl
orl
frstor
loop
mov
lcall
clc
mov
loopne
int
mov
scas
or
ds
inc
pop
cmp
jbe
lock
add
mov
push
inc
mov
in
xor
cltd
jp
in
je
and
aad
xor
xchg
jbe
dec
cli
lret
shrl
in
jo
fists
xchg
lods
scas
sbb
or
hlt
and
mov
xchg
xrelease
push
pusha
xor
mov
in
inc
and
jl
xor
pusha
js
jo
and
repnz
loop
or
clc
ss
mov
and
cld
loopne
cmpl
and
aam
mov
push
xor
mov
clc
faddl
fucomp
add
cmp
push
bound
or
scas
arpl
jge
test
inc
mov
sarb
dec
add
ja
pop
dec
push
into
movsl
in
outsb
lods
cmp
rclb
mov
test
outsb
pusha
adc
mov
add
pushf
in
shlb
outsl
mov
icebp
ret
dec
xchg
in
xchg
lret
cld
imul
mov
xchg
leave
lock
pop
out
out
push
in
jno
xor
and
movsl
sbb
push
icebp
orl
flds
xchg
int3
jnp
cli
enter
push
cmp
inc
ret
jb
insl
cmp
rol
repnz
xchg
lods
and
test
sub
out
repnz
xchg
dec
push
scas
mov
mov
mov
cmpsl
addr16
sbb
pop
daa
jb
jmp
in
dec
push
fdivrs
xor
xor
sub
int
mov
ljmp
sbb
or
imul
mov
mov
jae
xchg
sti
dec
jg
call
jae,pn
aas
vpshufd
aad
or
ret
mov
pop
aaa
clc
jge
loopne
ljmp
mov
push
adc
adc
lret
enter
ficompl
pop
jnp
fsubp
xchg
adc
dec
mov
fnstcw
lret
psubb
mov
dec
xchg
pop
dec
clc
xchg
or
fs
sub
sbb
sbb
ds
cmp
jne,pn
mov
and
out
roll
cmc
mov
adc
push
pushf
add
xor
adc
scas
mov
rclb
js
jmp
sar
lahf
lods
adcb
adcb
push
pop
popa
mov
sahf
sub
or
jne
push
or
decb
inc
and
inc
idivb
pop
out
jl
ficompl
pop
insb
insb
iret
sbb
or
arpl
cmp
jmp
test
inc
in
sbb
jnp
mov
fwait
insb
sahf
cmp
jae
sbb
insl
repz
sbb
jle
jmp
addr16
addl
int
js
inc
and
fcomp
rcr
shrl
inc
pop
xor
iret
lahf
and
push
push
xor
and
sub
xchg
sbb
cmpsb
out
mov
push
clc
test
sahf
sbb
and
add
cmpsb
push
es
cmpsb
lcall
sbbl
ret
mov
jbe
jmp
jae
jmp
push
xchg
adc
clc
sbb
popa
das
adc
mov
data16
and
imul
fsubrs
cmc
ss
mov
fbstp
inc
push
inc
inc
mov
push
je
xchg
sbb
ss
shl
dec
rcrl
rcr
add
lcall
mov
inc
fisttpll
mov
jmp
mov
cwtl
add
dec
sub
sub
and
mov
aaa
pop
dec
push
jecxz
dec
pop
add
push
int3
adc
push
add
push
add
adc
xchg
mov
sub
cmp
push
mov
cs
movsl
sahf
outsl
out
push
es
cmp
aaa
push
popa
mov
pushf
xchg
leave
hlt
mov
push
ret
cmp
sbb
icebp
cmp
pop
lret
ds
repnz
loop
cwtl
std
pop
sbb
cmovg
cmpsb
loope
cli
pop
add
mov
ds
insl
mov
adc
or
pop
out
in
push
and
pop
cmc
sarb
xor
sysexit
out
xchg
sbb
hlt
ret
shll
inc
jns
lret
out
sahf
mov
dec
mov
mov
xor
mov
ja
pop
mov
dec
ret
and
xor
or
jne
out
inc
jnp
cmpsb
sub
adc
push
lret
xchg
dec
push
xchg
mov
movsb
jo
test
idivl
iret
das
into
xchg
fs
jns
fsub
lahf
jnp
imul
mov
sub
std
xchg
cmp
dec
and
mov
pop
cmpsb
cs
push
adc
inc
push
add
push
movsl
pop
icebp
xor
int3
push
jb
rcrb
add
or
aam
pop
mov
dec
sti
test
fadds
sbb
int3
and
data16
adc
push
ret
sub
lret
dec
sbb
loopne
rorb
or
addr16
loope
fsts
inc
mov
insb
mov
dec
aam
push
popf
jmp
test
sub
outsb
sti
sbb
xchg
imul
cwtl
and
xchg
icebp
mov
es
fwait
inc
sub
and
cmpsl
leave
stc
inc
in
push
lock
mov
dec
iret
mov
mov
inc
test
in
out
mov
test
cld
stos
xchg
mov
in
push
shrb
and
out
enter
shl
bnd
cwtl
jg
and
ret
and
ss
je
in
sbb
loopne
jmp
add
movsl
xor
roll
or
inc
out
jp
and
aas
ja
jbe
xlat
adc
rcrl
jg
mov
mov
mov
inc
out
mov
insb
mov
cmp
rcrb
xor
in
arpl
and
jecxz
inc
mov
and
stos
sbb
mov
jge
daa
jne
fisttps
add
mov
mov
dec
neg
loope
fsubrs
jns
stc
int3
push
push
pusha
js
jmp
cmp
pop
jo
xchg
mov
or
mov
mov
add
mov
daa
sub
gs
scas
and
add
sub
aam
jne
cmp
xchg
addl
or
popa
loop
ja
mov
aam
and
pop
or
lea
mov
into
lock
int3
incb
test
stos
rcrl
add
or
cmp
mov
xchg
call
xlat
aam
add
loop
push
jb
mov
or
lret
mov
or
jp
sub
adc
inc
insl
lock
aam
sahf
sub
xor
mov
out
fxch
sub
hlt
or
aad
popf
pusha
add
sub
ds
aas
int3
push
lcall
icebp
and
negl
and
push
xor
jl
push
inc
std
ret
xor
mov
outsl
out
aas
iret
in
dec
add
xor
pop
sbb
mov
mov
inc
jnp
dec
xchg
dec
dec
cld
push
mov
dec
cs
xchg
popa
ret
push
iret
repz
test
and
pop
scas
stc
jge
fidivs
and
stos
lret
jge
imul
xorb
jno
jle,pn
jmp
mov
push
fidivl
mov
daa
int
loopne
loop
sahf
fwait
cltd
xchg
insb
jp
cli
cmp
jo
cmp
imul
sbb
mov
lods
mov
or
ds
or
iret
sarb
mov
mov
movsb
mov
aas
dec
mov
fldt
push
orl
mov
fidivrl
mull
stc
paddsw
and
or
cld
int3
inc
outsb
leave
rcrl
int3
adc
testb
lea
sbb
pop
sbb
cmp
cs
push
popa
jno
or
and
add
iret
adcb
sub
inc
fstp
cwtl
mov
mov
sbb
sub
fdivrp
jae
lods
pop
adc
jae
and
movsb
int3
js
mov
mov
test
mov
fwait
xchg
sbb
pop
cli
push
in
rcll
lds
in
mov
movups
outsl
or
adc
mov
jno
popf
sti
cmpsl
push
xchg
push
mov
xchg
mov
cli
dec
imul
xor
and
repnz
mov
pop
and
xchg
inc
sbb
adcb
push
cltd
mov
dec
dec
insb
mov
data16
sti
push
dec
xchg
fildl
jno
rolb
jns
mov
or
xor
mov
shrl
imul
imul
jbe
xchg
test
add
sbb
jbe
and
pop
sahf
mov
std
sub
in
scas
into
sbb
mov
add
shrb
into
xchg
mov
imull
fnstcw
cmp
push
mov
fsub
cmp
lock
jle
jle
dec
call
popa
mov
aam
xchg
mov
pop
test
push
push
call
lock
outsl
push
mov
test
adcb
push
mov
mov
jl
adcb
mov
sub
inc
data16
sbb
in
cmp
jbe
or
push
pop
cmp
sub
or
or
imul
xor
xlat
out
repnz
push
out
or
pushf
lret
pop
lods
out
call
adc
adc
scas
cmp
xorl
push
mov
and
lahf
dec
sub
sbb
dec
cwtl
in
mov
ret
ret
bnd
out
mov
mov
or
mov
lret
lds
mov
jne
mov
dec
push
sub
scas
sub
imul
and
enter
loop
mov
pop
pop
aam
sub
sub
inc
loopne
imul
fwait
push
pop
shrl
ja
mov
push
sbb
add
aad
jno
aam
lcall
sti
dec
mull
inc
lock
mov
mov
outsb
inc
push
fmuls
ss
xchg
test
mov
shlb
lret
scas
or
jne
mov
jg
sarb
sub
xchg
arpl
sub
lods
pop
sahf
push
pop
push
popf
iret
arpl
jl
in
inc
aas
cmp
jg
icebp
fisubl
adc
mov
adc
sub
fistl
lds
icebp
jb
lcall
or
and
xor
ds
mov
fstp
cmc
xchg
sti
lods
push
loope
sbb
add
xchg
pop
inc
inc
add
sub
xlat
sbb
pop
pop
in
fwait
je
fs
repz
push
call
inc
ja
pop
xor
fdivr
imul
sbb
push
xor
fsubl
mov
push
pop
xor
mov
xor
dec
push
ret
je
dec
add
xor
xchg
xchg
sbb
fldl
lcall
add
and
jge
fisubrs
dec
mov
sub
rcrb
int
ds
adc
sub
leave
pop
dec
and
add
mov
sar
js
rclb
jmp
out
ret
mov
test
es
scas
sbbl
ljmp
xor
cli
jg
adc
mov
xchg
adc
lods
push
mov
scas
inc
mov
mov
lcall
pop
inc
adc
test
pop
jg
add
dec
xchg
popa
cmpsl
dec
mov
lret
cmpsl
stos
adc
aaa
mov
hlt
call
fiadds
ficoms
mov
in
mov
adc
les
andb
cmp
in
filds
add
nop
cmpl
sub
sti
lock
and
scas
adc
lahf
pop
push
and
xor
icebp
mov
jecxz
jno
sbb
fistpll
inc
mov
adc
xchg
daa
pop
mov
mov
mov
notb
jmp
push
jl
sbb
aam
pop
ss
and
int3
mov
lea
cs
and
add
loop
daa
shrb
gs
inc
pop
inc
out
push
push
gs
and
cmp
xchg
call
scas
mov
lcall
inc
sbb
xchg
push
xlat
cmp
popf
enter
aad
imul
cmp
imulb
pop
jae
cmp
sub
pop
push
in
dec
adc
jge
add
cltd
stos
das
testb
scas
xchg
stc
jmp
or
sahf
cmc
rcll
push
sub
jle
jo
stos
and
jmp
dec
jl
sub
les
cmp
jecxz
sarl
shlb
shl
cmp
imul
mov
imulb
mov
or
movsl
mov
outsb
cmp
imul
inc
push
pushf
jne
inc
mov
xor
lods
jns
xor
adc
daa
jbe
ror
inc
jo
lcall
cmpsl
adc
inc
dec
ss
pop
jno
and
jae
daa
ret
xchg
cmp
arpl
ds
stc
push
add
mov
push
xor
sub
cli
xchg
sub
jmp
arpl
addr16
push
jne
and
adc
inc
xor
push
arpl
js
cs
insb
or
or
push
push
pushf
push
pop
test
popa
xlat
sarl
out
cli
dec
xor
into
mov
jg
aaa
repnz
cli
xor
jnp
xor
repnz
into
movsb
sbb
lahf
iret
jp
cwtl
cmovae
jle
shlb
jb
sahf
loope
test
push
cmpsb
cld
push
fidivl
stos
push
in
sahf
leave
icebp
pop
js
jmp
cmp
xor
sbb
mov
int
mov
mov
lcall
nop
cmc
or
popa
pop
ror
movsb
adc
and
mov
cmpsb
inc
movsl
adc
and
xchg
mov
add
adc
mov
repnz
pop
es
pop
sbb
lahf
push
jmp
push
cmpsb
pop
dec
xchg
lcall
jge
inc
fnsave
pop
outsb
notl
jmp
jle
jne
jb
jp
cltd
popa
cmpsl
and
dec
int3
in
and
add
cmc
enter
mov
movsl
cmpsb
mov
jmp
fimuls
mov
sbb
mov
jp
decb
ficomps
xor
inc
mov
mov
inc
adc
xor
add
xchg
out
push
inc
in
mov
adc
test
rol
sbb
lea
push
mov
or
cmp
in
ljmp
sbb
pop
mov
test
lock
and
stos
loopne
and
mov
cmp
lret
bound
adc
movb
jns
dec
loop
lgdtl
pop
shll
cmc
lcall
adc
lock
xor
push
mov
imul
in
lds
sbb
fistl
lock
leave
and
add
cmp
in
cmp
dec
sbb
jecxz
push
sbb
pop
inc
outsb
cmp
movsb
aad
fists
shlb
xchg
sbb
testb
clc
xlat
dec
push
div
mov
xor
push
mov
dec
jmp
pop
pop
lahf
mov
in
cltd
cmpl
imul
fnstsw
lret
jbe
inc
loopne
inc
sub
push
adc
test
fmuls
jbe
das
or
xchg
inc
inc
leave
sbb
lea
jmp
xor
jg
sbb
pop
cld
xor
xor
out
pop
mov
pop
dec
fs
das
int
pushf
mov
lock
pop
sarb
cmpsl
inc
dec
inc
sahf
test
or
xorl
ja
xor
push
cmp
fadds
sub
fwait
dec
out
adc
iret
dec
xchg
mov
fidivs
clc
xchg
and
aam
cmp
sbb
jnp
test
pop
and
flds
inc
xor
mov
icebp
std
sub
dec
mov
add
inc
cmc
mov
jl
adc
mov
and
vandnpd
cld
jg
ss
or
leave
jp
cs
out
icebp
inc
iret
mov
pop
mov
cmp
aad
or
pop
cs
cld
jnp,pn
adc
les
and
or
test
pop
test
mov
xor
clc
jmp
pushf
ror
push
mov
shlb
cltd
pop
std
sub
xchg
cld
fldt
jns
into
sbb
jle
push
mov
insl
sbb
sub
push
stos
pop
or
movsb
sahf
jmp
pop
inc
xor
repz
jo
mov
add
mov
hlt
std
sbb
mov
cwtl
lcall
fisubs
sbb
lret
shll
decl
lods
fwait
jl
push
mov
xchg
mov
push
into
ljmp
loope
cmp
add
rorb
stos
int
shl
sub
xchg
jae
dec
icebp
and
loopne
or
cwtl
rcll
mov
or
pop
xlat
xchg
or
lea
jae
push
jo
call
sbb
pop
enter
sbb
lods
inc
ss
cmp
xchg
adc
jno
pop
je
lds
out
jbe
int3
pop
push
mov
pop
mov
je
loopne
sbb
cmpsl
jno
mov
adc
mov
and
mov
loopne
xchg
fsubrp
test
dec
mov
adc
loop
cmp
cmc
inc
dec
add
imul
mov
sahf
imul
jmp
mov
lock
pop
mov
xchg
enter
fwait
int3
das
daa
cmc
insl
mov
insl
les
xchg
sarb
test
xchg
push
aas
mov
dec
cld
jb
inc
push
xor
pop
xor
adc
mov
push
movsb
push
jnp
jge
push
jl
cld
sbbb
lret
loopne
out
push
aad
mov
jne
stos
leave
mov
int3
dec
and
cmpsb
leave
lods
and
sar
or
repz
add
aas
mov
mov
push
bound
fcoml
mov
xchg
repz
push
shr
popf
push
test
jns
sti
icebp
jge
dec
je
xor
or
call
ret
sub
mov
xor
sub
les
jecxz
dec
sbb
nop
mov
or
lret
movaps
or
dec
xchg
lock
jecxz
pusha
lret
pushl
out
scas
movl
adc
or
addr16
sbb
sub
dec
stos
dec
insl
loope
lock
xchg
push
jae
and
jns
mov
xchg
push
loop
or
enter
push
add
pop
inc
cmp
das
ret
push
xor
repnz
fwait
fwait
bound
lods
data16
sub
xor
es
fistps
mov
fisubs
mov
mov
das
xchg
adc
push
push
adc
or
imul
mov
jmp
push
push
add
aas
and
movsb
pop
adcl
pop
sbb
jno
call
adc
leave
insb
pop
jge
dec
push
add
cmp
lahf
lret
xor
push
add
insb
gs
test
or
xor
push
add
xchg
or
push
sub
sbb
cmp
ficomps
or
jae
stos
shl
inc
jp
cmp
enter
mov
push
cmpsb
xchg
sub
mov
lahf
adc
scas
jns
cmp
jo
cmpsb
insl
pop
movsl
push
xor
jb
fsubl
or
fwait
mov
popf
cli
addr16
cmp
xchg
lea
sub
test
push
sbb
mov
div
and
mov
filds
pop
add
in
aaa
lods
jge
loopne
clc
in
out
cmpsb
xor
pusha
mov
push
arpl
mov
dec
pop
cmpsb
xchg
xor
mov
sti
mov
ljmp
push
loop
les
ss
cltd
add
leave
jecxz
sahf
or
push
push
push
dec
xor
clc
inc
test
decb
js
sahf
mov
sbb
mov
pop
fimuls
int
lret
push
sub
fwait
rolb
xchg
sub
mov
std
add
xchg
ret
mov
cmp
enter
rcrb
popa
stc
add
mov
sub
lods
in
cmpsl
out
pop
rcr
imul
icebp
mov
push
dec
or
cmp
cmp
popa
xchg
outsl
and
lds
imul
mov
sub
mov
push
aam
fmull
jmp
fs
sbb
dec
repz
xchg
push
pop
sbb
sbb
mov
sbb
add
jno
fsubrs
lods
repz
ror
fisttpll
lds
int3
sahf
and
or
sub
hlt
frstor
inc
aam
or
lods
push
and
mov
pushf
mov
mull
inc
cwtl
aad
lcall
cmpsb
push
xorl
mov
cwtl
push
jp
dec
and
push
mov
fsubl
inc
pushf
lret
and
rorb
cmp
or
dec
push
or
mov
push
shrb
call
lods
call
movsl
xor
sbb
aaa
jecxz
adc
adc
pop
add
xchg
mov
movsb
mov
push
xor
stc
or
mov
icebp
jb
sar
sbb
sbb
xchg
push
cmp
repnz
jp
pop
push
mov
int3
stos
insl
fldcw
mov
ljmp
cmpsl
notl
repnz
lret
insb
std
popa
sbbl
call
jmp
adc
ret
in
mov
cmc
test
cmp
pop
std
movsb
loop
pop
test
pop
fdivrp
lods
sbb
stos
lock
push
loop
dec
sbb
out
jl
cmp
vpsrad
cld
dec
test
dec
mov
sbb
and
ss
push
sub
fs
ja
stos
fcoml
adc
cli
or
inc
mov
pop
stos
cmp
push
dec
icebp
xchg
or
xor
int
int
loopne
js
dec
mov
push
test
push
xor
nop
pop
pop
mov
loopne
sbb
stc
inc
data16
testb
xchg
xchg
xor
je
jg
push
aad
mov
fmull
imul
lock
pusha
add
mov
pop
pushf
adc
pop
adc
out
outsb
push
cmp
mov
lock
lret
mulb
xchg
sub
inc
and
fstp
pop
stos
ret
or
mov
mov
push
outsb
adc
test
xor
xorb
mov
insb
jae
inc
fbld
dec
dec
mov
sarl
rorl
or
stos
add
aam
adcl
es
push
xor
fst
inc
inc
mov
pop
jge
leave
jp
fisubs
cvtps2pd
mov
pop
ss
pusha
fildll
gs
fmull
jne
cmp
sbb
jno
xor
mov
icebp
mov
mov
adc
inc
mov
lods
ja
mull
in
inc
aas
mov
push
cmp
mov
sub
pcmpgtd
jle
aas
pusha
mov
xchg
push
aad
mov
push
push
clc
pop
sub
pop
imul
cmp
xchg
popa
outsl
lahf
loop
mov
cld
and
jo
outsl
jbe
out
jmp
sub
mov
cmp
repz
cmpb
or
jnp
fistpl
cmp
cmpsb
mov
mov
out
xorb
add
loop
setle
sarl
xor
adc
sub
and
sub
cmp
adc
test
test
jg
adc
fldenv
insb
fs
or
lods
add
popf
shll
loopne
scas
rcrb
stos
push
cltd
or
add
mov
icebp
mov
stos
sbb
es
into
mov
in
cmp
stos
sub
jb
sbb
loop
sub
push
xchg
push
arpl
mov
sub
add
adc
in
pop
sti
popa
jle
jns
loop
cmp
dec
sub
mov
or
bound
dec
stos
sub
add
jmp
cmp
mov
mov
cs
or
loop
cmp
mov
push
pop
pop
pop
aaa
xchg
or
xor
shlb
movl
inc
xor
pop
xor
add
jo
into
pop
jne
dec
push
pop
or
into
test
dec
sarl
rcrl
xchg
xchg
pop
jbe
dec
and
pavgw
mov
inc
jns
fisttps
aam
ss
inc
fisttpll
cmp
sbb
xor
push
in
push
or
sahf
jno
mov
repz
or
or
push
sbb
cmp
and
imul
aas
scas
mov
jnp
adcl
in
pop
call
add
or
stos
jle
testb
lret
addr16
sbb
int3
adc
dec
and
cld
xor
daa
jg
imul
inc
loop
subb
scas
adc
add
in
movsb
addr16
aaa
fcoml
pop
sub
inc
xlat
mov
jg
sub
mov
adcb
sti
add
pop
xchg
repnz
cmpsl
sbb
xlat
sbb
cmp
cs
pop
sbb
leave
rolb
jmp
pushf
in
xor
cmc
or
jae
sbb
mov
das
in
lods
pushf
jge
xchg
xchg
pusha
sahf
std
call
mov
fidivrs
xchg
jmp
sbb
jle
push
push
or
inc
addl
ss
jnp
in
fbld
add
jnp
fnstenv
or
aad
shll
fsubp
iret
pusha
push
push
sbb
mov
out
mov
fnstenv
aam
dec
insl
std
nop
sbb
xchg
xchg
mov
cmp
lds
mov
push
aas
xchg
xchg
and
jl
fwait
ret
inc
jp
aas
ss
rcr
add
les
and
das
mov
mov
mov
cmp
out
cmc
lcall
mov
xor
fwait
hlt
xchg
jge
adc
add
mov
add
andb
dec
fidivrs
dec
sub
fsubl
push
push
add
out
or
ja
xchg
pop
add
xchg
popa
js
dec
sbb
imul
pop
sub
cld
sub
pushf
adc
push
dec
lret
sbb
sub
xchg
dec
loopne
or
jnp
push
stos
or
jmp
mov
cmpsl
sub
jo
sbb
lds
xchg
xor
ret
cwtl
jae
or
jp
lea
enter
pop
fcmovbe
arpl
xor
or
inc
push
mov
pop
test
push
and
cs
fcmovb
mull
push
jmp
std
mov
inc
mov
dec
pop
push
arpl
and
pop
dec
out
gs
and
je
ds
inc
inc
roll
cmpsb
push
jge
ss
icebp
ffreep
adc
cmpsb
sbb
dec
out
fcoml
adc
imul
test
mov
rcrb
pop
lds
popa
cmpsb
cmp
xchg
add
aas
icebp
sub
inc
iret
daa
cwtl
out
pop
outsl
mov
jl
das
dec
mov
cvtpi2ps
in
or
imul
inc
adc
mov
jle
fiaddl
dec
movsl
rol
adc
aad
scas
mov
daa
inc
mov
popa
leave
scas
xchg
sbb
clc
test
popa
pop
sbb
xor
vpcmpgtd
push
cmp
in
and
pusha
fcmovnbe
jae
mov
lods
and
push
fsubr
mov
push
mov
pushl
or
inc
mov
cmp
out
hlt
icebp
hlt
repz
jg
fstpt
decb
xchg
sub
jb
lds
mov
jb
push
imul
lods
leave
xorl
mov
and
xchg
cmp
int3
pop
cmp
xchg
sarb
test
jae
leave
jp
das
push
jns
cmp
mov
jbe
test
xor
xchg
pop
push
adcb
cmpsl
sub
mov
pop
shrb
jge
and
sub
ret
iret
xchg
add
icebp
rcrb
test
enter
pop
jge
mov
xor
or
pop
add
or
push
adc
cltd
and
mov
cmc
xor
test
mov
jge
sub
shlb
int3
loop
sub
xchg
or
fimull
stos
ss
leave
push
ja
mov
in
xor
mov
xchg
mov
cmp
and
jns
xchg
and
pop
aam
mov
cmp
mov
mov
sub
xor
jbe
mov
call
xchg
jae
xor
cmpsl
aaa
push
imul
into
mov
imul
cli
cmc
pop
shlb
lahf
inc
pop
aad
sub
cli
inc
xor
test
dec
jle
sbb
sub
xchg
cld
fstps
hlt
or
fwait
pop
add
ljmp
or
or
push
jne
mov
jbe
push
std
inc
inc
mov
mov
das
std
dec
mov
mov
std
lods
and
ljmp
ret
lock
bound
stc
test
and
fs
dec
mov
xor
testb
lcall
lods
and
and
push
adc
mov
addr16
outsl
mov
push
jle
sbb
das
decb
dec
pop
test
inc
pop
jecxz
std
or
lret
fimull
mov
pop
lods
mov
or
add
adc
mov
int3
loope
shlb
adc
xchg
sbb
or
cli
cmp
xchg
imul
ficoms
movsl
in
cmc
or
lods
push
and
std
mov
jmp
pop
out
mov
or
test
in
inc
dec
loope
sbb
push
scas
xlat
je
or
mov
aad
cmp
mov
sub
jno
jmp
das
dec
jnp
push
pop
mov
testb
inc
mov
inc
pop
xchg
pop
pop
sub
inc
rcrb
ss
cltd
loope
addr16
jnp
xchg
xchg
cmc
mov
pop
orl
mov
addr16
mov
sbb
cmp
test
xchg
mov
rolb
add
arpl
scas
xor
push
das
sub
leave
push
push
pop
jae
dec
sbb
cmp
aas
int3
into
int3
or
shrb
push
or
xchg
cmpb
pop
in
sbb
xor
push
xchg
clc
mov
sbb
jmp
mov
dec
pushf
inc
popl
sbb
inc
xor
add
movsb
pop
mov
dec
in
sbb
ret
int3
out
sub
cld
pop
push
test
cmpsb
add
out
fldl
pop
sbb
sbb
mov
sub
xchg
sbb
or
pop
and
mov
jo
add
xchg
add
ret
jb
cmp
adc
xor
test
xor
aaa
mov
and
push
push
fildll
cld
jae
xchg
jae
stos
sbb
sti
xchg
jmp
mov
sbb
adc
adc
mov
inc
jne
les
imul
dec
mov
jb
cmpb
jno
cmpsl
cmp
cs
int
jg
push
or
inc
xchg
jecxz
xorl
sub
mov
mov
movsl
rolb
cmp
scas
imul
sub
jns
jmp
adc
push
adc
je
mov
ficomps
sub
iret
jbe
sbb
pop
es
int3
test
out
jae
cmp
pop
mov
rol
test
sti
mov
aad
inc
pushf
add
jne
cmp
in
cmp
jbe
scas
testb
popa
pop
hlt
or
pop
push
inc
pop
jo
cmp
ljmp
mull
adc
adc
and
pop
push
fbld
jecxz
push
mov
movsl
fcmovnb
mov
pop
movl
jno
cld
push
mov
pop
push
in
in
dec
mov
cmpl
stos
cmp
push
repz
imul
xchg
push
outsl
rclb
repnz
test
cltd
enter
flds
cmp
xchg
outsl
xchg
sub
js
push
add
mov
repnz
mov
cs
stos
adcl
ds
and
inc
or
js
repnz
pusha
sarb
mov
adc
pusha
jle
stos
aaa
addb
jno
loopne
enter
cmpsl
insl
dec
out
and
dec
in
jmp
xor
jnp
xor
ja
je
sbb
jl
shll
and
js
pop
les
xchg
mov
mov
arpl
cmp
pop
and
sub
andb
ficomps
push
push
pop
push
shrl
dec
and
cmpb
cmpsb
shlb
and
test
test
xchg
push
pop
push
inc
into
leave
std
iret
cmpsl
into
insl
xchg
cmp
test
mov
out
in
rol
push
popf
loop
pop
div
inc
add
and
cmp
or
sub
sbb
adc
pop
jne
pop
mov
int3
fwait
inc
mov
loopne
sar
ud2
sub
dec
shll
in
xchg
push
sbb
call
or
daa
gs
mov
or
and
lods
inc
xchg
and
out
imul
cld
pop
dec
cmpsb
ljmp
adc
notl
adc
inc
add
sbb
push
push
imul
rorl
and
inc
xor
daa
imul
enter
jmp
popa
mov
mov
xchg
sub
xor
jle
inc
sub
in
dec
jmp
dec
addr16
divl
mov
sarb
lds
pop
pusha
mov
or
es
mov
lret
sbb
push
mov
jo
stc
dec
jl
push
push
into
jb
sahf
lods
inc
jecxz
shlb
dec
sbb
xchg
cld
negl
test
rcrb
push
adc
or
push
int3
push
inc
jns
or
pop
sbb
mov
xchg
ds
xchg
inc
dec
imul
in
lods
ficompl
inc
lret
test
leave
out
fcompl
testb
outsb
repnz
sti
ss
leave
sub
sbb
dec
inc
jmp
sub
pop
bound
mov
mov
leave
xor
dec
out
cmc
pop
add
pop
dec
sub
mov
mov
mov
popf
lods
or
mov
leave
movsl
aam
lods
test
pop
hlt
jle
repnz
jno
insb
mov
jl
xor
push
mov
imul
xor
inc
pop
fs
dec
mov
movsb
inc
add
fsts
xor
lods
popf
mov
jp
ljmp
negb
adc
into
push
divb
xor
out
loop
sbb
add
push
pop
ss
mov
fildl
mov
mov
dec
sub
mov
shl
push
test
scas
movsb
loop
andl
push
mov
jl
mov
lds
lock
movsb
daa
and
dec
sbb
xchg
js
ja
xchg
xchg
sub
in
inc
pop
scas
insb
dec
jmp
pop
jns
add
fwait
jecxz
dec
jb
mov
fdivs
and
shll
nop
stos
cmp
out
mov
mov
pop
in
test
test
subb
sub
cld
aad
int3
push
mov
jmp
gs
imul
add
push
xor
aad
dec
iret
int
sbb
sbb
jecxz
xlat
jle
push
bound
std
inc
xlat
jno
pop
pop
jmp
fistps
in
test
aad
outsl
mov
or
lods
int3
ljmp
outsb
lcall
rcrl
lahf
mov
mov
dec
in
pop
imul
mov
addr16
dec
cli
arpl
cwtl
lea
dec
add
fsubrs
xor
jno
pusha
stos
shlb
or
fimuls
push
cmp
jae
inc
dec
mov
mov
repnz
xchg
jbe
fnstenv
fcom
in
movsl
ljmp
cli
cwtl
jnp
decb
shlb
or
xor
jne
add
or
dec
push
aad
es
push
xor
shll
xchg
imul
sti
call
in
sub
add
sub
mov
je
int3
fcmovb
bound
or
inc
gs
push
jns
add
jb
pop
push
xor
lcall
mov
mov
movsl
push
mov
psrld
dec
jl
xor
mov
scas
sahf
and
stc
out
fnstsw
test
into
sbbb
fucomip
xchg
ljmp
sti
inc
or
call
call
mov
ret
lods
stos
cmp
jne
test
adc
sub
fwait
mov
ret
std
cmp
dec
xchg
je
mov
adc
jno
xor
out
enter
cmp
lcall
fwait
cli
or
dec
fwait
pop
or
add
lcall
adc
call
fs
push
popa
dec
aad
and
insl
sbb
aad
push
and
xchg
leave
stc
xor
xor
sbb
or
test
jbe
add
cmp
shll
cmp
lcall
push
inc
lds
inc
dec
imul
or
mov
addl
stc
cltd
pop
cmp
int3
pop
cmpsb
cmc
lods
adc
add
mov
adc
pop
adc
aaa
scas
js
xchg
jmp
mov
enter
xchg
pushf
addb
push
testl
pop
ds
stc
pusha
xchg
jnp
cwtl
out
aad
test
cmpsb
in
jge
repz
mov
popf
daa
pop
sbb
xchg
mov
jge
in
sbbb
insl
cmpb
inc
fldt
dec
stos
lods
pop
daa
and
std
nop
mov
stos
fidivl
xchg
mov
pop
inc
mov
scas
out
fsts
lret
push
sbb
lds
pop
idivb
imul
xchg
addr16
ja
stos
lahf
mov
add
push
and
loop
inc
clc
xor
ds
insb
nop
idiv
ret
andb
jnp
lds
and
or
mov
cs
es
sub
outsl
mov
sub
push
fcmovbe
jecxz
clc
fisttpl
lret
das
sbb
lock
ja
add
push
mov
sub
sbb
xchg
aas
sbb
sub
sbb
jns
rcl
rcrl
mov
lea
aaa
cmp
xchg
pop
sbb
lods
push
inc
and
sub
shlb
cmp
cmpsl
sbb
jae
mov
sbb
mov
xchg
lods
imul
out
adc
jae
mov
pop
mov
rorb
pop
test
test
xorb
out
rclb
outsb
shlb
popa
jae
lret
icebp
adc
push
fwait
scas
repz
stos
push
xchg
inc
in
dec
inc
ss
add
or
xchg
cmpsb
ficoms
fs
jbe
pop
call
push
mov
and
bound
mov
call
movb
cmp
cmp
movsb
mov
xchg
xchg
cmpsb
push
cwtl
pop
or
int
adc
lret
add
addb
sbb
loop
sbb
mov
inc
movsb
pop
xor
daa
cld
mov
sub
and
jnp
lcall
lds
cwtl
int
sbb
mov
repnz
ds
xchg
shll
xlat
hlt
sbb
les
push
cmp
cmp
mov
jnp
xor
mov
and
push
enter
xchg
inc
inc
sbb
xor
jnp
dec
or
xor
lods
add
xor
pop
pop
and
ret
sahf
push
xor
mov
fcoml
adc
icebp
jne
popf
aas
clc
xor
ja
inc
cmpsb
push
popf
push
ss
lods
or
jecxz
push
jae
pop
dec
popa
subl
sbb
sti
addl
mov
test
sbb
icebp
ja
sbb
mov
push
mov
inc
repnz
mov
aaa
pop
mov
shll
iret
xchg
adc
xchg
lods
add
je
lret
xchg
shrl
out
scas
addb
or
lea
push
push
adc
out
push
scas
popa
or
int
mov
jbe
jmp
ds
es
or
in
nop
movsl
ljmp
inc
aad
stc
pop
inc
mov
inc
ljmp
addr16
push
xchg
cmp
inc
push
into
lods
adc
repnz
mov
mov
outsl
mov
lahf
push
push
jp
andl
lret
mov
out
xchg
loopne
sbb
outsl
fsubrp
negl
ja
clc
inc
mov
fdiv
test
cmp
adcb
lods
xchg
lods
adc
and
mov
cwtl
pop
push
add
xchg
lds
jnp
push
lods
push
jae
jo
fstpt
xchg
fs
add
jbe
jg
xchg
and
xchg
sbb
sub
aas
and
fdivr
shr
dec
pop
pop
xchg
pushl
je
std
jge
lods
dec
dec
icebp
call
mov
lock
out
xlat
push
xchg
jl
xor
mov
jne
sbbl
pop
push
pop
stc
pop
outsl
lret
inc
cmp
call
dec
push
repnz
push
push
push
loop
jmp
sub
mov
xchg
shl
lea
xchg
cwtl
loope
std
dec
stos
sub
adc
pop
add
repz
inc
scas
cmp
iret
xor
ret
data16
cmp
mov
test
push
add
pop
inc
out
shll
int3
mov
pop
jg
ret
adc
sub
pop
mov
cld
lods
shr
shlb
sbb
xchg
mov
sbb
mov
lret
or
scas
jp
pushf
dec
pop
movsl
lahf
inc
and
cmp
lock
out
test
push
add
mov
mov
push
lods
xor
insl
je
lcall
push
lods
xchg
add
setl
movsb
and
mov
pop
mov
mov
adc
mov
mov
out
mov
inc
pop
lahf
jno
mov
sti
aad
jg
sbb
xor
subb
inc
add
mov
pop
push
sub
ja
inc
sbb
stos
dec
call
cmp
sbb
insl
cmp
jo
sahf
loop
dec
sub
icebp
lods
std
aas
ret
push
fidivs
or
mov
xchg
mov
loop
mov
stos
int
push
jno
mov
mov
xchg
xor
roll
xchg
adc
inc
fcmovb
and
into
and
and
inc
jb
xor
out
cmp
cmp
out
adc
fs
daa
movsl
pusha
jmp
jb
mov
lods
and
mov
sti
fwait
mov
inc
xor
sub
xchg
xor
je
xchg
neg
bound
xlat
cs
sbb
xor
lds
adc
jne
stos
aaa
orb
lods
rolb
add
or
fldcw
mov
add
xchg
mov
and
in
int
sbb
push
or
int3
les
jo
into
push
inc
stc
adc
add
loope
inc
pop
dec
stos
push
out
adc
ja
in
pusha
les
test
pop
xchg
aad
scas
jb
popf
mov
push
xchg
fistps
dec
jmp
fdivs
inc
fldcw
adc
imul
notl
in
daa
jo
jo
out
mov
mov
in
stos
xchg
fwait
insl
push
lods
dec
dec
incb
jnp
sub
lret
xor
push
ret
sub
mov
lret
std
imulb
jo
int3
pop
mov
and
iret
mov
imul
sahf
jle
imul
mov
rorb
out
xor
add
sub
into
or
stc
mov
dec
cmp
leave
testb
and
scas
lods
movsb
call
in
xor
mov
push
or
add
popa
lea
fwait
sti
jmp
push
sub
stos
subb
dec
push
sahf
mov
and
out
jo
cmpb
addr16
add
loopne
fldcw
pop
je
xchg
cmp
cli
and
add
sub
mov
mov
int3
mov
mov
mov
or
lock
sti
fdiv
dec
insl
fucomip
mov
pop
in
adc
and
in
mov
sbb
leave
and
sahf
inc
push
lcall
stos
inc
loop
push
xchg
insl
jnp
popa
fcmovnbe
pop
movsb
test
outsb
add
aaa
lea
aad
dec
inc
test
sbb
pop
fs
test
xchg
dec
scas
movb
or
inc
sbb
lds
sarl
lea
sbb
loopne
out
subl
jne
jmp
push
mov
sub
dec
popf
lahf
push
xor
sbb
xor
jecxz
sbb
test
adc
std
js
test
cltd
or
or
dec
adc
adcl
lock
pop
and
jnp
stc
add
adc
xchg
mov
xchg
sbb
cs
aam
mov
fldt
fwait
pop
xchg
pop
jb
cmc
inc
pop
adc
dec
and
aam
lcall
out
pop
int3
add
stos
scas
xchg
cltd
xorl
mov
inc
jbe
dec
popa
inc
adc
or
ret
fimull
mov
mov
cmp
adc
jle
jecxz
sbb
mov
and
arpl
xor
pop
test
cwtl
fidivrs
nop
push
cmpsl
popa
js
xchg
dec
cltd
loopne
jae
xchg
cmp
bound
pop
aad
and
adc
std
das
dec
popa
imul
loopne
je
mov
je
lcall
insb
cmp
xor
jnp
adc
jbe
fisttps
push
dec
outsb
stos
cltd
inc
pavgw
addr16
loopne
pop
addl
enter
iret
or
ret
sub
sbb
mov
mov
cmp
cmp
inc
mov
insb
pop
mov
cmc
jae
push
push
movsb
cltd
ss
out
mov
mov
pop
outsb
les
dec
jecxz
aaa
jecxz
xor
dec
xchg
jecxz,pt
or
mov
push
jns
adc
loope
fnstenv
pop
in
or
popa
cmpsl
daa
mov
ret
jle
test
fcompl
and
mov
dec
iret
xorl
mov
lret
dec
in
inc
std
scas
mov
insl
xor
movsl
adc
repz
scas
lock
mov
dec
push
addr16
lcall
fimull
scas
out
mov
xchg
mov
pop
mov
loop
push
adc
lods
and
or
pop
rol
sub
mov
pop
iret
les
sarb
pusha
insb
mov
call
inc
stos
mov
push
lcall
add
or
mov
pop
stc
aam
popf
rol
arpl
or
xchg
loopne
and
jl
fimuls
mov
mull
xchg
add
push
xor
cmp
mov
cmp
test
pop
je
ja
in
cmp
je
sbb
dec
ds
sti
adc
dec
arpl
mov
pop
adc
or
sub
aas
aaa
pushf
add
clc
lods
insl
cltd
or
dec
lods
fsubs
jns
jnp
call
mov
lret
insl
cld
mov
lret
ror
sbb
loopne
je
jmp
fwait
adc
sub
pop
lret
cmp
dec
insl
loope
icebp
jno
movsb
fdiv
jle
sarl
dec
and
rcl
jbe
outsb
testl
push
mov
adc
cmp
inc
sub
xor
cmp
sub
fadd
sub
xchg
adc
jecxz
inc
pop
jg
jecxz
inc
cmp
fwait
lods
sarb
std
jecxz
mov
enter
in
fsubl
xchg
es
rol
jb
inc
mov
aam
jmp
jns
dec
aam
mov
push
pop
inc
dec
jmp
sbb
daa
test
lret
scas
cmp
popa
pushf
pop
mov
mov
ret
cmp
pop
cmpsl
jmp
add
cltd
xchg
das
adcb
mov
pop
rcrb
hlt
cmp
popa
outsl
shr
je
incl
in
and
enter
clc
leave
adc
add
inc
sub
add
jno
jmp
pop
pusha
cmp
inc
lret
pop
insb
adc
and
pop
es
cli
mov
pop
or
sti
mov
lahf
inc
lea
pushf
and
pop
adcl
cmpsl
lock
enter
jbe
xchg
divl
lret
push
jbe
add
sbb
nop
enter
jbe
clc
pop
sbb
bound
into
mov
imul
insl
dec
mov
xchg
push
dec
cmp
jge
in
ljmp
push
mov
cwtl
pop
mov
push
sub
shr
push
mov
in
pop
mov
xor
dec
les
jns
mov
xor
or
fstpt
icebp
cmpsl
sbb
mov
cmpsb
fsub
and
insl
push
ljmp
dec
out
sbb
ss
testl
or
in
or
clc
sbb
mov
add
ljmp
mov
lahf
fisttps
lods
adc
sbb
push
pushf
push
push
imul
cld
jo
push
dec
sbb
adc
sbbl
lcall
fstpt
mov
fldl
jb
in
mov
out
sbb
xchg
add
jo
jae
dec
and
insb
insb
mov
test
shrl
imul
clc
pop
ds
xchg
jecxz
adc
inc
fiaddl
ds
jmp
xchg
push
xor
stos
lods
dec
aas
or
add
mov
jp
rolb
daa
xor
inc
inc
repnz
repz
or
mov
jo
or
lock
jne
jp
and
adc
data16
or
lods
mov
jae
mov
mov
xlat
movsl
or
cmp
mov
jmp
add
lock
jg
adcb
mov
push
or
sahf
dec
mov
and
jl
insb
cli
enter
xor
adc
mov
mov
dec
out
mov
imul
add
xlat
repnz
xchg
mov
dec
cmpsb
push
mov
dec
jl
stos
je
dec
xchg
mov
imul
xor
xchg
into
jb
jns
cmpl
sub
pop
jne
ja
sub
loope
dec
push
push
aaa
mov
or
into
jns
inc
test
jecxz
pop
mov
ja
mov
mov
xchg
loope
inc
and
ss
pop
pop
lret
cmp
enter
jo
ret
loopne
ret
gs
sbb
repnz
je
dec
out
fidivrs
aaa
and
xchg
xadd
lea
mov
push
stos
push
in
inc
jmp
loop
loope
movsl
lock
int
sub
outsb
xchg
or
adc
cmp
sahf
or
push
sbb
mov
sub
popa
adc
mov
add
ss
sub
ds
insl
icebp
or
mov
lods
loop
push
inc
sbb
xor
add
inc
and
dec
movsl
sbb
ss
sti
iret
mov
movq
pop
sarb
cmc
cmp
push
dec
mov
stos
xchg
dec
outsb
xor
cmp
scas
scas
xchg
shll
imul
sbb
dec
fwait
jl
ss
test
dec
or
das
push
mov
cmp
jge
lcall
mov
xchg
mov
out
mov
out
and
jl
or
pop
or
bswap
push
pop
clc
ja
in
pop
aad
popl
das
enter
jmp
insl
xor
pusha
push
out
add
push
ss
out
mov
xchg
mov
ds
scas
lahf
cld
ret
aad
addr16
push
jecxz
addr16
cmp
xchg
or
inc
fsub
pop
cld
je
bound
pop
sub
mov
xchg
or
movsl
lds
or
int
mov
mov
mov
aad
or
cmc
xor
je
les
sbb
rcl
and
loopne
inc
sbb
jne
insb
cwtl
or
scas
scas
inc
orl
outsl
mov
orb
mov
jge
sub
inc
mov
or
jge
xchg
movl
neg
and
add
inc
cltd
lret
movsb
jbe
sbb
jp
imul
cmp
jb
adc
cmp
iret
aas
sub
arpl
int3
and
loopne
shr
pop
jecxz
mov
mov
sar
pop
push
lods
dec
xor
imul
test
jno
clc
mov
je
mov
lcall
sarl
imul
jne
mov
sahf
sti
and
sti
or
hlt
sub
insb
mov
imul
out
sub
andb
xor
mov
loopne
push
lock
rcll
sub
adc
roll
stos
mov
sbb
lds
push
mov
mov
push
imul
push
std
xchg
mov
lea
sub
adcl
sub
mov
pop
xor
stc
addr16
pop
fsts
pop
sbb
mov
pop
inc
adc
cwtl
adc
push
sbb
int
push
pop
mov
lahf
cltd
lret
in
cld
jecxz
fdivs
and
mov
push
sub
cmp
and
or
mov
flds
pop
ja
dec
lcall
mov
jl
mov
pop
fstl
cli
inc
xlat
das
scas
fdivrl
in
xor
jecxz
stc
pop
or
push
xchg
and
fdivrl
outsl
std
jns
sbb
test
pop
stos
dec
push
scas
fxch
and
fstp
pop
xor
scas
cmp
bound
in
push
test
dec
les
lods
insl
push
idivb
sub
mov
pop
out
lock
out
mov
sbbb
adc
arpl
pop
mov
lcall
test
sahf
pop
int3
xlat
imul
jg
or
add
popf
test
mov
cmpsb
or
lea
test
aaa
aad
repnz
adc
rcrl
push
push
jbe
mov
mov
pop
fsts
sahf
call
xlat
loope
jo
jp
insl
addr16
mov
adc
xor
mov
je
shrb
jecxz
mov
fs
int
jo
pop
std
jp
sbb
dec
dec
jp
and
stos
mov
mov
sub
push
push
test
rorb
mov
or
inc
test
or
sbb
rcl
push
nop
cwtl
push
xor
jp
mov
shrb
sbb
mov
xor
lret
and
jb
sbb
xchg
adc
enter
movsb
ror
xor
outsl
mov
icebp
cmp
in
xchg
pop
lods
sbb
or
outsb
xchg
idivb
into
push
adc
loopne
je
or
push
insl
shlb
out
dec
lock
mov
mov
xor
repnz
xor
sub
lcall
push
mov
jmp
negb
mov
xor
push
jae
xchg
and
inc
sbb
cmp
dec
mov
or
jmp
cmc
stos
xor
adc
fiadds
test
xlat
int
loopne
out
jb
inc
fstpt
out
jae
mov
push
sbb
rol
or
or
orb
nop
lock
orl
fwait
lods
xor
cmp
mov
in
mov
and
iret
imul
orl
cmc
pop
shll
push
mov
or
nop
or
mov
pop
das
rcrb
hlt
jns
ret
sbb
cmpsb
test
xchg
inc
mov
mov
lds
push
popa
mov
lock
jge
test
cmpsb
lret
aam
adc
mov
je
sahf
sbb
aad
ficoms
cs
mov
cltd
aad
hlt
mov
je
xor
jo
dec
jmp
ret
aam
cmp
in
and
mov
inc
push
out
movsl
jg
daa
out
and
addl
lret
jmp
sti
mov
mov
jecxz
adc
adc
xor
xor
push
and
cmp
mov
inc
push
xor
pop
orl
or
sbb
ret
sbb
lcall
lahf
test
cmp
ret
fnstsw
cld
lods
mov
test
test
scas
dec
lods
decb
lcall
mov
inc
cmp
inc
xlat
and
cmp
push
dec
sub
fmul
cltd
mov
sub
add
xor
mov
hlt
sbb
js
into
shr
outsb
xchg
mov
pop
inc
xchg
data16
pop
mov
jnp
push
or
insl
jae
or
sub
pop
out
inc
and
adc
mov
xor
hlt
mov
into
or
call
ss
fwait
push
ss
leave
and
out
xor
aad
out
xlat
inc
fildl
sub
cmp
scas
call
push
or
arpl
dec
lret
adcl
adc
repz
leave
sbb
rcrl
dec
dec
sbb
test
ja
pop
xchg
mov
test
mov
cwtl
mov
cmp
and
les
hlt
xchg
addb
cmp
leave
add
incb
xor
sub
mov
xchg
and
lds
mov
sti
dec
adc
cltd
out
iret
fsubp
sti
push
xor
movsb
jno
hlt
add
xchg
mov
movsb
imul
dec
mov
xor
lods
xor
out
andb
cmpxchg
lret
mov
repz
shrb
mov
mov
lea
imul
mov
lds
push
negb
jmp
xchg
push
pop
insb
add
pop
loopne
sbb
mov
fmull
pop
jno
rorb
jmp
push
pop
adc
fwait
bound
xor
mov
xor
jnp
sub
movsl
dec
jmp
js
imul
inc
inc
dec
dec
cmpb
pushf
xor
adc
faddl
dec
fwait
add
adc
jp
sub
stc
add
es
rcrb
lcall
mov
mov
sbb
gs
clc
pop
sbb
stos
icebp
in
adc
dec
jbe
lds
imul
ljmp
loop
orps
ds
mov
push
jne
pushf
push
xchg
shr
jae
aam
xchg
cmpsl
mov
pop
push
hlt
xor
cmpsl
test
add
jno
sbb
pop
cmc
cmc
inc
cmp
loope
xchg
push
adc
stc
jle
fwait
rclb
fwait
sub
dec
lret
insl
cmp
cmp
push
ss
negb
movsb
inc
movsl
lret
push
xchg
and
test
cs
in
mov
insb
outsl
mov
jne
or
jle
or
jbe
call
je
mov
jle
jmp
and
jb
cmpsb
cmp
bound
lahf
int
fwait
adc
lock
pop
xchg
jae
mov
in
clc
and
mov
xor
or
cmp
pop
add
test
aas
dec
sbb
loop
nop
adc
add
je
sub
addr16
test
ljmp
stos
adc
xor
mov
push
scas
ds
cmp
out
das
cwtl
adc
jg
call
adc
fstl
out
mov
jmp
cmpsl
ljmp
call
push
repnz
or
add
inc
je
mov
sti
lret
pop
and
jge
fmulp
push
stc
bound
int3
mov
mov
out
fsubrp
loope
lds
add
add
lds
add
std
sub
lahf
movsb
jbe
es
mov
mov
stos
test
lods
or
fstp
mov
xor
loopne
inc
sbb
je
and
mov
xchg
jbe
mov
dec
sub
cmp
cmp
scas
adc
push
shr
inc
sbb
and
xchg
and
dec
mulb
ljmp
std
cmp
xlat
rol
pop
mov
or
push
inc
inc
dec
insl
cs
sub
inc
shl
push
jns
adc
xlat
insb
gs
jmp
dec
int3
bound
and
emms
push
mov
adc
jle
lea
push
inc
inc
fisubrl
sarb
lods
sub
loope
neg
pop
cli
mov
ret
jns
fisttpl
push
stc
aad
push
bound
sbb
jno
loopne
stos
hlt
jns
in
xchg
mov
push
cld
fsts
dec
aam
sub
pop
xchg
pop
cmp
mov
mov
stos
aas
stos
mov
xchg
xchg
jmp
jae
dec
jno
mov
nop
dec
addr16
in
add
push
or
jmp
into
push
jnp
xchg
lods
into
aam
int3
xchg
imul
cmc
push
orb
add
test
stos
out
jl
push
add
scas
xchg
mov
adc
outsl
stos
daa
mov
pop
mov
cmp
sub
loopne
in
lods
xchg
and
shld
push
jo
push
mov
mov
push
out
jle
into
adc
xchg
xchg
les
and
inc
test
addr16
stos
adc
xchg
pop
mov
mov
inc
push
arpl
repnz
loopne
cmc
in
aaa
push
xchg
rcll
out
sub
jb
adc
je
cmp
stos
cmpsb
js
push
aas
movsl
ljmp
sbb
mov
pop
jle
inc
mov
jbe
ss
insl
clc
je
pop
jle
mov
or
sbb
xor
jbe
ret
lods
inc
jo
aam
sub
call
xor
adc
ljmp
sub
popa
adc
cmp
pop
aas
fiaddl
out
push
or
loopne
fwait
lret
je
in
pop
shlb
lahf
int
inc
lea
xchg
mov
cmp
outsl
push
jbe
rcr
cltd
enter
jbe
inc
punpckhbw
dec
xchg
jmp
insl
pushf
adc
stos
adcl
sbb
mov
mov
lahf
and
sub
inc
and
mov
pop
fbld
popa
ficompl
mov
loope
scas
xchg
arpl
test
pop
xor
cmp
call
or
pop
jle
cmp
outsl
std
cmp
dec
pop
adc
inc
dec
xor
sub
mov
jne
rolb
loopne
push
pop
xchg
xchg
adc
rolb
cmc
arpl
jns
ret
push
sbb
rorl
test
jmp
sahf
mov
push
test
sbb
push
fcompl
inc
lret
pop
jo
repnz
scas
jp
scas
add
push
les
cmpl
in
adc
fwait
cli
mov
movsl
xchg
test
sub
cmpsl
faddl
inc
leave
stos
mov
andl
aas
inc
in
pop
jb
sahf
aas
mov
ror
mov
jmp
jb
adc
or
daa
int
cmp
dec
outsl
repnz
cld
cmp
cltd
or
pushf
dec
mov
mov
sbb
les
out
pushf
mov
xchg
mov
push
or
xchg
test
sub
mov
sbb
mov
lahf
mov
jl
mov
popa
mov
sbb
rcl
jmp
sahf
inc
imul
mov
jmp
sbb
bound
xchg
fwait
sub
arpl
pop
std
push
fsubrp
lret
xor
movsl
pop
cmp
dec
dec
cmc
push
lret
addb
stc
bswap
pop
dec
les
add
roll
mov
mov
pop
jmp
fcoms
cli
ljmp
mov
cwtl
dec
xor
gs
sub
jb
jp
mov
loope
lods
lds
mov
mov
stc
lods
cmp
inc
std
fdivrs
xor
repnz
idivl
mov
testl
cmp
cltd
out
loope
adc
xchg
sarb
pop
hlt
arpl
ficomps
xor
pop
mov
mov
mov
iret
pushf
icebp
pop
inc
jnp
andb
or
shlb
int
out
movsb
fnstcw
les
in
adc
out
xor
cmc
je
cmpsl
scas
cli
sub
lea
bound
mov
sahf
leave
lcall
xorl
fcoml
mov
mov
out
call
jnp
aad
aaa
dec
lods
inc
and
mov
idivb
mov
pop
aam
xchg
jo
test
cltd
lret
stc
add
dec
pop
push
push
sub
sar
xor
ret
int3
inc
mov
or
sbb
ror
pushf
mov
sub
dec
mov
pop
jns
mov
adc
mov
fisubrs
dec
jne
fwait
mov
popf
jmp
push
sarb
pop
cmp
inc
fwait
sbb
mov
sbb
out
in
xchg
out
push
mov
aam
aam
cmp
sbb
sbb
pop
pop
or
or
stos
adc
push
jle
movsb
addl
add
testb
fsubr
xor
int
pop
sbb
mov
test
mov
xor
sbb
bnd
imul
ret
imul
dec
fs
cmp
and
sbb
dec
or
or
xor
movsl
pop
inc
mov
push
pop
pusha
push
adc
pop
filds
lcall
rorb
xchg
repnz
in
pop
mov
adc
dec
aam
aad
dec
dec
sahf
dec
sbb
add
aad
or
jle
lods
iret
ljmp
jbe
ds
pop
sub
fsubrl
jo
aas
add
cli
out
jmp
add
and
mov
push
cmp
ret
out
cltd
je
jbe
and
xchg
pop
lcall
jo
enter
dec
lods
mov
mov
fldenv
fisubl
fwait
or
pop
sub
add
sbb
shlb
dec
pusha
leave
mov
push
lret
leave
out
pop
jnp
mov
sbb
mov
adc
in
xchg
inc
and
push
addr16
data16
inc
dec
xor
popf
andl
lcall
push
dec
add
jg
cli
cmpsl
in
clc
sarl
pop
push
mov
jmp
data16
or
cmpsb
lret
sub
fmull
cld
js
mov
je
push
test
inc
pop
cmpsb
xchg
xchg
ja
push
pop
fldenv
les
and
repz
stc
aaa
test
or
cmp
sub
in
testl
mov
xor
pop
jne
dec
dec
cmc
mov
push
sarb
lods
xorl
rorl
call
fildl
xchg
push
test
incb
jno
sti
int3
cmp
das
cwtl
sub
xchg
lahf
push
sbb
push
adc
sbbb
shrl
repz
add
sti
jmp
in
or
push
inc
fstps
repz
les
out
mov
jl
add
shrb
lock
mov
adc
or
sub
xor
imul
mov
jno
jbe
or
in
dec
mov
pop
cmp
dec
test
adc
popa
pop
adc
add
cld
dec
mov
push
or
mov
jl
mov
and
imul
pop
movsb
push
cmpsl
ret
and
movsb
stos
scas
push
lahf
pop
jns
lods
fldcw
jg
mov
stc
dec
ja
loop
mov
jne
cmp
cmpsl
mov
iret
fcoms
cld
inc
fnstcw
int
int3
and
dec
mov
pop
fcoms
mov
daa
mov
sbb
pop
cmp
cmpsl
xchg
mov
lea
frstor
jp
or
and
wrmsr
sti
push
jae
divb
rcll
aaa
iret
xor
sti
cld
inc
mov
xchg
aad
xchg
dec
jl
jne
and
fs
sub
adc
loopne
cmc
js
push
xor
shrb
push
push
or
popf
sbb
pop
xchg
jbe
mov
dec
and
push
fistpl
adc
mov
xor
or
mov
mov
sbb
sub
and
cmpl
push
test
subb
mov
addl
pop
inc
jmp
ljmp
mov
lcall
in
xor
mov
and
cli
mov
cmp
inc
fs
js
jne
sub
xchg
clc
jnp
shlb
lds
sub
test
movsl
push
push
adc
sbbl
push
int3
loop
mov
add
sbb
pop
xchg
outsl
pop
mov
xor
jecxz
out
jmp
loope
in
pop
lock
dec
stos
cmp
loope
xlat
jp
cmpsb
push
pop
xchg
test
cmp
xor
cs
test
add
push
je
nopl
xchg
pop
xor
add
ljmp
mov
xor
out
and
pop
xchg
stos
mov
lcall
loope
inc
cmp
and
pop
pop
pop
cs
xchg
lcall
mov
pop
popl
lret
loop
dec
jl
mov
jns
add
imul
add
insl
jae
loope
pop
test
lods
mov
ja
adc
fwait
cli
insl
test
scas
pop
lcall
shlb
push
int3
push
aas
sbb
jnp
and
jnp
shrl
push
repnz
adc
fwait
sbb
ljmp
mov
sub
add
ret
mov
insl
imul
or
enter
movsb
lock
or
pop
pop
movsl
shlb
or
cmpsl
cmp
jecxz
movsb
mov
mov
adc
dec
sub
sub
sbb
lods
insl
push
add
fidivrs
push
xchg
pop
mov
xchg
pop
xchg
dec
and
jo
xor
xor
imul
jg
mov
or
inc
adc
sbb
xchg
out
mov
mov
inc
lea
daa
xchg
jl
imul
dec
sarb
jmp
movsl
push
in
mov
pop
pop
cmpsl
pop
push
test
xchg
hlt
mov
adc
mov
pop
pop
adc
mov
test
rorl
fs
addr16
push
addl
aaa
mov
or
fbstp
jp
imull
sub
cmpl
lea
pop
mov
cs
les
repnz
fsubrs
and
iret
xchg
push
int
lret
and
sub
sbb
outsb
pushf
dec
fidivrl
pop
repz
loope
jmp
stc
sti
push
inc
into
icebp
jae
ficoms
adc
cmp
mov
daa
inc
out
lret
jne
cld
inc
insl
sub
test
inc
les
daa
jae
jge
add
jns
and
aam
jb
scas
jno
add
test
mov
mov
push
movsb
dec
dec
cmp
push
mov
test
mov
ss
in
xor
adc
cltd
push
fsubrp
out
cwtl
pop
lret
mov
mov
cmp
sbb
hlt
sbb
xchg
inc
jne
dec
push
pop
xor
and
lock
fldz
fiadds
lahf
xchg
or
fwait
xor
in
mov
outsl
sbb
cld
filds
mov
iret
test
rol
inc
ja
out
or
push
fs
cwtl
sbb
fdivs
mov
adc
das
mov
iret
cli
das
mov
ja
pop
push
shlb
lock
or
popf
mov
push
in
lret
repz
cltd
pop
lcall
mov
insl
mov
daa
aaa
and
fnstsw
jne
dec
pop
pop
outsl
lret
sub
inc
cltd
fdivr
pop
es
mov
pop
or
or
xchg
aad
fistps
aam
cmp
int3
mov
mov
mov
pop
pop
imul
pop
aas
xchg
lahf
cld
sub
ss
into
mov
filds
dec
xor
jo
and
in
adc
jne
sbb
xchg
clc
jge
ret
mov
jnp
enter
mov
imul
mov
adc
fdivrs
pop
cmpsb
mov
jns
pop
xchg
lock
rolb
outsl
aad
mov
jbe
scas
mov
pop
ss
and
add
sbb
jns
outsb
cmp
push
test
fmuls
inc
imul
hlt
popf
push
mov
jbe
popf
mov
inc
out
jmp
and
insl
dec
mov
loop
es
xchg
jae
fwait
in
ss
hlt
int3
fisubrl
jno
iret
inc
push
mov
in
sahf
or
pop
subl
stos
fisttps
dec
push
scas
sbb
jb
rorb
pop
test
test
les
out
lret
fimuls
dec
mov
cwtl
pop
cmp
shlb
adc
int3
imul
sti
and
gs
cmp
mov
pushf
mov
clc
pop
push
xor
xchg
pop
in
int
and
jle
cmpb
std
out
sbb
mov
sub
mov
add
jge
mov
sbb
sub
xchg
or
add
push
cmc
sti
mov
push
inc
out
push
jg
fsubl
xchg
xchg
inc
int
mov
xchg
inc
cmp
sbb
cmp
or
fstl
push
jmp
xchg
lock
xchg
repz
add
pop
pop
pop
fidivrl
sbb
jbe
add
add
dec
add
jbe
in
mov
mov
iret
lods
dec
shrl
xlat
std
push
or
popf
popa
sub
fildl
jno
jno
add
jg
fdivl
sbb
mov
in
xchg
jp
sub
shlb
movsb
xor
pushf
cltd
cmp
addr16
jmp
fildll
dec
xor
andb
mov
ret
sarl
add
sbb
dec
pop
adc
mov
push
cs
movsb
sub
mov
mov
sbb
das
clc
jae
div
jno
push
lret
and
and
int
scas
out
lods
lret
lock
push
cld
out
mov
add
pop
lds
push
es
pop
repnz
cs
pusha
inc
cmp
sarl
mov
lds
xchg
xchg
jge
popf
lds
rolb
cmp
sub
or
outsb
stc
xchg
cmp
cltd
aas
xchg
fadds
pop
js
movsl
sbb
fildll
ds
pop
lahf
dec
bound
pop
sahf
sub
orb
in
fldt
push
mov
cmc
cli
outsl
inc
dec
cltd
pushl
leave
mov
dec
or
adcl
mov
mov
cmp
push
pop
and
rcr
push
stos
add
mov
stos
lcall
sub
adc
shll
stos
cmpsl
add
and
nop
aad
cmpsb
js
mov
mov
or
ja
add
lock
fwait
outsl
je
les
mov
jbe
xchg
and
pop
lods
or
pop
outsl
xchg
lret
adc
int3
adc
js
xchg
stos
mov
add
mov
add
test
sarb
fsubr
dec
aas
push
xor
sbb
cmp
in
or
stc
mov
sub
sahf
popa
cmp
outsb
mov
subb
or
loope
adcb
xchg
cltd
adc
mov
fdivr
sbb
mov
sbbl
push
shlb
sub
mov
add
jmp
cmpl
mov
xchg
mov
push
call
sarb
cmpsl
cmp
lods
sbb
loop
adc
inc
outsl
mov
add
into
mov
or
adcb
daa
cmpsl
sub
pop
sbb
aaa
xchg
andb
mov
dec
sub
jno
notb
xchg
lds
sbb
icebp
pop
sbb
cmp
mov
jmp
stos
jns
addr16
in
aad
jne
mov
jmp
insb
dec
xchg
sub
pushf
js
stc
xchg
sar
dec
out
sbb
aam
mov
sarb
mov
popa
mov
sti
popa
mov
push
mov
xor
mov
fcmovnu
loop
mov
pop
xchg
add
clc
jno
stc
negb
icebp
cmp
imul
cli
adc
out
sbb
cltd
jmp
or
cmp
push
dec
mov
inc
lods
test
add
sbb
movsb
and
movsl
into
xchg
repnz
xor
scas
jmp
rclb
out
in
jb
mov
rclb
out
cmc
push
shlb
shl
aas
in
outsl
sub
shll
jnp
sbb
pop
in
iret
int3
inc
jne
fisttps
pop
je
sbb
hlt
inc
add
mov
push
rdpmc
pop
clc
add
xchg
subb
dec
or
cmp
loope
sbb
out
insb
hlt
mov
lea
repz
repz
cmp
rorl
xchg
leave
mov
ficoms
orb
sub
in
or
imul
rcr
loopne
shr
sub
push
inc
in
data16
xor
mov
fsubl
jb
movsb
ja
cmp
int
movsl
enter
sub
enter
mov
outsb
inc
push
dec
fiadds
shl
repz
adc
inc
push
dec
imul
lods
out
scas
push
cmp
mov
xor
les
jle
jp
pop
xor
mov
jae
cltd
dec
andl
add
pop
mov
aam
std
loop
out
fdivrs
pop
fildl
lods
xchg
and
in
push
icebp
cmpsb
push
mov
in
mov
mov
fdivl
shrl
adc
or
mov
das
sub
xlat
jmp
mov
jb
test
test
add
cmp
es
cli
fmul
out
or
cld
bound
jge
es
sbb
insb
pop
dec
test
mov
mov
add
jp
incb
inc
inc
and
aaa
sbb
inc
loopne
pushf
lret
push
add
mov
jno
sub
and
jns
push
mov
inc
pushf
negb
outsl
inc
xlat
and
mov
cmp
push
sub
mull
stos
ljmp
out
push
dec
lods
jp
pushw
adc
popa
ret
ljmp
or
push
push
cld
push
pop
or
das
insb
lcall
gs
lahf
mov
notl
mov
pop
push
xchg
push
adc
popf
xor
mov
mov
cmp
insl
mov
fdiv
sub
mov
xlat
mov
adc
insl
mov
inc
aam
in
leave
xchg
int3
lret
pop
xor
mov
aas
adc
xorl
add
fnstenv
mov
sub
pop
jecxz
xchg
inc
movsl
pop
sub
mov
out
push
lahf
arpl
sbb
cmp
and
scas
adc
cmp
lods
mov
xchg
or
jbe
cmp
mov
inc
rep
popf
fstpt
mov
repnz
shlb
push
adc
ljmp
add
add
daa
sub
cmc
out
aas
in
adc
lea
loop
inc
sub
cmp
repz
subb
or
mov
ret
pop
sbbb
dec
adcl
adc
sub
or
imul
sbb
ss
xlat
out
pushf
jne
cmpsl
xor
ljmp
mov
bound
or
mov
ss
push
xchg
jno
iretw
adc
pushf
addl
xor
test
test
addr16
fcmovb
push
aad
lahf
xlat
lea
mov
adc
lcall
dec
mov
pop
inc
inc
call
push
jp
sub
clc
lret
in
stc
fidivrs
add
insl
test
push
mov
popa
jnp
lods
test
mov
addr16
int3
or
jns
rcl
stc
pop
inc
scas
into
sub
enter
cmp
mov
lods
add
iret
daa
mov
fistpll
cmp
pop
imul
mov
ret
cmpsl
and
std
shlb
xor
ja
push
popf
stos
inc
popa
insl
fnsave
icebp
and
lods
fldt
and
int3
push
sahf
int3
sbb
push
popa
dec
sarb
sub
lret
sbb
mull
or
loop
mov
fs
mov
xor
and
and
in
xor
rcll
jl
lock
mulb
lcall
mov
call
test
in
mulb
cs
adc
jns
jecxz
sti
scas
ljmp
test
popf
pop
xchg
lret
mov
mov
les
lcall
daa
aam
imul
adc
or
adc
add
jmp
inc
les
adc
mov
ret
addr16
jecxz
je
out
pusha
or
aaa
lret
push
lret
jmp
lds
sub
jns
push
fcomip
xor
inc
fcoml
sbb
mov
sbb
or
jmp
xchg
adc
xor
inc
lret
push
ret
cld
fdivrs
xor
scas
sbb
lret
idivb
jnp
and
iret
cmp
cmp
dec
jb
sub
orb
cmc
stc
enter
cmp
xchg
iret
mov
or
icebp
and
adc
int
pop
outsl
jmp
push
pop
inc
cli
lods
fldenv
scas
lcall
adc
and
cwtl
xor
mov
sub
and
pushf
cmp
and
das
cmpsb
stos
adc
mov
dec
mov
ror
clc
cmpsl
addr16
add
adc
mov
mov
lret
mov
jnp
daa
add
xor
lds
es
sub
adc
xchg
js
or
rcll
daa
xchg
adc
and
rcll
jno
or
inc
push
out
sbb
test
les
pop
pop
dec
testb
mov
iret
movsl
adc
inc
imul
fidivrl
cmp
es
xchg
cmp
and
negb
inc
loopne
mov
mov
aaa
fcmovnu
jns
repz
pushf
nop
mov
push
jno
xor
xor
dec
cmp
imul
rol
sub
adc
add
fs
xchg
arpl
push
decl
xor
jbe
lods
and
jle
lret
jp
dec
icebp
jbe
xor
into
adc
out
sub
mov
fimuls
sub
cmp
sbb
rorl
subb
nop
mov
cmp
pop
push
idiv
add
rcr
dec
out
call
xor
xchg
dec
sub
mov
and
and
ret
add
mov
and
pushf
jg
xor
rolb
negb
imul
add
loopne
pop
xchg
dec
mov
scas
xor
imul
sti
adc
jmp
jb
cmp
stos
add
mov
inc
int
xchg
and
shll
cld
mov
sub
call
ror
out
fstl
jne
jnp
stos
rol
cltd
clc
cmp
into
int
pop
or
xor
cmp
xchg
ficompl
out
roll
popf
repnz
ror
cld
clc
orb
popf
test
cmpsb
shlb
fs
lret
scas
jmp
push
lock
jae
aad
call
fistl
shr
popf
mov
xchg
cwtl
jg
add
inc
sub
mov
add
fidivrs
jnp
enter
in
mov
mov
or
scas
pop
and
dec
push
xor
pop
int
mov
cmpsl
popf
dec
or
push
or
cmp
ljmp
movsb
pop
mov
pop
mov
add
scas
dec
fistpl
push
jae
pop
xchg
movsb
cs
add
jl
xchg
inc
in
insl
jae
inc
pop
mov
jo
in
dec
arpl
stos
icebp
ljmp
stos
incl
cmp
loopne
iret
add
push
arpl
xchg
cmpsb
push
mov
fiaddl
xor
out
inc
cmc
mov
mov
xlat
test
or
dec
fcmovu
adc
cmp
sbb
sub
xchg
add
push
xchg
xor
rorl
mov
aad
in
fdivrp
mov
sbb
cld
xor
xor
out
xchg
pop
clc
mulb
add
push
sbb
pop
adc
and
cltd
mov
cli
ss
por
adc
test
sbb
outsb
lock
movsl
jl
adc
push
mov
out
add
pop
pop
popl
inc
cli
inc
not
push
jo
push
xor
lcall
stc
negb
jge
dec
and
repz
jae
jge
es
rcrl
sbb
insl
fldcw
sbb
and
insb
cltd
ljmp
adc
dec
inc
and
jb
pusha
fwait
sub
mov
mov
push
aad
mov
xor
cmp
mov
movsl
sub
xchg
sub
stc
fwait
sbb
aaa
mov
mov
out
data16
bound
andb
scas
outsb
aas
sub
insl
ficompl
push
mov
add
arpl
xchg
mov
mov
mov
sahf
pop
push
jb
mov
insb
or
outsl
push
loop
scas
or
jle
out
xchg
or
loop
or
outsb
mov
cmc
mov
pop
mov
mov
adcl
add
sti
scas
push
cld
or
pop
ds
push
lock
mov
fdivrl
adc
repz
sbb
mov
daa
mov
xchg
push
pop
jne,pt
pop
incb
xchg
fnstenv
popf
lret
pushf
jge
adc
ret
out
pop
mov
pop
nop
add
lret
movsl
xlat
jecxz
inc
shl
aaa
pop
dec
shll
sub
mov
das
out
daa
ss
jecxz
xlat
jo
xchg
enter
mov
and
rolb
shrb
shrb
stos
jp
imul
leave
in
push
lea
add
jg
sub
or
xchg
aam
icebp
out
movsl
fldl
and
push
rorb
jle
push
ficoml
and
popa
mov
push
sub
pushf
sbb
cli
mov
mov
movsl
inc
fwait
sub
or
lret
pop
jge
cmp
ja
adc
ljmp
test
push
or
and
outsb
cmpsb
jb
jb
xor
lea
imul
inc
push
outsb
or
cld
ret
rcrb
sub
add
push
push
pop
popf
and
iret
mov
mov
stos
and
dec
dec
push
mov
mov
inc
add
cli
push
shlb
loop
sbb
testl
inc
popf
ret
fnstenv
ret
or
inc
push
rcrl
inc
fidivs
and
scas
test
lahf
fnstsw
shlb
sub
and
shlb
pop
shll
or
cmp
sbb
imul
jg
sub
pop
jp
pop
jle
push
ret
inc
jle
repz
add
mov
push
gs
imul
stos
sub
jle
mov
sub
faddl
push
rol
jg
push
imulb
push
shrb
dec
test
in
loop
call
mov
mov
inc
inc
leave
and
sbb
sub
push
add
or
sbb
in
les
inc
psubsb
mov
lahf
dec
xchg
push
push
pandn
scas
out
and
mov
pop
test
inc
sti
je
test
sub
lds
test
test
or
mov
cwtl
mov
xorb
pushw
xchg
mov
loope
arpl
mov
sub
out
cli
push
xchg
aad
enter
xchg
sub
imul
in
inc
fdivr
mov
cwtd
sbbb
loopne
mov
insb
aas
mov
and
mov
mov
inc
lahf
xor
push
mov
mov
clc
pop
and
ljmp
movsb
push
lock
fidivrl
addr16
sti
xchg
je
xchg
jecxz
movsl
jle
stos
repz
sbb
hlt
adc
lds
aaa
pop
cmp
and
icebp
inc
outsb
in
xchg
jmp
adc
cli
add
imull
aas
sbb
and
aad
lds
jmp
mov
les
adc
insb
xlat
nop
popf
gs
pop
cli
cs
test
xchg
mov
jo
into
push
adc
cmp
cmp
inc
aaa
movsb
sbb
ret
mov
and
cli
mov
xchg
mov
into
std
push
dec
stos
jns
mov
sarl
inc
sti
mov
xor
mov
pusha
jno
aas
mov
jns
rcl
pop
pop
inc
push
addr16
rcrl
sub
mov
pop
sbb
jge
insl
fstps
add
cmp
push
pop
outsl
push
xchg
xchg
or
and
ret
and
mov
in
hlt
push
pop
or
sub
aaa
or
imul
outsb
adc
inc
fiadds
dec
inc
xchg
cmp
lahf
idivl
mov
sbb
daa
mov
in
mov
cmc
add
or
xor
add
push
jbe
mov
cmpsl
push
add
shr
push
pop
fwait
mov
pop
mov
das
fists
shll
out
nop
xchg
xchg
xor
std
mov
or
sub
mov
jp
test
int3
cltd
pop
push
dec
or
dec
and
inc
fs
int3
in
mov
in
lods
mov
xchg
mov
ss
mov
add
bound
in
mov
insb
fidivrs
cwtl
sbb
shll
cmp
pop
sti
mov
sti
push
pushf
xchg
xor
and
dec
adc
jl
mov
inc
pop
add
adc
and
push
data16
leave
into
dec
push
inc
sbb
mov
fst
xchg
lret
pop
lret
adc
mov
pop
jp
pop
xchg
ds
addl
or
roll
out
push
ss
cli
mov
aad
mov
and
mov
lods
aas
test
jbe
test
add
xor
jp
loopne
ret
sbb
shl
jae
out
jg
sbb
loop
int
scas
mov
and
aas
adc
push
inc
cmp
dec
mov
fistps
gs
ficompl
ja
sbb
hlt
lods
bound
jle
gs
push
sahf
adc
cmp
ss
xchg
es
cmp
sbb
in
xchg
push
pop
in
add
jecxz
pop
add
xor
lret
push
enter
cmp
mov
ret
jecxz
sbb
cmp
sahf
out
mov
pop
insl
in
mov
adc
mov
in
inc
push
iret
add
popl
adc
fcomip
aam
push
sahf
cltd
cmp
stos
and
jcxz
xlat
fldcw
mov
adc
push
outsl
js
jle
aas
push
adc
inc
std
arpl
into
jg
pop
loopne
andb
add
nop
cmpsl
or
out
add
rolb
lds
or
jno
cltd
adcb
sbb
lea
mov
fwait
pop
mov
repz
fcmovu
cld
add
add
push
cmp
adc
lahf
enter
sub
pop
cmp
rcrb
xchg
sti
lcall
xchg
cmp
jmp
outsl
cmp
sub
popf
loopne
push
xchg
push
aas
fnstcw
jns
pop
sub
and
xor
sub
mov
icebp
test
jbe,pt
or
mul
lds
js
mov
cltd
das
jb
add
pop
inc
fs
push
dec
in
push
aad
jle
mov
fnstsw
repnz
jl
cltd
adc
les
repz
sti
out
cwtl
dec
clc
insl
pop
test
mov
sti
add
mov
repz
mov
jecxz
push
idivb
push
push
xorb
ja
aaa
sbb
std
and
or
lcall
mov
mov
xchg
inc
cltd
jae
mov
ljmp
sahf
push
clc
push
jecxz
sti
stos
dec
xor
les
and
push
mov
imul
dec
push
dec
adc
out
mov
fisubs
xor
cld
cld
stos
subb
fcomps
jge
adc
in
xorb
mov
mov
sgdtl
fmull
cs
iret
ljmp
shlb
icebp
ret
imul
adc
ds
and
rep
mov
test
dec
xor
outsl
data16
dec
ljmp
push
ret
and
push
mov
mov
push
cmpsl
cmpb
adc
mov
pop
std
sbb
pop
outsl
call
in
enter
arpl
pop
xchg
pushf
out
idivl
cmpsl
push
js
leave
sbb
and
in
or
adc
out
lcall
icebp
rcl
gs
stos
and
daa
or
lret
inc
sbbl
sbb
rcll
aad
in
sub
adc
xor
cmp
in
cmp
or
call
mov
push
lods
daa
stc
jae
jge
out
mov
roll
out
pop
call
in
adc
leave
sub
adc
add
fisttps
sub
xor
and
xor
cwtl
cmp
xchg
mov
pop
mov
cltd
int3
mov
and
mov
adcb
adc
or
rorb
aam
add
pop
push
xchg
sbb
pop
das
loopne
fimuls
bound
and
fimuls
mov
xchg
mov
xchg
inc
push
xchg
testb
loope
cs
cmpsl
xlat
movsl
gs
jo
rcl
jmp
cltd
push
ljmp
mov
jae
insb
adc
ja
out
add
pop
mov
mov
leave
xchg
dec
adc
enter
sub
xchg
jno
and
imul
lahf
xor
jo
mov
push
icebp
and
sti
lds
mov
sub
cwtl
fwait
clc
adc
gs
push
xchg
jge
pop
push
adcl
push
repz
push
int
lods
push
dec
je
mov
mov
aas
sub
fwait
stos
cld
lcall
or
mov
test
aaa
repz
adc
in
orl
jns
lea
add
adc
fsubrl
cmp
mov
adc
adc
repnz
loope
push
data16
rcll
rolb
sub
dec
jb
in
imul
mov
stos
subb
je
lea
pop
daa
ret
jle
jo
divb
and
sub
vgetmantsd
push
lods
stos
add
inc
int
xlat
in
pop
push
mov
mov
xchg
add
inc
sahf
sbb
cmp
adc
fstpt
jmp
cld
jae
mov
adc
movsl
pop
mov
lds
mov
mov
int
out
xchg
loope
lock
in
fbstp
or
push
insb
iret
das
add
movl
inc
mov
imul
jns
scas
fdivrp
push
cmc
cmp
ret
outsb
lock
mov
mov
mov
sbb
shlb
negl
into
push
wrmsr
pusha
ficomps
push
std
mov
bound
pop
cmc
adc
fld
push
imul
xlat
push
aad
push
or
push
or
imul
pop
sbb
push
les
jl
mov
adc
push
fcmovne
lods
lcall
outsb
dec
adc
push
mov
fimuls
cwtl
mov
add
jns
xorb
in
push
and
arpl
mov
aaa
test
ds
sbb
out
xrelease
cld
cmp
or
mov
push
cld
es
mov
mov
cmp
rorl
add
stos
std
xchg
les
sti
int3
movsl
ret
imul
int3
arpl
mov
inc
lahf
insb
push
sub
push
popa
jle
std
call
cmp
jecxz
pop
fisubl
add
xchg
insb
outsb
fistl
sbb
mov
jbe
es
leave
cmp
aam
lds
xchg
cmp
and
xor
mov
push
fldt
notb
aaa
mov
lret
mov
sub
pop
xchg
ret
xor
or
pusha
mov
scas
sub
dec
ja
xchg
xchg
and
jb
lock
pop
movsb
cli
dec
push
cmp
sbb
out
stos
ficompl
out
enter
pushf
rorl
shl
cmp
cmp
mov
push
xchg
icebp
jbe
outsb
jno
xor
into
test
adc
inc
insl
dec
xor
ret
insl
in
add
ljmp
repnz
push
fnsave
fsubl
fsincos
lret
push
fidivrs
fcoms
xchg
fldl2e
test
cmp
push
str
dec
sbb
and
xor
ror
dec
cltd
mov
cmp
lock
xchg
int
mov
inc
mov
clc
pop
nop
mov
or
sti
push
push
jmp
ljmp
inc
scas
call
xor
push
movzwl
jne
dec
xchg
clc
dec
jge
or
ljmp
push
ljmp
imul
sbb
fistps
dec
sbb
loopne
pop
insb
mov
aad
xchg
cmpb
xchg
sbb
sub
cld
jmp
sbb
jbe
imul
pop
scas
and
outsb
pop
insb
or
cmp
lahf
mov
fdivr
xchg
jo
dec
lret
sbbl
xor
or
and
mov
rcl
cli
roll
int3
fstpt
lods
xor
inc
mov
xor
inc
dec
ror
cmp
dec
into
mov
sbb
jbe
mov
in
sbb
loopne
dec
adc
sub
je
out
jmp
sbb
pop
dec
jnp
imul
in
xor
pop
fstps
enter
enter
and
icebp
sbb
pop
sub
ja
out
or
ss
push
iret
adc
sub
cmp
arpl
test
inc
fdivs
loopne
inc
hlt
pop
test
je
pop
push
cld
pusha
and
test
dec
lock
xchg
sarl
push
cli
insb
xor
outsl
push
jmp
insb
inc
pushf
dec
call
pcmpeqd
fisttpll
mov
fsts
pop
shrb
mov
mov
test
inc
fadds
mov
sbb
inc
sub
push
into
xchg
cmp
fisubrs
lahf
pop
jge
jl
jecxz
xchg
push
ss
mov
test
pop
pushf
scas
cld
popf
dec
lock
test
mov
and
ficompl
icebp
mov
pop
inc
xor
pop
daa
inc
stos
stos
push
pop
in
lods
mov
inc
insl
adc
aam
push
lcall
inc
xchg
cmp
mov
or
insl
sahf
sbb
ja
sbb
mov
dec
mov
cmpsl
pop
fstl
stc
shrl
xor
adc
sbb
mov
arpl
pop
iret
lea
lret
xorb
movsl
mov
dec
xchg
std
fidivrs
push
inc
shlb
mov
aam
pop
sbb
jno
cmpsl
bound
pop
loopne
push
aad
mov
lret
xor
adc
cld
ret
out
lcall
ret
in
mov
hlt
cmp
shrl
mov
into
mov
scas
cmp
lds
sbb
mov
mov
sub
sub
ja
rcrb
scas
std
jae
xor
push
loopnew
enter
jbe
push
pop
lret
add
sbb
outsb
roll
and
inc
mov
test
sub
cmp
outsl
ret
xor
stos
and
sbb
insb
movsl
les
pop
out
or
popf
cmpsl
mov
mov
mov
lret
push
jae
pushl
jno
sub
mov
push
xchg
inc
and
dec
sbb
out
sub
and
xchg
sub
ret
adc
cltd
push
xor
add
std
xchg
cmp
jbe
rcr
xchg
lcall
dec
and
lock
push
sbbb
push
or
ljmp
fst
test
push
mov
add
nop
icebp
and
out
adc
xor
lret
pop
sti
adc
daa
push
and
loop
mov
dec
cmpsl
repnz
popa
repnz
in
jae
scas
xor
pop
sbb
fmuls
lcall
mov
pusha
scas
jo
jno
or
push
shrb
aas
cmpb
nop
movsb
repnz
jns
dec
inc
mov
dec
pop
in
fmuls
pusha
subb
ret
jecxz
jecxz
cld
and
dec
aas
pusha
in
fwait
dec
out
fs
and
and
xor
fisttps
push
push
pop
hlt
notl
adc
xchg
adc
push
mov
shrb
push
ret
push
fldcw
mov
cmp
jp
int3
aad
dec
test
xchg
mov
in
mov
xchg
mov
push
sbb
and
push
fistpl
mov
sahf
inc
and
jb
add
push
fcomps
adc
cmp
outsl
cld
mov
mov
sub
out
ja
mov
pop
adc
add
push
std
ljmp
imul
hlt
and
add
xchg
push
stos
xchg
adc
mov
fcoml
es
pop
dec
jge
or
out
push
test
inc
cli
test
inc
test
fwait
adc
enter
jne
dec
enter
mov
jne
pop
fadd
xchg
cmpsb
mov
loope
ja
dec
daa
shrb
cs
inc
cmp
xchg
ja
clc
jnp
repnz
repz
xchg
pop
mov
cmp
pop
daa
stc
addr16
clc
sbb
aaa
jecxz
push
mov
push
dec
or
cs
in
popf
lods
mov
sub
jae
fisubrl
aaa
icebp
out
xchg
insl
aam
jno
fcomp
xor
idivb
inc
les
repz
jmp
jno
es
xchg
pop
push
jl
push
insl
push
mov
lcall
pop
inc
cmp
mov
cmpl
mov
arpl
dec
jno
pop
enter
xchg
ret
pop
sti
aaa
call
ja
pop
repz
mov
add
fidivrs
fistpl
mov
mov
or
test
xchg
sub
push
add
xchg
jg
dec
out
add
rcll
sti
adc
gs
gs
das
testb
ret
pop
pop
dec
std
mov
iret
scas
cld
das
ret
mov
push
bound
pusha
repz
mov
pop
adc
arpl
scas
sbb
movsl
jecxz
and
test
or
cmpsl
jp
jl
ljmp
sbb
nop
jmp
daa
loop
movsl
mov
mov
insb
cwtl
lret
mov
sbb
iret
sub
cmp
push
fidivrs
int
sub
push
sbb
in
ret
cmp
or
sub
add
pop
inc
in
add
daa
dec
push
mov
das
adc
pop
mov
lret
mov
popf
rcrb
scas
push
stc
hlt
adc
mov
cltd
jecxz
imul
nop
aad
stc
mov
stos
rcrl
repnz
jne
jno
jb
cmpsb
xchg
jecxz
insl
arpl
pop
sbb
sbb
and
cmp
xchg
ljmp
mov
lahf
mov
insl
inc
jge
push
in
shlb
sub
fidivs
and
adc
inc
cmp
cld
loop
in
or
icebp
hlt
cld
xor
test
jle
mov
mov
das
pop
mov
icebp
into
popa
adc
dec
xor
push
push
add
popf
lahf
out
ror
jns
jecxz
cmp
sub
jb
and
lret
in
add
xchg
lret
inc
loopne
stos
jmp
push
test
jmp
adc
std
scas
mov
out
sbb
movsb
insb
jo
inc
xlat
outsl
movsb
xchg
movsb
xchg
imul
aad
std
outsb
loop
sti
mov
pushf
test
test
pop
ss
xor
or
cli
inc
dec
push
fildll
xchg
mov
enter
out
sbb
jno
xchg
add
or
jb
jae
jmp
push
xchg
sbb
pop
scas
jg
in
mov
xor
stos
mov
in
out
push
in
push
mov
mov
dec
loope
ss
aad
notb
pushf
call
rcll
sub
cs
sub
rcrl
jb
ljmp
mov
fcoms
std
mov
aam
das
popf
jo
cs
rclb
fldl
pusha
cmp
add
aam
xchg
das
loopne
fildl
xor
js
and
testl
ret
inc
sbb
pop
pop
mov
cli
xchg
icebp
or
xorb
addr16
jl
popf
push
imul
mov
pop
sub
and
clc
cmp
lret
in
js
xor
mov
cmp
loopne
dec
inc
mov
jo
xor
fwait
xchg
cmpsb
push
jmp
add
xchg
sub
inc
out
std
pop
inc
cmp
movsl
lea
or
aam
aas
fyl2x
mov
rorb
leave
lret
xchg
incl
test
cmp
mov
inc
mov
add
cltd
inc
pop
sub
icebp
xor
push
in
iret
jl
dec
out
xchg
xchg
es
scas
enter
imul
mov
divl
int
push
jnp
and
sbb
outsb
je
pop
pop
test
xor
mov
ret
jno
mov
or
aam
sahf
push
add
or
jg
iret
scas
mov
and
inc
jo
aam
xor
jbe
pop
jmp
dec
and
mov
lahf
call
add
dec
fnstsw
mov
mov
jae
dec
testl
add
lock
push
outsb
mov
cmp
mov
inc
jae
scas
and
jno
cwtl
test
push
dec
jno
mov
push
sbb
add
cs
in
or
inc
mov
jbe
not
add
bound
imul
and
sbb
insl
or
sub
aaa
or
stos
dec
clc
out
rcll
pop
arpl
call
fistpl
loope
mov
adc
xor
cmp
add
pop
pop
insb
movsl
cmpsl
and
outsb
ficomps
popa
lret
xor
and
jge
fdiv
add
sub
cmpsl
aad
scas
dec
xchg
insl
xor
arpl
xchg
pop
pop
cmp
aas
sbb
fidivrs
jp
scas
rclb
jno
sub
xor
cmp
mov
leave
icebp
cmc
cmp
test
sbb
std
lea
push
test
lcall
into
test
aaa
negl
pextrw
stos
test
lret
sahf
mov
in
test
push
and
stc
adc
push
mov
fnstenv
addr16
pop
in
mov
jge
pop
popf
jae
scas
pop
cmp
dec
les
mov
push
outsl
cs
push
adc
mov
mov
mov
mov
je
cmp
push
rcl
call
insb
xchg
or
inc
mov
push
test
mov
popf
jecxz
or
jo
mov
and
rcrb
cs
cs
shll
jns
or
enter
cmpsb
aam
inc
push
test
sbb
test
push
mov
aaa
inc
cmpsb
push
movb
cld
pop
scas
cmc
mov
inc
pop
mov
sub
xchg
mov
incb
inc
push
loope
ja
and
cli
xor
inc
sub
out
xlat
push
or
pop
scas
push
test
pop
push
cmp
sub
lods
scas
fcmovne
and
cli
xlat
shrb
xchg
and
cmp
inc
pop
js
xchg
lcall
subl
aam
adc
stc
scas
xlat
aam
bound
out
jp
mov
xchg
stc
sub
sub
push
xchg
jbe
dec
imul
mov
psrld
sbbl
mov
int3
pop
fdivl
lea
dec
dec
hlt
repz
adc
leave
orl
in
iret
mov
sbb
sub
lds
aas
mov
mov
int
cld
mov
test
movsb
push
dec
pop
sahf
cmpsb
adc
adc
pop
xor
push
fidivrs
stos
pusha
push
fnstsw
test
ret
add
ret
xchg
xchg
loop
out
arpl
iret
or
and
xchg
fwait
les
cmpsl
idivb
cmc
pop
mov
xor
inc
lock
popa
leave
in
mov
cmpsb
aad
pop
mov
test
pop
fistpl
inc
sub
add
push
lahf
sbb
dec
orb
mov
mov
add
cmp
mov
fsubs
out
iret
lock
test
iret
call
cmp
jno
ja
fdivrl
das
and
popa
xchg
add
mov
rcrb
cmpb
es
std
push
dec
es
imul
xchg
push
pop
std
add
pop
fnsave
dec
push
test
mov
jae
mov
nop
repnz
mov
jmp
pop
pop
pop
shll
push
orl
or
dec
sbb
dec
mov
adcb
int3
xchg
mov
enter
xor
das
addl
into
jns
lods
aad
pop
and
jl
outsb
inc
dec
icebp
fsubl
iret
pushf
mov
push
sub
mov
ljmp
adc
xchg
out
pop
cmp
rclb
stos
test
pushf
out
shrl
jb
sub
pop
shlb
lea
mov
loopne
fstl
test
add
ss
idivb
pop
and
push
bound
cli
imul
xchg
dec
sub
pushf
sub
adc
aas
and
push
mov
add
xchg
lea
stc
iret
cmp
popf
inc
in
mov
inc
fnsave
jp
cmp
xchg
aaa
pop
pop
cmp
or
dec
mov
fcmovu
and
push
call
cmp
pop
and
mov
dec
decb
jb
clc
push
sahf
sbb
clc
inc
scas
dec
pop
inc
mov
and
and
scas
test
das
cmp
push
sbb
cmp
in
in
xor
std
daa
push
lret
fdivr
fdivrl
iret
adc
std
and
push
fdivrs
jge
mov
dec
call
mov
xchg
push
int
shrl
fstpt
mov
jne
or
imul
mov
inc
mov
sub
xor
rolb
cwtl
fisttpll
cltd
sub
fwait
sarb
push
pop
insl
mov
mov
jle
mov
insl
out
sbb
and
xor
sbbb
pop
call
out
movsl
lock
imul
pop
test
xor
iret
jle
jg
subl
sbb
push
adc
ret
insb
sub
sub
jb
sbb
out
mov
cmp
mov
js
mov
ret
pop
ret
mov
xorb
and
enter
xlat
add
dec
outsl
repnz
scas
in
daa
rcl
ret
dec
dec
orl
test
and
cmp
mov
jge
out
mov
into
psllq
ljmp
xor
idiv
fisttpll
jb
es
fwait
xchg
mov
pop
je
mov
fsubrs
mov
shrl
add
adc
test
pop
add
push
dec
pop
sar
ret
push
cmpsl
cwtl
mov
mov
pop
ja
into
xchg
mov
jns
fistpl
dec
mov
mov
inc
xchg
fcomp
jb
xchg
out
or
mov
jge
loopne,pt
enter
gs
cmp
adc
cmp
lret
out
out
adc
mov
and
xchg
cmpb
push
dec
pop
mov
add
or
mov
jp
jo
pop
int
ljmp
sbb
jae
and
push
mov
sub
sarl
ss
fistpl
inc
dec
push
xor
push
dec
fs
aaa
das
jns
arpl
aaa
push
push
xchg
ret
repnz
sahf
out
dec
out
lcall
push
push
jno
fnstsw
stos
xchg
jmp
and
stos
jns
sbb
std
push
out
push
xorl
jmp
pop
mov
mov
arpl
cmc
jbe
xor
xorl
dec
cmpsl
mov
repz
mov
outsl
popa
testb
das
vmovaps
pop
repnz
sub
lods
pop
adc
out
mov
or
xchg
test
pop
xchg
sub
add
cs
mov
xor
movsb
xchg
repz
cs
xchg
jmp
ds
inc
sbb
scas
scas
xchg
jno
imul
rclb
jg
hlt
or
ljmp
xchg
mov
mov
or
xor
mov
and
popa
lods
jo
std
nop
fdivrs
and
adc
push
dec
add
sub
addb
dec
mov
adc
inc
ljmp
insl
int3
cmpsb
mov
les
fldenv
mov
outsb
or
outsb
bound
stos
aas
mov
daa
ja
push
xchg
cwtl
pop
xchg
movsl
cmp
jle
or
out
rcr
stos
and
in
sbb
sbb
sbbb
movsl
es
or
xchg
push
lods
inc
aas
stos
stos
sub
jecxz
mov
lock
in
add
cmpsl
mov
sub
mov
jl
lret
add
pop
jmp
movsb
ret
push
xor
cli
jge
outsb
lretw
gs
mov
lret
cmp
adc
pop
inc
adc
push
jb
jbe
adc
fcos
das
xlat
cmp
pop
jmp
int
sti
xor
loop
mov
fstl
jne
push
ret
cmpsb
out
nop
pop
cli
mov
and
addr16
cmp
pop
inc
clc
xlat
stc
daa
cli
mov
cmp
movsl
mov
jbe
leave
shrb
aas
xor
in
mov
mov
sbb
mov
inc
jecxz
xchg
out
loope
sub
test
movsl
mov
cmp
and
dec
xchg
stos
and
xor
pop
sub
pop
jl
mov
xor
push
ljmp
pop
push
dec
xchg
in
mov
dec
mov
popf
stos
adc
ds
ret
lods
add
scas
ret
in
outsl
or
lcall
shll
fiaddl
adc
iret
lds
xchg
idiv
lret
jg,pn
dec
out
jo
test
cmovb
aad
mov
adc
sahf
add
xchg
xchg
sbb
stos
sub
enter
fldcw
push
cmpsb
lods
scas
fmull
test
inc
call
imul
out
les
cmp
leave
clc
or
push
scas
rcrb
add
ds
stos
or
dec
stc
cmp
movsl
pop
in
enter
lods
in
sbb
in
inc
push
iret
push
loopne
jmp
or
push
jo
aaa
movsb
std
pop
push
sbb
pop
ret
sbb
sbb
add
sub
bound
xchg
lods
sbb
or
aaa
scas
out
shlb
addl
rcll
adc
sarb
mov
inc
mov
push
imul
call
outsb
jne
mov
dec
sahf
out
cltd
clc
or
cmpb
cmp
ss
adc
aaa
das
cmp
mov
iret
push
xchg
sbb
popa
pop
mov
inc
or
mov
pushf
inc
popf
jecxz
jno
mov
jae
sub
in
dec
inc
cltd
pop
movsb
jmp
loope
fst
sub
and
xchg
cmp
fstps
int3
int3
push
ds
mov
stos
lock
mov
gs
cld
xchg
sbb
xchg
mov
mov
cmpsl
enter
repz
fsts
add
icebp
lret
daa
dec
imul
out
cmp
call
loopne
fadd
mov
add
cmp
xchg
push
sub
push
jmp
push
scas
jecxz
mov
pop
test
inc
sar
ds
sub
pop
js
jbe
pop
inc
daa
shlb
cwtl
sbb
adc
pop
inc
dec
aam
in
mov
aam
fs
out
xor
pop
pop
push
add
shrl
out
rcrl
int3
add
sbb
lock
add
dec
or
insb
cmp
inc
lret
outsl
test
mov
pop
cmp
jmp
outsb
add
push
xchg
mov
sti
cmp
pop
int3
sub
mov
fnstcw
or
push
inc
dec
stos
xor
xorb
clc
mov
aas
mov
mov
or
pop
xlat
and
jbe
dec
sahf
push
leave
dec
and
pop
push
stos
or
aam
gs
das
stc
in
lret
mov
push
fwait
adc
pop
sbbb
fsubs
cmp
cmpb
push
jl
mov
mov
pop
sub
imul
cmp
data16
lods
dec
aam
cltd
cmp
and
subb
mov
xor
sbb
and
xchg
hlt
lds
mov
pop
xor
cs
lods
inc
push
and
scas
xchg
and
and
mov
in
ljmp
jp
pop
cs
mov
insb
xor
pop
mov
push
mov
cmp
xorb
pushl
xor
add
lret
adc
jns
stos
jns
inc
pop
sub
sbb
data16
jge
jl
and
dec
pop
mov
cld
and
or
mov
xor
push
mov
mov
sub
sub
mov
sbb
scas
adc
mov
imul
in
out
data16
sbb
es
cmp
pop
ret
xchg
cmp
inc
hlt
adc
cmp
mov
xor
lret
pop
add
xor
inc
out
test
cmpsb
jle
scas
in
adc
cmp
add
imul
ljmp
lods
add
jmp
int
jbe
pop
shlw
fnstenv
std
push
push
pop
inc
cwtl
aas
repnz
leave
sub
or
add
mov
jne
sub
mov
adc
jbe
lret
sub
xor
arpl
or
ret
jno
push
push
sub
inc
lcall
jae
adc
aad
sbb
push
ljmp
call
mov
divl
xor
cmp
push
push
gs
out
ljmp
pop
or
cwtl
add
or
cmp
xchg
jns
mov
inc
ret
inc
push
stc
xchg
pushf
cmp
in
test
inc
sar
xchg
inc
pop
imul
stos
rclb
mov
cmp
scas
pusha
cmp
dec
xor
cli
sub
xchg
or
or
xor
mov
test
mov
push
shlb
xlat
adc
fisttpll
sub
outsl
push
xchg
add
dec
mov
stos
mov
lahf
inc
sbb
insb
in
dec
cmpsl
daa
lock
into
lcall
sarl
les
fsts
mov
sub
mov
lods
int3
lcall
or
ds
jmp
repz
out
cld
cmp
mov
jle
xlat
test
enter
pop
and
in
push
push
lock
jo
aas
loope
push
sbb
mov
push
bound
sahf
sbb
adc
stos
mov
lock
pushf
pop
cmpb
cltd
mov
inc
adc
shrb
xchg
mov
outsl
push
mov
in
leave
addr16
xchg
stos
adc
sahf
cmp
xchg
cmc
mov
jb
sub
mov
cmpsb
outsb
add
mov
pop
mov
mov
add
jne
adc
xorl
lds
mov
mov
xlat
je
xchg
mov
inc
into
mov
mov
pop
lea
or
push
sub
imul
push
addr16
scas
movsl
mov
inc
ss
movsl
mov
or
inc
aam
adc
sarb
ljmp
out
test
int3
enter
lret
into
mov
xor
jmp
jge
in
inc
jecxz
das
out
psllw
dec
sbb
adc
cmp
xchg
push
fists
aam
hlt
push
or
loope
cltd
xchg
inc
cmp
lods
and
ljmp
scas
bound
lods
sub
push
cmp
addr16
jmp
cmpsb
cmpsl
daa
pop
lods
cmp
pop
sub
fbld
fbld
sbb
xchg
inc
sub
dec
jo
dec
and
pushf
shl
push
daa
xchg
pop
mov
mov
movsl
adc
cmp
jb
push
lea
icebp
mov
repz
cmp
test
or
mov
inc
das
test
stos
fs
mov
mov
lret
shrb
or
mov
enter
mov
fmul
mov
mov
dec
sti
jmp
dec
sarb
mov
sub
and
inc
cld
bound
mov
mov
pop
movsl
daa
push
and
pop
jecxz
aas
fildll
cli
les
inc
cmp
push
out
xchg
cltd
dec
adc
hlt
jge
add
inc
outsl
and
enter
inc
mov
outsb
lods
inc
out
nop
popa
fs
fstp
mov
mov
and
adc
inc
loopne
mov
mov
jle
imul
cmpsl
adcl
in
or
popa
orb
add
jbe
insb
adc
cmp
fimuls
in
mov
outsb
clc
bnd
in
scas
sub
jno
pop
cmp
xchg
jb
sbb
sub
pop
aad
lods
inc
ficoml
fimuls
jg
jo
out
mov
lea
sub
and
mov
mov
mov
ret
jp
sarl
mov
sarl
xchg
lret
or
out
cmpsl
popa
inc
dec
cmc
and
lret
mov
mov
mov
pop
mov
jg
dec
cmpsb
mov
insl
push
repz
insl
sbb
mov
cltd
push
fdivrs
rolb
inc
loopne,pt
addr16
int3
sbb
mov
scas
dec
cmp
pop
out
stos
icebp
add
lds
mov
xor
ret
and
xor
mov
call
mov
cltd
sbb
ficoms
ret
add
add
cmpsl
lret
xchg
xor
sbb
shrl
jno
jno
rcll
xor
in
push
call
dec
mov
stos
xor
repnz
cltd
arpl
orl
push
leave
and
inc
mov
iret
js
and
sbb
out
sti
push
pop
mov
mov
stc
or
lock
repnz
and
cli
mov
aam
ss
mov
sub
add
sub
lret
cmp
xor
pop
xchg
mov
mov
mov
push
mov
sub
cmpsl
mov
fistpl
mov
push
pop
xchg
mov
mov
jo
daa
cmp
lcall
push
testl
imul
shlb
and
push
mov
jo
ljmp
push
add
cmp
mov
imul
out
pusha
int
gs
mov
push
pop
leave
mov
push
jnp
sbb
pop
inc
iret
or
xor
pop
std
push
or
aad
ljmp
push
popf
xor
and
lods
pop
bound
mov
cltd
addr16
push
cmp
pop
cltd
pop
add
imul
mov
push
dec
inc
push
int
sbb
mul
inc
push
das
push
inc
pop
and
mov
jne
je
std
jbe
pop
xor
add
and
cmp
pop
dec
test
call
sti
add
mov
pushf
lods
adc
adc
jno
loopne
iret
pop
mov
ljmp
pop
out
loop
cltd
xor
mov
xchg
call
fsubr
mov
adc
pop
push
push
test
sub
mov
xor
out
jae
jnp
ss
out
pusha
js
ljmp
xchg
ds
lret
cltd
cli
push
xor
lods
inc
jno
sahf
jecxz
sar
jns
enter
arpl
push
nop
fimuls
push
shll
imul
cmp
fldenv
stos
xor
or
xor
inc
stc
sub
mov
negl
in
dec
adc
scas
lods
xor
mov
add
idiv
xchg
popa
icebp
pop
pop
mov
pop
sbb
jno
repz
test
add
scas
xchg
jne
into
std
push
pop
adc
jmp
cmc
movl
push
push
sarb
mov
mov
add
xor
out
jp
mov
mov
fwait
addr16
push
sti
pop
mov
inc
popf
int3
push
or
adc
adc
mov
mov
mull
and
loop
test
mov
sar
xor
fs
xor
mov
lock
xlat
xlat
sbb
push
scas
xchg
jg
test
pop
sub
inc
adc
xchg
pop
pop
sarl
sbb
mov
enter
flds
sahf
and
imul
shl
or
sub
xor
inc
popf
push
xchg
mov
mov
xorb
pop
lcall
cmp
pop
orl
stc
sub
into
int3
ret
xor
push
push
inc
dec
movsl
inc
adc
scas
push
or
rsm
xor
add
jmp
insl
lcall
fstpt
lahf
aaa
ret
adc
arpl
and
push
xor
out
frstor
lea
pop
xor
sub
and
or
xchg
adc
or
shrb
mov
fisubs
and
mov
stc
ss
fsubl
or
push
push
xchg
pop
sbb
movsb
test
dec
jne
out
cmpsb
movsl
dec
call
sbb
scas
fistps
cmpsl
sbb
into
jp
pusha
data16
sbb
dec
mov
or
daa
cli
pop
and
jbe
cmp
sti
jnp
pop
pop
xchg
cmc
test
aam
jmp
push
push
addb
fildl
xor
cld
add
je
pushf
subb
std
and
mov
lods
sbb
dec
and
jnp
xchg
popl
push
pop
xchg
xor
jae
push
aas
mov
xchg
dec
dec
sub
mov
enter
call
add
mov
or
push
pop
cld
pminub
jl
out
je
aad
cmp
push
je
mov
sbb
les
jecxz
pop
fidivs
xor
icebp
sbb
vfrczsd
inc
xor
add
xchg
aaa
jg
and
cmp
xor
test
and
cmpsb
push
adc
jns
adc
leave
outsl
xchg
mov
loopne
mov
xchg
mov
and
mov
out
jbe
lods
push
sub
inc
push
xor
mov
mov
fcmove
cmp
push
xor
xchg
mov
and
je
adc
pushf
push
mov
sbb
icebp
xchg
pop
mov
cld
sbb
xor
mov
aas
pop
lds
scas
sahf
inc
addl
push
sarl
lods
out
lret
shll
sub
int
rorl
outsl
cmp
xchg
jno
xor
subl
in
mov
mov
mov
jle
cmp
xor
outsl
jo
cmp
mov
scas
jecxz
sarl
xchg
popf
repnz
sub
fldcw
lcall
cld
rcrb
add
mov
jb
std
rorl
outsb
loope
add
insb
cs
stos
imul
push
push
pop
lret
movsl
repz
pop
inc
push
and
add
dec
sbb
std
add
rorb
cwtl
sahf
mov
sub
sub
cmpsb
cmc
mov
jno
divb
lret
adc
add
mov
fistpl
fimuls
iret
rclb
mov
jnp
aas
out
cmp
dec
mov
bound
or
filds
xchg
mov
gs
pushw
int
push
sub
sbb
lods
and
sbb
push
loope
mov
out
fs
lea
or
jns
es
mov
andb
sub
fwait
insl
push
stos
cmc
out
fbld
adc
inc
out
out
ljmp
pop
pop
ret
icebp
fcmovne
in
ret
inc
rcl
idivb
cmp
dec
cmova
mov
cmc
jns
leave
xor
push
xorl
jo
sub
iret
or
cmpsb
cmc
push
or
jl
sti
mov
cltd
mov
test
mov
lea
lods
pop
push
shrb
loopne
jmp
clc
push
push
dec
cmp
imul
push
push
popf
addr16
out
dec
dec
push
stos
loopne
aad
lret
pop
dec
dec
fisubrl
jns
pusha
xor
stos
stos
push
inc
stos
std
mov
subl
into
lcall
scas
xor
inc
adc
das
cmpb
mov
std
in
push
add
add
add
and
test
add
sbb
jnp
fidivl
jle
int
das
std
stos
xchg
and
loopne
leave
fwait
mov
ret
jnp
es
mov
add
cmp
xchg
push
int3
repnz
sbb
mov
mov
dec
push
dec
inc
xchg
imul
jbe
pop
inc
addr16
outsb
icebp
sarb
inc
inc
jnp
push
ss
into
mov
mov
jne
sbb
out
push
push
pushf
aas
pop
and
mov
push
jle
pop
sbb
pushf
cld
xchg
shrb
sub
je
fldl
mov
add
xchg
jno
cmp
popa
scas
in
cmpsb
stos
mov
or
sbb
outsl
movsb
push
xchg
sub
jmp
pop
movsb
lods
out
jae
ret
aas
push
scas
out
in
add
mov
test
pusha
jge
movsb
andl
out
mov
dec
add
xchg
imul
cwtl
fidivrs
dec
mov
in
fsubs
mov
inc
das
pop
sub
lods
push
push
inc
add
mov
sub
sbb
push
dec
out
call
pop
outsb
pop
in
roll
push
loopne
push
sub
dec
mov
jns
sub
cmp
stos
ret
inc
xchg
cmp
mov
sarb
rorl
jbe
mov
push
outsb
je
pop
add
addr16
mov
mov
ljmp
inc
int3
and
mov
lahf
jmp
dec
aam
dec
pop
shll
sub
bound
lea
mov
dec
xchg
or
pop
popf
je
adc
mov
cld
imul
stos
mov
outsb
or
mov
int3
in
xchg
mov
fwait
sbb
mov
jl
fisubs
ss
push
insb
gs
pop
jg
jl
rorb
cmpsb
sbb
adc
mov
jp
test
pop
mov
lods
jge
insb
or
out
js
gs
frstor
cwtl
cmp
mov
mov
jle
add
xchg
push
cmp
dec
pop
mov
jp
jp
sahf
lock
jge
sub
out
jae
sbb
add
loopne
pop
push
aam
in
enter
sub
xor
mov
sbb
push
stc
scas
push
popa
inc
aam
cmp
xchg
inc
dec
sbb
pop
sbb
mov
pop
adc
nop
and
jp
popf
pop
or
pushf
mov
addr16
mov
test
stos
in
lock
pushl
sub
js
or
xchg
mov
dec
fstps
arpl
xchg
sub
mov
into
shl
inc
fisubl
push
xchg
sarl
clc
repz
xchg
aad
subl
nop
pop
outsl
sub
and
sarl
sbb
pusha
sbb
bound
imul
pop
aaa
sbb
outsl
adc
adc
aad
dec
scas
mov
insb
fcomps
xor
ds
in
pop
cli
fcomip
mov
outsl
outsl
xor
pop
insl
nop
call
sub
out
ret
mov
std
shll
stc
push
out
sbb
imul
fimull
jns,pt
and
popf
notl
jb
fsubp
or
push
mov
xchg
xchg
and
add
xchg
push
insb
mov
mov
mov
inc
js
scas
call
faddp
mov
int3
lock
sub
inc
add
jmp
loop
mov
jno
adc
andl
daa
ljmp
data16
ret
mov
sub
jp
push
notb
xlat
sbb
lock
mov
shrb
pop
lahf
sub
mov
inc
cmc
or
jns
dec
mov
mov
icebp
jb
pop
rorl
ja
add
or
stos
outsl
int
and
loop
fnstenv
mov
cld
bound
in
dec
mov
jne
bound
sbb
cmp
push
mov
push
push
rclb
lahf
neg
or
rclb
inc
mov
sub
cld
jae
popa
dec
movsl
mov
cmp
push
or
push
xlat
or
pop
pop
cmpb
add
mov
iret
cli
cli
scas
push
pop
in
dec
repz
ficompl
daa
cmp
inc
ja
mov
fwait
push
jmp
lret
in
pop
scas
repz
xchg
lcall
lcall
jo
aaa
movhps
sarl
xchg
add
pushf
ljmp
pop
ljmp
push
mov
int
or
fidivs
mov
and
jno
in
mov
push
push
xchg
jns
ret
xchg
inc
leave
add
push
cmp
jmp
sub
push
shlb
ror
xchg
push
sub
fisubs
packuswb
sbb
mov
push
fwait
arpl
adc
lods
push
pop
lcall
push
stos
call
mull
divb
cli
push
pop
ja
outsb
mov
mov
mov
mov
clc
insb
xor
lret
and
hlt
cwtl
pop
ror
push
adc
add
adc
inc
jne
push
mov
clc
xchg
push
jg
test
ds
pop
cmp
sub
test
addb
cmp
mov
addr16
fstpt
pop
fbstp
mov
dec
add
outsl
mov
dec
xchg
aam
addb
sub
imul
jle
and
xor
mov
imul
mov
ds
repnz
and
jb
mov
jnp
incl
aam
rclb
daa
mov
sub
sub
fmuls
pusha
xchg
push
sub
push
xchg
mov
inc
shlb
mov
les
inc
inc
xchg
les
inc
push
push
dec
pop
jbe
and
xchg
adc
mov
mov
and
inc
pop
out
mov
mov
jo
lea
and
jns
movsb
push
lret
adc
adc
cmp
jg
lods
push
test
jo
or
sub
je
adc
int
mov
jmp
xor
add
mov
sbb
cmpb
lcall
ljmp
push
lcall
test
idivb
rorl
add
sbbl
cltd
pop
imul
lods
push
hlt
xchg
fldcw
mov
outsl
dec
outsl
xchg
dec
sarl
or
iret
inc
jo
xchg
insl
jnp
punpckldq
aam
sahf
rorl
imul
push
mov
push
lods
push
call
push
shlb
mov
sahf
mov
je
insb
rorl
mov
jmp
cmovo
inc
adc
loope
aad
xor
jno
push
lahf
sub
cmc
push
mov
lds
andl
sbb
cmp
imul
jbe
fwait
stos
ds
mov
mov
mov
sarb
jo
jecxz
dec
mov
adc
and
movsb
cmp
bswap
ljmp
mov
movsl
ss
outsl
mov
sub
or
cs
inc
in
and
adc
clc
xchg
cmp
data16
pop
sub
mov
and
inc
push
ljmp
jg
pop
mov
in
cmc
scas
lcall
or
mov
adc
es
xchg
mov
sbb
dec
jp
cld
lea
das
or
sbb
ja
mov
adc
roll
push
repnz
cmp
shll
loop
fisttpll
popa
loopne
lea
cwtl
je
fdivrs
xor
mov
les
stc
mov
lret
adc
ds
jecxz
mov
sub
inc
cmp
cmpsb
test
cld
out
dec
cltd
popf
mov
mov
movsl
hlt
mov
inc
pushf
insl
inc
addr16
fidivl
notl
add
sbb
lahf
aad
js
xchg
sbb
ja
ja
addr16
mov
outsl
cmp
hlt
pop
shlb
mov
mov
out
lds
and
adcl
push
mov
stos
std
xchg
push
loopne
out
fst
in
test
xchg
sti
cli
mov
rol
push
jnp
call
mov
cmc
pop
movb
das
into
sbb
mov
mov
enter
mov
dec
push
jmp
icebp
loope
push
out
pop
mov
xor
mov
out
pop
xor
fs
sbb
shrb
push
sbb
pushf
mov
mov
jmp
xor
jo
cmpsb
jge
mov
addr16
or
inc
or
enter
jecxz
mov
jmp
in
mov
xor
add
ja
ret
inc
aad
lds
mov
sbb
jle
add
out
movsl
jbe
xor
out
jge
push
push
jo
mov
push
mov
mov
cmp
ss
and
cs
popf
js
dec
out
jge
ret
mov
mov
addr16
add
loope
sahf
sbb
repz
sbbb
addr16
mov
bound
jl
sarb
loop
inc
lcall
inc
daa
mov
cmp
add
test
stos
rcrl
adc
roll
mov
outsb
enter
sarb
fidivl
fildll
push
cmc
push
stos
repz
jb
and
or
das
mov
jle
jne
in
outsb
and
stc
cmp
test
in
out
cmp
adc
xchg
cmc
mov
push
in
scas
out
xchg
mov
data16
xlat
sbbb
cmc
adc
or
lret
mov
adc
add
inc
dec
pop
adc
cs
cmc
mov
aas
push
stos
popf
jae
cwtl
shl
out
fidivs
cmc
xor
ja
mov
ret
cs
xchg
fisubl
dec
xor
fsubs
fsts
push
lods
bound
rcl
xlat
shrl
jmp
iret
xchg
ret
sbb
and
sar
stos
subb
lods
out
pop
jg
and
shrb
pop
dec
inc
testb
jo
arpl
cmpsl
xor
cmp
jno
loop
lds
pop
fdivrs
fcmovu
add
ret
clc
mov
or
push
and
adc
mov
mov
stc
mov
inc
shl
dec
pop
or
movsb
mov
roll
push
xchg
arpl
test
lcall
testb
sti
and
aam
icebp
insb
idivb
dec
das
mov
andb
ret
sub
into
out
jle
add
jne
jmp
aaa
enter
mov
clc
mov
pop
pop
xchg
cmp
pop
mov
mov
cli
push
lods
xchg
pop
repnz
xchg
pop
popa
mov
movsb
mov
push
fldt
outsl
daa
sub
add
in
xchg
mov
popa
dec
aam
stos
es
lock
andb
int3
jb
and
sbb
or
test
pop
xchg
les
sahf
test
sti
mov
cmp
push
xlat
stos
aas
xchg
aam
in
cmpsb
cmp
dec
stos
pop
pop
pop
clc
fcoml
mov
sbb
sar
scas
fdivs
daa
lds
arpl
jno
or
hlt
jbe
into
push
push
jp
jecxz
and
and
cmp
inc
and
aam
out
imul
xor
mov
inc
mov
jecxz
les
decl
lret
negb
add
jle
mov
sub
cltd
out
stos
xor
jnp
inc
fidivrs
xchg
mov
das
and
cli
int
push
jae,pt
xchg
repz
je
sub
popf
and
xor
inc
cmp
das
movsl
jb
int3
dec
les
dec
aam
inc
sbb
mov
inc
mov
insb
outsl
imul
adc
jecxz
xorb
mov
inc
push
jo
insb
xchg
mov
leave
cmp
inc
filds
cwtl
jb
repz
lds
pushf
cs
gs
scas
fisubrs
xor
xchg
outsb
xchg
ja
ja
test
jecxz
pop
pop
ja
int
roll
pusha
jne
scas
xchg
dec
in
mov
xchg
popf
test
adc
pop
dec
xchg
jecxz
lea
cmp
popl
dec
shl
pop
adcb
push
mov
xchg
lea
dec
push
jmp
adc
mov
inc
push
into
xchg
adc
scas
xchg
xchg
mov
lcall
jbe
lds
add
xchg
insb
push
pop
add
lds
jg
inc
int
or
repnz
mov
cmp
fs
pop
lods
mov
sbb
lahf
shll
lods
adc
dec
popa
fs
es
in
xor
adc
adc
or
sub
push
fcoms
ret
add
je
rorb
mov
insl
jo
mov
mov
orb
fdiv
sbb
mov
ljmp
sahf
loopne
outsb
push
jecxz
lock
imul
push
push
xchg
insl
insl
imul
jo
or
test
xor
push
mov
xchg
mov
xor
les
inc
xor
ret
movsb
xlat
dec
cmp
outsb
cmpsb
inc
or
idivb
jns
xchg
cltd
je
and
movsl
xor
jns
sti
pop
das
jb
rclb
test
cmp
xchg
push
mov
mov
and
fmuls
int
ret
jp
add
push
in
test
or
jl
das
outsb
shlb
jns
pop
push
pop
adc
test
lahf
testl
inc
fadd
jle
loope
mov
inc
test
in
in
add
or
pop
or
push
cs
sbb
mov
adc
adc
adc
mov
lcall
les
and
nop
xchg
push
or
loope
or
lea
lods
iret
cmp
inc
icebp
dec
test
enter
aas
sbb
mov
jecxz
push
xor
fsubs
cmpsl
pop
in
xchg
mov
mov
outsl
push
jnp
sti
fucomi
sbbb
cmp
les
out
xor
das
dec
pop
lods
test
ss
mov
jb
sbb
sti
fildll
pop
cli
lds
pop
mov
and
add
scas
cli
dec
cmp
push
ljmp
pop
cli
test
adc
dec
testl
jp
xor
inc
pop
jne
loopne
lock
popa
or
test
xchg
inc
xor
lds
push
fnstenv
lods
xlat
xchg
test
mov
dec
sbb
rcrb
iret
shrb
adcl
insl
sub
mov
sbbb
inc
jnp
scas
das
fs
sti
lret
test
ffree
out
add
inc
inc
bound
inc
xorl
mov
inc
sti
outsl
adc
mov
dec
push
pop
or
mov
jle
fwait
jge
icebp
arpl
loopne
jbe
movsl
jl
pop
xchg
mov
cld
push
sub
aaa
data16
popa
rorb
jb
movsb
and
mov
dec
lods
loop
xor
or
xchg
scas
cltd
jnp
push
in
rolb
xor
and
add
in
js
xor
kmovb
sbb
sbb
out
fstpt
jns
and
sub
leave
test
add
and
mov
daa
mov
dec
push
idiv
xchg
xchg
mov
stc
or
adc
dec
push
mov
mov
dec
jne
cmp
movl
int
outsl
pop
or
or
stos
adc
loope
push
mov
add
cmpl
mov
pop
xchg
and
jge
outsl
pushf
pop
cmp
cwtl
idivl
xchg
jp
mov
mov
loopne
orb
ret
pop
lcall
pop
test
arpl
dec
mov
pop
out
add
mov
or
aam
xchg
xchg
sub
stos
dec
push
scas
pusha
cmp
xchg
or
adc
cli
lock
xchg
xchg
in
mov
cmp
mov
mov
jle
int
pop
loope
xor
cmp
out
inc
sub
adc
leave
jnp
js
out
sub
cmp
push
adc
inc
and
pushf
mov
push
negl
fcmove
lahf
je
push
arpl
icebp
push
xor
jo
out
push
jmp
pop
cmp
testl
nop
xchg
and
ret
pop
cmp
sub
mov
out
jecxz
inc
lock
pop
pop
ljmp
and
sbb
dec
lds
dec
out
push
nop
lods
cwtl
shlb
xchg
lock
or
scas
sbb
fsts
mov
popa
imul
mov
nop
imul
imul
loope
or
lods
inc
inc
jge
xchg
scas
dec
rcrl
mulb
jnp
hlt
iret
leave
mov
mov
cmp
push
xchg
daa
pop
nop
sbb
xor
sbb
or
sbb
shll
jmp
aaa
and
jl
fwait
add
cltd
int3
mov
push
jb
movsl
push
dec
sub
inc
inc
shrb
out
push
dec
mov
mov
pop
loope
mov
scas
mov
into
jmp
mov
into
popa
test
push
shrb
mov
cmp
sti
lret
adc
fs
aam
mov
xchg
jb
mov
dec
dec
jno
fcomps
lods
pop
out
sar
jb
jb
jge
mov
imul
jp
inc
mov
pop
xchg
sbb
hlt
hlt
jo
xchg
into
rorl
lret
mul
loopnew
sub
inc
dec
movsl
sub
dec
lods
test
inc
mov
popf
adc
mov
inc
inc
jmp
jno
sbb
sahf
out
daa
dec
inc
fcomps
push
inc
jge
cmp
and
hlt
jecxz
loopne
ficompl
mov
mov
inc
dec
fcoms
hlt
mov
inc
je
mov
hlt
movsb
idiv
inc
push
sbb
std
mov
sbb
stos
lods
mov
push
push
sub
sbb
add
jg
lcall
and
aad
ds
call
stos
sarl
xchg
pop
loope
vsqrtpd
inc
adc
cltd
hlt
scas
add
iret
jp
inc
mov
mov
pop
into
cs
xchg
push
xorb
rorb
or
ljmp
pop
mov
jge
fdivl
mov
fwait
sbb
mulb
in
jl,pt
inc
mov
sbb
insl
adc
aas
jno
cmp
pushf
gs
sbb
adc
mov
cmp
sbb
pop
xchg
call
pop
push
and
add
push
in
lcall
sub
outsb
push
das
adc
xchg
mov
add
lea
les
jne
cmpsl
popf
adc
enter
adc
shrb
push
popa
into
cltd
sub
dec
mov
mov
gs
or
fadd
popf
jb
pop
xor
sbb
call
aaa
dec
jo
cmc
imul
cltd
push
mov
push
xor
add
or
xor
loopne
popf
mov
xor
push
aaa
cwtl
add
jne
loop
push
shr
std
outsb
sub
sub
das
sub
not
mov
out
mov
fwait
cld
sbb
jecxz
clc
push
loopne
mov
add
adc
push
jno
lahf
mov
das
inc
lock
dec
mov
sti
adc
das
and
outsb
xor
xchg
push
xor
xchg
pushf
imul
mov
jno
iret
mov
xchg
dec
add
outsb
cs
and
and
loop
inc
int3
inc
xor
cmp
ljmp
das
insb
mov
or
dec
insb
idiv
aam
inc
arpl
dec
loop
add
lea
cmp
push
ja
test
xchg
popf
test
movl
shrl
cmp
sub
into
sbb
dec
loop
pop
in
pop
jbe
jmp
inc
testl
xchg
lea
std
shrb
xchg
xor
ret
out
jbe
ds
shl
push
push
sbb
xchg
xchg
add
ret
popf
repz
mov
add
mov
es
shrl
jno
inc
cli
sbb
out
lds
das
sahf
and
jnp
push
pop
lahf
cmp
mov
mov
pop
popf
pop
and
icebp
inc
mov
mov
push
prefetchwt1
ljmp
scas
aad
jg
inc
or
test
hlt
and
pop
arpl
lock
ss
cltd
insb
xor
pop
pusha
or
mov
xor
pop
mov
cs
cmpb
test
mov
inc
cmp
fcomps
and
cli
stc
mov
inc
xchg
sbb
jle
je
or
adc
bound
jmp
testb
push
xor
aad
jo
or
push
stos
pop
mov
mov
lods
inc
fsubl
pop
mov
out
shrl
mov
inc
mov
add
incb
sbb
sub
movsl
sbb
mov
jmp
xorl
mov
rolb
adc
cli
push
sbb
aas
scas
pop
push
add
push
sbb
pop
ja
adc
adc
js
inc
cmpsl
jg
inc
insb
repz
push
pusha
lahf
inc
insb
mov
sub
jg
dec
push
inc
and
xchg
add
mov
push
pop
jbe
out
jb
rcr
xor
into
and
in
out
xchg
out
mov
scas
addr16
daa
rorl
xor
mov
push
addr16
push
jle
push
push
inc
in
push
cmpsl
add
out
idivl
mov
xchg
jns
lahf
arpl
push
mov
cmp
pop
pop
xchg
xor
je
add
shrb
test
test
inc
sub
je
mov
jle
sbb
push
loop
lgs
mov
int
jp
les
insl
jb
xchg
or
lock
sbb
outsb
push
out
fucomip
xchg
pop
adc
divl
dec
lock
imul
jae
push
sbb
sub
cmp
mov
ds
pop
pop
cmp
clc
sbb
mov
jle
and
pop
add
loop
add
loope
xchg
rclb
push
pop
fildl
jle
pop
shl
sbb
push
jl
sbb
dec
sub
push
out
xchg
cmpsl
or
xor
lcall
mov
dec
push
or
icebp
jne
icebp
cmp
fisttps
xor
xor
push
jno
sahf
sub
inc
rdpmc
lcall
lea
jno
ret
inc
lret
outsl
mov
cwtl
mov
sbb
xor
or
test
or
sub
mov
lods
bound
mov
call
push
adc
in
negl
push
inc
subb
repz
lea
shlb
push
jmp
xlat
and
ljmp
cmpsl
ja
inc
rclb
movsl
push
les
mov
xor
mov
lcall
mov
test
out
aad
loopne
fadds
mov
jge
adc
inc
lods
xor
repz
inc
xor
pusha
out
dec
and
addr16
subl
push
addr16
push
pop
scas
sbb
mov
inc
xor
movsb
pop
mov
sub
pop
mov
jno
cmpl
es
out
lods
adc
out
add
jb
mov
sub
lcall
xor
and
sub
sbb
adc
fsubl
mov
stc
rcll
lea
mov
fwait
xchg
in
mov
xor
jno
addb
cmp
dec
inc
cmp
sub
cld
pusha
adc
rcl
push
imul
push
js
ret
jnp
jae
fsubrp
adc
mov
out
negl
mov
jl
push
xor
lret
sar
lret
shr
loopne
mov
sbb
daa
cwtl
mov
mov
add
bound
stc
popf
std
cmp
out
cmp
and
dec
and
les
orb
jbe
lock
ds
fistl
shlb
orl
jl
mov
out
mov
xchg
inc
cmp
jno
in
lods
sti
xor
add
insb
add
testl
dec
inc
cmp
xor
lahf
sub
push
mov
in
pushf
test
and
sub
std
icebp
pushf
inc
frstor
dec
testb
lret
dec
xchg
fistl
xor
cmpsb
jb
imul
sbb
xor
sbb
call
mov
sbb
nop
pop
add
add
cmp
xorl
xchg
and
movsb
test
insb
out
mov
shlb
in
bound
and
pop
cmpsl
sub
adc
fsts
lods
xchg
mov
loope
cs
fisttpl
jns
xlat
fcmovne
mov
test
and
add
pop
repnz
and
mov
pop
xchg
adc
sti
cld
mov
cmp
ja
loope
mov
push
mov
das
pop
in
into
or
into
rcll
movsl
and
fdivrl
gs
movsb
lret
sahf
call
sub
daa
sbb
into
cmp
jnp
jge
cltd
out
incb
frstor
sbb
shl
cmp
pop
jle
inc
rcrb
inc
sub
out
loopne
mov
ds
stc
out
mov
ret
nop
xchg
and
insl
pop
sub
bound
ss
jmp
imul
scas
and
cmp
or
or
sub
or
fsubrs
mov
psubsw
js
mov
cld
incb
mov
lea
jl
jne
bound
add
out
or
xchg
roll
jae
into
lcall
mov
dec
add
gs
push
ret
pushf
aas
arpl
push
hlt
mov
lock
movsl
sti
mov
inc
rol
cmpsb
mov
sub
pop
jno
int3
mov
push
mov
scas
ret
test
sbb
insl
add
and
adc
das
and
test
mov
test
sbb
xor
out
test
int3
icebp
mov
jbe
popa
movsb
xor
pop
ret
in
push
or
test
push
idivb
in
jns
les
mov
cltd
cwtl
ljmp
leave
icebp
xorb
or
ret
mov
lods
dec
adc
in
popa
mov
mov
enter
daa
rcll
jmp
pushaw
aam
lock
mov
out
stc
lock
arpl
je
sbb
cmpsl
fbstp
adc
cwtl
pop
sub
cmpsl
inc
rorb
mov
popa
push
repnz
add
mov
cltd
in
cld
je
stc
sbb
mov
test
cmp
push
test
test
mov
push
out
je
push
inc
shrl
mov
lods
xchg
mov
std
les
nop
aad
popf
test
cmc
inc
push
cmp
rorb
aam
gs
inc
jbe
fsubrl
mov
cmp
gs
jl
mull
mov
pop
xorl
aam
int
sub
xchg
xchg
rorb
loopne
rorb
xchg
or
mov
xchg
mov
call
fsubl
cmp
or
cmc
lret
jns
scas
icebp
sub
jno
lds
je
mov
lret
pusha
dec
push
fcmovb
out
ret
mov
mov
xchg
mov
mov
lods
mov
dec
aaa
dec
xor
mov
sbbl
xor
aas
xorb
or
stos
mov
lds
test
push
pop
out
mov
stc
mov
push
cmpsb
inc
and
mov
mov
hlt
adc
adc
pop
push
pop
out
cmp
adc
mov
inc
mov
mov
repnz
insl
xchg
mov
xor
cmp
inc
dec
jns
addb
loopne
mov
in
sahf
add
xor
mov
push
mov
pop
lock
and
mov
fadd
mov
addl
aam
adc
push
push
stos
rcrl
pusha
test
xorl
push
pop
out
icebp
jns
xor
jmp
dec
pusha
ss
push
cmp
add
push
ljmp
pusha
call
aam
xor
mov
js
push
pop
fnstsw
jle
push
jno
aad
jne
dec
inc
xchg
jbe
dec
xlat
scas
add
loop
loop
loopne
lret
and
or
mov
jnp
add
or
inc
mov
les
es
sahf
inc
test
mov
fldl
jmp
call
std
push
xchg
push
push
add
sub
xor
sar
and
adc
inc
fisttpl
ret
xchg
subl
inc
jecxz
movsl
cltd
mov
jmp
aas
push
shll
sub
fxch
push
pop
push
js
and
daa
jae
push
mov
mov
cmpsl
shl
inc
mov
xor
cmc
jb
sub
pop
mov
fimull
lret
and
int3
sahf
mov
test
and
adc
movl
dec
cmp
hlt
fisubs
dec
outsl
cltd
mov
jge
stc
inc
out
sbb
mov
jnp
jge
xchg
mov
mov
xchg
jmp
mov
insb
xchg
adc
xor
leave
lcall
push
sbb
xor
sub
jo
xor
mov
test
sahf
int
aaa
add
fsts
int3
pop
ret
mov
scas
dec
cmp
add
pop
mov
xchg
dec
push
sbb
scas
test
cmpb
fistpl
test
xlat
and
mov
cli
sbb
lcall
shll
adc
push
sub
sub
dec
xor
mov
imul
dec
jecxz
mov
mov
push
test
mov
xor
scas
sub
insl
fdivrl
pop
test
xchg
add
cmp
xchg
fwait
pop
fidivs
aam
push
rorb
mov
shlb
xchg
xor
xor
mov
das
in
ficoms
mov
scas
jmp
inc
scas
mov
lcall
inc
pop
inc
test
push
inc
or
test
mov
sub
inc
shll
dec
gs
sub
cmp
and
sbb
inc
nop
push
inc
outsb
mov
fwait
or
adc
dec
or
mov
mov
ds
jl
leave
mov
jns
dec
pop
jp,pt
jl
add
daa
xchg
push
cmp
mov
push
test
lret
enter
aas
in
push
cmpsl
fistl
aam
data16
popf
inc
adc
les
imul
lret
imul
out
gs
movsl
xor
aaa
cmp
push
repz
adc
jp
xor
jb
pop
fsub
fst
fs
mov
notl
lret
aaa
mov
dec
push
cmp
mov
or
fdivrs
dec
adc
cmp
js
sbb
adc
fisubrs
pop
xor
rorl
fstl
jne
pop
push
push
icebp
mov
mov
rcl
ljmp
call
into
enter
mov
push
in
ret
cmpb
leave
xchg
xor
pop
mov
repnz
xor
and
stos
or
jne
sub
mov
mov
adc
sbb
dec
shr
and
xor
sub
push
push
rcrl
push
dec
xchg
add
flds
stc
push
sbb
xor
ja
enter
jb
clc
lea
cmpsb
sub
sti
stos
mov
pop
mov
xchg
adc
adc
js
adc
sub
loop
iret
hlt
inc
push
insl
scas
pop
imul
or
mov
in
mov
push
sbb
xor
add
repnz
pop
in
repnz
fcomi
enter
adc
dec
out
gs
dec
inc
xorl
inc
adc
pop
push
repnz
mov
sbb
and
out
adc
mov
sbb
push
push
das
mov
clc
lret
cmpsb
int3
insl
push
fimull
fbstp
fsts
test
add
add
shll
loopne
adc
push
aaa
push
js
ret
sarl
movzwl
lods
and
jmp
sub
mov
out
lea
sbb
movsb
inc
icebp
cmp
jl
sti
int3
imulb
sbb
fimull
dec
movsl
jns
and
or
or
fmuls
clc
mov
mov
enter
inc
sub
xchg
mov
xor
pop
in
insl
out
lods
fdivs
je
mov
icebp
push
mov
sti
push
inc
mov
dec
sbb
mov
cmp
repz
loop
adc
adc
test
fwait
aad
pop
xor
ds
cmp
out
lret
pusha
lds
shlb
idivl
ljmp
fstp
push
jp
lods
outsb
addr16
cmp
push
test
pop
es
not
iret
mov
scas
pop
outsb
repnz
pushf
aam
insb
movsb
faddl
popf
cltd
cwtl
or
leave
sarl
mov
push
pop
sub
mov
sub
aam
mov
jp
adc
inc
sbbb
push
jmp
repz
or
loopne
pop
ds
cmp
ds
andl
std
mov
mov
sbb
pop
or
mov
leave
movsb
pusha
ret
adc
loop
and
and
lock
daa
add
jnp
das
lock
sub
mov
insb
nop
push
xlat
or
imul
mov
mov
jg
shl
or
mov
mov
sti
mov
xor
and
enter
jnp
js
loop
stos
popf
dec
pop
push
cmp
scas
scas
mov
xchg
ljmp
sti
or
xor
dec
pusha
sbb
mov
pop
pop
xor
cmc
dec
sbb
xor
ljmp
fdivs
mov
inc
push
bound
jnp
jecxz
sub
and
pop
cmc
cwtl
or
fstpl
nop
clc
popf
mov
lock
mov
das
xchg
mov
or
hlt
jle
addl
adc
adc
cmp
ss
cmc
push
mov
mov
push
mov
mov
out
mov
adc
cmp
adc
xorb
add
cli
mov
js
scas
dec
int3
cld
xlat
repz
adc
test
push
jno
insb
leave
loope
loopne
adc
cmc
mov
sarl
sub
sbb
dec
daa
and
hlt
and
mov
data16
adc
call
in
cmpb
and
test
es
shlb
lret
dec
int3
jl
inc
pop
fwait
push
lods
add
sbb
cld
jp
in
popa
fstl
inc
sbb
mov
mov
mov
aas
xor
and
pop
or
les
std
jle
ret
or
inc
cmpsb
fmull
call
movsb
xlat
stos
mov
pop
fwait
out
and
adc
and
popf
enter
fistps
repnz
cmp
jae
mov
les
insl
repnz
and
sahf
push
popf
inc
lret
cli
push
stos
mov
or
cmp
dec
rcr
push
jb
in
testb
fnsave
sbbb
sbb
add
mov
push
call
jne
mov
movsl
shlb
cmp
sbb
push
fwait
jecxz
aaa
xor
xchg
rclb
sti
dec
out
push
cmpsb
in
rorb
les
dec
dec
sbb
lahf
inc
jne
sub
fucomp
mov
fildl
int
incb
cmp
notl
in
mov
pop
imul
pop
jns
inc
xchg
xor
lods
orb
jp
scas
dec
mov
jp
jge
fstp
push
sbb
cwtl
ja
shrl
rcll
mov
pop
or
mov
mov
push
andb
push
mull
gs
mov
aad
mov
adc
pop
outsb
idivb
adc
cli
mov
mov
xchg
std
sub
sahf
adc
push
addl
xor
inc
dec
xchg
dec
push
mov
repz
jecxz
cmpps
inc
sub
push
in
icebp
loope
imul
mov
push
aad
nop
clc
add
inc
add
les
push
mov
sbb
inc
jp
jmp
sub
les
sahf
add
js
ds
sub
pop
sbb
imul
mov
enter
pop
mov
xchg
mov
adc
jns
mov
outsw
adc
outsb
sub
mov
imul
xchg
jle
xchg
into
bound
mov
sub
mov
movsb
in
mov
pop
into
cmp
cs
sbb
pop
popa
movsb
pop
mov
fdivr
cwtl
sbb
rclb
sbb
test
test
jno
sub
rol
in
xor
pop
leave
je
lret
loopne
xchg
cmp
jo
xchg
arpl
mov
imul
add
imull
imul
cmp
adc
lret
xchg
leave
dec
fdivs
out
xor
or
or
in
jmp
mov
add
call
inc
je
or
mov
mov
scas
mov
push
add
in
adc
mov
mov
inc
lods
or
mov
fldt
filds
xor
jg
fs
movsl
data16
test
out
lahf
mov
ret
xchg
dec
fistl
fisttpll
loop
out
in
mov
imul
nop
testb
cmpsb
cli
test
jecxz
nop
mov
push
add
hlt
push
pop
or
inc
iret
sbb
pop
les
and
mov
adc
inc
xor
and
jl
xchg
lret
xor
std
mov
inc
mov
mov
or
aas
xchg
jns
sbb
mov
lea
dec
ljmp
mov
xchg
adc
mov
in
arpl
imul
aaa
leave
loopne
mov
ficoml
addr16
xchg
rcrl
push
xchg
sub
imul
scas
lcall
fstp
mov
inc
push
repnz
mov
lret
scas
outsb
adc
insb
mov
xchg
shlb
pusha
lods
cmp
lock
and
inc
add
sbb
xchg
mov
mov
aad
cmc
lret
mov
and
mov
pop
scas
sub
jmp
aad
jl
dec
nop
in
rolb
mov
fwait
loop
mov
mov
dec
sub
scas
mov
movb
xlat
dec
add
jp
insb
sbb
push
mov
loop
mov
mov
jp
notb
hlt
loopne
cmp
push
arpl
pop
inc
xor
sub
neg
lods
repnz
pop
outsl
mov
rcll
sub
mov
xor
mov
adc
jae
andb
test
test
cs
pop
jns
js
pop
adc
loope
sbb
cmp
or
cli
std
test
jle
sbb
into
aad
sahf
outsl
inc
inc
clc
dec
hlt
mov
cmc
or
test
xchg
and
aas
pusha
push
negb
cmp
mov
js
push
js
fisttpll
or
das
outsl
out
bnd
das
aam
xchg
cli
bound
ja
arpl
aam
rcl
mov
mov
mov
mov
sbb
or
aas
mov
adc
inc
into
dec
mov
cmc
mov
je
std
bound
dec
mov
mov
sarl
shrb
jb
dec
lret
jge
cmp
shll
lahf
les
lods
fstpl
mov
je
lods
loope
ds
dec
nop
mov
leave
dec
in
lret
adc
in
or
sub
sbb
aaa
in
fstl
inc
cmc
lea
shrl
lods
pop
popf
icebp
sub
adc
inc
xchg
mov
js
repz
andl
pusha
popa
dec
outsb
add
cmc
inc
mov
arpl
lcall
and
or
stc
adc
jae
nop
sbb
and
adc
push
xlat
push
and
mov
and
and
mov
and
inc
loopne
mov
inc
cmc
jne
jb
jno
out
and
cmp
adc
icebp
fucom
scas
adc
mov
mov
pop
xchg
cmp
notl
hlt
push
adc
sub
imul
and
pop
push
popf
fs
cmp
les
ficomps
and
cwtl
cmp
lds
adc
outsl
shl
sub
push
cs
lret
push
rol
adc
fmul
popf
jnp
ja
fdivl
loop
jmp
scas
cld
sbb
pop
std
adc
cld
dec
lea
ja
inc
out
mov
mov
inc
orb
lcall
sbb
jno
fdiv
lods
fisubrs
ja
adc
dec
mov
into
sbb
movsb
ret
push
je
sub
pop
rclb
sti
das
pop
scas
stc
xlat
insb
sbb
dec
dec
jnp
mov
imul
cmp
sub
cli
push
ret
outsb
sarb
sti
jg
aam
imul
xlat
scas
push
push
lret
pushf
xchg
in
std
sbb
dec
push
in
xchg
xchg
pop
popf
mov
rcll
or
push
adc
mov
mov
jbe
fldl
mov
lea
iret
jnp
inc
adc
inc
pop
xor
js
aam
lds
in
sub
push
insb
mov
jnp
stos
in
ja
xchg
add
mov
in
pop
stos
in
xchg
test
gs
out
jecxz
arpl
sahf
fcompl
cwtl
inc
inc
sub
push
bound
or
js
shll
jbe
push
pop
dec
addr16
test
out
mov
add
jecxz
adc
xchg
dec
push
inc
outsl
lods
add
mov
repnz
mov
outsl
inc
cmp
sarl
inc
imul
test
inc
dec
xchg
mov
dec
xchg
loope
int3
add
data16
and
dec
dec
les
inc
jmp
mov
loopne
aad
jp
clc
fistl
mov
shrb
gs
hlt
push
mov
icebp
mov
fcmovne
ds
xchg
xchg
xchg
into
pop
xor
add
pusha
and
sbb
xor
fsubp
outsl
ss
loop
xchg
push
inc
push
inc
call
pop
xor
jmp
pop
ljmp
cltd
sbb
and
cmc
pop
sub
and
outsb
dec
inc
rcrl
mov
hlt
in
jge
jbe
out
push
xchg
call
push
frstor
rolb
mov
push
lret
xchg
cmp
pop
scas
sbb
mov
mov
push
inc
in
sbb
rol
mov
mov
shll
mov
je
cmp
ds
cwtl
xor
cmpsl
pop
out
loopne
push
movsb
mov
mov
push
sub
xor
and
mov
stos
std
mov
sub
xor
push
or
test
adc
scas
out
mov
pop
sbb
mov
leave
scas
dec
add
or
push
inc
cmp
out
stos
lcall
scas
hlt
jecxz
mov
add
sub
sbb
lret
ret
sbb
jle
aad
ja
inc
flds
cmc
divb
insl
jge
outsb
gs
mov
push
or
ficomps
dec
pop
test
jl
add
lahf
cwtl
pop
mov
pop
inc
leave
sub
out
jo
mov
push
adc
dec
xchg
push
std
out
addr16
imul
enter
stos
aad
mov
fbstp
es
sub
stc
loope
sahf
popa
push
daa
mov
call
sbb
les
mov
cwtl
push
or
mov
cwtl
popf
sti
cwtl
sahf
sahf
scas
mov
mov
jb
lret
mov
dec
fadds
movsb
lret
push
xchg
fs
push
or
xchg
adc
jg
popf
pop
and
insb
in
in
inc
and
add
in
andb
or
jmp
jecxz
outsb
xchg
cmp
aas
pop
mov
into
and
jmp
sti
pop
addr16
shrb
dec
jp
sbb
into
loopne
add
testb
add
scas
adc
mov
pop
push
inc
pop
mov
lret
push
lret
call
into
fimull
inc
fildl
mov
push
ds
aad
add
jg
cmpsb
jo
pop
jae
testl
and
adc
ret
aaa
cmp
adc
pusha
loopne
xor
scas
es
xchg
outsb
xchg
inc
dec
int3
xchg
dec
cmpsb
xor
or
adc
movsb
xor
icebp
mov
les
sbb
cmpsb
lret
push
mov
mov
rorb
add
push
add
or
jle
xchg
popf
mov
xchg
adc
push
hlt
xchg
jbe
inc
into
xchg
adc
dec
fwait
std
stos
ljmp
cltd
adc
loopne
push
jg
cmp
jae
loop
mov
fisttps
adc
push
sbb
push
mov
cwtl
inc
fmull
sub
pop
pop
jae
mov
daa
jmp
xor
jae
xchg
jle
iret
pusha
mov
or
in
adc
xchg
std
stc
inc
sub
adc
inc
adc
jbe
sub
popf
push
shrb
push
inc
repnz
adc
pop
push
pop
lea
mov
pop
pop
clc
inc
rorb
jns
popf
out
sub
push
enter
daa
addr16
push
cmp
aad
aas
movsl
push
mov
pop
cltd
ja
mov
cmc
vorps
pop
pop
add
and
push
pop
xchg
pop
sub
aaa
gs
push
or
push
and
sbb
push
mov
test
cmp
pop
das
sub
fistl
je
xchg
int
adc
xor
fs
cld
outsb
into
sbb
stos
cmp
mov
arpl
push
sbb
sbb
mov
cmpsb
lods
mov
mov
inc
cwtl
loopne
sbb
pop
or
lock
push
stc
cwtl
push
arpl
pop
jmp
push
cmp
xor
inc
add
out
das
ljmp
pop
pop
pop
in
testb
hlt
lods
jmp
arpl
pusha
test
mov
jns
movsb
inc
adc
int3
or
aam
cwtl
cmp
mov
adc
xchg
aas
adc
shlb
test
mov
test
ret
jmp
mov
aad
mov
add
ss
lds
enter
cli
sub
stos
mov
sbb
xchg
adc
call
adc
cli
push
je
popa
inc
jmp
pop
stos
add
fsubs
in
or
dec
mov
fwait
add
mov
xor
imul
popa
insl
xor
mov
outsb
push
les
loop
insb
rorb
dec
in
sbb
mov
xchg
aam
sbb
loope
vmread
popw
add
popf
lahf
orb
pop
fsubrp
fcomp
or
enter
and
cwtl
jmp
repnz
sub
cmp
xchg
rcll
sbb
lods
out
lahf
fisubrs
mov
and
popa
push
repnz
dec
lcall
mov
out
push
pop
pusha
scas
mov
mov
insb
fstps
popa
das
xlat
imul
mov
jns
add
cs
aad
les
sbb
sarl
jnp
mov
jmp
push
imul
jo
mov
xor
or
int3
and
scas
mov
das
in
pop
jle
gs
sbb
xchg
int3
dec
icebp
pop
scas
into
lahf
cltd
xor
in
ja
lcall
daa
cmp
scas
or
mov
jo
and
stos
mov
pop
in
scas
or
fiaddl
out
lods
lods
xor
ljmp
jmp
and
cmp
pop
push
xor
push
ret
pushf
inc
push
adc
pop
jnp
xchg
sub
es
xchg
cmp
add
out
mov
gs
imull
imul
icebp
xor
mul
sbb
mov
lds
int
mov
les
bound
imul
notb
push
dec
cmc
jmp
add
and
jns
testl
xor
aaa
sub
mov
cmpsl
jb
cltd
std
jno
out
arpl
fwait
mov
rcrb
push
pop
xlat
dec
xchg
int
lahf
test
fldenv
sub
mov
pusha
test
jge
or
inc
mov
sbb
dec
cwtl
push
lods
es
pop
addr16
sbb
lahf
test
ret
xor
xor
and
mov
les
cmp
pop
dec
pop
push
loopne
jns
fcomip
xchg
inc
fsubp
xchg
pop
in
mov
ja
sub
mov
adc
sbb
sbb
sbb
idivl
addr16
push
loope
or
gs
sub
jo
xor
leave
sub
ss
jmp
arpl
pop
sub
cwtl
out
cmp
fiaddl
mov
lock
xchg
cmp
repnz
mov
mov
pushf
fisubrl
jae
xchg
cmpb
mov
cmp
dec
mov
dec
ds
bound
jl
insl
data16
jg
std
ret
popa
in
xchg
lds
inc
stos
add
iret
inc
lahf
cltd
pop
and
repz
cld
or
add
dec
mov
mov
cmp
push
sub
mov
xchg
pushf
or
fbstp
cmpsb
jne
lcall
pop
cmp
dec
nop
add
push
repnz
in
push
adcb
fsubl
insl
jl
movsb
ss
mov
mov
test
dec
std
insl
stos
pop
adc
pop
movsl
pop
test
push
lods
mov
mov
jo
idiv
mov
inc
pop
iret
sti
and
popf
jmp
fcmovnb
bound
jl
std
sbb
mov
insl
out
in
sbbb
push
stos
in
mov
test
cmp
cs
xlat
pop
push
stos
inc
push
mov
sbb
push
mov
int
xchg
xor
mov
lahf
sarl
or
cmc
into
dec
add
les
shll
movsb
inc
mov
or
int
fidivrs
daa
loope
popa
and
push
daa
call
xor
insl
jge
xor
aam
push
and
add
adc
xor
into
jle
cmpsl
pop
data16
and
jae
notl
mov
or
iret
fildll
lahf
out
jo
dec
push
repz
mov
outsl
and
mov
and
cmpsb
xchg
push
lahf
repnz
jae
fs
mov
lea
mov
shrl
arpl
dec
or
mov
mov
frstor
popf
jbe
inc
or
ljmp
mov
insb
mov
sbb
mulb
jg
es
sub
xor
ret
fsubr
add
out
cmp
adc
and
int3
stc
not
jmp
enter
dec
roll
ss
pop
adc
adc
mov
addb
cvttps2pi
pop
or
mov
xor
fdivrl
xchg
mov
cmc
mov
xor
push
xor
inc
mov
scas
repnz
mov
pop
xor
cmp
lock
jecxz
sub
inc
inc
adc
mov
pushf
push
ja
mov
mov
out
loope
push
rcrl
in
das
xchg
push
sub
in
and
xchg
sub
dec
ljmp
out
dec
into
mov
stos
add
pop
mov
dec
and
xor
cltd
inc
and
xchg
rclb
add
mov
xor
mov
mov
jmp
mov
ljmp
xor
insl
push
inc
inc
sub
inc
mov
mov
fisubs
mov
stos
jae
loopne
sbb
popa
fidivrs
clc
mov
fst
mov
or
data16
aam
and
fisttps
mov
adc
jl
inc
arpl
ja
pop
xchg
aam
test
push
mov
jns
inc
lods
in
icebp
pop
push
movsb
xchg
subl
xchg
movsl
les
pushf
movsb
push
xchg
and
pop
pop
inc
roll
mov
pop
adc
je
fstpt
sbb
nop
pop
divl
hlt
ja
int3
xchg
dec
or
push
sub
jl
and
xchg
loop
aad
dec
shll
mov
push
mov
loopne
fdivs
jae
jae
orl
pop
pop
mov
sbb
or
imul
je
ffreep
sub
adc
dec
mov
adc
cmp
ret
outsb
mov
in
in
inc
das
sbb
and
mov
imul
or
xchg
fwait
jnp
add
jecxz
ja
int
lret
gs
inc
mov
repnz
or
popa
repnz
pop
shrl
ja
pop
push
push
sbb
insl
inc
jge
cmp
mov
sub
movsl
lods
or
shl
testl
push
jmp
into
mov
jo
and
pop
push
sub
jbe
imul
loop
scas
push
cmp
icebp
jnp
in
in
and
add
lods
rorb
and
orb
pop
pop
cli
add
sbb
sbb
lret
inc
sub
das
xchg
and
inc
mov
sbb
bound
pop
shr
inc
xor
and
rcr
data16
aad
pushf
push
push
outsb
or
push
push
sub
jl
mov
icebp
icebp
pop
nop
mov
sti
enter
rorl
stc
outsb
fldt
add
scas
fwait
ret
inc
push
push
and
or
mov
xor
sbb
int
adc
mov
xor
outsl
out
mov
int
fstpt
imul
mov
outsl
dec
add
push
inc
mov
jge
ret
lret
mov
mov
cltd
je
pop
mov
xor
dec
pop
pop
inc
push
loopnew
pop
dec
and
pusha
test
xorl
jno
mov
test
pop
pop
push
mov
sbb
call
daa
cmpsl
pusha
mov
mov
int3
repz
ja
sub
xchg
cmp
or
sbb
inc
rcrl
sbb
sbb
and
push
scas
scas
add
inc
imul
jecxz
sti
pushf
xor
out
cltd
fcompl
roll
ret
test
mov
and
dec
fstl
aas
pop
and
in
je
mov
cmp
addr16
in
cmp
sbb
cwtl
add
adc
mov
pop
dec
adc
fwait
inc
push
inc
jp
in
lea
pop
mov
xchg
aas
adc
addr16
dec
mov
cmp
fdivrs
xor
jecxz
stos
ljmp
add
dec
hlt
mov
std
enter
add
mov
inc
sbb
mov
pop
cld
insl
and
jp
out
in
addr16
pop
and
mov
scas
pop
add
push
mov
inc
aaa
sbbl
mov
xchg
es
scas
sbb
or
xor
pop
aas
xchg
loopne
out
adc
add
les
cmp
cmp
and
loopne
bound
test
jp
outsb
dec
cmp
inc
pop
dec
daa
or
in
aas
mov
push
fucomi
pop
push
jno
mov
cmp
enter
iret
push
and
andl
inc
mov
shrb
cli
testb
or
mul
sub
and
notl
shrl
leave
jg
adc
les
or
lds
movaps
outsb
or
xchg
fnstenv
push
int
js
sub
push
xorl
jns
mov
cmp
push
xchg
mov
add
cmpsb
jns
jnp
and
and
lods
and
das
mov
clc
xchg
out
cmp
xchg
out
push
mov
popa
and
mov
jns
xor
ror
or
xor
inc
sbb
cwtl
stos
adc
xchg
jb
jo
dec
xlat
pop
mov
sarl
in
nop
js
inc
test
jae
fcomps
xor
jne
dec
and
shrb
leave
adc
movsl
dec
cmp
pop
sbb
in
out
cs
mov
call
cli
out
popf
call
pop
bound
fndisi(8087
jno
sub
cmpl
insl
dec
outsb
pop
add
es
dec
xor
psubd
das
ds
test
dec
ret
xchg
jno
xor
into
stc
mov
leave
xchg
push
mov
jmp
rcrb
pop
repz
or
fucom
movsl
xor
cmp
mov
popa
mov
mov
jnp
lods
jecxz
shl
ficoml
xchg
cmp
lock
and
je
jge
xacquire
int
sbb
test
pop
ja
mov
loope
add
push
push
fcomps
mov
mov
push
rolb
call
aas
icebp
dec
add
iret
add
inc
outsb
adc
pop
outsb
jb
in
into
mov
or
mov
jno
repnz
js
xchg
loope
mov
jg
fldt
out
shrb
jle
mov
adc
sarl
in
loopne
icebp
and
or
push
xchg
cmc
sbb
lods
and
mov
inc
and
mov
les
lods
lock
sbb
sbb
add
add
push
adc
and
push
xchg
addb
out
js
repz
sahf
cmpsl
shr
psllw
cld
xlat
cmp
mov
test
fdivs
and
iret
ja
xchg
out
aad
hlt
inc
push
leavew
in
mov
xchg
mov
pop
cltd
add
mov
and
repnz
outsl
in
xor
jg
ja
in
mov
fimuls
adc
xchg
daa
xchg
call
das
scas
cld
sub
aam
scas
push
negb
jl
xor
xlat
adcb
gs
mov
orl
stc
arpl
push
cltd
out
pop
mov
lods
sub
mov
dec
imul
sbb
or
pop
mov
push
mov
arpl
shrl
xchg
aam
fsub
fucomip
inc
jp
xchg
push
fcomi
sub
push
pop
xchg
mov
jbe
pusha
ret
aaa
and
dec
cld
icebp
add
sarl
insl
mov
mov
fldcw
aaa
pop
jnp
inc
lahf
pusha
mov
sub
mov
out
pop
cmp
sti
sub
imul
add
test
xchg
lahf
pop
or
pop
push
lds
xchg
cmp
and
cmc
lcall
dec
and
xchg
pusha
push
mov
mov
aaa
int
imul
pop
sahf
and
xlat
jg
lret
loopne
test
and
das
cwtl
and
arpl
jns
sbbb
hlt
push
fstps
pop
out
stos
jl
icebp
dec
mov
shl
mov
mov
sub
adcb
leave
mov
cli
cmp
pop
pop
ss
sbb
cwtl
lods
clc
xor
mov
sub
sahf
fists
and
sbb
push
jge
test
jb
aaa
push
dec
mov
shlb
adc
cmpsl
adc
mov
insl
push
test
ja
out
mov
xchg
inc
dec
jne
or
push
in
lahf
or
push
add
loopne
pop
mov
repz
pop
fildl
ss
in
mov
sbb
inc
loope
fldt
test
fsts
fwait
dec
mov
cmp
pop
xor
inc
mov
out
je
xchg
lret
pop
repz
filds
dec
mov
outsl
lea
jg
inc
aaa
mov
shlb
jbe
sub
or
jecxz
and
inc
hlt
out
xorb
sbb
ss
loope
jmp
adc
and
aaa
fucom
add
fsubs
mov
add
push
cmp
clc
aam
fildll
scas
cmc
push
jle
insl
mov
insl
push
aam
mov
pusha
xchg
sahf
cwtl
add
bound
cmc
and
inc
fadds
lock
mov
imul
lods
cmp
ret
in
cs
ljmp
je
inc
inc
std
sbb
adcl
xchg
push
aaa
cltd
sbb
xchg
call
jl
icebp
and
sbb
es
repz
push
pop
mov
xchg
adc
jmp
xchg
pop
adc
xchg
dec
stos
add
xchg
movsl
lods
rcll
movsl
lret
cmp
ds
in
sahf
out
ficoms
lods
cmp
inc
xor
js
cltd
inc
fsubl
sbb
xor
dec
lods
mov
or
jp
fcomps
xchg
add
mov
push
pop
iret
lock
jle
loop
clc
fimull
or
sub
fistps
sahf
scas
sbb
xchg
out
ljmp
arpl
sbb
and
mov
mov
stc
gs
mov
cwtl
mov
movaps
lock
lcall
cli
sti
pop
push
jne
sbb
and
add
outsb
rcr
lods
je
aas
xchg
jge
js
insl
pop
xchg
add
clc
push
mov
xchg
lahf
add
mov
xchg
mov
jb
and
and
lcall
sbb
xchg
xor
fcmovnb
gs
mov
daa
mov
sahf
xor
in
stos
mov
cltd
and
or
xchg
pusha
or
in
mov
xlat
push
imul
push
or
shr
inc
pusha
ret
daa
repnz
pop
les
dec
push
gs
loopne
sub
movb
popf
jbe
imul
loopne
lock
call
inc
xchg
nop
hlt
xchg
into
adc
jo
sbb
sub
mov
cmp
inc
mov
xor
jecxz
dec
mov
mov
inc
xchg
cmp
dec
push
pop
iret
loop
arpl
sbb
inc
mov
sub
mov
clc
and
xchg
sbb
dec
mov
rcr
push
push
fcmovnu
adc
test
stos
push
jnp
cld
insl
daa
ror
lret
dec
cwtl
mov
ret
or
repz
cmp
aad
adc
movsl
add
push
inc
sbb
imul
icebp
xor
clc
out
hlt
mov
pushf
jb
jb
mov
and
xchg
insl
or
push
xchg
mov
dec
test
imul
jecxz
inc
repz
in
out
test
pop
aaa
inc
bound
mov
out
jmp
jae
into
mov
add
fwait
fs
lea
jns
sahf
mov
pop
arpl
push
scas
sub
adc
sub
sbb
stos
pusha
test
stos
fnstenv
ss
xchg
push
shrl
mov
mov
pop
xor
mov
dec
lock
mov
in
iret
int
mov
and
rcrl
xchg
sub
inc
mov
jae
outsb
add
mov
mov
push
sub
sbb
mov
cmc
add
imulb
shll
bound
mov
jle
adc
clc
sti
mov
add
xlat
stos
mov
popf
nop
push
pop
or
mov
xlat
call
fs
xlat
xor
jbe
sub
lea
das
or
and
hlt
or
add
add
xor
out
cs
imul
inc
imul
add
xchg
sbb
push
fildl
cld
push
outsb
xchg
jmp
lret
jge
jne
stos
arpl
mov
cmpsb
dec
repnz
dec
jmp
loop
clc
fiaddl
xchg
decb
xor
xor
xchg
int3
outsl
push
sbb
scas
daa
xchg
xor
inc
scas
in
in
popf
mov
xchg
sbb
jne
jge
inc
iret
jg
inc
cmp
inc
xor
nop
sub
adc
stos
lcall
push
and
fwait
dec
movsb
rcl
lods
test
inc
adc
cltd
pop
inc
call
or
addl
nop
or
xor
sub
push
loop
lahf
sub
dec
sbb
mov
jno
fwait
jnp
loopne
add
jp
idiv
mov
out
divb
cmc
shll
fucom
sbb
dec
dec
out
test
call
xchg
outsl
or
aas
pop
push
sub
add
pop
sbb
dec
xlat
loope
arpl
paddusb
or
divb
dec
sti
les
pop
outsl
dec
lret
inc
pop
repnz
icebp
adc
xor
push
push
hlt
out
and
jmp
popf
loope
push
dec
outsl
cmp
push
scas
lea
out
xor
int
push
add
inc
inc
pop
iret
aad
shll
or
cld
iret
mov
ret
mov
dec
test
pop
fisttpll
mov
dec
rorb
lock
pop
lret
cmp
push
sbb
aaa
or
and
pop
out
jp
shl
aam
push
dec
xor
dec
cltd
fisttps
frstor
cltd
pop
sarb
or
xchg
jb
jl
lea
xchg
mov
aad
sub
pop
push
cwtl
mov
rcll
test
mov
mov
call
lcall
mov
jmp
cmp
sti
and
cmpsl
push
mov
inc
or
adc
pop
and
in
jl
lods
lret
add
and
es
punpckhbw
in
and
sti
sbb
test
inc
mov
cmp
pushf
fwait
mov
dec
pop
inc
ss
lods
out
cld
cmpsb
imulb
iret
mov
mov
repnz
jle
cmc
push
insb
push
popa
movsb
cwtl
adc
in
jnp
sbb
cmp
outsb
xchg
je
mov
mov
xchg
add
jne
cld
cmp
addl
sub
and
ja
cli
jge
or
mov
movsb
subb
pop
add
cwtl
cld
mov
aam
lock
mov
in
dec
push
dec
stc
push
imul
inc
jbe
dec
sarl
pop
ret
aas
and
leave
call
lret
mov
stos
sarb
mov
and
dec
fstpt
in
in
jmp
out
mov
inc
jle
mov
rcrb
mov
fcomi
mov
cmp
cmp
loope
ds
adc
nop
hlt
out
cmp
lahf
cltd
add
clc
mov
in
cmp
mov
outsb
call
cmc
mov
into
sbb
xchg
mov
bound
sub
test
pop
push
mov
fisttps
sbb
xchg
mov
sub
gs
sbb
cmpsl
mov
lock
inc
ja
std
xchg
mov
jno
jle
mov
sub
aaa
int
push
mov
lods
cmp
pusha
idivb
adc
cmp
ljmp
xlat
add
cmp
rcrl
jo
adc
xor
jmp
cmp
xor
std
out
loope
dec
xchg
and
pop
xchg
mov
mov
jae
mov
mov
dec
out
pop
or
je
mov
in
test
fs
pop
loopne
mov
dec
aas
cwtl
pop
and
xor
mov
rcrb
pop
dec
mov
adc
push
dec
outsl
sti
or
cmp
addr16
ss
fstps
adc
stos
cmp
dec
ljmp
jnp
sbb
lcall
iret
mov
stc
gs
cltd
sub
jnp
pop
imul
mov
jbe
jnp
adc
in
outsl
test
icebp
xor
pop
roll
xor
jo
sub
sar
and
and
pop
jmp
repnz
push
and
jle
pop
leave
or
orl
mov
ljmp
enter
pop
add
test
in
loopne
outsb
div
push
push
push
scas
push
mov
nop
fidivs
push
shll
sbb
or
dec
sti
inc
dec
fcmovne
int3
es
scas
mov
frstor
test
push
mov
subb
insl
test
out
jmp
leave
adc
adc
or
xchg
dec
push
mov
int3
jmp
or
push
loopne
mov
sbb
das
cli
ljmp
daa
fcompl
inc
stos
xorl
or
dec
enter
testl
stos
pop
adc
sub
inc
cmc
adc
push
test
test
xor
decb
mov
ja
icebp
xchg
addr16
mov
push
dec
sbb
outsb
push
mov
std
repz
cmp
sbb
cmp
mov
add
xor
cmp
dec
push
sti
adc
or
pop
out
xor
xchg
jno
pop
sub
dec
and
cmp
xor
inc
lock
sub
pop
xchg
inc
stos
shlb
in
je
hlt
ss
out
cld
mov
lea
loopne
jmp
dec
or
xor
pop
jno
jns
data16
int
jecxz
lret
push
in
cmp
mov
fnstenv
pop
stc
out
mov
in
mov
cmc
lock
lods
lahf
or
fxch
adc
outsl
rcrl
fstpt
jne
add
mov
xor
imul
lea
lods
push
cmp
mov
sbb
jnp
inc
xchg
cli
sbb
push
cmp
mov
pop
out
adc
cmp
push
lea
call
out
outsb
notb
ja
inc
shrb
or
aad
xchg
adc
xchg
sahf
pop
mov
test
adc
dec
xor
xchg
sub
mov
add
ja
add
enter
imul
xchg
les
pop
mov
lock
push
int3
jb
lds
xchg
inc
sbb
xor
xchg
aad
iret
mov
imul
jo
pushf
adc
call
push
aas
call
dec
sbb
aaa
mov
cmpb
and
cmp
insl
mul
sub
adc
and
push
icebp
int3
arpl
ret
inc
dec
lret
out
push
sub
xchg
ror
pop
cmp
sarb
pop
push
mov
fstp
lods
add
sbb
xor
fwait
push
sub
adc
bound
jnp
clc
lcall
rcrb
hlt
add
shll
adc
jo
es
fbstp
or
push
ret
mov
pop
jbe
pop
in
sub
fistps
sub
push
test
push
pop
cmp
mov
push
out
rcl
xor
sub
ret
leave
sahf
dec
jp
mov
or
mov
hlt
adc
dec
pushf
int3
adc
pop
movsl
enter
cmc
inc
incl
sub
mov
cmp
push
pusha
imul
mov
aam
scas
sbb
addr16
pop
movb
xchg
roll
shll
stos
repz
stc
sbbl
cmpsl
rorb
adc
sub
adc
jg
popa
dec
and
int3
mov
and
xchg
and
fcoml
movsl
aad
xchg
ss
and
jb
iret
cli
mov
ds
stos
dec
pop
xchg
xor
push
enter
dec
rclb
lods
push
mov
cmpsl
pop
sti
in
mov
faddl
pop
imul
movsb
aad
dec
jbe
jmp
dec
cwtl
aad
movsl
out
notl
push
push
jle
jno
into
movsb
adc
xchg
and
insl
cmpsl
je
push
mov
pop
jg
pushf
pop
popa
push
adc
arpl
movsbl
adc
iret
nop
mov
addr16
push
mov
lret
mov
lcall
pop
stos
out
enter
adc
jns
mov
adc
push
repnz
pop
mov
aad
je
jnp
sbb
mov
mov
jmp
mov
arpl
gs
cwtl
int3
ret
cmp
and
ret
cmp
enter
rclb
es
loop
push
ds
mov
stos
mov
testl
mov
dec
add
movsb
lock
mov
jns
testl
icebp
loopne
pop
push
fadds
sbbb
data16
push
insl
test
fisttps
cli
cmp
ror
mov
mov
xor
lret
das
jno
inc
jmp
xchg
ds
adc
xchg
sbb
scas
in
jo
loopne
lds
adc
jo
add
push
imul
enter
add
sbb
mov
out
into
xchg
leave
mov
adc
add
repz
cmp
iret
mov
and
jle
ljmp
sub
adc
pop
into
fimull
fs
pop
scas
mov
cmp
jg
sbb
fwait
xlat
add
insl
mov
jle
stos
mov
pop
xchg
ds
and
xor
insl
das
lds
jne
inc
aad
movsl
pop
or
stos
cwtl
cmp
xorb
bound
pusha
icebp
mov
in
in
in
test
xchg
xor
out
pop
pop
dec
push
jle
adc
imul
repnz
adc
mov
repnz
push
ret
push
push
adc
xchg
daa
outsb
and
mov
roll
loopne
mov
dec
xchg
outsl
pop
insb
xor
scas
push
cs
and
xorb
hlt
sahf
cld
jb
adc
pop
repz
jg
loop
mov
icebp
cmpl
in
push
jno
pop
cmpsl
mov
lea
adc
loopne
xor
loop
out
jmp
aad
stos
shll
pop
inc
inc
pop
iret
repz
sbbb
lods
push
push
je
xor
jb
pusha
imul
xchg
inc
or
ret
xor
jle
loopne
push
pop
add
in
mov
roll
mov
mov
or
jg
clc
ret
orl
cmc
sahf
jg
mulb
push
outsb
addr16
sbb
iret
imul
outsl
add
lods
enter
lock
cmp
lods
mov
xchg
pop
stos
jg
pop
jo
sbb
ficompl
subl
dec
sbb
divl
bound
cmp
jne
insl
cld
or
push
sbb
add
out
push
aam
jo
insl
sub
cs
push
out
cs
or
popa
js
incl
push
xor
dec
push
in
jle
dec
sarl
jae
mov
pop
push
jmp
sti
dec
jp
rcl
push
scas
inc
int
add
insl
cmp
cmpsl
push
xchg
jb
pop
xor
divb
xchg
push
jno
adc
iret
push
pop
out
test
dec
lret
or
pop
cmp
ret
pop
jno
mov
in
leave
or
int
xor
push
mov
cmp
sahf
shrb
adc
cmp
ja
inc
xor
lds
ds
jecxz
jecxz
fistps
shlb
iret
aam
inc
hlt
sub
adc
mov
cld
ret
repz
gs
stc
push
lcall
inc
jg
push
enter
mov
and
aaa
lea
xor
pushl
mov
in
mov
cmp
push
js
sub
fldcw
lods
xchg
push
mov
int3
pushf
adcb
push
cmp
in
aas
sub
daa
lock
mov
test
sahf
sbbl
ret
out
mov
outsb
xchg
dec
das
aad
mov
ljmp
cwtl
xor
sbb
jmp
sbb
xchg
xor
ficomps
ja
in
loopne
mov
cmp
dec
and
inc
dec
sbb
movsl
add
lahf
inc
movsl
or
std
sbb
add
dec
cmp
idivl
push
or
xor
cmp
adc
movsl
lahf
or
xchg
mov
add
mov
adc
cwtl
stos
std
cmp
andb
dec
cld
dec
movsl
xor
mov
clc
pusha
das
cmp
or
mov
gs
and
push
mov
int
cmp
stos
cmp
pop
in
repnz
ss
repnz
sbb
fmull
mov
lock
and
ficompl
and
cmpsb
repz
jge
out
inc
xorb
js
sbb
push
cmp
test
cwtl
fs
scas
ret
mov
sbb
mov
loope
jnp
repnz
sbb
in
push
es
testl
out
mov
mov
adc
add
xchg
mov
fxrstor
ljmp
icebp
scas
out
and
xor
stos
aad
lods
addb
inc
pop
xor
data16
push
mov
jg
dec
push
cmp
iret
xchg
xor
xchg
mov
jbe
pop
inc
leave
hlt
adc
popf
ret
inc
shll
push
adc
inc
mov
js
adc
shrb
mov
push
add
or
mov
inc
out
aad
int
bound
sbb
jo
xchg
cmp
cmpsl
or
ret
dec
push
fs
out
pop
dec
es
mov
dec
xchg
and
loop
mov
punpckhdq
pop
and
notl
dec
adc
push
lret
lahf
daa
jnp
xor
xchg
xchg
in
xorb
movl
data16
pop
outsb
sbb
inc
das
add
psrlw
inc
jnp
es
insl
dec
and
dec
xchg
sbb
cmpsl
jmp
testb
cmc
mov
inc
and
test
lcall
aas
jno
mov
dec
cmp
cltd
sub
insb
rcl
rolb
mov
into
cmp
inc
mov
jp
xor
imul
fldcw
dec
push
xor
cld
in
imul
shrb
pop
ljmp
aam
fbstp
jnp
cmc
mov
add
test
stc
ficoml
or
lods
loopne
fbstp
mov
xchg
data16
add
inc
int3
cmp
inc
in
test
inc
das
scas
mov
dec
cld
test
mov
iret
into
orl
inc
jl
xchg
pop
sbb
ds
ljmp
cwtl
shll
add
mov
dec
ljmp
xchg
sub
pop
add
cltd
movsb
movsb
xchg
xchg
mov
cmp
into
mov
mov
sarb
icebp
and
pop
push
mov
push
or
fdivs
adc
pushl
dec
push
dec
or
sbb
sets
mov
sub
movsb
inc
gs
or
sub
fs
aas
bound
inc
xchg
cwtl
mov
cld
mov
cld
data16
ss
cmpsl
dec
movsl
ljmp
sbb
test
pop
mov
mov
lods
mov
test
clc
jns
inc
mov
in
int3
jb
jo
sub
push
mov
dec
movsb
lods
adc
stos
and
mov
sub
inc
push
andl
adc
and
or
dec
shll
jno
adc
stc
popa
dec
sub
jae
lcall
leave
lds
out
outsl
jge
mov
inc
ret
dec
jmp
mov
sbb
and
jbe
bound
add
jmp
arpl
pop
push
dec
enter
dec
push
fmull
xlat
dec
aad
testl
outsb
adc
adc
mov
rorl
lret
sahf
push
call
push
repz
xchg
ret
aaa
pop
adc
xor
and
mov
fiadds
xchg
push
mov
mov
and
rcrl
fwait
lret
pop
and
aas
fstpt
into
mov
adc
cltd
testb
scas
mov
ljmp
mov
fisttpl
cltd
lods
clc
mov
cltd
cmp
mov
mov
mov
inc
mov
inc
push
pop
mov
and
sbb
insb
fcoms
xor
shll
add
push
cmpsl
and
add
mov
add
or
imul
arpl
jmp
movsb
cmc
nop
push
sub
lea
gs
sub
push
mov
dec
xchg
dec
fists
ja
pop
and
fidivrl
lea
fldt
xchg
loopne
and
push
scas
lea
adc
iret
jne
popa
push
stc
jl
mov
sbb
sbb
jae
inc
fs
stos
in
sub
pop
inc
cmp
jg
add
stc
or
fwait
sub
fimull
stc
cmc
sbb
jns
inc
jecxz
fldcw
inc
jae
ret
dec
test
xchg
or
add
rcll
sbb
data16
mov
xlat
sbb
xlat
mov
xchg
scas
push
andl
adc
gs
jbe
stos
mov
or
add
outsl
pop
loop
shll
std
aad
repz
push
ret
dec
sbb
or
jne
sbb
nop
rcll
movsl
in
inc
js
into
pop
shrb
jge
xor
popa
xor
xchg
mov
sbb
jle
jae
xchg
ljmp
pop
daa
jg
lcall
inc
call
inc
es
sti
mov
pop
mov
pop
pop
test
out
rcrb
in
data16
insl
stos
in
ss
stos
xchg
dec
inc
ficoml
pop
xor
mov
add
or
aad
or
incb
fildl
lret
out
test
mov
dec
mov
mov
mov
fildll
push
inc
xor
mov
cmp
scas
xor
loope
push
and
fst
push
cmp
dec
adc
test
sub
mov
cmpsb
les
test
pop
or
lahf
addl
int
lret
mov
mov
cs
outsb
in
js
xor
jge
mov
imul
push
adc
and
mov
xchg
test
stc
lock
out
insl
xor
test
mov
sbb
mov
pop
jns
in
pop
dec
mov
fs
out
fs
insb
aad
imulb
cltd
ret
add
insb
jbe
aas
mov
call
out
sub
cmp
cmp
adc
rclb
push
cmpb
hlt
icebp
jge
lret
adc
dec
scas
js
mov
leave
xor
lcall
lcall
push
sti
mov
sub
cmp
cld
rclb
orb
sub
inc
inc
icebp
negb
mov
loopne
dec
pop
lret
imul
add
adc
imul
incl
or
xchg
enter
xor
and
int3
sbb
shl
push
stos
cli
add
sbb
lcall
sub
shlb
mov
int3
enter
push
pop
arpl
inc
mov
pusha
adc
hlt
xor
arpl
pop
mov
sti
lock
cmc
sbb
stos
cmp
lahf
dec
cmp
dec
sub
popf
jl
clc
mov
inc
iret
imul
pcmpeqb
push
jne
xchg
jo
enter
call
push
lahf
gs
mov
sub
hlt
shll
insb
push
pop
das
mov
fsubrl
mov
xor
scas
jl
mov
xor
add
xchg
inc
and
mov
xchg
mov
hlt
inc
mov
lret
lea
in
mov
xchg
push
and
andb
loopne
test
outsb
lcall
hlt
cmpsb
sti
xchg
adc
lods
addb
fs
fcmovnbe
arpl
inc
or
pusha
xchg
xor
loopew
aas
int3
fldenv
sbb
inc
xchg
sbb
lock
js
mov
or
adc
popf
leave
xchg
mov
sub
jo
arpl
pop
or
pop
insb
out
or
je
xchg
orl
sbb
sub
les
iret
loop
idivl
ret
nop
lahf
arpl
je
cli
sbb
push
xor
jns
dec
dec
sub
mov
dec
mov
imulb
out
xor
movsb
cmpb
psubd
sahf
jecxz
into
and
jge
xor
pop
test
mov
xor
push
daa
out
add
xchg
mov
or
int3
aam
dec
out
imul
push
or
and
aaa
test
lret
xchg
testl
bound
int
scas
dec
es
mov
movsl
cs
sub
in
jg
pop
sbb
dec
pop
mov
jg
shr
aaa
icebp
jns
xchg
xchg
pusha
mov
inc
adc
adc
xchg
out
jp
scas
dec
les
mov
jp
dec
xor
fldl
jnp
jb
test
popa
std
mov
xchg
mov
xor
scas
mov
xlat
and
outsl
lret
xor
test
and
sbb
jae
dec
pop
xchg
xor
xchg
push
fdivr
dec
dec
cli
aas
loope
pop
dec
dec
outsl
jo
popa
push
sbb
inc
ljmp
jne
xlat
pop
inc
test
lret
push
shlb
cmp
xlat
lcall
dec
xor
sub
mov
hlt
xor
into
cmpsl
rorl
mov
sub
cli
jecxz
adc
xor
das
sub
js
gs
xchg
inc
add
sub
sub
jecxz
cmpsl
mov
lods
fisubs
hlt
je
and
arpl
stos
mov
or
push
cmp
dec
mov
add
push
add
mov
mov
jns
inc
mov
cmp
std
lahf
subb
daa
repz
loop,pn
dec
test
inc
incb
rclb
sbb
roll
out
add
arpl
jmp
fcomps
mov
jne
pop
mov
rol
sub
loop
push
iret
lods
adc
adc
jl
add
sub
inc
sub
xchg
in
outsl
push
lahf
out
mov
pop
mov
test
mov
loope
out
data16
out
push
rcrb
sub
cmp
test
inc
adc
imulb
mov
test
jne
push
outsb
xchg
popa
pop
pop
mov
xchg
sub
pop
push
pop
mov
jle
adc
add
pop
scas
xchg
inc
cltd
test
xchg
mov
dec
into
mov
cmp
loope
and
fiaddl
push
mov
ret
mov
mov
mov
es
stc
call
mov
pop
bound
mov
inc
mov
adc
xchg
mov
and
jle
xchg
test
mov
and
adc
loopne
adc
test
repnz
popa
sahf
jb
and
dec
sbbl
inc
xor
in
mov
arpl
lea
lret
add
test
pop
aam
pop
insb
stos
mov
cli
mov
xor
and
xchg
inc
daa
lods
xchg
jnp
es
mov
sbb
fsts
nop
clc
dec
fistpll
xchg
inc
lods
add
ret
movsb
dec
outsl
je
repz
out
clc
push
pop
in
and
sti
aam
dec
dec
iret
js
movsl
sbb
xor
and
aad
mov
imul
iret
andb
call
sti
lods
cli
or
sbb
insb
fiadds
sbb
lea
xor
dec
aaa
pop
mov
and
cld
dec
mov
movntps
pop
add
int3
mov
pop
and
int
jo
subl
inc
idiv
int
mov
or
add
add
dec
sub
push
and
hlt
add
lods
dec
xchg
adc
dec
pop
adc
mov
fidivrl
mov
adc
or
inc
fst
aaa
mov
cmp
push
pop
ja
hlt
fwait
aam
dec
stc
sub
mov
pusha
repnz
jns
rclb
ficomps
pop
rcl
aad
jl,pn
out
je
mov
and
dec
mov
iret
mov
mov
fnstcw
fwait
js
outsl
xlat
add
push
imul
inc
sbb
scas
leave
addr16
pop
add
push
jp
adc
mov
clc
jns
ja
setnp
ret
loopne
cli
jmp
pop
mov
mov
inc
cwtl
and
sbb
mov
mov
ss
subl
xchg
outsl
popf
pop
cmp
xchg
sub
lock
and
and
mov
adc
negb
jo
loope
repz
pop
or
js
inc
in
pop
jb
cmp
andb
outsb
jmp
pusha
xchg
cmp
decb
push
lods
add
scas
sub
xor
pop
jno
adc
jge
mov
sbb
or
bound
std
xchg
bound
add
insl
out
jae
jg
test
pop
or
inc
xchg
fs
fnstenv
scas
in
push
scas
loop
mov
icebp
outsl
stos
out
inc
nop
sbb
xor
cmpb
xor
push
pop
insl
xchg
fwait
lods
inc
inc
lea
sbb
nop
jno
scas
mov
imul
iret
fsubs
cmp
sar
xchg
sahf
fsubrl
cmpsl
cs
add
nop
mov
pop
adc
subl
loopne
mov
icebp
jle
add
lods
mov
mov
insb
inc
and
xchg
shll
lods
sub
mov
sub
fucom
enter
jo
popf
cmp
in
movsl
lret
imul
ja
js
sbb
lds
mov
push
and
cltd
lahf
xchg
xchg
scas
and
out
sahf
vpsllq
mov
cmpl
int3
in
rol
jnp
and
movsb
mov
addb
push
sub
loop
xchg
mov
lahf
loopne
repnz
into
cli
je
dec
mov
sti
adc
jnp
lret
mov
repnz
jno
lods
mov
adc
mov
xchg
leave
xchg
mov
jge
xchg
stos
shll
in
mov
dec
ja
call
shr
mov
into
daa
mov
addr16
test
and
push
int
jb
call
sbb
xlat
adc
inc
push
out
fs
sbb
out
xchg
not
cmp
fdiv
sbb
cmp
ret
enter
pushf
in
mov
jmp
pusha
dec
mov
xor
jmp
mov
sbb
fisubl
mov
cwtl
popf
ljmp
sbb
mov
inc
test
jo
clc
inc
dec
enter
in
out
cltd
dec
fs
mov
stos
mov
in
dec
push
fildl
and
andl
xchg
adc
inc
xchg
cld
data16
or
ja
aas
mov
dec
and
push
imul
mov
mov
xchg
adc
inc
xchg
push
stos
dec
xor
fdivl
pop
loop
inc
and
push
or
fistps
test
shll
loope
sbb
cmp
int3
dec
sub
sub
jmp
fs
inc
xor
nop
push
and
pop
gs
rcrb
add
cld
mov
pop
push
adc
decb
jmp
or
fs
rcrb
push
jns
push
or
xchg
pop
loope
add
cmp
xchg
arpl
out
mov
subb
jns
and
rcrl
jbe
das
fs
icebp
inc
push
lods
data16
imul
lret
and
cwtl
lea
sub
sar
loop
sahf
jnp
push
call
dec
xchg
aam
fildll
dec
test
mov
adc
dec
out
out
test
pop
repz
pushf
cld
jns
pop
fcoms
subb
add
sbbl
insb
jl
fs
addb
jmp
fsubl
mov
push
mov
or
mov
xchg
jmp
jmp
sub
push
cli
jecxz
xor
jns
mov
cmp
int
popf
outsb
cmc
ret
call
in
fstpl
mov
push
call
pop
movsb
idivb
aaa
cmp
jl
mov
jo
aam
xchg
and
ret
xchg
xor
jnp
mov
or
mov
add
inc
and
mov
addl
dec
dec
lods
sarl
mov
je
pop
sbbb
lcall
jge
jbe
sbb
cld
push
sti
and
adc
sub
add
adc
and
sub
jmp
mov
fistps
outsl
push
test
pop
lea
sub
scas
inc
ret
rolb
ljmp
jle
push
xor
pushf
xor
jb
mov
in
fs
add
dec
ror
mov
or
inc
sub
inc
xchg
movsl
add
leave
stos
inc
enter
xor
rol
lock
dec
dec
pop
cmp
aam
pop
movsb
sub
inc
jge
test
nop
sub
mov
mov
orl
stos
or
ret
inc
and
mov
add
push
mov
xchg
lahf
pop
call
mov
pop
mov
push
stos
int3
adc
mov
mov
repz
sar
pop
jmp
loop
leave
pop
adc
add
testl
jno
sub
loop
push
add
and
sbbb
lods
mov
and
adc
addr16
mov
out
lods
icebp
stos
mov
insl
aas
inc
das
sbb
pop
daa
sbb
fwait
pop
inc
in
add
adc
add
xchg
aaa
fsubl
cmp
insb
dec
or
clc
ret
repz
psubusb
cmpsl
xchg
pop
es
ret
push
decb
xlat
jno
loope
sub
or
add
in
dec
add
fistps
imul
inc
or
mov
shl
mov
shl
mov
jl
add
adc
mov
cmp
ljmp
cmp
mov
out
xchg
out
mov
mov
pushf
adc
xchg
xchg
call
rclb
ret
mov
popa
imul
mov
sub
mov
gs
push
js
or
pop
jb
es
popl
aaa
pop
test
aaa
jge
aam
pop
dec
ss
rcrb
fadd
xor
outsb
shrb
ja
push
add
loop
test
lcall
adc
or
aas
or
xchg
jns
lret
adc
icebp
rcr
sub
rcl
mov
dec
adc
ljmp
push
inc
out
adc
es
push
mov
and
ret
in
insb
fwait
mov
sub
loopne
fsubrp
gs
dec
int3
test
pop
sub
or
cmc
jmp
pop
out
int3
popa
out
sub
xchg
rcrl
jns
lea
pop
push
loope
inc
jne
div
xchg
into
aad
shlb
xlat
mov
vcvttpd2dqx
jle
inc
xor
xchg
test
in
mov
mov
add
pop
cwtl
dec
roll
xor
xchg
in
add
test
aas
lea
and
inc
pop
xchg
ja
inc
adc
loopne
subb
pop
add
das
and
fldt
sarb
filds
dec
outsl
cmpsl
jno
clc
mov
lock
cmp
js
scas
lret
push
push
mov
jno
adc
std
lods
and
divl
int3
adc
pop
or
aad
mov
or
scas
mov
inc
cmpsl
das
das
in
movsb
jae
out
lods
fdivrp
adc
pop
dec
int3
pop
jecxz
adc
bnd
pop
insb
mov
sub
hlt
adc
lods
cltd
leave
inc
pop
adcl
fidivl
and
xchg
ds
testl
stos
and
iret
bnd
test
and
out
dec
mov
dec
sub
xchg
mov
mov
in
push
fildll
mov
nop
mov
sbb
pop
shrl
jno
aaa
sub
imul
cmp
sarb
add
out
int
out
push
jge
std
outsl
mov
mov
mov
repnz
and
mov
dec
mov
inc
aad
sub
pop
xchg
xchg
pop
mov
add
subb
cli
fcom
daa
in
mov
lahf
cwtl
in
ret
in
add
adc
jge
lods
push
shrl
or
fnstenv
add
rolb
dec
or
sbb
cli
pop
mov
clc
push
shll
pop
cwtl
pop
test
shr
jbe
mov
mov
adc
dec
xchg
aam
pusha
jno
adc
cli
dec
std
movsl
sub
push
lret
push
sub
cmp
aad
dec
pushf
outsb
sti
add
and
in
popf
xchg
sub
mov
jbe
pop
in
pop
les
fstpt
and
ljmp
sub
repnz
mov
pop
and
sub
mov
xchg
jno
rorl
and
clc
push
addb
cmp
arpl
and
mov
sub
push
aaa
adc
dec
ja
leave
out
xchg
xor
leave
inc
add
mov
pop
stos
mov
aaa
lret
sub
insl
and
add
mov
test
or
or
shrl
push
pop
arpl
sti
mov
pushf
jno
popa
cmpsl
adc
daa
jne
or
mov
dec
clc
push
or
pop
jmp
in
je
nop
mov
xchg
js
sub
xchg
scas
inc
ret
xor
in
mov
sub
and
add
pop
xchg
xchg
jp
sub
mov
lea
aaa
enter
add
in
imul
rcrb
mov
lods
ror
xor
test
in
mov
cmc
scas
movsb
jbe
cmp
xchg
enter
negb
ljmp
sbb
xorb
push
mov
sbb
enter
adc
jae
dec
mov
dec
mov
sub
inc
lock
jno
fildll
or
shlb
jmp
in
lcall
and
loopne
sub
shll
sub
mov
je
jmp
sbb
lcall
mov
aas
test
repnz
jmp
sub
sub
insb
les
mov
fcmovnbe
pop
pop
mov
je
or
js
mov
sub
mov
mov
jp
lret
bswap
add
ds
xchg
dec
push
cs
xchg
clc
out
mov
mov
lea
popf
ja
mov
mov
xchg
bound
cmp
outsl
ret
cmpsl
insb
or
mov
jbe
stc
rolb
dec
xchg
jge
and
popl
sbb
sub
add
inc
stos
ret
ja
lock
fldcw
cmp
jo
add
test
scas
dec
sub
addb
xchg
in
adc
int
push
fiadds
pusha
into
cs
cmpsl
pop
lret
movsb
mov
lods
lcall
mov
jno
fbld
mov
adc
shlb
je
adc
xor
outsb
xor
filds
pushf
xor
dec
out
sarb
mov
stc
notl
roll
fbld
jle
and
stos
xor
xchg
sbb
jno
jns
pusha
xor
cmp
dec
xchg
jecxz
or
xchg
imul
jmp
xchg
rolb
outsl
fists
jbe
rcll
mov
test
mov
xor
push
push
mov
or
sbb
test
imul
imul
push
mov
cmc
push
in
or
cmp
fcoms
xor
inc
pop
dec
aaa
test
int3
popl
daa
adc
loope
jnp
jne
andl
or
push
inc
in
mov
sbb
or
decl
pop
mov
jp
stc
icebp
push
inc
jg
lea
fnsave
xor
lods
mov
add
pop
mov
jle
mov
push
mov
lods
pop
mov
sbb
sbb
add
jae
ds
xor
out
ret
ret
mov
add
xor
out
cmp
adc
insl
inc
xchg
dec
inc
lea
cmp
xor
dec
mov
mov
push
xor
cmpsl
jb
enter
out
std
mov
lret
loop
pop
call
sbb
lods
sbb
cltd
call
jle
pop
pop
int3
pop
out
scas
xor
and
ds
mov
out
rcrb
jmp
popf
xlat
add
pop
aas
add
add
dec
inc
std
pop
add
cmp
leave
jmp
pop
mov
addr16
jb
dec
in
pop
sub
xor
orl
int3
xchg
add
adc
imul
out
inc
sar
mov
sbb
sub
subl
shrb
adc
rcl
adc
data16
xchg
subb
cmp
pusha
mov
push
mov
xchg
and
pop
jmp
fnop
and
adc
xchg
inc
cmc
add
jmp
sbb
adc
and
push
mov
ja
mov
daa
cmc
dec
mov
cmp
mov
jge
push
sbb
cmp
je
int3
lahf
repz
loopne
sub
das
push
das
addr16
fs
inc
pop
mov
or
mov
fcompl
pop
movsb
rep
movsl
leave
sub
es
and
mov
adc
jge
mov
inc
jae
mov
jnp
scas
or
pop
jmp
jecxz
movsb
cltd
mov
pop
adc
or
xchg
mov
int3
xor
pop
mov
lds
cmovl
add
add
dec
adc
inc
scas
mov
cld
out
iret
stos
mov
stos
mov
pushf
jns
mov
mov
loop
mov
pushf
pop
inc
sahf
lods
out
mov
mov
mov
ljmp
mov
insl
pop
pop
or
push
test
adc
cltd
jp
sub
fcompl
dec
push
bound
dec
mov
inc
or
push
pusha
pop
dec
adc
daa
xchg
or
test
cwtl
xor
mov
imul
fstl
xchg
test
test
sub
leave
ficomps
dec
mov
inc
xlat
xchg
out
data16
mov
addl
lcall
jecxz
shr
pusha
notl
and
cltd
xchg
ljmp
sub
lahf
adc
insb
adc
inc
and
je
add
jge
pop
jae
xchg
lcall
add
pop
repz
je,pn
adc
xlat
pop
push
sbb
sub
arpl
pop
xor
sbb
sub
pusha
mov
test
jle
into
mov
push
add
cld
arpl
add
subl
pop
stos
adc
dec
aad
movsl
pop
imull
fwait
pop
jl
jge
adc
mov
add
lea
lcall
mov
sub
sub
mov
ret
lret
sub
cs
ret
enter
jno
xor
push
sub
add
out
mov
leave
movsl
out
enter
imul
jg
ljmp
movsb
jb
sub
fwait
add
sub
loopne
xchg
in
cmp
jb
push
push
int
neg
cmp
adc
les
and
stc
add
mov
inc
cmp
dec
in
sbb
xor
adc
fdivrl
push
call
jp
gs
lods
insl
daa
cmpsb
jge
push
push
xorb
push
mov
int
cmp
outsb
cltd
sbb
mov
cmp
xor
cld
dec
mov
repz
jecxz
jle
jbe
fdivl
adc
inc
push
mov
sti
ja
das
cmp
lret
mov
fiadds
stos
sub
inc
int3
loop
mov
xor
test
stc
in
rcll
pop
xor
rorb
or
push
cmc
mov
pushf
inc
in
and
cmp
adc
jmpw
outsb
or
dec
xchg
pop
lods
ds
mov
dec
clc
push
inc
popf
outsb
loopne
push
or
xchg
push
fistps
or
jns
fnsave
mov
adc
lods
mov
push
ret
mov
adc
rolb
xor
xchg
rcrl
fldenv
dec
sub
testb
addl
push
or
adc
sub
insl
insb
push
bound
push
out
add
shll
lock
shlb
sarl
mov
cmp
and
cltd
xchg
dec
cwtl
icebp
lret
aam
lret
jns
aaa
test
shrl
out
mull
jb
sbb
mov
xchg
push
push
xor
add
testl
cld
cmp
jno
cld
sbb
out
pop
lods
icebp
popf
arpl
jecxz
mov
popa
mov
xchg
xchg
xchg
dec
mov
mov
mov
rep
movsl
sub
fwait
popf
in
mov
cmp
xchg
mov
adc
add
and
aam
cwtl
or
mov
inc
test
jp
jg
ret
add
push
sti
lods
je
xor
push
mov
cmp
sbb
dec
or
jnp
pop
int
lock
xlat
push
mov
pop
in
fdivrs
adc
cmp
lods
ret
mov
jge
sub
sbb
or
push
cmpb
hlt
outsb
inc
out
mov
iret
dec
mov
lock
movb
xchg
mov
adc
sbb
std
addr16
into
fildll
addr16
pop
mov
jae
lahf
test
sub
addl
push
cmp
dec
adc
fiadds
mov
cli
mov
sub
fimuls
mov
shlb
mov
pop
out
pop
mov
scas
add
jg
dec
add
and
adc
popa
nop
fimuls
inc
test
pop
iret
push
pop
inc
repz
das
pop
sti
bsf
cmpsl
aas
repnz
mov
mov
clc
std
cmpsl
and
xchg
sub
xor
shll
clc
arpl
and
jmp
fstl
mov
movsl
cltd
hlt
jmp
sub
inc
xor
in
xlat
or
subb
sahf
jle
push
lock
or
dec
outsb
cmp
ret
pop
leave
rcl
test
movsl
inc
push
add
out
fwait
ds
jo
and
sbb
inc
aam
ds
sub
adc
out
push
inc
sub
repz
add
les
dec
add
fs
inc
pop
scas
out
and
jns
loop
sub
lods
stc
movsb
xor
add
xchg
leave
mov
adc
jge
push
mov
add
out
xchg
push
mov
lock
or
js
icebp
pop
loope
or
fcom
push
rclb
push
hlt
pop
icebp
jb
xchg
sub
and
lea
lret
and
push
stos
jbe
mov
orl
jno,pt
or
jl
and
mov
clc
sarl
pop
in
es
pop
mov
das
pushf
mov
and
adc
mov
xor
loop
lods
loop
dec
gs
sub
push
adc
sbbb
adc
pop
insb
and
ljmp
inc
imul
pop
xor
cmpsl
push
mov
push
rcrb
cmp
test
in
xlat
stos
movsl
aas
rcrl
xor
pop
mov
rorb
mov
mov
cwtl
addr16
push
or
and
xor
inc
add
shrl
jbe
sub
filds
aam
and
push
inc
in
fsubrl
or
sbb
sahf
and
fxch
mov
inc
int
test
mov
insb
mov
pushf
int
shl
js
mov
add
sbb
mov
mov
pop
add
lret
out
jl
cmc
test
xor
lods
jne
fwait
mov
mov
jecxz
adc
fs
push
mov
mov
inc
shl
jne
call
mov
inc
les
sub
cmp
cltd
addl
dec
std
in
fadds
jp
aaa
jmp
pop
sub
scas
jne
add
sbb
aad
pop
push
pop
add
dec
filds
outsb
xchg
dec
das
js
jge
pop
jnp
add
scas
popf
stc
div
stos
push
cld
in
ss
xor
or
mov
cmp
imul
mov
sti
and
adc
jl
jne
imul
pop
cld
sti
adc
pop
mov
les
mov
into
pop
ret
sti
andl
lret
adc
dec
hlt
insl
dec
mov
mulb
nop
sub
xor
xor
mov
cmpsl
mov
add
loope
or
mov
xor
dec
push
scas
dec
push
cli
cmp
adc
pop
or
sahf
imul
or
push
mov
fisttpll
por
aaa
xchg
in
insb
rorl
mov
shrb
and
sbb
xor
in
cs
aaa
xchg
or
int
sub
cmp
mov
and
cmpsb
popa
mov
fstl
jl
push
pop
aam
stc
test
mov
mov
mov
inc
aad
xchg
push
xorl
push
dec
or
fimuls
jecxz
test
repz
or
fwait
adc
sbb
dec
xchg
mov
jae
cmp
jle
adc
pop
jo
test
aam
enter
daa
or
adc
push
test
push
add
jle
lcall
clc
pop
add
mov
push
mov
popa
lret
hlt
dec
xchg
out
push
imul
push
jle
sbb
jno
mov
notb
iret
sbb
subb
push
cmp
mov
gs
aam
push
cmp
cld
jae
jnp
divb
insb
cmp
scas
data16
jnp
decb
or
sbb
and
es
xchg
xor
xchg
test
cmp
pop
mov
stc
test
mov
sbb
and
into
je
addr16
js
jb
sub
adc
push
jo
add
std
loopne
pusha
mov
shrb
ret
sbb
into
sbb
sbb
das
jo
mov
ret
fbstp
sbb
pushf
imul
inc
add
push
shll
add
push
add
jg
inc
shlb
cld
jg
loope
movsb
pop
fstpt
xor
clc
xchg
stc
rep
pop
les
jae
dec
in
jl
dec
mov
cmp
mov
push
dec
push
xchg
sbb
or
loopne
push
and
mov
mov
insl
aaa
mov
cltd
xchg
imul
clc
mov
dec
xchg
fadd
lahf
repz
mov
mov
jno
jno
mov
xchg
clc
jo
inc
adc
mov
cmp
inc
je
sbb
data16
jmp
fcos
mov
lock
jo
shl
inc
sub
std
sub
xchg
lahf
adc
sbb
imul
push
imul
jnp
adc
adc
and
or
sub
push
ret
lret
push
jns
xor
fnstsw
ret
cmp
add
pusha
scas
push
std
movsb
inc
mov
adc
push
out
sub
or
stc
xchg
fsubrl
cmc
out
inc
and
or
aad
cmp
pop
add
sbb
mov
pop
inc
in
out
adc
ffreep
pop
or
or
ss
mov
out
adc
jg
test
push
dec
xchg
dec
xor
pop
out
or
mov
imul
or
outsb
or
pop
ret
loop
test
mov
adc
daa
sbbl
lret
mov
bound
pushf
test
lds
and
jo
popf
stos
jne
leave
ficomps
bound
adcb
and
addr16
fucom
andb
dec
cmpb
inc
mov
gs
cmp
imul
cltd
push
push
xor
push
lea
fistpll
out
mov
fucomp
mov
and
inc
rcrl
pusha
push
icebp
bound
cmp
xchg
adcl
mov
out
dec
inc
and
pop
nop
cmp
out
or
xor
mov
movsl
pop
adc
int
inc
xchg
aam
loop
xchg
and
notb
daa
xchg
stc
out
push
push
dec
adc
pop
push
pop
int3
add
adc
jnp
inc
xchg
jae
aad
push
push
lcall
push
je
test
call
jne
xchg
mov
fdivrs
not
mov
ficompl
addr16
cmp
ljmp
cmpsb
pop
lahf
xor
ret
sub
inc
xchg
clc
push
repnz
sub
fsubs
pushf
cmpsb
jp
dec
aam
sub
jg
xor
iret
xor
ss
repnz
mov
popa
sbb
sarb
push
out
push
cmpsb
data16
or
lret
cmp
add
loop
pop
push
out
inc
mov
mov
jecxz
add
repz
push
push
xchg
out
push
and
mov
mov
clc
daa
push
mov
std
cmp
insb
xchg
lods
movsb
aad
pop
jns
adc
push
enter
cmpsl
adc
leave
sbb
dec
ret
fcoms
pushf
adc
pushf
mov
cwtl
mov
lods
out
pop
push
test
dec
fcoml
cli
test
and
and
sub
aam
dec
adc
pop
stc
add
jns
test
or
loopne
ficoml
icebp
mov
lret
in
mov
arpl
dec
sbb
or
fs
test
stos
mov
mov
xor
push
test
sbb
test
stos
rolb
sarb
adc
std
xchg
cltd
cmp
cmc
mov
jae
inc
fnstsw
push
mov
and
sbb
or
sub
pushf
mov
cmp
fnstenv
out
notb
rorb
inc
mov
out
psraw
movsb
lret
sti
scas
out
ljmp
stos
inc
or
mov
test
sbbb
loop
push
es
and
test
mov
mov
lret
loopne
or
in
rcll
out
cmp
fbstp
js
inc
and
rorb
outsb
dec
aam
or
xor
sti
adc
adc
pop
iret
jmp
mov
pushf
xchg
in
js
nop
dec
mov
xchg
enter
dec
das
shlb
daa
out
test
insl
or
aas
dec
jnp
int
int3
call
addl
movsl
lock
mov
mov
leave
mov
xor
pop
cmc
fwait
add
cmpsl
test
rcrl
sub
push
into
push
fisttpll
loope
dec
xor
mov
mov
jl
sub
or
mov
loop
inc
or
scas
mov
jbe
xchg
pop
int
outsb
jge
xchg
das
xchg
cmp
roll
sti
lods
xor
pop
push
aad
fimuls
or
xchg
push
jmp
dec
adc
scas
arpl
inc
bound
sarb
adc
cwtl
sub
push
xchg
xor
pop
sbb
pusha
ret
inc
push
bound
inc
sub
in
je
jb
cmp
int3
les
push
out
ljmp
jmp
jg
loopne
icebp
or
gs
sub
sbb
lret
adc
pop
or
push
es
inc
mov
test
mov
and
or
ja
cs
adc
pop
icebp
sub
repnz
jns
in
cli
ljmp
pop
xchg
push
xchg
push
leave
out
jae
imul
sub
ss
ljmp
out
sbb
arpl
lret
popf
orl
jnp
cmp
ret
mov
pop
xchg
or
jno
fcoml
lock
inc
add
lds
pop
repnz
lret
pushf
pop
dec
xor
pusha
loope
xor
clc
sub
je
rcrb
dec
or
adc
xchg
andl
dec
out
adc
loopne
stos
push
push
cmp
mov
push
lds
or
orb
aad
adc
xor
movsl
sbb
imul
cs
inc
push
jmp
aam
rolb
mov
in
jo
mov
bound
jge
ret
add
loope
cmp
dec
int3
aaa
test
sbb
cmp
in
in
in
popf
shl
leave
and
xor
jmp
mov
push
jl
lea
lea
int
not
push
mov
xchg
dec
movsl
rclb
inc
or
sbb
mov
lds
sub
jne
data16
add
mov
mov
mov
push
xor
xlat
cmp
addl
arpl
test
std
push
fs
lds
jl
or
cltd
pop
push
ret
ss
jno
lahf
xchg
sbb
rclb
xor
ja
fst
xor
mov
inc
pop
sbb
imul
push
js
int
or
loop
inc
bound
mov
bound
rcll
hlt
cmp
lahf
or
or
cmp
mov
les
add
popa
mov
push
push
inc
cmp
pop
pop
mov
lea
cmp
lock
fs
pop
cmpsl
cs
inc
out
ret
adc
rcll
sbb
cli
scas
pop
aaa
arpl
lock
push
fldl
cltd
fwait
pop
into
lock
jno
testb
push
push
xlat
adc
nop
je
pop
aad
or
stc
jne
daa
out
into
inc
scas
ret
cmc
sbb
inc
and
adc
movsl
std
jbe
lahf
inc
lea
out
fildll
lods
jecxz
jns
aad
add
icebp
jbe
sbb
cli
inc
aaa
push
aas
push
nop
aas
cmc
icebp
shlb
insb
ret
data16
lods
add
outsb
pop
sbb
jle
lcall
lods
ljmp
mov
dec
push
test
std
call
push
flds
sub
or
lahf
fisubrl
jnp
sub
in
in
jecxz
out
push
push
insl
lret
addl
repnz
mov
mov
mov
jnp
inc
shlb
xchg
inc
xchg
mov
jo
loopne
repnz
in
scas
adc
jl
aaa
sbb
fidivs
or
mov
and
xchg
lea
pop
inc
mov
push
jecxz
roll
xchg
push
enter
lods
insb
dec
es
int
enter
fwait
lret
iret
adc
jne
sahf
insb
mov
ja
loopne
shl
jge
jmp
movsb
adc
push
dec
jb
add
movsl
mov
or
rcll
fcomp
out
and
mov
in
stos
je
pop
loopne
push
rcl
lods
repnz
shl
and
jns
aad
push
iret
orl
dec
mov
xchg
pop
jmp
shrb
pop
mov
mov
jge
pop
dec
dec
shrl
jbe
xchg
push
stos
rdmsr
jno
mov
and
leave
lods
fstl
rorb
push
aas
mov
cmpsb
or
mov
std
ficoml
out
add
shlb
lret
lods
daa
sub
sahf
mov
push
outsl
data16
mov
aas
rcl
aad
daa
mov
fists
pop
push
in
mov
addb
add
into
xchg
inc
rep
pop
leave
cmc
push
push
jno
mov
aam
adc
add
sub
int
inc
dec
ljmp
imul
pushl
out
out
je
pushf
out
and
jmp
or
mov
jg
ds
ljmp
xchg
bound
pop
sub
enter
hlt
int
bound
insl
flds
sub
repz
jge
cmpsb
mov
or
and
inc
jb
dec
testl
and
mov
sti
mov
adc
addl
ret
adc
fwait
popf
and
arpl
lcall
ficomps
repz
iret
cmp
push
sub
jle
cmp
jg
pop
mov
and
adc
mov
mov
imul
mov
dec
push
stos
imul
js
jo
sbb
sub
es
shlb
jne
sbbb
das
fsts
dec
fwait
jne
mov
sbb
xchg
adc
vpmovsqb
ret
and
test
pushf
daa
cs
repz
aaa
pop
data16
jl
movsb
sub
xor
dec
and
std
std
inc
mov
pop
fcmovu
dec
sub
xchg
sbb
sub
cmp
sub
cmp
mov
push
mov
and
ficoms
sbb
mov
cs
xchg
daa
inc
rorb
sbb
addl
xor
das
mov
push
mov
movl
jg
and
andl
aaa
or
pop
outsb
dec
rcl
and
jne
mov
dec
cmp
xchg
and
addr16
jge
add
lret
mov
xchg
cmpsl
cmp
adc
adcl
mov
dec
inc
cmc
rorl
mov
les
dec
mov
loop
popf
push
push
shll
ljmp
xlat
mov
fdivr
xchg
sarb
inc
xchg
sbb
pop
adc
movsl
mov
mov
jmp
rol
inc
push
adc
adc
sub
fmuls
insl
or
ljmp
inc
pop
pop
hlt
push
ret
push
test
bound
insl
out
rcr
out
and
les
mov
outsb
push
adc
xor
std
lock
fsubs
pop
push
add
cmpsl
or
mov
xchg
into
pop
jno
sti
in
bound
or
gs
in
jl
and
repz
add
pop
mov
lods
jnp
add
xchg
xchg
movsl
add
dec
test
lret
mov
sti
mov
sti
mov
pop
loope
adc
sub
enter
fldl
repz
sub
cmpsl
les
movsl
adc
xchg
xchg
fwait
mov
jle
fbstp
std
xchg
xor
bswap
in
cmp
ficompl
mov
ljmp
push
pop
insb
fyl2xp1
cmp
out
sub
mov
into
xchg
ds
sub
mov
repz
mov
push
cmp
jle
inc
sbb
sub
dec
jle
pop
jbe
push
add
pop
push
pop
andb
out
call
xor
cmp
dec
cmpsl
loope
arpl
push
sub
sbb
ja
mov
or
add
std
cmp
mov
mov
cmp
push
dec
repz
adc
mov
mov
data16
mov
cmp
dec
mov
xchg
dec
jno
clc
and
mov
mov
pop
loope
or
sub
cltd
fldt
cmp
daa
fcmovnbe
push
jbe
sbb
mov
pop
idiv
adc
jecxz
pop
cmpsb
xor
push
aam
xor
js
sbb
and
stos
xchg
xchg
lods
jo
xchg
inc
mov
dec
aad
cmpsl
lret
pop
cmp
lret
xchg
jmp
lret
mov
adc
subb
or
mov
mov
inc
push
loope
jp
adc
daa
cmp
xchg
orl
jae
mov
out
dec
add
jns
dec
shlb
hlt
add
jmp
mov
cli
push
add
in
sub
mov
add
or
rorl
xor
push
incl
pop
out
ljmp
lea
add
ror
add
rcrl
sbb
std
and
push
inc
popf
shrb
inc
out
popa
icebp
mov
outsl
lock
xor
sahf
cmp
lahf
pushf
push
aam
sbb
mov
xchg
mov
enter
add
icebp
insb
adc
mov
pop
scas
inc
lret
mov
rcr
mov
mov
mov
outsb
in
pop
shl
and
jo
add
nop
jmp
mov
mov
filds
pop
les
sbb
stos
shlb
sub
sbb
in
sbb
lods
xchg
jns
jbe
or
fdiv
sub
clc
aam
fwait
sbb
pop
test
test
mov
pop
popf
xchg
lahf
mov
lcall
push
mov
f2xm1
je
cmpsl
inc
or
and
mov
mov
es
mov
fs
adc
loope
push
out
aas
aaa
test
xor
addl
lock
cmpsl
mov
int
sti
mov
push
daa
les
rorb
les
xor
sbb
pop
fmull
sub
cmp
xchg
mov
inc
int3
mov
xor
dec
xor
fsub
arpl
jb
inc
ja
jns
dec
test
inc
and
jae
mov
int
add
xorb
rclb
fsubrs
jbe
cmp
das
repnz
aaa
jp
xchg
inc
mov
inc
out
adcb
cwtl
adc
jne
lods
test
jmp
rolb
inc
pop
pushf
mov
jno
jnp
mov
jb
push
push
inc
inc
and
mov
inc
ss
ret
push
ret
mov
jno
or
mov
inc
inc
ficomps
jl
into
test
pop
fldl2t
jo
sub
ja
dec
cmpsb
orl
and
lock
jmp
jg
into
shr
push
cwtl
dec
fstpl
repnz
rorl
adc
add
mov
das
and
pop
cmpsl
mov
xor
lahf
add
adc
pop
mov
loop
mov
pop
mov
out
inc
ret
cld
or
add
jns
mov
arpl
mov
movsb
jns
stos
movsl
xchg
lret
lret
and
cmpsl
add
in
in
repz
fldenv
xchg
stos
ss
test
nop
inc
cwtl
or
les
int
insb
hlt
hlt
shlb
loope
mov
ficoms
mov
inc
gs
sub
test
add
fnstsw
sub
test
notb
es
jnp
hlt
push
out
movsl
and
xor
or
push
popa
push
pop
mov
orl
xchg
inc
push
sub
mov
andb
fsubrp
ret
push
or
inc
pop
enter
int
fs
jnp
fimuls
outsb
daa
sub
leave
mov
int
mov
les
or
pop
mov
in
faddl
es
or
push
pop
mov
popf
push
adc
and
repnz
sarl
pop
aad
stos
repz
mov
pop
repz
popa
jae
mov
lahf
and
or
pop
xor
outsb
aad
cmpsl
jl
mov
inc
xchg
jge
jne
aaa
ljmp
lcall
test
sub
popf
fmuls
mov
cmp
dec
lret
dec
sbb
or
jne
mov
outsl
not
mov
xchg
or
jno
dec
lock
shlb
rolb
lcall
daa
add
rorb
sarl
lret
dec
orb
mov
incl
or
and
cwtl
imul
int3
ja
sti
aas
or
pop
in
sub
lcall
push
ret
and
repnz
or
mov
lahf
cmc
dec
into
mov
in
sub
jl
xchg
imul
push
sbbb
dec
daa
insl
ret
adc
and
jns
fnstcw
lock
dec
orl
dec
in
iret
hlt
mov
nop
popl
adc
in
sbb
and
push
push
sti
sbb
lahf
repnz
inc
and
popf
pusha
inc
add
cmp
ja
mov
cmpsb
push
add
inc
cli
pusha
and
xlat
sahf
inc
xor
mov
xlat
loop
data16
add
call
push
sub
jp
and
jb
scas
add
xchg
mov
mov
adc
fsub
call
pop
xlat
mov
jb
mov
or
adc
dec
fldt
xor
fisttpll
mov
sbb
sub
loop
repnz
xor
jb
nop
popf
sub
cltd
cmc
cs
fwait
xchg
xchg
sub
ja
out
aad
orb
mov
ljmp
mov
adc
jb
mov
fucomip
pop
or
imul
pop
xor
mov
sub
es
xor
inc
popf
pop
inc
add
out
ret
adc
cmpsb
jl
mov
lcall
push
and
daa
sbb
mov
cmp
inc
sahf
ds
jns
sub
imul
pop
adc
mov
cmp
jno
sbb
cmp
fucomip
mov
sbb
xchg
jg
dec
push
dec
hlt
test
imul
and
pusha
mov
cld
jns
push
inc
xor
mov
popa
xor
sub
insb
lahf
cltd
mov
mov
pop
loop
push
clc
adc
pop
lahf
icebp
add
cltd
cmp
mov
test
xor
jnp
mov
xor
mov
iret
ror
aad
cmp
out
ss
dec
ja
cs
xor
movsb
inc
jns
mov
insb
add
pop
sti
setne
pop
xchg
scas
in
fistl
push
fcoms
int3
pusha
sub
cmp
jmp
js
mov
imul
cmpsl
cmc
int3
sub
dec
les
lock
push
xchg
adc
jecxz
push
jb
ja
and
push
arpl
mov
pop
repz
lret
xbegin
subl
ficoml
pop
inc
insl
add
xor
sbb
jnp
jg
mov
pop
repnz
dec
sub
adc
mov
jp
imul
mov
and
and
fsubrs
and
adc
ss
out
dec
ret
xor
clc
mov
loop
cwtl
ficomps
je,pt
dec
push
lret
fmull
hlt
dec
xchg
ljmp
mov
and
pop
or
sbb
xor
mov
adc
inc
and
ret
adc
cwtl
pop
xchg
sbb
mov
jle
push
push
cltd
push
add
movsb
sub
jle
inc
mov
mov
or
aaa
filds
fstpt
jnp
ljmp
sub
push
xchg
jge
cli
cmc
xchg
lret
push
into
fmul
cltd
repz
cwtl
lret
jecxz
mov
mov
hlt
or
ds
aas
loop
mov
lret
arpl
mov
insl
jno
sbb
cli
fcmovne
bound
cmp
shr
arpl
cmp
push
push
aad
out
inc
mov
into
add
shl
cltd
call
stos
push
insl
les
adc
xor
mov
jo
roll
xchg
xor
pusha
mov
add
lret
mov
shlb
adc
sub
mov
or
mov
pop
and
pop
sbb
or
in
outsl
pop
mov
mov
rcll
cwtl
xor
cmc
test
sub
mov
dec
mov
xor
xchg
cltd
push
fsubrl
xor
push
lock
xchg
iret
aas
jns
mov
push
adc
jle
dec
test
xchg
stc
inc
lcall
into
pop
fld
lret
stos
mov
repz
insl
daa
mov
xchg
cltd
pop
dec
add
xlat
je
aaa
out
xchg
mov
adc
lret
loopne
and
repnz
xor
hlt
dec
scas
fsts
stos
mov
andl
sti
out
jle
cltd
or
clc
pop
adc
inc
arpl
inc
mov
subb
inc
dec
sbb
pop
jle
mov
fmul
push
out
mov
mov
jno
jle
daa
cmp
push
mov
mov
jno
push
imul
scas
mov
testl
lret
ret
das
fidivrs
sbb
shrb
scas
mov
dec
in
lds
jle
mov
sbb
sub
sub
cmp
sahf
leave
xchg
in
out
xchg
mov
loop
fcoml
cmp
shrb
cli
sbb
push
ljmp
inc
push
ffree
cmp
inc
mov
das
jo
movsl
adc
leave
jb
adc
push
push
ret
mov
mov
ja
cmc
jmp
in
rcrl
jae
push
in
cmp
inc
dec
rcll
hlt
push
mov
lahf
and
lret
and
add
dec
stos
loope
xchg
jl
aas
or
fsubrl
dec
mov
std
dec
aad
pop
call
or
cmp
adc
push
jb
ss
jbe
add
scas
fwait
mov
bound
enter
push
or
mov
mov
fsqrt
mov
dec
cmpsb
xchg
cwtl
dec
xlat
imul
xchg
cmp
push
xchg
cli
xlat
fsubs
stc
jns
sbb
scas
mov
sbb
js
or
clc
mov
das
in
sbb
pushl
hlt
and
mov
stc
sarb
dec
out
inc
dec
in
jle
shl
mov
rolb
idivl
push
or
mov
cli
adc
lcall
jo
movsl
xor
sbb
repz
insl
jne
rclb
xor
fcmovnbe
gs
and
inc
cmp
mov
test
xchg
jge
aad
xor
xchg
xchg
loope
inc
push
in
xlat
push
es
out
addr16
fnstsw
fistpll
and
das
shlb
incl
test
fsubrs
cld
sbb
dec
fistpll
cmp
mov
mov
pop
mov
inc
adc
stos
add
jnp
cmp
push
push
test
push
pop
pop
add
pushf
mov
fwait
sbb
dec
cwtl
fmul
out
jns
add
lods
sub
xor
cmpsb
ret
hlt
push
je
pop
xor
cmpb
subl
mov
cmp
push
and
jns
subb
sub
ret
and
add
dec
pop
push
lock
adc
frstor
mov
nop
sbb
push
sbb
inc
ret
push
hlt
pop
in
roll
and
lods
cli
pushf
cmc
dec
movsl
adc
mov
jb
xchg
and
insl
mov
fsubr
xchg
lods
mov
ret
fnstenv
pop
ljmp
push
mov
fcmovnbe
pop
xchg
xchg
push
pop
inc
xor
out
in
push
popf
add
mov
xchg
loope
sub
call
dec
mov
mov
inc
xchg
movsb
cld
outsb
push
fnstsw
sub
jb
jbe
jb
mov
jns
mov
hlt
inc
dec
inc
cmp
jmp
pop
in
lahf
mov
mov
add
outsb
imul
mov
insb
daa
call
and
jnp
mov
imul
les
arpl
dec
psubusw
jno
fidivrs
mov
sub
sbb
mov
push
mov
out
dec
repz
jecxz
fcomps
lea
jp
push
loope
repz
push
cwtl
enter
fcoml
movsb
jp
push
mov
cmp
inc
int
adc
lods
mov
xchg
imul
inc
cmp
loope
call
cmp
inc
jnp
sub
adc
xchg
dec
insb
roll
or
addl
push
in
mov
dec
mov
aad
push
insb
mov
push
mov
imul
lods
repnz
mov
lret
sahf
cltd
cmp
adc
add
int3
sub
std
mov
mov
lret
out
pop
in
or
fcoms
and
icebp
pop
dec
mov
cltd
stos
es
bound
loop
cld
shrb
and
iret
data16
dec
mov
clc
xrelease
pop
popa
mov
inc
imul
mov
adc
mov
and
jl
pop
pop
in
xor
cmpsb
bnd
xor
loope
or
mov
filds
jo
pop
loop
jbe
mov
or
cli
idivl
sbb
pusha
repz
sbbb
jno
mov
pop
sub
ja
cmp
fxch
xchg
in
mov
xor
push
ror
fsubr
lods
stos
outsb
sub
sti
adc
add
pusha
movsl
hlt
add
push
sub
rol
aaa
and
lock
sbb
stos
mov
call
push
add
fildl
clc
dec
rclb
sub
nop
shl
outsl
push
push
fs
xchg
mov
fwait
lds
mov
stos
bound
das
and
mov
aad
dec
aaa
push
mov
mov
lahf
or
xchg
inc
cli
jg
jbe
test
jne
pop
mulb
fnstenv
insb
push
lock
xchg
daa
std
mov
in
int
pop
cmp
inc
adc
pop
inc
jge
add
push
or
mov
pop
cmp
push
imul
fists
mov
out
std
push
mov
mov
add
and
xor
mov
imul
rcr
test
ret
sub
addr16
dec
ficoms
xor
sti
xlat
pop
xchg
cld
sbb
jp
movsl
xor
push
sub
imul
sbb
cmpsb
mov
and
jp
icebp
pop
inc
test
ss
mov
xor
js
das
mov
mov
xchg
mov
push
adc
inc
pop
mov
mov
push
sbb
popf
cwtl
leave
pop
xor
aam
or
int3
loope
jecxz
gs
add
or
jo
xor
shlb
adc
push
fdivrl
add
repnz
add
jecxz
enter
push
fisubs
push
mov
loopne
movsl
sub
pop
xchg
jle
test
cltd
mov
dec
jg
push
sub
xchg
xor
dec
popf
imul
pop
pop
inc
xchg
aam
jecxz
and
or
ja
andb
jbe
cmpb
lods
mov
xlat
sub
and
stos
mov
cwtl
imul
in
mov
push
sub
sbb
mov
and
std
cltd
mov
cmpsl
jle
js
pusha
stos
into
xchg
outsb
pop
fdivr
lea
adc
roll
rcll
test
mov
jp
sbbb
mov
pusha
js
repnz
add
fisubrl
scas
dec
cwtl
cmpb
mov
and
pop
test
or
sub
or
fistpl
jg
dec
stos
ljmp
mov
imull
inc
jecxz
mov
sbb
pop
xor
jmp
loop
iret
push
add
adc
lret
xor
push
popa
pop
dec
mov
xor
mov
cmp
cmp
xor
mov
rcll
daa
inc
add
push
loopne
icebp
cmc
dec
shll
lds
jne
nop
add
in
dec
ret
xchg
cmp
pop
cmp
mov
cmpsb
mov
in
insb
lret
imul
xchg
jb
add
sub
push
call
cwtl
cmpsb
pmuludq
lods
pusha
cmp
enter
ljmp
push
shlb
mov
push
add
dec
add
cmpsl
out
scas
rcrb
mov
mov
test
jnp
lock
adc
mov
loopne
push
fisttpl
mov
fmuls
mov
xchg
pop
push
push
repz
push
push
xor
sti
add
rcrl
cmpsl
repnz
mov
fisubl
mov
push
push
lret
out
out
mov
insl
or
fstpl
adc
cmc
adc
insb
in
clc
sub
push
mov
inc
mov
fidivrl
clc
sub
fstl
in
data16
jmp
push
xor
popf
xor
in
pop
push
aas
loopne
mov
xor
por
push
push
int3
sub
sbb
mov
scas
repnz
or
xchg
push
imul
rclb
cmp
mov
cwtl
dec
jo
sarl
push
mov
fwait
xchg
out
push
dec
popf
pop
pop
dec
add
les
test
out
mov
lock
sub
ja
jns
sub
push
jo
mov
mov
hlt
pop
fwait
xchg
hlt
push
cli
xchg
cmp
jecxz
lods
jnp
adc
inc
jmp
mulb
fadd
stos
adc
jno
xor
jg
jge
mov
pop
negl
cmpsl
pop
push
jp
sbb
mov
adc
movsb
cld
mov
mov
xchg
test
push
negb
iret
insl
insl
mov
xor
push
iret
and
mov
scas
xchg
xor
cmp
mov
xchg
fs
into
movsl
xor
and
cld
mov
shll
mov
push
sbb
orl
xor
xlat
push
xchg
push
mov
xchg
sub
shll
jp
ds
and
stc
cwtl
divb
das
sub
popf
or
pop
clc
je
and
cmp
int3
inc
lret
push
and
cmc
inc
dec
jge
dec
test
in
dec
jnp
xor
or
jmp
mov
bnd
das
ss
shr
fwait
push
adc
mov
int
jg
ret
add
jae
or
xchg
and
and
inc
sub
mov
mov
mov
mov
insl
sub
cmp
lods
sub
xor
cld
imul
aas
or
jb
fs
call
scas
insl
insb
pop
loopne
push
int3
cmp
repz
push
je
fmul
or
inc
xchg
jge
xchg
cmpsb
pop
or
xor
pop
xchg
lock
dec
sbb
repnz
ljmp
push
inc
push
outsb
push
leave
rcl
jbe
jnp
js
pop
dec
cmc
mov
xchg
stos
andb
cmp
notl
fs
imul
ja
lret
std
loopne
or
movsl
pop
loop
fwait
xor
js
in
jmp
push
fdivrs
cmp
sbb
pop
push
cltd
lods
mov
out
cmpsl
pop
mov
cmp
out
sbb
inc
or
push
mov
pop
sbb
sbb
mov
ret
aad
xchg
fistps
jge
lods
cmp
push
cld
mov
out
sti
and
cmpsb
cmp
adc
pop
mov
ds
lahf
cwtl
leave
adc
incb
jg
cmp
test
lods
mov
mov
data16
popf
dec
sub
pop
enter
data16
sbb
movsl
cmpsb
mov
les
cmp
sbb
push
push
outsl
inc
mov
in
add
cli
mov
aaa
in
xchg
xchg
mov
sarb
int3
inc
in
lods
mov
mov
lahf
adc
repnz
jo
add
jge
jmp
stos
outsl
jo,pn
mov
add
adc
adc
pusha
mov
jno
popa
push
dec
rorb
rcll
popa
pop
push
sbb
enter
xor
repz
scas
enter
inc
jp
cli
int
je
mov
aaa
fsubr
mov
dec
push
xlat
sbb
jns
loopne
pop
daa
lahf
xor
loop
ljmp
pop
cltd
push
mov
xchg
and
enter
mov
inc
xor
inc
aad
xchg
je
inc
loop
leave
sub
xchg
arpl
push
into
and
cli
or
into
mov
jmp
add
imul
push
xor
xchg
in
pop
pop
lea
add
mov
dec
mov
adcb
in
pop
data16
jmp
jg
push
sub
es
testb
lods
mov
or
icebp
int
push
pop
push
in
outsl
jo
sti
fbstp
fsts
add
sub
loop
sti
std
add
fnsave
and
fstl
pop
cwtl
lea
in
dec
sub
push
lock
je
pop
lods
cmp
mov
mov
movsl
testl
xor
push
dec
lock
dec
jp
or
adc
aad
pop
xor
scas
imul
mov
inc
cmc
push
or
inc
ja
repz
out
faddl
mov
cmpsl
xorb
dec
sbb
dec
rorl
pop
fcomi
movsl
adc
repz
sarb
and
test
mov
mov
jne,pn
mov
test
imul
movsb
lds
ja
mov
push
cmc
sub
nop
push
fmuls
adc
inc
dec
aas
test
and
mov
inc
push
push
inc
mov
xor
jp
mov
ja
cs
ret
out
dec
test
push
call
mov
push
cli
or
mov
repz
or
xor
stos
jae
or
sub
adc
ret
dec
loope
stos
mov
mov
xchg
nop
movsb
cmp
in
fldcw
test
inc
mov
mov
setp
or
shll
adc
push
lret
movsl
inc
aaa
nopl
incb
mov
xor
jp
push
mov
sub
and
ficoms
sbb
frstor
cmp
lret
xchg
pushf
movsl
ficoms
mov
negb
insl
imull
inc
cmp
into
sub
adc
test
xchg
out
dec
xor
cmpsl
adc
loop
cmc
xchg
in
xor
icebp
pop
sbb
cmp
lds
inc
andb
jle
cmpsl
xorl
sbb
xchg
jne
inc
mov
mov
gs
lods
jecxz
mov
icebp
jae
sbb
repnz
lcall
adc
decl
dec
pusha
inc
and
frstor
es
and
adc
xchg
jns
sarl
push
jne
movb
push
inc
icebp
daa
or
mov
mov
cli
scas
repz
insl
pop
std
imulb
jmp
pop
in
es
test
movsb
adc
inc
sub
adc
cmpsb
or
pop
push
dec
xlat
adc
push
mov
xor
std
loop
iret
mov
sti
inc
shl
cs
sub
fsubr
shrl
add
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
shrb
das
lahf
cltd
mov
movsb
add
sbb
ror
pop
mov
bound
sub
js
and
stos
dec
push
lcall
daa
jg
rolb
jo
push
mov
push
pop
movsb
ja
sbb
inc
outsl
movsb
lock
inc
xchg
add
cmpl
fyl2x
imul
pushf
filds
int
push
inc
pop
ret
ss
out
inc
rolb
push
xor
sbb
mov
adc
mov
sahf
push
sbb
mov
sub
add
mov
add
cmp
fcomps
xor
test
stos
cmp
xor
aad
dec
dec
sbb
push
test
sbb
mov
jge
mov
push
jle
push
imul
cmp
pop
sahf
imul
ja
into
sbb
mov
jl
mov
iret
or
push
popa
mov
sub
push
mull
and
jne
mov
and
ds
mov
ja
push
negb
ficomps
ja
pop
not
sub
cltd
sub
cmp
lock
mov
and
int3
in
adc
in
xchg
subl
pushf
popa
sub
pop
mov
mov
mov
or
aam
std
mov
hlt
fcmovnb
js
pop
iret
pop
inc
fidivrl
pop
divl
fmull
aam
xor
out
mov
lea
lret
mov
inc
jae
sub
push
cli
dec
xor
or
loopne
inc
ds
add
data16
mov
and
push
jbe
test
pop
ss
mov
or
xor
scas
testl
ss
repz
mov
add
movsb
ljmp
movsl
int
std
jecxz
out
mov
sti
add
fldenv
inc
push
sbb
inc
lods
sub
cltd
fs
mov
jne
push
inc
add
and
test
dec
xchg
xchg
adcl
mov
xchg
andl
xor
sbb
jae
test
imull
stos
add
mov
and
repnz
stos
xlat
test
aad
add
fnop
and
pop
pop
outsb
in
mov
gs
xchg
add
sbb
jb
jecxz
shll
outsl
iret
pop
add
or
jno
push
test
pop
icebp
cmp
imul
push
int
out
sahf
cmp
and
test
test
movsb
xchg
lods
pop
add
add
cli
jle
sub
mov
and
js
cmp
cmc
xor
cmpsb
dec
dec
or
cld
dec
xchg
loopne
or
in
inc
lcall
mov
lds
rcll
pop
out
push
xchg
jno
inc
add
push
ret
loopne
scas
adcl
gs
add
pop
lret
ljmp
imul
int3
lret
mov
ret
insb
test
sub
int
pop
inc
or
jns
jne
inc
add
dec
or
add
inc
fimull
jns
adc
jo
inc
sahf
jl
or
pusha
dec
sbb
adc
clc
xor
lock
cmp
cmc
and
pop
popa
ja
icebp
movsl
pop
xchg
inc
inc
fmull
sub
js
xchg
inc
lock
push
mov
xchg
push
std
push
add
test
push
shll
dec
mov
clc
nop
cmp
std
xchg
loopne
sub
scas
loope
sbb
adc
dec
adc
pusha
push
jg
cmp
gs
and
jecxz
mov
pop
cld
dec
adc
out
xchg
daa
sub
and
mov
into
dec
arpl
into
aaa
repnz
cltd
push
in
push
add
mov
sub
mov
and
shll
jg
mov
in
push
xchg
jecxz
xchg
or
mov
test
cmp
mov
test
pop
and
outsl
jmp
pushf
mov
lcall
fs
inc
shrl
add
or
mov
push
jge
setg
testb
ss
jg
mov
pop
push
ja
in
xor
push
mov
xchg
lds
jno
or
int
push
movsb
addl
xor
subb
sbb
outsb
and
mov
jae
dec
and
aam
les
cs
push
hlt
mov
imul
repz
push
push
add
mov
mov
mov
push
lret
in
outsb
ss
out
lret
test
push
lock
adc
sbb
mov
lods
pop
xchg
or
popf
jge
cltd
arpl
test
sbb
push
jge
cmp
dec
push
rolb
orl
push
mov
shlb
outsb
es
pop
mov
lea
imul
pop
repnz
cld
lret
xchg
mov
decl
jg
arpl
call
fisubs
fcmovbe
and
stos
into
es
ds
add
pop
sbb
aam
outsb
mov
outsl
out
sub
inc
pop
or
jns
les
sub
dec
cld
push
int
jne
add
xor
add
xchg
ljmp
movsb
mov
and
mov
inc
fidivrl
jmp
push
and
ds
or
filds
hlt
enter
and
lds
sahf
ficomps
in
sbb
mov
pop
xchg
les
push
cmp
pop
ss
pop
sbb
ret
aas
lds
cmp
movsl
mov
dec
add
stos
icebp
aam
jmp
cld
and
out
es
sbb
cmp
movsb
xchg
loop
cs
cmpsb
dec
add
dec
push
jp
fsubs
mov
jno
pop
sbb
xlat
neg
mov
roll
sbb
push
pushl
insl
cmp
addr16
adc
dec
mov
cmp
adc
adc
sbbb
ss
xchg
cmc
mov
jo
leave
jo
mov
pushf
cmp
hlt
xorl
stos
jge
inc
enter
dec
mov
adc
lahf
dec
xchg
aas
mov
jg
imull
in
xor
hlt
push
lcall
jmp
adc
xchg
ret
and
ret
xor
lock
imul
shl
xor
fnsave
rcll
cltd
xchg
push
jmp
lods
inc
gs
scas
inc
enter
sbb
fdivrl
xor
popf
push
addb
dec
sbb
pop
arpl
lds
pusha
lds
pop
jmp
insl
in
mov
inc
sbbl
dec
sub
mov
push
dec
xor
scas
js
dec
mov
stos
push
xchg
popf
mov
pop
rclb
pop
pop
stos
lods
and
fcom
rcrb
dec
or
push
push
les
jmp
outsl
shlb
arpl
pop
push
mov
push
dec
add
test
fwait
mov
clc
mov
dec
sbb
add
xor
cli
xchg
js
das
jnp
cmc
xchg
outsl
jne
mov
mulb
sub
ja
testl
ja
pop
jle
shll
inc
push
stc
into
ja
xor
imul
mov
sete
add
mov
pcmpgtb
mov
sbb
out
jl
mov
scas
insl
dec
nop
inc
inc
and
rcrl
sahf
js
cmp
sbb
pop
and
out
jecxz
lret
jmp
cmpsb
je
or
ja
inc
or
leave
add
outsl
xor
je
inc
in
cmpsb
xor
or
in
bound
out
mov
cltd
test
lcall
fsts
test
xchg
imul
out
lret
pop
fisubs
movsl
int
insl
push
cmovb
aas
stc
push
fstpt
sbb
dec
shll
mov
jl
cld
lds
je
dec
xor
add
add
inc
insl
mov
sub
adc
sbb
test
cld
lret
stc
sti
test
gs
push
lahf
jns
mov
jae
shlb
add
loopne
in
loop
inc
test
cmp
adc
pop
ret
cmp
and
lret
popa
or
cmp
push
jbe
xor
mov
add
mov
xor
push
iret
pusha
jne
sahf
pop
mov
call
push
or
mov
idivl
add
repnz
push
push
cld
adc
scas
sub
xor
dec
clc
add
push
loopne
xchg
in
aad
js
sub
mov
enter
mov
rcrl
aas
sub
lret
or
inc
lahf
mov
ucomiss
mov
jnp
cmpl
fsubrs
gs
ljmp
leave
xor
cltd
lods
ljmp
lods
adc
mov
out
xor
mov
gs
or
dec
lea
push
js
sbb
add
dec
aas
sub
sbb
sub
and
stc
pop
and
xchg
and
inc
mov
jnp
roll
fdivp
out
fidivs
sub
dec
jbe
adc
pushf
mov
cld
pop
inc
mov
cltd
jbe
or
adc
es
mov
cmp
test
cmp
xorb
adc
xchg
idiv
inc
pop
push
ficompl
sbb
dec
setl
push
and
push
imul
out
pop
loop
shll
xor
in
ss
push
shlb
mov
int3
mov
repnz
add
xor
adc
sbb
or
iret
aas
das
push
cmp
ja
and
cmp
insb
mov
and
jmp
xchg
pop
push
test
hlt
enter
jmp
mov
and
ljmp
mov
cmp
sub
scas
mov
ficompl
stos
rcrl
mov
aas
hlt
mov
ljmp
jbe
cmpsb
stc
pusha
adc
push
mov
mov
outsb
xor
mov
or
adc
ret
push
enter
ljmp
xchg
les
fidivl
aaa
rcrb
stos
cmp
jle
orl
ds
mov
in
int3
in
bound
inc
dec
fsubrs
dec
out
shll
mov
pop
mov
scas
push
adc
inc
insl
mov
cwtl
adc
fisttps
insb
or
jne
ret
es
movsl
int
adc
sub
pop
rcll
and
jmp
adc
cmp
out
std
mov
movsl
sbb
xor
push
sbb
test
inc
cmpsl
pop
push
fisttpl
add
shrb
movsl
mov
ret
dec
call
sbb
sub
sub
jns
decb
in
cmp
xchg
sub
lea
aad
fld
pop
lcall
mov
mov
fwait
pusha
xor
pop
jmp
call
add
pop
in
cli
push
sbb
mov
sbb
sbb
fildll
cld
jae
andl
dec
mov
ret
daa
xorb
fwait
pop
mov
enter
dec
sahf
jns
cwtl
arpl
lea
xor
sub
pop
mov
and
std
mov
pushf
inc
mov
out
add
bound
repz
out
lahf
cmpsb
mov
fistl
jmp
and
adc
outsl
lods
xchg
pushl
lret
sub
leave
sub
inc
sub
sbb
lahf
inc
jl
mov
into
mov
arpl
sbb
loopne
clc
loopne,pt
js
bound
adc
fs
inc
sbb
sub
sub
and
push
movsb
jno
mov
jle
fdivrl
xchg
mov
dec
shll
cmpsl
or
xchg
sub
pop
dec
mov
sub
jp
ds
cltd
je
loop
cmpsl
into
ror
inc
jne
cmc
js
loop
mov
adc
or
inc
lret
mov
xor
or
adc
push
mov
ja
xchg
or
cwtl
outsl
icebp
xchg
test
stc
adc
cmpsl
repnz
mov
dec
ret
add
gs
xchg
pushf
inc
shr
push
dec
sub
or
dec
jno,pt
mov
loopne
or
scas
push
mov
inc
push
push
pop
cmc
into
sti
add
push
xchg
lret
push
jge
sarl
sbb
cmc
rolb
popf
push
cmc
xor
mov
mov
jl
and
xchg
mov
pushf
aaa
sub
fildll
lret
movb
das
push
dec
bound
add
jg
cli
lods
pop
mov
es
sub
jbe
xor
call
jns
iret
movsb
or
in
mov
sbb
adc
mov
and
shrb
xor
push
lcall
push
push
loop
cmp
adc
ljmp
out
and
mov
xor
int
sub
loope
and
or
push
loop
add
stos
sub
fs
mov
jl
cmpsb
pop
mov
stos
xchg
dec
mov
ret
pusha
dec
inc
ss
mov
inc
add
or
mov
lcall
js
push
jbe
pop
icebp
jg
inc
lock
bound
stc
ds
lds
stc
push
enter
insb
xchg
in
xchg
iret
nop
jae
mov
or
sbb
jge
mov
test
mov
out
pop
mov
jne
pop
scas
adc
sti
aas
bound
jae
jle
cmp
in
cmpsl
lahf
into
mov
ret
mov
ret
and
mov
es
xchg
adc
inc
and
jp
aam
push
pop
into
push
popf
subl
pop
xor
scas
push
jno
je
cwtl
fadds
fcomp
fwait
xor
cs
add
cmp
addr16
xchg
add
in
inc
push
outsl
inc
pop
subb
push
cmpsb
add
mov
call
adc
fcompl
lods
mov
cwtl
call
rcl
rol
and
icebp
loopne
cwtl
pop
daa
inc
test
mov
xor
psrld
or
xor
bound
sbb
cmpsl
sarl
das
and
mov
mov
cmpsl
sahf
adc
outsb
mov
out
popa
test
xchg
das
or
and
mov
repnz
and
cmp
push
xchg
imul
and
dec
mov
movsb
divb
dec
cmp
jbe,pt
adc
inc
mov
sti
cmp
push
push
sbb
in
movsb
es
inc
in
mov
sub
push
dec
leave
je
sub
loop
xchg
adc
jl
cmp
and
mov
sbb
cmp
je
add
cmp
hlt
fmuls
cld
aas
add
mov
cmpsb
cmpb
push
dec
arpl
and
inc
mov
mov
fnstenv
inc
int
into
push
dec
std
in
out
mov
mov
arpl
dec
lahf
movsl
lea
mov
push
dec
mov
cltd
fnsave
popf
and
test
or
into
ljmp
jbe
idivb
int
pop
push
aas
roll
int3
pusha
addb
xor
es
hlt
pusha
test
es
arpl
dec
xchg
jnp
sbb
mov
sti
ret
sahf
mov
adc
das
pop
rcrb
xchg
push
push
sbb
mov
cmpl
js
aas
inc
mov
mov
pushf
je
xchg
or
xchg
and
dec
pop
push
xor
mov
mov
xor
test
in
mov
rorb
dec
inc
les
es
sub
stc
lret
imul
hlt
mov
xchg
nop
jbe
out
test
jae
loope
roll
dec
mov
pushf
dec
lods
xor
cmp
ret
insb
fdivl
lock
imul
mov
cmp
leave
push
mov
jb
lcall
mov
xchg
push
mov
int3
mov
xchg
or
adc
pop
mov
lods
sub
ja
adc
and
push
aas
inc
into
ss
inc
repz
fs
pop
es
and
xor
push
mov
nop
fidivs
sub
out
vandnps
lcall
fisttpl
dec
mov
addb
aam
xchg
cmp
out
rcrl
and
xor
aaa
shlb
xchg
dec
sbb
aad
scas
push
out
in
cmp
enter
insb
rcr
push
pop
cmpsb
pop
adc
mov
mov
int
jl
fwait
cmpsl
mov
inc
sar
pop
ljmp
push
mov
push
cmp
lahf
jmp
xchg
btc
addr16
push
nopl
push
sbb
mov
cli
loope
mov
mov
push
nop
pop
pop
jmp
mov
mov
imul
push
pop
out
add
pop
mov
fbld
pop
inc
inc
xor
pop
aad
push
inc
sbb
mov
inc
mov
xor
imul
decl
shll
repnz
xor
stc
into
sbb
dec
and
cmp
mov
mov
mov
ret
xchg
mov
inc
jae
mov
mov
out
sahf
outsb
popa
fdivr
test
lret
fsubl
in
pop
xor
cmp
add
pop
sub
inc
jmp
into
insl
xor
and
mov
inc
jbe
inc
ud0
lods
xor
hlt
jnp
mov
pop
mov
in
das
or
mov
in
jle
movsb
jecxz
imul
cmp
in
aas
imul
mov
inc
iret
cmc
sbb
and
cmp
clc
and
ds
mov
fs
mov
inc
pop
push
adc
sub
mov
add
xor
mov
sbb
pop
jbe
dec
lods
push
cmp
arpl
xor
dec
mov
addl
fwait
cmp
dec
orl
inc
hlt
test
in
jp
sub
dec
and
in
mov
addr16
adc
movsb
lea
xchg
xor
ds
push
lds
js
pmullw
mov
add
inc
xchg
sbb
roll
int
adcb
js
dec
sti
adc
mul
pop
add
jb
inc
xlat
test
test
outsb
lret
push
inc
mov
mov
mov
adc
push
ss
jbe
push
dec
mov
js
mov
or
mov
jle
xchg
adc
leave
sbb
mov
movsl
sub
iret
inc
push
nop
pop
lcall
add
es
add
hlt
imul
lahf
inc
jo
xchg
ljmp
ss
cmpsl
aas
cmp
lods
adc
ret
stos
mov
stos
out
int
push
jnp
fdivrl
js
jp
jp
loope
outsl
sbb
mov
dec
das
inc
mov
int
sub
iret
stos
adc
jecxz
scas
addr16
inc
and
rolb
mov
dec
insb
mov
inc
push
sub
lods
mov
xlat
es
mov
in
scas
sbb
lret
pop
popa
xchg
cmpsb
mov
daa
xchg
stos
lea
push
cmp
fiadds
mov
xchg
pop
and
mov
outsb
mov
rol
in
xchg
leave
pushf
ljmp
mov
loope
jp
sbb
loop
cwtl
fnop
add
lock
or
xor
loope
std
xchg
dec
cmpsb
int3
repz
lret
clc
stos
fimull
dec
inc
jp
insl
sub
cld
rcl
mov
nop
mov
jno
ja
lahf
repz
cmp
push
pushf
ljmp
fs
mov
add
sbbb
in
es
sbb
xchg
icebp
sahf
push
mov
daa
mov
mov
negb
xor
sti
shrl
loope
dec
in
fwait
jns
addr16
hlt
pop
jg
pop
xchg
pusha
je
addr16
pop
dec
sub
in
sub
push
mov
adc
mov
xchg
andl
jae
arpl
push
xchg
mov
sub
inc
iret
sbbb
cmp
cmpb
fldcw
jb
mov
stos
dec
xlat
fadd
es
js
and
mov
ret
cli
and
push
aas
push
ret
xor
fsubs
jcxz
fildll
in
aas
jg
mov
mov
dec
mov
out
daa
push
mov
nop
testl
cmpsl
cmp
aaa
cmp
insl
pop
icebp
push
repz
pusha
xchg
insl
call
xchg
jae
add
mov
cvtdq2ps
xchg
shll
jl
jl
pop
jno
in
mov
leave
ret
xchg
xchg
aas
in
dec
pop
add
and
mov
adc
icebp
lods
jge
mov
mov
fwait
jmp
ficomps
xchg
cmp
jle
cmp
mov
loopne
sub
push
fnstenv
lcall
aas
jmp
add
clc
lahf
cmp
lahf
mov
scas
cmc
jns
and
rol
push
fsts
inc
push
int3
xor
cmp
sub
lea
mov
jp
out
das
sub
xor
sbb
add
xor
repz
and
decb
leave
enter
stc
sub
adc
pop
es
in
mov
sub
outsl
cli
stos
add
lret
fisttpll
sbb
rol
pop
pusha
inc
loopne
mov
cmp
jl
and
rcr
mov
iret
xchg
cmp
sub
mov
jb
bound
push
dec
fimull
repnz
dec
push
push
les
testb
pop
mov
das
or
arpl
sub
xor
nop
mov
arpl
push
sbb
or
inc
or
rcll
sbb
mov
cmp
sub
cmp
lahf
stc
jo
pop
and
ljmp
mov
ss
push
pop
sub
and
inc
pop
mulb
cmp
adc
call
mov
int
sub
jb
xchg
mov
adc
sub
insb
dec
in
xchg
sbb
clc
sahf
sbb
and
insl
add
jp
cld
hlt
pop
sub
cltd
dec
fists
fbld
sub
mov
in
mulb
incl
dec
loopne
xchg
jbe
shlb
scas
pop
scas
push
fwait
in
test
lahf
inc
dec
mov
push
fs
es
or
mov
daa
test
pop
and
sbb
stc
lods
aaa
mov
ret
test
mov
hlt
loop
sub
ret
push
stos
or
jbe
test
mov
push
loope
out
popa
jns
or
jge
pop
xchg
jbe
cmp
pop
cmpps
ficoml
cmc
std
hlt
xor
icebp
fisubl
notl
pop
das
sbb
mov
push
addr16
push
dec
lods
andb
and
ror
xchg
xchg
arpl
push
dec
mov
pushf
xchg
pop
mov
pushl
or
mov
mov
cwtl
je
dec
outsb
insl
xchg
sub
or
pop
ja
mov
push
cmp
fcmovbe
pop
and
sbb
aad
das
add
pop
sub
test
mov
add
xor
sub
movsl
fs
or
imul
loop
adc
dec
call
sub
sahf
mov
das
cmpsb
out
mov
cmp
adc
dec
adc
pop
mov
in
das
sub
push
shrl
xchg
adc
mov
sub
push
lcall
mov
loope
and
and
xlat
movsl
push
ja
pop
out
test
push
lcall
pop
rorl
in
and
cld
mov
sbb
pop
cmp
add
gs
enter
dec
cmp
jb
and
mov
inc
je
sbb
add
subb
test
jae
push
sti
pause
loope
mov
xorl
push
dec
fst
cmp
jns
test
adc
mov
out
shrl
lods
adc
mov
fdivs
mov
pop
xchg
mov
pop
cli
add
jle
push
cld
xor
out
xor
or
xchg
push
popa
fcmovbe
mov
es
sahf
mov
adc
jbe
sbb
mov
xchg
jmp
pop
movsl
xchg
mov
adc
repz
rcrl
xchg
outsl
pusha
jge
add
push
dec
into
les
nop
lea
scas
stos
wbinvd
mov
inc
mov
ljmp
xchg
cltd
jg
xor
xor
xor
or
stos
mov
hlt
imul
jae
or
int3
out
add
inc
or
ljmp
mov
pop
mov
lret
ret
cmp
mov
out
ja
cmp
jecxz
sbb
rclb
add
ss
dec
pop
iret
fs
cwtl
pop
mov
out
cmp
gs
push
xlat
push
sbb
or
xchg
ret
ja
stos
add
mov
mov
dec
adcl
mov
in
add
leave
mov
lea
xor
push
dec
test
popf
filds
dec
imul
pop
xchg
push
mov
test
add
push
lret
jmp
cmp
adc
rclb
cmc
lea
test
cmp
sbb
ret
jle
or
lods
mov
enter
stos
das
push
jno
aad
mov
dec
adc
ficoml
add
xchg
movsb
sbb
orl
lods
sub
xor
or
inc
fstpl
dec
mov
testb
pop
test
imul
mov
pop
rcr
mov
lock
mov
inc
cmp
data16
je
es
cbtw
test
dec
outsl
cmp
out
sbb
jo
stos
fiaddl
sahf
xchg
into
in
out
mov
lods
stos
dec
fstps
jnp
mov
mov
sbb
push
in
repz
push
data16
xchg
sub
daa
ds
mov
inc
popa
xor
push
and
pop
cmpsb
icebp
cmp
inc
and
and
cmp
lods
repz
xchg
xlat
pop
out
mov
sub
cld
and
xchg
enter
ja
adc
lea
andl
mov
jne
xlat
scas
lds
dec
fmull
mov
add
iret
push
xchg
adc
gs
push
in
pop
push
xchg
mov
adc
fwait
stos
sbb
cmp
movsb
dec
mov
mov
or
push
aad
fstpl
or
sbb
outsb
mov
pop
add
jg
bound
fsubl
sbb
leave
sahf
mov
sub
pop
or
int3
or
test
imul
stos
div
mov
test
mov
add
rclb
lret
loopne
fisubl
loope
mov
xchg
adc
dec
cmp
jno
push
jnp
outsb
cmp
loope
es
jmp
dec
inc
cmc
xchg
lea
mov
mov
call
and
or
loopne
inc
fbld
movsl
aam
and
pop
push
sbb
call
enter
pop
sbb
fiadds
sbb
insb
mov
leave
nop
rcrb
mov
loope
test
call
out
xor
push
pop
add
mov
ja
cs
jp
shlb
adc
cld
and
cmp
aas
jmp
daa
jbe
ret
cmp
js
dec
pop
icebp
xchg
punpckldq
add
hlt
inc
das
xor
gs
sub
aaa
es
pop
pop
adcb
push
sub
push
imulb
inc
inc
aas
aas
jns
pop
add
je
xchg
xchg
fwait
add
jl
or
push
mov
dec
cmp
inc
xchg
loop
ss
loopne
daa
and
or
fisttps
mov
pushl
scas
xchg
xor
or
add
lret
inc
push
jne
movsb
mov
dec
in
outsb
lret
mov
idivb
cmc
ds
js
aas
pop
std
dec
cmp
mov
dec
or
pop
cmc
push
jns
pop
in
shlb
aam
push
cmpsb
and
das
stos
arpl
xor
inc
pop
ficoml
inc
lds
push
pop
dec
and
xor
pop
lds
inc
icebp
fcoms
xchg
mov
jbe
and
fbld
jmp
adc
push
adc
loop,pt
and
lods
mov
ret
dec
cmpsl
loopne
aaa
sar
shlb
inc
jne
fldt
dec
js
out
mov
fstl
outsb
movsb
imul
mov
push
aaa
adc
dec
adc
popf
fildll
subl
pop
jl
or
xchg
cmp
xchg
es
mov
xchg
inc
data16
inc
pop
inc
push
imul
mov
cmpsl
shr
out
sub
stc
adc
cmpsb
mov
hlt
push
out
jns
mov
and
test
in
repnz
jo
sub
push
pop
insb
xor
test
jg
into
arpl
sbb
inc
into
outsl
fdivrl
and
pop
push
fmull
jge
rclb
stos
lahf
pop
jne
add
mov
pop
and
mov
xor
cld
mov
jns
or
and
pop
jl
or
pusha
mov
rcrb
int
std
ja
add
cwtl
shrb
mov
mov
ds
pop
cmp
clc
add
jns
inc
jo
into
stos
dec
fwait
push
or
inc
test
mov
cmp
out
fs
push
xor
out
mov
leave
add
add
in
inc
popf
aaa
mov
stos
je
repz
std
inc
in
sub
mov
pop
jmp
mov
sub
pop
inc
insl
insl
xchg
cld
sbb
sbb
outsb
mov
pop
push
xor
dec
outsb
xor
jnp
sbb
loope
pop
rcrb
xchg
or
adc
icebp
pop
jecxz
hlt
pop
test
pop
cltd
and
adc
mov
add
cmpsb
repnz
xor
mov
jmp
adc
loope
in
mov
mov
rol
pop
orb
sbb
cmpsb
js
ljmp
mov
insb
mov
push
sbb
lods
rcr
notb
pop
pop
and
inc
lock
push
call
insb
xor
adc
call
push
lea
movsb
outsb
sahf
scas
mov
push
cmp
sahf
add
mov
data16
sub
xchg
ljmp
xchg
jmp
fistpll
out
hlt
mov
mov
xchg
sbb
inc
shlb
stc
nop
and
adc
fwait
mov
mov
scas
jb
inc
and
mov
adc
cmp
push
loop
inc
enter
sbb
or
andl
or
movsb
and
push
pusha
mov
cs
mov
ffreep
leave
gs
and
dec
loope
lea
mov
jnp
push
xchg
jno
out
lcall
cmp
mov
jmp
shrb
aas
out
sub
sbbb
adc
pop
xor
imul
insl
sbb
nop
test
out
or
jge
ror
cmp
ret
out
and
rcrb
stc
lock
jne
dec
sbb
mov
sbbb
outsl
test
shl
inc
cs
mov
and
out
inc
clc
out
xor
das
in
or
adc
cli
popf
jae
popf
and
aad
push
stos
cmpsb
inc
imul
mov
gs
xor
lahf
fnstsw
cmpsb
dec
dec
imul
sub
pop
pop
gs
test
or
add
push
jo
cmp
push
fwait
sbb
add
mov
out
pop
fcomi
test
popa
loopne
out
out
inc
or
jle
cltd
xor
lock
fyl2xp1
dec
lcall
mov
icebp
test
add
xchg
mov
xor
negb
mov
ja
jbe
push
daa
xchg
sub
clc
mov
xor
enter
mov
or
dec
clc
pop
push
sti
arpl
inc
cvttps2pi
out
lea
push
popf
dec
mov
out
aas
push
mov
sarb
jmp
pop
and
hlt
mov
sahf
jns
sub
mov
inc
stc
cltd
psubq
call
daa
mov
adc
outsl
clc
push
scas
pusha
inc
cs
xchg
inc
sub
and
dec
xlat
mov
mov
pusha
les
mov
push
rcrl
loope
push
mov
decl
scas
movsb
loop
pop
dec
pop
mov
cmp
pop
xchg
cmpsb
xor
push
sub
dec
cli
mov
packsswb
sbb
mov
cltd
mov
fiadds
sub
mov
clc
dec
push
jge
inc
sti
je
shlb
jb
xchg
lcall
icebp
frstor
test
jbe
pop
call
loope
cmp
mov
iret
les
push
or
loop
ret
pushf
inc
inc
fdivrl
cs
loopne
sbb
pop
jl
and
adc
sub
aad
jl
add
int
je
pop
icebp
jg
push
and
sbb
mov
xchg
mov
popa
aas
stc
mov
sub
jmp
pop
rol
jno
xchg
or
cltd
aam
xchg
xchg
popa
dec
imul
inc
xor
shrb
negl
imul
mov
and
pop
mov
das
sbb
push
call
das
sbb
idivb
push
scas
jle
rorb
inc
jmp
and
faddl
dec
repz
test
push
pop
movsl
inc
sbb
insl
cmp
cmpsl
test
ljmp
outsb
lret
rorb
out
iret
or
jecxz
dec
jne
orb
and
cmp
add
int
mov
jp
adc
stos
cmp
nop
imul
cmp
fmull
cmp
fxch
sbb
cmc
filds
sbb
or
cmp
and
sbb
jbe
scas
add
int3
mov
cmp
push
cld
out
ds
mov
inc
lods
je
mov
and
sbb
mov
fldl
jno
mov
push
stos
add
xor
arpl
mov
loop
lds
inc
test
or
cmp
imul
lea
outsl
push
out
sub
adc
lods
jg
test
or
mov
inc
ljmp
inc
lret
cmpsb
push
adc
add
xorl
shrb
popf
xlat
mov
adc
outsw
cmpsl
and
testb
aam
mov
pop
push
inc
lahf
pushf
pop
sbb
leave
mov
and
pop
rol
sti
data16
adc
mov
or
jnp
xor
scas
add
dec
jmp
ret
mov
in
xchg
aas
push
shll
outsb
sbb
pop
jb
xor
pusha
and
mov
je
hlt
cld
jmp
or
sti
cmpsb
in
push
pop
pop
mov
sub
test
pop
dec
sarb
push
mov
sub
push
imul
cmpsl
dec
jnp
pop
jbe
push
inc
fcmovbe
or
movsb
mov
orl
push
fcomps
test
daa
xchg
cs
pusha
jnp
inc
xor
movsl
lret
rcrl
cmpsl
cltd
inc
arpl
inc
jge
jae
ficomps
stos
icebp
sub
hlt
sbb
sbb
xchg
js
jnp
inc
sbb
add
sbb
fildl
dec
mov
push
add
and
ss
es
jne
add
loop
mov
jmp
fs
mov
jg
outsl
repz
mov
xor
jmp
fdivs
jno
jge
pop
fcomp
push
push
adc
loope
cmp
movsl
bsr
or
notl
lock
addr16
add
inc
jecxz
call
mov
sbbl
xchg
movsb
sub
fldl
jmp
and
xlat
mov
ss
push
push
mov
sub
mov
sbb
push
movsl
insb
sbb
ja
outsb
adc
dec
push
ss
fs
xchg
xchg
and
popa
mov
pop
fsubr
jae
mov
bound
lcall
test
addb
sbb
outsl
fdivs
shlb
mov
sub
lods
sbb
xor
xchg
out
jl
jnp
jb
insb
or
sbb
cmc
clc
dec
lods
mov
ret
push
jbe
inc
fstpl
repz
cltd
insl
cmpsb
icebp
movsl
or
push
out
and
repnz
ss
push
cmp
jle
enter
cmpsb
sbb
jge
popa
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
or
mov
add
mov
