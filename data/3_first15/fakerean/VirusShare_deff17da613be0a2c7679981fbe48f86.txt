add
test
je
xor
mov
jmp
push
mov
mov
push
mov
mov
shr
and
push
push
call
test
js
pushl
mov
push
call
test
js
pushl
mov
push
call
test
js
pushl
call
test
pop
js
lea
push
call
test
js
lea
push
call
add
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
pushl
call
test
pop
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
push
and
push
push
mov
call
mov
and
neg
sbb
and
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
enter
mov
mov
push
push
mov
push
push
mov
mov
cmpl
mov
jge
lea
call
xor
test
je
xor
test
js
lea
mov
mov
call
lea
mov
call
lea
xor
call
add
mov
lea
mov
mov
lea
push
mov
mov
movl
movl
mov
movl
mov
mov
mov
push
push
call
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
lea
push
push
mov
call
test
js
mov
cmpl
jge
mov
mov
mov
popw
inc
add
add
call
test
js
mov
cmpl
jge
push
call
add
cmp
je
mov
mov
mov
push
push
mov
lea
push
call
mov
cmp
je
push
call
add
mov
cmp
mov
jne
cmp
je
mov
lea
mov
mov
mov
mov
push
lea
lea
mov
movl
movl
mov
call
add
test
js
mov
push
lea
push
lea
push
mov
call
test
js
mov
cmp
jne
cmp
jne
mov
push
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
add
jne
mov
mov
pop
pop
pop
pop
xor
call
add
add
push
mov
sub
push
mov
push
push
xor
push
mov
call
push
pushl
mov
call
test
js
push
lea
push
pushl
mov
call
test
js
cmp
mov
je
push
lea
push
pushl
mov
call
test
jne
push
lea
sti
rolb
lret
adc
mov
add
add
add
inc
je
pushl
mov
call
test
jne
xor
inc
test
movl
movl
mov
movl
movl
mov
je
movzwl
push
push
push
lea
call
pop
pop
push
pushl
mov
call
testb
mov
jne
testb
jne
test
jne
lea
mov
xor
cmpb
jne
cmp
mov
jne
mov
push
pushl
pushl
mov
call
pop
pop
pop
leave
ret
push
mov
andl
test
jne
pop
jmp
push
mov
mov
call
cmpl
je
mov
or
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpb
je
push
push
mov
mov
push
push
call
cmpb
push
je
mov
push
push
call
movzwl
push
push
mov
push
push
lea
movl
movl
mov
movl
mov
mov
call
mov
lea
mov
lea
add
mov
lea
lea
mov
mov
push
lea
xor
mov
push
lea
push
mov
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
cmp
je
mov
mov
cmp
jbe
xor
mov
jmp
jmp
lea
mov
add
mov
mov
test
lea
mov
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
movl
movl
mov
call
push
mov
mov
mov
movl
movl
mov
call
lea
mov
mov
xor
lea
mov
add
mov
lea
mov
lea
mov
mov
lea
mov
mov
push
lea
mov
push
lea
push
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
add
jne
mov
sub
jne
pop
pop
pop
pop
add
ret
mov
push
push
jmp
movsbl
and
ret
mov
test
jne
test
je
mov
ret
xor
inc
ret
xor
ret
mov
call
cmp
jae
mov
call
ret
mov
test
jne
mov
ret
and
ret
add
push
xor
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
cmp
jne
cmp
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
mov
push
mov
push
mov
push
lea
mov
call
fildl
mov
sub
fstps
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
flds
mov
fld
fdivrp
fxch
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
fidivrl
mov
sub
mov
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
mov
fdivs
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
mov
imul
mov
imul
pop
mov
mov
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jg
xor
xor
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
fmull
inc
add
jl
insb
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
xchg
jmp
adc
inc
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
mov
in
push
mov
test
je
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
cmp
inc
add
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
out
inc
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
and
inc
add
add
add
add
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
in
inc
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
dec
jmp
fidivs
push
or
adc
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
clc
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
daa
aad
add
fidivs
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
ret
or
inc
sbb
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
in
or
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
es
add
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
cmp
inc
add
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
inc
testb
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
or
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
incl
in
adc
add
jne
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
test
inc
add
add
test
or
test
dec
and
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
test
cmp
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
push
push
call
mov
add
in
pop
jnp
out
add
cmpsb
push
mov
add
test
add
add
roll
add
mov
pushaw
stc
add
add
in
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
std
jnp
add
add
std
iret
int
add
add
add
cld
cmc
mov
fists
outsl
add
xchg
in
sub
pop
popl
push
push
push
push
push
push
push
lea
push
call
jecxz
add
add
mov
add
lods
add
jle
jmp
nop
add
xchg
add
outsl
shll
int3
jno
lods
testb
sub
pop
push
push
push
push
push
push
push
push
push
push
call
jecxz
add
cmc
scas
xchg
out
add
add
push
arpl
cli
jae
add
add
loop
add
ret
pop
add
mov
add
push
add
mov
xchg
add
add
lahf
add
add
add
cwtl
out
add
push
lea
push
push
call
add
in
test
add
add
andl
jb
add
incb
fcomip
loope
imul
loop
out
add
add
lcall
push
push
push
push
call
ljmp
add
addl
add
push
imul
test
add
mov
clc
push
add
data16
mov
ja
imul
add
mov
add
outsl
add
stos
add
jo
add
add
add
sub
pop
call
push
lea
push
call
movsl
scas
mov
out
add
xlat
stos
xchg
fld
hlt
movl
add
pop
add
insb
add
std
mov
jle
add
out
add
lds
mov
add
add
add
rolb
mov
add
lahf
mov
test
test
mov
nop
movsb
mov
call
push
push
push
call
imul
fsub
lods
out
in
add
add
insb
add
add
jl
add
movsl
add
mov
mov
push
sub
pop
push
push
push
lea
push
call
mov
push
jle
ficoml
cwtl
mov
cli
add
nop
les
loopne
add
cltd
icebp
shl
cltd
mov
fs
mov
pop
int
xchg
sub
pop
call
jmp
push
push
lea
push
call
add
in
add
add
add
add
jno
in
mov
data16
loopne
add
int3
pop
add
add
scas
add
mov
in
hlt
pop
ret
push
push
lea
push
push
push
push
push
call
add
add
add
outsl
xchg
pop
lods
int
add
add
pop
les
add
sti
int3
in
imul
pop
add
xchg
add
cmpl
add
popf
add
mov
add
xchg
shll
in
in
lcall
inc
hlt
mov
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
mov
mov
xchg
add
insb
add
insb
xlat
add
xlat
add
add
add
out
jne
add
jge
add
lcall
pop
in
push
lea
push
push
push
push
push
push
push
call
mov
add
add
add
into
add
add
pop
jbe
bound
add
mov
out
movsl
ljmp
xlat
int3
add
mov
sub
pop
add
push
push
call
add
add
add
pop
add
add
mov
cli
add
add
sti
jecxz
add
fadds
add
imul
add
mov
add
sub
pop
add
push
push
push
push
push
call
movsb
add
add
ret
call
add
add
les
cwtl
test
mov
cwtl
add
xchg
jge
mov
pop
lds
add
add
add
jecxz
rcrl
stc
icebp
push
add
mov
movsl
add
aad
add
add
popa
sub
pop
mov
xor
push
push
dec
push
xor
add
add
sub
sub
lea
pop
xor
dec
shl
pop
push
lea
push
lea
push
push
push
push
call
loop
add
repnz
add
mov
jecxz
stos
js
add
add
pop
add
fbstp
nop
push
mov
fsub
add
mov
cli
sti
jl
xchg
xchg
cmpsb
jmp
lret
jnp
xchg
clc
addr16
in
call
pushl
push
push
push
push
push
lea
push
call
add
add
arpl
add
mov
push
stos
out
out
xchg
add
add
in
add
lret
lcall
mov
xchg
pop
jne
jl
stos
mov
add
push
xchg
add
xchg
mov
xlat
add
mov
add
lcall
push
push
push
push
lea
push
lea
push
push
push
call
stos
add
out
mov
rcr
pushf
mov
test
cltd
cltd
out
cli
mov
loopne
jge
add
jb
mov
add
insb
mov
mov
add
add
add
iret
mov
pop
push
shlb
jp
push
fwait
testb
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
call
fwait
add
xchg
jae
add
mov
mov
push
add
stos
jne
add
add
flds
add
roll
add
push
fwait
add
mov
shrb
pushf
pop
jnp
scas
pop
add
mov
loopne
lcall
inc
call
push
push
push
lea
push
push
call
add
mov
stos
add
nop
faddl
add
mov
mov
add
add
fwait
repnz
add
mov
mov
filds
xchg
mov
arpl
lea
mov
cltd
add
insb
add
add
ja
mov
mov
add
outsl
je
outsl
movb
call
jnp
push
mov
out
push
call
mov
add
add
cli
add
mov
add
cltd
sarb
jle
mov
add
js
add
push
out
mov
test
roll
add
jne
add
jno
push
add
in
scas
add
add
pushl
push
push
push
call
pop
in
and
iret
add
push
clc
push
orb
pushf
add
pop
push
add
cwtl
aam
mov
in
add
pop
lcall
add
loop
add
aam
mov
lods
ret
add
sar
add
jne
call
push
push
push
lea
push
push
push
lea
push
push
push
call
sti
rolb
add
add
add
ja
jb
pop
addb
push
add
add
add
cld
add
jmp
mov
cltd
outsl
add
sub
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
call
jne
push
add
push
push
push
stc
add
iret
add
cmc
addr16
iret
add
add
icebp
fcoml
pop
add
mov
movsl
add
add
lods
mov
stos
stos
add
in
mov
add
fdivs
in
loopne
lcall
jne
push
push
push
push
lea
push
call
add
add
add
add
aam
xchg
int
add
push
test
add
lds
jecxz
popf
addb
cmp
add
cwtl
mov
enter
incl
sarb
or
xor
lea
shr
sub
sub
pop
not
sub
lea
shl
pop
push
push
push
call
add
fucomp
add
jno
xchg
outsl
add
out
in
pop
jle
add
sti
out
sarb
lock
add
add
je
add
add
jecxz
jmp
add
add
push
in
hlt
pop
pushl
push
push
push
push
push
push
push
push
call
mov
shl
add
lods
pop
add
add
add
mov
test
add
jo
scas
sar
fbld
mov
lahf
push
aam
add
add
add
xchg
test
int3
add
mov
add
push
loopne
lcall
cmpsl
push
add
addr16
lea
push
lea
push
push
lea
push
lea
push
push
call
add
lcall
add
iret
xchg
aam
jo
jno
movb
add
add
add
add
lret
add
add
add
in
lret
mov
add
test
add
shlb
sub
pop
push
push
push
add
add
push
and
add
sub
sub
inc
pop
dec
shl
ror
add
pop
push
push
lea
push
push
call
roll
add
add
lret
add
mov
test
pop
shl
hlt
test
flds
add
add
out
cltd
add
notl
add
add
rclb
add
add
bound
lcall
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
sahf
add
in
add
add
jl
in
mov
add
add
cli
jp
jmp
cmc
filds
jns
js
ljmp
fiaddl
push
mov
mov
push
addl
imulb
jge
out
add
lock
in
fdivr
lcall
add
rclb
jg
push
push
lea
push
lea
push
push
call
add
add
add
pop
add
add
imul
in
jle
mov
add
aad
fidivl
add
add
add
add
pop
rolb
mov
mov
add
pop
cmpsl
add
add
add
add
add
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
int
mov
je
mov
mov
fadds
add
cli
add
add
int3
add
add
add
leave
add
pop
add
gs
add
test
test
push
mov
add
mov
filds
add
ljmp
jecxz
int3
pushf
mov
mov
mov
fdivr
lcall
push
push
push
push
call
fbstp
jl
test
jns
shr
out
mov
add
add
xchg
add
loop
mov
call
lret
add
fst
icebp
lods
add
add
jp
xchg
bound
mov
pop
add
ret
push
add
scas
rolb
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
xchg
popf
shll
out
add
popl
ret
mov
mov
lcall
add
movsl
mov
jl
fsubrl
cltd
lcall
add
pop
hlt
push
push
lea
push
push
push
lea
push
lea
push
call
js
mov
add
mov
add
movsb
add
clc
sti
loope
out
bnd
add
gs
les
add
movsb
push
int3
add
add
add
jne
cltd
xchg
add
in
icebp
sub
pop
add
push
push
call
mov
popf
cwtl
jnp
in
cmp
jne
xchg
jge
movsl
lcall
mov
add
sahf
pop
jo
pop
add
add
shll
pushf
rolb
add
icebp
out
sub
pop
add
add
push
push
lea
push
call
add
add
push
lahf
add
movsb
add
add
xlat
outsl
fsubl
add
add
pop
lea
add
ficoml
cwtl
pop
jns
popl
add
arpl
stos
add
push
add
mov
fwait
cli
sub
pop
mov
xor
push
push
lea
push
lea
push
push
call
into
mov
add
sti
ljmp
mov
imul
mov
faddl
xchg
fwait
fwait
insb
add
gs
add
add
mov
in
in
lcall
jne
push
push
push
push
lea
push
push
lea
push
call
imul
jge
rcrl
mov
cli
je
sahf
add
mov
add
xchg
repnz
addr16
lods
imul
mov
cwtl
mov
mov
loopne
ljmp
loopne
cli
popf
add
add
fs
pop
addl
add
int
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
call
out
fs
out
add
push
add
add
loopne
out
loope
int3
add
add
mov
add
pop
add
pop
add
mov
test
cli
add
lock
push
push
push
push
call
push
pop
fldl
add
leave
xchg
incb
add
in
add
cltd
lds
jbe
sub
shll
cmc
rolb
add
jl
push
add
lret
mov
add
fisubs
add
jnp
add
add
fsts
cmc
sub
pop
pop
mov
xor
push
push
push
push
lea
push
call
push
out
rcrl
aad
mov
add
add
add
mov
mov
filds
shl
jecxz
xchg
add
jmp
add
add
hlt
push
xor
mov
add
push
icebp
jo
test
in
pop
int3
add
test
popf
sub
pop
push
push
push
push
lea
push
push
push
call
add
out
jbe
pop
mov
pop
flds
pop
imul
add
add
add
add
add
add
add
pushf
mov
lock
out
in
call
mov
xor
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
jl
mov
popf
jb
loopne
data16
out
fiadds
cli
lds
lock
mov
mov
mov
add
add
jns
add
add
add
stos
mov
rcrb
add
out
mov
testb
jge
add
loop
int3
sub
pop
sub
push
push
push
push
lea
push
push
push
push
call
jbe
mov
add
into
add
push
rolb
add
hlt
jo
fstpl
rol
add
mov
push
int
in
add
sti
add
stc
add
popl
lret
add
add
iret
test
test
add
add
lcall
rep
push
push
push
push
push
push
push
push
call
jno
mov
js
add
in
add
fnsave
lods
add
addr16
mov
add
push
arpl
mov
stos
fwait
add
add
add
je
mov
mov
scas
hlt
sti
add
push
mov
rclb
xchg
add
sub
pop
pop
mov
push
lea
push
push
call
sti
mov
clc
pop
add
cli
xchg
jle
jecxz
mov
mov
std
idivl
add
pop
add
cmpsb
cmpsb
add
add
test
int
jge
push
add
mov
add
mov
jns
popa
pushf
xchg
std
ljmp
addb
xchg
sarl
in
hlt
lcall
pop
in
push
push
lea
push
call
mov
add
cmc
sti
mov
fistps
jp
add
fisubs
add
fstps
imul
in
js
in
hlt
pop
add
add
push
lea
push
push
push
call
add
add
add
clc
add
cli
add
add
cmc
add
jmp
cmpsl
call
lods
add
add
mov
js
add
xchg
sub
pop
mov
push
push
push
call
fiadds
add
cltd
add
cmpl
add
rorl
add
filds
les
lds
xchg
xchg
xchg
add
cmc
out
lahf
pop
add
push
add
clc
lcall
add
push
push
push
call
jge
add
mul
add
and
push
popf
stos
add
xchg
add
test
addl
mov
mov
fiadds
add
add
add
lcall
les
push
push
call
add
std
loopne
mov
loopne
add
pusha
add
ljmp
add
add
add
popa
rolb
add
add
mov
hlt
add
add
mov
in
hlt
lcall
push
and
repnz
push
push
push
push
lea
push
push
lea
push
push
push
call
cmpsl
push
add
test
add
out
cmpsb
jbe
add
scas
icebp
insb
mov
add
add
pop
imull
mov
cmpsl
add
rorl
lcall
dec
sub
pop
jae
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
add
lahf
add
jnp
add
mov
in
mov
arpl
xchg
add
imul
add
mov
sub
pop
xor
push
push
push
push
push
push
lea
push
push
call
add
fcmovu
push
add
add
mov
add
add
xchg
mov
pop
imul
add
add
xchg
leave
add
xchg
scas
rolb
add
mov
js
loop
push
add
arpl
jb
add
add
in
add
repnz
add
imulb
add
sub
pop
add
push
push
lea
push
push
push
push
push
lea
push
call
bound
add
addr16
add
add
jmp
mov
pop
add
pushf
lods
fisubrl
add
mov
arpl
les
mov
bound
ret
andb
int3
push
call
add
pop
lret
add
cbtw
add
add
add
pushf
jmp
mov
add
stos
xchg
cmpsb
add
test
push
jb
mov
add
add
push
sahf
test
testl
add
xchg
add
cli
mov
add
call
jmp
out
fwait
add
add
xchg
movsl
imul
clc
lcall
rcll
repz
test
add
add
pop
add
fiadds
pop
fwait
add
jbe
mov
outsl
mov
mov
jae
jo
add
pushf
add
lods
cwtl
pop
rcrl
sub
pop
mov
push
push
shr
shr
push
and
add
shr
sub
sub
pop
add
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
pop
jl
fwait
add
mov
jnp
cli
lea
add
int3
shl
add
fisubs
jp
ja
test
lcall
jne
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
xchg
fnstcw
add
testb
fisubs
add
add
fstpt
leave
add
xorl
movsl
sub
pop
call
push
lea
push
push
push
push
push
push
call
loope
movsl
push
mov
mov
add
add
add
jl
jb
add
cmpsl
push
xlat
add
cli
add
add
std
outsl
add
add
add
add
add
add
push
add
mov
add
lcall
add
sub
add
rol
lret
cmp
fcoms
into
incl
sub
add
shrl
je
or
fadd
jecxz
shr
pop
ror
add
pop
push
ror
sub
sub
pop
push
push
push
call
add
add
mov
lret
add
xchg
add
mov
add
add
addr16
jecxz
repnz
addr16
stos
push
mov
in
clc
pop
push
call
push
lea
push
push
push
push
push
push
push
push
lea
push
call
jge
add
stos
out
icebp
cmpsl
filds
test
pop
mov
pusha
into
pusha
jae
add
add
loope
add
filds
add
add
xchg
data16
lahf
jae
add
add
add
add
call
add
icebp
popf
pop
push
arpl
mov
in
fdivr
lcall
clc
push
shl
pop
push
push
add
pop
push
push
push
push
push
push
lea
push
call
add
lds
test
nop
mov
add
sar
mov
gs
je
loope
add
out
movsl
incb
add
jp
int
test
repnz
aad
clc
fisubl
outsl
repnz
pop
add
push
add
lcall
pop
hlt
add
push
shl
add
pop
add
push
push
push
lea
push
push
push
call
push
jl
lahf
xchg
rolb
lods
add
add
jecxz
add
add
add
add
xchg
pop
roll
sti
add
xchg
add
js
add
push
test
addb
mov
sahf
popa
rolb
add
in
call
add
push
push
push
push
call
lcall
add
mov
push
mov
stc
add
cltd
jbe
test
rorl
jne
add
cli
add
xchg
into
scas
add
add
in
lock
lcall
jae
push
push
lea
push
push
push
call
iret
add
pop
add
fs
in
cmc
xchg
add
lcall
std
mov
addl
in
push
xchg
in
repnz
out
stos
mov
add
add
add
movsb
add
add
stc
add
std
add
add
lcall
xor
push
push
call
add
into
add
nop
aam
faddl
add
fisttpll
scas
fisubrl
insb
lods
add
cmpsb
mov
add
xchg
ljmp
jno
into
jl
imul
add
pop
sub
pop
add
push
add
shl
sub
pop
add
push
lea
push
push
lea
push
push
push
push
call
jnp
out
add
push
mov
cmc
add
lcall
mov
add
mov
push
lret
cmc
xlat
push
add
testb
add
incb
jb
lahf
mov
add
shrb
add
scas
add
add
loope
je
jp
sub
pop
push
mov
push
push
push
push
push
push
lea
push
push
push
push
call
push
fadds
mov
xchg
cmpsb
testb
test
add
scas
push
movsl
sarl
xchg
xchg
not
add
mov
jl
add
add
xchg
mov
push
clc
pop
add
add
pop
xor
push
push
push
lea
push
push
push
call
add
pop
je
out
cmc
mov
mov
cmpsl
ja
outsl
std
add
add
pushf
arpl
les
andb
add
sub
pop
add
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
add
add
push
mov
xchg
pop
call
aam
add
lods
movsb
push
add
add
add
sahf
jno
mov
fistps
add
add
add
lock
push
sub
rol
pop
mov
push
push
push
lea
push
push
call
lret
add
out
movl
add
fadds
pop
add
add
data16
imul
mov
mov
add
pusha
add
mov
fsubs
add
add
push
js
pushf
mov
test
insb
lcall
or
push
lea
push
call
pushf
lret
jecxz
outsl
nop
pop
je
mov
mov
add
push
xchg
add
mov
add
add
imull
addb
pop
add
push
push
push
push
call
nop
add
xchg
pop
add
add
add
test
addb
add
add
mov
add
mov
mov
cwtl
mov
test
mov
mov
jo
add
js
add
add
mov
pop
add
sub
pop
rep
push
shr
pop
mov
xor
push
xor
pop
or
je
push
push
push
push
call
enter
jno
mul
fucomip
push
xchg
js
add
jecxz
mull
cwtl
add
mov
add
mov
jmp
incb
jp
add
fwait
cltd
xchg
xchg
mov
arpl
mov
push
push
lea
push
lea
push
push
push
push
call
pushf
scas
jb
jns
add
jle
add
subl
jne
add
call
add
add
fadds
push
xchg
add
lahf
sarb
test
mov
addb
ret
movl
push
push
ja
in
add
add
xchg
jns
lret
subl
mov
iret
pop
shl
in
call
push
push
push
call
lock
outsl
pop
add
jecxz
push
add
andl
add
roll
push
mov
mov
fmuls
sub
pop
add
push
lea
push
push
push
push
call
mov
add
add
in
test
add
sar
clc
xlat
fwait
push
mov
add
add
xchg
add
jle
in
fwait
add
add
pop
push
repnz
popa
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
call
add
add
pop
add
fistpl
add
xor
cld
add
add
add
stos
mov
pushf
xchg
mov
sub
pop
xor
push
push
push
push
push
push
push
push
call
add
add
notl
pop
add
jbe
into
push
loop
ja
mov
leave
addl
mov
add
add
add
loope
sub
pop
add
push
push
call
ja
xchg
add
sub
test
add
mov
add
js
pop
fnsave
add
jmp
push
lods
add
icebp
cltd
cwtl
add
mov
push
add
scas
mov
in
add
pop
add
push
not
dec
pop
add
push
sub
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
xchg
in
add
push
add
xchg
leave
pop
add
mov
jae
fiadds
mov
cmc
add
lret
add
add
loop
cld
in
add
add
in
add
cli
scas
in
bnd
add
add
pop
mov
mov
pop
lods
iret
add
movsb
repnz
lcall
inc
or
push
push
pop
add
push
not
sub
lea
pop
pop
rep
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
mov
out
add
stc
add
scas
sti
gs
add
mov
jp
bound
mov
in
fcompl
dec
sub
push
push
ror
add
pop
or
je
push
shl
add
rol
pop
mov
push
push
push
push
push
lea
push
call
xchg
add
add
cmpsl
add
insb
ja
sahf
mov
js
add
sti
add
xchg
hlt
mov
add
imul
sub
pop
add
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
pushf
fs
bound
push
add
filds
add
enter
les
add
les
add
mov
into
add
call
add
out
xchg
add
add
add
add
add
movb
add
push
pop
rep
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
fcoml
scas
faddl
lods
scas
andb
scas
mov
mov
rolb
add
fwait
rcl
add
mov
mov
in
fdivr
lcall
push
push
sub
push
or
inc
add
xor
sub
sub
lea
not
lea
shl
pop
dec
add
pop
push
add
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
call
add
jge
add
add
add
popf
add
add
push
fiadds
add
add
add
out
add
pop
mov
mov
leave
pop
add
jmp
int3
jmp
jnp
add
add
add
sahf
push
add
push
mov
mov
push
push
push
push
push
push
push
call
ja
mov
or
shlb
imul
jle
lds
aad
add
push
add
lcall
inc
and
push
inc
sub
shr
pop
jmp
push
push
push
push
push
push
push
lea
push
push
call
fs
divb
xchg
push
fldl
pop
add
movsb
mov
add
add
fwait
add
mov
je
mov
sahf
add
cmpsl
cmpsb
add
add
add
sub
pop
push
push
add
add
sub
pop
mov
add
push
push
push
lea
push
push
push
push
push
push
push
call
fwait
xchg
sbb
std
add
add
add
xchg
add
pop
add
push
pop
add
clc
jae
cltd
cmpsb
add
mov
in
fcomps
push
push
lea
push
lea
push
push
call
jecxz
add
int
rolb
flds
int
xchg
add
mov
add
add
pop
mov
add
out
add
cli
add
mov
cmpsb
add
in
add
mov
add
add
add
cmc
push
jbe
in
in
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
data16
add
les
out
shr
add
lock
add
sahf
jecxz
add
add
clc
ljmp
arpl
test
add
add
scas
addl
add
sub
add
addr16
fs
fs
ja
add
push
add
pop
mov
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
movsl
add
nop
add
add
xchg
add
test
xchg
loop
stos
jmpw
sahf
add
xchg
ficoml
loop
out
add
xchg
data16
jo
add
jmp
mov
rol
xchg
add
scas
mov
add
add
xchg
pop
sub
pop
pop
push
push
push
push
push
call
out
data16
add
add
add
mov
fwait
aad
sahf
push
xchg
add
add
sub
pop
pop
push
push
push
push
call
add
fisubl
scas
add
repnz
xchg
adcl
add
mov
add
add
gs
add
add
pusha
push
lds
add
add
add
add
add
add
jp
mov
add
lea
jle
add
leave
push
dec
shr
pop
ret
push
push
call
mov
cld
addb
add
mov
fnstenv
add
xchg
test
push
jge
int
rolb
mov
add
jno
add
mov
sbbb
out
jle
push
scas
add
aad
add
lahf
cld
add
add
jnp
mov
mov
push
add
pop
add
push
push
call
add
shr
insb
add
cltd
gs
add
pop
cmpl
stos
cwtl
push
add
bound
mov
add
add
fucomip
xchg
add
add
sub
pop
push
push
push
push
push
call
add
stc
add
add
add
add
add
add
mov
jbe
add
add
add
add
hlt
pop
push
push
push
pop
movl
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
xchg
add
add
mov
hlt
mov
flds
fidivrs
cmpsb
add
mov
cltd
add
popa
jne
imul
cld
add
add
nop
pop
mov
add
imul
pushf
loop
add
scas
add
cli
lret
mov
sahf
add
pop
lock
notb
add
sub
pop
addl
push
sub
sub
shr
rol
pop
test
je
push
push
push
push
push
push
push
push
push
call
jo
test
leave
aam
push
add
mov
add
fstl
pushf
add
xchg
add
mov
lret
pushf
cmpsb
add
xchg
add
hlt
lcall
add
bound
lds
faddl
add
fcompl
inc
or
lret
push
rol
lea
rol
pop
pop
push
sub
rol
pop
pop
push
push
push
lea
push
lea
push
push
call
fwait
leave
add
pop
fstp
into
addb
mov
jbe
add
add
add
push
leave
pop
mov
mov
loopne
lcall
push
jp
stos
add
add
mov
add
add
ljmp
call
pop
push
not
add
add
pop
leave
push
lea
push
push
push
lea
push
push
push
lea
push
call
sbbb
jmp
add
imul
test
mov
icebp
add
add
add
push
rcrb
addl
lcall
push
shr
pop
mov
add
push
lea
lea
lea
pop
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
mov
mov
add
add
test
xchg
add
decb
add
mov
in
add
cli
int3
add
pop
add
test
pop
mov
mov
add
lahf
add
loop
mov
add
push
push
push
lea
push
push
push
push
lea
push
push
push
call
jle
add
add
add
add
push
nop
idiv
mov
add
scas
sti
pop
test
add
cli
mov
add
push
mov
add
faddl
jae
xchg
xchg
pop
add
sub
pop
push
push
push
push
push
push
push
call
loop
lret
push
outsl
cmc
add
add
pop
add
add
add
add
arpl
add
mov
call
cld
add
add
push
lea
push
push
push
push
push
push
call
add
add
add
add
add
add
je
xchg
add
stos
popf
jle
add
insb
add
leave
mov
add
push
popa
cmpsl
mov
add
call
push
add
enter
fwait
ret
adcb
add
jns
cld
add
add
sub
pop
addl
push
push
push
push
lea
push
lea
push
lea
push
push
call
push
lea
xchg
fcmovbe
push
push
mov
jp
ja
add
add
add
add
movsl
pop
mov
add
add
add
add
jae
push
bound
enter
fiadds
push
out
push
loop
sub
pop
push
push
not
shl
pop
call
push
push
call
loop
mov
loopne
xlat
int
test
repnz
add
fidivrl
imul
add
add
add
add
scas
jnp
add
push
add
addr16
jnp
out
add
cltd
jge
mov
lcall
inc
cld
push
push
push
lea
push
push
push
push
push
call
jno
jge
cltd
add
add
xchg
roll
add
jno
test
mov
loopne
add
xchg
add
lcall
mov
push
mov
add
add
push
push
mov
add
lods
cmpsl
out
mov
add
les
loopne
pushl
push
push
lea
push
call
add
iret
push
test
add
mov
pop
add
outsl
testb
add
add
mov
aad
out
std
testb
add
stos
mov
cmc
insb
cmpsl
add
xchg
add
leave
sub
pop
push
push
not
not
pop
call
cmpl
jne
push
add
lea
shl
pop
pop
push
push
push
push
push
push
call
add
jmp
bound
stc
add
rolb
shl
sahf
mov
mov
add
sti
loopne
int
add
call
add
js
add
add
loopne
add
add
xorl
test
arpl
mov
add
sub
pop
pop
pop
push
sub
pop
pop
push
pop
leave
ret
push
lea
push
push
push
push
push
push
push
push
call
testl
stos
mov
add
mov
lret
shll
pop
add
mov
add
pushf
fildl
add
out
in
sub
pop
push
mov
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
nop
add
add
lods
arpl
add
int
add
add
add
xchg
pop
popf
add
scas
add
pop
repnz
add
test
add
lahf
fcompl
fcompl
add
lods
outsl
fwait
add
jbe
add
jae
cmpsb
sub
pop
add
push
push
push
push
push
push
push
push
call
mov
sahf
scas
mov
add
push
clc
add
insb
add
xchg
mov
fbstp
add
clc
add
add
add
test
xchg
add
add
jp
add
mov
add
add
in
in
lcall
push
push
push
push
push
call
in
loope
add
pop
add
add
add
jmp
in
xchg
add
add
pop
rolb
shl
fs
pop
push
push
push
ror
pop
movl
push
not
xor
inc
pop
push
push
not
add
not
pop
call
push
push
call
add
add
vhaddpd
je
pop
add
addb
cmc
rorl
add
add
arpl
push
arpl
mov
xchg
int
add
mov
add
test
in
clc
pop
push
call
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
pop
xchg
testb
jno
push
pop
jns
xchg
mov
add
push
test
push
sub
pop
subl
push
pop
cmpl
jne
push
push
push
push
push
push
lea
push
call
jge
add
fnstenv
add
add
in
add
add
mov
mov
add
jecxz
jb
add
mov
into
leave
aam
add
add
push
sub
pop
pop
push
ror
pop
pop
push
ror
shl
add
pop
pop
push
push
push
push
push
call
push
lods
add
add
fs
add
pop
xchg
add
jae
rolb
jl
add
mov
je
addr16
mov
jne
add
lcall
leave
push
rol
pop
ret
push
push
inc
sub
pop
mov
push
push
push
push
push
call
bound
add
imul
add
cmpsb
pop
xchg
cli
add
add
enter
add
into
add
push
add
in
lcall
cld
push
push
push
push
push
push
call
add
add
mov
add
add
add
add
rolb
jb
jl
fwait
mov
fsincos
ret
movsb
add
jmp
add
enter
cmpsb
add
cmc
add
fsubrl
add
lret
addb
pop
sti
jnp
add
sahf
add
mov
pushf
out
mov
fbstp
in
in
lcall
push
ror
pop
push
push
push
push
push
push
call
add
mov
stos
mov
lds
add
lods
add
add
lahf
lea
or
test
jae
shl
add
roll
add
je
mov
stc
mov
testb
arpl
add
add
add
in
pop
push
push
push
push
call
add
fdivl
loop
add
push
addl
mov
xchg
testb
add
jl
add
mov
sub
pop
mov
lea
push
shl
not
shl
pop
sub
push
lea
push
push
push
lea
push
call
fsubrl
push
jecxz
popa
lcall
fadds
add
jp
sti
enter
add
push
mov
in
in
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
call
ficomps
arpl
add
test
add
add
add
add
pop
mov
test
sti
add
mov
add
jno
add
lods
add
push
int3
add
add
add
lea
fdivrs
add
sub
pop
shr
push
xor
shr
sub
pop
add
mov
push
add
pop
mov
push
push
lea
push
push
call
xchg
int3
jae
add
add
addb
rclb
add
int3
add
pusha
add
rol
add
ljmp
mov
popf
jl
cmpsb
fcoms
mov
add
add
add
addl
pop
add
push
sub
pop
add
push
not
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
in
pop
add
movsb
stc
rcl
add
imul
add
mov
add
cmpsl
roll
add
add
std
pop
movsb
add
test
add
lds
add
add
add
fs
pop
mov
push
sub
dec
pop
cmp
jne
push
lea
push
push
push
push
push
lea
push
push
push
call
lods
insb
add
pusha
into
aam
add
add
jae
enter
pop
pop
outsl
xchg
add
jnp
xchg
mov
mov
test
add
cli
scas
add
mov
fistpl
adcb
pop
xorl
lcall
cwtl
fadds
add
jne
push
shr
sub
pop
mov
movl
push
push
push
push
push
call
add
filds
add
fbld
sbbb
popa
jnp
add
add
add
add
out
imul
add
pushf
cld
add
fcoms
add
fdivs
push
add
push
jo
push
jb
popa
loope
add
pop
add
add
jb
mov
int
sub
pop
jmp
mov
push
ror
lea
pop
mov
push
push
push
push
call
out
lds
pop
in
pop
jo
add
mov
add
add
in
cmpsb
add
push
movsl
aam
add
mov
mov
fstps
xchg
call
add
add
add
add
ja
add
pop
repnz
out
fsub
cltd
jbe
mov
add
add
ljmp
jae
add
mov
push
push
lea
push
push
lea
push
call
stos
out
add
sahf
loop
lods
je
add
xchg
add
add
add
pusha
movsl
test
add
lds
add
filds
mov
mov
add
mov
sub
pop
movl
push
shl
pop
jmp
mov
push
xor
add
pop
mov
push
shl
shr
xor
pop
cmp
jne
mov
push
lea
push
call
jmp
xchg
add
cld
les
add
add
cli
cli
out
mov
add
mov
sub
pop
movl
push
sub
pop
jmp
push
push
push
call
push
add
add
add
add
add
jmp
add
pop
popa
mov
std
sahf
jmp
mov
mov
add
add
lcall
inc
cld
push
sub
sub
not
pop
cmpw
jne
mov
push
push
push
call
pushf
stos
xchg
add
addb
add
mov
pop
jno
test
out
scas
pushf
outsl
js
add
repnz
add
mov
add
sub
pop
movl
push
shl
pop
jmp
push
xor
pop
pushl
push
ror
pop
pop
mov
push
shr
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
add
sbbb
add
mov
mov
push
add
mov
add
addr16
add
out
add
push
mov
add
add
add
add
add
imul
add
imul
hlt
mov
imul
out
shlb
je
in
fdivr
lcall
push
or
adc
push
or
inc
add
ror
not
sub
sub
inc
not
pop
ror
lea
pop
push
shr
add
shl
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
call
lods
add
add
add
xchg
add
add
bound
nop
add
adc
mov
add
mov
stc
add
imul
sub
pop
call
push
push
push
call
mov
lods
add
push
filds
add
test
pop
test
add
pop
add
add
fidivrs
shll
pushf
mov
sub
pop
cmpl
je
push
push
dec
ror
push
or
inc
add
add
sub
sub
sub
pop
ror
dec
pop
push
shr
ror
not
pop
push
push
inc
add
pop
call
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
leave
mov
pop
sbbl
jecxz
mov
std
fldl
fstpt
jne
add
mov
mov
pop
in
jecxz
mov
jmp
sahf
ja
push
cli
mov
loopne
in
fdivr
lcall
js
int3
fldz
ret
movsb
or
add
rcrb
push
xor
push
push
pop
add
sub
add
sub
dec
pop
dec
shr
ror
pop
push
xor
pop
push
call
push
sub
pop
cmpl
je
push
push
not
lea
sub
xor
push
and
add
add
sub
shr
xor
pop
lea
ror
pop
push
push
lea
push
push
call
cli
testb
mov
mov
add
out
repnz
pop
popa
add
add
in
jmp
add
test
add
sub
pop
push
push
lea
push
call
addr16
mov
rolb
mov
mov
jns
ret
add
xchg
hlt
addr16
test
out
pop
add
pop
call
push
push
push
push
push
call
add
mov
mov
popf
cwtl
filds
add
arpl
test
jbe
add
jecxz
add
mov
int
jae
add
add
mov
mov
test
jmp
xchg
add
pop
pop
add
add
pushf
out
enter
add
fwait
add
mov
add
push
add
fdivl
lcall
cmp
add
int3
je
push
push
xor
sub
push
or
not
add
sub
sub
sub
ror
pop
shl
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
add
outsl
in
add
mov
xchg
add
aad
add
scas
scas
in
addb
shlb
in
lock
out
je
fmuls
add
lcall
push
lea
push
push
push
push
push
push
call
pop
add
add
nop
in
iret
xchg
mov
jne
scas
add
movl
xlat
add
add
add
shlb
add
push
add
sahf
add
scas
add
mov
push
jp
shrb
sub
pop
call
cmpl
je
push
push
add
shr
inc
push
sub
add
add
lea
sub
rol
dec
pop
lea
shl
rol
pop
push
inc
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
rcll
add
add
scas
push
fstl
test
push
out
popa
add
enter
jle
push
add
add
jle
not
fistps
mov
loope
add
lcall
jo
add
cmpl
je
push
push
dec
inc
add
dec
push
push
pop
add
add
rol
not
sub
ror
dec
pop
ror
pop
push
sub
pop
push
push
push
push
push
push
call
mov
add
add
mov
mov
stos
gs
push
add
add
add
add
roll
mov
les
in
push
mov
mov
add
movsb
mov
cmpsb
rolb
push
add
in
mov
imul
xchg
push
arpl
add
fstl
jge
pop
add
in
in
lcall
mov
not
shl
pop
cmpl
je
push
push
push
xor
add
xor
sub
dec
pop
sub
shr
not
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
arpl
add
add
add
int
lahf
out
pop
add
add
icebp
xchg
add
add
mov
push
add
jns
jecxz
add
mov
lahf
pop
add
add
insb
add
call
push
push
push
call
add
movsb
test
imul
out
mov
out
cmc
add
add
add
add
xchg
add
hlt
lcall
cmp
or
int3
je
push
push
dec
ror
xor
push
or
not
add
add
sub
dec
not
not
pop
rol
sub
pop
push
push
push
push
lea
push
lea
push
call
aam
rolb
out
add
add
in
add
add
add
add
sahf
add
in
mov
out
shll
add
lods
mov
add
mov
add
pusha
xchg
mov
test
fs
call
punpckhbw
cmp
xchg
lea
push
push
lea
push
push
call
add
lcall
lods
push
add
add
add
pop
in
xchg
add
add
aad
ljmp
in
fcompl
lret
xor
xor
ret
test
add
add
cmpsl
mov
or
int
sub
add
lea
sub
ror
rol
pop
lea
add
add
dec
pop
push
lea
push
lea
push
call
add
mov
pop
xchg
add
add
add
insb
lcall
pusha
mov
cld
hlt
add
add
jmp
pop
adcb
add
jle
mov
cmc
add
add
jecxz
jb
in
hlt
pop
push
call
push
push
push
push
push
push
push
push
push
call
pop
add
lcall
lcall
mov
add
jge
push
lea
add
imul
rclb
add
fcompl
cmp
test
add
add
test
mov
inc
lea
push
push
pop
add
dec
xor
sub
rol
pop
ror
add
inc
pop
push
push
lea
push
push
lea
push
push
call
gs
int
add
jle
lea
in
out
test
mov
add
scas
jno
xchg
add
lcall
add
pop
add
add
add
rolb
add
nop
add
add
lcall
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
mov
add
in
add
stc
add
add
ficomps
iret
cld
add
testb
add
lcall
lcall
shll
add
push
push
call
jae
fmull
pop
je
fdiv
add
pop
jp
add
faddl
js
lds
ficoml
icebp
add
ljmp
idiv
add
add
add
les
cli
add
add
clc
lcall
js
xor
ret
test
add
push
push
sub
sub
rol
lea
push
sub
add
shr
xor
sub
sub
sub
shl
not
pop
add
xor
pop
push
ror
xor
xor
pop
push
push
not
sub
pop
call
push
push
lea
push
push
lea
push
push
push
call
add
add
add
add
pop
jmp
add
jb
add
lahf
leave
add
js
pop
iret
lret
add
pop
roll
fstps
push
mov
js
jmp
les
je
push
push
rol
add
push
sub
add
dec
inc
lea
ror
sub
ror
pop
dec
sub
pop
push
lea
push
call
mov
add
mov
mov
xlat
add
out
add
in
jbe
add
push
xchg
xlat
pop
push
add
add
jne
add
loope
add
add
rclb
test
add
add
ljmp
add
add
data16
add
notb
clc
lcall
push
rol
dec
pop
call
push
push
push
call
fs
movsb
add
mov
popf
in
add
mov
pop
add
add
add
jno
add
add
add
sub
pop
cmpl
jne
mov
push
push
push
lea
push
push
push
lea
push
push
push
push
call
jnp
mov
jnp
aam
add
mov
add
push
in
cld
mov
add
fidivs
mov
fistpll
add
jp
sti
repnz
sahf
call
add
imul
add
add
xchg
mov
add
fildl
lret
add
popf
mov
sub
pop
movl
push
push
push
lea
push
push
push
push
push
push
push
call
cltd
rolb
flds
push
leave
mov
jge
mov
ja
enter
add
leave
data16
pop
add
addb
pop
jmp
push
sub
pop
xor
pop
push
push
push
push
lea
push
push
call
fstl
mov
jo
add
add
bound
mov
test
mov
js
mov
call
loopne
xchg
add
add
cmc
lcall
leave
add
jnp
add
cmc
xchg
add
mov
mov
scas
sub
pop
pop
pop
push
push
lea
push
push
call
ljmp
add
rolb
pop
mov
loop
add
shr
add
add
add
outsl
stos
jmp
shl
push
push
mov
add
mov
stc
fs
mov
lret
nop
add
pop
cli
int
arpl
push
mov
add
leave
push
push
push
push
lea
push
call
add
jnp
lock
fsubrl
stos
out
add
test
add
lcall
add
add
add
jl
add
sahf
add
pop
arpl
push
cld
mov
mov
add
add
mov
push
jbe
pop
xchg
mov
add
mov
mov
add
sub
pop
ret
push
dec
sub
add
pop
push
mov
push
shl
pop
add
cmpl
jne
push
push
lea
push
or
not
add
sub
sub
not
inc
add
pop
xor
xor
lea
pop
push
dec
rol
sub
not
pop
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
mov
add
mov
cmpsb
add
add
xchg
addr16
add
pop
roll
add
lahf
ret
pop
int3
mov
testb
loop
add
add
imul
lcall
in
add
push
push
lea
push
lea
push
push
push
push
push
call
in
add
movsl
add
jnp
cltd
jecxz
shrb
mov
enter
mov
add
test
add
pushf
decb
sub
pop
call
jmp
push
push
push
push
push
lea
push
call
add
pop
add
lret
add
cmc
add
mov
lret
xchg
add
fs
jle
add
mov
cwtl
jae
xchg
add
lret
loope
add
xchg
push
xchg
add
call
add
xchg
mov
stos
push
add
sub
pop
cmpl
je
cmpl
jne
push
push
lea
push
call
add
add
add
add
add
popl
shl
add
add
add
mov
bound
push
pop
leave
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
push
lock
xchg
test
mov
add
pop
loope
push
stc
test
popf
add
neg
add
mov
lcall
les
pop
push
inc
ror
pop
pop
push
sub
add
add
dec
pop
pop
push
rol
pop
pop
push
xor
not
not
pop
leave
push
lea
push
call
add
mov
loop
mov
mov
add
add
xlat
push
out
add
add
loopne
xchg
mov
test
jno
mov
shr
leave
add
add
add
insb
lea
add
sub
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
sahf
mov
mov
jge
js
add
add
pusha
lea
nop
mov
in
in
mov
shrb
mov
in
fdivr
lcall
push
push
push
push
push
call
add
lods
fldl
mov
add
add
ljmp
jnp
fwait
mov
mov
mov
out
add
xchg
add
jbe
add
mov
js
sarb
add
fwait
add
cld
add
ljmp
pop
addb
mov
sub
pop
jmp
push
push
lea
push
push
push
lea
push
push
push
push
call
in
mov
out
mov
add
add
subb
add
xchg
in
scas
add
mov
imul
nop
add
add
lcall
jge
add
test
add
add
nop
lret
xlat
push
not
shr
add
push
or
inc
add
sub
ror
pop
shr
xor
sub
pop
push
xor
rol
pop
pushl
call
push
lea
push
lea
push
push
push
push
call
fldl
popf
mov
add
shlb
fwait
int
ror
jge
mov
lahf
lock
add
mov
add
pop
add
ret
xlat
mov
add
test
add
lds
in
add
mov
add
push
arpl
add
add
xchg
pushf
jb
dec
out
cltd
add
loope
in
call
push
call
push
not
shr
pop
jmp
push
push
push
push
push
push
push
lea
push
call
xlat
mov
iret
mov
mov
fisttpl
fwait
add
in
add
mov
pop
add
add
mov
cwtl
xchg
push
add
loopne
lcall
jge
add
test
sbb
add
add
pushf
popf
pop
jp
push
push
push
push
call
scas
lds
add
mov
add
add
outsl
mov
sti
test
add
add
nop
add
add
rolb
add
add
jmp
add
aam
add
pop
cltd
add
add
movsb
outsl
jo
add
loopne
sahf
fsubl
mov
add
add
lcall
pop
mov
push
rol
pop
jmp
push
push
push
ror
dec
push
push
pop
add
xor
sub
rol
add
pop
sub
shr
shl
pop
push
lea
pop
pushl
push
lea
push
push
push
push
call
jp
mov
aam
popa
jp
imul
test
jmp
mov
loopne
nop
add
scas
add
mov
add
add
jne
arpl
or
insb
fwait
xlat
add
movb
test
jp
scas
add
add
add
add
lcall
inc
sub
add
shrb
test
iret
push
push
pop
add
shl
dec
ror
sub
pop
sub
rol
pop
push
sub
shr
pop
pushl
push
sub
xor
add
rol
pop
call
call
push
push
shr
inc
push
or
inc
add
shl
sub
rol
sub
pop
not
add
pop
push
rol
sub
pop
pushl
push
push
push
push
push
call
add
mov
lea
test
jb
add
iret
add
add
rclb
add
lods
add
addb
jl
xchg
xlat
add
add
push
add
add
add
out
add
add
mov
imul
int3
add
add
mov
sub
pop
call
push
sub
add
pop
call
push
push
xor
add
push
xor
add
dec
add
sub
ror
sub
inc
ror
sub
ror
pop
add
pop
push
xor
dec
pop
pushl
push
push
lea
push
call
add
add
cmpsb
add
gs
jge
cmpsb
add
xchg
jns
pop
jae
push
loope
imul
xchg
add
add
jno
jl
add
mov
add
add
push
add
out
loope
std
add
lds
test
shrb
cli
xlat
cwtl
push
shr
ror
sub
push
sub
add
shl
sub
add
add
shr
shr
pop
sub
pop
push
shr
pop
pushl
call
push
pop
call
push
push
lea
not
shl
push
sub
add
inc
not
sub
dec
pop
not
ror
dec
pop
push
push
push
call
add
cmc
add
jge
je
push
fsubl
popl
test
add
mov
add
add
add
fadds
add
add
mov
add
icebp
mov
add
add
gs
add
call
add
add
lcall
jne
call
push
push
call
fiaddl
add
jno
add
call
push
add
add
add
mov
add
mov
bound
mov
add
mov
lcall
pop
call
push
push
inc
lea
sub
push
or
not
add
add
sub
sub
pop
sub
shr
pop
push
not
shr
sub
pop
pushl
push
push
push
lea
push
push
call
add
data16
add
add
in
xchg
add
gs
add
lods
pop
in
movsb
add
add
cld
fwait
call
fcmovnbe
jae
add
add
ja
add
add
add
add
lods
repnz
lcall
shll
add
rol
pop
call
push
push
sub
add
ror
push
sub
add
add
ror
sub
shr
add
add
pop
add
inc
dec
lea
pop
push
push
push
push
push
push
lea
push
call
mull
call
cmpl
add
iret
add
hlt
aad
fisubl
add
arpl
push
les
add
add
xlat
xchg
mov
in
in
pushl
push
push
call
xchg
push
jns
add
add
movsl
cmc
add
add
loopne
popf
outsl
loopne
add
pop
mov
add
nop
cltd
jns
nop
mov
stc
add
flds
lcall
jecxz
add
push
push
push
push
call
lret
mov
add
in
lret
mov
add
add
sarl
jmp
add
add
cmpsl
in
add
add
or
mov
imul
lock
lcall
shrb
fmuls
push
dec
sub
sub
add
push
xor
add
sub
shl
sub
pop
lea
inc
pop
push
shr
pop
pushl
push
push
push
push
push
push
call
in
add
add
mov
xchg
int3
mov
out
add
add
jle
mov
imul
lods
in
add
fildl
lcall
or
add
push
sub
pop
call
push
push
inc
push
sub
add
rol
inc
add
ror
sub
shl
shr
ror
lea
pop
add
pop
push
inc
rol
pop
pushl
push
push
push
lea
push
lea
push
push
call
lea
add
add
mov
add
lret
xchg
in
hlt
imul
xchg
add
add
jle
add
movl
xchg
divl
mov
cmpsl
xchg
mov
jns
add
in
repnz
jle
adcb
add
cmpsl
jns
add
sub
pop
call
push
lea
push
push
lea
push
push
push
call
mov
lretw
add
test
lds
add
push
mov
pusha
add
add
push
add
lret
cli
add
fiaddl
add
jns
add
lcall
add
add
pushf
call
add
sub
pop
lea
push
push
lea
push
lea
push
push
push
lea
push
call
test
std
hlt
cwtl
push
jmp
mov
xchg
fcomps
add
add
add
mov
add
iret
cmpb
xchg
outsl
add
sti
add
mov
add
stos
push
cld
lock
add
push
add
iret
add
roll
add
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
push
out
jno
add
addb
add
fildll
mov
insb
add
enter
rcl
bound
add
fsubrl
fadds
shrb
pop
test
push
push
pop
add
add
ror
sub
ror
pop
not
lea
not
pop
push
push
push
push
lea
push
push
push
call
pop
add
sbbl
in
mov
add
mov
xchg
add
add
mov
mov
cli
pop
lcall
add
pop
add
jbe
push
add
sub
pop
pushl
call
push
pop
call
push
push
sub
push
push
pop
add
add
xor
shr
sub
add
pop
shl
lea
lea
add
pop
push
push
push
push
push
push
call
mov
aad
add
add
mov
fstpt
les
add
add
mov
push
pop
jl
add
pop
mov
fucomip
add
jae
pop
int
cmc
jp
pop
add
vandps
test
xchg
xchg
enter
call
push
push
lea
push
lea
push
push
push
push
push
push
call
add
xchg
mov
add
outsl
mov
pop
pusha
fcmovnb
add
add
xlat
shlb
mov
pop
add
lock
insb
add
add
add
add
xchg
add
cltd
add
hlt
pop
add
mov
add
add
xchg
lret
in
fdivr
lcall
dec
and
add
lret
pop
call
push
push
inc
sub
push
or
not
add
sub
sub
xor
lea
add
pop
lea
ror
add
pop
push
add
xor
inc
pop
pushl
push
push
push
call
add
flds
add
add
mov
jnp
add
add
in
int3
loop
pop
outsl
pop
mov
loope
mov
add
add
call
add
add
std
nop
add
popa
fstl
add
arpl
xchg
add
loope
add
add
add
sub
pop
call
call
push
push
push
push
push
lea
push
push
call
aad
add
arpl
clc
xchg
idiv
add
data16
jp
add
leave
rcrb
mov
add
movsb
in
add
clc
out
pop
add
mov
add
add
pusha
jl
movl
popl
lds
mov
test
in
imul
xchg
into
addl
mov
iret
popa
pop
add
lcall
pushf
and
ljmp
mov
dec
add
add
push
xor
add
add
dec
sub
xor
pop
ror
pop
push
push
lea
push
lea
push
lea
push
push
call
add
add
add
cwtl
pop
add
mov
add
add
add
add
fadds
mov
pop
stos
add
arpl
pop
in
add
mov
xchg
jne
mov
out
filds
jle
xchg
pop
rolb
loope
mov
sub
pop
pushl
call
push
shl
xor
add
inc
pop
push
call
push
push
rol
push
sub
add
shl
not
sub
inc
dec
pop
ror
not
sub
pop
push
sub
lea
pop
pushl
push
push
lea
push
push
push
call
popf
sbbl
rcrb
in
outsl
loopne
movsb
mov
add
fildl
add
add
jle
pop
add
add
add
incb
add
add
fcomps
push
sub
not
shl
pop
mov
push
push
xor
not
shl
push
sub
add
not
add
add
sub
add
dec
dec
pop
rol
xor
rol
pop
push
sub
xor
pop
pushl
push
ror
rol
xor
pop
call
push
dec
pop
push
push
shr
add
pop
pushl
call
push
push
ror
sub
push
or
inc
add
shr
sub
rol
add
pop
sub
dec
sub
pop
push
shr
pop
pushl
call
push
push
not
rol
ror
push
push
pop
add
not
lea
not
inc
sub
rol
xor
pop
dec
shl
pop
push
push
inc
xor
add
push
xor
add
ror
shl
shl
sub
sub
shr
shl
pop
ror
add
rol
pop
push
dec
inc
dec
dec
pop
call
push
push
xor
push
xor
add
shr
sub
xor
pop
not
pop
push
push
push
push
push
push
lea
push
call
ja
add
into
add
add
add
mov
mov
mov
xchg
icebp
int
add
mov
mov
shl
add
lods
cld
add
popf
stos
ljmp
or
loope
pop
call
push
dec
sub
ror
pop
mov
lea
push
lea
push
lea
push
push
push
lea
push
call
icebp
shlb
add
idivl
xchg
xor
jb
add
shl
add
add
ror
leave
out
xchg
add
imul
in
call
cmp
call
pop
push
push
sub
add
sub
not
pop
push
push
dec
ror
shr
dec
pop
push
push
push
push
push
push
lea
push
call
loopne
add
mov
push
mov
mov
mov
mov
add
test
add
fstps
jp
add
add
add
roll
test
testl
into
jbe
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
gs
jmp
fisubrs
scas
add
add
call
push
add
shll
add
add
data16
jbe
cmpsl
mov
les
jp
add
jnp
push
cwtl
add
add
out
cld
add
test
jge
mov
add
add
shlb
rolb
add
lea
push
push
lea
push
push
push
push
push
push
call
mov
add
mov
test
mov
outsl
add
js
cltd
cmc
mov
imul
add
add
cld
mov
loope
iret
jno
movsl
add
divl
add
out
add
add
cmc
out
in
fcomps
add
push
lea
push
push
push
push
push
push
call
add
out
add
cmpsl
cli
out
xchg
test
test
iret
movsl
add
fldl
jle
xchg
cmpsb
fwait
scas
add
pop
jb
push
add
add
popa
mov
mov
aad
add
testl
out
iret
nop
add
leave
add
add
add
add
out
in
fdivr
lcall
jne
push
sub
ror
pop
push
call
push
push
sub
ror
sub
inc
push
sub
add
rol
sub
sub
pop
dec
pop
push
push
lea
push
push
push
push
lea
push
call
mov
add
add
lock
push
add
cmpsl
mov
xchg
add
add
xorb
add
pop
add
add
add
jne
add
nop
jnp
mov
mov
add
lcall
jne
call
push
push
lea
push
lea
push
push
push
call
xchg
add
out
add
add
les
add
cltd
shll
jle
fstpl
mov
jno
aam
add
add
mov
jne
imul
call
call
mov
push
shr
shl
pop
pop
push
lea
shl
pop
dec
jne
push
add
dec
pop
call
push
push
not
push
and
add
shl
not
sub
shr
pop
sub
xor
xor
pop
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
mov
int3
add
xchg
add
add
pop
add
imul
call
add
xchg
test
pop
add
add
add
pop
pop
mov
add
icebp
call
add
add
add
cmpb
cltd
sub
pop
pushl
push
push
push
lea
push
push
push
lea
push
call
rcrb
jmp
jp
scas
add
js
add
cmc
lods
lcall
add
sti
arpl
add
add
in
lcall
adcl
add
loope
in
mov
push
call
add
fldt
push
in
lret
pop
add
jne
ret
rclb
pop
push
add
xchg
pop
xchg
test
loope
add
enter
jp
add
imul
ljmp
in
add
jecxz
mov
fdivs
add
in
pop
push
push
lea
push
push
call
add
add
add
fiadds
add
movsl
je
scas
jp
add
push
jmp
jb
xchg
pop
addr16
loopne
jb
lods
pop
mov
add
add
lds
incb
cmpsb
add
pop
pop
add
notl
add
lret
lods
enter
hlt
lcall
rclb
mov
enter
push
push
lea
push
push
call
add
enter
testb
loop
int
add
test
hlt
mov
add
adcb
add
movsb
mov
mov
add
mov
lods
jno
add
add
add
movsb
sti
push
add
xchg
add
data16
cmpsl
int3
mov
lds
in
in
lcall
add
add
push
push
call
lahf
lahf
add
sbbb
add
mov
add
xchg
test
mov
flds
add
popf
add
fucom
lods
out
add
fstl
in
clc
lcall
pushf
and
ljmp
pushl
sub
lea
lea
push
xor
add
add
inc
sub
sub
inc
pop
dec
shr
sub
sub
pop
push
push
call
add
les
add
scas
clc
push
mov
out
jb
add
mov
add
mull
in
clc
pop
pushl
push
rol
pop
call
push
add
shr
add
pop
push
push
add
xor
lea
pop
call
push
push
inc
sub
rol
dec
push
xor
add
shl
xor
dec
sub
inc
pop
shl
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
mov
mov
add
xchg
add
add
add
jge
pop
xchg
add
mov
add
test
rorl
add
add
out
mov
jecxz
add
sub
pop
pushl
call
push
xor
add
add
pop
call
push
push
call
mov
add
jbe
mov
add
faddl
add
mov
pop
jmp
add
add
add
sti
imul
cmc
add
movb
add
add
data16
cmc
jne
ret
add
inc
cld
push
pop
lea
push
push
not
not
push
and
add
ror
sub
rol
sub
shr
pop
shr
pop
push
rol
dec
sub
inc
pop
pushl
call
push
not
pop
lea
push
add
add
pop
push
push
push
sub
inc
pop
push
push
sub
lea
pop
pushl
push
push
shl
shr
xor
lea
push
push
pop
add
sub
xor
lea
pop
lea
inc
sub
rol
pop
push
push
push
call
add
out
mov
mov
add
mov
lret
add
add
popf
add
les
std
jecxz
add
test
imul
mov
add
mov
add
leave
andb
in
mov
add
in
hlt
pop
push
push
push
call
add
pop
add
int3
add
pushf
test
pop
add
add
add
xchg
in
test
add
add
pop
sub
pop
call
push
push
add
xor
add
push
or
inc
add
sub
sub
not
sub
shl
pop
add
dec
pop
push
add
add
pop
pushl
call
push
pop
push
push
push
lea
push
push
lea
push
call
add
fdivs
idivl
subl
add
mov
enter
lcall
imul
cli
add
add
add
roll
add
data16
mov
loopne
std
mov
lcall
shrb
mov
add
lea
sub
push
or
inc
add
dec
sub
xor
xor
pop
add
pop
push
push
push
push
push
push
push
lea
push
push
call
in
outsl
lods
scas
add
rolb
add
add
into
push
fstps
mov
loopne
fs
jae
sbbl
outsl
add
mov
jmp
mov
pop
fidivrl
add
mov
fidivl
pop
pushl
call
push
push
lea
push
push
call
xchg
addb
add
add
add
pushf
mov
mov
add
ret
fstps
cltd
jnp
clc
add
add
add
add
xchg
add
xchg
mov
call
push
shl
add
pop
jmp
pushl
push
push
push
push
push
push
push
push
call
loop
icebp
ficomps
add
add
mov
add
xchg
add
add
int
fildl
add
popf
xchg
mov
add
rolb
out
enter
call
add
mov
add
jns
in
loopne
lcall
mov
push
push
push
push
push
call
mov
cli
add
jb
add
outsl
sbb
cmc
loopne
add
rclb
ror
mov
shlb
mov
mov
add
hlt
lds
add
add
add
mov
add
push
mov
push
shl
add
lcall
push
cli
ljmp
dec
lret
mov
shl
sub
push
push
pop
add
xor
shr
sub
xor
pop
add
xor
dec
pop
push
inc
pop
pushl
call
push
lea
push
push
push
push
push
push
push
lea
push
call
out
add
add
movsl
mov
add
enter
add
ret
ja
insb
add
in
cwtl
lret
fiaddl
lcall
add
ret
lret
shrb
mov
out
sub
sub
push
xor
add
lea
inc
sub
sub
pop
lea
dec
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
jl
add
neg
add
fldln2
add
xchg
mov
add
add
add
mov
bound
test
add
xchg
aad
xchg
fwait
push
add
cmc
mov
mov
scas
rcrb
add
clc
add
iret
pop
add
mov
jae
add
add
in
fcomps
jne
push
push
lea
push
push
lea
push
push
lea
push
push
call
pop
lret
mov
add
mov
testb
add
push
add
jns
add
fxch
add
add
in
les
add
add
lcall
aam
add
push
push
pop
call
leave
push
push
call
add
mov
je
add
add
imul
add
aam
test
cmc
shlb
jne
add
add
test
sub
pop
add
push
pop
pop
pop
push
dec
pop
pop
pop
push
push
push
lea
push
call
xchg
popa
pusha
jae
push
add
add
push
ficomps
mov
gs
xchg
fldl
cld
jmp
pop
pushf
roll
xchg
cld
test
add
add
scas
mov
lock
add
add
pop
ljmp
add
sub
pop
leave
add
push
push
push
lea
push
lea
push
push
push
call
in
add
cld
loop
add
add
add
add
add
jns
add
add
add
push
in
in
ret
push
lea
push
push
push
push
push
call
lea
scas
pop
xchg
add
test
add
add
in
js
fwait
add
add
jae
test
mov
add
add
stos
mov
add
in
mov
lcall
push
rol
pop
ret
push
lea
push
push
lea
push
push
lea
push
call
nop
add
mov
add
loopne
test
add
mov
popa
add
add
mov
out
call
in
clc
xchg
add
add
add
add
fcmovnb
sub
pop
push
push
push
push
push
push
lea
push
call
jb
cld
add
add
mov
add
add
mov
mov
flds
rcrb
outsl
int
add
movsb
add
add
scas
mov
add
loop
add
mov
lahf
mov
fsts
sub
pop
mov
cmpl
jne
push
xor
pop
mov
push
xor
inc
xor
inc
pop
jmp
push
dec
shl
sub
pop
mov
and
push
push
call
sahf
popf
lods
outsl
add
sahf
pop
out
add
sti
cmpsb
cli
add
addl
int
lret
cmpsb
xchg
cli
add
push
popf
pop
popl
xchg
pop
add
repnz
data16
add
mov
lock
imul
in
clc
pop
xor
xor
push
push
push
lea
push
push
lea
push
push
call
flds
add
xchg
jo
call
add
in
add
mov
mov
popf
shrb
add
add
movb
add
mov
mov
add
xor
push
sub
add
ror
pop
dec
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
push
stc
leave
xchg
add
pop
add
mov
add
leave
mov
movsl
add
add
cmpsl
pop
lret
mov
add
out
mov
xchg
push
stc
fisubs
add
sub
pop
sub
push
dec
inc
shr
pop
jmp
sub
push
push
push
push
call
add
sahf
push
add
add
mov
out
addb
ja
add
lahf
mov
filds
ja
rcl
icebp
add
lods
je
jmp
mov
add
mov
sti
mov
add
mov
roll
add
fsubr
sub
pop
pushl
push
xor
lea
sub
pop
pop
push
push
call
add
fnstsw
imul
add
aad
add
roll
insb
pusha
push
out
insb
in
ret
add
add
ficoms
add
in
add
add
jae
add
mov
jbe
icebp
test
add
in
stos
jae
add
mov
mov
mov
lods
add
jl
in
clc
pop
sub
cmp
jne
push
rol
lea
pop
mov
lea
push
ror
shr
pop
sub
mov
push
add
not
pop
shr
push
lea
push
lea
push
push
lea
push
call
rolb
sahf
mov
lahf
add
add
mov
addb
mov
add
add
outsl
add
jne
rcr
nop
mov
add
stc
addr16
add
add
add
xchg
add
in
add
lcall
enter
sub
push
shl
pop
pushl
push
push
push
push
call
ret
add
lea
xchg
add
add
add
filds
pop
bnd
jno
add
fcomps
push
stos
fs
testb
cmpsl
add
add
mov
lret
add
mov
jns
iret
add
add
int
rolb
fucomip
mov
incb
lcall
push
push
push
push
lea
push
lea
push
call
addb
jbe
jns
lods
loop
add
mov
add
add
pop
jnp
movsb
mov
add
add
push
mov
cltd
add
add
add
pop
add
add
add
lcall
jmp
pop
and
push
push
push
call
lods
add
xchg
lock
jmp
add
add
jge
stos
add
add
imul
aad
bound
movsb
add
add
add
arpl
lock
sub
pop
sub
push
shr
pop
cmp
jne
push
sub
pop
leave
ret
push
pop
push
push
xor
pop
mov
add
push
add
shl
dec
pop
push
push
add
ror
pop
push
push
pop
push
push
add
shr
dec
pop
push
push
push
push
push
lea
push
call
xchg
testl
pop
add
jnp
add
lahf
mov
push
loopne
add
add
in
icebp
add
add
stc
pop
addb
jle
add
pop
add
std
lods
mov
add
mov
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
xchg
fwait
sahf
rolw
out
rolb
add
test
add
loope
popa
sahf
std
add
xchg
hlt
add
add
add
add
fadds
out
add
js
mov
mov
loope
mov
add
add
mov
sub
pop
mov
push
inc
add
not
add
pop
lea
sub
push
ror
pop
mov
shr
push
lea
push
push
push
lea
push
push
call
cmpsb
mov
test
add
mov
mov
add
mov
jmp
ja
leave
add
add
jmp
add
add
call
add
pop
les
add
rolb
fiaddl
xchg
add
xchg
xchg
add
pusha
add
arpl
outsl
sti
popl
ficoml
inc
rol
shl
pop
mov
add
push
add
xor
pop
mov
push
push
push
lea
push
lea
push
push
call
add
int3
movl
pop
mov
jp
popl
add
lret
leave
scas
movsl
add
rolb
add
mov
stc
add
jno
in
rolb
add
ret
mov
add
fadds
push
mov
mov
in
in
call
add
xor
push
lea
push
push
push
push
push
push
push
call
lock
add
mov
add
icebp
mov
fwait
lock
jno
add
mov
cmpsb
mov
jecxz
mov
scas
ljmp
push
add
mov
xlat
push
push
push
push
lea
push
push
call
std
iret
push
add
addr16
push
mov
add
add
pop
cld
aam
enter
jne
xchg
add
add
fldenv
int3
add
add
out
scas
pop
addb
add
rolb
xor
push
push
push
push
call
add
push
add
test
cwtl
testl
ret
add
add
add
jo
push
add
rolb
lea
add
add
mov
pop
push
mov
xlat
loop
movsl
roll
add
popl
out
stc
mov
add
add
add
fstps
in
lock
lcall
cmpb
jne
push
shr
xor
not
pop
add
push
lea
push
push
push
push
push
push
call
add
test
add
add
add
add
pop
mov
int3
add
cwtl
add
mov
mov
add
je
add
add
xchg
add
in
in
lcall
inc
or
test
add
add
sub
lret
punpckhbw
push
push
call
mov
ljmp
leave
mov
out
jo
mov
jb
in
imul
add
add
add
xchg
jl
les
mov
test
jne
lods
add
add
popa
add
push
in
lcall
ret
adc
push
lea
push
call
rolb
loop
add
roll
fwait
jbe
mov
pop
std
mov
movsb
add
fiaddl
add
cmpl
jne
xor
push
shl
shr
inc
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
call
popl
add
add
lret
add
add
xchg
add
fs
push
in
icebp
add
mov
add
sub
pop
pop
push
add
rol
pop
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
jo
add
testl
add
jbe
call
xchg
add
stos
push
test
imul
add
loopne
push
add
data16
mov
add
cli
add
mov
cld
add
stos
add
mov
mov
cli
mov
rcl
jmp
add
push
fcomps
push
not
not
inc
shl
pop
pop
push
dec
shl
shl
pop
leave
push
ror
rol
pop
ret
push
lea
push
push
call
fmuls
pushf
aad
push
movsl
rolb
add
pop
test
out
test
in
add
stc
aam
add
out
fdivrl
testb
add
ret
cltd
add
in
js
xchg
enter
add
add
add
add
adcl
je
jne
loope
sahf
add
call
in
hlt
pop
mov
push
inc
rol
not
inc
pop
add
push
shr
pop
push
push
push
lea
push
push
call
add
add
jno
test
jns
pop
add
add
mov
add
stos
out
jbe
add
roll
add
scas
mov
sahf
pop
divb
scas
jecxz
pop
add
jl
add
shr
add
in
popf
rolb
mov
xchg
mov
sub
pop
add
mov
push
add
pop
testw
push
xor
ror
pop
pop
push
shr
pop
pop
mov
push
pop
push
call
push
push
call
add
lock
add
icebp
push
ffreep
add
addl
add
test
add
pushf
js
add
sub
pop
xor
pop
push
add
pop
pop
pop
push
push
lea
push
push
lea
push
push
push
call
movsb
add
add
mov
out
lret
out
add
in
push
add
cmc
add
push
loope
mov
add
add
pop
add
in
add
xchg
add
jmp
icebp
pop
add
fisubl
add
add
mov
in
pop
push
push
push
lea
push
lea
push
push
lea
push
call
fists
add
add
push
andl
mov
in
mov
mov
fs
add
mov
push
add
aad
mov
out
add
andb
mov
jmp
lods
fs
add
aad
add
into
cli
test
cltd
add
lcall
push
lea
push
push
push
push
call
add
fists
mov
fildl
call
adc
fwait
hlt
add
mov
stos
add
stos
in
add
lcall
push
lea
push
push
push
lea
push
push
call
pop
add
mov
pop
cmc
fsubr
testl
xchg
push
arpl
scas
pop
insb
push
out
arpl
loopne
cli
add
sub
pop
ret
push
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
push
xchg
data16
add
mov
pop
add
mov
clc
aad
push
add
add
add
xchg
std
js
jp
add
imul
movsl
add
add
scas
add
mov
add
add
int3
xchg
in
jno
shrl
test
add
aad
xchg
push
lcall
in
add
push
push
call
add
add
jo
nop
add
add
data16
add
les
push
mov
add
add
xchg
add
hlt
lret
add
add
add
std
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
test
mov
testb
add
add
add
add
add
xorb
bound
add
add
test
push
stos
add
into
add
movsb
add
sahf
push
add
stos
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
mov
iret
rolb
out
mov
add
imul
imul
mov
add
addl
xchg
push
xchg
out
and
add
mov
add
xchg
add
in
fcomps
push
ror
pop
push
mov
push
push
push
lea
push
lea
push
push
push
push
call
mov
ja
gs
rclb
add
mov
into
add
ffree
test
pop
add
add
add
add
add
xchg
pop
xchg
mov
insb
je
push
lea
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
std
add
fldl
fcompl
gs
push
bound
add
mov
mov
push
sti
je
add
roll
xlat
add
add
fdivp
push
addr16
lahf
push
scas
notl
sahf
add
mov
add
ljmp
pushf
in
fst
movsb
cmpsl
scas
sahf
and
in
fcomps
push
cmp
ljmp
jnp
adc
push
push
call
mov
enter
popf
add
lock
popl
mov
mov
add
mov
in
add
rcrl
add
add
pop
lods
sarl
add
push
add
add
add
jmp
add
hlt
add
sub
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
call
stc
xchg
add
jne
add
in
add
sarb
xchg
enter
add
add
jle
flds
popf
in
add
add
ljmp
into
sbb
pop
js
not
not
xor
add
pop
add
push
add
not
pop
pushl
push
lea
push
push
push
push
push
call
idivb
add
add
aad
lahf
scas
add
stc
xchg
pusha
add
andb
add
jp
add
mov
fsts
mov
add
lea
lock
add
lea
add
cmc
lcall
in
call
popl
push
push
push
push
push
push
push
lea
push
call
add
add
nop
fildl
lea
data16
add
lds
jo
add
mov
icebp
lahf
repnz
add
ja
add
jbe
imul
lea
lds
jae
add
mov
jp
sahf
jo
add
aad
pushf
xchg
nop
clc
add
jbe
out
lea
add
loopne
mov
push
lea
push
push
push
lea
push
push
push
push
call
aam
add
xchg
les
mov
push
add
jne
add
add
movsl
add
lock
imul
add
add
mov
mov
add
test
add
add
add
add
add
xchg
mov
mov
add
add
rorl
in
loopne
add
push
pop
xor
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
jno
insb
add
add
add
cmpb
xchg
push
xchg
push
mov
int
pusha
add
bnd
cmpl
in
fdivr
lcall
adc
push
dec
pop
mov
push
xor
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
call
pop
add
testl
add
shrl
add
in
add
add
mov
add
add
loop
into
loop
movl
jmp
pop
add
sbbb
add
add
shrl
add
pop
add
add
ljmp
lock
cld
pop
sub
pop
xor
push
sub
pop
rol
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
add
std
pop
lahf
call
add
addb
mov
add
pop
lret
ljmp
pop
add
fdivs
fadds
mov
addb
leave
add
movb
popa
outsl
mov
repnz
lds
out
jne
mov
in
loopne
lcall
nop
push
lea
shr
pop
xor
push
push
push
lea
push
push
push
push
call
std
xchg
mov
add
add
imul
loop
push
add
add
jno
add
add
fdivp
js
add
mov
jne
xchg
lds
in
jecxz
fs
arpl
jne
rcrb
xlat
xchg
add
fiadds
jnp
mov
add
add
jle
sub
pop
nop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
int
int3
mov
mov
test
add
sahf
rcrl
add
jecxz
lcall
stos
out
cli
ljmp
add
mov
cld
add
movsl
and
push
cmpsb
add
push
call
add
fdivr
lcall
push
rol
pop
inc
nop
push
push
push
call
add
mov
xchg
imul
lods
add
jecxz
call
add
xchg
mov
out
orl
mov
faddl
add
add
lahf
add
add
add
jns
mov
add
nop
push
pop
cmpb
jne
push
push
call
add
int3
mov
lock
ficompl
add
fsubs
loope
add
in
shrl
xchg
jmp
pop
loopne
add
mov
in
add
stos
mov
stos
add
lret
pusha
xchg
fiadds
add
sahf
loope
negl
pop
add
jne
in
clc
pop
add
nop
push
sub
not
shl
pop
nop
push
dec
pop
cmp
je
nop
push
add
sub
inc
pop
nop
push
add
add
sub
pop
inc
push
shl
pop
nop
push
sub
sub
pop
nop
push
dec
not
pop
cmp
jb
xor
push
add
pop
jmp
mov
push
ror
pop
add
movzwl
push
sub
pop
mov
push
rol
rol
shl
add
pop
add
mov
push
push
push
push
push
call
add
xchg
out
mov
fidivs
pop
movsl
faddl
test
mov
mov
add
mov
test
mov
add
shlb
add
into
stos
fwait
notb
push
cmpsw
jge
add
push
jmp
repnz
add
add
lods
stos
cli
jbe
add
movsl
sub
pop
xor
xor
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
jno
add
add
add
test
xchg
jb
add
jne
push
xchg
stc
movsl
add
add
push
add
jbe
add
ror
add
movsl
loope
out
mov
idivl
add
add
shl
xor
push
shl
xor
pop
shl
push
pop
xor
push
pop
shl
push
push
push
call
std
fisttps
mulb
fxch
add
pusha
add
loope
add
xchg
push
ja
add
jp
lock
fwait
add
andb
xchg
outsl
sub
pop
xor
push
push
push
push
call
add
add
popa
cmpl
pusha
pop
add
rcr
std
clc
in
nop
out
mov
add
rolb
add
add
cmpsb
icebp
jecxz
rol
add
mov
fscale
add
mov
shrl
lds
push
loop
lock
lret
add
add
add
pop
sub
pop
mov
push
add
sub
pop
add
push
shl
sub
pop
pop
pop
push
add
pop
pop
pop
push
lea
push
call
add
push
add
add
mov
js
movsb
into
out
mov
add
shll
add
mov
jp
sub
pop
leave
push
push
push
push
push
push
call
mov
jp
addr16
iret
ja
mov
mov
add
add
lahf
pop
fwait
jl
mov
add
in
call
push
push
push
push
call
pop
add
add
add
aad
enter
and
push
mov
pop
add
popa
add
add
scas
cmpsl
xchg
mov
add
mov
add
add
jl
iret
add
ror
roll
mov
add
roll
shrl
lock
lcall
push
ror
dec
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
add
jp
sbbb
lahf
imul
imul
iret
mov
add
fiadds
lods
test
add
add
data16
push
add
add
ret
fildl
mov
push
xchg
add
cwtl
movsb
cli
in
add
add
xchg
outsl
sub
pop
push
push
push
ror
dec
not
sub
pop
push
push
push
push
lea
push
push
push
push
call
push
add
add
mov
lret
add
roll
add
sti
in
fldz
xchg
out
jge
push
mov
add
in
mov
add
add
iret
test
mov
add
lods
jge
insb
add
lret
roll
add
lahf
add
js
add
test
lcall
push
add
add
lea
pop
mov
mov
push
push
call
add
pusha
add
add
add
jl
mov
testb
push
arpl
test
add
jo
roll
push
fisubs
add
add
jge
add
add
lcall
jge
push
sub
pop
test
je
push
sub
sub
inc
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
test
pop
fistl
rcl
mov
addr16
fwait
jmp
add
xchg
add
mov
add
push
in
loopne
test
je
push
lea
add
pop
mov
mov
push
push
push
call
add
cmpl
cwtl
mov
add
cld
xchg
fnstcw
mov
int
pop
push
mov
notb
mov
add
push
cmpsb
add
sub
pop
mov
inc
push
rol
sub
sub
inc
pop
cmp
je
test
je
push
shr
pop
mov
inc
push
dec
lea
pop
cmp
je
push
lea
sub
pop
test
jne
push
inc
dec
dec
pop
xor
push
push
push
lea
push
call
add
icebp
add
add
fiadds
repnz
add
push
cwtl
lods
add
les
icebp
sub
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
add
negw
add
iret
add
add
add
add
mov
addb
lret
in
add
cmpsb
add
add
pusha
xchg
outsl
mov
mov
add
out
test
movsl
add
iret
add
lcall
push
ror
pop
pop
push
ror
pop
pop
push
lea
push
push
call
mov
enter
out
mov
pop
fistl
out
lds
in
jbe
cmpsl
flds
mov
scas
add
sub
pop
leave
ret
push
add
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
add
insb
mov
add
cmc
add
add
add
add
mov
add
lcall
add
add
add
xchg
mov
insb
add
addl
in
fdivr
lcall
push
lea
push
push
push
call
add
jnp
ret
addl
add
test
jne
add
add
jae
add
bound
mov
roll
add
mov
mov
add
add
mov
mov
mov
sub
pop
cmp
jne
push
push
push
call
add
movsl
add
mov
gs
imul
push
jo
pop
add
in
aam
out
pop
stc
scas
scas
add
add
add
fbstp
add
flds
in
add
jl
add
jle
add
add
xlat
add
in
hlt
lcall
jle
push
push
call
add
add
add
repnz
xchg
iret
add
pop
add
mov
stos
lock
add
mov
add
out
add
add
ljmp
jge
jmp
add
xchg
stos
mov
push
add
sahf
movsl
add
int3
add
add
jp
je
in
clc
lcall
popa
add
add
push
lea
push
push
call
pop
add
add
scas
hlt
add
stos
ljmp
jbe
pop
into
mov
add
mov
pop
testl
fiadds
lods
add
add
add
mov
add
in
hlt
pop
mov
push
push
call
scas
add
add
rorb
andb
push
loope
add
add
jo
xchg
lcall
add
loop
add
enter
cltd
lret
add
add
mov
aad
add
jne
nop
gs
hlt
ljmp
fwait
push
push
fstpl
add
push
push
push
lea
push
push
push
push
lea
push
call
add
jae
add
mov
stc
cli
clc
lock
test
out
add
enter
mov
push
add
into
add
add
add
add
jl
mov
add
xchg
mov
add
jmp
add
test
cmpsb
add
add
icebp
add
mov
movl
lcall
loopne
test
decl
jnp
pop
add
sbb
push
lea
push
push
call
popa
push
add
cld
add
popf
add
add
add
mov
add
shl
push
out
out
mov
add
pop
jns
cwtl
add
add
mov
jle
testb
mov
add
rorb
add
add
mov
push
push
push
push
lea
push
push
push
call
cld
pop
push
hlt
mov
add
out
add
add
subb
in
pop
push
hlt
add
sahf
add
clc
lods
loopew
push
add
mov
arpl
add
xchg
in
add
add
add
mov
shrl
cwtl
add
pop
shl
add
in
lcall
roll
loopne
test
push
lea
push
push
push
lea
push
push
push
push
push
call
push
in
scas
add
mov
xchg
fiaddl
pop
arpl
add
cli
add
loope
add
test
add
mov
idivl
jmp
mov
ja
addr16
outsl
add
fidivs
jmp
push
push
lea
push
call
insb
mov
add
in
enter
add
add
xchg
out
jns
mov
int
jb
add
add
je
int
add
add
stc
push
jb
in
hlt
pop
xor
pop
push
rol
shr
pop
pop
pop
push
push
lea
push
call
add
push
add
testl
add
test
hlt
add
add
add
add
add
bound
push
loope
add
addb
lods
mov
pop
js
popa
add
lcall
push
push
call
add
cmpsl
js
add
cltd
add
add
sahf
push
pop
xchg
mov
mov
add
add
imul
sar
add
jne
add
pushf
add
add
add
lcall
push
add
shr
shl
pop
ret
lea
push
sub
pop
pop
pop
push
push
push
push
push
push
call
lods
add
xchg
mov
data16
int
push
add
in
add
add
fwait
cmpsb
jp
xchg
add
stos
mov
aad
add
out
add
jl
into
mov
call
add
cmpsl
add
shlb
js
jnp
sub
pop
pop
push
xor
dec
pop
pop
push
add
xor
shr
pop
leave
push
lea
push
push
push
push
lea
push
push
push
call
incb
in
gs
mov
sti
add
add
add
push
call
cltd
cmc
xchg
mov
int
add
add
lret
add
mov
xlat
popf
pushf
lret
ror
rolb
add
cwtl
add
movsb
add
jp
add
xchg
sahf
jnp
loop
fs
mov
add
mov
add
scas
clc
sub
pop
ret
push
push
push
push
push
call
add
insb
xlat
mov
int
fistl
jnp
mov
add
xchg
iret
fiadds
add
movsl
call
mov
add
push
push
add
add
out
aam
in
in
pop
mov
push
ror
lea
pop
pop
pop
push
shl
pop
pop
pop
push
xor
sub
lea
pop
leave
push
add
shr
pop
ret
test
jae
xchg
sbb
test
ja
test
jae
sbb
jae
ss
push
rcl
jae
test
push
test
push
dec
xchg
jno
in
hlt
and
pop
xchg
sub
popf
sbb
dec
shr
movsl
jp
mov
push
sub
sbb
or
cmpsl
add
xor
adc
in
jp
jnp
mov
add
stos
into
mov
mov
out
adc
mov
add
cmpsl
mov
fildl
mov
push
data16
push
xchg
jae
cmpsl
out
push
mov
rcrb
or
mov
fwait
inc
lcall
cmp
xchg
aaa
loopne
iret
inc
lahf
xor
push
push
scas
sarl
jnp
shll
ret
movsb
rol
xchg
pop
outsb
shlb
loop
pop
stos
xchg
shrl
pop
mov
xor
push
in
sahf
dec
sub
mov
cmp
add
out
and
pop
mov
cltd
imul
mov
and
jl
cmp
imul
mov
xor
mov
sub
mov
xchg
fs
mov
xor
xorb
hlt
in
xor
dec
cmp
arpl
stos
rcrl
ds
mov
fmuls
cmp
call
xchg
push
test
dec
pop
and
test
pop
imul
jp
sbb
inc
mov
sub
sbb
out
xchg
pop
and
aaa
inc
out
aaa
cmc
jo
lea
in
jp
cmp
xor
arpl
lret
adcb
cltd
push
jl
stc
ret
adc
sbb
jns
sti
push
aam
mov
xor
push
dec
adc
lahf
sarb
jo
lahf
fbstp
jp
mov
or
xchg
push
loope
pop
dec
lods
inc
nop
or
mov
ljmp
mov
xor
inc
in
outsl
test
xlat
push
ja,pt
pop
sub
jmp
ror
xchg
adc
add
pusha
movsl
mov
lock
inc
out
pop
in
sbb
test
cmpsb
in
dec
xor
cmp
mov
pop
dec
jnp
jbe
das
xor
aas
notb
mov
mov
fs
nop
lds
test
fisttps
push
mov
inc
push
mov
scas
pop
xchg
sub
into
stos
scas
cltd
lret
out
movsl
aaa
dec
icebp
fmul
cli
loopne
rorl
jbe
subl
add
dec
push
adc
adc
pop
shrl
les
push
inc
dec
pop
roll
mov
jbe
aad
out
in
push
push
scas
mov
add
inc
in
sar
lods
dec
or
cmp
ret
loop
fidivrl
sahf
mov
dec
add
bound
leave
std
jmp
xor
adc
and
lods
adc
cmpsb
pop
jp
and
out
xor
pop
and
pop
pop
adc
and
push
or
fs
cli
or
subb
stc
dec
ss
mov
shrb
loop
leave
jp
sub
cmp
ret
and
scas
outsl
into
push
jbe
pop
cmp
mov
ds
rorl
js
mov
cwtl
add
cmp
aaa
push
cs
sbb
rcll
jne
sub
jo
add
pop
mov
daa
repnz
push
cld
fwait
lods
cmpsb
inc
rclb
mov
out
jg
fidivrl
sbb
mov
cli
out
ret
lcall
fcmovnbe
mov
pop
adc
jg
call
adcb
call
cli
mov
shr
cmpsb
xchg
mov
cmpsl
adc
loop
sbb
xlat
pushf
hlt
lcall
push
push
movl
cmp
testl
shl
in
pusha
mov
repnz
add
ljmp
sarb
nop
test
aad
mov
fmuls
push
sahf
add
adc
dec
cli
jl
hlt
inc
push
call
add
loop
push
int3
adc
mov
push
std
popa
daa
in
pop
add
stos
push
loopne
test
jne
or
sbb
mov
jno
repnz
call
jp
cli
out
call
loope
in
xchg
mov
call
sbb
pop
insl
inc
dec
lcall
int3
mov
or
mov
lahf
jbe
mov
sub
cli
sbb
es
cmpsl
lods
jg
fs
inc
sub
mov
fucom
outsl
jl
mov
ds
data16
adc
fcmovne
xadd
adc
mov
shlb
ljmp
cmp
inc
mov
nop
daa
sub
inc
in
jo
mov
push
out
hlt
das
push
iret
adc
outsb
jge
mov
or
jge
flds
scas
out
icebp
mov
push
mov
nop
mov
lcall
out
add
mov
push
mov
pop
jmp
int
mov
movzbl
cld
aas
pushf
call
clc
add
mov
or
sbb
ret
lcall
stos
test
testl
lods
mov
cltd
pop
div
ds
pop
jecxz
clc
adc
in
inc
or
cli
cmp
sti
and
xchg
push
pusha
sub
arpl
outsb
xchg
push
outsl
sti
sbb
push
fdivp
es
mov
mov
push
push
push
sub
scas
push
inc
xor
ja
dec
fdivrl
and
sarl
push
aaa
jecxz
xchg
jbe
or
mov
pop
jecxz
and
mov
push
pop
push
mov
fsubrl
dec
mov
lcall
lcall
repnz
cmc
xchg
sub
mov
push
icebp
or
push
xor
pop
loop
fnsave
fists
add
inc
push
sub
fistps
rolb
sub
and
testb
in
lds
mov
icebp
mov
testb
leave
mov
inc
push
pop
pop
cwtl
add
pop
bound
pop
pushf
scas
fcmovne
add
mov
hlt
xor
jae
in
std
cmp
out
stos
shlb
out
cmpsb
aas
mov
ss
sub
ficompl
sahf
lret
stos
inc
test
movsb
out
push
pop
cmp
lds
cmpsb
sti
pop
gs
lret
popa
loopne
add
add
lods
cld
inc
je
inc
stos
mov
mov
mov
push
subl
jbe
jmp
and
push
inc
and
mov
inc
push
xchg
insl
pop
xchg
stos
mov
hlt
arpl
adc
loopne
bound
popa
fwait
lods
out
insb
mulb
xchg
outsl
cmp
dec
push
dec
sbb
or
add
pop
mov
mov
movsl
ss
pop
adc
aaa
inc
syscall
repnz
jle
das
push
pop
cmp
push
add
rclb
sub
xor
jle
stos
add
mov
ret
jmp
add
pop
pop
cmp
push
rolb
mov
or
xor
mov
add
ss
adc
lcall
push
push
loope
lea
fld1
jno
les
fimuls
fdivrs
cld
and
subb
shrb
clc
gs
mov
das
std
int
sub
lods
jge
adc
adc
fstpl
std
inc
push
and
sub
stc
or
add
pop
in
sti
in
mov
je
cmp
xchg
cmp
mov
cli
xchg
and
stos
mov
mov
flds
or
fstpl
test
cmp
inc
sti
cmp
push
xchg
and
push
insb
lds
mov
sahf
inc
into
add
std
xorb
outsl
sarl
jno,pn
jmp
and
xchg
cwtl
push
mov
fstl
test
pop
cmc
ljmp
in
push
adc
ja
sub
cltd
pushf
lret
enter
loope
cmpsb
adc
data16
cmpsl
shrl
push
jmp
sarb
mov
out
mov
mov
movsb
push
mov
jle
xchg
fwait
lock
jnp
test
test
or
jne
daa
add
xchg
inc
push
fcmovnb
push
add
lahf
jne
test
jmp
jg
stos
xchg
mov
adc
cmp
into
adc
mov
dec
or
call
sbb
je
inc
addl
addl
jmp
lcall
scas
out
jbe
pop
lret
outsb
rolb
and
sbb
pop
inc
ss
negb
div
sub
cmp
pushf
xchg
daa
mov
xchg
push
test
orb
jnp
ret
and
xchg
jb
test
fbstp
test
enter
pop
mov
ja
loope
pop
sub
push
mov
cld
pop
test
aam
xchg
inc
adc
rcrl
mov
call
ret
ss
and
sub
movsb
sub
ret
sub
adcb
cs
cmpsb
mov
cmpsb
dec
and
mov
es
sub
mov
cmp
mov
jmp
mov
cmpsl
sahf
enter
lock
into
iret
cmp
mov
clc
insl
push
testb
popf
add
lock
pop
mov
sbb
ret
in
outsl
and
or
push
cmp
jbe
aaa
mov
sbb
push
scas
cltd
adc
pop
fs
pop
pop
insb
add
adc
or
dec
xchg
imul
add
popa
add
fmull
pop
pop
push
stos
inc
shll
lret
inc
push
adc
loopne
inc
ret
mov
lret
or
xor
add
in
dec
push
ret
push
mov
xchg
add
inc
mov
out
push
cmp
dec
js
dec
ficoml
push
cmp
test
add
out
jne
je
fsubrp
cwtl
push
adc
or
inc
fiaddl
cltd
pop
dec
cmp
scas
test
inc
mov
sbb
inc
clc
adc
pop
repz
ljmp
outsl
testl
inc
add
inc
dec
cs
jecxz
xchg
push
lcall
popl
pop
aas
lea
rclb
add
pop
sbbb
push
push
adc
sahf
leave
mov
das
fcmove
out
jno
jne
fsqrt
jp
pop
lock
cwtl
ficoms
fstpl
mov
xchg
xor
lret
int3
cmpsl
jb
fdiv
xor
dec
lret
imul
cmp
ret
insb
sbb
mov
and
fwait
mov
adc
jle
outsb
loop
sub
mov
cltd
rolb
clc
out
xlat
adc
lcall
cmp
xchg
pusha
imull
xchg
inc
mov
jb
push
sbb
dec
mov
adc
rcrl
cmp
sub
pop
imul
and
stos
dec
pop
adc
mov
xlat
mov
jp
lcall
lret
sbbb
test
loop
cld
shl
add
push
pop
dec
or
jo
add
loope
adc
imull
popf
dec
ror
cltd
inc
sub
orb
sub
xor
dec
stos
call
and
nop
dec
adc
push
jge
ljmp
sarb
or
push
stc
out
lea
pop
sbb
xchg
mov
les
pop
or
sbb
ja
test
sti
xchg
or
add
xchg
icebp
sub
cmpsl
cmp
mov
and
rolb
scas
push
jnp
xor
arpl
pop
mov
mov
and
out
inc
cmpsl
out
repnz
aad
iret
pop
pop
or
mov
mov
mov
js
mov
mov
mov
pop
inc
movsb
int3
push
or
adcl
dec
mov
leave
test
aam
pop
add
mov
aaa
jbe
icebp
pop
aas
sub
mov
ret
enter
cmc
repnz
mov
pop
mov
lods
in
cwtl
add
sti
xchg
xor
shl
or
pushf
inc
add
sahf
mov
inc
int
pushf
fisttpl
mov
jb
sub
jae
loope
out
and
cmc
sub
int
inc
daa
orl
or
fbld
and
mov
mov
xchg
addr16
push
in
and
jbe
aaa
xchg
and
sahf
pop
fdivrl
pop
push
mov
pop
xchg
lea
adc
push
xor
fisubl
imul
mov
push
js
adc
xor
push
dec
push
pop
out
xor
icebp
fidivs
div
and
mov
mov
and
test
dec
mov
inc
stc
dec
mov
or
lds
out
je,pt
or
mov
sbb
mov
mov
or
push
stos
jns
lods
xchg
test
xchg
xchg
movsl
ret
enter
das
dec
mov
shlb
lods
xor
ds
dec
sti
sbb
mov
add
xchg
outsb
xchg
mov
pop
repz
mov
adcl
cmp
rcr
jge
jg
sub
push
clc
fs
mov
add
or
lock
mov
iret
mov
mov
sbb
jnp
out
and
shl
in
push
shrb
mov
std
ret
stos
cld
mov
or
mov
pop
mov
inc
push
adc
cld
cmp
adc
imul
bound
cld
in
mov
mov
add
sbb
int
lret
cmc
pop
xor
sbb
pop
jno
ss
adcl
jg
leave
ja
popa
imul
aas
xor
sbb
pop
fildl
mov
or
or
pop
std
je
cli
imulb
dec
enter
mov
and
jns
mov
insl
jns
jle
lods
addl
mov
lret
nop
pop
inc
ds
mov
push
xor
jp
sbb
inc
fnstenv
fimuls
sahf
pop
and
jbe
xor
jns
adc
sbb
lods
or
stos
xchg
jmp
push
adc
or
scas
insl
lods
dec
aaa
xchg
add
or
outsl
dec
push
pop
mov
movups
test
jb
outsb
pop
lcall
lcall
sub
js
xor
cmp
or
out
out
stos
and
popf
push
cmp
or
dec
mov
fisubrs
std
push
repz
cmp
xchg
cld
ss
into
and
sbb
enter
jno
stos
outsl
add
jno
mov
cs
lret
das
test
ret
les
inc
pop
scas
inc
nop
jecxz
xor
push
es
sbbl
bts
pushf
stos
lds
xchg
mov
repz
mov
in
xor
xchg
nop
fmul
int3
jnp
ss
inc
cltd
add
pusha
gs
jle
dec
loopne
shrl
inc
cli
cmpsb
add
insb
out
out
mov
lods
arpl
sub
loop
aam
scas
inc
cmp
push
or
mov
ret
pop
jno
fildl
arpl
shlb
idivb
iret
dec
out
jp
sub
cltd
mov
dec
and
mov
mov
shlb
cs
mov
jmp
int
cwtl
stos
sahf
out
repnz
mov
mov
inc
call
add
xor
jno
add
jmp
push
js
hlt
push
fwait
jmp
pop
nopl
inc
xchg
inc
xchg
stos
mov
inc
data16
push
mov
xchg
pop
push
mov
pop
xchg
inc
mov
movsl
in
js
jb
pop
add
xchg
pop
pusha
test
xchg
or
aas
xchg
clc
mov
adc
cmc
rcrl
repnz
test
and
cmp
xorb
int
pop
loop
push
add
loop
xor
ljmp
lahf
dec
scas
mov
adcb
int
cmp
pop
rcrb
pop
and
das
repnz
lea
loop
push
sbb
adc
jb
outsb
push
xorl
xor
sbb
addr16
insb
mov
stos
sti
push
jp
push
mov
sti
mov
mov
cmc
adc
hlt
cs
pcmpeqw
lock
inc
mov
sarl
and
and
xchg
mov
enter
sub
sub
scas
aad
in
ret
arpl
mov
out
adc
popa
call
shrl
mov
sub
sti
stc
add
sub
push
mov
push
fsts
or
ret
lods
push
inc
cli
lods
call
sbb
jg
addb
out
sub
xlat
cwtl
pop
or
loope
mov
ja
orl
shrl
call
pop
cwtl
es
pop
or
mov
and
ds
cmp
mov
jb
xchg
jp
sub
subb
int3
cs
or
push
imul
pop
imul
inc
cmp
jno
shll
test
mov
mov
out
cmp
lcall
mov
call
dec
push
mov
in
mov
jmp
pop
repnz
xchg
sub
sbbl
add
fnsave
jbe
xchg
out
cmpsl
adc
pusha
add
add
test
xchg
cmp
in
cwtl
cmp
and
sbb
mov
dec
or
or
xor
test
cmp
push
mov
sub
sub
push
adc
mov
xchg
idivb
cmp
sub
cmpsl
push
push
nop
inc
sbb
cmpsl
jmp
or
and
sbb
scas
mov
dec
jecxz
xor
test
inc
cs
ja
rorb
sahf
mov
loopne
repnz
rep
or
fisttpll
mov
cmp
mov
ss
cld
arpl
int
push
cmpsl
fsubrp
in
arpl
push
cmp
mov
xchg
stos
stos
je
xchg
xor
inc
lds
inc
mov
cmp
out
stos
jbe
dec
jae
cld
movsb
cmp
xchg
dec
or
and
ljmp
jbe
movsl
jp
punpcklwd
ja
or
ficompl
mov
jno
rol
and
mov
ljmp
call
fmul
and
mov
lahf
adc
add
orb
dec
mov
incl
push
xchg
and
iret
xor
fildll
dec
jae
mov
mov
mov
sbb
push
pop
addr16
lret
push
sub
sti
iret
jae
jno
std
shlb
loopne
inc
or
cmpsl
clc
loope
push
or
shl
fwait
addr16
or
push
movsb
sub
es
mov
mov
xor
rcl
jle
xchg
add
je
int
adc
pushf
and
out
push
or
clc
jae,pt
aas
call
out
cmp
and
mov
sbb
dec
cmp
add
xchg
ret
test
imul
and
and
aas
dec
arpl
jp
in
and
sbb
sub
addr16
mov
and
test
mov
add
or
insl
sub
imul
repnz
adc
mov
jae
mov
push
cli
test
cmc
fnstsw
jno
push
and
xor
add
out
and
lea
push
repz
fldcw
inc
mov
in
iret
fs
mov
push
mov
mov
mov
imul
mov
and
xor
push
insl
cmp
jo
ds
ficompl
dec
aad
je
xor
cltd
imul
andl
aaa
std
inc
fstl
test
aam
add
push
dec
jmp
mov
push
repz
jmp
lahf
adcl
addl
and
dec
stc
pop
xor
rcr
in
adc
rcrl
jb
pop
scas
cwtl
stos
adc
jae
push
hlt
add
mov
aas
sahf
sbb
inc
dec
mov
cmp
test
sbb
sub
push
mov
cmp
jecxz
pusha
nop
mov
roll
mov
addl
test
inc
and
stc
mov
xor
dec
stc
mov
jmp
or
jae
add
xor
push
fstps
lock
mov
out
ja
mov
lcall
xor
fdivrl
mov
inc
ss
cmp
sub
sub
addr16
imul
jecxz
push
inc
int3
jg
mov
cltd
aad
test
in
jg
call
cmp
mov
aaa
mov
fidivrl
or
pop
add
or
nop
sub
xchg
add
hlt
faddp
dec
xor
adc
mov
sbb
je
jg
lret
xor
jbe
inc
bnd
lods
les
testl
into
mov
in
cmp
shrl
shr
imul
lahf
inc
repnz
cmp
add
mov
push
out
xlat
xchg
arpl
stos
les
and
xor
or
into
ljmp
sti
and
and
ds
jp
fmuls
cmpsl
and
inc
jp
cmp
add
scas
sbb
cld
popf
insl
cmpsb
lret
mov
outsl
jo
lods
loope
pop
out
jnp
arpl
sti
rcll
mov
add
out
fistpl
sahf
jb
fst
cwtl
imul
js
stos
test
into
es
lock
and
pop
repz
cmp
jbe
movsb
pop
and
mov
inc
inc
and
mov
mov
sahf
mov
mov
mov
inc
je
mov
jno
or
sbb
sbb
mov
sbbl
jle
push
daa
jle
xor
aas
aad
arpl
jne
movsb
call
repnz
sbb
xchg
cmp
mov
inc
add
and
test
xchg
stos
mov
mov
sub
ret
test
jo
jmp
pop
movsl
push
mov
aas
jbe
stos
psubusw
dec
cltd
mov
push
jge
dec
dec
and
imul
xchg
adc
fistl
cld
scas
cmpsl
mov
cmpsl
mov
fwait
cmpsl
loope
lods
sti
xchg
mov
andb
aas
icebp
add
gs
adc
icebp
js
mov
fiaddl
inc
mov
cmp
loopne
aaa
call
pop
pusha
mov
xchg
jnp
sti
ljmp
adc
das
xchg
mov
dec
outsl
jns
test
scas
mov
mov
cmc
dec
sub
idivb
mov
movsb
dec
int3
shrl
sub
add
stc
aad
imul
lds
and
mov
fmull
jmp
lock
push
mov
out
clc
mov
lods
add
jge
and
stc
icebp
pop
test
call
sbb
pop
cli
fwait
roll
addr16
dec
sub
in
adc
faddp
insb
adc
add
mov
or
dec
pop
sbb
jp
stos
add
mov
mov
push
fildl
jl
adc
aad
imul
mov
out
xchg
cltd
call
leave
mov
mov
mov
push
cs
xchg
push
mov
orb
cmpsl
lret
jge
decl
mov
je
aaa
sub
cs
adc
xor
int
fsubrp
movsl
repz
int3
pop
mov
jecxz
test
xor
cmp
lock
fwait
data16
jg
hlt
es
and
push
push
pop
pop
mov
mov
or
push
orl
pop
jge
repnz
imul
dec
inc
sbb
rclb
push
inc
sti
push
xor
pop
mov
gs
or
mov
mov
inc
cmp
movsb
out
add
jg
cwtl
push
je
arpl
loope
xor
cmp
add
add
dec
mov
iret
lret
fidivrs
cli
jbe
inc
mov
insl
jle
outsb
mov
sbb
fucomip
mov
clc
in
pop
jbe
incb
pop
stos
sbb
push
out
loopne
mov
cmp
test
adc
subl
fldcw
xchg
ret
xchg
mov
adc
gs
fstp
ficoms
popa
out
lret
in
mov
cmp
pop
dec
add
call
inc
jecxz
sti
repz
negb
lods
pop
cs
xor
insl
jns
adc
sbb
shll
sbb
cli
or
ret
pop
arpl
sub
jl
add
test
cmc
sarl
enter
push
lcall
add
and
xchg
aaa
pop
out
xor
cmp
mov
mov
in
sub
js
pop
jmp
pop
lds
les
loope
adc
adc
insb
mov
lea
mov
rcrb
and
jg
loopne
mov
in
dec
push
sbb
cmpsl
cmp
cmp
lods
movsb
stc
rcrl
jge
sub
loopne
in
mov
mov
mov
and
xchg
enter
push
sub
jo
sti
dec
mov
addl
int
popa
in
les
sub
xchg
out
mov
bound
xchg
push
jl
mov
lret
add
les
mov
cmp
add
mov
repz
outsl
pop
adc
pop
jns
adc
mov
addr16
stos
xor
mov
add
xchg
cltd
mov
mov
inc
outsb
inc
enter
imull
repnz
popa
adc
dec
xor
mov
lcall
arpl
xor
push
cs
scas
push
out
cltd
stc
popl
lods
push
push
dec
mov
loope
inc
pop
or
icebp
sbb
in
test
jmp
xchg
lods
cwtl
inc
jle
pushf
clc
mov
mov
jg
mov
icebp
mov
inc
dec
cmpsl
adc
adc
jle
insb
sarb
mov
gs
pop
jg
je
mov
shrl
in
orl
and
lret
xchg
stos
in
mov
cwtl
sbb
push
nop
xchg
bnd
and
mov
out
arpl
sub
testl
pop
popf
rcl
loope
cwtl
fdivrs
std
iret
xchg
lds
das
sarb
aam
je
fsubrs
pop
shlb
fisttpll
cmp
loop
lods
xchg
and
add
aad
dec
pop
add
mov
pop
popa
xor
in
ret
pushf
adc
nop
or
lock
int
mov
mov
popa
sub
ret
loopne
jp
adc
inc
cld
pop
stos
cmp
pushf
and
fstl
mov
xorb
mov
xchg
std
movsl
or
fwait
adc
fmuls
push
into
and
mov
sbbl
es
enter
shl
pop
repz
push
mov
push
mov
sub
mov
insl
or
lds
stc
out
rorb
imul
repnz
push
pop
cs
dec
pop
adc
jns
jnp
mov
mov
pop
push
rcll
jle
movsb
out
ret
lods
cwtl
fimull
popf
pop
ds
test
jnp
jecxz
mov
sbbb
jne
popf
pop
cmpsb
pop
jg
mov
pop
ret
add
cmpb
xchg
test
xor
xchg
xchg
outsb
dec
push
dec
popa
or
scas
xchg
fistpl
and
or
outsl
call
or
in
ds
cmp
mov
xor
fxch
lock
jl
mov
push
stc
stos
scas
lret
mov
inc
daa
adc
xor
rcrl
sar
outsb
ss
cmc
adc
push
mov
sbb
popa
inc
mov
imul
mov
sub
jmp
push
loope
int
xchg
clc
xchg
adc
roll
sub
mov
xor
clc
or
out
inc
mov
mov
sbbl
sbb
loope
mov
xor
adc
sub
fwait
cmp
mov
sbb
es
jmp
push
mov
jle
outsb
push
inc
je
mov
repnz
mov
push
jp
repz
inc
iret
mov
pop
jl,pt
pop
fidivl
xor
sar
ret
loopne
cld
enter
mov
push
dec
dec
and
in
push
jl
cs
adc
bound
insb
jp
repnz
fists
ret
xlat
faddl
push
and
jle
pop
sbb
loope
mov
cmc
lods
cmpsl
call
das
mov
es
xor
je
pop
sub
add
push
add
xor
cltd
in
xchg
cmc
out
testb
lea
je
ljmp
sti
andl
cmc
in
test
mov
pop
enter
adc
sbb
icebp
mov
mov
or
lahf
pop
push
stos
out
sbb
mov
cwtl
push
or
jge
lret
mov
mov
in
fsubp
pop
and
imul
ficompl
mov
cmp
sub
call
iret
xchg
inc
adc
rcrl
mov
adc
mov
sahf
xor
fstpt
mov
fsts
ss
or
fldl
cmp
cld
jp
ljmp
sbb
lahf
sbb
or
inc
test
adc
ljmp
fisttps
mov
push
cmp
test
mov
xor
cltd
addr16
scas
jl
jge
shlb
out
rcr
sar
pushf
adc
and
sbb
frstpm(287
repnz
mov
jmp
xchg
aaa
das
mov
jb
testl
ja
mov
sti
cmp
sub
cmpsl
repz
push
popf
sub
insb
cltd
xchg
lea
add
jl
mov
jge
dec
mov
mov
ficoml
mov
rcll
stc
inc
adc
add
adc
dec
cmp
mov
mov
dec
ret
popf
inc
mov
mov
iret
inc
xorb
adcl
fwait
orl
addl
mov
mov
popf
popa
addr16
fbstp
cmp
loopne
fcom
mov
aas
fldt
pop
lret
push
lds
icebp
cwtl
stos
cli
fldl
or
jb
or
or
rcl
scas
pop
test
mov
cmp
insl
imulb
inc
cmpsb
js
pop
in
push
lds
test
mov
imul
lds
adc
dec
cwtl
clc
cmp
push
or
mov
sub
jo
cmp
or
lret
inc
repz
sti
pop
inc
sbb
movsl
cmpsb
rclb
sub
subb
push
in
xor
aaa
pop
sub
out
stc
aaa
xchg
scas
sarl
or
xor
inc
lds
into
repz
sahf
push
jmp
pop
mov
sub
sbb
mov
leave
cmp
ljmp
inc
mov
bound
push
push
mov
cmp
lea
mov
jg
dec
lods
call
and
ds
pop
outsb
xor
lahf
imul
jmp
pop
xor
dec
push
rolb
pusha
mov
cld
xor
jbe
inc
cwtl
dec
dec
dec
mov
addr16
fs
xor
dec
call
jnp
das
ret
repnz
sahf
out
adc
xchg
shr
mov
pop
lret
fmuls
dec
add
push
cmovo
mov
xchg
idivl
ret
call
push
xor
lret
sbb
fldt
xor
inc
mov
movsb
and
into
xor
aas
dec
loopne
fwait
mov
jmp
das
test
cwtl
dec
dec
sarl
adc
lods
lds
xor
or
inc
sub
ret
dec
sti
mov
xchg
push
jge
cmp
mov
ret
inc
andnps
push
xor
scas
gs
push
ja
and
jg
mov
sub
jp
pop
cmp
jb
cmp
mov
scas
xor
ret
lock
loopne
out
mov
les
sbb
jnp
aam
adc
int3
sub
addb
fimuls
xchg
fcmovu
pop
cmpsb
loop
repnz
lret
inc
pop
cmp
clc
fst
dec
popa
imul
mov
mov
test
mov
nop
clc
push
inc
or
ret
mov
pop
out
add
in
push
jnp
and
adc
sub
out
push
jns
lahf
xchg
andl
hlt
je
movsb
or
cs
rcr
stos
and
and
push
sbb
add
aas
mov
insl
adc
push
xor
mov
imul
mov
orb
or
add
sub
jae
push
push
dec
cmc
cmpsb
clc
test
inc
daa
add
inc
insl
jp
aam
push
sbb
pop
out
pop
imul
movsl
sbb
sub
gs
inc
cs
xchg
iret
cli
xchg
lahf
mov
stos
stos
ret
push
icebp
mov
push
incb
sbb
rcr
inc
outsl
fcoms
pop
jmp
pop
cmp
incl
or
int3
in
push
add
in
inc
sbb
dec
neg
movsl
mov
lods
out
sets
in
cmp
in
lods
out
test
lds
cltd
pushf
jge
jae
sbb
dec
test
mov
push
mov
sbb
insb
push
dec
dec
cltd
mov
fcmovbe
sbb
iret
cli
mov
push
movsl
push
xor
inc
stos
movsb
dec
xchg
or
sbb
das
xchg
push
mov
pop
xor
cmp
jbe
out
in
lahf
ret
in
insb
jmp
out
push
and
nop
in
leave
sub
pop
std
aad
pop
fwait
jno
testl
fistl
dec
jmp
lods
cwtl
test
sub
int3
jno
pop
mov
xchg
inc
out
jl
mov
out
push
mov
mov
cld
test
sub
cli
lods
add
mov
push
sub
inc
cmp
in
xchg
ljmp
add
lds
sbb
pop
xlat
shr
mov
sub
test
daa
rcl
in
jmp
repnz
sub
test
jo
pop
out
jnp
scas
sub
test
outsb
int3
fildll
pop
add
adc
stos
or
inc
daa
mov
fildll
jge
jns
or
fst
mov
imul
call
push
or
mov
mov
mov
ds
inc
add
out
imul
inc
mov
testb
jo
jae
jns
mov
pop
and
cli
sub
inc
shl
sub
sti
add
mov
bound
pop
arpl
mov
bound
in
imul
fimull
lret
imul
mov
sbb
adc
incl
mov
std
pop
cltd
mov
push
rcr
popl
sbb
mov
es
shrb
jmp
mov
and
sub
fwait
push
mov
and
adc
enter
mov
ret
mov
mov
cmp
cld
shrb
stc
or
mov
lods
adc
push
xchg
cmpsb
mov
aaa
push
mov
and
ds
xchg
unpcklps
lock
lcall
jecxz
cmc
ds
shl
jb
in
jbe
pusha
insb
jmp
xor
rolb
ja
lss
add
push
jge
ds
daa
inc
adc
mov
xor
mov
dec
dec
pop
pop
cmpsl
jbe
mov
inc
lock
ret
sub
stc
jb
inc
jnp
cmp
fdivp
or
shlb
addb
fadds
and
jno
push
lcall
xor
cmpsl
and
and
into
mov
in
arpl
sub
iret
sub
inc
xchg
mov
div
or
ljmp
pushf
cld
push
divps
inc
mov
mov
cwtl
mov
in
pushf
dec
icebp
inc
in
mov
lret
pop
push
stos
pop
xchg
mov
cmp
jno
pop
add
loop
mov
sub
inc
pop
int3
pop
js
mov
and
ret
insl
insl
push
outsb
xor
loopne
mov
inc
cmp
and
or
and
mov
jge
bound
es
std
in
add
mov
cld
mov
push
out
in
ljmp
adc
test
nop
mov
and
or
sub
lock
fists
xchg
cmp
xchg
inc
test
mov
rol
xor
aas
iret
cmc
jg
clc
jno
mov
push
push
fldcw
ja
jne
push
insl
std
call
mov
movsl
jg
mov
movsb
mov
notl
pop
xlat
mov
rcrb
dec
movl
mov
jge
inc
xor
hlt
ja
add
dec
push
cmpsl
dec
rclb
add
mov
faddp
dec
out
sub
pop
punpckldq
mov
fstpt
push
lret
lock
js
loopne
loope
add
mov
adc
jnp
xchg
cmp
mov
test
sbb
push
push
jle
sbb
and
mov
stc
decb
movsb
aad
jbe
xchg
or
fsub
int
push
sub
xchg
ja
shr
es
mov
lret
add
mov
inc
mov
push
xchg
test
scas
and
pop
inc
pop
rcrb
popa
mov
mov
cmp
jno
adc
sarb
xor
fistps
push
jle
mov
push
js
inc
or
mov
push
cli
xchg
test
ficomps
add
mov
mov
out
ja
andb
subb
scas
je
sub
dec
subb
aaa
dec
mov
pop
in
cmp
out
je
insl
jb
int3
inc
ret
sub
jnp
lcall
test
mov
adc
int
xchg
pop
sbb
stos
ds
call
in
scas
push
stos
jbe
imul
lods
std
and
mov
xchg
insb
and
movsb
sbbb
lcall
aad
movb
push
rcrb
dec
cmp
jbe
lea
pop
loopne
mov
call
dec
push
cs
iret
and
into
cmp
movsb
sub
sarl
xor
mov
mov
add
popf
mov
test
cmp
outsb
jbe
das
mov
mull
cmp
mov
sub
add
push
imul
pop
aaa
cmp
sbb
pop
fwait
inc
dec
idiv
mov
sbb
fnstcw
ficoml
xchg
jle
xor
jnp
in
mov
insl
scas
dec
xor
push
shlb
stos
icebp
pop
mov
and
add
push
cmp
mov
out
cmp
test
loope
lahf
mov
aam
ja
mov
xchg
cmp
xor
popf
stos
mov
inc
cmpsb
stos
enter
cmp
icebp
push
jmp
jmp
sbb
or
out
loopne
cmp
aaa
dec
imul
shld
mov
movsl
stos
cwtl
testl
imul
jge
jge
pushl
sub
xchg
addb
adc
and
shrl
mov
mov
ja
pop
test
pop
pop
aas
enter
fnstsw
or
mov
jge
imul
out
or
stos
xor
lods
push
mov
xchg
sar
lea
inc
lret
lea
mov
sar
inc
dec
fidivrl
pop
sti
pop
aam
mov
fwait
insl
addb
enter
or
pop
test
and
sub
and
cmp
outsl
jl
and
andb
out
jb
push
shrb
xchg
cmp
ret
or
push
ds
gs
fwait
imul
aas
cwtl
push
pop
jae
mov
std
and
fsubrp
scas
fcomi
fimuls
dec
mov
mov
cmp
inc
xchg
xchg
push
mov
pop
fwait
sti
xor
pop
loopne
sbb
mov
dec
sub
cmp
jl
dec
add
popf
ret
mov
mov
push
pop
pop
repz
push
cmp
push
jmp
push
adc
inc
bound
push
bound
fidivrl
mov
mov
loop
stc
sub
out
ret
mov
hlt
les
or
test
rclb
insb
test
stos
ret
roll
and
insb
jo
sub
or
arpl
jl
pop
jb
jne
mov
stos
daa
or
xchg
mov
xor
clc
fnstenv
cwtl
pusha
jno
inc
sbb
dec
adc
xlat
rcr
mov
add
push
jno
jbe
aam
cli
xchg
adc
push
subl
imul
or
pop
jnp
jg
dec
imull
xchg
and
cmp
push
dec
mov
inc
adc
xchg
bound
inc
sbb
les
inc
jns
or
ficoms
jnp
mov
dec
push
mov
cmp
xchg
pop
jne
in
dec
inc
sbb
push
dec
pop
stc
adc
sub
movsb
iret
rcr
es
lea
cmp
sbbl
call
addr16
cmpsl
fildl
les
xchg
rcrl
and
rcrl
xor
aaa
repnz
adc
imul
outsl
inc
jnp
adc
movsl
xor
push
mov
clc
das
loopne
inc
sub
mov
and
mov
adc
into
in
inc
gs
lcall
loope
cmpsl
xchg
mov
and
xchg
add
rclb
test
xchg
mov
or
mov
xor
sub
fcmovnb
mov
xor
xor
mov
mov
lock
int
add
inc
cmpsb
jbe
les
adc
rol
sbb
sub
push
shlb
xchg
add
daa
repnz
xor
and
sahf
in
ss
mov
jb
inc
out
cli
lret
dec
fldt
push
aaa
and
mov
mov
ficoms
outsl
into
xchg
add
call
mov
pop
mov
js
inc
movsb
add
test
xlat
sub
imul
push
dec
mov
dec
inc
decl
mov
xlat
out
stc
mov
or
mov
push
mov
loope
pop
pusha
adc
loopne
jg
or
xchg
dec
mov
aam
cmpsb
gs
ss
js
jmp
shl
mov
hlt
bnd
xor
js
pop
push
mov
scas
rclb
cmp
int
jg
bound
push
ljmp
sbb
leave
add
inc
add
sbb
out
aas
cmp
push
jle
int
rcrb
hlt
enter
int
sub
subb
xchg
dec
movsl
inc
jbe
out
mov
adc
xor
push
insl
movl
cltd
fidivl
mov
pop
daa
push
movsl
xchg
inc
outsl
outsb
jl
mov
add
lahf
inc
push
mov
clc
dec
and
aad
mov
mov
movsb
mul
fildl
jnp
shrl
sub
and
adcb
inc
js
mov
lods
lahf
negl
stos
jle
mov
sbb
out
mov
inc
mov
xor
je
cmc
lret
inc
sbb
jae
mov
mov
das
ss
add
cli
cmp
push
in
pop
mov
jno
out
jp
call
icebp
js
push
enter
lret
jns
fwait
dec
fldenv
fldenv
scas
mov
out
push
dec
aaa
or
out
sub
in
inc
xchg
divb
cmp
incl
sarb
pop
mov
imul
and
inc
and
rcrl
aad
lahf
or
push
or
cmp
inc
cmpsl
in
fcmove
addr16
sbb
sbbl
push
cmp
dec
out
loopne
in
sbb
enter
mov
dec
jnp
mov
jp
push
jg
mov
aam
mov
and
mov
cmp
mov
repz
and
mov
mov
xchg
mov
and
bound
adc
mov
mov
aaa
mov
daa
jo
repz
ja
push
outsb
or
inc
jns
jge
and
push
adc
pop
negb
mov
pop
fidivrs
lret
int3
cmc
lahf
hlt
mov
xchg
dec
in
sbb
mov
ljmp
scas
pusha
pop
scas
aaa
inc
repz
addr16
mov
stos
clc
cmp
xchg
out
push
ret
jae
pop
fs
mov
xor
nop
push
out
adc
nop
ret
movsl
cmc
movsl
sub
sbb
loopne
push
xchg
jecxz
movsl
add
cltd
mov
js
in
movsl
dec
mov
les
and
inc
or
in
imul
push
sbb
dec
adc
adc
add
xchg
mov
or
mov
aaa
decb
daa
add
sbb
daa
sbb
sbb
sahf
and
jg
mov
arpl
ja
adc
fidivl
cltd
xor
push
ss
cmp
xchg
pop
imul
push
mov
gs
fwait
in
dec
push
push
mov
and
sub
xlat
fstpt
push
jo
mov
jno
pop
cmp
mov
aas
push
cmpb
aam
xchg
cmp
mov
inc
out
lret
and
cmp
adc
fwait
test
xchg
push
insb
repnz
jnp
adc
pop
cld
fxtract
test
mov
mov
mov
mov
outsb
mov
pop
loopne
imul
std
pop
xchg
jg
pop
dec
and
mov
dec
cmpsl
cmp
mov
into
mov
mov
lret
mov
jg
or
leave
sub
ret
pop
rcll
inc
insl
shll
adc
lods
xlat
ljmp
xchg
out
in
pop
push
mov
in
sbb
es
jno
cmp
mov
mov
cld
in
outsl
fstps
movl
pop
sbb
out
xchg
cmp
xor
inc
pop
sub
mov
sub
mov
sarb
lods
push
mov
mov
jbe
pop
pop
mov
inc
inc
jp
xor
in
cmp
addr16
ror
adc
cltd
loopne
fistpll
iret
gs
das
sub
lods
fmull
adc
aad
out
sbb
mov
xlat
movsb
add
in
iret
jnp
ss
std
clc
jnp
lods
lock
inc
inc
adc
xchg
sbb
jle
mov
jbe
je
push
ljmp
adc
mov
jle
stos
pop
mov
iret
jne
fwait
stos
or
xchg
mov
pop
xlat
inc
adc
adc
jge
dec
xor
imul
rol
dec
cmp
mov
testb
cmp
leave
ret
int3
mov
lahf
je
movl
push
or
aaa
pinsrw
mov
test
mov
sub
xchg
or
and
popl
lock
cli
arpl
and
inc
icebp
jl
je
std
adc
and
rol
sub
mov
xor
cmp
mov
dec
call
push
add
push
add
sub
cmp
mov
mov
das
fs
cmp
rorb
pop
xchg
mov
mov
adcb
add
loop
dec
cs
pop
mov
xchg
test
mov
mov
fdivl
mov
insl
pusha
jbe
popl
fnstsw
sub
sti
and
in
ret
jae
pop
fs
in
lret
push
stos
pop
movl
fstpt
pushf
jecxz
xchg
push
cltd
dec
lods
insb
ror
fcoms
negl
adc
out
mov
addr16
sti
jp
aad
xor
imul
in
push
ds
imul
lods
ljmp
xchg
aas
roll
notl
cs
out
test
mov
hlt
dec
lock
jae
or
fstpl
in
xor
test
mov
sbb
mov
popf
movsb
mov
jnp
mov
sbb
daa
in
stc
inc
jae
leave
pop
loop
push
mov
fmuls
movsl
xchg
mov
cmp
sbb
int
fcompl
xchg
and
outsb
inc
insb
sbb
mov
add
nop
and
push
cs
outsb
in
mov
and
jb
adc
das
xchg
into
cmc
ret
mov
sbb
push
jg
sbb
mov
push
rclb
jle
xchg
add
cld
rcr
push
pop
jbe
cmp
xchg
outsb
add
xchg
adc
fadds
inc
fcom
pop
mov
xor
sarb
arpl
push
aam
lods
ret
mov
pop
sub
popa
or
psubsw
sub
in
or
fbstp
or
dec
aas
mov
lods
pop
ja
push
sub
adcb
cmc
int
add
or
dec
mov
xchg
ljmp
das
test
dec
out
clc
stos
push
xlat
cs
jae
fdivs
pushf
mov
cmp
fisttpl
sbb
xchg
dec
and
test
sbb
fs
mov
ljmp
and
fcoms
arpl
push
ret
aam
or
call
mov
xor
adc
fdivs
cli
loopne
and
sub
in
jns
push
adcb
xor
out
xor
cmc
out
loope
cld
dec
stos
dec
sbb
xchg
mov
or
jmp
stos
fisttpll
pop
test
pop
imul
pop
imul
cli
movsl
fwait
jmpw
and
rcrl
pushf
test
xchg
inc
pusha
or
sbb
push
loope
mov
ret
outsl
cmpsl
ret
out
dec
mov
fsubr
mov
push
push
dec
push
mov
xchg
stos
call
pop
orl
or
fstpt
inc
push
ds
sti
hlt
or
cli
mov
arpl
fsubs
xor
mov
jns
shlb
mov
sbb
cmp
pop
dec
ret
nop
jno
hlt
scas
sub
jbe
shlb
add
dec
adc
pop
jmp
imul
shrl
jle
jmp
sub
adc
mov
aam
and
std
dec
push
push
insb
ds
xor
dec
jle
std
aas
mov
mov
test
pop
sub
cli
pop
cli
test
inc
mov
stos
outsb
sbb
jns
cmc
andb
push
push
and
push
scas
lea
imul
pop
push
cltd
mov
rolb
jo
push
pop
jbe
fldl
cmp
pop
pop
jl
int3
or
xor
sub
pop
sbb
repz
insl
sbb
pop
ljmp
cli
jle
cmpsb
out
jl
sub
pop
hlt
mov
adc
pusha
sbb
mov
int
hlt
aas
xchg
jmp
stos
push
mov
cmpsl
jno
insl
cli
pop
aaa
add
mov
push
ret
xchg
fwait
rol
jb
push
ficoms
push
mov
loope
enter
scas
sub
inc
daa
fnstsw
mov
mov
jb
mov
and
scas
roll
jmp
mov
inc
loope
aam
pop
sahf
jle
jns
xor
or
mov
fwait
xchg
sub
adc
ret
sub
pop
xchg
jge
mov
mov
arpl
das
sbb
lea
cmp
subb
shlb
pushf
cld
mov
mov
add
fnsave
nop
std
mov
add
stos
or
jo
jp
add
imul
xlat
sahf
pop
es
clc
pop
sub
mov
xchg
mov
sub
cmpsl
dec
in
lds
push
fcmovbe
pop
push
push
sub
fnstsw
test
sbb
in
jbe
push
push
sub
adc
in
xchg
in
add
xchg
mov
jge
mov
push
enter
outsb
insl
outsb
add
dec
inc
and
in
mov
bound
add
push
rorl
push
dec
pop
ljmp
mov
out
call
shrb
xchg
fldt
nop
mov
ret
dec
insb
jns
cmpsl
or
mov
adc
cmp
scas
adc
xor
xchg
push
jb
hlt
mov
pushf
sbb
xchg
jp
jge
scas
push
push
cmp
push
cmp
stos
and
call
aad
xor
mov
xchg
sub
dec
cltd
data16
ss
daa
push
imul
out
add
pop
clc
call
and
push
loopne
cwtl
gs
mov
and
decl
mov
mov
xor
jb
es
rorb
hlt
repz
mov
cli
clc
jmp
in
inc
mov
loope
jns
jbe
pop
xchg
inc
push
int3
js
repnz
or
aas
imull
lret
xchg
cmp
adc
dec
nop
mov
push
xchg
cmp
lret
and
int3
jo
js
in
insb
jle
pop
lcall
clc
std
scas
fcoml
mov
pop
jno,pt
dec
xchg
ja
sbb
xor
xchg
sbb
fistpl
sbb
hlt
cwtl
arpl
imul
in
in
xchg
inc
push
addr16
movb
pop
xor
mov
and
xor
scas
push
xor
popf
xchg
adc
mov
in
mov
push
arpl
les
lods
mov
jmp
push
lea
mov
sbb
in
fwait
ror
andl
mov
out
pop
push
js
mov
jb
xchg
mov
or
inc
out
inc
test
pop
call
aas
pop
leave
lcall
cmp
mov
insl
sbb
xor
mov
aad
loopne
imul
add
sbb
mov
mov
in
ret
fwait
push
fs
mov
lods
sbb
xchg
adc
xorb
xlat
cmp
mov
inc
imulb
push
push
xchg
sbb
aas
out
lcall
inc
xchg
hlt
rcrl
ljmp
gs
fstp
movsb
aas
mov
movsl
mov
jecxz
dec
gs
and
in
out
xlat
adc
xor
jne
and
insl
xchg
jo
add
jl
ret
xor
cmp
loopne
repnz
mov
pusha
loopne
push
out
cld
aam
das
outsb
cld
dec
lods
jmp
and
dec
pop
xchg
in
push
shll
jecxz
cmpsl
push
sbb
adc
pop
jnp
jb
mov
dec
mov
push
mov
mov
sbb
dec
add
stos
jl
jo
lret
std
je
leave
jbe
es
adc
push
flds
push
mov
test
xchg
test
cmp
adc
fwait
push
mov
push
pop
and
scas
call
repz
pop
roll
jle
repz
test
sub
or
and
dec
nop
jp
push
add
cmpsl
sbb
dec
fisubl
sub
dec
scas
xlat
or
test
and
loope
and
mov
test
adcb
lret
or
push
insl
stos
lods
xlat
sub
inc
xchg
mov
cmp
xchg
add
adc
scas
cmp
cld
outsl
fisttpll
jmp
in
add
push
xor
sub
cwtl
or
hlt
or
jns
inc
outsb
imul
jb
fbld
addr16
sbb
insl
jmp
out
imul
or
adc
and
out
push
loop
push
jno
test
ret
xlat
add
cmp
xchg
jge
stos
xchg
mov
pop
push
jae
add
movsl
pop
nop
sub
mov
decb
push
pushf
lea
popa
xchg
in
je
pop
adc
aam
pop
mov
adcb
fldln2
loop
ljmp
dec
adc
test
cmp
sar
sub
shll
int3
xor
and
sbb
fiadds
icebp
js
ja
cmc
push
dec
or
jmp
add
xchg
arpl
movsb
test
fdiv
xchg
in
dec
fdivp
out
addl
or
xor
iret
cmp
call
lcall
and
push
arpl
add
mov
xchg
leave
push
push
jle
lret
push
jg
pop
test
pop
fcmovnbe
xchg
imul
outsb
or
cmpsl
movsb
cmp
repnz
jmp
xchg
and
inc
aaa
sbb
rcl
fisubrl
jo
into
lcall
sbb
bound
inc
int3
mov
fcomps
shlb
idivb
jge
stos
push
fnstenv
push
xor
pop
rolb
add
je
add
and
ret
and
ret
cmp
mov
cmp
insl
inc
cs
or
and
scas
repz
insl
mov
pop
mov
mov
inc
lahf
rcl
lea
dec
mov
pushf
lods
fwait
sarl
mov
adc
lock
jl
mov
cmpsl
fwait
inc
out
rcrb
imul
sub
dec
push
movsl
cs
jns
fidivl
lret
or
out
cli
sub
les
cmc
mov
mov
lret
hlt
outsb
test
jbe
inc
shll
addr16
xor
jns
in
test
cs
repz
and
mov
std
sbb
jo
ljmp
jl
sarb
pop
pop
push
aas
inc
in
jo
jmp
or
loopne
jnp
arpl
mov
stos
leave
mov
shrb
pushf
push
pop
rcrl
pusha
xorl
dec
xor
mov
stc
mov
fistps
inc
cmp
out
lea
in
sub
idivb
and
das
xchg
sub
shll
mov
cmc
outsl
loope
fidivrl
mov
fwait
lea
xchg
scas
push
je
jns
outsb
mov
loope
ficoml
mulb
jnp
mov
lds
jo
clc
push
aas
lret
and
cli
pop
push
xor
push
sbb
jne
jle
jg
lods
jne
xor
lahf
xor
xlat
dec
cmp
sbb
jno
mov
cmpsl
push
std
test
jge
mov
mov
mov
jp
or
fs
jl
push
dec
in
int
mov
push
mov
lods
cmp
loope
and
in
mov
jbe
mov
daa
jnp
mov
push
or
nopl
dec
test
pop
fstpt
push
mov
in
stc
and
xchg
pop
pop
rcrl
push
mov
in
jb
and
and
dec
fs
adc
test
xchg
adc
jecxz
frstor
inc
out
push
xchg
repz
pop
push
add
aaa
pextrw
add
xor
popa
pop
lahf
add
test
jne
fisubl
addb
xchg
pushf
dec
shrl
mov
out
inc
ffree
mov
ja
jae
lds
mov
dec
and
mov
cmp
fstps
dec
rcll
adc
lcall
lret
loop
imul
stc
and
pop
dec
mov
roll
pop
sahf
ja
mov
dec
in
pop
adc
cmp
jb
lcall
cmp
aam
xchg
dec
je
mov
sbb
push
cli
movsb
mov
and
jne
mov
test
andb
or
rclb
mov
cli
in
scas
xchg
pop
jb
int3
lods
test
fneni(8087
jae
xchg
lea
mov
ja
ret
lret
loopne
lods
xchg
pop
jmp
pop
lds
push
xor
push
mov
dec
jle
adc
adc
cmp
into
sarl
gs
int
popf
test
mov
addr16
cs
jl
and
xchg
inc
aaa
jo
jle
pop
sti
iret
jle
jo
fisubl
xchg
sti
mov
cmp
cmp
sbb
push
mov
mov
pop
xor
fnstcw
fs
imul
ret
pop
add
pusha
or
inc
int3
movsb
rclb
push
cltd
lret
rcl
fbld
push
cltd
jg
cmp
mov
hlt
cli
test
outsb
pop
inc
insl
mov
mov
mov
jo
test
fcmovnu
jp
sub
mov
pop
std
jbe
fwait
adcb
sbb
xchg
or
dec
or
push
mov
mov
hlt
lock
push
sub
add
frstor
ljmp
js
into
xchg
mov
ss
add
push
in
nop
push
inc
push
movsb
sub
ja
mov
push
push
mov
rclb
jmp
push
jge
enter
insl
adc
sti
sbbb
mov
push
scas
mov
sbb
lret
lcall
sbb
subb
aad
cmpb
filds
int
in
xchg
mov
cmpsl
cwtl
je
les
call
pop
subl
lret
imul
sbb
fmull
xchg
push
xchg
mov
into
bound
cli
xor
xor
lock
add
data16
mov
inc
int
shll
ljmp
cmp
jg,pt
ds
pop
xlat
push
movl
test
sbb
dec
test
lods
cmp
gs
lcall
iret
pop
test
ret
push
cmp
call
icebp
push
cmp
cmpsb
push
test
rcll
sub
jecxz
insl
mov
mov
dec
out
jb
arpl
int
xchg
imul
jle
adcb
outsb
out
mov
aad
push
enter
fcoml
or
sarb
xor
dec
into
sbb
jmp
out
shrl
ss
push
push
test
cltd
jmp
rcrl
mov
mov
ror
movsb
cli
daa
mov
mov
sbb
outsb
xchg
jae
xor
out
movsl
or
dec
jg
jns
orb
mov
or
in
mov
dec
inc
push
jo
sbb
scas
or
stos
leave
lret
jo
mov
cltd
pop
mulb
aas
sbb
adc
sbb
push
subb
cmovns
xor
or
dec
sub
xor
and
ret
in
jp
test
jecxz
xor
bound
mov
adc
test
mov
cmp
lods
inc
mov
cmp
pop
mov
movzwl
push
and
cmp
push
fldenv
icebp
fcmovnu
vrsqrtps
mov
fucomip
enter
test
xlat
les
mov
ffree
stc
sbb
push
jecxz
inc
sub
add
push
pusha
xor
pop
cmp
js
stos
and
fstpt
iret
inc
sbb
xchg
bound
cmpsl
cmp
loope
mulb
push
lret
lods
shll
push
xchg
pop
sbb
mov
xlat
ficoml
rcr
push
test
cmp
dec
sbb
mov
mov
add
xchg
shlb
xchg
movsl
and
pop
aaa
sbb
out
test
adc
mov
cli
mull
pop
sahf
int3
cmp
les
push
adc
mov
jecxz
pop
push
js
push
jmp
mov
insl
lcall
out
mov
lea
cltd
shlb
jl
push
push
dec
pop
sbb
subl
adc
xlat
add
shl
std
incl
adc
pop
jge
shrl
cltd
inc
imul
jle
adc
cli
shrl
jnp
mov
dec
and
inc
mov
add
daa
pop
sbb
gs
sub
es
pop
cmpps
outsl
mov
rolb
jge
adc
es
dec
mov
adc
lcall
repz
ja
jno
sub
daa
in
js
mov
into
adc
je
cltd
insl
pop
jmp
and
push
or
sub
in
or
add
pop
mov
lock
clc
insb
mov
mov
xor
fstpt
cmp
add
xor
mov
push
add
mov
pop
inc
dec
inc
imul
sbb
xchg
fwait
adc
lret
jbe
cmp
ljmp
movsl
out
sbb
movb
sub
in
mov
or
cmp
test
mov
mov
push
mov
mov
out
sahf
xor
mov
leave
ss
fisttpll
xchg
pop
loop
cmp
mov
jle
cmpsb
inc
in
add
inc
les
enter
adc
mov
or
stos
mov
xchg
fisttps
cli
mov
xor
xchg
inc
notl
ret
faddp
fwait
cmp
rcr
pusha
cmp
push
and
loope
fwait
push
dec
xor
sbb
sahf
mov
sbb
adc
cmp
jb
rcr
xchg
jmp
sahf
jge
sub
neg
cmp
ret
mov
cmpl
das
in
out
push
leave
add
jmp
or
sbb
iret
shl
test
push
cmp
xor
jg
loope
cmp
jecxz
mov
ret
scas
frstor
push
imul
jge
and
lods
and
xlat
out
dec
or
notl
subb
je
push
lea
push
cld
pandn
int3
xor
mov
jmp
adc
jecxz
lret
inc
adc
call
enter
jmp
pop
movsl
pop
push
ret
call
mov
adc
popa
xchg
adc
cmp
inc
lds
sub
js
push
pop
fistpll
xchg
adc
scas
jge
loopne
inc
lcall
jns
js
pop
mov
mov
mov
mov
sbb
sarl
sarb
sub
negb
or
cmpsl
in
mov
mov
sbb
icebp
mov
dec
fcoms
mov
xor
pop
jbe
inc
ficompl
cld
es
jp
sbb
add
popf
sbb
mov
daa
loopne
hlt
enter
inc
pusha
dec
jmp
mov
sbb
mov
dec
push
into
arpl
or
scas
xchg
lcall
mov
test
lock
or
sbb
popf
and
adc
out
rorl
lahf
stos
dec
push
push
push
jo
ds
push
daa
inc
push
push
jo
inc
jp
imul
popa
and
aam
jb
pop
test
and
mov
xor
stc
sbb
xchg
flds
add
int
gs
jge
inc
jno
and
daa
rcr
push
add
roll
pop
call
lahf
jo
ficomps
adc
mov
add
pop
scas
dec
mov
inc
jb
inc
dec
add
shrl
test
data16
je
iret
mov
fisttpl
sti
jb
jle
cwtl
fndisi(8087
jmp
je
nop
mov
jl
inc
bound
xor
aas
pop
mov
sbb
xor
push
fisubs
cmp
or
decb
push
sub
insl
pop
out
xor
test
cmp
das
push
jo
xor
mov
mov
addb
mov
mov
and
cmp
inc
pop
cwtl
mov
lahf
sahf
add
imulb
mov
in
int3
fcomp
cmp
dec
dec
in
outsl
adc
cmp
insb
mov
jg
sub
mov
fmuls
cmp
jnp
adcb
iret
iret
fildl
cld
or
and
je,pn
test
dec
mov
scas
mov
and
aas
imul
fwait
mov
mov
int
push
push
loopne
pusha
movsb
dec
js
xchg
pop
fldt
sub
andb
sbb
inc
int3
fsubp
inc
in
adc
xor
shrb
xlat
inc
loopne
jp
int3
dec
je
sbb
mov
fmuls
loope
cmpsb
ss
jmp
inc
mov
aad
aaa
lds
addw
xor
outsl
int
filds
xor
pop
cmp
cmpsb
test
pop
or
jle
shl
add
sbb
iret
outsb
shrb
dec
ret
out
mov
loope
stc
dec
jae
sub
mov
jmp
sub
lea
sarl
call
loope
aas
loop
ss
es
scas
xchg
mov
movsb
daa
js
adc
insl
enter
bound
and
push
cli
outsl
repz
icebp
inc
test
decb
pushf
push
xor
pushf
in
shrb
mov
lret
add
js
pusha
mov
mov
js
lahf
icebp
dec
ljmp
pusha
xchg
stc
lcall
xchg
movsb
fbld
xor
nop
or
mov
divb
xor
hlt
ja
out
testl
fnstsw
pusha
xor
dec
scas
in
addb
mov
add
shll
ret
enter
in
fwait
pushl
addl
inc
and
xlat
jmp
lods
inc
inc
xor
in
adc
mov
pop
cwtl
jne
fsub
fdivl
lcall
pop
cmpl
stc
pop
loope
adc
mov
jo
call
sti
mov
add
insl
shrb
inc
enter
cmp
cmp
jle
jne
aaa
std
pop
xchg
push
inc
scas
out
push
andb
enter
sbb
inc
cmp
ret
loop
xchg
jb
decl
dec
push
adc
ret
js
jp
push
and
mov
out
imul
out
jp
sbb
ljmp
stos
in
mov
cli
or
ret
dec
adc
push
and
dec
cltd
stos
lods
sahf
pop
and
cld
sub
test
ror
sub
adc
dec
push
jge
mov
pop
fists
dec
jg
insb
pop
shlb
xlat
sub
inc
xchg
jge
loopne
push
mov
pop
cmpsl
icebp
cmp
xchg
or
sti
test
mov
pusha
idivb
incl
jp
sub
dec
in
cmc
mov
sbb
int3
stc
ret
dec
or
fistpll
pop
sbb
and
add
mov
mov
sub
loope
es
dec
roll
and
jb
in
mull
ficomps
dec
mov
cmp
mov
insb
xchg
jnp
pop
xor
sti
xor
adc
cmp
add
fs
add
andl
lds
fidivl
cmpsb
ret
xor
fcompl
loop
mov
stc
fldenv
and
adc
mov
xor
adc
add
popa
xchg
sbb
xor
and
les
or
fcmovu
mov
inc
xchg
sub
dec
and
cmc
adc
mov
xchg
mov
inc
mov
adc
push
jmp
mov
inc
mov
das
loope
test
ficompl
cmp
sub
in
sub
daa
xor
cmp
push
outsb
push
lock
ja
cmpb
inc
sahf
enter
loope
fsubl
or
lret
jp
faddl
cmp
fdivr
scas
fnstsw
mov
add
push
mov
iret
out
icebp
pop
xchg
jb
xor
movl
pop
pop
mov
inc
dec
ja
push
dec
dec
push
scas
xchg
mov
je
mov
movsl
mov
hlt
outsl
sbb
sbb
loopne
cmp
xor
mov
cmpsb
insb
test
shrb
ljmp
jecxz
out
hlt
xor
xchg
aaa
mov
xchg
cmpl
nop
loopne
mov
push
cmp
outsb
lret
jg
mov
mov
dec
inc
mov
int3
icebp
mov
ljmp
and
sysret
stos
lock
movsl
or
and
mov
xchg
or
sub
ljmp
mov
mov
mov
cltd
sub
or
jmp
xchg
inc
sti
or
sbb
xchg
je
push
mov
daa
mov
scas
adc
jno
xor
sub
cmpsb
loopne
imul
adc
xor
fiaddl
sbb
out
call
jmp
int
pop
mov
sbb
pop
inc
inc
push
mov
stc
lahf
mov
nop
lods
outsb
mov
xor
movsl
lods
in
adc
or
lods
inc
mov
push
jnp
iret
pop
xchg
fcoms
aaa
nop
outsb
mov
fsub
adc
outsl
int
add
mov
sarl
xchg
and
mov
adc
stos
xor
cmp
sbb
ror
daa
mov
cmpsl
add
clc
cmc
sahf
loopne,pt
movsl
int3
lcall
and
out
js
mov
aam
push
or
mov
vphadduwq
lcall
cmc
xor
loope
pusha
mov
fdivrs
and
jb
out
sbb
cwtl
push
push
outsl
dec
mov
or
fsubs
ficompl
mov
add
imul
int3
loopne
pop
sbb
sbb
int
sub
andb
lds
inc
daa
ficomps
outsb
in
sbb
adc
aaa
ja
xchg
push
psraw
data16
outsl
lret
mov
adc
loop
pop
inc
sbb
cld
aas
fcompl
jae
sqrtps
sti
js
sub
xor
imul
test
push
push
adc
adc
mov
in
lods
stos
lret
or
push
fisubl
or
sbb
xor
lds
in
cwtl
aaa
fsubp
mov
xchg
ficoml
jp
jl
ret
pop
std
cmpsl
popa
addr16
xchg
cwtl
mov
iret
jo
addr16
aam
es
cmp
adc
xlat
jns
xchg
push
cmpb
mov
and
push
fnstcw
sbb
lods
fwait
div
inc
out
inc
lcall
orl
or
adc
push
in
mov
xchg
enter
enter
pop
dec
push
adc
in
xor
sarl
mov
addr16
dec
in
push
xchg
call
adc
test
pop
shl
jno
repz
es
sub
fidivrl
notl
push
mov
jmp
or
ja
out
xchg
mov
test
xchg
xchg
inc
shl
sub
movsl
sbb
movsl
in
pop
aas
or
jb
push
aam
pop
out
aas
cmc
pop
pushf
lret
push
sahf
repnz
inc
add
xchg
dec
iret
add
outsl
jno
ja
jnp
ret
mov
and
int
pop
mov
and
xlat
push
mov
cmp
pop
add
xchg
rcrl
mov
mov
je
das
xor
jge
mov
js
in
add
outsl
jae
in
arpl
addr16
mov
inc
sub
xor
movsl
push
lock
int
lds
roll
inc
mov
lahf
icebp
jns
mov
push
push
pop
mov
test
dec
xor
pop
stos
push
icebp
pop
adcl
icebp
xor
outsl
daa
jb
xor
sbb
vpunpckhqdq
mov
fldt
push
cmp
jb
div
pop
xchg
fnsave
call
mov
pop
leave
mov
stos
ss
idiv
cmpsl
cmc
mov
fwait
pop
rcrb
mov
adc
jl
pop
leave
je
jnp
mov
jnp
mov
pusha
and
stc
insl
or
aas
ret
inc
rcr
inc
rcl
jmp
hlt
sti
out
dec
movsl
pushf
movsl
sub
inc
pop
nop
sub
cld
or
mov
jno
test
scas
jbe
fidivl
out
es
js
cmp
repz
hlt
sahf
lea
cmpsb
lods
adc
add
sub
or
mov
and
cmp
adc
scas
dec
inc
loopne
sbb
inc
or
insl
and
or
mov
mov
test
push
mov
dec
inc
mov
sub
inc
fdivrl
adc
mov
pop
fsubrs
lahf
call
cli
lahf
and
inc
std
pop
imul
inc
jmp
lcall
push
lahf
jne
les
jl
adcl
outsl
lcall
pushf
pop
shlb
scas
jp
scas
dec
mov
in
sbb
adc
filds
push
repnz
cmp
adc
push
ds
mov
int3
push
jo
sbbl
outsb
sets
outsl
ficoml
push
mov
lahf
sub
lods
mov
push
repz
jmp
cltd
and
daa
cltd
popf
dec
cmp
ret
mov
mov
add
pushf
std
fincstp
mov
fwait
dec
fistps
std
sbb
insb
addr16
fld
sub
or
push
jne
jb
test
xor
push
xchg
cltd
xor
push
xor
dec
pop
ljmp
arpl
sbb
cli
neg
add
jle
in
call
ja
add
rcll
mov
xchg
int
jge
jecxz
aad
xchg
mov
sub
out
lods
mov
mov
inc
aad
mov
cwtl
gs
loop
dec
out
and
xchg
sub
sub
add
xlat
mov
mov
popa
push
xor
cmp
sbb
add
inc
xchg
push
jg
lcall
jmp
or
mov
xchg
ret
or
nop
inc
std
lods
jo
inc
cmp
and
xchg
fistps
xor
push
bound
lret
xchg
mov
cs
stos
mov
and
rcrl
mov
mov
fstpt
dec
xchg
cmp
je
push
jp
dec
int
mov
into
xchg
mov
mov
mov
or
dec
push
js
xchg
cmp
adc
jmp
mov
mov
push
dec
imul
mov
cmc
aam
fdivrs
xor
and
inc
das
cwtd
aad
xchg
cltd
cwtl
mov
push
jns
mov
push
jmp
pop
sahf
xchg
jl
aad
icebp
cmp
out
mov
aam
out
cld
add
pushf
adc
cmpsb
sbb
and
push
call
loopne
pop
out
rorb
jns
cmp
fwait
lret
pop
mov
outsb
mov
scas
cmpsb
rolb
loop
imul
pop
jo
inc
pusha
imul
rcrl
or
lds
cmpsb
jge
mov
mov
imul
pusha
push
xchg
jmp
cwtl
outsb
sbb
into
mov
shrl
jl
pushf
add
adc
mov
pop
mov
mov
xlat
sub
inc
into
cmc
push
jns
jnp
jecxz
test
shll
pop
stos
push
adc
cwtl
mov
dec
xor
shl
mov
and
ret
std
cmp
jb
push
cmp
leave
adc
js
nop
cltd
mov
es
fbld
pop
jmp
jns
fs
mov
cli
xlat
adc
inc
xor
lock
jmp
and
mov
scas
dec
sahf
testb
xorl
pop
jae
addr16
ficoms
or
xchg
adc
mov
or
pop
dec
push
aam
or
xlat
out
ljmp
sbb
xor
sub
imul
loop
adc
sbb
neg
pop
inc
jle
xor
fwait
enter
xor
ret
popf
cld
or
push
insb
jo
jno
js
cli
mov
mov
jbe
subl
dec
decl
scas
xlat
or
inc
cli
pop
cltd
enter
dec
dec
sbb
int3
push
test
in
jbe
xchg
notl
testb
lret
mov
mov
dec
incb
sar
call
or
cmp
es
lock
hlt
inc
mov
mov
repnz
push
lret
sub
loop
sbb
pop
jp
cmp
in
out
push
adc
cltd
add
push
sarb
loopne
and
xor
lcall
xchg
lret
or
xchg
mov
mov
shr
push
les
out
push
outsl
outsl
in
ss
pop
pop
nop
sbb
cmp
jmp
inc
jae
inc
daa
mov
sub
leave
movsl
or
fwait
lods
mov
hlt
jle
mov
push
lret
fs
xor
cmpsl
dec
dec
cmpsb
fwait
mov
enter
jmp
fwait
sub
sub
pop
jbe
insb
adc
jae
adc
jo
loope
daa
fimull
je
add
cmpsl
jne
data16
fs
loopne
cs
push
sbb
xor
cmpsl
pop
ss
dec
and
sbb
xchg
xlat
out
int3
push
push
adc
cmp
jns
xor
shrl
inc
fcmovne
push
insb
scas
aaa
test
sbb
aad
dec
pop
sti
dec
inc
roll
test
cs
jns
add
push
arpl
sahf
xorb
int
mov
push
dec
xor
adc
xchg
and
cmp
cmp
icebp
arpl
test
addb
call
dec
cli
pop
push
rcll
adc
adc
not
cmp
scas
enter
mov
dec
xor
frstor
movsb
lds
cmp
es
adc
das
or
fsub
sbb
pop
aam
adc
out
jmp
inc
addr16
cmpsw
mov
lea
mov
mov
aam
popf
push
stos
cmc
mov
pop
arpl
loopne
pop
dec
xor
orl
mov
and
mov
cwtl
out
cwtl
stos
inc
lds
cmp
loope
push
cld
outsb
dec
and
adc
fidivs
outsb
fmul
fisubl
dec
xlat
in
ret
mov
add
sbb
loope
mov
ja
nop
in
pop
mov
xor
mov
mov
mov
cli
sub
fisttpll
out
and
mov
dec
arpl
mov
insb
mov
sti
andb
cmp
sub
ljmp
adc
xchg
jg
xor
or
pop
insb
js
cmp
cld
lods
push
cld
ss
push
fwait
mov
adcl
cmc
mov
lods
sub
push
loop
lret
ja
mov
push
retw
hlt
push
imul
push
cmc
sub
test
or
in
cld
xchg
cmp
adc
inc
adc
in
push
icebp
mov
mov
pop
mov
fwait
push
inc
lret
ja
cwtl
int
xor
dec
out
push
insb
movsb
lods
sbb
clc
fdivr
inc
mov
push
cmp
shl
mov
leave
stos
pop
insl
jno
lods
mov
mov
jne
cmp
or
jmp
ds
jmp
jp
mov
outsb
push
xchg
rsm
outsb
xchg
call
mov
pop
lock
pop
dec
mov
rclb
bound
movsb
or
jge
jge
mov
cmpsl
or
js
push
cltd
push
clc
insl
adcl
iret
test
arpl
dec
xchg
xor
imul
sbb
push
jbe
mov
repz
push
cmp
xor
adc
mov
ljmp
fnstsw
jmp
push
int3
out
lea
js
lock
repz
inc
idivl
clc
xchg
ss
popl
adc
sub
shll
xchg
shl
xor
push
lcall
jl
rolb
stos
insb
or
insb
push
mov
je
std
lcall
fistpl
push
push
cwtl
mov
in
mov
cmp
mov
jge
mov
inc
cmp
lret
xor
icebp
lea
push
sbb
cli
sub
popf
adcl
adc
and
std
push
dec
fwait
or
pop
pop
add
pushf
lahf
sbb
xchg
rorb
mov
subl
lahf
or
or
mov
lahf
mov
repnz
jns
les
jno
sbb
jp
jne
pushf
push
mov
loopne
nop
push
jp
popf
or
data16
movsb
popl
add
xchg
or
popf
pusha
daa
sub
jo
lds
sar
jbe
ja
xor
dec
fldcw
icebp
lods
inc
jmp
jg
mov
or
push
fs
cs
jg
aad
mov
adcb
xor
sub
adc
fbstp
loopne
lcall
imul
lods
xlat
in
xor
mov
ljmp
mov
pop
fcomp
lea
and
mov
add
cld
xor
xchg
fisubl
lds
or
and
mov
leave
xchg
push
xchg
out
push
xchg
add
mov
or
rol
adc
lock
into
in
shlb
jno
add
push
and
mov
mov
sbb
xlat
jmp
addr16
inc
cmp
nop
xor
hlt
ljmp
lcall
aas
test
xlat
sub
jne
loopne
pusha
in
into
dec
rcrb
mov
pop
rorl
mov
mov
jmp
dec
cmpsl
push
push
sbb
dec
and
addr16
mov
in
and
shlb
imul
adc
std
mov
bound
outsl
scas
outsl
inc
ss
outsb
sub
jmp
insb
iret
jl
scas
adc
cmpb
jmp
loopne
clc
pusha
aad
sar
iret
cli
mov
xchg
or
mov
mov
int3
xor
mov
lahf
adc
pop
aad
pop
iret
add
xchg
ret
lea
pushf
clc
insl
lahf
ret
xchg
inc
lock
and
mov
inc
mov
jecxz
sub
loope
in
insb
mov
je
jmp
mov
test
inc
aam
xchg
ret
leave
cmpsb
fisttpll
jecxz
add
scas
int3
call
inc
bound
inc
int3
dec
xor
or
xlat
ljmp
inc
inc
bound
dec
jl
loopne
adc
cmp
ret
pop
add
popa
sbb
dec
loopne
mov
jo
dec
adc
clc
iret
sub
sub
jb
popw
xor
jmp
test
sub
aas
xor
int
push
popa
cmc
imul
push
call
aaa
and
lahf
or
mov
xor
pop
dec
pop
jmp
cmp
cmp
je
push
fisttpl
aaa
pop
mov
pusha
in
fdivs
cltd
out
dec
inc
test
fisubrl
pop
pop
and
push
mov
addr16
sarl
mov
movsl
ja
dec
jbe
cmp
pop
sti
addl
jbe
dec
lret
test
push
pop
shl
insb
mov
sbb
mov
leave
xchg
xor
sbb
in
sti
push
cmp
xchg
insl
jecxz
xchg
xlat
aas
cmc
xor
lret
loop
push
inc
pop
movsl
fstp
cltd
xlat
popa
jb
mov
add
fwait
dec
pusha
push
jl
inc
adc
or
loopne
dec
clc
pop
cmp
lea
call
mov
xchg
cmp
mov
inc
out
cmc
repnz
bound
inc
pop
mov
imul
loope
lret
pop
dec
ja
adc
aad
jg
xchg
sbb
movl
ss
fidivs
and
mov
mov
mov
idiv
jb
push
xchg
pop
lods
jno
pop
jmp
cli
mov
fistpl
leave
scas
stc
dec
mov
inc
jns
push
sub
add
mov
add
push
stos
repnz
push
push
icebp
mov
daa
or
fsts
loopne
scas
push
xchg
inc
and
xor
xorb
aad
push
mov
add
out
es
cmpsl
and
fidivrs
hlt
push
push
scas
xchg
dec
xchg
jecxz
rorl
call
movsl
inc
adc
sub
js
and
shlb
ficomps
stos
faddl
or
loop
jge
decl
mov
xor
shlb
push
lcall
xlat
inc
pop
or
rorb
pop
nop
icebp
or
jp
iret
inc
push
ss
cmp
mov
fistpll
jnp
addr16
jmp
jno
xchg
pop
fwait
pushf
call
mov
pop
add
push
xchg
inc
int
xlat
mov
xchg
shll
push
push
push
daa
iret
add
popa
jle
jb
adc
xchg
mov
pushl
pop
and
std
cmp
pop
fcmovbe
xor
inc
test
cmpsl
adc
and
cli
xor
sahf
ss
jns
jnp
add
in
push
addl
out
xchg
movsl
cs
out
pop
add
ret
insb
push
jmp
gs
jecxz
int
or
sbb
adc
mov
aam
push
add
pusha
ss
dec
jmp
or
xchg
insl
call
movsl
xchg
sub
xor
jo
sbb
and
jecxz
nop
insl
shrb
push
push
in
or
push
mov
xchg
mov
lods
mov
or
hlt
and
ret
addr16
xchg
repz
xchg
les
and
mov
scas
mov
inc
adc
divb
out
insb
shlb
sarb
lods
push
inc
in
repz
pop
dec
mov
stos
aaa
addb
inc
movsb
pop
cmp
popf
je
pop
aam
movsb
or
add
bts
xchg
and
xchg
pop
cmc
aad
loopne
in
enter
hlt
and
fdivs
insl
insb
dec
imul
lods
icebp
test
mov
mov
outsb
xchg
sub
sub
inc
dec
sub
push
enter
decb
js
cmp
jne
push
xchg
mov
push
push
cwtl
lods
movsl
iret
adc
cmpsl
sub
movl
neg
data16
xor
mov
pop
ljmp
and
pop
arpl
pop
or
cs
cmp
in
xchg
pop
push
sbb
fcmovbe
bound
mov
and
jbe
aad
int3
out
movsl
or
jge
and
fists
mov
pop
cmp
jg
push
xlat
xchg
cltd
xchg
stos
int3
loopne
daa
test
xchg
xchg
pop
push
repz
fistl
dec
imul
aaa
push
sbb
fimull
add
pop
mov
push
pop
mov
push
inc
xlat
inc
push
sbb
inc
mov
icebp
arpl
add
out
mov
push
dec
aam
call
sti
popf
in
popa
daa
iret
mov
sbb
daa
scas
dec
or
test
cld
lret
arpl
clc
xor
and
xchg
sbb
es
adc
sbb
rolb
stos
mov
and
jle
scas
andl
adc
and
pop
push
dec
std
in
gs
xchg
push
xor
xchg
out
test
pop
or
aaa
pop
inc
adc
mov
and
in
iret
data16
mov
push
dec
mov
jp
lcall
lods
and
or
push
push
mov
stos
loop
sub
jnp
sbb
and
xchg
mov
movsl
add
js
xchg
cmp
loope
icebp
outsl
popf
jg
and
sub
out
dec
add
push
jle
nop
mov
cltd
aas
lahf
jmp
xor
add
adc
jbe
rcll
jno
enter
inc
hlt
mov
test
mov
jbe
inc
sahf
ds
mov
stos
push
out
mov
fs
mov
cltd
test
pop
fbld
and
call
test
sar
xchg
int3
ss
enterw
push
insl
fst
xchg
shr
ret
and
outsl
mov
test
scas
inc
mov
jae
ret
gs
loopne
fsubrl
sysexit
insb
add
mov
mov
pop
sub
add
push
jp
push
jp
push
push
fadds
insb
sti
add
mov
mov
sbb
or
mov
jb
pop
xor
push
scas
or
scas
cmp
lahf
push
fbld
push
jbe
insb
add
mov
leave
push
inc
and
aam
into
bnd
mov
cmpsl
es
jecxz
fbld
xlat
loope
mov
cmp
dec
jg
jp
sbb
ljmp
rolb
pop
mov
enter
jo
nop
daa
nop
sahf
adc
add
pop
outsl
xor
pusha
and
loopne
inc
sbb
scas
js
enter
outsl
lcall
dec
mov
push
scas
pop
inc
add
xor
mov
hlt
arpl
push
mov
loopne
pop
addr16
cwtl
jmp
xchg
jp
or
mov
movsl
cmp
sahf
dec
insl
ja
add
xchg
jbe
inc
cmp
icebp
pushf
andl
int3
rclb
mov
mov
jo
or
xchg
mov
push
shlb
out
cmp
fldt
dec
mov
mov
jmp
inc
xor
into
mov
pushf
je
add
jne
sub
movb
ljmp
testl
mov
pop
dec
adc
xlat
mov
icebp
cmp
xor
or
pop
mov
mov
pop
adc
xlat
mov
push
mov
pop
stos
pop
das
movb
inc
inc
jge
sbb
inc
jno
mov
sub
xor
pop
loope
dec
test
arpl
pop
dec
sbb
xlat
addr16
cwtl
popa
adc
mov
and
mov
mov
mov
sbbb
or
dec
cld
push
lods
outsl
lea
cmp
push
shlb
xchg
les
cmp
dec
push
dec
int
or
cltd
inc
jp
ret
jbe
jno
std
or
sbb
push
std
mov
cmp
es
xor
inc
mov
outsl
mov
xchg
add
sahf
pop
repz
in
add
mov
sbb
repz
mov
jb
xchg
out
sbb
movsb
lret
test
push
jb
aaa
dec
clc
daa
mov
adc
sbb
aaa
outsl
aaa
jae
lret
sbb
rsqrtps
lods
outsl
shrl
outsl
aam
imull
xchg
mov
ja
mov
add
cmp
dec
shrb
ljmp
and
mov
pop
cmp
dec
pop
dec
jae
sub
mov
lcall
mov
std
jge
jns
pop
sarl
sbb
test
jae
es
pop
mov
sbb
add
push
cltd
push
out
push
cmpsl
cmp
inc
ljmp
fwait
jae
xchg
les
cmpsl
mov
in
shl
add
mov
sbb
adc
dec
cs
movsl
push
mov
stos
add
sti
test
add
push
outsb
mov
pop
xchg
lds
or
adc
das
push
in
sbb
jge
sbb
fs
mov
mov
aad
xor
outsl
inc
jmp
mov
cmp
insl
inc
mov
nop
cli
aad
out
jo
rep
lcall
aas
push
mov
fisubrl
test
pop
lea
repnz
inc
adc
xchg
sub
addps
xlat
shrl
pop
cld
mov
jg
jnp
mov
mov
int3
jmp
sahf
in
add
test
scas
jne
lods
jp
xchg
mov
fstpt
testl
fstpt
pop
imul
mov
idiv
gs
inc
xchg
xor
inc
jae
cmp
push
pop
mov
sahf
mov
pop
xor
pop
fidivs
outsl
std
mov
test
cmp
mov
pop
lret
repz
test
fistps
out
sub
add
rcrl
dec
pop
xlat
lcall
jg
xor
sti
test
scas
stos
sti
adc
jl
roll
xorl
xchg
adc
sbb
push
data16
int
sbb
test
movsl
inc
cwtl
lods
xchg
fadds
movsl
arpl
or
xchg
sarb
jns
inc
xchg
dec
push
dec
ds
push
movsb
insw
mov
into
xor
imul
xchg
je
lea
jle
stos
stc
cmpsb
nop
repnz
xchg
js
out
in
test
idivb
js
sub
push
add
jle
repnz
out
push
pop
cmc
push
mov
xchg
mov
push
movsb
imul
into
in
hlt
sbb
flds
icebp
mov
aas
sub
push
push
mov
aad
and
in
add
add
jl
mov
mov
mov
shlb
movb
adc
xchg
mov
out
jns
xchg
fs
aad
data16
imul
or
stos
inc
sahf
jmp
adc
lahf
and
dec
cmp
sahf
outsl
xorb
mov
clc
mov
and
sub
cmp
sbb
jp
ds
in
inc
push
movsl
adcl
jmp
rcll
mov
rcrl
nop
dec
cs
std
pop
and
push
jnp
cmp
aam
pop
jle
mov
int
push
sbb
or
pop
xchg
lea
dec
cmpsb
out
mov
int
jae
loop
pushf
shll
repz
pusha
cs
and
outsl
in
inc
mov
loope
sub
into
cmpsl
cmp
loopne,pt
ja
dec
push
mov
sub
fldl
add
sbb
pop
lcall
ud2
lcall
pop
data16
jne
mov
rcr
dec
add
inc
xlat
leave
xchg
xchg
in
repnz
mov
dec
imul
sbb
jp
push
jbe
out
or
xchg
sbb
jns
in
insb
cmpsl
cmpsl
or
xor
xor
cmpsl
dec
movsl
pusha
push
or
adc
dec
xor
addr16
sub
sub
push
icebp
and
mov
gs
inc
lahf
test
adc
mov
shrl
sbb
subb
jno
lahf
mul
js
subb
rcll
repz
push
adc
lods
mov
shlb
xchg
inc
mov
mul
inc
mov
sub
in
mov
and
mov
insb
push
add
cmc
leave
dec
imul
cmpsb
int
scas
xchg
and
mov
push
dec
insl
es
adc
loope
jae
jo
mov
aas
add
mov
lock
xor
mov
sti
cmp
and
pusha
in
fmull
mov
mulb
insb
iret
daa
xchg
xchg
mul
imull
mov
shll
mov
fiaddl
jl
xchg
xor
ss
sbb
fwait
mov
lds
push
call
and
jnp
insl
imul
inc
push
fs
nop
xor
mov
lock
sub
mov
xlat
cli
es
push
fdivr
push
sahf
mov
cmc
call
pop
xchg
scas
idivb
xor
mov
xlat
adc
rcr
mov
xchg
xor
divb
add
jne
bound
cltd
js
insb
rcrb
cmp
pop
test
cli
pop
inc
fnstcw
add
mov
and
add
mov
sbb
mov
lea
jae
jo
repnz
sub
scas
mov
mov
sti
rolb
fdivs
xor
pop
loop
cmp
into
frstor
jge
inc
repz
dec
cld
rcll
xor
dec
test
call
call
mov
mov
jge
pop
push
and
stc
mov
test
icebp
aaa
inc
rolb
notb
loop
mov
sbb
into
ja
pusha
iret
test
add
out
ljmp
popa
or
dec
aas
sbb
imul
xor
xor
mov
clc
dec
dec
lea
subb
mov
sub
pop
jp
mov
add
fsubrs
aaa
or
imulb
into
gs
sub
fldenv
xor
xor
xchg
cmp
add
push
sub
dec
jl
sub
stos
int
push
inc
aad
rorb
movsb
inc
ret
xchg
xor
adc
push
jecxz
xchg
adc
fistpl
test
shrb
cmpsb
sbb
test
add
sbb
push
insb
adc
jo
ret
fwait
icebp
cmp
ljmp
xor
mov
lcall
xchg
into
add
out
loop
repz
sbb
sbb
adc
pop
arpl
out
sbbl
xchg
fdivs
xchg
orb
push
dec
cld
stos
aaa
cmp
fwait
adc
xchg
jp
nop
cltd
int3
call
push
push
loopne
cs
and
pop
inc
out
mov
and
jae
xchg
div
out
fimuls
sarb
cmp
aas
xor
adc
inc
mov
jecxz
loope
pop
jmp
jg
js
xor
movsl
xor
sbb
test
arpl
jecxz
or
ja
insl
jecxz
sbb
movsl
jl
iret
test
dec
dec
sbb
sbb
inc
jp
push
adc
fcmovne
dec
cld
fdivrs
mov
cli
push
jge
mov
jmp
sub
orb
push
inc
sub
pop
push
insb
cmpsb
add
sub
pop
out
addr16
xchg
or
jle
in
sub
int
stc
mov
mov
lmsw
sbb
mov
sub
call
mov
imul
add
xchg
iret
mov
cmpsl
lret
mov
push
hlt
and
bound
popf
fstl
mov
insb
and
lcall
or
mov
popf
loop
and
xchg
nop
adc
pop
add
push
sub
fcmovne
dec
push
inc
es
dec
push
jecxz
and
sub
cmp
out
xor
dec
sub
dec
sub
push
icebp
mov
out
sub
inc
in
cli
add
aam
sti
arpl
xchg
mulb
and
icebp
movsl
ss
sub
dec
jmp
clc
gs
aas
dec
shll
insb
cwtl
mul
mov
cwtl
and
xchg
and
repnz
sbb
pop
and
movsl
mov
cmp
ja
xchg
loop
call
sub
mov
je
loope
aas
lock
mov
cmp
popa
jge
lds
movsb
mov
pop
popf
insl
fmul
cmp
mov
mov
jnp
cmp
jmp
imul
aam
daa
adc
sbb
dec
push
dec
mov
or
js
aaa
mov
lahf
shr
call
icebp
cmp
inc
call
add
fists
fsubrs
mov
sarl
and
pop
adc
clc
xlat
mov
into
mov
lods
lahf
dec
push
add
shlb
inc
fmull
std
fnsave
xchg
xchg
cmpsb
xor
pusha
push
pushf
mov
xchg
test
jbe
es
mov
mov
ja
mov
popa
test
cmpl
xor
or
ficoms
add
fisubrl
stos
jnp
pop
or
hlt
outsb
sbb
rol
push
inc
into
xorl
aas
adcb
xlat
out
mov
sub
xchg
mov
mov
es
pop
pop
adc
pop
movsl
jno
icebp
out
cltd
test
in
add
sub
jo
and
dec
loopne
xchg
test
out
sbb
fwait
jo
sbb
cmpsb
xchg
adc
mov
pushf
push
mov
stos
clc
das
lods
or
adc
repz
pop
out
scas
std
add
sahf
mulb
pop
push
jecxz
movdqu
es
push
mov
dec
ss
sub
inc
mov
push
lea
mov
loopne
ret
inc
clc
mov
daa
outsb
xchg
dec
xor
daa
cli
dec
xchg
lret
dec
pop
movsl
and
push
rcrl
xchg
adc
ret
ds
loop
jb
xchg
int3
sbb
and
dec
jge
stos
mov
mov
push
call
inc
aaa
hlt
or
push
xor
mov
mov
dec
bound
fiadds
sub
push
bnd
or
test
mov
push
add
adcb
mov
inc
and
dec
mov
mov
or
add
sti
mov
jns
adc
inc
rcr
arpl
addr16
aaa
jb
fucom
outsb
or
jp
ja
mov
lds
adc
ja
shrb
fstl
rclb
mov
inc
sub
push
adc
sbb
jbe
cmp
cld
pop
add
shlb
push
pop
pushf
outsl
loop
movsb
jo
test
xor
fisubl
pop
scas
dec
into
cmp
test
aaa
mov
in
fwait
xchg
cli
dec
repz
inc
jnp
or
data16
xchg
push
jl
jb
mov
push
loopne
sbb
cld
pop
enter
aam
scas
jge
mov
jnp
pusha
popa
fs
add
clc
pop
sbb
adc
imul
dec
mov
add
sbb
sub
dec
xor
loope
les
push
dec
stc
hlt
ljmp
push
pop
pop
xlat
clc
lcall
sub
push
std
aam
add
in
repnz
and
cmp
sub
mov
movsb
mov
add
or
sbb
shrb
xchg
pusha
lret
mov
adc
ret
cmp
inc
pop
and
clc
cmp
aas
fcomps
xor
popf
pandn
xor
sub
inc
add
cmpsl
outsl
lock
xchg
jno
lea
pop
and
push
mov
jbe
sahf
out
jae
and
xor
dec
cmp
push
dec
aad
sub
push
das
mov
xchg
jne
mov
pop
out
mov
push
dec
mov
push
das
push
jne
pop
add
icebp
or
mov
stc
inc
dec
sarb
int
lds
imul
push
push
jg
int3
dec
test
sbb
fistl
push
lret
inc
dec
inc
pop
test
aas
cmp
dec
add
sbb
pop
rcrb
notb
ljmp
leave
jmp
xor
adc
pop
push
cmp
cmpsl
rcrl
add
rorl
mov
xchg
test
dec
sbb
mov
push
pop
out
mov
adc
movsb
adc
sarb
jo
dec
dec
imul
iret
push
jnp
es
int3
adc
out
out
pop
jo
dec
or
ret
cli
pop
inc
mov
xchg
cmp
pop
into
or
into
leave
std
insb
arpl
cli
add
mov
test
or
lea
testl
inc
imul
sbb
loope
cwtl
sub
cli
fcomps
inc
shrb
std
addr16
push
jno,pn
cltd
push
push
push
cmpsl
loope
pop
ret
xchg
mov
jmp
in
loope
or
jmp
movsl
push
out
and
out
push
dec
pop
rcrl
pop
add
iret
inc
xor
cmpsb
mov
clc
andl
aas
out
push
and
dec
ficoms
in
leave
jle
dec
repz
and
xchg
fs
bound
push
clc
jns
pop
push
or
loope
pop
jl
xlat
xchg
insl
push
test
mov
adc
sub
aad
out
ret
mov
fnstenv
xor
out
rorb
mov
rclb
sbb
scas
outsl
leave
movsb
sbb
mov
add
sbb
sub
ss
out
imul
inc
mov
sbb
or
sbb
sub
jo
negb
aam
mov
pop
mov
ljmp
aad
leave
cmp
clc
outsb
faddl
push
push
pop
enter
jge
bound
ss
nop
adc
mov
ret
outsl
adc
and
add
in
mov
or
jl
lahf
pushf
nop
testb
push
stc
pop
popa
cmp
xor
push
roll
jp
jb
xchg
pop
xchg
xchg
dec
mov
movzbl
jbe
in
sahf
or
or
pop
scas
xchg
pop
cltd
jmp
cmpsl
mov
sub
rolb
adc
cmp
adc
mov
mov
xor
out
sti
lret
aam
out
jp
pushf
cs
cmpsl
frstor
or
or
dec
scas
bound
mov
sub
push
mov
mov
loop
lcall
push
inc
push
repz
fildl
enter
sub
pop
shr
mov
movl
xor
add
xlat
addr16
addr16
int
mov
add
pop
mov
xor
lock
push
and
xchg
kmovb
push
xchg
addr16
lods
cmp
in
cmp
movsl
pop
adc
inc
jge
pop
mov
das
push
jbe
xchg
hlt
filds
inc
push
jne
les
rcrl
std
mov
sub
stos
jmp
mov
inc
xchg
push
fiaddl
push
cmp
add
js
adc
movsl
push
pop
dec
add
dec
addr16
push
ror
jnp
xor
mov
aaa
xor
pop
aam
cmpsb
cmpl
pushf
outsl
push
add
push
ljmp
xchg
push
push
loop
insl
ja
inc
dec
ret
popf
and
into
push
inc
mov
mov
sbb
mov
push
fadd
loope
cmp
inc
sbb
dec
out
pop
sti
loope
movsl
lods
pop
jge
pop
add
xchg
cmp
sahf
jns
jmp
je
mov
inc
out
lods
mov
push
pop
or
leave
lds
mov
daa
sub
xor
ret
ret
icebp
nop
sub
or
push
pop
rorb
sahf
fnsave
add
es
iret
mov
mov
hlt
xorl
repnz
addr16
notl
mov
call
inc
pop
es
testl
xor
outsb
addr16
cmc
mov
pop
dec
loop
ret
add
mov
jne
ja
xchg
dec
sbb
fsubrs
jne
loop
sahf
lds
add
mov
push
pop
mov
icebp
or
not
rorl
cmp
std
cwtl
and
or
in
add
int
sub
adc
pop
ret
push
aad
cmp
iret
aaa
rcpps
xchg
push
xor
mov
inc
cmp
popf
jmp
push
mov
jle
cmpsb
or
jmp
scas
dec
and
pop
lds
jge
arpl
jg
xor
push
sub
jmp
outsb
xchg
rcll
test
push
inc
hlt
push
mov
stos
inc
mov
jl
leave
cwtl
in
push
pushl
xor
and
and
stos
dec
bound
cmpsl
sti
jns
and
jmp
shrl
mov
jge
cmc
and
shlb
cmp
outsl
mov
dec
xchg
stc
rclb
and
int
enter
push
push
mov
sbb
sbb
cmp
mov
incl
xchg
jb
jne
in
call
std
vmulpd
into
int3
cwtl
shrl
shl
pop
add
popa
cld
frstor
stos
repnz
pop
push
cmp
add
adc
fcoml
inc
insl
shrb
adc
jb
sub
pop
xchg
out
jmp
jl
cltd
rol
or
pop
pop
jecxz
les
push
lret
sub
insb
sahf
sbb
xchg
out
lcall
mov
notl
outsl
sarb
lret
stc
movsl
pop
cmpsb
or
jo
out
xor
jb
jnp
repnz
push
imul
lcall
and
lds
fildll
in
or
ret
mov
lds
push
push
xchg
aaa
fisubl
adc
xor
out
pop
outsb
and
movsl
in
sbb
mov
add
xor
es
leave
mov
sub
jo
mov
ficoml
and
ljmp
fsubrs
mov
in
xor
insb
ds
dec
into
inc
in
mov
pop
push
pop
faddp
mov
xchg
xor
jno
call
outsb
out
cmpsb
mov
push
fmul
ds
mov
push
dec
mov
mov
mov
cmp
push
lea
mov
lods
lock
jecxz
mov
fcoml
sbb
int3
in
sbb
push
sbb
rol
lahf
jo
idiv
mov
push
mov
or
mov
dec
and
cmp
popf
fwait
xor
xchg
mov
inc
out
sahf
inc
out
imul
sbb
and
dec
fimuls
js
popa
xchg
movsb
push
xor
sbb
mov
popa
lea
out
push
xor
sub
and
mov
adc
xlat
and
mov
insb
aas
jle
enter
cmp
inc
gs
jo
popf
push
es
scas
add
leave
and
mov
fwait
mov
fldcw
or
movsb
sbb
int3
or
pushf
enter
repz
xchg
jns
test
jmp
rorb
pop
mov
out
in
cli
test
pop
rorl
or
xlat
adc
outsb
xor
xor
jp
dec
cmp
sahf
and
fnstsw
sbb
cltd
fisttpl
cmc
out
cmpsl
push
cmp
mov
xchg
jp
test
movsl
mov
cmp
sbb
sub
das
inc
xlat
fisttpl
cld
mov
jg
push
mov
mov
mov
dec
and
jg
sub
push
out
adc
scas
out
xchg
jle
loope
fldcw
int
fadds
fnstsw
push
cli
pop
jno
and
jo
cmp
popl
and
rol
lahf
xor
rolb
call
clc
sahf
mov
or
xchg
fildl
cmpsl
add
pop
sbb
and
arpl
repz
sarb
push
sahf
jbe
xor
sbb
aad
idivl
or
cltd
push
data16
movsb
sti
cmpsb
rorb
ss
mov
push
rcll
jbe
push
xchg
pop
jecxz
jo
dec
pop
insl
pop
ret
pop
mov
rorl
lcall
xor
pop
ror
jl
jp
or
cmp
insb
xchg
lods
test
mov
ret
mov
mov
jno
push
xchg
pushf
fnsave
leave
lds
in
dec
mov
aaa
push
jg
insl
in
sub
push
in
add
cwtl
dec
mov
aad
clc
dec
adcb
daa
jne
cltd
inc
call
repnz
dec
js
std
mov
sbb
push
aas
clc
cmp
mov
in
lret
rcr
jne
and
dec
xor
jns
cwtl
insb
sbb
pop
test
jg
ja
stos
mov
push
cmp
outsl
fs
push
aad
test
add
mov
cwtl
testb
popf
mov
fmul
imul
in
data16
xor
push
ljmp
js
loopnew
mov
jae
clc
stos
jle
mov
rcll
xchg
out
add
pop
or
xchg
ja
xchg
das
mov
mov
adc
repnz
shlb
ss
pop
dec
fwait
mov
ffreep
imul
aad
pop
popa
pop
outsl
mov
and
outsl
test
push
xchg
nop
mov
jecxz
int
jo
cmp
mov
pop
pop
int
sti
mov
cmp
stos
mov
ret
gs
pop
cs
test
sahf
xchg
push
push
scas
in
xlat
sbb
pusha
push
and
sbb
adc
xor
add
inc
popa
mov
inc
jb
sbb
pop
pop
test
pop
mov
jnp
dec
jmp
mov
or
sbb
fdivr
pop
dec
dec
adc
dec
cmpsb
xor
mov
dec
push
push
cmpsb
mov
into
cmc
and
sbb
cmp
das
xchg
sub
lea
pop
dec
movb
mov
jg
cmp
mov
jno
mov
sbb
or
dec
push
int
mov
shll
sub
pushf
pushf
add
verr
mov
pop
insb
sti
xchg
sbb
outsb
cmc
xchg
pop
insl
stos
pop
movsb
loopne
shlb
mov
xchg
fwait
lods
mov
fidivrs
or
lahf
mov
xor
cmc
inc
fs
pop
out
pop
es
iret
call
dec
mov
jecxz
rol
xchg
sub
clc
xchg
lock
fnsave
insl
cmp
pop
mov
inc
sahf
jg
or
mov
xchg
jle
cmpsb
clc
xchg
cltd
xorl
or
cmovnp
push
out
xchg
cmpsl
mov
call
inc
xchg
mov
fwait
sbb
dec
enter
sahf
push
fiadds
das
std
adc
dec
or
jl
xsavec
cmc
sbb
cmp
lods
es
repnz
ret
pop
mov
cmp
mov
sub
ds
jo
aas
push
dec
xchg
cwtl
mov
fistl
sahf
fidivrl
dec
xor
iret
mov
or
pushf
or
and
dec
push
jl
stos
pop
push
mov
cmpsb
push
sub
sub
das
pop
jne
cmpsl
jl
es
test
pop
push
dec
cmpsb
push
and
push
pop
aaa
xchg
fmuls
decb
jmp
jmp
add
xchg
subb
int3
mov
arpl
cmp
je
jle
mov
xchg
push
jle
add
sbb
jnp
test
cwtl
dec
ss
mov
dec
mov
jae
mov
cmp
not
hlt
movsb
xchg
xchg
dec
repz
jle
sahf
dec
and
stos
ret
and
ljmp
add
jmp
jmp
cmp
or
addl
mov
jns
sbb
emms
insb
adc
insb
divb
das
std
inc
xchg
cmc
mov
mov
sahf
stos
or
lds
nop
lret
mov
bswap
das
xchg
jmp
jo
fists
outsb
call
fildll
push
iret
popa
cmp
lahf
push
sti
sahf
jnp
lods
sub
jns
dec
mov
jg
fldenv
mov
in
jp
scas
in
in
xchg
or
jnp
bound
int
jmp
pop
jae
xchg
in
hlt
fisubrl
add
std
inc
dec
addr16
mov
decb
pop
adc
mov
nop
mov
jge
fidivs
call
hlt
ret
add
xor
or
push
in
loopne
mov
sbb
call
jnp
sbb
js
loope
sbb
jo
sub
adcb
mov
lds
out
adc
xchg
in
push
jne
push
inc
pop
jns
dec
repnz
lahf
cwtl
outsl
stc
cld
or
outsb
mull
adc
test
ja
loopne
aaa
mov
jmp
testl
add
fcompl
xchg
push
lods
mov
or
push
and
aaa
lcall
xchg
xor
inc
je
jae
pop
xchg
adc
jg
push
insl
push
mov
and
xor
add
movsl
jle
outsb
jge
mov
in
ret
push
lahf
inc
cld
aas
inc
rorl
mov
push
cmp
testl
dec
data16
jge
add
dec
int3
js
rcrl
call
mov
popa
add
xchg
inc
lcall
rcll
push
push
mov
mov
sub
jge
loope
pop
mov
dec
sbb
outsl
outsb
add
xchg
adc
cmp
or
dec
mov
ja
jne
aam
mov
std
out
rcll
mov
js
and
insb
ss
jb
xchg
pop
fs
fiaddl
leave
and
sub
arpl
pop
ss
jns
pop
push
add
jbe
je
lods
in
or
pop
es
inc
xor
cmpsb
sub
enter
repz
jnp
cmpsb
push
push
or
cwtl
sbb
mov
icebp
call
pop
je
sbb
popf
inc
sbb
jb
pushf
jae
inc
jb
stos
mov
std
and
dec
subl
pop
xor
mov
mov
daa
or
push
dec
mov
push
aaa
jb,pt
das
push
xchg
dec
cmpsb
xchg
and
ss
inc
add
jl
pop
add
or
jne
int
rcll
lods
jecxz
mov
out
dec
xchg
xor
movsb
mov
rcrl
mov
shl
jne
pushf
nop
or
vpunpckhwd
dec
push
push
insb
call
mov
mov
inc
dec
cltd
bound
mov
shll
or
pop
les
lcall
jnp
jo
jbe
scas
cmp
sbb
add
mov
sub
cmpsb
xor
sarl
mov
mov
es
ret
push
mov
insb
mov
insl
pop
icebp
pop
xchg
dec
inc
lds
aam
mov
xor
push
imul
jle
jb
int
out
pop
das
mov
add
sbb
inc
rorl
insb
stc
sti
inc
inc
arpl
je
pop
pop
pop
je
and
pop
imul
lcall
xchg
push
pop
pop
adc
test
outsb
sahf
push
add
test
lret
outsb
jns
shlb
insb
jge
mov
notb
mov
sbb
arpl
dec
stos
frstor
xor
add
cmpsl
mov
fnstcw
aam
repz
and
out
xchg
cmpsb
cmp
popf
data16
setns
pop
pop
and
scas
lret
jle
es
add
out
cmp
inc
mov
inc
sbb
enter
jb
fiadds
xor
insb
out
dec
xchg
jno
stos
dec
stos
adc
shl
mov
sahf
xor
cli
jno
add
fists
dec
iret
or
sti
iret
test
or
std
mov
cmc
add
mov
dec
push
mov
mov
add
fcomps
scas
dec
icebp
les
jnp
cmp
icebp
lcall
cmp
lods
cmp
lahf
pop
orb
repz
mov
or
fisttpll
outsl
popa
push
adc
jmp
xor
mov
iret
ficomps
fcompl
sbb
call
cwtl
iret
cli
xchg
or
mov
jg
out
mov
fbstp
xchg
imul
mov
push
outsl
fstps
jmp
int
lea
dec
push
pop
mov
ss
dec
sbb
addr16
mov
mov
mov
xor
mov
jbe
dec
sub
mov
jg
add
dec
or
sub
fs
xchg
or
dec
loopne
sub
cmpsl
ja
sub
das
cmp
int
and
cmp
shrl
nop
mov
shll
mov
push
xor
scas
dec
sub
fwait
mov
daa
pop
sub
mov
fbstp
cmp
addr16
add
push
rorb
pop
sub
pop
adc
out
hlt
sbb
jb
or
dec
inc
lods
xchg
fdivr
push
mov
mov
inc
adc
scas
roll
fcoms
in
cmpsb
inc
test
mov
fcomps
repz
outsl
test
fabs
mov
mov
shrl
lods
addr16
push
pop
push
popf
rcl
mov
add
adc
jle
xchg
shrl
sub
jecxz
scas
xor
jecxz
aam
fdivl
repnz
hlt
xchg
xchg
push
fwait
sub
cmp
adc
mov
mov
xchg
rep
xor
test
nop
shr
inc
push
loope
mov
cmp
cmp
mov
xchg
stc
push
loopne
mov
out
lcall
lods
jp
sub
adc
push
mov
push
xor
das
push
inc
ret
clc
iret
push
push
cs
pop
cmpsb
out
in
push
and
das
clc
std
repz
sti
cli
mov
loope
xor
gs
push
push
or
je
mov
loop
fnstenv
or
add
repnz
sbb
ljmp
je
popa
icebp
aaa
dec
mov
mov
outsl
bound
inc
ljmp
pop
dec
mov
lods
and
push
xor
mov
and
bound
jl
sarb
dec
cmpxchg
das
mov
sbb
cmc
mov
insb
adc
idivl
notb
push
xchg
xor
add
mov
xor
sub
into
stos
addr16
or
in
fistpl
cmp
jnp
lcall
gs
mov
adc
jecxz
scas
xor
mov
inc
popa
arpl
subb
xor
inc
mov
pop
fdivr
xchg
push
fsubrl
pop
mov
mov
ds
into
jbe
and
lcall
add
dec
rcll
xchg
jecxz
xor
mov
inc
aam
into
leave
fwait
lock
or
push
jns
scas
dec
lea
push
xor
pusha
sbb
daa
popf
mov
je
mov
pop
pop
shl
jle
aas
movsl
dec
movsb
xchg
jo
not
fstpt
pop
flds
out
pop
rcrb
xor
dec
push
pop
aaa
fimull
icebp
dec
scas
inc
pop
push
dec
jg
pop
adc
imul
loopne
sbbb
and
xlat
sub
outsl
addr16
and
sti
pop
xchg
mov
mov
xor
pusha
insb
and
xchg
xor
inc
movsl
fwait
stos
cmp
inc
mov
mov
imul
xchg
movsb
stos
dec
aam
mov
push
sti
adcb
jb
in
xor
cmp
push
inc
sub
add
add
roll
mov
sarl
das
fwait
or
imul
cmc
inc
jnp
xchg
xchg
stc
fstl
cmpsb
pop
idivb
ds
hlt
dec
pop
cmp
jp
mov
xor
dec
mov
fucompp
addr16
or
dec
inc
pop
add
les
js
push
incl
dec
shrb
sub
mov
test
outsl
jg
push
dec
mov
fidivl
xor
or
or
add
pop
mov
inc
fwait
mov
push
xadd
lcall
nop
movlps
cmpsl
jmp
fiadds
mov
in
mov
inc
mov
lcall
pop
add
mov
std
add
mov
lret
cli
popf
xchg
fsts
xor
mov
loope
je
lcall
jne
sub
repnz
sub
cwtl
mov
out
rorl
nop
xchg
or
jp
xchg
or
add
pop
xor
add
lods
fmull
and
sbb
icebp
int3
mov
push
cmpsl
stc
outsb
push
stos
pop
cltd
pop
dec
xchg
mov
pop
pop
dec
movsb
mov
inc
js
mov
xorl
adc
int
mov
mov
aaa
dec
xchg
fisttps
inc
pop
jge
inc
out
cwtl
xor
push
xchg
jbe
adc
sub
xchg
push
test
mov
and
lcall
lret
or
sub
and
out
std
leave
dec
xchg
push
lea
cltd
dec
hlt
fbld
cmp
scas
popf
outsb
notb
push
cmp
or
xchg
outsb
xor
cmpsb
decl
cltd
mov
push
cmpsl
fmuls
ja
inc
sti
insl
mov
xor
loop
xchg
pop
adc
movsl
pop
leave
fildll
add
inc
das
or
lahf
inc
popa
and
out
je
dec
repz
dec
cmp
lret
dec
sbb
ret
jnp
loopne
and
stc
aaa
insb
loop
cmp
inc
jae
mov
inc
cwtl
or
cmp
add
inc
or
and
daa
das
leave
and
mov
insl
movsl
and
add
and
mov
lret
sbb
stos
nop
idivl
jle
push
and
xor
dec
test
lret
ja
aas
xchg
ss
xor
and
lea
or
xor
jne
jno
dec
jo
add
lcall
test
loope
pop
adc
sub
out
xor
dec
ret
jbe
insl
jb
xchg
sub
fcoml
pop
pop
int3
add
sub
inc
fs
pop
push
add
mov
leave
hlt
repz
mov
push
pop
lahf
jb
and
lcall
lret
rclb
mov
add
add
int
data16
xor
lds
mov
adc
je
xor
lret
ret
mov
pop
adc
jnp
cmpsl
or
in
gs
fsubrp
hlt
jns
test
jb
push
mov
mov
lods
push
rcll
add
push
ja
xor
sahf
je
sub
aas
ror
int
dec
pushf
mov
rcrb
lcall
cmp
xchg
mov
jno
movsl
sub
sarl
aas
repz
je
push
mov
out
jle
dec
inc
mov
xchg
dec
jae
jno
pop
jmp
inc
pop
pushf
mov
pop
mov
loopne
in
in
inc
mov
sbbb
cli
mov
add
push
lahf
cmp
jge
sub
psrad
mov
jl
mov
das
lcall
rcr
mov
and
mov
lret
push
mov
aam
push
lods
xchg
ficompl
xor
rcrb
mov
js
add
lret
int3
lcall
pop
mov
pop
add
mov
dec
in
rcll
sbb
cmp
add
outsb
mov
push
or
push
movsl
dec
add
mov
fstl
push
jno
inc
dec
insb
mov
xchg
repz
cmpsb
jmp
push
test
movb
insl
ret
imul
xor
jle
pusha
sbb
mov
dec
rol
dec
adc
xchg
push
dec
lods
and
mov
jmp
or
pop
inc
enter
imul
mov
and
adc
in
fwait
mov
sub
adc
mov
fwait
mov
or
leave
dec
dec
fs
ret
xchg
fildll
push
inc
and
mov
das
pop
jmp
cmpsb
ss
fwait
cmp
stos
mov
cmp
adc
das
cmpsl
dec
loope
subl
rorl
fldcw
jmp
lock
hlt
les
add
imulb
or
insl
hlt
out
cmpsb
xchg
pop
mov
out
je
add
ret
push
fistpl
mov
cli
xor
dec
cmp
lea
xchg
rep
dec
inc
jne
sahf
jge
test
ret
xor
mov
lock
xchg
jmp
mov
sub
incb
ja
insb
pop
inc
push
in
sbb
or
repnz
fildll
jns
add
fdivrp
push
sub
in
insl
fsubr
shlb
das
jbe
pop
sbb
movsb
cmp
jl
shrl
movsb
dec
imul
jp
push
loope
xchg
inc
xor
outsl
ja
loop
pop
mov
mov
stos
lcall
xchg
fiaddl
xchg
faddl
fstpt
das
adc
add
push
cmp
adc
and
ljmp
ds
sti
popf
jae
lods
outsb
dec
sar
sbb
mov
std
adc
pop
inc
mov
jecxz
mov
or
pushf
bt
push
or
push
sub
popl
jp
outsb
pop
fsubs
inc
cmp
xchg
adc
mov
xchg
mov
jg
lahf
mov
jmp
jmp
push
addr16
arpl
inc
mov
dec
fisubrs
mov
mov
inc
xchg
arpl
mov
push
cmpl
cmp
out
inc
stos
xchg
fisubrl
or
sub
pop
push
fldl
hlt
or
leave
xchg
jbe
repz
mov
xchg
cmp
inc
and
push
mov
mov
shlb
fcoml
cmpsl
add
pushf
fnsave
mov
movsl
push
jbe
mov
scas
imul
cld
cs
lock
mov
je
dec
insl
stc
jne
sbb
dec
adc
xor
nop
lods
int3
subl
mov
lret
mov
inc
inc
inc
nop
addr16
pop
push
dec
adc
jp
jl
push
loop
fs
stos
outsb
adc
inc
dec
push
stc
inc
mov
inc
xor
loope
or
xor
sub
test
roll
push
jge
fiaddl
je
mov
mov
icebp
sub
pop
gs
mov
mov
hlt
mov
orb
scas
mov
mov
xor
add
jl
ja
ret
call
mov
in
adc
lret
aam
pop
mov
sbb
ja
push
jmp
jmp
xchg
idivb
cmc
mov
push
add
inc
lods
push
enter
sub
cwtl
cmpl
mov
ja
or
js
lea
cmp
fidivrl
clc
jno
fs
daa
outsl
rclb
data16
xchg
stos
and
mov
xor
jae
jae
xchg
out
sbb
adcl
and
aad
or
pop
cmp
dec
xor
mov
pop
jnp
push
pop
push
mov
xchg
jle
sub
jne
int
fdiv
sbb
testb
sub
fdivrl
inc
jae
icebp
out
mov
mov
push
leave
jge
or
out
fsts
out
jecxz
js
mul
gs
popa
cmp
and
or
mov
mov
cs
imul
jl
into
pop
mov
inc
xor
sub
sbb
jmp
movd
dec
mov
pop
das
in
and
xor
add
mov
jge
or
jae
xchg
and
clc
lret
sbb
enter
jge
sarb
imul
nop
mov
xor
sbb
lock
mov
aaa
xchg
mov
push
lock
pop
and
jecxz
dec
scas
mov
mov
ss
xor
icebp
sti
rorl
int
cmp
cmpsb
sub
or
adc
jg
movsl
leave
scas
mov
xor
cmp
pop
cmp
ss
roll
push
stos
adc
adc
gs
dec
hlt
add
add
xchg
pusha
mov
inc
pop
add
mov
idivb
mov
xor
test
arpl
fidivrl
pop
push
jmp
jns
adcb
xorb
sti
test
nop
repnz
adc
pop
int
in
ret
andb
out
das
jns
xor
std
push
dec
sahf
iret
mov
xlat
jge
sahf
mov
push
xor
dec
or
push
sub
inc
jae
mov
jp
mov
jbe
addl
mov
mov
sarl
movsb
test
xchg
push
sub
pop
int
les
fld
or
add
fadds
fistl
scas
cmpsb
out
loopne
lods
jl
adcl
sbb
sarl
pop
out
cmp
xchg
loopne
sub
pop
jns
xchg
add
adc
movsb
imul
dec
inc
test
inc
int
sub
popf
push
shrl
ret
sbb
std
test
lea
push
mov
rolb
fmull
mov
movsl
dec
sbb
cli
mov
cltd
and
pop
sub
cmpsb
push
dec
mov
cmp
sub
movsb
inc
ret
add
mov
xor
add
dec
lret
inc
fcoms
inc
inc
cs
inc
jl
push
mov
loop
inc
mov
cmp
ret
lahf
lods
jns
mov
xor
dec
jns
mov
outsl
orb
xchg
pop
jle
add
inc
pop
icebp
sbb
ja
sbb
popf
sub
xchg
push
out
pop
xchg
push
sub
push
negl
repnz
mov
sub
mov
jns
fiadds
popa
push
sbb
out
iret
ret
push
jbe
lcall
xor
jnp
sbb
xchg
xor
sbb
sarl
mov
dec
jecxz
mov
ret
mov
dec
sbb
outsb
orb
xor
push
ss
xchg
dec
test
inc
scas
in
aam
rolb
or
pop
insl
mov
push
adc
shl
stc
stos
scas
loopne
sbb
mov
outsb
add
movsb
inc
pop
fdivs
pop
cmpsb
inc
fidivl
push
lods
sti
inc
mov
das
in
mov
ss
stos
push
pop
std
sbb
push
add
add
cmp
clc
fisubrl
loope
stc
loope
filds
mov
jo
mov
test
mov
adc
sub
scas
outsb
push
xor
push
add
stos
push
out
or
jbe
sbbb
xchg
stos
shll
call
jae
lret
mov
mov
xor
insl
jmp
cli
push
les
rclb
xor
jg
xchg
inc
fistps
shlb
mov
cmpsl
and
lahf
clc
in
add
lcall
mov
sbb
xor
enter
sub
fstpl
daa
adc
dec
pop
lret
push
loop
dec
cmp
dec
pop
mov
cmp
std
hlt
cmpsl
mov
or
inc
mov
insl
cs
repnz
adc
add
xor
roll
mov
std
nop
cld
xchg
push
jo
dec
cmpsl
jbe
lcall
popa
mov
push
mov
int
push
int
push
cmc
xor
fstpl
inc
push
jmp
push
cld
or
das
out
lret
mov
xchg
stc
mov
lcall
aad
imul
and
and
dec
mov
mov
cwtl
mov
add
pop
and
mov
xor
jg
cmp
pop
stos
sub
xchg
adc
outsb
fnstcw
and
je
jl
jnp
push
cmp
aam
mov
mov
jb
mov
aaa
out
fsubrl
mov
inc
pop
arpl
test
sti
cmp
cs
out
fistl
sub
fnsave
lods
inc
and
mov
stc
push
and
sti
cmp
sub
jl
cmp
fs
stos
std
lods
push
pop
mov
xchg
popa
xchg
inc
loope
mov
add
sbb
cmpsb
push
inc
mov
sub
mov
or
adc
add
push
mov
fistpl
js
shl
add
pop
jbe
insl
mov
in
push
out
add
pusha
lods
cmp
lret
mov
pusha
out
adc
push
mov
popf
dec
pop
fidivrs
sbb
mov
and
subb
xor
icebp
xlat
xor
jle
pushf
mov
cli
iret
and
fsubl
add
xchg
sbb
push
cmp
lea
push
jnp
sti
mov
dec
adc
popa
ret
aaa
je
jmp
insl
inc
pop
in
shlb
dec
rolb
jle
dec
gs
pop
insb
jmp
rorb
xchg
loope
add
inc
out
loop
orl
mov
lahf
or
mov
push
test
popa
mov
inc
pop
mov
or
cmp
push
adc
mov
mov
xchg
lret
push
cltd
sbb
adc
cmp
loope
test
jge
and
dec
dec
xor
pushf
xchg
icebp
mov
out
das
dec
ja
rcll
xchg
push
jle
or
sti
enter
push
push
cmp
jmp
test
xchg
adc
cmp
std
or
ret
pop
mov
push
stc
hlt
cld
mov
lcall
into
add
popf
push
inc
xchg
cmc
sti
add
scas
xor
sbb
and
call
xchg
mov
push
js
jno
push
or
push
push
pop
or
fdivs
push
jmp
nop
testb
or
outsl
call
stos
xchg
aam
nop
nop
test
push
fwait
cmp
test
inc
cmp
jle
cmp
or
nop
cli
addr16
test
cli
inc
push
and
and
lds
inc
mov
test
mov
lret
add
mov
addb
xor
cmp
sbb
stc
scas
jnp
sbb
xchg
jae
push
orb
int3
dec
movsl
sub
popf
leave
push
mov
xchg
xor
or
imul
xchg
sbb
inc
test
cmpsb
jl
jg
mov
out
adc
dec
cmp
mov
lock
into
dec
ret
inc
xchg
lea
mov
mov
or
jl
pop
cli
xchg
je
xchg
sbb
imul
lods
testb
movsl
aaa
push
in
stos
lahf
das
cmpl
lods
dec
add
fildl
rclb
fcompl
test
mov
sub
jecxz
fists
cmpsb
enter
dec
dec
adc
out
sbb
loop
add
add
push
rorb
jmp
jle
mov
sbb
inc
test
sub
ja
outsb
adc
fsubrl
jo
add
jo
addr16
sub
dec
dec
cwtl
cmp
xor
ret
ucomiss
div
and
mov
sub
add
into
push
add
push
mov
cmp
fdivl
int3
push
cmp
add
jo
mov
or
mov
lahf
daa
shl
ret
cmp
scas
jl
adc
add
clc
and
bound
sub
push
mov
jl
pushf
shr
pop
notl
sti
xlat
call
xchg
add
or
adc
jnp
test
fs
pop
jbe
sbb
jl
or
fstpt
fldt
cmp
mov
jecxz
rol
cmp
add
jl
loope
sub
pusha
call
loope
push
sbb
push
pop
popa
mov
push
rcrb
pop
or
leave
or
out
mov
dec
cs
jg
fs
bound
sub
pop
pushf
xchg
das
ror
ljmp
lahf
mov
jb
jge
xor
jge
mov
testb
iret
xchg
lahf
mov
push
imul
push
es
cmpsb
mov
mov
roll
sub
mov
out
out
xor
loope
mov
or
fldl
sahf
adc
sub
jmp
inc
cmp
cs
and
movsb
insb
xor
in
iret
test
jo
cltd
sub
mov
lea
jne
fadds
inc
xchg
lea
cs
cmp
sub
mov
aas
jl
dec
scas
push
or
sbb
pop
xchg
hlt
mov
jmp
adc
or
mov
imul
add
xor
shrl
cmp
subl
je
dec
aam
repnz
pusha
addl
pop
hlt
rcll
sbb
outsl
cmp
loope
add
fdiv
adc
xor
idivl
mov
stc
add
into
sub
jns
mov
inc
mov
bound
dec
pop
cmc
ss
int
push
fbstp
inc
dec
lahf
in
rorb
in
jecxz
dec
arpl
imul
sahf
scas
in
jne
pop
mov
dec
fsubrl
into
and
mov
lahf
test
daa
hlt
jo
cli
xchg
daa
les
jns
mov
inc
scas
xlat
xchg
rcr
push
sub
test
test
xor
bound
jns
mov
pop
mov
lock
mov
je
pusha
testl
or
mov
clc
pop
iret
push
jg
jnp
cld
mov
cmp
popf
or
leave
cmpsl
es
in
pop
iret
mov
cmp
add
loopne
mov
sub
adc
lds
xor
xchg
cmp
ljmp
push
popf
sbb
jne
add
sti
popf
push
out
and
cmc
in
nop
pop
pop
sar
jge
dec
sbb
xchg
dec
adc
fwait
rorb
or
inc
or
loop
mov
jl
je
data16
mov
stos
lret
push
dec
repnz
adc
hlt
or
pushf
add
add
pop
inc
mov
inc
mov
addr16
mov
mov
inc
das
jge
push
lock
aad
jecxz
test
popf
add
lds
dec
scas
sbb
ljmp
lret
adc
sub
adc
sbb
sbb
scas
lods
xlat
mov
or
dec
mov
add
scas
lods
mov
scas
mov
sbb
sbb
xor
es
pop
mov
push
sbb
jb
sbb
pushf
xor
movsb
pop
gs
in
filds
jg
pop
mov
out
roll
xchg
loop
repnz
popl
mov
push
push
adc
in
aam
push
arpl
gs
out
add
push
rcll
adc
aam
sub
pop
ret
test
pop
ljmp
cmpsb
ss
cli
pop
popf
repnz
sub
adcb
lea
dec
push
add
xchg
insb
scas
and
lods
xchg
int
cmp
inc
jb
test
das
xchg
cld
add
lret
cmpsb
fcom
fbstp
dec
movsl
jno
cmpsb
xchg
movsl
push
loopne
fs
orb
mov
lahf
xchg
pushf
lds
ss
pusha
add
aam
add
aas
jecxz
out
add
loopne
xchg
jb
push
fisubs
icebp
pop
mov
pop
and
fsub
dec
cmp
and
pop
mov
into
mov
popa
imul
lods
mov
or
sbb
dec
movsl
mov
lea
fcmovu
cli
in
push
out
push
popf
sbb
into
fwait
adc
sub
arpl
aas
xchg
mov
push
mov
fldpi
sub
in
and
test
xchg
jbe
sti
jge
jo
pop
stc
ds
cmp
std
sbb
sbb
repnz
inc
insl
les
mov
dec
mov
les
rclb
xchg
fs
xor
mov
xor
lods
lcall
leave
in
jmp
in
mov
adc
add
in
roll
test
aas
jle
fnsetpm(287
outsl
fisttps
mov
jo
pusha
jb
mov
push
or
sbb
scas
inc
leave
push
addr16
adc
mov
repz
add
aaa
testl
addl
mov
lods
xchg
ja
push
out
les
out
out
lcall
int3
movsl
es
out
ds
jae
adc
gs
scas
push
dec
dec
mov
outsb
das
lcall
push
ljmp
flds
ja
mov
lea
inc
repz
sbb
fwait
mov
push
sub
pop
cwtl
dec
test
xchg
into
in
or
mov
jns
mov
or
cmp
add
fisubl
jle
mov
leave
sbbl
outsb
das
and
xor
pop
xchg
ficoml
cmpsl
mov
xchg
iret
nop
loope
xlat
push
lods
inc
cmp
aas
dec
and
out
imul
xor
call
movsb
stc
push
insb
dec
adc
dec
sub
loopne
dec
rorl
mov
dec
mov
pop
lret
in
call
icebp
sub
pop
xchg
mov
jg
sahf
cltd
jmp
out
shll
add
mov
rcr
inc
imulb
cmpsl
jg
mov
sbb
cmp
inc
push
imul
mov
or
out
add
mov
jmp
bound
call
xchg
xor
in
clc
aaa
stc
mov
lret
icebp
pop
or
aas
out
mov
insb
test
inc
inc
ss
mov
xchg
stos
pop
pop
add
in
mov
cmp
mov
test
aaa
jge
popf
das
rcrl
cmp
pop
push
cwtl
sub
aaa
push
lahf
push
push
jnp
cli
int3
sub
stc
inc
outsb
adc
jp
and
std
mov
cli
xor
outsl
jecxz
sub
push
and
les
or
adc
clc
sbb
mov
lret
lcall
test
dec
rorl
fistpll
pushf
and
test
orb
push
cmp
testl
popf
adc
sbb
ja
jbe
lcall
movl
xchg
fcompl
in
ljmp
clc
mov
mov
cmc
test
aam
jmp
imul
inc
mov
and
jl
fnstenv
inc
scas
inc
cmp
cli
ljmp
int3
push
mov
out
xor
pop
and
cmp
cltd
je
loopne
fisubrl
sbb
roll
jae
iret
fimuls
mov
fisttps
inc
pop
xchg
movsl
into
lods
and
mov
adc
mov
cmp
adc
xchg
lods
sarl
sbbl
aam
pop
adc
lock
stc
in
pushf
or
inc
xor
jb
jnp
jb
aam
leave
insb
lret
cld
mov
cmovo
mov
pop
jns
int
aam
rol
rcrl
scas
fwait
add
sbb
xchg
jbe
push
dec
pop
mov
mov
push
push
ret
dec
add
jae
cli
xchg
fs
push
std
ret
mov
add
or
push
call
outsb
bnd
test
or
out
popf
das
lret
aas
fs
sti
stos
push
mov
movsl
mov
mov
xor
and
mov
jp,pt
push
scas
ja
movb
sub
sub
pushf
daa
in
mov
add
jns
stc
dec
adcb
lahf
push
ss
sbb
je
outsb
push
jno
stos
cmpb
xchg
and
stc
pop
or
jno
add
scas
sbb
pop
cwtl
cmp
or
jp
and
mov
cld
mov
sbb
in
sahf
adc
pop
push
mov
fs
jnp
andb
pop
std
stc
cmpsl
mov
cmp
add
in
or
mov
ds
dec
and
add
xor
mov
cmp
daa
pop
push
fstl
movsl
insb
ret
mov
out
adc
sbb
jns
pop
pop
jmp
jge
fadds
cmp
sbb
lods
add
movsl
outsl
loop
push
lret
cmp
jae
or
dec
iret
adc
fisttpl
xchg
sub
jecxz
mov
cltd
inc
lahf
xchg
push
outsl
xor
aam
push
sub
push
out
inc
movb
jne
pop
pop
stc
stc
push
pop
cmc
pop
add
add
rol
ds
sbb
lret
arpl
ljmp
dec
js
lods
mov
addr16
sti
cmp
inc
insb
pop
xchg
push
xchg
or
scas
cmpsl
sub
cmpb
jae
fmul
lods
out
lods
mov
mov
xor
mov
mov
cli
daa
jl
ss
loop
sub
andb
pop
dec
je
xor
xchg
sub
sub
inc
outsl
mov
xor
loope
dec
pop
mov
fistps
push
mov
lds
aad
ror
xor
adc
mov
mov
sbb
mov
push
ss
mov
hlt
int
fstpl
sbb
pop
cmp
into
out
add
inc
in
mov
cmpsb
icebp
ficoms
push
cmp
cmc
adc
lods
xchg
or
pushf
xlat
loop
jno
shll
push
dec
jmp
es
mov
lcall
mov
cmp
insb
subb
rdtsc
push
fxam
xchg
icebp
push
shr
pusha
out
push
adc
add
aaa
popf
jmp
cmp
mov
hlt
mov
mov
push
fcompl
dec
jl
xor
sub
xor
stos
loopne
cmpsl
repz
adc
xchg
xchg
sbb
inc
adc
jmp
sahf
jbe
pop
cmp
or
mov
cmpsl
imul
out
shlb
mov
mov
pop
xlat
movsl
int
sub
inc
push
mov
pop
js
cltd
cmp
cwtl
popa
adc
or
lods
or
mov
sar
mov
or
movsl
pop
sub
mov
jne
fisubl
jg
setp
adc
mov
je
mov
and
xchg
mov
dec
loopne
rcrl
sub
cli
inc
fmull
dec
das
clc
addr16
jb
outsb
jp
mov
add
gs
arpl
ficompl
xchg
je
push
lea
sbbb
ret
mov
dec
mov
and
sbb
or
jp
or
mov
pop
jle
in
sub
js
jge
xor
push
mov
shrl
sub
dec
push
lds
pop
mov
dec
or
hlt
add
repz
inc
jb
fcmove
in
push
ret
add
out
adcb
inc
lods
fstpl
fcompl
dec
ljmp
out
mov
push
pusha
je
push
mov
dec
inc
dec
in
lods
sarl
imull
imul
mov
aad
mov
dec
dec
scas
pop
cmp
cmp
jo
jne
and
aam
pop
mov
mov
mov
adc
jecxz
xchg
in
mov
push
ds
lcall
ja
scas
cmpsl
jg
pusha
loopne
loopne
fs
leave
cli
mov
inc
xchg
test
int3
and
js
test
es
repz
lods
xchg
cmp
into
icebp
lea
sahf
pop
cmpsb
loope
fsubrs
cli
fnstsw
ljmp
xchg
inc
jl
dec
fmull
std
cmp
sbb
mov
popa
inc
mov
cmp
xchg
and
clc
mov
pop
jmp
cmp
jp
int3
cli
shrb
pushf
sub
les
fadd
hlt
bound
negl
pop
sbb
dec
or
mov
push
xor
leave
push
pop
adc
sub
stos
jecxz
adc
xor
mov
inc
inc
jne
enter
dec
in
xchg
add
insl
sti
fildl
push
mov
lret
push
into
jbe
insb
sbb
insb
dec
int
inc
inc
dec
test
repnz
hlt
das
jecxz
arpl
testb
sub
sar
imul
clc
call
sbb
xor
push
jle
repnz
jl
lret
daa
daa
cmp
xchg
int3
push
stc
adc
cmc
xchg
popf
mov
push
xor
sbb
iret
int
push
jo
mov
nop
test
mov
clc
cwtl
inc
out
je
pop
mov
sbb
pop
mulb
ret
push
lcall
inc
adcb
popa
push
mov
loope
and
mov
xor
cmp
mov
push
test
pop
repz
out
into
int3
push
daa
sbb
imul
and
lahf
dec
dec
pop
loop
mov
mov
mov
mov
stos
lret
inc
jge
add
xlat
sbb
jge
daa
push
dec
aad
xor
enter
dec
inc
cwtl
out
jp
lods
repnz
and
ds
add
xchg
cmp
pop
and
ret
roll
jbe
nop
fistpl
mov
push
add
in
daa
xchg
stos
inc
inc
lret
rclb
in
scas
scas
ficomps
ja
pop
inc
daa
dec
jae
orl
push
add
push
popf
movsb
sub
or
inc
cltd
mov
pop
jle
jbe
and
in
jge
out
in
mov
icebp
sahf
insl
adc
mov
jg
addr16
cmp
and
push
sub
movsl
adc
scas
js
pusha
insb
das
cmpsb
xor
jle
adc
cs
fcoms
adc
iret
cmpsb
mov
iret
test
jno
addr16
mov
push
movsl
ss
jnp
jecxz
add
lds
mov
int3
int
ret
pushf
lea
sub
aad
cltd
inc
in
jno
jbe
mov
dec
sub
jmp
or
or
xor
sbb
adc
js
jmp
lcall
cltd
sbb
pop
mov
aaa
or
mov
testb
aaa
push
gs
sub
stos
mov
dec
mov
ret
lods
adc
adc
mov
in
xor
jle
loope
mov
mov
dec
repnz
dec
movsl
jno
cmpsb
mov
push
pop
push
mov
test
inc
xchg
aas
and
jno
in
sub
mov
jns
jb
dec
insb
add
sub
cmp
and
mov
out
xchg
leave
jl
fdivl
mov
repnz
movsl
popa
mov
xchg
pop
pusha
mov
int3
adcl
jge
imul
sbb
pop
pop
add
sbb
notb
inc
sbb
xchg
pop
loopne
aad
jbe
xchg
push
push
inc
in
xchg
jp
sbbb
xor
push
aas
scas
cltd
hlt
xchg
leave
sub
shrl
push
sub
rclb
cmp
mov
decb
jae
dec
xlat
scas
rcrl
cwtl
insl
ret
jmp
pop
adc
or
repz
test
fs
nop
cli
add
das
cmp
xchg
pop
push
push
pop
jle
add
fdivl
xor
outsb
and
mov
mov
pop
in
mov
out
cmc
call
dec
gs
call
int3
mov
out
dec
cmp
in
sub
mov
and
rcrl
add
rclb
pop
pushf
jbe
inc
sti
inc
gs
jp
jecxz
jp
mov
mov
js
test
ds
out
add
repnz
rclb
or
pop
nop
ja
ds
jb
cmpl
pushf
ret
add
adc
sub
add
mov
pushf
or
add
xor
stos
xchg
iret
mov
cmpsb
es
notl
fcomip
into
add
fidivrl
or
push
push
loope
aaa
and
insl
andl
ret
mov
pop
das
push
pop
xchg
ja
mov
leave
std
out
pop
hlt
lret
ret
or
cltd
jne
push
mov
test
mov
add
jb
pop
addr16
mov
sub
and
daa
lahf
addb
adc
std
and
sbb
and
not
shl
ret
mov
jns
push
mov
imul
mov
dec
add
adc
imul
fldcw
pop
push
xchg
lahf
or
sbbl
jno
lods
iret
bound
lds
sbb
test
test
mov
nop
imul
outsb
nop
add
ret
jno
popf
and
jbe
sbb
cmp
cmpsl
clc
sub
lfs
test
or
fisttpll
leave
out
insl
scas
jnp
inc
mov
jl
pushf
adc
jle
mov
ljmp
mov
pop
and
loope
rcll
sti
into
aam
jle
inc
mov
push
inc
mov
fcomps
roll
fisubrl
dec
adc
or
inc
scas
iretw
and
or
mov
cmc
fisubs
sbbl
imul
push
movsl
adc
arpl
lcall
mov
cmpsb
mov
mov
aad
adc
out
sub
cs
or
and
rolb
int3
mov
test
cwtl
test
pop
repz
int
outsb
add
add
mov
fcomp
jg
mov
repnz
cmp
rolb
inc
jns
dec
xor
in
jge
outsb
data16
jae
pop
cmp
xor
ja
push
or
not
mov
das
in
insb
add
dec
dec
or
popa
fiadds
push
pop
dec
xchg
incl
jno
imul
ss
leave
mov
lret
mov
cmp
das
inc
jno
sub
cli
das
cmp
std
mov
adc
inc
pop
dec
or
nop
mov
test
sarl
int
int3
ds
xor
jb
jmp
pop
roll
push
test
stc
stos
popf
hlt
lea
fstl
sub
insl
push
ret
in
dec
cmc
cmpsb
push
insb
orb
dec
imulb
bnd
jg
jns
lret
movsb
push
les
xchg
adc
jns
jo
xor
xchg
mov
imul
pop
stos
repnz
imul
nop
mov
push
cltd
mov
adc
rcrl
push
dec
mov
xchg
stos
rclb
nop
inc
lock
jle
outsl
lcall
aad
fmull
add
mov
dec
rcll
adc
les
add
enter
and
sbb
call
mov
fists
int3
and
cmp
adc
bound
mov
icebp
mov
mov
xchg
ret
lock
idivb
push
jecxz
or
loop
ret
or
lock
xchg
pop
pop
or
outsl
movsb
push
push
push
mov
push
cmpsb
cltd
jne
pop
addr16
pop
pop
xchg
bound
xchg
adc
push
adc
cmp
lcall
adc
xor
andb
bound
xchg
and
xor
xchg
inc
mov
jb
mov
mov
pop
shlb
lods
mov
xlat
xchg
cs
out
or
addl
and
daa
jmp
xchg
jns
fistpl
push
and
fs
or
in
and
adc
mov
aam
pop
data16
pop
mov
mov
stos
shll
pop
imulb
adc
fsubp
es
jp
test
outsb
clc
push
jnp
clc
adc
mov
rcl
push
mov
inc
int
add
decl
push
sub
gs
xchg
stos
popa
fmull
mov
xlat
cmp
cmpb
lds
js
pushf
pop
dec
sub
xchg
push
dec
push
pop
and
loop
adc
pop
mov
out
mov
sub
roll
fstps
jns
std
enter
lods
data16
inc
jnp
xor
jmp
and
jl
fsub
pop
pop
imul
sbb
jp
pop
pop
sahf
inc
inc
add
sub
adc
adc
in
in
dec
ret
int
and
xchg
sbb
test
pop
popl
cmp
adc
shll
dec
add
testb
adc
dec
sbb
push
iret
sub
mov
cmp
xchg
mov
pop
mov
inc
cmc
sarl
mov
testl
mov
sti
jmp
rolb
inc
push
cmpl
test
imul
jmp
jle
inc
or
mov
bound
mov
loope
aad
movsl
rcrb
mov
jo
test
decb
ret
mov
adc
inc
dec
add
test
jl
push
or
jnp
adc
iret
lret
pop
out
loop
gs
inc
xchg
mov
mov
fwait
dec
inc
push
stos
pop
into
jmp
inc
lods
sbb
jge
mov
pop
or
mov
sub
loope
xor
mov
lds
lret
pop
push
add
es
cmp
addr16
dec
stos
push
and
aad
lods
sahf
fidivrl
imul
sub
xchg
pop
add
xor
add
ljmp
dec
sahf
loopne
dec
sbb
cwtl
add
pop
jecxz
push
cmp
push
mov
data16
popa
lock
and
jg
xchg
icebp
andl
or
sbb
xchg
lods
add
pusha
dec
or
nop
testb
pop
xchg
push
out
jbe
push
pushf
pop
rorl
int3
push
dec
or
xor
jae
sarb
xor
pop
mov
or
cmpsb
lds
ss
xor
stos
imul
imul
sbb
xor
xchg
pop
in
inc
not
dec
es
divb
adc
hlt
cwtl
mov
push
and
lret
jl
adc
xor
mov
adc
test
push
jo
push
dec
sar
imul
mov
cmpl
mov
mov
insb
inc
cmpsb
add
xchg
or
inc
jne
mov
inc
pop
inc
or
jmp
xchg
ficoml
and
jnp
iret
inc
sbb
xchg
jb
or
xor
or
inc
push
mov
mov
punpcklbw
cld
decl
or
cmp
jns
dec
adc
xchg
fwait
enter
cmp
hlt
adc
mov
sub
mov
imul
push
sahf
mov
jbe
cmpsb
in
jp
push
mov
xchg
leave
inc
mov
or
push
imul
dec
jne
dec
stos
or
enter
jnp
pop
out
jmp
repz
mov
mov
jp
hlt
mov
sbb
pop
daa
jp
jle
les
add
jb
fwait
or
jae
jnp
fdivs
pop
out
lods
adc
movl
xor
cmpb
cmp
popf
add
jecxz
xchg
aaa
xchg
adc
rolb
pushf
jecxz
vmovaps
movsl
lret
and
and
pop
xor
cmp
outsb
mov
test
sbb
cmpb
add
mov
jne
stos
jns
aas
pop
mov
lret
inc
jnp
test
hlt
std
ds
popf
andl
daa
inc
push
xchg
xor
fildll
in
out
adc
cmc
inc
test
scas
in
xor
ja
jb
pop
or
jp
jns
mov
mov
mull
inc
and
inc
das
repnz
rorl
sti
rorl
push
jb
sbb
ja
lods
fistps
add
scas
out
push
mov
ljmp
loope
mov
pop
cwtl
jnp
imul
enter
cmc
bsr
ja
dec
pop
jae
clc
les
fiadds
xor
jb
jo
insb
and
xchg
rcrl
stos
push
inc
cmp
mov
mov
ret
in
add
and
ds
gs
cltd
jl
xor
jns
addb
movsb
mov
nop
in
ds
data16
adc
pop
jno
hlt
shrb
fisttpll
adc
push
mov
and
cmpsb
dec
popf
out
jp
cmp
cmp
test
pop
popa
jb
test
xchg
mov
std
nop
loopne
aam
or
jge
mov
xor
rcr
adc
dec
test
pushf
movsl
push
hlt
fidivl
sti
jmp
cmp
pop
and
fbstp
adc
lret
incl
push
jns
pop
mov
aas
pushf
test
inc
hlt
scas
push
inc
pop
ret
jns
sub
mov
mov
mov
ds
shlb
cmp
cmp
in
lcall
inc
inc
je
cmpsb
mov
cmpsl
mov
push
je
mov
loopne
cmpsb
sbb
cld
push
sbb
xchg
pushf
jmp
out
sahf
cltd
cmp
imul
nop
rclb
imul
jp
xchg
or
mov
jo
loopne
neg
pop
out
ror
fwait
mov
dec
inc
cmc
imul
test
popf
sarl
frstor
xchg
ds
jmp
and
mov
xchg
loopne
mov
push
int
fprem
xor
into
sub
test
in
iret
test
cmp
inc
aaa
cmp
sub
mov
push
cmc
push
iret
mov
mov
or
arpl
enter
cmp
dec
mov
aad
ljmp
scas
dec
or
jae
jp
movsl
pop
jl
mov
fcmove
dec
sar
adc
cmp
cmp
insl
mov
dec
lahf
sti
gs
repnz
ss
adc
mov
cmpsb
cwtl
xor
addb
cld
lea
mov
scas
add
rcl
cmc
or
or
popa
iret
movsb
add
testb
adc
out
fsubrs
lds
movsb
in
mov
xor
fs
jg
stos
and
xchg
mov
imul
jno
xor
ret
mov
fs
sub
pop
pop
arpl
mov
fs
mov
mov
sbb
addr16
pop
cmp
scas
add
aaa
aaa
shll
cld
cmp
lock
std
aam
ds
xchg
stos
stc
and
sub
push
sub
mov
sahf
out
loope
xorl
pop
les
aaa
lds
enter
cli
cmp
adc
cmp
lds
adc
ds
shlb
xchg
push
pop
scas
dec
mov
in
xlat
push
inc
add
pushf
cmp
mov
sub
pop
ret
negl
and
mov
aaa
xchg
fsubs
mov
adc
push
add
outsl
fwait
jl
xor
dec
lods
or
dec
js
fstpl
push
out
aas
out
adc
inc
dec
push
xor
imul
lret
add
xchg
lds
cltd
subb
inc
and
sub
jl
stos
pop
cs
fcomi
je
inc
mov
mov
add
in
loop
jecxz
xchg
lds
call
repz
xchg
jmp
fistl
sbbb
pop
dec
sbb
clc
jae
repnz
mov
call
jg
out
dec
lods
or
test
fwait
andl
push
mov
int3
jnp
int
loopne
ret
pop
dec
in
stc
pushf
fidivrs
pop
jmp
loopne
ret
push
xor
push
mov
imul
cmpsl
ds
cmpsl
inc
test
in
pop
inc
test
mov
mov
add
push
and
js
push
shl
fmul
pop
sbb
adc
call
xchg
lret
popf
out
add
mov
mov
lock
fisubrl
dec
sti
jae
mov
enter
gs
jne
int3
movsb
jb
std
xor
mov
cwtl
ja
or
outsb
shl
and
nop
out
sub
hlt
mov
outsb
dec
and
cmp
add
stc
movsl
push
in
push
xchg
push
sub
in
test
mov
jecxz
ret
outsb
enter
scas
enter
rorl
shll
jno
movsl
jle
add
sub
test
xchg
mov
jns
lret
sti
cmc
jge
xor
stos
in
insl
mov
mov
sti
fisttps
inc
stos
insb
xchg
call
mov
imul
jle
cmp
jno
lods
int
out
fisubrl
mov
sbb
cmp
push
loopne
sar
or
icebp
mov
cmp
ret
popf
lock
les
ja
add
lret
mov
test
imul
out
pop
mov
mov
std
dec
fimull
jl
adc
popa
cmp
mov
jae
sbb
cmc
mov
xor
pop
mov
sub
sub
mov
arpl
inc
pushf
mov
fdivs
orb
dec
pop
stos
insl
dec
cmp
and
or
in
in
loope
and
fisubrs
sub
idivb
push
loop
mov
jo
addr16
inc
pop
in
xchg
and
mov
mov
ljmp
cwtl
ret
mov
in
lret
adc
sti
cmp
sti
stos
or
push
add
aaa
cld
adc
iret
test
mov
sbb
aam
outsl
fxam
mov
addr16
cmp
and
mov
inc
std
jae
call
jecxz
fbld
mov
adc
xchg
inc
into
inc
das
je
sub
mov
jle
pop
adc
push
push
sahf
test
mov
adc
cli
loop
adc
or
and
repnz
pushf
add
in
mov
jno
lcall
in
pop
daa
cltd
cmp
adc
shl
test
inc
sahf
push
test
out
inc
push
enter
icebp
lret
mov
push
pop
mov
outsb
push
jns
insb
inc
xchg
scas
add
aad
dec
lcall
aam
aas
cmp
jp
inc
aad
jae
in
xchg
fstps
dec
xlat
sar
xchg
mov
mov
push
ljmp
push
aam
fldl
int3
mov
popf
or
daa
dec
dec
fwait
and
or
add
cmp
xchg
stos
loope
testb
inc
flds
fldt
xchg
jp
movl
lcall
sti
stos
push
iret
test
repnz
jns
add
jnp
jno
fdiv
arpl
in
fidivrs
shll
imul
inc
jnp
loope
xlat
jne
push
pop
js
or
sbb
arpl
insl
mov
mov
mov
lahf
int
cmp
dec
rcl
lods
cltd
push
xchg
dec
out
mov
in
mov
xchg
shlb
jnp
or
in
add
jecxz
shrb
scas
lcall
mov
test
pop
and
jge
mov
cltd
cwtl
ds
dec
je
mov
test
bswap
sub
add
mov
cmp
jns
jbe
jo
loope
push
and
ret
pop
clc
or
or
pop
mov
sub
pushf
mov
lock
popa
cmpsl
or
jns
repz
test
inc
out
dec
fwait
jb
inc
arpl
and
imul
pop
pop
xor
or
pop
mov
fcomps
cmpsl
push
outsl
test
lahf
aam
jg
lds
mov
mov
loopne
jp
repz
mov
aas
add
ja
mov
push
je
dec
stc
iret
or
push
hlt
mov
ficomps
push
cld
lds
inc
push
adc
scas
dec
fmulp
test
mov
scas
mov
xchg
push
lea
cmp
mov
mov
stc
jmp
imul
inc
fs
cmp
xor
fnstenv
movsl
insb
push
sub
clc
into
popa
loop
lret
dec
rol
mov
ret
xchg
sti
pop
aam
dec
mov
cli
fisubrl
std
cmp
hlt
mov
fdivp
xchg
movsb
mov
ljmp
mov
sbb
daa
mov
loopne
jnp
fistpll
ds
mov
jecxz
pop
xlat
mov
sub
inc
jns
jo
dec
sub
sbb
push
add
xor
sub
and
xor
mov
mov
jmp
dec
mov
cmpsl
xchg
ret
or
mov
mov
leave
xchg
call
mov
fdivrp
jp
test
arpl
jb
repnz
cmc
push
in
int
leave
cmp
testb
es
out
popa
lret
push
dec
int3
repnz
pop
sub
mov
or
xor
int3
mov
fcom
xor
lods
sar
mov
jno
sbb
or
lahf
cmp
xorl
into
in
xor
out
cmp
pop
cmp
adc
xchg
push
mov
scas
ljmp
add
fildl
lds
lret
testb
shlb
lods
lock
fisubl
gs
add
adc
cmpsb
jge
pop
scas
jo
inc
subl
cmp
pushf
lods
adc
in
cmc
adc
cmpsb
xor
imul
and
in
jmp
jl
mov
and
cs
push
pop
cmpsb
fidivs
jbe
or
psraw
cmpsb
or
pop
ljmp
jmp
test
sbb
mov
push
popf
in
out
mov
xor
icebp
inc
gs
adc
xchg
ss
jne
mov
xor
cmp
push
xor
mov
sahf
iret
adc
decl
fnstenv
sub
aaa
aas
push
stos
push
rclb
mov
mov
jnp
ds
int3
scas
out
pop
lret
insl
int3
jmp
mov
es
movsl
sbb
jg
xchg
jb
sub
mov
loope
fwait
sub
mov
or
push
aas
call
in
std
sti
push
fdivs
mov
notl
imul
mov
dec
inc
in
in
pop
cli
je
and
addb
mov
cmp
lods
xor
push
add
sub
js
movsb
addr16
cld
mov
movsb
add
adc
sbb
mov
or
cli
lods
into
cli
movsb
mov
mov
sbb
inc
sub
dec
or
rorb
pop
xchg
push
sub
test
and
andl
and
lcall
mov
adc
mov
push
test
je
leave
cmp
mov
fwait
sub
in
mov
in
ret
popf
mov
cmp
add
int3
sbb
ret
add
add
mov
stos
mov
jno
insl
rorl
xchg
rorl
jg
pop
outsb
bound
jo
mov
test
mov
adc
rorl
fld
adc
xor
add
icebp
jp
or
imul
pop
and
add
jns
add
out
imul
mov
pushf
movsl
cmc
daa
outsl
jp
cmp
push
dec
popf
cltd
loopne
jbe
fisubrl
shr
xor
dec
ret
and
mov
push
jp
repz
int
xchg
mov
push
fsubrl
mov
pushf
addr16
push
mov
movsb
jae
and
nop
cmp
xchg
mov
add
in
test
jae
icebp
and
mov
jge
divl
add
or
arpl
lahf
push
mov
stos
or
fmul
sbb
pop
mov
aam
js
ja
pop
dec
xchg
daa
cmp
loop
push
push
or
movsb
in
pop
cmp
xchg
nop
js
pop
arpl
sarl
xlat
mov
or
fiaddl
fadds
int
mov
jle
shl
std
cmp
outsb
repz
jbe
adc
fstp
test
push
mov
mov
call
dec
rcr
pop
orb
sub
sbb
insl
std
js
out
sbb
sbb
push
dec
dec
fisttpl
sti
sbb
mov
pop
cmp
adc
cmpsl
leave
dec
lcall
pop
mov
addr16
sub
adc
sbb
or
cld
xor
nop
call
add
push
fiadds
sahf
fsub
inc
xor
rolb
cmp
push
scas
scas
mov
incl
pop
scas
mov
mov
repnz
outsl
inc
pop
and
push
addr16
lcall
cmpsb
lret
divb
imul
jge
insb
popa
lock
inc
lods
rolb
jb
test
push
sti
xor
fdivl
add
sub
cmpsb
xchg
dec
jno
push
lods
dec
jae
out
jno
xor
mov
into
fcomps
stc
js
inc
ja
pop
push
out
pop
sub
and
add
adc
aam
or
jmp
outsl
movsb
sub
dec
rcr
ds
rcll
jl
cwtl
sub
pop
add
or
xchg
mov
outsb
cmp
loopne
lcall
and
inc
push
gs
push
push
cmp
jo
adcb
xchg
mov
dec
lock
jo
sbb
lods
add
add
dec
out
loop
in
and
sti
popa
xchg
jmp
insb
daa
sbb
lods
lcall
cmpsb
adc
inc
into
jl
pop
add
lods
adc
sbb
sub
dec
leave
xlat
or
mov
lret
scas
je
fsubl
test
sub
mov
xchg
mov
bound
mov
cmpsb
inc
jg
mov
mov
cmp
jl
out
ficompl
xchg
xchg
icebp
call
or
jecxz
enter
pusha
cs
push
xlat
and
test
je
insb
push
lds
xchg
outsl
popf
ljmp
mov
xchg
or
andl
icebp
sub
and
and
cmc
push
sarl
je
sbbl
pop
je
inc
cmc
and
cmp
mov
add
sub
mov
sbb
outsb
pop
mov
sbb
imull
dec
ds
aad
dec
std
mov
inc
mov
jae
ror
xor
xor
fildl
in
mov
loope
addb
icebp
dec
sub
xlat
insb
sbb
iret
bound
pop
xchg
push
pusha
fadd
test
xor
push
xor
test
rcrl
pop
inc
aad
sahf
mov
push
pop
dec
fnsave
mov
loop
mov
sti
sbb
cmp
mov
test
pop
ljmp
rorl
jo
mov
adc
xor
push
or
adc
adc
mov
out
out
inc
lret
scas
mov
adc
xlat
jecxz
add
cwtl
ds
jno
sub
int
inc
and
or
jl
pop
jl
shr
mov
pop
mov
in
ret
mov
mov
jae
flds
test
inc
pop
or
inc
inc
inc
dec
jmp
mov
mov
ds
xor
mov
mov
fidivs
push
mov
mov
cmp
mov
outsb
xchg
jno
popa
dec
insl
jb
pop
or
jecxz
sub
orb
mov
adc
xchg
orb
adc
adc
out
leave
daa
out
and
bound
push
and
sub
int3
push
test
jbe
or
lahf
mov
and
sahf
inc
fsubrs
mov
cmp
inc
jo
lret
or
pop
push
in
jne
adcb
fistpll
mov
add
enter
jle
aam
push
xchg
mov
mov
aam
rolb
aaa
dec
xor
shrb
andl
cmp
jo
out
cmpl
cmp
pop
pop
ds
jnp
in
jbe
ficomps
xchg
push
ljmp
divb
and
pusha
popa
xor
mov
xchg
in
xchg
jp
in
arpl
cmp
fistl
loope
std
add
or
xchg
sbb
pop
pop
xchg
rorb
pop
xchg
xor
rorl
pop
je
sbbb
inc
or
push
and
cmp
ficomps
idivl
or
xchg
mov
xor
jne
push
sub
fdivr
scas
jg
jl
xor
push
inc
js
popa
fs
mov
aam
fcoml
pop
lds
mov
xchg
mov
and
jecxz
pop
aad
out
push
fidivrs
rorb
sbb
jns
add
data16
stos
lret
inc
loopne
push
imul
testb
aas
movsb
lods
filds
int3
icebp
movl
mov
sbb
dec
in
mov
mov
clc
clc
add
or
push
jbe
jg
js
outsb
push
push
inc
popa
inc
push
fisttpll
clc
mov
pusha
mov
pusha
addr16
push
mov
push
das
xchg
dec
lds
xlat
sub
movsl
cli
mov
cmp
add
add
loope
mov
mov
push
imull
mov
sub
flds
and
cli
subb
push
add
cmp
orl
xchg
dec
add
dec
in
cmp
sbb
jle
sbbl
outsl
movsl
pop
dec
pushf
in
push
mov
or
jnp
es
push
rcll
sbb
fcomip
jno
les
loopne
setl
jl
push
and
loope
jmp
daa
scas
bound
test
orl
int3
and
pop
sub
pop
mov
es
in
jle
sbb
pop
mov
mov
pop
imul
xchg
xchg
out
mov
add
xchg
push
incl
mov
push
imul
cmpsb
dec
cmp
inc
rol
jecxz
push
jo
pop
cmp
loop
jne
in
ret
aas
mov
fs
movsb
and
sub
arpl
mov
int3
mov
loop
insb
mov
xchg
and
gs
cmp
mov
mov
push
add
ljmp
push
scas
ds
lock
lret
cltd
cld
or
cltd
movb
mov
mov
mov
jno
push
adc
stos
test
cmpsl
bnd
out
inc
push
in
xchg
and
test
dec
aad
sub
adc
pop
sbb
jno
fdivrp
jno
mov
push
add
cwtl
movsl
xchg
testl
sbbl
and
es
aam
inc
test
rorl
push
push
inc
jae
push
test
pop
push
test
bnd
cmp
add
jg
adc
cmp
pmaxub
cmp
lea
jnp
lret
cwtl
sub
addr16
push
fiadds
out
inc
rcr
inc
lss
xchg
ja
push
mov
lret
dec
adc
mov
cmp
ret
mov
adc
add
inc
clc
push
xchg
mov
dec
xchg
mov
push
mov
fcoms
mov
gs
gs
pop
cmpsl
adc
dec
push
in
inc
and
addr16
scas
cwtl
loope
xor
aas
repnz
sbb
push
add
or
sbb
lods
lods
pop
dec
test
and
mulb
jecxz
fistps
sbb
test
cwtl
xor
in
movsl
sub
adc
xchg
adc
inc
sbb
int3
insb
rcr
lea
mov
cmc
cltd
or
cmp
ss
mov
rclb
loop
fnstcw
or
lods
or
dec
cmp
jnp
dec
adc
jecxz
xlat
push
push
test
xchg
sahf
or
xor
sub
sub
sti
dec
cmc
jo
jbe
enter
adc
mov
xchg
outsb
sbb
arpl
push
cli
add
sub
pop
push
in
mov
xchg
das
and
aam
mov
daa
mov
push
lods
icebp
mov
fmull
jbe
and
jge
cltd
aaa
xchg
mov
ja
xor
dec
movsb
outsb
add
fildll
xlat
scas
jmp
and
jecxz
mov
pop
icebp
push
ja
sbb
ja
cmpsb
xchg
fwait
sbb
pop
lds
sbb
adc
out
dec
cmpsl
dec
push
adc
sub
sub
add
push
cmp
cld
into
loope
sub
mov
imul
inc
popf
sahf
sbb
testb
mov
ficomps
jge
outsb
mov
jbe
dec
mov
cmpb
nop
lret
adc
or
mov
inc
push
cmp
xor
mov
sbb
pop
mov
adc
dec
into
test
push
and
mov
push
add
mov
repnz
addr16
mov
js
cmp
push
xchg
sub
push
jp
inc
jge
mov
cmc
stc
mov
movsb
or
pop
scas
sbb
fcmove
iret
sub
pop
fcompl
pop
call
mov
pop
outsl
cmp
push
mov
in
jae
and
aas
add
and
test
jge
popa
nop
cmpsl
jb
dec
sbb
or
hlt
push
scas
subb
mov
inc
loop
cmpsl
push
sbb
pop
popa
pop
js
lret
into
sahf
test
addl
adc
insl
enter
mov
jne
inc
and
add
inc
movsb
mov
in
pop
or
mov
push
mov
popf
or
test
push
cmp
dec
jecxz
mov
scas
ss
add
xchg
lock
xchg
out
out
sub
outsl
cwtl
clc
icebp
xchg
mov
add
int3
sub
clc
jp
cli
das
rcrb
stc
into
rcrl
and
sarb
icebp
push
push
aaa
sbb
mov
lret
or
xchg
mov
and
pop
scas
inc
dec
inc
xchg
and
sahf
sub
in
ret
push
js
pop
jne
mov
or
adc
cmp
pop
sub
inc
jge
aad
bound
mov
or
xorb
lret
dec
xchg
ret
inc
inc
adc
int3
ret
sbb
int
dec
in
push
addb
xchg
scas
stos
push
divb
jnp
xor
jmp
sub
call
push
cmp
sub
mov
mov
outsl
fisubs
repz
repnz
xchg
dec
pop
inc
mov
test
adc
jl
or
ret
sbb
cmpsl
inc
insb
push
into
xchg
clc
pop
and
jmp
es
fsts
call
cmp
cmp
adc
lcall
bound
dec
and
or
mov
std
cltd
out
jl
popa
inc
js
adc
nop
adc
into
adc
enter
cmpsl
pop
mov
les
sub
push
cs
or
in
adc
mov
inc
adc
adc
sub
neg
xor
inc
roll
imul
mov
xchg
xchg
add
test
mov
xor
inc
stos
xchg
cmp
and
cmc
gs
imul
lods
cmp
int3
cmp
stos
jmp
lcall
xor
and
loop
pusha
movsl
aaa
inc
dec
or
cmp
out
push
mov
int
ja
and
ds
shl
cmp
dec
dec
mov
pop
inc
mov
paddusb
dec
jp
stc
jae
jno
out
test
pop
mov
cmp
cwtl
jbe
sti
popa
mov
out
pop
shl
and
fmull
movsl
iret
aam
icebp
add
addr16
test
jbe
sub
dec
or
cmp
cltd
repz
lret
adc
das
pshufw
arpl
pushf
jns
push
das
fidivrs
jmp
adc
and
out
push
mov
stc
jb
pusha
subl
mov
movsb
mov
mov
js
frstor
shlb
adc
mov
push
or
shl
fwait
pushl
inc
jecxz
xchg
data16
push
jecxz
leave
stos
cli
and
mov
jge
inc
pop
cmp
ror
push
dec
nop
sbb
fcompl
fildl
dec
mov
sarb
inc
add
jb
lea
shl
mov
xchg
test
adc
test
cmp
lock
movsb
mov
add
shl
push
mov
test
mov
xor
inc
in
ss
hlt
push
adc
inc
popf
mov
imul
fildl
sub
fisttps
stc
fsubs
pop
mov
int
enter
sbb
mov
cli
sub
push
mov
movsl
adc
and
div
jmp
jp
pop
sbb
cwtl
jns
sbb
sub
cmp
sbb
xlat
nop
cmc
mov
cmove
fisubrs
inc
cltd
mov
dec
loopne
scas
daa
xchg
push
mov
inc
mov
jbe
mov
mov
sbbb
push
fldcw
enter
std
sbb
in
pop
outsb
popf
xchg
mov
cmpsb
mov
mov
adc
pop
imull
std
mov
out
jle
or
jno
xchg
push
xor
push
test
daa
mov
xorl
mov
add
lock
and
rorl
or
icebp
fwait
xchg
enter
jbe
xchg
outsb
sbb
and
jne
jb
xchg
mov
xlat
add
sub
fiadds
pop
in
sub
mov
scas
or
fistpl
xchg
sarb
test
fisubs
or
inc
jb
loope
sub
bnd
mov
adc
mov
imul
mov
js
jle
mov
fmuls
inc
cmpb
cmpsb
jno
aad
out
push
popa
into
add
inc
mov
out
mov
xor
mov
inc
mov
clc
or
cmc
mov
pop
sub
enter
mov
xchg
inc
enter
subl
in
fbld
sarb
sub
mov
xor
inc
fnstsw
roll
and
inc
bound
xorl
push
sbb
jge
mov
push
cmpsl
ljmp
ja
mov
push
mov
cmc
loopne
sarl
pusha
imul
mov
mov
enter
adc
movsl
adc
mov
std
sbb
imul
nop
mov
mov
pop
add
fdivrs
mov
das
sub
push
stos
das
dec
add
sbb
rcll
and
insb
and
stc
mov
ja
adc
jno
and
mov
cmp
pusha
shll
pop
lock
idivl
fcomip
pop
jnp
cmp
mov
iret
rcll
xchg
shr
jge
decb
loop
adc
ja
aad
repz
adcb
xor
outsl
jp
int3
mov
mov
jge
pop
dec
out
call
test
push
mov
stc
push
fdivl
or
lds
push
pop
loope
push
xchg
fistpll
push
and
insb
and
lret
cld
sub
mov
mov
das
xchg
outsb
adc
and
mov
lea
and
cmc
pop
and
adc
shlb
dec
fwait
dec
cmpsl
jbe
add
add
jnp
hlt
addr16
repz
fnstenv
lcall
test
lock
inc
mov
pushf
stos
xor
adc
sbb
or
pop
mov
aad
add
push
mov
xor
scas
cli
cwtl
cmp
imul
sbb
mov
outsb
mov
subb
mov
push
cltd
int
xlat
les
mov
add
pop
lret
into
push
mov
jle
mov
cmpsb
dec
call
or
inc
out
jo
daa
lcall
mov
cmp
ds
push
pop
aaa
adc
insl
test
in
push
loop
jne
jbe
xor
lret
cmp
lcall
push
shl
add
xor
sub
adc
add
psubsb
sti
dec
f2xm1
subl
daa
lret
mov
fwait
pop
or
push
sbb
call
xor
shlb
inc
mov
pop
testl
sarb
negl
mov
shlb
mov
in
sub
xchg
test
xchg
xchg
jle
call
push
aaa
push
add
or
insb
test
adc
push
mov
or
test
idiv
mov
fcmovbe
mov
sub
add
int3
xor
cmp
movsb
dec
cmp
lcall
pop
leave
gs
aaa
fs
into
repnz
push
mov
stc
in
addr16
pop
inc
xchg
pop
cmp
fs
sahf
stos
inc
adc
sub
dec
cli
or
call
xchg
lods
xchg
lock
daa
pusha
or
rolb
sbb
popf
aaa
aas
rcl
jg
js
add
test
imull
repz
jmp
loopne
fs
aas
cli
cmc
out
loop
mov
xor
cmpsl
jg
mov
push
or
inc
in
or
add
push
pop
data16
outsl
add
mov
sbb
and
fwait
lret
push
rclb
sub
sbb
mov
cmp
cli
mov
cmpsl
push
jbe
imul
xchg
nop
in
xchg
loope
adc
push
xor
jbe
inc
mov
jecxz
pop
add
inc
mov
sbb
mov
mov
xchg
mov
stc
xor
jne
lret
adc
repz
add
stc
sbb
out
push
push
sbb
mov
adc
int
imul
xchg
xorb
sbbb
ret
xchg
lock
pop
or
jbe
into
testb
aas
sbb
cltd
mov
pop
pop
in
dec
in
je
inc
pop
xlat
or
sbb
cmp
test
or
int
scas
adc
test
push
jns
insl
out
and
dec
addb
aam
adc
jl
popf
das
xor
addr16
fwait
insl
stc
inc
lret
je
xor
adc
sbbb
cld
add
adc
roll
fcoms
lcall
call
mov
mov
in
mov
rorb
add
int
or
lods
insb
imul
movsb
out
jge
scas
add
fwait
jb
jg
xor
ds
bt
fistl
xchg
js
loopne
mov
nop
inc
jg
in
ret
test
imul
sub
xchg
push
adc
dec
push
inc
cmp
xor
dec
and
std
insl
dec
push
stos
xor
lds
pusha
in
lods
jbe
repz
mov
rcll
cmp
push
mov
cmp
dec
mov
lods
pop
mov
push
xor
lods
pop
in
add
push
fwait
mov
mov
cmp
orl
lret
mov
addr16
rorb
push
mov
jl
cmc
sub
rcrl
mov
pushf
sti
jl
gs
std
lock
lret
pop
out
fldl
dec
cltd
dec
shlb
mov
inc
jl
ja
inc
sbb
ret
imul
pop
mov
xlat
sub
mov
mov
cmp
flds
and
xchg
fsubrl
mov
mov
dec
dec
rclb
orl
fsubrs
xor
mov
leave
movsb
and
sub
sbb
add
jmp
pop
in
xor
inc
adc
je
rorb
and
pop
xor
aam
sub
adc
cli
fwait
sub
stos
mov
add
mov
inc
cmpsl
outsb
jbe
inc
xchg
outsb
cmc
xchg
rclb
pop
xor
jno
test
popf
repnz
cmp
jmp
bound
das
mov
xchg
ss
movsl
sbb
mov
fldcw
incb
cmp
xor
rcl
add
lahf
xchg
test
sub
movl
lret
out
pop
sbb
and
in
mov
push
inc
rorb
into
lods
cmp
lret
or
push
mov
mov
or
jmp
loopne
cld
jp
pop
jbe
mov
mov
fcompl
stos
sarl
push
jo
out
sub
sub
or
aaa
pop
in
mov
add
stos
fisubrl
jp
cmpsb
lahf
mov
or
or
mov
pop
fstpl
sarl
xor
loopne
sahf
push
xchg
lahf
sub
pop
leave
xchg
mov
mov
int3
ja
repnz
iret
add
or
ja
push
arpl
or
call
dec
push
movsb
popf
mov
movsb
enter
mov
aas
pusha
test
ljmp
xor
test
shll
flds
movlps
sti
jl
call
pop
movsl
jl
jp
sub
or
scas
xor
mov
xchg
mull
inc
aaa
xchg
adc
and
fadds
ret
mov
dec
jg
or
jp
insl
jno
call
mov
inc
pop
icebp
mov
mov
adc
addr16
add
fiaddl
aas
mov
in
leave
mov
inc
jl
in
dec
jmp
jnp
lods
inc
lret
aaa
imul
jb
pop
pop
adc
dec
jecxz
fisubl
clc
test
dec
add
inc
cmp
dec
jl
or
jne
lret
add
or
mov
push
push
jb
imul
inc
cmp
dec
das
push
sbb
in
xchg
stos
push
loope
shr
sub
sub
jmp
dec
imul
in
lea
add
jl
stos
add
fnstsw
jmp
cltd
shll
faddl
imul
mov
stc
xlat
in
xchg
xchg
aaa
xchg
jne
pop
out
std
push
xchg
icebp
dec
cli
ss
rcl
inc
or
insl
loop
mov
or
shlb
pop
pop
flds
jge
sbb
test
fdivr
mov
add
mov
pusha
clc
xor
popa
mov
jg
sub
mov
inc
lods
and
adcb
pop
xchg
int3
inc
xchg
and
jno
cmp
and
mov
and
push
adcl
popf
test
test
push
jne
xor
orl
icebp
mov
addr16
xor
sti
add
jns
add
loopne
and
pop
test
jle
sub
add
insl
fcmove
lahf
cli
inc
or
call
aad
push
out
outsl
xor
jae
imul
movsl
roll
cmp
xor
in
test
in
idivl
add
loop
adc
out
mov
dec
lret
or
scas
mov
cli
cli
mov
or
and
sub
push
sarb
lods
cmp
lahf
popa
aam
xor
out
into
jbe
jno
loopne
sbb
xor
mov
mov
pop
sub
clc
fists
vcvtsd2ss
test
jp
pop
out
dec
cmc
sub
fcmovnb
xchg
enter
adc
andl
push
iret
xor
dec
lods
andl
adc
shl
push
push
inc
arpl
mov
push
cltd
test
mov
aad
adc
sbb
dec
adc
add
and
aam
mov
sub
and
jl
adc
out
cld
js
push
or
out
in
lret
xchg
xor
rolb
out
jmp
mov
cmp
icebp
xchg
ljmp
ret
mov
shl
shrl
aas
lock
push
clc
adc
sub
ret
add
inc
inc
bound
add
mov
lret
lret
int
inc
data16
pop
dec
in
or
cmp
daa
les
mov
popa
pop
dec
and
test
jmp
orb
iret
out
xor
mov
jno
into
jo
mov
lds
dec
insb
pop
stos
faddl
sub
adc
xorb
sahf
aad
pop
das
cmpsl
push
xchg
ds
adc
pop
fcmovnu
jnp
ja
enter
js
sub
lret
movsl
in
cmp
outsl
cmp
xor
cmp
sbb
mov
std
test
lea
dec
and
lret
inc
lahf
inc
shl
lods
mov
adc
out
adc
or
sarl
faddl
cs
arpl
adc
sbb
in
stos
xor
loop
pop
jmp
scas
icebp
das
adcb
inc
dec
sbb
dec
cmc
mov
jecxz
data16
xor
xchg
aas
ljmp
iret
pop
mov
scas
std
mov
das
adc
imul
incl
dec
dec
inc
enter
cmpsl
mov
adc
movsb
dec
lods
add
sub
push
jno
movsb
fists
ret
cmp
aas
mov
xchg
lea
xor
and
fldpi
rep
icebp
in
js
sahf
dec
dec
ret
fsubr
test
stc
push
clc
sahf
xchg
in
lahf
mov
mov
mov
cmp
testb
inc
lcall
mov
lods
jae
mov
sub
rcl
sti
xchg
xchg
je
xchg
mov
mov
sbb
stc
and
scas
xor
jne
ret
mov
push
test
lock
insl
inc
xchg
icebp
push
mov
inc
aad
dec
push
sahf
inc
xor
ficoml
xchg
out
mov
and
idivl
cs
mov
loope
aaa
push
pop
sub
repz
push
imul
imulb
mov
push
mov
or
adc
sub
sbb
je
jno
out
movsl
add
jle
cmp
loopne
cmpsb
mov
mov
int3
outsl
mov
ret
sub
xchg
push
mov
or
test
in
adc
sbb
or
adc
mov
sti
mov
lds
xor
into
pop
jle
cld
scas
xchg
fstpl
imul
mov
jg
jecxz
pop
add
loopne
or
aaa
fstpt
imul
dec
icebp
xchg
movsl
pop
jl
jne
fisubrl
push
dec
js
stc
enter
xchg
jbe
adc
push
pop
mov
das
mov
stc
enter
sbbb
lcall
in
and
and
or
test
add
mov
mov
or
out
inc
aas
push
hlt
push
or
out
andb
and
in
xor
out
divb
xor
push
dec
sbb
inc
enter
movb
mov
push
or
sti
xor
in
xchg
dec
in
inc
mov
leave
ret
adcb
ja
xchg
xchg
decb
out
aad
ss
jg
mov
jp
push
mov
popf
add
call
dec
jne
lods
ror
lret
aaa
mov
mov
adc
sub
mov
inc
pop
push
xchg
xor
pop
cltd
ret
fcoml
fstl
in
sub
std
dec
inc
xor
loop
lahf
mov
dec
and
jae
dec
mov
out
lret
sbb
in
jae
push
movsb
add
insb
push
stos
lds
jp
push
push
testl
shlb
stc
and
lock
stc
xor
aas
mov
or
pusha
jmp
jb
adc
mov
gs
push
dec
movl
push
inc
jbe
push
push
push
pop
xchg
pop
sbb
bound
das
cltd
cmp
loop
and
loop
or
push
int3
aad
or
icebp
in
clc
pop
pop
dec
int
cmp
mov
and
inc
cmp
inc
test
inc
push
push
stc
arpl
jo
stos
mov
jmp
ret
xchg
fucomi
adc
push
cwtl
loopne
mov
sbb
fmulp
stos
fs
mov
dec
adc
pop
pop
cwtl
inc
sub
rcl
inc
pusha
aam
daa
cltd
hlt
xchg
inc
mov
test
jbe
or
push
stos
mov
leave
push
sbb
xor
outsl
adc
aam
xchg
dec
mov
ret
lods
sub
aad
mov
outsb
and
out
push
dec
push
xchg
add
repnz
add
mov
cmp
jecxz
stos
xor
jge
pop
lea
icebp
repz
fs
stos
inc
stos
pop
test
or
lea
in
mov
outsb
inc
insl
sbb
dec
fcompl
mov
rorb
sti
fucomi
aad
push
push
mov
and
fs
pop
xor
xchg
xchg
popf
test
adc
aas
cli
xlat
xchg
cld
xlat
cmc
nop
sarl
in
movsb
es
sbb
jle
dec
xchg
jl
movb
xchg
loope
sbb
fnsave
xchg
outsb
pop
mov
data16
enter
or
dec
ja
push
fstl
sub
lea
int
xor
dec
inc
pop
cs
adc
insb
in
jl
negb
sub
out
jno
daa
jno
fistpll
xor
pusha
jo
or
cmpsb
faddl
jge
sub
jae
xchg
add
into
lret
aaa
adc
or
lahf
dec
cs
mov
dec
test
shrb
inc
inc
es
jg
adc
test
iret
adc
mov
loopne
mov
insl
mov
add
mov
sub
mov
adc
lods
aas
lcall
mov
clc
fwait
and
push
insb
insl
adc
pop
arpl
pop
jecxz
or
push
sahf
iret
jecxz
add
push
jbe
fwait
test
outsl
in
dec
push
insl
ljmp
mov
xchg
xchg
cwtl
jne
sahf
sbb
loop
cmpsb
loopne
adc
fdiv
add
jge
pop
push
sbb
push
and
mov
push
push
pop
aaa
mov
xchg
add
adc
mov
mov
dec
xchg
mulb
out
int
mov
popf
push
cli
and
pop
fwait
ja
mov
push
cmp
xchg
sub
sub
jge
andl
test
inc
adc
je
sahf
je
movsl
into
pushf
movsl
out
xor
sub
dec
xchg
pop
in
repz
pop
sbbb
or
and
aas
cs
dec
or
dec
xchg
sbb
jns
out
sub
sub
or
pop
push
cmp
inc
jns
into
test
push
xor
stos
popf
dec
mov
and
jno
jge
jbe
popf
out
imul
pop
and
and
loop
gs
jno
rep
sub
sahf
daa
out
pop
inc
movsl
cmpsl
aad
push
xchg
push
or
stc
jle
jnp
lcall
cmc
cmp
pop
out
movsb
insb
div
arpl
sub
mov
lcall
or
testl
mov
andb
pop
xor
gs
sub
cmc
ljmp
adc
adc
sahf
ret
cmpsb
arpl
insb
pop
out
dec
mov
pop
test
cs
dec
push
inc
int
fsubrs
es
imul
push
mov
repnz
outsb
cmp
pop
dec
int3
xor
and
enter
iret
test
xor
push
psrlw
xor
mov
push
idivb
xchg
mov
daa
rorl
sub
push
fcompl
in
pusha
mov
mov
xchg
dec
sbb
xchg
std
std
cld
popl
add
and
adc
hlt
jb
loope
lods
jge
ja
into
fcmovnu
call
scas
stos
xor
dec
repnz
add
cmp
push
xchg
iret
jb
es
ret
mov
sub
shrl
xlat
mov
mov
add
or
int3
cmp
adc
or
push
add
mov
mov
cmp
bound
push
jae
out
aad
push
cld
cld
dec
test
add
mov
cs
mov
test
dec
test
xchg
stos
pop
shl
fidivrs
enter
and
mov
adc
cmp
fwait
dec
xor
cltd
jb
mov
sub
pop
pop
xchg
movl
sbbb
cmpsl
mov
xor
push
lods
popa
push
cltd
mov
sahf
mov
cli
shll
jle
jo
fs
stos
or
mov
ret
xchg
mov
adc
and
scas
mov
push
mov
adc
xchg
mov
mov
sbb
int
sbb
mov
dec
popf
mov
lret
cmpsb
das
fwait
adc
dec
test
test
sbb
or
inc
sbb
icebp
popa
and
add
inc
cmpsl
mov
mov
xor
or
fiadds
or
clc
fidivrs
rclb
adc
add
cmpsb
out
nop
bound
inc
enter
mov
mov
sbb
mov
and
aam
test
les
cmp
jle
cmp
dec
popa
dec
stos
sti
test
xchg
lahf
adc
insl
mov
lcall
inc
adc
mov
out
mov
pusha
mov
cmp
push
jns
cwtl
jmp
jmp
mov
push
xchg
push
scas
pop
ja
jbe
or
nop
pop
sbb
mov
mov
mov
mov
das
and
push
and
std
orb
nop
leave
cltd
sbb
icebp
out
sub
xor
je
cmp
cs
xchg
lock
dec
jp
rorb
mov
stos
daa
xchg
lods
inc
adc
adc
idivl
ds
xchg
outsl
js
xchg
xchg
add
or
jno
adc
popa
jno
js
gs
mov
mov
dec
inc
mov
xor
js
adc
xlat
jbe
push
aam
sahf
js
add
mov
mov
addr16
je
gs
cwtl
jbe
lcall
adc
mov
or
outsl
cmp
pusha
mov
icebp
sub
jecxz
xchg
lcall
mov
adc
pop
dec
add
aas
adc
mov
cmp
pop
sbb
pop
jle
sub
adc
std
aas
sbb
js
nop
xchg
stos
sub
insb
out
xchg
and
push
mov
sti
inc
icebp
rcr
push
lret
psubd
mov
sarl
ss
loope
mov
out
mov
movsb
stc
gs
sbb
and
cld
mov
stc
pop
cld
es
fildll
ds
push
dec
xchg
clc
mov
mov
or
cmp
mov
jo
imul
mov
pop
shrb
push
std
xchg
pop
inc
adc
jecxz
jecxz
dec
sbb
xor
mov
shll
mov
inc
xchg
imulb
xor
inc
jl
xchg
sbb
or
add
and
sarb
adc
stos
xor
and
push
movsb
in
lret
pop
outsl
mov
es
icebp
inc
sti
in
jg
jp
das
ds
or
or
inc
sarl
pop
jle
xchg
icebp
adc
mov
sub
les
pop
pop
push
ja
fmuls
popa
iret
sub
jbe
in
into
outsb
push
clc
pusha
and
ljmp
icebp
fists
lahf
es
aaa
jo
ret
dec
stc
test
mov
push
out
xor
cwtl
xchg
in
jp
xor
lds
faddp
call
ss
or
pop
aam
out
ret
mov
shll
adc
cmp
xchg
pushf
add
xchg
jae
fidivs
adc
sbb
and
and
adc
shlb
addr16
into
push
sub
adc
add
cli
es
lods
mov
mov
cmpsb
in
xor
or
push
jg
test
dec
jmp
xor
add
jle
pop
into
push
fldenv
pop
pop
and
jbe
sbb
loop
leave
pop
daa
pop
test
adc
lods
inc
rolb
shlb
sbb
add
pop
xchg
iret
push
ss
or
dec
and
lock
and
and
dec
nop
sbb
out
cmp
pop
adc
in
inc
lds
pop
adc
sub
jb
jecxz,pt
dec
pop
mov
xor
stos
scas
shrl
pop
mov
mov
call
loop
jnp
les
mov
jns
fwait
aad
stos
fistl
popa
push
or
or
outsl
cmpsl
inc
scas
imul
jbe
stos
ret
sbb
cmp
cwtl
pop
adc
mov
inc
jg
jecxz
enter
jecxz
mov
popf
pop
mov
out
inc
mov
pop
mov
pop
or
xchg
and
sti
sbb
mov
das
adc
insb
fcomps
xchg
xor
pop
jae
mov
ret
aad
mov
xchg
xorb
arpl
arpl
cltd
lahf
addl
cmp
pusha
cltd
add
mov
lea
pmullw
outsb
dec
jne
loope
mov
cmp
sahf
xchg
ljmp
cmpsl
inc
adc
or
mov
addl
mov
dec
jb
fstpl
and
ss
and
icebp
std
lea
add
and
mov
mov
dec
cmc
sbb
xchg
sbb
sahf
lods
ret
leave
insb
mov
in
pop
cwtl
mov
jae
xor
mov
cmpsb
lock
insl
fbstp
aam
mov
jbe
adc
daa
jb
jle
in
cmp
xor
ds
jge
xor
jmp
aad
scas
cltd
outsb
fldcw
add
add
add
sbb
mov
scas
fcompl
mov
push
inc
sbb
imulb
divl
and
ds
lds
jb
sub
mov
mov
dec
and
sub
fwait
popf
adc
jmp
roll
pop
ret
and
std
push
pop
jb
mov
aad
popf
push
cltd
add
scas
addb
push
mov
rclb
mov
add
bound
push
repz
jg
popf
imul
shll
mov
sbbb
les
js
jno
fcmovbe
pop
adc
sbb
pop
int
push
sbb
pop
mov
sub
adc
inc
mov
mov
sub
andb
jnp
jno
jbe
mov
push
mov
repz
fcoms
filds
xor
pop
inc
dec
mov
cmp
mov
fsubrs
xchg
dec
mov
sbb
pop
dec
jbe
push
cmp
imul
test
cwtl
jns
cmp
dec
inc
ljmp
jmp
dec
mov
dec
je
jbe
pop
out
xchg
mov
lret
cmp
test
ffree
popa
adc
sbb
pop
push
mov
imulb
int
stos
pop
incb
fsubrs
xchg
cmpsb
loope
ljmp
rolb
cmp
sub
ds
push
jne
in
xchg
out
int3
xchg
stos
jp
sub
loope
fstpl
pop
cmp
sub
lcall
shll
out
mov
shrb
loop
rorb
mov
addl
and
fidivl
push
repz
xchg
stos
rorb
jne
inc
jbe
shrl
call
popf
or
mov
mov
push
jp
xchg
push
int
in
inc
and
and
fists
add
inc
xor
push
mov
jnp
jbe
sub
jno
popf
pop
pushf
and
mov
add
out
add
shll
test
sub
je
out
dec
jg
das
mov
mov
inc
and
shll
into
jne
out
js
push
imul
inc
lock
dec
sub
cmp
repz
pusha
add
adc
xor
fucomip
sbb
divb
add
jg
sub
inc
mov
cs
xchg
add
mov
decl
xor
sub
mov
fidivrl
sbb
pop
lret
mov
mov
popf
gs
cmp
inc
das
aad
fldenv
push
or
in
outsl
out
loope
iret
xor
and
scas
adc
roll
iret
neg
cltd
fnstcw
lods
fwait
and
mov
mov
pop
stos
add
imul
xor
pop
sbb
jb
xchg
dec
mov
inc
scas
lret
lret
mov
insb
inc
sub
sub
fcmovnbe
cmp
stc
mov
std
mov
sbb
je
adc
je
pop
je
ja
fcom
jo
cmp
sarb
dec
pop
xor
mov
mov
pushf
inc
add
inc
fidivrl
xchg
jg
mov
mov
xchg
cwtl
std
mov
mov
dec
mov
outsl
mov
push
mov
lods
out
sbb
push
mov
dec
stc
push
pop
popa
insb
fldenv
push
and
scas
sbb
cmp
and
cmp
loop
mov
and
mov
mov
arpl
mov
lods
sbb
mov
out
mov
adc
mov
jno
adc
cld
mov
mov
inc
cli
mov
in
xor
cwtl
cmp
dec
dec
arpl
xchg
mov
cli
mov
mov
hlt
xorl
mov
xor
ds
test
repz
add
stc
xor
jle
imul
std
xor
lods
lcall
mov
sub
js
xchg
push
test
or
mov
sarb
sub
jbe
fnstenv
insl
push
repnz
mov
lods
push
cmp
adc
cwtl
jle
mov
mov
add
push
aas
mov
addr16
jmp
xchg
inc
pop
ja
and
stos
aad
xchg
jp
flds
pop
dec
inc
cmc
imull
shll
mov
adc
loope
lahf
outsl
dec
dec
mov
cmp
jg
inc
mov
stos
icebp
enter
out
test
jecxz
vprotb
mov
dec
bound
pop
sbb
dec
mov
mov
lahf
int3
mov
cs
push
fidivrs
movsl
xchg
cld
outsb
xchg
xchg
stos
jecxz
push
lahf
or
mov
icebp
adc
adc
adc
lcall
pop
push
pop
outsl
mov
cmp
mov
stos
push
jb
cmpsl
mov
mov
push
jl
aas
fs
js
mov
adc
add
popf
aaa
xlat
xchg
sbb
sub
fs
shrb
push
lret
outsl
push
dec
mov
out
test
and
orb
incb
dec
lds
stos
loope
cld
push
jne
imul
sti
sbbl
xchg
mov
lods
push
in
or
and
pop
dec
push
into
mov
aaa
add
lods
lret
addr16
cmp
aas
loope
sbb
mov
popa
inc
test
mov
mov
adc
ljmp
mov
mov
lcall
xor
push
pop
aas
sub
push
xchg
movsb
stc
mov
pushf
jmp
push
js
adc
cmc
test
dec
rcrb
imul
fwait
add
xlat
and
pop
pusha
aam
dec
cltd
xor
inc
adc
pop
imul
push
ja
in
add
jb
sti
xor
pop
sahf
jae
jb
mov
push
adc
dec
pop
dec
lods
lock
push
lock
imul
push
jl
lea
push
cmp
fdivs
sub
enter
inc
mov
mov
push
ss
push
or
rcr
adc
flds
repnz
pop
loop
sub
scas
dec
int
lret
std
stos
cmp
adc
jbe
das
dec
inc
les
iret
jbe
mov
aam
insb
mov
dec
in
cmp
inc
test
nop
int3
jno
out
mov
push
xchg
das
dec
arpl
fistpl
inc
mov
movsb
xchg
sbb
mov
xor
fdivrs
sbb
add
in
mov
mov
jo
pusha
xchg
pusha
out
sbb
mov
out
popf
xchg
push
out
nop
loop
push
cmc
cld
xchg
mov
negl
dec
xchg
scas
xchg
hlt
pop
mov
fisttpll
fisttps
xor
push
adc
in
and
pop
sub
sbb
aam
inc
mov
mov
sub
fistl
invd
cld
int3
int3
iret
push
cmp
jo
js
xor
scas
push
insb
adc
idivl
pop
add
call
mov
or
mov
mov
mov
hlt
addr16
js
xor
sbb
jge
scas
cmpsl
xor
xchg
shlb
mov
sub
cmp
mov
ljmp
fcmovnbe
cmc
push
mov
mov
add
js
data16
jo
les
push
cmc
jne
nop
xor
xor
push
je
push
les
mov
iret
les
xor
pop
imul
out
loope
insb
es
icebp
shl
test
test
push
jo
stc
mov
outsl
push
loopne
mov
cli
fwait
pop
mov
sbb
mov
lea
sub
cmp
int3
jmp
and
cmp
inc
shl
int3
mov
mov
movl
sub
call
rcl
movsl
mov
movl
add
dec
mov
push
jecxz
fbstp
test
jmp
sbb
stc
sbb
mov
out
jg
mov
insb
mov
repz
fcmovnbe
jge
aas
add
repnz
les
and
xchg
dec
lret
insb
sbb
fs
mov
xchg
js
int
and
testb
stos
rorl
adc
iret
mov
dec
jecxz
insl
adc
orb
cli
test
loopne
dec
push
imul
aad
add
es
sbb
ror
fcompl
xchg
test
cs
or
jb
stc
mov
sbb
les
push
clc
lock
sub
into
sbb
pushf
into
add
dec
add
test
xchg
cwtl
xchg
mov
xchg
inc
loopne
jb
adc
daa
sbbb
add
dec
jg
xor
arpl
in
jg
lods
call
cmc
jae
adc
mov
sbbl
mov
cmp
cmp
mov
aam
cmpl
jle
mov
pop
lret
xchg
inc
insb
cli
fstl
leave
bnd
out
inc
cmp
push
sub
xor
or
mov
andb
cli
test
fcmovnu
sbb
mov
pop
dec
addb
in
jl
cmp
insl
jg
jge
mov
adc
xchg
shll
subb
lcall
adc
pop
arpl
fldenv
add
loopne
adc
testb
adc
jo
daa
gs
mov
jge
pop
sahf
int
xor
mov
in
xor
andl
shrb
xor
sub
adc
in
inc
stos
inc
mov
cli
shl
pusha
push
lahf
push
repnz
cwtl
sub
icebp
xchg
sub
mov
adc
pop
stc
mov
aaa
push
pop
push
pop
pop
sub
push
aaa
lret
enter
lock
cld
add
xchg
inc
pop
into
das
jl
lar
shrl
inc
outsb
adc
mov
fwait
daa
fmull
add
adc
fcoms
mov
pop
jmp
mov
subl
or
ja
sbb
jl
daa
pop
xor
cmp
stc
jg
lods
add
call
popa
shlb
xor
shlb
mov
sbb
or
aaa
sbb
aam
sbb
pop
jmp
jae
xlat
test
inc
mov
sbb
test
xor
pop
out
mov
mov
ljmp
sub
dec
out
or
int3
in
das
xor
sub
iret
jbe
das
pop
rcr
jmp
or
lock
mov
mov
fidivl
fstp
stos
push
or
iret
sub
arpl
and
outsb
ret
nop
inc
dec
or
je
or
imul
loop
call
mov
enter
fidivl
in
adc
lods
xchg
push
jae
loope
repnz
sbb
nop
lea
stos
inc
jp
ret
sbb
mov
sub
mov
shl
cld
aaa
subb
push
les
cltd
xchg
jae
add
cmc
test
sbb
mov
push
and
sub
dec
mov
push
dec
loope
scas
scas
jle
adc
popf
pop
pop
inc
sub
sub
dec
bound
jp
dec
jo
push
outsb
inc
push
jbe
hlt
lds
xchg
and
and
cltd
test
jae
rclb
and
mov
fcoml
cmpsb
push
jbe
lahf
jecxz
jne
test
mov
mov
sub
aaa
out
stc
mov
xlat
shll
xchg
loope
daa
int3
insb
adc
push
sub
ficompl
pop
add
lret
jle
addr16
insb
sub
push
cmp
adc
sbb
gs
inc
ja
sub
dec
imul
xchg
sub
aaa
ss
pop
add
add
imul
subl
or
or
imulb
xchg
sub
adc
mov
popa
xchg
inc
testb
sub
pop
mov
pop
stos
mov
and
stos
mov
shl
movsb
rcll
enter
shrl
shll
sub
add
xchg
cmp
sub
pusha
xor
dec
rorl
or
mov
das
or
aaa
test
sbb
orl
and
sub
pop
xchg
daa
mov
ds
mov
aam
iret
pop
pop
cmp
add
push
icebp
test
xchg
sub
stos
in
jle
cmp
or
mov
xchg
add
ret
mov
cmpl
push
je
fstpl
xor
cmp
sbb
rcrb
repz
inc
adc
lcall
adc
or
icebp
bound
incb
outsl
adc
xchg
loop
pop
or
cs
dec
add
dec
jp
dec
dec
insl
in
jb
lock
aam
negl
imull
in
into
ja
xchg
scas
imul
leave
and
mov
cmp
sbb
adc
in
fwait
push
sbb
add
popf
jecxz
jge
cmpsl
lret
jp,pt
jp
sahf
xchg
push
clc
dec
addr16
addr16
cmp
inc
int
fldl
pop
and
lds
push
negb
test
lcall
add
ret
mov
js
fstl
rcll
sub
icebp
fucomip
outsb
cmpsl
je
ss
fcompl
push
pusha
cmc
adc
fs
daa
mov
push
cmp
shll
test
xor
or
sub
into
inc
pop
push
or
jge
mov
or
mov
cltd
push
imul
iret
fwait
dec
pusha
aad
mov
inc
fcomps
lods
lods
pop
icebp
adc
mov
test
cwtl
lea
pshufw
mov
jb
daa
mov
fldenv
stc
xchg
xlat
leave
test
mov
xchg
pop
shll
cmp
stc
push
pop
push
inc
sbb
pop
ljmp
mov
cmc
das
addr16
or
push
int3
in
dec
bound
jg
fidivrs
add
clc
mov
jo
or
push
stos
pop
stos
lea
mov
mov
shr
cmp
fistpl
outsb
pop
push
mov
repnz
gs
jle
push
ret
in
cmc
int3
xchg
fmuls
push
jnp
and
mov
jmp
push
cmpl
test
xchg
test
adc
sub
inc
bound
inc
and
fisttpll
inc
jno
xchg
aam
jns
push
ja
pop
mov
jno
cmp
inc
fsubr
cmp
test
jle
lret
stc
movd
push
rorb
lock
inc
ret
lock
scas
mov
rcrb
mov
cli
fcom
repz
cli
dec
adc
jp
and
sbb
xor
mov
lods
adc
std
add
inc
in
add
enter
push
fdivs
or
repnz
imul
mov
shlb
jae
or
add
popa
popa
jbe
sahf
sar
jge
push
adc
cmp
add
push
sub
mov
cmp
mov
neg
or
test
pop
mov
test
sub
adc
sbb
mov
call
jae
pop
pop
push
sub
std
mov
ja
or
cli
frstor
mov
sub
or
adcb
and
jmp
mov
pop
inc
and
test
les
stos
std
addr16
xchg
pop
hlt
fcmovb
negl
push
lcall
pusha
jne
adc
fbld
xchg
dec
push
adc
xor
jns
lcall
std
daa
xchg
jmp
jbe
push
inc
enter
sub
dec
mov
sahf
outsb
mov
adc
addr16
flds
loopne
dec
data16
faddl
test
aam
nop
fmuls
call
insb
lahf
mov
fs
add
sub
mov
sbb
push
or
dec
mov
push
dec
jnp
or
or
or
xchg
stos
add
add
movsb
bound
lock
stos
cmp
xchg
push
mov
pop
int3
fcoms
call
add
or
fsubrs
in
addl
or
in
aad
xor
push
add
int
or
adc
xlat
or
ljmp
fistl
jl
mov
sarl
push
stos
aas
paddusw
jle
push
adc
pop
aas
jge
cltd
jb
js
aam
push
pusha
or
test
nop
aaa
and
outsl
js
cmc
shrb
sub
andl
daa
cwtl
xchg
adc
sub
test
mov
xchg
push
cs
sbb
add
xchg
or
loopne
lock
roll
push
fwait
ds
int
inc
je
push
push
xchg
dec
inc
outsb
sbb
icebp
mov
or
faddp
insb
inc
sub
cmpsl
mov
stos
cmp
repz
push
or
mov
mov
and
sub
fstps
or
inc
jbe
pop
add
pop
or
xor
lahf
lahf
push
pop
outsl
mov
ja
cltd
sub
incl
push
cmp
xor
add
jl
xchg
jns,pn
bound
in
mov
fwait
push
lock
sahf
cmpl
out
push
mov
and
js
mov
pop
push
mov
fnstsw
stc
jecxz
xor
pop
mov
cmpl
cmpsl
sbb
adc
negl
jb
fwait
dec
test
movl
arpl
sbb
insl
sarl
lret
add
lea
xchg
lock
lods
lock
mov
iret
into
sub
std
in
xor
shll
fs
pop
jns
outsl
jl
xchg
stos
test
mov
out
add
xchg
mov
orb
fimull
add
aam
std
stos
jns
add
jl
adc
int
movsl
fistpll
inc
or
pop
cmpsl
mov
mov
arpl
jp
outsl
mov
fs
test
cmpsb
mov
and
nop
inc
push
int
xor
fiadds
popf
mov
fnsave
jle
pop
shrl
jp
push
nop
addb
sbb
jmp
popf
inc
mov
out
sbb
mov
inc
adc
mov
loop
xlat
push
jnp
aam
and
pop
loop
xchg
sti
int3
xor
push
jb
mov
jp
add
sub
in
jle
stc
popf
cmp
stos
nop
sub
mov
push
jge
push
punpckhwd
repnz
test
push
mov
mov
jnp
ja
test
ljmp
out
or
xor
push
cmp
pop
xchg
aad
pop
mov
push
jb
test
clc
xor
icebp
jno
loopne
arpl
aad
or
add
pop
fildll
mov
test
inc
sbb
ss
pop
test
jecxz
jne
jecxz
jmp
cmpsb
cmp
inc
rolb
nop
sub
sbb
es
imul
adc
add
pop
popf
cmp
mov
cwtl
mov
nop
sub
rorl
out
cmp
adc
jmp
mov
addr16
lods
jno
dec
jns
push
adc
ret
scas
pop
icebp
dec
repz
scas
ret
push
or
cmp
mov
dec
cmp
je
xchg
and
pop
scas
fbld
mov
mov
lahf
mov
popf
jmp
cltd
sub
shl
push
adc
mov
push
add
aaa
inc
xchg
push
sub
jge
xor
dec
pop
shlb
stos
frstor
test
xor
insl
adc
mov
mov
mov
scas
aam
test
jge
addr16
ret
imull
cmp
push
repnz
dec
pop
mov
pushf
sub
dec
stos
and
and
jp
push
hlt
and
xchg
adc
pop
data16
cmp
dec
sahf
ljmp
cmp
mov
mov
pop
scas
and
cmp
lock
dec
leave
out
sbb
mov
out
or
stos
adc
rclb
adcb
je
cli
xlat
cmpsb
adc
sbb
xor
lds
sbb
leave
or
pop
xchg
or
int
outsb
mov
fcoms
jne
push
shrl
push
test
and
shl
add
test
jb
into
imul
rcl
jns
cs
inc
adc
js
sbb
stos
sbb
cmpsb
roll
fisubs
popa
push
aam
pop
fwait
xor
push
hlt
loopne
fnstcw
enter
pop
xor
pop
push
outsl
scas
lock
sbb
negl
and
imul
xor
lret
test
push
add
sarb
push
sbb
lds
sti
dec
mov
insl
dec
mov
jg
xchg
test
dec
inc
pusha
test
fists
cld
and
push
xchg
mov
addr16
out
or
inc
adc
icebp
sarl
dec
and
mov
lods
lock
arpl
aaa
stos
jns
inc
rcrb
xchg
sahf
xlat
mov
nop
sbb
or
mov
xchg
fcompl
sti
ficompl
sbb
fisttps
cmp
sti
out
inc
jno
clc
xchg
pushf
es
push
cmp
mov
and
into
jp
jnp
cmp
dec
mov
inc
loop
jge
sbb
xor
ja
cmp
mov
outsl
sbb
lcall
dec
dec
ss
dec
cmp
lea
sbb
xchg
sub
rcll
fidivrl
push
cmp
cmp
xor
add
sub
mov
out
mov
jle
ja
pop
sti
rorb
in
xor
enter
or
adc
sbb
sbb
in
out
sbb
push
test
adc
sbb
mov
in
je
imul
loop
jl
jl
jne
in
mov
clc
mov
shrl
and
mov
test
lret
push
mov
mov
outsb
and
lock
or
push
and
sub
dec
scas
xor
repnz
ficoms
add
jns
daa
mov
cltd
lret
dec
in
jns
test
mov
inc
mov
jl
fwait
repz
repnz
jl
fwait
inc
lock
loopne
dec
push
dec
enter
test
adc
lcall
xor
pop
inc
mov
adc
gs
lcall
rorb
push
pop
mov
aas
xchg
cmpsb
inc
jb
lock
mov
mov
mov
xchg
in
outsl
pushf
ds
mov
push
sub
stos
aam
andl
inc
das
mov
les
push
mov
push
mov
mov
pop
movsl
fisubrs
movsb
jb
dec
aaa
push
pop
cmc
pop
sbb
push
imulb
lds
clc
adc
int
iret
push
les
adc
push
pop
shll
sbb
inc
in
scas
je
and
adc
lahf
rcrb
jb
xchg
sub
out
add
bound
into
loopne
je
out
test
and
aas
pop
lcall
imul
jge
popf
mov
sbb
cmp
add
cmp
aas
mov
pop
scas
jo
imul
lods
mov
sarb
dec
mov
mov
hlt
dec
sarl
jecxz
mov
daa
sbbb
lods
jb
mov
out
add
out
push
shlb
notb
insl
sahf
add
cmova
sub
mov
mov
test
imul
pop
ja
sub
sbb
lahf
int3
aas
inc
loopne
insb
leave
adc
in
fisubs
jb
movsl
sahf
shl
test
mov
daa
add
dec
adc
jbe
sub
xor
inc
xor
mov
hlt
lret
xchg
xchg
pop
les
jecxz
inc
xchg
inc
xchg
adc
sahf
aam
mov
jle,pt
and
jbe
adc
sbb
mov
and
xchg
std
aad
add
inc
mov
cmp
or
inc
shrb
adcb
mov
int
loope
cs
lock
or
cmp
mov
add
xor
jp
adc
scas
jne
sbb
arpl
inc
and
popa
add
pop
out
cmp
in
sarl
dec
sub
mov
xchg
ficomps
shlb
popf
cmpsl
negl
and
xchg
cmpsb
loope
in
add
rorl
jnp
cmc
jmp
outsb
mov
shrb
popa
out
outsb
jns
int
dec
xlat
leave
std
cmp
in
lcall
lock
sbb
cmpsb
loope
call
sub
jmp
cltd
in
jbe
aam
push
dec
cmp
les
shr
adc
jg
dec
outsl
lret
push
bound
jb
out
or
movsb
dec
iret
inc
jb
sbb
out
addr16
jg
das
sbb
lret
lock
roll
clc
jbe
shrb
inc
or
aaa
cmp
xchg
add
pop
aas
and
aam
cmp
xor
aam
insl
or
xchg
aam
dec
andb
xchg
lahf
pop
test
gs
out
mov
stos
push
mov
std
imul
adc
movsb
arpl
mov
test
movsl
into
xchg
ja
mov
cmp
imul
sti
inc
lock
jno
cld
or
and
insb
pop
dec
xor
in
nop
jl
test
rorb
pop
outsl
loope
dec
mov
jp
enter
decb
es
pop
loopne
jo
jmp
push
ljmp
mov
cmp
inc
mov
das
pop
sub
xor
jmp
fcomi
test
lret
jne
push
and
adc
jl
mov
inc
popa
push
xchg
push
rorb
and
fcmovnbe
sub
std
iret
das
push
fidivrs
or
add
jae
out
sub
repnz
aaa
lods
push
sbb
les
xor
repz
xor
test
pop
xchg
pop
jb
xor
mov
jnp
push
cli
xor
and
cltd
jl
jbe
aas
xchg
or
repz
icebp
repz
xor
fcos
in
or
mov
test
sub
adc
jp
inc
mov
xchg
xchg
xor
scas
mov
movsb
rorb
lahf
mov
pop
xchg
xchg
mov
adc
cmp
push
incb
loope
xchg
pop
adc
ret
xor
data16
pusha
inc
cs
in
sbb
nop
inc
mov
jno
mov
hlt
inc
iret
jns
ss
jns
adc
sahf
dec
fbstp
and
into
pop
mov
jecxz
push
jge
inc
and
sti
jp
aam
enter
adc
ret
sarw
jecxz
imul
jbe
add
movsb
fisubl
sbb
push
popa
jno
mov
inc
xchg
test
aam
setp
mov
std
sahf
pop
pop
fisubrs
xchg
and
aas
jl
test
aaa
out
lds
inc
or
fcomps
mov
push
xor
test
jns
sub
mov
inc
xchg
dec
addl
into
pusha
and
in
and
pop
out
cmpsl
jns
cmp
pop
leave
shlb
mov
test
andb
gs
clc
inc
or
ret
iret
js
add
and
lods
lcall
dec
dec
insl
pop
jg
dec
mov
xchg
inc
dec
lock
aas
push
jns
xchg
test
push
mov
sub
inc
fisubrs
stos
add
push
jmp
test
cwtl
pop
adc
je
and
pop
cs
lods
mov
test
out
add
inc
xor
adc
divb
in
mov
cmp
aas
jb
inc
sarb
outsb
xchg
pop
push
pop
cwtl
dec
je
xlat
xchg
dec
mov
ss
xor
outsb
outsb
dec
sbb
fidivl
push
mov
and
addr16
add
fcmovnu
mov
icebp
inc
in
push
cmpsb
dec
rolb
loop
or
call
or
jp
dec
orb
je
clc
mov
movsl
cmpsb
mov
je
adc
jp
mov
movsl
cmp
enter
stc
daa
cmp
jmp
lret
insb
rol
fisubrs
mov
lods
cmp
shlb
pop
mov
inc
ret
movsb
add
addr16
mov
es
sbb
jg
xchg
xor
rol
scas
cwtl
cwtl
fcomi
mov
stc
adc
mov
add
hlt
and
and
je
loop
pop
xor
jno
mov
jno
or
push
addr16
iret
fimuls
push
outsb
cltd
stos
leave
and
pop
and
ss
cmp
mov
nop
mov
mov
jmp
sbb
nop
mov
or
arpl
sub
dec
pop
adc
into
mov
adc
mov
test
nop
xchg
call
in
aaa
xlat
and
jb
push
sub
icebp
xchg
lret
mov
push
mov
fbld
movsl
fcmovnb
and
or
xchg
inc
xchg
in
pop
mov
pop
movsb
insl
lahf
cwtl
push
inc
cmp
faddl
lock
mov
mov
jns
or
sbb
dec
bound
mov
jge
or
jne
sbb
jno
fnstenv
cwtl
inc
lret
loop
mov
push
xchg
jle
loope
loopne
mov
test
push
adc
dec
mov
imul
mov
cmp
xchg
and
ja
jb
adc
imul
dec
mov
or
add
push
inc
mov
push
bound
pop
adc
leave
arpl
call
ljmp
pop
jno
enter
jno
movsl
leave
sti
adc
loop
xchg
popf
adc
fs
push
xor
cmp
mov
xorb
imul
push
repz
lret
pop
cmc
xor
mov
stos
mov
pop
lcall
sub
repz
or
iret
aas
dec
lea
ret
insl
or
sub
lcall
mov
hlt
jp
jne
lods
into
into
int
lods
leave
out
insb
int3
daa
dec
push
cmp
sbb
cmp
lea
cmp
fwait
sub
out
fistps
addb
pusha
jp
stos
xor
jo
xchg
dec
jae
add
sbb
cld
stos
lcall
idivl
lahf
inc
aam
pop
ficomps
push
and
adc
mov
andl
adc
shlb
popa
sbb
addr16
mov
cmp
pop
pop
loope
outsb
cmpsl
lock
int
pushf
in
mov
jne
jae
fs
movsl
push
sub
cmpsl
pop
dec
or
scas
add
jnp
jbe
rcr
divl
das
fs
das
pusha
nop
pop
add
pushf
sub
cmpsb
leave
pop
les
sbb
push
mov
pop
mov
fists
mov
lock
sbbl
inc
or
cmpsb
call
je
dec
cmp
xchg
cmpsb
mov
mov
ret
cmp
push
sahf
push
push
call
pop
jbe
dec
ds
and
xchg
jle
clc
test
sbb
xor
xor
push
jl
jo
pop
mov
out
mov
mov
sti
les
aaa
add
adc
popf
lock
loop
sbb
mov
pushf
ret
xchg
jns
ja
in
mov
pop
add
lcall
xlat
insl
pop
mov
aad
add
mov
out
add
jecxz
sbb
jne
dec
iret
mov
inc
or
lock
jp
cmp
mov
jle
push
das
in
test
imul
cmp
xchg
data16
jecxz
add
xchg
lock
jno
mov
and
aas
rorb
and
imul
sub
popf
pop
jp
notb
mov
sub
frstor
xchg
push
dec
loop
mov
adc
dec
inc
ficompl
jb
mov
push
dec
mov
push
mov
cwtl
ret
cmp
insb
push
inc
cwtl
mov
sbbb
xchg
stc
scas
cltd
push
cmp
mov
xor
jbe
fwait
sbb
add
movaps
mov
cli
test
jns
shl
add
outsb
ds
pop
jecxz
ds
rorl
push
add
sahf
jno
mov
loope
icebp
in
cmp
cltd
repz
pop
inc
and
mov
inc
hlt
lock
rol
icebp
out
add
jge
sub
repz
leave
ja
jb
test
in
pop
adc
lods
fs
xchg
test
mov
pop
into
lret
jmp
sub
dec
mov
mov
rorl
fwait
jnp
mov
sub
into
rclb
cmp
sub
inc
push
sub
jp
inc
jmp
xchg
adc
aad
dec
xchg
nop
lcall
push
mov
sub
in
rorb
pop
cmp
dec
and
mov
push
lock
cmp
andb
jp
movsl
mov
jmp
ljmp
ds
addr16
bound
popf
and
rclb
push
cmp
sub
push
inc
insb
add
and
xor
dec
outsl
xchg
adc
leave
call
push
and
inc
mov
xchg
sub
dec
push
pop
sub
das
call
adc
test
pop
out
loop
mov
mov
mov
pusha
adc
push
fists
cwtl
mov
sbb
dec
outsl
sahf
xchg
lahf
sub
xchg
sahf
inc
cmc
mov
dec
test
xchg
out
dec
fs
icebp
shrl
cli
push
sahf
stos
mov
dec
das
or
and
pop
xor
js
sub
movl
inc
popf
dec
insl
xchg
daa
inc
ficoml
inc
in
mov
sub
call
cmp
imul
lea
xchg
lods
scas
movsb
xchg
cmpsl
clc
jg
dec
mov
fs
ja
pusha
dec
inc
xor
bound
jge
popa
push
adc
movsb
mov
cmp
in
mov
mov
negb
mov
jbe
test
dec
lods
mov
outsb
sbb
scas
out
imul
cs
js
mov
push
xor
mov
out
cmp
inc
pop
jg
icebp
stc
adcl
and
and
xchg
push
add
sti
push
ja
and
dec
movsl
dec
repz
repnz
mov
push
bound
je
inc
fmuls
rclb
adc
or
mov
ljmp
data16
inc
mov
adc
push
icebp
add
aam
insb
mov
test
mov
jmp
pop
or
sbb
push
mov
lahf
lahf
mov
lods
push
cmp
and
movsb
push
or
aad
sahf
daa
mov
cmp
inc
xor
pop
mov
mov
cmp
shll
xchg
mov
out
and
in
add
mov
jae
mov
inc
notb
lea
fucom
int3
fs
sbb
mov
inc
inc
adc
sub
cltd
xchg
fs
cld
int
lahf
jle
scas
sarb
repz
outsl
pop
push
or
xor
jecxz
ja
popf
mov
shrb
daa
push
dec
ret
sub
into
xchg
jecxz
inc
xor
inc
or
daa
push
pop
out
test
jae
dec
ret
cmp
stc
cmp
inc
adc
mov
clc
push
add
pop
push
xlat
push
jmp
inc
push
and
dec
popa
in
inc
jp
aam
leave
paddusb
test
sbb
mov
jg
mov
in
repz
xor
inc
popa
adc
or
adc
xchg
into
test
data16
cmp
mov
pop
mov
testb
mov
add
inc
sbb
hlt
lret
jbe
mov
sub
lods
and
lcall
mov
jp
mov
jo
or
push
pusha
sub
inc
stos
test
insl
ret
cmc
push
and
in
sub
jae
push
xchg
int
mov
pop
mov
shll
popa
sub
cmp
in
mov
fs
aaa
pop
cmp
inc
adc
addb
dec
mov
or
push
popl
ss
sarl
stc
inc
fdivr
cmp
call
fwait
lret
loopne
ret
xchg
push
cwtl
mov
mov
repnz
mov
or
mov
bnd
int
sbb
mov
cmp
push
jns
xlat
mov
js
shlb
out
and
shr
add
push
outsl
rcrb
scas
js
mov
push
xor
fdivl
xchg
add
std
pop
pop
insl
in
inc
push
aas
ja
enter
pushf
push
add
aam
xor
inc
imul
sub
jle
aas
jnp
sub
and
push
imul
imul
inc
jne
mov
inc
jge
pop
mov
xchg
cmpsb
movsb
jo
cmp
xchg
cmp
jnp
sub
mov
push
fcompl
repnz
dec
or
mov
jg
push
pop
fists
incl
subl
mov
push
inc
mov
shrb
scas
in
mov
roll
sbb
in
xchg
adc
sub
and
push
std
sub
sub
out
add
jmp
lret
xchg
mov
xchg
nop
sbb
mov
or
or
shr
jp
cld
jecxz
jmp
aas
dec
fwait
ja
je
pop
repnz
mov
lret
cs
mov
cwtl
lret
jl
push
xchg
std
mov
mov
gs
movsb
sub
dec
stos
inc
push
mov
movd
cltd
arpl
xchg
adc
xchg
fisubs
push
rcrb
pop
xchg
loopne
fst
scas
cmc
cmp
frstor
adc
sbb
jb
mov
fildl
int3
les
mov
es
mov
push
enter
ret
scas
repnz
adc
mov
mov
mov
dec
adc
insb
xorb
dec
push
xchg
mov
adc
out
cmpl
ljmp
loop
add
adc
cmc
mov
jno
les
push
sahf
loopne
mov
pop
mov
pop
ficoml
jo
cmp
out
pop
aam
cmpsl
popf
dec
sti
or
ja
or
jae
ss
or
lahf
sarb
mov
adc
xchg
dec
hlt
frstor
adc
mov
dec
xor
aaa
in
lret
mov
out
add
push
out
and
mov
sub
mov
fnstcw
push
xor
pop
pusha
subl
xchg
stos
cmp
imul
mov
cli
sbb
push
arpl
fadds
fists
movsb
out
or
lcall
faddl
mov
add
pop
mov
jb
rorb
inc
cmpsl
cmp
shll
mov
sbb
mov
or
xchg
xorl
xlat
mov
in
xor
pop
jbe
inc
fs
xor
sbb
cmp
fistpl
push
adc
push
in
notb
mov
add
in
mov
lret
rcll
jg
icebp
push
xchg
or
and
cli
out
movsb
hlt
xor
mov
mov
push
or
hlt
scas
mov
sbb
test
lret
hlt
das
mov
out
cli
adc
int3
scas
pop
mov
mov
inc
fsubs
xchg
pop
mov
mov
add
add
mov
in
clc
flds
xchg
push
andb
or
movsb
rclb
outsl
dec
sbb
filds
mov
or
cs
decb
xchg
xor
cmp
inc
cmp
push
or
lods
ficoml
dec
test
addb
negb
ret
inc
lods
push
je
cs
test
inc
mov
adc
sbb
dec
xchg
sub
xchg
movsl
mov
push
ror
mov
adc
addr16
push
into
rol
push
sbb
jbe
ret
dec
movsb
sub
mov
rcr
push
and
leave
cmp
rcll
outsl
movsbl
adc
inc
pusha
push
jecxz
fs
icebp
stc
lahf
orl
dec
adc
lret
out
imul
cwtl
xchg
imul
cltd
add
mov
in
mov
mov
mov
js
out
into
andl
addr16
xchg
or
cmp
add
add
mov
cmpsl
lock
lea
dec
aaa
xor
fimull
dec
repnz
lds
fnstcw
and
and
mov
into
adc
inc
cmp
lods
sub
mov
pop
orl
subl
cli
aaa
push
or
xchg
sarl
andl
inc
mov
pop
or
cmp
fildll
push
add
jne
dec
out
sub
fistl
arpl
push
cmpsl
push
adc
sbb
hlt
cmp
xor
xchg
sahf
negb
aam
and
mov
fsubl
add
jmp
movb
gs
push
dec
and
xor
imul
mov
xor
jge
lret
notb
fwait
xlat
mov
xor
add
push
jno
xchg
lahf
pusha
daa
aas
and
inc
inc
mov
xchg
sbb
rcrb
cmc
dec
mov
cmpl
loopne
push
lea
in
cmc
das
test
les
mov
call
jp
sub
ds
inc
out
mov
xchg
push
inc
push
or
jo
ja
lahf
mov
inc
adc
dec
call
sub
inc
loopne
pushf
cmp
sbb
fwait
ret
jp
inc
jle
nop
imul
jl
mov
push
jle
mov
popa
sub
add
mov
mov
cmp
jge
aas
cmp
mov
mov
mov
mov
rolb
mov
mov
pop
pop
repnz
push
ja
mov
mov
cmp
sub
je
test
pop
xchg
pop
mov
jg
aad
into
int
je
nop
xchg
xchg
aas
ljmp
and
movsl
xor
rorl
mov
or
sub
adc
mov
xchg
xlat
lret
mov
mov
inc
call
in
pop
push
sbb
imul
repz
adc
mov
mov
scas
movb
sbb
in
cs
jl
jg
out
test
lods
push
jnp
push
in
inc
imul
and
stos
dec
imul
mov
cmpsl
cmc
mov
cmp
aas
fldenv
loop
add
mov
jge
shrl
xor
mov
push
aam
stos
dec
xchg
aas
pop
cmp
add
add
mov
jns
data16
ljmp
js
and
mov
std
push
lods
sub
sbb
testb
xchg
pop
mov
and
fisubrs
mov
mov
sbb
enter
push
xchg
in
call
pop
out
sub
int
jnp
sahf
jg
lahf
jo
xor
mov
test
das
or
jno
fs
lock
shl
sbb
inc
pop
pop
insl
sbb
jmp
pop
and
out
or
lea
ja
loopne
rol
mov
shlb
mov
pop
xor
dec
je
aam
xchg
je
ljmp
jl
xor
movups
loope
iret
shlb
pushf
jle
xchg
ret
imul
dec
js
lret
fndisi(8087
in
dec
mov
gs
test
dec
mov
pop
repz
gs
mov
xor
sti
test
adc
mov
stc
arpl
add
adc
xor
aad
cltd
mov
add
pop
mov
adc
psadbw
push
ja
int
mov
clc
and
mov
dec
xchg
mov
insb
mov
mov
xchg
popf
pop
mov
inc
je
out
mov
lods
dec
jns
inc
pop
mov
pop
sub
jg
out
fidivrl
xor
imul
or
xor
sarb
rclb
cmp
bound
ret
mov
push
mov
ljmp
jge
jae
push
push
rolb
dec
pushl
push
rorb
inc
inc
imul
adc
arpl
or
jle
fs
xchg
outsl
nop
pushf
fs
or
adc
int
xchg
push
aaa
pop
gs
jg
aad
xchg
mov
mov
out
outsl
daa
in
push
rorb
push
xchg
loop
push
sub
mov
sbb
xlat
jne
mov
ret
sarl
sahf
clc
movsl
jbe
or
psubd
cmp
sahf
icebp
mov
mov
je
aaa
outsb
adc
dec
jecxz
loope
out
jno
or
lcall
cmpsl
push
and
dec
jae
movl
jb
mov
cmpsl
mov
xchg
adc
xchg
mov
lods
mov
pop
mov
stos
lcall
call
cmp
cmp
cmp
mov
fs
pop
inc
inc
mov
out
rcrb
or
loope
popf
mov
out
push
adc
inc
ss
cmp
imul
stc
or
or
jns
in
pop
lret
sbb
push
jmp
sbb
test
call
shlb
push
mov
jg
sbb
lods
push
push
inc
loopne
cmp
xor
mov
repz
mov
inc
jecxz
mov
movsb
stos
int3
rcrb
lret
sbb
xlat
mov
cli
aas
cltd
jge
cltd
xchg
lret
bnd
jb
mov
lea
insl
jno
les
cmpsb
ficompl
xor
or
inc
outsb
mov
lea
sub
pop
fcompl
jbe
dec
dec
xor
sub
sub
pusha
aas
icebp
out
mov
js
push
mov
outsb
xchg
lods
incl
jb
mov
bound
fisubrs
in
mov
xlat
dec
dec
or
sub
fsubrs
ja
inc
movsl
sets
push
push
and
out
in
inc
xor
pushf
imul
in
adc
mov
mov
lahf
test
jp
dec
test
stc
sbb
add
pop
test
push
fstpl
sahf
jb
cmp
and
adc
jecxz
orl
stos
push
cmp
pop
dec
xor
cmp
push
lds
dec
pop
xchg
sub
fisubl
pop
and
cmpsl
shrb
and
arpl
test
and
xchg
test
cmp
fnstsw
clc
and
std
aaa
push
cwtl
dec
xlat
arpl
xchg
ljmp
push
sbb
cmpsb
mov
cwtl
push
jge
cltd
jne
push
jnp
lock
dec
clc
lods
mov
fistps
pop
or
mov
mov
dec
or
push
pop
cmpsb
add
stc
mov
iret
dec
popf
fxch
sbb
mov
imul
xchg
fmul
popf
pusha
xorl
inc
push
call
data16
ljmp
mov
push
inc
push
mov
lcall
add
sub
pop
aaa
insb
fmull
pop
data16
rclb
xor
inc
mov
insl
mov
data16
scas
cmp
mov
jbe
adc
icebp
mov
adc
loope
inc
push
dec
jmp
mov
pop
jne
adc
in
rcl
sub
mov
push
push
and
cmpsl
push
dec
shll
incb
loope
mov
and
mov
fsubr
mov
xor
mov
stos
inc
and
mov
and
out
dec
je
mov
das
out
add
push
or
push
cmp
aam
inc
jmp
out
lcall
or
sti
jl
data16
cmpsb
les
cmp
inc
add
lods
or
mov
mov
inc
sbb
outsl
pop
in
fscale
fnstcw
cs
adc
cmp
push
stc
push
and
jo
cmp
jae
push
mov
and
mov
mov
and
sbb
sar
imul
jle
add
inc
mov
adc
popl
add
pop
pop
xchg
xchg
push
ficomps
push
mov
mov
push
outsb
add
pop
adc
stc
filds
repnz
jb
aad
fs
jle
sbb
and
push
jl
mov
lcall
icebp
lahf
adc
inc
insb
xchg
jae
sub
add
lods
xor
jle
or
jo
dec
mov
jle
aas
pop
fadds
in
enter
call
insl
mov
pop
mov
mov
add
adc
and
shld
mov
cmp
push
or
adc
clc
ja
add
aam
fmulp
es
test
xor
jbe
push
sbbl
shll
jecxz
leave
icebp
mov
xchg
repz
push
mov
jo
pop
jb
add
fmull
in
outsl
dec
orb
fmul
aad
movsl
inc
pop
rcl
mov
xcrypt-ofb
cmpsl
sub
shl
mov
and
jle
jmp
lods
popa
lahf
ds
adcb
stc
push
in
jno
dec
adc
add
cwtl
mov
pinsrw
cli
jp
decl
pop
addr16
adc
popf
mov
test
in
sahf
lds
xchg
das
and
mov
mov
cmpsb
xchg
rcll
dec
shrb
mov
cmp
sub
lea
inc
idivb
subb
ljmp
cmp
ds
jmp
cltd
mov
inc
mov
xchg
mov
cmpsl
movsb
fldt
call
repz
add
jp
les
sbb
rolb
jbe
test
ljmp
jl
ffreep
inc
push
xchg
pop
fbstp
pop
jne
xor
inc
pop
or
sti
je
ljmp
movsl
push
ficoms
js
inc
icebp
test
fstpt
pop
mov
push
stos
mov
pop
cmp
stc
ljmp
call
pop
test
xor
push
pop
pop
insb
push
je
push
mov
pusha
sbb
aam
xor
jmp
js
pop
in
jno
lret
add
inc
and
push
ds
ja
xchg
rcrb
xor
aaa
dec
test
xchg
add
jmp
inc
mov
popa
cmpsl
sub
into
adc
popa
push
divl
nop
lods
mov
fnsave
xchg
pop
test
mov
sbb
das
push
jno
ror
sub
ficompl
dec
jbe
iret
add
push
push
mov
in
fs
loop
mov
jnp
lret
xlat
mov
dec
aas
in
jg
mov
loopne
adc
and
pop
dec
mov
stc
mov
dec
sbb
pop
aad
mov
dec
addl
jp
mov
lea
jno
sbb
js
aad
popa
inc
push
dec
aas
sti
mov
dec
add
mov
xlat
jnp
or
incb
sub
cli
inc
cmc
jne
cld
sub
adcl
mov
adc
insb
mov
rcrl
mov
cmp
repz
pop
cmc
xor
adc
enter
pushf
or
jbe
ficompl
les
lcall
imul
cwtl
jg
sub
push
sbb
adc
lods
add
cltd
xchg
lods
inc
lcall
mov
lcall
pop
divb
push
sbbl
inc
cltd
test
in
cmp
and
cld
push
repz
mov
cli
or
sub
popa
mov
in
je
test
in
mov
xor
outsl
mov
cltd
mov
cmp
push
out
pop
xlat
pop
add
in
mov
sbb
push
lods
cs
int
push
je
push
sti
inc
out
cli
and
pop
scas
pop
mov
cmp
hlt
jg
pop
jne
xor
mov
adc
in
outsb
xor
pop
xchg
pop
push
xlat
int
inc
sbb
les
sbb
ret
xor
fcomps
fcompl
fstpl
in
push
inc
cltd
xor
push
push
test
cmp
or
pop
out
xchg
ds
insl
xchg
jecxz
jbe
mov
mov
xor
mov
nop
jge
adc
mov
and
mov
push
inc
dec
js
inc
and
xchg
mov
sbb
imul
dec
cmc
dec
xchg
jnp
sub
pop
mov
add
aas
les
ret
push
or
sbbl
mov
add
das
push
lea
stos
pop
fbld
rorl
pop
sub
pop
mov
push
les
sti
sub
shr
xor
adcb
pop
cmp
out
ljmp
pop
mov
lret
sar
aad
pusha
into
outsl
mov
add
cmp
pop
xor
rcrb
pop
and
or
adc
cmp
jg
jo
stos
jecxz
iret
ss
test
cs
sbb
dec
push
addr16
inc
mov
bound
mov
ja
xchg
addl
repnz
sbb
mov
pop
push
pop
iret
sub
cmp
sbb
outsl
and
clc
jmp
lods
cwtl
jp
xor
stos
push
dec
movsb
dec
cmpsl
leave
adc
sarl
add
push
pop
int
ja
jp
les
nop
inc
outsb
push
push
push
inc
stc
adc
push
cld
ret
dec
stos
xor
add
daa
ret
mov
add
dec
gs
lahf
xchg
lret
sbbb
inc
stos
adc
test
imul
daa
jecxz
mov
xor
mov
jno
mov
cmp
dec
rcr
push
adc
lahf
and
xchg
insl
into
push
fsubs
jp
imul
xor
or
shl
mov
nop
xor
push
jns
leave
movsl
pop
ds
xchg
ss
int
mov
and
sbb
mov
fs
mov
inc
fistpll
repz
and
imul
mov
fcmovnu
in
shrl
stos
and
cmpsb
lods
jge
pop
mov
cmp
jle
add
add
add
data16
jg
sub
dec
adc
sbb
ljmp
xchg
mov
lds
lahf
dec
fs
in
dec
or
mov
cli
test
cltd
test
inc
das
adc
lret
lret
pop
sub
movsb
and
shlb
or
rol
clc
or
jnp
adc
mov
xchg
and
aaa
add
dec
call
jp
mov
in
or
xor
pusha
jno
cmpsb
cmp
adc
sbb
aaa
add
push
jae
push
xor
push
pop
or
sbb
pop
or
cmp
movsb
jae
rcr
sbb
or
push
pop
lods
dec
push
cmp
orl
stc
fcmovbe
push
enter
ret
mov
jns
adcl
ja
jle
nop
xchg
mov
push
jge
imul
dec
into
add
cli
push
push
pop
in
movsl
mov
scas
and
pop
xchg
fcom
inc
sahf
lcall
shlb
mov
rorb
out
clc
movsl
mov
mov
sahf
xlat
pop
lods
rorb
sub
jns
cli
in
lds
movb
fstp
rol
and
mov
and
inc
xchg
mov
ffreep
mov
adc
stc
jae
fstpl
mov
and
xlat
adc
xchg
cwtl
inc
fistps
adc
js
push
and
or
enter
push
cmp
cli
adc
mov
outsb
cmp
xchg
pushf
in
and
mov
loope
sbb
std
call
xor
testb
and
inc
inc
into
gs
inc
pushf
inc
push
imul
lds
test
loopne
lret
lret
stc
pushf
push
pop
repnz
pop
adc
and
arpl
inc
incl
xchg
jae
xchg
cs
aam
cmp
cmp
imul
leave
sub
pop
loope
xlat
jno
jae
test
das
sbb
inc
punpckhwd
mov
push
outsl
jle
popa
xchg
arpl
push
sub
dec
or
in
sarb
xchg
xor
push
pop
shr
pop
sahf
loop
pop
loopne
out
lods
jmp
stos
mov
lods
ds
sub
lods
out
sbbl
in
mov
cmp
es
pop
inc
into
dec
ljmp
lret
sbb
fldt
call
rorl
xchg
push
push
outsb
xchg
sub
add
leave
outsl
test
pop
xchg
loop
insb
cmp
pop
data16
sub
mov
lods
in
inc
sbb
cs
sub
inc
cltd
fcoms
push
jbe
int
enter
arpl
adcl
xor
ss
pop
sub
jg
adc
sub
xchg
mov
sbb
push
push
pop
aas
and
push
mov
add
xor
orb
jmp
popa
icebp
inc
pop
loop
hlt
mov
call
jp
jae
push
xor
nop
imul
shl
mov
add
sbb
add
cwtl
faddp
push
xor
sub
andb
cwtl
mov
jnp
sti
in
sub
xor
and
xor
inc
push
mov
dec
mov
push
dec
out
mov
fwait
les
jp
ljmp
mov
js
adc
lea
pop
fwait
jb
ret
in
mov
jbe
hlt
sbb
fcmovbe
test
inc
sahf
push
or
inc
rolb
mov
or
inc
out
dec
sbb
aas
pop
hlt
mov
mov
leave
mov
jnp,pt
mov
jno
ret
cmp
adc
adc
xchg
lods
imul
loope
and
mov
roll
xor
lods
mov
ss
xchg
int3
adc
nop
dec
and
and
in
push
inc
sbb
push
icebp
popa
mov
loopne
push
fwait
mov
test
shll
cmpsb
ja
insb
push
add
in
pop
mov
cmp
and
jecxz
call
shlb
aas
or
cli
lock
pop
jp
mov
mov
or
stos
mov
imul
sbb
mov
in
pushf
out
inc
test
sbb
insb
jne
and
in
and
filds
mov
outsb
fs
jne
loope
mov
sbb
push
addr16
and
sub
mov
outsl
sub
je
cmp
daa
xchg
push
ficoml
fidivl
push
sub
jl
aad
test
notb
mov
test
sti
or
aam
loop
or
icebp
pop
fwait
sbb
cwtl
cmpsb
imul
repz
sub
clc
inc
lock
int
mov
pop
cwtl
push
add
cmp
jecxz
add
xchg
insl
gs
rclb
cltd
daa
fidivrs
push
push
das
pop
imul
pop
xchg
xchg
push
ljmp
cltd
in
dec
iret
dec
push
xor
fidivs
mov
cmc
mov
test
add
lret
stos
imul
mov
sub
pop
dec
ss
xlat
xchg
xchg
jle
popf
push
push
insl
fwait
mov
cld
insl
inc
sbb
ljmp
xchg
jge
push
push
xlat
mov
add
cmp
adc
ljmp
sbb
loop
je
fdivs
in
xor
dec
jo
hlt
shlb
hlt
pop
clc
sbb
loopne
daa
ret
insl
pop
and
cmp
movsb
pop
and
or
ja
clc
ret
mov
je
dec
mov
push
push
ret
das
cs
mov
ljmp
jp
fstp
xchg
cmpsl
push
inc
inc
and
or
or
lea
fisubrs
cli
and
popf
popaw
pushf
inc
in
dec
or
mov
sar
lods
dec
loope
inc
mov
sub
inc
andb
sahf
movsl
in
mov
mov
test
iret
push
out
dec
jl
arpl
lret
cmpsb
divl
push
push
push
leave
xchg
bound
jne
scas
fwait
sti
sbb
add
and
fmul
push
inc
sarb
jle
je
add
lea
inc
or
loope
icebp
push
jecxz
sub
movsb
xchg
popf
sub
xchg
xchg
or
std
sub
adc
stos
push
adc
xor
hlt
icebp
dec
xor
sti
push
insl
sbb
jmp
cld
pop
lret
mov
mov
inc
packsswb
and
lock
mov
fdiv
lret
sub
lods
jle
aad
cltd
sub
jno
or
cmpsb
or
cwtl
imul
fs
stos
xor
movsb
addl
repz
fwait
sbb
roll
mov
int3
cmpsl
iret
lds
sub
mov
dec
jecxz
push
jge
lods
outsb
in
insb
pop
loop
pop
xchg
xlat
cmp
movsb
insl
lods
int3
outsl
rcrl
testb
mov
notl
pop
sbb
or
xchg
out
repnz
jnp
loope
js
nop
in
add
outsl
imul
mov
sub
dec
scas
loopne
mov
pushl
or
fists
inc
jne
mov
jp
dec
or
nop
in
stos
movsl
ss
mov
push
or
jns
nop
outsb
imul
enter
and
jge
dec
jmp
dec
mov
xchg
pop
cmp
rcll
movsb
cmpb
mov
push
push
and
aam
stos
mov
fs
mov
xor
push
mov
or
addr16
hlt
scas
jmp
rorb
or
pop
cmc
add
test
fidivrl
incl
mov
or
cmp
sbb
fnstcw
jns
pop
shrl
add
mov
cmp
adc
jae
movb
add
jmp
int
stos
xor
stc
mov
and
add
add
insl
movsl
test
aas
arpl
add
roll
mov
fmul
arpl
mov
cmp
jb
in
stos
mov
jg
cmp
pushf
cmp
jle
dec
dec
ret
mov
push
stos
dec
adc
dec
add
ret
inc
and
pop
lret
scas
cmc
xor
mov
stos
dec
or
dec
cwtl
gs
pop
es
jae
adc
and
and
popf
ja
mov
cltd
fs
nop
lods
rcrl
popa
jg
loop
sahf
mov
pusha
jp
lret
mov
pop
adcb
dec
rcrb
fadd
pusha
mov
data16
inc
dec
es
repz
sti
mov
out
str
cmp
sbb
int
xchg
into
dec
jl
inc
cmp
and
mov
cmp
in
loopne
dec
lock
cmp
jge
aas
sbb
xchg
popf
adc
inc
cli
mov
notb
mov
mov
mov
popa
xchg
iret
mov
push
mov
scas
in
daa
lods
cmp
test
lds
scas
jbe
in
bound
mov
imul
loop
out
jp
pusha
inc
movsl
and
int3
out
push
pop
jne
mov
not
shrl
sbb
aas
stc
cmp
es
push
mov
fstpt
imull
push
je
or
push
push
fcmovbe
and
cmc
and
xchg
loope
cmp
arpl
pop
xchg
mov
adc
add
mov
push
mov
add
mov
xchg
jp
mov
sbb
and
sbb
mov
imul
shrb
jg
jne
or
cmp
aaa
fs
hlt
divb
push
inc
in
call
fimuls
int
arpl
stos
repz
sbb
jae
inc
pop
jne
repz
stos
cmc
dec
mov
idivl
ret
sbb
sarb
js
lahf
mov
pop
clc
sub
or
sub
cli
mov
test
adc
pusha
dec
arpl
xor
daa
sti
pop
mov
aam
aad
and
bts
push
loop
lock
mov
negb
filds
xchg
cli
mov
sbb
add
mov
add
jl
mov
adcl
jl
hlt
movsb
lcall
into
insl
cltd
add
popa
in
imul
pop
mov
jbe
shlb
std
loop
add
cld
mov
dec
pop
enter
loopne
cs
dec
xor
jg
mov
mov
sub
xchg
xor
fistpll
or
int
stos
jo
cwtl
xor
push
lret
scas
fs
in
hlt
mov
pop
out
push
addl
decb
adc
sbb
jae
mov
je
xchg
orl
ret
stos
rolb
sub
xchg
stos
ljmp
mov
push
jecxz
sti
mov
xor
mov
sub
rcr
push
mov
loope
ljmp
mov
in
outsb
dec
lea
fstpl
out
dec
xlat
jb
in
inc
repnz
scas
jb
pop
jge
cmove
gs
aam
adc
xor
mov
or
shll
mov
add
xchg
pop
fs
inc
xchg
je
out
pop
sti
sbb
add
dec
je
test
shlb
jo
jecxz
jns
mov
xor
push
fs
aam
pusha
inc
mov
dec
test
outsl
mov
testl
xchg
dec
repnz
mov
mov
sbb
popa
cltd
sub
hlt
aaa
mov
outsl
pop
popf
adc
arpl
cli
push
push
xor
leave
inc
inc
lods
call
inc
mov
les
leave
rclb
or
jnp
cmpsb
int3
pop
adc
aas
sub
ss
addl
pop
in
fstl
in
mov
push
and
push
add
sbb
or
jl
insb
dec
dec
lds
cmpsb
xchg
inc
test
pop
inc
insl
insl
add
mov
xchg
js
mov
ds
and
aad
rsm
add
call
incb
imul
pop
mov
push
in
mov
repnz
xchg
pop
iretw
aas
faddl
and
pushf
pcmpeqb
int3
ret
vpmacsdd
dec
xor
test
divb
add
sbb
xchg
and
dec
add
adc
sbb
gs
add
and
xchg
subl
cmp
push
fnstsw
and
pop
sbb
orl
pusha
cmpsb
cmp
cmc
sub
rcll
loope
adc
out
das
jns
in
sub
sbb
sbb
jl
jmp
popa
push
decb
sub
or
jl
adc
or
jmp
xor
push
xchg
iret
test
mov
movsl
add
add
inc
shlb
cmpsl
pop
dec
pop
lea
xchg
xchg
dec
adc
push
std
inc
scas
pushl
mov
clc
sub
dec
mov
in
testb
bound
cmp
clc
rclb
subb
mov
dec
sti
pusha
daa
fcmovbe
std
mov
inc
or
cmp
mov
or
fisubl
clc
or
arpl
pop
lret
mov
ja
jns
cmp
adc
add
aas
dec
imul
mov
push
sub
sbb
pop
fwait
cmpsb
mov
loop
pop
shl
push
sbb
rcrl
lods
xchg
sarb
jmp
outsb
enter
push
shl
pop
es
sbb
xchg
push
xor
hlt
mov
jno
and
ret
jp
add
inc
pop
cmp
inc
sbb
xchg
imul
pop
push
pop
out
fsubrl
test
test
or
jae
cmp
push
mov
sbb
cmp
lock
jae
or
jb
sbb
inc
fcomps
mov
mov
mov
mov
adc
ds
addr16
inc
int
or
int
out
xchg
in
sti
fstps
push
and
or
clc
xor
cmp
pop
popl
mov
test
push
out
add
aas
aad
push
xlat
enter
mov
lret
ss
mov
lods
mov
dec
fadds
nop
popa
mov
jmp
pop
push
aam
xchg
stc
roll
lcall
jecxz
testl
and
jae
scas
jo
cmp
mov
outsb
ja
ljmp
adcb
ljmp
dec
pop
enter
popa
and
xor
outsb
cmpsl
negb
mov
lahf
and
and
jp
negb
jecxz
cmp
insb
sub
in
xor
stos
dec
cmp
out
cmc
aas
mov
aas
scas
jmp
mov
lods
in
add
filds
mov
mov
mov
lret
mov
pop
dec
movsb
add
aaa
ss
mov
lahf
or
icebp
clc
arpl
xchg
fwait
sbb
sub
push
cmp
rcrl
cmp
int
and
je
loope
add
or
test
scas
jno
push
int3
icebp
xchg
in
xorl
outsl
lock
ja
mov
insl
xor
hlt
mov
jmp
sub
lods
adc
adc
ja
scas
dec
lret
push
cmp
lret
push
inc
pop
addr16
adc
ficoml
fs
test
es
adc
jle
cmp
jnp
into
les
bound
arpl
aam
sti
loop
and
arpl
jno
push
sbb
mov
test
inc
stos
sbb
push
jge
sub
cwtl
inc
and
inc
dec
mov
test
aad
fs
jno
cltd
or
out
pusha
pop
ret
mov
push
test
mov
scas
scas
cwtl
xor
aaa
inc
mov
mov
out
aam
pop
jp
lea
je
aam
ljmp
jp
jns
mov
sbb
addr16
jae
jno
ja
pop
add
std
es
adc
inc
push
cli
lahf
negl
pop
shlb
addr16
cmp
push
fwait
adc
rcl
mov
daa
xor
ljmp
popf
dec
test
cwtl
push
aam
repz
adc
cs
lret
adc
push
mov
into
incb
int3
cmp
jmp
out
sub
xor
clc
repz
jg
jge
sub
ja
mov
pop
lret
jg
cmp
stos
mov
adcb
bound
cmp
jnp
and
mov
add
mov
mov
sbb
int
push
ljmp
add
dec
mov
out
sub
bound
repnz
sub
loope
mov
inc
out
ret
hlt
inc
xchg
filds
mov
or
xor
insb
push
mov
push
xor
sbb
hlt
xor
mov
not
leave
cld
xor
mov
scas
mov
mov
xorl
xchg
pusha
idivl
mov
lcall
xor
mov
inc
mov
pop
cmp
test
jmp
mov
sahf
stos
jbe
push
loope
cmpsl
dec
notl
clc
lock
jecxz
das
mov
filds
lds
aas
lret
push
call
in
jmp
inc
jne
es
pop
push
ds
movsb
out
push
mov
sbb
ficompl
sub
mov
gs
adc
lret
or
ffreep
dec
loopne
test
pop
cltd
lock
int3
add
and
dec
movsb
sbb
jecxz
pop
sbb
cmpsb
and
pop
sbb
xor
repnz
repnz
or
sub
icebp
out
xor
lcall
xor
xor
push
loopne
push
dec
mov
sbb
and
xor
xchg
cltd
out
inc
jg
in
sub
leave
or
mov
lods
dec
into
pop
outsb
rclb
and
scas
inc
push
int
lahf
imul
xchg
cmp
xor
icebp
pushf
std
lods
mov
fstpl
in
mov
stos
mov
fwait
sbb
xchg
lods
bound
mov
fists
sub
sbb
mull
pop
sbb
cli
push
rclb
ljmp
not
xor
cmc
mov
adc
fs
stos
inc
in
es
sub
sub
sbb
daa
sahf
out
cmovnp
outsl
pop
fcompl
xchg
mov
or
jbe
push
pop
cli
adc
mov
xor
fs
outsl
sti
cmpl
scas
sbb
sub
mov
sub
int3
ret
and
shll
add
jmp
inc
mov
sub
pop
mov
movsb
xchg
sbb
sub
xor
xor
cwtl
loopne
mov
test
sbb
sbb
xor
or
jge
jle
xor
and
leave
repz
cmc
or
mov
popf
and
shrb
fwait
sbb
icebp
ss
inc
cmp
out
add
repnz
in
lock
add
sub
push
adc
je
negb
adc
cmp
jl
imul
sbb
out
mov
mov
mov
rorb
pop
dec
or
cmc
sbb
sbb
sbb
out
push
pop
es
push
comiss
imul
cmp
sti
loope
in
or
pusha
sbb
xor
xchg
test
aam
cmp
test
mov
lods
jp
popf
pop
es
push
dec
fldcw
or
mov
imul
push
sub
and
ds
adc
jnp
fsub
adc
xchg
push
pop
divl
or
cld
fwait
cli
dec
pop
cmpsb
mov
mov
sarb
lea
push
jb
mov
xchg
xor
push
push
hlt
into
mov
push
cwtl
shrb
pushf
icebp
push
das
sbb
cld
out
cld
jecxz
in
insl
cltd
fstpt
push
fsubrl
call
cli
jecxz
das
mov
imul
rep
jne
testl
std
inc
and
jle
mov
lock
jb
stos
xchg
pop
sarl
dec
mov
xlat
dec
out
cmc
and
lea
lods
test
pop
sbb
loopne
stc
mov
iret
negb
lret
fs
or
mov
lock
mov
jg
sub
sub
sub
fildl
cltd
data16
int
add
push
pop
jae
je
mov
mov
pop
lahf
jae
mov
cmpb
arpl
into
dec
xor
inc
loope
nop
or
xor
orb
jae
add
or
mov
or
or
or
push
xor
cmpsb
xor
jnp
cmp
stos
lcall
xchg
mov
fnsave
cltd
pop
jo
cltd
inc
in
shl
push
aas
das
pushf
xor
xchg
outsl
les
test
add
bound
aam
or
cwtl
aas
mov
adcl
and
fcmovne
add
dec
roll
mov
stc
test
jecxz
ljmp
sbb
das
mov
aad
pop
les
lret
aas
icebp
pop
adc
scas
iret
push
cs
imul
push
pop
mov
xorb
jno
test
and
sbb
insl
mov
xor
sub
int3
cmp
cltd
jbe
popf
push
sbb
movsb
push
cmc
jge
pop
or
sti
lret
mov
leave
ljmp
xchg
jl
aas
dec
jmp
push
inc
push
mov
leave
adc
in
das
inc
popa
outsb
outsb
pop
add
shrb
in
outsl
mov
out
xlat
xchg
mov
roll
dec
and
push
xchg
idivl
sbb
bound
mov
in
dec
mov
lock
dec
pop
fnsave
fs
mov
mov
int
lcall
cs
dec
sub
add
or
repz
inc
push
push
bound
movsl
sahf
jbe
es
and
mov
lahf
rolb
ret
fisubrl
add
dec
loope
mov
out
frstor
dec
in
pop
inc
cmp
jecxz
test
dec
sub
fldcw
icebp
cmpsl
inc
pop
push
pop
test
sti
std
xchg
dec
loopne
fisubrs
stos
push
sarb
loope
or
cmp
mov
sbb
mov
ret
xchg
pop
mov
scas
xchg
jecxz
or
fidivl
xchg
fimull
add
bound
dec
mov
test
xchg
andb
xor
arpl
inc
rcll
repz
and
push
lea
cs
loop
jg
js
cmp
cmp
inc
les
test
mov
cli
sub
sbb
mov
xchg
mov
les
pop
sbb
cmp
mov
es
xchg
std
aas
jne
aaa
fists
push
lods
xlat
cltd
insl
loopne
int3
sub
js
mov
addl
xchg
aad
std
sub
mov
add
jle
ss
or
cs
sbb
inc
push
fsubl
lods
xor
fpatan
ds
pop
add
stos
jbe
jo
inc
cld
sub
cmc
fisubrl
mov
mov
pop
add
out
sbb
sub
xor
dec
inc
and
mov
pop
adc
and
mov
ja
and
xchg
mov
xor
jmpw
mov
pop
insb
shr
dec
rcll
and
jns
hlt
shl
or
ljmp
lret
mov
mov
xorl
adc
movsb
negb
mov
outsl
cwtl
cs
out
cmp
divb
mov
aad
xchg
iret
sbb
adc
add
dec
pop
into
mov
dec
js
xchg
int
mov
push
sbb
scas
mulb
push
fsubrs
push
xor
dec
int3
cli
cmp
adc
lahf
push
mov
outsb
mull
mov
inc
xchg
jnp
mov
inc
into
lods
push
test
adc
addr16
sub
dec
data16
xchg
imul
cmp
dec
dec
mov
rcrb
dec
insl
mov
cmp
mov
ret
loopne
aaa
xchg
leave
insb
aad
mov
xor
mov
add
rcrb
sbb
lds
push
stc
xor
mov
lret
push
repz
sub
sahf
test
cmp
test
pusha
fbld
mov
sbb
jns
mov
js
inc
ss
loop
sbb
adc
pop
bound
pusha
std
popf
pop
rorl
js
inc
jbe
cmp
movsb
in
icebp
scas
fisubl
mov
jmp
xor
pop
lret
jmp
lds
and
mov
lea
sahf
xor
sahf
jbe
sbb
pusha
xlat
cld
ljmp
mov
jne
sub
xor
jmp
fcompl
xchg
std
dec
mov
daa
stc
cmp
pop
in
jl
inc
cmp
sub
add
ret
enter
add
ja
sbb
icebp
cmp
mov
stos
adc
outsb
mov
leave
jne
xor
ficomps
incl
and
adc
cmpsb
push
mov
rclb
mov
mov
cmpsl
loopne
andb
lods
jae
sti
js
xor
cmp
mov
in
xlat
pop
mov
cwtl
cli
cmp
arpl
es
pop
push
jp
roll
test
sub
imul
pop
adc
cmp
filds
maskmovq
testl
loope
fmuls
inc
mov
rcl
jo
xchg
imul
scas
jmp
and
jb
push
pop
nop
orl
push
mov
push
cmpsb
shlb
dec
push
lock
rorb
mov
jno
pusha
pushf
adc
push
xchg
mov
add
jb
sahf
aas
jns
test
cmp
and
fwait
ds
hlt
loopne
or
xchg
ss
icebp
sub
into
pop
push
lahf
push
mov
push
inc
enter
xchg
gs
adc
xchg
int
inc
pop
sbb
add
ret
and
shrl
loopne
pop
mov
mov
or
mov
rolb
sub
cwtl
cltd
sarl
iret
shr
lods
pop
pusha
inc
sub
jecxz
sub
outsb
hlt
push
jns
inc
inc
addr16
adc
adc
mov
mov
add
lret
out
adc
in
subb
push
out
pop
adc
pop
mov
sub
ss
ficomps
xchg
mov
rorb
bound
cmpsb
sbb
mov
adc
into
lret
xchg
push
sbb
stos
cmp
sub
ss
lock
mov
jnp
lahf
out
movsb
mov
cmp
mov
adc
decl
pop
xor
mov
xor
jmp
push
dec
lahf
cmp
into
jb
mov
mov
mov
in
fdivp
or
cltd
mov
cmpb
ss
jmp
movsl
push
cmp
adc
and
outsl
stc
ret
maxps
fildll
dec
out
inc
xchg
bound
inc
fcomi
mov
mov
mov
add
imul
cltd
mov
jp
in
icebp
jmp
test
mov
cmc
inc
sahf
jge
adc
and
test
sbb
pop
popa
mov
in
ljmp
in
test
pop
xor
stc
mov
in
cmpsb
mov
xor
arpl
mov
dec
dec
jmp
cmpsl
aas
push
fildl
push
jo
fs
es
inc
xor
rcll
ja
add
cmpsb
mov
push
iret
sub
repnz
mov
pop
stc
sub
dec
lret
fwait
in
sub
in
push
cmpsl
outsb
movsl
inc
lea
sarb
inc
imul
pop
imull
jns
mov
jbe
add
add
test
stc
jbe
shlb
and
enter
repnz
sub
lcall
lea
fcomps
add
pop
xchg
push
int3
ds
sti
adc
and
test
push
xchg
push
lcall
xor
add
push
inc
idiv
rorl
push
jne
add
mov
xchg
shlb
inc
mov
dec
mov
xchg
testl
push
and
mov
xor
xchg
cmpsb
aaa
adcb
in
xchg
push
out
outsb
jge
inc
rolb
mov
mov
cmp
adc
movsl
or
rcrb
dec
xor
hlt
dec
xor
add
int
push
and
call
push
inc
movsb
jae
lret
cli
push
int3
sbb
cmp
and
adcl
pop
add
inc
add
fildll
dec
stos
xchg
sub
mov
mov
cs
and
jge
fadds
adc
aam
add
cmpsl
mov
pop
and
gs
adc
cs
int
lcall
mov
or
gs
mov
jl
jle
push
add
mov
out
xchg
dec
pop
aas
arpl
jg
cmp
in
test
mov
ret
arpl
jmp
mov
and
inc
test
mov
rolb
add
push
lods
ljmp
jns
pushf
in
fs
adc
mov
pop
mov
mov
xchg
daa
js
dec
mov
xchg
add
call
jno
repnz
dec
andl
lret
xchg
push
aaa
les
cmp
jb
dec
jecxz
inc
icebp
mov
outsb
xchg
adc
adc
cli
test
sub
jle
inc
jnp,pn
mov
outsl
fwait
inc
test
xchg
icebp
daa
adc
out
mov
fmulp
nop
dec
mov
jle
out
inc
and
sti
into
fmulp
ss
mov
enter
mov
xchg
xchg
cmp
pop
jg
adcl
ss
pop
shrl
rcrb
sbb
jecxz
clc
mov
pushf
dec
test
lcall
clc
ja
jge
sbb
in
push
fdivp
or
or
fcmovbe
cld
dec
test
pop
lret
loopne
fwait
cmp
shlb
add
jno
or
add
xor
jb
and
out
pushf
mov
scas
je
imull
jl
test
call
cli
movsb
clc
jns
movsl
xor
fcoml
rcl
imul
dec
xchg
in
ret
in
xor
shl
cwtl
cld
mov
cmp
or
push
push
scas
xchg
push
xlat
pop
add
jbe
test
sub
pop
ljmp
xor
mov
and
loopne
sbb
outsb
sti
xor
jmp
adc
mov
leave
and
xchg
dec
in
add
mov
sahf
jns
push
push
addr16
push
adc
sar
sub
mov
data16
cmpsb
or
pop
es
orl
mov
or
mov
xchg
push
pushf
mov
testb
or
scas
dec
dec
sbbb
sub
add
insl
push
jne
dec
test
leave
xor
xor
xor
mov
dec
jge
mov
mov
sub
popf
repnz
cmp
add
repnz
mov
dec
ss
xor
adc
push
rcll
adc
and
enter
adc
push
push
in
dec
mov
adc
and
cmpsl
mov
iret
lods
mov
mov
push
pop
ret
shrl
movsl
outsb
sub
xchg
ds
cmp
adc
jns
lahf
scas
insb
inc
bound
cmpb
jl
ja
cmp
lods
pop
dec
or
add
lods
sbb
lea
addr16
iret
push
stos
xchg
dec
data16
aam
or
hlt
daa
inc
arpl
push
inc
int
add
xchg
movswl
ja
jne
mov
popa
sbb
inc
insb
mov
adc
adc
in
negb
andb
mov
clc
or
jecxz
les
js
mov
jmp
add
cmc
data16
xchg
lahf
xor
jns
lock
popa
push
sbb
mov
outsl
lock
fdivs
push
cmp
sbb
scas
push
push
scas
jno
mov
jecxz
movsb
xor
fcoml
popa
pop
repnz
jmp
jb
push
aas
int
mov
in
mov
mov
cs
mov
inc
out
addr16
mov
push
lea
sarb
test
xchg
dec
inc
mov
je
ds
je
fsts
fucom
idiv
jae
inc
loopne
rcrl
pusha
or
aam
pusha
mov
in
mov
inc
adc
leave
lea
dec
hlt
xor
cmp
call
rol
hlt
not
add
and
and
lcall
lret
and
ficoms
push
cmp
movsb
sbb
shll
rol
ret
in
mov
pop
insl
out
lcall
cmp
insb
xor
sbb
rclb
push
xchg
icebp
push
mov
ja
jnp
inc
push
push
aaa
fmull
int3
push
pushf
push
push
pop
pop
cmpsb
stc
int3
add
mov
test
sbb
xchg
ds
sahf
add
xchg
aaa
xor
inc
outsl
pop
push
shrl
mov
popw
dec
in
xlat
out
push
mov
fstcw
and
imul
aad
stc
add
push
aad
jo
mov
shlb
and
xchg
incb
jns
loop
mov
test
cmp
pusha
mov
mov
aas
repz
int
or
enter
push
pushf
icebp
hlt
jo
mov
jbe
xor
adc
fdivr
push
adc
ss
pop
mov
pop
fsubl
repz
jnp
cmp
fld
jae
ljmp
out
fiadds
sub
cmpsl
lea
xchg
notb
jl
insl
hlt
inc
fadds
cltd
lret
movl
mov
cmp
push
jae
lret
ret
ja
mov
add
out
sub
sub
inc
jge
lahf
jl
sarl
cmpl
repz
iret
mov
sub
sahf
cltd
insb
fldenv
ljmp
mov
ret
js
ret
arpl
lea
clc
xlat
arpl
pop
mov
mov
cmc
push
add
fnstenv
xor
mov
shrl
jae
push
cmpsl
lcall
sub
lds
adc
dec
rclb
dec
test
shlb
sub
movsl
in
lods
sbb
inc
cs
or
mov
packsswb
jo
std
cmp
mov
pop
shr
test
mov
sbb
es
sbb
add
fwait
add
lea
ret
popl
or
mov
loop
pop
mov
test
lods
enter
gs
inc
insb
addr16
jge
sbb
pop
aam
aad
scas
lods
call
subl
and
adc
in
or
push
dec
jae
fnstsw
ljmp
lods
insb
int
negb
push
test
fwait
jae
ret
cmp
movsl
pop
pop
lcall
sub
or
lahf
sbb
and
xchg
mov
cwtl
incl
xchg
adc
rorl
mov
repnz
mov
pop
inc
popa
lret
and
lea
inc
in
add
dec
data16
adc
iret
sahf
repnz
divl
add
mov
cmp
ret
jg
in
jge
cmp
loopne
mov
mov
testl
or
imul
nop
ret
jge
adc
lahf
and
int
fisttpl
inc
arpl
push
nop
xchg
lods
fildl
xlat
mov
arpl
adc
loopne
fidivl
add
dec
enter
mov
gs
or
dec
rorb
out
pop
xchg
cmp
aaa
mov
push
cmc
xchg
dec
jmp
push
mov
push
ficomps
mov
inc
insl
sub
mov
inc
jns
adc
out
les
mull
adc
lods
ds
jb
fs
aad
ljmp
push
decl
push
lock
test
jae
movsb
sub
jbe
inc
sub
fwait
mov
daa
mov
rolb
das
mov
dec
stos
std
jbe
mov
insb
jb
sbb
leave
pop
xor
jle
mov
lods
lds
sub
imul
sbb
les
lahf
iret
cmp
push
repz
mov
jmp
je
and
mov
lods
adc
sbbl
mov
outsl
mov
xor
sub
pop
aad
push
hlt
sarl
cld
xchg
or
out
adc
ja
sbb
cltd
and
cmp
xchg
shlb
aam
repnz
xorb
mov
inc
pop
enter
das
test
fucomip
jae
out
test
pop
insb
enter
xchg
push
fs
popa
out
cmp
lods
inc
popf
daa
mov
cmp
or
ja
imul
cmp
stos
cmpsb
fxch
das
int3
ret
cmp
and
jae
popf
popa
aaa
xchg
in
xchg
dec
sbb
fbstp
mov
fcoml
push
cli
or
sub
xorb
lret
das
je
and
push
jno
out
cltd
add
mov
dec
sbbb
pop
fsub
xlat
int
sbb
ja
gs
add
std
jns
add
jnp
push
rcrl
inc
scas
dec
pop
add
jbe
jae
pop
insl
pop
sbb
iret
xchg
mov
dec
or
rcl
push
leave
dec
pusha
cwtl
ret
pop
sub
inc
adc
xor
inc
jne
mov
adc
fbstp
pop
mov
pop
mov
or
and
jae
lods
mov
jl
xor
movsb
push
movsl
in
push
mov
mov
jg
sbb
add
cli
jl
jae
lea
aam
and
fcompl
mov
filds
xor
push
mov
mov
out
stos
rcr
xor
mov
xchg
and
inc
jg
nop
jnp
je
and
mov
fwait
lods
dec
repz
pusha
inc
jns
lock
push
bound
mov
lods
das
xlat
xchg
lea
les
and
aas
aad
sub
mov
push
xchg
mov
pop
leave
pop
test
cmp
mov
pusha
popl
and
in
push
popf
enter
jl
jg
mov
popa
pop
jp
or
push
lods
push
ret
rorl
lods
ret
jmp
push
das
imul
mov
mov
add
or
mov
int3
or
cmpsl
mov
jae
sub
mov
mov
dec
mov
shrb
pop
repz
cwtl
jne
aad
sbb
lahf
jl
fists
adc
sbb
cmp
out
nop
loop
pop
test
pushf
sub
and
ja
fildll
lcall
rcrl
ss
daa
jae
dec
pop
mov
je
mov
ret
push
repz
jg
pop
mov
aas
cmp
das
scas
jae
mov
sahf
adc
xchg
jmp
in
scas
jge
fs
and
adc
push
loop
and
in
or
test
pusha
popf
push
dec
jecxz
jbe
push
jbe
sti
and
mov
insl
jae
lods
dec
or
mov
shrl
and
inc
mov
xchg
mov
push
cld
xor
cmpsb
push
sbb
xchg
mov
out
idivb
mov
sub
repz
je
and
xlat
mov
sub
xor
and
in
xchg
das
add
cli
adc
sbb
bound
out
ds
cmpsl
sbb
push
dec
add
mov
stos
insb
insl
mov
shlb
sarl
dec
stos
adc
jge
notb
rcrb
stos
cmc
les
sub
xchg
dec
nop
imul
leave
sbb
add
std
stos
jmp
xchg
sub
mov
sbb
sbb
push
sbb
movsb
imul
jge
add
loopne
icebp
enter
push
add
xchg
ds
inc
mov
and
mov
ffree
dec
js
aaa
xchg
sbb
das
xchg
nop
test
mov
mov
pop
cmpsb
jg
pop
je
iret
adc
sub
outsl
pop
aas
inc
inc
outsl
sahf
mov
imul
test
lock
push
leave
mov
add
xor
push
and
and
subb
pop
testb
leave
mov
dec
test
inc
addr16
adc
pop
jmp
xchg
mov
leave
rcrb
mov
dec
and
mov
nop
mov
mov
jbe
inc
std
add
cmp
and
xchg
xor
popa
out
and
imul
jne
xchg
cmpsl
push
add
xchg
mov
pushf
int
pop
and
mov
test
push
inc
mov
mov
or
es
insl
test
outsl
popa
jae
cmpsb
stos
jle
adc
mov
dec
mov
dec
rcl
in
jnp
add
xlat
test
jbe
xor
movsl
sub
and
scas
mov
shlb
out
shlb
jne
mov
add
arpl
xchg
inc
sub
mov
ds
xor
sub
test
jno
sbb
std
es
add
int3
daa
testl
adc
cmp
fwait
sbb
push
push
mov
xchg
adc
jge
adc
jecxz
add
lret
mov
loopne
loope
fdivs
mov
iret
jl
stos
push
shrb
rol
sub
lahf
daa
or
or
xor
lock
das
and
shlb
and
js
xor
dec
pop
add
mov
jecxz
cmp
andl
xor
out
movsb
cmp
cli
fisttpl
cwtl
fcoml
test
icebp
jecxz
pop
mov
int3
data16
adc
cld
pop
adcb
xor
lods
les
pop
jnp
mov
inc
fildll
data16
pop
stos
cmp
ficompl
and
shl
adc
sbb
mov
das
clc
sbb
fbld
xor
xchg
xchg
lahf
jo
mov
inc
js
dec
in
pusha
divb
pop
or
sub
inc
aad
xchg
jl
insb
sub
je
fidivs
push
scas
les
pusha
sub
mov
add
dec
jp
hlt
or
fdivrl
jae
addr16
fdivr
sub
das
cmp
xchg
pop
lods
cmc
aad
jge
cmp
negb
sbb
lret
dec
pop
sahf
hlt
dec
fisttpl
shlb
xor
xor
dec
test
rcrl
sub
js
shlb
sbb
movsb
and
push
add
and
xor
rol
icebp
mov
stos
xchg
xor
insb
jnp
in
aaa
pop
jl
je
outsb
pop
mov
inc
mov
cld
cmp
sar
mov
dec
jge
mov
lea
pop
push
xchg
enter
das
dec
daa
mov
pop
lret
add
add
xor
shrb
mov
testl
or
push
sub
clc
add
push
es
add
test
int3
test
push
lahf
or
repnz
sbb
cmpsl
pop
es
add
dec
mov
mov
mov
cmpsb
mov
icebp
cmp
mov
adc
adc
jo
mov
fsubrl
cld
fcoms
inc
xchg
bound
shrl
cs
or
push
pop
lahf
push
or
mov
fdivrs
inc
rcl
add
lods
mov
loope
push
sub
in
daa
idiv
or
outsb
xor
pop
push
push
rclb
dec
adc
mov
cltd
rolb
testb
add
mov
aam
sbbl
xor
jae
test
inc
ficoms
sbb
or
in
push
pop
mov
fildll
xchg
in
dec
jo
imul
pop
or
xchg
jb
loop
popf
out
test
loope
and
ljmp
pop
mov
out
jnp
push
mov
shll
add
dec
loop
inc
inc
dec
ss
ficoms
jb
mov
sti
stos
push
ljmp
inc
push
popa
xchg
or
xchg
pop
and
jnp
shrl
lcall
mov
ja
fisubs
insl
repnz
stos
sarl
into
in
cmp
shl
add
lahf
lock
lret
clc
push
shl
movsb
dec
mov
fisubl
fisubs
mov
inc
call
icebp
push
pop
fisttps
jle
repnz
and
or
adc
mov
insl
xor
mov
lock
add
and
stos
addr16
inc
dec
aas
out
test
push
pop
lods
mov
iret
push
add
rclb
int3
xor
push
ret
inc
cmc
scas
mov
pop
sbb
out
cmp
sub
push
and
inc
hlt
fsubrp
call
cltd
aaa
cmc
loop
adc
jle
and
shrb
mov
lahf
maxps
push
jl
dec
jl
pop
adc
jne
and
mov
xchg
cwtl
sub
in
push
mov
bnd
sahf
mov
pop
xchg
cmp
es
neg
add
inc
mov
cmc
stos
inc
pushl
into
cmp
ja
jb
jecxz
mov
call
lret
sub
and
mov
pop
test
lret
mov
sub
mov
push
addr16
fmul
rorb
enter
sahf
cltd
push
in
mov
push
fpatan
mov
test
les
xchg
xorb
mov
imul
jl
imul
je
and
mulb
imul
jge
push
loopne
mov
bound
scas
lcall
movsl
and
pop
xchg
sub
sbb
andb
shrb
stos
mov
fcoms
cmp
loope
add
fnclex
fidivl
je
jmp
aam
js
in
aas
mov
or
jge
push
xor
push
xor
mov
sub
or
rcrl
fwait
es
arpl
aam
xlat
sub
push
sub
stos
arpl
pop
push
dec
test
enter
mov
out
sti
lock
adc
or
out
push
dec
pop
sbb
gs
aas
in
jl
outsb
or
hlt
xlat
pop
mov
repnz
arpl
daa
or
or
mov
ljmp
es
sbb
jae
mov
mov
jp
dec
idivb
xchg
daa
cli
cmc
mov
pop
incb
mov
or
pusha
adc
or
push
mov
ja
shll
xorb
out
xor
xlat
fisubl
cmc
push
cmpsl
cwtl
adc
test
cmp
push
mov
mov
mov
sub
adc
jne
push
ja
dec
fidivrs
xor
sbb
jnp
movsl
sub
mov
jp
or
mov
inc
and
sub
dec
xlat
ss
jmp
rcrl
xor
out
lock
int3
scas
lock
push
cmp
push
or
cmp
cmc
or
inc
test
sub
fucom
jo
cmpsb
push
repz
lods
leave
ljmp
bound
orb
sub
fidivs
add
fwait
mov
data16
jmp
mov
cmp
jns
sub
cs
cmp
mov
sbb
jecxz
adc
out
inc
lret
bound
push
push
cmc
out
lds
xor
fwait
jo
pusha
jae
shlb
pop
mov
in
mov
and
cltd
sarb
in
aam
pop
jo
negb
fucom
mov
pop
adc
inc
mov
sti
jle
jle
lock
fmuls
dec
addl
leave
add
add
push
testl
insl
int3
xor
outsl
es
test
imul
imul
scas
sbb
stos
push
test
ss
fwait
xlat
jo
and
ret
addr16
lahf
adc
cmp
jae
sbb
pushf
pop
xor
sub
gs
and
scas
dec
jo
ficompl
cmpb
clc
loopne
pop
movsb
mov
mov
enter
pop
jl
js
jle
rcrb
repz
popa
inc
mov
mov
test
rep
sbb
push
pop
xor
idiv
xchg
and
lea
mov
out
cmp
lcall
mov
inc
push
pop
jae
xchg
pop
insb
push
sbb
fsubr
jne
and
adc
scas
jb
sub
orb
add
shlb
icebp
popf
gs
mov
leave
inc
add
mov
xchg
sub
cltd
nop
icebp
lcall
popl
xchg
sub
mov
lahf
insl
push
push
lret
movsl
ret
inc
pop
inc
cmp
adc
dec
jb
sbb
xlat
mov
dec
inc
jecxz
call
add
movsb
add
lret
sahf
gs
ja
cmp
cmpsb
push
lock
adc
sub
imul
lret
mov
imul
adc
ds
jl
imul
inc
rolb
dec
out
push
jbe
movsb
push
push
loope
ss
sar
xchg
xor
pop
xor
scas
scas
mov
daa
pop
push
pusha
ret
cmpsb
iret
mov
sbb
movb
add
lock
inc
pop
lea
dec
jecxz
mov
loop
into
inc
xchg
shr
dec
popa
sahf
ja
lahf
arpl
jae
jle
mov
pop
jg
cmp
mov
or
add
adcl
popa
or
mov
and
cmpsb
jbe
mov
push
je
cmp
nopl
add
cmp
rcrl
or
add
inc
xor
outsl
stos
repz
dec
movsb
jge
jmp
ja
loop
mov
mov
xchg
call
ret
aam
popf
dec
mov
jle
shlb
imul
hlt
aam
ljmp
pop
popa
out
sub
test
inc
dec
xchg
xor
nop
push
outsb
outsl
fnstenv
or
ror
pop
aaa
lret
push
mov
lmsw
sbb
arpl
cmp
xchg
and
xchg
je
fwait
int3
repz
aam
and
inc
aam
or
adcb
leave
pusha
repnz
sub
xchg
shr
xor
fists
fwait
popa
mov
ljmp
int3
sub
lock
sub
pop
jb
addr16
jle
daa
or
int3
dec
mov
add
mov
jno
mov
in
ret
add
out
cmpsb
mov
outsl
inc
int3
pop
push
push
push
test
xchg
in
or
xlat
mov
test
outsl
fninit
sub
loop
cwtl
xor
ja
fs
shll
movl
in
or
xor
std
loopne
inc
cmc
outsb
xor
rcl
mov
inc
mov
testl
cmp
xlat
add
imul
adc
data16
adc
pop
cmc
dec
dec
push
mov
pusha
or
data16
stc
xor
in
push
jp
int3
popf
enter
aad
push
mov
xor
jno
popf
and
dec
add
les
fstps
out
and
sbb
loop
jns
sub
dec
por
cmc
subps
lods
lods
stos
xor
aam
out
lods
repz
mov
or
mov
les
or
sbb
outsb
jle
cmp
jle
inc
out
jmp
stos
sti
mov
dec
in
repnz
repnz
aaa
adc
mov
mov
testb
pop
mov
xchg
popf
sub
or
mov
and
fiaddl
push
and
jmp
push
jle
insl
xor
cmp
test
outsb
xor
sbb
jmp
fsubs
jo
out
cmp
adc
mov
loope
lock
ja
cmp
gs
sarl
addr16
pop
adc
fadds
jno
mov
mov
cmp
mov
push
adc
inc
insl
jg
dec
sbb
ds
stos
aas
mov
sbb
out
and
push
inc
ret
dec
mov
sbb
adc
xchg
cmp
sbb
xor
lods
aas
xor
jecxz
pop
push
ret
test
call
sub
sbb
sbb
sbb
push
mov
stc
push
jno
clc
mov
lods
std
push
cmp
and
mov
xor
sub
xchg
xchg
lret
xchg
inc
xor
negb
pop
and
and
shll
enter
lds
adc
mov
idivl
pop
xor
std
pop
pusha
outsl
mov
cmp
mov
pop
fsubs
sub
or
test
dec
adc
data16
or
dec
in
jae
daa
out
jl
and
mov
ljmp
sbb
mov
jmp
inc
test
xchg
clc
inc
je
and
ret
arpl
ret
push
mov
test
pop
mov
or
jp
out
jmp
pop
dec
ss
hlt
jb
push
into
push
insb
adc
sbb
xchg
push
out
jns,pn
outsl
push
xchg
push
add
push
cmc
mov
adc
push
sbb
loope
fisttpl
les
sub
push
insb
rolb
testl
add
insb
or
mov
cltd
test
push
and
imulb
xorb
test
cmp
movsl
js
mov
enter
out
push
sbb
jo
inc
fnsave
sub
popf
orb
mov
add
xorb
roll
or
adc
sbb
scas
cmpsl
iret
push
xor
jnp
clc
pop
cmp
xorl
push
inc
xor
push
pop
aas
aam
sbb
inc
push
xchg
adc
pusha
jg
jb
cltd
lock
aad
push
xchg
mov
pop
test
lahf
mov
jge
cmpsb
fs
roll
test
xchg
push
jb
inc
jb
mov
mov
pop
sub
daa
lods
jmp
repz
stc
adc
xchg
repz
mov
adc
pop
cs
jae
mov
pop
repnz
test
lock
dec
hlt
inc
pushf
ljmp
adc
mov
mov
cmp
scas
mov
or
sub
cltd
push
cld
xchg
or
pop
test
fwait
in
cmpsb
in
pop
setno
or
jns
nop
pop
pop
fucomp
stc
sbb
test
test
addr16
rorl
lcall
in
fwait
ret
mov
jb
inc
js
add
addr16
dec
rcll
into
cmc
xchg
roll
xor
pop
mov
mov
test
dec
insb
das
testb
cmp
push
ficompl
into
mov
test
andb
jge
dec
int
mov
cmc
xchg
rcll
jl
mov
aad
push
fildl
dec
movsl
adc
dec
jne
cli
mov
sub
je
test
mov
inc
hlt
fisubl
sbb
stos
xor
mov
jle
js
jo
je
in
mov
add
push
or
pop
xchg
hlt
pushf
adc
pop
loope
aaa
aas
fistpll
imul
fs
cmp
xchg
popa
inc
mov
jecxz
push
out
xor
push
wrmsr
sub
push
sahf
shll
dec
xbegin
fdivs
data16
jl
adc
rolb
clc
adc
sub
inc
test
repnz
push
sub
test
xchg
pop
je
movl
mov
pop
repnz
push
movsb
inc
add
push
ds
mov
sub
sub
repz
mov
adc
inc
fucomi
lods
mov
movb
fstpl
pushf
add
cwtl
scas
push
jle
inc
cmp
addr16
shlb
adc
arpl
xor
inc
add
mov
les
pusha
into
clc
icebp
scas
mov
das
cmovnp
jb
jp
push
sbb
scas
andl
adc
add
push
loope
cmp
cmp
or
mov
jmp
mov
leave
icebp
iret
jb
mov
test
cld
dec
cmp
push
push
rcrl
mov
ret
fidivs
push
mov
and
ss
jecxz
out
push
cli
aaa
in
and
into
fcmovbe
mov
andl
sbb
xlat
mov
ficompl
xchg
jno
enter
mov
repnz
fldcw
and
jmp
clc
push
loop
push
lcall
sbb
jg
cmp
data16
push
cmpsl
xor
outsl
mov
and
mov
call
mov
sub
cmp
pop
xor
in
andl
sbb
loope
ret
lea
icebp
jno
inc
xchg
mov
int3
jle
js
insb
outsb
add
mov
jo
mov
iret
mov
dec
or
mov
sbb
dec
xor
sbb
mov
loope
xor
filds
jbe
or
fwait
inc
dec
scas
lcall
outsl
push
mov
jp
push
xor
xchg
xor
mov
xor
xchg
gs
js
mov
lret
pop
hlt
inc
mov
mov
inc
push
hlt
loop
lret
push
mov
xchg
iret
dec
mov
shll
adc
add
and
xchg
inc
mov
inc
icebp
sbb
sbb
int3
addl
jmp
adc
push
ja
or
out
xchg
and
sbb
std
push
cmpsl
icebp
jnp
push
sub
push
hlt
repz
add
js
fcoml
mov
mov
jecxz
lds
pop
sti
or
push
cmc
rep
jo
mov
cmp
das
inc
dec
fisubrs
call
insl
or
shrl
std
imul
xor
mov
mov
ds
fwait
xor
roll
mov
in
inc
cmp
dec
and
lods
movb
inc
jns
pop
add
int
push
iret
jle
arpl
mov
xchg
dec
pop
pop
bnd
loop
xchg
fs
movsl
call
adc
mov
jbe
add
push
xor
sarb
cmc
aam
xor
xchg
icebp
add
aaa
test
sarl
sub
bound
lea
jne
mov
nop
xor
inc
sub
and
pusha
subl
inc
push
pop
insb
xor
cs
mov
mov
and
jnp
jmp
adcl
inc
aaa
jo
mov
mov
pop
push
mov
pop
mov
fnsave
aad
pop
pushf
mov
xlat
mov
scas
aad
xor
arpl
test
mov
mov
mov
lea
in
push
sub
xchg
sub
sub
add
lods
shrl
ret
incl
jno
add
lahf
sub
mov
mov
cmp
aaa
mov
add
cmc
jb
mov
push
jge
aaa
or
popa
aaa
cmp
popa
ss
add
sbb
mov
fcomi
jae
movl
sbb
outsb
js
aaa
add
aas
pop
int
test
and
call
mov
rorb
pop
ret
inc
cmpsl
mov
out
pop
sub
and
mov
dec
pushf
push
pop
adc
jle
adc
mov
inc
enter
jnp
xor
insb
fisttpl
pop
xor
sbb
dec
lea
jg
jns
orb
pop
push
inc
and
inc
in
mov
jle
or
mov
xor
mov
push
sub
sbb
adc
fwait
and
xor
jg
add
pushf
sub
add
or
mov
lods
icebp
lds
dec
push
add
cs
sub
xchg
aaa
mov
cmp
inc
xchg
sub
xor
cmc
or
mov
into
pop
popa
stos
pusha
test
stos
decb
rcl
sub
pop
shrb
iret
fdivr
jl
icebp
mov
int
push
int3
xchg
xor
lds
rorl
stos
loop
sub
add
std
scas
or
loop
adc
mov
fwait
and
lock
insb
sbb
xchg
and
xlat
cli
inc
push
jns
pop
jecxz
and
xchg
mov
out
cmp
dec
cwtl
cwtl
xor
mov
outsl
xlat
inc
sub
mov
xor
mov
cmc
pop
mov
push
xor
inc
shll
addr16
icebp
add
and
cwtl
push
push
mov
xor
push
mov
and
adc
jmp
out
fisttpll
mov
aad
mov
pop
ja
and
sub
mov
or
mov
fisttps
in
push
outsb
push
and
out
loope
sahf
jb
lret
jp
shrl
lret
je
rorb
xchg
fwait
imul
inc
je
jmp
mov
lods
pop
lret
jmp
pop
jge
and
imul
sub
icebp
mov
pop
mov
iret
xchg
shrb
je
adc
mov
push
sub
adc
popa
jnp
add
lock
push
or
add
out
hlt
lock
jns
fucomp
popf
mov
repz
pop
arpl
add
mov
nop
push
pop
insw
push
and
mov
int
stos
sub
xor
and
ss
pop
sbb
test
mov
stos
and
sub
push
aas
xor
sbbb
arpl
mov
mov
or
pop
sub
xlat
insl
int
pop
push
xchg
dec
push
mov
inc
dec
adc
lock
ficoms
mov
lods
or
cmp
shlb
test
les
fwait
out
adc
lock
push
adc
call
pop
mov
sub
cmp
hlt
test
or
mov
mov
and
or
aad
mov
adc
inc
testl
or
mov
int3
push
mov
mov
jg
cld
int
in
push
jg
jge
inc
jmp
pop
cli
neg
or
outsb
pusha
sub
scas
les
adc
out
push
repz
mov
cld
cmp
in
xor
fisubl
imul
es
rcrl
sub
add
paddw
out
dec
or
pop
inc
mov
outsb
daa
push
dec
loopne
push
int3
inc
testb
fimull
fmull
fldcw
and
add
xor
mov
inc
sahf
repnz
and
xor
aaa
mov
adc
loope
jno
or
ret
clc
add
es
xorb
pop
imul
outsl
inc
je
jecxz
jns
or
imul
jmp
mov
repnz
and
jb
scas
cmp
mov
sub
inc
adc
arpl
xchg
testb
ret
cmp
xchg
xor
jp
inc
push
mov
xor
xlat
or
cmovbe
mov
fmull
arpl
jns
adc
loope
xchg
out
inc
push
add
lods
sub
cltd
cmppd
lcall
pop
mov
add
add
bound
dec
jp
jae
sbb
sub
imul
xchg
cmp
iret
pop
jns
clc
mov
jne
scas
movsb
mov
cld
jle
cltd
into
iret
mov
jl
dec
lods
adc
rcrb
int3
in
or
push
add
mov
scas
or
movb
test
jg
sub
icebp
xchg
jl
pop
loope
insl
pop
mov
mov
rolb
in
popf
inc
pop
fisubs
jl
cwtl
and
push
bound
andl
dec
add
xchg
inc
xor
add
in
mov
push
shll
outsb
not
outsl
pop
aas
pop
in
dec
xlat
fs
sub
jne
lea
or
mov
bound
add
decl
xor
xor
or
int
pop
mov
lods
int
mov
imul
scas
cltd
mov
pop
xor
xchg
mov
push
jle
jo
hlt
stc
or
adc
cli
cmp
lahf
xor
xchg
fcmovnu
add
cld
sti
mov
mov
addr16
bound
inc
ljmp
mov
xchg
mov
daa
dec
mov
pop
jnp
rclb
shlb
ja
sbb
cmp
mov
sub
sahf
lret
fs
pop
pop
aam
pop
arpl
dec
jnp
adcl
adc
xlat
jno
lods
jmp
xor
jns
or
or
ror
movb
stos
rcrb
lea
loopne
mov
cli
xor
icebp
shlb
cmpsl
and
xchg
mov
push
inc
jp
add
mov
in
sub
jnp
pop
cmpsl
int3
je
jmp
cltd
cmpsl
cltd
adc
cli
arpl
nop
popf
stc
rcl
loopne
jg
movsl
insl
push
push
mov
incl
sbb
pop
jp
test
ret
test
mov
rcl
insl
leave
and
stc
fistl
fs
cli
popa
xchg
and
adc
cli
stos
mov
mov
ds
push
sti
jecxz
add
mov
lret
test
push
in
inc
ret
cmpl
sbb
fstp
mov
movl
sbb
stc
icebp
sti
lock
fwait
cmp
std
and
popf
jmp
dec
sbb
orb
js
outsl
inc
in
and
fwait
out
mov
xor
lds
fistpll
fimull
lods
pop
push
sub
fldl
jo
mov
push
decb
stc
sub
pop
rorb
cmpsb
movswl
and
push
sbb
mov
fwait
mov
mov
fisubs
add
stos
in
fldln2
loopne
out
pop
pop
loop
int3
pop
nop
jl
add
repz
stos
mov
inc
bound
adc
subl
push
cmp
jmp
mov
ss
add
rcrb
insl
xlat
shrb
mov
sar
inc
rcr
inc
lcall
push
xor
pop
arpl
pop
pop
sub
dec
push
jle
push
cmp
lcall
push
loope
enter
sub
out
rcrl
push
mov
aam
inc
or
dec
stos
mov
cmp
aaa
aaa
icebp
inc
lcall
lds
sub
leave
das
pop
pop
adc
dec
test
outsl
fsubs
cmp
nop
push
pop
lds
movl
loop
push
add
adc
data16
test
mov
xchg
pop
sub
push
add
cmp
iret
fnstenv
stos
test
rorb
dec
aas
rcrl
mov
bound
inc
ret
les
je
inc
push
mov
dec
push
sub
rclb
jp
pop
roll
ret
in
out
test
dec
and
mov
mov
stc
sbb
psrlq
and
idivb
addr16
std
xchg
mov
jno
ret
stc
cwtl
into
hlt
filds
pop
pop
arpl
ror
lods
sub
push
jge
fadd
and
pop
in
sub
jle
cmp
das
xlat
setnp
movsb
test
out
mov
or
pop
xchg
mov
mov
gs
cmp
data16
dec
movsb
jo
adc
addb
clc
push
add
push
or
adc
shrb
iret
jmp
dec
pop
shrb
sar
std
adc
and
int
sbb
mov
test
mov
cltd
mov
test
pop
xlat
add
mov
adc
inc
cmpsl
fisubs
ds
test
jmp
pusha
xor
int3
mov
and
inc
outsl
outsb
dec
std
jae
pop
pop
das
mov
inc
xchg
std
sbb
jb
pop
mov
dec
sub
mov
stos
push
aas
xchg
fnstenv
or
push
pushf
std
sbb
jge
dec
or
pop
sahf
add
xor
and
sbb
dec
cmp
imul
xchg
sub
or
and
std
shrl
pop
dec
mov
mov
int
and
xor
roll
adc
mov
push
lods
adc
mov
pop
pop
dec
push
call
pop
xor
sbb
iret
les
aad
and
jns
ljmp
mov
sub
out
loope
push
fcoms
inc
mov
cmp
xchg
gs
sbb
ljmp
mov
cmp
mov
cmp
xorl
ds
and
cmpsb
pop
xchg
and
sub
mov
sbb
int3
or
jge
mov
js
cmp
jmp
jecxz
add
ds
iret
test
fsubs
aas
push
cli
loope
adc
popa
fsubs
hlt
imul
pop
push
and
out
jns
dec
lret
sahf
mov
push
rorl
inc
les
enter
mov
xor
dec
ljmp
push
lods
testb
lock
lcall
add
jne
cli
dec
mov
mov
aas
stos
xor
cltd
inc
icebp
sub
sbb
push
xchg
pushf
jecxz
add
outsb
jl
inc
imul
frstor
test
jmp
outsb
aas
xchg
inc
cmp
inc
cmpsl
inc
adc
push
call
fisttps
cmpsl
neg
je
mov
cwtl
push
pop
cwtl
les
cmpsb
popf
out
je
sub
inc
sarb
pop
xorl
pop
adc
or
leave
jle
push
inc
pusha
dec
pop
mov
mov
ret
push
fstl
icebp
mov
lods
xchg
inc
mov
pop
lds
faddl
mov
xor
enter
mov
test
pop
sub
adc
lahf
and
or
or
sub
test
pop
dec
in
add
fidivl
push
out
aad
in
sbb
pop
add
jbe
adc
xor
cmp
adc
mov
les
ret
xor
xchg
fwait
popa
and
inc
aaa
movsl
dec
addr16
xchg
xchg
add
push
rol
jnp,pt
jo
movsl
mov
mov
hlt
mov
fwait
cltd
pop
jne
push
push
jo
mov
je
mov
cmp
xchg
or
add
cwtl
push
movsb
mov
imul
mov
mov
js
jb
enter
inc
pop
addr16
pop
nop
xchg
push
pop
inc
cmp
aam
xchg
add
in
pop
or
inc
out
jnp
xchg
xchg
das
sub
push
fisubl
jge
sbb
sub
mov
sbb
out
popa
or
add
xchg
ja
sbb
les
daa
push
leave
dec
fidivrs
mov
out
lret
sarb
push
inc
pop
arpl
mov
clc
add
add
cmp
sbb
inc
popf
xchg
daa
lock
inc
cmp
mov
or
xor
gs
jno
repz
bound
pop
cmp
cwtl
sbb
lods
xchg
int3
jl
xchg
dec
dec
ror
idivl
fistpl
aam
in
leave
mov
test
mov
insb
in
add
repz
dec
push
sbb
adc
xor
sub
test
dec
inc
sub
cmp
adc
in
daa
add
jnp
xchg
int
cltd
sbb
fs
mov
aam
sbb
ret
fucom
lock
sahf
dec
cmp
push
ror
mov
xorb
jp
out
int3
cmc
scas
mov
jae
dec
sahf
inc
pop
dec
fstp
pop
scas
mov
out
mov
xchg
and
mov
fnstcw
fildl
jle
loop
testb
and
mov
ret
mov
pop
nop
inc
push
cmp
mov
into
lahf
in
mov
mov
adc
cmpsl
fwait
jg
xchg
jno
jp
ficoml
lahf
in
mov
pop
push
repnz
into
inc
fimuls
dec
lock
add
or
fldl
inc
ret
or
mov
sbb
out
cltd
add
les
push
or
decl
mov
loopne
das
or
push
mov
aaa
dec
dec
add
xchg
inc
cwtl
mov
std
jne
pop
dec
ss
push
stos
jl
loop
push
mov
push
ficomps
mov
arpl
es
stc
inc
sub
cmp
jg
sbb
data16
call
scas
mov
dec
cmc
in
icebp
imul
xor
xchg
pusha
std
and
mov
pop
xor
cmp
out
rcrl
or
fdivrl
leave
sbb
add
mov
jg
outsl
mov
imul
xchg
xor
mov
xchg
movsl
push
and
sub
and
jns
sub
push
out
aam
pop
cmp
mov
cli
into
dec
and
push
inc
push
mov
jns
push
insb
pop
scas
and
imul
dec
add
pop
test
pop
test
mov
sbb
mov
and
dec
out
sti
mov
inc
and
push
lock
sbb
stos
outsl
in
dec
push
pusha
or
mov
fsub
pushf
out
jno
dec
mov
adc
dec
cli
sub
or
lods
scas
sbb
pop
jne
jmp
push
push
fsub
pushf
movsb
mov
jnp
fdivl
mov
hlt
repnz
outsl
lods
inc
xchg
mov
dec
inc
pop
fdivrl
movsb
jle
cmpsb
popa
dec
sbb
sub
push
xchg
inc
inc
test
addr16
push
mov
imul
xlat
outsb
push
das
jmp
test
cmp
or
lahf
enter
ret
jb
inc
push
mov
lret
ljmp
rcrb
jae
push
sti
jae
aam
ret
aaa
fldcw
pop
push
je
fisubl
imul
sbb
aas
inc
and
cmp
jp
lea
test
or
int3
mov
push
shl
std
lahf
mov
aam
ds
and
rclb
xchg
or
xor
lret
jmp
mov
xor
test
mov
addr16
pop
adc
scas
shlb
xor
jp
or
lods
mov
mov
les
add
xor
xchg
cmp
enter
sub
es
jmp
add
mov
mov
in
lock
rclb
cmp
lret
repnz
sub
cmpsb
jns
sub
xor
adc
and
push
mov
add
movsl
pop
andb
xor
adc
push
data16
loope
mov
mov
inc
sti
xchg
out
sbb
mov
rclb
pmuludq
mov
sti
ret
lcall
sar
sbbl
repnz
inc
test
adc
ss
popa
mov
imul
test
in
ret
data16
nop
jnp
mov
popa
fistpll
repnz
mov
clc
pop
arpl
lds
pop
jmp
mov
add
xchg
and
pop
xchg
sarl
movsb
dec
dec
sub
sub
xor
mov
loope
inc
xchg
ss
lret
rclb
push
mov
in
jecxz
lock
add
iret
push
das
stos
xor
cmpsl
cmp
rorb
test
insl
es
jne
inc
arpl
bound
insl
dec
add
cli
scas
test
aaa
cmpsl
xorb
lods
cld
cmp
jnp
jbe
dec
shll
mov
sub
ret
jnp
aas
icebp
mov
mov
shrl
clc
jns
xor
jmp
xchg
test
shlb
xchg
mov
test
fisttpll
sbb
pusha
out
daa
test
pusha
movsb
int3
movsl
insl
fadd
fidivl
jno
loop
mov
pop
nop
add
fists
dec
cmpsb
ret
stos
add
xor
dec
mov
cmpsl
insl
insl
fimuls
out
push
lds
movsb
xchg
cmp
sbb
xchg
mov
xchg
stc
adc
push
mov
pop
addl
icebp
cmp
aam
xchg
mov
rclb
push
xchg
mulps
jno
push
test
pop
incl
pusha
jle
popa
into
sbb
push
mov
arpl
mov
mov
ficoml
mov
jne
lcall
aas
cmp
cmp
hlt
push
ss
in
add
xchg
iret
testb
lods
xorb
push
inc
dec
int
xchg
xchg
sub
fistps
inc
fwait
pop
movsl
inc
cmpsl
mov
sti
adc
sahf
nop
pushf
repz
dec
jp
bound
movsb
stos
outsb
pop
or
arpl
js
mov
sahf
jno
ja
call
mov
xchg
mov
xchg
jmp
fcoms
push
in
movsb
xor
movsl
push
add
sahf
push
repnz
fs
movl
push
cld
mov
lea
daa
or
xchg
test
mov
and
pop
dec
mov
adc
jno
xchg
cltd
push
insb
sub
sti
adc
mov
xchg
jg
dec
loopne
sbb
jp
aam
ret
rcrl
xor
sti
jbe
inc
fs
sub
ljmp
push
js
add
jnp
push
pop
mov
push
pop
xchg
adc
and
lahf
insl
idivb
cltd
and
jns
loop
sti
add
nop
dec
jo
mov
loop
or
dec
fildll
sbb
imulb
push
ja
jecxz
scas
sti
pushf
dec
gs
add
icebp
xor
or
adc
repz
or
lods
cmp
inc
mov
xor
adc
sti
mov
mov
repz
insl
xchg
pop
add
scas
imul
sub
xor
inc
jge
std
jno
mov
or
push
push
ret
cmpsb
repz
loope
mov
sub
fsub
pushf
sub
mov
push
dec
dec
pop
int
inc
push
in
push
sub
pop
mov
and
sub
xor
sbb
lret
xor
or
pop
mov
jecxz
or
cmc
arpl
xchg
fidivl
mov
inc
fcoms
pop
cwtl
adc
outsl
sbb
scas
out
fstl
xchg
push
repz
inc
cwtl
sbb
gs
jle
add
xor
jge
xchg
aad
sub
jge
pop
jge
pop
mov
xchg
lahf
xor
ja
fs
dec
js
push
xchg
into
push
sub
xor
cli
mov
pop
das
sarl
and
push
ja
xchg
shll
lods
push
xor
sahf
pop
sub
cmp
or
je
mov
test
mov
ljmp
or
addr16
or
and
ss
cmp
jmp
or
push
push
adc
mov
insl
sbb
addl
dec
inc
or
loope
cwtl
iret
dec
cmp
jge
mov
sub
pop
sbb
ret
mov
add
cmp
std
pushf
test
push
or
aad
dec
pop
call
adc
stc
enter
decb
ret
sarl
jno
adcl
or
xchg
insl
dec
subl
xchg
in
aas
push
sbb
sub
mov
jge
sub
xchg
xlat
mov
or
mov
xchg
push
imul
dec
jle
adc
cli
sti
out
push
dec
stc
inc
xor
rcr
dec
mov
bound
push
gs
lods
mov
adc
mov
and
xchg
js
pusha
cmc
iret
push
add
or
xchg
sbb
ror
xchg
jne
jge
data16
daa
xor
lcall
aas
lea
cltd
xor
outsb
xor
movsl
lods
dec
sarb
fcompl
pop
cli
sbb
scas
mov
xor
insb
inc
cmc
movsb
adc
adc
out
jne
xor
ds
pusha
cmpsb
or
mov
sbb
xor
push
pop
fisubs
mov
inc
cmp
pop
fmull
lret
data16
mov
sub
cmp
mov
stc
rcl
adc
dec
sbb
adc
mov
jne
push
sbb
xchg
lods
out
inc
out
inc
popa
ror
jge
or
clc
xor
icebp
in
inc
aaa
dec
in
int3
movsl
sbb
repz
movsl
push
inc
mov
leave
pop
cld
fcoml
lea
xchg
mov
scas
idiv
clc
sarl
stos
pop
inc
js
arpl
sbb
jns
inc
test
sahf
into
cmp
orl
sub
xchg
out
xchg
mov
int3
lret
lods
mov
out
xchg
and
xchg
jno
lock
push
jle
mov
fsubl
dec
data16
cmp
adc
test
rorb
test
das
push
js
or
in
xor
mov
outsb
je
adc
jno
ss
addr16
nop
xor
bound
jae
mov
gs
repz
pop
pop
or
data16
jge
les
mov
or
lahf
loope
inc
stos
jb
bnd
fcom
push
divb
andb
into
popf
push
gs
loop
mov
xor
or
mov
lret
lahf
addr16
add
and
inc
mov
in
cmc
test
les
sbb
ret
cs
cmp
push
cld
adc
test
mov
fcoms
pop
lahf
aaa
cmp
mov
inc
les
sub
retw
lcall
lcall
test
push
mov
push
push
test
jo
jg
sbb
iret
test
push
pop
subl
pop
hlt
inc
push
push
lcall
sub
jns
sbb
pop
les
nop
and
hlt
daa
rcrl
or
pop
push
and
and
push
test
arpl
les
push
cwtl
mov
mov
fldt
add
inc
frstor
and
sbb
dec
inc
push
xchg
fldenv
lahf
add
dec
in
icebp
int3
xchg
sub
jl
repz
sub
push
dec
xor
out
sub
mov
inc
dec
ljmp
outsb
cmp
push
std
sub
insb
sub
mov
cmpsb
push
stc
in
dec
nop
push
adc
divb
outsb
test
jge
inc
xchg
pop
push
stos
inc
push
mov
cmp
mov
xchg
sub
inc
sbb
add
inc
sub
aaa
shlb
pop
xor
les
mov
push
pop
pop
repnz
sub
out
mov
fisubl
popf
sbb
cmp
imul
fcomps
lods
jle
xor
mov
cli
lret
pop
daa
sub
xor
ljmp
ljmp
mov
pop
and
cmpsl
or
adc
imul
sub
jnp
popf
adc
add
push
mov
push
sbb
push
sub
inc
popa
and
ss
mov
out
int
cmp
notb
clc
fisttpll
cltd
cld
jmp
push
mov
sbb
mov
mov
mov
mov
dec
mov
and
pop
test
jnp
cwtl
sti
cltd
je
rorb
xchg
clc
shl
in
ljmp
jae
push
push
sbb
xchg
mov
mov
cmovno
or
xchg
cli
or
push
mov
mov
cmp
int3
out
cmp
leave
stos
dec
cmc
add
lods
test
movsl
std
repz
lock
lock
push
sub
xor
fnsave
xor
enter
mov
cltd
pop
js
ror
sbb
pop
lret
fcomip
out
pop
mov
inc
lahf
pop
test
pop
cli
and
xor
jno
mull
xchg
in
popa
out
push
jae
inc
shr
jmp
movsl
rcr
fimull
sahf
add
pop
add
ficompl
pop
inc
pop
or
and
push
pop
shl
out
jb
jne
cli
stos
lds
imul
adc
or
cli
daa
ret
push
iret
xchg
pop
popa
xor
mov
ret
js
rcrb
scas
js
imul
loope
cld
dec
jb
jb
pop
ffreep
jg
jb
xchg
in
fadd
jb
mov
fsubrs
fistpll
jmp
mov
mov
add
loope
arpl
and
fs
hlt
push
cmpsb
addr16
jle
insl
repnz
mov
scas
sub
sub
in
push
test
orl
pcmpeqd
cmc
sbb
imul
jb
mov
aas
dec
sbbl
movsl
inc
adc
mov
push
out
jne
loopne
inc
mov
lds
rclb
push
mov
jg
lods
scas
pop
xchg
and
ret
adc
xchg
jmp
mov
pop
push
ds
push
jnp
sub
push
in
rclb
pop
jbe
push
jg
jp
push
dec
lret
lret
mov
push
stc
sahf
xlat
outsl
adc
xor
sahf
add
stc
cmp
or
jno
adc
jno
push
inc
or
int
jo
lahf
jnp
fimuls
adc
in
push
xchg
clc
jo
pop
test
sub
out
ret
mov
leave
pop
pop
or
test
and
sbb
and
or
leave
mov
in
rcrl
pop
in
andl
pop
mov
arpl
imul
test
sbbl
imul
fiadds
movsl
sbb
mov
jnp
pop
lods
movsb
aam
dec
cmp
inc
out
inc
imul
dec
mov
xor
mov
leave
pop
add
rcll
imul
nop
out
add
aaa
push
les
je
adcb
or
adcb
notb
addl
xchg
sub
int3
mov
and
out
dec
fwait
std
sbb
or
xor
adc
jbe
stos
and
lods
jmp
mov
sbb
adcl
lea
mov
das
mov
jae
xchg
ret
and
push
push
dec
mov
jge
cmc
push
dec
cmpsb
dec
lock
mov
mov
icebp
push
jns
lea
in
faddl
ja
jle
inc
popa
and
inc
mov
fcoml
mov
xor
cmp
push
push
jne
push
pop
mov
daa
das
icebp
lds
xchg
fwait
sub
sbb
xor
cmp
cmp
pop
loop
movsl
or
fs
lahf
cld
cltd
adc
aad
test
popf
jo
int
in
jo
imul
aad
push
or
xchg
pop
mov
repz
push
xchg
cltd
pop
cmp
in
push
dec
xchg
inc
hlt
mov
sbbl
jo
into
jle
pushw
cltd
jnp
mov
add
out
fildl
sub
push
data16
mov
add
repnz
lock
arpl
and
inc
sub
mov
in
xor
pop
cld
lahf
pushf
add
sub
pop
mov
and
xchg
push
mov
insl
jne
mov
aad
stos
faddp
repz
mov
add
push
or
jns
das
mov
or
pop
pop
xchg
jae
xor
rcl
and
out
ret
jp
lret
divb
enter
mov
aaa
push
xchg
out
cli
ljmp
jmp
mov
mov
into
les
or
inc
push
inc
out
adc
ret
or
aad
pop
jo
add
into
sub
rcll
jae
fs
icebp
orl
jge
cmpsb
cwtl
cwtl
or
pop
add
or
pusha
mov
nop
pop
mov
or
jmp
popa
xorl
cmp
cmpsb
and
sbb
pop
cmc
jg
lods
lea
inc
clc
aad
mov
mov
pop
xchg
push
pop
push
and
popf
scas
or
mov
cmp
and
sbb
cmp
push
cmc
test
fmull
sbbl
sbb
movsb
jns
or
or
ret
push
fsub
imull
push
pop
ret
mov
lods
lods
ljmp
mov
cmp
das
add
dec
xor
loop
dec
dec
movsl
add
adc
js
mov
jae
sbb
pop
int3
inc
nop
dec
es
dec
lea
lret
mov
mov
aam
movsb
pop
fildll
idivb
mov
mov
cltd
mov
pop
popf
shufps
rclb
jmp
mov
push
inc
out
das
fs
sbb
mov
decl
fdivl
adc
cmpl
scas
xchg
gs
insl
dec
xchg
adc
xor
insb
xor
outsl
push
push
stc
in
cmc
sub
clc
orl
cmp
or
push
inc
stos
and
shrb
je
adcb
mov
dec
mov
fidivs
push
aad
inc
idivl
cpuid
or
movsl
scas
mov
jae
and
aaa
xor
aad
into
mov
testb
lcall
jne
xchg
inc
push
and
pop
xor
or
out
fiaddl
push
mov
lea
adc
ljmp
cli
mov
imul
pop
loope
cmp
je
out
push
test
cmp
fiaddl
sbb
lret
inc
stc
pop
cmp
add
xchg
push
mov
icebp
mov
or
leave
fnstcw
jo
xor
pop
push
test
outsl
push
ss
repnz
jo
xchg
sbb
rclb
out
or
add
inc
and
stos
cs
popf
and
lahf
xchg
sbb
sub
movsl
es
add
xchg
test
das
xor
jp
dec
and
loopne
in
leave
inc
or
repnz
lcall
adc
outsb
xchg
sub
sub
out
dec
lret
out
js
test
adc
push
or
fucomi
or
nop
sub
sub
pop
push
ss
imul
cmc
mov
stc
rcl
mov
jnp
cmp
inc
xor
cmp
sub
popl
in
imul
or
or
mov
mov
jmp
outsl
and
pop
dec
sub
pop
mov
cmp
xchg
pushf
addr16
adc
mov
push
dec
mov
repz
xchg
push
sbb
subb
mov
jae
fsubrl
js
or
inc
adc
add
jle
add
add
mov
call
sub
push
test
fwait
adc
cmp
mov
dec
cmp
call
test
ljmp
lods
add
cmp
lods
lahf
add
push
push
rclb
leave
pop
ret
addr16
push
faddp
fsubrl
lods
pop
mov
push
cltd
inc
jns
cmpsl
sub
fdivrl
test
gs
cmp
sbb
sbb
pushf
mov
dec
xchg
test
loop
jle
in
and
enter
push
insl
aaa
and
ljmp
mov
jge
jmp
cmp
mov
add
add
cmpsb
mov
adc
cmpsl
ja
jmp
cli
rep
fwait
std
xchg
lret
xor
mov
mov
and
push
xchg
push
xor
cld
mov
fnstcw
mov
addb
or
cmpsb
shll
cmpsb
int
mov
mov
xchg
rcl
mov
lds
jns
add
xchg
das
xchg
enter
push
imul
jns
aam
pop
out
adc
int3
push
inc
adc
push
sub
insb
fwait
shl
mov
ret
cltd
into
or
jl
mov
std
mov
push
and
pop
cld
inc
push
stos
nop
iret
add
jo
mov
outsl
rorl
js
cmpl
sbb
nop
pop
scas
stos
cmp
xchg
rcr
adc
mov
sahf
cmpsb
scas
or
mov
test
jecxz
jo
movsb
gs
loope
lea
xor
enter
mov
int
cmp
dec
fdivr
lods
adc
jns
ljmp
mov
inc
fwait
cmp
push
xchg
mov
adc
push
rcrl
inc
xor
add
push
loop
popl
cld
call
js
inc
sub
pop
adc
mov
scas
enter
add
rcll
inc
cmpsb
dec
sub
xchg
mov
sbb
sub
test
test
iret
outsb
cmc
stos
lea
das
pop
data16
xchg
lret
xor
xor
leave
pop
int
cmp
and
mov
dec
lods
mov
add
push
fidivs
xchg
mov
jl
inc
filds
push
ret
pop
imul
in
xor
mov
movsl
push
mov
lcall
fdivs
testb
mov
push
adc
jae
xorb
fwait
mov
xorb
sbb
or
jne
lock
nop
cltd
add
xchg
cmpb
cmpsb
jne
xlat
pusha
cmc
lahf
sub
enter
cmp
inc
pop
test
xlat
scas
xchg
jmp
push
jns
mov
loope
jmp
dec
or
int3
les
out
and
cmpsb
jmp
push
sub
jg
stos
jmp
jmp
add
mov
bound
icebp
fsub
andl
popf
negb
or
repnz
pop
pop
or
xor
out
mov
sub
push
adc
or
and
je
inc
mov
shll
mov
cwtl
and
in
lods
lds
mov
jne
std
daa
and
cmp
push
andb
cmpsl
fwait
inc
hlt
sbb
std
filds
xchg
gs
notl
int
mov
mov
cmc
push
lcall
mov
adc
mov
jo
sbb
fs
lods
add
dec
out
movsl
hlt
negl
add
dec
adc
mov
push
jnp
scas
ror
lock
movsb
xchg
fidivrl
leave
icebp
cs
jmp
dec
dec
push
rclb
daa
xchg
ljmp
xchg
mov
xor
enter
inc
test
outsl
outsb
sub
repz
mov
mov
xchg
mov
pushf
push
jns
inc
cmp
inc
add
push
imul
jg
adc
adc
je
lret
inc
or
dec
in
into
lea
xor
mov
push
loopne
add
ljmp
cwtl
dec
jecxz
mov
push
push
xchg
xchg
inc
dec
lahf
add
jno
aam
out
sbb
sub
or
cld
mov
movsl
fs
pop
push
inc
push
fadds
jmp
ljmp
xchg
test
xor
xor
lea
shll
mov
aam
add
cmp
and
testb
jecxz
cs
xchg
imul
lds
test
adcl
xor
add
pop
stos
inc
and
cmp
cld
jno
movsl
pop
xchg
cmp
loopne
push
cld
bound
insb
or
shlb
clc
adc
adc
inc
test
fidivrs
ja
mov
mov
rclb
cs
outsl
push
shl
mov
adc
stc
mov
fstpt
je
frstor
xorb
or
lret
inc
shll
lods
test
or
sub
notl
or
cli
mov
test
outsl
mov
movsl
cmp
cmpsl
sbbb
sbb
sarl
pop
inc
inc
imul
lods
jmp
ljmp
sub
xchg
ljmp
nop
repz
sub
sbb
push
mov
adc
jecxz
lret
out
and
daa
sbb
hlt
xor
xchg
push
inc
mov
movsb
hlt
and
sbb
jbe
push
push
add
int3
mov
imul
inc
cmp
test
inc
pushf
insb
jb
out
pop
adc
mov
xchg
push
ss
cvtdq2ps
add
dec
mov
jbe
jge
cmp
cmpsl
mov
scas
xchg
je
mov
sub
dec
sub
lds
mov
jp
xlat
cltd
fs
pushf
jae
addr16
popa
sub
into
push
ds
pop
adc
pop
jp
mov
ja
jne
fcom
jge
and
aaa
loop
mov
jp
fidivl
aaa
dec
lahf
ret
pop
and
test
gs
jmp
nop
inc
mov
hlt
xor
lret
sbb
xchg
push
adc
pop
mov
mov
std
cmc
fwait
sub
mov
mov
sub
lock
add
mov
call
cmp
xchg
inc
loopne
dec
cmpsl
repz
pop
jle
pop
stos
adc
ret
push
push
push
add
mov
incb
dec
movsb
enter
or
fwait
jo
mov
push
sbb
xchg
loopne
mov
sahf
sbb
popf
sbb
pushf
outsl
test
jecxz
iret
dec
scas
cltd
mov
and
jno
jmp
dec
jle
jl
jp
nop
aaa
mov
add
inc
fstps
dec
insb
inc
adc
xchg
and
shll
into
jecxz
xor
subb
or
xchg
mov
or
outsb
sbb
nop
loopne
or
push
add
push
push
iret
push
jne
jle
sbb
mov
ja
mov
aam
push
xor
mov
xchg
xchg
imul
ss
xchg
mov
outsl
mov
insb
addr16
aas
lret
dec
out
push
adc
jecxz
xor
inc
and
xchg
aas
push
sub
ja
xor
inc
or
in
test
inc
mov
ja
xlat
push
hlt
mov
adc
inc
aas
and
loope
mov
dec
roll
jle
mov
jb
xchg
inc
sbbb
inc
cs
mov
add
adc
enter
fwait
cmpsl
inc
cmpsl
push
sahf
lcall
sub
in
push
jge
stos
ljmp
xchg
pop
pushl
sub
dec
js
test
lods
gs
sub
push
xchg
adc
test
bound
mov
inc
fldl
push
and
and
and
dec
incl
cmp
adc
pop
xor
sub
lds
cmp
int
rol
pop
outsb
add
or
popf
sbbl
les
cmp
push
fldt
xor
add
call
pop
arpl
xchg
call
jbe
js
ret
inc
fstpl
insl
xorb
jns
cmp
inc
inc
push
xor
and
shll
and
insl
aaa
cmp
pop
jecxz
leave
mov
fs
sbb
sbb
scas
popf
add
add
shl
jl
inc
add
jo
or
cmpsl
lea
nop
pushf
pop
xchg
sub
std
push
pop
fstpt
add
mov
nop
clc
gs
cmpsl
sub
shll
mov
push
rcrb
clc
xchg
pop
inc
sbb
push
mov
imul
adc
testl
mov
data16
inc
sti
xor
cmovnp
popa
and
cld
push
push
fnstsw
cmp
data16
pop
jmp
sti
sarb
mov
movsl
pop
sahf
cltd
test
outsb
movb
inc
fsubrl
out
jecxz
push
add
jno
pop
ljmp
jge
jne
cmpsb
cmovg
data16
or
and
and
cmp
scas
jnp
sti
cmp
dec
outsb
dec
xchg
ss
jle
add
dec
test
imull
jne
clc
mov
int
xchg
std
cld
rcrb
or
jae
push
sbb
jb
xchg
lret
repnz
pusha
adc
mov
or
sti
mov
mov
pop
stc
sahf
push
pop
out
mov
es
in
jmp
add
or
imul
push
out
xchg
add
lock
nop
rorb
mov
push
mov
jge
or
jmp
aam
dec
hlt
popf
mov
ljmp
aad
jno
je
lock
xor
cmp
mov
ja
dec
sar
or
mov
arpl
ja
mov
fists
mov
mov
adc
sbb
stos
shll
push
mov
mov
rcrl
and
test
bound
test
outsl
aaa
cmp
xchg
pop
mov
pop
push
jae
out
mov
mov
repnz
rorb
imull
test
xchg
lods
hlt
vandnps
sti
mov
push
movsb
stos
je
dec
push
cmpsl
xor
mov
push
out
sbb
mov
outsb
sub
mov
enter
fs
dec
popa
rorb
mov
xchg
ret
push
into
or
fistl
int3
pop
pop
pop
aaa
out
dec
outsl
fisttps
pop
push
fisubrs
ss
out
stos
and
inc
and
test
imul
add
jbe
jo
push
sahf
rolb
outsl
mov
cmp
leave
push
and
inc
stc
out
push
pop
cmp
imul
mov
or
aas
test
xchg
in
mov
push
and
xlat
mov
jns
lods
ljmp
mov
or
add
sub
add
jae
ljmp
and
mov
leave
push
sub
ds
adc
push
push
cwtl
gs
xchg
insb
jnp
mov
int3
pop
daa
mov
cmc
pop
push
movsl
mov
dec
out
dec
add
and
leave
std
jg
out
pop
and
fcoml
xchg
scas
mov
clc
aaa
jo
sub
inc
xor
fs
ljmp
mov
or
mov
or
xor
imul
xor
xor
mov
test
jno
mov
scas
xchg
sbbb
stos
hlt
in
lods
repz
in
dec
mov
int3
das
jecxz
mov
je,pt
pop
inc
push
mov
xorb
mov
repnz
loop
jge
cs
or
mov
and
dec
sahf
dec
xchg
mov
sbb
jae
push
js
lea
outsl
lea
push
out
jecxz
jecxz
cli
inc
and
dec
pop
sbb
mov
outsb
sub
inc
push
xchg
jg
test
lods
dec
arpl
in
lret
xchg
lods
or
and
push
mov
cmpb
std
fwait
adc
and
lds
mov
insl
push
mov
pop
es
and
pop
and
xor
xchg
inc
sub
mov
mov
dec
inc
dec
push
push
aas
or
jp
lods
sahf
cmp
mov
push
sahf
sub
adc
add
neg
mov
jno
rorb
and
or
pop
enter
adc
mov
rolb
push
lahf
in
in
xor
mov
mov
mov
in
mov
out
sub
aaa
mov
test
or
imul
dec
sub
imul
xlat
fsubr
fdivrs
jo
dec
push
sbb
pop
sbb
lods
xchg
jecxz
inc
dec
xchg
mov
adc
ret
xchg
hlt
and
mov
int3
shr
xchg
sub
dec
adc
adcb
add
out
scas
mov
sub
push
or
std
stos
push
mov
not
rorb
testl
xchg
sahf
add
xchg
xchg
mov
or
jb
or
int
push
inc
sahf
push
xchg
push
fs
inc
mov
pop
jns
shll
mov
sbb
sete
dec
rcrl
lcall
cwtl
adc
mov
push
out
dec
sub
in
daa
call
lret
sbb
mov
and
xchg
int3
xlat
sub
sbb
push
inc
inc
dec
mov
mov
dec
mov
cwtl
xchg
add
lods
scas
stc
insb
lret
out
stc
xchg
pushf
sub
push
insb
lods
cld
cltd
sbb
sbbl
aad
mov
xchg
xchg
into
lahf
paddsb
pushl
fiadds
fisttpl
or
cmp
or
scas
movsl
in
std
in
jns
call
stos
inc
fxtract
push
pop
jmp
push
js
sbb
cmp
imul
mov
and
cmpsb
cmc
add
sti
mov
mov
inc
int3
notl
cmpsb
jmp
sub
mov
loopne
xor
imul
lahf
jns
xchg
dec
adc
push
decl
add
out
jo
popf
push
shll
flds
sub
ss
icebp
les
dec
scas
adc
xchg
call
insb
outsl
inc
push
or
sbb
or
inc
xchg
sbb
mov
jne
negb
inc
shl
push
lods
stc
xchg
cld
pop
and
outsl
out
xor
dec
mov
push
jo
jne
mov
or
std
xchg
dec
cmp
sbb
sbb
sbb
iret
int
popl
push
shr
test
cltd
xorl
dec
std
mov
imul
lahf
xor
insb
push
jp
aaa
aam
push
push
gs
add
test
ja
push
ljmp
dec
push
fnstsw
imul
arpl
in
lods
mov
andb
dec
jnp
xchg
cwtl
and
jg
jnp
mov
pop
leave
push
or
bound
mov
sbb
call
xchg
adc
push
loopne
in
icebp
jg
test
pop
mov
sub
push
mov
dec
stos
ror
or
lcall
lahf
add
or
aam
call
daa
nop
or
fiadds
hlt
sub
pop
push
mov
ret
add
or
aad
mov
sbb
shll
lahf
mov
loop
mov
cmp
sub
inc
ljmp
and
jg
iret
pop
fwait
dec
cmp
insb
xchg
xchg
mov
fadds
filds
fwait
or
or
cmp
adc
fxch
dec
xor
inc
movb
aad
push
lods
inc
clc
insl
dec
rcr
jmp
push
fsubl
or
xchg
setle
sti
jp
ljmp
mov
cmpl
fwait
push
fldl
fwait
repnz
push
data16
movsl
add
std
mov
inc
push
sub
jle
cmpsb
mov
cmp
out
fwait
adc
iret
push
add
fadds
lea
and
xorw
push
outsl
scas
fidivrs
push
xor
sub
push
repz
fiaddl
mov
jnp
repz
and
aas
rolb
sbb
mov
xchg
mov
and
fstl
or
outsb
jmp
jo
and
shlb
ljmp
mov
aaa
loope
mov
inc
xchg
xchg
mov
fwait
sub
into
je
repz
mov
pop
mov
loopne
and
jl
scas
pop
sarl
jg
faddl
mov
mov
inc
mov
cmp
outsb
mov
imul
add
aas
adc
or
add
outsl
lock
incl
repz
mov
jnp
xchg
and
cmp
leave
lods
dec
pop
dec
repz
cmp
call
sub
ja
loopne
ds
or
add
mov
rcr
cmp
pop
mov
push
mov
iret
mov
daa
or
jl
sbb
xor
mov
push
cmpsl
mov
and
scas
cli
aaa
int
adc
push
gs
in
jae
gs
cli
jno
adc
pop
in
test
inc
addr16
jns
push
mov
scas
dec
scas
cli
add
bound
int
arpl
lret
ret
add
add
cmp
mov
ret
pop
into
xchg
outsl
dec
roll
and
inc
ja
fwait
jmp
sahf
pushl
push
sub
iret
outsb
scas
mov
rorl
andb
test
mov
mov
mov
inc
fwait
test
inc
xchg
xchg
ret
xchg
popf
stos
stc
cltd
xchg
add
lods
cs
mov
xchg
pop
bound
out
pushf
insl
movsl
mov
orl
outsl
ficompl
aam
pop
popa
stos
orb
repnz
loop
xchg
mov
leave
testb
jne
sub
dec
sub
mov
mov
cmp
std
fdivrs
test
mov
and
mov
mov
mov
xchg
mov
inc
fsubs
xor
enter
add
cmp
or
fwait
pusha
dec
aas
or
imul
mov
movsl
inc
ret
std
mov
or
sbb
ja
cmpsl
cmpsl
jmp
xchg
aas
mov
sbb
sub
clc
xchg
js
jne
repnz
jnp
push
add
jecxz
xor
int3
imul
int
sbb
push
xchg
jge
mov
gs
cmp
mov
loope
call
xor
or
pop
sarl
mov
xchg
cmp
outsl
sbb
inc
and
fdivs
jnp
cmp
xchg
rcll
pop
outsb
pop
loopne
movsb
or
movsl
repnz
aas
shl
hlt
push
nop
shlb
cli
repnz
inc
or
or
loop
and
inc
test
jp
out
xorl
repnz
mov
or
jnp
shr
jge
jbe
adc
into
mov
mov
adc
xchg
xchg
mov
and
gs
jnp
iret
or
stc
xor
xor
inc
or
je
testb
adc
sbb
lock
repnz
popf
cltd
xor
pop
ret
cmc
xchg
fcmovb
cltd
jne
inc
idiv
ljmp
sbb
lret
daa
mov
pop
mov
mov
pop
icebp
push
mov
repz
icebp
enter
imul
in
das
hlt
cli
push
cmp
mov
jbe
sahf
mov
out
xor
mov
push
std
jb
xchg
add
arpl
icebp
xchg
pop
fisubs
ret
inc
adc
ret
xor
and
jl
dec
in
andl
sub
xor
dec
pop
inc
add
stos
jns
aam
inc
xor
and
or
insb
mov
or
xchg
add
push
fcomi
vxorps
or
and
xchg
mov
or
or
repnz
lods
repnz
sub
inc
push
fbld
cmc
ljmp
inc
sub
int
incl
ror
mov
mov
pop
loope
pop
ficomps
nop
adc
roll
movsl
loopne
mov
push
test
mov
mov
jo
dec
out
cwtl
mov
lock
pop
jne
dec
push
repz
ljmp
ds
pop
ret
mov
mov
gs
push
xchg
arpl
dec
int3
dec
add
sbb
dec
outsb
popf
sbb
push
imul
aad
loope
mov
jp
jns
or
inc
fidivrl
ficoms
mov
ret
enter
test
and
mov
inc
pop
movsb
pop
sbb
loope
sti
jno
jno
call
aas
cmp
sbb
mov
daa
mov
ljmp
int3
mov
mov
test
dec
test
mov
stos
pop
jg
sarl
inc
jno
sbb
cmp
inc
idivb
enter
sti
jl
es
pushf
mov
mov
adc
stos
or
xlat
jl
daa
adc
sub
out
xchg
sahf
xchg
adcb
jb
insb
and
mov
push
mov
mov
cltd
in
xchg
fdivrl
xor
cld
insl
sarb
and
mov
and
and
push
jns
xchg
decl
arpl
out
cmp
ds
and
out
adc
adc
mov
stc
test
xcrypt-ecb
cmpsl
push
lahf
mov
cmp
js
lret
push
or
add
imul
pop
lahf
xor
jno
cltd
xor
ds
add
hlt
dec
pusha
in
sti
sahf
xchg
jno
xchg
insb
fadds
sar
inc
inc
popa
sub
jne
xor
stc
in
data16
arpl
je
test
sbb
mov
scas
loope
or
insl
mov
mov
adc
into
les
cwtl
xor
movsl
mov
sub
and
hlt
xchg
outsb
inc
sarl
mov
mov
push
ss
loop
xchg
xlat
hlt
push
sahf
outsl
xor
inc
mov
arpl
mov
push
and
lahf
gs
outsb
dec
leave
adc
insl
aam
cmpsl
les
leave
and
sub
cs
xchg
pop
xor
sub
test
scas
mov
in
outsb
loope
mov
mov
pop
sub
and
or
xor
lods
stos
leave
cmp
popf
addr16
lret
lcall
loope
sub
xor
imul
dec
or
insl
inc
xor
cs
andb
xchg
lret
das
fidivl
mov
xor
pushf
cmpl
mov
enter
cmc
sarb
das
cwtl
mov
cmpl
iret
or
out
pop
sti
pop
mov
pushf
adc
std
mov
test
insl
sahf
loope
sub
call
int3
ret
xchg
fwait
inc
lcall
movsb
inc
mov
mov
int
xchg
sbb
and
cld
xor
push
stos
cld
cmp
xchg
push
int
lock
pop
or
push
xchg
inc
fsubrs
sbb
pop
sbbb
dec
xor
sbb
inc
pusha
mov
call
lret
mov
dec
mov
add
push
jbe
imul
aaa
rclb
enter
int
push
arpl
fyl2xp1
mov
xchg
int
insl
cltd
arpl
in
jbe
mov
xchg
cmp
pop
xchg
xchg
mov
push
es
addr16
gs
negb
mov
mov
add
test
adc
arpl
outsb
inc
lea
xlat
testl
insb
lret
int3
clc
cltd
lock
lret
in
sbb
mov
addr16
lea
mov
add
sbb
test
test
mov
sub
cli
inc
stos
idivb
cmp
cs
lock
adc
mov
icebp
scas
mov
mov
mov
std
je
test
sub
mov
inc
push
mov
xor
or
cmp
cmp
shll
aad
and
gs
xlat
mov
ljmp
pop
push
or
add
lret
add
out
xchg
nop
popf
inc
add
push
ficomps
scas
lock
movlps
cmp
jp
cli
and
stos
out
cs
decb
into
push
loopne
icebp
add
add
dec
into
mov
or
outsb
lods
pop
orb
xor
loope
fs
add
add
jmp
and
and
push
sbb
sbb
mov
xor
jmp
inc
inc
jle
sub
xor
mov
mov
or
cmpsl
adc
int3
addr16
push
pusha
jl
sbb
aaa
push
imul
inc
data16
cmp
or
leave
jle
push
cwtl
enter
lea
push
mov
stc
fists
inc
jg
cmp
or
mov
mov
xor
add
cmp
or
mov
popa
divl
lcall
xor
mov
fucom
mov
pop
adc
les
paddusw
sbb
xor
mov
lret
dec
or
call
cltd
mov
xchg
movsb
loopne
mov
cmpl
xchg
daa
out
rorl
lods
outsb
out
es
fcomp
pop
sub
sub
popf
jle
rolb
sub
sub
sbb
cmp
push
movsb
dec
fistl
inc
in
je
movsl
pop
mov
jmp
pop
sbb
pushf
lods
push
adc
inc
push
rclb
cmp
jb
popa
and
fmul
lock
outsb
addr16
add
dec
mov
push
cltd
xor
pop
lds
and
fistps
ljmp
sub
fsubrl
std
push
lods
out
test
lcall
and
xchg
nop
sahf
cmp
test
addr16
mov
into
out
nop
add
or
push
mov
jb
mov
ss
adc
cli
mov
mov
xchg
scas
push
xor
adc
punpckhwd
jp
pop
in
lret
or
movsb
cli
jl
cmpl
movsb
in
mov
sar
jmp
rclb
addl
dec
hlt
pop
push
mov
fnstsw
or
insl
es
lds
leave
jl
shrb
adc
out
jl
pop
or
aad
ret
js
scas
jnp
fmul
and
repz
sbb
cmp
inc
jbe
or
cli
dec
mov
mov
fdivrs
lret
fwait
out
mov
jb
lods
jge
push
push
ja
mov
sbb
lods
jge
fwait
mov
outsl
out
sub
adc
sarl
out
dec
cmp
cwtl
push
sysenter
stos
cmp
leave
jge
push
shll
dec
ficoms
and
sbb
mov
imul
xchg
or
sub
loop
mov
sub
lock
or
cmpsb
ret
pop
or
cwtl
stc
imul
pop
push
sti
addr16
out
jl
inc
aaa
adc
adc
ja
mov
sti
jbe
outsb
ficoml
push
mov
inc
sub
notl
cmpps
data16
jg
repnz
jl
fbstp
push
outsl
out
nop
bound
jge
or
sub
out
fwait
ljmp
push
loopne
cmp
mov
cmp
fldt
jne
push
es
jmp
ficoml
cmp
pop
pusha
cld
and
mov
mov
pushf
and
push
mov
pop
dec
and
xchg
stc
loopne
fadds
stos
enter
pushf
and
stos
mov
add
and
mov
test
rolb
mov
mov
xor
in
pop
enter
cmp
xorl
sbb
ja
ja
in
mov
ret
jp
jnp
int3
adc
fidivrl
fisubs
fstpl
out
sbb
pop
fistps
lret
pop
test
imul
fldt
fiaddl
mov
adcb
sahf
out
pop
mov
cmc
mov
inc
nop
stos
pop
sbb
sbb
fists
cmp
fbstp
mov
test
addr16
dec
add
cmp
mov
idiv
pusha
scas
push
rclb
out
add
xchg
mov
in
imul
jne
cmp
imul
mov
push
fists
fwait
xor
jge
fcompl
mov
ret
sbb
mov
aas
testl
outsl
push
push
adc
fstpt
das
mov
cmp
mov
pop
xchg
dec
mov
adcl
sbb
stos
imul
mov
cwtl
push
test
sti
gs
sub
adc
cmp
or
pusha
push
push
push
sbb
mov
sbb
pop
nop
pop
mov
cmp
xor
push
lds
movsb
movl
insl
lock
repz
sti
ds
pop
iret
out
xchg
and
adc
xchg
sbb
jle
ljmp
cmp
rolb
out
scas
mov
sahf
hlt
cwtl
cmp
ret
std
pop
iret
mov
icebp
fucomi
cmp
lods
jns
testl
mov
inc
dec
jbe
shrl
mov
out
jecxz
cwtl
fwait
inc
xor
inc
ljmp
fxch
push
add
popa
xor
rolb
adc
mov
mov
jmp
inc
mov
xor
and
xchg
sar
xchg
cli
adc
shll
das
cmp
mov
mov
fsubrp
cmp
push
out
jb
ret
movlps
sarl
mov
mov
jae
mov
cmp
aad
jg
scas
loop
inc
and
loop
lods
sbb
sbb
mov
sub
mov
out
or
call
pop
inc
gs
fisttps
push
cmpsb
divl
lea
push
std
xchg
pop
out
lock
pop
mov
mov
xor
call
movsb
ss
or
faddp
scas
push
fisubs
jp
jmp
mov
nop
adc
and
jno
aad
jae
inc
mov
adc
movl
mov
mov
ljmp
aam
les
jp
hlt
adc
jbe
xorb
shll
stc
mov
testl
rcrb
lcall
je
mov
mov
lahf
jb
aaa
daa
incb
pop
adc
lcall
inc
mov
cmpsl
inc
or
in
mov
lret
in
push
and
xor
fsubr
dec
add
cmp
test
sub
and
ret
xor
xor
sbb
ds
inc
rcrl
mov
jo
pop
adcl
inc
shrl
dec
push
inc
jl
jecxz
lods
inc
std
stc
lret
push
xchg
lods
hlt
into
sti
xor
sub
push
dec
xchg
and
jp
mov
pop
fnsave
mov
pop
fwait
push
or
sbb
daa
nop
and
pop
xchg
mov
mov
jne
sub
daa
in
lret
ja
daa
pop
or
sub
cltd
lahf
dec
mov
enter
jae
adc
cmpsb
movsl
sahf
enter
cli
sbb
int3
xor
popf
or
hlt
stc
push
xor
xor
lods
xchg
sbb
push
sub
and
fwait
jbe
scas
lret
ja
movsb
jge
mov
repz
xchg
pop
mov
dec
jno
scas
fcomps
pop
addr16
pop
iret
add
int
pop
push
ljmp
inc
mov
jae
mov
cld
xor
scas
push
mov
leave
loope
xchg
popf
flds
popf
add
rorb
movsb
or
inc
nop
sub
sarb
cs
clc
cmc
imul
xor
jno
jecxz
cli
iret
sub
push
pop
nop
stos
xor
das
mov
sbb
push
inc
cld
mov
mov
cmpsb
fwait
pusha
add
jle
shl
xchg
dec
movsb
cmp
cmp
rep
and
in
imul
mov
add
cmpsb
sbb
outsb
popa
cli
inc
adc
in
in
hlt
mov
rcr
movlps
inc
cltd
enter
xor
jne
sbb
enter
jns
sub
out
pop
sub
and
stos
movsl
les
dec
xchg
notb
sub
push
arpl
imul
push
loope
rolb
lock
adc
or
and
lds
inc
clc
push
jns
sti
jno
push
mov
inc
inc
lcall
lods
ja
lret
mov
sub
pop
inc
cmp
ret
add
add
push
enter
cmp
scas
ss
scas
shl
sti
xlat
dec
mov
popf
lea
mov
jge
pop
pop
data16
pop
js
and
into
xchg
fidivl
jae
sbb
jnp
xchg
scas
inc
xchg
inc
cmp
inc
xchg
insl
and
cmc
xor
sub
sub
data16
lods
in
add
and
push
xchg
inc
xor
push
orb
clc
movsl
xchg
bound
subl
xor
test
lcall
mov
mov
and
push
mov
add
ret
loopne
lods
push
or
shrb
mov
xor
test
std
inc
push
mov
add
add
adc
push
gs
jb
mov
stc
ljmp
add
push
xor
in
jmp
or
pop
rol
repz
loopne
fists
mov
std
mov
or
ds
dec
outsl
stos
jno
lods
int3
xor
out
sub
aam
sub
mov
scas
or
scas
loop
dec
mov
sub
cmp
adc
ds
adc
out
pusha
push
test
mov
shlb
rcll
push
xchg
mov
mov
xchg
xlat
push
jmp
data16
insl
push
sbb
dec
or
aad
pop
push
jg
mov
loope
in
rorb
cld
mov
adc
inc
aam
in
stc
iret
mov
out
adc
push
dec
addr16
repz
in
js
test
out
cmpsl
daa
js
outsb
xchg
mov
xor
cmp
fbstp
jle
stc
pop
pushf
mov
sub
je
outsb
ja
mov
inc
sbb
xchg
cs
mov
cmp
rclb
cmc
lods
in
push
movsl
push
ja
dec
sbb
cmp
dec
es
loop
cmp
je
pop
dec
cmp
pop
push
and
lret
arpl
mov
sub
cli
jbe
or
xchg
icebp
and
into
out
push
mov
prefetch
push
and
repnz
sbb
sbb
fists
jge
lret
cli
aas
xchg
in
adc
push
fdivl
fadds
cmpsb
and
dec
and
add
push
in
xchg
cmc
cs
loopne
push
push
adc
filds
sbb
mov
jg
mov
jecxz
hlt
outsl
cmp
xor
or
popf
ljmp
data16
ret
inc
mov
push
push
cmp
mov
stos
ds
out
popf
popa
cwtl
push
mov
in
inc
jg
clc
dec
data16
xchg
sbb
sysexit
out
cmpsb
int
pop
inc
sub
insb
xor
mov
adcl
xchg
stos
comiss
mov
xchg
add
mov
jle
iret
xor
leave
inc
scas
das
das
pushf
jae
scas
push
sbb
sub
xchg
notl
push
lds
inc
sti
test
std
add
xor
push
and
stos
jnp
aad
inc
add
lahf
lahf
push
cmp
xor
add
jne
mov
clc
cli
adc
cmc
xchg
add
dec
cmp
xchg
xchg
imul
popa
ss
jl
mov
mov
bswap
ss
and
mov
fs
cmpsl
mov
popf
gs
and
mov
rcll
rcl
shrl
inc
int
cmpsl
jge
pop
inc
repnz
and
sub
daa
shlb
xor
push
sbb
sti
sbb
sar
pop
rorl
mov
push
sub
jge
pop
lcall
insl
sub
in
cmp
dec
pop
lea
les
stos
xchg
adc
add
jbe
divb
cmp
mov
cmpl
pop
inc
fstps
sbb
scas
iret
fcmovbe
insl
jnp
jns
test
dec
stc
icebp
and
das
sub
xor
xchg
flds
push
je
fidivrl
mov
inc
cmp
cmp
and
insb
es
scas
cmp
and
gs
fsubrs
push
mov
push
loope
push
out
jnp
push
push
sub
cmp
sub
sbb
and
push
pushf
fldt
lea
sbb
xor
hlt
or
outsb
adc
add
das
add
xchg
pop
addr16
push
enter
xchg
pop
int
xacquire
mov
push
or
xor
dec
insl
jecxz
mul
scas
das
push
mov
jle
cmp
aas
xchg
pop
ja
push
or
ss
adc
into
xchg
lcall
pop
pop
mov
cld
aad
add
movb
dec
adc
mov
into
inc
add
inc
inc
xlat
sub
or
xchg
push
pop
cltd
sbb
sarb
test
xchg
imul
mov
xchg
addr16
dec
mov
add
dec
fsubs
lcall
out
xchg
push
pop
and
aam
adc
inc
ljmp
pop
daa
adc
or
icebp
sub
fs
rolb
ret
and
or
push
and
xchg
repnz
pop
jmp
cmp
int3
ljmp
push
daa
ret
arpl
ljmp
cmpsl
dec
push
into
jae
pop
add
movsb
jne
scas
lahf
adc
das
pop
xor
clc
fldenv
jnp
mov
lds
scas
mov
sbb
xchg
jmp
ftst
dec
fists
in
adc
mov
fnstenv
mov
lods
insl
push
xchg
mov
inc
daa
shll
push
pop
int3
mov
push
inc
leave
cld
pop
inc
enter
push
rorb
sbb
out
sti
cld
lahf
dec
rcr
inc
mov
push
jno
add
js
lahf
mov
cmpsb
and
arpl
ljmp
push
or
aam
mov
or
lods
xchg
cmpb
inc
int3
jg
clc
cs
test
mov
lods
pushf
filds
int
and
lret
fucomp
mov
pop
xlat
cmpb
pop
cmpsl
mov
cmp
ljmp
xchg
push
cmp
inc
addb
and
jp
mov
mov
cmp
xchg
lahf
push
adc
ljmp
out
int
addr16
mov
ret
jge
or
test
cmp
sub
mov
inc
or
cmc
cmp
leave
add
push
aas
or
push
lea
cld
or
loopne
repnz
sub
jmp
mov
inc
add
xchg
push
out
outsl
mov
add
and
cmp
arpl
xchg
cwtl
sarb
cmp
ss
pop
sbb
pop
mov
cmp
roll
daa
js
add
clc
decb
dec
sub
dec
ret
cmp
adc
dec
add
in
lods
in
daa
fbstp
sbb
mov
stos
ret
rcrl
negb
xchg
inc
inc
stc
cltd
sarl
loope
inc
pop
fistps
mov
dec
sahf
je
dec
test
dec
lret
inc
adc
push
jb
sbb
int3
cwtl
into
mov
xlat
sbb
push
xor
mov
iret
sub
jae
in
cmp
cwtl
mov
pop
pushl
call
negl
xor
pop
fucomip
inc
ss
sti
fiaddl
cmpsb
clc
sbb
mov
enter
stos
imul
lahf
test
mov
repnz
leave
xchg
shll
cmp
dec
xor
xor
adc
divb
icebp
scas
in
call
sahf
outsb
popf
xor
xor
mov
mov
mov
push
push
out
xlat
lock
sarl
test
mov
stos
cli
data16
mov
jmp
inc
push
dec
arpl
pop
jmp
or
xor
in
and
adc
cmpsb
pop
mov
fcoms
push
xchg
popa
repz
insl
pushf
push
dec
push
dec
jnp
push
adc
shll
lods
shrb
out
sahf
fsubr
popf
xorps
and
outsl
fcoml
dec
std
mov
cmp
lods
dec
or
imul
push
add
mov
push
push
xchg
stc
jno
clc
sbb
je
jg
lock
mov
push
bound
jb
or
js
or
add
mov
fisttps
mov
shll
aam
xchg
arpl
popa
into
fwait
dec
mov
push
sahf
cs
cmp
adc
xchg
cli
les
loop
dec
mov
sbb
xor
dec
sub
mov
ret
daa
jl
xor
scas
int
lret
loop
fs
lret
inc
out
add
cld
aad
jnp
adc
test
sti
mov
mov
push
sub
pop
mov
sbb
inc
loope
mov
mov
ljmp
mov
cmp
int
popf
jecxz
sarb
mov
jne
cmp
lea
jne
scas
pop
arpl
and
inc
sbb
adc
nop
add
aas
mov
pop
dec
stos
pop
or
xchg
nop
std
js
mov
loopne
push
dec
movsb
xor
push
add
aaa
lods
push
mov
xchg
out
cli
pop
cwtl
movsl
and
mov
cmp
xor
pusha
das
pop
jp
fnstcw
mov
mov
sbb
mov
cmp
lcall
inc
fwait
lods
adc
movsl
sbb
outsl
mov
add
add
mov
rcr
mov
cld
outsl
scas
mov
lret
adc
fsubl
mov
add
into
out
outsl
pop
insb
out
jno
int
fs
divl
inc
mov
jp
daa
add
das
jno
pop
and
mov
imul
cli
test
outsl
push
inc
inc
mov
pop
mov
sbb
xchg
stos
enter
push
xchg
jle
dec
pop
pop
inc
cmc
cwtl
pop
mov
clc
nop
pop
pop
dec
sahf
jmp
scas
dec
mov
xchg
dec
pop
jg
pop
cwtl
out
fbstp
sti
add
and
jmp
add
mov
cmpb
iret
sar
inc
add
les
jo
stos
jae
popf
mov
int3
add
xor
or
xchg
mov
mov
or
pop
aam
ds
pop
or
xchg
jge
sarl
lods
test
xchg
repz
dec
cld
mov
outsl
cmpsb
adc
pop
shll
mov
inc
gs
and
add
mov
cmp
jne
mov
in
jmp
pop
out
jp
sbb
fmuls
js
out
orb
lret
lds
cmc
and
xchg
loope
mov
loopne
lahf
sub
add
mov
rcll
popa
movsl
and
and
test
mov
jg
loopne
arpl
cwtl
subl
fwait
in
dec
pushf
mov
int
ret
pop
mov
scas
adc
pop
jo
lea
add
push
lret
cmp
xchg
mov
add
sub
xchg
mov
pop
pop
pop
push
scas
aam
xor
js
aaa
vpsubsb
sub
gs
adc
and
out
sub
inc
push
orb
sbb
call
or
movsl
push
dec
rcrl
sub
ja
inc
aam
in
loope
push
sub
popf
adc
push
xchg
daa
popf
mov
shrb
std
out
sub
and
mov
mov
aam
fwait
or
pop
mov
xlat
or
pop
inc
jae
call
mov
ficoml
jmp
shrb
mov
xlat
incb
mov
push
aaa
push
pop
cli
rcll
aad
jg
xor
stos
sbbl
sahf
jp
add
addb
inc
mov
mov
aad
push
mov
mov
push
in
sahf
inc
sahf
ss
popw
cmp
scas
insl
push
cmp
or
dec
stc
cwtl
lods
shr
in
add
xor
inc
clc
inc
lcall
test
lea
push
rol
jne
ret
aad
inc
xor
adc
jnp
mov
subl
sbb
xchg
sahf
loopne
incl
ds
or
cmc
jns
xor
repnz
stos
repz
lds
repz
scas
fsubrl
push
fisubs
in
lret
mull
cwtl
mov
test
aam
pushf
mov
jns
jbe
jbe
enter
sub
dec
inc
rolb
sbb
incl
sub
test
mov
mov
cmpsb
adc
jnp
ror
push
imul
xchg
arpl
mov
jb
js
xchg
push
xor
fisubs
cmpsb
push
imul
fists
stc
popl
movsb
cmp
fbld
dec
xor
push
or
xor
fsubrl
xchg
push
ror
lahf
pop
sub
ja
cmp
out
mov
pop
xchg
ja
ja
pop
xor
inc
or
mov
aad
outsl
ss
mov
andb
enter
xchg
jo
out
sbb
push
xor
lods
inc
mov
imul
dec
int3
sti
xchg
mov
dec
outsb
into
std
fiaddl
or
mov
mov
cmpsb
in
or
pmaxsw
sbb
xchg
sub
orb
dec
sbb
push
inc
lock
add
ja
adc
xor
jg
fisubl
test
test
mov
popa
insb
clc
adc
pop
mov
not
test
cs
movsb
cmp
xchg
push
mov
sarb
and
rorl
mov
cli
rorl
xchg
jl
push
jnp
jle
dec
inc
sub
sub
scas
inc
add
into
xchg
arpl
sub
dec
lret
cmp
push
in
lods
int
mov
pop
push
jg
jbe
mov
mov
jmp
pusha
or
bound
sbb
sbb
sub
insl
movsb
mov
outsb
ret
lea
cltd
adcl
out
inc
in
or
out
sbb
xchg
dec
add
mov
enter
mov
leave
lea
mov
jle
jle
xor
inc
dec
lcall
inc
xor
push
inc
jo
andb
jg
adc
lret
insb
inc
test
jae
lret
shl
fldl
icebp
pop
xor
nop
push
jmp
jns
movl
lret
jle
movsl
insb
inc
cmp
mov
xchg
xchg
mov
push
jge
mov
cmp
loopne
push
xchg
push
jno
leave
call
inc
pushf
popf
mov
adc
inc
sbb
das
sbb
push
popf
dec
mov
jge
add
ret
add
adc
mov
js
aas
pop
and
sti
sbb
mov
insb
aas
imul
cmp
cmp
in
mov
in
push
mov
cmp
pop
mov
cmpsb
jl
xchg
sahf
push
push
ss
in
xor
enter
rcrl
mov
mov
lcall
xchg
gs
sbb
sub
add
out
fincstp
loop
cli
fsubp
sbb
lret
dec
jge
cmp
fidivrs
jp
out
fisubrs
push
lods
push
in
out
clc
subb
orb
lea
imul
scas
push
jp
xchg
pop
inc
push
jg
idivb
dec
xor
lahf
fs
jae
cmp
xor
shll
cmp
dec
lock
rcrl
shlb
sub
insl
subl
push
pop
pop
and
xchg
stos
loope
and
mov
and
repnz
adc
leave
pop
loop
inc
sbb
out
pop
pusha
push
xchg
arpl
mov
data16
cwtl
test
loope
xchg
sub
bound
mov
or
andl
push
into
cmp
lock
lds
aas
lcall
lahf
jb
sbb
enter
mov
fsubrs
and
mov
add
icebp
add
test
out
ret
adc
xor
mov
popa
fimull
xlat
jae
fdivl
shll
lahf
je
mov
hlt
imul
jns
or
test
inc
cmp
jae
in
sub
testb
jmp
fildll
mov
jnp
ljmp
pop
cmp
cmc
mov
int3
push
mov
scas
adc
mov
mov
scas
in
inc
pop
jns
shl
das
dec
dec
xor
ljmp
call
add
xchg
add
mov
sbb
sub
dec
inc
push
pop
push
and
and
mov
jge
mov
hlt
pop
enter
mov
jno
sahf
push
xor
dec
xchg
or
dec
les
in
insb
and
sub
lea
in
pop
fcmovnu
cmpsb
shll
fwait
inc
sub
out
imul
mov
fiaddl
rcr
sarl
mov
repz
xor
mov
pop
mov
out
add
fs
pmaxsw
cmp
sub
ja
jmp
xchg
cld
xchg
mov
loop
and
in
das
scas
shl
and
inc
imul
shll
inc
xor
sarl
in
cli
icebp
xchg
insb
ljmp
cmp
outsl
dec
dec
mov
dec
popa
mov
adc
push
jge
adc
xor
and
jno
fisubs
sub
pop
xor
mov
xchg
enter
xorb
mov
push
jno
cmp
inc
xchg
mov
xchg
pop
cmp
fsts
inc
movsl
push
out
sbb
cmp
push
jge
mov
push
mov
add
in
push
ja
jge
push
stc
mov
dec
mov
into
iret
push
in
xchg
movsb
loop
repz
lea
pop
push
std
fsubrl
sub
xchg
cli
cmpsl
xor
xchg
lahf
aad
mov
sbb
mov
dec
cmpsl
push
scas
adc
stos
dec
out
imul
scas
pop
mov
enter
cmpsl
es
fdivp
inc
cmp
std
call
cmp
push
sub
sub
dec
inc
cmp
movsl
fucomi
mov
loopne
sbb
lea
pop
lahf
inc
xchg
clc
inc
cmp
pop
xchg
or
pop
xchg
mov
pusha
xchg
into
xchg
jb
sub
test
insb
mov
jnp
jae
mov
aad
mov
fsub
test
jnp
inc
jp
ljmp
sbb
mov
fwait
inc
imulb
pop
jg
cmp
mov
test
dec
les
mov
mov
mov
pop
pop
jp
jb
push
mov
stc
sti
jbe
out
pushf
pop
xchg
adc
lcall
sub
test
aas
js
or
int
jl
mov
mov
mov
jp
scas
icebp
pop
je
cld
movsl
xor
xor
mov
call
mov
adc
jo
sub
pop
sub
pop
clc
mov
xchg
add
leave
push
lods
hlt
aas
ret
pop
loopne
cltd
into
xor
mov
mov
jno
rol
mov
cmp
mov
call
dec
fnsave
xchg
in
jno
incl
mov
or
les
sbb
mov
jge
sbb
xor
or
int3
cmp
xor
xchg
inc
es
dec
int3
sbb
out
inc
push
mov
mov
jecxz
add
fcomi
sbb
xor
push
mov
fstpl
sub
inc
jle
repnz
mov
outsl
dec
sbb
push
adc
cmp
loop
mov
and
sub
psrlw
jne
popa
xchg
jge
lock
xchg
and
pinsrw
aaa
and
adc
lret
aas
clc
out
fnstcw
das
sbb
sbb
jbe
pop
push
in
mov
push
xchg
mov
out
sbb
jns
xchg
aas
outsb
push
sub
pop
fnstcw
xchg
test
mov
jmp
cld
and
adc
daa
lcall
ja
sub
mov
mull
lea
test
movsb
test
hlt
fld
cmc
xor
push
push
mov
mov
jg
test
ss
nop
dec
push
xor
dec
mov
xor
sub
mov
int3
hlt
mov
cmp
aad
ljmp
xor
or
lock
mov
xchg
in
sub
int
rorl
cmpsb
mov
mov
scas
js
lahf
rcr
xchg
in
xchg
xchg
push
icebp
cmp
cltd
jge
popf
mov
or
scas
shrl
xor
test
aas
inc
push
pop
clc
insl
aas
sarb
xchg
xlat
in
sahf
pop
lock
loope
sahf
shrl
fidivl
mov
jae
cwtl
cs
icebp
inc
iret
clc
std
mov
rolb
xor
xorb
pop
faddl
lea
adc
hlt
sub
arpl
mov
orl
dec
icebp
cmc
adc
mov
cli
clc
sarb
stos
popa
cltd
out
xchg
pop
mov
aam
lods
inc
rorl
pop
imul
sahf
clc
bound
pop
test
push
add
jle
cmp
xchg
xor
adc
stos
add
mov
in
jo
testl
xchg
dec
and
and
movsl
mov
invd
gs
out
xchg
call
jg
sub
mov
pop
add
fwait
in
dec
and
jle
out
xor
cmp
scas
je
push
cmp
inc
cmc
xor
scas
xchg
hlt
xchg
dec
daa
mov
inc
pushaw
and
jge
xchg
mov
test
subl
pop
test
adc
cltd
push
sub
add
sahf
adc
jnp
pop
fadds
or
mov
mov
jp
add
out
int
mov
dec
push
dec
mov
ss
mov
xchg
test
out
and
std
dec
jnp
insl
shrb
xchg
into
push
rorl
inc
rcll
je
pop
xor
aas
leave
js
pop
adc
gs
incl
leave
cmpl
push
iret
inc
stc
mov
call
dec
rcl
adc
xlat
jbe
in
mov
cmp
bound
push
sbb
add
mov
push
int
sbb
xor
std
inc
sbb
mov
or
aaa
les
test
xor
cmpsb
aam
pop
mov
xchg
cmpsb
add
adc
fs
pop
xchg
pop
jg
fwait
mov
mov
test
mov
bound
jl
faddl
inc
mov
push
dec
xchg
xor
mov
iret
shlb
cmc
and
std
cltd
test
lds
insb
cmp
xor
scas
testl
dec
jp
popa
xor
movl
ljmp
ficoml
out
adc
mov
add
mov
jl
fcmovnbe
jmp
shll
pushf
dec
cmpsb
ljmp
stos
and
or
sub
mov
inc
or
cli
pushf
stos
cltd
testl
xchg
cs
inc
cltd
jno
jns
mov
fwait
lret
and
decl
fldt
and
fwait
outsl
aaa
cmp
fsts
dec
xchg
pop
test
rorb
mov
ds
fdivl
xchg
fnstcw
or
jmp
addr16
or
pop
jge
mov
stos
out
pushf
mov
aad
clc
mov
xchg
mov
es
rcll
xchg
pop
cmp
push
ja
jg
jo
and
mov
jge
adc
jg
mov
insb
lahf
ret
imul
pop
ret
or
and
testl
and
outsb
mov
mov
lret
sbb
out
push
sbb
add
mov
xchg
inc
aas
xchg
ret
pop
mov
add
sub
mov
cmp
mov
fdivs
cmp
dec
or
sub
cmpsb
inc
hlt
jg
icebp
ret
out
lds
fnstsw
pop
popa
leave
fwait
repnz
jp
and
aam
subb
or
popf
out
jb
out
addl
repnz
mov
cmp
or
icebp
jmp
sub
push
out
sub
push
ds
sbb
xor
adc
out
pop
push
jg
faddl
in
pop
or
jle
lahf
cs
rep
xchg
call
sub
xor
adc
dec
mov
mov
fidivl
adc
jae
scas
cmp
ficoms
xchg
adc
into
sbb
mov
movsl
fsubrs
push
dec
mov
cltd
test
sub
shlb
add
data16
pusha
mov
jns
hlt
sbb
adcb
lahf
jp
scas
mov
mov
sub
movsb
mov
mov
stos
divps
mov
shrl
jno
cmp
in
out
inc
mov
mov
add
cmpsl
inc
mov
sbbb
mov
adc
insb
lcall
shl
or
outsl
pop
push
dec
out
sbb
inc
xchg
popf
add
outsb
xchg
or
mov
pop
mov
and
movsb
daa
jbe
xor
add
jb
cli
idiv
xor
push
add
je
mov
out
lods
icebp
mov
sbb
xor
mov
stos
out
jo
fbld
lahf
cmc
jecxz
loope
mov
jo
pop
jecxz
mov
cmp
aaa
jo
add
jo
hlt
ja
adc
aam
adc
lods
jne
dec
cld
fdivs
lret
jnp
movsb
sbb
mov
push
cwtl
sbb
lock
or
rol
pop
popa
pop
inc
or
cmp
lahf
lods
data16
inc
pop
fisttps
lock
cmp
rcpps
mov
xchg
jg
xchg
mov
out
jne
leave
xor
pop
gs
mov
popa
pop
pusha
ficoms
pop
pop
or
push
mov
xor
scas
loope
push
lret
mov
pop
xor
sub
sub
mov
jns
sbb
popa
cmpl
enter
stos
and
push
jo
inc
fsubs
dec
push
mov
orl
pop
imul
jb
sub
js
cmp
pop
push
sbb
sar
test
fidivs
or
inc
sub
jecxz
stc
pushf
dec
xchg
gs
mov
dec
jnp
xor
push
xchg
xor
and
pop
xlat
fistl
aam
inc
pop
fimuls
cmpb
outsl
and
aad
enter
movsb
jnp
cmp
xor
into
dec
ds
mov
in
xchg
out
fsts
inc
mov
les
cmp
mov
iret
pop
push
adc
pop
and
jmp
cmp
xchg
das
cmpsl
add
push
push
les
cld
xchg
rorb
imul
jmp
sbb
pop
jecxz
sub
aas
mov
xor
js
lret
and
mov
xchg
int3
test
mov
add
rcrl
cmp
and
aad
cmp
out
xor
test
ja
pop
imul
rorb
jo
adc
ret
call
add
ss
xor
pusha
xor
add
mov
mov
cmp
xchg
ficoms
sarl
ljmp
or
lea
xchg
push
addl
popa
push
inc
sbb
mov
jnp
and
cli
mov
xchg
xchg
xor
popf
shrb
or
test
or
dec
mov
loop
dec
fimull
pop
cli
mov
add
or
and
popa
ficompl
mov
fsubrs
sub
popf
cltd
pop
inc
js
outsb
xor
addr16
mov
sti
pop
into
mov
outsb
in
popa
stc
aas
rcrb
pop
es
dec
orl
push
icebp
mov
sub
popa
add
dec
mov
push
pop
adc
mov
enter
add
dec
mov
mov
ds
mov
mov
push
aaa
mov
sub
xchg
out
shl
xchg
adc
mov
lods
ljmp
pop
pop
sbb
adc
pop
cmpsb
aad
test
xchg
mov
es
cltd
lahf
fdivs
lcall
jns
bound
jae
push
pop
cmp
fsubrs
in
sti
insl
sub
push
jmp
js
cmp
stos
sub
lods
mov
jecxz
lds
xchg
inc
xor
movsl
pushf
mov
into
outsb
mov
and
push
cmp
jns
push
filds
scas
add
push
dec
xlat
xchg
out
and
xlat
cmp
sbb
xor
and
mov
push
mov
int
jmp
adc
or
mov
adc
mov
movsb
inc
lret
dec
xor
cmovle
test
inc
ljmp
popa
subl
jb
aas
iret
xchg
nop
adc
push
jmp
xor
mov
test
push
fistps
mov
int3
clc
jns
mov
fucomi
jnp
cmp
add
jae
mov
xor
cli
ret
mov
mov
mov
xchg
clc
dec
add
dec
or
push
pop
and
mov
xchg
stos
sub
cmp
rorb
xchg
push
sbb
sbb
cs
cwtl
mov
cmp
pop
loop
outsl
sbb
jo
cmc
mov
enter
decl
jae
sbb
lods
stos
push
rcrb
cmpsb
inc
and
inc
test
push
ret
sub
cmpb
inc
pop
add
insl
js
inc
xor
shr
lret
popf
push
loopne
lret
dec
push
add
dec
lods
dec
dec
mov
mov
sub
pop
hlt
je
mov
xchg
into
pop
divl
imul
test
xor
pusha
mov
and
mov
sub
jno
sbbl
dec
cmovg
xlat
and
lds
je
test
and
leave
pop
mov
addr16
inc
popa
lock
dec
mov
xchg
data16
or
rorl
mov
lret
bound
inc
mov
lcall
xor
loope
xor
and
pop
push
out
sbb
loope
xor
ljmp
daa
icebp
mov
insl
lahf
xor
ljmp
sub
dec
iret
xchg
adcl
jne
push
flds
cs
lahf
gs
loopne
jnp
cli
ret
lcall
andb
adc
sbb
insl
movsb
jns
fdivrs
cmpsl
jns
add
cmp
pushf
pop
insb
inc
or
dec
out
or
popf
and
sub
mov
jg
scas
xor
mov
adcb
or
lods
push
in
or
dec
roll
ljmp
mov
mov
push
je
push
ret
xor
shll
jge
jb
add
mov
xlat
repnz
lods
jge
sbb
push
negb
mov
das
mov
addr16
insl
mov
xor
daa
sbbb
insb
sub
add
fidivs
imul
ja
pop
test
adc
jo
dec
filds
mov
loope
popa
mov
or
les
cwtl
pusha
pop
rcr
dec
into
xor
lock
dec
int3
aas
icebp
insb
fistpl
mov
roll
fisubs
fwait
xchg
sub
cmc
fbld
add
cli
mov
sbb
jnp
dec
xchg
pop
and
scas
jecxz
fcoml
inc
mov
push
addl
outsb
pop
clc
movsl
xor
fcmovb
insb
inc
pop
pop
pop
inc
cmpsb
call
sub
out
and
inc
mov
xorl
pop
insl
jne
mov
jns
fwait
test
test
dec
mov
sbb
push
bound
sbb
push
lret
fisubs
adc
and
imul
cld
lea
sahf
aas
cmp
mov
jbe
lahf
test
lret
je
ficompl
nop
cmp
xor
push
inc
icebp
mov
inc
cltd
fstpl
cmp
pop
mov
inc
push
lea
lds
mov
mov
jno
push
dec
cmc
mov
push
fwait
das
imul
imul
pop
repnz
scas
or
ss
inc
mov
jns
push
pop
loopne
and
enter
and
inc
aam
jo
dec
jle,pt
pop
ret
xchg
fdivl
leave
loopne
and
call
dec
inc
repz
das
sub
and
xor
fists
pop
into
repnz
lret
cmp
std
push
popf
xor
in
push
pusha
test
int
out
push
and
nop
sub
mov
aaa
leave
add
mov
xchg
hlt
sub
outsb
cwtl
add
adc
daa
jl
mov
out
adc
xchg
push
mov
add
xchg
sbb
pop
adc
xchg
or
shlb
ret
xchg
xchg
testb
outsb
adc
add
subl
dec
mov
out
xorl
int3
adc
out
xor
popl
adc
stos
sub
xchg
shrl
das
movsb
mov
sahf
cs
outsb
mov
mov
imul
jo
and
push
jl
je
pushf
inc
insb
mov
sbb
adc
ss
aas
rcrl
fldt
xchg
mov
inc
iret
jmp
imul
dec
push
das
ja
movsl
or
mov
addl
pop
pop
lea
leave
cmp
out
test
add
fcomps
loope
xchg
jbe
xor
jo
inc
movb
sbb
mov
insl
sti
dec
rol
out
popf
insb
and
sub
push
shl
or
jns
test
aad
adc
adc
es
and
ja
jle
lds
into
in
inc
stos
sbb
sbb
xchg
inc
add
jne
into
lds
insl
in
mov
adc
adc
data16
jp
fwait
test
jno
mov
mov
add
jge
leavew
mov
in
mov
xor
push
sub
std
int3
test
push
test
test
cmp
shll
sbb
push
leave
lcall
loop
pop
cmp
pop
aas
push
and
xchg
sti
xor
push
xor
ret
xor
jl
call
and
mov
xlat
jge
mov
xor
xchg
cmpsl
and
adc
inc
pop
cs
cmp
jb
xchg
inc
jo
xchg
movsb
mov
or
ffree
in
add
dec
sub
push
jmp
push
testl
mov
fistps
mov
movsb
mov
mov
int3
cld
mov
fisubl
addr16
jge
push
repnz
aam
mov
into
aad
shll
cmpsl
xchg
popf
add
testb
cli
jge
mov
iret
mov
dec
insb
lods
js
adc
dec
ja
fcoml
or
adc
test
mov
dec
nop
fs
jb
inc
insl
stos
call
je
sub
xchg
jp
inc
xor
out
cmp
outsb
inc
adc
stc
pushf
sbb
es
jge
lods
out
es
shr
pop
je
fldt
leave
adc
test
pop
mov
nop
test
mov
fwait
das
adc
or
mov
inc
xor
xchg
je
out
fildl
add
and
shll
dec
out
sti
sub
test
pop
mov
jae
in
xchg
mov
loop
test
iret
mov
inc
test
mov
lret
jno
jb
cli
aam
or
lahf
lcall
pop
xor
mov
xchg
inc
xchg
push
lahf
std
add
cmp
in
jne
add
push
inc
fs
int
data16
xchg
and
loopne
int3
rcll
add
jg
mov
jnp
pushf
aam
leave
xchg
adc
sti
outsb
adc
enter
push
mov
js
test
pand
fnstsw
mov
repz
in
pop
inc
scas
cwtl
mov
sub
outsb
jb
out
sub
and
and
jne
ret
loopne
mov
pushf
test
int
adc
hlt
notl
adc
movsb
xor
stos
cmp
push
imul
dec
add
jecxz
pop
add
fdivl
mov
in
cmp
mov
sti
dec
mov
sub
cmp
repz
push
out
lods
aam
lock
dec
jae
mov
popf
js
xchg
aas
das
es
cmp
xor
or
sahf
pop
scas
loop
stc
add
cli
mov
fcoml
lret
mov
cli
je
dec
mov
push
mov
jns
cli
lock
out
imul
dec
jnp
daa
mov
out
mov
lcall
rorb
movl
xchg
mov
xor
cld
dec
cmp
cltd
cmpsl
int3
cli
pop
dec
jno
mov
xor
fcomps
xlat
lahf
xor
xor
insb
pop
xchg
add
or
and
lock
les
mov
out
jmp
inc
ss
and
mov
adc
iret
jge
cltd
cli
in
nop
mov
mov
out
out
lods
jbe
loop
movsb
ret
fwait
sub
xchg
mov
pop
rcr
pop
add
mov
jl
je
stc
or
jb
pop
push
sub
and
fwait
xor
pushf
or
sub
lods
popa
fwait
inc
pushf
scas
inc
xchg
mov
jl
xchg
daa
dec
sbb
mov
repnz
pop
shrl
pushf
sbbb
and
mov
adc
cmp
loopne
dec
in
ds
mov
sub
mov
mov
lret
inc
jg
pop
xor
push
add
inc
xchg
sub
flds
push
jnp
lahf
mov
xchg
aam
mull
xorl
outsl
out
shrb
cmpsl
mov
ret
jnp
dec
pusha
int
or
mov
cmp
in
sbb
iret
mov
fs
loop
pop
and
pop
arpl
frstor
sub
jecxz
daa
gs
testl
xchg
je
pop
mov
mov
scas
aam
addl
sbb
mov
int
lret
add
pop
imul
jl
les
mov
add
mov
push
push
psubsb
rcll
cmp
mov
add
sub
scas
and
adc
imul
push
sbb
leave
cs
xchg
jo
jne
cltd
sbb
cli
push
jno
and
cmp
int3
pusha
adc
sub
mov
pop
cmc
loopne
test
mov
sarl
push
int
xchg
xchg
pop
je
xor
inc
mov
rcrl
dec
jp
mov
cmp
pop
jl
xchg
jae
insl
and
mov
icebp
mov
mov
pop
gs
push
mov
call
sub
in
adc
int3
add
gs
pusha
mov
lods
mov
cs
fistpl
int
xchg
imul
mov
mov
stos
dec
gs
mov
sbb
scas
adc
sub
shlb
xor
mov
sub
inc
out
mov
ds
bound
inc
cmc
popa
repz
mov
pop
or
sub
pop
pop
push
fsubr
sub
movsl
cmpsl
int
inc
xchg
jge
mov
mov
sbb
scas
imul
fs
xchg
lock
out
daa
add
jbe
call
out
or
push
mov
jne
fstps
into
mov
sti
jns
int
cli
shll
inc
roll
jo
test
lods
xchg
adc
std
jno
cmp
jmp
punpcklwd
cld
xchg
jmp
icebp
popf
lahf
and
movsl
and
xor
nop
ljmp
cmp
xchg
pushf
mov
jno
adc
inc
jecxz
fidivl
cvtdq2ps
pop
add
push
jnp
fstps
pushaw
adc
clc
test
fnsave
sbb
repz
ds
fcompl
orb
cmc
popf
jl
lods
cmp
xorl
or
repnz
mov
inc
pop
cmp
jg
adc
jle
sahf
fldl
sti
in
mov
sbb
orl
pop
mov
adc
lods
sbb
sub
and
fidivrs
loope
leave
dec
sbb
es
std
and
dec
adc
ljmp
out
sub
pop
or
pop
es
out
pop
sbbb
shr
jmp
cli
jmp
in
push
test
in
ss
or
jle
scas
data16
nop
iret
cmp
lret
jo
mov
pop
sbb
jle
push
cli
pop
js
and
jle
lcall
lret
or
pop
mov
insl
mov
or
lahf
div
ficomps
mov
ret
jmp
in
adc
fsubrs
lods
mov
push
out
mov
and
sub
mov
dec
sti
std
xor
testl
sub
out
jno
add
inc
xor
arpl
dec
in
cmp
push
cmp
xchg
pop
pusha
outsl
dec
fcoms
mov
ljmp
sbb
add
popa
pop
aas
inc
clc
adc
xchg
mov
jns
test
out
xor
lock
adc
repz
addb
dec
fs
mov
adc
jl
push
jae
pop
mov
lret
mov
push
adc
int
cmp
dec
mov
ss
pusha
mov
dec
xchg
dec
xor
mov
in
cmp
adc
and
mov
mov
mov
call
sti
mov
jb
xchg
out
mov
mov
cmp
mov
dec
iret
push
popa
inc
fwait
xor
int
mov
or
push
push
and
gs
adc
xchg
adc
dec
mov
sarl
xor
scas
sbb
int3
std
sahf
pusha
dec
mov
in
jno
daa
push
push
or
sub
push
dec
push
push
xchg
dec
stos
imull
and
push
mov
mov
sub
sub
fildll
daa
mov
push
loop
add
mov
mov
pop
pop
or
scas
in
int3
outsl
pop
arpl
into
add
in
mov
adc
lods
std
pop
aas
out
stos
pop
in
jge
cmp
outsl
jg
inc
cmp
fldl
nop
push
inc
jecxz
mov
push
lahf
dec
sub
mov
lea
test
and
mov
push
jo
jne
push
test
das
out
xor
mov
mov
xchg
sub
jnp
add
shl
stc
xchg
mov
das
lahf
pop
lods
push
fists
movsb
jne
push
cmp
mov
and
inc
or
lods
push
jl
andl
lods
je
mov
mov
scas
add
jno
movsl
lahf
mov
or
outsb
or
rol
xchg
or
ret
mul
fcoml
leave
hlt
pop
out
lret
xchg
int3
jge
movsl
jmp
test
add
fwait
ret
fmuls
jb
push
bound
insl
daa
pop
pop
push
movsl
pop
out
or
lock
cmpsb
loope
out
and
in
inc
aaa
adcl
sub
fcmovbe
pop
loopne
push
jl
mov
outsl
sub
add
fldl2t
push
arpl
dec
ds
dec
pop
mov
and
sbb
lahf
add
testl
mov
cs
or
sub
fistps
sbb
repnz
add
add
xchg
push
push
xchg
and
push
movq
in
mov
testb
cmp
and
xchg
andl
jne
loopne
movsl
xlat
or
jb
das
add
mov
inc
ds
and
mov
jae
push
cltd
mov
or
popf
add
inc
iret
call
fsubrs
sub
cwtl
and
mov
adc
mov
ret
aad
xchg
lret
xchg
in
fisubrs
cwtl
stc
adc
sub
inc
sbb
xchg
dec
pcmpgtd
das
pusha
xchg
ret
mov
lret
aaa
lods
ja
mov
inc
xchg
fwait
aad
push
clc
jae
dec
and
popa
sub
xchg
sub
push
or
adc
stc
ljmp
fldl2e
fwait
sub
fnstcw
das
inc
add
andb
add
dec
jns
out
xor
nop
lahf
adc
jl
pushf
out
fadd
jmp
call
xchg
arpl
jecxz
xchg
sub
imul
sbb
inc
cmc
inc
push
mov
inc
xchg
outsb
jg
cmp
inc
inc
xlat
or
shrl
dec
popf
mov
mov
xchg
or
pop
jno
ja
ss
shll
fadds
xor
repz
xchg
rorl
sti
and
loopne
cmpsb
arpl
xchg
pop
mov
inc
icebp
dec
cmpsl
mov
push
movsb
lret
mov
lret
cmp
pop
dec
test
jno
cmpsb
fmul
jnp
icebp
imul
pop
inc
das
lods
adc
inc
or
mov
dec
pop
fdiv
pop
insb
les
les
xchg
popf
mov
or
lods
aas
mov
add
in
mov
test
mov
cmp
xchg
add
lcall
lret
clc
pop
pop
push
icebp
int3
sarl
lock
icebp
shrl
testl
xchg
lret
jmp
scas
fs
fdivrl
or
and
test
mov
idivl
cmpsl
adcb
sbb
lret
mov
in
js
jae
out
jb
mov
test
andb
lods
sahf
leave
cmpl
lahf
je
jl
inc
and
lret
and
ss
xchg
add
int
loope
insb
adc
into
imul
cmp
sub
stc
inc
push
xor
jp
mov
xor
adc
and
lds
cwtl
mov
in
je
jo
mov
pop
jp
push
dec
jl
pop
mov
fdivrl
mov
int
cmpl
ret
mov
mov
mov
mov
or
loope
imull
pop
in
lea
ds
sub
std
sub
mov
pop
pop
ljmp
popa
imul
mov
cmpsl
adc
dec
mov
int3
fidivs
add
rclb
aaa
dec
pop
loop
adc
sahf
sub
aas
inc
jns
iret
push
addr16
test
and
and
xchg
cwtl
jp
popf
pop
inc
out
movsl
mov
lahf
and
cmp
mov
add
dec
hlt
jo
ss
je
and
lods
fidivrl
andb
in
insb
mov
sbb
xor
dec
lahf
push
mov
out
lea
repnz
and
addl
mov
pop
fadd
inc
mov
push
jno
into
fistl
jnp
aaa
or
add
mov
add
xchg
or
gs
aas
fistl
addl
jp
pop
ret
fimuls
pop
mov
dec
cmp
pop
push
pop
sub
mov
cvtpi2ps
das
movsb
push
into
jle
rcrl
lahf
xor
mov
add
xlat
in
test
or
nop
mov
aaa
xor
das
mov
fs
call
in
ljmp
bound
in
pop
mov
ret
xchg
dec
jmp
mov
xor
out
sbb
cmp
lcall
orl
add
and
and
icebp
iret
mov
sti
mov
sub
mov
rolw
mov
pop
fimull
mov
push
scas
jne
in
mov
loop
sbb
sbb
mov
push
inc
shr
rol
mov
fcmovnbe
mov
fsubr
inc
fimull
fisubrl
test
test
orl
outsl
fcomps
repnz
das
or
cmp
or
fwait
std
out
mov
enter
mov
shrb
pop
dec
cld
int3
cmpsl
xor
jae
mov
test
sbbl
xor
dec
enter
mov
jo
test
mov
nop
in
mov
jbe
enter
int3
into
and
lods
push
stc
in
add
cmpsb
xchg
add
sub
mov
xchg
mov
loope
packuswb
sahf
and
inc
stc
jmp
imul
cmp
inc
int
in
push
jno
fisttpl
sbb
and
sbb
mov
push
xchg
incl
sbb
std
cwtl
and
push
ljmp
aam
test
ret
loope
stos
out
dec
fidivl
and
aad
dec
xlat
xor
dec
insb
pop
jb
or
pop
lock
xor
stc
imul
cmp
or
push
mov
repz
cltd
repz
negl
push
mov
cmc
jle
sarl
pop
fs
jg
div
enter
push
stos
or
xchg
sbb
in
mov
rorl
loop
add
pop
cmp
fcomi
nop
ret
inc
cmp
add
lods
cmp
xor
sarl
sti
roll
pop
repz
inc
pop
xlat
pop
mov
jb
or
out
outsb
mov
aad
mov
out
stos
daa
lock
sbb
sar
push
sbb
jge
mov
ret
loopne
adc
in
inc
sub
adc
xchg
push
lds
cmp
or
mov
fwait
inc
lret
addb
xor
out
pop
bound
xchg
lcall
clc
pop
es
sbb
mov
gs
clc
jbe
in
and
push
xchg
and
outsl
push
add
push
sub
sti
push
scas
cltd
or
rol
jb
mov
sahf
mov
sub
test
adc
sbb
ret
cltd
cmp
jg
mov
sub
cmp
fs
xorb
jb
pop
cmpsb
lret
add
pop
cltd
inc
aas
inc
lcall
jne
movsl
mul
leave
in
stos
insb
divl
movsb
shrb
adc
ret
das
dec
ljmp
in
scas
xchg
push
mov
xlat
inc
insl
fwait
in
push
and
xchg
adc
cmpsb
cwtl
jecxz
aaa
loope
or
cmp
addr16
inc
pop
and
inc
insb
jb
shl
xor
test
out
stc
enter
inc
daa
sub
daa
flds
jg
test
mov
cwtl
cmp
pinsrw
int3
xchg
jo
mov
xchg
arpl
pop
outsl
jbe
inc
xor
ret
bound
adc
pop
xchg
inc
mov
mov
in
imul
das
mov
fistpl
push
xchg
movsb
je
inc
clc
mov
lret
sbb
aam
inc
ss
aas
daa
jecxz
push
inc
orl
jg
xchg
cmp
dec
roll
xor
mov
ss
mov
ficoms
push
fmul
sub
sub
xchg
fnstenv
xor
test
fadds
add
iret
push
aas
mov
movsb
enter
jo
jl
xchg
adc
enter
loope
sub
das
imul
cltd
push
cli
xchg
imul
in
push
nop
scas
add
jb
ss
jnp
add
sub
or
sti
add
stos
mov
push
mov
aam
and
cmp
pushf
mov
cwtl
jb
dec
xor
mov
dec
inc
or
sbb
das
pushl
scas
dec
fs
sti
push
lret
jnp
popa
mov
shrl
hlt
aaa
mov
faddp
sbbb
shrl
jmp
clc
sarl
sbb
call
jnp
dec
cld
or
popa
and
xor
sbb
sub
or
shll
cli
cltd
imul
jmp
and
pop
fwait
out
cmp
adc
push
cmp
scas
pop
fimull
lret
mov
mov
mov
jp
cmpl
inc
js
xchg
push
dec
cld
xchg
fnstsw
pop
or
or
xor
add
mov
ret
aam
call
dec
fsubp
icebp
mov
ret
test
mov
sub
fdiv
and
call
sbb
fidivrs
jnp
push
mov
sbb
jns
ja
rcll
pop
je
mov
xorl
pop
mov
sub
scas
lds
fwait
in
por
lock
mov
mov
jp
negl
in
xor
inc
sbb
in
fmuls
gs
inc
test
outsl
dec
and
inc
out
mov
pxor
movsl
or
stos
ds
stos
fisttpll
lds
ret
xlat
neg
push
mov
out
fcoms
rclb
insb
pop
fsub
inc
sbb
dec
mov
fidivl
sarl
or
jne
fimull
ds
cld
lds
outsl
inc
test
and
clc
and
hlt
jno
inc
dec
shrb
jge
ds
mov
in
and
mov
aas
je
rcrl
mov
gs
inc
xchg
mov
cmp
fwait
aam
adc
add
out
sahf
lahf
xchg
inc
dec
jns
push
adc
lahf
cmp
mov
and
inc
sbb
mov
inc
stos
fisubl
lock
cmp
adc
mov
es
push
les
inc
xchg
or
xor
pop
outsb
xor
or
dec
bound
push
lods
in
cmp
pop
repz
push
das
push
testl
ret
in
movsl
mov
ja
jge
jnp
and
fsubrl
inc
cmp
movsb
jle
pop
push
in
push
imul
xchg
dec
cwtl
mov
cs
hlt
ss
shrb
adc
lds
mov
xor
xchg
je
pop
enter
into
mov
fmuls
pop
inc
and
icebp
aas
fldl
and
data16
mov
mov
sub
cmpsb
aaa
inc
aad
add
hlt
add
cmp
inc
jb
aad
popa
int3
mov
and
in
xchg
adc
divl
scas
jge
sbb
stos
sahf
sbb
into
clc
leave
mulb
popf
ss
cmp
rorl
pop
cmp
xor
arpl
es
repnz
mov
nop
mov
in
push
nop
aad
fwait
dec
in
psllq
mov
insl
push
lcall
dec
fcoms
xchg
std
inc
xchg
arpl
ljmp
inc
bound
inc
int
daa
jmp
ret
adc
jb
xchg
mov
sub
in
pop
lods
inc
dec
imul
bound
outsl
stos
out
call
aam
adc
std
test
cmpsl
insl
dec
jg
or
jecxz
and
lahf
add
mov
stos
pop
data16
test
jp
outsl
fwait
inc
sarb
push
int
push
push
dec
sub
or
iretw
pop
add
add
jge
inc
mov
les
jne
test
push
lock
sbb
lds
inc
mov
lea
ja
xchg
and
pop
xorl
sbb
push
lret
hlt
sbb
les
cltd
fisttpll
test
sbbl
xchg
imul
dec
inc
or
sub
test
pop
loopne
rcrb
rcrb
push
mov
ja
mov
pop
stc
jmp
jae
outsl
add
hlt
and
fs
enter
jmp
inc
leave
mov
lea
cmpsb
adc
fwait
and
push
push
rcrl
push
rcr
mov
enter
lods
lahf
push
mov
jno
imul
fdivrs
xchg
lret
mov
movsb
aaa
mov
mov
mov
dec
sub
outsb
sbb
ret
ret
test
int3
in
shll
xchg
adc
fs
and
stos
loopne
mov
jmp
lock
lods
test
pop
mov
adc
imul
out
xchg
das
jns
add
fs
bound
lock
dec
popa
dec
ljmp
xor
mov
add
sub
fs
xor
fwait
loopne
lods
xchg
scas
movl
sahf
ja
dec
push
cmp
mov
inc
lret
pop
mov
inc
cmp
jle
scas
das
mov
lds
mov
ret
int
cmpsb
xor
and
mov
mov
mov
jl
or
jns
jmpw
mov
cli
dec
sbb
icebp
test
std
jge
mov
lds
push
dec
rcrl
fcmovnb
in
aam
mull
ljmp
testl
out
pop
dec
jmp
push
mov
out
test
pop
sub
sbb
mov
or
sti
mov
jmp
fcomi
xchg
mov
add
daa
pop
sbb
mov
jecxz
inc
test
je
cmpsb
push
movsb
lahf
sbb
lods
xor
bound
mov
js
sub
outsb
adc
dec
shr
aad
and
inc
aad
push
mov
xchg
test
and
out
or
mov
pop
mov
in
sub
or
push
cltd
icebp
add
test
push
lock
add
loope
push
sbb
cmp
test
ljmp
fidivrl
lahf
into
sub
xchg
push
cli
into
faddp
addr16
les
movsl
sub
jns
pop
andb
mov
fnstsw
out
mov
arpl
sarb
push
adc
nop
pause
and
test
inc
insb
imul
pop
mov
mov
jmp
mov
sub
xchg
popa
mov
inc
pop
pop
leave
jg
stos
sbb
ljmp
dec
mov
sbb
icebp
pop
test
in
adc
lret
inc
pop
sbb
sbb
lock
cltd
and
in
lods
and
mov
jb
lret
bound
jo
add
adc
mov
loope
jge
fsubl
repnz
rorb
xor
movsl
or
addb
xor
mov
add
mov
push
adc
cmp
data16
ljmp
lods
and
scas
jg
mov
imul
pop
frstor
mov
scas
add
test
xchg
push
outsb
repz
imul
outsb
or
xchg
and
dec
cmp
or
arpl
dec
ljmp
or
sub
cwtl
andb
imull
call
mov
and
cs
in
es
xchg
loop
cmp
loope
insl
in
mov
mov
ja
gs
sbb
cltd
or
cmpsb
mov
xchg
add
add
push
pop
jmp
je
xor
insb
push
pop
shll
cmp
lret
xchg
fidivrs
push
pop
mov
pop
push
sub
push
push
lea
mov
shrl
nop
mov
ret
mov
sbb
xor
ret
add
push
jno
lea
test
clc
imul
inc
cmp
inc
es
push
push
and
dec
sbb
mov
add
mov
das
mulb
popf
sub
mov
jg
push
pop
shr
xchg
cli
orb
or
insl
data16
xchg
test
lods
je
decb
addb
adc
xchg
les
mov
push
test
sahf
pop
frstor
out
dec
jge
jp
adc
xchg
adc
mov
lret
out
mov
stos
loop
mov
fsubr
stc
daa
jae
pop
mov
or
addb
lret
inc
or
dec
lret
lea
pop
loop
cmp
mov
insl
cmp
mov
out
hlt
dec
cmp
add
mov
mov
fdivrl
mov
mov
xchg
sub
arpl
rcll
movsl
idivb
xchg
ds
dec
mov
cli
pop
je
js
push
cmp
std
sti
iret
es
adc
out
movsl
lods
test
xchg
mov
ds
xchg
pop
mov
cs
mulb
cmp
mov
das
push
mov
jne
push
ficoml
andl
stos
insl
pop
or
push
enter
imul
hlt
sub
ret
push
jmp
or
test
lcall
or
ror
add
hlt
xchg
mov
lahf
jns
jae
and
add
mov
pop
push
xchg
pop
movsl
std
sbb
adc
loop
xchg
test
xor
dec
cmpsb
jno
ret
adc
or
inc
cmp
dec
pop
ja
pop
and
mov
call
in
enter
test
cmc
sub
popf
jge
lock
mov
clc
lret
mov
xor
jmp
jecxz
daa
icebp
hlt
or
cmpsb
lods
fidivrs
fstl
sbb
and
xchg
cltd
add
inc
mov
dec
dec
adc
sub
sbb
inc
rorb
inc
fisubrl
hlt
jmp
inc
mov
out
sar
aam
mov
fstpt
pushf
inc
fnstsw
xchg
push
mov
xchg
cmp
xor
adc
cmp
in
fisttpl
cs
adc
mov
xchg
sub
push
xor
push
mov
adc
imul
cltd
ds
adc
add
jbe
dec
mov
nop
subb
mov
fwait
dec
insb
lods
sub
push
and
cs
and
sbb
adc
pushf
nop
mov
push
stc
inc
nop
mov
add
inc
leave
dec
mov
js
mov
ds
dec
mov
cmpsb
xchg
mov
xchg
call
pushf
inc
mov
add
aam
int3
pop
cmp
adc
fistpl
pop
mov
inc
mov
stos
xor
cmp
fnstcw
rcrb
nop
pop
add
cmpsl
adc
sbb
jns
mov
fldt
shll
aad
addr16
and
jb
cmp
xchg
movl
push
sub
push
cmp
mov
test
adc
vrsqrtps
test
lea
in
add
ss
inc
daa
pop
arpl
cs
xor
mov
sti
into
in
sbb
bound
cmp
inc
xchg
mov
jo
mov
cltd
push
cmp
and
pop
mov
mov
mov
mov
fbstp
or
fnstcw
and
mov
add
cmp
lcall
lret
cmp
xor
mov
fsubrs
sarl
pop
ret
pop
jne
mov
ja
notl
aam
push
mov
sub
mov
pop
add
ja
pop
push
leave
js
jmp
mov
stos
inc
shl
mov
es
bound
out
xchg
mov
inc
cmp
stc
xchg
jp
cmp
insl
jge
cs
negl
rorl
loopne
pop
ljmp
cmp
sub
repz
enter
cli
xor
outsb
adc
sbb
movsb
daa
outsb
test
pop
mov
das
mov
test
and
int
int3
std
sbb
jmp
jmp
scas
imul
push
shrl
and
xlat
imul
packsswb
insb
inc
int3
add
outsl
push
leave
pop
dec
add
mov
sub
mov
jge
insl
dec
sub
push
loopne
and
insl
xor
add
in
jbe
movsl
gs
popf
adc
outsb
inc
or
je
adc
mov
dec
in
fstps
xorl
fldt
packssdw
int3
ljmp
in
push
fidivrs
xchg
mov
and
dec
nop
and
scas
mov
mov
sti
push
jecxz
dec
loop
jnp
xchg
inc
out
jnp
cli
adc
sbb
ds
cmp
and
cwtl
enter
scas
sub
rcrl
ret
in
cld
addl
sbb
pushf
das
push
xor
sub
clc
pop
jl
adc
test
and
scas
cmp
inc
insl
mov
mov
insl
loopne
lcall
daa
movsl
ret
push
inc
cltd
lcall
test
jge
pop
add
cmp
ljmp
mov
sbb
pop
stos
mov
test
test
mov
dec
inc
xor
lods
and
iret
fstpt
dec
rcr
xchg
lock
repz
jge
rorl
movsl
xchg
les
mov
xor
stos
imul
adc
sti
mov
jl
mov
adc
loopne
gs
inc
sub
cltd
inc
ret
sub
fucom
mov
aam
pop
imul
lret
mov
cmp
xchg
clc
ss
cmp
cmp
or
inc
mov
pop
sbb
divb
mov
adc
sub
out
aad
loopne
xchg
pop
gs
fs
fisttps
sbb
aad
push
jnp
adc
rcrl
loop
xor
dec
aad
sahf
cltd
gs
call
mulb
xchg
mov
add
mov
in
inc
or
mov
lock
fisubrl
mov
repnz
stos
xchg
push
fucomi
ret
cmpb
jno
notb
mov
pop
push
sub
out
in
in
inc
int
adc
lcall
aaa
or
pop
lods
dec
imull
ret
inc
push
mov
mov
fwait
sbb
dec
cmp
pop
imul
scas
jmp
jae
and
pusha
pop
mov
fmulp
jmp
icebp
lret
divb
or
jle
xor
sbb
pop
and
cmp
jne
out
sbbb
cld
xor
ss
cs
pop
jne
mov
bound
shlb
cld
sahf
cmp
mov
add
xor
cmpsl
cmpsb
cmc
nop
popa
dec
jno
das
jp
xcrypt-cbc
cmpsl
adc
mov
cli
lret
adc
or
or
add
out
cmpsb
stos
ror
fwait
daa
xor
pop
imul
aaa
fmulp
xchg
and
mov
int3
or
pop
xor
sbb
dec
nop
pop
inc
stc
adc
les
cmp
in
adc
adc
lcall
xchg
insl
mov
popa
dec
or
inc
add
out
pop
adc
sahf
outsl
mov
pop
dec
mov
xor
iret
sub
jno
cmpsb
mov
cmp
mov
popa
imul
jp
mov
xor
push
mov
cmp
lods
add
and
inc
sbb
test
adc
ror
and
jne
or
sub
push
dec
xchg
dec
fwait
push
notl
aad
push
or
push
sbb
inc
mov
out
push
cmp
test
jmp
lret
orb
and
lock
mov
dec
sub
push
clc
into
ret
xor
dec
push
insb
pop
pop
push
sbb
lock
mov
lret
xor
sbb
je
stos
jg
enter
les
in
ja
and
jecxz
fsubl
addr16
subl
pushf
mov
or
flds
lods
insb
clc
test
adc
xlat
cli
jge
push
cmp
addl
scas
bound
data16
test
ret
mov
lahf
hlt
popl
cmp
xchg
inc
ds
leave
hlt
idivb
jge,pt
iret
sbb
sbb
push
mov
pushl
shl
loopne
jp
xor
jns
pushf
sub
sbb
mov
ja
push
subb
dec
xlat
sbb
and
stos
pushf
test
out
popf
cmp
mov
rcll
mov
and
and
cmp
daa
mov
or
lret
xor
jecxz
lret
je
outsb
inc
sarb
jo
movsl
ljmp
sub
or
dec
mov
pusha
mov
jo
shrb
daa
jle
xor
adc
adc
add
cwtl
and
pop
mov
inc
xchg
imul
jle
jbe
loope
cmpsb
cmp
lahf
mov
movsl
out
push
mov
test
fcoml
xor
lock
dec
sbb
mov
and
jne
test
mov
shlb
jne
mov
out
pop
sti
sub
and
push
push
pop
shrb
mulb
inc
push
cmpsb
xchg
mov
xor
scas
lds
insl
aam
cmp
jne
stc
mov
call
pop
cmp
pop
lods
sub
callw
jge
sbb
aad
test
cld
rcll
repnz
insl
inc
sbb
ret
mov
lahf
fcoml
cmp
and
push
xor
cmc
leave
mov
shrl
ds
push
mov
add
dec
or
dec
mov
inc
shr
adc
xchg
xor
mov
mov
xorb
jae
popf
jp
xchg
xlat
scas
bound
shll
rol
and
test
or
and
lret
inc
and
dec
inc
les
leave
pop
cli
ds
or
test
scas
ljmp
add
cmp
fnstsw
xor
pop
lcall
inc
jl
dec
add
std
lret
dec
sub
dec
cmp
push
jns
scas
stos
sahf
sti
jns
mov
imul
ret
je,pn
mov
add
pusha
lret
add
dec
mov
mov
ret
and
in
jle
dec
addr16
mov
adc
aaa
lcall
mov
filds
lea
jno
sbb
mov
in
cs
shrl
push
jl
and
adc
adc
pop
nop/reserved
sub
mov
orb
roll
bound
icebp
mov
sub
icebp
lret
sar
mov
jns
xor
xor
jp
cltd
inc
xchg
mov
xchg
nop
decl
push
dec
mov
cli
lock
aas
dec
out
inc
and
insb
int3
cli
fdivrp
mov
mov
ss
inc
jae
sti
ljmp
ftst
adc
movsb
insb
out
fcmovbe
mov
aad
xchg
xchg
ret
inc
insb
inc
dec
mov
shlb
jg
je
pop
inc
push
cmp
dec
movsl
int
mov
xchg
flds
nop
aad
xchg
and
sahf
in
loop
xchg
mov
cmp
adc
jno
sub
add
push
jle
inc
cltd
pusha
xor
xor
push
mov
sbb
jg
push
mov
fcmovbe
xchg
lock
cmp
rolb
push
hlt
cmp
jp
imul
orb
push
sbbb
bnd
aad
enter
cmp
cmp
movsl
popf
mov
mov
xor
in
push
mov
push
push
mov
test
jge
je
xor
ffreep
inc
and
xchg
jle
cmp
sub
and
fcmovnbe
mov
enter
pop
jb
cs
movl
orb
mov
fimuls
dec
jge
cmp
cmc
mov
loopne
push
out
cmp
pop
jo
and
cwtl
in
into
rcl
lock
jg
ret
enter
jno
aaa
lods
mov
cmp
xorb
out
sbb
jnp
lock
enter
xchg
scas
pop
outsl
push
adc
popf
cmc
sub
sbb
sub
add
out
outsl
cmpsb
orl
xchg
pop
mov
cmpsl
pushf
dec
pop
jno
je
inc
cmpl
xor
or
loope
inc
or
pop
xlat
jmp
enter
mov
aaa
repnz
mov
cmc
mov
std
stc
xchg
cltd
dec
and
in
test
dec
test
inc
in
sub
sbb
iret
aam
into
int
push
call
mov
push
pop
jno
addb
add
jge
dec
outsb
push
adc
addr16
stc
les
mov
in
add
and
mov
mov
dec
dec
push
out
outsl
gs
psubw
in
mov
xchg
fsubr
xchg
dec
lea
fdivr
subb
sbb
xchg
dec
lret
mov
push
fwait
dec
aaa
ret
jo
push
jp
mov
push
mov
xor
nop
jp
jno
lret
or
adc
out
in
inc
cmpb
push
daa
int
arpl
mov
rorl
xchg
into
outsb
sbb
hlt
test
mov
loopne
add
pop
dec
push
int3
push
or
dec
shl
xor
mov
adcl
int3
loope
pop
push
out
push
outsb
scas
mov
in
sbbl
pop
adc
mov
rcll
data16
insb
in
in
dec
jecxz
mov
fwait
pop
pop
pop
jecxz
and
icebp
or
add
inc
fisttpl
adc
xor
shr
pop
shll
cmpsb
add
fcmove
je
cmpsb
lret
cmpb
adc
fisubl
fnsave
cmp
stos
negl
mov
dec
mov
in
jae
sub
loop
add
daa
push
arpl
aam
mov
cmp
loopne
cmp
enter
aam
jecxz
cltd
push
in
in
inc
and
divl
cmpsl
pop
xchg
sub
mov
pop
jmp
std
xchg
lock
sbb
dec
loopne
aam
lret
sub
inc
lds
pop
frstor
enter
xchg
lods
mov
mov
pop
into
in
ss
orb
and
repz
cmpsl
sbb
xchg
pushf
pop
lock
ja
xchg
sub
inc
aad
inc
push
adc
jmp
pop
and
test
pop
stos
enter
fistpl
jb
push
jbe
dec
sbb
mov
xchg
inc
aam
ffreep
shrl
testb
mov
repz
or
inc
sbb
jmp
lret
mov
jmp
stos
lods
sub
dec
mov
add
adc
out
push
dec
inc
movb
jmp
nop
xor
dec
push
cmp
jp
insl
xchg
int
aaa
jnp
and
data16
jnp
mov
ds
mov
push
pop
sti
mov
enter
sub
das
addb
sarl
sbb
lods
sub
xor
fdivl
jae
xchg
push
hlt
xor
and
les
shrb
out
add
rorb
sbb
mov
xor
add
cmc
mov
adc
pop
popa
xor
add
je
jae
ss
scas
mov
xor
inc
cmpsl
loop
cmp
and
mov
mov
mov
movsb
test
popa
into
imul
pop
lcall
iret
gs
jmp
mov
filds
fsubrs
xchg
lahf
mov
cli
hlt
pusha
inc
mov
scas
cmpl
out
cltd
cmp
or
aaa
sub
lret
dec
mov
mov
aas
jb
js
push
lea
pop
mov
mov
cmpsl
push
jo
cwtl
mov
fldt
mov
adc
and
jle
push
idivb
mov
mov
pop
into
decb
xchg
fstl
jns
daa
idivb
jae
shlb
add
or
insl
out
fadds
sti
hlt
lea
ror
out
enter
push
sbb
ss
mov
pop
xor
cmp
outsl
cltd
fimuls
jp
or
xor
xor
xor
out
or
shll
jbe
call
add
mov
outsb
enter
mov
outsl
in
test
xchg
mov
xlat
inc
sbb
xor
aaa
sub
and
mov
addr16
dec
andl
push
or
mov
in
push
sbb
xor
pop
inc
cmp
and
ljmp
pop
out
sub
inc
and
stos
xlat
inc
mov
fiaddl
gs
lahf
out
in
cmp
rep
sbb
lea
cmp
test
pushf
popa
xor
mov
adc
insl
sub
pop
sti
pop
out
jecxz
jnp
imul
mov
fldenv
xchg
lods
add
adc
inc
stos
xlat
mov
rcl
sbb
cmpsl
add
sarl
fmull
jnp
inc
and
dec
pop
cmp
mov
mov
or
push
jl
pushf
mov
xor
outsl
loopne
sub
sbb
jp
mov
fwait
jmp
push
addr16
cmp
mov
sub
decb
push
shrl
xchg
mov
repnz
xchg
lret
jae
icebp
inc
es
js
inc
scas
data16
lahf
jge
push
jmp
adc
daa
test
inc
mov
pop
sti
repnz
mov
out
jp
dec
jp
repz
test
inc
loopne
loopne
sub
bound
pushf
cmpl
xchg
out
rcrl
jnp
xor
andl
mov
jge
movsb
fdiv
movsb
nop
jp
push
ret
and
xchg
notl
fs
andl
mov
lods
aam
inc
sub
fisubs
pushf
xchg
jg
mov
enter
xor
jmp
es
outsl
ret
ss
pop
cld
cmp
scas
xchg
subb
in
shrb
enter
mov
xchg
lret
mov
loop
dec
fadd
sbb
ret
push
insb
xor
mov
ds
iret
mov
xchg
pcmpeqd
push
xchg
in
jmp
repz
adc
inc
je
adc
xchg
mov
loop
ss
push
mov
or
imull
aam
mov
mov
pop
jp
inc
xor
loope
pop
sbb
sub
icebp
push
shlb
jo
cs
push
orb
int
dec
mov
push
outsb
inc
jge
xor
popf
jle
jne
pop
cmc
out
and
sti
movsl
or
aaa
cli
mov
xchg
push
out
pushf
mov
cmp
push
repz
or
push
xor
sahf
pop
mov
stos
lock
test
xorb
ret
ret
int3
jle
dec
stos
je
repnz
adc
clc
pop
rcrb
and
jno
lret
xchg
inc
xchg
test
data16
sahf
dec
cli
pushf
leave
fsts
sti
mov
pop
js
mov
loopne
inc
push
xor
in
mov
jp
lret
stos
dec
adc
fists
data16
jbe
dec
cmp
sub
dec
xchg
sbb
ds
push
xchg
inc
mov
orl
popa
sahf
lods
fcoms
xor
mov
fbstp
in
cmc
mov
push
aaa
repnz
inc
sbb
xor
fdivs
clc
dec
icebp
cltd
xchg
sahf
dec
push
adc
fsub
sub
loop
pop
rol
out
cld
inc
cmp
fnstsw
cmp
into
mov
js
ret
mov
inc
inc
pop
push
add
jbe
or
sub
xlat
inc
pushf
scas
cmp
xchg
in
xchg
loopne
ret
outsb
mov
xor
mov
aam
xchg
insl
or
xor
pop
mov
mov
mov
push
mov
jne
mov
add
mov
inc
cs
ljmp
sbb
les
cmpsl
rcrb
jnp
hlt
push
clc
adc
cmp
movsb
pushf
ficoms
incb
jae,pn
mov
sub
mov
inc
pop
lcall
adc
mov
or
test
push
mov
and
adc
adc
lods
mov
mov
xchg
dec
sbb
mov
testb
sub
clc
pop
and
ja
push
ljmp
insl
cld
outsl
fs
les
mov
out
mov
clc
das
mov
stos
mov
and
jne
and
push
xchg
xor
inc
rcrb
xchg
out
and
push
push
push
push
jns
jl
pop
jg
sub
ret
push
jo
jge
cmp
test
pop
mov
jns
data16
inc
jno
sahf
sti
sbb
mov
test
pop
push
jnp
dec
scas
cmp
cltd
sbb
lcall
jge
xor
inc
pop
dec
popf
xchg
es
aas
test
out
mov
ret
mov
sub
lcall
add
repz
sbbl
outsb
andl
int
jbe
cmpsb
sub
cmc
ds
cmc
jg
adc
mov
repnz
insb
fildll
pop
out
add
xlat
add
shlb
pusha
push
loop
jp
adc
out
gs
out
shrb
mov
icebp
lock
decb
jbe
movsl
cmp
xor
adc
cmp
inc
mov
push
repz
mov
pop
cmpsb
jae
sub
jne
dec
pusha
lret
ja
pop
xchg
iret
dec
and
decl
sti
int
xchg
mov
outsb
sbbb
sbb
add
aam
dec
test
stos
insb
lcall
aam
sarl
xchg
xchg
std
in
push
push
push
fsubrs
lods
sbb
insl
pop
pop
jne
push
iret
and
add
daa
mov
lock
xor
bound
inc
mov
data16
add
loopne
adc
dec
mov
xor
pop
loope
mov
rol
sbb
mov
lods
cmpsl
mov
sub
test
in
sub
outsb
loop
and
insb
iret
pop
js
dec
test
out
push
inc
or
jne
std
aam
sahf
fcmovu
bound
popa
leave
jb
pop
mov
ret
mov
mov
shrb
sbb
scas
std
popf
test
push
ficoml
add
int
enter
mov
inc
mov
or
cwtl
pop
add
sbb
rclb
jp
ljmp
cmc
push
aaa
xlat
jo
mov
lret
mov
aas
std
call
dec
sbb
fisttpll
pop
fcompl
enter
add
clc
jbe
lret
cli
imul
arpl
pop
ret
cmc
mov
add
cmc
jne
adc
sti
dec
cli
les
pop
daa
xor
cmp
scas
jns
push
in
sbb
hlt
pop
or
add
jmp
jae
mov
mov
in
xchg
enter
cmpb
inc
iret
and
scas
push
inc
pop
dec
mov
adc
out
jge
les
mov
daa
nop
int
stc
movsl
push
pop
mov
scas
insb
ja
dec
ja
push
inc
cmp
pop
addr16
push
scas
test
lret
mov
stc
push
xchg
add
cmpsl
or
mov
sahf
and
sbb
rorb
inc
or
je,pn
push
sti
leave
les
add
rorb
lods
add
add
loope
mov
fcomp
dec
inc
stos
and
in
lods
ja
cmp
pop
shl
sub
sbbl
sbbb
and
in
inc
lcall
xchg
lret
lret
in
dec
jnp
ja
inc
sbbb
addr16
push
jbe
xor
das
xchg
adc
mov
pop
lret
lcall
jle
shl
mov
or
ret
ljmp
and
mov
inc
stos
popf
pavgb
int
insb
xchg
shlb
sbb
and
ret
mov
inc
push
adc
stc
mov
mov
pushf
fwait
push
jb
sbb
dec
xchg
iret
dec
sti
inc
mov
dec
les
mov
mov
xchg
scas
imul
dec
ror
sub
divl
mov
sbb
push
mov
pop
jnp
call
mov
out
mov
push
jmp
push
jg
mov
into
gs
fldl
push
cmc
add
fwait
mov
add
les
xchg
sbb
popa
test
sub
xchg
adc
fildl
shrl
ja
cs
sbb
cmp
jmp
mov
lock
test
sub
cwtl
nop
mov
xor
jnp
xorb
inc
pop
mov
aad
and
xor
add
add
lods
cltd
ss
cmp
pop
lahf
movsb
rorl
pop
enter
ret
rcll
adc
mov
in
lret
mov
cmpsb
cwtl
mov
test
scas
pop
dec
adc
inc
dec
std
fisubs
inc
lock
mov
adc
xchg
jp
movsl
sub
insl
imulb
lods
xchg
or
push
insb
xchg
leave
jns
bound
popa
test
xor
push
out
out
arpl
sti
or
adc
pop
lahf
cmpsw
nop
mov
push
aad
jmp
repz
cmp
arpl
xchg
sbb
or
dec
ret
mov
mov
mov
sub
lock
add
fildll
jb
dec
sbb
or
dec
pop
xlat
mov
adc
pop
and
push
out
lds
mov
mov
stc
leave
iret
fsubl
pop
jmp
sahf
shll
fdivrs
mov
sub
call
sbb
inc
mov
lcall
add
std
xor
cmp
push
mov
repnz
lret
adc
jp
xor
orl
inc
adc
jns
mov
fwait
mov
rcrl
gs
dec
leave
pop
in
sarl
pop
push
pop
dec
xchg
xchg
xchg
sbb
push
std
ret
sub
pop
shll
or
mov
add
jbe
repnz
dec
pop
das
mov
sbb
stos
sti
push
xchg
test
adc
jecxz
mov
xchg
jne
mov
fbld
shrb
pop
cwtl
jmp
out
add
jecxz
movsb
fcmovne
loop
lret
push
dec
fdivl
sbb
mov
aaa
push
push
jl
jge
mov
inc
inc
ret
mov
mov
push
repnz
push
ret
sub
mov
bound
mov
es
lcall
mov
add
das
and
fcmovne
cmp
sbb
mov
mov
push
push
push
out
push
in
add
pop
sbb
cwtl
idivb
mov
hlt
out
scas
aaa
dec
jp
rclb
add
pusha
mov
sbb
and
adc
les
adc
rorb
cmp
mov
xchg
mov
sub
wrmsr
push
sbb
xor
test
insl
jb
pop
adc
lcall
insb
out
dec
cwtl
cli
popf
adc
hlt
sbbb
sbb
frstor
repnz
fs
inc
jmp
sbbb
insl
dec
shlb
sbb
pop
cmpsb
fbstp
ret
push
push
imul
mov
insl
lcall
inc
jle
mov
pop
or
or
and
and
outsl
insl
jb
mov
pop
sub
loope
frstor
mov
sbb
ret
out
adc
xchg
lock
adc
jg
sub
xor
cmpb
dec
jae
mov
subl
call
cmp
fldl
jg
mov
jp
subl
push
inc
pop
sub
adc
and
movsl
mov
arpl
nop
inc
or
aaa
outsl
lods
and
dec
add
mov
pop
je
xchg
xchg
lock
dec
lods
out
adc
and
cmp
repnz
inc
test
fistpll
mov
orl
rcll
sbb
dec
imul
aad
xlat
lahf
roll
sbb
lret
les
in
cld
ds
and
xchg
rcrb
shl
les
shll
or
add
mov
in
cmpb
lea
push
leave
push
mov
xor
jg
pop
add
add
ret
cmp
imull
icebp
xchg
pop
mov
mov
adc
repnz
in
mov
mov
mov
outsl
je
fwait
mov
push
xchg
fidivs
or
push
mov
jae
jo
test
xchg
out
clc
cmp
ljmp
call
andl
pop
movsl
out
ret
push
dec
es
fstps
pop
mulb
sbb
and
dec
add
inc
and
jb
push
adc
lcall
inc
xorb
pop
mov
pop
dec
and
jne
jno
es
loopw
lock
jbe
lock
dec
iret
enter
in
adc
jecxz
in
lods
jo
inc
jmp
mov
mov
ret
inc
outsb
push
fs
push
jno
arpl
cwtl
pop
imul
les
mov
mov
adc
mov
stos
cmp
cmp
add
sbb
push
push
in
fiadds
in
nop
out
jle
clc
dec
loop
dec
sarl
mov
and
add
test
insl
cmp
ss
xchg
jmp
sbb
jae
dec
jp
xchg
mov
decb
jne
loop
adc
mov
rclb
aas
jno
mov
xor
adc
dec
insb
in
adc
push
sub
mov
insb
or
aam
jp
dec
push
sbb
pop
sub
or
inc
imul
pop
dec
xlat
add
inc
loop
lods
mov
ds
xchg
or
and
fistps
xor
pop
ret
add
fs
pushf
jno
jmp
scas
pop
sub
inc
jge
and
es
test
push
mov
pop
push
jg
leave
clc
inc
adc
lods
cmp
adc
xchg
push
jnp
push
repz
jns
push
jae
xor
pop
adc
cmp
xchg
lock
sbb
inc
mov
push
stos
lods
loope
dec
mov
mov
jp
fwait
xchg
shrb
mov
or
cmpsl
fdivrp
mov
orb
movsl
push
cmp
cmpsl
xor
js
mov
notb
or
iret
mov
sub
nop
clc
clc
inc
imul
inc
lahf
fldcw
repnz
xor
pop
repnz
cmp
pusha
mov
jbe
add
pop
ja
jnp
hlt
out
loop
jnp
xchg
gs
jecxz
jmp
loope
test
aam
imul
adc
mov
mov
mov
sub
sarl
jns
in
ljmp
je
pop
xchg
imul
add
je
mov
or
gs
push
dec
test
jle
adc
hlt
add
sub
imul
add
and
dec
into
pop
mov
loope
inc
xchg
mov
cli
xor
xor
mov
cli
gs
daa
mov
sub
je
jle
pop
fiadds
pop
mov
int
mov
mov
inc
fidivrs
mov
jb
cmp
inc
fisubl
hlt
jne
adc
mov
int
cwtl
mov
and
inc
dec
es
jge
xor
in
mov
popf
add
jnp
aaa
cmp
int
xor
pop
lea
pop
aaa
push
les
sub
popa
add
adc
jmp
jne
inc
xchg
inc
in
xchg
bound
out
add
push
xor
cmp
cmp
int
push
push
int
pop
jp
test
ds
fiaddl
pop
es
scas
adc
out
mov
test
push
or
lods
into
mov
dec
mov
xchg
jl
stos
out
pop
add
adc
push
fsubrl
int
jp
cltd
and
add
dec
and
pop
sub
lods
cmc
jae
cmp
lods
xlat
scas
dec
mov
insb
mov
dec
adc
hlt
cmp
enter
or
imul
mov
mov
lret
popa
and
divl
pop
cwtl
out
mov
mov
ret
repz
mov
jno
jg
cli
rolb
popf
jne
dec
je
clc
sarb
jb
xor
shlb
in
xor
test
out
sub
stos
pusha
fdivr
push
outsl
jecxz
push
pop
loope
cmpb
imul
mov
push
lods
cmc
mov
xchg
jae
aaa
sahf
loopne
mov
in
mov
dec
outsl
fistl
rorb
lea
dec
clc
sbb
or
inc
sub
out
xor
pop
sbb
jne
mov
mov
pushf
std
add
fwait
mov
cmp
push
testl
dec
pop
and
xor
pop
out
jecxz
sbb
scas
xchg
inc
sbb
popa
scas
cmp
dec
outsl
fdivr
call
adcl
imul
jecxz
nop
jecxz
jbe
and
jno
pop
push
xchg
xchg
jo
xlat
xchg
test
jbe
stc
jl
pop
test
mov
mov
xor
xchg
movsl
mov
sbb
and
jp
mov
cmp
mov
mov
sbb
cs
push
jns
jl
sahf
and
and
repnz
push
inc
push
xchg
addr16
lods
inc
addb
cli
int
sub
xor
inc
or
lds
push
cmpsb
and
daa
es
pop
push
mov
jmp
sbb
stos
lret
in
sbb
pop
scas
jno
jg
lcall
pop
pusha
jle
inc
test
sbb
push
scas
sub
insb
cmpl
out
or
rol
jmp
fwait
pop
jne
mov
adc
loopne
out
jp
pop
insb
js
adc
add
scas
pop
fdivr
imul
lret
add
outsl
cmp
outsl
sub
inc
push
roll
imul
cli
repz
add
mov
loope
jno
bnd
jge
sub
cmpb
mov
rol
mov
popf
in
jo
call
adcl
insl
xchg
push
aad
push
or
dec
cmp
shrl
mov
insl
mov
je
xor
and
inc
pusha
xchg
cwtl
and
fidivs
mov
aam
mov
shll
push
xor
jmp
adc
mov
imul
adc
out
or
repnz
push
jnp
lret
int
repz
pop
repnz
dec
imul
dec
cs
sbb
lea
jecxz
xor
nop
clc
mov
jmp
shr
xchg
ljmp
mov
loop
mov
fcoml
jge
adc
or
xor
xchg
repz
je
addl
das
or
neg
or
jmp
and
sahf
loope
int3
fisubl
mov
jle
js
div
out
and
xchg
test
js
fisubs
lret
divb
loopne
sbb
jp
jns
push
and
jmp
or
cmp
orb
xchg
and
jae
dec
pop
adc
mov
es
popf
cmpsb
mov
clc
dec
lock
xlat
and
xchg
daa
leave
nopl
test
push
imul
cltd
enter
sbb
cmp
add
aaa
mov
jmp
pop
addb
pusha
cwtl
or
rcrl
pushf
xchg
paddsw
add
push
repz
dec
mov
push
dec
pop
mov
out
loopne
inc
rclb
xchg
push
pushf
jbe
mov
mov
outsb
jo
push
int
jne
push
or
xor
pusha
iret
aas
add
roll
xchg
clc
jmp
bound
cmp
aas
xchg
nop
cmp
inc
push
repnz
xchg
sub
testl
sbb
jnp
lods
imull
gs
sub
scas
mov
enter
nop
jno
adc
in
fidivrs
cmp
loopne
iret
sbb
cmpb
inc
pop
repz
lcall
fcoms
aam
pop
fsubrs
imul
dec
push
subb
or
fucomp
mov
lock
cmc
popa
jl
adc
push
data16
mov
inc
cmp
fsubl
fiadds
pop
enter
int
push
cltd
in
pop
add
aas
mov
outsl
mov
andb
mov
fwait
lock
xor
xchg
or
bound
mov
lds
std
pop
cmpsl
loop
pop
sub
xchg
stc
das
repz
out
test
pop
ret
mov
daa
jbe
adc
sub
xor
mov
cmp
sti
psadbw
sub
out
or
mov
push
fiadds
out
mov
test
into
mov
push
push
popl
jle
arpl
stc
lods
mov
call
inc
cmp
pop
mov
cmp
jb
inc
sahf
movsb
cli
mov
inc
or
ljmp
sbb
test
ficomps
push
adc
dec
jge
ret
push
sbb
iret
or
mov
mov
enter
jnp
jle
or
lds
outsl
mov
xor
and
adc
push
push
jmp
dec
jbe
jb
and
outsb
xor
les
in
push
jo
arpl
std
sbb
mov
add
movsb
fwait
add
cli
adc
fs
cmp
lahf
xchg
scas
out
je
or
jg
in
dec
insb
in
int3
add
in
jnp
fadds
cmp
mov
adc
out
mov
loop
cmp
adc
sbb
xchg
lock
mov
nop
or
mov
stos
push
loopne
pop
in
pop
pop
insl
scas
inc
xor
mov
rorb
inc
sbb
pop
dec
out
in
xlat
lret
aaa
mov
sbb
movsl
rclb
int3
or
ljmp
je
sbb
movsb
sahf
and
push
in
jbe
mov
iret
arpl
push
aad
jae
inc
imull
clc
push
mov
jns
test
in
fstpl
sbb
push
gs
push
and
popa
pushl
jl
mov
jl
cmp
xor
jle
in
mov
jo
in
popl
lea
cmpxchg8b
adc
add
rolb
cmp
roll
xchg
dec
fcomps
inc
cltd
scas
insb
js
loopne
xor
fs
mov
add
pop
sbbl
mov
mov
out
or
pop
in
test
cmc
mov
inc
loop
pop
andb
push
shlb
leave
xor
inc
ficompl
fmuls
subl
sbb
das
enter
lock
mov
sbb
adc
or
ss
dec
out
stc
sbb
adc
divb
imul
daa
xchg
or
fadds
mov
or
fdivs
jnp
pop
push
pop
inc
lret
test
lods
dec
cwtl
rcrb
mov
jecxz
mov
sar
jmp
push
and
add
sbb
lret
dec
ds
and
push
pop
cmp
into
inc
ja
enter
jmp
xchg
pmaxub
idivb
daa
insb
mov
adc
nop
sahf
sbb
call
das
cwtl
loop
mov
jbe
test
add
call
movsl
repnz
inc
decb
call
jmp
out
ds
jecxz
aas
add
ret
push
fnstenv
push
lcall
repnz
push
ja
sub
ret
jo
add
outsl
scas
cmpsb
movsb
pop
ret
mov
ja
xchg
in
adc
je
iret
fidivs
shll
iret
aas
ja
outsl
sbb
cld
mov
enter
mov
push
push
lods
jmp
jo
test
out
sbb
aam
cmp
scas
push
dec
stos
and
cltd
lds
mov
jno
ss
and
movsb
test
mov
jae
dec
loopne
mov
inc
scas
cwtl
push
inc
sarl
mov
out
sbb
xor
popa
or
ja
mov
inc
ss
andb
js
or
jmp
add
fsts
int
notb
mov
je
push
testb
pop
lahf
inc
adc
out
cltd
out
in
push
and
cmc
enter
mov
pop
ret
iret
sar
frstpm(287
rclb
or
enter
sbb
adc
test
pop
sub
adc
or
out
cmpsl
pop
mov
ss
mov
mov
jl
xchg
mov
je
jbe
push
jnp
inc
cmovns
mov
pop
mov
pop
dec
aam
xchg
mov
mov
adc
inc
ficoml
or
lcall
test
and
mov
ljmp
ret
sub
das
arpl
xchg
std
add
push
outsb
sbb
sub
adc
es
cmp
imul
iret
xchg
mov
call
add
inc
out
dec
or
dec
cmc
mov
imul
aad
fnstcw
lahf
ret
and
push
push
jp
mov
into
in
lcall
xor
mov
push
icebp
mov
cli
test
int3
ja
inc
fldcw
push
lret
mov
in
mov
pop
jmp
cmp
and
out
rorl
fsub
jmp
jnp
xchg
push
sbb
movsb
adc
or
and
and
add
je
lret
push
xchg
cmp
push
sub
test
enter
and
mov
mov
or
dec
mov
ljmp
lds
jne
pop
sti
jbe
rolb
loopew
scas
test
cmp
icebp
sbb
js
cld
add
lds
adc
shlb
jg
in
sbb
push
inc
das
sub
mov
sbb
jnp
fisubrs
movsl
nop
std
subl
cmc
jno
xlat
ret
mov
inc
xor
sarb
jno
in
sbb
mov
add
lret
inc
arpl
test
dec
pop
jge
gs
cmpsb
sub
lret
rcrb
jecxz
mov
jecxz
mov
inc
sahf
fsubr
or
adc
cld
xor
mov
xchg
into
das
outsl
movsb
mov
in
fimull
dec
push
mov
xchg
faddl
jp
jne
stos
repz
lea
shrl
ret
adc
mov
clc
gs
ret
hlt
roll
and
inc
jge
add
jl
mov
mov
mov
std
loopne
sub
scas
aad
xchg
loope
pop
sbb
cmp
in
aam
sbbl
push
jge
push
popa
pop
cmpsl
jg
lods
jmp
sti
push
std
adc
fs
fcomps
jg
out
sub
xchg
shlb
adc
loope
lods
cwtl
pop
push
out
cld
rolb
ja
push
jge
fcoml
jo
push
pushf
xor
add
push
leave
in
cmpsb
mov
adc
fsubrs
inc
cmp
in
sub
mov
leave
sbb
mov
mov
push
pop
test
lcall
mov
loop
or
test
arpl
and
iret
mov
sbb
out
out
mov
mov
xlat
iret
sbb
push
mov
andb
insl
push
fcmovnu
pop
mov
scas
cmp
cmp
mov
adc
jp
ss
jnp
cmp
gs
and
in
cmc
cmpsl
jo
adcb
sub
cmp
lods
loope
and
jge
mov
je
adc
in
cmp
push
out
test
lcall
cmp
cmp
cwtl
inc
lds
loope
mov
test
cltd
sub
aas
pop
adc
lods
aaa
jp
adc
jl
dec
or
ret
xor
sbb
rcl
jbe
pop
pusha
sti
aad
insb
jle
ja
subb
mov
fisttpl
sub
sbb
mov
out
cmp
lock
add
sub
dec
and
dec
js
push
in
ds
cli
in
cmp
ja
pop
rorb
ror
push
orl
sbb
mov
shlb
adc
xor
or
test
imul
into
fxch
push
ljmp
dec
jns
cltd
xchg
mov
sbb
aam
pop
stc
push
jle
jns
stc
loop
add
test
or
dec
jmp
dec
sub
lret
pop
rcrb
cltd
scas
lret
inc
in
mov
jl
lods
mov
dec
sbb
enter
in
inc
xlat
rcrl
mov
out
clc
es
out
mov
mov
test
mov
imul
cmp
cmp
lods
dec
mov
frndint
add
and
push
xchg
jecxz
push
jg
xchg
inc
dec
jmp
dec
jnp
push
push
cmp
fdivl
ljmp
leave
cmp
rorl
js
dec
outsl
cmp
out
xor
lcall
inc
and
cmc
je
mov
cs
mov
subb
mov
in
mov
fsubrs
and
xlat
cmp
pop
add
imul
mov
jge
mov
add
cmp
adc
cmpl
mov
int3
mov
cmp
andl
dec
movsl
adc
imul
fcmovnu
addb
xchg
and
or
and
shll
and
push
pop
inc
xchg
mov
sub
mov
dec
or
pusha
pop
jl
movsb
inc
jo
jp
in
sub
fs
jmp
sub
pop
sbb
fidivl
push
xor
sub
xchg
dec
push
jnp
insl
loopne
fidivs
mov
push
pop
aaa
and
pusha
adc
mov
add
jno
mov
out
mov
fdivl
lock
ret
repnz
into
xor
idivb
add
add
inc
or
sub
sub
inc
icebp
mov
xchg
imull
inc
ds
jecxz
sbbl
cmpb
sbb
jbe
jp
adc
mov
mov
sbbl
jg
fnstsw
xchg
test
loope
xchg
sbbl
push
into
sbb
adc
push
int3
jmp
adcb
mov
std
shlb
adc
pop
call
stos
je
cs
leave
mov
inc
mov
aad
bound
lret
dec
test
dec
push
out
push
gs
cmp
dec
xor
mov
fwait
orb
aas
mov
test
rcrl
mov
adc
push
ficomps
mov
xchg
dec
dec
imul
int
test
inc
mov
test
mov
and
std
mov
cmp
mov
data16
mov
movsl
pop
push
scas
xor
mov
clc
inc
outsb
in
jg
out
inc
push
push
imull
pop
cmc
inc
shr
es
push
rcrl
rcll
out
call
mov
xlat
scas
lock
jge
mov
lods
or
sahf
stos
clc
gs
jp,pn
arpl
enter
movsl
cld
test
jne
int3
shl
cmpsl
cmp
dec
or
jle
lods
bnd
bound
rclb
call
mov
pop
jg
test
sbb
pop
stc
cs
cmpsl
push
clc
jle
mov
xchg
stos
xchg
pop
mov
or
sar
sub
orb
outsb
adc
xor
xor
mov
insl
jb
negb
push
fnsave
sub
scas
cwtl
sub
clc
ja
shl
cmp
cwtl
rorb
or
and
mov
icebp
pop
ret
stos
nop
xchg
js
mov
aad
adc
xor
pop
mov
and
sub
jp
add
in
call
jge
test
iret
test
loopne
out
movb
mov
jmp
xchg
sahf
gs
out
andb
cmp
in
lds
aam
mov
jns
dec
mov
outsw
adc
flds
and
xor
imul
jnp
lcall
add
rcll
fs
or
add
test
add
ucomiss
popa
add
jo
fisubrl
gs
xor
push
mov
call
adc
push
sub
jmp
dec
sahf
lahf
sbb
out
jmp
push
cld
aas
pop
frstor
inc
add
pushl
dec
iret
xor
fstl
inc
xchg
call
add
adc
mov
xchg
sahf
jp
xor
int
pusha
mov
popa
and
add
outsb
inc
les
dec
mov
push
in
lcall
sbb
rclb
gs
jg
jno
and
push
std
jb
repz
pop
pushf
mov
adc
imul
arpl
jne
cmpb
fcmovu
cmp
xchg
adc
js
cld
sbb
pop
cmc
jge
mov
push
push
imul
sbb
sub
cs
pusha
aam
sbb
mov
jl
faddl
dec
push
cwtl
cmc
es
sub
mov
jl
in
add
jg
aad
test
pop
ss
mov
rcl
and
pop
pop
push
shll
mov
xchg
pop
mov
adc
mov
adc
cmc
mov
sti
sbb
sub
iret
cwtl
xchg
test
xor
leave
ret
enter
mov
cmp
cmp
in
cmc
lret
jp
insl
stos
dec
inc
cmp
pop
sbb
enter
jp
add
push
adc
js
jg
mov
mov
add
gs
in
dec
xchg
enter
push
push
shrb
int
out
dec
pop
movsb
in
enter
jp
fsubs
inc
popf
pop
sbb
mov
stc
inc
xor
push
mov
inc
call
aad
or
inc
adc
popa
mov
ss
push
push
divb
adc
fimuls
filds
mov
or
lods
out
pop
adc
ja
sbb
movsl
cmp
mov
rcl
les
inc
out
mov
int3
mov
push
xor
std
int3
loop
fs
insb
mov
popa
lcall
sub
mov
push
mov
loopne
pop
mov
jl
inc
inc
cmpsb
mov
lds
shlb
cmp
in
push
add
pusha
dec
mov
ret
dec
inc
xchg
xlat
xor
and
sub
test
stos
mov
inc
imul
jne
push
xchg
jo
mov
push
push
mov
push
shl
sbb
aam
in
mov
xor
pop
xchg
arpl
and
mov
mov
adc
inc
dec
leave
or
aam
lock
ds
mov
bound
sbb
xchg
in
cmc
mov
adc
cmpsb
movsl
dec
and
cmc
js,pn
daa
cmp
xchg
mov
pop
imul
cld
movl
sub
inc
lcall
mov
mov
bound
jne
mov
push
adcl
mov
pushf
xchg
mov
mov
adc
cmp
hlt
sti
fadds
ja
adc
aam
inc
test
loopne
loop
nop
addr16
iret
pop
icebp
mov
xchg
add
mov
push
jmp
hlt
dec
mov
pop
or
gs
pusha
mov
sarb
xchg
pop
mov
je
fcomip
mov
adc
add
cmpsl
inc
dec
or
sbb
push
mov
xchg
lahf
loope
mov
cmp
inc
data16
mov
aaa
movsb
sub
arpl
addr16
push
test
mov
and
flds
jecxz
int3
arpl
pop
sub
dec
add
cmp
cmp
mov
aaa
int
inc
mull
mov
mov
movsb
xor
les
or
push
sub
push
adc
mov
pcmpgtd
fs
or
add
icebp
adc
icebp
mov
sbb
or
pop
shr
xchg
pushf
aam
cmp
sub
xchg
push
dec
test
jbe
or
roll
push
add
pop
mov
popf
cmp
fstpl
jl
sub
push
pop
mov
mov
push
or
loope
and
mov
push
fsubs
les
mov
jae
push
stc
aaa
mov
inc
push
pop
mov
or
add
push
mov
jb
ret
stc
iret
jno
movsb
inc
aam
and
clc
mov
stc
ds
std
outsl
ljmp
sub
sub
shrl
mov
or
scas
into
loopne
sbb
push
sbb
out
add
adc
lcall
shrl
enter
push
repnz
sub
dec
mov
data16
add
or
cmpsl
sbb
sbb
or
mov
or
cli
inc
lea
aad
add
push
or
inc
and
adc
lock
push
mov
dec
mov
inc
mov
shrb
pop
adc
cmpsl
inc
mov
cli
test
ficompl
in
lock
lret
daa
loope
das
and
jbe
sar
fstps
add
fcmove
insl
movsww
add
push
test
data16
data16
jb
ljmp
sti
cmp
test
fsubl
and
in
mov
inc
add
push
or
bound
mov
rorb
lock
filds
cmp
nop
sbb
push
adc
sarl
cmovs
push
fwait
nop
bound
xchg
inc
fistpl
or
daa
jg
pop
mov
stos
das
mov
sbb
mov
add
into
addr16
inc
sub
repnz
arpl
inc
mov
sahf
test
jnp
jmp
push
inc
inc
cmp
pushl
nop
into
stc
and
cli
gs
jle
nop
test
adc
sarl
icebp
inc
lock
cmp
mov
nop
adc
imul
or
fsubl
ficomps
and
imul
sbb
addl
div
mov
int3
push
scas
inc
sbb
push
push
ss
int3
xchg
pop
test
mov
aam
sub
xchg
mov
pushf
mov
sbbb
ss
mov
outsb
outsb
nop
xor
enter
add
dec
mov
xor
jge
push
sbb
cmpsb
push
enter
in
movsb
lods
nop
dec
or
daa
js
xor
out
jae
cmp
and
jecxz
sub
mov
clc
sbb
shll
sbb
and
lods
fwait
xchg
mov
out
mov
movsb
sbb
bound
adc
pop
lret
fs
lock
push
xor
xchg
push
lret
push
pop
jmp
out
testl
fdivl
mov
cli
gs
ljmp
insl
sub
shrb
dec
das
and
cs
mov
std
mov
jns
push
dec
imul
out
addr16
sbb
lahf
mov
in
adc
ja
into
sbb
adc
mov
sub
mov
and
pop
rol
adc
add
scas
dec
flds
push
push
cmpsb
mov
js
adc
shrb
pop
aas
popf
xor
je
lahf
pop
pop
xor
push
cli
or
cmp
xchg
mov
push
lahf
sbb
ja
pusha
xchg
outsl
push
sub
fbstp
mov
loop
orb
sbb
adc
push
je
xor
gs
call
xchg
in
scas
sbb
jecxz
call
fildl
xorb
fwait
jecxz
xchg
das
popf
insb
push
jl
mov
or
xor
and
adc
aam
pop
xchg
pop
ja
adc
adc
and
pop
in
gs
mov
mov
lea
add
xchg
fbstp
mov
mov
mov
dec
pop
lods
fwait
les
sahf
xchg
or
add
addr16
test
call
loop
jbe
dec
dec
arpl
mov
push
bound
pop
sbb
andl
push
outsb
stos
jg
adc
mov
dec
or
and
fwait
cld
out
fdivl
xor
ja
cmp
adc
mov
call
pusha
cmpsl
bswap
mov
adc
dec
fdivp
xchg
xor
xor
xchg
mov
jl
xchg
and
pop
es
arpl
fnstsw
lods
aas
js
xor
daa
hlt
jne
dec
xchg
out
scas
sbb
mov
fldcw
fistpl
scas
loop
fidivs
gs
jbe
dec
pop
fstpl
xchg
sahf
lahf
dec
xor
xor
push
cmp
inc
outsl
pushf
addr16
hlt
pop
dec
mov
and
xchg
sub
jg
push
sbb
daa
adc
dec
cmc
in
fwait
test
push
inc
inc
js
loope
pop
rcrb
aaa
cmc
mov
insb
xchg
and
lea
mov
sub
sbb
in
xor
bound
and
sbb
push
test
movsl
inc
jo
ja
cmp
in
data16
mov
adc
popa
test
and
prefetchwt1
or
scas
stos
jge
sbb
inc
cmp
xchg
sbb
fistps
aam
add
int
jge
ja
xchg
or
addb
add
inc
push
inc
aas
sbb
fdivrl
ds
jae
sub
out
and
mov
sarb
dec
scas
adc
mov
rclb
or
xchg
mov
cwtl
or
dec
data16
jle
aaa
arpl
icebp
and
mov
movsl
sbb
ss
adc
sub
iret
sarb
fcomp
imulb
aam
test
sub
loopne
dec
imul
mov
stc
cmpsl
jmp
xor
xor
and
notl
idiv
jle
repz
into
in
shrb
lea
xor
jb
or
pop
adc
scas
xchg
and
fidivrl
jmp
cmp
hlt
lret
fsubs
pop
out
mov
jnp
mov
jecxz
add
ja
sbb
mov
nop
inc
inc
repnz
movsb
push
mov
fstpl
in
push
aas
std
cmp
ss
xchg
loope
cwtl
push
cmpsb
arpl
add
push
and
and
std
jmp
add
add
pop
push
or
mov
or
addr16
pop
bound
sahf
pop
rcl
add
mov
xchg
mov
fucomi
adc
fmull
sbb
ss
test
aad
sub
pop
mov
lcall
into
js
xchg
imul
fadds
out
dec
daa
pop
sbb
adc
mov
push
es
ficoml
dec
mov
pop
and
or
iret
lahf
pop
pop
pop
mov
mov
jne
out
push
xchg
mov
add
pop
pop
stc
adc
mov
mov
stc
push
mov
sbb
push
shrb
lods
cs
cwtl
add
lahf
js
cmpsb
pop
xchg
push
ret
lods
inc
andl
xchg
testl
nop
out
push
int3
dec
push
mov
pop
out
mov
sbbl
push
or
lds
jb
mov
popa
mov
lods
xlat
inc
ret
or
outsb
jbe
inc
xchg
mov
cmpsl
divb
inc
add
mov
sbb
push
inc
pop
mov
call
out
mov
scas
mov
jns
jmp
push
sub
aaa
fisubrl
insl
mov
and
mov
xor
push
mov
cmp
fistpll
mov
fldenv
push
int3
ret
subb
repnz
mov
pop
pop
aaa
popa
mov
fwait
cmp
pop
or
pop
mulb
mov
scas
push
jmp
lcall
xor
rcl
addl
cld
bound
out
es
add
sbbl
testl
ret
sub
loop
shrb
pop
dec
pop
insb
xchg
outsb
pop
sbb
bound
cmpsb
fwait
or
push
inc
mov
pushf
les
in
aaa
fstpl
pop
xchg
aam
xchg
push
and
inc
cli
inc
test
and
mov
xchg
cltd
pop
or
out
pop
rorl
sub
insb
adc
pop
mov
sub
sub
mov
sub
xchg
lock
jmp
and
sbb
and
or
pop
dec
in
mov
outsl
enter
lcall
mov
pop
sub
cmpsb
ds
scas
sahf
jmp
mov
xor
out
fs
test
cmp
mov
hlt
and
into
scas
fldenv
add
mov
das
pop
stos
push
push
add
in
inc
sbb
xchg
pop
fldcw
mov
movsb
add
jmp
push
mov
mov
sub
fwait
hlt
scas
adc
mov
rol
lcall
addr16
xchg
cmp
jge
mov
incb
mov
and
ja
inc
sbb
xorl
into
movsb
pop
movsb
dec
and
push
pop
popf
xchg
scas
or
sbb
pop
push
mov
leave
imul
xchg
mov
call
mov
mov
and
pop
or
mov
data16
push
push
es
out
int3
xor
clc
es
cmp
addr16
jp
idivb
cmp
mov
or
loope
scas
shr
and
xchg
lds
mov
inc
fldl
loope
mov
mov
rorl
mov
xchg
roll
cltd
xlat
xor
jo
ficoms
les
dec
inc
cmp
fadd
xchg
pop
mov
in
sarl
mov
inc
cli
fldenv
shr
icebp
sbb
sub
push
insl
adc
adc
mov
adc
shl
aas
jno
jnp
add
or
inc
push
movsl
mov
scas
inc
mov
ja
aad
adc
fistl
sub
or
out
add
xchg
dec
clc
lods
fiaddl
sti
stc
inc
imulb
lods
mov
adc
movsb
in
into
imul
rcrl
inc
sti
testl
lea
jle
inc
out
xchg
insb
dec
xor
ret
add
xorl
jbe
or
rorb
add
dec
in
inc
popf
test
lods
jno
filds
sarb
lods
adc
mov
dec
movsb
daa
push
push
ds
xchg
mov
mov
lds
mov
repz
es
cmp
hlt
js
mov
hlt
call
xchg
and
pop
divl
lahf
call
pop
addr16
std
das
push
sub
pop
cld
int
or
clc
mov
push
jbe
out
test
and
jmp
xchg
mov
ds
adc
lahf
and
insb
pop
dec
js
jno
adc
add
push
inc
in
mov
mov
movsb
mov
std
pusha
add
lods
push
rol
popa
mov
call
inc
push
jae
gs
stos
lret
dec
mov
lods
xlat
pop
or
ret
nop
rcr
inc
push
xor
mov
cmpl
fwait
mov
negl
data16
jge
xchg
push
pop
test
jbe
out
jne
fucomp
push
add
and
fucomp
jmp
loope
lret
pop
ja
in
leave
loopne
daa
mov
mulb
jecxz
cmp
mov
js
mov
dec
movsl
and
ljmp
ds
scas
xor
add
fs
das
pop
mov
push
aad
call
add
pop
mov
ljmp
loope
sbb
mov
jnp
pop
insl
stos
movsl
cmpsb
and
sub
into
pop
cmpsb
add
push
iret
xchg
sub
das
mov
xchg
popa
icebp
adcl
mov
std
fldcw
lds
mov
iret
mov
ucomiss
mov
leave
and
cmp
add
mul
mov
xchg
jge
mov
and
dec
cld
add
mov
scas
aam
dec
pop
pusha
mov
outsb
jbe
into
jl
cmp
es
jge
adc
jno
icebp
dec
xor
and
sahf
in
aas
bound
push
push
sbb
fstp
jl
jle
into
or
adc
ret
mov
sub
dec
cltd
lock
leave
sbbb
mov
outsb
shrb
lds
jecxz
iret
sub
lret
cmpsl
addr16
test
scas
dec
repnz
jg
rcll
push
sbb
mov
push
xchg
lahf
mov
lahf
sahf
inc
xchg
xor
and
dec
mov
jmp
hlt
push
je
adc
or
lods
iret
inc
xor
push
or
int3
cltd
stos
push
cli
cwtl
mov
dec
mov
push
push
xor
xor
xchg
xor
daa
mov
in
nop
leave
inc
sbb
or
xchg
pushf
xchg
imull
or
es
fsubl
sbb
cmpsb
jbe
cli
dec
inc
pop
aaa
inc
xchg
jle
out
push
pop
push
inc
mov
mov
push
inc
pop
inc
dec
xchg
cmpsl
rcl
inc
or
aas
jb
in
outsb
add
xor
nop
in
mov
xor
add
adc
jg
imulb
cmp
xor
lea
xchg
aas
mov
lock
int3
xchg
test
and
push
loopne
gs
fwait
mov
mov
mov
jmp
add
pushf
int3
mov
mov
push
jle
in
or
xor
bound
lock
es
mov
jl
mov
test
ret
out
fstl
dec
ss
iret
lret
sbb
bound
and
std
push
loop
sbb
xor
popa
pop
sub
pop
add
in
sbb
rol
push
jg
cld
lods
sub
push
push
add
xchg
mov
add
ss
repz
cmp
scas
or
sub
iret
fdivrl
jns
jge
mov
inc
inc
das
cwtl
sub
cmpsb
pusha
cmp
mov
cmpsl
shl
imul
pop
daa
adc
fstpl
xchg
and
mov
push
mov
jae
sub
jbe
dec
enter
xchg
aad
adc
in
xor
fsts
mov
dec
cmp
lods
sti
dec
xchg
jp
sbb
js
mov
cmpb
push
pop
daa
mov
lret
jb
inc
popa
sub
dec
push
mov
add
adc
out
in
imul
jecxz
push
cmp
cmp
sahf
push
aam
fwait
stos
xlat
pop
mov
js
cmp
lahf
or
stos
mov
loopne
into
adc
pop
dec
nop
push
and
repz
les
movsb
xchg
std
mov
fwait
stos
rolb
push
dec
jae
jne
sbb
lods
test
sub
aas
stos
inc
call
sub
stos
and
inc
inc
aam
mov
xor
xor
lret
mov
push
xor
cmp
clc
and
ljmp
in
ret
jp
fistps
movsb
stc
gs
shrl
fistpl
aas
xchg
sbbb
fmull
js
cmp
xchg
sbb
mov
sub
shll
mov
xbegin
jo
dec
je
lahf
sbb
jmp
add
cmpsl
cld
dec
xor
fdiv
aad
or
mov
xchg
cmc
sub
mov
xor
cmc
adc
jmp
movsl
adc
ret
aaa
pop
test
call
or
roll
ja
test
sti
xor
fimuls
dec
mov
dec
outsl
sub
cmp
add
and
out
shll
push
test
push
inc
aaa
dec
dec
pop
daa
xor
xchg
sub
inc
out
jmp
xor
cmp
sub
jne
and
sbb
insb
mov
es
dec
sbb
pop
scas
pop
jle
fbld
outsb
sahf
inc
movsl
in
jecxz
ljmp
lcall
mov
aaa
ficompl
mov
mov
sbb
pop
aam
loop
lret
xor
push
lods
mov
pop
rcrb
sub
lds
mov
filds
sbb
outsl
pop
push
lods
inc
add
xlat
xor
xchg
inc
or
shl
lret
cld
xchg
adc
inc
stos
dec
pushf
and
adc
cmp
xchg
pop
inc
outsb
in
stc
test
push
inc
scas
loopne
loop
jno
pop
leave
repz
sbb
movsl
add
mov
jns
pop
dec
adc
call
sub
fsubs
inc
sub
pop
jno
out
push
jl
test
jle
sbb
dec
adc
mov
lea
stc
cli
lret
out
push
adc
cwtl
add
insl
jo
xor
xchg
adcl
push
in
push
movsl
push
ret
mov
es
into
sbb
mov
xchg
clc
sbb
inc
fldcw
leave
pop
jo
push
mov
popf
xchg
pop
cltd
aam
add
das
leave
xor
in
pop
je
lods
push
arpl
lret
pop
cmc
inc
inc
xchg
inc
fmuls
test
and
add
sub
push
in
xchg
popf
add
loopne
sti
loopne
pop
and
fwait
and
fildll
xchg
xchg
adc
push
pop
sbb
in
scas
jmp
xor
daa
inc
imul
sbb
jge
in
inc
or
test
mov
xchg
rcrb
repnz
or
and
jbe
mov
das
imul
scas
in
xchg
out
inc
pop
fbld
mov
insb
pop
xchg
cwtl
fsubrp
mov
outsl
jp
ret
leave
mov
test
out
xor
addl
mov
cli
rcrb
lods
pop
int3
xchg
das
stc
aad
sub
xchg
subb
dec
mov
lods
in
mov
adc
js
paddusw
orl
push
cmpsb
scas
dec
add
xchg
sbb
pop
les
sub
cwtl
lods
ret
and
fwait
and
xchg
subl
adc
adc
test
pop
loope
loope
inc
inc
lods
fistpl
cld
xchg
or
iret
loop
pop
sub
stos
jp
rclb
mov
dec
mov
xchg
push
jb
adc
inc
sub
in
out
push
mov
jo
and
pop
es
enter
aam
jo
add
jbe
rcr
or
push
sub
bound
push
fld
sbb
jmp
test
lret
cmp
xchg
adc
mov
loopne
lods
inc
in
into
inc
leave
xchg
add
sbb
cld
jp
movsb
jb
lcall
fidivrl
std
cli
mov
and
pusha
pop
aam
xchg
ss
out
dec
iret
cmp
xchg
es
dec
fdivrs
inc
add
into
pop
cwtl
add
dec
int3
jmp
popf
stos
dec
cld
mov
outsl
pusha
sub
pop
out
std
cmp
in
xchg
pusha
sti
push
outsl
aam
adc
push
jne
push
add
lahf
sub
push
inc
iret
iret
jne
jbe
insl
cmpl
cmp
cs
js
dec
mov
xlat
aas
jns
repnz
sub
vmwrite
test
subb
aas
and
pop
jmp
and
mov
adc
jmp
test
xlat
jge
mov
mov
fsubrs
or
inc
movsl
lea
jle
mov
aad
cmpsb
or
mov
incw
mov
pop
pushf
mov
sbb
jbe
adc
mov
mov
push
jle
inc
and
sbb
xor
push
sub
outsb
cmp
sbb
addl
in
fsubrs
inc
xchg
sarb
xchg
xchg
sub
scas
jo
adc
or
cld
pop
push
cmpsl
lods
out
scas
call
lods
nop
cmp
xchg
test
push
rolb
xchg
jbe
arpl
pop
add
or
pushf
pop
xchg
dec
jns
sahf
sbb
ret
or
push
or
lea
push
pop
jae
jbe
out
push
inc
jge
rorl
cmc
lcall
lods
pop
shll
dec
cmpl
popf
add
dec
or
jne
mov
jmp
push
ss
xor
stos
cwtl
cwtl
lods
rcll
cld
bound
mov
int3
frndint
ficomps
sub
xchg
xchg
data16
mov
jmp
in
inc
iret
mov
ret
gs
and
cs
test
gs
inc
in
mov
jl
mov
or
scas
lods
mov
push
push
test
add
mov
js
xor
in
sbb
pop
and
cli
das
pop
lret
lret
popa
imul
movsl
out
stos
cmp
xchg
xchg
sub
stc
cmp
xor
inc
add
push
jecxz
jg
rorl
mov
cmp
and
push
and
fwait
pop
sbb
and
mov
mull
imul
push
mov
pop
sbb
lret
add
test
mov
outsb
pop
push
ret
popa
cmp
imul
fwait
push
adc
jb
repz
add
sbb
inc
test
insl
cmp
mov
pop
test
int3
aad
dec
sbbb
xorl
jae
bswap
sbb
inc
cmp
sbb
sub
sub
push
mov
movswl
sahf
sbb
jmp
cmp
pop
ret
push
stos
movsb
pop
xor
sub
mov
hlt
mov
adc
xchg
fnstcw
enter
adc
repnz
xchg
add
mov
dec
adc
ja
cs
add
jb
lret
adc
jae
mov
jp
addr16
out
inc
inc
sbb
mov
add
or
xchg
ja
pop
loopne
pop
xor
enter
push
ret
jo
push
in
cmpsb
call
cmc
pop
sti
and
insb
adc
dec
popa
cs
ja
mulps
outsl
pop
hlt
and
inc
sbb
xchg
sub
mov
popf
xchg
in
mov
xchg
xor
xor
inc
mov
push
fsubr
dec
fcoms
pop
pop
into
push
mov
cmp
stc
and
jecxz
lret
sub
push
inc
data16
popa
sbb
cs
and
mov
idivb
outsl
adc
or
pop
enter
jle
data16
sahf
rorl
cmpsb
movb
cwtl
and
lret
push
mov
pop
cltd
sub
push
shlb
loop
inc
pop
mov
ret
pop
xchg
les
mov
xor
cld
pop
mov
scas
popa
pop
fnstsw
je
into
xor
out
imulb
ja
shl
jp
xor
mov
mov
lds
sub
imul
out
lahf
and
mov
dec
jecxz
push
or
jo
out
inc
xor
jbe
mov
outsl
shlb
push
push
hlt
loop
test
lds
enter
mov
sub
icebp
dec
push
out
daa
lcall
sti
mov
dec
xor
xchg
jns
adc
mov
out
sbb
fadds
fnstsw
pop
mov
push
aam
int
sub
push
insl
pop
add
andb
insb
mov
jl
shlb
inc
stos
cmpsl
mov
xchg
jae
jmp
adc
and
and
sbb
inc
bswap
cmp
mov
or
imul
cli
jb,pn
cmp
jb
popa
divb
dec
cmc
shll
pushf
fs
sbbb
bound
cmp
rcrl
push
xchg
cmp
in
call
sbb
test
push
mov
scas
in
subl
adc
push
shrl
push
mov
aaa
mov
push
aad
pop
ret
xchg
faddp
dec
popa
and
test
les
jl
pop
fdivl
ja
dec
cmp
dec
jle
push
sbb
mov
dec
sarb
pop
aaa
jmp
imul
cmp
es
setg
mov
cltd
gs
add
jmp
idivb
inc
cmp
shlb
mov
xor
stos
call
stos
aas
pusha
aas
mov
movsl
lcall
js
add
inc
popa
push
lcall
xchg
popf
xchg
in
xor
jnp
push
pop
add
cld
test
out
sub
je
adc
jns
dec
lea
and
dec
sbbb
std
dec
jb
in
sbb
lods
jmp
cltd
clc
add
icebp
sbb
sahf
imul
sub
inc
add
repz
adc
xchg
fnstcw
sub
out
jecxz
test
sub
daa
push
jmp
pop
cmpsl
add
jno
mov
sub
push
xor
stos
incb
icebp
jbe
inc
pop
or
loopne
enter
add
mov
rcrl
inc
mov
mov
cmp
stos
or
mov
and
add
insb
and
inc
mov
jb
mov
out
mov
test
cs
jg
sbb
push
ret
or
ret
lea
dec
xor
jnp
push
movsb
jp
call
in
jb
jnp
push
cmp
jecxz
and
inc
xor
xchg
adcb
mov
aaa
cmc
xchg
push
add
ficoms
mov
sti
sti
mov
jno,pn
mov
xlat
in
and
lea
out
test
out
shrl
inc
or
insb
in
mov
popa
or
clc
push
pop
ss
lods
in
ret
and
push
pop
out
adc
fs
push
loope
mov
xor
sub
cmc
xchg
push
rorl
mov
sub
jl
xchg
mov
stc
pop
xchg
andb
mov
pop
scas
or
mov
loopne
scas
lock
stos
aam
pop
inc
pop
push
push
shl
divb
aaa
or
insb
addr16
adc
sbb
pop
xchg
bound
mov
xchg
mov
je
mov
cmp
xchg
add
dec
dec
xchg
jno
cmp
xchg
fldl
adcb
mov
mov
sub
mov
movsb
jmp
out
jo
sbb
xor
adc
stos
cmp
lds
dec
sbb
push
aam
push
mov
cltd
xor
aam
shr
sub
nop
rcrl
les
lock
sbb
mov
sub
pop
insb
fdivs
adc
lret
xchg
pop
mov
cwtl
mov
jmp
push
mov
aaa
mov
cmp
cmc
sbb
adc
inc
lcall
mov
cmpsl
hlt
push
es
sub
faddl
sub
div
xor
xor
sysexit
xor
cmp
dec
xlat
jae
lds
xchg
pop
xlat
pop
in
iret
out
cmp
or
lods
sbb
xchg
pop
xor
stos
xor
lock
cli
jnp
push
inc
jg
in
xor
push
mov
xchg
mov
les
test
in
cmp
xor
negb
arpl
inc
jns
cmp
out
pop
mov
dec
inc
sub
stc
xlat
fnstenv
stc
test
cltd
xchg
add
aad
jno
aad
inc
push
sub
shll
adc
dec
mov
xor
sahf
es
test
add
imul
and
adc
adc
aam
sub
mov
or
mov
out
jge
out
or
ret
sub
movsb
jns
xchg
out
ret
inc
jb
dec
push
ret
lahf
hlt
xorl
jecxz
adc
fildl
fstps
mov
lahf
arpl
pop
pop
xor
fisubrs
les
out
shrb
and
loop
rorb
orb
cltd
iret
aas
cmp
add
and
mov
pop
ds
movsb
or
cmp
xchg
jecxz
ficoms
mov
mov
mov
test
xchg
mov
imul
xchg
test
mov
cmp
jns
repz
outsl
mov
insb
and
imul
xor
test
je
insl
jns
mov
pop
popf
push
adc
push
mov
mov
inc
mov
jg
icebp
mov
jle
pop
add
mov
nop
mov
imul
nop
xor
and
mov
cmc
mov
xor
js
mov
cmc
jecxz
repz
xor
mov
sub
dec
gs
pop
pop
jne
mov
out
push
je
rolb
inc
push
popa
cltd
test
and
imul
mov
mov
xchg
cmp
or
mov
mov
inc
sbb
je
repz
out
sbb
lds
mov
sbb
jno
push
xchg
push
js
cmpsl
ret
sbb
stos
jno
in
or
mov
dec
or
mov
jp
inc
in
ret
pop
insb
js
jnp
in
aas
loope
add
pop
add
sti
jnp
mov
ljmp
pop
adc
jbe
mov
mov
mov
scas
enter
sbb
les
sbb
mov
jmp
dec
cmp
insb
shll
inc
adc
push
insl
mov
xchg
stos
test
in
faddl
and
xor
sub
lods
sbb
sub
mov
jae
out
and
xchg
ret
jmp
jmp
pop
lock
push
jle
jmp
ficoml
mov
pop
test
sahf
test
cld
mov
rcrl
mov
aas
push
xchg
xor
xor
movsl
sbb
jb
jno
jo
mov
inc
test
jne
fidivl
xor
adc
fisubrl
stos
jne
sbb
daa
xorb
ds
jb
inc
loope
std
cmpsb
pop
pop
push
cs
mov
popf
jbe
sarb
fsubrs
sbb
dec
out
add
xchg
out
out
xor
mov
js
mov
leave
xor
inc
in
cwtl
push
dec
gs
fsubs
pop
std
xor
sub
out
xchg
arpl
mov
in
insb
stos
lret
ret
mov
mov
aam
repnz
jle
pop
lcall
mov
ret
enter
adc
test
lcall
sbb
fidivs
cmp
mov
mov
int3
mov
leave
or
out
test
push
in
pop
lds
jns
imul
sbb
je
int3
mov
sub
jp
outsl
or
pop
outsl
pop
or
pop
inc
das
imul
jns
xchg
loopne
fcoms
aas
fst
stos
daa
xor
rorl
js
inc
out
push
cmpb
aam
ficoms
into
movsl
mov
xor
in
stc
adc
or
jmp
xor
out
xchg
sbb
or
pop
adc
fs
sbb
data16
mov
pop
or
jns
push
jmp
jnp
test
popf
mov
lock
cmp
js
fnstenv
push
andb
fnstsw
adc
testb
lret
push
adc
mov
mov
scas
cmp
jg
imul
testl
mov
movsb
sub
shlb
mov
add
pop
gs
pusha
inc
sub
mov
adc
inc
xor
pushf
stos
pop
push
and
in
mov
mov
jg
mov
jl
lds
aad
ret
fs
repz
push
outsb
pop
jae
push
push
pop
aam
lods
add
cmpsl
ss
sub
mov
insl
popf
mov
jne
cmp
pop
mov
inc
ljmp
gs
mov
fwait
mov
mov
bound
popa
xlat
nop
leave
jo
pop
fbstp
lods
fucomi
or
xchg
negl
sahf
scas
loope
push
or
movl
cltd
push
std
stos
push
mov
mov
insl
sub
jle
push
mov
add
inc
inc
insl
adc
mov
xor
or
and
mov
mov
mov
faddl
push
lret
push
icebp
sbb
popa
inc
xchg
popf
inc
cmc
into
pop
jle
xchg
push
pusha
adc
mov
fsubrs
mov
xchg
stc
in
inc
jne
iret
adc
push
stos
sbb
mov
int3
cmp
and
or
add
ja
push
cmp
arpl
xor
jne
rcl
aad
and
push
mov
pop
les
lods
pop
cmp
cs
enter
pop
lods
mov
test
aad
mov
or
gs
sti
dec
stos
in
stc
push
xchg
push
fisubl
push
fimull
inc
cmp
xchg
es
dec
push
push
push
add
out
inc
movhps
jo
sub
add
or
in
nop
rcrb
xor
push
int
add
sub
inc
mov
jg
lea
mov
fbstp
mov
loope
and
addr16
mov
and
or
xchg
sbb
popf
mov
repz
mov
dec
pushf
cli
testl
cmc
es
testl
jb
lea
outsl
push
pop
sub
shl
fidivs
sub
mov
push
inc
cmp
sbb
pop
int3
jle
cmp
sbb
or
jmp
int
ss
dec
cwtl
jae
sub
adc
sti
out
sbb
xchg
test
xchg
pop
sub
adc
lret
repnz
imul
xchg
xchg
jae
pop
jno
shrl
pop
jb
adc
dec
mov
jae
into
xor
in
xchg
dec
testb
test
jns
adc
sub
fsubrs
insb
xor
jg
pop
add
mov
nop
negb
jecxz
push
notl
lcall
stc
sub
inc
add
add
inc
test
adc
cmp
sbb
xor
add
or
cmp
and
pop
pop
push
xor
dec
sub
pop
sbb
stos
cld
imul
and
popa
stc
sbb
fsubrl
mov
pop
pusha
movsl
fwait
inc
lea
sub
movsl
mov
inc
pop
pop
std
jb
int3
insl
js
xchg
add
add
jge
add
iret
icebp
jecxz
mov
dec
add
sbb
out
mov
sarb
cmp
repnz
sbb
in
fistps
mov
ret
int
imul
jl
aam
jmp
insl
repnz
das
push
jg
out
push
mov
inc
outsb
push
cmp
aas
stc
mov
mov
call
cmp
pcmpeqb
add
ja
push
rcrl
add
xorl
enter
and
mov
ds
pusha
popl
test
mov
cltd
cs
mov
jnp
fsubr
out
lds
and
push
das
xor
addr16
stc
sbbl
stc
mov
pop
push
adc
sbb
cmp
nop
adc
jno
adc
sbb
std
add
addr16
xchg
add
xor
or
pop
jmp
jl
mov
rorl
int
outsb
mov
rolb
imul
jbe
cld
orl
sbb
mov
rorl
dec
std
xchg
insb
ret
nop
mov
sbb
xor
lcall
sti
jo
bound
inc
or
cmp
push
pop
scas
cmpsl
xor
cmc
push
pop
bound
stos
or
scas
mov
xchg
push
xchg
popf
jbe
jae
mov
insl
push
outsl
outsb
mov
xchg
pop
ror
in
data16
or
dec
outsl
sub
xchg
je
xorb
das
adc
fldenv
stos
mov
pop
mov
mov
fbld
xchg
push
or
mov
jg
cmp
sbb
jmp
inc
sbb
jmp
adc
stos
or
in
cmp
mov
and
hlt
jne
in
push
xchg
fcom
dec
ret
adc
pop
enter
push
xchg
stc
cmp
mov
sti
push
icebp
scas
mov
frstor
xor
push
xor
and
or
je
mov
or
jns
push
out
call
sarb
insb
lcall
cmp
sti
push
lret
movsb
mov
inc
fnstcw
test
sbb
ds
iret
adc
jnp
in
fidivs
and
call
cmc
jbe
cmpsl
cmpsl
cmp
push
lods
in
mov
ds
jcxz
test
aaa
pop
or
pop
dec
ss
xchg
pop
cwtl
xchg
dec
rolb
xor
pop
dec
mov
pop
mov
mov
adc
xchg
jp
pop
ljmp
in
push
std
test
das
adc
les
imul
aam
ret
cwtl
jecxz
movl
sbb
mov
fistpl
test
sbb
js
xchg
stos
lds
in
mov
jg
mov
sbb
shll
adc
xchg
jnp
jecxz
fs
xlat
test
mov
inc
jmp
scas
mov
and
jne
aaa
das
imul
inc
je
lods
add
xchg
les
repz
mov
add
sbb
loop
xlat
data16
xchg
adc
sbb
scas
fisubl
ret
aas
cmp
sahf
dec
pop
pushf
call
or
stc
or
lahf
pop
sbb
mov
lcall
outsb
mov
mov
loopne
sbbb
gs
aad
je
lods
inc
aad
mov
pop
in
mov
push
and
out
or
cmpsl
jmp
cmp
stos
lcall
jns
or
pop
inc
and
adc
xchg
arpl
dec
inc
adc
inc
test
push
mov
mov
stos
ljmp
or
loopne
jb
mov
andb
mov
repnz
mov
push
pusha
push
and
ret
pcmpeqw
aam
mov
inc
pop
imul
js
test
pop
jae
jmp
mov
outsb
rorb
sahf
lea
faddl
dec
dec
cltd
pop
icebp
lret
inc
sti
shrl
jp
mov
sbb
call
sarl
ja
dec
mov
daa
dec
mov
stc
and
sub
pop
fdiv
hlt
add
aaa
sub
cmp
addr16
insl
jecxz
dec
xor
or
fists
dec
xchg
add
insl
ja
outsl
add
inc
ret
sub
mov
mov
das
sub
int3
mov
movsw
jns
adc
movsb
xchg
add
xor
test
in
out
test
inc
mov
movsl
rcl
clc
inc
in
shl
add
jbe
dec
add
mov
cli
popa
int
xchg
pop
or
ret
jb
inc
mov
jno
and
adc
push
cmp
xor
lods
popa
clc
jno
lds
sbb
call
mov
sbbb
lahf
adc
inc
mov
xchg
cmp
js
scas
xor
mov
icebp
sarl
inc
add
xchg
dec
iret
mov
scas
test
clc
xchg
xorl
sar
inc
scas
push
in
jnp
adc
out
or
icebp
mov
pop
inc
mov
aaa
and
mov
ret
popa
test
shll
bound
hlt
mov
dec
and
mov
push
cmpsl
negl
cmp
out
andb
jge
dec
and
cs
imul
mov
dec
adc
hlt
sbb
jecxz
scas
imul
stos
lods
push
or
xchg
lret
aam
arpl
cltd
xchg
loop
jl
nop
inc
aas
mov
cltd
dec
out
movsb
inc
sbb
push
das
lret
in
ja
lcall
pop
orb
cwtl
icebp
jle
sbb
pop
xchg
iret
jl
decl
sbb
fdiv
ss
cmpsb
xor
test
test
out
das
push
aam
cmc
fsubrs
xor
adc
dec
mov
ds
sub
jne
mov
shll
ljmp
call
pusha
ljmp
and
shlb
aam
mov
fcoms
rorb
loopne
enter
add
insl
sbb
push
dec
cli
in
test
daa
inc
pop
mov
in
in
fldt
test
or
pop
stc
xchg
jns
fmulp
cmpsb
gs
mov
shll
test
or
mov
fsubrs
pop
add
inc
fcmovb
hlt
or
jmp
sbb
lret
cmp
cmp
fcomps
cmpsb
sbb
xchg
cmp
or
adc
mov
pop
xor
dec
add
popf
lret
pop
pop
lret
dec
pop
enter
mov
mov
hlt
push
out
cli
sub
sub
popf
dec
int3
addr16
shrb
fs
mov
sub
popf
mov
repnz
push
loopne
mov
iret
mov
test
lahf
fldt
mov
insb
into
in
pop
loope
cmp
push
and
test
mov
ret
out
inc
aad
push
loope
fnstsw
outsl
and
jg
or
pop
dec
jle
inc
scas
push
cmp
shll
push
sub
mov
dec
fiaddl
push
lods
xorl
repnz
in
inc
repnz
dec
stos
adc
cld
out
mov
cmp
test
mov
ds
repz
mov
adc
stos
mov
or
scas
sbbl
dec
out
mov
cmc
and
jecxz
xorb
jl
mov
fmuls
orl
aad
mov
push
ds
aad
adc
and
xchg
pop
mov
lock
insb
xor
inc
ret
xchg
add
mov
pop
xchg
adc
je
testb
dec
mov
pusha
add
movsb
push
mov
dec
xchg
sub
add
imul
cmpsb
loope
pusha
inc
mov
inc
add
ja
das
mov
addl
mov
das
fs
lea
mov
lahf
test
fiadds
ljmp
push
mov
xor
dec
pushf
mov
jns
jmp
in
xlat
adc
stc
lahf
push
mov
sar
jne
fcompl
sti
loope
enter
mov
mov
into
popf
adcl
adcb
lret
jnp
adcl
hlt
repnz
adc
mov
sub
mov
xor
adc
lcall
out
xchg
stos
and
push
icebp
stos
xchg
lret
xor
inc
mov
pop
std
pop
jl
pop
ss
cmp
mov
movsb
movsb
sub
push
xlat
pusha
ffree
cwtl
mov
mov
rorl
lods
jmp
les
scas
inc
mov
cltd
insb
std
inc
out
and
jo
aam
pop
jle
jmp
fwait
mov
cli
into
in
cs
call
inc
push
jo
clc
lea
mov
inc
decb
aam
dec
addl
xchg
popa
lock
and
mov
int
mov
xchg
out
sarl
out
xchg
sti
sbb
push
pusha
xchg
std
aas
xor
xor
stos
inc
dec
jecxz
dec
sbb
das
xor
or
fidivs
push
int3
push
movb
push
sbb
dec
dec
ljmp
andl
xor
sub
nop
in
lds
xor
dec
jne
int
push
adc
mov
cmp
pop
mov
add
es
xor
test
adc
call
mov
inc
outsl
sbbl
mov
addr16
pop
outsb
ficoms
mov
add
out
call
and
ror
ds
pop
enter
popa
aam
adc
into
bound
test
mov
mov
pop
stos
push
jae
dec
ret
cmpsb
cs
mov
ds
mov
shll
test
add
inc
xor
sbb
leave
mov
fldcw
cltd
cmp
dec
ret
xchg
nop
cmp
iret
push
mov
outsb
pushf
add
mov
adc
aaa
lock
push
cmp
cmc
enter
dec
cmc
daa
mov
ror
mov
mov
shll
push
push
add
jmp
stos
fisttpll
ds
leave
je
aaa
mov
jle
jecxz
cmpsb
cld
mov
xor
repnz
idivl
mov
fimull
and
pop
fwait
shl
and
rorb
movsb
loop
and
sub
lods
add
add
insl
fs
sub
scas
adcb
push
mov
push
sbb
in
add
and
inc
dec
outsl
add
pcmpgtw
loop
ss
fsubl
pop
inc
push
test
push
in
push
into
rol
xchg
xchg
int3
ret
jle
test
mov
hlt
ja
mov
adc
rcr
int
pop
add
rcrl
push
jp
dec
or
arpl
fistpll
scas
adc
fisubrl
jne
scas
jmp
int3
aam
jmp
stos
lods
mov
sbb
cmpsb
mov
enter
loop
or
stos
mov
call
push
nop
daa
inc
sbb
enter
fisttps
cmpsl
lahf
movsl
jne
cmpb
lcall
inc
add
les
mov
sub
dec
mov
icebp
ljmp
test
fisubl
push
stc
shl
cmp
mov
shrl
cmp
cmp
adc
data16
mov
scas
jns
push
ret
int
es
popf
imul
iret
sub
lahf
scas
and
outsl
jmp
or
ret
dec
testl
cmpsb
pushf
cmp
sti
addr16
orl
push
pop
pop
mov
pushf
aad
out
or
call
sub
lods
fstl
fldenvs
cmp
repnz
js
std
jae
adc
mov
cwtl
push
jnp
jge
ror
stos
pop
push
jl
push
dec
jne
ljmp
data16
xchg
clc
incb
dec
inc
push
sub
push
cmp
xor
inc
mov
cmp
pusha
stos
dec
arpl
push
or
cmp
push
popa
add
push
push
imul
xchg
inc
push
pushf
sub
sbb
inc
ret
push
and
and
lcall
rorl
pop
push
xchg
aad
sub
outsb
dec
jecxz
jo,pt
pop
divl
mov
out
rol
xor
sub
cmc
push
xchg
dec
mov
inc
ljmp
add
shlb
sub
lret
add
mov
mov
push
xor
or
dec
mov
push
fsubs
mov
adc
sbb
mov
loope
push
adc
add
pop
xor
fs
fwait
incl
push
mov
dec
dec
popf
and
add
push
jb
dec
mov
fwait
mov
jne
inc
out
mov
jbe
addr16
add
rcrl
pop
daa
in
int3
mov
jo
rclb
add
jmp
and
push
sub
gs
rol
add
faddl
jo
lods
xchg
adc
add
mov
add
aam
int
cmc
mov
mov
fs
in
xchg
pusha
pop
or
inc
mov
mov
add
fstl
dec
out
mov
orb
cmp
mov
cmp
lcall
adc
xor
pop
lcall
inc
mov
xchg
mov
cltd
cmp
sbb
addl
scas
out
cmp
jmp
test
daa
sub
mov
scas
aam
xchg
scas
bound
cli
adc
nop
push
lea
or
in
ret
lock
pop
sub
mov
mov
mov
data16
in
lods
mov
push
xor
mov
dec
hlt
and
or
fsts
push
addr16
stos
push
nop
cmp
dec
aad
ss
std
push
sub
jmp
sbb
mov
push
inc
rorb
adc
xlat
in
addr16
roll
fcoms
inc
or
jl,pn
ljmp
cmp
cmp
push
fcoms
gs
dec
push
cmpl
mov
pop
cld
loope
push
inc
roll
and
fimull
out
push
xchg
inc
jp
pop
push
shlb
scas
xor
loope
lods
int
mov
in
add
shl
sub
js
push
orl
jl
mov
or
jge
sbb
mov
xchg
sbb
out
pop
movsl
mov
mov
adc
xchg
gs
add
mov
push
xchg
rorb
test
popa
aaa
push
mov
adc
loope
mov
lea
fldenv
scas
inc
mov
cmp
mov
loope
push
mul
jns
loop
xchg
gs
mov
sarb
fstpl
ss
repnz
or
pop
push
int
aas
mov
or
pop
jae
fistpl
mov
iret
xchg
insl
dec
jno
lcall
push
jle
fwait
mov
ljmp
push
and
push
mov
or
cwtl
daa
pusha
test
pop
les
pop
movsl
pusha
sbbb
aam
dec
xor
fsts
aaa
es
insb
sub
inc
xor
mov
push
mov
jo
dec
je
fidivrl
repz
scas
shrb
sub
adc
testb
cltd
insb
arpl
cmp
imul
cmp
mov
dec
or
xor
cltd
mov
push
es
push
cmp
inc
mov
fs
into
outsb
sbb
jno
and
mov
loopne
cwtl
push
in
jmp
rcrl
mov
fnstenv
inc
inc
out
add
lock
arpl
or
scas
das
sarb
int
and
and
lret
rcll
mov
outsl
out
jbe
xor
adc
jmp
fimull
ss
out
std
jo
imul
pop
cli
in
lahf
gs
iret
stos
mov
mov
xchg
movsb
sahf
inc
and
jne
int
nop
movsl
in
pop
and
stos
xchg
sub
mov
xor
ljmp
cwtl
mov
mov
push
inc
lret
lret
mov
cmpsl
mov
add
or
bound
leave
lds
out
in
call
sub
jecxz
pop
add
loope
mov
data16
or
imul
es
out
das
mov
std
imul
xchg
cmpsb
sub
lods
dec
jge
lea
xchg
mov
push
lret
aaa
xchg
outsl
mov
add
push
push
cmp
dec
push
imul
add
out
fsubr
xor
ss
orb
pop
mov
dec
cmp
jnp
push
mov
mov
aaa
cmpb
sbb
pop
jbe
cmp
lds
das
ljmp
push
dec
and
enter
jmp
fnstsw
mov
fldt
push
roll
push
pop
js
hlt
sbb
movsl
lea
ss
test
ss
insl
stos
loopne
push
cwtl
aaa
rcl
mov
push
stc
pop
mov
xor
imul
or
in
punpckldq
scas
push
cwtl
and
outsl
out
sbb
bnd
mov
outsl
and
sub
xor
cmc
inc
aas
jmp
sub
lods
xchg
push
aaa
popf
add
stos
movsl
add
jmp
icebp
dec
jg
jbe
out
sub
daa
jo
daa
xor
sub
rclb
lcall
cmpsl
test
fwait
iret
fistpll
aad
sahf
jne
adc
jnp
push
daa
test
scas
and
cwtl
ja
mov
mov
mov
pop
test
js
xchg
dec
fisubrs
movsb
pusha
jbe
cli
cmp
jno
jmp
test
mov
sahf
mov
sub
push
add
cmpsl
inc
dec
xchg
fstpl
jbe
mov
xor
in
dec
lahf
push
mov
aas
inc
push
sahf
fmuls
fisubl
cmp
inc
pop
sub
and
sahf
mov
lock
push
nop
shrb
inc
fs
xor
arpl
jle
mov
mov
ljmp
add
xor
add
dec
insl
test
pop
add
int3
call
les
cmp
mov
loope
cwtl
loopne
cli
lds
aam
or
pop
ret
in
lret
popf
out
mov
mov
mov
mov
or
mov
pop
ret
loope
arpl
add
mov
dec
jbe
aam
jnp
mov
sahf
test
or
jg
xchg
sub
dec
in
dec
cli
test
mov
mov
out
and
clc
roll
xchg
adc
fidivl
stos
fldl2t
movsb
addr16
add
daa
or
jns
scas
sbb
or
subl
mov
sar
inc
xchg
imul
jns
movsb
add
bound
cmp
add
mov
iret
inc
in
mov
imul
add
sbb
mov
movsb
dec
jmp
movsl
inc
mov
inc
jg
test
or
push
imul
and
sti
std
fwait
or
shr
mov
mov
sarl
push
sbb
iret
inc
test
pop
or
mov
ret
dec
fsubrp
addb
xlat
pop
push
mov
int3
xchg
sti
push
pop
lock
ret
and
sahf
mov
lret
mul
adc
jbe
stc
xor
cld
add
aam
cmpsl
push
jo
call
xchg
pop
adc
ds
and
mov
mov
outsb
add
jns
stos
adc
xor
mov
movsl
mov
fsubrl
movb
xchg
mov
mov
dec
jns
cmp
sbb
and
push
test
mov
dec
lods
repnz
sub
stc
clc
jmp
cwtl
lods
ljmp
lds
icebp
mov
cmc
adc
loop
ficompl
cmp
mov
mov
xor
or
cmc
int3
pop
adc
sub
mov
xor
pop
stc
andb
jnp
in
subb
movsl
popa
and
popa
cmpsb
insb
xchg
popf
xchg
adc
movsb
data16
ret
adc
jg
pop
ds
je
cmp
test
aam
pop
mov
mov
pop
and
lret
xchg
rcll
cwtl
icebp
enter
arpl
sub
aam
fmuls
cltd
mov
adc
les
scas
inc
adc
test
push
stos
inc
xor
in
inc
adc
inc
push
mov
push
sahf
arpl
bound
aad
lret
loop
out
ret
inc
daa
fstl
daa
insl
adc
lcall
cmp
push
idivb
sbb
lods
push
popa
pusha
sub
push
loop
imul
insl
jo
out
shr
add
stos
mov
nop
ret
pop
dec
mov
and
scas
lds
cmpsb
adc
ret
mov
xchg
aas
icebp
daa
or
sahf
jo
es
ret
sub
mov
cmp
jne
out
mov
notb
sbb
dec
push
sub
lock
fisubs
cwtl
inc
xchg
dec
imul
xor
sub
popa
mov
xchg
cmpsb
loop
xor
hlt
movsl
or
jne
pop
pop
mov
add
jns
cmp
out
stc
iret
add
sbbb
jb
xchg
in
cmp
clc
add
jne
pop
gs
sarb
mov
mov
pop
lahf
and
sub
jmp
idivb
jbe
pextrw
cs
jmp
adc
roll
mov
inc
inc
shl
pop
ss
mov
cmpsb
clc
rcrb
test
sub
movsl
cmp
jb
pop
or
xor
pop
dec
mov
xor
pop
dec
dec
mov
insl
inc
sub
idivl
jne
test
push
pop
cmp
fistpl
mov
inc
adc
sahf
sahf
fstps
clc
cmp
inc
decl
add
pushf
insl
xchg
jmp
int
pop
cwtl
mov
add
mov
push
push
mov
mov
iret
mov
stc
scas
sbb
ss
aad
dec
das
out
inc
pop
push
lea
dec
inc
in
fs
gs
sub
outsb
popa
pop
or
mov
xor
or
addr16
aam
data16
in
testb
nop
xor
fstps
sbb
sub
jmp
pop
inc
mov
sub
or
add
pop
test
adc
stos
in
lock
inc
jl
push
sub
fdivs
popa
icebp
dec
pop
push
clc
add
push
mov
fnstsw
stos
or
nop
shll
cmpsb
mov
out
cmp
clc
daa
inc
inc
js
push
pop
enter
hlt
outsb
or
loop
sub
shll
pop
loope
setle
xchg
loopne
scas
sub
outsb
sub
lea
test
icebp
add
sub
lahf
pop
cmp
xor
jge
pop
sub
rclb
push
mov
bound
movsl
mov
lret
stos
aaa
lahf
xor
mov
cmp
cmpsl
jo
aam
shr
dec
sub
xchg
push
rcrb
scas
mov
insl
pop
aad
sbb
jbe
lea
lock
push
int3
cmp
inc
mov
and
mov
scas
ror
sbb
or
stos
insl
out
lret
xor
sub
stos
pop
or
or
cltd
xchg
push
pop
ja
jb
ds
sbb
mov
cmp
jmp
xor
push
push
or
inc
mov
shlb
add
stos
nop
imul
out
hlt
testb
loop
cmp
xchg
icebp
or
jmp
cmc
mov
mov
andl
push
call
in
cld
enter
fcompl
mul
test
adc
lods
mov
lods
leave
out
fwait
sub
xchg
test
scas
inc
or
mov
call
xchg
cmc
jl
repnz
icebp
fucomip
push
cmp
pushf
gs
out
push
mov
dec
cmp
fsub
test
nop
sub
and
int3
mov
outsb
sbb
mov
mov
out
std
stos
jae
sub
mov
push
and
add
xor
lahf
out
push
data16
sbb
pop
adc
xchg
cmp
popaw
mov
or
dec
xchg
or
ja
ljmp
pop
xorb
pop
mov
popf
ljmp
xchg
fisttpll
mov
add
sub
mov
shl
sub
mov
add
jo
mov
test
cmp
sub
icebp
popf
sahf
jbe
ret
and
mov
inc
cltd
push
push
add
cmp
leave
xor
in
lret
pop
inc
cmc
into
mov
jecxz
inc
outsb
cs
enter
xchg
and
mov
sarb
cs
aas
inc
shlb
and
in
ret
es
dec
mov
cld
std
es
std
test
xchg
testl
lods
pop
pop
xchg
fwait
ljmp
in
stc
and
ds
fnstsw
ss
jle
enter
shll
std
jnp
xchg
iret
push
outsl
scas
mov
in
inc
bound
mov
lret
fdivs
pop
mov
xlat
addr16
push
in
xor
das
pop
xchg
iret
or
inc
enter
lahf
mov
mov
or
aad
xchg
std
xchg
xchg
fsubl
shll
arpl
sbb
lret
popf
push
pop
mov
push
ds
push
sub
cltd
mov
aam
sarl
cmp
adc
popa
xor
hlt
gs
data16
adcl
push
scas
fsub
out
scas
not
sbb
nop
mov
xchg
int
xchg
push
jo
adc
aas
cmp
inc
in
ja
adc
lds
jle
mov
stos
sbb
cwtl
cwtl
mov
in
jnp,pt
hlt
jge
in
sub
push
pop
ret
rclb
into
cs
lock
outsl
inc
test
aaa
jecxz
pop
jae
dec
mov
mov
jl
imull
mov
xor
pop
jae
mov
adc
xor
fs
or
addr16
inc
jge
push
lock
mov
mov
es
xchg
nop
cld
add
xor
movsl
shll
sbb
mov
hlt
cltd
jge
adc
movb
fsubl
pop
mov
shrl
clc
xchg
inc
stos
repnz
nop
xchg
or
inc
or
es
test
sub
xor
rorl
pop
cld
mov
inc
mov
in
clc
mov
pop
stc
xor
push
aas
jns
cmp
pop
mov
movsb
mov
movhps
sbb
dec
xor
lret
not
mov
stos
xchg
cwtl
arpl
mov
xor
xor
subb
mov
mov
inc
or
cmc
mov
pop
mov
movsb
lret
cmp
inc
dec
cld
pop
cmp
xlat
addr16
xchg
cs
push
insb
jmp
fs
aaa
add
jmp
push
rolb
mov
sbb
dec
and
cltd
pop
mov
sahf
sti
outsb
dec
mov
lods
cli
sarb
push
scas
fcmovnb
cmp
cmp
fwait
mov
outsl
fildll
leave
xchg
pop
cld
movsb
adc
sub
arpl
mov
adc
fstpt
cmp
sub
jg
add
ret
push
xchg
aaa
and
fwait
jns
sub
popa
dec
leave
pop
add
cmp
mov
mov
adc
push
mov
outsb
stc
cmc
fsubrl
dec
imul
push
and
in
inc
adc
mov
hlt
pop
fwait
mov
imull
out
adc
inc
bound
sub
lods
inc
stos
popf
mov
xor
inc
fwait
test
jo
insl
sub
sub
mov
and
pushf
test
repnz
mov
leave
in
jb
cwtl
int
xor
fsubrl
mov
iret
inc
lds
ret
lea
pop
adc
fwait
fwait
inc
data16
mov
or
dec
hlt
call
pop
pop
icebp
out
xchg
cld
dec
fs
addr16
fstpt
cld
lods
out
mov
movsb
loopne
das
sub
popa
dec
mov
leave
inc
call
dec
out
xchg
xchg
or
lds
mov
jecxz
leave
dec
adc
mov
cvtps2pd
pushf
jb
nop
das
cmp
push
xor
jmp
sub
sub
inc
jp
add
add
add
test
cwtl
xchg
sbb
cmpsl
insl
mov
push
pop
fwait
cmpsl
push
lods
inc
push
notl
xchg
repnz
shrl
inc
es
xor
mov
push
jp
fwait
push
pop
mov
movsb
pop
mov
aaa
in
ret
mov
push
aaa
jns
das
adc
pusha
mov
or
xor
push
sarb
fmulp
call
xchg
outsb
cld
mov
xor
adc
in
cmpsb
adc
lahf
cmpsb
push
jecxz
lods
fcmovne
insl
mov
sti
sbb
mov
mov
sub
xchg
arpl
pop
xor
into
fistps
hlt
insb
adcl
pop
cmpsl
xor
test
call
loope
push
xorb
sub
sbb
lods
jg
dec
int
sub
adc
rcll
inc
adc
mov
clc
dec
jge
sar
into
mov
loope
xor
clc
cmp
dec
adc
pop
add
cmp
add
dec
sbb
testl
inc
mov
pop
cmp
and
lcall
fmuls
fwait
loope
sbb
mov
mov
xchg
mov
in
add
enter
mov
scas
or
and
pop
and
repnz
clc
xchg
mov
xchg
xchg
inc
xor
sbb
leave
addr16
sarl
pop
loopne
xchg
push
pop
icebp
sub
dec
lea
add
jne
push
jge
lods
jge
jl
lea
psrlw
call
lret
add
fsubrs
push
inc
dec
shll
sub
ljmp
out
dec
hlt
adc
loope
jnp
inc
fsubrl
js
into
movsb
aas
sbb
inc
stos
daa
cs
sbb
pop
xchg
pop
das
mov
cs
fwait
mov
dec
out
xchg
mov
ret
jp
dec
or
mov
sbb
xor
out
jmp
pop
inc
clc
mov
jnp
sbb
out
out
mov
or
xor
popa
xchg
fcomps
pop
mov
in
aaa
xor
and
xor
jmp
mov
xor
jmp
fdivrs
cmc
in
xor
add
in
sbb
dec
pushf
neg
test
inc
cmp
stos
cs
mov
cmc
mov
push
test
mov
mov
xchg
fidivl
push
shlb
push
mov
in
jno
fists
fidivrl
push
or
push
leave
jo
inc
mov
out
mov
add
das
in
pcmpgtw
jb
nop
insb
ficoms
cmp
sub
lock
push
xor
ds
xor
push
jmp
mov
loopne
cmp
dec
mov
sbb
jo
daa
dec
rcpps
stc
out
mov
mov
clc
xlat
pushf
mov
cmpsb
xchg
negb
mov
je
jns
aam
repnz
xor
fdivs
cmp
icebp
test
mov
divl
shrl
hlt
mov
jae
dec
fnsave
jl
into
data16
cmp
mov
movl
or
in
mov
add
sbb
inc
mov
aaa
jo
fs
adcl
and
testl
movq
jmp
add
int
pushf
push
jg
mov
push
cs
repnz
sarl
mov
dec
and
xchg
push
aas
add
xor
xchg
andl
pop
test
test
jmp
sbb
gs
xor
cmp
xor
ss
add
insb
jmp
lds
and
popf
jmp
push
push
xchg
adc
mov
popf
daa
lahf
cmc
inc
adc
in
pop
dec
icebp
xor
jae
xchg
dec
ds
jne
xchg
mov
hlt
sbb
xchg
mov
mov
stos
fwait
fs
pushf
lods
push
pop
ja
and
in
ja
inc
adc
mov
xor
xchg
inc
sti
orb
lahf
push
fbld
repnz
subl
push
jl
repz
push
aam
cmp
sub
cmp
mov
add
fucomi
scas
or
cs
mull
mov
mov
push
in
test
push
jg
adc
or
push
mov
lock
mov
xchg
fisttps
jae
sahf
xor
jmp
push
cmp
inc
dec
pop
push
mov
fdiv
imul
outsl
pop
das
dec
movsb
out
or
shl
adc
fadds
lock
aaa
dec
xchg
mov
pushf
inc
outsl
icebp
hlt
inc
out
or
mov
js
mov
das
idivb
push
mov
lret
jecxz
jge
js
xchg
xor
jno
mov
adc
mov
mov
les
ljmp
xchg
push
cmpl
test
int
shl
mov
or
cwtl
xchg
add
mul
mov
push
stos
iret
test
adc
flds
scas
xlat
aam
adc
mov
testl
fucomi
and
mov
push
insl
jg
pop
push
and
pop
xchg
xchg
mov
ja
xchg
jecxz
in
sub
dec
repz
xor
jge
lds
inc
mov
xor
adc
sahf
cmp
jne
mov
mov
xchg
test
lcall
iret
fisubrs
cmp
movsl
push
repz
shll
xchg
adc
lahf
movsb
testb
cld
inc
in
mov
sbb
popa
dec
mov
adc
jle
mov
lods
dec
jno
lock
xor
imul
dec
or
lock
je
pop
rorl
in
inc
out
mov
mov
dec
out
insl
mov
scas
jecxz
clc
pop
mov
cmpl
aas
jnp
fwait
xor
adc
leave
popl
shll
pop
stc
xor
jp
fdivs
scas
in
mov
stos
cli
xchg
jb
addl
icebp
pop
push
xchg
cmc
lods
rorb
out
pop
jg
push
out
mov
pusha
xchg
push
ds
adc
xor
inc
cld
mov
sbb
sbb
dec
add
or
lahf
sbb
inc
aad
xlat
jg
sub
scas
inc
les
in
or
repz
sbb
sahf
mov
push
scas
data16
and
mov
filds
into
movsb
or
mov
mov
ja
jge
push
test
into
push
fldt
pop
jbe
sub
dec
mov
add
push
adc
hlt
jecxz
cmp
mov
cmp
sar
sub
cmp
push
movsl
xchg
gs
mov
pop
addr16
imul
repnz
jg
data16
fsts
enter
movsb
jo
loop
push
es
push
cwtl
mov
in
in
dec
dec
jbe
jmp
sub
int3
rorb
sbb
add
xlat
jbe
inc
jnp
dec
dec
jae
or
sahf
and
dec
mov
xchg
cmpsb
je
test
sbb
xchg
cmc
les
mov
fidivs
dec
pop
push
pop
jbe
pop
in
add
xchg
movl
cmp
dec
sub
pop
adc
into
or
xor
push
pop
adc
push
stos
cmp
movsb
outsb
test
outsb
aas
dec
add
andl
mov
mov
stos
fwait
rcl
rcrl
insl
scas
sbb
mov
mov
jno
dec
sub
mov
mov
fistps
cmp
jl
jae
mov
mov
aad
into
cmc
mov
sub
or
adc
in
mov
fs
outsb
mov
adc
jne
mov
push
sbb
mov
ret
inc
mov
leave
lahf
add
int3
push
inc
cli
loope
jmp
sbb
pop
in
pop
cmpsl
push
add
outsl
popa
cmc
mov
subb
ja
mov
ret
call
subb
andb
std
loope
adc
cmp
imul
mov
sub
mov
int3
jnp
out
aam
in
adc
jmp
jl
jae
push
outsb
ljmp
inc
pop
xor
cmp
mov
push
cwtl
mov
aaa
or
mov
jns
xorb
arpl
ljmp
xlat
lcall
jl
hlt
in
mov
push
ret
roll
mov
add
sbb
xchg
adc
push
stc
outsl
or
and
xor
in
imul
sarl
pop
loop
rdpmc
in
cmpsl
std
data16
xchg
pop
mov
outsl
je
test
inc
cli
fs
popf
sub
shll
scas
add
faddl
test
xchg
ljmp
mov
pop
add
ret
mov
inc
sbb
fsubs
pop
adc
loope
push
mov
call
mov
aas
mov
dec
mov
jle
ret
pop
iret
lret
or
sbb
xor
push
jno
adc
bound
out
scas
sub
adc
add
push
pop
sbb
clc
jmp
cmp
inc
and
adc
inc
mov
dec
cmp
rorl
je
test
and
cltd
inc
in
sub
mov
arpl
cmpsb
pop
js
mov
lahf
test
bound
inc
cmp
fs
sub
sbb
mov
int3
push
insb
out
addr16
and
sarb
or
lcall
ds
test
popa
scas
xor
jmp
mov
push
mov
iret
out
jecxz
xchg
cmp
cld
fisubrl
leave
hlt
jne
sbb
cli
ljmp
jns
mov
jno
fiaddl
cmp
outsb
daa
jmp
jg
mov
jge
xor
or
xor
rol
shrl
lcall
mov
pop
mov
mov
mov
nop
pusha
push
xor
pop
add
stc
push
aad
mov
push
xchg
test
mov
cs
jo
xorb
adc
dec
cld
fdivrs
jb
mov
insb
ja
push
cmp
mov
loopne
mov
repz
push
jle
outsb
push
mov
xor
mov
push
xor
imul
pop
jo
and
push
sub
ret
lea
cmc
dec
ffreep
js
pop
popf
in
jge
mov
inc
test
fildl
insl
lods
loop
xchg
pop
adc
sbb
mov
or
push
jno
lret
pusha
out
push
mov
lahf
and
rcrl
int3
insb
or
push
in
data16
bound
mov
jg
hlt
add
fwait
dec
packssdw
xchg
push
mov
cmpsl
and
mov
dec
pusha
dec
xor
push
orl
or
xor
rorl
movsl
fsubs
sahf
aas
flds
or
inc
push
add
push
mov
inc
sbb
das
imul
inc
scas
insl
outsl
imulb
xorb
aam
orl
xor
mov
jno
and
push
sahf
iret
lods
push
rorl
push
xchg
pop
aam
or
gs
xchg
in
lahf
push
adc
cltd
inc
addr16
cmpsb
nop
add
xchg
fs
daa
adc
jp
mov
mov
js
lret
and
push
sbb
fiadds
cli
mov
dec
and
add
test
mov
in
inc
stos
mov
mov
push
jmp
jno
ret
dec
std
int3
mov
push
insl
ret
jmp
aas
add
outsb
leave
int3
mov
pop
call
add
popa
rclb
cli
push
or
xchg
into
cmp
or
jbe
imulb
push
dec
lahf
xchg
rcr
outsb
sti
hlt
push
inc
shrb
cmp
out
aas
clc
es
pop
and
imul
sub
pop
movsb
mov
fisubrs
xchg
pushf
mov
dec
jmp
cmpsb
jp
push
movsl
jae
call
sbb
inc
mov
lock
fwait
cmp
push
sub
mov
push
xchg
mov
pop
fs
push
out
cmc
jno
out
xor
pop
xchg
push
pop
stos
neg
out
xchg
je
scas
fsubl
and
inc
push
xchg
mov
xchg
jle
pop
jg
jnp
xchg
cld
sbb
mov
mov
inc
xchg
pop
dec
js
xor
fnstenv
iret
ret
push
sarb
movsb
shl
xor
mov
les
push
mov
bound
sbb
iret
data16
fcoml
ds
jecxz
jl
cmp
rorl
sbb
adc
hlt
icebp
cs
xchg
in
jge
and
popf
repnz
push
ficomps
and
pop
loop
xchg
add
lahf
adc
ret
imulb
and
mov
shrb
dec
nop
sbb
mov
inc
jo
cmp
xchg
out
push
mov
mov
mov
ljmp
inc
adc
or
jecxz
daa
sub
xchg
jae
inc
ret
cmp
fs
stos
push
test
dec
out
push
loop
ja
inc
in
sti
ret
mov
dec
mov
and
sub
mov
ss
stc
and
mov
and
mov
enter
stos
or
lcall
fs
stos
mov
fadd
jno
orl
int
sti
cli
arpl
jne
gs
push
xor
inc
shrl
or
in
xor
cli
inc
scas
repnz
fidivs
int3
sbb
push
jns
mov
cmpl
int3
pshufw
rorb
and
daa
sti
sub
ficomps
push
or
cmp
jmp
ljmp
je
xchg
out
test
mov
popf
movsb
je
jg
das
mov
in
push
push
dec
dec
test
cmp
imul
cmpsl
inc
addr16
or
lahf
sbb
sbb
inc
test
xchg
adc
jmp
mov
mov
cmp
fdivl
mov
pop
aam
mov
and
jle
inc
cmp
movsl
call
mov
adc
outsl
insb
sbb
dec
or
adc
imull
lock
test
adcl
sbb
dec
bound
imul
nop
xor
ret
aaa
ja
and
mov
jnp
add
mov
fptan
dec
xchg
lds
cmp
mov
ss
aad
jmp
cmpsl
xchg
iret
or
icebp
pop
incl
push
push
xor
cmp
adc
js
mov
cs
ljmp
lea
xchg
and
sbb
xchg
orb
sub
cli
mov
adc
cmp
mov
in
xor
leave
lods
push
stos
imulb
les
sub
cmp
sbb
sub
lods
lods
or
movsl
xor
sub
mov
cs
popf
sub
fsubp
pop
jp
cmpl
sub
mov
lret
es
pop
shl
lahf
fstpl
mov
cs
xchg
stc
rcll
das
pop
test
mov
push
testl
arpl
lock
add
mov
or
dec
mov
dec
add
mov
adc
xor
imul
daa
mov
ja
xchg
mov
aam
push
jno
testl
xchg
in
jecxz
enter
dec
fcompl
shrb
jbe
outsl
rclb
dec
jne
sbb
jae
inc
jle
inc
mov
scas
insl
jp
push
in
xor
imul
enter
gs
cmp
sub
sti
add
popa
xlat
and
dec
in
pop
das
inc
inc
in
mov
ss
gs
cltd
mov
inc
out
leave
add
adc
adc
xor
bound
sub
xchg
das
repz
sahf
subl
jmp
push
orl
jne
mulb
cmpsl
test
ja
cs
repnz
add
adcb
jl
inc
adc
mov
jae
dec
clc
mov
jle
xchg
inc
outsl
leave
add
inc
mov
cmc
sbb
jle
shlb
bound
inc
shlb
aam
mov
mov
mov
cltd
shll
push
adc
aaa
inc
adc
pop
sbb
call
movsl
cmc
add
sbb
or
inc
xchg
cmp
and
mov
stos
mov
lcall
shld
xor
inc
push
cmp
bt
lock
or
xor
test
mov
xor
xchg
aas
scas
repz
nop
cmp
sti
xchg
ret
jbe
fwait
jmp
mov
ljmp
or
and
jl
into
xchg
cli
idivb
or
roll
jo
pop
mov
or
cwtl
in
dec
sbb
faddl
popf
inc
fdivrl
mov
cmp
shrl
add
imul
pop
and
adc
out
daa
mov
pop
cmp
mov
pop
cmp
cmpb
sub
ret
pop
xchg
cld
pop
xor
out
js
pop
add
inc
or
js
inc
and
in
sub
and
push
lods
cmpsb
mov
push
decb
js
xchg
adc
push
mov
test
mov
aas
mov
fsubrl
mov
xor
out
inc
sbb
repnz
push
data16
cltd
insb
movhps
fsts
inc
xchg
stc
mov
into
and
jno
cmp
mov
add
out
scas
and
cltd
loop
lock
rol
adc
inc
push
sub
xchg
fmuls
pop
mov
xchg
pop
cltd
mov
lock
ljmp
xchg
sbb
sub
jno
clc
or
enter
sarb
add
or
cmpsb
movsl
adc
cmp
popf
mov
test
push
jnp
cmp
add
push
inc
push
xchg
sbb
hlt
jae
loopne
add
mov
and
das
in
and
xlat
shrb
mov
jne
neg
jle
mov
xorl
mov
test
sarl
mov
mov
mov
js
mov
loop
out
leave
mov
pop
bound
or
test
and
sahf
jge
fcomip
xchg
sub
cmp
xchg
fsubp
adc
jge
insl
lret
and
add
adc
int3
inc
lock
xchg
lret
xchg
imul
lock
jg
xchg
push
subb
out
scas
inc
mov
dec
jg
imul
dec
insb
inc
push
dec
xor
or
fs
xor
rorl
loope
ljmp
jbe
xor
test
std
push
jle
jbe
inc
mov
adc
jb
movsl
jne
xchg
mov
and
xor
lds
pusha
pop
lods
pop
cs
jo
aaa
adc
add
push
test
adc
out
push
mov
mov
push
test
or
add
aaa
hlt
jge
aad
mov
stc
pop
xor
mov
outsb
out
std
pop
mov
in
or
je
jnp
pop
in
cltd
adc
iret
add
daa
add
out
scas
and
inc
aam
popa
fcoml
pop
sbb
adc
cli
imul
es
out
rcll
inc
xchg
roll
mov
or
es
sbb
or
pop
sub
push
adc
sub
cmovbe
in
add
xor
in
jno
stc
mov
pop
push
loope
imul
aaa
clc
jnp
xor
cli
adcl
xchg
iret
jg
movsl
ret
pop
pop
mov
xchg
sbb
cmpsl
cmpsb
pop
outsb
xchg
sbb
sbb
loop
enter
dec
sub
mov
add
xchg
mov
xchg
cmpsl
push
mov
lcall
push
jne
add
or
pcmpgtd
ss
mov
push
addr16
aaa
mov
xchg
aam
push
loop
das
add
icebp
push
fnstenv
pop
loop
daa
xchg
cmp
std
and
cltd
cmp
mov
pushf
icebp
ret
sahf
pusha
popa
popa
xchg
rcrl
push
mov
add
or
ljmp
cmc
jmp
sbb
jle
sbb
adc
negb
ds
aam
out
aad
ja
xor
and
cmp
fwait
adc
cmp
add
sub
push
mov
pop
mov
pop
sub
in
sub
cmp
fwait
lret
and
aaa
xor
je
cmc
mov
arpl
jecxz
cmpsb
test
or
test
sub
mov
push
in
push
pop
and
loopne
or
shll
subb
mov
repz
lods
push
mov
xchg
out
mov
inc
lcall
jmp
cli
jmp
int3
mov
std
das
aam
pusha
loope
ja
or
leave
daa
mov
inc
inc
xchg
lds
movsb
outsb
mov
push
rcr
js
or
mov
push
xchg
pop
add
in
cmp
sub
mov
outsb
in
jb
or
xor
notl
int
insb
js
push
xchg
or
sub
dec
mov
xchg
dec
or
jae
out
int
mov
pop
sub
push
push
inc
out
push
ror
xor
push
sub
mov
pop
mov
sub
push
arpl
gs
sbb
push
jnp
pop
inc
xchg
std
sub
mov
out
jecxz
dec
mov
lea
ja
sbb
addb
fnop
inc
cmp
push
jnp
lock
push
cmp
aam
mov
inc
addr16
movsl
push
lock
testl
outsb
and
aaa
mov
xor
jg
inc
loop
mov
int3
mov
popa
xchg
xchg
test
jl
in
fwait
imul
jbe
les
lcall
xchg
jl
inc
out
sbb
and
outsl
xor
je
pop
jg
insl
pop
and
jnp
aaa
nop
add
mov
shl
test
pop
test
lcall
mov
andl
or
stc
aas
lock
cs
popa
adc
sahf
js
and
cmp
mov
xchg
xchg
pop
pop
rcll
jnp
and
xor
add
gs
mov
sub
adc
fistl
inc
inc
xor
and
inc
mov
push
in
mov
shlb
mov
pop
testb
dec
xchg
test
mov
dec
arpl
xor
aaa
push
jmp
adc
sbb
insb
ja
pop
push
cmp
popa
bound
or
pop
ds
pop
mov
out
dec
pop
xchg
and
cld
mov
mov
cmpsl
pop
fbstp
lods
outsl
push
and
inc
or
sbb
mov
mov
shlb
imul
loope
lock
mov
and
jns
pop
and
jbe
out
movsb
decb
fmull
sub
neg
mov
outsl
orl
cmp
cli
lods
fidivrs
jne
mov
sbb
sub
xchg
mov
fldcw
xchg
pop
push
inc
sub
mov
lcall
xchg
dec
imul
adc
mov
popf
add
roll
shlb
xchg
lock
mov
push
cmpb
jl
mov
ljmp
pop
loop
add
dec
lret
xchg
repz
aad
push
aam
mov
outsb
hlt
fsubrl
jg
and
dec
jge
call
add
cmc
cltd
jne
xor
out
test
ljmp
mov
mov
out
pusha
push
jecxz
sub
pop
sbb
jp
and
ret
pop
jecxz
int
scas
or
lds
sub
inc
icebp
mov
scas
fildl
xchg
sbb
adcl
das
or
rcrl
mov
jle
sbb
out
mov
cmp
jmp
and
inc
adc
rol
test
jmp
fcompl
mov
arpl
mov
inc
lods
loopne
ret
stos
mov
imul
popf
xor
xor
cli
sti
aad
xor
bound
lcall
push
mov
scas
xchg
dec
bound
push
push
mov
mov
adc
sub
jns
push
ds
sti
pop
jecxz
aam
jne
repz
cmpsb
jae
jp
lret
push
dec
loope
mull
mov
movsl
jbe
fs
dec
movsb
and
lahf
cli
jg
inc
clc
mov
dec
in
mov
push
outsl
das
mov
cmpsl
or
inc
repz
and
pop
dec
or
mov
hlt
dec
adc
xlat
sub
repz
dec
inc
dec
dec
ja
repnz
dec
std
push
mov
adc
fadds
lahf
mov
xchg
xor
cmp
mov
xor
repz
jmp
movsb
mov
outsl
test
test
stc
jo
push
or
cmpsb
in
inc
scas
jae
mov
icebp
fisttpl
xchg
and
jb
ljmp
pop
fscale
inc
mov
cmpsl
jg
aas
jnp
inc
mov
sbb
lock
jo
mov
add
ret
add
sbbb
inc
stos
insb
inc
add
add
sbb
nop
sbb
out
inc
cltd
mov
xchg
cld
mov
mov
pop
jmp
dec
adc
je
lea
add
inc
sahf
mov
sub
out
push
lock
push
rcll
cmp
push
or
icebp
subb
outsl
sti
lret
repz
scas
cmp
or
hlt
add
pusha
test
in
pop
leave
jle
xchg
outsb
lret
in
or
xor
cmpsb
int3
movsb
push
lret
pop
mov
insb
xor
out
cwtl
sbb
mov
enter
add
das
cltd
jle
std
data16
mov
and
jle
add
std
test
jb
scas
pop
mov
mov
push
jl
mov
mov
das
daa
test
out
mov
fwait
es
movsb
push
out
rcrl
test
rorb
push
or
cs
pusha
sbb
adc
and
aad
mov
xchg
adc
out
mov
int3
jo
cli
je
and
push
test
insb
lahf
icebp
or
push
ss
outsb
jb
fdiv
dec
ftst
xchg
jns
push
sahf
jp
lahf
test
stc
iret
aam
sub
mov
andl
sbb
lret
cmpsl
cld
sub
lcall
pop
test
rclb
xor
cld
hlt
xchg
mov
test
pop
pop
xor
push
sbb
push
mov
jae
adc
test
movsl
cmpsb
std
pusha
icebp
mov
mov
or
dec
scas
filds
scas
je
rcr
fdivr
push
subl
pop
std
mov
inc
or
dec
jecxz
adc
add
push
jge
dec
dec
sbb
sbb
dec
test
sarl
and
push
xchg
adc
out
mov
fistps
arpl
jnp
ret
pop
sahf
fxch
xchg
into
jg
fs
shrb
repnz
jo
ljmp
test
push
out
pop
icebp
sbb
lahf
popf
mov
jp
je
out
mov
lret
cmpsl
cld
inc
pop
xor
pop
mov
mov
pusha
stos
cltd
add
cli
xchg
dec
jmp
rclb
ljmp
int3
ss
adc
out
xor
sub
or
push
int
push
out
fdivl
and
cmpsl
div
pop
cmp
mov
mov
adc
shll
push
and
inc
jmp
out
push
add
in
out
jno
add
stos
cmp
and
and
subl
dec
out
ljmp
xor
jnp
xchg
ret
add
paddq
inc
cwtl
sbb
push
mov
mov
cs
je
dec
fbstp
lret
pop
push
mov
xchg
pop
xor
inc
sub
call
fcoml
iret
in
std
jns
fwait
gs
stc
pushf
jno
test
ss
mov
mov
test
repz
leave
insl
lods
mov
mov
cmpsl
or
push
push
mov
inc
sub
dec
loope
jo
cmp
mov
stos
and
mov
stos
adc
jno
inc
inc
adc
mov
pop
xchg
mov
pop
or
nop
mov
es
xor
inc
ja
sbb
cmc
fxch
mov
dec
xor
mov
fcompl
fwait
daa
adc
in
or
add
mov
or
jl
ficompl
lods
lret
outsb
out
mov
das
mov
setns
jne
push
dec
je
mov
add
lds
stc
test
inc
cs
je
inc
jne
adc
fnsave
push
insb
xchg
jno
rorb
repz
mov
dec
jbe
mov
repz
out
adc
push
ljmp
lods
iret
test
jb
movsb
xchg
adc
les
sbb
inc
sbb
xchg
jbe
in
jo
pop
loopne
pop
dec
jl
ret
into
xor
dec
out
add
lods
cli
movsl
popa
daa
cmp
out
mov
lahf
call
add
mov
cld
mov
ljmp
das
dec
inc
inc
cs
std
and
pop
mov
mov
pop
es
jne
aam
lods
adc
ficoml
mov
cs
in
ficoml
sbb
or
xchg
xlat
add
mov
pop
sub
dec
pusha
test
dec
push
rolb
into
jae
lock
dec
in
mov
mov
mov
lock
push
or
jbe
adc
lcall
jmp
xor
inc
addr16
and
orb
xor
cwtl
mov
movsb
lods
rep
inc
xchg
mov
test
and
xchg
adc
decl
lret
mov
in
jo
ds
jne
cmc
xchg
cwtl
cmp
adc
sub
adc
sbb
push
out
lret
sbb
lods
int3
xor
je
loop
addr16
jo
or
nop
dec
into
inc
dec
aad
bound
loope
mov
jno
test
mov
push
gs
out
mov
mov
aas
mov
inc
ficoml
push
stos
push
cmpsl
sbb
rorl
pop
push
adc
dec
mov
jp
sub
es
or
add
jo
mov
add
pop
dec
xchg
or
das
cmp
hlt
or
sarl
loope
cmp
mov
movsl
in
js
xor
test
jg
pop
fcomip
sbb
mov
dec
std
mov
or
test
sbbl
das
hlt
jle
test
into
test
or
xor
add
xchg
jp
mov
add
fldt
sbbb
leave
imul
mov
clc
hlt
push
dec
lea
mov
iret
aas
mov
jecxz
sub
leave
imul
sahf
pushf
mov
xchg
aad
adc
cmp
push
pop
mov
and
inc
add
cmp
es
or
repz
push
xchg
add
dec
test
leave
les
adc
sub
mov
jo
push
stc
in
stos
rep
pop
gs
adc
icebp
idivl
cmc
sbb
call
hlt
sbb
hlt
jg
aas
adc
dec
cmp
hlt
outsb
enter
add
jo
mov
push
insb
mov
mov
or
sbb
jns
jle
and
lcall
cmpsb
add
add
rcl
ret
push
and
loope
orl
jno
or
idivl
pusha
jns
shlb
push
adc
cltd
push
push
jno
push
xlat
cwtl
les
sbb
mov
or
arpl
sub
inc
adc
xor
dec
mov
loope
or
mov
mov
dec
sub
adc
aas
out
and
jns
pushl
jo
sbb
sti
and
mov
aas
popa
shlb
fadd
or
call
nop
aam
sub
cli
mov
lcall
sub
ja
mov
popf
pop
rorl
fs
pop
mov
mov
mov
dec
fsubp
call
xchg
fstpl
int3
jp
mov
lods
xchg
pop
repnz
xor
mov
inc
ds
sarl
test
dec
cmpsl
mov
push
ret
insl
sub
in
pusha
pop
add
xchg
or
icebp
cmp
inc
lret
xor
xchg
ret
mov
int
add
out
stos
pop
xchg
mov
es
dec
hlt
out
lock
cmc
ljmp
add
fiadds
cmp
shrb
sbb
into
dec
push
fcmovnb
bound
fistl
mov
repz
pop
and
add
mov
daa
xchg
add
cmp
icebp
imulb
pop
sbb
or
xor
lret
ret
movsl
xor
repnz
inc
xchg
cmpsl
ret
call
sahf
aad
mov
popf
xchg
xor
ljmp
pop
xlat
sar
cmp
jecxz
cli
arpl
mov
lods
push
push
ds
es
fs
jle
mov
imul
rclb
jne
aam
sahf
stos
mov
xchg
xchg
mov
sbb
faddl
sub
outsb
mov
imul
push
ja
je
out
enter
push
in
push
jl
cmp
lea
xor
sbb
mov
push
stos
aad
adc
sbb
xor
repnz
in
pusha
aas
pusha
sarb
inc
and
push
cltd
jmp
sub
lahf
pusha
data16
cli
aad
xchg
lret
ret
or
repz
out
xlat
insl
sbb
xchg
je
jmp
add
xchg
shlb
add
cmp
cltd
les
jns
mov
test
in
nop
fcoms
sub
inc
jg
xchg
andl
fiadds
repz
push
cltd
push
mov
aas
add
fsubl
cmp
daa
and
sub
shlb
inc
fistpl
scas
mov
dec
iret
push
inc
ljmp
and
pop
orl
rcrl
insl
jne
mov
pop
adc
jo
mov
and
div
dec
lods
call
mov
jo
std
imul
decb
mov
jns
cmp
cmc
add
and
shrl
ja
ret
addb
dec
imul
inc
pop
push
sahf
aaa
mov
mov
push
mov
loopne
ja
enter
mov
loope
cmp
movsb
clc
ljmp
shll
jb
pop
std
push
mov
jo
adc
jnp
call
jae
sbb
add
into
mov
test
outsb
lds
push
and
push
stos
mov
jns
push
push
test
ror
dec
cwtl
loopne
inc
movsl
xchg
sub
rcrl
lahf
xor
iret
pop
shl
and
int3
lods
and
lret
dec
lret
pop
test
in
lret
out
dec
fidivrs
in
pop
pop
mov
shrl
out
insl
push
insl
shlw
lds
pop
out
popa
mov
ret
or
pop
mov
lds
aaa
cli
test
or
mov
inc
out
mov
aam
fstpt
sub
mov
sbb
xchg
push
nop
inc
cmc
mov
inc
mov
pcmpgtw
xchg
sarb
les
mov
gs
cmpsb
pop
stc
repz
shl
or
aas
push
mul
sar
std
sub
arpl
int
adc
jb
mov
clc
add
jnp
mov
push
inc
test
lods
inc
andl
repz
aas
movsb
gs
into
inc
mov
push
sub
push
pop
add
mov
popa
inc
aam
inc
sub
lahf
and
stc
xchg
testb
scas
repz
push
adc
test
nop
in
mov
or
imul
lret
ds
sub
or
fwait
out
sub
mov
or
aam
test
repz
popa
insl
and
jle
frstor
cmc
aam
push
popa
lcall
cmp
lock
scas
add
popa
sbb
inc
into
adc
imul
push
xchg
mov
push
push
add
cmp
ja
call
repz
inc
out
jns
mov
add
ss
pop
scas
sti
in
bound
test
scas
pop
xorl
or
sahf
and
pop
loopne
ret
dec
sub
mov
movsb
push
mov
xchg
inc
sbb
inc
adc
pop
inc
push
shll
lea
pop
sub
mov
jbe
ret
ja
pop
inc
xchg
aas
inc
xor
pop
test
mov
clc
or
ljmp
addl
fisttpl
dec
inc
test
push
xor
in
outsl
xor
inc
xchg
call
xor
mov
daa
lea
dec
xchg
xor
lds
mov
std
aad
outsb
ret
std
aaa
and
movsl
test
lods
fcomip
sarb
xchg
and
fisttpll
cmp
jne
and
push
dec
add
sub
jbe
push
mov
or
aas
aaa
pushf
mov
push
mov
outsl
mov
and
dec
sub
lea
daa
outsb
scas
addr16
and
lahf
pop
xchg
or
cmovno
jb
sub
xchg
inc
mov
aam
rcrb
or
adc
fnstenv
add
cmpl
jb
mov
mov
push
dec
into
in
xor
repnz
clc
in
mov
movsl
shll
fsts
inc
addl
mov
aaa
sbb
aam
mov
jecxz
xlat
jmp
lcall
pop
sbb
inc
mov
repz
xchg
testb
push
add
addr16
dec
adc
dec
fs
cmp
out
sarl
movsb
ret
loope
cltd
adc
stc
jnp
fldl
mov
std
aaa
push
int3
jne
jg
mov
push
ds
push
not
jbe
stc
pop
xor
dec
or
dec
loop
ret
mov
imul
ja
adc
mov
popf
mov
scas
push
mov
loop
jecxz
and
inc
outsb
xchg
sbb
ljmp
adc
mov
ljmp
dec
mov
adc
or
addr16
cmpsb
dec
lock
and
mov
sti
mov
and
fcmovu
fwait
pushf
popa
cmpsl
dec
data16
lret
inc
cmpsl
push
xorb
sbb
outsb
push
roll
sbb
and
xor
aas
adc
sahf
enter
stos
in
add
push
insb
fildll
leave
mov
xchg
fisubs
mov
ja
iret
and
jge
lds
ljmp
jnp
sahf
sbb
sbb
pop
pop
std
hlt
rorl
fdivrs
mov
xchg
adc
cmp
sub
jle
push
fsts
aas
sub
and
idiv
sahf
mov
xor
rcrl
imul
ss
sti
xorl
inc
jl
sub
and
ficompl
mov
xor
in
jb
data16
pop
nop
sub
insb
sbb
pop
mov
leave
jns
enter
sub
cmp
push
cs
cs
and
loopne
lcall
lret
sbb
mov
stos
cmpsb
clc
mov
sti
enter
scas
and
into
cmpsl
cmp
jns
fs
push
adc
mov
ret
xchg
lods
pop
inc
cli
jecxz
add
mov
mov
test
sbb
jmp
shr
fnstcw
pop
mov
pop
push
or
xchg
cmc
sub
adc
daa
push
lcall
cmp
or
cld
mov
fsub
pop
xchg
cmp
jne
repz
test
je
inc
daa
je
pusha
fldenv
xor
jg
xchg
adc
sar
ror
mov
sbb
lret
popf
xor
addr16
adc
test
jno
inc
sbb
inc
mov
mov
data16
shlb
test
jns
dec
adc
mov
imul
sub
scas
scas
or
std
std
dec
fcom
cmp
out
ljmp
cmp
daa
ljmp
or
je
mov
push
scas
ja
jecxz
add
push
dec
add
jno
pop
aam
loope
call
mov
mov
mov
mov
adc
fisttpl
imul
inc
fwait
push
add
sti
add
sbb
add
mov
inc
cmp
xor
insb
or
lds
cmp
aaa
inc
cmp
fnstcw
xchg
jno
ss
push
test
clc
mov
add
shrl
jp
dec
mov
pop
incl
add
out
pusha
addb
sbb
mov
xor
lahf
mov
mov
hlt
cs
dec
loope
loop
or
inc
imul
in
adc
mov
xorl
xchg
jnp
and
push
xor
ds
mov
inc
pop
es
sbb
and
mov
lahf
mulb
in
fisttps
push
and
mov
cmp
sub
push
test
mov
and
sub
xor
fimull
xorl
jb
cmp
jge
gs
lock
pop
and
fs
les
lods
push
lods
loop
loope
in
xchg
xchg
inc
enter
fidivrl
mov
repnz
jae
dec
repz
fidivrl
testb
push
icebp
or
inc
and
gs
xchg
mov
xor
push
sub
icebp
mov
mov
cmp
js
ja
pop
sbb
mov
xor
loopne
xchg
loopne
push
in
inc
and
mov
out
mov
cmpsl
orb
jg
cmp
xor
daa
pop
or
mov
sub
into
fucompp
and
xor
pop
cmp
outsb
push
jge
mov
nop
in
pop
adc
or
dec
pop
cltd
lea
jmp
jne
push
je
mov
ret
rep
mov
pop
xchg
pushf
push
sti
cwtl
imul
dec
cmpsb
pop
arpl
push
rorl
lret
or
scas
outsb
mov
in
fiaddl
mov
xchg
or
movsl
sub
xor
icebp
outsl
movsl
in
adc
mov
inc
mov
pop
xchg
rolb
mov
dec
xor
and
push
cmp
lret
ror
and
frstor
dec
jle
outsl
jge
push
scas
mov
sub
xchg
in
fidivrs
jecxz
push
lret
jl
andb
jb
mov
pop
xchg
incl
in
rcrb
les
mov
jg
mov
shrb
inc
xchg
sub
outsb
sarl
ret
test
in
mov
ja
fs
cmc
leave
pop
mov
in
lret
or
outsb
mov
adc
arpl
xlat
mov
test
mov
adc
imull
add
dec
scas
decl
or
mov
out
add
rolb
mov
xchg
scas
or
mov
adc
or
push
mov
lahf
mov
je
popa
cmp
dec
in
leave
inc
lods
ret
mov
mov
loopne
lret
pop
retw
or
sub
call
lods
jp
loopne
add
mov
fisttpl
out
add
sub
rcrb
mov
sbb
pop
mov
mov
mov
jge
jmp
repz
push
shlb
or
ljmp
outsl
xchg
adc
pop
adcl
mov
ljmp
movsb
fwait
rorl
dec
rcr
sub
into
push
mov
jge
xor
xor
aam
pop
push
cmp
add
imul
movsb
jns
xchg
or
lret
outsb
and
sub
mov
pop
add
jmp
add
adc
outsl
enter
insl
add
pop
in
and
mov
jo
fldcw
cmpsl
mov
shlb
ficomps
adc
add
fld
imul
cmp
and
andl
cmp
cmp
icebp
sbb
inc
stos
mov
sti
or
icebp
aam
jle
jns
sbb
sub
xchg
cld
test
inc
mov
jmp
div
xchg
mov
adc
sbb
xlat
fs
out
mov
int
ljmp
lret
jmp
leave
test
dec
sub
push
mov
pop
lods
aam
xchg
pop
jmp
arpl
adc
push
ret
xor
xchg
inc
lret
imul
pop
ret
mov
popf
nop
mov
cmp
fwait
inc
and
out
push
cmp
xor
pop
push
or
mov
insb
push
adcl
jp
inc
xchg
jp
xor
nop
sarl
pop
xor
xor
push
les
pop
scas
pop
mov
sahf
adc
into
pop
jl
loop
ja
adc
push
popf
lds
jno
adc
or
mov
movsb
fldl2t
outsb
xchg
test
flds
jp
sti
xchg
jecxz
mul
imul
pop
mov
sub
loop
xchg
pop
fisttpl
cli
cltd
vandps
shll
sbb
imul
xor
ret
lods
nop
in
xchg
xchg
pop
jg
or
jnp
mov
mov
pop
mov
ds
std
leave
pop
bound
dec
sub
or
shl
popf
std
inc
shrb
sub
xchg
cmp
jl
leave
movsl
mov
or
mov
scas
sahf
insb
xor
dec
lcall
adc
dec
out
xchg
xchg
notb
stos
fsubrl
mov
xor
or
sub
sarb
jle
and
adc
pop
push
cmp
cltd
repnz
and
cmp
pop
fsubl
jecxz
mov
clc
fdivp
hlt
ja
and
xor
pop
les
jl
and
es
add
aaa
in
sub
xrelease
lods
jmp
inc
and
pushf
loopne
sarb
movsb
mov
pop
push
jnp
pushf
in
mov
pop
and
and
jae
inc
addb
lret
sbb
or
inc
fisttpl
stos
lcall
adc
sbb
xor
xor
sbb
jecxz
movsl
mov
ds
outsb
jne
mov
adc
jecxz
xchg
outsl
push
sbbl
or
dec
mov
adc
aad
xchg
outsb
add
or
decb
mov
sbb
je
das
adc
fcompl
or
push
push
js
fsub
inc
shlb
push
mov
sub
inc
scas
fiaddl
pop
enter
mov
outsl
add
call
cmp
or
cld
idivl
jo
fcoml
xchg
mov
push
xchg
bound
adc
fisubl
lds
push
mov
add
iret
cltd
lds
xchg
push
aas
pop
lods
jg
adc
push
mov
jae
or
lret
cs
pop
mov
inc
out
inc
int
xlat
inc
in
fstps
xchg
jecxz
jb
jns
mov
ds
rcl
in
popa
test
ljmp
pop
adc
push
pop
cmp
push
mov
jmp
cmp
sbb
in
mov
fdivr
xchg
and
dec
sahf
push
mov
and
mov
mov
jmp
test
cmc
mov
cli
test
fcmovu
adc
loope
xor
into
into
lock
push
push
add
adc
pop
outsb
pop
xchg
cmp
or
push
addr16
je
in
arpl
cmpsb
lods
test
fistpll
mov
popa
cmp
mov
jl
scas
xchg
pop
push
inc
or
cld
stc
mov
xor
aad
sub
pop
movsb
add
push
loope
les
pop
mov
cmpsb
insb
lret
inc
ret
ss
cmp
adc
out
sbb
movsl
inc
cmp
roll
fidivs
out
sbb
shll
jle
movq
pop
loope
shl
mov
aad
stos
loop
push
push
add
cltd
out
mov
scas
popf
arpl
stc
mov
test
int3
dec
ret
jmp
sbb
int3
pop
fidivs
jno
mov
loop
mov
cmp
adc
call
iret
int
data16
cmpsb
cli
insb
and
mov
ljmp
xorl
jmp
pop
xchg
push
jmp
and
ror
pop
int
es
int
add
insl
or
pop
outsl
dec
jns
add
fcompl
lret
and
lds
push
mov
mov
sbb
out
mov
call
push
insl
cmove
sub
jecxz
and
out
out
adc
pop
dec
and
cli
mov
jecxz
push
and
cmpl
scas
mov
flds
mov
adc
fnsave
or
repnz
notb
mov
mov
sbb
mov
popa
cli
add
js
out
repz
stos
mov
sti
sub
fs
and
cmp
xchg
mov
inc
sbb
xor
test
cmpsb
mov
push
push
leave
call
scas
pop
jbe
mov
inc
sahf
ss
pop
jne
std
cld
jb
andb
mov
scas
inc
lret
mov
lcall
ss
sbb
mov
mov
popl
rcrl
mov
push
adc
sbb
loope
ja
adc
sub
stos
test
loopne
sahf
insl
outsl
out
inc
loop
dec
cmpb
and
popa
fimuls
cmp
outsb
rclb
out
mov
xor
mov
icebp
ret
adc
movsb
lock
push
sbb
aas
daa
sahf
xor
shrl
sub
xlat
mov
fwait
jge
pop
sub
movsl
xchg
test
fnstcw
mov
cld
dec
and
mov
hlt
ljmp
loop
cld
adc
sbb
orb
push
push
pop
leave
lea
leave
sbb
mov
dec
jb
mov
das
sub
cmp
pop
push
leave
inc
dec
xlat
rcl
mov
mov
dec
jnp
insb
sbb
inc
mov
lds
movsl
push
mov
pop
hlt
dec
stc
lods
adc
push
fcmovbe
adc
pop
mov
popa
and
push
jno
mov
sbb
cmp
push
dec
pop
mov
arpl
addr16
or
jl
or
and
call
pop
mov
cwtl
pop
and
sub
cmpsl
mov
aas
fucomi
xchg
js
cli
jb
das
sub
dec
mov
push
sbb
mov
adc
aaa
insl
pop
test
sub
mov
adc
push
push
push
lods
cmp
dec
mov
xchg
add
movsl
lods
mov
jns
loopne
scas
sti
xchg
push
inc
or
sbb
pop
push
adc
mov
data16
call
stos
xor
ja
push
inc
popa
inc
push
inc
rorb
ljmp
mov
mov
xor
push
and
push
or
sub
and
and
subl
shlb
mov
push
jg
bound
pop
sbb
mov
jne
push
sbb
jae
mov
lret
insl
ficoml
xor
or
push
loop
test
ljmp
dec
leave
lcall
xchg
mulb
lretw
outsb
push
xor
loopne
mov
fucomi
mov
jnp
jp
shll
cmp
aaa
testl
or
lea
cwtl
cmpsl
ds
lock
sbb
add
mov
mov
xchg
jae
mov
or
jl
mov
adc
push
jo
xor
jge
lock
xchg
or
sbb
fisttpl
xchg
lcall
push
cmpsb
mov
rcrl
adc
push
mov
sbb
mov
stos
cs
lea
adc
add
push
das
decb
xor
orb
inc
or
sarb
push
sbb
es
pushf
mov
fists
pop
mov
loopne
sub
add
xchg
or
ljmp
add
mov
pop
add
sub
mov
mov
das
pusha
cli
outsl
fstl
insb
jg
pop
cwtl
push
sbb
mov
shr
xor
jecxz
and
lea
in
inc
fsub
mov
inc
mov
in
cltd
fwait
push
pop
sub
aas
mov
cmp
aam
fistpll
loopne
dec
jle
fisttps
jmp
fstpt
mov
cmp
mov
adc
push
shrl
jecxz
sahf
outsb
es
cmp
pop
dec
mov
imul
add
sbb
movsb
pop
mov
xor
or
push
mov
mov
imull
push
inc
std
sub
mov
xor
fs
cmp
jae
mov
mov
dec
push
push
lret
aam
sbb
scas
xchg
and
scas
xchg
jle
or
mov
sub
adc
mov
sub
sub
xor
mov
or
xchg
cmp
repnz
mov
push
cmp
pmaddwd
push
cmp
in
inc
repnz
mov
loop
add
filds
mov
mov
repz
sbb
aad
adc
clc
pushf
ficomps
js
scas
aas
push
sbb
hlt
push
cli
sbb
cmp
shlb
mov
dec
cld
pushf
ret
sub
pusha
and
ret
and
icebp
imul
and
cmp
lock
jno
mov
pushf
xchg
fsubrl
and
into
or
aaa
add
in
mov
jmp
jmp
xor
js
test
je
xchg
adc
xchg
xor
pop
jo
push
sti
clc
mov
lods
pushf
lahf
mov
fcoml
into
jno
add
mov
aaa
push
cmp
sbb
leave
cmc
jne
aad
push
sub
rcl
push
arpl
sub
nop
push
jne
out
pop
add
rol
jmp
add
imul
mov
add
shll
add
xchg
bound
pusha
xchg
das
iret
mov
sti
fsubrl
dec
xlat
mov
out
and
and
js
jns
mov
push
jns
inc
and
inc
and
inc
mov
cmp
jmp
call
mov
imul
addr16
fbld
add
push
mov
jnp
xlat
add
fwait
sub
xchg
stos
jg
enter
mov
pop
loope
cmp
mov
movsb
leave
xchg
js
adc
or
cmc
mov
je
dec
repnz
inc
mov
and
sbb
out
hlt
mov
mov
adc
sub
roll
mull
mov
fisubs
sbb
and
imul
aad
dec
je
outsb
cmp
imul
push
add
cwtl
scas
int
jnp
or
hlt
data16
dec
dec
pop
or
push
shlb
popa
sbb
rclb
inc
push
add
jno
dec
xor
pop
sub
pop
mov
xchg
push
cmpl
int
test
mov
jmp
popa
popa
stos
dec
pop
lods
outsb
lret
fstpl
pop
and
dec
in
arpl
lock
jno
in
lahf
push
and
mov
push
ret
insb
sbb
sbb
ret
lret
mov
cld
push
ret
test
cmp
inc
xchg
iret
mov
pop
xchg
jb
fisttpl
adc
push
add
out
mov
push
lcall
fbstp
pop
adc
or
push
in
movsb
je
adc
std
push
pop
cld
or
dec
dec
cmp
push
push
scas
inc
loop
lods
mov
cld
fisubrl
popf
fs
pop
mov
pop
jo
xchg
je
xor
jle
cwtl
das
add
ss
jbe
cmp
or
loope
fcoms
cmp
clc
into
push
mov
cli
or
lods
fsubrl
hlt
push
fisttps
and
cli
ja
jo
lods
pop
mov
push
sbb
mov
jo
push
mov
pop
and
mov
or
movsb
jno
pop
cmp
lret
mov
int
mov
inc
inc
mov
test
mov
jb
xchg
adc
sub
imul
dec
movsb
inc
sbb
dec
sar
sti
and
neg
sbb
pushf
push
pop
mov
adc
test
mov
xor
fcmovbe
popa
stos
fwait
orb
inc
push
icebp
mov
push
ljmp
push
push
loopne
testl
call
xchg
clc
push
das
sarl
es
cld
push
jg
mov
js
sbb
cmpsl
mov
mov
mov
xor
loope
pop
fwait
imul
xchg
je
gs
adc
xor
pop
push
repz
lds
insl
dec
sbb
adc
ljmp
xor
cvtps2pd
push
stos
inc
es
std
bound
ret
push
popa
or
das
inc
ljmp
or
xchg
inc
lret
frstor
inc
int3
lea
imul
sbb
adc
movsb
sbb
and
xlat
pushf
insl
fisttpl
and
div
ficomps
inc
mov
dec
lret
ret
jmp
addr16
es
addr16
or
xor
or
mov
mov
dec
inc
fwait
mov
pop
and
mov
fs
idivl
jecxz
cmp
add
pop
daa
lahf
stos
sbb
mov
test
ret
lea
test
ret
push
leave
outsb
rcll
imul
xchg
push
addr16
inc
addb
enter
daa
push
and
mov
xchg
rcrb
adc
das
std
mov
push
mov
and
xlat
push
adc
jbe
adc
xchg
arpl
lret
jl
dec
and
adcl
loop
cmp
roll
sub
xchg
inc
jmp
mov
push
in
jno
add
outsb
or
sbb
notl
sahf
xor
xchg
hlt
popf
pop
jp
add
jne
imul
mov
and
mov
sub
push
sub
sub
push
fwait
jge
sub
ljmp
mov
xchg
mov
js
fcoms
aad
pop
imul
scas
mov
stos
add
mov
sub
or
inc
es
push
xor
ds
or
lret
out
ror
in
rolb
loope
imul
sub
or
fcmovbe
pop
clc
sarb
arpl
addr16
outsl
pop
aaa
ret
mov
into
aam
loop
pop
popa
lret
pop
add
push
xchg
push
and
mov
mov
jb
cmp
movsl
in
roll
mov
stos
pop
cmp
lahf
jge
push
stos
cmp
push
incb
lahf
daa
dec
and
ror
and
dec
dec
adc
cltd
ja
mov
jle
dec
adc
cmp
and
test
aad
inc
lcall
mov
or
and
leave
and
or
xchg
sbb
mov
mov
sbb
ds
dec
mov
hlt
pusha
pop
nop
mov
and
je
or
out
pusha
pop
push
mov
cmp
cwtl
jg
pop
xor
out
lcall
push
jnp
xchg
movl
add
loopne
mov
enter
xchg
pop
lods
mov
test
ret
sbb
out
loop
jo
inc
cmpsb
push
stc
xchg
pop
mov
sub
pushw
jbe
xchg
stos
push
lods
leave
jnp
jae
js
cli
hlt
jns
out
sti
xchg
push
fs
ficoml
and
aaa
or
lea
sbb
ds
jns
hlt
sti
push
xchg
fldl
sub
lods
mov
ljmp
mov
sbb
or
int
jmp
push
addr16
repnz
stc
jne
mov
mov
inc
adc
sarl
cmpsb
out
push
dec
and
cld
movsb
jmp
jbe
pop
mov
sbb
fsub
rcrl
decl
dec
sub
data16
cltd
jno
divb
or
fsubp
and
test
dec
fstl
std
sahf
jnp
fxch
insl
stc
imul
idiv
xor
ljmp
mov
setae
ljmp
loop
push
and
jecxz
adc
and
cmpl
das
mov
mov
jge
lret
inc
sub
dec
pop
aaa
ficoml
mov
mov
push
out
xchg
cmp
cmp
add
cltd
loopne
ds
cmp
mov
mov
sub
mov
add
in
std
lret
jb
test
mov
add
xor
or
inc
add
ja
adc
mov
cmp
or
cmp
sbb
insl
push
mov
mov
aad
ljmp
adc
inc
jne
pop
and
in
xchg
test
ror
mov
mov
fldl
or
dec
xchg
aad
inc
test
add
sahf
add
sbb
push
imul
sub
cs
jge
cld
sub
enter
sbb
xchg
push
xchg
jno
xchg
mov
scas
mov
mov
jno
jo
jbe
or
fidivrs
cmp
stos
fldenv
loope
in
ret
orl
dec
cmp
dec
outsb
mov
leave
out
rclb
add
jg
cmp
lret
add
icebp
mull
stos
iret
pop
test
cmp
xchg
xchg
mov
fs
adc
out
inc
aam
popf
jo
push
mov
int
jns
lods
or
xlat
mov
das
jne
fisubrl
clc
inc
xchg
call
arpl
push
mov
lock
inc
push
mov
push
cld
push
dec
pop
and
jge
cli
jg
jl
cltd
shlb
mov
fcoms
pop
dec
clc
enter
xchg
shrb
mov
imul
lcall
fwait
xlat
inc
adc
ja
movsb
mov
lds
add
pop
rclb
cltd
pop
xchg
cmp
adc
xor
adc
lret
icebp
lret
adc
inc
pop
dec
jae
mov
fisubrl
stc
jg
jb
cld
clc
fidivrl
adc
add
jecxz
add
inc
jnp
mov
mov
iret
cmpsb
xor
jo
dec
adc
sti
dec
jp
adc
outsl
mov
stc
jnp
int
popa
ret
negb
xor
out
xor
adc
subb
xchg
fucomi
push
push
fmull
loope
cmp
pop
iret
pop
icebp
call
mov
sbb
leave
add
je
inc
mov
mov
xor
dec
xchg
pop
mov
sbb
repnz
add
idiv
fsub
inc
jle
std
mov
push
in
cmp
xchg
repnz
outsl
dec
add
inc
add
or
in
das
mov
imul
das
es
inc
jl
js
or
neg
jg
mov
jno
aad
adc
pop
xchg
pusha
mov
sub
pop
sbb
xlat
pop
bound
js
mov
jge
and
push
add
pop
jno
mov
jb
fwait
mov
xchg
out
pusha
stos
lret
cli
daa
xchg
sub
and
add
andb
insb
push
popf
cmp
mov
call
pushf
es
xor
jno
inc
lret
fldt
stos
jle
adc
sahf
fs
insl
cmp
sar
xorb
outsl
mov
sahf
fwait
out
aas
sub
xor
inc
fwait
loopne
sahf
inc
or
add
vmulsd
cmpb
pop
lea
pop
fs
into
push
clc
fcmovu
fdivrl
xlat
pop
fldt
fwait
mov
lods
lock
cmpsb
jne
push
cli
pop
fldenv
pop
and
icebp
test
sahf
or
and
lods
jle
jns
fstpt
push
lret
sbb
xchg
mov
inc
pushf
aam
scas
leave
scas
fsubrp
movsl
cwtl
push
fsub
fildll
stc
mov
sub
mull
fildll
insb
jg
imul
test
cmp
jmp
pop
fcoml
iret
test
sbb
lock
mov
aaa
es
sbb
dec
out
lock
mov
in
daa
lea
stos
repz
mov
adc
pop
fwait
jecxz
dec
lret
xor
test
inc
cwtl
bound
movsb
jle
out
jb
push
mov
or
scas
mov
jg
in
rorl
stos
test
pop
jb
dec
fnsave
cmp
lret
jns
xor
mov
popa
cs
mov
popf
pop
lods
jmp
outsb
fdivrp
push
xor
jp
fwait
mov
push
sub
jbe
fs
aaa
arpl
sub
in
and
inc
xor
lock
popw
mov
cmpsb
rcrb
pushf
adc
fisttps
mov
jmp
pop
and
add
xlat
jmp
ds
daa
xchg
mov
sub
cld
jge
mov
jae
lahf
sbb
and
add
push
dec
mov
fmul
mov
lods
jmp
hlt
jns
lahf
jne
das
and
adc
xchg
repz
add
or
in
xor
sub
push
xchg
out
lahf
sarl
jnp
jae
dec
sarl
push
or
cmp
les
or
mov
mov
or
jnp
stos
xor
sbb
fldcw
sti
jmp
xchg
mov
pop
cmpsl
or
cmpsb
adc
and
mov
insl
sbb
aad
lahf
loop
call
inc
movsb
int3
or
jmp
push
subb
lea
push
stc
lahf
xchg
sub
inc
pusha
mov
push
fwait
ror
cmp
mov
loop
adc
xchg
mov
in
