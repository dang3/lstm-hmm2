sbb
add
mov
pushf
mov
add
jmp
fisubs
jmp
test
push
pop
out
lahf
in
scas
sbb
in
push
lods
push
sbb
sbb
hlt
sbb
aad
mov
dec
ret
mov
rcl
jge
mov
enter
mov
sbb
insl
mov
in
scas
sub
into
push
rolb
mov
mov
pop
and
dec
ja
and
data16
cmp
decb
jb
loop
pop
cld
adcb
pop
adc
stos
icebp
mov
inc
lret
cmpsl
xor
sbb
aas
sbb
xlat
push
sbbl
cmp
cli
pop
mov
lea
xchg
sub
mov
lods
lcall
jl
fsubl
rcl
push
mov
mov
push
ror
pop
jecxz
pop
push
sub
cld
cmp
repz
out
in
inc
das
xchg
ljmp
adc
sub
test
jecxz
cltd
jmp
test
and
cmpsb
es
outsb
aas
rolb
fisubl
loope
push
sbb
push
outsw
cmp
mov
stos
mov
sbbb
inc
push
push
push
sahf
xor
loopne
cmp
lods
mov
jg
mov
push
push
nop
sub
pop
iret
ljmp
sub
xorl
xor
rcl
cmp
lahf
sbb
adc
notb
xchg
test
fstpt
mov
insb
push
cli
cmp
fildll
cmp
decb
daa
stos
push
orb
inc
jecxz
dec
sbb
call
pop
xlat
out
movsb
sbb
sti
repnz
jp
mov
lret
mov
pop
mov
xchg
push
outsb
add
push
pushl
inc
mov
and
push
stc
fwait
xlat
cld
inc
mov
movsl
adc
rcrb
and
mov
sti
and
mov
pop
ret
cli
into
jo
ffree
pusha
mov
jg
mov
inc
dec
push
lods
or
push
setno
inc
std
jae
fisttpl
bound
sbb
cltd
sbb
aaa
cli
mov
sti
mov
add
sub
scas
ret
into
rcll
jp
cmp
and
clc
push
sbb
ds
push
push
out
imul
jle
testl
mov
mov
in
int3
pop
lock
enter
out
popa
mov
pop
push
jne
cmc
inc
dec
rcrl
xchg
dec
outsb
call
mov
jmp
mov
fdivp
ret
in
add
xchg
cmp
addr16
ret
gs
xlat
rcll
sti
or
jmp
mov
dec
pushf
adcl
lods
lods
cmc
or
int
adc
mov
in
mov
adc
js
repnz
cmp
cmp
xor
imul
stc
and
push
add
das
insl
cmp
lods
ljmp
adc
add
pop
test
and
fnstenv
push
stos
imul
test
in
sub
push
push
arpl
add
jp
push
mov
stc
jns
mov
je
scas
orl
mov
sti
inc
fnsave
and
les
xorl
lock
xor
mov
push
inc
sub
sahf
jecxz
adc
sbb
in
js
loop
inc
lock
add
or
cmp
mov
cmp
test
adc
in
fistpl
mov
jmp
into
push
add
jns
cmc
and
xchg
aad
cmpsb
xor
lock
sbb
mov
push
push
repnz
dec
mov
cmc
and
pop
movsb
jno
mov
es
cmp
mov
mov
sbb
inc
ss
imul
aaa
sti
inc
mov
push
xchg
cmp
add
push
adcl
scas
add
xchg
ret
cmp
ret
mov
fdivrs
call
push
push
sbb
cmp
fmull
fsubl
imul
pop
xchg
mov
cmpl
or
mov
add
and
mov
outsl
and
dec
or
push
aaa
lds
sbb
in
jae
jl
push
movsl
fsubr
pop
inc
inc
je
xchg
imull
or
jno
lret
pop
ja
popa
scas
cmpsb
js
cld
sahf
shlb
inc
aas
imul
mov
lods
xchg
fisttpl
std
adc
xor
dec
aam
push
cmp
scas
or
inc
sub
cmpsb
xor
movsb
in
xor
adc
testl
xor
subb
dec
sub
addl
cld
sub
inc
sub
sub
jge
insl
push
lods
sub
inc
rorb
fwait
ja
divl
div
into
std
mov
mov
and
test
mov
xchg
lahf
pop
cmc
roll
filds
jnp
add
das
cmp
xor
and
push
inc
sbb
mov
or
in
pop
lret
aam
lock
sub
lahf
mov
jl
ja
jb
or
movsb
inc
repnz
stc
xor
add
or
xor
stc
jmp
ds
mov
les
inc
out
inc
mov
sub
outsb
iret
xchg
cmc
inc
xchg
jns
pop
mov
push
mov
inc
mov
out
mov
int
dec
add
dec
pushf
inc
in
lahf
arpl
xor
xlat
xor
int3
mov
push
insl
shrb
sbbl
push
stos
sahf
nop
fstl
sub
sub
rorb
fwait
popa
dec
roll
pop
int
add
test
adcl
sub
stc
xchg
pop
addb
inc
addr16
dec
fbld
je
adc
and
mov
in
and
jg
int
adc
or
jae
pop
test
inc
imul
mov
ja
shrb
cmp
scas
fcmovb
outsl
add
cli
sbb
and
mov
pushf
mov
jbe
mov
jecxz
or
jg
sahf
in
fisubl
jbe
lods
imulb
pop
sbb
ret
sub
hlt
stos
outsb
gs
ds
and
jb
dec
cwtl
ret
pop
dec
cmpsl
mov
dec
test
fdivrl
mov
or
mov
mov
nop
sbb
push
pop
ror
mov
dec
ja
outsb
jnp
pusha
les
xchg
bound
fimull
jg
mov
mov
movsb
stos
nop
ret
lret
fpatan
cltd
loope
movsl
iret
js
sub
inc
jno
xlat
pop
outsb
ffree
push
or
inc
mov
sub
dec
scas
push
inc
adc
mov
xchg
mov
mov
frstor
dec
incl
or
inc
pop
or
rcrb
data16
ss
pop
out
sub
inc
imul
js
adc
sarb
adc
cld
lods
mov
mov
mov
jle
testb
dec
loopne
adc
lds
mov
jmp
dec
xlat
or
mov
mov
rep
add
adc
imul
sbb
je
clc
mov
popf
fmull
iret
fisttpll
jnp
movsl
iret
cmc
ret
inc
cli
jecxz
sbb
movl
sarl
lret
test
mov
inc
idivb
push
aas
adc
cmp
bound
frstor
jns
jmp
xor
cs
xor
jl
pop
xchg
and
dec
add
mov
dec
pop
aaa
mov
mov
inc
push
test
sbb
and
push
jb
adc
popf
mov
jle
popf
mov
inc
adc
or
mov
jb
bound
fwait
int3
mov
fwait
into
iret
sahf
inc
pusha
xchg
das
std
mov
mov
sahf
scas
xorb
xchg
inc
pop
outsb
dec
xchg
cld
pcmpgtd
je
inc
mov
or
arpl
lea
dec
inc
lret
in
cwtl
inc
mov
ret
adc
sub
mov
xor
lret
xchg
fcoml
adc
pop
pop
push
adc
movsb
pusha
test
cmp
cmpsl
insb
sbb
sbb
sahf
int
es
xchg
adc
xchg
cmpsb
cmpsl
xchg
stos
lret
clc
notl
cmpsb
dec
decl
inc
out
sub
cld
sbb
mov
dec
dec
aad
mov
and
mov
pop
fs
out
jne
xchg
mov
in
and
out
adc
stos
and
stc
mov
mov
inc
add
movsb
out
outsl
inc
jbe
xchg
sub
mov
jmp
cmpsb
sbb
push
pop
jle
fadds
repnz
ror
adc
popf
sbb
pushf
adc
mov
fcoms
loopne
pop
aaa
out
test
xor
add
xchg
lods
cmpsl
popf
and
push
leave
jns
and
mov
cld
cmpb
push
xlat
pusha
popf
mov
xorb
and
mov
jo
sbb
push
jbe
iret
shr
lret
lcall
out
cwtl
push
cmpsb
les
imul
adc
in
inc
jno
xchg
adc
jle
aad
and
popa
xor
pop
das
xchg
out
adc
push
ljmp
jne
cmp
leave
dec
rcll
jl
jno
mov
outsb
pop
adc
je
push
dec
cmp
test
cli
mov
fs
adc
das
imul
jge
inc
aam
push
fwait
add
mov
insl
enter
leave
sub
into
jnp
push
pop
and
lods
or
call
jne
in
xchg
mov
pop
das
imul
adc
mov
sbb
fmul
mov
es
lcall
add
or
aad
ja
or
jmp
cmpsb
js
lret
push
call
jno
jbe
insb
add
mov
pop
aam
adc
hlt
adc
mov
ja
lcall
and
dec
mov
lcall
mov
and
aam
ja
test
sub
arpl
lock
xchg
xor
gs
and
mov
jo
cmpsb
mov
jno
setae
add
inc
das
and
xor
mov
mov
in
add
push
fwait
cmc
adc
fists
fisttpll
movsb
aaa
popa
in
ja
push
or
or
sub
stos
enter
es
adc
xor
stos
xlat
pop
inc
mov
pop
test
addr16
aad
lahf
push
sti
xor
jge
hlt
lods
and
popf
out
push
mov
out
add
mov
dec
pop
jae
or
add
lea
add
pushl
cld
imul
or
add
movsb
pusha
outsb
in
cmp
mov
lret
mov
or
mov
mov
sarl
std
xchg
inc
fmuls
movsl
adc
jp
xor
xor
jmp
aad
inc
jb
rorl
jb
loope
xor
cld
mov
lds
test
adc
mov
cmc
cmpsb
movsl
pop
fwait
jno
ret
and
xchg
push
mov
xchg
sub
lods
push
insl
out
xor
pop
push
jmp
in
mov
mov
sahf
js
out
fdiv
inc
outsl
mov
and
sarb
jnp
jl
cmp
pushf
jle
pop
and
mov
add
adc
fisubrl
jg
pop
push
out
jb
xor
mov
sub
add
xchg
out
jno
rol
adc
popf
insb
aad
push
mov
imul
mov
rorl
int3
shrb
jnp
xchg
inc
cmp
pop
dec
lcall
cmc
mov
repnz
imul
flds
sbb
test
jl
mov
je
scas
add
sbb
jge
test
xchg
push
sub
or
std
xor
pop
stos
mov
or
mov
sbbl
jle
pop
cmp
xlat
xor
mov
sti
xchg
inc
xor
adc
rolb
js
dec
jbe
cli
hlt
jg
xor
and
out
sbb
pop
loopne
push
pop
pop
call
add
or
int3
outsl
push
fst
or
and
jmp
negl
imul
mov
loopne
outsb
jae
push
jg
xchg
out
cmp
xor
loopne
out
push
push
inc
mov
mov
xchg
fsub
sbb
pop
jns
push
out
mov
or
add
ficoms
loope
mov
push
repz
adc
jae
jle
je,pt
and
cmp
xchg
sub
push
xchg
sub
or
ja
cmp
xchg
inc
xchg
in
jo
cs
sbb
mov
scas
gs
xchg
popf
shlb
push
out
adc
mov
xchg
ljmp
scas
mov
jge
aas
inc
add
push
push
popa
adc
inc
popf
adc
and
push
fldt
push
mov
sbb
cmp
xchg
cmpsb
mov
loopne
dec
mov
repnz
mov
pop
push
ja
hlt
mov
aam
je
and
jne
jns
pop
jmp
out
fiaddl
leave
jl
jmp
cwtl
adc
add
cmpsb
sub
loop
push
imulb
adc
add
imull
add
movsl
lea
xor
inc
clc
in
enter
pop
idivb
mov
cmc
iret
sbb
mov
lcall
xchg
clc
push
or
add
icebp
xlat
inc
mov
or
testl
movsl
in
sub
cmp
mov
push
xchg
lds
or
shrl
es
push
mov
adc
cmp
add
shl
stc
cmpsl
daa
push
mov
xor
xchg
or
cmp
test
or
shrb
pushw
iret
sub
cli
idivb
es
in
lcall
pop
inc
ljmp
mov
shr
out
sbb
gs
inc
xchg
rorb
fiaddl
shrl
push
or
or
cmp
xchg
dec
sub
in
jl
movsb
fdivrl
stos
popa
test
add
pop
jge
sub
dec
fnstsw
dec
dec
outsb
push
inc
push
test
mov
cmp
insl
in
inc
cmp
jbe,pt
adc
jp
stc
pop
test
test
decb
nop
jmp
pop
adc
and
leave
ret
fadds
add
sub
mov
lea
out
fs
pop
out
mov
cmpsl
or
shrb
sub
shlb
insb
sub
je
mov
cmp
insl
push
out
add
xor
mov
addb
leave
rcr
mov
cs
pop
or
pushf
test
data16
mov
mov
std
loop
jg
xor
enter
stos
or
adc
cmp
repnz
xchg
jbe
es
mov
mov
pop
fdivrl
add
mov
ja
movsb
mov
dec
jb
loope
adc
pop
adc
xor
sbb
push
in
xor
sbb
je
mov
orb
dec
push
pop
sub
imul
lcall
nop
add
inc
xor
adc
sub
fsts
xor
pushf
xor
mov
call
cmpsb
xor
sub
and
call
ret
jl
test
dec
dec
adc
and
mov
dec
leave
push
inc
mov
mov
test
addr16
cmp
or
daa
lcall
fsubl
pop
xor
inc
add
xchg
or
mov
in
or
adc
addl
push
lock
adc
mov
stos
push
out
push
in
roll
cmp
jge
add
cmp
jne
push
xchg
mov
and
leave
lret
sbb
xchg
fisubs
pop
add
push
rol
lret
sti
jo
jmp
mov
dec
pop
sub
mov
push
cmpsl
xchg
jbe
negb
xlat
pop
fwait
add
cmp
xor
jne
cmpsl
cmp
nop
scas
aaa
xor
lahf
mov
mov
call
popf
in
icebp
aad
dec
xrelease
inc
outsl
pop
dec
add
mov
mov
sbb
cmp
int3
fisttps
fwait
dec
fistpll
call
fdivp
jb
push
cmp
add
addr16
aad
or
mov
pusha
sti
shl
push
dec
or
std
lcall
aad
add
stos
mov
incl
push
movsl
or
addl
aam
xor
or
dec
push
insl
loop
pusha
mov
xchg
mov
cmp
ret
hlt
sub
pop
mov
loop
push
sub
cmpsl
push
loop
mov
pop
leave
or
add
pop
or
out
mov
xchg
dec
push
lahf
lods
out
insb
insb
sub
or
dec
cmpsb
das
inc
aam
sbb
jp
inc
adc
mov
mov
mov
mov
jecxz
lods
adc
mov
xchg
cmp
imul
or
out
or
lcall
mov
test
adc
enter
sarb
jae
pop
mov
cmpl
cmp
sub
sub
jg
leave
test
push
inc
pop
cmpsb
xlat
mov
lods
xor
push
mov
cmpsl
mov
out
add
sti
shll
adc
addb
dec
cmc
arpl
and
lods
mov
mov
mov
sub
sub
pusha
mov
lahf
cmpsl
cld
cmp
xor
loop
sarb
sbb
xor
loope
int3
into
mov
addl
je
or
mov
out
cmp
inc
repz
mov
lds
das
nop
xor
and
jmp
xor
cltd
test
fldt
mov
shlb
icebp
cwtl
lahf
add
xor
neg
inc
sbb
imul
test
lret
push
sahf
adc
imul
mov
std
sub
inc
mov
addr16
int
push
scas
pop
int3
jle
mov
loope
and
sub
push
inc
shrb
dec
lods
es
and
cli
andb
xor
adc
sub
inc
mov
or
call
repz
xor
pop
cmpsl
xchg
push
scas
aas
in
mov
adc
mov
or
mov
sbb
mov
inc
lret
sbb
mov
mov
shl
inc
int3
xchg
add
and
pop
mov
dec
dec
das
scas
sbb
sbb
push
enter
fcompl
fcmove
xchg
scas
push
cmpsl
mov
jge
jne
push
xchg
fisubrl
ljmp
in
sub
mov
iret
ljmp
cmp
jbe
push
dec
push
inc
sarb
xchg
jo
push
mov
cli
test
pop
daa
into
outsb
lods
xor
mov
sti
mov
xchg
pop
aaa
dec
cmpsl
lods
xchg
adcl
mov
lock
xor
mov
cli
aad
cmpsl
mov
fstl
dec
sub
xor
daa
push
mov
sub
sub
cmpsb
add
ja
into
mov
sbb
lods
pop
das
cwtl
or
mov
loopne
cld
loope
lods
lds
stc
jmp
shll
sub
xchg
inc
cmpsb
in
lret
movsb
mov
aam
add
jle
fs
mov
and
movsl
mov
sbb
insl
fidivs
sbb
lret
jo
arpl
ret
push
cmp
mov
xchg
into
psrlq
pop
mov
inc
fstl
cmc
cmc
mov
hlt
lea
xchg
stos
ja
inc
clc
jo
dec
test
aam
cmp
sbb
push
gs
rolb
insb
ja
lea
insl
in
jp
mov
cli
sbb
mov
sti
and
ss
xor
pop
cmp
xor
ljmp
adc
dec
jns
sarb
fbld
iret
add
jae
ret
xchg
inc
push
inc
jnp
xor
pusha
xchg
add
mov
sub
pop
aaa
add
fwait
inc
pop
or
mov
mov
fs
ret
fidivrs
adc
lods
pop
fs
mov
push
clts
adc
and
mov
out
hlt
pop
add
es
inc
inc
call
or
fdivrl
cmp
iret
adc
leave
aaa
inc
inc
or
cs
cmpl
jp
pop
inc
add
mov
gs
pop
popf
and
sbb
inc
sbb
fidivrl
and
pushf
rclb
sbbl
loop
int3
mov
call
mov
jb
mov
or
lret
xor
push
into
jns
inc
or
sbb
adc
inc
es
psubusb
jno
sub
mov
aas
in
nop
jo
stc
jecxz
sub
movsb
insl
add
push
pop
sbb
adc
inc
call
cmp
push
pop
popl
mov
jnp
cmpl
xor
les
push
test
loope
push
scas
cmp
jl
movsb
dec
sahf
dec
xor
dec
test
aam
add
cwtl
in
sbb
pop
ret
daa
fcmovb
lcall
cmpsb
mov
fs
movsl
sbb
mov
insb
aam
pop
je
or
sub
mov
adc
test
xchg
xchg
cmp
inc
test
ret
dec
insb
mov
adc
ljmp
das
stos
sub
test
leave
pop
mov
sbb
jno
in
or
push
clc
jns
in
fnstsw
mov
mov
adc
push
sub
push
mov
xor
pop
cmp
inc
test
cld
and
shl
jns
push
fistl
jno
add
push
cmp
mov
mov
inc
push
test
sbb
inc
aas
push
sbb
inc
cld
int3
dec
inc
rcr
adcl
loop
loope
orl
sar
fbld
fldl
fsub
std
lea
mov
outsl
mov
xchg
pushf
add
mov
push
xchg
stos
adc
shrl
cmpsl
inc
adc
outsw
icebp
orb
pop
mov
sbb
pop
outsb
rclb
push
out
mov
and
add
jnp
cmp
lock
inc
push
aad
pop
js
in
add
gs
jb
jp
leave
dec
sub
jns
sarl
daa
daa
cli
mov
repnz
es
mov
pop
fldl
daa
adc
rcl
out
lods
into
ret
mov
fsubs
jg
sarb
pushf
ja
std
push
and
jmp
es
and
add
in
cwtl
push
outsb
sti
pop
jns,pn
jb
arpl
add
cmp
mov
popf
jbe
js
cltd
repz
jbe
jns
push
adc
inc
sahf
ja
xor
mov
pop
inc
cld
dec
fisubrl
xchg
dec
push
push
cmp
imul
and
ret
jge
call
inc
inc
pop
mov
cmp
adc
push
pop
jecxz
pop
ret
mov
lods
cld
mov
test
mov
pop
sbb
pushf
popf
adc
test
xchg
push
mov
mov
testb
pop
iret
or
push
push
cwtl
lret
jb
sbb
orb
out
mov
mov
ds
push
in
jnp
adc
movsb
je
dec
sbb
test
pusha
xor
sub
aas
stc
jmp
xchg
push
push
bound
sar
ss
in
push
fyl2x
lods
insb
mov
mov
in
pop
xchg
pusha
xor
push
insb
jecxz
jnp
fldt
dec
out
addr16
fdivs
xchg
inc
loopne
xor
xchg
adc
xchg
pop
enter
outsl
repz
add
jge
cmp
scas
mov
jp
stos
push
ljmp
add
and
arpl
movsl
pop
or
cs
test
int
psubd
mov
jae
inc
aad
or
aaa
andl
rorb
fnop
enter
out
or
lock
mov
stos
loopne
cwtl
pushf
inc
ds
adcl
in
dec
adc
pop
mov
jmp
mov
xchg
mov
mov
out
add
mov
jl
popa
mov
into
adc
xor
outsb
insl
hlt
mov
pop
sbb
cmp
inc
mov
sbb
insb
repnz
notl
xchg
adc
xchg
or
mov
out
clc
push
adc
or
ret
dec
push
xchg
ljmp
pop
lock
cwtl
push
jl
outsl
and
addr16
leave
lock
and
xchg
jecxz
test
pusha
rcrl
fwait
cmpsl
xchg
push
cmp
sar
fisttpll
rclb
xor
repz
push
mov
lcall
dec
cld
je
jg
push
xchg
daa
xchg
sahf
push
arpl
mov
add
mov
pusha
push
ffree
cmp
cmc
add
mov
jp
enter
jle
cli
xchg
ja
dec
es
popa
fcomi
add
lds
mov
cmp
dec
popf
pop
lds
icebp
pop
sub
push
mov
jne
cmp
mov
and
mov
fcoml
dec
inc
into
and
pop
push
push
cmpsb
push
jp
fcomps
cltd
jg
sub
cmpsb
fld
adc
inc
insl
cli
xor
jnp
and
jns
aas
cld
lret
ret
popf
les
add
aas
stc
or
pop
xor
shlb
lds
iret
or
popf
or
cli
ret
call
daa
sub
push
mov
dec
or
add
xchg
inc
xor
aad
loopne
jmp
pop
mov
or
jb
es
mov
sbb
mov
cmpl
repz
cld
rorl
jnp
xchg
push
lcall
add
xor
loop
data16
adc
cmp
add
and
fbstp
cmc
pop
push
pop
popf
pop
sub
fnstenv
jl
or
push
or
cld
and
lahf
lcall
xor
push
jecxz
mov
mov
fsub
loopne
sbb
adc
dec
pop
and
enter
sbb
std
mov
mov
mov
mov
mov
loope
orb
das
cmp
std
cmpsb
movb
push
stos
or
cltd
push
int3
in
cmp
and
xchg
push
push
out
push
fistpl
cli
dec
xor
mov
lcall
mov
xor
cmp
rolb
fldl
push
inc
scas
or
fistps
test
mov
sbb
test
inc
shl
pop
mov
fwait
rcrb
adcl
xor
es
ja
lahf
nop
sti
scas
nop
stos
cmc
lods
push
cmp
fisubs
test
ljmp
mov
xchg
mov
insl
enter
leave
inc
xchg
cld
clc
sarb
xchg
aam
out
xor
jne
xchg
insb
inc
not
movsl
xchg
icebp
push
sub
cltd
xor
jge
and
jp
mov
push
mov
std
out
add
sar
divl
cld
cmp
push
imul
push
out
inc
sub
push
mov
jne
subl
xchg
mov
insb
rcr
push
int3
adc
pop
pop
mov
pop
pushf
jl
xchg
fists
call
push
inc
mov
pushf
dec
mov
jo
sahf
pushf
pop
jecxz
jg
jl
fwait
in
call
jmp
insl
lock
pusha
stc
cli
lock
idivb
int
les
xchg
outsb
or
xchg
test
push
out
pop
scas
jp
cwtl
or
mov
xchg
insb
xor
lods
roll
or
cs
adc
add
popa
mov
scas
dec
push
sbb
xchg
pop
pop
sbb
clc
xor
sti
in
pop
inc
sbb
in
ljmp
and
and
dec
mov
les
pop
xor
lods
ljmp
adc
stos
js
mov
sbb
xchg
mov
xlat
je
ljmp
mov
mov
pop
push
cmp
dec
jge
jne
mov
stos
les
ds
xor
jnp
sub
mov
mov
aad
scas
mov
sub
mov
lods
or
stos
imul
jae
imul
ss
mov
mov
enter
fs
and
daa
jne
push
push
repz
sahf
cmp
cmp
test
daa
outsb
push
cwtl
call
jne
gs
xor
pop
or
sbb
push
mov
das
pusha
in
mov
hlt
ds
mov
sbb
jecxz
faddp
xor
sbb
iret
lret
xor
stc
dec
push
jnp
mov
cli
popf
jns
mov
or
adc
push
jbe
popf
out
pop
repnz
imul
xchg
jae
sti
push
fisttpl
inc
add
xchg
jne
sbb
scas
inc
mulb
cmp
mov
dec
je
fildl
jecxz
std
nop
pop
inc
xor
or
out
cmp
gs
imul
and
lods
fsubs
mov
mov
adc
push
push
dec
mov
xchg
and
cmp
aad
adc
repnz
fidivrs
test
out
mov
jnp
inc
mul
cmpsl
movsb
xor
xor
inc
jns
call
call
mov
stos
jl
test
push
gs
aam
stos
cmc
mov
pop
movsb
cmp
mov
pop
movsb
addb
mov
ja
add
sarl
enter
js
in
push
imul
pop
cmpsl
mov
mov
pop
negb
ret
push
push
pusha
xchg
icebp
xchg
mov
fmull
ds
mov
lret
sbb
pop
in
into
into
insl
nop
daa
gs
mov
cmp
push
cmp
fwait
in
pushf
jae
and
push
ljmp
push
fildl
fwait
jbe
lcall
push
or
lods
and
mov
rol
sub
pop
les
add
ret
cmpl
popf
dec
sub
dec
push
or
jge
xchg
outsb
adc
shlb
imul
pop
jo
mov
lret
imul
js
leave
lods
in
arpl
xchg
fcomip
xor
call
int
out
shrb
mov
and
loopne
cwtl
mov
xchg
out
loop
loopne
jge
sub
testl
icebp
das
cmpsl
or
push
xchg
int3
inc
pop
scas
lret
jp
jg
xor
cltd
mov
lods
inc
xchg
inc
sbb
je
mov
mov
int
into
mov
cvtps2pd
out
xor
push
cmp
inc
pop
dec
ljmp
inc
insl
pop
dec
inc
out
sti
movsb
xor
sbb
movsl
inc
push
xchg
adc
dec
jle
or
lock
and
and
andb
pop
fnsave
loop
pusha
insb
rcll
mov
scas
shll
xchg
pop
shlb
pop
ficompl
sub
adc
inc
dec
push
shll
negb
mov
xchg
push
xor
test
gs
fldl
fucomi
nop
jae
sub
mov
pop
fldcw
int
xchg
sbb
enter
xor
shrb
in
dec
mov
push
and
test
jg
add
inc
sbb
jg
xor
dec
movl
test
xor
dec
insl
xchg
sbb
fs
jae
repnz
cli
int3
addr16
sub
lret
bound
xchg
pop
hlt
int
arpl
dec
and
movsl
pop
add
test
xchg
pop
pop
dec
and
fbld
mov
mov
lret
sub
xchg
add
mov
mov
fstps
mov
sti
imul
cmpsb
mov
adc
out
fcoms
popf
hlt
pop
icebp
pop
das
fidivs
mov
mov
dec
fwait
jp
mov
sbb
jne
push
sub
scas
inc
out
push
cltd
dec
shrl
adc
subl
in
ja
cltd
and
pop
mov
ljmp
leave
cltd
inc
jbe
mov
pushf
push
mov
pop
ljmp
sub
ds
lret
and
jnp
sub
lret
mov
pop
xor
arpl
or
dec
xchg
ja
pop
jg
sahf
arpl
in
inc
jnp
jmp
mov
das
testl
ret
lods
sarl
push
outsb
in
inc
xchg
sbb
or
pop
push
test
aaa
adc
xchg
into
mov
or
pushf
out
insb
jmp
xchg
popf
xchg
addr16
xchg
nop
xchg
push
stos
std
jns
add
dec
arpl
and
mov
outsb
insl
add
inc
sahf
mov
dec
loop
das
adc
xor
inc
add
dec
stos
or
adc
outsb
into
lods
inc
cmpsl
cld
and
pop
pop
sbb
add
push
into
mov
jb
xchg
repz
inc
cmpsb
xor
adc
or
rorl
insl
fisttpll
mov
jle
inc
pop
fs
or
movsl
adcb
xchg
ss
mov
sub
dec
pop
adc
call
jle
add
loopne
mov
mov
pop
xchg
fwait
pop
or
pop
mov
out
inc
addr16
shrb
fcompl
stos
imul
call
cmp
xchg
clc
inc
inc
test
es
mov
hlt
fbstp
mov
adc
mov
or
sbb
xor
addr16
icebp
fisubs
popa
or
push
imul
sub
adc
xchg
loopne
arpl
inc
movsl
inc
pop
sbbb
imul
xchg
cmp
mov
xor
mov
shr
iret
push
add
das
addr16
loop
popa
sar
xchg
and
nop
adc
je
xor
ja
and
add
push
iret
mov
sbb
inc
je
dec
xor
xor
lds
idiv
jno
adc
xor
adc
dec
sti
int3
push
repz
ljmp
ret
into
movb
mov
xor
in
ljmp
sub
inc
push
movsl
test
repz
daa
out
lahf
adc
inc
mov
push
cmpsl
ret
mov
jae
ret
gs
mov
jecxz
push
pop
mov
add
das
mov
stos
dec
pushf
sti
scas
add
cltd
sbbb
and
cmp
aad
adcb
lods
pop
orl
jbe
add
jns
adc
aas
lock
add
test
add
mov
loop
dec
rolb
mov
push
addr16
loop,pn
testb
outsl
ds
add
aaa
xor
xor
xor
jmp
aad
add
cmp
sbb
sbb
sbb
jae
lods
mov
iret
xor
jg
push
sarb
jb
push
shll
add
ret
dec
sub
push
sti
sbb
pop
data16
fisubl
test
daa
stos
lea
dec
adc
loopne
push
loop
cmpb
lock
fidivs
xor
rol
or
icebp
add
mov
sti
push
leave
mov
inc
stos
push
adc
sbb
jecxz
jb
shl
sbb
jae
or
shrb
jne
mov
mov
xor
push
sbb
gs
js
fs
xchg
jecxz
dec
jle
jns
mov
ja
pop
pop
and
jp
jno
pop
or
lret
cmc
int
lods
movsb
mov
add
stc
out
bound
in
hlt
pop
push
or
popa
or
and
hlt
dec
and
mov
or
push
lds
cmp
jnp
push
inc
adc
lods
add
out
jmp
xor
jg
mov
jge
cs
shl
movsl
aad
push
xor
adcb
xchg
adc
mov
xchg
jno
or
stos
inc
xor
mov
mov
inc
stc
push
inc
inc
inc
add
out
mov
jae
mov
jl
stc
loope
mov
repz
cmp
ds
lahf
push
mov
pop
push
jae
pop
inc
cltd
adc
rcr
push
push
rcrl
enter
lcall
mov
push
imull
mov
ja
in
dec
mov
fistpll
push
shlb
push
pop
push
and
pusha
and
lea
adc
and
push
cli
jne
and
push
jns
in
cmp
push
xchg
sbb
sbb
imul
roll
add
cli
shrl
sbb
bound
lds
pop
and
stos
mov
sub
lock
shlb
sub
mov
pop
loope
sbb
das
mov
in
clc
jae
inc
test
dec
mov
loope
fnsave
and
xchg
pop
jne
rcrl
sbb
cmpsb
mov
leave
push
lcall
xchg
lahf
addb
fidivrs
aam
inc
dec
xchg
pusha
lods
sbb
scas
shrb
cmc
xor
dec
push
mov
or
call
orb
pop
fcompl
jae
les
xchg
mov
fwait
pop
and
dec
xchg
xor
loop
push
cwtl
adc
pop
add
mov
xchg
inc
ljmp
mov
mov
aam
xlat
push
cmp
xchg
pushl
mov
clc
or
loopne
js
imul
mov
mov
cmc
movsl
push
or
test
mov
stc
fidivl
push
jno
pop
push
mov
jg
cmp
adc
in
cltd
jns
insl
imul
scas
in
fs
testb
mov
or
and
dec
jmp
cmpsl
ds
lods
imul
pusha
dec
mov
pop
jcxz
ret
jecxz
cmc
loop
or
pop
es
rolb
add
push
adc
ljmp
dec
pop
xchg
hlt
ja
outsl
fucomip
insl
daa
push
add
mov
mov
jmp
pop
or
sbb
inc
iret
insb
out
jg
xor
push
jge
popa
das
jae
push
rorb
jmp
add
lods
ss
jne
adc
cmpsl
dec
je
cmp
cmp
cmp
sbb
ret
adc
mov
pop
daa
xlat
popa
xlat
add
cmp
inc
xchg
ret
cli
cmc
rcrl
outsb
push
mov
imul
in
sub
pop
das
rcll
push
mov
pop
fnstsw
mov
or
adcl
shll
cli
xlat
lods
pusha
stos
iret
mov
dec
push
mov
push
insl
jno
mov
mov
pop
inc
xorl
mov
and
mov
cwtl
lods
inc
sbb
clc
mov
inc
and
divl
outsb
cmp
cmp
aad
push
jno
mov
add
cmp
add
fnstsw
mov
xor
inc
sti
or
sub
stos
mov
stos
cmp
loope
stc
xlat
das
mov
push
movsl
mov
xor
sti
stos
mov
dec
push
arpl
adc
gs
call
adc
stos
and
cltd
jo
xor
fs
mov
push
imul
lret
mov
add
dec
add
sub
dec
add
enter
stos
shll
dec
inc
xchg
pop
cmp
aaa
xchg
ror
imul
jecxz
xor
mov
add
cmp
ja
mov
je
xchg
sub
or
add
push
call
enter
faddp
pop
push
in
or
xchg
sbb
aaa
cmp
mov
in
arpl
xchg
mov
push
imul
outsl
loopne
orb
aam
mov
pop
gs
mov
xor
inc
sub
sbb
loop
cmp
bnd
mov
push
ret
mov
cld
add
js
mov
cmp
adc
cmp
mov
cmp
and
and
adc
fistl
insb
add
insl
mov
and
aam
fsubrl
shrb
vcvtsd2si
mov
jle
mov
sbb
and
addr16
fiaddl
cltd
or
frstor
aaa
ss
rcrl
pop
mov
inc
int
lcall
pushf
pop
xor
out
adc
leave
arpl
scas
and
fcomps
sub
negl
out
cmp
xor
push
xchg
shr
inc
pop
daa
jo
sbbb
pushf
add
outsb
jo
mov
xor
sbb
pop
addl
xchg
jl
mov
scas
lods
loope
daa
test
movsl
adc
mov
cmp
int3
sarb
sub
mov
sbb
cmp
add
inc
cwtl
push
lret
aas
jmp
outsb
fwait
pop
xchg
mov
add
xchg
or
adcl
xor
sti
aaa
jo,pn
sbb
nop
sbb
aas
push
jle
daa
int3
sub
xchg
xchg
int3
fcompl
sti
mov
ss
or
pusha
inc
cmpsb
xor
jae
ret
sub
out
xor
sbb
xchg
mov
sbb
in
pusha
add
xor
mov
jo
cmp
fcom
push
add
lds
and
push
in
inc
xor
jae
nop
icebp
pop
xchg
xchg
mov
pop
push
cld
xchg
out
or
dec
jbe
mov
inc
loopne
iret
sub
xchg
push
cmp
add
xchg
pop
aas
adc
xchg
adc
addl
lahf
push
test
xchg
movl
or
pop
ret
and
xchg
add
or
les
out
push
cmc
jecxz
jl
cmp
sahf
or
mov
or
loope
push
aad
popa
mov
js
jle
mov
mov
jmp
jecxz
pop
hlt
lock
pop
dec
dec
jnp
jns
mov
mov
ja
rolb
mov
int3
stc
pop
ss
mov
xor
and
out
adc
iret
aaa
sbb
dec
xchg
pop
mov
fstpt
and
add
mov
icebp
out
fisubl
enter
enter
jle
int
aam
je
lahf
mov
xor
xchg
and
dec
inc
or
push
inc
dec
sbb
xor
sbb
push
lods
and
in
xchg
fisttpll
jmp
mov
fcmovnbe
cmpl
and
out
subl
inc
cs
cmp
cld
shll
ss
mov
lret
repz
aas
jbe
jecxz
sti
cld
inc
mov
shlb
movsb
cmp
mov
sar
push
lds
pop
out
add
and
ds
nop
mov
stc
imul
dec
ja
fcomi
fimull
das
lret
sbb
sbb
out
dec
fimull
sub
push
lods
inc
shll
and
ret
add
cmc
push
push
adc
pop
cmpsl
ja
lcall
std
and
dec
ss
mov
iret
rcll
cmc
insb
push
push
adc
mov
cli
inc
dec
test
pushf
leave
xor
jae
add
mov
aad
pop
mov
xchg
pop
mov
popf
sub
repnz
sbb
lahf
xor
dec
loope
add
lods
mov
xchg
movsb
outsb
pop
and
mov
dec
add
stos
or
in
rcrb
lret
dec
loop
stos
pop
repz
cli
sbb
sbb
pop
xchg
push
inc
and
and
subl
inc
ret
repz
mov
dec
adc
xchg
jecxz
outsl
shrb
ret
fistpll
adc
ja
mov
shr
or
aam
push
xchg
dec
adcb
data16
mov
push
push
lods
addl
insb
dec
adc
cld
push
jo
pop
pop
rcl
cli
push
jg
pop
movsb
or
add
dec
lcall
xchg
imul
fldt
subl
inc
idivl
pop
add
leave
inc
dec
addl
je
lret
pusha
call
push
fs
scas
adc
dec
push
mov
mov
pop
fwait
popf
test
add
aam
fwait
in
add
outsl
shl
je
test
enter
push
popa
sub
mov
sub
pop
add
sahf
into
in
lcall
stc
xchg
pop
sbb
xchg
pop
mov
sbb
or
and
jbe
ret
imul
inc
mov
xchg
inc
es
xchg
icebp
jbe
xchg
lcall
in
stc
mov
pop
jmp
in
rclb
lods
jo
xor
jge
inc
fstp
pusha
ljmp
pop
mov
popf
mov
adc
cmpsb
movsl
out
popf
mov
enter
inc
popa
mov
loop
xchg
popf
mov
jle
js
mov
xor
sti
and
dec
cmp
push
mov
enter
sub
bound
mov
cs
hlt
jg
adc
jg
ds
aaa
fadd
adc
jae
sti
in
mov
cmpsb
out
cli
xor
cmpsl
mov
sub
jnp
adc
addl
mov
pop
xor
movsl
mov
stos
enter
sub
push
xor
lock
xor
push
sbb
xorb
xor
and
cmc
notb
mov
fdivp
dec
insl
jmp
hlt
es
stos
push
in
cwtl
pop
jbe
or
adc
sbb
pushf
push
das
add
or
adc
jae
mov
popl
or
test
cwtl
out
stc
aas
inc
adc
sbb
add
shlb
lods
dec
aaa
pop
and
outsl
lret
pop
cmp
arpl
sbb
mov
sub
scas
add
dec
push
and
aam
dec
int
or
jl
xchg
outsl
aas
jnp
adc
jp
std
adc
sar
push
jno
push
or
cs
outsb
lock
xchg
mov
or
cmpsl
xchg
push
dec
mov
mov
or
inc
pop
and
lret
mov
adc
stos
push
addr16
popa
popa
add
mov
into
cli
cmpb
push
mov
ljmp
mov
sbbb
sbb
cltd
inc
adc
inc
sbb
shrb
mov
movsl
cmp
call
fistpl
adc
aam
std
dec
outsl
inc
xchg
mov
pop
push
jmp
jecxz
imul
sti
sahf
mov
mov
jge
push
dec
xor
stos
mov
mov
rorb
add
ror
sbb
xor
jno
mov
jge
inc
mov
add
ja
test
mov
out
jno
sbb
inc
push
mov
push
push
and
push
mov
xor
std
fsubrs
jecxz
movsb
mov
mov
aad
sbb
add
enter
mov
outsl
or
lock
xor
jae
adc
and
rcrl
pusha
pop
adc
ljmp
ffreep
ret
pop
iret
mov
fnstenv
jno
pop
mov
cmc
ret
add
xchg
dec
sti
les
fwait
xchg
repz
adc
push
mov
stos
je
cmc
inc
jp
mov
sbb
add
decb
ret
lock
call
js
mov
mov
mov
gs
xor
mov
int
aam
xor
sub
xchg
shll
jl
and
int3
mov
aam
xlat
int
insb
pusha
pop
add
xchg
push
jge
sbb
dec
xor
pop
adc
xchg
inc
xor
sbb
int3
dec
jmp
sbb
xchg
sub
mov
clc
sarb
pop
push
xchg
fsubrs
stc
jno
inc
cmc
jge
or
xor
rolb
xchg
or
pop
nop
outsb
popf
sti
fs
lret
das
or
jg
aam
std
fistpll
dec
jle
mov
orl
inc
xchg
and
and
jns
test
and
int
dec
js
ret
les
and
xor
add
rcl
ficoml
add
sbb
mov
xor
not
ja
inc
pop
xor
push
pop
ret
idivl
repnz
lcall
or
jbe
lea
mov
loopne
inc
mov
test
mov
loop
test
mov
loope
cld
dec
sbb
clc
ficoms
clc
pushl
in
mov
push
cmpsb
or
xchg
inc
or
mov
pop
cmp
ret
xor
jnp
push
lcall
cmp
ror
pop
test
xchg
cs
mov
pushf
pop
push
push
rep
lock
sbb
add
repz
cmp
mov
mov
es
aad
xchg
add
mov
jne
sub
jns
push
sub
push
or
jo
leave
sub
roll
in
cmpsb
pop
fucomip
xorb
je
dec
movsb
pop
shlb
gs
cmpsb
jg
mull
inc
imul
jb
xchg
add
mov
sarb
inc
daa
add
mov
gs
push
dec
aam
cli
push
ljmp
sbb
lods
pop
pop
scas
dec
mov
pop
mov
mov
negb
jmp
orl
stos
mov
addr16
scas
sbb
repnz
cmp
cmp
add
es
mov
inc
enter
push
gs
cmp
popf
add
sbb
xchg
loope
arpl
test
add
in
cmp
xlat
aas
cmp
inc
pop
imull
outsb
rolb
in
aaa
ss
mov
xor
push
sub
jae
outsl
imul
mov
je
mov
pop
sbb
add
dec
repz
xlat
and
in
clts
sub
lret
fnsave
sbb
push
or
push
pop
gs
sub
xchg
outsb
in
mov
mov
add
or
jo
pop
insl
rcrb
mov
test
ds
sub
cmpsl
dec
mov
xchg
in
mov
xadd
cld
sub
cmp
ds
test
lds
sub
mov
xchg
ja
mov
stos
inc
scas
xchg
pop
xor
sub
cli
sub
mov
enter
ss
ret
push
lcall
xchg
aad
push
in
push
push
jb
and
mov
test
push
inc
sbb
int
test
fwait
sbb
mov
jp
or
in
sub
lcall
lods
insb
lahf
xchg
aad
and
inc
jmp
jo
andl
pop
clc
outsb
test
inc
jnp
xchg
jae
inc
ja
daa
in
popf
cs
adc
jb
pop
cmp
insb
sti
dec
popa
mov
xor
out
fsubl
aaa
push
add
test
cli
lock
cmp
xor
inc
mov
pop
cmp
pop
jp
xchg
jne
push
shrb
stos
in
out
into
cmp
stos
bound
jo
out
enter
add
push
imul
cmp
aad
test
adc
int3
cwtl
outsl
std
cmp
in
dec
lahf
cmpsl
fcompl
and
push
cmpsl
andl
add
pop
cld
and
cmp
push
push
xor
addr16
gs
xchg
sbb
cld
ret
mov
pop
sbb
aaa
or
jae
add
mov
leave
mov
push
js
mov
or
adc
jne
fldt
jg
cmp
lahf
call
fidivs
pushl
in
jmp
std
mov
jno
int3
rcrb
xchg
bound
out
push
sbb
fdivrs
ds
sbb
test
nop
or
mov
and
out
jmp
push
jbe
cwtl
fs
test
cmp
lea
mov
cli
pop
imul
and
mov
outsb
or
imul
sbb
ja
sub
pop
add
mov
adc
mov
mov
es
adc
arpl
mov
test
stos
sbb
ss
fisubl
or
ja
pop
xor
dec
and
mov
or
push
mov
cwtl
div
dec
mov
mov
in
ss
xchg
pop
movntq
jp
leave
pusha
or
mov
xor
adc
out
icebp
xor
sbb
enter
sub
and
mulb
cmp
pop
test
lret
push
or
inc
or
loop
push
test
stc
shlb
add
out
pop
xchg
or
push
xchg
scas
pop
bound
xchg
push
hlt
pop
lds
lds
fs
inc
insl
repnz
xorb
enter
popl
dec
push
gs
enter
test
addl
mul
push
cmp
fildl
out
xor
adc
aam
cli
jmp
pop
jge
jae
shrb
cmc
pop
rorl
sbbl
mov
iret
cmp
shrl
sahf
pop
xor
aaa
push
cmpl
or
jne
xor
out
cmc
dec
mov
sub
stc
js
adcb
sub
repz
inc
stc
mov
pop
or
mov
cwtl
test
repz
sbbl
cwtl
pop
lret
loope
fnstsw
data16
loop
mov
test
mov
xor
cmp
sahf
fnsave
mov
in
mov
rorb
and
jg
xchg
ss
fdivr
push
pop
push
loope
xor
stos
sbb
pop
aaa
outsl
mov
lcall
sub
mov
add
dec
repnz
cld
fs
push
loop
pop
mov
mov
sub
mov
mov
cmpsl
aam
faddl
cmp
or
sti
jno
cmp
fstl
loop
out
movsl
push
stc
mov
fs
mov
data16
adc
adc
add
mov
flds
jl
jmp
cmpsb
and
enter
ret
dec
sbb
das
xlat
xchg
ja
sbb
fcoml
and
push
xor
xlat
cmp
inc
dec
adc
int3
jg
jnp
inc
xchg
pop
adc
or
in
xchg
cmp
cmp
pop
or
xchg
pop
cmpsl
xor
adc
cmpsb
fcompl
jno
cltd
pop
mov
push
data16
notb
mov
mov
sub
aaa
inc
mov
mov
mov
loop
lock
add
xchg
scas
mov
mov
mov
stos
mov
jae
dec
jmp
dec
xchg
push
cmp
dec
int3
add
dec
push
outsl
insl
cld
xchg
xor
jne
les
dec
pop
or
jns
xchg
mov
jle
and
jno
and
push
mov
mov
jg
dec
lds
xchg
shlb
mov
push
adc
mov
das
push
mov
xlat
adc
pop
cmp
cld
call
dec
das
into
jmp
cmp
in
sti
mov
scas
stos
xchg
dec
roll
sub
pop
mov
inc
jno,pn
add
stc
hlt
push
scas
rcl
aas
and
cmp
shlb
xchg
fimuls
dec
bound
and
mov
push
dec
addr16
adc
aaa
cmp
xchg
sbb
cmp
jmp
push
loopne
ret
sub
or
insb
lcall
sbb
push
mov
cmpb
adcb
push
sub
jae
xchg
test
stc
jge
push
sub
iret
lds
sti
fisubrl
or
sbbb
jl
sbb
xor
sti
lds
jp
imul
scas
mov
cmp
add
iret
cmp
and
in
mov
add
jge
popf
shrb
nop
xchg
add
addr16
and
sub
adc
stos
jbe
jmp
out
jmp
or
or
out
mov
dec
movsl
push
mov
xor
push
test
ss
out
test
sub
sub
es
jbe
dec
push
stc
cmpsl
fsub
jmp
or
pop
add
adc
or
call
hlt
sbb
dec
ja
in
es
call
popa
sbb
outsl
insb
pop
cmpsl
sarb
pop
dec
sub
inc
cmp
jp
push
push
jo
or
jae
dec
inc
jmp
xor
dec
pop
enter
sbb
xor
push
jb
jb
subb
cli
addr16
or
in
mov
jg
flds
imul
mov
push
mov
lret
inc
test
mov
adc
inc
pop
aad
aas
mov
mov
cmp
lods
cmp
in
mov
or
mov
push
aaa
movsl
xchg
dec
sub
fdivrs
daa
xchg
cmpsb
jb
loope
and
sahf
fadds
push
movsl
sbb
mul
cmp
adc
push
jp
aas
aaa
sub
xchg
loop
sbb
and
mov
sbb
or
sbb
sahf
dec
scas
mov
jns
repnz
shll
popa
lret
mov
sub
pusha
lret
cmp
xchg
push
mov
pop
mov
mov
jmp
cmp
xor
mov
mov
ret
inc
lods
mov
fisubrs
in
and
jo
pop
and
outsb
ret
inc
mov
jl
pop
jo
mov
cmpsb
cs
test
inc
jno
cmp
std
lods
lea
lret
stos
enter
lods
lods
inc
sbb
test
push
xchg
mov
movsb
into
jp
or
js
pop
test
pop
cltd
cld
scas
xchg
pushf
pop
out
adc
pop
adc
pop
std
ret
out
cltd
sbb
and
sbb
adc
stos
mov
stos
stc
jmp
jo
ljmp
rolb
mov
xchg
fsubrl
fwait
and
xchg
sub
mov
mov
add
push
pop
or
mov
stc
shrb
sti
xchg
jge
lock
out
jmp
inc
loope
scas
sub
leave
mov
cs
add
mov
xchg
fidivs
test
loope
leave
xor
pop
add
mov
xchg
adc
adc
repz
inc
popf
ja
sahf
je
jge
push
insl
xchg
movsb
jnp
insb
rclb
inc
cmp
adc
scas
addr16
mov
sub
rorb
stos
and
add
jns
jae
and
popf
je
inc
cltd
dec
aas
xchg
inc
add
mov
mov
adc
or
mov
mov
or
sahf
icebp
repz
mov
nop
mov
in
jo
dec
pop
shr
push
and
sahf
fldcw
adc
pop
mov
setb
xacquire
sbb
add
fwait
aam
pop
clc
popa
inc
pop
mov
mov
pop
lea
aaa
lea
es
iret
mov
mov
loope
mov
or
pop
jbe
out
dec
add
aad
test
xor
jno
jecxz
dec
adc
std
mov
dec
push
xlat
jns
cli
test
jle
lcall
push
jb
rorl
inc
sub
loope
push
sbb
xor
orb
mov
sub
ja
jmp
jecxz
enter
ja
pop
jo
jb
in
sub
add
mov
push
add
sub
mov
adc
mov
mov
pop
pop
xor
xchg
mov
push
cmp
repz
jg
mov
hlt
cmp
out
jl
aam
sbb
or
negl
cwtl
lds
loope
lret
jno
sahf
and
test
call
jecxz
outsl
sub
cmp
xchg
dec
push
pushf
adc
out
adc
mov
in
dec
andl
movb
cmpsl
test
mov
je
inc
cmp
mov
xor
xchg
xchg
dec
ds
aad
loop
int3
in
aam
pop
stos
jg
mov
mov
rcrl
or
xchg
sti
ss
into
lret
cmp
and
mov
xchg
pop
aas
push
dec
fsubs
pop
cmp
jbe
hlt
lock
mov
or
loop
in
fdivs
popf
push
mov
fs
cmp
mov
cli
ds
mov
add
jb
loop
mov
scas
ljmp
jle
fcmovb
inc
lret
add
inc
cmp
mov
lea
insb
decl
and
xchg
push
sbb
push
flds
andb
add
loop
imul
icebp
sub
pop
rcrl
or
cmpsb
cmp
push
imul
cmpsb
rcrb
repz
push
mov
adc
sbb
xor
outsl
iret
int3
mov
pop
stos
outsb
cli
adc
aaa
test
pop
xchg
ficomps
stos
add
cmp
xchg
fucom
dec
xchg
adc
fstpt
iret
lea
mov
jae
inc
sbb
inc
pop
fldcw
mov
cmp
pop
xor
cmpsl
adc
mov
movsb
rcll
jp
adc
sbb
mov
dec
pop
jecxz
andb
loope
cmpsl
adc
xchg
shll
xor
clc
inc
pop
mov
out
cs
cmp
or
xor
jb
sub
and
dec
mov
add
loope
pop
cltd
lcall
mov
sub
add
movsl
dec
es
push
pop
aam
sub
cwtl
ss
es
test
jl
out
and
pop
lret
pop
lahf
sbb
sahf
int
sti
orb
notl
ljmp
cmp
and
insb
jne
push
xlat
sub
sar
jae
mov
mov
push
push
push
pushf
fldenv
pushf
std
out
and
rclb
adc
dec
stc
sbb
in
jp
adc
repnz
jnp
pop
sbb
inc
repz
pop
add
inc
pop
icebp
push
in
fisubrs
push
push
pop
fists
cwtl
inc
mov
nop
cmp
loope
xchg
in
shrl
outsl
je
test
cmpsb
xor
popf
jge
cmpsl
hlt
pushf
xchg
or
cmpsb
fnstcw
test
jmp
in
sub
adc
and
xchg
mov
jmp
pop
int3
lcall
mov
mov
scas
call
popa
loope
jns
xchg
rorl
aas
stos
sbb
sti
incl
fidivrl
xchg
aas
jge
xchg
imul
repz
mov
add
nop
cmpsb
sbb
scas
fs
loop
jle
mov
mov
cmp
xchg
movsl
sub
pop
pop
inc
in
sub
lds
pop
push
push
sub
loopne
sbb
push
mov
pop
mov
dec
pop
lock
xlat
fcmovnu
mov
and
pop
loopne
inc
aam
adc
insb
hlt
aam
xor
ljmp
sub
adc
xorl
fistl
and
lahf
dec
inc
call
cld
mov
push
xor
dec
cmp
fwait
xchg
inc
orb
fsubrp
out
push
pop
iret
sub
mov
or
jecxz
lds
decb
std
sbb
and
test
popf
pop
lock
ret
mov
int3
xor
xor
add
pusha
and
cld
imul
push
lds
fldt
mov
lock
std
xchg
out
push
sbb
add
sbb
loopne
shufps
in
adc
push
lret
popa
pop
push
mov
loope
inc
jne
jecxz
fidivs
cs
lods
jecxz
push
mov
mov
sbb
out
jecxz
es
push
enter
mov
lahf
lret
inc
arpl
inc
sub
enter
lods
or
fstpt
jl
popf
les
call
mov
sbb
mov
push
mov
mov
int
loop
xchg
mov
cmc
out
dec
mov
andl
xchg
stos
mov
lahf
add
lds
fwait
add
imul
ljmp
or
jbe
add
cmpsb
and
hlt
pop
mov
inc
out
add
mov
js
or
das
scas
ds
sbb
sub
xor
iret
fs
cmp
popa
imul
cmc
pushw
addb
test
xlat
adc
sbb
lret
push
fbstp
outsb
jle
pop
cmp
lret
loopne
and
repnz
cli
mov
sti
mov
mov
and
js
into
pop
sahf
test
sbb
mov
cmp
adc
sub
dec
sub
or
out
cs
push
xor
mov
mov
leave
pop
test
mov
aam
inc
outsb
push
dec
push
pop
pop
add
jno
test
mov
sub
daa
ss
inc
push
or
sahf
out
insb
jb
and
movsl
inc
mov
iret
test
and
cmpsl
fidivs
mov
mov
dec
adc
sbb
or
mov
mov
test
push
inc
cmpsb
testb
sub
push
in
xor
aaa
sub
sbb
and
pop
add
jnp
adc
push
mov
and
dec
mov
cmpsb
scas
mov
pushf
idivl
ud0
sarl
or
cli
adc
add
ljmp
jb
movsl
or
and
jnp
mov
in
lock
pop
sub
mov
xchg
jmp
iret
enter
lahf
mov
div
lret
je
adc
or
push
stc
ret
pop
mov
xlat
push
xchg
ja
popf
push
jg
xor
cltd
shll
and
and
shr
int3
mov
adc
out
jo
pop
aad
sahf
xchg
subl
inc
out
push
mov
fs
inc
andl
sbb
push
xchg
add
add
xor
mov
pop
push
in
jnp
sub
adc
cltd
mov
fsubl
mov
or
sti
mov
mov
mov
es
mov
jge
or
xlat
ret
test
adc
adcl
stos
insb
jg
push
xchg
adc
lahf
mov
in
inc
imul
push
imul
dec
and
cmpsl
into
cltd
and
loop
adc
stc
fnstcw
lods
and
pop
imul
and
pushf
add
mov
call
fs
mov
pop
jae
sub
sahf
inc
fistpl
leave
xchg
cmp
dec
cmp
xor
in
outsb
out
push
outsl
mov
jo
std
mov
jne
cmp
add
cmpsl
out
stc
push
pop
xor
mov
mov
loopne
xor
sub
popf
add
test
data16
or
push
cli
sbb
cmp
testb
mov
fsts
sub
jne
fistps
push
jnp
sub
mov
scas
shlb
into
dec
mov
sbb
stos
dec
in
xchg
dec
push
jecxz
mov
icebp
aas
xchg
mov
jg
pop
ret
sbb
gs
cmp
inc
pop
or
jno
inc
xor
add
mov
jbe
push
outsl
mov
daa
xor
jne
sub
pop
in
shrb
loope
adc
sahf
inc
lahf
popf
dec
pop
xchg
lock
outsl
in
cltd
sub
inc
adc
int
in
mov
pop
xchg
bound
push
ljmp
jns
or
fwait
mov
mov
inc
sar
and
dec
sbbl
inc
mov
icebp
mov
dec
inc
mov
ret
into
and
jns
fsubs
jge
popa
cmc
icebp
out
ljmp
fstpl
rcll
mov
and
jb
inc
pop
into
cmp
sbbb
ss
test
push
cld
mov
inc
call
insl
out
int
jmp
ss
xor
or
clc
data16
mov
mov
push
idiv
mov
ja
in
fnstsw
and
in
adc
jl
roll
mov
enter
or
decl
mov
inc
divl
or
or
mov
or
jno
push
mov
jg
push
pushf
pop
aad
mov
xor
mov
bound
mov
push
pop
dec
push
lods
dec
call
push
mov
insb
insb
jle
inc
sub
aas
int3
imul
add
lea
pop
mov
test
cmc
xor
dec
testb
cmp
lock
sbb
xchg
pop
add
stc
popf
shl
mov
mov
jb
mov
dec
rorl
cmc
data16
jp
dec
sub
push
add
mov
stc
mov
push
rcrb
adcb
insb
and
fldcw
lods
cltd
movsb
dec
cmp
in
das
push
scas
stos
repnz
ret
in
xchg
push
fstpl
mov
and
pop
call
push
subb
shlb
out
jns
inc
add
or
lock
mov
xor
adc
cmc
cltd
or
inc
loopne,pn
aaa
mov
add
test
or
ret
cmpsl
or
pop
sbb
pop
inc
lods
xchg
mov
ficoms
jo
lret
and
popf
xchg
pop
mov
cmp
sti
sahf
mov
pop
sbb
xchg
jne
add
push
call
mov
dec
and
mov
int3
enter
mov
aaa
dec
mov
xorb
dec
jb
and
in
jmp
cmp
mov
lock
jge
and
sbb
push
cmc
mov
push
ja
out
lea
rcl
pop
mov
sbb
in
out
jmp
fsubl
lock
sbb
push
inc
roll
scas
cmp
es
mov
insb
mov
pop
pop
sub
mov
xor
inc
xchg
push
push
fsub
nop
dec
in
out
mov
push
add
sbb
dec
aaa
cmp
fdiv
std
jmp
adc
test
in
xchg
cmc
cltd
pop
xlat
adc
fs
inc
push
add
outsb
pusha
insb
dec
pusha
add
iret
adc
hlt
cmp
xor
xchg
push
loope
push
sbb
test
push
lret
data16
and
test
gs
sbb
push
out
xor
xchg
andb
jo,pt
sbb
mov
imul
cmpsb
insl
mov
adc
ror
pop
inc
pop
iret
outsb
dec
cmpsb
or
repnz
cmc
and
imul
sub
or
lahf
sbb
adc
and
adc
sbbb
push
mov
adc
mov
pop
and
or
je
fisttpl
mov
cld
jbe
dec
lock
aas
mov
pop
xor
and
loope
push
orb
push
inc
fisttps
int
pop
arpl
shrl
add
in
mov
sub
xor
cli
lahf
es
lret
mov
test
jnp
sbb
xlat
cmp
jo
jl
popf
enter
scas
ja
hlt
push
mov
mov
pop
enter
mov
cltd
sbb
clc
pop
outsb
jne
ret
dec
pop
push
add
adc
loop
jmp
inc
pop
ds
and
into
aad
push
cmp
stc
dec
repz
add
insl
fwait
rcrb
and
lret
inc
pusha
xor
cmp
movsl
mov
iret
add
and
cltd
dec
sar
loop
loope
inc
cwtl
fnstcw
adc
daa
imul
push
scas
push
jg
xchg
sub
call
push
insb
insl
aam
push
ror
lcall
cli
pop
sbb
loop
jecxz
push
dec
mov
aad
or
push
lods
add
pop
push
insl
les
sbb
fs
add
data16
stos
aaa
fcmove
pop
pop
add
iret
add
sub
cmp
and
in
das
push
dec
sbb
ja
repz
inc
xchg
xor
or
mov
xchg
clc
outsl
mov
rcrb
jae
sub
in
addr16
outsb
cli
leave
movsb
nop
dec
cltd
imul
cmp
hlt
jle
insb
cmpl
mov
mov
mov
int3
cmpl
pushf
sbb
fdivl
imul
inc
rcrl
ljmp
sub
call
add
push
jl
xchg
mov
in
fiaddl
xchg
jns
jno
lds
xor
mov
jmp
push
aas
xor
sub
fsts
out
ja
int3
stos
dec
adc
retw
fwait
push
jle
test
cmc
sub
push
dec
adc
mov
mov
mov
les
std
mov
fcomps
sahf
cs
or
dec
in
lods
jecxz
in
cmp
outsb
xchg
push
lahf
push
fdivrp
push
iret
adc
push
in
clc
sub
mov
dec
or
add
mov
ljmp
dec
add
xchg
jmp
mov
mov
into
in
stc
sbb
jl
bound
lea
sarb
data16
jbe
cmp
shlb
xor
jno
or
jo
pop
or
in
pop
jmp
add
fucomi
or
adc
or
stos
movsl
lds
xchg
call
add
mov
cld
fisubrs
mov
aam
cs
sbb
std
adc
leave
mov
pusha
cmp
adc
js
sbb
lods
fs
daa
sub
out
out
mov
lret
mov
mov
and
shll
xlat
add
xor
popl
dec
jle
out
outsl
rorb
pop
out
sbb
push
jmp
xchg
roll
es
sbb
push
push
lcall
xchg
lret
jg
sarb
and
mov
lahf
cmp
aad
jno
fxch
cmp
sbb
stc
ljmp
in
push
stos
xor
cmpsl
jne
mov
and
test
xchg
adc
and
orb
movsl
mov
loop
or
jmp
rcrb
jle
mov
lea
test
sub
cld
addb
push
mov
jmp
stc
cmp
inc
movsb
inc
outsb
rcrl
loope
xchg
mov
incl
loopne
popa
mov
mov
jl
popf
xchg
dec
stc
dec
mov
nop
das
xlat
into
hlt
mov
nop
jmp
push
shr
sub
icebp
sub
or
jge
pop
imul
cmc
out
test
cmpsl
into
sub
fdivr
pop
and
push
pop
pop
push
fs
idiv
adcl
ret
sub
jno
dec
xchg
sub
pop
pop
mov
shrl
xchg
insl
rcrl
ds
or
or
mov
or
mov
mov
xor
filds
dec
xor
arpl
daa
fcoms
iret
mov
adc
add
popa
sbb
sub
dec
dec
std
in
shlb
popf
adc
movsl
shr
clc
shll
cwtl
mov
movsl
outsb
pop
xchg
xchg
mov
or
xor
dec
xchg
cmp
mov
sbb
mov
mov
xchg
sbb
into
lock
or
fnstsw
adc
add
leave
out
push
out
pop
fisttpl
jns
adc
xor
dec
push
ficoml
jo
cli
pushf
mov
push
call
dec
sbb
out
addr16
xlat
jge
fucomi
sahf
dec
sbb
jp
jmp
loop
mov
jl
mov
sbb
ljmp
xor
sahf
xchg
mov
sahf
cwtl
inc
inc
icebp
pushf
sbb
mov
dec
outsl
mov
inc
push
roll
dec
xor
dec
fcmove
dec
sbb
dec
mov
jp
aaa
les
xchg
pushl
pop
das
testl
add
lock
loopne
jmp
std
outsb
dec
jnp,pt
mov
movsl
addb
add
adc
cmpsl
mov
dec
inc
scas
outsb
lret
dec
cmp
lods
xor
mov
mov
jnp
cs
clc
pop
outsl
das
stos
call
loopne
dec
bound
dec
enter
mov
jns
xlat
inc
jno
mov
xlat
pop
punpcklbw
fsubl
std
mov
movsl
rcrb
mov
loope
cmpsl
hlt
sbb
lea
and
roll
or
aam
sbb
leave
inc
push
add
clc
xchg
xor
sub
vpabsw
dec
test
push
and
test
ftst
stos
sti
ljmp
std
lods
add
jl
cmp
nop
loop
out
adc
ja
mov
ja
mov
pop
xchg
push
outsb
pop
rcl
dec
jns
out
mov
dec
call
rclb
push
cmp
imul
add
inc
cltd
adc
xchg
mov
fdivs
cmp
ljmp
imul
dec
call
mov
mov
loopne
sbb
or
xchg
adc
ss
mov
mov
lret
jmp
mov
pop
push
roll
cmp
sbb
out
adc
xchg
pop
fcmovnbe
in
pop
push
shrl
xor
lret
jbe
pop
dec
xchg
ss
sub
inc
and
out
mov
stc
imul
mov
mov
jne
or
aad
sbb
sbb
pop
lock
lea
pop
loopne
mov
lret
and
mov
shrl
jl
sub
mov
cmp
movsb
movsl
lods
ret
movl
pop
mov
sarl
out
imul
or
ror
or
loopne
dec
pushl
loopne
push
fucom
fidivrs
mov
lret
sarb
xchg
inc
loop
xor
insb
imul
sahf
cmc
adc
mov
ja
mov
xchg
xor
sub
sub
xor
cli
sbb
pop
dec
inc
push
out
in
mov
xchg
sub
xorl
mov
rorl
mov
daa
mov
fnsave
fiadds
xchg
xor
push
cmp
jmp
lcall
inc
push
cmp
outsl
pop
lods
xchg
inc
inc
mov
jns
ljmp
insl
mov
out
fninit
push
fs
aaa
cmp
je
filds
xchg
test
push
inc
lahf
inc
iret
test
negb
scas
in
sbb
aaa
xrelease
dec
adc
mov
sbbb
xchg
inc
xor
cmpsb
ret
lahf
jmp
and
xlat
pushf
test
fcomps
jae
and
mov
repnz
mov
rclb
sub
mov
test
push
movsb
lea
js
aaa
ja
xchg
jecxz
mov
cs
jb
sub
pop
out
mov
mov
mov
shl
mov
push
icebp
in
icebp
pushf
shll
enter
push
call
jne
inc
mov
jg
push
stc
mov
cmpsl
pop
das
sub
dec
sub
in
push
xorb
xchg
lods
hlt
test
je
sbb
pop
clc
bound
jmp
or
test
cld
rcrb
loopne
jb
in
push
jmp
cli
xchg
in
mov
jg
adc
out
popa
aaa
xchg
inc
add
jle
dec
cld
xchg
out
cmpsb
mov
ja
jle
shll
in
stos
in
push
fnsave
nop
stos
pop
mov
push
add
jno
shll
out
in
movl
ljmp
ljmp
mov
bts
add
dec
cmp
sbb
cli
aaa
jl
out
rorl
dec
arpl
fstpl
jmp
sahf
packuswb
cli
ret
cwtl
movsb
sti
mov
cmp
or
mov
in
pop
or
pop
push
aas
les
rolb
xchg
add
in
xor
cwtl
and
scas
test
orb
mov
adc
arpl
sbb
lcall
shr
adc
pushl
mov
lahf
lea
or
jg
and
push
mov
xchg
lock
pop
cmc
cs
push
push
push
xchg
cltd
orl
mov
push
push
outsl
or
adcb
sub
sub
movsb
add
imul
scas
sbb
aad
out
dec
sub
push
dec
adc
jo
push
mov
mov
push
lock
cmp
mov
lods
ret
fs
add
jmp
sbb
mov
movsb
cmpsl
pop
mov
sbb
adc
sti
jmp
ret
or
push
push
mov
fsubrs
outsl
adc
jmp
xlat
rep
xchg
add
xor
loope
jns
push
pop
jno
aad
leave
xchg
rcrl
int
dec
hlt
xor
mov
mov
divl
fcoml
out
das
xor
sti
pop
push
xchg
lods
pop
xor
out
addl
xor
fnstcw
dec
sub
mov
imul
hlt
xchg
filds
ret
xchg
pop
xlat
movd
adc
jl
mov
cltd
outsl
hlt
adc
cld
cltd
xor
push
jno
imul
mov
das
push
mov
js
dec
cli
lea
mov
or
dec
push
jns
mov
xchg
or
inc
int3
jo
xchg
push
insl
adcb
ljmp
pop
stos
xchg
xchg
mov
and
lcall
shr
popa
prefetch
mov
lods
cmp
pop
lahf
aaa
mov
push
xor
bound
and
cmp
push
rorl
xor
xchg
outsl
jne
pop
lea
mov
lds
or
sbb
cmp
xchg
clc
daa
mov
rolb
mov
dec
loopne
stos
sub
les
sbb
ss
js
fmul
push
jge
aaa
loop
push
inc
mov
mov
lods
aaa
outsl
push
cltd
mov
push
inc
aas
call
daa
mov
loopne
xor
cmp
rol
int
cld
pushf
loope
xchg
pop
lea
add
pop
test
out
sar
mov
sbb
inc
sbb
push
aad
mov
in
cmp
mov
pop
push
cmpsl
jo
scas
pop
jmp
lret
mov
cmc
sahf
iret
ljmp
mov
loop
je
testl
pop
cmp
aas
push
sbb
xlat
cwtl
push
scas
push
int
push
gs
dec
adc
popf
testb
lods
imul
stos
mov
insl
adc
dec
xchg
out
hlt
out
sarl
sbb
jle
popf
mov
cwtl
adc
ret
or
push
outsl
jp
int
dec
pusha
into
out
test
mov
inc
and
jg
cmp
jne
mov
jne
addr16
mov
sbb
ror
or
mov
and
mov
xchg
mov
cmc
sub
adc
and
add
pop
int
fs
dec
inc
jno
xchg
cmpsl
dec
sbb
movsl
in
outsb
test
outsl
xchg
pop
cltd
cmp
out
test
shll
rcr
fistl
into
xlat
inc
jb
flds
outsl
aad
mov
dec
ret
jno
jle
int
adc
call
mov
sbb
bound
or
stc
in
popl
or
jmp
jmp
dec
test
icebp
fs
push
popf
out
rcrb
popf
and
arpl
xchg
shrl
push
orl
sbb
nop
xchg
xchg
jno
mov
inc
cmp
popf
pop
add
or
ja
mov
lea
mov
test
mov
add
jb
in
fs
pop
mov
adc
mov
out
test
mov
add
cmp
add
leave
and
fcomps
pop
out
dec
dec
pop
or
daa
rcrb
pop
movsb
add
xchg
push
add
hlt
fs
mov
sahf
rol
neg
jnp
call
add
cs
pop
das
push
sti
mov
test
dec
and
ljmp
cmp
inc
and
push
cld
cmp
jns
fwait
push
inc
cmc
push
outsl
sbb
xchg
bound
lahf
fistpl
mov
clts
mov
les
les
cmpsb
add
pop
in
pop
fildll
cmp
call
mov
ja
stc
cmp
cmp
ljmp
mov
test
jg
add
negb
inc
jmp
stos
xor
pop
aam
jecxz
inc
sub
cld
dec
jno
lret
shll
push
sbb
inc
lods
inc
pusha
mov
inc
push
adc
sub
iret
sbb
pop
insb
dec
ja
jp
mov
pop
xchg
pop
adc
es
pop
mov
addb
jmp
icebp
inc
rcrb
cmp
lods
rcrl
cmp
fs
in
cmpsl
jg
ret
mov
imul
jl
or
lea
pop
xor
xor
and
mov
xchg
xchg
or
out
jns
stc
xchg
insl
inc
sbb
mov
dec
xor
scas
push
movsb
sbb
loopne
repz
je
testl
lret
cmp
divl
pop
sbb
xchg
daa
frstor
shll
int3
lods
mov
ret
rcr
test
insl
and
dec
cmp
je
xlat
and
mov
mov
popa
adc
cld
or
shlb
cmp
fwait
orb
xlat
push
mov
cmovge
inc
pop
push
xchg
inc
push
xor
inc
enter
lea
mov
push
xlat
int3
push
cli
popa
shrb
jo
jne
jl
and
and
sarb
in
jle
mov
mov
je
andb
adc
jo
stos
pop
mov
pop
push
out
push
add
cwtl
pop
je
iret
lock
pop
xchg
lret
aaa
jo
push
or
mov
bound
jle
mov
stc
jl
aam
fisubrl
test
aad
xor
xor
jge
repz
lods
enter
icebp
out
adc
lahf
dec
or
orl
pusha
sbb
lea
pop
stc
ljmp
mov
negb
idiv
inc
push
lret
out
sub
std
mov
inc
xchg
lock
pusha
fwait
mov
push
shlb
xor
fistpll
pop
push
pop
aad
jecxz
sti
lods
aam
add
sbb
repnz
fwait
shll
sbb
nop
outsl
repz
mov
sub
pop
mov
and
mov
data16
inc
mov
inc
repnz
les
fucomi
lahf
or
sub
ljmp
adc
cmpsl
xor
pop
imul
xlat
mov
adc
cmp
orb
movsl
inc
pop
in
or
lahf
ljmp
push
cmp
mov
fwait
popa
inc
fidivrs
call
xchg
divb
sub
jns
cli
jb
or
push
loop
add
fisubl
jp
popa
mov
nop
pop
xor
in
sbb
popa
das
in
push
in
lcall
pop
subb
mov
in
jnp
dec
push
fs
repz
cld
xchg
in
xor
arpl
mov
cmc
push
jae
jecxz
repz
rcl
add
push
push
sub
cmpsl
data16
out
dec
out
jmp
pop
xchg
repz
sub
jl
jnp
mov
sbb
dec
dec
pop
mov
xor
popf
arpl
or
mov
iret
clc
xchg
xor
mov
or
add
push
mov
in
sub
imul
stc
das
ljmp
mov
insb
sub
inc
in
or
pop
icebp
out
repz
xchg
mov
inc
sti
sbb
shrd
and
or
sti
mov
cmc
decb
leave
cmp
repnz
mov
mov
out
dec
sub
ja
inc
les
rol
out
movsl
mov
sbb
lea
fs
mov
cmp
imul
out
xchg
sbb
fimull
and
pop
outsb
cs
mov
jb
movsl
and
jge
aam
mov
and
push
add
mov
leave
scas
bound
or
lds
lods
scas
clc
sub
shl
insb
testl
push
pop
mov
nop
ret
arpl
ret
xor
loope
mov
mov
mov
cmp
push
fstps
fdiv
and
loopne
rol
in
cwtl
in
and
out
xor
aas
lahf
xlat
xchg
xor
fldt
dec
lea
cmp
loop
out
cmpsl
out
push
stos
sahf
lods
js
jecxz
outsb
push
xor
xchg
outsb
adc
sbb
mov
dec
adc
test
mov
pop
lret
call
sub
scas
data16
lret
xchg
test
push
je
jne
sub
push
adc
mov
jns
inc
push
jns
movsl
lock
mov
mov
mov
out
xchg
cmp
lea
imul
in
cmp
mov
push
mov
pusha
es
push
push
or
push
loopne
and
lods
inc
iret
push
or
mov
lods
das
in
pop
add
fstpl
fisttps
pop
push
xchg
cmp
stos
mov
das
inc
or
xlat
jle
xlat
push
ret
scas
xchg
jmp
dec
add
sbb
jnp
movsl
dec
push
mov
orb
pop
shrb
or
mov
stc
insl
in
popa
sahf
and
fiaddl
lods
outsl
int3
lods
dec
add
and
lahf
and
dec
jle
push
mov
or
xchg
cmp
mov
lods
cld
inc
sub
mov
cmp
fisttpl
add
ljmp
test
adc
adc
sub
addr16
dec
dec
mov
std
mov
sar
xchg
pop
adc
adc
lock
xchg
aad
lds
sbb
xchg
cmp
push
shl
jo
mov
jb
sub
dec
popa
jg
insb
pusha
xchg
scas
loopne
inc
mov
test
inc
scas
add
pop
sbb
cmp
xchg
mov
in
imul
or
jno
data16
leave
push
xchg
sbb
or
inc
or
or
rcrl
sub
or
sub
test
icebp
jl
int
ret
xchg
mov
in
push
dec
in
cwtl
xor
dec
xchg
iret
je
inc
out
hlt
cmp
jmp
add
mov
jne
js
dec
loopne
daa
mov
int
stc
out
sbb
lea
js
add
sub
cmpsb
cwtl
mov
xor
mov
gs
in
jge
aas
mov
stc
xor
cld
add
mul
mov
mov
daa
inc
cmp
fisubs
pop
lret
jecxz
fwait
lcall
mov
icebp
int
lods
idiv
xor
js
add
fiadds
jbe
aas
ljmp
pop
popf
into
out
ss
xchg
cltd
bound
mov
lods
sub
es
mov
dec
lret
add
cld
out
sbb
add
xchg
cmp
pop
pop
das
pop
aam
test
cs
icebp
sub
fwait
outsl
xchg
outsb
mov
sub
popa
inc
xor
lods
mov
jle
xor
adc
jp
jmp
js
sub
ss
mov
and
ja
cmpl
xor
add
mov
xchg
fwait
jmp
xchg
xor
mov
jo
imul
repz
mov
mov
test
adc
adc
mov
and
ror
jns
jl
xchg
pushf
dec
call
inc
ret
pop
adc
mov
and
jno
and
mov
cmp
mov
push
ds
sub
sahf
and
pop
jmp
imul
in
test
fwait
test
dec
clc
jae
dec
pop
xchg
push
lahf
es
setne
imul
and
mov
and
imul
xor
aam
pushf
insl
cltd
xchg
mov
mov
dec
stos
cmp
cwtl
ret
push
test
cltd
push
xchg
mov
aaa
test
add
mov
mov
pop
loope
adc
jge
js
mov
ds
scas
pop
popf
jp
fdivrs
inc
in
jle
mov
cli
cmovnp
mov
or
mov
rcll
xor
inc
pop
push
daa
mov
lods
mov
pop
aam
or
std
cmp
push
shrl
jns
les
push
mov
or
mov
cmovbe
ja
adc
movl
adcb
or
add
push
repz
dec
dec
jo
xchg
xor
enter
pop
pop
test
popa
dec
add
push
lret
in
imul
stc
dec
movl
mov
cltd
adc
push
mov
xor
daa
dec
xor
add
add
jae
int
mov
jb
fldenv
cmc
fwait
test
push
adc
aas
pop
or
adc
jp
push
add
mov
mov
fdiv
nop
fidivl
cmp
mov
pop
pusha
bndstx
fadd
jbe
test
jae
sti
outsb
cmpl
mov
sti
adc
in
push
stos
or
mov
rorl
mov
or
push
cmpsl
push
imul
cmp
mov
cltd
mov
and
xchg
inc
insl
inc
fsubrs
mov
aaa
ja
ficomps
loop
xchg
inc
add
scas
jae
cwtl
or
nop
fstps
cmpb
mov
stos
mov
adc
outsb
add
xor
mov
fmul
ljmp
fs
sub
inc
adc
push
stos
jno
push
mov
add
imul
into
and
rcl
fprem1
xchg
add
or
push
popf
ret
mov
mov
xchg
or
dec
pusha
cmc
inc
imul
lock
jp
sub
cmp
jmp
lahf
jmp
sbb
shrl
call
xchg
inc
mov
fdiv
in
stc
jg
xlat
and
out
stc
inc
sub
lcall
push
insl
mov
jmp
push
cmp
cmp
ret
xor
leave
pop
imul
jbe
int3
xor
scas
xchg
push
rcr
out
xor
mov
iret
mov
push
stos
lods
adc
inc
mov
jmp
mov
pushf
pushf
push
push
jns
rclb
mov
insb
or
jnp
jo
xchg
pop
insl
xor
mov
mov
xor
loope
dec
lods
js
stos
sti
sub
xor
bound
lret
push
loop
jl
test
xchg
jb
pushf
mov
gs
xor
mov
mov
jae
add
call
jmp
je
cmp
cwtl
in
push
adc
sbb
pcmpeqb
adc
mov
dec
je
push
and
cmpsb
cmp
xor
and
cltd
dec
scas
fidivrl
pushw
popf
add
ss
aad
push
xchg
jno
sbb
sbbb
pop
mov
mov
sub
sbb
add
gs
mov
push
xlat
std
mov
int
sarl
pop
scas
icebp
ret
pushf
mov
ret
mov
clc
push
sub
or
stc
loope
int3
fwait
mov
outsl
mov
pop
fisubrs
jns
fcompl
ja
imul
out
mov
add
jmp
out
cwtl
inc
mov
cmp
ja,pn
loope
test
addr16
faddl
shlb
out
pop
js
xor
hlt
inc
decl
das
mov
mov
add
mov
aam
jo
js
lods
icebp
adc
jl
mov
call
imul
int
stc
sbb
movsl
push
cwtl
out
mov
iret
fst
stos
lret
jl
pop
xchg
mov
movsl
repz
adc
sbb
cs
das
pop
mov
ss
mov
ret
pop
push
fnstsw
cmp
xchg
dec
imul
xchg
ds
sub
fdivr
xchg
xor
or
add
sub
daa
bswap
sub
sbb
aam
cs
mov
ret
gs
cmp
cmp
fstpl
xchg
jge
push
mov
mov
out
insb
imul
push
sub
adc
ds
call
push
outsb
idivl
idivl
out
imul
fs
cmpsl
mov
jg
pop
sub
xor
inc
insb
in
push
jno
leave
jne
add
jne
jno
adc
orb
jp
pop
push
fs
or
add
mov
es
aam
pop
or
or
cmp
pop
cwtl
pop
pop
xorl
xchg
cs
test
xor
shlb
cli
or
bound
xchg
test
shrb
jle
push
lcall
jecxz
mov
fcmovnu
test
cmp
aaa
aad
pop
pop
scas
cld
or
xchg
pop
xor
and
pop
pop
or
push
jb
xchg
mov
sahf
pop
daa
mov
in
int
in
mov
push
push
aaa
inc
ret
jmp
imul
cld
shlb
mov
jg
adc
lret
daa
push
addr16
add
test
insb
dec
mov
adc
or
mov
push
sbb
insl
ljmp
push
add
and
inc
xor
icebp
ds
dec
push
aad
scas
jbe
and
dec
stos
xchg
ret
xor
mov
pop
pop
sbb
jecxz
xchg
ret
add
scas
xor
and
push
lods
mov
mov
sbb
push
fadd
mov
imul
loop
cmc
out
into
add
sub
and
lret
bnd
inc
in
stos
sbb
es
das
mov
lods
jb
test
pop
inc
pushl
pusha
cmp
into
fbld
jl
cmp
xlat
xor
mov
andb
scas
fisttps
xchg
add
ss
or
mov
loopne
jl
pop
sbbl
scas
cmpsb
aas
mov
inc
std
sbb
mov
clc
xor
pop
scas
roll
xchg
or
mov
inc
mov
push
sub
cld
mov
notl
call
cld
inc
loope
add
nop
pop
mov
xor
xorl
pop
jnp
enter
mov
xor
mov
aas
leave
pop
std
rclb
or
out
ret
ja
mov
arpl
jge
mov
addr16
pop
push
sbb
xchg
or
fdivrs
call
shlb
push
inc
icebp
fcomps
jl
das
or
inc
fsts
pop
popf
lods
call
jo
lret
lahf
imul
aaa
movsl
jne
push
sub
int
loopne
xor
jmp
scas
xchg
or
stc
jmp
lret
cmpsl
cwtl
or
mov
mov
shr
int3
pop
mov
jb
lret
jmp
push
cmp
inc
xor
in
test
test
mov
push
daa
mov
and
mov
test
adc
insb
push
insl
sbb
ja
lock
mov
cmpsb
dec
fimull
cmp
pop
dec
xor
clc
xor
mov
pushf
cmpsl
roll
gs
mov
mov
nop
aaa
sub
ja
push
pop
mov
test
jecxz
sbb
nop
or
lock
sbb
jmp
jmp
xchg
sub
stos
ret
sbbl
rorb
fwait
lods
sbbl
lahf
das
pop
js
mov
sub
out
jle
js
pop
cmpxchg
rclb
bt
movsb
fadd
iret
pop
push
bswap
jle
add
sub
mov
and
lcall
leave
and
sbb
push
fidivrl
mov
aaa
jae
out
test
dec
ret
sub
imul
cmp
jne
mov
xor
gs
repz
mov
popa
xchg
pop
mov
add
xor
sub
dec
lahf
xor
mov
ljmp
inc
add
leave
mov
add
push
rorl
shll
stc
inc
repnz
jae
mov
aas
and
cmp
test
cltd
add
cs
sbb
iret
bswap
mov
iret
cmp
add
sti
mov
sbb
nop
add
or
xor
mov
lret
enter
fmull
int3
push
imul
rolb
movsb
rcr
xchg
cmp
mov
sbb
dec
pop
push
inc
stos
shr
inc
jne
cltd
inc
mov
call
iret
sub
mov
scas
sub
jmp
jmp
ret
frstor
in
movsl
mov
loop
pop
daa
push
int
mov
int
adc
into
xor
jo
inc
mov
outsl
aaa
hlt
inc
sub
arpl
inc
rorb
stc
sub
dec
fistl
pop
aad
int
jb
insl
jnp
cmp
out
jmp
pop
jge
push
jge
jmp
sbb
je
sbb
mov
inc
js
xor
xor
lods
jo
sbb
in
fs
add
jecxz
cmp
out
pop
mov
aaa
mov
dec
test
sbb
addl
aas
ficompl
and
pop
fnstsw
mov
xchg
fwait
push
call
push
xor
and
mov
ret
int3
adc
add
mov
jp
ljmp
fcmovu
je
push
xor
pusha
xorl
loopne
je
ja
es
rolb
fnstcw
sub
and
jg
cs
loop
pop
cmp
mov
sub
test
orb
fs
arpl
test
jp
test
rcrb
push
repz
sub
idivb
dec
jl
xchg
mov
movsl
loope
daa
orb
jmp
rorb
add
outsb
scas
int
in
insl
fs
loop
cwtl
dec
scas
aad
mov
or
jo
dec
into
mov
sub
dec
pop
aas
dec
icebp
ss
add
mov
jne
out
stc
sbb
jp
dec
ja
repz
popf
inc
xor
mov
test
test
and
mov
or
scas
inc
inc
les
sub
mov
repnz
mov
lock
jp
push
imul
std
lret
loop
pop
cmp
out
fldcw
cmpsl
clc
call
nop
pop
lcall
mov
adc
shl
xchg
or
sub
cmp
mov
add
pop
xchg
mov
mov
testb
dec
xlat
mov
pusha
jl
jno
and
xlat
pop
je
cmp
aas
out
insl
cmp
imul
xchg
out
sbb
insb
dec
cmp
test
pop
ljmp
out
lods
or
lahf
into
inc
mov
cmpsl
test
movsl
enter
dec
or
cmp
andps
pusha
xchg
sahf
fwait
xchg
scas
sbb
adc
out
je
in
arpl
loope
jmp
mov
aaa
icebp
in
cmp
inc
mov
pop
inc
inc
ljmp
dec
xor
sti
or
fsubrl
hlt
mov
cld
cltd
dec
loope
jl
xor
sarb
ret
fsub
adc
lret
xorb
xor
pop
pop
sbb
test
jp
pop
xor
mov
or
pop
jb
cmp
les
shlb
mov
lcall
std
in
push
inc
sub
pop
and
push
push
push
fbld
in
js
into
xchg
pop
xchg
mov
inc
popf
sub
inc
pop
mov
push
sub
jae
popa
or
mov
dec
sbb
jne
add
in
fidivrs
mov
inc
lock
inc
pushf
xchg
imul
xchg
pop
and
ficompl
mov
dec
loop
mov
das
imul
loope
pop
push
cld
dec
push
aas
mov
ds
mov
and
jno
shrb
xor
stos
dec
push
xchg
imul
scas
cwtl
insl
testl
push
xchg
mov
fs
imulb
sbbb
rorb
inc
fcmove
push
xor
fidivrl
xor
popf
fld
ds
lcall
mov
loope
or
inc
mov
sub
xchg
scas
jo
sbb
insb
adc
and
roll
mov
scas
mov
jae
and
jle
int3
jo
push
ficoml
sbb
cmp
flds
fstl
loop
mov
or
pminsw
bound
in
rol
nop
shlb
sbbl
and
mov
pop
pop
adc
pop
inc
lret
dec
popf
cmp
xlat
outsl
jno
jl
xchg
mov
fnstenv
xchg
adc
jecxz
xchg
shll
repz
pushf
xor
jae
pop
or
addb
and
les
es
test
jnp
inc
sbb
sub
mov
aaa
adc
inc
out
xchg
mov
insb
mov
jle
sub
je
pop
rcrl
mov
inc
inc
imul
lret
lock
in
jnp
push
mov
ds
pusha
subb
insb
popa
fldcw
jns
daa
lret
cs
imul
sbb
nop
dec
rcrb
fmul
jnp
std
or
stos
xchg
mov
or
leave
xor
gs
mov
xchg
mov
sahf
push
or
jne
jp
lock
xchg
inc
pop
jnp
push
dec
nop
xchg
popf
fnstcw
mov
fidivs
or
mov
mov
lcall
and
outsl
push
pushf
adc
rolb
lods
rcrl
clc
mov
out
data16
pop
orb
sbbl
icebp
jo
mov
dec
lods
or
movsl
xchg
cmp
imul
repnz
jg
jle
push
shl
lods
int
xlat
jmp
leave
jmp
sub
test
icebp
in
jge
xchg
pop
mov
scas
xchg
movsb
sub
push
jecxz
test
cltd
dec
test
or
cmp
mov
jbe
sti
mov
adc
stos
and
test
cmp
fs
je
popf
fcompl
mov
pop
lea
jecxz
iret
cmp
mov
jle
dec
aad
nop
loop
pusha
mov
testb
shll
cltd
pop
in
shll
or
xchg
lret
xor
pusha
mov
pop
sar
loop
xchg
popf
iret
jno
fisubs
iret
mov
mov
jnp
repnz
cmpsb
inc
sbb
adc
fimull
mov
lcall
pusha
fstl
push
mov
or
dec
inc
sub
lods
dec
dec
in
dec
enter
insb
inc
xchg
stos
mov
rclb
jmp
sub
mov
mov
lock
data16
mov
loope
fstps
add
cwtl
add
aaa
and
push
xchg
mov
addr16
mov
cmp
or
mov
adc
pusha
pop
cli
jg
xchg
and
pop
lds
pop
mov
sub
jl
jecxz
es
jo
fdivl
call
std
arpl
fimull
push
jge
add
mov
clc
adc
xor
mov
mov
pop
and
andb
pop
mov
inc
mov
mov
inc
pusha
subb
push
es
adc
ficomps
cmc
mov
jg
sbb
dec
movsb
or
in
loopne
shll
and
xchg
cwtl
cmp
xchg
cmp
or
iret
js
mov
push
negl
aad
test
and
jp
adc
inc
add
aaa
mov
repnz
popa
lret
xchg
sub
adc
add
mov
inc
mov
mov
or
test
xchg
icebp
push
inc
mov
cmpsb
sbb
dec
pop
jge
aad
add
adc
sub
mov
mov
mov
lds
or
jo
call
mov
out
sbb
imul
rcl
shlb
rolb
lcall
frstor
test
mov
xchg
hlt
or
adc
dec
in
out
fstpl
loopne
insl
or
sahf
cltd
addb
cmp
xor
sbb
mov
sub
aad
add
and
pop
xchg
and
mov
sbb
mov
loope
cmp
push
fdivrp
or
call
stos
bound
or
fiaddl
lcall
push
in
sbb
push
mov
imul
inc
sahf
test
and
daa
sbb
push
pop
scas
shr
inc
cmp
push
dec
shlb
xorl
stos
sbb
or
or
xchg
cmp
cmp
popa
ret
fs
iret
add
rol
cmc
jno
jecxz
adc
xchg
add
lds
cli
loope
leave
jle
push
push
mov
xchg
cmc
aad
xor
dec
daa
or
movsl
jl
fldl
rcll
push
jge
sbb
fwait
sub
jg
mov
lods
xor
mov
sti
lods
adc
pop
inc
mov
jae
pusha
cld
stos
imul
sbb
hlt
and
mov
mov
xchg
push
in
mov
mov
out
test
xor
notl
inc
imul
mov
dec
mov
sub
jmp
sub
enter
clc
mov
xor
std
lods
push
pop
ja
pusha
adc
sub
std
mov
or
mov
mov
shll
out
add
ja
into
push
push
fstpt
les
fcmovb
fwait
cmp
add
mov
hlt
popf
adc
xchg
cwtl
andb
gs
fdivl
stos
adc
lods
mov
push
cltd
dec
push
jo
adc
arpl
and
scas
mov
inc
lds
xchg
push
add
push
xchg
das
sbb
arpl
lock
ja
jno
adc
fadd
sub
add
jge
dec
imul
test
lahf
cld
adc
stc
or
jns
roll
jecxz
js
lcall
adc
aad
scas
cmp
roll
pushf
imul
scas
xchg
cmp
mov
adcl
test
jmp
mov
adc
sbb
aam
ret
add
dec
int3
out
sahf
and
lds
push
lret
sub
mov
jmp
imul
push
addr16
jne
jne
insb
or
xchg
add
dec
xchg
adc
xchg
notb
mov
cmc
mov
sbb
inc
pushf
test
rorl
xor
inc
frstor
pop
cmp
sbb
sub
mov
out
pop
test
lods
aam
jmp
xchg
mov
icebp
pop
decl
mov
xor
xor
fwait
fwait
pop
pushf
push
cmpsb
mov
loopne
or
popa
rolb
icebp
in
cmpsb
push
adc
xor
int3
cmp
cli
bound
push
ss
push
cltd
inc
and
or
int
mov
inc
lock
data16
mov
mov
mov
inc
lock
repnz
dec
rclb
sbb
test
mov
test
test
movsb
push
outsl
mov
xchg
pop
stc
ret
filds
insl
cld
cmp
mov
pop
pop
mov
cmp
cmc
fistl
jae
not
sbbl
fmulp
loope
and
push
es
lahf
inc
dec
imul
fisubrs
push
stc
cwtl
push
xchg
popf
pop
and
inc
arpl
mov
inc
inc
pop
jmp
jg
adc
sbb
jmp
xor
xchg
add
xchg
or
and
in
adc
push
mov
lds
pop
imul
add
pop
sbb
jns
fsts
inc
and
push
xchg
iret
test
sub
iret
daa
ja
cmp
add
int
pusha
fidivs
repz
dec
and
andw
mov
test
scas
in
das
jbe
jge
push
add
insb
stos
sub
jb
xor
push
rorl
push
ja
shr
shll
pushf
cmp
call
sbb
test
inc
mov
push
mov
sbb
cmp
lret
shll
sub
cld
pop
daa
pushf
dec
and
mov
dec
rcrl
loopne
insl
ret
ret
imul
pop
sbb
cmpsb
lods
fwait
push
call
and
cld
fstpl
fnstenv
iret
lret
sti
leave
ret
aam
test
int
imull
xchg
push
icebp
lock
test
cmp
and
invlpg
pop
push
push
fildl
leave
mov
xor
loopne
loopne
imul
repnz
leave
xchg
fcmovnu
dec
jl
ror
pop
add
inc
out
mov
xor
stos
mov
iret
flds
dec
add
fs
aaa
sar
mull
mov
xor
jno
jge
imul
and
fcmovb
mov
js
cmp
test
stos
push
cltd
xor
fisubl
jl
mov
xchg
xchg
inc
or
in
ret
lock
push
mov
dec
aad
mov
shll
ror
fidivrl
incl
sub
push
mov
rcll
mov
mov
xchg
jae
movsb
xchg
or
jl
cli
mov
inc
jno
and
inc
pop
inc
lods
out
mov
jge
pop
nop
cmpsb
sub
adc
pop
or
mov
insl
mov
rcr
into
insb
shrb
jmp
push
sbb
mov
in
jno
mov
jge
hlt
adc
sub
and
add
cwtl
arpl
jbe
ds
popf
jo
xchg
mov
jp
xor
je
push
cltd
scas
sbb
adc
adc
or
cli
in
cmp
jmp
sbb
jmp
mov
inc
adc
fisttpll
mov
or
xor
sub
or
xchg
mov
sub
mov
rol
inc
cmp
outsb
push
mov
movsb
je
or
cltd
xlat
lret
int3
fstpt
add
int
xchg
outsb
loope
and
repz
mov
push
add
or
xor
popa
xor
jecxz
cs
mov
movsb
dec
sbb
insl
sbb
sub
mov
data16
xchg
pop
mov
xlat
add
jb
or
aad
adc
jle
loopne
pop
mov
scas
gs
mov
sahf
in
pop
push
and
or
add
jg
sbb
repnz
jl
mov
cmp
ret
fndisi(8087
cmp
xchg
movsl
sbb
aaa
sbb
out
inc
pop
sub
xchg
cli
mov
pop
and
mov
jns
xor
mov
pop
mov
loopne
push
inc
cmp
mov
xchg
inc
dec
xchg
xchg
addl
cmpsb
pop
repnz
popa
sub
xchg
repz
das
mov
scas
ret
add
jno
adcb
dec
sbb
or
mov
inc
mov
mov
std
bound
inc
outsb
or
nop
add
sub
ret
lods
je
push
sbb
inc
daa
xchg
rcl
mov
xchg
inc
jmp
addb
and
popf
stos
and
pop
std
and
sbbb
sbb
cmp
loope
jns
xor
add
icebp
loopne
xor
cli
repz
pop
shrb
jo
popf
stc
or
rol
fidivrs
int3
aaa
pop
push
pop
lods
pusha
lea
pop
insb
ret
icebp
push
orb
imull
outsl
lret
mov
cmpsb
inc
sbb
xorl
loope
xchg
in
lods
mov
push
add
sbb
clc
lcall
push
cmp
jle
aad
dec
sbb
mov
xor
mov
out
test
jne
into
mov
lret
jae
cmp
sub
jecxz
pop
int3
or
push
lret
pop
cmpsl
dec
mov
xchg
out
pop
mov
fs
and
scas
lret
add
in
sbb
fdiv
stc
nop
in
fbld
and
ret
lock
mov
in
mov
imul
mov
mov
ds
cmp
sbb
push
in
xor
xor
xor
add
mov
in
pop
cmpsl
fsubl
ss
cmp
repnz
add
cs
pop
pop
mov
adc
lods
in
lods
popf
cmp
push
jmp
and
or
lods
ret
cmpsl
push
fs
cmp
das
adc
cmp
add
pusha
cld
jecxz
aam
add
xor
pushf
cs
das
cmpsb
dec
mov
ja
call
sub
jae
add
xor
es
adc
loope
inc
sti
lcall
popf
sbbb
and
sahf
insb
ds
xchg
rorl
dec
sub
or
cmpsb
xchg
in
repz
dec
lea
add
sub
fcomp
inc
jbe
push
jbe
dec
cld
es
pop
call
mov
outsb
inc
jo
int3
ret
dec
cmp
sbbl
insb
imull
jge
sarl
xor
int3
push
pop
mov
mov
mov
pusha
idivb
inc
mov
and
mov
xchg
mov
adc
push
mov
pushf
mov
je
ja
mov
cwtl
mov
je
cwtl
pop
cmp
mov
icebp
mov
pop
aad
jb
fldenv
inc
shrl
lret
scas
int
fnstcw
mov
mov
movsl
mov
mov
and
jnp
mov
pop
push
loopne
pop
out
addl
ficoms
bnd
rolb
mov
sub
gs
inc
icebp
lods
or
sbbb
xor
mov
jns
pop
jbe
repz
insb
loope
cmp
sub
push
hlt
dec
dec
fucomp
mov
mov
xor
push
out
xchg
test
out
xor
pop
or
test
das
pusha
mov
xor
jmp
mov
cmp
xor
jmp
cmp
icebp
stos
push
enter
dec
sub
jg
lret
imul
mov
cmpl
and
inc
lret
cmp
dec
push
mov
daa
in
push
negb
pop
xchg
into
pushf
pop
jle
ficompl
pop
xor
sbb
fwait
jne
push
fisubrs
shrb
subl
in
in
mov
hlt
or
and
inc
pop
insl
mov
xchg
iret
cmp
outsl
adc
or
stos
movsb
test
inc
addr16
incl
sti
xor
enter
test
sub
and
in
sub
and
dec
sub
iret
pop
fcmovu
mov
not
or
jg
enter
aad
cwtl
shlb
addr16
pop
jp
inc
aas
dec
test
aam
xchg
stc
inc
aaa
ret
pop
mov
lea
cmc
movsb
xchg
test
mov
es
mov
rclb
pop
js
popf
cli
pop
sbbl
hlt
mov
cmp
fwait
cmp
sbbb
aam
push
jl,pn
andb
mov
add
leave
aaa
pop
cmp
push
or
incl
jl
add
cld
loop
xor
mov
imul
pop
lods
ret
mov
imul
inc
cs
ss
out
das
fs
call
notl
push
mov
pop
sbb
test
sbb
and
dec
inc
dec
jecxz
jl
aas
sbb
jmp
mov
pop
or
add
add
sub
sub
out
jns
mov
add
inc
pop
jno
mov
mov
push
mov
jecxz
cs
mov
js
mov
pop
dec
inc
jbe
ljmp
add
and
adc
jecxz
fcmovbe
sub
inc
inc
adc
jno
adc
pop
je
fs
mov
sub
cmp
cmpb
push
enter
jb
jno
scas
mov
out
popa
push
pop
and
cmp
lea
jo
sbb
aad
test
sarl
jns
pop
repz
pop
cmc
mov
jg
mov
cs
lods
aam
repnz
arpl
pusha
jae
cmc
push
shrd
fldcw
cmpsb
lcall
jecxz
xchg
ljmp
subl
mov
cltd
aad
push
xchg
int3
out
repz
xor
mov
xor
add
xor
sub
pop
lock
sub
jb
ficoml
mov
jns
enter
push
in
mov
ret
mov
imul
and
add
cs
pop
fnstsw
push
cld
ja
jge
inc
lock
lret
bound
push
pushf
pop
rolb
dec
icebp
cli
sub
ss
and
xchg
std
add
xor
mov
pop
adc
pop
stos
shrl
mov
jmp
adc
xchg
jge
adc
xchg
xchg
pusha
rcrb
pop
out
mov
pushf
int
pop
jno
pop
mov
jp
movsb
mov
js
mov
vdivpd
je
xor
rcrl
inc
iret
xor
push
insl
sti
jbe
xchg
dec
sahf
mov
cltd
fsubrl
js
jb
push
gs
aad
push
ret
mulb
xchg
fistps
sub
int
loopne
jne
adc
mov
shrb
jno
dec
out
pop
lods
push
outsb
jl
into
xchg
sarl
and
sti
leave
sbb
adc
and
push
mov
ret
jg
lock
xchg
dec
dec
xchg
mov
popf
push
jnp
and
into
loope
jnp
xor
repz
out
movsb
push
ss
out
pop
imul
jne
shll
jnp
je
or
fs
add
loope
shl
pop
jp
icebp
ret
mov
add
mov
adc
dec
dec
pushl
fldl
shrl
mov
lea
lods
mov
popa
inc
test
push
xor
xchg
mov
mov
lods
pushf
mov
xor
mov
stc
aam
push
xchg
jbe
xor
cmp
xor
fwait
push
push
lret
sbb
ret
mov
inc
sti
and
xchg
jge
cmc
iret
fistpll
test
pop
push
push
mov
pop
cmc
cmp
outsl
and
nop
sub
nop
test
sub
and
repz
stc
cltd
push
or
aad
ja
xchg
xchg
sbb
mov
push
icebp
shr
sbb
cmpsb
mov
jbe
ljmp
lgs
orb
scas
mov
addr16
in
push
popa
pop
imul
mov
inc
imul
outsb
jae
fwait
aas
mov
or
sbb
mov
dec
inc
subl
and
xchg
pop
shrl
push
sbb
dec
test
cld
test
cmp
lock
mov
inc
pop
pusha
inc
sbb
xchg
fsubrl
testl
cmc
dec
add
and
test
or
icebp
add
daa
les
mov
add
mov
in
xchg
leave
dec
cs
mov
into
lods
daa
test
mov
out
fwait
popa
push
pusha
test
xlat
aam
adc
movsl
mov
cmp
imul
fidivs
int
push
dec
lds
pop
xchg
pop
mov
lods
or
mov
das
lea
jmp
adc
inc
insl
push
inc
mov
int3
dec
pushf
inc
sbb
movhps
stos
pop
xor
lods
inc
mov
jl
outsl
pop
lods
xor
into
pop
dec
xchg
mov
dec
js
and
icebp
idivb
pop
jo
mov
and
add
push
movsl
pop
jb
mov
sarl
pop
aad
test
xor
pop
aas
test
dec
scas
loopne
xor
push
jae
nop
push
lea
xchg
je
mov
jae
mov
cmpb
pop
shlb
mov
cmp
call
faddl
push
mov
push
xor
in
sub
jne
adc
and
add
fisttps
stos
shrb
add
adc
call
mov
or
out
jo
push
mov
mov
pushf
out
roll
fisubs
jmp
pop
dec
fcmovb
mov
imul
rcrb
mov
jecxz
fistl
adc
shll
inc
dec
mov
das
or
mov
inc
lods
adc
inc
popf
or
cltd
push
or
lea
add
lock
rcll
xchg
iret
mov
and
add
jne
xchg
into
mov
fsubl
mov
jbe
cmp
loope
loop
outsl
sub
jae
nop
cmp
insl
push
xchg
leave
loopne
cmc
lods
mov
or
lea
stc
test
inc
inc
mov
dec
xor
jp
sbb
dec
int3
xor
inc
or
mov
mov
stos
push
decb
int
mov
lahf
out
fs
pusha
and
mov
cli
leave
addps
mov
jo
pop
jns
mov
in
and
pop
fists
cmp
jg
cmp
lret
mov
test
js
mov
add
or
subl
adc
sub
divb
inc
in
psrlq
mov
xchg
push
push
fldpi
add
jle
lock
jmp
cmpl
jbe
imul
dec
mov
gs
into
pop
push
mov
addr16
fimuls
scas
cwtl
fs
mov
pop
inc
xor
dec
mov
cmp
cmc
movsb
xchg
jl
iret
push
add
xchg
in
adc
cmc
jb
pop
sbb
push
in
cmp
cli
push
adc
loop
repnz
pushf
ror
add
cltd
fistpl
repz
jbe
ficoml
ljmp
inc
lds
ss
dec
scas
sbb
movsb
inc
jmp
mov
ja
sbb
pop
iret
das
lret
mov
cmp
mov
dec
not
or
jle
xor
pop
add
xchg
movd
sub
xchg
inc
mov
fsubr
pop
pop
xchg
mov
mov
jne
cmp
sub
pmaxub
push
stos
xor
insl
xchg
jbe
and
je
outsb
jnp
pop
movsl
xor
fldl
inc
std
fstl
imul
unpckhps
scas
adcb
divl
test
dec
xor
sbbb
outsb
lods
push
out
dec
decl
mov
push
jae
mov
cmpsb
imul
aas
mov
jl
sub
pop
dec
jl
aas
lret
out
jmp
or
jae
into
pop
pushf
lea
loopne
push
adc
mov
ret
scas
cli
xchg
cmc
push
into
es
aas
push
jbe
and
mov
stc
add
icebp
and
adc
mov
xlat
jnp
adc
fidivrl
sti
xchg
pop
clc
mov
cmc
pop
movsb
ss
in
mov
add
leave
lahf
div
xor
dec
inc
stc
cmc
xor
pop
xchg
nop
lock
mov
or
js
addl
gs
dec
adc
jns
fs
icebp
loop
jae
sahf
push
sub
push
cmp
and
xor
add
jle
cli
aaa
xchg
inc
sub
push
jge
adcl
sbbl
mov
scas
jae
xchg
inc
sbb
cmpsb
mov
mov
sub
jge
xchg
inc
lea
lea
pop
jae
and
ljmp
inc
mov
shll
testl
fsub
dec
ret
adc
gs
or
cmpsb
xchg
mov
push
cmp
int
push
lea
test
sub
push
mov
push
ljmp
stos
inc
addl
inc
int
mull
push
out
ds
cltd
int
stos
sub
outsl
orb
fs
clc
leave
adc
pop
popf
mov
xor
scas
pop
dec
call
xchg
cmp
dec
test
sti
loop
xlat
pop
pand
lcall
pop
data16
bound
and
inc
into
xor
xchg
push
mov
test
repz
fdivr
repnz
and
push
sbb
js
and
loop
fdivrs
sbb
dec
cwtl
ret
xor
sbb
pushf
int3
nop
ss
not
cmp
inc
fwait
sti
dec
je
leave
mov
inc
pop
adc
pop
add
adc
inc
out
cmp
pop
stos
mov
outsb
adc
jg
jb
sbb
pop
popf
aas
clc
movsb
int
in
sub
paddb
ffree
and
mov
lahf
fwait
jno
push
push
sub
mov
sub
pop
sub
jmp
cmp
push
xchg
adc
movsl
pusha
repnz
mov
rcll
add
dec
ja
aad
sub
inc
mov
lcall
inc
xlat
mov
push
outsl
xchg
mov
das
xor
dec
into
dec
adc
or
inc
xor
loop
push
addr16
fisttps
pop
daa
add
jle
mov
fistpl
aaa
mov
and
sub
insb
fdivr
cmpsb
ret
ss
sti
aad
xor
xorl
aad
push
adc
jne
add
dec
lahf
cs
mov
jmp
sarl
mov
xor
cltd
scas
pop
fcomp
push
into
sbb
pushf
inc
out
inc
pop
xor
pop
mov
mov
movsb
xor
mov
lret
adc
sbbb
jnp
sub
jecxz
out
in
rolb
mulb
repz
pop
repnz
je
push
dec
sub
xor
cs
jo
jecxz
rol
sti
test
clc
cltd
inc
mov
cmp
push
add
js
cld
inc
cmovns
ret
sub
pop
pop
ss
out
out
clc
aaa
lock
and
mov
push
mov
inc
mov
jo
jnp
nop
jne
enter
insb
push
jle
jmp
xchg
loop
sbb
sub
or
lock
push
jl
pop
add
lea
and
xchg
imul
jge
adc
mov
push
mov
popf
lea
pop
xor
iret
xor
mov
js
pop
fistpl
jmp
mov
gs
jns
ds
mov
push
cmpl
aam
dec
sbb
orl
mov
aam
pop
jb
adc
scas
mov
int
jno
push
std
rclb
push
add
cmc
inc
cmp
xchg
rclb
adc
sbbl
in
adc
push
lret
lret
mov
das
push
pop
xor
pop
jmp
repnz
cwtl
adc
loopne
out
les
dec
int
push
adc
in
push
sbb
nop
mov
mov
lods
dec
jbe
std
stos
call
pop
sbb
jle
sub
and
sub
pop
sub
insl
xchg
cltd
sub
pop
iret
out
and
mov
movsb
pop
sbb
test
dec
dec
cmp
add
lods
in
jbe
jo
test
ret
sar
popl
jg
and
and
pcmpgtb
daa
lret
jmp
xchg
test
fcoms
ds
or
stos
push
cmpb
cwtl
jae
fmull
xor
inc
leave
add
jno
enter
std
lods
add
leave
pop
cmp
mov
dec
std
push
int
or
loopne
mov
cld
mov
lret
push
cmp
mov
mov
aam
or
mov
mov
push
test
cmp
jne
repz
or
cmp
or
fiadds
jl
pushf
shl
cmc
push
pop
outsb
inc
inc
lea
stos
arpl
mov
outsl
imul
jge
push
pop
or
add
mov
mov
pushf
lds
scas
push
add
mov
icebp
push
sti
inc
lods
jo
fnstenv
hlt
push
jmp
mov
lds
pop
add
aas
mov
xchg
cli
jns
sub
adc
aam
insl
push
inc
test
inc
push
mov
push
leave
or
xchg
loop
pop
test
mov
inc
push
add
xor
add
inc
cs
push
sbb
enter
in
ss
and
pop
out
icebp
inc
sub
loop
ret
sbbb
sbb
cs
mov
sub
movsb
sti
js
fdivrs
and
add
adc
clc
lret
xorl
fnstsw
cmp
mov
insl
leave
gs
add
jg
loopne
mov
sub
xchg
and
std
xor
es
pop
inc
and
push
mov
fwait
je
sarb
mov
cmpsb
mov
jle
ja
cmp
inc
or
sahf
in
fwait
clc
and
inc
pop
nop
mov
loopne
jg
mov
jb
mov
lds
fdivrl
daa
sbb
fwait
pop
popf
and
ficoms
dec
or
dec
pop
ret
nop
outsl
pusha
mov
push
lcall
and
hlt
sar
push
mov
mov
lock
pop
or
cld
leave
or
enter
and
xor
or
xchg
cmpsb
jge
xchg
xlat
jo
and
mov
hlt
in
xor
pop
idivl
iret
add
dec
cmp
rcrl
ja
movsb
imul
and
fldt
mov
mov
xor
xlat
jne
loopne
pcmpgtb
jnp
pop
cmp
pop
push
test
mov
cld
es
insb
sub
mov
pusha
movsb
mov
mov
shrl
jle
push
fldl2e
inc
jmp
jns
idiv
add
jae
fiadds
mov
cmp
adc
call
popa
mov
cld
jo
sbb
sbb
cld
rcrb
mov
dec
sarl
sbb
out
or
cmp
cmp
sub
bound
sar
shl
jae
test
sub
and
mov
adc
add
sahf
cmp
cld
pop
mov
ss
sahf
aam
mov
fiadds
fidivrl
inc
sub
push
pop
adc
or
pop
mov
and
int3
lea
push
ds
dec
cmpsl
jbe
xor
clc
shll
push
jecxz
sub
out
adcl
mov
push
mov
cmp
mov
add
adc
pop
lret
icebp
mov
xchg
lret
ret
or
test
pushf
popa
hlt
cmpsb
popl
in
loop
test
in
into
push
and
mov
sahf
sub
mov
in
inc
xor
mov
gs
ret
sahf
scas
adc
mov
in
jb
sbb
push
dec
outsl
inc
jno
jbe
xchg
or
sbb
call
es
jle
push
shll
mov
inc
and
icebp
jp
dec
lock
repz
in
imul
or
inc
iret
jns
pop
cmp
sub
dec
lret
mov
in
int
or
and
sahf
adc
es
jb
inc
push
xor
dec
and
jge
dec
mov
subl
mov
lods
xor
push
add
fsubrs
pop
cmpsb
or
jge
ficompl
mov
test
int
mov
addr16
stos
dec
mov
cmc
mov
cmp
out
test
mov
nop
js
xchg
ss
ficoms
popa
in
adc
dec
xor
push
push
xchg
mov
rcrb
jnp
jge
je
jno
in
fisttpll
sahf
test
pop
xchg
adc
push
cmp
and
mov
int
dec
pop
jecxz
dec
cmp
xor
fisttpl
daa
sarl
adc
pop
sub
pushf
call
sahf
int
ja
pop
cli
or
xchg
adc
dec
fidivl
shl
movsb
pop
or
gs
xor
mov
dec
cltd
mov
mov
nop
jmp
out
int
cmp
and
pop
add
mov
add
mov
cltd
test
xor
shlb
incb
lods
mov
add
push
loopne
push
lcall
and
cs
jl
xchg
out
jno
lods
jmp
cmp
ret
and
std
add
lea
xchg
xor
adc
out
inc
inc
leave
mov
ljmp
or
aad
mov
sub
sub
adc
sub
loope
add
dec
inc
jns
or
cmpsb
mov
movsl
and
xchg
pop
push
adc
cmp
repnz
xchg
movsl
sti
cmpsb
std
mov
fsub
mov
jge
cmp
in
outsl
mov
inc
mov
pop
push
ja
jmp
lret
jae
dec
fisttpll
inc
popa
sbb
jl,pt
cwtl
jp
sub
push
dec
out
push
cmp
push
fisttpl
xor
mov
xor
cmp
or
push
or
cmp
xor
mov
push
jl
repnz
pop
cmc
mov
add
scas
mov
loope
mov
push
scas
or
fnstcw
popa
int3
lods
mov
cmpsl
inc
and
insb
arpl
xor
movsl
xlat
mov
icebp
cmpsl
cmp
out
jbe
cmpsb
rcrb
pop
movsl
mov
aam
mov
inc
or
loope
out
cmp
dec
cmp
andl
in
mov
test
and
icebp
mov
scas
subb
int3
test
int
jmp
add
inc
sahf
das
rcrb
out
lret
or
ljmp
xor
xor
dec
jb
popa
std
mov
sub
adc
lods
bound
outsl
leave
push
and
pop
in
stc
lret
shl
mov
cmp
mov
fcompl
jne
jmp
lcall
pop
pop
mov
das
or
stos
add
hlt
pop
addr16
jmp
in
mov
mov
sub
rcrb
pop
inc
loopne
mov
lds
mov
test
add
icebp
xchg
jne
out
add
out
dec
pop
inc
pop
push
mov
push
xorb
lods
outsl
lret
mov
sbb
cltd
add
js
sbb
ret
jne
add
xchg
push
inc
mov
ficomps
stos
xor
roll
push
cmc
mov
pop
sti
xchg
push
popf
fs
hlt
jecxz
mov
out
fiaddl
jecxz
xlat
pop
push
ret
xchg
dec
jl
inc
jno
out
cmpsl
dec
push
mov
sbb
hlt
push
clc
pop
rclb
adc
loop
pop
push
mov
or
xor
jmp
push
and
movl
jns
nop
daa
push
daa
dec
or
push
push
imul
iret
fisttps
outsl
clc
outsl
rcl
test
jns
fsubp
jle
sbb
xchg
in
fs
out
out
loop
sbb
cmpsl
je
push
jno
cmp
cltd
es
jbe
cmp
push
push
pop
imul
arpl
sbb
mov
int3
fldenv
pop
cmp
push
jp
fs
sbb
adcb
sub
sub
insb
add
test
jp
test
dec
or
fnstenv
jbe
jno
test
push
pop
xor
test
addr16
dec
inc
jae
enter
xchg
popa
cmp
push
mov
pushf
es
xor
movsb
je
hlt
inc
xchg
sub
out
icebp
and
inc
push
xchg
mov
mov
xchg
cmp
mov
jge
add
fsts
aas
jecxz
lcall
dec
xor
xchg
int
fs
movsl
mov
jae
cmpl
xor
pop
pop
lret
out
inc
aas
test
clc
push
leave
xchg
inc
pop
mov
jns
cmc
dec
mov
std
movsb
ja
mov
mov
popw
adc
jmp
xchg
push
cli
dec
add
lds
lcall
inc
xor
adc
daa
lea
mov
cmc
aam
jmp
and
test
mov
mov
out
in
loop
test
insl
int3
imull
addr16
inc
adc
stos
mov
in
jmp
sbb
clc
ret
fmul
push
and
jns
mov
xchg
mov
es
rcll
outsb
lret
dec
inc
and
in
mov
filds
inc
test
ja
xor
or
pusha
pop
scas
insb
jbe
scas
and
mov
cmp
add
add
mov
or
roll
jbe
xchg
subl
mov
sbb
push
inc
pop
sti
sbb
test
and
and
xlat
test
in
inc
out
clc
movl
sahf
pop
cmpb
lock
jbe
mov
mov
jae
in
arpl
pop
jb
ja
lods
xor
andl
in
in
jg
push
push
les
add
mov
lods
sbb
fwait
and
loopne
out
popa
dec
sti
and
inc
push
inc
xor
mov
xchg
popa
mov
in
inc
xor
jecxz
mov
addr16
adc
cli
gs
lods
cs
mov
dec
in
push
sub
push
je
pop
inc
sub
jb
divb
mov
shll
xor
es
inc
insb
push
fmulp
sub
jo
sbb
add
enter
lods
pop
cs
xchg
ss
mov
mov
pop
jp
xchg
fbld
xor
push
lock
aas
pop
ret
lods
imul
or
dec
mov
jno
xor
lcall
jno
cmpsl
ret
cmp
test
popa
and
inc
je
lods
mov
test
mov
in
jge
outsl
sbb
mov
mov
imul
popa
adc
nop
cmc
mov
loop
pop
xor
test
mov
dec
cmc
xor
fsubp
mov
mov
mov
mov
add
sbb
sub
std
adc
in
inc
xor
rcll
fs
adc
imul
mov
adc
cmp
sbb
subl
into
lret
ficompl
jmp
sar
daa
fists
pop
adc
or
out
sbb
stos
push
jge
in
cmp
in
push
arpl
cld
xchg
and
gs
sbb
mov
sbb
stc
sahf
aam
sbb
xchg
cmpsl
jecxz
dec
xchg
ja
add
inc
popl
pop
mov
sbb
in
jle
ficoml
or
hlt
inc
popf
out
xchg
repz
hlt
lods
xor
xor
jle
jge,pt
andl
mov
cmp
inc
psrlw
xchg
jns
cld
pop
loop
sub
ficompl
add
xchg
bound
fs
push
jl
inc
or
ljmp
fsubl
pop
scas
sti
mov
adc
movsl
loopnew
inc
cmpsl
daa
xor
mov
divl
out
cmp
pop
cs
inc
sbb
sub
mov
push
lea
cli
out
cltd
jle
pop
cmp
cmp
add
adc
hlt
adc
std
xchg
add
repnz
add
cmpsl
stc
mov
test
ss
adc
push
in
mov
cs
insb
fdivl
iret
push
or
mov
adc
mov
lret
aam
fists
mov
repz
ja
int
sub
repz
xchg
cld
add
mov
adc
inc
test
das
leave
pop
stos
mov
jmp
sub
cwtl
sub
fnstsw
fs
inc
add
push
popa
xor
insb
inc
jbe
add
jo
icebp
subb
sbb
sub
jne
lea
xchg
popa
and
movsb
jae
xor
aas
jmp
sbb
int3
dec
lea
rcl
roll
push
xchg
xchg
lcall
clc
xchg
mov
mov
pop
loop
inc
cmp
ficoms
push
rol
fdivl
sarb
stc
cmpsb
jg
add
xcrypt-ctr
cmpsl
fwait
int3
inc
pop
jp
pop
xor
wbinvd
test
das
sub
jno
jb
std
and
out
push
jo
bound
call
stos
push
sub
lea
cwtl
sub
pushf
and
std
adc
cltd
out
sbb
xchg
inc
mov
inc
insb
mov
aad
pop
shrb
sub
inc
sbb
push
mov
cmc
sub
dec
in
ss
mull
jge
cmp
dec
mov
outsl
cltd
addb
outsb
pop
add
pop
je
xchg
shrb
fadds
cmc
cs
shr
jae
mov
gs
mov
xchg
leave
repnz
rolb
inc
sub
push
mov
insl
xor
mov
adc
or
cmpsb
in
jbe
sbbl
add
mov
pushf
jo
mov
and
in
in
adc
repz
pop
lret
sbb
ds
add
pop
mov
pop
fsubr
rolb
xlat
dec
mov
ret
aaa
fbstp
or
jmp
mov
cmp
push
dec
es
les
lods
aam
mov
add
lods
stos
cmp
mov
sbb
in
lds
dec
sbb
mov
pop
jb
push
shlb
inc
outsb
es
jno
pop
arpl
jmp
fildll
cmp
mov
fists
dec
mov
mov
outsb
idiv
repnz
pop
mov
sti
add
pop
add
mov
inc
xorb
fdivp
jmp
movsl
cmpsb
pop
mov
adc
mov
ss
rol
inc
mov
push
jne
dec
sti
add
mov
dec
mov
scas
cmpsl
out
cmp
insl
mov
popf
sbb
sbb
add
cmp
lret
fistpll
mov
mov
sbb
xor
mov
mov
orl
out
fistpll
movsb
fnstsw
mov
stos
push
mov
sbb
rcrl
das
xchg
daa
adc
fucomip
aam
outsl
and
add
push
sbb
ja
pushfw
dec
stos
not
mov
ret
add
mov
or
leave
leave
in
mov
mov
dec
push
ret
or
int
xchg
adc
lea
loop
outsl
xchg
addl
fbld
ss
and
lret
icebp
inc
inc
xor
push
mov
and
pusha
cmpsb
xchg
sub
scas
jno
testb
sub
ja
sub
test
ret
ror
push
popa
push
xor
mov
sub
mov
xor
mov
fwait
mov
and
mov
out
inc
sub
jg
lods
xchg
insl
nop
sbb
mov
mov
out
in
mov
fstpl
or
sahf
aam
jno
movb
mov
lods
or
jmp
lock
and
jge
push
adc
mov
cld
clc
pushf
repz
and
fs
mov
sbb
in
mov
out
cmp
mov
mov
and
aaa
sti
push
pop
inc
pop
adc
inc
xchg
in
sub
stos
test
cmpl
scas
mov
loopne
in
ja
fmuls
or
test
lock
pop
cld
inc
jb
aad
pushf
ljmp
sub
mov
push
loopne
iret
orb
xchg
dec
rcrb
pop
js
es
xchg
ljmp
shlb
jge
lods
shll
mov
in
adc
imul
enter
and
pop
push
lods
adc
aad
jmp
cmpsb
adc
je
push
inc
jg
xor
and
popa
or
cmpsb
out
lods
imul
cs
fwait
loop
es
pop
inc
call
mov
popa
lock
adc
pop
dec
dec
out
shll
repz
flds
or
jne
std
push
arpl
or
sub
mulb
add
and
out
sub
aaa
xor
jns
mov
add
sbb
mov
cmp
xor
sar
mov
sti
mov
cmp
mov
mov
cmp
jl
ja
mov
das
int3
stos
pop
push
or
sbb
push
cmc
lods
dec
push
daa
jnp
push
xchg
addr16
insb
out
mov
pop
cwtl
fnop
imul
pop
ss
mov
pop
int3
lds
aaa
rcr
and
out
dec
rcll
cmp
mov
mov
jnp
popf
mov
dec
push
mov
pop
xchg
mov
cli
pop
mov
fwait
dec
addr16
xchg
mov
testl
rorb
jg
in
mov
daa
jb
lds
lcall
dec
jecxz
inc
fwait
das
sbb
adc
test
mov
mov
stos
jle
dec
xchg
lea
adc
sub
sub
and
or
ds
aad
stos
cmpsl
pop
push
and
cmpsl
aaa
push
int3
jb
loop
push
iret
fstpl
cwtl
shrl
xchg
pop
gs
dec
lods
jns
add
dec
popa
out
cmp
push
cld
and
cli
aas
jno
iret
jp
shr
sub
cmpsb
sahf
xchg
xchg
xor
push
test
push
dec
mov
cmpsl
jl
mov
call
out
pusha
mov
ja
bnd
lods
dec
mov
add
je
cli
imul
sub
add
add
cmpsb
test
mov
adc
mov
dec
loop,pt
loop
add
mov
rcr
add
cld
sbb
or
xchg
xchg
xor
movsl
ljmp
and
lret
daa
mov
dec
insl
sub
push
cmp
jae
scas
sbb
es
mov
cmp
push
int
jge
lock
jl
jo
nop
xchg
sahf
inc
dec
data16
pop
and
mov
lea
jo
inc
mov
je
out
or
jg
adc
adc
adc
arpl
mov
xor
jo
enter
out
dec
in
cmp
push
add
scas
sbb
xchg
or
fcoms
shll
xor
lock
cmpb
ss
dec
mov
jle
ret
sub
and
xchg
jg
inc
movsb
es
add
or
ffree
idivl
mov
add
popa
fcoml
jge
and
xor
mov
xor
je
cmp
cmp
sub
xchg
je
in
lahf
push
sbb
inc
and
and
mov
lea
mov
into
out
scas
sub
cmp
aad
dec
test
fiaddl
mov
cmp
jne
aaa
and
dec
xchg
push
jno
mov
orb
push
aaa
mov
dec
lcall
jbe
dec
aaa
arpl
stos
fcompl
loope
jge
inc
add
add
pop
jbe
mov
pop
jo
daa
cmc
add
jb
push
lds
mov
test
pop
loopne
faddl
pop
jne
scas
in
xlat
aaa
ljmp
dec
frstor
inc
outsl
imul
iret
out
fwait
mov
pop
xchg
jg
mov
rolb
sub
cld
flds
and
clc
adc
push
jmp
inc
mov
or
or
inc
enter
jle
bound
and
mov
adc
or
lods
and
push
push
lods
out
loopne
leave
testb
jge
jmp
mov
pop
push
sar
mov
je
cli
jne
clc
sbb
nop
inc
jecxz
and
xchg
dec
add
jle
cs
xchg
lea
or
or
push
and
push
cmc
cli
or
adc
aaa
call
into
cmp
inc
adc
scas
push
cmp
inc
insl
sub
lock
mov
out
adcl
fcmovne
adc
jg
clc
movsl
jo
push
cltd
push
pushf
out
dec
mov
mov
out
mov
jp
xlat
shll
lods
mov
mov
out
add
mov
mov
inc
rcrl
push
lock
inc
aas
je
sub
adc
push
pop
mov
lahf
xchg
jnp
aad
and
in
add
push
jl
mov
loopne
cmp
sbb
and
dec
std
in
cwtl
out
hlt
pusha
inc
mov
cmp
push
inc
pushf
inc
sub
adc
hlt
mov
int3
inc
in
jl
push
stos
ret
sub
popf
fcmovb
jo
mov
inc
sub
cmc
mov
ss
fistl
push
call
jbe
or
pop
add
rcll
xor
in
sbb
xchg
xor
jb
xor
int
lock
addl
adc
in
adc
mov
sub
dec
scas
cmovp
sub
scas
xlat
filds
and
pop
icebp
imul
add
adc
xor
push
hlt
mov
fsub
push
pop
mov
xchg
jb
add
movsl
sti
scas
mov
pop
popf
fnstsw
je
adc
cmpsl
aas
scas
xor
or
lds
sub
cmp
outsl
addr16
pop
sbb
fadd
sahf
lods
or
sahf
imul
or
das
mov
ret
mov
pushf
repnz
pop
adc
mov
jmp
dec
mov
pop
push
in
cmp
push
inc
das
push
jp
jne
mov
or
movsb
hlt
insb
push
sub
je
popf
not
arpl
aas
popa
add
or
mov
cmc
xor
inc
loope
push
mov
negb
cld
mov
mov
and
xchg
imul
sub
mov
lcall
add
cld
ret
je
adc
enter
adc
jb
pusha
jp
dec
jl
pop
mov
outsl
je
sbb
loop
cmp
test
xchg
mov
xchg
ja
adc
xchg
loope
mov
or
push
jns
popf
xchg
mov
jns
push
hlt
insl
jmp
leave
int3
fiaddl
add
call
loopne
or
int3
sub
and
dec
xchg
lods
mov
lods
lods
fwait
inc
dec
push
in
sub
imul
sub
push
leave
adc
pop
mov
jno
fisubs
jle
dec
sahf
popf
aaa
push
sbb
pop
push
decb
sub
idivb
or
mov
xorl
scas
add
sub
push
jp
test
int3
es
imul
lahf
sub
mov
inc
roll
mov
push
cwtl
stos
adc
call
mov
mov
movsl
sub
and
xchg
lret
aad
std
jbe
clc
mov
inc
popf
sbb
in
aam
fsubp
fldcw
mov
lcall
gs
mov
push
bound
mulb
in
xchg
jmp
xchg
add
ret
jl
sbb
leave
leave
jb
jae
sub
out
push
sub
rolb
mov
int3
and
jecxz
or
aas
int3
jecxz
sbbl
cmp
adc
cmc
sbb
adc
mov
xchg
out
rcr
mov
push
dec
mov
cld
cli
and
enter
lods
cmpsb
cmpsb
pop
mov
push
frstor
xor
aas
mov
iret
ja
movb
fsqrt
push
xchg
adc
xchg
jecxz
or
or
cmp
ds
int
sbb
fbld
das
push
adc
pop
sub
or
dec
cmp
cwtl
outsb
cmp
stos
shlb
mov
insb
insl
xchg
dec
enter
out
cmovno
inc
imul
ja
in
repnz
push
adc
pop
xchg
cld
xor
jl
stos
jg
adc
sbb
cmpsl
mov
mov
inc
push
lock
loope
pop
out
or
jnp
dec
add
aad
pop
xchg
lret
add
jl
outsb
aaa
or
bound
nop
nop
pop
or
lret
mov
jg
sbb
push
xor
cs
mov
jo
pop
xchg
push
shl
nop
ja
push
inc
mov
mov
or
add
popa
out
and
clc
xchg
jecxz
mov
ljmp
hlt
cs
in
xchg
shll
add
es
sti
adc
jge
xor
imul
imul
rorl
in
and
sbb
pop
pop
clc
mov
fildll
dec
xchg
pop
push
adcb
pop
clc
mov
adc
imul
ror
inc
add
push
mov
pop
inc
push
jb
pop
test
add
mov
in
jnp
push
mov
jb
dec
inc
repz
fnstenv
inc
hlt
and
mov
insl
stos
jg
clc
ja
lods
mov
das
and
add
xchg
or
in
sub
sbb
sub
shlb
rolb
xchg
mov
mov
pop
shll
aad
ret
xlat
and
cmpsl
mov
pop
jbe
add
mov
adc
push
movsb
xchg
pop
push
inc
dec
insb
push
mov
add
dec
add
mov
mov
xchg
sbbb
and
ret
add
adc
mov
dec
inc
loope
out
xchg
ja
adc
dec
lods
sbb
adc
and
repnz
mov
pop
mov
gs
sahf
sahf
outsl
add
add
pop
jle
pop
inc
sub
addb
js
movsb
in
test
add
push
cmpsl
add
out
movsl
fwait
daa
out
xchg
clc
stc
and
dec
aad
mov
jp
lcall
push
xchg
js
mov
xchg
test
in
adc
lds
fbstp
mov
out
xchg
sub
in
or
mov
pop
mov
addb
clc
stos
jns
dec
xor
xor
out
xchg
loope
dec
pop
js
ds
daa
push
lahf
xchg
jb
out
pop
inc
push
push
xor
repnz
mov
and
aas
test
sub
pop
ja
jo
sbb
mov
cmp
mov
pop
rep
mov
fs
cmp
push
clc
js
insb
das
dec
or
jle
add
inc
sbb
bound
push
mov
mov
jne
pop
js
imul
jne
cmpsb
gs
clc
mov
xchg
and
jo
mov
enter
pop
pop
sbb
rcll
adc
stc
es
jae
paddusw
sbb
xorl
xor
mov
test
jb
scas
xchg
adc
cmpsb
fs
fidivs
mov
repz
das
test
xor
leave
daa
cmpsb
adc
or
pushf
or
test
adc
xor
push
mov
xchg
std
push
stc
sub
std
xchg
aad
push
sbb
cmpb
mov
bound
js
mov
pop
push
push
hlt
stos
or
fcomi
xchg
bound
pop
mov
pop
dec
cmpsb
sti
or
ss
ror
cmpsl
push
das
sahf
xor
inc
imul
mov
xchg
mov
insl
jp
mov
mov
and
aam
adc
cmp
inc
pusha
dec
jle
test
adc
and
call
stos
xor
push
sbb
not
cmc
ss
xchg
dec
aas
aaa
into
mov
dec
xlat
push
loope
cmp
rcrl
rcl
in
xchg
mov
out
imul
std
hlt
shrl
in
pusha
add
mov
insl
mov
daa
sub
jno
pushf
int
stos
push
xor
pusha
or
pop
xor
adc
out
repz
aam
inc
add
out
dec
icebp
pop
pop
sub
push
push
daa
fs
xchg
lret
out
out
sbb
xor
cmp
jecxz
test
call
dec
popa
call
jbe
incb
inc
or
pop
loopne
rolb
imul
push
xlat
sub
repz
pop
add
cmp
inc
pusha
outsl
push
pop
and
adc
fisubrl
add
clc
divb
stos
sub
call
mov
inc
out
xor
and
test
cmp
mov
xor
out
jae
ljmp
cmp
cmc
push
xor
adcb
in
int3
lods
scas
dec
adc
addb
push
movb
jp
add
out
js
jno
insl
addr16
inc
xor
push
mov
decb
icebp
xor
and
xor
pop
loope
jns
cmc
jge
rorb
and
or
dec
in
jne
repnz
sbb
fnstenv
mov
in
je
push
pusha
sahf
clc
add
test
gs
cmpsb
mov
fisubs
adc
inc
mov
int3
cmc
jge
sub
repnz
jb
shrl
fnstsw
mov
int3
inc
loop
mov
flds
clc
add
mov
push
sub
sti
and
aas
jne
push
pusha
jae
inc
sub
movsb
fadd
push
mov
divb
adc
xor
dec
rolb
repnz
popa
push
lods
dec
cmpsb
push
mov
inc
cwtl
mov
clc
pop
shrb
inc
les
call
adc
adc
test
push
pop
ss
mov
paddsb
imul
xchg
push
out
push
push
popf
call
test
hlt
push
int3
mov
pop
jmp
ss
mov
addr16
xchg
add
jns
imulb
out
sub
jne
mov
ret
scas
mov
and
loope
int3
mov
sbb
jecxz
repz
loop
cmpsb
loopne
lret
fsub
mov
pop
lods
dec
shlb
push
mov
or
inc
fldt
pushf
jbe
in
ja
ja
lahf
xor
pop
mov
xor
and
data16
cmp
shrb
push
jnp
dec
into
fdivl
out
push
mov
mov
test
stc
push
mov
cs
xchg
xor
or
mov
arpl
sbb
fwait
push
mov
adc
int3
in
bound
mov
ret
inc
nop
cmp
push
lods
fcoml
pop
jnp
enter
pop
mov
ret
mov
cmpsb
push
popa
lret
outsl
bound
andl
sti
push
jb
aas
adc
or
xchg
xor
aaa
ljmp
or
mov
jo
and
xor
mov
xor
fwait
sti
inc
pop
cs
xchg
test
jnp
mov
dec
test
sub
ret
insl
in
xchg
lret
je
ficoms
cwtl
jl
imul
ror
jne
ljmp
out
movsb
stos
xchg
dec
mov
js
xor
mov
aaa
pop
fldt
test
sbb
in
insb
stos
mov
sub
pop
push
mov
mov
movsb
shll
outsb
stc
fsts
dec
je
push
int
pop
js
ret
xchg
scas
imul
cmp
jecxz
push
scas
roll
fsubp
iret
mov
jnp
cmp
repz
scas
inc
into
test
cwtl
jne
cmc
decb
adc
sub
jmp
sbb
loopne
add
lcall
pop
das
fldl
insl
int
xchg
hlt
ss
loope
or
es
movsl
push
lret
mov
push
divb
pop
mov
mov
xchg
aad
rclb
dec
scas
ljmp
outsb
and
jmp
push
dec
mov
nop
addr16
test
dec
stc
inc
test
jecxz
pop
cmc
incb
dec
mov
adc
scas
rcr
xchg
mov
xor
clc
sbb
pop
mov
idiv
sbb
shrl
jo
ja
push
cs
inc
sbb
mov
xor
jae
push
add
cmpb
out
adc
pop
add
fwait
cmp
adc
test
icebp
mov
mov
lcall
or
xchg
mov
shll
mov
or
lahf
in
cmp
cwtl
add
xor
jge
fwait
push
fidivrs
cmpsl
cld
mov
xchg
pop
dec
mov
test
aaa
xor
inc
push
testl
add
dec
dec
dec
sahf
repz
xor
subb
xor
xchg
ret
or
mov
fwait
mov
sub
popf
inc
add
mov
mov
lret
push
xor
ja
sti
xorl
lcall
adc
insl
cwtl
push
stos
push
xor
dec
call
scas
inc
repz
js
xchg
xchg
and
in
repnz
cmp
imul
sarb
push
push
dec
bound
push
fs
dec
call
inc
cli
cmc
add
sub
icebp
push
mov
addr16
mov
pushf
adc
jecxz
call
mov
add
sub
icebp
or
jmp
sarb
cwtl
fldt
jno
in
outsb
mov
lods
ja
sbbl
shl
lret
adc
lret
jb
mov
mov
dec
sub
push
int
dec
add
pop
inc
dec
jnp
arpl
lods
and
xchg
mov
movsb
mov
dec
icebp
add
clc
aam
shl
mov
js
and
call
xor
dec
fwait
dec
cmp
sub
mov
in
test
loope
jae
and
or
mov
push
jl
out
hlt
jne
iret
in
rclb
cmp
ljmp
adc
rorb
test
pushf
inc
cwtl
fcomps
sbb
out
daa
sbb
out
and
scas
lock
cwtl
inc
outsb
loop
lods
es
and
aad
dec
shlb
out
xchg
dec
or
shl
jmp
call
xchg
fucom
mov
xchg
dec
pop
ret
pop
xchg
xchg
adc
scas
xchg
les
inc
scas
arpl
mov
pop
cmp
inc
std
jl
sbbl
clc
aaa
sbb
or
stos
inc
mov
dec
test
aaa
stos
pusha
rcrb
ljmp
pop
shlb
popa
mov
cmp
pop
mov
into
xor
adc
lcall
dec
call
pop
popa
push
hlt
loopne
inc
mov
js
cmp
jge
adc
lock
sahf
ror
fscale
inc
add
adc
jl
add
lods
mov
fdivrp
out
and
repnz
push
lcall
into
pop
test
gs
adc
ret
sub
rorl
test
stos
in
and
lods
daa
clc
dec
mov
mull
xchg
add
loopne
pop
or
in
cmpsb
mov
pop
adc
add
mov
cwtl
dec
mov
ljmp
pop
cmp
xchg
mov
add
cltd
jo
nop
ja
mov
aaa
xchg
mov
test
js
push
lods
adcb
sub
in
outsb
push
mulb
stos
sub
inc
xor
adc
adc
ret
movsb
mov
and
or
aam
adc
push
stc
push
pop
lahf
add
fldcw
xchg
daa
or
clc
xor
and
sar
imul
xor
mov
sti
pop
cmpsl
xchg
movsl
push
cvtps2pd
clc
fs
cmpsl
pusha
dec
fisubrs
imul
and
jnp
test
push
mov
cltd
popf
adc
dec
xlat
rorb
mov
fstpl
sbb
sub
mov
xchg
push
lods
ja
mov
dec
in
addb
cmp
inc
or
std
adc
arpl
pop
sub
stc
lods
or
lock
mov
inc
xor
jb
aas
pop
data16
movl
inc
call
adcb
mov
in
push
sbb
mov
jns
mov
pop
add
arpl
out
icebp
pop
lock
fdivs
imul
in
sbb
pusha
xlat
dec
hlt
daa
mov
mov
inc
fwait
cltd
push
lret
fwait
or
ror
or
jg
aad
sub
es
leave
insl
cmp
jp
enter
addr16
or
mov
fcmovne
pop
jmp
mov
movsl
int
and
std
shlb
mov
jge
mov
inc
dec
lock
cmpsl
in
fiadds
shlb
mov
push
sub
pop
lock
push
out
insb
mov
addb
sub
inc
mov
lods
ja
sti
cmc
loop
pop
cmp
fldenv
push
adc
mov
mov
adc
mov
or
xchg
mov
mov
jmp
xchg
xchg
pop
jl
lcall
fcomip
inc
in
or
adc
loope
sub
inc
inc
push
stos
mov
mov
add
add
stos
cmpsb
ret
repz
xor
cmp
daa
lock
and
arpl
adc
add
cs
xor
sbb
push
adc
push
lods
xor
ss
xchg
jbe
adc
and
imul
mov
aas
jle
out
adc
adc
pop
mov
pop
push
test
dec
xchg
sub
insb
xchg
and
xor
insb
lock
sub
pop
add
mov
push
adc
outsl
adc
enter
lcall
xor
stos
out
mov
xor
sub
stos
dec
mov
or
jg
clc
or
test
fdivl
pop
movsl
adc
push
cmpsb
xchg
daa
cltd
gs
jae
ret
sarl
or
mov
xchg
shrb
and
leave
rclb
pop
xchg
dec
popa
scas
adc
aam
jle
mov
test
pop
rolb
aad
inc
xchg
xchg
imul
and
pop
sti
jmp
or
imul
in
inc
cmc
and
mov
rcrl
clc
loope
jg
dec
sub
and
inc
stc
dec
ret
jno
testb
jge
lods
loope
mov
lahf
rcl
shrb
std
rcrl
xchg
push
ret
loope
or
icebp
shlb
pop
arpl
je
in
cltd
xchg
ds
clc
mov
and
inc
jmp
int
or
jp
xchg
icebp
sub
xchg
in
addl
movsl
or
inc
pusha
inc
jns
imul
test
mov
mov
or
jg
mov
repz
data16
push
pop
les
dec
test
and
jae
adc
sti
cmc
movsb
lds
jl
iret
sub
or
je
mov
or
jge
pop
add
seta
test
xchg
call
ss
xor
iret
daa
mov
insb
dec
sub
sub
cmp
xchg
cmp
or
loop
es
scas
lcall
popf
or
pop
inc
insb
fwait
xchg
out
iret
andb
sbb
mov
lahf
mov
mov
je
cmp
sbb
cmp
jae
lcall
xor
scas
inc
jmp
loope
adc
fcompl
jl
bound
fdivrs
mov
jb
mov
adc
das
inc
xlat
les
lret
nop
cmp
bound
push
lds
outsl
push
movsb
mov
mov
add
mov
and
add
lret
cmp
or
jmp
xor
inc
insl
mov
push
cmpsl
adc
mov
lea
fisttpl
rorb
jecxz
inc
out
call
mov
mov
pop
mov
sub
and
and
dec
das
cltd
pop
dec
cmp
pop
xor
and
andl
dec
sbbb
arpl
sarb
sub
mov
pop
mov
scas
or
test
mov
sub
or
mov
popa
lods
or
or
daa
xor
xor
test
test
dec
push
cmpsb
stos
push
mov
push
mov
aaa
pop
roll
sahf
inc
cmp
pop
hlt
popf
xor
jns
mov
sub
insb
sub
movsl
mov
scas
mov
test
cmpsb
add
sub
pusha
adc
fdivl
movsl
fs
jge
les
push
xor
shll
loop
adc
inc
dec
sub
mov
jns
lret
fadds
mov
aad
jae
fcompl
mov
cmp
les
pop
inc
pop
cmp
mov
jbe
mov
sbbb
mov
mov
xor
shlb
xor
xchg
jle
xchg
inc
out
mov
rorb
xor
push
push
adc
divb
xchg
daa
outsb
and
jae
push
hlt
sahf
lods
lret
cli
push
xor
data16
aad
sbb
stos
mov
cmpsb
lds
out
outsb
and
ds
leave
push
or
cs
sarl
jae
clc
xor
cmp
rolb
sbb
out
stos
rclb
lock
shll
xchg
push
rol
je
jecxz
pop
aas
mov
sahf
pop
and
fbstp
cmpsb
pop
sahf
and
add
cltd
add
mov
push
add
cld
adc
dec
push
int3
cwtl
push
mov
dec
faddp
add
loop
outsb
sub
das
mov
decb
shrl
cmp
out
jg
pusha
lods
pop
enter
cmpsb
push
mov
cltd
lds
cld
ret
sub
sti
out
out
in
fdivp
scas
sub
jmp
mov
fs
fnstcw
xchg
shr
sub
icebp
lock
or
mov
aas
mov
and
push
or
cwtl
cmc
xchg
xorb
dec
inc
cmpsb
mov
xchg
jae
sbb
lahf
or
bound
arpl
jbe
out
add
les
adc
pop
stc
faddl
pusha
gs
aam
push
mov
mov
cmpsb
pop
jle
mov
push
jo
cmpsb
stos
jmp
dec
cli
xor
jae
repnz
dec
cmp
icebp
cwtl
jae
hlt
and
cmp
pushf
and
jns
lds
scas
inc
lret
cmpsl
push
jbe
shr
jae
push
xor
and
lods
fwait
xchg
sub
mov
cmc
pop
ret
mov
pop
cmpsl
fs
lret
sub
ss
int
iret
sub
shl
cmp
mov
push
adc
outsb
and
shl
cmp
call
pushf
adc
and
or
test
adc
mov
inc
ret
sub
sti
xor
or
fs
rcrb
cs
push
ret
add
mov
in
js
icebp
outsb
mov
sub
cwtl
push
loop
mov
popf
push
mov
adc
mov
xor
cmp
pop
sti
add
loopne
sub
jecxz
add
pop
xor
int
mov
mov
lods
add
mov
aas
push
fisttpll
pop
aad
aas
adc
lock
adc
and
mov
mov
rcr
pop
mov
aad
stos
ja
mov
notl
pop
aaa
ficoms
or
or
fcomp
adc
ret
stos
int3
mov
xor
mov
testl
or
in
loop
popf
jl
mov
nop
addl
inc
ficompl
mov
ja
aas
inc
sub
xchg
xchg
push
divb
leave
lret
inc
jo
js
push
repnz
ret
movl
jae
mov
mov
jg
adc
les
cmp
out
test
and
out
adc
mov
loope
repnz
sub
dec
movsl
add
sub
cli
xor
jne
loop
push
push
pushf
in
cmp
xchg
and
dec
in
or
into
mov
or
mull
xchg
push
les
pop
or
mov
cmp
cld
xor
or
jnp
inc
add
push
and
imul
imul
aam
and
dec
in
xchg
mov
and
shrb
push
xor
or
mov
aam
stc
add
es
pop
jmp
inc
stos
stc
gs
cmpsl
test
adc
mov
or
adc
jg
sub
and
inc
iret
add
out
cmp
in
inc
cs
lods
add
fmuls
mov
jge
pop
mov
in
lods
xchg
jns
std
shrb
jns
xchg
xchg
xchg
leave
cmp
mov
pcmpeqw
push
dec
xchg
aas
lcall
negl
decl
cltd
or
int3
rcrb
fcmovu
mov
xchg
std
stos
movsl
mov
inc
sub
fucom
mov
pop
fdivl
jnp
mov
lret
test
outsb
imul
sub
or
in
mov
inc
clc
push
sbbb
or
add
sbb
loopne
shrl
push
rcr
jmp
jl
test
add
pushf
adc
cltd
cwtl
insb
insb
loope
pop
jb
jecxz
popa
sub
fists
dec
hlt
outsl
and
push
ret
daa
cmp
movsl
rep
les
je
in
inc
xchg
outsl
pop
cltd
inc
push
stc
push
mov
xor
sub
paddusw
jge
pop
add
daa
pop
jecxz
loopne
push
and
jno
sbb
lds
rcrl
into
repnz
shrl
iret
xchg
mov
fs
rcrb
pop
cmp
push
js
out
repz
jns
je
lods
and
push
aaa
inc
rcr
test
or
loop
leave
push
shlb
jbe
out
mov
add
cmp
outsb
mov
rorl
icebp
mov
imul
mov
test
in
pop
out
sub
incb
adc
inc
out
pop
data16
ja
jne
out
xchg
pop
in
daa
jbe
in
xor
cmp
mov
jle
sbb
or
bound
mov
adc
mov
pop
fistl
pop
mov
push
rcr
inc
lods
ret
mov
bound
aas
mov
outsl
add
repnz
stc
pop
adc
mov
cli
loope
xchg
xor
lds
fs
sub
sub
mov
rclb
dec
adc
push
mov
fdivp
sub
jg
mov
adc
daa
sub
xor
es
xchg
xchg
cmp
push
add
lret
dec
dec
aaa
jns
push
add
mov
xor
or
icebp
in
adc
jnp
fstp
push
pop
pusha
test
mov
fsubrs
pop
incb
mov
int
inc
fs
jmp
sbb
xchg
push
repz
adc
sub
rorl
and
dec
cld
int3
mov
adc
int
out
scas
repnz
loop
in
add
fiaddl
mov
or
jmp
add
pop
pop
leave
dec
or
out
add
pop
fstl
mov
fbstp
lret
outsl
jmp
lds
pop
or
xorb
lock
push
pop
mov
dec
pusha
push
jl
sub
xor
inc
jo
and
pop
jge
les
dec
xchg
popa
lds
popa
push
lods
pop
les
or
pushf
in
jno
pop
lods
out
pop
jb
jmp
push
sbb
xor
cli
lock
je
cmp
stc
stos
dec
sbb
sbb
mov
mov
in
mov
pop
xchg
test
push
xor
push
ja
iret
adc
aaa
mov
jno
sti
xor
jae
cld
dec
sub
cmp
popf
push
and
add
ljmp
mov
ja
cmpsl
and
and
loope
cmc
inc
movsl
dec
cmpsb
mov
bound
adc
adc
sbb
and
clc
test
setp
add
or
in
sti
out
call
xor
lods
lcall
js
out
or
dec
rcrb
imul
inc
inc
push
cwtl
call
jbe
fdivp
repnz
and
lods
subb
pop
test
jo
sbb
cmp
xchg
aad
mov
addr16
mov
popa
mov
or
dec
aam
mov
cmp
popf
cmp
mov
adc
dec
aas
and
mov
xor
xchg
scas
cs
and
leave
stc
imul
sbb
out
fisubrl
adc
rorb
nop
mov
inc
ds
or
lea
rcr
rorb
lea
mov
ret
negb
insb
inc
enter
out
and
outsl
xor
pop
xchg
push
add
ret
mov
fisubl
mov
mov
push
jnp
adc
das
test
sbb
jmp
adc
mov
nop
pop
popf
ljmp
jl
loope
adc
lret
popl
push
sub
test
stos
iret
mov
or
test
call
data16
pop
pushf
test
addb
xchg
loopne
mov
push
in
jmp
pop
jnp
int3
pop
std
mov
lahf
cmp
ror
cli
imul
adc
pop
add
imul
popa
mov
jecxz
sub
pop
pop
xchg
pop
aas
test
lahf
rcl
lahf
jno
or
lods
pop
cmp
xadd
shll
and
je
insb
icebp
cmp
pusha
movsb
mov
mov
sbb
hlt
sub
test
adc
sbb
test
shrl
and
xchg
ljmp
in
xchg
pop
call
ffree
aad
mov
xchg
aad
ret
inc
cmp
imul
out
push
sbb
sbb
pop
cmp
push
or
dec
sub
testl
push
in
popa
xchg
in
push
sbb
pushf
sub
popa
sbb
sbb
movsl
mov
stc
push
sub
sbb
mov
pop
test
dec
sbb
dec
mov
xor
adc
and
mov
ljmp
pushf
sbb
dec
iret
jbe
sub
jmp
push
push
or
outsl
mov
push
cmpsl
pop
pop
pop
cltd
cmp
popf
sbb
loope
mov
pusha
sbb
cmp
dec
loopne
pusha
add
aas
leave
in
outsb
jp
mov
icebp
test
ljmp
mov
and
sbb
pop
loopne
pop
incl
mov
cmpsb
push
mov
popa
lcall
xor
pop
push
fstps
aaa
mov
pop
sbb
test
and
out
mov
sbb
sub
and
insl
clc
test
or
stc
and
mov
ljmp
arpl
outsl
fwait
xlat
inc
in
movsl
jae
adc
in
repz
js
mov
inc
fdivp
and
into
shlb
inc
movsl
pop
sub
scas
imul
andl
aaa
mov
in
add
or
cmpsl
xchg
sub
aaa
push
mov
outsb
scas
pop
cpuid
mov
jle
or
mov
adc
mov
sub
jge
inc
pop
div
add
cwtl
in
ds
xlat
cmp
bound
stos
in
and
mov
ss
in
and
movsb
xlat
outsb
jg
mov
pop
insb
hlt
jns
adc
addr16
push
push
bound
incb
dec
orl
imul
mov
repz
orb
ret
mov
cmpsb
jmp
fmuls
push
es
or
pop
outsl
inc
lds
out
dec
repz
out
lcall
imul
fldt
push
push
jecxz,pt
jbe
in
lods
in
mov
cmpsb
scas
or
cmp
and
shlb
pop
mov
fwait
out
pop
popa
jno
scas
or
mov
jo
shl
jl
pop
xchg
jne
sub
jns
lcall
mov
pop
test
ja
shrl
lahf
mov
mov
das
cmpsb
leave
cld
cmc
arpl
mov
out
orl
adc
jge
xchg
adc
sbb
jno
dec
cs
mov
inc
inc
dec
imul
subb
insb
imull
les
sbb
pop
idivb
sbb
outsl
sub
cmp
push
shr
fistps
negb
fsubrl
adc
xor
inc
sub
test
mov
test
hlt
jmp
insl
enter
or
jp
add
icebp
mov
iret
pop
mov
rcll
or
xor
jmp
sub
mov
arpl
sub
or
sbb
aas
jp
cmp
inc
fwait
movsb
adcb
or
pop
dec
adc
aad
inc
cli
lods
add
fsubrl
push
mov
dec
xor
cld
sti
jl
cli
ror
test
xchg
jp
inc
add
inc
mov
mov
cmp
sbb
and
cmp
sub
xchg
xlat
imul
mov
negb
pop
cmpsb
iret
sbb
bound
pop
clc
std
fldl
push
jmp
popa
pop
and
aaa
addr16
test
dec
sub
fucomp
je
cmpsl
mov
int
fstl
adc
push
jle
mov
dec
in
mov
dec
sbb
mov
rcrl
insb
sti
pop
adc
in
inc
test
xor
cmp
lret
stc
inc
mov
ret
mov
fwait
call
in
insb
adc
adc
xor
jge
xor
cmpsb
imul
cs
stc
ret
fildll
mov
lret
clc
inc
cmp
pusha
mov
or
dec
sub
stos
fisttps
das
xor
push
sbbl
out
sbb
repz
add
xchg
dec
ret
adc
loope
pushf
repnz
add
sbb
addr16
lea
jbe
fs
in
cmc
dec
push
inc
js
xrelease
dec
movsl
mov
sub
sbb
mov
mov
xchg
dec
lock
scas
xchg
mov
dec
fcomps
inc
popf
std
rorl
pushf
jg
scas
dec
cwtl
icebp
fbld
popf
dec
inc
lret
rorb
mov
mov
in
lods
inc
icebp
xchg
jmp
push
mov
pop
cmpl
mov
loopne
ret
stos
dec
test
inc
sbb
xor
outsb
pushf
mov
leave
jle
jnp
cwtl
cld
shlb
sbb
jno
clc
push
test
xor
scas
stc
scas
fdivrl
mov
sub
shll
xchg
inc
out
cmpsl
fists
mov
leave
inc
out
add
imul
mov
inc
mov
imul
and
sar
sti
xor
cltd
add
xchg
xchg
in
sbb
jp
stos
loope
dec
cs
jl
lock
sbb
or
push
push
fisubrs
sarb
pop
repz
sub
inc
fs
jge
and
out
iret
cmp
imul
fcomip
adc
cmpsl
jno
cs
sbb
cmp
addl
pop
aam
outsl
inc
lods
or
rorb
into
push
hlt
shlb
mov
sbb
repz
or
ds
inc
lret
mov
addl
gs
inc
mov
andb
call
mov
sbb
mov
sub
sbb
ficomps
dec
xchg
add
mov
dec
xchg
xor
test
fldcw
add
test
aas
dec
mov
add
fcoml
inc
test
out
adc
xchg
enter
test
mov
inc
out
nop
int3
popf
dec
cmp
xor
ds
pop
mov
pop
fcomi
inc
push
or
divl
sbb
xchg
nop
pop
pop
les
sbbl
jo
mov
inc
cmpsl
pop
inc
cmpsl
insl
dec
ja
imul
mov
xchg
movsb
push
out
ret
pop
test
scas
mov
test
cltd
lods
leave
stos
aaa
orl
loopne
arpl
scas
adc
add
outsb
jmp
dec
repz
loopne
mov
je
and
lahf
add
test
stos
adc
push
jle
push
cmp
inc
out
inc
mov
daa
fldt
imul
jle
and
pop
add
sahf
and
leave
out
testb
sbbb
inc
cmpsb
and
pop
add
sbb
jno
je
cwtl
xor
dec
cmpsl
dec
mov
xor
pop
inc
bound
insb
jo
bndldx
sub
cmp
pop
fdiv
fimull
inc
sub
mov
sbb
lods
cli
sbb
fucomip
loope
jno
xchg
pcmpgtd
dec
push
in
push
add
test
jae
js
xchg
lods
inc
rclb
test
jo
adc
stos
add
xchg
mov
dec
jne
stos
mov
aaa
imul
jae
cwtl
lods
out
fisttpl
in
pop
sbb
add
lods
pushf
jb
stc
das
idivl
jae
inc
int3
or
push
test
fsubrp
ds
cwtl
xchg
push
lea
adc
stos
mov
or
arpl
out
or
in
cmp
je
cltd
push
adc
pushl
fsts
push
call
loopne
mov
jecxz
xchg
shlb
and
outsl
insl
cmpsb
ss
jecxz
mov
xor
or
in
pop
jne
inc
faddl
mov
mov
nop
lock
out
mov
in
inc
mov
mov
push
inc
and
dec
xor
mov
movsb
pop
mov
fstl
pop
and
insb
cld
push
fs
sti
dec
jg
jo
adc
outsl
adc
fistps
xor
sub
mov
xor
fistpll
js
jb
popf
add
ret
inc
mov
popf
push
xchg
sbb
nop
sbb
jle
inc
hlt
push
ret
jl
ficoms
mov
pop
sub
je
adc
jle
jmp
mov
jb
xchg
sti
flds
test
inc
dec
hlt
fisubrl
dec
sub
adc
sbb
inc
lcall
mov
xchg
jmp
divl
fcoms
adc
stos
mov
dec
jecxz
addr16
movsl
adc
mov
outsl
push
xor
imul
enter
lds
sub
mull
and
imul
inc
mov
jns
push
ret
lcall
ss
pop
or
pop
xchg
push
jg
lods
out
xchg
lcall
cmp
int
sbb
fldenv
mov
cwtl
enter
or
enter
jne
jno
in
mov
add
lds
mov
pusha
jecxz
or
dec
incl
test
pop
daa
pop
iret
lods
test
in
inc
mov
mov
xorl
adc
adc
test
mov
and
add
adc
js
lea
fcmovne
shl
dec
mov
sub
int3
add
mov
and
xlat
test
push
ds
push
je
jbe
scas
xor
xchg
testb
mov
xchg
cmpsb
sti
int
xchg
out
sbb
mov
fstpl
mov
mov
push
mov
test
imul
jg
jp
xchg
dec
das
or
pop
aaa
add
or
xlat
pop
movsb
sub
ret
sbb
inc
fs
add
or
sarl
aaa
daa
jnp
jns
sbb
pop
jb
ret
pop
fs
mov
fcomip
stos
lret
cmpsb
test
jae
int
jp
int3
addr16
fs
jbe
jl
ja
mov
and
clc
je
nop
stos
adc
mov
and
xlat
jecxz
int
adcl
jo
sbb
enter
push
sub
dec
test
iret
int
xor
shrb
sahf
xlat
int
pop
cmp
inc
fwait
xchg
mov
pop
xor
xor
xchg
adc
push
cli
div
or
cld
call
sti
add
pop
out
movsb
idivb
rcrb
imul
jge
jl
pushf
cmc
cwtl
or
pushf
xchg
dec
je
fdivr
adc
or
pop
in
rcrl
xchg
push
mov
testl
and
out
fldl
out
iret
mov
pop
add
lock
pop
outsl
movsl
insl
stos
hlt
push
mov
pop
fcomps
fsubrs
popf
push
scas
mov
dec
cmp
inc
add
jmp
push
push
add
xor
cmp
lcall
adc
enter
jb
fwait
lock
adcl
outsl
shll
pop
cmp
cwtl
imul
loope
mov
jg
and
int
sahf
call
push
fs
xor
xchg
mov
pop
jbe
pop
outsl
sbbl
cltd
pop
movsl
jl
or
insl
dec
pop
pop
or
pop
mov
pushf
cmp
rcrb
cmp
adc
std
xchg
insl
es
push
rolb
rcll
jbe
jmp
shlb
insl
cmc
rolb
aas
xor
icebp
adc
xchg
cltd
push
fs
inc
pop
or
adc
movsl
jo
in
xor
jbe
pushf
push
popf
imul
repnz
mov
and
mov
push
arpl
push
or
scas
mov
or
shufps
push
inc
sbb
mov
dec
outsl
repnz
cli
push
sbb
jns
pushf
bound
aad
insb
rol
sbb
mov
sbb
loopne
xchg
out
xchg
es
cmp
cld
mov
sahf
in
shll
bound
rcll
je
cmp
cltd
sub
sbb
enter
xor
add
pop
push
dec
stos
cmp
hlt
and
push
jne
push
xor
adc
push
push
and
jae
arpl
lahf
dec
icebp
loope
push
adc
cmp
xchg
nop
scas
cmp
cmp
sahf
mov
das
push
decb
add
repnz
xor
or
cmp
ss
js
in
jl
jl
add
fadds
xchg
aaa
push
loope
xor
je
ds
sub
pop
stc
leave
and
in
push
push
push
mov
outsb
ss
mov
loopne
cmp
dec
lahf
fcoml
push
into
out
pop
dec
adc
pop
cli
pop
add
movsb
push
mov
pop
mov
out
xor
cmpsb
adc
insl
pop
not
sub
aam
mov
mov
cmp
fldt
cmp
loope
fimull
mov
inc
mov
jnp
scas
add
sti
mov
fisubl
dec
subb
outsb
jmp
push
add
xchg
ror
iret
lock
xchg
add
pusha
jge
popaw
jge
mov
dec
mov
fwait
push
push
mov
inc
imull
sti
sarl
cmp
aam
push
push
js
popl
mov
fdivl
xor
scas
imul
cli
jb
int
bndstx
add
lods
push
pop
call
out
or
shrb
outsl
mov
push
pusha
ja
rcr
push
pusha
mov
fcomps
fadds
icebp
inc
or
and
aad
stc
mov
mov
jge
push
enter
loopne
outsl
inc
pop
or
mov
inc
sub
int3
push
mov
jns
or
repz
shrl
stc
mov
mov
ret
jne
inc
out
mov
ret
pop
addr16
in
mov
xor
jne
xor
ret
cmc
add
cmp
pusha
sub
das
dec
loope
mov
sbb
inc
insb
cmp
fbld
in
mov
int
xchg
cmc
jae
mov
ja
dec
ljmp
imul
sti
xchg
cli
loop
cwtl
mov
add
popf
enter
lret
sub
ds
mov
arpl
jbe
lahf
scas
lahf
cmp
popf
arpl
insl
ret
cs
test
jbe
mov
out
xor
gs
fdivrl
cmp
xchg
js
jge
inc
out
or
inc
aaa
bound
and
adc
cs
mov
outsl
mov
stos
add
lods
mov
fsub
pop
ja
mov
shrl
in
cmp
jno
inc
dec
into
dec
cmpsb
push
xchg
xor
adc
add
insl
ret
mov
fdivl
jle
push
inc
jae
and
mov
cmp
call
fadd
mov
rclb
pop
xor
or
fisttps
push
inc
stc
ret
inc
call
jb
mov
outsl
movsl
test
insl
nop
mov
in
mov
jns
jp
out
test
xor
mov
or
inc
inc
pop
out
or
imul
test
sbb
inc
mov
xorb
ret
adc
into
outsb
sbb
xor
pop
or
jno
outsb
gs
in
fcoms
pop
ja
jl
sub
sub
popa
lea
cli
into
or
loop
jne
and
sub
pop
and
cmpsb
dec
jb
fstl
push
sub
ja
lret
cmpb
sub
jge
mov
sbb
sarb
aas
sub
add
jns
xor
data16
lret
adc
aad
in
xor
inc
sbb
out
js
sti
ja
sbbb
in
aas
cmp
cltd
adc
popf
mov
jp
pop
and
jo
or
in
lods
pop
dec
aad
mov
in
jmp
ljmp
int3
dec
push
shlb
les
xchg
xchg
sbb
test
pop
in
mov
sti
xchg
insl
inc
fiadds
mov
lret
mov
sub
aad
cmp
lock
divl
xor
mov
mov
cmp
insl
enter
sub
fcoml
mov
lds
mov
cmpsl
mov
aaa
inc
xchg
inc
and
icebp
and
inc
dec
outsl
ja
popf
jae
jl
or
out
adc
push
movsb
aaa
nop
push
xchg
xor
dec
cli
in
push
call
jl
imul
xchg
test
lods
xor
mov
out
sbb
imul
scas
lock
adc
cmpsb
and
mov
cli
stos
xor
bound
mov
aas
push
dec
rcl
mov
adc
mov
fistpl
sub
cmc
pop
dec
push
dec
outsb
xlat
inc
sarb
pusha
add
in
cld
in
insl
dec
push
jae
push
cli
push
jle
cmp
adc
or
dec
mov
fimull
test
sub
mov
xor
xchg
lahf
mov
sbb
and
mov
leave
dec
lret
mov
loop
loopne
stc
add
mov
xchg
adcb
ret
cmp
push
pop
aas
lea
sub
cltd
push
xchg
movsl
mov
loopne
leave
sub
aam
mov
cmp
popa
stos
add
sti
std
xor
xor
sub
in
js
lahf
cmpl
inc
mov
shlb
adc
aam
fnstcw
mov
fwait
movsb
and
jo
addl
iret
push
and
xchg
xor
push
push
xchg
clc
xchg
adc
stos
cltd
rcll
inc
into
and
out
pop
popf
xor
or
out
mov
in
mov
dec
add
xor
hlt
aad
jle
cmpsb
je
notb
int3
test
dec
dec
jno
subb
adc
mov
push
jecxz
faddl
je
rolb
mov
push
iret
inc
lock
pusha
insl
mov
movsb
clc
pop
cld
out
nop
jb
dec
pop
sub
cld
outsb
sahf
xor
bound
cmpsl
dec
jbe
daa
push
pop
sbb
ljmp
pop
jle
mov
xor
in
push
or
pop
xchg
xchg
cs
add
cmp
clc
cs
sub
std
xor
in
adc
or
cltd
rcl
and
call
js
in
insb
cltd
test
jecxz
repz
scas
cmp
cmp
cwtl
jge
mov
mov
and
negb
pop
jp
lods
pushf
data16
fidivs
adc
lret
xchg
gs
jbe
mov
bound
add
adc
xchg
mov
cmp
test
ds
mov
jbe
add
ds
and
insl
xchg
test
dec
imul
lods
lods
pop
push
cltd
mov
pop
dec
mov
mov
pop
aad
test
and
mov
test
repnz
xchg
psubsb
mov
mov
mov
xor
sbb
xor
mov
pop
mov
mov
or
leave
pop
pop
aam
dec
sarl
push
xchg
test
mov
xorl
dec
adc
aad
dec
fcoms
inc
imul
das
sub
push
push
sbb
pusha
jnp
cmp
sbb
shll
push
xor
push
insb
pushf
stos
movsl
jge
mov
push
cmp
lret
rcrl
pop
movsl
adc
out
aam
inc
adc
int
cmp
sbb
push
imul
xchg
adc
call
or
mov
jg
cs
test
mov
mov
sbb
pop
repnz
insl
cmp
mov
std
iret
in
in
ret
call
ljmp
or
sub
add
jo
mov
lcall
mov
orl
xchg
out
mov
pop
sbb
mov
imul
jge
lds
inc
iret
sbb
es
push
mov
outsl
test
int
adc
xchg
add
add
jl
addr16
je
jg
orl
jecxz
mov
inc
jno
mov
or
adc
test
mov
push
jle
dec
sub
dec
enter
cli
mov
mov
xchg
jns
movsb
cmp
sub
sub
inc
das
mov
mov
nop
push
push
inc
pop
jb
jmp
bnd
mov
pop
cltd
sub
adc
ficoml
out
push
add
push
dec
push
xor
in
add
jl
jne
repz
jp
call
aas
popf
mov
sti
rolb
dec
aas
mov
add
mov
xchg
push
mov
into
idivl
cwtl
divb
stc
mov
aad
dec
jmp
mov
mov
mov
pop
ret
pop
int
movswl
fcoms
lret
out
jb
outsl
jg
xchg
adc
daa
das
mov
jecxz
and
je
xlat
outsl
fbstp
scas
pusha
inc
xchg
ljmp
or
and
imul
xchg
outsl
es
add
lods
out
mov
call
mov
lds
imul
xor
mov
repz
sarb
mov
jae
insl
sub
stos
ds
jne
loop
add
fdivr
inc
imul
add
inc
pop
push
pusha
jmp
pop
dec
test
test
nop
pop
xchg
and
pop
and
ret
mov
loope
dec
into
addr16
test
add
orl
adc
clc
fincstp
leave
mov
jns
mov
insl
out
ret
inc
push
pop
or
lcall
jbe
mov
or
dec
push
adc
inc
pop
lock
cld
adc
push
inc
add
xchg
jns
xchg
cmp
or
lret
sbb
dec
cli
jbe
add
shl
jl
out
jp
xchg
int3
rcrl
pop
dec
repnz
ds
dec
xchg
pop
push
jle
icebp
mov
push
aas
sarl
lahf
mov
scas
call
aad
loopne
aas
adc
sarb
xlat
push
mov
cli
or
cmp
jmp
mov
sub
test
xchg
dec
inc
and
xchg
push
jmp
sub
andb
pop
shr
pop
mov
cmp
aaa
subl
pushf
cmp
stos
scas
mov
push
int3
jle
or
ljmp
sub
push
dec
jnp
inc
add
push
xchg
aaa
mov
aaa
pusha
or
ljmp
push
fistpll
sbb
stos
aam
or
jnp
sbb
ss
mov
mov
sbb
inc
xlat
xchg
out
lret
movl
or
lods
or
imul
sbb
imul
dec
or
daa
jle
cs
push
add
rcl
adc
and
in
aad
dec
xor
jae
fmull
push
arpl
pushf
adc
js
cld
dec
and
ja
dec
jnp
adc
lds
outsb
mov
pushf
inc
mov
loopne
push
fdivrs
lret
movsl
xchg
mov
insb
sbb
adc
call
aad
mov
ljmp
sti
sbb
mov
mov
xlat
push
xor
std
jb
inc
cmp
data16
in
inc
daa
xor
and
imull
cmpsl
repnz
jle
jg
mov
sbb
mov
stc
inc
xchg
cmp
leave
adc
mov
int
mov
sbb
dec
xchg
xchg
push
pop
fwait
jl
adc
shll
cmpsb
movsb
js
inc
mov
enter
fwait
and
jne
sbb
rolb
jmp
aam
insb
add
and
cmp
pop
outsl
and
sti
scas
jbe
dec
jno
jb
jne
js
out
outsb
lea
nop
sti
sahf
jo
in
mov
incb
frstor
adc
call
inc
mov
mov
mov
imul
testl
dec
fistpl
cs
fcmove
dec
jae
pop
lods
lret
bound
xor
fcoml
arpl
mov
call
icebp
les
jle
cmp
sbb
in
ljmp
jmp
je
push
rorl
or
push
sub
cmc
mov
mov
push
arpl
scas
sub
push
xor
dec
outsl
push
add
adc
jmp
mov
adc
push
adc
dec
xor
cvtpi2ps
cltd
adc
jle
push
cs
cltd
cmp
loope
inc
nop
xchg
lcall
out
push
mov
stos
clc
mov
jecxz
sbb
lahf
test
adc
loopne
leave
jmp
mov
ss
cmpsl
fmull
xor
stc
and
jl
add
in
enter
sub
lock
inc
icebp
outsl
xchg
cli
dec
es
mov
jp
cmp
test
push
int3
xor
cmpb
jge
xchg
mov
mov
xor
pop
cwtl
shrl
mov
jge
daa
pop
and
xor
iret
push
shr
movsl
xlat
mov
fst
push
nop
aas
mov
dec
test
test
int3
jge
out
inc
inc
test
or
jbe
mov
mov
divl
add
mov
xor
mov
inc
add
mov
std
mov
mov
popa
adc
jb
add
fisubrl
pop
sbb
adc
sub
in
cld
xor
aam
out
pop
out
mov
fldl
or
insb
mov
outsb
inc
stos
in
cld
mov
imul
adc
add
es
fimull
ret
dec
test
push
pop
cld
std
xor
push
out
cmc
push
loop
sbb
adc
adc
sti
test
insl
out
inc
jnp
jb
cmp
ds
aas
dec
dec
ljmp
xchg
jo
sub
ljmp
mov
push
mov
adcb
pop
and
inc
movsl
adc
addl
pop
int3
sub
stc
and
push
mov
mov
rorb
sbb
daa
push
je
fwait
dec
fisttpl
pop
icebp
in
mov
fisubs
stc
faddp
cmc
lea
jl
jecxz
adc
out
xchg
loopne
add
mov
xor
insl
jmp
push
call
and
pop
jae
cmpsb
mov
push
outsb
dec
add
jb
push
shll
or
jp
imul
cmpsl
xor
imul
jno
stos
sub
out
add
inc
add
sbb
scas
push
pop
pop
mov
lret
xlat
xor
lods
mov
repz
add
dec
dec
mov
mov
sti
pop
xchg
mov
sbb
out
add
popf
outsl
cltd
outsb
orl
mov
sbb
adc
outsb
mov
rcrl
cs
imull
cmp
rcll
or
test
xlat
push
repnz
adc
shrb
stos
out
or
mov
add
fisttps
sbb
out
addr16
inc
mov
popf
push
sub
cwtl
jle
mov
icebp
xchg
sbb
bound
sub
out
adc
adc
ret
or
lret
mov
aam
cs
dec
int3
fisubrs
inc
sbb
cmp
mov
push
push
adc
dec
pop
mov
sbb
shlb
mov
xor
les
pop
mov
test
add
ljmp
gs
pop
gs
shl
int
mov
testb
xor
cmpsl
jge
loopne
mov
add
sub
imul
in
jge
mov
andl
jecxz
andb
mov
mov
shlb
or
sarl
push
imul
cmpsb
enter
push
cmc
nop
xchg
push
jb
test
movsb
ds
adc
cmp
fnstcw
cmp
jb
push
xor
out
aaa
insl
clc
adc
mov
add
aaa
cmpsb
pop
jns
in
mov
mov
fneni(8087
stos
loopne
jae
daa
movsb
xchg
lret
adc
aam
mov
aad
in
movsb
ret
inc
cld
sub
cmp
das
fildl
push
xor
nop
add
in
inc
xor
dec
shlb
ret
xor
bound
and
jno
dec
or
fnstsw
nop
loopne
je
gs
mov
loopne
jl
adc
ljmp
add
push
cmpsl
or
inc
out
or
sbb
xor
cmpsl
mov
lahf
sub
inc
xchg
movsl
lods
aad
ret
mov
and
mov
into
mov
fs
les
cwtl
mov
movsl
rolb
push
je
out
cltd
adcb
ret
or
sbb
sahf
cmp
pop
jnp
es
adc
rclb
mov
movl
mov
rcl
not
add
les
cmpsb
push
enter
loopne
andb
xchg
mov
data16
mov
xchg
xchg
fdivl
jb
sti
push
mov
ret
dec
jne
dec
mov
ss
or
xorl
in
cmp
cmp
jns
fs
mov
push
rcrb
scas
lea
inc
cmp
or
bound
rcl
mov
or
scas
pop
data16
pop
cmc
push
scas
xchg
inc
aas
xor
aaa
inc
stos
rorb
or
push
lea
mov
inc
inc
outsl
push
movsb
enter
mov
sbb
or
stos
push
jns
mov
repz
inc
cmp
lret
cmc
pop
pop
sub
mov
push
xchg
fisubrs
xchg
fsub
mov
je
xchg
push
lret
sub
pop
sbb
mov
stos
and
stos
and
sti
cltd
outsl
loope
pushf
jo
int
xor
mov
dec
rcll
cwtl
xchg
push
push
sub
aaa
cli
mov
jle
add
int3
shr
enter
push
leave
dec
cltd
and
lods
shlb
xor
flds
inc
movsb
sbb
stos
jl
cmp
push
aam
lods
stc
pop
or
cld
adc
rcl
sarb
mov
scas
or
loope
stos
scas
sar
in
cmc
xchg
outsl
js
dec
sbb
sti
out
int3
push
mov
in
and
pop
pop
js
jns
push
sub
outsl
fdivp
sahf
cmpsb
pushf
pop
mov
sbb
shrl
gs
pop
jb
idivl
arpl
sub
xchg
push
xchg
test
stc
jl
mov
out
xor
out
insl
jg
xlat
or
addr16
or
jle
test
add
dec
mov
pop
jno
lret
imul
dec
cltd
add
xchg
sbb
out
ds
fidivrs
cltd
dec
push
pop
stos
cmovl
sbbb
xchg
popa
mov
xchg
outsb
pop
xchg
int3
jb
andl
pop
jbe
cmpsl
cmp
xor
push
fcmovnbe
xchg
ljmp
dec
push
sub
push
frstors
leave
sbb
cmp
repnz
or
out
ret
leave
or
xchg
xor
ljmp
xlat
or
sahf
push
std
jg
ds
js
loop
jmp
test
imulb
movsl
int3
cwtl
aas
shll
out
sbb
jp
sbb
outsb
xchg
jns
pusha
insb
imul
bound
std
jns
pushf
and
popa
xchg
popa
jno
mov
push
and
mov
xchg
loopne
mov
imul
mulb
lock
xchg
sub
test
icebp
sarl
loopne
lcall
cld
mov
sbb
call
int3
mov
or
xchg
hlt
movsl
inc
adc
dec
lret
cli
xchg
daa
add
test
pushf
push
inc
jle
sti
add
fwait
mov
xor
mov
inc
iret
mov
cmp
mov
adc
xor
mov
mov
daa
mov
leave
jnp
rcr
sub
and
pop
cmp
mov
push
out
ja
dec
dec
daa
jae
cmp
shlb
cwtl
mov
cmp
scas
sbb
fdivrs
push
and
ret
rcrl
mov
mov
pop
aam
aaa
stos
xor
cld
adc
pusha
cmp
push
outsl
lock
sahf
leave
pop
push
mov
out
or
leave
jae
shll
push
push
push
repz
sub
gs
stos
outsb
aam
out
pop
or
daa
jno
mov
ret
jp
xchg
mov
add
inc
mov
clc
pop
fimuls
mov
add
xlat
icebp
push
pusha
sahf
jg
cli
rcr
je
ljmp
ret
add
mov
add
push
mov
xor
cmp
arpl
or
aad
pusha
lret
mov
decl
mov
loop
and
or
sahf
pusha
sub
roll
cmpsb
push
sub
push
mov
lcall
push
pop
lea
rolb
mov
sbb
lret
dec
fldlg2
ss
cmp
cmp
jns
or
pop
jno
inc
aas
and
jge
inc
pop
cmp
xor
jae
lret
mov
cmp
push
mov
xchg
stos
int
cs
cwtl
adc
and
jo
test
sbb
adc
adc
xchg
mov
scas
jo
xchg
dec
cmp
push
mov
pop
repz
sub
cmp
add
into
pop
mov
stos
push
out
addr16
sahf
mov
pop
cmpsl
out
jne
push
ljmp
lods
cmp
jb
sub
jle
cmc
push
mov
inc
bound
icebp
sub
push
test
rcpps
lret
dec
adc
add
mov
addr16
mov
out
fwait
rcll
test
out
or
pop
ljmp
lret
icebp
cltd
ljmp
outsb
and
fsubs
pop
sub
jb
imul
cwtl
neg
xchg
xchg
inc
jmp
inc
xor
jne
mov
push
and
or
es
pop
data16
cwtl
nop
sbb
mov
fnstcw
enter
mov
fwait
mov
les
lea
sbb
imul
pop
jle
mov
jno
dec
xchg
mov
pop
cmp
jb
std
mov
loope
lock
outsl
ret
out
ljmp
aas
addr16
lahf
dec
xchg
pop
mov
int3
cmp
jecxz
push
fsubrs
popa
popa
ret
mov
mov
insb
stos
shlb
data16
jnp
scas
loopne
outsb
fstps
pop
icebp
adc
xor
jmp
ret
sub
jbe
cmpsl
jne
aam
add
add
es
enter
sub
or
hlt
and
aam
adc
inc
mov
add
push
adc
sbb
mov
ret
inc
loopne
mov
imul
sbb
cmc
cmp
adc
icebp
sub
xchg
aaa
inc
jle
jl
add
cwtl
inc
push
lret
ret
xchg
lret
sub
xchg
jg
jl
or
lret
pop
ret
cmpsb
cmpl
fiadds
mov
fisttpll
xchg
jne
stos
mov
dec
xor
pop
and
js
sbb
xor
repz
hlt
mov
outsb
lahf
movsl
rolb
popf
inc
aam
lea
test
sub
pop
out
test
cmp
pop
dec
fmuls
sub
mov
leave
clc
shlb
sub
sub
jae
cmp
in
xchg
test
inc
pushf
pop
jno
mov
sub
aaa
test
add
std
dec
fcomps
cmp
dec
fs
cmpsl
outsl
dec
or
xor
insl
mov
stc
int3
xor
rorl
or
cmp
mov
ss
sub
add
fistpl
inc
push
pop
repz
mov
xchg
or
bnd
mov
and
xchg
loope
addr16
mov
aaa
in
cwtl
stc
xchg
mov
repz
sub
repnz
lret
push
mov
jo
mov
stc
lods
xor
xor
cmc
ds
pop
fisubrl
inc
lahf
arpl
aad
sub
je
pop
mov
aas
cmpsb
mov
fwait
xor
out
xchg
mov
ficoml
cmp
jnp
or
sub
aas
pop
hlt
dec
mov
addr16
mov
fisubrl
mov
ljmp
stos
jl
push
xchg
sbb
out
push
pop
push
xor
push
inc
insl
mov
imul
cmp
jle
xchg
dec
js
cmc
rorl
mov
inc
mov
jo
xchg
shlb
in
or
mov
xor
popf
imul
add
sbb
fstl
addr16
out
mov
int3
jl
lret
dec
jg
jecxz
lret
mov
imul
jmp
out
lds
cmp
or
jae
fucomi
lock
dec
and
lds
loope
push
push
jbe
mov
in
sbb
movsb
inc
sahf
or
in
sub
jne
cmp
dec
movsb
loope
aam
out
jne
push
aad
stos
pop
sub
mov
mov
ljmp
insl
stc
mov
cs
push
mov
test
ljmp
pop
pop
inc
xchg
xlat
xor
lcall
cwtl
pop
cmp
jge
imul
cmp
xchg
xchg
cmpsb
loop
bound
cld
jl
fimuls
jae
mov
xchg
add
js
xor
inc
or
ljmp
rorb
mov
rcr
mov
sub
ljmp
mov
xchg
jge
jnp
mov
xchg
hlt
leave
clc
mov
mov
test
popf
scas
or
mov
in
mov
push
test
xlat
fsubrl
idiv
or
mov
jmp
and
outsl
xor
arpl
call
movsl
stc
jmp
test
ret
cli
es
xor
pop
icebp
rcll
pop
arpl
test
fdivrs
in
adc
or
shll
dec
and
pop
inc
add
xchg
add
ror
xor
aas
enter
ljmp
iret
push
mov
inc
loope
rorb
mov
xor
fists
stos
xchg
icebp
addl
pop
cmpb
movsl
enterw
add
data16
iret
jne
cmp
aad
and
negb
or
pop
and
fwait
shlb
pop
data16
imull
aas
imulb
xor
pop
sarb
gs
lret
sbb
pop
jo
jl
mov
sarl
insb
ljmp
or
pusha
dec
sti
jo
aas
mov
or
mov
or
test
mov
push
push
arpl
leave
add
ret
sub
data16
or
push
push
pop
jge,pn
loope
sub
test
inc
and
cmp
insb
sbb
cmpb
cmp
sbb
push
mov
aas
call
sbb
rolb
or
in
mov
stos
call
adc
xor
adc
xchg
xchg
testl
pop
lcall
dec
aad
call
or
div
or
cmpl
xchg
mov
sub
sti
fisttps
insb
les
insb
sahf
cmp
mov
cltd
pop
pop
test
cmp
cmpl
push
aas
xor
mov
fidivrs
addr16
cli
xchg
call
push
and
lock
mov
arpl
gs
push
xchg
mov
lods
shrb
lods
and
cmp
and
sub
fidivrs
cltd
and
mov
mov
fstl
test
loope
push
jbe
jg
or
sub
push
adc
jl
xor
cwtl
stos
inc
int
test
hlt
setb
lcall
test
dec
push
mov
push
cmc
adc
dec
cld
mov
sbbb
fisubl
jae
outsb
adc
rcr
inc
mov
or
and
inc
aam
sub
pop
cld
cmp
ja
mov
or
dec
jg
fidivrl
cmpsb
pop
xchg
or
loope
lret
pop
adc
jnp
pop
inc
xchg
je
leave
ja
cli
mov
repz
sbbl
ret
xchg
mov
negl
push
cmpsl
adc
lahf
and
mov
out
test
stos
inc
fsub
dec
int
mov
fsub
leave
addl
pop
inc
cmp
inc
xor
int
pop
add
jmp
lahf
cmp
fiaddl
movsb
arpl
aaa
gs
mov
dec
mov
iret
add
ficompl
aad
repz
cmp
sbb
jmp
jo
cmpsl
lret
mov
xorl
mov
popf
iret
pop
or
fsubrs
lea
sar
clc
insb
mov
cmpsl
inc
in
jb
mov
lret
std
gs
dec
out
aas
in
es
das
cmp
mov
cmp
mov
sti
mov
push
jmp
xor
fstps
mov
fldcw
inc
in
icebp
cmpb
inc
lahf
loop
jg
iret
ficoml
xchg
cmc
xorb
movl
cmpb
pop
xchg
inc
mov
push
adc
cmp
pop
int
out
adc
mov
outsb
mov
jg
aaa
arpl
int
sub
inc
add
mov
test
jg
push
hlt
es
out
int
rol
sbb
out
stc
sbb
mov
scas
out
sbb
jbe
aam
or
xor
pusha
lods
xor
sbb
add
and
adc
xchg
dec
jo
aas
and
mov
test
xlat
cmp
sarl
aaa
loope,pt
test
dec
aaa
xchg
jle
stos
cltd
push
and
jge
cmc
ljmp
mov
mov
inc
pop
ret
xor
in
test
insl
mov
arpl
adc
int
mov
and
in
repz
lret
int
add
cltd
mov
mov
xchg
fisubs
fdivs
je
lret
incb
add
es
sbb
fisttps
ljmp
xor
cmp
jmp
shrb
jge
fmuls
sbb
sahf
das
fdivrs
jg
bnd
cmpsb
jmp
cli
push
sbb
cwtl
mov
adc
push
lcall
shl
adc
mov
ret
add
mov
push
in
xor
push
mov
push
ficompl
sub
repz
sbb
push
inc
aam
std
xlat
imul
icebp
out
and
sbb
orl
sbb
mov
insb
ret
shl
in
fsub
pop
jae
repz
sbb
and
mov
cli
push
add
clc
mov
les
mov
and
decl
lods
lock
imul
xchg
leave
cmpsb
jmp
mov
jg
jne
xor
loope
rcrb
mov
push
add
mov
adc
inc
cltd
into
sub
mov
dec
adc
pop
xchg
in
shll
test
sub
cmpsl
inc
adc
push
dec
outsl
addr16
mov
adc
dec
out
test
and
mov
fistl
pop
cld
rcrl
sbb
aas
mov
mov
ret
rclb
dec
inc
xchg
xchg
jb
mov
in
xlat
push
out
movsb
mov
out
dec
push
mov
outsl
push
shrl
std
scas
mov
pop
xchg
pop
xor
inc
mov
mov
cmp
sub
adc
or
sahf
xchg
dec
stos
mov
push
cmp
loop
lea
sahf
cmp
jo
mov
jp
repz
sahf
xchg
jnp
movsl
push
scas
popf
push
js
test
int3
jbe
pop
roll
mov
add
ss
xchg
js
sahf
xchg
js
mov
leave
jp
pop
call
lret
jg
sbb
fistpl
lods
pop
sub
cmp
mov
pop
pop
outsl
adc
push
enter
lahf
outsb
clc
lcall
pop
xchg
into
jge
dec
rclb
loopne
jmp
lret
inc
xchg
adc
fmull
ss
sbb
push
outsl
test
insl
popf
adc
fimuls
sarl
push
mov
int3
imul
sbb
adc
jo
or
mov
leave
jle
and
addr16
mov
leave
or
adc
lds
push
shl
loop
out
repz
push
add
mov
out
loope
xor
sub
cmc
cmp
lea
bound
add
outsb
mov
inc
cmp
push
push
xor
arpl
mov
out
add
daa
iret
test
push
rcrl
pop
aas
mov
or
cmp
repz
dec
aam
nop
enter
mov
stos
inc
insl
int
movsl
into
stos
call
lock
jl
add
pop
clc
jmp
dec
xor
mov
mov
fs
sbb
mov
sbb
icebp
xor
enter
loope
jle
mov
mov
add
pusha
sti
pop
sub
stos
xor
cmp
adc
push
pop
das
imul
mov
sbbl
xchg
mov
ljmp
inc
insl
cmpsb
and
aad
ljmp
or
mov
sbb
push
or
data16
push
dec
fs
or
and
jmp
imul
out
jbe
cs
adc
repnz
add
pop
cmp
mov
cmp
into
jl
test
mov
lea
stos
cmc
xor
roll
pop
sub
adcb
cmp
mov
inc
loope
es
pop
or
push
pusha
jp
push
addr16
es
addl
cld
mov
push
insl
or
pop
xor
leave
mul
mov
dec
in
aas
jle
aas
pushf
sbb
arpl
add
pop
stos
adc
gs
loopne
cmp
fistl
inc
dec
out
push
addr16
xor
fmull
cld
mov
test
stc
mov
leave
stos
nop
inc
jne
imul
pop
stc
and
inc
sbb
sub
shlb
mov
dec
mov
cmp
jge
dec
cmp
sbbb
mov
sub
pop
push
add
push
test
cmpl
out
iret
and
enter
sub
jne
gs
cmpl
je
sub
push
adc
inc
aaa
add
mov
add
pop
xchg
in
call
int
add
mov
sarb
sub
cld
popf
and
sti
jo
arpl
and
xchg
inc
jnp
push
gs
outsl
cwtl
loopne
loopne
dec
outsb
xor
sub
imul
inc
or
ss
repnz
shlb
hlt
fiadds
push
daa
or
inc
or
xchg
xchg
out
nop
sbb
and
imul
outsl
iret
push
fstpl
adc
cmpsb
cmp
mov
ficompl
mov
int
nop
mov
inc
mov
sbb
je
xchg
pop
loop
push
ljmp
addr16
cmp
mov
add
aam
insl
testl
xchg
dec
push
lods
jb
jl
pop
mov
rcrb
pop
arpl
dec
call
lea
cmpsb
fmuls
decl
cs
js
pop
arpl
stc
jne
push
pop
andl
sub
pop
notl
cmpsb
test
lret
cli
sbb
sar
cmp
cmpps
aam
or
pop
imul
out
add
jp
pop
jo
popf
cmp
cwtl
xor
dec
and
inc
mov
lea
stos
mov
sub
test
enter
and
mov
scas
loope
pusha
mov
enter
mov
sub
pusha
push
mov
push
cli
sbb
xor
jp
jb
in
inc
je
sbb
or
cmpsb
push
or
repz
adcl
out
mov
adc
enter
jg
pop
adc
in
arpl
push
mov
mov
inc
jo
and
rol
adc
imulb
cmp
sub
add
inc
and
pop
sbb
pop
sbb
jno
add
je
jge
adc
in
mov
rol
test
cmc
mov
pop
jno
add
out
scas
xlat
mov
movsl
inc
pop
mov
movsl
push
or
into
and
mov
and
add
sbb
ja
jge
lds
sbb
sbb
mov
or
leave
std
test
insl
in
test
dec
sti
mov
pandn
pop
cld
and
adc
fwait
addr16
jb
inc
or
push
or
inc
lock
int3
mov
add
jp
xchg
mov
mov
jle
fucomi
xchg
mov
insl
pop
add
sub
mov
icebp
add
adc
cmpsb
push
inc
push
cmpb
outsb
mov
mov
and
mov
lcall
pop
insl
out
fsubl
adc
jnp
jno
fstps
addl
sti
cmp
inc
jmp
xor
std
daa
out
or
add
push
sbb
pop
in
cld
mov
pop
push
adc
xchg
dec
lock
inc
addb
pop
bound
mov
flds
xchg
aaa
jnp
jecxz
inc
push
cmc
dec
ljmp
sub
adc
pusha
inc
mov
inc
dec
xchg
adc
push
sub
mov
aas
pop
out
dec
dec
test
cs
adc
aas
repnz
mov
fcomip
dec
jbe
dec
repnz
cmp
xchg
jecxz
js
jp
mov
add
push
out
xchg
cmpsb
lahf
aaa
xchg
stos
xchg
mov
mov
nop
push
sub
cmp
sahf
pop
mov
add
lret
ds
pop
sbb
aaa
adc
popa
sbb
mov
fstps
pop
lods
and
inc
xor
fidivrs
inc
addr16
pop
filds
jmp
mov
mov
sub
sub
shrl
jmp
push
cltd
push
cmp
pushf
jb
push
push
pop
jmp
stos
rcr
add
push
arpl
test
in
lock
loope
add
cli
fdivrs
sbb
out
aas
cmp
enter
mov
cmpsl
xchg
movsl
lods
sbb
lock
iret
pop
shlb
and
loopne
jbe
sub
xchg
push
imul
scas
sub
lcall
and
je
andl
shl
xor
test
test
lret
repz
rcr
loopne,pn
cmpsb
insb
pop
insl
sub
jno
aaa
or
add
pop
sahf
push
stos
outsl
sbb
mov
pop
testl
mov
mov
iret
inc
in
xchg
lods
scas
adc
test
jnp
aaa
ret
mov
mov
xor
jae
xlat
mov
shr
jmp
fsubl
and
test
or
cmp
cvtps2pd
fs
pusha
mov
xchg
insl
aam
mov
ljmp
mov
inc
or
jno
add
cld
add
push
xor
mov
fstpt
out
sbb
dec
fsubrp
lock
sbb
push
jmp
or
fisubrl
push
xor
leave
jbe
or
mov
jcxz
mov
mov
inc
pop
cmpsl
nop
ja
cmp
or
jp
addps
fnsave
sbb
test
loop
out
jb
mov
out
mov
xor
mov
dec
ljmp
into
or
aas
sub
inc
jle
lret
xchg
cmc
aas
lahf
xor
sar
aaa
sahf
aaa
test
pop
inc
and
pop
outsb
mov
pop
mov
mov
scas
lods
jae
mov
enter
xchg
loop
or
cltd
roll
sub
xor
adc
sbb
or
lret
add
lret
xor
lods
idiv
pushf
sub
enter
inc
inc
fistps
adc
mov
lcall
xchg
xor
sub
or
push
loopne
jne
leave
mov
push
loopne
pop
es
out
pusha
mov
call
dec
aam
mov
ret
sub
stos
mov
xor
addr16
mov
mov
add
int
jmp
cmpsl
fldcw
sbb
mov
lds
sbb
aam
xor
inc
xchg
rolb
cmpsl
inc
push
shlb
inc
mov
ds
orb
add
hlt
lds
xchg
jae
cwtl
cmp
jbe
jno
pop
cli
pushf
decb
out
dec
cmp
dec
repz
pusha
and
cmpl
loope
shll
testl
jle
cmpsb
sti
xchg
out
mov
popa
add
faddl
dec
mov
mov
add
fidivrl
popf
pushf
mov
pop
mov
daa
out
clc
ja
pop
cmp
out
insl
mov
push
xchg
insb
mov
jl
mov
movsb
cltd
aaa
dec
and
inc
sahf
mov
push
pop
add
dec
dec
add
lds
cmp
pop
mov
jge
mov
dec
out
inc
test
addl
test
mov
jp
les
pmulhuw
push
movsl
ljmp
in
cmpsb
ja
gs
insb
sbb
outsb
mov
push
popf
push
ss
add
mov
into
rorl
cmp
add
pop
xor
or
cmpsb
xchg
cmp
jg
add
lock
xor
es
int3
in
scas
test
out
mov
sub
xor
mov
push
mov
ret
sahf
xchg
jmp
pop
and
jecxz
push
xchg
jmp
ret
pop
xchg
repz
sub
mov
cmp
push
dec
std
adc
and
testl
dec
or
repz
js
or
add
push
pusha
cwtl
es
jmp
xor
and
push
pusha
pop
je
jns
push
xor
lds
mov
pop
in
xor
fdiv
cmp
and
cld
xlat
popa
jb
and
nop
inc
in
bound
ja
pop
adcl
mov
sbb
dec
push
sub
shr
call
notb
out
out
iret
xlat
mov
dec
bound
push
add
mov
add
and
and
sub
ror
or
inc
lret
cmpsl
mov
pop
adc
test
stc
adc
addr16
mov
data16
xor
aas
xchg
pop
in
icebp
orb
mov
adc
dec
dec
cmpsl
int
arpl
ret
inc
and
mov
repnz
out
dec
add
stos
ret
int3
daa
sbbb
fldt
nop
push
movl
in
movl
fnstcw
cltd
inc
xchg
out
inc
push
mov
or
push
mov
sti
fldl
repnz
jae
fisttpll
shl
mov
jle
popf
mov
push
imulb
dec
add
js
xor
sbb
stos
add
aad
mov
pushf
loopne
scas
cmp
out
mov
lahf
inc
test
in
jge
xbegin
xchg
sti
div
icebp
dec
inc
mov
add
arpl
add
repz
mov
loop
push
mov
test
push
clc
and
jo
or
and
lods
cld
mov
xchg
fidivrl
jl
xorl
push
pop
xor
xor
jb
mov
cmp
jl
mov
or
add
sub
clc
jae
add
mov
pop
adc
mov
push
xor
xchg
jle
cmpsb
icebp
rcr
add
js
addr16
jl
cld
out
sbb
and
sbb
xchg
or
adc
int
jo
pusha
test
js
add
mov
xor
pop
xlat
subb
sarl
dec
test
xchg
mov
out
pop
xor
adc
mov
dec
outsb
fwait
lahf
movsl
push
mov
mov
or
lahf
inc
sbb
aaa
movsb
pushf
ds
dec
nop
inc
push
aam
mov
pushf
mov
add
pusha
jb
sti
es
jns
add
std
inc
mov
jmp
sbb
dec
rdmsr
dec
sti
scas
test
mov
mov
xor
imul
fldt
fs
cmp
insl
jbe
in
and
fnsave
sub
ret
test
mov
mov
adc
fidivrl
sbb
outsb
add
adc
in
push
push
adc
xchg
adc
movsl
jmp
out
pop
adc
pop
push
push
inc
ds
add
push
push
fdivrl
shll
pop
stos
clc
in
test
xchg
call
shll
lcall
mov
mov
pop
add
arpl
jnp
scas
add
sbb
mov
xor
mov
mov
iret
sbb
pusha
inc
std
sub
ljmp
add
call
insb
dec
mov
add
inc
cmc
lods
or
testl
cmp
and
pop
sbb
sti
cmp
divl
jnp
ljmp
std
loopne
sbbl
aad
mov
lret
dec
xor
adc
shl
lods
imul
add
stos
loope
and
iret
xchg
pop
addr16
or
xchg
arpl
mov
pop
rcrl
fs
jb
cmpsb
fldl
xchg
jle
fs
pop
mov
les
add
pop
add
add
rorl
cmc
cmp
pop
dec
dec
pushf
xorl
lahf
pop
insl
scas
es
insb
push
iret
or
or
out
inc
inc
lcall
lret
sbb
clc
jae
sbb
mov
mov
inc
in
aad
push
and
jb
adcl
or
mov
push
adc
scas
inc
popa
jno
sbbb
notb
inc
out
adc
lret
xlat
lea
test
hlt
mov
imul
daa
mov
fidivl
loop
ficoml
mov
jno
jmp
test
repz
dec
sbb
pop
int
lock
je
mov
mov
xlat
inc
or
sub
jne
jo
idivl
outsl
sbb
sbb
es
jnp
cmc
push
dec
fadd
push
pusha
push
pop
pop
out
cmp
sub
je
mov
loopne
inc
mov
mov
jl
mov
cmp
js
loope
popa
cmp
inc
insl
mov
push
in
jne,pn
lds
cwtl
filds
jmp
xchg
jmp
es
repnz
ret
hlt
cmp
push
outsb
imul
cmc
sub
stos
lahf
xchg
outsb
scas
js
movsb
call
xchg
push
sbb
pop
js
hlt
xchg
mov
and
mov
enter
xor
push
xor
dec
inc
push
lods
inc
xchg
or
sub
aad
add
jle,pt
imul
sbb
or
repz
leave
test
outsl
mov
fs
cmp
cmpsl
lea
ljmp
mov
fwait
pushf
xchg
loope
int3
cs
xor
or
push
pop
xor
popf
jge
mov
in
cmpsb
jns
push
adc
popa
imul
dec
and
pop
lods
repnz
lods
aas
jmp
ljmp
cltd
sub
lret
mov
loope
add
test
xor
pop
nop
test
and
std
lcall
loopne
add
xchg
sbb
popa
sbb
push
inc
arpl
sbb
loop
xchg
push
enter
jmp
out
in
pop
stc
xchg
xlat
imul
jmp
add
push
cwtl
outsb
gs
popf
fcompl
fdivrs
sti
outsl
push
stc
mov
inc
xchg
mov
mov
stos
xchg
lcall
lods
fisubrl
loop
cwtl
jp
xrelease
js
dec
mov
iret
pop
sub
in
dec
imul
sbb
pop
lcall
fst
lock
or
mov
mov
cmp
xor
dec
dec
cmpsb
mov
out
sbb
push
shr
push
dec
cmp
dec
cmp
std
jno
or
lcall
dec
inc
push
in
adc
push
out
mov
icebp
xchg
aas
leave
ds
xchg
aaa
sbb
dec
lock
outsl
cmp
scas
xlat
inc
loopne
and
jno
lahf
mov
jl
mov
mov
xchg
fcoml
movsb
sbb
pop
adc
pop
out
and
and
gs
mov
mov
subb
lods
in
mov
jo
pusha
push
dec
cmp
scas
test
lret
sbb
jnp
pop
pop
add
sub
or
push
mov
lcall
inc
lods
cmp
mov
lcall
imul
out
mov
pop
test
repnz
outsb
push
bnd
xchg
dec
bound
scas
mov
scas
add
pop
pop
clc
pop
inc
adc
mov
lret
sbb
repnz
mov
fists
cmp
mov
xchg
push
sbb
dec
mov
mov
pop
out
dec
testl
mov
inc
sbb
push
jge
dec
jno
stos
filds
in
mov
lods
push
mov
ret
ret
mov
xchg
sbb
mov
sahf
iret
sub
adc
arpl
pop
les
xchg
in
xlat
sti
xchg
jno
sahf
mov
lcall
ret
xor
jo
popf
jge
add
imul
cld
mov
stos
pushl
pushl
imul
inc
add
xchg
add
out
adc
push
pop
int3
mov
aad
in
cli
insb
insb
add
mov
shrb
loop
xchg
sbb
test
and
in
psllq
and
shrl
mov
scas
lcall
sub
test
or
ret
mov
mov
pop
insl
push
sbb
jae
test
rol
cmp
push
cmp
insb
rol
adc
mov
or
stos
mov
das
cmp
pop
leave
inc
pop
mul
and
mov
aad
jecxz
push
jle
xchg
aas
push
push
and
pop
iret
fmuls
pop
lods
mov
xchg
push
inc
lods
sub
push
int
mov
out
rcrl
lret
add
cltd
push
ds
xchg
in
loopne
std
and
push
sbb
pop
bound
in
sbb
jnp
dec
enter
lahf
fs
lret
stos
in
sahf
daa
and
std
or
ret
and
imul
adc
sahf
mov
mov
loopne
jmp
adc
jno
cli
test
mov
pop
jmp
stos
push
add
int
cmp
dec
testb
pop
mov
jmp
mov
test
dec
or
xchg
mov
xchg
out
push
gs
cmpsb
pop
mov
mov
inc
pusha
pusha
pop
xchg
imul
sbb
mov
mov
push
shrl
pminsw
lods
and
pop
sti
fmuls
mov
mov
xlat
adc
jecxz
in
scas
testl
repz
ja
push
xor
inc
in
and
xchg
scas
test
aam
daa
or
cwtl
pop
sarb
xlat
ja
iret
shr
pop
mov
in
pop
dec
das
inc
cld
jle
ds
jle
sub
xchg
push
push
lret
inc
sub
js
push
mov
mov
pop
gs
in
lock
mov
mov
add
icebp
faddl
cmc
dec
mov
mov
in
dec
xor
test
push
inc
lea
ret
lea
clc
sub
cli
jecxz
sbbb
cli
and
xchg
orb
int
inc
lret
add
ljmp
sti
mov
sub
stos
mov
jmp
or
outsb
js
imul
mov
add
mov
insl
test
ficompl
sahf
dec
sub
ljmp
add
adc
push
push
mov
xchg
fcmovnu
cmp
lahf
or
jae
outsl
pop
es
out
mov
xchg
push
ficomps
and
andb
out
push
ret
cwtl
adc
inc
divb
aas
jae
or
popa
scas
shlb
aam
add
sub
inc
sub
lock
xor
xor
xchg
je
fisttpl
loop
minps
in
add
xor
in
or
push
cmpsb
or
in
in
data16
push
dec
ret
mov
mov
hlt
in
popf
xor
and
loopne
mov
jecxz
lea
popf
js
cmp
xchg
and
dec
out
imul
sub
push
or
xor
sbb
mov
loope
enter
js
dec
mov
xor
sub
fisubl
pop
outsl
add
sahf
sbb
dec
add
dec
es
sbb
test
pop
orb
imul
sti
adc
loope
sbbl
mov
daa
push
and
jnp
cmp
repnz
sub
adc
ds
enter
daa
xchg
test
mov
xor
addr16
push
fs
pop
lods
in
shll
inc
mov
push
inc
xor
and
push
jne
push
add
out
xchg
jno
test
and
rcll
stos
sub
loop
scas
add
mov
shrb
push
sub
pusha
jbe
popa
xor
mov
shlb
push
fildl
pop
and
pop
cmp
jmp
pop
repnz
push
andl
xchg
xchg
sahf
cmp
mov
clc
cltd
mov
pop
cmp
es
xor
cwtl
ret
stc
hlt
mov
sarb
stos
push
xor
aam
push
ret
push
cmpsl
inc
stc
test
add
mov
sub
imul
outsl
xor
sarl
add
and
ja
inc
push
fdivl
xchg
pop
and
mov
imul
dec
mov
xadd
fidivs
iret
push
xchg
jecxz
lret
stos
sub
sbb
out
or
and
lock
lods
loope
sbb
pop
cmpsb
mov
pop
in
mov
inc
js
push
push
xchg
cwtl
pop
imul
push
aas
ljmp
sbb
in
push
sbb
pop
movsl
adc
lcall
inc
and
arpl
fisubl
aad
xlat
stc
movsl
lret
leave
dec
mov
leave
dec
addr16
pop
pop
icebp
movsb
lods
repz
fbld
test
jnp
test
add
xchg
dec
inc
sbb
xor
xor
out
roll
lahf
xlat
adc
pop
stos
sbb
mov
aaa
filds
adc
aam
addr16
ljmp
sbb
popf
scas
mov
dec
out
cmp
mov
mov
or
xchg
mov
pop
das
push
push
xor
fcoms
test
notl
inc
test
das
mov
inc
hlt
lret
jbe
loopne
push
push
mov
aad
sti
mov
adc
jp
lahf
cmp
mov
or
push
push
test
sub
fnstsw
dec
pop
mov
fs
mov
out
decb
dec
fwait
out
xor
pop
cmp
lret
popa
adc
dec
insb
outsl
leave
xlat
xchg
pop
pop
insb
mov
sub
adc
mov
or
movsb
movsb
outsl
inc
lret
cmp
fldt
sbb
mov
sahf
ja
pop
into
gs
push
aad
jg
adc
stos
lret
lcall
loope
in
jo
mov
jle
hlt
call
arpl
jg
cmp
xchg
or
push
scas
out
out
inc
fbstp
inc
mov
mull
or
inc
sbb
sub
lea
cmp
int
mov
outsb
mov
cld
jne
in
xor
mov
pop
push
ja
jae
mov
cs
add
stos
and
in
push
and
push
jmp
adc
mov
imul
repz
fimuls
movb
call
xchg
inc
mov
inc
test
fsts
mov
mov
or
std
lahf
xor
dec
sbb
fwait
sbb
pop
incl
fdivrl
push
loope
mov
cs
popf
cmp
inc
daa
add
mov
rcll
cmp
jp
sbb
jecxz
jle
fisubrs
push
jnp
enter
xchg
das
mov
push
in
out
mov
iret
hlt
scas
rcl
mov
hlt
fsubrp
shr
fstp
je
les
ret
outsb
imul
jge
xsha256
cmpsb
xlat
mov
les
sub
dec
hlt
inc
inc
cmp
push
mov
dec
notb
add
das
xchg
lcall
ja
adc
mov
mov
cltd
push
inc
or
sub
xor
mov
out
cmp
adc
xchg
fistpl
aaa
mov
idivl
pop
shrb
outsb
data16
rclb
ret
mov
mov
out
pop
push
les
dec
fsubrp
push
pop
sub
mov
push
in
inc
js
in
jno
not
pusha
sbb
pop
stos
icebp
push
mov
stos
into
fmull
dec
add
outsl
test
pop
shlb
xchg
lret
add
xchg
fwait
stos
add
bound
stos
lahf
push
cltd
loope
std
outsl
dec
sbb
xchg
jne
stc
and
inc
or
call
loopne
push
jbe
pop
xchg
inc
push
mov
cmc
xor
push
sbb
dec
call
xchg
xor
fldenv
cld
roll
std
sbb
mov
sub
push
cli
or
mov
or
hlt
lods
and
aas
xor
mov
or
adc
loope
pop
mov
test
clc
dec
push
sub
push
fstps
std
push
repnz
je
and
ffree
jbe
jge
lcall
fucom
jns
adc
sbb
mov
leave
sbb
inc
xchg
pop
push
or
and
shlb
xor
sub
ret
jnp
xor
in
inc
sbb
cmp
std
icebp
jbe
lods
jg,pn
fwait
es
and
fimull
mov
adc
and
push
add
not
sbb
out
popl
int
aas
lds
jmp
pop
pusha
mov
inc
popa
int3
out
and
cmc
inc
dec
mov
mov
jp
sbb
daa
jp
sub
idivb
adc
call
fwait
and
test
mov
mov
stc
das
aad
stos
lea
aam
cltd
pop
lahf
dec
fdivrl
loope
sbb
mov
stc
clc
addb
lcall
xor
lea
stos
cmp
mov
outsb
and
lahf
scas
sti
aam
aas
jo
out
add
das
and
ss
add
adc
loopne
scas
movsl
mov
lds
add
stc
or
lcall
sub
mov
pusha
push
loop
jle
data16
mov
imul
dec
loope
cwtl
or
push
cld
in
sub
aad
or
call
xchg
cmpb
add
dec
fsubrs
cmpsb
leave
and
cld
sub
cmp
dec
xchg
sub
cli
dec
test
mov
dec
out
dec
sti
mov
xchg
pop
jns
mov
jmp
and
ror
dec
xor
rcll
pushf
pop
sbb
pop
ret
and
roll
leave
dec
cmp
fdivs
test
sbb
push
js
insl
sahf
or
mov
xor
jae
or
lcall
mov
add
lret
mov
mov
xor
dec
cmp
movsl
jle
jns
mov
lahf
dec
lods
xchg
sub
dec
fistpl
insb
aaa
in
scas
inc
popa
scas
jno
sub
dec
rcr
and
and
or
outsb
inc
popa
mov
shrl
fisttpll
xchg
cmpl
sub
jle
mov
lcall
out
mov
push
adc
pusha
jle
and
push
je
push
in
jmp
mov
mov
or
das
push
push
test
cmp
ficompl
enter
fstpl
jne
cmp
xor
mov
pop
inc
movl
push
fwait
jmp
xor
in
and
outsb
in
fnstsw
out
inc
sub
xchg
adc
xchg
lret
sbb
push
inc
ror
jle
push
push
lret
xchg
mov
js
adc
jmp
shrb
adc
lcall
out
mov
inc
sub
xor
ds
adc
fisubs
adc
dec
dec
add
insl
rcll
flds
out
aas
sub
clc
hlt
mov
inc
pop
leave
fdivr
std
enterw
cmpsl
pushf
jmp
push
fidivrl
or
add
out
dec
mov
ds
test
pop
cmp
insb
mov
xchg
sub
dec
ja
adc
cmp
hlt
inc
mov
inc
xchg
imul
push
aas
fs
inc
dec
jno
rorb
imul
out
xor
and
or
lock
shll
clc
fadds
imulb
shll
frstor
pop
dec
mov
aam
fs
push
call
jo
push
lods
ja
jle
push
mov
stc
mov
lcall
push
cmp
imul
mov
lret
pop
and
adc
inc
stc
dec
bound
xor
aam
pop
dec
cmp
push
ret
dec
das
jp
addl
and
js
daa
popf
adc
xchg
add
xchg
jo
dec
arpl
and
and
push
sub
lods
adc
outsl
sahf
and
pop
pop
mov
jae
imul
aam
jle
mov
jp
lcall
lahf
mov
mov
and
cwtl
popf
jp
add
xchg
rorl
adc
out
xchg
push
jp
xlat
adc
cmp
mov
inc
nop
inc
mov
xor
sub
repnz
cmp
xlat
and
mov
addr16
imul
pushf
clc
dec
ds
adc
int3
js
shlb
push
fucomi
dec
andb
popf
jl
sbb
pusha
pop
into
test
nop
mov
mov
sar
pop
shl
lds
fdivl
imul
popa
jl
fwait
mov
test
fdiv
mov
jno
cmp
inc
xchg
xchg
cmp
hlt
sub
mov
cmp
jg
cs
xor
mov
js
xor
xchg
dec
cmpsl
jp
inc
nop
pop
xchg
inc
mov
sub
lahf
pop
andl
mov
daa
sub
and
pop
fs
push
js
ret
psubusb
sbb
dec
ljmp
sub
mov
xchg
sbb
bound
dec
pop
loope
aas
pop
add
repz
xchg
jg
sub
or
cmc
in
shll
das
fs
movsl
lods
or
movsb
push
out
and
outsb
xchg
stos
mov
lcall
xor
ljmp
or
cwtl
inc
subl
dec
and
cmp
fs
out
popa
out
pop
xor
das
ss
sbb
pushf
ds
clc
xchg
sub
notl
incl
orl
mov
push
repnz
insl
sub
cmp
mov
sub
dec
popa
pop
cwtl
mov
jne
repnz
xor
jg
inc
int3
cmp
xchg
hlt
fists
movsl
lods
jne
mov
and
js
into
xchg
fstpl
in
sbb
dec
mov
inc
fists
insl
mov
push
add
clc
notb
mov
xor
jle
loop
out
xchg
push
mov
add
lcall
inc
pusha
dec
or
out
mov
or
lahf
adc
pop
fs
jbe
add
push
inc
or
cmp
dec
mov
fstl
add
dec
pop
pop
int3
addr16
shll
in
jnp
mov
int3
add
in
test
aaa
imul
imul
push
mov
push
sub
lahf
mov
stos
lods
add
mov
or
dec
cld
jb
imul
and
rorb
fwait
and
mov
cld
sbb
lods
cmp
inc
std
or
xor
loop
pop
adc
and
dec
jns
inc
in
or
pop
xchg
mov
push
xor
xlat
les
mov
mov
cmp
push
dec
and
aam
in
mov
stos
jno
nop
daa
movsl
inc
mov
data16
imul
sbb
into
insb
mov
or
push
cmp
les
mov
arpl
iret
cmpl
ljmp
leave
and
rcll
mov
insb
jl
mov
dec
adc
jl
out
bound
add
inc
insb
push
aam
add
jbe
loop
scas
test
fidivs
mov
outsb
scas
lret
movsl
sti
jg
cmpsl
int
fidivrs
sbb
int
push
testl
sbb
xchg
push
das
lcall
adc
scas
shrb
mov
sbb
dec
push
push
inc
mov
xchg
mov
jno
jl
dec
cmp
xchg
mov
pop
es
in
stos
push
stos
call
dec
xchg
inc
jp
into
sub
popa
sahf
sbb
push
ret
imul
loopne
jge
out
mov
mov
jl
clc
stos
iret
sahf
inc
mov
inc
pop
push
mov
mov
xor
mov
mov
xorb
mov
push
pop
int
ja
int3
fsubrs
add
jns
iret
fstpt
cmp
push
mov
imul
notl
je
xlat
sub
mov
test
fdivrl
hlt
sub
pushf
loopnew
fsts
bound
imul
ljmp
add
lea
dec
lret
lock
mov
or
jle,pn
repz
pop
icebp
mov
out
adc
mov
in
push
pop
mov
cmpl
popf
out
inc
pop
jmp
push
push
notl
sbb
cmpb
xchg
test
sbb
imul
test
mov
mov
stc
mov
jns
push
dec
ljmp
cmpsl
subl
les
fistps
test
daa
ljmp
cmpsb
jecxz
wbinvd
fsubs
jmp
xlat
rcr
pop
jl
lods
add
sub
pop
loope
jp
mov
add
outsl
andb
mov
jno
pushf
fsub
push
xor
sbb
dec
mov
cltd
pop
ljmp
jno
fwait
les
sbb
fldl
leave
add
addr16
and
inc
movsb
into
dec
mov
mov
scas
cmpsb
push
xor
xor
lret
popf
in
xor
mov
pop
sbb
pop
call
in
stos
add
sub
push
add
fnstenv
cmc
lods
adc
int3
fidivrs
push
add
sbb
and
mov
and
ja
daa
sub
xor
cmp
lds
xchg
inc
lret
dec
push
leave
push
lcall
repz
nop
pop
les
jnp
xor
add
lretw
pop
add
and
jp
out
xorb
lea
jl
scas
test
inc
pop
sbb
mov
pop
adc
jns
popa
xlat
jge
dec
fstpt
int
pushf
test
adc
repz
pop
popa
push
imul
adcb
xor
add
shll
or
insb
es
js
adc
mov
pop
pushf
adc
add
jno
lcall
jo
cmpl
cmp
in
mov
fadds
lods
test
jle
jne
cmp
insl
xchg
dec
mov
arpl
sbb
in
and
lock
xchg
arpl
iret
jp
mov
mov
sahf
adcb
jecxz
std
fldenv
imul
roll
mov
pop
pop
xor
add
je
mov
sbb
push
mov
lahf
xchg
pushf
sahf
jl
andb
sbb
filds
mov
rcll
gs
dec
shlb
movsl
cli
mov
imulb
xchg
jg
fwait
or
sbb
shlb
movsl
enter
test
jecxz
push
lcall
inc
js
xor
adc
push
clc
xor
stc
pop
push
push
popa
xchg
fisubrs
call
aas
fcmovb
sahf
push
int
jnp
repz
and
arpl
mov
pop
test
sub
bound
add
cmpsl
test
data16
insl
xor
daa
aam
lret
in
sub
jne
outsl
aad
imul
pop
lds
ret
inc
xchg
xchg
mov
aam
out
cli
dec
fstpt
cltd
xor
stc
das
pop
inc
rorl
popf
mov
xor
pop
repz
mov
sub
cld
add
fwait
insl
pop
loope
add
js
or
popa
xlat
add
push
adc
push
cmp
mov
in
outsl
ror
clc
test
pop
loope
xlat
sub
fdivl
xor
cmpsb
daa
lock
lcall
out
pop
mov
xor
jle
push
mov
adc
mov
mov
dec
adc
bound
lea
pop
inc
push
rclb
jmp
cli
mov
push
mov
xchg
dec
sbb
nop
insl
push
std
mov
xchg
mov
movsl
mov
arpl
mov
pusha
adc
in
ret
xchg
xchg
sbb
icebp
jg
mov
mov
lahf
fadd
lds
test
cmp
xchg
les
and
bound
rolb
dec
jecxz
pop
xchg
dec
popa
adc
dec
jae
jecxz
mov
sub
jg
je
cmpsl
std
cmp
nopl
inc
cmp
add
int
dec
push
loop
mov
push
pop
test
mov
cmc
testb
sti
ficomps
cmp
adc
addl
mov
les
jmp
stc
icebp
inc
int3
in
push
sub
add
jne
insb
sti
xor
mov
jl
or
push
xlat
stos
addr16
and
orl
divl
lea
out
jae
mov
pop
dec
je
xchg
repz
jns
pop
mov
lods
add
push
cli
outsl
or
pusha
in
push
xchg
ret
adc
add
sub
pop
mov
int3
stos
sbb
adc
sub
xchg
add
repnz
xor
ds
mov
enter
inc
dec
mov
mov
jmp
xlat
es
in
push
pop
pop
mov
stc
ret
mov
inc
ja
mov
push
push
xlat
inc
pushf
in
test
jle
movsb
aas
push
cwtl
addr16
negl
xchg
xlat
jae
mov
out
call
inc
sahf
loope
rcrb
mov
sarb
call
push
and
sahf
cmp
sbb
push
push
inc
adc
fldenv
jb
mov
ret
call
lret
mov
fwait
nop
adc
pop
sti
out
mov
in
mov
xlat
fcomi
add
imul
ja
jl
and
cmc
push
and
inc
movsl
pop
fs
mov
into
and
lcall
fisubrl
in
sbb
fbstp
ss
out
outsl
push
mov
sub
xor
cli
pop
push
aaa
and
jge
or
gs
and
mov
daa
push
in
pop
fmull
push
jmp
lret
lds
movsb
sysexit
mov
and
and
enter
xchg
cmp
inc
stos
dec
jbe
popa
jb
pop
inc
fmull
pop
push
mov
lds
out
xchg
mov
fbld
hlt
test
jge
xchg
sub
mov
insl
outsb
shlb
or
pushf
leave
test
cmc
bound
out
cmp
push
xor
pop
jmp
jmp
lret
jmp
out
and
int
dec
test
addr16
inc
in
mov
jp
ret
shl
inc
mov
xlat
mov
mov
imul
aad
xchg
inc
arpl
cltd
xor
adc
std
movl
outsb
nop
sbb
jb
leave
mov
test
add
out
cmp
mov
sbb
or
add
mov
cmp
stos
pop
lods
and
rcrb
and
loope
stos
mov
scas
xchg
jmp
mov
mov
in
push
movsl
sbb
sbb
add
icebp
mov
add
inc
shlb
and
fsts
clc
cmpsl
cmp
mov
xchg
dec
sahf
pop
mov
ljmp
je
dec
cld
test
lret
cmp
scas
pop
mov
pop
and
popa
mov
sbb
mov
stos
or
ljmp
fbld
mov
xor
jbe
ffree
aaa
xor
jmp
cmp
xor
popf
add
loope
sub
stc
xchg
fdivs
jmp
iret
mov
scas
xor
and
lcall
andb
adc
mov
push
mov
icebp
outsl
cmp
cmp
mov
jns
mov
js
call
and
fwait
in
gs
xor
nop
jns
mov
adc
mov
out
or
sbb
xor
mov
cmp
inc
sahf
jmp
sub
cmp
or
hlt
gs
adc
mov
call
sahf
jle
scas
jnp
je
insl
outsb
mov
mov
js
cmp
xchg
fucom
mov
popa
sub
pop
imul
sub
push
popa
hlt
cmpb
jne
xchg
adcl
out
pop
in
leave
cmp
gs
sub
stc
insl
mov
mov
clc
aaa
mov
lcall
xchg
fwait
dec
call
xchg
push
mov
push
test
xor
push
jg
mov
lret
fidivrl
cmp
ret
ret
imul
dec
test
and
movl
mov
xchg
sbbb
inc
mov
idivb
sbbb
das
sti
shrb
lcall
mov
cli
add
imul
pushf
or
cmp
das
sbb
aas
sub
iret
sbb
push
xor
ret
cmp
int3
stos
pop
jle
dec
popa
xor
inc
cmpl
mov
repnz
jmp
movsb
mull
xor
xor
subb
out
ss
fmull
inc
out
popf
out
xor
outsb
stos
repz
les
gs
mov
sti
test
jg
outsb
sub
adc
aad
xchg
pop
outsl
les
mov
ret
push
or
sub
ds
mov
fs
idivl
out
mov
sbb
xor
mov
pop
aam
mov
lret
xchg
stc
fsubs
lcall
mov
cmp
data16
sarb
xchg
xchg
xorl
add
rcr
dec
lcall
or
ds
xor
jl
adc
jmp
xchg
sbb
out
enter
es
pop
in
pop
lea
and
jbe
xchg
lock
setp
leave
lock
adc
cmp
xchg
outsb
xlat
cltd
std
cmp
add
stos
cli
std
sarl
lock
push
enter
je
add
js
shlb
rcr
pop
cmp
adc
clc
loopne
jae
aad
int
enter
test
mov
arpl
testb
call
ds
mov
rcrl
or
pop
fdivr
loope
cmpsb
mov
inc
rcrb
lods
or
push
and
lcall
inc
pop
test
jae
xor
shll
int3
pop
jns
inc
adc
push
lea
sbb
arpl
frstor
mov
and
cmp
lahf
bnd
ljmp
rcr
out
mov
lahf
daa
fwait
and
pop
cmpsb
jp
xor
test
jmp
add
ljmp
adc
lcall
pop
sbb
mov
sbb
ret
in
shl
mov
cmpsb
addl
mov
cmp
mov
movsl
loop
push
push
adc
dec
in
mov
inc
adc
cmc
mul
scas
xchg
lods
inc
dec
mov
out
in
sarb
sub
cmp
push
mov
fwait
xchg
and
test
fisttpl
sar
enter
aaa
inc
mov
decl
fstl
icebp
fcoml
xchg
push
push
pop
sbb
sub
insb
test
idivl
xchg
ljmp
adc
jecxz
cmp
mov
mov
fildll
jo
xchg
xchg
les
or
sti
cmp
call
inc
lods
insl
into
xor
ret
in
add
lods
pop
xchg
out
nop
jg
into
out
ficoml
dec
inc
dec
mov
and
js
pop
lcall
aam
int
mov
sahf
and
sub
mov
mov
lret
rolb
popf
mov
insl
call
lret
jo
stos
popa
adc
mov
jmp
dec
mov
sti
mov
loope
add
sbb
adc
popf
sub
mov
aam
cmpb
xor
xchg
popa
lret
fnsave
ret
in
inc
nop
add
jnp
lahf
dec
jae
fwait
roll
mov
pop
loope
adc
push
or
mov
pop
sarb
addr16
dec
sbb
inc
ja
adc
fstps
add
push
xor
mov
out
js
xchg
loopne
push
jb
push
cmp
cld
xchg
outsl
loope
xchg
test
dec
inc
stc
or
mov
testl
gs
fildll
fcoms
jge
stc
cmp
leave
roll
imul
enter
enter
jp
adc
cmc
aas
mov
xor
mov
or
les
imul
movsl
std
fildll
dec
out
sbb
stc
mov
sub
sbb
stos
mov
pop
jl
adc
add
mov
mov
test
mov
icebp
xchg
cli
movsl
nop
dec
outsl
cmp
nop
mov
cmp
out
loope
std
test
xor
loop
test
cmc
sub
imul
and
stc
les
dec
nop
xor
imul
mov
adc
lret
js
mov
sbb
daa
xor
adcb
sbb
or
pop
sub
mov
dec
int3
or
adc
inc
pop
xchg
xlat
and
add
mov
iret
sti
lods
add
out
jo
mov
inc
aad
cltd
mov
leave
cmp
mov
jb
mov
sbb
enter
mov
out
jne
sbb
add
inc
inc
out
flds
xchg
aaa
outsb
hlt
imul
sbb
mov
pop
xchg
test
out
xor
mov
or
insb
popa
je
xor
into
jne
mov
push
push
fisttpll
sub
push
enter
cmp
test
mov
out
outsb
ja
xor
xchg
mov
xor
dec
out
std
jns
inc
add
rcr
adcb
cmp
loop
iret
and
inc
pop
out
cmp
push
clc
jge
sbb
xchg
jg
loope
les
or
cmp
test
xchg
ja
jns
adc
sbb
pop
mov
push
cmc
xor
imul
cli
jne
sbb
xor
xchg
data16
rcrb
adc
int3
int3
stc
imul
adc
sub
jnp
fnstcw
and
adc
mov
rcl
neg
outsl
jecxz
inc
jbe
push
js
icebp
imul
mov
inc
int
lds
and
ja
jo
or
arpl
enter
aas
jb
mov
clc
push
or
repnz
cmp
push
xchg
pop
cmp
std
or
jbe
mov
test
cmp
or
xchg
and
cld
mov
mov
jnp
push
cltd
call
gs
out
repz
rol
push
xor
ds
es
sbb
xchg
jb
or
pop
jne
flds
jns
movsl
sti
test
in
mov
testl
rcrl
or
mov
lock
fdivrs
push
lods
inc
adc
adc
cmc
out
fdivrs
jno
add
icebp
xor
ljmp
aas
fisubrs
cmp
lods
imul
dec
test
mov
add
jnp
fnstcw
imul
sbb
jp
push
lcall
pop
shll
push
jns
dec
jno
mov
pop
xchg
icebp
adc
out
or
xor
aad
and
adc
mov
test
add
fcmovb
sti
stos
sub
aas
mov
adc
aad
lret
loopne
inc
and
mov
mov
mov
lcall
nop
pushf
pushf
xor
int3
cmp
lds
sub
sub
jle
xchg
arpl
or
cli
out
stos
fistpll
icebp
pusha
fdivr
or
fwait
stos
xchg
lea
insb
mov
pop
pop
aam
in
jnp
pop
std
lods
mov
inc
and
mov
mov
push
addl
mov
ret
ss
out
cmc
or
call
and
ds
push
out
fadds
movsl
ret
test
mov
aam
mov
xchg
dec
and
dec
sbb
ljmp
xchg
in
ficoms
in
icebp
lock
lret
jl
cmpsl
rcl
sbb
imul
cmpsb
sti
ret
std
cmp
insl
adc
test
out
lea
out
sub
jne
sub
das
xchg
inc
xor
sbb
add
pop
add
mov
or
lock
pop
ret
in
inc
lret
dec
xor
cli
outsb
out
inc
add
ret
xor
gs
lds
inc
jbe
std
rorl
pop
imul
lcall
stc
inc
popa
inc
mul
mov
push
jno
shl
out
sti
push
add
pop
adc
cmp
pushf
in
sub
push
mov
adc
adc
sbb
imul
call
xchg
sub
movsb
cmpsl
movsb
dec
xor
adc
adc
cmpsb
xchg
pusha
movsb
pop
jl
fisubrs
fbstp
mov
cli
inc
jle
add
rclb
cmc
loop
or
ljmp
jge
sub
mov
ds
or
repz
mov
xorl
icebp
ja
inc
mov
inc
pushf
addr16
and
test
leave
jo
push
inc
jp
loopne
cmp
or
jmp
pop
xlat
movsb
loopne
lret
lret
push
jno
ret
dec
in
or
in
mov
xor
bound
nop
mov
sti
mov
mov
scas
insb
cmpsb
pop
xchg
push
mov
push
negl
add
setno
dec
ror
shll
shll
mov
adc
dec
and
ljmp
outsl
jne
ljmp
and
insb
test
loop
ja
leave
cwtl
fwait
cmpsl
xchg
enter
and
inc
cmp
sahf
pushf
xorl
adc
sub
nop
lcall
mov
sub
in
enter
mov
mov
outsl
xor
cs
add
fmull
add
daa
cmp
inc
addr16
inc
push
pop
mov
mov
js
xchg
dec
push
insb
push
sub
xor
inc
loop
bound
or
outsb
sbb
xlat
mov
inc
pop
sub
fdiv
inc
je
push
mov
jb
ss
lcall
xchg
mov
jno
inc
inc
cmp
ret
cmp
adc
mov
inc
pushf
test
push
inc
adc
and
push
in
push
mov
mov
negl
mov
loope
jns
orb
add
cmp
imul
test
pop
fdivr
mov
fidivl
cs
aaa
out
sub
lahf
lcall
xorl
fstp
lret
push
ret
lret
mov
jmp
dec
cmp
aam
icebp
push
jnp
scas
imull
push
adc
repnz
cmp
aam
daa
and
adc
mov
fimull
bound
loopne
push
xor
int3
push
mov
inc
lret
shlb
inc
movsb
scas
loop
inc
mov
popa
shlb
or
sbbb
xchg
aaa
jmp
mov
xchg
pop
jne
cmp
mov
aas
pop
stos
cmc
jae
pop
imul
ret
mov
enter
std
mov
inc
push
jl
cmpsb
test
movsb
fdivs
xchg
das
pop
jg
mov
jo
not
mov
gs
mov
pop
adc
test
in
lret
mov
mov
lea
aam
out
stc
cld
in
mov
sahf
dec
hlt
popa
xor
fs
pushf
ja
sahf
popf
shl
push
xchg
inc
hlt
popf
ret
cmp
push
or
js
sbb
lcall
adc
or
pop
cmc
hlt
xchg
and
fdivrs
push
ret
shl
push
push
xchg
into
xor
mov
aam
adc
dec
in
out
lods
cmp
mov
fldl
xchg
sub
xchg
mov
mov
in
jmp
outsb
repnz
daa
adc
pusha
insl
data16
xlat
or
pop
mov
nop
inc
xchg
mov
daa
and
push
lods
cmc
dec
pushf
push
lahf
out
mov
add
mov
fimuls
shr
and
fimull
lock
ja
js
add
pop
mov
push
enter
lea
and
in
sub
fstpt
test
cmp
fsubrl
lret
cltd
ja
inc
jb
es
lods
mov
mov
ds
nop
mov
sub
mov
out
loope
jae
sub
push
mov
push
rorb
pushf
imul
pop
pop
insl
arpl
rcll
mov
cmp
jne
add
cmp
movsb
call
in
mov
gs
push
inc
xor
adc
les
rcrl
and
cmp
and
stos
das
jmp
fimull
or
and
push
je
adc
pop
call
or
int
mov
dec
sbb
mov
mov
scas
mov
repnz
sbb
jae
in
pop
and
cmp
push
fldln2
arpl
sbb
call
sti
dec
in
and
cmp
sti
sbb
out
push
mov
iret
xor
pushf
pop
in
pop
adc
test
jl
pop
fiaddl
push
test
jns
push
inc
or
inc
mov
mov
dec
addr16
push
dec
outsl
jmp
mov
xorl
dec
dec
jne
xchg
popf
mov
ret
adc
std
xor
sarb
dec
cli
pusha
xchg
cmp
mov
ret
fcmovu
aas
cmp
std
lods
add
fs
int
out
add
cmc
and
pop
add
stos
hlt
or
sbb
and
jnp
scas
nop
shll
push
ret
adc
js
test
push
xchg
aad
sbb
xchg
add
adc
and
fiaddl
dec
mov
out
inc
fs
pop
sbb
mov
andb
mov
xlat
rcl
push
xchg
push
push
and
push
push
fidivs
pop
pop
adc
xchg
movsb
and
testb
xorb
inc
cmp
jle
test
loop
xchg
sbb
les
pushf
push
inc
in
adc
sbb
xchg
int
bnd
mov
dec
inc
rcrb
jle
or
rorl
in
imul
in
push
jo
cld
inc
push
push
cli
icebp
je
add
icebp
push
and
jp
adc
enter
xor
push
int
les
mov
stc
addr16
push
mov
ljmp
or
adc
in
out
stos
inc
or
andb
mov
fadd
mov
jle
push
icebp
cmp
bnd
data16
inc
mov
mov
pop
rcrb
pop
xchg
stc
fcoms
bound
iret
dec
cltd
adc
mov
idivb
imul
adc
ret
adc
lahf
or
repz
data16
out
jno
sahf
or
cwtl
sub
dec
xchg
xchg
xchg
pop
add
or
dec
out
andl
lds
leave
mov
push
rclb
and
sub
pop
xorb
jp
enter
or
mov
jge
mov
lock
sub
mov
rcrb
incb
lcall
rclb
dec
xor
and
aam
decl
arpl
or
imul
leave
or
insb
hlt
jne
mov
fwait
xor
cmp
cltd
mov
jl
adc
pop
dec
jmp
xchg
iret
repnz
xchg
sub
jnp
adc
fs
push
das
gs
jg
dec
and
push
lahf
fs
sbbb
nop
cltd
frstor
push
jns
lahf
pop
adc
adcb
call
mov
xchg
adc
cmp
and
mov
int
fs
lea
push
je
push
inc
cmp
sub
jb
pop
jne
fnstenv
xor
rcrb
sti
mov
cmc
jp
adc
loope
data16
dec
test
mov
dec
pop
out
aas
outsl
or
mov
jb
push
jmp
iret
fsub
mov
mov
fcmove
out
fstpt
ret
int
lahf
adc
outsl
nop
push
fmulp
mov
movsl
xor
movsl
cmp
mov
or
cmpxchg
cmp
mov
xchg
idivl
mov
mov
out
adc
cmp
lret
mov
repnz
fstp
xchg
dec
sub
xchg
mov
pop
in
push
daa
cmc
xor
das
out
in
das
leave
push
dec
cli
push
popf
lds
add
jne
icebp
adc
stc
adc
sub
ficoml
add
xchg
movsb
add
bound
push
mov
pop
mov
push
push
lea
push
mov
mov
add
aaa
mov
inc
jbe
aas
int3
insb
cwtl
adc
inc
aam
lea
stc
sbb
mov
aaa
inc
adc
fdiv
jle
insl
shr
data16
sarb
push
dec
fcompl
adc
popf
daa
pusha
xlat
pop
insb
inc
pop
lds
dec
and
lret
cmp
lods
lods
out
fs
les
inc
pop
test
int3
mov
ret
dec
dec
cmp
test
movsb
mov
xchg
dec
dec
sbb
dec
jp
adc
sbb
in
dec
and
inc
rorl
jae
add
adc
pop
addb
inc
pushl
pop
fs
jb
sbb
pop
pop
das
sub
dec
fsubr
add
push
fsubrl
add
sti
insl
inc
and
sarb
sbb
or
std
mov
xchg
fnstcw
fwait
add
jne
rol
popf
rcl
fsubrl
dec
inc
dec
dec
aad
das
push
mov
inc
test
jns
je
lods
push
mov
jns
sbb
je
push
sbb
dec
pop
mov
jecxz
ljmp
jl
movsb
dec
xchg
push
das
adc
popa
mov
repnz
xchg
add
xor
jnp
xorb
dec
inc
sbb
and
and
dec
imul
mov
iret
movsl
popf
jecxz
push
test
mov
nop
xchg
pop
mov
jle
in
cwtl
rolb
hlt
push
jns
ficoms
sub
shlb
mov
sub
or
push
roll
out
sti
adc
daa
ljmp
rcrl
jne
mov
bound
lods
cld
pop
hlt
shll
lret
inc
add
and
xchg
dec
jnp
sub
mov
pop
lret
jle
dec
mov
mov
push
int
mov
faddp
mov
xor
cmp
addb
out
lock
mov
add
in
bound
nop
rorl
mov
mov
les
sbb
lret
push
xor
mov
rclb
xchg
adc
orl
call
mov
pop
jne
sti
fisubs
xor
nop
dec
out
in
aaa
xchg
sub
es
push
inc
cltd
xchg
xchg
jne
pop
movsl
test
cmp
push
jge
loop
hlt
les
leave
repnz
ret
and
sbb
add
or
mov
enter
mov
or
or
dec
orb
ljmp
cld
pusha
lcall
sbb
aas
das
cmp
mov
pop
imul
mov
in
push
or
mov
data16
dec
jmp
jecxz
out
adc
out
mov
xchg
mov
std
or
xor
das
mov
pop
jne
mov
inc
pop
es
rcrl
sub
mov
leave
stc
fnstenv
mov
adc
sbb
push
lea
jne
cmp
inc
repz
xor
lods
cmp
lret
mov
sub
repz
stos
cmc
adc
loop
pusha
mov
push
pusha
out
sbb
rorb
mov
pop
out
mov
pop
test
test
nop
mov
imul
add
dec
jecxz
fucomip
or
dec
dec
dec
mov
test
lods
fldenv
jae
fldenv
adc
fiadds
into
dec
push
dec
ds
add
les
mov
push
jge
xor
xor
cmp
push
jmp
pusha
mul
mov
jne
cmpsb
cld
clc
jp
cwtl
dec
nop
mov
addr16
or
test
add
sub
jmp
call
lock
bound
iret
dec
mov
push
sbb
or
out
xchg
adc
or
xor
push
xchg
pop
sbb
test
aas
mov
lods
jmp
leave
pop
jp
adc
stos
inc
push
pop
mov
pop
in
push
test
scas
mov
inc
dec
cmpsl
leave
ret
lret
sub
inc
jmp
jne
mov
fildl
cmpsl
adc
adc
ret
cmp
pop
cmpl
or
leave
push
jne
mov
js
add
cmp
mov
outsb
popf
js
mov
and
xor
lea
fstpt
rolb
sbb
js
jl
cmpsb
rcrb
pop
sahf
outsb
mov
inc
sbb
cmp
iret
testb
adc
out
mov
outsb
lods
xor
inc
sub
in
out
stos
xor
jmp
inc
fwait
mov
mulb
cmp
mov
ret
add
add
or
mov
adc
pop
fcompl
in
mov
nop
insl
js
mov
and
cmpsl
jg
test
cld
test
mov
pop
sub
adc
xor
and
aaa
cld
ljmp
lret
fstl
mov
jae
rcll
arpl
pop
addr16
push
orb
std
imul
aas
sbb
mov
cmp
xor
stos
sub
pusha
cwtl
aam
lods
xor
mov
shl
les
inc
ljmp
lahf
loop
xor
out
pop
out
ret
nop
loopne
int3
inc
inc
ja
inc
mov
cs
mov
in
les
jmp
pop
inc
push
lahf
pop
sbb
mov
sub
lea
mov
lahf
fisttps
pop
aas
int3
je
push
insb
imul
daa
dec
and
sub
xchg
jecxz
mov
pop
mov
ja
aas
call
mov
sbb
ficoml
in
or
mov
mov
leave
fs
adc
xor
je
lcall
mov
rorb
jecxz
gs
push
mov
shlb
out
dec
mov
and
sbb
mov
test
add
popf
in
stos
rcrl
negl
push
mov
sub
aad
lret
dec
daa
outsb
into
jno
inc
xchg
mov
inc
adc
adc
sub
jns
in
push
add
aaa
subb
movq
scas
adc
imul
int
mov
sbb
mov
mov
or
loopne
adc
subl
lcall
jns
andb
movsb
push
lock
gs
inc
fstpt
cli
mov
stos
dec
mov
imul
inc
inc
aas
pop
dec
cmp
cltd
aad
sbb
and
cmp
lcall
pop
js
shlb
pop
sub
cld
dec
adc
mov
cld
repnz
cmpsb
pop
mov
jns
sub
push
mov
xchg
cmc
iret
sahf
dec
fstpt
lret
and
jbe
xor
jl
insb
loop
xrstors
aaa
jecxz
mov
aaa
mov
and
sbb
int
pop
cmpl
cmp
pop
push
jae
jnp
pusha
sub
aad
pop
push
sbb
mov
out
mov
test
or
pop
push
in
add
pop
test
pop
arpl
jne
adc
mov
jno
fsub
xchg
dec
int
mov
in
push
jle
scas
imul
jle
jb
adc
inc
xchg
mov
mov
std
nop
mov
xor
mov
sub
dec
jp
repnz
test
jl
movsl
inc
pop
popf
in
mov
sahf
xchg
repnz
dec
mov
cwtl
lahf
mov
stc
pop
out
pop
cmp
test
mov
clc
dec
cltd
adc
lods
mov
mov
test
pushf
rorl
pop
pop
or
xor
jecxz
sbb
jno
mov
push
ja
subl
cmp
lea
mov
nop
jl
les
fisubl
frstor
xor
pushf
dec
fdiv
sub
int
ror
movsl
out
sub
jb
jno
cmpsl
mov
push
pop
out
in
or
ja
popf
jbe
out
sub
ja
js
aad
or
and
mov
sub
push
sti
insb
or
sbb
dec
repnz
jg
iret
inc
call
pop
add
mov
xorl
or
insb
insb
dec
mov
and
fcoml
mov
cmp
and
cltd
out
mov
sahf
out
out
sti
xor
mov
nop
adc
call
sub
mov
ret
cli
xor
jecxz
add
cmp
push
push
bound
adc
gs
push
inc
fcomps
ret
sbb
ret
loopne
or
push
shl
sahf
out
rcr
dec
sub
dec
jge
dec
out
scas
dec
lds
fldt
pop
xchg
inc
add
jmp
mov
in
xor
pushl
xor
or
mov
outsl
shl
sub
in
cmp
push
adc
rcrl
movsl
xor
cs
js
cmp
add
out
dec
fbld
repz
cmpsl
xchg
mov
xchg
jb
cwtl
popf
jle
pop
shlb
aaa
imul
lret
cmpsl
dec
and
loopne
daa
inc
mov
push
add
xlat
jo
xchg
dec
adc
dec
movsl
cmpsb
out
es
dec
fwait
pop
or
mov
push
imull
imul
jge
outsl
ficompl
fwait
in
aam
and
pop
mov
ja
jecxz
lds
int
hlt
pop
icebp
adc
popf
shl
rcrl
and
pop
mov
aas
sub
jne
inc
scas
jne
lahf
pop
cmp
imul
sarb
clc
shr
lods
or
loope
lret
pop
mov
pop
popf
jecxz
dec
test
sahf
sbb
add
xchg
aaa
ss
arpl
pop
cwtl
sarl
cmp
xchg
pop
subl
imul
sahf
sahf
xchg
lret
sub
or
pop
jmp
ds
jg
adc
pop
in
push
jl
sahf
sahf
orb
aam
daa
cmpsb
leave
cld
in
lahf
cs
sarl
call
ss
cmp
inc
adc
xchg
xchg
sbb
adc
aas
inc
fidivs
popf
sti
fdivrs
xchg
movsl
add
andl
ss
loopne
in
aas
push
mov
jle
jno
mov
addr16
negb
in
mov
jmp
int
fcmovu
lcall
push
mov
loopne
sub
outsl
jne
fs
push
test
xchg
jo
andb
cs
iret
mov
and
std
je
cmp
pop
xchg
jb
lods
adc
loope
jb
enter
inc
loopne
mov
outsb
fidivrl
add
movsb
cld
in
fidivrs
pop
sti
adc
push
inc
icebp
jnp
adc
fwait
fs
scas
inc
pop
pop
inc
add
push
pushf
sti
inc
mov
and
outsb
rclb
mul
jno
sub
enter
jmp
movsb
or
mov
cld
cmp
jmp
push
or
aam
cmp
pop
fxch
push
pusha
dec
cmc
xchg
mov
push
test
mov
sbb
sub
jmp
ljmp
xor
inc
inc
push
test
mov
daa
outsb
inc
cmp
cwtl
lret
jbe
fwait
popf
sbb
jp
xchg
cld
mov
sub
sbb
leave
aas
add
jecxz
add
stc
adc
and
imul
imul
xor
mov
sarl
mov
out
mov
xor
rorb
add
pop
xchg
inc
std
roll
call
in
fnstsw
sbb
addr16
adc
adc
addb
aas
repz
es
xchg
jp
sbb
pop
les
repz
pop
mov
ja
mov
jecxz
cmp
pop
xor
jbe
test
cmp
in
outsb
fcmovnb
orb
iret
mov
rorb
mov
sub
lret
das
mov
lahf
out
nop
and
addr16
loopne
dec
mov
in
push
imul
or
jle
nop
sbb
push
test
imul
sbb
xchg
sbb
push
je
lock
aam
inc
mov
int3
in
lret
xor
dec
jg
ss
ljmp
sbb
cmpsb
mov
popa
sbb
lahf
cmp
sbb
mov
addb
lods
jo
das
cmp
mov
rcrl
mov
aam
roll
into
mov
push
mov
wbinvd
xchg
mov
fsubrl
push
imul
mov
repnz
pop
pop
xchg
out
in
mov
add
std
fisttpl
sbb
jno
xor
mov
data16
std
cmpsb
out
out
cmp
lods
aad
in
scas
negl
push
pop
insb
dec
jmp
mov
cmpsl
ja
out
sub
xchg
xchg
jb
movsb
pusha
mov
and
scas
inc
sub
lock
dec
sbb
loopne
std
subl
xor
scas
jl
push
or
popa
mov
mov
lret
movsl
loop,pt
and
mov
leave
mov
inc
inc
popf
lea
dec
pop
xchg
std
stos
outsb
cmpsb
imul
xchg
lods
ja
scas
xchg
sbb
xchg
push
int
xchg
lahf
gs
ds
test
ss
js
pop
xchg
xchg
cld
out
shlb
push
push
pop
jecxz
push
and
jns
ds
insl
add
arpl
pop
gs
hlt
int
jnp
and
jl
aad
inc
scas
inc
add
in
pop
and
in
push
sti
lret
outsb
sbb
sbb
jle
cmp
aam
add
or
mov
aad
or
jb
sub
cli
test
push
sbb
test
fadds
xor
stos
jmp
fiaddl
rolb
adc
aas
stc
sbb
inc
test
pop
mov
jae
scas
add
ja
decl
xlat
aad
adc
push
mov
adc
push
add
fdivl
jg
mov
shlb
dec
lods
lret
test
repz
insl
push
insl
add
mov
mov
mov
jne
imul
xchg
nop
and
pop
and
dec
jmp
adc
push
ficoms
inc
ljmp
cmpsb
lret
or
xchg
pushf
and
xchg
mov
lret
inc
lcall
mov
or
xor
inc
jnp
pop
mov
pop
sbb
fbld
lods
xor
bound
pop
fwait
bound
inc
inc
arpl
pop
imul
mov
sub
mov
popf
sbb
lock
jbe
and
clc
loopne
jnp
mov
jae
sub
stc
xchg
stos
push
mov
and
cmp
mov
imul
cmp
push
push
mov
pop
outsb
and
mov
icebp
pop
lea
fadds
push
adc
outsl
inc
daa
fidivl
xor
cltd
call
inc
or
loope
lahf
iret
xchg
dec
mov
adc
shl
ret
jg
cmp
xlat
dec
xor
loop
push
push
xor
pop
xchg
out
mov
int3
and
pop
add
movb
imulb
aam
shll
cmp
out
stc
mov
aaa
imul
adc
xchg
or
dec
jmp
sub
jp
push
xchg
push
mov
cmp
push
xchg
nop
sbb
inc
cwtl
push
lretw
outsb
test
loopne
add
insl
inc
aaa
mov
insb
jnp
sbb
jmp
or
jb
inc
and
stc
or
movsb
adc
jb
mov
gs
push
mov
jle
mov
mov
jae
push
xchg
mov
int3
jl
jecxz
cmp
cld
xlat
pop
repz
ucomiss
into
hlt
dec
in
cmp
add
insl
and
scas
stos
inc
cltd
shrl
les
fistpll
xor
arpl
int
jle
or
pop
mov
mov
test
sub
sub
and
into
pop
sub
push
negl
push
sub
xor
pop
adc
cmp
inc
mov
out
aad
pop
dec
xor
outsb
cwtl
xchg
testl
ljmp
push
mov
jp
ja
or
lock
sub
loope
xor
outsl
je
into
lock
mov
rol
cmp
into
std
pop
mov
mov
or
cmp
push
cmp
inc
shl
pusha
lret
adc
adc
cs
adc
js
clc
adc
pop
pop
stos
popa
mov
mov
sub
fs
mov
mov
pop
inc
aaa
std
mov
mov
push
enter
xchg
int
lods
mov
scas
jmp
in
xor
scas
ffreep
sbbl
mov
stos
cmp
sub
pop
inc
sub
rorb
mov
dec
lret
cmc
xor
les
orl
xadd
outsb
and
pusha
cmp
int
fcomps
or
inc
mov
adc
dec
stos
fiadds
mov
sub
xchg
xchg
pop
dec
rcrb
push
sbb
jge
add
xor
out
dec
cmpb
or
pop
mov
inc
cs
leave
sub
leave
das
je
icebp
shl
inc
xchg
mov
inc
mov
or
jle
dec
cmpb
fisubrl
push
and
xchg
xchg
push
pop
jle
lods
or
add
mov
push
fldenv
rcrl
dec
cmp
push
xchg
movsl
pusha
cmp
int
xor
inc
jmp
out
cmc
mov
andl
adc
pop
adc
adc
loopne
inc
scas
inc
pop
mov
cli
mov
lret
jl
push
loope
dec
popa
xor
aaa
int3
fistl
lahf
nop
xchg
pop
adc
xchg
or
pop
xchg
stos
xchg
mov
shl
adc
ja
inc
and
sbbl
xor
xor
or
jo
test
inc
xchg
imul
mov
mov
mov
arpl
pushf
aaa
sbb
add
sub
aam
adc
jo
mov
fnstcw
and
addr16
jl
push
dec
mov
jp
pop
adc
out
test
cmpsb
rorb
push
psllw
jmp
jae
loopne
cmp
lea
out
lea
mov
sub
addr16
data16
pop
or
inc
test
xor
dec
insb
test
shlb
or
insl
lahf
push
shlb
sbb
sub
mov
cmpsl
and
inc
stos
aas
mov
repz
jb
jno
cmp
xor
popf
xchg
mov
mov
xchg
push
cwtl
test
add
xor
cmp
sbb
pop
jmp
pop
pushf
in
stos
cmp
popf
test
cmp
testb
enter
inc
aam
enter
jle
shr
mov
mov
ret
push
in
mov
fs
inc
xchg
jl
and
inc
cmp
cli
dec
mov
gs
fimull
imul
add
adc
dec
mov
mov
sub
mov
out
jmp
in
push
mov
push
or
int
mov
jbe
pop
les
test
fidivl
je
jne
sti
aas
adc
filds
jo
pop
out
cmp
mov
pop
movsb
int
jae
lea
dec
lods
pop
mov
imul
fsub
add
shr
adc
sub
pop
jne
cmp
sub
jo
or
sub
jb
gs
mov
xor
out
mov
aad
mov
cmp
add
insl
aam
hlt
or
sbb
xor
push
in
orb
fldl
xchg
mov
sub
sub
fmul
xchg
dec
adc
mov
ss
imul
adc
jno
pushf
insb
imul
aas
or
negb
cmpsb
sub
es
negl
mov
push
sbb
xchg
cli
push
nop
dec
outsl
adc
dec
or
aad
daa
inc
test
mov
mov
cmp
push
outsb
add
aam
out
mov
pusha
insl
mov
adc
xchg
ljmp
outsb
or
inc
push
mov
jmp
push
vmovntps
outsl
inc
and
inc
daa
add
inc
daa
sbb
ss
fisubl
mov
dec
repz
pop
cmp
sub
sarb
cmp
adc
inc
aaa
inc
enter
add
lret
aaa
jp
jle
pusha
fadd
mov
and
push
loop
xchg
mov
jmp
xchg
mov
rcll
xor
stos
cmp
ds
or
pop
xchg
in
test
ds
sub
push
mov
push
adc
sub
mov
gs
jge
enter
mov
cmp
stos
adc
or
out
lret
sbb
jge
ror
and
addr16
movsb
sub
xchg
cmp
and
dec
jbe
out
push
dec
inc
adc
mov
sti
and
and
mov
xchg
neg
ljmp
adc
lcall
inc
cld
addl
xchg
push
jo
leave
jecxz
sti
sub
outsb
pop
cwtl
in
cli
jb,pt
cmp
sbb
inc
mov
mov
pop
xor
mov
mov
xor
mov
xor
in
in
dec
jo
js
jno
or
stos
lods
cmpsb
sub
ss
jo
cltd
sbb
pusha
gs
push
das
ret
pop
push
mov
push
dec
dec
aas
hlt
dec
add
arpl
cmpsl
and
sbb
stc
mov
stc
dec
cli
sarl
shr
mov
xor
sbb
fisubrs
xor
cwtl
xchg
mov
dec
xor
idivl
fdivr
addl
dec
and
mov
shlb
out
sub
pop
iret
mov
out
sbb
cld
sub
cwtl
js,pn
adc
mov
les
push
lods
pushf
iret
test
in
mov
mov
retw
sbb
push
push
jae
xchg
add
cmp
fwait
int3
mov
sarl
jo
mov
sub
xchg
int
std
dec
clc
clc
mov
cwtl
movsb
out
jnp
ret
dec
ret
mov
cltd
mov
jnp
pop
xchg
inc
stos
inc
sahf
add
arpl
inc
out
out
fcomps
fldenv
sub
daa
ret
mov
data16
vmwrite
pop
aaa
movsb
jl
jnp
mov
mov
mov
add
or
test
int3
sub
mov
je
push
outsb
stc
mov
lret
jne
or
sti
xor
inc
push
xor
sarl
jb
pop
lods
mov
lcall
out
or
adc
dec
jae
arpl
test
lds
cmp
test
mov
ja
fdiv
push
scas
outsb
andl
shll
push
jle
out
ficoms
dec
addr16
aam
jecxz
cli
std
xchg
es
cltd
pop
rol
pusha
add
and
scas
rorb
scas
jnp
call
stc
movb
pop
adc
pop
repz
inc
push
mov
imul
icebp
pop
loop
in
int3
cld
mov
ret
mov
add
not
ret
pop
cmp
or
mov
mov
mov
pop
mov
stos
xor
pop
xor
mov
mov
mov
add
sub
ljmp
insl
mov
pop
loope
es
push
stc
inc
xor
in
inc
aaa
and
fsubrl
mov
stos
xchg
and
ljmp
mov
mov
sub
mov
cmp
jnp
pop
mov
pop
or
cli
int3
sub
pop
pushl
nop
pop
adc
aas
or
inc
xor
mov
mov
mov
int
pop
xchg
sub
inc
clc
and
out
xor
mov
out
sbb
rorl
insb
aam
and
xchg
sar
fs
pop
jo
xlat
cmp
sti
xor
popf
push
pop
xorl
je
inc
mov
fwait
xchg
push
xorb
int
pop
dec
call
ret
mov
call
pop
mov
aad
xor
sub
fadds
fwait
add
pop
mov
adc
pushw
xchg
cld
jns
addb
incb
int3
and
pop
subb
jmp
sbb
xchg
inc
mov
and
rorb
jb
cmp
push
ljmp
xor
js
test
cld
xor
stos
mov
out
test
mov
jmp
xchg
xor
int
cltd
stc
mov
push
and
icebp
jmp
jnp
dec
insb
adc
xor
cmp
out
movsl
mov
xchg
pop
push
lods
iret
add
xchg
jnp
setno
in
mov
int3
jle
push
jecxz
js
pop
test
scas
movsb
mov
out
ret
sub
adc
iret
in
add
inc
leave
mov
repz
cltd
mov
leave
scas
cmp
fidivrl
and
out
inc
aaa
sti
in
stos
or
dec
insl
push
int
sub
jp
mov
es
inc
je
mov
out
pop
shrl
sub
outsl
xor
loope
or
in
roll
stos
out
insb
cmpb
fs
mulb
jo
add
fwait
aad
push
mov
mov
addr16
inc
lds
xchg
push
mov
je
faddl
push
jge
addr16
mov
imul
cmp
add
decl
imul
pop
inc
hlt
pop
sbb
xor
jne
out
imul
push
test
enter
lret
mov
push
sbb
add
pop
inc
dec
mov
in
inc
mov
das
leave
xlat
lods
jl
cwtl
roll
movsl
xchg
jbe
mov
pop
imul
cmpsl
rcll
push
dec
inc
lods
or
outsl
mov
xor
xor
pop
lret
inc
pop
cmp
and
sub
dec
or
mov
mov
outsb
scas
dec
int
or
cmp
dec
cmp
dec
imul
adc
jecxz
add
push
arpl
lret
les
xchg
xlat
inc
mov
test
hlt
shll
jmp
cltd
xor
mov
cmpsl
out
mov
arpl
rolb
clts
test
nop
add
cmp
cmp
in
sbb
sti
je
cmpsl
push
sub
sbb
push
adcl
lahf
lock
inc
stos
std
push
xchg
aad
call
dec
push
mov
cmc
mov
sbb
and
cld
lret
xchg
lds
es
mov
mov
lahf
scas
stc
or
lds
sahf
into
mov
sub
lods
jmp
mov
mov
and
cmp
cmp
outsl
loop
mov
or
push
popa
popf
loopne
inc
int
lock
dec
inc
js
xchg
xchg
sbb
pop
push
jl
shll
cld
jle
pop
jae
or
push
daa
and
mov
call
jno
mov
xor
dec
cmp
aaa
dec
sbb
fisubs
adc
adc
ret
inc
icebp
js,pt
mov
fdivp
or
les
sub
ret
fdivrl
fidivs
rcrb
pop
dec
mov
push
shll
push
in
mov
stc
sub
sbb
inc
js
icebp
inc
jg
sub
into
inc
pop
sub
ret
push
mov
shlb
repnz
inc
lea
mov
into
jmp
xchg
mov
cmpsl
stc
pop
jle
and
loop
loopne
lret
xchg
adc
pop
push
mov
out
movsb
pop
out
cmp
dec
inc
sub
push
jmp
pop
jmp
outsw
and
mov
pop
repz
mov
sub
pop
call
push
mov
scas
pop
xchg
adc
ja
call
mov
data16
push
sahf
mov
and
lret
pop
xchg
adc
lret
in
fnstcw
icebp
inc
and
dec
ja
bound
fwait
push
xchg
adc
imul
imul
arpl
stos
in
pop
xor
mov
sub
ss
shrl
fucomip
mov
xor
jb
cmp
dec
xor
repz
popa
or
inc
xchg
aad
xlat
mov
jle
aad
xchg
push
xchg
ja
pop
add
jl
mov
fs
adcb
cltd
imul
mov
arpl
pop
cltd
jp
pop
adc
in
xor
fmulp
adc
in
sbb
pop
sub
sti
mov
dec
dec
adc
xchg
aad
push
cmc
cwtl
andb
xor
mulb
inc
imul
add
sbb
dec
stc
add
out
mov
add
lahf
ja
call
xchg
cmp
out
shlb
je
lock
sub
fsubrs
mov
sbb
ss
call
cli
lock
lcall
lret
or
pop
repnz
pop
outsl
xchg
loop
test
js
cmp
mov
lahf
aas
cmc
mov
loop
mov
mov
out
or
js
nop
push
or
loopne
in
inc
arpl
enter
arpl
xor
xchg
push
pop
sbb
push
pop
jmp
inc
ret
jb
mov
adc
shrl
inc
nop
and
es
std
stos
cmp
int3
arpl
sbb
int3
enter
in
push
push
dec
mov
mov
mov
cmp
xor
das
cli
sub
sub
test
mov
cmp
std
ficoml
add
pop
bndstx
mov
ret
clc
lea
xor
cltd
repnz
pop
pop
dec
jecxz
inc
sub
test
icebp
pop
add
ja
mov
dec
mov
ss
dec
xlat
in
and
test
mov
jae
mov
cmc
xor
cs
jae
jp
xchg
or
hlt
stos
aam
pop
and
and
and
add
stc
fsubp
clc
fwait
or
mov
int3
mov
out
es
sbb
inc
inc
test
mov
les
ret
data16
sub
and
popf
mov
push
fildl
out
push
ret
loop
outsl
lods
test
jle
dec
mov
stc
mov
repz
lret
out
sub
jp
add
jbe
inc
adc
sub
or
test
pop
repz
mov
dec
test
push
shll
ret
jecxz
dec
cltd
and
or
dec
sbb
test
lods
movsl
jge
pop
inc
pop
cmp
insb
pop
pop
mov
jne
dec
test
jg
inc
inc
and
mov
test
fwait
xor
xor
xchg
and
in
push
xchg
lcall
clc
js
inc
add
stos
lds
ss
or
mov
insb
jae
pusha
aas
mov
shlb
pop
nop
jl
inc
inc
adc
lcall
repz
divb
out
pop
repz
mov
dec
test
jge
lods
int
pop
mov
mov
or
or
cmp
jmp
jae
inc
pop
mov
fidivl
adc
and
andb
fisttpl
ret
psrld
test
push
push
sbb
les
sub
mov
mov
out
pusha
pusha
rcrl
scas
ss
fdivrl
pusha
pop
loope
cmp
mov
in
xor
scas
xchg
xchg
sbb
push
pop
arpl
sub
adc
icebp
mov
pop
aaa
lods
xchg
aas
fsubl
loopne
jmp
test
xchg
call
mov
adc
push
pop
outsb
push
pop
fimuls
lret
sub
adc
inc
loop
scas
mov
xchg
and
pusha
pusha
ficomps
xor
test
inc
mov
and
aam
or
mov
push
mov
shlb
roll
in
mov
icebp
in
jns
inc
jl
inc
fmull
out
cwtl
mov
std
mov
in
mov
or
mov
daa
cs
xor
pop
pop
stc
mov
nop
sarb
mov
or
inc
mov
popa
sub
test
mov
ljmp
mov
lret
lret
fisubrl
test
ret
sahf
xor
das
addb
inc
jns
xchg
and
adc
pop
push
inc
sbb
xor
dec
shll
and
add
popfw
lahf
daa
and
cmc
ljmp
xor
and
xchg
mov
pop
dec
loop
mov
pop
inc
iret
test
lcall
or
ss
inc
cmp
dec
adc
arpl
les
cmpl
and
mov
push
ret
rclb
loope
mov
or
outsl
and
inc
das
add
mov
mov
call
popl
insb
jp
jae
mov
adc
hlt
xor
mov
mov
dec
call
stos
int
pusha
adc
mov
inc
xchg
mov
jo
cmpsb
jbe
sub
mov
and
and
push
cld
and
mov
insl
push
cmp
adc
mov
dec
jns
pop
stc
int
cmpsb
ss
pop
dec
std
sub
in
les
inc
add
fcom
sub
cmp
gs
mov
inc
dec
movsb
mov
jl
pop
imul
inc
cmp
sbb
adc
add
pop
stc
rorl
dec
div
rorl
mov
jp
xlat
push
sub
inc
insl
leave
jo
mov
cmp
div
repz
aam
cwtl
xor
stos
cmc
aas
call
inc
xchg
aas
push
mov
pop
xchg
iret
mov
insb
cmp
pusha
fcompl
xchg
into
aas
adc
adc
fsubs
pop
jns
cmpsb
pop
repz
lret
mov
pop
popf
pop
jmp
outsl
mov
sbb
mov
or
or
sub
add
clc
iret
pushf
xchg
outsb
lods
fldcw
fstl
fxch
mov
sbb
sarb
out
mov
out
pusha
xor
pop
sbb
fdivrl
xor
jecxz
cld
xor
std
shlb
rolb
mov
push
dec
xchg
inc
stc
in
jp
stc
adc
push
movsb
and
icebp
lea
sahf
adc
inc
fsts
mul
add
xlat
inc
shlw
adc
and
cmp
mov
adcl
mov
std
xchg
std
popa
or
in
or
mov
lcall
mov
in
mov
push
mov
aaa
insl
xor
and
xchg
or
adc
cmc
sbb
es
dec
pop
cmpsl
push
fs
mov
jo
xlat
rcl
popa
lret
push
and
sti
xchg
clc
cltd
mov
scas
aam
mov
in
push
enter
add
lcall
jnp
pop
jmp
outsb
inc
and
xor
clc
outsb
cmp
xchg
std
test
clc
jp
sti
inc
dec
inc
daa
add
inc
xchg
aas
insl
sub
fadd
xchg
notb
or
push
lahf
inc
jge
jb
mov
ficomps
dec
or
ret
lods
mov
and
repz
es
sbbb
mov
sbb
std
push
mov
aaa
pushl
loope,pt
or
outsl
sub
push
push
stc
add
jp
scas
mov
and
inc
pavgw
std
ja
xor
addr16
in
icebp
push
negb
mov
inc
pop
out
outsb
xchg
add
cmpsb
pop
xlat
imul
pop
mov
inc
add
andl
rolb
ds
je
ja
rorl
sub
sub
dec
xchg
inc
sbb
xchg
inc
pop
cmp
cmc
adc
jecxz
push
push
cmp
push
lret
lds
sbb
shlb
ds
xor
shl
ret
cwtl
jne
push
push
sbb
test
xchg
xchg
lods
xchg
jns
ret
xchg
mov
pop
inc
je
xchg
jns
pusha
sti
mov
cmpsl
fists
jb
in
and
push
fisubrs
ja
mov
sub
push
or
mov
mov
enter
out
pop
test
inc
jecxz
stos
mov
dec
dec
jae
lcall
ja
jecxz
shlb
pop
push
test
mov
mov
push
mov
loopne
jnp
mov
pusha
mov
fwait
loope
push
dec
pop
sub
hlt
ret
mov
xor
callw
and
dec
jne
popf
or
testb
dec
repz
and
xchg
lret
lods
jne
adc
mov
je
insl
idivb
adcb
fldenv
or
adc
jbe
inc
out
cs
sub
xor
xchg
repnz
push
mov
sub
test
lea
pushf
push
mov
std
inc
mov
fwait
imul
dec
xlat
jle
pop
fcoms
cltd
and
ds
decb
mov
cmpsb
adcb
pop
scas
stos
pop
insb
push
stos
cmp
aas
ljmp
popa
test
mov
mov
ret
mov
pop
jp
ficompl
test
dec
push
jne
mov
andb
out
andl
aad
hlt
fsubrs
int
cmpsb
jle
pop
sbb
push
faddl
fs
cmpsb
daa
jp
sbb
rcll
xchg
gs
mov
xchg
insb
scas
xchg
lods
daa
mov
or
clc
jge
cmpsb
jo
mov
nop
adc
push
insb
lret
or
int
mov
mov
mov
push
mov
add
loopne
push
icebp
nop
mov
aaa
mov
rclb
faddl
xor
sbb
subl
inc
inc
pop
lret
cltd
dec
out
inc
bound
js
jno
mov
sub
cmp
movzwl
adc
lahf
lea
shll
push
cmp
js
add
loopne
dec
scas
cmc
ljmp
jl
or
add
pushf
or
in
mov
adc
and
or
iret
xchg
xchg
mov
add
dec
jns
es
mov
dec
mov
push
adc
xchg
sbb
cmc
fdivrp
les
fmulp
test
cmc
fs
jecxz
push
adc
ljmp
or
and
inc
add
insl
shrl
jle
inc
aaa
stc
in
and
mov
sbb
lds
out
gs
inc
add
push
xchg
and
out
adc
cld
jge
sub
clc
xor
xchg
iret
xor
ljmp
andl
mov
push
xchg
outsl
adc
xchg
imul
push
push
nop
sub
mov
cs
adc
adc
aaa
mov
sbb
sub
add
hlt
jge
imulb
push
jl
sub
in
mov
cmp
js
jo
ja
xor
test
inc
mov
cltd
jmp
fnstenv
cwtl
sbb
ds
ror
sub
loop
cli
mov
pop
xchg
shl
sahf
aas
adc
xor
mov
fnstcw
xor
test
mov
pushf
pop
aad
pop
mov
rorb
loop
cmp
inc
sub
jmp
popl
scas
es
mov
and
clc
dec
scas
jno
out
or
sti
jle
pop
rcrb
fs
push
clc
add
in
cmpsl
cmp
ljmp
xor
jge
cli
mov
stos
cltd
pop
xorl
mov
xor
push
imul
add
enter
aas
into
sub
push
movsl
push
xor
sbb
lret
aaa
scas
adc
das
inc
leave
pop
push
fidivs
mov
add
int
int
sub
repnz
mov
fdivrl
in
roll
xchg
xor
sub
jle
push
test
cmp
mov
fsubs
nop
jmp
or
mov
xchg
pusha
mov
jp
lret
ss
push
lret
cmp
xor
pushf
inc
nop
sbb
std
dec
aas
loope
push
jno
mov
and
les
pop
scas
dec
cld
into
add
in
dec
inc
mul
and
movsb
cli
mov
or
xchg
mov
outsl
push
add
stos
shll
jbe
dec
dec
dec
pop
jecxz
mov
pusha
test
fsubr
sbb
je
popf
adc
mov
add
push
pop
xor
mov
iret
aaa
jg
lahf
jb
dec
cmp
mov
mov
repz
movsb
xor
jno
mov
pushf
js
xlat
pop
dec
xchg
or
ret
mov
and
inc
mov
dec
and
push
push
movsl
sbb
negl
add
movsl
pop
and
pop
movsl
add
cli
std
stc
fldl
adc
xchg
out
inc
dec
xchg
mov
xchg
les
ljmp
add
test
call
hlt
insl
mov
std
or
inc
pop
cmp
jne
pop
push
lea
scas
iret
icebp
xchg
test
mov
sti
aad
push
fcoms
stos
cs
inc
push
int
xor
xor
mov
jnp
aaa
xchg
xchg
aad
jle
inc
movsb
hlt
imul
sbb
add
push
sbb
into
jns
pop
mov
xor
iret
push
mov
dec
mov
adc
jns
jo
sub
or
mov
and
jmp
sbb
cli
sub
pop
inc
pop
fwait
push
pop
sarb
cmp
xchg
fiaddl
mov
stos
stc
sbb
add
aaa
add
pop
lds
cmc
in
xchg
jle
ljmp
and
jecxz
jbe
cli
mov
jg
out
xor
test
cmpsl
jne
repnz
mov
cmc
push
push
sub
or
mov
cwtl
xor
jae
inc
or
jne
jmp
inc
in
mov
ficoml
jno
cmp
mov
pop
xchg
ss
push
lret
sub
sbb
imul
sub
mov
lods
xchg
shll
push
push
push
or
mov
sub
sub
sbb
aam
jns
cwtl
int3
mov
xor
xchg
push
ret
mov
inc
mov
lods
dec
ret
jb
push
mov
mov
jge
sarb
shlb
cmpsb
inc
aas
jns
ljmp
push
cmp
mov
jg
mov
inc
push
aas
cs
out
push
cmp
jecxz
inc
adc
sarl
adcl
mov
xchg
jbe
adc
add
push
mov
ror
mov
js
and
and
cltd
stos
mov
fdivl
jmp
fldenv
pop
movsl
jns
stos
xchg
push
sub
mov
xor
lmsw
adc
xchg
into
popa
and
fsts
rsqrtps
push
scas
and
in
jbe
mov
daa
cli
aaa
popa
fadds
sub
ds
in
dec
sub
pusha
xchg
add
mov
repnz
sar
icebp
or
movsl
cmp
jge
dec
lea
pusha
mov
dec
xchg
add
jg
inc
loope
in
fdivrl
jae
xor
inc
les
int3
add
pop
or
pushf
mov
sbb
xlat
jge
out
push
sub
cmpsb
lock
xchg
orb
push
dec
mov
cmp
shl
jecxz
mov
fdivrl
lock
andl
enter
inc
stos
fnstenv
test
mov
clc
loop
decb
xchg
and
sub
out
add
push
movl
jg
mov
leave
int3
data16
adc
mov
nop
push
shll
fwait
dec
bound
gs
mov
ljmp
leave
sub
cmp
pushl
sub
jp
test
mov
enter
imul
cmp
popf
aad
loope
cmp
les
or
xchg
lds
iret
je
lds
xchg
cmpsl
jno
scas
add
xor
sahf
mov
sub
rcr
outsb
insb
loop
and
jb
dec
int
jo
ret
jle
fsts
shr
xor
push
hlt
lea
push
movsb
sbb
dec
sbbb
mov
jecxz
popa
xchg
push
int
push
xor
dec
das
and
adcl
cmp
adc
lea
in
or
dec
jno
das
sbb
push
and
cmpsl
cli
adc
jg
es
push
cmpsl
push
pusha
arpl
or
jmp
cs
movsl
push
xor
aas
rorl
lds
shl
dec
shlb
mov
mov
mov
fcoml
cmpl
mov
out
add
ss
xchg
insl
sbbl
mov
adc
push
jno
jns
xlat
adc
insl
inc
pop
sti
idiv
and
jle
mov
push
cmp
stc
pop
fwait
lret
ret
dec
sub
loope
pop
test
or
mov
inc
cli
xchg
lods
out
shlb
cmp
lods
xor
loopne
cmp
decb
jno
inc
push
pop
inc
dec
outsb
add
mov
mov
inc
movsl
sbb
fcompl
pop
nop
loop
xor
xor
bound
int3
pop
or
mov
mov
inc
cmp
cmp
xor
push
gs
add
cmp
xchg
out
and
bnd
test
and
ljmp
mov
push
sbb
mov
pop
cld
dec
push
cmpsl
outsb
repz
dec
xchg
incl
test
cld
push
push
and
push
mov
lea
xor
cwtl
stos
push
rclb
mov
add
repz
stc
push
imul
or
push
mov
and
or
adcl
jmp
ret
sbb
rclb
lret
cltd
pop
imul
xchg
mov
loop
add
mov
sub
dec
push
in
call
sarl
sub
add
xchg
mov
scas
pop
xchg
data16
or
inc
adc
hlt
xor
sbb
pop
imul
jae
mov
cltd
pop
ljmp
jp
add
mov
pushf
lods
add
push
lods
push
ret
push
aam
pop
xor
ljmp
leave
out
out
mov
mov
xor
andb
adcb
jmp
jmp
inc
hlt
int3
xor
pop
pop
xchg
fs
jo
fsts
dec
xor
ficoms
pop
fucomp
gs
sub
andl
push
or
add
arpl
loop
repz
repz
popa
xor
pusha
mov
xor
dec
pop
aad
mov
mov
sub
mov
lods
xchg
rolb
loop
fcoml
cltd
xchg
xchg
and
insl
jno
xchg
in
cwtl
cs
stos
int
pop
aad
jo
and
mov
xchg
imul
cmpsl
jl
pop
cmp
or
cwtl
push
cmpsb
jle
imul
inc
lods
daa
pushl
mov
aaa
je
mov
xchg
adc
scas
out
in
and
cltd
cmp
jb
pop
dec
das
pop
movsb
lds
lcall
ret
ror
inc
aad
and
xchg
push
sbb
mov
pop
dec
add
cld
mov
pusha
adc
jp
cmp
popf
or
xor
adc
dec
ret
adc
and
adc
xchg
loopne
in
jns
mov
mov
xor
pop
hlt
daa
fnstenv
mov
fildl
cwtl
sub
sub
push
pop
sub
push
stc
pushl
xchg
imul
mov
mov
adc
rcl
ja
pop
xchg
xchg
jmp
push
mov
mov
pop
and
mov
and
dec
dec
dec
push
xor
mov
lds
jle
frndint
jbe
adc
push
jbe
outsb
jb
ds
ror
cmp
mov
inc
test
repnz
cs
jae
pop
fwait
jle
nop
movsl
sbb
cmp
out
in
add
push
and
and
jp
sub
push
dec
imul
scas
jo
adc
cmpsl
push
subb
call
mov
sbb
add
aam
test
lods
cmp
push
xorl
pushf
rolb
mov
mov
jns
into
out
movsl
sbb
sub
fdivrs
sbb
push
dec
sub
pop
stc
insb
punpckldq
iret
push
imul
sahf
out
stos
dec
mov
cld
scas
mov
ror
in
mov
ret
sbb
pop
fistpl
cld
je
push
enter
insb
stc
jae
mov
xor
inc
aam
aaa
cmpsl
fs
stos
jnp
mov
pushf
xchg
pop
sar
adc
std
aad
out
out
lods
inc
dec
mov
add
mov
jp
clc
decl
lods
jbe
and
fs
jae
sbb
adc
adc
int3
ficomps
or
icebp
xor
pop
in
scas
fmull
pop
jbe
mov
cmc
fwait
and
push
sbb
pop
sub
add
sbb
psubsb
mov
dec
les
js
mov
mov
daa
bnd
lods
insb
arpl
mov
cmp
add
mov
test
scas
push
inc
mov
pop
and
dec
ret
push
ljmp
add
cmp
mov
pop
loope
xlat
aas
shlb
aaa
mov
pop
pop
es
aas
xor
imul
jno
mov
dec
sbb
clc
xor
fucomip
testl
lods
gs
push
into
inc
push
push
dec
dec
dec
cmp
xchg
out
push
cmp
test
icebp
pusha
mov
enter
or
cli
push
gs
stc
cmpsb
lods
xchg
jge
cwtl
jns
sub
mov
test
or
imul
mov
mov
adc
ret
sarb
sbbb
outsl
lcall
scas
jg
stos
outsl
fcoms
mov
mov
add
int
roll
lahf
adc
pushf
or
testl
or
push
dec
or
and
div
les
cs
pop
dec
push
mov
adc
push
mov
push
ss
das
or
jl
pop
push
fidivs
loope
jo
push
fdivs
dec
cmovg
pop
xchg
cwtl
test
into
aas
and
jg
mov
lock
sub
mov
stos
popf
push
inc
hlt
popf
jge
stos
pushf
jmp
sbb
arpl
imul
pop
rcl
mov
in
sahf
mov
dec
leave
insb
es
mov
ljmp
sub
enter
or
fldcw
mov
push
stos
shll
adc
mov
xlat
and
loope
or
and
xor
pushf
mov
outsb
rclb
stos
xchg
and
fsts
dec
inc
mov
aam
and
aas
test
insb
pop
movsl
xor
fistps
push
push
stc
sub
orb
cwtl
sar
cmp
jbe
add
mov
sub
push
les
pop
ljmp
cltd
mov
rorl
fistl
or
and
mov
inc
test
loopne
pop
stc
aad
in
enter
fnstsw
lock
jmp
fbld
scas
and
cmc
fdivrl
inc
xor
pop
mov
insl
mulb
loopne
xchg
xchg
mov
ds
decl
pop
in
lock
push
mov
cwtl
push
nop
aad
rorb
push
stos
call
xchg
sbb
mov
out
lret
cmc
ja
int
push
sub
cmp
lods
cmpsb
sbb
in
nop
enter
loop
mov
dec
push
imul
mov
mov
jge
mov
loope
stc
sbb
push
adc
arpl
push
mov
mov
outsl
cmp
daa
push
and
out
lock
jg
bound
insl
mov
sub
xchg
hlt
push
inc
les
ficoml
jle
enter
fdivl
cmp
outsb
jb
adc
out
add
das
pop
popf
stos
and
daa
test
shrb
jbe
dec
out
scas
inc
xor
sub
into
push
push
xor
and
mov
xchg
lret
outsl
pop
cmpsb
xchg
inc
negl
mov
loopne
lock
and
adc
fldenv
and
enter
mov
popl
dec
scas
cmp
pop
jno
cltd
sub
popf
pop
idivb
iret
outsl
xor
and
loop
std
xchg
aas
stc
jns
cli
jge
outsb
inc
imul
lods
or
shlb
repz
xor
cmp
ds
lock
mov
out
sti
stc
gs
in
lret
xchg
xor
or
adc
in
cli
mov
je
insb
out
xchg
pop
lret
rdpmc
dec
rcrb
jle
adc
mov
push
dec
xchg
cmc
jb
xchg
jbe
xchg
insb
stos
mov
inc
loop
dec
inc
adc
outsl
cltd
adc
xor
mov
mov
sbb
addr16
div
sub
or
iret
ret
ss
inc
rep
in
vpcmpeqd
in
sahf
inc
arpl
cmpsb
lret
icebp
add
shrl
sbb
xchg
cli
push
cmp
mov
jbe
add
js
jae
xlat
in
mov
std
pusha
jecxz
push
stc
cwtl
push
lret
mov
cmp
pop
insl
push
sarl
xor
dec
lcall
js
mov
jae
insl
xchg
into
mov
or
repz
push
lock
test
cwtl
pusha
insl
or
sbb
xor
sub
repnz
pop
sahf
leave
pop
test
frstor
sub
cmc
mov
push
or
jae
rcr
and
or
dec
mov
scas
imul
push
enter
out
aaa
sarl
mov
jbe
ret
cmc
push
inc
dec
stos
xchg
ja
mov
dec
cmp
jne
pop
push
xchg
sbb
dec
and
xchg
andl
and
jecxz
jg
out
nop
int
out
inc
aam
and
xchg
cmpsb
cmpsb
sub
test
rclb
daa
and
cmc
push
addl
pushl
stc
not
jae
mov
lods
outsb
into
fldl
sbb
jl
shl
jmp
pushf
mov
mov
daa
dec
mov
fldcw
adc
in
push
xor
aas
in
and
inc
xor
sti
leave
pop
test
cmp
aas
mov
cltd
movsl
mov
mov
push
mov
out
mov
xor
pop
or
xchg
fs
loop
pop
and
fcmovbe
lret
dec
xor
imul
and
push
add
jno
bound
leave
subl
and
cmpl
cmpsl
jno
mov
inc
lods
jmp
repnz
les
inc
add
xchg
in
or
int3
xchg
xor
test
mov
sti
xchg
call
and
mov
mov
mov
insl
pop
outsb
ds
xlat
es
insl
inc
test
pop
sbb
insb
push
cmp
dec
mov
sti
xchg
pop
pop
lock
int3
enter
inc
cs
imul
bound
mov
call
and
in
icebp
out
loopne
adcl
fs
mov
sub
mov
jge
cltd
ret
stos
jae
mov
mov
sub
and
push
les
or
push
inc
push
out
sub
imul
dec
addl
data16
les
sti
loop
fsts
inc
rol
lret
lret
shll
cmc
pushf
rclb
dec
mov
ror
stos
sahf
adc
in
push
movsb
or
mov
out
cmp
inc
jg
faddl
sarb
mov
sti
jbe
lods
mov
sub
sahf
jne
mov
imul
sbb
js
lret
fidivrl
sbb
call
jnp
rorl
mov
lea
adc
mov
imul
dec
fistps
jg
popf
jns
jge
jnp
rcll
cli
in
pop
inc
lahf
sbb
cli
pop
mov
ficoms
xchg
lds
cmp
mov
and
shll
mov
jbe
repnz
mov
cmp
or
push
cmp
xchg
aad
int3
dec
loope
sub
push
hlt
lods
mov
movsb
mov
fwait
scas
jmp
jb
jo
es
sub
fstpl
adc
sub
pop
mov
test
mov
rorl
dec
push
sub
xchg
lahf
mov
sbb
fdiv
stos
push
in
push
int
sbb
cmp
add
jg
mov
jg
lock
pop
or
dec
loope
cltd
mov
push
cmp
aam
scas
cmp
lahf
shl
mov
out
push
mov
subb
jae
cmc
pop
dec
cmp
xlat
out
fwait
scas
lcall
sti
mov
push
mov
leave
shrb
and
sbb
jecxz
sub
cmc
into
add
ret
xchg
xlat
aaa
jge
repz
testl
les
testb
push
mov
mov
rorl
lret
rolb
inc
fcompl
lahf
pop
aam
jae
in
lahf
loope
pop
nop
push
lcall
ret
add
and
pushf
stos
jne
push
mov
cmpsl
add
mov
shl
js
lea
jmp
mov
lea
sahf
sarl
xor
js
cmp
fwait
xor
in
or
sbb
fsqrt
sbb
jno
dec
jle
or
daa
xchg
lret
insb
and
sub
pusha
cmpb
adc
mov
sub
pop
out
and
rcrl
out
jbe
xchg
sub
sbb
adc
adc
mov
inc
cmp
cwtl
int3
add
orb
push
mov
mov
enter
jle
dec
mov
pop
push
and
mov
push
aam
into
push
cmp
fdivrl
jae
cli
mov
test
cmpsl
add
cmp
pop
push
or
or
cmp
pop
mov
pop
cli
outsb
sub
jne
outsl
sbb
sbb
cld
ljmp
push
das
cmc
push
pop
push
dec
lock
and
xchg
jae
pop
push
aaa
push
scas
mov
cmp
jns
sbb
out
repz
in
adc
lods
add
sqrtps
lcall
bound
mov
xchg
lock
loop
adc
daa
xchg
mov
js
jo
sbbl
push
mov
lds
mov
dec
faddl
add
xor
cmc
xor
jge
popf
jmp
fdivrs
icebp
adc
ret
or
cld
pop
mov
in
xor
ja
cwtl
and
repz
adc
bnd
mov
cld
pop
jno
dec
sub
je
aam
decb
jge
pop
jg
mov
stos
dec
fcoms
mov
xor
push
addr16
loop
test
movsb
loope
ja
push
adc
xor
mov
sub
notl
lods
xorl
mov
inc
std
sbb
hlt
cld
cwtl
mov
ret
into
mov
dec
cmc
sub
inc
mov
mov
lcall
add
fldenv
rorb
push
mov
fs
inc
adc
stc
pop
flds
dec
adc
xor
out
daa
lret
and
or
cmp
cmpsl
fstps
int3
push
mov
fstl
subb
call
dec
insb
jb
mov
mov
jmp
aas
daa
sub
adc
push
ds
ja
adc
scas
mov
adc
test
popa
lret
xor
aas
ss
jb
ret
or
test
mov
mov
fmuls
cli
or
xchg
hlt
out
xor
dec
jmp
push
sub
add
int
mov
cmp
orb
jb
mov
push
repnz
movsl
pushf
and
shr
lret
imul
mov
mov
mov
into
int3
jno
stos
sbb
jns
cmc
inc
ss
loop
mov
clc
pop
fsubrs
in
repz
pop
xchg
fnstcw
mov
mov
add
mov
cmp
sub
jae
add
fnstcw
push
in
arpl
inc
push
cmp
rcr
add
cmp
int
xchg
in
outsb
scas
addl
loopne
xchg
fwait
jecxz
enter
xchg
stos
lret
jp
jmp
fldt
mov
sbb
hlt
ds
inc
hlt
scas
scas
and
pop
loopne
push
outsl
nop
into
jns
aad
sbb
adc
mov
cmp
mov
in
dec
push
jno
or
jmpw
xchg
jae
jecxz
mov
dec
cmc
pop
shrb
or
cmp
inc
fwait
mov
lea
mov
push
push
jmp
int3
jl
pushf
xchg
inc
cmp
push
in
dec
repnz
push
xchg
imul
mov
imul
enter
cwtl
add
popf
repnz
clc
fstl
sbb
pusha
cmp
xchg
and
sbbb
cs
psllw
imul
mov
add
nop
ficompl
mov
mov
in
mov
cmc
push
addr16
inc
and
pop
pop
into
jp
inc
bound
pop
movsl
jmp
pop
std
dec
push
or
cmp
pop
mov
mov
mov
pop
insl
sub
push
cwtl
xor
mov
addr16
es
sub
adc
mov
mov
cmp
mov
jnp
push
jg
rcrb
insb
stc
cld
inc
jnp
sbb
mov
pop
push
jge
jnp
shlb
stos
mov
adc
mov
xchg
push
lret
mov
push
or
pop
popf
xchg
sub
shrb
mov
inc
test
ljmp
sar
imul
jns
pop
aaa
mov
push
das
fs
push
loop
push
dec
or
out
repnz
sub
inc
fidivs
movsl
sbb
mov
negb
data16
lcall
int
lcall
mov
jmp
pop
fdivs
cmp
repz
mov
std
sti
cmpl
out
test
test
dec
in
xor
enter
mov
mov
rcr
in
pusha
mov
pusha
cli
pop
inc
rol
adc
in
stc
cmp
lds
stc
inc
push
lcall
push
sti
mov
aad
in
rcll
idivl
hlt
xchg
mov
test
test
mov
adc
push
jnp
inc
push
ret
call
pushl
lods
jg
mov
add
mov
ficoms
xchg
pop
les
bound
into
hlt
jl
ds
cmc
mov
sti
popa
sbb
pop
cli
xchg
mov
cmp
lea
jle
mov
popf
xchg
leave
lock
js
aad
ss
and
xchg
mov
adc
sbb
jae
pop
icebp
test
inc
into
cmp
inc
mov
and
cmpsb
push
mov
popf
push
mov
scas
imul
or
and
outsl
cmp
in
leave
out
cmpsb
or
mov
scas
daa
push
inc
scas
add
les
mov
aam
and
ret
cmp
push
js
or
inc
mov
add
test
je
xor
push
inc
push
popa
ljmp
icebp
fimuls
rol
ret
sbb
ja
loope
ret
or
out
and
jae
push
xchg
or
movsl
wrmsr
xlat
test
jae
mov
adc
xchg
sbb
sbb
inc
rorb
mov
sbb
xor
inc
xlat
dec
das
mov
pop
xor
push
push
rorl
fs
hlt
mov
ljmp
sbb
bound
push
or
add
mov
in
popa
jns
mov
lahf
jecxz
sbb
addl
inc
add
pop
pop
cli
pop
adc
xchg
aaa
shlb
flds
into
xchg
push
and
jo
pop
in
les
lods
mov
lods
loopne
cld
jg
or
inc
out
xor
sti
ss
cmpsl
sub
decl
repz
add
push
les
rolb
fsubs
outsb
and
pop
loopne
cmpsb
xor
xor
and
lods
gs
les
adc
or
das
adc
sbb
mov
cmp
mov
pop
stos
mov
sub
in
in
jge
dec
mov
loope
and
sub
and
aaa
or
pop
pop
inc
sub
inc
push
or
les
sarb
jmp
sti
dec
and
mov
gs
out
mov
jb
pop
lods
aad
or
ss
dec
sahf
aas
dec
push
mov
in
dec
int
jb
sbb
aam
jge
aaa
cmp
es
enter
icebp
out
hlt
inc
ror
inc
xor
push
dec
jns
mov
mov
and
movsl
rolb
ss
js
mov
inc
mov
xchg
lcall
aas
cmp
inc
push
sbb
push
push
jb
stc
sub
mov
aaa
dec
add
sub
xchg
icebp
andb
insb
adc
cmp
fs
xchg
and
add
sar
mov
inc
arpl
sti
pop
inc
clc
dec
lret
mov
out
retw
inc
lds
jb
sbb
rclb
and
imul
or
dec
pop
jne
sub
in
sub
stos
add
jle
aas
adc
ds
std
loop
rcll
cmc
mov
dec
jno
clc
dec
sub
test
pop
or
cmp
out
fsubp
sub
xchg
inc
adc
jne
in
or
daa
js
jp
jge
lea
push
ljmp
jo
jge
pcmpeqd
cmp
add
push
sbb
mov
jecxz
stos
stos
jne
jo
scas
inc
and
lret
adcb
jbe
cltd
mov
add
dec
dec
mov
daa
ret
and
mull
push
push
pop
stos
into
nop
mov
mov
enter
jno
iret
mov
mov
mov
loop
cmc
rorl
push
bound
bound
push
or
mov
in
ret
mov
sbb
fcmovnbe
out
push
xchg
lock
in
push
push
pusha
out
sti
mov
idiv
adc
xchg
das
lret
push
repz
and
jb
inc
lea
fildll
repnz
out
cmp
mov
pop
fcmovnbe
mov
push
lods
arpl
pop
push
test
adc
stos
scas
stc
mov
mov
pop
pop
or
add
jne
sbb
cli
pop
inc
dec
sub
jae
cld
fcmovnbe
or
xor
pop
push
test
xchg
sub
hlt
test
addb
jge
lock
mov
nop
and
mov
mov
ret
lods
and
sahf
incl
orl
pop
int3
test
lods
flds
testl
or
cwtl
movl
shrl
xor
or
adc
test
mov
cmp
jp,pn
cmp
xchg
movsb
insl
ljmp
cmpsl
mov
cmp
add
lods
pop
sub
jnp
sbb
arpl
jmp
lock
jbe
jnp
pop
push
test
out
sbb
mov
cmp
subl
orb
cmc
lds
aad
cmp
lahf
add
dec
shrb
sub
xorl
shrb
inc
xchg
pop
mov
push
mov
hlt
sbb
mov
mov
jne
out
lret
ret
fcmovnu
jg
aas
jl
int3
sub
jecxz
or
sbb
xchg
cmp
daa
out
or
push
out
or
mov
inc
arpl
inc
lods
sbb
mov
shl
push
mov
pop
jnp
test
stos
mov
ret
pop
test
sub
call
mov
sub
ficomps
pop
mov
jae
loope
dec
push
shll
or
mov
bound
sub
scas
out
cmp
popf
jo
rcl
stc
fsubl
sarb
lods
out
dec
gs
inc
sahf
push
push
int
sub
pop
in
mov
pop
sti
mov
jne
decl
push
pusha
pop
call
les
and
cli
mov
arpl
mov
xchg
loope
inc
fsubr
adcl
pop
jbe
pop
dec
adc
imul
jge
inc
push
and
fsubl
rcrl
gs
mov
subb
outsb
or
outsl
mov
sub
sbb
add
jg
mull
jo
fs
jb
mov
push
inc
test
gs
leave
mov
xor
and
cmp
pop
jo
imul
loope
jg
add
neg
test
jae
ds
xor
mov
ja
cmp
cli
popa
fsubs
sub
dec
xor
add
sbb
sbbb
orb
test
sbb
mov
test
fnstcw
inc
cmp
nop
cmp
stos
in
ret
add
fistl
cs
cmpsb
xor
inc
test
push
xchg
lahf
xor
dec
xchg
inc
and
popw
xor
push
leave
scas
push
sbb
fadd
pop
bound
fprem
scas
shrl
cmp
fsubl
into
sub
or
lea
dec
ror
cmpsl
and
roll
inc
mov
cmpsb
pop
movl
subb
dec
ret
fnstsw
insb
ror
jo
xchg
cltd
fsubl
in
push
data16
push
lods
sbb
rcll
pop
xor
sub
into
in
push
and
cmp
mov
sahf
stos
mov
dec
xorb
sbb
mov
adc
xor
sub
loope
addl
mov
adc
pushf
push
orb
fidivrl
jmp
xchg
test
mov
mov
orl
in
xchg
pusha
jp
lods
stos
imul
sub
and
mov
and
arpl
call
fnsave
mov
loop
adc
out
xchg
dec
push
xor
clc
out
test
leave
jne
pop
add
jae
lret
sbb
aad
fcomip
pop
mov
mov
lahf
aad
mov
jbe
pusha
mov
push
mov
mov
xchg
leave
aad
cmp
or
sbb
or
inc
sub
jnp
push
sub
out
mov
jo
adc
je
pop
sub
jo,pn
jo
mov
jl
lahf
in
lret
xorl
sbb
cmp
movsb
push
out
jg
sub
jae
int
jle
add
loop
or
adcl
outsb
mov
roll
ret
fimuls
hlt
sub
call
and
out
or
mov
mov
mov
mov
add
push
push
xchg
inc
and
jo
inc
jo
je
mov
jns
and
in
mov
movl
int
mov
vpinsrw
sub
mov
pop
mov
pop
aam
push
push
test
cmp
incb
test
add
pop
and
call
or
pop
aam
js
fwait
enter
cmpsl
pushf
jle
in
adc
je
sub
fs
insl
adc
nop
mov
dec
inc
in
push
jbe
out
aad
push
mov
xchg
mov
lods
jno
int3
mov
xor
push
xchg
popa
sub
inc
sahf
subb
jg
xchg
in
adc
add
test
mov
and
das
mov
inc
scas
mov
gs
test
imul
push
test
std
test
add
ds
iret
bswap
leave
xchg
push
repnz
hlt
adcl
dec
repnz
xor
mov
int3
sub
or
std
sbb
aad
jp
in
inc
mov
add
div
out
mov
js
mov
insb
xchg
sbb
nop
lea
push
lock
ret
jo
or
outsl
sub
and
push
clc
mov
lea
test
bnd
sti
mov
cli
mov
js
cli
or
mov
mov
adc
mov
std
adcb
shl
sbb
andl
push
mov
add
data16
sub
je
jmp
cltd
lret
cmpsb
enter
and
lahf
or
and
add
and
out
push
cmpsb
sub
fcompl
fwait
mov
mov
fistl
xchg
xchg
scas
xchg
std
mov
addb
fisttps
loop
jmp
out
and
mov
iret
movsb
fsubs
pop
into
cmp
in
shl
pop
push
push
aam
pusha
in
inc
mov
push
negb
push
fsubs
or
je
xor
call
push
das
jne
arpl
sbb
outsl
and
jmp
aaa
pop
sub
out
popa
and
add
sub
pop
jae
insb
add
imul
pop
sub
dec
sbb
stos
ret
clc
subb
fadd
rcrl
dec
xor
fldcw
out
jmp
jge
out
fiaddl
in
pop
jp
cmpsl
jnp
pushf
pop
sub
test
jle
pop
fdivr
sub
fsts
pop
pop
test
jnp
pop
movsl
push
lea
scas
pop
pop
inc
jo
dec
data16
mov
mov
out
xchg
js
jmp
pop
imul
shl
add
daa
xchg
ret
xchg
sub
mov
mov
enter
inc
mov
gs
stos
cltd
adc
sub
mov
xchg
jle
faddp
data16
lret
add
out
js
shlb
inc
in
mov
loopne
sub
jl
test
adc
adc
into
pushf
sbb
lret
movsb
movsl
push
mov
push
jl
ror
adc
mov
mov
sub
inc
outsb
fists
mov
mull
pop
xor
stos
mov
jp
jg
in
rcrb
cld
push
out
mov
adc
pop
lods
test
jno
jecxz
ficompl
jmp
mov
iret
loope
and
cmp
movsb
dec
mov
inc
jae
or
xor
mov
dec
fldcw
outsl
cwtl
lods
idivl
mov
adc
fildll
orb
jl
adc
lock
leave
lcall
push
fdivr
or
sub
repnz
pop
out
shll
xchg
iret
fsubs
mov
fnstsw
rolb
lcall
ljmp
aas
divl
ja
fistpll
pop
or
xchg
loopne
and
or
sub
movsb
xchg
andb
mov
fbld
aad
pop
in
cmp
scas
idivb
mov
mov
xchg
mov
les
nop
cmp
add
aad
jae
sbb
adcl
or
shl
push
std
divb
cmpl
repnz
pusha
jl
push
lret
in
xchg
jo
ja
cwtl
and
jg
fisttps
xchg
dec
movsl
gs
pop
out
negl
sti
in
sub
adc
sub
shr
xchg
jnp
push
sbb
rcrl
inc
inc
pusha
cmp
inc
cwtl
push
mov
cmp
sub
dec
jbe
inc
in
or
rcrb
jle
popa
and
fisttpll
loope
fiadds
sbbl
fs
sahf
lds
fbld
mov
loopne
add
lret
stc
push
shll
cmpb
cmpsl
in
add
cmpsl
dec
add
sub
imul
jno
xchg
movsb
in
dec
loop
add
outsl
mov
pop
add
pop
outsl
repz
cmp
cld
mov
and
fwait
dec
mov
add
int
cmc
call
insb
add
xchg
xchg
in
mov
dec
insl
jg
fmul
or
mov
mov
mov
movsb
cwtl
sbb
rcrb
and
std
fwait
cmp
sets
clc
cmovno
cmpsb
lods
ret
movsb
data16
scas
aaa
inc
pusha
add
dec
insb
mov
data16
push
cmp
xchg
push
sbb
mov
adc
mov
hlt
out
shlb
push
mov
sub
mov
int
mov
gs
sub
adc
dec
out
mov
jg
sarb
daa
sti
sahf
inc
pop
mov
test
icebp
xor
movsl
vcvtpd2psy
and
mov
inc
or
shrb
daa
jle
jne
idivb
push
add
daa
xchg
in
movq
cmp
and
push
push
es
sbbl
or
repnz
out
sub
and
mov
xor
lock
iret
inc
hlt
int
sub
sbb
fiadds
repz
daa
dec
cmpb
in
pop
popf
inc
add
jnp
jne
js
movsl
jnp
pop
cmp
sub
lods
xlat
imul
in
int3
or
mov
ljmp
loopne
mov
jns
and
loop
aaa
jo
push
sbb
adcb
mov
lods
std
mov
lods
cmp
inc
dec
ljmp
xchg
stos
pop
imul
bound
imul
stc
repnz
push
fdivrl
jbe
popa
mov
pop
sbb
shll
dec
ret
in
push
test
add
sub
clc
nop
rorb
out
push
fimull
pop
fcmovnb
into
ret
jmp
iret
pusha
jb
negb
dec
pop
shrb
sbb
or
pushf
sbb
js
ja
fdivrl
mov
adc
add
push
push
mov
mov
or
sub
jg
fwait
rcr
mov
mov
cmp
push
call
push
negb
jbe
cltd
pop
rol
sub
and
in
and
xchg
adc
or
dec
popf
fsubrs
cmp
adc
cmpsl
sbb
roll
hlt
test
xchg
pop
xor
lcall
pop
mov
lods
xchg
in
insb
lods
ljmp
cmpsl
dec
or
xchg
fwait
in
add
gs
cmc
mov
ss
jne
xor
imulb
fdivr
cld
das
mov
addr16
rcl
lock
fdivrs
loopne
pop
mov
xor
aas
mov
rclb
push
lock
fcoms
dec
xchg
int
jae
jae
out
jmp
gs
cmp
cmp
fidivrs
mov
push
out
mov
movsl
lahf
mov
rcrb
sub
mov
and
mov
mov
ret
adc
inc
or
test
pop
xchg
pop
repz
movsb
push
shlb
or
lock
sbb
pop
lds
int3
mov
rcll
shrb
mov
pop
mov
or
cmc
pop
cld
or
ret
cmp
int
cltd
mov
imul
out
in
mov
loopne
mov
xor
mov
dec
lds
xor
scas
cmp
mov
xor
or
pusha
and
fs
scas
push
into
mov
dec
js
pop
jb
lds
xchg
cmp
lret
test
test
je
jecxz
loope
mov
js
adc
aas
imul
data16
adc
adc
push
or
sbb
add
xor
imul
imul
iret
mov
movl
jbe
loope
stos
add
push
push
mov
dec
call
dec
adc
lods
jb
push
push
push
pushfw
xchg
jmp
dec
sbb
dec
mov
frstor
add
mov
sbb
or
and
dec
inc
aas
xchg
ss
push
fwait
jb
dec
sub
jle
inc
mov
rolb
mov
arpl
or
shlb
jno
inc
cwtl
outsl
xor
sub
cmp
fsubrl
test
je
dec
cltd
pop
pushf
dec
addr16
sub
pop
neg
int3
pusha
pop
call
jno
in
adc
dec
lods
cmpsb
cmpsl
gs
shl
lret
testl
popf
cmp
jp
ret
aam
cmpsl
cmp
call
sbb
push
xor
or
test
inc
pop
jecxz
lret
pop
sbb
out
int3
mov
stc
lahf
shrb
or
std
test
setns
negb
pop
imul
push
xor
imul
loop
test
inc
inc
sub
adc
jecxz
mov
fucomip
xorb
pushf
xchg
mov
mov
insb
push
xchg
xor
rolb
in
dec
adc
xchg
cmp
mov
aas
cmp
dec
sahf
push
add
popa
insb
aaa
lahf
aas
adc
mov
push
mov
mov
test
stos
mov
sub
dec
mov
pop
or
sub
adc
das
test
mov
sub
fistps
daa
scas
cwtl
push
sbb
add
scas
ret
push
outsl
add
daa
xor
mov
sbb
das
je
jl
iret
jae
pop
sbb
and
enter
push
mov
dec
adc
jbe
mov
pop
jge
mov
jbe
adc
pushf
dec
loopne
fisubs
inc
mov
inc
push
or
mov
pusha
and
fstps
push
mov
xchg
jle
jno
jne
cmpsb
cmc
aas
xchg
dec
pop
and
dec
lods
and
add
push
cmp
xor
xchg
fbld
ja
sbb
inc
pop
fnstenv
or
scas
adcl
mov
mov
push
insb
mov
sub
loope
int
outsb
in
mov
lds
or
testb
jo
sbb
cmpsb
repz
cmp
push
ret
dec
out
mov
push
pop
jg
sub
int3
pop
jnp
mov
adc
pop
mov
iret
push
mov
les
aam
cs
test
sbb
es
clc
jp
enter
fdivr
fs
jle
cmp
fldt
or
arpl
pop
or
stos
test
sbb
pop
pop
xor
jnp
or
or
pop
sti
sbb
dec
out
movq
adc
push
cmc
pop
fdivr
pusha
dec
dec
dec
testb
mov
scas
mov
mov
into
idivb
push
adc
push
pop
mov
and
pop
jno
mov
out
sub
inc
xor
mov
add
arpl
lods
mov
push
or
hlt
xchg
pop
subb
inc
jle
mov
sbb
imul
xchg
lret
add
jnp
mulb
cmc
and
add
cs
push
out
je
jle
xchg
insl
loopnew
popf
or
aam
mov
add
push
push
test
movsl
jecxz
out
xor
cmpsb
popa
xchg
adc
cwtl
out
bound
sbb
loop
inc
sbb
lahf
bound
fdivrl
jmp
ret
dec
xor
cmpsb
je
dec
jbe
cmc
shlb
imul
and
mov
xor
loop
jecxz
fs
adc
add
inc
test
cmpsb
negl
es
mov
in
shll
lods
negl
imul
outsl
dec
addr16
dec
loope
mov
push
int
cli
cli
dec
into
dec
shl
xor
jmp
jle
loope
cmpl
adc
mov
jecxz
gs
das
jecxz
inc
xor
push
dec
mov
cltd
adc
mov
cltd
movsl
shlb
dec
lea
pushf
push
pop
sarb
fwait
mov
inc
in
adc
inc
add
adc
lret
adc
and
jl
cli
stos
loope
cwtl
and
inc
and
and
xor
push
imul
ret
adc
aam
xorl
bound
repnz
rcl
scas
shr
sbb
inc
pop
jb
inc
lahf
lret
negb
or
rcrl
push
imul
aaa
sbb
shlb
pushl
sub
popf
mov
xchg
rcll
add
pop
sub
out
sbb
push
arpl
push
fldenv
xchg
push
or
popa
mov
push
mov
pop
jo
jb
pop
jb
jb
dec
popf
loop
and
mov
mov
cs
cli
adc
fcmovb
jge
add
lods
mov
fs
stos
addr16
popf
push
int3
adc
cli
pop
loope
rorl
cld
or
stc
mov
lret
clc
fists
dec
jnp
fdivp
decb
insb
sbb
mov
or
adcl
adc
mov
iret
aad
enter
sbb
push
out
and
mov
sbb
sbb
lret
xchg
lea
xor
jo
cli
push
nop
mov
out
inc
out
jge
test
sub
fwait
push
leave
adc
mov
jle
mov
adc
xchg
mov
mov
test
or
mov
fwait
xor
xlat
gs
int3
push
pop
lcall
jno
aam
cmc
stc
movsl
mov
mov
dec
push
dec
sar
and
stc
dec
adc
ret
inc
stos
mov
pop
mov
inc
cmp
dec
sub
and
adc
mov
pop
mov
inc
jns
loopne
out
add
jecxz
xchg
aad
repnz
divb
inc
test
xchg
dec
cmp
cmp
into
lea
lea
dec
push
cwtl
inc
xor
adc
xchg
or
sbb
ss
testb
lahf
inc
sub
out
mov
and
punpckhwd
cwtl
jae
gs
sbbl
out
adc
addr16
mov
cmpsl
mov
mov
faddp
or
xchg
out
sahf
das
cmp
jo
sbb
or
add
add
ss
push
outsb
addl
js
fnsaves
xchg
fcoms
push
addl
add
cmpsl
or
adc
mov
in
or
in
dec
pop
bound
xchg
loope
mov
mov
cmp
fistl
xchg
add
jns
test
sahf
adc
insb
sbb
inc
xlat
pusha
xchg
std
inc
sbb
dec
sub
xchg
dec
js
in
dec
js
or
or
jae
mov
adc
xchg
loopne
mov
xchg
loope
gs
pusha
jp
fisubrs
lret
dec
mov
out
mov
movsb
cmp
decb
mov
bound
jl
test
mov
insb
and
and
stos
adc
and
add
hlt
xchg
adc
insb
mov
stos
decl
std
xchg
inc
popa
sbb
shr
sub
pop
jmp
mov
loop
fimuls
leave
mov
loope
push
sarb
adc
mov
popa
out
inc
jmp
mov
repz
into
jb
fdivs
xlat
sbb
aas
cmp
jns
mov
add
jns
cmp
pusha
insl
xchg
mov
xchg
xchg
ja
cmp
jae
mov
and
enter
outsb
and
or
dec
add
les
ljmp
loopne
bound
add
push
push
mov
add
inc
sbb
add
jne
dec
mov
jmp
inc
lcall
sbbb
sub
mov
loop
jnp
xchg
cmp
cmp
xor
xor
pushf
repnz
xchg
out
xchg
fstpl
mov
out
lock
push
sub
xchg
mov
repnz
sbb
rep
push
dec
dec
outsb
popf
lods
or
jb
add
mov
shl
mov
sub
push
in
push
nop
sub
aad
lcall
push
jge
pop
mov
mov
int3
rorl
test
dec
loopne
andb
xor
loope
xor
leave
lcall
andl
mov
ljmp
cmpsb
adc
pop
xchg
xor
in
sarb
jb
lods
andl
shrl
xchg
addl
test
stos
push
and
ss
cwtl
mov
insb
xor
addl
pop
xor
clc
pop
adc
lods
jne
insb
xchg
aad
aad
scas
push
stc
aam
addr16
aad
test
punpckldq
loopne
jg
adc
sub
jp
sidtl
pop
pop
ret
add
jp
sahf
adc
and
ret
push
into
inc
cwtl
test
out
sbb
xor
push
repz
add
enter
mov
push
je
mov
push
fsubs
jge
jae
xor
push
insb
push
sub
dec
pop
and
xorl
sbb
test
out
enter
mov
filds
pop
dec
pop
push
loope
out
push
pop
pop
mov
xchg
shl
int
jno
or
adc
xor
aaa
outsb
mov
dec
pop
adc
mov
inc
xchg
ret
data16
push
outsl
xchg
cmpsb
sbb
adc
mov
fcmovu
adc
jp
jb
push
int3
and
xchg
hlt
je
push
popf
es
push
int
add
sbb
pushf
push
fcoml
scas
pop
mov
cmp
push
iret
mov
push
add
lods
and
in
and
mov
aam
fs
minps
adc
mov
push
sub
stos
je
xor
mov
sub
aas
fisubl
std
xchg
pop
jecxz
sbb
ret
sub
repz
ljmp
mov
sub
sub
jnp
push
xor
adc
xor
adc
ret
aad
jle
mov
adc
fldl
arpl
hlt
out
cmc
or
or
xchg
adc
mov
pop
jne
rcll
js
pop
or
aam
pop
ss
call
fisttps
cmc
push
cmp
popf
add
into
push
ret
cmp
lret
leave
nop
ror
fcmovne
insb
cmp
xchg
popa
das
cmp
adc
inc
jb
aaa
in
xchg
jb,pt
push
stos
push
lahf
mov
in
test
jo
stos
push
negl
or
lock
pop
clc
aad
test
shrb
push
adc
pop
notl
int
inc
add
popf
repz
inc
call
frstor
mov
jl
adcb
insl
inc
scas
mov
lcall
ljmp
cwtl
data16
jns
inc
sub
data16
nopl
or
mov
jg
mov
push
lock
cmp
fdivs
fldcw
js
jecxz
pushf
scas
mov
mov
ficomps
std
rorl
stos
pop
inc
jno
push
rorl
jne
push
test
xor
data16
dec
in
es
inc
pop
jp
adc
clc
push
dec
cmp
pusha
xchg
sbb
fcompl
mov
sbb
sbb
sub
mov
push
lds
adc
fsubrs
pop
cmp
push
cmp
or
cmpsl
mov
cmp
pushf
loop
lock
mov
push
adc
jne
pop
hlt
scas
dec
push
int3
dec
jge
pop
cmp
push
repz
add
sbb
jg
jae
jns
or
jo
jae
and
push
scas
popf
std
mov
fiaddl
sbb
inc
leave
rcrb
inc
dec
fmuls
mov
addb
sub
add
dec
inc
and
jo
rcrb
pop
mov
lea
test
test
add
xor
aaa
scas
repnz
cmp
mov
dec
mov
or
inc
stos
das
iret
pop
rcll
cmp
lock
cwtl
cmp
dec
dec
or
fists
and
cmp
ljmp
das
dec
lcall
out
mov
jns
fldcw
jae
es
xchg
insb
cmp
idiv
and
rolb
cmp
cmp
icebp
das
jl
mov
fwait
jl
shl
jo
fsubl
cmp
sarb
dec
cmp
bound
lea
cli
dec
subl
mov
sub
cli
mov
pop
mov
pop
repz
ljmp
stc
push
je
mov
xlat
fwait
pop
or
add
push
inc
and
jns
add
aaa
enter
mov
mov
xorb
mov
xor
jle
sbb
or
andb
sbb
cmp
sbb
cld
repz
jge
pop
jnp
dec
inc
andb
out
sarl
xor
hlt
lcall
cmp
push
nop
mov
out
jmp
jb
mov
adc
jns
pop
dec
add
fsubrl
scas
fnstsw
je
imul
scas
stos
add
dec
movsb
daa
dec
mov
cltd
jo
in
imul
daa
sti
pop
cmp
dec
adc
scas
pop
dec
pop
js
or
in
push
test
mov
jecxz
std
mov
pushf
clc
out
xchg
insl
pushf
jb
xchg
outsl
sbbl
mov
xor
test
xchg
das
faddl
mov
jno
xor
adc
pop
arpl
pop
test
imul
sbb
inc
cld
inc
leave
and
mov
add
jecxz
jmp
lds
mov
sbb
out
xchg
xchg
and
sbb
lods
loopne
mov
ret
sbb
xor
sti
jno
jp
pop
xchg
and
loope
mov
insl
mov
inc
and
jb
loopne
jb
mov
in
inc
outsb
push
int3
insl
or
push
inc
jo
pushf
cmc
fdivrs
popa
lea
sub
into
in
inc
jnp
xchg
pop
mov
rcrb
test
inc
lods
mov
or
int3
push
xchg
cs
arpl
pop
stos
rcrl
call
loopne
mov
lds
xor
iret
dec
xchg
or
outsl
xchg
rcl
mov
in
je
and
mov
sbb
jns
add
sub
mov
negb
lret
aad
sbb
mov
insl
in
pushf
mov
pop
in
inc
rorl
lret
push
scas
pop
xor
lods
push
imul
and
sbb
sarb
outsb
dec
in
mov
and
stos
fldcw
xchg
lods
push
sub
outsb
daa
pushf
sbb
repnz
mov
imulb
push
push
or
jecxz
lock
adc
aaa
ret
mov
pop
or
aas
mov
sbbb
out
scas
out
jge
sbb
popa
pusha
je
dec
inc
int3
fcomps
mov
push
outsb
mov
sbb
enter
jo
imul
jecxz
sbb
push
sbb
sub
pop
sub
test
orl
insb
bound
add
insb
sti
and
out
add
mov
or
dec
mov
leave
push
or
sbb
in
adcb
jo
cli
cmp
sbb
and
lods
add
ja
pusha
cmp
xchg
sub
enter
pop
mov
jno
jne
ss
adc
repnz
add
xchg
pop
outsl
xor
repz
inc
xlat
mov
shll
xor
mov
loopne
orb
push
in
sub
outsb
fsubs
repz
mov
leave
bound
xor
jbe
rcr
loopne
push
fnstsw
outsl
xchg
mov
call
outsb
cmpl
mov
aad
jns
mov
daa
cmp
into
cmp
cmp
test
mov
stos
mov
xor
loop
icebp
push
rclb
mov
pop
das
pop
popa
add
lea
fsubrs
adc
cmpsl
jb
adc
jle
dec
push
mov
stos
push
dec
jbe
dec
call
insl
outsb
cwtl
loopne
fsubl
mov
adc
jp
fcmovnb
cmpsl
and
popf
jecxz
shrb
sub
jp
add
sub
in
jmp
and
fucom
and
les
js
pop
je
dec
leave
subl
mov
and
mov
and
nop
out
mov
pop
iret
fisubl
dec
shll
mov
sbbb
xchg
xor
icebp
push
divb
lahf
sahf
rsm
xchg
nop
cs
push
xchg
cld
loopne
test
fsts
add
mov
or
enter
out
pop
es
in
push
jmp
cmp
add
and
pop
je
outsb
mov
mov
push
xchg
leave
inc
add
movsb
daa
testb
rorl
mov
test
jp
mov
aam
stos
inc
pop
pop
ds
jmp
or
push
pop
push
les
in
mov
xchg
out
enter
push
xchg
xchg
sub
movsb
pop
popl
outsl
shll
add
mov
xor
negl
imul
sbb
push
pop
xchg
add
mov
sti
in
daa
out
es
add
adc
loopne
xchg
dec
adc
jb
sub
pushf
sub
push
sub
mov
pop
dec
fimuls
sub
iret
aad
push
push
adc
xor
mov
fstl
pusha
xor
mov
xor
mov
lret
setle
or
outsl
fisttps
add
negl
push
xor
pop
subb
int
xchg
aad
push
mov
into
mov
add
mov
sbb
daa
cmp
jl
adc
pop
add
shlb
mov
and
mov
pushf
mov
out
xchg
lock
enter
pop
scas
in
mov
add
es
out
fdivl
dec
call
shrb
cli
mov
mov
daa
addr16
mov
sbb
sub
cmpsb
mov
push
add
rcr
fs
clc
or
push
out
mov
adc
fisttps
lock
sahf
xchg
add
fsubrs
loop
aaa
shlb
repnz
imull
cmc
sub
adc
pop
dec
shrb
cmp
pop
int3
rcl
ljmp
push
mov
into
and
mov
je
dec
mov
sbb
loopne
pop
mov
jno
add
mov
jne
push
mov
repnz
orb
mov
mov
cmpsb
pop
and
ret
jg
movsb
push
jge
push
scas
cmp
cmp
and
mov
ljmp
rcr
xor
jo
pop
fdivp
xor
jae
lock
pusha
mov
pminub
cmp
dec
mov
dec
xor
mov
stos
jae
push
pop
or
je
es
add
leave
adc
and
cmc
push
jnp
call
pop
mov
daa
xchg
sub
dec
jle
testb
mov
adc
mov
call
and
xor
lret
rcll
push
mov
push
aas
jmp
xchg
jne
mov
adcb
jbe
jnp
cmp
push
push
mov
sub
mov
mov
jns
je
mov
add
jecxz
inc
pop
hlt
jl
pop
sub
out
dec
sbb
lret
ret
cld
and
mov
lock
lds
ret
mov
inc
xlat
push
or
shrl
or
cmp
rcr
xor
mov
inc
mov
mov
sub
jl
pop
js
push
rep
lret
sbb
inc
dec
mov
imul
adc
int3
aaa
add
gs
mov
fstps
cmp
sbb
mov
data16
negb
sbbb
xor
push
es
add
pop
mov
mov
add
cmpsb
pop
fdiv
mov
fstps
push
addr16
cmp
lock
mov
ja
adc
fisubs
push
cs
sbb
add
fisttpl
jg
test
xchg
cmp
jb
or
mov
and
lcall
fdivrs
xlat
push
push
fcom
dec
adc
jmp
or
flds
daa
fcomip
cmpsl
jmp
dec
imul
and
sbb
out
popa
adc
sarb
mov
sbb
push
cwtl
jo
fs
loopne
nop
mov
mov
cmpb
rorb
data16
adc
adc
sub
dec
pop
jne
in
mov
lret
push
xchg
out
lcall
jnp
fcmovnu
mov
push
sti
ret
in
cs
outsl
jnp
dec
fisttpl
nop
mov
insl
push
pop
jge
push
loop
insb
cmpsl
cmp
ss
push
push
jno
call
popa
popl
and
test
aaa
out
ss
mov
cmp
mov
mov
push
ret
mov
sbb
xchg
test
mov
movsl
out
enter
jne
mov
int
into
adc
jnp
lcall
push
fisubrl
cmpsb
pop
popa
hlt
pop
iret
and
add
inc
jg
nop
adc
psubd
aaa
out
enter
and
inc
adc
enter
dec
cmpsb
es
mov
je
rcll
and
push
sub
cld
jmp
lcall
outsb
xchg
cmp
pop
incl
inc
fiaddl
fisubs
repnz
pop
mov
push
fadd
pop
daa
ss
int
adc
sbb
mov
outsl
loope
and
scas
enter
nop
test
cmp
push
mov
add
cmp
test
lods
in
xor
pop
insb
aas
aas
jne
dec
call
adc
mov
ret
inc
dec
outsl
nop
inc
adc
and
aad
cmp
cmp
sti
sbb
jp
mov
repnz
cmp
js
out
and
fdivrs
iret
mov
cmp
jge
icebp
aaa
sub
mov
dec
sbb
sub
push
xlat
test
push
xor
enter
mov
mov
fisttps
and
or
jno
sti
sub
pop
out
movsl
and
lret
aam
fucomi
sbb
cmp
cmp
dec
int3
sub
mov
mov
loop
pop
sbb
pop
push
jge
subl
pusha
es
sbb
roll
ret
pop
mov
lret
adc
loop
les
mul
test
in
lods
sub
xchg
shl
lods
sbb
dec
cmpsl
pushf
xor
jae
imulb
aad
outsl
cs
mov
shl
pop
push
movsb
mov
push
dec
testb
call
std
shrl
mov
dec
and
push
or
rcrb
lods
call
mov
clc
cld
ficompl
aad
arpl
dec
jne
push
sub
fnstcw
mov
xchg
insb
mov
mov
jg
popf
add
or
or
sahf
add
nop
add
or
push
mov
lcall
add
mov
xor
rorl
outsl
std
mov
stc
xchg
ja
mov
sub
xlat
das
in
jle
dec
notb
xchg
push
xor
push
mov
pop
sbb
mov
cmpsl
mov
mov
jno
clc
lock
mov
xchg
daa
fs
or
and
out
scas
in
adc
and
jmp
ljmp
stos
pop
pop
xchg
shll
test
xor
add
pop
xchg
cmp
roll
loop
gs
dec
pushf
adcl
xchg
loop
push
mov
cmp
adc
imul
stos
pop
and
mov
gs
and
hlt
inc
xchg
pop
rorl
rcl
add
dec
xchg
punpckhwd
pop
arpl
xchg
xchg
cmp
xchg
movsl
adc
lret
call
lret
xchg
sub
sti
ror
and
xchg
jp
add
orl
fistpll
mov
inc
dec
add
ja
jmp
lcall
adc
aaa
cmp
mov
loopne
xchg
loop
daa
jecxz
mov
mov
lret
or
sti
cs
lds
outsl
mov
push
hlt
repz
jge
fistpll
sbb
mov
jmp
push
and
add
add
sub
push
cmc
out
gs
pop
call
inc
orb
cs
imul
sub
adc
movsb
scas
lcall
sub
cmp
cs
inc
in
in
cwtl
movsb
sub
pop
xor
dec
cltd
mov
inc
push
lods
mov
mov
fistpl
imul
xor
rorl
cmp
cmc
mov
xchg
out
add
jl
int
lock
lret
hlt
mov
insb
cmpsb
sub
pop
jmp
dec
dec
cmp
mov
lea
lret
rclb
cmp
or
in
shll
call
jge
push
imul
mov
push
cld
leave
mov
pop
pusha
jno
shll
aam
jmp
fiadds
jp
mov
adc
das
and
loopne
lods
push
cmpb
arpl
pop
dec
cmpb
pop
add
and
push
fildll
xchg
mov
mov
popf
pop
dec
mov
add
stos
cmc
xor
jp
mov
imul
std
lcall
in
adc
mov
sbb
cmp
cmp
push
push
jecxz
clc
ss
ljmp
jnp
mov
lret
jns
enter
sub
dec
jecxz
sub
mov
sahf
daa
lock
fdivs
xchg
or
std
imul
sarl
xchg
jge
cmp
inc
sbb
inc
push
test
mulb
add
test
imul
stc
jno
sbb
xor
lahf
icebp
popa
incb
ds
mov
cmp
mov
sub
sub
inc
stos
fwait
jne
dec
mov
inc
adc
fisttpl
jae
inc
int
das
rcll
hlt
inc
or
fildll
subl
fadds
imul
ds
stos
dec
jno
dec
mov
outsl
and
cmp
xchg
push
pop
sbb
dec
fistps
cmp
ljmp
cli
inc
int
sub
push
pop
fs
add
dec
jae
xor
pop
dec
lret
adc
addl
jge
inc
sbb
flds
arpl
js
xchg
or
cltd
add
lcall
das
je
out
inc
fisttpl
ja
add
sahf
xor
pop
adc
jp
pop
mov
shlb
mov
push
out
cmpsl
loopne
call
hlt
push
out
jbe
cld
clc
ret
test
stc
mov
cmp
and
shll
dec
popa
addb
push
jae
and
push
sbb
jb
fldenv
bound
cmp
jnp
cli
push
int3
cmpb
fsubs
aad
bound
imul
enter
inc
jl
sti
mov
xor
sub
outsl
popf
movsl
jecxz
movsb
xor
popf
xchg
inc
clc
mov
cmc
imul
cmp
pop
push
js
inc
loope
cmp
dec
mov
dec
sbb
stos
xor
push
test
or
sbb
pop
mov
in
adc
fs
adc
test
sbb
jge
in
inc
jmp
lods
hlt
adc
xchg
shll
xor
ljmp
pop
les
lahf
inc
or
ljmp
mov
clc
clc
ds
and
stos
mov
or
xor
xor
xchg
aas
sbb
pop
cmp
scas
push
int
dec
xor
jecxz
jno
fidivs
jns
push
inc
fisubrl
icebp
je,pt
in
xchg
jns
popl
fidivrl
mov
inc
pop
hlt
pop
lret
sub
std
sbb
fsubrl
in
fwait
notl
xchg
int3
stos
in
or
loope
subl
jno
les
arpl
xor
sbb
cmp
jns
pop
xor
adc
sbb
sarl
in
pop
out
push
sub
jno
mov
das
sbb
addl
fsubs
push
cld
psubb
enter
aaa
xor
int3
fisttpll
mov
int3
in
outsb
lock
ljmp
int3
mov
out
mov
jns
mov
xchg
aad
add
cmc
mov
xchg
xchg
int3
sbb
jg,pt
stos
xor
ret
idivl
sbb
cmp
and
sbb
push
movsb
negb
xchg
outsl
sbb
rorl
or
add
cmp
sub
inc
cmpb
push
pop
aaa
inc
in
movsl
outsb
sbb
aam
jns
les
movsb
test
xchg
jmp
or
mov
pop
mov
cmpsb
jae
aad
or
fnstcw
xchg
push
fwait
dec
push
lods
ret
dec
add
ret
dec
push
in
jmp
scas
or
mov
movsb
push
rcll
out
or
js
jge
jp
push
sbb
in
mov
inc
sbb
and
fcmovnb
jp
mov
cltd
cmp
in
push
cmpsl
jecxz
cwtl
fisttpl
jl
inc
lods
xor
rcl
jb
pop
inc
pop
jmp
adc
pop
xor
xchg
ficomps
lcall
pop
dec
and
loop
lock
jmp
sub
aad
dec
cmp
jb
sbb
cld
sbb
adc
push
mov
ret
mov
shr
xchg
daa
xor
adc
sub
push
ds
out
jmp
push
mov
inc
insb
sti
inc
sub
pop
in
loop
push
inc
cs
ds
mov
jp
stos
shrl
fmull
hlt
test
aam
fstl
push
fists
inc
or
mov
cs
and
aaa
cmp
cs
dec
or
dec
dec
ljmp
push
sbb
xor
inc
in
sbb
rcrl
mov
jb
mov
add
in
adc
xchg
jp
rcr
fdivp
lods
cld
rorb
inc
pushf
xor
cmpsl
adc
inc
mov
lods
xor
fcoml
vunpcklps
or
adc
loope
lahf
sbb
in
dec
pop
jg
inc
loopne
sbb
fidivrl
pop
xlat
mov
cmpsb
inc
pop
cmpsl
mov
sbb
push
fsubl
add
or
fnstcw
es
add
movntps
or
loopne
imul
das
imul
hlt
sub
pop
fsubr
xlat
adc
push
ret
jns
or
xor
aaa
inc
mov
jbe
or
stos
in
pop
push
js
push
and
sub
cmpsb
stos
xlat
pop
pushf
push
xor
xchg
push
mov
dec
inc
mov
repnz
add
pop
pop
dec
cwtl
mov
loop
filds
data16
lahf
adcl
popf
in
adc
push
rcrl
fs
mov
pop
or
lods
adc
jp
mov
or
adc
adc
sbbb
fs
movsl
xor
xchg
dec
or
lds
push
daa
pop
dec
enter
icebp
int
dec
decl
sbb
sahf
shrb
add
nop
pop
stos
push
xchg
pop
pushf
cmp
or
sub
pop
lds
lock
out
gs
add
aaa
sbb
push
mov
movsl
mov
cwtl
test
rolb
mov
xor
mov
mov
je
gs
dec
and
jg
sub
or
inc
mov
inc
mov
stos
add
mov
cmpsl
and
aam
inc
mov
sub
sahf
pop
js
xchg
mov
scas
ret
inc
cmpsl
popa
inc
lock
jno
bound
and
mov
add
imul
sub
adc
jp
xchg
jle,pn
aas
mov
pmulhuw
ffree
outsb
inc
mov
jno
mov
fdivrp
out
jo
push
adc
rcll
rolb
xor
cmc
or
push
jb
xchg
lods
in
fsub
push
fdivl
xchg
push
pop
mov
insb
mov
mov
mov
pop
dec
lock
repnz
add
pop
push
sbb
lea
mov
mov
adc
or
mov
insb
push
adcl
rorb
leave
aaa
stos
and
orl
mov
ficomps
cwtl
je
mov
imul
mov
sub
bound
sub
sub
mov
es
inc
imul
les
jle
adc
dec
loopne
add
xlat
aad
sbb
in
xchg
cmp
xchg
stos
popf
lds
dec
lods
movsb
frstor
jmp
inc
push
inc
movsb
add
jnp
lods
das
stos
cmp
push
sub
loop
or
adc
sti
jns
nop
js
and
fbstp
push
lea
pop
gs
aas
fwait
ds
xchg
popa
dec
and
sub
int3
test
add
dec
stc
fcomps
bound
pop
gs
jecxz
mov
dec
sbb
pop
stc
mov
xchg
fistpll
xchg
pop
sub
jnp
cmp
stc
cmp
pop
mov
pushf
and
and
jge
sub
mov
icebp
clc
push
mov
xor
cmc
scas
push
loopne
dec
arpl
imul
fwait
testl
aaa
andl
out
dec
mov
or
ds
rorb
xchg
fldcw
dec
xchg
inc
fmulp
mov
stos
out
or
pop
fs
mov
push
cmpsb
adc
mov
add
and
cmp
jo
push
cmp
push
adc
fmulp
fs
pop
adc
js
xchg
inc
sub
fwait
inc
sbb
xorb
je
dec
pop
lret
xchg
push
and
xchg
popa
bound
frndint
cmp
inc
fstpl
sbb
push
lods
push
fs
push
cmpsb
xchg
xorl
fdivs
and
outsb
dec
enter
data16
rcrb
jbe
cmp
fxch
xchg
add
and
xchg
push
dec
inc
lods
comiss
cmp
std
movsl
scas
jp
jno
aaa
mov
and
inc
cltd
sub
jbe
scas
jb
and
gs
data16
sbb
shl
push
mulb
pop
lds
lret
ficoms
insb
cmpsb
andl
xor
ret
aam
js
stos
jno,pn
sub
push
mov
mov
sbb
js
ja
mov
push
stc
xchg
xor
and
mov
adc
sbb
mov
xchg
jmp
mov
xchg
push
add
mov
je
mov
loopne
mov
xor
pop
into
popf
xor
daa
cmpsb
lret
fmuls
outsb
sbb
cmp
movsb
xor
bound
fcmovne
pop
pop
mov
jo
fnsave
out
fprem
pop
or
orl
jns
push
mov
fs
and
int3
mov
inc
sbb
mov
stos
xor
out
dec
sbb
or
test
jo
rep
cmc
insb
cmp
mov
cmp
cmp
std
jge
lret
leave
mov
scas
movsl
pop
xor
xchg
sbb
jge
int
push
insb
or
and
xor
lods
int3
pop
js
mov
dec
adc
inc
push
test
aaa
xchg
out
xchg
adcl
and
nop
movsl
rclb
jmp
out
dec
fs
scas
dec
cmp
sub
in
ljmp
rclb
popf
inc
aad
stc
dec
mov
sbb
jns
cmp
adc
jecxz
aaa
adc
cmpsl
inc
jbe
jno
push
flds
cmpsb
xor
movsl
leave
lcall
lahf
xor
pop
out
sub
pop
mov
mov
jne
lret
cmp
jno
stos
int
xchg
push
and
sbb
icebp
add
cmp
pop
or
mov
stc
stos
fldcw
xor
sbb
insl
arpl
xchg
mov
adc
add
andl
ds
js
aad
aas
adc
outsb
jecxz
or
jge
and
aas
inc
loope
ja
cltd
jp
xchg
movsl
dec
xor
push
sbb
sbb
xor
xchg
adc
xor
xchg
daa
cltd
adc
adc
adc
xchg
mov
mov
pop
pop
stc
push
mov
aas
adc
pushl
insl
push
push
sub
and
daa
and
fnsave
jae
loope
mov
stos
mov
iret
pop
fists
mov
mov
jbe
xor
pop
cltd
std
les
scas
loopne
enter
insl
push
push
mov
xor
bound
dec
xchg
cmpsl
push
sub
dec
pop
ja
push
jmp
stos
icebp
xchg
and
inc
mov
jmp
xor
ret
mov
clc
sub
out
in
pop
sarl
xor
or
arpl
pop
clc
xchg
insl
lock
loopne
adc
or
pop
popa
inc
xor
test
jecxz
sub
mov
sub
push
fwait
jp
and
inc
push
ficoml
loop
sar
aam
insl
loop
inc
cltd
or
xchg
sbb
dec
roll
mov
jb
xor
xchg
mov
mov
lods
mov
andb
inc
gs
dec
shlb
fnsave
sar
mov
jecxz
dec
sbb
stos
clc
int
into
xchg
xor
adc
in
mov
xchg
pop
dec
pop
push
mov
outsl
fwait
xchg
jp
sub
fwait
pop
and
jo
scas
int
ljmp
addb
out
lea
stos
pop
push
mov
inc
sahf
jne
xchg
test
in
rcl
cwtl
cmp
out
or
call
loopne
xchg
mov
sbb
push
dec
sub
jp
sarl
aas
inc
add
lcall
sub
add
popl
mov
xlat
mov
int
add
or
out
mov
lahf
stos
pop
imul
inc
loop
lahf
inc
push
pushf
xchg
sti
xorl
or
into
mov
mov
int3
nop
scas
push
cmp
mov
dec
mov
ss
rorl
popa
test
das
in
lea
mov
push
and
orl
dec
incl
stos
push
lea
push
jg
cmpb
jmp
pop
jbe
rsm
outsl
cmp
aaa
inc
jnp
int
orb
les
sar
inc
mov
insb
in
dec
pop
hlt
mov
addr16
jl
mov
mov
imul
out
in
sub
testb
jecxz
daa
movsl
inc
inc
inc
scas
mov
scas
adc
dec
aad
jge
lcall
adcb
jg
stos
mov
rep
mov
test
ret
aad
sub
call
jg
adc
and
stc
and
xchg
mov
loop
add
jp
clc
xor
sahf
xchg
add
push
in
xchg
cmp
ds
mov
dec
sti
add
in
jb
js
decb
mov
cmp
adc
mov
bound
sahf
test
iret
mov
aaa
jp
cmp
outsl
xchg
pop
mov
dec
rcl
jb
stc
or
cld
popa
or
jmp
add
lcall
out
sub
mov
push
cmc
push
mov
mov
and
vpcmpeqd
inc
repz
push
movsl
xlat
or
das
or
sbb
inc
adcb
sbb
js
out
mov
mov
stos
add
ss
pop
shlb
ds
imul
gs
mov
scas
ficomps
fwait
in
les
call
dec
or
xor
in
mov
sub
leave
ffreep
cmp
lea
hlt
inc
jne
jge
sub
clc
pop
ret
cltd
test
sahf
les
ret
mov
insb
adc
jg
cli
pusha
xchg
insb
jmp
cmp
stos
arpl
add
das
lahf
pop
xor
int
cmp
jp
dec
xchg
xchg
add
testl
push
test
fmull
sbb
push
mov
or
arpl
cmp
icebp
xor
aas
mov
std
cli
aas
xchg
xchg
inc
es
inc
inc
mov
lods
xchg
xchg
call
add
lods
mov
imull
insl
cmp
mov
dec
adc
jo
test
dec
mov
int3
add
dec
pop
mov
rcrb
dec
fs
push
je,pn
xor
test
ficoms
lcall
lods
sub
sbb
es
ds
mov
and
mov
je
scas
cli
sbb
mov
pop
mov
cwtl
scas
sub
fs
test
lds
ljmp
cltd
dec
add
push
and
aad
dec
sbbl
mov
das
aam
dec
nop
fcomp
add
shll
lods
inc
mov
lahf
cmc
imul
test
movsl
aad
js
xchg
mov
loop
out
clc
push
lret
pop
pushf
xlat
sbb
xchg
xchg
and
cmp
fldcw
ljmp
mov
dec
mov
xchg
mov
jnp
das
push
mov
mov
mov
hlt
push
shlb
iret
mov
push
jl
pop
jae
lds
or
jb
fisttpll
bound
xor
mov
mov
into
dec
mov
ss
cmc
std
int3
or
xchg
xchg
sbb
bswap
jo
xlat
lahf
lods
fnstcw
stc
xchg
lds
push
add
cmpsl
xchg
adc
mov
xchg
sbb
ds
stos
dec
leave
or
in
or
fadd
push
push
pop
pop
fistl
push
js
or
fmull
test
repz
jne
sub
ret
fsubrl
addb
scas
jl
out
shll
dec
std
insl
mov
int3
jp
sub
lahf
outsb
mov
adcl
stc
aad
mov
jno
ds
mov
pop
fisttps
pop
mov
gs
enter
mov
mov
cmpsb
shll
inc
adc
icebp
add
add
xor
and
pop
fists
ljmp
lds
xchg
mov
xchg
lret
jg
je
dec
sbb
pop
popa
push
ret
pop
test
jp
push
xor
push
mov
pop
adc
or
aas
scas
call
fmull
fdiv
xor
ret
and
jle
into
sar
outsb
fidivrl
sbb
test
sbb
loop
stc
xor
adcl
mov
mov
loop
rcr
fists
add
sbb
rol
lea
add
xchg
mov
sysenter
mov
mov
hlt
sahf
sarb
push
scas
lods
inc
sbb
js
shlb
shrl
loope
mov
mov
push
pop
add
movsb
xchg
inc
xor
daa
js
jl
ljmp
enter
in
cmp
repnz
test
xor
loopne
dec
xchg
adc
inc
jae
leave
subl
les
xchg
adc
and
cmp
rol
xorl
xor
xchg
jae
or
cmpsl
cmp
mov
mov
roll
sbb
rcl
cmpb
ds
dec
xor
push
dec
insb
pop
daa
or
jo
cmc
mov
imul
js
cli
cmc
xor
xchg
arpl
jnp
add
insl
sbb
pop
pop
mov
mov
push
sub
or
stos
sub
inc
shll
or
mov
mov
outsb
adc
imul
scas
stos
mov
jge
stos
and
mov
orl
out
ss
pushf
ret
add
sub
adc
js
ss
xor
out
cli
sbb
mov
cmc
insl
mov
jl
sub
sbb
push
jae
cmp
jle
popa
fildll
inc
xor
je
loop
xorl
jg
pop
push
in
stos
xor
movsb
mov
int3
popa
jle
xchg
out
ss
shlb
mov
hlt
les
dec
jbe
inc
imul
int
xchg
mulb
out
incb
lahf
fmuls
mov
inc
mov
adc
cmp
mov
mov
popa
sub
sub
popa
jnp
ret
or
xor
movsl
or
leave
jl
mov
push
push
je
cmp
sbb
nop
cmp
insb
fbld
shll
cmp
jp
dec
sbb
in
daa
sub
xor
push
test
push
jns
fucom
sub
cmp
je
pop
imul
push
pop
imul
inc
or
in
mov
add
test
imul
mov
cmp
pop
xor
hlt
mov
gs
ja
inc
jge
test
lock
aas
jo
pop
xor
cltd
xor
sti
cld
xor
insl
lds
fistpl
jge
jns
or
popa
stos
push
loopne
loopne
and
jne
neg
jns
lret
mov
in
js
xchg
sbb
out
lahf
sub
push
jno
lahf
cmp
cmp
inc
ss
xchg
sbb
mov
pop
stc
aad
imul
ja
movsb
addl
sbb
orl
add
loop
jl
xlat
sbb
dec
insb
out
rcr
and
pop
repnz
or
enter
sbb
jne
sub
pop
adc
xchg
dec
inc
imul
jmp
push
lea
pop
and
enter
add
lods
push
xor
out
repnz
jecxz
and
jmp
add
popa
cmp
scas
shrb
inc
insb
jns
jbe
bound
jne
mov
mov
int3
loopne
xchg
popa
lock
mov
fcmovnb
sub
testl
xchg
out
cli
int
lahf
sub
jae
lahf
cltd
push
xchg
cmc
gs
inc
jge
pop
sarb
test
pop
pop
aaa
sahf
leave
cmp
sbb
stos
and
mov
mov
sbb
dec
pop
insb
inc
mov
rcll
and
les
in
sub
adc
xchg
addr16
jbe
arpl
lea
pop
pushf
daa
add
xchg
stos
movsb
cmp
mov
jp
push
enter
testb
mov
mov
push
nop
xor
lods
aas
dec
cs
out
mov
in
aas
in
sub
enter
mov
lcall
push
mov
pop
jb
sbb
xchg
fiaddl
fs
jle
xlat
cli
inc
orl
out
aam
pop
sbb
dec
ret
cli
xchg
adc
aad
lret
and
inc
fmuls
sbb
stc
lea
dec
jge
mov
pop
fstps
call
stc
fnstsw
cli
add
cwtl
mov
mov
es
fiadds
add
jae
xchg
mov
frstor
dec
es
ds
jmp
inc
sbb
add
idivb
mov
scas
adc
les
mov
pop
push
addr16
sbb
sahf
mov
push
stc
push
or
mov
xchg
lahf
push
fistl
jne
mov
push
inc
movsb
lret
mov
push
imulb
rclb
adc
sub
or
mov
shll
cmp
icebp
xchg
outsb
sub
test
inc
add
push
xchg
popf
mov
les
stos
dec
mov
out
repnz
mov
push
pop
add
sahf
iret
mov
int3
sub
loopne
push
xlat
xor
inc
arpl
push
sub
stc
mov
sbb
repz
lea
roll
add
cwtl
sub
push
cli
mov
jno
dec
cmpsb
sub
xchg
lret
xchg
push
dec
push
and
xchg
inc
jae
call
notl
je
cmp
mov
jno
ds
add
stos
mov
lods
inc
enter
or
add
mov
xor
dec
decl
xchg
xor
loope
jbe
dec
lea
jbe
mov
nop
arpl
xlat
insl
movsl
sti
mov
lcall
insw
out
addr16
lods
mov
aas
or
sub
dec
or
sbbb
pop
dec
sbbb
pop
add
sbb
xchg
lock
test
add
xor
in
pop
and
mov
in
push
sahf
idivb
mov
push
jmp
inc
pop
push
loop
mov
xchg
inc
test
shlb
js
mov
aaa
push
dec
xor
mov
leave
cmp
pop
jmp
add
push
sub
loope
cmp
adcb
addr16
mov
jmp
nop
mov
shl
jp
out
leave
rcrb
add
xor
and
or
jl
inc
insb
and
sub
sarb
dec
enter
std
mov
xchg
sbb
sbb
daa
cld
xor
xchg
cmp
cmp
xorb
cmovl
test
pop
test
test
data16
adc
ret
pop
ljmp
cli
mov
inc
mov
dec
push
int
lret
out
dec
outsl
lret
dec
sbb
add
dec
mov
rcrl
mov
sbb
inc
inc
mov
popa
hlt
rcrb
mov
jns
or
out
arpl
ljmp
clc
sahf
out
int
adc
pushf
pusha
dec
push
stos
sahf
sbb
ss
daa
cmp
and
or
or
out
fisttpll
dec
ret
movsl
sti
adc
add
dec
movsb
dec
pusha
pop
int
out
push
push
clc
pop
xchg
jmp
mov
pop
addr16
dec
and
addl
dec
pop
lea
and
pop
add
and
mov
inc
push
das
pop
int3
sub
cmp
subb
repz
loope
xchg
sbb
lahf
js
or
test
ss
adc
enter
movsl
ds
lods
imull
aam
scas
push
mov
and
add
popf
or
mov
mov
mov
sbb
jmp
inc
pop
stos
sub
cmp
inc
mov
lcall
std
scas
stos
imul
mov
test
and
stos
or
lret
scas
xlat
sbb
lods
scas
ss
jae
sbb
sub
push
stos
pop
push
push
pop
or
outsb
jne
repz
and
rcll
test
jne
fcmovbe
lahf
xor
ds
out
iret
sub
xchg
jl
mov
push
adc
ret
jecxz
jle
or
lahf
mov
cmp
or
xor
decb
ds
and
jno
mov
sub
fs
add
sub
and
xchg
or
out
hlt
les
push
lods
stos
xor
sub
imulb
bound
cwtl
jne
push
aad
sub
xchg
adc
mov
sub
out
popl
and
adc
ret
rclb
test
shlb
mov
add
nop
addr16
and
cmp
rolb
fsubrs
fldenv
rcl
out
and
pop
clc
call
or
ret
jno
mov
in
cli
add
nop
sub
mov
ss
jp
nop
sub
pop
inc
mov
pop
sub
push
mov
or
dec
lahf
push
icebp
pop
dec
jg
mov
cmp
adc
cltd
xor
out
cwtl
inc
pusha
rcll
adc
insl
cli
loope
insl
filds
add
sar
test
mov
scas
jge
ret
fnsave
push
cmp
add
jae
insb
mov
shl
inc
in
sbb
mov
sbb
and
pop
cmp
cmp
add
sbb
aam
mov
daa
lahf
mov
fimuls
adc
ret
sbb
jbe
add
xchg
fisttps
stos
jle
fildl
mov
mov
dec
push
outsl
pop
and
cmp
jl
rcll
stos
dec
les
push
movsb
push
inc
pop
cmpl
adc
mov
xchg
and
inc
xchg
daa
mov
mov
push
stos
mov
aam
ret
sub
iret
and
mov
imul
push
add
and
pop
pop
jne
mov
xor
in
mov
scas
dec
into
or
dec
inc
or
xchg
fidivrl
dec
arpl
jl
pop
adc
jecxz
fistps
sub
jne
fcomps
aas
filds
mov
sub
cmp
mov
inc
mov
cltd
mov
fisttps
imul
add
or
int3
cmp
cmp
addr16
fildll
scas
and
jmp
pop
xchg
mov
adc
in
pop
xor
pop
andl
mov
frstpm(287
int3
and
and
insl
mov
lcall
push
loopne
js
cmpsl
or
jne
pop
dec
push
outsl
scas
cmovs
cli
into
mov
rcl
mov
push
repnz
push
sbb
pop
mov
faddl
fs
imul
sbb
xor
sbb
add
add
int
push
scas
pop
jnp
insb
push
pop
cmp
fisttps
test
cmp
repnz
and
mov
or
push
xchg
fwait
adc
test
inc
sarb
sar
add
cmpsl
pop
jp
out
xor
shlb
add
add
xor
inc
or
sbb
mov
cmpsb
ret
dec
jbe
or
inc
pop
mov
insl
pop
gs
jbe
mov
or
push
jl
in
in
mov
mov
xchg
sub
dec
fdivrs
fistl
cmp
lock
inc
jbe
xor
or
out
and
cs
imul
shlb
lods
add
lds
scas
jae
push
cmc
and
dec
or
and
test
mov
loope
pop
aaa
inc
incb
sub
std
sahf
sbb
pop
fwait
pop
test
inc
out
das
jne
cli
aaa
mov
movsl
sbb
pop
mov
push
stos
and
lods
ss
in
cmc
adc
and
or
push
cli
push
negl
push
shl
data16
push
mov
xor
lock
cmc
shl
inc
nop
aam
sbb
push
insl
rcll
pop
repz
lods
test
hlt
mov
xchg
push
push
test
mov
loope
jge
mov
mov
or
adc
mov
jg
fstpl
cld
jbe
cld
mov
mov
push
negl
mov
ds
pop
lods
pop
and
ret
fbld
test
mov
cmp
or
fmull
xchg
orl
out
sbb
lret
clc
lods
sub
fldt
mov
pop
xor
mov
push
adc
xchg
mov
mov
iret
cmpsl
shlb
test
mov
lret
pop
or
aaa
orl
mov
push
lahf
decb
push
pushf
sbb
sub
xchg
and
mov
push
lahf
or
jns
mov
outsb
int
imul
mov
cltd
lods
xchg
jns
inc
into
out
lahf
ds
test
mov
add
xchg
jle
dec
pusha
lods
and
movsb
mov
cmp
jle
dec
or
lret
pop
xchg
xchg
mov
sbb
bswap
push
mov
mul
in
movsl
les
mov
rcr
add
mov
js
fistl
fists
add
adcl
sbb
adc
leave
adc
sub
mov
dec
mov
dec
push
push
mov
ds
xor
and
xor
push
jle,pn
mov
bound
dec
jp
cmp
lcall
xchg
and
mov
scas
shl
repz
fldenv
dec
cs
ss
cs
dec
push
lahf
in
test
jae
inc
jmp
pusha
mov
mov
ret
and
addr16
add
xchg
stos
out
stos
dec
dec
lods
int3
push
cmp
fs
mov
mov
ret
add
or
pop
hlt
out
mov
hlt
inc
push
ds
push
fwait
sub
push
daa
cmp
xlat
into
je
out
lods
jae
mov
push
push
jne
push
repnz
jbe
out
insl
push
out
das
fwait
inc
xchg
sub
and
and
mov
rep
xchg
enter
cmp
test
lret
addb
lods
sub
xchg
icebp
jg
hlt
lcall
leave
lcall
fnstsw
outsl
ljmp
stos
dec
sbb
xor
xchg
stc
or
js
push
shll
icebp
cmp
xor
hlt
iret
cmp
aad
sbb
in
lea
mov
rcrb
inc
sbb
xchg
or
cmp
scas
cmp
cmp
mov
cs
ret
xor
adc
adc
jmp
pop
push
insb
notl
xchg
lcall
rcrl
mov
cmp
stos
mov
push
lods
xor
test
push
push
hlt
mov
addr16
lcall
xchg
insb
ds
sti
lret
insb
xor
sub
pop
and
imul
xchg
shrl
xchg
jg
mov
in
or
jnp
iret
jmp
jns
pop
test
adc
xchg
test
push
xchg
stc
sbb
jne
ss
das
mov
arpl
je
lret
sbb
or
jnp
shll
push
push
popa
outsl
and
cs
xor
outsb
cwtl
shlb
jmp
shrb
cltd
or
push
push
push
rcrb
xchg
daa
adc
jnp
aad
stos
imul
xor
cmp
lret
pop
push
jns
add
bound
xor
inc
sbb
je
fistl
or
push
dec
insw
dec
int
or
fisubs
ja
inc
mov
push
pop
xor
lods
xor
lods
push
dec
dec
mov
arpl
push
call
mov
stos
clc
ds
mov
push
sbbl
in
and
mov
sbbb
and
insl
clc
xchg
xor
pop
mov
mov
lock
pushf
mov
dec
add
xchg
push
add
movsl
bound
jmp
adc
scas
int3
nop
repnz
stos
lea
xchg
popl
adc
xchg
ret
push
cmp
and
inc
movsl
stos
stos
xchg
lcall
xchg
push
push
mov
xchg
sub
int3
fisttpll
insb
movb
pusha
push
scas
pop
jl
sub
cmp
scas
test
dec
scas
push
pop
enter
in
sub
dec
out
sbb
outsl
enter
adc
rorb
int3
inc
fistl
jmp
mov
jno
and
adc
pop
jnp
stos
aaa
inc
xor
sub
hlt
clc
hlt
inc
addb
je
pop
int
jnp
fcomps
gs
or
jp
mov
pop
sub
cli
inc
sahf
sbb
popa
add
jb
cld
jge
and
mov
jns
outsb
and
ljmp
xchg
pushf
adc
fwait
push
in
std
cmpsb
pop
loopne
jecxz
dec
dec
stos
pop
inc
call
addr16
int3
adc
outsl
and
sbb
push
bound
leave
sub
andl
mov
lret
pusha
ss
into
outsb
aam
loopne
decl
mov
xchg
hlt
rcll
int
fcomip
dec
xor
fcmovb
mov
pop
daa
xor
cmp
inc
test
scas
cmp
repnz
lcall
sbb
rclb
fbld
fadds
out
jo
ret
mulb
pop
mov
jno
daa
lret
cltd
xchg
div
xchg
push
xlat
sbb
cmp
call
mov
les
and
xlat
cmpl
outsl
test
jmp
cmpsl
xchg
fadd
or
xor
shll
enter
imul
ss
insl
out
fstl
nop
or
jae
jbe
mov
fidivrl
imul
mov
cmc
inc
mov
lahf
es
nop
or
cmp
hlt
bound
xchg
mov
lret
out
xchg
stos
ret
fbld
insl
das
out
imul
aad
data16
aad
mov
push
push
jecxz
jl
mov
add
or
adc
int
pushl
and
out
gs
es
xor
xchg
aad
push
mov
repz
mov
mov
mov
mov
xchg
js
sti
push
insl
fwait
lds
cmp
rorb
sbb
sub
outsl
mov
pop
sbbl
loope
imul
pop
or
jmp
pusha
lods
mov
lahf
sarb
xor
add
push
mov
pop
call
pop
xor
loope,pn
out
lahf
insl
inc
andnps
dec
mov
mov
push
test
jbe
aam
nop
push
stos
adcb
gs
sti
or
xlat
cmp
pop
jmp
push
jae
sub
cmp
fistl
scas
test
mov
add
mov
rcrb
or
inc
sub
inc
xor
sub
lret
mov
pushf
xor
and
mov
or
cmp
mov
cmp
repz
ja
cmpsb
ja
pop
aaa
and
fdivl
js
or
add
movsl
xchg
pop
push
push
aad
aad
pop
lods
jmp
lret
insl
je
pop
jo
addb
xchg
or
aaa
subl
int
add
cmp
xor
cs
rsm
insl
bound
dec
xor
cmc
mov
mov
rorb
in
pop
ficomps
inc
js
push
es
push
and
repnz
pop
sbbb
pop
xor
in
sarl
push
xlat
mov
cmpsb
add
int
sbb
sbb
mov
pusha
push
jp
adc
sbb
fdiv
fs
lock
jmp
or
and
jo
jns
stc
jle
movsb
pop
imul
leave
xor
stos
fs
inc
lahf
jo
inc
pop
movsl
lret
sahf
sub
inc
das
into
push
adc
inc
push
std
dec
inc
stos
ja
cmp
lret
imulb
mov
syscall
add
xchg
push
cmp
or
addr16
dec
xor
dec
lock
sarb
loopne
outsb
imulb
jg
loope
aam
and
push
mov
lea
lcall
pushf
sti
or
jp
mov
das
add
sbb
xchg
cmpsb
jp
sahf
insl
repnz
mov
mov
outsl
lahf
pop
ret
push
or
test
mov
ja
dec
fidivl
xchg
sbb
clc
jo
bound
les
scas
dec
aaa
insl
pop
cmp
sub
mov
lods
xchg
add
and
aad
dec
or
inc
and
addl
dec
xchg
hlt
jnp
ds
mov
inc
out
cmpsl
cmp
cmpsb
lea
in
cs
and
out
add
pop
or
cmp
and
and
std
inc
xor
imul
sub
push
sub
shrl
add
cmp
add
sbb
fs
dec
pop
int3
xor
mov
inc
push
rorb
in
lds
fisubrl
aaa
adc
inc
ret
scas
dec
daa
bound
pop
or
rcrl
je
mov
mov
sbb
iret
add
xchg
adc
jmp
jb
jo
inc
sub
lret
add
sbb
xchg
push
into
cli
cmc
arpl
ror
mov
and
pop
lds
or
pop
sahf
dec
adc
xchg
xor
loop
mov
mov
pop
cmp
mov
sub
int3
jnp
lahf
stos
jbe
stc
pop
cmp
add
out
cmp
fcmovnu
loope
or
in
pop
or
enter
shlb
mov
jp
push
bound
pop
cmpsl
sub
lret
jo
jns
icebp
adc
dec
cmp
cmp
gs
jge
stc
out
mov
jmp
mov
push
sbbl
scas
sar
inc
xor
shl
and
cmp
push
or
inc
sbb
loopne
ret
std
popf
sbb
pop
das
and
ljmp
lcall
test
add
fcompl
je
addb
push
aas
ljmp
inc
daa
xchg
shlb
fwait
add
inc
mov
mul
xchg
adc
and
xor
loopne
loope
imul
adc
adc
push
stc
ror
in
xchg
mov
dec
cwtl
xchg
and
and
loopne
js
inc
lods
out
icebp
and
mov
sar
pop
lcall
mov
incl
ljmp
mov
loop
pop
mov
inc
cmp
aad
mov
mov
lock
jle
mov
mov
and
mov
xchg
nop
or
out
sbb
mov
in
pop
jp
adc
rcrb
mov
dec
mov
dec
lods
jmp
sbbl
jge
jp
add
sti
add
inc
inc
lret
or
pop
push
int3
xorb
mov
pop
paddq
ljmp
inc
dec
lret
xor
fsubrs
es
dec
mov
add
xor
negl
pop
cli
arpl
and
inc
mov
inc
out
movhps
aam
movsb
pop
imul
sti
push
jg
dec
jb
jbe
mov
shr
and
scas
fists
lock
call
lea
or
push
outsl
cwtl
rolb
in
mov
adc
xchg
xor
rclb
cmp
sbb
mov
fwait
aam
pop
mov
in
and
or
cmc
adc
cmpl
push
icebp
cmp
fwait
decb
mov
rcrl
cld
fisttps
subb
int
add
mov
jbe
push
btl
and
aas
stos
inc
cs
sub
xchg
mov
cmc
mov
sub
jns
sub
daa
dec
repz
jg
pop
inc
rcrl
dec
or
add
shl
and
and
mov
mov
xchg
mov
dec
ja
bnd
movsl
pop
cwtl
dec
sahf
cmp
or
mov
inc
in
sbb
push
and
or
mov
fadds
insl
dec
inc
or
aam
dec
jecxz
mov
push
arpl
jns
or
sub
mov
movsb
jp
jle
push
cwtl
mov
lret
cmp
enter
dec
js
aaa
push
dec
and
loope
inc
mov
pop
or
sbb
out
jae
call
adc
push
stos
sub
sbb
in
xlat
ss
and
cmpsl
leave
xor
cmc
adc
bound
in
hlt
sub
mov
lahf
repz
sub
mov
repz
iret
mov
push
sub
dec
insl
js
cmp
les
sarb
stc
testb
xor
push
sub
fs
mov
add
or
sub
arpl
lret
pop
push
inc
xchg
popa
inc
xchg
shrl
inc
divl
aam
mov
shlb
mov
push
or
jo
xor
repz
sub
leave
fcmovne
js
or
addr16
pop
xchg
cmp
movsb
xchg
jmp
jg
sub
add
cmp
mov
xchg
fisubrl
aas
fcomip
xchg
notl
clc
or
inc
mov
std
call
addr16
add
outsl
add
es
sbb
push
into
and
andl
sub
ficompl
cs
mov
jne
in
and
jp
push
push
outsb
mov
and
sti
es
push
sbb
jno
push
mov
out
pop
cli
xchg
mov
xchg
out
jp
cli
inc
popa
ret
out
mov
mov
out
cmpb
cltd
fcmovne
test
dec
cmpsl
and
push
xchg
fdivrp
dec
dec
jmp
js
mov
notb
testl
mov
clc
mov
cmp
cmpsl
mov
aaa
pop
jo
push
mov
mov
ret
push
mov
aas
dec
insl
jp
fs
sahf
pop
loope
outsb
call
idivb
and
or
mov
test
mov
add
shll
and
or
cmp
mov
jo
or
loope
iret
push
xchg
sarb
cmp
lret
or
data16
sahf
notl
xor
xchg
fs
shll
inc
xor
and
sbb
lods
mulb
out
cmp
push
aam
sbb
imul
outsl
xchg
inc
lahf
cmpl
icebp
sbb
test
loop
mov
in
aad
arpl
inc
scas
push
sahf
movswl
dec
mov
out
dec
mov
sarl
jne
outsl
jge
aad
int3
fimuls
push
out
push
testl
aaa
and
sbb
hlt
stc
mov
mov
mov
and
add
in
inc
dec
enter
mov
ficomps
sub
imul
push
out
inc
add
jo
mov
fadds
out
in
loope
mov
xchg
xor
orps
mov
and
ja
xor
jnp
roll
jne
scas
add
test
lods
lea
add
pop
in
jne
sub
aas
pop
add
dec
mull
lock
pop
mov
mov
cmp
outsb
push
mov
jb
test
addb
push
push
lcall
add
loope
mov
popa
rorl
jl
jno
adc
out
popf
movsb
and
stos
xchg
movsb
aaa
cltd
rcll
mov
insb
jg
out
pushf
adc
mov
into
or
mov
in
call
pop
sarb
jecxz
adc
push
mov
lock
sbb
xlat
jmp
mov
xchg
loope
xchg
mov
or
mov
pop
stos
mov
sub
ljmp
hlt
loopne
jl
daa
inc
std
je
leave
sub
popa
mov
sub
loop
outsb
pop
fucomip
iret
rolb
ret
decl
mov
mov
mov
repz
cmpsl
adc
fs
mov
dec
fstpt
daa
jne
mov
fcoms
in
jae
orl
mov
jns
outsb
pop
je
mov
jo
into
mov
sbb
aad
add
pop
inc
lea
mov
jns
rorl
push
pop
in
ljmp
mov
inc
mov
sbb
xor
iret
std
xlat
xchg
sbb
imul
mov
stos
sahf
xchg
xchg
dec
xor
push
xchg
dec
je
es
sbb
aas
mov
pop
rcl
jp
and
popf
xlat
stos
icebp
push
imul
mov
push
jb
mov
or
rclb
inc
sti
add
sti
cltd
jp
adc
xor
ds
dec
adc
xor
sbb
loop
xlat
roll
xchg
ret
fisubrl
mov
cwtl
fsubs
and
or
pop
sub
inc
mov
mov
mov
mov
imul
scas
add
fisubs
lret
vshufps
xor
pusha
pop
xchg
adc
push
ret
mov
push
cmp
lods
jp
mov
or
adc
mov
inc
daa
jae
mov
mov
xor
gs
stc
xor
sub
pop
mov
mov
out
jb
adc
mov
push
cmc
pop
push
das
mov
or
adc
loop
jmp
sub
and
notb
rcrl
xor
nop
or
mov
movsb
rcr
loopne
jp
dec
jnp
into
orb
mov
cmp
stc
mov
xor
loopne,pt
outsb
pop
push
pop
cmp
addr16
mov
jnp
mov
pushl
insl
sbb
and
out
aam
lods
sbb
js
or
xchg
mov
sub
je
iret
fsubr
in
pextrw
sbb
pusha
mov
out
mov
xchg
pop
rclb
or
mov
pop
out
sbb
aaa
pushl
mov
mov
adc
ds
pop
adc
xchg
nop
dec
jae
lcall
dec
repnz
ret
adc
adc
incb
or
sub
cmpsb
stos
imul
cmp
notb
mov
fildll
in
push
xchg
pushf
sub
add
ljmp
mov
jbe
int3
dec
loopne
call
adcb
test
fadds
pop
notl
push
xchg
cmp
jge,pt
push
fsts
mov
pop
leave
lret
dec
pop
pop
mov
sub
xchg
xor
pop
out
mov
shrb
dec
cmp
int3
mov
jne
add
lods
xor
push
clc
or
sub
jns
mov
dec
jg
and
out
into
xorb
insb
dec
push
aam
fs
mov
push
mov
xor
into
stos
jp
out
cltd
bound
adc
call
add
pop
daa
mov
mov
push
stos
or
subl
push
dec
repz
ret
add
push
mov
xchg
movsb
or
jl
aad
cmpsb
ss
sbb
in
mov
add
or
push
jbe
vpunpckldq
add
aad
and
test
ret
inc
ljmp
dec
stos
sub
lcall
sbb
adc
popf
or
fidivs
out
je
pop
xor
add
mov
sbb
out
rorb
mov
jmp
gs
movsl
push
icebp
or
mov
jnp
insl
xchg
adc
test
xchg
stos
cmp
fcmovnb
add
hlt
dec
cli
cmpsl
and
scas
jle
mov
int3
mov
xchg
and
iret
test
shlb
mov
mov
scas
mov
mov
dec
jp
push
roll
xchg
cmpsl
mov
cld
and
jmp
fimull
mov
enter
push
push
lods
mov
push
aaa
xor
inc
lsl
dec
pushf
in
push
or
loopne
adc
cmp
xor
inc
add
call
lds
dec
add
pop
cld
jns
xchg
push
in
in
pushf
divl
out
adc
mov
lea
stos
dec
mov
insl
rclb
inc
sbb
imul
inc
mov
sahf
stos
cli
sub
stos
adc
inc
ja
loop
fs
jmp
sub
pop
pop
mov
test
stos
and
sahf
mov
data16
xchg
xchg
imulb
dec
daa
mov
ret
lods
stc
sub
push
rcll
cmc
cwtl
xchg
fdivl
jo
push
subb
dec
pop
dec
adc
inc
cmp
sbb
cwtl
or
dec
icebp
mov
popf
adc
loope
out
loop
adc
cmp
fidivrs
push
push
cmpsl
xchg
daa
mul
frstor
cmpl
push
mov
cli
cmp
cmp
ffree
rolb
adc
cs
imul
pop
clc
push
and
sbb
push
outsl
push
sub
or
add
scas
pop
cmp
sbb
les
inc
in
scas
cmp
clc
xlat
hlt
in
cmpsl
insl
ds
cmp
fadd
xchg
rclb
adc
mov
sbb
jmp
and
mov
jne
mov
push
lret
lods
in
mov
dec
out
adc
mov
adc
ss
fcompl
mov
mov
xchg
sbb
jne
cmp
stos
fstps
fdivr
loop
clc
ret
mov
push
push
and
bound
jecxz
insl
pop
push
out
push
and
loopne
cmp
test
test
jge
pop
dec
into
push
imul
xchg
adc
mov
div
pop
aad
rep
xchg
lods
dec
sahf
jp
es
and
cwtl
lds
out
sbb
mov
adc
sub
mov
std
aaa
dec
xorb
arpl
inc
push
mov
stc
pop
push
adc
sub
push
iret
sbb
inc
ss
repz
mov
arpl
insb
push
cmp
jno
mov
jb
mov
mov
mov
pop
inc
cmc
fwait
xor
fcmove
jp
je
fldt
fnstsw
sub
jle
movsb
sub
xorl
push
rolb
add
lcall
mov
mov
sbb
xchg
sbb
dec
lea
and
adc
inc
ret
mov
pop
out
sti
dec
bound
ret
mov
cmpxchg
sarl
mov
sti
sub
mov
leave
notl
negb
nop
stos
push
fcmovu
sub
rorl
shl
xchg
or
add
sbbb
fldt
mov
sub
iret
bound
stos
popa
icebp
inc
lea
xchg
cmpsb
pop
mov
cmp
shll
inc
inc
dec
out
jmp
pop
dec
rorb
enter
insb
or
mov
into
stos
push
adc
xchg
daa
or
mov
pop
in
loop
das
addl
or
in
je
add
jg
xor
jmp
inc
fldenv
inc
and
xchg
pop
jns
imul
std
xlat
pop
push
leave
out
dec
pop
fnsave
xor
pop
ffreep
lret
addl
pop
in
push
mov
outsb
cs
lods
pop
dec
jnp
sub
jnp
jbe
js
pop
cwtl
test
imul
pop
or
insb
ret
les
cmp
and
add
idivl
cmpsl
mov
jp
aaa
out
rcrb
lcall
mov
mov
mov
and
outsl
movsl
insl
sbb
mov
arpl
daa
aam
imul
push
pop
lret
xor
les
sahf
in
push
ret
push
sbb
nop
lods
dec
cmp
dec
cmc
or
outsl
jle
out
in
mov
jae
call
and
loop
cmp
fimuls
mov
call
nop
lds
cmpl
cmp
lret
xchg
sub
aaa
and
out
fisttpll
in
cld
lret
out
lcall
xor
fwait
gs
ret
push
and
insb
fistpll
in
roll
or
ffree
push
ds
jle
mull
and
dec
fwait
xchg
cmpsb
mov
ja
mov
sub
xchg
out
ds
test
sub
das
pop
pop
adc
inc
pop
lret
pop
pop
and
xor
adc
pop
popf
jp
mov
or
pop
and
stc
ret
push
jo
out
adc
imul
enter
subb
sub
std
sbb
pop
nop
insb
aam
subb
sbb
insl
fdiv
arpl
iret
cwtl
hlt
add
lahf
pushf
sub
inc
add
xchg
adc
fwait
out
xchg
testb
sub
sub
xchg
or
sub
jbe
jne
stc
out
stc
add
xchg
jnp
imul
adc
mov
aaa
shll
loop
mov
ret
jle
sbb
add
pop
pop
mov
mov
push
lahf
jl
pop
popf
sbb
sub
xchg
mov
add
mov
adc
add
sbb
pushl
mov
repz
shrb
aad
in
mov
aad
sti
xchg
lahf
imul
mov
lcall
mov
ret
jne
addl
fimuls
jns
or
lock
adc
pop
mov
clc
jns
popf
das
xor
out
mov
rorl
pusha
inc
jb
xchg
mov
sub
mov
mov
pusha
daa
ds
les
xor
std
dec
jno
mov
cmpb
pop
rcr
push
rcll
adc
std
inc
inc
or
iret
stc
dec
cltd
mov
movsl
lods
add
mov
dec
and
test
push
jns
mov
frstpm(287
clc
mul
in
and
frstor
lret
cld
out
das
jne
cmp
mov
sbb
insl
fsub
pmaxsw
mov
mov
dec
push
mov
iret
inc
push
out
sub
testb
testb
xor
add
jmp
push
lea
pop
call
sbb
pop
fucomp
xor
ljmp
and
or
and
out
or
test
adc
or
leave
daa
leave
mov
sub
sub
adc
mov
movsb
lcall
sub
xor
cmp
clc
xor
loop
sbb
push
and
loop
push
adc
push
arpl
bound
ret
adc
mov
pop
mov
jg
sub
xor
xor
fistps
inc
cld
arpl
ljmp
fildll
hlt
repnz
push
jge
dec
xchg
cmp
movsl
jge
xchg
sahf
imul
jnp
dec
jle
dec
add
pop
int3
push
add
cld
mov
cmp
ret
addr16
mov
divl
mov
imul
mov
pop
lret
lods
xchg
cwtl
fsubs
pop
aad
clc
movsl
pop
jp
jb
xchg
js
mov
inc
loop
sbb
data16
fidivrs
mov
push
xor
pop
xor
clc
out
mov
pop
std
arpl
cltd
add
sub
movsl
sbb
mov
test
push
lods
movsb
jge
push
jno
lock
movsb
mov
mov
arpl
sbb
clc
adc
out
loope
fimuls
xchg
clc
into
sub
testl
cmp
jns
xor
mov
cmp
dec
mov
mov
sub
clc
pop
and
mov
aad
ror
cmpsl
repnz
jns
enter
xchg
out
mov
psraw
ja
shll
popf
xchg
push
pop
bnd
shlb
or
pop
in
jl
pushf
pop
fldt
mov
sbb
pusha
add
mov
test
jl
iret
lahf
cmp
mov
mov
jg
loope
arpl
clc
mov
mov
addr16
icebp
push
sbb
aas
popf
xlat
xor
scas
lds
inc
xchg
add
xchg
hlt
dec
mov
shrb
xchg
cmp
xchg
leave
xchg
and
xchg
lock
out
mov
fs
sub
sbb
mov
jmp
mov
and
adc
jecxz
ljmp
loope
push
pop
dec
enter
imul
fmuls
push
sub
or
jp
fs
aad
cltd
mov
pushf
sbb
scas
xchg
jnp
mov
mov
je
mov
sbb
stc
out
mov
push
enter
loope
xchg
lea
sub
dec
cmpb
ljmp
jecxz
icebp
jbe
pop
out
dec
lcall
imull
adc
sbb
push
cmp
cmp
gs
and
rol
mov
inc
add
lock
int3
adc
and
pushf
jecxz
jg
scas
cmpsl
pop
jmp
not
jl
icebp
mov
pop
xchg
cld
fs
insl
ds
pop
andb
mov
sub
fadd
movsb
dec
dec
pop
push
fstpl
push
js
and
and
imul
and
mov
in
pushf
cli
cwtl
mov
sbb
cwtl
push
push
jmp
shlb
add
int3
jp
icebp
xchg
adc
clc
pusha
test
clc
mov
xor
mov
sbb
mov
cmpsb
ja
incl
es
shll
dec
fiaddl
mov
in
lret
push
push
notb
xlat
pop
add
mov
stos
aaa
rolb
punpckhbw
lds
sub
fs
mov
sub
add
cld
frstor
jle
sub
add
push
pop
mov
cs
loope
adc
xor
pusha
aam
jb
test
loopne
pop
xor
lahf
into
mov
mov
adc
fbld
out
mov
sbb
fsubr
cmp
mov
add
dec
clc
nop
fsubl
push
aam
cmp
fidivl
pop
gs
outsb
sub
jb
stc
fchs
fidivl
andl
dec
cmp
dec
xor
enter
fisttpl
js
jns
fdivr
loope
sbb
lods
faddl
adc
mov
mov
or
inc
negb
loopne
xlat
fwait
addr16
push
mov
push
loope
pop
stos
adc
mov
out
mov
pop
sub
inc
jp
xchg
or
scas
inc
dec
in
imul
jecxz
clc
loop
aas
orb
sub
push
cmp
mov
sbb
mov
jl
loope
icebp
xchg
fsubrp
cmp
stos
pop
or
add
cltd
mov
inc
push
xchg
pop
repz
adc
adc
jecxz
or
scas
hlt
xor
add
aas
sbb
out
push
xlat
std
imul
enterw
pop
dec
ds
jmp
fs
or
sub
inc
cli
or
add
dec
aad
push
pop
push
arpl
jmp
ret
movsl
mov
clc
int3
lods
aaa
ss
shrb
dec
cmp
in
cmpsl
add
aas
xor
loope
add
inc
loopne
and
adc
ja
fisttps
push
cmpsb
adcb
adcb
daa
push
cltd
loop
loope
mov
add
push
test
fimuls
push
stos
inc
mov
jne
jnp
dec
or
cmp
pusha
and
aaa
add
cs
lock
cmpsb
adc
addr16
aad
xlat
scas
gs
mov
jb
pop
sbb
jbe
pushw
lods
jmp
cmp
imul
jg
insb
in
sub
adc
js
mov
push
std
imul
lock
imul
mov
add
arpl
inc
jno
jne
loop
out
imul
mov
lea
sar
push
fwait
pop
aad
or
and
add
cmp
fisttpll
out
jp
popa
shll
aam
iret
mov
arpl
decl
sbb
pop
leave
popa
add
leave
enter
lods
and
push
test
pop
jo
push
out
fmull
gs
xchg
arpl
inc
dec
mov
xchg
pop
popf
js
mov
movsb
jne
icebp
sub
and
add
mov
pop
add
xor
test
mov
pop
cld
dec
mov
shrl
inc
cmp
cmpsl
mov
push
push
popf
lret
jbe
cmp
fldcw
adc
pusha
pop
adc
stc
add
out
mov
adc
stc
and
add
subl
decl
lret
sub
popf
lea
jge
shll
dec
pop
xchg
loope
cli
xor
test
lods
movsb
fstpl
clc
add
daa
adc
aad
cmpsl
mov
ss
dec
jno
ja
mov
in
and
vpmullw
jno
dec
stc
jo
inc
adc
loop
xor
cld
scas
jp
iret
enter
and
loop
jb
loopne
imul
scas
cmp
les
jae
jno
sbb
xor
pushf
add
and
movsl
and
fimull
adc
fbstp
mov
adc
icebp
loope
inc
testl
ret
inc
dec
ja
adc
shl
rorl
daa
xchg
pop
add
sub
add
cmpsl
sbb
mov
aaa
test
loopne
ljmp
jecxz
xlat
sub
out
fisubrl
leave
jg
add
mov
push
aaa
dec
outsl
push
aam
and
das
and
mov
inc
fldt
out
sub
sbb
jo
pop
int3
jmp
shrl
fadd
in
dec
aaa
in
ret
or
jns
mov
mov
aaa
sbb
insl
cmp
dec
es
sbb
push
jle
rcl
pop
ret
cmp
out
pop
stos
fmulp
negb
xchg
dec
push
pop
jno
jge
cwtl
push
rclb
nop
cs
xlat
das
and
fs
clc
push
push
push
mov
jle
repnz
cmp
test
push
test
mov
test
and
or
rorb
or
mov
xor
insl
xchg
push
pop
add
lods
adc
push
dec
in
test
loopne
mov
jne
aam
xor
popa
mov
std
jo
test
dec
and
test
push
jbe
dec
cmp
mov
jmp
cmp
pop
mov
or
je
sbb
sbb
mov
rdmsr
stc
lods
sbb
out
aas
pop
dec
mov
js
xlat
out
jmp
nop
adc
xchg
dec
inc
xlat
push
out
jns
sub
rep
insb
dec
imull
loop
in
ljmp
cmp
popa
idivl
dec
push
dec
dec
aam
pusha
test
lock
adc
orb
dec
pop
lods
cmpsb
in
inc
or
push
in
aam
pop
cmp
test
xchg
lods
clc
add
divl
mov
loope
lret
jg
jmp
movsl
sub
inc
in
dec
mov
mov
push
pop
sbb
ret
outsl
je
cmp
sub
out
push
test
jecxz
test
dec
das
cwtl
add
and
xchg
sbb
dec
movsl
push
loop
pop
jb,pn
nop
mov
rcl
sbb
cltd
cli
les
lahf
and
mov
scas
sub
mov
mov
repnz
inc
dec
push
outsb
jp
pop
pop
daa
mov
adc
scas
cmpsl
sbb
pop
push
mov
pop
fisubrs
mov
adc
fisttpll
sbb
cli
inc
or
pop
icebp
cmp
ret
gs
call
jg
sbb
clc
jbe
rclb
imul
pusha
push
sbb
mov
push
jne
lret
int
and
jmp
mov
lods
sbb
test
lahf
popf
push
push
xlat
push
subb
leave
and
fidivrs
fdivl
popl
and
enter
pop
mov
fildl
pop
add
movsl
les
imul
scas
mov
pop
lahf
outsl
cmovle
movsb
divb
xor
inc
in
clc
rcr
mov
cmp
fwait
stc
clc
lahf
jns
into
scas
mov
sbb
adc
pop
lds
xchg
test
adc
or
fstps
gs
ja
sbb
pop
sub
mov
cmpsb
scas
sahf
lret
out
mov
push
das
mov
xorb
shl
cmpw
test
add
cld
data16
insl
clc
jmp
imul
call
shll
jl
cmp
sub
je
dec
jge
movsb
stos
inc
cmp
adc
in
adc
inc
xlat
inc
mov
out
and
fisttpl
rclb
pop
cmp
xchg
arpl
add
mov
ljmp
jmp
dec
daa
jecxz
sarl
jno
cmp
sbb
loop
sahf
jb
push
or
or
mov
das
jns
sbb
ljmp
xchg
pop
push
mov
inc
mov
jb
andl
lret
imul
add
push
es
pop
mov
mov
nop
insl
mov
stos
and
pop
xor
pop
mov
push
test
xor
pop
mov
jmp
and
adc
in
es
je
pop
pop
push
inc
or
ja
fucomi
or
sahf
icebp
or
dec
int3
dec
adcb
xchg
push
push
movsb
inc
enter
and
iret
xlat
sbb
js
jnp
mov
sub
pop
fcmovnu
push
je
fdivrp
scas
mov
sbb
pop
js
iret
xchg
stos
adc
lea
or
and
mov
jp
fidivl
stos
pop
mov
push
test
jo
les
cmpsb
push
xor
scas
or
fptan
je
js
sub
mov
stos
xorl
sbb
addr16
jp
xchg
cmp
inc
pop
adc
jmp
dec
jne
testl
push
sub
push
pop
or
jbe
xor
add
mov
inc
inc
hlt
xchg
jecxz
orb
dec
add
repz
imul
in
sub
ds
inc
int
push
mov
jmp
dec
mov
pop
out
addb
cld
jge
idiv
stc
add
lret
stc
out
data16
pop
mov
jns
xchg
es
inc
jp
rcl
mov
sub
jne
pop
dec
xchg
sub
ljmp
and
and
push
inc
inc
dec
cmpsl
fwait
in
sbb
dec
sub
imul
pop
test
push
out
cmpsl
addr16
loopne
out
call
leave
jmp
mov
pop
dec
cltd
mov
aad
mov
orb
enter
jns
xor
je
mov
sbb
inc
sarl
push
fnstenv
gs
inc
in
and
call
and
inc
dec
icebp
add
pop
pop
inc
mov
nop
divl
shl
sub
mov
jge
out
sbb
pop
add
push
adc
lahf
mov
iret
enter
and
xchg
jnp
push
sbb
lods
add
xlat
adc
bound
xchg
into
clc
addr16
mov
fistpll
test
test
addr16
mov
mov
addr16
mov
leave
cmpsl
outsl
int
shl
cmp
dec
loopne
jmp
fxch
inc
cltd
xchg
jae
xchg
cmp
lret
jge
jp
xchg
mov
fs
sbb
imul
mov
int3
add
aas
mov
or
cld
jns
add
mov
fwait
arpl
mov
test
scas
shlb
mov
push
lds
test
sarb
int3
shlb
sub
or
push
fidivrs
mov
mov
outsl
loop
xchg
push
shll
ss
sub
cmc
pop
fildll
xchg
mov
jmp
fcoms
adc
push
rol
jnp
ljmp
cmpsb
push
out
addr16
das
cmpsb
jg
scas
fyl2x
call
lods
or
cmp
adc
sti
push
add
jle
or
cwtl
sub
push
add
ljmp
popf
inc
add
dec
sbb
out
or
mov
in
or
mov
repz
test
imul
ret
pusha
adc
adc
ljmp
push
cmc
xor
adc
jecxz
mov
mov
adc
out
pop
mov
and
enter
lret
movsb
pusha
mov
sbb
stos
repnz
adc
push
cld
lods
sbb
loop
sbb
scas
xlat
mov
mov
into
push
inc
out
clc
mov
les
adc
aad
mov
add
lret
mov
fwait
xchg
enter
in
inc
and
ret
inc
pop
lock
push
mov
fmull
push
test
mov
stos
mov
test
push
pop
dec
mov
push
push
mov
sbb
pop
add
xor
add
js
ret
iret
cmp
mov
sub
pop
push
dec
inc
lods
adc
push
and
jbe
jb,pt
mov
or
cmp
xlat
imul
add
sarb
jecxz
jecxz
mov
pop
gs
test
movl
sti
outsl
adc
sub
popf
cmpsb
dec
jno
test
out
jge,pt
sarb
dec
jns
repz
jnp
mov
mov
cmp
sbb
fisttpl
in
sbb
scas
ljmp
fstl
adcb
movsl
push
cli
jecxz
inc
imul
cmp
in
xor
aad
fsubl
loop
dec
int
scas
or
ret
jns
dec
outsb
mov
lods
mov
xor
xor
iret
shll
push
adc
in
mov
dec
inc
mov
mov
icebp
cmpxchg
mov
sub
pusha
inc
insb
jmp
mov
sti
pop
push
fiaddl
mov
inc
or
jae
push
popa
cmp
jl
out
xchg
mov
adc
scas
push
xadd
arpl
push
aaa
cmpsl
jo
dec
mov
stos
dec
pushf
jns
sub
out
sbb
mov
add
outsl
pop
push
sbb
or
and
mov
pop
cmp
aad
jae
dec
xchg
pop
mov
cmp
sub
xchg
sti
popa
pop
or
jl
mov
xchg
adc
sbb
pop
in
in
xor
cs
pop
dec
or
add
add
mov
jmp
lods
outsb
pop
inc
lods
dec
pushf
orb
mov
fldcw
stos
add
or
pop
insl
xchg
xor
shll
ja
push
jo
sub
xchg
jne
cmpsl
xchg
fimull
cwtl
stc
xchg
sbb
movsl
push
sbb
shll
stos
imul
fisubrs
jns
sahf
fdivrp
sbb
notb
add
mov
inc
insb
pop
mov
and
or
bnd
push
shl
dec
dec
xchg
shrl
push
out
ret
sbbl
in
pop
je
ret
mov
or
sub
mov
inc
mov
xor
rorb
jno
sbb
popf
xor
dec
mov
pop
out
or
sub
jg
add
ret
cs
jecxz
push
lods
push
mov
insb
mov
in
in
test
xor
loopne
mov
jmp
popf
pop
ds
cmp
mov
lret
stc
xchg
lahf
mov
pop
or
mov
iret
push
jmp
jge
cmpsl
adc
cmpsb
sahf
mov
into
and
cmp
xchg
loop
pop
add
xchg
fbld
shll
gs
mov
mov
push
dec
xchg
arpl
mov
pop
test
loopne
ret
sub
and
cmp
fnstsw
lock
add
scas
dec
xchg
inc
mov
ljmp
mov
aaa
incl
and
movsb
lds
inc
imul
xchg
iret
mov
test
lret
test
lds
repz
pop
cmp
cmp
mov
lcall
mov
mov
inc
and
push
add
mov
push
ret
lods
push
push
mov
div
pop
xchg
fxtract
lret
inc
pop
xchg
ljmp
lods
xchg
mov
mov
xchg
pop
sub
mov
mov
int3
mov
dec
je
call
cmpsl
and
mull
inc
addr16
mov
adc
push
adc
fsubr
inc
ljmp
hlt
jne
jb
mov
pop
mov
lds
xchg
dec
cmp
adc
testl
hlt
clc
push
lods
cs
adcl
out
in
cs
push
sbb
ljmp
fiaddl
int
and
dec
mov
push
adc
adc
mov
rcr
jbe
mov
push
mov
aad
lods
mov
xchg
fmuls
jg
add
outsb
bound
fcom
push
sub
sahf
push
mov
cmc
pop
hlt
fsubrl
jbe
sub
or
hlt
mov
adc
xchg
enter
cltd
or
mov
push
adc
sahf
mov
incl
icebp
xchg
push
pop
insb
hlt
movsl
push
das
test
mov
test
scas
nop
mov
or
aaa
lea
ja
cmpl
add
pop
adc
cmp
es
bound
adc
into
ficoms
in
test
cwtl
adc
pushf
xlat
dec
neg
mov
mov
jbe
lahf
inc
and
decl
push
cmp
loope
in
pop
add
adc
ljmp
xchg
rcrb
frstor
jmp
decl
js
in
inc
and
cmp
and
movsb
es
sbb
shrl
mov
orl
dec
ret
cwtl
std
hlt
test
cltd
dec
jo
call
iret
mov
mov
fildl
push
pop
push
adc
dec
orl
adc
movsl
pusha
mov
jp
xchg
inc
pop
insl
pop
sbb
inc
js
lods
dec
push
or
push
xchg
stc
mov
pop
jb
pusha
daa
mov
mov
jp
mov
push
addb
xchg
pusha
ret
fwait
or
mov
aas
mov
adc
test
cld
pop
pop
inc
pop
and
and
stos
mov
and
inc
mov
pop
lret
test
mov
sbb
ljmp
xchg
xchg
lods
mov
xor
and
mov
fsubl
popf
lahf
and
or
and
push
adc
mov
jecxz
mov
arpl
sub
les
cmp
jns,pt
adc
test
lret
rcrl
stos
test
cmp
push
pop
shl
xchg
popl
cwtl
mov
lods
mov
pop
push
push
cli
cld
pusha
or
xchg
mov
clc
aaa
xor
out
cld
mov
dec
adc
outsb
inc
pusha
lcall
sub
pop
sbb
and
in
xchg
lods
mov
out
enter
pop
fldcw
pop
stc
jmp
or
ljmp
jp
mov
pusha
addr16
fwait
mov
sahf
test
xchg
es
into
nop
jo
xchg
xchg
jno
pop
mov
cmp
sub
mov
shlb
orl
out
test
pushf
insl
mov
pop
enter
push
imul
ret
sbb
in
les
ljmp
and
xor
int3
in
out
in
pop
jg
repz
aas
out
mov
inc
jge
bound
sbb
lea
dec
pop
xchg
mov
pop
std
decb
jae
jnp
test
out
xchg
test
je
fisubrl
cmpsl
pop
cmp
mov
inc
leave
out
lods
mov
mov
insl
lret
incl
push
mov
mov
pop
test
inc
decb
pop
sub
in
inc
fs
mov
xchg
sbb
xor
aam
sahf
cmp
sbb
push
pusha
ret
sub
out
movsl
mov
jle
lcall
mov
sub
and
test
cmpsl
cltd
xlat
push
test
push
cmpl
mov
aam
out
pop
mov
add
lret
lds
jae
adc
mov
lods
sub
mov
add
sub
pushf
or
data16
stc
nop
jle
ja
dec
sub
add
rorl
pop
inc
mov
mov
out
fsubrl
mov
movsl
cmc
add
mulb
daa
jmp
call
aad
out
push
lcall
or
pop
push
cmc
inc
cmp
das
in
adcl
xchg
fwait
daa
push
pop
inc
out
out
jo
bound
arpl
out
imul
pop
mov
mov
push
out
jle
push
in
imul
cmp
pop
dec
and
mov
sbb
mov
in
in
cltd
mov
mov
adc
scas
mov
loopne
fs
and
inc
test
add
or
sub
mov
call
rolb
mov
cmp
test
daa
pusha
fcoml
testb
sub
call
fistpll
sbb
inc
sub
pop
dec
bound
aam
les
enter
jae
push
repnz
inc
dec
jl
xchg
and
add
in
cltd
adc
call
pop
mov
mov
inc
xor
jae
jns
insl
and
mov
jmp
xor
mov
pop
dec
test
loope
push
test
hlt
or
rorb
loopne
push
into
adc
mov
jns
fstl
pop
mov
bound
fwait
sbb
xchg
push
addb
dec
ss
and
dec
lods
mov
sub
jl
mov
mov
jne
jnp
shll
ja
cmpl
sub
or
or
jbe
arpl
jle
cmpsl
adc
mov
sbb
lcall
in
jns
lods
and
mov
test
xor
fdiv
or
push
adc
jl
cmpsb
sbb
add
ds
lret
mov
mov
fstpl
adc
aad
adc
lcall
pop
imul
sub
jne
aam
scas
xchg
and
hlt
jg
mov
shlb
pop
cmp
add
cmp
out
and
in
in
sbb
inc
fsubrl
add
lea
cs
push
clc
and
not
pop
inc
mov
dec
addr16
push
pop
leave
mov
aas
xchg
adcb
test
mov
and
sub
subl
push
sbb
fnstsw
xlat
sub
jecxz
xchg
out
or
clc
dec
sbb
lea
es
dec
ds
or
lds
push
stc
loopne
ret
push
push
pop
pop
and
outsw
loop
adc
push
sbb
cmp
and
ret
lock
xchg
test
repnz
dec
mov
dec
inc
jnp
or
jl
mov
mov
sub
sub
jno
cmpsl
jb
sbb
imul
cmp
dec
mov
jge
ljmp
mov
fidivl
push
addr16
xchg
mov
in
aad
stos
add
out
xor
out
iret
xchg
testl
rorl
seta
pop
push
or
ja
movsl
pop
or
xor
iret
fisttpll
adc
mov
sar
popa
pop
fiadds
sub
loopne
leave
repz
imul
nop
mov
or
decl
dec
mov
test
or
sahf
inc
lahf
jge
push
lds
es
jbe
movsl
mov
mov
or
mov
or
notl
cmp
xchg
pop
push
call
bound
xor
shlb
add
mov
pop
stos
nop
inc
lods
inc
mov
clc
inc
cmp
pop
scas
pop
push
fistpll
add
out
je
sub
mov
mov
movsb
imul
adc
call
jl
inc
stc
cmp
jae
das
lods
xchg
fnstsw
enter
es
push
leave
mov
inc
adcl
xchg
out
push
pop
pop
lods
mov
lea
cmp
push
nop
sti
ja
jbe
cmp
cmc
sub
lea
and
dec
push
jbe
jo
cmc
sbb
fldenv
mov
dec
clc
incl
loopne
pop
jbe
xchg
gs
sahf
pop
fsts
iret
mov
adcl
mov
push
aam
repnz
addl
das
adc
aaa
cld
and
pop
mov
gs
pop
cmp
inc
mov
mov
or
lcall
pop
sub
pop
in
dec
insl
and
mov
hlt
leave
mov
loopne
sub
cmp
push
inc
push
xor
mov
scas
jl
mov
adc
push
popl
adc
sub
mov
cmpsb
mov
or
push
repz
jnp
add
in
mov
orl
mov
inc
fdivrp
push
jbe
mov
mov
enter
hlt
and
jg
or
and
xor
or
popa
cli
cmp
xchg
int3
add
cmc
sarb
and
jl
int3
repnz
mul
mov
mov
mov
imull
cltd
push
cmp
je
aam
mov
cmp
lret
jle
inc
push
cmp
adc
or
push
adc
cmp
div
mov
xchg
xchg
cmp
lahf
jbe
mov
sahf
sub
std
out
icebp
or
xor
in
push
fnstsw
rolb
push
imull
sub
ja
data16
popa
sarl
cli
push
les
mov
mov
fnstenv
dec
call
xchg
push
int
test
xchg
fs
int
sbbb
jns
xor
pop
and
inc
fmull
add
xchg
sbb
rcrl
cmp
jno
dec
les
mov
roll
imul
mov
fstpl
jne
jnp
test
cmp
lcall
push
mov
sbb
and
or
sti
sahf
loope
arpl
std
lea
xor
and
mov
pop
sbb
push
lods
jnp
xor
sub
or
in
cs
fs
jo
jge
fmul
and
mov
subb
mov
xchg
shrb
xchg
mov
or
gs
pop
mov
mov
adc
sbb
or
mov
jle
imul
fs
adc
adc
dec
daa
ss
xor
xor
lret
js
scas
dec
fs
dec
lret
shl
pop
out
cli
pop
fisubl
jg
jbe
push
fcoms
cli
jb
out
cltd
fbstp
add
sub
mov
stos
lret
jle
movsb
cmp
push
rcrl
xchg
fdivrs
mov
jne
adc
sti
in
stos
adc
enter
repnz
outsb
xchg
adc
clc
jl
xchg
mov
push
pop
jb
out
popf
repz
sub
mov
pusha
fdivl
jp
cmp
xchg
sahf
push
in
shlb
repnz
cli
daa
xchg
cmp
mov
fistpl
jb
mov
ret
jo
mov
or
addl
inc
out
pop
adc
aas
cmp
dec
mov
in
fcompl
loope
inc
aad
mov
test
or
sub
pop
test
fadds
lds
push
cmp
loope
loop
ret
jnp
sbb
jge
xchg
xchg
shll
js
sub
jl
sbb
push
and
outsb
rclb
and
mov
aad
aam
das
and
flds
sub
subb
sbb
inc
cmp
add
or
mov
lds
aad
cmpsb
mov
cmp
add
jbe
pop
mov
stos
sahf
sub
shll
pop
aaa
mov
add
and
add
into
in
mov
mov
ss
or
frstor
aad
push
fsubl
mov
add
xlat
or
in
or
jl
testb
inc
mov
scas
notb
int3
clc
aam
mov
sub
das
sub
sub
popa
push
jo
test
ja
aas
rcrl
inc
push
jge
sbb
or
nop
stos
inc
sub
iret
add
data16
push
xchg
arpl
dec
daa
cwtl
aas
and
mov
jmp
dec
movsl
pop
outsl
xchg
iret
movb
pop
adc
mov
inc
hlt
mov
adc
adc
mov
je
icebp
mov
push
inc
lock
adc
ror
push
aad
test
and
pop
mov
sbb
add
shrl
lcall
shll
cmp
out
dec
inc
sahf
in
je
mov
test
xor
sbb
js
adc
adc
dec
jnp
mov
xchg
sbb
ds
sbb
add
sub
mov
push
sbb
lock
sbb
mov
popf
fld
mov
mov
push
stos
dec
hlt
jp
sti
jmp
out
mov
cmpsb
jns
sbb
xchg
mov
movl
nop
mov
pop
insl
das
mov
adc
sub
push
and
in
mul
xor
sub
fdivrs
int
lea
cmp
add
cmp
add
xor
test
stos
add
lcall
mov
add
pushf
add
out
and
push
pusha
shll
mov
fildll
dec
fiaddl
pop
lods
push
inc
dec
cmpsb
jbe
data16
or
outsb
lcall
sub
mov
sbb
cld
mov
xor
or
sub
fldt
and
cmpsl
adc
test
aam
hlt
lock
and
or
mov
js
ja
test
fnstenv
int
or
sub
inc
sbb
popf
jp
xchg
push
sub
sbb
cmp
inc
and
stos
mov
stos
push
out
mov
mov
into
jo
adc
stos
fbld
xor
inc
imul
push
lds
adc
sub
mov
dec
lret
pop
inc
xchg
sarl
stos
jge
hlt
jge
pop
adc
cmp
push
xor
daa
repz
push
adc
std
leave
and
or
cli
rcrl
pop
pop
loope
mov
rolb
inc
inc
mov
dec
scas
mov
jmp
shrl
cmp
jnp
aad
lcall
push
test
adc
sbb
cmc
aas
sbb
sub
ret
dec
cmpsl
bound
and
xor
sbb
push
dec
aas
ljmp
xchg
in
in
rolb
ljmp
cli
movsl
inc
in
and
clc
xchg
mov
stos
std
push
jae
pop
andb
pop
jge
jo
leave
hlt
aas
cmp
adc
and
imul
or
sub
jge
and
adc
push
and
cli
sub
inc
jb
stos
pop
ret
sbb
pop
pop
mov
roll
rorl
fisttpll
sub
fwait
push
mov
rolb
test
xchg
loope
aam
and
pop
jno
dec
sbb
xchg
movsl
ret
adc
xor
popa
pop
xchg
push
dec
and
test
stos
xor
mulb
lcall
fdivrl
pop
dec
adc
lcall
push
fadds
sbbb
xchg
stc
push
call
jmp
jmp
xchg
nop
sub
out
inc
lock
fnstsw
sbb
jno
movl
scas
dec
cmp
imul
add
sbb
and
out
mov
adc
aam
sub
std
out
dec
xlat
xchg
add
push
in
add
mov
lret
cmc
lods
loope
test
mov
jno
cmp
or
mov
cmp
ljmp
sbb
dec
rorl
mov
test
push
fisttpl
mov
addr16
stc
mov
ja
and
or
push
ljmp
ja
arpl
cmpsl
dec
sbb
in
idiv
cmp
int
mov
push
out
in
imul
in
lcall
mov
aad
dec
sbb
and
jp
mov
inc
jno
pop
sbb
and
cmp
les
mov
das
and
push
jle
enter
inc
popf
test
xchg
mov
pop
nop
push
cmpsl
add
push
adc
xchg
mov
cltd
push
int3
pop
rol
adc
mov
mov
adc
jo
jg
mov
mov
inc
mov
sub
notl
mov
mov
dec
and
pop
mov
push
lods
pop
mov
adc
push
loop
jmp
loope
jp
pusha
into
and
push
int
sbb
loopne
dec
cltd
xlat
mov
shrb
mov
cmpsl
aam
js
cmc
cltd
pop
jg
nop
lret
dec
popa
xchg
shrb
xorl
push
out
cwtl
pop
in
sahf
xor
outsl
mov
test
pop
and
testb
jp
icebp
inc
mov
pop
out
push
iret
jb
jmp
ds
xor
lcall
cmpsb
sub
add
push
insl
xchg
adc
cmpsb
cmp
pop
push
aaa
cmp
jge
cmp
lcall
cmpsl
shlb
push
pop
cmc
inc
push
mov
sahf
xchg
inc
sub
mov
jo
jns
fidivrl
das
loope
sbb
test
and
push
in
add
neg
pop
fnstcw
sub
jbe
adc
inc
adc
out
pop
aam
daa
cli
mull
sub
mov
pop
fsts
cld
ljmp
xlat
int
mov
pop
popf
aam
arpl
aad
xor
insb
scas
iret
outsl
sahf
xchg
gs
sub
addr16
jge
mov
bound
cmpb
or
ret
sbb
mov
mov
call
sub
sbb
aam
xchg
jno
pop
mov
xchg
out
hlt
xchg
dec
mov
sub
mov
push
enter
push
push
in
jae
adc
shll
sbb
adc
rcrb
or
xor
pop
lahf
lcall
outsb
decb
jmp
cmpsb
test
xchg
hlt
mov
clc
cmc
jle
jo
xor
ds
dec
mov
fsts
mov
sahf
lods
jns
sbb
fisubl
divl
and
lahf
inc
xchg
inc
out
test
pop
mov
out
movsl
push
into
sahf
mov
mul
cmpsl
inc
inc
xor
inc
cltd
pushl
sub
fcomps
loop
shll
xchg
stc
inc
loop
add
imul
or
movsb
mov
push
jbe
or
and
jge
test
into
xorl
xor
fists
mov
and
pop
dec
push
out
mov
push
push
lret
inc
stc
xlat
lods
and
les
xchg
adc
sbb
arpl
jmp
or
fmul
sbb
rorb
repz
lods
test
fs
inc
xchg
cmpsl
ror
xchg
imul
fsubrs
inc
test
mov
fwait
dec
pop
repz
jle
jno
fwait
ret
movsb
mov
jg
lods
push
cmp
dec
xchg
push
ds
cwtl
jb
xchg
bound
jecxz
mov
inc
sub
popa
dec
pop
mov
pop
sbb
mov
pop
dec
xchg
lods
push
dec
in
jns
fsts
loopne
rorl
mov
pop
xchg
ficomps
mov
fistpll
dec
or
cwtl
xchg
mov
fistpl
push
fs
cmp
outsl
inc
mov
inc
jb
daa
pop
mov
test
and
aaa
push
xchg
mov
in
stos
or
fs
inc
xor
sub
push
cmc
xor
sbb
insl
sub
sbb
dec
pop
jl
mov
loope
mov
aas
sarb
pop
add
jb
xchg
sti
test
mov
lods
not
mov
cmp
push
mov
push
mov
dec
jns
fistps
mov
pop
ror
jb
ret
or
cmpsl
adc
cmp
mov
rolb
pop
or
mov
push
arpl
mov
push
jl
aad
fildll
or
mov
adc
outsl
enter
mov
xchg
shr
lcall
xlat
into
out
and
push
repz
insb
push
hlt
int3
mov
popa
pop
icebp
mov
fs
rol
jae
mov
mov
mov
inc
rol
mov
lret
rol
xor
daa
fsub
rcr
jmp
pop
lods
stc
mov
test
sbb
mov
sbb
xchg
pop
jno
testb
cwtl
sub
lret
push
scas
aas
je
adc
repz
pop
daa
push
jno
push
xchg
jae
cld
cmpsb
cmc
jg
mov
add
je
xor
add
mov
cmpl
lds
mov
xor
leave
fsts
jle
adc
dec
mov
repnz
mov
mov
jns
pop
ret
mov
mov
dec
mov
cwtl
cmp
imul
pop
stc
mov
decl
divb
adc
imul
push
sub
lods
and
addb
jmp
rorl
sahf
lret
push
mov
push
pushl
pop
sub
hlt
add
xchg
sbb
and
add
or
orl
push
inc
pop
sbb
movsl
pop
xor
cmpsl
les
jae
out
push
mov
aaa
cmp
cmp
hlt
and
inc
dec
mov
arpl
cmc
adc
jmp
cmp
cltd
mov
pusha
lods
cmpsl
adc
jg
iret
mov
cmp
cmp
inc
mov
or
fisttpl
out
xchg
movsb
sahf
popl
sub
repz
imul
sbb
call
mov
push
orl
es
addr16
dec
dec
jmp
mov
dec
xchg
or
jo
push
mov
push
cmp
cmp
shl
insb
cmp
in
loope
mov
insb
fstps
push
sub
inc
push
scas
dec
mov
jle
cli
pop
aaa
sub
sbb
lds
mov
xor
insb
and
in
cmp
sbb
sub
lret
scas
cmp
xor
mov
xchg
mov
ds
sbbb
pop
jb
or
or
sbb
fadds
lds
call
mov
jno
mov
lock
sarb
jecxz
jecxz
daa
sub
push
and
inc
test
int
je
pop
clc
out
rolb
data16
icebp
fists
outsl
sahf
adc
mov
push
std
adcl
mov
xchg
call
shlb
mov
push
rcrl
clc
lret
push
test
loop
insl
pop
outsl
test
mov
add
fs
test
xor
pop
pushf
daa
loop
xorl
fucom
jle
icebp
iret
lock
outsb
lret
decl
jmp
rcrl
sbb
bound
bound
mov
jl
sub
fidivrl
xchg
cmp
and
outsb
inc
imul
jg
movsb
push
mov
mov
mov
dec
test
or
jmp
js
shll
sub
clc
fdivl
or
jge
mov
push
jp
and
ds
cmpsb
or
xor
mov
testl
mov
jno
pusha
sbb
jmp
pushf
xchg
fidivl
aaa
adc
adc
mov
xchg
xlat
aaa
mov
ss
ds
jge
jl
popf
sub
pop
test
mov
stc
fisubs
sarb
dec
mov
fisubrs
jno
push
insb
mov
outsb
lea
push
mov
sti
rcr
jecxz
inc
cmp
jle
jb
adc
mov
loope
jge
scas
outsl
inc
jle
mov
fildll
mov
mov
imul
aas
push
mov
cmp
mov
aas
sbb
add
mov
out
cs
into
mov
shrl
sbb
je
sbb
push
jmp
push
xor
inc
mov
pop
and
lahf
xchg
cmp
ret
pop
xchg
sub
ds
and
scas
arpl
sub
adc
and
sbb
xor
shlb
jnp
pusha
mov
sub
cmp
sub
out
mov
mov
jmp
xchg
test
add
sub
aad
clc
clc
not
mov
scas
loope
xchg
rcrb
or
test
push
mov
stc
jae
xor
decb
add
inc
and
push
mov
mov
fstpt
jecxz
test
sahf
mov
faddl
fstpt
xor
popf
xor
inc
xor
xchg
push
cmp
adc
adc
cmp
dec
lcall
insb
jns
rorb
cwtl
lahf
cltd
cmc
orl
jle
sbb
pop
mov
sahf
push
push
and
jnp
mov
xor
mov
cmp
pop
push
js
sbb
pop
fiaddl
stos
repnz
test
add
lds
sub
mov
jo
pushf
inc
sub
mov
pushf
ret
push
jnp
sub
movsl
xchg
in
into
inc
inc
jle
sti
mov
mov
dec
sbb
or
ds
test
or
pop
ja
test
fidivrs
outsb
xor
mov
or
fsubrs
es
outsb
je
cmp
pop
pop
iret
mov
adc
mov
add
cmp
xchg
stc
jl
lods
and
xchg
aad
lods
aad
mov
pop
mov
or
pop
and
lea
fwait
mov
js
fwait
sub
xchg
loop
movsb
pushl
in
jnp
pop
push
or
cltd
les
jl
in
adc
outsb
enter
inc
inc
jecxz
jae
je
mov
adc
sbb
cmp
cli
dec
dec
dec
jbe
lret
cmp
or
pop
pop
mov
cmp
mov
or
ss
in
push
sub
and
dec
jo
add
rol
xchg
data16
ss
add
push
imul
mov
sub
jns
testl
dec
lret
in
push
stos
sbb
testb
sbb
xor
call
mov
jae
mov
add
cltd
xor
inc
out
xorb
gs
repnz
lcall
arpl
xlat
push
in
cmp
sub
and
and
sti
sbb
jp
mov
aad
lds
shll
xor
cltd
fidivl
add
in
in
sub
ljmp
mov
outsb
movsb
cmp
lods
push
icebp
push
cmp
ss
inc
inc
xor
jns
push
test
in
cltd
push
mov
icebp
aad
jl
rclb
dec
cs
test
xor
push
ds
popf
es
in
pop
push
fbld
adc
pop
or
lods
pop
or
pop
ds
lahf
out
inc
iret
int3
jg
stos
mov
cmpb
loop
mov
jae
lret
pop
mov
loope
xor
xchg
push
and
popa
cmc
or
lods
push
ret
xor
xor
jmp
arpl
push
xor
pop
sbbl
cmp
xor
roll
pop
int3
push
lea
push
shrl
loopne
mov
mov
ljmp
rclb
jno
add
jle
or
int3
pop
pop
jns
ret
adcl
les
cwtl
xorb
xchg
ret
stos
push
cmpl
inc
loope
outsb
rcl
mov
lcall
aaa
sbb
std
notb
jb
sub
cmp
xor
xchg
movsb
lea
int3
loopne
jmp
jg
pop
fidivs
aas
les
pop
mov
arpl
sahf
mov
inc
push
jle
imul
sub
jae
mov
jl
jne
jns
pop
mov
add
in
fwait
push
adc
cmpb
sti
inc
or
xchg
test
sahf
mov
inc
xor
dec
popf
aad
mov
or
rolb
pop
cmc
push
cs
add
test
pushf
mov
fists
mov
rolb
mov
cmp
and
mov
xchg
popf
hlt
or
js
gs
dec
sub
mov
lock
xchg
inc
mov
ret
popa
cmp
xchg
outsb
cwtl
lea
sbb
mov
test
call
dec
insl
es
popa
sbb
ds
inc
add
mov
fstpl
fsts
mov
push
je
or
lock
and
ret
lea
mov
daa
repz
mov
lods
test
addr16
mov
fisttpl
dec
in
inc
pshufw
adc
hlt
xor
cld
jg
sub
scas
cmovge
cs
fsubs
inc
cmpsb
cmp
ror
fcoms
repz
movsb
cmp
jns
xor
or
call
sbb
sbb
mov
and
lahf
cmpsb
fistl
add
fsubs
lahf
inc
in
addr16
aam
test
lds
push
push
add
mov
aaa
mov
cmpsl
loop
xchg
jnp
stos
daa
cmpsb
push
shrl
pop
aam
sub
mov
mull
out
mov
repz
jae
push
mov
loope
shlb
ret
shrl
jg
xor
mov
fisttpll
lds
movsb
cmp
sub
shl
pop
mov
pop
jecxz
inc
dec
xchg
push
inc
mov
enter
pop
inc
mov
mov
jmp
aas
fdivs
stc
add
movsl
shl
icebp
sti
popa
ss
arpl
out
fildl
xchg
loop
mov
sahf
stc
mov
scas
fs
lret
push
les
stos
inc
sub
iret
icebp
jns
aaa
or
ja
push
ja
ljmp
cltd
jle
loopne
fldt
push
add
or
xor
adc
cmp
xor
mov
and
sbb
cmpsb
lret
in
daa
scas
das
subl
or
sbb
fdivrp
push
daa
cmp
pop
scas
cld
push
and
xor
nop
adc
mov
xor
adc
mov
xchg
cli
ss
in
ss
cltd
xchg
fidivl
pop
lret
idivb
xor
mov
xchg
cmp
sbb
or
mov
test
pop
ljmp
inc
inc
es
mov
jle
bound
mov
mov
cmpsb
leave
push
lea
jo
push
clc
add
sarb
mov
movsl
outsl
mov
fs
nop
ret
stc
xchg
fucom
and
sub
xor
ret
mov
and
arpl
sub
jb
out
add
xchg
push
mov
andb
cmc
les
dec
subb
cmp
sub
jb
push
mov
mov
pop
cmp
push
xor
hlt
movsl
test
inc
mov
xchg
adc
xor
aam
call
jle
jns
into
dec
jbe
es
imul
xor
mov
loop
push
xor
int
xor
xor
xor
push
insl
cltd
pop
pop
dec
ret
dec
push
repz
fdivrs
cmp
inc
das
stos
jns
xchg
icebp
xor
mov
out
mov
xor
xchg
dec
xor
ja
mov
jnp
lds
or
xor
sbb
rcl
jecxz
mov
cmpsl
cmc
jae
cmp
jno
adc
iret
mov
int3
or
xor
cmp
int
sub
mov
sbb
xor
inc
data16
mov
add
mov
divl
jmp
int
test
sbb
jle
cmp
mov
xchg
test
sbb
ja
mov
adc
jle
adc
cli
jl
test
push
adc
push
test
in
sbb
inc
push
push
push
sbb
sub
sbbb
loopne
jmp
dec
mov
pushf
test
or
loopne
push
cmp
adc
cmc
pop
pop
jno
dec
fs
loop
push
out
cmp
out
jg
subl
movsl
loopne
sub
lret
in
ret
sub
shll
fisttpl
adc
and
or
stc
rorb
repz
fcmovbe
negl
cmp
ret
out
fs
jp
jge
out
rcll
stos
or
cwtl
gs
adc
mov
mov
mov
fdivl
and
arpl
popl
mov
sub
sub
imul
add
add
mov
fsts
xlat
push
and
mov
mov
pop
loope
sbb
aaa
loope
movsb
outsb
xor
mov
jecxz
sbb
sub
outsb
bound
xlat
sbb
movsb
inc
xorl
repnz
jnp
push
fmul
cmpsl
and
out
aam
push
pop
ss
test
test
clc
jo
sub
mov
xchg
push
lcall
outsl
mov
push
repnz
rclb
repnz
scas
mov
fistpl
mov
das
jmp
sub
jge
xchg
adc
gs
mov
push
push
xor
popa
pusha
adc
pop
rol
shlb
push
aaa
test
jno
sbb
adcb
ds
sub
ret
bound
push
push
sub
dec
mov
fwait
popa
or
out
inc
pushf
lret
aam
and
push
jg
pop
decb
sbb
dec
pushf
lods
outsl
sub
jge
rcrb
mov
test
inc
in
mov
lock
lods
jne
rorb
jae
mov
cmp
mov
cli
push
les
je
jp
aam
stc
test
repz
stos
daa
add
out
enter
pop
out
xchg
mov
icebp
pusha
mov
sub
dec
test
andl
cltd
call
jg
aaa
xchg
mov
push
jns
sbb
mov
add
je
add
cmc
aas
sbb
jae
clc
jmp
push
popa
sbbb
push
and
or
filds
jecxz
xor
sarl
test
jbe
push
pop
mov
test
pop
nop
hlt
call
popa
sub
scas
orb
push
cmpsb
xchg
and
lret
ss
negb
pop
lods
loope
into
leave
mov
mov
jno
pop
xchg
in
shlb
movsb
jne
and
test
in
sub
aas
mov
inc
fldt
pusha
lcall
in
stc
test
je
sub
mov
pop
outsl
stos
lock
mov
stos
mov
jns
pop
fidivrl
test
jp
ja
fmuls
push
xchg
cmp
arpl
call
cld
out
mov
xchg
div
into
aas
outsl
pop
adcb
addr16
cmpsb
and
jg
sub
mov
loopne
dec
es
ds
in
mov
aaa
out
and
jns
shlb
cld
mov
fdivr
imul
int
stc
mov
xlat
int
inc
lret
push
dec
lds
mov
and
gs
cmc
outsb
and
in
cmpsb
add
or
adc
sbb
pop
nop
fnstcw
mov
inc
pop
outsb
sbb
jl
loop
inc
cmp
jle
inc
mov
fsubrs
sahf
enter
push
mov
pop
push
xor
fs
jns
or
sbb
pop
sub
dec
dec
insl
lret
popl
pop
xor
repnz
push
mov
clc
negl
cltd
cs
sub
pushf
sbb
es
pop
insb
or
mov
loope
mov
mov
dec
mov
mov
cmp
stos
mov
xor
cmc
pop
pop
stos
das
jne
sbb
jl
aaa
jge
cmp
dec
cmpsl
jecxz
jbe
les
push
shrd
xchg
nop
push
rol
xorl
mov
pop
add
cmpsl
ja
adc
and
sub
lock
mov
lods
imul
addr16
jecxz
jle
test
in
insb
ret
xor
aas
loope
loope
jmp
shrb
sbb
outsl
gs
negl
clc
sbb
and
arpl
jl
inc
or
inc
jg
mov
pop
dec
repnz
scas
aas
pop
repz
jecxz
negl
insb
in
test
fists
in
imul
addl
ja
inc
fnstenv
js
xor
popa
outsl
xor
xlat
ret
adc
cmpsl
pop
sbb
in
movsb
sub
outsb
mov
movb
inc
fwait
lods
scas
leave
mov
sbb
sbb
cmp
int
jb
div
iret
clc
pop
cmp
adc
out
add
out
inc
leave
mov
mov
mov
in
negl
or
andnps
sub
enter
fwait
push
jecxz
mov
nop
jae
mov
bound
inc
and
out
in
pop
xchg
in
inc
cwtl
insl
add
push
aam
iret
lods
sbb
cmp
stc
xor
dec
pop
js
push
xor
punpcklwd
push
inc
outsl
push
push
lock
sbb
or
jne
sarl
xor
push
mov
cmp
daa
xor
dec
jge
insb
ret
shrb
mov
push
push
aad
adc
push
xchg
ror
xor
out
push
rcrl
cmpsl
add
xchg
sbb
andb
sub
xor
gs
jae
jge
fidivrl
pop
mov
out
ficoml
push
stos
xchg
test
dec
xchg
ds
test
push
xchg
dec
and
popa
mov
psllq
int
in
add
dec
jno
into
enter
xchg
hlt
mov
ljmp
sub
mov
mov
lahf
cs
and
jg
inc
dec
mov
fidivrl
testb
push
cmp
insb
jmp
add
outsb
dec
clc
ljmp
mov
cmp
ljmp
movsb
rcl
xor
sub
jnp
aaa
xor
insb
js
lock
cwtl
push
inc
push
lret
mov
arpl
lods
xlat
jns
adc
xor
cmovno
mov
popf
mov
dec
test
cmp
mov
loopne
rorl
xchg
not
pusha
jg
sub
jl
xor
loop
or
into
out
xor
push
xor
sarl
jg
push
in
jno
push
lahf
xchg
scas
and
ret
cmpsl
cmpsl
cwtl
add
jle
mov
insb
iret
xlat
scas
adc
int3
pop
add
loop
pop
fbld
mov
stos
cli
sbb
mov
sbb
movsl
mov
shr
or
jmp
jns
xor
xlat
scas
jb
gs
mov
inc
ror
or
add
sbb
xor
je
fiaddl
orl
push
stos
sub
aad
lods
pop
mov
clc
mov
icebp
adc
ret
hlt
push
ja
xor
mov
orl
pop
pop
inc
sub
xor
or
ss
arpl
rcl
jge
push
out
add
mov
mov
push
xor
ss
jo
pop
add
arpl
inc
int3
in
lret
mov
adc
les
xchg
stos
add
inc
out
push
dec
bound
lret
int3
fwait
push
sahf
data16
push
enter
jns
stos
or
shrb
cmpsb
aas
jno
xor
stos
cli
arpl
mov
js
cmp
sub
pop
out
jmp
aad
fstpt
repnz
lret
ja
push
inc
jb
js
int
sti
mov
push
das
negl
testl
or
xchg
mov
cmp
sub
mov
xchg
in
dec
sbb
cmpsb
xchg
out
jno
cmp
and
xor
leave
stos
loopne
sub
inc
pushf
lds
rclb
mov
in
jmp
sub
rol
push
push
or
xlat
xor
lret
and
sbb
aad
cmpsl
sarl
notb
je
test
add
push
push
rcrb
in
jle
or
inc
push
push
push
imul
mov
imul
mov
push
push
inc
xchg
andb
xchg
test
loop
hlt
cmpsb
arpl
insb
sbb
popf
or
ficomps
mov
fwait
mov
insl
cwtl
popf
or
into
xchg
lods
fdivl
loop
addl
pop
loop
push
dec
push
inc
cmp
dec
aaa
sbb
out
std
jl
pop
lret
aad
jmp
xchg
pop
xor
dec
out
cmc
jl
mov
divb
leave
stc
jge
stc
inc
ror
add
cmp
je
andb
mov
aam
icebp
xchg
mov
fcompl
mov
into
or
out
scas
das
ja
fs
or
fldl
or
dec
popf
lods
shll
or
aam
ret
aad
ret
inc
lea
mov
inc
div
xorl
popa
mov
push
xchg
push
xor
js
aam
mov
cli
test
xor
fdivl
jb
xor
jmp
addr16
inc
jmp
inc
outsb
dec
push
pop
and
add
dec
lods
cld
dec
jnp
mov
cwtl
and
cmp
js
inc
inc
jb
pop
push
inc
sbb
in
push
cli
jmp
movsl
loopne
jae
call
mov
nop
xchg
sbb
xchg
mov
jns
push
mov
cmp
sarl
ljmp
jmp
push
push
in
push
nop
cmp
pop
xor
cmp
jns
lahf
stos
ss
ror
push
arpl
mov
push
mov
stos
add
sub
adc
aam
popf
dec
sbbb
cmp
push
bound
aad
xchg
mov
out
lcall
imul
jno
ret
mov
cmpsb
jg
pop
xchg
enter
adc
stc
iret
fiaddl
sub
pop
push
push
test
data16
xor
nop
xchg
nop
outsb
jmp
sub
and
int3
faddl
add
sbb
test
in
xor
and
imul
js
adc
out
js
loope
lods
subl
outsb
or
jp
sbb
loopne
enter
adc
rcrb
push
xorl
test
xor
jno
hlt
ret
das
mov
imul
inc
mov
loope
adc
push
cmp
mov
push
jnp
mov
je
mov
add
in
lcall
dec
lret
xchg
subl
bound
jg
dec
je
mov
cmp
jmp
cltd
xor
in
jnp
cli
fdivs
mov
xchg
xchg
push
push
mov
sbb
jne
mov
cltd
push
std
dec
pop
movl
call
sbb
movsl
mov
stos
adc
popa
test
pop
cli
std
jl
ret
icebp
mov
lock
mov
mulb
cmp
jbe
cmp
xchg
cli
aam
jle
pusha
pop
sbb
in
cmp
adc
xchg
ds
addr16
xchg
push
outsb
fnstenv
mov
pop
mov
inc
push
test
aaa
pusha
add
jge
sbb
sub
adc
jle
xor
mov
mov
xor
pop
int3
aad
mov
pop
sbb
mov
cmp
das
lods
pop
scas
jmp
js
aas
mov
pop
sub
pop
fildl
lahf
adc
or
inc
movsl
out
fwait
imul
adc
mov
inc
enter
jecxz
rol
std
jnp
insl
xor
jmp
mov
inc
repz
or
sub
scas
in
and
mov
push
in
out
inc
int
inc
lret
sbb
add
ss
dec
jmp
sbb
mov
adc
add
out
orb
addr16
andl
pop
icebp
nop
into
lods
and
inc
dec
sti
xchg
cmc
ret
sbb
jbe
rcll
cmpsl
mov
mov
add
jnp
std
movsb
cmp
cs
add
setle
inc
xorb
fstps
sbb
fnstsw
jle
xchg
out
icebp
stos
sbb
xor
js
mov
xchg
das
rorl
and
enter
shr
push
xor
xor
cli
ficoml
mov
enter
scas
fwait
test
push
outsl
push
pop
scas
mov
cmp
dec
sbb
rcll
cmpsl
jns
push
into
and
cmpsb
sbb
into
and
dec
fcmovnu
push
lahf
in
addr16
mov
imul
stos
stos
jecxz
sbb
shrl
xchg
add
hlt
xor
mov
in
jecxz
xchg
int
outsb
aas
cmp
adc
xorl
mov
inc
outsb
stc
push
pop
cli
push
clc
or
inc
and
mov
or
jns
mov
pushf
gs
xchg
aas
in
rcr
decb
outsb
push
or
add
inc
fnstsw
xor
in
sub
dec
call
lret
sub
adc
push
adc
sub
mov
rolb
popf
lods
psubsb
mov
xchg
mov
jmp
jge
addr16
negb
mov
add
repnz
inc
xlat
add
jno
cwtl
mov
out
iret
pop
test
stos
xchg
aam
push
and
shrb
cwtl
loop
pop
inc
scas
call
xchg
adc
mov
pop
lret
shrb
or
rcll
pop
lods
cmp
push
fwait
movsl
jl
rcrb
sbb
lea
in
sbb
adc
push
mov
stos
jo
add
and
imul
fstl
fldt
mov
inc
pop
lret
cltd
test
loopne
add
mov
das
mov
out
or
inc
push
rol
fsubrl
xchg
clc
roll
hlt
pop
mov
insl
pop
sub
insb
push
pusha
and
aas
test
in
enter
jnp
int
out
dec
clc
aas
pop
ficomps
jns
movsl
push
cmp
mov
or
mov
pop
push
sub
mov
aas
scas
data16
push
in
mov
sub
jne
inc
mov
mov
and
scas
push
xorb
push
lods
mov
adc
mov
lods
es
fidivs
cmp
je
pushl
mov
jo
fistpl
jmp
pushf
sbb
mov
cli
sbb
cli
pop
add
jno
arpl
je,pt
sbb
insb
lea
in
or
stos
cmp
pop
data16
test
scas
nop
xor
loop
lods
das
inc
int
lds
mov
jno
mov
add
popa
xchg
scas
icebp
sbb
jb
adc
xchg
addb
mov
jmp
inc
inc
pop
jne
push
clc
sarb
into
je
ror
nop
inc
in
sbb
dec
add
idivb
sti
mov
sub
and
shrb
das
popf
outsl
movsb
cmc
movsb
dec
popa
push
pop
inc
insb
inc
mov
xchg
push
jmp
mov
lahf
loope
into
add
fisubrs
cmp
repnz
jns
stos
in
or
lds
lods
mov
icebp
pusha
loopne
lea
adc
ljmp
cmp
dec
out
mov
aam
cmp
fnstcw
cmp
outsl
jno
jecxz
adc
push
push
sub
sub
fcmovne
leave
jbe
dec
sub
mov
movsl
inc
cmp
jecxz
lea
int
divl
xor
aas
daa
repnz
cmpsb
or
std
push
std
jle
imul
sub
ficoms
cmp
mov
inc
pop
scas
daa
sarl
loop
jb
push
adc
adc
popa
pop
sub
jecxz
rclb
cmp
lods
hlt
pop
mov
subb
imul
mov
cmpsl
pop
out
inc
addl
push
push
pop
stos
push
lret
jge
mov
push
pop
out
pop
mov
enter
push
out
out
push
data16
aas
mov
cmp
fs
lret
xchg
mov
dec
test
push
loopne
outsb
lds
es
cmp
xor
fcmovu
mov
xchg
rcll
mov
aam
xchg
ja
sahf
pop
inc
sbb
jmp
sub
outsb
out
jge
lods
or
lret
fidivs
int3
push
clc
push
xchg
add
rcl
adc
rcr
cmp
and
out
and
aad
or
sbb
mov
jb
aad
mov
xchg
addr16
jns
lcall
pop
jbe
lcall
push
js
aas
std
imul
daa
cltd
mov
cmp
dec
lahf
testb
shll
cmp
insl
or
into
sub
scas
mov
icebp
xor
shrb
or
mov
stos
loopne
rcll
pop
mov
push
or
mov
test
jl
mov
add
ds
add
arpl
jecxz
mov
fstps
inc
repz
sarb
aas
data16
mov
push
ds
or
ret
mov
insl
adc
sub
adc
mov
lea
adc
cmp
jnp
insb
push
sub
js
mov
inc
sub
cli
xor
add
dec
sahf
mov
add
repz
xor
in
adc
adc
es
fimuls
ds
add
lea
push
xor
stos
fldt
rorb
jge
mov
jge
adc
pminub
in
nop
jecxz
movhps
loopne
loopne
out
lret
iret
xor
lea
jbe
test
mov
repz
cmpsl
dec
sbb
addr16
mov
sahf
jmp
lds
mov
loope
rcrl
ficompl
inc
cltd
xor
ret
mov
xchg
dec
jp
cmp
add
sbb
inc
inc
push
fdivrs
pop
add
dec
sub
pop
adc
stos
enter
out
xchg
pop
mov
mov
inc
and
les
das
push
xchg
sub
dec
mov
and
pop
xor
fcompl
pop
inc
and
jae
sub
inc
fstp
sub
pop
cmp
cmp
push
cmp
pop
outsb
push
adc
repnz
sar
mov
push
inc
leave
loop
and
and
int3
pop
daa
xor
out
fistl
int
push
sbb
orl
icebp
add
ficomps
lret
push
jne
jo
xchg
rolb
ret
push
mov
rcr
push
pop
mov
fs
dec
jns
std
adc
ror
mov
js,pn
mov
xchg
out
inc
xchg
scas
push
cmp
fisubs
test
subb
in
push
jae
hlt
mov
test
jmp
das
into
scas
xchg
adc
cli
xor
mov
sub
sub
inc
and
inc
cwtl
add
cmpsb
imulb
sbb
adc
scas
add
notl
inc
insl
xchg
or
jb
cmpsb
or
scas
test
rcrl
pop
pop
std
fisttps
push
xchg
sti
xchg
cs
lcall
cmc
mov
fdivs
lea
dec
adc
sbb
xor
ds
push
in
popa
push
or
xchg
pushf
jo
dec
stos
push
pop
or
push
popf
in
and
test
xchg
out
movsl
push
ror
fs
and
stc
push
and
insl
mulb
popf
cwtl
mov
jl
enter
and
dec
mov
outsl
outsl
jbe
mov
mov
test
test
mov
mov
js
fbstp
pop
jae
andb
xchg
push
fwait
cltd
int3
xchg
lret
jo
and
fidivrs
lock
loope
fimuls
mov
or
lock
test
les
inc
xchg
sarl
push
add
push
sub
faddp
jp
xor
das
pop
xlat
pop
push
sbb
push
add
mov
mov
adc
stc
push
or
pop
or
xorb
sub
push
cs
sub
imul
ds
sub
addr16
in
adcl
jecxz
in
in
jecxz
lea
mov
mov
ret
icebp
and
pop
fnstenv
aas
inc
cld
imul
mov
mov
jae
int
xchg
pop
inc
push
arpl
inc
test
movsb
jge
clc
xlat
stos
xor
jnp
mov
jg
daa
add
adc
or
test
popa
lea
mov
jge
ret
dec
xchg
jbe
add
jmp
std
inc
movsl
mov
rorl
sbb
test
sbb
loop
imul
sbb
fmul
lcall
jne
push
scas
insb
jbe
jo
xlat
mov
fcmovnb
rclb
add
lods
mov
sbb
add
jbe
sbb
lock
arpl
sub
in
imul
lcall
push
shlb
sub
orl
imul
imul
testb
in
mov
and
movsl
mov
sbb
adc
fs
mov
cmovle
in
aas
sbb
inc
cmp
imul
pushf
fwait
jg
mov
outsb
popa
adc
lock
sbb
push
iret
mov
cmp
dec
mov
push
or
xchg
fiaddl
jecxz
fidivs
lods
jge
test
lcall
repz
int3
cmpsl
es
stos
adc
sbb
inc
jno
lds
jge
xor
mov
pushf
xchg
mov
inc
fs
or
jle
xchg
and
mov
jae
out
xchg
inc
mov
fildl
int
in
pop
aas
jo
addr16
sti
dec
in
pop
xor
inc
sbb
fsubrl
popf
stc
push
stc
out
ljmp
in
aam
call
and
in
lahf
enter
lcall
jb
sbb
mov
and
stc
xlat
mov
cmp
add
and
repnz
sarb
jns
dec
mov
xchg
push
push
idivl
add
int3
repnz
lret
std
mov
stc
rorb
arpl
in
sysret
int
mov
lret
inc
lret
arpl
sub
and
pop
sub
test
lods
ret
push
cmpb
push
sub
push
out
loope
imul
pushf
aas
jnp
push
lods
jecxz
cmp
inc
pop
fstl
scas
cmp
xor
and
dec
js
xchg
inc
mov
stc
and
sbb
cmp
push
push
es
mov
or
call
push
dec
ficompl
es
adc
or
or
into
xor
fs
dec
xchg
cmp
sub
repnz
jo
aas
inc
sbb
xor
pop
jae
mov
xor
out
and
test
enter
out
in
pop
lea
sub
testb
pop
outsl
sbb
lods
mov
adc
and
or
sahf
aas
push
js
rcr
das
popa
or
dec
arpl
sbb
aam
cmovge
outsb
loop
xor
mov
dec
dec
addr16
in
jle
jnp
in
add
sub
pop
push
push
rcrb
mov
mov
cmp
adc
push
jmp
xorb
cmpl
jo
addr16
fs
mov
mov
or
and
jbe
mov
out
in
xchg
adc
loopne
gs
lods
jae
movb
mov
mov
or
adc
push
stos
adc
scas
jo
gs
lods
push
shrl
bnd
and
ds
mov
clc
int
call
push
sub
add
push
push
addl
and
stc
pop
lcall
mov
outsl
jecxz
fimuls
sub
add
cli
enter
xchg
int3
cmp
std
jno
cs
aaa
inc
sahf
sub
das
mov
jp
push
jg
xchg
in
rolb
sbb
cltd
loopne
mov
stos
outsl
ret
dec
stc
mov
in
inc
ds
or
pusha
imul
movsb
lahf
adc
dec
leave
cmc
lea
jge
mov
test
into
enter
inc
adc
loope
push
jno
xchg
inc
jmp
cs
mov
jns
pop
mov
scas
mov
fs
cmpsb
ds
mov
sub
dec
dec
leave
cmpsl
cwtl
push
dec
pushf
and
push
ds
inc
mov
imulb
mov
sbb
cmpsl
add
adc
push
dec
std
pop
pop
shrb
outsl
cmp
dec
in
sbb
and
sub
mov
sti
sub
loopne
xchg
sbb
adc
sti
dec
test
ss
es
adc
bnd
fwait
mov
fisttpll
xor
aad
shrb
loopne
leave
inc
inc
ret
xchg
cmp
xor
cld
aam
mov
xchg
jp
dec
je
ret
aad
lcall
icebp
inc
mov
test
aas
bound
mov
leave
or
ffree
rcrl
jl
std
mov
xchg
ret
push
shll
xlat
sete
xor
sbb
test
add
int3
and
mov
sbb
jge
xchg
inc
test
inc
adc
test
xchg
enter
ja
jb
or
int3
jb
sbb
ret
adc
push
daa
xorb
lock
mov
imul
jl
icebp
mov
sbb
xchg
stos
mov
fdivrl
rclb
imul
jns
xchg
scas
mov
pop
arpl
jns
push
inc
ret
or
testl
push
push
mov
xchg
test
mov
shrb
outsl
and
pop
lods
int3
jne
daa
stos
and
movsl
stos
sbb
cmp
inc
mov
dec
jp
bound
xorl
lods
dec
sbb
jbe
mov
icebp
shr
jb
loop
lods
popa
mov
pop
jl
mov
add
jns
push
push
out
lock
ljmp
add
hlt
mov
xchg
popf
call
sbb
test
pop
inc
jmp
sub
pusha
andl
imul
test
mov
push
inc
adc
fnstenv
insb
repz
int3
jo
imul
jb
popf
stos
and
dec
out
insl
ja
clc
push
push
mov
mov
aas
adc
inc
je
add
mov
lret
cmpsb
xor
jae
push
test
mov
add
xlat
movsl
int
adcl
fcmovnbe
sub
cltd
push
dec
aaa
lcall
inc
pop
scas
sub
jecxz
std
push
push
jp
data16
jp
push
cmp
jmp
pop
or
dec
mov
mov
repnz
push
sub
es
mov
mov
pop
xchg
xor
lods
xchg
cmc
xchg
aam
push
or
loopne
les
xor
into
insl
test
sub
es
pop
and
mov
sub
or
mov
pop
dec
mov
bound
adc
push
push
shll
sub
cmc
sbb
insl
push
cli
ret
add
fdivrp
fistpl
push
sbb
lret
mov
mov
clc
xchg
push
loop
push
push
roll
fisubrs
loopne
iret
cmp
xor
xchg
mov
mov
outsb
pop
push
cmp
out
lods
pop
adc
mov
fmul
pop
push
mov
test
dec
loopne
test
dec
cld
mov
std
fwait
jnp
rorb
pop
inc
rcrb
sub
jge
popa
ret
xchg
pusha
push
repz
ss
and
cmp
les
gs
pop
andl
cmp
mov
jl
sti
adc
and
fsubrl
stos
push
and
testb
and
scas
dec
stos
dec
jp
pop
cmp
mov
inc
std
shll
xchg
push
sbb
add
cmp
push
mov
and
inc
shl
mov
xor
fsubl
ret
xchg
adc
cs
sbb
adc
dec
push
mov
roll
mov
jne
lcall
add
mov
pop
push
push
jp
sbb
mov
test
je
shll
dec
int
fisttpl
push
stc
nop
repnz
sub
or
rolb
xor
in
les
adc
jns
inc
xabort
cmp
mov
sbb
test
mov
inc
dec
push
inc
call
pop
mov
pop
and
popa
xlat
test
pop
sbb
cmp
inc
jp
xor
cmp
sub
es
loope
popa
or
mov
xor
loope
mov
mov
and
mov
insb
decl
mov
push
daa
in
rclb
add
test
rcl
lods
lret
or
in
pop
rorb
pop
add
lea
lret
lods
aad
sub
rorl
and
xor
mov
ret
in
test
cmp
outsb
add
add
pusha
push
repz
dec
cli
push
test
rcll
icebp
test
lret
push
push
pusha
mov
enter
ja
call
xlat
xchg
xchg
in
push
lcall
out
out
dec
xor
cmp
popf
dec
xchg
or
fmull
scas
add
push
es
jg
jmp
aas
xchg
inc
push
fs
hlt
iret
or
adc
mov
cmp
jge
push
lds
adc
out
data16
mov
xchg
cmpsb
shr
lds
lds
pop
notb
xchg
adc
mov
movsl
dec
stos
pop
jae
pop
and
negb
xor
fsubrs
adc
or
and
sbb
mov
xchg
sub
jbe
ds
push
dec
test
or
inc
mov
rclb
mov
push
fwait
out
aas
cwtl
push
add
mov
cmp
sub
cmp
add
sar
js
test
push
test
mov
fdivs
je
add
mov
jmp
mov
push
jle
scas
addl
aas
jecxz
adcl
mov
mov
test
fdiv
mov
xor
dec
cld
aas
mov
and
push
rcll
adc
mov
dec
xchg
out
lcall
sub
lods
std
dec
roll
or
js
ljmp
in
gs
stos
push
xchg
push
pop
pusha
lahf
arpl
jmp
xchg
sbb
xor
rcll
insb
sub
sub
adc
pop
imul
addb
sub
or
cmp
dec
movsl
loop
cmp
out
pop
dec
mov
xor
ja
mov
mov
lret
lea
adc
into
xchg
ds
cmpsb
push
xchg
jge
fcoml
push
int
cs
popa
je
inc
enter
mov
jg
fwait
les
dec
cld
mov
inc
and
loop
addr16
pop
jb
or
adc
aam
push
push
insb
scas
sub
cmp
push
sub
push
xchg
mov
in
icebp
test
ja
xchg
ds
sbb
jecxz
ret
ds
mov
pushf
imulb
out
cwtl
les
cs
idivb
dec
add
ja
sahf
stc
cwtl
mov
mov
inc
pop
xchg
pop
mov
push
lock
cmp
test
cmpsb
jb
outsb
mov
dec
mov
xlat
push
pop
xchg
pop
aaa
in
ret
ficoms
sti
ja
jae
movsb
jae
test
int3
ret
test
adc
mov
mov
adc
add
sahf
test
xchg
psubb
add
lods
pop
mov
xchg
sub
and
add
pushf
cmp
xchg
xor
push
jns
into
xor
out
ljmp
mov
cmp
fwait
pusha
mov
pop
clc
xchg
cli
mov
outsb
mov
mov
mov
dec
loope
and
es
ja
push
shll
push
hlt
sub
and
xchg
adc
xor
stos
jns,pt
jns
push
mov
pop
popf
push
adc
pop
adc
mov
inc
test
ss
push
nop
mov
lea
fiaddl
add
outsl
stc
ds
shl
fiadds
mov
sbb
mov
fstpl
and
dec
or
divl
cmp
pop
mov
push
pop
cmp
mov
std
jp
arpl
in
das
mov
jnp
pop
mov
jne
nop
mov
les
repz
movsb
and
xchg
sbb
nop
mov
es
loope
mov
arpl
and
inc
and
inc
or
cmp
jnp
add
sub
xchg
mov
jae
fcoms
shlw
mov
andb
cmp
push
scas
les
fwait
dec
hlt
adcb
inc
inc
jecxz
rolb
xor
test
xchg
cmp
sub
pop
fistpl
rclb
mov
xchg
sub
pop
popf
or
dec
in
push
or
dec
mov
andb
sti
pusha
push
inc
pop
adc
jmp
xchg
addl
inc
ss
fsts
into
add
pusha
ror
pop
cwtl
and
stos
call
aad
jb
push
xor
add
mov
mov
stos
rcr
push
testb
outsl
rcrb
inc
lds
decb
sbb
sub
cld
stc
mov
xchg
sub
loope
sub
lods
imul
lock
leave
stos
fsubp
cmpsb
dec
xor
xor
jp
mov
mov
inc
dec
sbb
jns
push
jae
lock
pop
addb
mov
cmp
popl
subb
push
push
les
mov
sbb
inc
imul
mov
fimuls
dec
cld
lcall
mov
push
insl
inc
push
sbb
stos
mov
vpshlb
sbb
mov
inc
and
and
andl
and
mov
pop
pop
jge
cmp
scas
movsl
jo
out
lahf
cli
fnsave
mov
inc
aas
xchg
out
push
aam
push
mov
xchg
hlt
scas
sub
pop
lar
mov
sbb
enter
fs
lds
inc
inc
push
mov
lcall
cmpsl
insl
mov
mov
enter
pop
adc
inc
sub
or
mov
scas
jl
pop
inc
addr16
popa
cli
sarb
lods
fisubrs
int
inc
push
sbb
cmpsb
push
je
dec
repz
lcall
push
int
movsb
in
xlat
mov
jecxz
and
xchg
xor
cmp
test
in
xchg
sub
repnz
das
cmp
jb
mov
jecxz
cmp
push
push
pop
mov
mov
push
outsb
push
cmp
push
jmp
repnz
add
in
push
xchg
call
adc
testb
sti
rcrl
pop
nop
int3
mov
dec
cmpsb
mov
pop
aaa
cmc
or
adc
jl
push
jnp
xchg
sub
or
and
scas
xchg
std
fsincos
cmp
mov
imulb
pop
jns
jl
xor
decb
fiaddl
notl
cld
shrb
pop
insl
cmpsl
xchg
push
iret
mov
or
xchg
mov
fcoml
aad
out
lods
push
sub
adc
xchg
inc
das
subb
nop
dec
std
add
rorb
sub
je
and
and
push
mov
repz
or
mov
cmp
sub
jle
mov
mov
jb
bound
jge
ljmp
push
fisttps
int
add
lret
mov
mov
sub
and
xchg
lods
das
add
aam
sub
push
stos
test
fs
repnz
stos
jo
sub
bnd
jo
and
pop
jmp
pop
mov
xchg
jns
ljmp
fldenv
push
adc
dec
outsl
stos
scas
mov
inc
out
test
jp
subb
testl
and
shl
jno
xlat
insb
xchg
repnz
xchg
in
push
push
cltd
es
cmpsl
mov
leave
mov
out
mov
mov
add
push
dec
dec
mov
mov
sub
enter
adc
xchg
ret
or
dec
stc
inc
imul
in
mov
pushf
rcl
into
mov
adc
test
aad
dec
rcl
dec
mov
and
out
sub
jmp
ret
js
call
insb
xor
lods
mov
icebp
push
inc
loope
test
jle
fwait
adc
arpl
out
stos
push
in
adc
adc
ret
xchg
and
dec
mov
mov
les
xchg
cmp
xor
mov
push
add
and
mov
sti
lods
xor
imul
mov
fisubrl
cmc
cmpsl
pusha
add
in
lcall
ret
movsl
addb
sbb
mov
mov
jg
cmpsb
dec
xor
pop
mov
icebp
stc
adc
cmc
or
pop
push
in
xor
lcall
out
push
cmc
stos
jp
lret
xchg
inc
pop
adcl
es
cmp
out
aaa
adc
insl
shrl
or
dec
ja
pop
lods
inc
cmp
mov
mov
mov
mov
mov
sub
jle
dec
popa
pop
ja
lods
mov
in
js
sub
dec
add
add
xchg
cmc
je
jne
leave
ss
pushf
and
sbb
outsl
inc
in
sub
scas
push
inc
lock
ja
mov
cmpsb
add
mov
cmp
cltd
scas
repz
mov
push
or
inc
push
cmp
mov
xchg
clc
pop
inc
add
xor
test
sub
or
mov
iret
push
in
loope
add
fcoms
sbb
fdivl
jp
mov
stos
jo
mov
inc
cwtl
movsl
orb
sub
popf
add
arpl
or
mov
sbb
sub
lods
ret
out
bound
xchg
jg
jmp
xor
xchg
inc
fsubs
cmp
das
pop
pusha
xor
mov
add
or
int
gs
cmp
lds
push
adc
test
dec
mov
adc
nop
sar
sarb
hlt
lock
jge
in
jae
dec
push
data16
mov
pop
jmp
cmp
daa
push
ss
xchg
test
fsts
std
xchg
movsl
ret
add
pop
pushf
in
fucomi
add
pop
dec
daa
xchg
ja
mov
lret
imul
in
jns
add
aaa
dec
add
imul
hlt
js
dec
ffreep
sub
mov
jle
or
jl
popa
lds
or
sbb
jl
jb
incl
inc
sub
pusha
adc
hlt
sarl
loope
pop
inc
add
gs
mov
mov
lahf
and
sahf
xor
fnstsw
nop
cmp
and
fadds
or
insl
sahf
cltd
inc
mov
xlat
push
dec
and
push
or
arpl
ret
or
inc
xlat
test
push
je
xchg
cli
xchg
sbb
repz
inc
inc
mov
lds
std
sub
movsb
mov
lods
pushf
imul
dec
mov
fucomp
mov
iret
sub
fcompl
push
stos
jb
sub
imul
xchg
mov
or
pop
jecxz
jne
lahf
xchg
or
cmp
adc
xor
add
popa
add
pop
cld
mov
insb
jno
jbe
int3
pop
movsl
test
sbb
popa
and
jg
in
in
mov
ret
mov
xchg
jg
lock
sbb
xchg
push
and
stos
mov
pop
push
enter
dec
and
fwait
jmp
add
adc
popf
pop
dec
cmp
sbb
dec
xchg
xchg
mov
mov
ljmp
je
test
arpl
ljmp
mov
jnp
xchg
lea
mov
lods
sub
pop
xchg
adc
and
cmc
out
push
ss
pop
mov
push
and
mov
push
push
mov
jge
and
imul
pop
jl
addr16
sti
push
arpl
and
pop
cmp
clc
add
movsb
lds
or
pop
repz
jb
loopne
pop
movsb
jnp
daa
pop
dec
push
and
mov
push
sbb
xor
dec
stos
push
scas
sub
jle
jg
add
gs
mov
lods
inc
dec
mull
jl
pop
mov
pop
rcll
jae
adc
dec
mov
add
add
aad
mov
imul
outsl
push
xchg
sub
add
push
sbbb
jns
arpl
andb
adcl
mov
cmpsl
inc
test
bound
hlt
mov
pop
faddl
sbb
clc
xor
lds
mov
jbe
pusha
sbb
mov
cmp
movsb
push
cmp
hlt
jp
roll
inc
mov
cmp
imul
loope
inc
adc
jle
adc
scas
movsl
ss
xor
adc
pop
fists
packuswb
and
pushf
and
cmp
mov
pop
das
lods
dec
inc
mov
ret
call
xchg
add
mov
push
cmpsb
pushf
push
xchg
push
fidivrl
iret
popf
ss
mov
cmpsl
xor
xor
jmp
addr16
dec
js
adc
mov
pop
js
lds
jg
or
out
cmpsb
sub
mov
ds
scas
out
nop
mulb
mov
loop
test
lds
daa
arpl
and
pushf
inc
outsb
add
cmpsl
push
add
inc
das
icebp
inc
xchg
jle
and
xor
pop
mov
and
lds
xor
cld
pop
jl
fwait
fwait
and
xchg
xchg
mov
xor
inc
push
fnstcw
lds
adc
push
sub
leave
out
cmp
jmp
adc
ds
pop
lret
fsts
aad
adc
sbb
mov
out
xor
lcall
cmpsb
ret
pop
into
jg
mov
fistps
aas
subl
dec
inc
pop
inc
add
inc
add
bound
inc
mov
sbb
lea
pop
mov
jecxz
adc
xchg
clc
clc
jo
pop
movsb
ja
inc
scas
sahf
hlt
mov
ret
or
gs
shl
add
jg
and
icebp
mov
ljmp
out
xchg
int
adc
mov
xor
dec
adc
jo
xchg
in
push
int
push
sarb
adcl
mov
ds
std
push
sub
test
mov
mov
cwtl
mov
sub
leave
pop
add
in
push
out
cmp
sbb
dec
frstor
imul
xchg
mov
rolb
sub
adc
push
push
pop
mov
insl
push
lock
lret
mov
out
out
jb
cmp
pop
popa
or
sub
mov
jbe
aam
ret
push
xchg
inc
roll
fldln2
sub
cmpsl
call
rcrl
cwtl
inc
call
mov
jecxz
xor
cmpsl
xchg
std
xchg
pop
in
jae
aad
mov
insb
inc
mov
addr16
gs
xor
lods
andb
ret
mov
pop
movsb
inc
jnp
xchg
je
cmpsb
clc
xchg
inc
inc
push
stos
imull
sbbl
mov
sbb
mov
sub
and
cmp
sbb
sub
or
pop
fs
ret
mov
pop
fimuls
mov
xchg
popa
jno
sahf
sub
jnp
jg
jnp
pushf
out
sbb
add
sbb
outsb
inc
lds
cmp
mov
lret
or
out
aaa
std
out
pusha
ficoms
fisubs
cltd
ffreep
ret
inc
cmp
and
inc
pop
stos
sbb
ret
sbb
fisubl
fisttpl
cmp
insl
enter
mov
repz
add
cmc
mov
mov
jbe
sbb
out
dec
jno
mov
xchg
xor
sub
hlt
int
push
adc
mov
xor
push
cmp
push
cmp
pop
fdivs
aas
pop
loopne
push
sarl
stc
mov
inc
sbb
cmpsb
outsl
dec
loop
dec
mov
scas
jl
push
rorl
pop
add
mov
xchg
je
cli
jg
les
inc
cwtl
fildll
loop
inc
or
addl
xchg
test
les
mov
jmp
push
mov
mov
in
scas
jb
mov
pop
in
sbb
mov
imull
sbb
clc
jl
jge
adc
xchg
insb
gs
push
cltd
movsb
pop
aam
imul
lea
test
mov
popa
ja
push
aam
inc
add
imul
movsl
into
cmp
stc
cmc
sbb
int3
cmp
xchg
popa
xlat
jnp
add
or
nop
jg
mov
push
inc
jns
mov
or
pushf
adc
std
dec
mov
sbb
pop
add
les
clc
or
out
repz
mov
dec
pop
pop
xchg
fcmovnbe
dec
leave
out
push
add
fstps
lret
xor
adc
add
dec
sbb
jl
loopne
out
pop
orb
and
jmp
in
and
mov
test
iret
test
jbe
testl
xchg
push
push
hlt
mov
or
cmp
scas
enter
mov
mov
xor
cmpsl
jo
push
fwait
stc
fwait
arpl
and
mov
icebp
rcr
out
pop
divl
dec
ja
in
outsl
cmp
cwtl
dec
mov
stos
out
rorb
dec
mov
xchg
push
pop
xchg
dec
and
xchg
stos
dec
xor
aaa
adc
icebp
sarl
jmp
std
mov
sahf
sbb
pop
cmpsb
sub
mov
jg
into
jle
push
inc
fs
xor
outsb
and
sbb
repz
stos
adc
jmp
jmp
pusha
mov
stc
and
iret
outsl
jbe
adc
je
loope
mov
xchg
in
cs
xchg
fs
les
aam
jne
cmp
push
or
cmp
data16
sbb
pop
jge
std
lea
sub
push
xchg
popa
fisttpll
adc
dec
lcall
sbb
and
pop
and
and
xchg
cmpl
lods
fistpl
iret
inc
ret
lret
xor
jl
mov
fisubl
add
scas
jmp
lock
cld
adc
hlt
jnp,pt
clc
and
flds
jecxz
mov
jmp
jo
sbb
add
into
adc
ret
in
ret
negb
and
dec
jb
mov
dec
arpl
xor
xor
jecxz
jns
imul
mov
push
sub
mov
push
enter
cmp
xorl
push
and
cltd
ja
push
adc
imul
push
add
jge
inc
push
lcall
add
mov
cmp
jp
add
int
xchg
cwtl
mov
and
jecxz
int3
pop
or
jl
mov
pop
jae
xchg
jmp
sub
adc
shl
sbb
mov
mov
loop
in
inc
iret
jne
push
roll
or
pop
mov
test
or
mov
and
push
imulb
test
adc
inc
idivb
xlat
repz
xchg
aad
jl
sub
and
inc
and
sbb
and
les
pop
sar
pop
shrb
bound
push
mov
cmp
inc
mov
adc
loop
insl
jp
push
push
rep
test
mov
and
xchg
out
lods
cmc
lock
loop
fwait
loope
clc
push
nop
jle
lods
dec
stc
enter
mov
and
add
xchg
std
push
pop
push
cwtl
ret
adc
adc
mov
xchg
sub
les
rcl
and
out
dec
xchg
enter
sub
mov
jl
insl
jmp
push
inc
sar
lods
or
sar
popa
xchg
add
push
imul
mov
adc
cmp
imul
xor
gs
jae
subl
mov
add
mov
mov
leave
add
inc
pop
cmp
dec
mov
hlt
lds
out
lcall
out
cmpl
loopne
stos
sbb
cld
dec
orl
dec
rorl
cmp
mov
std
cmpsl
and
lahf
out
mov
xchg
xchg
std
mov
hlt
xchg
in
test
decb
cmp
push
sbb
adc
add
cltd
gs
xor
push
pop
repz
out
push
mov
popa
push
xor
pop
imul
int
inc
movsb
sti
lods
jns
dec
aas
jno
insb
inc
fcompl
mov
out
mov
enter
stc
out
sbb
test
xor
and
mov
ficoml
and
stos
and
pop
mov
divb
pop
cwtl
add
cli
push
push
lods
loope
dec
or
xchg
add
xchg
outsl
clc
mov
mov
pop
push
pop
add
mov
out
sub
dec
mov
adc
and
incl
and
add
xor
adc
jmp
cmpsl
mov
sbb
and
xchg
push
cs
or
push
lods
dec
xchg
leave
mov
jmp
xchg
in
xor
inc
fwait
std
sub
outsl
xchg
pop
xlat
lea
sbb
mov
jl
adc
fsubl
add
jo
and
xlat
cmp
js
ds
test
out
cmp
mov
jl
shlb
test
adc
pop
pop
div
cmp
in
ljmp
lds
push
sbb
mov
fcoml
sub
popf
push
aas
jg
leave
mov
int
iret
push
sub
iret
in
ret
mov
xor
jge
add
mov
fmull
icebp
dec
cmp
cmp
dec
xchg
rclb
sub
popf
mov
out
outsb
sbb
inc
cmpsl
movsl
mov
popa
ds
into
dec
popa
scas
js
cwtl
fistpll
jbe
inc
jnp
xlat
dec
scas
mov
loopne
aas
testb
in
cmp
ret
xor
mov
mov
mov
popa
int3
out
je
daa
sbbb
loopne
push
movsl
leave
dec
dec
lock
nop
mov
sbb
inc
and
in
add
sub
sub
xchg
test
ja
fstps
dec
xchg
dec
cmpsb
mov
outsl
mov
rorb
adc
jnp
adc
push
or
mulb
daa
lock
xchg
bound
ds
push
jnp
mov
aam
and
fwait
ja
adcl
ss
loop
je
or
sub
in
mov
and
in
fcomip
sahf
mov
jne
les
pusha
pop
xchg
xor
outsb
leave
or
pop
pop
or
push
inc
sbb
or
cmp
fldenv
ret
aad
out
mov
in
xor
aas
enter
loop
cltd
pop
andb
pop
cwtl
add
mov
jb
pop
loopne
pop
fs
pop
sub
out
adc
out
hlt
std
cmpsb
mov
xchg
outsb
shrl
pop
sbb
or
xlat
movsb
inc
lods
aad
es
lcall
jns
mov
mov
in
push
leave
lret
xor
xlat
das
cmpsl
std
push
cltd
les
push
pusha
outsb
nop
daa
orl
push
mov
out
clc
inc
loop
sbb
loop
jo
sub
add
pop
mov
aas
mov
xor
xor
js
and
mov
sbb
inc
mov
mov
xchg
outsl
mov
cli
imul
push
lds
xor
inc
adc
mov
push
lds
xor
pusha
into
cmpsb
sbb
add
outsl
rcrb
lret
adc
mov
in
xlat
leave
add
in
jmp
pop
add
fucomp
mov
aaa
bound
test
lock
sub
xor
push
andb
fucomp
sub
mov
xchg
dec
out
sti
scas
cmc
and
add
out
test
inc
sahf
xlat
mov
idiv
add
sub
lahf
pop
js
es
pop
popa
lahf
nop
pop
pop
and
stc
lahf
mov
scas
push
xor
lahf
outsb
rclb
xor
inc
xor
popf
adc
es
insb
sub
mov
roll
fs
outsb
push
cmpb
jbe
cli
ficoml
or
add
push
sbb
xor
sbb
pushf
dec
push
in
and
fidivs
push
mov
lea
outsb
fincstp
repz
gs
lds
aaa
sub
les
push
rcll
adc
push
test
mov
jbe
outsb
push
pop
pop
mov
mov
jnp
in
push
lods
int
jbe
dec
dec
jae
adc
jns
push
xchg
aas
out
fcoms
mov
ja
ficoml
cmp
insl
cwtl
cmp
mov
mov
fistl
jl
loopne
jecxz
aas
scas
fmuls
xchg
cmp
lock
int
mov
xor
push
or
lcall
mov
sub
sbb
and
pop
cld
movsl
xorb
fs
popf
push
dec
adc
jne
push
jns
lods
loop
clc
jbe
je
xor
pop
fdivp
fistps
clc
cltd
pop
and
pop
xchg
xchg
movsb
test
ljmp
sbb
cmp
push
idivb
pop
mov
jb
mov
andl
rol
cs
scas
or
jbe
and
les
mov
sub
jns
in
sbbl
inc
das
sub
add
mov
add
shl
addb
xchg
or
xor
pop
cwtl
adc
xchg
dec
xchg
shrl
out
xor
dec
scas
jp
outsl
into
repz
test
mov
xor
int3
jb
sar
dec
idiv
xchg
mov
lret
jo
inc
pop
mov
aam
stos
push
inc
dec
sub
sbb
mov
inc
push
mov
mov
test
inc
sbb
cmp
cwtl
stc
aam
test
push
adc
lret
dec
fs
fsts
pusha
sub
cli
and
lahf
cltd
cmpsl
add
jmp
pop
or
popf
scas
ffreep
mov
lock
sbb
stc
fdiv
dec
cltd
in
std
adc
les
scas
xor
pop
inc
xchg
das
nop
sahf
mov
mov
rcr
gs
and
inc
sub
ss
js
xor
or
add
in
adc
pop
inc
sbb
mov
ja
and
je
mov
or
outsl
incb
lock
sbb
decl
jnp
sbb
sbb
xchg
fstpt
les
mov
fprem
inc
leave
cmp
mov
in
rcrl
sub
sbb
lock
ja
pusha
xchg
mull
mov
in
scas
jae
or
add
out
hlt
shll
lods
push
pop
fld
fsubrl
mov
xor
xchg
repnz
or
inc
sbb
mov
jg
adc
int
jl
lcall
xlat
inc
mov
mov
cmpsl
inc
xor
inc
dec
cltd
dec
jae
or
int3
aas
xchg
and
mov
outsb
xor
cld
inc
dec
inc
test
lods
dec
cmp
inc
shld
mov
jp
cld
or
test
add
xchg
adc
push
add
div
jb
cmp
mov
cld
aad
loope
out
test
push
repnz
inc
movsl
add
int
sub
push
subl
mov
es
jmp
shrb
icebp
adcb
leave
jmp
sub
sub
stos
outsl
mov
lret
js
push
clc
sub
and
fnsave
push
test
sub
sbb
cmp
push
enter
jge,pn
and
cmp
fildl
testl
fidivs
adc
sub
pop
jns
mov
xchg
push
cmpl
bnd
jg
and
and
mov
addr16
dec
dec
cld
inc
aam
rorb
lcall
aam
ja
out
popf
jmp
mov
outsb
jb
cmp
add
push
pop
ljmp
xchg
cmpsl
leave
adc
cli
pop
add
dec
loop
cmpl
lea
mov
das
lcall
cmpsl
mov
and
push
mov
add
aad
cmpsl
int3
mov
pop
jae
xchg
dec
jl
movl
cmpsl
das
xchg
shl
je
xor
aam
pusha
stc
and
movl
jl
cltd
mov
lock
dec
cmpl
lock
dec
dec
repnz
adc
xchg
insb
sub
xchg
call
jecxz
je
mov
cmp
sbb
addr16
adc
mov
adc
je
cli
inc
stos
inc
pop
arpl
xchg
notl
sub
popf
cmpsl
repnz
inc
inc
ds
mov
popf
mov
jmp
lret
mov
fninit
sub
mov
cmp
adc
inc
shrl
test
lock
out
test
inc
movsb
xchg
jle
dec
sbbb
xchg
sub
sub
inc
mov
push
or
xchg
cltd
dec
sub
fucomp
pusha
push
xchg
mov
push
lret
mov
pop
jle
xchg
mov
dec
aam
mov
dec
out
imul
mov
xor
cwtl
sbb
and
into
ljmp
pop
in
xor
lods
xchg
incl
inc
cli
ja
mov
or
dec
out
or
xchg
aad
pop
jne
dec
arpl
int
mov
cmpsl
jnp
jno
or
movsb
bnd
push
inc
xor
adc
call
addb
js
stos
inc
dec
xchg
cwtl
dec
mov
enter
xor
cmc
cmc
add
push
cld
fbstp
cmp
aaa
paddusw
loop
jno
fildl
mov
jg
dec
dec
or
mov
mov
jg
jmp
adc
sub
out
loope
mov
imul
scas
jmp
cmp
inc
les
icebp
inc
test
lods
pop
and
test
push
bound
sbb
rcrl
adc
lods
mov
xchg
daa
jmp
outsb
pop
je
lods
movsl
pop
or
sbb
mov
dec
shr
in
cmp
mov
adc
lret
pop
dec
popf
sub
pop
mov
dec
int3
out
xor
adc
sarl
push
out
adc
inc
or
jo
sub
or
scas
movsl
cwtl
add
dec
jne
lret
test
push
push
mov
clc
jo
test
fdiv
cs
pop
sahf
in
pop
push
dec
outsb
sbb
and
aam
mov
push
flds
cmpsb
push
dec
test
shl
rclb
out
and
stc
pop
dec
out
push
bound
or
ret
cmp
push
cltd
icebp
push
xor
rorb
fsub
inc
mov
sti
cmpsb
adc
inc
mov
stos
xchg
lods
push
push
insb
aaa
or
xor
stc
outsb
aas
xor
test
fdivp
xchg
mov
jecxz
nop
fwait
mov
inc
push
dec
jne
movsl
cmpsl
lahf
and
cli
push
xor
mov
jmp
ja
inc
ljmp
cmpb
lds
jne
or
or
jbe
xchg
aad
mov
out
ja
xchg
pop
cltd
movsb
pop
stos
testb
sbb
pop
xchg
sti
pop
push
jecxz
xor
test
ror
or
test
in
pop
mov
stc
in
xlat
add
pop
mov
or
fdivl
lea
mov
lds
mov
and
lret
mov
lods
aad
jecxz
inc
out
or
sahf
cmp
jae
out
inc
or
in
pop
adc
in
xor
fbstp
rcll
in
add
mov
inc
push
cmp
out
mov
add
cs
push
add
xor
push
stc
mov
xor
and
stos
call
push
jge
and
add
in
or
xor
and
sbb
mov
dec
call
popf
inc
lea
cmp
nop
fidivs
insl
and
sbb
aam
cmp
test
mov
dec
xlat
arpl
insb
loop
mov
cmc
int3
adc
jne
ret
adc
sub
cs
dec
jg
fsubr
xchg
jo
leave
stc
in
mov
pop
ret
rorl
xchg
arpl
push
xchg
test
push
das
jae
test
mov
cli
mov
je
ss
divb
or
sbb
and
hlt
inc
cmp
mov
pop
mov
inc
stc
mov
xchg
push
xchg
sahf
mov
pusha
lods
adc
and
pop
sbb
dec
jbe
inc
jle
mov
cmp
pop
mov
out
mov
cmpl
in
jno
xchg
testb
sbb
pop
es
aad
xchg
test
cmp
mov
enter
in
es
int
push
daa
lds
mov
add
sbb
lea
push
leave
or
mov
dec
stos
dec
loope
jo
dec
push
cld
cs
shl
xchg
push
iret
mov
mov
xor
lods
sub
cli
xchg
pop
outsl
pop
outsl
loope
jmp
je
clc
and
push
xor
or
ss
mov
xor
or
mov
movsl
sub
scas
fsubp
leave
les
xor
nop
out
jb
out
inc
jbe
sub
outsl
inc
pop
push
mov
fucom
add
mov
jns
adc
xchg
push
push
into
mov
fmull
aaa
dec
mov
arpl
fidivs
pop
addr16
daa
cwtl
out
leave
imull
xlat
mov
pop
adc
add
orl
pop
jns
inc
xor
andb
mov
nop
mov
cmpsb
xchg
stc
add
mov
xchg
sbb
fisttpll
mov
mov
push
push
and
cmp
sahf
pop
fs
mov
dec
loopne
call
loop
subb
sub
icebp
in
push
out
push
test
jnp,pn
xchg
rcl
ficoms
movsl
cmpsb
ficoms
rorl
loop
ret
push
dec
lods
mov
scas
jg
mov
push
pop
loop
mov
addr16
fnsave
adc
pop
inc
adc
lods
jne
mov
lds
daa
imulb
sti
lds
into
jo
xchg
adc
movlps
add
aas
loope
ret
or
fiadds
lods
xchg
call
inc
xchg
jle
je
and
inc
push
cmp
cld
cmpsb
inc
cwtl
jbe
pop
pushf
pop
cmp
and
mov
or
ljmp
jp
or
sbb
mov
das
add
cmp
push
xor
ja
cmpsb
decb
mov
or
mov
insb
pop
movsl
jo
lret
pushf
push
sbb
xchg
xchg
mov
cs
push
loop
mov
movsb
sub
pop
sbb
mov
and
mov
add
scas
sbb
insl
pop
cmp
mov
stc
in
arpl
nop
push
xchg
sbb
mov
or
les
mov
ja
push
cs
aad
test
or
pop
inc
shlb
sbb
xchg
hlt
testl
jle
jb
pop
cld
push
xor
cmp
fneni(8087
outsl
int
push
cli
sub
or
and
mov
jnp
pop
aaa
out
jmp
cs
pop
mov
cmp
mov
mov
push
ds
adc
cli
inc
jno
add
cmp
inc
scas
fcoml
push
call
test
and
pop
inc
or
mov
gs
test
xchg
adc
xchg
mov
jb
adc
mov
lahf
pop
sbb
incl
sbb
ret
lret
lret
pop
add
ficoml
notb
adc
xor
clc
cmpsb
mov
push
sbb
and
loope
idiv
ret
and
repnz
lret
stos
pop
test
sub
and
fwait
jbe
inc
dec
add
jno
loop
lret
fildl
xchg
add
mov
jnp
test
popa
push
pop
mov
pop
mov
out
pop
fcoml
aaa
fidivrl
add
push
dec
adc
add
mov
or
insl
test
jle
fists
inc
fiaddl
mov
xchg
jecxz
adc
fmull
subb
mov
or
inc
hlt
fs
fdivrs
idiv
jbe
loopne
xchg
pop
js
cmc
ret
cltd
cmpsb
cmp
fisubs
test
sbb
gs
jno
adc
fs
adc
popl
loopne
into
je
call
jne
fidivs
or
call
xor
test
mov
add
sub
cmp
hlt
sti
pop
and
dec
cmp
popf
test
lods
out
jae
sub
xchg
pop
xor
cli
iret
aam
fcomip
out
out
dec
mov
mov
jge
add
or
inc
addl
cmpsb
dec
jnp
les
sub
mov
icebp
dec
pop
shrb
faddl
add
ret
sbbl
lea
aas
pop
dec
pcmpgtw
fsubs
jb
push
cmovo
xor
negb
ss
xor
sti
push
pop
push
shl
ret
iret
jns
adc
fimull
stc
dec
or
add
mov
add
std
add
push
adc
xor
test
add
pop
in
call
xor
cs
jl
jne
test
or
loope
sub
sbb
jp
push
push
sahf
mov
mov
scas
jge
rcr
fnstcw
rol
add
sbb
mov
ficoml
std
iret
push
in
pop
cmp
mov
scas
test
filds
jbe
add
jo
mov
inc
mov
roll
sub
pop
mov
mov
imul
mov
dec
push
jecxz
xchg
stos
cmp
ret
rcll
popf
data16
lods
in
mov
cltd
adc
pop
stc
jle
pop
in
fistpl
sbb
mov
cmp
cmp
cmpsb
push
jp
sahf
mulb
out
and
cmpsb
add
fcoml
pushf
ja
popa
jecxz
mov
jbe
add
push
lret
pop
mov
add
xor
addl
and
imul
and
sbb
outsl
adc
mov
cli
ficoml
dec
imul
dec
in
int
das
mov
mov
inc
pushf
mov
or
inc
test
adc
je
sub
int3
int
in
mov
cmc
jl
pop
sbb
pop
add
es
gs
cmp
mov
and
cs
sbb
mov
clc
mov
xor
xor
push
mov
dec
pop
daa
test
mov
sbb
stc
adc
lcall
inc
imul
bound
dec
mov
rolb
xor
adc
stos
outsl
sub
ret
sbb
jne
icebp
push
movsl
fistpl
dec
push
outsl
xchg
xchg
ja
cs
imul
negl
jae
shrl
mov
pop
scas
pop
enter
xchg
icebp
pop
icebp
cltd
fisttps
mov
lret
inc
jbe
or
clc
sbb
clc
push
je
add
jnp
jo
leave
mov
in
aam
mov
aas
and
dec
push
cs
jne
mulb
int
push
ja
and
out
or
sub
push
ror
sbb
ja
ss
inc
mov
int3
rolb
cmp
and
push
or
ror
pop
stc
clc
xor
adc
xchg
jl
dec
jbe
les
cmp
xor
push
sub
xchg
popa
pop
dec
xchg
adc
pop
mov
jmp
jle
pop
and
test
mov
or
mov
mov
mov
shl
lods
pop
fistps
cmp
repz
ret
dec
cld
and
xchg
xchg
decl
inc
ss
push
pop
xchg
outsl
lea
mov
rol
push
mov
push
add
mov
jl
cmpb
mov
mov
push
into
push
mov
xor
mov
lret
cmp
inc
insl
inc
aam
push
fildl
pusha
xchg
add
sub
fwait
enter
dec
jl
mov
mov
xchg
mov
jg
xor
dec
add
mov
or
jnp
dec
sbb
mov
pushl
and
insl
scas
mov
push
push
test
cs
sarb
mov
fs
mov
insb
jo
popf
nop
test
outsb
arpl
cli
int3
mov
and
push
cmpb
or
leave
arpl
add
out
clc
sbb
in
stos
enter
mov
or
jb
mov
add
cmpsl
aas
mov
mov
mov
mov
sub
out
stc
adcl
sub
outsl
or
sarl
dec
pop
xor
cmpsl
mov
and
sbb
add
aad
inc
jecxz
lret
jb
push
icebp
test
and
push
dec
arpl
ja
mov
mov
les
add
xchg
flds
dec
fmull
in
and
sahf
push
push
jge
inc
push
jge
cmp
xchg
push
iret
stos
fsubrl
popa
pop
pop
aam
inc
jmp
jnp
jnp
fbstp
mov
dec
cmp
push
jno
fsubs
pop
mov
pop
xor
inc
mov
and
loope
jmp
and
xchg
jge
rcrw
push
insb
dec
mov
and
sahf
jg
jle
mov
add
fwait
icebp
aad
sbbl
arpl
push
pop
mov
divb
xchg
daa
leave
ja
mov
aaa
cmpsl
adc
out
stc
jmp
cwtl
out
mov
mov
xor
mov
mov
sbb
inc
xor
repnz
ret
mov
fcomps
imul
cmp
dec
pop
stos
xorl
pop
push
adc
jmp
cwtl
dec
mov
or
repnz
sub
and
cwtl
scas
icebp
cmp
adc
dec
fldl
add
int3
add
nop
xchg
lock
mov
xchg
pop
inc
out
xor
xchg
push
addr16
xor
aam
mov
cmc
jb
mov
fmull
and
pop
push
dec
xor
add
mov
sbb
popf
inc
ds
int
sbb
inc
cmp
mov
out
imul
adcl
aaa
and
xchg
repnz
xchg
pusha
pop
rcrl
mov
popa
out
cmp
jmp
sub
xchg
mov
xchg
aaa
cli
subb
iret
in
jecxz
add
push
icebp
in
cmp
inc
bnd
add
in
addr16
xchg
cli
imul
shlb
add
and
stos
adc
std
add
adc
xor
daa
mov
jbe
pushf
sbb
aas
or
int
cmp
dec
neg
mov
in
roll
inc
sti
jae
inc
push
out
jnp
cmp
cmp
dec
or
push
or
in
push
mov
add
mov
mov
xchg
pop
mov
rcl
inc
fwait
ret
dec
and
dec
in
imul
ljmp
xchg
int3
inc
jb
mov
nop
adc
jge
pop
dec
mov
out
jge
mov
push
push
dec
rorl
cmp
and
dec
mov
jecxz
mov
scas
pop
fistpll
or
das
leave
pop
jbe
pushf
pushf
push
dec
cmpsb
adc
xchg
shlb
bnd
dec
lret
popl
pop
out
shll
push
xor
pop
add
mov
mov
sahf
xchg
xor
mov
imul
push
mov
xchg
sbb
insl
push
pop
inc
push
push
mov
es
mov
add
pop
and
push
cmp
dec
xchg
pop
xor
das
xchg
int
and
outsl
lcall
mov
xchg
or
or
iret
mov
aaa
lods
push
mov
push
cmp
dec
sbb
sub
pop
sub
popa
lret
ret
inc
dec
add
fs
enter
mov
sub
xor
and
and
out
cwtl
test
int
nop
jge
inc
es
mov
add
je
mov
push
dec
out
jg
imull
sub
cmp
xchg
add
mov
fstl
cmpsl
push
ficompl
xor
scas
and
dec
mov
pop
pop
cs
je
jnp
add
or
adc
arpl
mov
loop
movsl
jne
sbb
push
test
test
mov
dec
jb
sbb
jge
lock
mov
adc
dec
mov
mov
inc
inc
cld
shr
add
gs
mov
pop
repz
jge
sub
mov
gs
fs
mov
sbb
mov
sbb
fcos
adc
pop
lods
or
cld
les
and
adc
test
mov
push
cmp
outsb
lods
xor
push
mov
jns
or
and
ret
negl
push
ljmp
sbb
aaa
out
les
sbb
mov
mov
or
mov
and
mov
popf
pop
mov
rolb
inc
mov
mov
andl
cs
xor
imul
sub
popa
xor
jg
jb
dec
fimuls
nop
and
xor
xchg
mov
subl
sarl
bound
push
shrl
mov
loop
jae
mov
addl
movsl
dec
and
nop
xor
nop
mov
scas
cmpsb
arpl
stc
jp
imul
pop
aad
mov
inc
sub
js
cmp
sub
std
sahf
jge
xchg
push
subb
cmp
aam
aam
leave
shll
lock
dec
sahf
subb
jg
fstl
insl
xchg
mov
negl
mov
scas
mov
jae
out
filds
cmp
test
test
mulb
add
sbb
add
mov
popa
mov
mov
push
adcl
es
dec
ja
fwait
pop
fwait
call
rcrb
out
in
ja
and
fcmovu
out
sbb
outsl
shrb
push
aaa
cltd
jns
mov
sahf
or
xor
popa
pop
mov
add
push
lods
adc
jmp
repz
and
and
test
movsb
nop
or
jecxz
dec
movsl
pop
sbb
icebp
in
lea
je
add
fimull
rcr
cmp
mov
enter
rcll
insl
pop
add
cmpsb
cli
scas
mov
icebp
add
push
and
sbb
and
cmp
add
push
js
cmp
sarl
les
jns
push
rclb
jecxz
test
mov
mov
ss
in
or
cmp
test
test
je
aaa
mov
test
cltd
int
add
cmp
dec
ret
arpl
test
jno
ret
hlt
pushl
inc
lea
mov
push
fcmovnb
aas
cmpsl
inc
inc
pushf
lds
pop
adc
push
lret
popa
sbb
cmp
inc
jns
mov
imul
dec
add
lahf
leave
dec
movsl
in
outsb
popf
dec
xchg
pusha
int3
arpl
jmp
add
adc
outsl
sbbl
add
psubusw
inc
mov
in
jbe
sbb
jmp
addr16
cmp
sbb
dec
pop
xor
inc
jg
adc
pop
addr16
cltd
sub
stc
pop
mov
fdivr
push
cmp
mov
mov
adcl
arpl
adc
jg,pn
pop
mov
push
popl
xchg
mov
stc
pop
fdivrl
pop
test
test
mov
and
cmp
ja
or
lcall
and
xchg
lea
lahf
inc
subb
out
xchg
jnp
cli
xchg
addr16
xor
jg
pushf
push
sub
into
sub
and
dec
jbe
popa
jbe
pop
es
flds
add
enter
arpl
sbb
jle
hlt
xchg
jge
int
hlt
sbb
mov
rol
xchg
js
pushf
mov
and
adc
out
mov
int
bt
and
popa
loopne
ficoms
cli
add
bound
and
lock
cmpsl
stc
inc
add
into
xor
pop
stos
mov
inc
out
mov
fucom
mov
add
repz
loop
addb
push
sub
mov
jl
xor
in
setb
mov
xchg
inc
les
or
sub
add
ret
push
icebp
push
outsl
cmp
movsl
sbb
roll
pop
mov
scas
je
jae
push
gs
clc
fwait
std
and
mov
pop
jns
or
mov
and
mov
pop
test
xchg
push
aad
test
jns
mov
sub
push
lods
aad
push
and
pop
bound
push
push
sbb
scas
cmp
inc
lahf
push
cmp
sub
or
jmp
or
sbb
cltd
mov
sub
test
pop
fucomip
imul
mov
scas
std
xchg
flds
repz
xor
popa
shlb
mov
jg
inc
mov
loopne
sub
sub
jne
cltd
sub
sti
push
dec
test
test
mov
jne
push
jl
stos
mov
mov
mov
loope
fs
aaa
cmp
fadd
std
cmpsb
in
fimuls
and
cmpsl
or
das
lahf
loope
int3
and
cmp
stos
mov
sub
dec
adc
xchg
jmp
ja
xor
cmpsl
jge
icebp
or
fs
and
mov
rcr
or
das
jmp
mov
push
fsubrp
mov
ljmp
xchg
fs
int
pop
cltd
xchg
lcall
push
cmp
lret
push
in
movsb
les
mov
or
call
add
shll
inc
call
pop
and
lret
add
sbb
shll
loope
mov
roll
stos
pop
cmp
and
push
push
loop
xor
sub
daa
icebp
aaa
adc
lock
push
pop
pop
or
scas
add
pop
insb
mov
adc
shll
nop
shlb
imul
das
imul
dec
lods
fsubs
lds
scas
cmpsl
cmp
push
stc
lret
in
mov
xor
adc
jge
add
imul
test
inc
int3
sbb
xor
xchg
dec
xor
jnp
clc
scas
cmp
test
arpl
sarb
in
out
fstpt
std
sub
add
pop
jbe
sbb
pop
andl
cmpl
shlb
push
out
notl
pop
je
clc
sub
cmp
fwait
inc
rclb
and
dec
out
and
cmp
stos
xchg
subl
sbb
test
add
pop
mov
add
aad
and
mov
int
into
inc
fcoml
pushf
xchg
xchg
imul
mov
fdiv
icebp
pcmpgtb
push
push
repnz
sti
lock
test
adc
stc
pop
adc
xchg
sub
in
jbe
out
test
pop
xchg
add
add
jo
mov
in
rolb
push
sbb
rcr
int
pop
bound
es
sbb
push
inc
and
in
out
mov
loopne
fucom
push
js
dec
xorl
enter
insl
xchg
fwait
movsb
xor
gs
cmp
and
outsl
int3
in
shlb
push
mov
std
xchg
dec
pop
jl
and
mov
aaa
pop
mov
sub
push
push
sbb
push
inc
sbb
xchg
cltd
test
fsubl
testl
scas
xchg
out
sub
sbb
test
adc
nop
scas
mov
scas
xor
push
mov
pusha
add
sbbb
dec
sbb
jp
or
scas
mov
push
mov
ljmp
lahf
dec
and
cld
push
ret
jae
and
mov
add
mov
test
mov
data16
test
xchg
divl
lods
popa
orb
es
movsb
jno
and
lcall
jg
adc
test
sbb
sarl
loopne
mov
pop
les
push
mov
dec
leave
test
je
stc
loope
mov
add
cli
lods
rclb
jo
aam
push
cmp
xor
movl
clc
mov
pop
push
out
dec
scas
xchg
repz
out
iret
jp
and
xor
mov
jb
add
pop
loope
hlt
repnz
in
xor
jae
xchg
push
test
mov
push
push
xlat
add
cmp
in
jns
push
or
push
andl
jp
sbb
cmp
lahf
mov
sub
jbe
adc
xchg
mov
add
lock
cmp
adc
push
or
ficoms
je
inc
test
rcrl
or
jbe
xchg
add
mov
shlb
cmc
nop
sub
pop
repz
call
nop
pop
pop
cmp
dec
mov
outsb
xor
dec
mov
mov
push
in
push
lret
imul
leave
mov
xchg
int3
idivl
lea
adc
add
xchg
imul
mov
push
shrl
sbb
jb
js
inc
mov
xchg
inc
lcall
lret
cmp
push
add
ret
loope
ret
xchg
push
cltd
in
repz
cmp
and
fwait
sub
stos
and
cld
pop
sub
data16
mov
or
push
pop
push
cmpb
jl
imul
sti
std
cld
inc
outsl
or
lea
jecxz
jg
add
sub
lret
jbe
arpl
mov
pop
xchg
aad
mov
pop
xor
mov
and
jle
sahf
das
pop
insb
fbld
mov
inc
dec
mov
mov
outsl
dec
movsb
leave
add
add
add
scas
fisubs
xchg
jae
dec
push
pop
xlat
jae
and
aam
dec
rorb
inc
outsb
push
xchg
wbinvd
cmp
inc
pop
popf
mov
shll
js
adcb
pop
xlat
fwait
mov
das
aam
pop
fstps
je
notb
jbe
insb
push
xchg
jge
out
dec
aas
sub
and
lock
aam
cmp
ficoml
in
jmp
adc
fwait
popf
icebp
add
insb
rcrb
sarl
jp
shl
xchg
lret
ret
pop
and
mov
sub
adcl
test
es
in
push
sub
es
imul
sbb
in
repnz
std
and
movsl
cmpsb
add
cwtl
mov
and
cmp
int3
xchg
shll
or
inc
xchg
and
push
add
cmpsb
push
dec
adc
pushl
and
jl
jg
and
cwtl
mov
outsl
test
xchg
loop
or
rep
dec
jecxz
rclb
popa
shrb
jecxz
test
mov
lcall
subl
xlat
outsb
mov
mov
mov
add
mov
dec
adc
jno
cmp
into
xor
imul
hlt
in
in
mov
xchg
dec
test
and
loop
mov
jae
lods
or
pop
and
lods
test
jns
xchg
adc
push
sub
pushf
repz
or
jbe
mov
and
xor
xlat
in
xchg
std
xchg
jmp
dec
jb
aam
movl
adc
jb
and
sub
xchg
nop
and
leave
push
scas
xchg
pop
imul
mov
push
push
cmp
mov
out
jno
mov
or
dec
jge
sahf
cmp
dec
out
insb
inc
out
mov
xor
xchg
shr
mov
jns
outsb
mov
inc
insl
orb
stos
sub
mov
mov
sub
test
sbb
mov
shlw
out
roll
outsb
push
or
xchg
insb
xchg
xchg
iret
sbb
dec
and
in
cmp
out
imul
mov
daa
xor
jo
fcompl
mov
mov
mov
xchg
int3
push
cmpsl
das
ljmp
lods
mov
jne
jmp
mov
sahf
or
mov
ds
mov
push
jg
aas
push
insl
pop
data16
push
mov
or
mov
mov
and
push
lods
neg
add
jo
call
push
jmp
dec
jo
or
cld
addr16
ficomps
cmp
pop
arpl
mov
pop
adc
clc
rcrl
pop
in
xor
sarl
outsb
push
loopne
jl
xchg
adc
lret
and
dec
adc
mov
dec
fs
daa
nop
pop
sbb
sub
fndisi(8087
and
mov
outsb
test
push
lret
and
ja
xchg
xchg
js
pop
cmp
arpl
xchg
and
add
incl
dec
aaa
loop
xor
outsb
test
push
inc
test
ret
scas
mov
out
sahf
ficompl
and
insb
sbb
jg
movsl
pop
addl
jmp
movsl
sub
cmc
roll
lahf
jge
jns
in
jg
test
inc
sbb
or
xchg
mov
and
mov
outsl
mov
cmp
dec
arpl
sub
hlt
sub
push
mov
iret
jmp
ror
dec
inc
push
lock
mov
mov
rorl
xchg
jmp
jl
or
mov
pop
addr16
pop
add
xchg
sbb
sbb
insl
in
out
pop
jnp
jecxz
sub
aas
ljmp
pop
mov
test
sub
dec
mov
jae
imul
mov
das
mov
rorl
xchg
call
out
gs
popa
ret
ret
mov
fcomp
movhps
xchg
sbb
or
imul
xor
pop
int3
push
sahf
fdivrs
arpl
mov
or
imul
jo
sbb
xor
das
pushf
pop
cli
in
fiaddl
inc
dec
test
xchg
outsb
int3
sub
and
mov
lods
and
mov
or
mov
mov
sbb
rcr
xchg
adc
mov
loope
and
xor
pop
addr16
scas
push
add
adc
das
dec
jg
xrelease
ss
popa
sarl
out
or
mov
in
adc
mov
popa
loop
sahf
dec
repz
mov
fiaddl
jle
pusha
cmpsb
mov
pop
int3
ja
pop
push
imul
aam
nop
hlt
in
sti
xor
xor
ja
test
insb
inc
xchg
popf
divb
es
sub
jecxz
es
insl
lds
mov
xchg
lahf
aaa
push
lret
and
or
clc
out
faddl
fmull
mov
nop
and
push
adc
lret
shrb
jb
pop
or
je
ja
in
lret
std
add
xchg
mov
ja
lret
leave
sub
out
add
pop
jg
push
ljmp
xchg
lods
loopne
aas
mov
es
sti
dec
dec
xchg
jecxz
push
pop
mov
jecxz
add
add
pop
or
pop
fidivl
dec
mov
aaa
inc
sub
add
jb
jne
sub
xchg
pop
mov
adc
mov
cmp
out
fwait
les
push
cmpl
addr16
cmp
pop
or
inc
mov
fwait
repnz
sub
mov
cli
call
mov
xchg
pop
jno
mov
mov
pavgw
leave
xchg
clc
aad
add
sbb
dec
pop
leave
lock
inc
mov
dec
sbb
dec
ds
adc
lods
sbb
cmp
lods
xor
xchg
cmp
sub
adc
or
adc
adc
cmp
mov
push
movsl
adc
mov
out
cmp
sbb
dec
je
dec
aaa
notl
xchg
mov
cmp
scas
in
movsb
aaa
mov
jbe
in
in
loope
ret
xlat
push
jle
xchg
and
mov
cmpsl
xchg
mov
into
call
jne
dec
mov
je
data16
sahf
jb
pop
pop
jnp
cli
outsb
mov
lret
sub
repz
add
push
aad
nop
inc
xchg
fldt
mov
inc
xchg
pop
movsb
insb
mov
or
jecxz
dec
lret
imul
lods
cmp
mov
cli
push
imul
daa
lret
std
mov
and
and
sbb
pop
sub
into
out
mov
ret
add
scas
loop
mov
xchg
ds
test
lret
cwtl
xor
ja
int3
sub
xchg
and
fisttps
loope
xor
jno
xchg
cmpsb
mov
xor
xchg
jmp
xor
or
rcll
cs
or
jecxz
jns
sbb
inc
push
mov
clc
outsb
pop
mov
lods
add
inc
bound
fcmovu
lods
sbb
pop
dec
fisttps
shl
xchg
cmpsb
les
mov
xor
pop
add
ret
mov
mov
scas
inc
pop
std
jmp
or
lret
sub
hlt
pop
mov
ror
hlt
mov
stc
push
xchg
adc
cmp
cmp
mov
aas
mov
ja
xor
and
mov
popa
mov
clc
mov
pop
je
imul
ret
xchg
bound
fstpt
loope
adc
add
xchg
imul
jp
xchg
xorl
sub
lea
cmp
stc
mov
push
aam
sub
add
jns
sahf
movsl
pop
jno
jno
add
xchg
adc
test
fs
test
sub
sbb
mov
pop
clc
sarb
cld
nop
mov
cmpsb
jl
xor
movsl
xor
jno
xchg
mov
sub
xlat
xor
mov
mov
insl
mov
scas
sub
daa
push
xchg
jnp
or
push
mov
push
lcall
scas
popa
xchg
pop
inc
push
test
mov
and
es
mov
xchg
pop
popl
add
call
xchg
addr16
adc
cmpsl
int
or
inc
dec
xor
imul
ljmp
aam
jb
or
and
push
lret
cltd
adc
sbb
or
cwtl
call
imul
push
test
in
fcoml
in
xchg
pop
or
dec
pop
bnd
mov
pop
lods
insb
sbb
ss
out
mov
jno
cmc
lods
stc
push
pop
sbb
sub
lods
shr
inc
divl
addr16
mov
mov
cld
pop
scas
sub
cltd
mov
xchg
dec
movsb
movsb
adc
inc
fidivs
out
jl
fisttpl
orb
pop
mov
idivl
sbb
dec
fcmovb
mov
sbb
xor
stc
dec
pop
inc
sbb
push
jle
int3
or
add
mov
int3
cmp
aad
jg
cmc
ljmp
push
loop
and
add
cwtl
dec
mov
cmc
mov
pop
add
test
fisubrs
adc
mov
iret
cmpsl
adc
and
jecxz
stc
mov
loop
imul
addr16
pop
xchg
out
mov
inc
andb
mov
sub
shll
clc
out
pop
dec
sub
or
stos
into
cmp
and
mov
sar
rorl
negb
mov
or
aam
in
test
clc
je
pop
das
pop
pop
test
and
adcb
imul
stc
push
sbb
inc
test
scas
dec
leave
jg
iret
push
jl
jmp
dec
shlb
sub
adc
rcrb
adc
push
cld
ret
cmc
sbb
adc
sbb
mov
xchg
mov
jg
and
lret
xor
pop
in
aad
lret
push
into
lea
dec
cmpsl
jb
outsl
dec
xor
ljmp
jo
mov
mov
dec
in
inc
inc
pop
pop
mov
sub
fdivrs
xor
mov
inc
push
and
ss
dec
dec
nop
cmp
jmp
mov
les
push
ss
pop
out
lods
or
jbe
add
nop
sti
lahf
adc
and
jns
or
add
inc
vorps
movb
les
add
cmp
scas
icebp
insb
fs
adc
push
push
or
sahf
inc
nop
fld
push
mov
lea
push
pop
dec
ja
data16
mov
mov
add
mov
pop
adcb
aam
fildl
push
stos
pop
cli
jbe
aaa
ffreep
lds
lcall
xor
int3
test
adc
inc
les
xchg
push
cmp
add
and
out
cmp
add
aaa
pop
cltd
mov
mov
and
mov
roll
shrl
inc
pushf
repnz
repz
mov
les
enter
dec
pop
into
aas
sbb
xlat
mov
dec
ds
mov
inc
test
mov
sarb
movsb
add
repnz
popa
sub
dec
loope
xor
xor
lret
cltd
jg
mov
ljmp
lahf
sbb
or
pop
pop
cmpsl
les
sbb
cmp
add
pop
cmp
rcrb
jp
idivb
add
in
and
xorl
add
adc
loope
jp
adc
jmp
jmp
mov
mov
push
je
push
push
add
loop
dec
mov
adc
pushf
push
enter
into
xor
jo
or
jb
xchg
enter
iret
cmc
add
push
jmp
jle
or
inc
xor
aad
mov
mov
out
repz
mov
jge
mov
mov
mov
lea
mov
adc
test
js
sub
add
mov
dec
sub
popf
fwait
jg
fwait
movsb
inc
mov
inc
ljmp
sbb
or
add
addr16
ja
mov
shl
jg
xchg
jp
loope
xchg
sahf
add
shll
push
ja
push
dec
pop
mov
inc
sub
push
push
cmc
repz
or
xor
lahf
mov
jb
cwtl
int
jno
fimuls
push
incl
push
adc
xlat
mov
addr16
mov
adc
sbb
enter
int3
add
add
in
cwtl
push
jb
mov
xchg
fwait
out
push
sbb
imul
sbb
sbb
ret
inc
jnp
addb
pop
fiaddl
ja
out
sbb
adc
subb
lock
sbb
dec
lret
lret
cmp
movsb
xor
sbb
repnz
sub
xchg
xor
int3
mov
subb
pop
pushf
push
mov
fistpll
jne
jl
loopne
xor
xchg
xchg
daa
mov
daa
das
jne
xchg
das
dec
sbb
sbb
fldt
xchg
test
in
sub
xchg
ret
mov
jne
jp
push
clc
pop
insb
adc
cli
jno
pop
jmp
cmpsb
mov
out
daa
cmpsl
cmp
out
push
in
jmp
addb
add
pop
icebp
sub
out
sbb
adc
mov
push
out
xor
es
cli
push
push
sbb
stos
xchg
and
cltd
adc
test
mov
pop
popa
xorb
or
aas
popa
cmp
fimuls
das
push
std
cli
sub
imul
adc
mov
push
rorl
sub
lcall
push
ror
jbe
repnz
shll
xchg
pop
adcb
ret
out
jae
jmp
sub
or
lahf
and
out
lds
xorl
mov
jle
xchg
jo
push
pop
inc
mov
xor
xchg
outsb
jns
add
cwtl
lcall
and
out
cmc
fistpl
add
mov
mov
xor
test
inc
leave
lahf
lds
testb
in
adc
repz
les
pop
cld
stos
mov
lret
add
adc
xor
and
scas
xchg
in
mov
xchg
push
adc
cld
xor
add
cmp
xor
sarl
ljmp
pop
in
mov
fdivs
or
cmpsl
ds
add
mov
pop
divl
dec
and
scas
cmp
fsubs
dec
sbb
cwtl
mov
test
jo
stos
rol
xchg
dec
mov
jg
sbb
sbb
jge
ret
sbb
adc
mov
mov
xlat
das
ds
push
add
bound
aam
mov
push
mov
lahf
imul
mov
cmp
push
shlb
jecxz
xchg
add
call
mov
cmp
mov
push
xchg
dec
mov
iret
test
cmp
pop
mov
into
mov
popf
inc
jo
cltd
out
mov
dec
pop
mov
sbb
inc
mov
fmuls
fs
mulb
xchg
test
pushf
mov
sub
in
icebp
mov
sbb
cmp
push
insl
cmp
aas
sub
dec
test
fnstenv
test
sarb
movsb
dec
pop
or
push
or
iret
call
mov
iret
adc
xchg
bound
cmp
ffreep
out
pusha
shrb
out
sub
nop
mov
pop
or
js
add
add
xchg
and
lcall
pop
push
push
cmpsb
jbe
out
add
jne
xchg
loope
pop
mov
pop
mov
adc
test
mov
dec
ljmp
cmpsb
push
sub
add
sub
cld
sbb
hlt
mov
mov
sbb
pop
add
cmpsb
bound
loope
in
push
mov
fdivs
aas
and
sarb
stc
jp
or
mov
movsl
popl
test
jp
mov
shrl
ss
push
adc
mov
mov
jb
enter
sbb
mov
xor
dec
sbb
loop
and
adc
lcall
sbb
out
stos
pop
mov
pop
mov
and
int3
int3
inc
fiadds
mov
jmp
mov
dec
cltd
call
jmp
icebp
push
ja
and
std
dec
pushf
dec
mov
xchg
jns
cmpsl
repnz
mov
addr16
data16
fmul
lahf
rep
addb
test
mov
repz
mov
hlt
insb
xchg
add
ds
rorb
das
add
fcmove
ret
mov
jno
shll
and
aaa
mov
add
pop
dec
mov
xchg
dec
mov
movsb
lea
xor
push
jno
hlt
jae
adc
clc
mov
sbb
cmp
lret
mov
je
push
shll
cs
pop
lahf
or
cmpsl
or
icebp
je
data16
sub
xlat
in
mov
sahf
sub
jae
mov
loop,pt
icebp
pslld
cmp
xor
pop
stc
cli
mov
sub
out
adc
sbb
mov
add
push
lret
and
mov
mov
xchg
push
add
out
clc
ljmp
mov
rcll
or
aas
outsl
dec
and
mov
das
mov
idivb
cmp
xor
icebp
and
push
mov
inc
mov
add
jp
adc
add
es
lock
js
in
jnp
sub
shl
add
test
ss
cmpsl
mov
mov
call
je
test
push
pop
pop
gs
mov
dec
and
add
test
divb
addr16
cld
test
xor
in
mov
jne
lahf
int3
sbb
arpl
addb
les
sbb
mov
xor
pushf
add
adc
fcmovu
sbb
pop
mov
and
adc
pusha
arpl
insl
popa
fstp
les
jecxz
xchg
adc
mov
adc
xchg
cmc
hlt
test
ss
sub
mov
imul
jge
stc
test
sbb
iret
ficoml
outsl
or
xor
aas
xchg
mov
sub
fs
sbb
aaa
lea
xorb
adc
cmp
jp
bnd
jmp
iret
hlt
add
fucomp
xchg
pushf
and
adc
loopne
xor
popa
and
clc
xor
js
insb
dec
aas
arpl
lret
or
lock
test
in
inc
jbe
imul
lods
mov
add
xchg
out
clc
adc
sbb
mov
push
test
push
repnz
xor
and
inc
aaa
cmp
loope
fwait
jne
fstl
mov
cmc
sbb
scas
mov
sub
popa
adc
in
inc
inc
mov
lds
sbb
scas
xchg
imul
std
lods
xlat
loope
je
cmp
orb
jmp
clc
lds
into
cmp
int3
ja
mov
jae
push
mov
mov
mov
into
psubb
das
insl
jmp
pop
mov
gs
aaa
add
xchg
mov
sub
mov
je
lock
jo
push
cmc
adc
imul
test
dec
cwtl
xchg
xchg
les
pop
scas
call
xchg
sub
in
sub
push
jmp
mov
stos
push
mov
push
lock
out
dec
int
fiadds
jle
out
call
jnp
je
add
pushw
iret
xchg
rcrb
dec
mov
jno
daa
adc
cld
mov
push
andl
jle
inc
popf
stos
mov
jecxz
sbb
jg
addr16
adc
sub
mov
add
cli
pop
std
mov
cmpsl
adc
sti
adc
xchg
push
das
mov
or
dec
adc
dec
mov
and
or
mov
insb
cmp
out
push
add
xchg
insl
addr16
insb
lds
inc
xchg
repz
sbb
dec
mov
add
mov
push
aaa
stc
int3
pop
add
inc
je
lret
push
adc
jne
fdivrs
sub
pop
jg
xchg
jle
aas
mov
mov
push
xchg
les
xchg
and
inc
rclb
mov
cmpsl
int
or
fldcw
stos
movsl
les
ret
sub
mov
pusha
pushf
cld
test
sub
enter
cltd
out
sbb
and
mov
add
mov
aaa
push
cmpsl
sbb
inc
cmp
call
insl
pop
outsb
xchg
test
cld
test
mov
and
add
lds
repz
inc
jecxz
cmp
in
jl
addr16
lds
add
arpl
pop
aam
cs
cmpsb
mov
sbb
inc
mov
and
fwait
std
mov
add
in
adc
sbb
xor
pop
aaa
mov
mov
lret
fs
xor
cmp
cmpsb
or
in
jp
sbb
lcall
jnp
inc
clc
stos
out
scas
jp
mov
dec
jecxz
jle
mov
push
insb
and
mov
dec
lea
jg
sub
test
stos
in
pop
xor
sti
sbb
mov
int
dec
sub
cmp
stc
fsubl
push
or
mov
mov
jmp
in
leave
dec
dec
lret
cmc
mov
int
sbb
mov
push
aad
sbb
sbb
insl
aaa
outsl
icebp
jne
lea
adc
cltd
imul
push
mov
add
mov
aas
push
fistl
push
mov
mov
mov
stos
mov
fisubrl
scas
sarb
jo
mov
ljmp
or
pop
xchg
mov
sbb
mov
or
cmpsl
outsl
pop
pop
dec
movsl
or
ljmp
mov
iret
or
clc
xor
mov
xor
roll
cmp
fisttpl
dec
mov
or
lods
lds
mov
sub
pop
mov
inc
lret
xor
mov
es
xor
ja
imul
xchg
sahf
xor
lret
jge
push
sbbl
mov
push
sub
mov
repz
adc
call
pop
iret
hlt
add
push
jp
imul
mov
popa
sbb
cmc
outsb
stos
stos
cmp
test
jp
out
lret
xchg
stos
mov
sbb
sub
sub
and
mov
iret
pop
dec
push
ljmp
sahf
cli
push
arpl
or
fyl2xp1
pop
mov
imul
ljmp
sbb
outsl
inc
je
lret
lds
insl
je
push
jne
xchg
pop
mov
lret
pop
dec
loopne
mov
jae
add
icebp
mov
cmp
sbb
repz
jnp
fmull
lahf
das
mov
scas
jno
cmp
mov
cli
aaa
pushf
lret
mov
enter
jb
loop
je
and
dec
mov
andl
cli
push
aad
movsb
add
dec
dec
out
push
sbb
in
adc
jp
divl
xchg
mov
test
insl
xor
jb
fcmovnu
cmp
popf
subb
xor
shll
push
add
aam
andb
xor
jge
cs
adc
stos
aaa
or
sbb
pop
mov
bound
mov
pop
subl
mov
dec
pop
xchg
hlt
mov
ljmp
jbe
lock
mov
loopne
jo
jns
fwait
dec
std
push
mov
adc
call
ror
xor
pop
mov
loopne
rcr
imul
popf
sub
sbb
pusha
arpl
sahf
dec
pop
mov
pushf
mov
or
cmp
add
int
rorl
jmp
push
xchg
sti
rorl
pop
add
xchg
cwtl
repz
mov
or
out
and
sub
xor
xchg
cltd
xchg
xor
jno
adc
and
sub
mov
test
fcomi
in
sub
rcrl
out
mov
popf
ficoms
dec
lds
pop
in
ret
dec
mov
add
insb
push
out
sbb
loope
mov
shl
and
push
push
jge
push
or
inc
clc
int
inc
inc
ljmp
mov
or
cmpsl
faddl
fwait
push
sub
out
fstps
cltd
cmp
dec
push
dec
and
xchg
pop
pop
or
ss
mov
cmp
jle
or
jbe
xchg
aas
cmp
ja
push
push
sbb
jg
outsb
cmp
stc
nop
jecxz
pop
stos
int
inc
sbb
xchg
psrlq
aaa
jp
andb
out
ljmp
jecxz
cmp
cmp
jns
mov
enter
mov
mov
cld
shrl
sti
add
orl
sbb
and
mov
lods
push
sahf
rclb
and
add
sarl
fucomp
cmp
pop
mov
adc
push
mov
test
sbb
ficompl
addr16
clc
jge
inc
loope
movsb
mulb
pop
inc
pop
push
loopne
shll
xchg
sbb
push
jl
adcl
lcall
xchg
xchg
jno
movl
sub
cmp
adc
mov
rorb
hlt
pop
jge
popf
inc
les
add
ret
out
sub
fbstp
mov
cmp
dec
mov
and
sbb
push
aaa
and
inc
subb
mov
int
test
out
xor
in
lods
int3
jae
in
or
dec
jge
jge
cmp
xor
and
aas
sar
jo
loope
in
shll
sub
clc
push
and
xor
imul
aam
jp
cwtl
mov
insl
jnp
lret
es
lods
jo
loopne
pop
pop
nop
pop
pop
and
ret
sub
mov
pusha
mov
jle
popa
jb
cwtl
mov
repnz
popf
jl
sbb
shlb
daa
sbb
inc
mov
xchg
addr16
cmp
aas
add
pop
addr16
lods
or
jno
pop
inc
nop
pop
hlt
push
xchg
out
xchg
repnz
cmp
mov
sbb
lods
push
fldl2t
push
push
pop
push
cmp
pop
stc
xor
stos
pop
jae
fldt
mov
in
adc
mov
pop
loopne
push
aad
stos
xchg
push
ret
cmp
cld
and
nop
ret
syscall
and
inc
push
ss
adc
pop
jp
push
scas
stos
stos
ds
enter
rorl
push
dec
xor
pop
test
xor
test
sbbb
dec
or
inc
mov
hlt
in
push
lods
push
adc
push
mov
mov
ja
mov
pop
bound
mov
jne
pop
jae
popa
mov
aam
pop
jno
inc
loope
hlt
push
cmp
bound
mov
lods
pop
pop
pop
pop
or
push
cmp
sbb
push
pop
inc
adc
test
jo
pop
jae
mov
cmpsb
mov
or
cmp
dec
sub
fsubrl
sbb
cmp
xchg
inc
add
and
mov
and
xchg
push
decb
mov
das
or
arpl
clc
pop
lock
or
loop
mov
lea
testb
mov
mov
inc
jns
imul
lret
insb
add
into
dec
pop
gs
repz
jno
inc
clc
mov
mov
fmull
psraw
add
or
mov
andb
push
insl
scas
cs
xchg
dec
mov
out
cmp
jp
in
sub
dec
inc
jo
pop
xchg
inc
mov
or
movsb
adc
pop
dec
pop
cld
loopne
pop
iret
cmpsl
or
jae
jmp
mov
lea
shll
lods
or
fidivl
mov
or
pop
mov
imulb
cmc
pop
adc
cmc
jle
or
mov
out
sub
icebp
fbstp
push
outsb
dec
jge
sub
fnstsw
sub
and
mov
or
mov
or
int
mov
fldcw
inc
rcll
nop
stc
cli
mov
inc
adc
mov
loope
mov
push
mov
je
or
jo
push
es
jnp
sub
aad
pop
mov
push
pop
das
pop
add
test
adc
jecxz
aaa
sbb
and
jns
stc
imul
cmpsl
pop
push
mov
stc
inc
arpl
mov
cmp
mov
jnp
fsubp
fcomps
pop
push
and
cmp
aaa
sub
test
sbb
add
or
push
bound
push
pop
push
cmp
inc
insb
mov
sbb
push
xchg
aas
loop
mov
jle
inc
add
add
pop
dec
arpl
jnp
int3
cmp
sub
jl
into
popf
mov
ja
xor
popa
cwtl
ss
lret
mov
sbbl
dec
rcll
loop
pop
loop
je
adc
shlb
popf
inc
lret
daa
addr16
inc
sub
push
push
sbb
cmpb
test
filds
orl
popl
or
and
das
movsl
sub
aam
mov
ljmp
and
cmc
xchg
lret
adc
xor
sbb
jl
cltd
jg
les
and
dec
push
je
ret
hlt
fidivrl
or
push
loop
mov
sbb
and
pop
nop
and
cltd
lcall
sbb
jbe
js
mov
xor
xor
rolb
add
jne
rclb
adc
out
mov
inc
stos
inc
lds
mov
inc
inc
push
add
int3
sti
js
mov
pop
lret
mov
inc
popf
mov
or
inc
xchg
adcl
cmp
aaa
cmpsb
aad
sti
cmp
es
mov
gs
sub
push
mov
jbe
fwait
or
and
sbb
mov
lods
mov
shll
call
inc
ret
cmpsl
mov
push
push
sub
mov
popa
xchg
popa
mov
pop
sbb
fsts
cmp
xlat
dec
sub
into
out
fwait
mov
pusha
js
mov
jmp
push
mov
push
push
mov
orb
xchg
popa
mov
sub
sbb
fadds
ret
aas
inc
jp
push
xchg
cmp
aas
mov
cmpsb
xchg
test
inc
xor
jbe
gs
imul
adc
cwtl
bound
mov
ja
push
add
out
adc
icebp
push
pop
and
lds
inc
je
ret
loop
divb
aam
push
dec
add
jp
movsb
mov
xor
jg
push
jno
or
in
sahf
mov
mov
inc
push
mov
push
cmc
rcr
daa
dec
outsl
jae,pn
xchg
aad
jmp
and
sbbb
xchg
bound
xchg
icebp
loope
mov
test
cmp
das
hlt
das
or
hlt
ja
les
xlat
add
movl
cmp
adc
adc
mov
or
pop
lea
add
shll
jb
push
xchg
or
lock
xor
and
dec
fidivs
mov
aam
mov
cmpsl
sbb
cmp
sahf
popa
aam
jg
sub
sub
test
xorl
gs
inc
ficompl
sbb
flds
xchg
lret
loope
mov
mov
sub
sbb
dec
dec
mov
add
lahf
push
push
xchg
lret
xor
adc
jp
mov
dec
mov
jb
shll
add
sbb
xor
xor
xchg
clc
sbb
push
pop
jne
inc
jl
repz
test
mov
jo
xchg
sbb
test
xor
inc
add
lods
dec
es
pushf
imul
xor
adc
add
inc
adc
aad
mov
cmc
push
jecxz
call
fstpl
hlt
mov
and
dec
repnz
mov
idiv
loope
mov
sti
dec
imul
in
imul
cmp
xor
push
inc
fidivl
add
push
add
mov
dec
lock
outsb
icebp
and
aad
sarl
in
pop
mov
test
or
pop
mov
jecxz
ds
imul
sbb
stos
clc
xchg
aad
sub
jnp
cmpsb
or
pusha
rcll
add
jge
adc
in
and
jns
fidivs
sub
inc
sbb
pop
mov
repnz
cmp
pop
pop
daa
addr16
xor
rclb
push
cmp
dec
popa
xor
into
push
cmp
mov
push
xchg
sahf
frstor
sbb
inc
sbb
loopne
js
mov
add
add
mov
mov
mov
mov
pop
cmp
cmp
sbb
popa
push
push
imull
and
mov
dec
add
mov
push
push
xlat
sub
mov
mov
cltd
mov
nopl
xchg
ss
fwait
mov
rcr
mov
scas
inc
jo
mov
jo
sahf
jno,pt
jmp
and
and
dec
enter
sbb
push
or
sbb
out
lods
test
sbb
fdivrs
mov
enter
rcrb
dec
pop
push
jno
add
jp
jp
mov
lahf
pop
mov
rcr
jo
lea
lods
sbbb
incb
xorl
in
mov
dec
fwait
inc
cmpsl
stos
subb
xorb
mov
out
push
push
mov
int
lret
push
aad
dec
push
jge
push
loopne
aaa
std
mov
es
dec
pop
jg
scas
cmp
push
subb
pop
je
clc
cmp
dec
adc
cmpsb
cmc
cmp
insl
mov
fisubrl
jle
add
shrl
in
movsb
jl
cs
add
ljmp
cmpsl
pop
rcll
movsl
aaa
inc
cltd
inc
bound
mov
add
mov
fstpt
sub
and
clc
add
lret
add
jge
ret
xchg
enter
push
out
jnp
pop
das
dec
mov
xchg
lahf
or
push
mov
sbb
pushf
xor
sbbb
mov
mov
inc
fidivrs
gs
jb
adc
xchg
adc
add
push
push
stc
add
pop
aaa
dec
add
mov
outsl
push
mov
dec
mov
xor
and
cmpsb
andl
lahf
int
or
inc
pop
cmp
pop
xchg
or
push
pop
jecxz
jb
xchg
clc
push
aas
sbb
adc
lock
mov
sti
jg
out
xchg
leave
mov
cmp
clc
jo
xor
sub
loop
xor
sarl
mov
or
mov
mov
adc
adc
rcrb
ds
and
lock
sub
jl
lods
dec
mov
jno
je
mov
mov
xchg
or
mov
pop
push
stos
mov
fcompl
xchg
inc
push
mov
add
sub
jecxz
data16
xchg
pop
push
out
jle
outsb
or
nop
das
sub
mov
ds
loop
pusha
ja
xchg
movsb
cmp
pop
pop
or
stos
mov
dec
dec
xor
test
mov
mov
mov
ss
mov
add
fldcw
xor
clc
lods
rcrb
mov
and
hlt
imul
pop
cmp
ret
or
movsb
or
cmp
push
test
pop
sub
jge
int
arpl
pop
ja
mov
int3
mov
mov
jb
pushf
addr16
icebp
inc
jnp
xor
jecxz
push
mov
outsl
in
sub
les
push
les
xchg
fwait
push
and
jae
loop
shrb
or
in
xchg
pop
sub
aaa
sbb
add
mov
imul
pop
jecxz
xchg
mov
mov
jnp
add
in
push
outsl
mov
add
sarl
or
addb
sti
sbb
mov
jno
push
xchg
pop
iret
sbb
fidivl
jae
dec
mov
lds
push
lods
mov
in
pop
inc
movsb
jbe
je
loopne
xor
icebp
push
sbb
dec
dec
les
adc
mov
and
int
movsb
cmp
adc
imul
inc
addb
cmp
mov
iret
xchg
hlt
int
xor
or
dec
stos
in
stos
addl
int3
dec
icebp
mov
test
out
pop
rolb
popa
shll
or
or
aad
les
fs
mov
fisubl
adc
insb
lahf
xchg
jge
push
hlt
sbb
dec
and
jns
inc
or
dec
mov
mov
and
sbb
pop
in
or
imul
or
leave
sub
or
add
xchg
pop
add
fcomps
jge
out
lods
les
outsb
repz
sbb
dec
dec
loop
andl
cwtl
data16
xor
mov
jecxz
mov
and
lret
xor
jmp
imul
dec
xor
add
pop
sahf
mov
jmp
shll
jmp
lods
in
adc
adc
daa
in
inc
int3
and
cmp
mov
xchg
sarb
lret
leave
leave
dec
push
hlt
cmpsb
pop
ret
cmp
adc
mov
push
add
fidivl
les
sub
mov
adc
dec
popa
xor
popa
push
xor
ja
ds
aad
sbb
adc
and
shll
rorb
jmp
adc
js
out
jne
aaa
xlat
pop
cmp
out
inc
jmp
lret
jno
out
push
int3
fcmovnb
xor
lret
and
lods
loope
in
and
sbb
mov
out
dec
lcall
jno
or
add
and
inc
aas
dec
jne
test
push
sti
pop
in
or
jmp
cwtl
rclb
xchg
and
mov
push
imul
push
and
in
mov
pushf
push
das
xchg
cmp
push
jecxz
add
push
mov
clc
xor
adc
mov
xchg
mov
mov
repz
out
mov
sbb
jno
out
push
aad
or
loop
adc
add
push
mov
dec
aam
sub
int
mov
je
mov
mov
mov
push
aaa
push
cmp
jo
add
out
ret
push
cmp
inc
ret
push
mov
fwait
add
movsl
sub
xchg
in
cmpsl
add
jae
hlt
sbb
enter
add
dec
cmc
call
sbb
scas
ljmp
repz
push
fxch
dec
insl
les
mov
jno
rcl
mov
mov
stos
gs
or
xchg
popa
outsl
test
lods
or
dec
cmp
push
ret
sub
pop
imul
xor
jmp
out
xor
or
outsl
jne,pt
jnp
xchg
mov
loopne,pn
insl
lretw
mov
jae
push
inc
push
jno
je
pop
out
mov
int
aaa
out
out
inc
mov
sbb
sahf
add
popa
and
sti
dec
imul
adc
das
push
fists
mov
out
inc
dec
outsb
out
lock
divb
aad
or
out
pop
cmp
adc
pop
outsb
negb
sahf
adc
inc
bound
mov
push
sbb
xchg
sub
cmp
xchg
psrld
iret
test
or
clc
lock
push
push
dec
imul
loopne
xchg
mov
pusha
rorl
divl
mov
xchg
lcall
adc
pop
ficoms
sbb
mov
push
add
lock
mov
test
cmp
fcoms
mov
xchg
dec
clc
stos
xor
clc
outsb
dec
sub
ret
repz
add
outsb
sti
pop
jo
xchg
jg
adc
lret
sahf
mov
mov
testb
ret
xor
xor
loop
aas
aas
mov
jmp
xrelease
dec
loopne
and
add
jo
repnz
and
inc
lods
sahf
popa
cmp
popa
dec
fsubr
or
imul
mov
cwtl
hlt
test
push
xchg
popf
mov
mov
xor
jl
jo
pop
rcl
mov
ficomps
jecxz
les
or
cltd
pop
repz
sub
outsb
mov
mov
shlb
add
and
out
jne
pop
add
add
adc
pop
leave
popf
js
test
dec
push
or
cmp
push
or
das
int3
aam
popf
dec
pop
push
jne
in
ja
xor
stos
xorb
mov
inc
sub
fsubrs
adc
cmp
sub
test
adcl
or
xchg
push
bnd
stos
bound
test
mov
and
mov
shlb
rol
adc
int3
stos
iret
add
loop
sbb
lods
mov
and
cmpsl
cmp
cli
pop
aam
test
sub
ret
xlat
lret
xor
imul
lret
pop
mov
xor
inc
shlb
pop
lret
sarl
test
mul
scas
scas
mov
dec
push
mov
mov
sbb
cmp
sti
idiv
fcoms
cmp
cmp
jmp
inc
mov
pop
std
pop
xor
lret
enter
pop
aaa
imul
dec
lods
jmp
add
dec
in
dec
sarb
ss
clc
cmp
lds
movsl
dec
and
arpl
and
rorl
aam
movd
data16
cwtl
pop
aas
ds
adc
fistpl
jo
pusha
cmpsb
repz
aas
int3
jg
cmpsl
push
mov
cmp
arpl
or
lahf
push
aas
mov
mov
jmp
cld
ljmp
jle
sub
pop
cs
das
iret
sahf
mov
lea
mov
push
xchg
adcb
iret
leave
call
sub
in
add
sbb
adc
pop
jecxz
mov
fs
jl
add
cmc
xor
or
leave
cmc
pop
mov
addr16
pop
mov
mov
mov
xchg
mov
je
lods
jle
std
xchg
adc
add
add
ss
add
fnstcw
mov
adcb
popl
jae
mov
sbb
and
inc
sub
jl
ds
bound
jnp,pt
xor
pop
cmc
cli
out
mov
xor
lods
lods
mov
fs
and
xchg
sub
adc
dec
les
test
pop
pop
out
sbb
or
sub
in
sub
outsl
adc
pop
push
fidivrl
fisttps
or
mov
loopne
mov
jno
fwait
iret
dec
ret
xchg
mov
lret
xor
mov
cmp
push
sbb
subb
pminub
das
push
insb
stos
out
faddp
leave
push
push
cmp
das
orb
lret
aad
std
mov
test
xor
mov
mov
lea
mov
scas
or
daa
push
and
stc
imul
ret
out
mov
repnz
xchg
stos
rorb
pop
lods
movsl
daa
sub
js
inc
test
mov
push
ds
xlat
in
out
scas
mov
lods
popf
jge
cmp
push
jnp
mov
and
xor
cltd
adc
mov
sbb
or
ss
adc
mov
in
mov
loope
push
repnz
push
mov
sbb
andb
loope
ds
mov
lcall
imul
mov
pusha
ds
dec
mov
sub
jl
pop
loope
mov
jnp
test
xor
pop
lret
xchg
jge
jo
xorb
xchg
lcall
sbb
push
frstor
fldl
sub
mov
push
in
xchg
popf
mov
je
idiv
cmp
jmp
push
mov
inc
pusha
inc
call
jns
pop
pushf
fisubrl
add
fbstp
push
clc
adc
xor
inc
mov
and
and
testl
jmp
scas
mov
mov
sub
mov
push
mov
sub
adcb
add
push
es
sbb
cmp
icebp
sbb
push
adc
ljmp
mov
push
outsl
test
xor
in
aas
adc
inc
or
sub
imul
adc
aas
ret
adc
sbb
enter
lea
jbe
dec
xchg
mov
je
mov
xchg
data16
dec
ret
and
dec
je
jae
in
or
xor
jle
add
sbb
mov
or
pop
test
dec
pop
inc
gs
jnp
mov
into
add
test
mov
test
pop
ret
pop
roll
icebp
or
sarb
lret
popa
sbb
cmp
aaa
sbb
xchg
stos
pop
les
jnp
sbb
add
ret
xor
mov
ds
fnsave
lock
scas
loope
gs
inc
in
scas
inc
mov
lahf
pop
xor
jns
mov
imul
stos
push
aad
add
aaa
sbb
lret
sub
mov
mov
gs
hlt
pop
leave
repnz
into
adc
push
loope
and
je
gs
pop
inc
aas
and
cmp
jo
stos
aaa
ds
dec
cmp
or
add
adc
fcompl
sub
fsubl
mov
dec
cs
jnp
test
pop
popf
adc
cwtl
sub
int
lods
jecxz
xchg
aam
rclb
je
mov
push
add
jne
inc
pop
pop
and
pop
fidivs
sbb
mov
outsl
and
negl
in
xchg
inc
and
fcmovu
lret
cmp
xchg
lods
and
cmp
adc
inc
imul
xchg
mov
pop
sub
int
mov
aaa
sbb
addl
and
aaa
pop
repz
ret
pop
ret
and
dec
addr16
xchg
test
push
inc
cmp
lds
out
or
mov
mov
push
mov
stos
ds
jmp
repnz
jl
std
cmp
stos
fidivl
pop
ljmp
cmp
sub
pop
and
dec
incl
xchg
inc
push
xor
inc
dec
aaa
dec
movq
push
call
jb
icebp
push
adc
mov
xlat
jle
fcomps
cmpl
jo
fsubp
cmp
inc
shrb
out
leave
pop
xor
xchg
pop
or
dec
bound
jle
add
xor
repnz
add
sbbl
iret
adc
sbb
push
ljmp
pop
jg
mov
adcl
mov
insb
mov
bound
cmp
outsb
aad
sbb
pop
test
sub
into
mov
sbb
push
shrl
inc
pop
dec
imul
xor
sub
loope
mov
sti
xor
jmp
loop
repnz
mov
fucomip
movsb
cltd
outsb
gs
lea
mov
adc
cmpsb
push
inc
sbbl
cmp
mov
imul
out
loop
ss
jmp
push
lret
repz
mov
dec
add
test
repnz
sahf
repz
jle
shl
xchg
clc
pop
sbb
lods
inc
pop
pop
int
mov
movsl
inc
dec
pushf
fsubrl
jnp
push
mov
pushf
cmp
mov
ds
push
in
mov
inc
mov
aas
setl
daa
add
xchg
in
sbb
es
xchg
xlat
nop
mov
mov
pop
xor
stos
mov
in
fcmovu
and
gs
mov
outsl
xor
cmp
add
aam
jnp
cmp
test
ffreep
scas
std
mov
inc
dec
ds
pop
jns
cmpsl
jecxz
bound
pop
stos
data16
jp
repz
sbb
not
cwtl
dec
in
rcrb
lcall
jecxz
xchg
rcrl
shl
lock
sbb
popf
mov
addr16
out
clc
or
popa
mov
rcrb
push
jmp
out
push
in
outsl
mov
mov
aam
fildll
outsb
rolb
add
mov
outsl
jnp
pop
mov
imul
into
aad
inc
xor
cmpb
xlat
stos
and
sbb
vxorps
and
rcrl
mov
mov
mov
push
daa
mov
cmp
lret
iret
shrl
test
xor
xchg
in
sub
xchg
or
enter
mov
mov
jnp
in
ret
mov
iret
cmp
dec
jl
jmp
data16
mov
sub
incb
mov
idivl
jp
mov
stos
mov
loope
mov
pop
in
sbb
xchg
test
icebp
std
dec
stos
sub
addr16
iret
cltd
and
jecxz
dec
and
imul
mov
es
adc
mov
lret
or
or
aad
nop
xor
daa
leave
insl
sub
fadd
adc
jb
or
out
frstor
xor
mov
clc
or
adc
mov
xchg
test
outsb
lret
scas
fisubl
call
jp
sti
int
subl
push
add
insb
xor
cli
outsl
push
ljmp
xchg
out
push
push
push
jge
int3
jl
lret
lahf
das
mov
nop
push
loope
out
stos
rdmsr
jns
fisttps
int3
mov
pop
jae
out
insl
shrb
lret
hlt
fisubs
xor
lock
or
out
aaa
jle
jmp
and
sbb
mov
lods
push
push
dec
pop
divl
repz
int
test
mov
pop
sbb
sahf
aam
testb
mov
add
lahf
sbb
xchg
enter
lods
add
loope
cld
je,pn
in
mov
stc
fisubrs
xor
sahf
roll
daa
mov
dec
in
inc
mov
lods
stos
jns
test
push
jo
enter
scas
imul
sbb
mov
or
js
push
lods
popa
inc
mov
popa
mov
nop
mov
sbb
lods
mov
arpl
mov
jae
jbe
lods
xchg
fwait
hlt
push
lock
mov
add
iret
add
sub
int3
xchg
arpl
repz
mov
mov
sti
loopne
out
std
xor
inc
lret
xchg
sbb
cltd
daa
jne
inc
sub
pop
test
xor
loopne
xlat
mov
enter
add
cmpsb
cmpsl
push
jg
sub
xor
mov
or
outsb
xlat
dec
jp
and
scas
push
adc
mov
ficomps
pop
stos
mov
repz
adc
out
sub
pop
leave
jg
sbb
pop
dec
int3
lea
cmc
jbe,pn
cmp
push
std
insb
test
xlat
mov
mov
dec
lock
sbb
xor
cmp
push
iret
sbb
mov
js
jnp
jecxz
jl
popa
adc
mov
or
ljmp
fisubl
xchg
push
xchg
idivb
or
or
xchg
sub
ja
inc
into
xor
lods
cmp
clc
es
into
jle
dec
adc
fnstcw
fldt
pusha
and
adc
in
aaa
mov
movd
or
in
sbb
mov
fmull
fnstenv
or
pop
lods
xor
popf
mov
sbb
sub
and
pop
test
icebp
xchg
inc
dec
test
add
pop
fisubs
xchg
aam
add
std
lods
jmp
clc
in
push
add
xchg
push
fwait
inc
aad
push
mov
jle
jb
inc
push
inc
jg
repz
aas
pusha
iret
sub
xchg
ret
call
arpl
adc
jae
insl
mov
shlb
jl
enter
and
lcall
mov
sub
notrack
push
inc
sub
sbb
sbb
mov
and
rcrb
sbb
lahf
mov
cmp
dec
xchg
lds
mov
ljmp
aad
sub
mov
pop
pop
insl
test
mov
sub
mov
repnz
int
xchg
xchg
faddl
jnp
std
pop
jp
push
cmp
in
dec
cld
lods
pop
stos
inc
lods
xchg
or
in
gs
jecxz,pn
lea
dec
xchg
cmp
mov
clc
fisubrl
adc
mov
repnz
lock
sti
push
int3
aam
pop
push
xchg
and
popa
and
sti
lods
test
mov
push
outsl
test
andl
pop
clc
mov
fs
add
decb
dec
push
lahf
nop
add
push
or
pop
xorl
mov
insb
fcoms
adc
jle
push
mov
cmpsb
mov
popf
pusha
aas
pop
xor
mov
test
das
inc
mov
fsubrs
push
negl
and
insl
mov
or
stc
add
or
and
ljmp
fisubl
ds
jae
cmpb
and
mov
mov
mov
stc
xchg
add
jnp
adc
add
pop
bound
mov
push
fcmovnb
lock
cmp
xchg
mov
in
push
fs
adc
sbb
cmp
sarb
outsl
mov
ret
jg,pn
cmpsb
imul
mov
call
outsb
pop
insb
sbb
mov
mov
or
ja
ja
js
adc
xor
lea
fsubs
cltd
dec
enter
push
jno
scas
push
and
stos
jg
or
xchg
jno
jge
sti
mov
imul
mov
pop
sbb
test
and
movsl
xor
adc
dec
jmp
nop
es
in
jg
adcl
jmp
jge
sub
dec
and
inc
or
loope
clc
stc
lea
loopne
sub
rcl
push
fiaddl
dec
aaa
mov
xchg
int
gs
xchg
out
or
pop
pop
add
inc
test
ret
xlat
std
addr16
loopne
or
in
mov
addr16
ds
lcall
into
es
push
lahf
and
mov
mov
or
incl
lods
out
sbb
or
scas
mov
sub
pop
js
sub
sub
call
and
mov
vpmulhw
jp
mov
add
sub
movsb
or
movl
jge
aam
dec
mov
insl
push
cmp
roll
outsb
daa
mov
lret
mov
or
in
call
test
movsb
cmpsl
enter
dec
mov
imul
jne
insl
mov
daa
sub
and
adc
pop
push
cld
es
data16
iret
je
jns
jno
xor
mov
scas
xor
lods
stos
xor
sbb
popf
std
inc
enter
push
icebp
dec
push
hlt
mov
fmuls
dec
out
cmc
pop
sahf
mov
xchg
or
scas
sub
stc
pushl
hlt
test
fwait
add
test
repnz
sbb
adc
movsl
and
xor
dec
inc
mov
pop
cmp
and
gs
sub
lret
jecxz
mov
lock
push
call
push
mov
pusha
lret
aaa
test
scas
adc
inc
rclb
in
inc
cmpsl
fwait
jmp
push
pop
push
and
push
push
mov
pusha
fld
xlat
pushf
rcl
lock
pop
insb
pop
mov
jmp
fsts
sbb
rorb
mov
bound
jns
bound
clc
or
addb
lods
pop
fsubs
xchg
pop
pop
imul
lahf
data16
or
aas
sbb
mov
sbb
inc
mov
outsb
inc
inc
dec
add
inc
mov
fwait
or
adc
jmp
push
dec
mov
lods
mov
ss
es
mov
dec
mov
pop
jbe
push
sub
xchg
cmp
sti
out
imul
xchg
js
jns,pt
jb
pop
lahf
lret
add
rcrl
jo
push
pushf
arpl
inc
xchg
and
and
in
or
ror
sahf
push
jns
movsb
mov
jne
jb
iret
pop
pop
inc
push
lcall
out
in
hlt
cmpb
xchg
loopne
xchg
lea
jo
rorb
imul
mov
push
xlat
repz
mov
add
or
sbb
inc
jl
inc
popa
jmp
loopne
mov
adc
add
scas
arpl
jb
js
jle
lea
mov
add
pop
adc
fmull
mov
pop
add
mov
rclb
out
add
out
push
mov
ficoms
pop
in
loope
jns
mov
jb
aaa
scas
push
int
xor
cmp
lret
add
adc
mov
fwait
jne
xor
sahf
push
dec
idivb
xchg
add
fisubrs
and
pop
jmp
adc
pop
imul
int
imull
xchg
push
repz
shrl
rcll
pushf
stos
sub
and
adc
add
jmp
xchg
add
test
inc
aas
pushl
cmova
repz
aaa
ss
roll
rorl
pop
push
jmp
inc
push
add
and
pop
mov
outsl
in
in
out
js
lods
push
mov
cmp
or
sub
roll
jecxz
inc
loope
mov
mov
add
cmp
pop
pop
lahf
cmp
mov
pop
mov
scas
and
stos
loopne
std
jg
pop
cmp
out
out
mov
mov
mov
test
iret
mov
sahf
pop
and
ja
xchg
dec
add
jecxz
outsl
fimuls
mov
xor
and
mov
cmpb
sbb
je
aam
das
xchg
sbb
pushf
sahf
enter
sti
jp
fadds
cmp
xor
mov
jg
into
fbstp
decl
aad
inc
mov
cld
lock
shrb
loopne
loopne
dec
rolb
lret
mov
shlb
pushf
inc
addr16
inc
mov
ret
in
cmpl
cmp
dec
cmp
sbb
sub
mov
mov
dec
cmp
lods
sub
push
ss
push
mov
outsl
jno
sub
cltd
cmp
inc
xchg
jno
or
rolb
in
add
sbb
icebp
imul
sbb
pop
iret
fadds
or
dec
stc
enter
add
clc
lret
int
insl
xchg
sbb
bnd
inc
out
rorl
flds
cs
test
test
std
cmp
pop
or
push
inc
sub
lds
aaa
jp
mov
xor
enter
xchg
jg
sub
mov
inc
cmp
dec
cli
dec
lss
push
dec
mov
push
sbb
les
ljmp
or
sti
mov
dec
rcll
mov
imul
out
aas
pop
inc
mov
inc
or
int3
pusha
clc
daa
loopne
inc
pop
cmc
mov
xchg
stos
jecxz
mov
pop
enter
xchg
cmpsb
fadds
push
lret
and
cmp
bound
jl
daa
testb
loope
sub
adc
call
cmp
data16
sub
mov
and
pop
shll
inc
or
xchg
pop
fcomip
cmpsl
arpl
push
test
sbb
sub
adc
inc
adc
lahf
nop
lods
pop
adc
pop
popl
fnstcw
mov
mov
dec
adc
pop
mov
inc
mov
or
sub
mov
mov
push
inc
jecxz
jp
dec
jl
jg
jo
xchg
and
push
out
imul
mov
pop
lds
or
jnp
cmc
adc
xchg
int3
decl
stos
cmpsl
stos
insb
mov
push
aas
xchg
xor
mov
xchg
imul
push
sbb
addr16
inc
stos
jmp
xchg
dec
insb
es
add
cli
push
iret
jmp
inc
aam
jp
inc
in
sub
push
enter
mov
xor
stc
dec
jmp
pop
sbb
icebp
scas
push
adc
push
push
addr16
in
cwtl
push
cli
push
jae
fidivrs
fldenv
adc
mov
fstpl
push
add
shlb
xor
aad
pop
inc
sbb
inc
cwtl
les
pop
jp
sbbb
push
daa
or
and
dec
sbb
mov
movsb
outsb
mov
test
cmp
or
hlt
or
xor
cld
xchg
lcall
mov
mov
sarl
mov
stos
shl
cmpsb
cmc
add
pop
sahf
je
and
loope
sub
movsb
cmp
push
les
and
inc
jl
int
testb
pop
pop
and
insl
das
xchg
jle
sbb
das
adc
fsubr
sub
cs
in
flds
jbe
fstpt
data16
xchg
pop
sbb
andl
xchg
mov
out
popl
xlat
stc
mov
mov
jge
cltd
pop
or
dec
jmp
fiaddl
inc
pop
xchg
insb
jae
fdiv
loop
pop
ret
push
mov
rcr
push
fcoms
adc
ret
xchg
cmp
and
or
sbb
mov
lahf
pusha
in
add
sub
jne
jge
sub
fwait
inc
pusha
cmpsb
mov
sbb
andb
inc
and
inc
js
loop
mov
cmpl
inc
js
ljmp
aad
sbb
dec
jo
push
xlat
inc
cltd
ljmp
and
pop
cmp
incb
dec
repnz
xor
push
adcb
pop
fcmovb
inc
mov
cmpsb
insb
pop
inc
pop
roll
cmp
and
roll
lods
pushf
pop
pop
push
cmp
adc
xchg
xor
xchg
cmp
icebp
pop
andb
jecxz
in
dec
mov
mov
ljmp
adc
rclb
sbb
icebp
or
mov
mov
shll
push
hlt
repnz
clc
mov
pop
or
les
lret
dec
outsb
addb
daa
int
dec
icebp
push
int3
mov
push
loope
test
sub
fadds
rolb
int3
int
enter
xchg
or
fisttps
inc
xor
pop
rcrl
mov
out
push
rolb
sbb
mov
mov
dec
pslld
out
test
dec
and
stos
into
ret
int3
xorl
push
mov
addb
test
clc
inc
sub
or
in
sbb
fidivs
jge
mov
into
add
ret
jecxz
mov
pop
ds
xor
pusha
pusha
je
inc
repz
fisubrl
or
repz
and
lret
mov
pop
hlt
test
insl
lods
sbb
enter
xchg
in
movb
insb
lret
xor
mov
pop
mov
fcoml
add
fwait
inc
or
jg
mov
shll
fcmovnu
push
adc
adc
mov
jge
mov
ss
clc
mov
pushf
fucom
xchg
pusha
mov
mul
cmp
aam
push
ficoms
or
nop
int
mov
sahf
ret
insb
aam
mov
sahf
shll
sub
add
ljmp
sahf
mov
xchg
lahf
fs
mov
inc
xchg
pop
fimull
gs
pop
pop
fs
add
inc
jecxz
jmp
cltd
loope
push
int
fisttps
arpl
pop
dec
add
cmp
push
das
push
scas
jns
jno
mov
sbb
rcll
pop
shrb
adc
mov
mov
dec
mov
sub
add
je
cld
cs
out
jmp
push
xlat
rol
bound
in
rorl
push
gs
pop
mov
fisttpll
push
in
fnop
xchg
sbb
cmp
and
mov
sbb
xor
mov
xor
add
adc
stos
jae
mov
pop
sub
idivb
adc
pop
pop
out
jbe
sub
sbb
push
jo
frstor
push
mov
mov
jle
in
scas
mov
push
jnp
js
dec
call
mov
out
dec
or
sbb
mov
lret
call
push
add
adc
nop
pop
pop
mov
gs
fwait
jne
push
cld
movsl
sbb
adcl
insb
cmp
dec
xchg
inc
test
add
dec
ficoml
stc
js
gs
pop
jecxz
and
push
daa
dec
loop
rcll
or
xor
cmc
xor
or
xchg
sbb
lret
mov
xchg
xchg
in
imul
mov
adc
lea
or
push
or
mov
icebp
ljmp
sub
das
pop
aam
aad
and
lret
jg
and
aad
cmp
in
imul
pop
xorl
and
push
loop
mov
inc
movsb
enter
dec
in
dec
mov
int
inc
dec
cmpsl
mov
jmp
mov
push
jp
dec
sarb
test
xor
imul
test
test
or
pop
int
dec
int
cmp
jge
incb
mov
js
aaa
outsb
movsl
xor
dec
sbb
rcrl
and
mov
loope
adc
or
jo
imul
in
cltd
sub
sbb
out
pop
sub
push
jne
xchg
jne
lcall
fsubl
cs
ljmp
cmp
and
out
push
push
sub
pop
pop
pop
xorl
cmpsl
add
mov
addr16
mov
mov
pop
into
adc
push
sbb
adc
lods
js
sbb
gs
enter
stos
stc
test
inc
gs
out
pop
lds
rorb
loop
lret
pop
aam
adc
mov
test
mov
negl
das
std
sbb
pusha
cltd
inc
cltd
add
xchg
fwait
xchg
dec
aas
jmp
xchg
cmpsl
lahf
xchg
fistl
pushf
lock
sbb
jne
loopne
outsl
or
xchg
dec
rcr
pop
sbb
fdiv
daa
loope
inc
pop
hlt
addr16
clc
mov
sbb
pusha
mov
sub
inc
pop
stos
scas
adc
cwtl
xchg
ljmp
mov
lods
lock
fs
lret
xor
rcr
push
arpl
fcomi
insb
mov
mov
je
pop
jl
lea
shll
and
data16
mov
mov
cmp
ljmp
into
pushf
int3
out
cmp
shl
cmp
mov
sub
nop
dec
movsl
add
scas
jo
mov
in
shr
inc
xchg
repz
aam
adc
inc
roll
add
jge,pt
ret
jne
fs
xchg
mov
ja
test
scas
ljmp
push
cmp
cmpsl
mov
mov
xor
pop
cltd
std
int
subb
shlb
movl
popa
pop
iret
adc
add
jmp
mov
sbb
addr16
cmpsb
mulb
shrb
ret
jge
mov
pop
jg
xchg
pop
cmp
inc
jmp
stos
fisttpl
adc
xor
cmp
cmp
or
ss
sub
imul
and
add
pushf
pop
mov
or
xchg
lods
xchg
in
pop
repnz
sub
push
jmp
add
mov
adc
xor
xor
mov
loopne
add
and
mov
push
stc
mov
xor
sbb
cmc
dec
popa
pusha
jns
into
sbb
lock
loop
test
cwtl
dec
mov
mov
cmpsl
popa
cmp
add
mov
mov
loopne
mov
dec
std
lret
sti
sbb
add
cmpsl
int
mov
xchg
mov
mov
stos
sti
xor
ljmp
rcll
fstpt
mov
cmp
pop
inc
jb
pop
adc
sbb
sbb
and
or
sbb
test
ljmp
pop
pushf
xchg
jne
mov
and
mov
mov
xchg
add
gs
jmp
pop
out
jmp
ret
add
arpl
mov
xor
jne
leave
stc
push
mov
fs
icebp
stos
jecxz
jno
inc
mov
bound
lods
xchg
push
sarl
push
stc
inc
cmp
inc
add
sbb
push
lahf
mov
fcmovnu
push
jno
cmp
push
roll
aaa
push
in
jecxz
mov
add
in
testb
and
cmp
lcall
mov
dec
push
inc
push
fstps
push
pop
out
std
push
subb
inc
mov
xchg
jg
cld
mov
pop
and
mov
mov
adc
and
xchg
mov
adc
cmpsl
or
arpl
xor
cmp
shlb
fwait
movsb
les
test
jne
push
sub
pop
fsincos
jle
shrb
mov
sete
cmc
div
imull
cwtl
dec
or
or
ljmp
daa
jecxz
das
mov
ss
movsb
or
test
mov
cmpsl
iret
ret
mov
jno
pop
mov
ret
fistl
mov
test
cs
lea
in
xor
or
and
inc
jno
pop
test
sbb
inc
shrb
outsl
adc
scas
push
mov
in
clc
pop
scas
lods
cmp
xor
shll
adc
lahf
push
mov
mov
sbb
adc
test
xorl
push
ds
add
in
dec
arpl
stos
shlb
mov
mov
or
mov
pop
int3
sub
xor
cmp
jbe
fstps
xchg
cmp
jae
inc
outsb
cltd
call
jg
cmp
sbb
fldl
in
jge
repnz
pop
pop
jb
mov
fs
fcmovne
mov
sub
mov
and
push
jae
jp
inc
enter
pop
lea
jo
stos
ja
inc
add
ret
cmp
jns
cmp
push
mov
aam
or
stc
fstpl
ds
test
pop
and
xor
inc
jg
add
cli
js
and
dec
inc
sbb
fisttpll
dec
mov
mov
shrb
movsb
lea
cmpsl
sarb
faddl
adc
les
popa
sbb
movsb
lods
into
push
imul
test
imul
sub
jmp
push
scas
sub
ljmp
xchg
fwait
mov
rcl
movsb
dec
imul
pop
sbb
int
sbb
cld
inc
lods
jne
aam
pop
push
stos
add
pushf
mov
cmp
inc
push
aas
fimull
cli
mov
push
push
mov
sbb
in
xor
test
std
inc
pop
jge
mov
int3
rcrl
movsb
aaa
testl
and
xchg
shll
leave
aad
jmp
loope
mov
push
cs
out
mov
jbe
daa
cmp
mov
clc
ds
mov
daa
xchg
or
dec
jns
push
test
or
lret
inc
sub
cmp
test
lret
add
outsb
pop
dec
push
daa
cwtl
sub
jp,pt
icebp
pop
and
jmp
xchg
fidivrl
movsb
push
push
adc
in
out
into
adc
or
mov
js
dec
push
sub
fst
repnz
call
mov
mov
pop
ret
testl
pop
or
fdivrs
sub
cld
test
pop
pop
sub
out
ja
test
xchg
leave
ds
adc
lock
adc
inc
or
lods
inc
test
mov
mov
icebp
les
popf
sub
sub
inc
inc
pop
adc
movsl
stc
jg
and
std
in
call
imul
sbbl
dec
inc
imul
mov
xor
dec
add
cmp
pop
jns
sbb
popa
mov
adc
lods
in
cmp
mov
nop
sahf
or
hlt
mov
cmp
jae
mov
lcall
mov
cmp
in
jecxz
fcmovnu
pop
popa
push
push
jae
rcrl
sbb
sbb
adc
dec
pop
mov
sbb
js
mov
test
cli
jb
popf
sub
mov
adc
adc
push
dec
fcoml
rcrl
jne
mov
adc
imulb
and
daa
adc
fwait
fs
cmova
xchg
xchg
mov
jb
ds
cmpsl
cmpsl
pop
fnstenv
push
fsubl
jle
mov
js
jns
pop
push
mov
xor
jmp
mov
and
popa
popa
adc
mov
add
filds
dec
ss
push
shrl
nop
lods
jb
cmp
cmp
or
mov
sbb
cwtl
out
mov
push
ljmp
out
adc
inc
popa
lds
push
ljmp
jge
rol
sub
push
imul
lea
xlat
or
pop
js
arpl
arpl
out
jne
mov
div
iret
scas
mov
fnsave
imul
add
pop
sub
sbb
pushf
xor
aad
cmc
loop
and
cltd
and
push
mov
cmpb
les
fistpl
jmp
pop
sbb
jl
insb
lret
test
pop
test
sbb
mov
push
or
adcb
ss
ja
fiadds
xor
movsl
cmpsl
adc
outsb
mov
fnstsw
ficompl
pop
insl
ror
out
xor
cmp
inc
jmp
stos
test
add
jne
sti
repnz
mov
push
jo
mov
and
imul
fisubl
add
negb
shll
sub
rolb
sub
xor
adc
cmp
xchg
shll
in
dec
adc
loope
aas
sahf
cli
pop
push
daa
test
xchg
shll
dec
and
in
in
aas
cli
mov
mov
lahf
rcrl
mov
ffree
add
sahf
mov
sbb
sbb
jae
sub
cmpsl
fwait
jo
jbe
cmp
js
and
cmp
jo
sbb
sub
dec
mov
in
int3
mov
popa
out
mov
mov
xor
xchg
stos
lods
pop
pop
loopne
xlat
cs
insb
dec
mov
xchg
popa
test
xor
push
loop
cmp
inc
es
lea
fs
jle
cld
dec
and
inc
and
mov
cmp
out
push
lcall
pop
fidivs
xor
mov
call
mov
mov
sbb
rcrb
pop
mov
jns
adc
inc
repnz
sbb
dec
fbld
cld
cld
repz
orb
xchg
push
in
lret
jmp
add
jno
shl
outsb
ljmp
adc
cmp
dec
into
movsl
push
ficompl
cmpsb
lock
cmp
jecxz
cmpsb
daa
insb
daa
ja
imul
imul
mov
xchg
cmpb
add
dec
push
rol
cmpsl
mov
adc
aas
rolb
pop
adc
xchg
js
stos
mov
lret
popa
xchg
xor
sbb
enter
ret
lret
fst
jge
pushf
cmp
push
lock
sbb
dec
push
xchg
aad
aam
sahf
xor
fnstsw
ja
aaa
mov
dec
adc
outsl
ss
loop
push
xor
loope
or
xchg
into
into
or
jmp
mov
sub
jno
cld
sbb
pop
dec
xor
andl
jbe
mov
xchg
cmpsb
mov
mov
xor
imul
in
int
adcl
ss
test
emms
leave
scas
sub
xchg
fistpl
mov
outsb
add
mov
insb
xlat
push
adc
in
mov
xor
dec
cmpb
jno
subb
dec
enter
fnstcw
mov
iret
inc
sbbl
in
stc
rcr
adc
jne
mov
test
jmp
aad
and
ret
sbb
and
lcall
jmp
repnz
xchg
jg
push
pop
sub
push
sti
xchg
xlat
inc
pop
mov
jmp
data16
push
inc
shll
pop
xchg
jo
adc
das
lahf
sahf
stos
sub
mov
loop
mov
aas
test
jecxz
imul
fistps
fadds
int
jmp
daa
inc
add
adc
mov
and
mov
ds
adc
xchg
sti
push
jp
sbb
lcall
dec
xchg
xorl
sti
es
xchg
xchg
daa
test
into
cli
xor
test
add
data16
test
xchg
cmp
push
int3
movsb
push
inc
rcll
sbb
das
and
add
into
mul
js
sbb
in
outsl
sqrtps
mov
or
mov
xchg
stc
cmp
incl
cmp
add
sub
test
inc
shl
arpl
sbb
inc
std
inc
cmp
mov
or
std
mov
fldt
subl
imul
pushf
iret
adc
push
out
fisubrs
push
add
into
aad
pop
xor
dec
or
xor
xor
mov
inc
push
jl
out
lahf
lds
mov
fmul
or
adc
insl
lds
dec
sahf
push
pop
push
mov
pop
push
outsb
mov
adc
outsl
inc
scas
idivl
lods
in
sar
aaa
das
push
mov
push
aad
add
sarb
insl
testb
addr16
leave
jg
fwait
outsl
sbb
pushf
mov
dec
cmp
cmp
daa
adc
sbb
pushf
mov
icebp
or
jp
daa
aas
jp
jmp
insb
pushf
cmp
lret
mov
ljmp
sarl
pusha
sub
lds
xchg
loope
call
dec
test
cmp
adc
stc
dec
mov
xor
lock
sub
cmpsl
imul
shl
jmp
mov
frstor
cmpsb
jmp
mov
add
mov
testl
decl
xor
add
and
cli
fisubrs
sub
inc
add
cli
inc
dec
aad
cmp
pop
imul
cwtl
pop
ret
push
add
inc
out
rep
mov
jmp
shrl
adc
daa
xchg
aaa
xchg
sub
sub
shll
mov
ja
xor
les
add
jbe
lcall
pop
adc
sub
sbb
adc
outsb
and
nop
mov
call
xchg
sub
out
jp
ficoms
xlat
inc
cmpsl
lock
mov
movsl
iret
sti
pushf
stc
cli
sbb
fsubrs
pop
sbb
or
xchg
in
ret
or
clc
dec
test
sbb
lret
jmp
xchg
repnz
xchg
dec
mov
lods
outsb
push
icebp
cld
ds
das
jne
repz
cmp
stos
push
add
mov
stc
push
arpl
out
push
popf
dec
sbb
push
cmpsl
dec
mov
imul
jae
mov
stc
test
jno
xchg
pushf
mov
and
addr16
mov
es
ror
sbb
pop
scas
mov
sbb
cmp
pop
movsb
xchg
hlt
or
dec
xchg
test
xor
lods
imul
subl
scas
rclb
insb
jno
adc
faddl
jge
cmpsl
jns
pop
cmp
and
loope
and
push
shll
pushl
aam
aad
call
pusha
pop
push
add
sbb
pushf
out
cs
loope
jns
xchg
inc
aas
jne
lcall
lahf
xchg
in
les
xor
pop
fmul
pop
mov
push
xlat
mov
pop
add
arpl
sbb
adc
or
jnp
cmpsb
mov
adc
out
mov
call
dec
ljmp
mov
mov
cld
inc
pop
clc
xor
insl
cmp
loop
scas
cmpl
mov
not
call
in
aad
mov
shr
leave
jl
cmp
in
subl
in
xor
js
push
lods
int
out
pop
xchg
loope
cmpsb
lahf
push
fldl
cmp
leave
mov
mov
std
and
pop
gs
pusha
sbb
sti
sbb
or
loop
or
repnz
call
je
das
xchg
repnz
in
cli
cmpl
std
cmp
shr
adc
push
std
or
sti
pop
adcb
cltd
mov
inc
pop
mov
sub
or
nop
add
xchg
arpl
mov
pop
cli
subl
xchg
outsl
mov
or
adc
cltd
xchg
test
int3
in
sbbb
cld
sbb
inc
jae
push
jecxz
pop
or
push
stos
stc
or
and
cld
pop
xlat
mov
repz
and
hlt
mov
insl
pop
mov
sbb
fstpl
push
sub
pushf
pop
inc
mov
jmp
pop
stc
mov
fs
fdivrl
xchg
data16
lea
popf
sub
xor
lods
shll
or
rclb
xor
mov
mov
imul
aam
daa
pop
and
sbb
int3
cs
lods
push
dec
rcrl
lds
adc
fisttpll
jg
push
mov
xchg
inc
popw
subb
add
xor
insl
jg
cmp
or
mov
cmp
flds
cmc
push
mov
in
xchg
lods
xchg
push
scas
sub
stos
xchg
xor
push
xchg
add
push
add
sbb
out
pop
ds
mov
mov
mov
fwait
xor
fcomip
cs
dec
cmpsb
in
or
or
mov
inc
es
jbe
inc
pop
fstl
sahf
out
mov
push
les
adc
mov
push
push
in
lahf
sbb
icebp
inc
lret
les
jbe
cmp
xchg
sub
gs
nop
mov
inc
and
shrb
push
sub
sub
sbb
arpl
hlt
insb
or
and
repnz
addb
mov
outsl
es
les
mov
sbb
fnstsw
pop
and
addr16
lcall
xchg
mov
xor
rolb
xor
pmulhuw
mov
or
pop
les
jnp
sub
insb
xor
shlb
add
aad
mov
jnp
movsb
push
mull
inc
mov
int3
or
aad
data16
pushf
iret
nop
stc
test
add
test
fcmovnb
sbb
scas
jecxz
jge
lea
and
aam
and
xor
lods
mov
imul
fisttpl
pop
div
add
xchg
xchg
testb
inc
jle
sbb
stc
or
loopne
pop
std
fcoml
popf
std
xor
xor
mov
push
mov
icebp
pop
fiaddl
test
leave
leave
aaa
adc
adc
xor
fildll
push
leave
cmp
lds
in
push
dec
fs
dec
repnz
mov
fdivs
mov
lea
dec
lea
mov
sbb
inc
popa
push
in
mov
cmp
std
leave
mov
daa
or
xchg
xor
xor
xor
js
xchg
and
je
test
dec
add
or
xchg
dec
push
ss
pop
popf
mov
aas
or
push
jo
xchg
scas
and
adc
imul
xchg
fildl
mov
push
andl
push
push
jl
fstpl
imul
fbstp
ffree
xchg
mov
js
adc
dec
push
out
sub
shlb
outsb
lea
cmp
cltd
dec
pop
inc
or
jmp
xchg
hlt
mov
cmpsb
xchg
test
cmc
mov
aaa
add
add
out
repnz
fidivrl
push
add
pop
add
mov
inc
shlb
lret
test
repnz
fidivs
ljmp
jo
lock
fisubl
icebp
repnz
cmp
pop
jnp
leave
jmp
xchg
jmp
into
dec
jnp
or
js
pop
div
sbb
out
xchg
fdivp
add
pop
inc
popf
fdivl
sahf
das
out
addps
pushf
or
orb
add
leave
lcall
hlt
pushl
in
and
loop
mov
arpl
add
mov
mov
subb
push
movsb
int
mov
jnp
push
hlt
imul
inc
push
aas
push
inc
les
ud1
xor
and
adc
and
std
and
and
mov
cli
jmp
lret
pushf
sub
out
stos
daa
push
mov
xor
jae
xor
jge
test
clc
cmp
sahf
int
adc
xor
ror
mov
es
test
ret
mov
pop
scas
sub
dec
lock
cmp
out
or
cmp
lock
std
and
jbe
hlt
sahf
js
sub
fwait
mov
lock
cmpsb
jo
mov
fidivrs
je
aaa
push
lds
stos
repz
out
sub
fisttpl
inc
test
mov
xchg
adc
lea
jne
ret
in
lret
in
mov
in
imul
mov
mov
dec
add
and
nop
mov
or
lahf
jb
inc
cmp
xlat
int3
dec
gs
mov
into
ds
aam
cld
fidivrl
movsb
push
lea
daa
mov
sub
cwtl
scas
stos
fucomip
push
icebp
test
xor
cmp
mov
add
xchg
stos
mov
jl
push
pop
fsubrl
mov
movsl
addr16
mov
cmpsl
dec
dec
jno
insl
push
clc
stos
mov
push
inc
pop
push
mov
lea
mov
or
cmp
test
pop
push
sbb
into
cltd
lret
fstps
push
pop
in
jb
lock
jle
pop
adc
xchg
cld
mov
cmc
mov
fistpll
sbb
scas
cltd
shrl
inc
scas
test
inc
push
pop
or
dec
dec
dec
cld
lret
je
int3
or
cmpsl
inc
shl
jnp
aam
fcmovbe
inc
fidivrs
shlb
inc
aaa
xchg
push
cwtl
movsb
jge
sarl
adc
daa
nop
sub
cmp
mov
or
sbb
js
into
cltd
mov
out
push
sti
sbb
stos
movsb
gs
incb
lods
sbb
test
fisttpll
cmp
xchg
pop
loop
lock
clc
xchg
lea
fwait
les
jbe
inc
push
addr16
push
pop
mov
mov
sbb
dec
or
jg
out
adc
imul
mov
out
dec
lcall
xlat
sahf
mov
add
pop
mov
pop
jb
mov
out
ljmp
lret
mov
pop
out
cvtdq2ps
pop
test
hlt
pusha
hlt
fwait
mov
adc
cmpsb
jae
nop
add
insb
jb
aas
test
ja
pop
cmp
stos
in
cmp
sbb
jns
stos
mov
test
dec
cmpsl
fwait
lds
sbb
sub
dec
xchg
dec
mov
loope
test
mov
scas
mov
push
dec
adc
or
mov
cs
outsb
aam
or
push
jl
mov
test
cli
cmp
ljmp
adc
dec
movsb
fsubl
mov
dec
cld
jmp
stos
xchg
ss
jp
pushf
in
mov
sbb
stc
or
mov
xchg
repnz
or
test
nop
inc
sbb
mov
add
jmp
outsl
call
push
mov
pop
add
or
mov
and
adc
and
inc
test
dec
mov
ret
mov
inc
fsubl
jg
insl
add
mov
fsubr
pop
mov
es
imul
dec
and
pop
mov
std
xor
mov
je
testl
les
mov
dec
lods
fistpll
call
loope
fldt
xchg
or
mov
fistl
sub
sub
ljmp
lahf
negb
aaa
dec
cmp
or
mov
or
scas
adc
xlat
xlat
clc
jg
pop
mov
dec
jbe
push
sbb
pop
out
shll
mov
cs
mov
std
int3
out
mov
jge
push
lods
dec
xor
divl
inc
subl
pop
jnp
adc
popf
jnp
gs
sub
fildll
test
push
add
xlat
divb
sbb
fucomi
cli
jle
cmp
in
and
imul
pushf
mov
dec
arpl
pop
cs
add
mulb
out
jl
aad
negl
cmpsb
pop
adc
mov
jns
arpl
or
pop
test
out
out
xchg
add
cmpsb
cli
fsubp
rcrb
bnd
fistpl
mov
adc
xchg
out
adc
into
bound
jecxz
lds
cmovns
inc
not
cld
insl
inc
mov
ljmp
mov
sarl
sub
jl
cld
add
jnp
bound
clc
insl
push
daa
ds
dec
pushf
repz
cli
xchg
sub
addr16
je
dec
mov
inc
cmpsl
clc
out
adc
cmc
icebp
or
sub
push
dec
mov
pusha
icebp
lds
add
pop
dec
jg
stos
fwait
mov
fldl
ja
mov
push
xchg
or
mov
sub
enter
jle
jnp
mov
inc
mov
lcall
pop
xor
pop
stos
jecxz
push
or
mov
xorl
cmpsl
pop
add
mov
jge
out
and
sub
inc
pusha
mov
dec
inc
push
mov
sbb
cmp
fistpll
imul
jg
ret
xchg
cmp
jge
out
xor
xchg
mov
mov
int3
lods
test
dec
scas
cmpsb
mov
xchg
es
mov
fbld
ss
mov
mov
shll
mov
nop
test
inc
in
sub
mov
push
pushf
or
in
in
jge
cltd
dec
mov
cmp
fisttpll
leave
test
mov
dec
adc
scas
gs
pop
mov
and
push
in
mov
xor
lea
outsb
dec
cmp
xchg
add
xorps
lret
mov
inc
in
mov
xlat
mov
cld
in
xchg
push
or
sub
test
xor
or
or
jl
loopne
mov
dec
xchg
mov
adc
pop
xor
cmp
pop
push
xchg
cli
in
mulb
insb
idivl
inc
mov
insb
cs
jae
jecxz
cmc
add
pop
push
mov
cmp
pushf
mov
in
sahf
lds
shlb
mov
ja
mov
repnz
pushf
xchg
xchg
or
and
insl
out
cmp
sbb
xor
sub
xor
or
out
ja
inc
adc
out
cmc
test
loope
mov
pop
sbb
fnstenv
gs
inc
stos
ret
mov
vpshuflw
movb
cmpsb
jmp
mov
push
int
cmp
cmp
sbb
pop
pop
pop
add
inc
je
arpl
movsl
xor
mov
scas
hlt
or
and
fdivr
xchg
sbb
jnp
jo
jo
mov
jae
imul
push
cmpb
fcoml
mov
das
push
and
call
notl
inc
or
mov
test
in
or
out
aaa
cli
and
fldl
leave
mov
adc
data16
push
push
test
push
ficomps
scas
jmp
xchg
sbb
popf
inc
stc
pushf
mov
push
mov
xchg
push
dec
lret
and
mov
and
mov
cld
or
stc
fdivr
pushf
cwtl
test
add
or
jae
xchg
mov
mov
dec
test
sbb
push
add
push
mov
xor
jne
fs
daa
idivb
mov
test
mov
sbb
out
bound
push
add
jmp
movsl
pop
mov
clc
inc
jns
arpl
and
test
flds
clc
jnp
inc
mov
or
insb
lods
cmp
int3
sub
jae
inc
ficoms
lds
in
sub
xchg
fwait
cli
dec
bound
inc
push
inc
clc
or
out
mov
jle
jp
add
xchg
add
clc
inc
add
loope
xchg
int3
shlb
hlt
push
sti
stc
push
clc
jne
loopne
mov
mov
movsl
int3
rclb
lcall
adc
call
ret
adc
cmpsb
mov
sarl
and
pushf
movsw
rolb
push
and
pop
jp
mov
test
pop
lods
aas
out
scas
pop
int3
arpl
loopne
int3
add
xor
and
outsl
inc
mov
sub
mov
adc
push
adc
jmp
push
sti
pop
cmp
jmp
int
ret
add
inc
mov
or
xchg
jno
xor
mov
rorb
mov
add
lret
iret
inc
cmc
xchg
test
pop
and
out
mov
dec
push
and
xor
fadd
add
push
sbb
xlat
negl
faddp
add
and
and
outsb
xor
cmp
outsb
fists
test
and
insb
mov
sub
gs
repz
pop
push
dec
outsb
lcall
roll
out
mov
bound
lds
add
mov
pop
inc
xchg
ljmp
lods
dec
std
jo
xchg
push
notl
dec
mov
out
dec
mov
cs
inc
push
data16
and
mov
push
fxch
xlat
cli
clc
imul
pop
sub
inc
push
icebp
and
mov
arpl
mov
xchg
aad
mov
mov
ret
ja
cld
cli
dec
mov
sub
xchg
int
mov
mov
es
pop
adc
popa
add
xchg
cmp
popa
push
cmpsl
sub
imul
aaa
push
or
mov
xlat
mov
xor
int3
imul
mov
in
add
imul
repz
shrl
jo
leave
add
push
adc
or
dec
xchg
lock
fs
jns
xor
jnp
jns
dec
cmc
mov
xchg
xlat
add
fisttpl
mov
jns
xchg
fdivrs
or
pop
call
sahf
sbb
sbb
and
mov
inc
and
xchg
xlat
arpl
pop
mov
dec
pop
lcall
push
lods
rorb
and
cmp
lahf
mov
aaa
les
inc
jnp
out
lods
movsl
xchg
and
mov
lahf
fsubrp
adc
pop
into
outsl
lret
ret
pop
cmp
jnp
xchg
dec
in
stos
mov
mov
lods
les
mov
popl
push
mov
fcmovu
mov
and
push
aas
lds
cld
jb
adc
and
adc
fildll
outsb
lcall
imul
stc
scas
adc
pusha
in
test
orl
into
jg
lret
pop
sbb
test
and
adc
lret
ljmp
leave
push
lds
and
out
je
dec
push
cmp
shr
add
lods
std
iret
gs
les
add
inc
xor
mov
add
and
cltd
aad
dec
shll
in
fisubrl
sahf
jle
cmp
cs
gs
lock
fs
repz
xchg
sbb
shll
push
imul
call
xchg
xchg
out
imul
push
jb
dec
daa
cli
xor
cld
and
js
and
insl
sbb
pusha
hlt
pop
jecxz
pop
mov
mov
cmp
test
mov
mov
push
pop
test
fcompl
push
cmpsl
jae
repnz
push
pop
lods
jmp
ffree
cmp
mov
pop
cmp
cmpb
inc
mov
sub
and
mov
pop
mov
pop
scas
out
and
mov
push
les
cmp
popa
jbe
mov
pop
or
mov
lea
mov
movsl
mov
pusha
mov
sbb
cmp
xchg
sahf
push
and
imul
pop
and
cmp
pop
or
cltd
adc
pop
std
mov
loopne
daa
lods
pop
sbb
dec
call
sbb
movl
movsl
pop
call
push
inc
sub
lods
outsl
dec
cmp
adcl
jbe
mov
daa
out
or
aas
sbbl
sbb
pop
and
repnz
cltd
mov
dec
fs
insl
int3
xor
repnz
dec
sbb
sarb
bound
lret
in
cmp
imul
dec
or
pushf
pop
mov
jno
or
jb
test
repnz
push
scas
push
out
adc
and
std
lock
sbb
ds
stos
es
cmpsl
xor
pop
add
pop
dec
std
int
xor
icebp
mov
daa
mov
jl
mov
movsb
out
xor
rolb
enter
jbe
dec
mov
imul
dec
roll
sub
std
cmc
addr16
mov
mov
inc
imulb
icebp
in
xchg
orb
out
sbb
dec
jg
ds
push
mov
popa
push
lcall
dec
repnz
mov
enter
mov
xchg
mov
std
push
xor
in
adc
inc
cmp
mov
lcall
fcomps
push
loopne
and
outsb
sbb
je
cmc
or
push
repz
push
add
mov
adc
adc
inc
mov
add
out
out
mov
mov
rorb
jne
cmpl
xor
mov
cmpsb
xchg
stos
or
imul
cmp
jns
std
pop
mov
jns
add
mov
sti
fcomi
aaa
jp
jbe
test
jge
out
jecxz
sbb
shrl
sar
pop
int
cmp
pop
xchg
push
lahf
jl
inc
inc
jne
fxam
jb
push
xchg
xor
adc
xor
fcoml
sub
push
mov
hlt
jecxz
shrl
test
push
iret
mov
cmc
add
nop
adc
fldl
dec
icebp
fnstcw
cmp
xchg
lods
repz
sbb
hlt
sub
jp
sub
fstpt
mov
mov
fs
adc
lods
jns
data16
addb
pop
mov
or
test
test
imul
fcomip
cmc
pop
mov
push
mov
daa
dec
test
and
out
push
lcall
mov
mov
push
ret
mov
sub
xor
xchg
cmpsl
sahf
mov
and
notb
out
or
aas
jae
cmpsl
pop
lds
and
out
imul
add
mov
aad
xlat
pop
xor
adc
xchg
mov
push
xlat
lods
fidivs
pop
xor
arpl
popf
or
dec
push
mov
or
dec
mov
cmp
mov
lret
insl
adc
outsb
adc
push
jl
mov
and
icebp
sbb
es
pop
fistl
xchg
call
movsb
stos
jge
stos
shrb
mov
imul
aad
jmp
jno
clc
jmp
popa
outsb
out
lods
adc
or
loopne
dec
mov
sahf
addr16
or
cmpb
dec
stos
cmp
xchg
popf
cmp
inc
jge
rcl
mov
cmp
mov
aas
cmpb
jp
mov
inc
push
jo
jmp
cwtl
dec
xchg
loopne
leave
push
les
dec
xor
bnd
shll
push
mov
ds
rcl
ljmp
bound
push
data16
mov
jne
mov
sbbl
ljmp
mov
std
cwtl
loop
xchg
insb
xchg
inc
hlt
cmpsb
push
xor
ljmp
out
push
push
sub
pop
and
xchg
cmpsb
imul
push
xor
movl
mov
dec
pop
shrb
js
lret
add
push
adc
adc
mov
xorb
mov
add
outsb
mov
mov
xchg
inc
fcomps
sarl
fwait
mov
dec
loop
cltd
insl
pop
mov
out
ja
repz
pusha
cmpsb
or
jecxz,pt
inc
xor
test
sbb
inc
aad
adc
addr16
mov
scas
sbb
xchg
div
dec
push
adc
repnz
dec
gs
faddl
dec
les
jge
call
cs
lret
repz
cmp
pop
sbb
mov
lock
push
xchg
fdivs
out
xor
pop
cmpsl
hlt
add
dec
test
std
int
popa
lret
pop
pop
push
xchg
fdivs
lret
sbb
gs
xor
ret
movups
add
pop
sti
mov
xchg
xchg
jno
movsl
in
adc
in
mov
cli
xchg
push
adc
movsl
frstor
pop
outsb
div
fs
push
out
push
cmpsl
notl
cmp
xchg
addl
sbb
shll
cmp
mov
test
sub
imul
mov
and
xchg
sbb
sub
loopne
cmp
mov
jle
pop
stos
into
and
pop
int
jmp
push
lcall
mov
mov
outsl
sub
xchg
mov
into
shlb
stc
dec
call
jb
push
xchg
jl
jo
inc
mov
jg
inc
push
xchg
cli
push
shr
dec
mov
mov
jl
pop
repnz
fwait
aad
jnp
jbe
bt
mov
cmpsb
ret
dec
or
jns
or
inc
btr
xchg
jmp
jp
shlb
test
add
call
mov
cmpsl
addl
dec
in
je
lock
push
sbb
jb
rcl
sahf
mov
in
into
jbe
aad
jecxz
adc
jb
lret
xor
mov
shl
add
sub
adc
mov
pusha
aam
aad
ss
out
push
push
clc
sub
shlb
mov
aam
dec
inc
test
outsb
fidivrs
dec
add
aaa
adc
adc
jle
cmp
jle
test
daa
adc
jle
mov
popf
mov
clc
dec
outsl
jge
loope
fldl
daa
sarb
test
xor
mov
xchg
js
lds
inc
clc
xchg
int3
lahf
enter
adc
sbb
out
xchg
cmp
std
cmp
or
mov
in
setbe
adc
in
xchg
lods
xchg
stos
jns
movsb
ss
scas
cli
fisttps
sbb
adc
jp
movsl
mov
cwtl
or
sub
push
lods
push
and
mov
mov
popa
jb
xor
sbbb
clc
std
mov
adc
int
xor
orb
test
cmp
adc
dec
ss
sbb
jle
into
mov
out
jae
out
cwtl
idiv
test
lods
test
out
repz
add
imul
push
test
cmpsl
repz
xor
sbbb
in
cmp
lret
and
xor
sbb
or
les
xor
fdivrl
pop
push
dec
repz
and
inc
les
jmp
lret
pop
test
mov
or
add
loop
ljmp
jnp
stos
addl
rcrb
sahf
imul
xor
pushf
pop
gs
lahf
cli
jmp
cld
mov
out
xchg
inc
push
push
stos
and
mov
sbb
ds
jb
movb
jge
pushf
sub
repnz
adc
clc
pop
outsb
insl
test
push
test
inc
outsb
add
bswap
xor
andl
xchg
test
call
push
push
loop
jns
xor
mov
popa
ljmp
out
dec
adc
stc
cmp
mov
inc
dec
xorl
das
decb
lds
roll
push
scas
fwait
push
sbbl
xchg
jg
enter
cld
push
pop
pop
push
jecxz
jmp
ss
pop
xchg
jle
push
fbstp
cmpb
jo
xchg
cmpsl
add
movsl
pop
pushf
bound
jns
fbstp
rclb
dec
lret
imul
ljmp
jmp
mov
cmpl
jo
mov
xor
leave
cld
popf
es
cmp
stos
push
dec
sbb
cltd
rep
or
fistpll
aad
cmc
scas
cmp
mov
enter
clc
push
sub
dec
stos
adc
cmp
push
daa
xlat
jecxz
in
mov
sub
insl
sbb
or
cli
cmp
mov
xchg
pop
mov
dec
inc
jae
dec
ret
adc
je
roll
cmp
ret
mov
flds
stos
jle
xor
int
das
roll
mov
pop
add
jecxz
cmpsb
aaa
cld
and
cs
mov
sub
iret
xchg
lret
inc
clc
xchg
test
or
and
ficompl
fisttps
mov
sahf
aaa
mov
fisttps
mov
out
adc
mov
dec
xor
outsl
sub
filds
jne
and
inc
push
in
fstpl
into
andb
mov
lret
notl
xchg
jo
sub
mov
add
pop
cmp
mov
out
sarl
in
outsb
mov
mov
jmp
xchg
pop
rcrb
decl
or
mov
pusha
lret
fwait
bound
stos
add
stos
add
xorb
sahf
int3
nop
fidivl
push
mov
negb
mov
leave
jns
or
sarl
cltd
sbb
xchg
jp
add
loope
aaa
dec
lock
ret
rorb
or
pop
movsbl
stos
mov
aaa
imul
lret
add
xor
addl
push
fs
lock
into
mov
and
cmp
push
xchg
loope
shll
or
test
repnz
inc
scas
or
imul
lds
or
pop
ss
or
cmpsb
xor
or
sbb
sbb
cmp
dec
outsb
add
es
jno
int3
or
or
sub
and
jl
xchg
inc
dec
push
and
out
cmp
lret
lcall
jnp
nop
ror
popf
fucomi
lds
jp
mov
pop
xchg
pusha
jle
dec
xchg
in
push
mov
lret
in
jmp
mov
shll
pop
sub
and
mov
mov
out
out
aaa
les
mov
jo
rclb
adc
fsubrl
out
pop
out
sbb
jp
xchg
cmpsb
or
pop
pop
push
xlat
das
popa
xlat
sbb
leave
scas
jle
movsb
inc
pop
outsb
jge
out
xlat
arpl
arpl
pop
sub
jns
mov
les
add
ficoml
add
shlb
cmp
jns
js
or
jnp
adc
jbe
sbb
rcrl
xor
shl
xor
mov
imul
xor
loopne
dec
cmpsl
outsb
xchg
cmc
jo
popf
or
xorb
loopne
add
nop
fs
xor
outsb
or
fisubl
fadds
jl
sub
cmp
hlt
icebp
fnstsw
lock
ud1
int3
jae
es
add
stos
scas
loop
aaa
out
rcl
movb
push
inc
in
jle
cmpsl
rorb
dec
addr16
jp
lret
cmp
imul
xchg
das
scas
jne
fwait
rorl
fs
dec
fistpll
scas
mov
js
mov
push
push
and
cmp
fwait
aaa
lret
pop
fucom
dec
adc
xchg
pop
inc
mov
sbb
arpl
and
sbb
jle
leave
jp
pusha
jno
xchg
xchg
sbb
cmp
and
jecxz
adcl
jg
mov
adc
das
lcall
pop
rclb
fcomps
jle
mov
mov
test
enter
stos
pop
pop
xchg
lcall
andl
mov
inc
sub
dec
add
ljmp
cli
inc
cwtl
jecxz
popa
or
mov
mov
push
lret
movsl
imul
inc
push
mov
and
and
pushf
or
and
mov
scas
flds
cwtl
xor
stc
dec
add
inc
ljmp
mov
xor
std
aaa
int3
mov
outsb
movsl
fbld
cs
mov
add
adc
add
mov
dec
mov
fwait
shll
in
sub
mov
dec
aaa
inc
ds
xor
mov
inc
sti
mov
imul
mov
test
std
mov
shrl
cmpb
push
xor
inc
or
xorl
add
adc
inc
cmp
inc
in
xor
lock
sub
fidivs
push
jl
push
inc
mov
jb
push
fldt
sbb
test
sbbb
repz
mov
das
jno
jno
stc
xor
xor
or
pop
scas
ljmp
les
int
push
ss
cli
dec
sub
cmpsl
daa
insb
mov
pop
cmp
push
pop
repz
xchg
ja
jle
mov
pop
mov
repz
or
fnstenv
mov
insl
cmp
lret
cmp
test
cwtl
mov
push
lods
sbb
mov
hlt
xchg
test
push
fldl
int3
std
ljmp
mov
lret
sub
sbb
add
mov
mov
push
and
dec
outsb
pop
sub
pop
js
or
mov
pop
add
mov
lahf
iret
sbb
add
dec
push
outsb
jb
push
call
clc
je
xchg
ljmp
data16
lcall
out
pushf
cmc
fucom
cs
faddp
popf
loopne
jo
pop
imul
pop
push
jnp
mov
push
pop
adc
pop
jl
dec
pop
cmp
xchg
push
sub
adc
sub
jl
jl
enter
jns
rorl
mov
sub
pushf
loop
movsb
and
ficomps
push
lret
xor
and
in
cmp
inc
adc
jl
cli
push
push
out
jbe
or
loope
cltd
pop
shl
repz
xchg
and
adc
mov
sbb
stc
cmp
pop
popa
cmp
push
inc
sbb
inc
jl
std
imul
mov
sub
pop
jecxz
dec
adcb
add
push
out
mov
jne
sti
pop
addr16
pop
xchg
mov
int3
loopne
cmc
pusha
jns
mov
mov
xchg
dec
sub
out
rclb
mov
xchg
pop
pop
lahf
jns
testb
push
mov
ja
cmpsl
sti
iret
out
in
mov
cmp
adcl
dec
pop
mov
dec
mov
xchg
sbb
dec
test
psubb
lods
xchg
xchg
adc
cmp
pop
xchg
sbb
jmp
movsl
mov
loop
sbb
sub
fdivl
pop
dec
sbb
mov
insl
and
or
adc
mov
pushf
mov
lahf
inc
push
sbb
inc
mov
push
in
mov
jno
popaw
mov
xor
inc
daa
ficoms
lock
and
mov
or
fld
jg
or
lcall
mov
xchg
movsl
pop
bound
insl
inc
fidivl
lods
lret
jg
cmpsb
inc
dec
hlt
fiadds
and
mov
arpl
jae
cmp
xchg
pop
js
sti
pop
add
cmp
pop
and
jmp
cld
jg
sub
cmp
pop
add
jl
add
pop
inc
sbb
xor
mov
xchg
cmpl
shlb
mov
test
imul
int3
sbb
pop
dec
int3
jg
fbld
and
dec
pusha
es
xchg
mov
and
dec
popa
das
leave
movl
adc
repnz
push
dec
lock
andl
mov
xor
sti
pushf
sub
lahf
lcall
test
cmp
mov
xor
add
jg
pop
inc
cmp
test
test
mov
and
int
outsl
into
add
sub
cwtl
in
mov
ss
hlt
mov
push
popl
pop
xor
lret
mov
dec
mov
xchg
and
lahf
psllq
ja
xchg
mov
mov
ljmp
dec
cs
jmp
popf
bound
cmp
fisttpll
mov
insl
ds
stos
pop
mov
pop
ljmp
pop
jle
mov
jle
cli
mov
inc
mov
jge
pop
push
xor
icebp
nop
fdivs
add
sub
aad
mov
mov
jle
mov
ret
lods
lds
sbb
cmp
sbb
scas
mov
loop
or
and
fwait
jbe
imul
dec
pop
jecxz
in
adc
mov
xor
pop
xor
roll
outsl
push
jno
pop
push
mov
dec
xor
cmp
or
rep
adc
xor
cltd
int3
ss
push
hlt
fisttps
rcrb
pop
cmpsl
jns
mov
inc
rcll
hlt
mov
loopne
outsl
inc
xlat
mov
repnz
aaa
movsl
std
push
imul
push
in
rorb
mov
adc
iret
jle
cmpsb
mov
scas
outsb
pop
sub
jb
mov
push
in
cmp
imul
adc
xchg
push
clc
test
dec
inc
mov
adc
cmpl
push
push
and
adc
adc
and
lahf
dec
sub
lcall
popa
push
inc
cmp
out
and
add
cltd
hlt
ss
xchg
int
imul
pop
pop
lcall
popf
xor
add
pusha
sahf
sar
mov
mov
xchg
mov
lods
iret
and
int3
mov
mov
pop
or
repnz
ljmp
pop
sbb
test
leave
insb
push
push
add
cmp
push
mov
out
adc
clc
cmp
sbb
push
aaa
pop
popa
pop
xchg
push
dec
out
sbb
cli
pop
cwtl
inc
cmpsb
cmp
and
stc
sub
test
lcall
std
sbb
mov
dec
std
push
pop
mov
dec
mov
add
fistps
rorl
push
pop
ss
jg
adc
adc
rclb
sbb
and
fistpll
sbb
mov
shr
call
fsubrl
into
xor
sbb
pop
gs
push
push
lods
inc
jbe
sahf
test
test
add
sub
fs
lahf
or
in
pop
adcb
jbe
shlb
mov
mov
jge
and
cli
push
sub
sub
imul
xor
js
fisttpl
mov
std
cmp
stos
stos
push
out
movsb
and
test
lret
add
ja
pusha
js
fstl
fistl
in
test
pop
push
leave
enter
idivl
aaa
adc
push
inc
or
sub
jmp
stos
push
push
and
out
inc
cltd
shll
stc
sub
dec
xor
add
inc
inc
jp
push
push
out
test
fnstenv
push
pusha
pop
mov
std
insl
jecxz
inc
pop
cltd
into
pop
pop
mov
push
xchg
sbb
dec
cmc
add
ret
xchg
les
pop
push
xlat
dec
addr16
mov
outsl
add
push
jp
das
cs
adc
pop
xchg
jae
mov
outsb
faddp
rcrb
dec
lea
mov
xchg
scas
out
mov
arpl
mov
or
aas
cli
inc
xor
xchg
pop
sub
or
mov
or
or
cmp
cmp
mov
nop
testl
cli
fsts
decl
shrl
sbb
sub
insb
test
jecxz
pop
rorb
or
sti
aam
mov
lea
add
ds
scas
scas
xor
loop
xor
add
cmp
clc
adc
aaa
repz
int
adc
mov
clc
imul
add
jl
push
dec
jmp
sahf
test
mov
mov
pop
test
imul
int
movsl
mov
xchg
addb
push
mov
add
out
lahf
sub
enter
dec
mov
andb
push
shlb
testb
mov
lds
in
adc
push
or
lods
repnz
out
sub
addl
mov
loopne
adc
ss
mov
sahf
imul
test
xchg
pop
lcall
lods
es
and
jno
and
adc
in
gs
push
mov
sbb
pop
xchg
push
add
mov
outsl
push
inc
fcomi
and
jp
rcrb
faddp
punpcklwd
loopne
les
stos
dec
dec
leave
pop
jge
inc
xchg
xchg
in
mov
aas
cmp
subb
stos
xchg
sub
push
sub
jecxz
pop
cmpsb
xchg
imul
push
fisttpll
or
jne
bound
mov
cli
sub
or
sbb
or
fs
fldt
xchg
je
ss
add
mov
mov
cmc
sbb
outsl
fdivrl
adcl
in
xchg
push
dec
push
divb
push
out
push
push
fimuls
sbb
mov
sub
test
xchg
pop
dec
cmp
cmp
into
inc
or
mov
cltd
sub
pusha
repz
sbb
cmp
inc
and
insl
aas
mov
movsb
xor
insb
jg
xchg
mov
aam
fwait
push
and
repnz
das
dec
in
pop
mov
push
clc
mov
stos
inc
mov
xchg
cli
mov
insb
imul
jno
and
inc
sahf
pop
mov
dec
add
xchg
frstor
mov
mov
insb
lea
jle
push
push
jmp
ficompl
xchg
add
call
add
mov
into
push
adc
lcall
roll
pop
dec
ljmp
add
leave
jmp
cmp
dec
mov
mov
xchg
mov
adc
add
push
jmp
xchg
mov
sub
mov
cs
xor
pop
and
xchg
outsb
jmp
insl
jg
jecxz
es
repnz
imul
push
repz
mov
jae
loop
dec
mov
in
sarb
cmpsb
jge
nop
jb
out
icebp
add
popf
dec
mov
das
push
neg
iret
or
push
out
and
push
or
sti
jle
or
dec
mov
out
sub
mov
dec
mov
ret
add
shll
xchg
dec
pop
sub
mov
cmp
and
inc
out
or
sbb
in
lock
jno
aaa
dec
ret
in
adc
push
cmp
inc
mov
add
ret
hlt
inc
movsb
dec
cmpsl
dec
push
pop
dec
enter
and
push
outsl
mov
repnz
pop
stos
pop
test
sbb
inc
bound
cmp
mov
mov
jb
mov
and
aam
lods
xchg
or
mov
jge
jb
xor
idivb
jmp
aas
cmp
and
mov
out
cmp
jne
shlb
inc
pop
movsl
xor
jecxz
in
pop
test
decb
scas
cmp
clc
push
icebp
lods
out
shll
addb
xor
fstl
mov
stos
inc
mov
ror
sub
or
pop
mov
jl
incb
sbb
mov
and
fnstsw
xor
ja
push
or
je
mov
sti
mov
push
or
nop
or
sbbb
enter
fdivl
cmpsb
xlat
ja
pop
xchg
mov
daa
xor
xor
imul
push
sar
add
ret
jnp
in
cmp
xor
and
out
sti
pop
add
mov
adc
fidivs
out
imul
push
add
movsb
imul
push
adc
push
hlt
call
in
lea
repnz
ret
rolb
and
mov
rclb
push
xchg
and
cmp
sub
xlat
xor
or
mov
shll
dec
xchg
fidivrs
mov
lcall
insl
addr16
cmp
sub
add
inc
adc
sub
dec
adcb
shlb
imul
sub
neg
jmp
jbe
jae
jle
or
pop
faddl
mov
addr16
inc
lret
jmp
ret
or
mov
dec
inc
push
jge
in
fsubs
mov
out
add
cmp
dec
xor
lock
out
stc
xorl
xorb
jb
dec
jbe
mov
dec
das
popa
push
ret
push
dec
push
call
cmp
and
arpl
add
jge
jge
rorl
arpl
push
lods
adc
rcl
push
out
aad
mov
adc
mov
mov
add
or
lods
xlat
jb
mov
arpl
ret
or
jns
and
daa
ljmp
xor
aas
icebp
stos
add
rcll
imul
imul
in
push
pop
test
dec
xchg
fistps
in
or
adc
jae
pop
inc
adc
daa
mov
push
repz
mov
mov
sub
orb
enter
sahf
repz
movsb
imul
lds
stos
out
jnp
decl
outsl
repnz
ret
xchg
push
push
clc
js
test
xor
dec
dec
mov
loop
loope
les
push
daa
inc
lret
scas
fneni(8087
sub
dec
sbb
cmc
bound
jp
shlb
sbbl
fnsave
xor
jbe
int3
in
dec
mov
xchg
mov
in
jmp
out
repz
mov
daa
arpl
xor
xchg
lea
dec
and
idivl
jo
ret
lahf
adc
jmp
dec
xor
pusha
push
inc
and
dec
cli
imul
mov
pop
jb
mov
out
test
insl
add
or
mov
cmc
imul
popa
leave
mov
negl
into
xchg
enter
cli
add
inc
xchg
fcomp
inc
loopne
mov
shrl
ss
pop
add
mov
insb
mov
adc
dec
or
into
mulb
jo
outsb
in
jno
xchg
pusha
mov
or
mov
or
pushl
mov
dec
dec
imul
cmp
pop
jecxz
outsb
jp
sbb
dec
sub
xchg
xchg
dec
cs
aam
mov
mov
sub
ret
movsl
fsubr
xor
and
fcmovnbe
add
outsb
cmp
ret
mov
lds
mull
out
daa
adc
cmpsb
cmp
cmp
out
mov
mov
pop
mov
pop
scas
je
mulb
popf
out
aam
fcoms
cmp
adc
cmpsl
popf
mov
jge
fsubl
outsb
cwtl
sbb
and
dec
pop
cmpsb
insl
fdivs
ss
movsl
xor
int3
pop
or
cmp
xchg
or
inc
icebp
mov
aaa
xchg
ja
movsl
roll
mov
jmp
sbb
mov
stos
ja
pop
in
roll
push
test
or
inc
push
and
lea
sbb
cmp
movsb
or
inc
xor
cmc
pop
mov
aam
rcrb
lods
pop
mov
dec
mov
out
dec
testl
shl
pop
out
sub
out
or
xchg
jmp
xor
popf
movsb
pop
adc
xchg
stc
mov
sub
and
cmpsb
mov
fldcw
sbb
jmp
add
sbb
mov
ror
jo
or
mov
lahf
outsb
loopne
imul
sub
pusha
clc
sbb
sub
movsl
jg,pt
arpl
cmp
cli
jl
cmpsl
pop
adc
pop
inc
neg
dec
cmp
push
or
repnz
add
xchg
adc
scas
test
aas
test
push
pop
mov
and
xor
mov
dec
rolb
bound
xchg
mov
icebp
cmp
fstpl
or
lret
sub
jne
jmp
movsl
inc
xchg
adc
inc
jmp
dec
lret
mov
jecxz
add
aam
fwait
sbbl
ss
jmp
mov
sbb
mov
iret
inc
jcxz
cli
incl
push
clc
pushl
xchg
cmpsb
xchg
cmpl
cmpxchg
jg
popa
dec
push
lcall
sub
dec
movsb
cltd
cwtl
out
insb
mov
call
adc
push
cli
lock
inc
xor
cmpb
sbb
popf
aaa
xor
daa
loop
cwtl
adc
pusha
dec
mov
imul
jnp
imul
add
mov
popf
xchg
push
and
or
lds
and
pop
adc
add
xor
dec
loopne
jge
mov
cmc
jne
xorb
jnp
pop
jl
dec
or
dec
xchg
xchg
out
mov
out
or
push
fadd
in
push
mov
and
in
jp
jae
mov
out
loope
leave
dec
xor
xchg
jb
imul
cli
test
pop
mov
mov
mov
rcll
jnp
mov
scas
arpl
out
mov
scas
out
clc
pop
mov
shr
aaa
loop
cmp
mov
lret
add
out
fwait
and
clc
out
pop
loope
mov
in
bound
cld
sbb
xchg
jnp
fsubp
mov
add
inc
mov
mov
out
lcall
mov
out
mov
pusha
lods
iret
and
adc
cmp
repz
mov
xchg
pop
mov
test
push
je
jle
mov
inc
fsts
push
xchg
add
xchg
pop
outsb
push
jmp
movsl
es
mov
mov
dec
push
jl
sbb
rolb
repz
outsb
arpl
test
sub
push
mov
sbb
nop
or
lret
add
jge
rolb
mov
xor
push
movsb
jl
std
inc
mov
loop
pusha
sbb
dec
or
inc
fisttps
lods
movsb
mov
xchg
xor
xchg
sbb
jne
xor
mov
fidivl
loop
int3
hlt
adcl
sub
imul
adc
adc
popf
dec
lods
clc
add
pop
mov
or
das
into
ret
incb
push
fcmove
jb
sub
push
cmp
leave
int3
mov
inc
mov
adc
or
adc
lret
mov
orl
std
pop
out
inc
cli
gs
push
inc
mov
sbb
int3
lahf
icebp
dec
lcall
push
fsubrs
mov
add
ds
addb
loopne
add
flds
and
mov
dec
jae
out
mov
pop
adc
leave
xchg
mov
cmp
mov
aaa
arpl
in
push
xorl
aas
test
loop
and
fcoml
pop
mov
adc
push
xchg
mov
inc
aaa
test
test
pop
xchg
inc
add
es
insl
xchg
fldt
cmp
cmc
dec
mov
jns
mov
daa
sbb
fs
inc
xchg
repnz
or
lds
cmpsb
test
mov
xor
sub
xlat
push
stos
decl
es
int
pop
in
aad
daa
lods
and
cs
jge
push
or
out
xor
add
scas
pop
sarb
hlt
test
sub
insl
pop
fadds
sbb
cmpl
call
jns
xor
inc
mov
push
sbb
push
aad
and
loope
xor
ja
mov
arpl
jnp
rolb
iret
push
dec
cmp
mov
xchg
xor
movsl
mov
ds
aam
imul
xchg
lcall
sbb
push
inc
cmp
arpl
pop
and
jmp
subb
cmpsb
mov
popl
xchg
cmp
in
pop
mov
outsb
adc
inc
adc
pop
cmp
in
in
scas
loopne
add
mov
popa
fnstcw
iret
cs
jae
mov
mov
call
scas
sbb
call
lcall
push
inc
xchg
stos
xchg
xor
lret
sbb
lds
bound
fsubrs
push
out
sub
pusha
sbb
jns
hlt
mov
cmp
fists
dec
popf
or
out
xchg
jns
mov
test
and
lds
mov
fdivrp
xor
jecxz
push
adc
jb
sub
rcr
fists
cmp
mov
je
mov
adc
adc
jne
std
shlb
push
push
fldt
jne
insb
dec
out
into
test
push
inc
jg
mov
das
popa
dec
push
mov
movsl
pop
dec
les
push
jae
sbb
lock
mov
sbb
std
gs
or
out
loope
pusha
les
shlb
jp
fcoms
cmp
loop
sub
push
and
mov
fwait
movsl
sbb
sub
jmp
ljmp
mov
rcl
fadd
or
inc
xchg
outsb
clc
xlat
out
cmc
hlt
aad
imul
inc
push
nop
xor
aas
stos
stos
push
repz
mov
mov
rorb
jle
or
push
xor
xchg
xchg
adc
xchg
fwait
repnz
incb
stos
dec
mov
or
popf
dec
push
cltd
jnp
push
imul
dec
lret
xchg
or
cmp
adc
inc
pop
nop
xor
sub
jb
pop
push
xchg
sbb
sub
insb
divb
xchg
test
dec
xor
xchg
shl
jle
mov
or
pop
ftst
stos
sbb
sbb
lds
push
jg
push
inc
xchg
sub
xchg
jbe
out
in
fstpl
cld
data16
sbb
leave
mov
xchg
mov
xor
scas
mov
or
loopne
add
gs
ljmp
mov
adc
adc
jae
inc
jnp
cs
sahf
push
mov
sbb
cmp
mov
dec
sub
mov
xor
mov
leave
xor
and
xchg
jge
jge
ret
adc
aam
je
ret
jle
lods
dec
movsb
adc
xor
fdiv
loope
inc
outsb
ret
push
mov
test
cmc
add
sub
jle
das
adc
sub
mov
dec
sbb
test
lods
jle
leave
mov
and
xor
add
mov
xchg
push
sub
das
ds
sub
lods
pop
push
push
dec
lds
lret
arpl
scas
insb
pop
dec
out
insb
cwtl
stos
inc
imul
inc
mov
punpcklwd
mov
ja
pop
addr16
aam
idiv
repnz
lcall
fdivrs
add
push
and
mov
insb
bound
jl
fwait
pusha
push
addr16
mov
and
mov
push
jo
push
shrb
sbb
jmp
pop
aam
push
in
leave
and
jno
subl
andps
iret
sub
and
cwtl
test
jmp
es
inc
out
dec
dec
jnp
mov
push
stos
xor
clc
pushl
loop
xor
ret
clc
es
iret
sahf
mov
cmpsb
lds
push
ss
ljmp
flds
push
lock
ljmp
jb
xchg
loope
push
or
jge
pop
mov
in
inc
cmpsl
outsb
mov
pop
loop
scas
ja
pushf
lds
gs
jne
arpl
ljmp
fisubrl
leave
jb
enter
lds
pop
mov
loope
fimuls
adc
mov
add
cli
nop
cmp
xlat
inc
icebp
out
lcall
gs
push
ss
aam
push
push
das
and
stos
movsb
jne
es
shl
cs
std
push
pop
pusha
faddl
sub
aad
stos
mov
push
sbb
loop
int
arpl
shrb
clc
push
sbbb
rolb
push
into
cmp
fcoml
gs
cmpsb
lea
dec
pushf
push
mov
stos
lds
sub
repnz
aas
jo
adc
cwtl
xchg
insb
fcoml
movsl
or
test
das
pop
dec
fbstp
xor
ret
xor
or
xchg
sar
cmpl
aas
xchg
fdivl
mov
mov
stos
adc
and
adc
and
inc
cs
dec
push
mov
ljmp
mov
xchg
push
cs
popf
pusha
push
pop
jecxz
pushf
sub
jmp
mov
mov
or
call
stos
jp
pop
or
inc
stos
xor
sbb
jne
test
inc
cmpsb
mov
or
jbe
xor
dec
mov
inc
mov
pop
adc
rcll
cmpsl
mov
lcall
in
repnz
hlt
stc
add
push
xlat
mov
mov
mov
cmc
int
mov
mov
xlat
jno
mov
mov
pop
andb
mov
jne
xchg
and
jle
into
sub
cltd
push
pop
imul
cmp
mov
sbb
push
mov
add
pop
clc
cs
xorl
or
adc
cmp
das
xchg
test
lock
push
sub
jb
pusha
testl
jecxz
in
inc
lcall
out
scas
cmp
cs
cmp
push
or
ret
xor
add
inc
jle
dec
mov
push
rorb
push
inc
jmp
stos
adcb
aam
jae
or
rorl
mov
jp
cmc
sti
dec
ss
insb
xor
sbb
inc
pop
mov
adc
and
xor
jnp
lret
jl
jno
mov
loop
pop
insb
stc
insl
adc
sbb
inc
fiadds
mov
push
push
shll
push
jns
lods
outsl
xor
fnsave
repnz
leave
inc
js
inc
jnp
mov
xor
push
iret
jnp
test
mov
sub
pop
popl
inc
out
aaa
jne
jl
pop
mov
cmpsb
sub
xchg
inc
xchg
test
inc
mov
jno
in
inc
into
dec
inc
pop
popf
pop
mov
aam
repz
pop
jmp
shrb
fbld
sub
xlat
mov
int
pop
dec
mov
sti
mov
rolb
mov
cmp
ljmp
leave
into
xor
ret
add
rcrb
xchg
cmp
adc
sbb
int
hlt
cwtl
int
icebp
cwtl
xchg
fiadds
idivl
xchg
jle
dec
and
sbb
repnz
adcl
je
gs
pop
mov
xchg
or
cltd
xchg
cmp
and
scas
dec
aad
xor
cltd
mov
enter
popf
mov
and
in
or
out
or
and
add
ficompl
xchg
cmc
call
rcrl
dec
cmpl
add
xor
loop
xchg
jns
xor
imul
jg
pushf
orl
mov
fstl
pop
enter
std
aam
jo
orb
lret
cld
mov
inc
jnp
pop
imul
xchg
sahf
outsl
xchg
pusha
pusha
scas
ja
ss
pop
jno
out
sbb
fxch
bound
push
inc
sbb
outsb
inc
inc
jg
cltd
outsl
out
mov
fwait
jns
add
out
in
xchg
lcall
fwait
mov
ja
lods
jecxz
sub
es
in
test
lods
adc
xor
adcl
in
or
lcall
mov
add
loop
mov
aad
jne
sbb
pop
in
addl
arpl
cmpsb
jns
ljmp
jb
test
fiadds
lret
js
mov
pop
mov
loop
push
imul
stc
ljmp
pop
or
mov
mov
call
push
cli
iretw
fdivs
testb
jns
jmp
stc
andb
cwtl
pop
sub
pop
lods
pop
sub
mov
mov
sbb
daa
fisttpl
xchg
push
mov
movsl
shrb
fistl
add
lods
sbb
bound
push
sbb
mov
cld
lods
and
pusha
dec
lods
add
cmp
enter
lret
cs
sub
pop
pop
lds
sub
mov
pop
jo
adc
imulb
push
adc
stc
inc
mov
pop
popa
hlt
jle,pn
inc
xchg
sti
inc
fucompp
addr16
mov
aad
and
test
or
jae
aas
cli
adc
cmp
jle
pop
push
out
jecxz
sbb
repz
mov
mov
cmpsb
inc
push
sahf
cmp
lret
movl
movsb
push
cmpsl
adc
jle
lock
imul
inc
push
loope
aas
xchg
call
imul
xchg
arpl
dec
ret
xlat
sbb
or
addr16
push
mov
mov
ret
daa
mov
lods
jp
add
jne
shl
jb
scas
imul
sbb
shlb
pop
fistl
xchg
dec
rcrb
or
jb
fnstenv
and
jle
imul
mov
add
cmp
push
rcrl
and
imul
xchg
push
xor
inc
and
add
inc
bound
loop
adc
les
sub
jp
test
psubusb
into
std
inc
adc
dec
stos
gs
pop
in
je
pop
dec
popa
and
loopne
aam
in
jl
cltd
add
jae
mov
testl
pop
and
mov
sahf
push
dec
push
add
cmp
and
pop
repnz
dec
cltd
mov
xchg
push
add
jne
ret
dec
mov
xor
ja
subb
add
rcrl
cmpsl
mov
outsb
test
ficomps
daa
leave
push
fwait
lahf
sbb
jecxz
add
jae
xchg
push
dec
inc
shl
sar
dec
cmp
int3
ljmp
xchg
mov
push
addr16
pop
icebp
aas
popf
sarb
les
xchg
mov
repnz
push
ret
cmp
and
mov
sub
fwait
movsl
cmp
jge
cmc
xchg
or
ja
sub
gs
arpl
mov
push
dec
sub
and
lcall
test
cmpsl
add
inc
popf
mov
popf
repz
push
lret
mov
stos
inc
aas
ret
stc
xor
pushf
loope
lock
jnp
lock
xor
lods
bound
shlb
xchg
movsl
adc
shlb
push
jge
inc
inc
ja
aaa
lods
xchg
dec
insb
lcall
push
aam
mov
ljmp
cld
fcmove
inc
or
mov
frstor
sbb
inc
mov
iret
mov
int3
inc
das
daa
mov
les
mov
xor
add
or
mov
mov
movsb
or
xor
jne
scas
pop
ret
add
fiadds
push
imul
mov
setae
jbe
sarb
les
dec
outsl
mov
rclb
add
sti
sbb
inc
leave
add
mov
mov
lock
dec
jg
pop
inc
and
mov
in
mov
aad
insb
adc
roll
sub
jle
add
or
sub
inc
jbe
movsb
jl
popf
imul
or
push
jge
or
cmp
sub
ljmp
test
and
movsl
lret
sub
addr16
out
loopne
fimull
ja
iret
cmpsl
sub
loopne
add
aas
xchg
sahf
loop
sub
mov
sub
mov
fimull
sub
movsb
lcall
push
mov
jl
cmp
cwtl
xchg
push
out
adc
pop
cmp
cmp
mov
lock
stc
cmp
inc
inc
sbb
cmp
push
pop
sub
mov
cmp
repz
push
xor
call
add
in
inc
xchg
jb
xor
test
jmp
ret
xlat
jp
add
lods
xlat
cmp
jnp
pop
loop
jbe
adc
mov
sub
and
pop
jp
sub
subb
stos
scas
push
lcall
mov
xlat
mov
cmc
jno
mov
popf
push
jg
jp
adc
test
xchg
add
xchg
dec
or
outsb
into
mov
add
jg
popl
inc
xchg
push
mov
pop
test
or
roll
cmc
outsl
xor
movsl
and
jge
cltd
or
push
iret
loop
loopne
jae
fcmovne
and
mov
and
pop
shrl
je
dec
enter
mov
mov
aaa
insb
jp
and
mov
pop
sub
and
shlb
cmp
roll
mov
shr
pop
sbb
fadd
and
mov
out
push
rorl
push
sub
ret
jo
andl
mov
mov
mov
divl
jns
sbb
je
push
or
insb
adc
fnstenv
fdivp
push
mov
fisubs
pop
pop
das
in
push
in
jbe
insb
mov
orl
xchg
add
pop
adc
repnz
or
sti
aad
mov
out
push
push
mov
ror
jmp
stc
aas
rolb
pop
sub
jle
fcomp
jne
popf
dec
in
mov
pop
jne
mov
dec
jecxz
insl
push
cmp
jb
jg
frstor
in
sub
xor
dec
loopne
push
inc
mov
js
jmp
mov
fisubs
sbb
insl
inc
add
scas
test
cmp
sub
mov
mov
cld
push
mov
jbe
frstpm(287
pop
cmc
dec
mov
gs
jp
stc
movsb
bound
mov
ss
in
xchg
es
test
cmp
push
dec
pop
andl
mov
fdivrp
mov
jno
jb
jp
shll
ja
add
cmpsb
mov
jae
lock
cwtl
call
stos
pop
leave
imul
dec
cmp
xchg
int
dec
mov
mov
insl
outsl
sbb
loopne
sub
dec
addb
sbb
mov
popf
inc
fidivrl
js
adc
stc
push
pop
and
enter
adc
pusha
hlt
jnp
rcr
dec
inc
stos
imulb
fldcw
mov
sub
mov
sbb
mov
lods
add
xchg
leave
xchg
dec
out
xor
dec
daa
cmp
ss
inc
xchg
jne
lds
int3
stos
pusha
pop
jo
or
test
stos
mov
outsb
popf
lea
sbb
aaa
push
mov
add
test
and
je
mov
inc
dec
lods
std
lock
not
push
push
and
scas
push
and
dec
nop
push
insl
cmc
inc
adc
ret
dec
lods
xlat
xlat
cmpsb
sbb
or
pop
jno
push
mov
cmp
loop
jbe
jg
mov
pop
movsb
mov
jno
pop
fists
lahf
xchg
ljmp
stos
in
add
andl
xorb
dec
clc
xor
loopne
decl
sub
xor
inc
mov
xor
fldcw
fidivs
cmp
mov
ds
push
mov
pop
mov
pop
cmp
inc
test
js
fimuls
in
mov
adc
push
dec
xor
sub
cli
sbb
out
jno
mov
in
cmp
idiv
inc
adc
ret
aad
bound
lock
push
test
sysenter
scas
xchg
dec
mov
lret
les
xchg
jl
jl
insl
mov
dec
cli
and
daa
pop
loopnew
mov
mov
int
out
je
sub
add
or
sub
add
imul
dec
fwait
and
inc
ret
fstps
jbe
aam
cmp
cld
mov
aas
mov
push
loope
imul
std
push
lret
sub
lea
dec
mov
sub
rclb
or
call
jecxz
push
ret
pusha
lods
das
xor
ljmp
xchg
repnz
push
dec
roll
xor
xchg
jg
jecxz
xor
xchg
jno
mov
jg
push
cld
or
ljmp
sarl
mov
call
sbb
add
inc
movsl
lods
and
mov
push
add
loop
outsl
inc
sbb
and
cmp
sbb
push
dec
mov
push
push
or
repnz
jb
sub
xchg
into
mov
sbb
fldt
cld
aam
jbe
lcall
sub
loopne
sub
cld
push
ret
pusha
fwait
rclb
ret
inc
xchg
xorb
lods
mov
daa
dec
add
mov
or
add
mov
mov
je
jns
in
cmp
sbb
out
mov
push
stos
icebp
int3
sbb
xlat
call
or
add
sub
and
sub
sub
roll
arpl
or
push
loope
cld
mov
out
xor
add
jo
inc
or
push
scas
bound
fdivl
push
push
xchg
sub
pushf
js
mov
pop
mov
aas
lcall
scas
cs
pop
push
in
mov
inc
sahf
mov
dec
nop
sar
xchg
iret
das
xchg
sub
pusha
inc
mov
mov
imul
pushf
sbb
dec
dec
repnz
and
clc
push
push
cld
loop
xor
stos
mov
adc
mov
nop
cltd
mov
jno
movsb
dec
inc
rcl
decb
inc
fldl
insb
push
iret
notl
jg
imul
lds
dec
mov
mov
imull
cmp
cwtl
xchg
mov
sub
daa
push
xlat
popf
rcrb
or
fwait
lret
stos
push
sbb
xchg
ss
scas
jge
fsubrs
loope
mov
push
mov
dec
out
lcall
popf
ret
adc
dec
iret
or
fwait
and
pop
subb
mov
arpl
pop
loope
sti
dec
pop
mov
jecxz
adc
inc
adc
xor
inc
xor
cmpsb
shll
sbb
adc
and
out
adc
lcall
cmp
sbb
clc
repz
das
iret
sub
push
loope
mov
loop
stc
pop
jo
imul
ret
cmp
cli
stos
xor
jp
push
jo
jge
fidivs
dec
int
test
xor
cmpsl
lods
rcrb
ficomps
enter
hlt
inc
adc
aas
aaa
enter
mov
ja
pushf
pop
das
mov
cmpsb
movsb
mov
inc
xchg
add
rcr
push
add
xchg
loope
adc
sub
push
mov
jge
aam
mov
test
lahf
lahf
pop
mov
lock
xchg
add
pushf
adc
repz
and
inc
aaa
adc
adc
les
push
test
add
mov
mov
mov
lcall
cmp
lea
xchg
inc
cmp
add
push
ja
jb
push
xlat
and
sbb
adc
roll
scas
xor
es
mov
pop
push
les
rorb
or
lahf
fs
sub
loop
pop
fnsave
add
jmp
or
imul
sbb
in
mov
leave
dec
addr16
or
mov
sbb
push
cmp
xchg
pop
and
add
jle
xor
mov
sarl
fs
mov
inc
out
and
fcompl
outsl
ficoms
cmpsl
push
fcomps
jp
pop
rolb
pop
xchg
sub
out
rcl
aas
fistl
je
mov
and
jb
je
sarb
sbb
pushf
divl
gs
cmp
lret
push
out
adc
push
and
rcrb
mov
mov
inc
adc
add
push
pop
mov
and
jp
push
push
mov
inc
insl
outsb
stos
aam
lds
jg
xor
mov
in
mov
rorb
mov
xchg
popa
outsl
mov
pop
sti
or
lahf
dec
fcomps
repz
mov
stos
cmpsb
xchg
adc
pop
cmpsb
and
clc
mov
pop
icebp
mov
or
and
pop
movsl
sahf
xchg
ds
cmp
adc
sahf
ja
inc
or
and
cwtl
add
outsb
rcll
dec
add
xchg
stos
sub
fisttps
divl
jnp
cmp
cld
dec
das
nop
fisttpll
dec
sbb
in
add
imul
stos
loopne
insl
sahf
addr16
sub
stos
inc
sahf
pop
notb
outsl
aaa
push
aaa
mov
ret
loope
jecxz
outsl
cld
test
insb
xor
push
lret
into
xlat
adcb
js
pop
dec
or
jg
pop
xor
insl
push
rolb
pusha
inc
sbb
push
fs
push
movsb
jb
dec
dec
push
cmp
mov
mov
sbb
test
sti
xchg
shrl
xchg
es
sub
ss
aad
ss
data16
xor
lods
fcomps
ret
mov
jl
pusha
mov
ss
insb
fdiv
adc
fs
subl
out
test
movsl
in
std
add
cli
call
bound
inc
xor
sbb
and
int
fbld
repz
pop
aad
dec
clc
mov
sub
jmp
fisttps
mov
and
lret
lds
mov
bound
add
dec
mov
push
repnz
adc
pop
or
jno
icebp
mov
ja,pn
inc
dec
dec
je
outsb
mov
jg
pop
movl
stc
push
lods
xchg
xchg
imul
aaa
pop
pop
repz
sub
push
xchg
push
pop
rcl
addr16
js
pop
sub
xor
lea
scas
imull
bound
sbb
sahf
movsl
scas
push
ss
xlat
sbb
loope
xor
dec
dec
pushf
lret
into
adc
jne
out
and
cmpsl
rcr
sub
sar
dec
cmp
pop
aaa
jl
push
lcall
jne
xchg
sub
pop
mov
push
push
cmp
shl
push
cmp
testl
icebp
and
cld
mov
dec
testb
out
xchg
ja
push
mov
jmp
add
xlat
pop
or
rorb
in
cmp
lahf
add
je
xchg
ficompl
cwtl
mov
push
out
push
and
imul
test
movsl
sbb
std
into
inc
and
dec
cwtl
scas
adc
add
xlat
movsl
sahf
test
test
sub
dec
mov
in
rclb
xchg
and
fcomps
sahf
repz
lods
sub
pop
scas
ss
rolb
fists
push
add
or
pop
adc
sbb
adc
adc
sbb
mov
ss
ret
push
adc
inc
and
test
outsb
jbe
mov
pop
test
pop
mov
imul
mov
cli
mov
mov
push
lahf
jns
push
mov
xchg
mov
or
out
hlt
rcrb
or
es
mov
daa
imull
leave
pop
fists
pop
cmp
jb
xchg
lret
addr16
test
lcall
ret
inc
movsl
jecxz
stc
sub
cltd
mov
into
push
mov
pop
popa
sbb
aaa
mov
fmul
or
jb
mov
call
sbb
cmc
je
pop
aaa
imul
rcrl
mov
and
push
push
lahf
adc
push
xchg
out
les
aad
push
fstps
dec
inc
xchg
xchg
ret
addr16
test
or
repnz
inc
pushl
xchg
je
pop
stos
jo
jg
and
and
and
or
jns
or
xchg
jle
lock
cltd
and
inc
jo
mov
popf
xchg
lret
and
push
loope
adc
sbb
inc
sti
sti
cmp
inc
sub
pushf
js
xor
pop
push
lret
push
int
arpl
movsl
ficomps
sahf
les
cmp
test
stc
ret
mov
xchg
mov
or
cmpsb
mov
clc
fisubrs
jno
out
aaa
int3
jae
pushf
testb
shll
and
or
scas
out
daa
aas
fucomi
lods
dec
sarb
sub
cmp
aam
push
jle
jne
in
idivw
cs
adc
arpl
loope
pop
push
jne
cmp
adc
mov
jmp
and
sub
xchg
mov
cltd
or
cmpsb
mov
inc
mov
adc
pop
mov
dec
je
cs
lds
xor
sub
jae
push
inc
ljmp
adc
mov
cmp
test
shll
jecxz
add
roll
sarl
and
fiaddl
bound
js
mov
sub
mov
push
clc
out
xchg
mov
xchg
fprem1
cmp
dec
rorb
push
pop
dec
sbb
mov
cwtl
xchg
cmp
jnp
mov
loope
jmp
mov
xchg
scas
sahf
sbb
cmp
add
sub
sub
adc
in
adc
mov
pop
sub
mov
ja
dec
add
sub
push
out
stc
repnz
js
sbbl
pop
lcall
adc
inc
mov
add
lods
popa
nop
cmc
loop,pn
pop
and
ds
nop
jae
jle
mov
jae
and
pushf
jmp
mov
popa
adc
mov
xchg
inc
cmpsb
or
hlt
add
mov
lods
jns
jb
mov
pop
sbb
xchg
jge
mov
jno
shl
pop
push
idivl
outsb
cmp
sub
pop
adc
xchg
aas
xchg
inc
lret
pop
cmovle
out
jp
jae
sbb
pushf
xlat
mov
xchg
push
fidivs
ja
push
enter
imulb
imul
lret
sbbb
jecxz
cld
dec
idiv
notb
cwtl
js
ja
in
mov
pop
sub
imul
jmp
mov
call
data16
jbe
scas
jp
dec
test
xchg
mov
addr16
aas
stos
jmp
adcb
cmp
iret
inc
int
push
xor
inc
fiaddl
les
adcl
ffree
mov
or
inc
loopne
mov
out
dec
mov
cmc
add
mov
or
sub
cmp
add
inc
mov
add
test
and
sbb
out
clc
mov
sbb
add
adc
outsb
cmp
sub
and
mov
xlat
sub
sub
jbe
leave
xor
mov
mov
imul
out
std
lcall
or
cmp
lods
push
jl
jbe
mov
jg
inc
xchg
cmp
lods
cmp
aad
cmpsl
ss
pop
lock
jno
bound
mov
call
mov
cmp
push
out
shr
sbb
mov
push
mov
add
sahf
roll
scas
fcomp
clc
mov
sbb
jb
scas
jnp
je
sub
cmp
leave
pop
xrelease
xor
xlat
inc
les
jno
pop
xor
jnp
movsb
cltd
shrb
xchg
outsl
mov
inc
cmc
aad
and
sub
sub
insl
push
sahf
enter
daa
out
xlat
push
in
jno
es
stc
addr16
ret
mov
and
popf
rol
es
jbe
fdivrl
xor
xor
push
dec
dec
imul
ja
push
xor
xchg
adc
xlat
imul
ss
insb
push
push
repnz
xor
out
es
mov
sub
xchg
jnp
mov
popa
loopne
cmpsl
xor
adc
cmp
or
jge
test
shr
insb
data16
pushf
mov
push
jnp
push
inc
mov
rorb
repnz
mov
mov
dec
jecxz
pop
inc
jmp
adc
imul
fisttpl
mov
mov
aaa
mov
lahf
adc
xlat
movsb
push
inc
loopne
dec
pop
sti
and
sarb
vpshld
xor
inc
jge
sbb
jge
and
int3
cmp
cmpsb
pop
dec
cltd
fld
and
mov
faddl
lock
fcmovne
fwait
aas
sbb
cld
xchg
mov
push
inc
mov
pusha
mov
xchg
scas
cmp
loopne
hlt
cmc
xchg
add
lret
pusha
mov
fldt
out
jns
movsl
pop
pop
add
pop
cmp
jae
or
push
hlt
aas
out
loop
xchg
idivb
xchg
out
mov
pop
or
or
push
lods
lahf
daa
mov
push
sbb
xchg
adcl
fdivs
adc
push
jle
inc
mov
adcl
iret
inc
cmp
adc
mov
jl
lods
add
jns
arpl
or
fld
sbb
cmpsl
jg
push
jl
and
dec
lds
sub
dec
jle
scas
add
and
jne
adc
in
cld
cmp
mov
or
push
pop
adc
jge
lcall
sub
xchg
dec
pop
mov
aas
daa
and
inc
sbb
fldcw
or
enter
mov
insb
pushf
jge
andb
scas
cmc
ljmp
scas
fwait
mov
ret
sub
shlb
sub
dec
jb
and
mov
insl
cltd
fldcw
mov
push
call
push
movsb
int3
mov
in
pop
js
xchg
jne
lcall
vpcmpeqd
adc
adc
daa
inc
xchg
dec
dec
push
flds
lods
inc
and
aam
xor
rcrl
repz
shlb
sbb
dec
inc
into
ret
dec
insl
sub
and
outsb
rol
mov
xorl
test
sti
mov
cld
sub
mov
ud1
sub
inc
xchg
rorb
add
mov
inc
push
push
sub
div
cmp
lods
push
xor
shr
mov
pop
jne
inc
pop
sbb
adc
cmp
ret
insl
lret
adc
ss
movsl
dec
adc
jo
pop
jle
out
xchg
daa
xchg
sub
fbstp
mov
mov
jae
cwtl
test
int3
dec
sbb
pop
out
mov
bound
mov
jp
mov
in
outsl
pop
repz
xor
cmp
add
mov
pop
sbb
mov
ja
jmp
xchg
pop
and
sahf
cmpsb
mov
sbb
pop
fwait
test
push
repz
jns
imul
dec
outsl
xor
inc
mov
aas
pusha
xchg
push
xor
jecxz
mov
fnstsw
cmp
sub
push
lcall
fs
loop
dec
mov
adc
outsb
stc
xchg
das
xchg
pop
inc
in
inc
leave
adcb
repnz
lds
rcrl
mov
mov
in
add
jecxz
enter
jbe
pop
test
inc
out
pop
mov
and
xor
mov
mul
and
insb
shrl
mov
lods
sub
adc
sbb
cli
lods
addr16
fisubrs
shll
rcr
pushf
pop
clc
mov
xchg
mull
jb
fwait
scas
mov
push
mov
in
inc
inc
into
and
push
xchg
dec
mov
enter
adcl
test
mov
dec
inc
fsubl
pop
outsl
push
addb
jnp
xchg
mov
adc
push
in
adc
mov
popa
xor
rolb
scas
fiadds
ja
xor
ja
inc
cmpl
test
test
jl
or
mov
xor
xor
add
pop
insl
iret
fimuls
xchg
dec
mov
push
fisubl
fcomip
mov
add
mov
add
lea
inc
jle
xchg
mov
sbb
push
or
sub
scas
cmpsl
adc
or
call
mov
push
xchg
sbb
adc
jle
repz
jmp
adc
cwtl
add
mov
insl
cli
dec
sub
imul
sbb
pop
inc
lret
lahf
mov
imull
lahf
xor
push
gs
sbb
inc
mov
push
in
call
xchg
lock
cmpl
jle
jge
sub
mov
or
adc
lock
mov
adc
sahf
mov
fs
test
cmpsl
loop,pn
cmp
std
insl
mov
sbb
loopne
test
xchg
test
outsl
addr16
pop
xchg
xchg
jmp
cs
xlat
out
mov
jo
mov
xor
fsubs
xor
and
fwait
xchg
mov
fmull
rorl
adc
jl
aam
or
fwait
inc
push
orl
enter
stos
test
pusha
shll
adc
test
pop
sbb
sub
jge
push
jmp
in
into
inc
rcr
ret
jg
mov
mov
push
cmp
mov
stos
xorb
sbb
getsec
fcoml
pop
test
add
cmovne
ja
or
sub
sbb
loop
and
loopne
add
sbb
fmulp
fcmovu
addl
shr
pop
outsl
xchg
cli
clc
or
sub
dec
lret
pushf
push
scas
jnp
mov
loop
xor
cs
cmpsl
and
aaa
stc
rsqrtps
jecxz
iret
notl
in
mov
pop
inc
lahf
pop
test
repnz
jbe
cli
jl
jl
xchg
inc
mov
inc
mov
ljmp
aam
aaa
sub
into
sbb
rcrl
not
and
sti
pop
sbb
sub
or
or
cld
pop
or
cmp
jns
cmp
dec
pop
mov
bound
cmpsb
in
xor
outsb
fldcw
and
or
popa
mov
lea
call
or
pop
dec
dec
adc
test
push
push
dec
push
dec
xlat
push
and
jg
mov
adc
sub
loopne
es
and
jne
xlat
in
mov
or
sub
dec
jno
lods
pop
pop
std
and
js
mov
push
mov
jmp
xchg
stos
lcall
inc
inc
fistpll
test
pop
mov
dec
ss
sahf
sahf
mov
popf
int3
pop
xchg
fidivrs
movsl
inc
mov
lods
out
push
addr16
notb
cld
sbb
test
pop
mov
mov
aas
cmp
mov
les
call
push
int
clc
xor
test
lahf
or
pop
rcrb
int
ljmp
and
pop
jno
lcallw
negl
scas
pop
add
aad
sub
aad
mov
movsl
test
and
fsqrt
sub
push
popf
jae
mov
pop
pop
cs
ss
pop
or
push
jo
ficomps
popa
push
loope
or
movsb
arpl
sbb
pop
movsb
xchg
xor
int
stc
dec
and
lcall
adc
repnz
stc
pop
cwtl
nop
cmpsl
cs
xchg
fnsave
jecxz
orl
testl
notl
and
cs
jb
mov
stos
jl
outsl
ret
xchg
ljmp
xchg
dec
dec
je
lea
xchg
fwait
nop
sub
ljmp
jae
pop
pop
xchg
inc
lret
sub
in
cmp
add
xchg
les
imul
and
pusha
dec
cmp
xor
push
lahf
xchg
fdiv
les
or
fdivrs
jnp
inc
bound
cli
sub
imul
xchg
cld
xchg
aad
push
in
mov
js
pop
test
add
sub
or
imul
cmp
mov
pop
fdivrp
inc
xor
mov
mov
ret
out
add
aaa
adc
loope
mov
mov
lock
push
stos
leave
inc
mov
inc
bound
test
xchg
and
stos
mov
inc
or
push
or
add
aaa
push
xor
pop
pusha
rcr
sub
jnp
mov
adc
leave
cmp
pusha
mov
pushl
iret
or
fcomi
notb
rclb
push
sub
jo,pt
rcl
shr
dec
cmpsb
arpl
rclb
sahf
xorb
pop
xchg
and
fsubr
pop
sbb
in
mov
push
ljmp
mov
in
jmp
xor
outsb
jle
mov
jns
sar
ljmp
popa
test
pop
loop
fmuls
sbb
xlat
mov
sbb
push
das
pop
adc
mov
jg
dec
mov
rcl
pop
cmpsb
decb
mov
je
inc
stos
push
addr16
test
aam
dec
cli
and
push
sub
loope
lock
loop
xchg
push
add
xor
imul
lods
test
in
pop
out
sbb
pop
push
xlat
aad
dec
into
adc
test
mov
jle
mov
dec
push
push
pop
mov
das
or
mov
xor
xor
sbb
and
or
popa
pop
sub
ret
cmp
icebp
jnp
pop
mov
cmp
or
jo
lret
sub
repnz
pop
and
xlat
jno
jg
cs
bound
sub
ss
mov
and
sahf
push
cld
mov
and
cmp
xchg
bnd
loop
sbb
inc
mov
mov
paddq
insl
pop
std
fwait
jns
and
jg
das
popa
adc
leave
loope
arpl
loop
lcall
pop
mov
test
ds
test
shrl
mov
mov
int
inc
push
sahf
cmc
iret
test
adc
sarl
mov
mov
aas
movsl
push
test
sub
in
push
push
jne
sbb
rclb
adc
subl
mov
ljmp
jg
inc
mov
lcall
xchg
and
pop
pop
cmpsb
pop
push
sti
xor
inc
push
xchg
fbld
icebp
sub
cmc
out
orl
inc
rorb
add
xor
pop
jns
add
mov
pushf
pop
aam
jo
pusha
mov
sub
lock
sub
jp
gs
mov
cli
lock
cwtl
arpl
es
push
loopne
ret
inc
sbb
pop
fcoml
cmp
adc
jae
outsl
mov
jmp
mov
jg
lods
adc
dec
loop
flds
mov
push
lahf
push
mov
in
xchg
insl
xchg
inc
stos
cltd
sub
out
sti
dec
test
cmp
inc
cmp
movsl
fs
and
fnstsw
mov
lods
push
popa
or
push
dec
pop
mov
test
hlt
cmovle
push
insb
mov
fisubl
xor
mov
mov
jne
inc
movq
jae
fucomip
dec
add
sahf
rcll
in
int3
or
add
sarb
sbb
fildll
leave
mov
pop
dec
bsr
jne
test
iret
movsl
mov
sbb
xchg
adc
jge
and
cmc
or
aaa
imul
inc
lods
dec
pop
jecxz
insb
stc
push
dec
out
imul
jge
stc
sub
fisubl
dec
cmp
cltd
xor
push
in
jae
loop
mov
pop
test
sub
imul
popl
mov
insl
xchg
mov
sub
fnsave
mov
pop
jne
xlat
push
imul
mov
mov
outsb
test
jmp
mov
mov
out
mov
xchg
pop
je
imul
push
bound
jl
cmp
xchg
les
bound
xchg
sbb
imul
xor
pop
pop
pop
out
imul
jae
ret
inc
dec
and
loope
loopne
popa
pop
ret
adc
jle
fists
pop
lret
add
scas
rcr
clc
aad
jg
push
pop
leave
inc
adc
jo
mov
daa
xchg
adc
xor
mov
sti
mov
ret
pushl
push
adc
lcall
cmp
in
aas
pop
xchg
in
cltd
js
or
xchg
mov
outsb
xchg
movsb
ret
or
lahf
mov
rorl
out
cmpb
add
xor
xor
loopne
push
cmp
imul
dec
fildl
subb
mov
and
cmp
sbb
inc
push
pop
ret
xchg
ja
mov
inc
fstp
mul
sub
cmp
pop
test
sbb
clc
popf
pop
dec
push
inc
pop
nop
bound
and
out
sti
js
add
mov
ficoml
imul
jo
call
fdivrs
add
mov
add
imul
ret
roll
fnstsw
mov
mov
adc
cmp
aam
inc
repz
lahf
mov
mov
rorl
mov
or
fcmovbe
xchg
or
pop
lret
jmp
adc
xchg
aad
jmp
mov
pop
mov
or
scas
push
cmp
lods
mov
call
xchg
xchg
fwait
mov
jb
sub
mov
cmpsl
dec
sbb
jns
stos
fistl
lods
or
lret
and
dec
mov
imul
jbe
mov
inc
sbb
xor
push
mov
das
gs
insl
push
mov
ret
jl
fiaddl
sti
testb
adc
mov
sbb
cmp
push
out
push
xor
or
popa
outsb
movl
mov
outsl
sub
outsl
sub
cwtl
ret
or
or
fildll
ljmp
ficomps
mov
inc
jns
mov
gs
mov
jno
lods
cmpsl
pop
test
neg
pop
jns
and
xor
icebp
sbb
push
mov
or
push
or
in
cwtl
lock
lock
into
mov
subb
mov
adc
dec
iret
cmp
or
int
and
pop
xchg
aas
ret
push
inc
aam
fldcw
add
les
cltd
insl
mov
popf
and
incl
dec
mov
ffree
add
mov
or
loope
loope
push
mov
out
es
clc
jne
dec
movsb
xchg
push
or
mov
repz
hlt
and
int
push
call
push
in
neg
xchg
sub
and
mov
mov
or
fstpt
xor
jl
mov
cmp
cwtl
push
mov
sbb
push
daa
in
rorb
xchg
xchg
mov
sahf
scas
outsl
cli
sahf
push
orl
xorl
sbb
lahf
ret
cmpsb
xchg
call
xchg
mov
pop
clc
jnp
aad
cmc
add
jb
push
pushf
inc
test
inc
das
orl
cltd
jnp
int3
or
cwtl
test
cmp
mov
xchg
mov
or
bound
daa
in
popa
sbb
sbb
nop
js
push
inc
in
cmp
pop
xlat
jns
mov
jbe
popa
mov
mov
mov
andb
sbb
inc
jbe
push
aaa
cld
lea
jo
sub
imul
addb
inc
and
mov
xor
adc
loopne
push
cmc
ror
lock
loop
push
daa
test
mov
ja
fsubp
push
sub
adc
cld
cmc
inc
sub
pusha
enter
xchg
into
arpl
add
fldcw
popf
mov
es
add
sub
lret
mov
pop
fnstcw
xchg
inc
jns
mov
stc
movb
mov
mov
dec
call
out
dec
repz
out
movsl
inc
inc
sbb
mov
pop
mov
cs
fwait
jmp
mov
jp
mov
lcall
test
mov
lret
cmp
push
jno
cmp
xlat
stos
push
fwait
outsb
inc
stos
clc
mov
mov
scas
popf
mov
cmpsb
loop
mov
inc
std
cmp
fidivs
je
xor
adc
inc
loop
or
mov
sub
add
jge
mov
inc
inc
push
andb
inc
push
sbb
cwtl
push
je
dec
movsb
jae
add
sahf
popa
das
sbb
mov
stos
xchg
mov
inc
imull
js
out
push
pop
ret
sbb
jmp
cmp
push
pop
jp
sbb
sub
imulb
add
inc
test
sub
and
lcall
add
sub
mov
jb
pop
pop
je
xor
and
out
sub
je
psrld
mov
dec
pop
mov
in
loop
popf
mov
xor
mov
lds
insb
add
jbe
sub
and
ljmp
add
ret
mov
cmc
cmp
iret
in
sub
pop
shlb
call
pop
or
mov
sub
push
test
scas
jno
mov
stc
in
mov
cmp
imul
or
adc
add
rclb
lock
mov
mov
roll
sub
fsubl
frstor
or
fcom
xchg
mov
mov
js
and
call
std
xor
sbb
cmp
loope
xchg
pop
sti
adc
pushf
lods
add
pop
jl
adc
cmp
xchg
pop
mov
adc
xchg
mov
push
decb
pop
xor
jns
push
sbb
jae
mov
add
jne
pop
aaa
into
int3
pop
outsb
adc
scas
lahf
push
mov
test
and
mov
dec
add
rol
or
add
jbe
pmovmskb
add
decl
and
mov
mov
dec
pop
pop
add
lcall
adc
cs
cmpsl
subb
xor
insb
xor
pop
xlat
jb
ret
jne
ret
jo
and
add
xchg
push
mov
cmp
ljmp
mov
pusha
adc
shlb
mov
lock
je
imul
sub
sub
jo
push
mov
jo
sbb
mov
push
dec
sbb
add
int3
jg
fwait
repz
ljmp
daa
cmp
adc
ret
xor
adc
arpl
mulb
test
jo
add
fwait
push
fcomps
push
icebp
push
loope
push
push
call
les
push
add
cmpsb
sti
push
push
pop
mov
call
pop
or
push
fnstsw
push
sar
icebp
inc
sbb
pop
fstps
enter
cmp
sbb
dec
sbb
jg
iret
adc
out
xchg
push
dec
mov
shl
insl
sbb
mov
adc
ds
stc
sub
fdivrp
jbe
or
pop
add
xsaveopt
ds
xchg
mov
adc
push
sub
lahf
jae
jecxz
and
rorl
inc
mov
xchg
daa
scas
mov
out
std
push
imul
test
mov
inc
scas
pop
hlt
imulb
jp
push
push
sub
dec
push
in
js
or
mov
cli
jmp
cmp
test
mov
jnp
sub
jecxz
scas
rcr
testl
sub
lret
jle
mov
lock
or
or
add
fs
mov
das
js
outsb
mov
xor
ret
cmp
sbb
push
sti
inc
push
ds
aam
fs
add
or
ljmp
jno
sahf
xchg
pusha
pop
dec
rcrb
repz
push
cld
clc
sbb
pop
adc
pop
xchg
mov
xorb
je
sbb
rorl
jb
push
pop
hlt
pop
shll
sbb
xchg
or
jl
loop
and
pop
mov
or
fwait
int
inc
add
sbb
push
lahf
ja
xor
lahf
push
jnp
mov
push
loopne
cmp
xchg
and
xor
test
add
cmpsl
push
addr16
xorb
lods
inc
xchg
pop
xor
movsl
jmp
sti
ftst
jne
imul
mov
fldl2t
jecxz
shrl
jle
pop
outsb
add
lret
adc
clc
jp
cmp
sahf
mov
fmuls
mov
pop
frstor
mov
test
jnp
in
push
xchg
or
mov
popf
cld
pusha
fs
aam
shlb
mov
leave
dec
pop
adc
inc
inc
imul
ss
in
add
pop
push
xchg
inc
sub
notl
dec
jo
jb
nop
inc
inc
sbb
rcll
xchg
cltd
js
pop
push
xchg
cmpl
jne
scas
pop
xor
mov
loopne
stos
and
outsl
adc
test
ffreep
icebp
rcr
dec
pop
jno
cmp
pop
out
mov
push
push
cmpl
adc
dec
scas
arpl
ss
dec
int3
dec
je
mov
jno
fstps
jge
push
jno
rcll
clc
in
shl
mov
shr
fidivrs
pop
notl
xchg
xchg
pop
cmc
sahf
call
push
xor
clc
push
jle
mov
daa
clc
jge
mov
test
lcall
xchg
and
pop
or
loop
loopne
adc
xchg
test
mov
pop
adc
dec
mov
mov
add
or
inc
pop
mov
dec
xlat
fnstcw
mov
je
testl
mov
push
dec
fsubrp
push
sub
xor
outsb
iret
aaa
xchg
pop
out
pop
sub
push
adc
pop
jmp
mov
add
jbe
push
lret
mov
fidivs
xor
bound
cmpsl
sbb
daa
mov
inc
adc
lods
jbe
js
mov
fs
mov
sbb
call
xor
outsb
out
sbb
shll
xor
mov
imul
incb
push
and
push
cs
es
mov
push
rorb
in
cmp
frstor
xor
dec
dec
pop
stos
arpl
mov
lock
imul
fnstsw
adc
cmp
sbb
jge
adc
inc
dec
loop
shll
jno
into
mov
xchg
pop
andl
push
popf
or
cmpsl
push
or
stc
push
xchg
dec
xor
sti
mov
adc
adc
movsb
mov
fwait
lcall
cld
mov
je
fisubrs
xor
dec
fisubrl
mov
jge
vshufps
xor
mov
add
pop
leave
add
aam
and
hlt
jb
add
sub
pop
inc
insl
push
jbe
pop
and
lods
xchg
mov
sub
sti
or
shrb
fnstenv
cld
adc
insb
xchg
sub
xor
dec
loopne
andb
test
mov
movsl
and
push
and
incl
in
mov
pop
mov
inc
cld
dec
mov
addr16
std
push
sub
push
sbbb
ljmp
lret
pop
into
bound
subl
test
lods
xchg
mov
jbe
jecxz
vpshlw
xchg
scas
loopne
push
shrl
bswap
pop
lock
dec
xchg
sbb
lahf
out
push
popf
jl
fcomps
mov
jns
cmpsl
jg
sbb
sbb
loope
je
cmp
dec
adc
outsl
lahf
pop
lea
xchg
dec
pop
rcl
daa
roll
pop
push
dec
xchg
scas
or
xchg
fwait
jne
shlb
pop
adc
jge
dec
jge
out
lret
sub
and
das
sbb
cmp
mov
inc
jle
cmp
addr16
and
popf
call
int
xchg
test
iret
mov
out
scas
ret
mov
push
mov
and
sti
sub
push
cmp
sahf
adc
mov
mov
cmpb
outsl
adc
mov
aaa
sub
sbb
pop
adc
adc
mov
sahf
cld
inc
pop
leave
aam
mov
adc
jne
into
ja
fucomip
inc
das
repz
dec
jecxz
sub
xor
in
and
sbb
les
mov
adc
jno
gs
jge
outsl
pop
in
icebp
cmp
sub
mov
fisttps
movl
sbb
loope
lock
sub
push
cmp
jae
les
cmp
test
xchg
push
fadds
jg
repnz
jnp
cmpsb
les
ret
pop
mov
ljmp
fcoml
xor
xlat
dec
adc
stc
pop
leave
popa
fcomps
jnp
pop
int3
insl
out
push
sbbb
push
je
out
divb
cmc
pop
or
stos
sbb
fsubp
push
add
popa
or
test
repz
jnp
adc
cmpl
shll
ret
popa
jp
pop
bound
pop
jne
jnp
cmc
pop
aam
jmp
sub
xchg
stos
jno
nop
push
jo
stos
icebp
orl
jne
dec
and
out
addr16
cltd
dec
sarl
fildl
rcr
adcl
xor
in
aam
add
adc
pusha
add
mov
aam
and
sbb
aas
adc
inc
cmp
jae
cli
je
mov
enter
push
cwtl
int
ja
mov
add
xchg
test
push
dec
xchg
lods
out
cmc
jae
shlb
or
addr16
lcall
xchg
addb
cltd
adc
push
imul
test
push
in
xchg
jnp
xor
xlat
cmp
mov
push
call
adc
jp
sub
push
mov
xor
neg
dec
sub
loop
push
xchg
sbb
push
pop
aam
mov
or
popa
pop
cli
dec
les
dec
sahf
mov
movsl
or
je
pop
ret
inc
in
mov
xchg
add
pop
mov
ss
aam
add
das
nop
or
xchg
cmpl
mov
or
arpl
sahf
aaa
push
jne
jnp
mov
cli
push
or
aam
in
xor
jbe
icebp
out
andl
pushf
jg
ret
test
inc
inc
jl
fs
lds
jae
in
mov
leave
imul
cmpsb
ss
imul
and
mov
jae
dec
clc
push
push
pop
add
in
xchg
inc
jg
jp
fsqrt
mov
jecxz
jl
lahf
mul
dec
jae
and
mov
mov
adc
mov
daa
xlat
addr16
aaa
stos
leave
pop
pop
idiv
lret
fcoms
imul
cmpl
jmp
mov
orl
notb
pop
imul
push
cmpsb
jb
fdivs
lcall
es
into
dec
jb
das
sbb
and
push
repz
fs
call
pop
and
addr16
js
pop
pop
je
lcall
addr16
ret
pop
sbb
mov
lahf
adcb
pop
sbb
idiv
out
fbstp
fisubs
jecxz
cwtl
jae
mov
pop
movl
lods
mov
dec
xchg
dec
mov
imul
pop
stc
lahf
xchg
jne
xor
andl
fwait
adcb
fisttpll
mov
int3
mov
into
mov
inc
sub
sbb
mov
movl
and
or
push
mov
add
add
das
pop
jge
lahf
pusha
push
mov
mov
jb
rorb
int
pop
jge
mov
popa
data16
mov
sbb
mov
sbb
push
inc
cmpb
and
dec
fildll
push
lcall
or
mov
sbb
jne
hlt
adcb
fldl
push
fstpt
cmp
out
mov
and
xchg
xor
sbb
std
mov
cmc
enter
lcall
hlt
xchg
cli
ljmp
xchg
sbb
loop
insl
adc
cmp
scas
insb
sbb
inc
adc
ret
or
xor
sbb
mov
and
inc
push
aad
dec
pop
mov
imul
sub
insl
or
pop
mov
adc
shr
dec
mov
mov
cltd
rorl
aam
add
pop
rcrb
shlb
mov
push
inc
jb
push
shl
test
out
iret
in
fisttpll
inc
and
pusha
fwait
mov
ret
cmp
xchg
mov
movsl
jmp
orb
mov
icebp
lahf
jle
mull
in
sti
mov
sub
mov
push
adc
aaa
scas
mov
lret
sub
cmc
pop
dec
or
dec
out
inc
scas
adcb
push
nop
addr16
sti
jle
test
fs
pop
mov
stos
adc
jb
fiaddl
xlat
pop
adc
fucomip
scas
push
mov
popa
mov
adc
in
push
mov
repz
loopne
sub
sbbb
lock
call
mov
jne
out
mov
insb
jp
sbb
xor
test
lcall
ja
lods
mov
mov
cld
loopne
out
mov
fisubrl
fcomps
fistl
lcall
in
xchg
lret
orl
stc
cld
aaa
sbb
out
push
outsl
mov
sbb
cli
sub
jmp
bound
mov
aaa
cld
pop
sbb
sub
stc
insl
imul
fadd
xchg
adc
aaa
push
outsl
outsb
or
and
cmpsb
into
rcrb
jecxz
fs
pop
shll
inc
mov
stos
xor
mov
push
mov
xchg
push
and
push
cltd
gs
add
inc
pop
data16
xor
in
mov
or
js
das
enter
out
push
ja
xor
adc
xchg
div
in
inc
jmp
ret
in
mov
or
jp
jmp
jmp
lods
andl
cmp
pushf
mov
pop
stos
mov
sub
fcompl
jle
xchg
pop
insb
cmp
ret
sbb
arpl
mov
fsts
xor
fbld
call
xor
lret
pushf
xor
cmp
dec
and
inc
push
xor
inc
dec
sub
mov
sbb
imul
faddp
aam
jae
mov
ja
adc
or
scas
lcall
mov
in
mov
pop
in
aaa
or
lret
push
and
dec
and
pop
and
mov
or
es
int3
aas
adc
add
xor
pop
xor
fs
flds
rcrb
pop
adc
mov
int3
pop
push
aad
cmp
scas
cltd
pop
push
cltd
pop
cmp
aaa
pop
cmpsb
fnstenv
dec
pop
mov
or
ja
or
add
rcl
push
adc
lahf
fucomip
adc
mov
jne
jle
dec
imul
bound
sti
xchg
rol
out
pop
shll
sarl
adc
fs
xchg
mov
inc
or
jmp
lods
xchg
push
sbb
repz
dec
jp
xchg
push
pop
fwait
inc
dec
mov
xchg
dec
aad
rcr
ja
cmpsb
jmp
mov
jb
inc
and
in
addr16
adc
aad
xchg
scas
das
inc
into
lret
and
sub
mov
es
fucomp
add
sbb
mov
cltd
gs
aad
out
pop
lock
arpl
bound
cmp
sbb
adc
sub
xchg
std
dec
and
cmp
or
int
out
fwait
pop
test
pop
imul
push
inc
ljmp
mov
cltd
in
mov
mov
sbb
pop
dec
imul
repz
dec
mov
inc
andl
cs
xchg
jnp
and
mov
scas
sub
ljmp
loope
fldcw
pop
sti
shrl
in
sbb
out
add
inc
mov
or
mov
adc
sti
jg
leave
stos
outsl
jb
scas
mov
cli
sbb
nop
fcompl
scas
bound
adc
mov
mov
dec
push
mov
sbb
movsb
repnz
jb
add
dec
insl
mov
pop
ja
orb
dec
cmp
inc
dec
sbb
jns
dec
mov
clc
sbb
sahf
sub
mov
dec
xchg
and
push
add
out
stc
sub
mov
leave
popf
mov
xchg
cmp
loopne
dec
les
mull
jb
mov
repnz
test
add
mov
adc
stos
jae
clc
mov
sarl
pusha
mov
adc
push
fists
adc
dec
push
dec
aas
jle
sbb
mov
push
orw
gs
or
fiadds
jnp
mov
pop
mov
lods
dec
fisttpll
xor
pop
mov
movsb
xchg
adc
cmpsl
sbb
in
jb
repnz
adc
xabort
push
or
in
mov
mov
adc
dec
ds
inc
fidivrs
lret
mov
in
dec
dec
xor
pop
mov
sahf
dec
mov
push
addr16
shll
mov
inc
inc
mov
xor
je
and
out
mov
std
sbb
fidivl
xor
int3
fcompl
jle
xchg
push
sbb
fistpll
lock
sbb
test
dec
into
outsb
sbb
popa
lret
fnstenv
call
pop
mov
ja
cmp
out
xchg
or
loope
add
loop
pop
mov
daa
pop
and
xchg
jecxz
push
cmp
fimull
add
and
mov
call
push
dec
dec
bound
ljmp
sbb
aaa
mov
cltd
ja
test
ds
dec
dec
movsl
scas
mov
jge
mov
addr16
mov
push
mov
inc
test
mov
xor
mov
sub
jo
mov
out
loop
cltd
cld
adc
mov
int3
movsl
xorb
push
mov
jp
mov
pop
dec
repnz
repnz
xor
lret
xchg
jecxz
or
cltd
cmp
pop
or
jne
mov
jne
pop
and
add
ret
cmpl
adc
rorb
jnp
leave
jmp
inc
mov
fcompl
loop
daa
or
mov
jle
clc
mov
cmp
getsec
bound
pop
pop
mov
inc
add
jno
dec
adc
shr
lcall
xor
mov
imul
pop
lods
inc
dec
pop
mov
repnz
lock
lcall
mov
and
ret
mov
fcoml
sub
iret
mov
dec
int3
pop
iret
lret
adc
call
jb
nop
push
or
scas
sbb
fstp
cmp
jl
movsl
or
sbbl
mov
movsl
repz
cmp
pop
icebp
and
inc
lret
jle
testl
repz
mov
push
mov
negl
cmc
inc
shlb
sub
dec
rcr
sub
iret
aas
dec
roll
pop
and
in
ljmp
jmp
out
inc
das
jg
sbb
hlt
mov
xlat
jae
arpl
jl
or
or
sahf
cmp
mov
shl
mov
mov
aaa
add
sbb
in
call
enter
push
lahf
sbb
movsb
sbb
pop
and
dec
and
fwait
and
jmp
nop
adcl
test
stos
push
inc
movsb
into
mov
lret
lea
cmpsl
mov
or
lods
sub
sti
jne
dec
pop
sub
lds
call
jne
mov
xor
mov
inc
xor
filds
call
mov
gs
notl
cmpsb
ret
push
js
xor
xor
mov
jns
add
mov
std
insb
or
movsb
inc
mov
out
subb
and
push
fldl
addr16
andl
in
scas
mov
mov
out
xchg
ja
ret
mov
mov
imul
xlat
or
push
getsec
shrl
das
in
int3
add
xor
jns
mov
stos
dec
aam
out
stc
dec
xchg
fcoml
mov
aaa
outsb
scas
lds
and
rcll
xchg
adc
stos
cmp
xchg
vpacksswb
shll
leave
pusha
inc
cmp
imul
aad
dec
pop
scas
rcrl
test
cwtl
outsl
add
jo
mov
mov
ljmp
pushf
rcll
cmp
mov
dec
push
ret
push
mov
outsb
scas
cmp
sbbl
push
mov
repnz
subl
cwtl
push
shlb
cli
lea
jl
jb
dec
fidivl
push
stos
test
ss
shlb
fs
sub
lds
ja
pop
xor
jo
push
cmp
inc
sti
cld
push
out
pop
add
scas
jo
mov
insl
imul
mov
in
xchg
inc
add
mov
cmpb
add
lea
mov
inc
shrl
hlt
xchg
inc
ljmp
and
push
fcomps
xor
mov
dec
aaa
xor
test
sub
dec
sub
and
add
jecxz
mov
add
psraw
daa
cmpsl
mov
in
and
aas
push
xchg
push
fisttpll
or
jecxz
push
cli
inc
sbb
test
xchg
outsb
jecxz
pop
or
mov
sub
xchg
mov
xor
cltd
dec
sub
mov
mov
lahf
inc
lahf
ljmp
lcall
cmp
sbb
inc
xor
jbe
jne
inc
jecxz
push
daa
jns
jns
insb
xchg
pusha
fmull
cmp
leave
jns
mov
fwait
adc
pop
and
pushf
or
roll
das
addl
sbb
popf
ffree
cltd
dec
sub
clc
cmpb
cltd
inc
pop
addr16
inc
fstps
test
jbe
iret
ja
shr
fstpt
hlt
sub
in
dec
std
jnp
out
mov
push
mov
std
insl
out
int
in
outsl
ja
paddq
jmp
inc
xor
or
mov
popa
ds
mov
inc
jne
andb
test
add
or
lret
and
push
enter
std
mov
test
cmp
aas
mov
add
dec
inc
pop
adc
and
cmp
fwait
xchg
mov
pop
icebp
pop
sahf
mov
push
lock
shll
jnp
push
dec
jmp
mov
test
les
cmp
aam
mov
scas
mov
cs
cmp
mov
and
roll
js
scas
lds
fwait
adc
scas
dec
push
vpackusdw
js
cmp
nopl
fimuls
fldl
add
mov
xchg
dec
notl
int
inc
xchg
xlat
mov
outsl
ret
pop
faddl
sbb
dec
lock
call
sbb
scas
insb
push
ljmp
cli
cltd
pop
mov
ret
dec
dec
inc
ficoms
sbb
lret
xlat
jbe
out
aad
in
icebp
or
daa
jecxz
call
lcall
pop
outsb
in
ljmp
ljmp
in
jmp
test
mov
jmp
cmp
std
test
jecxz
xor
ja
or
push
cmp
adc
fdivr
fldenvs
jp
pop
and
xchg
fimuls
loop
xchg
outsb
inc
pop
and
pop
cmp
imul
pop
nop
ficomps
sub
jne
mov
mov
jb
adc
mov
clc
mov
mov
lcall
add
out
mov
nop
orb
lret
enter
ss
pop
mov
aas
and
cmpsb
push
xor
std
mov
int
stos
iret
mov
loopne
xlat
add
addr16
je
mov
jnp
push
pop
out
pusha
xor
js
mov
clc
xor
xor
ja
outsb
pop
in
dec
stos
rcl
lods
or
push
scas
pop
aaa
jae
sbb
pop
xchg
fimuls
push
cmp
test
xchg
aaa
rcrb
push
push
icebp
imulb
pusha
stos
int
xor
jne
cli
rorb
add
aad
and
cmp
lea
jns
push
push
cwtl
lods
pusha
jbe
les
mov
ljmp
sahf
mov
leave
test
inc
cmp
sar
push
cmc
movsl
cmp
pop
mov
scas
xchg
adc
jp
fcoms
pushf
pushf
push
ss
jg
or
inc
cmp
xchg
cwtl
call
adc
movsb
ret
out
jns
jne
enter
push
xor
js
lret
cs
stc
fstl
in
push
push
mov
iret
aaa
inc
mov
inc
ret
int3
pop
mov
loopne
loopne
xor
and
nop
xchg
mov
jbe
or
addl
or
or
add
orb
mov
fs
push
shlb
pop
mov
push
push
pop
xor
jmp
mov
cmp
mov
and
or
push
clc
daa
pop
ljmp
dec
int3
xor
xlat
scas
inc
nop
sbb
fidivl
outsl
rol
pop
and
xor
fdivrs
and
add
mov
hlt
enter
insb
arpl
orl
and
mov
mov
popa
in
inc
add
pop
fiadds
popa
jp
jl
repz
pop
cmpsl
xchg
lods
mov
aas
mov
stos
push
push
push
aam
in
icebp
push
xorb
pop
mov
or
int3
test
cmc
into
dec
cwtl
es
xor
pusha
nop
outsl
dec
popa
mov
pop
xor
mov
push
out
rcl
mov
jecxz
mov
jl
in
aaa
mov
mov
inc
jecxz
push
pop
ficompl
loope
dec
data16
xchg
popa
cld
push
imul
xchg
std
inc
dec
inc
inc
leave
or
out
int
xor
aaa
loope
or
in
outsl
xchg
push
aaa
add
lods
mov
inc
inc
into
jo
mov
fldt
add
bound
fildll
or
loope
pop
pop
iret
mov
js
xor
cs
mov
sub
mov
adc
inc
lret
lahf
pop
sub
scas
call
mov
push
fsubrs
daa
ja
push
daa
xchg
push
cmp
jne
es
cmp
es
mov
dec
or
popa
loop
loope
andl
jbe
int3
fists
mov
add
dec
jnp
cwtl
inc
mov
ljmp
movsb
ljmp
inc
jo
mov
lret
aam
int
sub
int
adc
sbb
lcall
fstl
sbb
mov
repnz
fisttpll
movsb
js
adc
mov
mov
and
dec
add
push
fdivl
es
mov
fs
or
imul
cwtl
arpl
inc
dec
dec
daa
ljmp
mov
inc
ss
xor
icebp
cmp
std
test
add
fwait
andb
cmpxchg
adc
in
mov
pusha
mov
imul
shr
push
add
jno
lea
stos
dec
lock
incb
dec
arpl
jg
movsb
mov
cli
sbbb
dec
sbbb
int
pop
xor
movsb
jo
aam
xor
scas
sbb
ror
pushf
pusha
daa
jbe
sti
stos
ret
repz
add
out
test
pop
rorl
ret
xor
loopne
cli
lcall
sub
and
ret
mov
sbb
call
pop
das
pop
ja
pop
or
sahf
pusha
pop
lcall
hlt
scas
adc
pop
je
aad
mov
stos
inc
dec
mov
out
mov
movsl
rcr
nop
jg
mov
sbb
mov
addr16
add
or
pushf
pop
mov
adc
lods
dec
and
popa
xchg
gs
in
cmp
gs
cmp
es
scas
sub
push
in
pusha
enter
adc
xchg
jl
fwait
rcrb
call
out
jge
es
mov
or
test
fbstp
mov
mov
cli
aam
xor
sub
in
outsb
sbb
movsb
mov
or
cmp
and
push
rcll
nop
dec
cmp
sbb
mov
sahf
lds
clc
pop
lock
inc
sub
pop
inc
shll
lea
insl
aam
in
cmp
or
sbb
lods
cmc
and
mov
iret
inc
inc
lret
xchg
outsb
mov
dec
sbb
jnp
push
push
mov
inc
out
xchg
adc
lahf
mov
dec
push
mov
in
outsb
testl
fdivl
xchg
lcall
imul
in
repnz
lahf
pop
std
pop
in
scas
pop
lret
in
and
out
xor
cmp
sub
cltd
jmp
fldcw
bswap
push
mull
push
test
lea
pop
or
jnp
xchg
cmp
hlt
mov
pop
jne,pn
adcl
test
and
andb
pushf
adc
pushf
sbb
or
or
cli
das
sbb
mov
add
leave
es
sarb
stos
xchg
cmpsl
push
std
loop
mov
mov
jl
xchg
push
call
rcrb
sti
int
jmp
xchg
lea
out
lret
lcall
inc
push
addb
mov
rcl
pop
dec
mov
in
or
adc
xchg
lock
cmp
outsb
into
and
pop
jmp
aad
push
push
mov
pop
xchg
in
cmp
lahf
mov
push
mov
cs
clc
sub
mov
stos
fadd
test
cmc
dec
pop
lahf
ret
xchg
std
pop
push
sbb
jg
and
and
mov
fcmovb
jp
pushf
fs
out
add
aam
jne
pop
or
gs
jo
cmpsb
inc
jge
adc
insb
lock
mov
sbb
pop
xor
cmp
bound
or
xchg
or
data16
dec
xor
xchg
add
sbb
iret
int3
scas
scas
xchg
jnp
dec
jbe
xchg
mov
fisubrs
xor
xchg
or
xor
push
push
or
push
call
inc
add
test
push
push
cwtl
fs
cmp
fcoml
scas
mov
ljmp
jp
outsb
scas
inc
adc
add
pop
sbb
xor
xchg
push
dec
inc
pushf
jmp
and
push
out
pop
pop
loop
sbb
xchg
or
rclb
cwtl
xor
andb
pop
jp
dec
lods
fdivs
insb
mov
shll
push
mov
xchg
les
pusha
orb
cmp
aad
leave
fildl
push
outsb
mov
xchg
mov
rorb
xchg
sub
jle
jns
data16
push
in
mov
int
add
cmp
cmp
movsl
jb
jo
push
inc
xor
sbb
movsl
and
das
mov
lret
add
xor
les
pop
pushf
int3
add
inc
or
mov
xor
mov
insb
imul
jl
sub
add
pop
mov
xchg
sbb
clc
daa
hlt
mov
mov
jb
jae
sbb
fdivl
dec
push
addb
push
cmp
push
jmp
cmp
add
push
mov
pop
mov
andl
pop
out
sbb
mov
idivl
jg
mov
cwtl
lea
inc
inc
push
cmp
pop
adc
inc
mov
sbb
test
cmpsb
pop
daa
jo
test
push
repz
call
ret
jge
mov
sub
push
movsl
push
mov
inc
mov
test
mov
dec
add
sub
lock
ret
inc
out
or
jl
or
es
js
jae
mov
fdivrs
mov
out
mov
push
bndstx
jl
sub
insb
xchg
test
test
andl
mov
fdiv
jle
call
push
mov
mov
adc
bound
shll
mov
inc
fcmovnu
sub
or
addb
aam
mov
push
lahf
pusha
cmp
addr16
mov
or
fdiv
push
shrl
xor
xor
mull
jecxz
push
xchg
cmp
ret
repz
push
dec
and
pop
jns
jmp
rclb
out
or
sbb
leave
jmp
clc
dec
xlat
test
rorl
push
add
pop
pop
sub
and
and
xchg
mov
mov
xor
and
xor
popf
lret
xchg
test
mov
inc
jno
into
push
push
cmp
push
ja
push
jg
adc
loop
pusha
fldl
dec
xor
call
mov
mov
jae
test
test
inc
daa
bound
loopne
mov
push
add
adc
clc
cmp
jl
out
cmpsl
xor
pop
jb
fsubl
pop
push
icebp
iret
cld
cmp
adc
pop
and
jb
push
cli
xor
nop
pop
push
xor
repz
ljmp
adc
aaa
add
aam
jo
mov
jnp
in
dec
mov
sbb
sub
sbb
pop
idivb
xor
jp
or
xor
mov
aas
xor
cmpsb
push
int3
mov
popf
pop
push
sbb
fildl
inc
fiadds
inc
in
jae
js
inc
test
and
data16
int3
and
rclb
je
mov
mov
stos
sub
and
mov
lret
and
inc
sbb
stc
movsl
fldenv
movsl
lahf
push
insl
cwtl
mov
pop
or
add
mov
mov
testb
scas
dec
lds
dec
add
and
in
and
shll
sub
push
push
dec
out
insl
inc
push
rorb
fldcw
lahf
dec
mov
jns
out
and
pop
or
pop
std
mov
fnsave
xlat
xchg
xlat
mov
adc
fstps
adc
push
in
pop
push
inc
loopne
jl
test
in
mov
mov
adc
xchg
mov
dec
icebp
pop
mov
jae
jne
aas
push
xchg
and
ficoml
pop
push
pop
or
lods
and
imul
dec
jecxz
arpl
fcompl
testl
test
sub
scas
ret
add
fcmovbe
mov
out
neg
sbb
pop
dec
lods
add
mov
push
insl
jge
in
sti
xor
test
das
push
add
fsubl
in
fnstenv
cmpsl
pop
stos
ret
push
rclb
test
xor
pop
das
pop
pop
mov
pushf
mov
into
sub
in
in
pop
pop
cltd
push
mov
rcll
loope
cli
enter
popf
adc
dec
je
and
pop
inc
adc
sbb
dec
jb
jl
outsb
jo
jmp
pop
inc
mov
lret
ds
mulb
jns
xchg
cmc
or
ret
ss
stos
or
mov
fldenv
sbb
sahf
je
jo
imul
bound
sti
loop
imul
cmc
cld
imul
jmp
ret
and
pop
out
aam
and
mov
push
jg
clc
out
xor
dec
loopne
push
adc
jnp
shr
cmpsb
xlat
outsl
xor
ror
xchg
inc
cld
mov
subl
lahf
fwait
test
and
popf
mov
sti
add
sub
stos
mov
dec
adcl
jecxz
insb
jns
dec
scas
movb
cmp
lods
cmc
ffreep
adc
aam
add
adc
adcb
push
push
popa
xchg
jae
xor
fsubrs
mov
add
adc
push
push
fcmovu
stos
sub
mov
mov
mov
out
ja
iret
jmp
add
cld
xchg
sarl
push
jg
push
push
add
mov
leave
fisubl
mov
cmpsl
inc
mov
sti
adc
push
push
mov
scas
cmpsl
enter
jb
test
and
push
push
jno
push
push
movsb
mov
xchg
xor
popf
ja
leave
lock
fildll
int
or
lret
cli
lret
mov
gs
jae
shrb
push
adc
nop
cmp
add
cltd
cmp
and
orb
inc
repz
lds
sub
push
int
adc
fidivs
rclb
fs
push
jb
or
idivl
ja
push
dec
enter
adc
adc
inc
repnz
dec
xor
mov
jl
das
jl
imul
mov
cmc
dec
repnz
jl
cmpsl
push
outsl
add
pop
or
push
pop
mov
cli
pop
xor
pop
add
lret
push
icebp
leave
aaa
cli
ljmp
test
out
aad
mov
jns
in
fwait
add
push
jb
movsb
jecxz
shl
sub
sbb
ret
bound
add
inc
mov
sbb
outsl
lock
dec
xor
rclb
xor
xchg
mov
sar
inc
popa
dec
pop
cmp
outsl
cmp
sbb
xchg
jl
inc
movsl
pushf
pop
loop
std
sti
loope
xor
pop
adc
sahf
loopne
nop
xchg
dec
pop
insl
mov
adc
mov
push
data16
icebp
push
insl
cmp
inc
ja
into
dec
jle
ds
dec
fbld
subl
jecxz
push
aam
setns
enter
cmp
push
movsb
stc
rcl
cmp
mov
jbe
inc
jns
cmp
jns
shll
pop
cmp
mov
mov
jge
insb
pushf
insl
outsl
pop
cmp
dec
sub
loope
dec
mov
jmp
dec
stos
insb
int3
das
xchg
ss
mov
jmp
mov
push
sbb
or
popf
stc
mov
ret
add
cld
rol
adc
jnp
rcll
jbe
jmp
ds
inc
ljmp
mov
push
mov
outsl
cmp
icebp
dec
repz
mov
scas
cmpsb
dec
pop
push
cmp
mov
fdivs
push
hlt
mov
mov
xchg
loopne
stos
adc
or
mov
mov
lret
ja
frstor
jns
lods
icebp
iret
in
pop
pop
cmpsb
xchg
mov
outsl
xchg
xchg
inc
xor
and
je
shr
pop
jnp
xor
hlt
outsb
fcoms
jnp
gs
paddusw
push
mov
mov
rcrb
test
stos
jg
out
or
fmulp
ret
mov
push
xchg
xchg
mov
pop
push
iret
push
lahf
xchg
fdivrl
int
pop
jl
ljmp
xchg
daa
loope
shl
or
int
pop
add
cltd
imul
adc
jp
bound
aas
sub
das
fstl
cmpsl
sub
in
xor
pop
iret
addb
aad
sahf
push
daa
xchg
mov
cmpsb
cmp
mov
xor
cmp
add
int3
mov
sbbb
cmc
cmc
fisubrl
call
jno
jecxz
mov
repz
inc
fimull
addb
jae
inc
xchg
fmull
push
or
idiv
scas
inc
loope
fbstp
ss
mov
dec
aas
cltd
insl
repnz
cmpb
xor
cltd
mov
test
xchg
pop
inc
push
dec
loope
stos
adc
xchg
pop
sahf
sti
pop
mov
push
xor
pop
imul
lods
shr
cmp
sbb
push
and
ja
cwtl
jmp
xchg
mov
mov
jbe
dec
out
cmpsb
sub
ret
mov
and
in
mov
mov
add
cwtl
in
das
out
jl
mov
mov
mov
and
je
frstor
xchg
aaa
aaa
jmp
lock
mov
es
adc
out
add
or
in
mov
sbb
dec
out
movb
aad
cltd
sbb
out
adc
mov
lret
sub
lock
aas
lods
negl
imul
or
adcb
jl
jno
xlat
sbb
cld
sub
sub
fadds
mov
aam
mov
lret
arpl
outsb
mov
outsl
mov
lahf
mov
lods
idivl
cmp
fldcw
pushf
cwtl
js
cs
adc
lea
arpl
xor
out
inc
push
jns
pop
jg
pop
int
jnp
fcoms
js
insl
xchg
cs
xorb
add
out
inc
test
push
sbb
repz
aam
cs
ljmp
xchg
mov
cwtl
imul
sub
rcr
dec
mov
adc
pop
jo
jle
fdivs
cmp
fucomp
add
imul
xchg
sub
loope
pop
clc
fmuls
inc
mov
sub
inc
and
or
sahf
shll
pop
lret
sbb
test
jnp
xchg
jp
mov
lods
lods
jmp
sbb
add
stc
or
jno
jne
sti
lods
sbb
jb
fcomps
mov
enter
push
mov
int
scas
sub
mov
cmp
dec
popf
jb
push
sub
jmp
jg
push
sbb
int
repz
fcomp
loope
push
push
sbb
cwtl
adc
adc
loope
into
sbb
ds
stos
das
subb
mov
sub
rol
xor
push
jg
insb
cli
jecxz
mov
movsb
add
xchg
jmp
mov
mov
lcall
out
in
fldl
rorb
push
mov
cmp
lret
nop
aaa
xor
adc
mov
jno
xchg
ja
fsubp
pop
lds
in
in
aaa
arpl
mov
jecxz
out
sbb
mov
xchg
pop
xchg
lods
movsb
ja
xlat
addr16
lret
or
int
jmp
aad
xchg
dec
push
in
jno
pop
cmp
out
mov
xchg
push
testl
sub
cwtl
jb
push
inc
jle
fcomp
mov
mov
pop
xchg
lret
clc
xor
dec
repz
sti
imul
sub
push
scas
sbb
mov
stos
shlb
sub
xchg
test
sarb
test
dec
pop
gs
sub
sbbb
jne
dec
addb
mov
mov
jle
mov
out
xchg
je
lds
cmpsl
add
pushf
mov
xor
xor
pop
repz
addl
shrl
add
mov
sbb
push
fsubrs
or
dec
addb
fsts
cmp
addr16
bt
inc
or
jne
in
lahf
jp
sub
bound
adc
sbb
aam
jge
rcr
in
lea
push
inc
outsb
sbb
jmp
popa
outsl
or
cmc
ret
out
jbe
or
scas
lds
shlb
xchg
pop
dec
mov
mov
and
mov
xor
add
nop
nop
fnstenv
negb
or
add
sahf
adc
fwait
and
je
mov
dec
fsubr
jp
push
sbb
mov
cld
repnz
ljmp
pusha
mov
sti
rol
xor
push
loopne
and
andl
jno
testl
pop
popa
add
clc
mov
push
pop
jmp
mov
das
adc
mov
ret
sahf
xchg
and
push
sub
arpl
std
daa
mov
mov
pop
outsl
repnz
or
cmp
cmp
repnz
mov
sub
icebp
mov
shl
enter
pusha
fisubl
pop
rcrb
fwait
sub
arpl
cmp
jo
sbb
test
push
std
in
sbb
mov
push
clc
mov
mov
or
sbb
rcrl
les
add
xor
lods
pop
push
packssdw
loop
sub
sti
push
lds
shr
shl
pop
jmp
arpl
pop
and
movsl
mov
pop
cltd
add
add
pop
vpaddd
scas
call
in
imul
jbe,pt
out
mov
cmp
std
xor
scas
fsubrs
es
xchg
mov
stc
inc
not
pminub
hlt
fdivrs
mov
imul
push
imul
in
add
test
je
pop
inc
pop
inc
lahf
jge
or
lods
dec
push
ja
lds
push
scas
imul
test
js
lods
test
mov
ror
movsl
or
icebp
fisttpll
push
jnp
mov
inc
fwait
mov
ljmp
rcl
das
and
mov
fadd
fcmovnb
into
inc
cmp
arpl
fldt
ret
adc
movsl
mov
bound
sub
sub
test
imul
lock
jmp
sti
gs
add
push
sarb
push
push
sub
outsl
sub
ds
and
dec
popl
rcrb
lds
sub
mov
mov
or
or
dec
xchg
shlb
jge
cmp
and
ja
nop
test
lahf
pop
push
in
dec
or
addl
test
cmpsl
fs
stc
xor
decl
ljmp
jo
enter
mov
dec
je
adc
xchg
jns
pop
jle
test
jge
or
std
mov
sbb
insl
inc
or
push
mov
cmp
mov
xor
ret
jno
pop
jle
shrb
adc
sbb
xchg
jl
mov
jne
popw
scas
jmp
out
das
jne
add
std
sar
orb
sub
xchg
mov
add
mov
pop
je
cld
mov
dec
dec
mov
mov
ljmp
fisttps
shrb
push
push
mov
addr16
mov
into
and
or
lret
das
or
and
aas
shlb
sbb
rcr
inc
sbb
or
add
inc
pusha
xchg
add
dec
xchg
aas
sbb
pop
cwtl
cwtl
fmulp
es
inc
sbb
mov
mov
pop
push
or
jb
leave
in
pop
lcall
call
sub
mov
jecxz
ljmp
inc
xchg
lock
outsb
addl
shl
jbe
es
cmpsl
ret
inc
aaa
adc
aam
addr16
fsts
xchg
pop
sub
call
adc
je
leave
mov
pushw
out
push
dec
loope
cmp
adc
loopne
shll
in
lret
into
into
ud0
hlt
pop
pop
in
or
cs
or
into
lods
scas
inc
jmp
jns
fisubs
xchg
lcall
dec
clc
fsubl
pop
lods
push
popf
jecxz
inc
cmc
add
lret
sub
jp
fdivs
xchg
pop
xor
xor
or
sub
xchg
inc
or
into
stc
stc
add
leave
iret
xlat
and
insb
sbb
or
stc
lret
arpl
or
xchg
mov
mov
push
mov
inc
enter
out
push
mov
dec
sub
inc
inc
arpl
bound
mov
xorb
cmp
dec
xchg
movsl
aad
jb
inc
scas
push
ror
or
xchg
fs
jmp
cmpsb
scas
push
xchg
lods
adc
cmc
adc
cli
insb
push
mov
call
fadds
push
arpl
ret
arpl
cmp
shlb
pop
and
cmc
test
rcrb
adc
mov
int3
aaa
out
cmove
arpl
mulb
cld
xor
stos
mov
lcall
push
dec
jbe
pusha
push
sbb
mov
addl
pop
xchg
rorl
ret
iret
sbb
push
insb
cld
mov
mov
imulb
mov
mov
xchg
add
ret
movsl
xor
lcall
inc
or
push
fdivp
int3
dec
in
decl
subl
pop
mov
xchg
clc
cs
mov
enter
xchg
aas
jnp
jo
sub
lock
loop
sub
shll
stos
rcr
movsl
and
mov
xchg
sub
push
sti
iret
test
lret
mov
ljmp
add
mov
jo
js
mov
mov
outsb
movsb
xor
or
mov
or
adc
xor
clc
rorb
int3
xor
jp
xor
mov
test
xorb
xchg
or
sbb
repz
sbb
mov
lods
mov
js
in
ret
sbb
loop
jae
xor
xchg
in
jno
cwtl
push
xchg
push
cli
jno
mov
mov
xchg
cmpsl
adc
push
sbb
popf
frstor
pop
lcall
sti
push
push
shl
movsb
insb
repz
adcb
sarl
icebp
test
jo
sub
sbb
mov
xchg
test
push
pop
std
sahf
test
or
pop
dec
inc
mov
push
ror
cli
out
sub
inc
add
dec
xchg
mov
cmp
test
add
pop
mov
jg
pop
mov
add
repz
dec
sbbl
out
pushl
daa
and
test
add
ret
out
ficoml
xchg
jge
sub
dec
rcll
mov
into
and
lret
sub
and
xchg
cld
cmpsl
cmp
cli
scas
jmp
mov
roll
dec
bsr
sbb
int
cmp
in
clc
add
xchg
jecxz
aam
mov
add
pop
lock
xchg
ja
in
pop
mov
sub
inc
lret
xorb
mov
lds
sub
mov
pop
xor
push
test
mov
ja
loop
fmull
push
pop
rorl
jl
push
sbb
bnd
ficomps
xor
dec
roll
xor
push
pop
je
sub
and
and
and
xchg
outsb
xchg
mov
loopne
insb
mov
aaa
in
dec
dec
shufps
ficompl
scas
test
or
inc
out
adc
xor
lds
ficoms
mov
cmp
nop
arpl
add
inc
xchg
xor
sub
je
scas
adc
xchg
push
cmp
or
mov
push
jecxz
adc
cwtl
add
xchg
and
rclb
xchg
lea
xor
loope
pop
xchg
jp
push
jl
jbe
adc
test
loopne
loop
mov
mov
ret
iret
push
test
pop
cltd
jge
lods
pushf
outsb
int
loope
sub
dec
std
pop
shld
and
push
cld
dec
inc
xchg
jmp
jmp
push
mov
sbb
jae
cmp
clc
add
xchg
or
lahf
sbb
jns
scas
cld
inc
dec
mov
sbb
test
out
sub
add
scas
or
outsl
scas
mov
aas
add
fldl
test
pop
iret
dec
adc
aaa
push
push
add
mov
jl
test
inc
imul
sub
pop
orb
fildl
inc
jno
dec
pushf
adc
mov
clc
xor
xlat
adc
mov
mov
adc
and
dec
push
push
test
mov
aad
pop
mov
adc
push
inc
cmpsl
ret
push
dec
hlt
ret
mov
jbe
sbb
pop
cmp
fidivl
dec
ret
pop
pusha
mov
xchg
mov
jg
fs
push
inc
scas
dec
sbb
aam
and
lock
stc
mov
in
adc
jecxz
hlt
insl
test
adc
sub
lods
dec
mov
in
jbe
test
inc
push
in
cmc
stc
mov
hlt
inc
xor
imul
sub
rclb
loopne
fmuls
adc
imull
or
aad
jno
lcall
add
repz
jae
xchg
pop
fsub
xchg
out
inc
js
gs
push
add
inc
in
xor
or
push
xchg
lret
sub
mov
clc
push
jne
ret
enter
mov
loop
push
adc
mov
inc
es
mov
fadd
fwait
push
and
push
daa
pop
fdivrl
or
cs
xor
sbb
jmp
mov
inc
and
shll
dec
je
pop
aad
sub
xchg
roll
cmc
cmp
test
dec
insl
jae
sbb
cld
or
mov
enter
pop
jb
icebp
dec
or
in
lcall
loope
jge
adc
das
orps
xor
daa
and
mov
jns
lret
imul
xchg
les
scas
pop
fwait
insb
mov
mov
test
push
aas
jns
mov
mov
cmp
dec
xor
cmp
ss
fwait
mov
out
pusha
xor
fmulp
stos
inc
imul
rcll
pop
loopne
or
popf
sub
inc
cli
outsl
popa
jecxz
imul
xchg
xchg
mov
jbe
mov
push
test
idiv
outsl
push
je
into
sbb
pop
mov
and
les
les
sbb
imul
mov
pop
cltd
into
dec
mov
push
jl
movsb
notl
add
call
icebp
xlat
add
fmuls
xchg
and
pop
and
sub
fiaddl
cmp
adc
sbb
icebp
ljmp
jle
dec
add
and
iret
out
hlt
inc
daa
push
or
jl
and
call
cltd
mov
cmp
sub
xchg
in
or
xor
nop
addl
imul
lcall
dec
clc
stos
fldl2e
pushf
enter
cmp
pop
adc
ss
rcr
pushf
and
inc
and
andb
mov
cmpsb
jecxz
rolb
mov
pop
js
into
les
mov
sahf
clc
dec
mov
dec
xor
subps
sbb
lret
jg
sbb
cmpsb
xchg
add
out
jno
cltd
pop
cmc
les
or
jl
xor
push
or
push
aaa
iret
or
out
loope
jg
add
fisubrl
stos
push
xchg
and
pushf
add
jp
adc
push
int3
inc
and
movsb
fdivrp
mov
jmp
scas
dec
rcr
aam
aaa
or
ret
push
mov
push
je
aas
int
mov
les
mov
push
pop
mov
pop
hlt
fisubl
repz
adc
inc
iret
es
pop
mov
in
sbb
push
cmp
scas
movsb
push
mov
sbb
cld
imul
fs
out
ja
incb
inc
adc
adc
adc
mov
or
cmpsl
push
adc
repnz
lea
pop
or
inc
ret
and
mov
popa
loop
push
and
inc
xchg
mov
les
pop
leave
shll
inc
rclb
xchg
cmp
mov
sti
sahf
loope
adc
dec
xchg
jecxz
pushf
rclb
clc
es
push
xchg
push
pushf
hlt
push
push
pop
xchg
jne
aad
cli
fnstenv
jmp
jae
ds
push
pop
out
dec
inc
leave
mov
out
inc
mov
add
enter
pop
out
in
push
xor
mov
in
sbb
fisttpll
add
adc
test
pusha
dec
pop
nop
or
dec
mov
cmc
neg
outsb
adc
das
xchg
bound
jo
or
imul
pop
sar
sbb
pop
mov
dec
or
push
rorb
mov
arpl
jle
ficoms
adc
rorb
xchg
pop
add
insl
test
cmpb
mov
mov
iret
out
add
mov
dec
push
aaa
sbb
cld
jecxz
pop
dec
xor
cld
sub
xor
inc
mov
popa
mov
cmpsb
inc
lock
sub
les
sub
stc
pop
fiaddl
jp
mov
push
jg
cmpsb
add
push
aam
mov
out
arpl
xor
pusha
insb
cmp
rorl
add
adc
bound
mov
push
aas
or
mov
aad
lock
fmull
iret
les
lret
sbb
xchg
xchg
push
push
cld
mov
inc
mov
mov
sbb
and
cmpsb
or
jecxz
decl
push
paddw
inc
enter
xchg
test
sbb
dec
jns
add
or
lcall
xchg
leave
mov
scas
pop
pop
inc
call
dec
mov
mov
pop
push
pusha
mov
inc
stc
and
dec
es
lret
cmp
mov
mov
inc
xchg
push
jp
mov
lcall
loopne
adcb
inc
mov
push
daa
test
jp
cmp
add
lock
out
daa
cmpsb
pushf
adc
insl
cmp
push
and
mov
fildl
mov
and
push
jnp
pushf
mov
jb
das
pop
jno
and
sub
jns
sub
push
mov
lods
sub
cld
push
pop
sahf
out
sahf
pop
push
push
or
outsl
inc
pop
xchg
in
ret
mov
mov
in
mov
adc
movsb
outsl
mov
cld
test
pop
out
shll
pusha
mov
dec
jnp
push
lcall
push
sbb
scas
js
mov
leave
lret
pop
inc
addl
stos
bswap
push
mov
mov
mov
inc
aad
push
cmc
jge
xchg
fmul
dec
in
inc
or
repnz
mov
std
aas
sbb
add
cmpsb
aad
adc
test
loopne
je
inc
xchg
jbe
in
xchg
mov
leave
rcrl
les
cltd
movsl
inc
pushf
cmp
sub
cmp
push
push
mov
mov
jmp
out
and
inc
jae
jg
inc
test
push
add
inc
or
push
mov
orl
or
mov
dec
xchg
rol
xor
fs
psllw
lock
repnz
in
fdivr
pop
icebp
int3
addr16
arpl
imul
mov
pop
lods
cli
mov
inc
test
dec
xor
jo
xor
cmp
dec
cmc
adc
or
adc
lahf
add
sahf
stc
dec
loop
cltd
pop
xchg
fisubl
ss
and
jo
mov
mov
out
and
jg
mov
pushf
cmp
sbb
lahf
daa
pop
mov
inc
dec
push
add
ds
jbe
cmpl
pop
aaa
pop
pop
add
xchg
orb
fimull
popf
shl
jne
andl
stc
stos
adc
inc
cmp
cmp
dec
adc
and
pop
mov
fstpl
sub
int
ss
aad
dec
dec
xchg
cmp
cmp
les
xor
aas
jb
pop
stc
adc
mov
push
lret
jge
push
ss
in
clc
es
cmp
shll
push
xor
movsb
incb
inc
icebp
push
cmpsb
jbe
js
outsl
xor
clc
adc
outsb
ja
cmc
add
into
push
jne
fwait
lcall
adc
dec
jg
jns
mov
lret
enter
jae
rolb
add
push
and
xchg
movsb
fcoml
cmp
orb
repz
mov
sti
xor
push
add
add
adc
arpl
pop
movsb
imul
ljmp
cmc
cmp
jmp
test
dec
or
inc
sbb
pushf
and
sub
sbb
sbb
sti
lea
lea
dec
mov
enter
jmp
aas
jns
das
cld
cmp
lahf
mov
push
hlt
lcall
repnz
jle
aad
clc
lret
sub
or
fcomps
pop
rol
ds
jecxz
inc
dec
sbb
aas
xor
xchg
mov
mov
test
sub
or
mov
clc
enter
inc
dec
adc
outsl
push
sbb
pop
push
jbe
lea
xor
loope
loopne
pop
fs
mov
xchg
ficompl
add
sbb
mov
adc
pop
xor
mov
mov
addr16
ret
shl
repz
mov
cmpl
push
add
cmp
cmovs
jnp
fwait
pop
push
pop
inc
mov
aad
or
lahf
rorb
les
add
jmp
mov
vpmaddwd
popa
stc
cmp
rclb
or
icebp
mov
stos
inc
push
dec
mov
insl
movsl
daa
mov
xor
in
push
enter
jne
aas
test
fdivr
arpl
pop
orl
pushf
mov
sahf
mov
fiadds
mov
js
std
mov
loop
jmp
sbb
clc
xchg
and
mov
int3
jno
scas
mov
mov
in
push
insb
rorl
adc
ret
dec
push
push
repnz
sbb
sar
roll
cmp
adc
lock
icebp
bound
nop
movsl
cld
inc
inc
lds
dec
lock
add
push
int
dec
test
push
shrb
push
lock
test
push
fldenv
fisubl
jo
or
pmulhuw
mov
push
fwait
out
or
mov
sti
jb
mov
and
fisubs
fwait
push
adc
pusha
lret
mov
lea
push
pop
sub
dec
cmp
nop
mov
movsl
movsl
lret
xchg
or
es
sbb
pop
jge
shl
test
movsl
out
lods
out
cs
je
test
test
or
mov
mov
xchg
divl
and
in
mov
xlat
lods
mov
pop
je
adc
sub
inc
adc
out
mov
xchg
lods
mov
negb
call
ds
mov
insl
clc
xor
sbb
mulb
decb
mov
xchg
jo
daa
adc
faddp
arpl
xchg
bnd
adc
and
daa
in
daa
push
xlat
add
lret
daa
ljmp
mov
and
push
int3
idivl
sbb
out
or
mov
les
popf
mov
hlt
mov
scas
jno
rcrl
in
bound
mov
mov
fwait
hlt
sub
scas
movsl
imull
push
inc
sbb
and
scas
stc
xor
pop
lea
jmp
es
ret
xchg
sub
xchg
popf
test
das
nop
scas
jmp
cmp
fsubs
sbb
cs
push
sub
cmpsb
fdivrs
or
div
xor
cld
sub
sti
in
nop
pusha
gs
fmuls
sub
inc
inc
inc
decl
jne
std
aam
push
jnp
cmc
sbb
in
cs
jecxz
mov
popf
fmul
in
insb
mov
or
xchg
imul
jb
negb
fcoml
cmp
cmp
mov
push
mov
sub
outsb
cmp
jb
xchg
jp
mov
xchg
xor
or
mov
icebp
add
and
pop
sub
pop
mov
jno
cmp
popf
shrb
fwait
push
outsb
lea
out
mov
aad
jg
pushf
fstpt
jg
cmpsl
outsl
push
inc
xchg
clc
mov
push
pop
mov
jmp
and
or
call
cmp
pop
int3
mov
mov
fisttpll
fwait
dec
mov
test
inc
daa
mov
pop
nop
mov
in
mov
cmpsb
mov
fdivrl
addb
icebp
inc
out
loope
and
outsb
dec
jno
adc
jne
notl
cmp
sub
mov
and
les
arpl
std
in
fstps
hlt
loop
mov
out
push
jbe
cmpsb
pusha
jg
das
leave
out
imul
lock
lods
enter
andb
insb
push
dec
mov
jnp
out
jb
push
ja
mov
int
cmp
hlt
mov
pop
cltd
sti
mov
xchg
and
aam
cmpsl
mov
xchg
sahf
add
xchg
pop
inc
xchg
pop
ret
jge
call
in
dec
fldt
xchg
adc
scas
sbb
inc
mov
cs
imul
ja
les
inc
jnp
jmp
mov
fmuls
icebp
pop
jp
jae
repz
xor
sar
js
imul
cli
insl
insb
dec
shr
jmpw
clc
jo
fdivrs
andl
in
and
dec
pop
sub
lock
cmp
movsl
test
pushf
sub
sub
sub
les
rcrb
in
add
dec
add
pop
push
cmpsl
lock
call
push
daa
jno
mov
mov
sbb
sub
nop
dec
pop
xorb
adcl
inc
xor
add
mov
sbb
add
jp
lods
lret
push
loopne
nop
add
and
sbb
call
rorb
adc
or
or
dec
mov
cmp
inc
sub
xchg
nop
sbbb
and
push
add
jmp
jae
lds
add
leave
push
xor
and
pop
inc
adc
adc
pop
mov
adc
aas
bound
stos
daa
jge
cmp
stos
in
int
jge
ret
jmp
into
psubw
mov
cmp
pop
call
cmpsl
lods
mov
setae
sbb
push
out
cwtl
mov
mov
and
dec
push
mov
sbb
mov
dec
insb
divb
push
out
xchg
imul
pop
ds
adc
adc
fiaddl
xor
fildl
in
pop
dec
cmp
inc
dec
hlt
cmpsb
sbb
cmp
es
std
inc
pusha
cli
aas
sub
mov
test
inc
cmp
out
pop
das
and
sub
aas
add
mov
and
ror
enter
sub
mov
xchg
fists
es
ficompl
mov
mul
or
xor
ret
insl
inc
aas
add
cmp
push
sub
aaa
insb
scas
sbb
jnp
in
xlat
sub
flds
out
test
add
dec
xchg
fld
xor
pop
push
push
sbb
outsl
jp
push
cmp
add
sbb
lds
fsts
pop
decl
push
inc
inc
dec
out
pop
sbb
out
outsb
jg
loope
jp
divl
outsb
icebp
and
dec
pusha
hlt
stos
in
es
sub
xor
insb
call
es
lods
mov
cmp
daa
mov
dec
adc
out
xchg
popa
in
mov
imul
xchg
lods
cmp
scas
push
sahf
out
sub
lret
repnz
into
fildll
and
and
add
add
mov
ret
and
stos
out
push
fsubrl
mov
sbb
mov
sahf
jae
sub
ja
xor
and
mov
shl
sahf
mov
rorl
ret
orl
dec
int
sbb
jns
cli
mov
repz
dec
dec
pop
add
scas
mov
jg
mov
add
sbbl
les
or
nop
mov
fdivp
aad
sbb
iret
lea
movsl
push
push
pop
cmp
jb
xchg
mov
imul
nop
leave
jae
sbb
pop
xchg
cmp
pop
pop
sbb
scas
adc
adc
xchg
fnsave
push
xchg
mov
push
push
iret
inc
and
jb
addr16
pop
pop
xor
shrl
movsb
arpl
out
fcoml
xlat
xchg
jo
lods
adc
jg
das
dec
daa
mov
lret
ficoms
dec
mov
sti
and
dec
dec
pop
aas
jns
in
hlt
stos
cmp
imull
loop
hlt
stos
add
cmp
push
fcoml
ja
icebp
add
les
mov
sbb
mov
xchg
inc
je
je
lds
dec
aad
aaa
inc
and
cld
loopne
pop
xor
ss
cmpsb
gs
add
mov
or
and
sub
aam
or
mov
sbb
cld
sub
jne
inc
jns
jmp
xor
aaa
stos
inc
js
or
sbb
mov
xchg
imul
xchg
push
cld
mov
cmp
insb
into
cmp
fdivrp
mov
dec
stos
int
pop
outsb
push
addb
sub
pop
ss
push
mov
adc
pop
ds
cwtl
inc
pusha
addr16
fs
fwait
xchg
outsb
inc
repnz
mov
mov
mov
dec
jmp
mov
cld
test
stos
lret
orl
aad
popa
pusha
dec
pusha
stc
arpl
in
repnz
mov
xchg
cwtl
out
test
ret
push
mov
pushf
and
in
jnp
dec
les
in
lahf
jle
jnp
fadds
dec
mov
dec
out
sbbb
jg
push
or
popf
mov
xchg
mov
jl
imul
add
sbb
pop
mov
repnz
enter
outsl
push
test
jp
dec
call
insb
xchg
add
mov
lea
mov
setno
into
xlat
test
es
rcrl
daa
shr
ret
cmp
inc
movsb
rcl
out
popf
cwtl
fisubs
gs
mov
divb
push
gs
xchg
cli
sarb
sbb
shlb
inc
std
ss
cmp
insb
out
inc
rorb
outsl
fwait
pop
movsb
sub
push
and
outsl
xchg
test
adc
int3
adc
push
push
adcl
dec
mov
push
pushf
out
mov
dec
sahf
es
out
cltd
daa
lret
cwtl
mov
add
pop
fdecstp
xor
mov
xor
cli
ss
out
dec
jmp
adc
popf
cwtl
and
and
fistps
or
lods
mov
adc
sarb
inc
push
jmp
xor
dec
push
sbb
push
rorl
lea
sbb
ret
shll
pop
mov
lcall
mov
adc
das
push
call
sub
jno
pop
or
mov
jge
lret
fnstenv
xchg
adc
mov
sub
lea
arpl
dec
xchg
xor
cmpsb
mov
adc
xchg
sub
inc
fcmovbe
xchg
test
cltd
jle
push
shll
push
pop
mov
mov
or
rcl
push
popa
cs
sub
add
add
ret
sub
mov
scas
jnp
inc
mov
jl
negb
insb
sbb
mov
mov
insb
cmp
inc
and
icebp
inc
dec
cltd
clc
les
sub
xchg
daa
std
clc
sub
xchg
pushl
pop
test
sbb
adc
mov
lret
adc
andb
fldenv
pusha
movsl
fistps
mov
cmp
insb
stos
dec
cwtl
add
mov
in
popf
sub
punpckhbw
push
jecxz
aaa
inc
mov
cmp
orb
mov
aas
pop
ss
std
push
enter
pop
mov
inc
mov
das
jmp
das
push
pop
cmp
mov
or
and
lods
push
adcl
jne
iret
lods
push
fwait
aam
sub
pop
shlb
jmp
push
or
inc
scas
mov
mov
pushf
push
test
adc
jns
cmp
mov
fldcw
scas
out
decb
les
sti
pop
lods
subb
daa
fxch
cmpsb
cmp
inc
leave
cltd
mov
out
out
push
shlb
cmp
inc
pop
sub
rcll
mov
mov
inc
dec
int3
popf
lcall
sbb
mov
mov
push
adc
inc
dec
stos
cltd
lods
repz
xchg
cwtl
rolb
inc
aad
mov
daa
mov
or
and
mov
xchg
xorl
push
push
adc
popl
sbb
cltd
call
mov
add
clc
ror
das
sbb
lods
jmp
in
arpl
negl
or
dec
jecxz
fisubrl
adc
test
popa
mov
cmpsl
cmp
mov
cmp
mov
out
mov
jl
push
inc
jns
cmc
mov
mov
pop
pop
out
sar
push
es
sub
fadds
outsb
cmp
ja
divb
push
pop
mov
mov
fnstsw
sbb
lods
mov
ss
xor
stos
add
push
fcom
xchg
jne
addr16
test
in
popa
notrack
in
imul
inc
in
or
and
fwait
insb
je
xorb
inc
loopne
xchg
pop
daa
jp
imul
mov
test
fnstcw
out
fstps
push
adc
ret
xchg
into
cmp
jge
sbb
mov
pop
pop
sbb
arpl
and
mov
jg
jno
popf
mov
mov
lsl
and
or
jno
mov
paddw
pop
test
push
adc
sub
sbb
stc
lods
jo
leave
mov
push
movsl
insb
scas
aas
addr16
iret
hlt
push
fsubl
loope
xor
loopne
sub
aaa
pusha
and
mov
orl
mov
hlt
mov
xchg
jae
push
mov
add
cmpsb
xchg
test
test
inc
movsb
rolb
sub
lahf
aaa
decl
sbb
sub
scas
inc
mov
aad
mov
push
pop
cli
add
aam
outsl
leave
fwait
movsl
pop
xchg
cld
ljmp
dec
pop
gs
xor
cmpsl
adc
sub
pop
push
pushf
bound
js
fistpll
push
loopne
inc
add
sti
hlt
pop
cmc
push
mov
sti
call
call
lahf
neg
cwtl
daa
fidivrl
mov
orl
ja
mov
pop
mul
and
stos
adc
gs
cltd
insb
mov
loop
repnz
insl
pop
mov
sbb
cld
shll
pop
sub
int
adc
imul
cmp
sub
mov
scas
mov
mov
dec
adc
mov
and
aam
mov
stc
out
fwait
mov
and
inc
jns
cltd
hlt
outsl
shll
xchg
dec
int3
incl
int
sub
pop
xor
xor
cli
pushf
mov
cmp
sbb
jl
dec
daa
push
push
iret
loopne
movsl
mov
xchg
adc
adc
aam
pop
mov
push
wbinvd
xlat
leave
pop
xlat
adc
xor
and
push
or
les
jns
push
mov
xor
pop
sub
add
mov
loop
aas
lcall
sub
cmp
movsb
jecxz
or
cmc
dec
insl
nop
xor
and
daa
jo
xchg
jae
jecxz
jne
push
mov
aaa
pop
push
int3
fwait
test
fiaddl
test
cmp
mov
sub
mov
jp
xchg
mov
jecxz
test
pusha
movsl
lods
sti
loopne
hlt
pop
adc
adc
hlt
and
push
pop
in
imul
inc
inc
inc
dec
loope
test
pop
das
insl
cmp
fwait
in
inc
unpcklps
cmp
daa
bound
xlat
dec
pop
cmp
pop
imul
and
inc
mov
fcoms
movl
stos
fldcw
push
nop
xchg
add
icebp
mov
mov
test
orl
xchg
pop
dec
mov
pop
in
stos
mov
nop
test
jecxz
adc
adc
sbb
jnp
out
or
sbb
sbb
pushf
add
push
roll
mov
fisubs
add
jmp
push
and
xchg
push
adc
cld
stos
inc
sbb
ss
inc
cld
cmp
mov
lret
xchg
xor
xlat
sarb
in
ss
jmp
dec
aaa
rorb
iret
jge
mov
in
pop
addr16
adc
cli
jbe
add
loop
dec
jp
adc
and
test
push
mov
push
in
es
and
cltd
pop
inc
icebp
sti
lcall
sub
test
in
pop
sub
mov
cli
cmc
subb
sti
out
lock
mull
cld
out
sub
and
cmpsl
jbe
je
test
in
or
mov
je
dec
rclb
push
push
dec
push
mov
xchg
mov
and
outsl
pop
aad
sbb
add
iret
and
add
loope
scas
cmc
dec
mov
bound
je
jle
mov
sbb
out
inc
insl
xchg
movsb
xor
mov
popa
iret
aaa
cld
jecxz
push
jb
add
out
addl
es
dec
and
xchg
xor
outsl
aad
push
imul
jge
sub
roll
adc
je
jb
adc
rcll
call
mov
jg
lock
movsl
ds
mov
sahf
mov
dec
out
sub
mov
mov
adc
mov
nop
stc
mov
gs
cmp
mov
insb
sub
call
add
out
dec
rorl
in
mov
scas
fcomip
into
pop
rcr
movsb
xchg
lods
push
fnstsw
add
imul
aad
sbb
subb
mov
pop
inc
fs
inc
sub
sub
lret
test
adc
rolb
je
dec
ss
les
jle
lods
jae
jle
dec
into
pop
cmp
sbb
add
xchg
xor
sbb
jge
sarl
sbb
fs
adc
mov
jbe
out
mov
lcall
mov
cmp
loop
in
pop
mov
pop
scas
mov
xor
push
aas
shr
jl
repnz
rclb
incb
fwait
xchg
std
push
or
pop
jp
es
fcompl
idiv
insb
in
outsb
aam
call
add
popf
xchg
fsubrs
jns
push
mov
dec
xor
xor
mov
xchg
push
cwtl
xchg
pushf
adc
ss
mov
mov
andl
notl
lods
adc
inc
lcall
mov
loop
pop
test
clc
cmp
push
mov
enter
dec
inc
mov
or
fs
xchg
sbb
insl
fcoms
rcll
imul
stos
dec
xchg
in
inc
or
jnp
in
frstor
add
cli
outsb
dec
fldl
adc
push
add
dec
leave
mov
push
in
push
lahf
rorb
mov
fprem1
pop
dec
sbb
loope
inc
jp
xor
push
scas
xor
lcall
push
inc
push
push
and
nop
adc
mov
out
cwtl
ljmp
int
cld
add
cvtps2pi
add
add
jbe
inc
jg
nop
in
sti
cmp
fld
mov
jg
cmp
rorl
cmp
and
pushf
dec
adc
jmp
sbb
adc
mov
push
jecxz
xchg
jl
ret
daa
cmp
clc
push
xchg
cltd
push
lea
jle
push
call
and
jae
iret
in
imul
pop
push
popa
xchg
dec
rcl
std
in
sbb
in
xchg
fcoms
mov
test
popa
mov
cmp
jl
test
dec
arpl
dec
jmp
addr16
ret
in
or
icebp
test
and
popf
inc
sbb
nop
sub
negl
adc
mov
push
push
pop
jle
push
js
mov
aaa
jle
jl
inc
jmp
push
aam
and
inc
xlat
cmp
adc
mov
cld
jne
mov
hlt
pop
push
fistps
cld
push
ljmp
jg,pn
mov
dec
movsl
lea
call
imul
test
inc
inc
mov
cltd
mov
xchg
cmp
xor
push
jge
fadds
sbb
into
inc
inc
les
sbb
outsl
mov
repnz
xchg
sub
mov
popf
push
add
das
inc
shlb
jmp
sbb
sbb
cmp
cltd
add
push
scas
inc
xchg
xchg
ljmp
jae
test
xor
cmp
adc
mov
xchg
mov
int
loopne
jle
outsb
hlt
jbe
jmp
pop
nop
add
roll
fsubrs
enter
cmp
jg
mov
sbb
inc
cmp
sbb
xchg
mov
notl
arpl
mov
mov
inc
mov
add
pop
icebp
xchg
movsl
je
and
popa
stc
xchg
adc
cmp
cmp
pop
xchg
test
xchg
xchg
mov
test
insb
arpl
xor
mov
jg
pop
inc
rcll
arpl
ja
cwtl
test
popl
dec
ljmp
jo
inc
push
fcompl
mov
adc
mov
cld
mov
scas
inc
mov
jnp
inc
outsb
and
sbb
jno
and
stos
lds
orl
in
xchg
ret
rclb
not
xchg
inc
bound
and
cli
cmpsb
mov
cmp
add
mov
adc
test
xor
mov
mov
push
pop
cmp
mov
push
sahf
add
push
icebp
or
jecxz
cmp
xchg
dec
add
vpsrlw
mov
xchg
insl
sbb
js
mov
push
enter
inc
imul
inc
stos
ljmp
inc
push
sbb
mov
test
mov
sahf
dec
mov
fwait
test
rorb
jb
pop
xor
mov
aam
call
in
jg
pop
and
cmp
push
push
pop
push
pop
enter
push
inc
stc
rcrb
push
pop
jp
aam
ss
je
std
stos
mov
sbb
inc
inc
in
aaa
fistpl
sbb
orb
lret
cwtl
cmp
jae
and
adc
int3
pop
inc
icebp
add
movsl
mov
addb
or
xor
lods
or
inc
mov
aam
mov
repnz
and
add
jns
inc
and
inc
fcomip
aas
sbb
pop
add
and
shrl
xor
dec
repnz
adc
mov
int
sar
imul
xchg
dec
loopne
daa
adc
mov
adc
mov
sbb
xor
push
insl
clc
in
imul
inc
and
leave
testl
pop
push
les
add
orl
in
icebp
outsb
xor
xchg
lods
xlat
iret
jle
aas
lahf
insb
sub
pop
cltd
pop
dec
sub
mov
xlat
jbe
out
pop
sub
outsb
add
rol
add
add
test
ljmp
mov
icebp
dec
or
daa
xor
roll
outsl
sbb
aad
out
xor
icebp
adc
sbb
paddd
notb
sti
mov
or
mov
and
inc
jmp
xor
mov
cltd
jo
cmpsl
mov
mov
xlat
adc
or
xchg
sub
lret
xchg
sub
add
add
jl
in
ret
movsb
or
jl
cwtl
push
sbb
addr16
dec
scas
imul
in
neg
mov
fwait
mov
jnp
mov
cmp
mov
ffreep
js
add
jge
cmp
dec
jmp
xor
sbb
sub
stc
adc
xlat
cmp
pop
jge
cmp
cmpb
mov
imul
inc
add
and
xchg
mov
outsb
clc
sbbl
mov
cs
je
movsb
cwtl
dec
repz
in
xlat
xor
mov
mov
mov
ljmp
flds
sbb
addr16
pop
sub
addr16
test
sbb
pop
pop
push
lahf
dec
mov
popf
test
fistpl
fsub
cmc
sub
cmc
loope
dec
mov
scas
les
imul
push
xor
push
cld
std
mov
mov
cmpsb
mov
mov
les
clc
lcall
xchg
loopne
jbe
push
stos
pop
dec
cmpsl
inc
fdivrs
jns
or
aam
jge
and
dec
cwtl
scas
xchg
mov
jo
xchg
xchg
in
jno,pn
push
dec
shrb
sub
mov
dec
mov
fsubs
mov
xor
and
data16
mov
hlt
insl
dec
add
cmp
out
adc
sub
pop
gs
mov
je
mov
cltd
mov
std
push
out
xor
lods
notb
pop
cmp
clc
loop
scas
jb
adc
out
pop
test
mov
push
pop
sub
stos
stos
xorl
dec
in
shlb
cs
cmp
add
pop
xchg
or
pushf
push
mov
outsb
inc
mov
les
fwait
dec
sub
test
cmp
loope
cmpsb
popf
adc
repz
test
push
scas
sbb
push
cwtl
xchg
inc
loopne
in
xor
hlt
sbb
fnsave
or
fiaddl
sub
and
jne
xchg
lcall
and
sub
push
add
sbb
lret
sbb
mov
int3
cmp
jne
movsb
cmp
dec
sbb
push
xchg
cmp
pop
sub
xchg
pop
cmpb
inc
cwtl
bound
rcrb
insb
or
jle
loope
js
push
mov
sbb
push
jnp
arpl
rorl
xlat
xchg
push
and
jp
popa
loop
dec
mov
mov
out
inc
fmuls
xchg
jae
das
push
cmpsl
insl
ss
loopne
sbb
movsb
cmc
xor
les
daa
and
insb
call
dec
add
push
mov
and
ljmp
mov
mov
mov
cmpl
jg
aas
mov
push
mov
cmpl
or
or
int3
je
push
adc
outsb
xorl
insl
out
aad
push
ljmp
push
and
outsl
test
ss
ret
dec
filds
mov
mov
or
aam
jecxz
and
xor
fidivrs
enter
jnp
test
mov
and
mov
aaa
inc
sbb
xchg
cwtl
sbb
cmp
mov
push
clc
pop
inc
lahf
and
cli
mov
push
pop
sub
test
imul
outsl
lock
cmp
fisubrl
aam
fsubrl
lahf
orb
rorb
xor
mov
test
insb
fcoml
push
jo
subl
pop
inc
add
ret
mov
mov
mov
movsl
iret
xchg
xchg
push
outsb
loopne
cld
sbb
and
mov
or
mov
sbb
mov
mov
aam
movsb
cltd
ret
lcall
fistl
stos
sub
js
hlt
aam
pushf
xchg
fcoml
jnp
movsb
and
mov
mov
jecxz
inc
les
push
mov
sahf
loope
inc
sti
stos
mov
cld
mov
arpl
das
stos
xchg
enter
cli
sub
ret
jg
dec
insl
lahf
in
push
and
xchg
pop
inc
fisubs
popf
pop
push
xchg
xchg
xchg
jnp
rcll
mov
push
jg
jmp
dec
into
outsl
repz
push
push
jns
aam
push
add
add
adc
jp
hlt
cs
lret
sbb
mov
fisubs
je
sub
pop
test
ffreep
mov
sub
scas
and
or
or
int3
pop
sub
inc
stos
xor
fwait
repnz
lds
xor
scas
cmp
jbe
dec
jo
add
nop
xor
adc
xchg
mov
mov
pop
insl
repnz
xchg
loope
orb
ret
rorb
jnp
lock
xchg
imulb
inc
cmp
out
clc
cmpsl
or
shl
jns
pop
ljmp
dec
lret
das
rclb
xchg
xor
fwait
and
fisubs
sub
mov
pop
xchg
dec
pop
incb
sti
jno
stos
mov
cmpsb
jne
fistpl
jnp
repnz
sbb
test
cmp
jmp
out
xor
pop
and
mov
mov
ljmp
clc
fs
dec
dec
int3
js
pop
pop
out
scas
lahf
aad
shl
pusha
repz
ret
cmp
and
add
xchg
imul
dec
outsl
inc
outsb
aam
xchg
imul
mov
fcmovne
mulb
arpl
fs
int3
xchg
das
push
and
int3
mov
mov
ja
and
pop
jae
push
pop
aaa
call
rorb
add
or
aas
mov
xchg
push
ret
ret
imul
push
inc
add
xchg
xchg
xlat
or
pop
and
imul
mov
jl
jg
mov
sar
aam
in
nop
and
push
in
int3
mov
sbb
lahf
push
sub
dec
adc
addr16
mov
mov
leave
mov
pop
or
jg
sub
outsb
dec
inc
xor
sub
jmp
dec
in
sub
mov
lods
dec
sub
xchg
shlb
inc
inc
fadds
xor
repz
mov
into
mov
adc
cmp
pop
arpl
scas
jle
rcr
test
in
push
add
sahf
cmp
fistps
push
xor
sbb
fdivr
stc
or
js
ljmp
mov
cltd
jl
mov
xchg
dec
pop
ret
int3
push
test
sbb
xchg
pop
jbe
mov
or
adc
push
outsb
es
push
inc
icebp
add
bound
add
stos
add
cmovl
scas
je
sbb
pop
ficoms
loope
test
test
leave
pop
cld
aad
outsl
pop
fcom
xor
adc
stc
rorl
jb
sbb
ret
xchg
cmp
nop
xor
int3
int
ja
insb
das
ret
test
sub
jmp
mov
jmp
add
and
jns
fs
fistpll
dec
dec
fnstsw
cli
in
sub
pop
iret
addr16
mov
mov
into
inc
jp
and
or
lahf
mov
jecxz
mov
mov
arpl
and
das
bound
movsb
ss
mov
adc
xchg
popf
cmp
inc
addl
fmulp
repnz
push
pop
add
mov
sub
xchg
mov
imul
scas
fdivl
fnstenv
adc
aam
dec
dec
dec
mov
daa
clc
adc
mov
push
sbb
mov
hlt
pop
das
mov
mov
or
cmc
sub
cld
inc
fcoml
adc
dec
je
sub
sbb
test
jp
xorl
loop
cmp
in
sbb
aas
in
or
lea
iret
sub
inc
inc
jle
rclb
sarb
mov
ret
push
or
cs
mov
dec
xor
xchg
add
jmp
sub
sbb
dec
and
hlt
ret
gs
inc
xchg
or
roll
xor
or
fisttps
aaa
dec
sub
push
mov
bound
lds
and
sub
jle,pn
aad
mov
xchg
mov
ljmp
and
test
mov
mov
ljmp
inc
or
stos
pushf
leave
fs
jecxz
insl
sbb
lahf
jp
mov
dec
pushf
pop
push
inc
aad
push
fbld
fwait
jl
aam
or
push
lcall
enter
lahf
enter
inc
push
or
clc
loope
adc
jbe
push
push
fisubrs
int
out
mov
dec
in
cmp
leave
aaa
xchg
pop
lea
sahf
cmp
stos
shr
push
and
mov
fcom
fsubs
xor
bound
cmp
jg
stc
xor
adc
sysexit
clc
aas
out
sub
mov
add
xor
imul
mov
in
sub
push
repz
out
arpl
arpl
pop
ror
mov
lret
sbb
push
fnsave
adc
loope
fs
xchg
xchg
stos
data16
les
es
into
pop
cli
pop
push
cmpsl
fstps
lret
cmp
xor
call
mov
pop
jne
inc
das
jmp
cmp
data16
adc
shlb
mov
insb
pop
das
sub
popa
ja
lods
cli
repz
push
mov
daa
pop
pop
popa
mov
mov
mov
shl
mov
xchg
stc
inc
cld
adc
jg
cmp
out
pop
mov
scas
mov
sbb
fxch
imulb
ljmp
or
enter
add
pop
in
lret
aas
insl
mov
and
gs
lret
ja
sbb
sti
mov
fst
inc
loope
inc
jbe
cmp
dec
scas
lds
pop
jmp
xor
jp
imul
dec
mov
add
movups
pop
or
cmpsb
mov
andl
sar
cmp
jo
insb
rcrl
int3
and
cmp
pop
jmp
xchg
push
mov
pop
sub
push
mov
lock
jnp
inc
sub
dec
jo
sub
cs
imul
add
pop
divl
ljmp
mov
pop
out
inc
lret
notb
repnz
inc
push
out
dec
popa
jmp
inc
test
subl
jg
sub
jne
scas
hlt
test
lcall
in
pop
pop
movsl
jg
sbb
outsl
paddusw
add
pop
inc
or
jnp
and
popa
jl,pn
fildll
test
and
adcl
cmp
sti
popa
sub
ss
insb
je
dec
test
add
xchg
adc
lock
cmp
jle
or
adc
jns
jne
mov
lahf
adc
mov
push
xchg
xor
nop
hlt
jle
loop
ljmp
add
jae
jp
fsubrl
loope
int
ret
inc
imul
jb
mov
jno
scas
mov
sub
inc
imul
mov
pop
daa
cld
shrb
xchg
mov
fmuls
push
pop
pop
jp
stos
in
fdivrl
mov
mov
mov
dec
push
xor
lea
sbb
push
int3
mov
test
test
mov
fcompl
repnz
mov
sbb
hlt
shl
aad
es
sbb
xchg
rolb
pop
adc
dec
jg
add
jg
jno
cmpsb
addr16
fidivrs
push
mov
jmp
sbb
int
movb
aaa
out
cmpsb
pop
ljmp
mov
cmp
stos
test
call
in
push
shr
pushf
imul
std
sub
jmp
cmp
or
mov
push
dec
xchg
in
mov
call
fidivl
push
fsubl
mov
dec
subl
in
mov
xor
out
sub
mov
jp
jae
mov
mov
mov
xor
and
test
mov
adc
mov
js
fsubp
js
popa
push
or
js
hlt
lahf
mov
mov
mov
and
sbb
xor
iret
mov
jp
or
jno
xor
xchg
xchg
jecxz
xchg
mov
out
movsb
or
mov
jbe
inc
rolb
addr16
push
adc
dec
pop
mov
outsl
js
fidivrs
daa
into
mov
mov
mov
shll
jmp
mov
jnp
lret
iret
dec
xlat
lcall
cmovb
add
lods
mov
ret
movl
sbb
mov
addr16
or
mov
mov
ja
mov
inc
push
ja
cmp
pop
dec
add
mov
fs
repnz
insb
push
movntq
cmpsb
outsb
jbe
in
xchg
inc
jp
hlt
cli
int3
divb
lds
sahf
cmpsb
mov
cltd
arpl
add
cmp
dec
fnstcw
shl
lock
mov
xchg
andl
insb
mov
in
lar
jecxz
cmp
push
sub
sbb
dec
movsb
jb
adc
psraw
jb
mov
movsl
or
sub
and
in
mov
cmc
pop
and
shrb
fildl
lret
jecxz
shll
hlt
mov
or
stos
mov
sub
lea
aas
xchg
sub
mov
adc
btsl
or
fs
xlat
pop
jge
faddl
cmp
stos
pop
lods
sub
iret
orb
pop
or
mov
jbe
jne
sub
sub
std
xchg
adc
sbb
mov
sbb
jmp
sbb
jo
cmp
mov
clc
sub
pushf
pop
pop
test
adc
jb
or
imul
lcall
ret
and
cmc
push
mov
cwtl
inc
loope
xchg
repnz
movsb
clc
push
and
mov
lods
push
sbb
arpl
cmp
adc
vcvtsi2sdl
sub
push
nop
stc
mov
mov
and
push
out
in
or
add
jg
jns
std
push
into
jbe
push
cwtl
mov
or
leave
lds
mov
jno
cmp
insl
sbb
sub
inc
and
and
dec
fstl
clc
aaa
jp
jns
mov
mov
imul
cmp
test
sbb
xor
push
xor
inc
dec
dec
mov
call
loope
scas
pop
inc
and
jp
dec
scas
insl
sti
icebp
fchs
and
punpckldq
bound
inc
push
inc
xchg
cmpsb
loopne
lahf
jecxz
push
add
aas
jno
call
pop
dec
xchg
incb
adc
adc
adc
pop
and
xor
mov
or
dec
fprem
inc
xchg
loopne
dec
es
mov
int
fidivrs
test
repz
pop
enter
mov
andl
ljmp
mov
gs
xlat
cli
mov
jp
lds
sbb
adc
aad
ret
sub
nop
xor
iret
idivl
xor
orb
jo
rorl
inc
dec
cltd
leave
scas
inc
daa
mov
jae
out
adc
les
xchg
sti
pop
popa
jbe
or
outsb
cmp
inc
movsb
movsb
lock
fucomp
hlt
fcmovu
lds
mov
mov
mov
add
cmp
and
jge
or
jmp
orl
push
push
mov
mov
dec
inc
mov
fnstcw
lahf
mov
push
stc
shrl
dec
sub
mov
dec
loope
dec
jp
xor
mov
xchg
icebp
push
loope
lret
aad
or
sbb
ja
je
jg
ret
adc
lahf
fsubr
sub
sbb
inc
dec
pop
jns
cltd
imul
fistps
scas
xchg
js
pop
xchg
cmp
or
inc
push
jmp
add
pop
inc
movsb
add
cmp
mov
mov
mov
scas
test
movsb
scas
negb
jecxz
es
sbb
add
es
popf
cli
pop
sbb
push
sub
insb
dec
sub
arpl
mov
inc
push
or
pop
js
fisubrl
js
push
mov
mov
or
mov
dec
fidivs
mov
sbb
out
lret
mov
or
pop
not
push
pop
add
das
ret
popa
pop
idivb
adc
test
in
lret
inc
insl
pop
xor
or
pop
test
das
and
sbb
pop
es
mov
mov
incb
jns
add
or
jns
rclb
push
test
sub
aam
cmp
jne
sbb
sbbl
sub
push
xor
or
adc
push
jne
adc
out
mov
repnz
lcall
gs
push
jns
aaa
aad
inc
xchg
jg
sub
pop
jp
sub
data16
mov
cmp
lods
ffree
jmp
icebp
shrb
cmc
lods
mov
jo
inc
rcll
lret
leave
mov
cmp
adc
mov
loope
aaa
sbb
mov
nop
xchg
sbb
jecxz
fadd
mov
mov
daa
cmp
dec
popf
cmc
rep
push
stos
leave
cltd
or
cmp
cmp
and
jbe
or
adc
cmp
fucomi
mov
add
adc
inc
dec
add
movsb
or
cmp
sbb
jo
jae
inc
sbb
cmp
or
fistl
sub
mul
dec
insl
xchg
and
movsl
xchg
mov
lret
xchg
adc
sbb
imul
sbb
gs
fildl
mov
xlat
iret
pop
aad
cltd
sbb
mov
cmp
dec
mov
push
jge
push
notb
and
arpl
xchg
jo
cli
fisttps
mov
xorl
jo
or
bound
or
daa
push
ss
sarb
dec
mov
testb
or
test
nop
cmp
jl
fidivs
lret
loope
mov
sahf
subl
inc
mov
loopne
mov
ret
push
mov
in
pop
jp
jbe
or
lahf
xchg
push
ror
xchg
sbb
push
cmp
in
ss
adc
xor
mov
push
daa
rol
dec
dec
cmpb
sarb
jno
fnstenv
push
push
das
or
ret
dec
lea
mov
jo
in
cmpsl
adc
inc
add
jl
pop
out
mov
pop
lods
insb
aam
imul
adc
gs
fistpll
aam
cwtl
mov
mov
jl
mov
loope
jb
jge
inc
in
addr16
push
xor
into
xchg
insb
inc
jmp
mov
xchg
sub
pop
addr16
je
loop
xchg
and
repz
adc
cmp
jmp
pop
mov
xchg
sub
shrl
in
dec
movsb
pop
add
add
daa
shl
sarl
or
stc
and
xor
cmp
cld
mov
add
lds
test
mov
das
cwtl
fpatan
test
insb
fwait
xor
jnp
test
ss
fcomp
testb
push
call
jno
rorb
pop
or
sahf
movsl
lds
fcomps
and
pop
dec
orb
xchg
movsb
or
push
aas
push
pop
sub
shl
inc
mov
aaa
test
mov
pop
cmp
sahf
dec
mov
shl
mov
es
not
js
les
pop
ret
imul
xlat
and
fwait
mov
sbb
mov
flds
adc
xor
loope
or
imul
jmp
das
sub
and
mov
inc
dec
push
jb
cmp
push
cmp
push
mov
pop
jecxz
ja
xchg
pop
sbb
ja
shlb
dec
push
gs
cmp
shlb
fcomp
in
aaa
adc
inc
cmp
cltd
pop
sub
loopne
push
jae
loope
lock
and
fcomps
insb
mov
xchg
stos
mov
xor
in
inc
sbb
and
mov
adc
adc
jge
jns
es
outsl
jae
arpl
lds
mov
mov
pop
test
jmp
js
cmpsl
jg
and
sbb
push
and
mov
pop
into
mov
arpl
repz
loopne
bound
pop
jb
nop
jae
aas
or
mov
inc
das
mov
fdivl
mov
dec
jmp
xchg
cmp
jle
call
shll
and
fisttpll
sbb
imul
mov
push
mov
in
in
dec
xchg
repnz
stc
bound
fs
test
adc
int
inc
inc
sbb
add
xor
add
in
cld
xchg
fidivrs
cltd
repz
add
lahf
mov
cmp
lea
test
mov
ljmp
mov
add
testb
xchg
dec
les
mov
add
mov
dec
sarb
and
xor
addr16
lret
push
and
test
adc
pusha
jnp
mov
rcll
add
or
lods
out
cmp
mov
mov
je
int
test
pop
sbb
mov
ljmp
daa
ss
adc
jp
movsb
enter
dec
adc
adc
std
imul
fidivrl
and
imul
out
mov
out
or
xchg
cld
add
xchg
gs
push
loop
jae
daa
mov
sub
mov
or
mov
sub
ret
dec
add
dec
jns
xchg
arpl
add
sub
add
insl
in
rol
mov
add
les
jecxz
insb
leave
jae
sub
mov
inc
cltd
std
incb
pop
xchg
jno
ficompl
push
imul
push
pushl
sarl
pop
or
fisttpll
mov
movsl
xor
fcompl
sahf
cwtl
xor
cli
fcompl
adc
xorl
ret
gs
enter
add
imul
pop
daa
mov
popa
xor
jmp
cltd
stos
mov
pop
sarb
dec
dec
pushf
mov
jg
adc
jno
adc
pop
and
icebp
and
xchg
jge
test
movsl
notb
cmp
mov
pop
adc
adc
add
and
xchg
mov
scas
sahf
mulb
pop
cltd
xor
dec
push
pop
test
adc
orb
xchg
sarl
pop
sub
outsb
xchg
jge
int
loopne
xchg
jge
pop
loop
jle
push
in
cmp
iret
dec
ficoms
cli
sbb
dec
add
loopne
jl
add
lahf
jge
dec
mov
xor
int3
je
popf
push
call
mov
push
sti
push
lods
stos
movsb
call
mov
inc
mov
jecxz
ret
xor
andb
shrl
dec
jmp
dec
pop
push
sbb
scas
mov
pusha
cmpsl
lcall
mov
push
inc
mov
or
je
push
push
sub
fisubrl
push
pop
mov
roll
scas
xchg
mov
lds
mov
pop
lret
push
cltd
vpsubq
call
push
ss
dec
jle
cmc
pop
test
push
adc
pop
dec
outsb
mov
cs
icebp
jb
ds
cmp
push
in
dec
lahf
cmpsb
add
pop
or
mov
pusha
mov
jg
pop
jmp
sbb
jb
mov
int
pop
push
adc
shll
mov
jo
sbb
cmp
ss
fdivl
pop
inc
int3
in
mov
push
out
mov
in
push
and
inc
or
mov
inc
enter
in
in
lods
lret
jecxz
fcmovb
and
movsb
cmpsl
out
dec
in
cmp
push
rcll
enter
sub
mov
fisubrl
mov
pushf
mov
mov
mov
xor
imul
dec
cs
into
lret
xchg
mov
mov
test
sub
xchg
test
dec
loope
cmp
push
scas
fwait
sub
cmpsl
and
cmp
cmpsl
xchg
hlt
xchg
shl
or
mov
loope
pop
add
push
jmp
sbb
jb
outsl
int
push
sti
out
push
add
mov
fbld
pop
adc
or
cs
mov
sti
jecxz
mov
loope
enter
stos
adc
fs
mov
xchg
sub
mov
adc
or
cwtl
or
mov
xlat
fildll
shrb
pop
fwait
sub
stos
sahf
inc
sahf
xor
sbb
cmpl
mov
push
and
jbe
outsl
out
outsl
dec
mov
rcrb
cmpsb
fwait
icebp
push
repz
std
dec
lods
lods
pusha
sti
cmp
adc
jae
inc
pop
mov
das
push
xlat
scas
dec
popf
dec
sbbb
outsb
pushf
sub
xor
jne
jno
outsb
movsl
cltd
mov
inc
int
adc
sti
stos
fwait
in
pop
call
cmp
sub
push
xlat
hlt
add
inc
sub
movb
mov
icebp
push
add
or
inc
lahf
cmp
mov
or
inc
xchg
dec
xchg
fcomps
stos
icebp
add
cld
xchg
mov
movsl
adc
lret
inc
xchg
xchg
gs
adc
cmp
xor
sbb
lret
mov
fdivl
pop
or
add
add
fidivs
pop
jno
je
enter
mov
dec
cpuid
lods
pop
mov
and
scas
insl
and
pop
mov
xor
mov
dec
mov
sti
xchg
and
xor
pop
mull
insl
std
xor
cmp
lret
into
ja
dec
add
stos
mov
push
jnp
je
addb
add
sbb
cs
dec
lcall
pop
mov
test
push
mull
mov
cmpsb
lock
add
adc
ja
shrb
addb
in
mov
fsubrp
jae
pop
sarl
push
or
sarl
in
pop
aad
push
iret
cli
sbb
add
sti
js
sbb
xchg
add
pop
pop
mov
add
pop
mov
dec
jle
lret
mov
adc
loopne
clc
das
jl
dec
dec
pusha
adc
hlt
sti
sbb
mov
imul
lret
mov
insl
mov
sub
ljmp
pop
and
pusha
aas
or
insl
cmpsl
jno
dec
push
push
and
jl
inc
cld
out
adc
int
add
mov
je
xchg
push
xchg
stos
ret
or
cmp
add
xchg
adc
popf
lock
xchg
in
add
sbb
jl
mov
mov
mov
sub
xlat
imul
pop
sbb
lahf
sub
mov
mov
jbe
fmull
lds
sub
test
js
inc
pop
jmp
ret
lea
lret
and
inc
inc
push
dec
out
sub
jmp
mov
sub
repnz
scas
test
daa
sahf
sahf
movsl
jmp
pop
and
ret
cwtl
lds
lds
in
adc
stos
aad
stc
imul
mov
test
sub
fsubs
inc
pop
adc
dec
add
loop
mov
stos
cmp
repz
ss
dec
fisubrs
shll
ror
addr16
into
fcmovnb
ja
jmp
push
mov
stc
aas
sbb
adc
test
jne
icebp
sub
or
sbb
out
stc
cmp
mov
push
cld
inc
push
ds
lahf
shlb
and
mov
mov
pop
arpl
decb
push
cmp
cmp
cli
mov
jo
pop
arpl
pop
xchg
pop
and
xlat
sbb
mov
sub
icebp
sbb
dec
mov
stc
push
addl
dec
or
movsl
subb
shll
sbb
lcall
push
mov
push
cs
icebp
push
test
sti
jge
push
pop
fisubrl
mov
dec
push
pop
cs
push
mov
sbb
or
xchg
xchg
pop
mov
and
popf
popf
mov
lahf
dec
popf
int
test
dec
cmpsb
pushf
xlat
jg
sti
outsb
jns
jp
mov
int
mov
adc
js
ret
insb
cs
movsb
stos
adcl
xorl
loop
fcomip
lods
ljmp
clc
pop
clc
cli
rol
jmp
call
pop
in
xchg
arpl
dec
cmp
mov
bound
int
xchg
xlat
inc
in
push
dec
gs
sub
leave
inc
sbb
and
in
jnp
dec
mov
js
imul
inc
cmc
movsl
pop
aas
int
loopne
push
mov
mov
das
xor
mov
sub
sti
into
xchg
loopne
gs
roll
pop
xchg
ja
sbb
dec
or
in
rcrb
call
aam
dec
repnz
clc
xchg
push
aas
add
pusha
and
adc
aaa
and
lods
pop
out
add
dec
xorl
jo
pop
mov
arpl
les
add
adc
test
fwait
mov
or
adc
shrb
mov
and
test
push
cs
cmpb
sub
in
and
mov
jp
push
lods
movsb
pusha
sbb
xchg
outsb
test
out
push
fmull
addb
aam
cmpl
xor
mov
out
es
pushf
mov
pop
jae
je
arpl
fstpt
aam
cmp
test
adc
inc
shr
pop
sbb
mov
mov
jns
mov
adc
pop
hlt
lahf
mov
add
sbb
jl
or
inc
leave
jae
test
mov
push
jb
jge
pop
pop
cld
mov
and
roll
mov
inc
int3
or
mov
test
repz
add
idivl
mov
xchg
les
adc
adc
mov
out
dec
pop
xor
xor
pop
sub
sub
cwtl
mov
dec
scas
repz
jl
and
lret
daa
fsubp
mov
dec
fnstsw
push
cmp
lret
add
xchg
mov
mov
pushf
sub
inc
mov
cwtl
bound
mov
fwait
cmpsl
jmp
incl
or
fstpl
stos
scas
mov
xchg
icebp
std
test
dec
movsl
dec
adc
test
sub
andb
lds
sub
push
mov
repz
leave
aaa
mov
aaa
mov
push
sbb
or
fmuls
int
adc
in
sahf
stc
ds
add
cli
out
mov
jo
sub
and
shll
cmp
jbe
pop
cmp
mov
cmp
dec
xchg
pop
xchg
xor
addr16
aaa
push
lcall
xor
mov
jmp
push
clc
ret
or
inc
inc
lds
mov
mov
fwait
aaa
pushf
into
dec
cwtl
popf
xchg
mov
shlb
push
jge
out
xor
out
test
test
lods
mov
out
movsl
dec
call
jb
jne
xchg
aas
jmp
sbb
jecxz
in
inc
push
iret
jbe
mov
sbb
jmp
cmc
pop
xor
inc
mov
enter
lret
dec
rcl
mov
shr
pusha
cmp
in
pop
mov
test
cltd
shll
xor
jo
pop
and
xchg
push
testb
enter
mov
mov
jle
dec
dec
dec
xchg
jnp
push
lret
lcall
int
xchg
mov
and
and
inc
in
in
stc
add
pop
mov
enter
jno
fs
mov
xchg
jne
mov
xlat
xchg
outsb
faddl
rcl
mov
fs
and
cmc
cwtl
outsb
add
ljmp
xor
and
pop
mov
or
out
push
adc
out
lock
inc
inc
stos
cmpsb
adc
mov
xchg
loope
push
mov
add
pop
jno
xchg
aaa
sub
jp
push
stc
and
xchg
mov
lret
movsl
and
sti
leave
lahf
dec
jmp
mov
jmp
sbb
orb
sbb
mov
loop
fcmovu
inc
ljmp
jae
repz
sbb
fsubr
add
xor
jns
adc
in
ds
and
and
push
adc
js
nop
xor
pop
enter
sbb
inc
cmpsl
ds
xor
test
inc
cmp
ret
popa
stos
push
in
shrl
sarl
jecxz
add
inc
pop
fmul
pop
sub
push
dec
xchg
orl
repz
clc
jecxz
or
sub
test
out
daa
enter
outsl
loope
jecxz
xor
xchg
ret
inc
cmpsb
inc
jecxz
sub
out
leave
movsl
arpl
adc
loopne
pop
pop
aas
add
and
xchg
add
cmpsl
std
xchg
ljmp
shl
lock
cmp
shll
sarl
cmp
or
in
jle
pop
jge
mov
xrelease
je
sarl
jecxz
xor
lahf
in
xor
outsb
push
inc
sub
in
in
aaa
and
das
dec
inc
push
dec
cmpl
ret
dec
insb
aad
mov
xchg
loop
add
lret
pushf
jb
or
xchg
pop
insl
loopne
xchg
cs
cmp
or
das
xchg
dec
ret
pop
mov
xchg
adc
mov
pop
push
lods
or
rcrl
jnp
pop
negb
shrb
pusha
add
out
push
test
cmc
movsb
push
icebp
aas
shlb
add
testl
sbb
add
xchg
addr16
stos
movsb
mov
lret
sub
jnp
movsl
rorb
imul
das
inc
ret
dec
les
push
rorl
lds
lret
je
cld
lods
into
int
lea
aas
pop
je
xchg
loope
loope
sub
adc
xchg
or
inc
shll
es
xorl
sti
std
mov
mov
and
in
js
inc
jl
call
pop
push
jl
inc
pop
shrl
cld
inc
dec
sbb
pop
mov
lcall
movsb
xor
jp
fwait
and
add
and
mov
and
mov
push
mov
bswap
xor
mov
mov
jecxz
fstpl
add
push
shll
clc
jns
movl
sbb
pop
inc
int3
adc
jnp
fld
clc
fldt
cmp
imul
movsl
or
inc
add
pop
clc
dec
fdivs
ret
cltd
jae
adc
or
rcll
movsl
cs
fdivrs
adc
cld
jge
psubusw
iret
shrb
push
mov
xchg
sub
dec
mov
xchg
mov
push
fs
or
xchg
fscale
insl
daa
clc
enter
fsubl
aas
and
add
inc
inc
les
sbb
mov
or
rol
mov
xchg
push
shrl
and
mov
adc
push
data16
mov
or
adc
xorl
or
inc
push
and
inc
into
dec
das
xchg
sub
push
add
jle
outsb
in
sbb
or
pop
out
aaa
dec
into
lods
out
cwtl
cmpsb
jne
adc
push
mov
xor
and
clc
add
arpl
pop
scas
cld
dec
gs
fsub
repnz
jge
into
ljmp
pushf
mov
lret
iret
inc
cltd
push
stc
jle
nop
iret
jg
jmp
mov
out
xchg
push
gs
push
sub
fcoml
inc
nop
testb
dec
repnz
mov
mov
mov
and
mov
jge
jmp
dec
hlt
fs
mov
lahf
pushf
lahf
jne
test
sub
adc
mov
inc
push
jge
fidivrs
lcall
shlb
shl
out
icebp
mov
les
and
mov
mov
inc
adc
add
lods
xor
dec
xorl
xor
mov
mov
fcoms
pushf
dec
xchg
cmp
pop
jbe
xchg
test
add
jb
and
fstl
testb
mov
adcl
jbe
arpl
lock
scas
mov
in
cmp
popa
mov
cmc
pushl
jo
mov
std
inc
adc
repnz
lds
sbb
sub
pop
inc
mov
mov
xchg
fwait
and
adcb
sbb
xchg
pop
mov
push
xor
nop
scas
adc
aam
scas
or
pop
push
rorb
movsl
or
mov
pop
fmull
xchg
push
jmp
outsl
mov
std
mov
pop
int
xor
pushf
mov
outsl
mov
mov
sub
adc
cs
jl
mov
xchg
mov
push
orl
xchg
pop
scas
or
add
mov
push
mov
ds
lcall
roll
test
dec
jne
loopne
jg
mov
push
shll
mov
mov
repz
loopne
sub
in
pop
sub
mov
mov
push
mov
jl
or
aas
js
js
xchg
or
pop
add
in
pop
ja
mov
fs
aas
sub
dec
push
or
sbb
loope
sti
add
xchg
add
sub
inc
mov
mov
iret
loopne
es
pop
int3
and
dec
xor
pushf
ljmp
imul
imul
jl
pop
pop
jg
in
insl
pop
jg
mov
cli
ja
outsb
outsb
dec
popa
add
push
fiaddl
inc
add
int3
adc
lock
pop
jge
outsb
cs
imul
cmp
mov
aaa
and
mov
xchg
lret
push
ret
int
idivl
imul
js
js
push
jecxz
scas
stos
mov
mov
mov
cmpsl
bnd
sbb
rorl
mov
jmp
push
and
or
inc
pusha
div
or
mov
call
nop
cmp
push
das
in
gs
scas
icebp
pop
fldenv
xchg
orl
in
lds
ja
loop
insl
dec
sahf
fsubrl
insl
mov
hlt
out
std
xlat
jno
insl
cmp
dec
sti
dec
fstpt
mov
and
cmp
jg
mov
lea
cmpb
push
xchg
push
stos
shlb
cmp
sub
dec
outsl
jmp
mov
int
mov
test
out
outsb
fcmovbe
xorl
mov
lahf
sbb
rol
inc
or
push
jmp
clc
push
add
mov
cmp
mov
scas
push
cmpsl
inc
cmpb
pop
aas
addl
inc
call
cmpsl
xchg
jnp
hlt
mov
cmpsb
int3
aad
rorl
push
pop
sub
sahf
addl
ljmp
mov
leave
pop
push
inc
adc
popl
loop
xchg
arpl
cmp
into
pop
mov
js
add
jle
movsl
sub
sbb
nop
mov
pop
cmp
je
out
pop
adc
ljmp
sbb
jge
loopne
fsts
sub
or
cmp
test
mov
pop
xchg
xor
mov
repnz
mov
sub
inc
les
clc
or
mov
je
fdivrs
push
out
lods
cmp
add
push
js
pop
dec
les
hlt
mov
dec
imul
aam
pop
xchg
movsl
mov
lret
cmpsl
sub
inc
pop
mov
sbb
jo
push
jecxz
jns
dec
lds
adc
xchg
and
lret
imul
or
fidivs
push
push
pop
jecxz
jle
dec
sbb
add
push
mov
stos
push
sbb
jnp
sub
pop
sub
sbb
pop
imul
cs
call
shrb
in
loop
push
and
or
mov
stc
addr16
mov
sar
inc
mov
sub
mov
inc
jae
pop
and
aad
pop
sbbb
sub
fsubl
mov
fsts
dec
pop
test
pop
outsb
fdivl
insl
rcrb
das
mov
in
fcoml
pop
je
fs
cmp
jecxz
cmpsl
inc
sbb
sub
testl
sbb
sub
arpl
sar
or
stos
aas
or
scas
rorl
mov
pop
cmpsl
xchg
ds
jmp
pushf
jge
pop
mov
or
and
push
or
lds
xchg
loopne
pop
imul
add
les
xchg
popa
sti
mov
in
out
adc
add
arpl
clc
mov
mov
std
mov
cmp
daa
ds
addr16
cmp
jae
into
inc
sarl
pop
lret
lret
in
add
in
adc
dec
or
push
mov
lret
inc
rolb
and
and
into
push
inc
pusha
adc
xchg
inc
push
shr
sbb
pushf
mov
dec
jbe
faddl
mov
push
push
ja
mov
xor
push
mov
inc
mov
mov
mul
mov
mov
inc
cld
push
pop
fbstp
cld
mov
ret
pushl
out
dec
fcmove
jnp
add
jno
mov
rclb
sbb
sbb
dec
pushf
push
int
and
inc
sbb
inc
pusha
add
mov
cmp
out
lret
cmp
mov
jnp
mov
int3
aaa
orb
out
lcall
xchg
les
sub
aas
or
pop
jg
std
daa
fstpl
shlb
mov
add
mov
sub
or
sbb
cmp
jne
int3
daa
inc
aaa
aad
sarl
push
cmc
jg
push
xor
fisubs
add
push
test
lahf
loop
notl
hlt
lcall
mov
test
mov
jns
add
cmc
repnz
aaa
enter
push
xchg
adc
stos
xchg
push
mov
cltd
xchg
fsts
mov
cmp
push
sub
inc
sbb
fiaddl
dec
in
pusha
aas
cmp
jecxz
out
enter
popa
fdivs
mov
scas
pop
xlat
push
cwtl
orl
sti
clc
repz
adc
loope
leave
enter
js
fstl
std
cmp
jmp
cmp
aad
add
dec
jp
xchg
mov
enter
and
and
sti
mov
jle
sbb
mov
push
cmpb
pop
or
mov
lea
jl
dec
inc
ret
lahf
jbe
inc
inc
push
adc
jmp
dec
push
mov
jae
leave
xor
outsb
bound
jp
mov
mov
xchg
xor
inc
xor
adc
add
push
nop
cwtl
iret
sub
pop
mov
fcmovb
dec
add
es
loope
push
or
or
lahf
mov
cli
pop
out
aas
adc
test
test
sub
imul
adc
bound
add
sbb
les
xor
mov
arpl
mov
lret
and
movsl
mov
pop
jbe
inc
cld
add
je
adc
push
mov
push
icebp
leave
inc
xlat
mov
aam
inc
bound
pop
cs
es
jp
mov
dec
cltd
test
inc
inc
jnp
sahf
pop
push
insl
ret
and
cmp
lret
nop
iret
jns
xlat
mov
fcom
aaa
mov
outsb
mov
ss
call
lods
lahf
pop
inc
add
jne
push
in
or
mov
stos
loop
lea
jnp
stos
cs
mov
gs
lods
add
out
mov
fidivs
jmp
push
mull
inc
pop
ret
mov
add
xchg
add
mov
jp
and
mov
mov
mov
push
stos
mov
xor
adc
das
mov
scas
fldt
push
int3
in
stos
and
aad
mov
sub
fcmove
cmp
jns
outsb
push
lahf
xor
sub
mov
push
xchg
cmp
push
or
dec
inc
test
push
sti
test
inc
push
ja
xchg
mov
push
jns
fisttpll
lea
and
fistpl
ret
lret
xchg
push
mov
mov
sarb
in
daa
jle
xchg
rcll
mov
lock
loope
mov
shrl
std
sbb
ss
and
arpl
rcrb
inc
or
lea
xchg
mov
lea
fs
add
movsb
sub
jg
aas
ficompl
or
test
push
data16
xor
daa
sti
or
dec
js
lock
sbbb
lds
and
enter
fstpt
imulb
sbb
mov
adc
cmp
test
add
add
dec
xchg
mov
push
idivb
gs
addl
fbld
ljmp
rcll
das
jp
adc
rcrl
lcall
add
cmc
ljmp
lods
notl
cs
lahf
outsl
mov
jl
daa
cld
int
add
fcmovne
scas
in
fidivs
fbstp
sbb
ja
sbb
stos
in
jge
and
bound
jp
xor
xchg
fdivs
and
dec
clc
jb
lods
mov
cmpsb
in
outsb
or
movsb
sbb
push
adc
fs
sbb
add
out
add
pop
xor
bound
jae
inc
sub
sub
rcl
jo
sub
lea
lret
pop
cmp
adc
lock
xchg
jae
cld
sti
adc
lods
and
sub
xor
cmp
push
mov
sub
push
int
iret
sbb
lret
cmp
xchg
jg
dec
xlat
and
xor
into
xchg
aas
pop
or
repz
testl
movsl
ds
sbb
je
xchg
mov
mov
jne
aam
outsl
mov
xchg
or
mov
dec
lock
dec
mov
call
ds
mov
fdivl
popa
or
inc
cli
popa
inc
xor
sub
sahf
adc
xchg
popa
mov
add
cmpsl
pop
inc
sub
pusha
fucomp
dec
lret
add
add
mov
jbe
sbb
and
or
imul
add
jns
gs
ret
stc
test
xlat
outsb
cmp
mov
movsl
bound
test
jns
jp
mov
dec
inc
push
pusha
sahf
dec
xor
xor
es
stos
mov
mov
xlat
test
sbb
popf
adc
dec
add
lret
sbb
jae
add
inc
pop
jo
sbb
or
cmp
add
cmp
out
sarb
cmp
push
xor
in
je
mov
pop
push
push
cmp
xor
push
adc
adcb
cmp
pusha
xchg
fsts
push
xchg
cmp
sbb
imul
mov
lods
add
jp
mov
push
mov
mov
lahf
cmp
ljmp
roll
push
ss
pop
or
lds
pop
cltd
or
sbb
xlat
xchg
mov
inc
movsl
mov
shll
mov
fnstcw
xchg
mov
add
dec
jnp
inc
insl
adc
sbb
outsb
pop
inc
push
push
cmovl
out
lahf
aad
addr16
cmp
mov
mov
xchg
add
push
outsl
dec
sbb
imul
jl
jp
pop
mov
mov
test
jge
testb
pop
pop
lock
dec
dec
dec
push
pop
sub
repz
pusha
aaa
popa
ret
or
and
call
sbb
mov
pop
pop
add
jle
dec
fmull
push
push
inc
insl
arpl
int
call
nop
leave
add
ficompl
mov
cmp
sbbb
mov
sarb
inc
mov
les
cmpsl
enter
sbb
stos
aaa
ret
psubsb
mov
mov
insl
adc
pop
adc
notl
subb
rcrb
ss
outsb
fdivl
sbb
mov
int3
cs
lcall
shll
xor
mov
xchg
and
rclb
cmp
imul
lock
in
mov
jo
or
cmpsl
mov
jne
push
xchg
clc
mov
addb
xor
dec
cmp
and
cmp
pop
flds
roll
bound
punpckhbw
add
push
out
push
cwtl
cmp
lods
test
inc
cmp
out
clc
lahf
push
xlat
bound
jne
mov
aad
add
sub
dec
iret
jo
or
insb
test
jbe
hlt
fcoml
sahf
xlat
pop
out
pop
call
das
xchg
xor
pop
jb
rorb
xor
stos
push
and
inc
adc
xchg
and
cmp
mov
cmp
rcll
ja
cmp
xor
das
push
outsl
or
test
mov
fidivs
push
hlt
mov
xchg
movsl
jl
in
jecxz
mov
movsb
adc
out
push
cltd
xor
mov
push
dec
xchg
out
loop
loope
xorb
pop
jbe
movsb
push
mov
hlt
rcll
mov
jp
mov
repnz
pop
sbb
xchg
sbb
push
or
and
push
lea
rol
sub
aam
pop
xchg
dec
lret
adc
and
mulb
fimull
jmp
dec
mov
push
inc
jg
iret
mov
xchg
sahf
push
push
daa
icebp
repz
inc
sbbl
or
cmpsl
inc
int3
mov
add
adc
push
push
fldl
sti
add
data16
lods
xor
add
out
rorl
mov
gs
inc
adc
int3
push
scas
cwtl
stos
ss
loopne
outsb
jmp
mov
push
pop
xchg
xchg
xchg
mov
scas
cmpsl
push
mov
sbb
add
mov
and
pop
lock
mov
fld
lahf
insb
push
mov
sub
mov
sbb
mov
imul
jno
mov
pop
rorl
jnp
inc
sbb
push
cs
and
adc
jle
pop
incb
in
dec
push
mov
mov
and
fstpl
repz
adc
cmp
mov
add
je
cwtl
pop
xor
inc
cmp
mov
cmpsb
mov
in
push
sbb
xorb
sub
jg
sbb
inc
and
add
in
inc
cmp
cwtl
push
lock
hlt
jg
loope
cmp
dec
cwtl
cli
loop
and
jp
sbb
and
lds
cs
or
pusha
lcall
incl
jp
xlat
cmp
lea
movsb
test
mov
test
jno
sbbb
mov
fwait
jge
xor
mov
xchg
sbb
push
jb
cmp
cmp
cmpsl
loopne
or
dec
and
adc
pop
ds
lret
xchg
jg
or
iret
mov
xor
add
push
fs
xchg
dec
cli
inc
add
sub
dec
shll
xor
in
rcrl
cmp
test
test
push
fadds
or
sub
xor
dec
adc
dec
lods
sbb
xor
test
jbe
adc
mov
sub
cwtl
push
mov
and
cmpsl
xchg
aas
call
inc
lret
addb
jnp
xchg
add
pop
bound
inc
pop
inc
jg
popa
arpl
icebp
adc
aad
ljmp
push
dec
sub
and
int
test
add
addl
xchg
push
iret
sbb
stos
stc
rolb
xor
mov
inc
loope
lcall
jb
or
mov
loop
cli
xor
into
js
enter
in
or
gs
popa
jmp
cs
lcall
pop
mov
jge
rclb
sub
shr
out
icebp
inc
imul
fs
mov
daa
add
jbe
je
int3
roll
and
inc
pop
call
mov
mov
aam
xor
aad
cwtl
jnp
in
insl
sbb
in
es
lret
test
popf
jne
cmpl
test
or
inc
jne
rorl
jmp
int3
add
mov
sbb
popf
sahf
mov
mov
cltd
pop
mov
adc
xchg
jae
ss
clc
test
dec
mov
in
cmp
add
sbb
into
fistps
sbb
xchg
dec
sub
cmpsb
mov
cmc
or
xchg
push
push
xchg
mov
mov
jno
pop
in
dec
mov
cs
lcall
orb
xchg
mov
push
imul
lea
rorl
mov
adc
cmp
mov
push
lods
jo
pop
in
test
cmp
sub
aad
mov
sub
inc
xor
adc
cmp
enter
xchg
dec
nop
push
lret
aam
int
xor
subl
jp
loop
aad
lcall
mov
ss
adc
sbb
loope
and
xlat
fadds
cli
sub
sbb
clc
xchg
imul
or
pop
cmp
pushf
mov
arpl
imul
daa
add
pushf
ds
sub
vorps
out
fs
sub
jno
and
mov
psrad
jae
sub
push
leave
xor
push
push
daa
cmpl
aaa
sbb
jge
orl
xor
cmp
or
popf
les
mov
popf
xor
hlt
sub
fcmovu
popf
xchg
sub
mov
mov
sbb
jbe
mov
call
aas
mov
das
out
dec
in
pop
cmpsb
pop
stos
pop
adc
add
inc
pop
add
cmp
or
mov
push
shl
xchg
push
cmp
cld
jle
scas
or
hlt
cmpsb
cmc
lret
mov
nop
mov
mov
test
push
cmp
cltd
enter
imul
pushf
add
loop
push
cmpsl
ret
mov
cmpsb
inc
jne
xor
mov
cli
xor
stc
dec
inc
sub
ret
push
xchg
mov
ljmp
movsl
jne
mov
fsubrl
lahf
test
mov
jns
push
mov
inc
int
sti
cltd
lods
mov
mov
inc
mov
sbb
or
ret
push
push
jmp
das
sahf
push
popf
inc
test
add
mov
enter
mov
scas
sbb
dec
shl
mov
mov
es
cmp
loopne
mov
cmp
imul
nop
clc
popa
mov
test
mov
mov
xor
cmp
repnz
push
std
shl
cld
ljmp
inc
sub
sub
mov
fisubl
outsb
mov
out
cmp
stos
adc
out
cmp
push
pushf
or
scas
push
loopne
mov
clc
std
cmp
std
dec
test
xchg
mov
sbb
and
sub
sub
mov
ret
sbb
outsb
es
push
stos
movsl
xchg
outsb
ds
in
sub
ss
pop
rcrb
ret
fisttps
jae
pushf
cmp
xchg
jecxz
push
sbb
pusha
loop
jno
mov
and
or
inc
test
pop
add
push
stos
imul
jno
xchg
sbb
lcall
outsb
out
clc
and
cmp
stos
movl
mov
pop
inc
mov
mov
add
cmp
pop
add
mov
xchg
movsl
push
push
mov
cs
lahf
outsl
les
xor
jbe
outsb
in
popf
cmp
fsts
enter
orl
roll
mov
popa
movsb
arpl
test
sub
test
outsl
xchg
and
sub
mov
aad
in
stc
jge
shrb
int3
push
mov
int3
ds
divb
sbb
xchg
aas
cltd
cltd
insb
movsl
fwait
cmpsb
daa
sbb
xor
dec
pop
in
mull
cmp
pusha
add
popa
std
add
sarl
pop
outsl
mov
gs
or
push
push
push
loopne
int
scas
mov
lods
lret
popl
data16
daa
loope
leave
pop
rcl
dec
jl
inc
xor
andl
leave
dec
jns
jp
dec
cmp
pop
bound
adc
and
inc
inc
shrb
movsb
inc
pop
add
dec
or
add
aaa
lret
or
add
inc
arpl
pop
xor
mov
push
daa
nop
pushaw
shll
pop
fs
arpl
cmovnp
fstpt
pop
push
call
push
rcll
sbb
ja
je
cmp
leave
push
xor
shlb
inc
out
nop
subl
jmp
cli
test
sbb
stc
fmull
arpl
xorb
es
mov
gs
sbb
xorb
jbe
out
pop
push
lahf
push
decb
inc
fcoms
mov
mov
pop
std
dec
stc
cmc
and
sbb
mov
pop
mov
mov
loope
sti
dec
xor
push
inc
repz
mov
inc
or
mov
loope
dec
xchg
mov
ja
inc
fbstp
ljmp
add
movsb
mov
and
xor
loope
or
hlt
stos
xor
aas
pop
jmp
out
adc
jo
xor
out
cmpsb
stos
insb
push
sbb
dec
dec
ljmp
xchg
xchg
ds
or
pop
scas
inc
sti
mov
dec
rcrl
and
fwait
adc
inc
lcall
inc
inc
jno
ja
rcrl
add
inc
mov
ja
mov
clc
fs
pop
int3
cmp
repnz
mov
mov
mov
adc
ret
mov
pop
rclb
std
mov
sub
xchg
das
iret
push
mov
sub
popa
xor
mov
in
cs
and
fmull
xor
hlt
insl
loop
or
stos
ret
pop
xor
adc
push
sbb
sbb
popa
insb
mov
shrl
xorl
loope
into
das
sub
sub
rcrb
lea
test
daa
mul
inc
adc
cmp
daa
mov
ljmp
pusha
cmpsb
adc
inc
inc
aad
cli
inc
xor
lret
push
gs
shrb
movsl
into
leave
jns
jmp
cltd
mov
inc
adc
das
xchg
and
divl
push
adc
std
xlat
pop
xchg
rcll
rcl
jb
mov
and
int
mov
fwait
mov
jo
popaw
out
add
aad
frstor
sub
loopne
insl
mov
pop
jae
cmc
enter
and
std
jecxz
jae
ljmp
adc
jecxz
cli
dec
mov
es
roll
sub
xlat
push
push
jge
repz
sbb
mov
pop
push
lock
movsl
dec
or
popf
cmc
ret
hlt
cwtl
xor
shrl
xor
leave
mov
or
je
outsb
scas
test
jmp
rclb
adcl
inc
addl
lret
fisttps
push
xor
int3
mov
jnp
fisttps
pop
cli
push
das
dec
leave
es
notb
add
mov
pop
fimuls
xchg
mov
xor
ret
in
lret
pop
and
push
fnsave
testb
pop
es
gs
mov
mov
xlat
js
mov
cmp
imul
das
cmp
pop
mov
mov
cmp
mov
add
or
daa
sti
sarb
sub
cmp
xchg
cltd
push
insb
inc
mov
cmp
pusha
mov
lds
repz
sarl
jae
xlat
inc
iret
aaa
jle
cld
popf
out
push
sbb
out
sbb
or
or
inc
dec
dec
cs
pop
mov
xchg
std
adc
mov
call
mov
mov
jl
in
add
gs
mul
xor
rcl
xchg
cmpl
and
mov
and
faddl
out
sbb
jnp
dec
loope
mov
incl
nop
and
pop
shlb
mov
jnp
inc
fisttpl
inc
testl
cmp
out
pop
jo
ljmp
loope
adc
dec
push
mov
sub
dec
sbb
mov
repnz
or
sub
push
mov
inc
sbb
push
arpl
rcll
cmp
mov
fs
shlb
cltd
gs
push
cmp
leave
add
jae
sti
adc
incb
fsubl
orl
adc
pop
mov
jb
sbb
jecxz
add
push
jmp
or
out
dec
pop
xor
sbb
sbb
mov
pushf
stos
data16
popa
push
inc
jp
sub
dec
aad
cmp
push
and
jge
push
ffreep
repnz
jecxz
inc
adc
inc
adc
or
xor
nop
adc
dec
je
jecxz
adc
mov
addb
mov
sub
sub
inc
xor
cli
divl
jg
or
jb
mov
icebp
xor
rcr
lods
fidivl
in
xchg
mov
leave
clc
scas
sbb
shll
hlt
test
das
add
mov
sbb
fs
inc
cld
and
push
int3
lock
je
mov
xchg
fcmovu
mov
outsb
pop
repz
sbb
dec
dec
inc
sbb
xorb
pop
inc
rcr
push
inc
pop
ds
sar
dec
test
jp
xorl
sub
fwait
pusha
loope
cld
jns
cmpsb
lock
je
mov
mov
popf
pop
mov
dec
push
mov
int
std
ja
mov
mov
and
dec
aas
outsb
cmp
xor
imul
dec
mov
int3
push
insl
mov
ret
and
insb
jge
sbb
cmp
inc
scas
push
dec
loopne
imul
outsb
dec
mov
mov
in
push
sahf
lcall
sub
jns
ljmp
inc
js
dec
push
pop
cld
scas
ret
add
or
xor
loope
pop
pop
inc
outsb
call
push
fsubl
jbe
lret
pop
push
incb
xor
icebp
lds
or
pop
dec
shlb
imul
pop
stos
xchg
jae
std
lods
and
in
test
out
loope,pn
adc
or
and
in
aam
xchg
in
out
or
push
sub
idivb
inc
inc
jne
cli
adc
clc
stc
jbe
mov
xchg
jle
mov
mov
mov
sbb
jge
popa
dec
out
mov
wbinvd
mov
cmp
mov
cmpsl
aas
push
ficompl
fiaddl
popf
cmpsb
mov
pop
imulb
idiv
push
insl
jmp
loope
je
mov
adc
test
xchg
mov
mov
pop
dec
inc
jno
aas
pand
cld
imul
xchg
jns
fsubrl
std
arpl
mov
or
xchg
scas
adc
dec
nop
pop
lret
nop
iret
pop
imul
jl
dec
data16
add
aaa
in
ja
out
cld
and
outsl
xor
xor
inc
xchg
fs
aaa
pop
adc
in
or
aad
adc
dec
xorb
lds
push
mov
shrb
sbb
jns
fimull
mov
sub
shlb
dec
bnd
inc
arpl
adcb
jne
scas
add
mov
sbb
iret
cltd
add
popf
cwtl
ja
in
sbb
mov
imul
mov
pusha
or
sub
pop
or
test
dec
add
stos
sub
pop
add
xor
or
outsl
roll
call
stc
pop
mov
into
mov
js
hlt
mov
cmc
daa
shrl
xchg
or
int
lods
inc
and
jp
xlat
fdivrp
cmpsb
add
nop
ret
sbb
pop
repnz
sub
mov
pusha
sub
mov
out
sbbb
mov
xlat
mov
sbb
sbb
cmp
inc
inc
or
popf
clc
fbstp
lahf
mov
push
stc
push
test
mov
leave
aad
idiv
and
fdivrl
vpextrw
lds
aas
fs
ret
adc
xchg
sub
xchg
sbb
or
mov
or
sub
pop
adc
sar
loopne
aas
sbb
iret
repz
jno
mov
nop
sub
flds
lock
mov
popf
push
imul
sbb
mov
push
jecxz
push
in
ror
ljmp
div
dec
pop
loope
mov
es
fistl
adc
leave
pop
std
adc
lcall
inc
add
bnd
inc
xor
jns
fcompl
inc
sub
mov
sarb
ja
addl
dec
sub
testl
rorb
dec
mov
icebp
loop,pt
xchg
xor
ficoms
in
adc
in
mov
sbb
imul
xchg
mov
mov
std
lods
mov
mov
fwait
xchg
cmp
jne
lret
lods
pop
xchg
xlat
xor
repz
dec
fldt
pop
add
xchg
xchg
fidivrs
jge
push
popf
loope
lcall
jg
jo
jne
sub
mov
mov
ror
imul
test
popa
cmp
lods
add
mov
cli
ja
arpl
or
jl
jo
xchg
lds
mov
or
aaa
xchg
jno
xor
pop
aaa
xor
xchg
and
xor
adc
imul
dec
and
xor
and
jmp
mov
es
faddp
ficoms
mov
leave
ljmp
fsubrs
adc
dec
ljmp
sbb
dec
inc
mov
incb
mov
jl
lock
xor
and
mov
jecxz
inc
push
pop
xchg
inc
fnstcw
das
xchg
subb
inc
and
sbb
dec
sbb
xlat
int
inc
xchg
pop
ss
inc
call
push
sub
adc
cmp
sbb
das
pop
sub
test
push
lds
repz
xlat
xlat
mov
mov
cmc
ljmp
mov
imul
pop
cwtl
aam
jb
dec
shlb
dec
cwtl
and
pusha
xor
xor
mov
jmp
addr16
and
push
sbb
xor
jne
mov
mov
pop
leave
mov
pop
pop
loop
jo
sbb
and
shl
mov
fstp
cwtl
xchg
jae
sub
cmp
fsubl
xor
nop
sub
or
mov
stos
pushf
std
xor
inc
and
push
notb
add
bnd
arpl
lahf
ror
sti
mov
jmp
outsb
ss
shlb
jle
xchg
bound
or
sahf
ret
sar
clc
stos
rolb
shll
in
lret
outsb
sub
rcrb
popa
test
push
aas
lea
out
leave
mov
xor
jmp
adc
xor
mov
dec
jns
into
pop
xchg
mov
mov
mov
sti
bound
push
notl
xor
stos
xor
imul
cltd
add
je
jo
daa
scas
daa
add
int3
sti
testb
cmp
jnp
shll
gs
mov
mov
pop
jp
pushf
orl
dec
xchg
jno
mov
fbld
xchg
jnp
mov
inc
xor
jne
cmpsb
dec
push
call
cmp
je
mov
sub
ljmp
push
adc
push
jne
les
or
pushf
lock
cli
scas
pusha
or
nop
in
add
xlat
lods
insb
mov
mov
add
and
jbe
xchg
repnz
in
leave
mov
or
stos
xchg
cmpsb
and
adc
jecxz
mov
fcompl
lds
test
dec
call
and
aas
mov
cmp
andb
jg
push
push
out
adc
mov
pop
adc
shrb
mov
into
jbe
mov
add
xchg
xchg
daa
cmp
cmp
nop
insl
int3
add
push
xor
cwtl
loope
out
push
push
jnp
dec
mov
ret
cld
mov
out
push
in
cmpb
push
pop
jmp
jge
inc
push
sbb
ret
inc
sti
xlat
mov
inc
adc
fcomp
in
inc
mov
int
jmp
inc
inc
ret
lods
mov
call
cs
mov
and
mov
loopne
scas
jge
mov
mov
je
mov
mov
jae
jnp
cmp
scas
pop
scas
sub
mov
sarl
stos
push
pop
inc
inc
movsb
pop
outsb
xor
scas
je
stos
sahf
mov
movsl
rolb
jnp
dec
cmovns
or
in
test
mov
push
cli
sbb
ds
leave
adc
lcall
dec
les
adc
dec
mov
aad
push
adc
ret
sbbl
jae
insl
lock
js
dec
jne
rcrl
dec
pop
popa
ljmp
mov
repnz
pop
cmp
jg
add
sbb
jbe
push
popf
loopne
lods
fiadds
mov
adc
jg
adc
mov
xlat
out
fldl
call
or
xor
repz
and
xor
test
mov
call
xor
push
out
mov
push
mov
shrl
fadds
add
inc
mov
push
insl
jecxz
subb
push
jbe
xor
ja
or
leave
std
mov
xchg
data16
mov
xchg
mov
test
loope
cmpsb
adcl
mov
push
cmp
and
clc
mov
push
inc
inc
in
mov
scas
sahf
ja
mov
mov
xchg
mov
fstpt
rcrl
int
push
mov
rclb
repnz
mov
mov
nop
mov
cmpsl
cwtl
ds
dec
jne
mov
cmpsl
pslld
jb
lods
and
sbb
xor
jnp
out
sub
mov
cmp
cmp
cmc
mov
fistl
jbe
sbb
and
push
and
out
ss
xchg
gs
dec
aas
iret
repnz
mov
sbb
mov
jae
xchg
ljmp
mov
cld
insl
or
in
xchg
jo
mov
mov
inc
stc
mov
pop
test
and
iret
aad
mov
push
ret
rcrl
or
jmp
mov
cmp
sbb
shrl
mov
push
mov
clc
vpunpckhdq
sub
sahf
test
int3
faddp
das
adc
mov
xor
lock
dec
sahf
call
xor
outsl
mov
push
addr16
imulb
mov
dec
or
testl
mov
cmp
jns
sbb
push
sbb
lea
adcl
leave
ror
jg
flds
in
lahf
lea
mov
push
aam
mov
inc
cs
je
mulb
inc
imul
mov
mov
sbbl
decb
ds
or
ja
fld1
outsl
adc
test
in
mov
push
out
dec
jg
pop
adc
insl
int
push
adc
test
mov
leave
sub
cmpsl
out
add
jbe
sbb
mov
and
cld
and
test
sbb
pop
scas
inc
xor
dec
jo
push
and
sub
pop
cmp
in
adc
xchg
and
arpl
or
flds
into
lcall
mov
fsub
sbbb
addl
mov
into
jnp
push
lahf
pop
sbb
outsl
push
popf
ss
dec
out
sbb
scas
push
jae
push
cmp
xchg
sbb
xorl
mov
and
in
sbb
xlat
daa
loop
gs
flds
cmp
test
adc
jb
out
bound
dec
cltd
jae
ja
mov
incb
push
dec
js
int
and
jo
adc
sbb
push
js
dec
pop
in
repz
insb
cmpsl
inc
dec
sarl
jle
jns
mov
loopne
sarl
and
cli
push
out
stos
ss
mov
cwtl
push
dec
sub
movsb
out
loopne
clc
xchg
cmp
xchg
xchg
xor
aam
pop
xchg
or
sub
xchg
leave
jge
arpl
push
in
sub
push
or
ja
adc
inc
arpl
das
sub
insb
sbb
xchg
idivb
mov
xchg
add
inc
push
aaa
xchg
insb
sub
dec
lcall
hlt
adc
int3
xchg
fdivrl
sub
lret
stos
insl
push
dec
rorb
in
sbb
enter
or
mov
or
adc
jo
adc
adc
ljmp
adc
mov
mov
cmp
popf
mov
out
push
xchg
inc
repnz
movsb
bound
adc
xchg
ficoml
lret
outsl
or
mov
push
ljmp
repnz
pop
push
adc
dec
and
jle
pop
cmpsb
push
or
or
insb
mov
lods
lahf
pop
lret
dec
inc
cmpl
lods
aad
adc
insl
pop
jo
pop
aam
mov
leave
push
cmpsb
sbb
cmp
aad
mov
adc
mov
adc
jbe
pusha
arpl
bound
pusha
xchg
and
mov
push
push
sub
mov
movsl
mov
icebp
icebp
add
movsb
inc
arpl
pop
popa
xor
icebp
mov
jmp
push
test
or
ss
mov
cs
or
dec
ja
jo
mov
lret
pushf
or
ret
inc
mov
push
inc
in
pop
dec
stos
in
loopne
lea
outsl
sub
mov
add
int
mov
stos
imul
lds
mov
and
push
fdivs
and
mov
lret
movsb
inc
test
shrl
in
loope
inc
enter
loope
and
mov
hlt
adcl
lahf
push
stc
mov
fimull
xchg
lea
daa
push
or
sbb
lea
aam
call
inc
cmpl
loope
fs
movsb
loopne
jns
lret
jbe
sbb
dec
ja
jecxz
rorb
out
cmp
inc
popa
add
push
add
mov
sbb
sti
pop
aam
das
mov
insb
in
test
shlb
pop
stos
sub
imul
movsl
insb
in
adc
mov
fimull
or
addl
lret
cmc
push
ja
mov
push
xor
insl
fisubl
sub
lcall
mov
lret
mov
outsb
dec
mov
xchg
sti
insl
in
sbb
and
jns
into
rcrb
cmp
cmc
fnstcw
fnstcw
jno
enter
sbb
xchg
ss
push
lahf
je
adc
xor
push
xor
push
cs
test
pop
in
mov
or
jne
in
in
arpl
push
mov
add
scas
lds
dec
out
sbb
mov
cmp
pop
adc
int3
sub
mov
mov
sub
bound
and
mov
test
mov
mov
sbb
mov
mov
xor
lock
leave
cmp
xor
loopne
mov
insl
adc
inc
out
or
mov
xor
inc
push
repz
fldenv
cld
jecxz
sbb
jno
rcll
push
orb
jbe
xor
add
mov
ds
xchg
lock
scas
aaa
jae
ds
push
iret
fstl
js
pop
adc
inc
lahf
out
shlb
xor
cld
dec
fwait
push
mov
push
pop
add
jno
clc
sarb
mov
xor
loop
pop
lods
add
mov
dec
push
dec
and
sbb
inc
inc
repnz
push
enter
mov
mov
xor
mov
fsincos
imul
in
jne
rcrb
inc
cmp
mov
mov
jle
cltd
fsubl
je
push
and
inc
xchg
mov
fcompl
mov
xlat
in
scas
jnp
imul
and
fists
or
xchg
outsb
daa
cmpsb
rcr
mov
sub
jno
mov
fdivrl
in
fbstp
data16
roll
inc
lods
into
push
imul
lock
leave
xor
pop
inc
adc
jbe
test
imul
xor
inc
scas
xor
push
cwtl
push
jg
jmp
cli
or
inc
jge
test
push
sbb
shr
iret
sub
push
sub
xor
ds
add
adc
dec
inc
arpl
xchg
insl
clc
test
jmp
mov
dec
bound
pop
sti
ficoms
mov
xchg
fcoml
sub
fcomip
xchg
adc
jl
inc
push
hlt
and
adc
inc
cltd
mov
frstor
lock
xchg
mov
xchg
adc
inc
xor
fsubs
out
and
outsb
leave
sub
dec
enter
rcll
cmpsl
inc
sub
insl
mov
or
imul
mov
sti
jmp
lcall
mov
mov
and
jmp
push
int
outsb
mov
mov
aam
xor
and
fildl
loopne
xlat
pusha
arpl
pop
aad
lods
sub
ret
lret
xchg
inc
cmc
icebp
adc
push
cmpb
mov
sbb
gs
pop
add
push
lcall
out
inc
dec
gs
lods
sbb
les
sbb
mov
gs
pop
dec
dec
pop
sub
ret
and
mov
sbb
into
mov
inc
ret
jne
sbbl
and
int
cmp
pop
mov
inc
aam
leave
adc
dec
add
adc
inc
adc
mov
nop
mov
push
push
out
and
inc
mov
out
into
cmpl
lcall
mov
push
rcll
jp
jle
lea
in
addr16
jmp
into
orb
cs
sbb
mov
jmp
rol
xchg
pop
test
jmp
inc
cmp
int3
movsl
mov
lcall
pop
aaa
cwtl
cmp
sahf
int3
sbb
jmp
repz
aad
mov
cwtl
add
call
lahf
test
dec
cwtl
fldl2t
popf
nop
das
outsl
fldl
mov
outsl
repz
or
xor
sub
jo
inc
cmpsb
xchg
aaa
push
dec
std
cmpsl
pop
push
dec
ss
cmp
xor
inc
aam
movl
mov
and
es
jge
mov
mov
js
adc
movsb
jmp
push
shlb
out
and
repz
into
and
pop
lcall
push
mov
sbb
leave
fucom
es
pushf
bound
cwtl
fisubs
ds
ret
hlt
cmp
xor
push
imul
jns
pusha
xchg
or
and
icebp
sub
adcb
arpl
adc
or
adc
push
mov
cmc
xor
jae
pusha
scas
lahf
les
jge
sub
mov
adc
lea
mov
pop
jge
cmpsb
inc
test
sub
inc
dec
mov
cld
cmp
lea
mov
stos
cli
ss
cld
stc
fisttpll
pop
popf
cs
inc
stc
rcrb
clc
jb
imul
and
cmpsl
cmpsb
cmp
inc
xchg
insb
pusha
es
xor
gs
xor
jl
cmp
cmp
or
or
mov
dec
lret
jg,pn
imul
cltd
push
scas
cmp
and
xchg
aaa
mov
pop
cld
pop
stos
lock
inc
pop
jecxz
push
cs
jecxz
sbb
jb
mov
sbb
imul
or
aas
call
out
jae
lods
jmp
std
addr16
xlat
mov
or
add
xchg
cld
lahf
fsubrl
fs
add
add
jbe
data16
jae
fwait
dec
add
iret
pusha
and
sub
mov
rorb
ss
push
sbb
dec
lods
fcmovb
shrb
out
xchg
mov
mov
aaa
push
popa
fisttpll
and
fimull
aaa
xchg
cmp
jnp
push
inc
aaa
mov
mov
inc
mov
fimuls
repnz
dec
ss
cmp
cli
xor
mov
push
pusha
outsl
test
pop
cmp
sub
lret
pop
sub
test
rolb
jle
mov
sbb
jno
orl
or
and
add
cmp
add
fcoml
outsl
es
mov
cmpsl
jge
and
cmpsl
dec
mov
pop
xor
dec
xor
xor
xchg
test
imul
jp
xchg
or
bound
jno
adc
call
dec
push
mov
movsb
or
mov
cmp
sbb
push
idiv
lea
sub
sbb
mov
mov
mov
sub
rcl
mov
mov
add
dec
inc
nop
xor
orb
aam
sub
div
cli
cmpsl
sti
out
jle
jae
out
or
stos
subl
lock
outsb
inc
enter
fs
imul
xchg
sbb
inc
push
out
jge
dec
xor
cmp
ljmp
dec
sub
pop
cmp
pushf
sahf
mov
or
sub
cmp
std
pop
xchg
and
incb
sub
ljmp
push
cmp
in
jb
or
sarb
sub
imul
jb
je
mov
out
mov
xchg
jmp
int3
loope
nop
std
xchg
mov
loope
std
loopne
mov
es
push
ljmp
lods
enter
repz
inc
into
dec
xor
lds
pop
stos
lret
mov
push
or
add
pushf
xchg
clc
cltd
loope
add
xchg
mov
sahf
in
add
fwait
and
imul
inc
xchg
lods
iret
nop
mov
and
out
fbstp
cmp
xor
in
dec
xor
jae
inc
testl
imul
jp
out
and
movsl
xor
sbb
jns
inc
pop
and
shr
inc
frstor
lods
sbb
je
jno
or
jp
push
pop
inc
jmp
arpl
mov
in
adc
pusha
sub
mov
xchg
fmul
mov
push
sbb
ds
mov
clc
xor
test
lods
inc
out
or
mov
outsb
insb
cwtl
loope
push
push
insl
bound
inc
lock
dec
jmp
or
sub
sbb
dec
pushf
add
pop
pop
xor
lcall
dec
pop
mov
xchg
leave
test
lea
dec
push
cmp
jo
cmpsb
adc
push
cmp
pop
xchg
mov
lds
cmc
adc
sub
dec
adc
test
and
je
or
sub
sbb
mov
popf
les
pop
stos
lcall
or
jp
dec
mov
xor
jns
push
mov
popf
les
outsb
dec
dec
push
fsubs
or
lea
dec
xchg
cmp
insb
pop
je
mov
jns
add
inc
stos
dec
icebp
out
mov
and
notb
adc
xchg
rcrb
loopne
cmpsl
mov
jns
adc
adc
push
jecxz
xchg
or
js
ds
mov
or
mov
jbe
call
mov
inc
out
xorb
and
pop
jae
dec
push
pushf
dec
jg
xchg
xor
xchg
ret
mov
cmpsb
inc
das
outsl
mov
xchg
out
push
ret
adc
leave
fstps
dec
jnp
mov
test
hlt
aas
and
sub
mov
pop
fwait
imul
pop
push
pop
pushf
loope
mov
cs
int3
xchg
jecxz
pop
push
pop
in
mov
fimuls
je
test
imul
lahf
jp
and
inc
idivl
aas
xor
mov
bound
dec
inc
xchg
mov
outsb
mov
pop
pop
inc
in
imul
mov
xchg
daa
cwtl
jnp
cmpsl
pop
pop
dec
xchg
pop
add
xor
push
mov
icebp
sbb
xchg
fdivs
lods
cwtl
in
cmp
mov
push
fadds
in
push
add
jb
sub
out
dec
push
stos
sbb
cs
test
movsl
mov
xor
adc
pop
inc
in
inc
add
pop
cmp
sub
int3
jp
loope
rorl
xchg
pop
arpl
push
push
adc
xor
pushf
jmp
xor
icebp
test
mov
xlat
outsl
push
call
into
xor
clc
sti
push
sub
outsb
mov
cmpb
xchg
and
and
call
arpl
addr16
mov
lods
scas
pushf
and
aaa
jg
jecxz
sbb
mov
adc
int
out
mov
adc
fwait
je
or
ret
int3
xchg
test
ja
out
pushf
mov
daa
adc
fsts
aad
mov
andl
mov
push
cltd
pop
jg
fcmovbe
mov
dec
or
sbb
ret
stc
sarb
shl
xchg
sbb
arpl
sar
scas
mov
negb
cmpsb
cmpsb
jno
xor
or
push
pop
daa
enter
mov
sub
bound
aas
fdivp
cltd
out
cmc
push
pop
sub
jbe,pn
je
jmp
pushf
ja
mov
and
and
int3
or
push
ljmp
and
loope
mov
jo
scas
mov
push
cwtl
mov
addr16
ror
ficoms
jecxz
rcrb
dec
shlb
xor
push
mov
insb
aas
sbb
fld
push
jle
es
cld
mov
adc
jmp
jmp
sbb
push
jae
or
data16
stc
or
int3
popa
xor
unpckhps
mov
jns
test
sub
pop
inc
ja
clc
xchg
fnstsw
imul
xor
nop
dec
mov
pop
or
lock
les
cmp
nop
cld
shlb
mov
mov
fcmovnb
hlt
orb
push
push
jmp
xchg
hlt
dec
mov
mov
lods
xchg
mov
es
push
add
insl
sub
mov
xchg
subl
lahf
pushf
icebp
mov
jno
sbb
lods
mov
adc
push
or
sub
in
xchg
fs
daa
cmc
js
and
repnz
in
mov
repz
xor
push
rorb
les
imul
xlat
lcall
sbb
rcll
idivb
xchg
ret
mov
pop
and
test
pop
inc
pop
jae
pop
mov
mov
fsub
test
iret
inc
sbb
dec
cmp
cmp
cmp
push
inc
sti
leave
push
clc
mov
cmp
mov
mov
sub
shll
xor
dec
adc
sbb
aaa
stos
popa
xchg
aas
outsb
lcall
xchg
scas
or
add
pinsrw
bound
aaa
inc
xchg
cbtw
cmp
xchg
jg
xchg
sbb
mov
xchg
rol
imul
xor
mov
mov
negl
cld
xor
pushf
jmp
cmp
rorl
mov
lods
pop
adc
lock
call
dec
fsubs
push
lea
adc
mov
and
data16
mov
sahf
adc
mov
ror
adc
adc
dec
orl
dec
xchg
mov
shl
inc
icebp
ftst
xor
clc
icebp
ret
icebp
mov
stos
mov
and
add
mov
stc
or
daa
jnp
mov
pop
aam
lret
mov
ficompl
setle
dec
sub
xchg
push
jp
in
int3
add
pop
lahf
jnp
leave
push
dec
cwtl
xor
sbb
rclb
sbb
inc
mov
push
scas
loope
dec
out
mov
aaa
or
inc
dec
sahf
lret
xor
insl
jl
imul
ret
inc
mov
pop
stc
test
sub
push
and
pop
sti
addb
lea
dec
loopne
js
add
sub
mov
xchg
mov
pop
pop
bound
xchg
test
adc
and
scas
sbb
mov
push
xchg
divb
loopne
cmp
dec
icebp
pusha
lret
cmp
push
adc
mov
imul
call
std
xor
leave
ja
cmpsl
leave
mov
add
cmp
lods
jp
sahf
ret
xchg
xchg
out
cmp
data16
mov
sbb
push
jo
mov
and
xchg
fcmovu
out
out
nop
int
inc
sbb
dec
cltd
adc
repz
gs
xlat
xchg
jne,pt
fsubs
popf
inc
xchg
jae
xchg
pop
mov
pushf
int
fimull
iret
mov
push
xorb
fidivl
adc
xchg
sbb
sub
nop
jmp
cmp
mov
mov
icebp
cmpsl
xchg
std
mov
lret
int
pusha
pop
push
mov
cmp
push
shlb
sub
cmp
dec
mov
pop
shrl
mov
mov
xchg
push
mov
daa
sbb
mov
push
test
shlb
dec
roll
xchg
lods
stos
inc
test
shl
pop
push
push
jnp
das
pop
sbbb
cmp
imul
cli
sbb
sub
xor
aas
add
mov
pop
scas
mov
mov
mov
or
sbb
mov
dec
xchg
call
and
popa
fisttpll
pop
xchg
out
mov
mov
dec
add
rolb
cli
mov
xor
loope
nop
sbb
push
mov
push
icebp
mov
jne
and
daa
mov
xchg
fcmovu
mov
xlat
cmp
jmp
fs
and
add
inc
cmpb
push
xor
test
sbbb
mov
cmp
jbe
ret
shrb
sahf
add
xchg
pop
xchg
aas
out
scas
mov
adc
xchg
mov
leave
arpl
movsl
in
jg
xchg
adc
lods
int
pop
cli
fs
nop
and
cmp
xchg
jne
roll
lea
push
ss
and
adc
inc
pop
enter
les
cmpsl
jl
and
mov
push
cwtl
outsb
aam
xor
cmc
fidivl
add
outsl
imul
js
in
xchg
inc
add
sub
insb
rorb
mov
xlat
addr16
dec
dec
cmp
lods
daa
std
mov
mov
pusha
aaa
jmp
jp
ret
stc
xlat
and
mov
adc
adc
cwtl
aas
mov
xchg
inc
iret
repnz
ffreep
or
adc
xchg
pusha
out
insb
int
dec
das
lcall
data16
fdivl
sbb
pusha
dec
scas
jg
insl
mov
cmc
inc
imul
scas
pop
loop
fisubrl
icebp
add
clts
in
test
and
xor
nop
int
stc
fimull
divl
inc
lock
xchg
jl
push
aaa
lret
jge
lea
mov
ret
mov
ja
fwait
jmp
fbld
inc
mov
jl
xor
in
fildll
movsl
push
lea
jmp
aam
mov
insb
and
jb
jp
sbb
push
or
xchg
lds
or
into
and
inc
jge
dec
pop
lretw
mov
cmp
xchg
jnp
out
xchg
mov
gs
mov
loop
push
movsl
mov
mov
sub
mov
andl
push
push
fildl
dec
and
xlat
lds
push
mov
cltd
out
adc
pop
js
cmp
and
push
movsb
imul
test
mov
pop
in
lds
pop
stos
xchg
push
and
js
dec
test
pop
cs
in
call
sarl
mov
mov
mov
adc
shll
inc
aam
std
rorb
jp
cmpsb
or
add
inc
sbb
xor
out
jb
or
xor
cld
xor
aaa
outsb
adc
sub
gs
cmc
je
adc
ds
pop
test
divb
cs
mov
inc
sar
fldcw
inc
sub
mov
mov
push
in
scas
enter
mov
jno
xor
push
dec
test
cmp
pop
jns
int
pop
ja
loopne
sbb
rorb
out
inc
popf
jmp
jecxz
xchg
dec
push
int
mov
sub
push
push
adc
mov
fs
in
out
lods
lret
scas
mov
push
testb
or
pop
ret
pushf
push
mov
insw
and
add
shlb
mov
add
jno
outsb
pop
fcomps
mov
push
xchg
xlat
out
icebp
in
adc
dec
je
lods
jle
mov
mov
in
out
mov
test
arpl
mov
sbb
icebp
sub
gs
xchg
cmp
mov
out
adc
and
test
adc
mov
mov
pop
test
adc
fscale
cltd
inc
jle,pn
loop
bound
mov
mov
filds
jne
stc
pusha
or
mov
js
addr16
movsl
test
daa
inc
push
loope
repnz
repz
xchg
sbb
mov
adc
aaa
jg
pop
fcomps
jns
arpl
enterw
push
and
lahf
lds
je
sub
lea
stc
inc
fdivl
pop
imul
cli
lods
pop
cs
mov
leave
dec
jmp
pop
mov
in
sub
sbb
add
sbb
mov
sahf
pop
outsb
fdivrs
jmp
dec
outsb
xchg
sub
jns
fwait
mov
shlb
cmp
in
les
enter
gs
gs
xor
call
enter
push
inc
mov
pop
push
rol
mov
outsb
mov
dec
sub
icebp
or
scas
andl
dec
xorb
sbb
iret
and
ret
mov
int
cmpl
lock
in
jae
loopne
cld
fcmovnb
xorl
xchg
bound
imul
sub
mov
dec
subl
orb
xchg
dec
cli
dec
or
jns
pusha
sbbl
imul
lea
scas
stc
ja
cwtl
arpl
mov
icebp
pushf
lods
or
test
xchg
or
int
inc
fcompl
push
dec
test
ss
xchg
sub
lcall
inc
mov
mov
sub
in
lds
sub
pop
stc
xor
icebp
ficoms
inc
xchg
pop
sub
dec
orl
jmp
cmp
push
xor
inc
hlt
test
xor
adc
sub
inc
les
sub
lods
cmpl
adc
lret
push
cmp
popf
pop
fldl
dec
lods
nop
sbb
adc
es
repnz
popa
push
mov
or
ficompl
xor
xor
int
cmp
cltd
sbb
mov
ss
mov
fmull
mov
push
iret
bextr
or
pop
inc
jg
rcll
or
dec
cmp
out
notb
or
stos
les
xor
mov
popa
sub
ja
imul
cmp
movsb
or
cmp
jbe
aam
sub
rorl
push
orb
test
xor
lea
inc
push
sysenter
ret
mov
fdivs
and
pop
jecxz
divb
xor
push
repnz
mov
xor
sbb
ja
pop
mov
popf
sbb
sbb
dec
jne
sbb
xchg
lahf
sub
pop
inc
jnp
nop
out
in
dec
movsl
and
pop
les
hlt
sti
mov
jo
in
fistps
lahf
cmp
inc
mov
and
jb
xchg
push
cmc
in
inc
cli
inc
aas
fcmove
lcall
add
lret
out
mov
decl
lahf
insb
lret
mov
sti
sahf
and
lds
dec
sbb
imul
cmpb
lcall
pop
pop
jbe
arpl
fildl
out
jbe
jmp
jg
jecxz
jae
iret
or
int3
adc
ljmp
and
lea
mov
cs
mov
inc
int3
inc
pop
ret
xchg
push
int3
leave
imul
in
dec
enter
sbb
pop
sbb
dec
rolb
mov
inc
andl
jl
and
adc
pop
sub
inc
cmp
cmpsb
jecxz
inc
mov
bound
push
aas
outsb
cmp
sarl
mov
repz
in
and
adc
mov
mov
lret
push
push
adc
roll
xor
dec
out
inc
xor
mov
sarb
pushf
or
dec
popf
adc
aam
fs
inc
inc
inc
into
fistpll
pop
pop
or
sbb
mov
mov
iret
jmp
addr16
jp
sbb
mov
fildll
mov
xor
xchg
in
lea
test
test
push
push
xor
jle
mov
or
add
xchg
dec
or
mov
lock
lods
outsl
or
cwtl
cmp
ss
aas
pusha
mov
fisttpl
sub
cltd
or
push
imul
nop
js
js
cmp
into
fisubrs
mov
xchg
addr16
in
mov
mov
or
leave
lods
or
xor
add
in
cmpsb
lds
push
add
mov
hlt
and
roll
repnz
cmp
xchg
js
mov
xor
sti
ss
lret
and
cld
movsl
ficoml
sarb
ss
mov
push
sbbb
dec
lea
decl
xchg
bound
out
cmp
push
aaa
cmp
daa
mov
ds
push
fsubr
jg
xchg
mov
sub
push
jg
std
and
ss
cmc
cmp
orl
sbb
jmp
aas
nop
stos
scas
sbbb
insl
cmp
cmp
in
adc
roll
xchg
iret
adc
xchg
jl
lods
ja
es
sahf
add
loop
sbb
jbe
mov
sbb
cmp
jne
ds
lahf
jmp
dec
push
sub
loopne
lret
leave
cli
push
out
xor
enter
fninit
sti
dec
jns
in
mov
out
push
loope
pop
jno
mov
dec
pop
mov
mov
dec
pop
sti
adc
push
push
addr16
dec
shrl
inc
mov
and
cmpsl
jle
sbb
negb
clc
dec
mov
pop
lods
scas
cmp
push
adc
inc
sti
xor
sti
cmp
lods
js
lret
loope
out
or
and
stos
xchg
pushf
fs
jg
cmpsb
stc
adc
sub
jae
jae
cmpsb
fstl
inc
mov
xlat
jg
mov
mov
mov
jl
xchg
fdivs
or
or
inc
aad
or
adc
insb
imul
jnp
mov
incb
cwtl
out
mov
je
or
ljmp
xor
push
inc
mov
pop
enter
pop
mov
sarb
pop
scas
adc
das
aaa
cli
lahf
cmpsb
in
jge
stc
push
xchg
adc
std
mov
les
std
sbb
mov
leave
lret
sbb
pop
ficoms
sub
lret
dec
aad
mov
sub
or
push
stos
out
enter
pushf
or
mov
in
roll
aad
pop
add
imul
push
xchg
pop
test
bound
xor
bswap
ret
jl
cs
lret
cmp
and
xchg
add
icebp
inc
pushf
xor
and
cld
sbb
pop
jb
dec
arpl
shll
push
or
cli
je
and
pop
inc
sub
xchg
cmp
mov
rcl
cltd
xchg
hlt
ficoml
pop
jb
test
repz
add
dec
adc
jne
mov
or
mov
mov
cwtl
inc
xchg
adc
dec
pop
pop
inc
rep
xor
cmp
imul
inc
xchg
hlt
shl
adc
push
push
divl
pop
xchg
das
jge
pop
pop
ficomps
adc
imul
in
movsb
lret
and
xor
cmp
daa
pop
data16
jo
and
in
cltd
xchg
out
jp
xchg
dec
pop
cmpsb
jbe
pop
popa
mov
in
mov
jne
stos
xchg
or
xor
in
pop
gs
ja
mov
jmp
imul
adc
lds
mov
cli
outsb
loop
out
ljmp
pop
sub
clc
pop
movsb
stos
lret
cltd
lahf
and
jae
mov
jb
dec
imul
lds
add
lods
scas
cltd
jp
dec
jbe
pop
test
xor
and
mulb
jno
sub
xlat
lret
push
std
ficoml
cmp
test
inc
std
pop
dec
stc
adc
xchg
cmpl
cld
les
jno
int3
jecxz
dec
push
iret
icebp
sub
test
adc
jl
mov
push
and
mov
into
mov
or
ret
cmp
sbb
cmpsl
mov
pop
test
push
int3
mov
stos
lcall
addr16
jae
dec
enter
test
pop
mov
dec
addr16
mov
mov
cld
sub
stos
int
ret
std
mov
inc
cmc
fistps
push
xchg
or
or
es
stc
in
dec
loop
pop
push
rcrl
pop
aad
xchg
xchg
inc
pop
sub
jmp
cwtl
loop
leave
inc
jl
mov
cmp
scas
into
frstor
xchg
and
cmpsb
mov
aam
mov
and
dec
xrelease
or
sub
xchg
enter
mov
sub
cmpsb
pop
scas
add
dec
push
mov
push
mov
les
adc
and
repz
and
mov
pop
sub
movsb
fcomi
cmp
cmp
das
sbbb
pop
rcrl
repnz
adc
pusha
hlt
rsqrtps
fwait
or
aam
adc
mov
cmp
aam
fidivrl
push
jne
repz
aas
mov
in
and
mov
mov
xor
sbb
inc
fmul
addl
jmp
add
sbb
cmc
jne
mov
out
mov
lods
pop
aas
hlt
pop
jl
test
lret
dec
popf
sahf
pop
push
mov
aad
insb
enter
sbb
add
sbb
negb
lods
fsts
sbb
pushf
pusha
test
or
sub
pop
je
push
mov
sbb
mov
jns
mov
repz
lods
sbb
outsb
cmp
insl
push
movsl
imul
movsl
xlat
test
sar
in
mov
cwtl
rorl
in
push
xlat
adc
mov
xor
gs
mov
nop
ret
xlat
dec
push
movsl
ja
daa
das
lahf
jg
sbb
rorb
jp
pop
idivb
sbb
fstpt
mov
in
lods
incl
cmp
add
or
aas
pop
scas
sbb
sub
cmpsb
aad
cs
inc
xor
xchg
call
arpl
lcall
or
lods
out
pop
loopne
out
inc
jbe
add
ja
fildll
inc
pop
mov
fistl
ljmp
push
jb
dec
in
outsb
popf
xchg
jecxz
jl
add
xchg
and
dec
push
out
inc
fstp
inc
pop
aas
repnz
dec
sbb
lods
or
rorb
jmp
stos
xchg
adc
std
or
hlt
ja
push
test
out
sbb
add
cmp
imul
mov
subl
push
xor
imul
decl
mov
mov
inc
call
test
xor
jbe
pop
push
test
jns
mov
dec
js
int3
int
mov
scas
inc
mov
lahf
lds
sub
cmp
sarb
bnd
int3
orb
pop
imul
sub
repz
dec
cmp
and
or
ss
jno
cld
mov
mov
aaa
jnp
dec
ret
and
mov
or
lods
xchg
cmp
mov
sub
add
iret
scas
add
lock
ret
adc
adc
adc
adc
int
popa
mov
cltd
xchg
loop
pop
pusha
mov
rcl
shlb
push
sarb
mov
push
les
in
fwait
push
imul
push
lret
lahf
cmp
in
inc
mov
mov
mov
mov
inc
sub
cld
mov
jns
cld
or
inc
pop
sbb
rclb
daa
push
fistpll
iret
test
out
sahf
mov
xchg
or
jl
xlat
xor
mov
sbb
push
jnp
ret
lods
jecxz
jb
shlb
pop
inc
push
test
test
mov
mov
into
fcomi
pop
js
icebp
or
mov
pushf
xor
xchg
aas
insb
cs
aam
icebp
in
sti
int
loop
mov
jns
gs
sbb
xchg
lds
ja
cmp
push
add
icebp
repz
out
mov
filds
mov
inc
push
add
jl
or
jns
out
mov
repz
fists
es
jnp
sbb
shll
insb
sbb
stos
rclb
sahf
dec
add
std
pop
and
xor
push
mov
loop
xchg
xchg
leave
std
aaa
sti
sbb
mov
shr
jp
ss
orb
addr16
fisttpl
out
pop
int
stc
in
cmp
stos
ds
cmp
xchg
sub
push
push
sub
fisttpll
or
jmp
dec
xchg
mulps
push
jl
push
push
pop
xchg
mov
leave
xor
dec
pusha
negl
sub
mov
lahf
jmp
xor
add
cmp
mov
push
lahf
jmp
js
les
sub
lcall
and
in
lods
jae
stc
popf
push
and
add
lods
jae
mov
nop
xor
test
fldt
push
mov
dec
inc
aam
cwtl
lret
add
sub
inc
aad
in
xchg
cmp
jb
bound
mov
mov
test
loop
inc
aaa
dec
ja
aad
leave
inc
jg
push
jnp
pop
das
adc
testl
mov
jecxz
stos
jne
imul
sub
fwait
inc
cmpsl
add
or
mov
pop
cli
mov
test
in
imul
aas
daa
sbbb
fnstcw
out
fidivrl
or
andb
dec
ss
cmc
mov
add
adc
adc
in
repz
cmp
or
cli
inc
outsl
aad
cmc
loope
js
in
add
hlt
inc
xchg
test
pop
and
es
xor
insl
rorl
inc
or
addr16
in
dec
and
push
pop
and
fxch
aad
inc
outsl
sbb
cltd
ds
jg
or
mov
shlb
or
jns
and
outsb
jns
adc
fucom
ss
enter
int
xchg
inc
in
fsubp
pop
fs
or
out
or
and
mov
aam
adc
jne
adc
insb
add
pop
push
xor
sub
lds
inc
sti
gs
inc
mov
dec
or
mov
vunpcklps
out
lret
jl
loope
jo
sub
hlt
fdivrp
mov
mov
add
xchg
push
jle
push
or
bound
outsl
imul
stos
sub
inc
adc
es
out
push
call
sub
scas
pop
loope
xor
mov
push
jns
notl
jp
rcr
mov
jo
mov
cmpb
inc
adc
dec
cltd
pop
cmc
jle
jne
scas
mov
ja
call
movsl
xchg
cwtl
shlb
call
mov
xchg
and
jb
rcr
cld
cwtl
inc
push
psrlw
aaa
arpl
decl
mov
mov
inc
shll
push
mov
jle
push
mov
aam
push
and
mulb
pop
setnp
dec
and
in
test
push
or
xchg
pop
xor
sti
divl
xor
adc
xchg
aad
push
cltd
cld
inc
lds
cmp
scas
push
sub
aad
loope
shlb
mov
icebp
pop
loopne
in
inc
pavgw
lcall
arpl
imul
in
sub
jno
xor
aaa
and
mov
xchg
cli
adc
leave
jnp
sbb
inc
xchg
imul
mov
pop
cmpsb
jge
jbe
shlb
sbb
lods
xchg
outsl
ss
jae
nop
enter
cltd
xlat
sub
roll
rcll
fistl
iret
pop
cli
adc
xor
les
stos
xlat
rcrb
push
sub
push
adc
xor
pop
cmc
add
jle
push
stos
xor
sub
into
in
jnp
inc
dec
mov
mov
out
aaa
xchg
push
cmp
jmp
or
mov
adc
mov
ss
mov
test
jecxz
lret
mov
fcompl
out
mov
leave
test
sti
shlb
mov
leave
hlt
ss
push
push
push
movsl
sub
daa
sub
mov
xor
je
mov
or
dec
inc
pop
mov
mov
loop
xchg
les
sbb
cmp
or
stos
fwait
mov
mov
mov
lock
mov
inc
sbb
add
xor
outsb
out
jle
roll
sbb
add
push
mov
in
pop
ret
push
inc
loopne
fs
ja
mov
js
out
sbb
addr16
ljmp
loop
or
mov
fcmovne
outsb
movsl
adc
loopne
ret
mov
pop
loope
aad
iret
hlt
adc
addr16
pop
add
add
inc
adc
out
sbb
inc
jbe
call
les
mov
daa
outsl
mov
es
pop
push
inc
in
dec
ss
dec
xor
mov
sbb
hlt
pop
test
mov
push
cltd
sbbl
dec
jp
test
jbe
jle
jecxz
aas
mov
dec
outsb
jo
notb
punpckldq
into
ss
xchg
loope
xchg
in
loope
outsl
bound
scas
push
push
cmp
mov
aam
aad
cwtl
out
psubq
jo
mov
ror
out
sub
icebp
call
out
cmp
jp,pt
and
and
sbbl
mov
ret
ljmp
out
in
fisttpll
jp
push
inc
mov
xchg
or
les
and
push
cmp
imul
push
push
cmp
das
xor
lcall
xor
mov
mov
or
inc
icebp
jp
adc
fisubrs
pop
in
nop
xchg
fs
mov
xchg
popf
out
into
inc
int
add
jge
add
sahf
fistl
inc
int
and
jge
lahf
data16
roll
mov
mov
int3
inc
pop
inc
xchg
sub
mov
xorl
pop
xor
mov
push
andl
mov
cmpsb
mov
loop
aas
pop
adc
pandn
fnstcw
repz
lods
push
or
pop
mov
jb
int
adc
sub
xchg
vrcpss
lcall
cltd
sub
div
cmp
xchg
mov
push
jp
jl
jl
jmp
fnstcw
daa
sarl
cmp
sbb
xorb
dec
jnp
inc
jae,pn
and
movsb
fcmovnb
int
popf
mov
jne
mov
cltd
shll
push
pop
rolb
xchg
pop
loop
sub
xchg
ljmp
sbb
or
inc
in
mov
arpl
and
testb
pop
jns
xchg
addr16
push
jb
icebp
pop
jns
xchg
int3
dec
fbstp
dec
mov
fmull
les
mov
xchg
pop
mov
and
mov
inc
es
jmp
or
mov
xchg
mov
popf
repz
popf
push
inc
roll
jne
pusha
jns
cli
push
fisttpl
jbe
jb
xchg
dec
lds
pop
mov
mov
mov
movb
in
xchg
std
cmc
hlt
xor
pop
imul
sub
mov
xchg
inc
icebp
lret
shlb
andl
push
gs
ss
out
mov
push
xor
stos
jb
mov
stc
in
sbb
rcl
push
or
test
fcmovb
int3
adc
ret
adc
dec
add
dec
icebp
or
xor
repz
mov
dec
aad
les
push
loopne
add
pop
call
pop
scas
cmpsl
gs
mov
cmp
rorb
ss
cmpsb
lret
fcoml
aam
fists
mov
and
pop
or
cli
std
in
jle
adc
jl
sbb
idivb
outsb
sub
mov
hlt
mov
jbe
and
adc
cmp
int3
rcrb
iret
das
sub
xlat
pop
imul
shl
data16
rcrb
sbb
mov
jae
test
mov
jnp
fldenv
in
ljmp
pop
pop
inc
push
push
clc
int3
mov
xchg
and
insl
fisubs
mov
addl
push
cmp
mov
ja
out
mov
mov
mov
sbb
pop
lock
scas
mov
movsb
push
xlat
les
js
enter
jecxz
mov
mov
repnz
sbb
mov
outsb
daa
data16
mov
scas
inc
jbe
repnz
outsl
cmpsb
dec
ja
adc
and
add
jg
inc
jnp
hlt
out
inc
push
fsubp
bound
bswap
pop
xchg
push
daa
inc
dec
sbb
aam
je
cmpsb
mov
push
lret
pop
jb
pop
ss
add
mov
pop
enter
data16
adc
or
pushf
dec
push
add
mov
pushf
push
es
or
out
lods
cmp
pop
mov
dec
cmp
push
shll
mov
adc
lahf
scas
aad
jbe
cld
leave
push
test
mov
inc
dec
and
xchg
lret
shlb
in
jge
shlb
jp
lds
or
testl
cmc
push
fiaddl
or
shlb
and
lock
divl
add
mov
aas
xchg
mov
add
subl
stos
and
push
xor
or
insb
andb
mov
jno
subl
cmp
shll
mov
cld
inc
push
je
rorb
lret
xchg
mov
sub
cltd
icebp
sub
cltd
mov
or
lret
pushf
subl
mov
movsb
fldz
loope
ret
xor
adc
arpl
insl
addr16
cmp
cmp
cmpsl
sbb
add
cli
fucomip
enter
hlt
fstl
xchg
inc
notb
adc
adc
sbb
dec
rclb
dec
daa
mov
push
addr16
cmp
add
aaa
pop
cmp
scas
pusha
shll
mov
adcl
mov
lods
pushf
in
or
dec
dec
aam
or
mov
ljmp
xorb
enter
js
stos
inc
rolb
fwait
aaa
jns
sub
fmull
xor
mov
push
inc
xchg
rol
pop
push
pushf
cmp
xlat
popa
fsubl
nop
iret
mov
sbb
sti
in
pop
push
lock
push
jne
adc
mov
imul
fistpl
jb
jle
add
cs
dec
add
sbb
xchg
mov
ja
jae
jno
and
or
push
insl
inc
mov
jecxz
xchg
les
cmpsl
jbe
imul
les
cmp
add
ja
test
paddb
xchg
sbb
xor
jge
das
and
out
mov
dec
sbb
dec
mov
mov
lahf
mov
xchg
js
loop
jbe
lds
sbb
rcrl
orb
mov
push
icebp
and
popa
insl
sbb
stos
and
add
or
loopne
js
pop
ljmp
mov
sbb
test
inc
push
cmpl
fwait
xor
fidivrl
lret
dec
rol
push
mov
bound
dec
js
rcrl
repz
shll
enter
xor
lea
into
lret
or
andl
fs
inc
mov
testl
loopne
pop
jae
fcompl
xlat
stos
outsb
jb
fwait
ja
and
xlat
cmp
adc
aaa
ds
sub
sub
shll
adc
lret
add
cltd
cs
or
jecxz
lahf
adc
ret
or
push
fmuls
repz
sub
enter
sbb
xstore-rng
pusha
jmp
pop
push
mov
mov
cmp
mov
sub
jae
fs
loop
mov
and
int
ss
fs
out
les
sbbb
adc
jmp
aaa
mov
jne
in
xor
imull
xchg
clc
call
mov
incl
fisubl
pop
pop
outsl
dec
adc
mov
mov
cmp
mov
xor
mov
xchg
movsb
shlb
mov
dec
xor
mov
add
push
dec
call
or
push
inc
inc
add
shl
jne
sub
cld
cmp
test
sahf
mov
mov
jo
dec
movsl
les
sbb
jns
jecxz
arpl
mov
mov
bound
cmp
in
xchg
mov
pushf
in
jl
sbb
iret
addr16
testl
fildl
leave
dec
inc
and
sub
shrb
mov
sbb
fwait
adc
loope
cltd
adc
lret
jl
loopne
aas
nop
adc
lods
shl
sbb
loope
sub
inc
leave
push
loop
insb
repnz
mov
mov
lods
lods
lcall
xor
adc
adc
enter
jg
mov
xchg
add
push
cltd
repz
shr
mov
andl
or
dec
cmp
std
test
scas
inc
add
cs
inc
std
rorb
gs
and
sbb
daa
orb
lock
xchg
pusha
cmc
test
aaa
or
scas
pop
sbb
or
jle
xor
push
jg
sbb
in
jecxz
xor
ret
lahf
lcall
rcll
lock
xlat
js
xorb
push
cmpsl
add
jb
insb
ret
mov
movsl
stc
je
jae
ds
cmp
inc
lret
jno
cld
push
inc
or
adc
js
cmpsl
mov
test
mov
test
mov
dec
sub
push
mov
and
insl
je
gs
outsl
dec
lret
sti
jg
mov
adc
mov
inc
add
stos
sbb
xor
and
sub
push
or
adc
add
and
lods
push
in
in
mov
scas
or
push
nop
push
testl
add
cmp
xchg
mov
sub
jl
xor
mov
push
inc
fnsave
mov
cld
rolb
inc
and
loop
cmp
adc
rolb
lcall
je
add
outsl
adc
test
ja
jne
xchg
aam
mov
mov
fsubl
add
fwait
and
jbe
or
push
dec
mov
xor
or
pop
sbb
lods
xlat
aam
movsb
cs
clc
push
jle
pop
jns
mov
repz
jbe
adc
movsb
jecxz
mov
or
mov
mov
lds
in
push
mov
aas
cmp
push
xor
dec
or
xor
repnz
test
mov
push
xchg
mov
int
stos
push
bound
outsl
inc
rcll
sbb
xchg
adcl
push
shlb
dec
push
pop
movsl
xorl
mov
and
cmp
in
imul
jle
jl
int
mov
or
dec
lcall
push
push
outsb
xor
jge
jecxz
mov
popf
es
ljmp
mov
xor
daa
mov
xchg
rclb
mov
fistpl
fldcw
and
into
mov
pop
and
mul
test
sbb
xchg
pushl
std
xchg
sbb
jo
ss
adc
in
push
sbb
pop
pop
push
xor
out
mov
inc
aad
js
das
stc
push
mov
adc
vandnps
cmpsl
xor
mov
sub
xchg
and
nop
mov
in
mov
sub
pop
call
push
mov
je
xor
icebp
test
and
stos
call
in
sub
daa
shr
jmp
fcmovnb
aad
daa
mov
adc
leave
call
enter
jns
sub
xchg
aam
add
pushf
addr16
ficomps
imulb
stos
int
out
rol
sahf
mov
or
sahf
dec
aaa
add
mov
in
jne
push
pop
xlat
or
rcr
cwtl
adc
cmp
sbb
cmp
and
movl
mov
dec
sbb
inc
push
add
xor
cs
add
aad
adc
dec
mov
mov
arpl
repz
sbb
sbb
add
and
xchg
test
adc
dec
loopne
pop
xor
dec
repnz
popf
outsl
ja
dec
fcmovnbe
lods
pop
sahf
adc
and
sbb
insb
mov
inc
jp
sbb
push
or
xorb
and
jecxz
sbb
or
adc
and
and
xor
icebp
push
aad
cmc
fstpt
add
inc
call
adc
mov
dec
mov
mov
mov
test
mov
hlt
push
mov
jl
cmp
inc
ja
push
arpl
sub
loope
rorl
add
std
sub
sbb
add
call
dec
inc
test
sbb
sahf
iret
loope
icebp
pop
xor
cmc
mov
orl
jp
cmp
xchg
sub
mov
cltd
cmp
jle
add
idivl
mov
popf
push
xlat
jnp
insb
jl
ja
pop
js
sub
ret
int3
sbbl
mov
daa
sbb
mov
add
mov
mov
jl
lea
add
fwait
xchg
out
cmp
inc
xor
iret
push
or
fisubrs
int3
mov
sbb
andb
dec
fwait
test
cmp
sbb
pushf
shr
xor
jl
sub
stos
pop
jbe
movsb
add
mov
int3
test
iret
inc
loop
or
jno
outsl
leave
loop
rsqrtps
cmp
les
mov
aas
push
leave
ss
subb
addr16
jp
push
jne
imul
fldt
out
adc
repnz
shlb
in
pop
add
dec
jecxz
stos
cmp
adc
sbb
pushf
lock
cs
dec
push
adc
inc
lock
mov
addr16
pop
jo
mov
scas
or
rcrl
mov
addr16
aad
pop
jb
fucom
and
or
dec
push
mov
es
dec
shrb
xor
inc
jb
enter
cli
add
mov
imul
das
out
add
fwait
aam
fisttpl
in
int
or
arpl
mov
push
mov
in
inc
inc
push
in
ja
pushf
push
popf
int
lea
pop
stos
push
xor
mov
imul
jl
add
nop
sub
or
fwait
dec
fadd
scas
jbe
cli
ljmp
pop
mov
lds
xor
pushf
mov
cmc
push
push
ret
pop
popf
mov
sub
xchg
adc
aam
xor
inc
cmp
arpl
fstps
mov
jmp
lods
iret
repz
add
insl
out
and
mov
cmp
dec
and
dec
das
push
cmp
sti
inc
pop
mov
lods
std
mov
imul
pop
mov
xor
and
je
scas
or
adc
adc
add
lods
inc
std
dec
add
lods
jnp
pusha
sub
loope
mov
mov
jae
push
mov
sahf
push
pop
pusha
sub
ja
stos
sbbl
mov
inc
mov
cmp
push
push
and
sub
inc
dec
arpl
xor
xor
imul
shrl
das
mov
iret
idivb
xchg
test
nop
addl
cltd
scas
arpl
add
xchg
add
pop
cld
jne
inc
inc
jg
xor
add
ja
cs
jb
inc
mov
inc
or
adc
rcll
lods
lahf
or
mov
jmp
cmp
pop
or
inc
mov
in
movsl
adc
sahf
stos
lds
subb
js
inc
int
shr
adc
mov
rol
call
lods
xor
in
lds
push
ljmp
mov
popf
xchg
lods
dec
jg
mov
mov
cli
bound
and
cltd
lods
fiaddl
vphsubwd
and
loope
cmpsl
mov
pop
mov
jecxz
push
aaa
icebp
xor
add
xor
or
jo
bound
inc
js
in
cmp
stos
pop
push
fwait
and
adc
dec
jle
sub
mov
mov
push
xor
mov
mov
xor
push
mov
jo
sar
stc
mov
adcl
xor
add
dec
push
add
pop
pop
movl
push
cmp
adc
mov
inc
push
pop
jnp
imul
mov
lds
dec
fwait
cmpsl
leave
outsb
sub
pop
mov
imul
inc
add
jns
loopne
aam
test
es
addr16
adc
xor
push
std
arpl
add
test
sahf
jecxz
fsincos
or
jno
pop
jl
or
je
xchg
stos
sbb
dec
mov
sbb
push
in
lcall
xor
mov
mov
dec
lahf
xor
int
sbb
shl
testb
adc
loopne
jge
xor
fistl
ficoml
sbb
xor
jno
inc
mov
sub
outsl
jo
pop
loopne
cmp
adc
jmp
pop
insl
pop
in
addl
nop
ja
jbe
cmp
cltd
shll
push
xchg
scas
jno
iret
or
in
xchg
mov
arpl
fidivrs
push
inc
in
add
mov
std
js
mov
dec
ss
lds
ss
jbe
jecxz
jmp
sbb
fcmovnb
xor
xchg
shll
xchg
push
loop
stos
stos
jo
mov
xlat
test
mov
jle
test
jle
test
mov
testb
cmp
pop
mov
out
jo
enter
lret
dec
pop
sub
dec
adc
mov
addl
lahf
bound
or
cld
jl
xchg
test
pusha
dec
pusha
sar
and
shrl
div
fcomi
mov
xor
mov
in
jecxz
int
hlt
stc
adc
and
sbb
or
outsb
or
imul
or
sub
cwtl
jp
and
icebp
dec
pcmpgtb
adc
lcall
mov
sbb
and
jmp
sbb
out
out
cltd
cmp
sub
dec
sub
stc
gs
mov
jbe
into
addr16
push
popf
pusha
insl
jmp
fs
ljmp
push
adc
jmp
push
js
mov
out
pop
imul
inc
jecxz
jmp
fstpt
int
xor
sub
sub
pop
movsb
push
cmp
cld
popa
and
inc
push
aaa
sub
std
add
testl
xchg
sub
adc
sub
insl
addr16
into
jl
cmp
fstpt
cmp
jb
dec
scas
roll
push
xor
icebp
nop
xchg
fcoms
shlb
dec
jg
and
adc
jno
sub
inc
or
mov
pop
inc
dec
dec
dec
xlat
xorb
dec
loop
xor
cwtl
mov
aad
jo
jp
cli
cmpsb
xor
cmp
dec
mov
fbstp
jne
sbb
pop
out
mov
jecxz
pop
paddw
mov
mov
negb
push
dec
dec
icebp
or
xor
mov
shlb
inc
sti
push
mov
jnp,pn
jle
mov
insl
cli
sbb
cltd
aas
xlat
dec
add
cmp
stos
mov
rcl
push
xchg
arpl
xor
or
jg
mov
andl
outsb
sahf
push
shr
ss
lods
and
fwait
jg
imul
stc
cli
push
jg
push
scas
inc
or
icebp
inc
lea
push
inc
mov
lds
jp
dec
pop
aad
sub
stc
add
mov
push
and
repz
test
jne
orl
cmp
dec
xchg
gs
jmp
mov
pop
cmp
mov
in
repnz
add
mov
je
es
pop
push
daa
pop
sbb
shlb
mov
lock
pop
mov
sub
in
mov
xor
pop
add
pushf
or
shrb
sub
jge
add
ret
mov
push
mov
lret
addr16
push
mov
loopne
aaa
in
mov
hlt
fwait
je
pop
call
mov
and
dec
out
xor
cmp
stos
test
or
pop
movsb
push
xchg
popl
insb
js
jmp
mov
sbb
xor
pop
lds
popf
push
mov
inc
rorl
mov
dec
cmpsb
mov
cmpb
int
rcr
aaa
mov
out
and
and
out
xchg
fnstcw
inc
in
add
imull
fstp
dec
scas
pop
pop
imul
ret
pusha
outsb
fucomp
insl
adc
sahf
lods
push
into
jg
mov
dec
xor
js
adc
imul
mov
inc
int3
add
or
pop
cmp
push
sbb
imul
movsl
dec
sub
cs
push
jg
lods
push
mov
roll
cmp
hlt
mov
bound
jns
aaa
dec
lods
sbb
nop
push
cmpsb
scas
int3
dec
fs
lock
leave
iret
fistpll
and
rclb
and
js
pop
adc
outsl
mov
es
in
pop
adc
int3
pop
inc
pusha
jo
enter
or
outsb
enter
negl
push
mov
icebp
sbb
insb
dec
test
cltd
mov
push
mov
sti
or
jge
out
out
int3
stos
call
lods
inc
xchg
adc
out
and
enter
dec
sub
cmp
pop
jnp
je
nop
or
imul
mov
sub
dec
bound
xchg
fstpl
jecxz
outsb
sub
or
je
test
mov
jp
push
inc
into
sub
mov
loop
icebp
loope
sti
dec
mov
mov
lea
sbb
inc
pop
cltd
clc
mov
ret
mov
std
pushf
adc
xor
mov
jb
rsqrtps
xchg
xor
inc
sbbl
mov
xor
repz
inc
stos
pop
lcall
pop
push
jp
out
mov
push
xor
movsl
stos
arpl
call
push
ja
subb
out
jmp
lret
hlt
xchg
push
test
or
in
pop
mov
jne
add
imul
dec
jns
scas
sbbb
je
inc
shl
ljmp
rcll
mov
test
cmpsl
cmp
and
lock
fistl
xchg
mov
in
cmp
stos
cli
test
repnz
cmc
outsb
outsl
xchg
xor
mov
sti
jnp,pn
dec
push
fs
jae
es
popa
mov
lods
mov
call
pop
jnp
vmovntdq
push
inc
cltd
push
pushl
clc
jae
aad
outsl
stc
xchg
and
shl
es
cwtl
ljmp
dec
scas
pop
lret
xchg
sbb
mov
aam
cltd
adc
inc
or
aaa
cs
dec
mov
mov
add
lea
cmpsb
rcl
and
cmpb
jo
sub
lods
jge
in
repz
mov
sbb
jb
stc
clc
imul
fisubl
rcrb
sub
jns
loope
int
push
inc
push
inc
je
push
inc
push
or
daa
aaa
inc
leave
cmp
inc
inc
mov
add
dec
das
cmpsl
and
push
mov
mov
adc
loope
test
adc
outsb
pop
pop
daa
xchg
pop
adc
test
dec
test
rcrb
mov
mov
jns
push
out
in
cltd
call
decb
jne
jge
mov
movsb
fistpll
ret
push
and
cmp
sbb
testb
fdivl
add
stc
and
mov
lds
or
loopne
loope
mov
add
dec
mov
notl
out
or
mov
int
adc
push
push
repz
push
in
and
lods
jnp
inc
mov
xor
push
mov
or
rcl
and
cmp
int3
in
popa
out
das
addl
mov
push
negb
cmp
or
xor
sub
leave
divb
adc
mov
mov
mov
push
pop
dec
or
cmpsl
into
mov
jbe
jb
cmpsb
aas
inc
cmp
mov
mov
sbbl
aam
cld
enter
add
push
sbb
sbb
mov
jo
shrl
mov
das
pop
call
dec
xor
or
inc
dec
add
pop
push
or
imul
inc
mov
pop
test
add
and
jecxz
inc
and
data16
mov
push
mov
fisttpll
mov
cltd
mov
fistps
test
jno
or
nop
xchg
xchg
shll
mov
cmpsl
adc
repnz
or
mov
fstl
shll
and
repz
mov
inc
inc
fdivrs
outsb
fcmovnb
jecxz
dec
sub
cmc
xchg
adc
mov
icebp
sub
dec
push
call
lea
pop
dec
call
sub
fisubs
out
jne
into
dec
pop
cmp
pusha
xor
cmpsb
out
mov
sub
xchg
jae
pop
or
in
mov
nop
test
push
fistl
sub
pop
lcall
adc
shl
or
jmp
scas
cmpsl
dec
lods
mov
mov
push
mov
dec
shll
pop
jg
cmpsl
adcb
inc
jg
aas
xor
add
add
inc
rclb
xchg
in
sbbl
cltd
and
pop
aaa
cmpsb
out
sahf
dec
push
into
pop
cmovno
sbb
or
mov
mov
or
movb
lret
mov
movsb
mov
rol
lret
cld
ret
xchg
inc
cwtl
or
cli
sub
in
sub
sub
pop
pop
push
mov
pop
push
add
mov
and
sti
adc
sub
xchg
mov
sbb
fsubrs
popa
push
cmp
inc
jle
fisubrl
aas
jns
pop
or
mov
lea
arpl
in
and
lret
push
popf
push
mov
aaa
test
and
mov
cs
lds
mov
dec
lock
shl
daa
xchg
les
push
cmp
outsb
fsubs
pause
adc
idivb
push
cltd
lea
in
imul
mov
mov
popf
mov
cld
mov
mov
mov
jp
lea
movsb
movsl
pushf
xor
out
jg
xor
int
ss
dec
fstpl
popa
hlt
mov
mov
mov
push
jge
mov
ja
pop
mov
sbb
jecxz
in
fs
add
lret
jns
mov
clc
pop
inc
add
aad
jecxz
inc
inc
jge
or
push
add
bound
lret
lea
cmp
add
pop
mov
jle
das
dec
call
cmp
inc
imul
mov
add
mov
andb
add
mov
enter
jp
pop
divps
jg
inc
mov
adc
push
mov
cmc
push
mov
xor
xor
sbb
xlat
jne
mov
loopne
or
add
push
sbb
cltd
pop
inc
fidivrs
addb
cmp
xchg
fwait
jecxz
cmp
cltd
mov
add
xchg
xchg
repz
ds
sbb
mov
sbb
test
xchg
icebp
mov
add
add
push
mov
outsl
push
jne
andb
xchg
mulb
push
jb
cld
out
dec
xchg
orb
jnp
addr16
mov
dec
sbb
adc
jl
and
xor
test
xchg
rcll
sti
cld
cmp
jae
iret
lds
adc
ret
fadds
mov
pusha
adc
lds
stc
test
mov
addr16
popf
push
cld
in
jne
or
cld
add
adc
loop
enter
add
mov
mov
mov
push
movsb
dec
rcl
in
sahf
push
jns
push
sub
and
dec
mov
or
xor
or
jg
shlb
add
inc
repz
dec
dec
fwait
scas
sbb
popl
pusha
data16
pop
mov
ss
push
or
sbb
sub
filds
inc
jle
jmp
jle
cld
in
shrb
outsl
adc
push
xchg
adc
mov
addr16
sbb
dec
push
push
inc
mov
aad
cmpsb
pushf
aas
lock
or
and
dec
ja
mov
push
insl
or
test
adc
xor
in
cmp
out
insb
lods
push
sub
ret
lret
mov
fiaddl
xchg
dec
sub
rcll
pop
es
lock
mov
inc
mov
push
je
jbe
jae
mov
aaa
stos
cs
xor
jle
cmp
mov
push
stc
xorl
jp
jmp
call
cltd
sub
inc
jmp
and
cmp
cmpsb
inc
mov
push
fbld
sub
das
fs
fadd
pop
pop
pop
dec
dec
pop
mov
pushf
pop
xor
cmpsb
xor
bound
xchg
adc
mov
arpl
ja
mov
shrb
xor
inc
adc
outsb
sbb
mov
pop
inc
ss
adc
pushf
push
jge
ds
add
sahf
movsl
and
imulb
ficompl
jge
sti
mov
add
mov
cmpsb
lods
fmul
lods
lds
movsb
sub
push
bound
xchg
adc
sbb
sbb
jmp
jl
subl
fxch
push
push
jne
rclb
jne
adc
add
sub
lock
mov
mov
adc
lret
mov
push
lods
idiv
push
jg
adc
out
pushf
subb
data16
jle
mov
inc
insb
outsl
testb
fucom
mov
cwtl
xchg
xor
push
sub
test
loop
cmp
adc
lods
push
inc
pop
sub
add
push
int3
sub
adc
jno
rcl
insl
mov
push
mov
imul
in
xchg
mov
cmpl
mov
dec
in
pop
ss
sbb
and
inc
mov
xchg
imul
adc
cmp
fistps
lds
mov
push
ficompl
gs
adc
push
stos
inc
lahf
in
push
aas
xlat
daa
xchg
icebp
ret
cmp
sbb
jnp
stos
jo
or
popa
lret
add
xchg
out
pop
lret
mov
xor
arpl
fnsave
cwtl
add
jmp
ret
into
not
sbb
mov
sbb
roll
fstl
and
xor
inc
or
lret
movsb
nop
xchg
stos
dec
movsb
je
push
ret
push
or
mov
cmovne
sub
neg
sbb
xlat
pop
cmpsb
jp
fists
jo
pop
sub
test
or
push
cld
cltd
jno
inc
mov
or
adc
ror
ljmp
or
or
aam
idivb
mov
pop
stos
lcall
imul
xchg
test
rclb
push
mov
test
xchg
push
aaa
arpl
sbb
xor
adcl
push
inc
repz
jp
cwtl
cmp
pop
mov
jno
mov
cmp
out
jecxz
into
xchg
jbe
lcall
pop
outsl
push
or
insl
adc
push
inc
inc
sarl
mov
dec
test
call
fsubrs
out
popa
pop
jp
scas
adc
mov
sub
xchg
clc
repz
imul
cld
xchg
loope
jo
jae
adc
jne
push
mov
jne
ss
xor
loop
outsl
imul
cs
icebp
mov
jo
jb
push
idivl
in
add
xlat
popf
lea
stos
js
sbbl
movsl
fnstsw
sbb
xor
xchg
cld
push
pop
int
jg
add
stos
loope
or
jno
scas
add
rcrb
mov
fdivrl
addr16
into
lds
roll
dec
dec
out
mov
jge
fwait
dec
add
sti
push
cs
mov
dec
sub
in
xor
inc
mov
xchg
sbb
sub
inc
jae
insl
and
mov
push
mov
int3
sbb
sbb
lret
mov
jb
adc
mull
push
shlb
mov
pop
sub
aas
ljmp
xlat
iret
mov
shrl
inc
xchg
cmp
cli
rolb
lahf
js
pushf
mov
and
lock
mov
clc
add
cmp
pop
icebp
xchg
sarb
lret
and
imul
sbb
icebp
dec
pop
and
xchg
xchg
jmp
popf
sbb
nop
xchg
pop
jge
jle
add
dec
ja
and
movsl
xchg
xchg
stos
and
xor
je
jle
jbe
movsb
sub
xchg
jae
add
jae
fldcw
inc
xchg
es
sbb
inc
pop
xchg
enter
enter
leave
or
xchg
mov
aaa
imul
es
daa
movsb
outsl
add
add
jns
sbb
push
fsubrp
stc
push
sbbb
or
dec
int3
repz
jmp
lcall
cld
push
shrb
sahf
xor
loope
fwait
push
scas
or
adc
mov
mov
loope
hlt
sbb
push
pop
out
cs
and
aas
push
ljmp
lea
mov
push
sbb
fcmovnu
out
cmp
mov
popa
sub
iret
sbb
test
xchg
int3
test
scas
jne
sbb
insl
gs
jae
sti
std
jecxz
fstl
cmp
popf
jo
vcvtsd2si
add
daa
xchg
shr
sbb
mov
jp
mov
and
xchg
add
dec
fs
repnz
jge
pop
sub
clc
jb
sub
push
dec
sbb
push
push
pop
sub
or
aas
aam
cmpsb
pop
cld
cli
dec
mov
movsl
cwtl
dec
dec
popf
inc
jg
pop
inc
sub
iret
loop
sub
push
sbb
call
add
dec
aam
subl
mov
std
dec
mov
lret
sbb
add
std
ss
sahf
adc
lods
dec
ret
ljmp
xor
js
iret
adc
ja
push
mov
adc
fidivs
cmp
ret
insl
clc
cwtl
jae
push
shrl
lods
gs
xchg
out
jmp
mov
int
ds
lea
repnz
pop
inc
subl
scas
jecxz
push
or
adc
push
cli
shlb
hlt
lcall
push
pop
mov
enter
dec
cmp
das
adc
mov
inc
fcmovu
add
sbb
xor
lock
rcl
adc
cmpsb
dec
cwtl
insl
movsb
pop
insb
push
mov
adc
cmp
jge
fimuls
pop
test
clc
mov
inc
daa
add
leave
sub
outsl
insl
leave
pop
in
js
lret
and
adc
sbb
icebp
leave
jmp
inc
cmp
or
pop
add
and
fcoms
cmpsw
pop
sbb
push
lcall
or
adc
and
daa
inc
mov
xor
arpl
add
push
les
cmp
or
pop
pop
pop
in
std
adc
repz
jecxz
lock
cld
sbbb
scas
sbbl
popf
shl
cmpsb
mov
addr16
les
dec
jp
mov
dec
iret
push
lret
or
inc
add
dec
aas
lahf
dec
sbb
mov
imul
mov
pop
pop
mov
vcomisd
and
faddl
mov
and
sbb
mov
add
in
xchg
dec
push
ja
jge
lods
inc
mov
mov
stos
dec
adc
loope
adc
dec
fistl
inc
sub
pop
jno
xor
daa
mov
insb
xchg
or
ljmp
test
pop
jmp
shll
dec
mov
add
pop
popf
shlb
insl
stos
mov
sub
dec
and
jb
jo
and
sub
gs
addl
loop
xchg
lret
xor
lea
mov
sahf
popf
pop
testb
sbb
into
in
mov
shrl
fisttpll
or
jne
repz
push
cld
xor
popa
inc
mov
jecxz
nop
fs
sub
cmp
sub
push
test
out
push
rolb
roll
test
fsubp
cmp
enter
and
and
mov
movsl
mov
jno
sub
dec
jo
fisttpl
cli
les
and
jo
mov
inc
xchg
mov
adc
shrb
jns
jns
lret
pop
mov
adc
push
add
add
outsb
loope
push
repz
js
mov
inc
cli
outsb
mov
mov
add
lcall
fimuls
rcrl
push
xor
loop
fistpl
out
push
add
sub
pop
outsl
jae
scas
das
sub
sub
push
add
cmp
adc
push
imul
lods
cld
push
outsl
or
jnp
out
mov
movsl
cmc
fisttpl
pop
mov
pop
inc
mov
rcrb
sub
sub
pop
xchg
inc
or
cmpsb
fs
test
sub
sbb
loope
xlat
das
xchg
lods
gs
sub
cmp
ja
ja
dec
mov
and
mov
mov
xchg
pop
stc
aas
sub
pushf
aam
addr16
lret
cmc
cmpsb
insl
and
xor
jecxz
je
sub
inc
das
jle
push
mov
adcl
insb
lods
jl
imul
rcl
lret
faddl
pop
jg
lods
imul
movsb
mov
sarb
push
xorb
in
inc
xor
loope
jns
or
popa
frstor
hlt
jl
mov
loopne
mov
orb
stos
out
mov
and
pop
test
ljmp
mov
add
ret
cmpsl
arpl
lods
icebp
mov
pop
xchg
jae,pt
inc
sbb
mov
cmp
cmpsb
gs
sub
inc
cld
or
movb
pushw
xchg
and
cmc
push
lahf
fcoms
and
in
lcall
jns
scas
inc
cli
fdivl
adc
lea
dec
mov
lods
loopne
lahf
mov
roll
dec
fcoml
xchg
cmp
test
sbbl
push
cltd
mull
lahf
pop
in
push
fisubl
add
add
les
cmc
mov
or
clc
pop
stos
jne
lret
cmp
filds
jae
sets
movsl
cmp
sbb
jle
sub
push
fs
jmp
int
imul
mov
rol
sub
adc
repz
pushf
add
push
sbb
lcall
fidivl
dec
xchg
imul
jmp
push
cwtl
icebp
outsb
in
fists
lret
enter
mov
aas
or
pop
ficompl
and
movsl
xor
int3
int3
xor
out
mull
lret
add
jbe
jecxz
pop
scas
pop
push
push
into
xlat
test
test
xchg
jne
adc
sbb
xchg
pop
inc
xor
pop
pushl
adc
std
pusha
push
clc
insb
out
fimull
adc
test
or
mov
sbbl
test
lahf
push
fsubl
add
inc
push
sub
push
add
inc
addb
cli
pop
inc
inc
cmc
ja
mov
test
xor
jne
sbb
mov
mov
dec
push
loope
stos
loopne
pop
mov
lods
int
mov
or
rclb
mov
jbe
push
or
mov
cld
adc
into
movsl
lds
jmp
test
mov
cltd
orb
repnz
or
mov
mov
rcl
ja
pop
dec
inc
jb
out
pop
sahf
jne
test
out
xchg
xor
cmpsl
push
or
and
test
sub
or
and
and
lods
cs
cmp
jge
pop
dec
inc
fwait
sub
call
lods
lods
push
loope
fwait
out
test
pop
into
sbb
lcall
js
sub
jae
xlat
imul
cmpsb
inc
inc
cmp
cmp
jbe
ret
faddl
pop
movsl
aaa
cmp
inc
jnp
push
dec
lea
dec
push
arpl
cs
ret
inc
outsl
inc
fildl
and
idivl
in
int
stc
out
dec
test
adc
hlt
adc
std
lods
imul
stos
fsubs
mov
lret
pop
push
outsb
cld
leave
dec
pop
dec
out
dec
cmp
inc
jp
jne
dec
xchg
clc
push
inc
mov
mov
lret
sub
add
cmp
aam
adc
std
test
cmpsl
mov
lock
sbb
scas
shlb
jns
lret
fcompl
mov
xor
xorb
sub
xchg
sbb
inc
daa
push
test
ss
stc
stc
pushf
outsb
fdiv
jbe
xchg
ss
bound
mov
xchg
lcall
notl
ljmp
pop
loope
dec
xchg
sub
dec
mul
push
insl
add
dec
mov
mov
out
xor
mov
in
push
out
aas
mov
loope
test
jl
mov
sbb
ss
sbb
int3
cli
push
loop,pt
inc
shr
pop
rol
loopne
incl
movsb
scas
rorl
das
lahf
or
or
hlt
push
push
or
shrb
imul
adc
inc
add
xchg
mov
adc
ret
or
sbb
xchg
cmp
pop
nop
sbb
push
cmp
std
test
pop
xor
pop
fmull
sbb
adc
clc
not
imul
cmpsb
lcall
mov
xor
test
push
das
mov
cmp
or
pop
mov
cwtl
data16
fadds
rorb
shll
mov
stos
adc
in
push
push
mov
xchg
lock
adc
lods
sub
mov
push
push
stc
stos
xchg
jl
shll
mov
lds
and
cli
scas
mov
ret
jnp
mov
fisttpll
loopne
mov
pop
outsw
dec
sub
push
adc
jmp
push
or
test
mov
xor
loop
pop
lahf
ja
jbe
jb
add
rorl
inc
mov
in
push
jae
pop
push
inc
jecxz
fsubs
jae
in
push
or
xchg
jg
pop
insl
lcall
roll
sar
mov
filds
aas
push
cmp
movsb
cld
icebp
sub
js
sti
and
in
les
xor
inc
dec
mov
cmp
mov
sbb
loope
cmpsb
mov
inc
fldenv
inc
mov
mov
xor
aas
dec
jo
addr16
inc
cmpsl
pop
out
scas
pop
and
xchg
mov
push
lods
cld
inc
stos
or
lret
jnp
pop
bound
mov
fsubs
jmp
iret
sbb
mov
push
jmp
mov
mov
outsl
movaps
dec
lock
jns
cmpl
jne
orl
mov
pop
sbb
jb
sti
aas
enter
pop
inc
ljmp
fcompl
clc
xorl
icebp
xchg
enter
frstpm(287
xor
gs
sub
mov
imul
mov
inc
cmp
rcrb
xor
cmc
enter
pop
xchg
movsl
mov
imulb
arpl
ja
mov
cmpsl
pop
dec
imul
lock
jne
frndint
lods
sti
into
clc
ret
cmp
daa
cmpl
jb
mov
fucomi
mov
jmp
roll
gs
jmp
sarl
mov
inc
sbb
lret
inc
xor
jns
inc
adc
loop
std
adcl
push
aam
jp
int3
add
iret
call
mov
enter
pushf
dec
popf
popa
jne
mov
xchg
daa
sub
not
jne
pop
loop
xchg
xor
lds
inc
xlat
inc
es
add
jl,pn
xchg
jmp
or
mov
dec
loopne
rcl
sahf
cld
lods
sub
std
mov
dec
rcrl
dec
in
lds
jmp
ljmp
pop
xlat
add
mov
mov
xchg
sbb
repnz
icebp
add
xchg
jle
shrb
push
mov
fcoms
enter
sub
stos
scas
mov
mov
add
cmpsl
or
pusha
dec
jecxz
movups
mov
sub
out
imul
add
jmp
into
pop
inc
mov
out
ss
push
lret
mov
push
rolb
outsl
shll
test
dec
xor
in
loopne
ja
lahf
xchg
and
insb
pop
mov
cmp
fdivl
fcmove
fs
mov
adc
mov
scas
test
mov
and
dec
dec
out
bsf
inc
test
cmp
cmpl
movsb
mov
mov
les
jle
aam
cmp
and
jno
insb
fmulp
and
inc
rorl
sbb
stos
in
jo
jns
jge
loope
fbstp
movsb
mov
jecxz
mov
sbb
mov
insl
cmpb
dec
out
movsl
repnz
pop
out
cs
cmp
int
xlat
cmpsb
stos
mov
sti
int
leave
arpl
sarl
adc
iret
dec
ret
push
icebp
mov
lret
mov
mov
mov
cmp
idivb
ss
inc
and
shlb
cwtl
enter
fld
cltd
mov
fwait
mov
rcrb
sbb
cltd
inc
out
mov
ret
pop
inc
inc
mov
jecxz
movsl
repnz
fildl
or
inc
mov
mov
and
xchg
gs
scas
and
notl
imul
inc
pusha
sbb
stos
outsl
aas
fs
mov
retw
in
into
mov
inc
out
lret
sbb
push
adc
pusha
test
test
or
test
jns
push
in
cmp
pop
xchg
out
test
test
fldcw
out
pop
test
nop
pop
pop
inc
push
push
jge
stc
cmc
sub
dec
jecxz
insb
jae
scas
icebp
dec
push
pusha
xchg
icebp
push
mov
je
xor
xor
fldcw
iret
gs
roll
inc
fstpl
sub
fs
pusha
xchg
dec
iret
inc
in
leave
jle
xchg
mov
mov
push
inc
and
shlb
or
roll
jno
dec
aad
outsb
sbb
pop
cmpsb
bound
inc
mov
pop
pop
sub
movsl
mov
adc
dec
out
dec
jge
cmp
xchg
rolb
jno
clc
and
scas
xlat
pop
mov
pop
xchg
sbb
dec
scas
lods
mov
gs
inc
lcall
fbld
sbb
rcrb
inc
lahf
repnz
lret
sbb
mov
cmp
xchg
mov
sahf
call
fs
mov
xchg
mov
xlat
rcll
dec
into
lret
lods
mov
daa
and
in
push
xchg
sub
das
cwtl
aam
mov
movsl
inc
add
popa
mov
cmpsl
cmovl
cmp
jg
inc
mov
inc
jl
jno
or
dec
dec
push
xchg
mov
sub
dec
clc
jp
call
movsb
mov
cmpsl
xor
sarb
pushf
pop
ret
fxch
in
inc
dec
sbb
ja
and
add
test
push
xchg
in
add
imul
pop
imul
jg
aam
imul
les
dec
jl
dec
inc
ret
push
pop
mov
mov
push
mov
repnz
loope
or
popf
imul
iret
cmp
push
rcl
and
jecxz
int
and
mov
in
addr16
shll
and
clc
push
sbb
dec
mov
xorb
xor
add
into
cltd
cmc
je
mov
cmpsl
ds
push
xlat
es
mov
jo
pop
push
dec
push
or
inc
xlat
inc
fstl
cmp
std
in
mov
in
push
outsl
imul
addr16
ss
dec
inc
leave
cmp
mov
sub
cmc
cmpsb
je
mov
hlt
cli
add
mov
out
lahf
add
jmp
mov
adc
xor
or
clc
adc
cld
repnz
shrl
lahf
sub
cmpxchg
in
add
jb
mov
inc
dec
dec
jg
xor
jb
mov
idiv
rcrl
mov
pop
hlt
mov
mov
jns
xor
insl
mov
xchg
icebp
cld
cmp
in
and
das
adc
push
add
test
gs
rcrb
mov
test
int3
or
insb
jge
loop
shlb
push
stc
mov
fwait
lock
cmp
jge
inc
sbb
dec
test
ss
popa
stc
pop
arpl
subl
fdivp
gs
inc
call
sub
or
adcb
lds
sbb
cmp
mov
rcrl
pop
or
cwtl
mov
lahf
and
in
push
lods
aam
sbb
sbb
lods
mov
adc
es
add
sub
ja
lds
lret
push
fcmovnu
sar
mov
cmpsl
dec
test
inc
and
ds
add
jbe
sub
cwtl
mov
jb
fwait
popa
fisubl
mov
aaa
sbb
popf
out
cli
imul
fmulp
dec
int3
lahf
gs
shl
fidivl
add
movsb
add
lods
int3
fisubrs
ret
xchg
sub
shlb
add
adc
fdivrs
mov
mov
loope
cltd
xchg
jmp
jg
lea
jne
cmp
push
data16
push
adc
or
or
and
or
hlt
jge
cmp
cmpsb
out
adc
mov
hlt
mov
cmpsl
xchg
mov
mov
imul
dec
int3
in
imul
cmc
fistpll
stos
enter
int3
push
adc
stos
add
adc
scas
push
shlb
jmp
push
popa
popf
enter
imul
out
insl
jne
fisttpll
ljmp
ja
js
insl
cmp
fsubrp
pop
les
js
fwait
rorl
fwait
mov
and
xor
jle
sti
lret
mov
insb
sub
clc
pop
xchg
mov
adc
mov
ljmp
fdiv
cwtl
repnz
cs
iret
lcall
rcrl
mov
test
fcoml
mov
es
mov
sub
xchg
out
pop
jg
aam
test
jbe
inc
and
or
aas
dec
in
sbb
inc
push
mov
enter
jnp
jns
cmp
fdivrs
xchg
sbb
mov
mov
pop
enter
cli
outsl
xchg
adc
inc
fsubr
jo
daa
ds
push
jmp
lods
adc
daa
mov
add
icebp
sbb
sti
pop
lcall
xor
bound
sbb
hlt
fnstcw
adc
dec
xchg
jecxz
shlb
adc
aas
adc
xor
fwait
addb
cs
jae
popa
aas
jg
sbb
xchg
rclb
mov
je
mov
adc
push
pop
add
push
mov
in
and
out
ret
xor
lds
mull
sub
mov
jp
data16
inc
std
and
inc
daa
or
rorb
sub
xchg
cmp
testl
out
ja
mov
lret
aam
fnstsw
mov
ret
xchg
mov
add
mov
insl
and
pop
mov
in
add
enter
sbb
icebp
or
lods
inc
daa
inc
and
mov
js
aas
lds
test
ss
mov
xchg
and
cltd
out
movsl
adc
mov
in
pop
add
xchg
bound
xor
push
out
shll
jp
xchg
dec
sub
mov
push
mov
inc
movsb
xor
mov
icebp
mov
es
in
out
adc
pop
cmp
je
push
fbstp
mov
lret
pop
xchg
incb
add
js
enter
addl
test
clc
rcrb
popf
mov
sbb
adc
add
dec
fldl
ja
cld
mov
mov
sub
or
pushf
dec
ss
stos
xchg
shll
ljmp
adcl
out
int
jmp
lea
lods
xor
xlat
push
mov
inc
into
adc
push
mov
push
add
insl
mov
negl
test
popf
gs
leave
ljmp
ja
xor
imul
push
cmpsl
push
lods
popa
or
out
push
data16
xchg
push
add
mov
push
jo
addr16
fwait
sbb
mov
mov
jbe
and
scas
test
shrb
jl
mov
mov
mov
xor
out
cmpb
orb
addb
sarl
andb
negb
clc
orl
or
lea
sbb
stc
push
out
dec
or
shlb
jne
jnp
call
jle
xchg
xchg
and
stc
inc
push
out
sbb
loop,pn
cmpsl
push
dec
scas
in
mov
mov
xlat
cld
test
insb
dec
aam
xchg
mov
xchg
push
sahf
mov
ret
adc
xchg
sti
jp
xor
and
call
aad
pop
dec
leave
ret
cmpsb
imul
test
fcoms
scas
fdivrl
jmp
or
adc
sub
sahf
mov
add
jp
mov
es
dec
scas
out
xor
xor
orl
xor
xchg
or
and
lahf
inc
sbb
ret
inc
xchg
cs
dec
cld
sub
fstps
mov
fdivrl
push
push
jne
or
js
jmp
push
pop
jp
inc
sbb
rorb
sbbb
mov
mov
jle
mov
test
fwait
push
insb
out
int
mov
orl
pop
and
aad
rorl
pusha
jle
or
and
push
adc
dec
and
stos
cmp
xor
push
add
xchg
lock
push
sti
xchg
dec
xchg
scas
mov
sbb
cmpsl
jns
pop
add
loope
and
push
cmp
fisubrs
add
mov
jnp
sbb
and
in
mov
jae
dec
subb
xchg
mov
jp
mov
pusha
pop
jo
stos
js
ja
fs
sbb
or
pop
pop
push
adcb
xor
rep
pop
sub
mov
repz
repz
gs
popf
popf
pop
pop
loop
ret
test
push
jl
loopne
and
je
mov
push
mov
jl
ss
mov
pop
push
shrb
mov
push
mov
push
adc
test
lea
imul
std
imul
inc
push
sub
jo
lea
out
pop
mov
inc
sub
xchg
push
or
das
mov
mov
repnz
in
push
mov
call
mov
js
xchg
loopne
fsubl
pop
lds
mov
das
iret
adc
rcrl
mov
popa
fldenv
inc
adc
aam
pushf
and
pushf
dec
pusha
cmp
sbb
xchg
aas
jno
mov
lods
pop
dec
or
sti
cltd
lret
xchg
mull
ret
jbe
mov
add
cmpsb
push
xchg
leave
add
arpl
jae
aaa
pop
in
rcrl
mov
aaa
aaa
sbb
inc
sahf
mov
sbb
mov
call
mov
movsl
imul
xor
jge
or
leave
xchg
lahf
sub
arpl
mov
fcmove
insb
adc
dec
jnp
roll
add
push
adc
lcall
test
sbb
icebp
mov
jmp
mov
bound
or
inc
xchg
div
sub
xor
lock
xchg
mov
mov
lea
scas
jns
in
movsb
dec
in
fstpl
bound
test
stos
sub
dec
xor
fs
outsb
lcall
jmp
inc
pop
xchg
mov
hlt
mov
lret
pop
decb
xchg
les
sahf
mov
das
mov
mov
or
ret
rorb
pop
das
movsl
cmp
pop
les
jge
je
data16
in
sub
or
and
sub
xchg
add
sub
pop
xor
push
popa
insb
push
pop
lock
jl
pop
or
imul
xchg
mov
or
pushl
dec
movsl
rcll
xchg
and
cmp
daa
cmpsb
imul
dec
sub
push
jnp
repz
cmc
cltd
test
sarb
sub
xchg
mov
out
xchg
aaa
call
mov
lock
in
lahf
add
fcoml
es
xor
xchg
pop
pusha
jl
push
je
shlb
xchg
bndldx
sti
mov
aas
push
clc
sbb
mov
pop
sti
gs
rolb
push
aaa
int3
rolb
dec
cmpsb
mov
fs
xor
adc
and
dec
xchg
inc
mov
in
imul
sbb
sbb
fistps
arpl
popl
push
sbb
outsl
cmp
cmp
jle
scas
cmp
rorb
dec
stos
test
mov
mov
cltd
out
adc
stos
push
and
aaa
shrb
mov
outsl
jbe
mov
dec
testl
lret
dec
sub
cmp
out
ljmp
push
mov
mov
xchg
pop
in
sbb
addr16
and
pop
xor
push
mov
xchg
movsl
pop
mov
fdivr
in
arpl
adc
fwait
addr16
enter
lcall
push
data16
stc
mov
sub
sub
and
inc
lds
cmp
test
mov
rcr
xchg
cwtl
lret
xor
ljmp
xor
sub
lods
mov
xchg
adc
dec
inc
ret
test
mov
dec
dec
push
jbe
or
lea
sbb
xchg
out
icebp
mov
inc
sub
push
outsl
xor
sarb
lods
shll
adc
push
cld
or
mov
loope
repnz
movsl
lods
int
aas
imul
push
inc
insl
pop
jbe
jno
jg
test
xor
fs
jno
in
sub
add
adc
sbb
nop
cmovae
pop
mov
popa
fsubrp
dec
fimull
mov
cli
ds
xchg
xchg
mov
rolb
loopne
mov
int3
jb
cmpsl
movsl
dec
dec
cmpsl
and
and
xchg
int
jae
ret
mov
jge
mov
xor
add
sub
lds
movb
cwtl
int
add
inc
sarb
cmp
jbe
icebp
pop
pop
popf
mov
mov
testb
and
es
pop
sti
data16
inc
jnp
and
pop
shll
xchg
mov
and
sub
sbb
mov
rcr
fmul
lods
lds
andb
mov
sub
fistl
dec
subb
jle
mov
mov
inc
int3
ds
nop
scas
or
pop
int3
cmp
call
push
dec
jp
arpl
jnp
or
fs
lret
hlt
in
pop
mov
out
test
into
shlb
push
cld
mov
jge
sub
inc
jle
shll
mov
cli
clc
mov
test
inc
pop
push
and
int3
sub
cmp
fisttpll
jl
adc
fwait
mov
add
pop
xchg
stos
pop
aas
rolb
pusha
shl
enter
clc
jp
nop
lret
jg
mov
or
pushf
leave
cmpsb
adc
std
fmul
xorb
mov
adc
cmpsl
dec
aas
mov
lock
xchg
mull
fiaddl
mov
mov
add
sbb
jo
testb
jbe
shr
inc
rcr
xlat
std
iret
cmp
inc
push
mov
inc
cmp
push
ret
or
je
and
fisttps
cmpsb
cmp
andb
adcb
lock
jb
dec
jg
addr16
cmpb
es
gs
dec
aas
inc
sub
mov
dec
fiaddl
insb
cmp
negl
aas
sub
mov
xor
loope
rolb
jl
shrl
shr
sub
call
inc
jg
mov
pop
dec
and
test
out
fcomps
sub
sub
mov
call
xor
dec
out
mov
xchg
mov
int
mov
and
test
and
add
push
imul
cli
roll
xor
ljmp
int
mov
leave
out
push
call
push
pushw
sub
sbb
ss
imulb
push
fs
outsl
std
cmp
pop
jg
in
clc
xor
lret
divb
shlb
jo
pop
fistl
add
lahf
movsb
test
loopne
rcl
mov
sub
lock
jne
mov
rcrb
test
xor
lods
adc
aas
mov
aam
inc
icebp
dec
add
jnp
mov
adc
mov
lret
rorl
adc
addr16
xor
loopne
movsl
pop
and
mov
ds
arpl
push
sti
xor
mov
int
jo
dec
push
xor
fdivrl
stos
nop
xchg
daa
add
pop
addr16
rclb
add
inc
add
test
insl
out
rorb
jb
fcmovne
jle
push
jb
rcrb
mov
cmp
hlt
and
pop
sbb
mov
hlt
sbb
out
sar
arpl
ljmp
mov
divb
sub
repz
xchg
sahf
push
jecxz
das
test
and
imul
lcall
outsb
ret
divb
dec
sbb
repnz
mov
mov
shll
dec
test
fbld
into
jbe
xchg
pop
adc
daa
data16
repnz
xor
mov
leave
mov
cmpsb
mov
cld
repnz
add
jl
xor
jbe
mov
nop
push
pushf
adc
xchg
pushf
cli
mov
in
fisubl
fwait
xlat
imul
jl
mov
mov
xchg
push
cmpsl
cmp
or
lods
mov
cmpsb
fdivrp
add
xchg
xor
jmp
sub
lods
ret
gs
addl
les
out
xchg
and
jg
mov
add
cmp
hlt
popf
push
xchg
loop
push
out
repz
lcall
rcr
push
lret
cmc
insl
icebp
and
lods
outsl
enter
mov
or
daa
stc
jae
push
or
mov
xor
fidivrl
subb
and
xchg
mov
xchg
mov
dec
add
adc
test
adc
xor
xor
lds
or
divl
xchg
adc
les
xor
movsb
fcomps
daa
pop
out
push
push
xor
mov
out
adcl
enter
inc
pop
xchg
mov
and
test
into
push
mov
lret
jle
mov
sub
push
sbbb
xchg
ret
xor
mov
les
push
pop
repnz
or
push
inc
ret
or
out
jae
subl
outsl
push
test
push
scas
mov
add
cld
fsubs
loop
enter
jl
lods
mov
test
jmp
lahf
ffreep
in
xchg
shlb
adc
inc
mov
bound
jle
dec
pop
psubusb
xor
mov
ret
loop
cmp
sarb
xchg
in
and
sub
pop
call
mov
fistl
push
jbe
daa
jp
cli
ljmp
sbb
call
addr16
inc
clc
xchg
xchg
inc
sub
mov
xchg
fnsetpm(287
mov
lret
adc
mov
sbb
pop
add
andl
mov
and
data16
int3
inc
lret
or
mov
jno
mov
sub
cltd
test
cmpsb
fisubs
fs
jge
xor
jle
fcmovnb
sti
cmp
lcall
mov
inc
sub
push
movsl
pop
ficompl
andb
sbb
sub
insl
icebp
and
xchg
inc
pop
loopne
jge
bound
inc
jns
hlt
add
jmp
dec
rorb
rol
stos
mov
ljmp
push
iret
sub
push
fwait
stos
dec
test
clc
push
popa
sbb
insl
mov
leave
mov
negb
loope
pop
and
push
mov
in
loope
out
mov
add
inc
dec
dec
movsl
mov
add
lods
js
inc
pop
mov
xlat
xor
or
cmp
enter
fists
push
div
adc
jle
push
pop
fisubrl
mov
lea
nop
xor
jmp
les
and
js,pn
and
jp
push
jge
xor
aam
cmc
shll
addr16
cwtd
loopne
das
mov
cmp
jae
inc
repz
jg
lods
loopne
out
or
and
or
jle
or
dec
repnz
cmp
mov
icebp
fcmovbe
test
clc
push
push
test
das
hlt
add
nop
jmp
jno
test
sbb
xor
mov
push
das
stc
pop
xchg
xorb
xor
sub
test
subb
cmp
ffreep
fdivs
cmp
mul
xor
fidivl
cmp
ret
add
adc
insl
pop
leave
lock
cld
push
shll
inc
pop
pop
add
clc
sbb
es
and
sti
cltd
pop
lods
lahf
push
and
xchg
ja
popf
leave
sub
les
js
outsl
jo
and
push
fisttpll
addr16
mov
adcb
js
repz
mov
inc
jle
jo
fsubl
gs
ja
lret
cmp
mov
xorl
je
dec
repnz
movsl
xchg
cltd
js
sbb
mov
and
lods
adc
or
or
sub
das
call
adc
lahf
or
push
lods
pop
mov
and
pusha
dec
ljmp
ljmp
jne
pop
cwtl
repz
mov
pop
inc
push
dec
cmp
into
or
xlat
test
or
xor
cltd
jge
mov
clc
rcrl
xchg
mov
stos
inc
mov
and
sbb
stos
ds
int
shlb
push
fstpt
pop
stc
ret
lea
lea
mov
cmpsl
or
mov
or
movsb
dec
push
xor
les
pop
jecxz
add
cli
loopne
cs
push
jp
xchg
dec
sbb
sarb
outsb
push
jno
push
and
xor
popa
ret
push
stc
repz
jecxz
in
xor
stos
imul
sub
pop
outsb
push
leave
cmp
test
mov
pusha
das
mov
pop
push
mov
push
xor
jge
imul
mov
data16
or
and
in
gs
rclb
mov
lcall
enter
sub
push
outsl
imul
inc
imul
mov
inc
nop
add
pop
rcr
jbe
or
xchg
insb
cmpb
pop
inc
cmp
daa
pop
xor
and
test
sbb
jne
lods
test
cmp
jle
ss
ret
out
mov
mov
xchg
jge
mov
pop
inc
mov
pop
sbb
and
sbb
push
pop
xchg
jbe
mov
iret
or
into
inc
gs
mov
sti
popf
mov
adc
mov
xchg
popf
je
aas
mov
out
sahf
imul
sub
cmovns
test
ret
aas
and
push
sub
sar
in
pop
jl
scas
push
pop
arpl
rcrl
int3
aam
jp
cmc
sub
popf
sub
loope
mov
push
mov
or
dec
icebp
fwait
enter
xchg
dec
scas
sub
and
jmp
adc
inc
sub
xor
push
insl
popf
sahf
inc
fdivrl
movsb
jmp
scas
push
inc
mov
push
or
jne
sub
xor
push
repz
popa
out
xchg
fcomps
mov
xchg
cmp
sub
repz
shrl
add
dec
jmp
arpl
pop
jmp
mov
push
push
mov
ret
iret
inc
daa
dec
in
xlat
push
mov
lahf
push
and
addb
mov
jo
sub
les
fistpll
cmpsl
cmpsl
mov
cmp
setns
xor
inc
sub
clc
repnz
push
mov
int
lea
push
push
xchg
dec
and
pop
mov
pop
sti
and
jnp
jg
mov
daa
dec
and
dec
orl
enter
fsubs
push
in
popf
mov
mov
add
jp
sahf
push
test
jbe
push
and
enter
hlt
fisubrs
mov
adc
sub
bound
out
xlat
dec
negl
faddp
pop
sbb
test
xor
repz
mov
jl
pop
xchg
mov
inc
stos
pop
adc
lods
fsubrp
mov
sbb
cmp
xchg
xchg
jns
jle
pop
sti
cmc
xchg
addl
mov
mov
cmp
insb
cmp
pop
data16
ficoms
cmp
mov
pop
pop
or
int
xchg
and
lcall
test
cli
pop
adc
push
mov
test
mov
add
aam
pop
fucomp
mov
sub
es
fcmovnu
lahf
xlat
cmpsb
cli
push
mov
and
in
cmp
fistl
arpl
inc
cmp
jne
dec
lret
mov
pop
test
in
cmpl
fimuls
cmp
bound
mov
mov
imul
andb
push
repz
mov
out
arpl
call
popf
sbb
leave
mov
jmp
dec
adc
hlt
pop
outsl
push
int
and
shlb
or
mov
sbb
sarb
fsubrp
add
add
rcll
cmpsb
gs
rcrl
push
dec
test
aam
sti
mov
imull
mov
or
imul
mov
push
dec
adc
ficoml
repnz
push
mov
imul
and
inc
push
aaa
ljmp
stos
ret
xchg
aam
pop
sub
sub
push
adc
stos
push
cmp
add
imul
xor
add
mov
inc
fistl
in
insl
cmpsl
inc
mov
xchg
stos
lcall
add
add
mov
icebp
mov
xchg
pop
push
jne
shlb
fsubrp
cmp
repz
aam
lods
jecxz
pop
ljmp
push
sbb
cmpsb
jnp
pop
sub
mov
sub
and
lret
icebp
pop
arpl
push
mov
xchg
xchg
subb
test
xor
shrl
sub
ds
add
fildl
flds
xchg
cltd
lods
add
stos
xor
add
pop
push
pop
mov
pop
shll
push
sub
mov
lcall
fxch
xchg
sub
push
cmp
enter
xor
movsb
std
pop
call
sbb
fucom
xchg
iret
stos
inc
lret
mov
dec
ret
sub
jns
icebp
fistl
enter
jp
or
cmp
cmp
fcmovbe
adc
leave
mov
add
rcrl
mov
aad
sub
sub
mov
lcall
lcall
jns
hlt
fsubrp
pushl
test
out
test
in
mov
fcmove
dec
or
stos
jge
and
jne
ffree
dec
cmp
je
je
mov
push
and
jle
pop
xor
dec
inc
sub
mov
mov
into
loop
pop
insl
dec
mov
jb
xchg
xchg
dec
test
dec
xchg
test
std
insl
call
add
push
scas
mov
adc
test
popa
xchg
das
xor
lret
and
adc
shrl
pop
dec
jnp
mov
addr16
sub
xor
jle
sbb
ffreep
or
pop
pop
dec
cmp
inc
loop
scas
inc
or
lret
hlt
mov
mov
mov
sub
roll
sti
jnp
cld
mov
xlat
xchg
scas
sbb
ja
out
jns
fisttpl
inc
sub
dec
add
adc
push
scas
jl
rclb
cmp
add
mov
call
test
ret
shrl
mov
jo
jno
inc
sti
xchg
adc
loop
inc
pop
popf
out
sub
adc
cmp
or
mov
movsb
out
cld
pushf
xor
lret
movsb
icebp
mov
call
jmp
mov
gs
mov
rolb
push
cmpsb
mov
repnz
loope
dec
int
pop
jmp
fwait
out
push
jmp
les
sub
hlt
imul
call
push
shr
stos
addb
inc
and
mov
andb
add
outsl
add
shrb
add
jne
iret
int3
aad
or
xchg
addr16
stos
mov
dec
mov
ss
push
out
insl
adc
and
fnstsw
das
popf
andl
mov
into
cmc
in
pop
jmp
fldl
movsb
test
cwtl
mov
xchg
jbe
out
mov
or
in
stos
or
push
popf
mov
andl
cmpsb
push
aaa
shlb
test
shlb
mov
mov
sbb
vmovlpd
pusha
ds
pop
ljmp
mov
xor
scas
sbb
xor
inc
jl
out
inc
xchg
push
inc
in
ds
push
mov
dec
and
xor
mov
movsl
sub
rolb
out
sub
int
jne
movsb
push
pushf
xchg
dec
push
inc
jle
in
lret
divb
aaa
pop
nop
or
aam
pop
cmpsb
jae
jmp
jle
in
jae
call
fistl
xchg
xchg
daa
adc
cwtl
cmp
and
call
adc
sub
fwait
mov
arpl
mov
or
scas
bound
in
push
jg
lods
insl
and
mov
dec
xor
jg,pt
xchg
or
fisubs
jno
sub
jg
cmp
mov
dec
sbb
lods
mov
enter
fistpl
push
inc
mov
xor
inc
pop
aaa
sbb
pop
je
ret
sub
lcall
test
std
scas
mov
fdivs
jns
xor
or
or
dec
cmpb
jae
ror
adc
mov
xor
in
mov
adc
xchg
fwait
sub
inc
adc
stos
push
lret
sub
cmp
popf
hlt
push
push
lahf
ret
movsb
femms
pop
xchg
mov
dec
idivl
sbb
jae
inc
jo
out
jne
in
cmp
lret
orb
pop
push
jne
fdivs
mov
jne
mov
fxch
rcll
enter
rolb
cmpsb
in
cs
hlt
inc
lcall
dec
clc
stos
aam
adc
mov
dec
xchg
pushf
in
clc
in
or
stos
out
pop
inc
jnp
out
xchg
fwait
dec
ffreep
clc
in
mov
int3
cltd
mov
sbbl
cmp
jmp
leave
sarl
xor
lret
fs
and
test
sti
rcll
nop
arpl
xorl
loop
sub
sub
jbe
inc
fwait
jp
jne
mov
jae
int
and
cltd
and
ja
sbb
mov
xchg
mov
adcl
in
leave
xchg
and
mov
dec
int3
pop
outsl
and
cmpsb
sub
and
or
add
sub
movsb
test
adc
inc
mov
loop
push
ljmp
jge
xor
push
cmp
push
or
rclb
adc
pop
add
icebp
adcl
mov
cmp
fisubrl
sub
pushf
addr16
inc
xor
test
clc
mov
xchg
mov
dec
cmpsl
je
repnz
adc
cmp
pop
shll
dec
mov
outsl
sbb
adc
mov
jmp
pop
jmp
push
lret
jmp
mov
and
jmp
pop
arpl
jb
stos
add
pusha
test
mov
aad
insl
pop
sbb
xchg
add
ss
aam
outsb
jns
sahf
dec
js
mulb
aad
cwtl
sbb
in
xor
int3
and
popa
cmpsb
data16
adc
dec
mov
ficoms
cmp
cli
std
sbb
xor
xchg
adc
mov
sbb
jg
dec
adc
ret
js
mov
hlt
ret
cmp
mov
pop
mov
and
ja
bnd
and
repnz
pop
inc
add
cwtd
sbb
pushf
xor
sub
dec
movsl
push
test
push
or
cmp
push
jle
jo
ffreep
xor
imulb
int3
pop
ret
adc
xchg
push
dec
mov
aaa
dec
inc
cs
sbb
adcb
sarl
mov
xchg
ljmp
adc
shlb
or
bnd
outsl
loop
adc
pop
arpl
xor
add
sub
adc
out
sbb
in
cmp
push
adc
ret
cli
add
add
sub
les
je
cmp
aam
xchg
sbb
xchg
cwtl
ds
je
popa
sbb
dec
xor
ret
cmp
push
xchg
ljmp
mov
xor
fs
cmp
fcompl
int3
test
add
mov
testl
adc
cmp
popf
cmp
aam
add
inc
orb
add
test
stos
cmp
repz
ja
sub
jb
inc
ljmp
or
add
xchg
dec
aam
addr16
mov
push
push
gs
test
sar
movsb
scas
inc
nop
jecxz
iret
mov
out
js
imul
ret
adc
das
aad
stos
jne
iret
mov
pop
inc
push
iret
out
out
in
or
mov
sahf
lock
inc
push
dec
in
ljmp
jno
ljmp
lcall
jl
pop
shlb
call
sahf
cmp
push
or
and
aam
mov
push
mov
lret
cmp
js
addr16
dec
pop
push
push
test
xchg
push
and
fbld
jne
stos
lret
add
outsb
xchg
sti
adc
pop
inc
pushl
les
fs
pop
add
gs
push
scas
das
cld
sbb
xchg
icebp
lods
out
mov
in
lods
mov
sbb
int3
adc
iret
pop
divl
pushf
xor
jge
push
cld
into
stos
aam
repz
xchg
dec
rolb
pusha
lods
negb
xor
es
stos
xchg
inc
inc
xor
repnz
sar
fstps
dec
leave
imul
mov
inc
push
add
scas
jo
imul
dec
fcomp
in
out
jmp
mov
xlat
loope
repnz
daa
cmc
adc
mov
jbe
cld
mov
mov
sub
jmp
cmp
imul
ja
cmp
xlat
daa
in
cmp
mov
iret
fldenv
insl
ret
bound
daa
rep
ja
and
mov
dec
cld
cmp
sbb
lods
sbb
int
aaa
aad
out
and
lret
xchg
outsl
jnp
xor
pop
lcall
add
mov
jge
loope
rclb
and
clc
fldt
push
sarb
scas
lods
adc
clc
jmp
jae
clc
adc
movsl
jnp
mov
mulb
add
imul
xchg
dec
into
sub
jp
out
sbb
leave
add
outsb
out
jb
jns
aaa
cmc
sbb
adc
mulb
dec
outsl
sub
cmp
bound
mov
out
sahf
adc
lock
enter
pop
and
stos
push
inc
and
jb
dec
lret
mov
lods
pop
push
adc
stos
ss
sbb
ljmp
dec
stos
xchg
mov
imul
sub
test
loopne
mov
mov
cmpsl
loopne
adc
dec
jae
fisttps
cmpsb
cwtl
xchg
dec
xlat
scas
sahf
iret
test
loopne
shlb
rcrb
gs
les
xchg
repz
lahf
jle
nop
xor
enter
inc
test
lock
push
inc
add
sahf
repnz
out
dec
or
fwait
leave
imulb
jge
repnz
lods
cld
fstl
add
and
push
pop
jmp
xor
scas
outsl
dec
push
xor
rolb
andb
inc
mov
ljmp
xchg
adc
aam
stc
hlt
jb
clc
rcl
shl
adc
pop
out
nop
insl
fdiv
pop
push
pop
mov
sarl
test
lret
and
loopne
pop
dec
pop
pop
push
mov
mov
push
push
push
push
inc
in
push
sub
add
stos
fs
inc
add
xor
jne
cltd
dec
addr16
fsts
xor
cmpl
jbe
inc
mov
pop
mov
mov
iret
mov
cwtl
imul
or
or
sbb
xor
hlt
lods
and
lea
adc
test
push
xlat
outsl
in
sbbl
cltd
cmp
enter
loop
dec
dec
sbb
ljmp
pushf
adc
sbb
cmp
adc
fdivp
inc
sbb
and
jb
ret
add
push
pop
addl
add
sbb
out
lahf
shl
or
insb
arpl
push
xor
sbb
ss
add
jae
lahf
je
clc
cwtl
test
fs
mov
push
jmp
cwtl
pop
pop
adcb
stos
stc
sbb
pop
nop
lea
test
insl
loop
xchg
pusha
cmpsb
mov
pusha
cmp
add
push
ss
add
push
lods
mov
add
call
test
cmp
xchg
and
int3
mov
inc
cmp
jbe
pop
jnp
inc
mov
inc
mov
int
sbb
pushf
push
mov
aam
mov
ds
pusha
rclb
cmc
xchg
xchg
adc
push
jge
imul
push
mov
sahf
fsubrl
cmpsl
mov
cmp
xchg
xchg
loop
xchg
ljmp
add
fdiv
popf
lods
sub
stos
cli
fwait
jne
in
pushfw
xchg
fsts
test
or
int
xchg
fcompl
rcr
push
mov
lea
ja
xchg
push
movb
fwait
xchg
push
inc
and
movsl
pushf
push
test
ret
insb
mov
add
in
cltd
add
mov
jno
loope
xchg
loopne
mov
pop
mov
pop
inc
jle
dec
imul
je
pop
add
adc
add
fstpl
cwtl
dec
and
in
xor
fisttpll
jmp
adc
pop
xchg
insb
cmc
jb
cmp
stos
sbb
rorl
loope
fwait
stos
in
mov
xor
and
cmpsl
arpl
ljmp
mov
xchg
test
andb
jecxz
bnd
test
push
stc
cmpsl
mov
cltd
adc
movsb
es
mov
mov
pop
lcall
test
lahf
xor
xor
xchg
scas
shlb
pop
add
xchg
push
cld
cmp
idivl
or
add
ljmp
dec
jne
xchg
aas
ja
or
test
outsb
inc
sbb
xchg
mov
cmp
das
cmpsl
xor
cld
mov
dec
ljmp
jno
adc
ja
mov
out
pop
fadd
js
pop
ret
cli
rorb
push
sbb
mov
mov
mov
push
scas
stos
shl
pop
clc
inc
bound
stc
mov
add
xlat
jne
sbb
addr16
lods
in
fstps
inc
cli
inc
sub
shrb
invd
mov
xor
popf
jl
mov
daa
ds
fisubrl
das
out
dec
repnz
cmp
pushf
pop
movsl
lret
cltd
mov
and
pushf
pusha
rcrb
ficoms
xor
cli
pop
cmp
decb
push
aad
push
mov
add
inc
and
inc
or
inc
pop
test
fldcw
xchg
bound
aaa
popf
movsb
and
insl
popf
push
fidivrs
ss
add
cmp
sahf
push
out
imul
or
scas
add
inc
mov
cmp
imul
jb
xchg
push
push
stc
cmp
cmp
dec
and
stos
ret
adc
add
stos
into
xchg
bound
sbb
push
add
mov
fldenv
cmp
jmp
cmp
idivb
in
mov
push
push
call
sbbb
mov
cs
test
mov
cmp
xor
xor
mov
in
push
inc
mov
bound
popa
sbb
jl
jle
add
push
insl
pushf
popa
push
push
lret
pushf
mov
mov
lcall
sahf
xor
push
add
jge
pusha
xor
pushf
pop
or
inc
test
inc
adc
aaa
jl
mov
cmp
dec
in
or
adc
test
aam
sbb
jmp
or
and
sub
shrl
dec
shll
push
dec
movsl
mov
adc
insl
daa
fcoms
sti
jno
cmpsb
sahf
popa
xlat
push
pop
xchg
jnp
push
ret
nop
and
mov
ret
enter
scas
scas
mov
add
loop
in
test
dec
pop
adc
jns
mov
mov
jae
and
test
mov
std
dec
cmpsb
mov
aaa
dec
iret
pop
inc
orb
inc
jns
lock
rcrl
fucomi
pop
adc
sbb
sub
jge
mov
sbb
xor
inc
loopne
iret
inc
in
mov
popf
ds
xchg
test
fimuls
clc
pop
xchg
fistpll
scas
pop
xchg
adc
les
pop
fadd
outsb
mov
into
scas
pop
fldenv
cmp
pop
jp
adc
and
cmp
inc
aad
scas
push
scas
sbb
cs
sbb
push
push
movb
int
out
idivb
in
add
popa
add
xor
lahf
insb
rorb
lock
inc
push
pushl
ja
sbb
insl
int3
sub
and
in
sahf
cmp
data16
push
cs
in
xor
rcll
sahf
cmpl
ret
mov
out
xor
dec
mov
cld
add
sub
inc
out
out
int3
ficompl
pushf
cwtl
es
scas
sub
jge
jb
jg
repnz
mov
inc
lds
je
out
ja
push
aam
cmpsb
in
je
mov
rolb
lods
loope
test
out
inc
push
sub
test
pop
int
loop
vpermi2b
or
add
aas
pop
xchg
in
add
adc
xor
push
jp
test
int
inc
cmc
or
gs
inc
insl
jo
cli
cmpsl
test
aas
xor
fucomp
and
sti
cmp
gs
movsl
lret
lods
xor
js
icebp
fldenv
stos
out
xchg
arpl
adc
dec
fldt
push
cld
pop
pushf
pop
test
leave
fisttps
leave
jns,pn
mov
xor
inc
cmp
sbb
addr16
loope
jbe
cwtl
bound
aas
xchg
imul
sbb
aad
nop
out
sub
mov
jl
adcl
xchg
inc
shlb
cmp
sahf
xor
add
adc
mov
mov
movsb
fndisi(8087
insl
pop
outsb
sbb
ja
xor
adc
and
insl
iret
or
add
daa
cmpsb
fldenv
mov
lcall
jno
addr16
push
or
negb
pop
mov
shrb
mov
roll
shrd
jge
mov
cwtl
sbbb
in
and
dec
es
js
aas
cmc
push
adc
cvtdq2ps
inc
mov
scas
pop
jnp
push
bound
or
rorl
divb
ja,pt
xor
ret
sti
adc
dec
mov
mov
sub
in
sahf
pop
movsb
test
pop
mov
jne
sub
lods
fld
stc
mov
sti
cli
fbld
xchg
outsl
bound
push
push
mov
and
js
jle
adc
cwtl
mov
push
idivb
imul
add
out
ficompl
js
les
push
ficompl
cmpsb
out
push
add
xchg
xchg
add
int
imul
out
ja
and
and
cld
cltd
stos
test
or
jg
ficoms
mov
dec
sbb
into
dec
pushf
mov
into
mov
push
dec
sbbl
inc
jnp
lods
inc
mov
push
repz
inc
sub
lods
jno
jle
mov
cmp
inc
xor
cmp
jmp
cmp
xor
mov
xchg
sahf
lcall
jp
out
xor
mov
sub
in
enter
adc
aad
lahf
testb
push
jp
push
mull
sbbb
sti
movsl
jns
add
test
shl
outsb
loop
inc
ja
lahf
mov
jp
sarl
and
dec
or
pop
lea
mov
push
std
out
dec
call
jnp
sbb
xor
pusha
sub
adc
pop
sub
mov
cld
xor
jne
or
dec
dec
cmc
int
xchg
lea
call
int3
cmp
lea
testb
shrl
inc
daa
pop
rcll
data16
xlat
gs
sbb
je
out
fstl
shll
shl
jae
icebp
or
fcomps
push
hlt
sbb
add
rcll
add
cs
jne
lods
mov
jg
pop
push
mov
inc
add
flds
pop
pop
scas
mov
lds
sub
cmp
orl
mov
mov
jnp
sbb
dec
insb
mov
push
outsl
cs
inc
or
xchg
or
shlb
inc
mov
dec
lds
dec
leave
adc
push
iret
sub
pop
movl
mov
iret
inc
fimuls
jp
cmpsb
in
movsl
dec
jb
cmp
int
pop
scas
cmp
jne
out
rcpps
mov
push
jne
xor
dec
scas
test
cli
jns
andl
test
les
xchg
jmp
dec
das
test
test
pop
scas
cltd
jno
rolb
jne
sti
ljmp
sub
push
push
push
bound
dec
jecxz
jb
ljmp
movsb
mov
mov
mov
xchg
sti
mov
cli
xlat
pop
pop
cmpsl
mov
push
pop
into
in
adc
mov
xor
jmp
cmp
lds
xchg
add
mov
pop
adc
aad
leave
call
pop
mov
popf
xchg
icebp
jmp
cmp
imul
mov
sbb
jns
stos
test
mov
xchg
jge
adc
faddp
xor
pop
sbb
js
pop
jg
lods
movsb
rorl
sbb
mov
sub
int
push
lcall
push
push
subb
push
jmp
pmulhw
popa
or
ret
mov
add
movsl
ljmp
push
shlb
push
mov
add
cmc
and
lret
inc
mov
movzwl
rcl
std
outsl
jle
jno
shrb
aam
outsb
aam
push
jp
es
inc
loop
popa
loopne
int3
and
push
mov
mov
movhlps
fcom
lret
sub
jns
sub
aas
jnp
out
icebp
mov
mov
js
fldcw
jle
addb
inc
inc
roll
dec
mov
or
push
dec
lds
xchg
xor
xchg
insb
mov
pop
and
addr16
dec
imul
cmp
in
insb
sbb
and
incl
mov
cmp
xor
push
cmc
aam
push
jns
dec
mov
in
test
pop
mov
ja
pushf
sub
pushf
aas
inc
dec
dec
jmp
xor
xor
mov
sbb
fistl
sarb
xchg
or
add
and
pop
ja
jo
test
in
mov
or
fisubrs
and
pushf
int3
loop
out
cmp
or
dec
sub
mov
xchg
xor
aaa
mov
xchg
sbb
mov
or
lock
sbb
adc
std
lock
lds
push
into
sub
sub
and
jbe
sti
sbb
xchg
sub
pop
and
aas
pop
pop
int3
idivl
shll
fwait
cmp
stos
push
mov
jmp
xor
jne
cltd
adc
ja
xor
out
adc
push
lea
testb
jecxz
adc
pop
cmp
cmp
jl
lahf
mov
cli
icebp
jnp
ljmp
mov
ret
mov
or
aad
lea
into
insl
mov
jmp
sub
jno
jnp
mov
pop
dec
cmp
sub
push
and
ret
xchg
test
or
lret
pop
rcl
fstpl
in
dec
jg
xchg
pushf
add
or
dec
jge
fdivs
ror
popf
fwait
and
aad
lea
fsubr
jecxz
stos
in
xor
loopne
imul
cld
jae
movsl
lahf
loope
ds
sbb
inc
xor
jne
lret
pop
loopne
out
mov
enter
out
push
adc
out
rolb
push
ror
sub
and
cli
mov
fiadds
xchg
fwait
add
movsb
repnz
push
xor
ss
pop
dec
mov
pop
scas
loope
pop
repz
push
mov
pop
inc
inc
sub
out
movsb
out
xchg
cwtl
lahf
mov
jb
mov
scas
fs
leave
je
fdivrl
lods
cmpxchg
daa
push
fisubs
enter
fsubrl
es
fnstcw
leave
xchg
and
ds
mov
xor
jns
shll
sbb
cld
xor
sub
mov
hlt
aam
data16
dec
lock
sub
cmp
nop
fsubl
mov
xor
movsl
push
xor
aaa
aad
in
aad
adc
orl
shr
push
xchg
jmp
scas
sub
popl
xor
aad
xchg
cmpsb
push
push
jbe
les
and
sbb
cmp
jmp
xor
mov
jne
fwait
xor
gs
mov
adcl
call
out
pop
enter
ljmp
xchg
mov
sbbb
xchg
pop
fcoml
adc
fs
jp
repnz
pusha
rcrb
dec
push
test
inc
inc
xchg
mov
or
rcll
cmpsb
cmp
shlb
cld
dec
jecxz
or
negl
pop
mov
and
not
notl
loopne
call
fwait
and
or
push
sub
fstl
fstpt
int3
in
or
sub
shl
sub
push
xor
out
cmpsl
cmc
cmp
jge
dec
or
add
sti
fwait
test
adc
push
cmp
cmp
pop
mov
mov
cmp
add
lods
in
sub
mov
movsl
pusha
hlt
mov
cmp
call
xchg
insb
test
mov
adc
dec
mov
push
call
jle
loopne
sti
jb
clc
js
divb
mov
inc
inc
in
stos
xor
jle
sub
push
mov
mov
mull
addr16
lcall
into
push
inc
cmc
xchg
push
repnz
xorb
iret
mov
inc
mov
mov
pop
adc
and
rcrl
dec
sub
sti
arpl
test
cld
scas
inc
cmp
sub
sbb
mov
jne
loop
gs
mov
dec
push
xorb
sub
adc
push
lock
cmc
jno
sub
push
out
sbb
push
lret
xor
add
aam
in
mov
xchg
push
xchg
outsl
loope
fxch
arpl
cmp
test
imul
ss
push
xchg
push
sub
mov
mov
cmpsl
orb
icebp
imul
imul
call
or
adc
ret
or
dec
push
in
push
or
jg
xor
jne
adc
jns
fs
or
cmp
inc
cld
popf
jl
cmp
icebp
push
dec
push
movsl
push
cmp
add
cs
aam
lods
test
out
sbb
fstpl
jle
fmuls
repnz
gs
lods
je
aad
test
stos
push
pop
fmul
rcrb
test
inc
inc
jne
mov
xor
mov
adc
push
in
xor
jnp
pusha
mov
sub
sbb
movsb
cli
rcrb
rolb
fsubs
pop
nop
decb
mov
ds
adc
xchg
fisttpll
mov
ds
and
mov
out
loop
xor
mov
pushf
lods
imul
xor
dec
mov
rcll
add
dec
or
mov
or
or
and
push
je
jle
iret
popa
stc
pop
in
movsb
jecxz
pop
jge
push
add
mov
inc
fwait
aam
cmp
ds
js
movsb
mov
dec
add
cmp
inc
scas
mov
mov
jo
jne
mov
cmp
cwtl
lock
inc
xchg
ficompl
jge
pushl
shrl
cmp
repz
sbb
cmpb
xor
arpl
mov
les
cmp
dec
xchg
ds
sahf
iret
dec
mov
and
jl
jae
mov
and
sbb
xor
sbb
or
stc
lds
push
xchg
add
jae
loopne
xchg
stos
in
mov
loop
adc
push
mov
jnp
sbb
pop
test
xchg
cmp
xor
lods
xor
cmp
les
fnstsw
adc
jno
add
jge
fstl
jnp
fcmovnb
daa
dec
or
adc
sub
out
push
or
adc
sbb
loopne
outsl
xchg
mov
ret
cltd
iret
in
mov
xor
in
cmpsb
mov
test
sub
adc
xchg
cli
inc
mov
std
sub
xchg
frstor
sahf
imul
pop
jns
rcr
pop
sub
inc
test
xor
in
cmc
ret
out
adc
aam
loope
sub
push
pop
aas
les
xchg
idivb
cltd
adc
mov
and
je
ds
dec
scas
adc
and
fwait
stos
mov
mov
jno
out
inc
mov
dec
call
aaa
push
mov
xchg
and
nop
sbb
pop
or
fdiv
aad
cmp
popf
enter
pop
scas
xchg
mov
stos
rcll
cmpsb
xchg
pop
xchg
ret
jb
sbb
push
adc
test
enter
add
shl
adc
test
lcall
mov
add
pusha
enter
orl
loopne
jg
ficoms
test
push
sub
push
dec
xor
repz
outsl
imul
shrl
aaa
arpl
and
repnz
mov
inc
loope
add
mov
jp
or
fs
and
pop
stos
fldenv
jl
pop
pop
ret
addr16
cli
mov
xchg
inc
iret
push
xchg
push
dec
in
push
mov
and
pop
nop
mov
jbe
push
mov
add
push
ret
out
in
push
lods
or
mov
sbbl
add
ja
adc
lret
pop
dec
cmp
nop
inc
loop
inc
daa
addb
xchg
adc
jp
lods
mov
inc
jg
sub
sub
mov
repz
pop
push
mov
jae
mov
dec
jl
xchg
cmp
jmp
jnp
xlat
jle
add
xorb
xor
sub
push
mov
xchg
dec
sub
inc
pop
mov
jp
cmp
mov
or
bound
mov
push
fistpl
jl
incb
jne
xor
filds
cli
inc
sbb
test
or
sub
cltd
push
cmc
out
mov
inc
arpl
push
adc
sub
pop
lock
push
sbb
adc
sbb
inc
inc
push
hlt
repnz
addr16
cmp
xor
imul
popf
iret
es
fsubl
sbbb
lods
movsl
insl
sbb
in
mulb
insb
sub
ret
pop
mov
aas
push
stos
adc
mov
mov
xor
jbe
sarb
xchg
fstp
adc
or
outsb
pop
adc
rcl
xchg
rcr
sti
stos
adc
std
inc
iret
jns
cs
and
push
jecxz
sub
jns
dec
punpckhbw
mov
jge
gs
sbb
push
mov
or
mov
inc
push
sbb
stos
adc
mov
pop
outsb
cmp
push
arpl
xor
enter
aaa
push
cmovge
cmp
jp
xchg
sub
daa
dec
dec
mov
mov
inc
cmpl
cmpsb
add
lods
das
mov
xchg
repnz
xchg
test
iret
add
insl
cvtps2pd
pop
xchg
lcall
loopne
popf
push
mov
push
and
mov
or
xchg
or
push
cli
and
inc
xor
xor
pop
inc
gs
pop
sbb
cmp
loopne
push
pop
scas
bound
mov
mov
rolb
mov
adc
repz
cmp
dec
adc
loopne
nop
icebp
pop
inc
cmpsb
sub
or
movsl
out
cwtl
out
add
dec
roll
inc
push
fistl
int3
in
jmp
mov
decl
adc
mov
xchg
pop
inc
das
shlb
cld
dec
fcoms
pop
sahf
imul
testb
fs
sbb
inc
psllq
sbb
cmp
mov
inc
mov
sbb
or
xchg
cli
stos
lret
jl
sub
cwtl
push
mov
mov
lret
in
and
int
jne
inc
add
xchg
jmp
ret
lock
pop
jo
idivl
dec
push
rorl
repnz
jne
add
ss
push
sbb
ja
mov
sbb
adc
outsl
xor
or
repz
lds
adc
inc
add
jmp
push
fcoms
sti
add
ret
jo
cli
push
in
add
or
das
add
addr16
and
sbb
cmc
cld
sbb
in
cltd
rol
clc
dec
inc
cmp
addl
cli
movsb
lcall
jle
pop
push
out
loopne
adc
inc
adc
inc
adc
xchg
subb
pop
out
cmp
lahf
dec
into
ljmp
push
mov
mov
jno
jb
sbb
adc
jp
in
test
push
gs
mov
mov
int3
fsubrs
inc
cs
xor
jo
sbb
pusha
fildll
sub
jnp
adc
mov
sbb
jae
pushf
push
stos
adc
ret
insb
cwtl
cmpl
lods
push
jo
sbb
popf
and
xor
xchg
sbb
sub
imul
cld
dec
imul
ljmp
sbb
stc
insb
or
and
jmp
add
sahf
cmp
aas
sbb
imul
push
aas
jmp
repz
dec
mov
ljmp
mov
dec
fsub
jmp
ljmp
cmpsb
push
push
inc
gs
jb
mov
lcall
mov
push
xchg
cld
sbb
test
rcrl
in
decb
arpl
jns
adc
inc
bound
dec
fisubrl
lea
adcl
lods
les
adc
mov
int3
mov
sti
inc
and
mov
push
mov
je
mov
cmpsb
fstps
mov
push
idivb
mov
fdiv
sub
cmp
and
dec
jnp
ret
mov
mov
ljmp
push
jl
push
je
push
push
jle
xchg
lea
filds
dec
jnp
add
cltd
adc
adc
cmpsl
ja
lret
adc
icebp
enter
cmp
xchg
movsb
mov
repz
or
dec
cltd
ljmp
mov
cli
push
pop
mov
xor
sbb
test
lret
jae
sub
mov
adc
into
out
clc
ret
cli
sbb
cli
dec
dec
in
and
or
xor
lea
aad
mov
sahf
loopne
fcomp
scas
lahf
fs
pushf
xor
mov
es
incb
mov
mov
mov
sub
dec
jecxz
sub
nop
mov
cmp
je
adc
hlt
xor
inc
loopne
pop
sarb
dec
adc
sub
mov
clc
flds
arpl
fwait
jns
and
xchg
push
int
cmp
test
mov
mov
dec
sub
stos
inc
pop
mov
inc
adc
pop
stos
test
fcomp
xchg
add
scas
nop
imul
loopne
jmp
aad
fbld
adc
jae
xchg
pushf
pop
scas
rorb
xchg
ss
andl
sub
popf
inc
pop
sbb
lcall
in
add
es
xchg
lcall
int3
or
popa
inc
adcl
adc
dec
cld
inc
aad
fcomps
jno
and
mov
mov
out
nop
mov
pop
mov
jnp
sub
out
mov
lret
scas
enter
fsubs
adc
sub
aas
jns
leave
jb
push
add
negl
or
or
inc
je
loop
cmp
jp
or
mov
les
push
repnz
fcoms
test
cmpsb
stos
xchg
enter
imul
and
outsb
call
mov
sbb
xchg
sub
cmpl
test
mov
cli
cmp
sbb
sbb
insb
int3
mov
add
cli
sbb
inc
loope
sub
jb
add
or
push
lret
pop
mov
mov
adc
xchg
fisubrs
popa
fs
out
push
imul
test
in
adc
test
test
mov
lcall
inc
adc
in
xor
lahf
addb
mov
xor
jle
stc
xchg
lret
dec
dec
push
sarb
mov
cld
std
xor
sbb
daa
fsubp
mov
or
lcall
cmc
jecxz
cmpsl
aas
pop
xor
sbb
xlat
or
inc
mov
jno
or
pop
adc
cmp
pop
xchg
roll
cmp
jl
pop
sub
push
adc
mov
scas
add
shrb
inc
lret
sub
hlt
mov
outsb
imul
add
ffree
or
incb
imul
hlt
push
xchg
mov
and
cwtl
add
push
jnp
popf
mov
mov
popa
out
out
pusha
xor
mul
sbb
cmp
xor
push
and
iret
ja
mov
add
sbb
fcoml
into
mov
or
push
or
pop
fistps
pop
imul
aaa
mov
dec
insl
add
push
sub
call
js
mov
ja
jae
push
inc
fistl
dec
push
mov
nop
cmp
bound
enter
xchg
push
pop
sarl
pop
jmp
call
and
int3
es
mov
dec
insl
movzbl
push
mov
mov
jle
jns
out
push
mov
lfs
mov
cld
adc
enter
sub
pop
out
pop
xchg
cmp
mov
xchg
movsl
cmp
or
xlat
jnp
das
test
out
adc
adc
pop
xor
icebp
sub
push
mov
insb
loopne
insb
dec
imul
cs
mov
loope
cmp
add
inc
pop
adc
cmpsb
loopne
adcb
sub
int3
shl
cmp
jmp
bndstx
xor
nop
jbe
addb
mov
jl
jnp
dec
pop
jno
fiaddl
sahf
bound
inc
xor
lcall
mov
xor
and
inc
xchg
sti
add
xchg
push
lahf
and
call
inc
dec
lcall
mov
fdivs
shll
repz
add
xor
mov
add
inc
xchg
loope
mov
adc
dec
cmpb
out
or
mov
sub
push
xchg
push
sbb
stc
adc
repnz
inc
cmp
inc
mov
imul
adc
jge
push
adc
jg
aad
mov
in
xor
rorl
mov
lods
fcoms
lcall
cld
loopne
test
sbb
std
xorb
dec
fsubl
xchg
inc
sub
gs
push
mov
cld
push
gs
or
cmpsl
aad
cmc
mov
out
mov
sbb
rorl
out
loop
inc
fstpt
add
fbld
stc
pop
adc
xchg
push
stc
mov
hlt
push
imul
nop
movsl
cmpsl
out
xchg
and
push
iret
and
jg
mov
mov
insb
pop
jns
pop
push
fsubr
push
dec
pop
int3
xchg
orb
lods
cmp
cmp
mov
xchg
xchg
int
xchg
dec
jno
fwait
dec
sub
and
ja
pop
cmpsl
lcall
imul
sbb
out
lds
mov
jne
rorl
jne
repz
lret
mov
outsl
ss
mov
mov
cmp
in
lret
push
pop
mov
adc
ret
push
movl
adc
and
jmp
rorl
call
adc
in
mov
xor
mov
icebp
and
insl
jg
inc
mov
sbb
imul
into
pop
mov
or
push
mov
lahf
insb
sbb
mov
jno
dec
mov
cmp
pop
std
inc
icebp
mov
enter
inc
jge
jge
int3
mov
inc
mov
repz
test
dec
push
xor
and
jns
pop
jg
insb
jae
pop
call
add
mov
idiv
cmpsl
pop
dec
pop
add
xor
ljmp
xchg
inc
in
aas
and
pusha
sbb
or
mov
jns
not
pushf
and
jg
shrl
mov
pop
loope
cmp
andl
sbb
cmpsl
shr
sbb
inc
cmp
ret
xor
sti
lahf
jmp
mov
js
sub
sbb
adc
sub
imul
rorb
mov
sbb
push
sbb
inc
les
scas
jne
inc
mov
push
in
ret
mov
stos
subb
mov
ret
popf
adc
mov
cltd
push
adc
ret
and
imul
or
jne
repnz
xchg
and
sbb
ret
repnz
push
rcrb
aas
loopne
sbb
cmpsb
cmp
shlb
cld
mov
lret
push
ds
std
jle
repnz
aaa
push
insb
add
cmpsb
shlb
fimuls
notl
cltd
pop
sbb
sbb
inc
mov
cmp
leave
adc
stos
inc
fldcw
shrb
popa
test
shlb
pop
add
repz
cmp
xchg
adc
out
ds
jl
pop
ret
dec
jl
test
push
push
sbb
out
adc
mov
pusha
ss
xor
ret
xchg
push
test
jbe
icebp
pop
mov
ret
or
shrl
add
or
cltd
js
lods
adc
push
fwait
daa
pop
scas
push
lods
push
scas
adc
push
push
negl
movsb
xor
xchg
gs
loopne
pop
pop
or
rcll
out
mov
pop
orb
push
hlt
inc
xor
lds
aad
inc
ret
mov
jnp
jecxz
xor
lahf
lods
addr16
je
lock
out
pop
int3
leave
sbb
cmp
and
pushl
sub
xchg
cwtl
mov
push
in
cmp
jg
jmp
mov
add
and
jb
sar
pop
std
cmpsb
daa
out
xor
loopne
fdivs
outsl
xlat
or
popa
orb
enter
ret
add
push
mov
fwait
popf
cwtl
mov
and
pop
es
mov
into
rcrb
xchg
les
mov
add
insb
mov
aad
in
and
aas
mov
mov
xor
jb
outsb
pop
ret
pop
xor
mov
pop
test
imul
sub
jnp
or
pusha
lods
mov
push
lods
lods
call
sahf
adc
sarb
mov
sbb
imul
cld
sbb
ret
sub
popa
push
push
sub
ds
outsl
or
inc
jmp
jb
ljmp
aas
scas
mov
mov
dec
popa
xchg
cmp
cmp
les
and
add
fcmovnb
mov
lahf
addr16
test
jns
xchg
inc
aaa
hlt
jno
cmc
shll
and
pop
jne
in
loop
push
daa
out
push
inc
adc
ljmp
or
dec
insb
leave
lahf
and
sti
lcall
insb
inc
out
push
push
jbe
pusha
or
and
sti
mov
mov
icebp
adc
pop
mov
fildl
pop
loop
push
xchg
stos
int3
push
xor
out
fwait
lcall
ret
lret
inc
sub
add
cwtl
out
push
cmp
fwait
sbbl
mov
adc
ret
dec
insb
js
cmp
cmpl
cwtl
rolb
sub
sbb
mov
mov
mov
insb
out
outsl
adc
dec
stc
xchg
in
jne
ss
movsl
pop
fildl
out
sbbb
mov
mov
pop
aam
xchg
aas
cmovge
lret
jno
xchg
std
mov
ret
dec
pop
mov
sbb
mov
mov
xchg
mov
inc
scas
jbe
out
data16
xchg
icebp
pop
xor
ja
jle
cmp
leave
insl
pushf
test
fsubs
mov
aaa
or
ror
add
push
in
or
mov
xor
pop
shl
or
inc
enter
push
cmp
cmp
ret
mov
lahf
mov
xor
dec
sbbl
pushf
sbb
pop
inc
cmp
rorb
leave
sbb
push
jb
sub
testb
pushf
mov
outsl
dec
mov
sbbl
dec
pop
loope
test
inc
jne
jbe
movsl
repnz
mov
dec
xchg
xchg
in
inc
dec
sti
xor
divl
mov
mov
loop
addb
inc
ljmp
imul
and
mov
or
push
lret
pop
and
ljmp
sbbl
xchg
jns
lock
cmpb
addr16
mov
out
das
popf
jnp
and
cmp
dec
xor
or
add
bound
nop
fs
fmulp
add
pop
leave
movsb
mov
std
aam
lahf
orb
lret
push
push
push
xchg
sub
lock
scas
mov
dec
mov
sub
idivl
sbb
pop
mov
mov
push
ret
cmpsb
mov
popa
cmpsl
jmp
xlat
fidivrl
xchg
sub
addl
push
xlat
in
adc
aaa
sub
fwait
stc
aas
inc
add
jns
push
hlt
cmpsb
push
dec
pop
sbb
adc
pop
ljmp
daa
sbb
and
cmp
out
pop
pop
popa
pop
pop
in
inc
cltd
pop
mov
mov
test
cld
fildll
cld
jb
in
gs
dec
imul
push
test
in
jae
dec
sbb
push
or
out
pop
lret
stos
dec
add
negb
fucom
ljmp
mov
fildl
sarl
mov
jne
jecxz
and
jecxz
cli
fwait
mov
cmp
mov
fstps
ss
cwtl
cs
pop
and
outsb
inc
in
fistpll
cltd
push
dec
imul
sti
loope
les
cmp
jnp
into
notb
aas
test
push
sbb
outsl
fiadds
pop
lret
mov
test
inc
push
ss
mov
inc
scas
jno
enter
adc
repz
mov
cmp
ljmp
pusha
jl
jmp
test
cmp
pop
sub
cmp
cmpsb
jl
test
lods
sub
and
jge
xchg
jno
fidivrl
lods
ss
mov
jmp
mov
loop
xchg
movsl
and
shll
stc
mov
enter
and
in
imul
int
outsb
mov
adc
int
lds
stc
pop
stos
mov
lret
push
ret
daa
xchg
mov
jg
cmp
inc
mov
push
adc
jge
hlt
jl
cmc
push
icebp
mov
leave
mov
ja
pop
retw
shll
jmp
add
subl
push
mov
out
jns
hlt
push
iret
inc
and
and
loopne
xor
sbb
mov
or
sahf
stos
cmp
xor
push
stos
cwtl
out
sarl
mov
stos
mov
or
push
pop
faddl
or
mov
pop
aaa
mov
dec
jl
inc
cmp
fidivrl
sti
and
cld
pushf
sbb
imul
xor
icebp
rclb
adc
and
mov
lea
and
fstpl
mov
or
jno
inc
shlb
leave
unpcklps
imul
pop
ficoms
ja
xor
cmpsb
pop
dec
inc
jno
stos
push
mov
cmp
inc
jae
out
movsl
adc
cmovae
jmp
sbbl
stos
icebp
lcall
pop
inc
fiaddl
pusha
shrl
and
ss
mov
push
lcall
adc
adc
cwtl
jnp
scas
fsubrl
das
aad
cmp
mov
dec
dec
movsl
lods
sub
dec
sub
pop
cmpb
in
push
sarb
sti
shl
or
xchg
push
add
and
ja
sub
jge
dec
and
fsubr
mov
shr
je
mov
xchg
sbb
pop
mov
jae
in
inc
mov
fcoms
push
fwait
mov
mov
out
loopne
xchg
and
push
pusha
subb
mov
sbb
add
js
adc
sub
inc
mov
adc
or
aad
mov
nop
lods
repz
mov
cmp
push
adc
stos
cmp
sub
sbb
filds
sarl
push
cld
xchg
leave
mov
dec
xlat
cltd
roll
xor
aas
ja
mov
stc
sbbb
adc
sbb
hlt
xchg
loop
push
push
mov
out
jg
mov
cmp
pop
mov
icebp
cmpsl
aad
xchg
in
inc
mov
jnp
jb
xchg
xor
shrb
es
xchg
dec
scas
jg
xlat
outsb
or
mov
jnp
inc
inc
mov
aad
add
xchg
lods
or
mov
mov
out
sbb
cs
cld
and
sub
jg
shl
push
into
push
adc
inc
inc
daa
dec
dec
and
sub
cmp
sub
sbb
push
sar
data16
and
pop
lahf
sarl
aas
int
je
pop
stos
clc
mov
test
or
mov
rcrl
dec
ret
repz
mov
dec
mov
pusha
cmp
aam
mov
iret
push
stc
sti
sbb
or
adc
mov
rcrb
mov
loope
pop
cltd
imul
xchg
idivb
adc
cmp
fwait
jo
pop
mov
add
repz
inc
gs
adcb
xchg
sbb
addl
sbb
sbb
jge
lea
iret
in
or
mov
mov
js
push
inc
xor
adc
dec
fildll
movsl
cld
rolb
pop
mov
sbb
cmp
out
insb
or
in
jl
jmp
clc
ss
lds
or
xchg
xlat
push
mov
adc
fcomps
dec
les
ret
mov
das
adc
jp
lret
xchg
mov
fisttpl
insb
jmp
subl
sbb
xchg
jge
and
sbb
mov
mov
js
test
mov
mov
pop
pop
lods
leave
jne
mov
cmp
xlat
sahf
push
and
aad
mov
mov
data16
adc
fbstp
int
mov
pop
aam
hlt
daa
add
shlb
aas
mov
repnz
in
call
aad
and
icebp
push
mov
popw
rol
xchg
mov
inc
push
mov
mov
leave
test
repnz
mov
pop
push
sti
jne
add
add
sub
dec
xlat
fdiv
adc
frstor
cld
les
or
repnz
les
out
in
and
lcall
out
mov
shlb
test
fidivl
dec
sub
add
push
jo
ds
jae
add
cmp
jge
fbld
cld
scas
stc
scas
sti
imull
or
ds
add
sbb
insl
adc
xchg
mov
sub
repz
pop
das
lea
push
ret
mov
jecxz
jg
xchg
push
sbb
and
std
scas
into
push
iret
lret
test
iret
add
jb
sub
leave
fsubs
in
push
ds
or
shrb
lock
rcrl
xor
stc
mov
cmpsl
or
ja
loopne
jns
add
dec
mov
in
in
arpl
inc
or
mov
or
or
movsb
or
sub
mov
test
lahf
mov
out
dec
lods
cmp
sbb
imul
xor
adc
mov
iret
out
cmpsb
xchg
out
cmc
repz
jp
in
out
xor
jae
inc
sti
arpl
ret
xchg
cltd
inc
enter
push
adc
push
stos
cmc
icebp
sbb
imul
pop
push
daa
aad
mov
sbb
bnd
or
cmpsl
sbb
imul
sti
xchg
ret
mov
mov
test
movsl
test
jg
mov
int3
mov
push
leave
jbe
in
int3
testb
arpl
lds
and
xor
cs
enter
push
inc
ds
push
aas
mov
adc
pushf
inc
insl
add
adc
adc
cmp
sti
push
test
shl
mov
sub
icebp
fcmovnbe
sub
and
roll
xlat
int3
mov
mov
mov
mov
les
dec
mov
test
or
sub
inc
xchg
les
pop
repnz
lods
sub
jbe
pop
cwtl
pop
or
push
in
shlb
cmp
jnp
mov
mov
dec
and
cmp
xor
xor
popf
sub
mov
jg
push
xlat
clc
and
rcrl
popa
test
mov
add
out
jecxz
cld
lods
lds
adc
mov
arpl
sub
and
fldt
in
fdivrp
xchg
test
rcrb
outsl
inc
cmp
testb
or
cmp
pusha
dec
bound
xchg
insb
popf
pop
loopne
inc
dec
push
push
popl
cli
gs
into
mov
dec
je
fcoml
sahf
sub
jmp
imul
movsl
sbb
pop
es
xor
adc
add
cmpsl
in
lods
push
pop
mov
sbb
xchg
pop
push
push
shlb
ret
fnstenv
mov
jge
sub
aam
cwtl
movsb
push
sub
pop
mov
loopne
cmp
loope
inc
inc
or
mov
pusha
mov
or
xchg
dec
xchg
mov
fldl
sbb
push
fldenv
sti
push
les
ss
cmpsb
cwtl
or
xchg
cmp
ljmp
jl
xchg
std
mov
icebp
stc
pop
repnz
nop
pop
sbb
mov
dec
pop
sbb
sub
cmp
xor
jo
repnz
mov
jmp
pop
aam
cmp
jnp
add
add
rorl
inc
add
inc
push
cld
dec
lret
and
shl
mov
in
cmc
leave
fdiv
jns
pop
shlb
testl
sbb
xchg
pop
push
or
dec
xchg
xchg
push
pop
lcall
cmp
bound
dec
cmp
pop
inc
mov
and
jmp
outsb
test
cmp
jne
cwtl
je
pop
dec
dec
jge
sbb
sbb
and
sbb
enter
mov
inc
neg
jmp
push
sub
dec
jo
or
add
out
dec
push
or
jmp
icebp
or
push
loopne
and
pushf
pop
testl
dec
stos
loop
out
mov
adc
xchg
cmp
lahf
jge
jae
ret
aam
sub
lcall
ret
pop
lahf
pop
push
lahf
jle
xor
sub
jle
or
xchg
mov
ficoml
nop
in
test
data16
cmp
arpl
or
or
pop
in
push
jp
scas
lahf
dec
ja
sbb
mov
mov
fcmovnb
cltd
repnz
out
rclb
cmp
enter
jmp
mov
xchg
aas
dec
cs
scas
jmp
jbe
adc
out
adc
add
movsb
inc
dec
mov
add
jmp
sub
test
mov
mov
jbe
insb
shlb
inc
inc
mov
sub
and
rcrl
mov
xchg
xchg
adc
test
cmpsb
icebp
scas
add
sub
sahf
pop
mov
in
and
cld
cmp
sub
mov
lock
sub
jecxz
cmp
jecxz
addr16
nop
dec
cmp
mov
fcoml
cld
push
outsb
dec
je
out
cwtl
mov
cmp
push
xchg
mov
jae
or
sahf
sarl
daa
jp
adc
repnz
cmc
cmpsb
pop
cmp
mov
or
fisttpl
mov
jns
cmpl
or
jo
lods
jne
sbb
xchg
push
jl
mov
daa
xchg
pop
and
xor
jg
pop
pop
dec
shrl
sub
sbbl
dec
or
mov
adc
dec
jp
fmull
push
push
mov
mov
aaa
jle
jnp
aam
jle
mov
in
push
mov
es
xor
arpl
testl
rep
sti
js
aad
aas
push
xchg
add
mov
pop
mov
sub
faddp
or
inc
inc
fwait
sub
mov
pop
enter
jmp
sahf
add
hlt
je
mov
cmp
adc
jne
push
dec
xor
jg,pn
push
js
cmpsb
mov
fnstsw
stc
enter
cmpsl
cmp
arpl
sbb
filds
or
add
or
lcall
jle
std
pop
pop
push
into
adc
gs
pop
inc
pop
fwait
mov
and
fcoml
lds
and
and
aas
or
dec
sbb
aad
gs
add
sub
in
ljmp
loopne
clc
dec
ljmp
aam
cs
daa
les
xor
aaa
je
or
mov
cwtl
add
jmp
inc
sub
cmpsl
data16
or
je
pop
inc
push
jg
jb
pop
mov
xlat
mov
adc
nop
data16
dec
sbb
push
scas
jp
push
mov
ss
mov
xor
cmp
lods
dec
or
into
pop
mov
ds
andb
sbb
scas
enter
pop
mov
sarl
pop
nop
mov
into
push
push
xchg
into
xor
lret
xor
dec
and
out
push
sbb
pop
es
push
pushf
dec
icebp
out
push
in
shlb
cmc
rolb
add
and
and
mov
rcrb
mov
dec
dec
mov
fistl
jbe
cmp
addr16
pop
in
sub
mulb
int3
dec
aas
sbb
fadds
push
sbb
adc
and
cmp
ficompl
or
mov
mov
stos
sub
adc
inc
test
into
push
sbb
mov
xchg
pop
or
push
mov
dec
jmp
clc
add
jb
push
cmp
inc
cmp
jecxz
push
loop
fiadds
fisttps
filds
pop
and
cld
bound
les
cmc
sbb
dec
int
jle
cmp
or
cwtl
pop
mov
cltd
mov
aad
arpl
inc
scas
loope
int3
stc
pop
pusha
fsts
and
paddq
mov
fsubl
test
add
mov
imull
fisubl
sti
pop
xor
lea
scas
mov
adc
mov
nop
bound
orb
data16
inc
dec
jb
add
pop
outsl
cmp
add
lret
sbb
adc
fsubrs
dec
int3
or
add
shr
in
cli
ds
cmpsl
push
cmc
jnp
nop
sti
mov
stc
fistps
jns
mov
insb
daa
cmpsl
aam
pop
loopne
pop
pushf
loope
xchg
or
call
repz
imul
lock
cmp
test
push
push
jne,pt
add
movl
cmp
adc
or
fcompl
dec
cmp
sub
mov
lret
sbb
cmp
ret
mov
shr
pop
push
bound
movsl
cld
repnz
jno
cmpsb
das
aas
aam
jae
mov
adc
xchg
outsb
pop
add
mov
jb
dec
shlb
aad
adc
lahf
aas
leave
dec
push
cs
mov
out
and
adc
fdivr
adc
jo
arpl
and
mov
mov
cs
dec
jns
inc
mov
mov
cwtl
fmull
pop
cmp
xor
iret
push
inc
dec
or
push
test
jg
sbbb
pop
mov
dec
inc
es
and
add
dec
or
movsb
xchg
cli
mov
mov
out
repz
test
bound
test
imul
fcomp
test
inc
es
sbb
insb
in
pop
add
sub
and
xchg
ret
add
jecxz
roll
push
or
test
mov
adc
cmp
mov
xor
xor
dec
mov
and
aas
push
jnp
lret
push
aas
pop
insl
jecxz
lods
jbe
mov
jl
loopne
pop
shlb
lahf
mov
es
pop
outsl
imul
aam
inc
adc
dec
das
mov
mov
icebp
in
loopne
sbb
sub
mov
les
imul
out
fisubrs
dec
and
xor
adc
mov
insb
cmpsb
cli
aad
adc
lods
inc
int
fmul
iret
push
xchg
lock
rolb
adc
std
hlt
and
pop
std
or
push
and
mov
jge
pop
fidivl
das
mov
andl
ret
pop
insl
jns
lcall
fcomps
jns
testl
imul
cld
shl
adc
cmc
aas
mov
pop
pop
push
jne
jp
cmp
and
add
push
fnsave
data16
mov
test
jo
add
add
pop
negl
xchg
jg
int3
push
xchg
mov
sti
adc
xor
stos
aam
stc
cli
or
movsl
pushf
push
popa
cmp
xchg
adc
mov
cmp
pusha
mov
sbb
mov
scas
daa
push
cmp
cmpb
or
movsb
sbb
popa
out
sbb
roll
imul
xor
pop
sbb
cs
mov
ret
leave
lcall
mov
jp
lcall
adc
movsl
cltd
jmp
or
test
fwait
testb
push
fucomi
pop
xchg
dec
pop
add
pop
sbb
push
pop
xchg
sahf
imul
fiaddl
div
js
arpl
mov
divb
fstpt
cmp
mov
std
repz
push
test
jno
aas
jmp
xor
shr
push
inc
and
mov
clc
iret
pusha
cmpsb
mov
dec
lea
xor
or
mov
or
inc
lea
jnp
cltd
jge
incl
adc
popf
jl
sbb
rol
and
popf
adc
sbb
bound
fldcw
inc
lds
out
lock
and
les
femms
jge
ret
subb
pop
cltd
fmul
iret
cli
in
xchg
sbb
cmpb
inc
stos
mov
xchg
jb
jnp
adc
lods
lcall
imull
jle
cs
gs
shrl
mov
hlt
out
pop
ret
fwait
les
stos
inc
xchg
dec
stc
jmp
nop
ds
cld
mov
lea
cs
insl
pop
push
lea
in
arpl
push
mov
clc
mov
cmp
dec
pusha
jge
xor
fistpl
mov
data16
test
xchg
sub
sahf
pop
jo
fistpl
pop
ja
mov
mov
cmc
sbb
scas
xchg
push
and
add
jg
aaa
jmp
mov
add
push
sub
adc
repz
and
in
xchg
aam
outsl
inc
nop
in
aad
mov
or
push
aaa
pop
in
push
movsb
pop
mov
ss
notb
push
fistpll
loop,pt
je
int
rsqrtps
mov
jno
cwtl
cmpsl
push
and
jmp
sti
or
jp
sbb
pop
into
inc
mov
repz
push
cmc
jae
aad
fsub
add
lret
lods
and
stos
int
dec
scas
repnz
out
jg
pop
or
test
mov
ds
push
jecxz
call
cmp
adc
inc
scas
shr
std
jle
dec
sbb
ds
shl
pop
pop
push
and
cmp
std
aaa
or
and
and
xor
insb
dec
and
test
movsb
xorl
sub
call
outsb
orl
pop
sbb
fwait
in
dec
cmp
iret
lock
lret
in
jp
and
imul
movsb
aam
clc
and
ds
pop
sbb
les
ds
and
cmp
sub
pop
jns
ljmp
mov
fwait
stos
insl
mov
lods
jno
out
jno
sub
scas
leave
sbb
scas
or
or
pushf
mov
popa
xchg
xor
mov
imul
lret
hlt
clc
lcall
xchg
mov
scas
mov
pop
and
lea
mov
insl
cmpsb
jle
shrl
sbb
push
and
pop
pop
enter
or
xchg
cmp
dec
fnstenv
pop
lret
add
idivl
mov
dec
mov
notb
inc
gs
imul
mov
and
ljmp
shrb
rol
ficoml
clc
xor
cs
cli
sub
iret
fwait
push
out
repz
pop
xchg
jnp
dec
xor
xor
mov
mov
push
pusha
jns
aam
adc
xor
lea
cmp
pushf
in
into
jp
push
cli
mov
fcoms
repz
rcl
aad
repz
mov
mov
jecxz
add
shrl
rorl
and
imul
add
inc
pusha
scas
icebp
repnz
gs
or
rol
jno
shll
data16
xor
adc
in
mov
outsl
xchg
cmp
imul
mov
push
rol
fisubl
popa
mov
lahf
sub
jmp
sbb
mov
rorb
repz
adc
pop
fistpll
fdivrl
pop
sub
dec
frstor
aaa
inc
xchg
in
scas
loope
cmp
push
loopne
clc
gs
dec
or
mov
sub
insb
push
bound
inc
rolb
test
adc
sbb
mov
call
int
push
decb
ficompl
dec
add
pop
pop
loope
ret
in
stos
ret
fldl
mov
sbb
add
lods
cs
pusha
sti
ja
aad
pop
push
pop
repnz
mov
test
jb
lock
add
and
xor
mov
mov
insb
mov
out
xchg
mov
sbb
or
push
push
add
jge
cwtl
jp
cmp
stc
jg
and
cmp
fiadds
ffree
in
in
jmp
nop
sti
int
in
aas
add
adc
mov
mov
les
xchg
jb
mov
cli
shll
seta
ret
mov
adc
out
jmp
lods
pushf
aaa
dec
stos
xchg
dec
aam
shll
xor
mov
mov
scas
jle
or
testl
cs
mov
in
lods
lea
push
xor
push
cwtl
cld
dec
xorb
pop
xor
mov
sub
push
xor
mov
fmulp
cltd
sbb
fildl
push
icebp
in
dec
lret
and
sub
aam
push
test
repz
xor
repnz
pop
std
js
add
xchg
in
mov
push
xchg
mov
lock
sbb
ljmp
pop
icebp
push
cmpsb
int3
sbb
sbb
fisttpl
es
adc
ljmp
in
mov
les
pop
ss
jl
xor
push
dec
lea
sbb
in
sub
adc
fstl
mov
and
fldcw
adc
ret
and
out
mov
je
test
mov
lret
sbb
jbe
mov
test
cltd
js
adc
sbb
lcall
mov
sub
and
cltd
cmp
mov
imul
cmp
adc
repnz
cwtl
mov
imul
inc
cld
push
mov
scas
daa
les
hlt
push
mov
test
mov
and
mov
rolb
out
or
sbb
and
insl
pop
push
jmp
lcall
or
add
into
jl
pop
lret
sti
inc
jg
shll
add
sti
aas
rcl
aaa
sbb
dec
jne
subb
mov
int
xlat
xor
popa
in
adc
pusha
movsl
mov
int
and
cmp
fnstcw
fbstp
dec
fwait
je
sbb
test
ret
movsl
dec
addl
imul
into
pop
sub
and
jnp
xchg
stc
mov
jns
sub
add
jmp
addl
sbb
cwtl
es
mov
and
jae
loopne
push
fidivrl
jae
cmp
inc
xchg
and
fbld
test
cs
adc
push
popl
push
int
fprem1
jns
test
ret
andl
xor
lret
cmp
xor
dec
out
popf
movsb
in
and
popf
sub
jmp
stos
mov
rcrb
mov
fbld
dec
push
xor
fisttpll
cwtl
xlat
mov
pop
leave
popa
int3
sub
push
mov
loope
mov
xchg
jp
rcll
jae
or
mov
jb
jo
addl
cli
imul
out
cmpl
pusha
jne
xchg
cmpsl
nop
cmp
push
je
movsb
mov
scas
lret
adc
stos
mov
mov
aas
mov
int3
inc
sub
or
leave
lret
cmp
in
inc
adc
rol
nop
mov
dec
push
xlat
jno
push
std
ret
aas
push
popa
mov
xchg
mov
shr
outsb
lea
in
mov
xchg
pop
mov
aas
mov
inc
repz
into
jle
bound
push
mov
mov
or
in
jns
iret
cmp
cmc
push
push
xchg
aas
add
adc
gs
scas
data16
and
lahf
cwtl
push
ret
std
sub
imul
pop
mov
into
cmpsl
in
push
out
jle
dec
mov
dec
inc
cmpsl
xor
test
outsb
mov
jnp
or
push
js
stos
out
into
pop
hlt
outsb
xchg
cmp
aad
notl
push
popf
out
cmp
push
popa
mov
inc
mov
push
testb
imul
and
cwtl
in
xchg
push
xchg
push
add
movb
aam
stc
inc
in
jb
pop
xor
push
add
sahf
test
lahf
push
jp
repz
xchg
loope
mov
mov
shr
rol
dec
popf
jg
mov
lds
xor
addr16
add
lock
pusha
dec
push
cwtl
xchg
xorl
xor
adc
repnz
test
xchg
js
and
ja
cmp
cmp
int3
add
jae
pop
lea
xor
stc
mov
cmp
sbb
cmpsl
and
test
out
sti
fcmove
sbb
add
jge
jae
ret
xchg
jno
sbb
pop
dec
out
es
nop
mov
add
repz
sbb
dec
pop
jecxz
roll
popf
jns
das
lret
ss
mov
int3
std
sbb
fstps
xchg
movsb
fmulp
mov
imul
mov
push
test
aad
sub
iret
inc
jge
fst
or
sub
mov
mov
test
call
lds
in
sub
dec
adc
push
cmp
pop
scas
xor
loop
into
adc
testl
jmp
jmp
ljmp
js
psrld
adc
fldl
xchg
outsb
dec
ss
push
fnstcw
mov
jnp
sub
mov
inc
movb
or
dec
mov
cltd
xor
shl
jg
stc
jg
cmp
mov
jb
jns
cltd
loop
enter
leave
add
rcrb
shlb
adc
dec
mov
jmp
sub
push
mov
cmp
addr16
es
out
pop
sub
data16
sub
and
out
jne
jl
mov
sahf
imul
loop
jg
jnp
lahf
add
sbb
stos
xchg
adc
pop
and
dec
push
xor
ret
das
int3
enter
jp
cmp
imulb
cs
jae
xchg
dec
test
jle
mov
jbe
push
mov
ret
jbe
mul
test
ds
aas
cmp
leave
and
std
testb
add
jbe
pop
cmpsb
mov
mov
xchg
jmp
jge
iret
or
mov
cmp
jp
cmc
lahf
je
adcl
cmc
mov
push
shll
aaa
stos
sbb
mov
hlt
aad
lods
notb
pop
push
ja
ljmp
testl
pop
repnz
pop
or
mov
shll
dec
ljmp
pop
xchg
jp
push
xchg
push
aas
mov
fwait
in
test
scas
pop
add
mov
adc
pop
enter
aam
and
inc
xor
call
pop
pusha
cmpsl
cmp
movsl
sbb
ja
lock
shlb
mov
addl
fst
push
push
decb
arpl
pop
mov
adc
adc
adc
jp
xchg
or
mov
popa
jmp
xorb
aad
int3
std
ljmp
insb
mov
xchg
xor
aam
loop
imul
adc
xor
xchg
addr16
mov
sbb
jge
scas
adc
xchg
push
movsl
and
inc
mov
sti
and
cmp
add
adc
mov
sub
pop
fidivrs
push
or
mov
daa
repz
mov
mov
mov
outsl
fwait
loope
stc
pop
pop
mov
pop
ss
push
movsb
mov
shrb
xor
movsb
jb
mov
cmpsl
movsb
xchg
roll
in
aaa
fisubrl
jae
mov
xchg
push
fistps
ja
and
insl
orb
pusha
dec
sbb
lret
pop
inc
push
out
xor
fisubs
dec
cmp
test
scas
stos
fidivs
pop
scas
sbb
add
fdivl
ljmp
and
jnp
and
loop
inc
and
pop
pop
xchg
mov
clc
or
ljmp
fsubs
fistpll
fs
pop
jmp
dec
jge
test
es
lds
pusha
or
xor
ficoms
les
fs
jl
jae
cmp
stc
pusha
repz
cmpsl
pop
rorb
push
pop
mov
hlt
out
inc
cwtl
leave
mov
mov
or
fld
ja
inc
popf
testl
sbb
pop
add
xor
out
je
and
jg
and
sbb
or
mov
push
jmp
cmp
sub
std
sbb
out
fcomps
in
lcall
ret
sub
dec
arpl
ja
jmp
xchg
sarl
jp
inc
lods
lods
adc
cmp
mov
mov
loopne
sub
cwtl
sbb
push
sub
dec
xor
jns
das
mov
or
sub
daa
and
rcl
nop
cmp
dec
push
fisubrs
mov
pop
lret
sbb
add
out
mov
pop
mov
jge
fs
ljmp
xor
iret
xchg
push
repz
mov
insl
sbb
lods
sbb
leave
push
cs
pop
hlt
insb
ja
fstpt
test
mov
cmp
popa
mov
mov
jecxz
adc
clc
lea
cmp
fs
data16
jae
orl
and
dec
insb
sub
pop
jb
lahf
jmp
hlt
cmp
cmp
ljmp
loopne
arpl
pop
cmpsb
ret
test
es
inc
sbb
lds
shll
mov
mov
mov
cmp
sub
adcb
add
mov
push
push
sbb
popf
pop
xor
mov
mov
scas
inc
rcll
sahf
xchg
mov
ja
shlb
imul
inc
call
adc
sub
cmc
add
push
inc
inc
xchg
mov
push
popa
out
cwtl
in
lcall
enter
outsb
and
lret
das
mov
es
cwtl
mov
clc
lret
testb
sarb
fimull
or
push
sub
loopne
nop
roll
sbb
cli
loope
pop
mov
push
ss
bound
push
test
gs
js
movsb
loope
xchg
mov
xchg
and
aas
adc
mov
aam
jle
pop
push
mov
jo
outsl
mov
ret
pop
sub
or
and
jno
testb
aas
ja
inc
daa
arpl
pop
or
mov
cmpsl
sbb
imul
sub
mov
sbb
xchg
mov
sarl
pop
hlt
fcmovnu
int
xor
pop
dec
mov
fisubrl
lods
pop
addr16
std
and
jbe
sti
add
mov
pop
cmp
js
insl
xchg
cmp
cltd
add
movsl
pop
push
xor
push
gs
pop
xchg
je
cmp
pop
repz
dec
adc
mov
pop
insb
les
das
push
cwtl
push
jb
xsaves
test
mov
aam
imul
xor
add
jae
sub
imul
mov
outsl
cmp
mov
mov
and
mov
xchg
jno
addr16
mov
push
mov
jg
mov
clc
add
pop
iret
shrb
xchg
insb
lret
test
divl
aaa
pop
shr
pop
enter
mov
cmc
stc
inc
into
xor
and
push
mov
adc
shr
or
loop
xlat
jne
imul
sbb
adc
jae
ss
xor
outsb
mov
pop
mov
ss
ljmp
mov
dec
into
lcall
aad
xchg
dec
hlt
lods
mov
movsl
fstpt
test
inc
and
addl
popa
mov
mov
pop
popa
idiv
loop
cmpsb
push
jecxz
and
loop
pop
stc
dec
add
dec
fadd
sub
dec
jg
add
and
push
popf
pop
mov
xor
sub
xor
mov
icebp
leave
ret
xchg
ja
js
in
idivl
out
mov
xorl
js
div
mov
sbb
xor
mov
adc
pop
test
pop
adc
xchg
fbstp
popa
outsl
into
mov
stos
lahf
sti
rcl
scas
repz
jne
xorb
test
imul
dec
shrb
nop
call
xlat
mov
mov
cmp
cwtd
outsb
jns
add
cmp
rorl
mov
jl
into
xlat
push
es
mov
fucomip
test
sahf
add
test
popa
cld
cmp
inc
or
mov
test
das
mov
jnp
in
out
repnz
outsb
ds
or
inc
inc
js
ljmp
out
in
aas
js
data16
push
popa
jl
cmp
inc
jecxz
xchg
scas
fdivrl
fs
push
popf
jmp
sbb
mov
push
xchg
adc
stos
cld
outsl
lret
push
mov
outsb
bound
hlt
pop
scas
cld
cmp
xchg
test
jg
stc
jo
insl
and
xchg
neg
push
jge
push
add
jno
xlat
jb
int3
daa
cmovge
test
pop
and
dec
popf
in
cmpb
cld
pusha
aad
pop
lcall
xchg
outsb
pop
adc
mov
xlat
cmp
in
dec
jnp
mov
or
in
imul
lahf
mov
pusha
inc
fbld
push
insl
add
mov
sub
les
les
loop
test
fs
icebp
jbe
cmp
call
xor
xchg
ljmp
push
and
mov
fnstsw
jnp
cmp
imul
out
mov
inc
or
push
fcmovb
dec
xchg
xchg
or
daa
loop
push
mov
push
jb
cli
enter
xchg
les
pop
stc
and
dec
fs
mov
and
or
xchg
inc
cli
xchg
pop
and
cltd
cli
add
test
add
cmpsl
fldenv
dec
or
cmp
fstl
push
ljmp
sbb
sti
sbb
orl
in
je
je
in
fsts
or
xlat
fbstp
data16
fnstenv
icebp
mov
cmp
loop
inc
push
fld
inc
jo
loop
stos
movsl
std
xchg
cmc
mov
fwait
jp
int
inc
push
rcr
mov
or
std
fsts
popa
scas
rcll
mov
divl
push
stc
in
cmpsl
leave
pop
jae
mov
inc
movsl
sbb
cmp
jge
push
nop
push
dec
add
and
cmp
std
xchg
enter
out
or
rorb
xchg
sbb
mov
dec
mov
popa
movsb
jno
mov
rolb
xor
std
mov
test
push
xchg
xchg
mov
add
dec
and
jae
sbb
lcall
xchg
mov
iret
sub
popf
sahf
cmp
pop
ja
pusha
ljmp
mov
out
push
rorl
push
mov
pop
out
shll
loope
cmp
jg
cltd
cmc
add
jae
test
jle
out
leave
into
ret
fs
mov
xor
lret
addr16
pop
push
icebp
das
hlt
data16
xor
mov
cmp
xchg
sub
ja
popa
mov
xchg
pop
jbe
dec
mov
adc
adc
dec
dec
sbb
mov
or
ret
les
mov
imul
sbb
test
adc
and
mov
popl
add
popf
imul
sar
jb
jb
mov
imul
std
and
stos
repnz
pop
jp
loop
pop
movsb
mov
lods
mov
out
pop
movb
aaa
decl
jae
outsl
insl
loopne
test
jb
add
jbe
add
mulb
cmpsl
and
test
add
sbb
cmp
jl
inc
cmp
adc
test
incb
inc
xchg
push
loop
cmp
lcall
adc
call
rcrl
dec
into
cmpb
mov
push
jo
shll
xor
push
inc
imul
subb
adcb
inc
add
jns
sbb
inc
ret
add
pop
sbb
lcall
enter
sahf
hlt
subb
sti
cmpsl
nop
cli
fcmovbe
mov
stc
add
or
imul
sahf
mov
inc
add
aaa
mov
xchg
or
or
imul
mov
pop
add
jo
dec
shrb
daa
jns
in
cmp
push
lret
push
jge
imul
pop
sub
scas
dec
xchg
mov
fimuls
clc
aaa
sahf
cwtl
pop
cmp
addr16
das
xchg
mov
arpl
mov
cmc
lods
movsl
pop
jge
inc
sti
call
leave
dec
dec
enter
bound
xor
push
cwtl
mov
mov
lea
cmpsl
dec
out
push
inc
icebp
push
jns
loope
rep
sbb
into
sub
inc
xchg
inc
stc
nop
out
insl
test
xchg
ljmp
inc
scas
shll
add
push
xor
jmp
sti
inc
xorb
int
cmp
and
jge
cld
pop
dec
mov
sbb
clc
sbb
daa
adc
call
xor
mov
jecxz
mov
push
xchg
or
std
jbe
mov
xor
inc
pop
sbb
int
repnz
or
jp
out
pop
mov
mov
dec
or
xor
sbb
and
inc
or
and
lahf
lock
add
mov
stos
jl
and
mov
and
popa
insl
stos
lret
lods
or
test
divb
outsb
sub
in
mov
mov
dec
loope
mov
push
push
int3
add
lcall
dec
mov
movsl
jle
into
outsb
xlat
mov
pop
or
sub
ja
or
je
notb
cmp
out
addr16
sub
push
mov
call
insl
push
push
dec
nop
fidivrl
fists
ret
adc
mov
dec
fcmovnb
rorl
cli
xchg
stos
outsl
fmuls
insb
add
push
mov
in
mov
mov
pushf
and
mov
inc
sbb
les
sbb
pushl
popa
lock
mul
dec
fmul
adc
inc
pop
pop
mov
jnp
push
adc
lahf
cmp
sti
or
cwtl
lock
test
fisubs
xor
and
mov
mov
lret
in
fdivrl
adc
push
stos
sub
iret
sub
mov
call
mov
cltd
push
sub
loope
lahf
jb
xchg
mov
lahf
scas
mov
jle
cmp
mov
mov
lds
loop
mov
push
sbb
ror
and
inc
and
pusha
rclb
jo,pt
dec
mov
fisttpl
inc
push
xlat
push
popf
and
popf
xchg
inc
jnp
inc
jb
add
arpl
mov
ds
adc
icebp
jae
pop
ror
add
lret
mov
sbb
lea
sbb
dec
test
mov
icebp
ljmp
pop
addl
es
jle
daa
add
xor
and
call
lahf
lcall
jnp
insb
pop
and
add
clc
sbb
jb
mov
cmpsb
ficomps
test
and
int
neg
push
test
loop
mull
and
sbb
push
dec
bound
jge
sbb
int
aam
xchg
and
push
pop
rorb
push
mov
push
mov
pop
mov
add
fistl
push
adc
jnp
stos
mov
sbb
iret
aad
jbe
icebp
ret
rcrl
aad
sbbl
jle
stc
sub
lret
iret
mov
or
imul
arpl
push
sahf
outsb
sbb
outsb
in
mov
lcall
and
push
in
or
add
xor
lahf
hlt
scas
popa
inc
ja
les
hlt
push
jns
fs
cmp
or
test
sahf
xchg
outsl
stc
inc
inc
test
negb
dec
pop
jp
sub
xor
rclb
sub
sub
in
ljmp
inc
adc
ret
in
xchg
or
repnz
aaa
lret
out
imul
fisttpll
dec
mov
jg
enter
adc
xor
xor
mov
ja
fsubl
inc
clc
daa
mov
test
mov
cld
jmp
xchg
push
mov
out
xchg
push
or
mov
in
dec
or
lock
sub
jns,pn
test
outsl
adc
xor
das
jo
pop
push
jne
and
je
data16
icebp
push
jge
loopne
jl
pop
test
xor
sbb
loope
pop
lods
xchg
insl
xor
jne
popa
outsb
jae
sbb
xchg
frstor
cwtl
push
enter
inc
fmull
add
test
dec
xchg
mov
insb
xchg
aas
xchg
cmc
inc
loopne
mov
into
ret
enter
stos
jbe
lods
sub
mov
adc
push
int
cmc
inc
push
bsf
push
aam
outsl
inc
mov
inc
dec
lret
and
sub
fcomp
push
adc
xchg
stc
mov
mov
test
leave
fldt
jmp
sbb
cmpsl
push
test
sahf
pop
inc
es
std
inc
aad
add
xchg
cmp
sub
lret
lret
incb
sub
jmp
gs
mov
out
fsubp
data16
add
cmc
push
pop
jbe
or
pop
inc
repz
jl
adc
push
push
add
cld
call
outsl
push
jle
cmc
mov
mov
iret
jge
imul
sbb
loope
fnstsw
inc
and
movb
mov
insb
mov
cmp
mov
jbe
mov
scas
in
sub
push
mov
lds
lock
mov
test
pop
xchg
add
aam
ret
scas
or
subl
lock
xchg
adc
les
lcall
enter
push
hlt
jns
icebp
xchg
dec
lods
fs
lcall
into
mov
int3
sub
call
and
test
or
xchg
mov
mov
in
test
or
fldl
je
std
pop
adc
out
lahf
jbe
inc
cmp
adc
cltd
lock
stc
aaa
push
dec
loope
push
loopw
ficompl
jne
test
outsl
vcvtpd2ps
imul
idivl
in
ja
xor
out
out
mov
cmc
stos
mov
push
jo
sti
leave
int
and
push
cltd
push
push
sub
mov
xchg
sti
xchg
lahf
cmpsl
aad
js
mov
xchg
daa
mov
and
pop
mov
psubw
xor
inc
loopne
loop
repz
lahf
xchg
popaw
scas
adc
popa
fs
push
pop
lahf
xor
push
xlat
mov
xlat
mov
jno
jae
inc
test
add
jecxz
inc
scas
xchg
iret
data16
inc
imul
aas
dec
shl
cld
sub
fadds
ja
lock
int
cmp
xlat
mov
cmp
cmp
test
jl
in
pop
ja
sbb
or
push
mov
shlb
dec
mov
gs
or
ss
xchg
mov
or
and
push
jne
lods
in
mov
popf
pop
and
sbb
das
out
ljmp
outsb
sbbl
jno
cltd
fstps
cwtl
subb
xchg
dec
mov
cmp
insl
cmp
mov
or
andnps
pop
cmp
inc
aam
mov
arpl
rcl
rcll
and
mov
stos
in
push
xchg
into
in
lods
sub
js
out
idiv
jae
jle
inc
mov
stos
mov
mov
mov
je
xlat
inc
stc
rcrb
mov
push
push
cmpsl
int3
loop
xchg
gs
push
xor
out
sahf
jg
xorl
cmp
fstl
sbb
jl
cmp
rol
fsubl
xchg
nop
clc
ljmp
test
sahf
ret
pusha
push
inc
mov
jne
or
push
jle
loop
sub
test
cmc
and
inc
in
xor
mov
inc
and
push
call
loopne
pop
xor
push
cmp
sbb
and
out
pop
sbbb
or
icebp
adc
adc
sbb
xchg
movb
adc
xchg
jmp
sarb
mov
sbb
addr16
pop
test
insb
xor
aas
lea
cs
movsl
mov
and
jge
xlat
stos
jge
int
je
arpl
adc
fisubrs
aad
pop
add
cmpb
adc
iret
imul
xor
add
int
mov
jle
mov
mov
fldt
sub
les
jns
mul
leave
dec
cmpsb
mov
jmp
or
sub
rcrb
je
sti
pop
add
xlat
jbe
sbb
mov
or
and
out
loop
sub
sub
mov
lods
ret
out
or
imul
sbb
je
push
fs
push
dec
jl
dec
ret
cmp
pop
ret
add
xchg
js
inc
out
mov
adc
lret
fistl
mov
sti
loop
cmp
rcr
and
xchg
or
sarl
sbb
cmpsl
aad
sti
xchg
enter
flds
mov
std
lret
add
xor
push
cmp
bound
jno
sub
lret
cmp
mov
dec
popa
in
cli
sub
into
dec
add
out
mov
fwait
xor
jno
out
cwtl
lock
mov
movsb
lods
pop
cmp
add
gs
fisubl
push
testl
insb
testb
adc
idivl
and
lcall
ffreep
mov
xorb
test
int3
inc
jmp
xchg
xchg
fbld
xor
movsl
mov
std
mov
jnp
mov
push
xor
mov
adc
loop
mov
cmpsb
sbb
loop
sbb
sub
fcomp
mov
push
je
lock
and
mov
jge
shr
stos
jbe
mov
inc
pusha
nop
movsb
mov
and
dec
push
inc
cmpsl
hlt
xchg
push
lds
out
and
rcrb
mov
sub
and
repz
fisttps
jb
sbb
out
and
sub
jbe
cwtl
dec
push
ss
jp,pn
xlat
stos
jecxz
hlt
inc
fdivp
repnz
loop
push
cld
dec
test
mov
mov
in
pop
fldcw
js
pop
mov
ljmp
pop
xchg
negl
repz
inc
outsl
push
shrb
jo
xor
push
lods
mov
xor
add
cwtl
cmp
popa
gs
in
pop
adc
mov
test
stc
repz
or
insb
jae
aaa
ss
and
adc
and
int3
aaa
cld
pop
adc
jbe
inc
das
mov
jae
cld
jg
cmp
mov
mov
dec
out
sub
dec
mov
mov
and
and
js
test
aad
pushf
xchg
dec
pop
jo
aam
fnstcw
cmp
in
aaa
cli
enter
push
cwtl
fcompl
adc
ficoml
arpl
cmp
mov
fidivrs
add
mov
push
mov
mov
movsl
mov
push
xor
cmp
and
iret
scas
out
cltd
push
xor
mov
popa
and
cmp
bound
js
repnz
xchg
push
loopne
aam
out
xlat
mov
movl
lods
jo
push
jecxz
jae
push
xchg
jb
repnz
cmp
rol
jmp
add
adc
sbb
sbb
out
js
pop
jle
in
cmp
inc
push
pop
mov
or
pop
hlt
rcl
nop
pop
ljmp
sub
int
push
testb
dec
stc
mov
pop
push
mov
xor
cmp
rcrb
in
outsl
xchg
mov
xchg
ja
mov
lea
dec
cld
rcrb
xor
inc
sbb
dec
push
xor
in
fwait
pusha
xchg
mov
loope
stc
lahf
fnsave
sbb
mov
in
movsl
adcb
aam
push
mov
dec
fmul
enter
adc
adcl
mov
xlat
xchg
jae
test
jns
dec
mov
xor
outsl
add
hlt
dec
lods
xchg
push
jg
out
add
add
hlt
stos
nop
out
sub
lods
push
sub
stos
mov
imul
mov
mov
jns
aas
cltd
addb
inc
xor
imul
pop
add
jp,pn
das
stos
in
xor
inc
fld
or
pushf
int3
aaa
jp
inc
clc
roll
gs
sahf
pop
mov
mov
and
xor
call
cmpsl
push
out
cmpl
xor
jb
repnz
jg
mov
fdivp
arpl
or
jl
andl
mov
inc
dec
test
cltd
cmpl
and
inc
cmpsb
mov
push
dec
repnz
clc
mov
mov
fwait
popa
sbb
cmpl
aaa
mov
icebp
je
xchg
xchg
dec
lcall
aad
pop
lea
int3
dec
jnp
push
mov
cmp
xlat
in
inc
or
nop
out
adc
or
sbb
cmc
sub
pushl
xchg
fstl
pop
test
sbb
mov
sub
pop
push
test
imul
outsb
cs
aad
xchg
scas
adc
rcrb
xor
jae
mov
mov
idivb
and
mov
andl
xor
or
jbe
shlb
shr
push
in
cmpsl
hlt
movsb
fisubrs
xor
negb
mov
mov
sbb
cmp
orl
mov
and
jge
stos
inc
adc
mov
jns
jns
adcb
lcall
nop
lcall
cmp
sub
vmovupd
daa
faddp
and
mov
fisubs
sbb
pop
xor
pop
inc
nop
dec
pop
fistpl
cmpsb
mov
push
fwait
rolb
sbb
sub
movsl
dec
xchg
fistl
sub
mov
mov
cmpsb
push
inc
push
or
sahf
mov
mov
push
adc
mul
aam
out
mov
shl
cs
cli
inc
dec
inc
test
mov
mov
out
fistps
adc
add
sbb
movsl
fcomps
mov
jne
dec
lret
cltd
lahf
jb
mov
scas
and
subl
mov
ljmp
ror
rolb
outsb
daa
push
cmpsb
movsb
mov
or
xor
addb
pop
popl
dec
jg
xlat
push
fmuls
cmp
cmp
and
sbb
mov
imul
adc
sysenter
and
sub
cmp
dec
mov
addb
sub
sbb
adc
xchg
imul
rcr
jns
jl
dec
dec
push
cmp
cwtl
add
fs
xchg
inc
jmp
pop
aaa
mov
nop
inc
mov
and
mov
pop
pop
pop
xchg
cmp
mov
icebp
rcrl
lock
call
jmp
arpl
in
fldenv
push
or
sub
xlat
andl
mov
push
pushf
and
mov
inc
adc
xchg
pop
xlat
jge
add
filds
ret
push
das
jbe
je
icebp
ret
mov
bnd
inc
cmp
mov
add
mov
add
pop
enter
pop
gs
mov
mov
xchg
scas
outsl
pop
es
jae
ljmp
sbb
xor
lods
movsl
ret
lret
push
out
jno
and
xchg
jl
andb
sub
inc
inc
iret
adc
popa
sbb
mov
shlb
imul
enter
cld
cli
fadd
and
add
or
mov
xor
inc
adc
push
out
aaa
jmp
ss
xor
push
jecxz
add
cli
or
push
pop
mov
fwait
shlb
adc
push
stos
cwtl
incl
andb
jg
xchg
push
push
adc
mov
insl
push
ret
pusha
inc
int3
idiv
fwait
xor
cmp
or
lret
mov
xchg
xor
testl
movsl
in
popf
jae
push
or
je
imul
adcl
notb
mov
jecxz
xor
cmpsb
bound
ljmp
jb,pn
xchg
outsl
jmp
int3
add
mov
or
inc
flds
loope
cmpsl
or
adc
jnp
aaa
or
lods
lahf
jo
push
fs
jmp
mov
adc
push
hlt
xchg
pop
lret
pusha
adc
jnp
and
jg
stc
pop
inc
adc
mov
out
dec
dec
jmp
inc
push
add
into
int3
insl
cld
cmpsb
mov
in
fldl
test
sti
jmp
xchg
pop
jns
in
push
fbld
cmp
xor
cmp
pop
les
mov
imul
mov
xor
fwait
xchg
xlat
push
push
adc
or
sub
and
fsqrt
shl
fidivl
stc
push
xlat
rcrl
push
and
push
cmp
add
cld
cmp
sahf
pop
aas
rclb
ret
cmp
cmp
pop
or
cli
or
jmp
icebp
aaa
shrb
ljmp
inc
mov
add
sub
scas
inc
lret
and
xchg
jge
test
jmp
lret
addl
mov
test
and
jg
jb
movl
push
enter
andl
test
push
test
stc
std
xor
add
cwtl
push
push
gs
mov
add
imul
or
push
mov
movsb
fldcw
in
adc
pop
xchg
dec
xchg
subl
jmp
jns
loope
sbb
repz
insl
sbb
ret
outsl
xlat
test
add
dec
jecxz
pop
daa
add
mov
add
dec
mov
sub
in
shll
sbb
or
add
and
adc
cmpsb
in
cli
cmp
int3
aam
pop
sbb
shlb
or
mov
popf
xchg
pushf
outsb
xor
rcl
add
push
sbbl
movsl
mov
mov
lret
cmp
mov
ret
xchg
push
lds
mov
fistl
int3
test
hlt
pop
dec
movsb
push
stos
jge
xchg
insb
xchg
stos
xor
and
dec
xor
test
push
scas
popf
mov
in
xor
and
in
xor
cmc
out
jno
xchg
scas
mov
popf
imul
and
aas
test
adc
inc
jae
fdivrl
clc
xchg
mov
dec
adc
xchg
popl
lds
push
xchg
punpckhdq
and
cmp
jge
orb
jbe
push
jns
stos
add
nop
shl
mov
push
jbe
jge
stc
adc
dec
fwait
mov
sbb
jae
push
rorl
andb
push
mov
mov
xchg
jmp
sub
push
int
push
mov
mov
xchg
add
xchg
and
mov
xchg
dec
subb
shrl
push
data16
xchg
outsl
mov
adc
testb
adc
clc
popa
shlb
cwtl
roll
cld
test
adc
cmp
jno
inc
stc
test
shld
mov
pop
add
push
xor
stc
dec
arpl
sbb
aas
pop
insl
sub
push
fs
dec
out
jmp
andl
mov
stos
aas
shrb
fists
es
int
insb
mov
aam
imul
sbb
leave
mov
mov
sbb
inc
pop
insl
cs
mov
pop
out
call
mov
ds
dec
movsb
add
movq
jae
mov
push
jo
ja
mov
sub
sub
xchg
cmpsb
cld
and
cmpsl
inc
jg
mov
jge
mov
lret
pop
ror
in
jp
fld
sti
add
dec
jmp
std
fsts
cmp
enter
push
add
add
jno
sub
and
sub
das
scas
inc
jmp
add
adc
daa
pop
mov
mov
sbb
into
sub
sti
es
das
mov
jmp
shll
jbe
cmpxchg
shl
movsl
scas
dec
clc
push
fsub
mov
rclb
orl
lods
or
jne
cmpsb
xor
sbb
fildl
lods
out
shll
sbb
xor
or
imul
in
and
aaa
mov
std
int
cwtl
sbb
mov
or
cld
ret
sbb
dec
mov
gs
xchg
daa
add
lret
xor
xorl
sbb
add
push
ja
fs
sub
fcompl
xchg
adc
pop
pop
jae
xlat
loopne
pop
test
hlt
or
addb
insb
addr16
and
in
aam
or
add
mov
push
xchg
pushf
xchg
ja
mov
push
ds
lahf
pop
push
mov
outsl
lds
mov
and
clc
adc
pop
add
fiadds
bt
cltd
dec
inc
xchg
xchg
xchg
repnz
je
pop
rcrl
inc
pop
inc
es
and
jns
sahf
jle
nop
push
inc
push
imul
aam
pop
sbb
mov
int
rorl
push
loopne
mov
repnz
les
sbb
xor
xchg
icebp
fists
and
push
pop
mov
sarb
add
jmp
inc
xchg
mov
xchg
arpl
jnp
xchg
xchg
incl
sub
data16
enter
test
ljmp
les
push
data16
mov
ret
stos
jg
pop
mov
pop
inc
mov
add
aam
notb
mov
xchg
ss
pop
sahf
mov
enter
mov
or
mov
cwtl
in
cwtl
dec
sbb
add
push
rclb
dec
ljmp
loope
xchg
xor
push
sub
mov
lahf
and
ret
cld
mov
or
mov
xor
dec
push
iret
push
popa
lock
pusha
cmp
xchg
push
push
lods
fidivrl
xchg
xor
mov
push
mov
lahf
add
jne
fsts
mov
xchg
xchg
lods
sahf
mov
push
ds
fiadds
pop
sti
iret
cmp
mov
inc
inc
stc
xor
push
and
inc
lcall
adc
mov
xchg
push
push
sbb
pop
xchg
aas
mov
sub
jno
ds
pusha
mov
sub
mov
sahf
jge
inc
and
insl
add
repz
push
xlat
inc
rolb
std
incb
push
mov
inc
mov
dec
xor
sarl
jp
loop
and
add
pop
cmpl
mov
in
add
pop
push
out
or
test
xor
adc
jecxz
inc
xor
cmpsb
lahf
gs
leave
push
cmp
subb
in
lcall
lock
fisubs
lahf
xor
mov
add
push
scas
inc
cltd
int
dec
mov
enter
push
ja
stc
enter
xchg
and
xor
icebp
cmpb
lahf
mov
imul
movsl
or
lock
pop
sbb
inc
test
mov
shl
adc
mov
or
lret
in
je
mov
jge
stos
xchg
repnz
mulb
movsb
movsb
jae
pop
and
jg
insb
dec
mov
out
addr16
sbb
mov
mov
mov
and
add
mov
scas
sbb
mov
push
in
jl
mov
cmp
jp
jne
mov
xchg
repnz
popf
xchg
push
pop
push
test
mov
sbb
push
out
clc
jle
jne
stc
and
jle
hlt
xlat
cli
dec
gs
ror
addb
and
repz
jnp
mov
mov
icebp
xor
inc
mov
ret
mov
dec
lea
icebp
leave
dec
aaa
adc
mov
jge
cmp
push
stos
add
ret
dec
fwait
sbb
aad
push
scas
pop
mov
adcb
dec
mov
xchg
fwait
outsl
fnstenv
cmp
dec
xchg
mov
fcoms
sub
mov
shlb
jl
test
enter
dec
xor
xchg
and
inc
stos
fwait
popa
sbb
jns
adc
aad
mov
push
daa
jno
xchg
cmp
loop
adc
in
cmpsl
leave
inc
int3
mov
in
pop
addr16
add
jge
orb
rol
fisubrl
mov
decl
or
scas
jae
inc
xchg
loopne
sbb
cmp
jp
xor
push
lcall
mov
xor
mov
leave
sti
xor
std
enter
out
lahf
mov
and
or
ficompl
inc
popf
mov
fcomps
loope
cmpsl
sbb
push
inc
pop
pop
lods
daa
xchg
jae
or
xchg
cmp
add
cmp
push
lcall
and
sahf
inc
and
test
mov
jmp
les
call
xchg
ljmp
fldcw
je
or
xor
xchg
adc
hlt
sub
jp
dec
inc
out
adcb
leave
les
mov
daa
idiv
imul
cld
arpl
fidivrs
movsb
jne
adcl
loop
dec
mov
add
sub
jecxz
xchg
cmp
in
sbb
cld
rcrl
iret
cmp
lcall
add
pop
push
pop
dec
test
adc
adcb
jl
adcb
push
xchg
mov
and
mov
insl
mov
mov
aas
cld
add
cmpsb
jne
add
iret
test
cmp
push
xchg
pop
mov
xchg
cmp
hlt
rep
dec
popa
imul
cld
fidivs
mov
add
mov
je
sbb
cltd
dec
shrl
jne
mov
sarb
sub
cmc
mov
js
out
mov
ds
pop
lahf
jmp
jae
adc
in
adc
mov
cmpsb
orl
jge
mov
push
mov
jle
into
push
pusha
adcl
jb
add
aad
jg
mov
jp
jae
sub
enter
push
or
clc
push
or
push
cld
sbb
jno
mov
ljmp
mov
out
cmp
xor
out
shrl
mov
ror
jp
lret
negb
fwait
insb
sbb
push
adc
shlb
aas
test
dec
or
push
sbb
xor
inc
cld
les
fstpt
fs
rol
ret
inc
xchg
xchg
mov
ss
pushl
fwait
test
xchg
inc
xchg
cmp
xor
xor
dec
punpckldq
aaa
fldt
loopne
fstpl
lock
adc
movsl
or
pushf
push
push
leave
inc
pop
and
dec
addb
test
mov
push
xchg
add
sbb
pop
jno
jle
sbb
orl
lods
imul
clc
lahf
sahf
inc
jbe
inc
inc
jbe
pop
lret
add
insb
dec
cs
imul
jnp
jne
add
rclb
lods
fdivrl
repz
fwait
push
mov
sbb
test
mov
push
and
pushf
and
or
jnp
lods
xlat
mov
insb
adc
stc
pushf
adc
inc
std
pop
movsl
xor
mov
mov
xor
fiaddl
jae
fldenv
out
idiv
mov
mov
ret
inc
cwtl
sub
roll
jp
adc
lods
cmpsl
aas
cwtl
cmp
cmpl
sub
xchg
je
jmp
mov
sub
cld
adc
mov
ds
leave
mov
cs
in
daa
push
popf
pop
test
ret
sbb
cmp
or
fstpt
shll
lahf
mov
mov
stos
gs
sub
jbe
and
movl
xor
pop
jne
enter
cs
add
cmp
lods
jns
push
out
jl
das
cmp
push
std
std
scas
lcall
pop
idiv
sbb
adc
out
cmc
inc
sub
sbb
xor
mov
scas
hlt
ss
and
push
imul
cltd
ja
scas
sub
aam
decl
xor
push
push
stc
add
test
jns
sbb
or
das
or
cmc
dec
jecxz
sub
jp
mov
mov
mov
sbb
lret
bound
push
jg
cmp
into
lcall
cmc
pop
pop
bnd
adc
adc
data16
push
mov
lods
stos
adc
stos
int3
fisttps
dec
stc
pop
lahf
mov
ror
std
or
fimuls
je
mov
mov
push
jecxz
in
mov
imul
add
popf
stos
cmp
mov
sarl
out
lret
pop
and
fadds
scas
ds
pop
das
aaa
cmpsl
aaa
pop
lcall
mov
sahf
inc
imull
push
je
xor
inc
add
inc
ds
loopne
pushf
test
repz
sbb
iret
repz
pop
ja
jge
test
ljmp
cmc
xor
adc
and
and
jb
movsl
dec
jle
addb
or
mov
mov
mov
mov
push
mov
jb
and
fcoml
dec
cmp
sbb
push
ss
inc
xor
sbb
je
sahf
movsb
sub
inc
iret
lock
jle
scas
dec
repnz
leave
add
or
pop
insb
dec
pop
pusha
lahf
clc
jno
and
mov
cmp
and
sbb
and
adc
imul
ds
in
enter
xchg
mov
or
cmp
jge
test
xor
fs
bound
cli
mov
dec
xchg
out
mov
into
addr16
fcomip
sbb
or
inc
sbb
cmpb
jmp
jns
addl
push
pop
movsl
cwtl
adc
scas
dec
fiaddl
leave
mov
in
cmpsb
sbb
clc
sbb
xor
cs
push
sti
ds
add
fstpt
push
push
sbb
adc
lock
sahf
inc
sub
je
orb
dec
push
push
jns
fst
push
jmp
and
dec
pop
cmp
jle
test
lods
jae
cs
fistl
je
pop
popa
pop
push
lret
mov
or
or
je
int
clc
xchg
popa
imul
xor
lret
jmp
push
sbb
shll
mov
and
pop
cmc
loopne
fsts
mov
xchg
cmc
in
rclb
leave
pop
rcrb
cli
cld
repnz
jne
mov
arpl
mov
jns
cld
es
out
jnp
in
out
xchg
or
testl
test
jo
pushf
add
jg
mov
inc
push
inc
sub
xchg
pop
sub
outsb
or
jno
mov
dec
out
xchg
push
test
lahf
sub
pop
and
sub
push
movsb
lock
push
idivl
mov
dec
clc
xor
push
mov
mov
inc
xchg
mov
daa
push
cmp
dec
cmpsb
and
sbb
or
call
and
sbb
ss
and
and
mov
jge
lods
in
cmp
jo
jno
inc
out
insb
push
lret
mov
or
mov
dec
push
fcom
sub
pop
scas
inc
hlt
bound
pop
cwtl
je
lods
jecxz
je
outsl
adc
sbb
js
push
in
test
sub
jle
iret
scas
jp
aas
sub
rcll
daa
jns
and
or
movsl
enter
pop
jne
dec
imul
dec
ret
add
out
enter
cmpsb
testl
xchg
stc
mov
fmul
cmp
jle
fcom
aad
js
test
jbe
jmp
add
sbb
pop
lods
push
add
xchg
sbb
test
jo
test
fcompl
add
jbe
cltd
xor
lahf
mov
ja
add
jge
lea
jmp
out
test
jle
mov
add
dec
arpl
push
pop
subl
fdivrl
std
std
loopne
adc
jmp
call
pusha
pop
jl
lret
mul
mov
inc
cmp
pop
and
pop
adc
lods
xchg
ss
mov
xor
adc
int3
fadds
jns
sbb
mull
cld
push
mov
mov
pmaxsw
lods
mov
lea
sbb
fiaddl
popf
inc
lock
push
add
loope
enter
mov
aaa
xor
push
jle
jmp
fnstenv
shrl
jae
pop
repnz
stos
data16
xchg
mov
cmpsb
fimull
daa
dec
enter
out
mov
inc
ss
aaa
xchg
fbld
je
pop
xor
xlat
sub
out
sbb
jp
lret
dec
jle
sbb
jo
addb
xchg
pusha
js
adc
jb
pop
cltd
mov
pop
push
lahf
in
dec
sub
test
add
popa
test
pop
loope
push
leave
enter
das
xchg
push
or
jae
jo
ds
fisubrs
popf
mov
add
inc
or
pop
lahf
je
mov
andb
adc
in
test
rorl
lods
dec
inc
call
inc
int
pop
and
loop
add
hlt
xchg
cmc
mov
inc
imul
xchg
push
pusha
sbb
pop
jmp
jp
js
scas
ret
and
int
mov
jbe
cmpsb
loop
pop
in
or
inc
mov
sub
mov
push
or
inc
sub
out
sbb
push
mov
inc
imull
fmuls
movsb
outsl
mov
loope
loopne
push
mov
sahf
ror
xchg
inc
ret
push
xchg
dec
scas
stc
lods
jle
and
fs
add
loop
mov
sbb
jmp
lds
and
xor
aad
mov
loope
or
push
sub
sub
cltd
and
int3
add
dec
jp
and
ss
pop
loope
adc
jp
test
adc
dec
aas
call
test
jp
xchg
into
push
pop
push
loope
fnsave
stc
mov
scas
into
and
mov
lock
fcompl
dec
adc
popf
dec
sarl
cwtl
movsl
ret
adc
xor
daa
dec
aaa
adc
push
xor
rcrl
adc
pushf
mov
rcrl
cmp
xor
and
scas
dec
stos
xor
jno
sub
mov
jl
mov
pushf
pop
inc
lock
cmpsl
xchg
outsb
push
pop
adc
mov
rorb
mov
mov
dec
inc
dec
jmp
mov
mov
std
filds
add
clc
shlb
xacquire
mov
sahf
in
movsl
pop
test
jb
aam
cmpsb
mov
mov
jecxz
scas
pop
xor
in
push
call
rep
addr16
std
dec
jp
xlat
stc
in
rorb
lods
jnp
add
add
cmp
jo
push
test
rclb
addr16
ret
mov
fisubrl
aaa
scas
dec
xchg
in
adc
jns
outsl
fabs
cmp
das
popf
xor
xor
sbb
mov
lahf
mov
sub
sahf
or
mov
ret
in
mov
in
aad
call
call
cmc
xor
ja
js
in
insl
psubsw
xchg
adc
pusha
ret
aas
cmpsb
data16
mov
cmc
dec
repnz
cmp
aam
sbb
bound
in
lods
stc
or
cli
sbb
mov
push
ja
pop
jmp
push
or
jno
outsl
jnp
data16
jmp
fidivrs
out
jb
scas
movsb
mov
xchg
sub
cmp
and
inc
cmpsl
sub
mov
push
mov
ret
and
and
out
dec
insb
stc
shll
jae
xor
ss
mov
test
mov
xchg
arpl
es
mull
jbe
arpl
lods
sub
jge
std
out
lahf
xchg
cmpsl
es
adcb
pop
mov
fsubr
or
mov
add
inc
rcrb
dec
and
mov
sbb
jne
xchg
into
or
inc
jbe
shlb
gs
adc
das
jnp
xchg
jne
cwtl
cmc
lahf
xor
dec
pushf
dec
push
dec
je
into
test
fdiv
xchg
nop
outsb
cmp
push
cmp
sbb
cmp
dec
cwtl
push
loopne
mov
pop
jl
lock
ficoms
mov
adc
cmp
ss
hlt
sub
leave
sbb
gs
adc
pop
mov
mov
scas
inc
nop
inc
pop
sbb
push
xchg
add
add
jne
fidivl
call
enter
sbb
or
scas
jnp
push
mov
jno
movsl
xchg
mov
fwait
dec
imul
sub
cld
into
in
adc
jp
stos
and
xor
lahf
mov
out
dec
pusha
inc
sub
mov
inc
jno
pop
cwtl
fcoml
or
pop
repnz
ss
addr16
and
add
sbb
pop
lods
aaa
pusha
pop
scas
jg
hlt
cmp
subb
mov
scas
jnp
into
push
xchg
xorl
mov
cmp
push
rcrl
sub
jge
or
lock
mov
stc
add
fucomp
gs
nop
mov
mov
xchg
pop
aad
and
and
es
jo
cmp
movsb
cmc
addb
movsb
je
add
push
daa
lret
outsl
push
cltd
xor
cmp
sub
testb
or
sti
xchg
loop
das
sbb
jne
xor
ljmp
imul
sbb
sub
inc
push
pop
cmp
loop
in
mov
iret
mov
and
lods
jnp
cmc
fs
push
outsl
pop
outsl
pusha
inc
js
cmp
mov
dec
fldl2e
adc
jns
cmpsb
xor
das
jge
mov
imull
mov
je
fcomps
dec
push
mov
scas
mov
rorb
dec
cmp
mov
clc
inc
mov
shr
add
cmp
in
in
andb
mulb
xchg
loopne
mov
mov
add
pop
jecxz,pt
in
nop
leave
or
push
mov
sar
inc
repnz
lahf
fidivrl
js
fbld
fcomp
ljmp
in
push
cmpsb
shll
mov
pop
cmp
mov
nop
fnsave
pop
insl
mov
cmpsb
lods
mov
loope
pushf
xchg
push
inc
jecxz
dec
imull
insb
sub
xorl
ds
jp
insb
sub
fldenv
int
cmp
jae
in
jecxz
stos
pushf
jno
fiadds
jb
dec
test
cltd
aam
xor
lods
ret
cmc
icebp
sbb
shll
cmp
xchg
mov
out
xor
shrb
sahf
dec
cmc
xor
xchg
jp
int3
push
pop
stc
mov
and
stc
hlt
or
cld
nop
mov
lret
push
mov
xchg
stos
std
out
aam
and
outsl
xchg
jp
js
add
mov
loop
xchg
push
xor
push
push
es
push
orb
xor
pop
out
scas
mov
cmp
or
adc
or
xchg
xchg
inc
lcall
or
sbb
xchg
shrb
sbb
jb
xchg
mov
sbb
pop
es
aad
mov
fbstp
push
jmp
and
jb
xchg
and
out
push
into
adc
pop
jecxz
jbe
in
dec
ljmp
call
and
cmp
pop
inc
and
xorb
dec
pop
sbb
dec
subb
dec
add
xchg
bound
mov
jmp
or
xor
lock
setnp
and
sub
fisubrs
sbb
mov
dec
ds
xchg
inc
add
ret
xor
inc
in
scas
cmp
push
xchg
mov
cmp
xlat
aaa
jbe
imul
lea
cmpsl
adc
jno
stos
dec
lret
ljmp
jmp
cmp
or
mov
test
jbe
outsb
pop
sub
lods
test
mov
in
push
or
jbe,pt
mov
and
inc
jnp
aam
dec
ud0
loopne
pop
xchg
cmp
sti
push
push
cmp
push
std
push
prefetch
rcll
rorb
ds
insb
bound
mov
imull
in
xchg
int3
scas
or
enter
pop
jg
push
mov
jmp
nop
pusha
xor
lea
insl
fdivrs
hlt
popf
mov
mov
sub
xchg
push
ljmp
xlat
add
dec
sub
jmp
arpl
out
sbb
xor
jnp
jnp
pop
pop
gs
jnp
jp
out
cmp
xchg
mulb
inc
mov
xchg
flds
pop
adc
sarb
popf
ja
sti
ljmp
insb
lret
in
test
inc
add
lock
dec
adc
mov
loopne
xorl
jbe
jb
mov
icebp
cmpsl
xchg
daa
add
jmp
out
jl
cwtl
xor
das
hlt
sub
sbb
and
stos
adc
ja
pushf
leave
movsl
cmpsl
mov
aas
sub
repz
inc
arpl
shll
ret
xor
pop
sbb
jb
pop
ret
mull
pop
repz
mov
or
ss
add
push
mov
stos
push
outsb
cld
jnp
daa
nop
out
cmp
mov
adc
into
pop
xchg
push
mov
clc
dec
in
sbb
jg
add
jl
mov
cmp
jb
xor
push
lds
shll
xchg
or
inc
and
mov
mov
repz
imul
mov
sar
aam
jne
inc
xor
jae
push
std
jo
stos
or
in
fsubr
sub
pop
lcall
and
push
shl
jae
stos
data16
pusha
sbb
sbb
xchg
or
sbb
mov
cmpsl
jge
inc
add
ror
jge
fisttpl
push
mov
sub
sub
jnp
lea
into
test
jnp
mov
dec
lods
in
xchg
and
jno
adc
mov
xchg
and
and
mov
stos
adc
ss
and
or
push
pop
xor
lahf
xchg
add
cmpsl
loope
inc
fisubrl
pop
outsl
cmp
push
jp
cwtl
dec
xor
movsb
ss
mov
pushf
test
pop
push
mov
cwtl
aam
push
xor
lea
sbb
inc
mov
dec
inc
xchg
test
pop
push
pop
out
jne
scas
inc
rcrl
or
or
xor
lcall
mov
lock
jle
xchg
adc
push
popl
enter
xchg
popf
xchg
or
sbb
push
push
add
and
xor
and
out
inc
add
mov
and
in
pop
sarl
mov
sbb
les
xor
xchg
pop
inc
fs
sti
mov
jno
fdivr
or
mov
out
arpl
fbld
xchg
mov
lret
ljmp
aas
jp
push
mov
jecxz
testl
xor
loop
repnz
jmp
add
pop
xlat
lods
pop
dec
dec
bound
pop
hlt
mov
or
dec
fldenv
mov
and
pop
xchg
add
push
leave
cmp
mov
into
es
popf
fcomp
sbb
or
jl
mov
testl
xchg
iret
dec
int
in
xchg
andl
mov
dec
ljmp
inc
xchg
sarb
sbb
mov
fnstsw
pop
or
out
ja
cmpsb
sarb
jle
or
shlb
adc
aaa
sti
mov
aaa
cld
fwait
pop
jns
popf
fs
xor
push
mov
jae
lret
push
addr16
les
mov
mov
mov
test
pop
inc
xchg
xchg
lret
loop
cwtl
clc
jae
movsb
cli
mov
aas
xlat
out
std
into
sbb
mov
stos
stos
and
iret
fcom
jae
popl
cwtl
add
push
dec
movsb
enter
adc
pop
mov
cmp
xlat
sub
adc
mov
test
mov
cmc
mov
gs
iret
mov
cmc
scas
ljmp
das
adc
sbb
inc
mov
into
dec
cld
xchg
stos
xor
pop
les
and
stos
adc
push
jecxz
adc
into
add
sbb
insb
jae
and
scas
add
mov
xor
push
enter
xor
xor
out
mov
outsl
jb
sbb
int
jns
pop
or
add
cmp
into
cltd
xchg
push
das
aam
daa
or
leave
cs
scas
push
daa
lcall
push
sbb
lahf
jmp
dec
in
adc
and
sub
out
lock
into
jb
stos
push
arpl
mov
mov
lds
out
das
bound
test
xchg
fistps
les
xchg
cmp
mov
pop
cltd
sti
test
xchg
or
testb
sti
shlb
fidivs
mov
imul
into
orb
mov
addr16
fimull
xlat
stos
cmp
pop
mov
je
cli
pop
les
jge
aas
sbb
inc
add
test
fsubrp
ret
dec
js,pt
mov
lahf
jg
dec
sbb
pop
lcall
inc
insb
imul
test
dec
xor
cmp
cld
pop
cmp
mov
pop
aad
pmaxub
mov
mov
pop
loop
jbe
lods
sub
jp
int3
fisubl
xor
cld
lret
jg
cmp
int3
imul
call
scas
aad
sbb
cmpsb
mov
imul
dec
xchg
in
add
inc
adc
jae
lock
sbb
mov
lods
pop
arpl
leave
xor
fucomp
ret
inc
jge
fnstenv
mov
clc
dec
jno
sbb
mov
cwtl
push
lods
fistl
mov
xchg
cmpsl
in
jo
ljmp
push
popf
mov
mov
xchg
in
add
movsb
adc
popf
or
loope
je
ja
movb
leave
sbb
jbe
pop
bound
ret
data16
push
rcrb
mov
stos
imul
fst
pop
es
xchg
xlat
insb
and
mov
jle
loop
jo
lods
imulb
out
lcall
xchg
movsl
ljmp
ja
xor
cmp
inc
mov
dec
cs
jnp
lds
ret
imull
adc
das
mov
pop
jmp
mov
adc
and
inc
inc
mov
imulb
sub
cmp
dec
stos
mov
loopne
push
mov
push
arpl
xchg
fucomip
mov
lldt
outsb
ja
dec
ret
sbb
test
out
out
xor
mov
adc
inc
cmp
aad
xlat
mov
movsb
mov
shl
mov
fldl
ret
sti
mov
js
adc
or
pop
lock
adc
pop
pop
in
mov
in
cwtl
fiaddl
sub
insl
or
adc
inc
mov
repz
mov
pushf
fimull
lock
pop
pop
iret
push
mov
cmp
test
popf
cmp
mov
out
push
cld
sub
adc
adc
scas
call
jecxz
inc
pop
dec
int3
dec
jecxz
mov
stos
clc
pop
or
pop
lds
dec
cli
mov
jle
push
js
cmp
mov
mov
mov
ror
test
addr16
aaa
cmp
push
scas
jae
test
or
ds
aas
loopne
push
adc
sub
pop
push
and
je
jl
cmp
xchg
cmp
inc
pop
movsb
adc
addb
push
sbb
adc
xchg
sti
adc
shl
xchg
pop
sbb
shrl
mov
jle
mov
cmp
testl
adc
pop
lods
push
sbb
test
xor
add
xchg
xor
xor
xchg
lret
sub
stos
pop
jle
inc
mov
add
sbb
pop
push
xchg
call
lahf
mov
inc
mov
mov
out
push
xchg
add
ds
in
sub
lock
push
push
dec
lods
xchg
sub
jp
or
lea
lods
xchg
inc
mov
mov
negb
mov
pop
test
xchg
inc
push
xor
adc
sub
cmp
xor
pop
cs
mov
adc
sbb
lcall
imul
push
pop
sbb
in
insl
out
mov
adc
sub
xlat
fistps
mov
xlat
sti
xor
dec
dec
sbb
pop
jp
sub
shll
sarb
jg
jmp
divb
adc
clc
test
lock
mov
add
flds
inc
mov
hlt
cmp
repnz
insb
cld
mov
dec
cwtl
sahf
pop
cmp
or
dec
xor
arpl
mov
and
sbb
das
or
popa
dec
movsl
xchg
cld
hlt
push
inc
out
fnstsw
or
jp
test
stos
inc
dec
push
push
xor
sub
sub
mov
or
jg
cmp
jg
mov
adc
mov
in
test
iret
inc
nop
in
sub
sub
imul
inc
dec
leave
or
jmp
out
cld
mov
push
add
fimull
subb
sbb
sub
shrl
and
mov
in
xchg
sbb
lret
loop
and
sub
shlb
jbe
sub
imul
push
call
dec
sbb
fmul
int3
fdiv
imul
arpl
adc
dec
lods
pop
push
lret
shlb
mov
lods
pop
dec
jp
cmp
inc
mov
pop
inc
sbb
fiaddl
xchg
adcl
push
addb
filds
inc
test
popf
add
xor
data16
push
data16
fsubl
jecxz
es
in
test
and
mov
inc
jge
gs
testb
ja
mov
cmpb
pop
jns
mov
shrl
mov
sbb
sub
pop
movsb
mov
inc
jb
inc
shrb
mov
push
xchg
inc
shl
test
test
add
jecxz
stos
lods
or
xor
push
push
xchg
inc
shrb
mov
jle
loope
movsl
push
loopne
nop
shrl
sub
cmc
gs
sub
push
pop
dec
clc
pop
cmpl
jae
pop
fwait
mov
fs
notl
mov
adc
xorb
adc
ss
pop
lods
loope
sarb
push
cltd
cld
or
sub
jge
mov
and
out
loopne
popa
or
int3
call
das
xchg
scas
aaa
mov
pop
mov
push
mov
dec
and
and
mov
sbb
into
mov
scas
in
jge
call
and
pop
addl
inc
jge
pop
lock
xchg
mov
push
ljmp
jne
nop
test
cmp
jo
and
repz
dec
dec
mov
test
adc
mul
pop
mov
je
nop
inc
mov
mov
cmc
inc
mov
push
aas
pop
fildl
mov
rorl
sbb
imul
push
ds
or
mov
std
mov
lret
cmpsb
mov
sbb
dec
lock
cli
jo
loope
iret
cmp
xchg
dec
push
mov
or
sub
loop
mov
or
jns
jno
mov
stos
ss
adc
fcompl
imul
adc
fdiv
cmp
fisubrs
cs
inc
or
dec
sub
mov
add
mov
cmc
int
cmp
xchg
push
popa
mov
test
stos
or
pusha
push
dec
and
lahf
adc
inc
pop
insb
xor
mov
daa
or
inc
lds
mov
cmpsb
push
mov
cmc
sbb
ret
add
xor
cmp
mov
icebp
dec
sar
jp
lods
lds
mov
xchg
out
out
stos
xor
adc
xchg
or
jne
mov
push
xorb
sub
mov
xor
jnp
sbb
lea
sbb
or
or
jno
in
xor
pop
adc
push
push
ret
cmp
cmp
jecxz
sbbl
lods
mov
mov
mov
int
outsl
jp
cmp
push
sub
sub
sbb
push
call
aas
icebp
mov
mov
test
pusha
nop
sub
xchg
jo
mov
movsb
sbb
mov
and
adc
cltd
rclb
in
movsb
mov
mov
fs
jmp
fmul
mov
inc
push
add
jg
test
or
sti
das
jecxz
jg
icebp
aas
outsl
xchg
jp
and
mov
push
jno
fstl
inc
loope,pt
out
mov
dec
sti
adc
fs
add
cmpsb
loope
mov
jae
adc
or
xchg
push
mov
push
adc
jmp
shl
callw
mov
cmp
sub
out
insb
dec
mov
cwtl
inc
xlat
mov
lea
jae
adc
add
aaa
pop
inc
cld
xorb
cwtl
pop
pop
or
sub
call
jl
xchg
sbb
mov
xchg
ljmp
aas
mov
out
mov
stos
xchg
or
incb
mov
lcall
mov
leave
fcmovnb
jle
test
clc
sub
jbe
and
push
test
out
inc
mov
cmp
cmp
cld
and
mov
je
leave
repnz
addr16
test
js
fcomps
sbb
adc
cltd
nop
jmp
add
mov
out
pusha
lcall
push
xor
mov
mov
xchg
inc
and
mov
aaa
jbe
test
push
jns
xchg
xchg
and
sbb
fidivl
pop
add
inc
and
frstor
aaa
cmc
xchg
mov
jb
sbb
inc
cmp
lods
pop
jb
inc
sbb
cmp
xchg
arpl
push
aas
cwtl
push
out
cmp
bound
repnz
xchg
les
or
dec
scas
mov
sar
add
mull
mov
lds
inc
ret
roll
insb
jmp
mov
push
xor
xor
xor
push
sarb
insl
gs
push
movsl
mov
or
or
arpl
sbb
cmp
incb
mov
mov
out
popf
cmp
int3
pop
jnp
hlt
data16
fdivrs
xor
cwtl
xchg
jne
or
iret
ds
jae
xchg
outsl
jecxz
cld
jle
test
or
jmp
rorb
gs
and
sbb
mov
test
push
imul
jbe
jp
icebp
sub
jno
aaa
stos
jmp
dec
pop
loopne
jnp
sbb
dec
ss
pop
xchg
rcrb
sbbb
lods
pop
sub
xchg
xchg
fmuls
sbb
addb
jno
or
movsl
test
adc
xor
outsb
push
sub
xor
pop
dec
add
pop
sub
mov
je
subl
cmpsl
xchg
js
es
nop
fistpll
rcll
out
add
fisubrs
es
add
test
cwtl
dec
mov
out
jecxz
mov
arpl
jge
pop
dec
je
nop
mov
pop
or
dec
sub
lods
push
fs
lahf
scas
push
mov
ss
push
bound
adc
imul
xchg
cli
stc
mov
int
sbb
mov
push
push
gs
push
lods
sub
jo
repz
mov
leave
jmp
cmpsl
addr16
stc
jle
repz
popa
int
push
sub
es
out
mov
in
add
out
xchg
pop
iret
xlat
pop
repz
lds
and
mov
data16
cmp
andb
jb
jge
jle
mov
adc
call
cmpsl
jmp
dec
inc
push
xor
fwait
push
xchg
mov
popa
cmp
pop
sub
cli
fcoms
incl
int3
adc
xchg
mov
jb
aas
pop
lahf
mov
lea
clc
xchg
dec
lods
mov
iret
test
stc
pop
fisttpll
jecxz
cmp
ds
lret
push
movsb
jp
es
ljmp
push
sub
mov
mov
enter
stos
pop
cli
xor
lret
pop
dec
ror
movnti
arpl
push
mov
jo
cld
lret
lahf
addl
xor
cwtl
xchg
test
lods
pop
fadds
movsb
call
jo
fisttpll
sbb
add
dec
mov
cmpsl
jmp
pop
iret
jecxz
lahf
mov
mov
jecxz
inc
xor
dec
dec
inc
test
pop
or
sub
test
popa
push
mov
xchg
hlt
je
xchg
cltd
sub
jo
divb
lahf
imul
sub
insl
dec
mov
jmp
mov
mov
xor
push
shl
push
lahf
or
out
mov
cmc
shll
sbb
jne
jbe
jnp
dec
mov
imul
test
stos
jns
adc
push
sub
pop
sbb
jns
lods
fsub
sbb
inc
lods
push
inc
roll
adc
movsl
jno
int3
cld
out
in
dec
ja
ja
insl
dec
jae
mov
sarl
xchg
push
das
dec
imul
fwait
push
fwait
sbb
in
popa
ss
addb
mov
dec
loopne
push
mov
push
ds
das
cli
jo
call
cmp
cmc
enter
out
mov
and
out
mov
imul
mov
cmp
loopne
mov
or
sbb
mov
in
outsl
push
or
jb
mov
mov
insl
inc
cmc
lret
call
movsb
dec
je
sbb
mov
daa
mov
test
and
jno
push
xchg
and
pop
clc
movsb
inc
xlat
jg
loop
push
pop
mov
mov
lcall
aas
inc
xlat
shlb
sub
cmp
push
test
mov
out
mov
lods
ret
lahf
test
xor
mov
mov
in
fpatan
cwtl
call
jns
mov
ficompl
into
adc
push
sub
imul
xor
shrl
inc
adc
push
push
or
pop
sbb
xor
movsl
in
imull
arpl
fwait
popa
subb
leave
repz
decb
mov
adcb
test
inc
mov
cmpb
push
idiv
mov
sub
jb
movl
sti
pop
adc
pop
rorl
mov
push
mov
mov
push
pop
daa
insl
addb
xlat
mov
jb
inc
sbb
enter
jo
xchg
sub
cmpl
dec
cltd
jp
add
aad
lahf
jns
sbb
test
clc
js
push
pusha
mov
dec
movsl
push
enter
fidivl
das
fidivl
xchg
pop
lret
insl
out
xchg
mov
dec
xor
and
repz
jmp
jge
lret
adc
decb
pop
jo
adc
ja
jp
or
xchg
test
std
test
mov
fisttpll
fdivp
cld
add
push
fstpt
std
aas
mov
push
mov
fstpt
or
mov
iret
xor
test
frstor
scas
jp
rsm
dec
jmp
dec
xchg
dec
sbb
stc
ret
cwtl
xlat
test
cwtl
scas
es
pop
fwait
or
adc
pop
dec
dec
inc
push
mov
stos
adc
fstps
xchg
cmp
push
in
lds
cld
xor
arpl
fdiv
les
and
clc
add
push
and
vmovaps
jle
cmp
pop
push
or
dec
push
filds
sub
sbb
std
cmp
outsb
sbb
lods
mov
stos
rcl
adc
xchg
mov
sub
jne
loope
dec
cmp
hlt
inc
into
mov
and
enter
les
xor
cmp
mov
adc
nop
add
ja
or
jl
add
xor
call
mov
mov
scas
cmp
cmpsb
jne
adc
out
shrl
pop
sbb
jbe
xor
ret
ljmp
adc
hlt
cmp
aam
push
adc
add
loopne
out
dec
mov
mov
loope
mov
ss
jno
sbbl
ds
int3
ficoms
mov
inc
ljmp
aas
ljmp
or
inc
jg
aam
jmp
inc
out
int
mov
and
sub
pop
jl
sbb
inc
insb
in
insb
pop
paddd
mov
jmp
lea
fwait
sub
jmp
lods
mov
xchg
add
pusha
mov
mov
loop
fldl
pop
jl
push
in
add
ljmp
push
cltd
bound
dec
inc
push
fnstsw
mov
add
inc
and
add
icebp
fwait
das
mov
inc
sbb
sahf
push
ss
test
cmp
in
lods
ret
jle
push
mov
lcall
ja
das
mov
vphadduwd
shl
pop
cli
cmp
cmp
ret
loopne
mov
scas
adc
in
sub
orb
aad
test
cmpsl
js
pop
lret
fs
adc
loope
call
jns
mov
fcoms
movsl
jmp
dec
shrb
shrl
sub
mov
jl
fistpll
imul
push
mov
fdiv
test
inc
push
add
je
inc
or
mov
leave
mov
mov
sub
or
movsl
xor
call
aas
and
dec
ss
mov
mov
into
jo
mov
lea
lea
cld
test
mov
mov
cmp
imul
rcll
mov
jmp
int3
mov
nop
repnz
ss
dec
dec
jns
jecxz
leave
cs
sbb
ljmp
inc
jae
rcll
pop
cmp
sbb
adcl
xor
nop
mov
leave
jbe
mov
xor
sub
pusha
sub
cmp
scas
push
inc
pop
jo
add
push
insb
out
mov
aaa
xor
mov
adc
dec
adc
lods
rcll
add
popf
mov
cld
iret
xor
adc
call
adc
pop
sub
scas
inc
or
loop
repz
aaa
add
push
enter
fidivrs
daa
pop
pop
mov
fwait
addr16
test
cld
iret
imulb
popa
push
mov
aas
leave
sub
dec
sahf
arpl
sbb
sub
inc
insl
movups
sub
dec
lahf
mov
add
loop
sub
pop
in
pop
pop
xchg
leave
or
xor
pop
sbb
daa
lea
push
sbb
jl
dec
pop
popa
lock
jne
not
inc
ficoms
dec
sub
data16
mov
jl
or
shlb
incb
test
mov
adc
push
push
andb
nop
add
push
pushf
mov
mov
dec
xchg
push
insb
jle
jae
cmpsl
stos
fmull
mov
in
insb
pusha
aad
pop
and
loopne
pop
xor
mov
jns
xor
pop
push
jl
pop
dec
data16
and
stos
or
in
lahf
sub
lret
jle
add
mov
les
movsl
jl
int
pop
loope
pop
cwtl
add
call
cli
icebp
les
cmp
jl
lcall
add
stc
pop
dec
or
mov
outsb
inc
cmp
in
and
ss
stos
push
mov
in
or
dec
imul
pop
push
clc
add
mov
jle
shlb
mov
loopne
push
hlt
std
lret
scas
mov
cmc
pop
mov
shll
imul
xchg
into
pop
and
addr16
mov
jp
mov
sbb
sub
or
mov
iret
in
jae
fsubrl
add
or
xor
stos
jbe
test
xor
sti
movsl
fwait
jmp
push
or
jge
mov
pop
loop
add
ss
pop
arpl
adc
insl
cmpl
add
mov
les
sub
push
mov
mov
push
jl
jne
pop
sbb
lea
adc
jecxz
icebp
jb
xor
xor
mov
push
movsb
inc
xor
jle
jmp
les
add
rcll
pop
lods
jle
loopne
shl
fstpl
sahf
pop
mov
jle
movsb
push
mov
inc
ret
lods
int3
sub
cmpsl
out
imul
xorb
jl
add
cmc
cmpsb
pop
ljmp
repz
adc
stc
mov
aas
mov
xorl
inc
aaa
or
pop
pushl
jnp
and
icebp
sbb
mov
ljmp
mov
and
lea
or
mov
add
mov
in
pop
jge
ffreep
sbb
cmp
add
dec
mov
push
pusha
xor
daa
popf
or
jae
popa
iret
ljmp
cwtl
nop
sub
pop
jb
xchg
mov
push
out
cwtl
inc
int
popf
push
cmpsb
leave
call
popf
outsl
sbb
out
adc
addl
std
fldenv
flds
push
mov
lods
rcrb
jecxz
or
xchg
lods
mov
add
add
push
ret
negl
sbb
fmuls
sbb
or
lods
sub
jb
stc
pop
mov
cmp
adc
nop
push
xchg
pop
add
xchg
arpl
sub
or
cmp
into
xchg
outsl
xchg
or
mov
insl
push
repnz
shr
push
rcl
pop
mov
jb
pop
jp
mov
dec
scas
pop
pop
lret
in
jg
fsts
push
sahf
sub
push
mov
loope
add
pop
repz
imul
adc
loopne
mov
ja
sarl
mov
mov
lcall
sbb
icebp
add
mov
push
std
enter
cmp
pop
push
jmp
push
ret
mov
cld
sbb
imul
fistpll
pop
mov
pushf
paddsw
inc
or
mov
imul
cmc
add
add
imul
ss
pop
repz
add
stos
add
push
popl
es
cld
or
inc
pop
shrb
imul
mov
iret
inc
sub
insl
push
push
jno
ret
lcall
sarb
rcrb
aad
repz
xlat
lahf
pop
loopne
pushf
sbb
cmp
pop
dec
xor
jbe
call
add
jg
mov
sbb
mov
push
sub
out
push
stos
adc
mov
cmp
or
out
dec
js
sbb
adc
dec
push
pop
xlat
mov
jge
fmull
lahf
lahf
cltd
cmp
loop
lea
stos
pop
jne
stc
cmp
test
test
les
pop
mov
xchg
mov
jno
jbe
into
mov
xchg
pop
mov
xchg
pop
sbbb
pop
ss
into
je
cmc
mov
sbb
dec
data16
push
push
adc
ret
jg
pop
popa
mov
leave
sahf
out
xchg
jo
lods
mov
pop
lods
in
and
test
gs
mov
shrl
dec
xchg
lret
std
icebp
outsb
mov
mov
dec
or
pop
sbb
repz
or
and
xchg
jp
cwtl
outsb
mov
cltd
movsb
pop
es
push
and
jnp
test
leave
xchg
push
sti
jecxz
pop
pop
fdivs
xchg
cmp
mov
std
std
dec
pop
mov
push
push
add
add
movsl
xor
cmp
mov
push
push
jecxz
mov
pop
pop
mov
xchg
or
mov
pop
fwait
pop
inc
daa
sbb
lahf
inc
xchg
out
aam
pop
sub
dec
dec
cmpsb
mov
popf
xor
mov
mov
pusha
and
test
adc
ret
movsl
dec
arpl
leave
cmpsb
ds
dec
adc
dec
push
nopl
jmp
dec
enter
xchg
jns
pop
jns
loop
inc
xchg
xor
fnstenv
or
setp
shl
mov
in
outsb
adc
pop
test
pop
mov
and
or
xor
cmpsl
mov
stos
pop
inc
aaa
lahf
pop
jo
fldcw
aas
or
rep
pushf
aas
sbb
ljmp
cmpsb
lahf
shll
in
popa
dec
mov
jb
fwait
or
outsb
aaa
ss
add
fsubl
pop
jnp
pop
mov
dec
mov
aad
cmpsl
xchg
adc
push
lret
and
sub
xor
or
push
sub
xchg
lods
xchg
sar
xor
push
je,pt
or
fcmovnbe
cmpsb
in
call
out
fisttpl
and
clc
xchg
ljmp
lock
sbb
cmp
iret
add
scas
sub
insb
add
sub
mov
inc
add
movsl
imul
cld
daa
dec
inc
push
pop
adc
jmp
out
mov
sbb
pop
orb
pop
fmuls
stc
popf
jp
mov
fmuls
push
ret
xchg
data16
fwait
daa
push
sti
imul
popf
mov
inc
and
mov
rcr
in
lret
aaa
mov
jo
sub
out
dec
push
pop
jo
cltd
ja
mov
or
mov
cmp
stc
rorl
push
cmp
fs
add
mov
out
aaa
jg
mov
push
and
sbb
popf
js
das
or
das
shl
in
lock
jmp
xor
xor
push
mov
int
xchg
es
inc
lret
jl
ds
pop
mov
aam
popf
into
inc
xchg
mov
mov
ljmp
or
sub
outsb
adc
jp
das
rcl
test
lret
aad
xchg
pop
aaa
cmpsb
mov
sbb
loope
ret
outsl
sarb
dec
aas
mov
xorl
lret
sbb
fs
je
jbe
pushf
hlt
pop
imul
dec
sbb
cmpb
ljmp
js
cltd
mov
fnstsw
add
call
inc
mov
rclb
jg
fcoml
pop
push
jge
fsts
jo
sbb
rclb
cld
jae
inc
or
lret
add
push
jl
mov
cmp
dec
adc
pop
push
add
cmp
mov
cld
add
mov
cmpsb
adc
mov
into
std
les
inc
jb
push
add
and
sbb
add
pop
pushf
or
xor
mov
jp
xor
enter
lret
pop
mov
bound
packsswb
xor
jge
sbb
jmp
adc
mov
adc
int
cmp
rclb
mov
pop
jge
dec
ss
movsl
shrl
fs
push
ret
loope
dec
mov
mov
inc
xlat
sub
mov
inc
xor
test
loope
adc
push
scas
dec
cmp
inc
rolb
mov
cmp
inc
lcall
mov
adc
ljmp
shlb
inc
push
es
mov
stos
test
pop
dec
dec
inc
sarl
loope
addr16
out
pop
cld
mov
out
push
sbb
mov
lods
and
sub
stc
mov
lahf
cmp
pop
in
cmp
pop
sub
adc
inc
ds
inc
movsb
iret
ljmp
sub
push
lret
aas
xchg
orl
sbb
dec
mov
or
xor
pop
mov
test
mov
sub
cmpsl
mov
in
push
jo
mov
int
fdivrl
cmp
push
push
loope
iret
or
and
push
cltd
push
insl
jbe
inc
test
xor
pop
mov
add
cmp
xchg
adc
testb
push
adc
or
insb
call
std
insl
pop
std
faddl
mov
inc
push
in
jecxz
xorl
stc
mov
pop
lods
sub
outsb
aad
jae
es
sti
and
hlt
cmp
rolb
inc
push
xchg
cld
adc
mov
xorb
inc
xlat
shll
mov
scas
jecxz
sub
arpl
lods
cmp
sbb
lret
fmul
mov
cmp
cmp
arpl
lcall
enter
xor
sub
inc
mov
aam
ljmp
repnz
scas
adc
dec
ja
xor
bound
ss
lock
bound
dec
incl
xchg
or
cmp
cmp
pop
push
popf
add
mov
push
in
mov
pushf
or
and
or
or
enter
mov
cmp
and
mov
lds
fidivl
icebp
leave
mov
xor
hlt
xchg
or
mov
xor
mov
cmp
and
jbe
jo
xchg
rorl
out
xor
push
adcb
inc
add
mov
rorl
lods
mov
dec
pop
stc
iret
insb
xchg
cmp
lret
mov
jle
mov
xor
mov
jmp
clc
xchg
jp
cmpsl
push
gs
sbb
arpl
jnp
adc
jae
lods
icebp
arpl
push
cmp
enter
sahf
outsb
ss
sbb
outsl
out
sub
idiv
sti
add
call
data16
jge
in
movsl
cmp
sbb
js
mov
in
imul
cmp
clc
xor
or
gs
pushf
dec
rorb
push
mov
sbb
test
or
dec
mov
jae
enter
sbb
mov
in
mov
push
mov
std
data16
addr16
rorl
stc
rolb
xchg
mov
push
lcall
out
pop
mov
bound
call
aaa
pop
outsw
lcall
negl
repz
ret
icebp
aaa
mov
cmpsl
filds
or
out
xchg
jl
pop
shll
add
xor
inc
xchg
adc
scas
roll
fbstp
cmp
jne
cmpb
mov
arpl
outsb
loop
jne
clc
arpl
lods
add
mov
popf
xor
orb
add
movsl
nop
in
push
push
add
mov
cmp
xchg
push
or
dec
outsl
test
pusha
das
or
js
mov
fdivs
inc
testb
in
movsl
push
and
sbb
and
mov
insb
lods
adc
cmp
dec
add
or
insb
xchg
lock
insl
repnz
mov
or
sbb
pop
sub
jecxz
mov
dec
sbb
fmul
push
popa
mov
inc
mov
mov
xchg
adc
add
int
sbb
lods
jb
int3
outsb
push
pop
jl
cmp
dec
cltd
into
push
push
push
jmp
dec
sbb
aas
test
xor
movsb
data16
add
xor
hlt
inc
and
mov
leave
and
lods
pushf
bound
aam
inc
mov
rcl
enter
sbb
push
hlt
insb
push
cmpsl
cwtl
popa
push
ret
dec
sbb
ljmp
push
lret
and
stc
add
test
add
jmp
adc
sub
xor
testl
dec
stos
outsl
imul
int3
push
enter
push
setb
pop
bound
cmp
inc
ljmp
lea
jns
test
jno
or
cmp
bound
xchg
pop
stc
jge
pop
fisttpll
in
mov
xchg
jno
and
lcall
icebp
cmpsl
xor
cwtl
lcall
pop
fistps
fst
stos
push
cmp
add
xor
pop
push
jnp
mov
inc
push
mov
mov
je
add
mov
mov
lcall
fsub
mov
and
xchg
aas
ds
sahf
push
or
or
into
adc
jp
movsb
cmp
ja
xchg
xor
mov
adc
push
imul
xchg
add
sub
sub
mov
sub
and
push
or
jnp
daa
lret
jl
and
inc
shll
push
ss
test
js
ljmp
int
mov
mov
xchg
mov
sbb
xor
xchg
mov
cmpsl
jmp
mov
rcrb
fs
subl
xor
or
add
cli
xchg
outsb
ficoml
lret
lret
cli
adc
push
cs
xchg
stc
inc
push
xchg
jp
mov
sub
mov
enter
xchg
popf
or
push
mov
jne
mov
aam
mov
imul
pop
out
xor
es
inc
fildll
pop
add
mov
fisubs
push
xlat
ret
cmp
and
rolb
ds
mov
cwtl
pop
jp
adc
pop
jg
push
sbb
out
and
pop
inc
mov
sbb
fisubrl
xor
sub
cmpsb
xchg
push
movsl
xor
pop
into
in
and
sbb
pop
jnp
mov
xchg
push
pop
addr16
repnz
js
inc
ret
in
cmp
sub
pop
std
cmp
mov
fistps
mov
imul
jge
mov
outsl
popl
cmpsb
in
or
outsb
xchg
sbb
stc
or
cmpsb
xor
dec
sbb
ror
out
aas
inc
aam
ss
inc
icebp
push
addr16
sub
and
cmc
sbb
jns
enter
sub
jno
and
stos
adc
jnp
in
sbb
ljmp
add
xlat
cmc
and
mov
mov
xchg
mov
adc
pusha
and
fbld
mov
les
pusha
test
bound
xorb
xchg
stos
test
movntq
and
gs
jmp
popf
mov
jmp
je
xchg
ja
inc
xor
cbtw
js
and
jl
int3
ret
xor
adc
cmp
addr16
jno
movsl
test
cli
mov
sbb
jmp
xchg
sbb
adc
mov
movsb
loop
push
in
pop
xor
add
jns
test
pop
aas
ljmp
divb
cmp
out
aad
out
push
rolb
test
sub
cmp
lock
push
loopne
mov
jnp
ja
xorb
bound
sbbb
xchg
mov
aas
and
jl
or
adc
repz
push
sti
inc
sub
shlb
cltd
mov
aaa
xchg
dec
cmp
push
cmc
push
rcrl
ficomps
inc
dec
daa
lret
cmp
outsl
sarl
jp
push
ficompl
mov
hlt
out
aas
decb
jle
xchg
sahf
and
iret
pusha
push
fisubrl
xchg
mov
aad
stos
mov
cmp
daa
imul
clc
enter
sub
cltd
cwtl
repz
aam
push
adc
andb
jnp
mov
jnp
add
stos
sub
jbe
fs
and
jnp
mov
mov
rorb
enter
jmp
shlb
cmpb
ja
inc
push
jl
movsl
xchg
jbe
lret
jp
jns,pn
sarl
xchg
pop
pop
dec
push
cmp
popa
push
add
nop
dec
int3
fcomps
sbb
mov
imul
jmp
xchg
sub
enter
mov
xchg
insb
fisttps
xchg
lock
mov
loopne
xchg
ss
and
mov
cs
pop
sub
dec
pop
jg
jnp
jecxz
and
lret
push
movsb
out
cmc
jno
adc
imul
pop
les
aas
sbb
add
cwtl
mov
sbb
test
push
xor
pushf
cmp
stos
xchg
xchg
and
mov
sub
mov
mov
mov
in
stc
and
xchg
ss
cmp
scas
fwait
push
loope
cmp
lret
cltd
stc
fiadds
dec
sbb
nop
cltd
xor
fadds
mov
and
adc
or
and
icebp
movsl
mov
frstor
inc
push
outsl
or
mov
adc
mov
or
mov
mov
and
jnp
or
xor
mov
mov
add
fldl
rcr
xor
cs
es
sub
das
xor
push
cmp
dec
pop
mov
or
std
pop
in
fldcw
mov
jnp
data16
cltd
nop
je
adc
jnp
jle
lcall
fistpl
inc
cli
dec
clc
push
cwtl
jne
inc
xchg
pushf
xchg
ljmp
jmp
aad
sbb
loope
push
int
int
add
ret
jns
jg
sub
mov
cmp
cmp
sub
jge
outsb
out
in
xchg
je
rcrb
xor
xor
fnstsw
pop
jp
ja
das
mov
sub
les
lods
sahf
sarb
sbb
sub
xor
sarl
xchg
cli
sbb
flds
xor
sahf
sti
out
out
out
cmp
into
pop
lods
add
rclb
mov
das
int3
mov
add
scas
fldl
loopne
in
lahf
mov
mov
lods
sahf
dec
mov
or
xor
lret
ds
sub
xor
sub
fistpll
pop
adc
outsl
add
pop
jl
fwait
mov
mov
ds
es
testl
xor
aam
ret
scas
inc
jno
push
pop
cmp
popa
mov
adc
mov
cmp
scas
lahf
xor
ret
mov
popf
std
addb
in
or
insb
ljmp
add
pop
and
mov
dec
inc
loopne
push
daa
mov
dec
and
out
in
pop
mov
and
cmpsb
leave
push
or
push
mov
pop
cmp
mov
cmp
stc
ljmp
mov
pop
in
arpl
mov
and
lahf
addr16
shrl
lret
push
cmp
jl
mov
inc
sub
jp
testl
jno
pop
ds
fsubrs
inc
cmp
lock
jle
add
test
cmpl
xor
or
and
pop
adc
mov
incl
mov
mov
inc
add
pop
inc
add
hlt
popa
sti
adc
pminsw
sbb
stos
pop
pop
adc
mov
cwtl
js
loope
and
or
xchg
mov
push
in
in
mov
fimull
add
fwait
xchg
or
incb
jg
mov
les
jo
push
fdivrs
in
sbb
hlt
mov
adc
frstor
cli
lret
xor
call
lea
jb
cmpsl
or
andb
jbe
sti
jb
mov
jo
pop
subl
bound
scas
jmp
and
scas
push
enter
cmp
test
xor
cmp
lcall
nop
das
jp
addl
jge
aam
lret
pop
mov
sub
jno
stc
push
je
mov
dec
sub
dec
add
sub
mov
in
and
test
jne
test
inc
xchg
dec
jle
lret
test
orl
push
stos
push
mov
out
sbb
and
out
mov
xor
jl
mov
leave
out
outsb
or
stos
push
sbb
xorl
xor
movsb
push
xchg
sbb
nop
inc
mov
cld
lret
xchg
idiv
inc
sub
mov
ror
pop
cmp
bound
repz
mov
ret
adc
scas
add
fadd
mov
push
daa
out
inc
fcmovne
jns
lahf
mov
outsb
mov
sbb
outsl
mov
and
jns
insl
repnz
scas
mov
enter
push
xchg
mov
xor
jmp
add
xchg
ljmp
dec
push
xor
leave
push
push
jle
mov
pop
or
cwtl
inc
nop
std
xchg
aas
dec
jmp
sbb
cmp
stos
cmc
sub
stos
out
push
fcmovnb
dec
pop
inc
mov
jmp
jl
bswap
push
add
push
jle
adcb
and
fdivrs
mov
or
std
mov
jb
push
inc
cmp
test
mov
enter
xor
inc
decl
jecxz
call
out
mov
ja
clc
pop
lahf
jle
orb
xor
and
mov
mov
sbb
movsb
pusha
int3
pop
lahf
mov
shl
add
jb
enter
sbb
or
pop
stc
pop
add
mov
mov
push
mov
dec
std
das
rcrb
adc
pop
dec
leave
cmpsb
repz
inc
jecxz
lock
dec
push
loope
arpl
xchg
adc
imull
stc
xor
xchg
call
dec
lock
push
lods
pop
aaa
adc
pop
rorl
js
stos
incl
sub
xchg
push
in
repz
sti
sub
out
dec
adc
shlb
fwait
inc
push
scas
and
clc
pop
xor
leave
out
push
add
lea
or
bound
stc
xchg
stos
scas
hlt
fwait
mov
je
jge
add
lahf
push
dec
mov
xchg
and
add
jp
popf
mov
ds
flds
stos
and
std
lcall
fucom
out
aam
and
lret
in
adc
xchg
repnz
movswl
pop
add
ret
sub
mov
mov
or
push
testl
adc
int
mov
in
inc
cmp
loope
rcrb
je
leave
outsl
popl
adc
mov
and
lds
inc
xchg
jbe
dec
xchg
and
cmp
inc
cs
xchg
imul
cmp
or
iret
pop
or
lods
dec
insl
push
cmpsb
push
xor
lahf
stos
cmpsb
mov
je
jge
cmp
pop
cs
mov
xchg
jmp
sub
jno
jae
push
aas
ret
and
test
mov
mov
cmc
popl
sbb
sahf
adc
add
rolb
cmc
push
mov
dec
push
fnstcw
leave
add
out
jmp
push
push
xor
jno
mov
test
es
imul
in
cmp
xor
mov
outsl
ds
ret
pop
sub
inc
int
adc
insb
test
pop
pop
push
fwait
cltd
or
cmpb
call
push
and
fists
rorl
mov
in
sahf
xor
mov
mov
neg
aad
mov
loopne
dec
dec
daa
jp
testl
jb
popf
push
frstor
sbb
mov
ja
test
lret
push
repnz
push
mov
lds
cmp
and
and
push
les
movsb
mov
rcrl
arpl
cltd
mov
outsl
insl
shl
sbb
or
push
pop
sahf
cmp
xor
repnz
popf
sti
and
sahf
test
jne
loopne
pop
aad
inc
dec
out
movsl
ja
pop
jb
shlb
mov
xchg
mov
xor
sahf
jbe
jae
adc
xchg
and
adc
ljmp
shlb
mov
dec
add
ss
jle
push
adc
and
popf
or
cmc
dec
outsb
repnz
je
nop
cmp
dec
dec
mov
push
hlt
dec
lcall
or
icebp
jg
sbb
or
adc
arpl
xor
push
add
std
adc
int3
sub
push
push
or
int
aas
pushl
stc
cmc
iret
adc
jg
aaa
mov
aaa
dec
test
jmp
inc
cmovl
pusha
das
push
inc
mov
cltd
sti
sahf
xor
pop
in
adc
cmp
mov
por
dec
lock
sub
aaa
fwait
ljmp
pop
cltd
in
xchg
xchg
or
daa
xchg
test
xchg
sub
movsl
push
mov
lahf
mov
stc
fs
and
enter
out
pop
inc
scas
fldcw
and
idivb
out
xlat
jmp
mov
mov
jne
mov
je
push
js
ret
imul
add
test
xor
cmpsl
in
imul
enter
mov
ljmp
int
orb
nop
test
int
in
jno
xchg
mov
std
scas
sub
lret
inc
daa
mov
ret
fildll
adc
cltd
jle
jno
aam
sub
add
insb
pop
lahf
aaa
ja
pop
add
mov
dec
cmp
roll
cmp
int3
push
or
dec
in
movsl
scas
push
cmp
jg
xchg
push
mov
jnp
xchg
pop
cli
insb
lea
jo
jl
lahf
icebp
sbb
sbb
cmp
fs
push
out
jae,pn
jmp
das
ret
jecxz
aaa
mov
add
xchg
xchg
and
add
cmpsl
lea
xchg
fsubs
or
fldt
or
scas
scas
out
cmpsb
je
xor
jp
xchg
or
dec
cmpsl
push
sub
icebp
jb
imul
dec
xor
push
ja
aam
std
lds
adcl
jno
loopne
cwtl
into
pop
xor
jbe
int3
dec
cltd
sub
mov
xor
movq
bound
pop
mov
shrb
rcll
mov
insb
adc
xchg
loope
or
mov
push
in
iret
add
mov
mov
fldt
xor
pushl
jl
lods
jns
sbb
les
xchg
or
jl
adc
dec
xchg
lods
inc
insb
push
push
mov
mov
rclb
shll
fldcw
movsl
mov
je
stos
cmpsl
jns
xchg
call
xchg
xchg
jp
or
roll
mov
adc
xchg
movsb
sub
jns
enter
push
mov
test
push
jo
in
das
adc
fcoms
mov
or
scas
icebp
lahf
jnp
int
or
cmp
or
out
cmp
xlat
lock
adc
pop
stos
stos
les
or
mov
mov
insl
push
adc
xor
xchg
xor
popf
pop
cmpsl
pop
popa
leave
or
and
xor
jae
xor
inc
adc
cmp
mov
rclb
xor
cmp
xchg
cmp
mov
xlat
jmp
pop
dec
add
xlat
dec
lret
mov
inc
test
fbstp
cld
pop
lea
js
add
and
icebp
cmpsb
bound
inc
xor
scas
jne
ds
cmp
mov
inc
xlat
xor
adc
enter
sub
jns
inc
je
pop
adc
mov
sbbl
xor
inc
sbb
out
dec
lock
sub
fidivrl
xor
inc
inc
xchg
popf
add
cwtl
ljmp
sbb
rcr
push
and
rcrl
dec
xor
dec
cmp
push
cs
jo
xchg
addb
cmc
or
in
push
cmp
rcll
mov
sub
adc
xchg
out
cmp
test
insl
adc
bound
lods
mov
and
xor
adc
inc
bound
int
int3
inc
ja
ss
mov
scas
xchg
ret
dec
pop
ret
mov
aas
out
lea
mov
leave
imul
cld
inc
jbe
xor
ret
sub
cmp
addr16
adc
addb
dec
jne
adc
adc
loopne
sbb
mov
push
push
mov
mov
push
rcrb
sub
xchg
xchg
pop
xchg
ficoms
test
mov
push
fcmovnbe
andl
aam
and
xor
jnp
hlt
sbb
sbb
jle
xchg
sub
inc
xor
lock
in
pop
and
pop
inc
pop
pop
mov
iret
mov
mov
jbe
jnp
push
in
mov
in
popa
mov
ljmp
dec
add
out
jne
cmp
out
cmp
or
pushf
sub
int
or
adcb
cmp
fidivrs
mov
in
adc
rcrb
leave
xchg
push
pop
aas
leave
inc
fwait
mov
xor
insb
call
sbb
ljmp
lahf
push
inc
jmp
movsl
rorl
pop
out
sarb
js
jp
ljmp
incb
dec
cmp
pop
aad
and
mov
push
cmp
int
adc
mov
adc
sub
xchg
arpl
aaa
movsl
sarb
and
call
sahf
lcall
bound
mov
fistps
ja
sbb
outsl
das
jge
mov
sub
out
sti
dec
jne
test
int
mov
sbbl
push
out
cwtl
mov
push
mov
dec
sub
rcl
xchg
push
adc
pop
sub
and
mov
fdivrl
movsb
shrl
adc
xchg
cmpsb
mov
mov
cmc
es
xor
gs
add
cmp
xchg
xchg
js
push
stos
scas
ror
les
les
pop
in
je
in
jle
mov
pop
ljmp
xlat
ret
or
enter
xor
push
adcb
mov
enter
push
xchg
into
addr16
movsl
xlat
aad
movsl
dec
cwtl
mov
out
dec
push
push
loope
and
scas
jmp
push
popl
stos
in
into
scas
hlt
jg
push
dec
inc
sahf
cmpsb
cwtl
jmp
test
sub
inc
test
int
dec
outsb
mull
add
loop
adc
add
rorb
sub
lret
into
lods
add
std
lods
push
pop
pop
add
inc
fiaddl
insb
in
adc
shll
std
xor
xchg
xchg
ss
shlb
mov
mov
add
sahf
jnp
sub
insw
movsl
out
bound
ret
movsl
cmc
into
mov
mov
add
cmpsl
push
pop
js
push
jg
mov
loop
cli
xchg
pop
add
outsl
call
mov
mov
push
leave
fisubrs
cmp
pop
push
fcmovu
nop
add
lea
push
shlb
pop
pop
scas
out
fidivs
push
xchg
ljmp
sbb
mov
dec
mov
mov
push
mov
aad
pop
sub
cli
repz
dec
sbb
fs
push
lock
inc
fildl
cld
sub
arpl
out
aas
jo
mov
mov
es
push
mov
je
scas
mov
aad
sbb
lret
das
inc
mov
sub
ficompl
mov
insb
aad
jge
rcrb
test
mov
adcb
mov
fadds
mov
scas
in
int
pop
imul
cmp
jecxz
into
pop
or
mov
mov
add
cs
or
scas
pushf
leave
adc
std
dec
iret
or
push
push
test
lea
push
xchg
sarb
cs
pop
xchg
add
mov
mov
test
push
adc
dec
adc
sbb
jp
bound
add
nop
mov
sbb
jbe
add
pushf
lods
repz
mov
xchg
loop
aas
divb
out
stos
inc
mov
jno
dec
cmpb
sbb
scas
in
push
inc
xchg
or
dec
rol
jb
pop
repz
test
iret
add
sbb
jo
adc
je
std
aad
lds
sti
stos
lods
enter
pop
mov
cmpl
loope
test
push
mov
push
stc
sbb
rorb
mov
pop
lea
and
jg
mov
jecxz
and
ja
pop
mov
xchg
cs
arpl
or
mov
lahf
sbb
das
fisttpl
test
adc
jge
test
add
or
shlb
stos
jge
sbb
lods
add
mov
incb
les
in
adcl
sbb
mov
adc
add
add
rcrl
dec
pop
outsb
shll
ret
fadds
test
movsl
adc
xor
xor
jp
sbb
je
mov
mov
cmp
imul
sbb
dec
sbb
dec
xchg
std
mov
clc
ja
out
test
lock
mov
xor
nop
iret
mov
lock
add
out
sbb
jmp
repz
fisttps
idiv
lds
and
add
sub
ja
lret
sub
daa
inc
push
call
sub
fisubrs
mov
sbb
and
fdivl
or
push
rclb
shrb
sti
insb
jo
mov
or
jmp
cmp
test
aas
jo
sub
pop
and
es
pop
bound
ss
icebp
filds
mov
jne
xor
cmp
pop
mov
lret
sti
test
mov
cmpsl
js
push
ds
loopne
mov
dec
adc
xor
repnz
push
in
push
fnstcw
sbb
add
int
add
pop
sarb
aam
cltd
loope
cmpsb
xchg
xor
nop
mov
cmp
sahf
idivl
std
mov
scas
dec
mov
adc
inc
add
shlb
iret
xchg
inc
lods
lret
sbb
push
adc
mov
inc
ret
out
mov
scas
jmp
cs
arpl
inc
fiadds
orl
mov
sub
cltd
insb
fwait
jns
scas
mov
pop
lret
and
rolb
icebp
mov
bound
fwait
jnp
ljmp
sub
mov
in
xor
clc
test
sbb
push
dec
pop
mov
jge
sub
lahf
inc
scas
inc
lods
popa
pop
std
push
mov
mov
push
xchg
xor
lods
mov
mov
int
icebp
in
jmp
dec
repnz
lret
sti
addr16
adc
mov
pop
sub
ljmp
out
xlat
push
xchg
xlat
lock
fstl
aad
mov
adc
xchg
jae
cmp
xchg
xchg
cmp
mov
dec
jmp
je
icebp
mov
xchg
inc
cmp
ds
and
inc
xor
out
loop
lret
inc
out
les
pop
sub
fs
gs
ss
xlat
mov
int
cmpsb
in
add
mov
pop
into
jns
cwtl
xlat
call
and
ljmp
iret
cld
push
data16
sbb
sbb
out
aaa
mov
hlt
pop
fwait
es
loopne
add
mov
mov
xor
or
sti
xlat
jge
insl
jmp
cmp
in
adc
aas
push
leave
cmp
nop
push
jno
or
or
lea
aam
cmpsl
movsl
imul
sbb
aaa
add
gs
ret
cmpsl
mov
xchg
xchg
push
mov
lret
sub
loop
clc
push
in
cs
mov
aad
inc
xchg
jle
lods
inc
xorb
jb
mov
add
not
clc
mov
cltd
jg
sub
inc
loop
popa
jp
icebp
inc
imul
lret
jo
dec
add
sbb
neg
lret
std
cld
aad
lahf
adc
shl
insl
ror
lock
es
push
dec
dec
inc
xor
fwait
movsb
mov
aad
sbbb
cli
jbe
or
and
mov
cmpsb
daa
cmp
jns
lock
inc
lret
inc
cmpl
add
fidivl
bnd
or
fcoml
and
stos
jg
pop
jg
pop
pop
xchg
mov
jp
sub
ds
rclb
pop
xor
scas
fcmovu
xchg
lahf
imul
insb
or
jno
lcall
sar
jns
lcall
mov
mov
mov
stos
jecxz
rclb
enter
test
pop
js
cmpsb
repz
insb
xor
xchg
mov
sub
mov
push
cltd
fisttpl
loopne
pop
inc
cltd
ja
push
adc
fists
or
jnp
jno
in
out
scas
xchg
push
add
fadd
pop
cmc
sub
ds
fiaddl
test
dec
test
sub
mov
xchg
xchg
adc
jnp
roll
repnz
int3
movsb
cmpsl
mov
lret
lds
mov
out
or
inc
xchg
lret
incl
mov
arpl
ror
popa
inc
loop
and
out
cmp
loope
push
dec
pop
ffree
imul
je
and
and
fnstsw
cltd
xor
mov
fists
sarb
xchg
add
faddl
clc
adc
fiadds
dec
bound
or
push
pop
jns
dec
inc
cs
notl
sahf
cwtl
outsb
test
cld
jge
jno
xor
ljmp
icebp
mov
das
in
jecxz
sbb
arpl
shl
pop
test
outsl
xchg
fwait
jb
add
std
dec
lcall
or
je
into
enter
mov
int3
lcall
jb
cmpsl
les
aas
stos
cmp
test
sub
dec
mov
sahf
push
stos
adc
sti
ja
aad
faddl
popa
pop
cmpsl
in
push
insl
dec
push
cmp
jae
out
jno
jmp
dec
lahf
jp
push
mov
and
add
xchg
ljmp
cmpsb
pop
mov
mov
shll
pop
xor
test
mov
lods
or
mov
add
mov
pop
bound
pop
dec
decl
dec
inc
pop
xor
push
addr16
aam
pop
add
adc
nop
bound
pop
mov
and
pop
and
sbb
jbe
fldl
clc
cmc
int3
sbb
int
cmpsl
push
cmovl
fstpl
cmpsb
jg
repnz
push
dec
push
hlt
cmp
jmp
mov
inc
outsb
add
mov
push
cli
jb
out
mov
inc
out
test
lock
cld
rorl
adc
xlat
mov
mov
jbe
mov
orb
pop
call
sub
xlat
dec
insl
and
das
ret
punpckldq
sbb
mov
and
inc
out
pop
or
adc
fstps
mov
fnstsw
push
mov
add
jns
mov
mov
xchg
add
or
cmp
mov
mov
rorl
sbb
mov
sub
dec
push
in
xchg
leave
sbb
push
mov
jno
ret
cmp
inc
test
or
pop
les
es
ret
or
scas
push
add
bound
push
jae
test
jp
mov
popa
nop
cmpsb
push
add
xor
in
filds
rcrl
mov
test
mov
mov
imul
add
sahf
jns
pushl
jno
imul
insl
enter
push
pop
adc
ret
mov
and
out
push
rol
shrb
mov
popa
pop
push
adc
jg
or
ret
mov
ja
dec
mov
xor
add
dec
mov
add
sbb
sub
andps
pusha
jl
dec
jp
cmp
sub
test
filds
or
cltd
ds
and
mov
mov
outsl
test
or
fbstp
jae
pop
add
stc
nop
add
mov
imul
and
jl
mov
test
push
jl
and
arpl
movsl
push
pop
rorl
out
adc
sbbl
cmp
mov
cmp
outsl
cmc
repnz
xor
sub
popfw
cs
mov
dec
push
enter
inc
mov
push
roll
mov
fildll
jnp
sub
pop
or
and
pop
and
cmp
mov
lods
inc
inc
and
mov
les
add
in
inc
and
cwtl
cs
sub
arpl
pop
sahf
mov
stos
adc
sub
imul
dec
xor
push
dec
cltd
add
jmp
fwait
xor
inc
in
jmp
cmp
inc
orl
and
dec
fiaddl
cmp
adc
stos
iret
dec
cmpsl
faddl
jg
xlat
iret
mov
lret
adc
cmp
fcmovne
mov
or
mov
push
clc
cmp
js
dec
mov
inc
sbb
add
leave
push
inc
jns
xchg
xchg
pushf
out
jae
jg
cmc
xchg
lods
adc
push
int
ret
mov
mov
leave
in
int3
push
mov
leave
test
shl
pop
xchg
test
shll
or
mov
imul
jecxz
ja
std
pop
scas
cmp
xor
pop
fucomi
in
jg
cmpsb
loopne
mov
sahf
xchg
cmp
and
pushl
xor
outsb
add
sbb
stos
aam
shrb
push
ret
push
outsb
ljmp
jmp
pusha
fwait
xorl
and
pop
xchg
adc
shl
loop
aas
mov
push
sub
fwait
cld
sub
stos
xor
pop
or
call
push
xchg
pusha
xchg
daa
in
jae
sarb
loopne
jns
pop
movb
xor
sbbb
and
dec
in
xorb
push
call
xor
lock
les
xchg
addr16
insb
xor
pop
les
mov
rep
dec
push
pop
das
fadds
xor
and
adc
std
rol
das
pop
or
bound
or
xchg
xchg
push
stos
jl
aam
jnp
sbb
stc
imulb
pop
mov
cwtl
push
cmpsl
add
xor
push
pop
insb
gs
lods
lea
xor
inc
xacquire
xchg
lds
or
xchg
mov
push
sub
xor
xchg
loop
lea
dec
sbb
mov
fs
or
mov
xchg
divb
hlt
dec
out
mov
loopne
js
subl
pop
xchg
jne
cmp
mov
push
lret
mov
movsb
sub
mov
mov
mov
adc
testb
or
mov
and
sti
sbb
mov
mov
xchg
lcall
lahf
lcall
xor
push
push
xchg
cmp
aaa
inc
dec
iret
in
lods
sub
fsub
in
push
addr16
push
out
inc
push
stos
addb
cmpsb
fidivrs
cmpsl
hlt
fisubl
lods
push
subb
rcrl
mov
inc
xchg
add
xor
mov
sbb
lahf
jo
bound
fidivrl
lahf
js
sbb
jno
or
pop
inc
xor
xchg
add
mov
adc
adc
test
push
cmp
inc
stc
add
stc
icebp
xor
add
xor
lahf
aaa
jmp
sbb
adc
js
sub
mov
xchg
cmp
mov
lret
lods
ret
out
loop,pt
jne
pop
pop
into
cmc
lret
xchg
push
mov
xor
iret
daa
rolb
inc
cmpsl
cmp
stc
stos
pop
int3
cmpsb
jnp
inc
and
cmpsb
cwtl
xor
push
mov
rcl
dec
mov
aas
or
push
push
mov
or
add
mov
incb
int
scas
cmp
lods
imull
jp
shll
test
mov
fcmovu
mov
out
mov
jg
fldenv
adc
jb
inc
je
or
jno
add
shlb
rcpps
add
movsl
incl
push
shll
mov
addr16
cli
push
pusha
fldl
push
xor
insb
das
idivl
aad
cmp
repnz
stos
or
or
mov
outsb
push
nop
jge
clc
hlt
shll
jg
adc
insb
xor
inc
test
and
fs
sub
mov
dec
lods
xchg
pop
aas
mov
cmp
mov
jnp
sub
inc
mov
test
call
push
inc
into
in
fwait
pushf
pop
push
mov
cmpsl
jmp
lock
cmp
fwait
mov
leave
or
bswap
fstl
mov
inc
pop
jmpw
sbb
out
inc
or
sub
scas
and
jb
enter
xchg
add
das
inc
jno
pop
pushf
pop
or
loope
adc
or
cmp
sub
pushf
inc
jnp
xor
pop
push
and
das
movzbl
push
sub
inc
movsl
adc
insb
test
xor
or
icebp
jmp
imul
cmp
add
inc
pop
out
movsb
cmp
mov
dec
push
lods
mov
mov
pop
xchg
add
pop
stc
icebp
xlat
roll
add
je
lret
arpl
and
and
sub
fwait
lds
rorl
pop
scas
xor
sbb
jle
inc
notb
andl
ds
iret
gs
unpckhps
cmp
jae
fsubrp
push
xor
ds
int3
jo
lret
sti
test
sarb
data16
push
adc
jecxz
cmpsl
scas
lods
inc
fstpl
das
xor
imul
hlt
sub
dec
lret
stos
jne
pushf
in
jne
sbb
and
xchg
pop
adc
cmp
sbb
int3
inc
pop
movsl
popf
inc
mov
fsts
cmpsb
mov
pop
arpl
negb
sahf
insb
mov
mov
loopne
mov
xchg
mov
jl,pt
add
pop
sti
scas
or
mov
xchg
sub
in
loop
test
jo
aam
and
lods
jne
push
sbb
jb
inc
xchg
das
imul
imul
pushf
into
xchg
lcall
loope
xchg
sbb
cmpsl
mov
out
cltd
dec
pushf
arpl
lods
mov
les
mov
inc
pusha
fdiv
imulb
dec
lret
imul
fs
xchg
ljmp
je
subl
sub
orb
pop
in
pop
xchg
test
movsl
xlat
jb
fidivrl
adc
jno
fdivrl
out
and
pop
mov
popa
or
mov
std
or
scas
push
das
in
lret
ret
mov
and
je
in
js
mov
xchg
pop
popf
out
pop
pop
xchg
cmp
sbb
seta
iret
add
inc
pusha
aas
cmpsb
ja
mov
mov
stos
xor
pop
call
stos
mov
mul
sbb
adc
adc
cmp
in
jb
packssdw
add
push
sbb
bndldx
in
mov
mov
lds
inc
aaa
or
mov
daa
pop
popf
jecxz
movsb
iret
call
jno
and
lods
mov
lea
inc
repz
js
mov
rcrb
xor
dec
lret
jae
movsl
orb
and
mov
cmp
adc
call
xor
call
mov
dec
into
lock
nop
mov
add
pop
loope
xor
es
xor
mov
leave
lea
test
and
inc
int
add
cmp
cli
pop
insl
xor
test
sub
dec
push
mov
mov
pop
fimull
ja
stos
inc
xor
jmp
cwtl
mov
mov
je
js
cli
xchg
sbb
xchg
push
push
lds
mov
sub
mov
dec
dec
jae
rcl
inc
dec
js
adc
daa
pop
xchg
and
dec
xchg
jb
sub
pop
sub
adc
xlat
stos
lea
pop
xchg
imul
loope
or
sbb
or
cmp
push
cmp
sub
or
aam
shrl
movaps
insl
cmpsb
lea
hlt
in
popf
inc
pop
scas
sbb
rcl
pusha
push
cli
icebp
xor
mov
leave
repnz
jne
pop
nop
pusha
stos
mov
call
sahf
sbb
mov
cwtl
mov
std
jmp
mov
out
test
mull
push
fsts
in
std
mov
ss
and
pop
inc
dec
bound
outsb
lods
les
lret
ljmp
lea
stc
push
imul
call
int
and
mov
stc
lret
sub
mov
dec
shll
inc
or
hlt
mov
outsb
nop
xchg
std
or
push
orb
dec
add
xor
or
cmp
hlt
js
mov
xor
ss
xor
jmp
rolb
and
out
pop
loop
add
dec
les
sub
xchg
pop
daa
in
out
rorb
leave
push
aad
sti
daa
imul
dec
out
insl
add
cmp
mov
xchg
stos
mov
aam
cmpsl
xchg
mov
mov
jge
pop
loop
sbb
jne
adcb
scas
into
jl
jne
clc
pop
fwait
inc
sub
pop
xor
pop
dec
cmpsb
imul
shl
lock
dec
mov
and
fwait
lds
fwait
cmp
push
xlat
adc
sbb
jo
iret
adc
cmp
mov
mov
rclb
fstps
test
test
dec
insb
sbb
dec
mov
lret
mov
and
scas
in
pop
jge
ds
sub
lahf
dec
dec
test
fisttpll
add
adc
fcomps
pushf
xchg
shl
into
mov
movsb
mov
cmc
pop
mov
pop
push
or
inc
cmp
repz
insl
or
mov
loope
add
int
test
dec
inc
cmp
test
sub
or
pop
dec
loop
xor
in
scas
lret
jge
xor
nop
pop
pushf
mov
mov
lods
sub
int
or
adc
xchg
sbb
je
sbb
lock
loop
mov
jb
filds
push
jae
xlat
jmp
out
mov
mov
cmp
sarb
cld
adc
xor
mov
sub
ret
pop
or
imul
push
jle
cmp
lret
jg
movsb
in
cmp
loope
enter
sti
push
rclb
xchg
dec
or
int3
arpl
mov
mov
adc
insl
lods
inc
mov
aad
lahf
jp
dec
mulb
stc
mov
cwtl
ljmp
ret
out
incl
das
jo
lret
jecxz
pop
loop
xor
pop
xor
adcb
dec
sti
out
xchg
mov
push
dec
mov
lea
jns
ja
cmp
rcl
fisttpll
jmp
jb
pushf
dec
mov
sahf
int3
cmp
loop
cmp
test
js
cmp
xor
arpl
int
mov
sbb
icebp
clc
fcomip
or
fbstp
mov
testb
push
sarl
cmp
test
repnz
mov
adc
mov
adc
mov
data16
inc
xchg
movsl
mov
and
adc
sub
stos
jb
mov
adc
pop
cmp
jecxz
pop
xor
and
inc
mov
ss
lcall
and
adc
jne
adc
cmp
mov
push
jbe
cmp
xor
out
cwtl
sahf
dec
imul
sbb
cltd
jae
lds
sub
or
sub
dec
int3
adc
pop
data16
fisubrs
sub
fst
add
add
or
rcll
push
or
data16
or
mov
out
xchg
push
loop
mov
ds
jnp
jns
and
inc
in
xor
repnz
imul
sti
push
jb
iret
in
das
in
movsb
pusha
mov
jne
divl
cmpsl
inc
mov
gs
test
dec
mov
sbb
push
sbb
and
sbb
xchg
xor
push
add
inc
mov
and
scas
jbe
ja
mov
and
scas
jge
push
and
shrl
ss
sub
push
das
jp
sbb
adc
sub
add
push
xchg
cltd
xchg
movb
ja
mov
xor
bound
out
mov
insb
idivl
aaa
and
idivb
popa
jmp
insb
add
mov
inc
add
dec
mov
cwtl
sahf
xchg
sub
iret
or
hlt
push
add
sarb
jo
pop
pop
movsl
emms
mov
mov
cwtl
scas
xlat
loop
int3
or
sbb
pop
lret
jb
cmp
sbb
jno
fmul
mov
lcall
or
mov
adc
xchg
es
mov
push
pop
inc
lret
push
add
ds
sar
sbb
cmp
inc
stos
pop
cmpsb
out
push
pop
sub
pop
push
sbbb
mov
and
pop
in
sub
loop
cmp
fiaddl
push
mov
inc
xor
or
in
sahf
dec
pop
ja
cwtl
popf
roll
dec
shrl
outsb
or
ss
adc
cmp
decl
out
sbb
or
add
add
insb
mov
cmp
push
movsl
sbb
ret
or
sarl
inc
out
mov
xor
jecxz
push
or
xor
repz
mov
lods
jl
push
rclb
mov
sbb
aam
out
loope
fs
push
pop
dec
pushf
arpl
jo
pop
loopne
orb
add
jg
add
fldl
add
rolb
xchg
repz
ja
xchg
lock
push
pop
movsb
stos
mov
push
bound
add
ret
xor
jmp
lret
inc
dec
ret
inc
daa
dec
imul
hlt
sbbl
push
and
cld
xchg
pop
aad
test
arpl
or
xor
mov
xchg
out
push
add
loop
lret
andl
lock
adc
das
int3
pop
out
jle
cld
cmpl
nop
mov
push
out
repnz
movsl
nop
mov
cmp
lds
rcrb
and
test
dec
fsubl
popa
mov
add
rorl
call
dec
hlt
and
xor
push
jo
jle
and
mov
movsl
xchg
popa
xor
and
popa
incb
xor
jle,pt
sub
imull
or
xchg
rcrb
pop
mov
leave
dec
inc
cmp
add
mov
xor
push
pop
mov
xchg
les
jmp
fistps
iret
mov
inc
js
dec
fstps
loop
test
xchg
and
repz
hlt
dec
sti
jbe
lock
mov
leave
cs
mov
adc
rcrb
scas
sub
push
mull
mov
shr
and
bound
lods
xor
or
test
imul
ficoml
lret
pop
adc
mov
rclb
pop
inc
data16
ja
push
push
shrb
imull
call
das
dec
imul
push
pop
shl
pop
fimull
mov
clc
jne
ficompl
nop
pop
ss
add
jmp
lods
fcmovnbe
outsb
and
mov
mov
mov
push
cs
arpl
stc
jno
imul
sbb
mov
inc
push
gs
xor
cli
push
inc
xchg
jg
rcrb
push
mov
pop
test
das
pop
pop
das
push
out
cld
lods
add
call
rcll
ss
js
mov
js
pop
out
mov
popf
cmc
scas
dec
push
test
out
in
iret
or
jg
xor
adc
lret
mov
jnp
aas
sub
mov
mov
stos
xchg
aad
cmp
xor
sub
sub
mov
mov
inc
add
dec
mov
mov
mov
iret
jns
xchg
dec
cmp
iret
pop
jnp
or
mov
cmp
sub
sbb
lea
sub
shll
adc
and
push
mov
mov
outsl
xor
mov
cmp
pop
or
adc
or
xchg
mov
test
push
jns
xor
dec
dec
ja
fisubrs
jl
push
inc
jle
cmpsl
mov
stos
jo
mov
aad
ljmp
mov
pop
mov
xor
lock
aaa
dec
bound
xor
arpl
xchg
or
addr16
outsb
dec
and
cwtl
fimuls
sarl
sub
xchg
lahf
adc
int3
push
ss
in
sbb
cmpsb
out
outsb
in
sti
inc
ss
js
mov
cmpsl
jnp
es
mov
in
icebp
fldl
std
sub
je
push
stos
mov
lds
in
or
test
add
xorl
stc
repnz
aad
mov
sub
icebp
adc
or
rcrb
sti
push
sahf
nop
imul
das
xor
sbb
cltd
ds
inc
jne
imul
lahf
mov
dec
outsl
xchg
pusha
mov
mov
sti
pop
adc
test
movsl
add
push
inc
in
xlat
orl
or
jg
inc
lea
pusha
cmp
push
sar
ret
sbb
mov
dec
xchg
cmp
mov
mov
sub
cmp
xchg
rorl
or
incl
jne
mov
arpl
or
jae
data16
dec
mov
mov
add
mov
fidivrl
aas
pop
inc
xor
fcomip
bound
cltd
cmp
inc
dec
and
rcll
and
adc
pop
out
sub
imul
mov
mov
test
and
stos
inc
jecxz
jno
jmp
xor
sub
gs
loope
jae
sbb
sbb
into
cmp
test
lahf
int
pop
dec
mov
movsl
or
ljmp
jnp
loop
push
rclb
xchg
pop
mov
lahf
ret
xchg
notl
mov
pop
jb
arpl
cltd
sub
sub
fsub
imul
aaa
into
out
shlb
lahf
push
nop
fcompl
add
jb
mov
xchg
popl
jp
xlat
mov
inc
pop
icebp
inc
jno
out
cmp
xchg
or
jecxz
lret
pop
mov
cmpsb
lcall
cli
inc
mov
jae
in
mov
pop
mov
rcll
push
cmp
xor
pop
ret
std
inc
cmc
into
lods
xor
scas
xchg
inc
pop
roll
loope
cpuid
fstp
xchg
xchg
lahf
mov
cltd
scas
xor
mov
aad
inc
adc
jno
sarb
mov
xchg
lock
aam
add
bound
subb
ljmp
test
jge
ljmpw
scas
and
pushf
and
outsb
xchg
and
ljmp
mov
clc
xchg
jge
daa
dec
sub
or
mov
sub
dec
dec
cmp
out
or
in
aas
dec
dec
shr
dec
cmp
fisttps
push
scas
imul
jle
js
in
adc
les
sub
stos
gs
xchg
add
push
data16
es
push
movsl
mov
cmpsl
jne
jmp
fdiv
imul
hlt
movsb
adc
ficompl
int
cmp
ljmp
mov
adc
jle
outsb
xchg
test
js
out
loopne
js
mov
mov
push
mov
xchg
fstsw
push
pushf
xchg
mov
adc
push
push
and
fidivrl
movsb
clc
lret
into
jg
xor
sub
jge
or
jnp
fdiv
xor
xchg
pop
rcrb
jmp
insl
rolb
mov
push
xor
mov
jl
and
insl
shll
add
icebp
push
fiaddl
adc
mov
fists
push
inc
mov
test
mov
aas
scas
lcall
mov
je
mov
scas
cltd
add
jmp
inc
xchg
lds
aad
adc
aad
hlt
sbb
aad
sbb
jo
adc
jmp
das
jnp
cwtl
outsl
xor
mov
mov
ret
fisubs
or
mov
sar
dec
push
push
mov
jg
push
shll
out
xor
sahf
adc
sbb
adc
cmp
js
or
sub
pushf
shrl
repz
sbb
pusha
rcll
ja
ds
xlat
hlt
inc
mov
dec
not
inc
mov
repz
jns
int3
sbb
out
incb
test
sti
icebp
add
stc
mov
mov
pop
xchg
rcll
movsb
jb
inc
loopne
push
mov
push
xchg
pop
test
xor
and
pop
push
leave
aas
mov
mov
stos
xchg
stos
fildll
ret
add
mov
cs
jl
push
mov
outsb
mov
loope
jg
pop
pop
xchg
add
in
cmp
clc
fwait
or
push
sbb
shrb
or
and
orb
ror
push
fcoml
icebp
sbb
push
push
lea
jno
xor
lret
add
sti
inc
and
xor
dec
std
xorb
xor
cs
xor
xchg
bound
pop
data16
mov
jg
push
outsb
add
aam
mov
mov
cmpb
push
dec
pop
jae
shrb
or
es
inc
orb
aad
scas
pushf
dec
rcr
rorb
pusha
outsb
sub
jg
pop
test
pop
and
movsl
shl
and
mov
push
in
popf
ret
popf
rol
in
mov
loope
leave
bound
vpmuludq
bound
mov
repnz
mov
cmp
sub
pusha
and
cmpsl
fstpt
xor
and
push
cmp
hlt
pop
icebp
cld
add
insl
ja
xlat
bound
xor
outsb
cmp
out
dec
inc
fcomps
mov
sbb
ja
lcall
shll
testl
inc
out
and
insb
movsl
cmc
jno
adcb
cltd
push
xorl
jg
das
scas
adc
mov
scas
cmp
cwtl
and
jle
scas
pop
and
sbbl
add
aas
mov
xor
push
hlt
mov
inc
lods
enter
sub
outsb
sbb
stc
or
ss
loopne
mov
mov
and
test
sahf
mov
xor
insb
adc
ret
pop
movsl
imul
pop
xor
mov
stc
lds
lahf
cmp
jl
mov
xchg
push
testb
out
daa
adc
movsl
inc
mov
push
inc
add
xor
popf
js
and
add
xor
hlt
or
test
rorb
jns
popf
ss
mov
imul
js
add
and
adc
add
cmpsl
adc
pop
and
lods
jg
sbb
mov
sbb
imul
cs
cmp
jbe
mov
dec
mov
test
mov
inc
pop
xchg
notl
push
xchg
push
xchg
xlat
js
test
orl
popf
pop
dec
sti
dec
insb
cmp
mov
jmp
lods
inc
jp
int
stos
push
push
and
flds
and
jne
lret
insl
imul
aas
leave
sarb
and
orl
inc
arpl
das
loopne
pop
inc
ljmp
add
mov
inc
dec
andb
cltd
and
adc
es
mov
xor
out
cld
int3
add
outsl
insl
mov
jecxz
mov
sbb
cmp
fs
fdivrs
outsl
out
fs
xchg
pop
addb
mov
jle
lds
pop
mov
js
repz
in
movsl
dec
jo
jne
adc
or
add
arpl
jmp
cmp
jne
cld
fisubl
decl
scas
ret
sbb
and
cwtl
sbb
daa
mov
and
fwait
mov
ret
ret
insb
jo
adc
out
xor
pop
sarl
sub
loop
or
jge
sub
jne
mov
xchg
cmp
popa
push
and
fstps
stos
scas
or
and
fimull
inc
loope
mov
push
movsb
pop
push
ljmp
outsl
mov
dec
adc
shlb
in
jecxz
jle
ljmp
roll
mov
mov
fnstcw
mov
je
je
fldt
scas
repnz
les
lods
add
pushf
test
push
dec
mov
lds
inc
ficomps
fcomp
popf
shrb
mov
pop
mov
fwait
cmpsl
push
aaa
test
std
fwait
inc
pop
and
ss
bound
pop
ds
fildll
ja
mov
sub
fstp
mov
and
xchg
out
mov
mov
test
jo
mov
jecxz
fdivrl
push
sub
or
jmp
xorl
jne
cmp
imul
icebp
and
or
jne
gs
adc
and
sar
mov
add
in
divl
mov
ja
mov
mov
or
andl
pop
xchg
adc
push
ss
inc
fistpll
mov
cli
mov
xor
insb
add
fidivrl
out
not
jns
push
lahf
movsb
sti
stc
adc
scas
sbb
xor
push
out
mov
decl
push
adcb
xor
inc
cli
addr16
enter
fnstcw
mov
fsts
push
das
pop
sbb
xchg
mov
imul
cmpps
inc
adc
movsb
bound
sub
bound
xor
xor
mov
or
or
add
pop
pop
fcompl
pop
pop
mov
adc
insb
sti
shrl
mov
test
push
inc
dec
repz
mov
pop
mov
mov
es
pop
aaa
adc
outsb
icebp
addr16
xor
leave
xlat
push
jge
mov
mov
add
test
mov
sbb
adc
fwait
add
mov
mov
cmp
cmp
and
push
mov
fsts
ret
pop
call
pop
fs
lret
sub
dec
std
test
and
lret
xchg
lahf
xchg
xor
lods
arpl
imul
cwtl
add
mov
sbb
mov
prefetch
or
sahf
mov
dec
and
je,pn
dec
push
inc
and
push
bound
mov
pop
push
cs
mov
insb
mov
inc
inc
inc
cmpsl
pop
push
push
loopne
sub
and
js
movsl
mov
push
adc
mov
shll
nop
cvtps2pi
fnstcw
pop
sahf
inc
int3
movsl
gs
adc
pop
fnstsw
fisttpll
inc
jno
jno
fwait
push
add
xor
ss
and
data16
pop
fstpl
icebp
in
loopne
mov
lods
cltd
mov
subl
and
push
xchg
xchg
out
pop
push
sbb
and
dec
test
stos
cltd
push
pusha
xchg
fabs
test
pusha
mov
xchg
inc
ja
out
inc
pop
push
rclb
adc
int3
jo
xor
cli
enter
out
dec
pop
out
iret
push
daa
push
add
cmp
adc
cltd
mov
xchg
imul
adc
cmp
mov
pusha
sub
dec
enter
adc
xchg
sbb
cmpsb
xchg
and
add
stc
mov
addl
ret
fildll
push
sbb
js
loope
out
mov
lods
rclb
lds
mov
push
xor
cmp
adc
jle
inc
sbb
leave
cmp
dec
pusha
add
mov
inc
mov
inc
xor
push
test
jnp
sbb
in
mov
arpl
int3
dec
xchg
cmp
jae
push
mov
add
pop
adc
ss
push
xor
imul
dec
xchg
push
pop
mov
ljmp
repz
or
fistpll
mov
ja
xchg
push
ljmp
xor
mov
fsubrs
and
std
add
fstpt
iret
or
push
xor
or
jo
popa
push
xchg
in
cmp
sbb
fisttpll
sbb
clc
push
and
lahf
add
shll
mov
xchg
ljmp
jp
xchg
mov
inc
andl
loop
push
xor
inc
xchg
out
fadd
sbb
pop
lock
and
fldt
mov
jb
loop
sub
dec
pushf
and
sub
xchg
pop
dec
movsb
push
enter
mov
fsubrs
sbb
jmp
addr16
enter
inc
iret
adc
jne
popa
clc
or
cltd
xor
jbe
lcall
test
rorb
addr16
jmp
fdiv
lret
mov
sbb
sti
rclb
dec
repnz
xor
test
or
xchg
cmc
adc
cmp
sub
add
xchg
jmp
sub
push
movsl
aaa
jno
lods
out
sub
jecxz
adcl
mov
adc
sbb
outsb
mov
xchg
shll
sub
mov
sub
ja
adc
fnstenv
push
or
mov
or
sub
fs
jge
bound
fwait
in
shrb
aaa
stos
les
rcr
sbb
dec
jle
xchg
fwait
mov
lock
xchg
mov
add
out
push
and
test
fsts
stc
sub
pop
adc
or
fiaddl
or
sub
icebp
mov
test
std
pop
and
jle
int
je
icebp
sub
sbbb
mov
cmpl
imul
jecxz
or
pop
pusha
add
push
cmp
cmp
push
dec
xchg
out
add
push
lahf
shll
cmp
sbb
fldenv
mov
mov
jne
fs
jp
sbb
js
xor
push
lods
adc
and
js
enter
mull
stos
add
mov
lret
movl
push
push
pop
push
sub
jmp
jle
adc
mov
xchg
std
push
inc
xor
push
sub
push
cmpsb
ja
or
nop
push
xor
int3
jecxz
mov
jmp
cmp
adc
mov
jecxz
and
jo
aam
aaa
sti
clc
rcrl
sbb
cmc
or
imul
je
adc
or
pushf
or
ljmp
out
or
mov
mov
into
xchg
aaa
addl
jns
adc
ret
outsl
and
xchg
clc
not
arpl
out
std
adc
mov
mov
call
inc
sub
outsl
in
mov
inc
in
out
mov
mov
daa
call
xor
addr16
cmp
dec
into
pop
aad
es
clc
or
mov
add
loope
ret
int3
imull
add
repz
je
mov
and
rcr
jmp
scas
test
sbb
shlb
jmp
pop
out
mov
add
aaa
in
fs
push
mov
movsb
and
and
mov
push
cld
cmp
cmp
ss
jmp
lcall
jne
push
adc
mov
mov
outsl
movsb
stos
adc
js
dec
pop
sbb
dec
jne
cmp
mov
and
ljmp
ficoms
push
sbb
mov
or
out
cmp
mov
insl
jno
lock
jecxz
adcb
inc
sar
aam
inc
jae
add
pop
or
add
mov
daa
jp
push
mov
and
adc
shlb
push
mov
sti
xlat
cmpb
ds
sbb
test
mov
mov
and
aam
popa
xor
adc
jl
sub
int
add
cmp
test
into
addr16
mov
fs
lock
ret
movsb
sub
imul
out
sbbb
test
adcb
xor
adc
cmc
jge
dec
lahf
xor
push
mov
sbb
jmp
mov
jbe
mov
cmpsb
das
divl
fnsave
sbb
out
insl
mov
add
pinsrw
daa
cmp
sbbl
ret
sub
jmp
inc
scas
pusha
fdivrl
es
pop
mov
or
cmpsl
cmp
jmp
sub
inc
push
fs
insl
icebp
mov
stos
sbb
and
jbe
mov
ja
imul
jnp
push
ret
into
imul
xor
or
inc
dec
clc
jp
adc
bnd
stos
mov
adc
adc
push
or
rcll
sub
and
pushf
enter
pop
imul
or
pop
outsl
mov
cmp
jge
imul
enter
sti
rcrb
push
mov
sub
push
bound
das
test
test
inc
push
mov
dec
inc
aas
pushf
push
loopne
or
vmwrite
shlb
iret
cmp
add
jne
bound
jp
movsl
in
cwtl
cmc
fstpt
dec
sbb
repz
in
das
mov
movsl
xchg
decb
mov
push
mov
imul
in
call
xchg
push
sub
in
mov
fwait
popf
or
in
stos
and
cmp
out
movsb
xchg
lret
push
xor
ret
inc
adc
lahf
jnp
daa
stc
pop
xor
pop
ljmp
cs
pop
mov
adc
lret
cmp
xlat
rolb
mov
fistl
mov
mov
mov
popa
hlt
xor
pop
arpl
scas
inc
les
fwait
outsl
sahf
lcall
fwait
mov
mov
lock
les
mov
pop
dec
popf
test
in
leave
std
lret
jo
push
cmp
xor
push
out
mov
jmp
mov
and
or
stc
mov
add
dec
in
fildl
std
pop
loope
popa
ret
ja
and
cmp
xchg
pop
sub
and
iret
dec
add
and
inc
movsb
enter
leave
pop
jns
cmc
mov
loope
cmpb
das
mov
add
push
lock
mov
testb
xchg
jl
xor
push
or
mov
xor
scas
xor
add
mov
cmp
xchg
jbe
inc
lods
fnstcw
addr16
adc
or
mov
aam
add
pop
or
sub
les
push
lret
stc
pop
sbb
or
jo
data16
push
cmp
cwtl
cmp
pop
or
arpl
mov
test
push
jecxz
enter
mov
xchg
into
push
lcall
dec
mov
and
jecxz
sbb
scas
loopne
dec
pop
jg
imul
add
sbb
push
aad
cmp
popf
add
enter
push
adc
aas
insl
fstp
leave
les
cmpsl
inc
into
mov
shll
mov
aad
or
inc
or
pop
inc
or
add
fcomi
cmp
xlat
xlat
lret
aad
rcl
pop
call
sbb
inc
push
sub
clc
out
fdivl
test
imul
addr16
cmpsl
cwtl
mov
dec
mov
sbb
add
int3
push
dec
lock
sti
mov
je
call
push
cmp
inc
data16
push
adc
out
mov
or
in
mov
xor
mov
push
xchg
inc
aas
fmull
test
jb
mov
out
pop
adc
push
mov
test
cmp
jns
fldenv
fisttpll
arpl
dec
jg
cld
mov
bound
add
int3
xchg
push
test
or
enter
xchg
push
xor
insb
stos
fcom
loope
insb
pop
int
dec
mov
es
mov
mov
xchg
sub
lret
outsb
mov
fldcw
jl
scas
pop
lcall
xor
xchg
sahf
shrb
scas
mov
xchg
pop
in
stos
jmp
jo
imul
add
ds
and
push
cmp
fmull
icebp
jne
mov
jae
pop
push
push
adc
fisttps
les
or
pop
fucomip
sti
push
icebp
mov
je
clc
jo
jno
test
pmulhw
dec
mov
int
push
scas
xchg
adcb
pop
ljmp
add
aam
jne
lahf
call
cmpsl
cs
addr16
and
or
xor
clc
mov
mov
fwait
or
jl
jnp
xchg
pop
jbe
mov
xor
and
jo
dec
mov
repz
sbb
jbe
add
jns
jne
pop
int3
push
inc
xchg
gs
sbb
std
cli
out
outsb
pushf
mov
adc
rolb
xor
xchg
ret
aad
pop
out
add
js
add
insl
loopne
clc
cmpsb
cmpl
xchg
pop
aam
pop
sbb
das
xchg
iret
cmp
or
addr16
and
loope
int3
aaa
dec
les
cmpsb
cmp
stc
imull
cld
xor
rcll
shrl
push
push
movsb
jp
dec
jge
pop
aas
test
rclb
ror
mov
cmpsb
gs
and
xlat
cmp
cmpsl
xchg
testb
or
xchg
adc
xchg
mov
sti
or
scas
dec
mov
data16
cli
dec
jnp
and
xor
mov
dec
loop
cmpsb
pop
fs
cwtl
loope
xor
push
andb
jnp
push
cmpsb
mull
mov
loop
aas
xchg
mov
pop
je
aad
jle
ret
mov
stos
mov
mov
mov
add
test
ja
sub
orl
lret
sahf
xchg
fbstp
jno
lods
out
or
jl
sahf
cmovne
mov
imul
jns
pop
repz
imull
rolb
lret
lcall
mov
andb
and
imul
inc
pop
xchg
jnp
rclb
cmpsl
aam
sete
dec
stos
or
xor
pop
or
sub
les
cmp
fstpt
inc
arpl
xchg
inc
aad
cmc
out
cltd
mov
mov
das
push
mov
insb
lods
stc
pusha
cmp
lcall
and
mov
and
scas
fistps
jge
sti
cmp
lcall
jo
jl
or
out
adc
call
sub
rolb
push
adc
into
arpl
fucomp
push
out
jo
loope
add
movsl
add
daa
je
jmp
pop
mov
add
stc
cmp
lds
push
rcll
add
push
mov
adc
and
scas
lods
inc
rol
loop
add
insl
and
daa
sbb
jae
fldl
int3
in
aam
sbb
dec
jno
hlt
adc
test
mov
and
add
sbb
stos
sti
or
imull
out
test
enter
sub
add
adc
cmp
in
xchg
jbe
mov
mov
add
aad
mov
in
mov
fwait
xor
aas
pop
ds
sub
jnp
lret
lea
jg
pop
or
pop
mov
or
push
insl
outsl
out
fadds
xor
sub
inc
and
add
fidivs
hlt
gs
std
jno
test
popa
in
cmp
lock
repnz
orb
lahf
nop
mov
inc
cmp
das
imul
xchg
pop
shlb
add
push
mov
imul
movsl
incl
ss
sbb
mov
out
hlt
lcall
xorl
jns
dec
loopne
pop
pop
inc
and
jle
rorl
inc
mov
or
cmp
fsubs
mov
scas
outsl
pusha
rcrb
fistpll
cmp
push
mov
daa
mov
orl
fs
xchg
or
int
jp
mov
jb
sahf
in
aas
mov
xor
ljmp
loope
pusha
fwait
hlt
push
jecxz
adc
xchg
testb
mov
outsb
or
sub
stos
dec
sbb
addr16
jb
shll
and
test
cmp
stos
sbb
jns
sub
adc
fisttpl
push
cmc
push
push
pushl
sub
cmp
popf
cmp
xchg
jbe
andl
mov
xor
jns
adc
and
das
sub
andb
std
adc
rolb
push
xchg
imul
mov
scas
xlat
push
add
cmp
pop
jecxz
cmp
mov
mov
adc
jmp
jno
add
jp
xchg
or
mov
ret
out
sti
cmp
movsb
sbb
dec
pop
ror
std
cmpsb
imul
add
push
jmp
or
push
mov
fsts
gs
imul
mov
mov
popa
ja
int3
insb
jb
xor
aas
inc
outsl
pusha
ret
cs
ss
sbb
ret
hlt
stos
cld
dec
and
outsl
push
repnz
ret
mov
scas
lods
cmp
into
fs
leave
fisubrl
les
and
jmp
inc
iret
jne
jo
repnz
rolb
pop
es
lods
popf
push
mov
movsl
fisubl
das
popf
mov
push
lcall
sbb
dec
mov
or
out
out
fcmovnb
imul
adc
pop
adc
add
jbe
inc
xor
mov
sub
outsb
jmp
mov
pop
fcmovne
movsb
pop
fs
inc
pop
ret
ret
cmpsl
cld
hlt
outsl
jb
lret
outsb
jmp
mov
ds
test
sbb
lock
dec
adc
jnp
xchg
pop
sub
sub
out
jb
mov
mov
mov
fiaddl
dec
andb
sar
test
or
push
mov
mov
and
pop
mov
fnstsw
test
add
cmp
add
push
dec
cmc
ljmp
or
mov
lock
xlat
dec
adc
mov
push
mov
add
out
jp
lret
push
in
loop
bound
inc
bound
dec
or
ficomps
jns
arpl
rorb
add
aas
lock
out
push
mov
in
fldcw
push
data16
mov
mov
shlb
sub
dec
lea
fdivs
adc
cltd
xchg
loopne
push
push
je
or
cld
fsubrl
cmpsb
cltd
push
cmovg
fldenv
lods
push
xchg
push
xor
sti
shrb
arpl
pmuludq
stc
xor
scas
mov
call
mov
in
cmp
inc
ret
pop
mov
or
add
imull
ljmp
mov
sub
mov
iret
dec
xchg
pop
bnd
xchg
add
cltd
jle,pn
insl
aam
mov
scas
inc
cmpsb
lret
fcoml
push
pop
sub
shll
ficoms
pop
bound
in
ljmp
mov
inc
mov
das
inc
xor
ret
jl
mov
arpl
xor
pushf
sbb
jne
jo
pop
sbb
out
mov
xchg
push
xchg
addr16
aad
sub
mov
sub
cmp
adc
lds
add
sub
jmp
pop
repz
pop
int3
fsubr
testl
mov
std
jle
cld
mov
mov
sub
fs
ds
fisubl
clc
loope
ja
nop
sbb
movsl
mov
sbb
mov
in
pop
push
std
sub
lahf
add
fcoms
sbb
scas
cld
cmp
int3
int3
iret
gs
in
mov
jmp
insl
push
sbb
dec
cmc
inc
jle
sbbl
sbb
adc
sbb
push
jb
shrl
stc
cwtl
test
iret
arpl
sub
sahf
xor
pop
xchg
jne
mov
inc
xchg
jns
fidivrl
subb
outsl
mov
adc
pop
add
push
pop
test
sarb
fcoms
lods
addr16
scas
jns
sub
addr16
outsb
outsl
mov
push
add
pop
xor
sbb
js
dec
in
pop
adc
and
out
or
ss
out
sti
pusha
ror
bound
jae
addl
xor
aas
mov
jp
mov
std
stos
jg
inc
mov
mov
inc
push
mov
popf
push
sub
xchg
and
pop
pop
outsb
mov
sub
imul
lods
sbb
lcall
mov
or
pop
fimull
flds
sub
cmp
inc
xchg
testl
mov
or
int
push
mov
add
push
lods
push
sbb
fstps
aad
add
idivb
mov
movsl
push
imul
ss
dec
inc
xchg
inc
imul
xchg
es
inc
sub
or
mov
mov
sbb
mov
int3
push
pop
mov
mov
das
xchg
xchg
subb
add
leave
ss
and
jge
mov
adc
pusha
mov
loop
sahf
mov
lock
out
mov
idiv
subl
jmp
mov
call
and
mov
rcl
sub
pusha
loop
lea
call
cltd
shll
adc
shrl
push
mov
pop
mov
out
add
lock
cmp
mov
push
mov
or
out
into
adc
in
lcall
cli
popf
mov
add
out
adc
nop
popf
dec
xor
mov
adc
cmpl
ret
sub
std
pop
push
xchg
dec
pop
xchg
adc
mov
xor
jne
inc
insl
add
dec
sbb
aas
xchg
pop
mov
incb
cmp
push
push
jge
lcall
xchg
test
ljmp
add
adc
mov
mov
mov
jno
adc
rclb
push
sub
jge
dec
test
dec
scas
cmp
scas
xlat
daa
or
pop
and
lock
xlat
inc
cltd
mov
jmp
idivb
scas
shlb
shl
shrb
leave
sub
rcrb
mov
fdivs
add
add
xor
rcrb
leave
mov
lods
loope
jge
mov
xor
adc
cmp
in
cmp
dec
dec
popf
mov
xor
lods
pop
idivl
mov
ljmp
mov
repnz
mov
dec
mov
and
add
lahf
mov
jmp
mov
andb
inc
fstl
sbb
repz
loopne
stos
pop
lret
ret
add
mov
or
shrb
aad
mov
das
nop
cltd
je
cmp
mov
sbb
clc
stos
lahf
lahf
nop
jle
push
sbb
cmpsl
stc
sbb
cmpb
aam
insb
cmc
or
aad
inc
mov
dec
insb
cmc
retw
loop
or
sbb
mov
imull
or
push
repnz
jge
ja
mov
jge
push
aam
addr16
dec
xchg
repnz
lods
cld
add
add
or
and
and
lret
mov
push
in
adc
mov
in
pop
aas
mov
inc
push
inc
mov
lods
jecxz
mov
or
push
lock
decb
shlb
into
mov
fsubl
lds
xor
mov
xchg
int3
sbb
iret
or
aas
loop
jmp
and
imul
or
push
add
adc
test
lods
xchg
iret
scas
jge
sarl
adc
mov
add
push
or
adc
xor
xchg
sub
inc
ret
lods
and
mov
addr16
xor
mov
inc
sub
sahf
mov
psubusb
and
jae
repnz
lahf
push
or
std
xor
loope
lds
sub
mul
rorl
and
subl
testb
sub
push
leave
cmp
aaa
or
mov
xchg
mov
xlat
mov
into
popa
aad
loope
pop
test
xchg
gs
loope
jb
je
push
sub
mov
sbbl
lret
sub
out
lock
sahf
mov
sti
mov
shr
pop
lods
mov
cmpsb
mov
scas
stos
or
xchg
lds
add
out
ret
popf
push
lret
sahf
xchg
loope
dec
in
and
nop
ljmp
movsb
jb
dec
jmp
outsl
lcall
xchg
push
stos
pop
jne
sub
pop
adc
sbb
lahf
leave
es
jg
je
in
aaa
ss
xor
stc
std
cmp
popf
sub
inc
jne
aas
in
pop
rorl
or
add
bound
fcmovnb
or
adcl
shll
repnz
push
mov
icebp
mov
add
int3
mov
fsubs
lahf
push
mov
loop
lods
or
cmpsl
push
pop
pop
es
and
cltd
add
xlat
adc
cmp
js
cmp
dec
jg
rolb
jno
sub
cmp
xchg
repnz
hlt
jne
sbb
pop
test
je
shrl
fcmovb
pop
cwtl
iret
lock
pop
jns
mov
push
inc
pop
mov
inc
jmp
ljmp
mov
and
and
push
cmp
mov
and
add
mov
js
mov
mov
xchg
mov
lcall
and
sbb
dec
lods
xlat
fmull
and
pushf
xchg
or
xchg
push
xor
or
or
jne
push
or
mov
jge
sub
xor
sbb
mov
cmpsl
outsb
negl
inc
mov
pop
jecxz
sbb
cmp
push
push
xchg
iret
inc
and
in
jns
imul
adc
pop
mov
mov
shlb
adc
loop
adc
sbb
test
sbb
xor
cs
fstpt
test
punpckldq
outsb
pop
dec
jg
mov
pop
xor
inc
aad
insb
inc
xchg
jmp
int3
cld
shlb
jns
fisubrl
mov
leave
jecxz
push
lret
flds
jo
dec
aas
add
fsubrl
test
cmp
and
das
aas
call
mov
dec
js
adc
add
and
jns
loopne
jle
pop
movsb
jl
dec
test
cwtl
out
sub
mov
insl
cmp
jl
fmull
mov
faddp
xlat
xchg
stos
mov
daa
sub
push
int3
jge
sar
sub
or
int
jns
das
push
iret
jno
les
jge
push
jb
jmp
push
movsb
xchg
xchg
add
pushf
aas
out
lods
dec
stos
add
idivl
pop
roll
test
fstp
inc
adc
cs
sub
mov
push
jae
pop
insb
test
in
mov
mov
inc
movsb
inc
dec
push
leave
scas
cmp
mov
sbb
movsb
push
push
cmp
mov
rcrl
cli
mov
sub
mov
lcall
mov
cmp
fidivrs
pop
subb
mov
popa
out
pusha
sub
xlat
icebp
fstps
pusha
xchg
testl
outsl
mov
mov
cmpb
mov
lds
in
rorb
test
mov
cs
dec
popf
stos
xchg
add
mov
push
push
pop
imul
call
movb
aaa
xchg
mov
loopne
das
ja
xorb
push
lea
mov
adc
jge
je
xchg
lods
adc
xlat
xchg
or
shll
sbb
sbb
cmpsb
adc
lret
push
ret
pop
lods
fadd
and
push
jle
mov
daa
loope
pop
lods
es
push
les
in
push
push
lods
in
xchg
jne
sahf
lds
and
iret
out
and
lcall
cwtl
sbb
imul
loopne
jp
orb
fcompl
daa
outsl
aas
addr16
iret
insl
out
push
cs
stc
in
or
pop
cltd
pop
stc
mov
popf
pop
sbb
and
call
pop
imul
iret
daa
ret
pop
in
or
adc
pop
mov
fiaddl
sbb
out
mov
jnp
xor
imul
adc
shl
lds
or
or
dec
push
mov
push
push
mov
fmul
mov
mov
arpl
adc
pop
mov
push
lcall
push
fidivrs
pop
push
mov
sub
dec
fistpl
or
sub
addr16
std
inc
hlt
out
jne
cld
jns
add
fwait
push
loopne
bound
jbe
xchg
outsl
xchg
lahf
pop
call
sahf
xchg
fs
jmp
pop
dec
pushf
cwtl
fucomip
push
inc
jmp
int3
mov
push
or
mov
test
sbb
jle
or
xlat
push
add
push
test
imul
out
inc
imul
loop
lods
frndint
mov
pop
pushf
imul
jnp
sarl
mov
lahf
push
push
lods
xchg
ja
pop
xchg
sbb
fidivs
test
pop
mov
mov
ss
and
in
jae
sbb
inc
inc
enter
in
inc
shr
cli
lds
arpl
xchg
sarb
sbb
pusha
jmp
sub
sub
in
sub
push
jp
sbb
ret
sbb
bound
adc
push
jno
sub
les
pop
mov
nopl
dec
xchg
add
mov
fidivl
int3
and
and
xchg
rolb
add
loope
fs
bound
jae
fsubl
cmp
mov
pop
dec
aad
and
out
leave
sub
dec
ljmp
jl
add
push
adc
sbb
addr16
scas
int
mov
sub
shlb
and
cld
cld
sub
loope
sbb
sbb
mov
add
push
push
rcl
pop
fwait
push
mov
test
sub
call
das
cmp
daa
xor
data16
daa
mov
repnz
fcmovnbe
jns
int
call
add
xchg
add
inc
or
and
ljmp
xchg
and
inc
xchg
dec
fadds
jl
mov
add
dec
roll
test
sub
outsl
in
jp
iret
loope
daa
int
jle
push
fwait
arpl
xchg
and
push
dec
mov
pushf
sub
pusha
rcl
adc
in
notl
popf
std
ljmp
negl
arpl
nop
dec
push
mov
ja
sub
les
jae
out
mov
pusha
sbb
xchg
xor
int
rcrl
test
add
adc
jo
dec
jp
lcall
pop
call
pusha
rorb
out
push
stos
sub
sbb
push
mov
xchg
lret
xlat
dec
mov
repnz
cmp
xor
ds
cmp
sahf
adc
rcrl
adc
pop
out
xchg
cmpsl
jno
pop
dec
adc
xor
pop
sub
inc
jecxz
fs
lret
pop
es
xchg
clc
dec
dec
sub
cmp
sub
leave
sub
add
out
arpl
pop
adcl
jnp
aam
sub
adc
lcall
pop
ja
mov
imul
or
mov
arpl
adc
mov
cmp
adc
adc
cmpb
ret
mov
insw
adc
mov
xchg
adc
jmp
iret
jecxz
pushf
mov
xorb
mov
inc
mov
adc
jg
and
sub
mov
mov
addr16
mov
jmp
imul
sbb
mov
xchg
loopne
add
pop
into
jmp
fisubrs
gs
jnp
cmp
jg
pop
xor
mov
sub
cmp
les
adc
aaa
sahf
insl
je
jb
pop
push
pushw
insb
shll
out
jns
and
cmc
adc
addl
jnp
cmc
and
aaa
xchg
int3
xorb
jg
jle
add
mov
jns
data16
xor
lods
mov
repnz
xor
dec
test
xor
stos
aam
xchg
push
mov
popl
adc
or
push
push
insb
repz
clc
jge
js
mov
cmp
sub
inc
adc
mov
les
unpcklps
sub
dec
out
and
push
int
pop
nop
ret
push
lret
or
insl
into
sub
push
orl
mov
xchg
fimuls
repz
xor
into
mov
mov
sub
testb
pop
cmpb
fs
pop
mov
dec
cli
push
mov
cmp
pop
sub
inc
jbe
popa
clc
stos
jg
data16
sub
cltd
pop
jg
leave
add
pop
add
mov
jle
sub
and
xor
xchg
mov
fsts
pop
lret
clc
imul
adc
dec
repz
loop
mov
mov
loop
fisubrl
int
inc
inc
mov
pop
shrb
cltd
pop
popf
pop
xchg
push
data16
xor
or
daa
xchg
movsl
into
push
mov
lcall
jecxz
scas
adc
push
mov
popa
daa
sub
mov
push
lret
add
fidivrl
mov
jge
call
les
xchg
mov
gs
jmp
in
sub
jne
and
mov
mov
push
jmp
clc
adcl
bound
movsl
sbb
sub
xchg
mov
or
daa
ljmp
cs
inc
pop
push
mov
sbb
hlt
xlat
and
xchg
std
out
stc
mov
push
pop
sbb
je
mov
mov
mov
outsl
mull
add
jns
cli
inc
orl
scas
pop
pop
xchg
add
xchg
in
push
icebp
dec
imul
sbb
loope
cmp
push
repz
pop
jmp
notb
lock
adc
jle
adc
mov
insl
add
cmpl
fistpl
imul
push
jae
cmp
int
xchg
mov
jo
mov
pop
test
inc
in
aad
cs
add
jb
lds
xor
mov
mov
popa
pop
test
sbb
sub
xchg
add
sbb
mov
mov
dec
loope
adc
mov
add
lcall
stos
loopne
push
popa
xor
mov
push
pop
imul
enter
mov
aam
call
int
push
std
jge
and
insl
add
bnd
inc
mov
out
std
pop
mov
das
adc
imul
aad
dec
test
pop
jo
pop
sub
and
xchg
add
cmpsb
adc
fimuls
jne
push
xor
stos
or
int
jmp
out
cmpb
movsb
es
cli
icebp
insl
in
stos
or
lret
dec
and
in
sub
repnz
fs
xchg
bound
cwtl
push
pop
and
ret
or
lds
dec
dec
ret
test
adc
cmpsl
scas
in
push
test
xor
mov
stos
pop
sbb
dec
push
mov
pop
push
add
stos
shrb
shl
test
dec
adc
pop
xor
adc
std
je
add
add
jecxz
push
cmp
mov
xchg
std
and
cmpsl
ja
std
ficompl
add
outsb
movsl
push
jb
push
aam
test
clc
out
popa
fsub
mov
scas
arpl
push
mov
xchg
aaa
icebp
dec
out
mov
jae
out
push
out
movsl
sub
xor
add
pop
jecxz
std
jae
inc
decl
sub
scas
xor
jg
test
lea
sub
adc
andb
or
sbbl
js
add
out
lahf
pop
push
subb
fisubs
mov
cmp
mov
out
pop
lods
cmpsl
out
imul
xchg
loop
bound
pop
int3
mov
popf
out
inc
xchg
jl
adc
jns
mov
std
cmp
pop
stos
mov
pop
leave
sbb
inc
sbb
or
lcall
pop
xlat
mov
mov
icebp
into
pop
push
xchg
pop
pushl
lret
out
mov
aam
idivl
jbe
mov
sbb
test
sbb
xor
jno
pop
cmp
test
xor
insl
mov
out
repnz
lods
scas
inc
hlt
mov
push
pop
cmp
sub
pop
clc
sbb
push
cmpsb
out
lret
rorl
jmp
and
test
jno
in
data16
and
fsubs
test
inc
cld
test
adc
xorl
in
push
orb
movsb
clc
and
das
lods
xchg
xor
or
dec
repz
int3
sub
mov
push
xchg
into
mov
mov
pop
adc
in
ds
dec
sbb
mov
movsl
adc
pop
or
adc
int
mov
and
bound
add
sub
repz
aas
cmpsl
inc
pop
lods
add
inc
adc
in
push
fildl
dec
lcall
js
ficompl
xor
je
ret
cwtl
ds
adc
daa
mov
cwtl
out
push
xlat
xor
or
xchg
jno
cmpsb
enter
push
sbb
aaa
cmp
push
or
jb
and
pop
pop
xorb
dec
xlat
inc
sub
loop
lods
dec
jg
push
out
dec
and
add
cmpsb
dec
loop
fwait
int
xor
ja
add
std
push
int3
out
push
add
or
sub
push
in
in
push
mov
push
fisubs
sar
aad
mov
rcll
shll
sbb
or
pop
and
pop
push
xchg
sarb
in
pop
xlat
sub
sbb
mov
aas
or
adcb
and
pop
lret
mov
xchg
inc
adc
add
fwait
leave
ds
jge
dec
ret
pushf
sub
mov
test
ljmp
lods
clc
sub
mov
mov
call
outsl
je
jae
mov
fadd
lods
adc
dec
mov
sbb
call
stos
lret
xor
ss
xor
imul
je
mov
jge
adc
add
aam
imul
outsb
je
rolb
cmpl
xchg
dec
mov
pop
sbb
xor
pop
mov
inc
sub
xchg
aad
das
and
mov
jg
push
push
stos
inc
xchg
xchg
mov
cs
clc
ret
bound
inc
xor
mov
js
je
xor
int3
jecxz
jne
ss
add
mov
negb
mov
inc
push
addr16
mov
push
movsl
jle,pt
popa
jns
mov
xor
xchg
outsb
les
mulb
pop
rclb
pop
je
icebp
jno
xchg
cwtl
lock
mov
daa
ja
les
mov
push
scas
outsb
stos
lcall
ret
inc
jne
push
or
inc
mov
adc
jnp
fs
xchg
int
fnstenv
mov
cmp
icebp
dec
adc
cmpsb
jb
sbb
mov
add
insb
sub
push
adc
in
jnp
popf
and
shlb
or
mov
add
inc
int3
iret
and
in
xchg
add
and
clc
mov
jp
jg
andb
xor
jp
fists
or
icebp
enter
add
jne
je
xor
mov
or
mov
cmp
shl
add
cltd
jo
jo
popl
sbb
adc
adc
sti
push
popl
mov
dec
sub
inc
stc
ret
arpl
push
lea
and
and
add
xor
lret
ja
dec
add
sbbb
add
enter
loop
sub
jg
pop
dec
fbld
cltd
sbb
in
adc
mov
xor
pushf
adc
pusha
pop
ret
xor
xor
sti
dec
xchg
jns
add
mov
jbe
cmp
add
xor
andb
mov
mov
fpatan
mov
lcall
xor
push
mov
cmp
or
jns
jl
inc
aas
enter
add
int
mov
repz
arpl
mov
xchg
dec
xchg
repz
pop
push
lods
mov
mov
fisubl
mov
jbe
ds
insl
es
and
sbb
pop
dec
repz
lahf
lret
sub
and
xor
rorl
sub
or
sub
mov
int
mov
cmp
out
sub
jbe
mov
or
xchg
cmp
or
cltd
dec
add
mov
jo
mov
sub
or
call
daa
push
lcall
ret
jb
scas
std
cmc
push
sub
cld
jne
lock
add
adc
aad
inc
jmp
pop
add
fnstcw
mov
push
sbb
testb
jmp
or
adc
das
xchg
and
push
jecxz
ret
les
mov
sahf
sbb
lods
xor
jae
cmp
xchg
cmp
in
mov
je
push
out
xchg
aas
mov
fxam
mov
fidivl
fstps
pop
mov
add
xchg
ret
rorl
scas
pop
popf
mov
scas
mov
int
dec
lcall
arpl
cmp
les
pop
lahf
sub
aam
scas
add
mov
mov
inc
push
cmp
sbb
addr16
xor
mov
cli
ja
and
dec
cli
aaa
and
sub
sub
xchg
lcall
dec
and
je
outsb
neg
test
push
adc
add
mov
mov
push
adc
in
or
std
lcall
mov
sbb
inc
jb
jge
ljmp
xor
rorl
lcall
gs
repnz
shlb
fbstp
push
push
js
adc
inc
lods
xor
adc
and
rorl
xchg
test
inc
lcall
out
push
iret
outsl
xchg
sarl
jno
mov
data16
or
sbb
or
aas
faddl
add
negl
pop
pop
mov
popa
jb
aas
ret
sbb
pop
fisttpll
sbb
pop
inc
adc
aaa
pop
je
sbb
ss
ja
mov
xor
dec
xchg
push
or
inc
fdivs
cmp
ret
dec
lcall
jg
fildll
xor
push
xor
lcall
into
push
xor
pop
stos
jecxz
rorl
repz
pop
lahf
cmp
dec
in
push
rcl
and
sub
xchg
fwait
out
gs
daa
adc
dec
inc
js
iret
xor
mov
sub
inc
add
pusha
fmul
lock
cmp
popl
arpl
dec
movsl
mov
inc
subb
sti
push
mov
pop
xchg
imul
out
shll
cwtl
jecxz
in
out
in
inc
pop
adc
int
iret
sbbl
rcl
mov
loope
mov
jge
fxch
sbb
lea
jp
lods
icebp
sbb
call
mov
sub
loope
sub
push
sub
add
loopne
cli
push
sbb
mov
lret
incl
push
and
lock
je
sbb
mov
cltd
dec
mov
mov
imulb
cmp
and
mov
daa
ret
jno
push
aam
add
loopne
push
or
movsb
mov
fisttpl
push
jmp
jb
sbb
adc
js
cmpb
scas
inc
jbe
aad
push
and
pop
push
addr16
mov
adc
icebp
scas
icebp
test
fs
jge
nop
xchg
cs
cmp
push
rorb
popf
in
push
pop
sti
sahf
push
inc
mov
push
ret
push
or
das
cmc
movsb
loope
insl
aam
out
or
ret
pop
mov
cmp
mov
enter
ja
fdecstp
sub
jno
mov
inc
sbb
xorl
cld
pop
iret
mov
pop
aad
in
inc
xorb
cmc
jmp
mov
je
xchg
aad
push
sarb
sbb
popa
push
les
outsb
insl
mov
mov
out
xchg
ss
clc
scas
add
dec
sbb
sub
aas
aas
fildll
sbb
xor
fimuls
lea
addl
movsb
jge
add
mov
cltd
push
xchg
mov
inc
shlb
add
test
fwait
hlt
aam
adc
inc
xor
push
push
leave
xchg
jle
push
shll
jb
mov
sbbl
in
cmp
aam
roll
outsb
push
daa
sbb
xor
sbb
inc
int
adcl
testl
pop
ret
mov
pushf
sbb
movsl
enter
test
dec
cmpsb
cld
inc
leave
adc
mov
out
fwait
nop
sub
xchg
pushf
outsb
imulb
and
leave
pushf
mov
popa
pop
cmp
or
filds
out
mov
sbb
pop
sub
cmp
adc
in
sbb
mov
cmpsb
mov
push
lock
sbb
mov
ds
mov
loopne
add
inc
sub
xor
pop
xchg
pop
inc
mov
in
sbb
pushl
pop
std
xchg
mov
or
mov
pop
xor
imul
jbe
mov
cmp
push
lea
pop
mov
sbbl
cli
xor
lods
pop
stos
dec
adc
add
jnp
repnz
mov
notb
xor
stos
shll
nop
mov
popa
divl
inc
lret
add
shr
ja
cld
jg
ds
inc
gs
pusha
dec
sub
imul
dec
subw
popa
es
mov
sub
and
mov
lds
repz
mov
hlt
lea
cmp
or
shll
xchg
pop
sbb
ret
mov
in
mov
add
pop
sub
dec
jns
xchg
cmc
pop
aad
lret
add
clc
push
in
mov
mov
test
jae
movsl
fsubp
repnz
call
repz
lret
jnp
ss
sub
cmp
pop
jbe
xor
shrb
inc
bnd
lret
mov
je
inc
je
and
movsl
sbb
ja
lret
jp
ret
xor
mov
sarl
mov
fwait
test
push
xchg
rcrl
mov
pushf
int
mov
andl
xchg
and
mov
xchg
movsb
loopne
jnp
or
ret
push
inc
idivl
mov
loopne
xchg
test
xor
pop
mov
jnp
or
and
sbb
ds
sub
jb
cli
repz
add
push
lcall
push
fisubl
aam
dec
fidivrl
push
and
inc
sbb
fisttps
jge
aad
scas
dec
int3
fistpl
cmpsl
sbb
inc
out
pushf
int
xor
sbb
xchg
mov
jae
in
int
cld
test
dec
push
outsb
je
cli
daa
and
in
push
jecxz
xchg
dec
cmp
mov
mov
push
ja
fwait
dec
idiv
jecxz
in
inc
cmc
mov
lds
sahf
inc
lret
test
pop
imul
movsb
xor
dec
lret
mov
rcr
movsb
pop
hlt
adc
push
subl
jae
sarw
call
sub
mov
das
addr16
sahf
repz
mov
jg
mov
subl
aad
cmp
adc
xor
or
jg
adcb
or
mov
scas
pushf
mov
xor
dec
cmp
add
rolb
mov
add
inc
mov
out
lcall
cwtl
push
inc
arpl
cmp
mov
xchg
int
sbb
or
lds
dec
test
inc
pop
ret
stos
add
adc
sub
sbb
jecxz,pn
dec
push
adc
dec
inc
jmp
dec
mov
inc
lahf
mov
int3
sub
pop
dec
xchg
out
stc
pop
or
mov
jb
sarb
inc
jbe
into
fdivp
pop
sbb
add
xchg
stos
or
or
hlt
mov
movsb
std
pop
sub
xor
or
fmuls
int
lret
sub
leave
xor
xlat
mov
add
fnstenv
xchg
mov
mov
in
test
sub
jmp
arpl
and
dec
mov
dec
test
pushf
loop
lods
cltd
sti
fcoml
mov
jp
xor
push
nop
hlt
adc
lahf
sbb
pop
xchg
jge
add
and
jecxz
test
or
sub
pop
xchg
fwait
ret
xor
sarl
sbb
jl
jl
mov
mov
test
xchg
into
inc
setnp
stos
dec
push
lcall
lea
hlt
outsb
mov
testl
test
xchg
test
fiadds
xor
jl
pop
out
sub
test
pop
in
or
inc
jb
out
pop
pushf
xchg
scas
notb
jns
ljmp
add
mov
pop
push
bound
dec
mov
ljmp
repnz
ss
dec
sbb
dec
scas
and
cmp
cmpsl
jae
rcrb
addr16
repz
sti
dec
lret
in
rcr
add
add
popf
cmpsb
mov
mov
push
test
daa
lea
cmpsb
adc
imul
movsb
push
fistps
int3
jns
inc
xlat
mov
jbe
lahf
dec
or
xchg
shll
jae
repnz
movsl
add
iret
pop
lods
dec
out
std
jo
in
leave
jge
outsb
push
add
aam
inc
mov
xchg
or
pop
mov
xor
pusha
ja
inc
xor
fsubrs
movsl
add
mov
mov
adc
shrb
fcompl
mov
pop
aas
adcl
mov
dec
in
lea
xchg
sahf
int3
xchg
es
iret
pushf
push
aaa
stos
repz
outsb
jnp
inc
out
cmp
xchg
sub
sbb
inc
into
add
cli
add
add
or
imulb
pop
push
bound
lret
insl
les
lea
clc
dec
pop
pop
cmp
les
pop
xlat
dec
sub
jge
push
mov
or
aaa
lcall
pop
push
dec
mov
push
packuswb
push
mov
sbb
jecxz
aam
cmp
outsb
push
push
mov
xlat
cmp
fildl
push
or
and
and
inc
loope
or
pop
imul
mov
imul
xchg
js
imul
pop
sbb
inc
push
test
in
push
dec
cmp
aam
dec
aam
lods
push
jecxz
orb
fcmovu
ds
aaa
mov
pop
hlt
push
xchg
mov
push
dec
push
pop
mov
pxor
out
lods
jp
aas
in
cmp
fiaddl
aad
or
in
xchg
sbb
cltd
pop
nop
and
mov
cli
dec
inc
cmp
aam
sbb
pop
add
xor
fs
push
push
lods
mov
popa
push
jne
adc
inc
mov
mov
push
jecxz
mov
mov
fildll
pop
repnz
loope
fists
cmp
addr16
stos
jne
insb
jl
les
jne
pop
xchg
cli
mov
int
stos
loop
and
mov
pop
mov
pop
inc
pop
in
mov
adc
sbb
mov
push
jae
cmp
insl
sub
sub
and
dec
icebp
loope
cwtl
mov
adc
adc
dec
pop
ret
push
jl
add
xchg
shl
sbb
jae
scas
divb
popf
sub
sbb
inc
mov
into
and
mov
add
das
cmpsb
xor
push
aas
movd
cmp
fst
pop
mov
clc
dec
inc
xor
mov
mov
add
push
sub
push
xchg
add
out
sti
xor
dec
pop
out
in
test
addb
push
cltd
mov
pop
hlt
mov
cmpsb
sub
jle
das
cmpsl
fcomip
mov
fistps
pusha
adc
add
addb
inc
jb
jecxz
or
cmp
push
jg
imul
es
shlb
mov
adc
loope
sub
or
push
jo
lock
jbe
pop
out
cmp
xor
imul
movsb
push
sbb
in
shl
pop
cmpsl
jnp
sahf
lods
mov
push
ret
push
rol
cmp
cltd
xor
inc
sahf
pop
cmp
insl
pop
mov
jbe
fs
jle
stc
push
scas
ljmp
cmpsl
jnp
pop
mov
cmpsb
js
rcrb
pop
fsts
ret
mov
xlat
jb
lret
loope
mov
bnd
add
xchg
jne
xor
jmp
pop
hlt
lds
mov
mov
leave
in
outsb
lea
in
inc
mov
nop
pop
dec
xchg
fisttpll
adc
mov
nop
xor
or
insb
into
jge
shrl
pop
loopw
ret
in
dec
ret
lcall
inc
rclb
test
and
push
jge
cli
xchg
shlb
sti
mov
sub
enter
outsb
cltd
mov
pop
lods
mov
movsb
lods
sub
push
push
popf
aam
mov
mov
daa
imul
mov
movsl
orb
adc
xchg
dec
cmc
out
xor
pop
adc
mov
add
pop
lock
push
lock
insl
cli
mull
in
cs
mov
xor
pushf
iret
lds
in
imul
push
fsubl
push
inc
lcall
decl
dec
sub
mov
mov
rol
ja
jg
movsl
cmpb
xchg
jl
push
cmpsl
and
lock
sbb
dec
call
adc
xchg
dec
icebp
fcoms
test
add
mov
pop
fwait
loop
xor
loopne
sub
aas
pop
outsl
pop
pop
or
fneni(8087
and
xchg
dec
push
mov
xchg
fdivs
cmp
sbb
or
mov
adc
push
hlt
inc
nop
ret
imul
sub
and
cld
fstpl
pusha
lcall
and
movl
cwtl
xchg
in
and
sub
lret
imul
inc
cmp
mov
push
add
repz
aad
mov
call
and
fnstenv
mulb
cld
mov
scas
dec
in
nop
sbb
cmc
in
pop
push
add
mov
lcall
mov
cmpsb
test
mov
jl
ja
pusha
ror
jmp
xchg
scas
stc
adc
or
and
mov
cmc
cs
cmp
es
je
shr
jmp
lods
and
mov
adc
pusha
ja
mov
xchg
lea
jmp
push
push
fcomps
icebp
xor
inc
jbe
fidivrs
cmp
or
inc
movsl
outsb
rcll
lret
repnz
xor
sbb
mov
fwait
lea
and
dec
sub
enter
in
mov
push
xchg
fisubl
or
popa
mov
jl
xor
lock
xchg
push
pop
rcll
cmp
mov
push
test
aam
or
mov
js
mov
test
daa
fmuls
inc
adc
addr16
insl
sbb
or
add
mov
mov
xor
mov
test
js
scas
jne
inc
and
sub
inc
and
or
mov
dec
lock
mov
rcl
and
clc
sub
jg
das
xlat
xor
int3
mov
ret
inc
xor
stc
cmovo
fiaddl
sbb
aas
das
orw
push
inc
mov
int
adc
test
or
ja
or
jo
aad
sub
cld
xor
cmp
cmp
lahf
test
jg
loope
shlb
sub
stos
shll
xchg
cwtl
jnp
scas
leave
push
push
push
push
je
imul
test
sub
aad
ss
mov
test
adc
lahf
rol
insb
mov
out
addl
out
out
out
adc
push
or
ljmp
cs
femms
test
dec
mov
add
sahf
lods
pop
push
sti
test
sub
movsl
push
mov
adc
ror
cmp
sbb
pop
sub
mov
cmpsl
sub
test
adc
fadds
jne
mov
ljmp
jmp
iret
clc
sub
aam
cli
mov
inc
fs
in
lret
mov
lahf
mov
out
popa
or
mov
es
sub
movsl
xor
push
insl
jl
xchg
pusha
xchg
pop
sub
addr16
hlt
pop
rorb
ret
inc
xchg
fcoms
push
mov
pop
and
adc
or
inc
cli
or
dec
and
scas
mov
or
ljmp
outsb
shlb
cmp
cmc
dec
mov
sbb
sbb
push
sti
outsl
mov
lock
repnz
jns
fdivrl
xor
pop
sub
into
shll
insl
fnstenv
lods
push
xchg
mov
and
jle
nop
sti
dec
fisttps
enter
xor
iret
aaa
pop
imul
adc
mov
or
add
in
outsb
jmp
mov
psubb
in
mov
mov
fwait
push
in
or
or
int
and
push
mov
es
add
push
into
js
add
pop
rcll
into
mov
dec
jns
xchg
and
cmp
xor
cs
sahf
and
rolb
jp
xchg
and
cmp
fistps
pop
mov
scas
dec
bound
aaa
fwait
clc
xchg
jge
inc
sub
popa
push
inc
mov
orl
push
imul
sub
lcall
sbbl
andl
push
push
aam
repz
dec
add
or
sti
popa
xorb
rolb
fldcw
push
dec
mov
cld
sub
mov
jae
lock
shr
mov
jmp
push
repnz
add
out
pop
sub
pop
movsl
sbb
icebp
mov
mov
mov
ret
lret
sbb
stos
or
es
std
in
xchg
addr16
sbbl
jge
xchg
or
xor
cmp
aas
inc
test
or
imul
dec
jg
xor
call
popa
jecxz
pop
pop
adc
jg
sbb
inc
iret
lahf
mov
negb
and
add
lods
pop
stc
int3
inc
out
dec
mov
xchg
push
rorl
mov
cmpsl
and
push
jecxz
sub
xchg
push
cmp
mov
push
bound
xchg
mov
mov
mov
jb
or
imul
das
and
mov
or
fstl
xchg
hlt
or
sbb
sbb
pop
in
cs
cld
add
je
push
sub
lea
into
push
in
jo
mov
push
mov
lods
adc
outsl
test
icebp
lods
test
lods
test
sti
xor
in
mov
mov
cmp
js
pusha
push
and
dec
js
lea
xorl
mov
repz
jp
fisubl
outsb
xor
mov
or
lock
push
inc
inc
lcall
movsb
push
call
mov
inc
xchg
mov
xor
mov
jle
out
pop
cs
cmp
repz
jp
fs
push
scas
ss
xchg
xchg
das
test
dec
xorl
pop
rcr
data16
rcpps
ljmp
push
pop
push
pop
push
cld
and
lret
push
jae
push
popa
xchg
bound
sbb
mov
dec
cmp
dec
shrl
cmp
adc
mov
add
arpl
insl
push
lcall
in
push
adcl
pop
popf
push
dec
out
xor
pop
roll
nop
cwtl
in
bound
jae
sub
sti
push
das
push
push
inc
dec
ret
and
imul
xchg
mov
ss
pop
sub
stos
mov
sub
mov
icebp
or
sbb
rorl
adc
add
fnstenv
dec
jp
xchg
sub
test
aam
icebp
push
jno
lods
pop
dec
or
adc
inc
dec
js
cmp
xchg
mov
mov
or
sbb
sti
shl
inc
in
js
mov
sbb
lods
inc
xchg
pop
push
cs
addb
and
pop
fwait
adc
movsl
jo
in
loop
or
jae
bound
dec
scas
dec
xchg
cmp
scas
or
or
cmp
lret
je
cmpsb
fwait
mov
jne
out
popa
ss
adc
daa
adc
xchg
shrb
pop
xchg
fistpl
stos
test
icebp
shl
lcall
mov
pushf
pop
int3
jbe
jb
jnp
add
xchg
enter
test
xchg
mov
add
repz
cld
pop
arpl
stos
mov
lds
jg
data16
shlb
cwtl
push
mov
mov
lods
or
insl
jecxz
xchg
scas
fcompl
orl
stos
sub
cmp
cmp
rclb
incl
sbb
mov
ret
adc
cld
push
movsl
into
mov
aas
inc
mov
sub
sub
sbb
inc
rcll
jo
mov
sbb
out
mov
jb
xlat
and
dec
dec
or
jle
adc
loope
mov
or
int
jle
xchg
sub
dec
xor
mov
in
inc
addb
bound
sub
push
ret
fcmovnb
push
enter
andb
sahf
and
ljmp
dec
and
jp
sbb
inc
dec
cli
mov
cmp
mov
inc
or
adc
je
in
pop
mov
mov
stos
pop
pop
lds
lock
and
xchg
fsubrs
into
into
std
sub
imul
leave
cmp
sbb
mov
les
js
dec
cmp
cmp
or
cmpsl
add
aaa
lcall
test
mov
shrl
add
sbb
pop
push
pop
mov
and
lods
mov
sub
mov
cld
test
adc
ficoms
mov
lds
sub
pop
mov
ljmp
pushf
testb
sub
jecxz
mov
inc
sbb
inc
or
jae
sbb
test
lock
ja
sub
mov
pushf
xor
and
mov
popf
and
repz
cli
lret
pusha
test
push
jmp
loopne
jne
jle
out
stc
cmc
imul
or
aas
or
clc
ja
cmp
mov
dec
ds
sbb
nop
push
sub
add
cs
cmc
cmp
in
pusha
push
add
fcmovnb
jl
and
out
cltd
shrl
mov
mov
dec
inc
and
mov
popa
xchg
je
imulb
ds
cli
inc
push
adc
stc
arpl
sbb
lcall
fisttpl
pop
xor
push
xchg
add
inc
jb
ret
sbb
repnz
push
lea
add
mov
or
mov
sbb
icebp
insl
mov
nop
bound
js
fidivrl
mov
sub
test
inc
pop
mov
mov
jp
lods
aam
mov
pop
xchg
or
mov
std
sub
dec
cmp
into
adcl
sub
fadds
rclb
rol
fsubrs
pop
outsl
inc
dec
inc
mov
lock
and
add
pop
mov
dec
and
xchg
pop
or
inc
xbegin
xchg
push
jecxz
jnp
addr16
stc
insb
repnz
xchg
pop
scas
xor
lea
incb
movsl
cmc
shll
mov
or
data16
pop
mov
dec
fldenv
call
dec
xchg
cld
fwait
sbb
test
stc
sbb
push
xchg
adc
inc
cmp
lret
in
push
or
inc
sbb
fdivrs
or
fisubl
jmp
mov
test
insb
jbe
adc
and
mov
or
or
xor
rol
mov
push
inc
push
sarl
addr16
xor
sahf
popa
mov
mov
xlat
push
sar
faddl
jge
nop
add
sub
sarl
lock
inc
sahf
out
xchg
sbb
cmp
cld
mov
std
pop
mov
jg
xchg
addb
and
sbb
add
mov
rolb
cltd
pusha
pop
dec
shrb
mov
ja
mov
cwtl
xchg
or
bound
sbb
shrl
das
loopne
repnz
pop
dec
call
pop
push
testb
ja
ret
in
dec
mov
sbb
arpl
mov
push
add
daa
mov
into
and
sbb
xchg
pop
es
dec
push
push
cli
mov
cs
arpl
mov
stos
mov
mov
pushf
sarb
out
jge
ret
lds
push
inc
inc
dec
mov
cmp
sbb
add
cmp
cli
stos
mov
pop
popf
das
push
aad
sub
push
push
sbb
test
mov
gs
sti
movsl
pop
push
bswap
jp
sti
shll
scas
mov
add
fildl
mov
cmpsb
mov
pop
mov
cmc
int
in
test
in
cs
fstpt
cmp
int
repnz
or
inc
push
xchg
sbb
push
mov
adc
sub
push
movsl
rcr
jge
ljmp
xor
rcr
flds
enter
int
shlb
jb
mov
mov
fsubl
gs
inc
popa
movsb
les
sbb
cltd
adc
daa
cld
dec
pop
mov
mov
imul
stos
xchg
xchg
mov
xchg
sub
mov
cmp
in
and
xor
sbb
insb
mov
xlat
loop
sbb
popf
lea
stos
push
pop
negl
cmpsl
test
out
jnp
xor
and
mov
or
sub
and
mov
mov
stos
pop
daa
out
shlb
inc
int3
xor
shlb
mov
imul
sbb
jb
inc
shlb
jne
jae
cmpsl
adcl
scas
aaa
pop
xchg
lret
lret
pop
jns
mov
call
stos
inc
daa
mov
loopne
ret
cmp
dec
mov
inc
xor
mov
shlb
sbb
aad
loopne
sahf
cmc
and
lret
push
daa
aam
rcrb
fwait
sub
adc
lds
inc
pushf
leave
sub
push
scas
and
or
outsb
vandnps
vucomiss
inc
xchg
xchg
aas
push
roll
push
inc
imul
or
test
into
mov
push
mov
mov
test
ja
jns
lds
cwtl
scas
cltd
xchg
ret
loop
xlat
test
sub
ds
or
test
and
jg
lds
jno
mov
cld
jecxz
xchg
or
sbb
sub
aad
cmp
add
fdivs
dec
in
jnp
dec
push
jo
and
add
cmp
cmp
mov
sahf
adcl
enter
mov
ret
fdivr
pop
and
push
mov
push
and
adc
hlt
mov
fwait
mov
arpl
fistpll
push
mov
pop
pop
lea
movsl
adc
cmpsb
sbb
sbb
dec
dec
xchg
jne
and
and
mov
or
aad
cmpsb
insl
sti
push
int3
inc
mov
loope
cmpsl
incb
sub
mov
xor
insl
xor
mov
push
enter
loopne
mov
insb
pop
sub
in
mov
lock
jbe
adc
jecxz
sub
mov
jno
out
push
mov
nop
repnz
loope
xchg
jne
mov
mov
ja
addl
inc
movsb
in
loop
fwait
hlt
pop
mov
rol
call
jle
cwtl
insl
icebp
imul
push
aaa
inc
and
mov
mov
pop
sbb
imul
bound
aaa
rcll
push
sbb
dec
adcb
je
test
mov
rcrl
fbstp
cmpsb
jns
mov
fdivs
fs
pop
mov
lcall
mov
jnp
sbb
shl
cs
mov
mov
icebp
int3
xor
adc
repz
rorb
outsl
mov
sbb
lret
jns
mov
bound
jbe
fmuls
inc
push
mov
and
popa
call
cmpsl
sub
push
xor
insl
add
dec
outsb
in
jmp
xchg
iret
cltd
sbb
hlt
jae
sbb
popf
out
sbb
jb
imul
bound
dec
out
pushf
xchg
and
mov
scas
sti
jb
jp
and
xorl
and
bound
xor
or
mov
inc
out
jns
jle
push
jmp
sub
mov
stc
fists
test
inc
or
fnsaves
adc
jne
int3
and
aaa
imul
xor
sbb
test
xchg
mov
or
or
sub
rorl
or
in
mov
sbb
fsubrl
outsb
aam
mov
cmp
push
cmovnp
lods
mov
iret
jp
cmp
and
movsb
lods
mov
mov
or
lock
das
inc
imul
repz
inc
push
stos
je
and
lods
pop
fsubrl
push
lcall
xchg
jle
sti
repnz
xchg
leave
push
fimuls
push
or
bound
pop
or
jg
xor
sub
fs
xlat
ret
cmpsb
stc
xor
or
fdiv
cmpsl
sub
iret
cmp
inc
mov
or
out
jp
repnz
cmpsl
mov
sub
and
gs
aaa
test
sbb
and
or
in
push
mov
mov
jecxz
shll
testl
pusha
jmp
inc
aaa
icebp
fwait
rorl
cmc
out
imul
test
or
dec
mov
pop
dec
mov
insl
mov
or
push
inc
dec
outsl
test
cmp
mov
movsl
lahf
js
push
fiaddl
dec
fwait
sbb
pop
les
adc
lods
push
test
and
aam
pop
pop
dec
dec
jnp
cmp
fsubrs
mov
mov
in
loop
filds
cs
or
cs
xor
pop
mov
cmp
mov
push
mov
sub
inc
pop
push
gs
add
and
cmpsb
popl
out
sub
arpl
outsl
mov
inc
lret
ret
xchg
in
sub
lock
jle
pop
mov
xchg
lret
rcrl
andl
xchg
cli
addr16
jbe
les
dec
push
or
mov
mov
sub
fs
mov
mov
es
mov
mov
cwtl
enter
pushf
dec
fsubrp
pop
mov
lods
jno
sub
int
arpl
into
or
nop
pushf
jmp
stos
inc
xchg
dec
mov
bound
aad
fisubrs
inc
jno
enter
adc
stc
dec
pushf
fwait
add
sbb
xor
jg
xchg
scas
jmp
push
pcmpgtd
pop
add
lods
dec
shlb
push
mov
arpl
push
outsl
xor
cmpsb
rclb
test
add
outsl
icebp
loopne
adc
xchg
dec
hlt
dec
xchg
std
fs
ret
fnsave
out
sti
add
icebp
loopne
clc
das
pop
mov
adc
in
pop
or
sbb
xchg
test
lcall
cmp
mov
sahf
mov
pinsrw
das
jmp
lock
sbb
xor
rorb
xor
stos
xor
les
ljmp
pushf
lods
inc
cmp
addr16
out
roll
fistps
pop
mov
cmp
clc
cmc
mov
adcb
add
cmp
mov
sub
rcl
icebp
into
scas
sub
fsubrl
add
popf
jb
push
inc
lock
pop
lock
ss
nop
leave
add
filds
sub
ds
lock
test
mov
andb
xlat
xor
lea
rcr
nop
rolb
aam
data16
push
mov
sarl
aas
inc
sub
cmpsl
js
lods
data16
and
imul
loopne
jno
adc
lods
imul
in
lret
call
enter
mov
rep
movsb
jle
add
push
sub
dec
or
dec
cwtl
pop
test
push
sbb
add
test
cli
cmp
mov
ds
xor
shlb
insb
ljmp
jae
icebp
jns
push
xor
outsb
ljmp
daa
sub
loopne
das
fimuls
lods
cmpsb
sub
jne
cmp
mov
jecxz
inc
lds
and
mov
mov
repnz
pop
inc
xchg
xor
mov
bound
jmp
repnz
inc
xor
je
push
test
lods
popf
and
lcall
in
movsl
inc
xchg
out
jbe
cmp
jmp
popa
imulb
cld
mov
shll
push
cmc
loopne
xchg
adc
ret
les
add
xor
xchg
jb
dec
das
mov
movb
mov
pop
pop
xchg
sub
js
cmp
add
lock
sbb
scas
cli
mov
ja
xor
popf
nop
jle
and
test
sbb
fcomps
xchg
das
inc
in
mov
outsb
sbb
xchg
mov
cmc
sub
cmp
pop
mov
testb
or
sbb
jle
xchg
push
pop
in
sbb
fbld
in
push
cmp
cld
test
cmp
add
mov
xor
mov
outsl
cmpsl
sbb
cmp
or
xchg
push
cld
inc
ljmp
adc
jl
fs
call
loopne
aam
adc
sti
mov
sub
sbb
cmpsb
mov
push
mov
xchg
sysexit
cmp
nop
rcrb
push
mov
es
in
xor
shrl
andb
dec
inc
inc
rcrb
xchg
jbe
out
mov
clc
test
sub
scas
or
sub
mov
test
mov
cmpsl
jmp
xor
mov
iret
movsb
xchg
jnp
pusha
cli
mov
mov
cmp
outsb
or
sbb
ja
in
mov
add
fwait
xor
pop
mov
pop
mov
jge
sbb
adc
into
test
add
jne
and
in
inc
push
and
sub
jecxz
mov
orb
push
clc
and
mov
lods
sub
cmp
mov
mov
sub
push
xor
inc
pop
jl
xchg
inc
inc
aad
inc
push
dec
lds
jmp
push
jp
lea
loop
pop
js
mov
lea
lea
and
pop
cs
insl
out
xchg
mov
mov
lcall
pop
imul
sbb
jb
mov
pushf
pop
sahf
out
jne
je
adc
cmp
pop
cld
lds
inc
xchg
lret
jge
pop
sub
pushw
mov
cwtl
pop
inc
jge
and
or
mov
insb
jae
inc
lahf
sbb
lret
sub
nop
out
pushf
test
mov
test
xor
mov
outsb
loop
stc
inc
shrb
push
dec
mov
pcmpgtb
xchg
insl
lods
fs
stos
popf
mov
hlt
mov
jbe,pn
jp
fsubrl
cmp
mov
sbb
jg
mov
xor
sti
int3
lahf
or
rol
jne
jns
jo
inc
aas
das
jae
int3
mov
out
ret
xchg
leave
pop
jnp
orb
imul
mov
cli
push
mov
push
imul
mov
cltd
inc
mov
sbb
sub
jmp
pop
xor
test
in
mov
fidivrs
pop
push
bound
out
mov
jp
movsl
adc
sub
and
jbe
cmpsl
es
fcmovu
lods
jno
jmp
lcall
adc
sbb
lahf
icebp
pushf
pop
mov
push
lcall
sahf
mov
and
push
mov
int3
stos
in
xor
push
adc
mov
lahf
in
push
pop
push
add
xor
icebp
nop
lret
movsl
cmp
or
clc
jne
pusha
gs
jecxz
xchg
jns
out
mov
popf
enter
outsb
mov
xor
stc
jne
test
sbb
mov
js
rcl
and
in
repnz
xchg
dec
adc
sahf
pop
scas
and
cli
pushf
xchg
sbb
divb
push
divb
jl
mov
xor
sbb
dec
xchg
sbb
xchg
and
sbb
stos
ljmp
or
lock
lret
push
xor
les
push
loope
std
mov
sub
pop
push
fldl
xor
mov
aas
inc
scas
loopne
xchg
adc
pop
cld
movsl
pop
mov
sarl
fisubrl
jo
mov
push
jg
pop
nop
dec
orl
outsb
xchg
pop
fdivs
sbb
aam
std
sub
sbb
aas
pusha
out
cmp
lds
mov
int3
mov
lods
in
in
out
xor
sub
mov
mov
jns
sbb
in
pushf
adc
mov
pop
data16
add
mov
jecxz
or
test
pop
insb
mov
add
dec
mov
mov
push
leave
ret
push
jo
xchg
xchg
call
in
icebp
stos
fsubrs
mov
dec
outsb
push
mov
movsl
sar
xor
jmp
mov
cmp
leave
enter
jae
push
inc
sbb
test
or
ljmp
inc
dec
push
stos
rcrb
inc
cld
mov
cmp
add
cli
xchg
inc
incb
mov
lret
and
and
cmp
rcrb
and
prefetchw
mov
or
jle
call
js
rcll
xchg
push
shll
test
xor
ja
add
mov
frstor
mov
xchg
jge
es
out
bnd
jecxz
mov
ja
leave
pop
mov
sub
adc
clc
pop
or
popa
push
incb
push
rcr
fs
push
push
ds
int
mov
inc
fsts
mov
idiv
cld
mov
imul
arpl
insb
fbstp
sub
cmp
pop
mov
sbb
sbb
pop
jnp
hlt
sbb
dec
sub
xor
sbb
xchg
xchg
push
mov
mov
or
loop
in
push
jp
inc
jo
sbb
pop
and
ficoml
ss
xor
jecxz
mov
or
push
movsl
add
mov
sub
lods
outsb
imul
scas
into
stc
repz
mov
sub
aad
adc
adc
sbb
xor
xor
test
imul
clc
loope
sbb
aam
mov
xchg
xchg
div
fwait
jle
shrb
sbb
lods
inc
in
xchg
xlat
cmp
popa
nop
pushf
dec
mov
cli
xor
dec
dec
mov
dec
push
add
out
pop
push
xchg
cmp
dec
and
out
inc
sub
jmp
cltd
add
adc
mov
sti
test
jecxz
cltd
inc
movsb
fsubr
xor
or
sarb
cmpsl
pop
xchg
in
call
and
xchg
mov
insb
notl
cmpsb
pop
mov
in
leave
data16
or
pop
aas
aas
mov
lahf
into
jne
aam
jp
mov
in
xor
je
fwait
insl
mov
mov
sub
sbb
mov
inc
add
rorb
cmp
loop
cmc
push
test
jnp
cmp
pop
push
fsubl
mov
dec
push
ffree
mov
pusha
hlt
popf
inc
das
cmp
ja
pop
mov
mov
cwtl
sbb
xchg
push
sbb
jo
loope
dec
shll
hlt
sbb
jne
daa
push
pop
xchg
jge
cmpsl
xchg
mov
xor
ds
stc
mov
xchg
jge
aam
ret
or
pop
fistpll
loop
aaa
push
xor
scas
jecxz
inc
imul
imul
mov
fs
jp,pn
bound
ret
add
ret
outsb
xor
loop
pop
add
cmovs
lods
les
ljmp
subb
adc
test
sbb
adc
or
pusha
icebp
stos
gs
pop
mul
or
pop
push
movsl
adc
test
sahf
cmpsb
loop
xor
lock
push
fnstsw
inc
clc
lahf
push
xchg
sub
out
loopne
adc
xor
imul
scas
and
adc
sbb
push
mov
or
xchg
cmp
inc
cmp
xchg
or
lret
aad
pop
pop
test
jp
pop
fistpl
fwait
test
aaa
fiadds
pop
mov
sub
or
dec
movsl
jne
aad
daa
ds
mov
pop
pop
dec
mov
jnp
loop
or
jnp
les
xor
lods
idivb
push
jmp
addl
sbbb
xor
pop
add
dec
add
daa
mov
jle
or
xchg
fs
roll
pushl
or
jno
cwtl
jo
lds
pop
movsb
xor
outsb
mov
ds
cmp
jmp
mov
shr
pushf
imul
pushf
or
popf
mov
lds
or
jl
push
fst
sbb
cmp
push
les
xor
fadds
pop
and
frstor
lea
scas
int
ss
inc
lock
pop
push
mov
pop
and
jnp
jp
out
imul
dec
dec
cmpsb
into
xor
add
stos
fptan
mov
adc
mov
jecxz
xlat
or
inc
and
call
mov
pusha
loope
add
jbe,pt
idivb
mov
cmc
mov
shr
sub
jmp
inc
fiaddl
dec
jecxz
pop
cli
in
pop
pop
inc
sub
fcoms
test
lahf
mov
jbe
movzbl
pop
adc
add
xchg
popf
and
lret
addb
sub
into
pop
movsb
jb
in
subl
int
int
repnz
cmp
dec
jno
sbbb
mov
and
jo
xor
hlt
test
es
in
bound
xchg
js
add
arpl
movb
dec
call
push
push
popf
hlt
push
push
xor
cmp
mov
scas
in
adc
sub
outsb
rolb
aaa
lret
scas
call
jle
repz
imul
pop
and
loopne
mov
mov
push
pop
mov
or
addr16
mov
xor
xor
mov
leave
cmp
les
dec
xchg
mov
bound
movsl
and
out
lock
jl
xor
int
ret
test
clc
inc
jg
inc
in
cmp
enter
fnstcw
jmp
mov
in
in
sbb
xchg
sbb
xchg
mov
fsubl
clc
movsl
aas
cmp
fstp
sahf
sbb
stos
sahf
addb
dec
push
negl
xchg
pop
push
ja
xor
das
xchg
into
sbb
adc
add
out
and
pop
notrack
xchg
pop
push
scas
cmc
jl
mov
fmuls
insl
mov
xor
xor
or
sbb
add
inc
das
mov
dec
mov
push
add
cli
dec
or
aam
ljmp
enter
mov
in
add
and
mov
fmull
scas
cld
popa
jns
sbb
jmp
pop
imul
out
pop
sub
call
ss
mov
push
std
cld
imul
adc
mov
push
mov
repnz
pop
cld
inc
push
jmp
pop
mov
dec
outsb
aas
orl
aad
cmp
mov
and
fistl
lret
hlt
das
or
dec
xchg
out
nop
mov
mov
add
or
pop
sub
mov
xchg
fistpl
lcall
popf
xchg
dec
push
enter
imul
data16
int
mov
inc
push
lods
sub
mov
btr
push
in
icebp
mov
loop
and
sarl
test
sub
daa
jns
push
mov
roll
arpl
hlt
mov
jbe
ljmp
pop
sub
ficoml
repz
movsb
dec
mov
pop
leave
xchg
mov
mov
mov
push
mov
and
cld
xchg
dec
lcall
cld
xor
ds
call
lea
rorb
sub
lods
popa
mov
pop
inc
scas
mov
and
es
dec
es
jnp
jl
imul
jle
negb
aam
add
pop
lcall
jne
sub
dec
cmp
adc
icebp
cmp
dec
add
xchg
cmc
mov
jno
in
cmp
push
jns
fucomp
inc
addr16
fsubrl
cltd
push
mov
mov
push
add
out
in
sub
push
scas
ret
add
push
xchg
jno
push
data16
movsl
dec
cltd
xchg
jg
leave
cmp
cmp
imul
sti
fsubrl
int3
cli
push
pop
mov
test
shrl
repnz
mov
inc
pop
rolb
notl
or
ror
rcrb
mov
repz
jmp
stos
js
and
and
insb
lcall
and
mov
xchg
xchg
fldenv
stos
lcall
gs
fistl
fldt
push
inc
xlat
adc
fs
fisubrl
mov
jo
sub
pop
leave
xchg
sub
sub
lahf
adc
jmp
dec
cmp
pusha
pop
cmpsb
xchg
sbb
rclb
std
shll
mov
out
sbb
lods
pop
and
push
sbb
imulb
in
aam
loop
outsl
mov
xchg
cmc
fisttps
in
test
int3
sub
pop
imul
test
sahf
xor
test
dec
fisttpll
bound
pop
jge
mov
pop
xlat
inc
mov
cld
cmc
cld
jnp
adc
arpl
mov
in
inc
mov
cwtl
lock
cmp
sti
mov
gs
fwait
ljmp
cmpb
dec
push
xchg
sub
flds
test
mov
das
sub
cmpb
cli
inc
lret
lcall
subl
sarl
notl
sub
sbb
das
ss
scas
outsl
pusha
mov
test
fwait
or
fs
sbb
ror
call
adc
rorb
or
cmp
pushf
pop
rolb
jle
inc
and
dec
stos
xchg
mov
fcmovnu
ds
shll
mov
repnz
lods
fyl2x
inc
data16
shll
pop
inc
sbb
imul
test
in
inc
xchg
lret
adc
les
jecxz
mov
jnp
icebp
lret
notl
cltd
repz
pop
sbb
ss
ficompl
movsb
int3
mov
and
loop
pop
mov
fisttps
xchg
movsl
call
lahf
test
cmp
sbb
inc
pop
adc
push
jmp
pop
testb
insl
add
jno
xor
jae
adc
in
cmp
xchg
and
or
mov
jmp
sbb
cmpsb
sbb
push
xchg
popf
push
cmc
add
fwait
xor
pop
jae
fsubs
xchg
dec
add
pop
cld
ja
mov
mov
scas
push
sub
xchg
popa
mov
test
cli
lahf
jle
sti
stos
clc
fidivrl
sub
xor
movsl
sahf
lahf
hlt
repz
jbe
outsb
ret
loope
sub
pop
loope
adc
cld
mov
jl
jp
adc
xchg
loope
arpl
xor
outsl
or
pop
pushf
push
push
outsb
or
insl
outsb
stos
push
loopne
iret
inc
cli
mov
arpl
cmp
or
int
push
mov
aam
inc
sbb
mov
push
pop
cmp
jecxz
adc
lea
into
xchg
inc
lahf
jle
add
mov
sbb
xchg
mov
mov
mov
jmp
lock
lret
test
add
pop
ret
popf
push
and
repz
subl
call
lea
arpl
fwait
lret
fs
xor
jge
pop
jp
popa
xchg
out
cmpsl
pushf
jns
dec
xor
jnp
jp
xor
xchg
add
aas
xchg
inc
adc
dec
push
sarb
stos
mov
data16
repz
divb
mov
sub
fldl
jge
std
jb
out
leave
dec
or
xchg
ror
jne
xchg
jecxz
shrl
lahf
lods
fimull
and
mov
das
mov
lock
xchg
ret
sbb
ficoms
fisubrl
mov
insb
lret
sar
pushf
sub
dec
dec
sub
cmc
arpl
adc
in
pop
dec
or
pop
sub
movsb
xor
push
xchg
mov
inc
in
call
scas
js
rolb
rol
lret
jp
mov
loopne
test
lret
call
lods
mov
cmp
mov
mov
inc
leave
xor
test
mov
adc
fmuls
jg
enter
jg
call
test
hlt
jo
xor
clc
and
sarb
sub
orl
dec
push
dec
jge
jne
lea
loop
push
sbb
mov
xlat
inc
jge
daa
sbb
mov
repz
sub
add
filds
das
dec
inc
push
enter
add
dec
inc
jge
arpl
push
sbb
test
sbb
pop
mov
xchg
cmp
cmc
test
pop
out
arpl
rcrl
xor
push
inc
cltd
dec
lahf
mov
inc
iret
imul
dec
add
sbb
mov
loop
lret
pushl
outsl
ret
repnz
adcl
mov
pop
push
sub
in
push
dec
adcb
bound
mov
cmc
outsl
lods
mov
xchg
or
cmp
gs
rorl
insl
push
cmp
and
push
xchg
pop
pop
imul
xchg
jmp
stc
fstps
jae
jg
and
ss
pusha
xor
cld
pop
addl
js
andb
sub
xor
daa
ret
xchg
sbb
outsl
dec
dec
shlb
sbb
popa
jnp
fiaddl
xor
out
movsl
mov
adc
pop
push
xor
mov
add
iret
ljmp
and
cmpsl
mov
addr16
jno
cmpsl
push
push
call
lcall
into
dec
movsb
xor
mov
xchg
push
fld
out
les
lea
mov
inc
scas
sbb
xchg
cli
add
das
mov
scas
xchg
pop
pop
icebp
pop
repnz
insb
in
cld
aaa
mov
in
mov
lret
mov
xchg
test
dec
push
mov
sbb
push
fildll
rcll
mov
push
ret
stos
repz
in
int
and
mov
mov
xor
lcall
sbbl
call
out
inc
out
imul
and
push
cmp
dec
adc
mov
pusha
mov
xor
xor
icebp
in
scas
movsb
mov
jecxz
out
pop
pop
or
loop
sub
cmp
mov
jb
sub
popf
loopne
xchg
stos
sarl
pop
clc
mov
jo
pop
das
cwtl
call
lock
xor
lods
adc
sbb
and
add
loop
popa
mov
adc
test
ss
inc
sub
push
and
cwtl
fldcw
push
sahf
jne
out
stos
mov
out
inc
xchg
fmulp
sub
mov
jo
jmp
cmp
push
leave
in
out
cmp
fstl
dec
cmpsl
dec
inc
in
jbe
jns
repz
imul
int
popa
fs
push
popf
call
ja
jl
das
clc
stos
cmp
adc
popa
add
lds
test
push
cmp
sbb
jmp
data16
daa
imul
push
jo
icebp
push
mov
enter
inc
lahf
jae
adc
jo
sub
push
add
popl
add
cmp
jmp
pop
xor
int3
xchg
out
in
imul
outsb
cmp
add
push
and
sub
push
dec
lahf
mov
daa
aas
in
decb
aaa
push
leave
leave
mov
pop
xchg
add
rolb
sub
leave
pop
cmc
mov
out
movsb
iret
pop
addl
outsb
inc
sub
out
aad
cmpl
fsubr
and
repz
dec
sbb
inc
mov
jb
mov
mov
sbb
and
jno
orb
xchg
pop
fdivrl
mov
fstpt
mov
push
adc
jle
inc
jl
cmp
aad
push
xchg
sub
sub
sarl
or
jb
mov
ja
mov
adc
cmpsb
pop
dec
inc
cmpsb
sbb
mov
mov
cltd
into
fsubrs
sbb
fdivr
inc
adc
mov
sub
inc
jne
loope
pop
cld
inc
adc
mov
add
fistps
xchg
sbb
addr16
dec
fcmove
das
fwait
sarl
push
test
mov
and
and
adc
inc
sbb
popf
mov
mov
shrb
mov
sbb
xchg
lds
rol
dec
or
es
daa
mov
jbe
mov
mov
xor
push
aad
adc
pop
jno
jo
pop
loopne
pop
mov
push
fsubrp
cld
test
outsl
fiaddl
or
nop
lret
mov
loop
aam
or
in
daa
adc
addr16
loopne
push
sbb
stos
mov
ss
add
push
popf
cmp
fsubrs
out
add
jecxz
xor
mov
rclb
mov
xchg
cmp
push
xor
fstpl
aas
adc
imul
lcall
xlat
lret
sub
sbb
loop
inc
add
and
mov
rclb
enter
movsb
dec
divl
les
mov
call
cmpsl
dec
jmp
sub
add
inc
add
dec
clc
lea
inc
jne
or
or
xchg
xor
dec
push
in
es
add
jae
mov
xchg
and
jmp
push
test
dec
push
in
mov
gs
icebp
loopne
xchg
xchg
adc
xchg
movsl
sbb
rcr
daa
and
adc
mov
xchg
push
adc
mov
sub
lret
gs
sub
ret
dec
aad
notb
fimuls
arpl
scas
add
xchg
ds
in
pop
cld
cmpsl
sub
lods
push
inc
dec
movsl
lahf
or
push
adc
push
jl
andl
jp
mov
das
pop
adc
pop
push
test
pusha
or
fcomi
cmp
inc
and
or
fwait
rolb
out
pop
enter
les
addr16
shll
fcmovnu
outsl
xchg
add
out
popl
dec
mov
in
xchg
scas
xchg
cmpsb
fldl
gs
test
arpl
lret
iret
jmp
cld
push
and
mov
ljmp
mov
out
std
xor
cwtl
jge
and
sub
cmp
pop
cmp
mov
push
int3
and
or
repz
adc
adc
jecxz
enter
stc
arpl
dec
inc
pusha
mov
ret
testb
xchg
push
jno
cmc
insl
lea
cmc
push
jns
out
adc
mov
add
add
ds
jp
lret
scas
popf
aas
add
lret
ret
popa
mov
cltd
mov
cmp
outsb
add
fisttps
xlat
xchg
dec
push
repnz
sub
mov
jg
lahf
into
negl
in
lcall
popf
sbb
test
jae
cmp
mov
xor
into
jno
fstpt
pop
mov
scas
or
adc
stos
sbb
cmc
movsl
popa
cmp
or
xor
mov
cld
test
test
push
out
ficoms
ret
xchg
cwtl
dec
cmp
pop
xchg
cmp
push
push
into
sarb
jecxz
mov
mov
pop
cs
pop
xchg
cmpsb
push
add
out
cltd
and
dec
jnp
push
test
inc
adc
aam
test
ds
fldcw
xlat
gs
jg
pop
outsl
idivb
push
insb
mov
pop
outsb
in
icebp
push
dec
lret
dec
andb
inc
int
out
or
xor
push
insb
loope
mov
dec
rol
hlt
jno
cmp
dec
lea
jo
es
aas
aaa
enter
mov
into
rol
mov
idiv
or
ja
dec
mov
icebp
push
ja
jp
add
pushf
ficoml
xchg
pop
mov
dec
mov
or
add
gs
aaa
pop
jb
push
sbb
push
call
loop
aaa
xchg
std
aas
xorl
in
sbb
xor
mov
das
or
scas
insb
or
dec
mov
xchg
das
mov
mov
mov
xchg
ja
stc
sbb
cmp
das
cltd
push
and
adc
test
pop
arpl
fsubr
jge
xor
jns
bound
insl
sub
pop
subb
mov
cmp
in
dec
lahf
mov
lea
jo
xor
cmp
mov
inc
aad
add
cld
movsb
lahf
orb
xchg
dec
jmp
pop
das
ja
cmpsb
mov
adc
lods
pop
adc
insb
xchg
je
daa
ret
jns
stos
sbb
dec
iret
loopne
xor
imul
ret
sahf
in
fmull
sbb
call
xlat
pop
out
inc
xorl
xor
cli
or
xchg
lods
cmp
test
mov
ljmp
or
push
fstp
dec
dec
stc
xorb
jns
and
add
adcb
aas
fisttpll
das
xor
movsl
mov
cwtl
pusha
pop
push
addr16
mov
ljmp
sub
clc
loope
sbb
pop
xchg
push
repnz
xor
in
add
arpl
rorb
fisubl
mov
xchg
add
xchg
fs
jl
mov
sub
dec
sub
sbbl
inc
mov
inc
jl
xor
xor
jns
xor
mov
sub
movsb
push
push
mov
cli
and
setg
insb
cld
mov
jbe
les
outsl
fnstcw
or
mov
stos
std
sar
xchg
pop
sub
ret
xor
xchg
cmp
in
or
out
rorl
jns
sahf
and
and
lahf
stc
movsb
mov
inc
and
insb
pop
sub
adc
sarl
aam
jbe
dec
pop
stos
in
sub
jns
sbb
xchg
adc
pop
inc
push
jg
testb
pop
cli
cmpsl
daa
adc
das
sarl
clc
mov
mov
fcoms
push
jg
popl
xchg
repnz
dec
sub
mov
jnp
pop
in
cld
fwait
in
jmp
add
sub
je
cmp
loopne
add
movswl
movsb
stc
mov
and
xlat
pop
aad
addr16
fsubrs
push
sbb
stos
pop
shll
iret
popa
ljmp
dec
out
in
into
mov
insb
insl
mov
jnp
rclb
dec
pop
shll
jmp
out
add
lock
pop
jbe
jnp
shlb
into
repz
cmp
out
xor
scas
jmp
ret
jb
and
lods
adcl
shlb
xchg
dec
fdivp
xor
decb
fcmove
mov
or
les
sbb
mov
test
mov
sbb
stc
sahf
cwtl
add
je
lock
push
pop
xor
sti
xchg
add
pop
jl
movsb
xchg
lods
xor
sbb
scas
mov
into
rcll
outsb
aas
dec
sub
loope
jecxz
adcl
out
jmp
xchg
cmpsl
mov
fwait
sbb
inc
sub
stos
aaa
out
movsl
inc
fisubl
sbb
xor
cmpsl
pop
aas
adc
dec
pop
jmp
test
jnp
xor
dec
cmp
sbb
divl
jmp
push
fidivrs
inc
ljmp
lahf
adc
xchg
lahf
sub
jnp
sbb
loopne
add
pushf
pop
inc
outsb
sarb
out
lea
jg
push
lahf
jmp
sub
push
fiaddl
mov
fimull
shlb
add
out
xchg
adc
add
jne
mov
mov
jnp
mov
mov
push
and
popa
mov
repz
pop
movsl
mov
movsb
leave
add
es
push
and
idivl
mov
add
sub
rorl
pop
pop
cs
mov
into
ja
cmc
mov
iret
add
lods
ja
inc
dec
das
mov
xchg
xlat
les
repz
sub
xchg
push
or
xchg
notl
loop
scas
testb
sub
int3
and
inc
gs
or
cmp
jnp
cmp
pop
aaa
mov
cmpsb
addr16
cmp
jnp
out
mov
cmp
faddl
jg
cmp
dec
imul
pop
or
movsl
dec
mov
xchg
dec
arpl
lcall
dec
int3
pushf
dec
popa
gs
pop
cmp
cmpsl
jno
pop
jl
and
aam
js
xabort
lret
lock
mov
sbbb
xor
test
cmp
aad
mov
cmp
ljmp
xchg
fisttpll
xchg
dec
cmp
jnp
inc
sub
lods
add
pop
and
in
mov
or
jmp
mov
into
cmp
mov
ljmp
inc
stos
cmpsl
test
cmc
or
icebp
faddp
xchg
in
lock
mov
xor
cmc
fstps
mov
inc
jne
and
xor
call
and
push
adc
int
idiv
pusha
sub
imull
orb
sti
push
xor
lret
or
and
add
inc
test
xchg
or
sbb
or
pop
cmp
push
lods
mov
pop
lods
jge
dec
sbb
xchg
ret
fisubl
and
sub
imul
push
inc
pop
nop/reserved
inc
out
sbb
jnp
fidivrl
mov
shll
ret
dec
xchg
rcr
pop
iret
stos
sbb
sbb
nop
enter
aad
or
xchg
jno
mov
in
iret
call
mov
das
int3
pop
xor
ja
int
sub
ljmp
mov
xorb
enter
icebp
pop
or
and
insl
xchg
rcr
es
shr
aam
repz
mov
cmp
shrl
outsl
aaa
mov
or
rcl
mov
mov
pop
pop
sahf
adcb
jp
sub
testl
stos
loop
mov
jbe
push
into
enter
xchg
loop
xchg
xlat
pushw
mov
call
push
fbld
and
popf
fiaddl
or
lcall
or
ret
jmp
ljmp
movsl
mov
scas
lods
loopne
pusha
inc
add
mov
xchg
testl
mov
es
aaa
scas
aas
sbb
test
fiaddl
push
push
scas
out
aaa
repnz
sub
rcrl
xchg
mov
aaa
add
movsb
scas
dec
inc
in
inc
push
push
movsb
add
out
loopne
in
pop
sub
fsub
cmp
fsubrl
das
xor
lds
outsl
into
mov
pop
pop
popa
cmc
out
mulb
int
xchg
xor
mov
movsb
cmp
dec
test
cltd
outsb
xor
icebp
mov
push
movsb
xorb
or
mov
mov
ficompl
push
cmp
push
scas
mov
test
std
shrl
xor
xor
ljmp
repz
jo
add
jge
pop
mov
push
aas
into
cmp
sbb
sub
push
or
add
jecxz
lock
jle
add
das
ja
cmpsl
iret
sbb
dec
inc
mov
cmp
pusha
pop
stos
data16
or
xchg
xchg
xchg
pop
arpl
pushf
and
sbb
inc
add
mov
pop
push
popa
les
push
imul
xchg
out
mov
hlt
or
mov
add
repz
loopne
pop
sbb
cmp
rcl
scas
aad
loope
icebp
pop
xchg
lcall
push
cs
shr
mov
push
rcll
ret
dec
aaa
mov
inc
aas
stos
pusha
out
xchg
mov
mov
cmp
or
dec
mov
and
cltd
inc
aam
xchg
jo
jo
rorb
sti
cli
int
mov
mov
and
jnp
stos
leave
jno
xchg
cli
aam
mov
xor
xchg
pop
and
adc
and
push
es
cli
xor
mov
fdiv
dec
shll
loop
leave
dec
je
cmp
sarb
xor
pop
int3
sub
cmp
test
add
jge
push
sub
imul
shll
stos
mov
jb
fidivrs
xchg
cmp
out
xchg
jp
lods
orl
movsl
popa
sbbb
pop
jbe
lods
adc
and
fsubrs
xchg
push
out
mov
loop
aaa
ljmp
movsb
imul
mov
out
shll
fldenv
mov
and
sbb
ret
pop
or
mov
mov
pop
fdivrs
das
cmp
test
lret
test
push
dec
add
push
adc
fistpl
ret
pop
fwait
pop
dec
cmc
adc
cmp
outsb
lods
insl
adc
mov
or
adc
loopne
insl
lds
mov
xchg
inc
add
pop
test
add
and
imul
xor
loop
inc
jecxz
xor
sub
pop
dec
pop
push
out
movsl
push
mov
popf
lods
cmp
sub
mov
lahf
jg
xchg
sub
push
int3
sub
imul
add
xor
dec
in
ror
ret
cmp
xchg
mov
pop
stos
cwtl
adc
sub
pushl
mov
pop
or
add
movsb
fsts
cli
aad
lds
int3
sbb
mov
cmp
mov
mov
stc
jne
xor
movsb
sbb
stos
pop
movsl
dec
loopne
or
pop
add
pop
cmp
outsl
pop
cmpsb
shrl
adc
es
jns
movsb
jmp
insl
add
ja
mov
mov
loopne
fimull
push
in
sbb
cmp
xor
lods
dec
cltd
inc
xchg
pushf
push
pop
mov
das
scas
mov
test
test
inc
or
fs
xchg
mov
mov
and
mov
jl
mov
scas
xlat
xor
sarl
mov
and
jae
scas
jns
push
cmp
push
cli
add
xor
shlb
hlt
mov
xchg
or
or
xchg
mov
loope
mov
push
cmpsl
sarl
iret
mov
xchg
bound
jns
repnz
jg
mov
sahf
add
sub
mov
xchg
in
shll
es
scas
call
sub
fnstenv
mov
subl
sub
jo
clc
pop
mov
mov
mov
in
push
sbb
mov
jo
adcb
roll
test
push
push
mov
das
fs
sub
fildll
loop
scas
rorb
sbb
loop
dec
mov
mov
sub
xchg
sbb
mov
cs
movsl
push
push
cld
mov
push
lods
push
rcll
add
shrl
shll
lahf
mov
aaa
adc
adc
add
mov
mov
mov
jno
inc
jle
mov
lods
out
iret
cltd
dec
mov
add
out
and
adc
lods
push
jb
sbb
add
cmp
push
cmpsb
jp
fldl
fldenv
sarb
ficoml
or
mov
std
aaa
rol
iret
ja
mov
and
mov
dec
add
mov
addb
xor
dec
mov
fwait
lods
clc
or
dec
andl
pop
mov
push
call
movsb
adc
sahf
enter
inc
int
cmp
aam
and
inc
cltd
pop
jmp
mov
cmp
sar
popf
or
orb
scas
mov
xor
gs
ret
sub
mov
push
fstpl
inc
pop
je
xchg
je
sub
fucomi
sbb
aam
fwait
or
shl
mov
in
pop
and
sub
fnstsw
test
pop
xchg
adc
mov
mov
std
ret
sbb
lcall
sbb
mov
or
push
jb
daa
jg
sbb
or
std
adc
pop
popf
outsl
lcall
mov
cld
insb
xor
mov
adcl
inc
dec
rorl
and
and
push
sub
fstl
es
xchg
rorl
push
rorl
mov
sub
jle
or
lret
pushf
push
dec
push
xchg
dec
ss
sub
mov
test
inc
adc
push
je
adc
bound
sub
outsl
sbb
xchg
insl
aas
jecxz
and
mov
adc
nop
xor
add
xchg
xlat
and
ja
mov
inc
out
daa
lret
pop
cmp
add
pop
popf
out
in
ret
cs
dec
mov
iret
lret
stc
cs
mov
inc
ljmp
inc
les
sarl
iret
fsubp
sbb
xchg
mov
mov
push
ds
push
ds
jge
int3
cmp
fiaddl
xchg
pusha
cmpl
popa
ss
test
insb
data16
dec
aas
mov
add
add
lods
mov
in
jne
imul
mov
jp
mov
pusha
mov
jg
test
xor
into
stos
movsl
inc
into
mov
push
sbb
push
push
ret
jl
jne
sti
not
pop
sub
jle
xchg
cmp
loopne
push
loop
mov
ret
fdivrs
adc
jns
lret
insl
cmp
cmp
mov
cmp
xchg
push
cmpsb
jbe
icebp
sub
cmp
mov
and
in
or
and
repnz
and
lds
push
hlt
pop
inc
pushf
jbe
jle
xchg
dec
inc
xor
mov
mov
scas
test
test
in
push
sbb
jge
and
popa
push
mov
or
xchg
add
xor
sbb
stos
push
call
inc
imul
loop
mov
aam
pop
loope
roll
addr16
inc
lock
into
andl
ret
ficompl
in
mov
xchg
sbb
add
jle
rorb
and
or
int3
sahf
pop
cmpsb
xchg
fdivr
mov
push
sbb
stos
lahf
pop
and
ds
test
sub
into
lods
jne
dec
cmp
out
outsl
leave
shl
dec
add
fcmovne
sbb
sahf
and
icebp
add
mov
mov
fdivl
mov
add
vmread
jae
mov
bnd
das
clc
stc
push
lcall
sbb
xor
xor
jbe
aam
adc
push
orb
loope
fwait
xchg
xchg
jnp
jae
loopne
movsl
mov
sbb
pushf
sub
inc
rclb
or
mov
inc
pop
xorb
cltd
lock
test
imul
sahf
mov
cmp
stc
jp
push
mov
dec
push
in
aam
je
mov
sahf
shrb
xchg
insl
mov
gs
ss
cmpsb
data16
push
fists
filds
push
fs
inc
outsl
cmp
cmp
hlt
jne
push
rolb
repz
mov
push
fcompl
xor
gs
test
mov
pop
jns
in
sbb
int
cmp
xor
hlt
mov
push
aaa
jno
cmp
arpl
push
in
adc
andb
jle
xchg
adc
inc
jb
gs
test
out
stos
pop
pop
sub
mov
repz
ret
inc
iret
xor
aas
cmpsb
out
std
pop
xchg
mov
pop
repnz
pop
xor
or
push
es
addb
jnp
sub
cli
xor
push
movq
xlat
clc
adc
ret
jnp
pushf
add
cmc
in
dec
push
adc
test
inc
mov
out
sbb
inc
sbb
dec
outsb
pushf
shr
pop
cs
js
ljmp
add
es
inc
es
rclb
xor
lods
pop
hlt
jnp
fistpl
jb
inc
pop
push
incb
jbe
sub
dec
pushf
or
aaa
mov
cmpsl
dec
sti
out
test
dec
dec
in
nop
std
or
gs
out
test
fwait
push
loope
lds
es
inc
lcall
pop
mov
test
mov
mov
stos
pop
insl
pushf
push
cmp
in
xchg
lea
inc
jp
push
hlt
push
dec
iret
jo
addr16
cwtl
and
sbb
mov
lahf
xor
inc
xchg
pop
ret
loopne
call
lds
in
shl
ss
mov
push
cmpsb
ret
inc
mov
nop
jl
push
rcr
and
pop
jne
sbb
sbb
arpl
jae
sub
test
pop
add
dec
sbb
in
aam
pop
xor
out
or
sub
inc
popf
call
test
and
jmp
xchg
rcrb
mov
xor
pop
push
sub
mov
or
nop
clc
stc
cld
arpl
sbb
pop
fadd
lret
xchg
in
mov
lods
fcoms
sahf
movsb
stc
adc
sbb
scas
adc
dec
dec
jge
pop
mov
cwtl
in
mov
inc
and
add
sti
mov
test
loop
add
cmp
push
stos
cltd
pop
jno
cmp
rcll
fnsetpm(287
fldt
stc
shrl
test
xchg
dec
and
jl
sub
xor
les
adc
or
pop
pop
sti
lret
mov
lds
mov
lods
jo
mov
jnp
lds
or
dec
mov
adc
lods
repz
xor
xchg
sbb
jns
fstpl
lock
cltd
sbb
push
add
cmp
insl
loope
mov
hlt
xchg
sbb
push
dec
int
popa
cmpb
sbb
jmp
cmp
repz
cmp
scas
int
cmp
push
jg
dec
or
mov
aam
fsubrl
adc
imul
addr16
jo
test
rcll
jns
mov
adc
sbbl
dec
push
mov
fwait
add
xchg
mov
jbe
ffree
jl
xcrypt-cbc
cmpsl
aam
mov
rcl
lcall
outsb
testl
inc
xor
jo
cmp
jbe
dec
cwtl
cmp
push
mov
push
sbb
mov
push
push
js
aad
xchg
cmpsl
push
andl
xor
dec
aad
or
lds
loop
mov
bound
mov
arpl
add
test
lret
or
lret
sbb
test
outsb
push
mov
xlat
leave
and
ret
fcmovb
loope
xchg
push
xor
adc
cmp
pop
dec
data16
std
jecxz
insb
aas
mov
test
imul
xor
mov
mov
js
and
loop
ffreep
or
addr16
mov
mov
lcall
inc
mov
xor
push
push
addr16
test
fsubrs
imul
mov
movhps
lds
cmpsl
out
in
mov
dec
sti
add
arpl
shrb
into
dec
add
fisubs
out
gs
mov
jns
scas
mov
aaa
fnsave
or
sarb
pop
xchg
mov
cltd
stos
mov
add
xor
jb
fsubrs
mov
or
jno
lock
dec
mov
notb
mov
push
cmpsl
dec
bound
test
and
push
sarl
lret
int
in
sub
addr16
cmp
inc
mov
mov
enter
enter
cmp
and
decb
jecxz
aaa
cwtl
push
out
out
sahf
mov
sub
test
mov
mov
push
add
push
mov
fimuls
lcall
fidivl
mov
push
aam
pop
adc
pop
mov
cmpsl
inc
out
mov
dec
fistpl
mov
sahf
call
cwtl
and
cmpsb
inc
jb
mov
clc
std
mov
sbb
and
sub
sbb
push
scas
or
cld
cs
movsb
add
shll
cmp
out
and
cmp
leave
dec
mov
ret
mov
in
sub
add
cwtl
mov
and
xchg
ror
movsb
sar
stos
fmull
pop
inc
adc
mov
sbb
xchg
or
stc
iret
mov
cmpsb
stos
jge
fidivl
test
mov
in
add
sbb
xchg
in
cmp
mov
push
addb
stos
cmpsl
pop
ret
stos
aaa
push
in
or
mov
divl
xchg
mov
xor
adc
nop
mov
lret
les
or
jl
out
ja
hlt
movsb
mov
dec
pop
pusha
mov
sub
mov
jl
mov
test
leave
jp
push
stos
cmpxchg
pop
and
stc
mov
jb
addl
mov
jg
test
in
repz
jo,pn
mov
xchg
arpl
sbbb
xor
out
dec
xchg
lods
inc
or
insl
popf
repnz
sti
or
push
and
lret
js
xlat
popf
mov
in
pop
push
call
cmp
int3
hlt
lret
xchg
adc
jns
or
jnp
mov
shlb
test
test
aaa
negl
ret
sbb
xor
push
and
inc
jg
cmc
shrl
mov
int
jecxz
in
adc
jmp
adc
loope
scas
mov
jae
sub
pop
xor
dec
and
dec
push
dec
pushf
cmp
les
in
cmpsl
push
ja
lcall
es
mov
or
push
sbb
mov
xor
insb
test
add
mov
inc
and
cmc
jb
popa
and
daa
loopne
sub
and
and
jnp
mov
dec
mov
call
fcmovnu
mov
push
rclb
push
popa
shl
stos
data16
or
movl
shll
enter
xchg
es
lock
outsl
lcall
loopne
mov
fsub
pop
mov
jecxz
fisubrl
xor
and
arpl
inc
test
test
dec
xchg
jle
and
fsubp
pop
jmp
mov
ja
sbb
stos
ret
cmp
das
jb
ds
sti
inc
lret
lret
push
fistpl
in
addr16
xchg
mov
scas
mov
cmc
jle
adc
in
mov
jbe
lods
dec
arpl
les
sahf
lret
sub
shll
xorl
inc
xchg
xchg
and
icebp
sub
mov
loop
dec
jne
stos
lock
pop
ret
pusha
out
insb
pusha
sahf
inc
enter
movsb
stos
ficoms
adc
push
fs
sub
sub
mov
ret
pop
mov
sti
rclb
dec
loopne
mov
and
xchg
mov
mov
or
cmp
fdiv
pusha
xor
shl
sahf
fisubrl
sti
mov
mov
pop
jmp
enter
imul
inc
aad
dec
cs
pop
cmp
je
in
arpl
sar
lret
dec
jo
mov
jns
popa
xchg
insb
mov
xchg
cmc
adc
ds
jl
adc
shrb
inc
repz
cs
sahf
jmp
out
icebp
in
adc
fnstsw
dec
bound
sbb
dec
inc
jge
int
pop
and
xchg
test
mov
sbb
cld
out
dec
inc
push
jno
sub
dec
sbb
fwait
inc
and
call
mov
inc
mov
add
mov
inc
dec
add
xchg
or
cmc
call
and
aaa
adc
mov
popa
pop
pusha
cmp
jle
or
mov
icebp
jmp
push
subl
roll
sarl
testl
movsl
and
lods
jp
mov
mov
pop
mov
gs
inc
bound
sti
clc
lds
xor
xor
sahf
sbbl
pop
nop
dec
adc
int
aad
fisubl
je
pop
jmp
das
inc
scas
into
rcr
in
and
adc
lods
or
cmpsl
nop
xchg
pop
loop
sti
mov
idivb
cli
xor
mov
xor
mov
pop
cmpsl
mulps
cmp
jg
les
or
clc
push
pusha
xor
fistl
jo
sub
lods
cli
out
dec
popa
pop
push
ret
push
xor
xchg
adc
lea
cmpsb
push
xchg
es
jl,pn
jp
pusha
adc
jecxz
cmpsl
sbb
ffreep
push
stc
fstpl
sub
mov
out
jns
rclb
push
adc
outsb
ds
xchg
lcall
inc
repz
lods
mov
inc
sub
sub
je
pop
ret
addr16
push
das
xchg
mov
mov
addl
adc
or
ljmp
sub
cmp
fwait
icebp
and
pop
mov
and
and
imul
push
sub
pop
pusha
dec
shrl
push
push
mov
inc
mov
xor
xchg
fcomi
shlb
lret
sbb
scas
incl
sbb
jo
inc
inc
inc
outsb
test
xor
lock
lds
imul
je
mov
stos
mov
dec
loop
jmp
pop
jns
lahf
cmovne
sbb
mov
ficomps
push
mov
je
add
and
jnp
or
sbb
imul
jecxz
xor
or
fldl
aam
jl
cmp
push
sub
push
xlat
int
dec
mov
mov
mov
pop
mov
ret
xor
fcoms
xor
fstl
inc
icebp
shll
xlat
bound
adc
cmp
sub
fistpl
out
fnstenv
mov
mov
jnp
sub
and
pop
adc
push
aad
stos
loopne
mov
mov
sbb
xchg
jae
das
out
cmp
xor
pop
dec
add
daa
int3
jnp
mov
scas
inc
jo
scas
es
loop
xchg
mov
ljmp
xchg
inc
call
dec
repnz
pushf
or
sub
jb
lahf
jae
imul
pop
test
mov
rcr
out
inc
pop
jmp
push
rorb
pushf
sbb
jne
ret
es
and
dec
loop
pop
mull
jno
aad
orb
aad
pop
loopne
pop
lret
ret
xchg
lret
pop
fs
push
adc
xchg
inc
cmpsl
int3
dec
dec
insb
clc
pushf
data16
loopne
mov
sbb
xor
xor
inc
sub
mov
pop
lahf
stos
popw
push
aam
inc
adc
loopne
lock
gs
aas
shlb
jno
jne
push
stc
or
push
call
repz
cmpsb
pop
push
negb
rcl
adc
fisubrs
or
lea
out
enter
dec
inc
mov
jl
jns
push
sbb
cmpb
cmp
add
and
test
adc
xor
pusha
mov
out
adc
xchg
push
xchg
std
das
mov
xor
ficompl
scas
mov
jbe
mov
mov
lods
jns
dec
mov
sbb
mov
push
out
movsl
push
jge
aaa
dec
push
or
and
pop
data16
sarl
imul
sbb
js
cmp
mov
and
testl
add
mov
fidivs
jno
or
mov
adc
arpl
cld
icebp
mov
mov
dec
flds
stos
jmp
out
xor
mov
inc
lahf
push
pop
and
jb
hlt
les
sub
inc
mov
roll
les
js
inc
mov
outsb
bound
mov
jae
js
bnd
sub
out
push
add
xlat
or
inc
dec
sbb
push
mov
jae
mov
jmp
xchg
iret
popa
nop
jg
mov
insb
movsb
or
and
imul
cld
and
jle
add
sar
gs
lock
xor
add
repnz
xchg
repz
pop
pop
fsts
stc
stc
lahf
lods
loope
and
add
cwtl
fs
sub
mov
in
je
test
leave
in
jl
lahf
in
iret
push
ljmp
sub
dec
jge
fmull
out
jnp
stc
mov
xorb
push
adc
jns
cwtl
rol
push
mov
mov
roll
lret
scas
dec
repz
jo
cmp
shlb
idivl
mov
lret
stc
inc
xchg
fwait
mov
lds
out
inc
xor
loopne
dec
dec
es
push
dec
adc
push
inc
rol
arpl
xchg
out
adc
and
add
daa
xchg
sub
scas
je
push
inc
add
jbe
jmp
andb
out
or
jb
pop
cmpsb
pop
xchg
repz
adc
pop
cmp
std
fcompl
jae
mov
je
negl
jne
mov
lahf
fwait
push
and
gs
outsb
cwtl
outsb
add
xchg
fdivl
out
cmpsb
sahf
or
xor
sub
xor
and
gs
and
int
mov
sti
test
push
iret
stos
dec
divl
lret
adc
mov
xlat
in
inc
mov
sbb
cwtl
stc
or
icebp
mov
inc
adc
push
xchg
cltd
mov
cmc
sub
in
xchg
femms
mov
daa
ss
ret
mov
pop
shlb
mulb
push
pop
imul
jno
cmp
mov
popf
ljmp
xor
push
adc
adc
repz
jmp
shll
addr16
push
pushf
push
sbb
arpl
mov
insl
cmp
sub
or
stos
jbe
sbb
adc
jmp
and
jno
mov
mov
rcrl
mov
jne
mov
shll
divl
jne
fiadds
fsubl
inc
jbe
ss
orl
out
mov
mov
xchg
jb
lret
mov
jl
cltd
push
enter
jo
outsb
std
ljmp
out
mov
sub
pusha
stos
xor
pop
jle
ret
jge
fisubrl
loopne
jl
jecxz
add
in
jae
fimull
mov
cltd
push
scas
or
lds
dec
outsb
mov
rclb
jp
out
sub
and
int3
xchg
cmp
xor
mov
jne
stos
xchg
xchg
sub
imul
pop
and
mov
test
jbe
hlt
and
int
aaa
cwtl
mov
mov
xchg
aad
xchg
pop
loope
dec
insb
mov
inc
ret
pusha
inc
sbb
add
fmull
inc
jo
mov
or
add
adc
dec
and
mov
shrb
pop
clc
cld
gs
ja
iret
insb
enter
xor
push
adc
cmp
stos
xor
lock
jle
add
add
xor
add
adc
jb
arpl
add
out
aas
pop
cmp
insb
in
test
sbb
rorb
pop
test
push
aas
ds
movsl
and
icebp
sbbb
mul
lret
out
pop
js
inc
fistpll
xchg
and
xor
xor
add
dec
push
and
out
fcompl
enter
jge
xchg
loope
sahf
popa
mov
or
fistps
push
cwtl
mov
add
mov
jnp
jg
cmp
mov
iret
push
iret
or
scas
adc
push
xchg
pop
cmp
cmp
mov
out
fstl
cmpsb
movhps
fstpl
ret
leave
leave
cmp
push
dec
push
add
pushf
add
mov
sbb
sbb
sbb
sbb
mov
cmp
sbb
fnsave
hlt
add
mov
rolb
adc
xchg
lock
daa
les
mov
ds
sub
cmpb
je
mov
sbb
mov
add
add
insl
movsb
cmpl
sbb
in
xor
lock
sub
mov
test
push
mov
dec
jg
call
mov
sbb
jle
cmp
inc
and
lret
dec
cld
xchg
pop
sbb
int
jne
loopne
ljmp
je
mov
ja
fstl
push
out
outsb
jge
fstl
add
scas
lea
mov
cltd
arpl
pusha
addr16
lahf
repz
sub
test
outsl
and
or
pop
cmp
mov
sub
sbb
sub
cltd
bound
rcl
adc
dec
jns
loopne
mov
aad
inc
icebp
in
shll
push
jmp
push
aad
xor
inc
push
add
lds
aam
shlb
rclb
mov
fsubs
test
xchg
stos
inc
movsl
jno
movsl
xchg
push
mov
fs
or
enter
sub
push
inc
adc
lea
leave
mov
inc
and
enter
fcmovne
call
pop
add
push
jmp
lods
pop
cmpl
stc
into
lods
les
lds
std
lahf
xor
sbb
mov
xor
sbb
lods
mov
insl
mov
cmp
das
fdivp
adcl
add
pop
fadds
lret
les
fidivrl
dec
push
fimuls
mov
adc
nop
stc
xchg
hlt
fiadds
dec
add
std
movsb
push
and
stos
mov
addr16
xor
lcall
rcrl
jne
push
sbb
cmp
pushf
imul
and
das
jnp
xchg
out
scas
pushf
repnz
inc
ds
mov
test
pop
cmpsl
dec
xor
sub
out
sub
push
mov
mov
imul
outsl
nop
pusha
insb
pusha
loope
push
insb
js
sub
cld
aas
test
adc
stos
cmp
mov
cmpsb
leave
stos
mov
jp
cltd
sti
cmc
lock
adc
data16
shll
je
popf
imul
mov
and
mov
out
cld
jae
mov
mov
popa
adc
cld
xorb
popa
xor
addr16
pop
push
aas
jmp
mov
or
cmp
dec
push
dec
adc
xor
pushl
insl
or
push
jg
insb
imul
rcrb
xorl
scas
xchg
push
jae
dec
loope
movsb
andb
pusha
popa
dec
dec
sub
xorb
or
lcall
ds
and
dec
pop
adc
sbb
insl
jecxz
fildl
xchg
add
nop
add
adc
popf
add
cmp
push
into
xor
movb
imul
sub
add
icebp
jbe
stc
addl
icebp
xchg
fcompl
fmull
inc
pushf
dec
aad
jecxz
adc
ficomps
fidivl
mov
mov
sbb
popa
out
ss
or
add
mov
lods
mov
add
cld
ss
adc
cmp
lds
and
inc
ret
or
repnz
mov
sbb
mov
mov
imul
or
pop
ret
mov
and
out
sbb
xorb
cmp
sbb
test
and
shrl
push
add
sub
test
cmp
leave
in
adc
inc
mov
mov
into
stos
cmp
cmc
mov
inc
mov
adc
and
cwtl
popf
lods
gs
popa
outsl
sbbl
xor
outsl
daa
dec
xor
in
mov
push
hlt
lods
xchg
mov
xorl
call
es
insl
xchg
lcall
mov
orl
nop
mov
popf
sbb
add
add
js
aas
sarb
xchg
mov
adc
loope
inc
lods
cmp
outsb
xor
ss
add
loopne
repz
in
xchg
gs
clc
cwtl
dec
xchg
frstor
or
ss
push
cmp
and
fiaddl
push
mov
flds
jnp
mov
mov
cld
inc
add
cmp
mov
out
into
jno
and
stos
mov
rolb
cmpsl
dec
imul
dec
imulb
dec
mov
push
and
mov
stos
inc
fwait
shl
inc
jne
mov
and
fwait
popf
cmpsb
adc
fxch
sarb
popf
dec
adc
fdivr
cmp
or
lds
fldl
push
adc
out
mov
inc
push
loope
inc
inc
int
rcrb
sub
add
and
mov
jb
mov
cmp
xchg
ret
jge
mov
imul
jns
pusha
jb
cwtl
cmpsl
push
sub
sbb
je
add
cmp
stos
in
in
mov
xchg
imul
add
push
rorb
aam
sti
or
rcll
cmp
outsb
jns
dec
out
andl
cmp
imul
sahf
stos
and
cmp
sub
mov
add
or
cwtl
cmpsb
test
fcomip
aad
and
xchg
aas
stc
lcall
mov
sti
push
xchg
inc
mov
fnsave
add
xor
pop
cmpsb
dec
fildl
ja
and
in
xlat
cmc
sub
pop
mov
leave
sub
or
outsb
xchg
xor
ss
push
bound
cmpsl
in
mov
mov
adc
add
movsl
push
jmp
in
add
add
idiv
mov
mov
fs
xchg
lcall
lock
mov
ja
jns
push
scas
std
push
sub
xorb
xchg
pop
add
pop
inc
add
pop
sub
sub
rcl
inc
push
in
sahf
ret
std
cld
jae
add
cmp
repz
in
xchg
push
inc
cmp
or
stos
aam
into
movsl
xchg
inc
out
lret
push
mov
adc
stos
stos
out
out
shr
sub
test
mov
sub
jb
std
mulb
cli
sbb
jge
loope
popf
add
fsts
jb
lahf
lahf
sub
cmpsl
pusha
arpl
sub
lret
adc
sub
push
fs
push
sbb
mov
or
sahf
cli
popf
rcll
add
loopne
lahf
push
mov
cltd
mov
mov
cmc
mov
xchg
push
fcmovnbe
pop
or
mov
sbb
ljmp
push
enter
test
incb
adc
sbb
push
xor
cli
sub
push
pop
pop
and
inc
add
adc
dec
mov
sarl
jnp
sub
fistpl
lcall
jp
cmpsb
lea
xor
jo
cmp
pop
sbb
xchg
add
repz
jb
mov
mov
bound
jle
and
ret
dec
cmp
and
shrb
lret
inc
jmp
lock
mov
jnp
js
stc
pop
stc
jmp
ret
mov
xchg
ds
pop
sarb
xlat
push
movsb
faddl
xor
mov
push
call
punpckhbw
jge
pop
ds
xchg
out
ljmp
add
sbb
into
pop
push
inc
xchg
stos
roll
sbb
jae
and
pop
bound
or
out
jecxz
cmp
insl
xorl
xabort
pushf
jne
rcrl
and
subps
push
xor
out
dec
dec
jge
mov
mov
inc
xor
gs
push
sbb
mov
cwtl
or
iret
cmp
aad
jo
mov
cmp
add
push
popa
xchg
adc
or
hlt
fcom
insw
inc
cmp
dec
cmpsb
arpl
fcoms
mov
or
popa
sbb
hlt
daa
faddl
push
movsb
fisttpl
push
lea
jmp
outsl
fldenv
push
roll
mov
pop
test
roll
mov
xchg
leave
xor
sbb
add
add
scas
gs
std
or
push
test
popa
sub
rcrl
push
push
pop
adc
shrl
dec
fbld
inc
and
jns
cmp
jbe
mov
mov
xor
cmp
cs
or
add
or
in
sub
xchg
jge
repnz
jmp
imul
jmp
jno
or
jmp
and
stc
dec
aam
inc
mov
mov
in
dec
mov
das
add
insb
int
in
pusha
int3
or
xlat
arpl
enter
pop
mov
adc
push
sbb
xchg
dec
out
mov
inc
addr16
fidivrl
fnstsw
xor
xchg
inc
xchg
pushf
mov
fxch
jmp
cmp
mov
out
fisubl
sub
adc
insl
inc
jg
add
pop
js
mov
or
xchg
shlb
jmp
repnz
and
rorb
mov
fwait
in
xlat
cmpsb
pop
adc
cs
fsts
nop
aad
dec
dec
or
daa
or
into
push
adc
bswap
xor
arpl
int
and
jg
in
xor
add
push
in
leave
fcmovb
and
fisubrs
test
dec
ds
js
ljmp
fldt
cmc
jb
sbb
mov
mov
insl
in
or
xchg
je
jp
xor
in
data16
mov
sti
cmp
cli
imul
stc
adc
dec
sar
popa
jge
or
les
push
inc
imul
insl
dec
add
xor
sub
mov
out
push
daa
dec
clc
rcll
cmc
jecxz
jg
inc
enter
dec
imull
jnp
out
mov
aas
insb
nop
or
pop
mov
dec
xor
hlt
dec
test
call
xchg
ljmp
push
test
imul
add
mov
push
jle
or
sbb
mov
lahf
fwait
mov
mov
sbb
lret
mov
mov
rcrl
adc
lret
mov
and
add
mov
push
xor
add
cwtl
mov
pop
xorb
cmp
mov
xchg
into
jnp
xor
scas
movb
or
inc
dec
jo
push
pop
iret
aas
lret
add
outsl
inc
int3
sbb
mov
lea
lret
fldt
xor
out
cmp
inc
pop
fadd
cmp
adc
dec
push
mov
pop
or
sbb
rclb
movsl
int3
mov
into
shl
dec
dec
cmp
je
push
mov
aaa
add
cwtl
cmpsb
push
sub
shl
inc
sbb
push
gs
xchg
cmp
aaa
std
rorb
lea
popf
jle
cld
mov
insl
notl
cmp
jnp
cs
es
mov
push
lret
pop
jmp
adc
sub
in
or
cmp
adc
inc
imul
es
nopl
mov
mov
sbb
push
jp
fldl
adc
out
shlb
mov
and
push
sub
testl
mov
je
mov
std
mov
stos
nop
mov
stos
xor
jge
pushf
mov
sub
sti
mull
scas
or
dec
subl
into
mov
loop
cmp
int3
and
fcomp
mov
inc
mov
sti
jnp
ret
mov
or
gs
cld
jmp
cmp
xchg
pop
fsqrt
mov
and
mov
or
cmp
mov
xchg
push
inc
sar
mov
xchg
notb
popf
cmp
cmc
imul
xchg
sbb
xchg
cmp
cld
mov
xlat
mov
or
xchg
in
pusha
xor
popa
fnstsw
inc
xor
dec
inc
decb
dec
jbe
repnz
add
adc
mov
insl
fcoml
outsb
arpl
jmp
shlb
or
jle
pop
mov
aaa
imul
sbb
fimuls
ljmp
rol
push
ljmp
jae
or
dec
insb
inc
mov
jle
jae
mov
adc
mov
mov
jo
fisttpl
addr16
jnp
cmp
adcl
mov
mov
sub
subb
cmp
sbb
clc
fwait
push
add
es
or
xor
inc
mov
bound
fsubr
shll
jbe
or
pop
leave
inc
je
push
xchg
xchg
and
insl
jp
mov
jp
jns
jae
inc
test
jnp
mov
xchg
dec
icebp
mov
push
incb
adc
push
in
cmp
xor
cld
icebp
imull
subb
xor
xchg
or
je
cmpsl
pop
cltd
es
or
mov
mov
mov
gs
movsb
idiv
push
xchg
dec
sub
mov
xchg
icebp
je
in
ss
mov
shll
mov
jmp
aas
jno
pop
fnsave
mov
and
cmpsb
pop
cmpsb
pop
mov
mov
xchg
push
popf
dec
pop
call
dec
icebp
sbb
js
insl
out
loopne
call
dec
add
scas
pop
aaa
sub
mov
sub
jmp
mov
sahf
scas
xchg
ss
jl
add
xor
pop
xchg
test
in
mov
jecxz
movsb
add
sbb
cmp
jl
inc
imul
sub
js
xorl
sbb
leave
xchg
adc
adc
dec
jns
stc
cmp
je
push
mov
ja
mov
into
lret
sbb
fwait
fs
sub
lods
aam
inc
clc
push
jmp
xchg
fs
dec
add
dec
shll
imul
je
push
push
pop
jne
psubusb
sbb
add
pop
ud0
xchg
mov
jb
hlt
mov
adc
pusha
lret
xchg
dec
jnp
out
add
sub
and
adc
and
sarb
icebp
and
xlat
and
cmp
add
ljmp
xacquire
adc
add
loopne
pop
sbb
pop
mov
popa
loope
gs
sbb
lock
adc
stos
xchg
sbb
mov
sbb
add
xchg
jp
daa
icebp
loop
fwait
std
out
xor
sbb
pop
pop
loopne
inc
xchg
iret
sar
xchg
add
mov
hlt
dec
cmp
xchg
mov
fwait
push
cs
sub
cmpsl
jnp
fcomip
loop
scas
fldcw
push
xchg
dec
sub
lds
gs
loop
in
fnstsw
xor
int
int3
push
js
cmpsb
sbb
add
stos
fwait
inc
sub
lret
ss
xor
rorl
jnp
push
lock
arpl
fbstp
dec
xor
inc
xor
push
movsb
not
lods
popf
dec
mov
addr16
lock
xor
cmp
rolb
jp
inc
add
cmp
add
dec
stos
jp
sub
dec
push
cmp
lock
fidivl
addl
sbb
jne
outsb
fnstenv
fldt
cwtl
pop
push
jns
lcall
cli
shl
push
js
loope
js
cmp
and
or
ljmp
sub
add
jnp
sub
mov
push
cmpl
sbb
push
mov
cli
sbb
leave
movsl
test
aas
jns
mov
xchg
and
cmp
mov
repz
cmp
test
dec
cmp
sub
mov
cld
in
cmp
outsl
jns
adc
jb
pop
push
mov
cmp
mov
jp
rorl
aas
xchg
mov
or
pop
dec
mov
push
sub
leave
sbb
popa
in
xor
add
addr16
orb
cmp
xor
loopne
fwait
inc
inc
stos
push
jle
pop
mov
pop
adc
adcl
xchg
hlt
ljmp
cmp
insl
add
imulb
lahf
adc
dec
jnp
push
push
cld
adc
mulb
in
push
loop
into
jb
cmp
dec
dec
and
mov
inc
sahf
xchg
cmp
ret
and
loopne
and
xor
ss
or
mov
jb
hlt
mov
mov
ljmp
inc
push
stc
insb
inc
xlat
mov
stos
lret
add
sbb
js
test
cli
rep
test
fwait
hlt
mov
arpl
orl
dec
add
sbbl
rcrb
addr16
fstps
pop
mov
jmp
lock
push
jmp
gs
adc
aam
adc
lods
int3
and
pop
push
lds
mov
push
push
adc
mov
push
pop
jo
jl
test
and
add
dec
test
xchg
inc
mov
sub
pop
cmp
cld
aaa
or
mov
shll
fbstp
push
int
enter
fstpt
out
std
or
call
sarb
outsl
mov
push
into
pop
push
mov
fisubrs
int
push
out
cmp
push
lret
xchg
xchg
lods
jge
mov
lods
xchg
or
xor
or
dec
xor
pop
jnp
pop
xor
cmp
add
xor
jmp
adc
and
int
xor
cli
flds
dec
sbbb
sub
rclb
adc
sti
lret
das
push
mov
sub
or
cmp
jnp
repnz
das
js
xor
cmp
fs
out
mov
movsb
inc
cld
mov
lret
inc
in
cmp
int
aas
jnp
roll
add
sbb
add
nop
scas
ret
add
add
movsb
xor
popf
jbe
jmp
mov
clc
addl
xorl
aaa
sbb
jle
out
aas
push
cld
fcmovbe
cld
ret
in
aaa
jmp
bound
popa
shll
cmp
mov
sub
outsb
sbb
add
dec
jmp
mov
sub
rcrb
cld
mov
jno
xchg
scas
mov
aas
mov
insl
cmc
jo
mov
fcom
cmp
sti
and
inc
int3
ja
xorb
inc
inc
into
pop
add
rcrb
and
les
jl
sbb
pop
push
or
push
push
xchg
enter
xchg
inc
test
jl
push
nop
adc
pop
fwait
out
sub
xchg
stc
pop
repz
cwtl
outsl
push
pop
loop
fistpl
scas
fnstcw
int
leave
pushf
sahf
pop
mov
pop
pop
repz
push
push
lods
sbb
push
cmpsb
stos
cmp
xchg
sbb
call
and
jmp
sbb
les
pushf
pop
sub
xchg
jae
nop
jge
cmp
sbb
add
jbe
jmp
mov
mov
pusha
mov
push
fistpll
xchg
insw
and
and
inc
and
mov
sub
in
fstpl
out
inc
test
sbb
stc
xchg
jp
mov
call
rorl
or
fldl
lock
fsub
pusha
loope
pop
addr16
jmp
pop
cmp
xor
jg
xlat
adc
inc
lahf
mov
mov
mov
andl
out
fstpt
adc
jl
dec
mov
inc
add
jle
jo
insb
pop
loop
pop
xchg
mov
push
out
or
pop
and
btl
add
xchg
loopne
in
rcr
push
mov
sbb
repnz
push
and
dec
sbb
jge
mov
loopne
into
test
mov
pop
jmp
cmp
in
fsts
movsb
sub
mov
js
inc
pop
fists
sbbb
repz
ljmp
fistpll
pop
ljmp
lret
pop
out
cld
mov
pushf
mov
fs
es
std
sub
bswap
inc
lds
cmpsl
sti
xor
cmpsl
scas
add
inc
and
mov
movsw
into
sub
outsb
in
xchg
push
std
imul
cmp
mov
dec
outsb
sti
je
rcrl
imul
sbbl
mov
xchg
js
jle
loop
int
mov
das
imul
fidivl
sub
out
lsl
dec
incb
neg
testb
inc
jb
imul
lcall
jb
dec
push
mov
cmp
pop
rorl
xchg
fiaddl
insl
add
lret
dec
inc
xor
rorl
pop
addl
rcl
jle
fs
add
stos
lods
sahf
push
inc
and
sahf
dec
mov
inc
mov
loop
fistps
adc
add
ret
and
push
xor
jecxz
cltd
inc
loopne
movsb
outsl
mov
push
cmpsl
xchg
lds
mov
jecxz
jae
lds
imul
sbb
dec
in
mov
cmpsb
cld
mov
ss
inc
icebp
inc
in
push
shrl
cmp
and
movsl
push
jns
loop
mov
xchg
jg
loop
pop
femms
fwait
sub
jo
or
mov
test
inc
fstpl
lret
popw
cltd
addr16
or
incb
ret
xor
and
decl
rcrl
rorb
mov
subb
das
xlat
xchg
or
push
in
loop
cli
mov
mov
test
fadds
push
adcl
cs
pop
jp
xlat
xlat
adc
sahf
push
pushl
leave
cmp
mov
xchg
pop
dec
push
and
stos
je
into
pop
stc
xlat
mov
add
movl
fisttps
mov
mov
dec
xchg
insl
notb
mov
pop
lcall
sub
xchg
push
adc
pop
xor
sub
std
loope
jns
dec
cs
stc
cmpsb
mov
divl
add
cmp
sahf
add
out
mov
push
dec
les
pop
mov
out
fdivl
cmp
cmp
test
insl
cld
cmp
movd
push
movsl
int
xchg
mov
mov
call
mov
jl
shl
pop
cmp
inc
daa
scas
loopne
pop
inc
xlat
jae
push
mov
mov
mov
pop
ret
sbb
dec
jo
repnz
fbld
mov
xchg
jmp
std
sbb
cmp
add
sub
repz
and
inc
jno
mov
xor
xchg
jg
test
lret
repz
sbb
cmp
cwtl
add
push
push
insl
in
mov
sub
ljmp
push
lcall
mov
mov
fsub
sub
xlat
sub
mov
inc
jp
test
xchg
push
xchg
pop
js
and
pop
pop
mov
lahf
fisttpl
jle
scas
pushf
shr
cmp
cmp
mov
sbb
mov
std
fiadds
inc
sub
pop
or
jnp
add
inc
pusha
pop
push
out
xor
loop
mov
cld
daa
dec
imul
and
ss
cmpb
idivl
scas
xchg
push
into
push
mov
sub
jle
push
pop
xor
mov
adc
xchg
cli
cmpsb
jnp
sbb
loopne
xor
lea
lcall
movsb
std
ss
movsb
ja
xor
and
je
leave
mov
and
or
popa
call
or
push
scas
sbb
mov
and
mov
dec
adc
push
jbe
push
dec
insb
jecxz
add
pushf
cmp
adc
sti
or
int
adc
xorb
inc
loopne
cmpsb
jg
in
rolb
sahf
xor
mov
add
dec
in
push
pop
bound
pop
int
and
push
jae
notl
mov
mov
cmp
outsb
lods
dec
push
push
negb
or
lds
cmpsb
push
mov
cmp
cmp
arpl
daa
loopne
insl
fdivl
int3
xor
push
shr
mov
orl
jle
icebp
lret
inc
xchg
mov
mov
xchg
dec
push
icebp
pop
push
cli
inc
mov
jns
ret
test
aad
add
and
das
rcrb
xorb
mov
sub
and
in
jbe
sub
jb
adcl
bound
pop
cmc
sbb
push
inc
test
mov
loope
rcrl
ss
cs
sbb
push
add
sub
cmc
movsb
loope
dec
jnp
pop
pusha
cwtl
jl
rcr
cmp
pushf
sbb
out
mov
mov
ret
inc
adc
dec
sbb
out
mov
xchg
cmpsb
sbb
ror
cmp
cmp
cmpsl
mull
lret
cli
jge
dec
les
push
xlat
or
sub
and
mov
das
repz
inc
hlt
sub
sub
test
xchg
imul
test
jl
pop
popf
lret
jl
push
cmpl
fsubs
mov
mov
and
sahf
push
xlat
push
mov
and
xchg
loopne
test
mov
xorl
dec
scas
ror
pop
test
pushf
jbe
mov
int
adc
mov
icebp
mov
scas
das
popa
int3
pop
mov
addr16
enter
sbb
lahf
push
xchg
loop
xchg
mov
jmp
jmp
in
adc
lds
sub
jmp
jge
mov
and
daa
es
mulb
add
pop
pop
jne
ds
jnp
xor
int3
push
mov
mov
jmp
cmp
mov
leave
mov
add
fldl
es
lahf
pushf
pop
cli
fsubrs
mov
add
cmp
out
or
lods
cmpb
xchg
add
outsb
jne
test
jle
gs
pushf
pop
mov
mov
mov
int3
sbb
jg
je
jo
clc
cmp
jns
aad
ret
pop
cltd
loopne
aad
xchg
push
sbb
int3
push
fwait
mov
int
jbe
mov
sbb
xor
hlt
or
imul
xlat
frstor
xlat
xchg
lea
dec
mov
cmp
ljmp
sbb
mov
iret
fildl
fisttps
pushw
fmulp
movsl
dec
repz
cmp
xchg
div
mov
cld
sub
dec
cli
cmp
lods
in
inc
xchg
jge
mov
fidivrs
idiv
xchg
div
into
xor
jmp
add
jle
sbb
or
fs
jl
mov
out
stos
add
and
bound
jge
rcrl
mov
inc
cmp
push
ss
adc
int
push
adc
shlb
or
mov
xchg
sub
and
push
lret
test
lock
ret
std
xchg
rolb
call
lock
adc
dec
add
adc
es
pop
in
sarl
xor
and
shll
popf
idiv
pop
in
addr16
sbb
add
xor
jecxz
jl
enter
fdivl
ds
jle
testb
jg
mov
or
js
repz
in
stc
popa
outsl
adc
mov
xchg
shl
mov
adc
and
ljmp
lcall
repnz
dec
pop
sti
inc
adc
fstpl
xchg
test
loopne
xchg
sbbl
adc
adc
ret
jo
push
mov
das
inc
jl
movsl
and
sbb
inc
test
loop
fisttpll
fs
cs
ds
push
insl
fsubs
mov
mov
stc
mov
cmpsl
test
repz
xchg
aam
pop
inc
push
pusha
xchg
mov
jnp
mov
incl
into
inc
outsb
and
mov
fcompl
into
and
xchg
push
fdivrs
mov
icebp
push
add
push
inc
gs
ror
xchg
popa
mov
or
das
add
pop
mov
pop
jmp
lods
dec
popf
fistpl
dec
jbe
in
pop
out
int3
aas
xchg
cmp
mov
add
mov
adc
movsl
push
xchg
sarb
rcr
jp
fs
mov
mov
adc
adc
jl
ret
cmp
outsl
lahf
mov
mov
cmp
dec
jmp
xorb
lods
push
and
jle
frstor
stos
repz
cwtl
loopne
popf
xchg
pop
dec
or
scas
lcall
mov
fdivr
cmp
ret
sbb
imul
push
int
dec
push
and
add
add
loopne
jns
jae
jbe
mov
cltd
outsb
movsl
jb
pushf
mov
or
jg
mov
push
lahf
sub
push
pop
dec
jb
xchg
jnp
sbb
dec
out
pop
outsl
push
or
test
jb
leave
add
lret
or
imul
add
xor
je
push
dec
adc
sarl
dec
cmp
inc
jle
mov
testl
cs
inc
mov
mov
sub
push
add
push
xor
aam
adc
loopne
dec
jno,pt
mov
mov
push
mov
pop
xchg
cmc
pop
jge
mov
lea
jne
and
int3
aad
mov
jp
lahf
push
fdivrs
sub
mov
or
aaa
cmp
std
ds
jmp
popf
mov
add
mov
push
in
sub
sti
nop
push
push
mov
in
in
sub
enter
cmp
popa
test
das
push
pop
ds
and
insb
decl
mov
mov
push
insb
inc
imul
add
or
dec
iret
nop
inc
mov
push
rcrb
jb
sarl
shll
idivl
push
cmp
loop
lret
into
add
or
insb
or
cmovae
out
mov
icebp
sub
ss
leave
add
out
mov
mov
xchg
and
mov
nop
scas
mov
lahf
inc
insl
dec
in
and
dec
test
lcall
xchg
jmp
loope
mov
into
into
mov
lret
in
cmp
ljmp
clc
push
test
and
xor
cmp
mov
add
repz
push
hlt
test
in
and
lods
daa
mov
fistpll
rclb
lret
nop
das
adc
cmpsb
ret
arpl
sbb
and
in
sbb
sarl
call
iret
cmp
jmp
sbb
or
xchg
sbbb
mov
enter
arpl
call
push
jae
add
arpl
popa
mov
sub
sahf
iret
xor
inc
push
subb
dec
add
and
int3
nop
xchg
sbb
out
cltd
ja
in
int
adc
stc
xor
push
fs
inc
cmp
pusha
cmp
xor
add
mov
es
mov
jns
mov
ljmp
fimuls
inc
sub
push
push
loopne
xchg
sti
mov
mov
mov
adc
fstpt
push
sahf
push
xchg
inc
fucomip
fisttps
aad
cmp
in
push
adc
pop
sbb
cmp
cltd
addr16
sbb
cli
mov
mov
xor
loop
es
out
dec
add
jl
mov
pop
mov
gs
cmpsb
mov
jnp
flds
jae
mov
jge
leave
scas
ja
mov
ret
and
fisubrl
cltd
xor
out
and
pop
ljmp
or
xor
ljmp
shl
sub
pop
adc
mov
test
cli
push
push
add
fwait
ret
mov
pop
sub
shrb
sbb
push
mov
lfs
movsl
xor
and
or
mov
popa
lds
sub
cmp
call
pusha
loop
xchg
or
into
cmp
aam
cmp
pop
cwtl
test
ss
pop
inc
xchg
cmpsl
jnp
push
sbb
inc
in
fsubl
ljmp
cli
inc
inc
stos
dec
dec
fcomps
xchg
sahf
or
out
sub
mov
iret
hlt
call
and
lock
xchg
repnz
es
in
cmpsl
outsl
lods
int
imul
js
jecxz
add
sti
pop
push
and
mov
ljmp
pop
sub
arpl
sti
push
adc
pop
or
mov
out
inc
ljmp
arpl
mov
notl
xlat
mov
and
or
sub
pop
pop
add
mov
outsl
decb
and
sbb
fisubrl
iret
lods
in
fdivr
pop
push
push
lods
dec
outsl
test
ja
iret
std
in
ds
cmp
and
out
loopne
xor
mov
sbb
sbb
jle
out
mov
subb
pop
sub
push
nop
inc
cli
adc
push
jmp
data16
fisubl
es
sub
or
leave
ret
in
push
xor
ds
push
adc
jno
aad
test
mov
outsl
dec
ret
push
mov
xchg
fisubrl
or
mov
dec
lds
mov
inc
push
sti
jp
cld
add
xor
out
xor
sub
lret
inc
mov
insb
js
fildll
jle
mov
test
sub
add
push
ds
adc
aam
repz
out
mov
or
mov
mov
inc
scas
scas
xchg
pop
cmp
stos
xchg
enter
mov
insl
dec
rorb
ret
cmpsl
xor
cmp
xor
pop
sti
inc
daa
cwtl
aas
scas
arpl
lock
mov
aas
add
imul
iret
jp
sub
inc
pop
lods
lock
cmp
movsl
dec
add
insl
mov
jno
push
push
popf
enter
gs
dec
and
inc
lods
divl
sbb
and
jge
popa
lcall
mov
or
jno
cmp
add
inc
fnstcw
idivb
fidivrl
pop
inc
mov
data16
hlt
sbb
jg
inc
scas
inc
mov
and
fwait
jecxz
dec
repz
je
sarl
add
jp
sbb
push
jno
mov
sbb
push
mov
testl
adc
adc
sub
mov
inc
add
sbb
popa
lret
aas
lahf
sbb
cvtpi2ps
dec
xor
fdiv
out
arpl
mov
mov
sub
fimull
clc
or
add
hlt
mov
cltd
imul
repnz
xchg
mov
jp
mov
mov
fcmovnbe
push
cmp
out
scas
adc
lock
notb
xchg
sub
lcall
dec
insl
repz
mov
and
sbb
inc
dec
cmp
lret
lods
jge
push
lods
or
ss
cmp
in
xchg
fistpll
cmp
or
movb
lods
and
test
and
imul
out
mov
cmp
outsb
adcb
mov
lret
dec
xchg
or
arpl
sub
daa
enter
mov
cmp
pop
jecxz
outsb
mov
xchg
das
xor
push
stc
mov
dec
add
xor
scas
movsl
imul
pop
and
lcall
jge
push
inc
cld
test
mov
fwait
arpl
fildll
insl
fisubl
lret
jne
fwait
cltd
mov
repz
sbb
pop
pushf
loop
in
hlt
xor
pop
imul
xchg
lret
xchg
cli
dec
lea
and
iret
out
add
mov
mov
sub
out
mov
pop
xchg
stos
lds
fiadds
jmp
fs
mov
dec
push
icebp
psubusw
jp
pusha
hlt
xor
fdivrl
add
lcall
add
xor
shlb
jmp
cmc
mov
add
mull
xchg
mov
xchg
addr16
jecxz
jmp
popa
xchg
scas
mov
js
dec
mov
push
mov
push
test
mov
repnz
dec
loopne
mov
int3
ret
inc
in
sahf
div
fwait
mov
mov
dec
add
clc
mov
xchg
dec
test
mov
ja
inc
push
pop
push
shlb
cmpsl
push
cmp
dec
xchg
adc
mov
shl
enter
test
inc
js
pop
jge
dec
stos
ret
aad
leave
je
cltd
jb
mov
mov
xor
sbb
arpl
clc
cmp
insl
fistl
fcmovnbe
pop
in
subl
rolb
sbb
xchg
cmp
sbb
les
dec
pop
shrl
push
mov
icebp
adc
xchg
sub
sbb
mov
pop
xlat
frstor
push
or
bound
mov
in
je
cli
push
loop
xchg
push
jb
xchg
inc
fs
sbb
and
push
or
dec
pop
lock
leave
xchg
outsl
sbb
mov
ss
imul
lods
fwait
adc
in
dec
out
les
pushl
xor
inc
ds
cmc
repnz
jl
lea
roll
aaa
push
loope
jns
arpl
je
add
pop
mov
and
pop
test
test
mov
pusha
jp
out
mov
hlt
pop
andb
cltd
iret
hlt
popa
stos
push
and
sbb
out
push
jnp
andb
jo
imul
pop
rorl
dec
lea
pop
in
dec
sti
push
cs
mov
sbb
fdivp
inc
call
jo
sbb
adc
outsb
push
repnz
js
dec
stc
arpl
pop
adcb
push
jp
testl
mov
jbe,pt
xor
mov
or
mov
outsb
lcall
cli
cmc
xor
pop
loop
loop
repnz
fisubrl
or
lods
loope
not
loope
aad
xchg
setno
fwait
int3
aas
mov
and
pushf
int
lcall
adc
mov
jg
pop
loope
adc
jnp
sbb
sti
push
in
stc
mov
cwtl
push
push
fimull
iret
test
imul
sub
mov
jne
out
iret
adc
jmp
dec
xchg
loope
jne
inc
adc
add
test
mov
in
or
pop
mov
sets
push
adc
je
rorl
xchg
jle
inc
lret
scas
jg
clc
mov
lods
pusha
xor
mov
outsb
stos
outsl
cld
jl
jp
cli
mov
xor
test
fildll
movsl
popa
rorl
xor
mov
leave
arpl
mov
into
xorl
inc
mov
inc
add
sti
inc
pop
adc
mov
xor
mov
pop
sub
test
scas
and
test
into
jg
das
dec
stc
mov
loop
inc
push
pop
jl
scas
test
cwtl
inc
mov
mov
mov
mov
imul
fsubs
sbb
popf
jns
xor
and
ret
xor
in
leave
inc
es
xchg
cmp
and
cmp
bound
lock
jnp
lcall
scas
in
shrb
adc
mov
rcl
es
cltd
mov
push
jmp
jae
mov
push
pop
repnz
add
cmp
xor
lods
into
adc
add
cmpsl
inc
push
imul
pushf
mov
mov
pop
in
xor
adc
mov
inc
inc
jo
xchg
mov
jno
inc
push
push
dec
mov
std
jecxz
dec
loop
addb
xchg
jnp
sti
in
mov
mov
push
ret
push
adc
mov
sub
sbb
adcb
lcall
or
jb
outsb
pusha
popa
add
xchg
mov
add
jmp
sub
dec
lods
cmpsb
fists
into
cmpsl
in
or
mov
imul
aaa
cs
pop
and
sub
imulb
sarl
jo
hlt
cmp
and
jp
jg
inc
rol
mov
push
stos
push
push
les
sub
inc
push
js
cmc
int
cmp
int
and
or
rcll
jle
outsb
dec
int3
sub
jns
sub
jns
pop
jmp
and
fcmovu
mov
jo
xor
xor
std
hlt
fisubrs
push
nop
mov
jecxz
push
iret
in
xor
adc
sbb
notb
rcll
inc
nop
xchg
ficomps
sub
add
jp
add
inc
sbb
inc
leave
rolb
out
in
mov
lods
bound
xchg
mov
mov
outsl
pop
xchg
xor
pop
sub
fsubrl
mov
js
sub
mov
mov
jmp
xchg
jbe
pop
repnz
xor
inc
fmuls
mov
jb
and
bound
ret
mov
fyl2x
out
cwtl
test
mov
jnp
imul
sahf
lods
movsb
enter
rcrb
enter
rcrl
pusha
popf
jl
pop
dec
mov
fst
xor
das
inc
mov
jecxz
cmp
or
cli
movsl
xchg
in
mov
dec
in
sub
je
add
hlt
jns
int3
jge
call
add
inc
xor
stos
or
lcall
add
pusha
dec
mov
pop
scas
and
push
idivb
sub
sub
hlt
call
cltd
jl
cmpsb
mov
mov
sbb
repnz
sbbb
cwtl
add
daa
sarl
jne
cltd
daa
pop
mov
sbbb
insb
push
mov
dec
add
cld
stos
scas
cs
mov
mov
rcl
outsb
nop
in
cld
mov
xor
mov
pop
push
pop
sbb
add
cmp
cltd
mov
mov
mov
xlat
arpl
loop
push
dec
mov
pop
ljmp
aam
sbb
scas
lods
push
inc
cwtl
mov
cmp
jns
das
xor
roll
mov
dec
leave
lock
mov
push
cmp
addr16
imul
push
mov
pop
sub
add
push
loopne
aam
pop
fwait
stc
out
xor
ss
xorl
in
jbe
inc
mov
xchg
pusha
jmp
mov
mov
sbb
add
test
pop
scas
lahf
cli
int3
jne
inc
xchg
popf
addr16
jg
pop
mov
inc
adcb
fidivs
fmul
aad
inc
add
mov
fcompl
cmpsl
outsb
mov
into
xor
pop
jg
mov
cwtl
fists
test
cmpsb
bound
enter
fimuls
push
adc
mov
sub
lock
fnstsw
dec
xchg
les
int3
jbe
xor
mov
jl
ffree
cmp
xor
ss
xchg
call
add
imulb
cmp
mov
pop
add
sti
adcl
fiaddl
or
push
push
arpl
ss
pop
mov
movsb
sti
fisttpl
xchg
cwtl
or
adc
in
sub
mov
pop
adc
mov
ret
mov
int
sub
mov
xchg
dec
inc
jne
dec
xchg
rcrl
add
sbbl
dec
pushf
sahf
imul
xchg
sbb
insl
mov
lret
sbb
cld
xor
je
dec
mov
dec
rcll
adc
pop
ret
leave
icebp
mov
outsl
bnd
mov
sbb
fs
ja
lcall
inc
add
xor
adc
xor
out
push
fimuls
lahf
xchg
shlb
outsb
shll
rolb
pop
imul
imul
movsl
ja
lock
or
es
icebp
mov
sbb
out
mov
mov
test
pop
dec
loopne
in
gs
lcall
pop
scas
inc
cmp
push
ret
mov
jl
ljmp
aaa
lds
clc
or
sub
cli
cmpl
push
mov
jb
out
or
dec
pop
jmp
test
idivl
sar
jmp
jb
pusha
popa
jl
pop
dec
mov
adc
mov
lcall
iret
bound
cmp
lock
inc
sub
mov
jnp
or
sbb
aam
sbb
out
jo
xor
fnsave
pop
lret
lahf
ret
cli
ret
sbb
divl
rcrb
push
ret
rclb
dec
fisttps
inc
comiss
mov
jnp
mov
add
test
jg
dec
or
pusha
mov
sarl
mov
jg
inc
das
or
insl
pop
inc
movsb
andl
adc
push
das
fisubrs
fsub
sub
sbb
adc
mov
pop
icebp
inc
mov
xorb
roll
mov
sbb
cltd
and
push
sbb
dec
lds
jae
push
jne
ss
cltd
lahf
inc
adcb
enter
pop
mov
mov
jne
sub
sbb
popf
sub
or
pop
jp
cmc
lahf
pop
adc
dec
repnz
pop
andl
fwait
sbb
pop
lock
loope
mov
xor
add
inc
cli
cmpb
sub
jno
mov
sar
push
cmpsb
fcompl
call
je
sahf
lock
xchg
out
and
in
imul
mov
jnp
cltd
inc
xor
push
idivb
aad
jnp
ljmp
jg
fbstp
or
mov
std
adc
test
mov
mov
pop
and
pop
and
push
xchg
xor
testl
stc
mov
out
inc
aam
imul
add
addl
scas
xchg
sbbl
fsts
jle
loopne
test
push
xchg
xchg
and
xchg
inc
pop
and
inc
lcall
lahf
xchg
inc
call
outsb
jg
arpl
into
leave
pop
je
into
lcall
jle
scas
and
push
dec
push
sarb
testb
pushf
xchg
dec
xor
mov
jno
inc
mov
jmp
jns
mov
jle
aad
pushf
stc
pop
scas
and
mov
mov
mov
js
mov
nop
stos
data16
je
shrl
cs
addb
xor
icebp
adc
cld
es
dec
repnz
outsl
orl
jbe
and
sbb
ljmp
sub
bound
hlt
push
jbe
cli
iret
xchg
pop
lds
push
loop
adc
jl
xchg
jae
mov
add
xor
jo
mov
push
inc
test
mov
or
push
cmpsl
subb
lods
outsl
int3
pop
in
dec
popa
mov
xchg
dec
cmp
dec
cmp
nop
push
xor
inc
adc
rorl
and
sub
sub
add
xchg
push
mov
jge
mov
div
mov
push
bound
mov
push
movsb
xchg
or
mov
pop
pop
divl
aad
insl
sub
imul
nop
and
adc
xor
inc
adc
push
stc
jl
push
lods
fadd
mov
rclb
imul
lret
jns
vfmsubadd231pd
sbb
les
xchg
imul
jne
fsubp
pop
adc
mov
rcrl
inc
sbb
jp
sub
or
clc
jge
pop
popa
push
sub
inc
in
lock
loope
mov
aad
jecxz
test
xchg
lock
pop
sbb
inc
mov
adc
rcrb
mov
or
sti
pop
cmp
add
cwtl
cmpsb
movsb
cs
add
fsub
xchg
loope
in
mov
xor
fwait
push
call
pop
aas
fldcw
adc
lods
hlt
scas
inc
mov
push
xchg
adc
push
adc
dec
mov
leave
gs
std
mov
aad
push
test
push
and
push
mov
mov
cmp
sbb
mov
clc
dec
es
pop
data16
shr
rcrl
lock
inc
xor
sbb
sti
js
jg
add
xor
or
xchg
les
test
jne,pn
les
mov
adc
xchg
jb
dec
xor
or
sbb
jl
pop
adc
mov
inc
insb
addl
jbe
jnp
sub
shlb
in
mov
jnp
push
pop
jg
lret
popf
jmp
xor
clc
and
push
je
jp
sub
daa
daa
mov
dec
movsb
cmc
pop
hlt
loope
popf
bound
xor
add
pop
xlat
adc
imul
inc
and
in
daa
mov
or
stc
cmp
jno
jo
insb
stos
add
cmpsl
nop
ds
cmp
or
repz
mov
cmc
cs
loope
mov
sub
ja
pop
loopne
sbb
lcall
jb
or
mov
bound
cmpsb
dec
dec
imulb
mov
cmpsb
bound
or
lods
popa
jl
mov
mov
test
out
and
sti
dec
insb
repz
pop
les
cltd
mov
xchg
ret
cmp
dec
push
mov
xchg
rcrb
iret
in
xchg
imul
xor
fistpll
and
dec
or
mov
lods
sarb
dec
xor
cmpl
and
ds
mov
sbb
jp
outsl
mov
cli
in
out
cmp
les
mov
in
xchg
das
popf
xor
fadds
push
push
in
fwait
lret
dec
jb
xor
push
lcall
or
pop
and
cmc
arpl
data16
push
call
dec
leave
clc
enter
outsb
cmp
dec
imul
sti
loopne
stc
jle
mov
aas
adc
or
test
loop
clc
adc
fsubr
je
lock
jge
mov
mov
mov
push
mov
pop
arpl
test
push
or
or
adc
xchg
icebp
repnz
sbb
dec
sub
push
scas
adc
sbb
mov
gs
pop
cli
ret
jmp
andps
adc
cmp
cmc
push
cmp
pop
stos
xor
rorb
pop
call
fcmovnbe
mov
mov
sbb
cmp
shrl
es
push
stos
jbe
rcll
fwait
divb
mov
adc
inc
cld
inc
pop
pop
sbb
adc
std
push
icebp
xchg
addr16
add
mov
sbb
cld
pop
inc
jnp
repnz
out
and
sbb
mov
daa
or
loop
leave
sbb
push
insb
mov
dec
scas
in
shrl
lret
pop
shrb
xor
loop
and
or
fildl
fldenv
push
jne
push
in
loop
int3
add
sub
jmp
dec
daa
je
mov
or
jl
xchg
ucomiss
cmp
mov
xor
and
add
rcrl
jne
shrl
mov
sbb
imul
mov
jle
fsts
pop
sbbl
int3
cmp
aas
jnp
icebp
xor
jne
repz
into
insb
mov
push
mov
dec
lahf
and
fbstp
xchg
mov
and
inc
mov
fs
push
aad
pushl
inc
add
sbb
outsb
fbstp
ds
jnp
movsb
mov
add
adc
ja
mov
sub
aad
pop
xor
mov
stos
sbb
sub
or
in
lds
cwtl
mov
mov
dec
addr16
int
push
aam
sbb
test
out
insb
lods
andl
push
adc
pop
sub
pop
in
dec
and
jecxz
push
mov
push
xchg
subb
lock
sub
jge
repnz
push
fwait
cltd
inc
jbe
pop
lret
test
inc
mov
movsb
mov
xlat
push
sub
mov
lea
into
push
cmp
test
fs
add
lds
data16
fs
ljmp
cwtl
imul
int
xchg
and
sbb
shlb
and
inc
pop
fnstenv
sbb
xor
xor
cmpsl
mov
or
xchg
mov
and
mov
add
fwait
xchg
or
jns
mov
cmp
outsb
in
push
dec
pop
xlat
sub
add
push
xor
pop
jbe
pop
dec
aas
je
add
ljmp
ljmp
stc
fdivrp
push
adc
mov
fwait
jno
loope
sbb
xor
xor
xchg
sbb
ror
or
out
xchg
loope
stos
xchg
or
les
jne
lock
fldt
push
ss
lret
sub
cld
es
sti
push
mov
and
mov
imul
clc
lret
test
popf
add
push
loopne
movsb
aam
fs
nop
and
jle
pop
loopew
xchg
xor
add
adc
outsl
add
mov
or
cli
dec
sahf
fwait
aaa
mov
sub
cmp
push
inc
sub
sub
adc
adc
mov
xchg
jg
lcall
leavew
sti
mov
pop
mov
xlat
ss
scas
xlat
cmp
orb
xchg
test
dec
out
mov
or
int3
xor
add
lcall
pop
xor
pop
mov
scas
xchg
cwtl
pop
les
aad
fldcw
xchg
xor
rorb
xchg
and
in
fdivl
cmp
bound
jne
or
or
int
fadds
insl
xchg
leave
int
inc
jmp
aam
xchg
test
jecxz
cmp
push
cmp
mov
adc
aas
test
rorl
sbb
mov
fs
shrb
imul
jb
ds
ret
adc
or
loopne
jmp
rcll
and
pop
push
and
xlat
push
mov
fdiv
mov
sahf
and
js
mov
nop
push
or
loopne
inc
push
adc
mov
or
add
shlb
ljmp
add
xor
fcomps
cmp
test
imul
test
xchg
mov
in
cmp
pop
clc
dec
sahf
das
loop
fldt
cs
mov
test
and
ss
cmp
test
sub
push
push
stos
ja
jg
pop
jle
xchg
xchg
or
push
add
cmp
imul
popa
shrb
movsb
jns
jmp
loop
xchg
leave
inc
out
stos
test
or
das
mov
test
xchg
imul
xchg
rolb
lcall
das
fsts
lods
mov
mov
pop
in
test
push
hlt
ret
gs
xor
jo
cmpb
lods
repnz
sahf
cs
inc
dec
in
sbb
adc
sub
inc
dec
and
test
lret
mov
outsl
mov
mov
pop
mov
sahf
frndint
and
gs
in
lahf
xchg
mov
jmp
mulb
ljmp
lea
scas
enter
jno
fisubrs
sbb
add
out
push
cmp
jns
cmpsl
pop
scas
push
add
pop
lret
sub
mov
je
jg
inc
lea
mov
xchg
fidivrs
repz
lds
bound
rcrl
cltd
in
xor
popf
call
dec
lahf
jl
xchg
sti
in
sbb
ss
stos
js
jmp
push
and
lods
cmp
std
mov
pushf
call
inc
pop
jp
xorb
or
pop
sbb
repz
pop
pop
int
pop
add
dec
push
mov
insb
mov
sub
mov
dec
jb
inc
jbe
jae
sbb
mov
cmp
repnz
insb
push
in
pop
arpl
jmp
fnsave
ret
push
addl
jle
ret
jbe
lds
and
mov
lock
sub
sbb
pop
fsubrp
sub
add
sub
ret
pop
call
mov
repnz
jle
addr16
sbb
jne
push
push
xchg
add
fadd
or
mov
cmp
ds
add
and
into
sbb
mov
xor
roll
repz
mov
insl
sub
inc
popa
mov
mov
pusha
jmp
xchg
adc
ret
aaa
dec
testb
inc
sbb
pop
popf
sbb
sub
xor
xor
loopne
inc
fisubl
into
js
cmp
in
outsl
adcb
fdivl
and
negl
jl
enter
ret
mov
stc
dec
sar
or
adc
jle
cmc
into
and
loope
stos
sarb
cli
sub
scas
aas
add
jp
cwtl
testb
stos
push
xor
inc
test
sub
fs
mov
mov
sbb
outsl
mov
mov
out
nop
xchg
pop
mov
mulb
dec
mov
pusha
cmp
imul
in
dec
jge
mov
or
sub
iret
push
add
aas
mov
cmc
xchg
std
out
jecxz
xorl
xchg
cwtl
sbb
rcll
jae
mov
hlt
movsl
stos
push
insl
daa
hlt
in
repz
xchg
scas
sbb
cld
mul
jns
bound
aas
jl
inc
in
dec
mul
sub
orl
mov
and
mov
jnp
ds
lret
dec
adc
dec
add
push
cmp
xor
cmp
popa
add
and
sub
add
pop
jl
test
cmp
std
scas
inc
decb
lods
sub
or
dec
mov
pop
les
mov
xor
jnp,pt
and
aas
mov
sub
out
xchg
test
xchg
xchg
notb
fisubl
cmp
pushf
in
stos
xchg
jo
pop
stc
stc
mov
leave
data16
dec
pop
mov
pop
mov
fsubrs
stos
loope
lahf
xchg
inc
sbb
or
push
or
push
cltd
ret
mov
pop
xor
pop
pop
sub
add
insl
stos
repnz
mov
cli
sub
push
mov
fiadds
mov
adc
decl
mov
jnp
or
mov
pop
xor
stos
push
inc
std
pop
test
ret
imulb
push
icebp
push
mov
test
out
das
stos
add
mov
jnp
int3
jmp
cmpsl
mov
jb
inc
mov
vprotq
arpl
cmpb
push
fs
or
clc
push
outsl
sbb
push
lcall
fisubrl
add
popa
aas
push
cmp
or
movsl
cmp
push
sarb
test
add
mov
push
inc
xor
xor
pop
fnstenv
mov
adc
or
ja
push
negl
mov
sbb
stos
adc
rcrl
inc
adc
hlt
mov
mov
aam
dec
dec
jg
dec
lods
adc
sbb
jbe
call
in
and
test
jnp
sbb
push
mov
sub
sbb
adc
jb
cmpsl
add
clc
popl
pop
jl
add
inc
ja
push
popl
outsl
xor
les
cltd
adcb
mov
cmp
sub
or
push
sub
mov
xchg
push
leave
pop
jge
incl
subl
jge
pop
cmp
or
and
arpl
ds
cmpb
sti
and
sub
or
jg
rorl
or
shlb
js
lret
sub
clc
andb
dec
mov
adc
jg
mov
repnz
test
mov
ljmp
outsl
inc
mov
iret
dec
jmp
cmp
and
mov
fnstsw
adc
out
aaa
pusha
sbb
xor
mov
push
leave
insl
lea
cmp
cmc
jmp
inc
ficoml
fimull
lret
pop
js
loopne
movsl
xor
or
test
or
push
sub
mov
sub
aad
xchg
lea
pushf
xor
dec
push
mov
neg
mov
fadd
jno
arpl
mov
lods
adc
adc
addr16
mov
sbb
imul
cwtl
pop
ds
fldt
enter
adc
mov
jne
push
fs
push
xchg
mov
jno
test
hlt
sbb
divl
add
mov
pop
aam
mov
test
push
jns
inc
adc
flds
inc
inc
mov
jbe
lods
pop
mov
dec
imul
push
and
insl
sub
mov
dec
cmp
or
popf
lahf
idivl
jge
lods
repz
repz
or
mov
int3
sub
dec
das
scas
rorl
jle
stos
mov
jns
nop
jo
add
pop
out
cmp
rcr
mov
add
ja
fidivrl
les
nop
and
fnstsw
les
ljmp
push
sub
sbb
jnp
hlt
loop
sub
cmc
cmp
loopne
jecxz
scas
cmp
out
loopne
popf
lahf
push
sbb
popa
scas
cmp
scas
out
pop
mov
dec
daa
arpl
das
lea
loope
out
cmp
in
pushw
mov
xchg
adcl
pusha
ret
push
jmp
popa
mov
push
push
loop
js
inc
xor
mov
jg
push
ret
pop
mov
lods
cltd
fwait
mov
test
sti
xchg
shl
pop
jge
dec
repnz
dec
sub
outsb
push
push
push
cmpsl
dec
push
add
jbe
mov
fwait
sub
or
imulb
adc
test
mov
sub
sbb
movsl
mov
clc
push
xchg
inc
push
xchg
xor
rolb
sbb
mov
loope
call
inc
jmp
popa
mov
pop
sub
lods
sarl
xor
xchg
and
ljmp
addr16
js
dec
jecxz
ret
mov
mov
dec
push
pop
cmp
mov
sub
aad
mov
subb
push
ret
mov
dec
subl
fcompl
shr
dec
pop
pop
ja
or
cmp
xchg
int3
push
push
push
jg
fmull
mov
ds
outsl
push
mov
fiaddl
pop
pop
mov
ds
cmp
mov
push
jne
dec
pop
lods
int3
cltd
out
cmp
push
cmp
iret
loopne
stos
mov
dec
inc
jo
and
inc
cmp
mov
leave
lds
mov
les
std
lahf
icebp
stos
lret
dec
enter
cmc
lahf
das
inc
sub
iret
or
sub
push
inc
and
imul
sbb
xor
xor
inc
sbb
shl
jbe
bound
inc
in
das
push
int
test
dec
lock
stc
stos
clc
adc
cmp
pop
and
sti
push
outsb
leave
mov
dec
ficoms
inc
push
stc
sub
daa
ja
dec
test
mov
jb
call
mov
jp
mov
shr
and
mov
int
mov
ss
push
icebp
jecxz
mov
outsl
jb
sbb
outsb
movsl
jge
mov
fld
gs
sbb
bound
cmp
xor
sub
imul
xor
flds
lcall
inc
cltd
iret
out
and
or
adc
scas
mov
adc
sub
push
ret
mov
pushf
in
pop
pop
shrb
mov
fdivl
cmpsb
pushf
stos
cmp
stos
mov
imul
fwait
sub
out
dec
mov
add
loop
xlat
mov
dec
cmp
insb
cli
inc
in
jbe
adc
jne
add
xchg
jnp
push
lods
test
lods
loope
ds
jecxz
jge
mov
mov
shlb
movsl
mov
cmp
fcoml
in
mov
hlt
mov
dec
int3
test
aaa
pop
lds
push
out
or
dec
xchg
jnp
xor
add
cmp
sarl
inc
push
xor
push
frstor
call
enter
sarl
pop
jl
dec
pop
xor
push
lock
jmp
gs
push
clc
fxch
push
pop
in
sub
inc
shl
adc
xlat
aas
or
or
and
cmp
js
dec
dec
pop
jne
xchg
outsl
jae
mov
in
lea
mov
test
mov
rcr
sub
mov
mov
pop
pop
and
in
sub
aam
into
adc
ror
pop
add
fildll
and
dec
push
pop
dec
jmp
pushfw
xchg
movl
or
sti
cmpsl
jnp
lods
sarl
fnstenv
inc
loopne
pop
roll
addr16
cwtl
xchg
mov
push
dec
push
xchg
fiadds
rsqrtps
les
imul
cwtl
push
test
adc
pusha
imul
or
jmp
push
ja
lea
mov
dec
inc
int
mov
repz
dec
daa
xchg
imul
adc
ljmp
outsl
lret
lea
dec
ss
xchg
dec
test
ss
and
push
mov
je
in
fsubrp
es
clc
hlt
jmp
call
jle
inc
add
mov
xchg
mov
dec
fs
and
mov
in
sahf
lcall
inc
mov
in
mov
lea
add
jp
xchg
xchg
cmpb
jl
sbb
add
pop
sarl
pop
push
xchg
dec
mov
rcrl
in
xor
jg
mov
pushf
fdivrs
dec
imul
cmp
inc
pop
adc
mov
int3
jb
pop
test
rcll
push
cmp
mov
test
cmp
hlt
xchg
or
les
mov
add
mov
popa
stos
movsl
and
push
call
cmc
jbe
jle
out
rcl
iret
shll
jae
ljmp
leave
fs
xchg
mov
testb
push
call
mov
daa
test
xchg
popa
jne
xchg
sub
outsl
jnp
outsl
adc
push
adc
xchg
mov
mov
mov
or
adc
pusha
stc
dec
test
mov
pushf
in
cmpsl
pop
mov
sbb
pop
adc
mov
sti
pop
mov
pop
lock
mov
and
lcall
stos
enter
dec
dec
call
stos
orl
cmpsl
fdivl
clc
out
insb
pop
ljmp
dec
mov
xlat
sbb
jle
cmp
pop
jge
test
jbe
cmp
out
lods
cmpsb
dec
rorb
subb
test
xchg
in
pop
xlat
pop
loope
sahf
sub
fcomip
movsl
imul
inc
jle
stos
mov
mov
mov
push
hlt
jp
jecxz
cld
lods
dec
fs
xor
out
fdivrl
iret
xor
jp
rcll
pop
hlt
jg
inc
mov
call
scas
bnd
xchg
in
call
stos
sbb
movsl
lods
std
mov
imul
xor
cli
fldt
enter
addr16
lds
push
daa
mov
sbb
call
testl
cld
dec
lods
icebp
mov
int3
daa
push
nop
or
xchg
xchg
in
es
ret
cmp
mov
movl
fldt
ficompl
sahf
push
pop
pop
mov
bound
dec
insl
pop
pop
mov
pop
movsb
jns
repnz
pop
add
sbb
ret
adc
sub
mov
dec
cmp
jecxz
orl
xor
stos
jo
jno
daa
insl
jne
cli
cmpsb
lret
inc
pop
iret
ret
xchg
mov
xor
mov
cmp
xchg
clc
ljmp
popa
aaa
jno
sahf
pushf
and
mov
mov
or
push
jle
cmp
pop
stc
add
inc
arpl
dec
rorl
and
dec
lods
loop
mov
fcmovbe
fwait
testl
xor
push
repz
and
clc
inc
cmp
push
fildl
xchg
les
add
popa
fidivl
sbb
mov
imul
cmp
leave
sub
leave
sub
test
xor
addr16
out
sbb
repz
jne
mov
sub
mov
pop
xchg
add
mov
jns
jae
xlat
pop
ljmp
outsl
sub
push
adc
imul
fcompl
setnp
sub
arpl
bound
add
arpl
mov
inc
inc
mov
dec
or
and
cmp
popf
in
out
test
jle
mov
lret
mov
adc
mov
push
lods
fisttpl
das
mov
or
icebp
push
popf
sub
or
iret
in
dec
enter
cmp
add
xchg
movsb
or
pop
add
sub
cltd
ret
sbb
in
xchg
in
imul
in
ret
insb
daa
aas
rorl
sbb
test
aas
outsb
push
mov
pop
add
jle
mov
mov
cli
clc
vpsadbw
sarl
lret
outsl
xor
call
jmp
push
test
sbb
lcallw
pop
outsb
out
bound
mov
xchg
xchg
lcall
mov
out
cwtl
sti
loope
xor
mov
or
aam
aas
loopne
bound
shll
adc
popf
pop
sub
insb
ret
or
lret
outsl
add
lahf
cli
sahf
mov
stos
or
mov
jmp
mov
out
adc
cmp
push
push
sub
xor
movsb
js
ljmp
in
pop
mov
pop
jb
push
mov
sbb
push
pop
push
insb
lods
sarl
shlb
adc
mov
jmp
rcrb
in
inc
enter
data16
xchg
mov
fildll
cmp
das
xlat
cwtl
mov
sarl
push
iret
sbb
add
rcr
cmpsl
pop
lahf
and
gs
dec
mov
int
and
arpl
adc
sbb
les
mov
sub
jl
lret
std
cmp
movsb
rol
push
mov
mov
mov
xchg
hlt
popf
roll
out
cwtl
inc
jae
lods
push
pop
mov
adc
sub
sub
xchg
xchg
popf
push
dec
add
pop
push
movsl
pop
lcall
mov
jae
xchg
sub
dec
push
call
pop
ds
push
es
inc
js
add
dec
iret
outsb
fiaddl
inc
cld
push
mov
fs
mov
pop
out
sub
cmp
lea
rcr
lret
test
adc
add
xor
int
mov
or
cli
into
popf
aaa
or
jg
jo
mov
orl
xor
out
inc
jp
popf
fdivrs
jg
pushf
data16
add
jp
nop
dec
mov
jmp
pop
pop
test
orl
call
lret
ja
rol
dec
sar
push
int
adc
add
ret
mov
les
bound
in
mov
sahf
inc
adc
sbb
bsr
or
or
sbbl
adc
lcall
insl
push
xchg
cmp
scas
mov
loop
addr16
push
cmp
add
mov
cmp
mov
rcll
or
xchg
sub
mov
sub
stos
sbb
jnp
adc
xlat
pop
lahf
rcrb
loope
addr16
pop
mov
mov
mov
addr16
cmp
adc
or
lods
lahf
adc
xchg
pop
jne
mov
sbb
repz
inc
inc
scas
mov
jge
inc
cmp
xchg
pop
jmp
push
insb
scas
adc
mov
mov
fsubr
js
xchg
mov
xchg
xchg
lcall
sub
hlt
or
loopne
jns
jo
sub
jl
popf
sbb
lret
testb
ds
or
imul
dec
sti
and
clc
add
jmp
mov
mov
cmc
shrl
in
in
xor
push
mov
dec
sbb
ss
fiadds
sub
pop
mov
in
pop
sub
xorl
mov
int
enter
imul
mov
and
dec
aas
jb,pn
rolb
movsl
mov
fistps
pop
lahf
fwait
adc
subl
inc
ja
stos
mov
xor
mov
mov
cli
test
das
aaa
and
sbb
test
or
jecxz
push
fdivrs
mov
adc
shlb
ja
js
pop
mov
mov
lea
mov
push
sbb
pop
inc
movsb
jae
ret
clc
test
push
dec
xchg
rol
jmp
xchg
jmp
aam
jge
jne
push
cmc
mov
jbe
scas
sub
jbe
sbb
scas
into
jb
inc
loope
adc
leave
xlat
jp
xchg
xchg
xchg
mov
mov
sub
fidivrl
scas
jns
push
loopne
jl
dec
mov
inc
xor
and
push
sub
mov
jecxz
mov
fwait
dec
xchg
leave
dec
fadds
daa
and
dec
add
xchg
sub
fiadds
fimuls
mov
in
js
enter
stc
xchg
out
movsl
repz
jmp
push
and
or
pop
push
cmpsb
mov
fbstp
loopne
cmpsl
int
fistps
add
aad
mov
sub
test
mov
and
pop
fwait
aad
out
data16
es
out
mov
repz
mov
test
jmp
inc
mov
sub
xchg
clc
inc
jg
test
dec
cmpsl
xchg
cmp
ret
fildll
mov
imul
jae
mov
pushl
xlat
add
ds
bound
mov
dec
xchg
and
dec
lods
push
dec
sbb
loope
pop
mov
fisubrl
push
sbb
sti
inc
movsl
mov
jmp
aad
mov
inc
daa
sbb
mov
and
mov
iret
inc
adc
sbb
sub
xor
sbb
push
pop
and
xchg
cltd
negl
inc
shll
stos
fsubs
xor
jnp
adc
cli
rcrb
lret
inc
lods
sub
pop
jp
pop
push
push
push
ljmp
mov
cmp
aam
push
push
adc
or
xor
mov
xchg
adc
and
loop
jb
pop
std
aaa
xchg
fwait
inc
orb
pop
add
sarb
call
mov
inc
sbb
orl
orl
popa
pop
cmp
mov
xorl
adc
mov
xchg
in
or
rcrl
pop
lds
mov
push
data16
and
movsl
jne
icebp
fwait
add
xor
stos
dec
inc
out
cs
adc
add
fadds
cli
cld
push
dec
jp
int3
and
cmp
cmp
mov
stos
mov
outsb
cmp
push
or
adc
movd
jle
loope
cmp
popa
outsb
xchg
sbb
dec
pushf
ror
notl
scas
arpl
out
repnz
jmp
add
mov
gs
push
daa
jno
add
dec
out
inc
jnp
aad
push
cmp
inc
inc
or
cmp
push
cs
mov
jp
stc
shrb
daa
push
push
stc
aad
cmpsl
adc
inc
inc
test
sbb
inc
cmp
fcompl
pop
hlt
insb
xor
adc
cmp
lret
repz
jmp
clc
lods
adc
dec
xchg
lcall
cmc
pop
sbb
loop
mov
lcall
addr16
repz
cmp
cwtl
mov
or
es
pop
push
shr
pop
cmp
nop
mov
adc
push
cmovs
cmp
xchg
scas
orl
lea
mov
addr16
mov
jmpw
jp
les
cmp
push
shrb
lds
enter
mov
fstps
or
cwtl
shll
dec
andb
outsb
dec
dec
inc
fiadds
iret
and
or
add
loop
inc
pusha
leave
cmp
movsl
and
nop
or
sbbb
xor
lods
jns
mov
stc
push
addr16
divl
mov
mov
jp
mov
sar
inc
fwait
xor
dec
repz
dec
pushf
test
daa
adc
sbb
inc
hlt
out
gs
aad
mov
push
fwait
inc
push
pcmpgtb
movsb
mov
iret
arpl
xor
mov
or
push
lahf
push
mov
and
mov
sbb
sub
cmp
dec
pop
pop
xchg
fisttpll
cltd
loopne
sub
jns
out
aas
shlb
push
dec
adc
mov
mov
les
rep
push
adc
ja
ljmp
push
std
dec
and
scas
jecxz
rolb
cmp
sbb
jno
rclb
jp
cmp
stc
call
ljmp
xchg
movsl
sahf
jno
mov
rcrb
aam
fisubl
dec
das
cmp
pop
jns
adcb
mov
imul
adc
and
imul
or
sub
xor
aas
cmp
test
jl
shld
loope
xchg
dec
aaa
mov
mov
xor
outsb
push
mov
cs
jmp
pcmpgtd
imul
dec
jmp
es
arpl
mov
stos
hlt
pop
mov
je
adc
cmp
jb
test
ret
push
rcll
test
loop
mov
mov
popf
ficompl
lret
mov
fs
insb
stos
pop
mov
jmp
shl
out
cmpsb
push
stos
cmp
hlt
xchg
setns
or
pop
and
inc
push
push
sbb
sti
push
xor
xchg
sbb
stc
shll
jae
pop
shl
cmp
adc
mov
movsb
shll
jbe
push
cli
push
inc
repnz
or
mov
dec
pop
xchg
add
xor
xor
neg
jmp
inc
clc
mov
insb
mov
in
pop
mov
or
add
pop
sbb
scas
dec
mov
push
out
rclb
dec
lods
adc
je
push
xor
dec
xor
shl
or
out
mov
nop
mov
lock
icebp
add
iret
fstpt
sbb
sbb
mov
mov
pop
cmc
stos
sbb
sub
les
into
aaa
je
dec
imul
mov
cli
mov
gs
stos
jl
and
push
repz
cmp
repnz
sysenter
mov
lds
sbb
cmc
jmp
insb
pop
jg
repz
cltd
gs
jmp
dec
and
int3
xchg
mov
lock
pusha
fisubrs
jp
xor
mov
int
pop
nop
inc
pop
add
and
lock
mov
pop
pop
insl
stc
pop
xor
dec
bound
pop
mov
fucomi
jo
mov
push
jno,pt
stos
pop
mov
movsb
jl
hlt
sbb
jne
jae
ret
mov
adc
cmc
inc
mov
in
lds
mov
sarl
or
push
rolb
outsl
ret
daa
clc
adc
cmpsl
inc
lds
jmp
mov
or
or
in
mov
push
into
mov
xor
jl,pt
pop
mov
fisttpl
frstor
mov
int
addr16
mov
jnp
imul
xlat
pop
dec
movsb
repz
out
adc
mov
jmp
push
xor
pop
testb
inc
loop
inc
push
and
lods
pushf
cmc
mov
repnz
push
fs
adc
mov
arpl
xchg
pop
cmc
sub
sub
pop
ret
mov
cmp
xchg
push
cmp
stos
scas
mov
xor
sub
jle
mov
sub
bound
push
xchg
push
jecxz
mov
cltd
push
add
outsl
cld
inc
jns
icebp
mov
fstpt
call
pusha
pop
outsb
push
es
aas
lods
adc
in
iret
push
bound
in
sub
roll
test
jae
xchg
mov
cwtl
jns
push
jnp
pop
mov
or
xor
xlat
ss
sti
call
adc
xchg
sbb
les
mov
imulb
push
loope
mov
das
adc
xchg
cmp
push
pop
mov
imul
lods
and
fdivl
cmp
ficompl
mov
fsubrs
loop
jp
sbb
sub
push
jg
or
or
aad
mov
fwait
inc
cs
cmp
inc
push
sahf
jle
xor
sahf
mov
inc
cltd
iret
int
or
push
mov
lahf
shl
mov
clc
stc
imul
mov
mov
xor
dec
jp
in
jb
mov
out
jecxz
mov
lahf
and
mov
mov
clc
dec
push
lock
es
push
leave
jnp
pusha
mov
in
jo
xlat
dec
cmp
push
cmp
lock
pop
sbb
fstl
pop
mov
mov
sti
jecxz
test
inc
pop
out
int3
mov
dec
in
popa
jecxz
sahf
dec
movsl
fmull
lds
add
leave
mov
inc
jge
mov
mov
insb
pop
push
mov
pop
scas
xor
xchg
ljmp
andl
cmpsl
mov
push
mov
cltd
mov
in
jne
and
je
xor
mov
sub
movb
stc
and
es
aam
mov
dec
inc
stc
mov
xchg
js
shl
jns
testb
imul
stc
sbb
nop
xor
hlt
imul
mov
add
jmp
or
push
xchg
fiaddl
inc
je
mov
rclb
cmp
jnp
and
pop
dec
fadd
pop
lcall
lods
mov
data16
ds
das
sbb
outsb
mov
fistps
inc
cmp
movsl
fmuls
fisttpll
and
orl
cmpl
mov
and
add
std
lcall
subl
push
test
mov
and
aad
sbb
lock
repnz
test
inc
aaa
data16
aaa
and
fmuls
sub
mov
push
cmp
and
mov
lret
jg
xor
inc
insl
xor
repnz
testb
in
mov
cmp
fmuls
push
mov
xor
mov
mov
out
cmp
adc
sub
outsl
push
clc
call
xchg
adc
stc
es
cli
in
push
cmp
mov
lret
jno
jb
ret
fs
lahf
divb
or
jmp
cmpsl
sbb
invd
cwtl
xchg
gs
mov
jbe
push
out
in
es
xor
popa
xchg
jmp
inc
sub
pop
lahf
push
xor
jnp
in
inc
rclb
mov
xchg
fistl
mull
and
push
ja
test
jnp
sbb
cmp
push
fidivrs
dec
cli
xor
or
inc
pop
jecxz
xlat
ret
sub
popa
push
subl
xchg
xlat
aad
in
push
repz
add
dec
jle
mulb
outsb
scas
rcll
add
mov
sbb
cld
ljmp
jbe
pop
ret
icebp
or
outsb
jns
ret
jl
jg
or
push
sub
inc
mov
jge
shlb
icebp
push
int
mov
mov
xchg
arpl
icebp
mov
or
out
xchg
and
decl
int3
icebp
push
ret
outsl
iret
adc
sbb
enter
addl
movsl
sub
or
outsl
sub
mov
sahf
push
lea
dec
divl
push
lds
dec
ja
push
ds
inc
sub
es
push
dec
jne
sbb
mov
scas
fwait
inc
pop
push
dec
jecxz
jns
aad
xorl
std
mov
fisttps
ret
loopne
adc
imul
jne
pop
popf
inc
scas
mov
xchg
test
movsl
leave
inc
inc
push
dec
stc
cmp
and
mov
out
cltd
dec
sbb
cmp
and
or
sbb
push
mov
sahf
mov
jg
in
rcrb
xchg
pop
pop
mov
jmp
mov
cmp
cmp
enter
add
inc
or
inc
sbb
mov
iret
hlt
mov
arpl
pop
mov
xorb
arpl
out
push
add
out
stos
test
ds
mov
sbb
push
jno
leave
and
mov
fnsave
and
mov
push
pusha
fists
lcall
sti
ja
outsb
or
and
inc
bound
push
add
dec
cld
je
or
sub
testl
xchg
push
add
movsl
repz
es
mov
sbb
fildl
pop
mov
stos
sbb
xchg
movsl
sbb
lods
mov
stos
int3
sbb
faddl
subb
out
shl
fucom
and
mov
add
ds
sub
out
das
std
xchg
push
rcll
das
mov
jg
inc
sub
inc
pop
cli
out
stos
gs
pop
sbb
mov
test
and
icebp
stos
loopne
ja
pop
lods
sbb
fcoms
std
adc
scas
das
jecxz
arpl
jp
out
lcall
mov
pop
sti
adc
mov
sbb
or
repz
push
negb
aad
ss
push
test
jmp
cmp
fisubl
mov
sbb
pop
and
idivl
sar
fnstenv
mov
js
cmp
inc
cs
adc
add
mov
loope
dec
mov
stc
movl
inc
fmul
cli
adc
lds
xchg
aas
cld
xlat
adc
jle
cwtl
scas
push
push
mov
repnz
add
outsl
leave
fldl
and
outsl
and
rorl
pop
mov
lret
and
push
pop
ljmp
sti
int3
lods
fstps
lea
or
xchg
pusha
pop
mov
loop
xlat
lods
scas
movsb
inc
jnp
loop
xor
std
mov
inc
xchg
xchg
cmp
push
pop
cmp
dec
sbb
mov
or
xor
shrl
pop
push
mov
clc
adc
outsb
call
or
sbb
out
call
lods
jns
sbb
fdiv
ljmp
shll
leave
popf
mov
addr16
insb
dec
test
scas
pop
das
sbb
sub
dec
jnp
push
cli
test
xchg
cltd
push
test
imulb
fcmovnb
aam
xchg
lret
das
cmp
in
xchg
xor
add
xor
aam
dec
lret
popa
dec
jp
shll
or
cmc
rcrl
popl
fwait
dec
insb
andb
les
jmp
push
jmp
mov
push
adc
leave
add
xchg
pop
xchg
sub
push
inc
lsl
gs
cwtl
pop
adc
sub
fdiv
mov
mov
jge
inc
mov
cmp
mov
out
clc
jmp
std
stc
cltd
pusha
lret
iret
lcall
push
out
mov
jbe
js
enter
inc
xchg
out
into
lret
outsb
and
adc
mov
mov
mov
push
cmp
jmp
negb
iret
mov
and
or
es
out
lods
xchg
inc
jno
outsl
daa
pusha
stos
push
stc
int3
test
xor
dec
adc
ss
cmpsl
jge
ror
mov
sbb
das
loopne
in
lret
mov
es
scas
sub
inc
push
test
xorb
lret
mov
mov
lods
adc
push
mov
aam
rorl
lods
sbb
cmp
lea
push
out
mov
jno
jge
mov
out
inc
imull
repnz
mov
fdiv
loop
lea
mov
cwtl
std
in
lret
mov
sti
ret
jmp
pusha
fistpll
xor
cmpsl
sbb
adc
mov
mov
loopne
sbb
xchg
sub
mov
xchg
cmp
and
cmc
push
int
add
add
loopne
rcl
fadds
fisttpll
jne
inc
imul
inc
sub
push
rcr
jo
xchg
mov
sbb
pop
xchg
mov
or
iret
push
or
push
lret
sub
fucomip
decb
rclb
int3
in
sub
sbb
adc
push
sub
dec
and
js
in
xchg
daa
test
fidivl
jp
adc
sbb
push
xchg
loope
push
movsb
push
or
jae
dec
into
cltd
fistl
adcb
pop
pop
push
sti
jle
push
push
or
shr
push
mov
mov
inc
xchg
push
and
fadds
rorl
in
jb
mov
sub
in
stos
jb
ja
je
sub
sbb
aam
jecxz
gs
and
dec
fs
stos
pcmpeqw
sti
popa
add
insb
cs
mov
outsl
and
push
pop
sub
xor
shrb
mov
cmp
dec
inc
fiaddl
movsb
je
nop
lea
jo
mov
sahf
cmp
imul
fistps
jbe
mov
sub
dec
jge
clc
mov
cs
xor
scas
test
sbb
jne
adc
shll
cmp
mov
aad
cs
lods
pop
cld
fdivrs
ds
inc
imul
aam
adc
mov
pop
mov
jge
sbb
inc
loop
adc
or
es
inc
arpl
sub
rolb
subl
jb
push
mov
pop
jecxz
nop
inc
les
testb
iret
imul
mov
jnp
xchg
outsb
add
clc
sub
fadd
insl
and
xchg
into
ret
sti
dec
lods
iret
inc
cltd
push
scas
jae
mov
jle
cmp
push
inc
cmovae
cli
das
sti
push
jnp
cmp
pop
xchg
loop
test
add
mov
push
mov
out
jns
shll
push
mov
and
dec
xchg
ret
xchg
subl
xlat
jmp
sbb
add
or
push
and
loop
lret
mov
rcrb
lcall
inc
stc
mov
faddl
push
sbb
mov
xchg
sti
sub
push
sub
jne
cmpsb
fldl
cmpsb
mov
lock
jo
mov
sarl
push
add
sub
or
out
adc
loope
test
push
in
scas
adc
lret
cmp
nop
mov
out
mov
sahf
and
xor
popf
dec
cs
jge
movsb
push
mov
stos
test
jmp
repz
aas
stos
and
and
push
movsb
push
movsl
cmp
ret
scas
sub
jbe
xor
iret
clc
in
loop
pop
lods
imul
addl
xchg
inc
sub
pop
add
xchg
nop
push
mov
push
out
jg
inc
sub
inc
add
lods
dec
not
mov
pmaxub
jmp
fisttps
je
push
mov
push
xchg
gs
adc
in
ja
xchg
xor
lea
fldenv
cltd
jnp
addr16
subb
xchg
cmp
pop
out
jp
lret
pop
xchg
orl
out
in
into
mov
xchg
xor
cmp
jb
jb
dec
push
sbb
xchg
or
fwait
fwait
sahf
pop
mov
inc
fistps
inc
mov
ret
fiadds
fdivrp
mov
lret
lret
add
pop
xlat
sbb
rcll
and
add
cmpl
xchg
shll
shrb
xchg
ss
imul
xchg
inc
icebp
cmp
adc
shlb
ss
outsl
dec
sbb
mov
sub
popf
mov
sub
je
pop
push
push
inc
outsl
punpckhbw
cmp
cmp
nop
ljmp
rcr
xlat
in
mov
lods
xor
jmp
mov
lahf
out
pop
je
mov
jle
hlt
sbb
out
pop
mov
idivb
notl
imul
jg
out
sub
lcall
mov
dec
jb
into
sub
cmc
mov
add
pop
in
js
sti
cs
inc
dec
or
xor
pop
mov
cld
mov
lock
test
inc
lret
imulb
push
out
sbb
mov
mov
xchg
xor
cmpsb
jnp
stos
ljmp
arpl
in
dec
mov
repz
dec
xor
sar
imul
popl
jg
nop
pop
push
mov
cwtl
adc
jno
sub
mov
jne
dec
push
imul
pop
div
cmpsb
add
adc
cmpsl
loope
pop
pop
add
adc
cmp
inc
inc
cwtl
call
xor
sbb
test
adc
out
push
sbb
iret
stos
lds
orb
jb
push
shlb
sub
adc
mov
push
push
fs
pop
adc
test
add
sub
int3
mov
stos
sub
scas
gs
jmp
out
mov
sub
into
sbb
push
movsb
push
int
xor
and
ds
out
repz
ds
das
fldcw
xlat
add
adc
sahf
adc
xlat
bound
icebp
aaa
push
sbb
pop
add
lock
fdivl
mov
jne
cmp
dec
insl
cmp
xor
shll
lahf
and
call
fmulp
push
outsl
aaa
dec
lret
hlt
sub
dec
sti
mov
fadd
shrb
lods
std
les
inc
sti
clc
mov
adc
mov
push
adc
loop
mov
mov
xchg
add
mov
and
add
into
sub
lods
loope
jb
movnti
subl
out
scas
cmp
rol
js
popf
pop
das
sub
ficoml
xor
nop
lcall
pushf
insb
fcmovnb
push
int3
xor
jbe
or
stos
es
shll
pop
mov
and
jb
push
aad
mov
mov
aas
int
cmovl
xchg
mov
in
push
mov
pop
xchg
in
cmp
mov
sbb
rcr
adc
stc
test
cld
pop
mov
sbb
xor
popa
jmp
mov
into
xchg
cltd
sub
in
cld
lcall
inc
or
iret
jbe
js
mov
sbb
dec
jne
xchg
push
jnp
rcrb
mov
fdivs
xchg
cli
call
or
jle
pop
xor
mov
ret
push
push
roll
sbb
test
iret
out
pop
inc
mov
xchg
out
sbb
shl
into
movsb
data16
jbe
mov
and
xchg
pop
or
mov
adc
push
sbb
lods
or
and
and
aaa
imul
mov
add
jle
popa
xor
pop
inc
xorb
cld
lret
sbb
out
insl
xchg
and
mov
dec
insb
or
outsl
stos
call
aad
xchg
sbb
aad
sbbb
xchg
xchg
pop
repz
out
inc
cli
mov
cmp
mov
cmp
sub
je
push
cmpsl
xor
and
and
scas
js
imul
jge
daa
outsb
xchg
jne
dec
cmp
add
cld
cmc
adc
aad
in
dec
sub
add
pop
or
push
inc
out
es
movsb
push
jle
xor
jg
pop
adc
cmp
outsb
mov
pushf
lods
push
ljmp
adc
xchg
pop
les
popa
inc
pmulhw
sarl
orb
test
jmp
xor
inc
std
sbb
and
xor
dec
dec
dec
inc
lock
in
daa
mov
sub
in
fstpl
sbb
pop
sbb
test
outsb
cld
test
jl
xor
popa
or
fdivrs
fsubrs
xchg
repnz
leave
out
jne
ficompl
add
loopne
jbe
sub
scas
mov
cli
push
jmp
cmpsb
pushf
in
mov
inc
mov
mov
stc
jg
mov
ret
out
addr16
test
adc
add
ljmp
test
sbb
jmp
sbb
stos
popf
or
test
mov
lret
adc
jnp
dec
stc
test
inc
xor
dec
int3
outsb
mov
out
push
ss
hlt
pop
jmp
nop
loopne
jp
cmp
push
popf
lea
mov
push
push
xchg
out
aaa
fistps
sub
cwtl
sub
add
stos
or
sub
sub
dec
cmpsb
pop
popf
repnz
jge
mov
out
pop
fs
arpl
test
icebp
pop
xlat
dec
sbb
xor
out
addr16
mov
je
jo
inc
and
mov
stos
mov
cwtl
es
pop
inc
mull
cld
movlhps
fcomip
les
push
add
movsl
shll
add
sbbl
cmp
pop
cmp
ljmp
loope
and
jecxz
pop
loopne
cltd
in
push
dec
push
cmpsl
add
enter
stos
ja
jmp
lahf
gs
inc
add
push
scas
sahf
movsb
fcomps
aaa
inc
mov
frstor
mov
and
push
cwtl
cmp
in
js
inc
scas
mov
sub
mov
inc
ret
pop
xchg
mov
cld
call
mov
lods
mov
outsb
jp
fimull
rorl
xchg
popf
sahf
mov
mov
vmovaps
sub
fstps
lds
pop
jp
movb
int
cwtl
imul
mov
sub
xor
and
or
xchg
sub
mov
dec
inc
jo
mov
sbb
sbb
xchg
push
ss
mov
loop
mov
mov
loop
sub
lds
test
div
mov
subb
xchg
and
shrb
bound
cli
dec
inc
outsl
push
push
lahf
loope
aam
nop
es
sub
jge
insl
push
jg
pop
movsl
or
jmp
scas
inc
pop
std
iret
scas
jp
adc
cwtl
rcl
push
cmp
mov
sahf
stc
lea
cmp
stos
test
cld
add
xor
and
inc
cmc
cmp
out
xor
nop
jl
imul
repnz
mov
test
insl
mov
or
adc
jbe
cmp
movsl
insb
ds
rcrb
or
stos
sub
sbb
adc
push
sbb
stos
pop
cli
std
adc
icebp
inc
push
insl
call
test
jmp
jo
popa
add
fsubrl
xor
es
add
sbb
mov
ljmp
repnz
pushw
and
jmp
cmp
cmpsl
scas
in
xchg
pop
xor
cmp
in
inc
loopne
jl
sub
rep
push
fisttpll
cmp
cld
adc
fidivrl
pop
scas
icebp
cltd
sub
imul
std
push
fwait
clc
rcrl
std
cwtl
xchg
pop
in
mov
popf
push
or
fs
iret
cmp
push
pop
hlt
jecxz
pop
adc
loop
ss
mov
jo
push
cli
ret
inc
mov
adc
adc
jp
das
icebp
dec
aad
inc
test
insb
or
clc
push
cmp
lret
push
cli
sub
dec
cs
push
ds
push
adc
or
push
mov
jp
xor
push
cli
xchg
lods
pop
loopne
pop
and
mov
sbb
inc
cwtl
ret
popf
jg
cmp
push
dec
push
es
pop
leave
lahf
dec
mov
call
bnd
leave
add
test
inc
mov
pop
inc
add
pop
push
mov
and
in
out
loop
or
jge
nopl
xor
add
and
movsl
mov
outsl
pop
subl
mov
pop
or
jne
lret
hlt
push
cmp
jae
fbstp
mov
fiadds
pusha
inc
not
rorl
rorl
cmc
and
pusha
lret
or
in
jle
popa
fcomps
mov
sbb
addr16
mov
arpl
xchg
push
loopne
mov
es
add
aad
cli
mov
mov
jp
in
mov
push
jno
mov
repnz
xchg
jae
aaa
xlat
adc
aad
iret
sub
loope
cmpl
icebp
fs
sbb
push
insl
push
shrl
fistpll
pop
jmp
dec
inc
and
popa
in
fldt
lea
push
sub
imul
mov
int
sbb
rcr
sbb
sbb
shrb
and
add
jno
adc
ljmp
xchg
test
sbb
in
sbb
push
aam
push
in
dec
les
xor
sub
and
js
push
test
cmpsb
jge
sbb
add
fnstenv
lret
adc
mov
push
out
cmpsl
fdivrl
lcall
int
movsl
cld
inc
or
cmc
loop
sbb
xchg
jg
xchg
pop
icebp
and
add
out
lahf
inc
insl
insl
cmp
sbb
ficompl
jmp
xor
cwtl
dec
push
ficomps
dec
ret
push
lret
lret
push
dec
fdiv
or
cmpsb
pop
cmc
shll
sub
sbb
lcall
dec
inc
cmp
lcall
cmpsl
daa
das
and
pop
push
insl
or
dec
stos
xchg
add
iret
cmp
pop
jecxz
xlat
dec
or
test
mov
xchg
mov
mov
mov
inc
mov
mov
ljmp
inc
and
lret
ljmp
pop
xor
mov
movsl
mov
and
ficomps
sub
jle
loope
scas
adc
in
mov
pop
stos
xchg
mov
aaa
fcmovu
or
into
lcall
and
push
pushf
and
push
mov
ljmp
je
mov
das
popa
stc
sub
mull
or
sbb
fidivs
push
cs
or
pop
movsl
jecxz
fnsave
ret
mov
out
dec
mov
or
cli
mov
mov
hlt
jns
jle
test
mov
xlat
inc
pop
sti
lock
cmp
xchg
add
lcall
jecxz
mov
dec
test
pop
insb
pop
ss
add
add
mov
and
adc
mov
adc
enter
insl
shlb
sub
mov
cli
mov
movsl
pusha
loope
add
movsb
jl
and
pop
loope
cmc
and
cld
cmp
lea
dec
call
scas
imull
test
popa
mov
mov
mov
dec
cmp
fwait
add
sub
leave
push
popa
xor
adc
out
sub
loop
addb
mov
jmp
cmp
pushf
pushf
jge
add
push
inc
sbb
jmp
jo,pt
pop
pop
sbb
fcmovnb
mov
add
aad
mov
int3
fwait
add
dec
fisttpll
xor
cmpsl
dec
lock
fsubl
daa
push
test
lret
dec
shll
shrb
sahf
jne
and
stos
jge
pop
lods
pop
and
push
dec
leave
fstl
or
sbb
gs
loop
pop
cmpb
pop
xor
test
sbb
cmpsl
lret
and
lret
xchg
push
cmpsl
mov
jmp
test
xor
or
lret
xchg
fsubrl
je
iret
fisubrs
sbb
add
jl
outsb
mov
sub
loopne
stc
inc
mov
stos
lahf
jns
arpl
pop
xor
pusha
or
xchg
scas
mov
mov
cmp
popf
mov
or
clc
popf
jae
ljmp
cmp
xchg
cmp
lods
push
ljmp
int
rolb
das
sahf
and
or
mov
loopne
adc
shl
mov
iret
into
enter
scas
stos
in
pop
xor
pop
mov
dec
outsb
cmpsb
or
insb
addr16
mov
add
stos
rclb
and
mov
sub
ret
and
jp
fwait
add
ds
in
sub
je
jae
lods
push
aad
add
pop
es
cmpsb
into
mov
pop
fwait
clc
out
and
test
addb
testl
rcrl
jne
inc
jmp
das
inc
inc
ss
js
xchg
inc
cmp
in
addb
dec
xchg
push
xor
sahf
sahf
xchg
add
push
sarl
clc
adcb
add
cld
in
mov
or
jb
mov
or
cmp
or
movsl
pop
push
mov
jg
and
and
imul
fwait
in
ss
mov
inc
or
addr16
cmpsl
cmc
ss
jb
mov
movsb
ret
insb
outsb
imul
ret
jg
loopne
push
xchg
pop
test
mov
rep
lret
adc
jo
jne
sbb
jl
jg
xchg
data16
ljmp
jbe
mov
jbe
inc
mov
fbld
or
dec
dec
dec
jecxz
pop
mov
test
mov
jge
mov
daa
sahf
jle
fnstsw
out
repnz
cmp
stos
mov
mov
lock
or
xchg
adc
mov
pop
xor
shll
mov
add
xchg
mov
pop
add
loopne
cmp
rclb
imul
xchg
inc
xor
in
in
out
push
dec
das
js
mov
repz
ficoms
js
outsl
into
lea
push
jno
int3
fisubs
inc
xchg
dec
bound
clc
loop
mov
mov
sarl
shll
stc
and
or
icebp
inc
inc
dec
shll
and
test
xchg
movsb
add
cmp
ja
into
out
bound
dec
mov
fistpl
cmpsl
aad
jp
pop
test
xchg
negl
lock
or
cmp
repnz
outsl
fsubrl
cli
insl
mov
rcll
fisttps
cs
lods
push
cli
add
dec
push
cmpb
add
mov
mov
outsl
push
cld
xchg
xor
sti
iret
cltd
and
ret
adc
cs
sub
jle
or
push
lds
jb
movsl
xchg
mov
test
data16
push
orb
pop
and
push
push
mov
lret
dec
inc
add
hlt
dec
sbb
push
cltd
movb
adcl
ret
sti
out
test
mov
aaa
sub
adc
leave
adc
std
mov
dec
inc
cmc
or
sub
out
int
mov
in
xchg
jle
mov
dec
jno
in
fisubrl
out
clc
daa
dec
sahf
sbb
xorb
adc
jbe
stos
lods
js
adc
add
push
mov
lahf
pop
mov
aad
jo
sbb
cmc
mov
pop
mov
cmp
jae
inc
imul
pop
pop
push
test
ljmp
in
cmpsb
ficomps
pop
jo
jle
and
inc
lock
mov
cmp
mov
daa
out
sbb
cmp
ss
mov
in
or
mov
rol
xchg
scas
sbb
mov
cltd
mov
cli
aas
test
lret
repnz
adc
lods
pop
mov
mov
or
xchg
iret
xchg
scas
mov
jnp
dec
cmp
mov
and
jge
xchg
xor
call
sar
add
dec
lods
fnstsw
jnp
and
or
or
push
sbb
jge
sub
push
mov
outsb
test
push
cmp
inc
sub
aas
loopne
push
xor
jb
sbb
or
or
fistpll
push
adc
movsl
in
mov
mov
rcr
pop
stc
xchg
add
pop
pop
xchg
mov
and
lds
fs
in
pop
sarl
cmp
mov
jb
in
arpl
int3
jmp
xchg
lock
lds
xlat
ficoms
scas
add
mov
mov
sbb
ret
sub
push
addr16
sub
es
cwtl
xor
out
add
fs
mov
and
cmp
xor
addb
ret
aad
cmp
mov
ljmp
or
pop
jbe
pop
pop
and
and
jne
xor
les
lock
push
andl
xor
incb
lods
leave
lcall
stos
in
or
and
shlb
push
mov
push
mov
ret
rcrl
push
fsincos
cwtl
adc
ret
shrb
xchg
sahf
pop
adc
pop
add
lock
outsb
xor
jbe
jecxz
adcl
into
leave
mov
sbb
leave
fstpt
lcall
aad
push
cld
repnz
mov
lods
cmpsb
xchg
call
mov
fs
lods
add
ja
adc
loopne
mov
mov
mov
incl
mov
aam
sub
sarb
adc
pop
adc
shl
stc
test
std
cmp
je
add
movsb
cs
mov
add
loope
int3
and
pushf
fldenv
and
movsl
cmpsb
push
add
mov
xchg
mov
mov
and
jb
movsb
and
repz
push
inc
cmp
mov
lret
bound
int3
adc
lahf
ret
popa
dec
ficoms
xor
rcrl
xor
mov
insb
sar
xor
pop
hlt
mov
cmp
or
or
pop
sbb
adc
or
fstps
andb
sti
int
mov
loop
das
and
jmp
pop
shlb
idivb
clc
aad
sbb
pop
pusha
insb
push
daa
popa
cs
cmp
fidivl
inc
enter
pusha
jbe
repz
xchg
in
inc
orl
push
jmp
fcomp
jb
outsl
xor
sarl
inc
in
outsb
fisttps
jns
and
jmp
adc
push
enter
and
loopne
and
popf
or
shrb
test
out
or
inc
shl
jae
ret
bound
popf
iret
pop
jge
outsb
push
movsb
and
pop
enter
cmp
insb
push
mov
mov
addl
xor
add
pop
in
or
mov
mov
sti
fwait
loopne
jae
leave
lahf
filds
and
int
sahf
repz
adc
lret
push
push
mov
mov
pop
jb
inc
jmp
lret
add
jmp
mov
pop
pop
mov
sub
in
in
push
jns
popa
in
loop
movsl
xor
jae
sbb
inc
xor
jmp
lds
daa
cmp
cmp
mov
jecxz
push
leave
insl
das
jmp
adc
pop
jmp
push
pop
jb
dec
mov
out
dec
or
addr16
les
xor
cli
jno
mov
mov
xchg
and
iret
aam
xchg
in
and
xor
aaa
push
int
add
mov
mov
mov
out
insl
sarb
sub
fstp
enter
mov
divl
in
sti
cmp
adc
movntq
xchg
jecxz
ja
push
leave
popf
xor
xor
fisttpl
mov
sbb
mov
sbb
out
fidivrs
adc
adc
mov
fs
mov
pop
push
repz
xlat
jl
pop
sub
or
and
dec
shll
cs
sbb
fadd
fidivl
scas
pusha
pop
jo
pop
leave
ss
mov
jmp
jns
lcall
lods
dec
call
leave
xor
jl
in
mov
or
xor
xor
xor
inc
dec
lcall
and
mov
fs
dec
xchg
movsl
mov
fstpt
fdivl
pusha
xor
adc
xor
insl
lcall
mov
outsb
imul
jbe
addb
dec
adc
sbb
sub
xchg
rclb
das
cmp
scas
mov
aad
push
push
push
imul
js
pop
dec
mov
and
cmp
sahf
inc
and
pop
or
outsl
jo
mov
mov
repnz
int3
jbe
pop
lea
stc
push
pop
enter
bound
lret
adc
les
insl
xor
mov
dec
ljmp
outsl
pop
adc
or
enter
lods
push
pop
fdivrs
je
sub
inc
lret
cmpsb
int3
mov
push
rdtsc
pushf
stc
push
iret
scas
jbe
mov
shr
outsb
and
repnz
daa
mov
cmpl
iret
cmpsl
fs
jle
test
mov
add
in
inc
dec
pop
iret
add
jnp
dec
mov
add
rcll
cld
pop
jbe
aas
pop
clc
sub
mov
fdivrl
sbb
aad
xchg
popf
test
mov
ficoml
xchg
das
call
or
sbb
push
xor
addr16
or
scas
test
pop
and
pop
inc
test
fisubl
jbe
insb
sahf
ficompl
lods
and
jg
push
mov
xchg
mov
sbb
rcrb
sub
mov
or
stos
mov
adc
or
repnz
inc
mov
push
repnz
push
xchg
cmpsb
dec
movsl
pushf
fbld
push
jp
das
sub
add
jnp
repnz
ror
aam
adc
sub
and
xchg
xchg
mov
cwtl
cld
cmpsb
jp
pop
and
pop
sarl
fs
popa
mov
dec
test
lahf
gs
pop
and
fwait
jmp
adc
sti
push
ds
out
adc
push
mov
fsubs
inc
add
sarb
xor
ja
push
or
cld
jbe
xchg
jno
negl
push
out
gs
movsb
stc
push
xchg
ffree
sbb
mov
mov
js
jbe
sub
push
bound
mov
sbb
push
pop
rol
sub
jmp
dec
inc
mov
or
add
or
adc
and
insb
in
cmpsb
jns
inc
or
jb
cwtl
repz
and
pop
mov
lcall
push
sbb
add
jecxz
xor
sbb
in
fs
inc
lds
movsl
mov
out
mov
imul
mov
jmp
in
mov
loop
daa
movsl
xor
xor
adc
lret
loop
adc
movsl
inc
fisubrs
xchg
les
notb
mov
jno
stos
repnz
test
pop
iret
popa
or
cmc
scas
mov
adc
jbe
cmpsb
cmp
hlt
aam
call
dec
mov
cmp
mov
mov
in
orb
sub
sub
outsb
dec
and
sarl
push
cld
inc
and
push
xor
sub
dec
dec
aam
insl
cmc
cmp
cmp
sub
jl
xchg
push
dec
fsubrp
cmpsb
cmc
dec
out
xchg
and
push
pop
push
pop
mov
test
and
xchg
jl
lea
ret
inc
fisubs
jle
repnz
or
sbb
ja
loop
icebp
pop
pop
sarb
adc
adc
dec
rorl
or
data16
mov
ss
std
aam
in
inc
scas
data16
dec
cld
add
stc
cmp
js
inc
shll
sub
pop
das
repz
rcrl
inc
mov
jle
daa
xchg
jno
and
in
out
fistpl
pop
lss
lock
mov
mov
cs
and
pop
mov
cs
loop
mov
inc
jae
sub
mov
cld
adc
loopne
adc
mov
dec
iret
dec
add
fsub
add
sub
ds
inc
fstpt
out
xchg
push
pop
loopne
pop
pop
iret
mov
ss
cltd
pop
stos
lds
flds
rcl
fs
mov
fstl
cmp
sub
hlt
lods
fdiv
outsl
lods
sub
pop
dec
inc
jne
add
test
das
mov
jns
adc
dec
bound
sarb
pop
rorb
cld
sbb
add
adc
clc
enter
cmpsl
outsb
sbb
popf
lret
call
pop
xchg
lret
mov
popf
adc
sbb
cwtl
out
aam
std
lret
arpl
lcall
lods
adc
mov
push
repnz
shll
ffree
test
addr16
rolb
mov
pop
sub
xor
fcomps
adc
into
xchg
aad
outsl
mov
cmpsl
jle
repz
loope
or
movb
or
push
mov
dec
add
push
sub
lods
pop
mov
inc
bswap
xor
and
pop
ja
cmp
sub
xchg
imul
mov
push
stos
dec
push
jge
xor
ret
mov
inc
jl
into
pop
call
enter
out
sbb
loop
lock
or
pop
mov
xchg
stos
enter
pop
adcl
insb
sub
shrb
ljmp
mov
shlb
repz
xlat
cltd
mov
or
xchg
xor
mov
mov
pop
sbb
ret
adc
ljmp
fbld
pminsw
mov
pushf
mov
imul
out
icebp
dec
sub
push
lcall
aaa
shr
mov
xchg
xchg
les
fstpl
dec
xchg
div
int3
popa
jno
sti
pop
movsl
mov
mov
add
sub
or
enter
lock
push
aam
pop
scas
lods
cli
xor
jne
cmpsl
mov
popf
inc
jmp
inc
out
push
jb
sbb
push
jp
mov
repz
fldl
add
js
mov
or
jecxz
mov
mov
fwait
lcall
push
pop
jnp
jo
cltd
lea
jp
sbbb
mov
adc
mov
add
arpl
into
lea
xor
push
sbb
test
jae
dec
xchg
lahf
jmp
loope
xor
sub
es
or
sub
in
sbb
cmp
xchg
es
inc
mov
roll
jp,pn
fucomip
inc
out
dec
sarb
iret
lods
pop
dec
xchg
xlat
inc
xchg
lods
inc
dec
adc
call
dec
push
roll
lds
in
push
arpl
les
pushf
adc
dec
ljmp
sarb
fstpt
aaa
nop
in
and
xchg
in
popf
xchg
push
loopne
rorl
and
jg
repz
pop
cmp
lret
ret
cltd
dec
or
int3
and
xchg
arpl
lret
jp
inc
lea
and
int
mov
movsb
mov
iret
adc
pop
push
imul
pop
or
xchg
pop
add
clc
les
andl
sbb
movsl
lret
push
mov
ds
fidivrs
and
inc
fsts
inc
sbb
stos
add
mov
fdivrl
call
xlat
sub
mov
xchg
mov
iret
cmp
and
xchg
ret
jecxz
cmp
sub
and
testb
fnstsw
and
aam
fdiv
mov
cmp
push
pop
adc
sub
or
stos
push
jecxz
imul
push
mov
popf
inc
sbbl
js
xchg
mov
ret
iret
adc
lret
test
lea
mov
xchg
mov
lods
fcmovnbe
insb
cmpsb
cmpsl
imul
in
pop
stc
rorb
enter
xchg
dec
push
and
mov
cltd
cmc
dec
stos
push
adc
sbb
jnp
or
das
push
ds
xlat
ljmp
jge
adc
mov
push
inc
xor
out
arpl
mov
jmp
fisubrs
in
popa
decl
stos
insb
out
in
xchg
sbbb
push
cmp
adc
cmp
insb
mov
jae
sbb
aaa
pushf
mov
pop
hlt
lret
adc
fcompl
mov
push
ret
xchg
in
xchg
fistpl
jne
mov
arpl
ret
and
arpl
fiadds
mov
inc
pop
xchg
loopne
sbb
scas
call
jl
les
jno
xor
jns
push
or
jnp
mov
jge
das
xlat
mov
je
inc
or
sub
clc
pop
inc
xor
fnstsw
adc
das
fimuls
xor
sub
sub
scas
cltd
inc
lret
or
fs
pop
insb
imul
orb
ret
fidivrl
cmp
cld
es
aas
xor
sbb
inc
mov
sahf
jmp
call
sub
mov
ret
cwtl
mov
or
dec
pushf
cltd
cltd
or
and
or
cs
xchg
adc
xchg
pop
aaa
cmp
push
mov
xchg
stc
arpl
push
fstpl
lret
sbb
out
or
out
ds
adc
lods
sub
testl
bound
fmull
push
arpl
mov
loop
fisttpl
mov
cmp
lods
cmp
cmp
nop
pop
and
xchg
aam
and
fwait
loop
xorl
cmpsl
test
push
sub
enter
or
cmpsb
xlat
cwtl
arpl
push
add
js
enter
xchg
lahf
xchg
enter
dec
jecxz
or
bound
hlt
sbb
xor
in
divl
mov
aaa
mov
cltd
inc
repz
cmp
sbb
jp
xor
in
pop
xchg
sbb
loope
add
add
pop
sbb
add
or
jno
inc
dec
pop
mov
xchg
rol
insb
pop
mov
test
lods
mov
xor
rorb
ja
aaa
test
sub
lahf
push
movsl
aas
insl
mov
cmc
int
add
pop
sub
jno
push
jne
and
mov
mov
or
ja
inc
mov
mov
xorl
lret
icebp
stos
pop
shrb
xor
inc
fucomp
lods
outsb
mov
cmp
ret
cld
in
xor
addr16
and
in
idiv
cmpsl
mov
loopne
ds
out
rcll
pushf
pop
mov
mov
dec
adcl
aam
mov
xchg
scas
arpl
cmp
pop
lcall
pop
lds
ret
cmp
jg
int
sbb
leave
nop
cld
lea
lea
add
lret
out
scas
xor
ja
in
clc
sahf
mov
mov
and
loopne
cmp
mov
imul
fistps
outsl
dec
mov
cmpsb
ficompl
fdivrl
dec
xchg
lds
xor
leave
imul
jae
cmp
test
mov
scas
mov
inc
sbb
lcall
jae
dec
repnz
push
mov
imul
sub
mov
sub
in
lret
enter
jecxz
push
int
test
imul
xchg
rorl
gs
mov
xchg
repz
push
stos
stos
cmp
lds
jb
cmpsl
xor
out
mov
dec
push
xchg
dec
mov
adc
cmp
inc
sub
movsl
push
arpl
lods
and
mov
movzwl
adc
cmp
icebp
dec
adc
stos
daa
fdivr
dec
lea
xor
aaa
adc
gs
or
fwait
push
add
setae
inc
in
aaa
fistpll
add
fsubl
bound
sbb
sub
xor
jne
sub
outsl
shrb
fmulp
sub
ss
sbb
sub
movsb
outsl
and
sbb
dec
test
xor
and
iret
arpl
gs
pushf
out
sub
and
pop
jb
pcmpgtb
das
xchg
into
xchg
rcr
mov
outsb
addr16
pusha
lods
cmc
cmp
scas
sbb
decl
push
out
pop
jbe
and
subl
insb
ds
std
inc
or
imul
mov
ds
mov
movsb
mov
jg
loopne
push
sbb
mov
inc
arpl
adc
push
mov
rorl
mov
and
stc
jo
jae
pop
test
adc
outsl
lods
mov
test
mov
mov
mov
ret
cmpl
sub
fidivrl
sbb
sbb
loop
push
mov
sti
xor
mov
mov
push
inc
shll
push
or
sar
adc
daa
cmpsl
clc
cmpb
xchg
add
mov
call
and
mov
push
jge
and
movsb
cmp
lods
popa
iret
push
push
dec
clc
mov
je
jno
jmp
dec
xor
add
lret
divb
or
jbe
jnp
sbb
repnz
pop
adc
mov
bound
inc
rolb
xor
jl
mov
sbb
lfs
movsl
aas
xor
sub
aam
lock
out
fs
inc
dec
sub
pop
rol
push
jb
jecxz
cltd
aad
sti
xor
cltd
les
hlt
mov
dec
push
idiv
pop
mov
outsl
dec
mov
call
cltd
nop
jl
sarl
inc
mov
ret
mov
pushf
test
jnp
test
mov
push
pop
jo
cmp
inc
hlt
add
mov
xchg
sbb
adc
mov
sbb
int
cmpsb
cltd
sub
insb
xlat
mov
leave
and
jg
dec
xchg
nop
inc
std
add
jae
jp
aad
xchg
inc
lock
andl
movsb
jg
pop
pop
repnz
jle
cmp
mov
in
xchg
pop
push
js
out
outsb
sub
dec
lcall
je
dec
aas
sub
loopne
mov
pop
dec
and
sbb
jae
jecxz
pop
imul
inc
idiv
insl
xchg
sub
and
sti
adc
xchg
push
pushf
in
test
sbb
pop
bnd
dec
cmpsb
and
dec
jne
arpl
pop
aam
mov
and
push
stc
loopne
nop
ss
push
into
ds
xlat
push
add
and
mov
pop
repz
enter
enter
cmp
inc
mov
sbb
lret
add
sub
jl
pop
je
push
mov
mov
ljmp
lret
xor
dec
loopne
negb
mov
fstpt
xor
pushf
or
ret
sbb
fcomps
mov
insl
addb
cmpsb
rol
hlt
push
pusha
xor
xor
dec
pop
xchg
leave
push
dec
mov
inc
mov
cmp
xchg
decb
cld
scas
cmpsl
pop
xchg
mov
out
sarb
sub
scas
rorl
pop
push
xchg
pop
movsl
lods
xchg
mov
lods
ja
mov
push
pop
pop
scas
cmp
pop
mov
push
out
mov
aad
pop
pop
outsb
popa
test
and
pop
xchg
outsl
xchg
cmp
repz
pusha
sub
add
pop
adcl
cmp
inc
xchg
cmp
adc
adc
stc
sahf
lret
push
imul
xchg
aaa
in
aas
fwait
int3
nop
jg
and
or
sub
outsb
out
mov
jmp
mov
fwait
pop
shrl
mov
xor
pop
movsb
addr16
repnz
mov
add
subb
test
add
mov
fldcw
movsl
test
leave
insl
fsub
lret
mov
out
fneni(8087
es
pop
lahf
add
data16
adc
movb
aaa
dec
cld
or
hlt
xlat
mov
mov
stc
lea
mov
adc
xchg
es
cmp
popa
or
int3
add
insl
loopne
popa
push
inc
mov
ret
jp
or
lahf
cmpsb
fstpl
popa
cmp
jne
jbe
mov
mov
loopne
ja
call
fwait
or
mull
into
mov
jp
cwtl
movsb
add
sub
out
repz
xor
in
fs
call
mov
push
pop
lret
push
arpl
cmp
loope
call
lret
iret
mov
idivl
or
movsl
cmp
inc
in
ficomps
loopne
push
adc
and
test
adc
movsb
jno
add
xor
mov
cs
jmp
jnp
out
out
pop
inc
dec
mov
pop
int
dec
push
add
inc
add
hlt
mov
mov
mov
enter
call
fucomp
lcall
mov
popa
icebp
idiv
push
div
jae
inc
or
and
scas
push
lock
std
in
rorl
jmp
pushl
adc
jne
pop
lcall
lcall
test
rcll
add
mov
add
adc
insb
fwait
out
leave
xor
sti
mov
outsl
out
cmp
cmp
insl
fmull
xor
pusha
ror
rep
out
pop
daa
aad
add
dec
cmc
fstpt
mov
div
iret
cmp
sub
stos
nop
adc
shll
sarl
aaa
fisttpll
mov
sbb
enter
cld
pop
insb
inc
mov
jge
in
dec
xchg
loopne
cmp
repz
int3
stc
adc
movsl
mov
xchg
inc
les
pop
inc
jp
adc
popa
lods
jae
inc
push
sub
sub
sbb
enter
testb
cli
fnstenv
jo
les
add
add
insb
jno
xorb
add
push
fisubrs
fldt
dec
adc
adc
sub
sbbl
push
fcomi
ds
xchg
inc
imul
adc
fnstsw
dec
negl
jae
scas
inc
rolb
out
mov
call
movsb
push
adc
jl
jg
add
pop
in
push
mov
and
scas
jnp
aam
stos
gs
les
mov
movsl
out
mov
dec
in
adc
and
jge
push
add
inc
add
gs
cli
push
scas
xor
ret
lods
fldenv
aad
or
dec
mov
xor
sub
jmp
mov
loopne
in
pop
xchg
nop
shrl
leave
xor
ljmp
xor
iret
int
mov
pushf
movsb
mov
cmc
pop
sbb
pop
xor
cmp
stc
dec
lock
pop
or
and
call
cmp
mov
adc
xchg
jmp
or
icebp
push
adc
cs
mov
xchg
pop
call
imul
sub
dec
fisttpll
js
dec
jns
aam
dec
addr16
outsl
nop
fsubrs
adc
insb
adc
into
cli
sub
sbb
mov
inc
inc
xlat
sbb
pushf
pop
shlb
push
andb
test
pop
sbb
add
fcomi
cld
arpl
jmp
mov
xorb
adc
xlat
insb
xchg
and
in
jb
ftst
addb
fucom
jns
pop
fs
dec
push
ret
insb
push
test
insl
test
in
test
fcomps
loop
xchg
dec
iret
cmpsb
or
sbb
sbb
pop
inc
mov
enter
in
push
dec
mov
in
mov
fs
sbb
leave
pusha
mov
lret
xchg
push
notb
jp
andb
enter
mov
adc
sbb
add
cmc
push
xchg
mov
ds
pushf
icebp
les
push
cmp
fbstp
xchg
xor
add
and
dec
add
imul
in
push
mov
cmp
lret
push
jae
mov
pop
pushl
sbbl
popl
aaa
into
sub
jl
dec
xchg
inc
add
data16
sti
stos
push
mov
jecxz
out
ret
in
inc
mov
popf
call
mov
and
mov
xchg
fld1
repnz
test
int
les
mov
mov
sub
push
bound
js
xor
lcall
pushf
call
iret
adc
jbe
fptan
hlt
cmp
xlat
cltd
addl
test
outsb
test
xchg
add
std
pop
adc
mov
repnz
popa
and
aaa
cmp
cmp
je
push
pop
out
push
sbbb
rclb
rorb
fucomi
stc
sti
sub
mov
sarl
mov
iret
mov
outsb
cwtl
and
data16
aad
outsb
divl
test
std
jle
push
mov
fnstcw
sub
cmp
sbb
pusha
js
sbb
cmp
jno
adc
sub
lahf
jb
add
lods
push
pop
popa
stos
jo
nop
lret
aad
mov
fsub
jns
pop
adc
pop
lahf
inc
push
xor
shrb
fwait
pop
sub
test
clc
dec
test
xor
lock
test
fsubl
jne
push
out
xchg
icebp
push
pop
push
sub
pusha
push
sub
loopne
pop
nop
mov
bound
add
enter
jne
iret
sub
cltd
add
iret
in
clc
ss
or
enter
cmpsb
mov
adc
lret
mov
and
stc
xchg
cltd
test
mov
inc
in
in
inc
stos
inc
push
rorb
pop
or
dec
add
bound
xchg
add
xchg
mov
sbb
or
add
dec
pop
fs
sub
mov
jb
je
add
stos
xchg
pop
stos
sbb
jge
dec
adc
mov
gs
adc
jp
xorl
mov
jmp
mov
js
pop
xchg
push
xlat
insb
loopne
sbb
gs
gs
sub
nop
and
sub
ret
and
jp
mov
popa
jns
or
enter
mov
cmp
enter
rcl
push
sbbl
sti
loope
lret
outsb
fildll
mov
fimull
lods
lea
push
insb
xorb
xor
push
nop
sbb
inc
sbbl
out
fisubs
mov
mov
insl
jnp
insb
or
push
iret
fiaddl
div
sub
mov
lea
ss
cmpsb
shr
dec
loop
sub
dec
cli
pop
aam
add
dec
stos
gs
or
cmp
jno
fisubs
sbb
icebp
lods
stos
cmpsb
les
mov
fisttpl
jne
push
mov
and
jle
enter
mov
adc
pushf
ret
lods
pushf
icebp
outsb
mov
inc
and
cmc
sbb
stc
push
inc
xchg
jle
xor
add
inc
mov
movsl
in
xchg
mov
jo
mov
cmp
xchg
mov
and
dec
xlat
jne
push
dec
pop
movsb
pop
leave
jbe
cmp
cmp
lret
into
idivb
xchg
mov
data16
xchg
enter
loop
sbb
push
xor
pushf
cld
pop
and
loope
or
clc
iret
ss
inc
test
jl
outsb
mov
js
xorl
outsl
test
mov
or
add
aas
jne
ljmp
jae
ret
mov
jbe
cmpsb
popf
mov
out
lcall
cwtl
fcmovu
pop
adc
orb
inc
dec
addb
xor
pop
sub
jne
jge
inc
movsb
pop
mov
inc
pop
insl
cmp
and
popa
xchg
cmp
cwtl
sbb
pop
pop
xor
or
iret
or
add
add
dec
pop
mov
test
jl
and
cmc
mov
notl
mov
sbb
and
jne
add
fsub
addr16
or
mov
xchg
in
add
jnp
jl
fisubrl
pop
and
and
frstor
shll
cmp
cmp
shl
insb
jns
push
inc
sub
in
mov
mov
jo
cwtl
loopne
mov
mov
ljmp
xor
mov
adc
je
sub
out
lods
ja
fadds
jle
push
push
lea
std
gs
jnp
mov
adc
mov
add
xor
ljmp
sbb
cs
das
loope
or
xor
sti
and
inc
cli
adc
movntq
shl
jge
mov
cwtl
stos
data16
loope
test
inc
jg
dec
cltd
jb
jle
mull
out
sub
jno
mov
push
sbb
ljmp
dec
lahf
lcall
mov
xor
in
or
lods
dec
push
pushf
mov
fdiv
cld
loope
dec
inc
push
jle
push
lcall
jne
adc
sub
add
cld
adc
or
cmpsb
mov
pop
ljmp
into
mov
fistpl
xchg
add
adc
adc
std
or
mov
add
and
punpckhdq
dec
xor
push
jno
and
pusha
add
loope
leave
data16
loop
into
movb
mov
ds
stc
scas
push
les
xchg
push
out
pop
pop
lock
sti
bound
addr16
xor
xchg
fiaddl
push
push
fcmovnb
in
add
lea
xchg
mov
stos
ret
negl
repnz
add
pop
daa
mov
jmp
aad
fstps
mov
and
xchg
dec
loopne
sti
cwtl
xchg
mov
jge
dec
roll
shlb
xor
pop
jbe
mov
fs
cltd
push
mov
stc
add
movb
push
pop
cltd
data16
out
inc
andl
out
adc
xor
mov
out
jp
sarl
sbb
or
in
push
jne
add
sbb
subb
rorl
mov
mov
out
ja
add
pushf
ret
sub
add
xor
xlat
inc
or
mov
fwait
mov
shlb
sub
or
push
ret
sub
negb
addr16
mov
cld
push
jge
or
div
add
into
xchg
pop
cmc
push
and
adc
mov
ja
and
add
mov
aad
mov
and
or
cli
adc
mov
jne
mov
pushf
dec
dec
ficoms
mov
imul
std
dec
iret
mov
movsl
xor
add
push
enter
and
pushf
cld
pop
pop
shl
clc
in
jg
les
cltd
imul
xor
adc
push
push
fmul
out
xorl
mov
mov
sbbl
dec
push
mov
xchg
lcall
bound
in
dec
stos
scas
mov
mov
push
mov
popf
repnz
fdivp
arpl
xchg
enter
pop
xor
mov
inc
xor
aas
call
cmp
ret
push
add
mov
enter
mov
std
push
jp
xor
ret
js
cltd
outsb
and
adc
xor
cltd
inc
push
rorb
ret
pop
mov
fbstp
faddl
adc
sbb
mov
add
pop
push
add
push
xor
add
ds
movsl
mov
int3
sbb
lahf
loope
rorb
push
les
xor
and
out
popa
xchg
mov
sub
pushf
ds
add
test
mov
mov
out
subl
cmp
out
mov
insb
add
mov
inc
addr16
xor
mov
and
dec
cli
test
inc
adc
js
and
add
xchg
jne
mov
and
jnp
sbb
lea
jnp
pop
dec
int3
sbb
mov
pop
fidivrl
push
std
enter
cmp
mov
mov
mov
xor
pop
add
cmpsb
outsb
xor
shll
and
rol
mov
pop
repz
mov
mov
or
movsb
arpl
push
loopne
or
je
cltd
xchg
ret
add
cmp
mov
cmc
inc
pop
jo
insb
pop
push
jmp
push
adc
hlt
or
add
mov
xchg
pop
lret
adc
xor
xchg
push
xor
push
jle
int3
adc
fsubr
xchg
lea
or
outsb
push
xchg
sahf
insb
add
push
lods
into
incb
mov
mov
add
or
loope
xor
stc
ror
inc
sub
nop
test
loope
fwait
adc
xor
or
ja
inc
or
sub
iret
aam
shll
ja
mov
and
fisubs
movsb
push
jg
sbb
sbb
loopne
mov
out
je
sarl
pop
mov
insl
mov
inc
das
aam
push
xor
xchg
cmp
test
lea
push
pop
aas
movsl
xor
cmc
aad
mov
inc
xor
iret
jnp
jae
xchg
test
lock
sbb
mov
out
aas
and
ret
mov
fldt
clc
addr16
aad
inc
sbb
pop
mov
add
hlt
or
aam
mov
ja
sbb
or
mov
xor
loopne
xchg
idivb
mov
mov
inc
es
cwtl
repz
aaa
out
or
lods
cmp
adc
lods
sbb
stos
je
adc
rcrb
mov
or
je
mov
cmp
cmpsb
pop
cmp
jno
sub
jle
test
or
xchg
xchg
or
xchg
push
dec
mov
cmpsb
or
daa
dec
sbb
aad
mov
mov
pusha
stos
cmpl
sahf
xor
jmp
sahf
cmp
in
jp
adc
cmp
ljmp
movsb
push
fcoms
adc
jno
or
out
sahf
mov
jmp
adc
adc
jle
out
scas
ds
clc
stos
sub
jg
inc
imul
adc
fiaddl
push
jbe
aas
lcall
sub
mov
ret
mov
cmc
jb
jl
or
not
sbb
pop
push
adc
xor
sbb
popf
bound
cwtl
fldt
and
fcmovne
or
ficoms
push
popf
xor
ljmp
int
mov
int3
fadds
adc
dec
push
sub
icebp
pop
dec
pop
nop
dec
sbb
and
std
pushf
cmp
xchg
test
sarb
sub
push
js
ja
mov
xor
addr16
mov
xchg
mov
mov
pop
movsb
lds
in
xchg
loope
std
jg
in
add
push
cli
pop
imul
loopne,pt
scas
insb
ret
mov
adc
fwait
dec
sbb
cmp
mov
jne
lea
int
leave
inc
jo
sub
in
pop
push
mov
outsb
test
mov
sti
imul
outsb
fcoml
or
dec
mov
wrmsr
sbb
jns
push
inc
out
sub
jnp
inc
sub
sbb
repz
mov
add
dec
inc
push
gs
scas
pop
xlat
rcrl
inc
cmpsl
mov
push
and
call
aaa
jae
lcall
outsl
pushf
stos
sbb
sbb
lcall
scas
or
stos
idivb
mov
bound
cs
cmpl
and
or
mov
inc
das
mov
orl
push
repz
ds
push
add
loopnew
lea
mov
pop
ret
xlat
pop
call
loopne
popf
mulb
add
imul
cmp
jmp
mov
js
add
jmp
cmpsb
or
pusha
dec
mov
sub
rorb
mov
lods
adc
dec
pop
sahf
push
outsb
push
cmp
jl
push
dec
pop
ret
jne
jae
xchg
sub
and
lock
hlt
jo
test
ret
pop
inc
push
arpl
sub
dec
mov
or
jp
adc
pop
cmp
inc
dec
into
mov
push
outsl
pop
cmpsb
test
cld
pop
and
lret
mov
sbb
ret
imul
or
subb
or
lods
adc
xchg
sbb
rorl
sub
into
adc
mov
inc
aaa
and
push
push
mov
mov
mov
jb
lret
mov
pop
mov
and
push
rcll
das
std
xor
mov
pop
jb
adc
in
inc
dec
cmpsl
dec
outsl
ss
xchg
inc
pop
mov
jbe
enter
shlb
cmpsb
sub
fcompl
and
xchg
es
enter
out
jge
adc
je
stos
divb
je
adc
sbb
fsubp
out
icebp
into
cmpsl
add
icebp
mov
mov
cmp
mov
jmp
enter
lret
aaa
jnp
jb
mov
jbe
dec
ret
test
xchg
cmp
mov
fldlg2
inc
fdivs
shr
pop
pop
sub
jecxz
inc
scas
xor
adc
pop
fsubr
or
lret
les
lods
leave
lock
pop
enter
cmpsb
scas
sbb
mov
cmp
and
pushf
daa
ja
dec
dec
jle
sarl
daa
pusha
or
pop
icebp
and
popf
push
sub
push
sub
fildll
lds
cmp
push
xchg
push
lret
pop
mov
out
aaa
or
add
mov
mov
icebp
mov
test
movsl
insb
scas
sbb
clc
cltd
in
push
das
push
repz
sbb
sub
pop
xor
cli
popa
dec
xor
mov
and
inc
rolb
shll
mov
mov
inc
and
fists
cmpsb
insl
pop
in
push
or
jge
push
or
push
rcrb
xor
idiv
jl
push
das
xchg
push
cmp
outsb
xchg
loopne
adc
les
xchg
outsl
fisubrl
adc
addr16
jl
ret
in
pop
aas
mulb
cmpsl
iret
push
mov
pop
push
imul
test
or
xchg
push
scas
push
sbb
mov
popa
push
mov
mov
xchg
mov
bound
icebp
jl
push
imul
jle
xchg
sbb
lcall
aad
sub
hlt
movsl
sbb
adc
adc
imul
xchg
stos
add
cmp
int3
push
sbb
fbstp
pushfw
imul
xor
into
popl
mulb
icebp
push
or
arpl
mov
test
fidivrs
shlb
adcb
and
fstl
mov
mov
sub
lods
lret
les
add
imul
inc
jp
movsb
jmp
inc
out
cmp
or
lcall
xchg
push
dec
fs
mov
icebp
dec
mov
push
mov
xor
mov
dec
mov
mov
push
mov
stos
movsl
inc
xchg
mov
xchg
loop
xchg
pop
xlat
push
or
popa
push
outsl
jns
fidivs
sub
sub
cmp
or
fstl
outsb
xor
lock
mov
mov
sub
popa
cld
mov
out
add
push
cmp
cmp
mov
outsl
sahf
dec
and
loop
mov
pushf
push
or
mov
jns
adc
add
popf
insl
dec
les
popf
cmpsl
mov
scas
fwait
jae
mov
mov
fcoml
inc
cmp
dec
cmp
sbb
fidivs
addr16
jmp
loopne
loope
or
or
push
add
enter
inc
push
mov
inc
inc
inc
jno
cld
insl
bound
pop
pop
shll
mov
bound
xchg
xorl
jnp
outsb
mull
push
shll
add
push
mov
imul
mov
xchg
dec
sub
sub
mov
xchg
hlt
jge
mov
insl
sub
cltd
add
add
cmpsb
adc
in
das
jge
mov
or
xchg
jmp
fistps
mov
xor
test
xor
xor
inc
ret
jp
jle
into
jno
fidivrl
sarl
add
shr
ja
lret
das
repz
sbb
jle
or
das
pop
xor
ficomps
xchg
push
aad
lods
dec
or
mov
fcompl
add
int
lods
cmp
lret
cld
mov
test
xlat
popa
imul
jae
xchg
icebp
xor
sbb
rolb
xchg
xorb
lcall
test
push
data16
mov
movsb
lea
call
das
aaa
sbb
les
xor
inc
push
orb
in
adc
pop
xchg
out
pushf
fsubl
xor
jle
mov
inc
mov
jg
jbe
sbb
adc
addb
add
in
popf
rcrl
lods
xor
mov
mov
jle
mov
mov
pop
jo
inc
jecxz
bndstx
inc
fcoms
xlat
movsl
icebp
dec
test
xchg
adc
lret
mov
clc
add
or
or
les
mov
daa
jecxz
lcall
jb
rcll
mov
ds
leave
sti
and
jp
movsb
sbbl
lods
mov
iret
stc
shl
imulb
in
add
or
or
and
mov
aam
push
sub
sbb
xor
lock
sub
add
addr16
fistpl
sbb
lahf
pop
jl
data16
les
sar
xor
adc
cmovg
add
stos
cmpsb
scas
xchg
fcoms
dec
inc
in
add
mov
in
cli
or
mov
in
cmp
mov
pop
in
int3
mov
jbe
rcll
sbb
sub
inc
out
pop
sub
push
mov
ljmp
jo
pop
js
mov
es
dec
fsubs
dec
mov
dec
adc
repz
push
int
loope
mov
mov
ffreep
inc
xlat
fdivp
and
jbe
es
dec
dec
xor
call
cmp
je
aas
jo
add
dec
xchg
mov
mov
jae
mov
jno
bound
xchg
aas
push
movsl
mov
jecxz
inc
mov
sti
cmc
and
sti
push
insl
cwtl
movsb
inc
push
mov
jmp
inc
xchg
push
in
add
and
xchg
mov
inc
jns
jns
movsl
pop
xor
out
in
mov
mov
cmovs
push
mov
out
pop
scas
nop
pop
lock
add
dec
push
ret
pop
mov
dec
nop
fbstp
cli
and
sar
push
inc
mov
pop
xchg
std
mov
jecxz
fistpl
jbe
into
pop
mov
dec
faddp
cmpl
pop
call
pop
outsb
push
cmc
or
adc
movsb
xchg
and
ja
cmp
repnz
pop
push
fcomi
cltd
jle
iret
push
push
sbb
mov
mov
xchg
and
stos
sub
sbb
ds
jl
lds
adc
dec
xchg
xchg
pushf
dec
fmuls
and
js
xchg
pop
flds
jle
sbb
push
lea
or
sub
fs
dec
inc
sahf
nop
push
sub
cmp
add
ror
es
adc
push
inc
dec
cmpsb
jle
mov
cmc
push
shl
push
pop
imul
lds
xor
ret
or
sbb
jnp
xchg
outsb
add
outsb
xlat
mov
jnp
stc
das
pop
mov
repnz
mov
pop
mov
jge
adc
mov
negl
mov
scas
bound
inc
sub
loopne
push
div
jae
or
cwtl
pop
test
outsl
xchg
add
jp
cmpsl
fcomi
lock
insb
jle
jns
fs
pop
sub
addr16
or
std
shrl
cmp
jg
lahf
in
push
in
push
fimuls
adc
je
or
out
mov
push
outsl
push
ret
inc
dec
je
pop
rolb
mov
pop
inc
and
icebp
stos
mov
push
and
jo
mov
push
jmp
shll
data16
movsl
out
jne
and
ret
sub
jl
addr16
adc
dec
orl
stos
mov
sarb
loope
imul
xlat
xchg
cli
ficompl
cld
or
xchg
rclb
xchg
mov
out
jno
push
add
lds
arpl
jle
addl
cmc
shlb
cmpsl
or
xor
popa
clc
cmpsb
mov
or
mov
and
add
sub
mov
daa
shrb
xchg
cmp
ret
add
inc
jl
je
mov
xor
cmp
jle
or
mov
sub
push
dec
mov
repnz
jbe
out
dec
inc
inc
xchg
xlat
scas
pop
fmull
std
push
jge
imul
jle
mov
loopne
sub
testb
sub
test
cmpb
jae
imul
and
data16
stc
adc
cmp
in
aam
push
insb
lds
sub
jb
add
fs
fwait
jae
pushf
lea
add
pop
lods
mov
icebp
cmp
adc
loope
sahf
inc
push
in
cmp
mov
out
or
mov
test
push
jg
dec
and
mov
pop
jle
fildll
sub
fs
cwtl
mov
dec
mov
imul
int3
aad
pop
icebp
sbb
pop
clc
pusha
push
and
jmp
les
ja
into
addr16
pop
stos
int3
test
nop
cwtl
adc
subl
xor
jmp
lret
xor
mov
jmp
sbb
sbb
movsb
inc
xchg
pop
ret
sti
cmp
xchg
insb
inc
dec
out
or
push
push
lcall
pop
xor
mov
pop
and
pop
xor
sbb
mov
pop
xchg
add
outsl
adc
sub
ret
cmp
pop
add
imul
dec
mov
xor
loope
imul
loop
push
nop
mov
push
adc
mov
add
mov
xchg
jmp
sarl
mov
fnstcw
movsb
xor
dec
add
mov
mov
jg
loop
push
testb
push
xchg
arpl
mov
shlb
or
aas
test
push
ljmp
lods
cwtl
popa
jno
mov
xchg
jns
xchg
xor
out
sbb
in
cmp
std
divb
push
xchg
orb
movsl
adc
insb
and
loop
pop
adc
push
mov
nop
push
stc
rorb
leave
sub
xchg
bound
subl
mov
sahf
ljmp
pop
add
mov
mov
jg
mov
add
es
mov
test
push
mov
fwait
repnz
orb
cld
mov
jge
mov
fsub
dec
clc
xor
imul
pop
nop
mov
scas
jo
cmp
mov
inc
rcll
pop
push
and
scas
sahf
fs
mov
sub
aaa
mov
imul
sub
mov
rorb
dec
cwtl
shll
xchg
lds
sub
in
idiv
ds
aad
outsb
jbe
inc
dec
xchg
jo
cmpsl
sbb
cmpb
xchg
jle
rcrl
iret
push
mov
mov
adc
iret
test
pop
push
jp
into
lahf
inc
test
xor
jecxz
pop
testl
stc
push
insl
imul
sub
pop
mov
push
lods
lcall
call
adc
add
xor
je
mov
pop
push
xchg
xchg
mov
and
jle
stc
inc
movsl
push
and
push
aaa
outsb
mov
mov
bound
clc
sbb
notl
enter
int3
cmpsl
sbbb
out
aad
push
inc
mov
and
ss
jno
call
push
lea
les
mov
dec
ja
cmp
cmpsb
enter
int
cmp
sarb
mul
push
xor
bound
sahf
mov
mov
mov
push
inc
in
sub
and
js
scas
pop
minps
pop
cmpsl
push
and
je
add
rorl
mov
sbb
loope
test
inc
aad
or
pop
outsb
sub
dec
xor
ss
mov
mov
jae
add
sub
push
movsl
hlt
mov
lahf
cmp
push
bnd
int
aad
addr16
cmp
fdivs
adc
imul
and
mov
out
mov
in
sbb
out
xor
stos
jmp
jmp
addr16
mov
jmp
movsl
scas
test
pop
pop
mov
inc
notl
jecxz
scas
add
xor
test
sub
in
jo
addr16
mov
sbb
or
imul
lret
mov
in
fisttpl
hlt
call
test
fsubrs
dec
xchg
mov
sbb
mov
push
fidivrl
dec
mov
enter
or
pop
adc
lds
mov
scas
jno
mov
xor
test
jmp
jl
mov
sub
jmp
push
mov
jno
fadd
dec
mov
xlat
mov
stc
mov
push
and
fs
stc
or
aam
pop
xchg
sbb
or
int
fimuls
pushf
xor
jns
push
xchg
or
mov
mov
nop
jmp
fnstsw
mov
int3
psubb
mov
xchg
xlat
sub
cmp
das
stc
shl
dec
insb
mov
sub
aam
push
push
leave
stos
fs
push
les
mov
aad
sbb
jp
xor
repnz
movsb
shll
mov
cmp
xchg
mov
roll
insb
pop
cmpsl
xor
xchg
mov
mov
outsl
cmp
dec
pushf
mov
movsl
ja
sbb
movsl
cmp
cmpsb
test
dec
jecxz
add
and
sub
ret
std
pushf
xchg
lock
aaa
lret
stc
punpckldq
es
aam
adc
mov
push
fcom
sbb
pop
and
sbb
push
jmp
push
insb
aas
out
sub
xor
std
push
fisttpl
xor
jp
dec
push
sub
push
pop
xor
iret
pop
int
popf
int3
xor
out
pop
dec
jmp
fs
idiv
sbb
cmpsl
loop
adc
ja
xchg
mov
or
insl
mov
push
std
pop
fbld
sub
js
cmp
outsl
sub
pusha
and
push
mov
scas
es
cli
mov
push
popf
push
pop
das
cmp
int3
lret
push
mov
or
nop
dec
ss
adc
inc
add
sahf
adc
xchg
adc
aas
je
adc
pop
mov
mov
leave
fmuls
out
xlat
pop
sarl
scas
xchg
aad
mov
mov
gs
loop
add
ret
shl
out
jp
xchg
cld
and
inc
imul
pop
or
sub
icebp
mov
mov
ljmp
jl
pop
xor
dec
call
idivb
dec
pop
js
push
or
test
test
cmp
cli
ds
add
lock
mov
imul
xorb
inc
sbb
mov
call
mov
sahf
fcomp
daa
aaa
mov
cmpsl
sub
cmp
dec
inc
sub
clc
shll
cmp
addl
and
push
je
outsb
push
insl
shll
push
pushf
enter
jle
scas
orb
das
sub
adc
cmc
into
push
popf
mov
sbbl
jecxz
sbb
mov
jb
sahf
divl
movsl
cmp
sub
dec
xchg
sub
xorl
inc
int
mov
xorl
leave
gs
dec
in
scas
lcall
add
push
loopne
jmp
cld
sub
lcall
test
test
and
pop
ss
jle
sbb
jle
xchg
push
jne
xlat
inc
in
xor
sti
mulb
push
aas
fnstsw
fsincos
shrb
sub
mov
add
pop
mov
push
les
repz
pop
mov
push
and
jnp
xchg
xor
and
cwtl
sub
xor
aaa
imul
stos
mov
das
jae
lcall
cwtl
dec
ja
ret
mov
push
mov
fdivr
cli
in
arpl
xchg
push
mov
or
sub
scas
test
inc
and
lahf
add
dec
mov
jne
mov
add
mov
pop
ret
int3
push
push
cwtl
and
ret
sub
int
or
adc
xchg
dec
dec
mov
add
xlat
xlat
in
adc
adc
add
pop
inc
adc
inc
ficoms
inc
aam
push
je
add
dec
loop
mov
xchg
cld
decb
cltd
mov
rorl
lods
faddl
and
push
and
cli
cmp
fwait
sub
in
iret
nop
cmp
in
ss
imul
push
mov
push
pop
xor
popf
jae
lods
lods
pop
push
icebp
jge
and
leave
lret
cld
call
push
aam
sbb
je
pop
pop
jno
jns
pushf
sub
xchg
jge
xchg
jg
mov
fs
setno
xchg
sub
call
bound
xor
pop
and
out
mov
jo
sbb
inc
adc
mov
mov
mov
jo
inc
cmc
lods
fdivrp
int3
mov
jb
jne
pop
rep
pusha
and
add
lock
pop
and
xchg
sub
outsb
hlt
repnz
dec
shr
mov
lea
test
mov
in
cmp
sub
cs
xor
sti
in
add
sbb
lahf
sub
mov
push
test
xor
mov
pop
lret
test
cmc
jecxz
sub
xor
jl
cmpsl
ss
ret
xor
xchg
daa
dec
xor
xor
dec
and
dec
sub
push
fldenv
mov
insb
pop
sub
scas
mov
je
sub
sbb
rcr
mov
sbb
insl
pop
mov
mov
addl
pusha
jecxz
mov
adc
pop
xchg
push
ficompl
mov
mov
daa
mov
inc
adc
sbb
jae
imul
lods
cs
or
jns
xor
stos
jne
adc
xchg
cmp
and
sub
sbb
jo
push
js
mov
cmpsl
jg
in
inc
jb
lds
xchg
inc
into
dec
jbe
test
push
dec
add
out
lgs
mov
or
xchg
push
mov
adc
jg
ficomps
mov
sbb
cmc
mov
mov
stc
daa
lcall
xor
mov
mov
xor
aas
inc
or
in
or
cs
dec
mov
cli
xchg
mov
or
mov
leave
jae
cmp
or
mov
cltd
sub
pushf
and
in
into
push
xchg
inc
push
clc
and
add
lds
cmc
jge
push
std
rcr
xchg
push
jecxz
adc
sub
add
xchg
adc
push
jno
rolb
fisttpll
adcl
fmuls
mov
fwait
es
xchg
sub
out
jne
cmp
lea
in
ds
pop
in
cli
and
xchg
push
sbb
aas
and
and
outsl
jle
pusha
xchg
inc
xor
in
or
xor
sub
dec
jno
pop
cmpsb
sub
jmp
icebp
jno
add
rorl
test
jecxz
enter
out
jne
cli
icebp
sub
mov
pop
loope
mov
jo
bound
jo
aas
inc
ds
std
nopl
insb
ja
mov
repz
nop
sbb
cli
sbb
test
out
pop
jl
jae
adc
inc
xor
push
and
cmpsl
cltd
call
into
fidivrl
cmp
repz
adc
aaa
inc
pop
enter
mov
and
stos
sub
pop
pop
mov
cmp
mov
nop
and
adc
inc
fdivrp
sub
movsl
ret
add
cmpsl
jmp
adc
jns
sub
add
lret
xchg
pop
int
mov
push
mov
nop
arpl
popa
addr16
negb
add
test
mov
mov
rclb
jmp
fs
popa
jle
mov
test
inc
and
xchg
stos
inc
jle
cli
cmp
pshufw
inc
jnp
jbe
negl
xor
fmuls
into
mov
adc
or
xlat
xlat
popa
mov
xchg
stc
cmpsl
push
xchg
jp
mov
sub
out
or
jmp
popa
push
dec
xchg
das
xchg
mov
minps
push
repz
insb
loopne
pop
push
sub
fs
jmp
bound
mov
das
das
stos
fcoml
mov
pop
cmp
bound
or
sbb
push
rorl
adc
cmp
js
mov
lds
pushf
cltd
dec
movsl
and
or
mov
or
or
cmp
xor
aad
mov
rol
roll
mov
add
push
sarb
pop
mov
xor
dec
xor
in
push
jbe
cmp
jp
js
int
clc
mov
es
cmp
lods
pop
cmp
imul
movsb
or
in
fidivl
movsl
pop
dec
shll
addr16
xchg
js
adc
nop
out
sbb
dec
dec
stos
or
cltd
sbb
xchg
mov
in
rol
aad
bswap
mov
cmpsl
rcrb
xor
mov
movsl
jge
insb
mov
outsl
cmp
lock
mov
jbe
cmpsl
mov
mov
shlb
and
push
mov
jmp
ljmp
mov
lock
lret
cld
and
call
pusha
pop
lods
and
jecxz
inc
push
pop
inc
mov
mov
dec
nop
das
jnp
jl
shr
lcall
inc
pop
jne
into
push
xchg
dec
jbe
dec
mov
and
dec
sbb
test
stos
aas
mov
mov
push
divl
xlat
outsb
add
pusha
mov
ds
cmp
fwait
lahf
mov
xchg
jns
fildll
iret
or
jb
sub
dec
aad
jl
stos
or
pop
lea
cli
negl
repz
ljmp
in
lods
jg
dec
movsb
aas
aaa
fstpl
and
movaps
cmp
movsb
mov
in
adc
xor
mov
dec
mov
xor
xchg
data16
icebp
sti
scas
and
sub
lahf
cmp
call
and
xchg
dec
pop
repz
xor
sub
mov
or
cmp
lods
sub
sbbb
mov
fildll
pop
or
jg
into
inc
push
sub
cmc
lds
inc
xlat
xchg
jmp
mov
jl
cltd
sub
jb
mov
adc
lock
lret
sbb
aam
scas
xchg
cmp
stos
cld
lahf
cltd
and
sbb
mov
sbbl
or
jge
mov
and
imul
lods
sub
insl
mov
shrl
jl
add
mov
lret
xchg
xor
push
mov
sub
sub
iret
cmpsb
sti
mov
and
jo
jl
in
or
sahf
adc
idivb
mov
jecxz
divl
mov
sub
int
pop
in
in
je
sub
xchg
mov
bound
xchg
lods
insb
mov
lock
js
divb
cmp
imul
xchg
sub
xchg
jp
stc
lea
mov
mov
mov
jmp
insb
push
xor
mov
shl
loope
push
xor
xchg
enter
iret
jb
enter
mov
test
jne
sti
pusha
push
sub
push
pushl
dec
aam
mov
push
jne
in
sub
ds
lcall
xchg
adc
mov
pop
xchg
test
mov
stos
xchg
push
fisttpl
scas
mov
dec
or
inc
xchg
test
add
xor
xchg
push
mov
mov
outsl
pushf
mov
lret
out
imul
jnp
push
std
int3
gs
int
xor
push
fs
mov
cld
cld
flds
in
cmc
add
xchg
in
mov
mov
or
aad
insl
movsl
insl
push
xchg
sbb
data16
insl
mov
mov
pop
mov
ja
jbe
aam
nop
outsb
dec
adc
and
ret
addl
or
adc
test
push
movsl
ljmp
pusha
adc
cmp
ja
jno
xchg
icebp
int3
push
mov
out
mov
mov
in
push
aas
jle
outsb
inc
ret
andb
fs
cwtl
mov
add
push
fstl
scas
stos
and
adc
test
pop
jg
test
loopne
sahf
mov
pop
aad
out
cmp
sub
in
dec
mov
inc
loop
lock
inc
add
rorb
in
pop
insb
jns
pop
cmp
and
xchg
sub
push
sbb
jmp
sbb
adc
insb
xchg
lahf
or
lcall
lds
sahf
jns
push
pushf
ss
jae
xor
fildl
add
dec
inc
or
out
rcl
or
ss
inc
sbb
lds
dec
add
adc
je
dec
sub
int3
mov
mov
mov
push
pop
mov
mov
cmpsb
pop
push
cmpl
inc
or
jns
push
ja
push
fstps
mov
xor
mov
cmpsl
inc
dec
dec
mov
loopne
sbb
xchg
rcll
dec
fs
or
hlt
idivb
xorl
sub
add
inc
inc
or
dec
lcall
test
inc
in
pop
in
adc
cli
mov
mov
jge
imull
add
push
push
popf
pusha
fbstp
ljmp
mov
call
sub
jnp
aad
cmpl
js
js
popf
jns
adc
fs
in
test
lds
pop
stos
fsts
shlb
mov
add
lcall
loope
cmpsb
psubsw
jmp
add
fsts
mov
sbb
mov
repnz
cmp
dec
xor
lahf
sbb
push
adc
fistpl
in
push
mov
xchg
lods
mov
xlat
mov
mov
add
lds
fisubrs
jo
outsb
inc
imul
pushfw
fistpl
jmp
add
jmp
call
inc
xchg
jo
jbe
std
loop
ljmp
out
jecxz
inc
mov
xlat
repz
add
lcall
das
mov
lods
inc
sbb
sub
xchg
cmp
ljmp
js
mov
mov
aaa
dec
test
xchg
mov
xchg
mov
dec
mov
lcall
mov
pop
lock
js
mov
mov
int3
inc
mov
inc
or
jno
cmp
adc
jmp
push
sti
daa
mov
pop
cmpsl
cmp
pop
cmpl
inc
xchg
inc
cld
cmp
adc
mov
rcr
into
jge
pop
and
leave
imul
adc
cli
mov
femms
sbb
pop
shrb
test
xchg
push
clc
and
lret
icebp
jecxz
psadbw
sbb
xor
push
lods
cmp
out
dec
fiaddl
sbb
inc
jb
lods
mov
pop
add
push
adcl
add
mov
sbb
sbb
pop
jbe
pop
outsb
dec
sbb
inc
sub
cmpsl
stos
je
mov
mov
loop
cmpsb
adc
std
mov
jo
ljmp
jl
imul
out
int
mov
fimuls
in
mov
mov
push
movl
js
dec
or
out
xchg
jmp
das
fcompl
jecxz
es
mov
je
push
je
and
or
out
out
lods
nop
test
push
jb
fnsave
pop
scas
sbb
mov
dec
cmpsb
fwait
sti
add
out
mov
pop
scas
xchg
lods
push
inc
jmp
lret
int
aad
outsl
stc
orl
mov
cmp
adc
jp
ds
shlb
rcr
fdivrs
adc
pop
and
popa
or
out
dec
mov
shl
je
loop
mov
push
inc
ds
fcomip
inc
cmp
cmc
jbe
pop
aad
add
adc
test
pop
inc
ljmp
cmp
and
hlt
add
stos
pop
push
out
pop
test
addb
jb
fmul
push
jae
cmp
add
stos
cmp
dec
lock
or
insl
mov
bound
movsl
mov
cmp
lea
fstps
adc
icebp
lret
imul
cs
rorb
add
mov
dec
pop
xchg
les
jl
or
movsb
push
push
stos
decb
mov
or
push
mov
int3
in
rcl
pop
cltd
pop
xchg
adc
mov
shrl
add
in
lahf
push
out
movsl
sarl
loop
enter
mov
push
dec
jp
popa
jecxz
pop
pop
sbb
xlat
mov
sub
mov
loop
lock
or
std
sub
dec
andl
dec
sub
sub
sbb
xor
lods
or
mov
jnp
ja
and
inc
out
aam
movsl
addb
cltd
fsubs
jmp
dec
scas
pushf
rcrl
jns
jl
or
test
jg
out
or
int
or
mov
pop
mov
cltd
xor
xlat
ret
mov
push
and
mov
loop
push
cs
xorl
jge
xor
cli
mov
adc
xchg
mov
mov
insl
shlb
mov
das
jg
pop
clc
hlt
cli
xchg
inc
les
fimull
adc
int
dec
pop
ljmp
mov
andb
stc
xor
or
pop
pop
ret
pop
pusha
cmpsl
pop
cwtl
int3
fs
lods
add
loope
sub
loop
sub
pop
pop
push
push
inc
xchg
cmpsl
bound
sbb
mov
add
inc
aam
cmp
enter
push
nop
call
flds
leave
mov
repz
iret
xor
sbbl
cmp
adc
cwtl
mov
les
xchg
addl
pop
movsb
popf
sub
dec
test
addr16
loop
sub
sub
mov
sbb
test
arpl
fs
test
mov
rcll
pop
jp
imul
mov
filds
lret
rol
sbb
pop
and
cmp
in
sbb
and
xlat
mov
jg
push
pop
fucomp
dec
lock
or
lret
xor
pop
icebp
xor
mov
cmpsl
jge
xlat
stos
addr16
sbb
mov
add
inc
fwait
sbb
nop
in
and
ja
stos
ret
in
xor
push
sub
flds
lock
hlt
adc
or
inc
movsb
fsincos
or
xchg
cmp
sub
int
sbb
xchg
or
push
idivl
jnp
pushf
mov
call
add
xor
clc
mov
test
dec
inc
pop
or
scas
xor
jmp
mov
jb
push
cmc
pop
mov
xchg
call
push
mov
pop
mov
fs
pop
mov
push
stos
outsb
jno
push
arpl
push
or
or
les
cli
fwait
mov
mov
outsl
xchg
pop
data16
in
mov
fstps
inc
ficompl
pop
cmp
mov
addr16
pop
adc
ret
shrl
outsb
cmpsb
fadds
add
sub
in
mov
popa
test
cmpsl
mov
mov
dec
sub
outsl
aaa
in
ret
sub
pop
push
imul
add
sub
int
lods
and
lods
ficompl
cwtl
inc
mov
idivl
orl
dec
mov
lods
cmpsb
jns
and
mov
mov
cmp
adcb
stc
lcall
push
loope
ret
lcall
inc
mov
mov
sub
dec
dec
das
add
arpl
pusha
scas
in
cld
jns
imul
or
cltd
pop
pop
add
adc
jns
ficompl
and
dec
roll
or
in
ficoml
mov
jle
popa
movsl
cld
push
or
dec
mov
xchg
js
fdivl
into
pop
add
push
sbb
sahf
add
arpl
cmp
jge
shr
mov
lcall
sti
jnp
push
add
clc
les
pop
adc
jnp
jecxz
sub
pop
sub
sub
xchg
add
mov
inc
insl
fsubr
addr16
test
mov
leave
loopne
or
add
std
pushf
xchg
jge
or
lods
lods
mov
push
lcall
or
int3
pop
test
mov
xchg
xchg
stc
inc
or
roll
xlat
je
pop
sub
or
imul
lods
jae
xchg
xchg
sub
pop
mov
mov
push
in
addl
sub
in
xchg
push
fldt
bound
and
gs
retw
into
leave
fidivrs
daa
fldz
stc
scas
inc
ret
test
cmc
or
aad
inc
loopne
xor
std
mov
pusha
in
ja
jne
and
sahf
cmp
and
in
mov
push
jp
jb
cs
and
sbb
cli
adc
or
push
jmp
or
cli
shll
stos
test
mov
jae
mov
mov
mov
mov
mov
pushf
fwait
ss
xor
stos
mov
jge
inc
sbb
cmpb
mov
psrad
shl
push
mov
mov
inc
test
pslld
sub
test
ljmp
mov
and
aam
cmpsl
popa
cmp
flds
jo
xor
test
call
pop
xchg
xchg
jl
mov
fwait
xor
frstor
jne
js
xchg
cltd
jl
sar
rorl
push
xchg
or
iret
fwait
imul
dec
cmp
pop
sbb
inc
xor
adc
into
pop
xor
outsl
shll
in
pop
xor
sub
iret
sbb
cmpsl
and
fstps
jecxz
mov
jp
pop
inc
mov
movl
sbb
adc
add
daa
xor
cmp
test
movsb
xchg
mov
nop
lock
loope
xor
je
jg
mov
lds
jecxz
testb
mov
jns
cli
subb
arpl
popa
add
jmp
fisubs
inc
jmp
inc
adc
jle
nop
and
add
pop
xchg
cmpsb
outsl
push
ja
adc
bound
cs
testb
adc
lea
xlat
inc
and
mov
lret
xchg
cmpsb
xor
aad
int3
or
mov
push
cmpsb
xchg
add
es
ds
mov
mov
shrl
in
ret
jnp
jns
xor
andl
loop
mov
mov
ficompl
mov
cmpsl
xor
push
cmp
mov
or
xchg
mov
push
and
aaa
jl
jo
ror
fcoms
mov
mov
call
inc
insb
int3
dec
inc
scas
mov
orl
sbb
popf
push
cs
xor
cld
mov
mov
pusha
lods
fbld
inc
cmp
dec
mov
sub
jecxz
iret
pop
sbb
cmp
stos
mov
mov
mov
adc
rorb
fmull
jp
xchg
ds
mov
inc
outsb
insl
fldcw
popa
jns
mov
andl
lds
mov
jo
sbb
sub
lock
jne
rorl
cmp
icebp
dec
mov
addr16
into
inc
cwtl
adc
pop
dec
mov
pop
sarl
xor
cltd
sbb
ds
fs
jno
mov
out
mov
jg
nop
push
inc
test
in
xor
jl
jns
inc
xchg
inc
ret
movsl
cli
mov
lock
cmp
push
ja
jns
and
or
xchg
std
das
mov
test
sbb
ja
mov
jb
out
dec
sub
mov
sub
call
lea
repnz
imul
mov
cmpsl
mov
in
aas
adc
pusha
jno
adc
pop
outsb
lcall
mov
dec
push
pop
loopne
loop
sbb
jle
mov
push
outsb
fsts
push
mov
jle
loope
push
xor
mov
filds
inc
shlb
loop
or
mov
cmp
pavgb
pop
or
push
es
mov
ficoml
mov
dec
jl
and
add
stc
shl
imul
mov
sbb
jp
mov
cmp
mov
mov
leave
dec
shl
gs
xorb
stc
sub
sbb
cltd
jge
xchg
pop
pop
in
out
in
xor
cmpb
fwait
std
jecxz
orps
jge
jmp
mov
imul
shl
and
inc
xchg
mov
xlat
js
inc
sub
rcll
push
roll
mov
aam
or
lock
mov
inc
sti
test
pop
sub
dec
push
iret
push
adc
adc
jno
sub
sub
fisubrs
pop
mov
sbb
push
sub
xchg
xor
pop
pop
push
cmpsb
mov
and
out
sti
mov
cmp
mov
scas
adc
push
gs
cltd
sbb
je
out
sbb
aad
xchg
jle
out
nop
es
mov
outsl
cwtl
mov
mov
hlt
and
mov
add
or
pop
pop
mov
mov
daa
push
or
std
lock
arpl
ja
push
rclb
push
loop
rorb
sahf
jecxz
aad
mov
adc
stc
notl
movsl
shrl
inc
jg
rorl
fidivl
add
cltd
loopne
es
mov
mov
loop
mov
aad
sarb
and
cmp
mov
in
xchg
fsubrp
ljmp
shrb
lahf
xchg
dec
xchg
inc
lods
ja
mov
xor
xor
sub
fs
lock
mov
add
dec
clc
xchg
cmpsb
pop
push
jmp
add
test
push
pop
lock
repnz
lods
jmp
push
cld
dec
xor
add
sub
inc
icebp
add
shrb
mov
sbb
mov
lcall
push
orb
cmp
fwait
or
hlt
sub
ret
std
lret
mov
cwtl
jmp
mov
sub
ljmp
mov
adc
xchg
out
push
cltd
aam
mov
xor
sub
sub
leave
xchg
mov
movsl
or
add
xor
call
stos
xor
inc
push
and
mov
cmp
retw
ds
pop
mov
and
sub
cmp
bnd
lods
cltd
mov
stos
jb
fs
and
push
testl
pop
mov
fldl
add
enter
mov
addb
cli
dec
subl
cmp
inc
mov
dec
and
cs
in
and
jl
movsb
adcb
popa
dec
popf
scas
gs
dec
xchg
imul
cltd
xor
xor
jns
adc
push
pushf
jno
fists
outsb
adc
push
test
sub
add
scas
sbb
je
cltd
cld
mov
xor
mov
out
adc
mov
sbb
cmpsl
push
es
xchg
cs
and
es
mov
cltd
daa
lahf
jo
xorl
xor
cmp
insl
mov
loopne
inc
inc
and
leave
test
cmp
stc
je
les
mov
sti
lcall
pusha
fists
xchg
mov
pusha
jae
movsl
pop
sub
cwtl
shll
stos
cli
rcrb
sub
push
into
push
add
pop
push
js
test
jge
fcompl
mov
mov
dec
mov
push
sub
sub
mov
jnp
xor
xchg
mov
mov
pop
add
inc
push
xchg
xor
pop
scas
adc
and
add
sbb
mov
adc
into
or
dec
pop
mul
aaa
rorb
mov
sti
frstpm(287
xchg
pop
add
nop
dec
sahf
adc
xchg
cmp
repz
or
ja
dec
fstp
cmp
outsl
ja
bound
stc
out
sarb
add
cmovns
push
test
cmp
dec
stc
pop
lods
lret
gs
in
and
fnsave
or
cmpl
out
aaa
adc
inc
mov
sti
out
mov
out
cmp
mov
xchg
push
mov
roll
mov
cmp
adc
mov
inc
ss
sbb
push
notb
inc
popa
adc
and
xchg
sbb
dec
pop
dec
xor
arpl
outsb
sub
dec
es
push
fsubrs
iret
mov
pop
cltd
test
cmp
arpl
mov
pop
movsl
movsl
outsl
mov
loop
fdivrs
cmp
mov
and
and
adc
xchg
mov
push
sahf
addb
sbbb
mov
jns
add
dec
sbb
adc
leave
cli
sub
fistpll
aam
xor
shlb
mov
cmpsl
and
mov
cwtl
mov
mov
jns
pusha
sub
ds
popf
xor
mov
sbb
clc
das
jae,pn
lds
jecxz
mov
jnp
ss
sbb
ja
ret
jne
mov
xchg
jg
lods
shr
popf
call
mov
inc
xchg
lods
dec
mov
ljmp
sbb
out
jne
inc
in
pusha
adc
cmp
jne
mov
xchg
adc
mov
jl
cmp
mov
mov
fidivl
psubusw
adc
adc
popf
add
lcall
sub
push
pop
scas
mov
movsb
jp
push
sub
in
push
test
dec
dec
mov
dec
cmpsb
rcll
iret
das
xor
push
test
inc
lahf
mov
or
mov
je
cmp
out
lea
jo
add
add
mov
sub
sub
cwtl
cmpl
fidivrs
inc
xor
loop
jb
add
out
cmp
push
fprem1
sub
pop
pop
lock
lea
mov
push
and
pop
aas
pushf
xchg
shlb
pop
fbld
ljmp
lea
mov
mov
cmp
push
das
test
push
arpl
jmp
fs
into
dec
push
iret
imul
pop
sbb
stos
pop
out
xor
arpl
pop
daa
stos
jl
xchg
popf
sbbl
push
insb
leave
scas
jl
stc
fsubrp
dec
int3
aas
mov
dec
dec
adc
push
dec
repz
rcrl
cmpsl
sub
cli
xchg
pop
fdivr
sub
mov
aam
mov
pop
movsl
jb
rol
jno
pop
dec
fcompl
je
dec
push
js
in
loopne
mov
mov
add
sbbb
mov
pop
fwait
int
mov
jp
inc
and
das
inc
push
ret
and
mov
out
or
fsub
pop
xchg
mov
xchg
cld
pusha
daa
xchg
jle
outsb
mov
shrl
mov
xor
jbe
pusha
inc
mov
and
cmp
popf
sub
add
fsubrl
push
movsl
jbe
movsl
or
in
lret
jnp
fsubrl
sub
and
xchg
lea
pusha
lret
push
aaa
fstpl
lea
sub
and
ret
stos
cmp
fsubrl
mov
insl
arpl
repnz
adc
push
xchg
lret
test
sbb
jmp
test
pop
loopne
in
or
insb
std
mov
sbb
jo
dec
aad
inc
mov
xorw
inc
jne
or
fadds
mov
inc
xor
jnp
mov
outsb
add
out
lret
pop
ds
cmp
push
xor
push
pop
xchg
inc
pop
push
add
inc
or
inc
xor
fimull
inc
jnp
cmp
sbb
rcr
in
xor
push
das
sbb
push
fcmove
call
fcomp
sbb
in
js
scas
jne
pop
lea
insb
jge
cmp
or
ljmp
js
dec
sbb
push
into
jbe
fdivrs
mov
sub
mov
mov
adc
shlb
cmp
lret
dec
and
lds
push
xchg
ljmp
or
rcl
fwait
pop
daa
mov
sahf
xchg
pop
rcrb
leave
pushf
jmp
notl
cld
pop
loopne
loop
js
xchg
sbb
in
inc
mov
aam
scas
in
sbb
ficompl
pop
jae
imul
gs
les
in
mov
insl
xor
push
jge
jne
idivb
gs
mov
stos
push
dec
stos
mov
data16
les
sti
and
inc
in
enter
jb
and
lea
dec
mov
stc
jle
dec
push
xchg
pushf
rcll
xchg
sbb
sub
fsubr
sub
dec
test
inc
jne
cwtl
mov
daa
lahf
mov
repz
mov
mov
mov
fldcw
push
hlt
in
add
sub
mov
mov
outsb
and
lahf
addl
push
shrd
xchg
dec
scas
scas
adc
rcll
rcrl
roll
push
out
cld
out
ret
lds
adc
sub
push
in
sub
das
add
sbb
stc
mov
cs
push
imul
dec
hlt
out
int
dec
sbb
pop
jbe
pushf
rcrb
dec
fs
push
sub
ss
mov
sti
sbb
arpl
aaa
ss
leave
pusha
jmp
cmp
iret
sub
outsb
pop
shll
idivl
jnp
push
ja
in
pop
lock
xor
jge
adc
lahf
push
and
call
iret
aaa
popl
lret
jmp
xor
xchg
cmp
dec
ret
imul
and
dec
cld
loope
cltd
push
cmpsl
out
sbb
ret
mov
mov
loopne
outsb
fsubrp
ret
pop
fnstcw
fs
cmp
xor
cmp
add
shll
in
jecxz
cmp
mov
push
lods
test
je
xchg
inc
in
sub
pop
xor
subl
sub
gs
cmp
sub
cmp
xor
inc
pop
es
pushf
add
repz
sbb
in
jl
popa
add
pop
cmp
pop
mov
push
inc
adc
in
scas
ja
popf
stos
jns
and
cli
push
pop
lret
jb
ljmp
leave
sub
out
mov
sub
fdivrs
in
push
repnz
mov
arpl
arpl
test
cmp
add
or
ljmp
sbb
mov
outsb
cs
lahf
xchg
mov
add
xchg
sub
mov
out
jb
mov
sbb
inc
js
jbe
lods
push
out
nop
daa
push
in
jb
cs
shll
fistps
icebp
es
inc
ret
and
aas
jmp
sub
idivl
insb
and
push
and
bound
dec
test
aaa
mov
dec
push
and
dec
push
jle
xchg
adc
mov
sahf
mov
pop
push
fcmovbe
scas
les
outsl
lods
jge
sbbb
sub
lret
out
popa
dec
aaa
push
sub
scas
ds
cltd
data16
loope
data16
icebp
mov
lds
cmpsl
icebp
sahf
sahf
dec
add
lahf
and
jae
fwait
push
jp
mov
leave
jmp
push
or
and
and
leave
add
xchg
xor
ret
push
cwtl
xlat
ds
pop
lods
jp
jo
les
pusha
std
std
push
and
jnp
popf
mov
lods
fildll
mov
dec
jge
or
mov
inc
leave
cltd
adc
in
bound
ljmp
into
sbb
push
jle
and
mov
xor
mov
sub
out
popa
cmp
mov
lcall
cli
imul
fsub
mov
leave
das
push
lea
jns
sbb
test
jg
add
fsubs
imul
insb
pop
xor
xor
or
lock
js
and
bound
add
fcompl
sub
pop
push
mov
fildll
repnz
mov
insl
xchg
inc
add
sti
jecxz
addl
das
and
scas
sub
jbe
loop
jmp
xchg
lock
add
leave
push
lods
dec
leave
and
cmp
jno
xor
out
iret
lret
lret
or
jl
or
sbb
loop
xor
lds
icebp
mov
push
cmpsl
lods
cmp
xchg
jae
jnp
jge
and
aam
xor
sbb
add
clc
rorl
das
or
push
and
movsl
and
push
adc
cmpb
mov
out
inc
loopne
push
xor
test
cmp
cmp
mov
iret
xor
in
into
adc
maxps
mov
rolb
xlat
sbb
mov
inc
mov
xor
sbb
mov
mov
arpl
fwait
mov
sarb
cmp
stos
sub
cmpl
pop
and
rolb
aaa
movsl
das
mov
push
and
mov
adc
dec
aas
fisubrl
jecxz
or
int3
data16
loop
cmp
cld
ret
lea
mov
cmp
arpl
cmp
xchg
adc
jne
adc
bound
and
mov
pop
test
mov
jl
cmp
mov
rcll
inc
mov
push
aas
bound
cs
xchg
mov
mov
pop
fisubrl
mov
fisubrs
stc
cmp
fcmovb
scas
dec
adc
shlb
mov
or
xor
add
gs
lcall
jb
or
inc
packuswb
jbe
pmaxub
mov
cmpsb
sub
jle
jno
fisubrl
daa
cld
sahf
mov
movsb
jnp
lds
js
out
or
rorl
xchg
int
push
xchg
add
cs
pusha
das
movsl
pusha
das
movsb
xchg
and
cmp
sub
sbbb
lret
popa
push
push
mov
sti
inc
roll
jae
test
pop
call
daa
push
sub
add
sbb
out
into
stc
pusha
scas
pop
int3
sub
das
lock
pusha
imul
sub
mov
std
xor
sub
mov
divb
inc
scas
das
add
xor
xchg
hlt
pop
aaa
outsb
cwtl
jmp
jns
iret
sbb
movsl
mov
add
fdiv
ret
xor
cli
popw
adc
sbb
push
into
mov
push
hlt
mov
xor
add
roll
sub
add
xchg
push
mov
enter
xchg
jecxz
scas
dec
sub
nop
std
rol
int
push
jg
das
cltd
mov
lock
addr16
mov
adc
nop
xchg
mov
add
scas
sbb
inc
or
jno
cld
in
dec
cld
mov
ss
aas
xor
or
mov
or
xchg
sub
rcll
jecxz
mov
iret
lods
cmp
rcll
mov
lods
mov
adc
jns
mov
js
cwtl
cmpsb
jne
mov
and
ss
mov
call
inc
pop
or
sahf
aad
cwtl
cmp
ror
add
pop
ret
cmp
jae
dec
xchg
sahf
sbb
and
sub
rorl
popa
fs
inc
lcall
mov
outsl
cmp
aad
rorb
mov
jg
mov
pop
xor
movsl
lret
sbb
add
hlt
test
shl
push
mov
iret
jg
or
test
dec
xchg
stos
incl
and
xchg
mov
pushw
pop
icebp
repnz
les
je
test
outsb
push
pop
std
hlt
loop
fisubs
mov
mov
add
repnz
adc
or
adc
sub
sbb
arpl
mov
add
mov
pop
jl
dec
xchg
adc
out
and
lds
adc
inc
mov
or
insb
xchg
mov
xchg
testb
mov
test
push
inc
push
adc
sbb
test
insb
jecxz
fs
push
loope
test
mov
ret
inc
cmp
int3
pop
movsl
xor
xchg
sub
mov
add
adc
in
rcrl
xor
or
or
sbb
addr16
rorl
imul
sbb
iret
jmp
sahf
push
or
jmp
cmp
cmp
mov
popa
push
jle
mov
mov
inc
sub
add
mov
pop
push
jae
sub
push
jae
dec
add
dec
add
dec
xchg
lret
xor
xchg
shlb
cs
xorl
xchg
xchg
mov
or
pop
push
lret
js
pop
mov
mov
xchg
pusha
rorl
or
mov
cmp
shl
nop
sub
inc
repz
arpl
pop
cmc
out
xlat
mov
in
sub
push
pusha
outsb
hlt
in
sti
into
mov
int3
fistpl
fistpll
add
push
cs
imul
or
aam
mov
push
subl
xlat
jmp
out
xchg
add
popa
mov
xchg
pop
out
pop
sbb
push
jp
mov
mov
sti
jmp
dec
cmp
cli
hlt
push
lds
push
jae
int3
call
pusha
inc
lock
push
push
and
imul
mov
lcall
stos
or
mov
mov
loopne
mov
push
rclb
push
sbb
and
mov
cmp
sarl
js
dec
mov
or
test
or
in
sarl
inc
mov
sub
ret
adc
mov
mov
and
xor
mov
xchg
shrb
loopne
or
pop
daa
jmp
cmpsl
sub
sbb
push
jae
ljmp
xchg
fwait
ret
cltd
insb
test
inc
pusha
pop
pushf
jecxz
push
sbb
testb
mov
jle
fs
push
xor
inc
hlt
sti
pop
test
jns
mov
pop
jb
cmpb
test
jne
addb
pop
push
sub
insl
dec
mov
stos
ret
xor
fiaddl
mov
push
adc
or
lods
pop
pop
mov
or
iret
sbb
jp
jo
popf
add
test
cmp
imul
test
dec
and
andb
and
lcall
test
popf
dec
sbb
mov
shl
xor
pop
mov
adcb
fistpll
in
aas
sbb
mov
cli
dec
jle
ret
je
jg
or
lock
jne
push
or
xchg
jae
jae
mov
mov
adc
inc
lret
movsb
xor
mov
stos
pushf
je
mov
dec
add
dec
repnz
lret
int
or
jno
push
idivb
sub
xchg
movsl
push
jns
inc
xchg
push
mov
int3
push
ja
jp
mov
xchg
pop
or
sbb
cmp
xor
rcr
repz
and
pop
cmp
lcall
out
je
pop
data16
pop
leave
loopne
cmc
aam
cli
ret
cmp
or
mov
aaa
mov
xchg
xlat
dec
cmp
pop
inc
daa
jae
cmpsl
lods
mov
in
es
std
sbb
not
neg
sti
add
stos
cld
bound
cli
fs
sub
inc
sbb
lcall
lcall
xor
mov
push
imul
mov
xlat
outsl
imul
test
mov
out
dec
mov
int
mov
mov
and
push
stos
sub
lock
cmc
shll
jmp
subb
sbb
push
sbb
outsl
cmp
ret
enter
in
movsb
iret
mov
xor
lret
push
enter
loop
outsl
daa
jmp
add
pop
pop
cwtl
xchg
clc
cmp
aad
xor
sub
mov
arpl
and
clc
dec
mov
imul
sub
shr
inc
lahf
cmc
stc
lret
lahf
loope
dec
adc
inc
mov
xchg
mov
push
mov
sbb
push
rolb
xor
sti
push
lods
loopne
or
push
test
mov
xor
shrl
cmp
loope
add
and
call
adc
xchg
jp
adc
push
lcall
mov
mov
mov
jecxz
and
jle
mov
aaa
sub
ja
jl
dec
adc
mov
fldl
cs
insb
xlat
mov
pop
inc
xchg
loop
test
call
cltd
mov
adc
pop
lahf
add
cmp
push
add
aam
mov
js
in
and
int3
jp
inc
lret
packsswb
adc
pop
pop
cmp
push
test
jg
sbb
or
xchg
mov
int
mov
les
incl
sub
cmc
mov
std
jne
jmp
xchg
shl
add
imul
lods
xchg
pop
gs
sbbb
scas
mov
ss
sbb
data16
jecxz
mov
push
mov
data16
int
xchg
cmp
das
pusha
jp
and
mov
jne
pop
adc
jb
add
sbb
inc
jne
test
out
stos
lret
sub
adc
inc
inc
into
ljmp
xchg
je
loope
je
loop
adc
push
sub
and
adc
je
jne
adc
jecxz
cmp
xchg
jo
jmp
pusha
pop
mov
out
mov
cmpsb
int
outsl
nop
and
movsl
cli
ds
mov
test
std
lods
imul
test
add
bnd
pop
popf
scas
out
jmp
adc
cmp
sub
dec
notl
inc
test
cmp
pop
push
ja
mov
add
and
mov
pop
jg
scas
int3
push
inc
or
jns
sub
push
inc
aas
and
push
aas
mov
inc
mov
xlat
sub
inc
lods
lret
stos
ret
mov
mov
mov
cli
into
inc
sub
push
xor
cld
push
dec
jne
icebp
fcoml
mov
mov
mov
adc
fdivs
lds
mov
pop
xor
testb
rorb
outsl
rcrb
xor
pop
test
shlb
mov
hlt
loopne
jne
pop
mov
repz
push
adc
dec
push
lahf
add
icebp
mull
fidivs
jg
inc
adc
jle
popa
xchg
clc
pop
test
add
dec
xchg
call
mov
pushl
add
mov
xchg
jg
ljmp
pop
rol
pusha
fdivrp
sbbl
mov
leave
and
fcompl
mov
pop
mov
mov
out
clc
cmp
and
xchg
mov
adc
push
outsb
jge
jne
cmp
or
pop
mov
xor
xchg
inc
cld
jae
mov
call
cmp
sbb
scas
mov
mov
cmp
or
cmp
mov
stos
pop
les
sub
xor
sub
loop
add
push
addr16
outsl
test
add
adc
inc
push
cs
jle
mov
jmp
mov
cmp
leave
rorb
int
loopne
adc
fiadds
imul
rcll
out
mov
inc
add
and
inc
mov
insb
push
pop
mov
sub
dec
jb
push
mov
fucompp
cmp
xchg
adcb
inc
scas
inc
fnstenv
sub
pop
cmp
daa
out
add
bound
lahf
and
daa
pop
cmpsl
sbb
stc
mov
in
into
orl
jnp
out
mov
xor
int3
ret
or
dec
cmp
fcom
cmp
adc
cwtl
mov
xor
sbb
add
push
inc
sub
cmp
nop
das
pop
flds
xor
ja
xlat
mov
adc
push
add
dec
daa
mov
call
lcall
rolb
rcl
xchg
lds
sahf
push
std
dec
stos
lods
fcmovbe
inc
stos
out
lds
dec
mov
xchg
sub
insl
pop
scas
call
iret
adc
and
sub
sti
addb
aaa
sub
push
sbb
sub
sbb
mov
mov
inc
pop
in
sbb
and
jp
mov
inc
inc
jle
push
data16
fldt
mov
jge
sub
nop
add
loop
add
pop
add
sahf
in
in
stos
jnp
or
mov
mov
shlb
in
fstpl
fs
or
jno
pop
sbb
inc
gs
mov
mov
loop
daa
and
jle
jb
nop
imull
pop
ljmp
xchg
mov
push
idivb
xor
mov
sbb
outsl
pop
repnz
addb
sarb
out
into
pop
or
mov
pusha
xchg
ret
sub
pop
cmpsl
rorl
jle
fisubl
rolb
rcll
mov
les
sti
cltd
cmp
lret
mov
mov
xchg
adc
jb
mov
mov
insb
xor
xchg
mov
cmpsb
push
js
add
pop
mov
testl
stos
xchg
js
test
lahf
cltd
in
pop
aad
or
cmpsl
or
imul
and
faddl
xchg
enter
mov
push
inc
sahf
popf
xor
sbb
sbb
bswap
jo
pushf
pop
ja
ss
jmp
dec
xchg
cwtl
inc
push
add
lods
dec
stos
loopne
mov
roll
mov
fidivrl
jg
add
xchg
loope
jge
test
lds
mov
int3
push
mov
or
pop
inc
scas
repnz
mov
popf
inc
mov
ljmp
lcall
ljmp
mov
or
inc
icebp
fnstenv
pop
fistpl
mulb
imul
or
lahf
fdivrs
sub
cmp
pop
xor
pop
cs
mov
lods
hlt
cmc
mov
sub
jp
sbb
sti
fwait
xlat
sbb
add
notl
iret
jnp
in
inc
std
xor
into
movsl
dec
stos
or
jb
mov
add
or
clc
mov
enter
mov
jnp
and
int3
dec
push
in
sub
movsl
fisttps
repnz
cwtl
push
mov
sbb
fcompl
test
adc
or
enter
and
mov
or
mov
fcoms
xchg
mov
in
cmpsb
xchg
sbbb
sub
pop
fdivr
or
mov
rorb
inc
xchg
cli
jg
movb
adc
fucomip
mov
popa
or
xchg
mov
mov
iret
add
xchg
jmp
add
int
pop
mov
rolb
push
testb
mov
ljmp
pop
push
xchg
or
lcall
mov
imul
loop
mov
dec
xchg
mov
lahf
push
cmp
xchg
mov
js
adc
insl
cmpsb
std
clc
leave
push
or
std
test
add
sbb
lret
push
outsb
sbb
jb
mov
scas
es
ss
mov
das
mov
sub
stc
xchg
mov
mov
jae
cmp
pusha
jb
loope
dec
nop
pop
mov
sub
fs
fcmove
push
inc
in
into
lods
push
mov
lock
ljmp
aaa
stos
loope
in
push
dec
mov
adc
jp
dec
shlb
pop
hlt
nop
pop
add
movsl
mov
scas
js
jmp
cmpsb
das
inc
and
aam
xor
stos
js
mov
cwtl
jge
mov
std
add
jge
jp
insl
mov
jle
sbb
lods
push
sbb
mov
jbe
movsl
cmp
lods
mov
cmp
mov
xchg
adc
push
test
xor
mov
or
xchg
idivl
mov
sbb
mov
les
ja
jnp
jno
push
pop
std
repz
sahf
xchg
inc
xchg
enter
sbb
sub
arpl
jmp
mov
push
and
sub
call
mov
int
call
imul
xchg
inc
loopne
repnz
xor
jbe
sub
cmpsl
dec
lods
sarl
xor
and
push
push
cmp
sub
push
pop
push
xor
jae
jg
movb
loopne
mov
or
mov
and
std
pop
das
pop
adc
inc
pop
push
xlat
mov
stc
int3
movb
sbbb
sub
pop
xchg
das
ficoml
outsl
sbb
loopne
fisubl
xchg
aas
popa
int3
jmp
jge
mov
scas
lret
and
xchg
mov
mov
sbb
in
adc
pop
js
jge
push
fldl
cmp
dec
add
xchg
adc
mov
cwtl
cmpsl
pop
dec
or
addr16
adc
mov
popa
cmp
push
and
cmc
add
fsubl
call
xlat
jecxz
int
inc
sub
push
push
jne
out
mov
sbb
add
or
into
pusha
add
push
inc
lcall
xchg
mov
xchg
das
adcl
sarb
nop
sahf
sub
int3
sub
movsb
rolb
push
fisubs
cmp
mov
sbb
addb
cs
push
pop
in
in
js
sti
lock
xchg
pop
andb
mov
lock
int
mov
vpshad
mov
pop
cmp
int
daa
es
push
add
or
sbb
insb
scas
cli
dec
in
jns
pop
adc
sbb
push
lods
mov
pop
insb
popa
scas
fildll
mov
in
loope
nop
mov
lock
sub
int3
sbb
dec
dec
movsb
pop
mov
cmp
addb
sbb
pop
xchg
xchg
sub
mov
mov
mov
leave
mov
ljmp
mov
add
mov
je
rorl
loope
pushl
cwtl
decl
lcall
fldcw
loop
mov
inc
ret
lods
ret
xchg
cltd
loopne
shll
jno
pop
cltd
jne
sbb
or
movsl
push
rol
xlat
pop
adc
xor
xor
fmull
cmp
rcrb
inc
aam
hlt
rcrl
fwait
sbb
adc
push
outsb
push
imull
sti
ror
pop
adcb
push
in
sub
and
scas
jbe
das
cltd
scas
and
call
add
gs
std
lds
addr16
jmp
dec
or
sub
ljmp
mov
sbb
adc
clc
movsb
xchg
jns
mov
mov
pop
adc
dec
inc
or
jp
aad
cmc
cmp
mov
std
fwait
lods
test
dec
scas
iret
popa
jg
fadds
cltd
push
dec
aam
notl
stos
xchg
inc
fwait
outsl
lret
in
les
add
jg
rorb
mov
jbe
cmp
icebp
aas
xor
arpl
pusha
lahf
mov
sbb
into
ljmp
out
pop
dec
push
pop
inc
int3
js
xor
xchg
pop
movsb
daa
pop
cmp
cmp
test
sbbl
or
mov
jo
popa
sub
sub
testl
enter
jp
insl
dec
in
enter
aaa
fistl
daa
popf
push
imul
shrl
xor
cmp
jae
xchg
into
mov
adc
adc
inc
pushf
out
adc
clc
jle
and
repnz
mov
jne
fidivrs
jl
outsb
xor
sbb
sub
lret
fwait
imul
and
loope
fisttpl
add
dec
jbe
outsb
ret
pop
sub
imul
out
fldl
rol
and
jae
test
ja
pop
sahf
push
mov
test
pushl
roll
cli
cld
cmp
xor
pop
add
loop
mov
repz
dec
adc
mov
dec
push
push
dec
gs
mov
divb
xchg
fnclex
fdivr
cli
mov
sbb
pop
mov
inc
roll
push
out
sti
outsl
xor
pop
sbb
int
xchg
test
ret
sub
and
es
test
lea
sarb
add
arpl
push
std
mov
repnz
inc
xor
or
xchg
iret
and
std
ret
mov
mov
je
out
leave
mov
cmp
xor
jns
mov
pop
movsl
int
sbb
pop
ret
xchg
scas
pop
jp
icebp
xchg
jp
or
cmp
sbb
xchg
sub
arpl
and
mov
jl
das
push
ret
addr16
movsl
call
cld
lea
shrl
push
mov
addl
dec
push
mov
xor
movsl
mov
cld
imul
fiadds
mov
or
lcall
xor
stos
testb
add
and
or
rorb
arpl
push
movsl
icebp
test
movsl
mov
xchg
fwait
sbb
or
lods
push
stos
test
int
div
cltd
cmc
cmp
adc
es
xchg
adc
inc
lds
movsl
jg
mov
test
mov
or
pop
sbb
cmp
mov
inc
sub
sub
mov
cmp
jo
mov
jns
dec
and
mov
xchg
pop
push
ret
mov
stos
mov
andb
icebp
mov
adc
jae
lahf
cmp
cltd
rcrb
mov
and
call
xchg
or
shr
cmp
adcb
inc
fs
pop
fsubrs
out
add
add
jo
lods
lahf
in
test
outsl
stos
adc
pop
pusha
bound
jno
insb
aas
lcall
sti
cltd
int
cmp
ret
mov
test
cld
repz
xchg
mov
pop
std
daa
pop
and
xchg
insl
scas
pusha
outsb
addr16
outsb
fs
mov
pushf
jle
test
call
sbb
xchg
jl
cmc
mov
inc
xorb
int3
mov
adc
repnz
shll
lret
dec
pop
fsqrt
dec
cmp
mov
rclb
popf
ss
cltd
sub
rcr
inc
xchg
inc
push
scas
aaa
decb
pop
ret
mov
inc
push
mov
outsb
daa
sub
cmp
lret
push
push
jns
call
subb
int3
add
push
lock
ja
das
mov
in
jg
push
or
gs
sbb
aam
jl
repz
pop
jge
mov
xlat
lret
mov
mov
mov
sbb
mov
push
or
adc
push
fdivs
cmpsb
dec
cmp
ss
inc
and
pop
clc
icebp
loopne
lods
mov
fcompl
stos
mov
es
and
in
add
in
gs
jecxz
cmc
andl
push
gs
sbb
nop
xor
cmp
push
mov
lods
jo
into
push
lods
bound
dec
xchg
outsb
sub
or
or
cwtl
and
les
adc
bound
fdivr
push
pop
mov
mov
push
or
add
push
push
add
movsl
sahf
daa
out
outsl
test
movsl
pop
pop
scas
jae
or
dec
or
nop
adc
les
stos
mov
test
inc
sbb
ss
pop
jb
mov
pop
test
inc
mov
cltd
pop
jbe
aaa
or
xor
and
pop
lahf
push
cmp
mov
jge
mov
pop
addl
leave
jbe
nop
ficompl
loop
adc
xchg
dec
ret
push
jo
icebp
aas
cmp
aaa
cmpb
out
and
cli
cltd
je
jl
test
xchg
push
je
dec
insl
aam
addr16
cmp
pop
stc
xlat
jbe
imulb
pop
inc
add
sub
pop
fs
jp
sbb
sbb
inc
out
push
inc
into
aas
pop
and
mov
mov
mov
mov
and
cmp
stc
fwait
jl
pop
add
orb
jne
pusha
add
dec
adc
arpl
cmp
fsubrl
ja
lods
xchg
or
lock
push
sub
pop
outsb
mov
ds
and
das
sahf
sbb
mov
cmpb
and
jp
or
push
insb
hlt
fxch
cmp
call
fcoms
stos
fdivrl
mov
jecxz
fsubrs
sbb
enter
adc
int
pop
cmpsb
xor
xor
fisubl
aam
sbb
fldln2
inc
mov
fcomps
sbb
adc
xchg
out
and
addr16
ret
mov
push
je
add
xchg
out
mov
mov
cld
mov
shrb
inc
or
imull
mov
or
push
mov
push
pop
dec
jo
movsb
mov
sbb
movsb
outsb
mov
sub
inc
dec
or
test
hlt
sub
imul
add
and
sub
mov
mov
push
fnstenv
sub
cmpsb
xor
jae
lea
movsl
jle
mov
mov
and
and
cld
sbb
cmp
and
push
jl
inc
outsb
jb
fimull
cmp
fisubs
cmpsl
jle
inc
xchg
adc
sbb
shll
jle
jnp
imul
imul
jmp
jp
loopne
xchg
rcl
jmp
or
push
dec
rorl
inc
shll
adc
xchg
xchg
mov
insb
and
adc
xchg
stos
inc
adc
lods
call
in
pop
sub
adc
sub
ret
inc
popf
pop
lods
inc
addr16
ja
leave
adc
jb
mov
xchg
mov
imul
push
es
dec
leave
gs
mov
cmpsb
sbbl
sbb
push
hlt
sub
adc
outsb
aad
jnp
jno
and
ret
daa
stos
js
cltd
mov
lahf
nop
mov
loopne
stos
cs
jecxz
es
adc
lea
mov
stc
mov
shrl
out
cmpsb
xchg
mov
mov
rcl
adc
jmp
in
xchg
push
hlt
add
xor
mov
sarl
jle
cmp
scas
shl
inc
fcompl
xor
leave
rclb
imul
movsb
cmp
clc
mov
aaa
sbbb
and
lcall
nop
and
xlat
sbb
dec
mov
mov
pushf
push
mull
in
test
xchg
cmpsl
inc
bound
fnstsw
and
jbe
mov
pop
mov
aas
cs
mov
fcomip
mov
subb
cmp
jnp
push
int
adc
out
mov
pop
jnp
repz
loop
aaa
mov
loop
xor
mov
cltd
dec
gs
loopne
sub
mov
push
sbb
cmp
lcall
and
pop
fidivrl
push
jb
or
pop
sub
movsl
xchg
mov
es
and
mov
jl
dec
inc
add
cmpsl
sbb
sbb
xchg
stos
inc
dec
sub
repnz
mov
aad
dec
adc
iret
incl
mov
sbb
adc
and
xchg
dec
inc
rorb
pop
mov
sbb
adc
aam
fwait
sbb
sub
enter
xchg
xor
data16
orb
sub
jl
stos
cli
sub
pop
lahf
shll
fimuls
addr16
xor
pop
lret
out
jl
push
jle
aaa
js
adc
pop
jb
ret
std
das
dec
in
or
scas
lock
sbb
push
xchg
call
pop
or
dec
mov
insl
out
insb
repnz
xchg
dec
push
out
cmp
xchg
push
xchg
roll
inc
jp
hlt
mov
and
mov
mov
jl
pop
and
imul
mov
mov
xchg
std
cmp
popf
lret
jo
add
push
insl
test
jl
test
lcall
clc
and
pop
scas
imul
orb
sahf
inc
filds
ficoms
ret
adc
clc
sahf
inc
adc
cmpsl
fists
shrb
mov
mov
pop
out
and
pavgb
mov
xchg
jmp
cmp
and
enter
scas
fstpt
xor
cmp
and
push
xchg
aaa
pop
lds
aaa
sub
push
les
iret
inc
call
mov
push
xchg
cmp
loopne
fidivs
or
jl
test
shrl
lock
cmc
dec
jle
or
jo
push
idiv
pop
std
test
jns
mov
cli
mov
cli
and
sub
or
iret
adc
pop
repnz
sub
pop
in
push
cmp
outsl
inc
mov
mov
cmc
stos
hlt
outsl
and
cld
pop
cmp
inc
adc
dec
jnp
cmc
insl
jno
pop
subb
es
jg
sub
je
pop
add
scas
ljmp
xchg
push
and
mov
xchg
push
cmpsl
jecxz
rep
adc
rolb
xor
insb
sbb
add
jge
aad
sti
mov
int
mov
and
add
adc
ret
sarb
mov
push
scas
sti
sbb
outsb
jle
jmp
or
lcall
je,pt
sub
mov
rorb
out
movsb
pop
xor
mov
xor
movsl
inc
jecxz
stos
add
iret
testb
and
add
mov
mov
scas
jmp
popa
outsb
movsb
xor
insl
mov
dec
push
sub
in
in
xchg
mov
mov
xlat
ljmp
js
push
jmp
and
xchg
fdivrl
dec
pop
and
mov
insl
sbb
rol
mov
inc
mov
fmuls
subl
out
add
loopne
mov
insl
es
adc
call
test
sub
mov
xchg
neg
inc
push
les
ret
xchg
and
mov
adc
add
sub
insb
sub
out
scas
std
sbb
inc
mov
fwait
nop
in
test
sub
push
adc
mov
call
leave
fs
fcoml
jmp
enter
xor
push
fcmovnbe
fcmovne
inc
pusha
lods
ss
aad
jmp
je
push
hlt
xchg
and
mov
mov
and
popf
popf
adc
rcrb
outsb
je
cmpsl
bound
in
icebp
nop
push
js
inc
mov
jae
es
jle
xor
fs
mov
rclb
cmpsb
cli
xchg
test
int
outsb
in
ret
insl
sub
fildl
ret
aad
fidivrl
fwait
enter
mov
shrl
js
pop
xchg
pop
xor
dec
shl
pop
mov
dec
and
xchg
xchg
outsl
mov
pop
aam
popa
jp
mov
pop
bound
loopne
push
fmul
jo
imul
xchg
scas
cli
testb
inc
aad
add
push
mov
jge
ja
ret
adc
add
xchg
dec
insb
xor
mov
fisttps
lahf
adc
and
leave
cmpsl
sub
jge
jne
bnd
data16
ja
sahf
xchg
xlat
adc
add
pusha
fisubl
adc
jmp
insb
pop
inc
imul
mov
xchg
ret
cmpsl
pop
fdivrl
inc
adc
or
xor
lods
sahf
pop
cli
lcall
mov
xchg
imul
mov
sbb
sbb
cltd
xlat
movsl
and
adc
mov
inc
xchg
mov
ljmp
push
xor
xor
cmp
cld
gs
psadbw
std
cmc
test
fcmovnbe
jno
je
sub
sub
lock
hlt
pushf
or
inc
push
pshufw
pop
fisubrl
fs
rorb
fs
cs
shlb
shll
out
inc
sti
sub
jp
xchg
std
std
mov
xchg
aad
mov
xor
je
mov
mov
mov
ffree
fcoml
fst
pop
sub
or
adcb
dec
mov
push
and
ljmp
lcall
popa
pop
push
clc
cwtl
aam
cmp
insb
sbb
test
inc
arpl
out
movsb
dec
fldcw
stos
das
stc
flds
stc
nop
cld
add
mov
hlt
push
cmp
pop
test
jbe
cmpsl
dec
inc
dec
daa
or
jmp
push
bound
icebp
pop
imul
cmp
imul
mov
xorb
adc
cwtl
cmp
test
push
xlat
xchg
jbe
ds
int3
jp
lret
mov
xorl
mov
mov
push
fsubs
daa
test
add
arpl
mov
add
pop
mov
sub
jg
adc
jle
inc
sub
ljmp
aam
sti
fsubl
add
xor
push
fdivs
xor
mov
mov
out
adc
imul
sarl
outsb
arpl
mov
mov
inc
mov
les
and
inc
mov
xchg
sub
mov
out
xchg
cld
jbe
jge
dec
hlt
div
stos
fsubrl
jae
xchg
loope
cld
cwtl
aaa
pop
cmp
and
shll
in
xor
push
add
and
push
bswap
sub
jl
mov
push
clc
cmpsb
bound
mov
jne
sub
add
gs
movsl
out
in
enter
loop
push
xor
xor
dec
xchg
xlat
ret
out
mov
les
adc
push
addl
or
rclb
divb
nop
dec
cmp
scas
or
push
or
adc
adc
mov
and
sbb
or
fldt
mov
inc
dec
ja
mov
cwtl
insb
and
shll
mov
xchg
out
push
lea
mov
pop
lcall
sub
cmp
pusha
sub
aad
pop
ss
push
loope
in
cmp
fisttps
mov
add
push
cld
outsl
mov
xchg
mov
nop
nop
pop
ret
movsl
sub
mov
mov
mov
push
rcrb
scas
ss
add
xchg
xlat
jmp
cmp
push
cld
iret
test
mov
icebp
data16
mov
sub
mul
js
pop
dec
insl
std
inc
add
sti
mov
repz
lds
mov
dec
inc
mull
fs
inc
adc
xchg
add
ss
cwtl
cmc
ret
mov
jecxz
pop
shlb
adc
pop
mov
ret
dec
sbb
jns
push
add
xchg
ret
and
inc
aad
pop
fucompp
push
daa
imul
mov
fnsave
pop
lahf
loope
and
push
cmc
out
fimull
ds
aaa
cli
ljmp
push
pop
shr
inc
dec
dec
sbb
mov
jle
pop
sbb
arpl
fiadds
js
ret
and
fldl
pop
adc
mov
out
adc
cmpsl
fadds
mov
les
subl
and
xorb
xor
insb
mov
addb
pop
xchg
add
pop
outsl
inc
and
dec
es
sub
pop
aam
in
adc
lds
rcr
fcoms
inc
out
scas
imulb
add
jno
xor
inc
shr
repnz
dec
pop
int3
sub
mov
jg
xor
jg
mov
clc
sbbb
cltd
addr16
pop
les
bound
xchg
mov
andb
pop
xchg
into
mov
mov
loopne
icebp
pop
lock
mov
fldcw
pop
push
jbe
mov
push
leave
lahf
aas
int
mov
dec
and
dec
xor
and
xchg
or
jne
push
gs
les
xchg
and
lea
popf
push
neg
aad
push
mov
sbb
dec
stos
mov
out
cltd
push
movb
adc
xlat
pop
dec
lret
fisttps
cld
nop
pop
sbb
fs
xorl
test
and
inc
inc
dec
dec
xchg
fmul
fidivrs
or
cwtl
repz
fs
jbe
imul
sbb
jle
jge
xor
out
mov
push
fnstenv
add
insb
fstpl
insl
sbb
sub
dec
mov
jne
ficoml
push
pop
inc
inc
and
movsb
inc
push
test
ss
push
or
inc
std
cmp
fcomps
test
imulb
adcb
jge
sub
mov
dec
fistpl
or
mov
enter
or
jmp
addr16
sub
fcompl
and
xchg
cld
push
sbb
adc
mov
pop
adc
jno
pop
ljmp
adc
aaa
outsb
xor
and
arpl
mov
cld
jae
add
mov
cmpsb
mov
xchg
jg
movsb
sub
fs
or
or
aas
fwait
loopne,pn
xor
out
mov
sahf
mov
dec
add
mov
imul
push
mov
push
pop
jns
imul
pop
lret
lahf
adc
in
iret
hlt
lods
mov
into
jbe
xor
xor
movsb
jg
push
roll
mov
jmp
idivl
xchg
sarl
fdivrl
mov
cmp
jle
adc
mov
insb
test
dec
mov
orps
jae
bound
xor
mov
pusha
call
lret
or
add
mov
dec
mov
clc
pop
mov
adc
daa
or
xchg
lret
shr
ffree
mov
cltd
or
mov
xor
ret
ret
pop
lret
push
imul
xor
arpl
jae
test
jns
js
dec
adc
pop
call
sub
rcrb
or
cs
adc
push
xchg
adc
xchg
cmp
sarb
ja
xchg
lock
sub
adc
adc
or
fadd
enter
adc
ret
mov
movsl
dec
inc
inc
and
xor
rclb
hlt
or
test
xchg
iret
jp
unpcklps
sub
sbb
into
jge
ja
cwtl
dec
je
sbb
cmp
adc
mov
cmp
mov
fnstsw
mov
push
and
int
into
mov
and
hlt
sub
jg
jg
aam
sahf
pop
push
xor
test
hlt
push
out
test
xchg
aaa
mov
or
pop
or
mov
jmp
xchg
enter
dec
sahf
pop
sbb
add
and
cs
stos
cmp
adc
test
adc
scas
stos
ja
mov
cltd
mov
mov
cmp
dec
adc
repz
in
cmp
into
fstpt
in
mov
je
cld
repnz
push
xchg
or
mov
int
icebp
adc
gs
push
cmp
fidivs
movsb
in
pop
push
shll
push
sti
mov
xchg
hlt
int
ljmp
sar
jg
push
and
push
add
jmp
daa
jnp
ss
loopne
jnp
andb
mov
into
inc
sbb
outsb
mov
push
fldln2
mov
add
mov
je
iret
lret
sub
push
lea
sub
dec
mov
test
dec
insb
dec
sub
xchg
js
out
jbe
inc
imul
jo
cmpsl
xor
jno
divl
cld
mov
insb
je
lock
lcall
popf
sub
fbld
aam
pop
popf
xor
fiadds
dec
add
inc
xor
push
arpl
test
je
push
and
mov
dec
xor
les
pop
cmp
je
call
test
stos
rcr
int3
shl
jecxz
inc
outsb
repz
and
sbb
dec
cs
mov
inc
incb
add
and
out
lret
shlb
jecxz
mov
mov
xor
aad
mov
mov
add
and
pusha
lea
sbb
mov
lods
inc
cmpsl
lahf
das
pop
adcl
pushf
xchg
mov
cmpsb
mov
xor
pop
jbe
push
jecxz
jle
or
hlt
aaa
xor
mov
addr16
lods
adc
jecxz
xchg
and
or
push
test
cltd
jge
fistpl
mov
cmp
mov
std
cmp
fisttpll
mov
stc
inc
adc
mov
enter
pop
xchg
inc
loope
imull
xchg
xchg
sbb
lods
scas
popf
ss
add
push
pop
and
mov
repz
sbb
fldcw
call
sar
sbb
jae
and
lods
scas
cmp
xor
jg
fwait
add
jl
mov
bnd
jno
jo
sbbb
aam
jmp
xchg
shrb
dec
stos
mov
push
fcmove
in
js
sub
sarb
xchg
shlb
xchg
cmp
mov
rolb
mov
cmp
int3
push
dec
int3
pop
jb
ret
mov
sub
pop
daa
test
xchg
or
dec
cs
int3
ffreep
dec
lods
mov
push
jno
ret
mov
pushf
jno
xor
das
pop
mov
int
loop
xor
mov
and
flds
push
test
test
movsb
dec
stos
pop
insb
xchg
mov
int3
push
pop
push
inc
cvtpi2ps
xchg
and
ret
jns
sbb
inc
sti
mov
out
std
fwait
mov
std
incb
cwtl
loop
lcall
sbb
fsub
scas
xchg
and
outsb
push
jns
adc
iret
out
lret
test
xor
add
mov
pop
test
cs
ficompl
jne
add
mov
push
loope
dec
data16
inc
daa
orl
loop
je
mov
cmp
jnp
sub
pop
clc
adc
and
lds
adc
in
jnp
aaa
and
ds
shll
mov
stos
sub
pop
xor
xchg
lock
sti
adc
repnz
jl
out
push
out
sub
push
outsl
loope
mov
or
sbb
cwtl
dec
cmp
loope
insl
and
jbe
xchg
xchg
insb
jmp
pop
inc
in
sbb
inc
jnp
xchg
aam
icebp
mov
ds
loop
push
stos
add
inc
pushf
std
mov
cmp
cmp
pop
jns
xchg
push
lds
les
cmp
mov
negl
mov
jecxz
bound
or
sahf
dec
in
cltd
push
jmp
sub
out
jmp
movswl
aad
nop
pusha
mov
mov
mov
push
in
ret
out
cmc
cmp
test
adc
int
inc
cltd
jp
and
sub
dec
pop
inc
jmp
jmp
jmp
pop
mov
push
je
mov
add
pusha
sti
aam
jns
sbb
jg
hlt
mov
leave
outsl
pop
sub
xchg
xchg
jp
jmp
das
xchg
jnp
push
sub
push
xchg
push
stc
test
push
aaa
jge
xchg
lods
sub
pop
mov
dec
mov
ret
mov
outsl
sub
dec
and
dec
lds
sub
outsl
fidivrs
push
jmp
repnz
sub
lods
mov
xlat
sub
mov
xor
stos
ja
lcall
push
inc
sbb
les
bound
mov
stc
inc
push
loopne
int
mov
mov
call
loop
dec
pusha
cld
cmpsb
cmp
insl
stos
test
add
leave
neg
cli
cld
jbe
mov
iret
in
stos
push
in
sti
clc
testb
scas
xor
cmpb
outsb
repz
insb
add
sbb
mov
aad
into
sub
sahf
arpl
or
jnp
mov
inc
xor
scas
xchg
xchg
fsubrl
inc
inc
lret
rcl
pop
and
pop
dec
fs
jb
fists
push
or
das
cmp
xor
adc
clc
xchg
xchg
out
lcallw
cmc
ja
sub
insl
mov
rol
cmpsb
int
cmp
and
xchg
cmp
jne
ret
cmp
cs
into
xchg
js
movsl
pop
xchg
nop
aas
rolb
jp
dec
or
mov
fimull
mov
jb
in
cmp
sub
ret
orb
mov
xchg
jae
xor
shrb
dec
ds
sbb
mov
push
addr16
xor
fimuls
outsl
imul
inc
rorb
rcrl
fisttps
push
mov
mov
push
imul
stos
cmc
lds
push
mov
out
daa
push
fsubrs
dec
mov
dec
dec
cmp
into
cwtl
or
insl
outsl
xorb
xor
xor
mov
pop
js
push
roll
in
cmp
loope
fnsave
push
neg
imulb
fdivr
aaa
jge
es
sti
in
repz
mov
aas
sahf
cmp
test
cwtl
pop
les
in
push
into
push
mov
in
clc
inc
mov
ret
pop
mov
cmp
mov
jl
sub
sub
xchg
mov
push
in
mov
mov
sub
loop
imul
adc
xlat
mov
mov
test
inc
je
dec
mov
lods
mov
ds
in
js
adc
add
add
popa
xchg
add
ret
sub
sub
ret
lret
jbe
inc
mov
sub
xor
push
inc
repz
pushf
bound
xor
adc
in
jb
mov
lret
jae
or
xlat
push
lea
lret
in
inc
js
or
stc
or
pusha
mov
ds
lahf
add
out
outsb
push
into
push
xor
jmp
int
cmpsb
push
iret
rorb
cmp
shrl
loope
sbb
fdivl
ret
es
dec
xor
pushf
roll
call
aaa
adc
leave
insb
outsl
cmc
mov
daa
int
dec
mov
or
addr16
add
testl
lea
rcll
fldz
xchg
add
ss
imul
mov
ljmp
cmp
iret
sbbb
xor
cmp
fsubr
push
mov
mov
movsb
push
aam
fistl
test
bound
ljmp
std
sub
rcll
insb
mov
or
and
sahf
jnp
test
dec
xchg
push
in
dec
fistps
mov
scas
jns
add
and
scas
cmp
test
andl
pop
pop
sub
sahf
adc
in
pop
fiadds
lods
mov
jmp
lock
xchg
xor
or
orb
ljmp
inc
popa
sub
loope
xchg
movsl
jmp
aaa
flds
or
fstps
jmp
sub
cli
stc
stos
fmuls
ss
or
pop
adc
inc
imulb
ds
cmp
xlat
jge
pop
sbb
aam
sub
jg
mov
ret
in
outsl
sti
testl
pop
addb
or
ret
nop
sahf
push
iret
stc
mov
push
mov
rorl
mov
rcrb
and
jae
lock
inc
dec
push
xchg
mov
jle
push
pop
cltd
pusha
inc
fnstenv
or
sti
fimuls
lret
leave
scas
rcrl
inc
outsl
test
inc
adc
sar
inc
push
lea
push
sbb
iret
lods
mov
jbe
xchg
fwait
repnz
js
and
and
js
adc
popa
fnstcw
or
lock
call
loop
mov
and
pushf
push
add
jae
xchg
aam
xchg
sbb
mov
cmpsb
xchg
cmp
lods
stos
inc
push
mov
addl
nop
leave
sub
inc
mov
test
sahf
ja
adc
fcoml
push
push
mov
pop
and
mov
fisttpl
pop
les
insb
ret
inc
xchg
jmp
sahf
mov
ljmp
cmp
adc
xor
and
xchg
outsw
inc
sahf
call
bound
mov
pop
dec
and
sub
shl
inc
int
mov
mov
mov
lock
lock
inc
push
and
inc
adc
jnp
xchg
roll
inc
and
inc
pop
iret
sbb
movsl
inc
mov
loope
es
in
fwait
mov
jnp
notb
and
xchg
fwait
ja
jbe
fdiv
bound
jmp
jmp
test
mov
fsubr
dec
adc
jl
push
or
or
std
hlt
dec
jle
xor
inc
ljmp
gs
nop
jmp
repz
stos
shll
cs
pop
jg
pop
repnz
push
dec
add
rolb
popf
bound
cmp
mov
xor
sub
gs
jo
fimull
stc
insl
lods
test
cmpsl
int3
add
push
pop
fs
outsb
scas
daa
jb
imul
shr
iret
out
cmp
sbb
mov
sub
and
dec
ds
mov
xor
dec
adc
sbb
and
dec
ja
iret
aad
lods
sbb
out
cs
aaa
ret
test
mov
jb
loope
or
sbbl
and
movsb
sbb
in
sub
adc
mov
fnop
fmuls
rol
cmp
xchg
aam
push
jp
xor
addr16
out
lods
mov
sbbb
sarl
xor
inc
les
xor
mov
ret
mov
or
fcmovu
inc
es
pop
mov
sub
cmpps
loop
fsubrl
mov
leave
xorb
cmovle
das
and
lods
rcll
push
mov
shrb
mov
dec
cld
xchg
mov
outsb
cwtl
rorb
mov
jbe
mov
loope
mov
push
mov
rclb
lret
xor
and
push
inc
outsl
bound
std
inc
pop
add
cmp
and
cmc
jo
jbe
out
nop
jecxz
je
dec
inc
add
push
xchg
mov
mov
xchg
and
adc
sbb
xchg
lea
pop
jmp
xor
out
jle
mov
mov
sbb
cwtl
scas
mov
mov
jle
adc
jecxz
fwait
and
push
jl
test
arpl
ja
inc
or
push
push
ja
in
test
mov
cmp
mov
fdivl
inc
jne
sbb
inc
inc
jmp
cmp
jbe
push
xchg
jo
gs
cmpsb
xchg
add
and
sbb
push
pushf
mov
jge
mov
test
aaa
add
inc
stos
sub
loop
addl
or
imul
mov
xor
test
sarl
sub
sbb
cwtl
jl
pop
sbb
push
rcl
lods
loopne
icebp
les
push
sub
fnsave
jnp
mov
sbb
adc
and
mov
jle
inc
out
inc
in
pop
jns
loopne
addr16
mov
jne
jo
inc
mov
cwtl
adc
cmp
pushf
test
or
sub
mov
stos
cmp
fidivrl
or
xchg
fcompl
aas
adc
fstl
mov
mov
jo
mov
bound
mov
adc
les
imul
cmp
pop
sub
lahf
decb
ret
mov
push
scas
enter
pop
or
push
xchg
stc
mull
lcall
push
cli
mov
ret
test
cmp
loope
xchg
pusha
pop
dec
andb
sub
pop
cmpsb
fnstenv
out
ljmp
jp
and
dec
scas
push
xor
leave
mov
pop
cmp
fisubrl
push
nop
rolb
movsb
into
push
inc
movsb
xor
jns
aas
cltd
or
addb
mov
jle
inc
cld
dec
xchg
xchg
out
mov
imul
lock
les
loopne
mov
or
jecxz,pt
ret
negb
or
jbe
add
add
xor
mov
xchg
fstl
aad
dec
pop
mov
sarb
jo
or
mov
jg
jl
scas
icebp
bswap
pop
orb
cmc
xlat
jle
pop
add
inc
dec
stc
pusha
imul
sub
jp
sbb
xchg
inc
fs
stos
jmp
mov
and
ljmp
dec
das
sti
mov
lock
push
jo
mov
push
shrl
pop
pop
movsb
cmpsb
or
push
or
pop
jbe
fdivrp
pop
cld
lret
jno
aad
enter
xchg
xchg
aam
sub
nop
xchg
push
aaa
fnstsw
ja
mov
testb
dec
sub
leave
jp
les
and
inc
inc
or
push
cltd
out
push
or
adc
adc
mov
repnz
xchg
inc
imul
fdivs
aas
shrb
sti
outsl
aad
sbb
dec
popa
lds
repnz
cld
cmp
push
push
sbb
bnd
and
or
mov
orl
xchg
in
jno
push
dec
insl
cmp
lahf
pop
mov
out
pop
pop
jno
icebp
and
sti
mov
in
mull
xor
mov
adc
rcrb
push
or
cmp
shrl
je
lret
jno
fstp
mov
imul
cli
push
inc
leave
inc
pop
lcall
dec
jb
jnp
and
sbb
out
fdivs
jns
nop
xor
sbb
lods
xchg
xchg
adcb
mov
jle
mov
test
and
pusha
pop
jo
in
lahf
jl
shrl
push
fcoms
jge
cld
out
stc
push
punpckldq
push
lock
sar
sbb
mov
push
stos
mov
sub
adc
loopne
loope
ret
icebp
ss
jno
mov
jg
outsb
inc
sbb
cmp
inc
adc
ljmp
roll
and
push
jmp
popa
fs
sbb
and
mov
xchg
jle
movsb
inc
xchg
jns
and
in
fisttpl
out
xchg
add
mov
add
adc
push
out
or
pop
push
cltd
es
pop
ds
push
sarb
push
push
bound
scas
arpl
dec
sub
inc
jle
arpl
mov
test
push
push
sbb
cmp
sub
out
jnp
xor
push
add
pop
inc
mov
cmp
out
dec
xchg
aad
cmp
jo
clc
data16
cmp
out
xchg
loope
outsl
mov
mov
push
fs
jp
pop
hlt
jmp
jns
lret
lea
arpl
stc
push
inc
popf
xor
pop
mov
cmp
je
testb
stc
fldcw
pusha
fcompl
shlb
cli
xor
adc
int3
and
sbb
or
xchg
es
ret
push
sbb
sub
pop
outsb
cld
enter
add
stc
mov
cmc
xor
sub
push
or
sahf
mov
mov
inc
filds
clc
mov
lcall
cmpsl
adc
xor
cltd
add
jbe
lods
sbb
aas
rorb
sbb
inc
ljmp
jo
push
sub
dec
pop
je
out
push
dec
test
jbe
mov
push
dec
fdivrp
add
inc
sarl
adc
test
fdivl
or
xor
adc
arpl
jge
pop
pushf
jno
mov
adc
in
lahf
stc
mov
cli
es
mov
fbstp
xor
inc
lock
mov
test
pop
cmpsl
sub
pop
add
mov
repnz
ljmp
movsb
adc
sti
mov
cs
leave
scas
subl
push
push
cmp
jae
mov
mov
enter
xchg
push
pop
lea
dec
or
or
pop
xchg
in
dec
stc
xor
fisubl
mov
stos
jg
jle
add
cmp
jns
dec
or
je
shrl
xchg
mov
mov
inc
divl
or
cld
leave
xlat
xchg
jns
add
cmpl
outsl
mov
repz
roll
push
add
mov
xchg
lea
dec
je
pop
dec
mov
or
out
and
in
mov
movsb
mov
inc
out
cmpsb
dec
jbe
mov
dec
cmp
add
or
loopne
push
inc
xor
xor
imul
pop
push
shr
xchg
xor
mov
test
pop
pop
imulb
push
rcl
cs
sub
sti
out
testl
mov
and
lock
push
sbb
mov
aaa
scas
dec
sub
mov
jecxz
mov
dec
dec
adc
lcall
icebp
sub
sub
cmp
and
cwtl
jbe
test
add
inc
pop
cltd
push
mov
fcoml
les
xor
inc
dec
popf
insb
push
int3
inc
fistpl
xchg
mov
mov
testl
cld
jl
sbb
enter
ljmp
pop
or
addr16
and
in
sbbb
out
mov
fmull
dec
in
push
mov
pusha
sar
sub
bound
sub
add
sti
imul
out
cld
repnz
sarl
mov
mov
adc
sub
sbb
mov
or
shlb
mov
in
mov
adc
clc
or
mov
mov
mov
or
lock
cmp
mov
cmpsb
lret
mov
adc
inc
ds
loopne
fidivl
sbb
rcll
rcrl
aas
stos
cs
dec
xchg
outsb
sbb
dec
insl
stos
in
cmp
cmpsb
popf
sbb
sub
aad
in
push
add
cmp
lds
jg
clc
ret
sbb
lret
out
sbb
inc
out
pop
lcall
aad
aaa
insl
sbb
xor
das
outsl
pop
cmpsl
push
inc
cmp
sbb
add
jbe
out
cmpsb
cmp
imul
sbb
inc
mov
jmp
cs
push
inc
jp
sub
test
mov
lods
out
sub
cmp
ljmp
mov
mov
dec
mov
out
mov
jns
inc
pop
xchg
fmulp
sbb
xchg
in
hlt
lds
out
cmpsb
stos
cmpl
rcll
push
and
dec
lds
cwtl
mov
sub
xor
shl
or
rol
shll
pop
sarb
fisttpll
mov
lock
pop
insl
inc
mov
inc
cmc
and
cmp
inc
sub
lea
imul
insb
add
mov
adc
xor
adc
imul
das
or
loopne
add
mov
cmp
cmp
idivb
mov
mov
mov
stos
sub
add
pop
jl
mov
ja
and
cmp
ss
xchg
or
test
inc
cmp
test
adc
sbb
pop
nop
fdiv
jge
add
movsl
mov
scas
fwait
std
insb
pop
leave
dec
adc
cs
and
bound
sarl
cmp
jp
fs
movsl
sahf
mov
xlat
aad
mov
shll
mov
pop
rcrl
imul
xor
cli
mov
mov
ds
int3
add
or
sbb
jle
mov
loopne
and
enter
push
mov
mov
cmp
dec
insl
sbb
imul
addr16
je
dec
add
test
adc
pop
testb
push
and
je
adcl
pushf
mov
cmc
imul
loopne
es
inc
xchg
inc
in
addr16
out
inc
sub
mov
cmpb
insb
fwait
add
js
push
dec
stos
sbb
push
and
and
push
test
scas
jno
stc
jecxz
in
negb
or
jl
inc
adc
and
sahf
imul
out
addr16
faddl
mov
adc
adc
rcrl
mov
call
adcb
sti
mov
sarl
pop
daa
je
jmpw
data16
mov
mov
andl
out
je
xlat
aad
push
fdivs
xchg
mov
xchg
dec
pop
xchg
ret
add
cmp
push
jle
sti
mov
pop
add
mov
push
sbb
dec
out
daa
or
aas
js
mov
scas
adc
negl
pop
xor
mov
lock
adc
cld
mov
test
stos
and
ja
and
test
mov
sahf
bound
xlat
sub
rorl
push
push
xchg
xor
xor
sub
pop
sub
rcrl
leave
inc
loope
ljmp
pop
bnd
subl
dec
in
adc
test
dec
into
je
xor
sub
shlb
into
jne
xchg
mov
cmp
cmp
shlb
mov
sbb
pusha
xchg
cwtl
js
push
test
popf
xchg
lahf
xchg
scas
loope
inc
insl
push
jo
or
xor
adc
add
xor
notb
pushf
test
in
popf
push
ret
pop
mov
in
mov
xor
gs
insb
gs
mov
mov
mov
mov
lret
pop
jge
push
xchg
rolb
mov
mov
test
xor
and
fdivr
mov
jg
cmp
and
push
mov
cli
add
sbbb
addr16
sub
sbb
dec
pop
add
out
xor
adc
mov
in
mov
nop
movsl
adc
sub
add
cwtl
in
or
es
mov
movsb
pop
sbb
out
fidivs
sub
and
inc
adc
sub
enter
pop
test
or
out
aas
cwtl
std
mov
mov
mov
mov
push
mov
dec
mov
or
lret
out
fsubp
cmp
int3
cld
shrb
pusha
mov
jecxz
loope
inc
movsl
xor
or
stos
mov
shlb
inc
roll
in
mov
and
mov
iret
xchg
or
mov
imul
or
jge
inc
test
jnp
inc
xchg
dec
ret
test
int3
xchg
mov
je
ja
jnp
mov
imul
push
sub
lcall
mov
adc
pop
pop
mov
lods
cmp
adcl
sub
pusha
pop
andb
xchg
rcrb
add
and
lret
inc
cmp
decb
mov
pusha
stos
leave
ficoml
sbb
dec
es
scas
fbstp
pop
jbe
xchg
mov
jg
popf
pusha
mov
gs
sarb
xchg
fwait
or
negl
movhps
dec
add
pop
in
jmp
ja
rcrb
pop
xchg
cli
pop
jo
lea
jae
add
inc
and
call
jbe
sub
leave
cmc
mov
or
xchg
adc
movsb
sbb
in
and
mov
sub
cwtl
in
pushf
insl
out
adc
outsb
mov
pop
test
dec
cmp
fisttpll
add
hlt
push
mov
lea
cmp
sbb
xor
nop
mov
jne
in
lret
dec
sub
fdivrp
pop
stc
fisttpll
mov
push
push
mov
mov
cld
into
ds
test
pop
aam
andl
fs
adc
test
pop
insb
jp
mov
jmp
ds
push
mov
xor
jns
rorb
in
push
in
mov
sub
jae
jge
inc
fldt
test
repz
jns
ja
adc
push
aaa
push
push
add
lods
push
jmp
mov
push
pop
jp
mov
popa
mov
jb
std
and
add
cwtl
subl
jne
push
pop
xchg
cs
dec
sbb
lods
fildl
xor
test
test
ljmp
adc
out
push
fdivrs
aad
pop
and
mov
stos
fisubl
cmp
jl
mov
dec
mov
into
pop
sub
int
mov
pop
in
push
sbb
xor
gs
fcomip
divl
imul
ret
xchg
out
cmp
push
dec
fiaddl
dec
lds
shlb
imul
xchg
out
mov
ljmp
lods
inc
mov
dec
add
jne
xor
adc
mov
icebp
lock
int
testb
mov
push
clc
das
lcall
mov
rorb
or
push
push
sbb
lds
sbb
mov
sbb
and
jae
xchg
cmp
test
int3
cmp
mov
mov
jae
ret
xchg
lcall
push
std
add
cmp
scas
imul
or
xchg
out
ljmp
insl
pop
push
add
xchg
pop
es
dec
dec
xchg
fs
jb
jne
aaa
push
test
cmc
push
mov
cmc
lret
mov
insl
pop
pop
push
xlat
mov
inc
push
test
pop
cmp
sbb
loope
cmp
sbb
sub
aaa
popa
or
mov
int
mov
push
hlt
xchg
inc
xor
mov
and
inc
out
add
adc
ja
shll
push
push
in
fwait
out
and
mov
and
adc
cld
stos
lods
add
sbb
arpl
push
and
cli
push
xor
pushf
ret
push
dec
int3
insb
adc
add
xchg
mov
test
xchg
xlat
pop
push
into
push
fldenv
and
push
cli
loopne
fildll
add
push
sbb
cld
cli
pop
sub
sahf
icebp
sti
test
push
mov
stos
cmpsb
lds
and
lods
jle
out
pop
imul
xor
jo
sub
outsb
jmp
cmpsb
push
insb
sub
inc
xchg
scas
flds
dec
mov
adc
leave
xchg
sub
dec
add
mov
xchg
push
mov
outsb
dec
cmpl
cs
push
fstl
filds
dec
inc
cs
jle
sub
xchg
and
dec
push
push
out
xchg
repnz
insl
movsl
mov
test
test
adc
cmp
sti
aad
cld
fsubrp
mov
jle
xor
xlat
dec
pop
movsl
jle
fs
jg
or
or
sarl
mov
cmp
adc
push
jnp
stos
cmp
add
xchg
xlat
mov
pop
scas
cmp
push
int
push
mov
fistpll
or
test
daa
out
pop
ss
mov
loope
js
xlat
push
lret
inc
sbb
push
sbb
in
mov
adc
push
push
jo
rorl
mov
push
cli
test
xlat
es
pop
imul
ljmp
jns
and
dec
or
out
adc
jmp
cs
add
out
in
shlb
mov
mov
mov
cltd
push
xor
add
inc
mov
xchg
test
lock
fldl
inc
imul
inc
mov
cwtl
jp
in
mov
push
ror
stos
pop
mov
push
pop
ss
inc
int3
xchg
rorl
sub
and
cli
cmp
mov
les
scas
scas
mov
daa
adc
in
or
dec
mov
rcrb
cmpsb
push
dec
out
movsl
and
pushf
cltd
stos
mov
adc
out
sbb
add
xlat
pop
lret
xchg
dec
lds
ret
jp
jle
xor
add
pop
or
insl
loopne
arpl
arpl
push
repnz
and
les
test
xor
cmpsb
sbb
leave
push
sbb
out
fwait
mov
je
out
lock
stc
jns
xchg
fs
sbb
out
xchg
mov
and
cmp
pop
inc
in
imul
ljmp
cmp
insl
icebp
shlb
mov
push
lret
cltd
icebp
scas
cmpsb
push
lock
jle
mov
sbb
fadds
inc
jbe
pop
push
jmp
add
aam
and
pop
mov
sub
test
fmul
cmp
pop
and
ret
pop
or
mov
outsl
inc
or
adc
icebp
push
pop
les
jno
out
sub
mov
pop
out
inc
popa
ret
call
fwait
adc
sub
sbb
mov
jno
gs
test
push
pop
add
repz
lret
and
fisttps
shrb
lds
bound
fisttpll
jo
ja
into
mov
and
pop
dec
mov
cld
in
jne
jns
mov
inc
mov
lahf
pushf
repz
add
fildl
and
mov
test
pop
dec
sqrtps
sahf
push
xor
idivl
es
mov
bnd
dec
and
push
repnz
aas
pop
rolb
lock
or
aas
dec
cld
scas
mov
cmpb
xchg
mov
sbb
push
ja
and
mov
fldcw
push
xchg
pushf
push
sub
mov
xchg
mov
daa
scas
sti
bound
in
fsubp
push
imul
and
dec
aam
cmc
insl
add
fstps
xor
ret
dec
cmc
pop
dec
mov
int
aad
dec
add
pop
in
dec
adcl
sahf
sbb
iret
xor
add
push
pop
mov
shlb
push
cwtl
je
or
aad
xchg
dec
jp
pop
sub
out
test
push
push
out
and
cmp
and
mov
insl
in
fs
aam
test
push
pushf
insl
push
stos
ret
sub
adc
iret
jmp
inc
addl
mov
dec
int
loop
in
rol
test
int
es
vpcmpgtd
push
call
dec
and
test
es
sbbb
mov
pusha
inc
andb
fisttpl
outsb
xlat
fidivl
gs
cmp
mov
push
xchg
clc
xchg
sbb
xbegin
hlt
jg
fcomps
out
push
inc
insl
das
cltd
shrb
sbb
aas
shll
pushf
mov
testb
cltd
add
push
and
pop
jne
loopne
mov
add
adc
adcl
xchg
cs
lods
outsl
enter
push
scas
push
shl
pop
push
jns
int
daa
out
inc
adc
std
inc
adc
mov
lods
xchg
xlat
lret
cli
loop
sahf
push
mov
xor
push
mov
ljmp
push
incl
je
cli
loope
pop
std
jl
push
aaa
test
scas
cld
out
daa
dec
push
fsts
cmc
testb
cwtl
fildl
popf
ljmp
rcrl
pop
mov
and
fbld
add
adc
xchg
sub
movsl
mov
imul
imul
and
outsb
mov
ret
les
cmp
and
loopne
pushf
sahf
les
mov
loope
or
ljmp
jo
subb
mov
pop
xchg
aam
jb
adc
xlat
jg
ljmp
rorl
js
lahf
faddl
fadds
mov
cmp
mov
imul
les
sub
push
call
mov
add
movsb
movsb
mov
adc
das
mov
sbb
push
add
jae
inc
sbb
into
pop
xchg
jmp
mov
dec
add
push
xor
mov
push
push
call
fisubl
and
addr16
std
lret
mov
cmc
mov
jb
mov
cmpsb
sub
cmp
insl
lret
mov
js
arpl
lret
movsl
mov
js
pop
pop
pop
xchg
mov
out
mov
sub
lcall
aaa
test
inc
test
and
inc
shll
mov
outsl
in
or
addr16
lahf
inc
cmp
ret
xor
cs
mov
daa
push
adc
jns
cmp
mov
xchg
stos
cmp
ljmp
jecxz
aas
jge
mov
mov
fwait
dec
iret
shll
inc
cmc
sti
int
aaa
mov
lods
pop
insb
lods
sbb
pop
cmp
icebp
shll
ficoms
mov
ficoms
dec
mov
push
pop
jns
xor
inc
sbb
mov
bound
mov
std
into
adc
test
pop
iret
in
lcall
mov
out
jns
mov
int3
push
in
pop
xor
inc
add
cmp
rcll
sub
popa
sbb
cmp
popa
and
cmc
js
mov
test
je
adc
inc
sub
ss
call
stos
mov
xlat
xorb
mov
and
iret
mov
jmp
push
pop
in
xchg
outsw
pop
mov
pushf
mov
jl
dec
cmp
lret
cld
in
pop
xor
mov
out
outsl
mov
lret
and
mov
dec
gs
adc
gs
lds
xor
in
xchg
and
pop
jo
push
pop
lock
outsb
mov
out
das
dec
fwait
and
or
jmp
cmp
or
stos
ljmp
movsl
shlb
in
xor
loope
mov
out
pop
hlt
xchg
adc
sbb
push
daa
and
or
or
jp
jnp
fnstcw
lds
enter
jge
or
pop
push
xchg
jb
pop
aas
add
sahf
inc
xchg
orl
lcall
arpl
inc
popf
xor
insb
je
xchg
xor
mov
xchg
ljmp
lahf
pop
and
jbe
in
push
pusha
sub
push
sub
fadds
jge
gs
xor
pushf
aad
mov
lds
mov
push
jnp
jmp
adc
inc
pop
xchg
cli
inc
jg
out
xlat
mov
fcoml
imulb
adc
dec
setb
icebp
dec
test
mov
jb
out
xor
jl
mov
insl
jae
cmp
jne
mov
scas
sarl
xor
or
aas
and
sbb
adc
jmp
sahf
jnp,pt
pop
mov
cmc
pop
stos
roll
mov
fsubrl
pop
jae
cmp
fcmove
ljmp
xchg
prefetcht2
mov
repnz
ljmp
push
pop
in
cmp
dec
mov
mov
out
fwait
adc
mov
in
mov
outsb
sbb
sbb
addr16
dec
mov
out
sahf
sbb
lret
adc
fs
inc
test
sub
fcmovb
mov
xchg
clc
mov
xchg
les
jns
pop
add
jno
pusha
or
jns
sbb
xor
insb
in
cmp
das
lret
loope
pop
arpl
bound
sub
xchg
xor
int
movsl
jae
int
or
pop
sub
dec
gs
imul
push
jg
jmp
cmpsb
movsl
xor
dec
xchg
iret
aad
mov
jnp
daa
popf
repnz
xchg
lock
mov
inc
jbe
fisubrs
rcr
clc
cltd
pushf
dec
cmp
add
rclb
jns
call
xlat
ss
push
je
dec
inc
ljmp
imul
cwtl
jnp
adc
test
xchg
and
cmovns
xlat
jle
cmc
les
inc
mov
lret
shr
or
push
js
nopl
sbb
cltd
xor
aam
and
pop
mov
push
loopne
ds
mov
scas
lods
outsl
xchg
sbb
push
fistps
lcall
pop
stos
and
outsl
rcl
xchg
push
cmp
pop
cmpsl
and
arpl
repz
mov
jbe
jnp
inc
sahf
and
inc
cmp
mov
rorl
inc
out
mov
jge
gs
jmp
xchg
jle
or
dec
ds
mov
adc
lahf
fldcw
inc
enter
pop
fisubrl
sbb
inc
fdivl
xor
pop
fsub
scas
addl
or
dec
out
sbb
scas
mov
push
pushf
cmc
add
and
mov
fsubs
xor
fs
loope
jecxz
stc
data16
lea
xchg
gs
out
orl
pop
cmp
inc
xchg
in
sbb
iret
stc
adc
mov
or
inc
push
lock
and
adc
out
xchg
push
xor
xchg
and
mov
pop
psraw
mov
lret
cltd
dec
mov
dec
lock
sbb
roll
inc
fstp
sahf
adc
cwtl
lret
adc
ror
ds
mov
imulb
xor
pop
test
lods
xor
aaa
add
and
cs
movsb
mov
repnz
loop
push
add
inc
pop
pusha
cmp
xchg
fstpt
xchg
mov
mov
lods
xlat
ret
lds
push
push
cmc
sbb
pop
dec
outsb
loope
outsb
xor
sub
and
jno
add
aam
pop
jo
les
jecxz
mov
dec
add
jae
outsb
mov
sbb
mov
xor
js
mov
lret
icebp
and
ds
inc
mov
push
rorl
inc
or
ficomps
pop
xor
in
ret
push
cmpsl
out
arpl
stc
mov
cmp
push
or
dec
popa
call
jns
ja
adc
xchg
dec
sub
je
sub
outsl
or
adc
lods
fistpl
fs
loop
add
add
xor
inc
sbb
fimuls
push
dec
push
addb
adc
and
ret
dec
mov
sti
pop
jl
popa
adc
mov
pop
aad
xchg
aam
inc
daa
in
cld
adc
or
test
jl
xor
lods
outsb
cmp
loope
scas
out
sub
adc
lret
cmp
lods
mov
jecxz
stc
xchg
adc
pop
mov
movsb
jge
push
fsubrs
and
fimull
outsb
adc
outsl
movsl
or
mov
push
pusha
dec
sahf
xor
xor
inc
or
jge
fdivrl
sahf
pushfw
adc
jge
inc
cmp
shll
push
subl
and
gs
xchg
jge
enter
jbe
leave
pop
push
mov
insl
and
cmpsb
js
shl
int3
fcomps
imul
mov
xor
mov
loopne
mov
ljmp
call
sti
popf
mov
lods
xchg
inc
scas
inc
jmp
std
inc
insb
dec
inc
cmpsb
out
fwait
cmp
pushf
out
add
cltd
inc
mov
adc
je
push
daa
ds
addr16
jne
repz
add
pop
shl
sbb
mov
pop
cmpsb
or
aas
pop
cltd
sarb
lods
add
jp
dec
lock
xchg
movsl
sahf
filds
lret
lret
test
test
outsb
xor
pop
mov
test
jae
out
sbb
leave
jo
and
adc
orb
aas
test
scas
loope
inc
int
xchg
xchg
scas
lock
in
cmpsl
addl
mov
dec
lods
add
mov
push
inc
cmp
lea
cmpsb
lcall
out
add
adc
xchg
xor
sub
lock
rolb
popl
adc
fistpll
jle
mov
aad
jae
lcall
pusha
xchg
idiv
iret
loop
sbb
imul
add
xchg
cmc
movl
imul
in
xchg
rorl
arpl
les
sub
repz
filds
outsb
pop
push
addr16
lahf
add
in
addr16
push
cmpsb
enter
xchg
xchg
ja
adc
imul
cltd
mov
dec
in
neg
std
cmp
cmp
xor
sbb
push
addr16
cmp
cmp
dec
push
pop
loopne
and
sub
or
ret
mov
jne
das
icebp
test
out
mov
fdivs
jg
fistps
mov
cld
jb
pop
rep
sub
push
push
into
dec
pushf
dec
jmp
hlt
adc
mov
ret
sahf
in
mov
mov
fcomip
cmp
testb
push
pop
add
push
jnp
push
lcall
js
dec
jno
mov
dec
cmp
pop
fisttpl
pop
pop
icebp
jno
xor
push
sbb
int
or
or
es
xchg
stos
movsb
rorb
sub
jno
bound
and
mov
mov
sbb
imul
dec
push
popa
data16
push
and
pop
push
add
xchg
jae
sbb
out
gs
test
add
or
mov
pop
mov
dec
ljmp
imul
jnp
and
div
adc
cli
xor
hlt
push
cmp
cmpsl
aad
mov
xlat
push
test
and
or
sub
xlat
les
mov
adc
mov
lea
cmpsl
adc
les
jno
in
mov
repnz
stos
or
test
jo
adc
cmp
mov
mov
xor
mov
scas
add
push
add
jns
lock
xor
xchg
into
lcall
mov
scas
lods
sahf
les
popf
inc
push
pop
jae
jle
adc
rorb
outsb
fstpl
push
adc
pop
jno
je
incb
dec
rcl
repz
mov
jb
movsl
loope
xchg
xchg
cmp
mov
in
fdivs
adc
mov
jle
clc
jae
mov
mov
and
aam
jp
dec
or
mov
pushf
mov
mov
insl
dec
out
mov
pusha
das
cmp
iret
ja
pop
add
xor
pop
xchg
and
je
xchg
out
out
dec
xor
add
cmp
jl
mov
aad
aad
loope
sub
and
rorl
inc
int
imull
adc
pop
imul
ret
andb
roll
rcrl
cld
mov
dec
sbb
scas
xor
test
sub
jb
clc
dec
or
lcall
lods
sub
sub
in
add
dec
mov
mov
jmp
rolb
adc
mov
and
or
movsl
stos
mov
and
xchg
out
dec
add
adc
push
xor
cmp
nop
repnz
push
jnp
out
popa
adc
loope
sahf
test
cld
cmc
sbb
or
push
mov
mov
js
jp
add
sbb
movsl
sub
fbld
sbb
subl
je
sub
test
xor
jg
repz
mov
lret
or
lods
xor
add
negl
es
andb
in
pop
test
sub
mov
mov
out
in
pop
aam
rolb
outsl
push
cmp
mov
adc
sarl
addr16
ret
push
imul
arpl
faddl
ljmp
jle
and
cmc
imul
in
cli
xor
sub
jmp
rclb
ss
fs
nop
cmp
dec
inc
test
push
sub
fistl
stc
out
cwtl
mov
repz
sarl
loope
mov
jbe
pop
mov
mov
cmp
aas
les
and
aad
dec
or
jno
jp
pop
pusha
push
roll
jmp
rorl
sbb
pop
jg
inc
hlt
mov
imul
and
insl
sbb
mov
mov
js
int
pushf
sub
hlt
xchg
pop
jae
dec
mov
push
bound
push
inc
dec
mov
stc
jo
adc
outsb
aaa
call
aas
mov
out
and
pop
ds
or
mov
cmpl
push
lret
push
lock
imul
popf
out
ret
push
jl
cmpsb
jne
xchg
cs
pop
lods
inc
and
rorl
fwait
sbb
in
pushf
jae
mov
add
gs
pop
enter
out
and
inc
lods
inc
divb
xor
loop
fucom
pop
insb
cmpsb
movsb
adc
dec
bound
sbb
test
aaa
push
xor
cli
andb
hlt
sub
xor
insl
movsl
sub
dec
cld
and
insb
insb
sub
adc
cmc
add
jecxz
mov
xchg
mov
push
xchg
nop
nop
sbb
mov
pop
rcl
cwtl
ds
pop
sub
shll
mov
xor
jb
jo
xchg
or
ljmp
cmp
xor
call
rolb
imul
jnp
cltd
sbb
adc
in
imul
out
addr16
test
je
jl
sbb
or
leave
clc
xor
or
in
lcall
stos
lcall
jb
loop
mov
in
lods
mov
ss
pop
add
fimull
and
into
pop
pop
sub
mov
add
jl
push
movsl
in
lock
into
outsb
out
pop
sti
fcomps
or
jp
adc
fiaddl
xchg
aaa
dec
out
lcall
icebp
mov
fwait
add
sub
js
ret
sub
dec
xchg
xor
cmovne
mov
loopne
in
cmp
orl
cmp
and
cwtl
shlb
ds
jmp
add
std
sbb
push
push
arpl
pop
test
jns
mov
fwait
out
loopne
dec
add
out
or
pop
test
imul
mov
ret
push
out
cli
rcl
inc
lods
sbb
ja
xchg
jl
jp
aaa
xchg
pop
or
std
jge
sbb
jl
or
fcmovnu
mov
adc
mov
xor
pop
dec
rcll
push
xor
cwtl
leave
sti
inc
xor
xlat
sbb
fwait
shll
or
repz
ret
iret
xor
xchg
mov
stos
push
jmp
mov
sbb
pop
dec
mov
mov
pop
sub
pop
jb
mov
cmpsl
lods
sbb
lret
lea
dec
stos
inc
cltd
pop
mov
mov
xor
adc
aas
cmc
stos
pop
call
in
cltd
stc
jle
cmc
popa
movsb
mov
pop
jne
sub
pushf
sbb
insl
das
jae
dec
cltd
pop
pop
shlb
and
les
xchg
xchg
sub
ss
lret
cmp
jne
adc
enter
lret
xor
gs
jbe
xchg
push
je
jge
cmp
sub
clc
push
jnp
sub
jnp
aas
and
cmpsb
movsb
and
int3
fisubl
cli
mov
ficoml
mov
fldcw
jae
xchg
push
popa
lock
rcrb
ljmp
and
cli
xchg
outsb
xor
mov
mov
shll
fldt
mov
movsl
ds
sbbb
mov
or
jo
xlat
cmp
das
xchg
pop
push
adc
aam
lea
cli
and
xor
push
inc
andl
jle
je
dec
pop
push
out
subl
fistpll
outsl
enter
and
xor
push
xor
add
xor
enter
rcrb
mov
add
adc
jg
adc
insl
popf
into
jb
addb
mov
sub
flds
hlt
dec
out
jl
lods
repnz
xchg
jl
push
adc
adc
insb
jae
pop
mov
mov
in
xlat
jp
xor
mov
push
add
outsl
xchg
jmp
cld
btr
popa
cwtl
add
aad
fwait
xchg
enter
xchg
jmp
cltd
ds
xchg
cmpsl
test
lea
movsl
or
and
pop
fsubrp
insb
push
mov
scas
shll
mov
sub
in
xchg
gs
xchg
xchg
aad
jne
add
mov
fildll
sbb
or
push
ss
xorl
fiaddl
sbb
pop
adc
arpl
or
push
sub
fmull
in
popa
fidivl
loop
popaw
sbb
into
outsb
or
ds
bound
mov
cs
mov
je
sbb
push
cmp
sub
inc
test
mov
loop
je
jp
fistpll
bound
xchg
pop
push
add
scas
outsb
je
xchg
mov
roll
imul
into
dec
stos
push
xchg
insb
sub
mov
push
xchg
dec
pop
mov
arpl
movsb
pop
add
cmc
mov
sbb
push
cmp
fistpl
lea
testl
add
xchg
test
xchg
cmp
push
xchg
pop
xchg
mov
pop
sbb
adc
mov
stos
or
pop
in
popf
cld
int
imul
leave
cmc
pop
and
sub
jns
outsb
in
adc
push
adc
or
cld
mov
in
jle
cmp
and
int3
fs
or
dec
cld
mov
into
or
xor
cmpsb
mov
test
mov
pop
xchg
inc
imul
pop
ret
mov
outsl
push
js
fs
xlat
sbb
sbb
inc
or
push
in
and
sbb
add
jne
mov
jl
jns
push
arpl
imull
pop
xchg
add
movsl
xchg
ffreep
jle
roll
xor
enter
cli
sbb
imul
ljmp
sbb
clc
jno
lret
or
loope
lret
and
fdivrs
pop
xchg
sub
imul
cmp
sbb
mov
lock
jecxz
dec
xchg
sbb
outsb
sub
dec
fwait
lock
sarb
mov
test
cli
js
adc
adc
and
imul
into
jg
push
sahf
pop
or
sub
mov
ja
push
test
push
jmp
inc
rorb
lcall
shlb
out
jl
and
lea
push
or
add
loope
and
cmp
jnp
rcrl
lods
cld
dec
adc
add
adc
and
mov
and
mov
fwait
rcll
inc
pop
and
pop
mov
xorb
das
popa
push
cmp
mov
pushf
fisttpll
out
ds
jnp
adc
icebp
cmc
jnp
sub
cld
insb
bound
repnz
adc
or
jbe
jb
das
fdivp
mov
fstps
stos
jns
fldl
lahf
xor
mov
loop
enter
lods
arpl
add
sti
jne
sub
xor
cmp
je
and
sub
xchg
arpl
in
and
xor
sbb
cmp
xlat
lcall
lods
jnp
xlat
mov
push
pop
inc
idivb
cltd
clc
mov
jne
xor
movsl
sbb
xchg
dec
jg
or
inc
xor
jle
xchg
std
lds
aad
mov
inc
sbb
decl
imul
test
into
jge
mov
mov
inc
push
push
pusha
cmpsl
jns
out
das
xchg
imul
sbb
mov
and
mov
addr16
lods
sub
add
dec
xor
ja
push
stc
sub
xchg
ljmp
jmp
jecxz
ss
and
imul
ds
daa
xchg
inc
mov
stc
test
push
or
cli
lods
jo
daa
rolb
inc
xor
into
ficomps
sub
arpl
adc
cmpsb
pop
xchg
dec
out
sahf
loop
test
add
jmp
loopne
aad
bound
repnz
jne
dec
and
mov
or
in
mov
sub
shlb
mov
mov
cmpsb
add
sarb
loop
add
adc
jmp
pop
add
dec
push
movb
cmp
fadds
sahf
stc
sub
sub
in
dec
pop
fldcw
in
mov
sub
test
fsubs
ds
dec
xchg
dec
fmull
and
mov
lahf
mov
push
cmpsl
loopne
jno
and
cld
shl
pushf
jle
sahf
imul
imul
iret
ljmp
dec
sbb
inc
nop
hlt
dec
cltd
nop
inc
cwtl
sahf
dec
jo
pop
mov
ss
add
out
dec
lods
fwait
xor
arpl
pop
popa
mov
in
jp
mov
mov
push
fisubs
sub
xchg
pandn
xchg
ljmp
ljmp
loop
xor
lret
outsb
in
jo
movsl
mov
repnz
movb
and
pmulhuw
mov
out
in
lock
adc
xor
leave
cmc
das
add
lods
add
adcb
pop
push
data16
lods
in
pop
mov
clc
sub
aaa
inc
sub
pop
rcll
cmc
cmp
fistl
imul
aam
jmp
or
out
jb
enter
nop
lods
addb
xor
inc
dec
insl
into
cmc
mov
push
aas
mov
add
into
push
aam
or
fsubl
or
andl
sarb
cmc
lock
adc
mov
xor
movsb
push
fcoml
out
jp
push
fimull
push
dec
mov
jae
in
mov
jecxz
mov
loop
vpmacsww
test
fldenv
pop
and
or
stos
mov
inc
adc
xchg
shrl
xchg
fwait
lock
aad
scas
mov
push
sub
xchg
cmp
xor
dec
xor
or
vmovq
test
subl
movsb
subb
sahf
repnz
insb
mov
mov
insl
sub
leave
jo
xchg
lret
outsl
in
xor
nop
push
and
dec
jno
xchg
push
mov
or
out
pop
add
repz
lret
mov
cmp
incb
cmpb
xchg
mov
mov
mov
and
out
inc
add
sub
and
mov
fidivrl
pushf
negl
xchg
cmp
and
test
mov
scas
mov
sub
pop
and
xor
mov
xchg
push
pop
dec
push
jae
aad
insb
inc
adcb
js
push
inc
xchg
aaa
jb
adcb
xchg
negb
xchg
push
or
pop
mov
inc
pmulhw
inc
int3
lcall
fsubrs
pop
out
mov
into
mov
mov
outsb
movsl
int3
push
fdivr
nop
xchg
pushf
cmpsb
mov
sub
sub
scas
gs
les
test
repnz
aaa
ret
out
dec
insl
push
sbb
daa
leave
xor
out
and
nop
stc
jnp
fcmovne
insb
inc
push
fs
mov
push
pop
mov
pop
imul
add
inc
int3
aas
push
and
inc
and
or
cld
sbb
test
rorb
add
stos
ret
popa
mov
loop
cmp
shll
cltd
pop
pop
adcb
jb
call
popf
xor
push
ret
sub
jecxz
inc
pop
cwtl
push
movaps
mov
cmp
imul
mov
or
sub
xchg
add
ret
inc
inc
imul
pop
pmovmskb
xchg
test
jge
dec
fidivrl
jmp
les
pop
cmp
pop
mov
std
mov
pop
outsb
fdivl
iret
es
adc
shl
or
in
xor
movsl
decb
fstpl
inc
xor
dec
or
fwait
sbb
out
fxch
cmp
js
out
cmpsl
or
xor
ja
dec
das
add
inc
outsb
pushf
out
push
sbb
lock
mov
mov
ljmp
pushf
mov
and
dec
fmull
push
jecxz
adc
das
mov
mov
lods
pop
xchg
addr16
jecxz
adc
mov
aaa
repnz
dec
xor
mov
sar
xlat
fcoml
mov
push
or
adc
sbb
mov
mov
daa
cmp
xlat
aaa
orl
sbb
cli
nop
shll
fadds
lret
dec
and
data16
repz
push
cs
lods
scas
xor
mov
scas
lods
push
in
inc
push
outsl
fsubrs
adc
cmpsl
xor
dec
mov
shlb
inc
mov
xor
dec
sbb
inc
pop
sub
fcomp
xchg
adc
lods
xchg
scas
cld
mov
mov
inc
add
in
call
cmp
jnp
push
pusha
dec
cmp
out
ret
popf
fwait
pop
hlt
jecxz
imul
adc
cmp
cmpl
add
sahf
inc
sub
or
pop
cmpsb
lret
ret
rclb
sbb
out
mov
fnstenv
aaa
push
pushf
pop
push
lret
xchg
jp
mov
daa
mov
sti
and
mov
mov
outsb
or
cs
jb
lods
pop
mov
stc
sub
cmp
dec
fs
out
imul
xchg
sahf
paddusb
leave
dec
repz
dec
or
add
jb
jl
icebp
jbe
cmp
sbbb
int
loopne
into
sbb
sahf
xchg
test
lods
inc
lret
sub
repnz
add
or
push
fbld
inc
mov
cmp
dec
xchg
cmc
adc
and
inc
repnz
sub
adc
lock
je
lahf
or
lcall
ficoms
out
jns
lods
inc
js
dec
xor
cmp
lock
mov
cltd
or
mov
nop
mov
scas
dec
loopne
in
lret
jo
sarl
dec
pop
jns
push
pop
dec
dec
addr16
and
cmp
sub
jne
push
xchg
iret
cmp
lahf
flds
loop
test
jmp
push
add
test
push
and
enter
pushf
mov
xor
jp
jg
fmuls
imul
std
and
lods
lea
std
andb
arpl
pop
mov
push
sub
iret
mov
sbb
shlb
pop
jl
sbb
push
mov
int3
xor
ja
or
mov
cltd
sub
jp
sti
aad
sbb
je
mov
nop
call
sub
cmpsl
sbb
pop
les
and
inc
stc
xchg
insb
or
xor
fdivrp
int
xchg
fldenv
mov
pop
lcall
bound
dec
add
ss
repz
sub
xchg
out
flds
mov
xor
mov
push
fidivs
mov
pop
xchg
add
jae
mov
pop
cmpsb
mov
mulb
mov
sbb
pop
in
mov
push
out
add
dec
loop
ret
insl
enter
mov
ds
jnp
int
cli
in
roll
fs
fnsave
mov
add
jb
and
arpl
fs
adc
dec
add
push
pop
in
mov
sub
ror
pop
inc
mov
mov
hlt
punpcklbw
adc
sub
mov
pop
sbb
mov
popa
fwait
pop
ljmp
insb
aaa
sbb
sub
shl
xlat
xor
add
xchg
mov
sbb
or
jge
imul
test
test
enter
lods
dec
fidivrl
xchg
jne
fidivs
decl
lret
or
xchg
popf
inc
pop
das
loopne
push
popf
loope
mov
leave
adc
inc
and
sti
dec
jmp
mov
loopne
mov
dec
fwait
jge
pop
aaa
add
and
jp
push
jp
mov
rolb
popaw
mov
jmp
popf
clc
jmp
sti
lds
push
lock
in
scas
mov
lods
cmc
stc
aaa
rcrb
xchg
xchg
push
push
xchg
imul
in
js
insb
loopne
stos
xchg
test
dec
inc
in
icebp
je
sub
lahf
dec
cmp
inc
pop
das
stos
ret
mov
sbb
imul
loop
fcmovne
add
dec
mov
cmp
sbb
pusha
imul
xor
icebp
mov
xchg
repz
in
movsb
mov
dec
out
add
dec
xorl
push
aaa
orb
cld
xor
sbb
xchg
into
int3
out
sub
sub
and
jle
into
idivb
leave
inc
test
lods
dec
and
mov
outsb
mov
and
push
xchg
scas
push
xor
shlb
jmp
mov
jl
adc
fbld
call
notb
mov
and
inc
mov
push
sbbb
popa
and
fwait
push
inc
push
jnp
ds
mov
sub
shll
jmp
rcl
pop
cmp
and
orb
test
or
es
jns
jb
imulb
fst
pop
mov
test
cmpsl
pop
add
pop
mov
loopne
push
testb
push
in
jge
arpl
hlt
sub
hlt
fdivrp
pop
mov
into
adc
sbb
mov
jb
or
xor
pop
scas
sub
xlat
mov
sbb
adc
push
ja
mov
sub
dec
jb
pop
mov
add
ficomps
jg
cmp
rep
aas
mov
js
sbb
and
xor
pop
add
mov
lret
push
sub
imul
mov
ja
inc
ficoms
sti
subl
or
or
push
xchg
add
aas
ret
or
jp
aad
pop
push
xchg
inc
ret
es
xchg
dec
push
add
sub
sbb
add
pop
xchg
add
lahf
subb
aas
in
xchg
sbb
js
icebp
iret
loope
imul
add
dec
out
movsl
push
fidivl
sbb
sahf
jge
mov
xlat
fsubl
incb
dec
scas
mov
dec
add
or
dec
xor
or
iret
sub
aaa
popa
sub
es
stos
lret
ja
sti
bound
cli
xchg
and
shll
imul
popf
lock
iret
sbb
inc
mov
popa
out
xlat
mov
int3
ds
push
loopne
sti
bnd
or
dec
std
push
xor
push
xchg
imul
adc
stos
subb
dec
and
xchg
imul
ffreep
testb
jno
pop
push
mov
xor
cwtl
aaa
inc
dec
mov
pushf
cmpsb
enter
sbbl
in
pop
mov
mov
stc
jg
bnd
adc
cmp
pop
in
and
jbe
mov
leave
pop
daa
and
cmp
addr16
fdivs
or
sahf
rol
pop
pusha
jnp
xor
mov
leave
inc
js
rcrl
jns
sub
jns
aad
fs
aam
jb
push
dec
addr16
and
inc
and
lret
xchg
lods
pop
dec
je
dec
jae
xchg
cmc
fildll
addr16
loop
sbb
ds
shrb
decl
pop
xor
sub
dec
sub
mov
mov
jo
jnp
std
xor
shrb
out
leave
lret
xchg
xor
xor
stos
inc
and
xor
lret
lds
cmp
push
stos
mov
ret
jecxz
mov
xchg
xor
out
lret
mov
std
or
xor
pop
rcrb
inc
rcll
inc
dec
insb
aaa
cmp
rorb
aas
data16
xchg
sub
gs
push
bound
bound
mov
sub
jmp
cmp
in
lahf
add
push
cs
cmp
cmp
xorl
leave
bound
negl
xor
cmp
adc
shr
fwait
mov
aas
movsb
mov
bound
inc
lret
cmpsb
mov
insl
mov
mov
sub
lds
push
adc
int
pop
outsl
call
push
mov
dec
movsb
repnz
nop
mov
lods
push
shrb
push
fiadds
enter
mov
sub
jmp
push
insl
pop
scas
sbb
lea
jae
call
nop
xchg
loope
mov
clc
sarb
clc
les
adc
repnz
cmpsl
pop
sub
mov
je
xlat
fldt
adc
cmp
cs
out
pop
push
std
mov
ret
push
cs
pop
sbb
xchg
xchg
xchg
mov
arpl
std
sbb
xchg
js
xchg
jo
sahf
pusha
das
daa
jnp
dec
and
filds
sbb
or
pop
in
sbb
loopne
sub
cltd
mov
in
fstl
in
mov
fldt
stos
or
arpl
lcall
loope
out
int3
iret
push
add
xchg
push
jp
sub
lods
jp
mov
dec
add
add
in
outsl
dec
inc
jae
sbb
sub
loopne
lea
add
cs
pop
dec
push
sbb
pop
push
lds
or
aad
mov
lds
add
fidivl
jb
inc
gs
fsubs
div
subb
pop
pop
add
mov
mov
jp
test
jg
nop
sub
pop
push
add
mov
imul
fcompl
cltd
jl
mov
lahf
xchg
dec
sub
xor
shlb
mov
repz
adc
mov
jae
call
lahf
aaa
fcomps
lahf
sti
or
scas
mov
cmp
cmc
mov
jl
mov
inc
xor
mov
pop
std
test
dec
sub
mov
ret
push
stc
or
mov
pusha
into
nop
scas
div
das
nop
sti
outsb
jecxz
ds
and
in
lods
push
test
es
and
adc
mov
adc
pop
fldcw
in
cmpsb
aaa
xchg
cmp
fsub
aas
mov
cld
xchg
adc
mov
push
sub
dec
and
and
mov
leave
sub
mov
dec
arpl
fdivrl
lea
mov
lea
mov
pop
ds
pusha
mov
adc
sarb
mov
pop
cmp
pop
mov
ds
inc
push
addl
mov
sbb
in
cmc
jo
sbb
add
fwait
push
lds
inc
jl
lahf
into
mov
stos
mov
mov
and
or
sbb
adc
dec
loop
orl
in
pop
hlt
cs
mov
loope
xchg
sub
gs
adc
scas
call
mov
dec
sahf
jp
and
scas
repnz
mov
jo
inc
push
inc
xor
add
mov
inc
inc
xor
pop
jmp
xchg
nop
cmp
push
icebp
imul
lods
rorb
lret
iret
jae
adc
sub
lds
ror
fs
test
mov
jne
sub
enter
in
mov
or
mov
sbb
xor
inc
and
inc
pushf
dec
dec
lcall
xchg
sbb
nop
adc
inc
sbb
fbld
or
out
and
fistpll
push
pop
pop
movsb
mov
push
jo
mov
out
idivb
pop
or
mov
out
scas
fimuls
xchg
cmp
cmc
shll
lds
push
cli
pop
add
rorb
pop
cld
mov
and
fiadds
movsb
fadds
imul
mov
mov
mov
jmp
lahf
sbb
push
lret
add
scas
xorl
mov
dec
push
hlt
test
lock
pop
inc
xchg
sub
cmp
mov
hlt
into
pop
out
divl
movsl
leave
inc
xchg
lock
repnz
or
push
mov
xchg
lods
addr16
fdivrs
lcall
xchg
ficoml
ja
loopne
and
mov
cmpsl
stos
sub
jle
hlt
inc
mov
jl
stos
mov
sbb
mov
ret
or
aam
pop
cmp
inc
fsubr
jnp
push
pop
jecxz
test
or
subb
ss
pop
cmp
jl
ljmp
sbbb
lahf
cmp
dec
jmp
sub
cmp
les
sub
mov
sbb
cmp
rorb
loope
stos
movsbl
sub
pop
cmp
icebp
movsb
push
sbb
mov
cli
jl
sbb
adc
test
mov
xchg
xchg
fldl
mov
jnp
loop
jbe
cmp
mov
push
xchg
addr16
mov
inc
push
pop
lahf
jb
stc
shl
jl
mov
in
out
dec
dec
shr
or
nop
mov
add
push
pop
js
dec
std
pop
leave
in
mov
mov
push
xchg
or
pop
xchg
sub
inc
aad
mov
cltd
sbb
scas
push
and
dec
mov
ret
lods
sti
mov
or
rcrb
sbb
pushl
sarb
dec
pop
sub
adc
adcl
xchg
cmpsb
xor
lods
fadds
mov
mov
daa
gs
incl
arpl
xchg
dec
xor
jmp
sub
js
mov
lret
mov
xchg
lods
add
popa
nop
pusha
lods
mov
shlb
addps
ficompl
arpl
out
jae
xor
clc
rcl
push
std
push
js
and
loop
movsl
and
ja
or
sti
adc
sub
rep
imul
nop
cmova
push
out
or
or
bnd
jb
aas
fsubs
or
xor
push
jle
fwait
jb
xor
ja
pop
frstor
ds
into
repz
xor
addr16
lods
or
push
cwtl
mov
int3
fsts
xor
in
int
cli
lret
adc
js
popa
adc
jns
sbb
imul
shlb
sub
or
xchg
fnstcw
out
ret
out
mov
adc
ds
jbe
push
lret
icebp
push
pop
push
lret
repnz
rorb
adc
cmp
lds
pop
nop
xchg
out
cwtl
jns
mov
movl
test
fldcw
imulb
insb
push
pop
cmpsl
out
lret
imul
jecxz
push
pop
fucom
xor
inc
mov
mov
jnp
aas
fneni(8087
cmpsl
add
pop
out
xor
pop
pop
adc
dec
sarb
push
jbe
ret
jge
pop
out
add
cmp
mov
mull
jo
push
das
test
cltd
adc
popa
or
adc
aam
or
test
xchg
jg
loop
rcrl
jae
jp
test
xchg
frstor
shlb
sub
out
popa
stc
or
dec
pusha
lds
sub
rolb
je
fdivr
mov
inc
jno
inc
out
or
fsub
dec
inc
cmpsl
bound
mov
sub
inc
sbb
lods
cwtl
pop
sarl
jmp
loope
ss
cli
fs
or
sbb
movsl
sbb
iret
cli
mov
insl
aaa
xchg
push
movsb
or
dec
and
xchg
dec
imull
and
dec
inc
das
pop
lock
lret
jbe
jge
sbb
mov
cld
cwtl
inc
loop
push
jge
adc
out
jae
mov
out
aad
inc
pop
lods
sbb
xor
repnz
cmc
or
icebp
and
push
xchg
xor
or
jge
xchg
fsubrs
out
mov
test
loope
out
iret
jl
lcall
pop
pop
iret
sti
sub
mov
sbb
vpmaxsw
mov
outsl
scas
in
fwait
hlt
push
hlt
xchg
jg
and
loop
ss
pop
test
push
jp
inc
inc
mov
cmpsb
pop
pop
fucom
repz
xchg
nop
mov
xorl
cmp
xlat
mov
jmp
push
push
pop
xchg
push
and
lds
insb
shl
xchg
fwait
and
vpmaxsw
xor
add
lcall
push
mov
push
pop
and
sbb
cmp
push
xlat
loop
fisubl
xchg
in
xchg
cmp
cmp
mov
sub
pop
mov
push
ja
addr16
out
es
int
insb
aaa
shl
int3
fmuls
add
sbb
imul
popa
sub
mov
adc
lea
and
lods
or
test
insb
mov
roll
fcom
aam
and
pop
les
arpl
jne
push
or
fs
push
jp
push
pusha
adc
addr16
cmpsl
addr16
cmp
push
mov
cmpsb
stc
pop
mov
sub
adc
ret
xchg
movsb
cmpsb
sar
test
stos
add
aas
cld
cld
push
aas
shrb
out
jno
cmp
call
dec
mov
add
xor
stc
inc
inc
cltd
repnz
lock
fistps
pop
aam
mov
adc
fcoml
sbb
sti
add
mov
rcrl
mov
xchg
outsb
in
imul
mov
jno
insb
cmp
shl
rcrl
pop
and
into
xchg
faddl
xor
mov
movsb
push
cmp
mov
leave
xchg
call
testl
sbb
nop
ret
je
jp
sbb
sbb
and
jbe
add
or
pop
cmp
mov
jnp
or
mov
jp
out
mov
call
je
testb
negl
mov
mov
and
pop
call
or
arpl
or
lds
lret
stos
push
lret
dec
lahf
rcl
xchg
call
xor
lock
and
jg
into
adc
adc
js
imul
push
inc
loope
xchg
lcall
mov
mov
adc
adc
fbld
rorl
push
ret
push
cmp
ja
pop
ret
shrl
jnp
ffreep
sub
sub
fprem1
lock
cltd
lret
das
jno
fisubrs
dec
ret
imul
test
out
mov
mov
pop
sub
inc
and
cwtl
sbb
pop
push
add
imul
mov
les
fwait
jecxz
imul
jae
push
out
jae
mov
out
xchg
in
cmp
loopne
jb
aaa
ret
scas
icebp
ret
mov
jecxz
push
dec
and
xor
mov
sub
cmp
lcall
mov
mov
inc
shr
fs
adc
sub
push
out
fistps
mov
cmp
push
or
rorl
ret
cmp
test
dec
inc
or
add
fdiv
add
test
inc
cmp
int
fnstsw
or
and
jp
imul
scas
jmp
adc
shl
mov
push
push
push
aam
add
xchg
shrb
sub
dec
xlat
cs
xchg
in
push
aaa
cmpsb
push
insl
gs
and
cwtl
mov
jne
ljmp
pop
sub
sub
and
push
add
mov
in
cmpb
das
dec
add
jmp
test
xor
ret
fistpl
idivl
sub
mov
mov
xchg
xchg
pushf
fldl
adc
xor
stc
mov
out
js
jmp
lock
ret
das
jge
add
jns
sbb
test
mov
stc
filds
dec
push
jge
sub
cld
jle
push
mov
ja
xorl
pop
bound
jno
push
aam
mov
pop
mov
inc
inc
jp
subb
mov
pop
mov
adc
iret
mov
dec
jmp
ss
fisubrs
mov
je
xchg
mov
mov
mov
add
xor
subl
popf
cmp
adc
xor
imul
mov
mov
and
dec
pop
leave
loopne
xor
add
icebp
fisubrs
push
fnstcw
jno
test
dec
xchg
inc
int
inc
into
cmp
pop
xchg
sub
out
adc
pop
cmp
or
enter
push
repz
stos
mov
dec
dec
pusha
in
cwtl
adc
sub
cwtl
cld
sub
adc
mov
push
inc
cmp
sub
call
out
bnd
shlb
jge
push
loope
flds
shlb
add
pop
outsb
sub
cmp
sbb
mov
and
in
push
cmc
sbb
cmp
adc
or
fsubrs
push
pop
and
outsl
lret
lahf
xor
push
cld
into
or
jne
inc
shl
insb
fmuls
lds
cmp
sarl
insl
pop
bound
test
push
jne
mov
mov
cli
sub
jp
cmp
lods
cltd
cmp
push
roll
nop
pop
adc
stos
pop
test
fcoml
push
clc
and
and
fistl
in
cld
and
mov
jbe
pop
ret
pop
cmp
movsl
ret
out
out
leave
movsb
cmp
sbb
xchg
mov
and
in
mov
out
dec
fnsave
rorb
mov
rcrl
mov
and
pushf
dec
jno
inc
xchg
cs
outsl
pop
aaa
xor
and
or
test
sbb
or
js
outsb
fldl
stos
ljmp
inc
mov
sahf
push
test
out
push
push
popf
into
sti
cs
mov
add
and
std
pusha
call
mov
cmp
jmp
mov
movsb
test
mov
or
out
popa
movsl
and
fistpll
cs
cmp
dec
and
scas
loopne
les
loope
shl
jmp
rol
cmp
loop
jae
orl
sub
mov
add
out
lods
adc
jne
and
inc
xor
inc
ret
or
lds
aam
cmc
add
outsb
pusha
adc
xchg
pop
push
pop
int
push
mov
mov
xor
sub
mov
lret
and
jnp
dec
jno
cwtl
push
iret
cmpsl
out
inc
out
add
push
inc
mov
mov
add
add
mov
sbb
dec
jbe,pt
xor
push
cmpsl
jecxz
jecxz
je
outsl
in
lret
sub
xor
fsubrl
mov
push
adc
jle
cmpsl
sub
jge,pt
loop
adc
push
idivb
in
cmp
popa
or
mov
jne
mov
jne
xor
and
sarb
mov
xchg
pop
xor
and
dec
pop
dec
jo
cltd
mov
int3
icebp
cli
mov
les
out
scas
shlb
ret
cwtl
lea
stos
pop
cld
movsl
pop
and
push
xor
out
dec
mov
test
movsb
sub
xchg
dec
rorl
push
add
jns
mov
call
sarl
push
xchg
adc
push
pop
dec
xchg
or
sub
int
aam
xor
es
std
ja
adc
adc
into
data16
add
lahf
in
cmp
push
in
xchg
xchg
or
xor
leave
pop
jecxz
adc
cmp
loop
bound
jg
jecxz
xchg
jne
dec
out
mov
es
jnp
mov
ror
push
push
lods
jge
cld
jg
xchg
fnstenv
mov
lods
add
push
andb
mov
sub
ljmp
or
sbbb
xchg
pop
cmp
dec
sbb
sub
rolb
cwtl
xchg
insl
push
out
cltd
movsb
sbb
xor
inc
fsubrl
xor
cmp
and
adc
sub
inc
push
xlat
cltd
xlat
idiv
in
gs
repnz
jae
sahf
outsb
ret
ret
cs
bound
out
data16
or
push
pusha
xchg
inc
les
xchg
aas
push
sub
testl
inc
fisttpll
jl
xor
push
cmp
lds
lahf
mov
pop
jmp
sbbb
fs
in
push
sti
outsl
cld
movl
pusha
repz
cmp
imul
inc
or
push
fisttps
inc
movsb
sub
push
fstps
loopne
in
xor
adc
fstps
cmpsl
inc
jbe
daa
pushf
dec
xchg
inc
inc
sbb
mov
mov
lahf
cld
or
xor
int3
and
ss
lods
sbb
test
in
inc
xchg
shll
xor
pop
jmp
and
ljmp
adc
test
loopne
cmp
mov
xchg
jbe
jmp
stos
icebp
or
pop
in
mov
pop
rclb
xor
mov
mov
nop
pop
mov
insb
mov
and
or
mov
popf
cs
push
or
shlb
xor
inc
mov
mov
fsubr
and
loop
push
pushf
jle
pop
xchg
loop
ss
iret
shrl
xor
jg
inc
shrl
sub
fadds
dec
mov
cmp
mov
repnz
sub
jno
out
jns
cmpsb
or
jo
pop
push
in
fiadds
movsb
or
rcl
cld
lea
in
jnp
xor
test
fmuls
push
sub
popa
add
pop
cmc
cmpl
loopew
decl
cmp
xlat
cmp
pushf
jle
jnp
std
psubsb
jae
vmovmskpd
adc
in
add
fcoms
adc
dec
mov
mov
push
cmp
scas
lcall
es
mov
mov
cmp
pop
mov
bound
into
pop
lods
shl
mov
mov
mov
std
and
cmp
or
adc
lcall
mov
fwait
and
outsl
mov
jle
sbb
mov
cs
or
sub
divb
and
add
mov
mov
sbb
aas
jb
dec
outsb
jmp
pop
in
cmp
enter
lods
lret
jo
jb
pop
and
sub
mov
push
add
and
cmpsl
insb
or
cmpsl
and
out
mov
xor
es
nop
inc
psubq
and
add
add
dec
pushf
push
push
int3
push
sbb
rcrb
aam
jle
cmp
test
jae
pop
fbld
arpl
in
mov
dec
adc
faddl
sbb
sbbb
mov
or
sub
lret
xchg
in
addl
mov
lcall
push
and
fcoml
imul
cwtl
imul
xchg
push
insb
push
jmp
cli
adc
shrb
inc
jle
xchg
push
test
push
mov
mov
popa
enter
test
and
jb
test
push
mov
jbe
jle
jno
push
jne,pn
cmpsl
lods
push
lcall
mov
fidivrs
inc
lods
int
es
shl
mov
xchg
and
jge
jo
xor
fldl
or
mov
test
jns
lret
sbb
test
mov
addb
jmp
or
sbb
jg
movl
iret
cmpsl
xchg
cmp
das
mov
aam
mov
and
das
lahf
inc
repnz
aad
inc
lea
xor
xor
mov
adc
add
test
mov
xchg
push
lds
int3
sbb
popa
push
xchg
push
sbb
sub
out
xchg
fld
outsb
out
fpatan
imul
mov
jg
fisubl
dec
push
mov
test
push
jp
andl
mov
inc
dec
pop
call
sbb
cmp
test
test
addr16
inc
dec
dec
shrl
test
adc
cld
insl
sbb
sub
xor
lea
lahf
mov
fs
push
js
pusha
pop
xchg
test
jg
mov
gs
repnz
cltd
mov
les
mov
leave
xchg
mov
add
out
jns
pop
popf
mov
mov
dec
aas
loope
mov
dec
mov
cmpsb
ret
mov
add
movsl
dec
divl
fwait
xlat
inc
iret
inc
aad
mov
mov
cmc
jle
lcall
cmp
mov
stos
adc
call
gs
clc
pop
dec
mov
les
jmp
shr
dec
ds
adc
pop
lret
cmc
sub
aad
cmpl
mov
into
xor
mov
pop
cmpsl
inc
ret
mov
daa
mov
xchg
cmp
orb
ljmp
into
cmp
cld
pop
push
push
cmc
mov
xor
inc
add
mov
jp
push
push
fdivs
orb
inc
jb
mov
test
sbb
cwtl
mov
mov
push
mov
push
push
xchg
mov
jle
test
and
dec
push
sbb
push
pop
addr16
and
lret
xorl
test
flds
repz
sbbl
jo
clc
or
das
clc
enter
adc
adc
mov
popf
pop
pop
or
jmp
inc
ret
pop
les
test
jnp
xchg
test
outsl
dec
shlb
xor
loope
jmp
pop
xchg
sub
pushl
sbb
mov
xchg
subl
ret
fsubr
mov
xchg
shrb
push
int
andb
inc
movsb
sub
bound
int
cld
call
lds
std
scas
cmp
scas
orb
push
jmp
inc
xchg
faddl
and
dec
loopne
push
or
scas
fsin
mov
pop
pop
jo
sbb
cmpsl
push
dec
jno
pop
dec
push
out
jmp
shrb
dec
cmc
cmove
push
int
add
pop
pop
scas
iret
arpl
ss
dec
les
cltd
or
mov
scas
cmp
call
negl
inc
mov
test
jmp
cmc
repnz
stos
sbb
dec
insb
cmp
pop
push
push
pop
mov
in
add
and
inc
mov
gs
jae
scas
jle
sarl
nop
xchg
inc
popa
leave
enter
push
iret
imul
repz
movsl
sub
mov
fwait
sbb
fmull
sub
xchg
add
stc
sbbb
jmp
pop
or
sbb
mov
push
or
sbb
int3
xchg
ljmp
arpl
or
xchg
ja
inc
cmpsl
dec
push
pop
fs
jne
or
aad
jg
and
cwtl
xor
hlt
shlb
lods
fisubrl
adc
test
gs
out
jecxz
and
in
xchg
mov
push
inc
add
fadd
and
push
mov
dec
imul
xchg
jno
inc
mov
testl
into
addb
jl
in
insb
cltd
adc
cli
inc
lcall
in
sub
dec
mov
int3
cmpsl
fisttpl
cwtl
jl
dec
outsb
push
iret
cld
and
ljmp
jmp
lods
dec
addr16
out
cmp
rorb
adc
mov
cld
enter
mov
xchg
adc
loope
pop
cmpsb
push
inc
ss
push
jo
dec
ja
jl
test
and
sbb
in
out
mov
xchg
adc
lods
sti
nop
es
mov
shl
flds
push
pop
pop
sar
adc
fsubr
cmp
fidivl
sbb
out
mov
xchg
sbb
push
and
cmp
fcomps
jl
mov
cmp
mov
add
pop
push
mov
das
pop
pop
aas
nop
insb
les
pop
dec
les
imul
cwtl
add
push
inc
inc
cmp
xor
pmullw
insb
xorl
insl
add
cmp
js
jns
mov
xchg
jle
dec
icebp
ret
insl
lret
adc
stos
stos
pop
call
pop
cmp
adc
xor
cmp
out
out
inc
cmc
mov
fwait
scas
jmp
mov
in
ss
sub
sub
mov
sub
inc
idivb
fcoml
mov
out
sub
pushf
jbe
pusha
xlat
jl
cli
and
mov
mov
neg
cmp
lret
adc
rcll
push
mov
push
fistpll
xchg
ss
cli
js
dec
mov
mov
cli
pushf
mov
jne
insl
lock
cmp
xchg
cld
std
or
mov
or
iret
cli
push
sub
adc
lret
jecxz
inc
or
pop
xor
pop
jne
adc
push
cli
rcrb
iret
ficomps
inc
mov
insl
insl
fdivs
jne
xor
je
ljmp
int3
outsb
cli
adc
sbbb
adc
adc
or
out
shrl
jecxz
scas
or
lods
rcll
jge
movsb
pusha
xor
loope
jl
and
dec
idivb
in
xchg
cltd
xor
dec
fsubrl
mov
sub
arpl
repnz
outsb
inc
repz
cmpsb
scas
xor
cmp
rcll
lret
xchg
mov
jnp
mov
aad
xorl
cmp
dec
loop
loopne
or
dec
sahf
inc
iret
jne
in
jae
fwait
sub
push
repnz
popf
adc
cmpsl
and
fstpt
inc
inc
je
fldcw
xchg
addr16
lahf
push
sub
mov
stos
aam
lcall
pushf
lea
jo
add
pusha
cltd
jmp
fimuls
sub
mov
mov
jns
data16
out
mov
stos
into
sbb
dec
in
gs
iret
xlat
das
xchg
movsl
loopne
jp
rolb
repz
xor
aaa
js
pop
mov
mov
xor
fnsave
inc
fldcw
les
rcr
lahf
leave
hlt
add
in
push
movsb
mov
sub
xchg
ficoms
cltd
mov
add
mov
jae
enter
fldcw
rcrb
jno
mov
mov
mov
popa
hlt
pop
stc
cmp
push
orb
mov
fdivp
test
out
and
jmp
mov
dec
cwtl
shlb
adc
cmp
subl
xchg
sub
sub
or
test
je
inc
loopne
jb
data16
push
lret
push
cmc
shrl
loopne
dec
dec
or
lds
cltd
mov
hlt
fstl
sub
sub
cmc
and
push
idivb
stos
jp
cs
mulb
lock
adc
icebp
inc
pop
cli
mulb
mov
dec
pop
mov
mov
dec
pop
add
hlt
js
hlt
xor
mov
andl
fistpl
push
or
sbb
inc
push
gs
daa
fsubrs
lret
sub
lods
mov
push
push
or
and
fldcw
xchg
fidivrl
and
ja
jp
or
pop
push
repnz
ja
sub
insl
inc
mov
mov
ds
or
aad
add
out
fidivs
lods
and
inc
stc
cmp
inc
stos
jmp
leave
push
jae
cmp
lret
cmp
cmp
addr16
out
pop
pop
dec
mov
imul
jecxz
clc
and
push
cmp
jb
movsb
jne
mov
mov
pop
daa
pop
mov
push
mov
xchg
adc
mov
jae
lret
cli
mov
adc
jb
adc
push
ret
inc
lods
out
mov
mov
sub
popa
cld
notb
inc
sahf
pop
sahf
mov
push
std
int
xor
jecxz
adc
dec
xchg
sbb
lahf
jmp
int
adc
cwtl
sbb
xor
jb
mov
xchg
dec
mov
lock
mov
out
pop
fistpl
or
popa
stc
mov
mov
into
in
mov
inc
neg
mov
repz
sub
fwait
inc
cmp
aam
orb
jbe
ret
dec
cmp
cld
and
ss
fsubrs
push
in
sbbb
rorl
pop
pop
adc
bound
test
add
fidivl
cmc
sbb
shrb
pop
push
mov
push
mov
cmp
dec
popa
std
imul
xor
ljmp
into
inc
sbb
mov
xchg
xor
push
ret
dec
in
add
insl
ret
in
pop
hlt
fwait
pop
or
sbb
mov
js
xchg
cmp
mov
xor
xchg
test
cs
jg
jmp
cmpsb
popa
cmpsb
test
sub
pushf
jl
push
add
xchg
jmp
rorb
int
inc
xor
add
out
std
cmp
pop
clc
enter
adc
cld
outsb
movsb
jge
add
dec
test
ja
fstl
xor
testl
div
mov
lret
stos
scas
dec
pop
fwait
jo
pop
and
jae
xlat
add
xor
xchg
push
jae
xchg
mov
mov
dec
fs
fdiv
lods
mov
sbb
cmpsb
xchg
cmp
imull
cmp
arpl
out
mov
jle
lcall
xorb
mov
movl
std
mov
out
aaa
xor
loope
xor
fucomp
mov
clc
and
jnp
shll
in
loopne
or
repz
push
and
int3
leave
movsb
imul
inc
pushf
push
pusha
cmp
xchg
leave
or
sub
add
insb
sbb
in
jne
inc
pushf
int3
dec
xchg
mov
and
cmp
ret
movsb
mov
sub
and
iret
mov
xlat
or
aas
add
push
and
dec
dec
loope
ret
mov
jp
lcall
mov
outsl
inc
push
les
in
xor
leave
outsl
mov
movsb
or
or
pop
jno
add
roll
pop
aas
jl
icebp
pop
xchg
ds
ret
fisubrl
fwait
sarb
mov
test
adc
daa
mov
xchg
cmp
js
subl
aas
pop
dec
or
jns
test
ret
pop
ret
sub
fcompl
or
ret
or
mov
aad
insl
rcrl
int
push
iret
and
push
pushf
pop
loopne
clc
or
insl
inc
rcrb
or
xor
clc
dec
push
xchg
pop
movsb
addr16
inc
xor
mov
fiaddl
imul
dec
test
and
xchg
mov
fbstp
stos
push
fidivrl
mov
jns
add
sub
jne
ficompl
xchg
bound
mov
mov
xor
jne
lcall
movq
arpl
jb
push
and
pop
jb
push
sbb
push
test
incl
mov
sub
addr16
fisttpl
iret
lds
or
mov
decl
sub
decb
push
jo
imul
pop
dec
mov
jo
jne
lret
xchg
icebp
lret
arpl
pop
js
aam
lahf
ljmp
jo
adc
inc
xchg
lods
call
xchg
push
jg
lahf
push
add
xchg
lahf
cmp
scas
push
cltd
and
mov
clc
lret
loopne
push
out
sahf
jo,pt
outsl
add
rcr
sbb
lcall
fistps
into
leave
push
mov
je
test
lods
xchg
xchg
outsl
inc
mov
inc
mov
pop
or
in
dec
loopne
mov
and
cmpl
lcall
aaa
xor
pop
and
out
push
mov
leave
xlat
fcompl
sub
add
test
xchg
ret
lds
xchg
mov
adc
xor
xor
xor
push
xchg
pop
xchg
sbb
fstpt
xor
push
xchg
xchg
xor
leave
jp
jbe
jmp
sub
add
xchg
inc
scas
inc
insb
or
cmpsb
call
sub
sub
xor
pop
and
mov
int
cmc
sbb
lret
xchg
cwtl
cmp
push
cs
jns
jle
xchg
mov
flds
out
and
inc
add
adc
inc
stc
xchg
and
outsl
push
xor
pop
mov
push
push
iret
std
cli
sbb
icebp
or
mov
std
adc
sub
dec
xchg
fsubrl
ret
pushf
inc
mov
lahf
test
gs
jg
test
ucomiss
daa
sbb
dec
push
lods
sub
pop
mov
rorb
es
adc
xor
test
movsl
xor
shll
loope
cmp
xor
push
movsl
shlb
in
sub
cmpsb
mov
in
dec
push
ss
pop
or
out
mov
jbe
and
cmp
push
inc
insb
xlat
sbbb
and
adc
setbe
pushf
push
xchg
adc
push
xor
push
aaa
mov
stos
rorl
pop
mov
jmp
stos
movsl
pop
push
or
adc
pop
adc
dec
inc
inc
xchg
movsb
fdivs
les
fldenv
dec
test
lds
cmp
inc
add
outsl
cli
mov
ljmp
js
dec
push
push
mov
add
into
sbb
mov
push
lods
jno
push
mov
call
sarl
sbb
cli
cmp
mov
jns
fldcw
sbb
sub
mov
in
inc
inc
xlat
or
ljmp
imul
xchg
divl
rcll
inc
mov
mov
xor
mov
sub
mov
adc
movl
mov
psrad
bound
add
repz
cmp
pop
xor
or
bswap
fcoml
jmp
or
push
push
cmp
adc
xlat
out
stos
jb
fildll
imul
dec
or
inc
mov
std
fadds
addr16
popa
lahf
ja
int
mov
inc
loop
sub
jne
or
imul
pop
pop
or
pushf
insb
sub
jb
fwait
and
out
lcall
movsb
outsl
repnz
pop
xchg
imul
jno
mov
lock
mov
mov
push
push
pop
sub
cmp
xor
ljmp
lret
mov
imul
hlt
xlat
inc
aad
xchg
xorl
jle
add
andb
js
sub
test
shrb
aam
aas
test
aad
cmp
nop
jge
movsb
mov
pop
lds
stos
stos
daa
xchg
pushf
into
ds
sub
lods
adc
dec
push
sbb
jae
jbe
jmp
push
cmp
clc
push
lea
punpcklwd
add
push
sub
pop
idivl
ja
cmp
filds
fsubl
out
std
jge
add
mov
test
rcrl
loop
rorb
cmpsl
nop
lds
xor
pop
inc
xchg
fcoml
sub
aas
xchg
sub
mov
loope
xchg
loope
mov
mov
sbb
test
jb
std
fcmove
dec
xorl
adc
jecxz
or
call
sub
adc
mov
lret
std
cmc
push
xor
add
inc
sbb
xor
scas
push
das
push
and
dec
mov
shrb
fmuls
cmp
or
ljmp
out
js
cld
jb
jmp
sbb
push
mov
adc
jmp
stos
int
fisubrl
sub
sbb
loopne
std
pop
inc
mov
jb
por
sub
fcmove
cmpsb
in
pop
je
sti
mov
inc
mov
orl
sbb
cmp
scas
gs
inc
and
mov
aam
pop
ss
jl
int
aam
cltd
mov
movsb
out
aas
mov
or
in
fstpt
pop
stos
outsb
test
enter
sub
inc
sbb
sub
je
cmp
out
mov
out
movsb
jecxz
lods
jl
idivl
push
mov
push
jbe
ljmp
push
les
xor
cmp
jg
arpl
ja
mov
aad
push
bound
mov
lods
jge
mov
push
sub
ret
sbb
or
outsl
jo
idivb
out
mov
xchg
xor
iret
dec
aam
push
adc
cld
test
dec
lcall
rorb
cmp
pop
in
mov
pop
shlb
insb
lret
mov
pop
dec
xchg
test
push
push
sub
mov
ret
pop
test
inc
hlt
in
leave
out
int3
in
lret
xor
mov
into
add
sti
lcall
mov
sti
rclb
xor
das
inc
jmp
mul
and
fmuls
mov
loop
insl
mov
or
lods
xor
sbb
inc
movsl
outsb
outsl
push
clc
mov
in
xchg
push
pop
movsb
mov
cmc
dec
sub
adc
inc
lahf
cwtl
scas
xor
arpl
and
call
mov
xor
loop
int3
in
add
cli
test
loop
sti
xor
insl
maxps
sub
mov
fwait
pop
test
pop
icebp
test
cli
sub
cmp
dec
dec
sub
cli
fdivrl
add
dec
or
cli
and
repnz
aas
xchg
fidivrl
pop
addr16
dec
jle
sbb
loopne
ljmp
pusha
into
icebp
sbb
sbb
mov
push
cmp
js
cmpb
outsb
pop
fists
fcoms
test
les
add
loop
lret
outsb
or
ficompl
faddp
xchg
xor
movsl
mov
adc
fsubs
jnp
int3
sbbb
push
sub
inc
in
ljmp
int
cwtl
sbb
add
jbe
push
mov
xchg
jle
subl
fsincos
sub
jo
jno
inc
cmp
lea
gs
push
mov
cmp
jg
xor
add
push
scas
mov
sar
add
mov
jb
sub
jmp
push
addr16
fidivl
movsl
push
outsl
jno
daa
add
jo
mov
and
jg
clc
dec
scas
out
loop
ret
and
xor
cmp
test
in
in
iret
loop
js
aad
je
sbb
fdivl
adc
lahf
xchg
cmp
jns
or
jne
ja
je
xchg
add
ss
jmp
dec
dec
lcall
jno
adc
inc
lods
sub
xor
inc
fistps
pop
add
notb
push
or
adc
xchg
decl
push
add
push
dec
push
cli
jg
and
xchg
nop
xchg
fisttps
lods
mov
sub
pop
jo
cltd
hlt
and
pop
mov
pop
xchg
ss
scas
push
sbbb
push
addr16
mov
mov
push
aas
jne
sbbb
sbbb
sbb
mov
push
sub
mov
mov
je
mov
das
pop
jmp
sub
jmp
or
filds
sub
cmp
jmp
cmp
mov
movsl
popa
roll
pop
mov
push
xor
lock
icebp
aam
outsb
enter
aad
mov
mov
mov
adc
scas
movsl
mov
orb
mov
xchg
cmc
sbb
gs
cmp
push
mov
dec
mov
ds
add
enter
test
sub
inc
pop
xchg
movsb
cltd
dec
inc
imul
cmpsb
mov
mov
cmp
imul
pop
clc
stc
push
movsl
mov
add
fadds
imul
shrb
mov
popa
or
shll
mov
repnz
js
movsb
daa
pop
or
mov
sbb
fldenv
in
mov
arpl
push
mov
xchg
push
dec
repz
inc
in
pusha
mov
aad
repz
popf
jno
repnz
mov
imul
pusha
pop
sbb
mov
mov
scas
lahf
jl
popa
mov
in
das
lcall
jge
out
sar
xchg
and
inc
jae
xchg
mov
call
loopne
fnstsw
push
mov
bound
jns
loopne
std
out
inc
outsl
xlat
mov
setg
dec
push
adc
mov
mov
into
nop
enter
push
cmp
cmp
testb
jg
movsl
enter
sahf
jp
mov
sbbb
out
cmp
int3
ss
icebp
cwtl
lock
pop
adc
nop
mov
out
pop
stos
loop
loope
bound
cmp
sbb
sahf
jecxz
cmp
sbb
push
ret
xchg
sub
jp
ret
inc
sub
add
xchg
xchg
sub
ss
push
loop
les
xor
xchg
push
addr16
jae
pop
adc
std
mov
scas
test
popf
and
and
loope
xchg
aam
and
and
int3
sbb
into
fcompl
sub
rolb
aad
jge
test
adc
mov
pop
aaa
leave
add
pop
fisttpll
mov
fildll
es
iret
out
subl
mov
sub
sarb
add
mov
cmpb
aam
stos
mov
pop
and
add
sub
mov
xchg
adc
dec
packsswb
and
or
or
fcompl
push
ljmp
loopne
inc
das
or
jnp
std
jl
sbb
jmp
aam
mov
sub
hlt
in
out
push
fimull
cmp
incb
test
mov
mov
clc
push
arpl
pusha
xchg
xchg
jns
pushf
imulb
out
into
enter
sbb
dec
in
push
ja
sbb
outsb
mov
sub
or
popf
push
pop
lret
pop
fsubrs
cmc
push
mov
movsb
sub
cmp
and
pop
hlt
popl
cmpsl
iret
inc
clc
mov
mov
jg
jecxz
sbb
mov
pop
insb
jmp
mov
push
mov
out
jns
pop
gs
clc
nop
outsl
repz
pushf
sbb
not
jle
push
pop
jmp
clc
movsl
hlt
cltd
sub
dec
inc
std
xchg
dec
jge
add
rclb
and
sbb
lods
std
lea
fmull
mov
adc
jg
shll
sarb
inc
xchg
fdiv
xor
push
loope
aam
add
bound
hlt
pop
iret
data16
push
decb
cli
cmp
lret
repz
mov
shrb
leave
icebp
jp
mov
add
and
movsl
gs
sahf
fsts
je
jae
fdivr
inc
inc
imull
push
mov
xor
xchg
cmc
ja
push
or
inc
xor
cmp
add
dec
and
hlt
mov
mov
lods
inc
push
jns
js
add
call
arpl
call
repnz
sahf
mov
ret
push
add
fimuls
and
fwait
pop
lds
mov
cmp
jle
xor
mov
pop
lret
stos
stos
dec
xorb
ds
lods
js
cmpsb
je
lahf
test
add
mov
cwtl
cmp
nop
push
push
test
cmp
xor
mov
pop
jp
push
mov
movsb
sub
adc
out
jmp
xor
xor
out
icebp
or
pop
push
fsubrl
sub
jmp
ja
sbb
inc
inc
add
push
mov
repz
call
jnp
mov
push
inc
xchg
pop
sub
cmp
or
shlb
cmovo
arpl
push
xor
scas
stos
pop
or
imul
inc
xor
out
scas
xchg
cwtl
add
cmp
pusha
xchg
lret
sub
movsb
scas
mov
data16
adc
push
jbe
cwtl
mov
dec
push
cmp
mov
insb
pusha
mov
test
or
mov
xor
adc
mov
sbb
shll
lea
sub
push
and
dec
repz
inc
mov
mov
cs
inc
in
xchg
pop
pop
cmp
outsl
mov
adc
in
push
dec
imul
btc
cld
pop
gs
ss
mov
jne
push
mov
pop
adc
std
enter
push
scas
adc
imul
ret
jbe
sbb
aam
mov
mov
out
add
add
pop
cs
sub
loopne
test
adc
cmp
cs
xchg
in
sbb
xor
fucomip
push
push
add
popa
pop
cmp
inc
mov
outsb
sbb
inc
adc
stos
cmc
shrl
outsl
enter
xor
fbld
lock
xchg
dec
jl
adc
enter
in
cmp
rcr
jnp
test
inc
pusha
lods
mov
inc
add
bound
jne
add
call
in
loop
mov
sub
aaa
icebp
out
test
aam
dec
cli
pop
scas
xchg
push
xor
rcrl
fmull
mov
and
cmp
cmpsb
outsl
mov
jns
pop
mov
lods
lea
repnz
test
mov
loopne
cmpb
or
add
push
inc
xchg
pop
dec
or
and
in
decb
inc
test
out
or
inc
lods
adcb
jae
pop
inc
xchg
nop
pxor
ficoms
sbb
mov
or
xchg
inc
push
icebp
cmp
push
jecxz
sub
adc
push
or
in
add
leave
pop
ds
pop
or
ret
popf
lds
push
or
mov
fldenv
mov
inc
inc
pop
repnz
aaa
cmp
pop
pop
xlat
jae
lahf
lcall
out
inc
in
push
push
cmp
pop
adc
cmp
lahf
ljmp
es
inc
and
jle
pop
dec
cs
outsb
pop
test
rclb
push
sahf
fwait
rcr
sbb
ret
jl
lds
scas
cmp
in
dec
push
out
sub
add
rcrl
mov
mov
push
push
cmp
mov
fistl
xor
jne
xchg
ja
out
adc
sub
clc
adc
arpl
outsb
pop
add
push
ss
test
jne
mov
inc
cmpsl
insl
subb
jb
leave
mov
mov
cwtl
cmpsb
mov
cmpsl
cmp
imul
cltd
jmp
jno
jbe
push
out
test
lods
adc
fcmove
test
xor
dec
int
mov
insb
in
pushf
loope
pop
dec
outsl
loopne
adc
push
subl
mov
std
cmp
fdivs
ret
push
and
and
jno
ja
xchg
add
test
outsl
test
call
test
icebp
jno
daa
ret
mov
adc
inc
dec
xor
adc
insb
mov
add
mov
imul
sub
dec
icebp
xor
lahf
and
les
pop
fcomps
sar
jae
outsb
sbb
jp
out
divl
and
sbb
fwait
insb
jmp
bound
je
cli
loopne
xchg
lods
test
bound
mov
or
test
push
cmc
inc
aam
xchg
rclb
ret
fists
ret
xchg
inc
arpl
xchg
sbb
stos
push
pop
imul
sbb
and
fsubs
testl
in
repz
mov
push
addl
and
push
int
inc
hlt
popa
jg
mov
mov
in
rcll
mov
lret
or
jb
lea
jb
jnp
mov
pop
stos
and
xchg
fsubl
dec
cmp
icebp
mov
push
roll
inc
add
add
cmpsb
xlat
fchs
sub
jno
adc
xorl
mov
and
xchg
mov
in
mov
fwait
mov
jecxz
or
movsl
imull
pop
jbe
push
sarb
xor
mov
mov
mov
lahf
and
rcrl
out
aaa
ljmp
outsl
push
xor
dec
loopne
adc
pop
xchg
push
xor
adc
mov
cmp
and
ss
jo
scas
pop
adc
pop
rcr
sahf
push
hlt
and
test
sahf
jb
mov
mov
pop
xor
xchg
adc
fldl
mov
adc
aaa
sub
xchg
ret
dec
mov
sbb
lds
cltd
inc
addl
pop
xchg
bnd
xchg
cwtl
push
mov
jnp
jl
mov
repnz
xor
xchg
or
and
xorl
push
sbb
add
jne
jbe
mov
sub
mov
and
push
mov
sbb
ss
xchg
pop
pop
inc
in
bnd
mov
fs
dec
xchg
and
jb
lret
popf
pop
fistpll
std
gs
dec
cmpxchg
ljmp
mov
fcmove
repz
leave
dec
lret
adc
popf
mov
sbb
rcll
cmp
mov
imul
in
daa
aas
xor
mov
scas
adcl
push
repz
int3
fdivs
xchg
out
fsubrl
jge
jno
insl
enter
mov
out
out
dec
pop
pop
inc
pop
add
adc
in
mov
insl
mov
mov
xchg
jae
nop
xor
mov
lods
loopne
popf
xlat
js
data16
mov
inc
ljmp
pop
test
jmp
ficoml
fstpl
mov
cli
loop
clc
loopne
mov
push
in
in
inc
pop
lcall
clc
ds
and
and
jae
daa
es
cmp
pop
dec
test
sub
aam
mov
mov
fisubrs
and
mov
dec
rcl
mov
loop
ljmp
cwtl
adc
xchg
aam
push
adc
aas
inc
popa
cmp
jle
add
adc
push
rclb
nop
or
mov
jb
mov
xchg
mov
xchg
dec
es
outsl
add
or
dec
cmp
fsubrs
rcr
mov
adc
mov
les
lcall
fwait
sbbl
xchg
fcmovne
xchg
arpl
and
jae
add
push
push
aas
sbb
pop
rep
mov
and
mov
pushf
idiv
frstor
je
subb
scas
xlat
shrl
add
dec
mov
xchg
inc
mov
popf
xor
ret
inc
pusha
and
mov
sub
fmulp
cmp
mov
mov
divb
shlb
in
mov
xchg
std
add
cmp
or
xchg
xchg
insb
jb
popa
push
aam
and
dec
mov
nop
lret
test
jge
cmpsl
dec
lock
test
cmpsl
add
xor
inc
je
jmp
cld
test
nop
sbb
cmp
adc
xchg
movl
call
pop
scas
push
ljmp
in
cmp
adc
dec
ljmp
insb
push
xlat
scas
ds
std
aad
pop
rcrl
movl
repnz
push
and
jg
mov
movsb
jno
and
xor
jb
xchg
or
jl
jne
popf
xchg
jecxz
and
loop
jo
jp
pop
dec
add
mov
loopne
aad
jbe
inc
aam
fisubrs
mov
scas
out
mov
and
pusha
xchg
dec
jnp
jb
sbb
push
rorb
clc
push
jnp
add
sahf
push
dec
and
inc
cs
lcall
pusha
js
lds
cmpsb
movsl
push
lret
mov
dec
pop
in
xor
mov
pop
dec
daa
cld
push
fwait
jge
or
pop
pop
dec
and
xchg
xchg
fnsave
adc
sbb
loopne
int3
loopne
cmp
push
neg
inc
loope
sub
and
sbb
add
fdivrl
cvtdq2ps
jmp
hlt
mov
adc
push
push
xor
leave
into
lcall
jmp
dec
adc
mov
ja
cmpsl
pop
inc
jns
repz
aad
jne
and
mov
out
movsb
movsl
push
repz
cmpb
and
mov
mov
fcmovnb
movsl
and
in
or
lds
and
inc
lods
loop
gs
jb
pusha
addr16
jmp
repz
jno
or
les
cld
les
cwtl
sbb
mov
movsb
mulb
push
test
popa
cs
dec
xchg
or
jle
divb
ljmp
sbb
setbe
sub
enter
xchg
jecxz
push
test
or
inc
dec
mov
mov
sbb
dec
mov
push
jae
sbb
pop
movsl
sub
pop
or
xor
loop
dec
cmpsl
pop
loopne
insl
xchg
lds
fcoml
jo
hlt
cmp
push
iret
pop
fwait
push
inc
dec
loop
lods
loope
fs
js
nop
xchg
in
xchg
push
jbe
jge
adc
lds
clc
pop
shrb
xchg
sbb
xchg
into
xchg
shll
adc
or
aam
sub
ror
stos
or
rol
out
leave
cmp
and
pop
jb
ljmp
out
imul
ret
mov
and
orl
cmp
push
es
adc
outsl
add
jle
or
or
iret
iret
sahf
sbb
cmp
dec
outsb
mov
and
and
cltd
sub
int
gs
out
push
push
gs
jns
pop
mov
jp
test
adc
xchg
lds
das
mov
dec
sbb
sbb
inc
add
jae
mov
paddusw
imull
popf
jp
imul
out
loop
cmpl
bound
movsl
inc
xor
mov
loopne
jae
push
int
shll
lret
test
push
adc
out
pop
insl
sub
cli
pop
mov
jge
addr16
push
fyl2x
bound
dec
out
cmc
jg
ficoml
mov
clc
adc
loop
fwait
mov
push
repnz
stc
add
repnz
clc
jno
push
jnp
jmp
jg
fsubrl
addl
fwait
jae
mov
les
dec
loopne
jnp
pop
xor
int
add
jb
push
pop
add
xor
sbb
xor
clc
push
xchg
cs
or
pop
rcpps
inc
sub
mov
xor
cmp
mov
dec
pop
movq
enter
sbb
sahf
xor
insb
xor
jnp
sub
shlb
call
ja
bndstx
adcl
movsb
xchg
stc
into
inc
rcrb
adc
mov
orl
inc
push
into
aaa
lret
pop
cwtl
adc
dec
int3
loope
sbb
xor
cmp
xor
sub
mov
jne
std
inc
inc
push
sbb
adcb
jnp
mov
lock
enter
dec
lcall
or
push
xchg
and
dec
inc
inc
fsubrs
test
or
in
xlat
lret
mov
jp
dec
xor
push
lock
ror
sbb
cmp
dec
adc
lret
xor
sub
add
dec
fistpll
sti
mov
push
mov
addl
add
in
mov
icebp
dec
mov
aaa
add
stos
loop,pn
dec
int3
or
cld
aaa
pop
scas
jae
push
add
pop
and
jle
sbb
sbb
add
movsb
mov
lcall
mov
out
jmp
pop
inc
xchg
cs
repz
pop
orb
movsl
outsb
and
subb
int
dec
adc
sub
adc
cmpl
stos
cmpb
cmp
movsb
roll
mov
push
fsub
pcmpgtw
repz
jns
sub
repz
mov
push
xor
adc
jae
dec
xor
pop
sub
and
mov
add
sub
adc
test
add
outsb
xor
push
movsb
mov
rcrl
xor
pop
mov
testl
outsb
insl
dec
loope
mov
test
push
ret
fstl
movsb
fwait
sbb
dec
pop
insb
sub
es
movsb
stos
xchg
push
ljmp
inc
shrl
lcall
xchg
add
xor
fisttpll
scas
cmp
pop
insl
addr16
int
and
lods
xchg
loopne
shr
lret
mov
clc
ret
or
inc
shl
adc
fwait
push
add
test
std
int
xchg
imul
and
aaa
mov
sti
add
pop
sti
outsl
or
rcll
dec
mov
adc
stos
mov
and
jg
jmp
xorb
mov
imul
dec
or
dec
inc
rcrl
pop
xchg
sub
jne
inc
loopne
aaa
aam
xchg
div
jns
cmp
hlt
shll
cmp
and
inc
sbbb
into
mov
gs
mov
outsl
jmp
mov
lcall
cmp
mov
lock
xchg
gs
jge
pushf
js
xor
pushf
pop
repz
cmpsb
sbb
out
push
dec
jae
xor
shlb
ljmp
adc
fstps
mov
or
pushf
in
jle
int
inc
push
mov
movsl
mov
cmp
xor
xlat
pop
nop
mov
scas
xor
mov
test
add
jne
lahf
ja
pop
mov
lods
add
add
push
movsb
scas
adc
mov
xor
mov
mov
adc
ja
lds
fdivrp
jle
pop
fcomps
push
and
xorl
dec
jmp
repz
stos
popa
iret
jae
cli
and
jne
inc
mov
movsl
testb
pop
fwait
roll
mov
lock
lods
push
das
jmp
add
data16
mov
sti
cmp
push
push
aas
cmp
jl
mov
repz
jle
sahf
push
out
push
imul
iret
inc
faddl
jns
fisttpl
in
int
sahf
adc
mov
push
mov
call
or
popf
xchg
pop
fldenv
xchg
insb
push
push
mov
mov
push
adc
jge
popa
rcll
inc
sarl
or
cmp
js
out
testb
aam
test
xor
mov
lret
fidivs
iret
jle
imul
push
rcll
sbb
data16
pop
mov
fistps
fldt
sbbb
cmp
add
xchg
insb
push
or
mov
mov
inc
fistps
pushf
sub
cwtl
mov
lss
adc
pop
ljmp
or
outsl
setp
mov
ret
sbb
pusha
gs
mov
outsb
idivl
add
and
jne
push
sbb
mov
daa
fistl
dec
inc
xchg
movsb
fwait
mov
xor
xchg
mov
inc
xchg
jmp
inc
lds
into
pop
cld
ret
fs
std
jle
dec
lods
jmp
xchg
cmp
or
cmpsl
clc
sbb
test
push
pop
adc
int3
cltd
mov
aad
mov
mov
dec
mov
push
cli
jae
movsb
push
sub
cmp
rol
dec
or
sub
icebp
lahf
insb
outsb
push
xor
jg
fsubrs
inc
sbb
pop
fs
mov
icebp
out
push
sbb
int3
and
mov
popa
jle
pop
jge
bnd
daa
mov
cmp
adc
push
enter
shll
lret
ds
fdivrs
and
add
push
mov
push
sbb
faddl
mov
inc
ja
sti
inc
sub
lret
cmp
add
pop
std
ret
loop
xor
call
pop
pop
imul
jg
xchg
rol
gs
jge
test
data16
xchg
out
loope
inc
inc
ficoms
adc
push
gs
adc
xorb
pusha
xorl
inc
jns
jno
mov
push
cmp
mov
daa
into
stos
pusha
incl
call
add
into
push
sub
movsl
repz
cwtl
enter
ret
fcomps
sbb
mov
jbe
gs
filds
cwtl
mov
adcb
out
sbb
pop
adc
enter
out
push
xlat
mov
cmp
pop
mov
lret
jecxz
into
push
dec
xlat
roll
std
jle
add
and
pop
shlb
inc
cmc
popf
outsl
lock
mov
mov
fbstp
mov
dec
mov
jae
dec
aad
cli
scas
stos
push
sub
dec
adc
mov
ss
fistpl
dec
loope
cbtw
fcoms
mov
xchg
inc
adcb
pop
pushf
sar
mov
mov
mov
in
out
loope
or
lock
lods
jae
les
or
fidivl
cmp
ret
test
mov
lret
dec
cmp
mov
adc
mov
ss
je
cmpsb
pushf
cmpsl
or
jg
lret
jns
sbb
andl
jae
jb
out
mov
lock
dec
test
push
sahf
arpl
std
cmp
bound
out
in
mov
cmp
mov
les
jg
sar
stos
shlb
jmp
sbb
sar
xchg
push
insl
dec
mov
jg
push
or
pop
inc
dec
lds
inc
jnp
mov
dec
and
pop
pop
mov
xchg
leave
push
shll
pop
xchg
inc
sub
or
aam
xor
push
xchg
icebp
and
shrb
pop
imul
or
test
sarb
stos
jl
mov
pop
ja
pop
sahf
lods
jmp
push
mov
jg
and
dec
push
imul
push
jns
mov
ss
and
push
cmpsl
int3
xchg
add
das
popf
fmul
ss
rcl
lahf
xor
push
xchg
into
pop
aaa
mov
lret
pop
pop
nop
fldcw
mov
mov
leave
fwait
or
inc
inc
cs
bound
push
mov
sbb
push
fldcw
daa
jns
cli
rcll
inc
push
and
push
stos
jle
das
lea
movsb
add
sbb
push
xor
rorl
jl
nop
das
fisttps
push
repz
ret
add
fsubrs
xchg
addr16
fcmovb
in
loop
cmp
mov
push
and
push
test
or
pop
repnz
mov
xor
cmpsl
sbb
cmpsl
add
dec
pop
rolb
jo
lods
cld
std
imul
scas
jne
mov
dec
mov
outsl
sbb
test
or
jecxz
call
adc
mov
sti
mov
or
pop
pop
mov
stc
push
ljmp
leave
ss
shll
loop
mov
out
dec
nop
sub
xlat
aad
dec
ficomps
push
dec
in
outsb
aam
sub
in
imul
mov
stc
insb
mov
and
lods
add
into
scas
sbb
divb
pop
mov
dec
mov
inc
mov
cmpl
out
out
out
push
shlb
cmpsb
fidivrs
push
mov
mov
fs
lea
xlat
xchg
out
cwtl
gs
lock
fildl
add
cmp
mov
jge
jl
push
fmul
loop
es
roll
aas
call
dec
sbb
sti
gs
xor
shl
or
ret
inc
xchg
insl
cltd
xchg
popf
xorl
cltd
mov
and
sbb
ds
lock
popa
iret
lret
leave
inc
xchg
xor
cmp
mov
sbbb
in
loop
xchg
push
xchg
lret
mov
jp
mov
lods
xor
dec
lret
sbb
xchg
addb
jae
cmc
cmpsl
cmp
out
cmp
les
pushf
fstpt
dec
js
and
mov
lea
pop
xchg
mov
pop
and
pop
movsb
in
fiaddl
dec
dec
int
adc
stc
push
xor
lret
add
lods
popa
sbb
insl
cmp
mov
mov
pop
xchg
mov
ds
fisttpll
scas
mov
in
push
inc
in
jbe
enter
fcoms
sbb
xchg
sbb
popl
xchg
push
adc
je
xor
fadd
and
loope
incl
pop
adcb
clc
pop
xchg
cli
into
mov
mov
sub
out
and
mov
lcall
out
adc
stc
pop
xchg
rolb
adc
rol
mov
fwait
stos
dec
stc
push
sti
push
push
inc
xchg
in
int
out
lret
jg
mov
repnz
mov
shr
mov
test
xchg
loope
int
test
leave
leave
cmpl
add
mov
xchg
sbb
dec
lret
cld
loope
adc
or
outsl
mov
out
jle
cmp
nop
add
rorl
or
mov
flds
jb
mov
sub
lcall
mov
popf
xchg
add
jno
jmp
je
jns
loopne
mov
std
das
icebp
fs
add
adc
sahf
xchg
jo
xchg
cmp
cmp
or
imul
cmp
rcrl
repz
addr16
pop
movsb
fwait
mov
rcrl
lea
push
jae
cmp
jno
fcomps
aas
inc
mov
aam
fstpl
jecxz
out
mov
push
mov
pop
pop
std
ret
in
xchg
mov
aas
cmp
push
mov
sbb
or
lcall
and
icebp
testb
mov
inc
inc
sub
aaa
sbbl
enter
mov
lock
sub
mov
nop
push
imul
rcrb
adc
jne
imul
mov
jp
or
rorl
inc
or
add
mov
addr16
test
or
inc
pop
xchg
mov
inc
or
jnp
lahf
mov
pop
lock
and
mov
test
jmp
and
aaa
lret
hlt
inc
push
fcmovbe
and
lods
js
mov
test
xor
mov
arpl
adc
cltd
flds
lods
push
inc
mov
push
fimull
cltd
dec
xchg
dec
sbb
out
or
flds
iret
out
ficomps
jl
xchg
lret
scas
or
pushf
push
push
call
adc
sbb
adc
mov
icebp
push
dec
scas
fs
mov
scas
rclb
popf
mov
fnstenv
xchg
mov
ja
pop
push
pop
sub
dec
imul
or
movsl
xor
pop
fildl
jnp
mov
sub
ret
out
shl
pushf
jg
iret
mov
outsl
inc
jle
inc
fbstp
rorb
data16
ja
inc
iret
xchg
push
add
in
xchg
je
aaa
mov
mov
arpl
push
sbb
jp
mov
push
jnp
dec
adc
cmp
aam
jecxz
xor
addl
subb
pusha
dec
shl
aam
pop
shl
popf
sub
fstl
or
sub
arpl
dec
add
and
jmp
test
mov
mov
outsb
enter
shl
pop
jb
sbb
shl
testb
ret
daa
mov
pop
jecxz
or
xchg
sbb
in
lcall
stos
inc
and
sub
dec
add
xor
shrl
mov
or
pop
mov
mov
jbe
mov
sub
das
push
in
mov
sbb
pop
inc
xlat
fsubrs
inc
out
imul
dec
adc
and
hlt
pusha
jmp
incb
xor
sbb
movsl
iret
xor
pusha
inc
inc
popf
mov
insl
cli
insl
mov
or
test
pop
push
insl
add
stc
push
cld
mov
and
aam
out
jmp
clc
int
insb
iret
scas
pop
jno
adc
jne
call
xchg
sbb
sbb
pop
mov
cmpsb
loope
mov
test
or
sub
in
aam
xor
push
mov
sub
mov
sub
adc
pop
inc
push
mov
sub
mov
push
pop
and
inc
sub
xor
sub
dec
fwait
sub
and
xchg
mov
lahf
cltd
pop
sarl
mov
pop
fcompl
sub
stos
daa
push
lret
nop
repnz
out
in
sub
inc
mov
push
movsl
loop
insl
fmulp
sbb
ret
shrl
subb
pop
inc
scas
xchg
inc
pop
loope
jnp
adc
dec
out
push
test
xchg
mov
xchg
fcoml
aas
in
cwtl
push
subl
stos
mov
mov
xor
push
adc
adc
or
or
xchg
shll
sbb
test
cmp
mov
popf
in
xchg
dec
push
adc
or
add
xchg
inc
inc
push
movsb
rorb
xor
cmpsl
dec
or
xchg
jp
add
pop
movsl
mov
fdivrs
shlb
movsb
xchg
in
scas
sbb
in
loope
cmp
inc
popa
outsb
inc
lahf
dec
push
jmp
repnz
pop
mov
mov
loop
sbb
lods
dec
stos
xchg
jg
add
fdivrp
sbb
cmpsb
jns
sar
jbe
and
cld
test
push
test
adc
icebp
adc
pop
in
sbb
int
add
lcall
mov
insb
ror
mov
lahf
jg
mov
lods
pop
dec
pop
jp
mov
mov
cmp
js
mov
test
stos
cmp
or
inc
in
push
cmp
scas
lock
add
clc
int3
pusha
adc
jb
pop
gs
cs
cmp
into
fcompl
pop
loopne
add
ficomps
movsb
pushf
xchg
fcmovnbe
fdecstp
bnd
negb
hlt
pop
fmull
cmpsb
dec
jl
lods
push
int
inc
daa
stos
xor
mov
cmp
cmp
and
xchg
mov
stos
fisubl
add
sub
xor
push
jecxz
out
xor
stos
lea
add
sbb
and
fistps
inc
xor
jle
lea
xchg
mov
aad
jge
mov
repnz
adcl
jbe
sub
cmp
xor
cmp
popf
fimuls
movsb
das
xor
addr16
mov
jmp
mov
or
mov
pop
pop
jae
in
adc
fs
push
repz
sub
shl
mov
js
imul
mov
add
push
xor
mov
aam
adc
std
icebp
aas
lods
xchg
outsl
mov
fildll
ret
les
ja
or
dec
mov
cltd
std
mov
mov
pushf
jp
mov
bound
jb
jl
dec
mov
mov
jmp
xor
hlt
repz
dec
les
dec
jle
gs
roll
pop
xor
leave
call
and
xor
fmull
pop
mov
pop
add
je
xchg
cmp
shrl
xchg
inc
jge
push
lock
mov
sbb
inc
jne
shlb
lock
mov
les
pop
loop
dec
ds
lcall
mov
mov
out
scas
dec
clc
adc
je
mov
out
movsb
jbe
imul
xchg
fcoml
dec
add
add
push
nop
adc
hlt
jbe
cwtl
mov
cmpb
popf
mov
sbb
xchg
scas
jge
push
scas
aas
lret
add
pop
iret
push
pop
in
xor
or
fwait
mov
cmp
pop
nop
mov
jle
addr16
push
ds
sub
shrl
test
pop
das
and
dec
and
pusha
xchg
fdivrl
insb
push
out
pop
lahf
adcb
mov
and
push
push
fistpl
add
xchg
adc
mov
cmp
in
data16
sbb
andl
ret
insl
jge
and
jmp
mov
mov
xchg
adc
dec
popf
xor
jecxz
or
pop
mov
jmp
and
lret
aas
inc
inc
imul
add
jbe
mov
dec
test
adc
inc
and
js
fsubrs
loopne
and
xchg
imul
sub
add
sbb
int
je
push
cld
inc
dec
mov
jb
inc
pop
cmp
in
xchg
cmp
imul
psraw
jge
imul
popa
cld
imul
pop
insl
or
xlat
dec
push
sti
pop
push
xchg
orl
inc
aam
nop
push
les
loop
or
dec
pop
inc
rorb
sub
and
scas
ret
or
mov
xchg
gs
cmp
inc
push
cmp
test
push
mov
lods
sahf
and
or
push
out
loop
push
loopne
and
repnz
aad
and
add
lea
or
out
bound
jae
lds
mov
adc
fwait
pop
ss
lock
addr16
ror
xchg
jmp
jo
push
out
popa
in
in
mov
cmc
lods
rcl
sbb
fldcw
add
push
or
mov
mov
pop
aam
and
imul
mov
loop
aas
push
xor
data16
mov
inc
aam
in
aam
jns
sahf
call
inc
dec
mov
shll
in
aaa
lods
rcrl
addr16
push
je
divl
out
lods
xchg
inc
mov
lret
pop
add
mov
lahf
sbb
dec
adc
push
repnz
mov
lcall
xchg
test
popa
dec
ret
popf
loop
es
js
push
neg
pop
leave
fstpt
movsb
push
push
imul
dec
lret
xchg
pop
jmp
cmp
pop
mov
pop
setno
mov
jo
mov
pop
shl
xchg
fdivs
dec
loope
mov
fisttpll
sbb
cwtl
sahf
insl
fldt
inc
cltd
lea
iret
inc
inc
or
cmp
inc
lods
aam
les
sbb
inc
dec
cmp
scas
int3
cmp
push
and
imul
pop
inc
add
sbb
addb
jl
pop
repz
shrl
jmp
mov
rorb
nop
mov
rol
popf
mov
dec
xchg
jecxz
xor
push
lcall
iret
insb
push
jo
scas
add
int3
rolb
pop
test
adc
mov
inc
and
setae
and
cmpsl
roll
test
notb
dec
leave
add
dec
xchg
add
cmc
pop
xchg
aas
rcll
movsb
xor
push
testl
inc
and
push
push
mov
or
cwtl
add
sbb
rolb
mov
jp
cmp
and
inc
lods
das
cmpsb
sbb
dec
sbb
mov
stc
out
jle
js
sub
and
gs
adc
push
in
and
push
js
lahf
fwait
push
xor
mov
test
dec
inc
fs
sbb
arpl
ds
or
or
lods
inc
in
jb
xor
pop
addr16
loop
insb
jmp
push
push
in
fnstcw
xchg
popa
cmpsb
maskmovq
pop
sub
mov
shrb
mov
pop
jle
call
jmp
sub
push
lods
mov
das
push
lcall
loopne
pop
lcall
insl
pop
push
pushf
arpl
push
lcall
loopne
scas
pop
repnz
jno
adc
je
push
xchg
pop
std
mov
pop
cmp
pop
rcrl
fucompp
inc
enter
fstl
adc
and
fiadds
adc
jns
into
mov
dec
xchg
fwait
adc
sti
ja
lret
int3
loope
mov
push
movsb
dec
lods
mov
aaa
sub
imul
xorl
mov
jecxz
mov
sbb
loop
cmp
push
sbb
jp
mov
out
scas
push
sbb
xor
cwtl
mov
test
dec
out
dec
sahf
into
call
repnz
or
fbld
push
movsl
mov
ret
ret
inc
jmp
mov
std
jns
xchg
gs
or
stc
jae
data16
lcall
push
fldenv
je
aad
jg
xchg
test
push
std
mov
mov
pushf
loope
jmp
inc
jmp
add
mov
jnp
test
adc
test
inc
push
js
xor
lods
jbe
xchg
addl
sub
cwtl
popf
add
lock
mov
push
pushf
xchg
outsl
sbb
lahf
outsl
xlat
roll
xchg
int3
scas
inc
popf
push
jnp
fwait
jge
jns
popa
in
into
rolb
mov
movsb
push
push
pushf
movsl
adc
aam
call
pop
pusha
scas
mov
dec
cmpsb
jnp
repnz
xorb
mov
bound
push
push
mov
inc
icebp
fcoml
add
hlt
push
cmpsl
ficomps
pop
mov
or
mov
or
inc
ljmp
sbb
mov
push
adc
in
cmpsb
jnp
sub
outsb
dec
add
and
dec
inc
fucomip
lds
cmp
add
jno
out
cli
xor
outsl
movsb
bound
xor
arpl
xchg
sub
movsl
cs
xor
xchg
xchg
push
mov
jno
repz
jnp
xchg
sbb
and
fidivl
push
stos
pushf
xchg
xchg
mov
lods
fdivl
and
outsb
pushf
fsubs
jns
sbb
in
jae
xchg
mov
mov
fs
outsb
add
add
push
add
mov
mov
loopne
popa
lea
mov
es
mov
ret
xchg
rorl
fwait
gs
mov
repz
leave
add
outsb
jno
xchg
mov
aas
sbb
pusha
jle
pop
jecxz
xchg
nop
or
mov
dec
rclb
adc
lcall
jle
xchg
enter
and
inc
sbb
push
adc
sbb
pusha
ret
clc
sub
pop
std
mov
lahf
out
shld
std
arpl
sub
mov
les
mov
push
inc
loopne
sub
jl
mov
in
push
pusha
je
dec
pop
mov
loop
xor
sbb
adc
mov
mov
cmpsl
sahf
inc
xchg
or
addr16
rcrl
sarb
insb
sbb
das
repz
shlb
ljmp
fs
fbld
pusha
jnp
fs
fwait
adc
and
test
inc
push
pop
dec
push
fimull
xchg
rcrl
mov
jo
repnz
xor
inc
stos
mov
push
rorl
mov
pop
arpl
push
jo
loop
leave
inc
push
mov
dec
je
inc
jno
dec
mov
stc
dec
push
push
lahf
rcrl
pusha
mov
cmp
sbb
add
sbb
fwait
in
in
cmc
jne
aaa
pop
mov
add
ror
inc
clc
aad
fldt
sub
lods
push
fstl
shr
sub
aam
arpl
loope
mov
gs
lcall
dec
lahf
inc
insl
pop
test
mov
add
cmpsb
std
in
clc
xchg
add
ljmp
push
pop
push
add
gs
outsl
sbb
jle
shl
orl
pop
gs
xchg
jae
enter
pop
fnsave
mov
xchg
xor
into
cmpsl
aad
popa
lahf
inc
lcall
dec
adcl
jle
pop
pop
clc
in
cmpsl
out
sub
imul
jnp
jle
mov
xorb
jg
mov
mov
pop
or
test
sub
out
cmp
pushf
ljmp
add
inc
adc
into
mov
out
inc
nop
sbb
or
rclb
gs
arpl
dec
js
sub
mov
pushw
xor
sub
push
sbb
jmp
enter
lret
pop
hlt
mov
mov
daa
roll
rcrb
mov
shll
sbb
ret
int3
in
negb
jecxz
mov
imul
dec
inc
sarb
frstor
icebp
cmpl
in
lock
and
sub
pusha
mov
jae
push
xor
pop
sub
add
in
mov
lcall
xchg
mov
xchg
repz
lret
shll
jns
sbb
icebp
sub
mov
mov
xor
push
mov
adc
cmpsl
jne
mov
ss
idivl
jbe
xchg
sahf
xor
addr16
cwtl
add
sub
adc
push
imul
dec
inc
aad
fsubl
mov
pushl
jae
in
xor
sub
xor
and
mov
into
push
int3
cmpsb
popa
rcr
fs
push
mov
add
jae
mov
mov
xor
dec
ficoms
test
ljmpw
dec
mov
test
stos
push
add
add
in
and
adc
inc
mov
lret
push
sbb
sub
push
and
inc
mov
cltd
sub
jnp
jecxz
shrl
cld
mov
lock
les
ja
xchg
push
getsec
scas
push
xchg
adc
mov
cmpsb
xor
js
test
cld
or
outsb
inc
push
jmp
jle
sar
mov
jbe
xor
adc
filds
test
fists
cmp
icebp
test
outsb
loope
add
gs
jno
jo
sub
xchg
lret
cli
add
pop
pop
jb
pop
inc
pop
hlt
aam
ljmp
mov
nop
xorb
jo
jmp
xchg
ret
jge
jl
lret
insl
push
jl
sbbl
popf
orb
call
pusha
outsb
push
lods
dec
movsb
xchg
cmp
or
rorl
lods
sub
ss
lods
xchg
mov
sahf
xchg
adcb
xor
or
aaa
fldt
adc
testl
mov
xor
shll
faddl
jmp
dec
push
neg
cltd
fldt
movlps
adc
push
clc
ret
mov
cli
in
int
rcll
stos
jp
pusha
lea
inc
adc
gs
arpl
adc
lods
js
mov
xor
popa
and
push
mov
mov
push
sub
lret
or
jle
mov
push
push
loop
and
psllq
pop
test
sti
dec
push
add
gs
jg
mov
lea
ret
mov
xlat
jecxz
adc
push
and
ds
es
jne
repz
fimull
std
fwait
xchg
xchg
je
ret
aaa
mov
cwtl
lret
rdtsc
ja
roll
fildl
pop
mov
pushf
or
mov
mov
inc
aam
dec
aas
or
leave
mov
xor
aad
push
dec
mov
insl
and
int3
xchg
add
sbb
rorb
lret
insl
in
insb
push
pop
xchg
arpl
fcoml
sbb
out
jns
sbb
loopne
mov
cld
sbb
lods
lcall
mov
cld
loopne
add
sbb
std
pusha
in
aaa
jno
aaa
iret
jl
inc
jp
mov
sub
stos
or
in
add
pop
into
pop
xchg
lahf
pop
mov
xchg
imulb
mov
flds
jecxz
ficompl
clc
add
jns
notb
insl
push
add
cmp
inc
pop
dec
hlt
mov
stos
aas
mov
int
xor
scas
daa
lret
push
in
cltd
jle
cmpsb
orl
int3
cmpsl
fldt
divl
fisubl
push
sbb
imulb
sub
inc
pop
xchg
xchg
fwait
xchg
in
jp
imul
rcrl
insl
insl
cwtl
add
ud2
int3
cmc
mov
mov
mov
push
mov
sub
fldl
in
fdivrl
in
cld
out
aad
es
andb
in
push
add
push
xchg
sub
dec
xchg
xchg
and
test
std
sbb
xor
xor
je
stos
xchg
ret
dec
mov
inc
xor
je
mov
fiaddl
test
mov
add
cmp
mov
fisubs
mov
pop
lcall
xchg
sub
cmp
jne
lea
lods
addr16
dec
mov
sub
sbb
mov
sbb
sti
adc
fidivrs
andl
jne
sub
add
add
je
inc
es
repz
jne
movsb
push
xor
into
addb
cmp
shrl
mov
mov
lods
ficompl
or
add
and
sbb
ret
sub
leave
pop
lods
mov
push
pop
lahf
sub
mov
adc
adc
jne
test
mov
add
fistpll
dec
addr16
inc
and
popa
sbbl
cmpb
add
cmpsl
push
dec
dec
sbb
mov
adc
jbe
loope
ja
js
ds
mov
mov
xor
dec
filds
push
push
ret
cwtl
out
lds
adc
stc
xor
inc
divl
push
cmp
inc
sbb
pop
pop
mov
mov
iret
jae
call
add
dec
mov
inc
fcoml
pop
dec
mov
lods
jmp
sti
pop
xor
rclb
sarl
stos
loop
mov
fadds
push
and
jnp
jmp
sbb
pop
pop
fs
fnsave
outsl
mov
js
stos
push
shr
xor
sub
and
cmpb
sub
and
loopne
arpl
mov
push
adc
outsb
cmp
mov
adc
xchg
loopne
add
aas
push
add
ds
out
mov
rcr
stos
push
xchg
dec
push
add
cwtl
out
or
dec
sbb
cmp
aas
fidivs
mov
movsb
outsb
ljmp
fsubs
sub
or
adc
in
sbb
cwtl
aad
xchg
inc
pop
test
add
test
adc
and
add
shll
lock
push
mov
mov
push
aad
popf
xor
fisttpll
arpl
jl
je
xor
scas
add
jns
dec
add
lock
inc
insl
dec
movb
je
ret
leave
shl
fnsave
leave
stos
js
or
dec
pop
inc
adc
movsl
adc
sbb
aaa
leave
lods
in
pop
int
dec
shr
mov
addr16
lds
xchg
dec
jl
lcall
xchg
inc
fnsave
add
mov
pushf
jmp
mov
jbe
jmp
cmp
shlb
add
aas
add
aaa
mov
test
jb
adc
das
iret
pushf
cmp
popf
call
sub
sbb
je
addr16
pushw
push
in
nop
xor
fsubr
or
repz
dec
in
adc
jo
adc
es
into
shlb
and
ret
ficoml
int3
rorb
xor
mov
inc
mov
cmp
in
das
xchg
mov
in
xchg
stos
in
iret
jnp
mov
daa
jl
sub
mov
mov
xchg
ljmp
adc
int
or
mov
adc
sbb
fcomps
rorl
dec
sbb
xchg
lods
std
ss
mov
out
ret
pop
cltd
pop
pop
push
aaa
lods
xor
sti
sub
mov
addl
cli
daa
cmp
cmpsb
popa
mov
or
and
inc
pop
cld
adc
adc
mov
xchg
and
push
and
mov
stos
jne
mov
addb
add
sbb
out
mov
leave
add
inc
sbb
cli
mov
xchg
test
iret
push
xor
add
fsubl
mov
out
daa
js
leave
sbb
pop
jecxz
push
mov
test
into
sahf
mov
sub
xor
adc
movb
cld
or
mov
scas
adc
mov
out
dec
xor
inc
mov
in
inc
scas
cmpsl
les
fstps
lods
cltd
jns
in
mov
daa
shrb
jmp
mov
fwait
aaa
cs
addb
lea
adc
pop
inc
fsts
cmc
int3
xchg
loop
xchg
sbb
dec
insb
jbe
mov
fwait
nop
pushf
sbb
jp
mov
push
pusha
mov
mov
mov
pop
xor
or
fildl
push
adc
sub
push
or
aad
in
fistps
fldcw
inc
out
addr16
mov
push
leave
leave
aas
jae
or
fildl
xor
fcompl
sbb
xchg
cmpb
popf
mov
push
xor
jns
insb
aaa
push
mov
cmp
push
sub
arpl
popa
fs
push
jne
and
fwait
xchg
lret
lret
hlt
imul
mov
mov
pop
enter
jns
in
leave
test
push
adc
jmp
pop
fdivrl
cmp
add
lock
jns
cmp
dec
push
enter
mov
mov
dec
fstl
mov
cmpsl
mov
fistl
mov
fsubrl
in
xchg
jle
or
outsl
mov
adc
into
jle
xor
aaa
repz
lahf
lods
jl
xchg
std
add
mov
mov
xor
mov
arpl
add
sub
add
pop
lret
pop
std
adc
sbb
sti
lods
dec
pop
aad
push
sti
jg
add
push
xchg
and
cs
sbb
push
pop
in
adcb
lcall
mov
daa
mov
add
test
or
push
and
fisubl
jmp
xor
sub
insb
das
jmp
addl
or
pop
out
sbb
cmpsl
mov
incb
shl
clc
cli
aaa
push
mov
pop
pop
inc
mov
fcmovnb
repz
xor
int
mov
in
dec
push
popf
xor
mov
stos
lods
push
aad
lea
imul
outsb
movsb
add
pop
or
fbstp
sbb
or
or
push
imul
add
and
jae
xchg
push
add
ja
int3
push
or
mov
jle
jg,pn
mov
add
outsb
sbb
ja
lret
ja
pop
cmpsb
sbb
fidivl
sahf
mov
or
hlt
or
jnp
lcall
lock
mov
bswap
daa
or
xchg
lods
push
out
add
cmpsl
sbb
test
jnp
testb
loope
jno
inc
das
lock
rorb
xor
loop
or
mov
aad
and
add
lcall
inc
flds
test
add
movl
int
mov
xor
aam
jle
divl
fwait
lret
mov
ljmp
add
hlt
ret
push
int3
lret
aaa
dec
fdivs
ja
pop
jno
or
cli
fdivrl
jno
test
dec
pop
iret
in
lahf
add
ret
popf
mov
pop
mov
xor
xor
add
mov
insb
fldcw
adc
jne
les
push
jbe
loope
bound
ljmp
sbb
ljmp
xor
or
outsl
outsb
jnp
push
mov
pop
outsb
add
mov
xor
and
loope
push
push
mov
js
test
sbb
sbb
int3
mov
hlt
test
orl
jns
frstor
mov
sub
add
inc
ljmp
mov
mov
int
add
dec
push
adc
sbb
in
or
arpl
aam
icebp
inc
lahf
push
movsb
fwait
xchg
adc
jl
imul
lds
dec
push
repz
mov
imul
lds
cli
in
add
ret
pop
lcall
jg
out
pop
dec
mov
mov
lock
cwtl
add
xchg
adc
xchg
cmp
cmp
sub
fsubl
in
push
enter
push
movsb
lahf
lods
sbb
repnz
notb
jmp
orl
clc
sti
in
or
mov
mov
aam
arpl
dec
xor
cli
xchg
insb
mov
ds
ret
mov
js
mov
adc
test
pushf
xor
fsubr
std
push
pop
and
pop
mov
dec
cmp
adc
jecxz
lcall
pop
cmp
rorb
js
add
pop
fdivr
adc
mov
adc
loop
cmp
mov
lock
scas
inc
es
sbb
jne
push
out
repz
dec
mov
jae
insl
loop
sbb
mov
and
je
xor
xchg
repnz
jge
je
mov
movsb
int
mov
inc
mov
jge
insb
mov
mov
test
mov
imul
in
mov
xor
out
xor
xchg
adc
es
sti
sbb
dec
mov
popa
sbb
mov
sbb
pop
mov
aam
adc
shll
pop
nop
cld
incl
das
inc
xorb
loop
pop
fcomip
push
aam
cmp
jb
roll
or
call
cmp
hlt
rclb
cmpsb
std
mov
or
inc
mov
add
sub
popf
in
sbb
insb
or
add
imul
fs
cmpsb
jmp
dec
lea
pop
fucomip
cmp
xchg
push
addb
push
nop
pusha
and
inc
mov
push
mov
aam
repz
fnstcw
mov
addr16
lods
cs
fdiv
jmp
dec
adc
inc
mov
dec
fiadds
adc
add
loopne
icebp
nop
pop
insb
cmp
xor
scas
cmp
fists
pop
mov
sbb
test
insb
lahf
pop
push
xchg
inc
mov
test
pop
fcoms
lea
pop
fs
scas
and
push
data16
pop
sub
test
mov
pop
inc
iret
aas
div
dec
ljmp
xlat
xchg
push
cmp
lock
push
pop
mov
sbb
popf
push
aad
jp
lods
xchg
jno
ljmp
sub
pop
cwtl
repnz
dec
cld
dec
sarb
xor
daa
cs
push
pop
or
adcb
mov
add
mov
subb
xor
jp
sub
dec
jmp
sar
push
setnp
and
call
int3
test
fldl
int3
popf
mov
mov
xchg
scas
in
sarl
subb
out
scas
jnp
push
loope
fsubl
jnp
mov
cli
mov
pop
mov
rolb
loopne
pop
jne
orl
add
lret
mov
mov
push
cs
nop
push
clc
imul
dec
loope
or
mov
push
jne
pushf
icebp
jae
imul
jb
dec
cs
rcrl
cld
cmp
nop
add
xchg
jns
loop
test
dec
scas
mov
addb
sub
imul
out
push
rolb
jbe
lds
in
sti
cmp
loope
das
mov
dec
fmull
sub
push
lcall
out
aaa
fistpll
enter
dec
jge
out
int
popf
jle
daa
pop
adc
mov
pop
movsb
js
adcl
jne
dec
inc
xchg
mov
pop
xor
jnp
lods
jge
pop
xchg
cli
push
shrb
cwtl
or
inc
out
in
int
lds
lds
fwait
repnz
jl
je
ret
shlb
xor
lea
pop
aam
sbb
lahf
cs
imul
pushf
loop
scas
pop
mov
pop
cmp
mov
sub
jg
jne
pop
ficompl
inc
and
pop
nop
movsl
mov
xor
adc
loopne
dec
inc
sbb
and
lods
and
mov
xor
sub
pop
into
push
pop
xorps
mov
dec
mov
add
shl
cs
out
push
push
addr16
sub
xchg
js
popa
mov
inc
je
gs
push
iret
gs
gs
pop
inc
xchg
mov
xor
adc
cmp
dec
cld
loop
jno
mov
into
xlat
inc
mov
pop
push
push
xchg
divl
js
dec
cmp
cmpsl
sarl
pop
sbb
subb
ret
and
inc
pop
cmp
adc
sub
mov
loope
pop
xor
scas
mov
dec
push
cmc
pop
or
fnstsw
in
stos
mov
add
insb
mov
movsl
insl
mov
xor
dec
int
orb
ds
and
lret
adc
push
mov
faddl
jnp
pop
cmpsl
stc
cld
aad
push
mov
add
aad
test
adc
shll
dec
insb
sub
inc
in
sub
shlb
add
jg
dec
mov
add
test
xchg
sub
and
xchg
mov
xor
mov
push
add
fdivrl
outsb
add
adc
lret
sub
xor
ljmp
mov
fimuls
fs
sbb
sub
or
nop
into
fwait
ret
nop
test
fsub
test
fwait
clc
fcompl
cmp
sti
pusha
adc
xor
inc
mov
jne
test
movd
push
andb
aad
cmp
mov
dec
inc
jg
add
ds
imul
xchg
and
push
xchg
xchg
mov
mov
push
add
ljmp
cmpsl
xchg
testl
pop
mov
pop
test
xor
test
testb
push
xlat
test
lods
ficompl
into
call
stos
sbb
adc
mov
aad
js
insl
xchg
mov
sub
ja
subb
xchg
roll
ja
jge
sbbl
sbb
xchg
jnp
xor
pop
sub
mov
jmp
pop
sub
dec
sub
add
jl
shrb
cmp
jae
adc
jle
dec
test
test
fdivrs
xor
loope
cmp
or
in
add
cld
icebp
mov
decl
cmpsb
inc
mov
pop
add
out
xchg
ja
sub
pop
pop
movsl
clc
jmp
inc
xchg
dec
cld
cwtl
jae
inc
xchg
jo
xchg
nop
sbb
add
shl
sahf
js
les
fisttps
and
fistpll
push
add
mov
ds
fmull
pop
xchg
mov
lock
inc
mov
add
cmp
or
mov
in
pushf
andl
xor
sbb
xor
leave
mov
movsb
and
sbb
leave
shlb
mov
pop
inc
mov
push
je
sub
out
jg
fwait
jl
int3
xorb
clc
adc
jge
cmpsb
jne
aaa
mov
and
jae
outsb
push
je
mov
dec
movsb
lds
mov
ja
dec
outsl
je
dec
sbb
out
cmp
std
jge
sbb
pop
inc
addr16
sarb
mov
nop
sbb
xchg
mov
fsubrl
push
or
mov
test
outsb
cltd
aas
xor
cmpsl
jmp
negb
push
sub
push
int
sbb
fldenv
test
repz
add
cmp
mov
sbb
dec
lock
sub
mov
les
mov
push
mov
jecxz
ljmp
lods
clc
pop
je
cmc
test
push
sbb
mov
hlt
xchg
mov
inc
add
inc
or
or
pop
pusha
test
dec
lods
aas
sbb
in
nop
push
in
pop
in
out
daa
popf
out
repnz
mov
cmpsb
pop
and
adc
pop
xchg
movsb
int
jbe
or
inc
xor
pop
fs
sbb
and
lods
scas
loop
fs
inc
into
mov
pop
mov
push
pop
and
into
orb
lods
inc
cs
notl
mov
lock
and
mov
pop
lahf
adc
enter
mov
scas
adcl
outsb
lods
add
jg
sbb
cwtl
nop
mov
js
dec
aad
or
andb
pop
pop
leave
test
clc
ljmp
and
gs
and
xlat
mov
icebp
ret
aaa
out
cmpsb
mov
dec
fisttps
dec
stos
loop
adc
outsl
push
into
jmp
push
insb
sub
push
pop
sub
sub
pop
mov
or
fsts
pop
ds
or
inc
ret
jp
xchg
call
pop
in
mov
pusha
jecxz
jbe
xchg
or
cs
loop
push
vcvtsd2si
mov
aaa
in
or
or
ror
gs
leave
stos
push
fs
call
dec
rcrb
es
icebp
hlt
jecxz
add
mov
std
in
fcmovnbe
fs
push
int3
into
sub
sti
rcr
cli
pop
ja
fnstsw
jmp
mov
jle
push
dec
xchg
sbb
and
cmp
out
popa
jbe
jne
sbb
jbe
inc
mov
adc
cmp
int3
fstl
int3
jae
aaa
jle
xorb
jbe
repnz
lods
push
jl
outsb
loop
jnp
jnp
jle
xchg
fs
mov
popf
repnz
sti
xorb
pusha
outsl
hlt
dec
loope
lea
xor
call
sbb
icebp
cmp
out
and
adc
lcall
fwait
shll
dec
mov
clc
pop
cmp
mov
dec
mov
adc
ja
xchg
lods
cmp
fnsave
inc
mov
adc
ret
jp
pop
lock
push
cmp
cld
andb
pushf
xchg
adc
mov
adc
cwtl
add
mov
xor
je
dec
pop
shll
icebp
mov
cwtl
adc
out
nop
repnz
lods
and
add
jno
and
dec
rorl
adc
sub
jge
mov
mov
cmp
fildl
jnp
cmp
fdiv
outsl
insl
add
sub
mov
inc
test
pop
fwait
stc
test
aam
mov
mov
shl
notl
cmp
pushf
ror
jne
sbb
mov
dec
mov
cld
or
pop
test
and
ja
or
out
test
sub
out
neg
mov
xorb
mov
rcrl
jge
ljmp
insb
data16
popf
lahf
cs
push
popa
sub
popa
jge
mov
hlt
icebp
or
pop
mov
sti
in
mov
sar
jb
into
or
pop
dec
ss
push
cli
loopne
jbe
jb
adc
in
push
movsb
dec
pushf
sahf
movsb
xor
arpl
lock
cmp
mov
cmp
or
xorl
push
lock
mov
add
sub
jmp
sub
js
mov
cmp
xor
dec
add
addl
jle
fcomps
outsl
les
and
xlat
and
ret
hlt
xchg
push
mov
mov
loope
leave
dec
sbb
mov
movsl
fisttpll
mov
mov
mov
in
stos
gs
lcall
call
cwtl
mov
aaa
shl
pop
inc
pop
test
push
mov
xbegin
mov
mov
add
lea
add
repz
lods
mov
addr16
xsavec
inc
xor
mov
mov
xchg
leave
inc
mov
fmull
dec
scas
into
and
jno
icebp
stc
out
xor
jl
cmp
cld
pop
sub
test
int3
adc
lods
add
into
lock
ret
mov
cmp
icebp
fwait
jo
cmp
xchg
sub
les
scas
sub
inc
loopne
sub
fstpl
sarb
mov
xor
movsl
mov
mov
movsl
push
pop
cmc
mov
dec
pop
push
fisubs
inc
mov
faddl
scas
sbb
cmp
xchg
jecxz
push
mov
adc
std
mov
mov
daa
mov
roll
jae
add
push
in
pushf
sub
clc
cmp
push
xchg
push
jo
inc
insl
push
repz
jp
call
movsl
mov
fsubs
jne
add
clc
test
iret
xor
lahf
push
lret
jl
add
sbbb
xor
pop
mov
inc
cmp
loop
or
xchg
into
dec
or
mov
ja
mov
aaa
or
int
test
dec
xor
leave
cmp
iret
pop
incl
adc
xchg
or
mov
aam
mov
mov
xchg
scas
inc
pop
xor
enter
aaa
in
rcll
sahf
or
push
dec
jno
jecxz
cmpsl
adc
je
push
mov
movsb
addr16
ret
inc
jne
int
adc
push
stos
pop
inc
jmp
ja
xor
add
push
je
lods
cmp
sbb
std
sbb
push
pop
lahf
push
jo
pop
push
push
lock
jo
pushf
sbbl
add
cli
mov
aam
push
data16
dec
fsubrl
push
in
mov
jmp
call
dec
or
mov
call
or
je
pop
jo
mov
cmpsl
nop
push
mov
movsl
hlt
xor
repnz
xlat
mov
cmp
cmpsl
and
inc
push
test
lods
outsb
and
fists
jbe
jne
into
jno
and
insb
xchg
call
dec
lahf
mov
mov
es
mov
pushf
and
xchg
aam
or
lods
mov
dec
xchg
movsl
push
jb
xor
mov
xor
jno
inc
adc
bound
pop
and
xchg
mov
push
rorl
jg
cmp
pop
aaa
clc
bound
aad
fidivrl
mov
xchg
sbbb
mov
pusha
cmpsl
pop
cli
sub
ret
mov
mov
rorb
cmp
pop
clc
jo
mov
sbb
outsb
cmp
xchg
inc
out
jo
cld
mov
stos
mov
mov
xor
les
fiaddl
shll
mov
xchg
inc
and
nop
adc
push
int
and
lods
sbb
andl
ss
ss
push
fistpll
sub
mov
push
push
sub
mov
fcom
mov
xchg
xchg
rcr
mov
scas
outsl
pop
pop
out
in
mov
in
in
sbb
enter
jecxz
fldcw
xorl
outsb
mov
pop
jl
inc
inc
popf
jmp
lock
or
xchg
cmp
xchg
pop
enter
sahf
xlat
repnz
loope
lods
jae
insl
inc
test
sbb
pop
addr16
cwtl
xchg
scas
dec
outsb
xlat
xor
sub
hlt
popa
das
xchg
mov
mov
andb
ds
cmp
sbb
xchg
hlt
sbb
and
fmull
dec
out
inc
jo
cwtl
enter
jg
sbb
or
jg
xor
inc
inc
pop
mov
jns
xlat
into
adc
lret
into
or
sahf
cmp
add
dec
fcoml
pop
jmp
loope
loope
push
dec
inc
add
imul
push
inc
sub
mov
pop
hlt
jle
pushf
outsb
add
popf
mov
je
pop
loope
push
adc
das
out
popa
dec
rorb
jno
mov
jp
iret
dec
mov
jmp
outsb
inc
repz
or
sbb
out
ret
lea
mov
mov
ja
test
stos
inc
jnp
mov
xor
mov
call
add
lcall
cmpsb
inc
adc
ljmp
xlat
adc
mov
iretw
mov
xor
jle
test
and
push
in
jle
ljmp
push
mov
daa
push
and
or
add
jge
sub
lods
sbb
outsl
sarl
pushf
loop
sbb
in
jb
sub
jecxz
and
pcmpeqb
pushf
xchg
mov
cld
cmpsb
imul
icebp
jg
pop
xchg
notb
mov
inc
jne
rolb
cmc
jns
push
push
sti
adc
std
and
sub
add
add
dec
cs
jecxz
rorb
cmc
or
popa
mov
xor
repz
not
les
sbb
mov
cmc
jb
subl
stos
les
cmp
aad
aam
fwait
jns
insb
add
mov
adc
sub
xor
push
mov
xor
adc
inc
xchg
xor
ds
add
lcall
imul
mov
pop
inc
sahf
or
rorb
es
lods
or
in
scas
xor
lahf
into
enter
dec
mov
jno
jb
fildl
roll
inc
mov
enter
sbb
ljmp
xor
fcmovb
test
xor
cmp
in
loope
jle
mov
mov
test
pop
or
pop
jbe
mov
into
shll
loop
int
and
fldenv
sarl
pushf
mov
add
jb
pop
adc
aaa
notl
out
xchg
test
insb
cmpsb
sbb
lret
or
lcall
int3
push
mov
rcr
cwtl
mov
jge
pop
or
jbe
mov
dec
cs
out
or
fs
mov
push
lock
mov
popf
inc
sbb
icebp
inc
mov
lahf
icebp
insb
stos
cmpl
or
aas
sbb
xchg
fbstp
pop
xchg
xchg
fimull
jp
xchg
inc
jp
jo
shlb
shr
pushf
push
and
mov
mov
sub
loopne
push
lea
int
push
loop
pop
xor
pushf
xchg
ret
jecxz
imul
rolb
cmp
cwtl
outsb
mov
sub
sub
addr16
pop
pop
movaps
pop
aas
leave
pop
je
xlat
push
push
sbbb
js
xlat
ret
cmova
test
cmp
xchg
pop
fcmovu
pop
jge
loop
mov
call
mov
aad
mov
xor
jp
repz
pop
push
pop
int3
aas
cld
out
iret
jb
repnz
cmp
and
fiaddl
xchg
ret
into
cmpl
jg
adc
std
rorl
push
mov
xor
hlt
sub
inc
mov
cltd
jp
push
je
lret
imul
mov
int
arpl
ljmp
pop
sbb
stc
fsubs
push
data16
pmulhw
sub
adc
sbb
dec
aam
les
stos
pop
clc
and
nop
add
sbb
add
fwait
sbb
cmc
add
cmp
addl
inc
movsl
shll
push
and
jl
pop
sbb
mov
lret
push
cmp
adc
inc
mov
imul
int3
and
xchg
cld
add
stc
aam
rcrb
jb
test
jns
inc
cmp
js
and
cltd
push
mov
adc
xor
les
popa
inc
fcoms
neg
pop
aam
push
push
cli
pop
mov
dec
cld
xchg
test
jmp
jae
dec
add
xchg
out
idiv
test
xor
mov
xlat
pop
pop
push
sahf
pop
insb
sub
or
xlat
insb
rcll
iret
rcr
mov
adc
mov
sub
in
sahf
in
outsl
js
and
lret
icebp
push
test
inc
push
push
pop
outsb
ss
mov
notl
mov
movsb
lods
xchg
mov
sbb
mov
fisttpll
push
outsl
out
jb
shll
jle
mov
ffreep
std
in
jmp
subl
push
jg
fcoml
lods
inc
js
fsubs
or
sub
jle
mov
sub
pop
popf
js
mov
sti
and
jo
fisttpll
add
shll
cmp
sub
jmp
jg
test
dec
and
sbb
push
and
shrb
jbe
ret
push
fwait
incl
pop
mov
cltd
sbb
mov
dec
sbb
push
addr16
lods
jns
sbb
mov
mov
lock
mov
inc
pop
mov
js
ljmp
cmp
ljmp
push
popf
jmp
mov
mov
jo
data16
out
bound
add
jecxz
push
xchg
mov
jle
js
and
sbb
movl
lds
xchg
inc
push
jns
pop
fnsave
hlt
mov
jae
and
adc
pop
cmp
lret
push
jnp
push
loop
popa
out
sbb
jmp
xorl
sbb
subl
ja
pop
sub
fprem1
imul
or
jb
pop
leave
inc
rclb
in
cmp
repnz
lea
adc
inc
push
add
ja
cmp
in
data16
push
xlat
fdivp
add
aam
or
jp
sbb
mov
inc
ja
and
adc
clc
fsubl
jle
shrl
bound
sub
jle
stos
pushf
scas
outsb
xor
mov
cmp
adc
add
leave
test
int
test
cmp
pop
cmpsl
mov
sub
mov
es
mov
shl
mov
pushl
pop
stos
mov
xchg
fmull
cmp
outsb
mov
inc
cmpsl
dec
daa
lods
pop
pop
pusha
mov
repz
adcb
fwait
push
fdivs
in
xor
inc
xorl
adc
push
aam
mov
pop
mov
jno
cltd
cmpsl
fsubrl
cli
jg
jno
xchg
lea
ss
lds
mov
push
xchg
shrl
cmp
ljmp
gs
mov
sti
pop
popa
mov
loop
adc
std
popa
cmp
or
cmp
xor
inc
dec
mov
sbb
in
je
in
jnp
mov
stos
mov
sub
mov
mov
mov
mov
or
bound
pop
popf
xchg
adc
insb
das
stos
mov
sbb
mov
inc
sbb
cmp
jge
shll
bound
les
and
stos
dec
mov
and
fwait
mov
xchg
push
flds
lea
xchg
mov
imul
fcmovne
inc
or
into
jnp
pushf
sub
cmp
movsl
mov
add
xrelease
test
repz
flds
lret
sbb
repz
std
not
ds
mov
pushf
lods
lret
into
jns
bound
dec
adc
scas
xchg
stos
pop
mov
mov
inc
movsb
cmp
fs
jae
mov
pop
push
mov
pop
mov
jae
or
sub
sbb
xchg
imul
flds
fcmovnb
add
push
scas
popl
jbe
out
ds
shrb
loopne
sub
sbbb
imul
mov
dec
jle
cmc
add
jg
push
push
insb
ud0
in
lea
dec
mov
cli
mov
aas
jge
sub
mov
fsubrl
lret
loop
hlt
jo
push
mov
test
loopne
pusha
adc
push
orb
mov
loopne
mov
lods
or
xor
pop
ret
jecxz
dec
fwait
ret
ficoml
mov
add
add
xor
push
push
jg
jmp
nop
movsl
movl
adc
inc
aam
inc
mov
imulb
mov
lds
push
jno
xchg
mov
inc
pop
fsubrl
imul
adc
ja
jl
cmc
test
xchg
xchg
add
bound
lods
call
lret
mov
es
inc
stc
xchg
roll
jp
into
gs
mov
mov
ja
insb
pop
pushf
push
jecxz
ret
call
test
sub
lret
outsl
inc
jecxz
dec
add
decb
iret
es
mov
inc
je
negb
jp
les
lock
js
mov
jno
test
aaa
ljmp
int3
movsl
pusha
mov
das
jp
pop
jp
lock
dec
shlb
pop
test
mov
mov
adcb
mov
insl
sbb
xor
jg
ljmp
std
dec
pop
lods
add
repnz
testl
sub
add
pop
fstpl
jo
movsb
insl
les
decl
adc
push
data16
or
push
jg
sbb
mov
cmp
mov
sub
sub
dec
xor
xchg
imul
jne
hlt
add
in
push
test
out
sub
addr16
outsl
sarb
test
sbb
call
out
stc
dec
out
mov
sti
lahf
pop
sti
hlt
int
adc
pop
mov
push
icebp
je
inc
push
cs
jo
cld
jae
test
mov
xor
out
ret
inc
leave
das
push
inc
cmpsb
pushl
xor
push
jle
mov
pusha
mov
mov
addb
mov
mov
push
subb
mov
repnz
xchg
sarl
xor
and
arpl
jge
pop
aam
cmp
mov
inc
dec
mov
je
ja
sbb
sub
pushf
inc
dec
imul
aaa
or
mov
push
mov
xchg
sbb
jnp
inc
or
test
pop
cltd
cmp
icebp
xchg
popa
mov
in
loop
lods
scas
jb
mov
adc
add
and
mov
imul
pusha
push
push
xchg
adc
adc
mov
and
push
or
in
or
aad
outsb
sub
dec
pop
and
adc
cltd
shlb
lret
add
jl
lods
in
scas
call
xchg
jle
add
cltd
inc
mov
xchg
xchg
mov
or
clc
les
or
dec
sub
mov
mov
push
sbb
jae
mov
xor
lret
xchg
push
pop
mov
scas
mov
jo
push
jnp
fcoml
icebp
fimuls
xchg
mov
fsubs
imul
stos
xor
test
test
js
test
in
jmp
mov
xchg
cmp
mov
cltd
inc
xor
add
jle
mov
cmp
fmuls
addb
inc
cmpsb
mov
and
and
add
pop
jle
and
adc
add
bswap
sub
fists
int
pusha
data16
out
sbb
movb
mov
mov
pop
es
mov
dec
jg
mov
fcmovne
mov
push
andl
gs
cmpsb
dec
mov
add
mov
outsl
imulb
xchg
cwtl
mov
movsb
push
out
pop
xchg
cmpsb
aam
jno
mov
lods
push
mov
jns
mov
loope
stos
in
into
dec
mov
paddsb
mull
call
xor
push
push
mov
jp
dec
xchg
out
push
imul
in
mov
push
lds
out
and
popa
lods
cltd
jo
sti
or
push
cltd
xorb
mov
mov
ror
push
iret
dec
cmc
cmc
into
icebp
lret
xor
addr16
outsb
pushf
or
aad
add
pop
inc
lret
or
ret
inc
mov
add
test
mov
imul
push
mov
jne
cmp
gs
or
addr16
popa
xlat
inc
call
xchg
dec
mov
xor
pushl
lahf
imul
cmp
imul
adc
and
jmp
fsubrp
adc
or
inc
lods
xchg
outsb
jns
daa
xorl
dec
daa
hlt
lock
jl
lret
lock
imulb
in
cmp
popa
dec
outsl
je
fs
push
aad
or
inc
ss
gs
mov
ds
xchg
push
jle
lea
sar
mov
mov
cmpl
test
js
mul
sti
roll
sbb
add
xchg
mov
aad
cmpb
sbb
jns
ss
push
negb
pop
adc
shrw
sub
fmulp
push
jne
mov
xor
pushf
in
mov
stc
mov
leave
cmp
imul
dec
in
mov
adc
jnp
aad
mov
push
cld
in
sbb
test
mov
jne,pt
lahf
inc
or
je
fwait
sbb
and
xlat
cmc
imul
sbb
rcll
inc
jnp
mov
addr16
sub
mov
sub
mov
insb
xchg
sti
push
aaa
jne
pop
or
ficomps
or
daa
addl
std
mov
jb
mov
idivl
nop
andb
loope
sbb
inc
lret
mov
test
and
ret
mov
repnz
fstpl
stos
dec
pop
fs
icebp
or
sbb
mov
jbe
mov
enter
sahf
aad
icebp
imul
dec
adc
mov
fsin
js
mov
pop
hlt
js
push
cmp
cmp
cmp
pusha
push
mov
xchg
xchg
mov
aad
imul
mov
xchg
repnz
aas
jp
sub
xchg
jge
lock
xor
cld
push
jecxz
in
dec
inc
xchg
push
mov
push
cmp
and
addr16
sbb
xlat
fwait
push
dec
ficoms
xor
arpl
sbb
add
mov
test
aam
xchg
sub
sub
push
movsb
add
dec
rcr
fdivp
jmp
add
mov
mov
xlat
int
mov
mov
add
fistpl
push
or
sub
mov
int3
movsl
inc
mov
sbb
add
pusha
adc
xor
out
or
push
lods
push
idivl
jge
mov
divb
xlat
jns
test
fs
sahf
pop
xor
sysexit
jge
push
xchg
dec
ljmp
ljmp
out
into
int
and
mov
push
xor
fadds
shl
mov
add
cmpsl
nop
and
sahf
hlt
or
dec
subb
jg
inc
mov
sbb
stos
push
pop
sbb
cmp
inc
adc
jmp
mov
xlat
pop
rorl
jnp
fs
dec
idivl
sbb
jb
mov
mov
xor
js
mov
cmp
repnz
movsb
mov
push
adc
jae
test
iret
adc
xor
add
stc
stos
and
popa
jbe
xlat
cmc
fwait
sbb
leave
mov
jo
cld
inc
test
add
outsl
mov
cmp
mov
adc
mov
das
and
add
movsl
insl
loope
dec
mov
or
or
in
test
repz
cmc
fcom
pusha
pop
sarb
roll
fdiv
adc
test
pop
cmpsl
jle
jp
sbb
xor
js
popa
cs
mov
sbb
or
nop
or
add
icebp
mov
xchg
out
xchg
inc
sahf
icebp
dec
in
mov
imul
iret
xchg
xchg
jle
sub
pop
dec
std
jno
xchg
or
adc
mov
in
lret
mov
in
mov
add
repnz
push
xor
cmp
lock
or
mov
mov
sub
mov
mov
and
imul
mov
mov
mov
or
imul
sub
stos
sbb
sbb
add
jp
pop
sbb
sub
xchg
ss
add
movsl
shl
push
cld
push
fisttpll
loop
and
imul
xor
inc
ljmp
stos
mov
xor
movsl
pushf
out
pop
xor
sub
push
rorl
jae
ja
mov
popa
pop
jg
rorb
sub
fmul
add
out
out
mov
xchg
outsl
jbe
and
jo
xorl
int
pop
xchg
cmpsb
out
cmp
mov
idiv
jne
cmpsb
inc
and
fcmovnu
jae,pn
push
cmp
repnz
lock
cmp
scas
pusha
add
mull
clc
je
negl
je
imul
pop
fdivrl
notl
test
dec
pop
imull
outsl
cli
cmc
push
pop
jmp
mov
and
insb
jmp
pop
mov
xchg
negb
movsb
les
mov
sbb
mulb
xchg
and
sub
sbb
out
pop
into
xchg
pop
jns
cmpsl
cmp
stos
hlt
rcr
test
inc
adc
daa
gs
push
and
jnp
jle
nop/reserved
in
sub
fs
mov
or
addr16
cmpsl
sahf
repnz
fs
jne
or
push
or
dec
cwtl
mov
mov
fsub
test
push
or
mov
aaa
ja
adc
xchg
arpl
mov
sbb
syscall
mov
cmc
loope
in
sub
add
repz
js
shr
adc
mov
xchg
fsts
ss
mov
hlt
orb
inc
ds
jg
movsb
sbb
sbb
inc
cltd
es
clc
lods
or
sahf
sahf
and
iret
aaa
ret
or
or
daa
aaa
cwtl
jns
inc
out
xchg
push
mov
pop
dec
adc
jg
mov
mov
rcrl
sbb
in
sti
out
sub
in
cmp
pop
frstor
cmp
leave
push
and
das
xor
mov
stc
add
js
paddb
inc
xor
rcrb
loop
adc
xlat
pushf
adc
push
pop
imul
inc
and
cmovle
jnp
sub
lea
mov
enter
xchg
pop
add
dec
push
inc
lods
test
test
jecxz
mov
sbbl
imul
mov
imul
add
adc
pop
xchg
add
xchg
lea
push
insb
xor
jne
fmul
mov
dec
jbe
add
and
gs
clc
repz
inc
lods
or
aaa
cmpsb
bound
mov
in
pop
pop
push
or
pusha
int
inc
mov
test
dec
out
mov
frstor
mov
mov
call
cmc
ljmp
cmp
cmp
mov
adc
mov
loope
and
adcl
scas
or
add
push
mov
fs
mov
xchg
scas
or
and
sbb
jecxz
fldt
jl
imul
xor
mov
outsb
cmpsb
cmp
xchg
cltd
pop
push
int3
sbb
inc
ficoms
mov
mov
cmp
inc
aas
js
rcrl
pusha
xchg
cmp
scas
nopl
sarl
lcall
fdiv
sub
sbbb
lcall
add
lahf
add
jmp
dec
dec
xor
cmpsb
push
pop
int
ss
mov
nop
mov
test
jb
test
inc
pop
and
pminub
pop
xchg
outsl
loope
xlat
lods
push
xchg
jg
scas
leave
decb
xor
lock
jb
out
pop
pop
push
in
leave
bound
push
es
rcll
xor
or
fwait
mov
inc
sub
jmp
dec
mov
mov
sbb
loop
jg
cmc
dec
mov
mov
loop
dec
rorb
add
cmc
jns
leave
popf
add
jbe,pt
adc
int
mov
cwtl
mov
imul
daa
stc
mov
sbb
adc
mov
mov
jl
and
insl
popa
lcall
adc
inc
outsl
mov
mov
std
cmp
mov
cmpsl
cmp
test
clc
pop
mov
mov
adc
add
jl
fs
mov
cwtl
push
cmp
das
jne
cmc
imul
gs
lcall
mov
std
push
js
sbb
or
sub
shlb
xor
inc
mov
cmp
jmp
test
cli
or
or
pop
dec
aad
or
call
leave
addr16
ret
aas
and
out
lods
std
mov
sub
adc
aaa
arpl
adc
outsb
fwait
ds
adc
xor
push
fs
xchg
jns
fld
inc
aam
xor
mov
les
arpl
out
mov
stc
popa
inc
mov
call
pop
mov
sbbb
bnd
lds
ss
insb
mov
in
iret
imul
cmpsb
bound
inc
or
pop
sub
shlb
inc
sbb
test
out
mov
mov
or
pop
movsb
sub
loop
mov
mov
mov
fimuls
idivb
hlt
and
inc
aas
add
and
cld
int3
sub
pop
jns
leave
sbbb
cld
ja
xor
pop
push
clc
rorl
ja
sub
sarb
cltd
fdecstp
fcomip
scas
push
fstpl
sub
mov
aad
stos
jle
pushf
cmp
mov
xchg
sbb
push
add
in
stos
test
sbb
mov
ds
cmpsl
cmpsl
std
xlat
lods
adc
int
test
mov
int
int
aam
inc
and
inc
push
mov
ss
add
pop
std
repz
or
sbb
fdivrl
outsb
je
mov
hlt
pusha
hlt
insl
push
mov
pushf
out
pop
dec
in
dec
scas
sbb
es
dec
negb
or
add
xchg
jae
push
sbb
ret
sub
test
jne
xchg
lock
lds
pminub
mov
jmp
cwtl
std
pushf
scas
rcrb
inc
or
or
test
es
in
adc
imul
loope
xlat
gs
fdivl
adc
pop
insb
into
and
cli
fstpl
pop
fbstp
push
sahf
jg
push
clc
mov
push
test
popf
adc
addr16
fisubrl
push
idivb
and
out
leave
mov
popf
push
cmp
jmp
movsb
dec
test
loope
and
push
pop
ret
add
push
jle
es
sbb
mov
clc
inc
mov
ret
xchg
sub
inc
das
add
cmpsl
gs
out
pushf
dec
pop
push
in
mov
mov
push
sbb
out
insl
xbegin
cmp
iret
inc
xor
lret
adc
dec
pop
xchg
dec
andb
clc
std
lea
inc
mov
pop
inc
cld
sbb
fsubrl
mov
mov
or
cli
adc
int3
into
inc
xchg
xchg
mov
mov
add
andb
cmp
push
xor
lahf
xor
or
test
das
mov
mov
and
mov
dec
inc
aaa
xor
mov
push
cmp
adc
add
sub
xchg
adc
and
cmp
addr16
ja
les
adc
mov
shll
sub
fists
adc
scas
jnp
pop
pop
dec
popf
sbb
dec
push
scas
adc
iret
dec
or
mov
push
pop
fwait
je
mov
out
pop
add
pop
and
arpl
mov
in
js
xor
add
mov
adc
mov
inc
lret
fldcw
dec
xchg
pop
lea
xchg
in
aad
dec
repz
arpl
cltd
jns
arpl
pop
or
add
mov
scas
dec
je
push
jg
cmpsb
fs
out
dec
loop
pushf
mov
js
arpl
loope
mov
xor
test
fmul
imul
cmpsl
mov
push
jns
pop
loope
jae
out
inc
and
adc
addr16
insb
iret
cltd
fsubrp
and
cli
aad
imul
cwtl
out
inc
jns
movsb
lcall
mov
out
clc
out
xchg
jg
aaa
add
pop
out
adc
adc
lds
xor
add
fisubs
sbb
jle
pop
xchg
mov
inc
lods
or
fxch
loopne
sbb
lret
mov
sarb
xor
aam
inc
idiv
add
orl
and
adc
outsb
pop
movl
test
jne
cli
outsl
shl
int3
xor
dec
or
lock
test
jae
or
pop
push
cmc
xor
mov
loope
and
ret
jmp
inc
mov
jae
aad
sbb
fs
repnz
leave
push
loopne
xchg
out
or
xor
int
push
xor
sbb
sub
pop
imul
js
in
mov
jb
sti
inc
pushf
in
xor
clc
daa
mov
mov
or
jmp
dec
outsb
pop
js
hlt
jmp
and
nop
repz
push
mov
rcr
pop
push
stc
or
jo
xchg
aad
push
adc
les
enter
sbb
mov
push
inc
dec
add
hlt
mov
sti
push
jmp
or
xchg
lds
jecxz
xchg
subb
iret
in
sbb
jnp
jae
cmc
mov
xchg
fildl
insl
scas
scas
jo
sub
in
inc
loope
addl
hlt
dec
loopne
pusha
cltd
push
lret
mov
push
dec
loop
or
and
ret
stc
mov
dec
movsl
jb
mov
sbb
cmp
cmp
mov
loope
mov
and
fisttps
cmp
mov
jne
mov
das
or
mov
mov
push
fwait
outsb
sub
add
add
sbb
sahf
pushf
sub
mov
xchg
outsb
cmc
cld
rclb
mov
jle
dec
test
int3
pop
mov
dec
jno
outsb
insb
stc
stos
out
mov
lcall
pop
mov
iret
mov
push
clc
lock
sub
mov
movl
dec
sti
mov
daa
mov
dec
mov
jns
jg
imul
mov
add
addb
pop
xchg
mov
pop
stos
mov
jo
mov
daa
cmp
or
in
mov
aaa
sub
push
sbb
cmpl
sub
scas
ja
outsl
lret
jnp
xor
fisttpll
leave
loopne
xor
dec
xchg
lods
roll
xchg
adc
fwait
loope
mov
inc
cmc
int3
adc
xor
mov
stos
rclb
flds
cmp
je
add
fs
xchg
int
sbb
out
ret
ficoml
dec
push
pop
divb
push
int
jmp
sbb
dec
lock
test
pop
rcl
or
popf
jge
aad
jno
mov
mull
push
jnp
push
dec
dec
lret
popa
ret
mov
push
jbe
data16
imul
lret
jne
mov
test
cmp
fwait
mov
adc
jge
arpl
push
inc
mov
mov
mov
jge
cwtl
inc
inc
sub
pop
insb
jle
inc
lods
movsl
jae
jl
cmp
mov
fnstcw
adcb
in
cmp
aas
fs
arpl
out
out
rorb
push
push
sbb
lret
shll
and
xchg
cld
int3
loopne
push
mov
cmp
cmpsl
inc
pop
cmp
es
sbb
push
es
inc
les
fadds
mov
xor
jecxz
pop
lea
adc
inc
ret
aaa
dec
out
or
in
adc
stos
jge
push
dec
xchg
xchg
pop
sbb
push
and
jnp
or
clc
int
sbb
jge
rcll
sbb
xchg
add
lcall
push
push
fldl2t
das
sbb
outsb
mov
cltd
jbe
xchg
pop
ret
mov
in
adc
flds
jecxz
cmp
ljmp
int
sbb
nop
arpl
shl
pop
adcl
inc
outsb
sub
mov
lret
mov
sub
fistpll
stc
jae
pusha
and
inc
mov
cmp
cmp
cltd
dec
push
addr16
nop
inc
popf
jmp
lds
insl
shrl
push
inc
inc
lods
pop
js
call
inc
pop
push
jo
mov
testl
aam
or
push
in
inc
imul
roll
fadds
pop
ficompl
aaa
int3
rcr
rcr
pop
mov
les
inc
inc
push
dec
cmc
fwait
out
add
xor
lock
jbe
xor
mov
ja
fwait
cld
xor
sub
lret
mov
iret
sbb
fnsave
mov
jns
sahf
enter
jle
ret
xor
imul
stos
aad
xchg
pop
pop
or
push
adc
push
stos
mov
jo
pop
insb
pop
sti
rcr
outsb
mov
and
push
push
push
sub
jae
jns
subl
or
in
add
repz
leave
fnsave
stos
es
incb
sub
dec
and
xor
rcrl
cmp
les
andb
jle
add
and
loope
push
dec
mov
out
mov
repnz
pop
scas
xchg
iret
cltd
lahf
imul
push
repz
jle
mov
add
dec
in
movsb
test
and
adc
popa
lret
call
ljmp
cmp
push
jecxz
mov
sub
out
sbb
arpl
inc
les
push
aad
sub
jo
scas
push
pushf
leave
and
adc
test
mov
jg
xchg
data16
int3
adc
pop
fstpl
inc
lcall
or
mov
pop
mov
mull
out
mov
xor
movsl
jecxz
aas
je
sbb
fwait
push
inc
jg
clc
jno
ds
jne
clc
sbb
fdivrs
inc
addr16
and
int
sbb
repnz
int
adc
xchg
and
pop
mov
pop
sti
jmp
into
dec
pop
clc
mov
arpl
loope
fisubrs
test
js
in
inc
mov
call
push
mov
jge
inc
mov
pop
shll
pop
push
mov
divb
dec
fs
adcl
fmull
popa
in
pop
inc
dec
mov
adc
inc
xchg
ret
adc
incl
dec
pop
push
cmp
mov
push
dec
add
push
sub
xchg
adc
lock
xor
in
jmp
rcll
es
jl
out
inc
iret
imul
xchg
mov
adc
testl
sub
adc
xorb
stos
ds
mov
les
fcomps
adc
out
inc
aam
loopne
insb
je
xchg
lahf
insb
jge
fdivrl
stos
loopne
push
test
xchg
jmp
ja
int
xchg
inc
scas
add
pop
or
or
or
sbb
outsl
mov
jg
jne
aam
dec
pop
cltd
loope
lods
inc
pop
shlb
xchg
inc
sub
mov
add
xchg
add
mov
mov
push
dec
pop
mov
mov
nop
pop
push
push
movsl
popf
repz
mov
adc
dec
xchg
dec
lret
adc
and
call
fdivl
decb
dec
fstl
bound
inc
stc
sub
xchg
pop
icebp
int
cmpsb
mov
ds
inc
imul
pusha
mov
ret
xchg
push
mov
aaa
fcmovb
sahf
pusha
shll
cli
add
cmpsl
enter
add
xor
aam
cmp
fsub
je
jae
in
adc
lcall
dec
xor
add
cltd
outsb
and
dec
cmc
ficomps
pop
lods
testl
rcl
out
push
mov
push
push
mov
or
cmpsl
jp
dec
in
icebp
pop
xchg
xor
inc
imul
or
push
negl
dec
add
xchg
cmpsb
mov
int
roll
cmp
icebp
xchg
outsb
add
stos
and
nop
andb
ret
inc
xor
pop
std
sub
push
nop
jns
scas
xchg
sub
jne
bound
add
aam
movsb
add
out
mov
and
push
lcall
enter
call
test
xor
mov
jno
das
insb
scas
jnp
out
sbb
pop
inc
jmp
mov
add
inc
lret
push
pop
pop
or
int
sub
xorl
or
fsubrp
sti
imul
jnp
loopne
es
cwtl
add
push
push
cmp
cmp
pop
mov
dec
and
add
cli
cmp
pop
and
sar
in
jmp
adc
xchg
ret
les
sub
sub
jg
enter
and
xor
movl
mov
sub
test
aas
in
flds
mov
jmp
stc
mov
jp
repnz
push
adc
adc
xor
ja
out
push
jne
pop
jl
addb
mov
cmpsl
aam
lret
imul
sbb
mov
je
test
sub
scas
dec
push
mov
stc
sub
data16
mov
js
lret
fsubrs
ss
dec
sahf
sub
in
push
in
cmp
scas
or
inc
mov
push
mov
clc
jg
adc
xchg
cmp
adc
and
clc
add
cmp
sbb
pushf
jmp
in
sub
push
jge
in
das
xchg
dec
movsb
push
pop
dec
jmp
test
mov
xor
cmp
insb
pop
mov
arpl
xor
jg
test
jmp
push
adc
adc
outsb
jl
ss
sub
xor
rclb
fmulp
mov
fiadds
jne
adc
mov
mov
push
icebp
data16
jbe
inc
dec
clc
ja
jnp
push
imul
jecxz
pusha
and
cli
or
inc
es
dec
mov
jg
push
mov
sub
sbb
out
movsb
push
pop
ret
xchg
xchg
ret
out
cmova
inc
enter
or
sub
dec
ljmp
mov
jmp
call
mov
ljmp
cld
xchg
test
ds
cmc
das
pop
adc
imul
lds
inc
pop
sbb
insl
mov
subl
fwait
push
xor
cs
dec
lret
sub
cwtl
mov
out
sahf
loope
rorb
js
daa
jecxz
fldenv
orl
jp
jo
sub
or
and
jbe
push
pop
outsb
fs
push
dec
mov
cmpsb
icebp
aam
lcall
sub
sarl
push
jno
push
ja
subl
lock
mov
dec
into
cli
rol
out
inc
sbb
mov
push
lods
scas
push
stc
dec
push
jmp
or
jae
scas
das
hlt
xorl
xchg
mov
xchg
mov
pop
lcall
mov
inc
loop
sahf
inc
popa
dec
lods
mov
jl
sahf
sbbl
rclb
or
and
negl
testb
xor
inc
mov
or
dec
addr16
pop
std
es
lea
sub
jg
in
addb
gs
test
bound
mov
mov
inc
jge
adc
sbb
dec
mov
xor
repnz
sbb
fs
xchg
aas
rorl
jecxz
ror
insl
cltd
pop
adc
stos
xchg
outsb
mov
fldt
pop
mov
sub
xchg
lret
mov
cmp
fucomi
push
push
and
test
inc
sub
lea
das
setbe
iret
push
or
push
and
pop
subl
ret
test
push
inc
mov
dec
push
ret
or
push
sub
bound
add
shlb
jp
decl
push
pop
cmp
push
scas
bound
xlat
jbe
push
test
mov
movsl
cld
sbbb
aas
ret
shlb
and
dec
out
sti
adc
lea
sbb
cmp
fstp
rcr
push
outsb
inc
dec
pop
adc
pop
loop
fdivl
ja
or
call
addr16
jno
xchg
addb
out
adc
and
in
les
and
push
mov
ja
pusha
push
dec
xor
popf
aam
jle
imul
icebp
sbb
push
xchg
movsl
mov
addb
dec
mov
std
sahf
mov
mov
and
repnz
and
or
cmp
push
and
add
test
int3
jmp
lcall
in
out
or
pop
jg
sub
jne
pushw
inc
loope
hlt
aaa
xlat
xor
jg
sub
lods
dec
pop
xorl
inc
add
std
cmp
in
push
rolb
ja
pop
ret
jae
xchg
inc
jmp
movaps
hlt
or
pusha
xorb
pop
pushf
outsl
xchg
mov
jb
dec
mov
bound
sub
arpl
loop
rclb
xor
fisubl
fmull
pop
jle
fsin
xchg
ja
xchg
insl
jecxz
xchg
call
jmp
stos
out
sbb
test
std
pop
adc
sbb
push
xchg
xor
cli
sarl
sti
sti
lcall
into
jne
pop
mov
push
sbb
sahf
jo
inc
xlat
icebp
call
stos
add
xor
std
pop
aam
push
push
sbb
imul
test
shll
sahf
rcl
rcrb
xchg
ret
insb
pushf
fyl2x
sbb
add
outsb
cli
mov
int3
pop
push
cmp
cli
scas
stos
pop
xchg
jg
fxch
xchg
cmpsb
lret
adc
iret
cmp
and
movsl
pop
out
jmp
scas
lcall
dec
adc
cltd
test
fs
and
sbb
popa
sub
dec
test
xchg
jae
xchg
jne
jmp
mov
rorb
addr16
enter
pop
xor
jnp
mov
add
mov
rorl
fs
cmp
fwait
cs
aam
nop
add
mov
jl
push
bound
and
repz
cmp
add
bound
xchg
cmpl
std
jnp
cmp
fisubl
ja
push
lret
mov
jmp
je
inc
cmc
adc
mov
into
inc
mov
ficoml
std
popa
push
push
sti
ds
iret
fcoml
mov
fidivrs
popf
rorl
imul
pop
loopne
sub
mov
dec
add
dec
imull
addl
cmpsl
jl
cmp
add
dec
mov
push
and
daa
popa
xchg
xchg
shlb
leave
int
call
scas
xchg
in
imul
or
jmp
mov
nop
insb
gs
add
sbb
faddl
enter
arpl
push
fstpt
cltd
cmp
inc
fldt
inc
inc
or
gs
cmc
cli
ja
dec
inc
sahf
jo
mov
out
inc
dec
cltd
mov
push
and
inc
popf
in
cwtl
cmp
jl
out
fidivl
pop
or
adc
xchg
xchg
push
in
test
andl
ds
shlb
call
arpl
cmpsb
imul
pop
xor
lcall
cmp
jno
imul
mov
lahf
jl
das
clc
sub
add
stc
nop
aam
notl
inc
andl
pop
lahf
mov
sbb
sub
mov
loop
mov
call
aam
cmp
mov
mov
inc
sbb
std
mov
dec
pop
movsl
imul
mov
sbb
jb
pushf
hlt
pop
push
push
push
cmpsb
and
sarb
aad
nop
mov
push
sbb
js
stos
mov
push
mov
jne
sbb
imul
push
mov
push
pop
add
jns
sahf
pop
in
cmp
repz
xchg
fcoml
rorb
inc
clc
mov
xor
aad
gs
mov
inc
fiadds
insb
mov
adc
fstp
lahf
scas
cmc
outsl
insb
mov
pop
jp
sar
sahf
icebp
iret
push
and
add
movsl
jno
or
test
sbb
es
xchg
mov
in
mov
pop
in
adc
pop
jnp
ljmp
mov
adc
iret
mov
dec
and
dec
outsb
mov
ja
lahf
aad
fucomi
mov
mov
and
add
mov
jbe
sub
jb
scas
add
rclb
outsb
jo
pop
pop
jge
push
stc
ds
mov
mov
dec
mov
xor
mov
test
xlat
repz
push
rorl
decl
shlb
fstpl
xchg
in
add
shll
cmc
cwtl
xorl
push
jbe
cld
sbb
mov
arpl
cmp
adc
sarb
repz
cmc
pop
push
std
adc
inc
out
fnstcw
jg
stc
repz
loopne
clc
incl
js
data16
popf
scas
sti
mov
jp
nop
and
lahf
push
in
xchg
pop
dec
call
jge
sarb
adc
movsl
sbb
shr
bsf
cmp
jbe
inc
pop
xor
dec
sbb
xchg
sbb
cwtl
or
jnp
lcall
dec
or
movsb
cmp
in
rcrb
push
sar
or
or
cmp
sbb
pusha
inc
lcall
sbbl
inc
movsb
cmp
pop
lock
cmp
out
int
enter
jno
push
or
loop
repnz
fisubrl
fadd
lcall
dec
cld
fs
sbb
xchg
jle
cmp
daa
dec
es
addr16
and
jae
mov
push
mov
pop
mov
subb
jl
icebp
outsb
imul
mov
mov
bound
mov
fisubrs
andb
hlt
xlat
sahf
insb
in
std
scas
dec
xchg
mov
xchg
cwtl
int3
arpl
fadds
and
cmp
and
pop
js
or
jae
out
mov
aas
iret
roll
ss
mov
pushf
ret
popa
dec
pushf
adc
pop
or
pop
jae
add
lret
push
sub
int3
scas
adc
js
or
imul
adc
push
sbb
repnz
arpl
inc
sbb
fstpl
or
or
add
mov
stos
xor
leave
mov
fs
ss
daa
popf
stos
ds
test
stc
inc
test
mov
iret
aaa
add
daa
or
cmp
roll
dec
xorl
push
fbstp
sub
push
dec
orb
je
lahf
adc
mov
sbb
sub
gs
sbb
or
inc
cmp
or
cmp
mov
lods
push
in
bound
loopne
dec
fs
jnp
cs
jecxz
test
cmp
into
cmpsl
jmp
jl
push
push
sbb
lds
sahf
mov
mov
mov
push
jge
js
in
dec
js
mov
das
adc
arpl
adc
lcall
inc
aaa
rcrb
roll
cmp
and
addl
ret
mov
xchg
stos
push
push
push
rolb
sub
sbb
lcall
adc
movl
sti
xchg
dec
ds
cli
js
out
repnz
push
mov
mov
std
arpl
xor
pusha
cmp
fdivrl
and
cmp
fildll
jb
enter
testl
outsl
cmp
mov
loop
mov
push
xchg
popa
sbb
inc
in
fiaddl
lods
push
insl
repz
outsb
movsb
out
mov
mov
scas
sbb
in
push
scas
repnz
lret
lods
sbb
push
inc
roll
jno
ljmp
mov
push
lock
xchg
fwait
scas
pop
xchg
mov
add
enter
popa
pop
cmp
stos
mov
ja
fists
mov
xchg
and
jge
and
lods
sbb
nop
pop
jl
les
sbb
inc
push
ljmp
or
push
dec
bound
lods
gs
cmp
pop
cs
icebp
pop
cmc
push
dec
and
dec
push
or
push
mov
cmp
loope
jge
add
and
sti
xchg
rorb
ret
aas
or
push
jecxz
int
outsl
pop
insl
outsb
loopne
imul
cmp
test
in
lcall
hlt
sbb
dec
ds
loope
or
jb
xchg
imul
and
mov
push
repnz
jbe
cmc
push
test
sarb
mov
or
cmpsl
or
xor
ds
cld
cmp
sub
add
test
in
cmp
jns
xchg
clc
les
mov
pushf
sub
loopne
test
xor
jmp
xor
call
pop
data16
sbb
cmc
and
pop
jno
fwait
repz
mov
mov
cmpl
add
int
fsubr
mov
icebp
loop
fs
mov
xor
das
aad
int3
ficomps
or
repz
jne
test
cld
jb
wrmsr
xor
mov
fwait
sub
push
pop
or
mov
fmulp
add
sub
scas
dec
add
jo
inc
push
xchg
cmpl
out
imul
add
add
imul
sti
or
xlat
dec
pop
pop
xchg
mov
ja
movsl
jle
sbb
decb
or
dec
jne
mov
outsb
outsb
test
sti
inc
dec
test
inc
jns
mov
rcll
xchg
push
xlat
sub
mov
mov
enter
mov
in
into
arpl
fists
aad
adc
mov
adc
jmp
sti
xchg
es
repz
and
jle
into
mov
lds
xchg
pop
repz
add
es
jbe
add
push
mov
out
out
mov
adc
sbb
dec
aad
adc
int
mov
dec
incb
push
xorb
lods
push
sub
dec
mov
rcl
mov
fimuls
repnz
or
mov
iret
pop
add
fstpt
push
js
pop
pop
inc
hlt
daa
dec
xor
shlb
add
rclb
push
cmp
xorl
lret
sti
pop
jns
les
outsl
mov
mov
xor
lahf
sbb
in
aad
shrl
imul
gs
pop
aad
pushf
mov
sub
ljmp
loop
daa
fiaddl
scas
imulb
rolb
cmp
mov
loopne
ret
out
stc
jp
stos
jp
lods
add
nop
sub
shrl
jg
mov
push
and
xchg
in
movsl
pop
ffree
add
inc
ds
movaps
lret
imul
jecxz
arpl
mov
int
add
mov
xchg
repnz
mov
hlt
inc
int3
sbb
add
adc
js
xchg
aam
mov
imul
adc
fwait
int
xor
stc
or
add
addb
je
jnp
stos
mov
shrb
cmp
sbb
adc
xchg
loope
testb
ljmp
vmread
daa
fdivs
or
pop
arpl
cwtl
lods
sbb
jns
lods
incl
stc
fiaddl
mov
jo
mov
cmp
xchg
ret
stos
pop
ret
sbb
ret
sub
jbe
dec
mov
add
xor
push
lret
jns
in
sbb
add
ds
mov
icebp
movsl
and
mov
stos
jno
xor
dec
js
sar
out
fyl2xp1
in
push
mov
add
mov
in
int3
iret
loop
jmp
dec
ret
jb
movsb
and
hlt
push
sub
cltd
add
cli
cmpsl
cwtl
nop
mov
and
fstp
out
fstpl
xchg
or
push
mov
and
adc
test
xor
sub
cmp
testb
imull
cmp
int3
pushf
inc
fs
aad
mov
jae
sub
ror
pushf
cmp
lods
clc
mov
shlb
lcall
mov
out
lret
rcll
movsl
sub
jmp
lock
xor
out
adc
lods
iret
sub
lods
aam
pushf
pop
or
mov
adc
stos
pop
xchg
call
xchg
cmp
incl
push
lret
fnstcw
xchg
int3
mov
push
movsl
aas
loopne
inc
cmp
mov
sbb
icebp
movsl
out
insb
movsl
stos
and
stos
aaa
pop
popa
and
cltd
sub
pushf
les
adc
jne
repz
pop
test
int3
adc
ja
push
fsub
push
lods
jp
sbb
fcoms
xchg
push
cld
cmp
xchg
test
sbbb
pop
push
lret
out
cmpsb
pop
loop
jne
ret
scas
add
test
shrl
sarl
push
cs
inc
or
hlt
lea
or
ja
cmc
lds
aaa
sbb
xor
xchg
mov
sub
ljmp
jb
sub
cmp
jp
cli
cld
andl
repnz
test
sub
in
mov
in
xchg
stos
jo
inc
sahf
outsb
push
jne
mov
xchg
scas
sbb
gs
adc
loop
jb
imul
loop
cld
ret
push
ja
rorl
lahf
shrl
les
cs
push
repnz
pop
or
andb
iret
jg
push
or
mov
xor
inc
push
mul
or
mov
insl
lods
mov
cltd
fs
or
cmpsb
push
sbb
xchg
xlat
jp
in
imul
les
or
ret
hlt
subb
and
add
andl
repnz
fstpt
sbb
and
lcall
pushf
push
xor
push
sbb
and
loope
shll
in
xlat
mov
mov
fcompl
outsl
mov
sub
cmc
inc
or
mov
fdivr
cmp
test
pop
cmp
fbld
push
insb
xchg
xchg
mov
fwait
mov
jno
fs
push
cmp
or
cmp
leave
stos
icebp
cmc
inc
enter
or
pop
xchg
mov
cld
jmp
popf
popf
mov
out
mov
cli
in
in
mov
mov
pop
mov
mov
arpl
add
dec
push
repnz
xor
xchg
cwtl
push
mov
cmp
test
push
fwait
push
jp
out
or
xor
add
sub
push
mov
fimuls
add
push
xchg
enter
mov
sbb
jae
les
rorb
sbb
fimull
cmp
rolb
sub
es
jl
cmp
cli
popf
cmp
out
xchg
movsl
daa
jg
push
out
and
rorl
shlb
es
fcompl
shll
mov
mov
xor
pop
outsl
adc
mov
and
mov
daa
or
fistl
nop
sbb
js
xor
movsb
or
cmp
push
push
loopne
jg
rolb
mov
ss
lret
lahf
and
shll
or
adc
ret
loope
xor
mov
out
scas
in
adc
add
xchg
mov
dec
xor
js
sub
cmpsb
dec
test
repnz
rcrb
inc
fcmovne
repnz
out
add
ficoms
pop
jne
pusha
xlat
cs
movsl
jl
jnp
scas
stos
mov
pusha
mov
lods
pop
push
das
shl
lock
ljmp
sub
popf
pushf
fildll
repnz
mov
fwait
rcl
cltd
ja
jno
adc
mov
or
inc
dec
outsl
sub
fildll
cwtl
cs
std
jbe
dec
sbb
scas
jl
jge
or
lods
xor
fwait
pop
in
je
std
xchg
dec
imul
mov
mov
jbe
pop
lods
lock
rorl
sub
jo
movsl
fsubl
outsb
loop
xchg
pop
or
int
mov
inc
cmpsl
in
jp
lahf
and
mov
int3
neg
mov
xor
scas
dec
mov
loopne
fsubs
xchg
and
jb
aam
orl
inc
push
xchg
lret
mov
outsl
or
add
mov
and
jge
lock
aam
sbb
xchg
pushf
sub
xchg
mov
mov
rcrb
sub
mov
aaa
cmp
in
stos
gs
cwtl
test
fmuls
dec
lahf
bound
sbb
sbb
ljmp
int
dec
popl
add
enter
or
jge
cmpsb
loop
dec
les
xchg
shr
dec
cmpsb
xor
notb
sbb
dec
outsb
add
adc
sub
mov
xor
fwait
pop
js
add
lods
mov
aas
mov
inc
stc
bound
fistl
mov
jle
sub
fdivrs
jo
arpl
push
and
push
movsl
sbb
push
mov
mov
in
pushf
inc
jmp
mov
adc
ret
pop
aas
cmp
mov
jbe
out
xorl
je
mov
iret
dec
idivl
mov
push
mov
mov
cmp
mov
pop
jae
and
push
loop
int3
sbb
nop
dec
popf
std
jecxz
bound
pop
cmc
ficompl
jbe
pop
sahf
or
push
idivb
xor
mov
imul
fwait
xchg
sbb
popa
sbb
push
sti
mov
sub
and
mov
pop
repnz
jae
pop
out
cmp
out
shrl
jns
cmpsb
leave
inc
stc
push
dec
push
sar
punpckldq
and
imul
ss
lock
sub
jns
les
mov
mov
mov
and
push
mov
adc
jb
jbe
push
xor
ja
push
xchg
je
mov
jns
leave
testl
pushf
and
sbb
ficoms
mov
pop
dec
push
xchg
xchg
in
test
lock
jo
mov
adc
pop
lcall
addr16
pop
leave
push
shlb
xchg
push
out
mov
or
push
lcall
mov
mov
inc
push
mov
lcall
xor
inc
mov
pop
out
in
cmp
std
jb
ficoml
out
add
pop
test
push
mov
push
sbb
xchg
das
add
cmpl
add
xor
cmp
pop
mov
ss
or
jns
fs
daa
push
flds
bound
faddl
js
popa
mov
ficompl
fs
push
insl
insb
xchg
dec
mov
xor
movb
pop
stos
adc
call
repnz
outsb
mov
fldcw
inc
mov
popf
mov
aaa
ret
test
cmpsb
add
push
xor
and
adc
ljmp
pushf
dec
mov
mulb
mov
cmp
imul
inc
inc
jno
rcr
jge
jg
in
xchg
and
aad
xor
int3
cli
jl
push
cmp
scas
call
pusha
daa
adc
jnp
fidivl
jmp
sub
cmp
push
enter
xor
paddw
cmpsl
pop
push
ret
mov
pop
repz
add
mov
dec
inc
fldt
inc
popa
push
andl
cwtl
hlt
xlat
adc
xchg
fcmovnb
push
call
xlat
adc
scas
insb
adc
mov
push
lea
inc
inc
adc
movsl
sbb
mov
pusha
mov
adc
xchg
aas
lret
dec
xor
fsubl
scas
push
push
adc
and
cmp
jnp
and
cmp
or
pop
fcomps
gs
xchg
movsl
inc
inc
adc
sarl
jae
sahf
stc
dec
es
les
xchg
xor
cmpb
push
aam
test
mov
or
fxtract
lods
pushf
push
xor
jecxz
lds
mov
adc
je
cmp
mov
shll
test
test
hlt
push
ja
xlat
cmp
and
cmp
jge
push
dec
lret
pop
cmpsb
pop
push
loop
mov
in
add
or
outsl
rcll
inc
jle
push
adc
addl
call
stos
stos
pop
fsqrt
add
ret
jae
cmc
ret
mov
mov
jg
clc
repz
pushw
loopne
rcl
xor
inc
jb
lods
mov
jg
fcomi
pop
and
push
jno
adc
cmpsb
fisubs
lcall
sbb
out
pop
addr16
cmpb
scas
rcr
jnp
pop
push
out
in
dec
movsl
popf
das
xchg
xchg
je
cmc
arpl
sbb
in
inc
pusha
cld
cli
stc
mov
loopne
mov
leave
ret
push
xorb
mov
mulb
shrl
daa
push
inc
mov
jp
mov
leave
loopne
jo
rol
inc
mov
xchg
xchg
pop
lcall
std
dec
adc
bound
or
xchg
mov
cwtl
cmp
mov
and
shrb
cmc
push
adc
out
adc
ret
push
lds
nop
mov
pusha
fs
jne
hlt
nop
movsb
frstor
dec
cmp
lret
repz
jg
ds
mov
xchg
stos
imul
rclb
xchg
jmp
mov
outsl
mov
test
or
push
jo
add
and
push
cmp
shlb
xor
or
mov
pushf
cli
sar
fidivrl
stc
xchg
xor
lods
lods
jo
in
pushf
daa
pop
sub
xchg
mov
hlt
sbb
aas
scas
popf
mov
push
mov
push
das
insl
sub
mov
imul
fidivl
shlb
xlat
mov
xlat
lret
in
je
push
push
and
movsl
dec
pop
in
sahf
sbb
mov
xorl
leave
add
fildll
lahf
mov
lahf
sar
xchg
mov
add
adc
xor
jnp
testl
sub
shr
mov
insl
aaa
mov
xor
dec
das
inc
push
inc
addl
or
call
cmp
push
sub
jle
leave
jo
movsl
mov
outsl
pop
out
jno
aaa
cltd
ljmp
mov
add
int
fwait
pop
inc
xor
sbb
sub
gs
rcll
in
jecxz
pop
add
inc
fbld
mov
mov
mov
mov
dec
subb
add
movsb
jg
pop
sub
rcr
movsb
pusha
lcall
xchg
jb
pop
and
adc
bound
xchg
stos
cmpl
scas
ret
dec
cld
inc
jmp
push
add
xorb
cmc
rol
pop
mov
adcl
mov
pop
cmp
dec
jle
mov
ret
xchg
pop
inc
pop
lock
sub
ficoms
push
shll
mov
arpl
iret
fldl2t
mov
pop
cmp
sub
fstpl
mov
xor
mov
mov
xor
lcall
pmuludq
adc
lahf
outsw
lcall
ss
imul
lods
dec
fs
test
outsb
add
xchg
and
sub
fmuls
dec
jb
push
in
pop
fs
jne
test
pop
adc
inc
mov
arpl
shlb
dec
pushf
push
pop
lock
push
adc
inc
lea
push
xchg
jecxz
je
les
mov
jge
pop
mov
sub
push
arpl
das
sbb
loop
scas
arpl
push
popf
lods
cwtl
jo
repz
nop
ds
loopne
je
push
xor
sub
inc
lods
vfrczpd
adc
xchg
jg
popa
lea
pop
mov
push
outsl
fstpt
add
dec
mov
sub
jns
scas
cmp
add
xchg
in
mov
sbb
fisttpl
adc
mov
mov
and
add
fs
pushw
mov
dec
sar
clc
jb
mov
movl
or
inc
out
ja
dec
stos
dec
mov
loop
xor
cwtl
aad
and
jge
rcl
repnz
in
les
mov
es
add
sub
xor
mov
or
cmovp
fstpl
jp
loopne
pop
push
inc
mov
aaa
jge
icebp
jbe
cltd
jno
and
adc
arpl
push
push
xlat
adc
aad
in
cmp
pusha
mov
mov
mov
movsl
popa
test
or
js
jae
test
bound
jb
fisttpl
lea
fsubrl
mov
cmp
jb
scas
call
pop
inc
jo
push
cmc
sub
xchg
rcrl
xor
cmc
jns
jp
arpl
inc
sub
adc
lret
jecxz
mov
imul
cvtps2pd
add
bound
fldenv
call
in
hlt
ss
loopne
cmp
pop
sub
mov
in
or
mov
sti
sbb
fs
mov
xchg
push
jb
test
dec
addr16
cmpsl
lds
and
shlb
mov
das
and
shr
dec
or
or
xchg
push
inc
imul
mov
sub
sub
xchg
and
ljmp
fstl
subl
lods
and
loop
loopne
sub
and
push
fdivrs
mov
and
xchg
cltd
add
mov
mov
mov
pop
add
test
adc
cmp
or
dec
jge
gs
mov
sbb
cmpsl
in
insb
test
rcll
clc
in
cld
xchg
mov
adc
cmp
pop
push
out
pop
mov
cmp
test
ss
test
stos
out
fcomps
jmp
stc
aam
cmpsl
ror
sbb
ror
cmc
sub
jge
mov
movsl
into
sub
cltd
cs
outsl
push
and
xchg
rcr
adc
mov
ds
mov
push
adc
or
xchg
ret
repnz
and
add
sub
sbb
repnz
cmc
out
std
and
xchg
sbb
test
pop
add
nop
add
push
push
sub
pop
pop
mov
cwtl
ljmp
popa
sahf
loop
cltd
js
cmc
scas
inc
xor
or
cld
mov
mov
scas
xor
add
vmread
insb
rcrb
push
adc
mov
test
jnp
or
mov
lret
gs
cmc
cmp
and
mov
test
jg
in
cld
clc
dec
add
cmp
adc
and
sbb
rcrl
cltd
xor
xor
mov
and
mov
loope
lea
popf
loopne
popf
shll
xor
xchg
outsl
in
lret
cmp
and
pop
cs
js
int
scas
sbb
out
jecxz
cmp
xchg
add
das
lret
int
hlt
ljmp
jo
lds
sahf
out
movsl
push
mov
pop
pop
stos
jne
lret
adc
inc
dec
dec
or
xchg
xor
sub
jmp
xchg
enter
and
sub
mov
cwtl
push
clc
dec
sbb
pop
adc
sub
fstps
add
mov
add
dec
inc
ror
pop
hlt
adc
icebp
mov
jg
xor
adc
adc
jno
pop
mov
add
popa
mov
and
push
inc
jbe
mov
cld
mov
fildl
inc
sub
fildll
or
xlat
sbb
sbb
mov
out
adc
cmp
ss
push
lcall
sbb
jne
or
int
lock
popa
leave
mov
and
xor
out
add
mov
fwait
and
mov
insl
sub
dec
mov
stos
test
mov
ja
aad
mov
bound
sahf
adcb
cmp
push
mov
roll
inc
and
push
dec
stos
mov
dec
daa
js
stc
lds
enter
jmp
in
shlb
xchg
mov
mov
ret
ret
sbb
dec
fsubl
push
popa
xchg
cmp
mov
inc
xor
adc
mov
jmp
adc
in
mov
ljmp
dec
sub
mov
loope
mov
jne
push
stc
sbb
call
in
mov
pop
sahf
insb
push
adc
and
adc
xor
dec
cmpsb
sub
leave
pop
adc
scas
cmovne
cltd
lods
xor
faddl
jno
mov
js
dec
stos
ljmp
mov
push
or
ss
cmc
jl
lahf
xor
sbb
outsl
inc
xlat
xchg
dec
test
jne
add
std
xor
cmp
jne
pop
dec
repz
cwtl
pop
std
xor
mov
ret
xchg
jb
in
sbb
rorl
push
add
adc
or
dec
mov
push
daa
pop
mov
aas
inc
loopne
movsl
add
cmp
add
jbe
sub
push
lcall
aas
movsl
pop
mov
loop
fs
rcrl
sub
mov
mov
dec
sub
pop
ror
popf
inc
sbb
test
or
pop
incl
fimull
out
xor
aas
fwait
xchg
sbb
add
lock
pop
mov
sti
or
jns
cmp
sarb
in
fwait
test
negb
int
lcall
lock
add
push
add
sahf
cmp
jb
cltd
pop
in
xchg
jne
test
test
xchg
lock
cmp
add
jecxz
add
and
or
xor
inc
pop
rcrl
gs
mov
push
movsl
ret
or
js
sbbl
scas
sbb
push
std
and
andl
and
andb
dec
jle
aaa
out
sub
pop
in
orl
adc
lret
or
ficompl
ss
and
out
push
pop
and
imul
repnz
fdivs
enter
loopne
out
inc
or
cmp
push
xchg
mov
cld
jp
dec
xor
decb
rcrb
cmpsb
push
insl
jo
or
out
loopne
sti
pop
leave
push
push
int
mov
adc
adc
in
xlat
orl
cmp
lcall
sti
leave
sbb
bound
jno
lock
adc
dec
addr16
popa
jle
jo
out
jae
filds
jbe
xor
movsb
add
jne
sbb
sti
sub
xchg
add
inc
lea
mov
test
pop
scas
pop
int
loopne
or
out
ret
call
loopne
sub
shrb
push
add
imul
dec
roll
xor
notl
cltd
sbb
addl
ds
or
sbbl
enter
jp
sahf
jp
scas
in
cmpsl
loope
in
push
or
or
out
rclb
jb
pusha
mov
sbbb
push
aas
outsb
fsubl
inc
dec
fldenv
pop
loope,pt
cmpsl
xorb
xor
cmpl
imul
scas
out
cmp
mov
fsubrp
push
ret
jns
ds
lcall
sbb
test
out
add
and
ret
cmp
fdivrl
imul
xor
aas
sbb
and
push
xor
imul
ror
xor
mov
xchg
or
inc
mov
loopne
mov
cld
add
insb
dec
js
aas
cld
in
sub
push
mov
pop
pushf
stos
pop
lahf
sahf
jmp
les
aaa
pop
add
loopne
jg
cli
cltd
scas
jp
sbb
xchg
mov
add
ret
daa
imul
lcall
movsl
xlat
pop
lods
xchg
psubsb
dec
arpl
and
call
and
dec
rep
popa
mov
sbb
lods
push
dec
pushf
jg
popf
mov
int3
lea
cwtl
cmp
movsb
in
lods
or
push
ja
imull
das
daa
and
test
pop
movsb
sub
and
sub
ret
push
add
nop
scas
or
in
bnd
sub
js
cmpsb
test
dec
dec
fldt
cmp
mov
push
xchg
out
test
lcall
icebp
mull
mov
sti
dec
arpl
dec
je
push
fs
mov
mov
lods
ds
mov
pop
xorb
jp
cld
mov
sahf
push
pop
in
pushf
je
push
stos
jmp
cmp
fcomi
cmp
push
push
push
aaa
xor
loop
cmpsl
aad
imul
mov
scas
cli
inc
pop
rorb
add
xchg
testb
xor
adc
xor
iret
sub
or
je
outsb
xlat
adc
pop
push
clc
stos
pusha
pop
jae
test
xor
adc
je
imul
inc
shll
xor
cltd
xor
adc
jo
dec
repz
dec
mov
xchg
mov
dec
lret
in
enter
cs
jg
es
push
add
notb
adc
sub
jns
pop
jnp
sbb
mov
movb
hlt
subl
ss
sbb
cmpsl
sbb
mov
lahf
mov
pop
in
aas
and
xor
pop
xchg
jmp
push
xor
xor
add
fsub
mov
cs
cltd
iret
ljmp
in
lea
in
fstpl
movsb
incb
movsb
jnp
push
mov
js
fstl
ja
or
jae
mov
rclb
leave
xor
es
jbe
aam
or
mov
out
or
mov
or
fwait
pop
ljmp
in
sub
ret
sahf
jne
insb
outsl
mov
push
cmp
xor
adc
mov
jae
push
inc
add
fildl
test
cli
in
loopne
ljmp
test
or
imul
dec
sub
adc
jo
xchg
imul
mov
cs
sub
sbb
mov
sbb
mov
inc
mov
jge
out
jns
pusha
dec
stos
sbb
sbb
sbb
cmc
test
or
cmp
sub
xchg
mov
mov
pop
mov
lods
push
jno
fdivl
lahf
push
mov
outsb
movsl
insb
or
test
fs
pop
xchg
outsl
mov
jg
es
cmp
or
arpl
add
mov
pop
fbld
dec
data16
mov
addb
add
push
and
adc
icebp
fiaddl
jbe
dec
push
mov
in
testl
fwait
mov
mov
pop
fildl
mov
mov
xchg
enter
sbb
xor
aas
das
xchg
stc
cld
popfw
gs
jmp
cltd
scas
test
jne
mov
pop
int
push
pop
cmp
dec
pop
imull
adc
xor
shl
or
lahf
sub
adc
call
sbb
shlb
add
mov
dec
or
push
or
add
mov
std
mov
mov
pushf
xchg
rcrb
adc
cmp
sub
or
push
test
inc
loop
pop
and
push
arpl
in
adc
sbb
lock
fiadds
mov
bound
data16
sub
ret
repz
mov
cltd
fwait
addr16
mov
pop
adc
fstpt
sahf
icebp
jae
adc
loopne
xchg
push
push
insl
fiadds
mov
fbstp
mov
jge
subb
pop
xchg
mov
or
xor
mov
and
enter
or
jnp
mov
mov
xchg
mov
push
and
cmp
cwtl
ror
inc
ret
mov
test
ret
mov
jecxz
push
cs
repz
repz
adc
pop
or
jo
in
xchg
pop
inc
dec
fmull
idivl
data16
cli
add
lds
test
mov
jnp
jbe
dec
rclb
icebp
xor
lds
movsb
push
or
mov
cmpsl
xchg
aas
mov
add
adc
jo
xchg
int3
lret
jae
les
test
inc
pop
arpl
das
jb
push
and
mov
pop
outsb
mov
movsb
cmp
jo
mov
xor
out
xchg
jle
movsb
jmp
lods
cmp
cmpl
arpl
sub
cmp
fists
pop
or
cli
mov
mov
jno
les
mov
dec
mov
sbb
test
cmp
fsubrp
jne
mov
mov
orb
jb
imulb
adc
sbb
pop
repnz
jno
popa
int3
xchg
inc
and
leave
jae
lret
mov
xor
pop
jl
jbe
cld
adc
sbb
lahf
out
call
xor
push
xor
rcrb
cmp
cmpsb
cltd
hlt
out
aaa
mov
and
fstp
ret
dec
fbstp
fsubrl
mov
popf
pop
or
cmpb
les
cmp
mov
lea
xchg
das
out
pusha
and
jo
scas
cwtl
add
and
xchg
jg
jl
cwtl
mov
push
mov
lret
pop
sub
adc
inc
add
out
jae
dec
ss
sbb
nop
and
mov
lcall
adc
sub
lcall
cmpsb
ds
dec
nop
daa
sti
or
test
jb
insb
and
xlat
stos
int
add
xlat
cmp
inc
mov
mov
mov
insl
xchg
add
jo
pop
dec
jg
dec
ja
cmp
sub
pop
xchg
cmp
mov
movsl
lret
dec
adc
jge
jge
imul
jp
and
in
cli
fmuls
test
xchg
or
inc
add
cs
hlt
and
cwtd
idivb
leave
add
imul
jo
adc
incb
mov
loopne
loopne
xor
dec
fldl
push
jmp
dec
leave
clc
aad
cmpsb
repnz
pushf
xor
xchg
ficomps
push
push
lret
push
fidivrl
test
or
push
cmp
push
pop
mov
loopne
jp
inc
and
shlb
and
pusha
iret
pop
test
loopne
inc
ds
dec
jbe
jae
pop
sbb
lods
fldcw
loope
dec
jns
jnp
inc
xchg
sbb
cmp
pusha
mov
push
into
hlt
dec
and
sbb
mov
lds
mov
add
push
imul
cmp
cli
mov
lock
cmp
jmp
mov
aam
sbb
mov
pop
out
push
mov
add
add
test
jmp
dec
sahf
lock
cmpsb
and
ret
out
cmp
push
pop
mov
inc
jbe
lea
outsb
inc
fwait
push
jo
test
sbb
in
ret
rorb
mov
xor
and
mov
inc
enter
jge
xchg
dec
rcrl
cmpsl
jp
push
cmp
mov
shrb
sahf
dec
rorl
xor
mov
das
out
data16
out
ss
inc
lock
int
sub
xchg
jae
test
frstor
sbb
fisttps
mov
pop
pop
mov
inc
cmp
adc
fisubrl
mov
rol
push
lds
out
aas
stos
int3
ss
mov
outsb
ljmp
insb
fidivs
dec
test
loope
cld
cwtl
orb
pop
mov
ss
ficoml
mov
fimuls
xor
xchg
mov
leave
mov
pop
cld
dec
cmc
pop
push
mov
xor
lea
push
push
and
jae
insb
dec
push
subl
jne
jns
inc
and
sbb
ret
push
pop
add
mov
xchg
das
adc
ljmp
ret
sbb
xor
aad
xchg
test
cwtl
cmpsl
mov
lea
imul
int3
pop
testb
push
outsb
shrl
xor
adc
sub
push
and
mov
test
cld
mov
das
rcrl
clc
fistpll
or
mov
mov
xor
pop
pusha
jecxz
push
or
dec
fidivl
stc
add
dec
push
insb
cltd
js
and
test
and
cli
pop
push
imul
outsb
xor
int3
push
test
push
gs
rorb
adc
fisttpll
popf
shll
stos
or
andl
lcall
xor
loopne
xor
addl
push
xchg
pop
in
mov
pop
push
and
adc
fs
pop
cmp
cmp
insl
sahf
out
insl
xchg
push
dec
push
xchg
aam
lcall
push
mov
xchg
inc
inc
lea
repnz
icebp
gs
pop
iret
lret
outsl
fidivrl
mov
xchg
cmpsl
lds
outsb
adc
adc
mov
out
and
insl
jmp
out
fdivl
loop
lock
jae
pop
into
cmpsb
or
xchg
inc
and
xor
add
test
lea
push
mov
sahf
sbb
pop
gs
popa
cmpb
mov
rclb
flds
outsb
fldenv
ss
adc
mov
add
xlat
out
adc
cmp
jns
fsubs
and
cwtl
imul
in
push
nop
ljmp
fbld
push
sub
xor
dec
xor
sbb
mov
jecxz
mov
cmc
loopne
shrb
ficoml
push
into
add
or
sbb
mov
aaa
mov
push
je
outsl
cmp
jmp
push
clc
shlb
jae
cmp
mov
jmp
push
int
cmc
or
inc
test
add
dec
inc
push
loopne
enter
out
roll
xor
mov
push
popa
sub
jne
in
clc
stc
mov
dec
jg
add
test
xchg
sub
mov
testl
rorl
sysenter
es
iret
jmp
cmpsl
cld
nop
test
pusha
xor
jp
fiadds
ret
sub
dec
data16
xor
and
inc
sbb
popf
xor
sub
rcrl
loopne
mov
sbb
shll
call
sti
imul
loope
mov
lea
sbb
dec
insl
or
push
andl
sub
ds
loopne
jb
out
push
mov
inc
pop
xor
pop
mov
mov
idiv
test
enter
mov
jo
xchg
dec
add
pop
inc
sbb
out
dec
popf
fnstcw
cmpsl
lcall
mov
push
and
shr
pusha
ss
popa
mov
dec
jmp
dec
pop
stc
jge
pop
cltd
jmp
or
lock
nop
test
xchg
push
jns
incb
xor
aam
mov
cmc
loop
dec
and
test
push
loopne
out
dec
jb
add
lds
movsl
push
inc
mov
jae
jo
jbe
imul
test
stos
ja
les
popf
and
xor
arpl
cmp
add
xchg
inc
out
lds
repz
mov
mov
idivl
adc
mov
lock
stos
pop
cmp
jl
adc
lret
adc
adcb
xchg
lock
repz
sbb
ss
test
ljmp
fwait
push
xor
mov
mov
sbb
fldcw
enter
cltd
mov
jne
das
add
repz
ret
or
repnz
int
push
add
or
xchg
shrl
mov
jp
sub
xor
sti
jno
cli
mov
fisubrs
xchg
adc
dec
sbb
lret
mov
icebp
shll
mov
pop
push
mov
jns
movsl
fdivrl
and
dec
sbb
jns
push
xchg
add
dec
sub
add
addr16
fnstcw
adc
int
adc
into
pop
dec
js
or
movsb
jp
in
or
push
xchg
push
js
or
loope
and
xlat
push
insl
pop
mov
mov
cltd
push
lahf
jmp
fcoml
repnz
xchg
sti
insl
xchg
popf
or
neg
test
repnz
push
divb
and
repz
jge
int3
cmp
out
popf
lods
push
inc
aas
sub
addr16
faddp
pop
cwtl
mov
insl
movntps
adc
negl
xchg
sbbl
jnp
lock
es
xchg
push
aad
add
ss
cmp
cltd
push
mov
dec
inc
ss
je
mov
loope
and
gs
and
xchg
out
cltd
pop
andb
in
or
cmpsl
jmp
mov
sbb
xchg
inc
cwtl
cmp
sub
scas
test
push
fisubrs
mov
repz
in
mov
jmp
pop
ffreep
sbb
dec
das
pop
in
cmp
xor
sub
jp
sbb
sbb
cmp
adc
mov
ds
fs
aad
inc
mov
push
adc
add
adc
stc
aas
jo
jb
fcmovnu
dec
popf
icebp
fs
xchg
fsincos
adc
js
std
int
pop
xchg
pushf
add
cmp
aas
adc
hlt
inc
and
jge
push
fwait
dec
pop
test
pop
sarb
insb
rorl
enter
push
mov
aad
les
and
add
mov
xlat
rolb
jae
or
or
popf
or
xchg
lret
pop
adc
mov
or
js
aaa
std
daa
in
xchg
call
fsts
ret
mov
fucomip
test
xchg
push
daa
neg
mov
stos
inc
xchg
movsb
cmp
pop
adc
jg
xchg
xor
xor
cmpsb
test
jg
roll
or
mov
cmp
add
add
xchg
adc
xor
scas
pop
jno
mov
test
inc
adc
xchg
add
and
jo
xor
pushf
add
aas
inc
aaa
push
xor
jg
loope
testl
push
or
adc
push
fcoms
orb
xor
hlt
mov
ficoms
push
cmp
scas
cmpsl
pop
lahf
xchg
sbb
popa
lret
pop
sbb
push
imul
nop
push
xor
int
out
sbb
repz
popa
js
push
fs
js
xlat
sub
leave
jl
lock
idivb
andl
add
pop
xchg
pop
dec
cmp
mov
call
inc
mov
or
in
jne
cld
inc
cmp
push
ret
cmc
dec
cmp
testl
inc
pusha
repnz
xor
ret
stos
leave
insb
push
shll
mov
inc
push
xor
push
sbb
scas
and
pop
cmp
cmp
pop
fldl
add
xchg
or
mov
push
dec
in
lret
in
push
cwtl
cwtl
ret
clc
dec
stos
add
push
lahf
into
xor
push
lds
mov
xor
dec
pop
push
into
out
jle
pusha
mov
popa
jge
jg
cmpsl
adc
push
jg
pop
adc
or
push
xor
inc
cmp
aas
fnstsw
xchg
leave
fldl
jo
mov
sti
sub
int3
mov
sbb
mov
in
ds
in
leave
jo
jmp
aas
fmuls
lahf
pop
mov
cli
outsb
sar
in
stos
dec
bound
scas
adc
orb
addb
mov
test
imul
mov
or
jle
xlat
arpl
xlat
mov
cmp
or
xchg
cmpsb
repz
add
mov
jmp
xchg
nop
pop
cld
sbb
aad
mov
bound
adc
cmp
popa
and
push
jae
push
inc
fmuls
jge
cmc
nop
loop
fcoms
inc
ffreep
test
sub
loopw
push
enter
jb
push
fs
mov
roll
mov
mov
stos
movsl
mov
ret
mov
packssdw
jbe
cmpsb
cld
inc
repnz
adc
mov
push
outsl
out
push
mov
sbb
bound
test
movb
hlt
mov
pop
mulb
adc
pushf
incb
scas
add
shll
rorb
rcrl
data16
add
cmpsb
pop
movsb
jmp
aaa
in
test
push
loopne
icebp
pop
sbb
cs
lcall
addb
aam
pop
or
imulb
cmp
mov
movsl
lods
cmpsl
ja
jl
push
mov
shl
fstp
dec
sarb
pop
sub
push
push
sahf
xor
adc
cs
mov
jecxz
lret
fs
xchg
mov
dec
mov
cmp
jbe
hlt
push
faddl
jge
dec
daa
and
push
push
hlt
sub
out
out
push
xchg
jl
in
fwait
mov
das
ror
xchg
sbb
cmp
mov
bound
push
cmpl
das
jp
mov
sub
dec
xor
fld
inc
sub
and
or
sti
xor
call
push
mov
cmc
jnp
pop
aaa
fldt
or
xchg
fs
jne
mov
movsb
mov
outsb
ds
mov
sbb
test
ss
lcall
jmp
xchg
xor
ja
pop
fcoms
jb
mov
jmp
xor
movsl
mov
cmp
lcall
cmp
into
ljmp
jmp
mov
add
andb
inc
or
data16
mov
pop
pop
ret
xlat
xchg
rcll
das
and
outsl
jns
je
jecxz
fstl
cmpsl
lret
out
ret
ret
fsubs
sbb
cli
das
mov
adc
cmpsb
add
sahf
popl
inc
cmpsb
lock
pusha
cmpsl
mov
out
and
rcl
inc
iret
int
addb
sbb
sbb
sbb
xor
jno
jmp
cmp
out
shrb
jb
push
mov
mov
hlt
inc
mov
push
adc
out
inc
adc
push
addb
pop
aaa
repnz
jge
test
ss
push
js
or
lods
and
lock
mov
xchg
test
pop
sbb
loopne
fcomip
das
mov
loopne
jb
cmp
fimull
faddl
sub
lcall
jle
push
jae
mov
jmp
fidivl
stos
xchg
jbe
test
xor
and
fisubrl
mov
mov
sti
lea
xchg
mov
hlt
xchg
cwtl
push
pop
pushf
mov
lcall
sahf
in
cmp
stc
adc
aad
fwait
push
sbb
sti
jp
cs
outsb
cmp
fwait
into
sbb
cld
mov
and
mov
loop
dec
sbb
ss
ret
cmpsb
shll
and
ret
pop
pop
imul
pop
mov
xchg
enter
push
mov
call
lret
shll
mov
outsl
push
adc
pop
push
cmp
lcall
insl
imul
pop
and
push
int
inc
add
sbb
int3
jbe
nop
sbb
pop
and
idivl
or
pusha
or
xor
jle
xor
aam
std
movsl
sbb
mov
js
jns
xchg
push
fsubr
push
cmp
sbb
push
pushf
or
cmpsl
mov
subl
rcrb
jo
repz
repz
addb
push
std
xor
adc
shl
adc
ret
lock
fwait
jge
movsl
pusha
lods
gs
pusha
mov
xor
push
in
divl
adc
dec
in
jns
ja
mov
sbb
dec
mov
and
pop
push
jbe
jl
les
and
xchg
jmp
xchg
mov
jge
jmp
roll
jo
rcrb
mov
or
mov
clc
sub
pop
jnp
das
fdivl
mov
cltd
mov
cmp
mov
cmc
faddp
xor
fsubl
pop
arpl
aad
pop
mov
mov
mov
inc
push
mov
and
mov
dec
pop
idivl
aaa
sub
push
outsl
loope
lret
and
test
mov
cmp
pop
mov
pop
inc
mov
mov
insb
imul
imul
int
outsb
push
adc
pop
shrb
adc
and
dec
pop
add
xchg
pop
aas
push
and
or
add
repz
mov
jp
sub
popa
xchg
in
cmpsb
daa
mov
jl
test
inc
xchg
or
lods
shl
imul
les
inc
sub
sbb
pop
lock
cs
dec
dec
fisubs
movsl
dec
add
bound
push
sbb
cli
jb
inc
rcrb
lods
inc
gs
jmp
call
push
fwait
cmc
dec
pop
xchg
cmp
mov
xchg
pusha
pop
jne
pop
dec
in
sub
sbb
les
mov
jb
outsb
xor
aaa
insb
add
push
adc
mov
out
lahf
pop
mov
sub
add
pusha
test
lret
sub
sub
ret
pop
rclb
fcmovnb
pop
inc
dec
andl
stos
mov
rcrl
pop
dec
shll
or
rcrb
test
test
loopne
shlb
out
fistpl
jl
fs
fisttpl
cwtl
mov
out
sbb
adc
outsb
mov
push
icebp
jle
jge
iret
inc
out
cmp
mov
jecxz
ss
and
or
add
mov
test
pop
xor
mov
cmp
mov
int3
stc
dec
xchg
fwait
icebp
int3
je
divl
mov
and
adc
dec
lcall
je
xor
mov
xchg
in
mov
lods
int
mov
mov
fdivrl
aas
or
roll
xchg
in
lods
xchg
mov
sub
test
push
adcb
fstpt
stc
cltd
cmc
pop
add
add
aas
xor
pop
xchg
mov
je
fcoml
xor
and
push
in
mov
xor
dec
adc
inc
ja
add
xchg
mov
jp
fadd
xor
mov
jecxz
push
mov
jns
lret
xchg
mov
xchg
out
fldt
mov
lret
int3
pop
add
sbb
adc
sub
mov
int
push
add
and
arpl
fimull
xlat
xchg
push
cmp
fbstp
les
arpl
loop
scas
dec
rclb
add
cmpb
mov
lcall
popa
and
adc
inc
test
lods
adc
imul
pop
xor
pop
xchg
xchg
add
sbb
testb
in
dec
frndint
cmp
insb
pop
pop
rcrl
mov
xor
pop
scas
mov
sbb
inc
mov
shl
push
xchg
xchg
cmp
jl
cmp
xchg
inc
add
lods
cmp
clc
inc
cmp
bound
rcr
loope
popa
push
adc
ljmp
jle
arpl
jecxz
or
test
jnp
pushf
xor
mov
rcrl
scas
push
push
jl
xlat
gs
sbb
adc
sub
jbe
pushl
nop
shl
push
outsb
dec
popf
mov
sub
icebp
in
mov
sub
cltd
sbb
add
jle
repnz
notl
dec
push
or
adc
divl
loop
call
xor
hlt
test
popa
roll
push
rcr
arpl
and
test
inc
rol
les
push
pop
daa
xlat
enter
push
dec
ficomps
popf
decb
loop
in
loopne
dec
jmp
addr16
and
outsl
push
dec
sarl
in
push
mulb
xchg
je
jns
jne
xacquire
adc
xor
inc
cld
in
cmpsb
sti
push
xor
inc
in
ret
loop
add
mov
dec
rcll
mov
push
in
jg
lods
testb
test
or
mov
mov
lret
les
cli
out
faddl
lock
icebp
ja
mov
cmp
push
rclb
int3
pusha
adc
push
cmp
loopne
mov
or
jns
sarl
repz
adc
push
mov
mov
dec
xor
jecxz
mov
xchg
in
movsl
and
xor
lea
and
adc
dec
das
lcall
nop
xor
mov
in
gs
mov
gs
pop
call
push
jne
push
adc
xor
mov
data16
lahf
mov
inc
pop
xchg
cmpsl
pusha
repnz
mov
fsts
and
or
pop
test
xor
xor
test
insl
icebp
notb
je
lahf
dec
adc
mov
xchg
mov
data16
clc
cld
dec
addr16
pushl
out
leave
cmp
and
xlat
das
jo
popa
sbb
inc
fimull
mov
shl
test
or
or
dec
push
mov
xchg
pop
aaa
decb
mov
jecxz
xchg
cmpsl
inc
mov
mov
sbb
movsl
loopne
mov
xor
sub
mov
test
sahf
ret
pop
jnp
cmpsl
inc
pusha
sarl
ja
xor
iret
xchg
js
testb
sbbl
cmp
cmp
bound
pop
das
mov
pop
test
shl
scas
push
dec
popa
push
add
xchg
pop
jae
out
ss
push
fs
pushf
sub
fdiv
dec
test
mov
iret
sahf
push
andb
movsb
jmp
xor
jge
xor
push
push
sbb
add
fs
fistps
xorb
in
pop
dec
dec
pop
addb
jmp
out
jmp
inc
xlat
pop
mov
out
sub
mov
inc
out
cmpb
and
jo
mov
mov
ss
std
js
or
leave
jno
fmuls
add
jo
push
sub
dec
jl
out
pop
cmp
cbtw
pop
mov
out
pop
sbb
push
push
jnp
push
outsl
add
out
dec
cmc
imul
lea
pop
cmp
push
dec
jle
rcrb
mov
loope
pop
mov
imul
scas
mov
leave
sub
gs
divb
out
in
and
stos
mov
repz
lret
xchg
xor
popf
call
ret
sahf
inc
jp
push
jne
inc
adc
and
xor
mov
lods
or
push
dec
push
into
pop
add
flds
pop
push
jo
push
pushf
daa
mov
jns
jle
je
inc
cwtl
jbe
push
sub
fisubs
cmp
dec
js
fidivl
mov
xchg
std
leave
add
mov
test
sbb
mov
test
xor
repz
jle
add
xchg
movsb
jns
lea
push
mov
loop
or
inc
aas
add
and
pop
dec
cmc
iret
mov
mov
jecxz
iret
mov
lret
rol
jb
shr
inc
sti
scas
ret
dec
mov
pushf
aaa
in
dec
repz
push
inc
addr16
js
push
mov
aas
outsl
daa
pop
and
add
into
mov
js
add
lods
addr16
lahf
dec
lret
enter
imul
or
std
stos
sahf
and
and
mov
xchg
xchg
and
push
aas
outsl
int
jg
pusha
filds
sub
fwait
inc
or
jmp
jecxz
cmpsl
cmp
shlb
dec
ds
stos
dec
sbb
movsl
jbe
dec
xor
aaa
lret
ficoml
mov
fistpll
push
or
mov
lods
cmpsb
je
jp
test
in
cmpsl
mov
pop
cmpsl
dec
and
fstpt
movsl
or
ss
inc
inc
sbb
xchg
cmc
pop
aas
pop
imul
in
jne
adc
cmp
mov
bound
push
xor
out
adcb
fidivs
push
adc
nop
cmp
popl
or
dec
sbb
and
fstl
in
nop
lds
mov
pop
jg
imul
mov
xor
xchg
js
jns
imul
rorl
out
lods
shlb
pop
pushf
movsb
out
xchg
lahf
sbb
adc
dec
sub
mov
pop
add
lcall
fcoml
jecxz
enter
adcl
xchg
and
push
decl
mov
idivl
cmp
lods
clc
pop
mov
sbb
jns
jg
dec
sub
movsl
jnp
mov
out
dec
iret
movsb
test
lcall
pop
loope
cmp
push
pop
xchg
inc
push
mov
mov
push
push
ret
push
pop
xchg
xchg
aaa
std
enter
imul
add
pop
cmp
push
loop
push
lret
jne
inc
in
arpl
out
fs
shlb
add
sbb
call
push
lea
add
add
fisubrs
or
adc
mov
inc
mov
add
addr16
or
xor
or
fsts
jbe
imul
in
cld
push
cmpsb
insl
dec
inc
stos
out
in
loope
xchg
movsl
jge
sti
lea
pushl
sub
and
jp
lods
or
ret
adc
cli
jne
adc
xlat
int
mov
sub
pushf
xchg
enter
insb
dec
iret
test
lea
xor
push
inc
mov
enter
mov
sub
mov
jae
push
cmpsl
imul
mov
pop
cmp
mov
adc
rcrb
pop
aam
push
xchg
test
ljmp
xchg
inc
mov
popa
xchg
cmp
xchg
inc
repz
jno
dec
or
aas
and
adc
or
les
enter
ljmp
cmc
cmp
xchg
mov
cmp
mov
sbb
or
insb
in
das
mov
jmp
leave
addr16
dec
and
add
sbb
insl
mov
mov
inc
cld
int
jg
mov
rclb
jmp
lods
sub
or
std
mov
loope
scas
jle
inc
xorl
jae
inc
fisubs
jg
cmp
pushf
dec
ja
sahf
dec
lahf
cmp
outsb
dec
sqrtps
scas
pusha
shrb
ljmp
xlat
shr
pusha
subb
test
pusha
movsb
fcom
rolb
sbb
aas
jo
mov
lea
add
clc
cli
das
jne
outsl
mov
iret
in
addr16
lock
inc
cld
insb
jo
sbb
lret
jg
mov
subps
push
dec
hlt
xchg
mov
add
test
ds
mov
add
js
das
adc
movsb
dec
push
push
roll
js
and
ljmp
jne
daa
fstl
scas
and
adc
fstl
movsb
sub
lea
pop
std
addl
cmp
filds
cli
cmp
test
cmpsb
jle
stc
xchg
dec
dec
cmpsb
and
adc
pop
ss
mov
mov
mov
ljmp
test
lods
sub
mov
or
adc
lahf
and
add
test
in
mov
stos
jle
xchg
scas
pop
mov
sbb
not
pop
call
xchg
pusha
add
mov
mov
sub
mov
jo
add
std
es
pop
fimull
pop
es
in
cmpl
fsubr
xchg
pop
jae
xlat
xchg
int3
hlt
dec
ret
sahf
jne
push
test
add
jbe
xor
fidivrs
jmp
icebp
lods
and
popf
out
mov
stos
out
mov
xor
scas
push
lods
pop
add
repnz
push
loope
sbb
aaa
ret
ret
mov
lea
pop
and
cmc
adc
lret
jo
rorb
sbb
movsl
int
movsl
outsb
sub
cmp
fidivrs
sbb
inc
cltd
adc
insb
and
das
xor
dec
popf
ss
insl
mov
xor
and
cmp
cmpsb
push
hlt
jg
popf
lret
adc
dec
sti
adc
repnz
ss
push
xlat
xor
cmp
call
push
std
dec
push
dec
jbe
rcr
imul
lds
push
mov
jo
pop
es
pop
inc
push
in
inc
loope
test
imul
shlb
push
mov
xor
out
stos
mov
adc
adc
sub
mov
or
lahf
mov
sahf
fwait
sub
bound
ljmp
mov
jecxz
mov
push
sahf
sub
inc
imul
icebp
mov
aam
arpl
sti
jno
fldenv
push
rcll
icebp
sbb
push
rorl
mov
push
ja
testb
pop
insl
push
mov
mov
stc
dec
test
pusha
cmp
mov
jne
imul
orl
and
sbb
sbb
les
aam
cmp
mov
xchg
fildll
dec
sub
xchg
jo
lea
cmp
sub
xlat
adc
xlat
das
sbbb
cmp
add
mov
pusha
cs
add
and
mov
repnz
inc
xor
mov
ljmp
dec
and
mov
sub
pushf
mov
outsl
movsb
movsl
jg
push
push
jge
inc
fisubl
sbb
dec
cmpsb
jo
dec
cmp
pop
cmpb
xor
ljmp
cmp
jnp
mov
jns
push
xlat
pusha
mov
stos
fisubl
jl
push
fnsave
repnz
sbb
sarl
lret
inc
shlb
pushf
test
lahf
push
sub
add
lods
das
loope
popa
inc
scas
test
ficoms
push
mov
lock
mov
xlat
push
movsl
inc
stc
test
clc
jae
js
es
or
xchg
in
jne
mov
dec
fdivl
mov
aaa
cli
jb
roll
cli
dec
mov
lock
addr16
orb
pop
mov
mov
inc
xor
jecxz
add
xchg
xchg
jno
movsb
jle
in
arpl
push
or
cltd
movsb
daa
int
mov
mov
jecxz
xor
bound
pop
sub
cmpb
add
mov
push
pop
pushf
frstor
xchg
mov
xor
out
xlat
das
mov
das
add
dec
cmc
imul
movsl
repnz
int
push
les
repz
or
pop
addr16
inc
ret
push
and
mov
mov
pushf
push
fstpl
xchg
enter
js
adcl
mov
dec
push
mov
sti
inc
scas
dec
pop
movsb
in
mov
nop
call
ret
or
mov
pop
mov
mov
shrl
mov
inc
xchg
daa
fstpt
lret
jbe
scas
in
or
add
icebp
jl
stos
mov
inc
pop
mov
mov
xlat
dec
inc
ss
adc
sbb
xchg
dec
dec
pop
mov
add
mov
mov
sbb
cmc
add
inc
adc
stos
push
jns
xor
fisubs
fbld
in
pop
push
cld
cmp
jb
movsl
arpl
push
lcall
cltd
mov
dec
ret
jno
outsb
push
xchg
mov
stos
adc
ret
shlb
aad
or
sarb
cs
mov
push
scas
sahf
mov
adc
nop
inc
lahf
mov
negl
pop
xchg
cwtl
xchg
cmp
push
cmpsb
jbe
mov
pop
xchg
sbb
xchg
daa
clc
mov
ret
clc
jbe
mov
pop
dec
mov
fwait
inc
pop
jmp
adc
cld
xor
lea
addl
ss
dec
int3
stos
icebp
movsb
scas
xchg
inc
adc
movsb
sarb
ja
sbb
cmpsl
imul
minps
test
scas
pop
roll
cli
push
cmovg
out
push
xchg
push
outsl
pop
push
popa
hlt
outsl
lret
inc
ja
enter
inc
sbb
push
cmp
pop
imul
popf
inc
pop
fidivrl
movsb
mov
or
cld
add
in
movl
push
notl
test
adc
cmp
cwtl
test
xor
sti
sbb
int
adc
andb
mov
jecxz
inc
or
mov
fwait
mov
mov
or
pop
jge
outsl
inc
inc
jge
cmp
cmp
fidivrs
shll
das
dec
push
in
in
emms
and
push
mov
add
mov
jecxz
sbb
pop
out
sub
xchg
in
enter
ret
dec
lods
and
cmp
or
mov
push
aam
inc
mov
aaa
aas
hlt
add
jne
xchg
call
jecxz
fucomp
adc
and
inc
jmp
xor
ret
cld
repz
scas
adc
into
icebp
sbb
push
xor
int
pop
fbld
push
xchg
mov
push
xor
lods
or
pop
rcr
xchg
popl
les
push
xchg
mov
popf
addl
in
popa
pusha
mov
xchg
stos
xchg
movsl
cltd
stc
out
lds
inc
cmpsb
movsl
cmp
pop
insl
mov
adc
jns
jnp
sbb
test
jmp
xchg
mov
ja
test
mov
shlb
push
les
cmp
pop
imul
imul
sub
into
or
aaa
cmp
mov
js
movsl
loopne
mov
in
dec
inc
ret
sub
cmc
lret
mov
pop
add
in
std
or
push
shrb
cmp
daa
lcall
into
mov
cmpsb
popa
xor
or
aaa
int3
pushf
rol
lret
jmp
mov
test
loopne
es
sub
lret
jp
adc
sub
arpl
loop
enter
lock
addr16
fistpll
divl
andl
lcall
loopne
push
and
mov
and
xchg
and
insl
cli
pop
cwtl
call
insb
aad
test
dec
mov
and
loop
dec
movl
jnp
sub
xchg
pop
fiaddl
lds
int
pop
clc
cmp
mov
mov
fs
shll
cwtl
sahf
xor
mov
test
xor
lahf
test
out
ss
arpl
cmpsl
jmp
sahf
cmp
cmpsb
insb
mov
nop
mov
dec
jp
push
ret
push
mov
sbb
xchg
pop
out
imul
mov
mov
sbb
popa
imul
xchg
aaa
outsl
xor
fistl
xchg
shl
outsb
mov
xor
xor
mov
inc
inc
and
out
and
outsl
mov
mov
insl
inc
mov
push
pusha
stc
xor
push
xchg
add
into
notl
mov
icebp
jl
jbe
and
push
or
push
rcl
leave
pop
ss
test
push
xor
sarl
dec
stc
adc
cmp
testb
cwtl
std
add
sahf
test
push
out
xor
sbb
push
inc
pop
sub
fnsave
sub
ror
sbb
jbe
mov
mov
jno
mov
outsb
pusha
cmp
icebp
out
mov
fwait
popf
and
pop
jl
divb
xchg
pushf
sbb
xor
sbbb
sbb
and
clc
lahf
pop
mov
repnz
outsb
addr16
test
dec
loope
adc
fs
rcrl
mov
sbb
mov
mov
add
rclb
mov
sti
sub
mov
mov
cmpsl
mov
popf
lret
mov
nop
adc
or
dec
add
incl
mov
and
pop
imull
jne
xchg
gs
cli
lock
lea
fcomps
jnp
jno
mov
stc
mov
scas
inc
cli
lahf
jb
dec
push
cmp
dec
insb
push
popf
push
cld
cmp
push
jne
mov
insb
fisubrs
repnz
test
mov
lcall
cmp
arpl
loope
and
cwtl
shll
sbb
sbb
sub
cmp
xchg
pop
call
push
aam
out
or
js
in
loopne
fsubrp
mov
aad
dec
lds
imul
xor
fsubl
cmp
sarb
lods
idivb
int
push
cmp
inc
sbb
xor
pop
cmp
leave
nop
inc
ret
push
cld
fldl
out
inc
and
add
scas
popf
and
fucomi
xor
loopne
xchg
xchg
test
mov
cmpb
aad
add
imul
xchg
stos
les
jg
mov
es
mov
sti
cmc
ss
pop
or
roll
mov
inc
ror
push
addl
pop
cmpsb
xchg
dec
dec
filds
bound
xchg
xchg
jnp
pushf
mov
add
adcb
std
mov
pusha
repnz
and
xchg
in
enter
aam
fldenv
sub
les
mov
stos
sahf
add
stos
loope
aam
test
cmpsb
xor
movsw
xchg
int3
sbb
repz
mov
adc
jle
or
cwtl
cmp
push
nop
in
popf
sub
leave
xlat
shrb
jb
inc
mov
xchg
aad
sub
jns
and
dec
enter
imul
mov
mov
arpl
mov
orb
bsf
cmp
jae
stc
mov
xchg
cwtl
and
mov
lods
mov
lret
pop
dec
dec
inc
adc
js
mov
add
push
add
xchg
jp
lock
test
out
jge
xor
dec
sbb
int
cwtl
adc
inc
and
pop
cli
and
dec
pop
mov
jo
mov
sbb
push
in
or
loope
mov
sbb
xchg
jle
sbb
sub
shrl
fs
loop
daa
xchg
fdivrs
and
lahf
jb
loope
cwtl
insb
pop
push
sbb
xor
dec
js
js
or
cli
ja
lods
cmp
pop
push
adc
idivb
fstpt
inc
imul
iret
pop
cltd
dec
xchg
push
loop
sarb
pop
mov
xchg
pushf
pop
rolb
mov
push
nop
out
push
iret
ljmp
mov
out
mov
xlat
loop
lds
test
xchg
rcrl
mov
lret
xor
lock
mov
mov
mov
movsb
mov
out
in
aam
mov
add
adc
movsb
sbb
dec
pop
add
rorl
bound
and
fmuls
jns
cmp
xor
mov
pop
fwait
bound
sti
and
and
add
test
ret
and
jo
inc
push
roll
sbb
inc
jl
lret
push
add
sbb
cwtl
xchg
test
nop
cmp
and
jbe
cmp
mov
clc
je
les
scas
fnsave
xchg
lock
shrl
mull
jl
cld
fs
in
xchg
decb
sub
xor
mov
fucomip
sub
daa
or
inc
adc
pop
and
cmpsb
dec
and
mov
cmp
mov
pusha
or
add
sti
cmp
jb
add
mov
mov
in
xchg
fwait
lahf
mov
mov
mov
loop
sbb
cmpsl
mov
scas
notb
jg
ds
inc
push
jo
mov
mov
sub
loop
out
mov
movsb
xchg
xchg
clc
sbb
les
jg
gs
mov
in
adc
call
fs
lds
in
lods
aas
jne
cmp
in
jp
push
movsb
adc
cmp
pop
cltd
jg
cmpsb
mov
sub
stc
leave
out
pusha
pop
jp
add
mov
xor
idivl
push
loopne
push
in
nop
xor
adc
push
aad
xlat
sbb
mov
xor
dec
cmpsb
adc
outsb
mov
xor
and
push
inc
jge
sahf
pop
ds
rcrb
int3
push
icebp
push
mov
shlb
xchg
mov
test
xor
sahf
sub
xorl
pop
sbb
mov
and
mov
test
sub
rclb
outsb
leave
insb
or
jnp
adc
sbb
push
mov
mov
dec
adc
mov
and
leave
incb
iret
mov
xor
dec
gs
add
mov
shlb
jo
lahf
sbb
popa
stos
inc
xlat
rcll
fbld
dec
call
dec
fisttpl
adcb
add
pop
sarl
rcrl
inc
jae
call
sti
into
test
mov
fidivrs
add
inc
xchg
lahf
popf
je
hlt
xlat
xorl
jo
mov
jp
push
in
es
dec
xor
addr16
pushf
js
lods
clc
das
push
cmpb
adc
push
out
mov
fsubl
stc
out
jmp
xchg
pop
test
push
repz
and
push
data16
movsb
mov
mov
out
into
push
xor
fnstenv
pop
test
jmp
loopne
out
cmpl
in
cmp
shr
add
and
movsb
push
rol
add
pop
sub
das
xchg
rcrl
cmpl
pushf
pop
je
jmp
fwait
cmp
js
jnp
mov
data16
test
dec
int
sub
sbb
cmp
divb
push
pop
ret
jmp
xor
inc
ss
rcrl
mov
stc
add
rolb
sahf
add
outsb
add
fistps
dec
adc
mov
inc
add
jl
adc
mov
cmc
data16
fimull
leave
nop
ds
xor
mov
dec
sbb
push
and
mov
pop
lcall
jge
fstl
out
out
xchg
sub
leave
add
lods
mov
out
xchg
lea
mov
jns
dec
daa
int3
aaa
imul
je
movl
daa
sbb
dec
mov
add
dec
lret
and
jno
iret
fs
cmpsb
rcl
inc
imul
insl
dec
insl
inc
jae
push
xchg
adc
dec
fildll
lock
loop
add
jmp
hlt
pop
mov
xor
call
inc
or
outsb
add
jle
push
push
pop
inc
jno
inc
cmc
mov
sub
pusha
dec
ret
mov
and
pmulhw
in
cmpsl
sbb
push
cltd
shlb
jp
xchg
cmc
stc
mov
loopne
sub
bound
movsl
sbb
jp
testl
out
jge
lods
outsl
fistpll
xchg
adc
jmp
pop
push
xchg
inc
or
popf
movsl
lods
nop
cmp
mov
sbb
mov
inc
lods
and
dec
lcall
stos
repz
sbb
push
pop
pop
mov
add
xchg
test
aad
adc
xor
les
fs
call
push
inc
mov
xchg
mov
adc
jmp
mov
mov
lret
jle
push
xchg
push
cmp
or
les
repnz
and
push
xchg
inc
das
or
cmpb
mov
aaa
push
enter
lcall
mov
inc
fcoms
adc
xchg
sub
mov
mov
mov
cmc
bound
fwait
or
out
mov
xor
out
clc
stos
inc
or
inc
addr16
ret
cmp
int
std
xor
in
push
cmpsb
lcall
mov
mov
lock
out
mov
fildll
add
sarb
adc
fwait
add
pop
dec
xchg
clc
inc
shlb
in
mov
ljmp
test
mov
xchg
sbb
into
stos
adc
sbb
notl
movsb
mov
dec
lds
fcmovbe
sbb
test
fcmove
out
jnp
hlt
pop
aad
fwait
xchg
pushf
xor
adcb
fldt
lahf
fs
cmp
das
ret
jmp
das
cmpsl
ja
iret
inc
jg
scas
test
test
add
mov
xchg
imul
adc
iret
push
xchg
into
jmp
cmpsb
clc
out
dec
pop
pop
sti
fs
loopne
into
sub
sbb
inc
mov
dec
xchg
xor
movsl
push
xchg
ja
push
cli
in
push
sub
pop
cwtl
or
mov
fsubrl
and
mov
into
insl
dec
xor
xchg
lods
sbb
fdivs
xchg
mov
push
std
nop
lahf
mov
in
push
int
xchg
ret
enter
js
adc
out
aam
mov
inc
jecxz
cmp
adc
push
fcoml
and
cmp
or
adc
jo
adc
lcall
imul
ljmp
cmc
fcomps
out
loopne
jb
fwait
sbb
mov
fdivrl
push
je
lods
jmp
lods
sbb
or
out
sub
add
push
test
mov
sub
xchg
cwtl
jno
mov
rcll
mov
movsl
rcrb
and
in
aad
add
fs
std
popl
and
shll
sub
pop
mov
lods
xchg
daa
daa
mov
sub
iret
ljmp
mov
into
inc
aam
sbb
repnz
sub
xchg
lds
inc
xchg
and
mov
ret
inc
dec
aaa
cs
cmp
mov
outsl
mov
and
scas
in
cmc
pop
cmp
xchg
in
repnz
xchg
out
movsb
mov
gs
sub
ficoms
cltd
mov
cmc
jg
out
pop
mov
jle
out
addb
and
mov
mov
push
sarl
jl
mov
xchg
test
pop
cld
add
xor
sub
jae
sub
jbe
inc
fwait
add
pop
je
pop
jp
adc
mov
jno
mov
adc
repnz
in
mov
mov
cld
xchg
inc
mov
out
mov
inc
inc
or
lods
cmp
js
sub
and
push
pop
jmp
mov
adc
mov
jnp
fiaddl
xchg
dec
and
dec
cmpsl
xchg
test
jns
cmp
sub
inc
sti
mov
in
cltd
xchg
iret
push
cwtl
pushf
push
xlat
xor
adc
jecxz
bound
outsl
jp
cmp
and
decb
shlb
cmp
sub
imul
add
push
dec
pop
leave
mov
insb
add
mov
arpl
sub
push
push
nop
mov
xchg
push
pop
lods
into
insb
sub
inc
loop
jp
xchg
cli
fmul
jne
xchg
lcall
push
jecxz
jp
cmp
pop
nop
divb
jno
push
leave
cwtl
push
into
xchg
data16
pop
mov
aas
mov
xorl
sbb
mov
dec
testb
loope
pop
in
jns
lods
jmp
sbb
mov
inc
dec
and
mov
add
add
cs
xchg
mov
pop
icebp
jecxz
stos
dec
clc
inc
cltd
and
stos
sbb
adc
xchg
inc
pop
aad
repz
mov
lds
mov
sahf
pop
sbb
jecxz
addr16
test
push
fimull
mov
sub
xchg
cwtl
sbb
loopne
mov
push
or
inc
dec
int3
icebp
xchg
cs
leave
loope
leave
mov
sub
inc
test
fstl
jle
in
fcomps
lcall
mov
dec
and
dec
xor
jle
into
jo
mov
inc
dec
mov
mov
dec
cli
repnz
jne
inc
into
les
mov
jae
xor
mov
inc
es
es
jnp
push
pop
pop
xor
mov
push
pop
mov
es
iret
shl
mov
cmpsl
or
jo
lret
scas
in
pop
lods
jmp
inc
fwait
sar
ret
xchg
in
imul
loopne
xchg
inc
xor
sbb
pusha
dec
fcompl
pop
mov
mov
popa
jno
and
in
incl
aaa
movsb
lods
xlat
jns
pop
outsb
sbb
dec
lret
jp
inc
mov
sahf
push
imul
jp
mov
inc
mov
ret
sti
or
sub
es
pop
sub
jo
adc
lret
addl
pop
dec
cmp
xchg
mov
xchg
mov
sub
adc
mov
out
cwtl
inc
ret
pushf
das
push
imul
inc
fimull
mov
divl
scas
stos
push
stos
js
xchg
aad
les
lahf
xor
testl
bnd
iret
sub
scas
jo
dec
movsl
fnstsw
add
lds
jae
adc
sahf
sbb
out
jns
scas
xor
xchg
add
sbb
pushf
xchg
rcrl
jge
xor
nop
clc
sub
inc
shll
xor
cmp
stos
nop
fcmovne
in
das
sahf
lret
sbb
sbb
mov
imul
or
ret
inc
out
pop
out
in
push
add
push
lret
cltd
adc
cmp
cmp
fisubrs
or
iret
mov
outsb
adc
xchg
or
or
jl
cld
cmp
lock
adc
or
popf
in
push
push
and
ljmp
shlb
pop
inc
outsl
xor
adc
jge
inc
push
fimuls
jg
pop
pop
push
rcr
mov
sub
mov
jns
roll
mov
out
stos
jg
xor
cmp
cwtl
negl
cmp
sbb
mov
test
cli
cmp
pop
and
mov
mov
inc
cmpsl
js
inc
ud2
inc
int
in
in
icebp
sbbb
mov
clc
daa
pop
xor
stos
movsb
dec
adc
sbbb
add
aas
mov
fnstcw
fcmovnu
imul
adc
cmp
bound
jp
sub
mov
fcompl
push
fidivl
in
loop
xchg
popa
mov
xchg
sub
cmp
mov
jmp
mov
xchg
imul
icebp
lahf
enter
out
ja
mov
fsub
test
out
andl
lock
outsb
jb
popa
addr16
dec
loop
adc
lret
rorl
icebp
xor
xor
adc
sub
jmp
daa
imul
and
xor
cmpsb
jl
pop
pop
mov
cmp
stos
cmpsb
adc
out
xor
jle
mov
dec
add
push
testb
scas
stos
mov
dec
test
ds
inc
cmp
insb
js
cli
cli
shl
dec
or
iret
mov
test
sub
xchg
pop
fmull
sub
xlat
push
imul
out
and
test
in
jle
out
and
loope
das
insb
nop
icebp
into
add
fnstsw
mov
xchg
add
std
in
push
in
xchg
inc
enter
mov
push
imulb
xchg
fcmovnu
aaa
adc
mov
xchg
dec
lods
ljmp
fxch
pop
in
lock
shl
int3
xchg
in
fiaddl
inc
cmp
repz
shrb
xchg
xchg
xlat
push
pop
addb
pop
inc
xchg
repnz
jecxz
cs
push
aad
push
movsb
xchg
outsl
dec
or
push
repnz
stc
add
jle
aad
ret
and
ficoms
pop
jecxz
jnp
xchg
outsl
mov
fmul
mov
adc
or
dec
orl
mov
adc
jns
scas
jne
mov
out
rorb
mov
pop
rcl
xor
dec
out
mov
adcl
into
adc
sahf
arpl
or
push
and
test
push
cmp
sub
add
clc
add
test
push
ljmp
mov
push
fisubl
fisubrs
scas
cltd
fs
pop
pop
mov
pop
rcll
add
xchg
imul
xchg
iret
xchg
pop
push
cwtl
enter
shr
add
cld
mov
xor
push
sbbl
filds
loopne
cmp
adc
jecxz
loopne
mov
sub
add
std
inc
mov
outsb
add
in
std
inc
loop
adc
xchg
insl
or
cli
fcmovu
cmpsb
cli
lcall
add
lods
jbe
lock
adc
adc
movsb
push
jo
push
iret
ss
cmp
hlt
pop
adc
lds
fs
inc
push
ret
daa
pusha
mov
lret
or
pop
sub
xchg
push
jb
mov
inc
fsts
xchg
gs
add
sbb
dec
mov
movsb
and
mov
pop
cmp
les
push
mov
int3
inc
clc
cmp
mov
mov
inc
adc
adc
add
addb
xchg
lret
xor
or
lahf
inc
cmp
outsl
in
pop
bnd
sarl
cli
icebp
jecxz
xlat
dec
or
repnz
movsl
test
mov
push
out
mov
push
push
cwtl
or
cmpsl
adc
and
mov
xchg
imul
mov
fisubs
repnz
mov
jno
incl
loopne
adc
mov
jle
out
adc
add
test
or
push
std
cltd
pop
in
xchg
push
cwtl
out
push
rorb
push
jnp
mov
shrb
bnd
cwtl
les
mov
cmp
push
rol
push
xor
xor
stos
pop
les
lret
push
dec
test
or
push
icebp
and
add
push
mov
sub
addl
daa
cmp
fnstcw
adc
or
bound
pop
jnp
push
gs
fcomip
pusha
fildl
aad
sub
xlat
cmpb
add
adc
inc
sub
cltd
push
dec
mov
outsb
inc
stos
insl
leave
inc
lea
cmp
or
sahf
or
push
in
loope
loop
lret
in
popf
or
hlt
add
mov
std
push
cmp
addr16
pop
lea
dec
sahf
in
cmp
fwait
std
frstor
xchg
add
jle
andb
pop
mov
xchg
jge
push
or
xchg
sti
divl
xor
adc
cmp
mov
repz
mov
dec
mov
ljmp
pusha
mov
fcompl
mov
or
inc
shll
bound
pop
insl
pop
sub
addr16
int
lods
loop
fsubr
push
loope
push
push
outsl
leave
xchg
inc
loop
daa
inc
shrb
sbb
clc
pop
loopne
adc
mov
lods
push
push
sarb
hlt
mov
push
mov
ret
jp
insb
push
lret
add
cmpsb
pusha
cs
lret
dec
inc
and
inc
jae
int3
lahf
inc
pop
inc
addl
aad
mov
mov
jno
aas
push
jns
cmp
fdivl
mov
mov
cmp
and
negb
sahf
outsl
aas
adc
popa
sahf
xchg
fxch
fdivrs
std
fcmovu
arpl
fistpll
test
lods
dec
lcall
mov
fst
int
sar
and
ja
mov
sbb
lock
push
and
pushf
sub
adc
mov
dec
aam
push
ficompl
rcl
cmp
sbb
mov
cltd
xor
sbb
mov
dec
mov
dec
and
ficoms
outsl
mov
dec
mov
icebp
fdivrl
lret
cli
push
gs
mov
push
mov
or
data16
call
insb
outsl
lcall
pop
add
dec
mov
sbb
mov
pop
fldenv
in
or
int3
ret
lods
addl
dec
jmp
call
arpl
sbb
out
repnz
mov
out
imul
mov
dec
pop
bound
int3
adc
faddp
xchg
inc
fisubs
dec
and
lds
cs
pusha
jle
xor
outsb
cmp
int3
loope
loope
lret
pop
fnstcw
pop
mov
arpl
in
sub
ds
and
xor
cltd
cmp
xchg
lds
sub
lret
icebp
mov
adc
jnp
cmpsl
mov
ret
jecxz
sarl
out
push
add
mov
xchg
xchg
mov
dec
lds
out
add
test
mov
mov
fcoms
rclb
mov
inc
jmp
mov
aad
cmp
js
rcll
ljmp
pusha
aaa
mov
fldl
adc
adc
and
inc
lret
int
int3
aaa
push
addb
mov
jmp
sahf
mov
jle
cld
mov
stos
xor
inc
mov
inc
sbb
jbe
mov
dec
arpl
dec
jg
icebp
sub
cmp
dec
push
add
stc
mov
and
push
dec
jle
xlat
jecxz
outsl
pop
out
or
dec
ljmp
mov
pop
jbe
imul
pop
xchg
pop
xor
test
lcall
sbb
rcll
loop
imul
call
mov
dec
sbb
jbe
xchg
pop
arpl
mov
call
popf
out
ss
lea
xchg
je
mov
sub
sbb
mov
dec
jbe
leave
ss
adcb
aam
ret
or
dec
scas
shl
out
pop
mov
cmp
adc
in
outsl
enter
out
mov
push
jg
mov
cmp
cmp
pop
movsl
xchg
arpl
test
xchg
xor
xchg
pusha
mov
pop
popa
pusha
popl
jp
int
or
sti
xor
push
sub
arpl
int
ret
mov
jmp
push
xor
pusha
mov
fisubl
inc
cmp
imul
add
or
das
sub
mov
cwtl
lock
add
xor
xchg
repz
rcll
sbb
and
cmp
cmpsb
addr16
or
and
and
sub
loopne
movsb
push
mov
rclb
fadds
and
xchg
ret
jp
push
xchg
sub
mov
mov
xchg
popa
adc
lcall
dec
cmp
inc
fidivl
test
or
das
mov
xor
push
in
out
mov
pop
mov
icebp
ljmp
or
repnz
std
dec
loope
bound
lahf
xor
dec
xchg
pop
xchg
sub
dec
es
xor
mov
sbb
sbb
clc
mov
test
mov
mov
test
mov
inc
add
aaa
push
arpl
insb
xchg
outsl
loop
add
lahf
mov
and
pop
cld
pushf
arpl
xchg
outsb
mov
xor
imulb
push
jp
push
outsb
sub
mov
push
arpl
bound
js
scas
popf
jae
mov
insb
pusha
jne,pt
xchg
xor
ret
mov
pop
jge
jle
lret
pop
xor
sub
mov
or
add
loope
mov
adc
js
xor
out
outsb
xor
push
lret
insl
loop
pop
pop
test
fldenv
clc
pop
sbb
or
xchg
or
mov
mov
pop
jp
nop
lret
dec
mov
mov
inc
fwait
xor
and
and
push
aaa
mulb
cs
xchg
and
and
popf
xor
push
test
aas
daa
mov
test
push
push
aam
push
addr16
lcall
popa
mov
or
mov
dec
js
test
pop
lds
xchg
push
rcrb
cmpsl
pop
in
lcall
dec
aas
es
mov
xchg
mov
repnz
pop
lret
mov
shll
enter
or
stc
or
jp
int
adc
fildll
sub
lcall
lods
sbb
sbb
sub
mov
adc
and
mov
stos
mov
aas
xor
popf
sbb
push
lods
cmp
xorb
out
lcall
popw
xor
pop
add
stos
popa
pop
mov
lret
jbe
insl
das
mov
cmp
arpl
jmp
pop
adc
xorl
jmp
pop
pop
sub
mov
cs
push
mov
cmp
mov
daa
out
push
test
int
iret
push
mov
jo
test
xor
xchg
push
jle
test
andl
add
mov
jge
or
mov
jae
sub
mov
in
ljmp
sbb
into
and
mov
shr
mov
pop
lods
ja
pop
jmp
mov
and
add
add
repz
icebp
js
push
add
inc
ret
sahf
daa
mov
mov
dec
mov
cli
fimull
cltd
repz
cmp
sti
jnp
mov
ffree
add
mov
mov
leave
xlat
inc
mov
fsub
icebp
mov
loope
jle
push
dec
pop
mov
outsb
xchg
jle
or
andb
int3
shrb
sti
jg
xchg
mov
mov
les
and
out
hlt
jmp
add
jmp
imul
loope
rcrb
jne
add
cmc
xchg
bound
fstps
cmp
mov
mov
mov
mov
or
pop
xchg
dec
push
pop
pushf
jo
dec
lods
add
push
adcb
stos
cmp
data16
stos
mov
mov
add
mov
add
in
and
inc
sub
or
in
or
add
in
inc
push
sub
add
push
ror
pop
pop
mov
sbb
scas
sahf
cltd
popa
pcmpeqb
mov
rcl
jo
lods
pop
dec
test
sbb
xchg
lret
mov
lock
subl
mov
jle
sbb
aas
xchg
cld
sahf
adc
faddl
mov
testb
es
mov
rcrb
jg
xor
ret
outsl
sbb
or
dec
pop
addl
sbb
push
inc
loope
mov
add
adc
push
inc
mov
mov
or
les
sbb
pusha
sub
mov
and
outsb
mov
scas
mov
mov
out
sbb
mov
mov
mov
mov
xchg
jb
fistps
insb
pop
insb
in
jle
xor
out
test
divl
ljmp
mov
cltd
lds
imul
lret
sbb
pusha
add
or
shll
and
clc
repnz
cmpb
test
cld
insb
sar
mov
sbb
dec
inc
add
push
mov
and
ret
sub
xchg
sbbl
arpl
adc
mov
jl
test
push
data16
mov
out
fstpt
xor
cwtl
add
popf
adc
mov
pop
shld
and
pop
imul
or
mov
das
imul
mov
jnp
out
sub
pop
test
fisubl
pop
cli
or
hlt
das
xorl
fmull
inc
adc
cwtl
inc
inc
arpl
shl
xor
pusha
lock
mov
inc
outsb
pop
xchg
fwait
jns
jmp
xchg
xor
call
inc
and
xchg
mov
mov
outsl
xchg
popa
xor
rep
xchg
add
push
xchg
test
push
cmp
dec
jnp
cli
jno
mov
add
lahf
push
mov
and
mov
movsl
outsb
lock
jns
sahf
orl
out
push
and
jb
lret
pop
add
ljmp
push
sbb
sub
jo
dec
add
and
jbe
clc
in
cmp
fcoml
mov
int3
ret
loopne
fists
cmp
lds
mov
jo
loope
and
pop
xchg
jns
jne
push
into
lret
dec
rolb
fists
xchg
push
pop
sbb
mov
in
dec
jo
stc
sub
icebp
mov
fstpl
pushf
cld
test
jp
sar
pop
inc
add
incl
sbb
jnp
or
cmp
xchg
dec
sub
xor
pop
mov
mov
pusha
out
stos
xchg
dec
push
add
lahf
sarb
imul
add
fldenv
sti
das
imul
gs
fdivrl
in
sbb
rol
and
mov
xchg
mov
cmp
sbb
pop
mov
pushf
xchg
rclb
xor
and
fsubrs
cmp
js
je
and
mov
xor
xchg
inc
sarl
pop
sbb
xchg
sub
inc
mov
pop
lret
mov
mov
xchg
mov
push
dec
jmp
xor
pop
ficompl
mov
dec
in
ljmp
jns
sub
mov
inc
loope
mov
push
xor
or
push
call
or
in
into
xor
repnz
mov
dec
jmp
das
pusha
and
in
cmp
cli
sub
mov
inc
xchg
pop
out
push
andb
test
lcall
pop
jno
mov
repz
ror
pop
xchg
test
xchg
xchg
cmp
imulb
subl
hlt
sub
shll
cmpsb
jno
incl
xorl
pop
jb
cli
out
and
loopne
cli
dec
in
stos
pop
pop
lods
lcall
popf
ljmp
jb
push
shll
adc
mov
sbb
push
pop
ret
adc
mov
adc
mov
out
jl
mov
inc
fs
aad
and
jl
or
addr16
jle
sub
hlt
test
or
cmp
repz
frstor
es
adc
loop
data16
jmp
and
fistpll
xor
fs
bound
xor
jo
leave
pop
add
jnp
xchg
fldenv
lds
xchg
hlt
sbb
sti
mov
jle
mov
and
divb
dec
cwtl
mov
std
and
insb
or
arpl
hlt
xor
ficomps
std
loope
ds
stos
mov
push
mov
popf
mov
add
cwtl
ds
push
cmpsl
adc
std
dec
cmp
sub
lea
mov
mov
subl
iret
je
aas
mov
jecxz
pusha
flds
or
fistpll
notb
mov
add
inc
mov
daa
aad
push
es
sub
mov
pop
cmp
sti
rorb
fldt
xor
addb
pop
lock
lods
aad
fildl
inc
out
mov
jo
shr
sbb
push
femms
cmpsl
and
xchg
or
xor
xchg
imul
xor
int3
mov
pusha
movsl
sbb
cmp
pop
arpl
mov
pop
sbb
xlat
test
int
dec
stos
int
shll
fsubl
gs
fdivr
and
mov
xor
icebp
push
pop
lret
xchg
lds
dec
fwait
pop
jo
push
scas
ja
dec
loopne
mov
imul
in
ret
mov
mov
and
lods
jle
sbb
mov
js
les
into
out
sub
insl
or
gs
push
sub
push
pop
lea
push
jg
repnz
call
das
mov
jne
jle
sub
loopne
stc
idivl
adc
xor
inc
dec
cmp
das
push
inc
jnp
out
pusha
pop
mov
sub
xchg
pop
daa
cmpsb
test
inc
jbe
loop
cmp
insb
push
xchg
in
leave
jg
and
sub
test
xchg
shlb
bound
or
adc
inc
adc
adc
fidivs
clc
lret
xchg
iret
loopne
ret
rclb
adc
stc
cs
cmp
xchg
sub
scas
xchg
jb
sub
stc
mov
cltd
clc
loopne
pop
lds
out
aam
stos
je
push
repnz
dec
mov
inc
push
das
gs
int3
nop
ja
jnp
mov
lahf
daa
cld
push
push
fstps
clc
xor
sub
inc
ret
xchg
pop
xchg
jno
dec
dec
insl
adc
je
insb
lods
pusha
adc
insb
dec
pop
xchg
testl
scas
aam
into
sbb
nop
int
mov
mov
stc
fwait
pop
dec
fidivs
sub
mov
insb
subb
scas
lret
xchg
or
xor
pushl
jmp
outsl
mov
adc
test
fisttpll
test
ret
in
fistpll
pop
cmpsb
das
insb
leave
mov
sub
fcoms
xchg
int3
jno
imul
cs
scas
test
sar
cld
mov
out
cltd
ret
push
mov
dec
sbb
loope
cwtl
pop
sar
arpl
shr
inc
sbb
mov
and
aam
jl
inc
bound
and
sub
jae
mov
ja
pusha
lods
cmc
pop
xor
dec
mov
xor
mov
xchg
cli
shrb
pusha
jbe
dec
pop
mov
insb
mov
mov
pop
cmc
push
negl
int
stos
lods
mov
int
push
dec
mov
rcrl
pushf
push
hlt
stos
mov
or
xchg
xchg
testl
cmp
popa
sbb
inc
aam
scas
fisttps
sub
daa
inc
int
lock
pop
mov
fucom
or
sub
loope
sbb
je
ret
loopne
cmp
xor
xchg
outsl
mov
adc
fildll
sbb
aad
jno
jbe
pop
sub
mov
mov
mov
pop
fwait
or
cli
cmp
dec
int3
mov
ret
add
and
in
sub
dec
loopne
xor
push
inc
xor
push
popa
je
stos
xchg
dec
xchg
dec
sahf
pop
outsb
jge
ds
lea
dec
shlb
lods
jo
fdivr
adc
fmull
das
xor
add
shlb
outsb
pusha
pop
repz
xchg
adc
mov
and
insb
outsl
addl
sbb
cmpsl
lret
aam
dec
mov
std
jmp
fsub
ficomps
leave
pushf
in
lret
sub
into
jno
sahf
decl
jb
mov
add
dec
movsl
aaa
dec
gs
fstpt
loop
hlt
aam
inc
popf
out
jmp
cld
aas
mov
out
addr16
adc
shrb
push
repz
jbe
pop
mov
aad
inc
jnp
mov
sbb
push
imul
push
enter
pop
mov
and
jbe
mov
ret
sbb
and
fwait
daa
dec
scas
test
dec
les
push
pop
xchg
ret
or
notb
test
jo
outsl
mov
jl
ret
ds
sahf
mov
jnp
inc
insb
xchg
mov
dec
out
aad
int
cmpsb
bound
repz
movsb
loope
outsb
push
out
adc
sbb
jle
mov
lcall
dec
fnstenv
add
or
in
or
fcompl
enter
lret
lahf
rcl
leave
inc
cmc
lea
popf
pushf
insb
jl
mov
in
fwait
loope
mov
push
mov
xor
sahf
bnd
add
test
mov
push
cmp
adc
fldcw
or
jbe
gs
pushf
dec
movsl
pushf
and
out
mov
xchg
push
mov
cli
daa
pop
das
mov
dec
insb
mov
mov
popl
inc
jl
pop
cmp
dec
call
mov
ret
loope
lock
enter
fidivs
inc
lret
sti
mov
dec
inc
mov
ja
xchg
or
insl
mov
ss
adc
nop
in
lods
mov
mov
rol
dec
add
xor
mov
addr16
and
jle
mov
mov
clc
hlt
test
sub
inc
mov
or
fimuls
mov
stos
sbb
inc
or
or
mull
stc
add
push
lcall
or
cmpsl
stos
jnp
push
adc
idivl
aas
sbb
sub
adc
cmp
out
lock
aaa
bound
xor
pop
mov
dec
insl
jno
sub
pop
or
or
jge
movsb
adc
mov
cwtl
int3
sbb
jno
insb
sahf
stos
pusha
xchg
jle
mov
insb
pop
rcrb
mov
shlb
fisubs
inc
sbb
lcall
xchg
negl
mov
mov
cs
gs
pushf
sbb
mov
mov
ficoml
addr16
test
rclb
lock
ds
daa
mov
cs
xor
stc
xchg
mov
xor
cmp
or
jmp
test
push
mov
xor
ror
push
jecxz
mov
mov
fstp
bound
dec
push
leave
repnz
cld
mov
dec
lods
inc
mov
cmp
dec
popaw
ss
test
and
movsl
or
fsubs
test
xchg
mov
and
mov
fwait
les
jbe
adc
inc
fs
aas
or
clc
arpl
jg
aam
imul
ljmp
test
pop
outsl
sbb
add
xor
cmp
or
mov
aad
inc
jno
pop
xchg
cmpsl
xchg
outsb
xchg
insb
test
adc
jg
or
adc
imul
mov
xchg
pop
mov
push
ret
out
push
fs
fwait
movsb
insb
mov
fcoml
aad
ss
push
cmp
xchg
jnp
sub
mov
cltd
out
jmp
add
aaa
lea
mov
lcall
cmp
adc
mov
ret
dec
lods
fidivrs
cmp
xchg
cmp
push
lods
cmp
vaddsubpd
mov
mov
sub
or
cmp
mov
lds
outsb
xchg
and
mov
pop
pop
dec
je
sbb
mov
into
push
out
mov
cli
cmc
cmp
xor
nop
mov
sbb
push
sub
les
push
jb
mov
xor
in
dec
lret
pushf
test
lret
jne
sarb
inc
mov
fmull
flds
sbb
movsl
test
inc
jg
pop
jnp
xchg
out
push
and
das
add
jg
xchg
int
jne
loopne
test
cmp
xor
lret
add
push
xor
shll
sbb
repnz
inc
rcrl
pop
dec
inc
lds
nop
pop
push
push
lods
mov
idivb
scas
jbe
mov
notb
outsb
dec
add
fdivp
xchg
xchg
test
frstor
xor
shl
inc
push
or
imul
pop
add
nop
jle
dec
and
push
push
mov
xorb
call
mov
test
lock
inc
mov
inc
loope
cmp
jl
popa
clc
push
out
pushf
in
mov
sar
pop
rcrb
adc
xor
xchg
out
repnz
test
das
cli
adc
xor
insb
and
lds
mov
push
cwtl
mov
xchg
mov
sarl
or
scas
fidivl
push
and
movsl
and
xchg
lret
add
test
add
mov
mov
sub
ja
stc
ja
push
aad
fistl
rcrb
xchg
adc
mov
int3
pop
cld
addl
push
jb
xchg
jge
mov
int
jp
xchg
test
jge
repnz
jp
xchg
xor
jl
mov
aam
sahf
push
add
cld
je
icebp
aaa
and
fidivs
sub
scas
jp
sub
cmc
sbb
inc
shrb
sub
xchg
pushf
mov
cmp
test
sub
cmpsl
out
imul
inc
inc
mov
mov
movb
nop
cmpsb
push
insl
aam
ds
es
loopne
mov
imul
jp
add
sti
sub
push
pop
mov
jo
insl
jae
xchg
mov
and
mov
mov
jg
aaa
mov
test
mov
adc
ret
and
fwait
xchg
push
outsl
or
inc
int3
pop
add
dec
sahf
test
lcall
xor
add
jge
fists
push
idivl
mov
mov
aas
cmpl
mov
mov
mov
mov
fimull
lods
mov
mov
movsb
lock
add
push
mov
shll
cmp
imul
call
enter
mov
pop
mov
ljmp
call
repnz
arpl
and
mov
ds
ficompl
movsl
xchg
push
or
xchg
push
jecxz
jae
dec
ret
cmp
test
in
dec
xor
jg
iret
es
popf
pop
fwait
push
xor
or
cmpsl
sbb
xlat
xor
sbb
lods
cmpsb
hlt
test
shll
stos
xchg
dec
cld
dec
lahf
mov
xchg
test
inc
lods
sahf
in
nop
inc
out
hlt
mov
lret
pushf
gs
int3
xor
sbb
push
fwait
imul
jns
mov
push
out
cmc
out
repz
add
mov
lock
out
jmp
dec
pusha
and
add
lds
lds
cmpsb
xchg
lret
in
adc
nop
int3
mov
xchg
insb
rcr
into
rorl
hlt
popf
stos
inc
pushf
insb
lods
pop
stos
ret
and
aas
icebp
out
jne
orb
lods
xchg
xchg
movsb
in
test
std
es
sub
xor
or
int
mov
nop
inc
leave
push
xchg
inc
or
sub
fs
pop
int
or
data16
ja
nop
jl
frstor
jl
inc
mov
cmpsl
jb
cltd
and
sbbl
or
sahf
adc
jno
xor
dec
rol
pop
out
sub
shrl
fistl
imulb
sahf
push
pop
sti
inc
cld
sbb
ss
loope
adcl
jne
ja
xor
xchg
ret
xchg
mov
ljmp
jp
lods
int
ret
leave
push
movsl
lods
into
dec
xchg
and
in
xor
xchg
dec
push
mov
push
aad
dec
xchg
movsl
jmp
xor
dec
pop
aad
lods
fisttpl
imul
sub
clc
add
imul
pop
or
sub
add
lock
jne
cmpsl
push
pop
push
mov
aas
test
xchg
mov
push
adcl
jp
mov
lahf
stos
or
sbb
jmp
aaa
sti
incl
sbb
ret
lret
push
adc
add
mov
mov
stos
mov
jns
jmp
js
loopne
jns
and
ja
push
cmp
fcoms
push
cmp
mov
dec
cmp
sub
or
cltd
dec
arpl
cmp
fdiv
mov
inc
lahf
test
push
in
push
daa
and
sbb
leave
mov
sub
or
sub
push
sub
pop
xchg
xor
add
jmp
push
fstp
mov
ss
add
rcl
insl
ljmp
lcall
jb,pt
jle
mov
inc
arpl
lret
or
fidivs
scas
xchg
adc
pop
pop
in
cltd
ljmp
jo
adc
add
loopne
scas
cmp
jne
loope
jp
sbb
outsb
mov
lea
xchg
daa
add
push
fs
cmpsl
push
dec
xchg
lock
rorl
and
push
xchg
stos
sti
lds
adc
ret
arpl
xchg
in
jp
cmp
es
xor
mov
daa
pop
mov
mov
das
mov
ret
ss
push
pop
lock
aaa
and
pusha
cmp
call
iret
pop
fsubr
xor
test
push
mov
mov
stc
lret
inc
sti
jge
out
add
popf
jo
pop
mov
inc
adcl
outsb
xor
jb
imul
jp
outsl
inc
push
push
add
xchg
inc
inc
je
and
movsl
mov
imul
repz
mov
or
icebp
ffreep
call
xor
imull
add
mov
xchg
add
rcrl
sbb
mull
jno
aaa
js
add
mov
fisttps
jb
add
sbbl
aas
sbb
and
add
loope
mov
xchg
shl
fwait
in
decb
ss
xor
push
in
jg
loope
cmp
aam
sub
mov
xchg
adc
cmp
pushf
jle
scas
mov
repnz
mov
jge
cmp
mov
xchg
mov
roll
add
push
mov
lods
xchg
push
das
arpl
lea
mov
or
push
sbb
pop
sarb
adc
mov
in
jmp
fwait
lret
test
mov
mov
out
mov
arpl
into
jg
mov
jg
mov
aam
fimuls
dec
loope
mov
mov
sbb
cmp
es
imul
in
push
cmp
mov
fldl
adc
dec
inc
inc
sub
pop
inc
ficoms
xor
sub
add
in
cmpsb
mov
add
out
and
add
sub
jno
jae
sbb
or
aad
lea
xor
xor
movsl
in
jne
sub
xchg
das
into
popa
jno
jns
je
and
aas
out
add
jbe
mov
sbb
outsl
push
pop
nop
and
sti
mov
sbb
or
scas
push
repnz
mov
cmpsb
xor
adc
mov
scas
out
or
outsl
fcoms
sbb
push
pop
arpl
inc
in
sbb
mov
mov
push
mov
fs
loop
push
dec
out
push
pop
or
mov
sti
and
daa
stos
jle
lods
mov
pop
fldl
jmp
push
ds
inc
ret
sti
or
dec
mov
cli
out
pop
int3
or
enter
adc
xor
dec
movsl
xchg
push
rcr
frstor
sub
push
scas
pop
or
test
shrb
pop
lcall
push
jno
loopne
in
push
ret
js
adc
popf
push
xchg
inc
inc
mov
repnz
bound
cwtl
sbb
shll
mov
jns
mov
xchg
jmp
lods
or
xchg
xor
incl
push
icebp
jecxz
jae
jae
rcll
mov
dec
dec
sbb
pop
pushl
or
and
xchg
and
dec
cli
imul
rcrb
movsb
lret
sbb
sub
sti
push
mov
pop
imul
popf
jo
in
imul
adc
movl
mov
out
push
add
pop
out
out
inc
mov
test
sbbl
xchg
je
mov
ds
xchg
loope
movsl
xchg
push
popf
adc
mov
sub
cmpsb
and
sub
fldl
or
in
mov
pop
mov
aaa
jp
sahf
mov
out
bound
leave
daa
xchg
pop
insb
rclb
mov
cmpsl
jne
jno
cmp
mov
outsl
cld
mov
add
out
stos
inc
push
lret
ffreep
mov
je
xorl
js
pop
xor
jmp
push
cmp
cwtl
fmuls
sti
gs
jnp
ja
and
lds
jae
dec
and
adc
daa
pop
mov
inc
aad
inc
cmp
cmp
push
ja
mov
aam
sub
push
jo,pn
inc
int
jno
jo
ja
into
iret
cmp
inc
mov
mov
cmp
mov
iret
pop
rcll
mov
lods
sbb
in
ret
xor
jae
aaa
adc
lahf
pop
sub
pop
mov
and
call
pop
cmpsl
aaa
and
shll
fcomi
in
aaa
mov
dec
sub
les
and
lock
repz
cmpsb
push
sbb
int
and
shll
mov
sub
pop
int3
hlt
xchg
pop
stc
test
enter
jb
inc
fistps
add
popa
inc
ljmp
shll
push
jb
test
int
stc
jne
cli
jne
roll
and
push
ja
xchg
fst
jns
push
fisubl
cmp
pop
jg
mov
call
jns
cmpsl
scas
mov
mov
or
add
adc
jnp
xchg
mov
lock
mov
cmp
and
ja
mov
xchg
gs
outsb
jle
mov
push
cs
out
dec
mov
pop
jne
adc
jae
mov
cmp
lcall
xchg
push
fldt
xchg
scas
pop
lods
mov
mov
adc
push
sahf
push
test
or
stos
addr16
dec
mov
fistl
nop
jno
mov
outsb
xlat
rcl
cmpsl
loope
jns
xorb
sbb
xchg
add
mov
pop
mov
cmp
dec
cmpsb
imul
aam
mov
sub
ret
jl
rorb
cmp
dec
jecxz
lods
inc
imul
pop
mov
push
mov
add
xor
cmp
aad
fdivrs
test
ljmp
xor
ja
arpl
jne
xchg
loope
lahf
mov
movsl
hlt
or
je
inc
ljmp
cmp
fisttps
test
pop
and
sub
scas
pop
insb
fs
fidivrs
dec
mov
je
scas
or
repz
xor
lret
shl
in
cmp
data16
inc
pop
xchg
mov
mov
push
je
or
inc
adc
fsts
inc
enter
stos
movsb
mov
test
pop
inc
fstl
test
inc
cmp
mov
sub
jp
mov
xor
clc
mov
enter
cmp
std
xchg
mov
cmp
loopne
aad
stc
cmp
aas
aaa
pop
scas
in
mov
jno
cli
lea
inc
fistpl
push
cmp
sub
loope
stc
cmpsb
dec
mov
dec
pop
pop
sbb
push
addr16
lret
and
hlt
jecxz
lret
in
jae
mov
leave
mov
insl
jmp
mov
dec
cmp
push
adc
xchg
das
sbb
xor
int
sbb
mov
sub
testb
pop
or
inc
mov
or
pop
mov
xchg
inc
push
xchg
or
mov
pop
inc
mov
popa
cmp
lret
in
loop
rol
push
out
pop
push
ss
stc
pop
mov
arpl
pop
cmp
insb
sbb
jns
cmc
shll
faddl
mov
ret
mov
jb
push
ret
pop
cs
and
js
rcrl
push
or
or
dec
mov
mov
xor
xchg
dec
add
xchg
jmp
inc
fmuls
repz
gs
mov
adc
aam
inc
push
mov
sub
ret
fldcw
out
mov
icebp
mov
hlt
sub
sbbl
inc
cmpl
sbb
ljmp
movd
mov
mov
sbb
repnz
and
fwait
pop
jne
int3
ja,pn
out
or
clc
popf
aad
repz
add
pushf
mov
mov
pop
mov
mov
ret
or
inc
inc
arpl
jmp
int
cli
popa
xor
int
sub
or
mov
imul
fwait
adc
int3
add
mov
add
je
sbb
sbb
xchg
cmc
hlt
jg
xor
fldl
mov
jle
jg
cmp
in
xchg
xor
push
mov
cmp
mov
fcomps
test
stos
jg
mov
cmp
or
or
push
in
dec
push
stos
xlat
sahf
mov
xchg
sbb
repz
sar
xor
das
mov
hlt
sbb
dec
add
fdivrs
and
sahf
subb
sti
add
jp
mov
out
mov
or
add
gs
xchg
jns
dec
or
js
inc
xor
pop
pushf
mov
inc
mov
inc
fisubrl
test
mov
cli
mov
mov
in
mov
sbb
mov
push
test
jns
imul
mov
cmc
mov
dec
arpl
bound
std
jg
out
loop
jno
push
mov
cmp
aas
pop
xchg
add
jnp
and
dec
into
call
inc
iret
xor
mov
scas
push
xchg
xchg
jp
cli
cltd
and
xchg
repnz
lret
mov
mov
and
mov
aas
shrl
push
int
imul
shrl
mov
adc
enter
lcall
pop
stos
pusha
addr16
cmp
push
rcrw
cs
js
vmovsldup
adc
stos
xlat
xorl
add
lea
adc
ret
xchg
int
icebp
out
clc
adc
lahf
sti
xor
bound
loope
arpl
lahf
aam
iret
jecxz
adc
imul
cli
push
or
push
mov
lahf
sbb
push
xchg
mov
jle
push
sbb
das
mov
jl
inc
inc
push
cmpsb
cmpsl
push
mov
sbb
iret
aad
dec
mov
inc
add
pop
fdivrs
mov
mov
or
dec
jl
jnp
cwtl
cmp
mov
mov
jb
jne
imul
dec
je
push
lret
and
and
outsb
xor
aaa
or
sbb
aad
mov
stos
dec
xchg
sub
and
nop
pop
pop
mov
loop
out
outsb
lods
sbb
rcll
arpl
pop
pushf
adc
call
jno
lods
add
aaa
push
sub
insb
iret
xchg
bound
adcb
into
loopne
pop
pop
and
push
imul
xor
lock
push
leave
sub
sti
adc
or
repnz
stos
xchg
fldenv
push
loop
xchg
push
sub
imul
int
dec
jl
jle
in
jbe
sub
sub
jns
mov
jae
loopne
push
imul
ja
cli
pop
mov
adc
les
and
jle
rclb
adcl
outsl
dec
stos
popf
insb
add
mov
dec
in
sbb
ljmp
jg
xlat
jb
in
andb
insb
lods
pop
inc
push
out
test
dec
pop
lds
lock
fcom
dec
jl
dec
inc
or
jmp
ss
lock
in
icebp
sub
repnz
scas
mov
and
dec
lods
int3
sets
inc
leave
mov
rorl
push
mov
popa
sahf
add
iret
mov
xor
sub
rol
push
cs
jecxz
jno
mov
jmp
std
insb
mov
aam
or
add
cwtl
fimull
stos
jno
ret
loopne
inc
decl
xor
pop
inc
rcr
push
push
cltd
mov
xor
add
and
dec
aam
pop
inc
xchg
pop
inc
stc
mov
and
jbe
icebp
stc
in
aaa
dec
aad
and
pop
dec
mov
fisubl
sti
xchg
fsts
in
enter
sbb
or
cmp
shll
bound
mov
daa
pop
in
push
test
push
adc
xor
lods
ficoms
adc
mov
mov
outsl
pop
jo
movsb
repz
cmpsl
js
shll
addb
sbb
or
popf
mov
sahf
imulb
jmp
sti
adc
shlb
cmp
lahf
jae
inc
jo
push
or
iret
jne
cmp
jne
stc
jbe
dec
jbe
int3
arpl
xor
pushf
inc
mov
loopne
push
out
push
pop
je
ljmp
lds
fdivrs
mov
lods
sub
sub
cmp
lcall
fwait
out
loope
ret
lods
push
fstpl
pop
pop
stos
call
adc
aam
clc
sub
into
loopne
push
push
or
in
bound
leave
in
repnz
sub
jg
and
xorb
test
jmp
adc
xor
test
adc
insb
pop
mov
out
xchg
and
insb
loop
lods
imul
insb
mov
mov
mov
addr16
ja
test
push
mov
pop
sub
and
cmpsb
mov
inc
push
sti
mov
sbb
sub
fildll
das
xor
sti
push
xor
cmpsb
idivl
xchg
xor
or
fmull
cmp
mov
daa
stos
xor
add
mov
pusha
out
outsb
and
mov
into
outsb
out
outsb
divps
add
jns
jmp
and
sbb
cmp
scas
fnsave
adc
xchg
dec
or
dec
mov
jne
adcb
push
or
jne
cwtl
pop
insb
in
jge
aam
inc
fucomi
pop
pop
imull
leave
inc
and
xor
aad
sub
ljmp
and
inc
push
inc
sbb
cmp
and
arpl
jb
or
gs
dec
int
mov
lods
cmp
std
cmp
inc
out
xchg
or
out
aam
add
cmp
imul
or
nop
jl
and
scas
mov
stos
mov
fmul
add
jnp
mov
add
pop
shlb
aad
mov
pop
inc
js
test
cs
shl
push
mov
lahf
and
dec
mov
movsl
dec
mov
dec
roll
sub
cwtl
fisubrl
insb
inc
rorb
jecxz
and
scas
in
std
xchg
pop
inc
dec
or
or
xchg
fiadds
cld
push
fsub
into
movsb
repnz
in
mov
lock
lods
lock
pop
gs
adc
maskmovq
testl
stos
cmpsl
test
movsb
or
add
pop
cmp
add
out
sbb
rol
les
xchg
adc
xchg
pop
insl
ljmp
mov
fwait
mov
stos
mov
dec
daa
or
in
rcr
subl
xchg
inc
dec
sbb
xchg
mov
stos
lret
mov
imul
inc
cmp
in
rorl
pop
push
mov
hlt
mov
mov
dec
mov
ja
xchg
jg
in
dec
jb
and
pop
add
cwtl
rclb
aam
test
dec
mov
out
mov
add
pushf
hlt
movsl
add
hlt
sbb
xor
js
lods
push
pop
inc
in
int3
cmp
add
push
js
call
stc
push
repnz
repnz
sub
cltd
imul
push
mov
outsl
mov
push
adc
ss
cs
add
lahf
cmp
or
mov
ret
sub
sbb
mov
je
and
negl
mov
inc
cmp
xchg
data16
pusha
mov
in
rolb
call
test
js
into
adc
inc
dec
and
mov
fmul
addl
scas
nop
sti
mov
loop
leave
pop
inc
mov
dec
jge
cld
jb
pop
inc
pop
dec
scas
lods
out
popa
push
lret
popl
xor
xor
xchg
mov
clc
insb
in
aam
insb
inc
enter
stos
sub
xorl
sbb
adc
repnz
loopne
dec
sbb
or
mov
push
xor
das
sbb
out
jecxz
popa
cli
push
xor
lea
mov
test
cmpxchg
cmp
lods
jbe
cmp
adc
mov
jno,pt
xchg
jl
movsl
mov
sub
pusha
add
dec
mov
cmpsl
xchg
add
push
jmp
mov
push
pushf
or
push
mov
bound
lcall
cmp
mov
cmp
sub
add
cwtl
fucomi
stc
lahf
dec
cwtl
cmp
fcoms
sbb
adc
jp
add
pop
xor
out
rep
call
das
cwtl
xchg
adc
pushf
leave
test
clc
mov
mov
adc
push
outsl
clc
pop
jbe
sbb
addr16
int
aas
jnp
daa
jbe
adc
push
hlt
dec
loop
ss
dec
adc
cmp
iret
insl
inc
ss
mov
mov
mov
aam
jl
jg
adc
mov
cmp
sub
and
aam
out
int
inc
push
ja
sti
adc
adc
ja
adcl
mov
mov
adc
cmpsb
push
lods
lods
scas
mov
test
scas
clc
xor
add
js
inc
or
notb
jmp
rcl
push
mov
fbstp
loopne
xor
pusha
cwtl
lea
sub
cmp
cli
loopne
mov
cmp
mov
stc
popa
je
stc
cmpsl
inc
dec
jl
jns
dec
xchg
repnz
shlb
push
pop
dec
lret
lods
cmp
movsb
ja
dec
jae
cmpsb
lret
push
lds
jns
popa
mov
mov
jge
push
mov
cld
push
insl
push
pand
fimuls
dec
mov
in
dec
mov
mov
push
pop
and
std
push
lds
outsb
cs
daa
rcrl
addr16
shl
pop
cld
lods
xchg
push
enter
scas
cmpb
hlt
or
dec
inc
add
push
push
mov
cwtl
aas
mov
xlat
lock
rorl
pop
aam
xchg
cmp
add
cltd
inc
and
ja
imul
sbb
mov
in
jmp
jo
cld
clc
pop
clc
shld
add
rorl
and
mov
cmpsl
lea
cmp
mov
fimull
outsb
mov
push
cli
lods
out
mov
stc
mov
pusha
mov
pop
mov
dec
sub
bound
and
mov
add
mov
aas
and
cwtl
mov
sahf
inc
iret
mov
mov
jle
loop
dec
test
lods
sub
repz
outsb
std
out
ret
xchg
mov
dec
test
mov
pop
popf
adc
add
cmp
mov
or
enter
ret
xor
dec
pop
sbb
shlb
or
data16
xchg
cmpsl
sti
js
xor
pop
jecxz
push
mov
stos
sub
dec
cld
mov
sub
in
jne
jmp
icebp
inc
dec
cmpsl
mov
js
or
gs
adc
popf
xor
mov
fidivrl
sbb
enter
iret
pushf
test
mov
or
lret
rorb
movsb
out
bound
adc
fmull
and
rcr
movsb
mov
js
jns
mov
inc
sbb
addr16
shrl
or
hlt
pop
mov
jmp
mov
mov
and
xchg
scas
popl
push
add
inc
rcll
push
xchg
mov
cltd
add
int3
xor
jg
repz
sub
xchg
rorb
sarb
rorb
adc
fwait
pop
dec
dec
cmc
aas
inc
mull
xchg
shl
into
hlt
xchg
inc
pop
push
mov
push
cmp
adc
popf
jno
insb
jne
mov
divb
xor
outsl
fdivrs
adc
notl
mov
adc
mov
sub
imul
pop
popf
push
pop
ljmp
jg
push
jmp
cmp
notl
xor
dec
fcomps
bound
mov
push
cmp
pop
jno
pusha
mov
mov
lds
or
insb
xchg
cmp
mul
call
xchg
loopne
xchg
std
inc
dec
int
adc
sub
in
nop
adc
aas
cmp
add
xchg
cmp
pop
xchg
xchg
mov
les
add
ret
dec
xor
cmp
push
jmp
pop
dec
mov
inc
outsl
inc
xchg
pop
shl
xchg
mov
dec
ficompl
ficompl
leave
inc
and
xchg
inc
xlat
ljmp
push
std
pushf
push
mov
ficomps
std
popf
sbb
xchg
dec
jge
add
call
jae
pop
stos
mov
sub
pop
or
mov
aaa
hlt
push
or
adc
mov
inc
call
xor
cmp
mov
sub
ror
jg
pop
push
rorb
jae
pushf
push
popf
add
stos
in
push
pop
insb
xor
mov
mov
test
notl
inc
or
mov
lcall
pop
pushf
xor
in
xchg
jne
mov
mov
and
mov
jbe
xchg
sbb
push
pushf
cmp
aam
or
data16
mov
jns
dec
fisttps
inc
lock
out
cwtl
mov
or
sub
je
iret
pop
fsubrl
pusha
inc
fwait
icebp
dec
movsl
cmp
ljmp
testb
and
push
inc
jmp
js
outsl
or
cli
in
cs
push
jge
ja
test
loope
cmc
mov
adc
imul
mov
lret
add
mov
add
and
cld
dec
in
jnp
sbb
inc
stos
and
shrb
jne
ret
ljmp
sub
xor
xchg
loopne
xchg
xor
icebp
or
ret
jae
mov
out
shrb
test
pop
cmpb
pop
jae
outsb
sbb
inc
pop
aam
mov
pop
xchg
pusha
or
das
repnz
cmp
out
mov
mov
xor
or
call
sub
sbb
insb
hlt
shlb
mov
dec
mov
add
mov
mov
push
test
jle
or
cmp
sar
decl
out
jecxz
inc
subl
test
inc
cmpsb
push
in
inc
mov
cmp
mov
jb
rcll
mov
inc
or
daa
mov
dec
pusha
faddl
or
push
imul
inc
mov
ljmp
insb
xor
push
mov
clc
insb
push
jns
jae
rcll
jbe
movsb
mov
adc
dec
enter
imul
or
mov
pop
sahf
test
and
add
stos
pop
mov
sub
stc
inc
mov
mov
mov
aas
ss
pop
xchg
je
mov
inc
push
fwait
scas
mov
in
dec
and
sbb
sub
mov
mov
shll
inc
out
imulb
cmp
jmp
jbe
scas
sbb
cmp
push
cmp
jno
xchg
xchg
fcoml
outsl
inc
in
rdtsc
pop
xchg
cmp
ficomps
pusha
xor
pop
leave
loopne
mov
addr16
lret
rclb
repz
mov
sub
cmp
sbbl
jb
and
xchg
ret
pop
out
in
fsubrs
adcb
dec
je
xchg
sub
mov
cmp
adc
mov
xchg
insb
cmpl
dec
sbb
push
test
icebp
out
lods
mov
dec
xor
mov
adc
pop
push
mov
mov
js
roll
sub
ss
aad
mov
mov
or
cmc
adc
repz
repz
push
jb
pop
aas
jge
push
aam
mov
pop
clc
outsl
jl
je
jo
lock
iret
cmc
jge
jns
push
aam
sbb
out
shlb
push
insb
mov
lock
das
jmp
popa
xor
fcmovnb
in
mov
cli
and
pushf
ljmp
push
or
in
mov
or
or
push
stc
fadds
mov
sub
mov
xor
movsb
hlt
cmp
cmpsb
in
push
mov
scas
clc
not
gs
fisttpl
push
push
cmp
mov
imul
punpckldq
jb
dec
jmp
mov
add
shlb
and
out
sub
arpl
add
ja
in
cmp
push
jo
ret
mov
lds
stc
add
mov
mov
inc
cmc
pop
jl
cmp
es
repnz
inc
xchg
lcall
outsb
pop
ret
xchg
rcrb
cmpsl
mov
lods
xor
adc
mov
inc
les
mov
lcall
orb
mov
loopne
mov
into
mov
mov
ret
pop
pxor
test
jbe
dec
mov
addr16
and
xor
pop
adc
lret
dec
mov
or
xchg
ret
orl
mov
pushf
rcrl
lret
lret
cmc
orb
mov
je
sbb
int
into
fistpll
scas
cltd
das
xchg
dec
mov
mov
pop
cmp
push
mov
test
or
xchg
push
pop
mov
decb
aad
das
lock
mov
insb
lahf
pop
lock
pop
idivl
aam
test
xor
and
mov
pushf
ret
test
insb
mov
jbe
pop
pop
jo
pop
mov
and
pop
cmpsb
jno
sub
clc
adc
ljmp
dec
or
fs
jle
je
or
repnz
test
push
push
pop
imull
in
outsl
cmpsb
sub
jne
pop
or
mov
mov
leave
sub
jg
dec
je
jnp
pop
sbb
jmp
push
pop
daa
push
ffreep
ret
rolb
mov
les
ljmp
lock
imulb
hlt
out
in
lret
adc
mov
inc
sbb
lds
call
sub
mov
add
stc
sbb
pop
xor
and
leave
jge
pop
popa
cmp
mov
insb
pop
mov
adc
mov
js
dec
iret
fdivl
scas
or
rcrl
out
cmp
xorb
call
dec
jp
sub
dec
sbbb
int
lods
je
push
arpl
lahf
mov
daa
shrl
test
mov
lds
pop
sub
mov
jbe
xchg
push
inc
sub
adc
daa
jl
jae
pushf
cwtl
sbb
in
movsb
lods
scas
fbstp
andb
daa
mov
loopne
insb
and
mov
xchg
jne
int
push
ficoml
mul
xchg
lahf
inc
sub
addl
pusha
push
cwtl
adc
mov
int
push
adc
repz
push
xor
xchg
imul
in
stc
cmpl
dec
cmp
mov
xor
bound
cmp
mov
cmp
ss
lret
xor
stos
jg
cli
adcb
jecxz
xchg
mov
daa
xchg
sahf
and
in
dec
je
xor
sbb
jg
push
xlat
ja
fstp
ljmp
rcll
movsl
push
pop
incb
mov
mov
lahf
iret
in
icebp
and
add
es
insl
cmc
outsb
jle
mov
out
in
mov
push
pop
ret
into
sub
shll
mov
int
inc
out
jno
jle
or
out
mov
push
fiaddl
jnp
mov
pop
ljmp
cltd
jg
fldcw
mov
jne
sub
mov
cmpsb
filds
das
mov
push
mov
inc
sti
push
adc
nop
add
mov
jmp
mov
pop
pop
xor
cmp
test
mov
or
fucomi
cli
inc
and
mov
ss
addr16
xchg
scas
insb
pop
sub
xchg
push
inc
sbb
dec
subl
pop
cli
mov
pop
xchg
cwtl
lahf
mov
or
mov
mov
mov
push
mov
rol
push
out
ss
jns
lret
fld
mov
inc
lahf
mov
inc
adc
and
jmp
pop
push
xchg
das
jb
popf
cmp
mov
inc
ret
mov
pop
adcb
sub
jae
rcl
sub
jg
push
scas
fwait
stos
add
fstl
loope
add
outsb
dec
into
jmp
fisubrs
cwtl
add
inc
xchg
je
pop
scas
in
fists
loopne
add
int3
sarb
fisttpll
sub
ret
and
jl
xor
inc
testb
test
jb
dec
or
add
fiaddl
imul
notl
fisubrs
dec
adc
rcr
mov
pop
scas
and
andl
pushf
cmp
fildll
sbb
mov
xlat
leave
sub
stc
jmp
in
xchg
decl
add
sbb
inc
mov
jge
adcl
mov
sarl
sub
scas
lahf
repnz
aad
stos
adc
mov
das
int3
inc
push
xchg
jbe
fistpl
xchg
adc
mov
pop
jo
sbb
inc
ficomps
int3
int
mov
cmp
push
inc
aas
gs
inc
pop
jns
ja
xchg
mov
rcl
push
mov
sub
scas
add
divb
inc
je
in
mov
lahf
inc
dec
fisttpl
out
fsts
rcl
aaa
add
cmpsl
pop
push
inc
xor
xor
pop
inc
clc
hlt
es
subl
cli
addr16
pushf
ja
enter
jo
test
je
test
or
nop
xchg
das
jnp
out
inc
pop
xor
add
mov
dec
cwtl
push
pushf
jbe
pop
loopne
push
aad
mov
jl
fnstsw
std
sbb
dec
sub
ret
repnz
out
mov
or
fdivr
jmp
mov
xchg
out
sbb
popf
cld
pushf
xor
xchg
xchg
push
pop
sahf
xchg
aaa
fidivrl
scas
scas
xor
out
dec
fucomi
stos
sub
in
inc
inc
je
xchg
and
inc
xor
xchg
lock
xlat
jg
inc
sbb
sub
dec
sbb
xcrypt-ctr
cmpsl
sbb
out
xor
pop
cmp
gs
dec
rclb
dec
push
xchg
lods
int3
cmpsb
mov
fsubr
enter
sbb
and
lcall
ret
fimuls
roll
mov
push
push
fsts
xchg
mov
sbb
ljmp
in
inc
pop
pop
add
jo
push
cmp
scas
mov
dec
addr16
inc
aaa
jae
jg
sub
jne
pop
push
push
aam
stc
sbb
mov
iret
mov
imul
jbe
mov
pop
mov
popa
jnp
iret
sti
addr16
jo
mov
or
adc
adc
fwait
into
test
and
fs
and
fimull
out
cs
and
insl
cwtl
inc
rcll
loope
out
stc
daa
lods
adcl
adc
popa
push
aaa
mov
or
xor
pusha
fsts
fmul
cmc
fidivl
mov
mov
xor
test
or
daa
sub
adc
add
jno
test
addr16
in
test
adc
jmp
inc
outsb
cmp
jno
mov
jbe
push
rcrb
cmp
pop
mov
jb
aad
xchg
sahf
mov
xchg
mov
dec
hlt
jmp
adc
dec
daa
xor
mov
fsin
rorb
cli
fiaddl
cli
fcoms
in
popa
push
in
jle
mov
outsl
lods
push
test
imul
mov
inc
cmp
mov
push
inc
lock
sub
mov
inc
push
sbb
xchg
add
lock
push
dec
js
or
repnz
inc
fcoms
and
mov
jl,pt
test
xchg
pushf
pusha
out
test
les
and
daa
mov
gs
xor
xorb
xlat
lcall
jle
add
lods
mov
hlt
gs
mov
dec
dec
mov
pop
in
xchg
orl
aas
adc
mov
push
sbb
ss
dec
xchg
add
jno
jo,pt
mov
jg
popf
mov
arpl
pop
test
leave
pushf
repnz
sub
mov
push
dec
pushf
outsl
push
or
outsl
jge
imul
and
into
pushl
movsl
add
cmc
fwait
push
imulb
mov
jp
xor
dec
lret
jl
sbb
loopne
adc
adc
sti
mov
xor
sub
pop
and
inc
xor
mov
insb
mov
dec
leave
into
mov
test
pop
mov
rcll
daa
or
inc
in
xchg
cmc
test
or
cmpsl
jo
mov
inc
ror
adc
xchg
jnp
pushf
dec
or
inc
dec
insl
je
mov
out
sub
or
rcrl
mov
jno
repz
out
ret
pop
ja
outsl
jno
dec
pop
sbb
dec
popf
add
test
inc
xchg
cwtl
iret
or
rcrl
aas
ret
inc
jle
mov
cmp
les
sub
and
mov
mov
xor
xor
mov
adc
lods
mov
xor
jo
rclb
cmp
sbb
pop
fisttpl
lods
xor
inc
loopne
stos
aas
test
push
dec
pop
movsb
test
xchg
rcrb
mov
popf
test
imull
inc
daa
dec
mov
push
and
sahf
xor
ret
adc
jle
ds
fmul
insb
movsl
adc
rcrb
fdivrs
shlb
jae
pusha
xchg
ljmp
xchg
aad
lods
out
leave
pop
fs
xacquire
mov
jecxz
jmp
push
outsl
pushf
jb
mov
cwtl
mov
xchg
mov
adc
sti
fstpt
cmpsb
dec
movsl
imul
xchg
hlt
fiaddl
sbb
adc
popf
push
in
loopne
aam
or
mov
push
xchg
popa
loop
and
fsubrs
imul
adc
dec
out
adc
lea
sub
scas
das
int
sub
mov
icebp
mov
mov
sub
adc
enter
adc
in
xchg
loope
cmp
orl
jecxz
dec
and
or
and
cmc
sar
sub
sti
imul
int
scas
or
lahf
es
push
mov
stc
sbb
repnz
dec
lods
xor
repz
sub
cltd
xchg
imul
roll
out
pop
add
in
addr16
les
test
rcll
roll
push
nop
inc
push
arpl
subl
sub
inc
call
or
enter
add
outsb
testb
pop
sub
clc
loope
pop
adc
or
dec
and
xchg
outsl
ret
xchg
jle
sbb
add
cmpl
jb
push
add
addb
cwtl
pop
ret
fadds
cmp
lock
stc
mov
push
sub
cs
push
insb
push
into
ljmp
fcomip
les
jo
test
aam
push
movsl
xchg
mov
repz
outsb
dec
push
or
xchg
and
xor
inc
mov
cmpsb
jo
ljmp
in
sub
movsl
loope
jno
addb
push
mov
fsubl
fistl
jae
jecxz
cwtl
dec
leave
and
lcall
push
addr16
xchg
fists
xchg
out
mov
popa
mov
cmp
sbb
inc
xor
jmp
or
call
es
cmp
xchg
test
push
adc
mov
pusha
movsl
pop
jno
aas
test
js
sbbl
jbe
mov
mov
stos
icebp
jp
push
adc
or
pop
and
pushf
jle
fs
dec
iret
fpatan
sti
popf
push
and
jge
scas
vxorpd
jb
sub
or
mov
adc
or
scas
mov
mov
lret
nop
fs
shrb
sub
xchg
dec
out
and
data16
mov
jns
lret
js
mov
shl
mov
int
mov
mov
scas
mov
test
in
sarl
fldt
les
adc
xchg
sbb
inc
jb
stos
xchg
dec
ljmp
mov
repnz
into
inc
clc
xor
daa
test
xchg
lahf
pop
sbb
jno
push
mov
jns
popa
sbb
subl
jnp
sti
nop
jb
mov
ret
sub
popa
and
inc
xor
out
mov
sub
sbb
lret
imul
loopne
xor
mov
xorl
pushf
decb
arpl
lock
jb
rol
mov
mov
dec
fcomip
push
xchg
scas
sbb
jne
lods
push
push
adc
icebp
movsb
adc
jb
scas
shlb
mov
pop
sub
stos
adc
jb
jle
sbb
push
je
mov
ret
hlt
movsl
cmpl
stos
stc
mov
mov
xchg
insb
lock
jge
or
jae
push
jge
sub
dec
mov
add
aas
and
movsl
add
mov
push
mov
mov
inc
mov
and
lock
xor
sbb
jg
xorb
popf
and
xchg
nop
insl
das
or
sarl
fildl
mov
push
xchg
push
nop
xchg
pop
scas
inc
inc
psubusw
test
jmp
stos
mov
not
out
and
adc
inc
mov
push
dec
adc
dec
sub
jecxz
popa
sub
sub
outsb
rcr
repnz
xor
into
ret
out
repz
movsl
scas
add
cld
push
ja
insb
adc
mov
inc
adc
pop
mov
push
push
ja
or
imul
sbbb
jbe
xor
or
fcomps
lcall
mov
lock
lods
xlat
cmpsl
orl
test
sahf
inc
ss
lahf
or
std
insl
movsl
fildll
push
in
jmp
test
push
dec
mov
insl
xchg
lods
or
and
cltd
hlt
xor
cs
or
jnp
movsl
movl
cltd
adc
jae
jp
mov
pop
jno
jge
in
loopne
pop
scas
iret
push
inc
stos
popf
lds
rorb
or
or
outsl
sbb
jnp
mov
and
cmpsb
aaa
mov
hlt
jnp
fmull
pop
xor
jmp
jnp
cmpsl
add
lods
dec
icebp
push
repz
cltd
adc
unpckhps
pop
stos
and
mov
xor
mov
dec
pop
in
cmpsb
mov
out
dec
mov
ficoms
sbb
cmp
cmpsl
ss
and
in
aad
pop
cmp
lea
and
mov
mov
add
cwtl
pop
jecxz
ret
arpl
adcb
sbb
xor
push
mov
and
xor
mov
cmp
std
imul
cld
cld
lea
jl
inc
fisubl
int3
out
or
mov
pop
jp
faddl
movsl
jb
mov
add
fs
inc
dec
daa
jo
inc
dec
pop
fcmovnbe
mov
jb
aam
push
sub
inc
repnz
cmp
inc
pop
mov
add
xchg
xlat
outsb
and
pushf
pop
addl
cmp
push
les
sbb
mov
adc
jecxz
cmpsb
lock
mov
jmp
out
mov
test
jo
sub
pop
xor
push
arpl
mov
mov
cmp
sbb
dec
mov
adc
push
or
rcrl
jns
lcall
adc
cmpsl
shll
insl
and
push
jl
test
int3
and
mov
push
sbbb
ss
mov
fldt
jmp
mov
add
jo
iret
sbb
sbb
movb
lcall
hlt
inc
sbbb
shll
jne
pcmpgtb
mov
cwtl
jge
je
adc
rorb
mov
sbb
loop
mov
clc
fcoml
xorl
push
or
xor
xor
add
imul
cwtl
pop
out
inc
jno
aam
repz
inc
test
fidivrl
imul
and
lods
xchg
lods
stos
xchg
cli
sub
xchg
test
out
jno
push
push
lods
cmpsb
movsb
call
dec
fstpl
push
cmc
sub
xchg
lods
fs
and
imul
xor
adc
lods
adc
mov
nop
push
jl
out
repnz
add
pop
and
movsl
mov
test
cltd
cld
adc
adc
js
mov
xor
std
jecxz
mov
sbb
dec
sbb
loopne
mov
scas
pop
arpl
shl
jns
and
or
cltd
test
mov
xchg
or
nop
and
or
call
push
pop
dec
enter
ss
cmp
jbe
aas
inc
negl
push
dec
xor
push
xchg
xchg
adc
int3
inc
push
jno
in
pop
add
out
ret
jb
cmp
aad
pushf
add
mov
push
or
aaa
xor
lods
pop
pop
sbb
pop
inc
inc
int3
shlb
sbb
stc
arpl
in
xor
push
mov
inc
in
cs
xchg
out
pop
pop
rcrb
xor
test
inc
add
dec
aaa
loope
add
pop
or
dec
cld
pushf
mov
xor
je
test
jae
xlat
inc
jnp
mov
js
sub
push
sub
jno
add
sbb
dec
mov
and
inc
pop
cld
in
cwtl
xor
nop
adc
xchg
add
out
rorb
jb
or
stos
lock
push
and
and
aaa
pop
test
lret
dec
push
sbb
xchg
arpl
push
fwait
jno
mov
cltd
push
xor
pop
push
iret
xchg
gs
cmp
push
scas
adc
inc
inc
shr
jno
mov
scas
or
loopne
inc
jo
adc
fldlg2
pop
mov
push
clc
mov
push
cmp
push
ret
mov
jle
inc
adc
int3
inc
adc
push
shlb
out
pop
sub
pop
mov
jmp
xchg
pop
xchg
inc
sub
xchg
ss
test
test
pop
lret
jecxz
mov
sbb
dec
fisttps
subl
fsubs
dec
pushf
jbe
mov
or
stos
outsb
je
and
call
mov
iret
mov
fdivrp
mov
cs
jle
xor
adc
std
mov
mov
ret
jg
lods
mov
xchg
mov
jo
aas
inc
xchg
lret
das
cmpsl
inc
jge
lcall
nop
cmc
push
out
call
ds
push
cmpsl
cmp
pop
repz
sysexit
addr16
ljmp
xor
rorb
int3
test
xor
or
mov
jnp
imul
outsl
call
stos
sbb
pushf
mov
lods
dec
sub
stos
inc
shl
in
dec
pop
in
pop
jne
inc
and
mov
mov
nop
inc
mov
loope
into
mov
inc
ret
xchg
popa
shlb
xchg
scas
out
loopne
ja
pop
movsb
jp
push
xchg
or
push
inc
jge
daa
cli
xchg
enter
and
xchg
pop
mov
cmp
jge
mov
mov
sub
pop
imul
fstpt
cltd
sub
jmp
jae
sbb
aas
sub
arpl
inc
test
notb
pop
or
push
rol
mov
mov
out
nop
test
out
mov
inc
out
jge
cmp
mov
push
leave
jne
stos
pop
arpl
pcmpgtd
setl
xchg
lahf
lds
add
pop
push
xor
mov
add
pop
sbb
adc
add
ret
jnp
lea
inc
js
lret
pushf
sub
push
ja
inc
loopw
push
mov
dec
enter
cmp
jno
or
add
cmpsb
lods
push
cmp
mov
push
mov
cmp
jno
jbe
fidivl
jo
enter
imul
into
push
ljmp
dec
push
mov
dec
jns
fsubrs
fidivrl
adc
pushf
xlat
cli
push
sarl
dec
dec
sbb
inc
jae
test
pop
pop
shrb
adc
fmull
cmp
std
clc
cli
jmp
mov
lret
dec
cmp
movsl
pushw
cmp
fisubl
shr
sub
iret
call
outsb
popf
popf
jmp
push
rol
jl
fwait
scas
addr16
fs
das
sub
xchg
inc
xor
sbb
mov
dec
sti
call
add
pop
jo
xor
mov
pop
out
fists
pop
in
mov
sub
call
rcl
imul
insb
xchg
sbb
repz
test
inc
xor
or
adc
gs
inc
mov
dec
std
into
cmp
in
adc
push
int3
ret
push
fisubrl
xor
mov
add
lcall
rorl
pushl
lods
xor
pop
bsr
pusha
lods
ds
or
ja
stos
popa
jmp
popa
cmpsl
add
jecxz
test
fs
xor
xchg
sub
jo
adc
imul
push
xor
popf
sbb
loope
pop
mov
pop
testb
out
mov
data16
ret
test
sbb
sti
cli
gs
and
fmull
and
inc
xlat
or
mov
adc
jne
sbb
arpl
and
aaa
imul
rcl
adc
push
pop
cwtl
xor
mov
jl
and
adc
movups
jnp
sub
gs
or
insl
fs
sub
mov
imul
xor
imul
cld
mov
sub
repnz
fs
imul
sbb
push
mov
rcr
lds
or
jl
es
nop
loop
pop
xchg
pop
mov
in
xorb
mov
outsl
stos
inc
lcall
add
popa
stc
gs
mov
mov
test
adc
lods
add
sahf
xor
lahf
mov
nop
mov
cs
mov
out
or
ja
sub
jae
imul
xor
out
es
jmp
scas
pop
push
ss
shrl
inc
stc
nop
inc
loop
sbb
lods
outsb
and
negb
xlat
out
push
das
pop
arpl
mov
fs
mov
stc
sbbl
aas
or
mov
insb
and
loopne
insl
js
stos
loopne
in
xor
enter
add
sub
sbb
cltd
outsl
movsl
and
push
popf
sub
addl
lret
and
mov
mov
xor
movsl
push
add
pop
dec
rorl
cmp
jbe
hlt
cmp
sbb
loop
mov
movsl
ja
enter
xchg
pop
jp
rcll
fwait
es
cmp
rcrb
testl
xlat
and
pusha
ret
push
or
jo
ret
mov
sub
inc
out
inc
lods
and
xchg
stc
push
cltd
les
mov
call
sahf
sar
sub
cld
ljmp
dec
popa
out
vpmulhw
fstl
out
test
inc
mov
js
movsl
adc
fcoms
sbb
xchg
mov
inc
push
in
stos
mov
jno
inc
inc
pop
or
sti
mov
jnp
test
cmp
aad
loop
lahf
pop
rcrl
mov
fs
rcrl
mov
enter
out
mov
inc
out
mov
js
xor
lcall
dec
dec
mov
and
xor
xor
mov
sub
pop
inc
or
jns
test
lods
iret
mov
movsb
aam
fsts
loopne
or
mov
or
cmp
add
xor
push
es
lret
std
nop
repnz
push
pop
int
xor
sub
pop
sub
and
sbb
xchg
xchg
mov
dec
and
fs
pop
stos
lcall
out
test
test
data16
mov
iret
adc
cmpsb
aad
fwait
jne
pop
cs
imul
loop
jo
xor
dec
or
push
fs
sbb
xor
sbb
and
sub
cli
in
fsin
sarl
xchg
fnstsw
push
in
lock
outsb
bound
daa
cmp
inc
ror
or
lds
jnp
xor
ror
and
fimuls
aam
mov
test
push
aam
shlb
roll
mov
dec
ljmp
xchg
mov
xchg
shrb
cld
push
repnz
and
dec
outsb
jle
add
testb
into
cmpsb
pushf
jge
add
push
fcompl
lcall
xchg
lret
addb
mov
and
jecxz
outsb
fwait
leave
mov
lods
movsl
ss
call
aas
fnstcw
sub
push
sbb
push
push
out
mov
cmp
popf
repz
and
push
jecxz
fcoms
sbb
andl
pop
or
cwtl
mov
push
into
mov
jecxz
or
jl
mov
pop
mov
mov
xor
mov
xchg
or
dec
sbb
ds
xchg
xchg
repnz
adc
out
fmull
pop
mov
push
jmpw
cli
mov
dec
sti
sbb
push
shrl
fsubrs
mov
aad
fldenv
sbb
sbb
clc
ret
inc
jnp
rcll
mov
xchg
and
outsl
push
sbb
inc
xlat
int
out
push
fwait
fs
mov
sub
mov
xchg
lahf
jge
inc
xchg
sbb
aam
xor
dec
jle
and
push
scas
pop
out
xor
xchg
pushf
mov
and
test
sub
out
popf
in
pop
inc
in
jge
jmp
and
mov
push
out
push
dec
dec
sub
sahf
mov
aam
sub
sahf
dec
jmp
inc
iret
test
jmp
mov
movsb
in
pop
jle
imul
stc
test
dec
out
sub
cli
pop
movsb
inc
push
fnop
mov
xor
cs
mov
test
std
mov
jbe
inc
mov
jg
inc
sub
pop
fcompl
mov
into
push
mov
and
xchg
aad
adc
jg
cmp
rcrb
mov
gs
into
outsb
sbb
push
add
inc
ja
mov
imul
scas
dec
fnstcw
xchg
mov
jae
lods
sub
mov
mov
call
dec
xchg
jae
test
pop
ret
jo
movsb
cmp
and
dec
out
stos
add
popf
jnp
test
xchg
ret
inc
nop
lret
jns
xchg
adc
sub
mov
inc
mov
pop
inc
push
mov
cli
movsb
and
mov
popf
pop
test
in
cwtl
leave
fnstenv
bound
pop
cli
test
jmp
xchg
outsl
jb
lds
test
xchg
ret
add
xor
lret
fs
pop
iret
pop
cli
jp
sahf
or
jge
notb
mov
dec
ds
dec
or
ss
in
loope
stc
fistl
mov
xchg
loop
add
in
add
push
lret
jl
xchg
leave
in
fdivs
mov
jne
jmp
and
in
pandn
or
loop
sbb
cli
pop
sbb
fcomps
cmpsl
divb
sbb
pushf
mov
xchg
jle
das
sbb
pop
loopne
in
xor
mov
push
mov
mov
or
popf
js
rclb
xlat
jg
mov
pop
scas
cmc
add
loope
loopne
push
cmp
push
mov
push
inc
fldl
mov
xor
pop
outsl
stc
mov
jno
pop
dec
in
mov
rcr
pop
ds
cwtl
mov
xchg
dec
sarb
loopne
imul
aaa
frstor
fisttps
pusha
stos
and
pop
inc
std
pop
call
adc
outsl
and
out
arpl
lea
cli
push
adc
movsb
ljmp
lds
add
dec
inc
xor
shr
outsb
xor
xchg
xchg
test
aaa
out
push
and
cli
cmp
jno
fwait
push
sub
test
cli
inc
xor
lods
dec
xchg
lret
fsub
scas
mov
mov
dec
mov
mov
daa
imul
ucomiss
dec
mov
push
scas
jnp
xchg
je
idiv
and
cmc
sbb
adc
mov
xchg
mov
es
int
cmc
mov
cmp
stos
and
in
cmpsl
loopne
push
cmp
imul
dec
or
clc
jg
mov
adc
inc
adc
mov
icebp
rcll
pop
lcall
mov
adc
fs
cmp
aaa
xor
or
sti
add
jp
sbb
add
in
imul
jp
mov
test
cmp
shll
mov
out
dec
aam
test
sub
adc
fcomi
mov
mov
scas
daa
call
xor
clc
push
inc
sub
inc
xor
in
es
push
sbb
dec
ret
sbb
push
jl
scas
dec
test
lods
lret
je
mov
inc
std
out
xor
add
stos
pushf
mov
xor
mov
es
movb
xor
xchg
shrl
pop
sub
jo
cmp
add
nop
or
lret
notb
add
mov
mov
mov
inc
clc
mov
jg
or
pop
xor
sbb
jbe
and
xchg
subl
aam
mov
cmp
or
xlat
insb
fsubrs
out
fisubrs
dec
imul
movsb
and
aaa
rcrl
xchg
mov
mov
or
xchg
mov
jbe
jg
std
sub
and
and
pushf
cmp
lods
mov
dec
xor
cld
sub
js
outsb
ret
dec
clc
and
xor
adc
mov
call
add
popf
jecxz
adc
mov
or
filds
jle
or
jb
lret
or
inc
mov
dec
js
mov
inc
pop
test
mov
jmp
jae
pop
aad
dec
lock
dec
xchg
movsb
sub
sub
adc
pop
aas
xchg
imul
in
jp
push
adc
daa
push
fadds
lea
add
mov
pop
mov
stos
insb
inc
xor
inc
adc
sub
xor
iret
aad
rcrl
or
dec
jecxz
fldcw
pop
dec
jmp
push
add
add
jg
add
adc
or
push
mov
lahf
jb
push
ss
and
push
sub
mov
push
xchg
enter
lret
shlb
stos
inc
loopne
and
sub
sbb
or
pusha
add
fldcw
dec
add
daa
stc
out
sbb
ds
mov
fiaddl
inc
js
sub
adc
cld
mov
and
insl
in
decb
mov
out
adc
sub
push
xor
outsb
insb
mov
jo
adc
mov
cmp
lahf
icebp
inc
leave
fld
pop
dec
dec
sub
movsl
mov
xor
mov
jg
mov
aaa
xor
and
in
ljmp
bound
sbb
insl
dec
push
cmp
cmp
lcall
push
aam
push
mov
sbb
nop
cld
into
hlt
mov
xchg
shll
mov
push
push
ss
jmp
and
js
sbb
nop
cmpsb
arpl
imul
mov
push
pop
pop
pop
inc
pop
movsl
mov
or
iret
addr16
xor
popf
ja
add
mov
adc
and
testl
push
cmp
add
aad
je
sbb
sti
pusha
test
ja
pop
scas
jo
js
icebp
mov
shrb
movsl
aad
lahf
in
sbb
xchg
nop
loop
insb
sub
dec
push
cli
sbb
test
push
push
adc
push
call
cmp
and
jo
daa
das
inc
xorl
jb
cmc
xor
test
sub
testb
loopne
test
je
dec
mov
sub
push
jg
gs
pop
ss
cmp
cmp
cmp
aad
cwtl
decb
lods
ljmp
inc
push
push
test
cltd
iret
xchg
push
popf
iret
jge
les
movsl
mov
push
lea
mov
adc
jae
lea
mov
jmp
cli
aaa
push
sbb
lcall
mov
xacquire
xchg
cmc
insl
stos
fsts
and
mov
test
fcom
cwtl
insl
sub
push
in
bound
push
inc
mov
mov
les
dec
cs
ret
pop
repnz
pop
xchg
dec
ret
add
arpl
push
xor
test
int3
xor
cmp
rcrb
pusha
xor
data16
ficomps
inc
sub
cmp
hlt
pop
xchg
cmp
jns
cmp
aam
iret
insb
out
adc
jo
cmpsb
enter
mov
insl
rcll
daa
and
or
mov
loope
jmp
cmp
fstpl
loopne
movsl
mov
push
popf
stc
pop
movsl
adcb
ljmp
cmp
mov
add
dec
adc
out
pop
sarl
movl
add
fucompp
ja
cmp
jnp
add
test
sbb
or
inc
stc
divb
imul
sarl
jnp
in
xchg
leave
xchg
add
xor
pop
push
xchg
jb
aaa
cs
xor
push
sarb
jnp
pop
sarb
cmp
adc
data16
or
addr16
mov
rorl
cmpsb
mov
pop
ds
mov
xchg
leave
in
mov
scas
in
mov
sahf
jbe
or
pop
add
enter
imul
or
mov
daa
test
int3
mov
in
or
pop
add
stos
icebp
adc
ficompl
pop
sbb
jns
repnz
fstl
mov
mov
mov
or
inc
sahf
cld
jge
ja
mov
out
stos
pusha
sbb
cmp
int
add
sub
mov
xchg
stos
pop
cmp
xchg
dec
bound
jecxz
push
xor
arpl
je
fisubl
sbb
sub
mov
ret
daa
or
xchg
inc
clc
adc
push
sti
cmpsl
fwait
rcr
jbe
sbb
mov
mov
pop
lock
arpl
std
jg
and
lods
jae
call
cmpsl
or
aam
outsl
out
pop
push
aad
adc
mov
lods
repz
sbb
rcrl
clc
xlat
js
cmp
std
aaa
les
pusha
iret
ror
mov
bswap
push
ja
icebp
xchg
add
nop
cmp
and
push
dec
mov
push
adc
stc
fwait
pop
xchg
xchg
xorl
aam
pop
mov
roll
pop
fcos
movsl
sub
sbb
cmc
push
arpl
sub
dec
aam
inc
inc
mov
lea
jb
repnz
mov
and
dec
insb
jne
das
jnp
jl
fs
inc
out
jmp
inc
xor
scas
push
fimuls
loop
xchg
cmpsb
frstor
dec
sub
inc
test
dec
push
fisubrl
loopne
push
imul
sub
aad
lcall
adc
data16
inc
out
lods
ds
popf
cmp
push
mov
xchg
xchg
add
cmp
cmp
ffreep
cmc
ds
sbb
sub
inc
xor
jecxz
mov
jno
insl
xchg
sub
jp
in
push
pop
sub
cltd
dec
jb
jbe
pop
ja
xchg
stos
mov
fs
in
and
jge
mov
mov
fnstenv
fldl
out
xlat
std
cld
mov
cmc
pop
sbb
data16
or
push
push
lods
js
pusha
inc
mov
dec
loop
mov
pusha
test
sbb
adc
mov
inc
xchg
aam
negb
push
mov
lret
movsb
out
push
jp
fs
xor
movsl
push
pop
test
adc
lahf
or
xchg
idivl
adc
test
insb
or
scas
cmp
scas
imul
xor
imul
in
ljmp
inc
inc
pop
ljmp
lahf
push
mov
and
pop
sbb
mov
mov
das
popa
xor
loope
cmp
mov
lret
frstor
cmc
in
jo
push
or
pop
adc
sub
or
adc
repz
arpl
jbe
inc
add
xor
cmp
or
or
sbb
ffree
jmp
imul
bnd
adc
adc
into
loope
inc
push
movsl
call
fnstenv
push
mov
and
lods
xchg
popa
loop
test
jle
mov
stc
lahf
icebp
shll
xchg
addb
xorb
sti
stos
inc
popa
sbb
pop
sub
sub
push
jne
or
or
fiaddl
mov
jnp
mov
inc
or
adc
sbb
xor
pop
imul
cmc
dec
icebp
xlat
and
xchg
daa
inc
dec
mov
xchg
jle
loopne
dec
mov
orl
icebp
out
adc
mov
push
inc
inc
imul
pop
fs
cld
sbb
rolb
push
imul
sti
loope
pop
mov
or
xor
xchg
pop
mov
xchg
nop
outsb
pop
pop
out
cmp
mov
lds
jae
inc
cmc
inc
test
dec
and
popa
mov
and
ja
sub
wrmsr
sbb
cltd
je
scas
mov
mov
sub
push
sbb
out
daa
mov
dec
inc
test
adc
mov
mov
add
test
jae
and
jecxz
pop
xor
out
stos
lods
cld
pop
cltd
cltd
xchg
adcl
scas
inc
int
mov
je
imull
mov
subb
mov
mov
inc
jo
xor
loope
arpl
pop
outsb
aas
jbe
pop
inc
sub
daa
inc
loopne
fsubl
push
cmp
cmpsb
in
xchg
repnz
sub
xor
mov
stos
rorb
jae
sbb
cmpb
inc
pop
dec
jbe
pop
adc
mov
cs
lock
movl
insl
arpl
add
ds
test
mov
or
mov
ret
mov
pop
imul
and
push
dec
nop
je
out
flds
push
lods
fimuls
jae
test
mov
insl
pop
pop
adc
repnz
shll
mov
test
sbb
dec
test
mov
hlt
ss
and
pop
inc
cmp
dec
lret
sarb
in
aas
xchg
pusha
jns
mov
nop
es
out
loopne
adc
loop
ljmp
cmp
jp
inc
cvtdq2ps
jge
cli
inc
test
rcrb
inc
push
add
jge
dec
ds
cs
lret
dec
add
or
pushf
test
adc
scas
jle
mov
mov
aaa
pop
lret
dec
and
and
pushf
mov
cltd
clc
jge
mov
incl
loope
xor
scas
insl
cmp
aas
mov
call
cmp
test
nop
adc
out
cmpsb
dec
add
adc
cmp
shrl
fwait
push
cs
outsl
xacquire
mov
popf
pop
subb
orl
add
mov
ret
xlat
or
mov
sbb
inc
clc
arpl
dec
lods
mov
jno
mov
jno
clc
cmp
cbtw
jmp
sub
add
scas
inc
in
mov
lret
std
leave
mov
jae
arpl
and
inc
xchg
fs
out
cmpl
mov
mov
sbb
jl
lret
std
andb
fidivl
sub
loope
andb
ror
pop
xor
cmp
je
or
mov
leave
inc
fs
adc
lds
pop
in
sahf
lock
movsl
or
and
push
mov
lret
cmpsl
push
lea
or
lret
dec
scas
test
cmp
or
stos
add
dec
pop
movsb
aad
sub
nop
push
and
pop
sarl
push
push
mov
fs
mov
sbb
out
das
test
pop
es
mov
cli
and
sub
iret
bswap
mov
sub
fdivrp
jns
lds
dec
mov
dec
mov
mov
mov
xor
clc
jnp
ror
jnp
test
hlt
cs
jns
inc
imul
push
cltd
sti
ja
scas
inc
mov
es
and
inc
imul
in
bound
pop
data16
out
je
ror
out
lods
leave
and
cwtl
cmpsl
dec
add
test
push
cmpsl
inc
faddl
add
lcall
dec
fwait
mov
shl
cmp
mov
addb
push
and
stos
aam
cmp
push
adc
fadds
jge
and
cmpsl
int
and
fwait
nop
push
pop
stos
mov
pop
enter
jg
pushf
cmpsl
fcmovu
scas
xor
sbb
mov
adc
in
lea
add
in
imul
mov
cmc
out
loop
test
mov
add
xor
mov
mov
fs
loope
jl
aas
orb
jae
lea
sahf
xor
xchg
cmp
push
scas
pop
mov
add
sarb
daa
sub
lods
mov
cli
jo
test
insb
movsl
in
or
push
adc
xchg
xorl
in
mov
mov
sub
mov
inc
sub
imul
pop
leave
stos
rcr
jge
and
push
add
add
fsubl
sbb
inc
sub
inc
das
push
fdivrs
rorb
jge
mov
mov
pushf
and
or
cmp
mov
imul
jmp
jge
test
adcb
jmp
sub
lret
lahf
cld
mov
dec
aaa
sub
inc
mov
es
aad
inc
or
pop
sbb
push
fs
jno
in
ljmp
ret
ret
pop
adc
jge
xor
xchg
mov
or
lcall
aad
mov
push
mov
stos
movsb
push
jnp
ret
pop
mov
out
stc
sbb
icebp
inc
mov
jnp
dec
push
adc
test
pushf
dec
jns
inc
push
mov
xchg
cli
push
in
pop
xor
inc
jbe
dec
adc
lods
push
mov
push
cmp
dec
pop
mov
test
gs
into
leave
jb
in
arpl
mov
pop
fisttps
int
cmpsb
xchg
xchg
sub
jae
lds
dec
fwait
inc
popa
cmp
out
fstpl
mov
ljmp
xor
bound
mov
mov
inc
and
std
incl
ja
aad
rorb
roll
daa
mov
mov
into
lea
jbe
jbe
hlt
andb
les
lahf
jle
adc
cmp
mov
and
push
pushf
push
cmp
xor
xchg
sub
add
lret
pop
popa
mov
sub
add
scas
ss
add
sub
cmp
shrl
jge
or
aas
fwait
dec
negl
pop
int3
inc
sub
out
mov
aam
mov
xchg
dec
dec
inc
xorb
lret
insl
dec
add
sbbl
lea
inc
cltd
xchg
cmp
jo
sti
dec
ds
push
xchg
push
clc
mul
jmp
mov
cmp
cmp
cmp
scas
jns
lcall
ss
loop
jge
inc
xorl
cmpsb
pop
repz
cmc
out
in
jmp
jg
jo
push
pusha
popf
cmc
pop
mov
mov
fldt
rorb
int3
jo
jecxz
shr
sbb
lret
sarl
seta
scas
pusha
ret
or
lods
jge
flds
test
dec
xor
shrl
lret
sub
sub
shlb
mov
call
jae
cmpsb
rcll
or
sub
scas
hlt
or
sub
outsl
mov
test
mov
pop
or
pop
rcrb
fwait
mov
or
mov
stc
jle
jb
sarl
cmp
sbb
sbb
add
ds
js
cmp
loop
add
js
int3
subl
push
leave
add
and
out
jl
mov
add
dec
mov
pop
rcl
mov
mov
add
lret
test
mov
ret
pop
mov
int
mov
dec
in
in
cs
cld
insb
loope
daa
fcmovu
adc
push
sub
jge
xchg
jno
fisttpl
mov
gs
iret
insb
int3
repz
insb
mov
jp
out
imul
jno
jge
addr16
movsl
jne
shll
push
push
xchg
outsl
pop
cmpsb
or
je
jne
inc
xlat
scas
fnsave
jnp
mov
sbb
js
stos
int3
dec
push
fcomip
fwait
xchg
arpl
lock
mov
shll
push
xor
mov
inc
inc
cmp
ja
sub
xlat
ret
add
jns
push
in
les
ret
inc
stos
hlt
xorl
addl
cmpsl
les
push
js
int
mov
xchg
mov
adc
push
jg
outsl
pop
fs
dec
cmp
adc
jmp
cmp
lock
push
inc
pop
mov
lods
mov
mov
cmp
ret
add
rol
jnp
sbb
jge
sbb
dec
stos
mov
xor
dec
adc
test
inc
jnp
mov
jb
mov
mov
add
dec
mov
cmpsl
mov
aas
in
inc
mov
mov
nop
add
xchg
stos
ret
pcmpgtd
nop
add
mov
push
divl
outsl
sbb
popf
xor
mov
inc
jmp
pop
add
in
aad
mov
push
xor
cmp
cld
rolb
jge
xchg
das
mov
aam
push
or
popf
lcall
sbb
rcrb
aas
push
inc
lods
mov
or
je
pop
cld
setp
mov
shll
jp
frstpm(287
pop
test
lret
sbb
adc
subb
mov
in
xor
cmc
stos
ret
in
std
aad
sbb
les
jl
mov
daa
xor
xor
imul
jl
shrl
fwait
inc
dec
in
divb
fdiv
lods
pop
sbb
jmp
and
xchg
in
hlt
add
lds
pusha
out
sbb
aad
or
sub
and
or
testl
fstpt
dec
outsb
push
ds
hlt
push
in
and
and
add
xor
jl
mov
xor
inc
mov
in
push
nopl
xchg
cmpsl
insl
test
lods
in
loopne
fldl
cmpsb
dec
add
cli
je
jl
out
iret
lea
mov
movsb
cmp
sar
xchg
dec
cmpsb
push
adc
ds
fiaddl
mov
mov
push
test
lods
xchg
adc
lahf
mov
jg
jnp
cmp
xchg
or
push
gs
add
jge
mov
frstor
int
sbb
mov
lahf
mov
inc
mov
pcmpgtb
mov
out
roll
rorl
repz
push
std
ja
adc
es
mov
dec
sub
jne
sbb
and
sahf
jns
imul
xchg
sahf
cld
xor
pop
in
push
sub
test
push
in
imul
dec
pop
mov
pop
ficoml
and
lahf
or
call
scas
cld
bound
xor
cld
sub
adc
sarb
lahf
subb
fwait
push
out
push
mov
out
imul
lret
xchg
sub
pop
pusha
pop
scas
dec
lea
lcall
lahf
pop
push
leave
pop
add
jmp
push
push
mov
lock
sbb
daa
and
aad
jmp
in
or
icebp
int
rorl
hlt
inc
adc
lock
xor
dec
lcall
lds
ret
test
mov
add
cs
cmp
pushf
mov
pop
sbb
sbbl
repz
cmp
jbe
lods
push
pop
push
xor
jo
xchg
fists
xchg
adc
and
imul
rcl
jb
lods
filds
xchg
mov
jle
ret
xchg
mov
cmp
call
test
out
outsl
sub
stos
pop
mov
sbb
sbb
mov
or
cmp
mov
loop
mov
dec
movsl
aad
enter
daa
dec
pop
inc
fcmovu
into
jl
fcoms
dec
xchg
pop
sahf
and
xor
stos
loope
notl
aas
xchg
jle
adc
cmp
into
add
sbb
in
pop
fs
pop
and
insl
pop
xor
or
mov
mov
loopne
or
aas
rolb
shlb
jge
cmp
aas
or
lret
pop
repz
or
imul
icebp
push
sbb
and
dec
push
mov
lea
in
mov
cmp
and
and
push
addl
fs
in
pop
inc
sbbl
inc
lods
mov
popa
dec
daa
or
pop
pusha
push
imul
jg
in
push
xor
sub
sub
lods
xchg
sbb
sbb
sahf
mov
int3
adc
mov
jmp
sbb
lret
jle
pop
cmpsb
setbe
mov
test
push
into
fwait
sbb
call
jl
add
rclb
loopne
push
repnz
and
lret
dec
xor
in
pop
stc
fcompl
sahf
jmp
xor
cmp
ds
and
push
sbbb
enter
scas
enter
mov
insl
jo
fldl
push
cltd
mov
push
xor
sub
mov
mov
push
jo
pop
push
xchg
mov
push
and
add
sahf
bound
jb
add
sbb
cwtl
or
xchg
push
or
fnstsw
dec
mov
xchg
mov
js
mov
repz
icebp
jae
movsl
iret
fdivl
in
daa
pusha
cmp
lods
sbb
adc
je
jle
out
rol
cltd
or
add
push
mov
sbb
hlt
or
pushf
dec
imul
lret
mov
loope
inc
daa
dec
push
dec
pop
add
or
cli
lcall
sahf
sti
xor
jg
pop
sub
inc
jne
stos
dec
push
xlat
in
js
repnz
mov
xor
xchg
jle
rolb
sub
repnz
lods
aad
pop
orb
xchg
repnz
mov
push
scas
fdiv
icebp
add
fst
push
daa
ret
test
mov
push
or
in
pusha
or
cmp
jns
popa
daa
and
aam
jne
push
arpl
mov
ret
pop
xor
adc
movsl
out
jge
std
jmp
sahf
out
jecxz
jb
bound
cmp
lcall
mov
mov
push
jl
loopne
and
outsb
mov
xchg
loop
lret
lcall
xchg
sub
lret
dec
pop
xchg
scas
sbb
cmp
xor
jmp
inc
push
outsl
mov
xor
std
ds
mov
mov
inc
lock
cmp
leave
and
aad
dec
jne
xchg
out
jmp
fst
jns
int3
xor
ret
jne
or
test
rcr
push
ss
jne
jle
pop
jb
fcmovb
jp
add
cltd
arpl
adc
nop
sbb
rorb
jl
mov
jb
pop
cmp
and
inc
xor
sbb
dec
mov
and
add
add
ficompl
jb
xor
jb
mov
stc
sbb
xchg
push
inc
xorl
ljmp
and
jno
popf
mov
aas
loopne
xor
fidivrs
pop
jecxz
out
mov
pop
into
jne
xchg
or
jecxz
repnz
fwait
jnp
xchg
les
loopne
push
dec
gs
mov
mov
xor
popf
jns
out
jg
add
add
push
into
cmpsb
decb
mov
insl
or
nop
scas
nop
sti
sbb
push
aas
daa
outsb
xor
cmpsl
lea
out
imul
mulb
shll
std
test
mov
cmp
imulb
adc
imul
cmp
or
jns
mov
inc
sub
in
ja
mov
dec
pop
jno
adc
jb
fcomi
mov
sub
adc
mov
mov
daa
cmpsl
insl
pop
mov
mov
or
rolb
dec
ljmp
loopne
popl
cmpsb
insl
or
jo
out
push
scas
out
jge
dec
jb
mov
popf
mov
aaa
fucom
in
sbbb
cmc
js
and
sbbl
sbb
push
sub
xlat
and
stos
sahf
int
inc
jl
fcmovne
jo
jle
hlt
sub
add
mov
add
and
jo
mov
cmp
arpl
nop
jnp
add
into
cld
loope
mov
add
std
push
out
scas
mov
out
add
or
push
out
mov
jg
sub
cmp
push
int3
scas
ficomps
stos
push
mov
mov
xchg
dec
leave
imul
ljmp
cmp
loopne
filds
inc
decl
sub
lcall
ja
test
sub
dec
pop
push
mov
or
lcall
and
jo
and
outsb
push
sub
push
dec
jbe
repnz
movsb
cmc
loope
and
out
iret
idivb
test
aam
sub
aam
or
cmc
leave
mov
inc
movsb
and
icebp
xor
inc
push
lock
cmc
push
aam
push
nop
push
in
lock
enter
lock
dec
cmp
inc
out
xchg
insb
insl
mov
jmp
shr
sahf
xchg
insl
data16
fbstp
imulb
fldenv
push
mov
out
fldcw
arpl
push
in
lock
pop
test
nop
addr16
insl
and
cltd
lea
fldl
push
mov
cs
push
and
dec
pop
or
stos
stos
popf
in
push
imul
in
mov
paddsw
add
jbe
loop
jl
in
jae
pusha
lods
movsl
lods
les
jne
loopne
mov
lods
mov
aaa
fstl
add
fwait
or
jl
push
insl
cmp
dec
imul
xor
sbb
mov
stc
cmp
sub
mov
rorl
sub
push
call
inc
stos
in
add
xor
pop
and
dec
leave
lahf
and
cmp
sub
loop
js
int
jg
fsubr
mov
mov
out
test
out
ja
cmp
lods
inc
sub
cli
dec
mov
scas
or
pop
xchg
dec
insb
fcompl
fsubs
mov
mov
rclb
repnz
ret
add
int
rep
cmpsl
jecxz
fwait
dec
int3
das
sub
dec
mov
cwtl
fcomi
xor
hlt
xchg
mov
adc
inc
fidivs
insl
mov
jmp
clc
testb
shrb
mov
add
mov
sarb
data16
mov
pop
fwait
and
faddl
data16
ds
mov
sub
loop
xchg
pop
mov
mov
cmp
fimull
mov
push
mov
in
loopne
fstpt
ljmp
loopne
stc
scas
sarb
pop
adc
add
jae
call
mov
es
cmp
pop
mov
push
shl
add
int
inc
pop
push
mov
gs
notb
out
inc
jge
mov
aas
and
jo
xchg
test
stos
jns
cwtl
cltd
mov
xlat
push
test
ret
popf
adc
mov
out
xor
cmc
aam
cmc
xchg
call
lahf
cmc
test
movsl
mov
daa
andb
mov
inc
call
sbb
mov
ret
cwtl
ror
mov
mov
stos
repz
mov
je
fcmovne
xor
push
js
mov
rorl
mov
pop
inc
mov
xchg
add
gs
jecxz
mov
rclb
dec
dec
sbb
add
gs
push
ds
mov
pop
pop
push
fidivs
lret
loop
jp
push
icebp
shl
test
sbb
mov
repnz
aaa
ret
mov
test
sbb
int
push
fsubl
insl
pop
leave
mov
hlt
dec
shl
push
in
push
test
jae
push
sbb
mov
mov
inc
adc
fstpl
and
cmp
mov
jg
xorb
lret
dec
cmp
movsl
fwait
jo
or
and
jae
cmp
outsl
dec
cmpsl
xor
imul
mov
aas
fs
add
rcrb
mov
push
fs
push
lods
jle
add
pop
fs
aaa
pop
and
ljmp
cmpsb
sub
mov
fs
inc
nop
inc
fs
scas
jns
gs
or
and
or
mov
int
js
mov
xor
ror
jmp
jb
mov
aam
das
pop
clc
jmp
mov
inc
shll
xor
in
loopne
cmp
and
and
dec
je
xchg
pop
sbb
dec
in
std
pop
mov
pop
and
hlt
push
pop
out
pop
add
repz
mov
lret
out
scas
xchg
adc
xchg
mov
mov
push
push
adc
mov
loopne
xor
lods
adc
nop
jno
insl
out
sarl
leave
mov
in
testb
aam
gs
nop
inc
mov
xchg
xor
sar
sub
sbb
sbb
mov
xor
dec
jge
add
mov
lods
inc
cmp
xor
out
hlt
das
inc
movsb
sbb
mov
out
add
inc
mov
shlb
imul
cmp
movsb
mov
lock
rcl
jae
xchg
rcl
sbb
sub
fs
jo
subb
cmp
inc
cltd
inc
cmc
fwait
pop
or
cwtl
xor
movsb
cmp
mov
or
mov
mov
test
sbb
pop
pop
shlb
mov
sub
mov
cmp
mov
or
fmul
jae
xor
imul
lret
push
mov
or
and
sub
fnstsw
je
repz
xchg
imul
lods
push
fcmovne
and
stos
stos
add
outsl
and
mov
out
stos
jno
mov
icebp
and
sbb
jl
pusha
or
nop
mov
enter
xchg
mov
inc
cmp
mov
or
mov
inc
inc
movsb
out
jo
push
pushf
scas
lahf
add
mov
pop
in
jp
mov
pop
or
sub
or
jge
std
mov
out
outsl
jp
cmpsl
clc
lods
cltd
sub
xor
push
das
or
and
add
sub
ret
sarb
pop
cli
in
sbb
sub
add
jg
je
mov
arpl
pop
sub
adc
sbb
pusha
pop
push
jne
sbb
ds
fs
fistl
add
ret
shrb
push
cmpsb
clc
jmp
inc
pop
test
data16
or
inc
xchg
fs
mov
sub
add
or
lock
loope
jmp
xor
pusha
sbb
push
pushf
pop
fmull
sub
lds
je
mov
and
sub
sub
cmp
enter
mov
and
or
rol
mov
movsb
into
inc
inc
push
xchg
mov
out
mov
dec
in
push
inc
xchg
xchg
stos
incb
mov
stc
dec
icebp
mull
adc
lock
lea
cld
lods
pushf
stos
ficompl
sbb
cmpsl
cmp
cmp
or
adc
mov
outsb
es
lcall
lea
sub
cmp
pop
jns
ja
dec
cmp
out
lock
repnz
out
out
mov
pop
xor
jnp
push
lcall
pop
push
orb
jne
rorl
push
loope
add
xor
mov
jmp
icebp
pop
shl
push
mov
in
mov
sbb
pushf
push
scas
push
ss
clc
imul
repz
sti
fwait
and
nop
out
movsl
iret
cs
jno
arpl
or
lods
and
std
orl
mov
fisubs
jmp
or
jecxz
mov
mov
cld
flds
mov
sub
and
in
inc
int
and
mov
adc
je
xor
xor
jae
or
fsubs
sub
mov
out
imul
push
sbb
pop
and
dec
jb
mov
or
add
or
or
xor
and
cmp
arpl
test
movsb
add
movsl
inc
mov
leave
cmp
push
cmpsb
adc
repz
xor
ja
push
mov
lock
adc
or
das
bswap
ficompl
dec
dec
and
inc
push
out
inc
mov
and
adc
sbb
mov
popa
mov
sub
sub
inc
add
cmp
roll
sbb
push
shll
fstpt
ret
repz
dec
loope
sti
out
andl
xchg
test
xchg
pop
imul
sti
outsb
rorl
scas
push
ja
push
push
hlt
movsb
lea
bound
int3
test
cmp
xchg
sub
js
or
loop
cmp
cmc
pop
stos
dec
and
push
push
dec
test
jge
push
in
jmp
lcall
outsb
sbb
sbb
cs
inc
stos
sbb
push
mov
sbb
loop
mov
lds
jne
dec
scas
xor
pop
xchg
mov
inc
daa
mov
orb
or
cmpl
push
pop
jae
sarb
repz
into
xor
rcrl
and
pop
int3
xchg
xlat
loope
adc
jne
dec
or
rcrb
jo
sub
dec
push
push
repnz
pop
seta
imul
sbb
xchg
ret
roll
jge
lds
add
dec
movsb
add
cmp
sbb
dec
shrl
sub
dec
mov
cmpsl
mov
repz
push
insb
mov
ja
out
inc
ljmp
pop
pusha
insl
sub
fs
inc
aas
loop
xchg
push
gs
pop
shlb
sbb
jmp
cmc
stos
push
inc
adc
xchg
push
or
out
jle
jp
out
jp
xchg
xor
test
inc
lcall
or
popf
push
fs
jp
mov
in
test
adc
and
jecxz
pop
jo
push
insb
mov
jne
sbb
mov
inc
popa
mov
jmp
adc
out
out
sete
adc
out
mov
xchg
xlat
cmp
sbb
sub
arpl
aaa
jl
and
jno
pop
ret
or
xchg
stc
mov
gs
jbe
xchg
fxch
fisttpll
rcll
rclb
faddp
ds
cmp
mov
mov
shlb
adc
scas
pop
inc
mov
add
fdivrs
mov
cmpb
jecxz
xchg
sbbb
daa
add
jnp
aas
movsl
test
shll
add
cmp
pop
loopne
imul
adc
movl
push
ljmp
sbb
or
or
push
pop
mov
cld
xor
or
lret
lock
mov
or
push
fadds
aad
mov
inc
popf
jnp
add
lea
in
xor
xchg
pop
push
fildl
dec
pop
clc
mov
xor
or
xor
imul
adc
and
or
pop
pushl
jg
jp
mov
clc
and
cmp
mov
xchg
mov
lods
push
sub
mov
xchg
or
cmp
jb
je
mov
cmpsb
xchg
int
iret
adc
xor
test
call
mov
mov
in
in
jl
jmp
mov
cmc
fidivrs
nop
add
std
mov
mov
pop
cmp
xchg
mov
jno
xor
xor
add
adc
pop
adc
xor
inc
in
ds
jmp
jnp
ret
jno
mov
fstpl
xchg
inc
adc
pusha
add
add
std
in
xor
sbb
lret
lds
int
or
mov
sub
das
das
jp
imul
testb
shrl
fwait
rcrl
sbb
dec
pop
int
movsb
sbb
mov
cmp
in
testb
fwait
jbe
dec
daa
adc
push
and
shll
jmp
lods
and
jmp
push
loopne
jns
outsb
repnz
adc
roll
xor
daa
xchg
sbb
divb
add
adc
into
je
repnz
lods
ds
mov
inc
push
and
rcll
jae
mov
cmp
add
sti
aas
loopne
xchg
es
mov
mov
adc
mov
mov
gs
pop
int3
insl
jmp
inc
lea
adc
enter
jae
insb
adc
sbb
lea
or
and
fiadds
imul
mov
iret
out
or
pushl
cmp
iret
aas
movsl
ljmp
sbb
out
fs
xchg
sbb
adc
sub
push
bound
inc
jns
push
fwait
in
mov
add
inc
test
scas
cmp
cwtl
and
es
andb
mov
pop
mov
and
push
inc
rclb
mov
mov
movsb
pushf
xor
mov
fcomp
out
das
loopne
sub
loopne
sub
add
push
aam
jg
sti
inc
push
movsb
dec
insl
fidivrl
int
into
mov
jno
push
jbe
add
movsb
cs
je
decb
mov
sub
stos
xor
mov
test
jnp
mov
and
jo
sub
mov
cwtl
data16
cmc
add
sbb
ss
sbb
ljmp
ljmp
fiaddl
jp
and
ds
jns
add
sbb
cmp
inc
sub
mov
xor
pushl
push
push
fcompl
enter
push
test
and
jmp
pop
and
jecxz
lods
popf
inc
and
rcll
mov
xchg
pop
fstpl
mov
mov
hlt
ja
out
lret
pushf
xchg
cmp
dec
or
or
rclb
mov
stc
sahf
xor
lds
xchg
stos
leave
mul
mov
mov
int
add
lods
jb
std
out
lods
push
mov
lea
sbb
sbb
inc
jmp
mov
sbb
cli
add
in
or
std
stos
push
insl
insb
clc
je
lahf
adc
cmpsl
dec
push
cmc
and
jae
lret
push
xchg
in
fdivrl
pop
or
lods
mov
dec
xchg
int3
add
pop
fwait
repnz
push
dec
insb
sbb
pop
pop
mov
xchg
cli
ror
dec
jns
inc
fistpl
pusha
nop
or
mov
pop
push
jge
and
jecxz,pt
jg
sub
sub
ljmp
xchg
pop
addb
lds
sbb
mov
cmp
stos
push
in
add
orb
mov
and
sar
ss
add
cltd
xor
mov
outsb
sbb
imul
inc
leave
aaa
mov
cmp
cmp
lds
pop
sbb
fnop
or
ljmp
jmp
loopne
cmp
mov
lock
pop
setae
sarl
dec
divl
adcb
jae
sub
repz
sbb
fcoml
xor
sub
lea
lea
or
mov
bound
dec
fdivl
dec
push
inc
shlb
dec
push
mov
es
aad
mov
push
bound
lcall
dec
icebp
mov
cld
jge
lock
cmc
xchg
jb
xor
sahf
arpl
mov
idivl
xchg
stos
pop
lea
push
clc
xor
push
repz
xchg
ret
int3
or
add
inc
neg
mov
shlb
std
xchg
addl
sbb
fbld
xchg
sbb
push
int
push
cmc
lock
lods
dec
or
mov
pop
stc
insl
and
add
ljmp
lahf
xorb
iret
stc
stos
pop
fcmovnu
in
add
sbbb
nop
and
ljmp
cld
lcall
jg
in
mov
and
insb
fmul
xlat
imul
movsl
pop
arpl
andb
es
pop
ret
jg
push
fcompl
mov
xchg
adc
outsl
xor
shl
lcall
jno
addr16
jno
repz
jecxz
dec
fcmovb
icebp
movl
std
scas
aaa
aad
testb
sbbb
clc
adc
rcrl
lea
repz
inc
jnp
in
rcl
hlt
lahf
repnz
add
and
hlt
xor
push
add
or
aam
lods
lcall
cs
pop
loop
stos
mov
adc
ret
push
sbb
dec
out
enter
ljmp
push
adc
jae
jg
inc
sub
hlt
jno,pn
daa
sahf
jg
enter
xor
xor
sbb
mov
rcrl
int
inc
test
orb
loop
add
or
in
pop
push
mov
add
sarb
or
sub
xor
outsb
hlt
sbb
xor
pop
clc
push
aam
or
push
subl
ss
imul
fidivrl
jnp
inc
iret
inc
mov
xchg
rorb
rolb
es
xchg
out
dec
jnp
pop
nop
out
mov
pop
jle
stos
lahf
cmpsb
bound
mov
mov
bound
push
xor
loop
mov
push
int3
mov
ja
xchg
rorl
fistl
inc
pop
pop
adc
sub
scas
pop
and
rorb
inc
or
mov
mov
mov
shlb
xor
je
outsl
adcb
cmp
ret
pusha
pop
repnz
ljmp
cwtl
add
add
test
addr16
movsl
jae
fcomi
cmp
test
dec
jne
adc
jns
push
pop
cmp
cmp
lds
inc
inc
test
mov
xchg
repnz
xchg
xor
mov
sarl
pop
add
xchg
sbb
inc
movsl
cmp
ret
fld
insb
fnsave
pop
es
dec
adc
aas
mov
push
mov
sti
sahf
ds
cwtl
sbb
into
adc
ret
push
mov
sbb
shlb
ret
push
and
or
insb
or
in
mov
loopne
push
xchg
fs
sub
cmp
scas
mov
sti
sbb
push
xchg
adcl
add
cs
mov
mul
popl
ja
fistpll
leave
movsl
dec
stc
or
xor
cmp
ror
ds
jns
cmp
pop
mov
ret
in
dec
jg
dec
push
ret
cmp
cld
pop
xchg
xor
rcr
stos
lret
jns
hlt
push
mov
cmp
mov
and
fs
outsb
pop
jne
and
testb
xchg
sti
pop
jo
mov
mov
frstor
mov
enter
fmuls
loopne
mov
cwtl
nop
cmc
xchg
jl
push
and
outsb
aam
xchg
cwtl
mov
ds
mov
lds
xlat
add
loopne
popa
aas
out
dec
add
sub
pop
dec
fs
lcall
xchg
in
xchg
sub
and
dec
mov
or
clc
xor
sub
es
aam
cs
or
pop
rcrb
dec
int
push
pop
clc
enter
xchg
mov
jne
cmpl
jb
mov
add
leave
out
rcr
xor
xor
mov
push
stos
inc
stos
jp
mov
jne
pop
clc
or
mov
xchg
push
dec
aaa
mov
or
add
add
aaa
mov
add
orb
or
mov
cmp
aaa
jle
mov
sbb
push
outsb
pmulhw
xor
mov
adc
cmp
adc
negl
mov
jmp
dec
pop
rorb
or
mov
movsl
mov
je
je
call
cmpl
nop
ret
movsl
outsb
jo
jns
xor
add
jne
js
adc
xchg
mov
inc
push
adcl
pop
add
loope
push
clc
push
pushf
or
nop
push
imul
cmpb
push
nop
loopne
adc
repnz
pop
jge
pop
push
inc
out
push
and
xlat
pop
jmp
sarb
sbb
mov
or
daa
and
mov
cmc
das
lds
dec
stos
sub
lcall
add
xchg
sub
mov
dec
and
inc
xchg
sbb
xchg
int3
int
mov
mov
je
add
inc
loop
ss
arpl
hlt
adc
cmp
mov
sub
rolb
jmp
out
and
xor
jle
popf
mov
aam
in
xor
sub
dec
ret
aam
inc
pop
dec
es
popa
in
repz
cmp
test
xchg
cmp
xchg
mov
xor
push
les
push
pop
mulb
int3
mov
std
inc
negl
mov
sub
inc
jne
push
sub
adc
jno
pop
mov
mov
outsb
hlt
cmpsb
in
xchg
es
mov
and
jo
jo
popa
mov
sub
and
cltd
ss
or
mov
ret
lods
fdivs
loopne
inc
test
fistps
ja
pop
clc
push
mov
mov
iret
mov
adc
enter
push
ljmp
adc
xor
ljmp
sarl
sahf
mov
jmp
rcl
sub
je
sti
hlt
xchg
loopne
push
mov
push
pop
cmp
pop
int3
loopne
xchg
outsl
aaa
mov
pop
or
dec
test
out
pop
in
inc
sti
aas
cmp
cmp
jp
in
pop
mov
fxch
mov
insb
jp
jns
out
add
mov
push
or
lods
daa
es
out
add
push
mov
add
sub
daa
jo
gs
add
insl
aad
leave
das
test
sub
es
daa
inc
sahf
iret
or
inc
push
cmpsl
repnz
jg
fidivl
ret
es
fsubl
push
or
call
adc
lret
mov
lods
lds
out
mov
cmp
jmp
lret
jno
cwtl
in
lahf
sbb
or
inc
inc
repz
loope
lcall
pop
sahf
das
in
pop
lahf
or
loopne
xchg
shll
mov
sbb
cmp
sahf
sbb
cmc
cmp
dec
aas
vmwrite
imul
adcb
stc
ja
or
aaa
xchg
popf
push
orb
mov
jle
ja
call
out
pop
adc
xchg
adc
es
sbb
sub
insb
jb
notl
shrl
pusha
rclb
pop
dec
fmul
adc
daa
xchg
mov
mov
movsl
int
pop
mov
in
movsb
sbb
lcall
daa
or
sti
je
cs
fstpt
scas
or
and
cmp
dec
enter
xorb
inc
add
aas
push
lret
push
fsts
lret
add
addr16
aam
out
push
dec
add
sbb
add
pop
lcall
jnp
sti
inc
out
test
mov
dec
data16
jno
and
fdivrs
mov
pop
mov
es
jecxz
pop
lret
push
aad
jb
or
xor
repz
cmpsb
add
test
call
jae
sub
test
clc
sbb
lds
in
fildl
cli
pusha
pop
xor
mov
mov
loopne
movsb
out
outsb
mov
adc
mov
cwtl
xchg
inc
push
pop
insl
sbb
rorb
mov
test
je
push
or
lock
pop
pop
gs
sahf
lds
test
cmp
sbb
adc
xor
push
mov
cmp
cld
and
xlat
inc
mov
addr16
push
jnp
add
cmp
daa
inc
fldl
mov
dec
add
mov
jecxz
inc
cmpsl
jecxz
and
sbb
push
mov
cmpsl
cmp
jg
and
push
mov
daa
rorl
push
and
andl
push
cmp
mov
dec
fistl
hlt
into
ret
or
push
adc
in
sub
out
pop
mov
out
xchg
cmp
stc
out
aas
mov
pop
lret
jmp
pop
push
jne
jno
lret
or
jae
add
jmp
ljmp
mov
cmpsl
sti
xchg
std
outsl
push
and
mov
pop
dec
dec
mov
in
repz
and
aad
push
adc
pop
inc
mov
mov
mov
scas
jle
mov
sub
cltd
fimull
adc
mov
xor
hlt
sbb
int3
lret
lods
xchg
xchg
lods
sub
xchg
bound
cmp
push
jl
sbbb
stos
or
mov
ja
push
or
roll
mov
shlb
adc
ret
push
test
jp
add
add
mov
mov
call
mov
jmp
adc
dec
mov
or
sahf
sarb
adc
mov
int
scas
add
sub
les
cmc
and
imul
push
cmpb
subl
hlt
mov
mov
sbb
bound
mov
cmpsl
add
iret
ficoms
jmp
cld
xchg
testl
xchg
cld
dec
jle,pt
lret
test
mov
mov
sub
adc
mov
popf
push
fdivrs
dec
dec
rcr
push
xor
loopne
dec
add
lcall
jge
sub
cld
adcb
jl
call
jb
adc
int
push
cmpsl
mov
imul
out
xchg
or
xchg
mov
xchg
xor
or
pop
cwtl
or
ds
cmpsl
and
aam
mov
in
cmp
je
xchg
inc
mov
mov
les
div
bound
bound
mov
mov
lahf
xor
jno
cli
std
sub
mov
lret
jecxz
daa
das
fistpl
icebp
push
jmp
arpl
lcall
mov
cmp
mov
add
mov
inc
fiadds
adc
je
jg
lahf
fnstsw
add
jne
cmp
repz
xchg
push
and
push
pop
and
jae
pushf
ljmp
mov
adc
out
lods
cmpsb
lret
aaa
mov
ret
xchg
push
inc
ss
adc
dec
into
lahf
addb
or
sbb
jb
out
and
cli
cmpb
cmc
xchg
lods
enter
popl
dec
sub
mov
ljmp
addb
push
pop
int3
sub
enter
or
out
in
leave
mov
in
jp
xorl
pushf
sub
out
cld
ja
fs
fs
shlb
addr16
mov
clc
sub
push
jecxz
cmp
pop
pop
sbb
mov
adc
into
mov
jo
mov
mov
xchg
loope
adc
pop
cmp
pop
mov
jmp
mov
jo
movsb
jno
cwtl
int3
jge
rolb
test
inc
inc
dec
negb
leave
cmc
cmp
sbb
xchg
xchg
mov
add
pop
push
mov
jge
push
mov
add
push
adc
jecxz
dec
pop
sbb
pop
mov
outsb
jecxz
push
hlt
and
nop
fdivrs
in
lret
xor
and
rclb
in
dec
jae
mov
and
jno
jo
xchg
xor
dec
sub
enter
adc
arpl
pop
sub
dec
xchg
pop
add
xchg
push
jge
mov
push
les
cli
enter
xor
mov
inc
adc
ficoml
xchg
loopne
jb
pop
addl
out
pop
cmp
xor
adc
repz
lods
lret
add
inc
mov
xor
mov
fcmovb
xchg
bound
loope
sarl
jle
pop
xor
mov
push
out
int
roll
loope
push
mov
xchg
enter
pop
lret
jp
mov
sbb
dec
inc
pop
pushl
imul
xor
dec
adc
and
loop
cmp
xchg
iret
pop
or
jno
xlat
mov
stos
insl
movsb
dec
lea
shlb
xor
jp
sbb
push
leave
pop
lods
lcall
cmp
clc
and
sub
dec
sub
adc
roll
dec
add
add
aad
lods
mov
sti
dec
inc
bound
mov
xchg
jae
cmpsb
cmp
push
mov
test
push
repnz
or
push
std
rclb
daa
stos
inc
daa
cmp
pop
aad
loope
push
dec
jae
jo
idiv
rep
dec
inc
fisubs
mov
xchg
sti
mov
or
aas
mov
mov
pushf
test
repnz
bnd
jge
mov
push
mov
pop
shlb
inc
idivl
push
adc
shll
pop
fisttpl
mov
push
out
fisubl
cmpsl
sbb
pop
outsl
dec
mov
sahf
leave
ret
es
clc
dec
cmp
clc
gs
adc
stos
pop
xchg
std
mov
rolb
arpl
repnz
iret
jnp
movsb
out
fld
iret
xchg
push
das
jne
cmpb
xchg
dec
pop
adc
adc
cld
xchg
adc
ret
pop
mov
push
les
lret
outsl
cwtl
pop
mov
mov
bound
loop
aam
test
add
pusha
mov
add
pop
scas
negb
movsb
test
push
popa
mov
mov
dec
cltd
loop
xchg
mov
mov
fnstcw
xchg
scas
sbbl
jne
fwait
jae
jns
xchg
push
lret
lods
arpl
ret
dec
or
xchg
imul
mov
imul
xchg
pop
mov
shr
mov
loope
addr16
push
cli
or
mov
in
out
cmc
sub
mov
add
pop
jge
jo
jge
ljmp
out
daa
cmp
test
in
jp
mov
mov
cmp
rclb
mov
xchg
jbe
mov
mov
adc
xchg
je
pop
lods
and
std
orb
fisubrs
test
mov
addr16
mov
sub
insb
mov
leave
scas
movsl
xor
cmp
jl
xchg
or
jmp
push
or
aas
loope
adc
loopw
mov
nop
js
dec
jb
cld
xchg
pop
fdiv
dec
popf
and
nop
int3
insb
shll
push
push
addr16
jne
inc
push
pop
adc
stc
mov
mov
xchg
and
mov
and
jp
jmp
cmp
cmp
mov
mov
push
mov
push
jae
lea
adc
sub
push
loop
js
jne,pt
ss
cmp
jl
add
xor
ret
daa
das
dec
xor
mov
jo
adc
hlt
in
dec
lods
pop
cmp
dec
std
aas
lcall
push
inc
jl
adc
das
mov
and
and
mov
xlat
mov
sbb
push
mov
mov
xchg
sub
inc
push
adc
fwait
mov
sbb
adc
mov
ja
lods
lods
popf
mov
pushf
imul
sbb
sub
add
jo
mov
dec
shr
jp
push
in
pushf
sahf
ret
lods
test
sbb
sbb
scas
and
dec
inc
add
arpl
jnp
stc
aad
hlt
mov
cmpsb
cmp
pop
xchg
mov
clc
push
shlb
cwtl
hlt
jae
jmp
pop
ss
aas
ss
mov
fcoml
loope
cmp
pusha
mov
jns
dec
lret
adc
cwtl
jb
push
dec
dec
xchg
stos
cli
aam
setne
pusha
or
cmp
xor
in
decl
pop
mov
mov
or
loopne
inc
leave
je
icebp
into
sub
pop
and
mov
repz
iret
adc
jle
movsb
or
xor
dec
xchg
push
xor
xchg
and
mov
jnp
pushf
popf
mov
jbe
mov
les
sub
cmp
dec
push
adc
js
add
mov
ljmp
push
hlt
push
sub
inc
sbb
mov
push
xor
jb
push
sbb
jecxz
or
mov
in
or
jno
cmp
and
int
mov
sbbl
push
mov
inc
int
xchg
or
out
mov
faddl
ffreep
cmc
jbe
pop
push
lds
pop
xor
lods
mov
shrl
sub
xchg
pushf
std
adc
daa
call
bound
sbb
inc
int3
push
cmp
jmp
xor
popa
push
xlat
push
add
adc
arpl
cmp
dec
push
mov
jne
lock
cli
cltd
mov
cmp
shll
mov
test
mov
jne
std
data16
xor
jbe,pt
mov
fld
mov
sub
add
aas
or
push
call
lcall
push
scas
push
adc
rcr
pushf
sub
mov
and
shlb
push
jo
add
mov
mov
add
add
dec
xchg
std
aam
lret
adc
push
mov
in
inc
sub
loope
and
lahf
and
sbb
dec
mov
inc
pop
ss
inc
pop
jnp
sub
iret
ret
daa
cmp
clc
push
jbe
cmc
xchg
enter
add
push
cmp
cmpsb
fs
push
mov
pop
ljmp
into
into
xchg
adc
dec
push
fs
rcll
fnclex
xchg
and
mov
push
cli
icebp
aas
dec
or
cmp
mov
mov
add
and
push
mov
cmc
pop
and
flds
mov
dec
repz
or
scas
les
test
pop
insb
inc
iret
andl
movsb
sbb
enter
sbb
mov
movsb
jmp
bound
push
dec
pop
fcmovb
cltd
cltd
pop
pop
adc
mov
or
mov
cmp
sub
cmp
sahf
jae,pt
sbb
mov
pusha
xchg
iret
icebp
or
xor
in
mov
push
mov
xor
jecxz
jbe
jecxz
das
dec
lods
imul
pop
sub
cwtl
xlat
cmp
faddl
dec
fwait
inc
test
adc
mov
repnz
or
xchg
adc
data16
fisttps
mov
sub
jmp
loop
movsb
std
sub
or
cltd
push
push
push
and
cmp
and
fwait
add
jg
addb
in
std
std
sub
jecxz
int
mov
mov
pushf
jge
insb
mov
add
pop
and
push
mov
xchg
push
inc
das
test
outsl
call
pop
bound
loop
mov
hlt
mov
shll
push
adc
arpl
mov
jns
rclw
decb
adc
jnp
and
lods
jae
dec
inc
or
xorb
jns
adc
xchg
dec
subl
aam
iret
cltd
call
xor
push
test
xchg
fists
sbb
leave
mov
out
mov
add
out
mov
cs
xchg
and
sbb
inc
jge
xlat
xchg
xor
sub
pop
stc
lret
mov
imul
lods
sti
lret
xor
mov
lea
arpl
push
pop
pop
push
pop
test
mov
outsl
int3
mov
test
daa
mov
je,pt
mov
fadd
cmp
movsb
in
pop
insl
xchg
sub
pop
movsl
lds
ss
pop
or
test
push
in
imul
inc
sub
je
xor
adc
inc
jae
adc
aaa
insb
or
jge
cmpb
int3
daa
clc
jp
enter
pop
xchg
sub
xchg
cwtl
mov
pop
pop
stos
push
lret
pop
cmp
add
xor
push
lret
and
pop
mov
add
add
dec
mov
int3
out
adc
pop
mov
sarl
aaa
or
lahf
cwtl
push
loop
add
ret
push
jge
or
movsl
push
js
sbb
push
mov
mov
pop
cli
shl
xchg
xchg
mov
lcall
sub
mov
stos
cmp
cli
fdivl
in
mov
scas
or
or
ja
jle
enter
or
bound
mov
jle
outsl
sub
xor
cltd
lods
repnz
fidivrs
jl
clc
inc
cmpsb
pop
rorb
jg
subl
push
inc
in
mov
mov
stos
imul
lahf
dec
or
lret
hlt
test
jmp
fs
push
gs
iret
test
dec
xor
sub
aas
sbb
mov
and
ljmp
adc
sub
out
and
lock
add
fstp
insb
sbb
aas
adc
stos
jnp
les
or
sar
bound
loop
fcmovne
jmp
ljmp
bound
and
push
mov
jl
dec
xchg
in
xchg
in
mov
sub
dec
movsb
int3
in
fadd
xchg
dec
or
data16
fs
mov
mov
notl
jno
adc
aam
mov
jbe
jo
in
or
cld
cmpsb
enter
inc
jp
inc
sbb
aad
popa
shlb
movsl
push
pop
enter
insb
pop
jbe
push
call
mov
test
ret
pop
popa
xor
fdivrl
xor
call
dec
and
push
adc
jmp
xchg
aaa
repz
aam
or
jecxz
jns
shr
jmp
xlat
adc
cmpsl
sub
rorl
or
xchg
xchg
jo
stc
or
and
dec
inc
sub
dec
movsb
and
outsl
hlt
rclb
mov
cmp
fildll
ss
push
push
mov
push
mov
ss
pop
hlt
in
jbe
cmp
or
fwait
ret
rorb
mov
add
shl
jecxz
or
push
insl
pop
ja
cli
inc
push
movsl
jg
mov
jb
cmp
shr
lahf
lea
fsubrl
rcrb
imul
enter
sub
rcr
pop
mov
mov
mov
inc
or
push
jne
mov
add
sbb
out
out
popa
test
ficoms
clc
sub
fmulp
test
mov
nop
or
mov
data16
mov
shr
je
repnz
shll
or
clc
dec
ret
fisttps
xorl
lds
mov
roll
push
daa
add
xchg
aam
inc
ficomps
in
aas
lods
jo
sbb
inc
push
pop
clc
pop
push
mulb
fdiv
clc
jmp
out
pop
pushf
cs
lock
mov
mov
rcrb
jp
test
push
jmp
mov
add
adc
cli
sub
jae
mov
and
inc
clc
test
aam
nop
leave
fdivrl
lods
stc
test
sarb
mov
bound
test
aas
lods
mov
dec
roll
clc
je
lahf
xor
mov
fld
lea
cli
call
or
nop
jno
int
add
fdivrs
and
pop
rcrl
outsb
scas
adcl
testb
cs
sub
pop
enter
xchg
lret
lret
popf
dec
jecxz
mov
mov
lret
sub
jae
lahf
mov
cmovle
xlat
stos
mov
sub
clc
pop
imul
cmp
pop
imulb
jecxz
jnp
adcl
int
dec
cmp
sbb
repz
aaa
cmp
iret
xchg
jno
imul
sub
cmp
test
dec
mov
mov
sbb
add
rcrb
inc
xchg
ja
arpl
cwtl
cmp
mov
push
mov
and
loopne
in
xchg
add
std
adc
sub
shlb
jle
hlt
inc
cli
insl
sbb
or
sbb
aam
ja
sbb
shlb
lret
mov
fs
adc
scas
stos
adc
pushf
cmp
repnz
lret
mov
pop
add
test
xchg
sarl
aam
nop
xchg
inc
mov
mov
cmpsb
movsl
clc
rcll
enter
dec
addr16
pop
pop
push
xchg
dec
inc
adc
test
inc
pop
adc
xchg
xor
mov
push
mov
adcl
mov
sbb
xchg
das
int3
push
lcall
jne
push
in
lfs
jb
add
pop
insl
mov
aaa
scas
dec
xchg
aaa
xor
or
in
scas
test
push
add
rcll
mov
orb
pop
push
mov
insl
mov
into
add
push
mov
test
fisttpll
xor
movsb
cmc
imul
xor
or
in
outsl
dec
or
mov
mov
ror
aaa
jb
xlat
inc
mov
xor
xlat
shrb
mov
mov
xor
xor
mov
xor
fst
mov
pushf
pushf
lret
jmp
call
stos
push
pushf
shlb
xchg
and
pop
push
int
loop
lods
lds
pushf
mov
loop
rorl
stos
loop
outsl
sbb
cld
dec
out
xchg
jp
repnz
xchg
inc
mov
inc
jb
psubusw
mov
das
inc
xchg
ret
loope
jb
adc
inc
call
jmp
jb
jecxz
sub
sarb
lcall
cmp
xchg
mov
sbb
fcmovne
fs
mov
cmpsb
stc
push
sahf
inc
xchg
mov
adc
mov
andl
lcall
fmulp
fisttps
jl
out
into
xor
testb
ja
in
fwait
popf
icebp
fwait
outsb
mov
add
cmp
adc
ljmp
dec
pop
out
xchg
push
andl
dec
mov
stos
mov
into
and
inc
pusha
mov
pushf
jns
dec
test
cmp
outsl
push
fwait
loopne
out
popf
arpl
clc
stos
mov
mov
sub
xchg
fnstsw
sbb
lcall
nop
pop
lock
sbb
int
cmp
pop
xchg
enter
fidivrl
jbe
sub
in
fdivrl
in
and
xchg
sti
inc
add
sub
adc
fstpl
lods
mov
jg
xor
test
sahf
aad
ss
mov
push
rolb
cmp
fucompp
mov
lds
or
imul
lods
push
std
adc
xchg
fstpt
pushw
xchg
hlt
mov
push
daa
mov
stc
lods
mov
out
ficompl
jmp
popa
sbb
scas
repnz
mov
and
mov
int
popf
loope
mov
out
loop
dec
mov
push
add
push
adc
aad
add
mov
out
fstpl
lahf
xchg
add
jge
xor
imul
jne
push
inc
mov
mov
cmp
aaa
mov
sbb
mov
sbb
xchg
arpl
scas
aaa
shlb
xor
and
outsl
das
push
inc
xchg
filds
and
add
repnz
bndstx
jbe
dec
adc
aad
into
mov
dec
mov
sub
sub
mov
dec
adc
das
shl
push
in
add
pop
smsw
or
dec
sub
or
push
mov
jl
imul
gs
push
lret
push
add
aam
push
sbb
test
or
dec
sub
jmp
in
xchg
std
adc
jo
sbb
add
sarb
ljmp
out
lock
pop
call
or
into
sbb
aaa
outsl
xor
dec
or
add
mov
and
mov
inc
stc
pushf
lods
hlt
sahf
adc
xchg
ss
lock
cmp
mov
aad
ret
aam
mov
push
lods
push
dec
pop
xor
lds
test
shrl
pop
pushw
mov
add
xchg
lret
mov
clc
mov
dec
push
add
inc
push
cmp
int
mov
sahf
lcall
jg
popa
fstpl
adc
inc
xchg
in
add
or
mov
popf
bound
cli
ss
cwtl
pop
lea
xchg
cmp
sbb
loope
clc
push
test
jbe
outsb
jge
fs
inc
inc
mov
mov
pop
pop
clc
or
sub
aam
dec
dec
mov
call
fbstp
shl
sbb
cmp
insl
jne
cmp
int
sahf
sub
mov
aad
icebp
stos
cs
mov
test
fcmovnbe
lock
cld
out
jp
xor
mov
jmp
xor
push
enter
fidivl
ljmp
test
mov
mov
xchg
jne
pop
idivb
adc
out
popa
cmp
push
fs
cmp
in
scas
or
jns
dec
inc
loop
sarb
xor
cmp
pushf
mov
mov
jmp
ficoml
mov
into
push
xlat
push
es
cmpsb
movsl
gs
dec
push
push
pop
daa
flds
cmc
notb
xchg
in
dec
jecxz
leave
sbb
lods
mov
or
jae
jnp
mov
jp
push
les
add
idivl
adc
shrb
cmpsl
push
mov
xlat
adc
sahf
xchg
jmp
mov
jmp
sub
in
mov
push
jmp
inc
data16
add
push
test
mov
ja
popf
movsl
mov
rcrb
sti
dec
or
sbb
push
sbb
scas
sahf
xor
jo
cmp
lcall
mov
mull
lcall
sahf
add
sbb
test
loop
fsubs
push
in
test
mov
rcl
jae
mov
mov
cmp
repz
je
add
je
int3
jnp
or
negb
adc
js
xchg
jmp
adc
sahf
jle
and
pop
push
mov
fdivl
aas
cmpsb
pushf
inc
loop
xchg
negb
add
stos
ret
lret
pushf
lret
xchg
xchg
out
add
ror
sahf
lahf
xchg
xchg
lahf
sbb
and
xor
push
pop
rorl
push
jb
and
dec
pop
xor
andb
jp
pop
lods
sub
dec
mov
push
push
movsl
inc
arpl
mov
xchg
call
hlt
xchg
ja
sti
push
mov
push
xchg
sub
xor
and
inc
and
jecxz
jae
loope
cltd
add
cmp
add
xor
mov
push
int3
jge
or
stos
in
or
sbb
bound
push
pop
lds
and
jg
adc
jl
cmp
mov
lea
mov
push
xor
js
andb
adc
sub
pushf
push
xchg
aad
jae
movsl
sub
cmpsb
stos
movsb
stos
jge
or
lret
popf
push
daa
addb
not
pop
in
lea
loope
pop
sub
sub
aas
mov
sbb
inc
call
pop
inc
jp
xlat
xor
inc
jecxz
pop
inc
leave
mov
mov
lret
xchg
mov
bound
rcl
out
or
pushf
cmp
mov
sub
lock
xlat
push
dec
xchg
int3
rcll
and
cmpsb
fwait
sbb
cmp
pop
mov
xchg
mov
sbb
sbb
into
cmc
or
fs
popa
jae
or
jp
inc
fdivl
lret
sbb
ret
sbb
sahf
lds
dec
xchg
push
mov
xor
and
lds
push
lods
js
jno
movsb
test
rdmsr
xchg
push
fwait
pusha
inc
pop
sub
cs
out
cmc
pop
in
in
add
stos
mov
sbb
cli
pop
cld
mov
mov
jmpw
jb
xchg
rep
stc
cli
xor
hlt
stos
repnz
mov
cmp
les
jle
aad
enter
sbb
cs
je
mov
bound
les
pusha
mov
aaa
mov
mov
cmp
ss
mov
push
dec
pop
sub
aas
cld
cmpsb
leave
cs
cmp
aam
arpl
pop
and
mov
dec
push
imul
out
les
rorl
or
insl
insb
mov
aaa
insb
into
mov
adc
and
cltd
lret
pop
or
movsb
xchg
dec
aaa
jmp
movb
fstpt
sub
or
xor
jae
mov
push
xor
push
push
sbb
movsb
jge
cmpsb
dec
sbb
je
jo
cmpsl
cld
sub
movsl
mov
outsl
arpl
iret
push
test
inc
and
cmp
out
and
ds
add
int
test
cltd
adc
push
cmp
mov
jae
xor
fidivs
cwtl
jb
pop
mov
shll
std
in
add
cltd
and
imulb
aam
xchg
sub
or
aas
shlb
xchg
xor
inc
jne
xorl
inc
push
sbb
xchg
jns
pop
xor
mov
out
cmp
outsb
leave
loope
adc
mov
adc
jge
jg
mov
mov
push
fcomp
pop
stos
lock
lods
loope
sahf
xlat
push
in
mov
cmpsl
hlt
sarb
push
cmp
adc
sahf
xor
sub
xor
push
int
mov
loope
mov
mov
addl
cmpsb
popa
and
push
out
add
push
mov
inc
and
mov
mov
cwtl
push
lea
scas
dec
sbb
xchg
cmp
cltd
xor
sub
dec
dec
ljmp
fnsave
aaa
shl
sbb
and
or
mov
lds
test
pop
mov
into
repnz
aaa
aam
jae
jl
repz
mov
rep
dec
mov
mull
or
cmpsb
stos
adc
mov
cmp
jnp
sbb
hlt
push
call
loope
fsubrl
push
daa
sub
insb
cmp
mov
mov
fsubrp
jecxz
je
loopne
mov
push
aad
addr16
pop
xchg
push
and
into
mov
shlb
xor
clc
ja
xchg
mov
sbbb
xchg
fldcw
xchg
and
int3
push
or
pop
xchg
or
mov
std
hlt
add
cwtl
lea
aas
fmuls
mov
mov
mov
sarb
or
sbb
repz
pop
mov
sub
adc
jne
and
jg
test
pusha
dec
dec
scas
loop
gs
mov
popf
inc
mov
push
jmp
fwait
jae
xlat
loopnew
sbbl
dec
loopne
gs
xchg
lds
lahf
mov
sbb
loop
imul
test
dec
sbb
add
popf
xchg
sub
out
in
adc
or
mov
mov
les
jp
inc
stos
pop
xchg
movsb
inc
out
xchg
xchg
loopne
sahf
ret
pusha
pop
xor
insb
je
test
sub
popa
jg
hlt
fwait
xor
insl
out
jb
fistpl
cmp
shlb
adc
fs
mov
aas
sub
pop
mov
xor
mov
pop
lea
cmp
mov
dec
push
fwait
out
dec
aas
inc
addr16
popf
fadds
outsb
push
adc
push
aam
push
xor
jns
jmp
stc
inc
dec
bound
mov
and
call
cli
xchg
shr
sub
int3
data16
icebp
adc
iret
iret
add
ds
jmp
data16
xor
sbb
loope
std
ja
sub
leave
mov
xchg
xchg
add
jl
mov
cmc
or
in
out
cmpsl
mov
mov
push
mov
inc
cld
cmpl
inc
xor
rorl
add
mov
inc
mov
loope
ror
test
sbb
shr
out
outsl
test
stos
push
xlat
dec
jl
loopne
mov
jle
mov
and
aas
jge
mov
fiaddl
ss
testb
cs
or
ljmp
in
adc
and
int3
lcall
popa
aas
jae
hlt
icebp
xchg
mov
arpl
gs
andl
data16
das
ljmp
lret
bound
jmp
pop
xor
jl
pop
fmuls
and
pop
inc
dec
pop
shl
ficomps
cs
in
cs
aas
push
and
hlt
jnp
cli
and
mov
stos
inc
cmp
fimuls
ss
out
dec
mov
dec
shr
loope
sub
mov
push
std
and
sub
lret
jae
test
inc
out
adc
xor
je
xor
mov
or
test
lods
dec
inc
mov
adc
arpl
mov
outsb
jl
jne
bound
adc
loopne
push
and
pop
pop
imul
fistpll
sub
mov
sub
nop
jp
mov
lahf
fildl
jae
jg
in
sbb
inc
cltd
jb
and
jmp
mov
xor
mov
xchg
sbb
and
cmp
aad
out
xor
dec
xchg
popa
pop
enter
bound
mov
daa
inc
mov
cli
sub
not
inc
mov
imul
enter
adc
insl
inc
mov
shlb
je
dec
mov
inc
sub
pusha
cmpl
pop
out
data16
sbb
aad
femms
add
xor
out
stos
cli
add
adc
notl
adc
jns
addb
xor
jl
ja
jns
cmp
inc
imul
ss
ja
shll
add
data16
push
sbb
xlat
popf
hlt
xchg
scas
or
xchg
mov
orb
add
std
out
push
sti
clc
pop
ret
sub
and
insl
cmp
lods
adc
add
jecxz
imul
aaa
push
mov
sub
stc
mov
cmpsl
ror
mov
add
pop
cmp
cld
sub
mov
shl
fcmovu
ficomps
push
shrb
gs
add
inc
in
je
adc
roll
jmp
add
mov
pop
loopne
cmp
cmp
js
cmp
mov
addr16
mov
cld
enter
frstor
inc
fimuls
add
mov
sbb
sbb
out
adc
sub
pop
hlt
loope
inc
cltd
rclb
mov
js
push
inc
cli
cmp
jecxz
cmc
inc
cld
das
imul
sub
xlat
dec
out
jne
push
and
je
lcall
mov
into
cmp
mov
dec
push
lcall
aaa
fldcw
stc
sbb
dec
push
mov
ss
ljmp
xchg
and
push
pop
or
not
xchg
jo
lret
mov
xchg
repnz
bound
adc
or
inc
iret
lds
inc
cmp
enter
adc
aam
or
cmpsl
int
xchg
repnz
rcll
popa
lods
jbe
test
lret
movsb
xchg
push
adc
push
sbb
out
xchg
sub
pop
sub
or
dec
push
adc
sbb
push
push
aaa
stc
mov
pop
inc
rcrb
loopne
mov
std
push
mov
js
into
mov
subb
mov
adc
pop
add
jg
mov
adc
cmpsl
lret
int
push
or
inc
xor
mov
popf
and
faddl
adc
add
inc
insl
jbe
test
mov
sahf
mov
mov
cmp
fdiv
or
stos
notl
ljmp
or
cltd
add
xchg
pop
cltd
ds
jne
dec
fdiv
aam
cli
or
adc
iret
add
sti
cmpsb
push
scas
add
xor
adcl
orb
mov
sbb
mov
test
mov
enter
jnp
js
int3
jmp
mov
push
loope
push
mov
aas
cmp
sarb
xlat
addr16
xchg
or
mov
or
cs
push
mov
subl
loop
pop
dec
mov
mov
dec
push
out
out
mov
cmp
or
jno
pop
adc
jb
cmp
add
insl
xchg
push
mov
out
lret
dec
fsts
pop
insl
lds
xchg
and
jecxz
jo
out
leave
jge
mov
aaa
sbb
jae
nop
insb
add
mov
push
not
in
mov
stos
mov
test
adc
cmpsl
add
xchg
fs
jg
aaa
jecxz
jae
into
cmp
and
pop
and
mov
or
mov
xor
jb
push
rcrl
pop
xor
sti
sti
pop
xor
cmp
or
adc
add
ja
shl
or
mov
add
mov
dec
popw
inc
fcmovnb
sbb
scas
mov
sti
cmp
lods
cmp
lcall
inc
ljmp
int3
cmp
inc
seta
inc
sbb
mov
jp
repnz
adc
jge
or
dec
int3
test
in
jecxz
xor
ljmp
pop
jno
jl
cld
jg
and
jno
xchg
push
das
cld
dec
sbb
mov
lds
loopne
or
inc
push
clc
xor
jecxz
cli
xchg
shrb
push
mov
cwtl
pop
out
or
into
xor
add
mov
jns
shl
dec
sahf
sub
adc
adc
add
jno
outsl
in
stc
shrb
repz
jns
mov
addr16
shl
jl
xorl
stos
mov
push
cmp
xchg
xchg
mov
xor
pop
sub
repz
push
cmc
insb
aam
cli
or
popa
adc
xchg
adc
fisttpll
sti
iret
add
add
mov
dec
mov
jnp
sub
std
out
pop
inc
inc
roll
outsb
and
push
cmpsl
mov
mov
ja
mov
gs
cmp
adc
ret
push
les
out
enter
sarl
imul
push
mov
rorb
or
mov
push
lahf
adc
jo
pop
adc
xor
add
pop
mov
xlat
in
fildl
mov
test
cwtl
bound
sbb
ret
inc
inc
shr
clc
data16
pop
gs
lea
lahf
sti
imul
das
push
mov
jle
fsubrl
pop
sub
inc
fwait
jae
iret
outsl
test
data16
repz
cmp
jno
dec
mov
cmp
mov
das
inc
pop
js
mov
cltd
add
movsl
out
jp
aas
mov
pushf
mov
sub
hlt
cs
xor
inc
mov
bound
rol
dec
mov
in
js
pushl
cmp
push
sbb
fistpll
int
adc
repz
cltd
sbb
aam
sbb
mov
add
repz
push
or
push
fisttps
sbb
xchg
aad
js
mov
rorb
ficoms
mov
lods
push
sahf
cli
ljmp
scas
pusha
adc
sbb
adc
add
push
inc
add
jle
lods
aad
aad
and
jns
es
iret
add
xchg
mov
add
cmpsl
mov
repz
lcall
cmc
and
rcll
pop
add
mov
outsb
mov
inc
jmp
sub
outsb
aam
adc
jae
dec
xchg
bound
jo
pushf
scas
add
test
loopne
mov
aaa
sub
or
xor
mov
jns
test
jmp
xchg
sarl
lret
jnp
jle,pt
add
sti
mov
mov
iret
add
cs
cld
jbe
add
adcl
cmp
xor
inc
and
test
pushf
xor
stos
add
loop
xchg
push
pop
mov
insb
jmp
out
ret
push
push
nop
cli
pop
jp
fcmovu
jnp
sahf
mov
stos
roll
inc
repnz
mov
call
sahf
das
xchg
jns
pop
inc
dec
inc
fidivrl
sub
fscale
sbb
std
lock
mov
mov
mov
imul
imul
dec
mov
sbb
mov
imul
stos
divl
or
call
push
scas
cmp
inc
xchg
jnp
mov
ret
adc
enter
cmp
test
mov
in
aad
stos
aad
adc
push
sbb
sub
loop
fisubrs
push
jnp
xor
es
cmc
pop
test
std
lret
xchg
dec
loop
movsb
out
adc
pop
fcmovnu
movsb
pop
gs
into
lods
insb
dec
mov
int
cmc
sub
cmpsb
in
insl
mov
fmuls
negl
pop
rcr
stos
cmp
xchg
notl
mov
mov
bound
and
fsubrl
mov
push
xorb
faddl
add
sub
jg
pop
dec
test
jp
lods
xchg
push
sbb
into
jg
lods
adc
jnp
jg
jl
xchg
sbb
jge
dec
insb
add
xor
outsb
push
in
loope
leave
adc
xor
sti
pop
sahf
outsb
les
aaa
fnstcw
iret
outsl
fidivrs
rcrl
popf
pop
in
ds
fwait
push
jl
into
mov
test
fadds
pop
imul
mov
mov
aaa
in
pop
repnz
in
mov
or
loopne
lcall
dec
cld
fcompp
jge
sub
inc
in
imul
or
std
std
or
pusha
adc
lahf
xchg
mov
dec
adc
push
cmp
paddd
decb
jbe
push
inc
out
mov
add
push
jle
icebp
leave
je
inc
mov
or
gs
imul
repnz
xor
cmpsb
pop
fstps
insl
mov
ret
enter
pushf
cld
dec
fidivl
dec
mov
mov
mov
cmp
in
mov
mov
pop
popa
outsl
mov
inc
mov
imul
mov
mov
jl
xlat
mov
ja
push
fsubrp
jns
cwtl
cli
push
in
jnp
pop
or
or
push
shlb
call
lods
push
ljmp
ret
fmul
push
loopne
xchg
scas
daa
jmp
adc
mov
sub
dec
es
loope
inc
cwtl
cld
add
lds
loop
push
lock
sub
dec
mov
test
fscale
cmpsb
lea
pop
pop
mov
xchg
fcomip
inc
pop
dec
pop
mov
push
sub
out
repz
loopne
sub
out
cmp
mov
hlt
mov
in
out
idivb
aam
test
out
in
add
jnp
dec
jo
mov
pop
scas
mov
aam
fldt
adc
dec
inc
addr16
and
jnp
or
or
or
add
cmc
fs
fcomps
fcmovne
outsb
mov
pop
jl
xor
stos
mov
ljmp
pop
subl
call
and
imul
sbb
nopl
add
out
mov
call
dec
inc
fcoms
pop
mov
pop
xchg
stos
jbe
and
movsl
fcoms
ror
jecxz
push
push
jae
out
xchg
jle
aaa
push
movsb
push
sbbb
xor
movsb
loopne
or
int3
lea
pop
mov
push
es
jae
data16
out
xchg
cli
push
add
movsb
and
call
jo
outsl
sbb
xor
repnz
jae
jmp
inc
push
jne
xchg
lods
ret
add
pop
scas
and
sub
ja
cli
aaa
lret
pop
pop
dec
mov
xlat
mov
mov
cmc
inc
gs
xchg
lcall
mov
inc
push
inc
lret
mov
xor
xchg
mov
add
aaa
jno
xchg
das
adc
mov
and
push
inc
gs
xchg
iret
and
rolb
sub
test
jne
in
sub
sbb
adc
sub
lds
jbe
jp
mov
enter
xor
push
fildll
imul
adc
mov
test
adc
repz
mov
test
test
xchg
lea
cmp
fldenv
mov
les
imul
sub
jg
xor
or
imul
test
sbb
xchg
jno
in
add
mov
pop
add
aas
test
jnp
push
mov
ljmpw
icebp
sub
ljmp
cwtl
inc
pop
lea
and
push
and
pop
push
dec
sub
dec
add
mov
push
add
cmpsl
adc
xchg
outsl
rol
xor
sub
add
out
in
pop
rcr
stos
pop
daa
es
jge
inc
mov
xlat
dec
iret
sub
roll
test
xlat
push
pop
shll
cs
or
imul
mov
xchg
inc
mov
jb
leave
movb
frstor
xor
mov
clc
fwait
xorb
dec
fwait
loope
adc
shll
sbb
xor
ljmp
push
cmp
and
adc
sub
orb
lods
fimull
dec
xchg
inc
sbb
or
xor
adcl
mov
adc
out
cli
adc
bound
ret
or
stos
and
outsl
jb
jno
adc
jecxz
test
or
push
shrb
dec
jno
sbb
addr16
mov
stc
movsl
mov
ss
pop
nop
add
mov
dec
and
test
mov
add
xor
dec
imul
sbb
lret
cmpsl
or
lret
jno
pop
rol
int3
lcall
sub
imul
jns
mov
and
imul
mov
std
jg
cmpsb
jg
pusha
dec
cmp
iret
inc
leave
cmpsb
xor
arpl
and
pushf
xor
jmp
cmp
add
mov
lret
aaa
jae
adc
test
js
xor
icebp
pop
lods
jns,pn
fldl
xorl
stos
pop
cmpsl
adc
sub
mov
xchg
mov
stos
pushf
dec
subl
sti
rcl
push
aas
enter
sbb
mov
jno
jl
shlb
mov
xor
aas
xchg
pop
mov
je
movsl
xor
test
pop
sub
push
leave
and
outsl
cmp
sub
cwtl
out
add
push
and
adc
xlat
mov
or
cmp
loopne
rclb
xor
pop
mov
cmp
jno
cmp
aas
dec
out
rcrb
mov
lret
comiss
xor
repz
push
dec
and
addl
dec
mov
xor
cmp
add
mov
loop
jg
enter
push
inc
fistl
pop
cltd
mov
decb
cmp
and
dec
jge
cmp
pop
lret
mov
popf
add
scas
push
add
add
push
lret
sbb
int
jecxz
ljmp
add
and
gs
cs
loopne
lret
in
mov
out
lret
repz
ret
xchg
mov
cmp
test
push
xor
mov
sub
std
mov
lretw
movsb
lods
std
dec
xchg
mov
or
jnp
cmp
in
inc
mov
adc
in
int3
das
subl
inc
dec
mov
add
push
xchg
dec
loope
cltd
test
lcall
adc
sub
lods
and
js
dec
inc
sbb
jo
popl
pop
jmp
lods
jno
int3
cltd
jo
adc
testb
push
dec
xchg
ljmp
sbb
in
sub
and
mov
pushf
inc
xor
outsl
loopne
xchg
pop
nop
xchg
xchg
fsubl
jg
lret
push
mov
dec
cld
mov
mov
sbb
jge
out
aad
inc
cmp
add
jnp
mov
pop
mov
mov
pop
dec
loop
cmc
xchg
dec
dec
push
cmp
lea
pop
xchg
mov
sbb
outsb
jecxz
fmul
movsb
mov
shr
push
out
xchg
xor
test
rcll
sar
dec
loop
or
andl
add
mov
xor
fidivrs
mov
and
and
fs
and
mov
leave
imul
test
and
adc
rorl
lret
sbb
mov
dec
ret
pop
jne
adc
push
push
orb
pcmpgtd
mov
inc
addl
mov
inc
cltd
push
fisubrs
jb
xchg
jns
call
popf
cmp
insb
roll
add
sub
ljmp
xchg
lods
jge
push
jmp
hlt
or
dec
fdivp
dec
cmpsb
into
std
pop
movsb
in
sti
pop
xor
test
scas
mov
decb
insb
cmp
fldcw
jb
mov
das
cli
lea
inc
and
and
push
imul
or
jp
shr
mov
mov
or
arpl
dec
or
sub
or
pop
imul
xchg
push
filds
enter
mov
lock
addr16
push
add
lea
insl
hlt
sbb
sti
mov
lock
cmp
daa
int
sub
or
das
jno
fisttpl
fcoms
cmovae
repz
daa
mov
ljmp
inc
sti
jbe
jecxz
pushf
rclb
add
nop
ret
sub
cmp
outsb
xchg
sub
mov
stos
scas
adc
mov
fsubr
aam
mov
dec
sub
subb
rol
testb
scas
pop
xchg
ror
sbb
addr16
orb
jecxz
cmc
jne
jbe
inc
enter
bound
aad
dec
push
push
aaa
xchg
addl
dec
out
mov
imul
xor
popa
jmp
addr16
xchg
stos
cmp
xchg
or
getsec
popa
push
mov
pop
pop
roll
mov
sub
sbb
fisttpll
mov
and
push
and
or
movsl
movsb
pop
mov
inc
loopne
shll
dec
outsl
leave
push
mov
enter
mov
sbb
or
arpl
call
inc
dec
pop
sub
in
dec
icebp
mov
push
addl
arpl
fcomi
daa
imul
cwtl
clc
mov
sahf
xchg
clc
ficomps
lods
imull
inc
add
loopne
adc
xor
xchg
ds
xchg
cltd
mov
jb
pushf
lock
lret
pop
jp
mov
iret
ret
push
mov
test
pop
fnsave
in
sub
push
sbb
pushf
jno
or
xorb
fmuls
call
movsl
mov
lds
jb
xchg
xor
lahf
fwait
imul
mov
cmp
icebp
leave
rclb
aaa
pop
rcrb
insb
ret
xchg
popf
std
packssdw
cmpsb
sti
fidivrs
cs
jmp
and
sti
jmp
mov
aad
daa
sti
insl
scas
inc
adc
sti
adc
imul
test
das
mov
cmp
aas
in
xchg
test
xchg
loope,pt
enter
fdivs
mov
and
xchg
cmp
xor
scas
inc
test
inc
xor
dec
mov
test
test
es
inc
dec
ret
loopne
iret
pop
xchg
push
sub
cmp
fimuls
in
nop
xchg
lret
inc
aas
jb
add
js
xor
add
pop
mov
push
lret
mov
aad
sbb
mov
mov
rcl
pop
ds
add
jne
scas
ja
jp
dec
inc
cmp
xchg
in
daa
jne
jmp
movsb
testl
mov
cld
mov
dec
out
in
mov
xor
cmc
sahf
sbb
xor
cmp
jmp
fldl
push
push
add
js
jge
imul
addr16
jae
pop
xchg
xchg
sub
insb
data16
insl
xlat
in
loopne
clc
rorl
dec
test
jno
cmp
negb
sub
jns
lock
negb
and
fdivs
dec
ds
cwtl
xchg
movsl
fdivl
outsl
out
add
cmp
dec
mov
outsl
cmp
fisttpll
jecxz
enter
adc
sbb
dec
mov
mov
lret
lods
and
in
sub
sti
sahf
mov
mov
pop
ja
int
mov
inc
dec
in
pop
sti
adcb
lret
shrl
adc
dec
inc
jmp
fs
dec
cmp
rolb
fdivr
sti
or
and
mov
xor
scas
bound
adc
mov
pop
popa
cli
pop
stos
arpl
inc
cmp
mov
dec
bound
daa
dec
mov
jmp
mov
mov
jno
inc
jecxz
dec
or
xor
cmpsl
and
mov
scas
enter
fcompl
mov
sub
xchg
sahf
xor
lea
inc
popf
and
mov
out
fwait
mov
add
xchg
xor
or
and
repz
imul
fimuls
scas
xor
jmp
mov
mov
mov
inc
aaa
adc
xchg
dec
ss
mov
mov
mov
mov
xlat
sbb
je
popf
mov
dec
jns
jnp
rcll
xor
in
jp
out
xchg
pop
adc
bound
fldl
les
mov
push
push
adcb
daa
pop
xchg
shlb
push
fdivl
fidivl
das
test
in
scas
push
inc
mov
loope
gs
mov
enter
bound
icebp
mov
ljmp
arpl
and
imul
inc
hlt
or
sub
cmp
inc
pushf
arpl
aam
push
push
fwait
test
or
sub
je
gs
jmp
add
cld
or
in
cmp
push
clc
in
std
mov
cltd
cmpsl
add
cmc
repz
jne
push
pop
ret
movsb
dec
negb
pushf
lods
pop
outsb
es
repz
add
push
outsl
jp
cwtl
les
pop
int
das
roll
lock
lret
lea
fsubrs
stos
fmuls
imul
xchg
xchg
or
test
lcall
xor
pop
stos
test
pop
lret
cs
int3
sahf
push
in
push
mov
das
mov
sbb
std
mov
cmpsl
int
fnstenv
cmp
cltd
push
aaa
mov
cmp
scas
bnd
es
adc
inc
xor
sahf
ret
bound
xor
shlb
cwtl
addl
fs
lods
fucomp
pop
jmp
add
mov
mov
add
jge
out
inc
add
sahf
mov
mov
cmp
jnp
adc
and
and
mov
jmp
push
xchg
xor
xor
test
addb
rorl
outsb
jg
stos
cltd
and
add
call
ficoml
std
sub
out
mov
adc
xchg
mov
enter
int3
movsb
ljmp
shl
push
pop
popf
ljmp
inc
lods
les
cmp
dec
and
jmp
mov
leave
jmp
call
movsb
aad
test
dec
ja
xchg
faddl
mov
outsb
mov
dec
push
add
sbb
sarl
adc
sub
movb
dec
cld
mov
mov
sar
lea
je
mov
movb
gs
out
test
subl
push
mov
mov
lret
out
pusha
lahf
push
inc
ret
inc
mov
pop
and
inc
in
addl
stc
cld
inc
movsl
loopne
test
mov
mov
daa
or
pop
adc
push
shrl
subb
fwait
sub
in
popf
and
stc
xchg
dec
jl
xchg
int3
iret
call
inc
add
call
fstpt
icebp
mov
or
or
scas
lahf
movsb
dec
cwtl
sub
push
dec
cs
sub
dec
push
add
xchg
lret
inc
mov
pop
cltd
adc
out
movsb
add
jge
test
push
pushf
cmp
subl
ficompl
sub
push
inc
and
ds
inc
xchg
fisubrl
adc
and
xchg
or
mov
pop
inc
inc
sahf
mov
test
lcall
clc
sub
gs
add
xor
mov
sub
add
inc
jmp
mov
fisttpl
dec
xor
and
xor
jmp
mov
xchg
mov
and
lahf
sub
add
push
mov
pushf
lock
jnp
mov
push
mov
movsb
add
in
jge
test
mov
pop
cwtl
ljmp
inc
sahf
insb
enter
lahf
sbbl
fsubl
add
xor
lcall
xchg
jo
call
imul
stos
es
cli
mov
je
dec
jo
cmp
cmp
mov
mov
out
in
inc
sbb
outsb
into
inc
aaa
pop
xchg
pushf
mov
jne,pt
mov
xchg
das
adc
mov
leave
fstpt
out
cmpsl
add
push
fimuls
shll
cmpsb
stc
lods
dec
push
negl
out
pop
fsubr
xchg
mov
pop
es
sub
sub
dec
mov
sbb
dec
mov
push
ljmp
ret
rolb
sub
clc
xchg
sub
sti
pushf
mov
mov
stos
fdivrl
mov
push
push
and
xlat
jo
cmp
and
jle
pop
hlt
inc
jmp
aaa
call
jb
rclb
call
push
xchg
inc
mov
into
insb
repnz
test
mov
test
or
jl
shll
jno
pop
dec
ficoms
loop
iret
push
cmp
push
adc
mov
or
or
sub
orb
sahf
lret
sub
dec
imul
stos
jecxz
leave
mov
jae
nop
fmulp
aad
pop
or
pop
lods
mov
pushf
popf
fiadds
loop
or
jecxz
testl
outsb
push
or
or
ss
jno
and
cmp
jge
aas
aas
mov
movsl
pop
sub
addr16
in
add
sbb
lds
inc
jl
xor
and
and
movb
insb
mov
and
fdivl
repnz
insl
dec
adc
mov
inc
sub
pop
ret
mov
lods
jnp
dec
test
mov
xchg
nop
loop
xlat
adc
rcll
push
adc
test
call
cmpsl
push
das
shlb
inc
rcrb
jns
lds
int3
fistpl
xrelease
stos
or
pop
sarl
mov
fmuls
adc
adc
cmp
clc
cltd
fidivrs
lret
stos
xchg
lea
xor
sarb
rorb
jle
andl
repz
repz
xor
mov
and
test
dec
push
sti
push
cmp
mov
jbe
dec
push
enter
jmp
popf
mov
sbb
dec
shrl
loop
inc
ret
pop
jg
push
adc
sbb
mov
outsl
imul
push
inc
dec
ret
jmp
xor
dec
lea
or
out
test
cld
jnp
cmpb
daa
or
pop
addr16
ficoms
cmp
jne
dec
mov
push
jl
dec
fcoms
fs
mov
push
shll
aad
fwait
out
jno
rorb
fiaddl
nop
repnz
cmp
lcall
or
cli
jp
mov
cmc
fldt
jmp
stos
push
sbb
and
out
sub
or
xor
sbb
roll
add
lret
ret
mov
data16
stos
xor
pop
push
ljmp
stos
sub
mov
inc
cmp
fstpt
adc
inc
sub
popf
mov
inc
xor
mov
inc
clc
xchg
inc
and
add
daa
sub
pop
sbb
arpl
out
adc
or
or
adc
sub
mov
xchg
add
inc
push
mov
cmp
push
ljmp
and
cmc
or
mov
push
in
adc
mov
sbbb
inc
jne
loope
sub
fisubs
mov
inc
ficomps
add
or
add
loopne
rol
inc
subl
mov
rcrb
mov
pop
ror
call
push
scas
andl
cld
push
jae
jmp
pop
fistl
mov
jnp
mov
test
test
aam
xor
popa
sti
rorl
int
out
cmp
outsl
dec
cwtl
sbb
sub
hlt
imul
aam
push
mov
jmp
clc
adcb
scas
mov
push
pop
adc
enter
cltd
cwtl
pushf
jns
cmpsl
adc
xlat
mov
fwait
add
in
jl
pushf
add
xchg
mov
push
fcmove
arpl
cli
outsb
aad
clc
dec
cmp
mov
stc
jle
pop
iret
push
and
pop
inc
loop
jmp
push
mov
push
pushf
sub
movsl
movsl
test
or
sub
cld
and
push
add
add
adc
push
pop
mov
adc
or
adc
mov
je
cmp
mov
out
xor
aad
call
cmp
jg
cmp
mov
out
jnp
pop
pop
hlt
add
insb
icebp
and
jnp
xchg
repz
pop
aas
js
add
sub
aas
adc
nop
lret
lret
lcall
xchg
and
iret
in
movsb
bound
mov
adc
dec
outsb
sarb
mov
stc
fdiv
js
lods
and
fldcw
in
insb
jp
aad
mov
mov
cwtl
pop
and
outsl
test
xchg
jl
lcall
inc
int
xchg
xchg
or
sub
push
jge
push
mov
jbe
lret
xor
scas
and
aaa
arpl
xorl
imul
lahf
stc
jne
or
lahf
loopne
mov
inc
xor
testl
es
jge
andl
imul
add
je
dec
ljmp
mov
adc
pop
add
call
cmpsl
xchg
push
mov
aam
jecxz
lods
ja
call
add
jl
test
jl
daa
mov
jb
mov
sbb
xor
adc
inc
ljmp
fs
stc
popf
xor
ss
inc
mov
inc
mov
sub
dec
ret
push
in
jp
jmp
pop
mov
mov
push
scas
xchg
into
pusha
jae
cmp
test
ss
adc
pop
mov
mov
pop
jge
es
pop
jl
dec
clc
decb
cmp
addr16
sub
add
leave
lods
pushf
test
dec
arpl
out
nop
jmp
in
outsb
jae
jmp
and
lock
addr16
aam
dec
jecxz
lcall
adc
jnp
mov
popf
pop
push
std
arpl
lods
add
adcb
mov
cmp
orl
es
mov
aaa
adcb
jns
dec
sbb
adc
not
xor
and
cwtl
fstp
xor
mov
data16
dec
std
aaa
loopne
jne
outsb
push
cmc
shufps
or
adc
cs
add
fmull
dec
jmp
xor
loope
fs
aaa
jne
inc
jno
fwait
hlt
cli
dec
adc
pop
clc
leave
or
push
cld
push
inc
clc
int
adc
call
jge
dec
push
mov
cld
aaa
cli
testb
sub
pop
test
jne
or
mov
insb
test
xchg
shll
das
loopne
push
dec
dec
inc
int
adc
iret
movsb
cmp
jne
jb
cmpsl
test
cmp
into
mov
lcall
cmp
cmp
mov
jecxz
outsl
neg
push
pushf
dec
ret
movsb
test
es
test
cld
xor
jb
lock
sbb
jae
out
pmaxsw
call
stc
jne
and
pop
shr
adc
dec
cmp
imul
adc
xor
pushf
rcl
sahf
cmp
adc
sub
mov
fcmovnu
movsl
and
mov
std
cmc
sub
push
cmp
pop
sbb
enter
outsl
aas
push
jmp
cmp
jo
or
and
outsl
enter
mov
je
mov
hlt
sahf
imul
cli
cmpsb
repz
test
js
rcll
xchg
mov
and
xchg
mov
fucomip
sbb
negb
mov
mov
cmp
ss
je
add
adc
sub
jae
pop
cmpsl
int3
clc
testl
test
ds
scas
mov
in
cmpsb
jnp
sbb
sbb
pop
xchg
fadds
rcrl
test
pusha
fidivrs
out
into
fs
or
subl
out
scas
add
lds
push
rcll
in
mov
fcoms
shr
mulps
pop
mov
pop
sbb
scas
les
inc
popa
inc
out
xorb
lcall
clc
xor
mov
jecxz
and
ss
push
pushf
lods
fsubl
addr16
pop
test
jne
movsl
ret
xchg
dec
xchg
sub
jb
test
daa
test
shrl
loopne
stc
cmpsl
sbb
ror
push
fwait
sbb
cltd
fadds
in
rol
fsubl
sbb
rorl
scas
mov
cli
cmp
daa
adc
and
mov
push
fwait
mov
stc
inc
add
add
sbb
cmpsl
subb
rorb
cmpsl
or
mov
sbb
cli
sbb
mov
pushf
pop
rorb
and
dec
mov
in
mov
outsl
das
and
sbb
jo
mov
mov
sbb
adc
ja
and
mov
mov
std
sbb
jo
test
scas
movsb
cmpsb
in
inc
shlb
mov
je
icebp
subps
loop
mov
cmpsl
lret
add
repnz
sahf
imul
les
lods
movsb
xor
add
gs
pop
push
mov
inc
std
or
js
dec
xlat
or
cltd
mov
lea
or
mov
jg
cmp
dec
dec
cmp
scas
aas
lea
mov
int
nop
xchg
mov
xchg
xor
pop
jmp
push
lods
mov
or
data16
mov
pop
fnstsw
pop
sti
mov
ljmp
sbb
aas
cmc
out
daa
in
or
mov
xlat
outsl
jno
dec
pop
incb
pop
sub
and
cld
xor
pop
adc
inc
pop
mov
cmp
add
sub
push
jmp
sub
addr16
xor
or
push
and
dec
stos
aas
xor
fld
outsl
shlb
inc
leave
int3
push
repnz
pop
mov
fs
lock
mov
insl
rcr
fxch
hlt
mov
adc
js
dec
ret
icebp
xchg
je
testl
fwait
adc
mov
lea
add
in
xor
sbb
ljmp
lods
fwait
fs
std
sbb
jp
xlat
xor
stc
fs
jne
inc
mov
lods
sti
mov
jae
fsubrp
enter
mov
fisttps
xorb
movsl
popa
mov
je
adc
cld
and
sbb
dec
jecxz
out
inc
ljmp
mov
jno
xor
and
icebp
repnz
pop
jns
inc
push
bound
dec
xchg
xchg
sahf
mov
stc
jmp
cs
pop
pop
dec
movsl
lods
or
mov
and
leave
ss
test
jbe
pop
xchg
fst
cmc
pushf
mov
je
loop
adcl
inc
cli
jo
not
push
insb
insb
push
add
fidivrs
in
inc
popa
loop
lods
pop
imul
stc
push
cmp
jno
mov
insb
cmp
jae
sbb
ret
jmp
dec
jge
je
xchg
mov
lods
adc
cmp
js
inc
xchg
test
cmp
or
sbb
fscale
jb
stc
jae
mov
cmpsb
cmpsb
enter
cmpsb
shlb
cld
in
sub
lcall
mov
add
mov
call
dec
ret
mov
aad
and
mov
js
testl
movsl
push
fs
cltd
jmp
jg
mov
mov
mov
mov
jne
lock
jbe
mov
mov
sub
cltd
int3
mov
nop
cmp
add
or
xchg
push
mov
insb
push
test
cmpsb
loopne
adc
and
nop
jge
sbb
repnz
ds
adc
mov
std
add
add
cmp
sbb
sbb
pop
rcl
lods
cmp
push
pop
cld
icebp
pop
lcall
push
fwait
test
aam
dec
les
push
jle
jno
mov
jg
xchg
or
testb
cwtl
jae
call
loope
mov
or
cmp
add
jl
hlt
pop
dec
nop
movsl
loope
pop
cmp
loop
cmp
dec
dec
adc
fwait
xor
shll
push
sub
fdivrp
inc
outsl
xor
dec
inc
cltd
cwtl
or
mov
cmpsb
cmp
fdivrs
leave
std
push
imul
inc
test
mov
adc
fsts
imul
pop
ljmp
inc
push
or
sub
imul
test
push
adc
push
jmp
jno
or
add
mov
cmpsb
cmp
or
adc
add
scas
lock
ss
cmp
into
bound
xorl
clc
scas
jbe
lock
pop
dec
scas
call
enter
mov
testl
mov
lret
sbb
add
mov
sbb
xor
imul
test
addr16
add
lcall
sbb
aad
fsubl
pop
or
into
xchg
repnz
xor
iret
dec
sub
jne
test
test
sub
xor
scas
xor
push
add
mov
negl
sti
xor
scas
mov
imul
xchg
test
test
bound
xor
mov
jp
lcall
clc
inc
mov
sahf
jmp
push
xchg
into
jb
jae
adc
sbb
pop
mov
xchg
cmp
in
incl
jp
add
mov
sub
jp
cs
cltd
jp
mov
out
aam
loope
aas
xchg
enter
stos
sbb
lret
icebp
jno
xchg
inc
arpl
mov
nop
sahf
cmp
xor
inc
imul
mov
adc
mov
scas
mull
out
out
divb
adc
pop
iret
enter
cmp
xchg
push
cmp
mov
xor
mov
or
inc
es
insb
push
cltd
sbb
lret
outsl
sahf
cmpsb
cwtl
lds
lock
pop
cmp
and
cmp
scas
mov
adc
mov
out
data16
fstps
movb
dec
pop
inc
xchg
pop
je
rorl
fistps
int
loope
sub
cli
inc
mov
or
test
inc
fld
cld
and
js
inc
in
mov
imul
mov
sub
aam
inc
adc
adc
stos
dec
mov
or
int
pop
out
lea
mov
inc
xor
and
insb
mov
lret
cmp
mov
popl
xchg
mov
add
shl
xchg
cmpsl
or
jg
into
test
sbb
mov
xchg
repnz
cmpb
ljmp
xchg
nop
mov
movsl
sub
test
dec
dec
push
inc
ret
sti
xor
nop
cmpsb
cmp
bound
sbb
sbb
and
dec
add
mov
shrb
lock
mov
cwtl
cmp
xor
sbb
mov
pop
js
mov
rcrl
push
pop
pop
sub
repnz
xchg
sub
jae
sbb
add
and
pop
lea
pusha
add
cmp
dec
inc
mov
jo
fisubs
and
dec
jge
sbb
ja
xchg
sub
sub
je
es
pop
int3
xchg
popf
dec
subl
mov
out
dec
xchg
test
sub
push
xchg
ja
adc
idivl
imul
call
ss
sbb
pushf
jecxz
cmpb
jne
mov
scas
xor
mov
mov
add
sbb
mov
sub
mov
daa
cmp
mov
sub
int
addr16
movsb
mov
push
inc
dec
sbb
jns
ja
mov
imul
lret
stos
daa
dec
fs
mov
cwtl
arpl
xchg
dec
sub
lods
fmuls
sub
add
dec
pop
dec
test
ret
push
fwait
insb
aas
rolb
cwtl
pop
sbb
push
sbb
mov
enter
push
jecxz
aaa
push
nop
pop
es
scas
test
xchg
pop
inc
das
lahf
jns
and
lcall
jle
les
js
fnstenv
cmp
rclb
inc
arpl
pop
pop
outsl
jge
hlt
sti
sub
lea
iret
add
and
sahf
xor
cmp
mov
and
imul
addr16
push
sbb
push
jo
pop
out
sbb
pushf
test
cmp
loop
jb
lret
andl
mov
dec
pushf
dec
sub
ret
or
xorl
mov
ss
adc
push
and
bound
jg
xor
cmpb
movsb
mov
jo
add
addr16
fdivrs
sti
scas
sub
stos
outsl
xor
mov
inc
jno
sar
mov
pop
std
or
popf
dec
jecxz
cwtl
xchg
mov
push
out
push
decl
stos
aaa
ficoml
xchg
mov
jl
mov
push
mov
jmp
mov
add
loope
and
mov
jns
std
sbb
jmp
lock
jne
xchg
sub
insl
push
xor
call
fwait
mov
cld
lock
dec
mov
jg
sahf
pop
mov
sub
or
popf
xor
push
cmp
push
or
mov
in
test
sbb
cli
dec
mov
iret
scas
sbb
and
iret
adcb
sbb
dec
cmpsl
push
fists
btr
dec
iret
sbb
idivb
pop
jae
jle
btr
add
and
push
int3
sbb
mov
xor
dec
pop
scas
or
lahf
daa
adc
filds
or
sub
ja
mov
es
pop
adc
ss
shll
pop
stos
pusha
mov
and
add
fbstp
fwait
push
xor
sbb
hlt
push
js
sub
adc
mov
in
fsts
sub
adc
jns
pusha
inc
outsl
mov
out
push
sbb
out
or
jo
mov
cmpsb
es
out
in
lret
lcall
movsb
movsl
adc
shl
adc
sbb
std
scas
repnz
lret
cmp
jns
loop
mov
mov
xchg
or
mov
push
popa
mov
stos
cmp
ficompl
jmp
ja,pn
lea
fwait
loop
cmp
clc
dec
cmp
lock
cmp
pop
dec
sbb
mov
fcoml
add
das
fdivl
xchg
push
xchg
negb
inc
test
or
xchg
cmp
mov
dec
sbb
clc
jmp
lret
cmc
xchg
out
and
lods
dec
lock
test
pop
xor
push
loopne
stos
icebp
shrl
cli
dec
stc
add
xchg
lret
int3
mov
popf
repnz
subb
js
test
pminub
mov
mov
aaa
dec
in
sbb
out
sbb
fcmovnb
adc
dec
imul
mov
pusha
or
dec
fldt
jae
jo
push
mov
int
push
adc
scas
fldenv
add
push
cmp
mov
xor
into
xor
push
jl
dec
mov
xchg
add
or
pusha
popl
ret
arpl
or
cmpsb
vpunpckhdq
fisttpll
lea
xlat
into
hlt
in
mov
add
sub
or
aaa
xchg
xchg
xchg
xlat
ss
imul
cs
jmp
loopw
adc
into
rcrb
fbld
or
outsb
jns
js
adc
pop
or
mov
add
arpl
clc
jne
push
leave
push
pop
enter
jb
std
inc
xor
shll
repnz
xchg
pop
pop
mov
xlat
pop
jle
stos
jge
outsb
cs
sbb
js
sub
xor
int
mov
int3
test
int3
icebp
xor
add
int
movsl
in
out
adcb
cmp
or
lods
push
xor
call
rcrb
gs
xor
loopne
js
popf
es
push
add
jle
mov
movsl
and
enter
ds
mov
xchg
rcr
clc
testl
mov
iret
jae
cmp
ret
insb
mov
int
sbb
cmp
xchg
push
test
adc
inc
cmp
sub
xchg
dec
int3
call
ret
imul
enter
scas
push
or
cmc
andb
add
mov
popf
push
mov
cld
mov
pop
inc
mov
inc
jo
stos
loop
or
dec
stc
jne
adc
mov
imul
add
jmp
xchg
and
mov
imul
xchg
jo
imulb
adc
or
rcrb
xlat
xchg
jns
sbbl
push
mov
lea
push
movsl
xchg
xchg
insl
jmp
sahf
or
push
pop
inc
mov
std
xor
jae
xchg
mov
mov
and
pop
cwtl
pop
into
mov
cmp
jmp
inc
cld
xor
xor
cmp
cs
cmp
mov
fbstp
rolb
fistpl
enter
cmp
loope
test
lret
or
dec
fnstsw
adc
xor
fnstenv
loopne
sub
mov
mov
fs
and
sbb
xlat
xchg
cmp
xor
cmp
add
fistpl
dec
push
cmc
loopne
mov
lock
out
in
test
decb
inc
mov
xlat
inc
adc
test
adc
repnz
insb
fstps
push
in
addr16
mov
je
jbe
push
dec
inc
cmp
xchg
lock
inc
cwtl
rolb
pop
dec
inc
scas
sbb
lcall
push
int
mov
mov
gs
push
push
loopne
xlat
and
inc
dec
mov
push
aas
pop
stc
mov
mov
popa
leave
in
add
fistpll
and
arpl
and
pop
xchg
aaa
stc
sbb
dec
adc
out
and
inc
cmp
imul
fadds
pop
jg
and
push
ss
sbb
rcrb
shrl
and
mov
loop
jl
or
add
rcr
ja
in
adc
lahf
scas
mov
push
lods
pop
dec
pop
int3
mov
stc
adc
shll
mov
inc
loopne
lods
dec
and
hlt
test
clc
push
cwtl
xchg
dec
push
call
xor
repnz
and
sbb
imul
loop
cmp
scas
mov
inc
mov
jns
pushf
fisubl
mov
jo
inc
loope
add
mov
imul
and
add
lods
or
jnp
test
mov
mov
rolb
jae
adc
pop
repnz
mov
mov
popf
repnz
lock
and
rclb
sbb
fs
in
pop
outsl
ds
add
pop
mov
mov
fcomip
jle
call
loop
sbb
cmp
leave
adc
add
orl
and
xchg
loop
rorb
xor
arpl
push
pop
xchg
inc
add
lods
sub
ret
in
xor
lods
lcall
jne
mov
lahf
aam
data16
fldcw
xlat
ds
sbb
rcrl
mov
or
jne
jp
hlt
sbb
xchg
daa
outsl
or
mov
adc
mov
add
aad
sbb
mov
popf
push
add
in
jb
lods
xor
shll
in
movsb
mov
jbe
mov
or
mov
sub
mov
dec
dec
orl
outsb
addr16
jbe
test
mov
and
inc
xchg
add
loope
inc
jge
mov
mov
add
out
sahf
xchg
pop
lret
dec
lock
push
loopne
fisttpll
jle
or
ja
inc
arpl
inc
loopne
inc
in
je
les
jae
push
addb
and
decb
roll
setne
lcall
xchg
push
pop
mov
jo
pop
int
repz
inc
or
dec
int3
cmp
inc
lahf
ss
cmp
xor
wbinvd
push
ficompl
jne
mov
jmp
push
push
dec
fs
or
imul
push
mov
mov
je
mov
jg
ret
dec
push
inc
fsts
xchg
or
fisttpll
scas
sbb
or
cmp
mov
pusha
data16
aaa
sub
imul
test
dec
sbb
incb
mov
pop
fsubrl
push
cmpsl
jmp
out
aam
jl
adc
ss
or
lea
inc
js
gs
push
testl
lcall
push
das
in
mov
push
and
ret
mov
push
rcll
testb
mov
sub
aaa
mov
int3
xor
rclb
jmp
lret
push
lods
mov
jne
ss
mov
adc
icebp
test
sub
sbb
imul
or
mov
lcall
sbb
movsl
int
dec
int
mov
push
sti
xchg
add
cmp
ficoml
adc
add
pop
push
add
add
push
incl
pushf
nop
push
popf
inc
and
inc
cmpl
cmp
lods
sbb
fnstcw
mov
cmpsb
repnz
fsubs
lret
in
notb
cmp
out
cli
mov
jmp
sub
stc
jo
xchg
rorb
cmp
test
pop
cmpsl
xchg
mov
repnz
roll
lea
or
iret
lods
add
inc
inc
imul
mov
or
or
mov
out
jmp
notb
xor
adc
paddsw
leave
cmp
mov
pop
jne
mov
mov
leave
inc
lds
outsb
lods
mov
pusha
nop/reserved
push
call
hlt
stos
int3
sbb
push
sbb
call
and
mov
sbb
push
addb
in
outsl
mov
jns
xchg
mov
mov
mov
inc
rcrb
pop
loopne
pop
jne
ret
jb
inc
cmp
sbbb
inc
inc
sub
outsb
lret
add
scas
outsl
jb
jne
popf
ret
pop
and
cld
inc
scas
movsb
fcmovne
inc
push
mov
dec
jg
pop
cmp
pop
xor
call
mov
scas
popf
fistpl
push
adc
or
sahf
add
aas
cmp
in
repnz
and
aaa
cli
push
dec
or
xor
test
gs
push
jg
jo
scas
fwait
aas
xchg
sub
push
dec
arpl
in
sbb
jns
cwtl
adc
arpl
dec
pop
fs
sti
mov
sbb
jg
adc
icebp
add
add
out
and
push
xchg
jns
mov
sbbl
shrl
cmpsl
mov
cli
xchg
xchg
cmp
clc
outsb
je,pt
ret
or
in
adc
rclb
mov
imul
add
mov
jbe
shll
es
dec
adc
inc
jg
aaa
push
mov
push
dec
cmpsl
inc
fistpl
add
into
dec
scas
or
shlb
mov
jmp
cmp
test
ss
loopne
push
ret
xor
insl
das
sbb
lock
fdivrs
aam
add
addl
ss
rolb
insl
jecxz
and
dec
cmp
lcall
insb
test
adc
xor
adc
pop
ljmp
sahf
and
rclb
iret
out
and
imul
or
xor
cmc
pop
xchg
inc
add
inc
fdiv
inc
mov
mov
inc
sar
xchg
jle
fs
mov
xchg
pop
mov
mov
adc
aad
push
loop
and
dec
pop
scas
fs
pusha
repnz
mov
aaa
pop
int
jmp
mov
cld
xlat
out
addb
pop
repnz
sbb
loopne
insb
mov
xchg
lret
jp
aaa
jmp
cmp
cmp
leave
inc
sahf
adc
loopnew
xchg
out
inc
rcll
flds
int3
and
or
inc
mov
push
adc
cmp
xor
insb
js
pop
jmp
pop
mov
test
xchg
test
xchg
jg
incb
sti
fists
les
divl
arpl
add
std
loope
repz
cmp
mov
add
shl
xor
fldt
fldenv
cli
nop
xlat
push
std
sbb
cmp
mov
xchg
pusha
stos
hlt
mov
mov
imul
lahf
inc
mov
out
push
push
xor
inc
sbb
out
out
mov
fcoms
xchg
mov
dec
sahf
test
ja
scas
jne
adcl
negl
outsl
and
cs
sbb
aad
lcall
add
lods
bound
js
and
outsl
pop
into
mov
stos
sub
jle
sbb
adc
inc
fidivs
std
inc
pop
or
ret
dec
fldt
add
notb
test
in
int
lret
iret
or
inc
rclb
inc
push
out
sub
insb
nop
mov
dec
cmp
xchg
cmp
bnd
dec
push
mov
xor
mull
pop
xchg
xchg
pop
cmc
inc
lret
in
orb
inc
mov
test
dec
sub
fistps
inc
fst
jns
sbb
jb
sub
mov
loop
and
inc
cltd
jmp
loopne
add
mov
pop
xlat
xchg
push
adc
js
push
cwtl
xchg
cmp
inc
leave
cmp
pop
sub
or
nop
std
dec
sbb
repz
in
lret
xor
mov
cmp
lret
inc
hlt
mov
je
aas
movsl
sub
push
push
ja
lods
pop
call
int
loopne
pop
data16
andl
xchg
sbb
or
shll
out
mov
cmp
sahf
icebp
sbb
jge
inc
nop
add
in
pop
sub
test
xchg
dec
adc
popf
test
pop
jmp
dec
mov
lea
push
sub
pop
jp
jl
stos
pop
jmp
mov
lds
sub
pop
sub
out
test
cmp
mov
dec
insb
inc
xor
sti
cmp
cmpsl
jg
js
int
repnz
and
pop
sub
mov
sbb
xor
test
mov
or
clc
sub
fstpt
outsl
mov
dec
fmull
sbb
aam
mov
xchg
sti
es
sub
aas
xchg
jns
pop
dec
in
sub
outsl
xlat
jno
nop
xor
xor
fsubs
and
xchg
in
in
movsb
or
xor
mov
sbb
mov
mov
dec
lds
shll
or
mov
fisubrl
xor
add
mov
sbb
inc
mov
in
sub
add
xchg
lods
notl
mov
stos
mov
je
icebp
pop
dec
insb
sbb
les
iret
or
rcrb
cli
mov
push
lret
cmpb
jmp
std
jae
mov
xlat
xor
jb
dec
cmp
dec
out
pop
addr16
mov
mov
or
stc
pop
add
fwait
push
arpl
outsl
orb
pop
fdivrp
bound
test
les
xor
add
mov
lods
jmp
pop
in
mov
mov
incb
mov
mov
lea
ficomps
add
jns
cs
cs
mov
lods
fnsave
mov
xchg
daa
sub
cmp
dec
mov
int3
in
pop
and
les
stc
fcomps
out
lock
enter
mov
mov
add
imul
ret
xor
divl
loope
and
insl
or
sbb
dec
insl
inc
std
mov
and
xchg
rorl
cmp
movsl
sti
aad
cltd
cmp
adc
jbe
mov
push
adc
cltd
push
cwtl
popf
test
inc
jno
test
in
push
xor
xchg
dec
notl
cmp
push
jge
lods
test
cs
push
lods
mov
fs
movsb
lods
or
mov
insl
movsl
mov
aas
xor
mov
pushf
mov
adc
adc
cmpsl
insb
adc
lret
ds
xchg
and
xlat
ds
aaa
mov
and
inc
ds
mov
add
hlt
bound
cltd
xchg
mov
jbe
aas
pop
call
nop
xchg
push
les
cmpb
shrl
push
add
in
popf
outsb
stc
pop
scas
adc
and
xchg
cmp
ss
lods
test
in
jl
push
mov
jl
fcmovbe
jge
cs
sbb
add
mov
and
mov
je
pop
adc
add
or
test
mov
out
lods
xor
call
push
mov
add
scas
pop
repnz
and
adc
mov
subl
data16
adc
push
adc
aaa
add
dec
xlat
or
adc
dec
aam
fs
incl
push
andb
sub
push
jmp
scas
call
shl
ljmp
jecxz
in
sub
movsb
js
in
loop
pushf
sbbb
out
pop
in
cwtl
mov
jbe
ss
push
mov
rorl
sahf
inc
fisttpl
inc
pop
popa
mov
push
rcr
sti
out
or
dec
cld
hlt
jmp
lahf
mov
aam
data16
rcrb
or
test
lret
jbe
mov
xchg
imul
mov
aad
ljmp
xor
xchg
daa
sbb
sbb
xchg
inc
inc
cwtl
lds
movsl
mov
std
stc
das
jae
cmp
out
cs
dec
cmpsb
and
jo
jecxz
dec
leave
mov
pop
cmp
push
shll
into
jbe
sub
shrb
xchg
mov
in
pop
js
jnp
lock
scas
add
adc
cmp
cmp
clc
cmp
push
cmp
mov
in
cmpsl
xor
add
sbb
xor
sbb
dec
stos
aam
cmp
cmc
call
scas
mov
mov
aaa
out
add
movsl
add
fs
pop
mov
movsl
dec
insb
cmp
inc
sub
sub
dec
jne
enter
sub
test
and
xlat
or
lcall
jl
jbe
stos
mov
mov
insl
lods
xor
addr16
cmp
sti
jne
push
shrl
jecxz
cmp
aas
sub
jne
mov
and
push
mov
inc
pop
cmp
test
fwait
mov
shll
mov
mov
cwtd
fbld
push
fists
inc
jecxz
mov
sbb
push
pop
mov
jmp
pop
enter
mov
sub
icebp
mov
insl
cmp
daa
testb
loopne
pop
push
and
inc
pop
dec
pop
adc
imul
jg
jno
nop
sbb
jae
jns
adc
mov
add
jbe
inc
out
int
fucomp
out
cmp
lret
int3
fistpl
cmp
xchg
jge
ds
push
xchg
rorb
rcll
dec
pusha
xor
inc
bound
loope
push
or
sbb
xchg
sub
cld
into
insb
pushf
add
in
lret
adc
jno
pusha
push
and
adc
negb
push
cmp
mov
mov
aaa
jns
push
jae
cli
mov
fisubl
mov
push
sbb
cmc
fsubrs
add
notl
push
inc
pusha
cltd
sbb
shlb
dec
out
stos
jnp
mov
sbb
pop
pop
mulb
add
xchg
fxtract
push
jecxz
das
xor
sbb
loop
jne
push
xchg
add
ret
int
xchg
das
dec
sub
xchg
push
sbb
pop
jo
sbb
push
add
push
test
mov
xchg
or
ss
cs
xchg
js
jmp
cmpsb
xor
xchg
arpl
loop
sub
sti
xor
push
and
lds
stos
mov
pusha
fdivrp
ret
push
inc
lock
dec
clc
lahf
mov
fwait
mov
cmp
mov
sbb
sbb
mov
push
inc
cmpsl
inc
and
xorl
cltd
adc
push
mov
imul
stos
dec
cmc
add
sbb
and
inc
scas
xchg
push
pop
paddq
movsl
xlat
out
cmpsl
stc
jmp
test
add
rorb
arpl
data16
dec
bound
mov
mov
mov
mov
jno
je
jb
xor
les
clc
mov
push
ret
mov
pop
out
xchg
mov
test
pop
mov
dec
inc
bound
popa
add
cmp
jle
jl
test
push
pop
add
lods
frstor
pop
cld
mov
ret
mov
fcmovbe
sbb
int3
les
aad
sarl
dec
mov
shr
sbb
lock
mov
clc
jb
adc
mov
mov
jg
lods
mov
sbb
into
dec
cltd
xchg
iret
mov
dec
sbb
pop
icebp
xor
mov
stc
xor
aaa
and
and
cmpsb
mov
jmp
int3
insb
jmp
mov
sbb
push
cli
push
add
icebp
cmp
in
fs
sti
cli
movsb
outsb
arpl
mov
jmp
push
add
sbb
push
rclb
sar
inc
pop
inc
xchg
dec
jb
xor
sub
sub
nop
adc
ret
dec
jo
orb
rclb
xchg
repz
dec
adc
mov
push
scas
dec
jno
xchg
pop
aam
and
xchg
mov
ret
imul
push
and
xor
je
rcl
and
js
sbb
sub
and
mov
ds
in
in
cmp
cmc
mov
mov
mov
fisttps
hlt
fs
neg
cwtl
shr
dec
in
ds
mov
out
jge
add
out
add
mov
outsl
sbb
in
jecxz
xor
cwtl
dec
imul
stos
imul
fdivrl
out
sahf
xchg
js
nop
ds
xchg
adc
aam
cmp
adc
scas
iret
xchg
int
pop
push
push
fisubrs
lcall
neg
mov
jmp
jbe
xor
adc
adc
xchg
rcrb
mov
cld
sbb
movsb
xchg
mov
jne
mov
push
push
into
xchg
in
add
pop
push
push
sbb
push
or
dec
in
inc
enter
jmp
into
xchg
jne
dec
nop
cmpsb
mov
insb
dec
test
int
imul
mov
js
dec
sbb
mov
mulb
mov
cli
mov
cmp
iret
mov
rclb
sbb
lds
jl
mov
pushf
nop
clc
mov
aaa
cmp
pushl
inc
lock
adc
xor
ds
sbb
adc
and
jmp
sbb
cli
jne
adc
sti
jne
mov
or
rol
bound
cmp
fs
cmp
js
adc
and
pop
mov
jmp
das
out
push
cmp
xor
xchg
xlat
outsb
sbb
out
push
hlt
adc
loop
jmp
mov
mov
inc
mov
andl
repnz
ljmp
lcall
bound
popa
dec
mov
sub
mov
sbb
mov
cmp
sub
lcall
scas
sbb
in
orb
xchg
jns
xor
mov
mov
inc
jle
jno
xchg
insl
xor
push
std
iret
xor
mov
ficoml
enter
rcrl
dec
fistpll
inc
addr16
scas
imull
mov
or
xlat
sbb
cmp
mov
pop
es
stos
outsb
int3
shrl
push
repz
fmull
and
lcall
pop
lret
out
pop
mov
outsb
in
fisttpl
mov
nop
dec
nop
lds
lods
mov
xchg
and
push
int
sub
push
xchg
and
inc
and
pop
dec
push
and
int3
fmull
jecxz
and
insb
and
jnp
call
jns
fstp
inc
je
call
out
popa
cs
sub
cmpsb
jle
cmp
popf
push
push
push
jp
push
aas
imul
and
repnz
cwtl
fbld
push
mov
dec
cmc
fldt
or
mov
mov
movl
lret
mov
mov
push
push
daa
jae
jbe
dec
clc
pop
loope
dec
adc
lods
ljmp
sub
lods
pop
mov
hlt
cmp
jg
add
mov
hlt
test
arpl
das
adc
pop
cltd
dec
aam
cmpsb
mov
jo
arpl
cmp
xchg
stos
aam
dec
jns
pop
icebp
xor
pop
adc
xorb
jbe
cmp
ja
cmpsb
mov
pop
cmp
mov
dec
mov
sbb
addr16
inc
hlt
ja
push
mulb
add
inc
imul
jo
mov
jnp
mov
mov
iret
pop
rcl
jmp
imul
fwait
cmp
jmp
mov
mov
mov
cmp
imul
push
stos
mov
das
fldcw
mov
stos
out
or
push
xchg
cmp
push
xchg
and
xor
pop
jecxz
adc
cmp
loop
imul
in
rcll
scas
fsub
xor
cs
jae
xchg
lcall
nop
lds
cmp
or
dec
es
cmp
idivb
push
sahf
jg
cmc
out
sbb
out
cmpsl
mov
or
in
leave
push
and
push
push
xchg
lea
stc
jmp
add
dec
inc
xor
adcb
cmpsb
pop
ret
cmp
mov
in
or
jno
mov
leave
lock
fcoml
or
int
xchg
add
rcrl
movsl
shrl
and
sub
push
dec
cld
repnz
push
clc
mov
xadd
sahf
addr16
or
cmp
mov
mov
mov
push
jbe
jg
cld
push
adc
or
push
movsb
jb
push
in
test
mov
and
dec
and
sbb
mov
sbb
xchg
out
adc
insl
mov
jp
jecxz
dec
pop
mov
out
sub
test
js,pn
mov
notb
cmc
lahf
mov
call
push
cmp
pop
mov
xor
lods
cs
cmp
scas
stc
pop
adc
pop
mov
loop
cmp
dec
mov
repz
cmp
je
sarl
js
fistpll
sbb
test
orb
jno
lcall
push
mov
ja
push
iret
stc
and
imul
fldt
push
in
ret
jle
xchg
xchg
outsb
cwtl
stc
lods
aaa
or
xor
jecxz
push
push
mov
movups
inc
inc
push
and
or
push
push
adc
sbb
jne
pop
dec
std
outsl
scas
and
jnp
sub
dec
es
and
cmp
add
mov
xchg
in
and
push
shl
inc
mov
xchg
js
inc
add
sub
fcomps
sub
adc
mov
imul
rcr
pop
xchg
jns
ficomps
xor
test
or
insb
sub
dec
cltd
popa
xor
jl
scas
mov
add
addr16
xchg
mov
adc
sbb
stos
xlat
mov
inc
cltd
mov
hlt
xor
cmp
sbb
sub
jbe
dec
dec
inc
jmp
lock
aas
mov
add
jmp
test
cltd
int3
jle
sti
fildl
sbb
int3
cmp
pop
xrelease
mov
arpl
mov
jbe
lock
test
fnstenv
and
les
loop
clc
sub
push
fisttpl
adc
adc
xor
stos
movsb
and
sarb
push
pop
xlat
xor
fnstenv
xchg
and
outsb
roll
lea
das
xor
add
sub
adc
and
dec
lds
xchg
flds
dec
in
sbb
icebp
dec
pop
sbb
pop
push
and
popa
xor
stos
xchg
cmpl
xchg
cli
and
mov
repnz
push
loop
push
mov
mov
push
arpl
adc
dec
negb
mov
mov
push
push
outsl
inc
faddl
repnz
add
insl
inc
pop
nop
outsl
aad
and
idivl
push
js
mov
cli
shlb
jge
popl
cmp
jne
dec
cltd
jno
mov
in
inc
pop
xor
popa
mov
push
push
push
loopne
test
loope
jo
jbe
push
jl
cmp
mov
pop
pop
mov
dec
addr16
orl
out
adc
cs
mov
sarb
sbb
cmpsl
mov
xor
cmpsb
sub
loop
xchg
sbb
imul
daa
call
pop
sbb
xor
ss
ss
fdivp
cmc
adc
sbb
movsb
cli
int
lds
add
adc
dec
scas
dec
rorb
mov
insl
shll
mov
adc
stos
outsl
mov
jp
fisubrl
mov
sbb
cmp
fdivr
jb
cmp
inc
ja
pop
ficompl
pop
lea
xchg
push
cmp
icebp
sub
pop
in
jno
cmp
std
mov
shll
xchg
mov
sbb
popa
insl
xchg
mov
sbb
dec
sub
clc
xchg
lock
dec
xor
adc
push
or
clc
clc
pop
stos
movsb
aaa
inc
and
push
dec
loope
imul
mov
pop
call
cmp
pop
mov
fwait
icebp
mov
push
ds
cltd
insb
mov
fsts
push
push
sub
push
in
sub
sbbl
lret
xchg
fbld
or
pop
pusha
cli
dec
cwtl
pop
les
sub
movl
roll
mov
mov
pop
mov
pop
mov
sqrtps
fxch
pop
arpl
or
pop
dec
jmp
jmp
aaa
fxch
call
popf
cmp
pop
cmp
nop
mov
gs
cmp
and
adc
lahf
jge
stos
xor
inc
popf
push
jb
mov
lods
out
insb
cmp
les
jge
pop
mov
adc
mov
testb
dec
scas
push
or
xor
sub
inc
es
and
in
push
lahf
insb
jne,pn
repz
test
hlt
std
cmpsb
mov
popf
xlat
adc
lret
push
jle
cmp
test
testb
cmp
inc
pop
subsd
test
scas
pusha
mov
negb
xor
push
shll
je
xor
mov
dec
jg
and
add
and
ljmp
jecxz
or
mov
dec
jmp
test
push
fistpll
inc
and
xchg
pop
cld
cmp
insl
pop
mov
jno
les
faddp
adc
js
lds
push
or
pop
add
sub
xchg
loopne
ret
xor
dec
dec
rorl
push
sbb
int
imul
fistl
loope
imul
inc
jae
ret
inc
outsb
push
gs
lcall
cmpsb
ljmp
sarb
fnsave
push
fs
roll
and
repz
push
lock
fnsave
pop
xchg
dec
xor
jle
sti
and
mov
call
mov
std
xchg
sbb
lds
out
leave
popf
and
std
mov
jmp
cmpb
xor
nop
xchg
cmpsl
xchg
mov
js
fisubs
xchg
dec
jp
xchg
sbb
movsb
lods
sub
int3
push
xchg
imulb
in
fs
call
xor
popa
clc
mov
andb
mov
fwait
int3
mov
fwait
cmp
pop
pop
cmc
out
mov
repnz
in
ret
pop
xlat
xchg
adc
cmp
pop
inc
or
xor
xchg
push
xchg
lods
dec
loope
stos
repz
or
jle
sbb
ret
jecxz
push
add
rol
inc
outsl
jns
ret
xchg
add
into
xchg
mov
inc
fwait
js
sub
adc
add
aad
pop
aas
sbb
mov
out
lcall
sub
push
xchg
sbb
movsl
jno
repz
sbb
sub
cwtl
pop
jecxz
sub
stos
mov
jp
jb
fisttps
mov
dec
daa
sti
or
outsl
int
push
adc
test
clc
adc
xchg
mov
aas
or
cli
gs
push
not
test
push
cmpl
add
in
test
cld
jo
inc
out
popa
cli
cld
sbb
sub
scas
cmp
push
cld
adc
rorl
dec
es
andps
add
and
out
icebp
cwtl
mov
add
xchg
jle
xchg
int
push
cltd
pop
xchg
sub
pop
ljmp
repz
jl
or
sahf
in
fidivl
imul
sbb
adc
inc
nop
int3
push
push
cmpsb
movsb
pushf
loope
sub
hlt
add
lret
icebp
inc
inc
jno
mov
mov
inc
xchg
and
dec
jl
sbbb
data16
pushf
clc
add
and
lahf
push
enter
out
mov
movlps
sbb
jne
repnz
or
xor
adc
mov
outsb
cmp
or
jns
mov
mov
mov
cmpsb
scas
mov
sbbb
xchg
lods
push
daa
movsb
mov
xor
jb
mov
mov
lcall
sbb
jne
jp
ljmp
fs
outsl
or
push
jecxz
cmp
mov
inc
in
loopne
ja
or
scas
pop
sub
test
call
sbb
hlt
pop
and
adc
jp
aad
jo
insb
cmc
movl
imul
push
adc
pop
aam
dec
andb
call
mov
dec
fs
sub
movsb
loope
rorl
negb
push
negl
jl
pusha
or
je
jae
repz
xchg
inc
xchg
mov
clc
addr16
test
int
ret
out
mov
out
push
or
xchg
lock
shlb
inc
lock
clc
iret
fildll
jne
jp
adcb
ja
or
ret
pop
cmc
scas
add
add
cld
push
mov
xchg
aad
pop
sub
fistps
adc
aam
sub
mov
lea
or
pop
push
cmp
sub
xor
sahf
scas
or
loopne
jle
or
sub
push
mov
push
movsb
and
test
jns
mov
dec
in
sbb
repz
addr16
mov
mov
xlat
push
pop
icebp
pop
xchg
fbstp
std
sbb
dec
push
pop
repz
sub
mov
aas
mov
mov
and
gs
push
push
pop
xlat
mov
and
lcall
popf
pop
xor
sbb
popf
aaa
add
es
pusha
addr16
filds
add
fisubrs
jg
xchg
jne
ret
rol
mov
xlat
mov
lcall
addb
fwait
adc
xor
cs
aas
icebp
rcrb
inc
push
ljmp
xchg
cld
and
fwait
xor
cltd
mov
movsb
xchg
lret
push
in
movsb
jns
cmp
aad
divl
mov
leave
push
add
cmpsb
lock
and
sti
inc
out
pushf
adc
cmp
mov
aaa
or
in
stos
adc
sub
pop
mov
cmc
sub
arpl
jae
aad
scas
enter
lods
xchg
cs
xchg
leave
push
sti
adc
pop
int
pop
fcmovne
bound
mov
pop
inc
lods
add
xchg
push
and
inc
mov
push
nop
out
adc
test
pop
int
addb
add
xor
cmp
mov
xor
into
jae
lahf
loop
mov
addr16
push
inc
in
dec
inc
push
push
in
push
push
rcrl
call
sub
movsl
fs
sub
out
dec
xlat
sub
xor
xor
mov
mul
cmp
add
mov
ja
cwtl
jbe
sub
or
pusha
arpl
push
push
dec
lret
pop
and
cmp
cmpsl
sub
sub
dec
outsb
inc
xor
dec
push
fs
je
jns
cmp
cwtl
add
and
push
fists
jmp
sub
out
test
mov
mov
es
adc
add
adc
xchg
add
jbe
aaa
mov
movsb
dec
inc
adc
in
out
inc
test
lds
jge
fidivl
jns
cmp
cmp
mov
stos
adc
push
and
xor
test
push
call
movsb
dec
cmp
arpl
out
mov
subb
jae
cltd
in
mov
loop
or
fs
jnp
dec
mov
or
rcll
pop
icebp
enter
cmc
addr16
addr16
mov
or
test
add
mov
icebp
ret
inc
mov
pop
loope
sbbb
orb
sub
sarb
xchg
lds
xchg
fiadds
xor
push
dec
xchg
hlt
enter
and
out
in
sti
xchg
stos
mov
icebp
loope
sub
dec
push
xorl
push
push
js
in
das
mov
mov
sub
adc
and
fistpl
mov
stos
lret
dec
ret
push
jge
jne
pop
divl
ret
repnz
adc
fdivs
sub
add
loop
cmpl
sbb
es
or
int
ljmp
add
mulb
out
ljmp
xor
icebp
sbb
fisubrs
adcb
shlb
dec
ss
imul
cmp
sub
addr16
les
lds
filds
inc
stos
in
bound
popa
xlat
enter
and
mov
add
inc
ficoml
jns
mov
mov
gs
bound
aad
stc
sbb
adc
add
iret
pop
stos
jne
add
sub
es
mov
inc
xor
int
inc
bnd
mull
lods
outsb
sbb
mov
adc
cltd
jnp
gs
frstpm(287
std
orl
push
imul
mov
int
mov
cli
iret
mov
push
dec
pop
shl
xchg
push
jbe,pt
repnz
jmp
push
xchg
int
push
test
inc
xlat
jne
xlat
rcrb
mov
xchg
call
orl
sbb
fwait
push
dec
mov
stc
mov
jbe
lahf
sub
mov
shrl
sub
xchg
pop
xchg
xor
fsubl
leave
movsb
push
lcall
cmpb
les
subl
cmpsb
mov
popf
addr16
pop
leave
ljmp
or
adc
add
loopne
call
xchg
pusha
dec
sbb
out
and
fs
ljmp
cmp
cld
xchg
iret
mov
add
and
adc
add
mov
loop
scas
inc
xor
fmuls
jae
icebp
mov
jl
and
fcoms
data16
mov
pop
mov
mov
pop
add
or
lods
pop
jnp
push
mov
xor
insb
push
notb
sub
aam
cmp
pop
adc
cli
popf
ss
cmp
xchg
xchg
mov
ss
mov
popa
scas
enter
cmp
vphsubbw
xchg
cmpsl
cmp
int3
and
test
subb
mov
xchg
test
jno
movsb
inc
add
adc
sub
movsb
xor
or
xor
jno
or
jmp
icebp
sub
inc
mov
sbb
push
cmpsl
mov
mov
or
sbb
frstor
stc
and
insl
in
push
cltd
sbb
pop
push
push
cmp
mov
lods
incb
push
or
roll
dec
int3
fcoms
out
retw
mov
in
cltd
dec
cwtl
add
movaps
adc
sub
stos
test
popf
mov
push
les
sbb
jmp
das
or
pop
dec
adc
outsl
jp
mulps
lret
icebp
jae
dec
pop
push
cld
call
mov
fdivs
mov
sub
adc
sub
andl
push
mov
call
lods
mov
scas
pushf
pop
test
lods
pop
mov
pusha
jb
xchg
dec
cld
hlt
aas
sub
jmp
sbb
ds
pop
xchg
sbb
pop
mov
push
gs
cld
js
sub
cmpl
and
adcl
scas
push
cmp
sub
ljmp
lcall
jl
push
mul
iret
cmp
xchg
je
mov
in
jo
mov
pop
test
cmp
or
aam
add
nop
test
and
call
shl
add
jb
mov
in
imul
es
cmp
add
call
leave
fidivrl
scas
testl
mov
and
ret
mull
jl
popf
push
scas
jae
out
or
mov
mov
clc
xchg
mov
push
mov
dec
add
jo
xor
xchg
incb
mov
pop
mov
xchg
mov
jno,pn
inc
mov
out
pop
hlt
jae
push
je
jne
cmpsl
pusha
mov
sbb
test
jle
jp
lods
lock
std
cmc
fldt
mov
and
push
and
sbb
loopne
out
popa
adc
lea
imul
lret
jecxz
xchg
push
xchg
jge
cmp
lods
cld
ds
insb
hlt
fsub
hlt
hlt
mov
sbb
jb
test
cmp
repz
add
cld
testl
jo
cmp
xor
adc
sub
dec
pop
push
call
lahf
add
sub
mov
sbb
xlat
add
test
ffree
push
dec
inc
out
lret
fbstp
pop
fnsave
cmpsl
ret
subl
movsb
push
movl
lock
das
imul
mov
inc
test
push
or
cmp
push
les
dec
adc
aad
and
dec
adcb
call
jg
ret
fcompl
push
in
inc
iret
jnp
in
and
pusha
je
sbb
aaa
inc
cltd
push
iret
add
cmp
ret
stos
js
mov
cltd
scas
fdivrl
xor
mov
lcall
pause
dec
mov
test
jg
and
push
mov
lret
shrl
dec
xchg
cmp
repnz
or
inc
and
mov
es
sub
sbbb
in
adc
jbe
xchg
cs
int3
jl
subb
mov
pop
iret
xchg
sub
cs
stc
sbbl
jmp
das
ret
sub
into
rep
pop
inc
insb
add
mov
lcall
adc
es
testl
test
add
ja
outsb
out
cmp
sub
pop
sbb
dec
scas
rcll
mov
jg
push
stc
cmp
ret
enter
aas
ds
xchg
xchg
subl
cmc
adc
fistpll
mov
adc
out
fs
mov
xchg
lea
in
mov
scas
imul
out
movsl
jb
in
push
and
fcmovne
fdivrp
adc
xor
add
pop
xchg
jns
mov
pop
mov
push
scas
sub
mov
mov
addl
into
sysret
jg
stos
shl
xor
fcmovnbe
add
adc
pop
mov
cmpl
pcmpeqb
out
jnp
and
cli
cmp
gs
and
bound
or
mov
hlt
sbb
push
xchg
jge
sti
push
roll
mov
push
adc
ss
shll
and
push
mov
sub
sbb
ljmp
das
cmp
and
or
sub
lds
mov
mov
push
jl
jp
push
push
dec
mov
pop
ret
jmp
jecxz
add
xor
push
test
shll
imul
int3
insb
subb
sub
fcompp
mov
fisttpll
ret
out
lods
adc
adc
incb
fdivl
xchg
sub
add
sbb
cmp
adc
xor
inc
sbb
out
add
stc
jo
aas
fsubp
mov
imull
adc
popf
push
arpl
cmp
xlat
callw
adc
or
pop
xchg
add
cltd
sbb
xchg
fildl
hlt
sbb
dec
pop
xor
lret
mov
or
stos
mov
xor
hlt
mov
in
stc
mov
aaa
pushf
cmpsb
mov
jmp
xorl
adc
and
aam
jmp
cmp
jae
inc
fst
enter
fnstsw
adc
sub
dec
fildll
adc
add
rorl
addr16
and
mov
fstl
xor
add
add
mov
push
or
jg
mov
push
mov
mov
cmpsl
scas
xchg
pop
pop
call
jecxz
or
rorl
daa
adc
xor
and
dec
ret
dec
add
push
cmp
scas
frstor
loopne
outsb
jne
movsb
imul
int
push
scas
mull
addl
test
sub
jae
add
ja
push
or
daa
test
out
and
adc
adc
mov
pusha
sti
ret
int3
cmp
mov
sub
dec
fwait
mov
loope
mov
push
orb
stc
xchg
mov
orl
add
or
divl
sub
add
sbb
add
cmp
dec
ret
jnp
cmp
push
fstps
sbb
mov
ror
icebp
mov
lret
subb
cwtl
stc
pop
pusha
popa
das
mov
lcall
test
sbb
lods
fidivrl
ret
mov
xlat
sar
sbb
repz
jl
inc
jnp
outsb
sub
leavew
sub
loopne
pop
cld
mov
xor
cmp
jl
jae
xor
enter
popf
stc
sub
mov
jge
lret
movsb
ds
push
mov
pop
mov
lds
mov
add
cli
stos
ds
mov
pop
loope
lods
subl
mov
nop
in
dec
xchg
mov
test
andb
push
pop
mov
xchg
pop
inc
xchg
hlt
mov
hlt
adc
sub
dec
leave
jae
mov
stos
mov
sbb
adc
sbb
mov
cs
pop
popf
leave
int3
mov
int3
push
cmp
xor
jae
and
mov
in
pop
cmpb
nop
test
jle
call
push
lods
pop
rclb
mov
jb
sti
icebp
hlt
or
fldenv
mov
or
mulb
test
in
shr
sbb
shl
pop
mov
add
jg
jne
popf
insb
out
inc
jg
pop
push
and
pushf
sti
lcall
push
dec
mov
xchg
push
out
inc
dec
out
fwait
pop
cwtl
repz
cwtl
sub
inc
popf
mov
out
out
fisttpll
dec
xchg
inc
in
loopne
ret
pop
repz
mulb
inc
testb
fsqrt
inc
or
push
cmp
stos
jl
mov
dec
inc
adc
test
loope
out
mov
mov
mov
movb
test
pop
pop
mov
lods
dec
inc
stos
dec
adc
in
push
dec
xchg
add
lahf
pop
cmp
mov
pop
mov
dec
stos
mov
aam
mov
xor
in
cli
ret
lock
xlat
ret
push
sbb
xchg
sub
mov
jb
mov
adc
fcomps
ds
cltd
and
mov
pushf
dec
rorb
mov
je
dec
sub
icebp
jae
cli
inc
mov
xchg
call
in
out
sti
jp
dec
roll
fisubrl
cld
xchg
into
in
inc
sbb
sub
push
xor
mov
jo
std
dec
jl
pop
cwtl
pushf
push
xlat
jmp
js
push
ljmp
imul
push
push
test
cs
dec
orb
push
push
nop
xor
and
jmp
mov
xchg
cld
popf
inc
and
xchg
cmpsb
pop
mov
emms
out
rcrl
in
push
or
inc
inc
push
cmp
ret
fs
sbb
xchg
incl
xchg
adc
in
xchg
les
mov
js
jl
inc
rcll
mov
daa
jne
adc
sti
cli
push
rolb
push
dec
pop
rcll
sarl
dec
push
daa
push
sbb
add
jb
clc
lahf
mov
shl
andl
popf
or
jnp
dec
or
or
hlt
sarb
sbb
push
imul
testb
pop
dec
imul
adc
ds
mov
pop
imul
divb
lcall
pop
jo
in
dec
sub
mov
xchg
call
daa
shlb
pushf
int3
ljmp
pop
insl
pop
inc
bound
call
mov
inc
aas
imul
stc
adc
scas
call
mov
insl
sbb
add
or
test
imul
cmp
mov
xchg
sub
int
xor
es
fbld
pop
scas
cmp
cli
mov
xchg
not
repnz
add
mov
cltd
xchg
lods
pop
imul
adc
inc
mov
cmp
fimull
mov
les
and
lods
dec
fucomip
add
xchg
inc
movsl
out
cmp
mov
repnz
inc
inc
sub
adc
int3
and
xor
insb
xor
mov
mov
loop
sarl
adc
xor
movsb
stos
jmp
sub
jle
and
mov
test
imul
mov
imul
imul
es
cmp
aaa
fdivrs
movsl
mov
push
cwtl
rorl
xchg
std
mov
ljmp
inc
cmc
inc
pusha
mov
jnp
ffreep
and
sarb
push
push
adcb
dec
cld
aam
mov
int3
repz
adc
add
adc
lds
cmp
shlb
mov
sti
cltd
sub
test
pushf
cmpsb
xchg
clc
icebp
xchg
mov
push
loope
leave
aad
or
cli
test
xchg
outsb
pusha
inc
push
cmpl
xlat
pop
cmp
lret
push
cs
adc
mov
orl
jae
xchg
jo
xchg
xchg
and
jno
push
cmp
pop
icebp
clc
ficoms
sbb
or
pop
cmp
adc
inc
add
aaa
or
pop
incl
sub
push
andps
adc
cmc
icebp
push
push
pop
adc
mov
inc
jb
fwait
fwait
in
call
or
cwtl
lahf
dec
jne
cmp
pop
or
stos
xchg
movsb
out
inc
mov
mov
mov
mov
loop
in
pop
sub
dec
pop
std
jle
adc
cltd
orl
sub
inc
xchg
xlat
shl
xchg
call
push
test
nop
pop
push
int
rorb
fbstp
mov
pop
xchg
push
nop
insl
jge
sbb
adc
les
push
sub
inc
push
push
cvtps2pd
jnp
or
lods
pushf
lahf
adc
into
stc
in
or
js
inc
inc
shlb
fsubl
out
movsb
xor
cmpsl
xchg
push
fwait
xlat
push
xchg
mov
sub
and
add
int3
cwtl
pop
pop
in
pop
fwait
clc
sbb
call
sti
jl
cmp
or
stos
adc
push
cwtl
mov
jnp
rcr
lret
adc
ja
cmp
cld
xchg
dec
inc
jmp
pop
cmp
lea
das
gs
push
sub
icebp
inc
hlt
dec
ret
pop
nop
and
cmpsb
adc
insl
decl
fdivrs
mov
loop
inc
sub
dec
lock
adc
arpl
jmp
fs
adc
outsb
inc
sub
mov
or
xchg
ljmp
push
add
sub
out
or
jb
jns
and
pop
push
xchg
mov
push
xor
pushf
push
adc
mov
add
dec
scas
inc
shrb
add
pop
xchg
xor
jbe
inc
inc
popf
cmp
int
orb
in
out
and
cmpsb
push
sbb
pop
int3
lds
clc
mov
jle
cmp
inc
sub
lods
sbb
rcrl
pop
ljmp
es
mov
aas
xor
adc
adc
lcall
clc
call
sbb
cmp
data16
xchg
xlat
cmp
les
mov
pop
mov
mov
sbb
out
addr16
fistps
int3
cmp
ret
fsubs
cld
in
jne
cld
loopne
xchg
insb
repz
dec
in
mov
into
loopne
push
jns
xor
adc
mov
xor
packssdw
mov
pop
push
or
outsl
repnz
pop
fildl
add
mov
andb
inc
fisubrl
roll
or
add
sbb
lods
repnz
fwait
inc
sar
sti
dec
or
imul
or
int
inc
inc
cli
shll
hlt
imul
sbb
insb
sub
or
pop
fsubp
add
loop
fldt
push
fs
and
rorl
or
mov
iret
testb
ret
neg
or
adc
inc
cld
push
and
stos
xor
loopne
hlt
dec
pushf
cmc
rcll
int3
out
mov
dec
push
jge
jecxz
int
xchg
cmp
pop
lea
daa
lret
jl
out
xchg
xchg
sahf
push
iret
mov
or
dec
nop
xchg
js
subb
mov
test
cmpb
jbe
and
dec
cltd
add
jbe
jns
pusha
mov
in
jge
xchg
pop
sbb
jmp
enter
in
xchg
popl
dec
and
or
stos
cmc
xor
dec
jbe
push
inc
mov
ljmp
std
outsb
cmp
div
es
sub
icebp
dec
fwait
test
and
sub
movsb
dec
mov
inc
fbld
pop
jae
int3
and
push
rorb
test
test
rol
push
mov
je
movsl
jnp
push
adc
jo
ret
fistpl
js
inc
outsb
outsb
sbb
test
pop
dec
fisubrs
pop
jle
sarb
es
cmpsl
das
lea
mov
outsb
pop
push
sub
adc
pop
jnp
jo
dec
mov
jge
jg
es
cwtl
in
add
push
pop
xchg
cmp
fimuls
dec
shlb
sbb
mov
jecxz
sub
add
xor
sub
mov
mov
mov
inc
jbe
xchg
lods
inc
xor
cli
mov
fldt
push
enter
sbb
das
add
xchg
pop
inc
stos
outsb
out
push
dec
lcall
inc
cltd
xchg
cli
mov
clc
xor
push
stc
pop
xchg
dec
hlt
shrl
add
push
iret
xor
cmp
adc
sub
test
sub
jo
dec
cld
imul
mov
icebp
lcall
cmp
and
dec
mov
mov
movsb
das
ret
repnz
and
inc
mov
xchg
lcall
mov
add
push
and
and
outsl
lcall
pushf
jnp
jecxz
inc
ret
das
dec
mov
into
data16
cltd
cwtl
xor
xchg
jns
jo
push
mov
mov
mov
jne
fdivl
dec
mov
imul
stos
push
iret
pop
movsb
mov
leave
adc
pop
out
mov
fs
mov
lds
push
cltd
or
test
push
and
mov
sub
sbb
loope
mov
jl
add
mov
cwtl
sub
stos
les
or
ja
jae
shll
sub
leave
inc
xor
frstor
mov
movsl
fstp
daa
mov
pushf
adc
fdivrs
xor
enter
shlb
rcl
xor
aad
popa
pop
jge
pushf
and
xchg
aam
and
mov
lret
aas
out
stos
or
lock
mov
inc
push
das
out
mov
xor
dec
pop
mov
movsl
adc
mov
inc
test
xchg
cmp
xor
pop
cltd
inc
cmpsl
daa
sub
lock
mov
sbb
ja
sbb
cltd
xlat
mov
xor
icebp
and
mov
lods
cltd
sub
and
xchg
jle
xchg
push
add
loop
out
fcmovnbe
es
jne
mov
mov
pop
dec
out
cmpsl
cmpsb
arpl
into
mov
xchg
gs
mov
cmp
xor
sahf
in
cmp
cmp
xchg
sbbb
shlb
inc
rcr
ret
outsb
les
test
sub
cli
fidivs
cmpsb
notl
mov
cmpsl
xor
xor
ret
push
jb
inc
cmp
xor
or
hlt
add
in
dec
cmp
lcall
or
rcrl
sbb
fs
andb
mov
enter
mov
pop
cmpsb
test
pop
cmc
push
push
sbb
mov
inc
mov
sbb
aad
ret
nop
pop
movsl
int
andb
hlt
jbe
test
movsl
push
cmp
sahf
in
aam
xchg
ret
or
scas
pop
or
mov
push
jne
sub
lahf
xor
or
aas
mov
push
mov
dec
or
xlat
push
and
lret
cmp
xchg
push
cwtl
sub
hlt
jae
and
lret
xor
movsl
sbb
inc
jle
insb
mov
dec
inc
xor
mov
cmp
dec
mov
jg
sub
rorl
jmp
lods
push
hlt
cmp
push
adc
jmp
addr16
stc
stos
dec
add
mov
adc
loopne
inc
cmovle
imul
push
and
roll
mov
mov
jne
arpl
fwait
dec
adc
sub
xchg
push
pusha
xor
nop
pop
in
push
mov
adc
lret
in
cpuid
mov
mov
repnz
cmp
or
inc
rcll
mov
and
mov
jl
popf
xchg
fdivrl
hlt
daa
sub
lcall
xchg
sbb
in
inc
cmp
dec
hlt
cld
es
mov
sbb
lcall
push
push
adc
aaa
sbb
mov
movb
nop
imul
jge
xor
lods
dec
xor
jg
jecxz
adc
decb
cli
movsl
push
fisubs
mov
lea
ficompl
lods
mov
cmp
cwtl
pop
sbb
dec
xor
negb
incb
push
push
dec
mov
pop
cwtl
mov
test
push
repz
cmpsl
int3
popf
and
and
and
aas
mov
packssdw
sub
iret
xchg
pop
in
sub
sub
cmc
cltd
mov
inc
stc
out
jbe
loopne
mov
adc
sbb
sub
sahf
out
xor
pop
shrb
pop
leave
sub
pop
cmpsl
cmpl
adc
out
xor
pop
cmp
shll
mov
outsl
or
insb
call
movsb
mov
clc
mov
stos
inc
xchg
xchg
outsl
daa
js
xor
lret
enter
scas
push
out
das
xlat
int3
rcr
mov
xor
pushf
mull
stc
xchg
xchg
mov
in
js
subl
ret
and
xchg
insb
cmpsl
mov
mov
pop
cltd
mov
mov
add
pop
jge
add
dec
outsb
sbb
pop
xor
inc
add
adc
cmp
xlat
insl
pop
aas
xor
aaa
js
shll
xlat
arpl
decb
pop
cmpsl
clc
mov
xor
imul
push
add
cmpsl
gs
int3
ret
cmp
push
cli
inc
add
shl
xchg
push
rep
sbb
shrl
inc
call
fnsave
pop
push
jecxz
test
bound
jne
int3
daa
mov
mov
add
jne
adc
pop
mov
imul
sti
cmp
fldl
test
xchg
add
clc
xchg
mov
mov
jecxz
mov
dec
mov
cli
call
add
ja
xchg
arpl
outsb
or
mov
sub
xor
pusha
jmp
iret
sub
and
lahf
fcoml
dec
jae
xor
dec
jno
or
cld
sbb
popa
fwait
notb
sbb
cmp
arpl
je
sub
dec
fcoml
movsb
mov
dec
mov
jp
push
popa
in
insl
add
test
dec
push
push
int
jne
lea
bound
iret
jae
mov
mov
fimuls
mov
sub
clc
lods
in
jmp
cmpsb
pop
ljmp
int
hlt
jno
cmpsb
mov
pop
cmp
cmp
jae
and
inc
xchg
daa
stc
mov
jge
sub
add
mov
scas
out
or
and
bound
mov
push
testl
xchg
pop
pop
addb
push
dec
in
xlat
sbb
cmp
push
push
push
nop
dec
cmp
or
mov
insl
inc
dec
push
xchg
rorb
adc
add
dec
xor
mov
mov
pop
xchg
rcll
push
es
stc
cmpsb
cmp
xchg
cmpl
ficomps
sahf
movsl
xchg
dec
sbb
int
dec
mov
jle
lahf
sub
push
clc
mov
sbb
jg
out
xor
ret
into
mov
scas
mov
fistps
into
mov
pop
mov
dec
cmp
pusha
in
and
dec
mov
inc
divb
in
mov
mov
mov
test
pop
inc
sbb
push
inc
pop
bound
mov
fstl
ficompl
cmpl
mov
sbbb
mov
les
pop
loop
dec
sub
stos
out
dec
mov
in
stos
jns
or
cmp
ja
pop
jl
imul
insb
aas
cmp
leave
lods
pop
pushl
add
shll
mov
imul
mov
xchg
pusha
mov
das
dec
dec
pop
push
dec
jnp
movsb
ja
test
and
popf
ret
rolb
pop
int
mov
std
jmp
pop
lret
mov
xchg
mov
aad
mov
in
push
mov
push
arpl
scas
fisubrs
int
cli
ds
lea
imul
aaa
gs
mull
mov
jecxz
mov
cmp
pop
xchg
out
rorl
outsb
and
rol
push
inc
je
cmp
and
popf
lret
cmpsl
dec
cmp
push
jl
mov
outsb
inc
inc
insl
cmc
adc
fsubrl
imul
add
push
and
mov
aam
fs
popf
movl
int
movsb
pop
ss
sbb
lock
fidivrs
aaa
mov
dec
and
xor
inc
mov
lea
xchg
int
add
sbb
push
and
inc
shl
pop
aaa
mov
add
pop
std
xor
int
xor
enter
xchg
out
or
addr16
mov
or
leave
rcll
fstps
xchg
pop
mov
dec
subl
shl
adc
call
lahf
sub
mov
int
adc
ss
inc
sub
xor
icebp
pop
sbb
cmp
cltd
add
stc
add
mov
jns
mov
je
cmp
xor
dec
int
jp
sub
jge
test
mov
ror
cmp
movsb
jmp
mov
in
pop
add
mov
call
push
or
xor
dec
mov
lods
out
lea
mov
sub
rcll
popf
insb
inc
mov
loopne
sbb
add
ljmp
jge
xchg
rcll
test
popa
loope
jle
jp
jl
pushf
lea
int3
or
jge
sti
out
cmp
push
mov
sub
cmp
mov
jmp
fisubl
sbb
xchg
lods
adcb
adc
fldz
xlat
decl
sbb
jae
das
ss
int3
test
mov
insb
imul
test
mov
add
or
stc
hlt
call
ja
pusha
cmp
dec
push
push
and
pop
test
repz
add
stos
mov
aaa
rcrl
push
ljmp
ss
mov
sub
add
push
out
cmp
xchg
sub
push
sub
lods
lret
adc
sub
sbb
jmp
xchg
adcl
aad
les
mov
subb
scas
push
insb
in
cmpsb
movsb
add
cmp
mov
shlb
lock
and
pop
arpl
dec
and
and
add
mov
jle
cmc
lahf
in
cmp
lret
sbb
xchg
lods
in
jnp
pusha
aaa
movsb
cwtl
js
fadds
xchg
arpl
fidivrs
sbb
mov
stos
jp
aaa
and
daa
pop
xchg
insl
xchg
or
pop
fs
imul
scas
rclb
adc
push
push
fnstcw
pop
cli
push
jbe
pop
sbb
adc
aaa
xchg
xor
scas
push
daa
shlb
aam
mov
cmpsb
add
shl
push
xchg
jne
sbb
aam
hlt
sahf
shr
jp
sbb
and
shrb
fidivrs
cmp
mov
imul
or
mov
cmp
inc
hlt
mov
clc
stos
push
testl
repnz
mov
cmc
pushf
mov
add
add
fs
add
sti
in
mov
out
xlat
outsl
push
sbb
popf
sbb
jmp
insl
aas
jmp
enter
inc
pop
loope
pop
sub
daa
test
aas
xor
movsl
inc
sarb
pop
orb
sbb
out
sub
subb
adc
cmp
xchg
repnz
scas
into
fsubs
push
cwtl
inc
xchg
mov
adc
mov
insl
les
xorl
pushaw
movsbl
push
push
in
and
xchg
stc
test
fdivrs
and
mov
cmp
sbb
cld
pop
icebp
mov
cmpsl
push
adc
int3
dec
push
mov
fidivs
ds
out
pop
nop
dec
push
bound
jge
jecxz
dec
in
mov
pop
pop
hlt
rclb
sub
and
adc
push
mov
addr16
enter
or
and
pop
sub
cmc
repnz
mov
fnstcw
imul
mov
popa
and
mov
icebp
call
sbb
xchg
shlb
mov
and
mov
pop
sbbb
dec
push
ja
roll
inc
aam
add
or
xchg
fidivrs
pop
add
and
push
dec
dec
mov
dec
icebp
outsb
ficoml
cmp
ja
jg
cmpl
movsb
mov
sub
pop
jge
sub
xorl
aas
sbb
lahf
jb
sbb
inc
pop
mov
sbb
fstl
stc
popa
or
fbstp
or
negb
addr16
push
dec
jno
mov
sahf
pop
pop
xchg
pop
jle
imul
leave
stc
jae
out
bound
cltd
pushf
std
inc
pop
or
pop
xchg
mov
sbbl
mov
cld
icebp
mov
jnp
jmp
mov
push
scas
inc
inc
pop
cld
arpl
mov
mov
add
out
sbb
hlt
jb
cli
adc
aas
push
jmp
mov
xchg
lcall
xchg
sahf
cmc
in
jno
push
inc
out
jnp
or
dec
mov
outsb
cmpsb
mov
pop
jne
jmp
and
icebp
inc
pop
or
aad
mov
mov
int
and
inc
lahf
pop
ja
icebp
xchg
push
addr16
lods
lods
js
repnz
xchg
test
pop
mov
ret
incb
push
jecxz
jle
adc
cmp
in
int3
lods
std
lock
add
mov
shrb
lods
mov
add
int
cmp
mov
stc
adc
call
sbb
stos
mov
cs
jl
push
lcall
cli
ja
xchg
mov
and
repnz
mov
mov
lods
xchg
push
jmp
push
xchg
jle
call
mov
popa
mov
je
or
and
repnz
jp
aas
nop
and
xchg
dec
ds
pop
jae
mov
xchg
stc
jae
push
ds
fmul
icebp
test
lock
fiaddl
fcomp
cmp
repz
dec
loope
addr16
bound
dec
dec
push
sub
imul
flds
adc
jmp
or
lret
add
cwtl
jns
mov
xchg
ds
out
sub
or
lds
xor
sbb
cmp
fidivrl
mov
insl
jl
rcll
in
in
arpl
aas
cmp
push
iret
pop
xchg
mov
sub
mov
in
cld
or
out
repnz
dec
push
adc
xor
lods
jp
dec
pop
adc
testl
cmpsb
sub
mov
inc
xor
mov
pop
mov
gs
stos
das
out
insw
xchg
les
mov
fldenv
jo
pop
fsubl
inc
daa
test
mov
out
sarb
ffreep
lcall
mov
inc
pushf
mov
aaa
mov
lods
dec
and
mov
sbb
je
push
in
lods
push
xlat
lret
sbb
or
std
jns
jnp
cmpsl
push
pop
nop
aad
add
push
in
stos
xchg
xchg
pop
push
cli
push
sub
shlb
jne
movsl
sub
mov
cltd
mov
jmp
or
adc
or
aad
mov
push
pop
mov
lea
loope
or
push
shll
outsb
mov
xchg
fdivrl
fcomps
xor
cmpsb
in
in
cmpsb
sbb
or
in
xchg
ss
jae
dec
add
mov
inc
adc
sub
inc
dec
mov
incl
push
bound
jno
dec
outsl
push
inc
adc
gs
bound
std
inc
and
mov
fwait
enter
insl
dec
mov
idivl
lock
hlt
loopne
iret
cmc
shlb
cvtps2pi
fisttpl
dec
arpl
mov
or
jbe
fstl
shlb
fucom
out
sbb
add
repnz
lods
aad
and
jo
lods
add
lret
sub
cmpsb
dec
and
jl
pop
xor
and
jnp
cmp
in
mov
add
mov
mov
fwait
inc
cmpb
and
shlb
pop
cmc
sbb
ret
in
cmpb
out
xchg
pop
cmp
xor
repnz
add
or
jbe
mov
push
lcall
outsl
lods
xchg
push
mov
adc
dec
dec
jns,pt
sarb
mov
stos
jmp
push
or
cli
hlt
jbe
push
dec
mov
pop
in
mov
bts
xor
and
push
push
sbb
xlat
fstpl
inc
movsl
in
test
xor
jb
add
test
sbb
mov
fs
mov
xchg
mov
and
imul
sbb
adc
jnp
stc
mov
dec
push
dec
cmc
mov
xor
lds
mov
ret
popf
and
xor
jmp
fimull
or
mov
pop
mov
xchg
lods
popa
cmc
mov
mov
mov
xchg
jecxz
lods
pmaxub
jae
mov
fs
or
fst
mov
in
jp
pop
roll
enter
fsubrs
dec
dec
mov
push
into
push
incb
fidivrs
pop
or
lods
je
sbb
mov
lods
addr16
cmp
popl
sub
sub
or
inc
xor
sahf
mov
pop
mov
push
mov
cwtl
add
shrd
lret
dec
and
sbb
mov
pop
sub
mov
ficoml
adc
cltd
or
xchg
sbb
daa
xchg
mov
xchg
push
jno
sbb
or
call
cmc
outsb
cli
ficomps
mov
nop
mov
adc
mov
out
cwtl
xchg
lret
mov
xor
or
push
imul
sub
pushf
arpl
or
aam
xchg
xor
mov
call
sbb
adc
ret
mov
bsf
je
adc
fcomps
dec
adc
js
inc
addr16
cmp
inc
cwtl
pop
mov
mov
fistps
test
push
dec
sub
sbb
lahf
ds
je
xor
mov
inc
mov
rcrl
ret
xor
aad
mov
divl
js
sbb
mov
adc
pusha
call
add
loop
ds
xchg
lds
mov
jno
jno
cltd
pop
imul
sbb
pop
negb
test
outsl
cmc
leave
shlb
mov
mov
and
push
push
dec
xchg
sub
jl
testl
in
sbb
mov
mov
pop
test
xchg
sub
jbe
dec
test
sub
xchg
pop
outsl
adc
cmpsl
outsl
and
pop
cwtl
scas
xor
mov
js
mov
rcr
xor
xchg
pop
out
mov
cmc
lds
xchg
add
add
data16
and
imul
out
sbb
bound
fistpl
in
adc
add
push
push
stos
xchg
gs
ror
je
pop
stos
and
jge
sbb
xor
pop
inc
and
imul
adc
and
repnz
scas
push
mov
adc
mov
pusha
test
clc
mov
push
push
rolb
or
js
jecxz
or
jge
insl
mov
and
xchg
aad
movsl
movsb
jne
lock
adc
pop
pop
mov
mov
movsl
or
std
add
ds
cld
inc
add
sub
fwait
popl
aam
mov
inc
mov
popa
push
filds
aad
pop
dec
mov
cmp
in
push
inc
push
pop
xor
pusha
mov
push
loopne
clc
xchg
stos
dec
outsb
xchg
inc
cmc
add
xor
insl
jnp
mov
stos
out
xchg
clc
xor
push
lret
xchg
push
cwtl
and
push
cmpsb
aas
stos
xor
and
in
ret
dec
dec
mov
sub
push
xchg
imul
sbb
cwtl
cmpsl
sub
std
jne
pop
fstl
dec
lcall
and
adc
pop
fs
push
ja
jl
or
add
adc
adc
xor
out
pusha
clc
movsb
in
sub
mov
inc
xchg
cmpsl
mov
hlt
or
rclb
scas
lea
jns
std
add
mov
add
cmp
sti
xchg
fcmovnbe
shl
pop
push
sahf
pop
sti
pop
fists
sub
or
hlt
push
outsb
dec
pop
push
xor
in
inc
je
mov
sti
inc
stos
pop
dec
ret
cli
out
cmp
xchg
xchg
popf
inc
xchg
jns
dec
negb
push
aam
enter
orl
xor
ret
lods
or
pop
fidivrl
mov
out
ret
sahf
push
mov
andl
in
test
xchg
outsb
insb
insl
push
push
insl
sbb
xor
cmp
xchg
or
btr
insb
pop
xor
divl
addl
xchg
mov
aam
and
fcmovbe
mov
xlat
in
xchg
and
mov
push
ret
pop
lods
sar
cwtl
in
xchg
sub
pop
add
cwtl
out
add
test
inc
pusha
test
mov
pop
lods
shr
xchg
adc
orb
nop
xchg
jp
sub
fstpt
adc
ret
xlat
and
mov
dec
adc
push
adc
mov
xchg
or
fs
mov
xor
popf
adc
scas
xor
jle
pop
aad
add
pop
fs
stos
mov
xor
and
xchg
jnp
push
pop
push
into
xchg
mov
loopne
test
jg
add
mov
xchg
xchg
jge
arpl
aad
mov
addb
jae
xor
adc
aad
inc
cmp
incl
inc
shrb
add
dec
and
pop
jnp
test
push
mov
mov
cltd
and
and
add
sbb
cmp
inc
lcall
mov
cli
dec
inc
mov
and
lret
stos
in
lcall
xchg
xor
or
bswap
inc
stc
push
jmp
es
jno
jns
adc
add
inc
lcall
push
fsub
arpl
adc
lock
push
xchg
clc
iret
stos
int3
arpl
leave
xor
movsl
pop
xchg
mov
adc
test
mov
sub
push
in
out
push
addl
and
in
ds
lahf
loopne
adc
mov
mov
ds
and
mov
mov
jmp
loopne
push
cmpsb
add
add
jle
mov
sahf
icebp
mov
movsb
lret
sub
cmp
sti
fmuls
or
outsb
mov
cld
and
pop
mov
jnp
call
push
outsb
cwtl
mov
xor
and
pop
push
daa
cmp
das
pop
loope
xor
loopne
sub
fstpl
dec
repz
xor
mov
or
sahf
rolb
xchg
push
add
cmp
subl
sbb
adcl
push
pop
dec
pop
fildll
pop
sub
mov
lret
orb
cmp
inc
fildll
jae
addr16
mov
movsl
xlat
jae
dec
ds
sub
lds
lods
push
in
mov
fs
push
pop
jbe
jl
test
testl
loope
sub
cmp
dec
int3
lock
add
lods
rcrb
jmp
test
pop
dec
ljmp
aad
scas
mov
jmp
je
leave
jnp
scas
lods
fwait
out
push
sbb
std
adc
into
pusha
inc
dec
jge
and
jns
and
sbb
in
push
push
sub
dec
or
jl
inc
mov
mov
jmp
scas
pop
daa
enter
inc
jnp
in
and
mov
popa
add
push
psubb
sub
xbegin
push
mov
push
jno
negl
pop
stos
out
idivl
xor
and
shl
fwait
sbbl
out
or
repz
dec
cmpsl
xlat
stc
addr16
xchg
inc
push
cwtl
inc
or
cwtl
mov
adc
mov
mov
lret
push
std
and
cmp
test
mov
iret
into
push
pusha
and
ret
and
and
inc
push
sbb
in
pop
scas
clc
cmp
fcoms
jl
mov
andl
sbb
push
push
sub
shll
pop
std
scas
push
jg
lcall
xchg
mov
mov
int3
pop
xor
test
out
xchg
xor
add
mov
cmc
imul
mov
add
adc
aas
pop
sbb
mov
mov
movsl
add
mov
pop
dec
mov
adc
mov
push
adc
ret
adc
in
mov
xorb
pop
out
inc
fstl
adc
dec
pusha
addl
pop
mov
ficompl
cwtl
sbb
insl
sub
dec
stos
adc
mov
cmp
daa
add
ss
adc
mov
xchg
cld
jp
cmp
test
lock
dec
cs
cmp
xor
inc
lea
dec
das
pop
mov
add
lods
pop
cmp
out
sbb
push
cld
jbe
stos
and
cmp
lahf
xchg
add
je
add
out
jmp
cmpsb
orb
in
sub
jo
aad
icebp
xchg
pop
inc
mov
adc
sarl
rcll
or
jmp
sbbl
nop
test
in
sahf
lret
sub
outsb
ret
sbb
dec
push
inc
loopne
sbb
jnp
fucom
cmpsb
stos
xchg
sbb
fiaddl
sbb
mov
xor
cmp
push
add
push
mov
insl
lcall
push
pushf
fstl
push
adc
iret
ret
xchg
dec
popa
xor
test
cli
push
in
test
or
js
jge
and
xchg
scas
dec
pop
mov
xor
push
popf
bound
or
mov
xor
outsb
mov
xlat
xchg
mov
enter
dec
xor
or
jno
dec
mov
test
sub
std
std
aad
inc
cmpsb
hlt
push
lods
pop
xor
add
cmp
or
pop
data16
sub
jnp
xchg
rcrb
push
push
fcomp
jmp
push
mov
add
iret
sahf
dec
dec
sbb
es
xchg
pop
out
push
push
in
and
shrl
jg
jl
jmp
or
inc
push
xchg
mov
outsb
add
dec
ja
mov
xchg
or
pop
les
loopne
repz
aam
inc
pop
lret
push
pop
add
adc
in
xor
mov
jae
fmull
mov
into
sbb
pop
xchg
pushf
push
inc
adc
pop
mov
mov
leave
push
xor
or
mov
cmp
jne
pop
hlt
adc
addb
repnz
leave
and
xchg
aas
or
mov
pop
in
test
pop
xchg
xchg
test
pop
sbbb
push
sti
cltd
adc
rcl
fs
cwtl
mov
xor
adc
iret
imul
scas
xor
stos
out
or
mov
loope
outsb
aas
mov
fstps
sub
xchg
lcall
dec
out
popf
ds
jno
stc
out
loope
sub
frstor
sti
rcrb
into
imul
ja
add
fmuls
jno
xchg
orl
and
push
js
inc
insl
add
dec
adc
popa
jmp
dec
data16
outsb
pop
cwtl
popf
out
xor
out
fcomip
xchg
mov
decb
adc
add
add
pop
outsb
xchg
ficoml
loope
cmp
and
out
xor
mov
outsl
adcb
sbb
pop
scas
int
test
jnp
scas
or
sti
mov
jmp
xchg
jo
enter
cltd
popf
pop
mov
je
cld
or
push
dec
xchg
inc
popa
push
sbb
leave
call
test
jbe
shll
pop
lods
mov
nop
sbb
loope
mov
jbe
jns
push
loop
adc
mov
add
iret
stc
ret
out
xchg
push
jl
sti
mov
bound
adc
and
cmc
ret
cwtl
loopne
imul
gs
mov
out
sub
fld
jle
ja
nop
fstpl
lcall
or
sub
arpl
pop
add
xchg
addl
xchg
and
data16
sub
loop
scas
cmp
or
push
test
das
popf
or
ljmp
sub
ud0
mov
pop
imul
and
std
dec
adcl
addr16
arpl
sub
hlt
inc
orb
cmp
loop
push
jne
jnp
mov
xor
dec
push
fstps
jle
lahf
cmp
jns
popa
xor
dec
and
sti
out
movsb
movb
dec
mov
jmp
inc
xchg
out
push
popf
push
push
pop
int3
aam
push
insl
jle
add
call
push
test
xchg
xor
pop
and
pop
or
xorl
loop
jg
movl
cmp
mov
mov
or
fstl
adc
std
ret
scas
dec
jge
pop
push
mov
mov
inc
push
cmpsl
rcl
repnz
stos
fwait
mov
mov
insb
push
mov
pusha
arpl
inc
aad
std
push
stos
imul
and
push
xchg
jl
or
or
pop
mov
mov
inc
mov
pop
daa
adc
jge
sub
fwait
xchg
stos
insl
mov
leave
call
mov
sbb
xchg
in
sar
and
jg
mov
jne
ja
pop
sub
ret
sbb
cmc
mov
into
jbe
enter
sbb
lds
sub
sti
xlat
jne
nop
xor
dec
aaa
aaa
jne
fs
fs
mov
out
lret
cld
int3
or
xor
sub
add
sbb
in
add
call
pusha
dec
mov
jae
loopne,pt
or
jle
out
adc
cmpsl
mov
lret
imul
and
fcoms
add
cli
add
lea
inc
jbe
push
mov
rcll
loopne
stos
inc
or
jnp
lods
cmpsl
int3
pop
mov
xor
and
adc
clc
lods
xor
pop
rorb
xchg
adc
sub
push
mov
inc
cli
mov
and
sar
sbb
int3
and
pop
test
lds
out
push
dec
in
sbbl
es
xor
test
or
cmc
lahf
test
inc
cmp
push
push
sbb
inc
fadds
mov
sub
cmp
mov
aas
repz
add
pusha
mov
or
or
xor
sti
cld
inc
in
movsl
mov
inc
mov
mov
out
movsl
pop
shrl
xor
in
addr16
hlt
inc
scas
push
xor
sbb
scas
mov
lcall
add
add
jp
pop
sahf
orl
cmp
fistpll
addr16
and
in
or
push
mov
cld
divb
das
lcall
dec
push
ljmp
and
adc
jp
rolb
popf
adc
mov
inc
add
loopne
stos
nop
adcl
cmp
add
outsl
test
ret
test
xor
mov
iret
pop
dec
pop
std
aad
pop
in
mov
or
icebp
sbb
aad
sub
ja
push
mov
pop
orb
popa
and
mov
jnp
les
mov
aam
outsl
test
adc
iret
roll
cltd
xchg
xchg
add
sbb
fs
shlb
push
rclb
movsl
sbb
insb
mov
xor
jge
aas
stc
sub
arpl
jmp
sbbb
fistps
cld
adc
mov
repz
push
mov
add
adcl
negb
bnd
inc
insl
pop
push
mov
push
imul
in
mov
daa
cld
sub
dec
xchg
adc
rolb
adc
test
cmpl
mov
sub
add
movsl
jno
out
rorb
enter
sub
sbbl
xchg
cmp
fwait
xchg
out
adc
in
jo
shrl
or
jp
test
or
mov
mov
jb
in
jmp
test
das
shrl
js
ret
inc
rorl
add
dec
lcall
cmc
shrl
in
ja
xlat
addr16
or
adc
dec
mov
jno
inc
outsb
sub
scas
or
dec
push
test
push
bound
repz
ljmp
dec
xchg
sub
jg
pop
stos
fwait
and
add
orb
sub
adc
mov
mov
ret
add
call
sti
cmp
mov
push
daa
jns
lods
jg
xor
jno
dec
scas
js
incb
sbb
cmp
in
outsl
cmpsl
repnz
dec
rol
cmpl
xchg
inc
scas
in
jne
xchg
popa
dec
inc
and
push
jo
sub
insl
les
sti
and
lods
jae
lods
push
mov
cmp
pop
jle
subl
mov
pop
andl
loopnew
lret
jp
roll
cmp
lret
push
mov
stc
xchg
fadds
jno
hlt
xor
jp
mov
push
ud1
xchg
std
pop
test
imul
dec
mov
jecxz
adc
loop
fstpl
inc
imul
test
sub
mov
out
xchg
mov
iret
shl
jae
inc
mov
push
lret
pop
outsl
and
lret
push
add
fstpt
cs
fnsave
mov
pop
hlt
pop
mov
sub
mov
jnp
mov
push
sbbb
inc
push
push
fmull
std
mov
int3
add
fstp
add
data16
ret
je
mov
call
rorl
mov
pop
mov
adc
adc
mov
movsl
mov
es
stos
scas
sub
dec
lcall
sub
into
dec
mov
mov
nop
mov
fwait
scas
js
and
jp
pusha
imul
cld
shl
fwait
test
movsl
mov
cltd
push
fcompl
stc
xor
push
push
mov
in
cmp
stc
or
lds
aam
arpl
mov
lea
data16
xchg
fcmovnb
dec
sub
icebp
lods
inc
imul
lahf
fmuls
in
addr16
mov
insb
xchg
cmpsb
or
jg
fldl
fmulp
mov
jb
pop
lcall
jecxz
sbb
out
fdivrp
push
or
sbb
jp
push
std
std
test
xor
adc
add
into
outsl
cmp
imul
fwait
lcall
aaa
addr16
push
xchg
xor
shl
pop
pop
inc
ds
jl
mov
pop
or
in
xlat
or
push
iretw
pop
scas
push
sbb
sbb
mov
pop
das
gs
push
push
xchg
rclb
mov
fsubs
inc
mov
push
lcall
push
pop
push
pop
jno
mov
daa
jae
shl
movb
popa
stos
test
mov
jbe
iret
push
testl
pop
daa
dec
clc
lods
call
jne
inc
add
fwait
cmpsb
mov
in
fdivrs
pop
mov
test
jp
pop
xor
pop
arpl
pop
out
incb
xor
xor
cmp
push
cmp
xchg
xor
mov
hlt
popf
divl
mov
inc
xchg
rol
fidivs
addr16
mov
inc
pop
jne
push
lea
fs
mov
das
xchg
test
pop
inc
fwait
mov
int
outsb
jmp
stos
mov
movsl
jle
xchg
dec
jle
lahf
aad
push
dec
push
dec
int
jmp
xchg
in
nop
out
daa
or
add
cmpsl
enter
xor
adc
xchg
sub
sub
outsl
inc
in
pusha
into
xchg
lds
cltd
roll
pushf
ret
out
pop
call
aaa
stc
push
mov
ror
pop
push
mov
in
and
popf
sub
mov
nop
ss
mov
mov
and
shlb
pop
scas
and
xchg
jnp
push
pop
mov
or
outsb
popa
sbb
movsb
xchg
jne
mov
sbb
and
pusha
mov
aam
or
sbb
adc
jp
shrl
or
fistps
and
pop
xchg
adcl
movsb
sub
movsb
and
and
subb
test
pop
xor
mov
mov
jno
push
mov
enter
push
mov
xor
or
stc
mov
jo
inc
cmp
fs
jb
sarl
xlat
rcr
fs
jecxz
mov
cmpsl
js
sbb
rcr
nop
cwtl
push
push
or
jecxz
mov
sub
inc
dec
mov
popf
ret
jecxz
mov
into
xor
inc
notl
std
aam
xlat
sbb
fistl
int
bound
pop
mov
xchg
push
dec
cmovnp
push
inc
xchg
repz
movl
jle
inc
jg
jae
adc
ja
jmp
stos
lods
aas
pop
mov
jns
imul
xchg
pop
addl
or
jmp
js
gs
pop
sbb
pushf
dec
arpl
pop
and
and
pop
xor
push
stc
shrl
push
notl
mov
ds
es
into
aaa
xchg
adc
and
dec
dec
inc
mov
test
icebp
inc
outsl
into
jmp
inc
popa
sub
xchg
xor
xlat
push
lahf
sti
mov
enter
outsb
push
push
dec
adc
jp
data16
lcall
mov
jo
push
xor
movsl
lock
add
addr16
sbb
mov
mov
sbb
dec
sub
sub
add
cmc
popf
push
out
add
imul
lahf
jnp
aas
popa
outsl
and
notl
sub
and
je
ljmp
int
sar
jl
iret
lds
incb
scas
lcall
repz
lret
loope
cwtl
xchg
imul
int3
popa
outsb
ds
and
hlt
jle
jo
inc
dec
xor
imul
inc
out
int3
jae
and
mov
mov
push
test
mov
mov
lcall
mov
dec
popa
dec
fstps
in
in
xor
adc
aaa
mov
into
insb
jmp
ljmp
ja
push
dec
inc
add
mov
jbe
sarl
jl
dec
fdivs
sbb
mov
fldl
mov
sub
sbb
mov
cmp
xchg
cs
pop
repnz
sub
test
sub
sahf
into
push
icebp
inc
jae,pt
mov
xor
scas
xchg
xchg
outsl
test
arpl
adc
inc
daa
xchg
test
jo
or
or
adc
test
xor
test
ficomps
jne
xlat
test
jnp
pop
insl
cmp
sbb
jb
fdivr
and
inc
push
ja
add
sbb
inc
mov
inc
or
or
movsb
int
sahf
mov
cmpsl
and
idivl
inc
clc
int3
or
push
movsl
mov
outsb
cwtl
pop
je
pop
stos
jge
pop
push
lahf
xchg
mov
adc
sbb
jae
xchg
jle
xor
mov
arpl
xchg
cltd
pop
fisubl
and
inc
add
add
rorb
or
jl
sub
cli
push
and
fcoml
xorl
add
jge
cmp
sub
cmpsl
pop
mov
loopne
xchg
jle
popf
out
pop
gs
pop
les
out
sbb
insl
ret
mov
sub
dec
ss
add
cmp
mov
subl
push
mov
push
imul
movl
mov
or
test
pop
xchg
cwtl
out
or
xor
sub
fs
add
inc
es
pcmpeqw
pop
push
mov
mov
leave
dec
or
fcoml
xchg
adc
dec
sbb
adc
mov
or
mov
repz
xchg
push
jp
or
arpl
or
loop
cmp
cmp
inc
cltd
cmp
pop
add
and
mov
jns
hlt
outsl
cmp
sub
negb
divl
repnz
sti
inc
mov
jg
sarl
dec
test
testl
aam
scas
pop
lretw
lock
and
insl
insl
je
ss
les
pop
dec
jns
cmp
cld
movsb
or
xor
pop
fmull
loop
out
xchg
xor
xor
add
mov
fwait
js
pop
jge
scas
loop
aaa
dec
add
das
mov
movsb
out
xor
stos
jbe
push
mov
pop
ror
fadd
les
jne
fwait
les
xlat
int
dec
inc
mov
add
sub
outsl
out
mov
stc
andb
int
mov
cmpsl
mov
xor
push
cs
stc
sti
inc
fdivrl
jecxz
mov
ret
lcall
jb
sbb
xchg
aam
arpl
daa
test
jp
add
xor
jp
pop
add
cmp
jbe
inc
in
dec
daa
xchg
mov
mov
stos
arpl
push
mov
dec
jb
mov
push
mov
xor
mov
adc
cmp
test
jp
scas
mov
mov
sbb
add
test
xchg
loopne
scas
and
xor
push
stos
jle
cmc
insl
imul
jne
fmuls
xchg
imul
int
mov
push
mov
cwtl
jno
enter
jns
inc
int
mov
leave
imul
or
ljmp
push
and
pop
sti
lret
sbbl
test
inc
mov
pop
leave
out
and
jb
movl
and
pop
hlt
je
lods
push
inc
add
or
jle
and
pop
sub
or
fs
decb
sti
fmuls
push
shlb
add
add
sub
xchg
cwtl
std
fcomps
mov
xlat
dec
adc
jle
decb
or
into
out
out
dec
test
jo
cwtl
pop
jecxz
adcb
or
dec
dec
cmpl
xchg
and
and
dec
dec
addr16
or
call
test
xor
sub
scas
xchg
mov
mov
cmc
loopne
repz
in
jmp
andl
sub
test
xchg
sub
in
mov
adc
jb
sub
and
jmp
jle
lods
je
nop
jg
xchg
call
xchg
orl
roll
test
push
enter
jp
les
pop
lock
fs
dec
subb
xor
adc
or
xchg
aam
xchg
fadds
insb
cmp
fdivrp
and
out
jp
lds
inc
sbb
cmp
fists
jmp
push
xlat
inc
scas
aas
mov
xor
outsb
and
jae
les
or
loope
stos
mov
mov
adc
loop
jno
push
mov
int3
sarb
std
add
cs
lcall
inc
orb
repnz
sbb
jae
sbb
loopne
xchg
and
add
or
into
popf
jne
pop
mull
das
jle
mov
insl
xor
xchg
movsl
add
imulb
les
push
cmpsl
out
mov
std
andl
aas
dec
ret
dec
sub
xor
or
gs
test
jb
or
sub
mov
and
mov
jmp
das
inc
sti
pop
cmp
mov
adc
inc
xor
outsl
lahf
push
enter
push
jp
xlat
pusha
out
ficompl
push
xor
dec
push
jo
icebp
add
test
jg
in
push
mov
stos
shlb
cmp
adc
push
insb
push
jb
adc
imul
jle
fwait
aaa
dec
aad
or
mov
std
int3
loopne
jl
das
push
push
in
lods
and
ljmp
sbb
add
pop
cmpsl
and
push
bound
mov
xor
or
loopne
sbb
cmp
xchg
pop
mov
jae
pop
cltd
xor
movsl
adc
in
and
add
dec
xor
repz
mov
adc
scas
push
push
outsl
xchg
shlb
and
mov
cmpsb
xor
lret
sub
xor
les
mov
mov
int3
repz
xchg
ja
xchg
repz
cmpsb
es
fstpl
sti
icebp
shl
pop
rolb
push
fistpll
out
scas
sbbl
test
clc
xor
or
mov
fs
loope
aaa
call
sbb
cltd
mov
scas
movsl
sub
rcrl
push
mov
orl
pop
and
addr16
daa
mov
mov
or
clc
jno
dec
movsb
xchg
psadbw
jnp
mov
mov
stc
mov
jl
cmp
lds
add
mov
xor
jle
mov
loop
lods
ljmp
inc
test
rcrl
pop
nop
xlat
cmp
mov
push
jo
mov
mov
sub
imul
mov
outsl
jb
mov
shll
call
push
jno
push
test
xchg
cmpsl
mov
dec
dec
outsl
mov
push
sbb
lcall
sahf
rcll
ret
inc
movsl
popa
mov
add
or
inc
jmp
stos
sbb
sbb
and
or
and
mov
sahf
dec
mov
ja
movb
popf
and
lcall
mov
adc
fbstp
xor
push
jae
xor
js
sarl
data16
dec
and
jg
jmp
xor
mov
xchg
stos
fsubrp
or
jecxz
fstps
xor
adcl
daa
mov
ds
adc
mov
and
push
mov
add
mov
jo
dec
aaa
cmp
adc
jmp
push
push
insl
inc
pop
shlb
cmp
mov
mov
cmp
add
jne
dec
shlb
movsl
hlt
flds
or
ret
inc
pop
wrmsr
xchg
mov
fdivl
lret
stos
pop
andb
sti
incb
mov
jo
xchg
mov
into
or
in
push
hlt
fmulp
addr16
push
cmc
fimull
push
orl
lods
repnz
cli
sub
imul
add
fcmove
lock
je
mov
sub
sbb
lock
pop
push
sbb
imulb
sti
andps
popa
in
add
insl
mov
outsb
stos
xor
mov
inc
xor
lods
xchg
sub
jb
pushf
jne
leave
push
mov
lods
cmpsl
es
jno
ret
and
inc
jl
aaa
pop
shlb
mov
dec
aam
mov
mov
jae
or
sub
xor
in
sub
and
xchg
xor
or
xor
dec
aas
ljmp
fsubl
fnstsw
push
ds
fcmovnu
push
in
out
mov
jno
ds
sub
push
lea
inc
dec
add
mov
push
sbb
test
loop
icebp
lcall
pop
hlt
push
mov
movl
mov
jmp
sub
movsl
ror
inc
jne
jne
dec
jnp
add
sub
pop
cmc
je
sbb
or
data16
xor
jp
movsb
lods
push
roll
test
je
pop
mov
xchg
and
sbb
nop
sbb
mov
pop
cmp
or
hlt
dec
mov
cmp
sub
jecxz
std
js
sub
or
inc
sub
push
gs
inc
aam
mov
out
add
rorb
xor
push
inc
movsb
jno
sub
adc
push
push
in
inc
pop
cwtl
xor
cmp
inc
out
out
shr
mov
shrl
or
sbb
sahf
not
cmp
push
pushf
adc
mov
insb
sti
call
pop
inc
rcrl
adc
xor
movsl
sub
add
cmpsl
dec
fisubrl
test
imul
sub
sub
je
push
std
dec
pop
ja
sbb
out
es
mov
push
sbb
repnz
jge
mov
aaa
mov
push
in
or
jo
out
aas
dec
shlb
outsl
adc
lods
jecxz
jns
stos
xchg
jnp
jo
hlt
add
call
dec
clc
testl
or
sub
pop
mov
push
pushf
mov
sbb
inc
aam
fstps
xchg
scas
push
int3
cltd
add
xor
dec
ss
jnp
dec
xor
cs
into
pop
jns
and
dec
imul
pop
jge
mov
dec
xor
repnz
sub
dec
fwait
push
fildll
sub
adc
xlat
and
jmp
loope
das
mov
mov
inc
xlat
lods
push
cmp
ljmp
adc
or
ret
and
int
hlt
out
push
adc
push
inc
pop
pop
xchg
jmp
negb
pop
dec
inc
jb
mov
mov
repnz
fisttps
dec
add
dec
lahf
in
insl
daa
cmpsl
cmp
cmp
adc
ret
xor
xchg
out
sub
pop
cmp
jb
das
xor
sub
pop
mov
mov
pushf
rolb
mov
dec
and
jge
add
cld
jmp
subl
xchg
mulb
add
ljmp
fcompl
lcall
mov
pop
sub
mov
jne
sahf
ret
or
or
aad
loopne
push
in
xchg
ud0
mov
push
mov
adc
cmp
dec
test
or
outsl
push
jecxz
xor
jb
pop
sbb
push
outsl
int
push
outsl
mov
mov
dec
imul
push
cmpsb
add
lret
sbb
push
jbe
iret
mov
sub
movsl
jmp
adc
push
push
shlb
mul
sub
fisttpl
test
popf
outsb
dec
rolb
ret
int
and
daa
shrw
push
jl
jmp
decl
cltd
push
dec
outsb
scas
xchg
mov
jo
xchg
mov
push
insl
jbe
cmp
bnd
dec
push
cmp
sbb
or
hlt
stc
mov
mov
out
push
xchg
jl
je
push
jmp
jge
int3
push
cmp
adc
and
xor
fadd
jg
mov
pop
fs
aad
call
mov
cmp
xchg
or
sub
cmpl
into
mov
pop
or
into
movsb
adc
push
adc
das
push
and
cmp
shll
repz
icebp
pop
ret
xchg
in
mov
push
dec
pop
mov
loop
movsb
cmp
pop
sub
pop
cmp
out
lret
iret
xor
push
jl
push
dec
jb
ret
leave
sbb
repnz
xor
dec
out
ret
pop
sub
sbb
sbb
jb
and
lcall
outsl
adc
mov
imul
add
imul
or
and
add
jecxz
sub
adc
not
lret
dec
or
cmp
aaa
aas
mov
sbb
leave
adc
pop
mov
sub
or
scas
lret
lret
inc
ss
pop
pusha
cmp
sub
sbb
fisubrs
lock
inc
movsb
lods
lods
inc
fildl
sbb
cs
adc
jo
movb
mov
mov
push
and
jp
popa
fdivl
and
lock
mov
lea
inc
xchg
or
push
xor
in
mov
mov
cmp
push
sbb
pop
cmp
sti
fiadds
sub
sub
sahf
std
clc
inc
inc
or
pop
adc
mov
fcmovb
cmp
mov
mov
mov
lcall
test
jmp
insl
loope
lcall
lea
cmpb
xor
daa
jns
mov
mov
aas
push
sbb
add
push
sbb
pop
push
pop
mov
jb
xchg
sub
push
dec
xchg
rclb
mov
inc
scas
std
mov
fwait
stos
gs
push
pop
test
fistl
pop
mov
rorl
mov
xchg
addr16
and
cwtl
push
and
push
movsl
or
mov
mov
aas
cld
dec
fdivl
mov
fidivrl
inc
ds
repz
xchg
js
int3
adc
jne
cmpl
test
arpl
out
sbb
xorl
div
mov
lret
shlb
jnp
orl
push
push
in
es
pop
imul
int3
or
pop
mov
mov
lds
lods
mov
adc
popa
xchg
cs
and
lret
xor
ret
or
mov
lds
jo
and
inc
popf
in
adc
xorl
test
jg
xchg
add
aad
mov
clc
push
test
and
dec
ret
and
test
cmc
or
xor
sub
bound
or
or
pop
dec
scas
dec
xchg
aaa
ret
sub
dec
cld
mov
cmpsl
cmpsl
push
repz
push
pop
sub
adc
rolb
xchg
sub
xchg
cli
sbb
xchg
rorl
out
jo
sti
or
xchg
add
mov
lds
test
sub
rorl
in
out
add
xchg
lret
fiadds
addl
cmp
stos
out
push
xchg
jg
mov
add
lret
xchg
push
push
push
mov
mov
loopne
cwtl
cmp
jecxz
mov
push
push
pop
mov
int3
xchg
ret
cmp
mov
mov
mov
jl
ret
dec
cs
push
lea
xchg
lahf
fistl
test
faddp
nop
shlb
inc
push
lock
xor
cmpsb
int3
dec
insl
ret
and
aaa
push
or
lods
xor
xchg
jo
fldcw
orl
mov
addr16
inc
push
cli
arpl
dec
fcompl
movsl
jle
lret
mov
cs
shr
jle
add
cmpsb
xchg
mov
icebp
dec
repnz
test
fwait
xchg
stos
clc
sbb
daa
push
loopne
cmp
mov
cmpl
push
cmp
and
mov
jbe
xchg
testl
cmp
inc
shr
inc
cmp
push
add
pushf
add
lods
loop
xchg
iret
mov
xchg
aaa
dec
into
dec
push
jnp
mov
andl
mov
or
insl
mov
dec
pop
jno
outsb
shll
scas
les
ret
stos
ljmp
pop
or
int
mov
aad
movups
xor
push
rorl
jne
pop
imul
push
mov
sbb
lret
sub
mov
push
dec
sub
movsb
mov
retw
fcompl
shl
jnp
fidivl
xchg
inc
xor
mov
shrb
sbb
jge
jo
cmp
int3
jp
cs
dec
shll
xchg
rorl
cmp
mov
movb
insb
pop
mov
adc
pop
jnp
in
xorl
jae
fcompl
outsb
mov
lock
ret
idivb
xchg
mov
sub
sub
jge
out
push
aaa
xor
fisttpll
cmp
leave
movsl
mov
test
imul
movsb
push
test
pop
xor
loope
andb
push
lret
hlt
jno
iret
ret
inc
dec
mov
addr16
insl
dec
cmp
popa
pop
pop
or
add
sub
jbe
cmpl
ljmp
xor
pop
sub
ficomps
loop
out
mov
mov
arpl
or
shll
pop
or
mov
roll
cmp
loopne
or
inc
jnp
jmp
xchg
cmc
and
ja
int
or
mov
daa
pushf
out
mov
nop
push
add
jg
in
inc
push
js
inc
adc
in
int
mov
jne
shrl
or
mov
data16
out
pop
mov
sbb
xchg
jp
addr16
jge
loopne
sub
les
cs
test
mov
stc
popa
push
mov
add
cwtl
dec
inc
cld
hlt
mov
loop
cltd
jb
jecxz
jnp
mov
ja
int3
pusha
int
sub
cmp
push
sbb
ljmp
push
aad
popf
popf
and
in
jo
iret
sbb
pop
lret
add
clc
mov
insl
fists
fnstcw
xor
ds
sub
rorl
roll
test
shlb
imul
pop
mov
mov
push
cmp
cmp
xchg
add
mov
or
adc
jl
mov
push
inc
aad
stos
es
jbe
fwait
outsb
add
cmpsb
jns
sub
or
or
cmp
out
scas
mov
cltd
lahf
adcl
dec
rcll
adc
pop
pusha
rcl
push
scas
hlt
test
jnp
push
test
pop
test
lea
pop
lcall
insl
lcall
sahf
enter
pop
ds
fadds
scas
xor
mov
xchg
dec
xor
jp
aaa
inc
mov
addl
mov
imul
push
loope
icebp
inc
xor
dec
and
into
cld
xor
push
lret
and
test
stos
fimull
xor
sbb
mov
hlt
pop
cmpsb
iret
jl
jbe
push
int
or
xchg
repnz
int
mov
divb
inc
jp
neg
dec
es
in
shll
push
sub
jbe
dec
mov
pop
mov
dec
iret
jb
daa
and
clc
mov
loopne
lods
jmp
pop
xor
ds
sub
stos
xor
cmp
gs
push
ljmp
and
or
dec
cs
mov
dec
xor
mov
iret
add
inc
es
mov
sub
enter
push
movsb
movsl
test
push
cmp
fdivp
push
pop
xchg
sub
push
pop
jge
ficomps
push
shll
jecxz
lea
and
add
lcall
cmp
out
jle
pop
or
fistps
add
out
xor
push
adc
sahf
dec
lret
mov
dec
pusha
nop
repz
nop
sbb
xor
lret
add
fists
out
jno
and
cmp
push
push
fwait
mov
xchg
mov
adc
fsts
clc
adc
icebp
cmp
inc
jl
push
add
add
ret
xchg
cmpsb
sub
cmp
ss
pop
pop
jnp
add
push
xor
in
mov
nop
loop
xchg
jge
xchg
lods
sti
pusha
sbb
mov
mov
mov
jbe
in
pop
push
push
cmc
in
fisttps
pushf
testb
ret
inc
xchg
ficoms
shll
insl
mov
xor
jne
xchg
mov
pushw
dec
add
xchg
or
pop
pop
clc
mov
cwtl
les
icebp
bound
mov
or
repz
loop
lea
insb
scas
test
daa
es
add
movsl
jg
adc
cmpl
mov
shl
add
scas
dec
xchg
lock
ja
ljmp
adc
insb
add
es
lcall
or
or
jecxz
add
jmp
aaa
mov
sub
and
mov
imul
cltd
sub
inc
fstpl
pop
jno
xchg
in
mov
sub
fstps
and
clc
inc
cltd
add
push
push
scas
addr16
aaa
or
gs
lods
lock
jo
mov
jne
and
sub
fdivrl
mov
xchg
dec
repnz
xchg
jecxz
loop
into
mov
adc
mov
xor
jecxz
cmpsb
ficoms
leave
xchg
jae
mov
stos
inc
mov
jae
das
shrb
adc
mov
aad
jne
rcll
push
sbb
inc
arpl
scas
pop
mov
pop
pop
mov
sub
adc
sahf
unpckhps
mov
mov
jb
and
mov
cld
es
lahf
insl
mov
and
lods
popa
hlt
mov
mov
dec
xchg
xor
push
pop
adc
xor
jns
push
jnp
addr16
pop
in
enter
hlt
mov
and
outsl
movb
adc
shrb
in
loop
fs
pop
pusha
sbbb
nop
xlat
mov
test
jns
imul
ret
push
and
arpl
test
outsl
scas
push
lock
cmp
aaa
shrb
mov
das
sub
cmp
xchg
xchg
mov
adc
xlat
add
jp
lods
cmp
cmp
mov
xchg
fstl
mov
popf
insl
rorl
xchg
xchg
lock
sub
das
rolb
or
fs
fadds
mov
loopne
inc
ret
jns
fwait
pop
xchg
or
mov
mov
cmpsl
and
cmpsb
sbb
fnstcw
mov
outsb
leave
sbb
std
inc
and
pop
scas
adc
lahf
adc
sub
push
push
out
mov
repz
cltd
addb
adc
dec
pop
lret
lcall
faddl
jae
mov
or
push
push
mov
pop
xchg
pusha
add
imul
push
and
pop
loop
push
stos
insl
add
sub
dec
js
int3
mov
repnz
pop
lahf
sbb
and
xor
dec
out
int3
fcomp
xor
gs
mov
cmp
es
inc
sbb
cmp
sub
add
jb
xchg
mov
int
xchg
aam
or
mov
jno
fldenv
mul
stc
out
cmp
inc
xchg
dec
push
push
lds
out
leave
xor
lahf
out
or
xor
dec
mov
out
idivl
xor
pop
aam
cmp
dec
insb
jle
sarl
push
lods
inc
jp
pop
lcall
jmp
sub
loope
lods
mov
test
cmp
adc
push
out
jle
xchg
int
cmpsb
out
pop
mov
sbb
fsubrl
jns
xchg
pop
adc
in
std
call
xchg
hlt
cwtl
test
add
inc
stos
ja
push
or
inc
in
shll
nop
xlat
mov
xor
rcll
orb
inc
bound
xchg
lods
inc
push
ss
push
jle
and
adc
pop
das
sbb
lods
cmpsb
repz
mov
mov
cmp
fs
jg
push
dec
and
xor
lock
mov
insb
je
loope
lahf
lea
cmp
xor
into
inc
sub
xor
pop
xor
imul
rcrb
mov
and
call
aad
aaa
lods
jp
mov
out
addl
xchg
or
into
pop
jbe
test
lods
test
dec
icebp
je
fcomps
xor
rorl
loopne
daa
orb
and
cmp
pop
push
add
sbb
dec
enter
lods
jge
stc
scas
mov
scas
dec
pop
sub
iret
mov
lds
dec
jl
les
shl
or
pop
pusha
decl
adc
xchg
pop
pop
xor
ss
shll
pop
stos
add
xor
scas
dec
mov
push
cmpsl
fiaddl
jl
push
nop
int3
popf
bound
imul
dec
pop
dec
sub
mov
jae
jo
cmpsl
nop
mov
movsb
mov
sub
cmp
push
mov
or
mov
movsl
shll
test
jp
adc
xchg
ljmp
pop
push
lcall
popf
test
xchg
dec
push
sbb
inc
scas
negl
xchg
loopne
sub
push
pop
sbb
mov
int
test
addr16
scas
rclb
clc
iret
les
in
fcoml
mov
repz
jmp
sbb
pop
mov
mov
hlt
lahf
nop
shrb
add
dec
ret
rorl
jo
rcr
lcall
add
insl
bound
mov
mov
lods
jbe
popa
icebp
data16
and
dec
mov
cmpb
shl
cli
popf
sbb
in
mov
daa
ja
pop
or
or
pusha
pop
pop
stos
adc
mov
push
cmp
dec
std
mov
movsl
push
shlb
mov
mov
fmuls
jno
imul
jne
fbstp
sti
xchg
stc
dec
scas
into
in
mov
inc
add
xor
xor
sbb
xchg
mov
and
into
lods
add
adc
test
cmp
xorl
into
push
clc
cmp
adc
mov
js
xchg
insb
jb
jecxz
fsubrl
jno
pop
mov
int
inc
test
stos
enter
dec
xor
insb
push
cmc
insb
or
icebp
subb
repz
inc
scas
mov
dec
inc
pop
dec
scas
cmc
mov
loope
fdivs
jg,pn
push
sbb
or
loop
mov
rcrb
adc
sbb
sub
mov
setge
sub
stos
arpl
lea
mov
out
adc
lahf
ret
cld
jns
je
ss
add
lds
xor
push
dec
shll
and
cs
rol
mov
popf
mov
push
push
mov
and
js
cwtl
mov
pop
xor
or
push
adc
sbb
insb
loopne
jle
mov
jl
inc
bnd
or
ja
jle
xchg
fst
fdivs
cmpsb
pop
dec
rclb
pop
jmp
cltd
xlat
sub
clc
ret
mov
push
push
outsl
push
cmp
xchg
mov
mov
ja
ljmp
ret
sub
pushf
test
lea
add
push
in
jge
sbb
cmp
into
jmp
movsl
repz
adc
rcrb
or
loopne
into
fcmovb
fsts
lahf
inc
cli
lret
dec
lahf
sub
sbb
xor
cmp
dec
cli
sub
pop
mov
mov
xchg
mov
fimull
dec
hlt
and
lret
loopne
les
xchg
and
dec
aad
rcrb
mov
outsb
add
and
mov
addb
or
addr16
fwait
inc
ljmp
bound
popf
jo
inc
or
mov
cmpsl
enter
push
jle
addb
pop
daa
or
add
std
mov
loopne
sbb
aam
adc
jnp
dec
cwtl
data16
jp,pt
jb
mov
mov
aaa
out
push
stos
aas
sub
cltd
sbb
mov
ds
enter
lret
sti
lea
imul
out
dec
cwtl
aaa
cld
test
cmp
or
cs
inc
and
or
pop
jo
fimull
sbb
pop
jge
lods
imul
xchg
std
add
repnz
dec
bound
pop
inc
and
clc
pop
lcall
mov
int3
xchg
add
mull
loope
pop
sysexit
inc
jg
add
adc
push
cmp
stos
jg
lods
jge
inc
cli
out
mov
loope
ds
faddl
add
or
mov
ss
and
mov
jno
push
push
adc
sbb
jp
lret
mov
xor
lods
pop
pusha
testb
jb
test
out
xor
mulb
adc
das
sub
inc
dec
jge
int
xchg
inc
mov
hlt
outsl
ss
mov
daa
sbb
sub
xchg
shrl
sub
and
pop
fs
and
inc
mov
jb
cmp
jecxz
aam
dec
and
bswap
jmp
mov
out
sarb
adc
pop
inc
pop
pop
inc
fldl
mov
in
in
sbb
stc
lret
scas
je
add
fucom
cmp
lods
xchg
in
and
cmp
sub
xchg
pop
mov
out
mov
pop
das
push
movsl
push
mov
mov
fiaddl
pusha
push
sahf
addr16
mov
mov
mov
push
out
pop
push
insl
add
mov
test
pop
pop
inc
inc
sub
cmp
or
sub
hlt
jge
pop
pop
pop
xchg
dec
xor
scas
pop
mov
aam
scas
repnz
jmp
push
pop
out
ja
sub
push
pop
popa
test
jno
adc
mov
sub
js
mov
lds
hlt
jmp
rorb
adc
ficompl
mov
mov
xchg
addr16
cmp
shrl
push
adc
decl
xor
mov
out
sub
addr16
jns
mov
std
rorl
push
int
push
or
rorl
push
fadds
int3
dec
shr
dec
inc
cltd
sub
sbb
jbe
in
inc
idivl
hlt
mov
jp
loope
dec
fisttpl
faddl
and
movsl
gs
jl
mov
inc
push
das
shll
mov
add
jne
fsubr
stc
data16
out
fs
sti
mov
aad
mov
inc
data16
sub
adcb
pop
sbbl
cmc
pop
fisubrs
mov
xlat
sub
clc
lcall
das
pop
xchg
fwait
xlat
fadds
lods
and
jnp
repz
jmp
arpl
sub
xor
xchg
adc
cmpsb
cmp
jno
mov
repz
and
mov
pusha
call
xchg
push
adc
or
shrb
mov
mov
mov
push
cmpsb
negl
adcl
mov
add
mov
inc
inc
adcl
xor
dec
adc
sbb
js
mov
out
lock
das
jmp
ss
lds
and
gs
xchg
imul
cs
push
pop
scas
out
fisubs
sub
add
pop
sub
orl
fidivrl
pop
jl
xor
dec
jge
dec
ret
and
insl
fiaddl
cmp
and
loop
cmp
sbb
out
pop
incl
into
jb
inc
repnz
outsb
push
enter
push
std
lret
aad
jl
ds
fwait
xchg
mov
add
add
and
inc
leave
test
in
cmc
into
shr
test
int
ljmp
sbb
flds
flds
mov
push
jecxz
xchg
inc
inc
shll
pushaw
lahf
pop
mov
scas
aas
sub
xor
push
stc
lret
add
stos
mov
mov
cmc
imul
dec
das
xlat
cmpsl
pop
sti
lahf
leave
mov
add
dec
push
out
ja
stos
mov
lcall
jbe
xor
xor
add
mov
xor
mov
nop
dec
sub
int3
push
call
fsubs
xlat
pop
sub
xchg
test
leave
jae
push
ftst
cwtl
cmp
in
dec
jb
cmp
dec
cli
lret
xor
mov
mov
js
dec
adc
mov
or
ja
adc
dec
jne
xchg
jge
add
cmc
inc
repz
out
and
sbb
aaa
ljmp
repz
mov
inc
adc
pop
gs
dec
shr
aad
pavgw
push
mov
mov
xor
pop
test
aad
jl
sarb
in
pop
or
test
and
mov
test
std
int
fiadds
mov
or
mov
push
sub
fucomi
lahf
push
ds
cmpb
lahf
jbe
dec
mov
popf
fwait
dec
imul
xchg
addr16
sbb
nop
mov
mov
mov
xlat
push
sbb
fisttps
lea
jo
daa
lds
in
push
sub
into
dec
outsl
push
mov
jno
xchg
jmp
dec
mov
dec
push
out
je
cmp
cmp
cli
mov
jns
gs
jno
xor
cld
test
sub
xchg
lret
pop
in
into
inc
out
cmpsb
ljmp
mov
pop
iret
ret
addb
aas
scas
pop
mov
pop
inc
in
add
int
imul
jne
movsb
clc
insl
les
and
fs
jae
jecxz
ret
xchg
loop
xchg
cwtl
xchg
mov
jp
cmp
jg
xchg
les
fimull
hlt
and
pusha
mov
push
or
cltd
popf
arpl
pop
ret
in
xor
or
cmp
add
out
aaa
rcll
jecxz
ja
sbb
cmp
ret
shll
and
cli
push
push
pop
in
inc
pop
sbb
cmp
repz
test
adc
adc
mov
lret
sbb
popl
push
sti
out
push
inc
das
aaa
xchg
scas
adc
jg
cmpsl
pop
pop
loope
add
pop
inc
adc
inc
aas
xor
lods
jns
insb
add
push
gs
in
outsb
out
scas
and
sbb
xor
aad
pop
sub
imul
sub
adc
daa
popf
adc
fcoms
lock
push
mov
cmp
mov
in
xor
test
adc
rep
sub
and
mov
shll
stc
stc
pop
mov
inc
ret
shrl
sub
lods
jmp
jmp
dec
cmp
fsts
or
mov
stc
aam
sbb
xchg
aas
jno
inc
sti
cmp
mov
loopne
repnz
and
test
cmpsb
test
push
cmc
ljmp
aas
xchg
out
xchg
ljmp
xor
das
pop
adc
lods
insl
cmpsb
fildll
popf
sbbl
xchg
add
outsl
pop
mov
rcll
orb
ret
or
das
dec
inc
in
hlt
jg
lea
test
push
test
mov
mov
sub
mov
je
mov
xchg
clc
rcrb
aaa
inc
dec
push
subl
ss
jle
shrl
test
test
rolb
test
out
push
popa
cltd
gs
add
push
stos
adc
hlt
dec
mov
loope
insb
and
mov
imul
sbb
out
push
mov
test
daa
test
jg
cld
dec
pop
jne
ljmp
and
sti
dec
xchg
mov
mov
fs
addb
xchg
outsb
sbb
popf
movsb
dec
xchg
pop
jmp
loop
in
gs
pop
out
ret
xchg
ror
mov
pop
pop
dec
shr
stos
js
or
add
xchg
and
testl
xchg
orl
data16
xchg
lret
sub
xor
sbb
lahf
pop
test
xorb
js
lret
xchg
xor
push
xlat
inc
cmpb
sbb
inc
jno
jae
or
out
adc
outsb
jp
cli
and
sbb
xlat
xchg
push
push
fisubl
adc
scas
cmp
lea
aam
inc
pop
int3
filds
cltd
or
es
aaa
push
out
sar
push
test
jne
icebp
fnclex
daa
adc
or
sti
and
or
adc
jnp
jo
adc
and
jp
ret
inc
sub
xchg
imul
scas
enter
xor
mov
pop
in
sahf
mov
std
dec
movsl
shlb
cmp
and
xchg
push
iret
jns
pop
sub
adc
mov
testl
jo
push
jbe
mov
gs
jo
cli
mov
push
leave
sti
add
shll
popa
arpl
jmp
pop
es
xlat
aad
xchg
loop
stos
data16
addr16
pusha
movntq
pop
movsl
xchg
out
jecxz
push
push
outsl
loopne
hlt
je
sub
add
inc
insl
lods
in
addb
or
mov
ja
inc
xchg
jns
xor
jle
gs
imul
push
add
sbb
movsl
ficoml
push
cmpl
or
sub
adc
in
stos
hlt
pusha
stos
je
lds
inc
mov
f2xm1
mov
pop
jge
shrb
pop
jo
pop
ret
cmp
cmpsl
fists
add
add
into
adc
hlt
xlat
or
ss
xlat
xchg
aam
and
sub
lret
enter
jg
jle
mov
inc
or
in
cli
xchg
jg
sti
in
je
lock
inc
fwait
mov
cmp
jo
add
cld
cmp
push
fidivl
data16
in
xchg
test
imul
mov
mov
ds
sbb
idivl
push
cmp
dec
cmp
mov
adc
fldt
or
fadds
jbe
and
addb
fsts
rol
or
clc
adc
dec
mov
mov
lcall
push
inc
add
pop
mov
add
adc
aam
div
test
shll
fisttps
xchg
adc
and
dec
adc
pop
in
fs
stos
enter
push
cmp
sbb
shl
mov
jne
popf
sub
data16
fwait
push
inc
jnp
dec
data16
daa
mov
mov
cmp
les
lds
adcl
cmp
cmp
mov
inc
mov
dec
fstl
inc
sti
ss
lret
test
int
inc
outsl
xor
and
and
dec
shlb
xchg
xchg
pushf
add
subl
fidivl
imul
je
xorl
fcomps
jne
loope
out
add
out
pop
lods
xor
push
dec
mov
dec
mov
and
mov
jp
cmc
testl
cmpsb
dec
xchg
out
in
mov
pushf
cltd
inc
popf
stos
pop
cmp
arpl
loopne
outsb
inc
cmpsl
sub
jg
inc
ret
fnstenv
mov
mov
dec
mov
sarb
sbb
std
ja
stos
xorb
mov
add
insl
int
shr
push
xchg
sti
and
je
dec
or
dec
dec
inc
outsl
mul
jl
pushw
add
lret
jp
cmp
ljmp
push
enter
inc
add
jb
mov
jp
inc
nop
out
lock
sub
subps
pop
dec
add
mov
cmc
rcll
sub
movsl
adc
dec
fdivs
jl
jae
jmp
or
sbb
scas
pop
push
jno
push
mov
repnz
or
mov
pop
or
dec
roll
lock
mov
jmp
jb
push
gs
and
gs
inc
test
pop
push
push
pop
pop
stos
push
xchg
outsb
sbb
jl
or
xchg
xchg
addl
inc
xchg
mov
lods
and
jle
mov
fisubl
popa
jmp
jne
nop
sub
jne
jmp
lds
daa
push
into
jecxz
sub
push
das
aad
pop
add
push
loope
rdseed
in
inc
daa
push
mov
dec
jae
xor
xchg
pop
stc
sub
mov
loope
mov
adc
pusha
rorl
mov
mov
popa
xchg
jno
pop
jb
fiadds
mov
fstps
mov
sub
mov
mov
adc
sbb
jecxz
sbb
mov
arpl
cli
aad
pusha
push
insb
fcoms
pop
jbe
and
lods
out
das
push
pusha
jnp
push
xor
testl
sub
dec
mov
xlat
and
jno
popa
inc
cmp
mov
stc
pop
inc
jnp
call
outsb
in
outsb
jbe
sbb
je
fwait
aas
and
lcall
mov
mov
lcall
push
aaa
lea
divb
mov
dec
incl
pop
push
mov
stos
dec
ror
inc
jno
pop
push
mov
loop
push
mov
xchg
jb
push
sahf
shr
or
sbb
out
sub
push
pop
mov
jmp
pop
es
pop
out
dec
mov
xchg
lock
cmc
fwait
cmpsb
js
out
cmp
mov
mov
xor
adc
orb
out
stos
dec
push
bound
add
iret
repz
pop
loopne
cmpsb
mov
roll
push
pop
lahf
lods
fisttpll
dec
jge
outsl
in
rclb
adc
mov
lret
or
mov
loopne
push
jle
sub
or
add
jecxz
lods
bound
lahf
dec
dec
in
push
ja
clc
insl
cmp
push
fstps
pop
mov
sbb
sub
ret
pop
or
inc
xchg
pusha
jmp
jno
mov
js
fcom
sti
lods
dec
cwtl
hlt
insl
insl
popf
pop
mov
jns
aaa
push
pop
dec
lret
mov
adc
fsubl
push
xchg
aas
cmp
movsl
aad
int
xchg
pop
lods
loopne
sub
sarl
dec
push
retw
sbb
fxch
adc
push
cmpsb
out
clc
lahf
int
mov
xchg
pop
sub
sub
or
xor
enter
push
push
out
repnz
in
and
enter
icebp
arpl
push
sarb
xchg
pop
push
iret
je
insb
js
jl
adc
and
cld
gs
cmpsb
into
data16
sbb
sub
ljmp
les
push
out
les
mov
adcl
fldenv
pop
cs
mov
xchg
stos
xor
push
call
jnp
xor
pop
test
jb
mov
lods
mov
popf
ficomps
das
push
lock
out
push
adc
ss
test
jns
mull
in
xor
arpl
xor
frstor
cltd
int3
cli
popa
pushf
shrl
sub
sti
inc
push
ret
cli
cmp
pop
insb
xor
mulb
mov
inc
fstpt
jge
push
xor
movsb
stos
leave
outsb
shrb
in
jmp
dec
out
lock
fcmovnu
inc
std
xlat
ljmp
aad
dec
sbb
gs
fistpl
and
mov
scas
sbb
fistps
movsb
incb
lods
out
shlb
pop
xor
xchg
jbe
inc
xchg
arpl
sbb
adc
ss
in
mov
int3
sahf
pushf
or
mov
in
rcll
icebp
insl
leave
mov
aaa
jl
mov
mov
xchg
mov
outsb
lea
mov
insb
xchg
fs
inc
mov
arpl
mov
inc
pusha
and
jl
sbb
lret
lds
punpckldq
stos
movsb
push
aaa
pop
pop
add
mov
out
addr16
ret
xchg
filds
out
test
iret
in
repnz
cmp
pop
fs
fidivl
mov
rcrl
add
pop
sbb
mov
shrl
mov
jg
loopne
shrb
ja
ss
mov
cmp
lret
or
jae
and
daa
and
lods
test
xorb
and
mov
lods
enter
and
lea
inc
pop
mov
ljmp
scas
xor
enter
fs
dec
mov
sub
mov
movnti
outsl
xor
add
mov
mov
aam
xchg
pusha
test
loopne
cmpsl
xor
push
test
dec
or
dec
inc
sbb
movsb
in
push
xor
pop
rol
sub
out
xor
das
push
or
mov
fwait
sub
notl
mov
jmp
fsts
lods
mov
lcall
cmp
in
mov
xchg
mov
ret
mov
mov
mov
jno
int3
jle
mov
mov
mov
jno
je
fwait
incb
xchg
and
push
mov
dec
xor
shlb
jmp
push
call
sub
imul
dec
adc
cmp
call
into
dec
nop
ss
mov
mov
inc
addb
dec
add
mov
aad
push
inc
outsl
pop
ljmp
shlb
dec
push
ss
xchg
fisubrl
shll
rcll
pop
mov
ss
insb
jg
cmpsl
pop
push
mov
pop
fsubp
xor
pop
ret
and
shlb
outsl
aad
push
enter
jmp
pop
xlat
push
dec
jnp
jp
fs
daa
ljmp
add
les
fidivrl
xor
sbb
call
pop
jns
mov
cld
add
loopne
adc
gs
shlb
jne
jne
mov
fists
orb
inc
pop
mov
cltd
cmp
in
nop
cltd
loopne
idivb
dec
mov
ljmp
push
sarb
sub
and
adc
sbb
xor
or
sarb
inc
mov
sahf
push
mov
in
and
mov
pop
or
movsl
mov
adc
hlt
mov
movsb
xchg
mov
das
mov
je
mov
cmp
mov
or
punpckhwd
cmp
xlat
andl
add
insb
pop
aas
test
out
add
adc
std
sub
and
cmp
fidivrl
inc
xchg
and
lret
push
test
add
jnp
push
shlb
jecxz
xlat
outsb
cwtl
jnp
out
lds
cwtl
call
push
adc
mov
lods
jge
fidivs
pusha
and
out
mov
cld
fcmovnb
aam
push
sahf
lds
test
dec
ret
test
and
xchg
mov
inc
and
and
fs
repz
arpl
jge
outsb
nop
mov
cmp
sbb
add
shrl
sbb
mov
out
call
xor
push
mov
insb
xchg
sub
arpl
mov
and
ja
xor
dec
repz
push
add
sbb
aaa
or
insb
mov
daa
dec
dec
adc
or
fisubl
das
stos
lahf
adc
nop
int
cmc
pop
ljmp
xchg
or
jl
sub
in
add
push
xchg
shll
arpl
lahf
and
push
cmp
add
mov
inc
addb
sbb
mov
addr16
outsl
sub
jns
and
int3
push
mov
jnp
inc
lods
fmulp
add
xorl
negl
add
cli
push
mov
fldcw
into
cmp
or
mov
ljmp
add
xchg
and
rcll
cmpsl
or
lock
xor
fmul
out
sub
jo
fs
iret
cmp
enter
scas
ret
cmc
enter
push
aas
fildll
loop
fsubr
insb
jl
sbb
dec
pop
outsl
je
sbb
xor
cmp
shld
jb
lahf
dec
adc
jl
dec
jbe
or
mov
imull
rcr
jbe
lcall
out
mov
lcall
mov
and
repnz
mov
adcl
scas
test
pusha
divl
lea
xlat
pop
xchg
jbe
push
or
popa
jge
cmc
push
xor
or
add
pop
xor
loopne
add
mov
add
fldenv
inc
push
test
or
mov
jle
cmpw
orb
push
out
push
fisubl
jmp
inc
fiadds
js
cmpsb
xor
cmp
call
movsl
or
rcrb
movsb
cmpsl
inc
jb
fbld
std
adc
std
mov
jg
fcomps
ret
rol
jns
pop
cmp
mov
out
dec
jns
and
and
jecxz
leave
jbe
sub
popa
in
stos
cmp
ret
jne
jmp
or
cmp
or
mov
movsl
mov
std
flds
xor
push
jnp
xchg
inc
push
mov
ja
test
hlt
xlat
push
jns
out
mov
loope
mov
mov
push
pusha
ret
jne
push
jnp
out
inc
shll
mov
insb
outsb
cmp
arpl
mov
les
into
mov
adc
jae
pop
cs
repnz
push
add
sbb
cltd
nop
sbb
daa
in
add
fcmovnbe
inc
out
mov
and
ja
rorb
adc
cltd
loope
jns
jbe
test
adc
iret
pop
jle
cmp
mov
and
mov
repnz
mov
clc
int3
xchg
fdivl
call
lret
cli
clc
loopne
pop
iret
sbb
das
decb
xor
cs
in
jns
cmpl
dec
test
cs
aaa
lea
xor
adc
jae
jecxz
mov
bound
insb
hlt
and
jb
test
inc
push
daa
shrl
je
out
div
and
mov
rcll
jge
push
cli
enter
xchg
hlt
aad
pop
mov
sub
cld
and
ja
incb
push
and
mov
lods
imul
add
insl
leave
movsl
sub
rorb
adc
loope
icebp
push
xor
sbb
sbb
mov
int
addr16
pop
ljmp
mov
stos
icebp
incb
jb
jecxz
mov
inc
jbe
sbb
cld
test
nop
ficompl
pop
jb
cli
loop
mov
pop
xor
cmpl
jae
push
sbb
mov
mov
jb
aas
popf
mov
mov
shrl
xchg
and
mov
and
push
xchg
frstpm(287
jae
xchg
out
and
pop
cld
rcrb
scas
adc
cmp
test
mov
fdivrl
xchg
rclb
pop
nop
push
imul
inc
adc
push
push
outsl
stc
decl
out
sbb
test
subb
or
cltd
out
or
lcall
inc
mov
insl
push
fdivl
int
je
push
leave
jbe
aas
mov
stc
rolb
scas
addr16
or
pop
cmpb
cltd
mov
ds
pusha
cmpsb
cmp
mov
les
mov
dec
repz
xchg
push
outsl
les
add
jle
mov
in
add
jmp
and
dec
lods
xchg
pop
repnz
inc
mov
xor
fsubrp
dec
adc
mov
ret
rcr
popf
insb
dec
push
test
mov
rcr
xor
mull
pop
pop
and
fwait
add
sbb
xchg
add
lods
push
aaa
jns
or
sbb
popa
sarl
das
scas
xchg
imull
push
jl
jne
mov
iret
push
aaa
popa
inc
movsl
sub
dec
pop
notb
jne
adc
scas
sbb
add
mov
add
insb
imul
mov
idivl
mov
inc
xchg
jo
sti
sbb
jl
mov
jge
arpl
pop
or
js
dec
dec
jp
adc
popa
jecxz
sbb
jns
sub
pop
sti
insl
cltd
mov
dec
cmpsb
or
icebp
das
mov
xor
subl
jp
mov
mov
mov
and
xor
and
or
add
push
sub
mov
sub
hlt
push
out
loopne
roll
lds
movsl
xchg
jle
xchg
adc
xlat
inc
push
mov
mov
jno
es
push
leave
mov
stos
imul
js
xchg
mov
sahf
fs
ds
add
repz
sub
test
add
enter
movsb
push
js
adc
dec
cmovb
mov
adc
pop
xor
js
les
or
mov
callw
fistpl
lcall
fbld
adc
lods
pop
cmp
fbld
lret
loop
gs
mov
pop
sub
xor
mov
add
cld
adc
push
xchg
cmp
adc
mov
xor
out
outsl
adc
lock
mov
sub
roll
jecxz
cltd
ret
std
in
jl
fs
inc
inc
repnz
and
and
adc
cmp
mov
ja
ja
inc
arpl
or
out
inc
in
out
rclb
shr
movsl
nop
bound
dec
pop
mov
sub
scas
xor
cmp
cmp
adc
cmpl
aas
mov
jle
push
jb
ret
push
mov
lods
xchg
pop
cmp
mov
pop
xchg
cltd
cs
enter
pop
mov
stc
cs
sarl
loope
lock
mov
sub
movhps
out
dec
mov
xchg
cmp
orl
mov
rcll
es
loope
test
inc
repz
and
loope
jnp
aad
bound
mov
scas
stos
ja
mov
pop
and
pop
xchg
push
mov
mov
cmp
push
and
ljmp
ret
mov
fldl
mov
testb
push
sub
push
xor
pop
mov
mov
jecxz
data16
sarb
arpl
mov
adc
adc
cmp
mov
jo
mov
cli
shrb
pop
iret
inc
ljmp
aam
pop
sbb
nop
sahf
fsub
andb
pop
ljmp
mov
inc
popf
arpl
xchg
js
in
cmp
adc
adc
mov
jno
sti
imul
mov
nop
xchg
leave
es
push
popf
rcrl
ljmp
xchg
jle
int
sbb
insl
bound
or
es
out
mov
xchg
fistpl
addr16
int3
iret
lret
in
lcall
lock
jnp
cli
jbe
xor
mov
fwait
rcrl
pop
sbb
xchg
inc
orps
daa
fisubrl
mov
lock
enter
pop
cmp
xor
outsl
lret
xor
movaps
cmp
push
dec
insb
repnz
cli
sub
jb
mov
mov
popa
dec
inc
pop
ljmp
mov
and
test
imul
sub
test
push
or
sbb
pop
jge
mov
add
scas
pushf
dec
loope
sub
mov
inc
shll
mov
aam
add
aaa
jmp
pusha
cmpl
cld
sub
leave
jne
cmc
popa
xorb
lds
dec
mov
sahf
mov
lret
or
cmpb
push
cmp
jno
sub
adc
sbb
ror
mov
mov
out
mov
outsb
pop
push
xor
shlb
into
aam
call
lods
or
pop
fcmovu
jae
add
push
rcrl
lahf
int3
rcrl
mov
xor
lods
or
sbb
xchg
adc
xchg
mov
xchg
mov
outsb
xchg
idivl
jmp
adc
test
add
sti
adc
iret
stos
lahf
ds
push
xchg
sbb
mov
push
loopne
sbb
mov
or
sub
xchg
adc
xor
and
mov
jno
lcall
and
sti
loop
add
fwait
xor
jbe
scas
cmp
cs
stos
mov
dec
adc
imul
pushf
and
sbb
mov
adc
movsl
sbb
mov
iret
mov
xor
push
mov
or
test
jecxz
xor
shrb
pusha
in
jae
lret
nop
mov
lret
add
and
jbe
sahf
enter
into
and
in
or
insb
mov
mov
xchg
adc
jno
sub
mov
lods
cmp
imulb
adc
test
stc
negl
add
cmp
inc
adc
leave
pop
addl
jb
scas
icebp
sbb
mov
jbe
scas
pop
jg
fdivrp
jp
adc
push
repz
push
lods
push
push
or
fnstsw
cmp
inc
mov
jg
adc
dec
dec
pop
test
jbe
mov
mov
xchg
sbb
cmp
das
push
cld
out
arpl
mov
int3
sub
rorl
loop
mov
out
stos
adc
and
mov
or
push
jp
jno
fxch
data16
pop
adc
mov
cmc
mov
shlb
mov
out
pop
ljmp
and
xor
mov
mov
push
jp
sub
add
in
mov
dec
xchg
in
sub
fwait
jmp
cwtl
jo
cltd
mov
pop
aam
add
inc
cmp
sahf
sbb
xchg
fisttpll
xchg
dec
ljmp
cwtl
push
sub
icebp
jno
ljmp
mov
outsb
scas
ljmp
daa
neg
fdivr
test
sbb
push
test
sub
mov
lahf
dec
fcoml
in
mov
cmp
stc
push
push
call
test
inc
into
mov
dec
rclb
repz
jns
push
cmp
jl
sbb
inc
shll
iret
int
and
imull
ss
inc
xor
repnz
push
adc
add
ljmp
jo
xchg
inc
out
aas
mov
inc
or
xor
mov
int
lcall
sbb
sub
push
dec
lea
mov
mov
sbb
mov
push
sti
mov
shll
orb
mov
add
adcb
imul
mov
push
jp
or
sub
add
jmp
out
cmpsl
repz
xor
push
and
xchg
pop
fsubl
push
inc
fcmovnbe
cmp
push
mov
in
aas
cld
arpl
jle
pop
add
leave
stos
lea
push
pop
push
mov
add
dec
jno
lods
insb
test
imul
sahf
cld
mov
jns
test
mov
scas
cmp
aaa
jecxz
pop
mov
in
sarl
loope
sub
std
adc
fcomps
cwtl
lret
jbe
subl
sub
les
adc
inc
inc
fists
sarl
lret
push
cmc
push
dec
dec
cmc
cmp
call
lock
cmpsb
sub
push
stos
cld
dec
popf
adc
cmp
popa
adc
jbe
jl
es
push
jbe
push
push
out
mov
or
ret
imul
in
add
test
jle
insb
inc
sbb
or
inc
aaa
inc
push
sub
jle
jns
std
jns
pushf
jnp
ds
push
cmp
mov
and
or
cmp
inc
loope
fistpll
jp
fwait
mov
std
mov
scas
add
xorl
lods
imul
divb
mov
xor
push
popf
mov
sbb
icebp
je
pop
dec
sahf
push
jl
insb
cmp
sbb
jle
mov
mov
mov
pop
push
hlt
mov
dec
int
popa
pop
adc
aam
pop
mov
adc
idivb
xor
sub
mov
xchg
clc
sub
mov
repnz
adc
sbb
je
scas
pop
out
or
mov
stc
repz
out
add
ds
dec
dec
mov
ret
pop
push
push
out
nop
jnp
pushf
pop
mov
je
int
jno
push
jp
xorb
mov
rclb
pop
sub
arpl
bound
xchg
rclb
movntq
fmull
jb
cs
repnz
push
cmp
mov
jl
mov
aad
adc
cmp
mov
popf
ret
pusha
mov
jno
or
xchg
cmp
stos
cmp
sbb
or
stos
inc
lret
bound
aad
dec
xor
mov
imul
mov
daa
push
sbb
jle
xchg
xchg
das
sub
nop
and
jmp
push
mov
and
sub
insl
test
and
movsb
mov
in
jae
sbbb
mov
xchg
or
hlt
mov
aas
es
std
mov
sti
fnstsw
aad
repz
nop
mov
or
lea
push
push
das
push
iret
inc
xchg
mov
frstor
cltd
add
jge
ljmp
mov
int
sub
sub
mov
out
bound
pop
jle
test
mov
xor
ret
inc
adc
sbb
mov
cmp
leave
repz
psubw
nop
push
mov
add
cmp
orb
fidivrs
mov
xchg
fwait
lods
out
sbb
pop
cs
push
and
cld
adc
popa
mov
test
sub
push
mov
jmp
loopne
aam
sarl
dec
sbb
mov
fwait
mov
or
mov
mov
shrb
icebp
fwait
jge
sbb
daa
pop
fucomi
jae
cmp
push
cmp
cs
inc
notw
jg
lcall
or
insb
add
mov
aam
mov
ret
mov
testb
or
in
enter
lahf
xbegin
negl
das
addr16
insb
mov
mov
pop
mov
jl
and
mov
cmpsl
lcall
pushl
inc
ret
pop
xchg
les
pop
jb
mov
cli
test
pop
pop
adc
pop
dec
and
mov
inc
aas
notl
inc
int3
insb
sub
and
mov
in
mov
xchg
sub
loopne
add
jae
xchg
sub
mov
push
aad
sbb
or
xor
loop
imul
les
sahf
dec
cmp
imulb
stc
xor
sbb
mov
push
adc
dec
lahf
fiaddl
mov
push
ja
fucomp
mov
mov
dec
mov
scas
xchg
pusha
test
gs
icebp
movb
add
jno
pop
jmp
ljmp
or
and
daa
and
and
mov
shrb
mov
lret
adcl
mov
outsb
sbb
je
mov
bound
fwait
inc
pop
or
add
jge
fwait
aam
lcall
mov
insl
icebp
push
cmp
mov
sub
jno
cmpsl
lret
mov
push
mov
sub
inc
movsb
pushf
repnz
cwtl
les
pop
pop
jge
out
mov
popa
ret
cmp
add
dec
xor
shl
xorb
jecxz
aas
or
sub
xor
test
xlat
or
fcoms
dec
ja
icebp
mov
cmp
je
adc
out
out
push
decl
stos
or
ret
mov
repnz
or
sub
pop
add
pop
push
fldenv
out
mov
xlat
sbb
int3
mov
les
insl
mov
pop
aam
jp
pop
cs
push
xor
and
lock
adc
push
push
outsb
insl
in
mov
push
push
lock
inc
add
into
std
adc
adc
imul
lock
and
jns
hlt
mov
dec
pop
adcl
loop
pop
and
sbb
or
mov
roll
sub
cmp
push
faddl
push
mov
insb
or
sti
xchg
cld
cld
in
mov
popf
mov
lret
add
idivw
out
mov
sub
test
jns
outsb
cwtl
sbb
pop
jp
xor
push
pop
scas
add
xchg
adc
dec
inc
iret
jns
jecxz
insl
popa
mov
bound
out
jmp
leave
fisubs
sbb
xchg
push
inc
leave
sbb
push
rol
push
ja
push
gs
cld
lods
into
fistps
in
mov
pop
cltd
test
sbb
lock
fisttpll
inc
pop
mov
add
or
es
test
faddl
mov
mov
loop
pop
sti
xchg
or
scas
pushf
movl
mov
out
ss
sbb
xchg
mov
mov
sbb
cmpl
sub
ret
dec
insl
push
into
loopne
movsb
push
mov
or
push
cmp
mov
cmp
cmp
jbe
aad
test
lock
popa
test
cli
lock
sbb
sub
fistps
nop
addr16
mov
mov
adc
push
lods
and
pushl
nop
sub
call
in
fnstsw
mov
fdivs
mov
loopne
sub
xor
mov
jg
push
pop
pop
cmp
nop
pop
pop
adc
inc
popa
jp
xchg
adc
push
dec
std
rcl
cmpsl
popf
mov
pop
or
mov
mov
push
xor
jo
dec
and
test
sbb
xchg
fstpl
mov
mov
pop
adc
ljmp
test
push
adc
pop
jg
les
push
outsl
jp
mov
or
sbb
pop
mov
int3
daa
fmull
xor
aas
mov
mov
inc
movsl
or
jle
push
push
add
push
adc
loopne
hlt
mov
dec
popf
sbb
in
fwait
xor
push
push
and
push
cs
lret
clc
mov
stc
push
xor
mov
mov
jle
xchg
mov
push
int
pop
jnp
das
ljmp
fucom
push
loop
std
cmp
movl
or
cmp
jmp
pop
inc
stos
pop
in
pop
scas
adc
xchg
and
sti
adc
push
pop
pop
xchg
jae
push
push
dec
fmul
mov
mov
xchg
or
add
in
into
inc
fisttpll
jae
adc
adc
or
dec
addr16
xor
push
pop
imul
testb
jmp
inc
dec
sbb
sbb
loope
pushf
call
stc
mov
push
pop
test
lcall
dec
jbe
jno
mov
and
mov
stos
dec
push
xor
into
xchg
ss
cmp
push
pushf
cwtl
push
or
jle
mov
adc
pop
dec
sahf
out
xchg
mov
push
nop
pop
arpl
xchg
dec
scas
jno
aas
mov
out
and
divb
shrb
in
cwtl
push
sub
inc
jns
cld
xor
mov
pop
jbe
int
adc
in
pop
xchg
jge
xchg
adc
stos
push
xchg
popl
mov
mov
mov
outsl
ds
lods
xlat
inc
push
mov
pop
sbb
lods
int3
xchg
mov
add
inc
lock
loopne
mov
insl
mov
mov
jno
add
ja
jo
xchg
sub
push
rcrb
inc
ret
jae
fldl
and
and
fs
outsb
jno
lds
pop
jb
sarb
xor
inc
sarl
fsubl
lret
shll
cmp
pusha
sbb
jne
xorl
clc
out
push
xchg
mov
xor
sub
popa
cmpsb
adcb
push
add
call
jae
jl
out
jp
jbe
pop
mov
cmpsl
dec
ja
ljmp
pusha
cwtl
push
rorl
sub
lret
cld
jle
dec
loope
cmpsl
stos
adcb
bound
rorb
jno
fsubrl
mov
dec
inc
push
dec
in
cmp
cmp
jle
lock
cmp
mov
in
sbb
mov
imul
xor
icebp
jbe
cmp
or
roll
mov
mov
sub
jmp
or
stc
insl
xor
cmp
test
jmp
popa
andb
add
add
cmc
in
sbb
rolb
mov
sarb
inc
add
cmp
pop
das
push
mov
in
sub
inc
push
rcrl
pop
rcrl
rcrl
aam
hlt
cwtl
pop
adc
fwait
mov
icebp
mov
xor
ret
adc
mov
sub
xor
jecxz
xor
dec
lahf
outsl
jp
ret
stc
scas
or
adcb
jno
fcompl
fdivs
xlat
aad
inc
adc
mov
lods
sbb
pop
mov
mov
mov
add
bound
push
mov
sub
inc
push
pop
sbb
clc
dec
cwtl
mov
in
pop
adc
lods
dec
sbb
js
xchg
sub
push
lret
sbb
mov
mov
push
shrb
mov
mov
rolb
in
sbb
xchg
mov
loopne
loope
ret
mov
out
inc
fwait
jmp
insl
lods
dec
fcoml
stos
rorb
xchg
leave
in
test
outsb
cltd
or
lods
mov
inc
sbb
ss
jbe
stos
mov
sub
mov
xchg
jnp
cmpsl
mov
js
lods
xchg
sbb
roll
aas
adc
sbb
in
push
mov
aas
dec
test
adc
icebp
pop
lahf
ds
mov
insl
dec
push
sbb
cwtl
or
ss
js
mov
int
cli
into
cmp
aad
jmp
xchg
daa
jno
out
mov
repnz
shll
pop
adc
cwtl
lahf
repnz
mov
loop
mov
ds
and
lds
and
jns
in
push
hlt
jmp
jne
mov
lods
aas
popf
xchg
xchg
ss
cmpsl
ret
sbb
and
mov
pop
lods
xor
sub
jp
aaa
hlt
dec
fwait
scas
negl
outsl
aam
xor
cltd
push
adc
leave
and
push
inc
in
xchg
lods
inc
xor
into
call
mov
inc
orl
into
pop
and
cmp
pop
sub
and
push
mov
lret
xorl
add
roll
outsb
orps
xchg
inc
mov
mov
fsub
adc
stc
int
mov
pop
xor
movsl
lret
mov
dec
or
mov
in
add
ret
iret
jbe
mov
inc
inc
jo
sbb
dec
dec
into
enter
in
sbb
cmp
xchg
add
data16
lds
dec
gs
adc
popf
add
adc
clc
pop
jae
mov
out
shrb
iret
dec
add
sbb
lcall
jbe
push
in
fdivrs
dec
jne
in
pop
aas
push
mov
sbb
jl
test
and
mov
notb
pop
cmp
test
or
and
addb
sub
inc
stos
scas
push
ja
or
sub
test
jbe
xor
fldt
pop
push
add
loop
loopne
jmp
mov
inc
push
xor
loop
test
sbb
cmp
mov
or
xor
int3
push
sbb
push
int3
int
scas
movsl
mov
pop
adc
mov
rol
aad
cmpsb
push
rolb
ds
addr16
sbb
mov
aaa
mov
stos
aad
mov
mov
xchg
xchg
and
mov
mov
pop
das
mov
shlb
mov
mov
aad
or
aam
dec
data16
pushf
xchg
jb
adc
addr16
jmp
xor
xor
cwtl
dec
fwait
jmp
out
jg
dec
insl
leave
jb
sub
stc
xchg
inc
hlt
fwait
andb
jp
and
pop
movsl
mov
xor
xchg
enter
jbe
and
sar
aas
movsb
mov
mov
adc
mov
xor
rcr
lods
pop
add
fwait
sbb
lret
add
mov
into
push
stos
jne
adc
mov
cld
setge
lahf
sub
adc
xchg
ljmp
mov
sti
sbb
mov
xchg
iret
shlb
mov
das
and
sub
pop
mov
add
jnp
cs
push
pop
mov
pusha
repz
cmpsb
push
lgs
xchg
outsl
xor
and
adc
jmp
in
sub
jns
mov
mov
cltd
xor
xlat
cmc
test
mov
mov
cmp
fstl
pop
bswap
pop
sub
add
dec
inc
pop
mov
push
into
ret
lods
je
push
push
lcall
leave
jl
xor
leave
xor
mov
js
mov
jno
sbb
xchg
xchg
cmp
mov
cmp
push
xor
addr16
insl
jae
add
jne
jnp
mov
jo
fsts
ljmp
inc
xchg
outsb
orb
mov
outsl
hlt
pop
cmp
pop
pop
or
dec
and
mov
stos
cmp
xchg
xor
push
add
inc
punpcklwd
mov
flds
cltd
test
ficomps
jge
int3
int3
lods
mov
scas
jno
into
pop
sbb
movsb
dec
cs
nop
fnstenv
mov
rclb
insb
dec
push
xchg
shl
and
int3
flds
in
dec
xchg
or
pop
push
dec
stos
stos
aas
xchg
mov
mov
mov
pop
lods
mov
loop
pop
push
sbb
ss
ljmp
xchg
cld
jns
inc
pop
pop
push
push
and
dec
scas
sbb
push
imul
and
orb
aaa
pop
psubb
outsl
or
es
ret
xchg
push
inc
in
mov
cmp
in
test
jno
sahf
fnsave
fistpl
popl
out
and
pop
xchg
sti
push
mov
out
xorl
sbb
daa
push
dec
mov
scas
push
xchg
mov
pop
insl
enter
mov
pop
mov
mov
jecxz
jmp
icebp
test
push
ljmp
sbb
pop
lret
rcll
jmp
cwtl
nop
cmpsl
fsubs
test
push
scas
dec
lods
int
cmpb
inc
out
lret
rorb
ss
or
fstpt
inc
sbb
mov
popa
mov
jp
lods
sub
jns
scas
cmpl
add
idivl
cmovne
or
xchg
adc
sbb
add
mov
clc
rclb
pop
push
scas
jmp
imul
push
add
ljmp
mov
cmp
and
pop
popl
ret
ret
xchg
rcll
mov
push
adc
xchg
mov
fnsave
jge
in
inc
add
mov
test
rolb
jg
or
or
mov
repz
es
pop
stos
and
jecxz
mov
push
sub
or
test
mov
cmpsl
sbb
pushf
pmaddwd
cmp
daa
mov
inc
repz
fcmovb
sar
in
pusha
loop
das
sub
aas
and
mov
popa
sbb
xor
or
incb
rorl
jmp
insb
lods
add
xchg
test
stc
nop
int3
test
clc
mov
mulps
stos
mov
repz
pop
pop
xlat
fildll
xor
xchg
addl
fcmovne
push
insl
dec
push
loop,pn
sub
add
inc
in
sub
negb
outsb
loope
inc
out
loope
and
jp
sahf
movsb
mov
jns
in
mov
adc
rolb
insl
inc
mov
dec
loopne
lcall
cmp
mov
nop
pop
das
lods
pop
sbb
cmp
sub
inc
xor
pop
cltd
pop
push
fimull
and
hlt
in
cli
aaa
mulb
enter
jecxz
insl
xchg
int3
cld
fsubp
rorl
imul
insl
jmp
fisttpl
pusha
jns
pop
aam
cmpsb
sbb
or
je
jp
inc
xchg
sahf
in
xchg
cs
sbb
in
push
lret
in
mov
sbb
cli
xchg
orl
mov
mov
dec
xchg
sub
and
cmp
test
aad
stos
push
jo
mov
jle
cwtl
mov
sbb
and
adc
push
jle
ret
mov
mov
out
mov
aad
mov
mov
mov
test
out
stc
dec
cmp
xor
test
stos
rorb
xor
nop
jne
jb
and
push
insb
push
dec
pop
leave
push
outsl
cs
loop
add
lds
or
inc
mov
mov
lret
jecxz
cltd
sbb
test
mov
es
in
loopne
jl
jb
mov
in
cmpl
push
pop
or
outsl
xor
mov
addr16
ja
mov
cmp
push
add
bound
jae,pn
cmpsb
mov
addr16
repz
xor
out
int3
and
cmp
mov
mov
and
mov
jne
jbe
addr16
testl
pop
sub
repz
int3
adc
mov
cs
inc
xchg
aad
out
and
jg
imul
xor
mov
sub
movsb
mov
mov
lret
inc
out
popf
inc
push
scas
cmpl
sbb
pop
and
inc
das
jno
in
push
jae
fxch
sbb
int3
shll
aad
es
push
lret
pop
pusha
mov
jl
push
sub
movl
shrl
repz
test
lahf
push
push
iret
data16
sahf
jne
lods
les
mov
nopl
sub
jecxz
sbb
test
les
movsl
lods
repz
push
aam
and
inc
jp
inc
out
mov
daa
mov
fbstp
and
rolb
xor
dec
scas
hlt
xchg
xorb
or
jo
inc
adc
add
mov
sbb
xchg
xlat
adcl
std
mov
sbb
sbb
pop
mov
push
aam
mov
rcrb
lcall
insl
lret
adc
cmp
sbb
imul
jmp
bt
cs
xor
pop
outsl
ret
inc
pusha
xchg
xchg
dec
lods
out
push
int3
test
cmp
add
das
fidivrl
sti
mov
cmc
sbb
adc
fisttpll
testl
inc
cmp
and
push
and
mov
into
mov
or
mov
cmpsl
mov
push
adc
mov
cmp
sub
hlt
lods
push
cs
pop
pop
jno
roll
icebp
sti
in
ficompl
in
aad
lcall
jne
bound
xrelease
sarl
test
sub
add
dec
mov
clc
mov
lret
mov
fidivrl
mov
jp
movl
pop
mov
cmp
loope
shll
pop
andl
jo
aad
inc
pop
mov
ja
fidivrl
mov
lock
jl
cltd
outsl
mov
stos
mov
lret
cmpsl
imul
push
es
inc
or
mov
and
pop
scas
push
lret
jno
movsb
data16
mov
inc
push
xchg
das
pop
aas
divl
mov
and
fimull
fistl
mov
je
cmc
lods
fstpt
jo
sub
insb
loope
jle
mov
adc
push
push
add
es
add
xor
loope
xchg
lods
cli
push
and
fcomps
and
cmp
lds
sub
mov
aad
fcoms
mov
mov
mov
add
xor
mov
shll
es
fdivr
pop
lret
movsb
or
lea
pop
sbb
jge
lock
stc
cwtl
lahf
leave
add
in
jne
mov
pop
push
jge
push
mov
sbb
push
xchg
jmp
mov
push
xchg
ss
jno
jecxz
imulb
in
add
add
mov
or
cmp
outsb
sbb
add
adcb
mov
mov
pop
sub
mov
mov
test
nop
push
clc
cmp
int
mov
mov
fmuls
mov
in
shll
add
cmp
push
sti
rorb
in
rolb
mov
outsb
or
mov
cmp
test
mov
and
loopne
inc
pop
dec
rolb
adc
adc
test
pop
pop
sbbl
outsb
xor
add
mov
dec
arpl
bound
aaa
push
add
and
cmpsb
adc
jmp
dec
lret
test
stos
xchg
shlb
ret
push
mov
imul
sbb
add
imul
xchg
fdivl
fistpll
mov
loop
and
lods
popa
adc
addb
sahf
jmp
addr16
xchg
xor
mov
testl
aaa
pop
pusha
stos
pushf
mov
js
push
stos
sbb
movswl
xchg
pop
fisubl
enter
adc
jbe
or
mov
cmp
addr16
test
dec
cmp
idivl
ljmp
and
scas
jl
test
inc
insb
or
rcrb
std
and
in
mov
jmp
jae
in
inc
test
cmp
and
mov
aaa
and
ja
cmp
lods
pop
or
jne
mov
mov
hlt
scas
mov
push
fsubs
pop
outsl
add
rcrl
mov
xchg
mov
inc
mov
pop
in
inc
pop
pop
dec
sbb
or
jmp
ljmp
gs
mov
bound
iret
mov
clc
or
or
xor
in
push
repnz
lahf
ret
lret
repz
dec
xchg
iret
insb
out
fisubl
xchg
gs
or
rorl
mov
lahf
jae
sahf
test
pop
je
push
in
or
sub
jne
addr16
pop
lods
ja
insl
push
jno
faddl
mov
incl
loopne
xchg
or
push
insb
add
inc
mov
jp
inc
js
cmp
xchg
mov
cld
xchg
xchg
testb
fidivrl
xor
aaa
sub
lcall
add
pop
push
cmp
add
subl
rcrl
xchg
je
jl
mov
into
ror
icebp
insb
daa
xor
lea
xorl
lcall
mov
xchg
xchg
mov
xchg
push
fnstcw
push
aas
and
add
jecxz
sub
xchg
mov
cmc
lret
mov
fimuls
or
test
xor
inc
popf
or
inc
jge
rorl
in
repz
push
ds
sub
lods
inc
add
xchg
fnstcw
bswap
mov
aad
sbb
pop
inc
adc
shll
sbb
mov
pop
js
stc
nop
xor
repz
xor
in
inc
fisubrl
in
mov
sahf
call
sahf
inc
ds
test
adc
or
sub
mov
xor
or
mov
adc
sub
mov
inc
sbb
inc
mov
bswap
xor
cltd
je
inc
mov
icebp
jle
js
aas
iret
enter
jle
sub
in
or
mov
sub
xchg
pop
xor
push
adc
imul
push
outsl
scas
mov
pop
xchg
cltd
cwtl
loop
xor
pop
dec
enter
inc
jnp
xchg
pusha
aad
xlat
scas
xchg
nop
cmp
dec
hlt
push
push
lret
dec
inc
inc
test
push
das
stos
test
pop
fdivrl
mov
mov
mov
cmpsl
mov
push
cmp
xchg
mov
scas
insb
xchg
jns
pop
lds
iret
in
pop
sbb
les
push
dec
jl
or
scas
xchg
sub
push
cmpsb
popf
int
negl
outsl
scas
inc
push
out
out
shll
daa
loopne
xchg
sub
loopne
fists
add
lods
jmp
nop
xor
pushf
adc
xchg
sub
jg
mov
push
fistl
xor
jns
aad
int
dec
push
jle
inc
jg
mov
cmp
mov
lahf
cmpsb
lea
cmpsl
cltd
ljmp
xchg
push
pop
je
jbe
push
mov
inc
pop
jnp
push
push
xor
dec
jmp
mov
or
or
mov
out
inc
out
jbe
insb
adc
mov
push
dec
and
and
inc
repz
loope
popf
pop
push
stos
insl
aas
cld
xchg
ret
test
dec
ds
adc
int3
cmp
or
or
adc
jae
out
sbb
inc
sbb
push
add
movsl
gs
push
les
loop
inc
loope
ja
or
mov
lods
cmp
xlat
stc
mov
cmp
cld
jnp
in
loope
adc
inc
mov
ret
lea
add
jno
lds
jne
stc
cld
fwait
add
pop
and
dec
aad
dec
cmp
in
adc
fwait
pop
fsts
fstps
frstor
mov
cmp
mov
cmc
sbb
or
jae
addr16
xchg
mov
int3
xchg
xchg
unpckhps
fst
mov
sub
fyl2x
adc
and
gs
push
and
jg
fs
pop
xchg
cmp
jb
add
out
add
sarl
adc
int
xor
ret
inc
pop
pusha
addb
scas
imul
aam
out
adc
or
and
jl
dec
jae
aad
inc
or
xchg
push
es
das
iret
std
sbb
cmp
sbb
and
dec
adc
or
add
filds
adc
notb
je
xor
mov
lock
pop
out
rcl
fstpt
xchg
mov
mov
cmp
xchg
mov
mov
fsubrl
push
jne
sub
jp
mov
cmpb
push
sub
and
jo
scas
jle
cs
mov
jne
cmp
daa
xchg
in
outsb
fdivrs
push
and
rolb
shlb
sbb
or
int
inc
mov
fwait
push
je
cltd
shl
inc
sahf
test
mov
mov
test
ret
jl
push
out
aam
mov
ud2
dec
popf
pop
das
pop
mov
inc
mov
std
jmp
mov
rcrl
pop
pusha
mov
cmp
int
or
and
cmp
mov
loope
loope
sbb
xchg
mov
rcll
out
push
sbb
sub
jg
dec
mov
in
xorb
rcll
iret
dec
cmc
pushf
jg
rclb
cmp
pushf
in
popf
add
iret
and
mov
shll
fs
push
faddl
xorl
or
sub
jne
test
stos
pop
mov
sbb
cmp
xchg
pop
and
push
add
mov
mov
lock
add
dec
cmp
or
cmp
push
mov
cmpsl
push
sub
lea
xor
andb
gs
arpl
mov
cwtl
xchg
imul
pop
pop
fisubrs
inc
push
or
xchg
adc
loope
imul
push
cmp
repnz
enter
lcall
add
and
int3
movsl
mov
inc
mulb
mov
in
sbb
cmpsl
out
or
pop
pushf
sbb
lock
popf
out
mov
fcompl
call
xlat
sub
leave
out
xchg
add
inc
adc
gs
pushf
inc
cmc
stc
cltd
push
dec
pop
hlt
inc
adcl
add
xor
cmp
icebp
inc
jl
mov
sub
xchg
shrl
or
push
subl
mov
cmpsl
mov
hlt
pusha
push
pop
test
push
inc
mov
out
pop
add
inc
leave
out
js
stc
pop
lods
iret
inc
fdivp
and
arpl
fnstcw
pshufw
ja
rcrb
cltd
aam
jns
sbb
mov
je
push
lods
cmp
inc
mov
dec
add
aas
rorl
sbb
add
lods
or
or
out
incl
rcll
ret
mov
mov
and
mov
out
aaa
mov
aad
xor
shlb
rcrb
fcmovnb
ficoml
cmp
jp
pop
jecxz
xchg
in
in
js
mov
xor
xor
lret
xor
in
dec
pop
cmp
lret
imul
ds
in
insb
cmpl
ja
cltd
xor
fldl
sub
notb
shlb
add
mov
xor
push
sbb
popa
lahf
daa
mov
mov
ss
and
fwait
ja
sub
xchg
dec
xchg
cmp
mov
les
mov
mov
sti
lret
cltd
adc
jbe
fmuls
sar
inc
leave
mov
std
and
rcll
rorl
fimuls
or
mov
pop
add
mov
loop
pushf
arpl
push
fwait
iret
push
sti
sub
push
add
ret
out
dec
movsb
dec
adc
fcmovnb
lock
pop
cld
fxch
dec
int3
je
ljmp
xor
pop
or
cltd
lds
or
sarb
stos
dec
test
pusha
mul
dec
dec
arpl
test
das
and
push
outsl
add
imull
and
incb
outsl
cli
mov
rolb
pop
dec
sub
fsubl
les
adc
adc
push
scas
loope
pop
jmp
sub
mov
mov
es
pop
out
stos
fstpt
lcall
fbstp
xlat
mov
out
fs
pop
adc
ljmp
mov
or
rorl
addr16
push
scas
xchg
mov
lcall
call
cmp
fs
push
xor
sbb
mov
adc
divl
mov
cltd
cmp
aas
fwait
repz
in
shll
pop
loope
scas
cmpsl
repz
sbb
inc
xchg
push
push
stos
add
mov
jg
xchg
jne
andb
jmp
loopne
rcll
aas
imulb
xor
cmpsb
bswap
fcomip
sub
cwtl
or
dec
lret
rcll
cmp
xor
push
xor
inc
insl
push
ljmp
xor
push
lret
icebp
mov
sbb
adc
add
dec
rorb
or
gs
les
int
outsl
inc
or
repz
or
rcr
sbb
aam
shll
ror
test
mov
adcb
iret
push
adc
fwait
mov
cld
into
in
aam
mov
popl
mov
clc
shld
frstor
or
and
mov
dec
cmp
push
gs
xor
lods
jbe
or
mov
sub
xchg
mov
lcall
jnp
enter
outsl
nop
rorb
or
addr16
mov
inc
or
cmp
sahf
pop
fmull
lcall
cwtl
xchg
cltd
and
dec
mov
sub
mov
mov
lahf
shlb
mov
jecxz
rcl
xchg
rcrl
loope
add
push
xor
gs
daa
repnz
daa
dec
test
mov
loopne
ljmp
mov
jp
add
js
dec
jg
jl
xchg
cmp
sub
pop
push
pop
pop
lods
fs
sub
sub
sbb
dec
dec
fidivs
xor
add
leave
inc
jno
fists
cwtl
dec
jae
dec
lcall
test
and
pop
arpl
inc
inc
sbb
mov
add
movzbl
out
fstps
adc
xlat
fisubrl
mov
xchg
sub
sub
les
insb
xchg
std
add
leave
loopne
cld
subl
outsl
or
or
adc
lahf
pslld
out
lahf
jle
outsb
mull
mov
iret
shlb
jnp
call
mov
out
push
xchg
lahf
pop
or
popf
addr16
daa
out
push
inc
cli
pop
lock
adc
mov
das
cmp
pop
push
add
inc
ret
std
mov
fstp
cmp
mov
mov
mov
test
mov
pcmpgtd
inc
mov
insl
mov
xchg
dec
outsl
mov
cmpsb
shll
popa
subb
lret
cli
idivl
mov
xchg
jg
cld
mov
push
sbb
add
mov
addb
arpl
jp
jge
vmaxps
mov
bound
sti
shrb
inc
xor
xor
xchg
xor
dec
push
pop
cld
and
scas
xchg
cs
pop
jge
ljmp
lods
insl
out
std
ja
jne
pop
inc
jmp
addr16
dec
xchg
push
jae
mov
and
adc
dec
mov
pop
imul
bound
push
xor
jl
out
lret
jo
andl
mov
jge
sbb
pop
sbb
mov
scas
insb
pop
sar
gs
shlb
inc
insl
add
in
call
jp
adc
pop
cs
sub
in
cltd
mov
xchg
xchg
stc
std
roll
sbb
cmpsl
adc
xchg
cmp
into
mov
xchg
xchg
cmp
inc
jns
aaa
mov
or
int3
cmpsl
cmp
mov
scas
arpl
mov
jo
dec
jns
rol
sbb
movsb
int3
testl
ret
and
push
jo
cltd
neg
enter
mov
lahf
pop
push
pop
or
cmp
das
or
sub
cltd
cmpsb
xchg
lock
fistpll
sub
add
mov
movsb
mov
aad
adc
and
lods
lods
dec
cmp
int
sub
sbb
xchg
mov
std
mov
mov
inc
jb
jbe
add
mov
adc
into
das
ja
sti
sbb
push
mov
push
scas
xor
jp
lea
dec
dec
repnz
arpl
pop
pop
xchg
mov
cmp
push
push
pop
in
inc
cs
xchg
push
sbb
leave
scas
lret
inc
push
mov
mov
jo
addr16
into
dec
aaa
xor
pop
sub
call
outsb
jg
cmpsb
mov
jae
mov
inc
test
xor
adc
pushf
inc
cmp
or
mov
rcrb
or
mov
sbb
xchg
aam
mov
inc
pusha
mov
mov
xchg
addr16
int
mov
sbb
push
push
fnstcw
bound
mov
sub
push
jno
sti
in
mov
popa
test
jg
sbb
ret
mov
jb
orb
pop
cmp
out
push
pop
enter
addb
adc
aam
ret
and
pop
or
push
lds
cmpsb
sbb
push
jb
cmpsl
sub
scas
out
lret
mov
xlat
outsb
jmp
ds
test
fnsave
cmc
push
cmpsb
add
push
sub
gs
movsl
aad
imul
add
outsl
push
clc
jge
sahf
cs
stos
sahf
mov
add
lcall
out
data16
inc
sar
fnstsw
repz
dec
rolb
cmp
sbb
dec
xor
add
mov
pop
jmp
sbbl
jl
jae
fcoml
hlt
addr16
iret
in
mov
out
scas
pusha
cmp
fbstp
shlb
orl
es
scas
xor
cli
xchg
lods
and
out
mov
addr16
scas
jle
lea
jecxz
pusha
mov
mov
mov
xchg
xor
and
sub
adc
lcall
imull
clc
adcb
push
or
dec
jbe
dec
ljmp
push
cli
xor
mov
sbb
mov
add
dec
xchg
repnz
inc
movsl
in
lret
xchg
out
repz
dec
dec
cmp
jmp
xchg
out
mov
scas
push
mov
insl
out
xor
or
add
inc
in
adc
mov
dec
cmp
lret
cmp
dec
imul
pop
mov
xchg
cld
clc
jg
jp
jg
iret
js
and
fcompl
test
mov
cmpsl
aad
mull
push
loope
cld
and
mov
imul
push
xchg
xor
lods
inc
mov
xchg
push
in
push
cmc
scas
aas
bound
mov
ljmp
push
into
xor
rcll
into
das
cs
ljmp
ds
mov
addr16
aad
negb
jp
popf
in
pop
inc
shlb
in
cmp
and
popf
cli
pop
das
rcrl
cmpsl
ss
xchg
jg
cmp
fstps
lcall
rorl
out
test
das
xor
mov
stos
mov
daa
addr16
mov
std
pop
popa
mov
pop
dec
lods
lods
jnp
aaa
sahf
and
xor
add
push
mov
loop
rcll
test
test
stos
dec
or
hlt
das
loope
in
mov
pop
jecxz
xor
into
data16
rcll
fwait
aas
inc
aam
mov
jle
xor
mov
pop
stc
jp
pop
sahf
push
and
cld
xchg
pop
mov
pop
mov
les
mov
jge
mov
aas
repnz
ds
push
iret
fstpt
inc
arpl
inc
push
popf
adc
cmp
out
cmp
dec
adc
cwtl
cld
pop
sbb
je
inc
mov
imull
cwtl
or
push
mov
in
dec
pop
daa
lods
mov
xchg
in
adc
push
jmp
xchg
cs
mov
daa
nop
movsl
and
cmp
lret
pop
shrb
push
adc
xorb
mov
pop
fstps
cmpsl
ffree
adc
aaa
ret
inc
push
xor
sarb
push
jle
pop
or
call
xchg
es
popf
push
iret
dec
push
stos
movsl
leave
es
jge
in
add
nop
xlat
inc
push
cs
or
or
in
pop
enter
mov
jo
mov
mov
push
mov
or
lret
pop
cmpsl
adc
fwait
int
out
rcrl
out
adc
or
fs
jb
push
mov
ss
push
mov
pop
in
jnp
nop
rorl
inc
push
shl
mov
mov
shlb
adc
out
and
cmpsl
rdmsr
pushf
mov
out
add
and
test
test
mov
jmp
mov
push
mov
or
pusha
scas
iret
mov
pop
insl
jb
call
loop
adc
or
mov
aam
mov
mov
dec
rol
push
jge
pop
or
rcrb
andb
int3
outsb
jmp
test
pop
test
jge
lret
pop
mov
insw
loop
xor
ss
shll
sub
or
sbb
in
incl
in
adc
push
jne
das
add
dec
add
push
inc
cmp
mov
sub
je
pop
adc
and
cmp
fdivp
iret
jo
cmp
aas
movntq
arpl
test
jae
cmp
sti
inc
jge
xor
testb
dec
cli
int
dec
xor
adcl
adc
lcall
and
mov
mov
shll
inc
jne
mov
sbb
ret
aad
and
fiaddl
or
std
lods
mov
test
xchg
push
pop
mov
lods
and
mov
cmpl
inc
cmpsb
aas
sar
jo
add
dec
imul
mov
aaa
cmp
sbb
push
add
sub
or
lock
mov
outsl
call
lret
xchg
mov
arpl
frstor
sub
lahf
add
cmp
sbb
mov
movsb
or
loopne
ret
dec
xchg
cmpsl
lcall
fmul
or
adc
xchg
andb
xor
loope
rclb
scas
dec
sub
mov
mul
and
lret
rolb
sub
xlat
mov
mov
loop
cwtl
ja
push
in
jg
jecxz
mov
jbe
sbbl
into
and
bound
cld
cs
xor
mov
cs
add
sub
daa
add
mov
repz
das
jp
iret
scas
stos
or
pop
mov
aas
adcb
sub
xor
or
xlat
push
pop
inc
fists
movsb
and
sub
add
jmp
out
enter
sbb
out
jg
mov
xor
aad
xchg
and
rcll
pop
xchg
xor
adc
jae
mov
sti
popf
jle
mov
xor
insb
pop
mov
mov
mov
fs
pop
fcmovne
xchg
insb
das
das
out
inc
add
pop
jg
je
mov
sahf
je
loope
hlt
dec
inc
int3
repnz
jo
das
inc
gs
test
das
jb
xchg
push
sbbb
sbb
ja
pusha
add
mov
or
stos
subb
jecxz
xor
sbb
sub
sbbl
xchg
lock
sbb
addr16
mov
dec
mov
cmc
pop
cld
xor
push
aam
add
stc
pop
mov
dec
jecxz
inc
outsb
xor
adc
adcb
mov
data16
mov
data16
ljmp
fsubl
mov
lahf
lock
xchg
bound
popa
dec
lret
outsb
xchg
enter
xchg
cmp
sub
in
into
add
mov
sbb
xor
orl
daa
or
mov
push
cmpl
mov
cld
push
xor
mov
xchg
cwtl
and
hlt
subl
pop
jb
cmpsl
dec
fwait
dec
daa
push
movsl
rcrl
icebp
pop
sub
or
add
pop
rcrl
outsb
stos
or
mov
push
call
ljmp
out
xorb
adc
sub
insb
mov
sbb
movsl
push
cmp
jno
inc
ss
nop
jne
popf
sti
fdivs
pusha
insl
mov
mov
sbb
fs
ja
inc
adc
xchg
xchg
stos
out
pushf
pop
int3
cmp
xchg
mov
jnp
out
xchg
in
or
mov
or
jb
ret
dec
adc
repz
push
in
push
les
cli
cmp
sub
xchg
sbbl
or
xchg
out
xor
mov
mov
inc
xchg
imul
sahf
in
rcll
mov
xlat
sbb
in
dec
and
or
xchg
cltd
mov
adc
jg
cmp
cmp
scas
xchg
popa
je
idivb
pop
mov
fisubl
pandn
pusha
int3
movb
pop
inc
nop
push
or
sahf
cmp
daa
loopne
adc
cmc
je
or
mov
cmp
test
leave
cmpsb
xchg
push
stos
mov
repz
adc
sub
test
mov
or
out
imul
cmp
fwait
loope
es
sbb
sub
test
jns
mov
ljmp
jnp
adc
dec
sub
add
aam
test
jecxz
fadds
mov
imul
fs
daa
fyl2xp1
pop
jae
xchg
ficompl
pop
jg
mov
stc
jno
mov
mov
mov
lds
sub
in
enter
sub
add
jbe
ret
pop
cmp
daa
mov
push
sbb
notb
rep
popa
lret
add
mov
dec
jp
test
lods
repnz
sub
lods
testl
pop
fisubrs
sub
sar
or
mov
dec
es
add
sbb
enter
mov
dec
dec
scas
sbb
scas
jge
mov
outsl
fs
cmp
mov
mov
xor
lock
dec
mov
jg
rcll
cmp
jmp
pop
out
jo
sub
lods
xor
bound
dec
add
mull
xchg
dec
outsb
aaa
roll
stc
jecxz
neg
xor
lahf
add
jl
subl
dec
and
cld
push
lret
rcl
outsb
sub
ret
xchg
inc
pushf
mov
test
xor
cmp
pop
sbb
sub
stos
mov
in
push
pop
aaa
stc
ds
or
fcom
dec
dec
fldl
popa
mov
je
fimuls
dec
test
add
roll
sbb
leave
popf
stc
cmp
push
add
jns
dec
push
int
xchg
movsl
or
insl
mov
aas
cmp
daa
adc
jecxz
push
outsl
aaa
fadds
xchg
cmp
mov
lcall
jae
adc
push
mov
sti
movsl
push
push
ja
lods
fisubl
les
iret
jp
and
push
ja
ljmp
add
iret
cmp
ljmp
ret
repz
daa
nop
pop
sbb
mov
mov
or
cs
mov
sti
jne
mov
scas
addr16
mov
and
pop
push
stos
lds
enter
xchg
xchg
inc
pop
push
fsubs
jo
jle
xchg
xlat
sub
lods
mov
push
int3
cmp
lret
lods
dec
insb
js
pushl
outsb
or
cmp
das
xor
inc
dec
xor
cmp
loope
pusha
cmpsb
jge
or
dec
gs
dec
je
inc
inc
or
or
loope
ds
repz
leave
pop
insb
lods
adc
cmp
cmp
mov
std
jbe
ret
test
aad
sub
jge
dec
decb
sub
test
mov
stos
dec
or
push
mov
in
imul
and
pop
into
cmp
outsl
rcr
fwait
shrb
push
pop
cmp
pushf
sbb
cs
adc
xchg
popa
cld
add
adc
test
fstpt
jbe
xchg
sbb
iret
add
cs
dec
jmp
adc
sub
sbb
xor
jge
ficoml
std
jle
push
into
int
stos
int3
es
mov
push
dec
ret
lea
cmp
clc
dec
movsl
inc
pop
icebp
fxch
ss
xchg
jl
cld
insl
mov
out
addr16
dec
mov
sub
pop
jb
rclb
jb
shr
popf
loop
aam
xchg
jnp
imul
pop
test
roll
ja
ds
push
roll
cs
sbb
jmp
mov
mov
mov
mov
dec
cmp
sub
ljmp
stc
xor
stos
adc
mov
push
inc
fdivr
pop
inc
jne
inc
bswap
push
frstpm(287
into
jns
cmpsb
mov
xchg
jb
cmp
sbb
loopne
cmp
test
js
mov
sub
xchg
pop
xchg
in
dec
sbb
bound
push
and
fisubrl
sbb
pushf
xor
xor
add
popa
jle
fadds
push
test
and
sarl
leave
cmp
std
testl
ret
mov
cs
out
pop
fs
test
jbe
sub
and
fdivl
xor
cmp
std
loopne
push
pop
aam
jg
xor
jmp
into
add
bound
jb
jmp
out
popa
cmpl
or
dec
outsb
mov
mov
mov
jns
mov
xchg
or
negb
lods
and
dec
es
sbb
out
ja
mov
roll
inc
adc
push
inc
xor
xchg
hlt
adc
push
lods
inc
cmp
mov
lock
testb
fistpll
inc
inc
enter
idiv
push
inc
fldt
adc
adc
dec
sarb
sbb
aaa
bound
pop
dec
mov
xor
icebp
jo
xor
repnz
pop
stc
jo
cmp
movsb
or
leave
inc
adc
out
mov
sarb
jl
test
in
pop
pop
or
adcl
js
mov
xor
fsubrl
mov
mov
jp
roll
adc
add
js
fidivs
into
push
jb
mov
cmp
cmpsl
adc
pop
outsb
and
mov
dec
push
cli
mov
movsl
xchg
cmpsw
aas
jle
movl
cmp
loopne
mov
clc
sub
test
cld
xor
mov
scas
vmwrite
push
js
pop
fbld
mov
loopne
add
popl
mov
push
xchg
out
dec
scas
popf
mov
test
les
jg
xchg
xchg
add
scas
sbb
adc
xchg
inc
xor
stos
or
clc
out
sub
mov
and
xor
jmp
sbb
pop
fsubr
out
mov
movsl
xor
and
and
lods
test
and
test
mov
or
call
cmc
jl
sbb
and
push
dec
push
fisubrs
xorl
cmp
mov
adc
into
xchg
xrelease
jecxz
aaa
loope
inc
add
cmp
sahf
pop
insl
insb
push
mov
call
sbb
adc
loop
sbb
das
pop
cmp
adc
cmp
and
jle
test
xchg
sub
test
jge
js
cmc
mov
mov
and
loop
or
outsl
test
jecxz
jg
andl
cmp
arpl
es
xchg
test
push
jp
pop
push
cmp
mov
xor
aad
loope
xchg
pop
in
movsb
and
inc
or
int
test
mov
dec
pop
loop
dec
notl
dec
sub
fbld
shufps
and
jnp
or
xchg
xchg
call
imul
sbb
sbb
dec
out
aad
test
scas
popf
in
outsl
addr16
inc
cmpsl
test
or
loop
aas
mov
inc
les
xchg
add
xchg
adc
adc
mov
xchg
xlat
xor
inc
adc
addl
sbb
sub
test
ja
add
cmp
loopne
loop
ljmp
sub
cmp
mov
inc
int
movsl
xchg
hlt
mov
sbb
pop
inc
adcb
cmpsb
mov
fnstsw
xchg
mov
xchg
out
pusha
psrad
push
or
out
outsb
inc
sbb
adc
jo
push
push
cltd
cmpsb
cmp
push
sbb
ljmp
in
xchg
test
xchg
lcall
push
in
pop
movsl
cmc
push
jbe
incb
inc
adc
pop
repz
inc
lret
ss
jne
ret
es
dec
push
in
imul
xchg
pop
jae
rcrl
test
sti
fdivr
test
sub
rclb
loopne
ss
bound
jle
mov
sub
mov
jl
int3
movsb
dec
add
sbb
das
xor
movsb
shrb
ret
mov
sub
sarl
insl
repz
xchg
stos
jae
jb
les
popa
div
jl
jecxz
je
leave
stos
or
fadds
stos
mov
mov
in
sub
adc
inc
xchg
data16
dec
xorl
mov
enter
icebp
and
mov
cmc
gs
adc
sbb
adc
sbb
cs
cmpsb
jo
dec
jmp
inc
adcb
or
sub
jo
dec
clc
repnz
popf
push
jb
mov
xor
sbb
mov
pop
pusha
fisubrs
or
movsl
popa
ljmp
cmc
adc
inc
sbb
xchg
push
jae
mov
adc
adc
out
sahf
jg
pop
outsb
mov
dec
push
and
ds
ljmp
rclb
aas
mov
imul
sbb
add
and
mov
movsb
lock
fmul
adc
xor
out
xchg
bound
mov
push
mov
pushf
mov
push
pop
xor
jmp
dec
mov
pop
or
lds
mov
mov
cmp
sbb
or
add
xchg
push
cli
pop
push
mov
fsubrs
test
loop
and
leave
mov
and
fists
adc
pop
sub
nop
sbb
inc
dec
ljmp
xchg
js
push
mov
cs
xchg
int
pushf
es
pop
cli
dec
cmp
icebp
lods
push
mov
lock
loopne
pop
lret
push
scas
aas
add
push
loopne
outsb
mov
mov
stos
ret
add
lea
pushf
jg
push
gs
jmp
cmp
cwtl
jg
mov
pop
fs
pop
out
hlt
in
sbb
imul
rcll
js
push
inc
jae
push
push
ds
xchg
out
or
sahf
xchg
mov
cmp
dec
jmp
inc
push
inc
push
inc
xchg
push
lret
and
int3
ret
jl
cmp
or
fs
out
adc
add
ror
jle
clc
mov
jle
mov
jae
sbb
std
push
or
xchg
lahf
stos
add
dec
sub
xchg
movsl
das
ljmp
and
fmuls
sub
lret
adc
sub
aam
mov
push
enter
lret
mov
insl
pusha
pushf
mov
push
mov
mov
sarb
pop
push
jmp
add
sbb
jo
je
lret
lods
mov
gs
xor
pop
jmp
or
ja
add
jnp
imul
push
clc
xor
icebp
fimull
gs
outsl
int
lds
sub
pop
inc
lret
inc
ds
test
adc
js
xor
inc
pop
push
notb
jecxz
xchg
stos
jno
lret
or
jmp
jae
movsl
or
out
mov
mov
xor
push
arpl
aas
mov
lea
xor
xchg
rdtsc
mov
pop
inc
push
push
xchg
pushf
jmp
add
push
fldl2t
imul
mov
inc
mov
mov
rolb
movsl
jb
ds
inc
hlt
xor
mov
push
or
movsb
lahf
push
sti
loopne
xor
xchg
mov
jmp
xlat
mov
iret
incl
pusha
mov
pop
jmp
sbbb
cld
cmc
loop
leave
and
lahf
mov
adc
movsl
mov
sti
mov
xchg
jbe
pop
mov
clc
push
jg
sub
cld
xor
jno
std
js
push
punpcklqdq
mov
cld
mov
cwtl
push
dec
cltd
cmp
push
push
clc
pop
xlat
daa
das
xor
test
push
mov
inc
fistpll
jmp
push
mov
int3
iret
add
aas
sbb
lods
mov
frstor
dec
fwait
pop
je
inc
dec
and
mov
jae
pop
push
loope
mov
sbb
xchg
aam
adc
ss
dec
jns
jle
out
rcrb
movsb
mov
jne
pop
movsb
push
jo
adc
and
sbb
and
fldenv
rcrl
cmc
outsb
push
nop
inc
sarb
addr16
aad
scas
imul
dec
leave
in
mov
mov
fistl
jbe
xlat
xchg
stos
mov
push
dec
stc
lret
jnp
sbb
push
fcmovnu
sbb
mov
push
add
cmovno
out
mov
call
mov
or
popa
and
decb
push
insl
lea
icebp
repnz
out
push
and
push
imul
push
fstl
pop
jne
xor
int3
mov
pop
das
inc
jmp
fucomp
clc
sub
jg
add
pusha
pusha
lea
jo
clc
mov
sbb
lcall
aam
jmp
arpl
xchg
fsubs
imul
sahf
cmc
lcall
and
icebp
cmpsl
cltd
bound
adc
lods
icebp
jg
lods
add
pop
adcb
adc
out
inc
loope
js
rclb
test
xor
add
push
fwait
lahf
lret
push
inc
mov
aad
inc
pushf
mov
outsb
aas
mov
sub
lds
mov
or
sbb
jmp
pop
insl
std
scas
inc
mov
mov
cmp
in
dec
dec
aas
xchg
bound
incl
mov
mov
dec
xor
rorb
pop
cli
call
mull
daa
lds
adc
fidivrl
pop
xor
cmp
mov
xor
mov
mov
sub
push
cmp
pop
jg
fiaddl
lret
int
rcrb
xor
in
xor
ret
call
aaa
pop
or
insl
subb
pusha
ficompl
jbe
pop
inc
dec
insb
bound
aad
mov
emms
fisubrs
das
mov
roll
addr16
xchg
mov
jno
mov
mov
sahf
rolb
pop
jmp
pop
dec
data16
and
scas
jl
sbb
int
int
clc
push
dec
jns
popf
and
xchg
inc
xchg
mov
inc
inc
pop
shll
sahf
lcall
addr16
test
sahf
out
dec
inc
and
jecxz
fistpl
cltd
or
mov
push
ret
shl
cmp
icebp
add
xchg
cmp
fcmovne
or
adc
jp
aad
push
inc
adc
test
mov
pop
mov
es
iret
bound
pop
call
add
pop
cli
stos
add
popa
jg
aam
test
jmp
arpl
mov
dec
cmpsl
mov
insb
dec
jne
enter
lods
inc
fs
aaa
fsubl
out
aam
cld
loopne
push
test
ret
and
mov
jmp
gs
mov
inc
mov
push
scas
dec
jno
sbb
popf
mov
cmp
scas
inc
pop
mov
in
sub
cmp
sahf
add
and
in
cmp
into
fdivl
cmpsl
lahf
cmp
cwtl
stos
popf
and
add
push
xchg
ret
push
cwtl
lds
imul
xor
adc
mov
and
push
cld
pop
cwtl
push
out
insb
dec
lahf
loopne
mov
inc
bound
test
jge
shrl
fsubrs
sbb
xor
cli
enter
and
scas
xor
add
lock
insl
icebp
ret
mov
scas
jo
test
pop
sub
repz
sub
push
into
cs
fwait
dec
mov
repz
movsb
lret
xchg
shll
data16
pop
fistpl
sub
lcall
sti
aaa
jge
fcmovb
push
lock
icebp
lcall
xor
rolb
or
cmp
cmp
loopne
cwtl
stc
ljmp
scas
scas
xor
dec
mov
outsb
mov
das
fcomp
mov
adc
mov
inc
pop
and
fdivs
mov
mov
xor
into
push
or
dec
inc
inc
push
sbb
mov
jle
inc
cltd
push
aas
aad
je
test
enter
cld
lods
xor
les
or
test
sti
adc
xlat
clc
mov
mov
inc
jnp
xor
aad
sbb
clc
movb
add
movaps
das
enter
cld
mov
xor
cmp
in
jb
pop
ss
cmp
push
cmpsb
or
mov
inc
lret
add
adc
jne
xchg
jbe
ret
push
fisttpl
and
sbb
xchg
add
roll
das
scas
orl
push
jbe
jge
les
movsb
jo
pusha
stos
cli
inc
and
lret
add
mov
cltd
fidivl
pop
cmp
cmp
shlb
sub
fidivrl
mov
inc
push
push
jno
xor
cmpsl
sarl
dec
jle
insb
dec
pop
mov
test
iret
daa
leave
mov
cwtl
jmp
imul
push
mov
das
ja
push
cmpsb
js
pop
pop
adc
sub
mov
stos
mov
leave
mov
xor
leave
addr16
mov
dec
pop
insb
adc
in
iret
mov
neg
push
jnp
stos
test
mov
gs
movsw
inc
and
dec
loopne
push
and
cmp
jno
mov
push
push
xchg
cmp
sub
inc
and
popf
sbb
insl
adc
add
or
inc
int3
je
ret
fistps
sbb
inc
mov
xchg
stos
jecxz
or
data16
aaa
movsb
lret
icebp
sbb
push
ljmp
rcr
andb
push
pop
test
in
mov
ds
adc
andb
pop
outsl
mov
push
arpl
shr
add
mov
mov
pop
inc
inc
inc
push
jmp
lea
lahf
xor
jbe
int
mov
xchg
in
std
push
dec
jns
or
rcrb
stc
pop
inc
lods
push
pop
adc
mov
xor
aam
push
cwtl
mov
mov
push
mov
in
pop
fisttpll
cwtl
sub
xchg
imul
pop
push
sarl
out
jle
mov
jmp
xor
push
fmull
add
push
popa
into
es
mov
xchg
pop
xchg
sahf
notl
mov
outsl
and
lcall
dec
and
insb
sbb
loopne
test
test
shl
jmp
lahf
jne
adc
popf
inc
sbb
and
loope
jns
loope
mov
push
or
je
cmp
fistl
push
stc
sahf
out
inc
mov
std
push
or
push
mov
xchg
data16
or
ljmp
pop
mov
sbb
add
mov
ret
in
arpl
rsm
inc
mov
hlt
add
push
xchg
cmpsb
xor
mov
adc
inc
aad
sti
mov
jo
pop
pop
xor
ret
push
fdiv
xor
add
xor
mov
xor
aas
jae
fsubs
push
jb
stc
jb
mov
jmp
orb
pop
cmpsl
mov
add
push
jo
bound
push
popa
xor
inc
aam
js
aaa
fbld
push
dec
es
sbbl
sub
or
dec
jb
insl
adc
sbb
call
aad
shlb
scas
movsb
icebp
push
pushf
xchg
mov
popa
sbb
cmp
mov
iret
mov
in
pop
adc
cmp
xchg
loope
inc
lds
mov
fisttps
subb
xchg
flds
jns
movsb
push
pop
mov
loop
inc
stos
ja
dec
mov
pop
pop
insb
jne
push
call
negb
dec
dec
mov
inc
cmp
cmpsl
test
inc
mov
sub
adc
dec
mov
sbb
mov
jnp
dec
cmp
and
lret
or
dec
int
and
or
test
add
out
cltd
xchg
inc
int
rorb
or
lret
adc
cs
sbb
cmc
lcall
aad
out
cmpsb
pushf
xchg
sahf
shrb
loop
outsl
je
aaa
sbb
repnz
pop
push
dec
and
and
in
mov
xchg
adc
mov
mov
inc
sub
inc
shrl
mov
arpl
icebp
jnp
pop
shlb
sub
xchg
lret
mov
adc
cli
pop
mov
pop
adc
int3
test
in
inc
pop
push
cmpsb
repz
sub
and
mov
pop
ljmp
mov
lock
adc
outsb
sub
push
sbb
pop
movsb
popa
aas
jo
mov
mov
scas
and
mov
movsl
jo
xor
mov
adc
sbb
xchg
mov
push
jg
lahf
push
adc
out
out
ret
jg
add
fwait
std
adc
or
adc
cmp
aad
repnz
and
hlt
lds
repnz
jae
mov
push
cmp
sbb
mov
cltd
add
pop
and
mov
stos
mov
mov
fistps
daa
push
ja
sar
mov
out
and
cmpsl
jne
decb
cmpsb
mov
xchg
xor
test
mov
loopne
jp
pushl
hlt
inc
inc
and
and
or
addr16
mov
inc
and
adc
mov
es
leave
outsb
lods
push
outsb
shr
or
xor
xor
pop
fbld
in
push
fs
addr16
lahf
repz
jbe
test
jb
or
pop
loopne
mov
movsl
shlb
xor
jp
push
iret
call
dec
add
and
jne
xchg
in
sar
imul
cwtl
insb
mov
adc
lret
and
hlt
and
xor
nop
adc
xor
call
data16
cmp
dec
adc
xlat
shrl
jle
adc
aam
xor
nop
or
ljmp
das
fwait
data16
call
imul
mov
cmp
out
sar
sbbb
lds
fsubr
inc
jle
lea
jge
xor
into
out
repz
stos
or
inc
imul
fwait
pop
lea
adc
sub
sbb
inc
das
lret
push
or
mov
pop
fs
ljmp
mov
add
addr16
dec
jp
xor
push
popf
sub
iret
scas
lea
mov
xorl
or
push
fimuls
je
ret
inc
aam
test
mov
push
sub
cmc
shl
insb
popa
std
jp
aam
lret
mov
mov
notb
fmulp
lods
shll
pop
cmp
mov
stc
sub
in
test
push
iret
mov
movsb
jbe
lods
aas
fnstenv
cmp
push
xchg
or
repnz
aad
add
mov
adc
scas
roll
or
data16
fistl
dec
js
je
sbb
mov
xor
incb
push
inc
ret
fmull
in
stos
cltd
shrl
inc
pushf
pop
push
xor
xchg
or
pop
ret
mov
pop
inc
pusha
fucomi
cmp
popa
jno
int3
stos
popf
mov
adc
stos
ret
addl
jmp
out
cs
pop
inc
test
and
or
pushf
inc
movsl
jb
lds
ret
cld
adc
rcl
pop
adc
rorl
mov
sti
sub
xchg
fsub
jb
daa
inc
popa
add
add
mov
mov
xor
mov
ret
push
lcall
pop
in
cmp
pop
xchg
and
out
frstor
mov
mov
sub
sbb
dec
lods
test
scas
mov
mov
stos
cld
mov
adc
loopne
jl
iret
stos
add
adc
xchg
decl
sbb
jg
imull
insl
pop
stos
dec
xor
xor
xchg
adc
movsb
cmc
ds
mov
gs
inc
push
adcl
aad
add
movsl
sbb
mov
push
iret
out
js
in
stc
out
loopne
xchg
sub
jecxz
adc
sub
scas
in
add
in
cmp
gs
scas
fnstcw
data16
add
or
mov
jg
psubb
iret
lcall
add
pushf
lock
sbb
mov
fdiv
adc
pop
xchg
sahf
sub
imul
cmpb
orb
lods
and
jno
mov
sbb
movb
adc
mov
into
sub
mov
add
xor
xchg
fildll
sub
mov
add
mov
add
les
inc
xor
dec
scas
jmp
mov
cmp
inc
mov
push
rcl
adc
cwtl
cmp
pop
fildl
js
test
mov
inc
mov
add
jg
jecxz
mov
popa
sbb
and
add
je
movsb
rolb
fs
test
ffree
mov
fwait
aas
inc
adc
movl
ret
ss
push
outsl
cmp
inc
repz
pop
mov
gs
hlt
or
call
bound
enter
fistl
jne
aam
mov
sub
movb
pop
test
incb
out
inc
imul
sbb
pop
add
nop
outsl
enter
int
pop
inc
and
adc
add
dec
push
mov
fimull
inc
dec
sub
jns
cwtl
out
mov
in
pop
xchg
shll
push
or
in
movsb
fxch
mov
jl
jl
sahf
roll
xor
jne
push
into
xor
jo
inc
pop
jp
xchg
stos
jge
pop
sub
mov
pushl
push
in
les
sbb
or
pop
dec
mov
cmpsb
movsl
xor
test
bswap
and
jmp
out
jne
xchg
xchg
lods
adc
clc
bound
insl
test
or
add
rcll
cmp
repz
cmp
lods
fistpll
add
mov
add
jge
or
ljmp
mov
sub
sub
mov
addl
jge
jb
and
lret
fs
pop
int
lret
jns
and
xchg
lock
add
xor
cmp
aas
mov
movsl
insb
mov
xor
mov
dec
jne
int3
popa
mov
xor
push
and
add
call
xchg
mov
sbb
scas
movb
out
lcall
xchg
fwait
mov
push
pushf
add
dec
loope
test
in
add
mov
mov
push
xchg
mov
test
mov
pushf
inc
test
mov
mov
sub
fs
xchg
push
aam
dec
inc
cmpb
pop
adc
sbb
fcmovb
xchg
je
jnp
movsl
fdivs
hlt
ret
mov
ficompl
dec
sub
in
jecxz
idivl
cld
push
or
jge
cmp
mov
scas
fwait
and
jo
inc
hlt
mov
hlt
call
fisubrs
sub
dec
lretw
adc
xchg
lods
push
sarb
xorb
push
rorb
aam
sub
and
clc
add
aaa
cli
or
and
int3
shlb
rclb
xor
cmpsl
or
xchg
sbb
ss
outsl
out
cmp
in
pushl
push
popa
fstpt
pop
and
ja
adc
xor
and
enter
popa
call
inc
push
lods
xchg
das
in
xchg
sbb
test
cli
mov
repz
cmpb
call
sbb
mov
inc
mov
mov
push
xchg
imul
loope
mov
jmp
movsb
and
leave
cmp
dec
movsl
pop
cs
loope
inc
jg
fistps
jmp
aaa
add
add
push
shlb
fstpl
sbb
cltd
mov
fiaddl
insl
sbb
mov
shll
insb
iret
jmp
xor
mov
fnstsw
xchg
insb
sub
push
jb
lret
jmp
daa
mov
aaa
mov
mov
mov
sbb
leave
mov
xor
cmp
jmp
inc
loope
lods
rcll
mov
hlt
pop
xor
push
pavgw
push
sbb
lcall
lods
xchg
leave
sahf
push
out
push
cmpl
xor
sbb
push
sbbb
sub
loopne
or
jbe
pushf
xor
pop
push
loope
scas
add
rorb
pop
mov
pop
popa
push
mov
sub
jp
inc
cltd
aam
push
and
ret
ljmp
sub
xor
sbb
cmpsb
sub
xor
pop
popa
or
in
into
aam
test
in
xor
mov
cmp
jecxz
sub
jns
jne
cmp
lret
push
jge
in
nop
mov
jb
inc
fdivs
pop
in
subl
shr
xchg
sub
pop
and
fsubrs
pop
test
testl
xchg
ja
or
cmpl
mov
mov
sub
pop
mov
test
and
sahf
cmp
enter
push
jmp
inc
mov
mov
dec
xor
xor
inc
lret
dec
pushf
jle
jae
sub
out
sbb
les
push
push
in
add
pop
loopne
lds
cmp
cmp
sub
push
pusha
jbe
jge
in
and
mov
mov
sbbb
jmp
mov
dec
xor
out
inc
ret
call
mov
adc
pop
mov
pop
cmc
gs
pop
idivb
inc
sti
out
xlat
cmp
mov
cli
xchg
ret
dec
inc
je
lock
jnp
push
push
icebp
add
mov
gs
out
inc
xchg
or
adc
lds
sub
add
lret
add
inc
outsb
popf
in
sbb
pop
popa
iret
cmp
sbb
sub
adc
aad
pop
inc
in
mov
add
ja
mov
mov
sbb
jge
out
lds
mov
in
inc
iret
dec
sub
sbb
ljmp
andl
cmpsl
loope
insl
or
dec
and
push
add
mov
inc
inc
lea
imul
sti
call
in
arpl
xor
pop
pop
adc
push
push
in
add
sub
push
cli
mov
enter
dec
sub
cld
shll
fnstsw
cltd
xor
sub
movl
stc
adc
and
mov
xchg
mov
xchg
jge
mov
cmp
out
mov
repz
idiv
xchg
sti
inc
jle
insb
xor
out
hlt
sub
aam
aam
imul
push
xchg
xor
xchg
pop
xor
ds
adc
pop
inc
outsb
enter
push
xchg
and
ret
xchg
sub
cmpsb
cmp
dec
in
insb
push
xor
roll
pop
xchg
in
fmuls
jle
push
xor
test
das
add
mov
add
inc
out
fidivrl
xor
stos
in
dec
adc
dec
and
faddp
inc
into
mov
sbb
mov
mov
pusha
adc
inc
or
fdivrs
in
inc
out
repnz
gs
sbb
cwtl
popf
cmp
shrb
pop
ss
or
mov
testb
sub
xchg
test
inc
movsl
decb
sub
cmp
hlt
test
pop
iret
sub
js
jnp
push
mov
pop
push
hlt
xorl
and
xchg
pusha
cld
jmp
mov
mov
sub
nop
xchg
sarb
lods
mov
add
in
sbb
fwait
les
cmpsl
mov
in
push
bound
cs
dec
fwait
mov
clc
sub
cmp
out
rcll
mov
jp
xchg
jnp
inc
rolb
pop
add
sub
por
or
cld
stos
mov
aam
je
and
sbb
inc
jg
popf
push
clc
jb
lods
push
dec
in
adc
cmp
mov
enter
pop
sbb
iret
pop
pop
xor
clc
push
outsb
in
add
cmpsb
mov
movsl
aas
cmc
sbb
push
shll
mov
fldt
pop
mov
sub
jmp
daa
loopne
sbb
push
xchg
outsl
adc
mov
cmc
test
fwait
xchg
stos
or
adc
sbb
daa
iret
mov
mov
cli
xchg
add
sub
scas
popl
cmpsb
jnp
push
test
imul
xchg
push
scas
insb
data16
dec
imul
mov
sahf
push
jp
mov
inc
jae
jmp
daa
pop
mov
adc
rcll
mov
dec
mov
notb
addr16
sbb
or
mov
leave
add
pop
fnstenv
gs
add
sbb
arpl
xor
xchg
jp
or
std
jne
dec
pop
mov
mov
or
cld
fwait
test
insb
add
out
pop
inc
push
gs
fistpl
mov
jns
cmpsl
movsb
fstps
nop
in
mov
out
sbb
sbbb
repnz
push
out
mov
sbb
roll
pop
add
out
testl
pop
or
orb
add
add
out
adc
repnz
movsb
mov
gs
mov
cwtl
sbb
fcom
rorb
adc
jns
cmp
xchg
mov
pusha
movsl
xor
loop
cmp
mov
addb
jecxz
fcoml
xchg
push
xor
aaa
mov
pop
scas
adc
xchg
xor
ret
and
scas
inc
jne
pusha
imul
adc
inc
mov
test
cmp
push
pop
mov
ds
dec
inc
dec
jmp
push
fadds
movsl
addr16
insb
ret
call
xchg
jl
es
pop
notb
mov
outsl
fidivl
adc
mov
or
in
mov
xchg
and
jne
push
push
and
xchg
mov
jns
divl
or
pop
movsb
mov
push
mov
mov
dec
sti
fs
dec
mov
mov
sbb
mov
fstl
jae
gs
orl
repnz
icebp
rorw
jbe
test
sbb
jbe
fldcw
mov
clc
negb
sub
cmpsb
inc
in
and
in
loopne
jo
or
out
paddw
outsb
test
inc
jne
or
inc
dec
icebp
hlt
ret
adc
fisubrl
scas
filds
adc
cmp
es
stos
dec
push
xchg
and
in
ds
jge
inc
dec
inc
icebp
stc
jb
push
out
inc
jbe
arpl
jl
sbb
hlt
mov
fldt
sub
setns
push
movsb
stos
stos
mov
or
outsb
jecxz
lods
repz
or
dec
repnz
repnz
mov
cmpsb
hlt
leave
repnz
fsubrl
ret
cwtl
sbb
rcll
cmp
enter
ret
pop
mov
xchg
push
sub
stos
cld
clc
testl
fs
xor
mov
mov
cli
test
movsl
iret
repz
bound
inc
repz
loopne
push
xor
aam
mov
xchg
test
addl
mov
dec
das
lret
pusha
aaa
icebp
jl
adc
inc
fistl
adc
imul
fnstsw
add
daa
int
div
sub
int
test
in
push
nop
adc
outsl
cmp
push
test
sbb
push
inc
lret
dec
inc
mov
xor
inc
mov
sub
or
int3
inc
ret
jp
xlat
negl
in
hlt
jo
mov
mov
loope
mov
push
adc
sbb
iret
aad
mov
push
mov
cmp
push
lahf
jno
icebp
pop
pop
ret
xor
ss
orl
dec
dec
push
xchg
roll
lahf
or
fimull
sbb
bound
aas
out
jg
out
out
or
hlt
mov
cld
insl
std
inc
cli
pop
popf
jge
sub
lock
ret
rclb
lret
out
sbb
add
imul
fidivl
out
out
notb
mov
inc
ret
dec
dec
mov
and
lret
out
sbb
mov
inc
das
cmp
pop
stc
pop
mov
cmp
pop
and
push
fdivrl
bound
jmp
inc
int
in
outsl
push
inc
les
sub
std
mov
xchg
mov
jno
ds
pop
stos
xorl
push
inc
sub
pop
adc
mov
lcall
cmp
pop
cmp
std
xchg
js
cmp
dec
mov
mov
mov
or
rol
xchg
shll
lea
rolb
mov
xchg
test
movsl
mov
mov
add
sub
sub
vpunpcklqdq
scas
adc
jecxz
fildll
stos
xor
mov
lret
add
les
iret
imul
xor
movsl
jmp
in
int
xor
and
popa
leave
pop
fildll
mov
das
xor
jbe
lcall
and
mov
leave
jns
cmp
cmp
push
add
xchg
mov
or
jno
jl
adc
cli
sbb
push
bound
scas
jb
xchg
pop
jo
sub
mov
into
pand
xchg
fnstenv
mov
in
std
mov
loope
sub
dec
and
pop
dec
lret
test
mov
jp
mov
insb
pop
mov
mov
data16
movsl
cmpl
dec
stc
dec
mov
aad
xor
das
in
js
mov
stos
jae
sbb
cld
jnp,pt
xchg
mov
ljmp
lea
test
data16
sbb
mov
sub
sahf
push
sahf
push
push
and
sbb
xchg
imul
fistl
pop
ror
xchg
ficoml
or
adc
push
mov
ror
dec
lods
jmp
adcl
push
cmp
and
xlat
lods
clc
push
add
cmpsb
ja
mov
insl
inc
xlat
ds
cs
inc
mov
adc
jl
cmc
mov
inc
xor
out
repz
bsr
push
fisubs
push
jmp
and
popl
xor
stos
fwait
rclb
scas
add
lea
mov
les
xor
mov
inc
insb
jl
shl
rorl
outsb
push
loopne
js
repz
mov
sbb
add
cmp
xor
fdivrl
mov
xor
ljmp
push
xor
fdivrs
add
int
adc
mov
lock
ds
fisubrs
sbb
add
cmc
xor
xchg
push
ret
in
jge
int
inc
movsb
fildll
hlt
mov
push
jge
incl
and
decl
nop
leave
dec
ljmp
insl
dec
in
movsl
pcmpeqd
scas
xchg
mov
cmp
in
jmp
pushl
ret
jg
je
sti
mov
xchg
sub
jnp
addr16
es
sub
jne
outsb
lret
or
inc
inc
out
outsl
pushf
into
lock
loope
mov
lcall
sub
imul
inc
inc
inc
les
jns
imul
scas
xchg
daa
push
sub
cmpsb
inc
imul
xchg
out
popf
aam
loopne
loope
roll
cwtl
pop
xor
inc
mov
and
sub
sarl
stc
mov
pop
push
push
xchg
out
mov
mov
cli
std
jg
std
add
iret
cwtl
adc
shrb
ljmp
sbb
sub
push
jae
pop
insb
pop
fwait
jl
or
jb
or
mov
jge
hlt
out
mov
xchg
loopne
mov
jno
scas
xchg
adc
or
xor
test
dec
mov
pop
clc
cltd
pop
mov
sub
mov
stos
mov
sbbl
stos
js
push
shrb
fnstsw
stos
jbe
rcr
sbb
cmpsb
mov
fcoml
adc
lcall
aad
je
mov
xchg
call
jmp
jecxz
addr16
xor
clc
sahf
mov
daa
lods
rcr
adc
sbb
insb
sti
push
jecxz
hlt
jecxz
fs
xor
jg
mov
mull
in
and
js
out
pop
xlat
jle
sbb
mov
mov
test
cmp
ja
aam
gs
jg
pop
out
mov
mov
cmc
fisubrl
test
jl
pop
jp
jmp
movsl
xor
cltd
jmp
filds
popa
mov
jb
jnp
pop
push
aad
lret
es
sbb
test
adc
les
inc
cmp
fdivr
decb
ja
ljmp
neg
lds
les
cmc
je
and
jmp
or
jl
shrb
or
iret
xchg
sbb
dec
push
pop
pop
xchg
jp
mov
mov
mov
jb
cmpb
mov
pop
adc
mov
pop
loop
xlat
add
lret
pusha
add
adc
add
in
fld
das
jnp
pop
fisubl
jmp
sub
rcll
mov
pop
sub
pop
subb
out
pushf
sbb
out
xor
mov
pop
es
ret
jge
rclb
push
jae
dec
push
out
add
add
fs
gs
enter
unpcklps
out
clc
jp
popa
movsl
bound
jb
in
mov
or
sahf
jp
aaa
outsb
xchg
imul
dec
insl
pop
push
cmp
enter
pop
orb
mov
lods
sub
mov
ljmp
mov
cmpsb
pop
inc
in
stos
mov
fsubrl
sbb
sbb
pop
aam
pop
fcomps
add
mov
xor
test
cltd
xchg
imul
and
out
fcoms
pop
sti
imul
adc
push
aad
sub
lahf
push
mov
int
std
movsb
pusha
andl
inc
adc
add
popa
cmp
add
in
ja
pushf
mov
outsl
fdiv
pop
rcrb
stos
sbb
xchg
call
fisubl
rorb
xchg
pushf
inc
jno
inc
cmp
or
cmc
negl
sbb
pushf
ja
jbe
insb
jg
shl
xchg
fiadds
sub
dec
sahf
shlb
sbb
sar
mov
fadd
scas
add
xchg
xor
sarb
mov
pop
loope
xchg
shrb
scas
or
out
push
pop
jp
jae
jmp
fstl
pop
push
lods
stos
aam
int3
pushf
mov
push
mov
xlat
push
inc
negl
push
mov
jo
stos
adc
or
dec
out
test
fistpl
out
cwtl
mov
add
shll
aas
push
cmp
rorl
xor
cltd
icebp
pusha
add
lods
pusha
jge
test
mov
push
leave
mov
mov
jl
imul
sub
adc
or
and
popf
push
sti
mov
pop
cli
add
subb
imul
mov
or
fucomi
repz
jp
test
imul
push
mov
xor
es
cmp
or
push
jo
shlb
jno
and
jle
inc
lock
scas
add
xchg
jge
int
out
std
inc
mov
cmp
push
pop
pop
ds
mov
mov
jno
push
push
xor
sbb
inc
iret
mov
inc
call
add
dec
mov
jb
or
dec
imul
mov
das
outsb
and
pop
arpl
dec
out
outsb
mov
push
mov
test
sarb
mov
sbb
insl
sub
xchg
sbb
lock
push
xchg
xchg
imul
jp
and
xchg
enter
xchg
ljmp
adc
adc
roll
test
popa
xor
xor
mov
push
ficoml
fnstenv
mov
ja
mov
pop
int
cmp
pop
mov
out
jne
lds
and
jmp
fsubs
jge
mov
pop
ds
sub
push
push
enter
push
adcl
pusha
out
mov
lds
inc
ss
lods
mov
test
out
jo
scas
decb
add
aaa
add
and
pop
push
imul
jmp
imul
jmp
outsb
xchg
xchg
fidivl
adc
cmp
xor
or
xor
push
push
mov
inc
mov
pop
mov
xchg
lahf
into
mov
in
pusha
aam
mov
ret
cmp
jno
loope
add
stos
cmp
jbe
push
sti
fucom
sub
adcb
dec
push
mov
sbbl
push
data16
call
addr16
mov
push
sbb
cmc
fs
dec
rcll
repz
xor
arpl
aas
cmp
mov
pop
inc
ret
lock
ljmp
jo,pt
push
stos
xchg
je
jl
cmp
ds
in
sub
jmp
pushf
icebp
push
jmp
test
sub
push
js
fstpt
jno
lods
loop
movsl
das
into
in
daa
shl
add
pop
stc
repz
cmp
xchg
mov
cmp
cmp
adc
hlt
insl
xchg
sti
stos
ss
out
xchg
repz
xchg
adc
adc
sbb
and
jle
pop
cmpsb
jg
mov
mov
mov
fnstenv
mov
fs
mov
lret
orb
repnz
jle
push
int3
sub
mov
jge
lock
movsb
sbb
into
push
xor
mov
cmp
mov
lea
mov
rol
pop
cmp
inc
sbb
mov
xchg
pushf
enter
mov
jo
or
arpl
and
adc
pop
xchg
xchg
sub
xchg
sbb
test
mov
cmp
pop
sbb
sbb
ret
dec
subb
data16
into
push
cmp
mov
add
inc
cltd
repz
mov
push
jecxz
mov
test
add
jecxz
insb
retw
pop
xchg
cmp
dec
push
mov
push
aaa
out
push
dec
adc
lods
cld
inc
rcll
pop
push
adc
add
push
add
test
fbstp
cmpsb
arpl
rcll
and
enter
fstps
dec
out
in
ficoml
mov
data16
ret
test
sub
ljmp
or
int3
pop
lds
push
mov
dec
adcl
mov
xchg
call
sbb
in
cli
add
lods
jmp
mov
pop
sub
sbb
loopne
cmc
fs
add
cltd
mov
fisttpl
ret
int
xlat
mov
addl
js
cli
jno
out
inc
cld
and
push
push
test
jb
xor
add
stos
adc
scas
les
lods
jmp
jle
adc
ss
pop
jo
inc
add
in
bound
out
dec
rolb
push
mov
cwtl
gs
sub
jo
xlat
pop
ss
sbb
mov
mov
mov
sub
scas
rorb
mov
and
dec
icebp
out
cmp
cli
jmp
xor
sub
dec
scas
adc
and
insl
cmp
mov
xchg
push
repz
push
jl
cmp
xchg
dec
sbb
mov
sbb
mov
rcll
sub
arpl
add
aam
and
fisubrl
rcrb
and
flds
dec
jmp
scas
roll
dec
or
xor
in
js
jmp
repz
dec
je
scas
stc
rcll
cmp
nop
sub
adc
push
xlat
adc
rcrl
lret
mov
repnz
ss
xor
sbb
in
stos
push
aam
sarb
add
add
cld
dec
inc
decl
mov
sub
inc
outsb
ret
outsb
cmc
pop
xor
sub
test
shlb
shlb
shll
cmpsb
adc
inc
addl
or
dec
fdivs
fucomi
lcall
cmp
xlat
imul
pop
jge
xchg
mov
stc
clc
outsl
out
jnp
xchg
cltd
sbb
std
jae
call
lret
push
mov
pop
jmp
sub
dec
ret
test
bound
out
adc
pushf
lret
out
dec
cmp
fcmovnb
int3
push
jnp
jne
rclb
mov
out
add
incl
cmp
sti
imul
in
mov
adc
push
rol
xchg
ljmp
jns
xchg
cmpsl
lahf
je
sbb
nop
daa
push
loop
lret
outsl
jle
in
push
fmulp
sbbl
lods
jmp
push
dec
scas
mov
xchg
int3
sub
insb
rcrl
lahf
mov
int3
bound
ret
test
jmp
cmp
cld
stc
fs
add
jns
arpl
push
std
xchg
call
lret
add
insb
inc
cmp
adc
xchg
and
mov
mov
imul
mov
jp
sub
dec
pop
pop
test
sti
xchg
mov
adc
gs
aam
addr16
loop
lahf
fstpt
dec
inc
jge
mov
repnz
mov
or
push
and
pop
jle
inc
pop
repz
stos
int
mov
jb
lahf
imul
fdivp
hlt
hlt
nop
scas
add
adc
mov
js
clc
mov
dec
jo
xor
in
ret
adc
dec
jb
xor
adc
addr16
xchg
outsb
pusha
into
push
cmp
pop
pop
and
ret
mov
mov
dec
xor
xlat
lret
mov
cmc
dec
push
mov
or
pop
add
std
mov
mov
adcl
jge
imul
xchg
ss
les
push
nop
sahf
push
pop
and
adc
xchg
scas
adc
into
bound
mov
xchg
stc
lret
dec
notl
aas
shll
pop
mov
lea
sub
jmp
xor
loopne
jo
pop
xchg
inc
dec
inc
stos
aam
imul
iret
test
xlat
jmp
ds
jo
call
add
mov
inc
arpl
jns
in
xchg
add
orl
lods
sub
lods
sbb
sahf
popa
ficoms
push
sub
int
push
sub
mov
inc
jg
les
sti
inc
insb
sbb
cmpsb
frstor
dec
mov
popa
pushf
adc
sub
mov
fxam
inc
mov
dec
lods
ss
jmp
dec
sahf
scas
adc
addr16
sub
iret
pop
cvtpi2ps
xor
mov
jmp
or
rcr
mov
fsubl
adc
test
push
leave
and
xchg
jle
push
mov
test
jmp
xchg
sbb
sbb
pop
dec
mov
add
xlat
pop
orl
add
dec
adc
loopne
pop
lahf
ljmp
mov
imul
lds
dec
fucomi
sar
cmp
xlat
and
sbb
jle
sbb
int
ss
fwait
iret
pop
jne
je
mov
add
mov
in
orl
cmp
lds
lret
and
fcomp
jmp
cmpsb
xor
xor
incb
dec
cli
imul
xor
pusha
xor
xor
sbb
xchg
dec
adc
lcall
icebp
xor
stos
push
jg
fidivrs
mov
adc
and
push
jno
jns
js
mov
jmp
xchg
pop
sub
and
test
jne
pop
xlat
cmpl
xor
add
dec
mov
cmpsl
fstpt
xchg
add
mov
aam
or
dec
or
mov
decl
pop
bound
pop
test
add
inc
or
inc
dec
stc
nop
mov
and
iret
out
es
in
xor
mov
test
adc
cmp
nop
loop
or
jo
adc
imul
push
jmp
loope
je
pop
adc
lret
mov
sub
stos
xor
daa
lret
adc
cmpsl
add
call
inc
cmpsb
pop
dec
inc
pop
and
in
mov
mov
mov
lret
sbb
loop
push
imul
pushf
pop
shl
mov
mov
aad
out
stc
push
call
outsl
mov
enter
inc
pop
in
push
into
ljmp
lds
aaa
cmp
sarl
dec
mov
xchg
mov
or
mov
insl
push
fnsave
je
lods
mov
adc
mov
in
rcrb
mov
into
mov
xor
cmp
lds
xchg
daa
lret
add
mov
cwtl
lret
pusha
mov
subl
clc
push
or
inc
lret
int
mov
xchg
cli
daa
clc
push
test
pop
xor
mov
pushf
lcall
mov
and
pushf
pop
cmp
sbb
push
daa
adc
cmp
arpl
nop
stos
jno
adc
sub
das
fimuls
fcmovnu
jns
mov
out
cmc
sub
or
movsb
xchg
fadds
jle
mov
sbb
push
outsl
xor
das
fsubrs
inc
push
pop
xchg
adc
ret
push
clc
aam
outsb
jne
testl
cmpsl
or
repnz
and
sub
mov
pop
std
aam
out
mov
dec
jle
mov
call
fcmovnu
pushf
sbb
cmp
iret
ljmp
sub
bound
js
jle
aam
fldenv
inc
cmc
jb
dec
fmul
mov
fstl
inc
dec
aad
ret
aam
push
or
inc
mov
cli
jge
pusha
mov
jb
cli
scas
cmp
js
orl
cld
mov
mov
xor
mov
out
and
add
jecxz
jle
mul
jb
lods
mov
mov
mov
outsb
mov
fdivs
inc
inc
out
cmc
adc
fdivp
outsb
mov
dec
lret
outsb
lock
and
stos
inc
or
sbb
shll
daa
xorl
lcall
xchg
loope
stc
inc
mov
jp
cmp
shl
jl
pop
sub
int3
sbb
pop
push
dec
mov
lret
pop
lahf
dec
mov
jp
mov
or
inc
add
mov
subl
cmp
repnz
je
cmpsl
sti
cmp
push
cs
mov
fdiv
sbb
pop
adc
or
cmp
cmp
cmc
scas
xchg
lds
inc
push
lret
mov
jns
xor
add
mov
cwtl
ja
or
jae
aas
loop
pusha
ss
ja
sub
in
mov
adc
lea
xor
mov
std
dec
dec
jle
dec
pop
ret
push
inc
add
xchg
pop
jbe
jge
adc
jns
sbbb
sub
jp
test
add
mov
stc
mov
jg
ljmp
lret
callw
and
jnp
or
fcomps
mov
aad
fistpl
jnp
mov
int3
mov
mov
shlb
addb
mov
imul
lret
jnp
mov
push
mov
sbb
pusha
scas
mov
pop
nop
add
sbb
mov
rol
notb
xchg
insl
cmc
add
fildl
je
add
stos
cld
fidivs
subl
push
add
loope
shrl
std
sbb
or
int
sub
ljmp
into
lcall
or
sbb
adc
insb
mov
cmp
fiaddl
jmp
mov
jo
pop
and
int3
pop
dec
ja
jns
push
sub
sbb
xor
push
lcall
pop
rolb
inc
imul
and
shll
loop
int
pop
stos
fimull
imul
sub
mov
inc
mov
mov
testb
fnstenv
in
push
xchg
decl
dec
lea
pushf
mov
sarl
pop
jbe
fisubl
in
std
mov
cmp
arpl
add
outsb
pop
push
or
jns
jge
cmpsl
lock
ret
mov
loop
mov
sarb
xor
pop
xor
inc
pop
inc
imul
mov
mov
and
lcall
cmpsb
mov
sahf
sbb
ret
dec
xchg
rcll
scas
mov
inc
ficoml
addr16
dec
or
sbb
es
movsb
cwtl
jmp
dec
sbb
ja
and
pop
inc
jg
pop
sbb
add
cmpsl
pop
pop
movsb
or
sbb
or
mov
out
cmp
jb
arpl
pop
push
sub
pop
ljmp
leave
pop
sub
sub
and
pop
andb
call
lods
hlt
pop
outsl
adc
add
js
mov
test
or
push
jno
mov
sti
mov
out
sbb
loope
add
aaa
cmp
into
jmp
jae
in
ficompl
pop
orb
aaa
pushf
jno
call
lcall
mov
pop
jno
jns
pop
das
xor
test
jp
lea
lods
cld
cmpsl
mov
xor
movsl
call
xchg
or
sub
mov
adc
and
icebp
popf
mov
pushf
cli
cmp
push
xor
ret
inc
flds
ret
lock
push
cmpsl
mov
push
leave
jne
sub
pushf
in
xchg
call
cmp
mov
popf
push
sbb
mov
or
in
les
bound
push
and
mov
hlt
sbb
js
push
lods
testl
cmp
xor
inc
xor
les
or
xchg
jb
outsb
fwait
ds
in
cwtl
and
fidivrs
jmp
mov
mov
ret
in
and
aaa
mov
aam
in
fists
call
in
icebp
pop
jb
cwtl
or
sub
cmc
cmc
cmpsb
adc
mov
pop
xchg
stc
shrb
push
ss
fisubs
out
leave
outsb
adc
mov
rcll
mov
or
mov
test
stos
dec
mov
add
loop
xchg
sub
shlb
std
push
adc
fistpll
xor
mov
push
popf
bound
jmp
jge
add
mov
pushf
movsl
in
and
jne
loope
mov
push
popa
and
cmp
and
icebp
inc
dec
sarl
repnz
sbbl
cwtl
test
and
push
ds
aad
lret
sbb
dec
lahf
dec
out
cltd
insb
inc
cmp
pop
ss
xor
mov
push
clc
mov
add
popa
sub
cli
mov
xor
movsb
lea
add
xchg
movsl
pop
in
das
pop
cmp
inc
neg
hlt
arpl
call
movb
out
sub
push
pop
lods
in
test
orb
data16
dec
cmp
pushf
cmpsl
pop
xchg
fst
mov
inc
and
cmp
jne
test
cmp
test
lret
add
jmp
push
loopne
cmp
loop
aaa
jge
jo
push
sub
dec
xor
subl
push
std
pop
mov
xor
outsl
loope
mov
scas
jnp
nop
les
adc
or
outsl
popa
dec
lds
pop
add
pop
jle
enter
adc
icebp
out
test
adcl
aaa
divb
test
scas
movsl
pusha
xchg
sti
ja
or
mov
in
jbe
mov
ss
ja
add
rcll
mov
adc
inc
push
jne
subb
scas
sub
push
sub
sbb
push
cld
ret
or
lret
inc
fcomip
test
pop
rcrb
stos
sbb
lods
mov
jo
iret
enter
xchg
pop
pop
mov
sti
pop
add
mov
jno
lea
jb
cmp
adc
push
lahf
lock
or
cld
mov
ss
test
inc
mov
mov
in
mov
pop
test
jne
mov
and
dec
mov
add
jmp
ret
scas
pusha
inc
mov
jecxz
aaa
addb
rorb
out
pusha
and
xor
icebp
push
test
pop
test
push
sbb
pop
dec
cmp
repz
cmc
pop
or
push
adc
or
lods
popa
loope
int
add
ret
mov
and
add
shlb
jg
or
rorb
stos
adc
aad
add
mov
mov
in
std
lea
fwait
out
outsb
pop
hlt
iret
jae
xchg
loop
xchg
pop
pop
cmpsb
aad
ret
and
mov
mov
faddl
fsubrl
scas
cmp
and
add
add
fnstsw
test
xchg
fisttpll
dec
fsts
jl
lds
fistpl
mov
js
enter
jmp
inc
cmp
ror
jl
outsl
push
push
mov
aam
adc
mov
jae
filds
fdivrp
add
icebp
repnz
add
imul
jno
sbb
aas
push
cmp
test
int3
sub
nop
fdivl
shlb
int
inc
fnstenv
push
std
dec
pop
in
and
xor
add
add
aam
push
aam
jno
cmp
int
sahf
mov
aam
mov
jmp
cmp
mov
mov
andl
mov
movsb
mov
iret
fninit
das
insl
xchg
mov
int3
sub
mov
pop
xor
repz
addb
xchg
fs
gs
je
imul
test
pop
jle
push
paddw
fbstp
xor
arpl
ret
shrb
xchg
pop
inc
pop
mov
cmpl
outsl
inc
andb
push
lds
sbb
mov
pop
xchg
roll
mov
pop
or
call
and
cmc
je
arpl
pop
sti
dec
pushf
push
rol
lds
fs
mov
sub
scas
int3
push
add
sbb
dec
leave
fidivs
mov
jge
sub
sbb
inc
pop
or
xchg
mov
hlt
or
dec
out
cmp
xchg
into
jle
hlt
inc
clc
sub
xchg
repnz
cld
pop
push
enter
mov
pop
gs
inc
movsb
cld
mov
loop
imul
cld
xchg
mov
mov
pop
jecxz
and
xlat
push
mov
enter
sub
inc
fistpl
add
and
cmp
xor
repz
pop
sbb
aad
inc
fmuls
test
shrl
jle
test
insb
inc
adc
mov
ret
dec
cli
ret
mov
xchg
aad
pushf
mov
scas
jp
loope
roll
inc
dec
bound
ljmp
adc
daa
fstl
pop
mov
jp
fmull
in
adc
mov
loope
inc
loop
push
mov
fnstsw
ja
cwtl
and
cmp
sub
adc
pop
adc
mov
stc
repnz
inc
sub
push
fisttps
loop
stc
fldl
ds
sahf
enter
int
xor
bsr
iret
jo
adc
loop
out
fs
js
insb
adc
dec
sti
sbb
jb
dec
pusha
idivl
pop
ret
sbb
or
fiaddl
dec
bound
cmp
shlb
pusha
dec
cmp
lea
sbb
xchg
aas
or
pop
inc
aam
pop
mov
popa
bound
push
ja
xlat
xchg
jmp
mov
mull
ljmp
lods
cmpsl
and
mov
arpl
sub
xor
loopne
cmp
fnstsw
push
pop
imul
mov
std
sbb
xchg
sti
jo
stc
repz
add
enter
in
scas
jb
xchg
mov
lcall
outsl
cmc
in
stc
sbb
push
lock
arpl
lcall
sbb
test
loop
xor
movsl
sub
mov
sahf
shlb
xor
jne
shrl
mov
leave
int
mov
movsl
adc
stc
add
ds
or
fmull
add
hlt
and
pop
jb
lcall
stc
rclb
gs
cld
or
ja
cmp
mov
fstp
jecxz
sub
andl
inc
xchg
pop
sbb
fmull
cmpsl
mov
dec
mov
mov
ret
stos
mov
rcll
lret
xchg
jnp
fldl2t
mov
jl
dec
addr16
pop
repnz
dec
scas
rolb
xlat
das
xchg
or
lods
test
ja
or
rcll
int3
roll
mov
mov
test
std
inc
outsb
sbb
cmp
mov
inc
sub
xlat
aas
imul
pop
cltd
and
std
mov
outsl
inc
push
rcrl
inc
adc
inc
aad
test
lret
mov
adcl
bound
mov
dec
sub
scas
incb
or
lods
mov
pop
jae
iret
sbb
sub
in
push
out
jmp
cmpsl
rolb
daa
jb
ja
dec
stos
stos
mov
insb
mov
gs
js
jmp
insl
mov
ja
lret
push
mov
je
mov
sbb
daa
ljmp
mov
inc
adc
xchg
mov
jo
jl
xchg
bound
sub
push
nop
lahf
repz
loopne
mov
adc
xchg
xor
xchg
leave
lea
push
clc
outsl
fidivrl
js
mov
int3
dec
nop
movsb
aad
xchg
hlt
jg
pop
mov
cmp
cli
lods
orps
xchg
or
or
mov
dec
in
cmp
push
test
mov
mov
and
notl
sbb
mov
mov
push
push
or
push
call
cmp
sahf
jl
jmp
test
push
pop
das
inc
jb
or
mov
nop
out
or
or
push
and
jge
mov
stos
ja
push
pop
movsl
shll
shrl
aas
cmpsl
sbb
xor
mov
sub
pop
loop
pusha
push
sbb
pop
inc
push
orl
sub
inc
ljmp
cmc
sbb
enter
mov
jno
repnz
inc
mov
and
mov
jl
push
jp
or
mov
aas
inc
test
mov
mov
and
ret
xchg
cltd
cs
fmulp
mov
mov
loope
pusha
fldt
ffree
and
mov
loop
sbb
xchg
repnz
pop
pop
lock
adc
fmull
mov
repz
out
inc
xchg
icebp
enter
mov
loopne
ficoml
push
and
pop
mov
ficoms
aas
sbb
mov
in
xor
outsl
ret
shlb
mov
scas
jmp
loop,pn
jmp
daa
cmc
pop
push
stc
fwait
inc
jns,pt
lods
adc
push
dec
pmaxub
movb
daa
add
mov
bts
mov
loopne
mov
loope
sbb
push
inc
scas
cmp
std
lods
and
and
sub
movaps
aam
dec
mov
pop
jmp
inc
xchg
out
pop
sbb
std
fiadds
lods
arpl
pop
cwtl
xor
outsb
xchg
xchg
les
sbb
fldenv
pop
jg
shll
imul
cmp
data16
pop
in
imul
shrb
xor
cltd
sbb
mov
inc
loopne
pop
push
outsb
xor
jne
sbbb
inc
nop
clc
rorl
imul
iret
cmp
pop
scas
inc
inc
cmp
add
add
imulb
in
js
inc
into
out
lds
std
or
xor
cmp
mov
xchg
mov
xor
dec
push
jae
lea
dec
xchg
jb
pop
dec
adc
mov
xchg
push
rcrb
cmp
fmuls
push
sarb
in
bound
loop
std
pop
mov
adc
sub
imul
mov
fcmovnu
lret
sti
out
mov
iret
cmc
mov
faddl
pop
sbb
fdivs
shll
subl
imul
dec
cmp
cld
clc
inc
jne
std
mov
subb
mov
lret
popf
dec
hlt
push
push
dec
lret
ljmp
pop
pop
dec
cmpsl
fldenv
mov
idiv
push
mull
mov
rcrb
sbb
sub
clc
loope
xor
cld
outsl
cld
cmc
and
inc
mov
push
les
push
aaa
pop
xchg
mov
fisubrs
jp
dec
mov
adc
in
int3
out
cmp
int
adc
clc
ja,pn
aam
inc
xchg
cmpsb
in
insl
push
pusha
cmp
in
mov
hlt
or
mov
mov
dec
jbe
test
push
mov
fimuls
mov
mov
call
leave
push
sub
mov
fidivrl
mov
mov
cmp
xchg
cld
cmp
notl
test
cmp
cs
push
xlat
xor
sbb
inc
icebp
sub
ljmp
enter
test
gs
adc
mov
jg
enter
mov
shlb
pop
add
push
adc
and
repnz
movsl
jl
gs
and
pop
pop
pop
enter
pop
movb
mov
lods
pop
add
int3
dec
push
or
into
pop
aad
cld
push
inc
xor
test
popa
aaa
cmp
iret
ja
mov
sbb
cmp
mov
jne
sub
xor
or
cmp
pop
mov
sbb
js
mov
in
xchg
jg
fildll
pusha
pop
cld
xor
call
add
enter
mov
pop
pusha
iret
iret
or
sub
mov
cmc
or
gs
test
push
and
mov
jecxz
out
je
lea
pop
lods
lds
sarl
arpl
in
repz
jno
xchg
pop
and
dec
int3
lea
push
push
addr16
mov
adc
jecxz
push
inc
adc
cwtl
cltd
fisubl
adc
mov
mov
cmp
xor
jae
lods
cmp
fisttpl
std
xchg
dec
jnp
and
xchg
xor
loope
or
jne
rclb
shlb
sbb
jp
or
dec
loop
sbb
shll
insb
jno
inc
mov
pop
mov
sub
outsb
imul
mov
ficoml
stos
push
pop
js
fs
xchg
add
add
mov
xchg
pusha
sbb
jno
das
cmc
lar
adc
and
jp
scas
lahf
add
stos
rol
iret
mov
xor
mov
mov
push
xor
mov
in
sub
cmp
push
mov
dec
pop
addr16
aam
test
sub
jb
xchg
aad
jmp
sub
ret
lods
or
jle
inc
jge
add
into
int3
pop
jnp
loop
sub
lea
or
inc
into
cmp
lods
cmp
push
jo
imul
std
xor
pop
mov
push
jp
popf
fwait
inc
sahf
push
mov
fildll
out
lods
mov
enter
jne
lcall
adc
in
inc
cmc
ret
cwtl
xchg
mov
imul
sub
movsb
sarl
fisubrl
jnp
ret
sarb
cmp
int3
out
push
push
hlt
lock
cmp
bound
xor
ds
int3
sub
les
je
mov
xor
fidivl
out
jne
sub
mov
push
push
nop
mov
lock
push
ret
pop
mov
mov
cld
xchg
mov
jmp
leave
mov
mov
icebp
sbb
clc
cltd
cmp
fnstcw
jl
mov
or
mov
dec
out
push
icebp
or
jp
lahf
push
outsb
push
dec
out
push
mov
pop
int
xchg
pop
jnp
pop
fdivr
movsb
jle
aam
jae
bound
pop
mov
dec
leave
jo
sti
mov
lcall
lret
addr16
cld
fucomp
in
icebp
lods
mov
xchg
fiaddl
lea
ljmp
jecxz
xchg
inc
jl
sbbl
adc
in
pusha
bound
out
les
cwtl
imul
pop
fs
pop
pop
adc
push
xchg
jnp
lret
pop
adc
sti
mov
lds
mov
ljmp
mov
rorb
adc
jne
in
lods
inc
sbb
loope
repz
dec
push
sub
fwait
popa
pop
cltd
outsb
push
stc
das
fabs
mov
mov
push
or
xchg
push
enter
jno
xor
stos
fwait
pop
pop
xor
sbb
lea
mov
xor
xchg
sub
add
scas
dec
xchg
inc
arpl
out
adc
lret
and
mov
mov
and
cmp
lds
xor
fdivl
cltd
in
popf
popa
push
xchg
jl
add
ja
or
cwtl
xchg
jno
icebp
sub
inc
push
push
ja
insl
jmp
jecxz
add
mov
add
xor
jae
js
pop
cmp
aam
pusha
ds
mov
clc
arpl
cmp
dec
test
stos
adc
movsl
mov
xchg
push
pop
push
add
mov
cmpsb
negl
pop
sub
jne
mov
mov
std
mov
or
inc
hlt
dec
mov
pop
or
cmp
in
inc
shl
xor
clc
mov
or
sbb
cmp
mov
mov
gs
cwtl
test
mul
jo
mov
mov
pop
enter
decl
es
xor
pop
jmp
or
cltd
fistpll
lods
add
stos
clc
clc
mov
or
sbb
idivb
ror
sbb
in
mov
fxam
nop
loope
jnp
dec
into
inc
mov
push
jmp
loope
pop
push
mov
dec
jbe
xor
ljmp
pop
sub
rcrl
stos
inc
mov
jne
pop
stos
cmpsb
in
je
mov
push
sbb
fiaddl
pushf
or
mov
inc
lret
and
outsb
out
inc
mov
pop
lcall
adc
mov
add
ret
mov
lods
inc
sub
push
add
xor
xorl
dec
arpl
test
std
push
out
or
mov
stos
push
test
ja
sub
push
or
cmpsl
iret
and
aas
inc
popf
pop
inc
and
pop
imul
jle
incl
int3
and
mov
in
ds
mov
push
mov
pop
jecxz
outsl
or
mov
lahf
xor
shrl
outsl
popf
insl
add
addr16
jno
lock
mov
xchg
mov
add
int
scas
adc
fimuls
addr16
imul
imul
lods
dec
test
xchg
pop
xchg
push
or
cmpsb
stos
mov
out
cmpsl
aam
repz
add
movsb
cmp
pop
xchg
push
or
std
sub
int
dec
std
mov
idivb
stc
inc
lods
xorb
and
cmpsl
cli
lret
cmp
sub
sti
mov
dec
or
dec
insl
fwait
movsb
ljmp
ret
int3
mov
dec
fsubs
adc
inc
sub
lahf
rorb
pop
xchg
cmp
repnz
or
arpl
in
mov
daa
inc
fucompp
or
das
js
adc
fcmovnu
xor
cli
cmp
test
movsb
add
xchg
test
cmp
test
testl
dec
jae
pop
cmp
push
sbb
lods
es
jno
repnz
into
mov
xchg
daa
pushf
loopne
into
int3
sbb
movl
pop
js
pop
sub
jnp
cmp
lods
fsts
pop
shll
mov
hlt
dec
movsl
aaa
sub
lret
rol
fmull
fstps
mov
popa
mov
cmp
movsl
sarl
fcomps
pop
pop
dec
cs
add
cwtl
push
mov
xchg
movsb
movsl
push
sub
mov
pop
dec
ljmp
outsb
push
test
push
and
cs
xchg
fwait
inc
add
mov
cmpsb
sbb
inc
fs
scas
dec
fmuls
jno
scas
inc
mov
mov
shlb
clc
lock
push
cmc
pop
subb
push
call
pop
jbe
and
mov
pushf
cmp
lods
xchg
bound
jle
cmpsl
out
push
addb
addr16
loope
jo
inc
lahf
lods
lods
loop
xchg
add
bound
pop
pop
fdivs
aaa
in
xchg
jl
sbb
rolb
fsubl
jmp
jo
shl
pop
adc
inc
fldcw
xchg
arpl
mov
cmpsl
inc
mov
sarl
leave
xchg
jecxz
mov
call
cmp
sbb
idivl
stc
arpl
sub
sub
bound
pop
scas
ret
ds
fcoml
ja
lds
shrb
fs
mov
fdivs
mov
fnstsw
aam
notb
dec
adc
repnz
jge
loop
add
lret
push
ret
imul
and
ret
rolb
xchg
pop
mov
inc
sub
jp
mov
cmp
sbb
ds
imul
int3
aaa
dec
ret
lcall
fsubrl
pop
int3
xor
push
push
jae
push
arpl
aas
loopne
and
pop
cmp
popa
lahf
xor
and
sub
fbstp
pop
lahf
pop
test
adc
xor
daa
dec
jbe
cmp
cltd
inc
mov
sahf
scas
inc
fdivrl
xor
pop
push
pop
in
leave
xchg
push
mov
iret
daa
test
pop
int
push
pop
mov
gs
les
push
stos
stc
pop
xchg
clc
out
out
add
js
pop
std
dec
pause
aam
sbb
repz
outsb
pop
ljmp
or
jmp
dec
mov
fbld
sarb
or
stc
imul
loope
dec
lret
sahf
dec
fcmovnbe
inc
icebp
xor
cmp
ret
std
sbb
repz
push
fidivrl
fdivp
sbb
dec
ljmp
dec
or
test
push
cli
pop
fs
jo
fistpll
sub
mov
div
insl
add
cmc
jo
cwtl
aas
test
fs
inc
mov
mov
mov
and
add
jle
int3
dec
jle
mov
push
insb
inc
xlat
clc
mov
jne
lods
cmp
mov
divl
and
inc
dec
or
jae
mov
jmp
push
imul
fimull
bound
pop
enter
pop
fidivrl
std
sbb
fisubs
mov
or
xchg
cmc
pop
xlat
fisttpll
mov
dec
inc
mov
inc
xchg
test
cmp
mov
jno
add
orl
out
cld
shlb
filds
ds
or
test
inc
xchg
jne
xor
call
bnd
subl
lods
into
or
fstl
jae
sub
int3
insb
outsb
in
xor
cmp
push
pop
sbb
push
popf
cmp
xchg
mov
jp
jne
pop
stos
fdivp
inc
push
add
aas
and
outsb
ss
push
push
mov
dec
int3
movsb
mov
fbld
dec
mov
cmc
imul
pop
and
js
jmp
std
test
sbb
mov
jmp
mov
das
ret
lret
or
out
adc
lret
mov
or
icebp
jbe
mov
xor
sub
int3
loopne
xchg
imul
mov
aam
insb
sbb
dec
sub
xchg
inc
je
mov
movsl
jns
pop
inc
adc
mov
popf
aaa
cmp
cmp
xor
mov
out
dec
cmpsl
jecxz
mov
pop
cmp
sbb
popf
xchg
sub
stos
add
popa
xchg
lcall
call
lret
mov
orl
adc
and
in
and
testl
mov
jae
push
popf
pop
adc
mov
mov
cmp
mov
in
fdivp
jo
setne
repnz
mov
push
sti
ss
xor
adc
insl
pushl
mov
inc
add
add
movsb
xchg
xor
inc
imul
jmp
sub
add
or
stos
add
adc
push
aas
jge
xchg
jle
fcmovnb
cmp
or
jg
int3
mov
push
loopne
pusha
flds
loop
in
fnstcw
and
dec
scas
adc
mov
loope
lods
addr16
fisttpll
ja
jno
lods
pop
jnp
mov
jns,pt
xchg
sbb
mov
sti
adc
ljmp
mov
out
push
xor
push
insl
fstpl
jb
mov
xor
jmp
mov
add
test
pop
dec
ss
arpl
push
arpl
or
imul
xor
lods
jbe
sbb
dec
in
ljmp
lea
dec
lock
icebp
int3
and
add
or
movsb
cmpsl
sub
popf
out
or
enter
and
mov
or
addr16
dec
fadd
cmp
in
and
js
outsb
fdivrl
cmp
pop
out
enterw
bound
mov
in
xor
xlat
mov
push
std
and
test
xchg
xchg
dec
adc
sbb
mov
es
outsb
repnz
clc
fstps
sbb
rorb
xor
xor
adc
stos
add
xor
rcll
int3
pop
dec
fwait
mov
or
pop
movsb
repz
cwtl
insb
out
int
lods
mov
jp
sub
movb
and
inc
cmp
and
cmpb
cmp
push
push
cld
stc
mov
pushf
mov
test
lret
mov
add
xor
jp
jmp
loopne
addb
cld
lods
fs
negw
jecxz
stos
aam
aas
into
or
adc
or
repz
sub
das
or
push
and
mov
xchg
lods
jecxz
dec
jecxz
ret
inc
ljmp
pop
push
out
inc
cltd
jl
dec
mov
lock
jnp
mov
stos
sti
xchg
mov
cmp
addr16
stc
mov
movsl
cmp
adc
sbb
or
or
cvtpi2ps
adc
and
shll
dec
or
ja
sbb
gs
pop
aaa
jg
ret
inc
push
out
popf
xchg
xchg
hlt
enter
clc
mov
insb
fsubl
dec
inc
popf
loope
in
pushf
test
ret
sahf
cmpsl
shl
stos
push
orb
cmp
jb
int3
cli
stos
test
testl
pop
jp
arpl
mov
add
dec
int3
fwait
mov
test
xlat
sub
daa
mov
and
add
subb
add
cwtl
lcall
das
mov
dec
mov
jl
fidivs
and
cwtl
lock
fsin
xchg
cmp
loop
ret
cmp
fadd
xchg
mov
xchg
jecxz
push
imul
aaa
test
cld
dec
pop
xor
rorb
pop
xor
lods
sub
lods
rorl
mov
cs
hlt
xor
xchg
pop
mov
pop
bound
jle
fnstenv
cmp
pop
dec
sub
pushf
pop
int
mov
clc
stos
das
cmp
out
dec
out
aam
jbe
lahf
dec
sub
out
cmp
dec
mov
jnp
shrl
sbbl
fs
shll
xor
aam
mov
shl
sub
imul
mov
in
mov
ror
lahf
cli
xchg
jmp
cwtl
adc
or
lret
push
ljmp
aaa
fcmovnbe
sbb
push
mov
es
cwtl
rcr
xlat
push
inc
mov
cmp
pop
xor
cmp
gs
std
ss
mov
or
jae
fildl
sub
mov
in
cmp
mov
mov
jg
aam
adc
add
cmp
push
and
add
inc
mov
dec
mov
test
push
mov
push
xchg
cmp
xchg
enter
outsb
pop
outsl
in
popf
cmp
sbb
add
cmc
mov
sbb
push
add
add
aad
sub
cmp
push
add
jg
pop
shrb
sub
fidivrs
jbe
mov
fs
sub
mov
es
and
call
fcmovnb
mov
cmp
arpl
lcall
adc
bound
push
outsb
in
and
mov
adc
and
sti
adc
inc
mov
ds
aaa
ja
mov
sub
add
sbb
push
push
jl
das
jns
repz
std
in
pushw
sbb
rorl
rorl
mov
insl
stc
test
lods
sbb
lods
leave
inc
mov
mov
mov
jb
push
sub
dec
adc
sbb
xchg
ss
cli
orl
sub
ss
and
outsl
out
insb
inc
cmpsl
or
adc
push
mov
lea
jmp
adc
ljmp
ret
mov
daa
les
inc
cwtl
sbb
flds
or
cmp
push
add
jne
push
jg
in
bnd
cmp
sbb
rclb
cli
sub
ret
dec
or
test
stos
stos
addl
and
jle
xor
shr
push
hlt
mov
push
adc
and
shll
stos
movsb
add
inc
lods
shrb
adc
add
mov
inc
loop
jp
mov
dec
pop
push
rol
or
mov
out
pop
inc
daa
rolb
xor
dec
cmpsb
int
jmp
addr16
push
cli
flds
ret
push
lds
jl
dec
arpl
decb
fiadds
ljmp
lods
xor
sti
mov
add
and
test
mov
pop
shrb
mov
mov
sbb
pop
xor
aas
xlat
sub
mov
mov
repnz
mov
shrl
or
cli
add
stos
dec
mov
rcrl
ficomps
test
or
jb
sub
xchg
fistps
jne
fisubs
gs
ret
sahf
cmc
xchg
sarb
pop
xor
das
xchg
mov
inc
inc
adc
in
imul
push
fwait
add
daa
add
mov
add
xchg
xor
xlat
dec
out
mov
fs
sti
or
pusha
adc
adc
outsb
push
mov
cwtl
mov
sub
int
sti
or
shrb
xchg
lock
push
mov
gs
stos
push
xor
fiadds
xor
xor
sarl
jae
rcr
scas
js
lock
jmp
fs
inc
stc
frstor
enter
loope,pt
push
cmpsl
imul
insb
pop
aad
xlat
adc
in
pop
fs
fsubrl
mov
enter
loope
popl
ret
imul
into
loopne
or
fistps
pop
mov
jecxz
pop
xchg
imul
sub
mov
and
scas
pop
je
ds
fbstp
in
xchg
adcb
lret
jge
add
addr16
sbb
lret
ss
jecxz
pop
cmp
test
dec
mov
sti
pop
jl
xchg
sub
and
push
mov
les
std
mov
test
sbb
cmpb
sbb
cmc
cmp
rcrb
dec
mov
mov
sbb
dec
dec
mov
mov
xchg
cmpl
test
aad
adc
test
mov
in
push
mov
lret
subb
inc
repz
cwtl
popa
push
cmp
mov
push
data16
xor
mov
jmp
push
stos
scas
sub
inc
pop
xor
xchg
je
mov
cld
inc
popf
les
repnz
movb
xor
xchg
loop
lahf
aaa
xchg
daa
faddl
cmpsl
aam
adc
xchg
sbbl
cmpsl
stos
in
jbe
jge
and
aaa
sti
scas
sbb
shl
pop
int3
mov
testb
xor
xor
jne
xor
jg
and
daa
dec
call
or
ja
pop
push
or
and
sbb
fs
mov
je
mov
aaa
jns
mov
imul
fbstp
lock
or
out
fadd
call
das
jb
sub
enter
cli
shll
fdivrs
adc
fcmovne
jb
mov
dec
idivb
ja
lea
add
xchg
dec
sahf
or
sahf
mov
inc
jmp
add
loop
stc
pop
xchg
int3
shlb
movsl
pop
pop
rcrb
stc
inc
adc
mov
or
roll
jmp
in
out
sub
pop
push
add
or
push
lods
repnz
mov
out
fldcw
mov
mov
push
pop
and
inc
int3
xor
xchg
and
lcall
dec
std
test
mov
out
lret
xor
xchg
setb
cltd
sbb
xor
mov
shrb
jmp
inc
aam
mov
push
or
sub
in
aam
test
push
movsl
inc
cmp
cld
mov
xchg
les
xor
sti
mov
sub
out
das
ljmp
cmpsl
push
mov
loope
sbbb
fs
sahf
push
ret
inc
loope
ljmp
jecxz
fisttps
sub
push
xchg
cs
and
out
dec
mov
sbb
outsb
or
xchg
xchg
and
out
pop
push
xchg
dec
insl
cmpsb
jne
inc
jb
in
nop
or
sub
dec
ret
in
jbe
les
sbb
inc
dec
psrld
push
push
idiv
jnp
cwtl
pusha
sahf
js
loope
add
fmulp
mov
jmp
or
cmc
mov
mov
xchg
adc
rcll
adc
in
inc
lret
int
sbb
xor
sbb
mov
pop
ret
stos
inc
cmp
jl
xchg
pusha
mov
scas
arpl
fwait
sbb
fisubrs
jg
ljmp
out
stos
dec
arpl
xchg
ret
fcoms
mov
xchg
and
xor
cmp
cld
lods
adc
mov
testb
loope
in
cmpsb
xor
sbb
dec
push
repz
loope
dec
fiaddl
jmp
loopne
fcmovbe
daa
unpckhps
mov
fistps
mov
sbb
test
aas
loop
sahf
push
xchg
aaa
test
outsl
movsl
xchg
lahf
cltd
xchg
sub
into
jb
repz
push
mov
fstpt
mov
xor
mov
repz
push
jecxz
cmp
add
call
inc
xchg
in
add
adc
fstp
test
pop
push
inc
dec
ds
inc
out
enter
mov
dec
or
arpl
push
sbb
sti
es
negb
push
in
mul
jo
jle
dec
pop
xorps
push
xchg
ja
das
inc
xchg
xchg
fwait
das
cmpsb
mov
cmpsl
jle
mov
cmc
sbb
mov
and
cmp
and
pop
aam
xor
inc
mov
inc
stc
mov
pushf
clc
rorl
fnstenv
ds
call
push
xor
in
or
mov
xor
repz
gs
lcall
fists
popa
jle
mov
cmp
fisubs
mov
insb
loopne
pop
vpsllq
sub
stc
push
mov
rclb
cwtl
sub
sbb
movsl
inc
sbb
push
mov
pop
add
jmp
mov
mov
jo
nop
and
std
mov
pop
subb
xor
jl
and
in
add
add
push
fdivr
stos
pop
xchg
mov
das
addr16
push
cmp
inc
lret
inc
push
mov
pop
daa
std
aas
lret
out
leave
lods
dec
adc
cs
outsb
insl
insb
inc
sti
clc
mov
adc
mov
int
mov
mov
insb
lret
fisubl
and
push
push
gs
in
push
push
js
push
stos
xchg
or
xor
bound
aas
dec
push
adc
divb
dec
imul
into
pop
stos
inc
scas
xchg
clc
stc
aaa
adc
adc
cwtl
out
out
push
mov
out
fwait
sub
ja
add
inc
stc
xchg
pop
jb
jae
loope
movsl
mov
mov
lret
dec
adc
pop
shll
pop
pop
push
scas
cmp
add
dec
xchg
jmp
pop
xchg
and
pop
test
es
loopne
adc
cld
push
andb
mov
xor
sub
jb
push
sub
mull
repnz
movsl
sub
cmp
ds
add
inc
loopne
test
mov
add
cmp
add
enter
mov
xchg
aad
roll
ret
ja
aaa
filds
dec
push
inc
and
sub
xchg
js
adc
stos
push
bound
pop
mov
out
aaa
fnsave
repnz
es
inc
xor
cmp
xlat
pop
mov
jle
adc
rcrb
pop
or
inc
jmp
fadds
adc
lock
movsb
sub
sbb
dec
repnz
adc
adc
out
repz
push
jmp
mov
adc
fdivl
cmc
movsb
aaa
divb
cld
test
xchg
jae
sub
push
inc
push
sub
cmpsl
mov
adc
mov
pop
and
movsl
cmovae
lock
lret
adc
add
sbb
pop
dec
cwtl
movsb
icebp
xor
popf
daa
jl
add
inc
lock
jno,pn
and
movsl
daa
rol
xor
stos
inc
dec
push
jg
cmp
cs
dec
cmp
clc
mov
mov
or
cwtl
test
adc
pop
addr16
repnz
mov
adc
mov
std
lahf
das
jne
daa
ss
xor
dec
fistps
mov
adcl
lods
mov
xor
xchg
mov
mov
adc
mov
jmp
xchg
cmpl
mov
icebp
and
pop
jne
movsl
mov
sahf
movb
fdivl
shll
daa
movl
rol
add
jne
mov
cmpb
jl
xor
jp
xchg
cwtl
xor
inc
mov
test
mov
mov
inc
ljmp
inc
dec
and
daa
ret
mov
sbb
sub
sbbb
pop
pop
inc
mov
out
xorl
test
stc
xor
mov
call
add
stos
out
and
inc
fwait
mov
test
pop
jnp
mov
repz
push
cmp
mov
mov
jge
mov
dec
out
lods
test
cltd
cs
or
push
or
mov
cmp
dec
je
jns
ljmp
lret
inc
out
mov
repnz
jecxz
imull
mov
out
sub
into
jnp
add
jecxz
sbb
pop
and
xor
ret
ljmp
xchg
scas
ss
xchg
sub
imul
lock
xchg
add
dec
repz
dec
in
mov
out
lret
cmp
mov
aad
xchg
rorl
xor
addr16
mov
add
inc
cld
lcall
xor
fstpl
or
in
int
and
cli
outsl
orl
dec
fildll
push
test
and
ja
out
ret
data16
and
adc
fwait
aas
sub
xor
out
fisubrl
sub
cli
lea
jg
push
clc
js
ficomps
test
fs
or
jnp
fstps
pop
mov
inc
out
arpl
out
pop
fcomi
jb
cmc
xchg
or
insl
in
push
cmpsl
fisttpll
adc
mov
in
add
xchg
es
bound
scas
outsb
cmp
call
xor
icebp
pop
inc
das
sub
fidivrl
push
scas
cmp
mov
pushf
bound
jg
push
out
push
scas
iret
popl
outsl
cs
or
insb
mov
sbb
add
gs
adc
nop
int
sub
add
mov
push
daa
stos
insb
roll
sub
stc
fdivrl
cmp
mov
in
or
xor
push
repnz
xchg
inc
add
mov
add
outsb
pusha
aam
mov
shlb
xchg
sub
imul
mov
out
popa
inc
in
hlt
xchg
sub
jg
push
push
jg
test
sti
cmpsl
fldt
aad
pop
gs
mov
mov
aaa
rep
popa
es
jo
ds
xchg
xchg
mov
ds
or
test
mov
jns
xlat
ja
add
inc
mov
push
jg
push
xor
pop
loop
cmp
mov
inc
mov
scas
decb
imul
scas
mov
push
pop
ret
aaa
mov
loop
jg
clc
fldpi
into
aas
push
shl
out
add
icebp
cs
mov
push
push
test
nop
mov
mov
cmp
xchg
mov
cs
mov
xor
imul
das
sbb
push
or
jmp
sub
testb
lds
mov
loopne
into
popf
mov
mov
sub
in
xlat
push
jns
loop
sarb
aaa
out
xchg
sbb
mov
inc
sub
scas
xor
sbb
roll
push
or
insl
sub
adc
push
ret
test
add
push
inc
push
sub
das
out
mov
lods
in
xchg
mov
adc
push
neg
push
icebp
ror
daa
aas
cmpl
sub
inc
sub
aad
mov
popa
pushf
xchg
pop
fwait
xchg
out
imul
ljmp
mov
movsb
jge
icebp
jb
jnp
lds
or
mov
js
pop
out
lcall
js
and
push
mov
mov
xor
imul
fwait
cmp
pop
xor
outsb
js
pop
loopne
stos
lret
push
jns
pop
stos
clc
cltd
frstor
rorb
out
es
and
mov
mov
dec
std
inc
mov
or
lds
fsubs
dec
xchg
hlt
nop
mov
fidivs
cmc
add
sub
daa
jp
cmpsl
inc
inc
fsubs
int
jp
inc
xchg
loopne
outsb
xchg
mov
test
mov
in
out
adc
jg
clc
fadds
sbb
pop
mov
and
push
rcrl
adc
sub
pop
mov
pop
bound
adc
pop
cmp
pop
int3
pop
xlat
fildll
sub
shl
test
xor
push
mov
adc
dec
movsb
mov
pop
xchg
mov
xor
inc
cs
lds
add
nop
cltd
cmpsl
pop
loop
cmp
mov
xor
mov
scas
xor
sahf
jl
cmp
outsb
cmpsl
insl
es
lcall
push
scas
push
xor
mov
add
rcr
or
pop
xor
pop
sub
test
stos
pop
push
push
mov
xor
mov
push
sbb
xor
and
xchg
scas
rcll
mov
insb
in
clc
clc
cwtl
imul
jo
pop
sbb
jbe
std
cs
push
mov
mov
cmp
mov
lods
je
repz
insb
adc
popf
popf
aaa
jne
pop
arpl
inc
adc
cmpsl
out
pop
imul
push
pop
mov
mov
inc
xlat
mov
into
mov
ds
adc
les
inc
dec
inc
xor
cmpl
dec
cli
cmp
pop
rclb
jl
sbb
not
data16
push
incl
push
xor
inc
or
shld
in
int3
adc
adc
clc
mov
lret
jp
fidivl
push
dec
xchg
inc
adc
mov
rorl
andb
adc
int
stos
jl
sti
out
pop
rorb
dec
push
push
mov
fidivs
jl
xor
lock
dec
inc
popf
das
stos
jnp
out
inc
int3
enter
inc
xor
add
pop
sahf
movsl
and
push
outsl
sub
sub
gs
in
pop
ljmp
lahf
adc
cmpl
popf
xchg
in
nop
fisttpl
jge
lock
lock
or
cltd
sbb
shll
repnz
std
jmp
mov
jmp
ss
mov
bound
add
push
sub
sub
xlat
insl
or
loopne
xchg
mov
iret
add
je
lods
fimuls
jge
lea
jae
jmp
je
push
aaa
dec
and
pop
xor
mov
out
xchg
push
lea
aaa
inc
lret
xchg
xchg
xor
std
out
jg
lahf
jp
in
cmpsb
std
dec
lea
outsb
addr16
fcmovu
sub
cmpsl
inc
mov
cld
sub
aaa
es
leave
and
mov
hlt
frstor
dec
jbe
mov
scas
sarl
pop
sarl
or
movsb
cmpsb
and
mov
push
leave
mov
iret
lret
inc
aad
stos
pushf
pop
dec
addr16
je
andl
aas
and
push
push
xchg
filds
mov
push
inc
jne
mov
dec
push
rcll
into
xchg
rorl
movsl
das
pop
mov
imul
inc
movsl
push
xor
xor
inc
stc
push
movsl
jns
cmp
or
int
test
repz
lea
ret
mov
or
lods
pop
cli
push
adc
test
bound
leave
ficomps
push
shr
pop
xchg
cmp
das
add
shl
enter
sti
inc
pop
sub
xor
xor
cld
xor
adc
sti
stc
stc
daa
fbld
xchg
mov
fbstp
or
pop
int3
icebp
push
ss
imul
jns
xor
xor
push
adc
mov
mov
insb
pop
push
sub
mov
mov
xor
xchg
xchg
cmp
in
sub
movsl
sahf
mov
outsl
lret
jae
outsl
inc
ds
mov
and
movsl
testb
xchg
mov
in
stos
xchg
loopne
sbb
xchg
adc
movsb
mov
sub
and
pop
in
scas
adc
out
push
sbb
out
and
roll
mov
faddl
pop
dec
ja
adc
jl
sub
xor
pminsw
jecxz
cmpsl
sahf
pushf
adc
sub
adc
vpavgb
sbb
cmpsl
jae
add
jl
adc
or
xchg
push
mov
inc
mov
push
std
mov
nop
loope
push
adc
mov
add
lret
dec
mov
cli
mov
dec
test
outsb
mov
pop
sbb
mov
adc
fdivp
cmp
push
push
add
xchg
push
gs
fsubrl
lret
out
dec
jmp
in
cwtl
add
xor
shll
roll
mov
mov
and
ss
mov
test
cltd
fadds
mov
sbb
dec
sarl
push
mov
shlb
daa
inc
iret
jmp
mov
xchg
fs
daa
lret
push
pop
enter
jge
fcompl
sbbl
jnp
inc
cmc
lret
push
lahf
lahf
add
sbb
lods
outsl
fnstenv
inc
cmp
jne
push
es
std
inc
stos
cmpsb
push
inc
aaa
or
frndint
les
sub
popf
insb
sub
jbe,pt
sub
bound
stos
in
xchg
js
push
fwait
pop
repnz
or
cwtl
dec
ficoms
mov
in
add
imul
movsl
mov
inc
lcall
mov
jg
mov
test
adc
lods
sahf
push
dec
shl
iret
bound
push
pushf
push
cmpsl
fs
or
cmp
insl
adc
mov
lods
and
leave
es
scas
movb
scas
and
int
mov
push
sbb
mov
adc
or
push
inc
cmp
imul
pusha
xor
or
jmp
and
dec
jle
mov
jmp
cmpsb
stos
ret
add
sbb
pusha
add
xchg
das
adc
rolb
push
pop
mov
jns
add
adc
sahf
mov
inc
sub
add
cmp
mov
mov
push
pop
fcompl
inc
inc
pop
out
out
or
insb
scas
xchg
dec
or
sbb
lcall
sti
lcall
nop
jns
cmp
ret
enter
mov
aaa
and
test
aad
push
mov
sbb
aam
call
or
ds
push
leave
xchg
xchg
inc
xchg
push
js
iret
sbb
int3
clc
test
jge
inc
sub
pop
jle
xchg
loopne
inc
add
pusha
scas
mov
icebp
test
mull
jmp
jne
jge
aas
arpl
inc
cmc
xor
mov
dec
repz
shrl
or
inc
xor
mov
mov
cld
lock
rcll
pop
sti
ret
fwait
cmp
into
fucomi
lds
rcl
and
dec
mov
mov
push
sbb
mov
mov
mov
mov
movsl
adc
sub
or
mov
push
xchg
and
sbb
and
outsl
popf
ret
fidivl
loope
and
add
test
mov
out
mov
inc
pop
push
adc
sub
into
jnp
xchg
movsb
adc
xlat
or
and
jmp
test
fidivl
adc
jg
cmp
bound
arpl
xlat
dec
cmp
clc
add
pusha
jle
add
enter
cmpsb
mov
xchg
dec
fcmovnbe
cmc
in
mov
dec
bound
xchg
xlat
repnz
ja
xor
adc
add
rcrl
adcl
and
dec
inc
dec
jmp
and
mov
mov
sub
xchg
sub
test
stos
pop
pop
mov
mov
scas
repnz
pop
xchg
or
enter
movsl
aam
cmp
xchg
pop
sti
mov
loop
jp
jecxz
fiaddl
add
inc
sub
pusha
jne
or
mov
xor
sub
test
cwtl
es
mov
fwait
cmp
pop
lcall
sbb
xchg
inc
cmp
sub
or
push
mov
es
in
sub
imul
addr16
sbbb
and
jae
xchg
push
and
int
pop
into
mov
hlt
pop
dec
pop
cmp
dec
sub
fsubs
cwtl
ljmp
lret
xchg
mov
add
add
jae
add
scas
jbe
cmp
jno
fs
in
dec
and
fidivrl
mov
popf
sbb
outsb
xlat
cmp
sbb
push
aas
ret
sbb
mov
cli
xor
xchg
subb
enter
jge
pop
adc
int
jnp
sub
test
ja
imul
fnsave
icebp
and
adc
or
sub
dec
mov
adc
fsubr
pop
stos
push
sbb
sbb
jns
ret
pusha
or
push
stos
in
les
lea
xor
push
sarb
push
mov
xchg
fwait
bound
lea
mov
mov
adc
mov
dec
enter
add
icebp
jp
cld
popa
mov
jo
subb
adc
pushl
pop
fwait
div
mov
lret
mov
mov
or
mov
and
cmp
pop
jecxz
outsb
push
cmp
ficoml
dec
in
mov
xor
rcl
fucomp
mov
push
shl
jmp
addr16
mov
push
fistps
jp
lods
sbb
pusha
jae
mull
pop
pop
cmp
dec
dec
jl
add
pop
mov
sub
lock
or
outsl
iret
mov
repz
pop
int
out
call
std
xchg
xor
add
cld
mov
aas
xchg
sahf
dec
or
stc
rcl
sbb
jns
or
cmc
ret
sbb
leave
jl
dec
jo
mov
lret
movsl
xchg
cmpsb
add
outsb
test
aad
cmp
mov
in
repz
imul
adc
add
dec
xchg
ljmp
in
cmp
inc
icebp
or
mov
cmpb
mov
xchg
lods
or
jp
or
cltd
or
mov
enter
pop
aad
pop
xchg
data16
pop
pop
arpl
in
cmc
test
jne
lahf
sahf
add
fcom
xor
cmpsb
cmpb
add
cs
test
inc
lds
lcall
pop
cmp
lds
add
push
mov
iret
sub
pop
bound
leave
add
xchg
stos
sahf
test
and
sahf
xchg
push
push
in
imul
jae
arpl
push
imul
mov
add
inc
stc
jne
adc
into
jns
fwait
dec
jae
mov
aas
push
inc
movsl
cmp
test
mov
insb
sub
loopne
xor
xor
out
lret
jle
xchg
push
mov
jbe
test
jbe
add
jnp
in
push
lods
sti
pop
in
inc
nop
mov
fs
and
inc
rcrl
push
leave
dec
pop
mov
lods
sub
cs
mov
mov
lock
mov
out
mov
lods
lea
mov
jns
xchg
cs
jecxz
xor
mov
movsb
in
ja
or
jge
sbb
lock
xchg
jnp
or
nop
pop
divb
stos
inc
xchg
xchg
pop
sbb
sti
mov
repnz
mov
imul
lds
xchg
cwtl
mov
out
jge
loop
rcr
cmp
jbe
test
fs
cltd
mov
jbe
addr16
cwtl
stos
cmp
daa
pop
cld
xor
js
incb
repnz
inc
add
enter
lret
or
fldl
in
clc
jecxz
or
push
imul
mov
ljmp
mov
add
mov
ret
into
push
clc
mov
pop
dec
or
jg
aad
adc
push
pop
sbb
adc
scas
inc
mov
idivb
mov
in
clc
xchg
js
pusha
cmpl
cltd
in
xchg
aaa
imul
xsave
cmp
push
mov
mov
into
lods
jae
dec
xchg
lods
mov
leave
mov
add
shlb
sbb
imul
xchg
stos
mov
add
mov
scas
mov
push
arpl
and
cmp
mov
inc
ret
cmp
xor
mov
cmp
pop
jl
cmp
inc
push
into
push
dec
addb
enter
imul
out
aad
sub
into
add
xchg
xlat
fs
movsb
sbb
xor
pusha
and
dec
jo
jge
nop
dec
sbb
test
mov
xor
mov
fmul
mov
call
mov
and
or
add
mov
jbe
movsl
jg
sti
loop
movsb
sub
sbb
jl
loopne
test
sbb
ja
mov
loop
add
xchg
xlat
fistpl
cld
stos
sbb
or
test
shrl
lcall
xchg
inc
psrlw
aad
test
sbb
clc
xchg
push
or
shll
xor
pop
icebp
rcl
loopne
adc
outsb
arpl
sub
icebp
push
dec
packsswb
xor
push
add
xchg
add
inc
out
and
mov
ja
sbb
mov
cmp
lcall
repz
push
in
or
clc
shlb
imulb
cmp
push
stc
add
test
adc
adc
pop
stos
fs
pop
xchg
sbb
cmp
pusha
dec
mov
push
repz
inc
or
cmp
shlb
mov
jnp
dec
aas
mov
xor
mov
mov
cltd
into
orb
in
cmc
add
sub
fisubrl
add
cmp
pop
stc
int
inc
push
and
add
es
jmp
sarl
shrl
xchg
mov
mov
shlb
jo
movsb
out
pop
xor
mov
and
sub
mov
mov
xor
out
xor
push
rorb
adc
stos
rcrl
ret
outsb
ljmp
push
sbb
ror
movsb
mov
je
mov
mov
xchg
aaa
jge
xchg
aas
push
lcall
jecxz
jbe
addr16
adc
shrb
out
jae
mov
hlt
pop
sti
bswap
lock
frstor
cmp
cmp
test
inc
xchg
jmp
bound
jmp
pop
in
mov
jo
je
out
mov
in
imul
addr16
ljmp
mov
add
mov
inc
sub
pop
pop
mov
movsb
aas
mov
adc
cmp
pop
out
add
push
insb
xlat
repz
sbb
pop
and
add
adc
adc
ret
popa
popf
add
lds
notl
pusha
jno
pop
dec
dec
cmpsl
lret
pop
xlat
popf
fstpl
or
xchg
loope
fiadds
xchg
or
cmpsl
das
loope
ret
mov
push
sbb
mul
fldcw
add
xor
shrl
data16
sub
push
or
xor
cmp
sbb
jb
mov
cmp
jns
scas
ljmp
addr16
xchg
xchg
imul
dec
mov
pop
and
insl
enter
mov
mov
sbb
popa
mov
stos
incb
dec
sar
mov
xor
daa
mov
or
cld
sub
inc
insl
dec
adc
xor
push
lgs
and
cld
lea
insb
loope
push
jge
add
mov
subb
out
sub
lret
mov
loopne
fldenv
pop
rorl
out
aas
xchg
inc
mov
jge
cmc
ficompl
adc
out
outsb
jae
sbb
pop
call
insl
inc
cld
push
jns
das
mov
xchg
jns
leave
inc
movsb
pop
pop
fwait
leave
adcl
mov
nop
sub
cmp
js
lahf
add
add
xor
add
jbe
pop
frstor
je
popa
js
hlt
add
sub
xchg
push
inc
mov
push
pop
pop
pusha
mov
inc
inc
insb
test
arpl
out
lea
scas
mov
pop
out
jns
and
aam
aad
loopne
jne
arpl
outsb
cs
dec
out
inc
enter
sub
stc
lds
scas
test
mov
pop
shll
dec
inc
mov
add
push
dec
loopne
mov
cmp
or
dec
pop
pop
or
sub
test
mov
cmp
add
mov
shll
push
adc
cmp
add
insl
fisubl
push
mov
mov
or
add
adc
mov
dec
xchg
jge
jnp
jo
shrl
sbb
xchg
pop
mov
in
or
inc
dec
and
and
clc
sbb
push
and
or
sub
ds
testl
jbe
into
push
sbb
fs
and
pop
dec
mov
jae
fcomps
add
mov
gs
adc
mov
pop
cs
and
mov
xchg
dec
xchg
or
inc
stos
mov
pop
add
mov
dec
rcl
mov
push
ret
idiv
mov
sub
pop
adc
xchg
dec
pop
fucomi
stc
mov
out
fcompl
rcrb
xchg
jmp
push
imul
in
jp
jmp
das
cmc
je
mov
dec
mov
mov
mov
push
mov
xor
xor
rorl
adc
movsl
dec
fsubrl
pushf
fidivrs
and
std
pop
inc
inc
push
add
mov
sub
sub
lods
sbbb
or
jecxz
in
bound
int
cld
xor
es
mov
aad
and
add
sbb
imul
es
mov
dec
sub
push
jmp
mov
inc
add
xchg
subl
outsl
loopne
inc
push
or
rclb
aad
mov
outsl
mov
adc
sub
sub
inc
pop
and
sub
mov
gs
dec
stos
gs
inc
das
mov
xor
cmp
addr16
lret
or
cs
call
jo
dec
mov
push
sub
out
outsb
test
xchg
addr16
jbe
out
adc
addr16
dec
xor
cmp
dec
xchg
aam
cmp
mov
fisubl
and
or
adc
rol
dec
cmp
pop
cmpsl
push
popf
push
adc
mov
insl
idiv
insl
popf
mov
lcall
imul
mov
enter
daa
push
lock
nop
inc
mov
mov
push
into
in
mov
fdivrl
or
pop
add
pop
add
xchg
sbb
pop
repnz
push
enter
push
push
data16
cmp
mov
inc
mov
dec
xor
enter
ret
testl
and
leave
push
dec
pop
mov
mov
add
fcoml
cmp
add
bound
and
xchg
adc
fnstcw
sub
je
dec
sbb
mov
dec
push
lcall
mov
call
sbb
jg
test
mov
dec
leave
dec
movsb
jb
xor
xchg
mov
outsl
nop
fs
push
mov
and
dec
hlt
mov
jns
mov
cmp
or
add
int
xlat
leave
and
jne
out
repnz
jo
adc
mov
shr
lods
ja
loope
mov
mov
ficompl
adc
mov
adc
iret
lcall
sbb
xchg
mov
xor
add
mov
push
inc
pop
mov
stos
iret
cmp
outsl
mov
adcl
insl
nop
mov
nop
mov
jmp
lahf
addl
add
test
dec
push
and
xchg
int
loopne
sbb
pop
xor
cld
sub
pop
and
loopne
lahf
push
xchg
loope
push
mov
into
repnz
mov
xchg
inc
xchg
pop
pop
mov
add
repnz
shlb
and
subb
lret
inc
je
mov
dec
xchg
xchg
pushf
xor
iret
imul
push
inc
loope
mov
adc
sub
sbb
xchg
jg
jle
mov
adc
sub
cmpsl
fbstp
mov
push
xor
movsb
adc
mov
sahf
test
lret
mov
arpl
jnp
imul
movsl
cld
cs
inc
popf
fs
jmp
xchg
test
inc
in
icebp
mov
test
cmpsb
es
cmc
popf
popf
mov
jl
aaa
pop
add
test
push
out
mov
pushf
add
mov
jecxz
pusha
add
or
sub
js
das
inc
lcall
jb
dec
imul
push
fs
ljmp
push
mov
xchg
ret
sti
xchg
push
jecxz
mov
dec
cmp
out
out
repz
sub
cwtl
sbb
mov
sti
mov
xchg
aad
cli
sub
mov
ret
dec
filds
xchg
sub
out
stos
inc
addb
xchg
shrb
or
and
jle
xor
in
pop
movsl
add
add
add
or
es
or
mov
into
jns
roll
or
fwait
mov
je
imul
and
sar
sbbb
mov
into
out
es
test
xchg
and
aaa
repnz
inc
or
sbb
fs
loop
jmp
shr
or
cmp
test
inc
xchg
xchg
bound
cli
jmp
cmp
test
cmp
sbbb
add
xor
loopne
pushl
dec
bound
shll
and
dec
enter
mov
dec
mov
xchg
sub
cmpsb
gs
add
adc
movsb
and
fadd
es
out
push
nop
mov
dec
cmp
imul
jb
mov
mov
pop
xor
jmp
cmpsb
cltd
rcl
mov
xor
loopne
dec
out
xor
mov
cmp
mov
scas
sub
iret
hlt
aam
mov
inc
dec
leave
mov
repz
jne
cmp
outsb
jmp
adc
pop
sub
jo
adc
stos
xadd
stos
fcmovnb
mov
out
das
adc
test
mulb
pop
movswl
mov
jo
mov
xor
sbb
sub
adc
rclb
fcompl
inc
inc
bound
adc
mov
cmc
scas
loope
mov
dec
inc
push
dec
jmp
adc
mov
loop
cmc
or
xchg
dec
mov
fistl
or
cwtl
repnz
mov
mov
sarb
data16
mov
cltd
lcall
push
mov
cmp
cmpsl
mov
iret
pop
mov
inc
dec
mov
arpl
enter
push
lea
add
add
aas
mov
jno
push
or
subb
pop
add
inc
ret
cmc
mov
cmp
clc
scas
add
inc
sbb
adc
jb
or
mov
push
cmpsb
cmp
xor
call
cmp
fsubrs
and
inc
rorb
addr16
lds
dec
ljmp
inc
cmc
pushf
test
pop
adc
lea
jl
and
cmpsb
fwait
jns
jp
xlat
loop
mov
push
jne
jmp
les
mov
ds
and
and
lahf
imul
repz
pushf
mov
movsl
lahf
loope
int3
nopl
bnd
mov
jo
mov
das
cmp
xor
sbb
cmp
pop
push
aas
adc
xchg
pop
mov
test
push
imull
jo
in
dec
inc
test
mov
sub
cs
mov
hlt
sahf
cltd
and
mov
sahf
lcall
add
cwtl
jmp
push
idivb
pop
add
push
mov
dec
dec
xchg
cmpsl
dec
inc
inc
call
pushf
lret
jae
jmp
pop
xor
sub
js
fidivrs
imul
or
push
pop
pop
fildl
add
rorl
clc
ljmp
jae
aas
sbb
aad
lods
cmc
mov
inc
lret
test
mov
leave
icebp
mov
mov
cmp
push
or
inc
mov
cmc
outsl
movsl
or
movsl
inc
mov
or
nop
jbe
jecxz
cmc
sti
std
ficomps
mov
xchg
test
pop
pop
addl
push
mov
inc
mov
sbb
sub
aam
add
inc
notl
inc
lcall
fnstsw
repz
jnp
mov
push
xor
push
sub
int3
rcr
add
mov
in
push
jne
xchg
mov
imulb
sahf
stos
leave
mulb
lock
movsl
pop
daa
pop
fnstsw
iret
sub
mov
push
cld
add
mov
push
push
cwtl
inc
je
fwait
in
aas
aad
and
mov
cmp
cmp
movsb
test
divb
loop
or
mov
frstor
xor
cmp
fsubrs
xor
add
xchg
ljmp
pusha
mov
test
jge,pn
sti
es
ljmp
pushf
xor
mov
adc
xor
mov
lea
cmpsb
xor
mov
jl
shrl
arpl
dec
cmc
sarl
pop
jns
inc
enter
inc
mov
fwait
push
jae
fildl
adc
iret
test
cmpsb
or
adc
ret
or
mov
mov
cs
negb
jle
std
rcrb
xchg
xchg
movsl
inc
popf
nop
push
xor
sbb
hlt
movsb
int3
int3
xchg
sbb
repnz
out
mov
imul
test
loop
popa
arpl
jmp
push
outsl
add
out
jg
jno
out
jne
xor
push
in
mov
sbb
aad
lods
jge
jne
loope
mov
loop
cmp
xchg
sbb
push
cmp
dec
mov
mov
std
std
and
nop
pcmpeqd
outsl
xor
mov
jns
cli
jecxz
push
cmpsb
rolb
les
or
js
es
xchg
js
sub
popa
rcrb
mov
dec
cli
inc
dec
shrb
sub
test
add
int3
enter
xor
fisubs
inc
call
fs
dec
gs
xchg
mov
insb
mov
les
mov
es
or
xchg
sbb
lea
inc
les
dec
fstpt
cmpl
and
addb
in
inc
or
inc
mov
jbe
aaa
mov
pop
add
les
popf
ret
xchg
fdivs
jg
push
jl
inc
xchg
jmp
data16
enter
jl
or
cs
shll
pop
adc
test
lea
dec
cmpsl
fstpl
push
in
repnz
cld
loope
pop
mov
nop
mov
sti
and
push
mov
jo
in
jecxz
in
xchg
xor
imul
and
mov
pusha
mov
inc
jecxz
fs
xchg
pop
pop
dec
xor
mov
icebp
repnz
daa
or
xchg
fists
loope
adc
fwait
mov
pushf
add
pop
sahf
mov
xchg
cmpsb
sub
aam
mov
rorb
loop
inc
sbb
adc
pop
mov
out
lret
pop
popa
stc
sbb
imul
mov
into
pushf
lea
popa
negl
cmp
mov
xchg
pop
fwait
ret
lea
pusha
cli
test
sub
sti
cmpsl
notb
push
data16
sbb
cli
adc
fidivrs
das
pop
cltd
adc
dec
pushl
mov
push
js
repnz
sub
cmpsl
inc
and
cmp
cmp
into
dec
adc
aas
dec
adc
cltd
clc
lret
adc
iret
jne
sbb
je
dec
call
sub
mov
xchg
mov
dec
sar
push
push
fdivrl
xchg
in
pop
cmp
mov
loop
cmp
add
loop
movsl
dec
jno
fstpl
into
or
icebp
push
shl
insb
in
cmpl
mov
adc
shlb
out
std
in
dec
sub
fidivs
jecxz
in
scas
or
sahf
jns
cmp
push
pop
push
test
mov
subl
lds
jecxz
lret
jl
mov
jne
jno
inc
inc
cmp
idivb
add
cwtl
mov
out
repz
dec
xor
lret
dec
inc
mov
mov
jl
dec
push
inc
out
mov
jne
mov
xchg
adc
inc
push
dec
lods
nop
into
mov
ja
dec
in
pop
aad
inc
imul
fsubr
rclb
test
push
pop
mov
pop
jmp
or
mov
sarb
mov
cmpsb
imul
sbb
fidivs
int3
outsb
sahf
in
imul
mov
mov
mov
mov
lahf
mov
andb
ret
popf
hlt
clc
fcmovnbe
mov
fnstcw
push
mov
or
xchg
icebp
jns
mov
pop
mov
mov
repz
sbb
in
pop
repnz
shll
in
xor
jmp
jnp
ror
popl
dec
test
or
sub
push
popa
dec
imul
int3
dec
ss
pop
xlat
and
pop
add
adc
mov
and
scas
andl
and
lock
stc
pop
push
jmp
sub
dec
enter
inc
inc
push
dec
adc
into
sbb
push
xor
mov
jb
mov
fildl
xchg
loop
cmp
popa
cmpsb
mov
sbb
xorl
pushf
sbb
ja
sub
outsb
inc
xchg
pop
nop
lret
imul
cmp
jne
addr16
sbb
mov
jnp
lret
fists
ret
stos
call
fmull
scas
mov
xor
mov
outsl
popa
push
pop
push
sbb
fs
xchg
int3
cmp
lret
mov
pop
lret
xchg
lock
and
add
mov
in
fsts
clc
rorb
sbb
sub
pop
int3
jo
lea
dec
int3
and
push
sub
pushf
mov
xchg
pop
pop
mov
mov
icebp
dec
inc
test
notl
or
insl
lahf
xlat
dec
push
push
xor
iret
push
xor
leave
scas
mov
sbb
repz
jnp
jmp
iret
push
mov
lds
xor
in
pop
sahf
push
imul
int
push
in
lods
shll
pop
scas
push
mov
lea
addb
leave
sub
insb
push
mov
lea
pop
sbb
mov
lcall
cmp
or
lret
dec
cltd
jnp
xchg
mov
int3
cmp
xchg
in
ret
push
sbb
aaa
into
sub
hlt
dec
cltd
dec
fistpl
in
add
dec
mov
adc
stos
jne
inc
push
shlb
or
xchg
andl
cmpsb
lock
sti
adc
adc
rcrl
rorb
or
outsb
repnz
imul
and
xchg
mov
lea
dec
and
pop
dec
icebp
inc
and
pop
popfw
mov
xorb
jb
xchg
push
or
out
popf
push
mov
mov
mov
movsb
lcall
aam
sub
pop
lret
rolb
adc
cs
jne
cld
and
shl
cltd
cbtw
xchg
push
xchg
stc
sub
mov
into
push
mov
sbb
shlb
jmp
mov
inc
hlt
inc
mov
ret
cmc
lret
dec
in
pop
xchg
push
pop
orl
aad
andnps
sub
js
cld
gs
dec
and
mov
rcrb
popf
and
sbb
out
hlt
push
jl
cmp
inc
movsb
fcmovb
aas
bound
adc
sbb
xchg
push
jae
aad
dec
fists
adc
pop
push
ds
jl
or
xor
sbb
scas
cmp
mov
jecxz
cmpsl
and
dec
lock
cltd
or
repz
fnsetpm(287
shlb
jnp
sbb
xor
lahf
std
jg
sahf
test
dec
test
out
sub
sti
add
mov
jno
inc
jg
mov
mov
cmp
ret
sahf
push
stos
aaa
xchg
adc
cmp
enter
lea
inc
mov
xor
sub
xor
stos
push
push
neg
mov
xor
jge
fwait
add
popf
xor
add
push
adc
test
inc
notb
roll
inc
mov
idivl
cmpl
out
in
dec
bound
mov
mov
hlt
pop
inc
in
or
mov
sbb
test
scas
dec
cmp
ja
push
dec
mov
popa
and
or
cmp
jne
in
jg
rcrb
scas
daa
inc
outsl
inc
mov
movsl
sbb
in
das
aas
inc
mov
mov
mov
mov
repnz
lcall
mov
add
xlat
and
inc
ljmp
pop
in
mov
jg
mov
jge
xchg
dec
das
je
xor
lds
leave
les
push
mov
rorb
xchg
shrl
xor
aas
jl
or
repnz
js
mov
and
in
lret
and
push
or
ljmp
mov
add
mov
push
enter
mov
push
in
push
mov
pop
cld
add
rcrb
rcll
sbb
loopne
popf
mov
mov
sub
bound
xor
push
ror
or
add
jb
pop
push
jbe
adc
mov
lods
fs
or
push
addr16
jo
cmp
out
mov
outsl
gs
cmp
sbb
pop
jmp
sahf
andb
pop
xchg
mul
loope
stos
push
adc
orb
fildll
out
or
clc
pop
test
inc
cmp
mov
sub
dec
int
or
sbb
clc
and
inc
std
jg
cmp
and
dec
push
hlt
icebp
sub
outsl
fadds
and
and
jbe
mov
mov
push
in
or
adc
mov
lahf
xchg
adc
pop
pop
dec
mov
cmpsl
ljmp
xchg
adc
imul
iret
and
fldcw
or
and
or
lods
add
test
popf
or
cmc
ret
into
xchg
sbb
mov
mov
pop
lcall
int3
adc
std
jge
mov
sbb
xor
sti
add
sbb
jle
mov
xor
cmp
daa
cwtl
jmp
sub
das
addb
push
adc
lahf
pmaxub
es
faddl
or
pop
repnz
aas
jne
adc
test
ljmp
sahf
pop
xor
push
mov
imul
mov
and
stc
pop
cltd
or
add
sar
enter
imul
mov
idivb
leave
sub
and
mov
stc
and
xchg
mov
inc
push
pop
xorb
inc
iret
faddl
imul
push
or
fnstsw
sbb
sbb
enter
mov
jmp
jne
outsl
sarl
and
dec
adc
into
rcr
leave
imul
insb
dec
push
bound
mov
test
stc
cltd
popf
bound
add
push
out
jne
mov
call
mov
nop
push
sub
inc
or
pusha
leave
iret
test
cmp
inc
cmp
cmp
mov
xchg
cltd
inc
jmp
or
push
or
les
xlat
add
sub
call
int3
lahf
add
subl
lods
pop
push
pop
sbb
sub
lock
insb
mov
cmpsb
jmp
scas
scas
iret
daa
mov
in
cli
mov
mov
cmpsb
aas
out
loopne
mov
cmc
mov
movsl
adc
fwait
pusha
xchg
add
rcr
inc
stos
sub
jg
scas
jl
xorl
dec
or
mov
leave
sbb
out
fdivrl
fstl
push
mov
add
scas
mov
loopne
mov
shrb
add
imul
dec
lea
push
jb
pop
stos
adc
test
adc
fisubrs
jmp
out
or
jb
jb
mov
icebp
dec
cmp
bound
jno,pn
insl
out
ret
cmp
aam
pop
pop
pop
loopne
sbb
subb
or
cmp
mov
cmpsl
xor
jp
data16
jne
mov
push
out
test
je
pushf
aam
sub
into
or
inc
rclb
mov
int
ds
lret
cmpsl
push
mov
dec
dec
rcll
xor
or
push
stc
push
xor
out
inc
xlat
xchg
testl
lcall
add
sbb
cmp
mov
scas
mov
dec
mov
movsl
in
cwtl
jg
jmp
sub
das
mov
add
repz
je
xchg
xchg
inc
movsb
iret
lcall
aas
fidivl
pop
push
or
js
dec
leave
mov
cli
stos
sti
in
jae
lcall
cmp
sysexit
xor
lret
or
adc
and
popf
in
pop
stos
or
mov
xchg
les
jnp
out
mov
jo
out
daa
xchg
in
cmp
mov
test
and
xchg
or
mov
mov
mov
pop
mov
xchg
xchg
xor
pop
repz
sbb
insl
pop
sbb
or
ret
ret
sub
or
cmpl
ret
hlt
lds
lahf
pop
pop
insl
insb
aad
cltd
out
push
imul
addr16
push
or
push
sub
out
cmpxchg
add
jecxz
out
xlat
rolb
in
stos
lds
cmp
sub
fstl
jns
lea
inc
pop
insl
sbb
mov
xchg
push
or
ret
xchg
mov
push
sbb
sti
xor
adc
or
adc
push
lret
js
hlt
cmp
mov
es
or
sub
aad
cwtl
jl
ss
xchg
cmp
dec
ret
sbb
jg
add
push
sbb
outsl
push
loopne
in
push
sub
or
xor
xchg
int
jp
icebp
aas
inc
scas
jge
adc
xchg
fincstp
std
cmc
mov
hlt
mov
loop
pop
jnp
loop
shrb
add
sarl
adc
fstpl
push
mov
add
mov
xchg
dec
sub
mov
cltd
jmp
pop
call
jo
cmp
mov
sbb
push
in
test
loope
cs
ja
jge
imul
and
popf
xchg
ret
mov
pop
loopne
jnp
insl
test
add
call
imul
fcmovu
or
fimull
popf
clc
xor
int3
pusha
mov
or
out
or
push
aad
or
xor
add
cmpsl
cmp
inc
jmp
pop
mov
push
in
out
mov
lds
imul
jb
add
call
jnp
loopne
arpl
jno
sbb
inc
stos
cmp
cmp
sbb
sbb
mov
jecxz
dec
xor
mov
jl
lock
push
mov
stos
and
sub
mov
mov
push
shlb
pop
icebp
int
xor
out
dec
lret
pop
outsb
dec
orl
and
mov
jae
into
rolb
ret
andl
notl
add
cli
inc
dec
dec
adc
mov
cltd
push
or
mov
mov
inc
pushf
scas
popa
inc
ret
test
scas
push
subl
rcrl
lret
outsl
insb
jbe
push
jo
mov
inc
movsl
jge
imul
ljmp
ljmp
leave
adc
cld
call
xor
pop
xor
cld
mov
int
mov
mul
lods
sub
loope
inc
and
fldcw
test
add
fildl
xchg
test
sub
mov
aas
sub
daa
fistpl
pop
and
dec
jno
hlt
fstl
mov
add
pop
scas
adc
fnstenv
loope
add
decb
mov
adc
jmp
int3
cld
mov
adc
enter
pop
inc
fxtract
inc
sub
stc
cmp
subb
aam
pop
push
lret
sub
pop
jne
xor
add
int3
push
or
loop
nop
push
xchg
movsb
imul
les
or
jae
or
cli
adcb
push
idiv
imul
mov
cmp
inc
cs
cmpsl
pop
shl
test
cmc
in
into
adc
lmsw
mov
fists
jle
mov
or
xor
adc
hlt
lcall
mov
mov
js
je
cmp
mov
test
stos
jle
loopne
cmp
fnsave
popf
ds
clc
imul
pop
jl
imul
outsb
lret
lea
push
les
dec
popa
xor
cmc
aam
out
mov
and
push
aad
push
mov
test
dec
pop
cmpsl
adc
jp
cli
in
fnstcw
jne
jge
mov
xchg
es
andb
roll
push
inc
lahf
adc
or
xchg
lods
testb
push
dec
and
pop
rcrl
out
sbb
mov
aad
inc
push
cli
mov
adc
js
mov
and
imul
sub
in
std
mov
jge
inc
xlat
ljmp
push
cmp
sti
daa
xor
sbb
out
xchg
pushf
loope
push
adc
les
cwtl
out
pop
add
dec
test
dec
push
mov
sub
pusha
leave
xchg
js
popf
orl
dec
adc
push
dec
sub
lock
mov
rcrb
xor
cmp
in
jno
mov
pop
and
pop
pop
cmp
out
and
xor
pop
rolb
dec
ds
jge
out
jp
sub
aas
adc
mov
dec
loopne
cli
push
adc
mov
jnp
mov
jmp
aas
mov
jg
or
jge
xchg
test
mov
mov
mov
push
movsb
mov
outsl
add
cltd
mov
loopne
mov
jo
inc
cmp
clc
lahf
add
add
dec
and
mov
lea
imul
xor
cmp
rolb
daa
mov
out
jmp
xor
and
in
jne
leave
mov
push
sbb
aam
insl
rorb
or
dec
inc
cmpsl
rorl
pop
mov
mov
push
mov
out
pop
cmp
xchg
stc
into
pop
out
lret
lcall
xchg
iret
lods
mov
jg
bound
dec
stc
mov
rcrb
ret
sbb
std
jbe
mov
mov
push
aam
dec
jo
xchg
lcall
xchg
dec
cwtl
xchg
mov
mov
clc
aam
pop
sbb
sbb
out
divl
mov
pop
dec
jb
aam
and
sahf
dec
xchg
js
xchg
sub
sub
notb
movsl
pop
fiaddl
cmp
inc
lods
popa
xchg
mov
aad
mov
sahf
stos
fsubrl
jmp
les
xor
xor
sahf
movb
insl
pop
shll
sti
std
push
call
adc
jbe
popf
stos
mov
mov
add
leave
sbb
jmp
pop
mov
pop
sar
cmp
sub
mov
xor
jno
pusha
out
sub
mov
sarb
jl
xor
cmp
adc
cmp
push
insb
ds
mov
mov
mov
addr16
ja
mov
rcll
sbb
add
jmp
gs
jno
pop
xchg
add
jp
fbld
in
adc
out
inc
pop
dec
scas
push
mov
pushf
xor
test
cmp
push
pushf
fnsetpm(287
stos
jecxz
insl
out
mov
sbb
in
mov
lcall
jne
add
and
or
fst
sbb
lods
int
push
and
int3
dec
jno
cmp
and
or
gs
or
mov
loope
orb
or
and
rol
inc
test
js
xor
dec
pop
jge
cmp
mov
sahf
push
lods
xor
pushf
icebp
nop
xor
lds
int3
out
mov
out
sub
dec
or
int3
sub
pusha
int
cmp
aam
dec
push
inc
imul
popa
and
mov
sbb
test
sub
xor
je
jp
or
cltd
ret
and
mov
cltd
cltd
adc
mov
mov
in
mov
pop
js
addl
or
jns
sub
mov
out
int3
lret
test
fdivr
xchg
cmpsb
mov
jnp
and
mov
sub
es
or
mov
jge
or
lea
add
dec
enter
and
das
std
adc
push
negb
xor
xchg
pop
push
ljmp
xchg
cltd
inc
inc
lret
mov
adc
xor
fstpl
or
sub
add
dec
rclb
clc
pushf
cmpsb
sti
adc
xchg
insl
adc
aam
pop
and
add
pop
mov
shlb
imul
push
inc
xchg
mov
aam
jp
sub
rcll
test
cs
mov
fcmovnb
mov
push
test
mov
dec
insl
mov
test
cwtl
sub
inc
rcrb
aaa
xor
xlat
ficoms
inc
jge
aas
mov
add
test
sub
hlt
inc
rcrb
stos
inc
into
dec
filds
out
inc
popf
into
dec
or
sbb
mov
shlb
xor
jle
cmpsl
stc
sub
push
ja
and
xor
dec
mov
test
or
lods
mov
je
xor
adc
lods
sub
icebp
mov
push
daa
into
jge
xchg
in
xor
ds
fistpl
fs
daa
sub
xchg
adc
jnp
mov
sbb
sarl
ds
scas
cmp
js
pop
cli
std
fistpl
das
dec
push
jae
in
imul
mov
icebp
push
es
sbb
loope
sbb
mov
add
shrl
mov
es
lret
mov
leave
scas
add
mov
aas
or
movl
mov
add
mov
int3
mov
xor
stos
xchg
mov
add
inc
xor
andb
xchg
pop
mov
sbb
xchg
fs
adc
xor
cmpsb
nop
insl
mov
push
mov
test
mov
sahf
scas
push
push
and
int
arpl
pop
daa
bound
xchg
test
xor
lcall
ret
out
sub
std
inc
je
subl
pop
add
popl
sbb
dec
fsubp
lods
mov
mov
inc
mov
fs
inc
imul
fwait
sub
shll
push
and
jmp
gs
cwtl
push
sahf
cmp
push
subb
sub
xchg
in
dec
and
jg
jb
or
scas
sub
xchg
mov
pop
push
mov
fdiv
outsl
nop
sbb
fnstenv
mov
mov
in
pusha
jge
mov
dec
lods
push
sub
dec
shll
jne
mov
lock
xor
out
mov
mov
xlat
mov
test
pop
or
sahf
ljmp
xor
sub
enter
add
mov
add
inc
roll
imul
cmc
cwtl
pop
inc
inc
lret
aaa
inc
aas
imul
fsubs
andb
adc
cs
stc
cmp
in
mov
pop
movsl
mov
mov
mov
adc
fimull
andb
or
push
mov
setle
sbb
push
fwait
mov
mov
mov
mov
pop
add
cmpb
cwtl
iret
and
pop
stos
add
jo
xchg
js
pop
fnstsw
mov
lret
jno
push
sub
repnz
mov
out
or
pop
jmp
std
jns
adc
pop
jg
jmp
stc
and
fists
std
arpl
test
or
pop
andb
fidivs
das
push
cmpsl
jne
or
push
dec
mov
or
pop
cmp
and
in
jmp
aam
jb
pusha
stos
sub
pop
push
lret
setnp
cld
fcos
out
inc
mov
push
mov
jle
int3
mov
jno
popf
hlt
into
inc
cmpsb
push
lock
ret
mov
xchg
sti
dec
mov
int
fbld
lret
andb
in
rolb
mov
cld
and
adc
sub
mov
add
setle
mov
add
dec
xor
mov
dec
pop
pop
outsb
fsubs
sbb
rcrb
pushf
test
mov
fsubrl
cli
lahf
out
push
jge
js
mov
add
mov
cli
hlt
stos
cmp
cmp
stc
pop
outsl
enter
stos
adc
xor
js
pop
sahf
sbb
mov
lret
call
cmc
rcrl
adcl
cmpsl
dec
inc
test
lods
xor
movsl
lahf
rorb
adc
sub
and
fcmove
xor
dec
pop
out
inc
mov
adcb
xlat
lret
jle
mov
jmp
dec
xorb
pop
xor
lret
cmp
loop
cld
mov
push
mov
shll
lret
subb
test
dec
pushf
inc
fstpl
pop
push
mov
xor
test
pusha
pop
icebp
mov
mov
lret
pop
mov
mov
insb
dec
out
outsl
inc
jle
pop
nop
movsb
mov
xchg
sub
popf
lcall
or
adcl
and
mov
stos
pop
xor
inc
enter
inc
data16
int3
lds
imulb
out
mov
mov
stos
pusha
adc
adc
inc
jl
ljmp
test
sbb
int
fs
clc
sahf
or
jp
rorb
outsl
mov
cmp
stc
rcrl
aam
jge
enter
shll
enter
fistl
in
sbb
mov
inc
sub
adc
sbb
sbb
push
jecxz
lods
push
mov
jmp
test
mov
jl
sub
ss
and
js
jnp
cmp
in
lds
int
mov
pop
jne
ret
stos
inc
out
sub
test
arpl
adc
inc
lods
mov
adc
int3
lss
fs
adc
xchg
push
or
lds
xchg
dec
imul
pop
and
sub
add
push
pop
in
lea
leave
enter
sbb
rol
je
and
dec
je
cli
and
pushf
push
call
pop
pushf
push
adc
nop
or
ret
shll
dec
popf
clc
pop
and
fisttpll
jle
sub
in
mov
insl
int3
fcmovne
push
xchg
sub
ucomiss
fcoml
int3
inc
inc
inc
cwtl
or
in
xorl
jb
cmp
push
sub
movsl
pushf
mov
cmp
movsb
scas
inc
stos
dec
insl
test
push
imul
jb
out
xor
xchg
sarb
mov
fs
jae
lahf
mov
jne
ss
test
out
ds
sub
jns
cmp
aam
dec
aas
clc
sub
shlb
stos
aaa
repz
dec
inc
punpcklbw
mov
sub
or
xchg
inc
mov
and
mov
inc
or
push
mov
pop
mov
inc
insl
lock
sub
lods
pop
mov
xor
mov
sbb
mov
stos
xchg
and
sub
dec
push
mov
out
xchg
in
std
mov
lret
jle
fucomip
adc
stc
add
dec
dec
dec
push
outsb
aam
or
dec
repnz
sti
cwtl
stos
sub
rclb
mov
adc
jbe
mov
ficoml
push
insb
mov
sbb
jl
pop
dec
lea
mov
pop
lods
fldenv
ret
xor
fdivl
xor
shll
mov
test
pop
dec
pop
into
push
xchg
icebp
pusha
lds
mov
pusha
cmc
lds
ds
testl
cltd
stos
jmp
jmp
lcall
jb
xchg
inc
sbb
out
push
push
out
lret
sahf
cmp
or
xchg
dec
xor
out
out
clc
out
lret
jmp
pop
mov
movsb
sbb
or
mov
mov
or
push
je
arpl
fimuls
push
pop
int3
push
fs
mov
xchg
stos
pushf
aas
cld
cmpsl
lcall
lock
push
call
mov
jl
mov
fs
pop
out
scas
sub
add
mov
repnz
stos
add
push
fidivrl
lds
pop
icebp
mov
addr16
loop
jecxz
push
rcll
xchg
and
xchg
cmpsb
push
jne,pn
pop
gs
lahf
xor
xlat
stos
jb
jle
sbb
imul
out
adc
push
sbb
jg
insl
pushf
loope
jno
movsl
inc
cmc
mov
shl
mov
and
lcall
fisubs
xchg
push
movsb
or
sub
xor
movsl
stos
dec
cmp
dec
push
xchg
lock
sub
test
pop
xchg
xor
adc
aam
int3
pop
test
xor
test
int3
punpckhwd
mov
mov
outsl
lahf
mov
push
andl
lret
xchg
test
xchg
pusha
adc
mov
pop
sarb
notb
mov
fyl2x
add
fmuls
xchg
aaa
sub
xchg
inc
sbb
fisttpl
and
into
lret
int
inc
or
fwait
repnz
test
sbb
sub
dec
dec
lahf
mov
daa
cmp
inc
icebp
mov
gs
insb
fnsave
repnz
lds
mov
pop
mov
mov
pop
out
sub
lock
and
push
and
add
mov
jge
sub
fisttpl
add
nopl
or
adc
cmpsb
rcrb
sahf
pusha
sub
fisubs
ja
push
leave
sbb
sub
push
adc
cld
xor
dec
outsl
lret
dec
cmp
in
inc
xor
mov
loope
pop
ret
jg
xchg
das
lds
out
pop
mov
mov
and
jp
out
cmpsl
aaa
mov
xor
daa
inc
dec
jnp
fimull
mov
xchg
dec
push
arpl
push
inc
mov
adc
ret
sahf
adc
test
sar
lahf
jne
int
fs
jge
cltd
pop
push
inc
insl
inc
divb
arpl
xchg
enter
push
mov
sub
adc
mov
or
mov
rclb
push
arpl
hlt
add
lret
mov
xor
shlb
pop
insb
sahf
testb
ja
out
in
push
mov
push
shl
pop
add
in
adc
add
and
mov
or
add
test
sarb
cld
shrb
sbb
mov
int
ret
push
xor
xlat
sub
mov
cltd
addb
xor
adc
dec
pop
xor
ds
cmpb
mov
xchg
mov
call
loop
push
pop
cmpsb
cmp
pop
inc
or
adc
xor
xchg
pop
pushf
imul
adc
rcll
xor
mov
call
jle
lods
in
mov
imul
xchg
xlat
mov
pushf
xchg
nop
dec
adc
and
cmp
cmp
leave
gs
jns
add
pop
and
loope
fisttpl
lret
push
jg
xor
mov
adc
cltd
aad
outsl
jns
mov
and
hlt
mov
inc
xor
ret
inc
sub
dec
int3
jo
push
xor
xchg
aas
pusha
xlat
loope
in
repnz
push
rclb
js
push
mov
add
sbb
in
pop
mov
inc
lret
mov
cmpsl
add
call
test
bound
mov
adc
pop
jmp
jnp
arpl
adc
lock
or
add
mov
mov
xchg
out
sub
add
repz
leave
mov
jno
mov
add
ficoml
inc
sbb
ja
imul
loopne
and
mov
inc
mov
andl
cmpsb
mov
cmp
jns
cld
ret
dec
bound
jecxz
xchg
dec
mov
inc
movsb
push
gs
add
inc
mov
out
mov
repnz
outsb
mov
inc
aas
scas
dec
push
or
xchg
icebp
adc
inc
xor
std
pop
mov
pop
ds
fcomps
and
push
leave
cmp
add
aas
or
pusha
hlt
out
xor
dec
xor
cmp
pop
cmp
inc
mov
pop
and
pop
cmp
stos
push
sti
mov
or
pop
cmp
aad
push
mov
sbb
popf
iret
mov
repz
adc
dec
push
dec
cmp
xor
pop
inc
cmp
jmp
hlt
and
mov
scas
iret
add
loop
popa
out
mov
pop
dec
loop
std
ret
push
stos
mov
icebp
bound
pushf
push
dec
adc
std
or
lds
xchg
std
clc
scas
ret
leave
cwtl
inc
sub
sarb
mov
and
push
adc
lock
xor
pop
mov
bound
sbb
icebp
lds
dec
mov
xor
cmpsb
jmp
stc
mov
inc
adc
push
jns
imul
or
lret
or
out
fisttpll
ret
imul
in
cmpsb
inc
in
cmp
loopne
jmp
das
and
cmp
cwtl
ficoml
xor
inc
pop
neg
cmp
aad
rcrl
dec
xor
lods
call
pop
aam
and
xchg
gs
mov
mov
out
mov
mov
in
in
adc
pushf
inc
pop
bound
pop
push
lret
stc
lahf
mov
dec
ficomps
outsl
rcr
jne
xor
add
dec
ds
push
les
call
or
cmp
test
xorl
out
xor
fs
mov
in
lcall
mov
mov
pop
mov
mov
out
xor
jl
sub
cltd
jge
lret
mov
and
cwtl
mov
arpl
and
test
adc
sahf
mov
push
cs
inc
adc
inc
sarl
push
adc
sub
pop
push
lret
pop
sbb
xchg
jg
jb
inc
jo
rorl
and
data16
inc
dec
clc
mov
lret
inc
xor
xor
out
stos
xlat
fists
lods
das
das
mov
lcall
cmp
jp
jns
sbb
test
jb
and
jecxz
repz
push
int
xchg
arpl
cmc
or
jb
das
jge
inc
stc
jmp
jge
jmp
fcomps
pop
jnp
cmc
out
dec
dec
jne
jns
push
and
test
ffreep
cmp
sbb
adc
bound
test
and
push
sub
jmp
xchg
and
lea
dec
aam
test
xorl
cmc
push
push
xor
fwait
pop
or
xor
xchg
sub
fsts
cmpsb
cmp
movsb
pusha
xchg
xchg
mov
lods
or
dec
in
leave
mov
loop
shl
scas
in
lds
push
jle
out
or
inc
pusha
int
xchg
mov
test
jge
pushl
push
fisubrl
ljmp
adc
xchg
cld
jecxz
js
jbe
pop
insl
sub
adc
xchg
mov
or
js
adc
adc
ret
jns
cmp
sbb
adc
adc
nop
jno
insb
push
xor
insl
xchg
mov
mov
adc
popf
pop
pusha
sbb
sub
aaa
mov
movsb
ret
repnz
xchg
adc
insb
push
mov
out
movsl
stc
xor
sub
push
lret
ret
cmp
and
cmc
bnd
jno
cmp
stos
add
ja
xchg
mov
xchg
jle
pusha
int
in
xor
into
pop
add
rcrb
ss
cmpsl
enter
clc
rcrb
sbb
and
aas
jl
or
inc
rclb
dec
cltd
dec
icebp
cs
adc
sahf
rclb
rcl
cmp
adc
loop
ss
push
adc
mov
out
lock
loopne,pt
mov
mov
dec
jno
stc
add
enter
outsb
mov
pop
dec
xchg
ret
out
inc
js
cwtl
test
sub
outsb
pushf
push
cltd
dec
dec
jb
cmp
pop
adc
inc
push
test
mov
add
sbb
add
and
pop
add
xchg
or
or
dec
daa
leave
int
or
push
negl
pop
out
mov
lret
rcrl
or
and
xchg
dec
push
mov
push
les
lds
mov
cmp
movsl
repnz
push
dec
or
xchg
or
inc
sbb
mov
test
inc
aas
mov
mov
ljmp
popa
mov
imul
jle
lcall
mov
das
je
leave
inc
cmp
test
mov
jg
repnz
add
mov
loope
mov
jno
sbb
insb
inc
repz
dec
popa
dec
push
pop
loopne
add
jbe
fs
fsubrl
push
out
mov
pop
test
imul
push
sti
mul
mov
aaa
xor
je
test
add
sbb
jae
fwait
dec
dec
pusha
push
dec
dec
mov
loop
xor
lods
cmp
xchg
es
push
or
push
add
cmp
adc
xor
mov
call
imul
lcall
lcall
inc
xchg
adc
out
fstl
bound
pop
repz
cs
cmp
sbb
loop
dec
push
repnz
inc
xchg
clc
popa
dec
loop
dec
and
je
jg
xchg
add
or
outsb
jns
es
aad
fwait
imul
pop
movsb
aas
add
pop
xchg
lock
lea
cmp
out
fsubs
cmp
sub
call
leave
mov
adc
insl
test
jmp
mov
ja
mov
push
ret
inc
pushf
adc
sub
loop
int3
and
cli
pushf
jp
test
lret
lret
fwait
jnp
je
adc
xlat
xchg
mov
dec
ljmp
daa
lds
lret
pushf
cmpsb
sub
imul
xor
mov
jns
jecxz
inc
ret
int
adc
lds
jg
push
in
popa
pop
mov
repnz
dec
mov
iret
in
mov
stos
outsb
and
insl
inc
or
lods
or
out
push
push
dec
std
lock
in
mov
cs
lcall
add
or
jb
pop
popf
je
clc
jg
fwait
cmp
or
push
mov
xorl
push
cmc
xchg
jno
push
inc
jne
add
xchg
lcall
call
sub
and
jecxz
mov
clc
cltd
jbe
xchg
push
inc
sbb
or
paddsw
rclb
pushf
jl
adc
je
fists
dec
pusha
mov
decb
std
mov
mov
pop
xchg
sarb
iret
fnstcw
mov
push
mov
int
out
push
pop
leave
jmp
dec
xor
cmp
inc
shlb
lods
adc
icebp
test
push
lods
cmp
es
loope,pt
rcrb
or
and
mov
std
sarb
nop
out
xchg
xor
push
outsl
arpl
inc
popf
jmp
jae
arpl
dec
lret
and
xchg
bound
push
jp
scas
inc
mov
test
test
aam
or
mov
jl
xor
and
sahf
data16
test
test
push
test
shll
js
bnd
xchg
mov
mov
sub
fs
fistpl
dec
flds
jo
dec
or
xchg
xchg
js
push
jle
lods
push
rcrl
lahf
inc
in
jo
outsl
aam
int3
dec
lahf
pop
shlb
repz
fidivl
lds
xchg
pushf
and
fs
lods
xchg
fnsave
sbb
and
orb
pop
add
shr
dec
mov
popa
clc
mov
sub
cmp
xchg
pop
pop
testl
adc
vpackssdw
hlt
imull
xlat
repz
cwtl
sbb
jnp
inc
jo
push
daa
mov
nop
dec
fisttpl
adc
adc
jns
add
shl
xor
pop
test
insb
mov
imul
mov
sbb
cmp
inc
pop
xchg
ljmp
pushf
out
call
dec
lret
addl
fildll
ds
and
aad
ss
sbb
adc
pop
xlat
mov
mov
stc
sti
fs
out
mov
adc
sub
jbe
pusha
adc
sbb
icebp
sbb
xchg
mov
cmp
movsl
jmp
and
inc
pusha
bound
clc
fs
js
ror
and
les
add
sbb
cld
add
fisttps
loop
inc
pop
mov
xor
ja
xor
mov
or
push
push
mov
ljmp
jl
in
push
je
adc
das
ret
or
xor
leave
mov
jl
pushf
push
mov
dec
push
mov
andb
mov
mov
push
mov
and
mov
cmp
add
fcmovnbe
lahf
sbb
pusha
dec
mov
js
mov
inc
repnz
mov
mov
mov
jp
loopne
aad
out
inc
hlt
bound
lods
outsl
inc
movsl
jne
and
or
inc
push
test
scas
mov
mov
jmp
inc
fidivrl
mov
mov
cltd
lea
and
mov
jne
shrl
inc
std
push
addl
stc
in
lfs
das
add
sub
pop
push
jp
out
add
and
xlat
lret
shlb
mov
xor
mov
pop
in
in
imul
lds
fsubrs
or
leave
sub
cli
or
lds
or
sub
dec
stos
pop
sahf
movsl
sahf
xor
or
pop
stos
arpl
and
test
sub
ja
in
shlb
inc
scas
fcmovne
test
std
repnz
in
mov
test
and
adc
push
pop
imul
stos
cmpsl
cmpsb
mov
add
xor
mov
cltd
gs
repz
rolb
pusha
movl
dec
push
pop
fstps
xchg
push
enter
loope
daa
test
mov
int3
xor
int3
es
pop
sahf
and
jb
popa
movsb
out
dec
mov
testl
sub
cmova
out
lahf
lods
dec
xor
rcrb
test
adc
dec
jo
sahf
lea
mov
push
sub
cmp
shlb
aad
insb
push
xlat
push
xor
insb
mov
mov
mov
inc
out
es
lds
and
jle
std
subb
pop
arpl
sbb
inc
push
push
mov
xchg
into
mov
add
xor
out
sub
lret
dec
cmc
stos
ja
jmp
popl
addl
mov
out
ret
push
fnstenv
bound
and
notl
mov
jns
adc
push
ret
and
ds
cmp
inc
xchg
insl
fstpt
add
adc
push
mov
pop
loopne
test
lret
and
sbb
xchg
fwait
push
repnz
pop
add
or
push
fwait
dec
and
xchg
int
and
lcall
int3
lods
shl
sbb
jp
mov
mov
ret
lock
cli
and
popf
dec
arpl
xchg
mov
fsubs
or
shld
pusha
das
jno
xchg
pushf
lahf
cmpsb
repnz
sbb
and
out
jno
add
push
cmpsb
lret
and
mov
mov
pop
xlat
fmull
lods
inc
fdivrs
cwtl
mov
icebp
ss
ret
test
leave
mov
push
inc
inc
lret
sbb
stc
xchg
or
cmp
push
cli
fldenv
lret
jmp
dec
sub
xchg
ret
pop
jo
imul
fisttpl
lock
sbb
std
pushf
add
jne
push
xchg
xlat
pop
cmp
mov
scas
in
mov
pop
push
ret
lret
call
mov
xchg
mov
cmp
dec
sub
in
jae
sub
jecxz
out
mov
mov
xchg
add
cmp
movsl
push
stc
push
repnz
push
xor
mov
and
lock
cmpsl
popa
xchg
mov
mov
mov
adc
or
sbb
pop
jo
or
in
or
push
clc
fdivs
mov
dec
adc
cwtl
iret
aaa
icebp
adc
pop
jg
push
add
addl
mov
test
stc
test
sbb
mov
jo
sbb
sbb
out
mov
xor
addb
fldl
mov
add
lahf
sbb
fwait
cmc
out
aad
pop
adc
xor
test
mov
mov
pop
mov
into
fistpll
and
dec
cmp
ljmp
inc
mov
cmpsl
dec
mov
pop
in
and
add
inc
lcall
pop
roll
xchg
push
mov
lahf
or
scas
pop
jp
push
lods
jle
ljmp
mov
out
lods
adc
cwtl
mov
mov
pop
mov
fdivrs
out
push
fstps
sbb
inc
ss
test
mov
ret
add
push
dec
adc
inc
in
psrlq
inc
pushf
ret
ret
cltd
mov
test
sbb
pminub
mov
dec
les
sbb
xlat
pop
lods
adc
and
xor
dec
ja
or
and
sbb
push
rclb
lret
jae
adc
pop
in
cs
sbb
jns
xor
xor
mov
js
push
loop
inc
and
xchg
sub
ljmp
sbb
xchg
add
jno
outsl
lock
lcall
xor
or
mov
scas
fistpll
data16
imul
int3
xchg
loopne
test
push
mov
adcb
xor
bound
out
sbb
xorl
adc
dec
push
push
into
mov
push
pop
loop
shl
test
or
mov
inc
fsubrs
cli
mov
enter
jecxz
js
lret
fisttps
mov
mov
test
jns
test
pop
out
ret
cmp
pop
stos
push
gs
or
fcmove
xchg
and
fwait
lret
aaa
and
add
xchg
lds
adc
popa
mov
jl
mov
dec
or
dec
cmp
rolb
mov
dec
fisttpl
outsb
and
mov
dec
mov
orb
push
aad
adc
je
or
mov
mov
movsb
xor
lods
clc
or
sub
in
cli
cmp
inc
push
stos
imul
nop
outsl
and
xor
sub
call
cs
enter
sbb
addr16
loop
test
inc
mov
xlat
mov
rorb
push
int
inc
xchg
in
add
loopne
sbb
inc
fimuls
mov
add
push
ds
cmc
outsl
pushf
or
mov
int
and
clc
mov
fldt
icebp
in
sub
fwait
add
loopne
adc
pop
adc
jg,pn
aas
repnz
mov
test
mov
xor
test
or
mov
stos
out
aas
jo
inc
inc
rcll
or
xchg
xchg
jno
nop
lret
ret
pop
movsb
push
test
jns
stos
sarl
xor
mov
lods
xor
pop
cwtl
mov
jle
jns
clc
scas
shl
jo
cmc
std
jmp
jg
push
icebp
cmp
sarl
std
dec
pop
leave
int
std
add
dec
ret
jmp
sub
test
adcb
mov
push
jo
jl
sbb
xchg
call
sub
add
popf
sbb
in
add
jg
xor
cmp
sbb
jne
ds
xchg
inc
mov
je
dec
lahf
cmp
imul
mov
sahf
shll
mov
loope
sbb
sbb
fcmove
jg
add
inc
push
in
or
dec
lcall
pop
sbb
fucomi
xor
inc
jb
jmp
out
adc
mov
mov
cwtl
das
pop
jnp
lcall
rcll
iret
or
idiv
js
sbb
std
outsl
aas
xor
jno
testl
push
in
enter
add
jne
rol
lret
mov
mov
lods
xlat
fsubs
sub
iret
jae
fimull
into
leave
push
pop
or
pop
pop
iret
mov
xlat
sub
neg
stc
out
jno
pusha
and
sbb
shlb
pop
pop
mov
call
inc
movl
movsb
test
in
xchg
aam
pop
sbb
std
int
loop
sub
adc
stc
adc
fldl
jecxz
sti
sub
xchg
mov
mov
loope
adcl
add
mov
leave
push
sub
jmp
or
int3
test
sub
xor
arpl
sub
lret
push
inc
into
pop
daa
xchg
cmovae
jns
std
lock
adc
shr
not
les
push
lods
and
popf
out
jb
and
mov
push
push
fstpl
xor
insl
push
xchg
pop
push
cltd
mov
adc
fistps
xchg
and
icebp
in
sub
inc
in
xchg
xlat
rcll
add
jmp
addr16
dec
lods
jb
stos
rcll
mov
dec
frstor
jge
ret
jbe
sbb
fisubrl
and
outsb
stc
cmp
or
xchg
test
fsubrs
insl
cmp
xor
dec
push
cli
idiv
jns
mov
shrb
sti
pop
hlt
out
mov
xchg
cmc
cli
aam
push
sbb
insb
pop
pop
das
xor
scas
adc
inc
sbb
or
loop
inc
es
lods
les
in
loopne
and
loope
lret
or
inc
jbe
imul
lret
jne
sar
fisubrs
dec
pop
inc
mov
dec
mov
lods
fs
jnp
push
inc
jmp
hlt
inc
cltd
mov
add
xchg
movsb
cmp
or
adc
into
adc
pop
jl
jnp
or
mov
test
xchg
pop
pop
jmp
lret
ss
xor
shlb
pop
rorb
pop
out
xchg
bound
or
mov
int3
in
pushf
and
mov
lahf
decl
or
rcrb
xchg
cs
xlat
fldt
adc
cmp
insl
push
pop
test
sbb
mov
test
sub
cltd
push
mov
or
jle
mov
jnp
pop
shr
shrb
dec
inc
iret
pop
push
cmp
mov
cmpsl
adc
dec
pop
dec
jb
mov
out
xchg
leave
pop
notl
mov
push
rolb
bound
test
add
rolb
mov
jns
push
into
jg
aaa
push
inc
dec
test
test
pop
je
dec
rorl
inc
adc
sbb
xor
xchg
ja
cmp
rcl
mov
cmc
jl
mov
and
lcall
cmp
mov
push
xchg
inc
mov
dec
std
cwtl
ret
sbb
lods
add
pop
imul
cwtl
xor
inc
in
or
or
jae
xchg
mov
lods
inc
popf
test
fisttpl
xchg
aas
int
orb
loope
ja
jg
adc
lock
mov
dec
jle
cwtl
rclb
js
sub
add
push
movb
mov
mov
adc
imul
pop
ret
scas
loop
jge
add
in
fwait
xchg
add
jne
dec
inc
pop
leave
or
js
loop
jp
gs
and
test
fisubl
mov
dec
jmp
mov
and
jle
pusha
mov
mov
mov
sub
add
cmp
fstpt
decb
pop
aas
mov
out
lds
or
xor
divb
mov
hlt
push
imul
aas
pop
testl
and
add
push
cwtl
mov
int3
out
clc
lcall
popf
push
push
add
mov
push
ja
add
push
iret
int3
loope
int3
loope
pop
dec
mov
mov
sbbl
pop
pop
xchg
mov
xchg
cmp
push
test
lret
jbe
pop
mov
out
xor
add
aam
mov
pop
sti
pop
clc
in
jae
xlat
movsl
pop
add
add
cmp
mov
call
loop
das
into
push
jns
pop
mov
dec
dec
xchg
sar
aam
add
add
add
pop
and
mov
xlat
iret
int3
pop
rorl
subl
adc
cmp
imul
push
notb
std
insl
dec
dec
aad
mov
mov
addl
sub
sbb
cmp
mov
rol
cmpsl
mov
es
jns
aaa
sahf
ss
dec
popf
push
lock
mov
in
sbb
sub
aas
xor
jp
pusha
mov
cmp
cli
jnp
loopne
jnp
icebp
int
mov
cmpsb
mov
insl
arpl
sbb
pop
xchg
xor
cmc
xchg
xchg
mov
lret
push
loope
test
out
add
mov
mov
dec
pop
in
jle
shl
stc
jo
mov
xchg
out
and
js
jl
fs
fdivs
clc
pop
jnp
jg
xchg
cwtl
imulb
or
cwtl
inc
movsl
fcompl
fists
int
adc
jecxz
cltd
fmul
inc
popf
mov
sub
sbb
xchg
cvtps2pd
push
jp
roll
add
orb
icebp
loope
sahf
xor
xchg
fistl
sub
cwtl
daa
dec
out
jl
mov
xor
xchg
out
loopne
xchg
sti
pop
sti
insl
cmp
je
repz
xchg
sbb
or
jl
fmull
rorl
push
adc
inc
pop
cltd
adc
fmuls
pushf
jne
test
sahf
ret
jae
int
xlat
fiaddl
cmp
popa
mov
adc
push
and
adc
xor
sbb
inc
add
mov
xchg
xchg
dec
xchg
mov
mov
rorb
cmp
je
cmpsl
mov
fwait
repnz
push
push
insb
fbld
inc
int
mov
mov
inc
add
sti
cmp
push
and
inc
mov
push
std
mov
in
push
dec
add
add
std
push
add
repz
cmp
push
adc
sahf
mov
in
cmp
mov
je
pop
push
mov
repnz
insb
cmp
fiadds
mov
sub
jl
popf
inc
xchg
lods
inc
dec
dec
bound
shlb
mov
xor
shrb
test
out
call
push
mov
imul
jmp
out
ja
mov
add
fst
cmpsl
or
inc
sbb
stos
lcall
adc
ret
mov
pusha
and
out
xor
sbb
int3
lahf
jae
xchg
add
mov
dec
ss
fs
imul
push
fdivrl
cmp
cmpb
jo
pushf
push
push
pop
into
push
jl
mov
outsb
pop
mov
ret
mov
lods
push
gs
dec
jns
in
mov
in
loop
cmp
out
vandps
stos
adc
inc
mov
sub
ljmp
int
mov
mov
std
ja
jns
aad
aas
and
xchg
lods
addr16
dec
cwtl
popa
jb
or
and
andl
lret
mov
push
jb
enter
inc
cli
sti
fdiv
cli
adc
sbb
ret
sub
stos
repnz
rol
xchg
mov
test
test
or
adc
in
or
xor
lds
lods
jns
fisubl
jl
mov
test
sbb
fimuls
aad
push
add
pop
outsb
ss
dec
icebp
fsubr
xchg
sub
mov
xchg
ficoms
dec
dec
xchg
insl
cmp
fs
cld
add
pop
lret
imul
xorb
insl
push
iret
cmp
in
adc
pop
xchg
cld
into
int
mov
dec
jl
xor
inc
pop
sbb
add
cmp
push
push
andb
imul
pop
stos
jecxz
nop
xchg
aad
movsb
mov
shrb
int3
mov
and
sbb
push
xchg
add
fstpl
fwait
roll
enter
lds
sub
pop
mov
imul
xchg
mov
xchg
sahf
mov
scas
ret
xor
jge
xor
nop
test
cmp
mov
adc
test
sub
and
jnp
mov
outsb
lret
sbbl
addr16
rorl
mov
jae
mov
dec
xor
or
pop
cmp
es
rcl
jge
in
cmpsl
dec
insb
jmp
pop
adc
enter
sub
in
jo
dec
int
pushf
test
sbb
lcall
out
cmp
nop
xchg
sbb
jb
xor
divb
das
jno
les
cwtl
loope
pop
pop
movsb
dec
sahf
pop
jb
pop
in
addr16
xor
jecxz
sub
std
ja
sub
rcrl
mov
mov
mov
dec
sbb
or
and
xchg
adc
sub
mov
cmpsb
int3
pop
dec
jp
sub
jge
cli
popa
and
rcll
mov
inc
cmp
lahf
add
leave
pop
icebp
mov
xor
loopne
adc
test
adcl
mov
xor
jb
xchg
adc
test
push
fisttps
and
sbb
aas
fcmovne
mov
mov
sarl
sub
shr
filds
movsl
into
cld
rcrl
mulb
push
rcrb
sub
movsl
inc
jecxz
ss
jecxz
stos
lods
shlb
add
adc
pop
leave
cmp
shrb
cmpb
lods
push
dec
xor
mov
dec
loopne
lcall
push
ret
jmp
sti
cmp
cli
test
fsubr
sub
and
ja
gs
xor
jne
xchg
mov
lea
mov
mov
cmpsl
bound
add
mov
xchg
or
hlt
sub
inc
repnz
xchg
sub
shr
push
incl
test
out
jno
push
stos
stc
call
sub
ss
loope
cmc
push
popf
adc
je
sbb
nop
dec
ja
or
movsb
push
dec
imul
inc
call
js
lods
pop
lret
inc
jmp
cmp
insl
shrl
push
sbb
enter
stc
xchg
mov
xchg
adc
jb
jns
movsb
leave
push
repz
scas
adc
jmp
pop
jl
data16
push
lcall
jne
bound
lret
and
insl
xor
mov
pop
xor
sub
sbb
push
push
inc
jbe
or
js
sbb
fxam
imul
pop
popa
or
lea
inc
popa
in
mov
add
aad
jecxz
sahf
sub
enter
xchg
gs
repnz
push
xchg
jno
icebp
fwait
imul
xchg
jb
in
ljmp
jge
mov
jle
movl
sahf
leave
mov
dec
cmpsb
dec
push
dec
stc
push
sti
jle
mov
sub
fcoms
call
or
xchg
into
sub
push
bswap
lret
sub
into
mov
xor
mov
sub
pop
nop
enter
push
test
imul
stos
test
bound
push
xchg
and
or
test
lcall
arpl
loope
cltd
icebp
pop
insl
cld
inc
int3
insl
xchg
jbe
test
int
pop
js
push
test
sbb
dec
pop
jno
daa
jnp
cmp
sub
xchg
fcmovu
or
aad
stos
jle
into
mov
test
xchg
loope
xor
cmp
mov
cmpsl
cmc
add
fbld
int
mov
aad
es
shlb
in
mov
cmp
mov
inc
dec
inc
xchg
call
test
pusha
shlb
add
sarb
adc
jno
xor
mov
test
push
add
pop
rclb
push
jb
mov
enter
inc
xchg
jo
dec
sbb
xchg
push
lds
xor
fdiv
xchg
not
in
lcall
mov
push
jecxz
jae
pop
cmp
daa
jne
xchg
dec
in
aad
aam
mov
pop
sahf
xchg
jecxz
mov
ja
lahf
sub
push
movsb
sub
out
mov
mov
xlat
push
or
push
inc
mov
push
pusha
test
adc
pop
and
mov
pop
mov
mov
dec
add
jae
pop
mov
inc
mov
ret
sbb
dec
adc
clc
jge
add
dec
add
pop
xchg
out
rcrl
jo
int
mov
test
mov
mov
mov
data16
test
or
mov
lods
sbb
or
stos
or
push
les
or
pushf
out
jo
push
cmp
mov
icebp
add
xchg
mov
pop
sub
add
pusha
add
sub
push
fisttpll
mov
mov
ljmp
jge
cwtl
mov
push
lcall
lahf
pop
sub
jno
or
jae
mov
sub
jno
cs
mov
or
xor
pop
ret
xchg
ret
jmp
lahf
out
aam
mov
test
pop
mov
add
hlt
fdivrs
push
dec
outsb
outsl
mov
scas
jne
sbb
int3
sbb
pop
cmp
pop
jns
sahf
mov
mov
adc
xor
sub
lods
add
fs
rol
in
jo
push
test
daa
mov
cli
fidivrs
push
adcb
adc
lret
nop
repnz
insb
ss
jmp
push
movsb
pop
push
rorb
mov
scas
xchg
fldcw
mov
shll
add
push
add
imul
aam
jp
cmpsb
testl
mov
or
add
leave
or
push
frstor
mov
mov
inc
inc
lock
icebp
mov
sti
outsb
ja
mov
dec
shlb
out
cmp
push
repz
dec
inc
popf
dec
jo
outsl
push
push
adc
cs
out
into
je
jbe
scas
fstps
xor
imul
cld
lods
jne
pop
adc
pusha
push
out
pop
or
and
push
pushf
ficoml
rol
mov
fcoms
ret
cltd
push
mov
and
ja
hlt
xchg
in
xor
and
loop
add
jae
leave
ljmp
dec
push
pusha
test
popa
xchg
mov
jmp
adc
xchg
ljmp
inc
out
mov
shlb
add
pop
pop
scas
inc
xchg
push
dec
in
add
pop
repz
leave
pop
aaa
adc
sbb
jns
push
cli
inc
cwtl
imull
dec
cmp
ds
add
pop
pushl
das
mov
andb
push
pop
pop
pop
add
and
mov
arpl
sbb
cmp
jbe
repz
sahf
std
popa
cmp
bnd
jo
int3
sbb
sbb
cmpsl
lds
or
test
xor
jnp
es
pop
enter
pushf
in
xor
xchg
and
or
outsb
push
iret
xor
popf
mov
nop
xor
cmpsb
mov
cmc
sub
shlb
fdivr
xchg
xchg
in
shll
mov
push
rol
mov
fs
iret
int3
ret
dec
add
rcrl
stos
cmc
repnz
mov
mov
outsb
imul
ds
jo
popa
rcll
stc
pop
pusha
jge
in
add
xchg
lds
or
fldl
les
mov
sbb
inc
stos
in
ljmp
add
sbb
daa
lods
leave
das
cli
std
mov
ljmp
aad
arpl
xchg
lds
leave
pop
pop
je
mov
mov
adc
and
pop
push
mov
cmc
repnz
inc
in
iret
cmp
cmc
mov
test
push
ffreep
dec
rol
mov
mov
jle
icebp
mov
xchg
mov
mov
js
cmp
push
aas
jle
sbb
inc
mov
movsb
outsb
daa
lret
mov
adc
xor
incb
add
movsb
clc
and
adc
and
inc
add
mov
hlt
gs
mov
ret
inc
push
imul
popf
in
mul
cmp
test
fidivl
jo
sub
nop
jne
push
push
or
mov
adc
xchg
loop
rolb
into
and
loop
dec
sub
mov
and
fwait
mov
movl
cmp
ss
inc
inc
and
loop
adc
sbbb
pop
add
xchg
pop
pop
or
popf
movsl
or
jno
xor
js
out
jne
lret
test
mov
in
in
and
mov
mov
ljmp
divb
jne
mov
mov
lea
ret
cmpsl
lds
iret
lock
pop
jle
rolb
xlat
dec
mov
mov
daa
push
loope
xor
outsb
push
repnz
add
mov
mov
sub
mov
repnz
out
and
mov
sbb
mov
xlat
loopne
mov
sti
sub
fwait
je
ss
mov
or
imul
stc
popl
pop
and
fs
into
and
mov
movsb
sub
mov
pop
in
xchg
std
push
mov
push
cli
pop
movsb
pop
mov
xchg
add
mov
fwait
jns
inc
jb
jge
pop
jb
sub
sti
adc
inc
add
pop
out
xor
lock
shlb
or
mov
sti
sti
ds
test
jecxz
or
push
sbb
sarl
int3
inc
push
imul
sub
notb
sub
inc
push
cmp
ret
lcall
add
mull
leave
out
dec
dec
insb
sbb
jl
das
mov
rorb
sub
je
cmp
aas
mov
xchg
push
je
jbe
and
ficoms
xchg
push
scas
popa
into
dec
xor
addr16
sbb
sbbb
and
pop
dec
xor
sahf
mov
je
notl
inc
sahf
in
or
jo
data16
adc
sti
repnz
je
or
cmp
mov
cli
or
repz
mov
mov
lret
gs
movsb
xchg
out
fildll
jp
mov
stc
jmp
enter
divb
lock
mov
or
shll
es
push
cltd
out
ret
dec
ds
repz
or
push
or
and
into
cmp
mov
xchg
into
in
mov
movsb
mov
push
mov
nop
fisubrs
fbld
cmp
lcall
lret
jmp
stos
lcall
push
imul
or
push
lock
and
fnstcw
outsl
outsb
and
mov
ret
frstor
clc
in
xor
add
cmc
or
mov
dec
pop
je
mov
push
ss
movsb
imul
pop
sbb
ficoml
fs
push
movsl
inc
cmpsb
fs
lcall
and
jns
data16
aam
mov
cmc
sahf
filds
jge
aam
mov
arpl
mov
mov
jmp
pop
into
inc
xor
pop
fldt
in
pusha
xchg
inc
mov
dec
movsl
test
xor
mov
fwait
mov
mov
insl
ljmp
and
mov
add
addb
into
rol
popa
mov
dec
int
fisttpl
orl
xor
xor
xchg
or
jne
lods
xor
push
mov
xchg
push
fwait
xor
mov
cmp
ja
push
mov
xor
cmp
pop
std
dec
adc
jle
jb
imul
jg
fs
cmp
mov
xchg
xchg
shll
mov
mov
dec
jl
cmp
mov
imul
push
jbe
sbb
scas
mov
inc
inc
mov
add
shrl
mov
lea
data16
loop
xlat
mov
push
rsqrtps
jl
mov
pop
lahf
ja
lea
cltd
or
mov
lods
pop
repnz
cmp
fsubrl
xchg
repnz
and
dec
push
pop
stc
pop
sbb
jge
imul
out
xor
and
ficoml
fbstp
mov
aaa
cli
loop
cmpsb
lret
aam
mov
out
mov
lret
mov
sub
and
icebp
stc
inc
cld
and
sbb
ret
or
cmp
out
xchg
shlb
xor
inc
inc
xor
jne
xchg
fistps
xchg
jp
and
scas
cmpsl
addr16
xor
and
xor
pusha
movb
cmc
pusha
gs
adcl
lahf
loope
adc
push
sbb
cmpb
jne
mov
bnd
jp
add
cmpb
pop
sarb
fsubl
xor
xlat
clc
test
jecxz
or
add
adc
add
pop
ds
int3
ret
or
mov
fstp
push
or
js
and
fucomi
mov
loope
push
adc
lods
or
in
repz
mov
cmp
fadds
xchg
shll
mov
lods
add
add
pop
xchg
dec
scas
sbb
shrb
test
clc
cmpsl
incl
ficomps
lahf
aad
dec
push
ljmp
jns
cs
hlt
xor
clc
ds
fsubrs
adc
and
cmp
push
int3
lods
sbb
xchg
sub
dec
push
dec
inc
ret
sbb
inc
imul
insb
addr16
lret
daa
pusha
scas
inc
ds
xchg
pop
mov
or
repz
add
insl
enter
jae
or
push
xchg
xor
dec
js
mov
or
mov
jbe
mov
mov
xor
mov
jmp
cmp
xchg
mov
je
lods
cmp
data16
mov
xchg
push
mov
mov
addr16
lds
cmp
xor
and
mov
cs
outsb
and
inc
test
scas
dec
adcb
sub
scas
mov
mov
std
inc
stos
imulb
push
stc
fisttpl
inc
fidivs
ret
rol
repz
sbb
and
cmpl
mov
push
popa
cmp
sub
pop
je
loopne
xchg
rcll
lahf
hlt
lret
dec
addr16
cmpsl
pop
xchg
clc
sbb
sbbl
test
sti
mov
fadds
insb
jge
push
nop
loopne
enter
xchg
xchg
xor
cltd
push
cmova
xchg
rcrb
jmp
add
xchg
jne
addr16
fnstcw
xlat
fnstcw
imul
adc
push
inc
gs
stos
sub
sbb
cmpb
push
xchg
aam
stc
popf
repz
jno
pop
lea
test
inc
mov
dec
fnop
mov
enter
and
movsl
std
mov
flds
jecxz
jb
sub
inc
dec
jae
xchg
pop
cmp
jmp
cld
loopne
inc
lock
inc
sub
cli
daa
gs
mov
add
mov
cmp
dec
or
add
jns
jge
inc
fadd
or
aas
fildll
push
pushf
inc
stc
sub
cmpps
jae
iret
shrl
sti
xchg
in
shrb
loop
es
call
sub
xchg
sub
or
dec
push
or
es
jns
mov
shlb
xchg
mov
sbb
mov
pop
int3
jb
arpl
fnstsw
lea
sbb
jnp
jg
pop
or
dec
push
dec
stc
jbe
xchg
and
repnz
or
movsb
xor
xchg
loop
shrb
stos
aam
adc
or
sbb
jecxz
cs
fldcw
fcomi
xchg
cld
daa
stc
cmpsl
and
push
outsl
sbb
jmp
xchg
cmp
mov
inc
ret
mov
mov
rorb
jmp
cmp
jmp
cld
and
inc
pop
pop
mov
es
sbb
int3
dec
fdivl
stc
and
add
dec
sbb
inc
or
stc
add
add
xchg
adc
mov
sub
cwtl
int
jne
sbb
in
sbb
test
daa
loopne
mov
mov
xor
xchg
jno
xchg
int
mov
dec
or
repz
loope
cmp
mov
inc
pushf
je
xchg
xchg
nop
testl
xchg
fdivs
insb
sti
cld
fs
jnp
mov
add
mov
adc
xor
filds
sbb
pop
lret
xchg
fdivs
out
pop
jnp
push
in
cmpsl
movsb
xchg
dec
movsb
addr16
jae
adc
pushf
cmp
aam
sub
or
xor
dec
sub
lret
cmp
mov
rcrb
push
inc
mov
xchg
pushf
sub
adc
sbb
fdivrl
cmp
inc
lea
xor
mov
les
adc
rolb
fcompl
popl
fldenv
fadds
addr16
mov
shrl
lock
mov
pop
lret
sub
sarl
or
movsl
gs
mov
outsl
add
cmp
mov
inc
inc
mov
in
or
sar
imulb
mov
fcoml
pop
repz
ljmp
add
lock
jmp
lock
inc
adc
jl
jne
sub
movsl
sbb
bound
jbe
ljmpw
ret
push
scas
and
push
ret
insl
aaa
repz
push
mov
jbe
jno
inc
aas
call
mov
fs
xchg
jae
push
fisttpl
add
insl
mov
or
lcall
inc
dec
cmc
subb
or
lock
scas
or
cwtl
dec
pop
push
daa
pop
jae
in
loop
mov
clc
rol
jno
cmpsb
mov
test
scas
jmp
pop
icebp
in
mov
fcompl
cmp
stos
fsubl
or
adc
popf
lods
or
pop
mov
add
push
cmp
xchg
or
xchg
sarb
jne
inc
xor
push
mov
fcmovu
or
push
sbb
cmpsb
nop
jnp,pn
cmp
mov
ja
rol
push
sub
inc
std
dec
into
pop
out
mov
mov
ret
mov
inc
pop
mov
push
aad
mov
lahf
in
les
mov
and
mov
cmpsb
or
inc
lock
push
mov
lahf
jns
mov
or
and
inc
pusha
je
xchg
dec
or
sub
neg
cmp
popf
adc
cmp
jne
les
pop
add
std
je
cltd
mov
and
mov
ljmp
leave
loopne
roll
cmc
xchg
fiadds
je
lods
pop
jg
sub
fsts
shrb
cmp
mov
lahf
cmpsb
sub
inc
test
pop
adc
shrb
pushf
lret
clc
jmp
lods
dec
jnp,pn
cltd
sarl
lcall
push
pxor
dec
test
idivb
addr16
mov
mov
test
cltd
fmull
es
shlb
cmp
sub
adc
or
clc
insl
push
clc
push
or
or
fdivrp
mov
js
scas
jae
fisubs
jle
data16
jmp
jmp
pop
add
rorl
nop
adc
int
shrl
sub
scas
xchg
stos
fnsave
dec
cmp
adc
mov
int3
imul
js
loopne
xor
cld
jmp
jb
add
xchg
lea
sbb
cmp
ds
js
mov
mov
pop
push
js
jns
xor
cli
xlat
cmp
pop
add
icebp
mov
loope
int3
sub
and
das
mov
ss
js
cld
scas
dec
ret
adc
sahf
dec
push
and
mov
sub
cs
sbb
jns
leave
jns
ret
jmp
movsl
push
std
cltd
mov
inc
icebp
xchg
sbb
test
dec
das
fistpl
mov
jae
int3
popf
loope
cmp
lea
das
loopew
add
inc
and
rcrl
hlt
mov
leave
shll
ret
xchg
jne
xchg
dec
int3
fadds
cli
jl
in
cs
cmpl
inc
jns
xor
add
out
loopne
dec
inc
bound
cmpsl
les
push
movsl
pop
iret
je
inc
xlat
xor
sbb
in
mov
lahf
pushf
repnz
xor
int3
lcall
in
sub
arpl
stos
out
aaa
sbb
sub
push
jne
stc
popf
sub
and
out
inc
ja
insl
sbb
addr16
push
imul
jle
push
mov
inc
mov
int
repnz
push
add
rcl
es
test
ud2
jns
mov
outsl
mov
hlt
mov
test
xor
push
fsubs
sar
fisttps
pop
sub
shll
add
in
mov
xor
sub
shl
roll
dec
xchg
xor
scas
and
xchg
bound
mov
mul
loope
sbb
rclb
inc
xchg
test
jns
test
inc
icebp
mov
inc
leave
clc
subl
cltd
or
mov
and
lea
push
out
sahf
notb
mov
dec
rcl
das
ret
dec
ss
pop
gs
pop
sub
insb
dec
xchg
movsl
pop
test
ja
test
push
dec
pop
pop
cmp
cmp
addr16
push
push
or
enter
sub
popl
lods
inc
test
imul
dec
jp
push
das
pushf
cli
cmc
mov
dec
stc
mov
mov
lcall
xor
jg
repz
mov
icebp
sbb
push
hlt
mov
dec
outsl
push
add
in
cmp
xchg
fbstp
popa
aam
jl
inc
imul
mov
imul
ja
jnp
incb
aas
push
pushf
or
insb
int3
das
push
mov
or
sbb
sub
mov
push
push
mov
cmp
sub
xor
inc
and
inc
nop
lea
jbe
cmc
lcall
xchg
push
push
push
mov
jmp
insl
jp
sahf
pop
adc
je
rcrl
sub
jmp
mov
mov
inc
dec
push
sbb
add
enter
add
xchg
cmpsb
leave
pop
clc
psubd
test
loope
dec
call
imulb
xor
cmpsl
lahf
lods
xor
add
leave
or
pop
aaa
mov
or
test
inc
popl
shrl
and
push
fwait
cmp
mov
push
mov
dec
or
js
or
or
lock
and
xor
stc
adc
push
leave
fldt
popl
rorl
or
fistl
dec
dec
iret
ljmp
sbb
gs
jne
adc
add
cmc
incb
fnsave
jg
xchg
or
cmp
adcb
and
dec
dec
mov
lods
les
divb
push
push
jl
loop
inc
in
mov
sarl
dec
xor
lret
sub
inc
int
lahf
daa
pop
sbb
cmp
mov
xor
push
and
ja
gs
lcall
add
push
xor
jne
jo
cltd
inc
scas
push
pusha
or
xchg
pop
mov
jno
and
mov
jp
loopne
pop
pop
inc
adc
ja
lds
lds
sub
push
mov
mov
adc
lea
cmpsb
sarl
and
fsubr
and
dec
movsl
clc
mov
mov
mov
jae
push
jl
andl
dec
popf
pop
sarl
std
jae
jnp
mov
scas
xor
arpl
sub
ds
aad
jp
lcall
nop
lods
and
outsl
xchg
je
pusha
out
inc
mov
lds
fnstsw
mov
inc
and
sbb
iret
adc
mov
mov
andl
inc
dec
lahf
insl
decl
cmpsb
addb
pop
inc
inc
xchg
les
mov
push
fadds
pop
adc
mov
leave
test
aad
in
ss
cmp
jnp
pop
mov
stos
cmpsl
incb
pop
js
sbb
sub
nop
popa
xlat
xor
mov
pop
shr
loope
add
aam
jecxz
aas
aad
je
cwtl
add
jns
js
ficoml
inc
in
idivb
xchg
dec
je
test
sub
insb
sub
mov
adc
adc
mov
jmp
pop
jp
call
out
cwtl
push
cmc
mov
loopne
adc
mov
mov
mov
or
xor
stc
cli
and
jne
imul
push
sub
cli
es
lds
dec
pop
or
xor
in
inc
scas
les
dec
mov
jne
leave
sub
xchg
gs
xor
mov
or
mov
sub
repz
mov
in
xor
pop
sub
sub
jp
lea
mov
out
pop
in
faddl
add
stos
inc
pop
rcll
inc
int3
shll
call
push
je
sti
loop
mov
cmc
mov
push
test
cltd
jl
std
cmpsl
outsb
xor
sbb
jne
xor
stc
cwtl
xchg
sbb
fmulp
lods
notb
jecxz
shlb
arpl
dec
mov
push
sub
or
lea
xlat
test
pop
out
cmp
es
sarb
inc
fildl
call
dec
and
sbb
pop
mov
add
mov
inc
mov
mov
cld
and
std
int3
pushf
add
xchg
mov
inc
imul
ja
rcrb
push
push
jno
cmp
lea
mov
loope
xchg
mov
in
pop
ds
xchg
leave
int3
add
push
push
shlb
mov
roll
das
leave
adc
or
cmp
jmp
sub
push
stc
xchg
fdivrs
lods
mov
fcoml
push
and
inc
test
int3
push
jne
test
push
sbb
adc
mov
adc
xorl
lods
inc
int
jb
aam
in
jmp
xchg
les
int
cli
stos
pop
aad
push
pop
insl
xchg
push
les
mov
add
xchg
divl
arpl
jne
and
inc
sbb
xor
enter
enter
and
movsb
lods
or
dec
cmp
out
and
sti
stos
cld
cs
imul
push
pop
fucom
imul
fldl
lahf
or
and
fwait
out
pop
adc
repz
or
sbb
popf
adc
divb
fwait
add
cmp
scas
es
sti
into
int3
push
cmp
imul
mov
mov
lahf
xchg
xchg
xchg
fisttpl
out
shl
rcl
fbstp
xchg
xor
dec
ret
or
sti
movsl
dec
mov
fdivl
inc
xchg
xlat
cltd
add
std
and
test
mov
movsl
inc
daa
test
enter
push
outsl
gs
xor
clc
popf
adcl
into
push
mov
into
mov
cld
out
mov
pop
loopne
dec
sub
push
xor
sarb
mov
movsb
xor
or
sbb
subb
je
xchg
sub
enter
loop
shr
mov
add
pop
jne
dec
imul
adc
cmp
xchg
imul
cmp
inc
jmp
push
mov
dec
outsb
imull
adc
xchg
jmp
lods
and
ss
or
iret
xor
int3
stos
mov
popf
jmp
pushf
xchg
in
roll
fsubrp
hlt
add
inc
repz
gs
jne
inc
cmp
mov
leave
aam
mov
pop
loop
inc
push
neg
sbb
pop
xchg
cmp
xor
jo
dec
cmc
test
jecxz
mov
aam
fcomi
mov
lods
mov
les
mov
ret
faddl
or
rol
stc
aad
cwtl
jge
lds
rcll
into
lahf
mov
cmpsl
fsubl
push
add
inc
add
mov
jno
shl
dec
andb
add
fisttpl
lods
aas
push
sarl
je
ljmp
add
xor
mov
loop
sahf
fs
jmp
out
adc
xchg
xor
movsl
pop
jge
mov
jmp
dec
jo
lea
dec
sbb
hlt
cmpsl
icebp
out
stos
clc
adc
xchg
xchg
dec
mov
pop
sbb
fldl
and
popf
shr
push
cs
movsb
jp
popa
aad
xor
repnz
outsl
adcl
insb
pop
addr16
sub
push
xchg
push
clc
fisttps
jno
iret
into
xor
adc
or
jecxz
mov
clc
in
loop
aas
jbe
fs
pop
cmc
inc
into
lahf
push
jns
inc
dec
test
dec
add
mov
sbb
sub
mov
and
xchg
or
or
ss
sub
aad
jecxz
xchg
fs
scas
sbb
xchg
sub
jle
lahf
negb
or
mov
ja
stos
mov
test
jbe
les
inc
je
lret
orb
out
lret
mov
pop
out
mul
cmp
cmpsl
mov
cmp
test
sub
xor
or
out
dec
je
ret
and
push
arpl
jmp
xor
pop
xor
jmp
mov
stos
es
mov
in
cld
cmp
icebp
sti
push
aam
aas
testl
adc
mov
ja
jecxz
adc
sbb
loopne
xchg
mov
scas
and
sub
jnp
rcll
push
add
cld
jb
fstpt
ret
sti
addl
insb
inc
call
filds
leave
cmpsl
mov
ror
add
jg
mov
and
mov
int3
jnp
cli
dec
outsb
lods
js
or
test
inc
mov
aas
dec
subl
mov
pop
lock
pop
push
dec
push
cmpsb
cwtl
xchg
sub
les
inc
inc
lds
data16
inc
mov
rolb
lcall
ljmp
icebp
fistpll
push
fdivl
rcll
jle
and
lret
mov
inc
aad
rolb
lahf
clc
pop
mov
fs
or
adc
pop
cmp
fisttpll
ss
dec
pushf
cmp
push
pop
and
out
push
inc
add
push
mov
shlb
arpl
adc
fwait
orps
xlat
loop
loope
into
js
cmp
mov
jp
aam
insl
sub
add
mov
fstps
and
scas
pop
inc
call
ret
inc
out
stos
push
or
mov
lahf
jge
inc
std
nop
gs
sbb
icebp
dec
jne
pop
fldenv
andnps
mov
shr
stos
fcmove
stos
aad
jae
xor
lret
cmpl
das
es
inc
cld
aad
fistl
div
add
js
or
insb
sbb
cs
adcl
inc
lcall
mov
cmpsb
outsl
data16
es
pop
mov
push
xor
mov
testb
push
dec
test
fnstenv
iret
dec
leave
xor
into
xorb
mov
push
cld
aas
pop
mov
rcr
dec
insb
jbe
push
xor
inc
cwtl
cmp
fsin
dec
je
mov
insl
push
dec
cmpsl
jae
sti
enter
mov
lcall
sarb
xchg
lahf
arpl
repnz
inc
or
fsts
mov
inc
int3
cs
das
outsl
push
int
push
rcrb
xor
pop
mov
cmp
hlt
xor
outsl
testl
xor
jns
xor
imul
insb
inc
push
add
pop
pop
push
lock
ljmp
add
fidivl
ds
scas
fwait
shrb
sub
or
in
shlb
mov
adc
popl
push
sbb
ds
aas
inc
enter
adc
sahf
and
fisubs
ss
in
and
movsl
int3
xchg
outsl
stc
mov
call
fidivrl
xor
insl
adc
lea
arpl
inc
adc
out
dec
dec
xlat
mov
push
shr
insl
rolb
lahf
sbb
lods
pop
jns
lea
xchg
mov
jmp
aaa
pop
aaa
shll
xchg
js
mov
ficompl
aaa
xor
xchg
push
jno
inc
jecxz
xchg
jg
cli
je
iret
xchg
pop
add
dec
jp
outsb
jg
inc
arpl
mov
mov
dec
loop
mulb
and
enter
mov
xchg
sbb
dec
dec
jle
sub
adc
je
movl
mov
sarb
mov
daa
ret
fwait
imul
imul
out
xchg
ret
jbe
lahf
or
das
scas
xchg
test
or
xchg
rolb
or
xor
into
xor
or
push
and
cmpsl
jb
fucomi
hlt
mov
sub
faddp
adc
pop
xor
sub
mov
or
xor
pop
dec
cmc
or
push
push
add
and
data16
dec
jo
rsqrtps
sbb
cs
pop
cmc
adc
push
movsb
xchg
adc
insl
push
inc
lcall
mov
cs
or
sbb
ret
int3
cmp
daa
aam
mov
dec
inc
test
out
fisttps
mov
fstpl
adc
imul
loop
nop
mov
outsl
insb
stos
pop
cmp
mov
dec
push
inc
mov
popa
lods
mov
orb
xlat
popa
sbbb
mov
dec
dec
sbb
mov
jle
xor
in
jl
and
mov
cmp
xor
lea
jmp
ss
xchg
lock
sub
mov
pop
mov
mov
ss
adc
push
adcl
adc
pop
rolb
rcr
and
mov
inc
fisubrl
add
and
mov
add
not
xlat
pop
clc
test
sti
mov
xchg
push
mov
test
xchg
fnstenv
imul
addr16
add
add
xlat
jp
das
push
jl
pop
repz
out
insb
stos
jle
movsl
int3
dec
add
xor
test
push
dec
dec
lcall
fldz
push
lahf
icebp
lret
not
imulb
xor
popa
cmp
sbb
call
mov
or
push
int
outsb
pop
icebp
or
sti
daa
pop
repnz
add
pop
in
je
push
clc
mov
sub
mov
cld
loopne
pop
push
or
inc
inc
insl
ljmp
pop
add
lahf
add
addr16
lods
push
test
inc
imul
jle
iret
cwtl
pusha
cmp
sub
or
mov
mov
jmp
inc
add
mov
sbb
sarb
adc
mov
push
and
lcall
clc
mov
hlt
cmc
mov
pop
loop
dec
imul
mov
in
icebp
cli
mov
mov
imull
mov
sub
cmovle
pop
xor
jmp
frstor
push
mov
and
cld
clc
dec
sub
pop
mov
xor
or
add
inc
mulb
push
mov
negl
mov
adc
movsl
test
aam
imul
sbb
pop
push
arpl
aas
test
add
lods
mov
hlt
mov
call
shll
sbb
jae
cwtl
int
xor
out
dec
jmp
gs
sarl
inc
inc
daa
inc
add
add
popf
iret
pop
or
popf
imull
push
xchg
test
adc
xor
rorl
jmp
decl
xchg
mov
or
dec
testb
gs
lods
test
stc
pop
push
out
jp
aad
nop
push
cltd
nop
call
adc
cmp
sub
adc
push
cld
jp
testb
stos
popa
popa
icebp
cmpsl
imul
in
jae
dec
js
cld
push
add
jg
sbb
std
jg
push
leave
pop
add
repnz
sar
loope
or
mov
test
dec
push
xor
jno
ffree
pop
sbb
push
insl
xor
aam
or
shlb
out
lds
mov
std
cs
cmp
mov
js
into
aaa
cli
xchg
into
xor
mov
insl
jmp
aam
jbe
jl
push
xor
sahf
jno
xor
sbb
sbb
sti
cltd
mov
sti
cld
orl
stos
push
scas
dec
mov
outsl
mov
cld
insb
out
fisubrs
cmpsl
and
sbb
jbe
lods
xchg
in
addr16
dec
call
lea
sahf
sbb
cmp
outsl
pop
adc
pop
mov
sub
enter
imul
mov
adc
fisubs
daa
fimull
xchg
dec
or
cli
insl
inc
sbb
jno
push
and
mov
sbbl
dec
stos
mov
mov
mov
sti
stc
lea
data16
inc
dec
jle
xchg
repnz
cmp
push
in
push
jns
jo
mov
mov
loop
pop
adc
lret
dec
mov
mov
cmpsb
xchg
sbb
jmp
imul
int
cli
mov
push
loope
dec
call
outsb
ljmp
push
cmp
dec
int
int
ret
test
mov
filds
cmpsl
xorl
aad
pop
cltd
sbbb
mov
xchg
cli
fistpll
dec
lods
cltd
outsb
lods
push
cmpsb
add
nop
int3
push
pop
call
xor
loopne
xor
dec
fwait
in
aas
jb
mov
aas
push
adc
jecxz
inc
repz
ficoms
sub
jns
cmp
ja
or
cmp
mov
mov
xchg
nop
pop
and
lahf
test
push
gs
adc
inc
in
xchg
sub
jns
idivb
pop
mov
sub
jge
and
add
add
mov
mov
pusha
push
aas
mov
insl
push
cmp
adc
int3
mov
xchg
add
idiv
push
cmp
in
xchg
mov
negb
jl
push
push
add
adc
decb
out
ja
cwtl
cmp
pop
sub
dec
lods
pop
add
sbb
push
fcompl
cld
dec
fdivs
aas
ret
inc
xchg
mov
sbb
test
push
sub
mov
mov
add
cmp
pusha
push
mov
es
sub
idivl
sbb
cltd
jb
idivl
movsl
xchg
mov
enter
jg
mov
and
loope
std
sbb
mov
xlat
dec
or
jecxz
test
std
push
jo
lahf
and
pop
mov
mov
bound
in
sub
mov
xchg
dec
sub
in
andb
in
dec
dec
cmpsl
dec
and
push
loope
xchg
jo
push
cwtl
fisubl
insl
add
stos
xor
mov
dec
or
or
xchg
pop
mov
and
sub
cmp
fidivl
pop
in
mov
xchg
mov
adc
sbb
add
mov
addr16
js
mov
jo
repz
lahf
rclb
inc
mov
xor
addb
sub
subb
pop
stc
xchg
sub
ja
into
push
mov
jmp
sbb
fsub
sub
xchg
mov
into
lret
ds
pushf
rol
lods
loope
jge
cli
sub
adcl
inc
cli
lcall
mov
mov
jb
inc
and
scas
ja
loop
ljmp
filds
or
push
in
jno
xchg
sahf
adc
sub
movsl
adc
shlb
movsb
push
mov
sbb
leave
push
add
or
fwait
mov
fldt
fcmovbe
jb
cmc
cmp
push
adc
jmp
aam
sahf
cmp
dec
andl
dec
mov
out
cmc
mov
lods
out
mov
sub
inc
cwtl
addr16
ds
mov
add
xchg
shll
sub
adc
insb
mov
addl
sbb
test
xor
mov
lea
or
enter
sbb
in
ja
popa
sarb
sub
mov
push
sarb
cmpsb
inc
cmp
jle
inc
pop
popf
cltd
sbb
cmp
imul
fs
stc
loop
cmpl
mov
rolb
mov
movaps
inc
repnz
dec
fwait
jp
fidivrs
xor
inc
call
sahf
push
stos
aam
hlt
sbb
add
ficompl
pop
cltd
repnz
xchg
stos
cmp
mov
sahf
mov
fdivl
xchg
push
jo
out
arpl
rolb
push
mov
loopne
stc
pusha
push
insl
push
lea
je
push
nop
lock
ror
mov
mov
cmp
ror
xor
xchg
call
mov
je
int
push
jb
cmpl
rclb
jl
jle
mov
xor
sbbb
jns
shrl
sarl
int3
cmp
cmc
ja
sbb
outsb
mov
and
ret
lea
clc
negl
or
shr
push
jg
push
incb
mov
xchg
aaa
push
mul
fisttpl
add
movsl
mov
popf
adc
mov
roll
popa
push
xor
stos
js
in
ja
cmovl
dec
or
out
cmp
add
stos
and
fs
test
xchg
dec
in
jbe
pop
and
mov
add
fisttpl
lcall
push
ret
mov
call
pop
cmp
into
faddl
jno
out
cld
daa
and
aam
or
and
out
arpl
jmp
sbb
cli
sbb
js
push
enter
js
lods
in
push
add
mov
aad
enter
ret
mov
jno
adc
inc
xchg
das
xor
mov
sahf
pop
jl
xor
les
nop
mov
cmp
jbe
lods
xor
sbb
sbb
push
fdiv
pusha
movsl
je
clc
xlat
scas
sahf
pop
jmp
js
xor
shll
pop
cmp
inc
add
and
imul
loope
cmp
hlt
pop
sbb
and
jl
pop
movsl
xor
scas
pop
dec
dec
int3
xor
rclb
add
inc
mov
call
ret
scas
dec
dec
sub
cmpsl
cmp
lock
or
int
ret
or
mov
push
shlb
movd
pusha
push
adc
jp
fisttps
lret
inc
imul
sti
pop
adc
mov
jb
or
test
mov
test
imulb
mov
or
jp
ljmp
inc
mov
push
fdivs
popa
cmp
lret
mov
ficompl
outsl
fs
inc
inc
mov
notb
out
rcrb
jns
enter
sbb
push
cmpsb
pop
in
repz
ret
dec
aam
dec
test
sti
mov
jb
jo
cmpl
pop
insl
mov
aad
or
repz
outsl
movsb
or
jae
sbb
sbb
mov
or
lcall
ss
and
lcall
xor
ljmp
sbb
lock
pop
jp
inc
or
fdivrs
addr16
adc
rcll
fs
jne
jmp
xchg
push
cmp
lahf
fwait
sub
in
inc
mov
xchg
xchg
mov
lea
inc
and
pop
inc
xchg
test
lret
pop
les
xchg
stos
add
hlt
jecxz
aas
fnstcw
pop
and
out
pop
push
mov
cmp
test
call
add
jnp
cwtl
dec
or
inc
scas
add
and
outsl
mov
pop
loopne
sbb
fdivp
out
xor
mov
clc
insb
and
cs
inc
sub
popl
mov
xlat
pop
mov
les
push
xor
push
adc
movsl
call
inc
stos
aam
scas
sub
push
mov
inc
mov
je
bound
shll
stos
test
add
ja
dec
cmp
call
aam
cmp
mov
add
stos
stc
das
or
sbb
in
mulb
push
outsl
ret
lahf
push
ficoms
leave
jne
jo
pop
outsb
jb
mov
xchg
jo
mov
lahf
xor
imul
and
sarb
adcl
pushf
das
scas
cmc
lret
aam
js
inc
dec
pop
jo
adc
scas
arpl
ss
sub
lret
adc
shlb
orl
std
loope
movsl
adc
xchg
ficomps
and
sub
in
mov
fisttpll
out
dec
lock
fcmovb
pushf
jo
xchg
mov
js
iret
nop
add
xor
mov
rclb
int
es
cli
loopne
jno
not
pop
pusha
xor
repnz
inc
xchg
mov
outsl
pop
scas
mov
xchg
aad
cli
fdiv
push
enter
imul
repz
out
imul
pop
dec
call
in
rcrb
adc
movsl
xchg
xor
iret
mov
pushf
orl
pop
outsl
mov
add
imul
mov
mov
jns
xor
pop
cmp
arpl
dec
jns
dec
dec
cmpsl
cmc
repz
ljmp
mov
mov
sti
mov
mov
popl
stc
mov
and
xchg
and
sub
mov
dec
and
icebp
pop
pop
inc
mov
das
and
or
in
push
jb
mov
mov
iret
jg
add
or
xchg
call
stc
pop
cmp
jne
mov
iret
sarl
and
and
fsub
out
sarl
idivb
in
out
into
std
aaa
xor
int
jge
mov
cltd
push
imul
es
divb
clc
mov
xchg
movsl
mov
inc
lea
insl
pop
pushf
frstor
sub
shl
and
lods
loopne
mov
bound
pop
add
inc
ljmp
pop
pop
xor
xorb
arpl
mov
in
xchg
and
push
icebp
insb
cmpsl
int3
rcll
imul
mov
lds
rolb
dec
push
scas
mov
mov
cmpsb
mov
in
stc
push
jecxz
jbe
adc
clc
aas
ficoms
xchg
add
dec
mull
inc
and
sub
dec
int
adc
dec
shlb
pop
rcrl
and
jle,pt
cltd
mov
inc
lds
fs
mov
int
adc
inc
inc
loopne
fimuls
idivb
into
pop
or
push
leave
jecxz
mov
in
lods
in
int3
mov
mov
mov
and
cmc
mov
lods
push
jmp
push
rorb
test
dec
dec
xchg
fdivrl
aam
xchg
mov
sahf
add
jb
xchg
movsb
adc
mov
insb
insb
cmpsb
jnp
pop
cld
xchg
ret
aad
popf
mov
rcr
inc
ficoml
mov
pop
push
cli
in
das
into
loope
mov
lea
mov
inc
sub
xchg
push
scas
das
xor
mov
test
imul
push
push
xor
adc
mov
adc
xchg
pop
andb
add
mov
xchg
lds
add
xchg
out
ret
add
test
jb
insb
cltd
in
mov
popf
mov
and
xor
jnp
incl
dec
pop
stos
push
icebp
sub
inc
push
add
fldenv
addr16
pop
lds
daa
and
mov
cmp
dec
xchg
pop
jmp
add
jb
dec
dec
fsubs
add
dec
xor
push
adc
test
dec
add
and
pop
add
cmp
xor
test
lock
das
jg
int3
xor
dec
lret
xor
aaa
pushf
jmp
jl
pop
push
add
aaa
push
mov
mov
gs
movb
sub
icebp
mov
loopne
jnp
push
js
mov
clc
jno
sub
movsl
sbb
sbb
cmp
test
mov
adc
xchg
fsubrl
pop
jns
and
ds
bound
sbb
sub
cmc
jbe
dec
xchg
xchg
je
sbb
daa
hlt
and
mov
pop
mov
push
or
mov
mov
jmp
jl
pop
mov
sub
lock
jns
or
fsubl
jo
nop
mov
sarb
mov
cmp
aam
in
movsb
je
dec
lods
jp
insl
push
sub
sub
pop
push
jg
inc
flds
sahf
mov
sub
jbe
imul
int
loop
das
faddl
shrl
push
je
mov
icebp
jae
mov
push
lea
pop
add
fistps
sahf
mov
adc
jle
jne
xor
cmp
pop
mov
push
jp
fstpl
aaa
icebp
adc
fbstp
sub
dec
push
cmp
xlat
das
imul
pop
arpl
cwtl
pop
lds
arpl
inc
in
jp
jge
ds
add
push
inc
idiv
mov
imul
mov
hlt
lds
ds
mov
xchg
adc
cmp
cmpsb
push
leave
add
fs
inc
cmp
add
cmp
fnsave
je
insl
or
testb
out
lret
and
lahf
xor
sbb
insl
out
add
and
fnstenv
daa
xor
ret
add
cwtl
jb
popa
rcrl
test
mov
cmp
lock
cmc
mov
ret
xor
inc
arpl
enter
ret
sbb
xchg
jg
jmp
or
ret
and
out
pop
rolb
adc
adc
adc
adc
cmp
sarl
insl
sbb
lret
or
mov
push
shll
arpl
mov
ret
out
adc
int
scas
pop
scas
pop
inc
cld
daa
mov
out
rclb
jg
or
call
xchg
and
cmp
arpl
lods
rolb
push
cmpb
and
mov
test
mov
push
cmp
mov
loopne
adc
push
into
cs
sub
scas
sub
pop
mov
mov
loop
pop
xchg
mov
out
call
jge
xchg
stc
or
jb
mov
and
sub
imul
repz
sti
cmp
push
pop
sbb
fldenv
xor
subl
gs
xor
xchg
das
cmpsl
out
xor
fimuls
cld
mov
push
out
out
enter
ja
or
or
xchg
sbb
nop
push
sub
mov
jp
mov
shrl
mov
push
mov
cmpsl
sbb
ds
in
sbb
xchg
mov
ret
jbe
sbb
inc
mov
jae
adc
xor
add
sub
or
jbe
mov
dec
test
push
and
out
aad
xchg
fcoml
aam
lea
jnp
in
test
xor
add
mov
cli
lods
pop
dec
adc
xor
mov
aaa
rclb
and
arpl
pop
movsb
scas
jae
cmp
jbe
jne
jne
mov
adc
fildl
jmp
add
push
sub
rep
dec
and
cli
repnz
mov
mov
mov
scas
rorb
and
out
out
lea
cmp
sbbl
push
jns
mov
dec
shlb
iret
ret
and
jno
add
std
enter
loop
mov
sti
cmp
pop
adc
stc
lahf
pushf
mov
jmp
sbb
add
xchg
xchg
push
pusha
pop
ficompl
and
jbe
out
push
fmuls
jae
lods
jae
push
xor
jo
add
or
or
add
add
into
cmp
add
adc
enter
jl
sbb
mov
out
mov
fimuls
loope
mov
and
insb
in
mov
and
xchg
cmpsb
fldl
scas
mov
and
add
pushf
xor
push
out
andl
das
test
fldenv
add
arpl
cmpsl
mov
sahf
cs
stos
mov
jns
xor
aam
movsl
inc
out
popf
ja
rclb
cli
jecxz
push
out
lds
gs
push
or
cmpsl
mov
mov
cmp
inc
pusha
scas
std
adc
repnz
ja
mov
pop
and
out
clc
xlat
int
push
mov
lret
mov
or
jns
dec
sbb
in
sbb
shr
aas
movsb
aam
mov
push
test
dec
dec
aad
lret
xchg
out
lods
andl
dec
and
mov
nop
inc
xchg
int
mov
es
ljmp
jns
mov
and
add
xor
movsb
xchg
sahf
les
xor
push
and
ret
adcb
lret
adc
fs
xchg
aad
mov
int
push
sbb
sbb
inc
gs
pop
mov
xchg
inc
mov
lds
push
dec
mov
mov
mov
mov
jmp
pop
fcmove
mov
jle
xor
mov
xchg
jns
xchg
dec
cmp
mov
sahf
call
adc
mov
hlt
pusha
mov
popf
pop
pop
clc
ds
cmc
icebp
mov
pop
mov
daa
aas
pop
xchg
leave
aad
cld
pop
jnp
stc
icebp
shrb
dec
xchg
push
sbb
cmp
lret
push
xchg
scas
mov
cmp
sahf
das
mov
test
stos
shrb
loope
pushf
cmpl
lods
push
pop
sub
and
mov
inc
pushf
mov
adcb
nop
les
lods
jae
mov
pop
insb
out
lret
jae
std
loope
add
mov
fstl
cmp
pop
call
and
data16
dec
je
cmpsl
sbb
and
jl
sub
sahf
loopne
push
sub
mov
fimull
mov
icebp
cs
xlat
cld
in
jmp
popf
mov
dec
push
or
sbb
mov
push
out
jg
stc
bound
or
test
and
bound
movsl
cmp
dec
mov
push
rorl
or
xchg
js
int3
loop
test
data16
mov
xor
idiv
sahf
ret
aam
mov
add
or
mov
pusha
jg
aas
cli
add
sbb
das
jmp
rorb
jns
mov
push
js
mov
ss
jne
mov
mov
adc
int3
mov
jl
cltd
jl
inc
mov
inc
stos
xchg
hlt
add
stos
mov
repnz
mov
inc
or
int3
mov
pop
lods
jle
movsl
lea
sub
mov
ljmp
or
dec
in
sub
into
into
out
jno
movsl
jmp
lret
in
pop
cmp
dec
movsb
cmp
jns
pop
or
cli
je
and
test
test
sub
aad
mov
push
bound
push
mov
jne
mov
lcall
lock
imul
out
jb
test
inc
add
imul
lahf
adc
fwait
daa
sub
jl
lods
testb
das
dec
mov
filds
sti
popf
sub
cmp
lods
add
cwtl
dec
sbb
sti
and
sarl
mov
cmp
les
pop
aad
dec
or
lea
sti
shrl
daa
xchg
sbb
popa
lock
cmp
fwait
sti
mov
int3
repnz
mov
add
stc
sub
gs
add
test
ficoms
subl
pushf
push
mov
dec
jl
inc
pop
fs
aad
stos
mov
mov
adc
xchg
sti
dec
andb
ret
pop
xor
outsb
loopne
push
enter
sbb
cmp
fidivs
loop
iret
xchg
jns
fiaddl
jns
mov
fwait
cmpsb
outsl
bound
mov
inc
xchg
nop
mov
adc
or
inc
pushf
enter
mov
pop
and
loopne
arpl
outsl
repnz
mov
dec
lea
pop
fiadds
cmp
lea
fisttps
aam
aam
addr16
inc
fstpt
sbb
popa
adc
or
sbb
enter
stos
jb
jge
cmpl
inc
dec
pop
mov
scas
push
and
sub
stos
or
outsb
and
jbe
inc
test
add
movsl
inc
aas
cmp
outsb
mov
and
lods
xor
jl
inc
ror
xchg
inc
ljmp
popf
in
fcmovnu
pop
out
icebp
jp
stos
clc
mov
movsl
sahf
push
mov
mov
lods
push
lods
orb
adc
mov
push
rolb
icebp
popf
mov
mov
fiadds
das
lret
jge
cs
mov
enter
not
lret
std
clc
hlt
je
inc
or
loopne
cmp
inc
fildll
cmp
jae
push
jp
mov
sbb
rcrb
sbb
and
ljmp
popf
and
xchg
push
aad
adc
test
aad
shlb
mov
cs
fcompl
cmp
faddl
pop
pusha
lahf
scas
and
sub
lret
pop
dec
aad
pop
andl
lods
and
mov
flds
sbb
neg
jne
cmp
sub
neg
or
lock
cmc
or
sbb
mov
and
stos
mov
movsb
jns
xchg
lock
xchg
aad
pop
je
mov
decl
inc
data16
push
inc
jmp
out
ret
ss
mov
lahf
jecxz
sbb
lret
mov
inc
stos
cltd
add
jae
arpl
and
inc
mov
or
aad
adc
aas
enter
and
into
ljmp
roll
cmpsl
mov
xchg
fcoms
push
stc
lock
pop
js
int
sub
fbld
mov
adc
insl
popf
or
arpl
jp
cmp
mov
cmpsl
ss
cmc
xchg
les
mov
xchg
add
mov
push
addb
mov
repnz
adc
stos
sub
push
pop
push
outsb
mov
sbb
pop
dec
popf
sbb
loop
scas
insl
out
int
push
and
pushf
sysenter
mov
sti
jnp
fsubs
mov
test
pop
jl
int
sbb
std
vmwrite
faddl
jns
rolb
jns
js
lods
adc
inc
cltd
and
mov
lods
adc
pop
fwait
dec
push
and
pushf
mov
ficoml
out
cmp
dec
mov
scas
sti
adc
clc
fistpl
cmp
mov
jne
test
nop
mov
mov
ljmp
push
jl
and
xchg
je
cmpsb
dec
stos
punpcklwd
testl
in
xacquire
jb
adc
add
out
loopne
xchg
cmp
sbb
xchg
mov
pop
jp
bound
xchg
pushf
jae
jae
in
xchg
cmp
mov
jb
and
sbbl
pusha
cmp
or
add
jae
cmp
repz
pusha
test
shrl
addr16
mov
outsl
repnz
out
jno
mov
sub
into
pop
ja
fisubrl
ret
std
pop
andl
mov
dec
loop
xor
cmpsl
adc
nop
pusha
pusha
push
notb
jno
inc
adc
inc
addl
mov
outsb
sbb
mov
cmp
lcall
adc
add
pop
jb
add
pop
dec
inc
fisubs
xor
mov
jge
movsl
ljmp
and
stos
sbb
mov
inc
sub
insb
xchg
or
jp
adc
mov
shrb
jns,pn
push
and
inc
sbb
dec
cmp
or
push
push
add
int
sub
cmc
and
push
femms
and
idivb
mov
inc
stos
adc
loope
cmp
adc
and
cmp
xchg
inc
xchg
add
aam
push
pop
sbb
lea
adc
adc
lea
adc
shlb
rcll
jge
outsb
imul
push
cmp
outsl
jnp
cwtl
movsb
rep
pop
enter
jne
fcmovu
push
out
dec
leave
test
or
mov
cli
xchg
pusha
or
shrl
std
xchg
orb
imul
push
inc
ja
push
push
push
cmp
rorl
push
dec
mov
inc
cmpb
out
mov
repz
out
sbb
pusha
dec
pop
dec
lea
loopne
xor
add
dec
cwtl
pushf
sub
lcall
aas
dec
sarb
lea
mov
cmpsl
lcall
outsb
xchg
adc
mov
shl
adc
lea
cmc
mov
cmp
repz
aad
shrb
inc
aaa
jge
sub
cs
jge
aad
loope
push
cmpsl
enter
imul
stos
xchg
add
adc
push
jb
jecxz
ja
and
outsl
subl
nop
je
cmp
fidivs
shll
lahf
mov
jb
adc
xchg
jae
jb
mov
addr16
lcall
pop
in
cmpsl
cmp
pop
call
cmc
sub
push
push
movzwl
orb
aaa
inc
mov
and
ja
push
scas
dec
ret
adcb
subb
mov
mov
cmp
push
cmp
pop
dec
mov
frstor
les
notb
loopne
es
add
jp
dec
mov
sub
lahf
or
mov
sbb
sbbb
movsb
repz
das
lds
sarl
je
mov
movsb
imul
and
sbb
stc
push
test
test
mov
arpl
sub
add
xchg
pop
aam
js
push
mov
pop
pop
mov
push
inc
dec
sarl
jl
add
cwtl
pop
roll
mov
cwtl
cmp
rcl
addr16
ss
lods
mov
lea
cwtl
imul
cmpsb
sub
es
push
stc
cmp
iret
mov
insb
aaa
xorl
ss
ja
sbb
jns
pop
xchg
pop
push
call
sti
adc
enter
dec
lret
xor
cmpsl
out
pop
repnz
inc
xlat
mov
push
loop
mov
inc
push
ljmp
jecxz
cli
imul
ljmp
cmp
jns
mov
daa
or
cwtl
into
xchg
jb
lea
mov
push
imul
test
mov
ds
mov
sbb
or
mov
imul
push
xchg
sbb
sub
add
inc
and
shl
push
mov
jae
lock
std
movsb
imul
and
jnp
inc
cltd
mov
in
adcl
mov
jecxz
pop
adc
insb
das
leave
imul
sbb
cmp
cmp
add
xchg
int
push
pop
test
xchg
lcall
mov
jg
inc
push
aaa
cli
xchg
pop
dec
dec
pop
fidivl
sub
inc
add
iret
imulb
pop
js
mov
stos
lcall
lds
out
lods
adc
into
cmpb
cld
cs
or
ret
mov
xchg
std
test
mov
lock
lods
loope
test
hlt
in
lea
out
mov
out
adc
sbb
movsb
add
and
and
fcompl
pop
insb
ret
jecxz
nop
icebp
jae
clc
test
adc
movsl
jecxz
pop
inc
aaa
lea
add
jnp
call
or
lds
ret
jmp
dec
xchg
mov
push
aas
dec
int
popl
repz
adc
cld
mov
or
pop
xchg
xchg
sbb
inc
mov
mov
mov
data16
push
inc
mov
stc
jecxz
adc
repz
jnp
push
or
sub
sub
jno
fistpll
add
cmp
jecxz
xor
cmp
aas
loopne
or
lea
jno
ds
test
lret
jg
mov
xor
or
les
and
jo
sub
inc
sbb
xchg
mov
cli
out
nop
inc
xor
adc
scas
sahf
enter
push
shl
sbb
fisttpll
aad
sub
xor
ror
test
jecxz
dec
aam
into
sahf
movsl
xchg
mov
push
stc
iret
jl
scas
adc
pop
mov
pop
in
js
iret
es
and
adc
pushf
stos
mov
push
icebp
push
repz
mov
mov
adc
sar
push
jle
pop
add
jge
testl
push
inc
sbb
cmp
das
mov
into
stos
fstl
push
test
or
enter
xlat
add
cwtl
es
fsubs
scas
sub
out
sub
call
dec
out
gs
fstps
fstpt
xlat
cmp
adc
scas
mov
lock
mov
push
sbb
das
push
movsb
mov
ss
sub
adc
cmc
xchg
cmp
leave
sub
jg
cmc
push
mov
jle
test
dec
mov
aas
in
lahf
test
clc
lret
xor
sbb
jae
and
mov
add
sbb
cmpsb
push
jecxz
scas
xlat
add
enter
pop
xchg
sub
mov
push
insb
shll
loopne
sub
mov
pop
sub
mov
pop
nop
mov
jmp
iret
or
push
adc
push
jnp
testb
mov
mov
loope
jo
je
pop
jo
jmp
cmp
js
push
fwait
fs
or
xor
and
sub
out
clc
lahf
fdivl
jecxz
out
lods
gs
fiaddl
push
push
out
or
push
mov
inc
scas
cmp
mov
adc
pop
and
cwtl
les
xlat
neg
fimuls
mov
pop
unpcklps
or
sahf
or
pusha
push
pop
xchg
dec
outsb
pop
or
sbb
xchg
pop
xchg
int
dec
test
mov
and
push
jp
jecxz,pn
ds
push
xchg
xchg
push
inc
mov
add
cmp
pop
add
test
arpl
cmpsl
sub
cmpb
pop
shll
pop
push
xchg
nop
mov
mov
add
jnp
mov
arpl
add
and
cmp
jmp
out
push
inc
popa
jnp
xlat
pop
adcl
cmp
ss
adc
outsb
loop
aad
je
jecxz
stos
jnp
addr16
inc
jae
fbstp
inc
fldcw
test
push
stos
cmp
inc
add
stc
js
xchg
jo
andl
mov
scas
mov
stos
dec
cld
fs
add
jae
xorb
dec
inc
jp
push
dec
dec
mov
bound
cmc
xorb
jl
cmp
xchg
int3
dec
cmp
outsl
test
pop
imul
sub
daa
cmp
repnz
cmp
testb
sub
out
scas
mov
insl
dec
cli
adc
adc
cld
or
mov
aad
cmp
mov
daa
out
test
arpl
add
add
push
in
lahf
setno
pop
jno
xchg
jbe
push
es
jg
fnstenv
pop
in
imul
push
and
stos
or
test
pop
jae
add
jnp
lock
pop
push
sbb
loopne
cmpsb
dec
cmpsb
add
jecxz
negl
xor
mov
mov
adc
test
mov
fcomp
inc
inc
mov
je
aaa
xor
xlat
lods
cmp
sahf
push
and
stc
out
test
repnz
mov
bound
sbb
pop
cmpsb
mov
inc
pop
cmp
stos
sbb
mov
rorb
lahf
xor
testb
inc
add
adc
mov
fs
lcall
mov
mov
xor
xchg
cwtl
or
cmp
sbb
pop
xchg
out
mov
subl
jg
adc
push
cli
dec
aas
sti
dec
daa
mov
pop
inc
push
cs
cmp
adcl
js
inc
inc
adc
lret
xchg
sbb
mov
xchg
xor
xchg
mov
ret
test
or
mov
or
mov
dec
outsb
cmpsl
mov
add
jmp
clc
subl
mov
sub
notb
jnp
cmc
and
fbstp
filds
add
cmc
les
mov
jnp
negl
mov
aas
add
jae
jns
sbb
dec
push
lds
shl
sti
xor
cmp
nop
sbb
movsl
lcall
sbb
pop
mov
fimuls
sub
je
dec
aam
lds
icebp
lods
push
xchg
sbb
push
cmp
push
ss
sbb
scas
repz
adc
test
lahf
mov
js
or
pop
push
lds
jno
scas
jno
arpl
sahf
push
cmp
popf
mov
xchg
dec
pop
test
and
sahf
or
je
lods
push
in
sub
outsl
xchg
ret
stos
stc
mov
imul
imul
adc
mov
mov
fisubrl
mov
xlat
out
clc
test
call
je
sbb
bswap
inc
dec
pop
pop
mov
aas
loope
mov
lret
jp
cmp
es
popa
dec
add
sbb
out
repnz
add
sbb
fcmove
mov
mov
mov
jo
enter
and
fwait
jo
mov
dec
inc
mov
movsl
dec
stos
fisubl
cmp
adc
or
mov
dec
imul
push
ret
lds
test
sub
dec
inc
push
insl
fs
push
sbb
test
pushf
sbb
xor
add
daa
test
aam
xchg
inc
addr16
mov
lds
ja
add
aad
pop
div
push
mov
push
mov
and
inc
jmp
pop
dec
xchg
rcrb
push
xchg
and
cmp
insb
stos
adc
mov
xor
inc
mov
pop
push
xor
mov
push
lea
sub
xchg
les
or
lock
mov
js
pushf
pop
aad
ret
jne
or
nop
mov
lods
xchg
out
pop
sti
aad
or
sub
sub
gs
sub
aas
mov
shll
mov
push
inc
and
hlt
jle
xor
mov
xor
and
insl
loop
dec
fsts
adc
adc
mov
es
ljmp
add
scas
outsl
std
xchg
gs
jecxz,pt
xchg
scas
xchg
popa
leave
roll
adc
insl
stos
jbe
pushf
arpl
ss
or
sbb
mov
and
xor
stos
adc
jecxz
push
call
add
gs
xchg
mov
jle
pop
cld
std
outsl
cld
jmp
xchg
adc
sti
pop
lods
jg
shlb
sub
mov
scas
pusha
xor
out
mov
xorb
popa
into
mov
mov
adc
adc
pop
stos
hlt
dec
jo
inc
sub
fwait
xchg
repnz
inc
push
roll
jp
cmp
syscall
or
out
fisubs
icebp
pop
jp
out
rcrl
mov
mov
imul
dec
xchg
out
adc
movsl
push
faddl
popf
popa
pop
je
jns
inc
pop
cmp
mov
jnp
xchg
popf
sub
outsb
ja
cmpsl
mov
xchg
and
jl
fdivrs
mov
add
fisttpll
addr16
mov
ffree
mov
mov
stc
fcomps
data16
xor
inc
jg
repnz
pop
dec
addb
fmull
outsl
and
jge
aaa
aad
pusha
aaa
and
adc
iret
stos
scas
stos
mov
lret
mov
out
icebp
mov
shrl
cmc
mov
jmp
xor
adc
cli
jl
xchg
inc
das
jbe
loop
inc
int
cmp
pop
ffree
sbb
and
lock
loop
insl
mov
push
lret
outsl
and
pushf
fldl
daa
gs
pop
jnp
aas
cmpsb
xchg
lcall
mov
push
adc
ja
push
cld
leave
push
dec
in
mov
cmp
adc
pop
and
pop
std
pop
jecxz
aad
push
test
ss
or
test
fstpl
inc
fbstp
test
push
arpl
push
sbb
inc
add
cmc
or
or
xor
xor
outsb
loop
je
test
xchg
xchg
imul
imul
dec
mov
xchg
mov
out
inc
aad
fwait
out
cltd
mov
ds
dec
outsb
movsb
xorl
shrb
sub
out
add
daa
movsl
dec
mov
ja
or
xchg
mov
mov
rorb
mov
sub
cltd
and
push
imul
push
cmp
sbb
mov
inc
das
nop
out
in
pop
mov
cmc
repz
rcrb
cltd
xor
cltd
or
ss
dec
cs
or
fwait
xchg
or
aaa
sub
out
scas
xor
pop
push
mov
jge
loopne
aas
or
cmc
insl
add
jp
mov
xchg
gs
mov
jns
pop
lods
push
in
jb
movsl
mov
data16
enter
xchg
push
mov
add
pop
pop
pop
sbb
dec
test
pop
and
lods
xchg
int
nop
jno
inc
lret
rorb
cmpsb
inc
negl
repz
neg
xorb
cmpb
or
call
push
out
loopne
sub
pop
inc
push
and
in
mov
mov
pop
ja
inc
sub
cmp
sar
addr16
xlat
test
stos
in
hlt
mov
push
jecxz
inc
sbbb
insl
andb
dec
inc
push
in
fwait
push
dec
inc
int
ja
mov
cmp
popa
cmp
adc
adc
jg
jo
lock
mov
push
dec
pop
aam
jbe
sbb
test
inc
or
out
xor
rcrl
inc
insl
imul
mov
pop
and
xchg
cmpsl
inc
jl
movsl
add
jb
call
leave
faddp
jmp
cmpsb
inc
and
lock
fldenv
and
mov
decl
sub
jo
fmull
mov
push
pop
test
mov
repz
ret
xor
push
rorl
out
inc
clc
movsl
adc
iret
push
loop
mov
int3
xchg
sahf
sub
xchg
std
pop
ja
inc
pop
ss
cmc
pop
dec
pop
push
into
in
push
cmp
cmc
cmp
out
xor
andl
pop
shlb
pop
inc
int
lds
push
add
lret
mov
jnp
loopne
cld
dec
mov
dec
dec
mov
or
int3
push
lods
test
and
fnstcw
cmpsl
iret
add
outsb
inc
in
imul
test
mov
orl
jle
daa
pop
jo
repnz
add
xchg
pop
cmp
movsb
xchg
and
subb
jge
dec
fs
jmp
aas
aaa
jle
lea
ljmp
adcb
inc
cmp
sub
out
cmp
and
inc
mov
mov
cmpsl
cmc
pop
rclb
push
inc
movsb
insl
lcall
sarb
mov
das
call
sbb
test
sar
inc
lret
sarl
push
out
jo
mov
enter
fdivr
hlt
roll
cwtl
jecxz
repnz
movsb
call
push
and
adc
mov
mov
aad
movaps
cmc
xor
sub
mov
lret
pop
and
frstor
ss
inc
andw
hlt
stc
and
or
mov
push
xor
pop
js
cwtl
ljmp
dec
in
pop
dec
scas
aaa
push
je
pop
int3
mov
lea
in
movsb
fsub
fidivrs
in
push
cmc
cmp
dec
and
or
xchg
pop
rcll
ja
and
push
push
mov
outsb
or
mov
mov
cmp
push
mov
daa
xlat
or
add
rorl
iret
or
mov
stc
push
sahf
out
or
in
cmp
bound
or
jg
inc
cmpsl
cmpsl
es
test
xor
dec
mov
enter
adc
sbb
inc
aad
lret
scas
sbb
and
iret
jno
sub
mov
cmp
aaa
xor
mov
mov
inc
outsb
push
push
mov
out
test
shrl
xchg
fdivl
or
inc
lock
adc
jg
imul
lret
bts
push
xor
push
sbb
dec
cmpl
addr16
push
jno
fnstenv
sbb
jno
arpl
add
ret
insl
cwtl
mov
pop
pop
mov
xor
lahf
add
sti
out
mov
pop
iret
fucomip
negb
jecxz
dec
fcoml
sarl
inc
jnp
imull
jl
xchg
fcoml
dec
repz
lods
dec
popa
sbb
loope
test
or
mov
cmpl
lahf
sahf
lret
gs
or
lret
xchg
xchg
lds
push
sub
xchg
gs
add
mov
decb
enter
test
mov
xchg
out
adc
lea
scas
sbb
or
xlat
or
ja
push
add
sti
test
inc
lahf
xchg
pop
mov
mov
fldl
hlt
insb
pop
sbb
or
lock
lock
sbbb
jecxz
dec
add
pop
pushf
scas
lcall
test
loop
repz
dec
push
enter
mov
loope
in
rolb
sbb
push
or
lret
xor
fsubrs
int3
imul
jle
daa
jo
ret
lds
jecxz
mov
cwtl
xchg
xor
push
xor
mov
mov
fmull
idiv
xchg
sahf
aad
jnp
ret
in
sub
adc
inc
lods
adc
out
lods
fadd
cmpsb
mov
ret
shl
dec
push
xlat
fidivs
incl
pop
jne
xor
jnp
jb
pop
js
popa
leave
cmp
mov
or
and
jbe
mov
mov
arpl
push
xorl
xor
enter
sub
outsb
dec
icebp
cmp
xor
or
mov
jbe
ljmpw
das
pop
jo
sahf
ja
cmp
loop
cs
ret
fadds
xchg
jmp
jne
mov
pushl
sbb
stc
lret
and
jo
jbe
in
test
mov
adc
imul
popf
cs
adc
lods
jmp
cwtl
jo
jnp
or
push
shrl
fildl
xorl
jbe
mov
xlat
sahf
arpl
push
lret
or
mov
in
rcll
push
mov
jnp
and
sub
das
jge
xchg
inc
fdivp
jmp
lret
cmp
shrl
and
mov
shl
loopne
push
mov
push
or
ljmp
out
add
leave
inc
sti
or
jns
jb
pushf
icebp
pushf
scas
cmp
cmp
xor
mov
jecxz
scas
hlt
pop
shlb
mov
test
mov
cmp
push
mov
popa
jl
popf
or
push
mov
jo
and
pop
xchg
rcll
shr
add
bound
inc
adc
clc
iret
cmpsb
out
adc
in
push
repz
das
test
pop
bound
bound
xor
and
inc
add
les
aad
pop
divb
jle
subl
pop
cmpsb
fadds
loopne
jp
dec
pop
lret
push
pop
add
add
adc
pop
lea
push
leave
cmpsl
mov
sub
leave
xchg
in
imul
mov
fnstcw
sbb
lcall
and
jg
mov
mov
cmp
mov
jmp
imul
xchg
loop
or
sub
pop
sbb
sti
cli
test
les
push
mov
inc
or
mov
mov
add
mov
stos
push
xchg
push
push
jae
push
idivb
or
push
jl
aas
xchg
jb
mov
pop
add
and
mov
sbb
call
movsb
call
out
cmpsb
or
xor
test
mov
sahf
sbb
fcmovbe
loop
les
pop
dec
mov
add
nop
xor
aas
inc
insl
mov
or
pop
mov
fwait
cwtl
es
and
mov
fildl
xor
xchg
mov
mulb
es
xor
fadds
popl
arpl
and
adc
das
and
push
mov
pop
ret
push
sub
call
clc
test
adc
lds
or
mov
test
test
xchg
add
adcb
sub
sarb
or
cmp
mov
push
cmp
popa
jae
and
and
outsl
mov
xchg
std
iret
or
sahf
xchg
pushf
sub
sbb
loop
fadd
fnstenv
or
jle
outsb
adc
pop
sbb
test
sbb
cmp
mov
sub
lods
sbb
cmp
into
jnp
sbb
ret
pop
adc
dec
jo
xor
orl
inc
sub
mov
clc
dec
fdivrs
pop
pop
ja
mov
or
dec
fucomi
adc
push
cmc
jbe
jbe
rcrb
dec
ja
test
dec
ds
jmp
lods
add
in
jmp
jbe
or
or
hlt
das
mov
adcb
aas
in
jno
push
dec
aam
and
cmp
gs
inc
mov
pop
sbb
xchg
add
cmp
jmp
cltd
jecxz
inc
mov
and
das
sub
mov
inc
mov
mov
pop
pop
sbb
pop
lret
mov
sbb
cmp
sbb
cmp
fidivrl
or
ds
mov
pop
push
push
mov
sarb
divl
xlat
rorl
mov
fstp
negb
iret
lods
jnp
mov
fwait
loopne
jge
mov
xchg
or
repnz
xor
add
mov
pop
cwtl
mov
xor
out
xchg
fstpl
pop
test
mov
lret
mov
lahf
mov
push
icebp
mov
jl
mov
push
sub
inc
scas
sub
xor
sub
decb
stc
aam
xchg
xor
or
lods
adc
scas
int3
pop
fimuls
pusha
cmpsb
xor
rcll
out
adc
and
ja
mov
xor
mov
pop
mov
sbb
es
xor
iret
iret
mov
aaa
add
aam
ret
hlt
cmp
mov
rolb
adcl
xorl
into
ds
outsb
das
gs
and
mov
stos
dec
stos
xchg
mov
jl
or
push
sbb
das
xor
mov
ret
test
lods
inc
pop
call
scas
fimull
push
pop
aad
cmp
in
cmp
xchg
cltd
cmpsb
ds
mov
or
xchg
stc
push
adc
out
test
pop
lahf
xchg
fcmovu
jle
call
scas
ja
pop
dec
push
adc
dec
jnp
subb
mov
inc
in
test
push
jp
xorb
shlb
loop
in
jl
in
fisubs
ja
cmp
mov
mov
pop
loopne
test
mov
jl
jg
enter
test
dec
scas
or
sbb
icebp
xchg
xor
dec
add
mov
inc
stc
daa
movsb
inc
xchg
iret
xorb
mov
push
xchg
xlat
or
mov
push
xchg
mov
mov
adc
outsb
and
cltd
std
fisubs
mov
adc
push
adc
jl
xchg
push
xor
les
push
je
mov
mov
mov
int3
in
inc
push
lret
pop
cmp
insb
ljmp
adc
dec
pop
xchg
xchg
leave
outsl
imul
cmp
mov
mov
loopne
add
out
mov
jo
adc
pushf
fsub
lods
sti
jo
xchg
repz
push
gs
inc
xlat
loope
fdiv
repnz
outsb
out
xor
je
fimuls
pop
dec
sbb
ret
sbb
jl
inc
fiaddl
inc
mov
push
mov
pop
or
scas
ret
mov
xor
xor
loope
out
test
mov
sbb
in
das
loop
les
adc
mov
popf
inc
ljmp
push
imul
test
dec
or
mov
loop
sub
repnz
call
sbb
sbb
mov
push
push
or
dec
ror
dec
imul
dec
push
fwait
out
dec
jecxz
jne
xchg
fildll
push
incb
jmp
in
add
iret
les
cld
mov
push
data16
mov
push
sub
lods
cwtl
push
jp
test
int
icebp
cs
pushf
mov
outsl
jnp
mov
imul
jnp
mov
arpl
lods
lds
stos
insl
fldenv
sbb
inc
scas
psubusw
loopne
mov
jmp
push
lds
inc
jnp
cmc
fbld
enter
xchg
and
cmp
push
cmp
jnp
xchg
dec
pop
and
push
pop
sub
ret
mov
xor
js
xchg
mov
test
hlt
jmp
push
push
inc
ds
push
jge
dec
mov
test
sub
push
test
into
xchg
or
sar
mov
fcompl
pop
mov
inc
cltd
pop
and
insb
movsl
jecxz
mov
adc
int
cmp
test
push
xchg
popa
push
nop
mov
test
xchg
inc
test
mov
subl
out
ja
fiaddl
dec
mov
test
jmp
dec
ret
inc
xorl
subl
int
mov
xor
mov
movsl
cmp
imul
add
cmc
aam
mov
ss
or
push
dec
pop
xor
into
xchg
jge
adc
adc
into
daa
movsb
add
insl
ffree
inc
push
add
add
xor
dec
dec
dec
out
dec
dec
xor
add
fucomp
aas
outsl
jo
mov
xor
mov
scas
std
into
xchg
dec
pushf
mov
lcall
loop
pop
jns
mov
mov
and
jge
and
std
std
jns
out
gs
mov
cld
and
push
and
or
pop
xchg
pop
mov
fistpl
push
mov
test
mov
or
push
ds
stos
pop
cli
jo
int3
mov
and
pop
in
pop
mov
push
pop
sub
sub
fs
aam
adc
cs
sbb
outsl
xor
lods
xchg
push
iret
add
dec
fwait
jmp
cmpsl
fidivl
fs
mul
in
pop
xchg
repnz
and
fmull
ret
divb
pop
pop
sbb
xor
imul
ss
cmp
pop
push
popf
repz
fldl
push
out
cmc
inc
jl
lods
icebp
imul
mov
lret
cmp
fcoml
xor
xorb
xor
in
cmpsb
pop
jmp
adc
mov
xchg
popf
pop
xchg
mov
das
les
lahf
xor
sar
fbstp
and
jl
fcomps
sti
adcb
outsl
fnstenv
jg
jl
push
cmpsb
push
std
or
mov
pusha
jbe
enter
jle
inc
cmp
scas
stos
fidivs
add
jns
xor
fdivp
test
testl
mov
pusha
mov
pusha
xor
xchg
mov
adc
dec
rcll
jo
mov
js
mov
lcall
sbb
lds
test
xor
in
aas
cmc
push
aas
add
adc
adc
stos
mulb
pop
stos
sahf
inc
stos
xchg
ljmp
movsb
dec
or
cli
dec
mov
fdivl
xor
mov
lods
fnstenv
ja
out
data16
add
fwait
loop
cmp
lahf
ljmp
les
push
add
push
sub
jnp
pop
rorl
ret
mov
sbb
es
imul
mov
xor
repnz
popf
mov
xlat
sahf
xchg
fcom
into
shlb
push
clc
push
cwtl
sbb
jae
jb
xchg
lret
pop
xchg
or
inc
xor
stc
outsl
daa
into
mov
shl
mov
cmp
arpl
sti
inc
out
aaa
cmovle
add
test
int
mov
dec
cmp
inc
xchg
jmp
jnp
imulb
xchg
sahf
xchg
int
jae
mov
jo
sbb
fildll
xor
jmp
sbb
fisttpl
test
notb
pop
dec
andl
cmp
mov
lahf
loopne
imul
hlt
pop
fs
or
ret
cmp
aaa
sbb
cmc
fmul
add
decb
dec
insb
pop
mov
mov
popf
jle
adc
jp
push
mov
clc
ret
ret
cmpsb
cld
cs
iret
cmp
mov
scas
push
mov
iret
lods
shl
sub
xorl
mov
daa
sub
adc
int3
mov
sub
cmpsl
mov
mov
xor
ljmp
mov
push
pop
mov
leave
pop
or
or
push
es
sbb
int3
xor
pop
mov
ret
add
inc
xor
inc
push
push
cmpsb
adc
inc
push
jbe
outsl
pop
dec
or
andl
inc
aas
pop
mov
adc
je
div
sub
jnp
cltd
xorl
mov
call
arpl
push
add
xchg
clc
mov
in
mov
shll
pop
mov
clc
movb
xchg
inc
mov
ss
cmpsb
push
mov
jl
aad
and
xor
push
jmp
jl
xor
dec
xchg
or
and
pop
out
rorl
sahf
out
int3
adc
add
pusha
fwait
xor
in
bound
xchg
mov
cmp
dec
sub
cmp
out
iret
mov
push
addr16
sbb
movsb
jl
mov
fmul
fiadds
cmp
mov
cmpsl
push
addr16
add
sbb
lea
xchg
add
es
pop
adc
lock
iret
add
add
sbb
mov
rolb
jle
rorl
aad
rcl
cmpsb
adc
xor
push
sub
adc
in
and
xchg
cmp
nop
rcl
mov
and
jp
inc
int
test
xlat
lods
jns
xor
into
cmp
xor
adc
sbb
jbe
stc
lret
in
or
in
push
lret
ret
jge
cmp
sarb
pop
fs
call
add
iret
jnp
loope
sbb
dec
xchg
cli
inc
dec
shr
xor
in
int
pusha
aam
shr
dec
movsb
sbb
xlat
xchg
clc
sbb
adc
fmul
in
int3
sbbl
subb
jno
std
addr16
lahf
jp
divl
les
mov
push
subl
push
xor
push
loopne
xchg
push
sub
fwait
inc
insl
shlb
and
pop
xchg
push
or
xchg
adc
notl
dec
mov
fsubs
push
cmp
nop
jge
fucom
mov
rcr
pop
jnp
gs
inc
fstpl
out
movsl
jmp
rcl
inc
xor
int
push
rolb
cmp
inc
dec
xor
dec
mov
adc
stos
mov
nop
ja
dec
inc
pop
mov
and
jp
mov
and
aas
cmp
loop
out
cmp
cmp
xchg
pop
hlt
and
add
sti
hlt
sbb
loope
add
sub
sub
xor
cmpsb
push
jge
filds
mov
popa
push
dec
xor
cmpsb
clc
lock
mov
int
hlt
leave
dec
nop
insb
rcr
pop
repnz
xchg
loopne
test
sub
push
test
xor
xlat
cmp
aaa
mov
dec
mov
sahf
dec
mov
jne
into
mov
or
mov
xchg
in
mov
add
jp
pop
es
pop
xchg
add
pop
pusha
pop
and
movsl
mov
dec
cmpsl
cmp
jmp
test
jns
mov
push
xchg
rcll
sbb
jp
sub
mov
out
ret
push
faddp
xchg
push
in
lret
vpunpckhdq
test
call
xchg
or
and
jae
add
inc
aas
mov
ficompl
push
inc
mov
lds
in
test
cwtl
inc
popa
jl
xchg
pop
adc
loope
or
fcoms
je
mov
out
lcall
cmp
mov
sar
pop
arpl
or
stos
incb
xchg
lret
mov
or
cmp
test
dec
xchg
cmp
in
cli
pop
in
xchg
push
loop
mov
add
popf
xlat
mov
inc
push
or
imul
xchg
mov
lcall
or
lret
in
push
sbb
xor
decb
jns
sub
insb
jecxz
dec
jecxz
ficomps
dec
sbb
adc
stos
dec
leave
outsb
cltd
jno
and
in
cmpsl
std
cmp
inc
shr
movsb
lahf
dec
adc
mov
pop
mov
fnsave
mov
scas
xchg
sbb
and
inc
js
fdivr
dec
add
popa
push
ret
xor
jnp
cmp
mov
movsl
xchg
sahf
adc
mov
vpxor
mov
inc
push
mov
fmuls
lret
nop
jae
adc
or
cmpsl
rclb
mov
adc
lret
std
dec
in
incb
mov
pushf
mov
mov
stos
imul
inc
std
rcr
sbb
inc
xchg
xor
int3
fs
mov
rcl
push
imul
lcall
addr16
push
inc
gs
xor
xchg
neg
adc
push
pop
arpl
lahf
pushf
sub
stos
jmp
push
mov
mov
aam
add
cmpsl
xor
xor
mov
jl
xor
fisubrl
mov
xor
fidivrs
mov
bound
dec
xor
pop
jae
jp
dec
sbb
in
jnp
cmpsl
push
outsb
lcall
jae
inc
shll
pop
or
jmp
fsts
adcb
inc
push
or
cli
ficompl
insl
inc
xor
faddl
jge
lods
push
mov
xor
stos
ja
cmp
and
xor
aaa
aaa
xor
inc
cltd
jno
push
push
out
scas
inc
dec
inc
xchg
sahf
or
jnp
test
adcl
or
mov
leave
lea
cmp
or
mov
sbb
in
mov
iret
test
and
push
and
mov
loope
sub
stos
clc
sbb
lods
jecxz
sub
mov
nop
pop
sub
and
sarb
repnz
xchg
adc
add
iret
lret
mov
cmovns
test
cmp
lods
inc
pop
adc
cmp
mov
mov
xchg
sub
dec
mov
scas
cwtl
xchg
lret
pop
test
sub
je
inc
mov
sahf
movsl
jl
push
inc
dec
ljmp
jo
adcl
iret
mov
repz
xchg
or
jmp
sbb
pop
sub
repnz
out
ss
push
adc
sahf
fbld
xchg
call
clc
pop
mov
mov
aad
jl
iret
into
mov
stc
hlt
mov
shrl
add
lds
mov
test
add
dec
es
imul
adc
inc
inc
enter
push
cs
mov
push
pop
lcall
scas
clc
pop
call
in
cld
imul
cmc
jg
iret
clc
cmpsb
push
sbb
jp
mov
pushf
push
shll
mov
xchg
adc
ja
jg
push
jns
pusha
mov
mov
jno
jae
mov
push
jmp
sbb
jo
mov
and
sub
push
mov
pusha
ja
mov
shrb
js
and
fidivs
jo
scas
icebp
sub
fisubrs
mov
fisubrl
pop
sahf
cmpsl
icebp
gs
lret
sbb
inc
call
xchg
shl
xchg
aad
inc
mov
sub
mov
cmp
adc
rcll
xchg
enter
or
push
nop
mov
push
mov
push
in
sbb
sbb
mov
sub
mov
cmp
fcmovb
hlt
mov
push
mov
push
xor
adc
pop
jl
test
arpl
sub
jl
jl
in
dec
imul
cmp
add
dec
jbe
push
dec
push
outsl
imul
scas
mov
jno
test
mov
mov
mov
mov
dec
push
dec
pop
pushf
xchg
pop
dec
mov
icebp
xchg
or
inc
jo
out
push
scas
pop
or
aad
fdivrl
clc
push
dec
cltd
call
and
jns
cli
adc
mov
cmpsb
cltd
sub
inc
in
pop
jmp
xorl
cmc
stos
nop
push
imul
add
outsl
inc
push
pop
loop
aam
mov
icebp
loop
or
out
into
push
outsl
and
mov
xchg
fs
jno
addr16
jg
push
cmp
dec
adcb
cmp
cmpl
cld
dec
in
pop
push
movsb
enter
orb
shll
mov
mov
mov
and
mov
fisubs
cli
inc
movsl
mov
call
mov
insl
imul
in
mov
pop
shlb
lret
loopne
jo
jo
aas
call
sbb
test
adc
xor
aad
addl
xor
fadds
push
int
scas
push
mov
adc
cs
pop
dec
int3
sub
pop
sbb
ret
pop
and
mov
mov
jnp
push
into
and
cwtl
jp
cs
mov
push
pop
push
adc
jecxz
jl
pop
aaa
ret
pusha
cmpsb
or
jmp
mov
push
adc
test
enter
mov
test
and
aad
test
loopne
adc
or
cmpsl
adc
popf
xchg
jmp
pop
jecxz
test
xchg
fldl
mov
mov
fstpl
dec
jg
fdivp
fldl
adc
dec
lea
mov
cmp
cmp
mov
test
rcl
inc
mov
ret
jnp
roll
dec
call
lods
push
xor
mov
repnz
aad
mov
cmp
and
or
inc
push
mov
shrb
inc
push
mov
sub
cwtl
call
ja
aas
mov
jmp
jae
fisttpl
xchg
jge
pushf
mov
das
inc
nop
xor
enter
scas
mov
adc
push
insl
add
xchg
dec
push
stc
lcall
das
in
push
push
push
dec
inc
push
mov
ja
loop
leave
dec
movsb
fld
mov
test
das
lods
out
cld
jecxz
popf
pop
frstor
mov
inc
gs
fmull
in
xor
icebp
jmp
idivb
hlt
push
sub
movsb
and
push
add
push
push
ret
lret
mov
push
repz
sbb
mov
cwtl
mov
fisubs
lcall
lahf
mov
dec
je
cmp
sub
mov
xchg
add
imul
sti
push
out
dec
sbb
pop
adc
xor
sti
cli
or
push
fistl
cmp
fidivl
imul
mov
shrl
pop
aaa
in
and
mov
mov
and
nop
ljmp
addr16
jne
push
mov
negb
fdivl
mov
sbb
mov
cmp
call
pop
jl
jp
pop
jae
insl
dec
push
and
imul
test
bound
cmp
cmc
mov
cmp
dec
mov
jae
push
mov
pop
xchg
cmp
xlat
dec
stc
sti
pop
push
fstps
ret
push
fistl
stc
or
jns
inc
stos
adc
sarb
xchg
cmpsl
cmp
aad
or
add
push
push
and
in
pop
aad
mov
push
mov
test
push
add
xchg
mov
out
jns
and
filds
push
sub
aad
les
xor
xchg
push
push
fcomip
push
iret
out
sahf
and
shl
fs
mov
pop
inc
rcll
dec
or
and
push
sbb
cmp
jb
add
stos
icebp
ss
pop
dec
mov
or
enter
test
jns
pop
push
call
sarl
pop
enter
pop
add
inc
ds
cmp
inc
xor
lods
inc
mov
loopne
and
out
or
xorb
pop
int
fiadds
sti
lcall
pushf
lret
mov
fwait
leave
sti
sti
test
out
in
js
pop
jo
jmp
jbe
cmp
add
mov
data16
mov
movsl
mov
hlt
push
sbb
and
and
ljmp
je
fs
rcl
mov
mov
mov
mov
dec
xor
dec
int
and
loopne
jae
pop
cld
movsb
jo
adc
mov
dec
js
xchg
rol
sbb
push
fcmovne
lock
xchg
or
inc
or
cmpsb
mov
pop
ljmp
testl
mov
dec
adc
mov
dec
jle
sub
and
jne
xchg
mov
repnz
fisttps
mov
negl
faddl
cld
shrb
lret
negb
test
sti
mov
and
inc
jns
jae
xchg
lret
pop
insb
and
push
ret
or
and
mov
mov
out
xor
sub
xchg
icebp
cmp
call
mov
add
xor
mov
repz
call
add
nop
dec
lods
or
sbb
and
push
sub
dec
loop
cwtl
mov
loope
sub
cmp
mov
test
jns
xor
testb
imul
sub
xor
loopne
pop
pop
push
cmp
fstpl
aaa
mov
jg
scas
mov
mov
push
xchg
add
mov
int
test
roll
mov
dec
inc
jns
mov
stos
clc
inc
notl
je
test
ja
push
in
push
test
movsl
dec
push
jge
sub
push
cmpsl
gs
out
mov
or
inc
sahf
test
in
div
ss
scas
push
jmp
mov
cld
mov
andl
jae
xchg
shr
xchg
sub
sbb
lds
xlat
jnp
ss
xor
mov
orl
dec
cmpsl
dec
pop
pop
mov
or
orl
xor
mov
mov
fsubrl
push
out
rorb
popf
cmpsl
mov
sbbl
ret
mov
outsb
cld
fwait
push
mov
mov
mov
inc
sarb
mov
scas
mov
or
popf
xchg
jp
lret
mov
cltd
clc
jl
inc
out
imul
stos
lret
out
inc
lcall
int3
lret
jl
jmp
sti
aad
sbb
xor
dec
mov
test
iret
in
ljmp
ds
mov
adc
out
or
push
inc
xor
push
add
loop
arpl
xchg
into
pop
xor
dec
xchg
pusha
sahf
fnstsw
les
shlb
push
mov
iret
sbb
ret
pop
in
out
cmp
mov
xchg
int3
lods
cmc
inc
jnp
sub
push
dec
orb
push
mov
hlt
lock
out
mov
pop
jecxz
cmp
jbe
aad
sahf
imul
incl
test
scas
or
push
mov
mov
inc
jl
out
xlat
fwait
nop
mov
mov
ret
lret
ljmp
sahf
test
sbb
stos
sub
iret
test
in
into
mov
aad
rcrl
loope
into
std
jmp
jne
adc
bound
xchg
insb
xlat
arpl
adc
addr16
rcrl
aad
mov
add
mov
sub
loop
adc
inc
inc
mov
ret
sub
jmp
sub
pop
inc
xchg
pop
adc
subb
cmpsb
adc
push
loopne
jno
stc
jb
xor
xchg
out
adc
adc
sbb
or
clc
xor
int
gs
imull
out
pop
inc
mov
call
and
roll
lock
iret
rcl
subb
mov
pop
or
outsb
sub
xor
cmp
cmp
push
lds
mov
ja
aaa
into
cmp
cs
ja
scas
dec
or
stc
stos
call
mov
jno
lea
lods
insl
repnz
punpcklbw
sub
fisttpl
xchg
inc
in
stos
pusha
lds
pusha
in
int
mov
lcall
pop
out
pop
cmp
add
mov
cwtl
movsb
xchg
adcl
outsb
aam
pop
or
stos
xchg
ja
inc
xor
pop
lahf
incb
cld
ljmp
mov
pop
mov
cmp
sbb
jg
shr
das
lds
push
inc
lock
xchg
lods
xchg
call
mov
lock
inc
sti
in
and
sti
aam
sub
add
loope
mov
jge
adc
scas
or
lret
mov
imul
gs
push
loope
bt
rcrb
fsts
test
and
insb
dec
cmp
add
in
lods
movsb
lods
jl
sbb
dec
mov
insb
lret
iret
dec
out
popa
jle
repz
daa
testb
aad
fwait
mov
rorl
inc
jg
insb
xchg
jae
push
push
sub
jno
mov
jae
and
mov
xor
rolb
in
adc
aam
rcll
cmp
sub
dec
xor
push
and
add
or
jbe
icebp
mov
into
mov
gs
sbb
ja
xchg
cmpsb
idivb
inc
enter
imul
mov
fs
enter
out
adc
ja
inc
shr
lods
out
mov
std
sub
add
inc
mov
in
aaa
shlb
adc
xor
or
int3
xchg
daa
add
xor
xchg
and
in
in
inc
pop
inc
lcall
mov
daa
mov
cmp
adc
out
push
mov
aaa
push
add
gs
stos
rorb
int3
jge
push
jl
jne
mov
fwait
dec
pop
xchg
xlat
dec
jae
push
xchg
dec
sub
push
inc
xchg
ret
xchg
clc
lock
jmp
cmp
lods
shrb
mov
jecxz
lds
scas
jl
inc
test
pop
loope
imul
pop
int
popa
iret
cmp
mov
cmp
js
fs
cli
mov
mov
mov
iret
scas
shrb
fs
mov
mov
jge
out
lret
in
push
leave
fnclex
adc
cmp
sbb
cmp
mov
aaa
arpl
imul
hlt
dec
and
repnz
loope
pushw
jbe
cmp
sbb
enter
pop
enter
lods
xchg
dec
ror
scas
insb
inc
xchg
inc
ljmp
cli
xchg
xor
mov
push
jge
mov
push
and
repz
inc
cmp
dec
lods
push
push
into
adc
sub
inc
mov
clc
xchg
or
flds
pop
and
scas
mov
test
and
dec
xor
xchg
jle
outsb
daa
and
mov
ret
sahf
dec
icebp
mov
xlat
xchg
outsb
loope
jle
push
jge
xchg
addl
mov
movsb
xor
aas
sbb
std
xchg
adc
int3
xchg
adc
mov
mov
mov
jle
enter
stos
jl
cmp
and
insb
pop
imul
push
lock
cmpb
or
shl
cmp
ds
jecxz
push
lahf
fistpl
jecxz
mov
pop
and
popa
mov
in
mov
add
pop
shrb
shlb
adc
fbstp
lahf
sarl
xchg
add
xchg
rorl
test
pop
pop
cmp
mov
mov
loopne
aam
jb
xchg
clc
inc
adc
int3
pop
int3
mov
es
jnp
insb
sti
rep
jb
je
pop
jne
dec
lods
fwait
mov
jecxz
mov
fstpl
and
les
jno
mov
sub
ss
adc
fisubrl
divl
sub
bound
jae
leave
out
push
dec
push
popa
mov
bound
mov
jle
ret
adc
fistpl
movsb
popa
movl
mov
fidivrl
insl
xor
inc
sbb
pushf
jbe
push
push
jb
mov
fisttps
adc
lahf
aad
xchg
cmc
mov
add
xor
loop
mov
adc
daa
dec
xor
inc
adc
fistl
push
or
fadds
ds
mov
outsl
cmpsl
pop
out
cs
xor
cwtl
xor
lea
test
push
xorb
cmp
ret
mov
sbb
bound
xlat
loope
sti
pop
imul
call
pop
movsb
pushf
outsb
inc
jl
and
lcall
lock
test
jecxz
xor
in
mov
fisubrl
mov
xchg
sbb
cmp
cmc
mov
pop
add
mov
pop
xor
or
nop
push
or
mov
loopne
jge
mov
jl
jmp
shll
aaa
mov
xchg
mov
dec
scas
popa
int
and
xchg
lret
lret
pop
mov
xchg
jge
loop
adc
push
xchg
movd
push
into
inc
xchg
sahf
xor
mov
add
mov
push
insl
dec
loope
sbb
jp
dec
cltd
cmp
ss
rorl
sub
add
inc
dec
jo
insl
pop
fldln2
outsl
rolb
sti
xor
jb
arpl
sahf
mov
shlb
mov
lock
test
dec
nop
inc
pop
jge
jecxz
loopne
jle
in
sbb
mov
xlat
sbbl
xchg
or
test
add
stc
cmpsl
mov
mov
cmp
std
adc
dec
daa
lds
imul
divb
loopne
jne
pop
jmp
mov
mov
nop
movsb
je
mov
imul
out
add
push
jno
push
xor
das
fidivl
shr
cmpsl
adc
adc
xchg
out
cvtps2pd
or
mov
mov
sbbl
call
mov
jl
sahf
sub
roll
aam
cmpsl
pusha
daa
jl
ds
test
xor
cmp
and
or
and
or
rorl
sbb
outsb
xor
jge
push
out
jnp
rorb
outsl
lock
lret
lods
mov
mov
xchg
xor
mov
cmpsl
mov
and
sub
inc
push
cltd
fcompl
add
mov
and
sar
sub
les
sbb
ljmp
les
cmp
fbstp
ljmp
fdiv
in
lahf
sets
fildl
sbb
sbb
hlt
out
pop
pusha
sahf
push
jo
adc
inc
and
push
movsl
outsb
jg
cmpsl
bound
and
jecxz
mov
jle
call
and
call
jg
jb
mov
adc
aad
xchg
call
test
sahf
aaa
daa
mov
xor
and
insl
sbb
es
cwtl
sub
push
mov
addr16
or
xor
push
stc
int
mov
pop
xchg
shr
mov
pop
mov
mov
mov
adc
arpl
push
push
xor
clc
push
pop
popf
mov
xor
call
jg
cmp
pushf
enter
mov
stos
sahf
sbb
mov
push
jae
popf
mov
mov
mov
xchg
sbb
cmc
mov
cltd
jne
mov
jno
xor
or
push
cmp
popl
arpl
mov
mov
subb
jae
jecxz
fwait
jg
dec
jbe
xchg
mov
js
in
shll
inc
in
es
xchg
pushf
adc
or
in
in
add
dec
jge
cltd
lea
pop
push
and
aad
mov
repnz
ss
jo
and
lods
adc
int3
jg
inc
addr16
pop
sbb
sub
divl
inc
mov
push
jno
lea
lret
mov
out
jne
imul
push
aad
and
lods
xor
cmp
or
mov
push
ret
aam
mov
rorl
inc
mov
arpl
cmp
or
cmp
xor
mov
cmp
outsl
ljmp
movsl
ds
jns
inc
add
push
dec
call
bound
shlb
push
jo
inc
popa
xchg
loop
push
repz
enter
inc
pop
push
mov
dec
or
fcoml
imul
dec
lcall
xor
lods
inc
cwtl
jle
fs
mov
jecxz
das
mov
and
nop
lds
sbb
add
push
mov
ss
pop
jo
jmp
cmp
or
mul
push
ljmp
call
add
aas
movsl
push
jmp
aas
cs
cmc
xchg
cmc
add
push
aam
in
pusha
mov
repz
pop
pop
and
movsl
add
out
or
adc
push
xor
mov
cmp
jns
js
test
subl
jmp
repz
mov
popf
sub
jnp
and
stos
cmpsb
xor
xor
xor
add
fisttps
mov
lea
fisubrl
in
pop
push
pop
jae
xor
adc
dec
pop
out
hlt
loopne
xor
inc
int
testl
fcmovb
xlat
pop
test
je
xor
xlat
test
cmp
dec
fildl
pop
fidivs
xchg
rorl
mov
add
dec
fstps
xor
mov
shll
sar
fimuls
repnz
aam
or
aas
and
lret
outsl
inc
push
add
in
adc
pop
rcl
fimull
test
sub
rol
xchg
push
popa
div
inc
push
dec
lret
add
dec
js
in
mov
insb
fs
push
xchg
inc
dec
pop
sbb
pusha
mov
ja
mov
iret
pop
push
imul
dec
lea
das
out
xchg
test
jge
test
mov
sarb
mov
mov
jae
push
adc
inc
or
add
ds
lcall
mov
cld
add
sub
test
and
pusha
adc
pop
popa
ja
add
mov
xchg
push
push
mov
cmpsb
lret
out
lods
nop
or
outsb
pop
stc
std
jg
xchg
inc
jg
lods
call
or
xor
sub
cli
ja
add
clc
test
xor
fwait
out
dec
insl
imul
mov
sbb
out
jmp
mov
cs
push
dec
clc
jp
fidivrl
cmp
pop
call
iret
adc
xchg
fcoms
fldt
xchg
subl
mov
loopne
lahf
or
dec
fisubrl
sbb
je
cmpsl
sbb
mov
enter
cmp
sbb
xor
ret
scas
dec
push
ret
addr16
mov
xchg
or
lods
sti
mov
jp
xor
jle
push
int3
popa
dec
mov
inc
ffree
fcomps
ss
cli
aaa
lahf
cmp
cli
repz
testb
cld
mov
test
ss
push
sbb
bound
sub
sarb
push
mov
shrb
mov
repz
xchg
or
cmp
es
notb
cmpsl
sbb
lahf
sub
adc
mov
mov
jp
cmp
fisubl
push
adc
test
sub
mov
lock
mov
addr16
and
hlt
out
cs
jns
lahf
or
jmp
mov
cmc
pop
lea
cmpb
jne
sbb
test
xchg
dec
cmp
adc
nop
xor
mov
cwtl
xchg
mov
in
mov
cmp
out
pop
insl
mov
insl
nopl
test
jnp
outsb
leave
aad
pminub
sub
xchg
fiadds
icebp
js
ja
xlat
dec
pop
adc
cmc
out
jae
lock
adc
in
das
jno
jle
dec
xchg
arpl
cltd
or
adc
inc
call
lods
sub
xlat
aad
das
mov
ffree
mov
stos
cwtl
and
and
xchg
xor
out
push
push
mov
cmpl
sub
mov
xchg
aad
mov
and
push
cmp
shlb
int3
cmp
insb
enter
pop
mov
sbb
nop
add
push
jbe
int3
cmp
mov
xor
pop
nop
pop
jecxz
mov
pop
scas
repnz
ds
cs
push
shll
mov
popf
pop
xchg
shl
push
lret
ljmp
mov
mov
loope
push
aaa
out
aam
add
cmp
fnstsw
ds
add
xor
inc
jge
mov
mov
rcrb
outsl
jne
jg
dec
int
pop
push
xchg
js
hlt
pop
mov
jp
mov
sbb
xchg
stos
mov
aad
int
or
jecxz
sub
xor
fimuls
push
test
movsb
cmp
cmpsl
mov
push
or
inc
popa
ss
and
jne
popa
add
mov
xor
mov
adc
fdivs
pop
ja
insb
or
lret
xchg
push
fcoms
xchg
cmpsl
lret
adc
xor
mov
and
addb
stos
sub
ljmp
mov
test
jo
addr16
mov
enter
push
fdivrp
jo
xor
add
aad
xlat
or
arpl
push
out
cmp
sbb
mov
lret
dec
lds
xchg
aam
mov
xor
shl
lcall
pop
dec
pop
jmp
xor
push
cld
or
mov
adc
cmc
scas
sub
mov
ss
jmp
inc
and
adc
dec
dec
dec
sahf
js
dec
rcrb
insl
aaa
cmp
xor
lahf
pop
pusha
int
cmp
fsubs
je
pop
fs
sbb
sbb
push
outsl
xor
out
and
xor
gs
adc
fwait
mov
nop
sbb
jmp
jg
inc
sub
je
cmp
loope
test
imull
aad
jb
and
dec
cmp
int
andl
dec
scas
push
mov
adc
jp
lcall
sbb
jbe
loop
sbb
fidivl
push
sub
scas
push
fs
insb
subb
mov
daa
inc
out
xchg
into
cld
adc
inc
xchg
outsl
lcall
pop
decl
adc
and
dec
mov
lods
ss
iret
pop
idivl
pop
inc
dec
mov
push
fldcw
xorb
test
jbe
cmp
out
cwtl
add
fidivrl
outsb
dec
es
add
fadds
and
mov
shl
cmpsl
test
xchg
lret
stc
rcl
inc
nop
hlt
bswap
push
scas
xchg
ja
and
mull
nop
inc
mul
push
hlt
pushf
sub
lods
arpl
aad
lret
daa
mov
adc
inc
mov
push
loop
es
sub
lods
and
jae
ss
push
out
jbe
xorl
sahf
data16
cld
loope
ret
jnp
insb
sub
jne
and
arpl
fstl
unpckhps
sub
mov
dec
je
jp
sub
xchg
mov
jmp
and
pop
rcl
out
or
sbb
aad
cmpsb
mov
pushf
insb
ds
pop
je
xchg
xchg
popf
cli
cmp
pop
mov
leave
or
cli
pop
mov
out
mov
sub
cld
push
jle
sub
test
pop
inc
and
in
into
mov
add
or
dec
in
inc
xchg
ret
push
xor
push
dec
pusha
inc
push
movl
jno
dec
mov
aam
add
test
repnz
sub
cmp
cltd
sub
lahf
mov
mov
in
jmp
mov
pop
icebp
std
ja
mov
mov
sbb
push
bound
adc
sbb
dec
mov
mov
xchg
dec
sub
jl
arpl
dec
jecxz
sub
xchg
xchg
out
adc
xchg
and
mov
pop
pop
clc
mov
pop
fwait
adc
xchg
int3
mov
out
rol
cli
in
adc
xor
dec
sub
lcall
add
or
xchg
jge
rorl
in
int3
pop
mov
out
ret
lret
mov
inc
lret
push
lahf
lret
mov
or
in
cmp
test
dec
jb
in
out
in
mov
and
stos
movb
test
fwait
jp
icebp
test
xor
mov
or
jp
lret
cmp
sbb
icebp
xchg
ljmp
lods
insl
out
inc
sarl
mov
test
daa
dec
sti
cmpsl
roll
sbb
mov
loope
pop
fwait
pop
daa
xor
addr16
pop
push
sub
push
jno
test
ret
cmp
shll
hlt
fldl
orb
insl
cld
ljmp
xor
mov
xor
add
xor
sub
or
mov
fldenv
mov
out
adc
mov
dec
ds
ss
sahf
cmp
int
cmpsl
aas
pop
lds
inc
pop
mov
leave
jno
adc
sarb
mov
xor
popa
sub
repz
js
lods
cmpb
movsb
xchg
int
or
cmp
out
fucom
cmp
lea
jg
scas
push
cld
rep
inc
push
sahf
popf
popf
pop
adc
aad
std
faddp
adc
lret
lcall
iret
push
xchg
pop
ret
insl
dec
mov
xchg
jecxz
or
icebp
ffreep
lret
xor
movsl
add
lea
xchg
xor
push
cmp
arpl
xorl
mov
xor
jg
jnp
jnp
lret
mov
push
lret
rcrb
push
cmp
loop
inc
das
ffreep
cmpsl
jne
mov
xchg
jg
and
out
gs
fisubrl
jp
pop
ja
js
shrb
pop
mov
stos
sub
xchg
inc
add
cwtl
ljmp
xlat
adc
das
jmp
loop
jmp
shll
fmul
push
push
jmp
dec
inc
test
mov
je
jp
jns
jl
push
jmp
popf
add
cs
mov
jo
pop
dec
in
idivl
xchg
andl
sbb
jno
cmp
test
inc
xchg
nop
mov
lds
mov
xor
ret
adc
enter
dec
stos
cwtl
lea
inc
pop
sub
mov
outsb
jmp
cmp
sub
push
jno
pop
sub
jb
xor
inc
ret
push
push
cmpl
sub
call
pop
or
mov
add
js
fistl
out
push
pop
push
mov
les
add
mov
cmp
andnps
lods
je
pusha
mov
lods
push
mov
shll
fcmovnb
sub
cmp
adc
int3
push
jo
jl
add
xor
call
xchg
push
sahf
push
test
in
pop
vcmpss
loope
inc
and
push
inc
pop
add
jp
lock
dec
mov
subl
inc
push
pop
insb
mov
enter
pop
aam
lcall
rcll
xlat
add
ret
sti
subb
xchg
scas
fildl
push
lcall
inc
mov
fidivrl
or
call
out
mov
pop
pop
mov
pop
mov
cmp
adc
aad
adc
dec
stc
xchg
jg
ret
lods
inc
jmp
jl
xor
inc
cmc
lock
mov
icebp
call
xorl
or
cld
jmp
jne
pop
sar
das
stos
sbb
jnp
push
sbb
adc
inc
pop
push
repnz
pop
sbb
sar
hlt
pop
push
jmp
imul
negl
mov
mov
aaa
jo
cmp
iret
es
cmpsb
daa
mov
dec
rcl
pop
add
mov
pusha
lret
inc
outsl
call
inc
das
sub
mov
jl
divl
add
or
adc
and
es
mov
lret
xor
cmpsl
or
mov
test
sbb
adc
jge
and
int
dec
sbb
sbb
pop
imul
std
add
cltd
out
test
scas
shr
mov
stos
in
insb
xchg
pop
movsb
add
lcall
or
rcl
push
jge
test
adc
xchg
inc
pop
adc
inc
mov
shlb
pop
das
dec
and
fldcw
mov
mov
cmpsb
les
jge
sahf
xchg
pop
lret
dec
aas
adc
sbb
insb
fstps
cmpsb
scas
fldenv
jae
dec
xchg
or
add
jl
dec
cmp
pop
repz
movnti
orb
inc
fidivrl
fsubrs
sahf
fdivs
and
xchg
adc
mov
in
jl
in
adc
in
aas
addr16
mov
dec
repz
jns
adcb
in
jbe
and
movsb
adc
out
pop
jae
cltd
cltd
and
repnz
es
push
or
pop
sbb
lahf
fisttpll
sbb
cmp
cmc
mov
or
fildl
xchg
push
adc
ret
push
lock
inc
out
cli
fnsave
daa
aam
test
sbb
push
movsb
shr
test
push
add
lock
clc
out
jo
mov
sub
testb
mov
sar
xchg
jno
shlb
mov
mov
movsb
shr
in
xlat
dec
roll
jp
andb
pop
data16
mov
xlat
xchg
insb
sbb
lods
jns
mov
adc
in
cmp
das
aad
ret
inc
clc
outsl
aad
hlt
cmp
mov
jg
jb
dec
nop
and
pop
mov
xor
push
int
push
ljmp
sbb
rcll
push
arpl
movsl
pop
xchg
sub
mov
mov
cltd
lahf
or
roll
dec
and
pop
and
lret
stos
hlt
cmp
xor
mov
aas
rol
subl
and
push
mov
ret
pop
pop
mov
test
mov
mov
pop
xor
nop
bound
xor
push
popa
nop
ss
test
and
pop
aaa
push
xchg
loop
xor
add
push
inc
lea
ss
or
int3
push
push
aaa
dec
aas
sbb
imul
js
dec
popa
cld
pop
dec
jno
loope
mov
cmpsb
cltd
addr16
mov
jmp
lock
sarl
pop
sbb
xchg
cmpb
dec
push
data16
fdivp
xchg
push
sahf
mov
roll
or
or
into
popa
mov
lret
sub
adc
test
loopne
and
push
loop
mov
out
pop
stos
push
xor
sbb
inc
fdivr
or
int
repz
cmp
xchg
push
aas
enter
and
ds
sub
push
cmp
mov
add
push
shlb
and
ja
sub
rorb
mov
xor
sarb
hlt
int3
mov
sbb
cmp
and
jnp
and
dec
add
sbb
fwait
inc
mov
mov
stos
xchg
dec
cmp
xlat
js
adc
mov
sub
xchg
cmp
dec
pop
out
or
sbb
dec
mov
lahf
and
aam
movsl
inc
push
repnz
xchg
rolb
or
adc
icebp
push
adc
js
fcomi
sti
xor
int
test
push
pop
dec
mov
jle
pop
or
or
xchg
cmpsb
sahf
mov
popf
aaa
aaa
or
pusha
push
subl
popa
push
pop
nop
data16
push
mov
xor
adc
fidivs
rolb
stos
sub
mov
pop
inc
mov
pop
rorb
mov
jl
xchg
ja
jge
mov
xchg
jnp
cmp
mov
fdivrs
and
stos
or
xchg
or
in
push
dec
les
push
pop
pusha
aas
mov
inc
aad
sbb
xor
rcrb
xchg
pop
jnp
aas
dec
arpl
jmp
scas
mov
int
inc
pop
jb
sbb
sbb
pop
or
rcl
call
dec
scas
mov
bound
lahf
mov
adc
arpl
ret
inc
pop
lods
cmp
and
mov
scas
add
sub
int
call
cmpsl
cli
mov
push
pop
jge
and
jp
jmp
mov
sbbb
or
int3
and
cmp
jecxz
imul
loopne
sbb
stc
sbb
into
and
or
shll
sbb
sbb
rcll
pop
add
add
jge
test
sub
mul
orl
ja
inc
jbe
in
and
rcrb
in
mov
mov
bswap
jmp
push
mov
into
push
cmp
in
movl
mov
not
cmp
fistpll
mov
pop
leave
dec
enter
inc
call
icebp
or
dec
jbe
in
arpl
mov
mov
and
ret
icebp
int3
loopne
leave
xchg
jbe
sub
pop
and
xchg
movsb
adc
ss
ret
fs
cld
in
mov
push
dec
add
rorb
mov
xchg
js
push
pop
adc
iret
add
and
in
leave
repnz
fiadds
xorl
in
movb
mov
aad
call
push
mov
inc
push
push
stos
mov
inc
popf
dec
orb
mov
push
sarl
stos
add
psubb
mov
pusha
out
push
repz
push
mov
andb
pop
inc
cmpsb
mov
xor
xlat
cld
adcb
clc
into
ret
arpl
mov
pushf
mov
ss
je
imul
test
mov
mov
es
popa
outsl
cmp
test
adc
pop
mov
sub
cmp
inc
mul
xlat
loopnew
pusha
cmp
mov
imul
out
cwtl
int
dec
or
jmp
hlt
fcompl
loop
lea
mov
push
lcall
jl
sub
ljmp
push
fs
dec
mov
pushf
pop
mov
in
negl
add
cmc
push
jae
fwait
sti
cmpsb
cmp
mov
outsb
stc
add
sbb
test
mov
xchg
jae
nop
in
xor
push
xchg
in
mov
shl
and
mov
xchg
mov
shrb
dec
xor
icebp
int
cmp
daa
bound
pop
sbb
mov
add
pop
xchg
mov
enter
inc
fists
loopne
aaa
fsts
add
xchg
or
push
push
fistl
out
pop
jnp
cmp
jecxz
and
and
ja
in
lock
sbb
xor
mov
mov
sahf
nop
adc
xor
imul
xchg
sahf
loop
ficompl
lods
push
or
mov
or
adc
ds
pop
jbe
fidivrs
add
sbb
pop
aam
cltd
popa
popa
adc
push
inc
add
sub
jmp
xor
sbb
mov
xacquire
sub
and
add
push
arpl
dec
fucomip
fs
aaa
push
imul
es
or
xchg
xchg
inc
mov
ja
int
xchg
leave
dec
imul
es
repnz
pop
into
sahf
jp
and
notb
inc
lcall
xlat
test
pop
out
xlat
rclb
rolb
dec
test
out
jae
cwtl
ficomps
aad
sti
arpl
inc
xor
fmull
or
cld
and
cmp
dec
shlb
insb
xchg
xchg
xchg
fstp
ss
or
lahf
or
jle
subb
lods
mov
mov
adc
int3
movsl
ja
and
enter
stc
adcb
adc
shl
jmp
ja
adc
mov
mov
push
nop
inc
dec
cwtl
or
das
std
pop
adc
inc
cld
scas
movsb
fwait
ja
adc
imul
and
pop
jno
cmp
sub
sbb
sahf
dec
or
push
dec
cwtl
or
push
addr16
sub
cmp
loopne
cwtl
roll
enter
movsb
jmp
imul
cmpsl
mov
jp
and
xlat
out
mov
xor
and
adc
jmp
lods
lahf
sbb
xchg
inc
cmp
inc
fistps
cli
jmp
cmp
fstpt
push
ss
and
xor
test
pop
sub
and
rorb
push
outsb
shll
bound
fisttpl
aad
push
mov
les
out
xchg
notb
xchg
std
xchg
cmp
mov
imul
jle
inc
mov
fcomps
inc
pusha
push
jg
shll
cpuid
sub
lds
jne
nop
pop
or
mull
push
cs
xchg
scas
xor
cltd
jp
data16
xor
adc
icebp
mov
movsb
jnp
call
sub
mov
pop
sub
test
mov
sub
addr16
xor
lods
inc
push
rcrl
cmp
or
adc
mov
out
lods
scas
and
cs
into
push
leave
mov
ja
or
insl
push
dec
imul
pop
div
dec
cs
sub
add
push
dec
cmpb
sub
mov
inc
lahf
aad
dec
out
push
mov
enter
pop
cmp
aad
cld
push
sub
repnz
add
inc
test
rorb
push
inc
inc
imul
pop
popf
sbb
and
test
das
lods
movsl
fidivrs
scas
sbb
cmpsb
push
imul
int3
cmp
push
sub
lcall
pop
divb
or
in
fnstenv
adc
add
cmp
inc
jae
les
jle
pusha
int3
das
sub
jb
repnz
mull
sub
jo
jns
pop
jge
ret
lods
into
xchg
mov
xor
dec
jecxz
pushf
xor
sbbl
stos
cld
ljmp
pop
cs
lcall
mov
stos
loop
cli
mov
gs
sub
cmp
xchg
push
and
imul
in
popf
mov
xchg
push
mov
in
pop
add
fwait
and
inc
jmp
pop
ret
dec
mov
fs
lret
cmovl
and
fnstsw
mov
and
and
jmp
fwait
sahf
xsha256
cmpsb
xchg
fwait
mov
lretw
xorb
push
icebp
jnp
push
js
out
inc
jns
and
jmp
ret
cmp
and
inc
mov
int
sti
push
in
cmp
xor
shll
stos
dec
sbb
outsb
aad
das
lret
out
fwait
or
xor
negb
lret
hlt
icebp
fisubl
fldcw
push
jl
jle
inc
fs
cmp
adc
add
in
mul
das
repnz
lret
lret
imul
cmp
xchg
mov
aam
repnz
in
or
add
scas
aam
outsb
and
ror
adcl
aaa
jnp
push
or
cmp
pop
dec
cmc
jb
push
insb
loopne
pusha
mov
push
dec
insb
out
push
lcall
add
lds
push
dec
ljmp
mov
test
fcompl
push
divl
out
loope
mov
cli
adc
iret
mov
rolb
leave
sbb
fs
ss
cmc
gs
sbb
mov
mov
and
or
into
xor
adc
loopne
popf
dec
in
lea
lret
dec
in
pushf
add
xor
repz
imul
outsb
aad
jnp
inc
push
mov
shl
repz
pop
push
insb
scas
add
pop
orl
les
int3
lret
icebp
mov
cs
add
notb
pop
adcb
ss
in
int
rorb
push
fisttpll
push
mov
jne
fnstsw
sarl
fisttpl
xlat
imul
mov
mov
push
fisttpl
es
jne
lods
push
shll
inc
jno
dec
mov
sub
push
ss
sub
xor
and
and
sbb
js
aam
adc
sti
jnp
xor
mov
or
clc
inc
and
imul
roll
ret
cltd
or
xor
insl
jg
push
and
inc
imul
mov
aad
ds
mov
int3
fimull
sti
push
ret
ret
iret
divl
push
mov
jle
ss
dec
stos
xor
adc
jbe
dec
and
adc
and
xor
cmp
out
loope
insl
dec
aad
mov
pop
jle
aad
ds
xor
add
or
or
enter
mov
or
loop
cwtl
fsubs
rol
in
jge
sub
fldenv
pop
adc
pop
xchg
jg
fisubs
mov
mov
cmp
jecxz
or
mov
push
out
add
js
or
mov
jnp
test
mov
xor
lods
mov
mov
repz
sbb
inc
mov
loope
ret
xchg
mov
fdivl
ja
clc
in
ljmp
push
lret
xor
movsb
orl
addr16
mov
dec
or
mov
insb
inc
push
lret
jp
adc
xchg
mov
mov
mov
repz
or
dec
inc
dec
mov
push
adc
jnp
inc
out
inc
bound
adc
daa
xorb
cmpsb
push
clc
shlb
pop
sbb
mov
lsl
rcll
addr16
fistpl
jl
mov
pop
fidivrs
mov
sub
jmp
add
test
mov
wrmsr
push
sbb
inc
das
xor
testl
fsts
popf
and
and
jno
mov
aas
mov
lods
and
or
inc
arpl
dec
dec
scas
js
mov
dec
xchg
mov
in
daa
jnp
xchg
fadds
cmpsb
iret
fsubs
jo
leave
mov
cwtl
cmp
add
lahf
cmpsb
lcall
sbb
fdivl
push
out
aad
jno
movsl
xchg
loopne
test
ja
cmp
add
and
push
shl
shrl
lret
pop
inc
jo
ss
out
xor
add
imul
sti
adc
addb
xor
push
inc
mulb
test
dec
stos
dec
iret
outsl
cmp
or
shll
stos
push
pop
shl
dec
pop
mov
enter
aam
aam
ss
jnp
jl
stos
dec
enter
sub
movsl
outsb
cmpsl
cmc
cmp
imul
xor
test
push
adc
sbb
imul
mov
out
je
or
jg
mov
pop
scas
mov
adc
adc
dec
clc
insb
adcl
pop
out
cmp
jmp
popf
add
pop
sub
shlb
mov
xchg
push
lahf
sub
fwait
mov
insb
lods
push
and
pop
movsb
out
enter
mov
push
mov
gs
mov
sub
dec
xor
sbb
les
mov
mov
sub
movsb
xor
outsb
pop
mov
ss
push
jmp
test
xor
fstpl
or
jnp
cmp
xchg
add
insb
cli
xor
fstps
jno
pop
dec
lea
and
push
mov
pop
and
gs
add
in
cmp
cltd
in
cmp
andl
jp
movsb
in
add
addr16
sbb
dec
jl
loopne
dec
push
imul
pop
jne
xchg
or
in
or
sbbl
add
mov
cmp
mov
out
push
or
sbb
out
mov
push
xchg
jg
repz
add
mov
jle
lahf
fisttpll
push
daa
ret
in
pop
loope
out
mov
mov
fwait
or
pop
xor
jecxz
aad
mov
pop
dec
loop
cmp
xchg
pop
xchg
push
adc
cmp
push
lock
sti
mov
add
mull
add
repnz
cmpsb
mov
or
fbld
pop
out
dec
jo
add
aad
test
xchg
push
pushf
or
lods
xor
out
outsb
stos
clc
in
sti
fldt
pop
das
cmp
js
pop
sar
outsl
mov
inc
and
dec
dec
xchg
mov
jb
mov
call
fildl
push
mov
mov
push
jae
cmp
out
xchg
mov
mov
roll
je
inc
popf
pusha
outsl
into
sbb
shll
dec
mov
push
insl
pop
adc
mov
rolb
push
push
ljmp
in
add
aad
lods
jle
add
call
mov
sub
test
push
push
and
push
insl
xor
inc
xchg
out
mov
ret
add
fistpl
sub
cmp
mov
pop
sub
daa
aaa
insb
cmp
leave
icebp
or
jmp
rorl
push
lahf
cmp
lods
mov
or
aam
fsubl
add
idivl
icebp
dec
test
xor
pop
lock
and
mov
sub
in
xor
insl
repnz
push
push
inc
lret
jecxz
js
pop
mov
or
jno
lods
mov
mov
rorl
xorb
popa
clc
mov
mov
lret
shll
ss
mov
mov
sub
pop
popf
ja
cmpsb
daa
in
ljmp
mov
push
mov
inc
or
pop
mov
xchg
push
repnz
push
mov
jbe
mov
xchg
pop
inc
ljmp
stos
cmp
sbb
mov
jo
call
pop
test
shlb
or
stos
add
rolb
les
adc
sub
lea
sub
cmp
nop
lret
imulb
push
xchg
xor
xchg
scas
rcrb
mov
fidivrl
inc
andb
subb
idivl
ljmp
test
call
rcll
mov
cmp
cmp
jae
and
mov
xor
jns
mov
jbe
aad
or
jmp
dec
pop
mov
fs
inc
lahf
divl
mov
dec
xchg
jo
lds
push
dec
push
mov
scas
mov
push
in
cmpb
out
and
push
bound
mov
fstpt
dec
gs
andb
add
fsubl
leave
push
jg
adc
jecxz
in
inc
pusha
or
enter
xchg
push
push
sbb
lret
fcmovbe
stos
lret
cmp
js
data16
in
sub
add
popa
cli
pop
icebp
push
xchg
add
cmp
add
xchg
jge
or
jmp
or
jae
lret
xchg
in
mov
incl
fcmove
xchg
outsl
pop
inc
and
jo
push
loope
clc
popa
loope
add
jp
push
push
mov
fadds
push
push
add
inc
dec
jo
add
mov
lods
ljmp
js
js
addr16
popf
lret
or
es
pop
sbb
jb
scas
out
push
sbb
dec
or
shlb
adc
gs
leave
inc
and
pop
sbb
mov
aaa
mov
lret
xor
or
mov
enter
outsl
js
add
out
mov
inc
lret
mov
xchg
push
push
push
push
cmpb
pop
and
mov
ds
xchg
lcall
or
mov
mov
mov
mov
jl
test
cbtw
imul
pop
pop
sbbb
mov
mov
pop
jg
jo
dec
or
in
rclb
add
sub
mov
mov
jmp
pop
pop
mov
or
mov
push
mov
xor
push
xor
sub
jbe
ret
repz
or
lret
pop
sbb
or
mov
lods
xchg
push
mov
arpl
jne
ror
xchg
sub
dec
mov
xchg
sarl
ret
push
jge
shll
xchg
out
insl
sub
or
inc
and
mov
or
xlat
call
xchg
adc
cmp
mov
out
inc
popl
imul
lret
xor
sub
pop
mov
xchg
les
xchg
sbb
nop
mov
dec
sub
int3
fnstsw
mov
jnp
and
push
xor
movsb
das
xchg
jp
mov
stos
adc
mov
fidivrl
adc
popf
in
pop
enter
test
fcmovb
sub
push
sahf
int
and
inc
ss
shl
cmp
cmpb
fucomi
cli
or
mov
push
scas
xor
les
ror
dec
fsts
aad
daa
loopne
mov
cmp
lea
in
cmpsl
cld
fcmovu
adc
fwait
mov
mov
js
lea
push
clc
rcll
lahf
and
mov
cli
jae
jbe
cmp
sub
iret
fbld
mov
shll
iret
popa
sbb
xor
js
cmp
mov
push
inc
jbe
lds
cs
fists
mov
repnz
addb
mov
fdivrs
mov
push
clc
push
and
loop
cmp
outsb
dec
jo
sub
adc
add
out
mov
ret
lea
ret
push
pop
or
cmp
nop
mov
dec
movsl
push
mov
push
inc
or
cmp
ja
sti
mov
icebp
jo
add
and
mov
pop
mov
ret
popf
dec
fstpl
pop
sub
adc
or
add
stos
arpl
ja
pop
cmpl
and
jnp
scas
add
sbb
add
and
and
ja
mov
fldt
xchg
and
popfw
repz
xchg
adc
jns
mov
insb
fs
adc
in
int
xor
mov
sbb
ss
in
js
in
adc
add
aam
jle
jae
push
mov
add
or
mov
cmp
incb
mov
ret
pop
cld
mov
test
sbb
fcom
dec
xchg
mov
pusha
and
jle
aas
jbe
xor
mov
lods
mov
or
sbb
xor
add
adc
jge
sub
xchg
jl
mov
inc
sub
rcrb
test
lret
fisttpll
mov
stc
mov
sbb
xor
orl
inc
or
inc
sahf
mov
cmp
ror
rclb
imul
inc
mov
sub
sbb
fwait
pop
orps
lret
cmpsl
loop
addr16
into
push
je
add
ja
sub
orb
js
mov
lock
and
arpl
inc
mov
imul
sub
inc
mov
pop
add
mov
xor
imul
outsb
out
ret
inc
dec
stc
es
ja
cmp
jp
xlat
mov
out
popf
mov
and
fsubrs
add
push
xchg
movb
dec
jge
testl
scas
xchg
cld
stos
leave
popa
xchg
je
fsts
lods
sbb
popf
lret
cli
sbb
pusha
stos
loop
sub
pop
mov
movsl
or
mov
lret
and
out
cmp
dec
clc
aam
jne
push
pop
xchg
push
out
mov
push
mov
mov
jne
and
cltd
mov
cmp
dec
rcll
cmp
outsb
lods
insb
xlat
cmp
pop
popf
leave
dec
cmp
mov
sbb
fwait
or
icebp
xchg
imul
addr16
cli
jb
mov
and
mov
imul
inc
cli
loop
adc
mov
lds
sbbb
stos
sti
cs
jle
jl
stos
jb
mov
push
xor
sarl
test
mov
fs
xchg
pop
in
mov
ljmp
push
jg
jg
jl
gs
fisubrs
sub
cmp
dec
mov
mov
mov
inc
push
sub
mov
mov
inc
mov
sbb
pop
fmull
mov
xor
adc
dec
adc
loop
pushw
push
mov
xchg
lds
mov
icebp
decb
cmp
in
addr16
sbb
lcall
dec
loope
imul
adc
xor
imul
ret
dec
cmp
ja
lret
cmpsl
xchg
into
repnz
jmp
mov
mov
ret
bound
imul
rcrl
call
loop
movsb
xchg
stos
out
popf
test
sbb
or
sub
in
xchg
jmp
jmp
movsb
test
or
xchg
addr16
adc
jp
sbb
mov
pop
fwait
lock
xchg
xor
inc
mov
adc
sahf
mov
cmpsb
sbb
or
inc
dec
add
mov
fdivrs
sbb
repz
out
ficomps
pop
cli
fwait
in
sarb
cmpsl
andb
inc
lea
push
xor
mov
dec
xlat
test
loopne
dec
pusha
cmp
xlat
and
or
mov
dec
fcmovnu
insl
sub
push
adc
or
xchg
enter
dec
popa
fisttpl
jns
fsubrs
insb
pop
shrb
jae
pushf
cmc
aas
ss
cmpb
movq
adc
unpcklps
fistpl
pop
movzbl
mov
mov
adc
aaa
sbb
loop
push
out
std
xlat
push
mov
dec
dec
orl
fdivl
cmp
test
mov
int
test
cmpsl
dec
pop
jmp
cmp
xorl
mov
sub
pop
out
pop
push
sub
cmpb
adc
lods
cltd
mov
xor
insl
pop
ret
fwait
or
sub
jbe
adc
sub
rcrb
mov
cmp
test
js
iret
shll
shr
add
out
idiv
orl
cli
and
cs
push
jmp
cmp
push
icebp
adc
scas
fisttpll
sti
adc
repz
sti
cmp
sub
sbb
out
shl
movl
xchg
pop
xlat
clc
imulb
sbb
js
cld
mov
xor
jb
out
jnp
hlt
adc
fs
push
stos
mov
fnsave
push
cmp
nop
mov
pushf
lods
imull
or
xchg
xchg
xlat
mov
or
add
bound
mov
mulb
dec
inc
xor
adc
xchg
loope
ds
jle
pop
insb
xor
sbb
cld
cli
jo
sahf
xor
rorl
out
in
dec
jae
add
push
aaa
push
popf
mov
dec
popw
or
xchg
add
addb
mov
and
cld
cmc
add
mov
clc
cmp
push
scas
shlb
pushf
lahf
push
pop
push
push
adc
fnstcw
fucomp
cld
mov
lret
sub
cs
mov
insb
mov
notb
rorl
sahf
neg
insl
test
push
das
rcll
push
mov
sub
cmp
add
int
push
mov
out
pop
cmp
cmp
aas
aam
pop
cltd
call
sbbb
mov
push
scas
ficomps
stc
push
sub
add
or
scas
mov
jbe
push
xchg
fcmovbe
lock
jmp
push
mov
adc
xor
add
loop
pop
add
clc
fs
and
and
jae
xor
popf
sub
xor
jno
push
stos
icebp
cli
lahf
mov
imul
mov
inc
pop
mov
or
cmp
add
rcrb
push
out
add
int3
orb
lret
or
or
jmp
mov
into
stos
scas
lods
adc
lret
jle
pop
cld
imul
ss
push
jge
pop
pushf
ja
or
sti
aam
jge
mov
xor
mov
sbbb
pop
in
mov
or
ss
fdivl
jno
addb
cmp
divl
insl
call
or
cmpsb
add
cmc
push
cmp
inc
xchg
int3
nop
stc
add
sub
jge
outsl
dec
sbb
scas
pop
stos
jbe
or
pop
jmp
inc
mov
sbb
xchg
and
mov
cmc
fcomps
inc
aas
or
aam
mov
leave
sti
dec
addr16
sti
das
iret
std
rorb
sub
ret
movsl
mov
jecxz
sub
push
sti
push
mov
sarl
push
mov
sub
mov
push
xchg
je
adc
scas
dec
add
or
jle
sub
rorl
and
xchg
data16
xchg
mov
fisubs
into
mov
mov
lea
xorl
inc
mov
leave
or
cmpl
out
sbb
xor
ret
dec
jle
or
inc
jmp
jne
mov
sub
mov
shll
mov
xor
ja
flds
sti
cld
and
repnz
inc
enter
xor
lret
mov
cmpsb
stos
xor
mov
test
call
mov
push
and
shll
cmpsb
popa
pop
add
aaa
push
jmp
jg
add
mov
sbb
and
out
nop
cld
adc
out
insb
aaa
push
jmp
fisubs
jne
fwait
pop
fisubrl
or
fidivrs
lret
dec
sbb
insb
jmp
nop
out
popa
in
je
std
bound
xchg
ret
movsl
adc
rol
dec
lea
mov
add
stc
pop
lock
adc
fldenv
ret
and
jp
adc
mov
pop
pop
push
lahf
inc
or
or
xlat
rcr
cmp
push
cmpsl
cmp
fwait
jne
xor
das
push
ljmp
das
inc
ja
aad
sub
cli
jnp
push
mov
int3
sbb
jmp
call
add
jmp
cmp
cs
es
lds
roll
sub
repz
outsb
fs
pop
clc
push
pop
mov
rcrb
icebp
sub
lock
aas
je
add
add
mov
mov
loopne
sti
rcll
ficomps
lfs
ss
fistps
mov
sub
mov
fmull
xchg
test
nop
sub
cld
fldenv
cmp
cmp
push
jl
mov
test
scas
xchg
jp
xchg
push
outsl
xor
xor
loope
test
jmp
lahf
gs
mov
xchg
mov
hlt
jnp
sub
fdivrs
mov
jecxz
or
sbb
pop
lahf
jne
or
pop
xor
clc
bound
mov
sub
andl
push
ja
int
test
bound
inc
rcrl
mov
ret
outsl
movsb
push
pop
bound
inc
jle
in
pop
sbb
icebp
addr16
pop
mov
rclb
xchg
push
xor
repz
jmp
inc
fldln2
out
popa
jb
mov
dec
push
jg
adc
aam
mov
mov
sub
mov
sbb
mov
add
das
jle
xor
sbbl
arpl
mov
popf
lret
stc
xor
nop
pushl
lahf
imul
jne
jb
pop
fcoml
jp
pop
jg
sbb
xor
xor
xchg
cwtl
add
xchg
xchg
in
sti
jecxz
or
jb
fbld
mov
repz
inc
std
into
out
push
xchg
dec
lret
les
popf
test
sbb
lods
rcrl
fadd
mov
movsl
gs
add
and
sub
pusha
cltd
mov
outsl
jge
sub
cmp
adc
push
and
outsl
inc
xor
sbb
xlat
nop
and
dec
test
xchg
mov
push
nop
cs
jg
stos
bound
mov
sub
inc
push
iret
dec
xchg
sbb
mov
cld
leave
aaa
add
aad
jbe
shll
icebp
cld
mov
cmpsb
call
xchg
xchg
push
mov
xchg
xor
push
scas
js
loope
push
addl
in
std
inc
sahf
ja
pushf
push
sbb
roll
into
popf
int
push
sub
daa
sub
push
cmc
jle
xchg
sbb
add
mov
ret
and
adcb
jne
cmp
pop
push
mov
cmp
adc
mov
add
enter
jle
add
imul
and
xor
sbb
xor
hlt
fsubl
add
xchg
js
mov
or
add
out
or
inc
push
ljmp
leave
pusha
aas
or
aad
cmp
insl
or
sbb
push
jg
xor
xchg
adc
enter
sbb
sahf
push
pop
dec
ds
and
push
push
movsl
sarb
pop
rorb
rcr
adc
sub
cmp
xchg
mov
stos
in
sahf
mov
incl
adc
out
jg
arpl
pop
in
mov
in
js
cs
iret
imul
mul
adc
ja
leave
adc
mov
movsb
dec
mov
pop
inc
lcall
sbb
sbb
ret
jnp
gs
push
ss
out
jbe
mov
add
insl
or
mov
cmp
add
nop
das
mov
ss
hlt
xor
dec
jne
jnp
pop
push
and
hlt
mov
xor
or
mov
sub
xlat
xor
inc
and
xor
xchg
jnp
test
ja
add
int
mov
pop
fdivrs
xor
mov
add
xchg
jp
adc
and
or
sub
xchg
popa
jg
cmp
xchg
add
dec
psubusb
adc
daa
mov
les
mov
outsl
adc
pusha
orb
mov
sbb
lret
je
outsl
aam
add
mov
push
andb
dec
insb
cmp
inc
cmp
mov
dec
scas
pop
xchg
aad
mov
pop
outsl
daa
xor
daa
jecxz
mov
ret
or
leave
inc
jne
or
in
fld
out
pop
xlat
shl
shlb
cmp
push
mov
mov
outsl
jp
repz
xchg
push
or
push
mov
dec
adc
jmp
notb
out
xor
mov
enter
movl
daa
fs
push
rol
cmp
sub
ja
pusha
enter
adc
data16
sbb
ljmp
in
leave
fadds
push
mov
ja
test
cld
push
rcll
test
pop
je
lret
jg
sbb
decb
mov
sub
push
mov
leave
sbb
nop
scas
xchg
inc
cs
subb
scas
icebp
cmp
idivl
sbb
pusha
mov
aad
icebp
ror
int3
loopne
sub
jnp
dec
mov
jae
sub
xchg
jmp
stc
pop
jmp
rcll
js
out
in
cmp
adcb
in
sub
pop
add
push
out
adc
call
xor
fcmovu
dec
fadd
xchg
rorl
pop
out
jl
cwtl
jne
aas
lds
sub
jno
cmpsb
push
mov
jb
in
cmpsl
xor
jns
lods
jmp
in
mov
insl
cmp
sub
lahf
aam
xor
jl
jae
enter
pop
push
lods
jp
mov
sub
push
sbb
mov
adc
sbb
mov
lods
xchg
out
sti
std
call
in
pop
out
mov
mov
nopl
jne
jne
xorb
cli
mov
insl
mov
adc
es
leave
mov
loope
scas
lea
in
div
jo
jno
and
lea
push
lahf
adc
or
mov
push
rclb
outsb
cmp
push
ret
xchg
pop
test
call
mov
xor
xor
adc
cmp
add
lahf
inc
jno
in
ret
in
add
gs
cmp
enter
sub
xor
divl
inc
xchg
insl
aaa
jns
cli
adc
sub
out
jbe
pop
mov
mov
nop
mov
mov
pop
xchg
cmp
arpl
jp
sub
daa
xchg
xchg
pushf
pop
xchg
dec
pop
cs
jge
cwtl
pop
add
and
movsb
pushf
cltd
dec
mov
inc
mov
xchg
sti
dec
jg
jne
out
js
adcl
pop
cld
out
sbb
subl
pop
xor
movsl
mov
jbe
or
mov
mov
xor
repnz
inc
mov
mov
aam
jb,pt
jmp
test
inc
outsl
dec
stos
out
outsl
or
and
fwait
sarb
pop
sbb
loope
cmp
or
dec
push
pop
andl
inc
or
jbe
push
push
dec
popf
test
and
push
add
inc
scas
cmpsb
add
sbb
hlt
ret
mov
pop
xchg
push
out
push
xchg
mov
aad
mov
popf
int3
jl
sbb
push
in
daa
mov
inc
aaa
addr16
mov
scas
mov
fwait
inc
mov
movl
enter
dec
jae
loope
loop
sub
pusha
push
divb
mov
daa
clc
inc
data16
lret
lea
sub
pop
jo
inc
leave
sub
les
out
int
sbb
frstor
jmp
inc
add
jbe
loop
xchg
in
aas
mul
adc
and
xchg
in
mov
jl
sub
adc
xor
out
and
pop
scas
mov
xchg
inc
flds
push
mov
rclb
xor
arpl
add
sbb
stc
xlat
jo
mov
mov
jb
xchg
pop
mov
or
mov
clc
adc
push
imul
aam
fbstp
movsb
push
xchg
and
mov
push
lahf
jnp
adc
dec
xchg
aas
add
dec
push
push
pop
fs
mov
pushf
aad
dec
fists
outsl
lahf
push
inc
fidivrs
adc
rorl
xor
lahf
ficoms
jne
mov
adc
out
jle
mov
mov
xor
jne
out
out
notl
xor
sbb
roll
scas
push
jae
aam
fdivrl
ret
aas
mull
inc
dec
js
pop
cmpsb
outsb
cs
in
and
test
roll
dec
xchg
mov
sub
cmp
int3
pop
mov
cmpsl
push
icebp
xor
and
lahf
push
jp
pop
mov
sbb
jp
enter
pop
cmpsl
or
pop
jg
cld
mov
pop
cmp
xlat
in
inc
loope
fdivrl
inc
jno
movsl
test
pop
inc
sub
xlat
sbb
int
xchg
mov
jae
repnz
xchg
outsb
decb
mov
inc
dec
icebp
scas
popa
lods
mov
jle
add
xlat
cmp
in
loopne
in
inc
loopne
into
fnstcw
adc
dec
ret
cmp
push
xor
sub
es
rorb
pop
fwait
inc
cltd
out
out
enter
outsb
lods
xchg
jl
inc
outsl
cli
or
or
pop
mov
pop
outsb
jno
out
jmp
lret
sbb
cmp
push
dec
rorl
pusha
mov
push
cwtl
xlat
or
call
out
not
call
lea
xchg
je
xchg
mov
push
jo
push
pop
insl
lret
mov
dec
and
loop
cmp
lret
pop
and
or
pop
shrb
sbbl
movsb
in
pop
mov
jl
loop
test
mov
mov
and
xlat
mov
loopne
int
divl
xor
mov
pop
fidivrs
insb
in
out
sbb
mov
cmpsb
daa
je
push
in
mov
and
in
mov
dec
stos
xchg
mov
xchg
dec
pop
cmp
push
cmp
inc
cwtl
mov
push
shll
xorb
mov
icebp
jae
mov
push
adc
stos
loop
xchg
push
popa
jns
mov
xchg
out
in
cmp
hlt
or
dec
test
ds
sub
pop
rclb
lods
stos
lock
das
xor
test
mov
inc
adc
pushf
push
lret
sbb
sub
jecxz
pushf
sbb
pop
cmp
push
push
mov
test
push
push
int
sbb
fst
sti
movsl
fbstp
lcall
and
inc
mov
imul
lcall
rol
js
sub
sbb
xchg
pop
lcall
push
ds
mov
clc
lea
ret
jge
add
jmp
inc
aaa
xor
or
movsl
mov
test
jno
jno
add
aas
add
or
xor
inc
pop
adc
sbb
out
mov
xor
stos
mov
pop
or
sbb
pop
add
mov
or
or
cs
lret
mov
out
into
loop
aas
mov
scas
lret
mov
xor
test
push
lret
cld
arpl
ffreep
js
movsl
pop
cmpsl
pop
pushf
cmpl
adc
xlat
xchg
cwtl
out
mov
clc
mov
cwtl
add
or
push
ja
mov
in
imul
add
lcall
push
inc
adc
push
js
and
xchg
test
arpl
icebp
xchg
in
ficomps
lock
cld
icebp
xchg
test
xchg
lds
or
mov
sbb
js
fmuls
xchg
add
cs
ds
mov
test
xchg
mov
adc
add
stc
jae
lods
xor
cwtl
pop
lds
mov
and
fildll
adc
mov
jno
xchg
cmpsb
xchg
in
pop
xchg
loopne
push
mov
dec
push
testl
outsb
shl
stc
cmp
scas
mov
arpl
xchg
xchg
iret
iret
fcoms
adc
dec
jmp
xorl
cld
and
fistl
out
pusha
mov
add
mov
rol
cltd
imul
and
cld
dec
sti
mov
xor
in
outsl
neg
lods
jne
shll
iret
mov
mov
dec
gs
int3
adc
insl
add
out
out
mov
and
andb
or
mov
jno
or
sub
sub
jo
or
push
ret
and
mov
mov
mov
scas
stc
imul
mov
or
mov
sbb
push
xchg
and
aaa
adc
push
adc
add
push
jbe
sub
mov
jo
pop
lsl
test
rolb
push
fwait
mov
mov
sbb
stos
test
push
imul
jge
xchg
ret
rcl
inc
pop
das
push
or
mov
push
jno
js
lret
pop
rclb
adc
in
mov
movsl
test
stc
or
xchg
sbb
test
push
push
ret
xor
add
mov
imul
sub
pop
jle
inc
lds
pop
jnp
xchg
aad
scas
cmc
outsb
mov
adc
mov
clc
cmpsl
mov
shrb
ffree
hlt
add
lret
int
xor
or
or
sbb
mov
dec
loopne
mov
jecxz
pop
scas
dec
dec
test
hlt
int
pop
and
scas
pusha
inc
or
fcoml
push
adc
loop
jne
sbb
or
or
loope
mov
cmp
sub
pop
bound
sti
adc
addr16
sti
sbb
mov
out
mov
mov
data16
jp
movsl
adc
ds
mov
push
std
add
add
bound
jmp
push
add
and
dec
pop
mov
rorb
jne
or
cld
jne
insb
dec
xor
shll
fisubl
sahf
xchg
inc
fsubr
mov
mov
dec
inc
xchg
xchg
clc
roll
xlat
push
xchg
add
insb
inc
loopne
and
dec
xchg
adcb
and
push
mov
add
out
mov
and
les
add
das
shlb
outsb
dec
loope
xchg
subb
xchg
shl
cli
pusha
test
pop
add
cmovp
scas
jmp
and
ror
jmp
mov
push
leave
xchg
sbb
pop
mov
lret
pop
out
cwtl
inc
int3
xor
jle
sar
stos
int
xor
ja
jge
jnp
mov
xchg
sbb
mov
test
xchg
daa
add
add
xchg
pop
in
lcall
and
add
dec
aam
imul
nop
mov
dec
call
cltd
fucomp
call
sarb
in
js
xlat
jecxz
js
fisubrs
xor
daa
test
test
sbb
shlb
and
scas
test
repnz
nop
cltd
inc
and
inc
aaa
pop
gs
jns
adc
aaa
ss
push
push
int3
cli
sub
mov
or
jnp
movsb
test
xchg
shlb
xchg
mov
in
cltd
out
xor
pop
aam
add
mov
xor
shl
fildl
daa
sbb
sti
push
fistps
mov
pop
je
mov
pop
popl
adc
mov
bnd
das
sub
sbb
enter
aam
sbb
das
call
dec
inc
jmp
fidivl
xor
add
pusha
int3
dec
test
jnp
out
jne
sub
jle
ds
into
pop
cmp
addb
mov
mov
pushf
sti
pop
hlt
scas
mov
cmp
outsl
rcrb
pop
in
repz
mov
shlb
scas
jne
jae
lea
pop
cli
out
daa
adc
jle
jl
pop
jl
xor
xor
loopne
mov
in
and
sbb
or
pushf
push
mov
subb
pop
data16
out
fstpl
and
mov
frstor
outsb
jbe
or
fsub
test
cmc
xlat
xor
mov
je
sub
mov
mov
mov
push
xor
ja
lret
push
dec
test
addr16
jo
and
jnp
ret
lcall
test
xor
pushf
mov
call
gs
bound
into
out
sbb
or
lea
or
hlt
enter
add
or
popf
mov
dec
mov
xor
xor
mov
stc
jmp
push
mov
arpl
sbb
cmp
mov
icebp
xchg
xchg
jmp
cmc
mov
xor
add
in
or
scas
jbe
fstpl
jns
inc
cmc
dec
in
popf
leave
lock
jnp
dec
fisubl
fisubl
mov
out
arpl
mov
jb
es
fmul
ds
push
addl
daa
jns
cmp
imul
pop
shrb
cli
mov
dec
outsb
xorl
sti
lret
clc
lods
jb
sub
iret
pop
loopne
adc
mov
mov
repz
inc
push
mov
sbb
dec
enter
pop
stos
shl
std
adc
ret
xchg
sub
ja
cmpsb
pusha
sbbl
xchg
mov
into
dec
push
jl
dec
lret
or
push
cmp
or
and
ss
sub
push
mov
xlat
mov
cmp
adc
divb
fistl
js
int3
daa
cmpsb
mov
jo
mov
adc
test
mov
xor
sub
test
lcall
fnstsw
add
pushf
mov
cld
and
or
stos
shll
cmc
jecxz
push
ja
push
adc
push
and
xchg
add
xor
aam
xor
insb
cltd
xchg
push
xlat
jmp
jo
pop
jne
add
and
rolb
adcl
bound
jp
outsb
rorl
sbb
js
adc
pop
fbld
ja
iret
std
pop
lcall
ret
sbb
aad
xorb
pop
push
inc
xchg
sti
and
mov
pop
xor
mov
out
push
pop
adc
push
and
mov
jo
sub
sbb
lock
out
lods
pop
pop
or
push
enter
nop
icebp
add
std
dec
sbb
pop
neg
fists
les
int3
ja
xchg
mov
push
push
cli
sub
and
adc
sbb
jns
fdivrl
popa
out
mov
aam
lock
jnp
cmp
xor
out
add
vpshufd
mov
jecxz
jo
out
mov
sbb
xchg
daa
aad
ja
jnp
testl
fwait
jp
mov
jge
stc
mov
int
sar
aad
pop
fisubs
lret
cmp
xchg
in
shrb
pop
fistl
inc
enter
lret
mov
hlt
cmpsl
jbe
arpl
xor
and
dec
sub
sbb
movsl
dec
jmp
cltd
xlat
pusha
add
mov
push
xor
mov
int
sbb
push
push
dec
pushf
stc
divl
dec
fnstsw
shll
xor
shll
xor
popa
notb
inc
dec
mov
and
in
rorb
mov
nop
pushf
push
test
or
out
nop
cmpb
decl
push
xlat
cmpsb
adc
sub
mov
movsl
inc
mov
xor
adc
movsb
add
adc
loop
xor
jnp
push
fwait
test
lcall
inc
out
and
cmp
adc
imul
movsb
add
sbb
in
mov
xor
shll
jecxz
add
mov
add
xlat
adc
loop
fldcw
sub
iret
out
cld
sbb
or
enter
icebp
pop
push
insb
push
nop
movsb
aam
rclb
ljmp
pushf
test
cmp
pop
outsb
xchg
push
fsts
add
shl
addb
add
inc
pusha
cmp
add
arpl
nop
xor
dec
push
les
xlat
adc
frstor
pop
lea
loop
gs
sub
fcoms
inc
cmp
pop
icebp
adcb
aas
push
insl
mov
and
mov
mov
bound
jo
or
out
adcl
mov
jecxz
cld
cmpsl
cmpsb
mov
lcall
mov
and
cmp
jae
xchg
cwtl
test
scas
cs
or
dec
jg
pop
cltd
mov
sarl
aaa
stos
test
cmp
jmp
lret
lahf
dec
jno
jmp
and
mov
or
mov
dec
popa
xchg
adc
in
scas
sub
lods
xchg
daa
or
mov
in
popl
inc
adc
cmp
xchg
in
cmp
cmpsb
in
in
es
lahf
ja
jb
inc
imul
rcll
cmp
stos
insb
fistpl
fdivr
ljmp
xchg
fldt
push
jge
jns
addl
lods
sbb
inc
adc
and
ljmp
pushf
inc
mov
xchg
push
ficoml
lods
xchg
ja
out
fistpl
mov
inc
pop
imul
in
inc
or
out
pop
mov
ss
stos
or
mov
adc
dec
dec
out
add
adc
mov
add
pop
imul
fs
mov
sbb
and
fnsave
bound
adc
fisttps
xchg
arpl
push
xor
cltd
pop
dec
sub
pop
dec
push
sbb
mov
add
pop
sbbl
jnp
pop
cli
int
notb
jl
xchg
mov
jb
pop
cs
repnz
inc
add
mov
int
pushf
stos
push
and
insb
sub
inc
push
xlat
aas
mov
push
xor
aaa
sub
adc
jmp
inc
mov
mov
mov
test
pop
and
inc
mov
lods
jnp
fisubs
and
aad
aas
and
aas
mov
push
push
push
jg
jle
xor
pusha
cmpsl
movsl
pop
sbb
mov
pop
ljmp
sub
inc
mulb
xor
add
and
sbb
dec
aaa
add
in
inc
mov
test
push
push
sub
sub
je
or
jnp
xchg
mov
mov
push
or
insb
push
mov
hlt
rcrl
popf
sbb
add
add
jecxz
adc
and
cli
rcrb
xchg
sbb
adc
daa
sbb
or
repnz
mov
or
sbbb
mov
mov
outsb
jg
fwait
sub
xchg
mov
cli
or
sbb
in
mov
mov
fwait
cltd
jge
jno
mov
adc
imul
mov
in
xchg
xor
mov
insb
dec
int
jns
lock
mov
pop
cmp
mov
stos
jle
push
mov
test
mov
rolb
pop
popf
xchg
dec
lahf
pusha
sub
cmc
push
pop
or
repz
lret
add
in
pop
sahf
push
movsl
fsubrl
fildl
jle
xor
fwait
cltd
jae
aaa
imul
inc
push
leave
pop
sub
scas
mov
sbb
xchg
cmp
dec
popa
adc
stc
repz
dec
mov
jns
stos
jmp
sbb
sub
mov
jg
wrmsr
pop
jp
pop
mov
jg
adc
sub
mov
pop
std
xchg
cwtl
js
jo
push
mov
dec
cmp
ret
scas
and
pop
sarl
mov
push
push
fistpl
jo
cmp
push
dec
xchg
add
cmp
or
pop
inc
dec
dec
mov
mov
les
jecxz
outsl
pushf
and
sub
adc
pop
mov
pop
and
xchg
adc
add
arpl
fucomi
jg
mov
insb
fdivrs
or
inc
test
inc
adc
xchg
rcll
xor
scas
xchg
cmc
loope
sbb
mov
mov
push
mov
and
add
icebp
and
mov
xor
ret
and
push
lock
aam
cli
xchg
stos
daa
xchg
mov
xchg
sbb
adc
pusha
dec
notb
dec
or
iret
outsb
shll
jo
repz
mov
push
jno
jl
iret
dec
cmpsl
and
cmp
ficomps
in
mov
push
sub
cmp
mov
push
mov
lea
jnp
xchg
outsl
imul
xchg
imul
pop
ds
fiaddl
jo
aad
mov
cmp
pop
mov
jp
incb
pop
add
cmp
and
insl
adc
test
and
xor
dec
daa
inc
pop
xlat
movsl
ljmp
mov
shrb
cmc
jecxz
test
pop
mov
jge
scas
int
stc
dec
sub
adc
inc
clc
stos
in
cltd
adc
or
test
cmp
pop
rclb
sub
pop
scas
pushf
gs
shlb
inc
mov
stos
pop
mov
cmp
cmp
and
aaa
jno
xor
jnp
and
sbb
loop
nop
insl
jo
adc
out
cmp
popa
sub
arpl
enter
cld
sub
jb
inc
sbb
stc
pop
pop
inc
ret
xor
das
in
in
mov
xlat
shl
and
sub
test
jp
jle
push
bound
add
cmpsb
imul
push
call
test
and
push
cld
push
movsb
cwtl
mov
dec
jnp
fisttpl
push
cmp
xor
and
sbb
insb
xor
sbb
dec
fnsave
mov
jns
jnp
pop
addr16
sti
in
mov
inc
jae
mov
rolb
enter
mov
int3
ficoms
popa
xor
jns
fistpl
adc
clc
icebp
cmp
cmp
pushf
dec
ja
jmp
sub
pop
addr16
mov
jl
push
cltd
mov
mov
les
inc
roll
xlat
arpl
shl
xchg
add
cmpsb
and
test
test
test
dec
cmp
mov
jb
xor
mov
repnz
pop
mov
in
and
insb
add
pop
hlt
inc
pop
rcrb
xchg
stos
jbe
out
mov
and
jmp
mov
xlat
xorps
add
mov
mov
loope
cli
dec
rcrb
sub
int3
lea
pop
or
sub
xor
loop
movsb
in
sub
adc
imul
int
xor
test
lock
cli
push
add
aam
add
mov
xor
divl
addr16
pop
insb
jae
or
cmp
lds
scas
mov
mov
add
scas
stos
mov
test
mov
addl
ss
cmp
pop
jmp
sbb
dec
ret
pop
sub
fidivrl
sarb
enter
or
push
loopne
and
jp
testb
rorl
adc
rcrb
outsl
lock
arpl
sbb
add
loopne
mov
ficoms
jo
jo
dec
clc
addr16
or
dec
popl
jb
loop
mov
out
xor
sbb
mov
fdivrl
in
imulb
fyl2xp1
pop
push
ss
mov
add
mov
popa
cmc
je
mov
out
adc
and
dec
adc
stc
dec
xor
jl
mov
xor
ljmp
mov
ljmp
imul
jo
mov
inc
mov
inc
and
xchg
js
dec
movsb
push
mov
sub
or
push
ret
lcall
jb,pn
mov
inc
pop
test
inc
loope
xor
insl
scas
scas
jle
xor
push
ss
and
dec
xchg
jnp
or
mov
lret
xchg
mov
mov
test
inc
jmp
aad
mov
xchg
mov
std
dec
and
xchg
mov
and
cmc
jo
andb
mov
shll
adc
int3
into
pop
es
cmpsl
rcrl
aad
or
jp
daa
or
xchg
daa
adc
mov
aas
imul
lods
pop
xchg
rcr
dec
sahf
repnz
pop
xor
push
movsl
lret
push
adc
lcall
out
mov
pop
sbb
and
sbb
es
aad
jno
xchg
sbb
sti
pushf
push
inc
insb
mov
push
test
out
jns
pop
insl
lahf
inc
in
adc
inc
xor
aad
inc
xchg
push
les
sbb
xchg
sbb
decl
dec
sub
mov
mov
mov
sub
adc
out
add
and
arpl
leave
jmp
int
cli
and
int3
sahf
sbb
addr16
jl
fimull
cld
xor
data16
and
lods
shrb
push
mov
stos
cmp
lods
jo
mov
in
cmpsl
scas
lret
call
in
fst
repz
fcompl
scas
and
pop
sbb
sbb
into
sahf
sub
sub
pop
mov
mov
stc
inc
lcall
stc
scas
das
cmpsl
lcall
jge
or
ret
je
ret
clc
pop
or
dec
push
sarb
inc
sub
adc
pop
in
add
fnstsw
push
add
xor
sahf
ja
setne
mull
pop
dec
dec
sbbb
mov
loopne
in
js
inc
pushf
icebp
dec
mov
mov
lret
test
inc
cmp
or
xchg
mov
scas
pop
pop
push
test
sub
cmp
inc
inc
mov
aaa
popf
fmulp
fdivl
mov
lcall
out
add
pop
mov
in
repz
subl
cmp
into
push
jecxz
lcall
pop
lahf
and
jle
bound
fldl
sbb
add
ret
addl
push
stc
pop
test
aas
stos
mov
pop
jb
add
jmp
rorb
xchg
pop
rcl
rcl
adc
in
lods
jae
ss
ret
push
out
hlt
or
pusha
gs
aam
inc
inc
inc
cmp
mov
imul
pop
dec
push
cmc
ss
out
bound
adc
pop
dec
gs
sub
jo
and
inc
push
cltd
ljmp
bound
lret
jge
sub
bound
jnp
inc
push
xchg
push
add
xchg
inc
lahf
popf
xchg
out
aaa
sbb
dec
inc
fwait
lret
mov
aas
xchg
jo
movb
icebp
fisttpll
lahf
in
or
fildl
cmp
shlb
mov
stos
pop
mov
inc
cmp
jmp
adc
out
nop
add
dec
les
jl
movsl
or
enter
bound
or
les
pop
fwait
mov
ret
aas
dec
movsb
adc
dec
push
scas
jno
aad
inc
sub
xchg
add
jecxz
jns
sbb
jg
xchg
addl
and
add
popf
sub
mov
cltd
add
iret
xor
movsb
insl
insl
jns
mov
lahf
lret
xchg
aaa
lds
mov
push
mov
sbbl
out
jle
cmpsl
out
xchg
jecxz
bound
aam
dec
aam
popf
mov
dec
cmp
popf
dec
stos
fldcw
sub
push
mov
push
sbb
inc
pop
mov
cmp
fimull
pop
scas
xchg
scas
jnp
shll
out
or
and
arpl
or
mov
mov
xor
push
hlt
cmpsl
rol
dec
cld
cmovg
adc
in
cmp
roll
cmp
mov
adc
imul
xor
popf
cmp
inc
faddl
aaa
cmpsl
inc
pop
iret
jp
pushf
shlb
jmp
xchg
add
cli
jno
sub
pushf
popf
int
imulb
xor
jb
gs
subl
outsl
addr16
pop
inc
inc
jmp
dec
pop
mov
pop
repnz
jbe
push
cli
xor
out
sub
cmpsl
dec
dec
shl
je
stos
xor
mov
cltd
ret
jecxz
dec
adc
adc
mov
shrb
or
out
and
mov
pop
push
mov
sub
dec
push
idivl
add
lret
cmpl
mov
and
mov
daa
xlat
mov
jmp
testl
or
dec
roll
pop
sbb
daa
pop
push
aaa
mov
out
xchg
jp
xchg
aaa
mov
stos
jle
cld
mov
das
and
xor
insl
xor
xor
inc
pop
or
sbb
imul
sub
xor
ret
or
jnp
mov
call
lret
out
lahf
or
test
sbb
imul
sub
pop
adc
hlt
lcall
daa
sbb
nop
sub
cmp
mov
rcll
call
push
je
pop
sub
scas
shrl
iret
fisubrs
dec
popf
mov
xchg
dec
or
inc
adc
bound
cs
rorb
jl
mov
jge
and
push
lcall
test
mov
hlt
in
jae
jecxz
xor
test
ficoml
mov
stos
sbbb
stos
inc
or
out
pop
inc
sbbl
imul
and
push
jp
shll
imul
mov
xchg
cli
jge
daa
aam
push
mov
testl
call
sub
mov
rcrl
pop
mov
insl
sbb
jmp
mov
mov
xor
cmc
mov
fwait
push
mov
jle
xor
dec
push
jno
dec
mov
mov
pop
push
test
jb
xchg
mov
or
sbb
jmp
or
arpl
pop
aam
sarl
dec
xor
xor
nop
sub
nop
xor
xchg
mov
lea
or
jae
dec
insl
dec
jl
xchg
loope
cmp
scas
std
xor
cmp
rcrl
jmp
cld
sahf
ja
fisubrl
mov
sub
xlat
jecxz
dec
imul
scas
int
pop
jnp
repnz
fdivrp
stos
cmp
xor
les
adc
cli
outsb
data16
ss
std
push
out
push
arpl
sub
mov
gs
xchg
pop
jmp
lret
loop
or
addr16
jbe
pop
das
xchg
out
xor
test
sub
je
add
cwtl
xlat
inc
out
dec
out
mov
in
in
dec
jnp
jb
outsl
sub
dec
sbb
cmc
fsubl
add
popl
cmp
xor
mov
pop
aas
sahf
sub
and
inc
outsl
mov
sahf
idivb
cmpl
je
dec
pushf
xchg
pop
out
add
push
cmc
mov
les
lret
insb
es
repz
cltd
pop
jbe
mov
jg
lods
cmp
jne
int
adc
and
jnp
mov
repnz
xor
add
add
shr
and
pop
arpl
and
mov
pop
xchg
push
dec
xlat
fldcw
mov
std
adcb
cwtl
xchg
sbbl
mov
pop
push
iret
mov
xor
push
dec
lods
jne
mov
mov
and
push
jne
sbb
mov
pop
dec
pop
movsb
xchg
adc
nop
jmp
loope
jg
ret
xorl
xchg
daa
pop
cmc
push
push
in
jg
int3
jg
fnstenv
mov
ret
adc
dec
add
test
adc
pop
imul
pop
mov
inc
push
call
mov
es
cwtl
lret
fwait
adc
mov
mov
aas
adc
jecxz
divl
xchg
or
xlat
loopne
or
xchg
and
ret
gs
push
repz
jle
push
inc
test
and
iret
leave
xchg
jle
es
push
stos
cmpsl
lds
out
add
lcall
pop
imul
sub
mov
mov
movsb
adc
dec
sub
mov
inc
in
mov
cmp
jle
arpl
jmp
push
and
test
and
je
ror
jo
adcb
mov
mov
loop
add
jns
cmp
daa
and
dec
push
xchg
sub
mov
cmpsb
btsl
xor
xchg
and
imul
xchg
sub
cmpsb
movsb
sub
pusha
jns
fidivs
fldt
leave
ljmp
pop
inc
xchg
cli
pop
adc
lret
mov
jmp
stc
out
pop
cmp
push
mov
and
pushf
popf
push
test
cmp
pop
rorb
rolb
lcall
push
stos
fdivrs
jge
push
movb
inc
popf
inc
mov
les
xorb
int3
jns
outsb
cmp
dec
jnp
dec
mov
lds
test
ljmp
mov
xchg
ds
mov
inc
inc
cmc
das
mov
jno
push
lret
in
movsl
loop
xchg
sub
out
lcall
xchg
lret
sbb
sub
push
or
and
pop
repz
cmpsb
mov
mov
sbb
aad
or
nop
jnp
pop
and
cmpsl
ja
jno
out
sub
pop
ds
inc
jp
sbb
mov
lods
push
icebp
neg
mov
ds
scas
mov
sbb
or
mov
mov
bound
and
js
mov
lods
iret
mov
cmp
or
jbe
pop
int
push
mov
int
sbbb
sbb
popa
insl
rcrb
fistl
scas
outsb
popf
pushl
fwait
or
xchg
xor
mov
xor
mov
xor
dec
into
push
out
movb
cltd
xchg
push
xchg
mov
jnp
cmp
aad
movsl
or
dec
shrl
lret
cli
sbb
xchg
aam
dec
leave
std
xor
pop
mov
fistpl
js
mov
and
lods
inc
sbb
lds
dec
or
cmp
in
ret
push
test
aaa
mov
cmpsb
pop
pushf
fsts
sbb
push
add
in
dec
or
ficompl
fstps
into
push
jns
and
clc
xchg
mov
push
lahf
shlb
pop
pop
sahf
mov
mov
xor
jb
sarb
mov
sbb
movzwl
xchg
and
sub
mov
in
push
out
sub
sub
jecxz
mov
push
pop
iret
ljmp
cli
adc
xlat
mov
aam
push
fimuls
js
repz
out
or
inc
popa
or
stos
xor
subb
add
xchg
jge
pushf
xor
test
divl
icebp
mov
adc
xor
or
xlat
lock
std
xchg
cs
xlat
aas
or
ja
lret
lock
xchg
cld
mov
ds
pushf
xchg
mov
loop
add
fidivs
jle
loopne
fwait
mov
fcoms
aam
mov
add
inc
xor
xchg
rclb
inc
andb
add
mov
dec
arpl
cwtl
insb
lds
das
mov
pop
cwtl
or
jg
xor
mov
mov
jmp
fwait
dec
or
cs
sub
and
sarb
sahf
fisttpll
cmpsl
aam
pavgw
add
or
ret
mov
sbb
push
stos
cmp
pop
cltd
adc
dec
int3
inc
push
add
inc
out
out
inc
cwtl
in
idivl
add
push
jge
xchg
jbe
out
add
in
mov
mov
aas
orb
pop
adc
fldcw
leave
jae
dec
jns
sub
push
rorb
repnz
mov
nop
scas
pusha
add
aas
mov
or
cli
out
cmc
hlt
inc
sarb
decb
hlt
nop
jo
mov
into
push
jno
inc
mov
rorb
jnp
mov
cmp
xchg
out
mov
add
xchg
imul
inc
outsl
test
fstl
out
xor
cld
sub
ret
jg
lock
inc
push
push
jp
out
adc
aas
lcall
shrb
dec
xchg
jo
inc
jmp
and
pop
lock
dec
pop
dec
mov
mov
push
dec
imul
imul
mov
and
ficoml
jle
push
push
jb
pop
ficoms
sbb
jle
fsubrs
test
fsubs
aaa
call
adc
std
mov
mov
or
aas
cmp
push
test
or
pop
icebp
in
push
sbb
mov
stos
inc
lret
fdiv
push
inc
ja
or
mov
addr16
adc
adc
dec
imul
push
xor
fcmovnu
leave
add
test
bound
addr16
lock
cmp
pop
fistps
jmp
or
jp
imull
inc
add
pop
xor
ror
mov
jae
add
push
inc
fidivl
ds
cmc
rcrl
mov
inc
mov
stos
cmp
xchg
mov
pop
sub
xor
in
hlt
imul
ljmp
jmp
mov
cmpsl
push
jnp
sub
jae
insl
in
data16
int3
repz
xchg
dec
jne
dec
enter
lea
push
pop
xor
sub
rcrb
xchg
fistl
dec
jbe
adc
aad
xor
sub
mov
or
ret
mov
loopne
rclb
sbbl
sub
stos
or
and
sub
outsb
sub
push
mov
nop
xchg
clc
jae
je
jmp
in
dec
adc
test
and
lds
rcr
arpl
mov
push
dec
je
aaa
cmc
call
sbbb
mov
add
cli
in
in
xchg
cmp
pop
mov
dec
lods
jmp
jmp
pop
xor
mov
dec
xchg
xchg
xchg
shl
add
and
xor
inc
mov
dec
sub
sbb
push
sub
mov
test
sahf
lret
mov
mov
mov
addr16
sub
imul
aam
pop
insl
clc
andl
mov
lret
mov
in
pop
pushw
mov
add
divb
cmp
and
pop
and
ss
xor
xchg
loopne
in
pushw
sbb
xor
and
andb
imul
pop
fidivs
dec
iret
inc
push
into
sbb
adc
mov
cmp
sub
mov
pop
adc
enter
adc
cmp
push
hlt
inc
cmp
js
insb
lcall
or
fwait
mov
fnstcw
push
jmp
popa
xor
aas
or
pop
jae
pop
jge
imul
lcall
fcomps
pop
cs
fidivs
dec
dec
aas
sbb
ret
xlat
into
jp
lock
aad
cmp
imul
in
jl
jg
mov
lret
ja
sbb
das
dec
mov
xchg
cltd
dec
loop
sarb
aaa
stos
sbb
dec
cmp
sbb
push
pushf
movsb
pusha
inc
jo
dec
in
maskmovq
out
mov
rorb
lahf
stos
adc
ljmp
mov
dec
jl
cs
inc
ret
xchg
test
xchg
xlat
jo
popa
or
daa
fs
xor
mov
adc
jge
ret
arpl
mov
stc
lret
sbb
je
insb
jnp
cmpsl
add
dec
orb
push
mov
fst
mov
add
dec
cmp
pushl
jge
mov
outsb
cmp
pop
into
sub
in
add
or
outsb
xor
dec
stos
cltd
cs
addr16
repnz
gs
mov
xchg
insb
and
mov
add
sti
add
subb
insl
jecxz
addr16
xor
cmpl
xchg
in
and
jne
xor
xchg
data16
out
pop
pushf
pop
pop
dec
mov
dec
pop
mov
outsl
mov
mov
jne
inc
into
cmc
cmp
jp
fistpll
shlb
jecxz
mov
or
in
lahf
push
xchg
xchg
mov
stos
push
fstp
scas
movsl
mov
add
sub
popa
out
push
fists
idivb
adc
jo
incl
adc
fisttpl
mov
das
jg
add
out
push
fisubrs
cmp
push
fistpll
mov
xchg
xchg
das
shlb
jl
out
mov
xor
jno
mov
push
cmc
mov
fstpl
sub
pop
mov
sahf
and
insb
imul
sbb
in
mov
adc
hlt
sub
add
insb
les
aaa
pop
inc
lahf
cmp
dec
movsl
xchg
icebp
jno
xchg
fildl
xlat
push
lcall
or
shl
decl
push
rorl
movsl
xor
enter
dec
fcomp
imul
loopne
push
jle
dec
dec
mov
adc
cmp
jns
push
jno
ret
jnp
jmp
jae
jb
inc
sbb
jno
jge
dec
and
andb
scas
and
cmp
xchg
push
dec
pop
insb
adc
int3
xlat
pop
aaa
mov
jmp
xor
adc
jnp
mov
enter
and
sub
fst
mov
xchg
mov
jae
outsb
sbb
push
sbb
and
mov
jge
jae
scas
popf
add
sbb
and
xchg
scas
dec
ffree
mov
mov
movsb
std
pusha
mov
and
sub
leave
inc
in
pop
xor
cltd
rolb
fidivs
iret
popa
sub
push
mov
dec
es
jmp
scas
push
push
dec
or
dec
dec
dec
inc
incb
mov
sbb
fs
inc
enter
dec
imul
fcom
xchg
inc
rolb
push
dec
jge
cmp
pop
incl
das
test
adcl
cmpb
pop
cmpsb
nop
lcall
jbe
lahf
inc
and
cltd
hlt
testl
sbb
pushf
jb
lods
jnp
sub
jnp
repnz
repz
call
lret
xor
std
popa
je
dec
push
ret
ret
popa
mov
pop
mov
cli
bnd
lea
lods
xchg
mov
dec
scas
adc
pop
decl
cmp
mov
xchg
insl
push
mov
push
cmp
mov
push
dec
jae
cmp
xor
rcll
jmp
lods
mov
add
insb
in
bound
out
xor
movsl
push
loop
mov
dec
arpl
mov
xchg
and
push
push
push
je
jnp
das
push
push
aam
xor
sub
ja
icebp
stc
pop
mov
dec
xchg
push
jp
test
jp
xchg
in
jns
dec
imul
loop
add
pop
sub
pop
pushf
shll
out
mov
in
mov
decb
and
push
je
xor
or
sti
leave
rorl
ja
movsl
mov
pushf
xor
int3
das
push
sub
stos
ljmp
add
int
lcall
add
pop
jo
mov
js
push
mov
decl
out
push
and
cmp
iret
stc
cmc
mov
mov
stos
out
repnz
js
adc
jmp
loopne
ret
and
int3
sbb
jp
out
cmpsl
add
push
imul
fcomps
pop
fmull
mov
scas
in
xbegin
jmp
sti
das
dec
pop
pop
mov
jecxz
pop
enter
imulb
mov
jae
lock
test
stos
rolb
add
out
pop
and
mov
push
mov
loopne
jl
or
test
sub
sti
add
and
dec
pop
outsb
adc
mov
in
flds
xchg
jge
sbb
cmc
mov
adc
cmp
popa
push
jp
pusha
mov
pop
mov
daa
jb
add
xlat
sarb
add
push
pop
enter
mov
shlb
jnp
popa
dec
pop
cli
xor
mov
push
pushf
push
lret
inc
inc
cld
mov
xor
out
lds
fiaddl
stc
pop
mov
inc
pusha
mov
add
ret
dec
nop
pop
rol
xchg
sbb
movsl
test
scas
pusha
or
jmp
mov
int3
xchg
test
jnp
das
lahf
and
pop
lret
mov
loope
out
mov
ds
jne
cmp
int
cmp
push
not
xor
aaa
lcall
sbb
fwait
lods
movsb
aam
push
mov
push
adc
stos
aam
mov
xchg
test
dec
daa
insb
addb
dec
fs
test
inc
mov
sub
rcr
mov
mov
bound
rolb
inc
dec
xchg
shlb
xor
mov
ja
fsubrs
cmp
je
xchg
jno
jl
lods
inc
push
cmp
cmpsb
jne
push
inc
pop
daa
outsb
dec
test
aam
shlb
and
adc
dec
aad
cmp
leave
inc
andb
xor
imul
stc
cltd
ret
xlat
mov
call
mov
je
sbb
repz
cmp
or
or
cmp
in
xor
divb
xlat
out
test
jns
cs
call
or
sbb
dec
push
add
imul
lcall
add
sub
imul
testb
je
mov
in
lods
mov
into
sbb
mov
cli
lock
scas
pusha
adc
mov
decb
cmp
xchg
es
inc
jns
cld
in
std
sbb
stos
sbb
fidivs
cmp
and
fldlg2
scas
mov
stos
lcall
lods
cld
sub
stos
inc
fcompl
insb
out
out
ret
mov
aas
jle
dec
test
adc
test
data16
cwtl
dec
pop
fldl
mov
es
cs
xchg
repnz
inc
mov
inc
adc
das
or
inc
mov
jnp
in
movsl
mov
mov
mov
shlb
sahf
loop
inc
mov
fwait
mov
dec
dec
push
sub
clc
cmpsb
fs
cmp
enter
adc
aad
mov
imul
xchg
fimuls
fcmovnu
fsubrs
mov
call
jno
fbstp
loope
pop
adc
into
or
push
cmp
xchg
popa
das
fadds
repnz
cli
cmp
fidivl
icebp
aam
cmp
dec
cmp
inc
cmp
xchg
pop
in
xlat
or
adc
out
sbb
push
ss
aam
sbb
shr
pop
daa
add
cmp
pand
sbb
fdivrl
je
jmp
lahf
mov
shlb
insl
insl
xor
xchg
mov
mov
mov
rorl
mov
loopne
insb
clc
rolb
out
sub
subb
sbbl
mov
aad
sub
lods
icebp
push
jge
filds
clc
lods
push
imul
insb
push
jge
push
clc
inc
xor
popa
and
mov
popa
push
mov
xor
popf
movsb
icebp
lahf
ficoms
leave
mov
add
and
es
push
loop
sbb
adc
in
js
push
mov
dec
bound
or
mov
add
dec
xor
dec
and
jbe
fwait
sahf
mov
mov
mov
add
cmpsb
cltd
and
mov
push
test
test
mov
daa
pop
pop
mov
dec
hlt
in
fldt
or
dec
aas
clc
mov
inc
lds
insl
sub
fmul
lldt
push
arpl
out
pop
lret
repz
data16
jns
cmp
lock
push
imul
adc
mov
or
in
mov
das
push
xchg
pop
iret
imul
xchg
std
mov
idivl
testl
lret
fldenv
lret
scas
negb
jno
inc
xchg
je
push
in
sbb
dec
cmp
sbb
xlat
add
and
cmpsb
aam
sbb
add
ds
out
in
testl
mov
or
outsl
pop
cmp
int3
or
lods
inc
pop
jecxz
jae
rclb
ljmp
push
jae
lods
mov
cwtl
scas
cmp
int
xchg
out
mov
jmp
adc
jns
xchg
or
fidivrl
sbb
lock
mov
jge
cld
sti
inc
enter
add
xor
inc
aas
xchg
imul
test
hlt
push
cmp
push
test
push
push
fwait
xor
cmp
inc
dec
jbe
mov
adc
das
mov
cmp
sub
icebp
xchg
jl
cmpb
push
lret
je
je
in
loop
stc
mov
sub
mov
cmc
and
repz
insb
and
into
xchg
pushf
adc
aad
sbb
pop
mov
data16
xchg
insb
dec
sub
xchg
pop
ja
mov
xor
cmp
sbb
push
push
adc
loop
and
sahf
mov
pushf
sbb
sub
xchg
out
xlat
mov
jns
imul
add
gs
push
add
or
into
dec
mov
insb
cvtps2pi
cli
loope
in
loopne
add
rolb
sub
cltd
lea
sub
or
jl
push
fdivs
add
jmp
jae
sub
out
add
push
add
js
mov
adc
clc
or
lds
lcall
pop
jg
xchg
jb
push
sub
pushf
pop
stos
adcl
mov
stos
dec
mov
mov
adc
enter
or
negl
inc
pop
loop
jmp
dec
fnstenv
cmp
xchg
jl
adc
cs
sub
inc
jns
mov
lret
iret
cli
enter
dec
xor
mov
loopne
cmpsb
jp
inc
out
pop
ljmp
jne
int3
inc
xor
cmp
insl
push
cmp
mov
inc
push
pop
fisubrl
ds
cltd
inc
pushf
out
mov
lds
lahf
mov
outsb
xchg
repz
das
add
test
imul
sarl
dec
iret
lcall
or
jnp
lods
fwait
dec
xor
jge
jns
mov
out
test
fisttpll
insl
test
mov
cmp
xor
jae
mov
rcl
jns
bound
jns
std
in
mov
gs
test
in
fnstenv
inc
mov
test
jl
mov
xor
mov
popa
mov
mov
lahf
push
inc
pop
lcall
push
push
cmp
fistpl
fstl
addb
add
pop
jp
cmp
negb
xchg
xchg
push
bswap
mul
fcom
imull
and
cmp
push
dec
jmp
sub
mov
cmp
mov
adc
dec
inc
xor
mov
pusha
imul
cmp
mov
into
stos
sub
xchg
lds
arpl
push
pusha
xchg
jmp
cs
in
repnz
xor
xchg
bound
jecxz
and
lods
inc
fsub
dec
in
lret
push
mov
stos
adc
jb
dec
and
cmp
inc
loopne
popa
pushf
or
fistl
jle
daa
shll
jae
loope
sarl
push
sbb
es
mov
cs
pop
dec
inc
cmpsl
cmpsb
push
mov
xchg
dec
push
cmpb
xor
xchg
and
sbb
sbbb
iret
or
mov
in
ljmp
mov
out
push
div
popa
inc
leave
stc
fisubl
cmpsb
add
iret
call
sbb
aas
and
jns
jno
outsl
stos
mov
add
loopne
lea
adc
dec
mov
mov
cmpsb
sbb
mov
movsl
aaa
sub
mov
or
jmp
addr16
xchg
test
nop
jp
xchg
mov
and
inc
mov
pusha
mov
dec
push
nop
pop
mov
dec
loope
dec
or
jecxz
test
sahf
cmp
pop
jb
xchg
movsb
inc
icebp
ffreep
mov
mov
pop
adc
pop
pusha
xchg
outsb
adc
idivb
inc
mov
inc
mov
stos
cmp
das
or
mov
xor
mov
shlb
mov
or
cmp
jo
imul
mov
and
cmp
xor
lods
dec
jns
lock
rcrb
into
decb
and
push
inc
xor
test
pop
push
repz
mov
add
sbb
aas
ss
sub
in
ds
addr16
in
stos
or
pop
mov
inc
mov
ficoml
xchg
aas
test
sbb
ja
jnp
shrl
subb
jo
leave
daa
sub
insb
cmp
cmpsl
dec
test
jb
or
out
mov
lahf
mov
pop
decl
adc
loop
repz
inc
into
in
add
clc
adc
cwtl
dec
movsb
mov
xor
rcl
adc
sar
das
mov
xlat
pop
loope
loopne
sti
or
inc
js
notb
cmpsb
inc
icebp
adc
loop
lahf
fwait
pop
or
sbb
leave
push
push
imull
cmpsl
xor
call
sub
insl
adc
sub
and
test
addr16
shr
xchg
or
xor
add
inc
mov
or
jnp
popl
sbb
and
sahf
mov
pop
cmp
es
scas
xchg
jnp
rcll
push
inc
sahf
arpl
mov
scas
cmp
pop
xor
out
pop
orl
mov
sbbl
ja
gs
xchg
inc
test
sub
pop
loope
xchg
pop
and
out
mov
mov
pushf
push
nop
cli
adc
mov
dec
push
aas
xor
sub
sbb
mov
or
push
mov
cmpsl
mov
mov
and
stc
hlt
dec
push
cmc
inc
and
sbb
sbb
outsb
imul
sbb
fsts
sti
cmp
hlt
lods
cld
inc
sbb
dec
ds
cld
leave
mov
cltd
test
cmp
dec
jle
push
or
out
pushf
push
cmc
sub
mov
cmc
pop
aas
dec
adc
movsb
lcall
and
pop
or
lcall
incl
or
xchg
into
xchg
sbb
dec
enter
fisubl
andl
lea
cli
ljmp
xchg
jae
fwait
push
mov
stos
push
clc
out
sub
cltd
dec
frstor
jae
call
aam
lods
in
lret
dec
popa
fnstsw
cs
ldmxcsr
xor
xchg
sbb
inc
and
lods
xchg
dec
aad
out
aas
add
push
outsb
fsts
pushl
mull
cli
fstp
in
pushf
cmp
outsb
ret
les
xchg
jb
lcall
out
push
fdivl
mov
add
lods
arpl
jmp
mov
out
in
sub
inc
popf
xchg
jnp
out
hlt
mov
gs
mov
lret
xchg
cmp
add
pushf
push
jo
xchg
fmull
xchg
ret
mov
insl
scas
jecxz
lds
mov
lret
outsl
pop
and
mov
mov
stc
arpl
outsb
pop
fiadds
mov
jl
inc
sbb
loope
popa
orb
js
hlt
data16
subl
pop
add
dec
call
dec
fs
pop
jb
adcl
sbb
lret
cli
pop
pop
pop
adc
cld
mov
mov
shrl
test
int
xchg
add
inc
cmp
add
mov
popa
jb
or
dec
les
ja
negl
in
iret
pop
lahf
adc
mov
jle
sbbl
ror
and
push
mov
push
xchg
fwait
in
xchg
fwait
outsb
lods
dec
scas
fcoml
mov
xor
dec
add
sub
dec
mov
in
lock
mov
push
stos
mov
dec
pop
das
jmp
dec
cld
in
les
sub
movsl
inc
fstpl
loopne
fsubl
push
sarb
in
adcb
xor
movsb
cmp
movsl
dec
test
mov
jno
or
xorb
xor
mov
nop
add
test
pop
cmp
movsb
push
or
lea
pusha
mov
outsb
jg
xchg
test
ss
sbb
ret
imul
enter
push
inc
ficoml
lock
fidivs
mov
inc
ret
jp
jns
notl
daa
or
mov
cmpsb
mov
loope
rcr
cmp
and
pop
les
repz
call
add
pop
jmp
test
push
clc
mov
adc
inc
lret
adc
dec
das
mov
jo
enter
inc
adcl
popa
or
mov
test
jecxz
stos
cld
jge
dec
or
into
mov
lea
add
sub
and
aad
push
arpl
mov
jne
enter
mov
push
stos
or
inc
and
xchg
sbb
daa
pusha
cltd
sbb
adc
ds
popa
push
sub
xor
outsb
test
jge
xchg
lea
adc
test
mov
push
iret
mov
mov
or
add
andb
stos
cmpsb
cmp
cs
push
lret
dec
leave
add
ret
xor
or
outsl
jl
adc
pop
and
fs
jg
inc
outsb
mov
dec
cli
lock
inc
shl
jmp
mov
xchg
shrb
hlt
push
and
mov
pop
add
std
lcallw
cli
xor
fists
insb
mov
or
dec
ficoms
sbb
push
imulb
inc
test
cwtl
adc
idivb
fsub
mov
int3
push
lods
jo
adc
ss
lret
push
shrl
mov
jl
xchg
pop
mov
or
pop
pop
or
mov
dec
mov
pop
ss
loopne
dec
mov
pop
jmp
xor
scas
shll
pop
lods
repnz
incl
cltd
mov
inc
xchg
mov
iret
lret
outsb
cmpsl
push
shr
insb
popl
push
shlb
push
inc
roll
jbe
xchg
es
lret
enter
or
lds
cmpsb
mov
or
in
test
movsb
inc
mov
rcr
jno
ss
cld
clc
mov
add
test
xchg
xchg
jecxz
fsubrl
xchg
jge
fidivs
mov
lea
mov
jmp
arpl
out
out
cmp
dec
rclb
hlt
dec
push
enter
cld
pop
dec
adc
ss
fsubrs
pop
add
subb
rorb
out
add
ret
shl
mov
pop
jbe
mov
mov
cmp
xchg
push
aas
xlat
mov
xchg
push
adc
sbb
xorl
in
inc
cmp
mov
fwait
sbb
xor
jge
jmp
xchg
jl
mov
xchg
lock
add
lret
dec
outsb
cmp
addr16
inc
bound
jnp
out
mov
lcall
in
ljmp
xchg
into
xchg
iret
dec
push
popf
xchg
fsubrl
scas
mov
mov
push
notl
push
cmpsl
shlb
mov
mov
lret
cmpsb
pop
mov
xor
int
fadds
jo
aam
jecxz
mov
shll
mov
fsubrs
inc
dec
xor
addr16
sahf
rcll
pusha
dec
sbb
daa
mov
pop
in
icebp
add
mov
dec
popa
push
sbb
jae
sbb
movsl
rorl
iret
in
cmpsb
sbb
mov
icebp
cmpsb
aam
jp
fcomip
outsl
mov
out
sbbl
push
xor
outsl
rorl
out
out
movsl
fiadds
shr
daa
xchg
out
out
adc
jnp
test
mov
lods
movsb
iret
imul
jg
mov
inc
sbb
jge
xor
stc
fs
or
std
jge
data16
xchg
mulb
sub
add
fiadds
je
stos
mov
stos
jae
jge
sbb
nop
gs
xlat
push
adc
inc
ror
mov
sbb
fadd
imul
inc
push
inc
cmp
faddl
mov
cmp
add
and
cmpsl
scas
push
sahf
add
dec
in
inc
insb
push
les
dec
pop
jo
pop
push
dec
mull
push
sub
add
rol
fs
mov
pop
inc
sar
jecxz
xor
arpl
jge
xchg
cmc
fldt
xchg
xor
fwait
or
ljmp
fnstenv
lcall
sbb
nop
mov
dec
sub
std
jle
add
cli
mov
stos
jg
adc
in
or
and
shll
call
push
stos
es
hlt
mov
mov
popf
rcll
int3
sub
stos
push
mov
dec
or
jne
and
sub
imul
push
imulb
shlb
pop
adc
in
jecxz
mov
mov
mov
xor
inc
jge
jl
pop
mov
or
xlat
sti
out
sub
aaa
ss
mov
pushf
inc
or
or
adc
inc
ss
iret
fucom
add
fisttpll
out
test
mov
push
cli
lret
mov
mov
adc
lea
xchg
cmovo
int
pop
mov
add
leave
fisubs
jae
cmp
test
pop
pop
fnstcw
out
jecxz
gs
xchg
test
push
mov
cmpsl
dec
push
dec
pop
pop
adc
into
jnp
mov
mov
and
das
mov
mov
xorb
add
and
push
cltd
idiv
fstpt
shlb
cwtl
in
movb
jg
or
sub
fistpl
mov
pop
pop
adcb
mov
push
scas
or
or
fcomps
cmc
int
push
mov
fnstenv
fisttpl
fmull
fdivr
mov
roll
aam
add
jno
sub
fadd
out
sub
in
sti
jbe
pop
stos
sahf
sub
mov
repz
repz
pop
inc
in
sti
icebp
jge
xor
into
and
cmp
in
sti
mov
mov
lock
and
mov
adc
pop
jp
lcall
or
out
cs
ficomps
jbe
roll
loop
les
fyl2x
pop
xchg
adc
sti
xor
movb
das
orb
add
ret
inc
mov
gs
push
push
inc
inc
icebp
pop
push
sti
out
ljmp
jns
sarb
dec
mov
mov
mov
add
in
adc
hlt
mov
mov
sbb
ljmp
and
pop
loop
mov
xor
lahf
cmp
inc
in
xchg
cmp
je
dec
fs
sbb
nop
out
nop
sahf
test
hlt
fs
or
sbb
shl
andl
enter
inc
xchg
shl
mov
xchg
loop
int
xor
into
cmp
das
inc
pop
sbb
and
jge
cltd
sbb
aam
js
aad
push
je
push
mov
sbb
repnz
sub
xchg
aam
and
aas
mov
addl
xor
mov
sti
mov
sarb
sbb
test
pop
cli
shlb
dec
nop
or
inc
inc
and
xchg
xor
inc
dec
inc
pop
mov
mov
lock
dec
cmp
or
adc
or
or
jno
mov
or
push
sbb
int
enter
hlt
mov
insl
fldt
xor
les
in
clc
repnz
ror
jp
insb
adc
mov
lods
mov
in
stc
lock
iret
sbb
jb
cli
mov
popf
pop
inc
shll
jg
stc
dec
sti
aam
ret
mov
xchg
push
mov
call
xor
js
or
cltd
ss
xchg
adc
xor
pop
loopne
arpl
push
push
inc
pop
dec
je
test
or
push
pop
push
push
icebp
inc
shl
xchg
mov
sbb
aad
gs
add
dec
test
scas
enter
rol
add
nop
insb
xchg
loopne
outsl
and
cmp
dec
xor
and
jmp
stos
lea
push
xor
dec
mov
xor
stos
lcall
jmp
sub
shl
stos
out
test
pop
pop
mov
sti
fcoml
jnp
sub
scas
out
movsb
dec
pop
in
in
mov
jns
fcoml
xchg
xchg
mov
clc
aad
punpckhbw
dec
xor
lahf
jnp
int3
push
cmpsb
cmc
adc
inc
js
adc
and
scas
mov
mov
pop
popa
xchg
lret
xchg
cmp
fnsave
movsb
lds
mov
fidivl
aas
daa
sub
loopne
insb
push
loop
out
and
sti
iret
mov
aad
sub
pop
jb
fisubrl
jecxz
mov
sbb
pop
and
lods
pop
mov
aaa
imul
call
jle
push
in
jbe
pop
xchg
jmp
xor
insb
lds
addr16
fcomps
push
jbe
pop
mov
fsub
scas
push
and
ret
adc
inc
push
and
mov
cmpsl
out
push
gs
sub
ret
push
lahf
mov
sti
jl
sub
cmpsl
popa
mov
dec
mov
es
movsb
popf
mov
ret
lock
cmc
test
adc
stos
and
jno
ja
xchg
add
dec
jge
sub
adc
xor
mov
mov
es
ret
pop
imul
out
xchg
cmp
outsb
adc
jbe
push
shr
xchg
cmp
imul
test
push
ljmp
movsl
jecxz
test
mov
negb
sub
add
mov
test
and
jg
int3
aad
loope
insb
std
stos
cmp
ds
lock
sbb
popa
sub
lea
jg
mov
in
lret
out
adc
insl
repz
enter
cmp
call
mov
xchg
insb
jge
sub
mov
sbb
adc
cli
or
in
gs
add
mov
pop
mov
jl
cmc
inc
sub
pop
out
js
mov
aam
cmp
xchg
js
idivb
cmp
jno
sbb
ljmp
sub
call
add
rep
and
das
dec
stc
imul
jge
or
in
mov
adc
jmp
imul
jb
lret
mov
fstp
mov
popf
pusha
js
mov
or
mov
call
pop
mov
stc
cmpsl
mov
jne
adc
add
jae
sti
or
jbe
push
sbb
jno
mov
add
mov
lock
adcb
lea
mov
leave
mov
pop
cmp
cmp
jge
jecxz
xchg
xchg
mov
jne
mov
pop
pop
cmp
bound
flds
call
inc
pop
jnp
cmp
sub
and
aas
cmp
cmp
inc
adcb
imul
pusha
out
pushf
pusha
icebp
insl
test
stos
mov
ja
pop
inc
push
mov
pop
pop
call
std
jmp
std
fstps
rcrb
mov
sub
jg
das
cmp
sbb
cld
sbb
push
xor
jbe
shlb
jp
shr
das
repnz
out
inc
in
or
xchg
push
adc
bound
pop
fisubl
dec
push
push
mov
mov
push
jmp
or
push
cmc
in
adc
dec
sbb
cltd
inc
lods
js
pop
lret
dec
lret
push
mov
ret
xor
mov
push
test
fimull
jl
mov
test
in
stos
dec
jge
repz
pop
xchg
in
xchg
and
jg
push
jl
loopne
movsb
mov
add
int3
jmp
pushf
mov
push
pushf
mov
adc
jb
mov
xor
lret
jp
xor
jge
xchg
nop
mov
dec
xorl
popf
sub
push
ja
jo
inc
lcall
or
hlt
pusha
xor
or
mov
ljmp
dec
pop
or
jbe
mov
push
es
cmpsl
and
jmp
mov
jno,pt
dec
cld
mov
pushf
aad
dec
pop
mov
xor
int
imul
mov
add
pop
adc
push
sarl
lret
jns
scas
adc
and
push
and
mov
pop
fld1
jge
adc
lret
outsb
les
mov
mov
dec
push
lock
stos
movsb
movsl
cmpsl
ret
push
out
imul
push
imul
and
in
enter
in
pop
mov
dec
dec
cmp
push
add
loope
inc
adc
stos
push
xchg
xor
movsbl
gs
dec
in
mov
pushf
xchg
iret
xchg
int
fdivrs
cs
inc
inc
clc
leave
mov
loope
fisubs
test
mov
cmp
cmp
inc
subl
js
sbbl
iret
shll
xor
jb
repz
xor
stc
cld
mov
test
pop
lds
out
add
ret
aad
push
xorb
add
mov
pop
ss
lret
xchg
or
jle
pop
xchg
cmp
xchg
adcl
aam
sbb
les
sbb
and
jg
aad
inc
clc
push
jb
fmull
icebp
out
push
xchg
jge
outsb
mov
mov
jge
cmp
adc
mov
push
push
addr16
sti
rcl
xchg
dec
mov
mov
cmpsl
imul
loope
fiadds
sarl
cmp
mov
adc
andb
jo
insb
stos
les
pop
push
mov
repz
cltd
je
fadd
clc
notl
mov
outsl
popf
int
xor
aas
out
lcall
lret
adc
arpl
xchg
repnz
in
mov
and
or
shll
scas
icebp
dec
xchg
subl
mov
mov
inc
insl
add
out
insb
pop
pop
scas
push
sbb
jne
loope
aaa
fimull
test
push
sbb
mov
push
push
fwait
subb
jo
dec
flds
fcmovnb
push
or
loope
xchg
icebp
mov
jmp
mov
xchg
push
int3
cmpl
push
dec
inc
cmpsl
insb
stos
jmp
add
push
movsl
mov
xor
mov
stos
repz
pop
mov
sub
xchg
insb
or
push
fldt
dec
push
mov
ljmp
fucomp
mov
push
pop
sub
aam
movsl
cmpsl
jl
push
mov
xchg
cmpsb
sub
outsl
mov
inc
sub
ret
iret
xor
and
leave
imul
ds
xchg
lock
add
jo
dec
icebp
pop
sub
pop
xchg
icebp
xchg
push
lds
xchg
subl
mov
stc
dec
out
inc
sti
cmp
dec
ss
sub
rol
int3
lret
push
flds
and
mov
jl
mov
fstl
cmp
insb
out
mov
jmp
shll
outsl
mov
fldt
mov
xor
ret
jmp
adc
sbb
add
add
lret
sub
jae
mov
icebp
push
dec
int3
sub
push
xchg
sub
dec
mov
push
repnz
push
xor
fwait
hlt
jle
mov
cmpsl
xchg
loopne
jne
push
loop
mov
or
jnp
popa
sub
adc
cmp
fidivl
arpl
or
or
mov
adc
out
xchg
jge
xchg
outsl
popf
aad
out
jg
mov
pop
aas
shll
mov
inc
rcr
cmp
inc
mov
pop
pop
push
ds
leave
sbb
lds
pop
dec
inc
ret
jl
loopne
push
test
js
addr16
xor
jle
inc
and
pusha
rcrl
xchg
inc
add
pop
js
dec
pop
push
hlt
in
movsb
push
mov
push
mov
cmp
repnz
sub
mov
daa
int3
mull
dec
addr16
arpl
ds
mov
cmp
popa
pop
nop
cmpsb
jmp
gs
cld
popa
jl
jae
mov
jmp
dec
daa
daa
in
sbb
inc
cmp
push
pop
bound
adc
lret
mov
mov
shlb
mov
push
rcrb
push
imul
mov
pop
sbb
aaa
mov
sbb
cmp
imul
pop
add
outsl
xor
pop
jo
lods
and
fsts
push
mov
mov
leave
push
loope
inc
adc
shrl
es
loope
inc
fdivrl
fadds
sbb
sbbb
or
sub
and
xor
jns
loop
cs
data16
and
call
scas
add
mov
adc
cltd
xchg
faddl
xchg
ss
jp
stc
mov
push
outsb
mov
dec
and
adc
pop
ficompl
stos
dec
cmp
lret
adc
jle
adc
xchg
xor
rolb
inc
fsubr
pop
nop
push
test
jle
pop
cmp
cmpb
subb
aam
jbe
lea
lret
stc
jge
mov
inc
mov
cmp
add
mov
mov
psubq
pop
pop
out
sbb
push
pop
xchg
sub
in
out
es
loopne
lods
loopne
loop
mov
test
pop
push
pop
xor
sub
aam
push
mov
dec
adc
push
mov
sub
sbb
add
out
in
push
test
in
pop
add
fisttps
cmp
push
adc
lods
mov
fwait
cmp
cmp
dec
mov
or
xor
and
mov
mov
jo
jne
pop
lcall
pusha
movsl
mov
add
je
and
ja
mov
push
push
xlat
push
sbb
cmp
and
cmpsb
out
shlb
push
mov
or
outsl
ja
push
out
hlt
adc
insl
mov
jge
inc
push
xor
lds
sahf
mov
cmpsb
push
fisubrl
jae
int
lcall
lahf
mov
or
mov
and
call
into
stc
lret
inc
aam
adc
dec
cmc
mov
cltd
dec
sbb
imul
xchg
in
xor
or
xchg
add
xor
daa
loopne
and
ss
jns
mov
adcl
xchg
mul
popf
loopne
or
pop
cmpsl
idivb
inc
dec
or
loop
arpl
dec
icebp
cltd
push
jge
repz
or
lods
shrb
sub
or
mov
dec
sub
into
mov
xor
clc
pop
pop
pop
add
aaa
fidivrl
xchg
mov
and
dec
movsl
jo
adc
jbe
dec
fsubl
pop
shll
push
cmp
cs
je
push
mov
cmp
arpl
stos
test
mov
mov
xchg
insb
mov
jns
clc
in
divl
shrb
push
insb
jno
jmp
je
ret
shrb
xor
pop
jmp
shrb
push
jle
lea
imul
sbb
xchg
lds
adc
dec
sbb
xchg
sub
inc
adcb
cmpsb
or
pavgb
mov
dec
jg
sbb
clc
sbb
addl
subw
dec
mov
mov
sahf
xor
xorl
and
inc
push
inc
xlat
gs
iret
adc
and
in
jns
adc
add
pushf
mov
sub
push
cmp
popf
or
mov
mov
or
pushf
enter
or
ds
mov
jg
std
mov
mov
xchg
popa
test
arpl
fcoms
adc
xor
xor
add
xor
mov
repz
into
test
shl
les
lcall
daa
push
mov
dec
pop
in
pop
andb
and
test
sub
aaa
fiaddl
arpl
rcll
mov
adc
loop
mov
dec
mov
iret
aam
inc
test
fmuls
or
mov
sub
or
sub
xchg
mov
mov
jb
or
pushf
or
flds
xchg
mov
sub
adc
fwait
ret
setae
or
jecxz
xchg
push
lahf
sti
sbb
xchg
je
jnp
jl
dec
jecxz,pn
pop
cwtl
pmullw
movsl
lods
or
add
stos
inc
repz
das
mov
xor
les
push
jbe
pop
mov
lods
rorb
pop
fdivp
fistpll
lea
and
adc
loopne
icebp
into
dec
aam
sbb
jb
punpckhwd
pushf
xchg
and
xchg
scas
sub
fnstenv
clc
push
rcr
aaa
mulb
xchg
xchg
cmpb
arpl
xchg
movsb
cmp
inc
out
in
sub
xchg
adc
je
mov
jecxz
ficoms
adc
nop
outsb
aam
pop
sub
pop
jecxz
lret
data16
push
or
aas
add
mov
add
jns
idiv
int
and
mov
jne
jne
dec
lods
push
xchg
sbb
pop
movsl
and
jg
les
rorb
pop
xor
pop
mov
sbb
mov
pop
pop
int3
sbb
inc
inc
rcll
mov
inc
movsl
fwait
daa
mov
cmp
fistps
xchg
stos
jp
mov
xchg
xchg
cltd
pop
pop
mov
stos
mov
inc
jbe
xchg
scas
out
fistl
add
push
lret
ret
aas
pop
fwait
add
into
add
pop
cli
sub
cmp
leave
mov
cmp
inc
mov
nop
cmp
pop
xor
stos
dec
icebp
xor
cli
js
pop
add
jno
push
fnstsw
cli
cs
add
pop
ss
jecxz
sub
mov
or
jno
loopne
jp
mov
lock
sub
xchg
fiaddl
mov
pushf
sub
repnz
or
dec
xchg
aad
js
mov
mov
cs
in
int
sbb
adc
clc
ds
pop
sub
xor
scas
mov
outsb
cmp
insl
inc
pop
sbb
push
sar
jbe
adc
dec
fcmovnbe
mov
jo
mov
mov
jle
mov
inc
cwtl
je
sbb
out
adc
insl
sub
call
inc
loope
pop
shll
lds
cmc
repz
pushf
push
ljmp
cmpsb
mov
or
xor
out
jg
mov
pop
cmp
cmc
pop
or
push
sbb
adc
lds
movsb
jnp
mov
popl
movsb
push
out
add
xchg
xchg
adc
sbb
out
dec
imul
out
dec
pop
movsl
movsb
jo
cmpsb
scas
js
movsl
mov
stos
out
sbb
pushf
push
aas
add
mov
sbb
icebp
movsb
pushf
xchg
test
ljmp
daa
adc
loopne
es
rorl
and
lret
nop
shll
movsb
lcall
xchg
ljmp
pop
insl
sbb
push
sahf
cmpb
push
adc
daa
and
pop
in
adc
xor
popa
fisttpl
and
popf
test
popf
inc
lods
adc
stos
dec
pop
dec
xchg
xor
inc
sub
ja
push
nop
cld
cmp
xchg
testb
and
ret
rcr
fnstcw
cmp
in
loopne
or
pop
dec
in
sarb
stos
jbe
inc
loop
push
pop
adc
mov
adc
ss
insl
arpl
push
call
aas
add
and
adc
cld
sti
movsb
popf
movb
sub
sbb
fldenv
sahf
fldl2t
xor
jecxz
fisttps
add
stos
pushf
loop
jecxz
lcall
out
pop
pop
and
clc
js
int
dec
add
daa
in
shrb
xchg
fisubl
inc
jns
push
lds
jg
mov
or
mov
jmp
dec
xor
test
mov
xchg
push
sub
xor
iret
fdivrp
sti
ss
inc
push
popa
and
mov
mov
push
mov
cmp
mov
in
out
sbb
test
rol
jp
pusha
mov
lcall
push
xor
hlt
sti
jecxz
adc
icebp
fistl
sub
push
fs
scas
dec
ds
xchg
aas
psubusb
fdivrs
sbb
cmc
mov
push
jb
and
aad
fnstsw
add
mov
stos
pop
in
fdivl
loope
pop
push
roll
jne
dec
les
clc
xchg
pop
addr16
mov
jae
xchg
push
les
addr16
dec
push
sbb
xor
pop
push
xchg
inc
jae
aaa
dec
pop
or
lods
add
push
xchg
lcall
les
js
push
cwtl
xchg
and
test
clc
repz
add
mov
enter
push
imul
push
test
mov
inc
insb
pushf
lret
cli
mov
in
fwait
mov
inc
enter
sbb
xor
pop
xchg
scas
rcll
or
fsubl
xlat
mov
imul
push
jge
xor
stc
pop
lods
repz
mov
shl
mov
cmp
into
imul
fcompl
jle
mov
std
push
fisttps
mov
stc
add
dec
xchg
pop
lret
daa
jecxz
sarb
ds
arpl
cwtl
adc
lcall
lock
scas
scas
loope
lods
hlt
sub
adc
and
icebp
sub
dec
insl
aaa
cltd
mov
fcmovnu
fdivs
ja
pop
add
shl
sub
sbb
enter
jge
pop
sbb
gs
popf
xchg
or
sbb
fcoml
sbb
arpl
jp
fisttpll
fwait
out
clc
push
repnz
cwtl
das
xchg
cmp
sti
and
pop
mov
sub
dec
imul
hlt
mov
in
movsl
inc
scas
in
adc
aaa
cmp
pop
cmovle
pop
outsl
dec
int3
and
push
das
mov
call
test
iret
mov
lods
aas
movsl
fists
or
pop
jecxz
inc
jle
adcl
shrl
mov
mov
sub
insb
sbb
sub
cs
mov
test
es
jmp
xchg
test
jae
inc
cmp
aaa
inc
incb
jb
pop
rcrl
dec
aam
pop
jb
inc
imul
daa
mov
or
fldl
repnz
cmpsl
cld
adc
sub
in
sub
push
inc
in
push
jp
jbe
inc
imul
jnp
mov
lods
lea
and
xchg
fldenv
lcall
call
fstps
mov
jo
test
dec
daa
and
or
jp
jp
inc
and
xchg
fs
cltd
jge
mov
fists
shlb
ret
imul
repnz
orb
push
movsb
xor
addr16
mov
es
xchg
push
sarb
mov
mov
jnp
push
sub
movsl
sahf
mov
std
jne
inc
insl
pop
mov
in
jae
dec
inc
fists
cmp
sub
mov
sahf
bound
daa
mov
test
les
adc
aad
lcall
test
jecxz
subl
push
out
or
aaa
jb
movsb
push
pushf
adc
inc
ret
out
cli
out
sub
loop
mov
popf
call
jo
or
test
inc
bound
inc
subl
push
inc
cmpsl
arpl
sub
inc
xchg
clc
std
mov
and
sbb
sbb
into
inc
inc
ret
cltd
inc
dec
gs
fwait
lock
push
adc
les
xor
mov
fldl
pop
xor
jns
jb
mov
in
add
fsubrp
test
mov
jns
shrb
lret
cs
scas
fs
xor
mov
cmp
ror
sub
subb
push
cmp
outsl
aaa
lcall
popf
mov
or
mov
ret
lea
sar
jnp
push
subb
adc
fcoms
sahf
jl
add
xor
add
imulb
ss
mov
xor
pop
aas
and
neg
sahf
push
jne
mov
das
inc
mov
pop
sub
mov
out
into
inc
cli
out
push
cmp
xchg
js
jg
pop
movsl
jo
pop
movsl
loop
jns
sarl
insl
insb
xorb
js
lea
pop
xor
add
cmp
sti
insb
pop
or
dec
and
inc
adc
aas
pop
lock
push
sub
sub
inc
lea
test
pop
ds
in
ret
and
in
inc
jbe
cmp
fcomps
arpl
notrack
pop
aas
adc
mov
jmp
inc
dec
dec
insb
ret
push
movsl
jge
leave
loopne
lcall
into
adc
or
sti
test
sub
lds
clc
lret
mov
push
push
insb
lret
dec
lea
ret
jp
ret
rcr
fdiv
outsl
cli
xor
or
icebp
and
or
cmp
add
test
or
test
adc
outsb
jbe
xchg
int3
outsl
push
fidivrs
out
add
adc
add
imul
sbb
mov
clc
popa
mov
pop
and
mov
pop
outsb
cmp
mov
les
imul
fwait
xchg
mov
jmp
sub
lock
shrl
mov
inc
out
dec
dec
mov
leave
fildll
mov
mov
inc
out
mov
aas
or
fsubl
or
jge
loopne
mov
jmp
insl
and
inc
lcall
ja
sub
adc
add
imul
loop
movsb
outsb
test
xchg
test
lea
in
imul
dec
push
jb
xchg
pop
mov
in
jge
or
mov
cmp
movsb
leave
mov
mov
loope
mov
jae
js
out
xchg
fidivrs
bnd
mov
or
mov
fwait
imul
int3
xor
call
xor
ret
xchg
sar
loopne
lret
push
or
sub
dec
dec
adc
insl
ficoml
push
mov
push
mov
cmpsb
lret
jno
push
lcall
repnz
sbb
mov
add
adc
xadd
jns
pop
icebp
out
or
lock
das
sarb
fmuls
jo
bound
adc
xchg
pushf
xor
lahf
push
push
cltd
and
bound
scas
dec
dec
jp
fs
into
xchg
add
sbb
std
sbb
mov
mov
test
icebp
daa
xchg
mov
cmc
lods
xor
xchg
cmp
xchg
cld
xlat
rolb
imul
lods
cmp
out
fs
jge
mov
cmp
mov
inc
cli
and
push
sub
jo
cmp
mov
rcr
insl
mov
int
cmp
int3
test
fimuls
cltd
int
shrl
sbb
inc
in
jecxz
loop
aas
xchg
pop
or
lret
dec
xor
jle
packssdw
inc
jl
test
xorb
pop
rolb
fwait
jle
mov
lret
test
inc
shlb
or
dec
mov
pop
push
insl
inc
cmp
outsb
mov
cmc
test
shll
push
orb
or
and
dec
imul
mov
xor
mov
inc
clc
sbb
outsb
mov
gs
ds
ret
decb
jmp
push
icebp
inc
pop
pop
int
sub
in
pop
and
int3
mov
mulb
jmp
sbb
push
out
mov
hlt
loopne
lahf
fidivrs
push
sbb
push
stos
data16
int3
fsts
mov
and
divb
xchg
nop
push
cltd
ja
lcall
mov
mov
loopne
pop
adcl
insb
jne
mov
xchg
jecxz
lods
call
sbb
fiaddl
inc
orl
push
in
jecxz
pop
cld
fdivrp
dec
fisubs
jecxz
and
xchg
mov
mov
xor
adc
sbb
add
sub
adc
sarb
test
paddb
jle
pop
push
push
mov
or
push
xor
test
pop
xchg
sbb
out
lahf
mov
sub
aaa
lods
out
xor
cs
jp
or
stos
or
and
leave
inc
adc
leave
ret
sbb
push
pop
xchg
les
pushf
js
rol
mov
fsubs
sub
jg
mov
dec
jno
xor
les
out
dec
cmp
leave
imul
dec
inc
xor
xor
jns
jge
push
js
popf
push
and
nop
sub
lahf
mov
fldcw
mov
rcrl
cmpsl
repz
ror
sub
das
pop
jnp
sbb
popa
ficomps
inc
pop
and
into
repz
sub
xchg
lea
mov
mov
dec
and
and
mov
jns
xchg
lcall
leave
ret
or
inc
xchg
pop
mov
pop
adc
mov
aaa
repz
sbb
adc
fdivs
stc
loop
cs
inc
shll
pop
push
shll
cltd
aaa
cmpsb
pusha
push
cld
cmpl
xor
inc
adc
out
add
push
repnz
adc
sbb
and
bound
popf
mov
and
cli
movsl
arpl
ljmp
mov
inc
add
jp
dec
mov
jno
inc
jl
push
jne
pop
inc
insl
jne
sub
xchg
sbb
add
es
jns
or
push
mov
dec
cmp
hlt
leave
sbb
and
addr16
mov
push
in
jne
rorl
and
shlb
test
fsubr
stc
imul
imul
dec
insb
pop
xchg
sub
faddl
xchg
jge
fdivrs
mov
fnstenv
sub
push
ret
test
inc
pusha
hlt
xor
lret
mov
stos
insb
std
or
insb
xor
out
les
mov
sbb
stc
pop
jb
addb
aas
leave
cltd
in
cmp
lcall
or
rolb
add
add
pop
addr16
pop
insb
clc
jg
cmp
mov
cltd
popa
or
push
adc
and
mov
add
jb
in
leave
sti
xchg
shl
mov
jp
xchg
pop
xchg
cmc
lcall
xor
sub
shrl
pop
mov
fists
sarl
dec
test
jnp
push
xchg
pop
das
aaa
cmp
or
cmp
out
aam
in
sbb
das
lcall
mov
rolb
add
push
repz
xchg
dec
push
dec
jmp
jns
add
mov
jo
cmp
popf
in
out
xchg
jg
adc
inc
push
dec
lods
cmp
mov
mov
push
test
inc
xor
repz
cmpsb
outsb
arpl
in
sbb
jg
push
cmpsl
mov
cld
sbb
das
cmp
into
movsb
outsb
mov
outsb
lret
cmc
addr16
fistps
mov
sub
cmpxchg
add
push
outsl
loop
inc
shll
mov
ja,pt
outsl
adc
pop
movsl
rcl
sbb
mov
hlt
mul
mov
dec
xor
dec
mov
mov
mov
rep
inc
test
clc
mov
sbb
adc
sbb
sbb
lret
sbbl
cmp
mov
cmp
lods
add
lods
bound
in
lea
dec
es
pusha
arpl
test
cltd
cmpsb
mov
in
add
in
cld
rorb
cmp
adc
lods
adc
dec
in
mov
fimuls
inc
clc
rorb
in
xchg
ficoms
mov
inc
sub
cwtl
xor
imul
adc
aad
mov
test
sub
dec
inc
add
fwait
ret
stc
jg
mov
xchg
mov
push
push
or
inc
movb
inc
sbb
into
call
scas
mov
xchg
mov
nop
std
push
aam
sbb
cmp
pop
fsubs
inc
scas
imul
mov
mov
and
xor
out
push
mov
sbb
das
xchg
jo
mov
insl
stos
mov
cmpb
add
stc
lods
add
test
jne
mov
inc
aam
and
rcrb
mov
cmp
clc
lds
loop
mov
adc
icebp
sub
sbb
mov
in
jnp
imul
sbb
fstpl
inc
fstl
std
adc
mov
mov
lahf
or
sbb
adc
das
data16
adc
adc
xlat
mov
lea
hlt
or
jg
lret
in
fisttpll
and
xchg
pop
enter
aam
xchg
xchg
jbe
addr16
cmp
dec
sahf
push
outsl
std
jns
xor
push
sbb
outsl
or
jb
arpl
fistl
test
sbb
in
je
jbe
mov
loop
aaa
fldcw
sub
subl
cmpb
cmpsl
nop
jno
jge
adc
lcall
cs
test
inc
iret
test
pop
inc
pop
jno
lods
jmp
pushf
adc
out
sbb
jmp
ja
test
stos
ss
aas
ds
inc
jbe
sbb
test
mov
out
cs
mov
les
shll
mov
cli
adc
popa
cs
in
dec
jge
adc
xchg
adc
adc
popf
lcall
sbb
fyl2xp1
xor
jge
xor
mov
int
jae
sub
dec
mov
loopne
cmpsb
lods
idivl
and
popf
aam
rcrb
negb
arpl
xchg
push
inc
mov
adc
ss
jbe
dec
out
jno
aam
dec
push
adc
mov
cmp
loopne
fisubs
cmp
push
ret
out
jle
loopne
in
gs
xor
or
xorb
gs
cli
mov
jae
and
sub
or
lcall
ss
aad
pop
movd
mov
js
inc
sub
fbld
sub
push
add
sub
insb
pop
orl
dec
jmp
pop
iret
xor
lret
cmp
push
out
test
dec
cltd
popf
mov
cmp
xor
int3
outsl
shll
imul
les
cmp
mov
xor
lahf
addr16
aas
push
xor
insb
fstpl
out
cmp
and
jecxz
notb
xor
inc
xchg
aaa
daa
push
loope
inc
in
mov
mov
jecxz
ljmp
mov
pushf
or
mov
or
jl
pop
cmp
add
stc
adc
lds
call
lahf
or
xor
xor
pop
inc
insl
push
adc
sbb
jmp
mov
nop
or
xchg
ret
xor
outsl
fisubl
pop
lret
iret
jne
ret
scas
orb
aad
sub
iret
repnz
fidivrs
cmpsl
sti
xchg
cli
in
js
mov
jne
icebp
adc
cmp
leave
stos
leave
mov
sub
mov
cli
leave
imul
popf
fnstsw
and
out
daa
or
lock
pop
in
jbe
xlat
jmp
mov
icebp
dec
pusha
loop
sub
mov
scas
sub
dec
fistl
and
sub
or
fsubrs
mov
inc
pusha
dec
lods
stos
scas
sub
movsb
movsb
mov
lcall
xor
inc
jle
shrb
add
ss
ficomps
mov
sbb
cmpb
stos
pop
and
fwait
es
xlat
aad
bound
into
push
dec
mov
fwait
sbb
int
cs
cmpsb
xchg
in
test
stos
xor
fmuls
or
add
sub
sub
arpl
xchg
ja
push
sub
aam
fbld
hlt
jb
cmp
push
inc
pop
mov
or
insb
and
jb
dec
lahf
lds
cwtl
dec
out
add
or
in
xchg
jle
mov
inc
push
addb
fisttpl
adc
xor
pop
ret
jl
mov
lret
or
xchg
loopne
push
adc
xchg
lods
or
fneni(8087
sbb
sbb
and
addr16
push
cmp
inc
sub
stos
jmp
fmulp
inc
ret
adcl
popa
adc
mov
add
test
aaa
adc
xor
mov
out
add
mov
imul
xchg
sub
sbb
mov
or
mov
and
inc
nop
rol
xor
int3
mov
les
or
aas
mov
stos
lcall
pop
jnp
stos
xor
fcoms
mov
mov
imul
je
imul
imul
stos
iret
sbb
andb
inc
je
ficoms
cmpsb
ss
cmpl
fs
jnp
push
inc
jnp
jne
test
ss
lea
mov
dec
xor
inc
jbe
xchg
int3
ret
subb
cmpsl
addr16
dec
adc
popf
loope
rorl
mov
shrl
pop
jmp
sbb
js
sbb
cmp
mov
mov
lds
push
pop
xchg
xchg
and
sbb
mov
mov
cmpsb
xchg
sub
into
data16
sub
or
jbe
adc
or
jae
mov
in
dec
ljmp
les
mov
stc
dec
and
out
and
mov
cwtl
jne
fcoms
lock
ret
in
mov
inc
loopne
mov
fwait
jbe
and
add
adc
jge
sub
push
jbe
inc
xchg
subb
mov
lds
inc
dec
mov
dec
inc
loope
cmp
subb
fdivr
push
jbe
dec
adc
icebp
sub
pop
mov
adc
xchg
movsl
inc
jl
in
and
jg
mov
xor
mov
int3
roll
dec
jge
nop
mov
push
fidivl
into
cmp
lds
cli
push
imul
lret
dec
popa
leave
mov
in
lcall
push
je
mov
mov
ror
lock
inc
mov
dec
ret
ja
mov
sub
xchg
and
fcomip
lea
adc
mov
std
lahf
ja
das
pop
rol
lret
xchg
cli
scas
shl
or
and
add
adc
inc
test
out
jg
pop
out
cmpsl
negl
inc
cmc
mov
aam
addr16
cs
sub
xor
adc
in
or
pop
loopne,pn
cwtl
push
in
mov
lds
xor
push
aad
push
or
dec
mov
dec
stos
or
insb
mov
ror
test
lahf
bnd
push
arpl
lcall
inc
int3
out
andl
jl
icebp
cld
xor
add
xchg
jne
out
imul
mov
stc
popa
in
sbb
mov
sub
rcl
sub
int
jge
rorb
lods
loop
push
dec
mov
pop
mov
bound
lock
lahf
outsb
mov
mov
data16
inc
dec
cmp
fisubs
mov
ds
test
fwait
adc
cmpsb
pop
movsb
lea
sarb
pop
dec
inc
sbb
xchg
aas
lock
xchg
or
shlb
in
adc
and
mov
test
je
rolb
or
mov
or
nop
jle
idiv
cmc
or
loopne
or
inc
sub
xchg
pop
cmp
xchg
dec
add
pop
mov
and
inc
test
pop
jne
sahf
jmp
cmp
inc
or
fdivrs
test
push
cmp
lods
call
mov
out
stc
push
sbb
mov
mov
int
lods
push
fisubrl
sub
jle
inc
lret
pop
scas
jb
add
sahf
jmp
repz
pop
int
cld
dec
pop
inc
xchg
cwtl
mov
mov
aad
add
movsl
pop
mov
jmp
cltd
mov
or
add
repnz
push
in
jmp
aas
xor
xchg
int3
cmp
cli
adc
nop
and
pop
js
inc
pop
dec
push
sbb
or
cmpsb
jp
jae
ret
inc
xor
repnz
dec
pop
fstpt
lds
leave
mov
jno
mov
mov
pop
mov
int3
xchg
stos
inc
into
mov
and
inc
inc
xchg
sbb
andl
ja
mov
fldcw
scas
mov
mov
xor
dec
xor
jmp
in
lcall
xor
sarb
addl
cltd
mov
andb
out
mov
call
shlb
aad
mov
int3
sbb
loop
insb
stc
add
inc
out
jecxz
push
movsb
je
pop
dec
mov
and
rcll
pop
faddl
js
push
leave
mov
lahf
cmp
dec
inc
ja
les
xor
xlat
int
push
jl
nop
pusha
mov
sbb
mov
and
cld
nop
pop
push
mov
ficoms
xchg
adc
add
xor
repz
adc
and
int3
pop
jecxz
aaa
jl
jbe
add
or
scas
pop
fwait
jp
mov
inc
int
dec
mov
pushf
add
pop
roll
out
push
adc
pop
mov
sti
shlb
push
in
adc
push
mov
pop
out
mov
testl
inc
mov
scas
dec
adc
lcall
pushf
mov
cmc
add
imul
mov
push
shrl
in
fsts
xlat
and
xor
fisubrl
outsl
enter
mov
loopne
adc
pop
outsb
cmp
loope
js
sbb
aaa
rol
push
inc
xchg
mov
pop
mov
lds
repz
xchg
sub
les
sub
adc
mov
cmc
daa
dec
rcrb
repz
scas
addr16
lret
sbb
adc
lret
fadds
popf
dec
loope
mov
jp
mov
cmpsb
push
or
cmp
pop
inc
push
fdivrs
inc
mov
cmp
out
mov
and
sbb
gs
cmp
repnz
xchg
testb
sbb
popf
jmp
mov
andb
in
fsubrs
loop
cmp
jp
cmp
add
cmp
or
xor
or
mov
push
xchg
aas
pop
pop
addl
inc
push
testl
mov
bound
sub
out
push
cli
aas
cmp
js
dec
lods
in
jne
xor
outsl
fisttps
xlat
ja
cld
loop
fldt
lds
jmp
jo
jnp
aaa
cmpsb
and
call
mov
fcmovnbe
adc
test
mov
std
subl
fiadds
mov
pop
xchg
adc
xchg
scas
add
mov
in
inc
nop
imul
xchg
icebp
jl
push
sbb
pop
mov
arpl
sti
xchg
xor
inc
dec
clc
orl
xor
push
aad
cmp
and
imul
xchg
fisubrl
pop
insb
xchg
jns
inc
cmp
cmp
inc
sub
dec
sbb
fwait
lahf
psraw
shrl
mov
xchg
push
add
mov
loopne
sbb
or
sbb
jmp
mull
dec
lods
in
shrl
sbb
add
btr
mov
ret
push
pop
mov
sarb
fsts
dec
adc
inc
sahf
pushaw
aaa
xchg
out
fcmovnu
nop
xchg
mov
stos
aas
mov
mov
repz
add
int3
paddb
jl
xor
data16
xor
mov
js
or
and
ss
add
je
xor
insb
inc
test
dec
repz
push
stos
rcrl
pop
pushf
sbb
dec
mov
lods
mov
mov
shl
mov
aas
pop
push
push
sub
loop
mov
mov
cmpsl
lods
xchg
sub
jb
fadds
or
jb
mov
sub
push
push
hlt
out
sub
ds
mov
dec
mov
pop
mov
sub
lcall
jecxz
cmc
iret
es
jae
adc
loop
lcall
stc
adc
push
mov
cli
push
mov
mov
jb
mov
enter
dec
mov
dec
mov
fmul
fdivrl
hlt
aad
push
push
int3
das
inc
sbb
cmp
ja
arpl
aad
mov
in
lock
mov
xor
cmpb
lcall
mov
les
dec
fcoms
lds
fcomps
or
js
sbb
popa
lods
fstpt
int
and
aam
adc
mov
xchg
loopne
inc
push
xchg
add
xor
je
imul
gs
add
dec
inc
jp
ds
add
sbb
or
fistpl
scas
jns
jb
fadds
mov
int
aad
or
test
sub
fwait
pushf
jbe
idiv
jbe
and
lcall
mov
cltd
cmp
mov
subb
fnstcw
cmc
lret
ret
pushl
mov
pop
hlt
ret
in
jl
lods
jb
imul
mov
push
xchg
mov
push
inc
clc
icebp
shrb
mov
xor
das
ficompl
inc
push
add
arpl
push
sbb
xor
xchg
push
mov
in
mov
add
jle
cmp
fldcw
fldln2
fstpl
out
push
sbb
stc
lods
and
fcmovbe
add
lret
in
sbb
pop
int3
enter
cmp
jg
movsb
adc
arpl
sbb
inc
inc
mov
shr
dec
or
js
mov
sarl
stc
out
iret
xor
pop
push
and
fisubl
daa
mov
mov
sbb
lock
imul
add
fwait
jmp
outsb
pop
mov
aas
rcll
std
hlt
push
mov
lret
aad
in
out
mov
cli
sarl
pusha
and
add
aam
push
adc
sub
iret
add
lcall
jmp
cmp
ds
or
xor
imul
mov
fistl
lock
fs
cltd
xchg
push
mov
and
scas
cmc
cltd
mov
test
je
push
add
mov
insb
cli
sub
daa
xor
mov
mov
hlt
jecxz
xor
nop
cmp
js
xchg
imul
xor
xchg
mov
loope
push
daa
ret
mov
test
lea
or
push
push
ret
test
int3
ds
sbb
test
popa
lcall
xor
cltd
lods
sbb
out
mov
mov
imul
xchg
or
fs
and
mov
popa
int3
dec
out
ljmp
lcall
imul
outsb
and
or
add
add
mov
movsl
cmc
xchg
mov
aad
std
scas
fs
jne
idivb
clc
and
sub
xchg
inc
pop
gs
call
and
das
pop
push
mov
repnz
mov
addb
jne
adc
gs
addr16
sub
es
in
jl
cmp
call
inc
js
addb
sbb
lahf
das
shrl
push
lahf
xor
and
pop
cli
inc
in
das
lock
mov
xor
adc
mov
mov
inc
in
stos
inc
imul
cmpb
pop
pop
js
mov
xchg
clc
jne
bnd
iret
xchg
int
pop
orb
mov
shrb
repz
lods
stos
mov
add
push
fdivrl
ja
mov
sub
cmp
dec
das
pop
cs
jno
loopne
rcr
xchg
dec
fistpl
inc
or
pusha
dec
mov
and
rcll
jp
rclb
and
mov
aas
xchg
andb
je
dec
out
dec
push
mov
pop
loope
fists
xor
mov
or
mov
mov
in
fnop
rdpmc
lock
inc
out
clc
int3
pop
xchg
divb
adc
mov
clc
mov
sbb
lea
push
mov
push
mov
pop
outsl
ja
rolb
cli
imul
xchg
imul
mov
mov
test
push
push
fcmovnu
aam
sbb
daa
pop
mov
add
je
outsb
aad
sbb
in
push
cmp
sahf
das
daa
aaa
aas
add
jne
mov
out
insl
sbb
sarb
popa
mov
cli
mov
jmp
mov
scas
mov
ja
movsb
dec
jl
inc
cmp
push
loopne
dec
mov
ja
or
hlt
sub
imul
icebp
or
adc
out
push
or
shll
add
call
imul
in
or
dec
dec
xchg
and
leave
int3
push
cmpsl
xor
movsl
lods
les
in
fs
jne
sar
xchg
mov
cmc
sbb
stc
mov
mov
xchg
call
xor
push
stos
mov
rclb
push
sub
adc
add
lret
in
pop
fadds
mov
popf
scas
mov
xlat
rol
xor
xchg
jecxz
xlat
sbb
inc
mov
or
shlb
or
dec
mov
sbb
adc
xor
sbb
mov
aaa
fistps
mov
sahf
xor
dec
out
mov
push
inc
pusha
xchg
jecxz
jnp
out
cltd
insl
dec
enter
cmpsb
lock
xchg
fwait
inc
inc
ficompl
dec
mov
sti
or
sbb
int3
fidivrl
xchg
int
fmuls
stos
test
pop
add
leave
repnz
ljmp
or
xor
adc
pop
int
sarb
mov
pandn
insb
cmc
std
jno
lods
and
aam
jp
addr16
incl
pusha
out
enter
push
cmpsl
xchg
mov
mul
scas
mov
inc
xchg
fcmove
mov
cmpsl
xor
adc
aam
cli
mov
adc
pop
xchg
dec
inc
pop
push
adc
fwait
mov
test
cltd
jb
cmc
mov
mov
inc
or
jmp
sbb
xchg
ds
push
inc
push
sub
rcll
add
shlb
sbb
sub
fdivrs
int
test
pop
jno
enter
jp
loopne
jno
popf
push
mov
shrb
jmp
fcompl
push
push
mov
fcmovb
mov
inc
dec
and
sub
movsb
outsb
sbbb
sbb
or
in
dec
and
sub
lret
incl
fbld
rorb
or
mov
push
push
shr
dec
negl
push
inc
dec
sbb
sbb
push
mov
sub
add
add
int
insb
inc
in
rorl
test
inc
movsl
cltd
mov
loop
or
mov
push
pop
inc
mov
cwtl
popf
pop
cmp
adc
push
wrmsr
adc
push
jecxz
faddl
loop
js
je
repnz
inc
mov
data16
mov
testb
push
pop
loope
jle
lret
mov
setle
ljmp
in
sbb
xchg
push
fdivp
invd
in
dec
cmp
adc
sbb
jmp
js
lahf
cmp
adc
push
fsubr
mov
cmc
push
sti
cmpsl
cmp
addr16
dec
xorl
or
cwtl
into
cmc
xor
hlt
ljmp
int
js
in
pop
mov
xor
sub
push
sbb
or
add
jo
loopne
into
cmpsl
js
lret
mov
fadds
xchg
aas
mov
lods
fwait
dec
testl
les
sbb
ret
int
or
push
scas
jmp
int
xchg
and
outsl
cwtl
sub
pop
lods
and
loopne
popf
dec
mov
jecxz
dec
xorl
pop
xchg
enter
inc
or
gs
and
repz
data16
push
sahf
xor
add
mov
or
xchg
aas
mov
mov
sub
cli
nop
pop
xchg
rep
xor
mov
pop
rclb
or
rorb
out
fwait
push
std
shlb
inc
in
adc
jle
imull
js
and
mov
xor
xor
xchg
scas
cmp
or
jp
sti
add
aas
push
lcall
lcall
out
enter
adc
add
inc
or
jb
adc
pushf
xor
jb
out
leave
lahf
in
lds
popl
call
shll
and
sti
push
cmp
pop
clc
gs
xchg
sbb
outsl
jecxz
mul
cmp
leave
push
xor
jns
addr16
and
fdivrl
lods
iret
mov
daa
or
or
adc
push
or
lret
lods
int3
jle
inc
pop
sub
fs
sarb
jecxz
adc
mov
jp
notl
cmpsb
sbb
pop
mull
int3
push
sbb
inc
das
shl
xchg
adc
aaa
add
sub
je
cli
je
test
dec
mov
pop
in
xchg
xchg
add
fwait
lcall
adc
lret
push
lods
lret
aas
sub
mov
leave
test
loop
cmp
cmc
scas
and
int3
inc
or
mov
sbb
push
pop
xchg
cmc
divl
jno
adc
pop
aam
imul
mov
sbb
pop
add
jnp
dec
mov
push
mov
mov
push
outsb
sub
popa
aas
inc
mov
ror
arpl
stos
cmpl
fcoms
mov
adc
cld
dec
mov
pcmpeqw
nop
cmp
dec
sub
aam
into
sahf
imull
imul
movsb
mov
add
mov
add
adc
xor
xor
neg
lods
icebp
lods
mov
subl
mov
pusha
or
repnz
jg
sub
mov
and
or
clc
mov
mov
jbe
mov
flds
adc
retw
dec
andl
rolb
neg
pop
sbb
push
inc
jmp
in
adc
es
aad
mov
or
js
push
daa
imul
adc
fldt
add
dec
pop
mov
fprem
sbb
inc
xchg
jmp
push
lret
rolb
xchg
sti
mov
jno
and
mov
push
sub
sub
aad
fcmovu
lahf
dec
xchg
and
aas
shrb
es
add
pop
repz
and
mov
aas
push
hlt
dec
xor
int
push
inc
or
push
insl
jbe
mov
add
xor
cmpsl
mov
xchg
mov
mov
mov
mov
lret
mov
shrb
mov
movsl
mov
mov
adc
leave
cmp
mov
cltd
mov
sbb
ljmp
popl
or
or
pop
push
cmpsl
pop
mov
test
out
xor
into
ljmp
or
mov
inc
xchg
sub
rcrl
repz
bound
or
lock
js
sub
push
test
xchg
dec
jnp
push
lret
mov
inc
cmp
push
inc
scas
clc
or
fists
adcb
fisubl
push
push
cmpsb
mov
jecxz
cmp
icebp
jge
pop
lcall
scas
fnstsw
hlt
repnz
mov
or
test
imul
out
xchg
pop
jo
lcall
push
mov
fidivrl
flds
fcoml
insl
xor
fcoms
and
mov
push
inc
push
dec
ret
and
and
lods
xchg
cmpsl
pop
or
mov
cld
sar
and
arpl
in
lret
ljmp
inc
ret
fcoms
dec
or
cmp
cmc
adc
push
lods
add
cmp
xchg
add
aaa
jae
add
stos
adc
inc
out
and
mov
add
mov
shl
mov
das
clc
data16
cli
mov
into
in
int
dec
and
xor
shlb
push
mov
daa
lcall
lock
iret
shlb
mov
ljmp
cmp
lods
pop
cmp
ret
aad
cmp
add
imul
xchg
adc
pusha
movsb
mov
dec
pop
sarl
inc
pop
mov
adc
and
leave
adc
mov
icebp
int3
popa
fsub
daa
loopne
cmp
ss
out
in
dec
fwait
xlat
arpl
je
fidivrs
mov
in
xchg
push
mov
xor
ss
mov
mov
lock
lahf
mov
lahf
and
sbb
icebp
inc
push
dec
inc
jnp
inc
jbe
js
les
cmc
push
cmp
lahf
sbb
scas
or
lret
sub
cmp
in
in
mov
push
das
movsb
jne
test
or
rcl
stos
iret
add
xchg
ss
stos
fwait
nop
or
out
jmp
test
frstor
pusha
cmp
mov
stc
ja
roll
add
ja
xchg
xor
sbb
sbb
fsubrs
stos
lahf
inc
jo
cli
mov
std
jbe
push
insb
cmp
mov
mov
cmp
pop
rcrl
test
stc
sbb
fisttpl
push
inc
lea
and
and
addr16
sub
xlat
xor
pop
mov
pusha
ss
adc
in
test
push
inc
inc
stos
fcomps
int3
sub
iret
sahf
popa
mov
fimuls
out
or
xor
rorb
sbbb
outsb
sub
xor
xchg
fistpl
leave
into
adc
hlt
sbb
loop
add
add
sub
sbb
mov
add
sti
cmpb
and
popl
lret
dec
push
pop
lret
das
nop
cmpsl
je
dec
push
aad
jl
mov
push
or
sti
loopne
loop
jg
xchg
pop
and
cmp
into
xor
pop
cmp
mov
cmp
mov
pop
loop
push
mov
test
lcall
push
dec
pop
cmpsl
mov
or
flds
mov
or
add
cmp
mov
pop
pop
xchg
addb
in
xchg
pop
mov
pusha
stos
cmc
mov
sub
mov
divl
das
mov
cmp
xchg
fistpll
xor
gs
orb
in
inc
mov
push
jmp
cmp
fildl
lret
in
scas
ss
movl
adc
add
or
faddl
out
jg
sbb
lds
pop
mov
ljmp
fcomi
push
lods
ret
mov
xchg
int
insl
mov
mov
adc
fldcw
mov
pushf
sarb
imul
mov
or
in
xor
push
adc
push
pop
lods
testl
std
or
dec
xor
mov
out
push
out
sbb
mov
in
inc
sbb
sub
and
mov
xchg
lcall
and
xchg
cltd
shrl
aam
push
hlt
jnp
mov
xchg
and
cmpsl
push
mov
inc
test
repz
lds
insl
mov
out
or
les
ret
inc
bound
sbb
fsubrs
fldcw
idivl
mov
push
sbb
sbb
cs
popf
mov
adc
sub
les
in
decb
xchg
out
jmp
movsb
outsl
outsl
pop
decb
clc
popf
adc
iret
out
aaa
int3
jl
pop
hlt
lret
mov
xchg
sti
adc
sahf
gs
mov
js
jne
lret
fidivrl
adc
jmp
mov
push
pusha
inc
mov
sub
aaa
push
add
and
test
fnstcw
shll
adc
push
rol
dec
insb
movsb
inc
scas
cmc
pusha
pop
pop
adc
scas
das
pop
movsb
jb
rcll
mov
cwtl
sahf
jo
idivl
pushf
pop
in
loop
sub
adcb
push
or
mov
sbb
das
sub
lods
in
in
ljmp
cmpl
in
cli
aam
xchg
add
rorb
in
or
shlb
xlat
inc
arpl
in
lock
mov
sbb
mov
sbb
xchg
or
add
push
jmp
jecxz
fdivl
sub
repnz
and
inc
cmp
xor
jo
lea
xor
jnp
mov
out
add
xchg
mov
popf
call
or
bound
xchg
sti
lods
icebp
mov
sbb
mov
ret
pushf
rorb
int
mov
imul
cmp
pop
adc
arpl
repnz
outsb
lods
aas
xor
adc
ds
sbb
lea
jmp
xor
add
xor
jnp
ret
jno
repnz
movsb
inc
lods
adc
iret
dec
mov
call
call
xor
and
mov
and
fnstenv
xchg
adc
or
clc
pop
xchg
out
test
xor
xor
bound
and
outsl
icebp
imul
mov
sti
fnstcw
adc
xlat
inc
dec
cmp
jbe
pop
xchg
push
test
std
adc
test
and
icebp
mov
data16
shll
mov
lahf
and
aam
lahf
or
jecxz
in
fidivrs
fstpt
fcompl
lahf
add
pop
pop
arpl
stos
rol
out
mov
mov
jl
mov
fsubr
jae
cmp
das
pop
cvtps2pd
loop
lret
sbb
pop
in
loopne
mov
out
mov
jp
shr
xchg
push
dec
dec
mov
leave
inc
sahf
jb
xor
xlat
popa
popf
mov
and
out
in
mov
xchg
shl
les
sahf
jg
mov
or
fimull
inc
in
cmp
cmp
sarb
enter
jbe
sbb
lahf
push
and
std
scas
jb
mov
and
subl
dec
mov
cmpsl
adc
call
mov
and
rdpmc
push
fs
mov
pop
jo
pop
fs
pop
rorl
gs
test
mov
ss
push
mov
js
sub
push
movsl
pop
frstor
lret
in
jb
jb
shlb
stos
ret
and
xor
in
add
out
xorb
lret
sbb
loopne
aaa
jbe
jecxz
std
jns
mull
xor
sbb
int
push
lods
xor
inc
dec
cld
lock
mov
stos
sbb
ret
lret
ljmp
mov
fs
inc
xor
sarb
sqrtps
dec
xchg
inc
stos
mov
shrl
scas
xchg
ja
xor
push
xchg
inc
lret
xchg
out
xchg
sbb
inc
jns
inc
sub
call
and
cmp
loop
popa
enter
dec
fidivs
add
test
aam
dec
or
push
add
punpckldq
sbb
pushf
pop
popf
pop
fbld
jp
adc
cli
faddp
add
mov
and
jo
fisttps
mov
mov
xchg
movsb
xor
mov
loopne
ss
xor
adc
xchg
jnp
and
jg
lock
mov
iret
call
jbe
push
aam
inc
pop
loopne
jns
int3
test
mov
xchg
pop
jae
add
add
lea
je
sti
pop
aad
add
ret
bound
mov
outsb
jns
fs
cld
pop
scas
out
movsb
enter
loope
imul
mov
scas
cli
call
inc
cmp
jbe
out
fs
lcall
fwait
add
and
pushf
push
fcomps
xor
cmp
mov
inc
ja
push
test
mov
and
dec
push
scas
xor
fsubrl
mov
push
roll
sub
dec
imul
mov
push
or
xchg
icebp
mov
sub
and
mov
jmp
lods
mov
add
push
xchg
jl
or
ret
push
xor
into
sbb
arpl
add
cmp
xor
data16
jae
ljmp
int3
xchg
push
add
push
adc
mov
ss
mov
and
sub
or
fmul
lds
mov
out
mov
lret
pop
cmp
mov
loop
mov
mov
sahf
and
fnstenv
inc
iret
es
dec
aad
stos
sti
repz
inc
inc
movsl
lods
mov
add
cmc
cmc
loopne
xchg
js
pop
xor
add
push
cmp
movsb
rolb
pop
mov
mov
loopne
aas
ror
out
jae
sti
sub
fbstp
daa
cmp
dec
mov
inc
or
shr
popa
daa
mov
xchg
cs
push
and
dec
std
sub
imul
movsb
ljmp
movsb
fsts
fwait
adc
gs
jae
xorl
push
shlb
add
ret
pop
dec
sub
leave
pop
pop
jbe
jno
movsb
xor
adc
data16
leave
test
dec
mov
mov
dec
xchg
inc
sbb
xchg
cli
scas
sub
ds
mov
movsb
sar
cmp
dec
sbb
es
inc
js
cmp
pop
in
ret
rcr
pop
xor
push
daa
and
aam
jo
inc
cmp
fisubrs
dec
call
mov
movsb
lcall
int3
lock
and
lret
cmpsb
pop
mov
and
dec
mov
loop
add
cmpsl
jg
mov
add
call
jo
jle
int
push
push
lods
fucomip
movl
ret
and
out
jmp
enterw
imul
lahf
jecxz
lds
pop
fbstp
out
test
mov
add
stc
xor
mov
mov
adc
or
sti
cltd
insl
pop
push
or
popa
cs
stos
fistpl
cld
int3
call
add
daa
lret
loopne
hlt
xor
add
and
inc
mov
mov
icebp
and
es
sahf
cmpsb
xchg
and
push
inc
rolb
sbb
lods
dec
inc
hlt
xor
sub
inc
pop
loop
ja
or
mov
jb
outsb
adc
orb
ds
dec
push
sbb
xchg
movsl
loope
jo
cld
mov
imul
push
inc
dec
cltd
cmpsl
xor
ret
sbb
dec
int
std
inc
fisttpll
dec
outsb
mov
bound
mul
scas
mov
std
leave
ds
cmpsl
and
shrl
cli
mov
push
adc
cmp
jmp
out
rcrb
mov
stos
outsb
xchg
adc
shlb
pop
xchg
rcll
or
add
cmp
mov
xor
shrb
add
mov
sub
adc
test
sti
adc
gs
inc
and
push
lea
add
iret
gs
or
jmp
ss
mov
pushf
xorl
sbb
mov
jmp
je
mov
mov
sub
mov
adc
popf
in
das
lods
dec
xor
sbb
ljmp
test
psrld
daa
aaa
or
into
lods
outsb
mov
fnsave
sbb
cmpsl
js
and
ret
mov
test
negl
stos
jo
jmp
pop
fsts
dec
arpl
out
xchg
sub
loope
pop
lods
inc
jo
in
sub
or
pop
shr
lods
mov
xchg
ds
pop
stc
and
ss
mov
orb
and
pop
insb
ljmp
test
iret
add
testb
decl
and
fld
adc
push
mov
cmpsb
in
ds
sbbl
cltd
fsub
mov
jge
push
inc
int3
and
nop
xchg
sub
arpl
inc
lock
test
inc
sub
andb
lahf
ret
xchg
adc
scas
mov
mov
test
loope
sub
push
mov
int
pop
jo
and
shlb
mov
cmc
push
ljmp
bound
mov
xorl
jo
mov
addr16
push
in
dec
es
fldt
add
pop
loop
push
pop
in
and
jle
mov
mov
mov
cld
lahf
cltd
mov
jmp
lds
movsl
ret
inc
mov
lahf
jle
jg
jl
cli
pop
out
imul
and
imul
xor
loope
jg
mov
dec
test
call
xor
dec
fwait
or
push
cmp
add
mov
loope
or
dec
daa
outsb
daa
jle
fucomi
pushf
push
aaa
xchg
jne
inc
push
std
mov
cmp
mov
sub
jge
adc
lcall
out
jnp
das
add
jmp
pop
xor
cli
sub
xor
xor
pop
push
mov
test
or
jg
in
push
sub
xor
nop
add
aas
fidivrs
sbb
jnp
cmpsb
popl
mov
imul
mov
push
fimull
lea
daa
xlat
pop
movsb
rorl
dec
mov
fidivrl
inc
mov
cmp
mov
xor
lahf
ret
mov
adc
mov
xchg
outsb
dec
xor
mov
icebp
shlb
dec
mov
lcall
and
cld
xchg
test
int
test
in
mov
in
data16
xchg
or
sbb
scas
push
mov
push
mov
xor
bnd
xchg
jne
outsl
js
sub
or
loopne
push
push
mov
dec
inc
push
wbinvd
pop
inc
xchg
mov
sbb
adc
push
in
lcall
popa
adc
bound
and
and
mov
dec
fcmovb
jae
das
fisttps
xor
xor
dec
es
ret
mov
cli
icebp
xor
clc
cld
leave
dec
ja
pop
mul
dec
jl
iret
xor
insl
xlat
mov
in
lret
cmpsb
add
call
test
mov
lcall
inc
loopne
xchg
mov
sub
xor
cmpl
pop
adc
mov
cmpl
sub
lcall
mov
push
adc
imul
movsl
inc
mov
cmp
mov
dec
outsb
mov
pushf
xchg
aad
mov
mov
push
mov
sub
pop
sub
mov
jecxz
cs
shrl
stc
cmp
out
int3
push
mov
jno
adc
ljmp
lahf
ljmp
iret
mov
adc
inc
es
incl
ds
jae
popa
imul
pop
das
stos
mov
daa
das
jno
pop
dec
lea
test
jg
dec
mov
sbb
or
cwtl
repnz
xchg
or
or
aaa
add
push
jb
pop
jge
push
and
fdivs
leave
div
sbb
fstpt
out
nop
adc
push
inc
hlt
in
xchg
sahf
mov
or
shll
xor
cmp
shll
push
mov
mov
add
or
daa
mov
arpl
jp
push
mov
repnz
sbb
push
mov
lea
pop
ret
jl
iret
test
bound
insb
call
jl
adc
inc
test
nop
cmpl
popf
cmp
aam
out
shll
pop
adc
test
sbb
and
sarl
repz
dec
lcall
data16
pop
rol
push
data16
lret
test
add
repz
pop
lret
jle
xchg
inc
mov
lcall
fimull
mov
pop
jo
cmp
test
ja
fnstcw
push
popa
dec
mov
scas
out
pusha
pop
shrb
inc
imull
add
js
mov
xchg
mov
arpl
push
pop
in
lods
mov
imul
into
cmp
sub
shll
cmp
gs
sub
cmc
mov
jmp
mov
add
subl
adc
mov
and
mov
push
scas
shl
mov
fsubrl
mov
sbb
xor
lods
adcb
xor
andl
mov
shll
jnp
scas
mov
int3
inc
outsb
jl
inc
push
lods
or
xchg
and
sub
dec
adc
sbb
or
scas
jp
popa
andl
fdivp
andl
xchg
fs
add
mov
int
sub
inc
inc
cmp
push
mov
mov
fisttps
cltd
xchg
jo
rorb
iret
lock
adc
adc
sbb
cwtl
rcrb
push
cmp
ret
lret
or
btc
fcomi
pop
cltd
std
cmp
and
sbb
or
inc
out
into
xchg
daa
dec
bt
stos
sbb
lock
add
adc
sbb
lea
pushf
shl
mov
sbb
xchg
lcall
clc
into
jecxz
les
hlt
dec
mov
sub
and
outsb
sbb
fwait
xor
outsl
popa
add
test
fstpt
pop
xor
push
stos
lret
pushf
movsb
ja
pop
lock
jmp
jo
rclb
fst
scas
jb
lods
fiadds
fs
in
and
test
movsl
jmp
shll
inc
notl
push
cmp
cmp
shll
mov
add
jg
xchg
ds
frstor
dec
fwait
xchg
lods
out
xor
loopne
mov
out
pop
fistpll
add
fs
xchg
stc
popf
dec
repnz
jbe
fwait
push
dec
dec
arpl
sbb
stos
aaa
orl
cmpsl
pop
and
inc
pop
jge
sub
mov
xorb
push
xor
test
push
sbb
je
cs
ficomps
lods
test
cmc
fdivs
loopne
mov
daa
or
in
frstor
or
and
jnp
jmp
rcrl
dec
inc
div
xchg
inc
into
or
cmp
xchg
shll
aas
lcall
hlt
ss
addr16
stos
ljmp
cmpsl
loop
push
xor
daa
popa
cmpsb
or
push
insl
xor
dec
and
and
scas
adc
mov
mov
mov
or
xchg
pop
repnz
mov
push
mov
xchg
mov
inc
jmp
jns
arpl
aas
gs
icebp
fstl
mov
sbb
lret
dec
adc
sub
push
xchg
pop
movsb
cmpsb
aaa
push
notb
sbb
popf
mov
sub
shll
daa
dec
mov
les
jns
pop
adcl
adc
mov
hlt
pop
scas
rclb
cmp
lea
mov
xor
jmp
inc
lcall
and
xchg
mov
repz
cmp
dec
mov
add
scas
lahf
daa
mov
shl
in
xchg
ret
mov
vpmulhw
jbe
xchg
xchg
push
aad
les
scas
jo
jb
imul
cmp
loop
icebp
pop
fcoml
loopne
push
lcall
mov
cmp
inc
mov
and
dec
inc
outsb
push
xchg
and
jp
add
bound
cld
xchg
orb
pop
popl
pop
or
add
iret
mov
repnz
sub
loope
inc
pop
cmpsb
adc
addl
test
add
cmp
sbb
sub
test
jne
xchg
pop
ror
jno
sub
aas
jbe
or
insb
sarl
fwait
pop
fmuls
std
out
sarb
push
imul
ds
push
sub
stos
ror
inc
lea
jbe
xor
xor
mov
xacquire
sbb
mull
jbe
bound
mov
popa
cmp
mov
mov
xor
mov
cmc
inc
shlb
xchg
push
or
push
out
int3
sub
and
outsb
xchg
and
lcall
pusha
xor
and
dec
cmp
push
testl
pop
fwait
rorb
jle
stc
inc
inc
inc
sub
push
jg
xchg
mov
mov
mov
jmp
fwait
inc
mov
sub
lcall
mov
xor
dec
mov
mov
int
or
inc
cmpsb
push
pop
movsl
das
push
mov
jg
negb
cmpsl
and
mov
cmp
mov
lret
fidivrl
dec
pop
jmp
inc
loope
dec
jbe
cmc
mov
fstps
mov
movsb
lahf
clc
or
dec
int
scas
push
xchg
xadd
jge
out
jle
pushf
cs
adc
mov
or
std
adc
in
jo
outsl
inc
enter
aam
adc
xor
pop
xor
mov
sbb
ljmp
pop
scas
rclb
adc
mov
ficoms
inc
fisubl
into
lds
cltd
iret
jo
pop
bswap
mov
imul
cmp
jne
addr16
add
xchg
jg
jmp
imul
or
loopne
ja
pop
add
xchg
sub
repz
jp
jbe
mov
mov
dec
adc
sti
mov
pop
mov
icebp
fcompl
adc
aas
insl
sub
or
int3
dec
sbb
ss
hlt
cmovb
mov
pop
ja
out
rcrl
mov
bound
mov
cmpsb
popa
mov
mov
lods
adc
or
inc
push
in
das
mov
icebp
pop
jbe
mov
dec
std
mov
xchg
dec
cwtl
push
repnz
adc
cmc
xchg
pop
xor
dec
iret
pop
dec
mov
xchg
pop
xor
stos
stos
pop
movsl
adc
cmp
cmp
in
ljmp
cwtl
neg
call
mov
push
lock
mov
xchg
mov
test
roll
adc
out
mov
decb
imul
adc
jle
int3
adc
sub
vmovd
mov
sbb
mov
or
xor
sbb
push
adc
mov
push
push
mov
xchg
pause
mov
mov
dec
cmp
xchg
in
and
pop
mov
daa
nop
jae
flds
cmc
stos
cwtl
xchg
adcb
push
push
gs
iret
stos
loop
jns
shl
arpl
and
test
add
xor
aad
in
inc
lcall
add
rorb
gs
fwait
cmp
nop
testl
jbe
iret
ficoms
pop
jg
ret
dec
cld
mov
pop
adc
ror
imul
ljmp
pushf
dec
or
pop
stos
inc
test
out
and
push
and
pop
push
sub
jp
pop
aam
test
mov
add
lods
add
in
dec
fisubl
mov
or
movsl
push
and
fs
dec
add
aas
xchg
mov
lods
lods
int
sbb
xlat
add
jl
loop
push
lcall
daa
repz
aad
mov
mov
je
mov
pushf
insb
mov
mov
mov
fisubrs
mov
out
mov
mov
sahf
cmp
jl
out
ljmpw
and
mov
cltd
push
mov
nop
xorl
loop
in
std
lds
test
ret
fdivrl
lods
ret
mov
in
inc
mov
fs
mov
repnz
std
scas
hlt
insl
incb
fisttps
rcr
jbe
jl
dec
clc
sahf
je
lcall
and
xchg
mov
mov
add
movsl
out
in
mov
mov
test
test
shll
dec
mov
push
push
mov
scas
cmpsl
out
and
lea
mov
fidivs
fcomi
mov
hlt
xor
scas
outsb
xchg
jmp
jb
sub
jge
push
mov
jmp
mov
mov
pop
dec
addr16
push
cmpsl
lret
add
xchg
mov
mov
jb
xchg
stos
push
lods
les
pop
xchg
cwtl
sub
lock
shr
js
adc
ss
cmp
push
dec
dec
xchg
stos
jne
enter
jne
mov
cmp
dec
sbb
mov
pushf
cwtl
mov
sub
jns
jne
inc
mov
cmpsb
adc
push
out
and
or
or
mov
mov
rorl
pop
dec
loope
loopne
add
ret
lcall
rorl
stos
lea
inc
mov
push
hlt
pop
inc
mull
insl
int3
insl
cli
pusha
push
push
dec
std
xor
push
sub
cmp
into
stos
shl
add
out
and
jno
negb
test
inc
gs
insl
adcl
inc
int3
notl
cs
ljmp
mov
ret
icebp
scas
shrl
scas
in
das
sbb
jo
test
mov
enter
mov
in
sbb
xor
push
jnp
pop
dec
sbb
xchg
xor
xchg
ficoms
jno
dec
mov
mov
adc
add
cmc
pop
stos
xchg
and
sbb
cmp
inc
push
xchg
fcomp
inc
lcall
dec
std
jne
enter
cmpsb
stc
xlat
fs
bound
inc
xor
dec
pusha
and
sbb
or
mov
sub
loopne
cld
adc
xor
repnz
jle
sbb
rcrl
subb
in
loopne
movsb
or
scas
push
add
cld
push
pushf
mov
mov
jb
stos
test
out
dec
dec
sbb
in
es
scas
shrl
mov
sbb
and
xchg
faddp
sub
stc
mov
fcomps
inc
mov
mov
cmp
dec
outsb
sbb
sub
bound
xchg
fwait
stos
out
mov
xor
mov
aas
cltd
test
popa
mov
xor
jne
cmp
mov
imul
ret
ss
movsb
mov
ljmp
in
adc
sbb
dec
jle
idivb
das
sar
sti
sbb
adc
pop
rcrb
ret
pusha
lods
movsb
jbe
jmp
add
arpl
jmp
ljmp
add
jb
xchg
movsb
gs
cwtl
xor
lock
mov
stc
cmp
mov
in
mov
pusha
cmc
adc
popf
pop
mov
aad
outsl
push
out
dec
iret
cwtl
lcall
sub
mov
mov
dec
les
add
xor
loop
lods
aad
sub
sbb
sbb
sti
ret
inc
lea
cmc
jecxz
popa
push
cmp
or
pop
sbb
jecxz
xchg
cmp
push
jp
call
je
and
and
movsl
test
in
divl
mov
mov
add
adc
or
popf
ss
mov
sbb
mov
movsl
inc
jb
jo
xchg
sbb
sub
push
add
pushf
mov
enter
adc
mov
mov
fcmovbe
pop
mov
loopne
sti
hlt
call
and
in
add
mov
mov
fisubs
cwtl
push
push
sub
bound
push
pop
shl
shl
mov
outsl
lret
cmc
scas
rol
xchg
xchg
and
rol
and
scas
xor
test
repz
cmpsb
pushf
or
mov
and
lahf
jo
mov
add
rorl
and
or
xor
mov
mov
out
ja
sub
xchg
pop
xor
imul
or
sti
divb
and
inc
mov
mov
subb
push
xchg
inc
pminsw
push
cmpsl
push
cmp
hlt
orl
pushf
rol
stos
hlt
xor
inc
and
mov
push
test
fs
and
push
ja
pop
push
ficoms
dec
or
add
insb
sbb
pop
or
in
jae
pop
out
push
sbb
nop
xchg
xorb
rolb
aad
sbb
fstpl
loop
outsb
xlat
pop
mov
xlat
or
mov
js
add
pop
or
cmpsb
std
and
in
and
push
mov
flds
pop
ljmp
aas
mov
loope
addr16
mov
xor
dec
push
jb
lcall
je
lds
ds
or
repnz
lcall
push
sub
ja
imul
or
mov
cltd
ja
out
pusha
mov
push
dec
sbb
cmp
cmpsb
pushf
mov
sbb
and
outsb
cmp
and
mov
mov
sbb
jb
scas
bound
scas
test
je
test
or
and
add
loopne
xlat
icebp
mov
xor
cmp
pop
mov
xor
or
mov
inc
push
orl
aad
jb
ss
loopne
pop
and
jno
sub
mov
clc
xchg
mov
inc
sahf
pushf
mov
popa
std
push
iret
push
or
into
pop
push
roll
or
popf
dec
sub
shll
pop
les
mov
xchg
adc
shl
mov
adc
frstor
mov
fstl
sbb
pop
sahf
fwait
sarb
imul
adc
xchg
cmp
loopne
and
aam
push
xchg
inc
mov
fsubp
xchg
pop
shl
jno
push
dec
fisubrs
mov
push
lock
dec
jmp
lahf
pusha
lods
sub
mov
dec
add
cwtl
sub
fadd
mov
inc
xchg
push
je
push
xchg
xchg
pop
cs
xchg
subb
xchg
cmpsl
add
clc
test
mov
in
sti
xor
loop
out
outsl
lret
xor
lret
adc
pop
or
cltd
mov
mov
jge
dec
andl
xor
jbe
adc
clc
idivb
push
mov
sahf
stos
and
jecxz
shlb
vmovlps
sti
inc
fcoms
leave
icebp
jmp
and
push
add
xchg
xor
mov
jbe
fsubrp
bound
mov
sbb
fwait
rorl
lock
fidivrs
xchg
xor
push
mov
add
iret
mov
xchg
idivl
inc
rep
mov
lret
loopne
dec
push
pushf
and
mov
sahf
mov
xchg
dec
inc
fidivs
lods
sbb
sbb
xor
call
hlt
jl
movl
fwait
xchg
sub
push
mov
shrl
push
ljmp
idivl
test
insb
repz
lods
gs
lret
iret
xor
dec
cwtl
js
dec
lret
pushf
push
shl
xor
popf
push
push
mov
pop
scas
pop
sahf
scas
mov
add
out
add
add
in
cmp
mov
mov
clc
shlb
sbb
arpl
mov
xchg
popa
out
ret
xchg
jmp
pop
push
sarl
insb
xor
cwtl
lea
outsb
xchg
sub
pop
test
gs
cmpsb
hlt
fimuls
popf
rcrb
clc
push
mov
mov
and
inc
hlt
in
or
sbb
hlt
jmp
pop
nop
mov
mov
fldenv
mov
scas
std
jp
lret
sub
jg
jns
int
inc
dec
in
int
mov
cmp
push
sbb
pop
xchg
lret
cmp
sub
push
pop
mov
xlat
pushl
inc
xchg
decl
iret
js
xchg
shll
out
and
xor
cmpl
cmp
rorb
adc
lret
add
clc
mov
in
jno
push
jmp
pop
movsl
lds
sub
orl
mov
jle
sahf
insl
push
add
push
outsl
mov
jmp
lea
push
lods
xchg
jne
dec
push
loopne
dec
push
fistpl
cltd
loop
sub
shll
and
scas
and
fildl
jno
daa
jge
je
std
mov
pop
stos
dec
sarl
add
sub
imul
je
mov
int3
pop
mov
sub
mov
mov
std
inc
xchg
add
cwtl
repz
dec
jp
cli
fists
push
sbb
xor
into
rolb
xor
xchg
adc
mov
js
push
ja
push
adc
mov
and
adc
jbe
insl
out
outsb
daa
xlat
push
xor
les
mull
fstpt
fs
lock
subb
mov
insb
xor
mov
lods
lahf
es
jle
les
cli
aaa
pop
push
xor
outsb
imull
adc
inc
mov
loopne
pop
fs
leave
pusha
cwtl
xor
and
lock
cmc
orb
pusha
rorb
mov
sub
xchg
xchg
pop
mov
push
daa
mov
outsl
add
fwait
call
fnsave
jp
sbb
inc
jae
arpl
popa
aad
xchg
sbb
sti
fisttpll
adc
inc
cli
ja
or
ljmp
into
sub
ret
inc
sahf
xlat
dec
mov
cld
xor
push
inc
dec
cmp
lahf
dec
int
pop
dec
insl
xchg
adc
lods
xor
xchg
jg
jg
adc
adc
cwtl
ds
lea
mov
cwtl
test
pop
and
sbb
cmp
xchg
push
lcall
xchg
shll
leave
shll
inc
jmp
or
mov
inc
mov
jl
sub
inc
push
push
mov
mov
outsb
shr
xrstor
push
lods
cmp
popa
jns
push
dec
pop
xor
mov
int
add
or
data16
jne
call
imul
mov
shrl
enter
pop
outsb
xchg
add
fwait
std
jnp
add
jo
sbb
mov
push
test
pop
fcmovne
push
adc
xchg
insl
in
mov
pop
jo
notl
dec
cmp
push
mov
in
loopne
mov
ret
cs
fisubs
fsts
mov
sti
inc
push
in
inc
jbe
mov
pop
lret
pop
bound
inc
cmp
jmp
in
sbb
iret
push
push
mov
and
or
unpcklps
add
and
and
cmp
in
add
cmpb
int3
in
adc
add
pop
xlat
push
jp
sub
sbb
push
push
int3
pop
cltd
leave
iret
daa
or
aas
in
ss
lds
out
pop
test
loopne
sbb
sub
cmpsb
push
push
xor
lds
or
sub
push
lret
ret
aaa
test
add
scas
inc
inc
inc
sub
mov
xor
mov
and
daa
test
cwtl
dec
add
fldenv
pop
int
stos
ljmp
imul
add
call
sub
test
inc
lock
fsubrs
aam
push
lcall
sbb
fidivrl
iret
das
mov
into
imul
xchg
sbb
lods
stc
pop
shll
sub
inc
scas
dec
outsb
mov
and
mov
xchg
or
push
out
xchg
ljmp
lock
imul
ret
pop
movb
xlat
mov
out
movsb
lahf
stos
add
inc
call
jmp
mov
scas
popa
loopne
inc
inc
push
add
jno
out
in
cmp
pop
adc
insl
lret
add
adc
mov
cwtl
clc
ss
leave
mov
nop
cmpsl
pusha
imul
pushf
outsl
dec
outsb
mov
outsl
cmpb
push
jle
fistps
enter
jl
cmp
les
cmp
fildl
inc
push
mov
lods
push
je
pop
pop
cmp
aam
xor
dec
in
mov
mov
arpl
fisubs
aas
imul
dec
xchg
in
mov
cli
add
lds
enter
jns
add
lret
cmp
sbbl
mov
std
add
stc
cmp
push
stos
mov
jo
and
out
sub
imul
das
jnp
mov
repnz
imul
lea
cmc
pop
sti
push
push
dec
inc
push
es
lret
mov
jmp
add
bound
mov
in
push
jb
cwtl
inc
and
sahf
shrl
and
mov
mov
aaa
and
xchg
dec
jo
xor
mov
jae
or
jbe
sub
fbstp
add
mov
mov
jle
insl
push
mov
inc
dec
mov
movsb
insl
adc
das
dec
adc
fdivrs
lret
mov
sahf
add
push
jo
mov
sbb
dec
mov
mov
mov
mov
es
push
imul
xorb
xchg
mov
ffreep
or
xchg
jbe
sbb
lcall
inc
sub
pop
call
sbb
nop
push
jecxz
push
std
pop
mov
popl
cltd
jno
and
pop
dec
cmp
jle
push
xchg
push
pop
pop
or
sarl
aad
dec
cmp
mov
cwtl
jecxz
sti
add
and
mov
lds
push
lret
mov
and
sbb
jns
popa
jo
insl
jmp
sbb
mov
repz
xchg
in
addr16
sbb
and
cmpsb
xor
js
rolb
sahf
pop
jne
xchg
imull
mov
popf
add
test
pop
pushf
jl
and
jno
jnp
mov
clc
fsubs
fmuls
test
push
xor
cmp
sbb
sti
cmp
mov
xor
pop
fdivrs
pop
outsl
sbbb
mov
pusha
fnsave
into
xchg
sbb
mov
mov
out
add
or
add
mov
andl
inc
sub
xor
cmpsl
pop
sbb
mov
sarb
ret
xchg
xorb
sub
hlt
xor
das
loope
loopne
out
jge
mov
rcrl
mov
mov
pop
cli
pop
mov
leave
adc
outsb
inc
pop
jmp
adc
inc
xlat
push
test
int
rolb
outsb
mov
jl
or
mov
fwait
cli
inc
jmp
fs
imul
cmp
adc
fwait
rcll
daa
add
jns
xchg
pop
cmp
push
hlt
dec
add
fisubs
push
cmp
xchg
xchg
mov
mov
xor
clc
and
adc
push
sub
push
aaa
stos
into
aas
sbb
lret
and
push
sub
arpl
jbe
or
into
shr
int3
xchg
loopne
or
fmuls
ret
or
ds
sub
ret
mov
stos
xor
and
outsl
out
ret
pop
push
xor
int
lahf
add
test
mov
imul
popf
inc
arpl
push
mov
ja
in
or
jle
adcb
enter
mov
scas
xor
and
ja
cltd
lcall
mov
mov
ret
stc
jp
testb
inc
adc
dec
lds
or
pop
lret
sub
ret
sbb
out
sub
nop
ja
test
or
test
faddp
push
lock
mov
mov
mov
outsl
sub
cmc
xor
dec
sbb
sub
mov
repz
lahf
in
xor
add
or
enter
test
push
out
xchg
test
sbb
rorl
jecxz
gs
pop
pop
loop
call
sbb
mov
pop
adc
mov
pop
push
jb
repnz
and
lret
add
sub
pop
rcl
and
daa
and
pop
idiv
xor
adc
ret
outsb
call
fdivs
mov
sub
jl
lods
jp
xchg
and
cmp
cmc
in
fiadds
push
fwait
cmp
or
jne
sbb
fistpl
enter
cmp
xchg
cwtl
inc
adc
nop
xor
adc
push
xor
inc
sub
daa
arpl
push
cld
iret
data16
or
sub
sub
mov
mov
aad
add
xchg
add
call
xchg
sub
call
leave
into
push
xchg
imull
loope
mov
enter
idivl
mov
adc
shll
inc
movhps
popa
divb
inc
aaa
jae
mov
mov
sbbb
dec
imul
push
lret
and
mov
mov
mov
sti
std
fstps
inc
outsl
dec
loop
mov
std
sub
mov
jno
sbb
fsubs
js
int
rcr
lock
popf
rolb
leave
jne
add
or
dec
mov
mov
sbb
das
aaa
pop
fdivp
in
mov
push
pop
ss
in
daa
das
fs
jb
xchg
push
ja
sahf
fisubs
cmc
pop
popa
fcmovnbe
popf
nop
mov
iret
dec
fs
cli
call
mov
and
dec
repnz
imul
int3
test
sub
jmp
or
cmp
push
jo
cmp
mov
jle
into
aam
and
jecxz
cli
jge
test
mov
mov
shlb
jp
sahf
push
add
test
xchg
lret
cmp
out
adc
inc
lcall
scas
mov
dec
in
xor
mov
enter
jecxz
mov
dec
mov
add
adc
imul
pusha
pop
jno
sub
jo
xchg
mov
out
lods
daa
mov
aaa
and
outsl
test
push
lock
xlat
setl
jmp
pop
shlb
out
mov
lds
xchg
mov
jl
mov
or
cmpsb
mov
pop
int
dec
rcrl
insl
cmc
test
sbb
icebp
add
inc
js
test
jl
sbb
mov
mov
lahf
mov
xchg
push
mov
popf
adc
in
lock
xlat
add
ljmp
stos
xor
add
jns
pop
call
imull
in
jbe
ret
add
rcrl
adc
repz
aas
out
jns
dec
xchg
mov
dec
dec
cwtl
lahf
rclb
dec
or
test
pop
mov
mov
stc
ret
adc
repz
xchg
gs
shr
out
test
aaa
mov
and
popa
fs
cmp
shll
insl
jle
ja
jno
cmp
loop
lea
inc
or
ja
mov
pop
jle
js
and
xchg
mov
sti
movsb
adcb
mov
inc
add
xlat
mov
clc
jmp
mov
pusha
or
aas
loop
pop
out
rcrl
mov
cmp
fildll
xor
leave
adc
mov
mov
pop
jb
popf
into
mov
fidivl
add
hlt
cmpsl
gs
sbb
cmp
jge
out
push
sub
jae
test
xchg
pop
jae
imul
xchg
push
aam
stc
call
jle
fucomp
cmc
pusha
or
mov
xor
jne
dec
es
icebp
arpl
jo
jne
cmpsl
adc
pop
sbb
dec
lret
ljmp
sbb
repnz
adc
les
out
fsubs
ret
lahf
pop
fstp
add
xchg
mov
cld
mov
test
sbb
dec
sbb
mov
mov
inc
push
aaa
outsb
leave
sahf
jno
data16
cli
aad
lods
into
inc
sub
mov
popf
ficompl
mov
cmp
decb
mov
sbb
jg
fwait
lret
sub
cmp
cmc
mov
dec
stos
sbb
add
mul
xchg
xor
cs
xor
add
mov
sti
cs
sub
mov
xchg
mov
lahf
push
push
lods
mov
test
out
out
push
sbb
cmp
and
pop
sub
std
ljmp
fsincos
jp
lods
sub
xor
mov
stos
lcall
aas
adc
movsl
push
shr
in
bound
inc
clc
xor
rcl
loope
push
out
mov
pop
cmp
ret
xchg
mov
pop
pushf
mov
nop
jl
lea
jmp
test
cmpsb
arpl
xchg
push
lcall
cwtl
inc
shrd
cltd
call
cmpsb
pusha
lods
insb
add
jecxz
mov
and
mov
scas
mov
mov
fdivr
in
xchg
mov
jo
cmp
xchg
lahf
test
fdiv
adc
or
test
or
cmp
shlb
push
inc
pop
lahf
call
pop
and
jb
test
movsl
fbld
popa
or
xchg
fcompl
cmc
mov
aam
inc
cmpsl
sahf
cmpl
xchg
mov
sbb
popl
lock
insl
xor
inc
insb
or
xchg
mov
daa
or
fwait
les
mov
xlat
cmp
idivb
add
fisubl
jne
insb
cmp
icebp
daa
mov
out
xor
mov
cwtl
icebp
inc
ljmp
outsb
adc
mov
sarl
inc
pop
add
xchg
aas
test
jge
push
push
clc
fisttpl
psadbw
fimuls
dec
cltd
addb
outsl
adc
mov
clc
and
lods
fwait
sbb
mov
lock
mov
mov
imul
popf
sbb
insb
jb
jmp
lods
shll
scas
inc
add
incb
iret
xor
je
fwait
subl
cmp
aas
push
stos
push
jmp
dec
jmp
push
cmpsb
sbb
dec
mov
ss
jl
mov
mov
pop
or
sub
push
and
jmp
in
in
int3
testl
or
jne
xchg
pop
xchg
sub
add
rorb
call
subl
jecxz
mov
nop
cmp
out
mov
stos
insl
andl
scas
repz
jge
loop
xchg
pop
jns
adc
aaa
ja
dec
imul
pop
or
xor
and
xor
aam
repz
xlat
xchg
cmpsl
pop
pop
jbe
dec
xor
and
jo
aam
out
daa
aam
lahf
mov
mov
addl
addl
in
dec
mov
rclb
loop
jle
pop
inc
mov
imul
jns
fdivl
or
and
adc
cmc
xor
cmpsl
push
cmp
inc
ss
mov
sbb
xor
pop
lods
sub
ss
pop
stc
add
fldt
lods
pushf
push
aam
fldt
jle
insb
xorl
outsl
fnstcw
mov
jns
xchg
movsb
jmp
and
ljmp
rorb
ret
loope
dec
cmp
or
jmp
adc
mov
cmp
push
push
fwait
add
es
push
leave
shll
in
mov
int
xchg
das
stos
addb
lea
add
gs
hlt
push
mov
ja
inc
add
bound
xchg
inc
lock
mov
xorb
mov
pop
dec
gs
mov
mov
cli
push
lret
imul
mov
cld
add
out
shl
push
out
sub
jp
sub
jb
cmp
jge
mov
dec
mov
std
mov
jne
les
mov
inc
mov
enter
in
fwait
call
jbe
rorl
cmpsl
xor
outsl
pop
xchg
data16
cmp
rclb
roll
sti
mov
mov
xor
push
adc
repnz
push
insl
test
xchg
ret
cmp
xchg
push
cli
clc
push
or
mov
mov
outsl
inc
sbb
mov
jbe
sbb
push
sub
cli
xor
xchg
adc
mov
or
out
jmp
arpl
stos
push
adcl
cmp
xor
movsl
enter
sbb
stos
push
cmp
nop
nop
lods
sub
mov
add
shrb
jecxz
dec
sbb
sbb
lods
rolb
add
stos
cltd
repnz
xor
scas
add
xlat
xchg
cmpsl
push
ret
inc
shll
fwait
xchg
or
sahf
mov
adc
ret
test
mov
imul
or
mov
ret
mov
mov
les
lret
cld
cmp
inc
xchg
pop
mov
lds
scas
xor
shrl
nop
insb
xchg
out
inc
pop
xchg
jne
adcb
lret
les
mov
clc
fsubl
xchg
or
data16
xlat
mov
out
mov
dec
sub
shlb
aad
cmc
call
sub
add
add
cmc
pop
adc
imul
ss
add
jecxz
dec
cmpsl
sub
pop
jp
bound
fwait
iret
fwait
negb
mov
xorb
and
xlat
cmp
fcoml
xchg
aas
pop
arpl
loopne
push
adc
dec
and
inc
in
xlat
sbb
lahf
lods
cmpsb
movsl
lods
hlt
push
cs
jl
rcll
fcomi
fsubr
add
outsb
jp
and
loopne
jnp
test
jne
pop
ret
dec
xchg
sahf
pop
jae
add
shrb
jp
fwait
stos
dec
and
aam
dec
add
xchg
bound
cld
ret
sub
cmpsb
movsl
std
xor
mov
jmp
repnz
repnz
loopne
pop
sbb
icebp
js
sbb
sub
xor
popf
es
das
adc
cmpsl
pop
add
aas
mov
sub
adc
mov
mov
mov
jns
mov
push
pusha
mov
mov
push
jb
push
adc
leave
dec
sbb
mov
mov
std
jp
call
subb
push
outsl
in
fst
and
mov
push
push
inc
ror
loopne
push
popa
repnz
xor
int3
mov
jl
cmp
or
loope
xchg
adc
ljmp
arpl
sub
stc
mov
mov
mov
cli
adcb
inc
mov
push
pop
fnstcw
out
xchg
leave
cli
mov
lods
pop
lods
pop
in
fcom
shlb
test
imul
lcall
mov
mov
sbb
mov
xchg
mov
jo
adc
jne
sbb
xor
gs
mov
dec
mov
loope
jl
test
clc
jno
arpl
sbb
jmp
fidivrs
cli
xlat
je
mov
push
pop
mov
or
ds
jns
jg
loop
xchg
insb
scas
into
xchg
orl
ss
cmpsb
xor
adc
test
inc
jle
ss
nop
jno
int
add
fstps
pushf
mov
daa
and
fwait
push
lods
jp
mov
in
cld
adc
mov
fistpl
pop
scas
iret
pop
popa
inc
xchg
insl
mov
mov
or
adc
js
pop
in
dec
lret
pop
mov
bound
cmp
rol
movsl
or
dec
and
popa
pop
lret
pop
or
sub
pop
test
shrl
mov
std
mov
mov
inc
notl
flds
pop
jnp
sbb
mov
and
hlt
cmp
shlb
jnp
adc
mov
mov
xchg
dec
jns
xor
push
push
clc
mov
dec
add
pop
mov
cmpsb
pusha
xor
in
leave
int
fs
fildl
sub
push
sbb
sbb
jne
xor
pop
adc
mov
mov
stos
pop
aaa
jo
dec
dec
mov
xchg
bound
mov
daa
cmpsl
adc
pop
stos
mov
ss
sahf
popa
adc
mov
leave
ljmp
xchg
arpl
pop
leave
mov
sarl
pusha
mov
push
stc
push
cmp
test
pop
in
test
adc
cmp
sub
add
lret
adc
ret
stc
cld
jp
dec
jmp
push
iret
fdivrl
or
dec
and
cltd
dec
addb
dec
insb
test
pop
add
aas
cmp
dec
into
ret
and
adc
test
pop
mov
push
dec
mov
imul
test
movsl
stos
dec
cli
xchg
xchg
cli
mov
movsb
xor
jne
cmpsb
and
push
sbb
sti
push
or
or
outsl
mov
sti
sbb
mov
sub
ds
cmp
jns
sbb
mov
outsl
les
cltd
int3
xor
inc
insl
mov
sub
rolb
int3
out
mov
inc
lcall
or
sbb
int3
into
cs
jb
scas
lods
rorl
and
scas
jne
adc
shrb
pop
popa
push
ret
int3
scas
dec
mov
xchg
cmp
shr
in
mov
or
jmp
pop
vpackusdw
fs
in
lds
imul
mov
jmp
cli
ret
pop
movsl
negb
sub
lcall
xchg
add
xchg
cmp
aam
gs
mov
jae
aas
test
dec
sbb
sbb
mov
fnstcw
add
bound
mov
cmp
icebp
out
mov
out
mov
outsl
aas
sbb
icebp
cltd
mov
outsb
adc
les
or
sbb
push
cmc
xchg
shrb
iret
out
loop
arpl
movsb
out
lcall
mov
mov
cwtl
leave
inc
inc
gs
add
sbb
out
inc
daa
inc
adcl
sbb
dec
stc
push
add
mov
fsubrs
outsb
cltd
mov
cld
cmp
jbe
pop
fcompl
movsl
out
cs
xchg
stos
sub
mov
xchg
fdivp
fsubr
dec
sbb
and
outsb
jbe
cmpsl
aas
std
lods
je
cmp
xor
jbe
imul
inc
mov
iret
jae
jg
sarb
mov
and
out
pop
lahf
push
jno
in
mov
push
je
scas
xor
inc
imul
cwtl
xchg
iret
push
out
push
push
jnp
adc
and
push
jmp
lcall
ror
push
jge
pop
ret
xchg
pop
clc
nop
xchg
les
add
adc
fcoml
sub
mov
and
add
cmpl
jecxz
xchg
test
jmp
ss
or
arpl
lret
test
add
incb
cmp
in
xor
addr16
xchg
arpl
sahf
cmp
add
ret
jno
push
in
mov
dec
daa
pop
movsb
insl
cmpsl
cmp
adc
push
dec
pop
inc
xor
mov
js
addl
addr16
int
dec
push
mov
outsb
loop
aas
sbb
in
sub
arpl
lods
fistpll
cltd
lods
leave
mov
dec
sub
fnsave
shl
shll
jg
ja
enter
call
pop
int
test
mov
mov
jnp
xchg
inc
cmp
adc
pop
outsb
xchg
cmpsb
out
out
and
add
jns
enter
out
insl
popa
mov
fs
sub
or
add
xchg
fdiv
or
sbb
scas
cwtl
arpl
mov
lods
js
ret
out
push
leave
or
popf
adc
cmp
jbe
mov
push
cmp
ja
test
cmpsb
xor
shrb
add
hlt
loope
or
and
cmpl
aam
mov
ret
and
xchg
dec
lock
daa
cmovle
push
ret
loop
in
scas
insl
jmp
ja
dec
fs
roll
xor
xchg
fcomip
sbbb
pop
fs
sbb
lea
and
ss
in
mov
jb
fwait
stos
xchg
push
or
mov
sbb
lds
insb
das
or
movsl
fwait
add
cmc
fbstp
fdivrl
inc
mov
cmp
cmpsl
and
jnp
push
dec
lcall
jno
mov
inc
inc
loope
rcrl
adc
int3
mov
push
fistl
cs
push
ds
jae
js
daa
dec
xchg
insl
xchg
ljmp
arpl
inc
add
mov
adc
jo
cwtl
inc
jo
gs
popa
sbb
push
sub
and
jecxz
or
mov
jne
test
lock
cmpl
mov
inc
add
jb
xlat
xchg
mov
mov
lods
jp
insb
push
cmc
push
add
dec
adc
jae
cmp
leave
mov
or
repnz
insl
in
enter
out
mov
dec
push
cs
loopne
sbb
pop
xchg
adc
clc
add
mov
ja
push
movsl
pop
enter
scas
and
out
bnd
lods
cmp
leave
leave
loop
aaa
cmp
xchg
sbb
arpl
cmpsl
mov
movsl
cmp
xor
arpl
cmp
movsl
ds
push
mov
out
mov
test
add
lahf
xor
scas
xchg
mov
jge
loope
andb
cmpsl
or
out
bound
xchg
push
icebp
sbb
sbb
cld
rclb
sub
inc
mov
add
and
jl
xor
scas
les
pop
and
into
sbb
pop
in
jmp
mov
sbb
dec
rep
inc
hlt
js
hlt
mov
jo
sub
mov
pusha
jecxz
rolb
out
or
sbb
push
push
lea
push
mov
push
pop
adc
fcmove
test
jns
mov
sub
daa
outsl
stos
daa
insl
mov
hlt
outsl
mov
mov
fs
mov
das
push
jae
jp
cmpsl
pop
or
popf
lods
mov
mov
adc
cmp
fwait
data16
int
cwtl
ret
scas
or
lods
jno
adc
testl
push
jge
push
out
xor
incb
mov
ss
add
leave
in
pop
pusha
jp
cli
roll
mov
dec
decl
push
adc
push
cmp
adc
mov
lret
sbb
stos
shl
push
test
cli
orl
and
push
test
cmpsb
shlb
push
pop
mov
add
push
test
daa
mov
lahf
jno
pop
jae
je
ret
pop
or
je
lock
push
mov
dec
fld
xor
mov
sbb
cmp
mov
cmp
psllw
test
cmp
mov
pop
scas
fisubl
loop
jecxz
cmp
lods
stos
sbb
sub
cmp
push
xlat
mov
es
mov
ja
push
in
icebp
out
pop
dec
rcll
push
fs
adc
or
dec
mov
and
jnp
rcr
ja
js
jge
or
jbe,pt
sbb
outsb
dec
xchg
mov
scas
mov
adc
mov
xchg
popa
adc
xchg
sbb
adc
idivb
sub
xchg
sahf
jecxz
push
lahf
rcll
mov
sbb
das
movsb
add
sahf
add
pushf
lea
xor
xchg
bound
mov
aas
adc
mov
sahf
in
sbb
jno
pop
mov
std
cmp
add
mov
push
pop
jmp
inc
or
add
mov
push
insl
int
xor
adc
jg
ror
mov
lret
sar
inc
push
mulb
fcomps
add
in
shl
sub
data16
daa
cmp
jl
sbb
xor
and
loopne
call
fdivl
loopne
loope
push
cmp
repnz
pop
rcll
cmp
iret
push
loop
jge
stos
add
xchg
cmp
dec
xchg
jmp
decl
sbb
ss
pop
mov
and
adc
xor
pop
sbb
xchg
idivl
jo
movaps
add
xchg
sti
dec
sub
out
outsl
fwait
incb
xor
sbb
sar
inc
inc
dec
sub
je
call
aas
dec
fimull
cli
pop
xlat
dec
dec
mov
cmp
cld
aas
ret
lcall
or
inc
xor
lds
xchg
sbb
add
add
fstpt
and
lahf
inc
das
lods
xchg
xor
pop
mov
jecxz
xchg
add
data16
push
fmuls
mov
out
dec
mov
repz
sbb
ret
cli
xchg
inc
or
aas
cmp
and
sub
mov
cwtl
imul
rcl
adc
push
mov
repnz
inc
stos
fwait
ret
mov
jnp
ret
ret
mov
mov
loop
pusha
or
push
pop
fs
out
sbb
wbinvd
out
adc
sub
fidivs
sbb
jo
frstor
add
iret
add
cmp
sub
jno
lret
clc
frstor
add
push
push
fwait
lods
orb
mov
mov
jns
inc
pavgw
scas
and
jmp
push
dec
insl
setl
xchg
jne
enter
insb
nop
std
sbb
jl
pusha
ljmp
push
pop
xchg
jecxz
mov
gs
imul
xor
or
pop
imul
pop
sub
lds
mov
cmpsl
int3
ja,pn
push
enter
mov
out
dec
movsb
gs
fnstcw
mov
and
negl
mov
inc
push
and
popa
xor
xchg
fmulp
mov
xor
push
dec
sarl
call
sbb
mov
sub
sahf
negl
aaa
or
out
ficoms
or
cmp
mov
sahf
push
rcr
test
dec
es
popf
add
loopne
mov
push
popf
pop
loope
inc
add
shrb
arpl
adc
jae
imul
fwait
mov
clc
mov
inc
adc
jp
pop
loop
cmp
xchg
iret
xchg
pop
mov
xchg
pop
dec
mov
mov
mov
xchg
out
sti
cmpb
lock
les
dec
lock
jg
or
lods
movsl
pop
movsb
dec
sub
sub
pop
addb
repz
scas
and
lsl
jl
je
xchg
fs
mov
mov
dec
dec
xchg
xchg
pop
pushf
sub
lahf
adc
shlb
pushf
mov
loopne
test
push
xchg
mov
mov
push
outsb
ret
test
and
pop
test
repnz
push
insb
fistpl
call
fdivl
xchg
push
clc
xchg
push
out
sbb
js
sets
xor
or
mov
mov
cmp
mov
rcr
sub
jp
jl,pn
ret
sbb
or
leave
sarb
add
push
popa
inc
enter
sbb
das
mov
push
cmp
or
mov
xor
jno
or
mov
and
scas
insl
push
mov
and
int
jbe
mov
jge
xchg
cmp
in
fs
outsb
shll
fwait
sbb
xlat
sub
lock
dec
in
dec
jo
mov
sub
inc
adc
test
sbb
imul
fs
mov
ds
popa
popf
push
jne
es
push
add
imul
xchg
shl
rcl
ljmp
dec
ds
sbb
out
nop
int
xor
sub
fwait
jp
in
and
inc
sub
push
nop
addr16
xchg
movsl
leave
cmp
lea
mov
mov
jbe
push
test
cltd
dec
push
ljmp
cmp
fimull
ss
mov
inc
imul
je
sti
xor
int
sub
and
mov
and
jb
jl
or
repz
adc
push
sbb
cmp
inc
or
xchg
adc
jns
ja
mov
jbe
adc
inc
pop
inc
call
push
cmp
repz
repz
test
cmpsl
xchg
mov
in
rcrl
std
add
sub
daa
outsl
out
cmp
mov
pop
icebp
jnp
jno
push
adc
out
inc
cmp
sti
sbb
or
lret
int3
sub
fisubrl
out
sahf
dec
movl
clc
je
dec
daa
rcrl
lods
nop
and
sbb
inc
dec
test
and
inc
cmpsl
mov
jmp
adc
test
ret
lcall
push
inc
mov
pop
pop
lea
dec
imul
movsl
xchg
jl
lods
pop
jns
ret
int3
xor
fwait
mov
aam
repnz
inc
pop
lcall
lcall
std
add
fstpt
rolb
sbb
or
loope
xor
cs
cmp
cld
pop
mov
push
fcompl
sub
dec
lcall
leave
pop
bound
aad
nop
or
test
push
lock
loop
jecxz
je
test
pop
shr
xchg
mov
mov
in
fstpl
adc
stos
mov
das
push
pop
jb
jo
jg
rolb
out
jb
push
jecxz
mov
fdivrs
xchg
frstor
arpl
in
testl
xor
push
xchg
xor
shlb
lret
lods
mov
jns
push
ficompl
or
data16
inc
stc
sub
or
cli
inc
adc
stos
out
inc
sbb
fadd
stos
icebp
xchg
sbb
fwait
cmp
jbe
int3
mov
rcrl
pushf
inc
rclb
pop
imul
jg
rcr
bound
pop
or
mov
push
cmpsb
cwtl
xor
mov
jg
push
outsl
cmpsb
roll
or
bound
add
pop
andb
inc
shll
into
outsl
push
mov
lock
ja
pop
mov
inc
andb
insl
push
lret
incl
in
pop
in
ljmp
in
mov
mov
xchg
mov
mov
std
push
test
jae
shlb
stc
add
es
aam
fcoml
clc
xor
pop
scas
push
test
or
adc
adc
hlt
cmp
xchg
jae
inc
scas
sbb
and
int3
ds
sbb
jmp
dec
pop
xchg
rcrb
adc
or
in
sub
xor
sub
cld
repnz
imul
dec
sbb
stos
adc
lock
fldl
pop
jae
jmp
dec
in
pop
pop
jns
pop
test
jnp
adc
adc
icebp
das
pop
cmc
jle
xchg
aaa
aam
scas
lret
movsb
mov
inc
pop
aaa
cwtl
jmp
cmp
sub
push
cmp
push
leave
pop
test
es
cmp
or
pop
inc
shrb
test
dec
pop
adc
fwait
mov
fildll
mov
data16
pop
mov
shl
stos
inc
in
mov
xor
cli
sbb
dec
push
scas
mov
sbbb
push
mov
in
adcl
cli
hlt
mov
push
sahf
out
xor
mov
mov
outsl
loope
lods
mov
pop
aad
xchg
xchg
loope
xchg
lret
and
dec
fdiv
push
sbb
aaa
jmp
xchg
or
adc
cmp
xor
mov
out
adc
add
outsl
adcl
sbb
test
xlat
mov
aaa
mov
ret
into
js
mov
nop
mov
pxor
push
add
mov
test
loope
mov
int
sbbl
mov
insl
jns
in
mov
add
dec
sbb
cmpsl
or
insb
out
stos
xlat
shrb
mov
test
cli
lret
setp
pop
dec
cmova
xchg
repnz
adc
inc
jl
xor
pop
loop
mov
mov
popf
add
mov
sub
in
aad
or
pop
sbb
mov
in
lods
dec
mov
mov
fsqrt
stos
fsub
xor
ja
mov
in
mov
mov
mov
iret
fistpl
jnp
xchg
pop
cmpsb
test
mov
inc
lods
jecxz
pop
push
xchg
sub
push
cmp
push
push
outsb
fnstsw
xor
out
in
sbb
push
dec
movsl
imul
scas
cltd
pop
repz
fstps
mov
cmp
fucomi
pushf
inc
mov
pusha
in
out
xchg
mov
push
xchg
sbb
lahf
cmp
std
cltd
dec
std
popa
dec
inc
jecxz
lods
mov
sbb
popa
sub
dec
aam
and
push
popf
je
es
pusha
sbb
int
pop
ret
xchg
decb
lea
or
or
xchg
ds
leave
xor
jo
mov
pop
and
mov
test
outsl
jmp
jp
jo
data16
mov
mov
sbb
or
loop
scas
stos
data16
lahf
popa
adc
lods
mov
lahf
mov
pop
mov
or
jp
add
xchg
xorb
ja
mov
ljmp
aaa
out
pop
out
test
jl
sub
loope
leave
jg
loop
jne
rcll
inc
xchg
mov
lock
outsb
inc
cs
and
pusha
cmp
loop
dec
icebp
or
cmp
lock
add
gs
mov
test
outsb
mov
pop
lock
out
xchg
cwtl
cld
adc
pop
leave
iret
addr16
fnstsw
out
out
popa
fwait
lret
jmp
jns
mov
xchg
push
popf
fstp
fsts
push
pop
xchg
ret
icebp
mov
movsl
xor
and
call
jns
imul
cmp
sub
test
mov
push
stos
add
insl
mov
scas
jmp
pop
dec
fists
cmpsb
sbb
jns
loope
adc
in
xchg
xor
nop
insl
movsl
xor
frstor
xchg
dec
jmp
xor
dec
push
push
cmp
int3
fistpl
das
repnz
ljmp
call
xchg
jl
or
in
aam
xor
sarb
fildll
bound
ret
in
mov
aaa
ds
pop
cmc
mov
lods
push
sti
fldenv
aam
scas
mov
nop
ret
mov
sub
mov
and
push
dec
add
add
bound
cmp
xor
xor
outsb
or
ret
add
fs
insl
ret
cmp
sqrtps
call
or
push
push
or
or
cmp
cwtl
js
pop
pop
sbb
cltd
call
or
sbb
aaa
into
push
cmc
lea
das
dec
ret
lods
scas
and
shr
mov
mov
test
jnp
daa
popf
out
mov
jns
cmp
lcall
pushf
scas
cwtl
loope
mov
push
xbegin
mov
push
mov
and
xchg
adc
fimull
mov
jae
mov
das
test
dec
sbb
mov
movsb
adc
sub
fbld
lahf
fxtract
mov
xchg
push
aas
pop
addr16
xchg
jge
dec
mov
xchg
orb
subb
add
mov
jno
dec
jno
jns
out
mov
ss
mov
ret
ss
test
cmp
incb
gs
inc
jb
inc
imul
and
insb
or
xor
out
xchg
int
cmp
push
jp
add
insb
in
and
out
xor
iret
mov
add
mov
ss
les
adc
insb
sub
jle
mov
testb
in
pop
cli
dec
jne
dec
sarl
lcall
dec
rorl
into
int3
jmp
mov
insl
mov
dec
push
aaa
fs
fldcw
cmpsl
pop
lock
push
inc
or
lea
enter
jge
adc
mov
adc
dec
scas
jecxz
popf
pop
sbb
ss
sbb
imulb
or
jecxz
inc
std
in
mov
aaa
lea
sub
push
cmp
lret
pop
mov
lahf
or
mov
loopne
or
hlt
inc
das
or
aad
push
xchg
mov
fs
ljmp
addr16
pop
jge
push
xchg
in
out
subl
loope
popl
sub
lds
rorb
xchg
iret
adc
push
iret
push
insb
insl
jg
mov
cmp
int3
aam
push
push
add
dec
pop
add
xchg
push
xchg
subb
push
loope
int
xor
xchg
xor
mov
cwtl
and
or
outsl
pop
jns
cmp
inc
das
jge
sbb
gs
push
jle
inc
repz
shlb
pop
fstl
sar
pop
mov
push
adc
and
andl
sbb
sub
imul
out
in
aad
xchg
idivb
mov
and
mov
cli
or
std
ds
mov
mov
loopne
movb
push
inc
xchg
mov
jbe
mov
testl
xchg
cmp
xchg
adc
adc
pop
shlb
sub
xchg
pop
inc
out
push
fldenv
jb
lds
add
in
pusha
inc
mov
movsl
mov
pusha
sbb
sbb
fsubp
fwait
cmp
mov
lods
cmp
pop
cmp
cmp
in
mov
mov
cmp
and
cmp
jmp
jmp
and
lods
jge
xor
mov
push
cltd
movb
mov
loopne
dec
loopne
movsb
out
lret
fildll
jle
divb
jmp
jl
in
mov
mov
pop
mov
mov
jno
shll
popf
adcb
inc
inc
aaa
insl
loopnew
push
out
xchg
sub
scas
aad
call
adc
adc
loope
xorl
int
ret
scas
or
aam
add
xor
leave
incb
lock
subb
icebp
outsl
cmpsb
sub
movsb
add
push
push
movsb
lock
shrl
in
pop
popf
incb
in
push
int
mov
adc
xchg
mov
lahf
jecxz
bound
stc
push
ljmp
mov
push
xchg
bound
or
addr16
inc
popl
inc
cltd
xchg
ss
testl
dec
and
jl
or
imulb
fmulp
push
push
adc
or
imul
iret
test
hlt
mov
sbb
xchg
mov
push
popa
les
andl
jno
xor
pop
inc
and
jecxz
popf
cmpl
fsubrs
mov
insl
hlt
jo
sub
leave
xorb
cmc
sub
repz
in
adc
pop
adc
sub
push
push
adc
lret
jp
dec
add
lcall
movsb
pop
add
mov
xor
push
cmp
pop
cmp
sahf
cmp
pop
jbe
cmc
pop
add
sti
add
jmp
dec
sub
jbe
dec
stos
bound
add
mov
add
gs
mov
movsb
scas
or
int3
cmpsb
mov
pusha
sbb
xchg
mov
stos
push
out
pop
out
mov
leave
imul
mov
sbb
mov
mov
lret
and
shrl
xorb
sub
jge
sahf
ret
fsubrl
into
shl
leave
faddl
shll
insb
and
pusha
or
cmpsb
inc
mov
out
adc
in
sub
sub
push
js
cmp
loopne
in
scas
pushf
fcoms
imul
pushf
arpl
inc
loop
sbbl
test
add
cs
cmpsb
mov
in
add
mov
jae
sbb
dec
sub
out
fstps
xchg
test
dec
cltd
stos
lods
mov
jnp
imul
inc
lock
repz
sub
gs
testb
icebp
sbb
test
pop
int3
popa
inc
repz
ds
xchg
in
mov
test
in
lea
dec
and
xchg
popf
out
and
sub
or
call
pop
xor
mov
subb
enter
dec
mov
mov
push
lods
sub
scas
or
lea
mov
inc
xlat
jbe
xor
push
push
mov
mov
ljmp
ja
enter
push
push
test
xchg
adc
inc
push
adc
mov
mov
inc
fildl
jo
roll
lahf
loop
xor
ficoms
mov
ficompl
jb
pop
ret
cmp
rcrb
nop
xchg
jo
out
pop
pusha
push
add
adc
push
lahf
sub
shl
test
inc
mov
fs
inc
jbe
addr16
dec
push
loop
inc
scas
cltd
mov
mov
addl
ror
dec
jbe
mov
xor
xchg
mov
cmp
and
mov
and
xor
jg
ret
lret
jae
mov
sbb
into
jb
lds
cmpsb
mov
mov
insb
cld
aam
jp
gs
data16
ret
int3
adc
mov
jns
test
es
push
dec
fcoms
fs
jp
adc
clc
pop
rcll
adc
inc
or
fs
pop
jb
outsl
cmp
inc
sub
dec
mov
cltd
or
lock
pop
outsb
aas
shrl
mov
adc
inc
bound
pop
and
xlat
retw
out
jmp
cmpsb
mov
push
mov
dec
dec
js
hlt
dec
stc
enter
in
or
scas
fistps
xchg
leave
rcr
xor
lahf
pop
or
int
xlat
and
dec
push
sbb
leave
sbb
enter
rcr
int3
pop
dec
and
fildl
sti
fstps
rorl
into
imul
mov
adc
into
aad
ds
adc
sbb
imul
es
sbb
insb
out
push
push
pop
popf
cmp
ret
push
and
or
das
sub
sub
rcl
iret
mov
xor
pop
cmp
mov
push
or
fbstp
mov
mov
or
xlat
out
adc
loopne
xor
xchg
inc
into
xor
sbb
addr16
mov
ret
jo
mov
dec
adc
lods
xchg
pop
imul
mov
leave
add
mov
popf
hlt
sub
mov
incb
push
sub
icebp
xor
fcmovne
pop
repnz
xchg
cmc
pop
imul
xchg
stc
repz
mov
test
jecxz
xchg
sub
push
mov
rcr
in
aas
cmpsl
pusha
sbb
aad
orl
shll
and
lahf
leave
ss
test
dec
xchg
cltd
sahf
cli
dec
sar
cld
sti
xchg
mov
mov
insb
push
mov
pop
dec
jecxz
arpl
insb
aaa
cmp
ljmp
ss
imul
dec
fdivl
cltd
lods
mov
into
sub
mov
test
mov
jmp
fistpll
push
addb
addl
push
adc
jb
mov
jb
and
sahf
push
insb
subb
leave
inc
xor
stos
test
mov
js
mov
mov
xor
cmp
out
ror
push
mov
mov
mov
add
enter
mov
iret
lret
and
test
adc
xchg
in
inc
and
lds
mov
push
mov
arpl
test
mov
pop
mov
jns
push
sbb
add
lcall
jle
loop
fs
dec
cmp
pop
ljmp
out
lods
sbb
or
jmp
repz
push
lods
jl
clc
push
cs
movsb
cmpsb
or
mov
sbb
mov
int
mov
test
push
xchg
cltd
xchg
insl
aam
sahf
test
add
pop
mov
sarb
sti
add
push
les
subl
xorb
imul
mov
clc
sbb
fcoms
mov
movsb
pop
jmp
inc
push
and
sbb
shlb
lock
xchg
and
pop
lea
test
adc
xorb
pusha
loopne
inc
icebp
pop
pushf
scas
imul
jp
test
in
movsb
jnp
cwtl
sub
sbb
cmp
inc
mov
inc
mov
ss
xchg
lea
aad
aam
nop
insl
movb
in
dec
mov
sbb
push
nop
lods
inc
pop
popa
cmp
push
nop
mov
arpl
out
scas
inc
sub
sub
arpl
lret
scas
push
adc
inc
fisubrs
aam
repnz
jge
pand
xchg
jnp
or
std
mov
xchg
repz
add
adc
addr16
loope
mov
adc
movsb
mov
cmp
xchg
pop
out
fiadds
lock
scas
fstps
mov
mov
cmpsb
add
addr16
add
lret
sbb
push
lcall
dec
daa
cmp
shr
xor
xchg
dec
and
adc
xchg
pop
or
mov
cltd
mov
cmp
js
add
sbb
stc
mov
popf
mov
pop
push
in
sub
mov
pop
jns
mov
mov
dec
rorl
test
mov
sub
mov
fwait
cmc
pop
mov
xor
mov
inc
inc
shr
outsb
push
and
push
cwtl
inc
add
or
lods
xchg
mov
mov
ja
lret
lea
movsl
mov
out
jp
add
or
ror
and
mov
mov
push
push
repz
inc
inc
lret
lds
xchg
sti
inc
int
cmp
pop
lea
push
mov
inc
xchg
mov
imul
mov
or
and
pushl
jnp
imul
test
sahf
push
stos
pop
fimuls
ret
jb
pop
xchg
sub
movsb
adc
scas
push
inc
jmp
into
rcr
sbb
aam
lahf
and
mov
aam
movsb
jmp
lods
repnz
mov
push
lcall
jnp
dec
sbbb
xor
pop
inc
and
pop
add
mov
mov
cmp
or
nop
stos
add
or
ret
bound
fmull
add
mov
lahf
dec
mov
push
mov
daa
daa
adc
decb
inc
out
jb
jnp
mov
int
popa
xchg
ret
jecxz
sbb
sub
mov
mov
fidivrs
sbb
dec
loope
sub
pop
cmp
push
push
subb
jnp
rorl
out
xchg
out
clc
inc
sub
lcall
lret
xchg
scas
mov
out
xlat
ljmp
imul
cmp
push
iret
jns
jae
iret
sub
sub
scas
inc
and
ret
sbb
std
sbbb
adc
and
orl
push
mov
mov
mov
test
cmp
mov
jmp
bound
mov
push
test
in
je
jge
sbb
mov
add
and
mov
jmp
sbb
enter
or
mov
repz
push
push
cmp
inc
cwtl
mov
push
dec
inc
adc
cmpsl
cmpsb
dec
mov
movsb
es
push
add
jae
out
mov
mov
test
inc
adc
jbe
mov
js
rcrb
xchg
scas
in
out
and
rcrb
mov
push
jae
inc
or
push
jns
rolb
cmp
ja
mov
cmp
insb
push
cmp
mov
test
in
pushl
add
adc
lahf
xlat
cmpsl
push
leave
xor
aam
popa
sbb
loope
idivl
sbb
pop
in
cmp
arpl
insb
push
mov
jo
outsl
xchg
pop
lahf
fldt
aam
arpl
sub
push
lcall
push
push
jge
in
xchg
lcall
dec
test
rcll
dec
imul
out
push
push
mov
add
mov
imul
js
inc
push
jae
popa
cltd
pop
icebp
iret
xchg
and
mov
int3
xchg
in
inc
dec
xor
push
inc
xchg
cmp
jno
xor
ss
outsb
pop
push
add
movsb
roll
ror
sti
data16
shrb
mov
into
das
std
push
lock
enter
incb
and
int
test
sbb
add
cmpsb
sub
in
mov
imul
inc
jnp
imul
mov
mov
std
dec
xchg
sbb
int
adc
mov
mov
add
inc
or
fcoml
xor
gs
xchg
jno
leave
mov
outsl
sub
cmp
div
push
and
sbb
dec
dec
cmp
cmp
icebp
or
stos
mov
inc
mov
cli
repnz
int3
jns
and
andb
cli
push
pop
fimull
cmp
jmp
pop
popf
fmull
cli
lock
scas
sbb
in
daa
pop
test
cmpb
cmp
pop
jmp
mov
shlb
in
mov
lock
add
movsb
jl
shlb
cwtl
fdivl
dec
adc
jbe
pop
test
lcall
fisubl
js
pop
inc
mov
pop
fisttpll
adc
push
dec
mov
daa
int
mov
mov
fadds
mov
push
xor
inc
clc
inc
fstps
mov
mov
std
repz
adc
fmul
ret
or
sub
lds
pusha
lds
call
or
rorl
into
aam
pop
stos
cmp
cmovns
sbb
les
lds
lods
negl
repnz
add
addr16
dec
or
sub
xchg
jg
insl
pop
add
lea
cmp
jne
test
xlat
movsl
fcomps
shrb
and
mov
bound
lcall
scas
in
cmp
lret
or
outsb
in
push
add
xlat
shlb
xchg
mov
jg
push
enter
xor
shl
add
xchg
cmp
mov
sub
loop
cmp
pop
or
data16
popf
lods
sub
mov
into
xor
subb
pop
pop
adc
mov
pop
aam
mov
add
push
mov
xchg
icebp
jmp
xor
das
pop
into
in
lret
addr16
inc
jecxz
cld
rcrb
pop
add
xchg
cs
loope
roll
xchg
mov
dec
inc
out
std
jnp
int
icebp
cld
or
adc
mov
cmpsl
lods
sbb
cmp
mov
or
orb
repz
insb
jbe
pop
add
scas
sbb
outsb
mov
xchg
mov
inc
dec
fwait
or
dec
pop
in
adc
jge
out
in
int
xlat
lock
or
movb
int3
or
mov
imul
in
pop
stos
rcl
and
jmp
into
mov
ljmp
ja
lods
popa
stc
adcl
xlat
pop
xchg
mov
xor
mov
adc
loopne
adc
int3
cmc
icebp
cmpsl
adc
ret
loopne
stos
and
jmp
movsb
cwtl
mov
mov
sahf
sbb
pop
jl
arpl
mov
mov
out
cmpsl
pushf
outsl
xchg
jge
pop
inc
push
adc
mov
into
repz
insl
clc
fsubs
aaa
cltd
test
lods
cmp
test
cwtl
repz
roll
lcall
cltd
pop
dec
cmp
je
int
mov
adc
push
frstor
mov
sbbb
daa
insb
mov
cmpsl
cmc
test
jb
xchg
into
jg
or
xor
xchg
imul
inc
push
sbb
and
ja
insb
xchg
jo
test
and
or
dec
loop
pop
test
jo
inc
xchg
insl
aad
lret
adc
xchg
scas
in
stos
out
cs
das
das
cmp
jg
dec
mov
arpl
popa
inc
lods
pusha
je
out
adc
mov
out
jge
xchg
dec
pop
mov
or
inc
jae
sub
repnz
and
imul
jp
std
stc
adc
repz
test
mov
mov
sbb
cmp
jp
fisttpl
out
into
lock
std
jmp
popf
repz
xchg
cmp
test
clc
scas
in
xor
mov
push
int3
mov
outsl
div
adc
xchg
jge
push
outsl
jg
pop
and
adc
mov
icebp
not
jbe
roll
fwait
jbe
cmpl
pusha
shlb
arpl
jb
js
imul
push
fbstp
lea
mov
push
rol
repz
xor
mov
dec
movb
inc
aaa
sub
xchg
lea
mov
imul
add
push
arpl
test
imul
adc
rorl
mov
or
dec
shlb
addr16
aaa
in
iret
fadds
mov
xor
nop
sbb
aaa
in
inc
cmp
shlb
jle
jmp
mov
fldl
sbb
popf
rcrb
pop
dec
loope
ljmp
cmp
mov
cmp
mov
push
outsl
or
push
cmpl
push
lds
mov
jmp
inc
push
aaa
cltd
xor
xor
dec
push
in
add
scas
fadd
in
call
cmp
inc
popa
mov
test
popf
lret
mov
pop
sub
mov
test
mov
sub
pushf
mov
sub
push
mov
insl
lds
loope
mov
adc
push
packssdw
pop
mov
mov
jnp
mov
shrl
adc
push
pop
ret
add
addr16
push
push
cltd
movl
cltd
es
scas
icebp
pop
push
cmpsb
subb
sti
pop
mov
rclb
jl
data16
into
ja
out
scas
pop
hlt
and
int
lret
sub
and
xchg
mov
repz
mov
jo
push
fldcw
out
iret
in
lock
das
inc
cwtl
xor
inc
nop
rol
std
push
push
dec
out
xchg
or
cli
or
lahf
push
sbb
xor
and
test
inc
jecxz
cmpsb
adcl
sbb
enter
lahf
and
jge
mov
ss
loope
enter
aas
and
outsl
push
xchg
cmp
xor
imul
out
out
in
das
lret
sbb
xchg
lret
hlt
les
adc
xchg
mov
sti
out
daa
pushfw
push
xchg
xor
gs
sarl
xor
ljmp
lcall
jecxz
das
pop
dec
sti
lret
in
sub
add
adc
sub
jb
movsl
pop
sbb
stos
jge
cmp
mov
dec
dec
cmp
and
xor
jo
xchg
mov
imul
mov
hlt
push
lock
xchg
div
sub
sbb
or
out
cmp
xor
or
pop
lock
sub
mov
xchg
mov
xchg
andb
and
and
adc
ret
dec
xchg
dec
sbb
out
or
loop
mov
subl
int
mov
pop
cmc
push
fs
mov
inc
push
in
cmp
mov
cmpsl
fdivrs
ret
test
and
mov
fistps
fmulp
mov
xor
outsl
movsl
ss
cmp
lcall
push
jae
inc
dec
xchg
call
decb
xchg
out
mov
inc
enter
divl
mov
mov
leave
and
arpl
stc
and
xorb
scas
xor
cmp
out
lods
fs
ficoms
mov
sbb
gs
jmp
sub
xchg
xor
imul
rcrb
cli
add
and
pop
lahf
imul
lock
sub
adcb
add
icebp
in
sub
cmp
les
push
mov
push
jl
mov
mov
or
test
dec
cwtl
data16
mov
mov
xchg
inc
cmp
sbb
fdiv
aad
jg
sub
mov
int3
add
rcr
imul
fwait
mov
repz
stc
inc
scas
pop
stos
lret
das
ficompl
xchg
cmpsl
sub
mov
pop
dec
lds
js
adc
jg
arpl
dec
push
bound
int3
lds
lcall
lock
ret
add
loop
mov
push
xchg
cltd
sbb
pop
xchg
std
std
xchg
stc
ret
lea
ds
sbb
in
test
mov
add
ret
mov
ds
fidivs
and
rol
mov
lock
loop
sub
xor
mov
cs
pop
jns
out
jl
lcall
pop
inc
test
and
and
xor
mov
add
cmp
xchg
cwtl
in
mov
ljmp
xchg
mov
mov
dec
or
jmp
mov
inc
dec
sbb
mov
mov
dec
xchg
jge
daa
push
daa
out
xor
je
and
outsl
movsb
out
cmp
add
in
ret
mov
in
js
or
push
cmp
lret
xchg
test
jbe
lds
push
or
sbb
push
cmpsl
cmpb
rcll
mov
mov
scas
fcomps
jmp
mov
outsb
rolb
add
in
jmp
loopne
or
inc
dec
lods
in
inc
mov
sti
lcall
stos
rol
push
sbb
int3
mov
push
adc
filds
dec
jcxz
clc
sahf
ret
cmc
pop
out
mov
inc
bound
lahf
cwtl
xchg
movsb
adc
pop
pop
adc
leave
mov
mov
jl
pop
into
add
xchg
xchg
std
and
cld
and
push
jne
std
xchg
fstp
aaa
aam
pop
popf
das
inc
in
push
cmp
sbb
sbb
jp
sbbl
in
push
and
test
aam
sbb
xchg
in
mov
jae
call
inc
lods
cmp
dec
push
fildll
sbb
xchg
lcall
inc
js
ds
sub
fsubs
push
pop
pop
cltd
mov
daa
gs
movsb
mov
dec
ficoml
sbb
lods
mov
jl
mov
mov
cmp
mov
inc
popf
ret
ret
ds
or
sub
xor
arpl
push
xor
mov
cli
adc
fwait
mov
xchg
lods
add
insl
loope
and
add
xor
roll
daa
inc
cmp
fiaddl
in
aaa
nop
movl
gs
jbe
sti
push
ljmp
pop
mov
cltd
cmp
sub
or
push
rol
mov
movsl
dec
mov
mov
inc
pushf
push
mov
jns
insb
fisttps
loopne
inc
call
loop
cmp
sub
movsl
fdivrs
lock
xor
pop
or
mov
ficomps
les
out
in
cmp
mov
fwait
jecxz
jmp
rorl
dec
adc
sahf
mov
mov
out
outsb
pop
test
lret
imul
cs
xor
cmpsb
aam
cmpsb
jno
out
sub
pop
cwtl
pop
loope
lcall
rcrl
fcoml
aas
adc
pop
ret
call
bound
sub
insl
mov
xchg
add
mov
test
pop
cli
in
pop
sub
mov
push
pop
int3
les
xchg
mov
mov
mov
cmpsb
test
je
jl
into
dec
test
jbe
shrl
cmc
stos
mov
sbb
jg
jnp
hlt
into
das
jbe
xchg
in
icebp
imul
into
gs
loope
sbb
push
mov
pop
notb
aam
jg
and
fdivl
into
lcall
jl
sub
mov
mov
mov
dec
pop
or
repz
adc
shlb
in
sbb
mov
pop
loope
push
mov
lds
xchg
out
pop
outsb
std
mov
or
mulb
imul
mov
xchg
icebp
adc
mov
in
ja
sub
ljmp
push
data16
push
addr16
fistl
and
dec
dec
xor
stos
bound
sub
jp
emms
scas
or
lea
rorb
and
mov
cld
call
pop
push
jno
and
pusha
or
mov
imul
cmp
mov
sahf
inc
pop
aam
sub
mov
int3
mov
dec
mov
jp
rol
mov
jb
jno
inc
sarl
xchg
int3
js
int3
aam
js
xor
iret
mov
sub
fld
pushf
repz
rcl
shl
subb
lret
ljmp
cltd
lds
mov
push
in
pop
pop
aad
data16
add
xchg
fwait
push
pop
aam
mov
push
clc
cmp
loope
stos
inc
mov
incl
inc
pop
cmp
mov
or
hlt
jmp
cmpsl
push
jb
sbb
mov
repz
jbe
lret
sbb
and
inc
stos
arpl
add
or
jge
mov
out
repz
int
stos
call
nop/reserved
shlb
and
and
push
sub
out
xchg
jmp
cmp
enter
cmp
mov
icebp
shl
rolb
mov
das
cld
mov
imul
notb
stc
pop
xchg
pusha
pop
sbb
mov
pop
push
pop
stos
mov
push
mov
pop
stos
add
aaa
or
push
push
movsl
cwtl
xchg
fmull
mov
mov
leave
sbb
or
sbbb
flds
fwait
push
push
add
lahf
mov
pop
fstl
dec
mov
ljmp
fmull
int
cmpsb
outsb
mov
ss
sbbb
push
push
test
cmp
jle
mov
and
sbb
fwait
xor
jp
fsub
out
pop
ja
movsb
and
fldcw
rclb
stos
mov
jg
dec
nop
aad
mov
jbe
cld
xchg
mov
xchg
pop
cld
shl
add
nop
ja
sbb
mov
movsl
mov
xchg
xor
and
es
fimull
dec
mov
lock
jb
sbb
sbb
fs
mov
es
mov
rclb
adc
cmpsb
mov
loop
cmp
pushf
cmp
mov
imul
jnp
test
mov
ljmp
mov
mov
jge
xor
jp
mov
mov
jp
into
xor
mov
out
fnstsw
xchg
sbb
xchg
ret
cs
popa
jge
and
mov
xor
push
int3
call
imul
pushf
inc
cmp
mov
mov
inc
jge
in
loopne
and
adc
adc
or
mov
mov
cmp
sbbb
mov
sahf
xor
cmp
fs
jmp
ret
loope
cvtps2pd
adc
mov
popl
mov
in
ret
or
es
into
daa
xchg
xchg
aas
jle
iret
stc
fidivrs
mov
push
scas
mov
adc
jge
mov
xchg
aad
mov
movsb
movsl
in
mov
push
movsl
test
mov
jno
sbb
test
fdivrs
es
xor
cwtl
pop
cmp
rorl
pop
fcmovnu
lock
ljmp
loope
xchg
fnstcw
push
or
sbb
xchg
push
adc
adc
pop
adc
cmp
jecxz
pop
fsubrp
or
jnp
jnp
inc
jecxz
push
pop
out
or
cmp
test
lea
sahf
sbb
in
out
xchg
jbe
out
xchg
sarb
mov
mov
insl
pop
jno
push
push
adc
hlt
lock
fs
and
push
out
pusha
lret
outsl
scas
mov
sbb
int3
xchg
test
je
ljmp
pop
test
shlb
dec
mov
outsb
mov
adc
js
add
sahf
call
adc
leave
imul
pop
mov
add
sbb
sbb
and
push
jns
daa
or
push
lahf
mov
jmp
sbb
icebp
fimuls
pop
sbb
mov
enter
imul
jl
je,pn
addl
dec
and
movsl
dec
or
mov
inc
inc
push
icebp
add
sub
inc
leave
outsl
mov
sbb
pop
jecxz
add
xor
jnp
push
or
pop
je
fsubrp
cmp
jb
dec
mov
mov
ret
arpl
lea
pop
jmp
mov
fisubs
subb
in
xchg
xchg
cmp
inc
sbb
lock
pop
cmp
movlhps
lcall
jge
dec
adcl
pop
pop
out
es
pop
in
popa
sti
add
fstl
cmpl
sti
or
sub
xor
js
stc
mov
add
sbbb
popf
mov
testb
out
sbb
lahf
mov
mov
adcb
push
sti
shlb
sahf
sbb
sahf
mov
xchg
dec
jmp
adc
js
out
fwait
sub
xor
loope
jae
jnp
sbb
js
ljmp
jnp
cltd
fwait
xchg
xchg
sub
jne
mov
dec
pusha
arpl
ret
mov
adc
and
mov
es
sub
cmpsb
icebp
adc
sbb
add
jns
out
std
mov
xor
dec
xor
xchg
imul
clc
mov
pop
scas
sub
inc
sbb
sub
pop
out
mov
sahf
flds
das
loope
add
push
stos
test
lret
pop
mov
mov
fldln2
sbb
aaa
mov
jbe
fmull
addl
aas
test
insl
mov
mov
aad
ja
js
jp
sahf
aad
dec
shll
jmp
mov
jle
das
jns
xchg
cmp
test
fstpl
cli
pop
test
jae
lea
sub
mov
sti
cmp
sahf
out
cld
dec
dec
jmp
stos
ffreep
arpl
out
sub
mov
sti
xorb
mov
das
add
loopne
test
mov
sbbb
shr
mov
call
cmp
jae
int3
jmp
pop
popf
daa
or
jno
cmpsb
cld
decb
out
pop
clc
jbe
dec
jl
fadds
ljmp
ficompl
sub
or
mov
cmpsb
lods
in
stos
add
inc
lahf
iret
cwtl
jmp
lcall
dec
dec
ret
mov
push
mov
mov
pop
jg
add
out
or
es
push
shl
lcall
push
ss
enter
repnz
ret
pop
dec
cmp
out
dec
sub
out
xchg
fs
cmpsl
clc
loope
out
repz
pop
push
adc
mov
jge
dec
negb
pop
sbb
pop
je
insb
gs
push
push
cmc
pop
pop
push
cwtl
sahf
inc
push
add
outsb
sbb
cmpsb
cmp
add
stos
int3
sub
popf
fcoml
ljmp
in
sub
jecxz
fdivs
bound
fwait
mov
xchg
stc
pop
stc
out
jae
jg
add
push
cltd
xchg
pop
cmp
test
adc
ret
lret
and
xchg
std
mov
rorb
addr16
testb
lds
jmp
dec
outsb
mov
lahf
cs
ds
push
ds
dec
sub
xchg
and
outsb
daa
in
movl
sti
jne
mov
jmp
mov
jne
push
sarl
inc
pop
lock
jle
fcmovnb
push
cmp
adc
dec
in
adc
mov
xor
and
lcall
add
sbb
adc
or
mov
inc
shll
addr16
pop
mov
and
sbb
push
sub
mov
imul
inc
dec
adc
mov
stc
cmp
jnp
adc
ss
outsl
xchg
les
ret
inc
arpl
inc
loop
movsl
leave
mov
jnp
into
insl
dec
pop
dec
lahf
testl
cld
in
and
xchg
or
out
mov
lahf
lret
mov
and
mov
and
mov
adcl
or
push
sub
add
call
shrl
jecxz
sub
xchg
adc
mov
loope
jae
push
sbb
sub
fmull
dec
imul
sub
mov
and
movsl
fisttps
cwtl
or
or
xor
add
aad
shlb
xchg
jb
decl
pop
mull
sub
into
pop
or
mov
xor
gs
out
int
jnp
mov
rclb
adc
dec
sub
insl
sub
shl
cmpb
notl
mov
repnz
sbb
scas
dec
jbe
pushf
lods
push
adc
inc
mov
mov
dec
jg
test
subb
aam
add
leave
ret
sti
dec
or
adc
pop
iret
shll
xchg
cwtl
xchg
push
jecxz
das
adc
fxch
jge
xorl
adc
mov
shlb
loopne
add
jg
adcl
cmp
inc
push
mov
cmp
push
loopne
sub
pop
add
rclb
jnp
adc
outsb
lds
lcall
and
insb
and
scas
xor
sbb
inc
stos
mov
mov
jb
cmp
jmp
or
xor
jge
dec
mov
cmc
mov
xor
movsl
xor
enter
out
mov
daa
add
sub
inc
mov
pusha
add
pop
loope
add
movl
sbb
scas
pop
mov
sbbb
int
pop
cmp
inc
xlat
mov
pop
ds
adc
clc
loopne
push
jne
popa
rorb
out
pop
push
push
mull
addl
lea
adc
sub
push
push
ret
test
sbb
sbb
or
bound
mov
push
adc
adc
cmp
shll
mov
push
xor
scas
push
lahf
push
inc
pusha
mov
shrb
pop
add
scas
jbe
mov
or
arpl
pop
cmp
mov
add
je
adc
mov
push
dec
sbb
mov
sbbb
lods
mov
movsl
shll
mov
mov
out
xlat
push
mov
stc
pushf
lods
and
pop
pusha
inc
jne
ret
test
mov
mov
mov
lea
gs
repz
mov
lahf
mov
add
xchg
pop
div
es
pop
pop
mov
gs
bound
cli
sbb
imul
addb
imul
inc
ud0
add
lock
pop
imul
dec
xchg
xor
leave
mov
mov
cmp
out
push
jge
test
cli
aam
into
jle
sbb
dec
xor
jmp
sbb
push
xor
inc
in
mov
pop
fistl
movsl
mov
out
gs
adc
out
push
mov
je
iret
xchg
pop
xor
dec
enter
xorl
mov
cmp
scas
pop
sub
jno
mov
and
inc
cwtl
rolb
ss
insl
sbb
and
dec
jns
push
fdivrs
mov
les
jb
mov
xchg
loop
scas
mov
test
test
xchg
cmp
sbb
xchg
push
xchg
enter
jb
out
popa
adc
mov
mov
rcll
scas
xor
jmp
mov
mov
push
popf
nop
push
cwtl
xchg
mov
push
nop
mov
xor
mov
clc
dec
cwtl
fwait
jae
insb
movsb
aad
repnz
fbld
mov
cld
push
in
cs
lds
xchg
push
dec
cld
out
or
fsubs
mov
xor
sti
xor
mov
into
adc
into
ljmp
sbb
xor
and
insl
pop
sbb
sub
sub
sub
not
out
jno
and
mov
aas
mov
js
inc
jno
in
push
jns
and
rcrb
mov
jbe
pop
cmp
je
and
mov
xchg
mov
stos
xchg
test
loopne
lock
add
jecxz
movsl
ret
filds
add
out
push
test
mov
inc
into
jno
scas
cld
iret
test
xlat
and
nop
cmpsb
xchg
daa
xor
ss
xchg
push
and
pop
cmpsl
in
lret
mov
jmp
imul
xlat
mov
rorl
jnp
mov
inc
cmp
cli
cmpsb
or
xor
sub
xchg
push
mov
nop
and
xor
xchg
shrl
push
mov
mulb
fsts
xor
pop
out
ds
cmc
pop
sub
icebp
imul
andb
ja
in
cmp
add
into
cld
maskmovq
or
fimull
inc
add
mov
jge
shlb
xchg
int3
ficoms
and
mov
bound
jg
sub
mov
cmp
pop
movsl
out
push
xor
and
xlat
roll
lods
icebp
mov
sbb
stc
mov
andl
xor
andb
sub
inc
add
mov
sub
lea
mov
adc
push
inc
fcmovnu
mov
int3
adc
push
std
mov
push
mov
sub
scas
xchg
std
add
icebp
mov
daa
inc
cmp
sti
adc
cmp
mov
jo
ds
hlt
xchg
pop
aam
sub
arpl
pop
out
shl
fidivs
adc
cwtl
bound
add
push
sar
ret
mov
pop
mov
in
jg
insl
cmp
sub
filds
cmp
jnp
pop
xor
inc
mov
filds
push
jg
dec
add
int3
push
das
push
mov
jne
pop
jl
les
xchg
pop
scas
int
xchg
sti
xor
jecxz
xchg
and
or
fadd
loop
push
aaa
pushf
xor
mov
lret
adc
shlb
fxam
test
insl
cld
jns
insl
jmp
movsb
loop
adc
xor
inc
and
sbb
pop
movsb
sbb
push
sub
sub
inc
mov
inc
xchg
sbb
int3
cmp
test
mov
outsl
faddp
in
fsubr
and
or
sub
cmp
push
lahf
xchg
test
fadd
inc
insl
inc
cmp
push
sar
jae
cmp
rol
gs
inc
xor
outsl
rep
mov
or
int
out
inc
out
pop
dec
or
arpl
loopne
or
sbb
aad
add
pop
mov
add
sub
push
xchg
push
mov
sbb
addr16
lock
mov
pusha
jp
rcrl
repnz
mov
sbb
inc
jns
inc
cmpl
daa
push
xchg
push
scas
pop
jns
testl
xchg
jne
movsb
adc
pop
adc
lea
and
stos
js
dec
mov
lret
rol
int3
pushf
sbb
leave
dec
scas
loopne
out
ret
sbb
lock
subb
sbb
push
icebp
add
push
inc
add
stos
xor
sub
push
andl
dec
or
lret
xor
or
push
mov
push
pop
mov
fsts
aaa
jp
mov
loop
aaa
jmp
mov
sub
dec
adc
test
push
mov
xchg
cwtd
lret
pop
out
inc
lock
dec
mov
lock
mov
cmp
leave
mov
imul
dec
mov
addr16
or
or
int3
push
push
fisubrs
xchg
or
hlt
jns
les
xor
add
jae
xorl
fldt
in
loope
and
or
out
xor
mov
loope
jb
test
call
pop
loop
cs
push
movsl
mov
pop
fimull
mov
jge
and
shr
inc
mov
fmuls
out
or
nop
mov
lahf
lods
movsl
add
pop
std
cmp
mov
cmp
daa
xor
or
movsb
daa
cmc
movsl
mov
test
aaa
pop
inc
call
fs
push
dec
and
push
rcrl
mov
repz
dec
or
inc
sar
xor
orb
outsb
negl
jns
out
pop
icebp
sub
and
or
daa
mov
shrd
inc
fwait
adc
test
inc
lds
and
inc
arpl
cmp
mov
and
and
or
lock
adc
add
pop
ds
pop
xchg
out
xchg
and
aam
and
ss
rolb
sub
jge
add
addr16
and
mov
push
hlt
iret
cmpsb
and
int
adc
xchg
sbb
pusha
jae
mov
in
mov
shlw
outsb
jae
clc
lahf
push
jo
mov
sub
push
cmp
mov
push
xchg
lret
push
ja
dec
movsb
ljmp
out
and
in
movsb
jge
pop
stos
mov
mov
fs
test
mov
jmp
sbb
push
das
cmp
mov
cmp
jo
fimuls
adc
cmc
fidivrl
loope
sub
add
rcll
sbb
or
pop
fnstenv
and
ficomps
idiv
movsb
push
mov
sub
int
and
fcomip
out
or
ds
arpl
int
lcall
ficoms
mov
mov
mov
jnp
sbb
push
gs
fcomip
fisttps
test
sbb
jmp
pop
aaa
fstl
pop
pop
xchg
mov
loop
push
xor
dec
mov
movsl
or
lock
add
popf
dec
imul
pop
filds
xchg
push
mov
ret
pop
mov
xor
xor
loop
xor
mov
out
inc
mov
out
sub
add
js
sbb
jmp
in
lds
loope
jnp
cs
inc
xor
sbb
shl
ret
js
lea
mov
sarl
xchg
cmp
aaa
insb
add
sub
xchg
out
jo
add
and
sahf
dec
and
push
pop
add
add
je
iret
ds
movl
and
add
sub
dec
movl
lock
ret
or
stos
cmp
adc
cmp
xor
xchg
jg
roll
push
out
into
aas
sub
inc
dec
rorb
xchg
lea
sub
xor
push
sub
out
and
out
sahf
xchg
imulb
test
sub
pop
and
add
es
rolb
shl
notb
or
pop
and
adc
test
mov
sbb
je
aam
std
sbb
enter
popa
jmp
orb
push
xchg
sub
hlt
xchg
je
nop
add
inc
mov
push
push
xchg
clc
sub
mov
scas
ret
ret
sbb
jge
push
push
mov
rcll
lcall
sbbb
dec
push
xor
sahf
cld
mov
adc
sbb
call
xchg
and
and
mov
dec
cld
enter
outsb
aaa
jo
loop
mov
lret
pop
jo
push
mov
jmp
iret
adc
cmc
inc
mov
inc
ret
lret
xor
out
sub
add
mov
inc
jmp
pop
or
lock
repz
adc
popf
mov
sbb
xchg
int
movsb
cli
mov
fiaddl
insb
cmp
iret
cmp
lcall
and
xchg
rol
test
xchg
test
into
fidivl
pusha
sub
sbb
inc
mov
cmc
cli
jne
jae
in
and
cmp
jp
xor
test
loop
mov
pop
and
and
sub
cmp
out
pop
add
push
pop
lds
jle
inc
loop
daa
dec
jp
cld
mov
and
push
mov
pusha
adc
lods
adc
push
rcrb
idivl
cli
stos
ds
mov
iret
or
jae
imul
jp
shr
and
dec
mov
rcr
dec
cmp
aas
rol
push
adc
sbb
out
in
cmp
fwait
mov
inc
pop
fidivrs
pop
loope
push
push
das
stos
add
scas
loop
mov
jns
sbbl
sbb
iret
xlat
inc
push
dec
or
jle
insb
cli
xlat
imul
jns
ret
push
mov
dec
scas
mov
andl
pop
mov
jl
cmp
pop
cs
out
add
fwait
int
aad
hlt
int
nop
cwtl
repz
inc
xchg
mov
daa
and
push
mov
jb
inc
ret
js
scas
inc
xchg
mov
push
in
cmpsb
xchg
aad
push
mov
cmp
adc
lret
rolb
mov
out
cli
or
fwait
mov
sahf
xchg
sub
out
xchg
or
mov
ret
adc
mov
sbb
cld
sub
jg
adc
aas
in
pop
shlb
mov
or
mov
or
dec
jg
stc
sahf
fldenv
jmp
arpl
ss
js
shlb
mulb
adc
and
stc
xor
push
loope
js
repz
ljmp
sbb
or
adc
jns
mov
bound
stc
mov
jmp
dec
sbb
xchg
in
notl
sub
hlt
adc
add
aaa
je
mov
adc
fs
inc
inc
dec
pabsb
test
xchg
inc
fnstsw
testb
pop
rcll
lods
jne
fiadds
pop
xchg
insl
fldcw
adc
sbb
or
into
cmc
stc
mov
leave
jg
fwait
sbb
call
jge
mov
dec
pop
cmp
jns
cltd
cmp
enter
aaa
inc
add
and
sbb
jle
mov
sbb
out
imul
push
data16
es
mulb
or
scas
arpl
dec
fdivs
xor
fscale
ror
sbb
iret
into
enter
fcoms
les
out
popf
cmp
andl
in
daa
push
push
gs
out
rcrl
dec
divb
test
stos
push
movsl
fs
jecxz
lret
stos
or
sub
sbb
insb
jmp
dec
xor
icebp
xchg
insl
ss
dec
call
lcall
dec
xchg
or
or
add
push
push
in
xor
das
out
mov
dec
sbb
xchg
sbb
mov
jae
xchg
xor
dec
mov
push
test
xor
fldt
int3
sbb
pop
cmc
aas
enter
scas
ds
sbb
push
stos
lahf
minsd
loopne
xchg
sub
and
push
cmp
andb
data16
les
sbb
test
pushf
push
push
inc
mov
push
cmp
rcll
pop
imul
imul
rclb
mov
mov
lret
pop
cmpsb
fincstp
cmpsl
push
xor
mov
dec
iret
stos
mov
in
cmpsl
das
mov
xor
loopne
ljmp
out
cmp
out
xchg
fstp
pop
jecxz
xchg
movsb
xor
movsb
mov
jb
jmp
movsl
out
xor
repnz
mov
jge
insl
loope
mov
adc
and
inc
jnp
xlat
jns
sub
push
flds
cs
orb
xor
pushf
mov
out
in
inc
fs
imul
xchg
mov
mov
add
imul
std
xchg
dec
cmp
inc
mov
loopne
jg
shll
fstl
mov
cmp
adc
shll
pop
jmp
push
pop
js
push
mov
xadd
int3
imulb
shll
pop
sub
mov
mov
test
xchg
pop
gs
popf
pop
popa
popa
out
add
shrd
jb
insb
mov
cmpsl
dec
push
ds
lods
push
fisubrs
adc
icebp
test
ss
xchg
jmp
pop
mov
daa
int
addr16
inc
into
addr16
inc
adc
sarb
push
adc
xor
adc
sub
dec
data16
push
in
fidivs
arpl
sub
test
repnz
out
xchg
js
movsl
mov
mov
sub
push
push
sub
or
lahf
lret
outsb
int3
and
add
pop
sub
sbb
ljmp
movsl
ret
dec
ljmp
or
sub
sti
ss
das
nop
or
inc
cltd
and
mov
mov
add
loop
jp
dec
hlt
ret
sub
psubusb
pusha
sahf
call
ljmp
fiadds
rorb
push
testl
fucomi
int
sub
or
pop
push
xchg
dec
loop
or
cmc
adc
dec
lock
stos
rorb
clc
push
push
xchg
pop
xor
ljmp
sub
out
jo
das
lahf
addr16
fwait
sub
inc
nop
sub
dec
xlat
lock
xchg
mov
jns
sbb
jp
sub
mov
mov
mov
sbb
fdivrl
cli
sub
or
out
sub
sub
aam
aad
jno
sub
adc
and
push
lcall
xchg
mov
jo
fsubrs
sbb
sub
or
mov
xchg
nop
cmpsl
and
add
in
ljmp
cli
hlt
pop
add
test
stc
and
pop
xor
orl
xchg
push
outsl
xchg
in
outsl
loop
lods
sbb
sti
rcrb
fdivr
test
addr16
fcompl
daa
aam
and
xchg
aam
mov
add
xchg
push
outsb
repz
andl
outsl
jns
mov
je
test
inc
push
nop
sbb
ficompl
sub
ret
xchg
das
add
incl
or
gs
and
dec
in
xor
dec
lcall
jbe
inc
mov
fsubl
test
jnp
cld
rcll
jnp
push
rol
xchg
jl
nop
mov
loop
push
sbb
hlt
shll
addl
test
jge
jo
add
hlt
sbb
in
sub
jecxz
or
sbb
and
hlt
cmp
rorl
sbb
pop
rcrl
push
push
movsb
loope
aaa
shlb
bound
add
inc
adc
add
adc
stos
mov
stos
cmovbe
enter
test
jecxz
icebp
mov
fildll
push
or
in
jle
imul
dec
pop
mov
add
xchg
cmp
pop
stos
pop
clc
xorl
xlat
cmp
jmp
adc
outsb
fisubrl
and
add
xor
addr16
jl
pop
rcrl
iret
push
dec
and
mov
add
ljmp
inc
lcall
out
test
dec
cmpsl
or
rcl
cmp
shll
ret
jne
cmp
xchg
mov
pop
or
or
test
mov
jo
outsl
lds
mov
jnp
repz
fsubr
sbb
cmp
add
xchg
xor
jg
jg
jmp
sbb
inc
add
xor
push
inc
push
cmc
xchg
das
add
sub
fwait
pop
das
mov
dec
xchg
notl
mov
icebp
ds
xor
jo
cmpsb
cltd
movsb
mov
mov
cltd
cmp
js
mov
xor
das
inc
cmp
shll
pop
gs
inc
xor
cmp
call
sbb
mov
add
or
or
movsl
pushf
or
ss
pop
mov
sbb
test
xchg
cmp
movsl
adc
outsl
sbb
aam
repz
addr16
inc
inc
pusha
xchg
pop
ret
sbb
roll
mov
add
cmc
fisubs
sti
xchg
les
inc
std
std
mov
adc
repz
jnp
hlt
call
imul
and
jo
out
sbb
popf
frstor
insl
sub
dec
lahf
and
into
push
push
pop
xor
shl
push
std
lahf
fdivp
mov
cmp
add
mov
idivl
rclb
mov
lds
dec
imul
sbb
rcrl
push
pop
mov
stc
xor
push
pushf
ret
cmp
mov
xchg
fwait
inc
sahf
movlps
pushf
mov
cld
out
fdivr
pop
push
inc
jmp
jno
sbb
je
aad
lods
test
movsl
inc
cmp
pop
adc
je
mov
dec
xor
outsl
jae
iret
push
pop
push
dec
in
xor
sbb
xchg
and
shll
lea
mov
cmp
xchg
inc
xchg
mov
aam
lock
lock
add
sub
adc
pop
lds
hlt
int3
pop
xor
int
in
lahf
inc
into
and
mov
fwait
inc
xchg
add
cs
mov
jmp
sbb
sub
sbb
fucomi
dec
dec
lock
mov
and
popf
hlt
jae
sarb
and
jne
rolb
inc
test
and
cmc
cmp
int
scas
rcr
cs
jl
test
add
cmp
in
xchg
dec
mov
xor
and
sub
inc
loope
jb
mov
push
out
mov
inc
mov
mov
fcomps
test
mov
mov
lcall
lods
jge
cmp
into
lret
mov
nop
ror
mov
inc
pop
rcrl
or
mov
mov
push
xchg
cltd
cmpsb
leave
ret
sub
andb
stos
bound
loop
jns
clc
adc
jp
sarl
pop
xchg
add
inc
inc
jl
stc
arpl
js
mov
push
movb
mov
fistps
sbb
into
adc
push
push
in
ss
and
jmp
insb
hlt
adc
or
mov
jo
pusha
pusha
rclb
and
test
xchg
or
adc
shll
push
hlt
push
inc
out
mov
sub
rsm
mov
dec
inc
dec
mov
mov
nop
movsb
pop
loopne
popa
lahf
and
add
cmp
movd
addb
icebp
arpl
mov
mov
sar
fcomp
lds
jmp
lret
mov
mov
dec
enter
inc
jle
loope
xchg
shll
out
jae
aas
repz
loope
cs
scas
lea
pop
mov
shl
dec
jle
cwtl
or
mov
or
mov
lret
loopne
sub
push
repz
test
dec
inc
mov
mov
pop
outsb
imul
ret
ret
fldenv
test
fisubrl
lret
mov
push
jnp
cmp
xor
inc
cmp
cmp
inc
shll
push
jne
sub
jmp
jp
mov
sarb
inc
dec
ficoms
jae
mov
sbb
xchg
add
inc
jnp
xchg
in
mov
sahf
lahf
outsb
out
sbb
cmpsl
push
jns
cmp
sarl
push
inc
out
lds
rol
aam
fistpl
test
sbb
std
push
xor
adc
out
or
push
and
inc
dec
pop
push
or
scas
fs
inc
icebp
test
das
sub
gs
jmp
jne
lret
pop
and
out
loopne
hlt
hlt
lcall
inc
pushf
push
and
pusha
adcb
cmpsb
or
shll
or
movsl
mov
mov
ffree
shlb
out
sahf
cld
lcall
imul
fwait
dec
dec
das
push
pop
jp
pusha
mov
arpl
clc
add
fdivrl
or
push
popf
add
push
aad
mov
shl
jg
xchg
push
pop
mov
shlb
sti
lret
xor
mov
jbe
sahf
add
sbb
imul
sbb
xchg
adcl
das
push
scas
mov
adcl
movsb
adc
testl
inc
jl
push
rorl
aad
jle
or
lods
mov
jge
dec
mov
or
cmc
shr
jae,pt
xchg
jg
movsb
test
jle
loop
enter
or
in
out
rolb
and
fistpll
fwait
mov
or
pop
dec
mov
fwait
out
in
xchg
jno
xor
mov
dec
cmp
mov
mov
jg
inc
jno
add
scas
int3
fidivrl
repz
mov
xchg
aas
add
scas
mov
rclb
and
mov
rorb
popa
push
mov
mov
xor
add
dec
sbb
sbbl
fsubs
dec
and
aas
fbld
sti
fldcw
push
lahf
pusha
sbb
push
insl
mov
cmc
sbb
js
and
mov
in
test
bound
fstl
add
or
pop
ret
xchg
les
cmp
mov
push
std
mov
push
loop
sub
shll
cltd
mov
cmpsl
mov
addr16
fcos
pop
nop
inc
or
cmc
push
je
adc
iret
mov
mov
xor
push
pop
gs
aam
fsubrl
test
lahf
movsb
jnp
test
clc
xor
xchg
scas
add
xor
lds
cmp
outsl
inc
and
xchg
aas
movsl
out
adc
aaa
cmpsl
mov
xchg
cmpsb
leave
inc
inc
push
push
add
cmp
cmpl
mov
push
sub
adc
sti
mov
ret
sahf
jg
add
mov
cmpsb
mov
and
push
inc
and
jnp
sarl
cltd
jb
jbe
jo
push
cld
test
push
rcll
inc
sahf
loope
aas
mov
adc
mov
in
call
xor
or
jnp
iret
or
pop
aaa
pop
and
push
mov
mov
mov
insl
mov
xor
leave
fdivrl
pop
sbb
faddl
int
dec
adc
das
mov
jnp
sbbb
test
jns
mov
cmp
mov
push
mov
push
fadds
mov
lret
or
mov
inc
and
addr16
lods
adc
shlb
push
adc
add
push
into
or
scas
adcl
negl
mov
out
stc
and
push
repz
dec
cmp
stc
inc
xlat
xlat
cmpsb
push
aas
data16
enter
fs
mov
ljmp
push
sbb
sbb
js
cltd
movsb
xlat
pop
rorb
add
cmc
outsb
cmp
xchg
les
aas
sbb
dec
push
out
mov
fsubs
cltd
mov
jae
mov
rcrb
or
in
lcall
jne
cmp
sbb
pop
cmp
jnp
divb
dec
inc
shr
inc
loopne
pop
out
pushf
pop
in
sbb
mov
outsb
add
pusha
xchg
mov
mov
adc
incb
lret
enter
clc
sub
pushf
popf
jbe
jecxz
or
jmp
cs
cmp
leave
dec
in
or
mov
int3
cmp
cmp
movd
loope
sub
jbe
jl
xorl
add
in
pop
mov
xor
push
mov
fsub
clc
xchg
sub
mov
mov
imul
repz
xchg
or
rolb
inc
jp
xor
out
push
aas
or
sbb
jnp
out
and
mov
add
pop
mov
shr
mov
pop
push
mov
dec
pop
and
add
popf
and
xchg
inc
cmp
jbe
pop
mov
xchg
enter
and
xchg
mov
dec
sbb
xor
jg
imul
jns
sub
in
add
jne
mov
repz
ds
scas
cs
roll
stos
sub
es
xchg
mov
icebp
inc
lea
leave
sbb
xchg
dec
cmp
cmpb
out
movb
jle
add
push
mov
aam
in
cmp
sbb
mov
call
test
jns
bnd
out
or
sub
faddl
cmp
lret
stc
dec
leave
dec
std
pop
rcll
aaa
dec
sub
jge
mov
loope
cmc
shr
scas
sbb
add
mov
pushf
xor
out
mov
xchg
out
inc
rcr
arpl
shlb
inc
cltd
int3
dec
test
pop
pop
add
lahf
pop
sbb
fs
sbb
sub
popa
loopne
lods
cmp
int3
xchg
push
je
clc
mov
cmp
cmpsl
xor
sbb
js
and
pop
cld
jb
lods
nop
in
cmp
xchg
jg
inc
xchg
cmpsl
inc
push
adc
clc
adc
test
xor
daa
cmpb
jle
aad
andb
incb
out
jno
scas
adc
dec
cmc
lret
add
ret
lahf
jnp
dec
adc
dec
dec
xor
add
es
xchg
fst
fstl
sub
xchg
and
push
ret
push
mov
aaa
adc
pop
push
sbb
in
cmp
xlat
sti
fimull
insl
mov
mov
inc
xorb
iret
jmp
and
mov
mov
adc
lcall
icebp
mov
rol
std
mov
sub
outsl
daa
adc
mov
dec
insl
jno
mov
add
cli
ds
addr16
xchg
dec
jle
test
jb
enter
xchg
ja
mov
and
xchg
dec
in
pop
and
or
lahf
lock
stc
js
loop
add
in
jne
mov
xor
inc
sbb
repnz
push
sti
sbb
out
stos
push
loop
sbb
mov
out
dec
aaa
cli
hlt
cmpsb
and
outsb
cwtl
adc
pop
sbb
xchg
arpl
mov
jecxz
aaa
or
nop
orb
gs
js
in
std
lret
or
or
pop
mov
fucomip
aas
lods
sub
sub
xor
les
out
cmp
push
push
inc
std
into
sub
dec
movsb
aad
mov
dec
push
jmp
inc
sysenter
dec
lret
dec
fsubp
xor
fdivrs
gs
test
hlt
orl
mov
insb
jle
rcrl
inc
cltd
push
sub
ficomps
dec
lret
add
rol
push
not
push
je
std
subb
add
and
inc
cld
ficoms
ret
mov
jp
ret
outsl
jb
movb
popf
push
shl
rclb
dec
inc
mov
jae
xor
and
aaa
inc
mov
jle
mov
inc
popa
stos
xchg
scas
jno
ret
mov
or
xor
mov
mov
dec
cmpsb
imul
mov
mov
in
imul
dec
jbe
or
push
test
dec
addl
out
mov
adc
out
sbb
inc
inc
fwait
jae
fmul
repnz
out
pop
int
mov
ds
popf
movsb
sbb
roll
lret
jb
in
lea
mov
out
push
sub
pop
repz
iret
stc
cmp
shll
sbb
inc
imul
ret
int
dec
cmpsb
cmp
pop
arpl
aas
dec
inc
push
add
inc
mov
pop
mov
hlt
xchg
xchg
lods
adc
ds
daa
sbb
sub
sub
test
nop
andb
xchg
jecxz
outsb
jge
dec
or
push
ja
lahf
mov
cli
ret
lret
and
sub
aaa
push
cmpl
dec
xchg
rcll
pop
in
dec
cmpl
ds
pop
push
insb
xchg
dec
mov
mov
add
lock
xor
data16
in
rcrl
mov
fidivrs
xchg
sub
pushf
dec
dec
pushf
shr
loopne
pop
loope
rcll
jmp
cmpl
fcomps
xor
enter
add
nop
test
cld
or
cmp
aam
inc
stc
aam
stos
push
mov
das
pusha
ret
mov
lock
mov
dec
sti
test
push
jecxz
add
test
push
in
vunpcklps
mov
or
dec
mov
outsb
sbb
insb
mov
out
inc
push
repz
inc
fmull
mov
push
push
loop
cli
cmp
out
bound
push
inc
in
sub
jecxz
lea
mov
repz
mov
lods
lods
jecxz
mov
js
mov
sub
lods
or
imul
in
jo
ficomps
pop
fnsave
cmp
ret
cmp
popa
pushf
shlb
xchg
cmp
add
sarl
jecxz
clc
imul
fmuls
ds
ret
les
in
stc
pop
imul
std
push
test
and
mov
mov
mov
inc
sbb
mov
fisttpl
push
cwtl
jl
pop
mov
bound
cmp
ret
mov
mov
stc
test
jmp
add
sub
and
repz
xor
jb
ljmp
aaa
push
out
jecxz
jo
xlat
mov
lret
jmp
sbb
ret
mov
stos
cmp
sub
pop
xchg
loop
lcall
sub
adc
mov
and
push
test
dec
mov
xchg
pusha
mov
mov
add
xchg
jmp
mov
pusha
sub
and
dec
int
fstpl
in
les
cmp
push
fildll
adc
jge
testl
and
xor
adc
adc
mov
add
addr16
data16
lea
inc
out
movsl
sub
mov
sbb
lods
cwtl
mov
and
aam
scas
push
add
add
pop
lods
mov
ret
inc
mov
fistpl
fucomip
loopne
and
xchg
dec
mov
xchg
iret
in
xchg
dec
stos
sub
xor
test
xchg
inc
cs
and
js
inc
adc
mov
mov
add
mov
or
imul
push
push
push
repz
xorl
dec
sbb
xor
jno
imul
adc
mov
inc
notl
testl
sub
pusha
popa
xchg
jmp
inc
test
jbe
jmp
cs
mov
jno
xlat
dec
mov
lds
mov
shll
pop
sub
pop
leave
sub
and
pop
rolb
bound
js
inc
out
in
sbb
push
data16
cmpsl
jmp
sbb
jge
push
jg
add
pushw
pushf
testl
push
cmp
mov
mov
jmp
pop
mov
ret
cvtps2pd
out
mov
lret
push
xor
pop
dec
and
or
and
xlat
outsb
fwait
jle
pusha
adc
xor
aad
movsl
xchg
shlb
je
out
aas
addr16
sbb
mov
loope
push
mov
push
test
adc
mov
lods
push
shll
popf
push
jno,pt
adc
mov
aad
and
sub
das
xorl
popa
pop
jae
leave
adc
sbb
in
xlat
jle
mov
lret
push
mov
sub
test
loopne
cmpsb
xchg
push
and
pop
pop
jnp
lods
insl
adc
int
sbb
andl
mov
push
stc
xor
sarl
enter
mov
cltd
sahf
jl
inc
mov
xrelease
xchg
mov
lds
test
push
inc
mov
pop
test
pop
fcomp
mov
pop
aad
stc
frstor
mov
loope
insl
aam
adc
sti
and
mov
in
icebp
lcall
adc
jae
inc
push
cmpsb
or
das
sbb
add
test
xor
into
push
in
loopne
cwtl
xorl
or
imul
add
mov
sbb
jnp
mov
fsub
int
lret
mov
push
push
nop
xor
lahf
fidivrl
jns
loopne
cmp
inc
jle
mov
inc
in
js
imul
mov
and
lahf
xchg
xchg
jl
out
cld
movsb
subl
out
outsb
in
fwait
out
popa
sub
out
mov
sbb
push
lds
ficoms
mov
pop
test
pop
adc
aaa
dec
lods
je
mov
mov
arpl
jo
hlt
inc
lea
cmp
in
mov
mov
test
add
xorb
shlw
fbld
xchg
test
cmp
cs
lock
mov
movsl
mov
dec
mov
scas
or
inc
clc
pop
jg
sbb
mov
push
jge
scas
inc
push
mov
cld
lds
mov
cmp
jb
pop
push
xchg
push
or
dec
popf
push
call
cmc
shrl
dec
pushf
imul
ror
into
jb
roll
into
insb
cmp
jle
jmp
clc
jge
jle
mov
aas
adc
add
add
mov
fdivrl
jle
rol
mov
sbb
fisubrs
out
add
mov
mov
jnp
ret
fmull
ljmp
lea
ds
sti
mov
push
mov
xchg
sub
out
loop
mov
push
in
dec
jnp
insb
dec
fnstenv
jns,pn
sub
out
mov
stos
mov
insl
jae
je
mov
mov
shrl
in
add
and
lods
inc
paddsw
sbb
arpl
adc
jnp
mov
arpl
rorb
aaa
mov
push
adc
js
adc
dec
insb
mov
sub
xchg
cltd
cmp
adc
inc
jb
js
sar
and
jmp
popf
repnz
outsl
pop
movsl
cwtl
fcomip
sarl
add
out
test
sbb
outsb
jae
out
and
aas
sub
or
lret
sbb
sbb
repz
outsl
sbb
adc
cmpsl
mov
jl
iret
test
fs
shll
sbb
roll
pop
test
mov
lods
fbstp
imul
pusha
dec
xchg
lret
insl
leave
push
std
inc
daa
and
lods
lea
sub
ret
jnp
test
lods
js
sbb
pop
xchg
fimull
ret
in
pop
clc
jmp
fisttpl
xor
ret
leave
lods
fwait
stos
add
or
scas
xlat
add
stc
aas
pop
jnp
sbb
sub
jmp
das
into
xor
mov
imul
fisttps
in
inc
sub
jmp
out
and
test
cmp
xchg
dec
inc
outsl
mov
and
es
repnz
dec
mov
add
orl
lea
or
andb
enter
seta
jne
data16
fwait
xor
out
jecxz
sbb
fistl
sahf
or
and
mov
pop
dec
mov
mov
or
adc
fidivl
sti
push
adc
ds
ljmp
xchg
andb
inc
pop
repz
fcmove
and
mov
fldenv
fbld
sbbb
xchg
or
sbb
jl
int
sub
add
cltd
js
push
out
add
push
fldl
mov
movsl
inc
sub
jb
decl
cld
mov
rclb
mov
fdivl
cmp
jg
inc
sar
jne
add
xchg
mov
sahf
push
cli
std
adc
jnp
pop
xor
sbb
mov
movsl
cmc
push
sub
xor
arpl
lock
xlat
sti
movsl
mov
push
cs
outsb
aaa
add
inc
pop
sar
dec
sbb
mov
sub
jge
test
sarl
inc
jnp
push
dec
sub
sbb
push
cmp
xchg
stos
cmc
out
es
push
mov
pop
pop
dec
test
xor
icebp
leave
test
scas
sub
clc
clc
stc
scas
sub
jno
aad
in
in
sbb
orb
or
pushf
les
std
movsl
and
stos
dec
clc
movsb
inc
inc
mov
mov
lods
aad
mov
mov
fimuls
loop
push
lock
ds
mov
push
xchg
push
popf
shlb
enter
push
inc
das
int
pop
adc
adc
mov
pop
mov
lds
add
dec
dec
jl
pop
push
lods
movups
and
mov
xorb
leave
push
sbb
cmp
add
fdivl
outsb
aaa
sub
xchg
enter
dec
pop
pop
jge
nop
mov
outsb
push
mov
xor
sub
dec
push
mov
push
xchg
jp
mov
jmp
xor
sbb
mov
mov
shlb
repnz
mov
cltd
les
jl
jo
mov
data16
loop
add
mov
mov
xchg
out
push
mov
adc
ljmp
mov
or
lahf
mov
and
pop
loope
icebp
sub
and
scas
scas
les
aaa
je
jne
cli
jo
std
adc
enter
mov
push
mov
inc
push
test
sbb
mov
lods
mov
pop
sbb
cmc
mov
cmp
cmp
sarl
shll
dec
pushf
push
gs
push
lock
lods
mov
pushl
test
sub
mov
int
mov
ds
push
ljmp
fwait
mov
cmc
mov
fldenv
mov
push
pushf
jno
xchg
cli
mov
fiaddl
inc
das
sub
dec
repz
push
sti
push
mov
pop
sub
mov
enter
cli
cmp
movsl
test
sbb
inc
in
bound
pop
fnstcw
cwtl
int3
jo
std
movsb
push
jnp
scas
in
mov
stc
inc
data16
sub
pop
fimull
push
xor
iret
scas
push
push
adc
adc
ret
push
andb
and
lods
pop
pushf
shll
adc
lods
jl
sbb
jle
xchg
jp
inc
push
sbb
stos
xlat
fwait
out
push
rcrb
pop
js
xchg
int3
inc
icebp
dec
mov
imul
ret
cmpsb
sub
andb
jl
imul
sub
pop
stos
sbb
mov
push
mov
push
mov
shrl
and
jecxz
stos
stc
inc
paddw
fwait
mov
js
rolb
inc
add
adcl
jae
lcall
xor
mov
out
dec
test
lahf
orl
sub
shlb
out
xchg
lods
sbb
adc
sti
sub
sbb
inc
jne
stos
jne
and
and
mov
push
lahf
or
negl
mov
xor
xor
dec
mov
add
andl
pop
mov
je
sub
repz
stos
popf
lret
int
inc
jmp
popa
hlt
sbbb
jne
popa
push
es
cmpsl
imul
pop
push
mov
ret
dec
mov
jg
push
sbb
pop
aam
adcb
adc
mov
jg
test
pop
dec
test
pop
xchg
xchg
sbb
mov
stos
push
fcmovb
pop
jae
adcl
adc
ja
or
mov
fidivl
out
push
add
in
xchg
aad
adc
std
in
mov
jno
cmp
adc
jb
ror
pop
xor
out
shl
xchg
aas
and
sub
xor
popf
cli
lea
fwait
mov
imul
sbb
lcall
cmp
push
mov
test
arpl
xchg
adc
mov
fsts
push
fcomp
xchg
inc
push
cltd
das
mov
cld
fcoms
stc
add
and
divl
xchg
scas
fcoms
sub
sub
adc
loopne
js
lds
int
pop
jns
aam
xor
jecxz
jmp
leave
mov
pop
push
clc
insl
xchg
lahf
xorl
lret
jb
test
pop
lahf
pop
add
int
mov
dec
pop
jae
push
jp
test
inc
js
sbb
daa
cmp
fdecstp
sbb
pop
repz
xchg
sahf
popa
sbb
enter
or
lods
popa
roll
pop
mov
mov
jnp
ret
add
mov
xchg
push
xchg
mov
pop
lock
testb
dec
in
insl
fsubrs
cwtl
sub
pop
or
add
mov
daa
das
fimull
addr16
in
fnstsw
stos
xchg
mov
lret
pusha
in
mov
cmc
xor
je
cmp
ds
ljmp
mov
enter
nop
movsb
and
mov
movsb
popa
cmp
das
stos
push
loopne
jns
xor
add
jp
sbb
clc
xchg
cltd
pop
mov
out
lock
mov
int3
xchg
stos
lcall
sbb
jg
mov
mov
pushf
in
rolb
inc
sti
xor
inc
jp
mov
iret
xchg
lret
or
fcoml
andl
push
inc
movb
out
aaa
xchg
sarl
sahf
imul
scas
repnz
das
sarl
inc
cli
int
jnp
or
xor
test
sbb
bound
rcrl
xchg
repz
gs
stc
adc
cmp
pop
dec
icebp
add
jns
sub
cmpb
mov
mov
iret
cltd
sahf
add
mov
cmc
mov
cmc
jmp
je
cltd
push
popf
leave
xchg
mov
hlt
sbb
mov
add
jno
mov
mov
scas
mov
adcb
rorb
mov
aam
dec
jmp
sub
push
inc
call
in
pop
push
ljmp
inc
push
mov
inc
dec
mov
lahf
adc
sbb
fisttps
mov
xor
cmovns
sub
mov
test
xchg
les
inc
insb
in
jmp
push
or
sub
in
add
sbbb
fisubs
pushf
lcall
lods
mov
dec
into
fcmovne
adc
cmpsl
xor
push
jle
or
test
push
xor
cmp
lcall
jns
mov
movb
mov
popa
jne
and
enter
mov
jno
mov
jno
leave
mov
fisttpl
or
inc
fstps
lock
mov
js
test
adc
ja
xor
scas
cmp
stc
mov
cwtl
mov
inc
pop
int3
cld
mov
in
push
sbb
mov
and
cmp
sbb
test
jle
cmp
inc
outsb
xchg
jnp
mov
add
pop
cmc
rorl
loopne
push
or
popa
jno
out
into
out
push
jns
jbe
jmp
stos
sub
bnd
jno
push
jns
jns
inc
inc
std
and
push
pop
cmpsl
or
mov
cmp
inc
cmp
dec
push
fistpl
mov
scas
and
daa
sarb
inc
push
leave
mov
dec
mov
cmp
push
and
xor
adc
xor
mov
mov
outsl
jl
dec
ret
fstpl
aas
mov
and
out
jle
rcr
lock
add
add
or
mov
sar
add
shll
jl
mov
std
loop
call
stos
mov
mov
xchg
std
sbb
push
cmp
cwtl
nop
sbb
or
je
pop
mov
icebp
popa
push
lods
push
mov
xchg
std
pusha
mov
adc
imul
mov
rolb
or
mov
btrl
inc
push
adc
lds
psubd
ret
in
push
mov
sbb
sarw
movsl
test
les
lea
enter
mov
test
icebp
cmp
push
into
push
in
repz
test
or
test
clc
adc
or
xchg
add
cmpsl
mov
push
xchg
loope
insl
sahf
push
adc
lcall
enter
jle,pt
sarb
stc
xor
jmp
pop
or
xchg
mov
mov
int3
scas
inc
xchg
int3
insb
orb
or
popa
or
adc
mov
cld
std
pop
jo
xchg
xlat
jp
lock
mov
out
xor
rol
sbbl
jno
scas
rcrl
aam
mov
call
fidivs
adc
shll
out
xor
jecxz
lret
pop
clc
cmc
add
inc
das
xchg
push
outsl
or
push
lcall
rorb
xchg
pusha
mov
dec
push
lods
notl
in
lods
pop
je
neg
clc
jg
test
je
and
jbe
aad
sbb
das
mov
or
mov
sbb
push
adc
int3
test
and
add
cltd
jg
decb
mov
xchg
or
stos
mov
sub
movsb
sub
leave
pop
add
dec
add
pusha
jg
and
inc
sub
add
shr
push
push
mov
jl
pop
mov
sub
push
mov
dec
dec
mov
hlt
dec
jle
adc
mov
pop
push
in
mov
jecxz
cmp
mov
nop
mov
scas
cmp
outsl
jecxz
xor
mov
fildl
ret
mov
dec
fs
ds
lock
adc
lods
adc
mov
das
rorl
mov
mov
aam
jbe
ljmp
enter
popf
sarl
andl
sub
sub
xor
loopne
pop
and
test
mov
jne
cmp
out
leave
test
mov
ja
or
add
inc
push
dec
clc
sbb
out
dec
sub
mov
push
mov
outsb
lods
rcrb
inc
movsl
jnp
ret
pop
dec
stos
int
lea
jb
loop
nop
inc
jg
lcall
mov
fwait
inc
adc
cli
dec
outsb
mov
adcl
popa
or
daa
cli
adc
in
xchg
out
lret
mov
sub
add
xchg
sbb
xor
repz
movsl
stos
fiadds
xchg
inc
ja
hlt
xchg
pop
popf
in
call
pop
fdivrp
in
mov
insl
inc
lea
hlt
scas
xorb
adc
popa
cli
pop
push
pusha
pusha
adc
shll
adc
xchg
mov
leave
lea
fwait
mov
jg
xor
cmpb
loope
adc
and
sub
loop
inc
gs
into
jns
mov
nop
cltd
cmpsl
lods
repnz
xchg
out
and
push
movsl
pusha
push
xchg
repz
push
mov
int3
dec
sub
mov
cmc
mov
jp
out
outsb
dec
mov
xchg
int
mov
sbb
sahf
add
imul
test
in
inc
into
mov
fildl
push
push
lret
sbb
mov
dec
adc
inc
xor
xor
pop
mov
or
lcall
fistps
fdivs
mov
mov
push
jno
je
xchg
xchg
mov
nop
add
scas
mov
jb
jno
nop
ret
out
mov
es
push
cmpsb
jne
push
cld
inc
test
repnz
cmp
or
lcall
ror
stos
dec
mov
or
mov
xor
jne
dec
lret
ds
xchg
lcall
les
jnp
pop
lods
add
mov
pop
xor
or
and
idivl
pop
loopne
enter
lods
add
hlt
xor
inc
push
out
inc
leave
mov
xchg
lods
cmp
lahf
rcl
lret
cmp
mov
mov
dec
and
shrl
dec
sub
loope
leave
sti
nop
aas
jl
xchg
fs
ds
adc
rorl
dec
out
adc
xchg
xor
or
cmp
cmp
dec
in
into
adc
aam
fstpl
enter
sub
mov
ret
clc
nop
and
xchg
mov
scas
xor
mov
icebp
je
cmpsb
pop
lds
out
out
ja
xor
test
outsl
xor
mov
repz
icebp
mov
bnd
dec
cld
mov
xor
mov
sub
pause
mov
adc
jecxz
xor
xor
sahf
xor
and
ret
clc
or
clc
cmp
sbb
mov
pop
pop
sbb
push
decb
sahf
xor
fnstenv
pop
jge
cmp
cmp
shrb
popf
pop
jbe
js
xchg
xchg
pop
mov
mov
test
enter
leave
inc
outsl
ds
mov
test
divb
adc
push
pushf
popl
xchg
movaps
add
adc
fdivl
and
mov
mov
scas
loope
mov
je
mov
adc
scas
cli
cmpsl
push
cmp
repnz
pop
pushf
dec
pop
xchg
test
xchg
arpl
sub
jg
rol
sub
add
ret
sub
les
mov
lea
lahf
adc
cmp
cmp
sbb
mov
movsl
fwait
fs
ficoml
repnz
jle
inc
lcall
jge
out
fwait
xor
mov
sbb
movsb
or
das
add
cld
in
into
iret
jle
add
pusha
leave
jae
or
adc
sub
inc
push
fsubrl
jmp
inc
insl
cwtl
sub
lea
cmpsl
lret
aas
push
les
or
mov
dec
add
mov
push
push
repz
aad
adc
mov
add
jbe
add
ret
ret
jecxz
fcoml
cmp
xchg
xchg
in
sbb
std
adc
js
and
in
xlat
aad
add
pop
shlb
xchg
es
es
addr16
lds
dec
sbb
xor
negl
sub
adc
test
lea
adc
scas
mov
mov
and
adc
bound
enter
mov
cwtl
mov
push
jo
cmc
bound
and
mov
add
sub
pop
jp
ss
sbb
pop
dec
jnp
movsl
sahf
push
fld
lret
stc
and
add
in
mov
outsb
adc
leave
sbb
push
inc
sbb
push
fistpll
cmp
test
ret
push
cmc
jl
ss
cmp
pop
cmp
fildll
mov
test
push
sbb
lods
adc
cwtl
sub
nop
pusha
lock
sbb
fisttps
je
addb
shrl
sbbl
aam
push
cmpsb
js
push
or
je
movsl
push
push
out
xchg
inc
jb
test
iret
leave
bound
xchg
jecxz
sti
push
arpl
add
imul
push
js
push
dec
add
call
movsb
shrl
pop
push
or
mov
pop
stc
add
fisubrl
es
fcoml
mov
fiadds
aam
mov
enter
mov
test
cmp
mov
jge
sahf
mov
or
scas
sub
add
sub
lds
inc
xorl
cld
mov
shlb
jmp
outsl
int3
adc
mov
pmaxsw
xor
in
popw
gs
jmp
lret
push
ljmp
sub
out
mov
icebp
adcl
test
mov
es
push
pop
jl
out
cli
xchg
ds
push
out
xor
mov
dec
fwait
add
inc
incb
jnp
adc
adc
inc
stc
sbb
out
icebp
andb
ret
jmp
fmulp
popa
adc
je
das
clc
pop
adc
scas
adc
roll
xchg
pop
hlt
mov
jne
sub
pusha
mov
lock
movb
popa
imul
sub
pop
cltd
cltd
pop
outsb
mov
adc
adc
jle
and
fstps
es
outsl
fcomps
sbbl
push
int3
xchg
add
and
ret
dec
fdivp
mov
mov
push
movl
out
arpl
enter
roll
repnz
lods
sti
in
fistps
ret
icebp
xchg
add
out
sti
mov
stos
cmp
mov
dec
add
sbb
dec
shlb
addr16
mov
push
es
mov
mov
stc
dec
stc
mov
cs
pop
aam
xchg
xchg
frstor
cmc
mov
xor
dec
xor
insb
jne
push
adc
out
call
jmp
sub
loope
push
aad
nop
and
xor
and
sarb
add
dec
mov
xchg
add
cld
and
lds
inc
in
sbb
aas
mov
pop
push
movsb
add
das
inc
jbe
xor
sbb
shll
mov
addb
sbb
sub
adc
cmp
push
scas
mov
dec
xchg
mov
ss
sbb
cltd
mov
in
scas
add
mov
inc
sub
dec
and
stc
cld
mov
call
add
je
cmp
pushf
into
sbb
scas
es
dec
pop
addr16
arpl
iret
call
pushf
scas
adc
jb
cmp
or
aad
hlt
inc
sub
leave
fsts
leave
cmp
mov
iret
mov
filds
push
loopne
cmp
or
daa
out
movsb
test
and
negl
dec
call
outsl
push
sub
jae
lahf
sbb
jp
mov
aaa
and
xor
test
adc
jnp
prefetch
push
bound
pop
sub
pusha
mov
push
cmpsl
adc
addr16
das
stc
cmp
sub
mov
ret
call
inc
jle
push
xchg
scas
sub
pop
cmpsb
fisubrs
fcmovnbe
in
pop
jg
dec
mov
enter
mov
ljmp
psubw
out
xlat
xchg
jb
pop
and
nop
dec
cmpsl
out
outsl
mov
das
cmc
lods
int3
outsb
lcall
sbb
nop
inc
xor
dec
out
pop
push
cmp
push
loopne
xor
jl
sbb
mov
bound
and
and
leave
add
xchg
cmp
in
aad
fiaddl
sub
mov
hlt
fldl2e
and
xchg
mov
mov
loope
xchg
mov
and
mov
jo
in
cmp
in
scas
mov
inc
push
movsl
dec
inc
mov
push
roll
ss
cmpsl
adcl
lcall
dec
push
inc
and
pop
adc
adc
stc
sub
int3
xor
fldl
gs
frstor
mov
out
sub
jle
fcomps
mov
cmp
sub
into
ret
xchg
adc
loop
jmp
pop
xor
add
sbb
sbb
push
adc
test
pushl
pop
cmp
inc
mov
testb
xchg
lods
pop
jp
push
wbinvd
jge
rcr
imull
test
dec
cmc
push
ss
fists
loop
out
jle
ss
lret
insl
addr16
and
daa
mov
fnsave
sarb
mov
cmp
push
lahf
fwait
dec
jne
cmp
out
xchg
jl
icebp
cmpsl
cmc
lret
pop
test
repz
xchg
pop
inc
push
sbb
popf
or
push
inc
clc
cmp
es
cmpl
repz
sub
call
repz
sub
pop
lods
push
imul
cmpsb
dec
out
js
sti
sub
dec
adc
and
dec
popf
sub
or
cli
dec
lret
ljmp
inc
xlat
pop
in
inc
dec
aaa
fists
cli
sbb
mov
jae
adc
sbb
fcoms
jnp
add
sahf
loope
popa
frstor
shlb
cmp
test
mov
and
loope
insb
cmp
mov
or
sbb
psubd
jp
popa
and
out
sbb
jb
jno
push
add
sti
cs
push
dec
out
adc
les
cmp
icebp
xor
mov
and
sub
push
mov
outsb
out
loopne
testb
icebp
adc
xor
call
sbb
xchg
push
dec
ret
mov
cmc
lret
mov
adc
pop
add
loopne
mov
add
notl
sbb
iret
mov
jo
sub
cld
jb
cmp
sub
daa
in
rclb
dec
hlt
stc
imul
mov
idivb
sahf
and
bound
orl
clc
jge
mov
adc
jmp
cmc
jmp
xor
or
jmp
sbb
push
call
mov
push
rcll
aaa
cmp
cmpsb
incl
adc
push
xchg
add
or
dec
dec
jmp
lock
pop
inc
add
dec
mov
jmp
int3
push
jmp
mov
sbbl
inc
mov
cmp
push
cwtl
push
mov
mov
movsl
andb
jmp
ret
stos
cld
popa
dec
in
or
jno
xchg
in
pop
mov
enter
xor
rol
add
outsl
mov
sub
call
jecxz,pt
jne
inc
pop
insl
xchg
push
sahf
pop
jnp
sub
nop
fcmovnbe
mov
mov
jmp
jle
insb
icebp
icebp
and
add
test
repz
orb
pop
jmp
sub
adc
and
mov
inc
mov
fwait
adc
mov
pop
jb
inc
popf
sbb
mov
cmpb
aad
pop
ljmp
les
sub
add
inc
icebp
gs
add
cld
mov
xchg
decb
je
mov
push
bound
insb
lret
nop
test
adc
fdivl
jle
sub
or
in
lods
mov
aas
cmp
leave
push
fdivr
out
pop
sti
repz
add
cmp
or
sbb
es
popf
dec
call
push
or
xchg
in
out
jno
or
stos
or
sub
push
jmp
jmp
pop
dec
xchg
adc
out
and
add
jne
shlb
sub
adc
lea
push
xchg
xor
aad
loop
or
dec
mov
sub
inc
sub
mov
stc
ret
inc
in
rorb
mov
scas
jg
cwtl
sub
lahf
imul
pop
mov
out
mov
mov
dec
cltd
mov
lahf
jle
push
ret
sbbb
loopne,pn
and
xor
cld
test
movsl
fistpll
jp
pop
push
mov
std
scas
fsubrl
loop
dec
ja
mov
jg
or
xlat
arpl
adc
lods
ljmp
data16
dec
pop
inc
mov
pop
sahf
mov
or
cmp
loop
dec
mov
jg
testl
jne
dec
loop
call
jo
inc
lahf
out
inc
lods
sbb
ss
pop
cmp
and
ljmp
xor
repz
das
stc
mov
fwait
in
push
pop
cmc
daa
sbb
dec
add
dec
loop
jmp
jne
cmp
stos
test
je
jbe
adc
in
test
xchg
insb
lods
add
jl
movsl
mov
cs
orb
push
clc
cmp
pop
mov
daa
call
inc
mov
stos
or
ficomps
push
in
fcoms
test
cmpsb
fisttpll
cmpsl
and
inc
mov
sarb
decl
aas
xor
lods
xchg
mov
int
sub
xor
mov
jbe
push
xchg
fcoml
scas
or
in
xlat
dec
push
movsl
jl
lods
fildl
jle
fidivrl
sub
push
push
cmc
orl
push
dec
nop
enter
push
outsl
mov
jl
sub
cmp
pop
or
sub
out
mov
shl
loop
push
sub
adc
xchg
mov
xchg
push
inc
jbe
fsubs
inc
aaa
mov
jne
jg
aad
inc
sub
adc
pop
imul
push
adc
mov
bound
insb
loopne
in
push
lock
sub
dec
or
push
mov
shl
xor
mov
add
or
es
lret
sbb
sbb
out
andl
inc
lcall
std
push
xchg
ret
fcoms
shll
or
stc
cmpb
push
adc
lods
cmp
mov
mov
fs
mov
lods
aam
push
mov
fs
dec
daa
push
mov
cmp
insb
xor
cmovs
cmp
in
and
mov
or
jnp
insl
push
popa
pop
aam
fdivrl
push
lods
push
mov
push
jb
mov
fmull
cwtl
push
jl
loop
adc
and
mov
xor
cmp
mov
mov
xchg
in
fldenv
cmpsl
mov
pop
lds
rcrl
mov
arpl
test
or
test
int
pop
aam
out
pop
inc
scas
cs
out
jbe
ja
mov
inc
mov
sbb
in
jae
xor
or
in
popf
ss
clc
test
inc
add
fstl
xchg
lahf
dec
and
test
push
insb
jno
dec
mov
xor
sahf
inc
dec
mov
inc
into
icebp
inc
pop
lock
aas
loope
pop
mov
mov
push
cli
repz
xchg
fstps
ret
ret
fldenv
inc
popf
jle
lods
mov
daa
aas
cmp
xor
mov
shlb
sbb
shll
mov
test
pop
mov
aas
leave
sub
setp
scas
jnp
jp
push
jmp
and
shlb
jo
cmc
sbb
fcomi
lock
outsl
insb
rorl
mov
dec
adc
pop
xlat
mov
sbb
jecxz
cltd
les
shl
cli
cmp
push
cltd
jns
mov
sahf
sbb
clc
xor
xor
stos
inc
mov
dec
ficoml
call
add
nop
std
mov
out
fwait
xchg
movsl
xor
dec
insb
loop
fwait
jnp
mov
or
jbe
sub
sbb
xchg
mov
insb
insb
adc
lock
inc
mov
add
andl
pop
or
mov
xorb
rcrb
ret
jae
pop
inc
aad
rolb
jb
sbb
aas
jne
adc
pop
jmp
and
out
insl
jg
jmp
ljmp
mov
and
sahf
mov
into
sub
popf
xor
xor
fucomip
mov
sub
inc
push
bound
out
mov
sbb
push
sub
jp
inc
and
cmp
gs
inc
shrb
mov
mov
xor
sbb
iret
lret
ljmp
mov
loopne
jge
rorb
imul
jbe
adc
out
mov
iret
xor
cmpsl
scas
xchg
or
movsl
popa
mov
fmull
movsb
or
push
xorb
dec
push
jne
sbb
icebp
ficompl
test
and
fs
data16
and
add
push
pop
sub
pop
push
imul
mov
imul
mov
pop
mov
ds
mov
inc
mov
jmp
in
jno
std
ret
mov
push
in
xchg
clc
imul
adc
push
rclb
dec
sub
fimuls
cmp
inc
into
push
mov
loope
push
mov
fldenv
push
fwait
or
in
addl
fsubrs
jae
xchg
inc
sbb
test
xor
aam
popa
add
jo
out
xchg
push
add
xor
les
and
sahf
and
dec
jo
scas
pushl
ds
je
mov
and
jbe
cmp
or
xor
dec
lret
xlat
push
ficoml
inc
cld
mov
cld
and
frndint
sub
test
and
fucomip
repz
sbb
sub
jge
add
or
andb
inc
mov
mov
lock
dec
and
pop
or
jno
movsl
dec
mov
mov
ret
aas
inc
mov
jne
or
jne
aad
scas
xorl
sbb
mov
jle
mov
mov
mov
mov
movsl
lds
aad
inc
inc
pusha
mov
fildll
sub
divb
ljmp
xor
xor
jno
mov
jg
mov
xchg
rcll
test
ftst
lcall
xor
pop
insl
divb
clc
sbb
xor
js
mov
das
jg
jae
into
cltd
js
ret
bound
pop
inc
icebp
ljmp
inc
xchg
in
pop
sub
movsb
push
std
imul
jne
inc
lcall
popf
xchg
sub
outsl
movsl
mov
adc
mov
ss
js
mov
in
pop
cwtl
outsl
inc
jp
pop
cmpsb
lahf
jg
ret
mov
sarl
pop
push
and
jle
mov
jo
jle
insl
cmpsb
pop
loope
pop
add
mov
popf
inc
fimull
xorb
inc
shll
movsb
scas
sub
xchg
push
pop
jo
pushf
ljmp
mov
cld
movsl
pop
clc
pop
insb
out
sahf
js
add
arpl
mov
dec
test
ja
sbb
cmp
insb
sub
pop
out
xchg
or
test
notb
aam
xchg
js
mov
dec
inc
jno
mov
or
outsb
lea
xchg
sub
pushf
pop
frstor
out
mov
dec
fidivrs
mov
testb
xor
std
adc
negb
jnp
jno
xchg
mov
out
mov
xchg
push
imul
and
cmp
fcomip
xor
daa
out
fs
cmp
jno
jecxz
negb
inc
rcll
into
imul
ljmp
jp
sub
shl
pop
mov
fiadds
inc
jne
add
sbb
cmpsb
cmp
push
jmp
sbb
mov
shlb
mov
negl
push
inc
les
sbb
mov
rorl
cmp
jmp
xor
in
lods
std
dec
mov
or
xchg
addr16
orl
aas
ja
cmpsl
cmc
mov
xlat
jno
push
rcrl
movsl
lahf
repz
sbb
fcoml
and
mov
add
cmp
sbb
cmp
sub
sarl
in
mull
les
lcall
test
popa
nop
or
clc
test
mov
jl
loope
lods
std
ror
pop
outsb
sbb
cmpsl
cli
push
lds
jbe
sti
lahf
sahf
popa
mov
or
and
mov
out
cmpsl
or
xor
xchg
dec
xchg
fsubp
mov
outsl
aad
and
icebp
xchg
divb
insb
and
movsb
lcall
popa
push
dec
loopne
mov
push
fldl
stc
jp
popa
push
daa
xchg
push
mov
insb
mov
xor
push
push
call
imull
and
inc
xor
ss
jnp
les
jmp
pusha
clc
pop
inc
lret
mov
xchg
lds
loopne
jae
outsl
sub
sahf
pop
gs
into
pop
cmp
jno
xchg
push
and
mov
lahf
xor
push
loopne
inc
orb
movsl
mov
mov
sub
push
aad
cmp
aas
or
add
vfrczpd
lds
push
cmp
mov
imul
popa
in
lods
stos
mov
cwtl
push
movsl
loope
sbb
sbb
adc
cmc
lret
mov
cmp
dec
in
mov
mov
mov
inc
dec
jne
xor
out
mov
xchg
pop
in
push
cmp
push
fwait
dec
or
cmp
cmp
add
or
cmp
or
das
fsubs
lds
testb
pop
test
das
ret
es
and
aaa
xchg
adc
push
loop
mov
stos
jg
repz
push
outsb
mov
ret
push
int
stos
adcb
mov
inc
mov
push
hlt
and
cmpsb
mov
in
ret
or
xor
fdivrs
iret
xor
fmuls
mov
mov
popa
loopne
or
dec
mov
cli
shl
adc
scas
cmpsl
or
xlat
cli
and
push
sub
push
cmp
out
push
inc
std
iret
jmp
daa
inc
shll
mov
test
clc
int3
dec
xor
idiv
loop
rcl
pushw
pushf
rcll
loopne
cwtl
sar
test
xchg
in
push
xchg
icebp
outsl
push
push
jl
das
jge
adc
push
scas
js
mov
xchg
fadd
movsb
jo
in
lock
or
sarl
push
jns
or
xchg
rorb
adc
insb
mov
sbb
stc
mov
mov
movsl
fnstenv
mov
cmp
outsb
pop
mov
enter
jge
dec
loope
js
loopne
fld
mov
or
cmp
xor
sti
dec
int
aad
jle
loopne
xor
mov
mov
mov
or
pop
adc
push
fldcw
push
frstor
in
cmp
ja
repnz
or
push
pusha
ja
pop
stc
xchg
mov
mov
repnz
mov
pushl
xor
mov
jae
adc
inc
fimull
shrl
test
or
pushf
inc
in
pop
pop
xlat
sub
aad
pusha
mov
mov
jl
and
sti
adc
cmovbe
push
mov
mov
hlt
or
fdivl
lods
mov
fwait
and
repz
into
or
mov
jae
or
inc
add
mov
idivl
jae
adcb
ja
cld
lret
adc
pop
enter
fnstsw
mov
mov
inc
mov
aas
ja
pop
or
enter
pop
pop
xchg
mov
add
imull
repnz
cmp
ret
add
xchg
xchg
add
aaa
in
lahf
cld
mov
mov
addb
int
cmp
jge
repz
pop
imulb
out
testl
out
ja
jno
jo
jp
xchg
or
in
inc
mov
mov
lds
sarb
adc
pop
cmpsl
xchg
aas
roll
test
test
loope
push
xchg
fs
pop
push
xor
andl
ret
cmp
push
bound
ret
and
clc
jbe
adc
sbb
lret
mov
xchg
push
hlt
push
mov
bound
adc
jb
mov
repnz
nop
loop
pop
cmp
dec
pop
bound
fstp
stc
xchg
push
shr
stc
imul
shll
inc
cltd
dec
aaa
and
adc
adc
add
xor
pop
fbstp
aas
sub
mov
scas
shrb
pop
mov
data16
mov
xchg
push
push
loope
adc
cli
iret
xor
ss
mov
pop
insl
outsb
test
je
dec
jae
fwait
jecxz
insl
jno
dec
pop
add
repnz
outsl
rclb
and
outsb
or
ret
icebp
pop
pop
and
pop
test
std
xchg
cli
fildl
and
and
stos
jns
andb
pusha
add
cwtl
push
ja
or
cltd
insb
je
jo
jl
and
ds
fdivp
in
repz
mov
xor
jae
movsb
fldt
aad
xor
sub
data16
in
jno
push
inc
inc
xchg
test
das
mov
push
jo
dec
and
mov
or
pop
movsl
push
inc
mov
pop
mov
add
jno
mov
nop
jne
lahf
sub
jecxz
stc
cld
jae
mov
xchg
pop
fmuls
lds
sbb
scas
cmp
jbe
xor
popf
xor
loopne
cmp
idivb
stos
enter
xor
mov
inc
xchg
mov
iret
imul
lret
xor
sahf
test
lret
popw
gs
pop
call
bound
clc
mov
inc
mov
jns
mov
jle
fstp
add
lea
das
gs
or
cmp
pop
add
mov
sbb
push
sub
rol
jp
in
ljmp
fistps
sbb
push
jno
movsb
pop
lods
cmp
cltd
sub
cli
lcall
adc
adc
repnz
pop
sub
pop
and
lods
cld
adc
pop
add
sub
pop
and
fdivrl
jae
pop
sahf
insl
decb
dec
mov
in
jbe
arpl
les
loopne
xor
in
insb
lahf
pop
cmpsb
ret
and
mov
push
add
out
out
js
into
outsb
sbbb
jne
iret
adc
push
jmp
sbb
cltd
cltd
mov
mov
mov
outsb
les
mov
int3
xor
jmp
adc
cmp
cmp
mov
xor
inc
or
or
das
sub
fs
dec
lahf
iret
loopne
jmp
push
xor
ret
mov
pop
jns
rolb
or
mov
iret
movsl
es
push
adc
mov
hlt
sbb
aaa
repz
sub
jnp
aam
imul
push
pop
xor
ficomps
cmp
arpl
cmpl
mov
stos
ret
popa
jne
push
pushf
push
popa
inc
popa
out
adc
adc
add
jno
mov
stos
dec
movsl
dec
add
pshufw
mov
and
stc
sbb
and
mov
dec
pop
popf
out
push
hlt
jo
push
sbb
jmp
fbld
aas
repz
mov
push
leave
test
loop
jnp
divb
adc
and
dec
mov
hlt
xor
fldt
icebp
jge
push
movsb
sti
shlb
sub
mov
push
rcl
inc
inc
jg
push
pusha
jb
stos
add
pop
mov
shrb
mov
test
jl
sub
clc
lret
adc
push
movhps
jl
in
subb
outsb
int
mov
ret
jecxz
cmpsl
pop
jae
and
lret
cmpsb
cmp
fdivp
xchg
daa
jns
sub
mov
shlb
sbb
jle
pop
addr16
jmp
lods
jg
les
incl
movsl
aaa
mov
jns
fistps
out
pop
rcl
jge
loop
mov
inc
cmc
cmp
insl
setbe
pop
push
mov
aad
sub
lahf
mov
mov
imul
mov
outsl
in
push
subb
cs
sub
jb
pushw
jne
inc
xor
push
adc
data16
push
and
mov
mov
insl
sbb
loope
adc
ljmp
dec
xchg
aam
inc
dec
mov
pop
and
cmpsl
aaa
dec
daa
mov
xchg
cmp
jecxz
dec
add
stc
in
pop
xchg
mov
subl
in
push
xchg
popf
sub
stos
das
and
jl
xchg
or
mov
pop
push
jo
add
pop
daa
lock
adc
xchg
mov
push
push
cs
cs
and
insb
outsb
cmp
movsb
xlat
jne
and
adc
cld
or
and
testl
gs
lcall
inc
pop
mov
xor
cmp
lds
or
nop
repz
fstps
movl
cmpsl
inc
dec
or
fsubl
pop
jnp
mov
das
jbe
imul
loope
mov
cmp
cmp
jns
cmp
add
stc
pop
fucom
dec
pop
jne
and
out
aas
add
push
sub
mov
int
jg
inc
aaa
mov
cmpsl
sbb
mov
or
clc
gs
les
mov
sarl
sar
cmp
jp
mov
js
insb
and
lds
adc
dec
outsl
aad
jns
xchg
clc
sub
in
jp
add
lods
sti
sub
or
cltd
add
push
es
pop
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
pop
and
cmp
push
dec
jns
mov
push
cmpsl
cmp
adc
mov
mov
jg
test
xor
and
ret
pusha
jg
rcrl
inc
dec
repnz
scas
inc
call
mov
shll
rcl
enter
mov
out
mov
in
or
addr16
clc
jae
dec
ror
fdivs
movsb
test
jl
test
cmp
fdivrs
dec
rcll
es
insb
xor
jb
jge
fsubrs
and
cld
xchg
adc
xor
sub
adc
and
inc
mov
adc
pop
sub
outsb
mov
pop
and
jno
in
xchg
repnz
rcr
call
or
sub
fdivs
hlt
movsb
arpl
gs
sub
xchg
and
ljmp
lcall
pop
xchg
in
or
xorl
lret
aaa
pushf
sub
fs
out
inc
pusha
outsb
pop
jbe
mov
inc
mulb
adc
int
out
lods
cmpsb
ja
or
xchg
lea
mov
or
stc
imul
pusha
outsl
push
in
mov
ljmp
push
movsl
jge
and
mov
cli
sti
cmp
adc
cmp
push
mov
imul
gs
xlat
add
fidivrs
mov
and
xchg
call
adc
push
dec
das
adc
or
push
mov
je
add
ret
dec
pop
lods
and
ret
pop
mov
stos
sar
xchg
in
mov
scas
push
inc
data16
jne
enter
sub
mov
int3
sarb
sub
sub
dec
repnz
mov
mov
push
jb
test
pop
ljmp
test
add
xchg
and
add
int
adc
push
idivb
int3
cltd
or
push
cmpsb
arpl
and
stos
adc
popf
in
flds
mov
ret
mov
mov
xor
sub
xchg
test
mov
pushf
out
lahf
psubsb
and
popa
orb
pop
adc
and
mov
repnz
dec
xor
xchg
lea
sbb
or
xchg
mov
inc
fs
push
mov
ljmp
push
imul
cmc
or
sahf
scas
fisttps
jns
pop
pushf
xor
push
leave
filds
inc
mov
cmp
sub
negl
in
inc
sub
xchg
cmp
mov
mov
pushf
jecxz
scas
pop
int
out
ss
lret
push
fwait
xchg
cmp
lea
mov
popf
xor
outsb
lcall
mov
mov
sbb
or
push
cmp
aaa
dec
jae
lods
add
jbe
mov
pop
jmp
adc
ret
jnp
je
sub
and
loope,pt
push
mov
and
or
inc
rorb
push
hlt
aas
loopne
sub
vpunpckldq
sbb
sahf
adc
jo
jae
mov
sub
in
jne
jecxz
fsts
mov
in
popa
sub
nop
bound
push
and
arpl
jns
out
aad
clc
ljmp
mov
sub
lret
inc
cmp
xor
in
jo
pusha
push
fsubrs
jmp
hlt
push
out
mov
push
sub
imul
jl
jl
jne
lea
mov
mov
cmc
cmpsb
jge
enter
sahf
not
pop
in
imul
lock
adc
xchg
or
xor
jmp
insb
mov
sub
add
test
mov
dec
sarl
mov
dec
cmpsl
in
loop
push
push
jnp
sbb
and
leave
jecxz
cmpsb
pop
inc
push
pop
cwtl
ds
sbb
add
xor
lret
insb
fs
push
fdivs
stc
sub
lods
test
mov
mov
push
cmp
pop
cli
and
es
dec
pop
inc
or
sbb
mov
in
mov
add
dec
loop
outsb
and
pop
and
pop
insb
enter
adc
in
cmp
data16
repnz
loope
dec
adc
xchg
push
imul
add
xchg
jns
in
or
jecxz
jbe
xchg
lret
inc
and
push
xor
int3
pop
inc
dec
sub
xchg
ljmp
push
mov
or
incb
aaa
push
test
sub
mov
sub
jo
push
mull
jecxz
cltd
sbb
push
scas
or
sub
fmull
sub
testb
test
mov
popa
add
lds
sub
in
jge
ret
test
arpl
pop
fisttpl
adc
jge
popf
sub
aam
ret
popa
clc
ja
clc
pop
dec
add
add
stc
mov
cmp
push
clc
out
in
popf
aas
mov
xchg
xchg
je
ja
or
inc
pusha
jo
outsl
negb
cmpsl
mov
out
cmp
ljmp
js
and
hlt
mov
jno
pushf
test
push
inc
jo
add
int3
and
out
push
xchg
lock
dec
add
dec
dec
sbb
gs
fistps
mov
pop
sarl
jae
int
out
les
mov
lods
jecxz
das
outsb
cmc
popa
cwtl
ss
divb
cwtl
jge
mov
shlb
inc
inc
cmp
xchg
lods
mov
sbb
imul
std
push
insb
cmc
adc
push
mov
imul
out
xchg
adcl
jno
incl
cmpsb
call
fists
xor
sub
pop
jmp
repnz
in
orb
add
push
rorb
scas
out
add
lods
out
cmpsb
out
rcrl
pop
xor
pop
jae
sbb
sahf
outsl
cld
cmp
xchg
dec
out
mov
push
mov
push
cmp
fistps
movsl
setne
inc
inc
push
sti
dec
and
pop
jg
ja
adc
je
xlat
or
push
in
jecxz
mov
mov
jecxz
sbb
stc
add
push
ljmp
scas
int
int3
cmp
test
cmp
pop
inc
out
mov
xchg
ljmp
cli
mov
jl
xchg
mov
dec
popl
lods
or
hlt
jmp
jne
xchg
xlat
jmp
mov
jecxz
mov
popf
xchg
cmp
cmp
movsb
mov
xlat
xchg
addl
jo
pop
jo
or
icebp
mov
sub
enter
jmp
pop
out
fnstenv
push
lahf
jge
outsl
pusha
arpl
cmp
or
ficomps
iret
jp
mov
sub
mov
jnp
sub
inc
push
xor
mov
pusha
jmp
cwtl
mov
pop
push
stc
jp
mov
ficoms
xor
jmp
int3
cmc
xchg
mov
js
adc
dec
pop
aaa
push
call
sti
rolb
xor
xlat
mov
data16
fbld
mov
inc
pop
push
pop
stos
jmp
jns
mov
add
fwait
loope
sbb
xor
cmp
jo
dec
push
dec
and
pop
push
push
out
scas
es
test
shl
xor
push
jb
or
sbb
or
inc
jae
lret
xor
xchg
ds
out
pop
jp
dec
sbb
lods
push
add
imul
cmp
push
mov
pushf
daa
add
jb
cwtl
loope
push
cmp
add
pushl
fcomip
adc
push
lahf
nop
xchg
or
pop
xchg
mov
test
jb
orb
lock
push
adc
xchg
pop
sarl
gs
out
jnp
das
mov
jg
xchg
xchg
movsb
or
adc
xchg
shlb
mov
jp
mov
cmpsl
lcall
add
and
mov
insb
dec
add
repz
dec
or
mov
xchg
test
iret
lcall
lcall
xchg
add
cmp
mov
sbb
push
lds
sub
and
jae
mov
jl
cmpsl
push
sahf
popf
jmp
dec
ret
cli
push
push
testl
icebp
testb
and
dec
insb
aam
jbe
iret
adc
je
test
add
stc
popf
pushf
inc
sub
pop
insl
xor
adc
repz
insb
in
jne
inc
cmovg
push
je
ds
mov
xchg
cld
outsb
ds
cmpsl
or
mov
repz
mov
dec
pusha
mov
test
mov
mov
dec
jge
jle
push
xchg
out
sbb
stc
cltd
inc
add
sub
outsb
fwait
or
fcmovnb
movsb
jg
jne
jl
add
sbb
nop
jle
or
xor
int3
popf
jnp
adc
jae
fisubl
add
mov
shl
sub
int
xchg
in
cmp
inc
and
lock
cld
jno
inc
arpl
adc
pop
scas
loopne
cld
cmpsl
das
dec
or
jnp
pop
iret
add
loop
adc
jno
call
pop
sbb
popf
clc
push
add
test
bound
rorb
adc
xchg
sbb
sub
ret
mov
mov
out
cwtl
jle
jp
dec
inc
gs
or
insb
lret
sbb
aas
add
push
repnz
mov
dec
mov
sbb
jns
mov
push
ss
push
leave
push
mov
dec
inc
cltd
sbb
dec
push
pop
add
mov
pop
scas
and
out
xchg
mov
ljmp
adc
fldl
call
mov
mov
movsl
dec
roll
int3
addr16
or
jg
jo
or
subb
mov
mov
ja
out
out
aad
mov
jo
xor
je
notl
push
push
add
xchg
ss
idivl
bound
xchg
mov
push
pop
xchg
mov
fmul
cmp
adc
adc
loopne
sbbb
int
push
mov
sahf
cltd
arpl
sub
or
dec
mov
mov
cmpsl
jge
sahf
lret
jno
leave
adcb
js
mov
repnz
mov
jne
insb
ret
push
jle
mov
insb
incb
shlb
dec
aad
xchg
xchg
and
outsl
cld
dec
sbb
out
mov
jmp
dec
mov
mov
test
jns
ja
scas
xchg
inc
enter
push
jnp
bound
pop
mov
jl
into
sub
jnp
arpl
les
repnz
sbb
or
dec
push
mov
leave
sti
hlt
jae
lret
jmp
out
pop
xor
in
and
movsb
insb
repz
call
js
sbb
mov
mov
stos
call
push
inc
outsb
sbb
mov
lahf
or
push
clc
mov
lods
cwtl
add
test
into
xor
push
jb
pusha
mov
std
inc
int
cld
sub
push
pop
mov
lods
mov
push
fistpll
scas
lods
mov
rol
nop
andb
xchg
imul
lods
stos
imul
popf
test
mov
pop
repz
fsubs
jecxz
cs
mov
xor
sbb
mov
sbb
add
lcall
ret
inc
pop
cmp
int
mov
fs
pop
cmpsb
and
jb
xchg
inc
push
loop
stos
sub
inc
dec
lahf
lahf
mov
pop
cld
loopne
jne
add
sbb
sahf
jmp
pop
mov
cmp
add
in
xchg
push
inc
mov
xor
mov
test
or
sbb
jnp
or
ficoml
jp
sbb
daa
in
push
shll
test
gs
stos
adc
add
shlb
xchg
leave
and
or
test
ss
pop
fwait
add
loope
mov
xor
and
adc
testl
xor
fadd
repnz
adc
jo
es
and
dec
pop
repz
xlat
xor
test
mov
fcomps
push
sub
mov
outsb
andl
cld
add
add
add
add
add
add
inc
xchg
cmpsb
pop
add
and
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
mov
mov
add
mov
