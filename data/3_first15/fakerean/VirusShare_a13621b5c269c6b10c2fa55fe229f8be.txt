add
xchg
jl
mov
add
test
xchg
addb
add
xchg
mov
add
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
jmp
xor
mov
mov
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
xor
ret
push
mov
push
mov
test
je
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
cmpl
ja
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
mov
call
andb
pop
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
cmp
je
mov
mov
test
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
xor
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
pop
adc
pop
inc
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
cmp
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
lea
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
mov
lea
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
fchs
fldl
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
call
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
call
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
call
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
mov
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
mov
test
je
push
lea
mov
call
lea
mov
call
mov
lea
push
mov
mov
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
lea
call
mov
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
mov
mov
lea
mov
movl
movl
movb
mov
push
push
mov
call
test
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
mov
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
jmp
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
pusha
push
call
mov
out
rcl
pop
add
mov
lock
enter
jb
outsl
add
add
clc
imul
add
add
add
sub
push
mov
add
push
push
push
push
push
call
add
add
push
loop
xlat
mov
add
add
idivb
lods
sti
add
scas
add
jl
lods
mov
addr16
in
rclb
cmc
add
add
add
cmpb
pushf
pop
lea
ja
arpl
lock
add
lret
lock
add
inc
in
push
push
push
push
push
push
push
call
stc
add
jbe
pop
rolb
pusha
lret
add
add
add
mov
leave
lret
add
add
repnz
icebp
sbb
mov
pop
scas
scas
pop
jle
xchg
imul
add
jne
cmpsl
out
mov
enter
test
jnp
add
add
mov
add
sub
pop
push
push
push
push
push
push
lea
push
call
scas
lret
out
out
jecxz
add
add
add
jns
add
mov
add
hlt
xlat
pusha
loopne
mov
out
divl
mov
push
mov
popl
in
xchg
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
iret
pop
lahf
add
add
add
sti
add
push
fucompp
mov
mov
pop
mov
lods
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
loop
testb
add
push
add
add
add
aad
add
mov
pusha
add
lret
loop
test
lcall
push
add
add
push
push
lea
push
push
push
lea
push
push
push
call
lods
add
push
add
add
add
xchg
jo
pop
testl
add
imul
mov
imul
addr16
outsl
sti
push
in
loopne
lcall
push
lea
push
push
push
push
lea
push
push
call
test
add
leave
lods
cltd
cld
add
clc
ficoms
ret
add
stos
mov
pop
fcomp
push
jmp
jb
add
enter
pop
add
add
xchg
stc
add
push
add
add
mov
mov
mov
lcall
add
mov
aam
xchg
sub
pop
jmp
push
push
lea
push
push
lea
push
call
mov
mov
mov
pop
add
out
add
pop
add
scas
add
pop
add
movsb
in
add
mov
nop
add
pop
add
stos
stc
stc
icebp
fldl
add
mov
jecxz
add
mov
mov
add
add
add
xchg
pop
push
add
add
sub
pop
ret
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
mov
pusha
add
add
aad
mov
jns
addb
pop
mov
gs
jge
incb
mov
rolb
add
cmpsl
pushf
pop
test
les
add
stos
add
mov
add
add
sub
pop
mov
push
push
push
push
push
call
pop
lret
rcr
add
add
pop
add
jl
in
add
add
lcall
fadds
push
xlat
popf
add
std
mov
add
add
cmc
add
stc
add
in
in
pop
add
push
push
call
add
push
je
add
xchg
mov
add
add
test
add
add
add
add
test
push
mov
jo
aad
out
aam
fidivrs
lock
jmp
lcall
ret
add
add
push
push
push
call
mov
add
popf
add
les
push
scas
push
add
push
into
imul
add
jno
imul
mov
jmp
jno
add
jnp
sub
add
ljmp
add
std
ljmp
xchg
ret
or
add
inc
fcoms
pop
jns
mov
fimuls
pushf
push
push
push
push
push
push
call
xchg
sar
repnz
mov
lock
add
cld
push
mov
pop
add
cltd
fcmovne
mov
add
addl
lcall
pop
add
repz
adc
ret
push
shr
sub
ror
push
and
add
ror
sub
sub
sub
ror
xor
pop
dec
shr
shl
pop
push
push
push
push
push
push
push
lea
push
push
push
call
imul
jno
add
add
add
loope
add
insb
out
mov
enter
pop
add
lods
lret
add
mov
imul
add
push
add
add
mov
push
ljmp
lcall
jne
push
lea
push
lea
push
call
add
aad
fldcw
add
jp
add
jae
mov
add
add
add
add
out
xchg
add
jecxz
int3
cltd
add
je
out
jns
in
hlt
pop
call
push
push
call
add
cwtl
add
popa
xor
je
push
fidivrl
bound
lcall
jne
add
data16
insb
add
scas
lock
mov
push
push
push
push
call
mov
mov
roll
add
mov
add
add
stos
add
push
add
lods
mov
outsl
add
mov
add
sub
pop
movl
push
push
push
push
push
push
call
jmp
xchg
scas
outsl
xchg
jecxz
int3
jp
in
addl
add
xchg
iret
add
add
add
add
add
cld
mov
jge
pushf
fimull
movb
call
xor
push
push
call
add
mov
fdiv
add
addr16
ljmp
clc
add
mov
outsl
add
mov
ljmp
mov
out
add
sub
pop
push
pushl
push
lea
push
push
push
lea
push
push
lea
push
call
lret
lahf
add
stos
add
add
mov
lcall
arpl
lds
mov
add
sub
pop
pushl
push
lea
push
push
push
push
push
call
push
filds
jl
push
insb
add
mov
cwtl
sahf
add
pop
add
ret
loope
ja
mov
hlt
rolb
mov
add
lds
jle
add
cwtl
jns
add
add
add
fwait
add
bound
add
cmpsb
popf
jl
roll
add
add
xchg
add
add
out
add
push
push
push
push
call
add
aad
add
mov
add
jnp
add
xchg
add
addb
mov
fldl
push
stos
rol
iret
add
add
add
in
add
xchg
add
ret
add
jno
jp
add
pop
jecxz
add
push
jecxz
pop
leave
jmp
in
lock
pushl
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
fdivrs
add
add
add
iret
push
add
fsubp
add
mov
ficoms
clc
rcrb
add
mov
popa
jge
in
fdivr
lcall
jne
push
push
push
push
push
push
lea
push
push
call
icebp
insb
add
sahf
add
xchg
lock
mov
aam
pop
loopne
push
add
lds
cmc
jne
cwtl
cwtl
lahf
add
add
lods
sbbl
add
lock
add
sub
pop
call
push
push
sub
push
or
not
add
sub
shr
sub
sub
not
sub
pop
shr
shr
ror
pop
push
push
push
push
push
push
push
lea
push
call
orl
popf
cmc
pushf
pop
imul
add
add
test
push
hlt
mov
mov
add
mov
out
add
rcrl
add
lods
add
ja
test
xchg
add
fadd
add
jne
call
push
push
call
shlb
loop
in
call
add
add
cmpsl
fsubrs
jns
int3
addl
mov
adcl
iret
lret
add
add
iret
add
push
mov
add
add
inc
push
push
ror
lea
dec
push
or
inc
add
sub
ror
sub
not
pop
rol
dec
sub
pop
push
push
lea
push
push
push
push
call
pushf
add
add
jmp
mov
imul
cmpsl
repnz
add
add
add
add
xlat
add
roll
add
jns
add
ja
add
mov
add
xchg
ja
add
sti
scas
lahf
cld
ljmp
mov
add
add
push
lea
push
push
push
push
call
add
add
add
jne
xlat
jge
add
in
lret
fildll
hlt
add
add
mov
jge
in
out
add
add
gs
int3
add
add
mov
mov
sub
pop
push
push
push
lea
push
push
push
push
push
push
call
mov
add
bound
add
add
mov
pop
xchg
add
add
add
pop
flds
mov
add
pop
test
add
pop
mov
mov
lret
add
out
add
add
add
in
loopne
call
push
push
push
lea
push
push
call
add
xchg
add
xlat
fxch
cld
add
add
clc
out
add
add
imul
cld
lods
add
add
mov
out
add
add
pop
lahf
add
enter
add
add
xchg
popa
pop
jge
in
in
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
jae
addr16
add
add
enter
sbb
cli
add
add
jl
add
mov
add
add
add
in
xlat
add
stc
add
mov
mov
add
add
add
push
push
push
call
add
bound
stos
add
add
test
add
add
push
add
js
jb
jns
pusha
mov
mov
cwtl
add
mov
add
add
mov
ret
call
clc
lcall
push
push
push
push
push
push
lea
push
push
push
push
call
jmp
xchg
add
or
jmp
add
jge
push
cmc
shrl
add
addl
add
add
mov
mov
nop
jb
bound
js
lahf
fwait
test
add
fs
clc
xlat
push
movsb
add
mov
mov
add
push
push
call
add
jno
fadd
arpl
add
add
shl
xchg
mov
push
add
add
add
mov
jmp
popa
add
add
fiaddl
sti
in
xchg
popf
add
push
data16
cmc
shl
add
in
clc
pop
add
push
push
call
xchg
add
sahf
ljmp
jecxz
jl
int
jge
into
cmpb
xchg
add
mov
xchg
mov
add
add
mov
add
add
add
int
add
arpl
cmc
add
xchg
scas
notb
mov
in
clc
pop
add
push
push
push
push
push
lea
push
push
push
call
add
add
in
jle
int
jp
xchg
stc
add
hlt
xlat
lock
add
push
out
add
icebp
loopne
cli
into
jl
js
jne
mov
add
mov
xor
push
push
push
push
push
push
push
push
push
push
call
add
in
push
push
jge
aam
testl
pop
add
add
out
xchg
mov
je
push
add
arpl
mov
sub
pop
add
push
push
push
push
push
push
push
call
add
in
lds
add
mov
mov
mov
cmpsb
pop
aam
add
ljmp
push
xchg
out
in
in
add
shrl
incb
scas
into
js
jmp
ror
sub
pop
mov
xor
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
add
mov
add
add
hlt
add
aad
add
fldcw
add
hlt
add
cli
mov
add
add
add
add
cltd
xchg
lds
out
mov
add
lock
jmp
lcall
lock
push
push
call
mov
add
andb
add
test
add
jle
add
add
add
add
add
add
movsb
mov
add
add
xchg
add
icebp
add
imul
lret
repnz
add
into
add
add
pushf
fiaddl
dec
add
icebp
xor
adc
push
out
xor
inc
imul
inc
rcl
xor
lea
push
call
cli
add
out
add
cwtl
add
mov
lods
popa
add
lods
enter
cmc
mov
add
xchg
gs
add
cld
jp
add
cmpsl
sub
pop
push
mov
xor
push
lea
push
push
push
push
push
push
call
fs
cwtl
add
mov
hlt
les
mov
add
add
add
mov
add
iret
hlt
cmpsb
add
add
iret
add
jle
add
out
jle
int3
add
loope
cwtd
rolb
add
in
lcall
enter
pop
sub
add
jae
push
push
push
push
call
out
pushf
add
add
ficoms
cmpsl
roll
add
add
kmovb
mov
add
fdivr
into
sahf
jecxz
roll
add
movsb
push
lea
push
push
call
flds
arpl
in
add
mov
mov
out
add
add
jo
add
add
push
push
add
cwtl
pop
lea
gs
pop
pushf
add
in
add
add
lea
loope
add
sub
pop
pop
mov
push
push
push
lea
push
push
push
push
push
call
add
je
mov
scas
jno
mov
add
add
test
test
add
iret
mov
scas
cmpsb
add
jns
jnp
add
mov
add
std
andb
add
mov
mov
in
loopne
lcall
pop
in
push
push
push
push
push
push
lea
push
call
xchg
add
add
nop
add
fiadds
xchg
add
js
lods
push
lods
mov
jl
add
mov
sub
pop
add
add
push
push
call
fwait
add
in
int
addb
fwait
mov
add
movsb
add
mov
cmpsl
xchg
add
mov
out
add
xchg
xchg
push
lcall
inc
and
jno
adc
push
push
lea
push
push
push
call
sti
add
sti
les
mov
cltd
xchg
add
popl
loopne
data16
rclb
shl
add
lret
pop
sub
pop
xor
push
push
push
push
lea
push
push
call
call
je
test
fwait
aad
ja
xchg
leave
add
add
cwtl
jmp
insb
scas
xchg
fiaddl
add
out
add
add
add
add
mov
jns
add
add
add
test
cwtl
add
mov
jle
jae
push
add
add
addl
add
add
push
push
push
push
call
mov
add
add
insb
test
add
out
push
add
add
les
add
add
into
test
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
push
cmpsb
add
add
push
pop
call
add
add
pop
hlt
pop
stc
je
mov
jmp
ret
pop
pop
add
add
imul
in
loopne
lcall
adc
push
push
push
push
call
add
add
pop
add
lods
mov
hlt
pop
add
add
fsubs
jb
imul
fildl
add
les
add
push
lea
push
call
fs
cld
hlt
jne
addr16
data16
add
add
mov
add
cli
add
std
jo
push
fiadds
data16
add
add
add
clc
out
mov
jo
add
mov
xor
push
lea
push
push
push
lea
push
call
xchg
outsl
not
add
push
xchg
mov
add
add
add
add
pop
add
push
add
jnp
add
add
add
mov
test
add
sti
inc
out
push
shl
je
int
hlt
sub
pop
add
add
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
add
add
ja
add
push
shlb
add
add
add
jne
lea
add
add
pop
xchg
jnp
jl
fcomps
push
rol
addl
mov
push
push
shl
shl
sub
push
and
add
shl
sub
sub
sub
pop
add
inc
pop
push
push
push
push
lea
push
push
call
mov
xchg
add
add
add
jmp
add
mov
add
add
add
mov
je
add
in
call
pushl
push
push
push
push
call
jl
add
mov
add
mov
xchg
add
jp
add
xchg
add
mov
cltd
push
add
add
scas
scas
pop
cmpsb
add
shrl
in
add
fsubp
add
pop
add
pop
call
push
lea
push
call
add
pushf
add
mov
icebp
sti
jbe
mov
sahf
jno
jle
leave
xchg
add
mov
pop
add
add
fs
add
fildl
pop
push
push
push
lea
push
or
not
add
rol
shr
shl
sub
add
shl
pop
sub
ror
lea
pop
push
push
push
call
jmp
int3
lea
jbe
mov
fnop
add
add
in
stc
add
xchg
pop
cmc
in
out
mov
cmc
into
pop
add
add
push
add
mov
add
push
pusha
add
push
push
call
add
add
add
cmpsb
pop
add
enter
scas
xor
add
loope
push
testl
jecxz
nop
add
mov
fwait
push
out
fcmovnu
add
add
add
add
add
les
in
clc
lcall
add
cld
lea
push
push
push
push
call
xchg
fwait
xchg
arpl
test
add
gs
add
pop
out
iret
addr16
filds
nop
add
fwait
add
sub
pop
call
push
push
push
lea
push
push
push
push
call
mov
add
add
add
xchg
xchg
in
add
icebp
add
push
add
add
aam
add
add
push
pop
fldl
add
cmpsl
bound
mov
add
add
add
lcall
clc
push
push
lea
push
push
push
lea
push
push
call
mov
cld
mov
mov
jbe
xchg
pop
xchg
cld
addl
mov
add
add
add
loope
jno
into
add
test
lret
add
jmp
add
push
jl
mov
mov
add
jns
add
lcall
push
lea
push
push
push
push
push
call
roll
popf
cltd
ret
fs
shl
add
add
jbe
pop
add
and
add
divl
in
shrb
pop
add
add
addl
lcall
roll
mov
push
add
xchg
add
imul
call
hlt
push
push
push
push
push
push
lea
push
push
push
call
push
testb
xchg
add
add
add
mov
rolb
testl
add
push
out
popf
add
fcmovnb
stos
sub
pop
add
push
not
pop
add
add
push
push
push
push
push
push
push
push
lea
push
push
call
arpl
add
add
sar
add
add
in
insb
add
mov
loope
add
push
subl
add
jge
add
fucomip
add
jecxz
mov
mov
add
jge
add
leave
shl
mov
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
push
call
push
scas
add
mov
xchg
add
mov
add
push
xchg
lahf
jo
fistpl
jae
lea
lock
loopne
cli
add
add
add
add
sub
pop
xor
push
push
call
add
add
sahf
pop
out
add
lock
mov
jge
add
sarb
mov
in
pushf
lahf
lods
add
cmc
xchg
cmpsl
push
cmpsl
fucomi
les
in
add
cmpsb
add
add
push
mov
add
add
add
lret
fwait
add
mov
xchg
push
lret
add
lcall
les
add
push
lea
push
push
lea
push
push
call
cmc
cltd
add
pushf
lds
add
add
add
in
les
sti
add
cmpsl
jge
int
mov
lods
lods
mov
hlt
fwait
pop
outsl
mov
sub
pop
add
push
not
rol
pop
push
mov
xor
push
shr
ror
add
pop
add
push
push
push
call
mov
mov
add
jne
lds
rolb
les
out
add
add
add
test
mov
jl
push
pop
test
add
add
pusha
fs
add
test
add
nop
add
add
roll
fs
incb
add
add
lcall
mov
push
push
lea
push
lea
push
push
push
call
add
mov
imulb
mov
les
loopne
add
add
ffreep
add
sti
add
add
flds
add
stos
into
mov
not
rcll
pop
sar
in
in
pop
xor
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
add
addb
add
loope
mov
pusha
andl
jle
add
mov
add
add
stos
add
mov
std
jbe
sub
pop
add
push
lea
shl
pop
rep
push
shl
sub
shl
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
call
add
jecxz
mov
add
addl
xchg
add
push
imul
lahf
add
push
pop
arpl
mov
cmpsl
mov
movsl
add
add
movsb
sahf
add
mov
add
add
or
push
push
push
push
push
push
lea
push
call
jno
hlt
mov
push
icebp
arpl
movsb
xchg
in
add
cli
add
jne
add
call
add
mov
scas
mov
add
movl
add
jb
add
add
cld
popa
add
lods
sti
mov
aam
rolb
add
add
push
sub
lea
pop
or
je
mov
xor
push
push
push
push
push
push
push
lea
push
push
call
add
add
push
mov
popf
add
xlat
add
add
add
insb
jl
add
add
add
imulb
mov
add
lcall
push
sbb
jno
adc
xlat
push
roll
stos
push
push
push
push
push
push
call
add
mov
add
pop
test
add
add
add
incb
fwait
mov
aad
add
add
leave
add
add
fdivr
lcall
adc
push
push
push
lea
push
push
push
push
call
add
aam
jae
add
mov
cld
mov
push
push
add
add
js
add
add
add
test
mov
add
in
mov
mov
add
jecxz
cmc
test
lret
jge
add
imul
add
add
inc
add
pop
add
push
push
lea
push
push
call
test
add
call
les
mov
add
xchg
imul
lock
add
ja
jl
add
fildl
lcall
jne
push
dec
add
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
addb
add
scas
push
hlt
add
add
add
jne
lea
out
pop
rolb
roll
add
push
jnp
fadds
xchg
sti
add
movb
out
fdivrl
js
push
lret
xchg
mov
incb
add
add
clc
xlat
rolb
inc
or
adc
cld
xchg
sub
push
lea
push
push
push
push
call
notb
jnp
ja
mov
jne
mov
mov
mov
add
fdivr
pop
loope
add
lahf
std
mov
add
add
add
push
scas
bound
sti
add
movsb
jecxz
test
xchg
add
add
push
ficompl
add
loopne
lcall
lock
push
push
push
push
push
push
push
push
push
call
add
nop
les
add
js
loopne
mov
xchg
add
add
nop
lret
popf
add
add
mov
pop
movb
sub
pop
rep
push
add
shl
shl
pop
mov
push
push
push
push
push
lea
push
push
push
call
mov
add
add
test
lret
arpl
mov
pop
mov
lcall
test
add
mov
int3
lret
iret
call
movsb
test
xchg
jnp
add
add
pushf
fildl
jmp
add
cmpsb
mov
lret
mov
sub
pop
xor
push
push
push
push
lea
push
call
add
sti
fildll
add
add
nop
jns
jae
aad
bound
clc
pop
mov
add
push
jl
jb
add
add
push
add
rolb
shrb
std
add
push
mov
aad
add
add
sarl
int3
pusha
popa
cld
loopne
add
add
in
add
les
lea
pop
or
je
push
xor
add
pop
mov
push
push
call
fs
push
add
add
add
scas
ret
mov
push
xlat
stc
mov
orl
sub
pop
add
add
push
push
push
call
add
jno
fiadds
std
insb
mov
pop
pop
mov
out
pop
sti
add
push
gs
clc
jae
add
out
push
movsb
add
pusha
xchg
movsl
cwtl
add
add
lods
mov
cmc
cli
add
rolb
testb
in
hlt
pop
rep
push
shl
inc
pop
pop
push
push
sub
push
xor
add
shr
sub
sub
xor
pop
not
pop
push
shl
shl
add
pop
pop
push
push
push
push
push
push
push
lea
push
call
loope
add
mov
flds
fwait
push
icebp
testb
push
add
jge
cltd
add
ja
int
add
in
mov
add
add
mov
mov
jnp
mov
out
add
add
xlat
add
mov
add
addl
add
pop
push
add
mov
addb
in
loopne
mov
push
lea
push
lea
push
call
stos
mov
enter
add
add
add
mov
push
add
pop
mov
push
shl
mov
notb
mov
pop
leave
cld
lods
push
add
out
roll
bound
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
add
popf
add
js
data16
pop
jbe
clc
lods
add
add
push
add
jae
push
add
cmc
fisubl
fcompl
add
xchg
add
arpl
loopne
lcall
inc
and
push
push
push
push
push
call
mov
add
loop
mov
add
add
add
mul
pop
aad
fiaddl
add
add
js
clc
iret
lcall
mov
add
add
lahf
add
outsl
jle
mov
sub
pop
jmp
push
lea
lea
rol
pop
push
mov
push
ror
pop
add
push
push
push
push
push
lea
push
push
push
push
call
cwtl
sti
pop
jl
pushf
int3
sti
cwtl
add
mov
add
mov
jb
testb
andl
in
add
int3
loop
add
mov
xchg
add
aam
fnsave
add
les
in
imul
add
add
loopne
stc
hlt
xchg
cld
add
sub
pop
push
push
add
lea
rol
dec
pop
push
push
sub
add
pop
push
push
rol
shr
pop
mov
push
push
push
push
call
add
test
add
clc
add
lret
xchg
push
push
xlat
mov
xchg
mov
stos
add
andl
push
push
push
push
lea
push
push
call
add
add
add
andl
flds
roll
add
add
add
fldt
add
push
push
lea
push
push
push
push
push
push
push
push
call
mov
add
cltd
add
pop
andl
jo
popf
mov
cli
mov
mov
add
test
stos
clc
vpcmpgtb
cli
xchg
fnsave
mov
jp
xlat
xchg
xchg
jo
add
gs
cld
out
stos
lahf
pop
sahf
xchg
lahf
ljmp
xchg
jmp
loope
add
push
not
lea
rol
pop
pop
leave
push
shr
not
pop
ret
push
lea
shr
dec
pop
push
push
lea
push
push
lea
push
call
push
add
mov
iret
imul
push
lret
in
mov
lret
int3
pop
push
pusha
scas
add
lret
add
add
mov
lret
add
stos
rolb
add
add
add
aam
add
pop
xchg
add
add
add
add
arpl
fsubr
add
add
adcl
sub
pop
mov
push
xor
inc
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
xchg
add
out
mov
push
add
add
add
add
xchg
add
mov
add
add
push
aad
lahf
lods
imul
lcall
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
add
shlb
jle
add
in
jne
cld
je
gs
int3
repnz
rolb
add
in
icebp
pushf
add
add
add
repnz
add
arpl
pop
icebp
ffreep
xchg
in
fcomps
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
cmc
add
pop
out
fsubr
les
mov
add
mov
pop
add
add
add
mov
mov
add
mov
mov
add
add
add
add
loopne
push
movl
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
movb
sbb
add
xchg
jle
in
push
add
fwait
xchg
xorl
add
fsubrl
jecxz
push
jb
xchg
movb
add
add
add
scas
scas
add
int
add
add
add
popf
add
loopne
add
sub
pop
addl
test
je
push
sub
pop
mov
pop
push
lea
xor
shr
pop
pop
push
lea
push
push
push
push
call
add
lods
add
lock
add
xchg
call
repnz
add
add
add
jne
hlt
fcoms
add
addr16
xchg
add
ljmp
lcall
push
shr
inc
pop
pop
push
shl
rol
pop
leave
push
rol
lea
dec
pop
ret
push
pop
push
push
dec
not
pop
mov
push
push
lea
push
push
push
call
add
push
popa
imul
ffree
add
vpaddq
add
mov
add
push
out
mov
pop
ret
clc
ja
add
scas
sahf
repnz
popl
push
jle
test
test
add
out
je
rolb
cli
outsl
add
ljmp
jae
push
mov
bound
cld
push
sub
pop
push
push
push
inc
pop
push
push
push
lea
push
push
push
lea
push
call
push
add
int
fildl
add
add
scas
jo
insb
bound
mov
jnp
flds
imul
popf
add
add
sti
add
xchg
movsb
addl
fwait
add
stos
jae
add
cmc
add
mov
cwtl
add
mov
jge
add
shlb
std
movsl
add
in
in
lcall
inc
cld
add
add
push
rol
pop
addl
push
add
pop
push
call
push
push
push
lea
push
push
push
lea
push
push
push
call
add
jnp
mov
add
xchg
cmpsl
add
mov
xchg
add
xlat
add
mov
add
cld
fwait
add
add
add
mov
add
sarl
imul
mov
cltd
call
addb
add
arpl
push
gs
jge
sub
pop
mov
push
dec
shl
rol
ror
pop
pushl
push
push
ror
ror
pop
push
call
push
sub
lea
sub
pop
cmpl
jne
push
pop
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
jl
add
add
xchg
add
xchg
filds
push
ljmp
pop
lret
add
lcall
aam
fstpl
add
add
push
ljmp
add
pop
stc
popa
cltd
hlt
mov
xchg
scas
add
add
add
movsb
add
add
add
add
add
sub
pop
pop
push
lea
push
push
push
push
call
shll
mov
arpl
rcll
add
add
lds
loopne
movsb
add
pop
add
idiv
sbb
popl
add
add
mov
add
out
addl
mov
add
fiadds
lcall
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
pop
enter
data16
add
fiadds
in
add
ret
add
rcl
add
add
mov
pop
popl
fwait
int
add
lcall
mov
add
sub
pop
leave
push
push
call
mov
add
jne
add
add
jb
vxorpd
add
add
add
in
add
add
out
xchg
xchg
push
jbe
mov
aam
add
add
mov
loopne
add
add
push
push
xor
add
pop
mov
push
push
push
call
in
mov
test
shll
add
add
stc
mov
push
add
insb
add
add
filds
add
pop
jbe
push
lods
sti
out
add
insb
xchg
add
lahf
pop
mov
add
sub
pop
add
push
push
rol
sub
pop
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
jle
jp
mov
mov
aam
xchg
icebp
add
xchg
mov
add
add
lcall
push
push
inc
add
pop
movl
push
push
push
push
call
xchg
add
pop
rorl
add
mov
mov
add
push
add
add
xchg
imul
mov
test
mov
mov
lock
push
call
push
push
lea
push
call
std
add
add
add
pop
add
outsl
fldl
je
lock
lahf
in
push
mov
add
jle
sub
pop
push
call
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
popa
add
add
nop
add
add
add
testl
add
cld
add
xlat
lret
add
add
mov
mov
add
test
pop
add
mov
les
push
lods
add
imul
add
lcall
insl
cld
add
xchg
push
lea
push
lea
push
push
push
call
add
push
jno
fnstenv
add
add
in
test
in
mov
ja
add
imul
je
iret
nop
mov
enter
pop
cmpl
jne
push
push
push
call
in
add
js
xchg
out
add
call
icebp
cmpsb
add
cli
pop
bound
test
imul
iret
push
negl
add
lea
add
add
add
add
add
stos
push
sub
pop
pop
push
add
pop
pop
push
push
push
push
call
add
popa
add
jne
add
cmpsl
imul
jl
push
add
mulb
jle
out
pop
shlb
jb
jo
in
lock
lcall
pop
push
lea
push
push
push
push
push
call
mov
cmpsb
lods
nop
vphaddubq
add
add
lds
add
add
add
add
add
lahf
add
add
hlt
movsl
fists
xchg
add
push
in
add
add
xorb
mov
ljmp
in
push
loopne
add
popf
push
add
add
sub
pop
leave
push
push
push
push
push
push
push
push
push
call
jbe
add
add
jne
cli
xorb
add
add
add
jl
mov
add
pop
mov
add
cld
enter
loopne
add
add
add
add
std
add
jl
add
sahf
outsl
int
lock
sub
pop
ret
push
add
add
ror
pop
push
push
sub
xor
lea
pop
mov
push
push
push
push
push
push
push
lea
push
call
pop
mov
mov
sti
xchg
mov
pusha
mov
addb
add
in
add
outsl
imul
add
add
ret
add
add
add
add
add
add
xchg
mov
add
add
add
scas
nop
mov
jnp
jecxz
sub
pop
add
push
rol
pop
push
push
push
lea
push
push
push
call
add
add
push
push
jle
icebp
add
cli
roll
add
mov
fs
int
fiaddl
add
push
imul
mov
add
mov
jle
xchg
pushf
xchg
pop
add
jo
add
iret
push
data16
add
lds
mov
in
lock
push
push
push
push
push
call
loopne
fidivrs
xchg
cmc
xchg
adc
in
pop
add
lret
add
add
jp
add
in
lock
push
mov
push
push
push
call
mov
imul
pop
fdivrp
flds
add
mov
add
jbe
jae
jmp
pushf
add
push
add
add
in
hlt
pop
lea
push
not
sub
pop
sub
mov
push
push
push
push
push
push
push
call
sar
xchg
out
loop
addb
add
push
add
not
fsubl
loop
add
add
add
add
movsb
add
mov
in
iret
pop
push
popf
fistl
pusha
add
lahf
mov
jge
pop
jne
add
clc
cld
sub
pop
shr
add
push
push
push
push
push
push
lea
push
call
loop
add
leave
fiadds
add
nop
add
add
add
mov
xchg
add
fiadds
add
add
sub
pop
mov
push
add
pop
mov
add
push
shr
pop
add
push
lea
push
lea
push
push
push
call
gs
xlat
add
in
add
pop
add
shll
mov
add
lods
imul
add
movsb
addb
hlt
add
flds
jnp
sub
pop
mov
push
rol
dec
shr
shr
pop
mov
push
push
push
push
push
push
lea
push
push
push
lea
push
call
pop
sahf
loope
imul
imul
add
add
aam
push
lods
add
mov
pusha
mov
add
mov
stos
or
mov
movb
add
add
add
mov
fwait
xchg
sub
pop
cmp
jne
push
rol
pop
cmp
jne
push
sub
pop
mov
movl
push
xor
not
pop
jmp
mov
push
pop
mov
sub
jne
push
rol
shr
pop
mov
movl
push
push
call
add
xchg
add
popa
add
cmpl
add
pop
jl
mov
test
add
add
les
push
add
add
add
add
mov
sub
pop
jmp
mov
push
push
call
movsb
stc
add
out
scas
fwait
enter
mov
pop
add
push
shr
push
jle
add
lods
add
add
idivb
lret
add
jns
mov
clc
pop
mov
push
push
push
push
push
push
lea
push
call
enter
std
xchg
mov
mov
adcl
add
pop
xchg
fists
jl
pop
add
add
ljmp
lcall
cli
add
test
add
push
push
lea
push
push
lea
push
lea
push
push
push
call
cmpsl
add
add
shll
fsubrl
add
xchg
add
popf
jbe
jno
add
idivl
jmp
out
add
notb
add
popf
add
pop
loopne
add
add
jle
add
stos
add
sub
pop
mov
movl
push
push
push
push
push
push
push
lea
push
push
call
jmp
add
add
push
lret
imul
fadds
ffree
cmc
pop
add
lock
mov
rcr
lcall
rcl
add
into
add
mov
add
mull
add
add
mov
mov
jl
subl
pusha
push
in
fdivr
lcall
ret
or
add
cmp
test
lea
push
push
push
push
push
call
out
mov
add
mov
popf
subb
add
lret
mov
mov
lock
pop
mov
xchg
frstor
jae
bound
xchg
test
pop
add
add
mov
icebp
data16
add
push
mov
pop
add
lea
cmpl
jne
mov
push
dec
rol
ror
pop
movl
jmp
push
rol
dec
pop
pushl
pop
push
add
pop
mov
push
push
call
cmpsl
fcoms
pop
jge
pop
add
add
xchg
pop
imul
mov
add
add
add
pop
loopne
add
mov
add
repnz
add
xchg
mov
rolb
mov
cwtl
mov
add
jo
add
add
add
lcall
inc
sbb
push
or
jb
inc
push
not
sub
push
sub
add
ror
xor
add
sub
add
add
xor
rol
pop
lea
rol
not
pop
push
sub
pop
push
call
push
push
push
push
lea
push
push
call
add
rcrl
pop
add
rcll
add
mov
mov
add
mov
test
jecxz
mov
xchg
push
imul
add
imul
pop
cmpl
je
push
push
lea
xor
push
push
pop
add
not
xor
sub
sub
inc
pop
pop
push
add
lea
xor
pop
push
call
push
not
add
dec
pop
cmpl
je
push
push
add
lea
inc
push
and
add
dec
sub
sub
lea
add
pop
inc
sub
dec
rol
pop
push
shl
not
rol
pop
push
call
push
sub
shr
pop
cmpl
je
push
push
sub
sub
not
push
or
not
add
shl
sub
lea
pop
shl
pop
push
shr
pop
push
push
add
not
inc
pop
call
push
push
push
push
push
push
lea
push
push
call
add
loope
add
in
repnz
push
ret
jl
mov
test
fadds
add
cltd
add
mov
mov
ficoml
mov
mov
pop
add
fisttpll
pushf
add
fldl
lahf
add
xchg
pop
mov
test
xchg
data16
lcall
loopne
lcall
cmp
rol
je
push
push
shr
push
sub
add
sub
sub
inc
lea
pop
pop
push
dec
pop
push
call
push
push
push
call
shrl
xchg
cmpsl
scas
xchg
mov
add
jp
pop
add
fldt
out
mov
lock
jmp
in
jmp
sar
rolb
mov
mov
stos
rolb
loope
add
lcall
jb
add
pop
mov
hlt
pop
cmpl
je
push
push
sub
dec
shr
push
or
inc
add
add
shr
shr
sub
sub
ror
pop
sub
pop
push
not
xor
shl
add
pop
push
call
push
lea
push
call
add
test
addb
fldt
jb
and
add
add
add
out
add
popa
clc
add
jno
add
in
clc
lcall
cmp
or
int3
je
push
push
sub
not
sub
push
push
pop
add
xor
dec
shr
sub
add
rol
pop
dec
pop
push
lea
push
push
lea
push
push
push
call
movsl
mov
add
rcll
std
mov
lret
add
shrb
mov
add
fucom
loop
add
add
jb
push
push
movsl
ljmp
hlt
push
add
lcall
add
call
push
push
shl
pop
call
cmpl
je
push
push
lea
inc
add
push
or
not
add
not
sub
add
pop
shr
pop
push
xor
rol
dec
rol
pop
push
call
push
dec
lea
add
ror
pop
cmpl
je
push
push
rol
dec
push
and
add
shl
lea
dec
sub
xor
ror
lea
pop
lea
rol
lea
pop
push
push
push
push
push
push
call
cwtl
mov
xchg
cld
int
lcall
add
add
pop
test
add
add
add
out
add
add
add
fs
add
add
pop
sbbl
lods
out
add
rolb
add
mov
add
scas
add
lock
mov
jb
in
call
push
push
push
push
push
push
call
imul
test
add
mov
add
movsl
cli
roll
lds
shr
imul
scas
add
push
mov
fwait
add
sub
pop
call
cmpl
je
push
push
shl
push
xor
add
sub
sub
sub
pop
rol
sub
pop
push
sub
pop
push
push
rol
inc
inc
pop
call
cmpl
je
push
push
rol
push
sub
add
add
sub
sub
pop
sub
sub
inc
pop
push
sub
pop
push
push
push
push
push
push
call
jge
mov
push
add
aad
int
lcall
sti
cli
add
cwtl
add
mov
add
add
xchg
out
add
add
addl
scas
movb
add
xchg
flds
sub
pop
call
push
add
lea
dec
pop
cmpl
je
push
push
push
sub
add
add
sub
ror
sub
inc
rol
pop
shr
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
jbe
add
jmp
out
add
add
add
add
mov
in
les
xchg
addb
add
add
icebp
cmpsb
stc
jns
test
stos
add
add
push
fidivrl
jle
add
mov
pop
add
mov
add
imul
addb
sub
pop
push
call
push
dec
rol
shl
sub
pop
cmpl
je
push
push
not
add
xor
push
xor
add
rol
shl
sub
rol
lea
pop
sub
pop
push
sub
add
pop
push
call
push
add
ror
sub
pop
cmpl
jne
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
mov
fiaddl
add
rolb
add
push
cli
cmpsb
popa
jbe
add
add
add
pop
add
fcompl
inc
adc
add
add
add
lea
push
push
lea
push
push
push
lea
push
push
push
call
pop
add
jnp
loope
cld
imul
add
scas
jmp
mov
movb
lret
add
stc
cmpsl
roll
add
test
mov
add
mov
jne
insb
add
bound
add
test
push
call
fisttps
xchg
add
mov
lahf
jl
sahf
push
jb
add
andl
add
in
mov
add
sub
pop
xor
push
lea
push
push
push
lea
push
push
call
arpl
lods
jle
stos
add
add
mov
xchg
rcrl
add
mov
add
add
add
hlt
add
add
iret
add
test
add
add
add
rolb
add
pop
pop
push
sub
sub
pop
pop
push
dec
pop
pop
leave
push
lea
push
push
push
call
add
cltd
add
add
std
lea
lods
sti
mov
xchg
add
ret
mov
std
outsl
jecxz
mov
cmc
jl
rclb
test
add
incb
add
lock
lcall
or
push
push
lea
push
push
push
push
push
call
into
ret
stos
add
stos
int3
add
add
out
add
add
add
add
mov
rolb
out
outsl
lods
fwait
add
fdivl
imul
aam
add
add
mov
out
push
gs
fprem
add
andl
stc
sub
pop
mov
add
push
add
shr
shl
pop
cmpl
jne
push
push
push
and
add
sub
sub
shr
lea
shl
shl
pop
add
lea
ror
pop
push
push
lea
push
push
push
push
push
push
push
call
out
ja
icebp
in
add
add
imul
mov
mov
lret
lret
add
pop
pushl
push
lea
pop
call
push
push
lea
push
lea
push
push
push
push
call
out
add
filds
add
mov
pop
add
add
add
lret
lods
add
add
add
nop
repnz
nop
jmp
add
add
add
add
xchg
add
add
subb
push
add
in
in
lcall
call
push
push
lea
push
push
call
pop
add
lds
add
jp
pop
add
mov
jmp
test
fisubrs
add
filds
mov
add
je
add
add
add
loope
lahf
int3
hlt
add
jle
in
lock
lcall
pusha
sbb
add
add
stos
push
push
lea
push
push
push
push
push
push
call
add
je
cld
movsb
lea
fadds
add
push
aam
pop
jge
pusha
add
add
mov
add
add
xchg
roll
push
xlat
sub
pop
cmpl
je
push
inc
pop
cmpl
jne
push
push
push
push
push
call
jae
xor
stos
lods
mov
add
in
call
mov
leave
popf
xchg
xchg
add
je
jbe
test
add
aad
out
repnz
lock
in
in
in
lcall
inc
or
ret
sub
pop
call
push
push
push
push
push
lea
push
call
addr16
ror
filds
add
call
add
mov
pop
add
add
add
scas
add
add
jp
mov
cltd
add
add
xchg
push
test
add
add
in
call
push
push
lea
push
push
call
ljmp
add
int
add
loopne
add
add
push
add
add
add
mov
add
mov
cli
lods
lods
cltd
pop
incb
jne
imul
fisubl
add
int3
sbb
add
leave
jne
pop
cmpl
jne
push
push
ror
add
sub
push
xor
add
shl
shr
lea
sub
pop
ror
inc
pop
push
lea
push
push
push
push
push
push
push
push
call
fiaddl
lcall
cld
add
rorb
add
add
clc
xchg
add
outsl
add
mov
mov
add
mov
jmp
jecxz
in
fildl
std
cld
mov
add
add
hlt
add
sub
pop
pushl
call
push
lea
push
lea
push
call
add
pop
add
xchg
add
push
test
popa
je
add
arpl
in
aam
add
add
bound
add
mov
mov
ret
hlt
pop
push
push
lea
push
push
push
push
push
push
push
push
call
jns
lret
pop
jbe
mov
add
add
add
mov
add
testl
add
add
xchg
rol
jle
add
jo
add
mov
mov
add
add
add
imulb
add
cltd
in
add
add
out
pop
sub
pop
call
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
scas
xchg
jnp
add
lock
nop
in
mov
add
add
lahf
add
push
out
add
mov
add
add
testb
rcll
fcomps
in
add
cmpl
jne
push
lea
push
lea
push
push
lea
push
call
mov
pushf
add
in
mov
add
sti
add
add
mov
pusha
mov
xacquire
movsb
cmc
jnp
xor
add
add
not
pusha
add
jp
movb
xor
add
add
add
add
add
ljmp
lcall
add
add
mov
push
push
call
in
add
aad
mov
lods
data16
loope
add
add
add
add
jo
add
mov
loopne
movsl
xchg
jl
rorl
popa
jmp
loop
push
lea
cltd
push
add
loope
mov
stos
jae
add
addl
add
jp
in
clc
lcall
push
push
lea
push
or
inc
add
lea
ror
sub
shl
shr
not
inc
pop
not
lea
pop
push
push
lea
push
push
push
push
push
push
call
xchg
enter
leave
push
aad
add
jp
add
mov
add
into
mov
pop
jns
lock
add
jbe
pushf
push
xchg
call
add
out
mov
addr16
aam
in
loopne
pushl
call
push
shl
sub
pop
call
push
push
sub
sub
push
or
not
add
shr
sub
rol
add
dec
pop
dec
rol
rol
inc
pop
push
push
lea
push
push
push
push
push
push
call
mov
leave
add
add
icebp
lret
add
lock
add
add
push
mov
mov
std
sti
fiadds
mov
add
andb
jecxz
add
sti
mov
sub
pop
pushl
push
inc
sub
inc
pop
call
push
push
push
push
push
push
push
push
push
push
call
leave
add
out
add
add
add
jecxz
shll
fsubrl
add
cmc
cwtl
add
push
add
in
clc
sub
pop
call
push
push
rol
shl
push
and
add
add
dec
sub
lea
pop
not
ror
pop
push
xor
shl
pop
pushl
push
xor
pop
call
push
shr
add
shr
pop
call
push
push
add
push
or
inc
add
xor
shr
inc
add
sub
add
pop
xor
pop
push
push
call
add
mov
rcl
in
mov
xchg
add
add
cmpsl
add
jbe
add
add
add
xchg
add
add
mov
cli
add
add
add
xchg
add
fneni(8087
pushf
movsb
push
fiadds
mov
add
xchg
ja
mov
add
jbe
imul
loopne
add
sub
pop
pushl
push
push
lea
push
push
push
push
push
call
add
add
push
add
sar
scas
testl
add
nop
add
gs
ljmp
push
add
add
mov
pop
mov
add
sub
pop
call
call
push
push
ror
sub
add
push
sub
add
inc
rol
sub
sub
pop
not
rol
not
pop
push
lea
push
call
add
add
add
flds
fs
push
push
loopne
stos
xchg
or
mov
mov
add
add
mov
mov
outsl
lods
mov
bound
add
aad
subb
add
enter
add
mov
in
clc
pop
pushl
call
push
push
push
call
out
mov
add
loope
add
add
add
add
fsubp
repnz
xchg
out
ret
xchg
roll
add
add
add
mov
mov
jge
add
rolb
add
jno
addb
mov
fiadds
add
add
test
test
push
loopne
shrl
sub
pop
call
push
push
shl
push
or
not
add
not
ror
rol
sub
shr
pop
add
add
add
pop
push
push
push
push
call
add
add
test
cmpl
movsl
fiaddl
popa
add
lea
int
flds
stos
movb
rcl
add
add
fs
xchg
mov
add
add
jne
push
add
pop
call
push
inc
shr
shr
pop
call
push
push
shl
add
sub
push
push
pop
add
shl
not
sub
add
dec
dec
pop
xor
pop
push
xor
shr
dec
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
call
add
jmp
add
add
push
add
mov
pop
push
mov
fistpll
add
fs
xchg
out
mov
xlat
xchg
add
mov
add
xor
add
sti
test
mov
sub
pop
call
call
push
push
inc
ror
push
and
add
inc
rol
sub
add
pop
shr
lea
pop
push
xor
not
pop
pushl
push
lea
push
lea
push
call
cld
lods
add
jno
add
fiaddl
mov
lods
xchg
stos
outsl
int
arpl
add
lea
in
add
mov
cmpsb
push
loopne
ja
in
add
jl
push
add
lahf
je
sahf
mov
add
in
jnp
add
out
xchg
pop
sub
pop
call
call
push
push
sub
push
and
add
not
sub
lea
pop
shr
pop
push
add
sub
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
call
xchg
mov
jmp
xlat
lds
cld
add
add
add
xlat
scas
xchg
mov
add
add
add
jmp
add
je
push
cmpsl
cwtl
add
add
add
test
xlat
pop
xchg
int
imul
add
sti
sbb
xor
pop
call
push
push
ror
sub
push
or
not
add
shl
sub
add
sub
xor
pop
pop
push
shr
sub
pop
pushl
push
lea
push
push
push
push
call
add
mov
iret
int3
xchg
lea
mov
roll
add
add
add
lods
add
add
loope
add
fs
add
mov
std
add
mov
add
add
xchg
jecxz
add
add
outsl
orb
scas
mov
lcall
inc
sbb
xlat
lea
pop
lea
push
push
push
push
lea
push
push
push
call
add
je
ljmp
add
shll
imul
jnp
add
mov
ljmp
fidivrs
add
add
add
lcall
mov
add
cld
add
clc
stos
jp
insb
pop
movl
in
push
call
push
push
shr
push
xor
add
shl
dec
sub
add
sub
ror
inc
pop
add
xor
sub
pop
push
push
push
lea
push
push
call
add
mov
cmpsb
add
out
movsl
outsl
jae
xchg
add
add
in
add
add
sahf
add
sub
in
in
pop
pushl
call
push
sub
pop
call
push
push
dec
sub
push
push
pop
add
not
sub
shr
sub
shl
add
xor
not
pop
sub
pop
push
add
xor
inc
pop
pushl
push
lea
push
push
push
push
push
call
jbe
in
add
pusha
add
add
rolb
push
call
xchg
pop
add
mov
add
out
add
fldl
jecxz
add
pusha
in
loopne
rcrl
add
add
in
call
add
push
shl
ror
pop
call
push
push
dec
add
push
or
inc
add
dec
not
not
sub
rol
shl
not
pop
sub
dec
pop
push
push
lea
push
push
lea
push
call
scas
movsb
jb
push
aad
mov
add
add
pop
movsb
lahf
mov
scas
lahf
in
push
mov
add
jge
pop
add
leave
mov
xorl
clc
fwait
mov
push
out
lret
add
jns
sti
pusha
add
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
call
std
push
lcall
add
xchg
add
add
out
add
pop
add
xchg
stos
xchg
aam
aam
sub
pop
call
push
rol
shl
shl
pop
call
push
push
sub
push
sub
add
inc
add
sub
shr
sub
pop
shl
add
ror
pop
push
lea
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
scas
add
arpl
add
aam
add
xchg
loopne
mov
stc
fistpl
scas
jnp
mov
add
popf
add
sub
pop
pushl
call
push
push
rol
push
push
pop
add
rol
not
sub
add
sub
rol
pop
add
ror
lea
pop
push
push
not
xor
push
and
add
shr
shr
sub
dec
not
pop
shr
pop
push
add
shl
sub
pop
call
push
push
lea
push
push
lea
push
push
push
lea
push
call
jb
add
add
and
add
arpl
outsl
add
add
xchg
jns
add
push
in
add
fildl
ret
add
add
jle
lret
xchg
add
loopne
lcall
dec
jne
push
push
push
lea
push
push
call
add
into
cld
pop
jns
xchg
fs
push
imul
xorb
shll
movb
loope
pusha
add
mov
movl
test
add
jmp
fsubrp
mov
add
mov
mov
in
in
lcall
mov
and
stc
push
push
pop
add
dec
sub
pop
dec
rol
pop
push
push
call
mov
lock
cltd
add
add
add
add
popa
pop
add
add
mov
add
add
cwtl
fcompl
add
enter
jbe
ja
add
loopne
not
add
sub
pop
pushl
push
shl
lea
pop
call
push
push
lea
push
push
push
push
push
call
add
enter
add
xchg
add
add
stos
add
out
mov
mov
add
add
jle
repnz
fadds
mov
movsl
std
mov
jne
stc
mov
add
scas
mov
sub
pop
call
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
jge
jecxz
fwait
mov
add
add
sbbl
mov
testl
push
into
aam
fldenv
addl
stos
sub
pop
mov
push
push
dec
lea
shl
push
and
add
ror
xor
sub
not
pop
shl
shr
pop
push
inc
shl
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
stc
loopne
add
cli
shll
mov
in
add
xchg
add
add
enter
add
test
push
add
vpunpcklbw
scas
add
add
add
adc
cltd
bound
add
add
fistpll
sub
pop
call
push
lea
push
push
push
call
or
pop
nop
add
pop
add
add
add
add
out
add
mov
pop
in
lahf
mov
addb
lods
mov
jge
mov
mov
lcall
add
push
push
lea
push
push
push
push
call
loopne
mov
add
add
insb
add
add
clc
jb
add
pop
add
push
jge
xchg
jmp
cld
cld
iret
out
fwait
cmc
fs
add
cld
rolb
fwait
movsl
sti
add
imul
add
add
popa
out
add
in
call
pop
push
push
call
mov
ljmp
cmpsb
lods
pop
imul
add
add
add
add
push
data16
lret
add
imul
add
lcall
add
inc
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
jge
lds
add
jecxz
add
add
push
add
pop
ljmp
pop
out
loopne
add
add
xchg
cmpsl
data16
add
add
in
fcomps
add
call
lea
push
push
add
inc
push
and
add
inc
rol
sub
sub
not
inc
pop
sub
pop
push
add
not
pop
pushl
call
push
shr
rol
ror
pop
push
push
lea
push
push
push
push
push
push
push
push
call
mov
lahf
lea
xlat
add
rolb
in
add
add
jb
sti
movsb
lods
mov
lock
add
mov
stos
sarl
lret
add
add
call
add
fisubrl
test
imul
add
add
sub
pop
call
push
push
sub
rol
push
xor
add
add
rol
shl
sub
sub
rol
shl
shr
not
pop
ror
xor
shl
pop
push
push
push
push
push
push
call
pop
add
flds
add
add
add
add
jns
jmp
lret
jl
aad
add
pop
addb
add
sub
pop
pushl
push
push
lea
push
push
push
call
imul
lret
add
add
jle
add
add
enter
stos
test
outsl
shr
xor
lret
add
jmp
iret
mov
add
jl
jno
add
mov
jne
fadds
push
popa
mov
add
aad
cld
xchg
push
add
clc
add
lcall
mov
add
push
sub
sub
add
pop
call
mov
push
ror
add
pop
lea
push
push
not
ror
push
xor
add
sub
sub
rol
pop
add
shr
add
pop
push
push
push
push
push
push
push
call
movsl
add
xchg
sahf
push
testl
xchg
add
push
js
mov
out
add
add
add
add
add
add
cwtl
add
enter
scas
push
push
pop
ret
mov
add
jmp
add
jne
push
inc
add
pop
call
lea
push
xor
pop
push
push
push
xor
pop
push
push
xor
pop
pushl
push
push
ror
lea
shr
lea
push
or
not
add
xor
sub
shr
shl
not
sub
pop
lea
pop
push
not
xor
pop
push
push
lea
not
pop
call
push
push
sub
add
shl
push
or
not
add
sub
sub
shl
ror
sub
rol
dec
pop
add
pop
push
push
push
push
lea
push
push
push
call
add
iret
lock
jle
add
add
lret
pop
lahf
add
iret
jmp
add
aad
add
add
out
push
add
into
in
lea
xchg
add
add
add
testb
add
jle
push
test
pushl
push
sub
sub
dec
sub
pop
call
push
inc
pop
push
call
push
push
add
push
sub
add
shl
rol
add
sub
not
inc
sub
pop
lea
pop
push
lea
push
push
call
add
mov
add
mov
jp
cli
nop
add
mov
addb
push
loopne
xchg
add
xchg
data16
pop
add
in
hlt
pop
pushl
push
add
rol
pop
call
call
push
rol
not
pop
jmp
pushl
push
sub
lea
not
not
pop
mov
push
sub
pop
jmp
push
push
shl
not
push
xor
add
add
sub
not
sub
not
add
pop
sub
shr
add
pop
push
pop
pushl
call
push
lea
lea
shl
pop
push
push
shr
sub
pop
call
push
push
sub
push
or
not
add
dec
shr
sub
inc
ror
sub
pop
rol
pop
push
push
push
push
push
push
push
push
call
add
add
in
add
pushf
mov
js
add
add
lock
mov
fiaddl
xchg
movb
popa
hlt
add
fwait
jo
jl
les
cli
test
pop
add
jae
in
add
add
pop
add
xchg
xchg
add
add
mov
in
loopne
pushl
push
lea
lea
rol
shr
pop
call
push
pop
push
call
push
push
lea
push
push
call
clc
and
mov
xchg
shlb
in
cmpsl
mov
mov
pop
pop
add
icebp
enter
cmc
mov
pusha
mov
sub
pop
leave
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
stos
add
add
repnz
arpl
add
loop
mov
popf
icebp
mov
add
fildl
jae
addb
add
add
add
add
imul
fdivr
lcall
push
inc
shr
rol
pop
pop
push
lea
sub
ror
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
in
cmpl
mov
add
les
sarb
add
add
test
push
mov
add
data16
add
fcmovnbe
rclb
in
fdivr
lcall
rolb
out
shl
add
inc
pop
ret
leave
push
push
push
push
push
lea
push
push
lea
push
push
call
cwtl
cli
lods
push
jecxz
xlat
data16
jp
loope
fdivs
cmpsl
mov
cld
push
stos
add
shll
aad
add
mov
fsubrl
sti
add
add
data16
jge
jge
test
sarb
cmpsb
add
add
add
add
in
fdivr
lcall
or
push
push
lea
push
push
push
lea
push
call
insb
stc
cwtl
mov
add
shlb
out
mov
cli
js
add
add
add
add
fsubrs
pop
not
xchg
add
pop
test
add
mov
out
test
in
lcall
add
mov
add
xchg
movsb
add
fsubr
add
pop
add
mov
push
sub
add
ror
pop
cmpl
jne
push
add
pop
mov
push
push
push
lea
push
call
add
in
add
cmpsl
ljmp
pop
push
mov
mov
add
push
add
add
popa
add
sahf
xchg
jo
add
fsubs
pop
add
sbb
add
push
add
rol
not
shl
pop
mov
push
sub
xor
pop
and
xor
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
addr16
add
add
int
leave
add
add
outsl
add
test
mov
andl
push
rolb
dec
call
jle
push
push
push
push
push
push
push
call
add
push
add
cltd
arpl
add
pusha
push
lcall
xchg
add
add
out
fcompl
add
add
js
testl
pop
add
fcomps
push
lea
push
call
add
add
add
fiadds
add
add
add
add
bound
add
filds
add
mov
mov
lcall
jmp
push
add
shl
pop
jmp
push
push
lea
push
lea
push
push
call
jnp
fidivs
pop
add
add
fs
arpl
sahf
std
loopne
push
shll
mov
in
in
pop
sub
pushl
push
push
push
lea
push
push
push
push
push
push
push
call
jb
pusha
add
push
push
push
add
add
add
add
movsb
mov
loop
add
mov
add
sub
pop
pop
push
lea
pop
sub
push
shr
pop
cmp
jne
mov
push
lea
push
push
push
push
push
push
push
call
mov
iret
rolb
add
add
jecxz
add
mov
add
fistpl
add
pop
add
add
pop
add
mov
add
xchg
mov
mov
mov
pop
lea
sub
push
sub
lea
dec
pop
mov
push
push
push
push
call
add
add
add
fadd
mov
gs
add
add
mov
xlat
aam
xchg
mov
mov
pop
add
add
shll
add
enter
lcall
jmp
lea
push
push
push
push
push
push
call
add
add
add
out
lcall
xchg
push
add
push
mov
jae
aam
add
add
add
add
pop
add
add
mov
add
jp
imul
enter
push
push
push
push
push
push
push
push
call
jbe
insb
add
add
add
mov
mov
add
add
add
add
jecxz
push
add
jmp
fwait
add
add
repnz
add
aad
add
cmpsb
rolb
xor
ja
repnz
lret
add
add
int3
xchg
enter
test
iret
add
add
push
xlat
in
add
add
flds
push
add
add
jmp
add
jbe
add
pop
sti
add
fimuls
add
insb
mov
add
mov
add
leave
jle
in
lock
pop
shr
push
inc
sub
add
pop
and
push
xor
pop
sub
push
dec
pop
cmp
jne
push
push
lea
push
push
call
fldl
mov
xchg
add
add
add
add
add
ret
push
add
mov
add
out
incb
cmpsb
add
mov
add
mov
sub
pop
leave
push
push
call
imul
push
cld
js
push
add
add
icebp
add
add
push
add
xchg
fmulp
xchg
out
add
faddl
decb
in
clc
lcall
add
push
ror
pop
push
push
lea
push
push
lea
push
push
push
call
jne
int3
rolb
mull
add
xchg
add
pusha
out
add
add
cmpsb
pop
jns
add
jno
clc
add
add
int
int
add
sub
pop
mov
push
dec
sub
pop
add
push
shr
add
pop
push
push
push
push
push
push
push
push
push
push
push
call
roll
jle
cld
lahf
aam
add
rorb
add
pop
mov
mov
add
add
add
mov
jecxz
add
add
jns
mov
add
mov
sti
out
icebp
fildl
mov
cltd
add
in
fcomps
push
push
lea
push
push
push
push
call
aad
fs
aam
clc
jbe
push
mov
lods
pusha
mov
add
test
mov
nop
add
call
cltd
add
add
addb
sahf
add
std
add
insb
lret
mov
mov
mov
add
push
lret
sub
pop
push
push
sub
shr
ror
pop
push
push
sub
pop
mov
lea
push
lea
push
push
call
stos
movb
jmp
jb
mov
cmc
orl
into
add
push
movsl
int
in
add
test
add
lods
add
rcl
ja
movsl
add
ljmp
xlat
ja
ja
add
add
divl
sub
pop
sub
push
push
push
push
push
push
lea
push
lea
push
call
add
flds
cwtl
scas
incb
bound
in
add
test
fnstsw
add
add
push
test
roll
enter
add
in
imul
lret
in
add
cmpsl
add
mov
push
push
add
lods
add
add
add
push
lods
add
xchg
enter
in
loopne
lcall
adc
push
call
xchg
add
stos
jae
mov
xchg
fidivs
add
add
out
xchg
lods
mov
cli
mov
jp
mov
add
jnp
add
int
add
out
add
lcall
jo
add
add
jbe
add
scas
pop
pusha
sub
pop
shr
add
push
dec
inc
pop
mov
add
push
push
push
lea
push
push
call
jb
pop
cmpsl
popa
add
mov
add
add
jge
sarl
add
cld
popa
add
pop
cld
add
popf
add
in
in
pop
mov
push
pop
add
xor
push
ror
sub
sub
ror
pop
mov
and
push
sub
pop
rol
push
push
push
lea
push
push
push
call
mov
xchg
lods
jge
add
add
pop
roll
mov
jno
add
add
jp
mov
sub
pop
rol
push
add
pop
xor
push
shl
not
xor
lea
pop
inc
push
push
lea
push
lea
push
lea
push
lea
push
call
ret
mov
lret
clc
pop
imul
popl
pop
add
out
mov
pop
loopne
test
shl
xchg
ja
xchg
lods
add
add
imul
mov
pop
cmpb
jne
add
push
lea
add
pop
cmp
je
push
inc
ror
lea
pop
add
push
ror
pop
cmpl
jne
push
dec
ror
pop
xor
pop
push
push
push
push
push
push
push
call
add
aad
add
add
add
loop
add
jnp
in
add
pop
lret
add
jp
jno
add
clc
pop
stc
add
sub
pop
pop
push
inc
sub
lea
pop
pop
pop
push
push
lea
push
push
lea
push
call
mov
leave
mov
add
add
add
mov
jl
testl
jmp
mov
add
subl
mov
add
popf
out
add
xchg
jno
loop
in
in
pop
pop
leave
push
push
call
scas
add
push
add
jmp
add
pop
sti
add
fwait
add
pop
add
add
add
clc
clc
add
add
add
add
aad
pop
add
jbe
add
mov
gs
fdivs
repnz
add
push
leave
mov
clc
pop
ret
push
lea
push
push
push
call
xchg
add
mov
add
mov
add
add
bnd
pushf
add
mov
add
aad
fcoms
add
add
add
test
add
add
add
xchg
mov
popf
mov
test
mov
add
mov
mov
add
sub
pop
mov
add
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
popa
add
flds
fstl
mov
mov
push
add
lcall
int
jns
jecxz
add
add
and
add
shl
xchg
rcrl
add
lds
ja
out
add
call
out
testl
add
add
add
cmpsl
movsb
cwtl
mov
lcall
push
push
push
push
call
jbe
xchg
je
add
outsl
add
gs
andb
fs
lods
cbtw
add
test
push
xchg
cltd
add
push
mov
add
cmpsl
filds
mov
lret
cwtl
out
in
add
add
insb
push
mov
add
pop
call
mov
data16
add
push
sti
lea
lock
lcall
mov
push
push
push
lea
push
push
call
mov
add
add
jb
loopne
add
js
lds
loopne
push
mov
imul
add
fs
movsl
add
mov
jb
fnsetpm(287
add
movsb
xchg
movb
jno
fwait
mov
xchg
push
ja
add
xchg
mov
add
out
movsl
sbb
sub
pop
pop
call
push
xor
pop
push
push
pop
call
push
shl
xor
pop
xor
push
xor
add
pop
pop
push
lea
push
push
push
push
push
push
lea
push
call
add
outsl
rorl
jb
scas
xchg
iret
cld
cmc
out
test
fld
arpl
add
xchg
add
add
add
add
push
push
push
push
push
push
call
xchg
test
add
add
ljmp
nop
add
scas
xchg
add
add
lods
add
mov
into
add
cltd
out
add
jle
call
out
cmpsb
fldl
mov
sub
pop
pop
push
shl
pop
pop
push
push
push
push
call
jne
lock
add
add
xchg
cmpb
pop
roll
jecxz
repnz
mov
imul
lock
pop
push
lea
push
push
call
loop
test
ja
add
add
push
mov
add
call
add
add
mov
add
pop
sahf
pop
add
add
jae
out
pop
movl
jge
add
fldl
mov
pop
mov
in
hlt
pop
leave
push
dec
pop
ret
push
add
not
pop
push
push
rol
sub
dec
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
xchg
add
mov
movsb
add
addl
out
nop
std
js
int
add
mov
outsl
pop
add
add
add
add
add
push
jae
mov
push
pushf
add
add
push
int3
loop
push
imul
outsl
cli
jmp
cwtl
add
add
sub
pop
add
push
inc
add
pop
push
push
lea
dec
pop
push
push
sub
rol
xor
pop
push
push
push
sub
inc
xor
rol
pop
mov
push
lea
push
push
push
lea
push
push
call
test
mov
add
xchg
pusha
subl
fadds
rcl
add
xchg
stos
rcl
mul
add
lock
add
clc
out
movb
mov
mov
aad
xchg
mov
push
fadds
add
jne
add
sub
pop
push
push
push
push
lea
push
push
call
out
add
pop
lret
popf
mov
icebp
mov
testl
pop
push
ljmp
mov
add
xchg
add
aam
fwait
std
jmp
mov
lret
add
add
add
in
insb
add
incb
add
arpl
js
loope
add
in
pop
pop
push
lea
push
push
push
lea
push
call
add
push
cmpsb
out
lret
add
xchg
add
cmc
add
scas
aad
add
add
clc
mov
lock
push
lea
mov
lcall
push
cmp
ljmp
adc
ljmp
jae
cmp
jp
push
push
call
stos
nop
xchg
add
mov
ljmp
add
cld
add
add
sti
jae
mov
add
add
add
popa
pop
add
jp
add
push
add
add
ret
in
call
add
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
incb
add
call
push
jbe
aad
add
test
movsb
lea
mov
add
pop
lock
mov
in
fcomps
pop
js
fsts
push
push
push
push
call
cwtl
mov
js
test
push
out
add
pop
into
cltd
add
pop
add
out
fidivrs
add
mov
add
in
add
lds
add
add
xchg
add
lcall
jae
popl
push
lea
push
push
lea
push
call
mov
xlat
add
lods
mov
sti
add
add
add
add
add
cwtl
add
add
js
rolb
xchg
pop
add
flds
push
pop
add
ret
mov
testl
std
add
add
adcl
mov
mov
in
lock
mov
add
push
push
push
lea
push
push
push
push
push
push
lea
push
call
pop
add
add
ret
mov
add
jne
add
xchg
add
cmpsb
add
lods
out
int3
add
add
out
ret
mov
cmc
fmuls
mov
add
int
mov
arpl
jp
out
add
add
notb
xchg
movsl
add
sub
pop
xor
push
ror
sub
add
pop
lea
mov
push
xor
sub
add
add
pop
add
push
push
push
call
popl
xchg
lahf
pop
add
add
jl
push
idivb
add
scas
mov
push
add
xchg
cmpsb
mov
stc
out
add
xchg
add
add
add
add
fwait
add
mov
lcall
rclb
sbb
push
push
push
call
add
call
pusha
ljmp
add
stc
iret
imul
add
add
add
xchg
mov
add
mov
mov
testl
pop
xchg
shl
mov
pusha
xlat
jle
add
pusha
popa
jb
in
fcompl
rolb
push
lea
push
lea
push
push
push
call
mov
push
jno
pop
pop
add
ja
lods
mov
pop
add
add
loop
push
add
mov
mov
add
mov
sub
pop
nop
push
add
rol
pop
nop
push
lea
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
test
arpl
sti
mov
add
add
rcr
subl
clc
xchg
popa
imul
roll
jnp
mov
mov
std
mov
lcall
add
aam
push
push
push
call
xchg
test
ret
jnp
scas
test
push
fs
imul
mov
je
scas
add
mov
in
mov
push
test
add
pop
ret
lods
in
loop
add
pop
rcl
sub
pop
nop
push
add
ror
sub
inc
pop
nop
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
add
shr
mov
add
movsl
add
ljmp
shr
clc
add
movsl
add
mov
mov
clc
add
test
inc
push
xor
pop
nop
nop
push
push
push
push
call
add
std
add
jae
test
jmp
add
push
push
push
add
jo
add
pusha
loopne
add
popa
fisubs
add
mov
add
add
rolb
pop
add
add
jbe
js
test
push
add
cmp
jne
push
dec
dec
pop
add
push
push
push
push
lea
push
push
lea
push
call
xlat
call
add
add
jecxz
roll
mov
add
ljmp
mov
add
iret
lods
add
in
idiv
add
add
push
out
add
add
fistpll
mov
mov
add
lock
add
sub
pop
nop
nop
push
add
xor
shl
pop
cmp
je
nop
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
xchg
mov
add
shrb
add
jle
lock
add
movsl
lea
add
push
add
add
mov
add
jo
add
add
hlt
pop
add
les
pop
jbe
sub
pop
nop
push
add
pop
inc
push
ror
not
not
not
pop
nop
nop
push
lea
push
push
push
call
jno
add
xchg
lcall
fildl
add
jno
add
mov
add
jno
ret
mov
add
jecxz
add
mov
add
jns
add
add
jp
sub
push
aam
jb
imul
pop
add
add
lock
lcall
jne
jb
xor
push
xor
pop
jmp
mov
push
not
sub
xor
pop
add
push
pop
movzwl
mov
push
push
push
call
mov
add
mov
mov
add
testl
add
mov
add
add
movl
add
add
negl
add
stos
lcall
jns
loopne
add
add
push
sub
pop
add
mov
push
ror
sub
pop
xor
push
lea
push
push
call
int3
add
add
add
data16
cmpsl
add
add
add
add
mov
jbe
push
mov
jp
std
add
mov
add
add
in
stc
les
pop
out
movsl
imul
leave
mov
sub
pop
xor
push
lea
push
push
call
xchg
add
add
add
add
jnp
add
mov
add
lret
int
add
ficoml
shl
shlb
mov
jo
mov
in
hlt
lcall
loope
push
lea
push
lea
push
call
aad
add
add
add
add
add
fadd
rorl
jmp
mov
add
add
rolb
in
hlt
pop
xor
push
push
push
lea
push
push
push
push
lea
push
call
pushf
roll
movsb
jge
add
out
add
add
movl
arpl
jae
sahf
push
clc
jecxz
js
out
je
add
in
lods
loop
cli
add
add
add
add
add
add
mov
add
add
add
fadds
add
add
lret
sub
pop
shl
xor
push
lea
pop
shl
push
ror
sub
pop
xor
push
not
pop
mov
push
not
pop
add
pop
push
ror
dec
pop
pop
pop
push
push
push
call
add
scas
add
mov
add
jb
fucom
add
pop
add
pop
js
loope
addr16
in
push
sbbl
push
add
add
jge
ja
mov
pusha
fxam
jb
add
sub
pop
pop
push
lea
add
shl
pop
leave
ret
push
sub
add
pop
push
push
lea
pop
mov
push
add
sub
inc
pop
push
push
push
push
lea
push
push
push
lea
push
call
pop
add
pop
int
out
fnstcw
fwait
add
lret
jmp
xchg
add
mov
stc
gs
add
add
add
sub
pop
push
push
xor
sub
lea
not
pop
push
push
ror
shr
dec
pop
mov
push
not
xor
xor
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
popf
add
out
icebp
clc
lahf
pop
add
fwait
xchg
clc
mov
jae
jo
lret
rolb
add
divb
mov
jecxz
in
fcomps
jge
push
rol
pop
test
je
mov
push
push
push
call
xlat
add
xchg
scas
mov
popa
mov
add
jnp
mov
add
out
push
jp
add
pop
add
xchg
ljmp
add
pop
sub
pop
test
je
push
push
lea
push
call
loope
jbe
add
mov
sahf
jno
add
shrl
clc
add
push
add
add
rcll
repnz
push
add
insb
xchg
add
enter
add
jo
sub
pop
mov
mov
push
push
push
push
push
push
push
push
push
call
sti
roll
ret
movsl
add
add
test
add
jno
add
add
pop
imul
scas
flds
cmc
xchg
lods
popf
add
add
jmp
testb
pop
xchg
xchg
popf
mov
lods
pop
xchg
shll
add
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
andb
cmc
aad
add
test
in
add
test
add
add
pop
push
push
xchg
add
in
fdivr
lcall
push
sub
rol
pop
cmp
je
push
ror
inc
sub
pop
test
je
push
xor
pop
mov
push
add
add
pop
inc
push
push
push
push
push
push
lea
push
push
push
push
call
popa
pop
je
add
push
fstpt
add
add
std
out
pushf
add
add
loopne
lock
call
add
lcall
add
mov
mov
mov
fcmovb
frstor
sub
pop
cmp
je
push
push
push
call
ljmp
add
lds
ret
jmp
add
add
jne
xchg
add
mov
jp
test
movsb
xchg
aad
popf
jle
pop
sahf
divw
mov
test
roll
jne
add
add
cmc
fdivl
ror
jno
push
xchg
ljmp
test
jne
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
jae
insb
add
mov
repnz
mov
fildll
popf
ficompl
add
rclb
ja
fiadds
test
add
lcall
iret
ja
imul
arpl
repnz
mov
push
sahf
int3
push
sub
pop
xor
push
sub
sub
pop
pop
push
shr
pop
pop
pop
push
push
call
add
cltd
add
add
add
jge
js
jno
pop
add
add
add
popa
add
in
clc
pop
pop
push
lea
push
call
add
stos
addl
add
pop
jmp
test
add
test
mov
add
add
mov
iret
mov
imul
scas
push
pushf
mov
add
add
add
mov
xchg
iret
xlat
jp
test
enter
add
add
add
nop
sub
pop
leave
push
push
lea
push
push
lea
push
lea
push
push
call
add
gs
add
add
movb
cmpsl
nop
add
xchg
add
add
iret
pushf
add
add
add
xchg
add
lock
add
xchg
mov
lcall
or
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
lcall
add
call
add
clc
jno
roll
push
jp
add
add
add
add
lret
lods
rolb
jmp
add
add
add
mov
add
addb
mov
add
lock
pop
sti
mov
in
loopne
lcall
push
push
push
push
push
push
push
call
in
add
add
mov
cmpsl
pusha
jecxz
add
fstpl
roll
out
in
add
push
clc
add
add
xchg
add
jge
add
mov
outsl
add
mov
jnp
aam
add
add
enter
lea
clc
mov
add
aam
out
xchg
rcl
in
sub
pop
inc
push
xor
sub
pop
cmp
jne
push
pop
lea
push
push
push
push
push
call
js
mov
add
imul
mov
add
add
test
mov
jbe
mov
pop
subb
mov
test
je
push
pop
mov
push
inc
pop
add
push
add
sub
pop
cmp
jne
push
add
pop
mov
test
je
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
cli
lods
lock
add
cmpl
mov
cmpsl
fsubrp
add
pop
pop
mov
add
cli
jo
insb
loopne
add
add
pop
int
movsb
mov
fcompl
callw
loop
add
pop
add
cmp
je
push
lea
push
push
call
add
add
add
nop
xchg
jne
xchg
sahf
jge
add
add
subb
aad
add
add
add
gs
lock
fiadds
add
mov
add
add
add
mov
add
add
add
cwtl
add
out
sub
pop
jmp
push
push
push
push
push
push
push
lea
push
push
call
add
mov
pusha
imul
add
lea
add
enter
add
push
loop
pop
add
rcrb
xchg
pop
test
lea
push
push
push
push
push
push
call
jmp
add
push
add
lods
cmc
in
mov
add
mov
add
mov
shl
add
shlb
add
add
jo
push
add
add
movsb
in
repnz
add
add
add
lcall
push
lea
push
push
push
push
push
call
gs
in
test
add
add
js
mov
scas
lods
mov
add
add
icebp
jbe
cmpsb
je
out
gs
add
loopne
shl
add
add
push
mov
add
xchg
mov
addl
add
add
incb
fdivs
fs
sub
pop
pop
push
push
push
push
push
push
push
push
call
add
mov
xchg
mov
jmp
fidivs
fldpi
add
add
add
cld
add
cmc
add
test
movsb
add
in
loopne
pop
push
add
sub
lea
pop
leave
ret
push
lea
dec
not
pop
lea
pop
push
push
call
test
outsl
push
add
adcb
gs
add
add
lcall
hlt
int
pop
hlt
add
add
mov
mov
imull
push
fsubs
out
push
add
push
sahf
scas
mov
mov
add
add
sub
pop
pop
push
inc
pop
pop
pop
push
push
push
push
call
mov
lods
add
mov
add
add
mov
add
mov
add
add
ret
lods
popf
arpl
xchg
mov
ja
add
add
mov
add
add
add
mov
stc
stc
add
out
add
push
xor
shl
inc
pop
ret
push
xor
add
add
pop
mov
push
ror
shl
rol
pop
pop
push
push
push
push
push
call
mov
add
add
add
out
jo
fadds
fisubrs
xchg
test
call
add
jp
test
mov
rcr
add
jecxz
call
jno
add
push
jns
push
int3
xchg
add
into
push
lock
imul
stos
addb
into
nop
push
push
cld
outsl
sub
pop
pop
pop
push
push
lea
push
call
int
movsb
nop
xchg
jecxz
outsl
gs
clc
icebp
xchg
push
rolb
add
sahf
stos
out
add
repnz
add
out
scas
add
insb
cmp
int3
fsubrl
cld
add
ljmp
shll
add
add
lock
add
sub
pop
pop
leave
push
sub
sub
pop
ret
xor
cmp
sub
adc
add
adc
and
adc
dec
cmp
mov
icebp
cmp
xor
adc
jb
adc
mov
add
adc
mov
repnz
or
dec
dec
jnp
adc
xchg
int3
cmp
xchg
stos
ret
stos
outsl
mov
adc
popa
adc
in
mov
lcall
mov
std
inc
dec
aas
sub
shlb
lods
mov
inc
mov
ret
fdivrl
dec
xor
js
repz
lahf
add
adc
inc
mov
pandn
lods
pop
into
lret
mov
stos
sub
in
push
pop
mov
in
push
mov
ljmp
mov
cmpsl
mull
orl
cmp
fsubs
push
fiadds
mov
fistps
popa
mov
sbb
sub
jae
and
repz
imul
xor
sub
outsb
std
popf
bound
push
insb
mov
test
adc
xor
mov
inc
pop
rcr
out
jno
clc
cs
idivl
adc
xlat
outsl
loopne
xlat
leave
cmp
and
aam
and
lock
inc
push
in
push
pop
in
push
and
jecxz
xchg
cmp
rcrb
sbb
push
popa
jo
dec
jb
sbb
pop
lret
lea
int
pop
test
out
loop
xlat
das
popf
xor
fwait
jo
xchg
jne
add
and
push
ret
push
sbb
testl
rcr
ss
ficomps
mov
push
rcrb
mov
pop
iretw
push
call
cmpsb
push
push
addr16
stos
add
imull
or
scas
push
shll
adc
cs
rolb
add
loopne
orl
inc
insb
push
jecxz
divps
cmp
inc
mov
cmp
repz
cmpsb
ljmp
in
lods
daa
int
mov
push
jnp
jno
out
clc
inc
inc
mov
cmp
push
mov
mov
mov
cmpsl
in
ss
or
xor
mov
loope
clc
test
stos
pop
je
cmp
ret
inc
mov
jno
icebp
mov
repnz
adc
bound
lret
adcl
cmp
int3
mov
xor
push
repnz
outsb
sbbb
loopne
repnz
pop
into
pop
inc
cmpsl
xor
cmp
jmp
mov
fidivl
jg
loop
or
mov
hlt
test
js
mov
cmp
sbb
std
add
pop
ja
testb
push
mov
xchg
icebp
or
jmp
mov
push
cmp
jo
push
adc
jg
clc
cmp
mov
rolb
xorl
lods
mov
out
dec
xor
lea
or
adc
adc
fwait
pop
pop
xchg
xor
fidivrl
or
stos
add
rorl
xor
sbb
dec
push
dec
ret
je
fcoml
dec
les
pop
cmc
es
dec
clc
lret
scas
push
jge
or
sbb
lcall
roll
fnsave
push
jmp
test
aad
mov
xchg
outsl
mov
jno
int3
pop
mov
cmc
jae
push
jns
leave
loope
sub
pop
or
xlat
inc
sub
dec
dec
sub
pusha
jmp
xchg
cli
pop
pop
add
push
mov
jle
aad
shrb
mov
mov
in
scas
loopne
mov
mov
pop
lods
cmp
jnp
add
pusha
ror
sahf
mov
std
fists
test
sbb
test
mov
mov
xchg
lds
hlt
jae
shl
and
leave
pop
push
ljmp
xchg
and
xchg
int
mov
mov
pop
movsl
ret
test
scas
dec
xor
sbb
mov
mov
ret
cmp
inc
andl
sub
push
outsl
test
mov
pop
jle
stc
out
nop
jg
xor
mov
loopne
adc
adc
pop
cmc
test
sub
icebp
std
inc
push
pop
push
pop
xor
jo
fnstcw
fsub
add
xchg
jp
xchg
ficoms
flds
jl
jmp
dec
movsl
divl
insb
inc
das
orl
out
dec
loop
clc
sub
loope
jge
aaa
dec
push
sbb
out
das
test
inc
lahf
fisubl
jge
fnsave
sub
loop
or
pop
in
dec
or
cmpsb
inc
pusha
pop
in
clc
sbbl
call
insl
dec
sub
cmp
test
or
jle
mov
fdivs
imull
movsl
cmpsl
mov
xor
jbe
or
adc
mov
add
push
sbb
pop
mov
mov
mov
push
stos
jne
jne
int
test
xor
ficoml
scas
mov
mov
andb
insl
outsb
ja
loope
jne
lea
dec
pop
lock
popa
dec
jns
mov
xchg
cmp
xchg
cltd
stc
xor
sub
cld
and
fistps
lahf
shll
push
fwait
mov
in
cli
sub
aaa
push
cmpsb
repz
insl
add
shll
ja
push
xor
mov
jbe
loopne
repnz
pop
pop
mov
orl
dec
pop
scas
push
inc
ljmp
sub
add
xchg
aaa
pop
mov
sub
imul
inc
in
lock
mov
push
iret
adc
lods
lods
insb
or
mov
leave
mov
dec
xlat
mov
xchg
sub
jb
push
idivb
xor
iret
scas
push
mov
xorl
cli
and
mov
jne
jnp
gs
push
int3
inc
add
push
sub
mov
jne
cmp
xchg
sti
push
lods
pop
cld
arpl
xchg
add
test
xchg
mov
mov
mov
fdivs
dec
mov
cmc
pusha
sbb
aas
push
sub
mov
mov
mov
sbb
and
mov
mov
scas
sbb
les
fcmovnbe
mov
push
xor
or
xor
cmp
lock
cmp
rcrb
cld
sub
mov
cmpsl
xor
or
lret
add
rclb
pop
mov
mov
xchg
mov
std
xlat
sub
test
dec
shll
lret
repz
fsubs
push
sub
insb
xchg
outsl
lahf
push
xchg
fiadds
fildl
es
inc
das
mov
idivl
add
mov
insl
mov
mov
pop
sbb
or
add
les
rcr
mov
jg
lods
stos
or
inc
sbb
jns
cs
jbe
pop
aaa
dec
jb
daa
xchg
ss
les
or
xchg
hlt
mov
mov
jl
gs
xchg
daa
and
pop
push
je
das
cwtl
pop
mov
sbb
cmp
stc
pop
mov
decb
push
mov
sbb
or
fsubrl
shrb
rcrl
adc
sbb
rorl
mov
add
divl
fldenv
mov
fimull
nop
mov
lods
mov
mov
jp
and
jecxz
sti
inc
enter
xor
ds
popa
sub
cmp
push
mov
mov
mov
pop
rorb
cmp
bsr
dec
jb
push
dec
addr16
mov
adc
sbb
fs
outsl
ja
negl
arpl
subl
jge
into
into
ljmp
mov
dec
pop
push
scas
inc
ret
dec
jae
fisubrl
sbb
les
adcl
adc
jns
xor
sbb
mov
xchg
push
imulb
sbb
gs
adc
pop
xor
xchg
lods
jl
aas
int
lods
sub
sbb
hlt
aaa
dec
inc
and
jno
and
out
jne
cmp
ds
cmp
add
adc
ret
inc
addr16
movsl
add
adc
adc
and
or
inc
hlt
hlt
jae
addr16
enter
mov
dec
sub
mov
mov
jns
jl
iret
out
mov
int
adc
jb
adc
inc
out
orl
jp
movsl
mov
mov
nop
stos
cs
cmp
push
adc
adc
out
inc
stos
push
pop
scas
pop
mov
rclb
push
jns
mov
ret
or
sbb
aaa
cld
inc
sbb
sbb
push
cmp
dec
sbb
insl
mov
mov
cmp
fdivrs
jge
outsb
add
out
mov
icebp
ljmp
int3
add
fsub
in
dec
sti
adc
jb
xor
repz
test
inc
sub
fs
mov
pop
or
push
stos
cli
shlb
jns
mov
popf
hlt
add
and
test
or
loope
jecxz
and
add
into
adc
mov
movsb
lahf
and
xorb
sti
imul
ficoml
out
fists
jae
imul
fsubrs
jb
jnp
mov
insl
jl
out
sub
xor
push
push
lock
inc
pop
popa
dec
and
fwait
lahf
xlat
test
cmp
stos
bound
movb
movsl
pop
mov
or
out
xchg
lea
lret
scas
and
sarb
mov
push
stos
jns
pop
dec
xchg
ds
idivb
inc
sub
pusha
in
stos
repnz
pop
inc
lcall
xchg
sub
mov
jge
lods
xchg
jge
je
in
pop
fmulp
cmp
mov
sahf
xchg
cmpsb
or
test
out
mov
pop
test
out
outsl
subb
jbe
fdivrp
mov
cld
add
pop
adc
xor
fisttpl
xor
or
mov
inc
fdivrp
mov
pop
loop
fisubl
aam
pop
dec
mov
pop
dec
cld
jo
ja
frstor
pop
in
mov
test
mov
shlb
or
out
jmp
xor
xor
pop
pop
jnp
inc
mov
roll
pop
push
decb
cld
out
cwtl
aaa
xor
movb
mov
mov
data16
dec
mov
mov
in
cli
push
fildll
fucomi
or
pusha
popa
dec
or
and
lret
test
jp
loop
aam
rorl
dec
stc
or
mov
test
daa
fs
mov
cmovae
data16
adc
out
dec
or
imul
das
lods
incb
sub
or
jg
adc
pop
lods
sarl
js
add
cld
fstpt
outsb
xchg
mov
jo
cwtl
or
repnz
cmp
or
mov
pop
adc
das
add
rcrl
or
ret
cmp
jl
mov
pop
flds
sub
pop
mov
inc
mov
fcompl
shlb
test
cmc
mov
movsl
iret
jmp
inc
xor
push
xchg
out
jns
pop
push
mov
push
es
lret
and
scas
mov
shrb
add
dec
or
into
jo
pop
dec
adc
fcomp
push
jle
lock
xlat
fwait
loopne
dec
push
inc
into
or
repz
testb
xlat
xlat
gs
pop
sbb
cli
pop
imul
cmc
adc
push
lea
adc
jge
sub
sarb
xchg
test
push
adc
ucomiss
adcb
sarl
daa
or
cmp
cmpsb
jle
popa
ret
pop
pop
pop
mov
mov
inc
xchg
int
xor
je
std
fimuls
je
mov
cmp
fistpl
dec
push
adc
jecxz
add
jne
adc
mov
jl
inc
lods
sub
bound
inc
bound
shrl
inc
in
inc
pusha
xlat
pusha
sbb
push
jmp
fidivrl
outsl
scas
adc
outsb
and
jmp
addr16
inc
enter
loopne
mov
aam
push
push
je
data16
xchg
jg
iret
add
cld
sbb
sarl
mov
enter
fcmovbe
pop
adc
shlb
mov
jbe
lds
leave
les
jno
pop
or
pop
lahf
mov
mov
mov
into
mov
dec
fadds
xchg
loop
int
and
xchg
mov
dec
rol
in
movsb
dec
adc
shll
push
leave
push
imul
sbb
cmc
lahf
xchg
xor
cld
xlat
loopne
stos
fdivr
out
dec
and
jae
ret
int3
push
inc
cmp
xchg
pop
dec
insb
add
mov
int3
shll
rolb
sbb
test
rclb
mov
xor
jnp
outsl
out
fwait
pop
stos
push
inc
addr16
pusha
out
ficoml
sahf
es
dec
mov
sub
arpl
leave
sbb
xchg
mov
ret
fdivrs
loopne
clc
mov
add
mov
cwtl
insb
pop
adc
jg
push
sub
and
lcallw
ret
pop
push
rcrl
shl
shrl
mov
mov
mov
icebp
adc
cltd
xorb
jmp
xor
adc
cmp
mov
fmuls
into
cmp
inc
inc
es
ffreep
add
or
xor
pop
es
imul
in
into
ljmp
int3
loopne
xchg
mov
mov
idivl
pop
mov
in
mov
orl
sub
fadd
xchg
pop
leave
lea
mov
out
call
add
mov
fs
cs
push
lods
cs
push
pop
lret
lahf
push
push
mov
push
adc
or
orl
pop
jle
mov
les
jb
rolb
mov
call
mov
sti
out
jecxz
mov
adc
fsubrl
add
cmp
faddl
push
dec
mov
fs
mov
inc
mov
call
inc
cmc
in
arpl
add
inc
jle
xchg
adc
pusha
pop
and
xor
mov
lret
mov
jecxz
mov
push
xor
scas
jne
dec
mov
les
mov
sbb
inc
sub
pop
adc
test
adc
js
rol
sub
test
and
fidivs
jmp
dec
mov
or
scas
inc
je
xor
and
sub
mov
sub
cmc
sub
dec
popa
out
pop
xor
lds
adc
cli
sbb
stos
lahf
ret
cmp
mov
jge
jle
inc
cmp
and
or
xchg
sbb
sbb
dec
cmpsl
jo
int
mov
or
sub
aaa
mov
shll
fiadds
dec
loop
or
cmpps
sub
out
aam
int
leave
std
iret
std
or
xor
adc
mov
ret
ds
sub
xor
xor
test
dec
cmp
ja
das
jnp
adc
scas
clc
es
inc
push
xor
jp
mov
leave
mov
pop
xchg
inc
mov
imulb
popf
mov
xchg
scas
dec
dec
repnz
lcall
cmpsl
cli
cmp
jecxz
push
pop
enter
cmpl
std
mov
pop
test
pop
pop
leave
aas
or
xor
jecxz
cmpsl
pop
sub
loopne
adc
or
rcrb
mov
loop
mov
pop
cmp
fdivrl
movsl
pop
inc
inc
lods
sbb
and
cmp
pop
cld
insl
hlt
dec
jl
jbe
mov
mov
mov
stc
out
test
adc
mov
sub
jns
dec
mov
sub
aam
cs
gs
cs
push
lahf
pop
ficoml
cli
in
pop
cld
loop
mov
sub
or
mov
sub
adc
lret
jmp
push
push
imul
adc
push
jge
shll
aaa
mov
push
or
sbb
sbb
mov
push
ja
addl
and
addr16
bound
lds
xchg
sbb
dec
test
push
lret
cmpl
sar
mov
hlt
sbb
mov
xlat
push
lds
outsl
xor
call
jecxz
stos
sbb
sbb
adc
fcmove
addb
shrb
jne
mov
cmpl
push
mov
cli
or
and
dec
sub
sub
nop
call
popf
adcb
cmp
sbb
pop
fdivp
sbb
loopne
gs
xor
dec
xlat
jo
jl
loop
subl
jle
lds
mov
inc
and
and
or
push
dec
int
int
movsb
inc
js
mov
leave
pop
jg
mov
outsb
inc
fidivrl
mov
pop
sub
mov
imulb
xchg
filds
dec
sbb
pusha
test
inc
xchg
icebp
hlt
jno
movsl
mov
sbb
xchg
mov
ja
sub
sbb
bound
dec
xchg
lods
jge
jne
or
ljmp
inc
stc
js
mov
xor
sub
out
adc
push
xorl
xorl
or
add
lret
lahf
and
mov
xor
testl
mov
dec
xchg
repz
and
les
or
fdivrl
mov
icebp
outsl
lods
mov
or
push
add
xchg
xchg
cmp
clc
or
rcrb
lods
push
and
pusha
popf
mov
sbb
cmp
and
int3
or
popf
jmp
mov
pop
test
fdivl
lcall
pop
cli
pop
ds
pop
je
sbb
push
jnp
add
loope
das
mov
inc
pop
pusha
xor
cmp
dec
cmpsb
or
lea
pop
in
leave
out
add
insl
out
call
movsl
mov
and
sub
sti
int3
movsb
mov
addr16
stos
cltd
xlat
pop
es
ss
mov
outsl
sti
sar
xor
sub
jecxz
mov
inc
xchg
mov
inc
enter
xor
shr
aad
cmp
inc
xor
xor
adc
pusha
xchg
sbb
mov
mov
adc
cmp
bound
les
pop
mov
shl
aam
stc
lods
adc
add
cmp
cmpl
cmp
in
adc
cvtdq2ps
cmpsb
repz
mov
arpl
xor
cmp
in
shl
xor
fs
imul
jae
jge
test
in
into
xchg
test
sbb
xor
notb
add
in
inc
in
mov
push
gs
push
xchg
jmp
cmp
xchg
jmp
cltd
les
dec
jmp
or
imul
xor
shll
hlt
in
sub
add
jecxz
imul
push
jb
add
loope
scas
jae
mov
add
or
in
push
cmp
cmpsl
aaa
push
or
mov
cmpsb
mov
jno
mov
loopne
push
push
sub
jle
mov
jo
and
add
lcall
cwtl
movsb
dec
repz
and
divb
xchg
cmp
dec
lahf
frstor
xchg
push
out
xchg
push
push
scas
push
jp
clc
sahf
sub
fadd
filds
loop
sub
out
dec
fidivs
fdivrl
sbb
mov
mov
jmp
pop
fs
out
jmp
mov
lret
shrl
xchg
mov
cmp
jno
fadd
or
add
adc
inc
iret
cli
mov
mov
loop
out
adc
insb
pop
icebp
into
and
push
or
push
jmp
sbb
xchg
inc
push
pushf
stos
rclb
sbb
inc
jno
mov
nop
mov
push
jnp
mov
mov
xchg
lods
popa
es
jmp
xchg
sbb
xor
and
rclb
mov
xchg
inc
xchg
mov
and
mov
jmp
xchg
dec
dec
loop
dec
and
push
sbb
mov
mov
or
stc
mov
push
sbb
lods
xor
push
popf
fmuls
pop
sub
cmpsl
shll
push
ds
push
add
pop
out
xor
sub
or
fisttps
lcall
mov
cli
lods
cmpsb
sbb
dec
cmp
cmpsb
in
xor
sahf
inc
jle
adc
ja
dec
jg
cltd
pop
adc
sub
std
jnp
add
add
loop
popa
sbb
xchg
das
and
clc
insb
add
dec
or
test
notl
push
aaa
stc
testl
das
sub
repnz
jo
fwait
xor
cmpsl
inc
xchg
and
jp
xchg
rcrl
pop
sahf
pop
inc
mov
out
ds
mov
fwait
leave
imulb
or
inc
out
call
xchg
fbstp
jne
and
inc
out
jp
adc
test
scas
cmp
pusha
lret
out
dec
sub
mov
push
mov
mov
inc
cmp
sub
dec
pusha
pop
mov
cmpsl
xchg
repnz
in
into
mov
fimull
pop
movsb
and
sub
dec
cmc
daa
es
xor
dec
mov
xor
xchg
and
dec
dec
mov
mov
icebp
cmp
or
pop
inc
pop
mov
or
cmp
add
fisubrs
dec
and
movsb
aad
mov
es
daa
mov
js
call
jp
inc
push
inc
jl
fs
out
xchg
rorb
push
adc
lea
dec
repz
inc
dec
in
inc
pop
xor
into
fs
out
in
adcb
mov
fdivrs
lds
and
sbb
jnp
dec
jecxz
push
jmp
popa
movsb
xchg
jns
in
fmuls
test
lods
lcall
jmp
push
dec
dec
fnstenv
sub
les
dec
mov
add
imulb
imul
pop
ret
xor
cmp
int3
es
outsl
jg
bswap
testl
mov
and
mov
mov
or
dec
test
mov
test
xchg
jle
hlt
or
xor
mov
jne
cmp
stos
sbb
push
and
mov
aam
cmp
lds
and
push
insl
pop
or
lcall
ret
pusha
rcl
jge
dec
sub
fs
pop
xor
out
inc
add
mov
adc
pop
loopne
int3
cmpsl
les
ljmp
xchg
sbb
fldt
and
mov
push
pop
les
das
jbe
js
cmp
mov
pushf
sub
ficoms
and
ds
ljmp
mov
inc
mov
addr16
dec
push
inc
push
or
inc
xchg
mov
push
mov
jecxz
imul
fadds
jnp
mov
lds
or
pop
pushf
inc
mov
test
add
orl
jnp
push
pop
aam
and
adc
pushf
sub
xchg
xor
and
incb
dec
add
push
and
push
xor
jl
and
jle
xor
aad
adc
xlat
xor
inc
pop
out
outsb
push
add
and
dec
ret
sbb
xchg
rolb
mov
sahf
fsubl
xchg
fcomps
ror
negb
popf
clc
popa
pop
or
mov
mov
cmp
imul
insl
testl
inc
cmp
pop
dec
call
shlb
push
xor
mov
mov
and
stos
sub
aaa
adc
push
cmp
loop
stc
pop
loop
adc
jle
jl
cmpsb
fmuls
cmpsb
scas
and
aaa
gs
andl
add
push
mov
fwait
cmp
pop
sub
stc
repnz
pop
xchg
xchg
cmp
in
mov
js
mov
or
in
or
xor
lea
adc
jb
xchg
xchg
test
aad
and
fsubl
jns
jge
mov
add
inc
or
mov
fadds
loope
push
dec
push
test
sbb
and
inc
fcom
subl
test
xchg
sbb
loope
dec
xor
sub
inc
ret
adc
jg
cmp
jp
rorb
dec
jbe
test
xlat
pop
icebp
jb
cwtl
mov
sbb
out
sbbb
test
add
xor
out
lea
daa
jno
xchg
test
sub
lea
loope
jnp
inc
dec
cmp
push
sahf
lcall
inc
xchg
aad
or
adc
dec
lods
xlat
jmp
xchg
xchg
int3
repnz
push
push
cmpsl
mov
rorl
lods
inc
ret
pop
fmuls
insl
xchg
jbe
je
inc
cs
or
rcrl
or
inc
in
sbb
out
dec
and
scas
test
sbb
lea
dec
hlt
mov
jmp
shlb
cmp
add
mov
lcall
mov
shr
in
icebp
xchg
sub
scas
dec
jae
lods
rcrb
inc
or
sbb
data16
out
push
jns
nop
lds
bts
cmp
aaa
mov
cmp
stc
mov
jbe
sarl
cs
mov
push
jmp
mov
pushf
into
jns
mov
inc
loopne
leave
inc
ret
and
jecxz
rolb
jbe
add
hlt
fistpll
ror
sahf
sbb
lods
xor
les
mov
pusha
adc
jle
push
mov
pop
icebp
inc
jo
cmp
xchg
test
push
cmpsb
and
cld
mov
xor
scas
jl
fld
cmpsl
test
sbb
dec
mov
mov
negl
jg
out
inc
sti
xlat
push
cmp
pop
sbb
stos
adc
out
inc
iret
or
mov
fiadds
lret
pop
cmp
test
inc
mov
cmp
xor
push
dec
lahf
jmp
scas
sahf
es
jnp
subl
xorb
aad
inc
xor
mov
cmc
test
xchg
incb
pop
pop
jmp
adc
push
xor
add
pop
es
in
or
cltd
sbb
out
cs
je
push
pop
insl
push
and
out
push
adc
push
adc
imul
std
stos
fimuls
lret
push
xchg
cs
sbb
test
mov
dec
ret
mov
jno
adc
ljmp
cwtl
dec
aas
enter
mov
popa
push
dec
adc
test
jne
dec
lds
int
pop
loopne
add
add
in
cmc
xchg
xor
xchg
sub
pop
hlt
outsl
xchg
pop
jno
enter
sbb
negl
in
mov
daa
ret
xchg
sub
fisttps
das
push
or
das
xor
outsb
xchg
fwait
and
mov
cmpsl
push
scas
repz
dec
cmp
in
mov
xchg
in
sbb
add
in
lcall
cmpsb
mov
dec
mov
xchg
fadds
popf
mov
das
sahf
repz
mov
sub
sub
dec
pop
mov
push
notl
cmp
mov
dec
jb
fcompl
mov
sti
in
jno
jecxz
xchg
and
cmp
jne
icebp
sbb
xchg
mov
pop
fwait
sbb
mov
sbb
sti
ja
mov
jmp
lcall
cmp
into
xchg
add
sub
sub
and
scas
mov
stos
aaa
outsb
fidivs
das
push
xchg
lahf
repz
dec
dec
push
ret
aaa
jb
cltd
scas
add
aas
ljmp
mov
fcomps
adc
loope
xchg
cmp
xchg
popf
jns
jns
cltd
dec
jno
add
movsb
xor
insb
jp
mov
lods
out
mov
jb
test
cmp
cmp
cmp
mov
dec
sbb
sbb
sbb
imul
mov
stos
mov
and
mov
pusha
add
jp
jl
pause
mov
dec
js
out
fsts
mov
imul
test
test
daa
and
xchg
lret
cmpsl
push
push
ja
lea
cmc
repz
outsb
sub
jmp
out
outsl
pusha
lea
jb
or
ss
inc
sbb
stos
xchg
lahf
mov
cmp
pop
dec
push
push
je
mov
and
movsb
xor
shll
cmp
sbb
lret
aad
adc
fmul
aam
mov
insl
sti
mov
mov
pusha
pop
push
sbb
pop
dec
enter
add
push
lahf
dec
sbb
dec
xor
gs
orb
jg
add
pop
cmc
fidivrs
push
jecxz
add
scas
ss
bound
sbb
cmp
mov
jecxz
les
iret
sub
int3
pop
repnz
dec
pop
inc
push
adc
mov
mov
lea
test
leave
mov
add
dec
cmc
mov
les
je
mov
mov
sbb
ja
out
fdivrs
imul
adc
popf
sbb
repz
mov
sbb
xchg
mov
jecxz
xchg
add
loopne
and
scas
cmc
int
lds
nop
hlt
xchg
stc
xchg
mov
call
lock
daa
insb
and
sbb
daa
xor
ds
into
xor
lods
xor
xor
sbb
pushf
pop
jo
dec
or
push
pop
jl
inc
int3
cmpsl
pop
add
or
cmp
xchg
xlat
out
leave
push
and
and
xor
ret
add
xchg
add
dec
mov
xchg
inc
push
inc
dec
mov
jmp
aas
jo
add
ficoms
lods
ja
inc
mov
adc
dec
xchg
mov
push
add
xlat
pop
les
dec
cwtl
xchg
push
sub
cmp
push
pushf
push
jle
cmpb
add
ja
scas
push
data16
loop
scas
sub
data16
out
stos
mov
mov
loop
mov
sbb
add
sub
jle
jns
push
fidivrs
out
jns
loope
mov
adc
subb
lcall
and
mov
loop
mov
ja
stc
ds
mov
fisttps
data16
data16
push
jns
shlb
sahf
pushf
mov
scas
sub
xor
push
imul
leave
lea
inc
xlat
xchg
sub
mov
mov
sbb
pusha
cmp
and
push
int
ss
idivl
incb
mov
or
movsl
pop
jns
sarl
pop
stos
lret
insl
xchg
int3
xchg
mov
test
rcrl
mov
add
das
dec
nop
mov
xchg
in
movsl
insl
mov
iret
popaw
out
fstl
inc
shl
js
roll
sub
movsl
out
aam
dec
inc
stos
pop
and
push
lret
out
pushw
fimuls
jne
insl
popa
xor
imul
insl
mov
mov
popa
jne
mov
mov
gs
push
push
cmc
pop
loop
stos
and
fcmovb
cltd
int
cwtl
jae
bswap
push
mov
push
sbb
mov
roll
cltd
into
xchg
loopne
sub
pusha
dec
xchg
outsb
pop
arpl
cmp
pop
sbb
mov
aas
aad
jne
xlat
or
push
insb
popw
or
subb
in
adc
push
push
daa
dec
decl
mov
in
xor
data16
jns
jns
jecxz
pop
mov
adcl
jl
pop
repnz
loope
cmpsl
mov
mov
push
xor
rcll
mov
inc
add
mov
pop
cmp
movsl
xor
popa
xchg
sub
mov
fcmove
insl
or
inc
test
mov
je
add
int
mov
ja
lcall
lcall
cld
cmpsl
aaa
mov
jnp
sub
mov
pop
gs
jnp
jp
fbld
inc
mov
and
mov
mov
pop
hlt
popf
out
or
xor
pop
shrb
bound
jecxz
pop
sbb
sub
and
jp
and
cmpsl
out
adc
xorl
add
jb
cmp
pop
ror
das
mov
xchg
xor
jns
cld
loopne
xchg
pop
sbb
fcmovbe
ret
bound
test
js
jnp
fildl
xor
adc
icebp
lcall
and
dec
pop
jg
push
pop
jno
adc
cmpsl
push
push
arpl
push
jbe
ror
mov
sti
dec
lods
subl
cmp
popf
sub
dec
xchg
aam
cmpsb
in
std
lods
mov
loop
adc
add
mov
call
aaa
mov
insl
ret
pop
cmp
jl
mov
push
mov
popf
aaa
imul
inc
daa
ret
jmp
cld
and
adc
data16
jae
jge
cli
mov
mov
xor
repz
arpl
dec
mov
loope
stos
sbb
push
xchg
subl
mov
fstp
out
pop
add
mov
scas
xor
cltd
jno
andb
jmp
jnp
xchg
pop
xor
nop
ss
cmc
arpl
xchg
sub
in
lret
xchg
jecxz
xor
cmpl
push
jmp
mov
loop
xor
jmp
popf
xlat
in
ret
je
jle
nop
dec
test
mov
mov
or
stc
dec
sbb
push
mov
push
cmp
pop
popa
push
movsb
cmpsl
pop
sub
nop
rol
adc
scas
sub
xchg
xchg
push
fldenv
xor
push
clc
push
ja
xlat
mov
dec
rcll
mov
rol
jp
cmpl
fdivrl
int
or
pop
lcall
jb
leave
jns
dec
mov
dec
scas
push
lcall
xrelease
lods
xor
out
rcrl
mov
xchg
xor
jno
pop
mov
imul
sub
sub
int3
inc
jns
xor
mov
push
lea
xor
insl
fdivl
sbb
mov
rcll
mov
mov
inc
sbb
test
mov
andb
hlt
dec
inc
nop
fstps
jp
and
fstl
adc
out
pop
ja
sub
cmc
xor
es
jbe
mov
lea
adc
into
clc
les
iret
jb
stc
in
add
xchg
xchg
push
add
push
mov
or
jns
lret
jp
mov
popa
xor
add
or
cmp
jno
dec
xchg
or
mov
sbb
pop
cmp
and
pop
ljmp
add
dec
and
cmp
lret
sbb
popf
inc
and
loopne
inc
inc
add
and
pop
xchg
push
aas
popa
sbb
cmp
cwtl
push
dec
xchg
add
inc
pop
push
push
dec
mov
std
inc
jp
addr16
mov
cli
rcrl
mov
inc
sbb
lret
jg
aad
xor
mov
es
rcll
not
adc
mov
in
dec
test
imul
sub
mov
xlat
push
push
iret
push
les
insl
dec
push
loop
push
dec
rolb
test
fimull
xchg
out
mov
pop
and
insl
xchg
sarb
arpl
ret
xor
ss
into
push
xor
xchg
dec
push
lods
cmp
add
subl
out
pop
pop
pop
fwait
mov
xor
mov
testl
xlat
enter
and
jae
js
adcb
jns
into
xor
out
stos
sbb
sub
loop
out
add
or
mov
mov
xchg
cmp
movsb
daa
jecxz
cwtl
test
dec
and
ss
or
jge
cmc
inc
test
orl
or
shlb
adc
insl
mov
jmp
shlb
jbe
jb
andl
inc
push
test
test
out
jg
or
cmp
inc
fiaddl
shrb
stc
ret
xchg
ljmp
ds
loop
out
sub
nop
inc
xchg
test
outsl
cld
dec
fists
ljmp
rorb
mov
or
fdivs
mov
shll
addb
xor
sarb
fists
mov
push
les
aaa
dec
mov
adc
mov
mov
loope
pushf
stc
ss
dec
jecxz
mov
or
fcmovnb
sub
les
pop
jge
popa
mov
icebp
mov
aas
insb
mov
cmp
test
bound
pop
pop
mov
dec
lods
mov
test
pop
cmpsb
adc
out
cmp
scas
adc
stc
gs
hlt
cmp
jnp
stos
adc
std
outsb
mov
pop
and
aas
jae
xlat
cs
cs
cmovle
out
pop
xchg
jnp
push
add
pop
test
movsbl
ds
mov
push
mov
or
int
xlat
lret
out
loope
and
cmp
pop
and
test
sub
test
push
ja
push
adc
xchg
jne
and
loopne
mov
add
loopne
cmpsl
mov
loopne
lret
inc
ret
sbb
sbb
adc
lock
movsb
sbb
cmp
adc
inc
inc
xor
mov
idivl
imul
xor
ljmp
rclb
mov
push
add
mov
xor
push
cmp
prefetcht1
push
sbb
lret
inc
xchg
xor
jmp
ret
inc
xchg
ret
ljmp
scas
loope
inc
cwtl
clc
sub
sbb
fcmovne
mov
out
pop
in
mov
pop
push
das
pop
jp
call
mov
aas
fdivr
mov
xor
add
loopne
sub
sbb
push
shll
pop
jns
insb
jg
mov
repnz
not
rol
mov
add
inc
aam
cmp
jo
mov
out
xlat
or
dec
outsb
call
add
inc
lods
pop
mov
sub
jns
fistps
xor
lret
jae
push
loop
jno
in
test
inc
mov
xchg
push
xchg
xor
xchg
mov
andb
and
sbb
pop
sbb
das
lret
push
pushf
push
mov
or
lcall
mov
das
and
cmp
in
or
xchg
fs
adc
jmp
sbb
cmp
lahf
or
rclb
mov
sbb
lods
and
in
lcall
dec
xor
arpl
stos
cmp
addr16
sbb
mov
sbb
inc
dec
add
outsl
or
xchg
mov
push
mov
cmp
cld
es
lock
push
and
mov
call
pop
sbb
jne
and
or
out
xchg
jge
in
lcall
mov
adc
test
sbb
cmpsl
lret
or
dec
mov
or
call
pop
shl
sahf
lock
pop
cli
push
ja
scas
pop
jmp
mov
cmp
cmp
clc
ds
and
pop
out
cs
pop
arpl
push
push
sbb
jecxz
rcrl
cld
int
jns
xorb
pop
xor
fcmovnbe
loopne
cmpsl
or
fisttps
xor
aam
sub
xchg
xchg
add
shll
and
xchg
clc
pop
mov
mov
jbe
cmp
loope
outsl
call
nop
hlt
mov
mov
sbb
movsl
das
aaa
mov
test
push
nop
clc
lock
xchg
or
push
stos
into
dec
stos
sub
fwait
cmp
dec
hlt
data16
pop
push
out
sbb
enter
add
test
cmp
repz
aaa
push
test
leave
cmp
arpl
mov
vpcmpeqb
sub
mov
outsl
dec
imul
aad
sahf
sub
shlb
sbb
testl
bound
cmpsl
xor
enter
fs
into
cmpsl
push
cmp
cli
in
bound
mov
mov
pop
add
xchg
mov
jno
adcl
xor
jl
add
lret
fldl
xor
cmp
repz
xchg
imul
mov
mov
mov
inc
pop
stos
mov
xor
popf
jp
cmp
or
push
movsb
rcrl
xor
jbe
mov
cmpsb
push
jp
mov
stos
jnp
mov
sub
in
scas
xchg
cmpsl
repnz
int3
ficompl
jno
daa
leave
aam
fldcw
mov
ljmp
add
popf
mov
fnstenv
jno
aas
popa
push
es
jecxz
pop
and
leave
js
fwait
and
into
ficoms
xlat
sbb
call
aas
xchg
jo
push
mov
imul
dec
shl
and
lahf
push
sub
ja
outsl
mov
add
jnp
popl
in
std
cmp
test
jb
fwait
cmp
mov
fstps
cmp
add
dec
imul
or
cmp
mov
or
loope
popf
hlt
mov
cli
negl
in
lock
sub
mov
cmpsl
and
fistl
imul
fdivp
inc
outsb
lea
push
pop
daa
mov
push
cmpsl
lcall
lahf
cltd
std
int
jmp
sub
xlat
jb
pop
gs
mov
mov
fdivrl
movsl
pop
push
jg
xchg
adc
arpl
cmp
jecxz
xchg
bound
lock
les
fimull
inc
leave
lock
jno
pop
shr
fadds
pop
insb
jl
mov
fisubrl
movsl
sbbb
aam
jg
js
sti
and
leave
jecxz
xchg
mov
push
ds
sbb
pop
sub
cs
and
jmp
jb,pt
dec
cs
leave
addl
lods
nop
test
pop
dec
aad
push
lock
push
xor
push
es
adc
int3
push
xor
in
outsb
pushf
test
push
gs
jne
or
sub
xchg
cmp
cmp
mov
pushf
rolb
dec
push
jb
jmp
add
xor
or
jecxz
or
add
push
pop
jmp
clc
int3
cltd
jnp
xor
fildll
sub
dec
jmp
push
mov
je
jmp
jb
jmp
data16
lcall
cld
inc
into
ret
sub
lds
push
push
arpl
lock
mov
xchg
sub
out
push
rcll
stos
or
mov
in
and
cmpsl
outsb
cmpsb
xchg
mov
repnz
gs
stos
iret
sub
nop
jmp
dec
dec
mov
addr16
inc
or
call
shr
mov
lea
mov
mov
mov
inc
mov
xchg
mov
das
add
cmp
arpl
xor
xor
in
jge
stos
dec
pop
xchg
xchg
icebp
je
outsb
dec
in
add
mov
gs
ja
arpl
or
outsb
cmp
mov
fstpl
arpl
fidivrl
aaa
sub
adc
fbld
fdivr
inc
lea
or
xchg
sub
cmc
jne
pop
ret
mov
sbb
or
fcos
insl
mov
jmp
add
aas
fneni(8087
cli
cmc
mov
lock
xchg
idivb
nop
jle
lcall
cmpsl
and
mov
addr16
dec
mov
out
xor
jge
fstps
fisubl
sub
loopne
inc
imul
mov
jae
cmpsl
mov
dec
fimull
movsb
hlt
inc
outsb
or
jl
cmc
and
and
or
ret
insl
in
cltd
popl
out
nop
or
xor
xchg
in
jg
int3
or
mov
mov
stc
and
mul
pusha
adc
jp
lods
out
out
push
stc
lods
es
test
adc
push
mov
lea
xor
nop
inc
add
xchg
imul
out
jge
pop
gs
cld
mov
mov
js
jne
out
into
imul
lea
sbbb
xchg
movsl
mov
jmp
mov
addb
js
lret
inc
into
mov
xorb
out
sub
or
insl
pop
iret
scas
lea
aaa
clc
and
jo
fidivl
insb
imul
pushf
push
xor
shl
inc
cmp
mov
xchg
or
add
aam
sub
sbb
inc
movsl
mov
inc
in
pop
ja
fimull
bswap
xchg
scas
sahf
adc
stc
pushl
pop
pop
push
daa
push
sub
pop
shlb
lods
jmp
fidivrl
mov
cmpsl
jmp
adc
rorl
xchg
push
and
sbb
lahf
cli
xor
adc
andb
cmp
lea
sbb
jns
repnz
xchg
xchg
out
push
or
sub
cmpsl
fisubl
and
negl
cmp
scas
orl
aas
dec
out
lods
hlt
cld
call
push
sbb
xchg
jb
sub
inc
push
fsubl
std
inc
ss
int3
sub
push
xchg
adc
cmp
xlat
test
xor
fcoml
push
test
pop
mov
cmp
ret
dec
loopne
rcr
jp
adc
mov
jno
cld
out
pop
xchg
xchg
dec
jg
adc
bound
sbb
fists
xchg
decl
push
sub
fsub
ret
xorb
sbb
pop
add
ret
jae
jnp
into
test
out
jnp
push
sbb
rol
push
test
mov
insb
mov
in
jmp
jge
mov
push
lcall
pop
mov
sbb
mov
pop
and
mov
push
mov
aad
dec
sbb
pop
aam
inc
shrl
mov
pop
xchg
repz
push
fld
fistps
test
sbb
sbb
sbb
in
dec
nop
fsts
xchg
adc
and
test
dec
arpl
jp
push
xor
out
out
mov
mov
xchg
mov
in
dec
jb
les
cld
dec
shll
inc
push
stos
std
xor
sbbl
jae
add
add
mov
jo
out
ret
popf
lock
add
xchg
xchg
sbb
lret
add
ljmp
mov
xchg
mov
call
cld
mov
add
push
testl
popf
push
in
ficomps
in
adc
pop
mov
jne
loopne
fldln2
xor
inc
push
or
inc
call
stc
pop
pop
push
dec
adc
int3
xchg
push
cs
repz
cmp
inc
enter
pushf
je
orb
dec
fcompp
dec
and
cmpsl
clc
call
rolb
adc
mov
fwait
lcall
test
pop
cld
dec
roll
pop
std
das
mov
cwtl
fisubrl
test
int3
mov
adc
jb
mov
scas
cmp
test
or
lahf
mov
decb
xchg
ss
mov
insb
mov
test
or
outsl
pop
pop
xchg
or
mov
jl
mov
sbb
ss
jge
in
ret
add
pop
aam
lds
ret
cmp
adc
add
add
cmp
pop
mov
sbb
cltd
out
fadds
es
into
and
stos
cmpsl
mov
pop
xlat
ja
sbb
stc
pop
hlt
adc
mov
add
and
jl
test
or
loopne
xor
xchg
adc
nop
jo
mov
and
pop
std
pop
add
push
pop
fistps
and
add
push
push
es
add
sub
out
ffreep
std
mov
sti
rorb
jno
jle
stos
daa
push
jl
sbb
stc
ret
fidivl
loope
insb
jnp
sti
aam
fidivl
push
nop
dec
out
test
add
lcall
adc
push
sub
mov
fwait
mov
in
faddl
add
xchg
inc
mov
inc
jl
xchg
sbb
mov
test
jnp
mov
xchg
mov
sti
rolb
inc
and
and
inc
xor
pop
adc
je
inc
popa
ljmp
jns
push
shll
fimuls
iret
jp
pop
pop
or
fisttps
mov
push
ror
pop
xchg
jno
sub
dec
inc
je
push
mov
pop
test
fbstp
xchg
xor
out
mov
in
add
jg
mov
sub
jp
xor
sub
inc
jge
cmp
sbb
shlb
addl
dec
insl
xor
stc
cmp
test
out
iret
jmp
inc
pushf
dec
mov
aad
add
push
bound
sub
repnz
cmp
test
mov
mov
push
push
cmp
add
mov
xchg
mov
ret
and
pop
xchg
cmp
es
xor
adc
aas
ficoms
pop
fstpt
and
pushf
mov
cmpsl
addr16
clc
ds
push
iret
inc
or
lods
loop
pop
imul
rep
cmp
adc
mov
mov
mov
dec
aaa
ror
insl
imul
adc
sbb
xchg
aad
les
adc
rcrb
xor
hlt
fwait
add
cmp
data16
mov
jle
loope
roll
imul
push
jns
lcall
dec
push
daa
icebp
and
cmp
pop
sti
out
dec
pop
mov
mov
arpl
dec
insl
cmc
sbb
lcall
insl
mov
inc
mov
in
outsb
imul
fisubs
mov
pop
jecxz
pop
fnstenv
add
add
adc
jns
lea
mov
mov
jo
xor
mov
or
mov
xor
mov
mov
lds
repnz
fsts
and
je
fistps
test
mov
pop
in
pop
dec
loop
push
push
pop
and
dec
arpl
test
popl
je
js
imul
stc
cmp
xorb
mov
lds
out
push
stos
sarl
loop
sub
insb
outsl
xchg
int3
inc
outsl
lea
int3
pop
mov
vpmullw
addr16
out
pop
hlt
or
and
jge
out
rorl
test
es
sub
xchg
sub
imul
and
adcl
xchg
enter
gs
mov
das
dec
mov
lods
add
push
mov
mov
jge
std
pop
in
mov
add
add
jno
test
ret
ja
mov
push
cmp
mov
jmp
xchg
sub
jl
xor
or
sbb
fdiv
cmp
cmpsb
in
pop
add
cmc
push
das
test
or
and
xchg
leave
stc
or
adc
pop
push
cmp
das
aad
inc
add
lods
ljmp
mov
push
imul
ret
das
jns
ds
jge
mov
pushf
push
mov
and
xchg
rclb
push
mov
data16
jg
adc
mov
lea
movsl
or
je
lods
cltd
push
mov
clc
adc
xor
dec
int
pop
movsl
sti
or
jecxz
out
mov
push
jl
loopne
pop
mov
outsl
lret
lds
ror
jnp
xchg
inc
adc
pop
lahf
xor
addr16
aam
push
mov
jns
gs
fnstenv
mov
inc
lods
xchg
push
and
test
icebp
or
shrd
mov
xlat
call
mov
inc
lods
push
add
scas
jg
xorb
es
inc
xchg
aas
jnp
pushf
fwait
arpl
jecxz
xchg
clc
movsb
mov
test
movsl
fs
push
addr16
ds
add
push
lret
rorb
ficompl
jne
push
adc
mov
add
push
fmul
fwait
cltd
dec
or
mov
or
daa
inc
mov
arpl
sbb
fcmovb
addb
pusha
pushf
mov
adc
push
in
sbb
xor
xchg
mov
into
xchg
push
scas
add
and
insb
das
iret
rolb
out
mov
pop
repz
cmp
dec
fistps
or
pop
sti
jo
add
loop
push
shrb
int
dec
insb
movsb
enter
imul
push
push
into
lock
cwtl
lahf
jle
or
xchg
add
sub
mov
push
xor
adc
into
cmp
push
aaa
lds
loop
test
clc
dec
pop
lock
mov
xchg
push
inc
arpl
mov
pop
ljmp
popf
cmp
adc
insl
and
leave
lds
add
pop
and
push
fs
ficomps
and
mov
hlt
cld
nop
insl
xlat
jl
jbe
push
out
xor
pusha
bound
and
sub
xchg
adc
roll
xlat
lods
stos
es
push
push
inc
sub
push
aam
dec
cmp
pop
ja
pushl
aad
jle
testl
add
aas
cmp
test
addr16
clc
movsl
jmp
aad
into
lds
lods
cmp
or
jp
in
outsl
dec
add
inc
dec
dec
ret
cmc
das
mov
loope
mov
mov
sbb
repnz
arpl
ljmp
lods
in
js
imul
or
rolb
adcb
jo
int3
sub
hlt
aad
mov
fadds
aaa
jns
jle
jnp
cmp
scas
fisubl
test
sbb
icebp
jbe
mov
xchg
or
imul
xor
xor
mov
and
int
xchg
push
mov
inc
cmp
jp
dec
cli
fistpl
scas
icebp
sarb
mov
std
mov
out
push
jae
mov
movsb
jecxz
imul
dec
mov
sahf
scas
aas
test
xor
fsubrs
movsl
scas
and
mov
cwtl
xlat
imul
scas
adc
and
or
fcoml
adc
out
push
mov
addb
push
cmp
add
cld
orb
jmp
ja
push
call
outsl
add
daa
cmp
cmp
mov
jmp
daa
movsb
les
mov
xorb
imul
push
xchg
popa
imul
or
and
lret
cmc
cli
aam
xchg
or
cmp
in
pop
mov
push
shrl
xchg
jne
pop
cmpsl
cmc
mov
loop
mov
pusha
call
lret
out
mov
mov
adc
add
dec
cmp
add
test
je
testb
mov
div
jle
frstor
or
icebp
std
push
into
jmp
lods
push
popf
mov
and
incl
in
xor
adc
out
mov
add
in
inc
mov
flds
push
add
adc
add
push
mov
enter
mov
cmp
add
lahf
inc
sub
pushf
cli
aam
mov
pusha
and
mov
and
gs
adc
ljmp
addr16
pushf
cltd
int3
stc
orb
fcmovb
add
mov
mov
mov
adc
push
xchg
call
jle
lods
xchg
adc
fidivl
push
jl
sbbb
pop
movsb
int
sti
cltd
xor
cmc
cltd
out
and
or
cmpsl
mov
nop
push
pop
movsl
cmp
dec
ror
or
cmc
fisubs
pop
inc
les
push
in
hlt
ret
repz
mov
cli
jmp
xor
jno
xchg
dec
lret
inc
jge
add
out
loope
in
mov
aaa
sbb
int3
mov
stos
pushf
out
mov
mov
add
adc
cli
cld
xchg
inc
gs
jle
sbb
mov
das
inc
sahf
mov
jo
adc
dec
pushf
pop
fwait
sarb
movsl
mulb
pop
jle
pop
adc
dec
pop
bound
daa
es
jle
popf
jo
sbb
sarb
adc
mov
shr
lea
clc
sbb
push
hlt
lods
fcoms
xchg
adc
mov
push
xlat
inc
loopne
ss
push
jecxz
in
hlt
loop
adc
mov
mov
mov
pop
fiadds
sub
lock
jo
pop
pop
jae
xlat
or
fidivrs
cmpb
pop
jp
push
inc
cli
test
lcall
lods
or
and
push
es
in
mov
lcall
and
scas
pop
movsl
stc
cmpb
ja
push
cmc
jo
ds
mov
data16
jno
add
ds
pop
or
dec
ljmp
test
fsub
xchg
cli
dec
out
arpl
push
dec
mov
mov
adc
inc
fiadds
mov
into
ljmp
jno
or
cld
push
in
jge
in
call
inc
pusha
bnd
cltd
mov
push
insb
inc
adc
lods
mov
xchg
xor
sub
daa
fadds
jne
dec
pop
rorb
enter
scas
sahf
ds
cmpsl
or
add
data16
out
in
enter
jg
call
mov
cmp
cli
popa
in
leave
xor
lret
adc
addr16
aas
roll
rolb
mov
cmpsb
loop
int3
ret
and
or
push
ret
ret
and
adc
adc
ficomps
movb
cmpsl
and
push
mov
movsb
dec
icebp
call
int
rorl
hlt
les
fimull
add
imul
les
dec
iret
mov
sbb
outsl
js,pn
jl
mov
xor
mov
aam
pusha
mov
fnstenv
andb
cmpsl
outsl
xlat
and
ja
inc
into
and
mov
mov
cwtl
in
pop
xor
jl
fildl
lock
push
fcompl
in
mov
jp
jae
push
xor
leave
xlat
daa
loopne
out
into
xchg
es
xor
jmp
sbb
rcrb
adcb
and
jge
loop
xchg
inc
js
and
movsl
stos
xor
lret
gs
test
sub
dec
xchg
mov
cmpsb
clc
jge
lods
lock
mov
jle,pn
jne
in
lods
xchg
xchg
hlt
dec
push
mov
xor
or
jecxz
inc
incb
fidivrs
icebp
in
les
rclb
sub
sub
mov
sti
jns
dec
dec
lods
ror
add
adc
jp
out
jle
lea
mov
mov
pop
fnsave
inc
inc
insl
and
cmpsl
in
arpl
icebp
and
push
mov
jecxz
loope
mov
inc
push
lods
xor
inc
mov
addr16
repnz
push
xchg
into
jecxz
out
sti
mov
mov
jmp
aas
mov
push
movsl
jle
aaa
mov
daa
or
ds
cld
xlat
cmp
mov
movsb
call
adc
adc
out
push
adc
fidivrl
jo
xchg
xor
xor
movsb
in
out
cmp
loope
lock
ljmp
xor
pop
pop
test
int3
mov
bound
mov
jne
rcr
addl
aad
sub
mulb
lock
aad
sbb
insb
daa
mov
mov
lods
jno
bound
data16
adc
stos
mov
fistps
mov
sbb
push
orl
imul
repnz
cmp
push
pop
pushf
lea
xchg
dec
cmc
pop
sar
adc
addl
sahf
push
js
les
mov
bound
sbb
push
imul
inc
sti
add
or
repz
leave
fildll
cmp
dec
adc
cmp
mov
testb
push
add
mov
shlb
jl
mov
mov
inc
inc
xorb
loopne
mulb
mov
cmp
and
xor
and
jmp
xor
ds
je
popf
outsb
roll
ds
orl
lods
jae
mov
aam
xor
aas
add
test
sbb
outsl
out
shll
xchg
mov
dec
lret
mov
outsb
movsb
lods
add
mov
sahf
fwait
cld
mov
sub
fnstenv
jp
scas
sbb
and
test
jns
jg
out
rorb
shl
push
or
cmp
jp
in
dec
push
xchg
jnp
jge
dec
mov
fucomip
sub
adcl
aad
lret
mov
pop
sub
das
lods
int3
popf
dec
pushf
adc
ret
dec
icebp
push
lock
imul
loop
pop
movsl
and
loop
push
xchg
sarl
push
dec
jno
inc
scas
sbb
out
frstor
mov
xchg
into
cwtl
pop
stos
in
and
pop
and
inc
fs
add
hlt
xchg
inc
cwtl
add
movsb
cmpb
cmpsl
movsl
push
fs
daa
xchg
sbb
cmpl
sub
sub
jp
add
xchg
test
rorb
outsb
dec
lds
cld
xor
jno
addr16
aas
rcll
mov
add
push
or
loopne
subl
test
pop
inc
adc
mov
xor
or
sub
loop
icebp
fcmove
mov
mov
pop
lods
sub
jmp
outsb
xchg
and
fbld
pop
xor
call
mov
pop
test
movsl
mov
mov
pop
lahf
pop
divb
jns
and
mov
lods
ret
fidivl
pop
test
mov
or
sbb
jo
pop
andb
loop
int3
addl
iret
jne
dec
mov
mov
or
fistpl
jbe
and
stos
mov
adc
in
push
jp
dec
fbstp
mov
out
mov
sti
jl
movsb
add
ss
fisttpll
icebp
sbb
mov
sub
leave
mov
jle
test
jl
push
iret
scas
mov
and
repz
ljmp
in
lcall
mov
mov
and
pop
rcpps
pop
cmp
xchg
out
pop
out
loope
pop
push
inc
sar
pop
hlt
cmp
into
mov
inc
sbb
in
ljmp
pop
in
mov
mov
mov
imul
mov
mov
mov
fs
sub
mov
xor
lret
mov
popa
push
in
pop
push
jnp
and
out
fwait
in
adc
dec
iret
xor
test
lock
jne
hlt
inc
loopne
cmpsl
pop
lods
enter
in
push
sub
mov
fistpll
sbb
pop
mov
pop
dec
in
adc
cli
mov
pop
jo
sahf
push
loopne
outsb
mov
pop
aad
cmc
pop
xchg
and
dec
lcall
shl
fiadds
fdivrl
mov
or
repnz
icebp
cmp
in
mov
or
or
je
nop
int3
pop
inc
movsb
add
inc
cmp
or
push
jnp
sub
fs
in
xor
imul
dec
and
mov
nop
xchg
sbb
lds
sbb
add
add
je
pop
mov
imul
fistpll
scas
jb
fnsave
dec
mov
pusha
push
mov
das
imul
xchg
movsl
stos
shrl
sbb
xor
xchg
sbb
divl
movsl
mov
inc
mov
jo
xor
fcmovnb
jbe
mov
jle
add
in
push
add
dec
popf
imul
pop
adc
and
loopne
mov
pop
adc
dec
mov
xchg
xor
cld
scas
stos
jg
aad
stc
jmp
push
fists
aaa
push
shlb
repz
stc
inc
sbb
lods
pop
pop
lods
xchg
mov
fisttps
add
ss
pop
rcrl
cmp
cmp
lock
mov
or
jns
jns
mov
stos
shll
pop
iret
xchg
and
push
je
and
dec
inc
iret
mov
ret
pushf
cmp
or
cmpl
negl
sub
push
movsl
aas
sti
fsubs
in
sbb
xchg
mov
push
subb
sbb
rorl
lock
sarl
fldl
xor
xchg
adcb
mov
pop
inc
lods
cmp
mov
inc
pop
jge
ret
xchg
sub
stos
outsb
dec
mov
shlb
jecxz
std
pop
shll
jbe
clc
notl
or
lods
xchg
inc
clc
mov
lods
push
jo
lock
fldl
repz
mov
add
mov
xor
shr
or
inc
xor
push
sahf
sahf
mov
mov
push
sbb
mov
mov
add
inc
sub
adc
pop
fcoml
je
dec
pushf
mov
outsl
mov
inc
fcomi
sbb
das
pushf
fnsave
fimull
mov
repz
xor
iret
push
sahf
fildl
insl
fsubrs
das
fs
ss
push
xlat
mov
mov
fimull
mov
sub
pop
arpl
jge
shll
nop
roll
mov
out
add
into
pusha
jle
or
imul
in
mov
aaa
push
add
fistl
xchg
mov
lods
gs
out
push
je
adc
push
xchg
or
popa
or
dec
fwait
sbb
sbb
jg
pusha
mov
jbe
jle
std
lcall
out
jmp
cmpsb
call
inc
jecxz
sbb
inc
stos
ret
mov
xchg
decl
lcall
test
loope
xchg
push
sarb
mov
fdiv
add
jae
dec
stos
scas
and
lods
loop
push
xor
mov
or
adc
xor
out
inc
or
adc
outsb
push
pop
movsb
jb
aaa
mov
aaa
mov
inc
mov
push
insb
lods
mov
test
neg
lcall
or
data16
mov
daa
xorl
mov
pop
jbe
pop
enter
adc
shll
rcrl
imul
dec
dec
fsubrl
shll
or
dec
push
xorl
lahf
sti
movsl
enter
loop
icebp
fbld
orb
cwtl
imull
iret
mov
pop
inc
andl
dec
mov
cmc
call
mov
fistps
sbb
in
mov
jno
or
or
pop
stc
ret
cli
icebp
lods
and
sub
negb
fiadds
push
mov
inc
in
insb
pop
and
lods
pop
repz
rorb
fistps
dec
mov
dec
int3
fisubrl
pop
repnz
pop
mov
mov
test
jl
fwait
xchg
std
int
mov
inc
ret
xchg
cmpsb
or
push
rep
mov
arpl
lcall
scas
pop
data16
mov
pop
adc
outsb
lret
add
pop
mov
jnp
sbb
jp
je
ret
daa
mov
lea
inc
jb
pop
xchg
stc
or
pop
pop
cmp
sahf
inc
fldcw
push
dec
jno
rolb
outsl
push
mov
repnz
dec
mov
rcrl
stos
stos
mov
imul
fisubrl
pop
push
shr
sub
rcll
rcr
addr16
shr
sbb
notb
ret
dec
pop
inc
inc
cmp
ficompl
adc
stos
pop
imul
xor
in
xor
std
push
in
imul
inc
push
and
and
in
call
or
jo
xchg
emms
inc
sub
or
hlt
inc
or
jp
frstor
mov
jno
inc
ljmp
imull
ljmp
jnp
cmp
popa
sahf
fldcw
push
xchg
xchg
fstp
lods
and
je
and
ror
xchg
pop
and
push
xor
add
xchg
push
add
and
push
mov
cmpsl
jg
mov
lods
mov
fcomps
sahf
jmp
push
mov
push
scas
arpl
sbb
in
clc
mov
and
fsubrl
adc
imul
into
mov
fistpl
aaa
fldcw
inc
or
insb
fdivrs
mov
xchg
xchg
dec
loopne
loop
mov
ss
test
add
push
mov
nop
mov
mov
mov
int
cld
stos
mov
int
inc
mov
lods
adc
dec
in
rorl
add
pop
imul
cmp
ja
aam
jecxz
in
push
icebp
call
cwtl
cmp
jno
sbb
or
test
fs
int
nop
pop
movsb
pop
or
mov
mov
call
dec
pop
add
and
jbe
dec
cmp
mov
movsb
xor
dec
push
je
push
repz
lahf
mov
xor
pushf
daa
push
out
cmpsb
push
jl
jp
icebp
into
cld
and
xchg
add
sahf
mov
mov
fcom
xor
mov
repnz
pop
adc
cltd
lock
mov
ds
mov
pop
push
xlat
push
pop
mov
mov
pop
pop
aam
sahf
push
out
popa
jbe
push
insl
mov
inc
loope
das
repnz
push
and
aas
pop
scas
inc
fidivs
and
mov
lods
imul
jecxz
andl
adc
jo
and
xor
stc
or
or
mov
jl
and
clc
inc
cmpb
pop
and
mov
dec
inc
mov
in
repnz
insl
daa
adc
nop
xchg
imul
sahf
sub
int3
mov
test
fiaddl
pop
aaa
xchg
icebp
xlat
rcl
jns
or
lods
lret
outsl
and
xchg
xlat
addl
dec
and
adc
pop
and
enter
insl
dec
mov
xchg
cwtl
in
mov
sub
fcompl
mov
mov
ficoms
call
add
shl
rol
jbe
int
xchg
pop
insl
test
pop
push
pop
adc
xchg
mov
lret
pushf
sub
es
cmp
xchg
jecxz
imul
lcall
cmp
sub
jae
cmp
mov
cli
and
xchg
loope
pop
and
pop
pop
push
jb
push
cmpsl
mov
jmp
mov
ficompl
dec
sti
ret
cld
nop
xchg
fwait
xchg
cmc
push
xchg
out
sbb
sarl
adc
lock
sbb
psraw
and
pusha
mov
out
pop
arpl
ss
je
in
push
lahf
lcall
iret
lock
mov
push
jno
pop
add
adc
shlb
sub
repnz
jnp
pop
ds
lahf
push
cmpsl
cmp
inc
je
out
mov
arpl
clc
rcrb
pop
daa
push
xor
sahf
mov
adc
dec
and
or
add
inc
imul
dec
jle
fcoml
push
inc
push
inc
jne
ds
jp
jle
ret
popf
xchg
or
add
outsb
push
pop
fildl
subb
test
xchg
pop
jae
mov
std
dec
cmp
js
ret
vmread
shlb
inc
adc
sbb
outsl
aas
cmpsb
xchg
mov
test
jmp
push
in
in
inc
lcall
xchg
push
sub
stos
dec
in
jp
stos
inc
push
mov
push
inc
addr16
mov
sbbb
test
add
and
dec
movb
popf
or
xchg
cmp
inc
cmpsl
in
adc
pushf
mov
push
fwait
stos
shlb
xchg
cmp
divb
sti
lcall
pop
or
je
and
xchg
jecxz
add
jmp
xchg
adc
shll
imul
push
dec
xchg
jo
push
push
mov
int
subb
jmp
sub
or
mov
mov
sub
mov
imul
xchg
repz
push
jo
cmp
out
out
imul
inc
dec
sbb
or
jp
fwait
es
cmpb
or
mov
inc
dec
test
es
lahf
jo
pusha
bound
jnp
inc
bnd
jp
stos
jg
push
mov
mov
dec
loop
sub
cmp
xor
insb
pop
scas
sbb
or
test
jae
pop
insb
sahf
mov
mov
cmp
xor
and
mov
maxps
sbb
je
sub
add
mov
aad
jno
inc
testl
adc
mov
adc
inc
mov
xchg
movsl
sub
dec
in
sbbl
dec
xchg
jne
out
add
cmp
sbb
or
ja
leave
mov
mov
dec
cmovp
lret
leave
jbe
inc
aam
and
mov
push
dec
cmpl
add
je
xor
cmpsl
xchg
pop
sti
fisttpl
dec
icebp
test
out
mov
iret
push
push
out
sub
es
xchg
xchg
iret
jae
pushf
xchg
and
xor
adc
jnp
out
mov
dec
jg
in
loop
or
aas
xlat
adc
movsb
addr16
xchg
popa
adc
incb
xchg
cmp
cmc
rolb
and
popa
dec
adc
and
mov
jmp
call
inc
mov
add
push
adc
jge
mov
aam
cmp
mov
mov
pop
clc
data16
cld
jl
sub
out
mov
pop
xor
movsl
dec
xchg
insl
std
shlb
loope
or
mov
xor
cmovns
or
pusha
ffree
lods
shl
lcall
inc
mov
insl
mov
cmp
xchg
dec
fstpt
popa
mov
pop
in
lods
notb
or
in
jp
outsl
pop
mov
in
leave
adc
aaa
ja
inc
repz
shr
cs
jae
outsb
push
cld
jg
mov
popa
mov
fistps
jmp
out
push
jns
ss
repnz
inc
mov
cmp
mov
jns
ja
bound
sbb
fcompl
or
jne
push
xchg
mov
push
xchg
inc
lahf
xor
outsb
sub
jo
insb
imul
cmp
je
and
mov
pop
into
inc
stc
sub
jecxz
sbb
push
dec
sbb
fldenv
bound
ret
aam
xorb
lea
mov
cmp
jnp
test
pop
cmp
mov
int3
cltd
leave
add
ret
sub
mov
gs
lock
push
cltd
xlat
pop
sbbl
rcr
or
jne
pop
cmpsl
ja
dec
mov
popf
push
mov
pop
outsl
xor
pusha
dec
push
mov
mov
call
clc
icebp
or
xlat
ja
mov
xchg
lock
pop
push
loop
mov
or
loope,pn
sti
cs
in
ret
lock
int3
xchg
lock
loopne
movsb
imul
xor
add
mov
fs
and
mov
cmpsl
or
pop
ja
std
stos
cmp
pop
jmp
and
push
jle
lock
adc
add
xor
xorb
sub
decb
mov
xchg
sub
out
test
jne
popf
adc
test
in
sarb
push
rolb
jns
mov
test
pop
retw
in
sar
cmp
fwait
adc
dec
addr16
insb
push
fldenv
push
ja
imul
inc
cmp
mov
les
mov
adc
icebp
aam
mov
fwait
lret
dec
mov
xor
lahf
bswap
jle
fcmovb
jne
aas
xor
add
cmp
mov
sbb
dec
addr16
cmp
pop
xor
adc
in
xor
fstpl
mov
mov
sbb
xor
push
cli
or
cmc
push
adc
push
jnp
lea
sahf
mov
out
push
out
std
cmp
sub
lret
push
in
lock
jp
mov
lock
pop
cmp
jo
push
fs
and
ret
fnsave
inc
sbb
pop
mov
sub
subb
adc
adc
pop
loopne
stos
imul
push
std
or
add
imul
and
xorps
mov
cltd
in
test
jb
cmp
scas
mov
jnp
push
mov
lret
idivl
pop
orb
sub
loop
mov
jg
cmp
aas
in
stc
in
lods
into
maskmovq
testl
adc
mov
fistl
adc
jmp
lcall
pop
aaa
shlb
mov
mov
push
jg
pop
pop
icebp
lods
fmuls
xchg
lret
aad
lret
sahf
ffreep
out
cwtl
inc
add
add
mov
insl
jge
or
imul
mov
fdiv
bound
fcoml
xor
and
xlat
popf
shlb
mov
or
push
lds
cmp
aas
ficomps
push
mov
stos
fs
inc
rcrb
data16
pop
xor
sub
cmp
int
movsl
in
ja
aam
gs
mov
and
bound
in
es
sbb
pop
scas
test
xor
inc
repnz
jae
mov
mov
add
push
dec
stos
daa
fwait
addr16
mov
push
xchg
jnp
inc
mov
ret
adc
mov
test
jecxz
mov
jmp
pusha
ss
cmp
sbbl
push
sarl
jns
fisubrl
add
out
test
lock
sbbl
in
dec
cmp
xor
test
sub
cwtl
rclb
xlat
inc
mov
cwtl
hlt
stc
push
fsubrl
pop
cmpsb
aas
movsb
rcr
sar
rorb
cmp
or
es
sub
es
addr16
push
fisubrs
lcall
and
jne
mov
xor
dec
cltd
ljmp
or
shlb
fdivrp
or
add
and
ret
dec
adc
mov
test
or
cmc
cwtl
mov
push
sahf
cs
xchg
or
ss
bound
stc
push
and
cs
mov
mov
fimull
ficomps
xchg
cmp
lock
cli
dec
and
mov
test
stc
out
stos
xchg
adc
cmpsl
push
mov
xchg
push
gs
scas
dec
jnp
xor
jmp
pop
aad
push
inc
cmc
jnp
mov
les
repz
mov
xor
rolb
cmp
or
rorb
push
dec
or
sbb
pushf
fadd
xor
and
aaa
inc
dec
out
push
dec
and
shlb
cmpsb
xchg
popf
mov
stos
ss
shlb
mov
mov
mov
cmp
popf
mov
xor
add
push
cmc
sbb
adc
nop
pop
mov
jmp
pop
aad
scas
sub
mov
xchg
push
mov
pop
int
mov
sbb
or
cmp
enter
xchg
movsl
or
pop
lret
cld
cwtl
fwait
std
fwait
cmp
push
inc
sbbb
fildl
mov
or
lahf
mov
inc
or
push
pusha
in
call
push
mov
add
sbb
cwtl
aaa
dec
out
test
stc
adc
or
das
nop
in
add
ret
fstpl
cli
sub
cmpsb
push
rol
pusha
mov
hlt
sbbl
xor
outsb
cmp
lea
mov
sahf
sbb
fnstcw
fdivrl
pop
orb
rcl
repnz
test
jo
jle
ret
es
and
mov
mov
push
test
es
add
xchg
pushf
rorb
jg
repz
mov
sub
push
imul
mov
or
iret
xchg
inc
push
std
hlt
cmp
pushf
jge
lock
jmp
loope
pop
ds
add
or
mov
sbb
cmc
xchg
push
dec
inc
or
push
call
jl
cmpsb
movsl
jae
out
nop
xor
lods
leave
movsb
icebp
jne
int
sahf
adc
mov
inc
jno
pop
push
rclb
stos
mov
mov
adc
fimuls
jb
sub
mov
push
in
aaa
inc
stos
xor
sub
faddl
and
dec
insb
adc
test
mov
sbb
fcoms
hlt
jo
mov
sub
rorl
jle
stos
fadd
cmp
push
sbb
sub
dec
dec
pop
fcomps
int
call
and
mov
in
dec
adc
repz
icebp
pop
ficoms
scas
jp
out
cmp
enter
pusha
inc
bound
jmp
arpl
js
lcall
xchg
push
sahf
loop
xor
dec
xchg
push
pop
outsl
sbb
leave
fwait
lahf
dec
cmp
test
mov
lret
lcall
jp
and
and
inc
popf
cltd
or
call
out
add
ljmp
stos
inc
lock
stc
cli
nop
push
arpl
mov
stc
mov
pop
dec
mov
mov
pop
jb
orb
add
repnz
punpckhdq
cmp
jbe
loop,pt
mov
xor
into
inc
push
out
popf
arpl
gs
jns
lds
inc
fwait
pop
inc
shlb
lds
xchg
popf
dec
dec
push
mov
fwait
nop
add
pop
dec
adc
pop
mov
ficomps
imul
sbbb
in
dec
add
mov
pop
xchg
lods
inc
pop
or
push
sbb
popw
inc
cmpsb
daa
leave
mov
sbb
push
fsts
ss
pop
adc
lahf
mov
lods
push
pop
insb
repnz
jecxz
scas
mov
xor
sub
jnp
jnp
rcrb
add
lods
mov
cmpsb
xor
push
jno
imul
or
mov
push
mov
cltd
inc
test
pop
sbb
xchg
negl
jle
sbb
ljmp
outsl
mov
subb
ds
cltd
cltd
scas
mov
xchg
ret
jns
les
mov
mov
call
xchg
inc
imul
push
movsl
xchg
xchg
popf
adc
iret
mov
outsl
imul
add
movsb
mov
push
loop
roll
cmp
push
ret
and
cmp
pop
setnp
in
mov
push
jno
inc
jnp
push
dec
or
sub
mov
push
or
inc
jb
pop
mov
cmp
mov
xchg
mov
or
mov
sbb
xchg
mov
cmp
mov
cmp
and
sbb
push
sbb
icebp
ret
scas
es
sub
ret
adcb
sbb
scas
mov
xchg
xor
push
dec
sub
cmp
loop
jns
jmp
add
lods
stos
aam
xchg
pop
and
and
xchg
pop
sub
xchg
cmpb
lods
int
inc
xchg
cmp
mov
rorl
pop
test
sbbl
jle
incb
pop
xchg
fcmovb
mov
aas
pop
sarb
or
stc
mov
mov
fyl2x
fldcw
fmulp
adc
mov
jg
je
and
cmp
mov
je
dec
push
sbbb
sbb
and
scas
sub
dec
mov
pop
leave
std
mov
in
xorb
in
lahf
xchg
inc
cwtl
pop
call
in
cwtl
push
push
scas
xor
mov
sahf
xor
int
test
test
jbe
ljmp
pusha
loopne
jns
jne
pusha
out
ret
movsl
sub
xor
or
insb
sti
push
cmp
adc
sub
int3
and
lods
addr16
aad
popa
aaa
xchg
imul
divl
cmp
xchg
jp
dec
add
inc
in
mov
loop
aas
pop
movsb
jmp
movsb
icebp
pop
adc
add
or
dec
movsl
dec
add
add
push
aad
push
insl
lea
es
and
gs
subps
mov
fsubp
jl
jmp
loop
outsl
fstps
repz
push
push
clc
and
scas
addb
dec
or
mov
shlb
add
js
pop
push
mov
outsb
inc
gs
mov
shlb
shll
aas
or
addb
ret
push
out
test
stos
mov
mov
mov
lcall
mull
adc
pop
stos
lods
jge
lods
inc
cmp
rcrb
insl
mov
adc
jo
in
mov
mov
add
cmp
xchg
mov
gs
jo
movsl
xorb
mov
cltd
inc
jmp
add
xchg
pop
jp
jp
cmp
fdiv
sbb
aaa
lret
cmovle
mov
pop
insb
ss
clc
mov
loop
pop
orb
aad
jo
or
and
xor
xor
mov
xor
xor
pop
mov
call
xor
cli
sti
loopne
pop
je
dec
aas
dec
and
sub
add
cmp
xchg
iret
popf
add
and
cwtl
test
mov
xchg
mov
cmp
xchg
sub
add
push
inc
inc
out
mov
xorl
lret
std
addb
cmp
outsb
movsb
add
aam
mov
fimuls
inc
mov
repz
jl
fcomi
or
cmp
das
push
es
jmp
sub
jne
jmp
sti
enter
push
out
inc
rorl
pop
jl
mov
mov
sub
mov
jo
loope
lahf
push
jecxz
hlt
cmp
adc
ds
or
push
jp
nop
push
dec
mov
and
push
or
cmp
push
aam
xchg
les
inc
and
jle
fcomi
cmc
or
inc
and
pop
in
repz
in
aas
pop
adc
out
test
popa
pop
jecxz
rcll
shlb
rorb
mov
mov
xbegin
popa
mov
xor
mov
out
pop
pushf
mov
aas
inc
inc
jb
or
adc
mov
xor
xchg
fldl
dec
shlb
dec
aam
mov
fisubs
xlat
fwait
cmc
data16
les
cmc
add
pop
dec
insb
fiaddl
out
xor
mov
dec
mov
inc
js
ret
add
dec
ds
pop
add
add
jae
shr
mov
xchg
mov
jg
add
or
xchg
outsb
inc
int
sbb
sbb
pop
adc
sub
fcmovne
mov
xor
iret
ret
xchg
mov
cmc
xchg
cs
sub
adc
push
sahf
xadd
pop
sub
out
andl
pop
sti
icebp
cld
inc
icebp
mov
mov
push
test
or
mov
sbb
call
mov
xor
xor
mov
inc
aad
cmpsb
insb
cbtw
sub
cmp
inc
and
loope
inc
repnz
rcrb
sbb
outsl
mov
pushf
fsubp
js
sbb
lahf
lahf
out
cmc
in
cmpsb
jle
iret
cld
fs
cmp
xchg
push
inc
xchg
mov
push
rcrb
cmpsb
bound
loopne
pop
inc
and
xor
pop
in
ret
sbb
jmp
fcoms
negb
rcr
cld
jge
cmp
mov
dec
sub
cli
int3
fs
clc
add
inc
jp
sub
mov
mov
mov
subb
cli
dec
jno
xor
jnp
sti
inc
add
aam
lcall
jnp
fcomps
fdivl
mov
and
cli
inc
pop
arpl
jo
addb
push
adc
ret
push
mov
mov
out
rcll
mov
ss
adc
jb
dec
std
test
mov
cmp
pop
or
js
sbb
xor
mov
popf
xor
aam
dec
enter
sbb
pop
ret
cmp
jb
aad
cmp
test
pop
mov
vpsrlw
and
das
dec
add
mov
cld
sti
cli
and
sbb
sbb
pop
add
int
nop
adc
cmp
stos
dec
shlb
pushl
outsb
lods
cmp
es
scas
ljmp
out
cmp
daa
sbb
clc
inc
adc
or
xchg
aaa
sbb
xchg
aad
mov
fisttpll
pop
jg
insl
nop
aad
sub
fimull
adc
call
fisttpll
iret
fldenv
dec
jno
hlt
sbb
negb
std
test
out
sarb
sar
outsl
or
sbb
enter
or
sbb
jg
rcrl
jmp
pop
loop
mov
xlat
mov
jle
ljmp
popf
mov
movsb
push
cwtl
jbe
sbb
aam
adc
imul
lcall
lea
test
add
lods
fstpt
jp
ret
or
imul
dec
sbb
cmp
pop
jb
sbb
andl
cmp
imul
mov
dec
gs
outsb
dec
inc
xorb
xchg
push
fbstp
stos
rcr
popf
mov
call
mov
inc
dec
rcrl
xlat
cmp
les
or
movsl
out
fnstenv
rol
xor
inc
sbb
dec
mov
or
push
jns
xchg
mov
cs
inc
shl
mov
mov
dec
mov
jnp
mov
mul
mov
loopne
jae
sbbb
int
scas
jg
xlat
rorl
outsb
stos
fwait
lret
mov
xchg
ret
dec
fsubl
loop
nop
ss
or
dec
mov
repz
inc
cwtl
xor
xchg
mov
push
jno
jae
add
movsb
andl
outsl
rcrb
inc
sub
jle
adc
push
sub
fcompl
fwait
maskmovq
idivl
pop
ds
mov
insb
mov
lret
xchg
mov
fsubs
std
cmpsb
mov
stos
xchg
sbb
and
std
faddl
mov
in
sbb
arpl
ret
outsb
dec
std
or
mov
add
mov
js
and
cmpsl
lock
cmp
adc
mov
push
movsb
testb
xchg
xchg
sub
aas
lods
idivb
inc
mov
inc
mov
pop
sub
imul
sub
aaa
jbe
daa
iret
add
stos
and
shl
jge
loop
or
push
popa
insl
stos
lea
inc
xchg
cltd
scas
lods
test
stos
mov
not
jmp
mov
lret
and
outsl
dec
gs
fs
adcl
rol
pop
fdivl
mov
xchg
rcl
jns
and
pop
js
jmp
fs
movsb
sbbb
rolb
lea
ss
inc
leave
push
and
mov
pop
mov
nop
fistps
addr16
and
jb
or
test
jno
cmp
hlt
add
push
repnz
aad
sub
test
daa
sbb
cld
fisubl
or
pushf
cmp
cmp
or
test
mov
data16
add
shll
xor
push
xchg
push
dec
idivl
mov
je
cmc
add
inc
add
sbb
roll
in
sbb
daa
imul
aad
xlat
mov
repnz
testl
xor
cmc
pop
xchg
data16
push
or
push
arpl
inc
sbb
cmp
andl
stc
sbb
scas
sbb
int
mov
sbb
xchg
popf
sbb
jl
xor
jae
push
aad
pop
js
pop
sbb
inc
sub
pop
dec
cmp
xor
sbb
mov
ljmp
or
rolb
xchg
es
imul
xchg
push
outsl
ss
xor
sbb
stos
incl
mov
cmpsl
mov
xchg
shl
jmp
es
cmpsb
jg
jo
mov
mov
push
in
xor
imul
das
mov
add
hlt
pop
jne
add
pop
ds
ljmp
mov
out
cmp
mov
gs
stos
lahf
xor
faddl
sbb
dec
jnp
cmpsb
int
enter
mov
mov
test
cmp
xor
inc
mov
sbb
out
push
ss
sbb
cmp
roll
bound
mov
xchg
je
frndint
out
pushf
inc
adc
add
loopne
push
sub
test
add
ljmp
cli
pop
jbe
push
push
add
loope
and
sub
or
sbb
jbe
sbb
jne
or
in
dec
fucomi
sub
jo
dec
out
xchg
std
ds
mov
cld
xor
arpl
cwtl
xor
push
out
syscall
push
int
cli
subb
out
aaa
stos
jmp
adc
cmc
jmp
sub
mov
mov
xor
mov
or
repnz
lea
xor
popf
std
xchg
fnstsw
cmp
out
xchg
in
popf
idiv
push
sbb
fiaddl
push
dec
out
jns
mov
or
jb
push
cltd
stos
inc
cmp
sub
repz
clc
or
jecxz
push
into
test
jl
pushf
jae
js
lods
dec
movsb
xchg
inc
insl
fnstenv
or
push
cld
test
xchg
movsl
loop
and
fsub
lods
lret
pop
gs
enter
jns
bnd
loopne
rcll
cli
xchg
leave
and
push
mov
outsb
cld
sbb
mov
inc
out
pop
cli
cmp
jae
idivl
out
cmp
pop
fwait
xchg
pushf
cmp
cli
inc
pushf
push
shrl
adcb
outsb
cmp
xchg
or
popa
or
shlb
cmp
fdiv
push
daa
adc
or
fildll
stos
call
jne
pop
pop
pop
xor
daa
in
mov
shlb
fwait
dec
fmulp
dec
mov
lock
mov
cmp
hlt
insl
into
fldcw
sbb
sbb
xor
lahf
test
jbe
test
mull
lcall
cmpl
hlt
push
push
out
aas
pusha
cmpsl
and
in
movsl
pop
or
insb
out
cltd
jne
fcomp
dec
out
xor
pop
and
pop
mov
sub
adc
jb
nop
cmp
sub
js
test
and
into
sub
cmp
xchg
mov
cmpsb
add
mov
pushf
sbb
add
or
add
jl
es
cmp
add
ret
lretw
push
add
sarl
or
add
mov
daa
in
xchg
xor
mov
push
mov
in
xchg
sub
xchg
pop
xorb
jecxz
loopne
mov
out
in
mov
outsl
out
mov
pop
pop
int3
fsubrl
movsl
jmp
cwtl
cmc
adc
cs
iret
out
push
enter
pushf
jo
lods
in
and
cli
xchg
test
inc
cmp
idiv
dec
movsb
aam
jmp
push
xor
out
inc
xchg
mov
dec
daa
cmpb
lahf
mov
int
ds
lods
push
xchg
fdiv
add
or
sub
rclb
jecxz
scas
jecxz
negb
xor
sbb
iret
lods
sti
pusha
or
shlb
cmp
in
mov
aad
mov
mov
sbb
jns
or
test
out
inc
stc
ret
or
fnstenv
fsubrs
xchg
ss
jle
enter
std
call
inc
scas
mov
bound
or
xchg
mov
mov
and
jbe
dec
fstpl
cltd
lcall
jge
mov
shlb
rcrl
out
cltd
mov
int3
lock
pop
xchg
fildl
cmp
testb
xor
jle
adc
push
sbb
add
inc
or
or
xor
xchg
ret
mov
jecxz
dec
flds
adc
adc
inc
xchg
dec
cmp
aam
mov
in
cmp
subl
fsubs
pop
call
mov
jns
sbb
xor
jno
mov
xor
lods
pop
xchg
insl
mov
std
mov
xor
xchg
sub
jge
xor
jge
or
outsl
das
jno
pop
test
push
ss
popa
pop
icebp
div
jns
mov
dec
cmp
daa
inc
mul
cltd
xor
or
cmp
lret
adc
cmp
xchg
jecxz
mov
jb
popf
fiadds
clc
cmpsl
pop
push
xor
clc
imul
xchg
ja
data16
dec
and
mov
sbb
enter
xchg
push
addb
call
cmp
cmp
inc
fisubs
pop
sbb
xchg
jecxz
movsl
jl
stos
mov
mov
add
xchg
and
push
jg
outsb
adc
aam
mov
roll
pop
cmp
xlat
fs
jb
mov
mov
and
les
outsl
push
mov
icebp
push
test
xchg
sbb
notl
cli
fs
ret
outsb
test
lea
rorl
loop
mov
sbb
pushf
push
jg
xorl
mov
add
jmp
xor
lods
push
rcrl
inc
stc
sbb
jne
cmpsl
gs
lods
jbe
repnz
dec
shlb
aad
loop
xchg
in
sub
cli
sbb
lods
ja
dec
mov
clc
leave
hlt
das
outsb
and
push
stos
and
dec
or
loop
mov
je
push
dec
jne
aaa
xor
imulb
inc
lds
pop
add
pmaxsw
jge
in
test
cmp
repnz
fsubr
out
mov
xchg
push
dec
add
mov
cmp
arpl
aam
mov
lods
lcall
imul
orl
inc
fildl
jae
mov
xor
add
or
test
xchg
xchg
sbb
mov
pop
push
imul
out
arpl
and
jne
mov
cmc
mov
push
sbb
adc
dec
aas
jl
and
push
out
mov
leave
jnp
dec
popa
xchg
mov
ret
xchg
mov
push
pop
jg
out
inc
push
pop
inc
mov
ja
imul
adc
in
mov
inc
jo
repnz
sbb
mov
pop
addr16
jo
js
imul
scas
adc
loope
sub
or
pop
and
xchg
fsubs
icebp
mov
adc
jecxz
in
lcall
and
js
or
jecxz
in
les
sub
add
jle
sub
and
lods
enter
scas
or
push
dec
lahf
xchg
pop
xchg
mov
xchg
mov
lahf
jno
jmp
test
mov
mov
lods
mov
les
mov
in
inc
mov
push
xor
cmp
jbe
mov
ss
push
sub
repz
daa
cld
int3
adc
mov
push
pop
fistpl
mov
sub
std
fistps
cmp
jnp
push
iret
push
js
jbe
pop
jbe
add
shll
out
or
movsl
or
enter
push
push
add
push
out
pop
push
hlt
imul
xchg
iret
adc
mov
in
cmp
cmc
std
xor
dec
lret
mov
sub
pusha
addr16
xchg
dec
sub
daa
lea
sub
sbb
add
aam
mov
mov
outsl
push
stos
xchg
dec
ret
stos
imul
pop
movsb
dec
scas
fistl
adc
out
and
aaa
test
ljmp
ret
or
dec
adc
add
and
push
push
lock
xor
popl
insb
loopne
in
je
jb
or
push
cmp
popf
sar
add
sub
das
scas
dec
insb
cltd
jecxz
inc
clc
ljmp
jne
leave
jo
xchg
push
outsl
loope
bound
loop
movsb
scas
dec
je
cmpsb
or
inc
adc
sbb
and
rcll
pusha
test
push
aad
dec
push
pop
cwtl
clc
call
cwtl
mov
cli
xchg
mov
mov
pop
cmp
sti
ret
lret
int
jae
ffreep
xor
xor
and
mov
sti
cmp
and
and
inc
and
add
push
and
push
vpcmpgtd
xor
push
mov
mov
test
loope
fdivl
push
test
mov
jecxz
or
mov
mov
sbb
test
mov
fisubrl
lock
pop
push
pushf
es
push
cmp
pop
aaa
push
jle
jae
rolb
ja
mov
pop
sbb
test
jg
shl
inc
movsl
outsl
cld
fistps
cmpsl
jmp
pop
dec
scas
fdiv
inc
jo
cmp
pop
push
xor
cltd
pop
mov
sti
xchg
sbb
ret
xchg
push
jecxz
out
stos
clc
and
xor
nop
cmp
testb
idiv
or
jne
pusha
test
jmp
or
push
aad
pop
jns
out
mov
in
xor
lea
les
scas
movsb
out
in
or
mov
dec
test
cld
mov
sti
loopne
lret
jl
xchg
aas
and
inc
jne
adc
psubsb
mov
fdivrs
ss
jne
sub
push
jns
push
sbb
lock
xchg
xor
inc
mov
arpl
push
insb
imul
lea
jo
sub
inc
push
jecxz
std
xor
mov
adc
sub
jnp
hlt
stos
pop
lea
pop
push
mov
arpl
enter
mov
pop
jmp
xchg
addr16
inc
fsubrl
push
lcall
bound
stc
andb
push
cmc
mov
dec
call
adc
icebp
dec
sub
inc
sarb
outsb
inc
jo
mov
fdivrl
xor
stc
mov
xor
sub
js
cli
imul
and
mov
ljmp
hlt
popa
rol
aaa
pop
cmp
jo
movsl
leave
cmpsb
xchg
sti
pop
mov
mov
inc
xchg
push
push
and
jae
hlt
and
filds
in
mov
cld
iret
adc
enter
dec
lcall
push
add
fcomps
xchg
rclb
fwait
push
popf
icebp
stos
movsb
test
out
adc
dec
sbbb
xor
hlt
xchg
or
xor
rcll
mov
or
movsl
test
pop
cwtl
scas
mov
adc
daa
mov
aas
xchg
cmc
or
xor
xchg
out
mov
lea
scas
xchg
jge
enter
imul
sub
xchg
filds
popa
push
and
pop
and
dec
add
mov
or
cmp
pusha
out
filds
pop
push
jle
jle
dec
pop
xor
pushf
cwtl
pusha
and
pop
add
subl
out
jmp
jmp
loop
adc
or
xor
jl
shll
ret
jbe
ret
adc
test
inc
push
movsl
mov
sahf
dec
xchg
jg
sbb
jge
es
insb
fwait
pop
insl
test
pop
aas
jg
push
lret
loopne
push
mov
test
or
jp
sbb
sbb
sbb
aas
clc
clc
jae
hlt
cmpsl
loope
arpl
xor
sub
notl
dec
hlt
push
test
out
stos
inc
fbstp
xor
test
sahf
and
sub
test
mov
movsb
pop
sub
call
andl
sbbb
and
shrb
push
xchg
stc
push
stos
xchg
sub
call
lret
lret
cmp
mov
shrb
dec
adc
cld
push
rorl
add
jne
imul
xorb
xor
rcll
in
mov
vmread
sti
gs
jo
lcall
and
add
mov
xchg
jae
cwtl
pop
shll
lret
lret
xlat
lcall
mov
clc
dec
adc
dec
rcrb
mov
push
stos
and
inc
scas
inc
lods
jp
adc
xchg
pop
xchg
push
mov
shlb
imul
mov
setbe
sbb
cmp
mov
clc
testb
push
stc
fidivrs
cmpsl
sub
icebp
add
mov
stos
cmp
pop
ja
jno
gs
xor
insl
sbb
pusha
addr16
jl
ja
icebp
popa
pop
mov
nop
ja
and
mov
hlt
adc
mov
push
es
pop
mov
imul
jns
xchg
call
pop
out
cmpsl
in
jns
mov
shrl
inc
inc
lret
pop
into
sub
pop
stos
insl
mov
aad
jl
jne
test
jb
je
in
les
xor
and
lods
outsl
hlt
test
cmpsl
loope
aas
mov
add
leave
cli
imul
loop
test
je
and
sbb
inc
push
popf
fs
jle
mov
cltd
roll
mov
lods
jge
cltd
mov
fcmovu
adc
xchg
xor
dec
or
fmull
cmp
testl
jp
pop
scas
stos
push
sub
cmp
outsl
add
loope
out
push
cmpsb
xchg
jl
gs
xchg
cltd
into
pop
shrl
jae
xchg
imul
and
add
shlb
jge
pop
movsb
rclb
push
lret
mov
and
sub
push
xchg
scas
or
scas
mov
mov
dec
lea
xchg
je
test
std
sbb
outsb
loope
push
stc
or
mov
push
jnp
inc
sbb
mov
pusha
inc
addr16
xorb
and
cmpsl
sbbl
cld
mov
movl
jae
icebp
outsl
jne
sub
mov
or
repnz
stos
add
mov
ss
mov
fxch
aaa
or
xor
add
ljmp
dec
insb
fdivrp
fst
xchg
aaa
dec
sub
aas
xchg
outsb
or
dec
das
dec
dec
mov
adcl
sub
fmuls
add
push
push
mov
mov
push
push
mov
inc
jmp
mov
stc
arpl
xchg
cld
lea
xchg
in
or
mov
dec
mov
fsubl
xor
pop
mov
pop
les
cmp
loopne
lret
mov
push
repnz
xchg
fcompl
decl
lods
pushf
fcomps
jle
movsb
mov
mov
aad
mov
adc
out
xor
andb
xor
push
add
jle
inc
sub
test
push
dec
fnstcw
arpl
sti
in
int3
jecxz
hlt
jecxz,pn
out
jecxz
inc
inc
test
mov
stos
ds
lret
cmp
lods
mov
pop
pop
jbe
movsb
mov
lods
outsb
cmp
push
lret
sbb
push
test
scas
lret
dec
adc
enter
push
pop
cli
in
mov
and
lock
xchg
aaa
test
cmpsl
and
adc
out
shr
adc
fs
insb
jp
xor
into
std
lods
xor
sahf
add
scas
fwait
pop
jne
xchg
mov
es
push
mov
sbb
aaa
cbtw
lock
roll
ljmp
loopne
jg
addr16
jg
in
es
shrb
ret
sbb
negb
aaa
into
pop
sub
jnp
sub
xchg
jmp
sbb
in
testb
loop
imul
sahf
dec
add
adc
or
and
lret
lret
scas
mov
jae
lock
and
je
pop
cmp
aad
cs
mov
aad
ss
push
xor
cmp
cmpsl
mov
cmp
inc
sarl
stc
pop
bound
mov
cmpsb
xlat
mov
mov
cld
icebp
and
cmp
lahf
add
and
cli
jge
adc
add
and
push
and
mov
setbe
int
or
dec
mov
mov
aam
sbb
in
cld
mov
fdivl
sbb
cmpsb
cmpxchg
jge
inc
repnz
mov
sahf
mov
jle
jmp
or
add
sbb
mov
and
pop
mov
inc
mov
sub
call
pop
fnsave
pop
pop
pop
adc
mov
xchg
repz
dec
pop
and
mov
push
push
push
mov
or
xchg
mov
add
and
js
iret
add
data16
fwait
add
out
fdiv
movsb
add
jb
dec
test
lock
fucomi
cltd
sbb
js
dec
jge
sub
dec
cltd
into
or
push
sbb
pop
lock
enter
imulb
lcall
mov
int3
arpl
push
jae
stos
aam
lds
add
stos
add
inc
sarl
fwait
inc
jecxz
xor
divb
cmp
sti
orl
jb
fstpt
push
aam
aaa
inc
mov
lret
fdivrl
popf
add
fwait
hlt
push
jecxz
jmp
xchg
cmp
test
sahf
dec
leave
add
int3
inc
mov
es
jl
cmp
aam
xor
mov
xchg
dec
lret
scas
push
cmpsl
mov
rorb
mov
rorl
imul
ret
pop
cmpsb
mov
ljmp
fcmovbe
ret
fwait
sub
pop
cld
loop
jmp
lock
xorb
sbb
in
and
adc
dec
dec
aaa
lea
cmpsb
int3
inc
nop
movsl
pop
push
into
mov
or
outsb
enter
mov
adc
ffree
lods
stos
xchg
push
cmp
pop
arpl
xchg
enter
pop
into
xchg
sbb
sbb
out
inc
or
arpl
push
and
hlt
mov
xchg
outsl
dec
mov
sbb
cmp
call
scas
push
mov
ds
pop
stc
shl
test
dec
fisubrs
mov
xchg
adc
fadds
test
add
cmc
push
cld
sbb
mov
outsb
and
sub
cmp
nop
popa
add
dec
test
or
xor
ss
ss
stc
insb
fwait
push
cld
lahf
jmp
call
loope
out
inc
sbb
push
imul
std
add
in
mov
popa
mov
stc
jns
add
icebp
jno
sbb
out
mov
push
cli
test
ret
mov
fdivp
add
mov
xlat
stc
or
cmp
dec
mov
sbb
in
int
add
sbb
or
aam
icebp
push
pop
dec
ret
std
cltd
dec
popa
shrb
xlat
popf
pop
je
iret
xor
hlt
insb
mov
je
inc
test
je
push
xchg
dec
sub
idivl
sbb
cld
mov
scas
sbb
mov
imul
xor
pop
out
xor
sub
cs
fistl
mov
cmpsl
push
test
mov
adc
sbb
inc
mov
rcrb
pop
imul
sbb
xchg
mov
dec
mov
clc
pop
and
into
orl
outsb
cmc
cmpsb
xchg
in
or
lret
movsb
sub
dec
out
pop
jge
mov
mulb
sub
subb
cmpsl
push
unpcklps
addr16
sbb
cli
mov
scas
lret
mov
mov
add
and
sahf
ja
dec
cmpsl
rol
addl
inc
jg
sbb
push
into
pusha
repnz
inc
sbb
pop
inc
mov
scas
call
pop
xlat
xor
add
int3
cmpsb
rorb
imul
jle
cmc
push
inc
loopne
das
loopne
dec
sub
lea
ds
addr16
push
adc
mov
out
das
inc
cmp
aad
in
adc
leave
mov
jmp
xor
daa
jno
inc
inc
insl
inc
xchg
adc
aad
xor
push
in
pop
jle
pop
clc
aad
lret
ret
bound
inc
cltd
jo
leave
mov
push
push
push
lods
enter
mov
js
mov
jb
xor
jo
sbb
pop
pop
cmp
fnstenv
scas
ss
dec
push
filds
cmp
pop
mov
or
in
cs
pop
mov
add
out
mov
push
mov
dec
pop
jmp
je
shlb
push
sub
jle
cmp
add
jne
scas
sub
jbe
in
pop
lds
lret
mov
pop
imul
and
xor
pop
add
out
aad
jb
movsb
repz
add
push
xchg
shrb
jne
mov
lahf
add
dec
iret
or
clc
aam
fwait
mov
cmp
lret
in
mov
or
shll
sbb
cmp
int
adc
lret
andb
outsb
mov
pop
icebp
push
ja
mov
call
stc
mov
fistpll
cli
cmc
jge
cmp
sbb
mov
push
addb
sbb
mov
leave
scas
cmpl
adc
stc
aaa
jle
je
leave
bound
fcomip
cld
xor
stc
inc
subb
add
push
add
out
popa
dec
outsb
cmp
ret
sbb
jno
pop
pop
pop
xchg
cmp
mov
mov
movsb
add
in
cmp
jne
pusha
addl
lods
fwait
mov
mov
push
mov
jnp
dec
sarb
sub
push
sub
in
inc
mov
nop
add
scas
add
adc
xor
inc
wrmsr
sbb
jmp
adc
pop
out
sub
lods
inc
xchg
dec
pop
jl
and
arpl
shlb
and
lret
jae
cmc
jnp
mov
pop
add
scas
add
pop
out
lea
call
inc
iret
dec
push
fcoml
ds
fcmovnbe
jae
inc
dec
inc
sti
sbbl
xor
or
xor
xor
mov
ja
mov
sbb
popf
icebp
inc
xor
fldenv
dec
repz
mov
pop
xchg
icebp
out
sti
je
sbb
invd
pop
lret
jecxz
insl
lcall
rorl
sbb
dec
jno
mov
and
pop
adc
loope
scas
out
add
gs
xchg
pop
fnsave
xchg
inc
sbbl
mov
cmp
ret
cmp
mov
imul
gs
lods
mov
ret
mov
outsb
shl
dec
aad
out
jl
repz
adc
jge
xor
repnz
repnz
push
into
and
mov
lcall
cmp
dec
lahf
push
fs
mov
dec
mov
lea
pop
xchg
jg
in
popf
pop
cmpsl
pop
inc
movsl
jns
push
inc
pop
push
popa
movsb
outsl
mov
mov
aas
enter
or
and
push
test
mov
dec
or
iret
adcb
push
pop
addr16
sbb
mov
mov
fistl
je
insb
pop
pop
xchg
scas
fisubrl
mov
add
movsb
fadd
dec
inc
mov
mov
and
jmp
out
pop
mov
xchg
not
sub
das
xchg
adc
fistpll
cs
lret
dec
ljmp
insl
imul
push
sarb
jns
scas
mov
cld
xor
push
or
pushf
mov
iret
out
pop
ja
gs
push
fsubs
xchg
lahf
ja
fwait
inc
testl
add
scas
fmull
scas
jb
call
ds
xor
pmulhw
test
pop
mov
repz
aaa
mov
dec
dec
ja
in
jno
lods
inc
pop
pushf
outsb
sub
into
bound
vsubss
subb
xchg
movsl
jmp
push
in
mov
and
pop
sarl
sbb
nop
mov
or
movl
sub
icebp
cmc
sub
mov
push
cmpsl
pop
jmp
jns
imul
shrb
xchg
or
cld
daa
push
push
inc
mov
add
adc
or
or
mov
fidivrl
imul
mov
fdivrl
jmp
mov
and
mov
ret
cwtl
or
mov
icebp
loop
and
bound
xchg
mov
xchg
insb
jbe,pt
les
xchg
ret
mov
pop
scas
aas
jae
fs
test
scas
jo
sbb
mov
sbb
test
insl
cltd
cltd
sahf
push
and
insb
mov
or
movsb
xchg
mov
pop
inc
dec
push
dec
cltd
aaa
adc
mov
lea
hlt
arpl
or
sbb
adc
pop
push
or
lods
and
push
mov
adc
rep
xchg
iret
cmc
push
sbb
adcb
push
fcmovnbe
cltd
stos
or
dec
pop
repnz
xchg
pop
inc
stos
shlb
sbb
sbb
xchg
dec
dec
addr16
bound
xchg
lea
push
push
jne
int3
mov
jmp
xor
in
stc
sub
into
mov
leave
push
popa
mov
cs
dec
pop
mov
or
das
fisubrs
shlb
xchg
or
and
imul
jg
xlat
xor
sahf
outsb
lret
mov
sbb
mov
sub
jmp
inc
xor
mov
mov
cltd
adc
ret
sbbb
mov
jb
mov
mov
loop
mov
push
add
scas
fstps
loopne
push
pop
lret
xchg
mov
out
xor
add
xchg
sbb
sbb
pop
sub
jle
pop
das
shlb
jmp
loope
dec
ficomps
jno
mov
dec
mov
aas
mov
ret
out
jbe
aam
push
or
lods
xchg
decb
push
cmpsb
add
outsb
pop
ja
sub
mov
and
mov
loopne
xor
movsl
jnp
dec
scas
pushf
ret
test
jo
xchg
or
xor
dec
push
fwait
mov
push
bound
lahf
sbbb
sbb
rclb
out
mov
daa
inc
shrl
cmp
mov
fdivrl
lret
cs
push
rcrl
xchg
adc
or
ret
push
fcomip
ret
mov
addr16
lds
iret
sub
xor
loopne
ljmp
shl
and
cmp
xor
pop
mov
mov
outsl
pop
fsubrl
pop
mov
and
fdivrs
pop
xchg
and
mov
sub
cmp
dec
ror
aas
xchg
and
xchg
cmpsl
outsb
add
mov
idivl
ljmp
pop
mov
mull
imul
fbld
cmp
push
xchg
pusha
enter
push
xlat
mov
ret
cmp
jb
xchg
fiadds
js
pop
inc
imull
adc
scas
mov
imul
js
push
jle
sbb
sahf
push
jbe
scas
divl
mov
rsm
loope
es
or
icebp
fidivs
mov
test
mov
popa
mov
jmp
sub
scas
jo
aad
inc
xchg
in
addb
inc
push
imul
jnp
fisubrl
jp
jl
lods
fsubr
jge
insb
rolb
jno
jns
fisubs
stos
andb
or
and
ffree
pop
inc
jl
jo
inc
inc
call
mov
inc
pop
xchg
aad
imul
lret
or
sbb
xor
mov
cmp
cmpl
xor
and
or
addr16
xchg
add
fidivl
inc
cmpsl
and
in
or
adc
cmp
xchg
mov
xlat
sub
xchg
xchg
in
inc
loop
mov
iret
adc
ret
pop
sar
cmp
fists
push
outsb
fcomps
dec
std
mov
mov
mov
pop
lahf
lds
arpl
sub
sbb
push
and
jp
dec
pop
xchg
mov
xchg
mov
sbb
mov
sub
testb
dec
or
clc
sub
inc
inc
lret
imul
ja
mov
mov
rcr
aaa
hlt
mov
bound
call
daa
mov
stos
repnz
stos
dec
repz
pop
jne
scas
xchg
in
repnz
mov
or
ret
pop
pop
lea
test
mov
mov
push
jnp
pop
aas
push
push
popa
enter
add
out
and
pop
loopne
dec
iret
sbb
jns
insl
push
pop
dec
mov
lahf
pop
imul
sub
aam
inc
xchg
fmuls
icebp
repnz
lret
push
fisubrl
cli
pop
xchg
test
loope
lret
aas
decb
int3
adc
insl
sub
inc
add
loopne
jle
push
jle
cwtl
xchg
jne
pop
popf
add
rcrb
in
push
fwait
out
into
sub
out
sbb
sbbl
xor
fldl
in
les
imul
cld
das
fwait
insl
dec
push
ljmp
sub
les
subb
mov
test
shlb
pop
outsl
add
inc
jo
xchg
xor
xchg
adc
or
and
mov
jnp
test
movsl
pop
inc
push
cmp
mov
cmp
mov
fiadds
push
mov
dec
nop
add
loopne
mov
xchg
aaa
mov
mov
mov
popa
mov
call
jmp
je
jmp
nop
mov
cmp
sbb
cmpl
repz
into
xchg
es
jno
ss
cmp
pop
cmpsl
ss
cmp
in
push
aas
xchg
sahf
mov
dec
mov
add
lret
addr16
sti
sbb
aaa
flds
daa
sbb
xor
lock
cld
aaa
js
and
pop
sub
fwait
cmp
inc
jae
sbb
add
or
movsb
popf
push
adc
fnstcw
mov
xchg
insl
and
mov
nop
cmp
add
mov
add
pop
jge
sbb
or
mov
jl
push
fiadds
ljmp
insb
cmp
es
jne
xlat
test
mov
cwtl
jo
ljmp
es
imul
rclb
mov
mov
sbbb
out
xchg
mov
jmp
dec
mov
fldcw
out
and
mov
jne
or
sbb
inc
sarb
ss
adc
scas
xor
push
inc
scas
xor
ljmp
sbb
dec
lods
xchg
lcall
xor
loopne
out
stos
xchg
push
lret
xor
cwtl
dec
mov
fdivs
mov
push
pop
pop
jne
mov
shrb
adc
jb
test
ficomps
pop
out
es
in
adc
mov
lret
testl
jmp
insb
adc
add
int
ja
outsb
stos
nop
lcall
lret
mov
pop
push
add
push
icebp
push
setb
out
mov
and
in
loope
dec
sub
jge
cli
scas
ffreep
inc
gs
insl
iret
ja
xchg
xor
push
xor
mov
shr
pop
loope
or
mov
push
pusha
js
xor
pop
pop
insb
adc
test
push
test
adc
scas
inc
and
pop
mov
xchg
mov
dec
pop
dec
in
fstpt
and
sub
pop
adcl
fcoml
cmp
sub
jge
fdivl
xor
hlt
nop
mov
les
xchg
stos
push
mov
cmp
xchg
inc
in
push
cmp
and
aas
je
cmpsb
iret
imul
outsl
mov
mov
ret
stos
push
in
sub
adc
fdivl
out
imul
subb
xchg
lahf
mov
jp
jg
xchg
fmull
jp
call
sbb
rorb
sarl
leave
fisttpll
push
push
mov
jmp
stos
inc
nop
mov
out
loope
je
int3
int
jnp
or
int
dec
mov
loopne
push
dec
mov
mov
lcall
outsl
enter
mov
cmp
mov
nop
sub
insl
sahf
std
shl
stos
adc
sub
adc
shlb
aas
cltd
sarl
dec
test
mov
jg
scas
mov
loopne
out
dec
repnz
shrl
scas
test
adc
insl
mov
cmpsb
pop
aam
mov
sub
mov
push
or
xchg
sbb
mov
outsl
xchg
xor
out
adc
sahf
loop
ds
std
aad
jg
pop
daa
adc
push
mull
add
shrb
pop
jbe
out
cmpsb
outsb
sbb
loopne
ror
shll
clc
fstpt
scas
test
push
inc
out
mov
jae
dec
lcall
xchg
adc
mov
bound
adc
xor
xchg
mov
movsb
movsb
xor
jl
movl
jmp
xchg
xchg
pusha
aad
mov
add
mov
sub
js
notb
pop
xor
dec
outsl
or
not
or
bound
insl
movsl
cmp
jb
xchg
test
jbe
lock
push
or
in
add
leave
mov
xor
sub
outsb
pop
mov
push
shll
push
jp
fnstsw
pop
sbb
mov
scas
xchg
es
insl
cmp
dec
inc
cmc
test
pop
push
repnz
mov
jecxz
and
and
stc
rcrb
ret
in
fmulp
cmp
inc
pop
mov
bound
xlat
fwait
loopne
push
icebp
and
rorb
jno
push
shll
cmp
jecxz
lcall
jge
add
sti
les
fildll
sahf
and
push
lcall
mov
mov
les
inc
fsubl
int3
adc
push
pusha
cltd
lahf
cmp
push
mov
cs
mov
or
sub
dec
fidivl
mov
shrl
js
es
mov
jge
scas
add
outsl
adc
jle
rol
enter
dec
fwait
std
push
xorb
mov
jge
mov
pusha
test
out
nop
sbb
ss
out
mov
push
jae
aas
xchg
ljmp
addr16
add
shlb
dec
xchg
sub
movsb
mov
addr16
mov
mov
pop
movsb
mov
loop
outsb
imul
imul
ljmp
add
ja
sbb
dec
popf
sbb
movsl
int3
sub
lds
sbb
sahf
frstor
inc
cmc
sub
push
aaa
adc
fs
aaa
repnz
popa
sub
or
popf
scas
push
inc
pop
movups
in
lods
xchg
inc
je
pop
jae
paddusb
sahf
pop
cwtl
int
cmp
fs
sub
pushf
xor
jmp
sbb
xchg
and
adc
xchg
and
dec
fildll
adc
jge
call
lods
and
xchg
push
xchg
sahf
lret
hlt
repnz
bound
pusha
xor
mov
addr16
fisubl
xor
loopne
js
popf
adc
stc
jo
jecxz
jge
mov
repz
cltd
jmp
mov
aad
or
repz
adc
in
das
cli
dec
adc
jmp
in
jl
xor
pushf
adc
in
jbe
push
mov
mov
outsl
sar
jbe
cwtl
mov
movsl
hlt
mov
iret
icebp
test
sbb
mov
xor
mov
pop
adc
pop
test
sarl
dec
insb
xchg
iret
icebp
and
in
das
mov
testl
lods
pop
mov
mov
aam
out
imul
jmp
lock
decl
inc
repnz
aam
mov
mov
or
stos
fistpl
sub
jbe
push
fstpt
pop
aaa
mov
mov
mov
stc
ret
rcrb
dec
mov
fsubr
or
adc
movb
fsubr
sbb
lcall
int
or
out
testb
fsts
das
test
adc
xchg
hlt
sub
cmp
aam
and
mov
andl
xchg
enter
mov
ljmp
in
dec
pop
repnz
xchg
cmpsb
dec
shrl
push
das
xor
and
popf
or
daa
mov
pop
js
add
js
and
pop
lcall
lock
mov
dec
bound
mov
mov
insl
inc
mov
sub
out
sub
xor
dec
cmpsl
or
inc
or
fcomi
popf
imul
mov
adc
mov
pusha
adc
sub
mov
cmpsb
jg
pop
lds
mov
mov
push
xchg
aaa
mov
sbb
xor
test
mov
mov
or
pop
jae
dec
or
sub
jbe
dec
les
sbb
icebp
aad
xor
mov
repz
cmp
xchg
cld
sbb
ss
xchg
or
xchg
scas
sbb
popf
ja
fcompl
loopne
inc
xorl
jmp
adc
ret
ret
std
and
jno
ficoms
or
imul
inc
fisttps
fists
in
daa
xchg
movsb
fdivrs
mov
pop
push
icebp
push
or
sub
xchg
and
subl
jnp
mov
cmp
std
rcr
mov
in
hlt
push
movsl
mov
push
cmpsl
and
rcrb
mov
mov
sbb
fisubrl
adc
push
adc
dec
mov
xchg
xchg
scas
in
xor
popf
pop
pop
adc
adc
jl
adc
int3
push
or
ljmp
adc
push
jmp
out
movsl
sti
shr
mov
shlb
out
sbb
mov
popa
jl
xlat
loop
pop
pushf
out
repz
jl
fcoml
adc
cmp
push
scas
sbbb
sub
js
push
jae
test
mov
fwait
lret
je
dec
push
andb
out
fldt
aam
dec
xlat
pop
push
test
pop
sub
mov
pop
or
or
lahf
jno
stc
jp
sahf
xchg
testl
ret
adc
jle
popf
mov
mulb
nop
fidivl
rcll
test
inc
mov
movsb
push
sub
lods
mov
mov
push
fdivrs
mov
negb
dec
enter
add
mov
cmc
jae
dec
jb
jb
decb
test
add
sbb
lock
jnp
sbb
mov
shl
mov
dec
mov
mov
lahf
stos
inc
stos
rol
lret
lods
sub
jmp
add
dec
pop
lods
les
xchg
das
push
lcall
test
adc
ret
pop
movl
cmpsb
cs
or
xchg
js
fistps
mov
imul
push
xchg
and
je
test
push
cli
mov
dec
jg
xchg
add
add
rcll
sub
adc
push
or
jno
dec
mov
lret
push
addl
xor
cmpsb
xor
push
enter
outsb
pop
stos
dec
mov
sub
repz
mov
lcall
out
loopne
daa
or
fcomip
rcrl
iret
add
test
xorl
xchg
repz
xchg
sahf
or
pop
jmp
repz
dec
sbb
loope
outsb
inc
or
hlt
xchg
inc
out
mov
mov
adc
xchg
mov
push
scas
inc
lret
arpl
xor
mov
lcall
lea
adc
lods
sbb
xlat
out
mov
test
and
xor
in
add
jge
imulb
rep
push
jae
loope
mov
shll
fstpt
jl
shll
pop
in
add
out
adc
outsl
bnd
sub
in
jo
scas
inc
mov
in
cltd
rcll
sub
cmp
adc
or
mov
pop
dec
and
pop
pop
iret
cmc
je
andl
sahf
sub
cmpsb
movsl
jge
mov
mov
pop
push
cmp
xchg
ljmp
cmpsl
daa
xor
xchg
fsub
lcall
or
pop
es
jmp
scas
xchg
xchg
pop
or
mov
fsubs
push
xlat
jb
repz
loopne
inc
std
adc
pop
mov
cmpb
xor
cld
pop
sub
adcb
mov
ljmp
add
jmp
mov
movsb
arpl
into
inc
sbb
xchg
xchg
sahf
mov
sub
or
mov
sub
stc
bound
icebp
push
inc
orb
push
inc
add
pop
fisubrs
adc
stos
shl
inc
rorb
mov
nop
fdivp
jno
insl
mov
inc
loop
inc
xor
xchg
sbb
lcall
mov
imul
cmp
push
repz
cmpsl
sub
pop
xor
in
xchg
stos
negb
in
mov
test
js
pop
pop
outsb
shr
jle
push
pop
push
lret
adc
pop
pop
mov
mov
lods
jg
inc
jp
bound
test
outsl
aaa
aam
dec
lret
push
js
aad
push
xor
hlt
lcall
sbb
ljmp
sbb
push
push
cli
fs
pop
andb
or
ss
pop
loopne
jle
xor
aam
imul
push
int3
lcall
pop
out
sub
mov
xchg
flds
ds
fildll
mov
pop
dec
xchg
test
mov
mov
jb
adc
and
and
inc
jmp
pop
pop
dec
mov
out
repnz
test
mov
daa
adc
sub
dec
lds
arpl
mov
cli
pop
cli
mov
and
cwtl
insl
insb
dec
cmp
out
mov
test
push
mov
add
and
fstpl
call
mov
and
lcall
ds
add
mov
dec
inc
push
aas
and
push
filds
movsl
mov
out
push
xchg
jmp
test
sub
fcmovnbe
sub
inc
loop
inc
inc
and
popf
fs
add
ljmp
mov
in
lret
add
bound
mov
dec
inc
ss
mov
shl
add
xchg
push
inc
test
push
je
xor
fisttpll
push
cmp
jae
sbb
cmp
inc
pop
in
cltd
mov
int
lahf
xor
inc
insl
fcoml
pop
int
and
aas
bound
mov
cmp
mov
in
lods
js
subb
adc
inc
push
xchg
cli
cmc
pusha
psubusw
or
pop
dec
mov
mov
fistl
or
pop
insl
outsl
push
sub
push
out
pop
inc
push
stc
lds
xlat
sub
or
out
push
sti
mov
lahf
or
stos
mov
cmp
scas
dec
call
sbb
pusha
lahf
pavgw
jecxz
pop
xor
sbb
mov
jne
cli
inc
add
jno
mov
inc
daa
xor
mov
mov
push
cmp
push
mov
loope
sub
clc
pusha
cmc
gs
dec
lods
hlt
jo
sarl
cmp
sti
aaa
cld
xor
sbb
adc
jp
mov
dec
stos
cmpsb
sub
lods
fwait
jae
or
add
iret
jne
xor
push
fimuls
mov
mov
ljmp
out
or
push
cmpsb
lock
lret
loopne
out
ds
in
ficomps
sbb
mov
dec
inc
push
xchg
es
popa
jo
repnz
add
rcl
xorl
dec
stos
je
aaa
jno
mov
xchg
cmp
ss
sub
mov
das
inc
or
dec
aaa
add
out
jge
sbb
xchg
mov
dec
mov
call
movl
push
push
xor
sbb
leave
jmp
pusha
jg
nop
or
ror
mov
int3
shlb
dec
addr16
mov
cwtl
or
cs
push
push
mov
nop
add
sub
add
sbb
popa
sarb
dec
push
ja
jle
je
test
lock
mov
mov
cwtl
xor
test
or
push
shlb
ds
lods
xchg
jae
push
scas
cmp
sbb
sbb
xchg
push
or
adc
mov
add
rcrb
leave
mov
out
dec
add
sahf
or
mov
mov
mov
aas
ja
push
inc
aam
mov
xchg
add
mov
shrb
xchg
and
idivb
mov
pop
xchg
adc
jecxz
cmp
pop
or
in
lahf
subl
in
lahf
sub
inc
inc
rcrl
pop
cs
jl,pn
jl
orb
push
aaa
notb
pushf
ds
mov
push
imul
loopne
sahf
nop
lea
mov
into
fisttpl
aad
xchg
sub
xchg
fbstp
mov
scas
in
cwtl
sti
mov
lock
lcall
and
movsb
test
ja
leave
mov
movsl
adc
sub
int
mov
sbb
aaa
cwtl
and
hlt
nop
imul
mov
popa
push
es
and
pop
sbb
adc
add
inc
sbb
jno
push
pop
and
cli
pop
divb
mov
xor
mov
in
jl
or
jge
push
cmp
aam
adc
add
int3
idivb
js
cmp
cld
mov
cmp
fcomps
and
daa
roll
sbb
and
loop
test
mov
enter
jl
in
cli
outsl
repz
push
ret
inc
pop
mov
push
cwtl
scas
cmp
movsb
dec
rcl
fdivrs
mov
inc
mov
adc
leave
imul
arpl
pop
mov
imul
mov
fwait
push
nop
mov
xchg
aaa
faddp
mov
add
loope
jnp
jp
repnz
adc
push
xchg
test
inc
shll
dec
lcall
shll
mov
fists
jne
repnz
mov
inc
cmp
cwtl
imul
xlat
and
out
mov
jb
gs
push
xor
rolb
test
data16
les
ja
push
gs
in
repnz
cmpsb
jmp
xchg
ja
repz
xchg
aad
cwtl
inc
fstp
push
cmp
ss
imul
push
jle
dec
mov
push
addr16
add
push
push
cmpsb
or
lret
insl
into
push
lods
out
inc
adcb
mov
mov
insb
jo
mov
xchg
dec
cmp
scas
pop
xchg
cmp
das
dec
scas
fildll
imul
xchg
jno
jne
fidivrl
scas
push
xchg
xor
or
arpl
out
stos
or
mov
test
fldcw
psubsw
lret
mov
mov
cs
mov
jb
xchg
imul
outsw
out
or
les
mov
ljmp
add
fsubl
pop
test
inc
xchg
sbb
test
push
inc
adc
in
loop
mov
iret
addb
pop
ret
cmp
femms
iret
dec
es
mov
ret
xchg
mov
outsb
add
bound
aas
icebp
imul
sbb
mov
xchg
in
lret
les
sarb
add
scas
and
pop
outsb
or
xor
les
enter
int
adc
ja
sahf
sub
test
cli
negb
push
cmp
adc
loopne
shrl
fiadds
int3
cmp
adc
cmpl
sahf
mov
cmpsb
cli
push
lahf
jmp
mov
shlb
sbb
sbb
inc
test
dec
adc
cmp
mov
xchg
xlat
mov
aas
into
cmp
bswap
and
ret
cmpsb
les
mov
das
xor
pop
cmpsl
adc
or
loopne
hlt
sub
inc
aad
mov
outsl
mov
outsb
repz
adc
adc
test
jl
pop
enter
fbld
ljmp
mov
mov
and
jb
fcompl
cmp
mov
jmp
xlat
les
subl
ret
xor
inc
out
test
mov
sbb
outsb
push
mov
js
mov
xor
sbb
and
addr16
in
lods
ja
jmp
imul
loope
xchg
pop
stos
and
pop
out
repz
jns
cmpsl
mov
ret
or
in
mov
fidivl
pusha
fdivrp
xor
mov
jle
enter
mov
xchg
mov
xor
mov
imul
cmp
dec
sahf
dec
inc
pop
stos
jnp
idivl
lret
inc
sub
adc
scas
mov
mov
lcall
outsb
lret
fcmovnb
dec
mov
xor
and
mov
cs
insl
pushf
ds
mov
sbb
std
leave
add
xor
addl
into
sbb
mov
cmc
out
xorb
mov
lods
addr16
jb
xor
jns
adc
iret
inc
adc
in
lods
mov
inc
in
dec
rcrl
adcb
fwait
popf
and
sub
jae
mov
and
mov
ja
fsubr
or
ss
sbb
sar
push
out
xor
and
lret
loope
sbb
mov
mov
aas
out
inc
and
insl
sub
jb
adc
fwait
aas
push
cltd
ret
dec
loop
cs
dec
cmp
adc
iret
add
dec
sarl
mov
fs
sti
or
mov
adc
scas
orb
pop
push
cmp
lock
rcl
cmp
jb
orps
out
sbbl
into
inc
lds
cltd
lock
xchg
push
ja
sahf
jo
mov
dec
pusha
pusha
icebp
mov
bound
cmpsl
cli
lahf
xchg
pop
adc
adcl
push
repz
jmp
into
dec
jae
test
ss
add
sub
mov
dec
sub
push
xchg
jle
in
ss
sub
cmp
cs
scas
arpl
inc
shll
aaa
mov
in
sbb
je
gs
mov
inc
sbbb
jo
or
cmp
add
stos
sbb
inc
subb
dec
jnp,pn
and
xchg
xchg
inc
test
hlt
mov
loopne
xchg
pop
or
icebp
arpl
mov
mov
mov
mov
sbb
push
push
adc
nop
pop
jbe
sub
dec
sub
add
sbb
adc
je
iret
out
mov
and
test
dec
push
or
mov
sbb
push
mov
adc
and
lcall
int
jmp
inc
mov
les
inc
cs
ficompl
test
int
scas
in
push
mov
sbb
arpl
push
cltd
loope
sbb
daa
mov
test
mov
push
sbb
lahf
cmpsb
mov
gs
add
and
adc
xorb
mov
dec
nop
add
jns
fsqrt
rcl
inc
pop
cmp
lret
mov
cmp
daa
jae
add
xor
shrl
cmp
and
jmp
outsb
scas
pop
or
ds
fistps
rolw
inc
mov
add
dec
jge
sub
fcomps
test
rorb
mov
jge
mov
push
je
inc
popf
and
cmp
and
add
xchg
call
dec
incb
rorb
addb
jnp
pop
addl
bound
ja
imul
inc
aam
leave
cwtl
ret
mov
adc
test
pop
pop
movntps
nop
adc
clc
jns
xchg
sbb
mov
pop
push
testb
inc
repnz
mov
out
imul
js
icebp
es
sahf
pop
es
movsb
xchg
std
dec
lcall
sarl
or
jle
dec
addr16
or
dec
inc
test
mov
repnz
xchg
dec
push
push
je
mov
hlt
insl
mov
sarb
stos
fwait
and
cld
je
push
or
xor
adc
fs
inc
rcrl
dec
xchg
repz
sbb
jnp
adc
or
test
aas
lret
adc
mov
adc
sub
jae
icebp
js
call
xor
add
clc
aas
pop
bound
repnz
fs
in
mull
dec
lods
inc
popf
shl
out
sub
pop
lea
leave
add
mov
xor
sbb
ret
mov
movb
mov
push
mov
xchg
lea
movsb
adc
mov
mov
pop
inc
adc
mov
je
pushf
pop
inc
dec
out
cmp
nop
push
lock
enter
xor
xor
iret
push
pop
stos
out
ror
lea
add
push
xor
mov
cmp
cmp
and
stc
adc
fwait
mov
popa
shrb
mov
lea
adc
stos
out
push
lds
xor
jns
mov
xchg
bound
jg
int
insb
add
pop
pop
icebp
adc
xor
mov
mov
mov
test
mov
and
popf
pop
mov
mov
cmp
dec
testl
out
popf
mov
mov
sti
and
mov
mov
push
cmp
cmc
push
inc
adc
add
push
mov
jge
das
inc
or
inc
stos
iret
ret
repz
call
and
scas
add
mov
ss
push
fs
rcl
sti
shlb
lahf
push
imul
xchg
shlb
and
or
lods
in
pop
scas
aas
or
xchg
push
das
jno
xchg
imul
jl
pop
mov
mov
adc
movsl
inc
or
addl
mov
fstps
adc
sahf
push
loopne
out
clc
aam
push
cld
enter
jp
xchg
ss
loop
xlat
insb
nop
dec
movsl
jbe
mov
pop
movsb
sahf
jns,pt
lock
mov
sub
out
and
jl
jae
sbb
xorl
adc
mov
je
jl
mov
je
mov
xchg
xchg
push
jnp
xchg
jle
mov
fidivl
fcompl
bound
jb
lcall
sahf
cmc
and
repnz
cwtl
stc
cmp
pop
mov
pushf
xor
pusha
xchg
int3
scas
mov
cli
adc
jno
dec
adc
jns
imul
lods
gs
shl
pop
inc
mov
dec
iret
aam
mov
arpl
pop
inc
leave
push
cwtl
inc
cs
cmp
xor
pop
jle
mov
lods
aad
jo
pop
jno
cmp
scas
ljmp
push
aad
push
mov
mov
movsb
nop
and
popa
pop
pop
pop
jno
sbbb
and
dec
aas
push
jle
pop
mov
adc
jnp
and
adcl
jl
pop
jo
cmpsb
sbb
inc
pop
and
popa
xlat
add
ds
jmp
or
fistps
inc
daa
or
jp
jae
in
and
dec
cmp
sub
stc
pop
lea
imul
test
rolb
and
idiv
int3
loop
inc
cltd
fucom
sub
fwait
and
jecxz
or
adc
shlb
inc
ljmp
test
fwait
repz
cmp
push
repz
lods
int3
sbb
mov
out
pop
jg
sbb
testl
xchg
mov
inc
sarl
les
mov
xchg
addr16
fbld
mov
push
xor
cmp
in
daa
imul
in
ret
test
arpl
mov
jbe
lahf
clc
je
adc
das
sub
rcr
pop
aaa
out
insl
icebp
mov
sub
imul
add
mov
imul
shrb
inc
xchg
stos
lcall
adc
sbb
xor
dec
rcrb
push
enter
ljmp
data16
jnp
int
and
imul
push
add
aaa
jl
fnstcw
jnp
das
call
dec
outsb
add
push
pop
add
imul
jno
imul
cmp
scas
ja
cmpl
pop
inc
jo
jne
and
bound
mov
mov
cmp
adc
fs
jnp
jle
push
sbbl
lock
gs
and
cwtl
sbb
insb
adc
and
iret
sbb
das
fwait
int3
iret
rcll
hlt
mov
xchg
test
and
lods
mov
jo
xchg
loop
notl
iret
outsb
inc
jo
scas
cwtl
mov
push
cltd
mov
orl
out
mov
inc
push
cmp
lods
jg
mov
fcmovbe
mov
push
pop
stos
int3
mov
push
mov
rcl
in
mov
test
insl
pop
dec
push
ss
cmc
jo
push
test
ret
xor
or
repnz
loopne
add
jo
outsb
jb
insl
cld
in
push
lahf
xor
call
or
pop
aaa
shlb
push
cltd
push
pusha
sub
xchg
inc
mov
pop
loopne
xlat
pop
adc
pop
push
cmc
push
aaa
add
and
int3
cmp
push
out
push
inc
hlt
imul
ficomps
xchg
fstl
and
sub
or
mov
gs
dec
mov
das
daa
add
aad
pop
mov
lods
or
mov
jne
fiadds
cli
loopne
adc
lods
daa
fildll
insb
insb
xchg
adc
and
test
jge
aad
xchg
add
sbb
inc
add
and
aad
int3
iret
int
push
shll
jl
aad
and
test
clc
mov
mov
js
in
pop
lods
in
loopne
in
xchg
sub
in
dec
mov
sbb
stos
sbb
leave
jno
std
xor
and
addr16
push
mov
add
add
inc
push
out
cmpsl
scas
loopne
cmc
push
in
adc
lock
push
out
bound
dec
int
fldenv
and
test
sub
icebp
xchg
mov
test
scas
lods
dec
mov
mov
pop
les
xchg
out
loop
and
int
out
pop
or
negl
pop
sub
sbb
gs
jbe
adc
fsubs
xchg
loop
aaa
mov
mov
fstps
mov
or
stos
mov
stos
aaa
repz
insl
imul
mov
int3
push
jl
adc
and
loop
repnz
in
cld
ffree
sub
orl
pop
imul
jge
mov
fs
enter
mov
jmp
test
xchg
loopne
pop
jp,pn
stos
das
lods
mov
incb
dec
adc
mov
pop
jg
fcom
enter
adc
add
mov
push
adc
jae
dec
lods
scas
cmp
out
jg
push
and
xchg
adcb
aaa
and
stos
xorl
dec
mov
dec
and
scas
mov
cmp
mov
loope
fcoms
mov
and
jg
push
sbb
out
es
mov
mov
insl
pop
lahf
mov
fwait
stos
negl
aaa
js
xchg
int
xor
push
xchg
insl
dec
pop
out
les
push
add
rcl
add
mov
or
jle
dec
xor
jecxz
inc
sbb
xor
mov
pop
mov
and
push
sbb
pop
and
out
adc
nop
popf
xchg
sub
cltd
mov
lcall
iret
push
lds
sbb
sbb
mov
cmp
jne
stc
inc
fwait
call
addl
repz
mov
adc
inc
pop
xor
dec
push
pop
cmpsl
bound
sub
inc
dec
jmp
cmp
popf
cld
jp
and
addr16
es
cwtl
jp
es
cmp
jle
mov
stc
stos
or
sbb
ret
inc
movsb
pop
and
pop
nop
pop
in
stos
repnz
dec
push
mov
xchg
cmpsl
xchg
stos
cmp
or
cmpsl
pop
inc
mov
fbld
scas
push
rorl
out
jne
pushf
mov
loope
repz
jg
add
cmc
jp
inc
pop
test
sbb
mov
test
add
adcb
decb
pusha
aas
insl
rclb
jl
pop
dec
lods
mov
cmp
shll
adc
sub
mov
or
jb
daa
push
mov
mov
pop
stos
push
push
scas
pop
inc
out
sub
lcall
push
mov
and
inc
or
mov
arpl
or
sarb
leave
sub
fimuls
aam
aad
xorb
insb
ss
dec
pop
inc
sahf
mov
out
mov
or
ret
test
imul
mov
inc
mov
xlat
sahf
xlat
jge
fisttps
push
mov
lret
jge
push
out
xchg
enter
inc
insl
sbb
sahf
push
mov
adc
mov
in
stos
dec
sti
bound
jmp
aad
push
addr16
inc
mov
or
mulb
cmc
pop
push
jmp
add
xor
xchg
hlt
jl
mov
fildl
fidivrs
adc
pop
add
movsl
cmp
orl
xchg
adc
adc
dec
in
mov
jno
xchg
enter
dec
pusha
push
mov
cmpsl
jmp
or
mov
decl
imul
add
stos
sti
jl
rcrl
mov
jne
pop
incb
mov
push
jnp
mov
xlat
dec
les
loop
xor
ret
xor
push
mov
mov
mov
adc
je
clc
push
iret
lret
in
shrl
push
aaa
add
mov
rcrb
xor
clc
mov
sbbl
fbld
mov
movsl
cmp
jmp
xor
in
ficoml
das
loop
fistps
lcall
in
scas
out
xor
movsb
cs
xlat
push
fcmovbe
pop
sbb
push
inc
mov
push
sub
sbb
ds
ljmp
and
jge
cmp
push
inc
imulb
inc
jle
out
cmpb
ret
fisubl
loope
pop
dec
shrb
test
aad
shll
push
dec
ds
sbbl
imul
inc
jns
fcos
jb
inc
xor
sbb
xchg
icebp
lds
std
aas
mov
std
jno
data16
stos
insb
sar
push
inc
rcl
aad
sbb
icebp
cli
cltd
dec
dec
in
sahf
cmp
mov
faddl
or
add
lfs
xchg
outsb
sub
out
and
int3
mov
out
and
shl
dec
add
fdivl
inc
arpl
push
stc
test
push
in
cld
je
mov
fcoms
fcmovnbe
int
data16
add
push
jp
xlat
mov
and
leave
orb
std
mov
mov
iret
vmaxss
out
push
jnp
lcall
test
stos
cmpsb
and
sbb
add
sub
adc
mov
cmp
and
test
xchg
xchg
inc
sbbl
in
test
mov
mov
rorb
and
xchg
xchg
addr16
js
push
jo
or
push
xchg
xchg
subb
inc
lods
ja
adc
bsf
add
pushf
out
subl
add
jl
sti
xor
popa
lret
xor
push
mov
xchg
repz
mov
pop
sbb
aad
xchg
jle
data16
add
or
jb
cmp
aad
iret
or
inc
xchg
inc
fsubrs
in
idiv
in
fdiv
dec
xchg
rcrb
lock
xor
adc
cmp
push
scas
mov
sub
push
push
dec
sbb
push
jmp
cs
mov
les
test
ja
je
inc
rcrl
subl
push
cmp
stc
ds
pop
cld
rcr
aam
sub
lods
ljmp
xchg
add
pop
icebp
adc
icebp
sub
mov
xlat
dec
in
int3
lcall
mov
push
lock
sbb
fnstenv
jle
cmp
mov
adc
imul
leave
adc
into
push
shrl
js
ds
out
test
adc
in
shlb
mov
jne
add
push
jecxz
nop
cs
or
fisubrl
push
mov
repnz
or
add
incb
dec
fadd
and
insb
cmpsl
aam
cmp
ret
aas
ret
jnp
mov
mov
sub
jbe
adc
lods
mov
mov
repnz
stc
xchg
xlat
mov
test
cmp
sbb
pop
adc
mov
mov
imul
call
mov
jg
inc
pushf
push
lds
lcall
in
xchg
fincstp
aaa
push
add
mov
jmp
jg
lea
mov
or
jge
arpl
lret
gs
sub
push
and
pop
iret
xor
repz
mov
mov
out
leave
bound
pop
xor
imul
dec
cmpsb
jmp
pop
outsb
mov
popa
mov
and
mov
iret
cs
loopne
test
or
mov
lock
or
jg
or
insl
xchg
out
enter
mov
mov
loop
sub
adc
ret
mov
xor
jecxz
mov
test
or
lahf
jecxz
stos
mov
jg
xorl
divl
arpl
and
xchg
lock
jmp
xchg
lret
addl
mov
in
pop
jl
or
mov
mov
pop
test
and
scas
hlt
popa
mul
mov
and
xchg
aas
push
hlt
jg
out
loop
rorl
inc
dec
rol
mov
mov
fs
cwtl
jb
leave
in
pop
insl
fwait
sbb
shrl
push
aam
lret
in
rolb
pop
popf
ror
sahf
and
xchg
xchg
clc
aad
pusha
dec
add
roll
dec
mov
xchg
sub
push
test
sub
push
cli
sbb
jo
adc
mov
aam
sub
sub
and
mov
push
jg
adc
loop
dec
mov
mov
shrb
lret
mov
insl
pause
jno
inc
pop
lret
popa
fidivl
loop
adc
ja
push
out
int
ret
stc
mov
js
cmp
movsb
xor
icebp
arpl
pop
sahf
sti
add
and
mov
mov
mov
or
xor
pop
pop
sbbl
aad
add
into
int3
jmp
adc
outsb
xchg
gs
mov
lock
pop
push
ss
cmp
push
jmp
jae
jns
dec
inc
outsb
mov
stos
addb
scas
hlt
and
int
jnp
pop
jne
test
xchg
adc
mov
push
cmp
loopne
aad
divl
sbb
cmp
sbb
mov
pusha
or
pushf
xchg
mov
sub
dec
call
mov
aas
ss
mov
aad
mov
stos
loope
add
jae
jo
cmp
adc
insb
andb
pop
or
xor
push
mov
rclb
or
jg
xor
cmpb
in
pop
aam
adc
stos
rcr
in
int3
push
pop
test
push
sub
out
push
test
push
icebp
or
bnd
call
jmp
aas
in
pop
cmp
jp
testl
jb
flds
sub
movsb
mov
shl
xor
pop
add
jnp
leave
fidivl
stc
std
mov
ret
iret
repz
sub
jno
or
loopne
ljmp
ret
jb
addl
push
adc
repnz
sub
test
cmpsb
dec
mov
hlt
pop
loope
cmc
fwait
add
push
pop
orl
jno
xchg
and
adc
out
inc
xchg
dec
stos
xchg
fildll
lahf
popf
sbb
stos
sbb
mov
call
add
push
add
test
test
imul
push
repz
ret
push
pusha
mov
xchg
or
jecxz
test
cmp
jbe
out
pop
or
scas
add
and
mov
fs
jmp
xlat
ret
mov
scas
lret
mov
cmp
add
inc
loop
mov
xchg
mov
fcomps
lods
shlb
add
repnz
push
cmp
loopne
xor
sbb
loope
bound
adc
pop
into
pushf
push
out
and
xchg
lret
orl
bound
imul
popl
sarb
mov
jle
or
sub
test
sbb
adc
push
sbb
jne
aad
mov
fisttpll
scas
sahf
ffree
dec
push
jae
jno
inc
pop
mov
mov
mov
enter
xor
pop
lods
inc
sti
xor
push
and
js
jle
imul
add
popa
push
aas
mov
and
mov
dec
gs
pushf
insb
popa
cltd
movsb
jg
dec
divl
mov
loop
jg
ds
pusha
fucom
outsl
repnz
sahf
mov
or
xor
xor
int3
daa
enter
pop
adc
sub
pop
sbb
call
call
add
pop
out
jno
aad
dec
xor
hlt
push
lods
lret
sub
mov
cwtl
xchg
or
in
iret
lea
pop
cmp
sti
push
inc
mov
mov
jno
dec
lahf
cmp
call
outsw
inc
push
jo
mov
cmc
jbe
pop
iret
stc
test
xchg
lea
and
aad
sbb
mov
dec
loop
out
mov
nop
outsl
fbld
pop
repz
xor
add
mov
mov
add
xor
mov
les
push
nop
insb
pop
xor
imul
lret
pop
inc
mov
fbstp
add
je
sbb
adc
mov
call
mov
mov
cmc
pop
dec
loope
dec
test
xorb
test
add
filds
andb
call
sahf
ljmp
adc
or
inc
loop
inc
movsb
out
sbb
xchg
repnz
imul
sub
cmc
cmp
xor
subb
jae
in
or
ja
push
add
xor
fstpl
fisubrs
xorb
data16
adc
push
pop
lret
fbstp
out
outsl
dec
jbe
xchg
ljmp
mov
stos
inc
inc
add
and
jno
mov
xchg
mov
mov
neg
test
ljmp
cli
and
push
mov
es
push
scas
mov
cltd
cmp
leave
jge
mov
popf
xchg
rcrl
sbb
dec
mov
in
ljmp
cmpb
xor
fs
jbe
imul
imul
mov
call
sbb
out
daa
imull
pop
cltd
push
fnstcw
jns
std
mov
sub
cmp
pop
jae
push
outsb
out
pop
popa
push
inc
pop
enter
jl
jns
cmc
movsb
clc
push
add
cli
lock
aad
adc
jle
xchg
mov
es
add
fucomip
into
push
mov
fcoml
adc
xor
jle
test
pop
or
decl
pop
enter
mov
shl
scas
or
into
idivb
fldcw
mov
inc
cmp
lret
inc
sarb
jb
lods
ret
add
enter
mov
jmp
shll
push
xor
in
xor
loopne
add
add
mov
add
adc
sti
cltd
ret
fnstcw
mov
daa
mov
fimuls
stos
cmp
push
mov
pop
in
cmp
pop
push
mull
lods
mov
add
adc
pusha
fs
push
xor
or
xchg
lret
pop
mov
xor
movsl
nop
shll
jg
xchg
scas
pop
pushl
aam
test
cmpsl
inc
mov
fdivs
loop
mov
xbegin
add
inc
xor
rorl
aad
lea
lds
jns
imul
movl
std
cmpsb
test
gs
loope
rcl
push
and
loope
xchg
pushf
les
adc
mov
outsl
movsl
and
ja
pop
xlat
scas
js
add
mov
pop
cld
xchg
jne
add
jp
loope
gs
cmp
xchg
dec
mov
aad
rorb
xor
inc
jo
push
push
cmc
jge
sti
out
aam
int3
lcall
dec
mov
cmp
insb
and
sbb
mov
clc
pop
adc
lcall
jbe
hlt
add
lahf
lea
xlat
outsl
enter
pop
or
test
push
xchg
sub
es
adc
aaa
lds
or
push
pop
loope
or
icebp
mov
fs
sbb
sbb
ljmp
sti
insb
test
adc
addr16
imul
lcall
fistps
stos
aas
dec
lcall
pop
fisubrs
sub
mov
in
ficoms
stos
xor
sbb
and
jb
fisttpll
inc
pop
mov
xorb
pusha
or
rcl
lret
je
dec
jmp
fnstsw
mov
xor
outsb
jecxz
add
sbb
inc
ret
cmp
xor
jnp
fnsave
loopne
xor
cmpsb
ret
sbb
add
sub
test
pop
or
movsb
dec
cmpsb
jno
mov
fldt
adc
sbb
les
adc
sub
fsts
divl
xchg
popa
in
add
and
jge
rcr
aaa
repnz
push
arpl
pop
cwtl
das
sarl
jo
xchg
es
hlt
ds
out
or
out
lcall
mov
xchg
sub
repnz
push
mov
cmc
rcll
in
mov
pusha
adc
ret
pop
int
daa
jmp
ror
ja
jbe
gs
fdivs
pop
jbe
cwtl
add
sbb
pop
cltd
mov
pop
test
iret
pop
cmp
cwtl
inc
sub
imul
sub
bnd
lcall
cmp
insb
pop
pop
mov
loopne
or
stc
clc
inc
or
sbb
stos
and
inc
xor
pop
repz
inc
pop
popa
adc
pop
add
sbb
scas
repz
jmp
mov
pop
adc
sar
inc
outsl
xor
push
aas
mov
and
or
int
icebp
cld
cli
add
mov
lock
add
loop
xchg
jg
adc
mov
pushf
fs
ss
je
mov
leave
jecxz
jno
rclb
cmp
pop
scas
pushf
pop
fists
jmp
push
sub
repnz
ret
inc
xchg
popf
cmp
mov
mov
mov
dec
xchg
lods
mov
jo
pop
data16
mov
mov
mov
add
xchg
or
sub
cwtl
and
sub
fsubl
or
mov
or
sbb
cltd
mov
pmaddwd
das
jns
in
cmc
lea
lods
sbb
cmp
sub
in
popa
outsl
push
push
jmp
lea
pusha
jecxz
jp
push
push
sbb
jbe
arpl
adc
popa
fists
ret
xor
shlb
insb
mov
mov
xchg
lcall
aas
dec
loopne
push
push
jecxz
fsubp
mov
lock
cmpb
gs
mov
fsubrl
lock
jge
mov
push
jl
imul
shlb
inc
inc
sub
rorl
adc
jo
out
pop
xchg
jg
mov
outsl
cmp
push
jnp
ss
pop
mov
aam
fsts
lds
stos
insl
and
push
fildl
insb
lahf
pause
cs
testb
adc
hlt
in
and
cmc
repz
pop
filds
rol
lods
pop
push
push
scas
daa
push
pop
jp
mov
mov
rclb
lahf
cmp
jecxz
cmp
or
out
ljmp
ret
imul
push
xor
jnp
stos
mov
mov
outsb
pop
stos
test
jge
cli
icebp
aad
xchg
fdivl
movsl
xor
pop
jmp
xchg
mov
gs
nop
add
add
pop
loop
lret
mov
sbb
out
cs
push
dec
notl
mov
push
jnp
std
outsb
outsb
xchg
idiv
adc
mov
lea
xchg
fnstenv
sbb
iret
sbb
into
std
inc
pop
out
lods
cltd
ret
popa
add
cmp
mov
push
xchg
std
sub
mov
or
push
adc
fmull
out
inc
mov
sbb
cmpb
fstpl
outsb
ret
sahf
cmp
testl
out
sbb
fsubs
mov
lahf
inc
cs
scas
cs
push
addr16
aam
xchg
cmpsb
lret
sbb
dec
xor
popf
xor
inc
iret
out
mov
outsb
fstps
xchg
sbb
adcl
or
stc
add
cmpsb
add
mov
mov
adcl
imul
adc
and
push
popa
push
repnz
stc
inc
jge
cmp
addb
lock
pushf
xor
inc
lods
mov
push
imul
and
mov
int
in
jnp
pop
gs
dec
negb
aam
push
pop
fs
cwtl
ds
xchg
dec
fiaddl
push
push
das
and
add
push
mov
mov
les
outsl
popf
in
or
lcall
sub
enter
pusha
inc
adc
mov
mul
mov
loope
or
sbb
or
xchg
movl
shlb
adc
repnz
pop
ds
out
adc
mov
cmc
jb
fcoms
cmp
and
sar
ss
sbb
hlt
repz
sti
ret
xlat
mov
or
fwait
clc
adc
push
es
icebp
or
jne
aas
rcrb
sbb
cmp
sti
and
gs
cmp
inc
sub
push
incl
jns
adc
adc
sub
dec
sahf
sbb
jnp
adc
lea
pop
add
adcb
test
orl
cwtl
mov
inc
bound
stos
shr
mov
and
test
sti
mov
lods
enter
sbb
adc
jns
int3
xor
dec
sbb
ror
js
subl
sbb
sti
cmpsb
jle
xchg
movsl
sub
jb
iret
mov
stos
xor
andl
adc
pop
sub
xchg
sbb
or
ficompl
mov
push
push
sub
insl
or
or
pop
ss
jno
sar
or
insl
jno
pop
dec
pop
sub
mov
mov
fcmovnbe
repnz
sbb
fisttpl
push
enter
test
lret
jg
cmp
lock
insl
in
das
out
setge
fbstp
or
movsb
bnd
mov
dec
mov
dec
pusha
inc
jo
in
inc
jg
xor
push
popa
sub
xchg
inc
push
leave
lretw
sbb
push
add
mov
test
sbb
lds
push
decb
push
mov
pop
xchg
scas
int3
rcrb
outsb
mov
mov
outsl
dec
incb
ficoms
cmp
popa
jne
shlb
mov
xchg
cli
cmp
hlt
xchg
fsts
mov
jecxz
lds
pop
or
in
push
test
xor
and
push
adc
jnp
imul
jbe
fs
inc
lods
jecxz
push
mov
out
and
pop
mov
je
mov
fwait
sbb
scas
cwtl
movl
shll
sub
dec
mov
cmp
cmp
les
add
idiv
int3
pop
push
ror
aad
xchg
fcoml
out
sti
mov
and
mov
cmpsl
outsb
pushf
ror
daa
mov
push
leave
push
xchg
repz
negl
pop
stos
into
ret
lcall
ret
pop
cmc
fcmove
shlb
stc
jae
ds
xchg
lret
cltd
int
lds
mov
int3
rcl
fs
xchg
xchg
cmpsl
lahf
jns
push
sar
adc
rcl
cs
es
mov
xchg
jb
inc
ds
push
cmp
mov
stos
es
movsl
jae
add
sub
cmpsb
ljmp
sbb
add
adc
or
mov
and
ds
or
cli
xchg
mov
ret
mov
sbb
mov
popa
cmp
xchg
mov
aaa
or
std
in
stos
sbb
xchg
es
insb
addb
dec
pop
xor
aam
stos
call
dec
jbe
xchg
sub
jecxz
xchg
popa
jle
pop
inc
cld
lods
cmpsl
cli
add
xchg
pop
fnsave
jae
jmp
and
add
stos
and
int
pop
and
push
lcall
mov
xor
in
sar
cmp
xchg
sbb
ljmp
mov
cmp
test
cmp
or
xor
sub
rolb
lods
inc
sbb
and
cmp
sbb
inc
ss
xchg
cmp
cmp
adc
std
or
dec
outsl
aaa
scas
dec
enter
mov
xchg
call
lds
out
jne
cltd
aaa
shlb
roll
in
mov
cmp
inc
movsb
test
ljmp
lods
das
mov
or
popf
mov
jp
and
xchg
pop
cltd
dec
xchg
sub
out
or
repnz
sub
pop
xlat
in
lcall
das
repnz
loop
fidivs
iret
rolb
dec
adc
lcall
cli
insb
ja
jbe
outsb
pop
inc
ret
das
add
in
or
xacquire
into
or
mov
pop
lret
cmp
mul
mov
ljmp
jmp
mov
pop
pop
adc
mov
sbb
sub
clc
insl
in
add
cmpxchg
pop
subl
dec
mov
or
dec
bound
lret
cmp
loopne
mov
shr
add
inc
mov
je
or
fidivl
mov
addb
int
push
or
imul
pop
pop
sbb
inc
push
ret
or
mov
leave
add
imul
imul
icebp
mov
fs
or
ds
mov
xchg
xchg
jmp
xor
push
cmp
mov
adc
xchg
xor
xlat
add
xor
int3
aad
cli
cld
and
dec
inc
leave
add
xchg
push
mov
fsts
outsb
fisttpl
jb
push
pop
adc
imul
fnstcw
pop
mov
into
xor
cwtl
dec
mov
adc
pop
mov
jb
xlat
stos
loope
adc
push
mov
xor
adc
xchg
ss
fisubs
cmp
and
sbb
cmp
in
sti
lods
lret
cmp
inc
pop
jp
std
lcall
adc
pop
pop
xchg
mov
pop
xchg
sbb
movsl
in
mov
into
push
xchg
ret
ret
inc
sbb
pop
adc
jmp
lahf
stos
push
dec
pop
lods
sbb
mov
xchg
iret
or
pop
jae
es
pop
repnz
pop
or
aas
int3
out
test
sub
cmp
std
ret
xchg
call
aaa
xchg
test
xchg
mov
dec
subl
fs
mov
ret
outsl
enter
test
mov
dec
adc
xor
and
sti
xor
mov
stos
rcrl
cmpsb
dec
or
inc
mov
mov
or
rcrb
out
xchg
pop
subb
push
add
mov
or
fsubs
negb
pushf
cmpsl
sub
push
dec
dec
aas
maskmovq
testl
push
jno
push
mov
lods
or
adc
push
lahf
gs
lcall
cmpsl
out
movsl
sahf
pop
out
das
jmp
clc
popa
pop
push
add
sbb
xchg
clc
cmp
insb
mov
inc
xchg
inc
push
or
inc
dec
popf
pop
pop
testb
push
in
adc
pop
data16
sub
lret
fs
enter
push
cmp
or
fwait
stc
and
movsb
jb
pop
mov
ljmp
xor
mov
fcomi
dec
inc
adc
add
jnp
pop
dec
xchg
stos
movsb
mov
fwait
dec
sbbb
adc
jb
sub
sbb
cmc
loope
ror
adc
xor
jl
push
xchg
push
xchg
ret
stc
clc
enter
outsb
mov
push
sti
insb
sub
jo
out
jecxz
push
xor
cmp
push
stos
in
dec
sub
pushf
push
or
testb
fwait
in
test
pop
jle
push
xchg
jo
dec
sub
mov
jmp
aas
pushf
inc
inc
lods
push
repz
dec
add
inc
insl
lods
xchg
hlt
jne
dec
adc
sti
addr16
not
inc
mov
leave
jae
mov
cltd
and
jmp
pop
xchg
adc
rolb
inc
mov
jbe
clc
cli
fnstcw
aad
out
addr16
mov
mov
hlt
das
lea
push
push
push
jb
push
inc
jbe
test
mov
rcrl
pushf
icebp
cmpl
or
or
cmpsb
dec
or
add
aaa
adc
jmp
xchg
push
loopne
test
test
push
aam
scas
scas
pop
fisttps
imul
xor
jnp
add
les
xor
pop
mov
xor
mov
pop
in
gs
sti
scas
out
mov
gs
call
mov
mov
ret
and
inc
push
push
int3
sub
scas
xchg
fs
adc
sbb
fistl
ror
jo
mov
push
aaa
mov
mov
js
lods
pop
xchg
movsb
mov
and
mov
mov
mov
int
cmp
ja
insl
mov
es
idivl
push
pop
adc
sub
and
fisubs
dec
ljmp
and
shlb
inc
sbbb
adc
sub
enter
and
sub
les
ret
push
rcr
push
in
cltd
rcr
fsubl
in
sub
in
data16
push
not
mov
push
fcom
imul
mov
leave
xor
mov
jo
xor
xchg
jge
movsl
xchg
sbb
push
lds
cmp
xor
imul
das
out
or
fwait
icebp
gs
sub
or
push
mov
or
lea
in
sub
jb
mov
cmpsb
mov
scas
jecxz
out
cld
mov
xchg
les
pop
xchg
addl
and
sbb
add
jo
shll
jg
rorb
jns
in
add
or
adc
sub
inc
inc
idivl
xor
lods
into
pop
cltd
add
pop
mov
ret
or
jmp
pusha
popl
dec
aas
inc
psrad
mov
inc
jae
dec
xchg
lcall
adc
lock
es
in
xchg
pusha
xor
nop
sbbl
hlt
pop
orl
lock
stc
dec
rorb
popa
push
sbb
inc
xor
incl
btcl
xor
fcoms
in
jb
cli
xrelease
faddl
dec
ss
adc
ljmp
pusha
outsl
sub
pop
xchg
mov
jg
popf
in
out
mov
roll
in
pop
jo
add
rcrl
lods
cmc
pop
push
cmp
push
push
sbb
arpl
stc
push
inc
icebp
je
aad
dec
sub
xchg
jne
pop
sbb
inc
mov
in
xor
and
or
mov
jb
and
call
test
lret
mov
mov
hlt
inc
fs
fsubl
jmp
ss
cwtl
add
jae
add
lcall
sbb
pop
cmp
loopne
in
lods
mov
repnz
bound
aaa
test
fnstsw
inc
mov
fwait
xchg
lret
mov
fsubrs
test
cli
pop
insb
sub
sbb
insb
insb
leave
xchg
lds
and
xor
mov
push
push
lods
sti
sub
and
jmp
jbe
jge
fistpl
je
lods
sub
inc
mov
lds
fmul
mov
inc
mov
mov
dec
and
stos
lods
and
and
jnp
ljmp
inc
mov
jo
stos
cmp
sbb
gs
cld
pop
jge
adc
lods
imul
push
notl
mov
mov
push
test
jb
push
test
or
pop
push
sbb
pop
gs
cld
outsb
mov
fwait
or
shll
push
mov
dec
lret
roll
jo
push
cmp
sub
pop
push
rorb
xchg
jne
mov
mov
push
dec
fldt
sbb
dec
cmp
in
jecxz
dec
orps
xchg
jae
loope
push
push
enter
imulb
scas
ds
fsubs
dec
inc
cmp
test
bound
dec
popa
adc
nop
pop
xchg
aam
dec
out
stc
cmp
xor
pop
cmp
pop
add
cmp
sub
int3
adc
lods
aam
std
dec
xlat
test
shufps
bnd
mov
and
xor
loopne
test
xchg
in
push
push
loopne
or
mov
adc
cmpsb
mov
stc
or
mov
add
push
pushl
stc
cld
daa
iret
jecxz
mov
pop
orl
sbb
xchg
loopne
mov
push
mov
cmpsl
jle
es
jnp
call
andl
add
mov
adc
mov
xor
sbbb
push
pop
add
adc
mov
bound
add
enter
pop
jp
and
mov
shlb
popa
dec
mov
aaa
sbb
mov
mov
sub
sahf
test
dec
je
test
xor
mov
push
push
xlat
movsb
aas
test
lock
jl
or
nop
sbb
cld
fists
rcl
mov
xor
jl
adc
jae
push
pusha
sbb
and
rorb
pop
push
fs
pop
mov
imul
das
fwait
jae
andb
xor
fstpl
mov
xlat
mov
ljmp
scas
insb
jecxz
leave
push
enter
push
rcll
rorb
in
jno
in
xor
xor
fldenv
adc
test
ficomps
push
ret
pushf
leave
dec
add
es
imul
xorb
divl
mov
ret
ja
lds
mov
stos
push
int
sub
pop
pop
push
xor
xor
ss
mov
cmpsb
cmp
scas
sbb
push
imul
and
inc
sub
xor
push
xchg
mov
add
pop
imul
cmpsl
shl
aas
sub
imul
push
pusha
push
jmp
pop
lods
jmp
or
shlb
pop
lret
lock
mov
add
push
sub
sbb
dec
arpl
pop
add
rorb
ss
aaa
jae
adc
and
cmp
or
test
nop
push
push
insl
sbb
jge
pop
stc
cld
int3
push
mov
int3
jecxz
adcb
arpl
mov
dec
inc
dec
mov
flds
xchg
push
mov
dec
in
jbe
fsub
sbb
ret
scas
push
iret
mov
xchg
aaa
imul
or
sub
loope
push
sub
or
inc
pop
cmp
xchg
lds
fdivl
scas
or
adc
xchg
popa
int3
pop
mov
aam
dec
das
xlat
push
loop
lcall
adc
in
data16
push
hlt
lock
ds
sti
push
addb
fld
test
cwtl
sub
arpl
in
stos
jne
jnp
ficoms
jmp
jns
dec
mov
and
sahf
cli
sarb
sbb
cmc
adc
lock
loop
call
adc
push
std
mov
movsl
aaa
lods
add
sbb
xor
sub
out
repnz
mov
jnp
les
insb
fstps
or
dec
sahf
sahf
pop
mov
out
std
pop
mov
dec
mov
test
shrb
pop
adc
scas
fcomps
cmp
std
into
sbb
sub
lds
xor
add
out
and
sbb
int
xchg
mov
inc
jo
iret
xor
enter
xchg
jp
ds
fldcw
dec
push
mov
lret
andl
xchg
enter
mov
out
xchg
xchg
adc
dec
mov
js
int
mov
unpcklps
cwtl
mov
mov
push
int3
pop
gs
pusha
add
cmpb
and
mov
mov
loopne
fs
or
sbb
and
cmpsb
jae
int3
or
bound
lret
cli
xchg
and
sahf
cmp
cmp
cld
add
sub
movl
rcll
aam
cmp
jne
and
scas
test
test
imul
push
add
pop
dec
sub
cmc
out
cmp
sub
adc
dec
jl
mov
pushf
rorl
mov
pop
mov
inc
xor
jo
lods
ja
cmp
cmc
mov
insb
xchg
mov
sub
mov
dec
ss
aam
add
cmp
or
daa
or
pop
out
add
hlt
jg
lahf
imul
mov
rol
lods
out
hlt
adc
call
js
ss
jmp
pop
cmpsb
sarb
xchg
jb
push
jae
pop
gs
cmp
lret
push
jb
xor
das
fcoms
stos
push
out
pop
mov
pop
cmpsl
inc
stc
adc
je
mov
pop
mov
mov
mov
mov
dec
adc
lea
dec
movsb
pop
shll
xchg
mov
cmp
outsb
ss
mov
lds
inc
fiadds
shl
sub
jbe
or
scas
mov
shrl
pusha
shrl
sbb
adc
imul
jbe
add
and
cmp
push
lret
dec
repnz
xor
jae
mov
push
sub
roll
clc
push
cmp
lret
pop
pop
jp
ret
sbb
push
repnz
cmp
push
mov
mov
std
fnstcw
andb
cld
sub
test
add
hlt
cli
xor
xchg
shl
push
jb
pop
les
mov
xchg
inc
outsl
incb
imul
cmpsl
orb
mov
mov
sbb
popf
cmp
inc
sub
and
in
cmpsl
pop
mov
pop
adc
pop
leave
cmp
mov
aad
mov
adc
or
insl
adc
enter
fcmovu
ret
push
xor
fisttpl
pushf
push
enter
cmp
rorb
push
cmc
xor
or
mov
cmp
xor
je,pt
pop
pop
aas
sar
dec
inc
lods
enter
clc
jae
sahf
mov
fs
sbb
in
mov
aaa
xchg
cmp
lret
dec
push
jmp
push
lods
sub
or
ret
dec
pop
add
mov
out
loopne
mov
mov
jmp
xor
dec
pop
imul
cltd
inc
cmp
xlat
dec
xchg
std
inc
mov
rclb
adc
add
ss
loopne
or
fdivl
loopne
mov
mov
pop
repnz
test
inc
loopne
das
out
push
aas
aad
mov
and
stc
enter
xchg
in
hlt
xchg
push
and
xorl
stos
jns
cmp
sub
jmp
xchg
es
sar
scas
lcall
rcll
mov
xor
lcall
js
adc
insl
imul
andl
xchg
in
dec
aad
fs
in
sub
fmul
pop
jns
jne
adc
imul
std
ret
jo
mov
cmp
int3
mov
cltd
pop
cmc
fld
lods
adc
jo
orl
cmp
dec
sbbl
sti
ja
repnz
mov
aam
mov
cmp
rcll
cli
xor
add
ljmp
cs
xchg
insb
add
dec
outsl
xor
dec
jg
dec
fidivl
and
push
sbbb
pop
or
dec
cwtl
movsl
xchg
sub
push
rcr
in
jl
cltd
xchg
adc
loop
inc
mov
dec
mov
mov
lahf
sbb
ja
add
and
adc
out
aam
xchg
xlat
xchg
aam
es
sbb
push
cwtl
int
nop
fdivl
fdivr
enter
adc
mov
out
jmp
mov
call
add
repnz
adc
ret
mov
ficompl
cltd
adc
scas
hlt
orb
adc
cmp
out
mov
clc
sbb
dec
sbb
fadds
daa
adc
shr
bound
inc
push
stos
push
and
mov
add
mov
pop
xor
jo
enter
and
sbb
ret
out
lods
clc
xor
pop
stos
or
jge
fsubl
jo
imull
fstpt
mov
js
pop
aam
jmp
imul
test
cmpsb
sbb
lea
cmp
pushf
pop
mov
fisubs
or
and
mov
sbb
inc
rcll
fdivrs
loopne
imul
gs
loop
test
and
mov
enter
sbb
mov
fwait
je
push
cmovl
rolb
inc
fiaddl
pop
mov
js
inc
and
loopne
push
jb,pt
ja
ljmpw
out
push
dec
push
adc
dec
in
mov
add
ret
and
pushl
in
xlat
stc
scas
lahf
nop
std
outsb
fstps
in
fiaddl
inc
mov
xchg
fiaddl
add
cld
cmpsl
adc
in
ljmp
add
or
idivb
xchg
dec
inc
dec
jmp
sub
pop
and
jecxz
jb
cmpsb
out
pop
sbb
mov
and
mov
test
cmc
cld
and
add
rolb
fdivrp
cmpsl
aad
lret
jl
jae
and
mov
add
jl
jns
pop
pop
sub
out
int
lds
scas
loopne
rcl
dec
dec
outsl
sbb
scas
pop
sub
inc
jecxz,pt
ret
int3
out
mov
cmp
sub
fistpll
pop
and
add
les
mov
push
in
sub
arpl
and
mov
out
js
loope
xor
mov
mov
push
mov
push
jne
sub
shrl
pop
loopne
or
cmp
shlb
shll
in
int3
fwait
sbb
pop
pop
test
inc
push
mov
sbb
add
or
fs
imul
and
int
sbb
xchg
dec
or
jg
outsl
inc
andb
sbb
sub
dec
pop
rcrl
pop
movsb
mov
lret
sahf
push
iret
and
or
cmc
enter
shlb
fldl
int3
es
xchg
mov
pushf
orb
shrl
add
adcl
lds
shlb
scas
shrl
or
fdivr
pop
jb
pop
push
out
cmp
arpl
xchg
cli
pop
mov
mov
add
mov
add
add
cmp
push
sbb
cmpsl
jnp
icebp
mov
cmp
sar
fstl
cmc
dec
cmc
test
xchg
in
dec
addr16
mov
push
inc
rcll
push
cmp
mov
hlt
mov
aas
push
sarl
add
in
push
push
iret
jmp
push
pop
jae
or
add
sbb
sarb
push
ljmp
popf
lahf
or
imul
sub
out
dec
adc
cmp
pop
imul
adcl
sbb
repz
nop
mov
imul
pop
jb
pop
lret
pop
sbb
test
sub
jo
std
pop
shl
scas
jl
enter
fidivrl
sbb
mov
loop
mov
jge
ror
mov
shll
sub
pusha
cmc
test
mov
xchg
jl
mov
insb
adc
aad
imul
notb
xchg
xchg
insl
mov
xchg
dec
mov
nop
jno
lods
push
pusha
mov
out
jmp
in
xchg
fisubrl
in
dec
ljmp
sub
outsb
ss
pop
xlat
jp
xor
inc
sub
add
xor
cmpsb
or
pop
mov
mov
movsl
sub
out
lock
mov
jbe
sub
xor
mul
je
push
or
add
cwtl
test
mov
mov
lods
pop
mov
mov
in
rorb
or
flds
stos
and
push
jns
mov
mov
jnp
and
jecxz
jg
jno
or
jno
push
push
cmc
ret
xor
ss
mov
imul
test
out
and
sti
mov
out
cmp
sub
lods
test
in
ds
mov
fsubrl
cmp
inc
mov
test
test
aaa
stos
cmp
mov
imul
das
push
daa
push
fwait
jge
inc
popf
cld
jne
dec
nop
dec
fs
pop
negl
xor
push
call
fstl
push
push
jno
lods
ret
mov
and
test
notb
xor
sbb
into
cvtpi2ps
sub
rol
dec
mov
ss
jmp
lcall
rcrl
push
decl
mov
xor
inc
mov
cmp
sarl
lds
xchg
sub
xor
and
pushf
fs
jg
add
stos
pop
outsb
cli
dec
jae
repnz
int
xchg
pushf
mov
jmp
cmp
mov
sbb
cmp
xlat
jbe
fsubrp
test
cmp
pop
sub
adc
add
repnz
cli
fistpl
and
cld
fildl
xor
push
jp
jne
inc
out
fcmovne
lcall
pusha
push
cmc
jnp
test
pop
addr16
cmp
std
ficoml
inc
test
mov
jbe
mov
mov
xchg
decl
gs
push
movzwl
adc
add
sub
pop
ja
or
aas
dec
subb
push
imul
cltd
jl
fsubs
pushf
cmc
dec
mov
sub
mov
xlat
mov
stc
jae
iret
imul
dec
inc
mov
push
and
mov
mov
jg
inc
int
and
push
xor
sub
push
popf
xchg
scas
in
or
int3
jo
pop
fs
loope
repnz
xor
jne
mov
inc
mov
movsl
leave
in
push
cwtl
mov
mov
repz
inc
repnz
sahf
or
in
pop
and
stos
lock
scas
xchg
add
add
jbe
repz
sub
cmp
sub
jo
fdivl
xor
cmc
outsb
or
mov
mov
out
ret
fmull
jbe
mov
in
lahf
inc
clc
rcrl
mov
mov
or
fnstcw
or
cmp
push
xchg
or
jg
push
push
mul
mov
stos
mov
jmp
cmp
pop
sarb
dec
std
addr16
test
cmp
mov
fisttpll
leave
rolb
mov
mov
sub
add
add
gs
imul
jecxz
shrb
adc
sbb
stos
fistps
xlat
pop
or
mov
imul
sete
pop
test
or
mov
es
add
sub
pop
cvtpi2ps
jno
stc
fmulp
jns
mov
int
in
shl
add
cmc
into
pop
xchg
sarl
test
ljmp
or
adc
cld
cmc
rsm
cmp
xchg
ja
inc
in
fs
fwait
jb
add
rcl
iret
stc
push
add
shl
dec
mov
ja
std
xchg
jnp
fcompl
sti
jle
ret
add
je
enter
sub
movsl
out
clc
lret
cmp
and
mov
jmp
sbb
cmc
stc
cwtl
sbbl
pusha
push
sahf
or
addr16
jle
int
in
lods
gs
mov
mov
mov
ljmp
lea
test
cmp
and
icebp
out
add
ret
test
lock
mov
fs
movsb
nop
mov
rcrb
mov
cmp
mov
fidivrs
test
push
jb
push
inc
and
or
xor
repz
dec
ja
ljmp
addr16
and
mov
outsb
xchg
int3
jp
sbb
scas
inc
mov
xor
dec
mov
mov
mov
ret
movsl
or
test
sbb
cmpb
fsubrl
les
pop
push
xchg
lret
loop
cltd
sub
stos
fwait
push
scas
or
mov
mov
push
inc
jmp
adc
push
inc
in
sahf
out
adcb
enter
inc
jb
or
cmp
mov
iret
sbb
push
ljmp
push
jnp
enter
xchg
xor
test
and
push
int
rcll
jg
xchg
bound
stos
mov
mov
jle
pop
sub
sbb
sub
addb
test
or
mov
mov
clc
cld
jmp
lcall
mov
inc
jno
xlat
sub
imul
inc
cwtl
push
and
mov
out
shr
testb
cli
ret
xchg
icebp
ret
call
dec
psrlw
cmpsb
shrl
sub
ret
addb
lds
cmp
fsubs
xor
cli
mov
test
movsb
pop
dec
pop
cmp
repz
sbb
out
mull
adc
or
adc
xchg
cmpsb
fisttpl
bound
xchg
shlb
mov
out
adc
mov
jno
adc
xchg
jnp
imul
outsb
push
iret
cmp
pop
sbb
mov
pusha
and
cmpsb
jmp
sbb
lahf
mov
inc
add
mov
mov
fnstsw
dec
pop
popa
repnz
push
mov
iret
jecxz
xchg
mov
fsubrs
cmp
xchg
dec
out
in
lds
jg
mov
iret
and
or
sarl
jns
adc
mov
insl
mov
jmp
pop
jmp
pop
xchg
lret
sub
subl
ja
test
jge
push
dec
cmpsl
mulb
ror
scas
movsb
mov
cmp
mov
lahf
out
pop
loopne
push
push
shl
xor
popf
xchg
sub
or
cltd
cmp
xor
mov
stos
mov
int3
cld
mov
inc
fnstsw
fidivrs
xchg
sarb
popf
fwait
inc
scas
test
lods
jo
scas
mov
xor
dec
popf
inc
aam
add
sarb
xchg
iret
pop
sub
add
mov
dec
insb
jns
fimull
mov
cwtl
xorb
xor
jmp
icebp
popf
mov
mov
mov
fldl
inc
enter
es
stc
out
lret
mull
test
cli
divb
or
roll
scas
mov
xor
fadds
sub
sub
jge
gs
xchg
inc
xchg
xor
push
jnp
push
push
xor
adc
cmc
adc
pop
popf
outsl
xchg
xchg
mov
and
fcmovnu
and
pushf
push
sbb
dec
inc
inc
xorl
add
pop
sub
cmc
or
outsb
xor
sub
mov
jg
fnstcw
rorl
cmpb
jle
inc
je
icebp
in
jno
dec
dec
jnp
in
jno
fwait
mov
mov
ja
aam
pop
xor
aad
andb
xchg
xor
call
imul
push
or
cmp
or
sti
and
loopne
or
lahf
xor
jne
pop
sbb
or
jne
or
out
adc
inc
mov
jp
icebp
inc
mov
fwait
adc
cmpsb
or
mov
xor
mov
vpminsw
sbb
out
js
test
roll
lahf
dec
loopne
push
jg
lods
lahf
dec
mov
jne
sti
aad
in
mov
ss
or
push
es
cmpl
mov
sahf
lretw
sub
fwait
push
cmp
inc
pushl
pop
add
xchg
loop
cli
push
and
bnd
adc
movsb
loop
ficoms
test
sub
cltd
fsubl
popa
mov
push
or
pop
fnstcw
out
mov
sub
dec
int3
lods
dec
cmp
mov
dec
lcall
mov
out
push
aam
shl
xchg
pop
jnp
loopne
lret
cmp
sub
cli
mov
pop
repnz
sub
xchg
inc
sbb
and
add
xor
xchg
jecxz
add
add
xor
or
mov
push
sbb
xlat
cs
dec
insl
sub
cmpsb
push
jae
nopl
cmp
pop
ret
push
mov
push
pop
jno
mov
shll
cmp
rcll
movsl
fstps
fstpl
mov
aas
fisubrs
pusha
ja
jns
and
mov
adc
or
mov
inc
iret
js
add
lcall
aad
xchg
scas
rclb
and
std
push
push
call
fiadds
dec
mov
xchg
jl
lds
xor
mov
sar
push
cltd
les
push
into
mov
cmp
bound
cmp
add
lahf
fdivr
nop
dec
xchg
std
mov
pop
mov
mulb
jno
pop
bound
jno
push
dec
sbb
fs
hlt
call
pop
cli
ret
ficompl
lcall
or
xchg
fsubrl
leave
xor
int3
aas
cmp
inc
cmp
or
push
or
cmovp
insl
dec
push
mov
push
divb
cld
xchg
xor
cmp
add
std
mov
mov
scas
sbb
ds
insl
or
push
lret
out
and
fsubrl
addl
lcall
iret
sbb
stos
int
out
add
fdivrl
popa
cli
and
iret
into
mov
xchg
adc
xor
pop
fldcw
out
push
mov
hlt
je
fdivr
push
in
or
xchg
shrb
mov
and
nop
inc
xchg
imull
cmc
add
sti
popf
fistpll
data16
in
mov
push
xchg
push
jbe
jb
or
out
mov
add
xor
inc
cmp
mov
push
sub
jne
and
ficoms
outsb
lret
cwtl
lahf
out
dec
lret
mov
xchg
lret
inc
inc
loope
xchg
mov
lret
lahf
mov
jnp
lods
push
cmp
test
in
pop
mov
sub
shll
or
enter
dec
cli
popa
cmp
and
lods
sbb
movsl
jp
repz
xchg
lods
ds
xlat
sbb
pop
push
xor
and
sbb
mov
dec
add
dec
jmp
mov
js
in
xorl
mov
dec
popf
jecxz
negb
fwait
inc
sub
leave
test
fadd
dec
in
jecxz
inc
sbbb
ret
pop
mov
push
or
popa
ljmp
push
add
or
movsb
xchg
lea
xchg
cld
bound
push
mov
loope
xchg
scas
mov
mov
cmc
or
jg
rclb
push
dec
clc
or
xchg
addr16
aam
mov
repz
dec
or
mov
lock
or
fcmovnbe
lods
frstor
xor
mov
push
xor
mov
fld
jp
mov
cmp
xchg
adc
xor
mov
in
sub
cmpsb
mov
or
mov
fbstp
push
stos
mov
jg
in
lret
or
dec
bound
int
std
jmp
movsb
xor
xchg
mov
mov
pop
adc
cld
mov
rcrb
xor
in
and
cld
js
jb
xor
cmp
xorl
jecxz
add
outsb
and
pop
cmp
cmp
pop
int
es
jbe
jbe
xchg
xchg
cmp
pusha
mov
shufps
in
push
loop
divb
xor
dec
mov
lock
sbb
ret
movsl
lods
push
push
push
push
mov
jno
test
mov
ret
xor
xchg
jle
in
pop
add
adc
dec
loop
nop
jecxz
inc
pop
mov
or
add
dec
out
mov
cli
iret
imul
xlat
push
lods
fcompl
in
jnp
subb
pop
pop
pop
leave
imul
sbb
jecxz
fnstsw
fmulp
jecxz
push
ds
out
shlb
jl
sub
cwtl
test
addl
ret
jo
mov
cmp
in
out
icebp
cwtl
adc
es
pop
jb
mov
cmp
into
sahf
inc
pop
mov
jg
int3
call
mov
sti
movsb
mov
pop
rclb
lret
call
std
jns
int
xchg
inc
lods
jmp
stos
cmp
jp
jp
divps
jl
xchg
movsl
mov
cli
cmp
out
stc
xchg
in
mov
in
in
mov
xor
mov
sarl
dec
xchg
js
pop
shll
sub
jl
xchg
push
pop
push
fisttps
sbbl
push
mov
repz
mov
std
sub
scas
pop
stc
add
push
adc
jg
sbb
add
cmpsl
ficompl
and
test
rorb
push
sbb
and
pushf
add
stos
pop
out
adc
icebp
imul
xchg
stc
lods
fisubs
or
xchg
pusha
lea
jne
push
pop
mov
mov
or
dec
mov
sbbl
jno
ljmp
fs
push
push
dec
ror
ret
fstpt
ret
mov
out
or
call
cmpsb
sbb
inc
xor
loopne
or
mov
insb
add
stc
test
jo
lret
icebp
mov
xor
inc
sub
push
xchg
movsl
imul
fwait
out
jle
pop
pop
aad
mov
fs
ret
adc
cmp
stos
and
jl
jne
jnp
jmp
sbb
xchg
cmp
inc
rcll
jecxz
addr16
xor
inc
pop
lods
imul
test
aas
ficoms
pop
mov
mov
mov
jp
fiaddl
stos
adc
std
aas
sbb
push
mov
adc
cltd
popf
mov
sbb
mov
dec
jnp
sahf
mov
pop
xlat
aaa
xchg
push
mov
pop
cmpb
cmp
cmp
test
add
sub
sbb
xchg
aam
mov
add
addr16
add
sub
cmp
xor
sti
mov
shll
pop
cmp
xor
mov
push
stos
aam
jp
push
xor
lret
ds
hlt
inc
aas
sub
enter
pop
adc
aam
sbb
fs
push
loope
out
scas
data16
popa
dec
xor
cld
imul
aaa
ss
sbb
mov
lods
ds
push
shll
ret
jo
int
sub
imul
xchg
in
push
pop
aas
or
bound
pop
lods
aam
adc
or
push
sbb
mov
dec
loope
inc
pop
int
pop
rolb
cs
int3
daa
sbb
inc
rorl
fsubrs
cs
into
adc
and
icebp
sub
insl
ss
rcrb
gs
outsl
xchg
xchg
xorb
icebp
cmp
xchg
jge
cmp
dec
inc
push
cs
mov
fwait
dec
mov
cltd
int
inc
cmp
mov
or
push
leave
add
stos
fwait
ret
xor
adc
inc
add
xlat
fcmovbe
sbb
xor
aaa
mov
cli
cs
adc
and
mov
and
addr16
test
mov
cmp
pusha
test
sbb
out
and
pop
in
stos
mov
iret
xor
xchg
repnz
clc
inc
call
jge
cmp
pop
notl
pop
sahf
pop
add
fsubl
mov
data16
jle
push
jmp
adc
xchg
mov
inc
repnz
mov
jle
inc
addr16
and
xchg
ds
sub
adc
sub
fwait
dec
mov
insl
cmpsl
aam
cwtl
inc
clc
sbb
sbb
divl
sub
push
mov
jmp
fwait
in
lods
lcall
push
mov
lret
ljmp
dec
mov
in
push
pushf
mov
fldenv
inc
lds
daa
rcrb
and
mov
fld
or
imul
and
cld
mov
in
repnz
outsb
dec
fbstp
jnp
inc
xchg
sbb
insl
es
clc
aam
lds
fdiv
shrl
and
mov
cmp
jae
cld
sti
adc
mov
push
sbb
ljmp
xor
sarl
adc
hlt
dec
cli
fnstcw
pop
aad
adc
movsb
sub
xor
pop
xor
push
aam
hlt
imul
in
out
push
pop
lret
xchg
inc
faddl
push
pop
cmpsl
out
cmpsb
sbb
xor
dec
cmpl
xchg
loopne
mov
mov
dec
xchg
stos
cld
add
gs
sub
add
xlat
test
clc
lret
sub
xchg
cmp
scas
mov
lea
cmp
loope
repnz
sub
sbbb
xor
andb
mov
push
or
push
cltd
mov
cmp
sbb
mov
fwait
and
or
loop
mov
ss
dec
scas
push
push
push
dec
sbb
jl
repnz
pop
test
outsb
ss
out
lret
pcmpeqw
adc
bound
pop
inc
lret
out
jbe
pushf
dec
jnp
jae
sbb
iret
cli
xchg
subl
ret
data16
in
rep
int3
adc
xor
test
loope
mulb
sbb
lods
mov
scas
or
ds
pop
in
test
jecxz
add
pop
das
arpl
daa
xchg
pop
clc
push
mov
ret
mov
mov
out
inc
mov
sub
mov
sahf
daa
test
pop
push
fisubrl
mov
stc
jg
cwtl
repz
sbb
mov
push
xchg
rorl
dec
mov
cmp
daa
and
vcvtsi2ssl
jbe
jae
fcomip
add
imul
shr
push
test
test
hlt
hlt
loop
mov
and
lret
mov
ljmp
sbb
in
ficomps
aas
testl
fdivs
repnz
mov
testb
push
xchg
add
leave
push
cmp
add
fnsave
arpl
or
testl
jp
xlat
jmp
daa
nop
and
ljmp
add
inc
bound
cmp
add
xlat
hlt
std
mov
dec
pop
faddl
inc
cmpsl
mov
sbb
fiaddl
or
in
xorb
test
dec
rcrl
pop
sub
adc
xchg
lcall
xor
test
mov
push
or
add
xor
mov
dec
inc
int
jge
cs
pop
and
inc
cmp
call
inc
dec
pop
push
mov
mov
jne
xor
pop
cmp
nop
xchg
in
inc
movsl
sub
test
mov
xor
push
pop
daa
shlb
outsb
cld
cmpsb
jne
lret
sub
dec
jg
xchg
pop
das
in
test
movsl
frstor
and
xchg
ja
push
ds
and
or
xlat
cs
push
sub
pop
bound
push
test
xchg
fdiv
mov
cmp
adc
lods
cmpsl
dec
or
enter
test
pop
dec
iret
pop
add
imul
dec
or
bound
aam
xor
mov
sub
pop
fs
fwait
rcrl
hlt
mov
aaa
add
pusha
mov
cli
jb
rcrb
add
fnstsw
sub
scas
adc
mov
rep
and
into
xchg
pop
cmp
lahf
rcrb
add
dec
addr16
std
dec
add
sbb
aaa
loopne
mov
cmp
xor
fildll
add
inc
stos
and
orl
mov
sbb
pop
ret
xor
cwtl
adc
jns
add
repz
jnp
es
fwait
decb
mov
call
outsb
arpl
sahf
ret
lret
ds
inc
je
imul
hlt
filds
shl
mov
mov
std
mov
or
bound
jmp
push
lock
sbb
dec
mov
lods
mov
jns
mov
ficoms
jo
outsl
sub
add
rclb
or
adc
sub
add
in
mov
in
orb
mov
rorb
dec
inc
pop
jmp
or
shl
testl
cmp
sub
pop
ror
push
or
stos
xchg
je
inc
xor
fistl
or
fisttpll
in
adc
sbb
push
movsb
and
jb
imul
inc
xchg
or
cltd
imul
jmp
fidivrl
xchg
sbb
mov
popa
loop
mov
xchg
push
dec
jg
mov
xor
fs
cltd
lea
mov
cmpsl
adc
and
icebp
sbb
pop
inc
jp
and
jns
and
lea
or
jo,pn
in
lock
mov
insl
bound
add
mov
bts
test
imul
dec
mov
insl
out
xor
jne
xchg
enter
fidivl
mov
mov
aas
out
pop
lods
or
and
push
inc
es
dec
or
mov
cmpsb
dec
xlat
in
rclb
jge
cs
inc
insb
push
arpl
xchg
dec
push
fadds
daa
push
mulb
cmpsl
jg
aad
es
stos
into
cmpsl
nop
or
push
xchg
add
out
mov
cmp
add
sbb
outsl
cltd
and
lock
push
sar
sbb
ljmp
stc
xchg
decb
cmp
xor
or
int3
ds
jmp
fbld
mov
push
divl
and
cmc
mov
outsb
lahf
jbe
xor
and
in
mov
inc
je
xchg
adc
unpckhps
sbb
xor
addr16
in
mov
fstps
xor
test
aas
imul
jno
int3
cmpsb
leave
rorl
loop
test
div
enter
cmp
fsubrs
or
push
fistps
adc
jecxz
dec
jg
jge
mov
in
jl
mov
pop
mov
adc
dec
loop
adc
mov
imul
inc
push
test
add
loope
sub
jns
fistps
repnz
fs
mov
out
outsb
cmp
stos
dec
lods
cmp
dec
inc
jmp
in
fnsave
mov
add
mov
push
fadd
in
cwtl
stos
sbb
cmp
test
pop
scas
mov
xchg
lret
or
repnz
sbb
inc
leave
imul
int3
enter
aaa
hlt
sub
mov
dec
or
sub
nop
jne
popa
divb
jp
rclb
sbbb
arpl
cmp
mov
or
sub
xchg
mov
push
insl
push
mov
pop
push
stos
bound
insb
out
cwtl
mov
xlat
mov
rorb
push
in
inc
add
aam
xor
loopne
arpl
and
adc
daa
adc
cwtl
pop
imul
cmpb
cmp
or
and
dec
js
bound
add
idiv
xchg
xchg
js
in
shll
jns
in
sti
xor
ss
mov
inc
repnz
mov
cld
mov
and
mov
pop
scas
fdivrs
cmpsl
leave
adc
and
jge
or
loop
fsubrl
inc
ret
fld
test
std
int
mov
and
pop
scas
sub
aas
and
jecxz
push
sbb
and
sbb
call
orb
inc
adc
lock
push
inc
jg
addr16
js
fld
xchg
cmpsb
sub
scas
cmp
loopne
inc
mov
push
shrb
adc
sbb
pusha
lods
lret
sbb
aam
mov
xchg
push
or
scas
inc
mov
popa
jl
iret
mov
or
pop
orl
jb
jnp
sub
sahf
dec
fucomp
cmpsl
pop
js
popa
dec
mov
lret
jecxz
aam
shlb
dec
lcall
out
add
mov
fstpl
add
fisubrl
mov
out
adc
js
fwait
repz
or
xchg
add
ficoml
inc
hlt
xchg
shll
call
pop
mov
fs
xor
out
sbb
pop
les
or
jl
mov
jnp
mov
shl
mov
ja
pop
cwtl
test
iret
leave
mov
inc
push
daa
pop
xor
scas
xchg
std
scas
shl
fcomp
fwait
add
xchg
pop
mov
mov
xchg
orl
jmp
mov
inc
icebp
add
mov
scas
xor
out
fisubrl
pop
int3
cld
adc
jmp
mov
cmp
aas
adc
mov
push
cs
pop
or
xchg
pop
in
xor
lret
daa
push
into
cmpl
sarb
insb
sahf
rclb
dec
inc
xor
pop
in
xor
inc
cmp
xorb
insl
adc
sahf
adc
repz
outsb
jae
ds
aas
xchg
lock
dec
xor
cmp
pop
mov
jp
jb
inc
lret
cwtl
std
mov
xor
sti
int
stos
pop
mov
pusha
push
imul
dec
inc
xor
push
sub
imul
mov
insl
ficomps
inc
cmpsl
fimull
jecxz
push
sub
jbe
push
and
movsb
mov
das
hlt
mov
stc
mov
lret
pop
imul
adc
shrl
je
add
sbb
popf
push
cltd
cmp
jg
test
sbb
out
jo
mov
xor
fisubrl
icebp
repnz
push
ror
jp
cmpsb
dec
inc
ds
xchg
repz
aam
jb
loopne
repnz
pop
pmulhuw
pop
mov
sub
jno
cmc
pop
idivb
sub
adc
xchg
repz
xor
scas
loope
pop
je
inc
fisttpl
and
mov
add
dec
push
into
fldcw
inc
mov
test
jmp
js
xor
mov
ret
roll
xchg
inc
clc
rsm
ja
jno
adc
pusha
lret
sbb
mov
loop
adc
out
cmp
outsl
dec
out
dec
negb
ret
and
mov
icebp
inc
fwait
cmpb
jne
je
stc
mov
push
lea
aaa
in
inc
fldcw
mov
scas
rcrl
add
cmp
cmpb
xlat
jmp
mov
cltd
cld
lret
xor
and
mov
mov
mov
rcrb
cmp
adc
shrl
loop
in
pop
inc
push
cmpsb
jns
jecxz
jo
mov
outsb
addl
add
fidivs
rorb
pusha
bound
cmpsl
test
xchg
pop
sub
out
or
stc
xor
roll
jbe
pop
inc
xchg
addl
faddl
sbb
sbb
scas
sub
sbb
test
shrb
rolb
push
xor
xor
dec
out
mov
mov
ljmp
inc
cmp
mov
pop
cltd
and
test
mov
jge
in
cmp
vpcomuw
cwtl
repz
lods
or
push
dec
lods
leave
pop
rcr
fwait
pushf
jl
ja
xor
xchg
xor
lods
pop
xchg
pusha
dec
pop
imul
ds
test
aam
push
inc
les
les
aaa
xlat
pop
mov
cltd
adcl
or
repnz
in
and
pop
push
fs
ss
insb
fistpl
call
sub
lcall
ficomps
jns
rcrb
fistpl
sti
inc
mov
xchg
aam
sti
and
and
sahf
mov
dec
repnz
pop
fcmove
xlat
mov
fisubrl
jge
and
mov
jno
mov
pusha
add
push
sbb
fidivl
lret
loop
into
outsb
adc
or
jle
mov
cmp
xchg
frstor
pop
mov
repz
and
imul
out
add
ljmp
push
bound
rclb
xchg
aas
call
or
jmp
lret
mov
xor
and
pop
repz
xchg
pop
les
mov
out
in
xlat
pop
stos
jmp
movsb
lret
ds
jo
dec
push
push
movsb
je
mov
mov
xor
mov
inc
jl
leave
pusha
dec
mov
dec
and
in
movsb
aad
jl
js
jl
xrelease
xor
fwait
mov
fldcw
and
loope
mov
xchg
outsb
fs
mov
add
clc
xlat
mov
imul
test
movb
sbb
clc
ds
add
stos
fcoml
mov
in
add
stos
mov
sub
into
push
sub
sbb
insl
data16
pop
xchg
jle
orb
loopne
cmp
mov
add
push
std
adc
shlb
pop
dec
mov
in
dec
mov
faddl
dec
dec
pop
cmpsl
cmp
pop
aam
das
stc
pusha
cmp
mov
mov
and
outsl
adc
pop
mov
loop
inc
and
rcl
mov
mov
rclb
adc
neg
adc
loopne
jo
sbb
pushl
jl
adc
push
bound
cmp
inc
lods
and
sub
jo
pop
jnp
dec
in
dec
jl
or
jl
into
ljmp
xor
loope
jmp
push
popa
mov
or
mov
or
clc
mov
stos
pushf
sub
push
call
ljmp
loopne
das
mov
jnp
sbb
clc
fsts
ja
cmp
adc
icebp
mov
lock
push
sbbb
pop
dec
push
dec
stos
icebp
add
loop
add
rcl
add
or
xchg
push
inc
or
into
test
sbb
ror
inc
bound
aas
mov
bswap
out
in
sbb
jle
mov
lea
mov
ljmp
inc
xchg
inc
int
pop
daa
dec
push
data16
pmuludq
iret
test
out
test
mov
jb
stos
lahf
jae
xchg
push
and
popa
ret
fisubrs
sahf
das
bound
roll
rcl
cltd
fistpl
mov
imul
jge
push
sub
int3
cltd
jge
dec
jb
sbb
sti
popf
lret
xchg
jge
aad
jp
sbb
ja
jge
pop
out
out
xor
pop
adc
rcrb
rcrb
loopne
sbb
push
pop
xchg
mov
mov
jle
test
jmp
cmp
lock
adc
mov
push
xchg
fnstsw
call
or
adc
mov
adc
loop
mov
push
inc
xor
dec
je
stos
out
sahf
adc
xchg
inc
adc
dec
sub
test
sbb
pop
mov
fnstsw
pop
das
sbb
or
xchg
pop
sbb
inc
pop
mov
lcall
jo
add
fnstcw
or
mov
out
aam
leave
lea
or
dec
es
pop
cli
addr16
sbb
enter
pop
cmpsb
push
jbe
xchg
scas
outsb
in
in
or
jo
movsl
pop
sub
shrb
ret
jle
cmp
pop
sarb
pushf
fcomp
mov
mov
in
inc
rcrl
push
repnz
fs
pop
fs
mov
mov
in
or
shlb
sbb
xchg
dec
sbb
mov
rol
daa
stos
cmp
mov
test
pusha
clc
or
pop
sub
fidivrs
inc
mov
stos
inc
hlt
rcrb
or
out
fstl
daa
cmp
mov
in
ja
sbb
or
sub
or
std
daa
push
pushf
add
mov
lret
stos
lods
xchg
mov
popf
test
jb
imul
mov
cmp
inc
push
cld
xchg
gs
js
filds
jmp
cmp
push
xchg
out
xchg
hlt
stos
cmp
enter
lods
sbb
js
stos
insl
adc
cmp
push
popl
mov
sub
test
push
xlat
xchg
lods
push
xchg
mov
hlt
dec
cmpsl
ds
test
push
mov
nop
cld
jecxz
sbbl
xlat
nop
xchg
insl
les
mov
outsl
js
or
jnp
lret
dec
fiaddl
lret
test
or
cmp
stos
aaa
inc
push
xorl
cmp
and
xor
mov
inc
mov
xor
loop
lea
or
mov
into
aam
andb
ret
push
adc
ja
les
out
xor
jmp
or
test
jae
mov
pop
xor
xchg
add
inc
push
iret
cmp
add
mov
xchg
adc
ljmp
adc
lcall
inc
mov
mulb
pop
mov
xchg
in
insl
pop
std
gs
subl
inc
push
stos
mov
jae
std
or
mov
or
pushf
pop
lds
adc
mov
cwtl
in
jns
sub
sbb
cmp
mov
push
and
lods
push
outsl
inc
mov
or
js
pop
fldcw
cmpsl
hlt
jle
pusha
cli
lret
mov
mov
jg
sbb
int3
jmp
test
enter
pop
jmp
enter
lods
mov
adc
ss
mov
jb
xorl
push
cmc
in
sub
add
popf
fwait
out
adc
daa
movb
sbb
sbb
out
daa
icebp
shr
icebp
ja
cmpsl
mov
add
call
lods
cmp
cwtl
mov
imul
xor
aad
sbb
adc
pop
out
xor
push
adc
push
ret
jmp
fnsave
js
lcall
or
xor
aaa
or
adc
mov
push
lret
cmp
inc
nop
cmc
pop
xchg
cltd
mov
ret
adc
xchg
rclb
rorb
lods
pushf
mov
sbb
jg
xchg
test
test
insl
lods
push
fwait
std
loope
mov
sbb
fsubs
pop
sub
or
pop
cmpsb
and
cltd
loopne
sbb
ds
fucomp
mov
xor
cmp
jmp
jecxz
call
call
out
mov
dec
adc
jl
cld
shrl
daa
stos
push
mov
xor
subb
test
xchg
gs
pop
and
stos
sub
mov
xchg
pop
insl
mov
sub
xchg
xchg
in
push
cmc
dec
fmuls
push
add
mov
push
lcall
mov
test
pushf
xor
push
in
sbb
cmp
movl
loopne
pop
sbb
cltd
out
das
and
push
test
dec
hlt
dec
pop
jb
inc
or
lock
mov
sbb
adc
mov
inc
cs
mov
jmp
pop
and
jge
push
push
movsb
loopne
icebp
popf
fldl
jbe
aam
into
mov
test
add
or
ljmp
dec
cmp
in
sarb
mov
pop
stos
outsb
sbb
std
lcall
sbb
out
inc
addr16
or
daa
shr
xor
jl
push
mov
xor
xor
addr16
push
cmpsb
aaa
jl
add
daa
adc
popa
test
sub
sbb
mov
cmp
stos
and
sbb
in
in
int3
dec
in
mov
ds
jb
xor
out
jae
cwtl
out
fistl
jl
enter
xchg
jae
cs
xchg
popa
in
hlt
loopne
inc
lds
mov
in
mov
or
pop
sti
sti
lock
pop
daa
pushf
call
insb
sbb
in
jle
pcmpeqw
out
mov
push
aaa
xorb
inc
popf
lea
jp
jecxz
dec
testb
into
inc
test
leave
dec
int3
call
mov
mov
data16
sbb
dec
in
xor
movsl
enter
arpl
outsl
rol
roll
mov
mov
mov
ja
fmulp
dec
inc
adc
jnp
pushf
outsb
pop
xor
push
or
jns
xor
cmp
mov
insb
mov
in
inc
mov
fcoml
fcomi
push
inc
sbb
leave
pop
mov
jae
jge
int3
pop
std
jae
or
sbb
mov
out
data16
rcrb
jmp
mov
ja
sub
or
arpl
pop
pop
test
mov
js
cmc
push
ljmp
bound
adc
jns
adcb
mov
sbb
xchg
cld
gs
jmp
push
cmpsb
jbe
gs
sub
push
add
enter
aad
sub
dec
cli
xlat
ret
rorb
out
xor
stos
sbb
add
mov
jl
cmp
je
mov
add
aaa
push
sub
jno
je
addr16
cwtl
inc
sbb
dec
dec
sbb
jmp
inc
pop
dec
aam
paddusb
xchg
mov
inc
adc
or
jae
imul
push
leave
pop
and
jge
or
stc
push
fsubrl
fiaddl
fldcw
dec
test
add
adc
incb
pushf
adcb
dec
in
push
lahf
jne
mov
xorb
adc
mov
dec
xchg
out
xchg
fwait
or
mov
pop
fsubp
into
imull
stos
and
lret
bound
pop
and
mov
inc
push
add
popa
or
push
add
sbb
fsub
xchg
cmc
out
ljmp
jo
ficomps
jnp
shrb
mov
mov
mov
cmp
popf
jbe
ret
inc
mov
clc
jno
mov
mov
mov
out
je
sub
inc
outsl
mov
cmp
mov
ffreep
mov
cmp
sbb
ljmp
cmpsl
std
in
repz
neg
test
xor
cltd
inc
mov
movups
mov
cmp
jg
ds
arpl
mov
popf
push
cld
add
cmp
cmp
push
or
xor
push
iret
sub
out
push
inc
add
test
push
and
sub
daa
and
xor
pushf
addl
scas
loope
in
add
movsb
popf
lea
or
xor
push
mov
sub
pop
pop
les
call
fsubrl
iret
mov
and
mov
sbb
cmp
cmp
data16
adc
xchg
iret
lcall
sub
inc
test
add
lods
ret
cmpsl
push
movsl
cmp
push
out
sbb
add
dec
jg
inc
xchg
cmp
jno
add
clc
xchg
mov
xchg
mov
icebp
int3
in
cmp
stos
shll
xlat
rsm
nop
lea
shlb
adc
jbe
add
shrb
insl
pop
mov
dec
dec
lods
push
test
dec
int
fnsave
push
sbb
sbb
push
fildl
mov
mov
push
sti
push
fdivrs
leave
clc
lret
stos
popa
add
jo
cltd
add
or
dec
push
xchg
ret
push
sbb
xor
jno
or
lret
aam
fmuls
pop
movsl
pop
adc
cwtl
aaa
test
inc
jl
inc
mov
inc
sti
mov
fisubrl
movsl
ficoml
dec
dec
sarl
inc
notl
and
cli
adc
cmp
push
push
dec
jle
sub
add
ffreep
shlb
sub
nop
mov
insb
mov
ret
and
cwtl
inc
and
loopne
adc
dec
pop
or
jns
inc
aad
mov
pop
add
in
mov
dec
pop
cmp
sub
mov
mov
test
push
cmp
ss
mov
xor
out
pop
jl
or
or
outsb
pop
repnz
lahf
and
and
mov
cs
and
dec
xchg
mov
outsb
or
das
sbb
cli
sahf
bnd
lds
mov
das
pop
dec
jl
repz
inc
dec
or
enter
mov
pushl
mov
sbb
or
ljmp
xchg
movsl
jecxz
mov
inc
test
push
das
aas
pop
addb
add
es
out
mov
popa
in
repz
jp
adcb
fbld
add
lret
test
push
adc
addr16
jo
pop
mov
lock
cmpsl
xchg
dec
out
test
mov
sub
addr16
cltd
mov
mov
sti
test
imul
inc
std
and
insl
sbb
lret
mov
popf
movsl
arpl
inc
imul
test
lret
xor
and
int3
test
in
out
test
lahf
jg
xor
lods
or
cmp
xor
fcompl
xchg
stc
pop
mov
or
lds
adc
rcrl
add
fbstp
cmpb
pop
inc
mov
testl
xchg
jae
and
in
nop
iret
xchg
sub
jbe
fistl
inc
dec
mov
adc
inc
movsl
push
sbb
sbb
add
in
loopne
push
mov
sbb
jecxz
ja
cmc
pusha
in
shlb
iret
cmp
dec
mov
jle
adcb
imul
fs
outsb
and
mov
xor
dec
mov
cmpsl
fldcw
aam
xchg
xor
stc
pop
jo
ja
add
das
std
cmp
mov
mov
test
add
stos
arpl
mov
test
jecxz
cmp
or
repz
scas
outsb
ds
mov
add
sub
push
inc
ds
add
mov
test
mov
inc
sbb
aam
xchg
pop
loop
push
mov
xor
iret
adc
ret
in
mov
pop
mov
push
ja
fsubr
and
pop
jbe
sbb
in
mov
jo
jecxz
or
stos
xor
ss
int3
nop
data16
jne
xchg
add
arpl
xchg
jnp
or
ret
addr16
call
loope
xor
pop
jns
sbb
sub
jle
sub
pop
pop
adc
mov
sar
cmp
mov
adc
dec
nop
mov
aas
lcall
cltd
inc
loope
add
imul
sbb
out
pop
jne
xlat
fstl
fstps
mov
add
xor
nop
fcomps
fstpl
lea
sti
xchg
jg
jbe
adc
xchg
pop
xlat
fisubl
add
mov
call
sbb
repnz
mov
xchg
int
xchg
and
dec
test
and
sbb
test
or
pop
in
sub
xchg
std
add
sarl
insl
shll
stos
inc
ret
mov
cmp
pop
xor
aad
outsl
pusha
xor
inc
xor
sub
or
testb
fstpl
sbb
sub
test
sti
push
ja
cmpsb
lret
mov
sub
and
jb
scas
mull
adc
cmpsb
push
xchg
scas
xchg
in
mov
idivb
and
pop
loop
sub
lods
mov
rol
add
pop
shrl
mov
sbb
and
rcrl
sti
xchg
cmpsb
inc
stc
sbb
popa
xor
inc
pop
dec
sub
jae
rclb
icebp
xchg
push
add
inc
mov
cmp
lret
sub
lea
or
test
jnp
leave
popf
ret
xor
or
lahf
jmp
stc
hlt
fcoms
push
and
or
adc
hlt
cmpps
ret
cmpsl
clc
lea
pop
adc
jae
insb
and
xchg
mov
out
out
daa
push
xchg
inc
stos
mov
add
fwait
in
out
add
data16
jne
xchg
iretw
dec
mov
cmp
xchg
sbbl
xchg
fbld
xor
xor
adc
icebp
fdivs
fidivrs
lret
leave
cli
add
cmpsl
push
sbb
cmp
shll
pop
dec
pop
test
jns
into
mov
ffree
lret
cwtl
nop
ret
insl
cli
jb
loope
ficomps
int3
dec
push
and
sti
js
mov
test
clc
lahf
rcrb
xchg
sti
es
fdivrl
ds
sbb
shl
mov
mov
inc
cmpsb
shl
outsb
push
ds
xor
adc
and
outsl
cli
hlt
jbe
mov
mov
inc
inc
push
push
lods
mov
je
leave
mov
div
sbb
dec
sub
int3
and
push
insl
leave
je
xor
cwtl
movsl
in
out
fistps
sbb
mov
pop
mov
and
xor
rol
hlt
add
cmp
fldl
mov
jge
push
xchg
sub
ret
pop
and
inc
and
div
cltd
loop
add
cmpsb
pop
movsl
scas
mov
xor
and
xchg
inc
xorb
jmp
adc
in
bound
sbb
push
pop
jb
cmp
rorl
out
and
dec
xchg
jnp
cwtl
mov
outsl
cmpsl
dec
mov
inc
dec
mov
push
mov
gs
mov
incl
imul
xor
repnz
add
and
lock
je
jecxz
gs
mov
imul
jbe
outsl
push
loop
or
insl
das
dec
sub
pop
mov
jmp
or
xchg
jg
rorl
push
movsb
dec
jnp
xchg
sarl
sbb
into
xchg
ror
or
xchg
sub
jo
xor
adc
fldln2
sbb
subb
mov
push
mov
jmp
xor
dec
or
fildll
or
cmpsl
push
movsl
mov
shlb
xlat
dec
icebp
or
fwait
inc
mov
test
loopne
es
popl
shlb
pop
popf
sub
adc
pop
fists
shlb
push
pop
fnsave
mov
sub
in
fs
add
mov
mov
imul
into
dec
ja
imul
jb
cmp
mov
daa
push
dec
cltd
add
outsb
lods
in
testl
inc
jle
fsubrs
adc
mov
shrl
push
mov
add
cmc
movsl
sbb
push
imul
sub
pop
jmp
add
addr16
dec
enter
cltd
es
xchg
sahf
mov
rol
inc
or
out
pop
repz
pop
push
xor
pop
xchg
jl
xor
imul
pop
or
cmp
cmc
orl
call
xchg
xor
sbb
push
jg
shll
adc
adc
mov
loope
outsl
adc
jl
popa
sub
push
jge
push
lahf
testl
es
jae
icebp
inc
mov
mov
or
push
xor
pop
leave
and
enter
in
loopne
jmp
or
fmulp
mov
mov
push
data16
pop
pop
sub
jecxz
adc
int3
sbb
fstps
mov
je
jg
add
fmull
int3
mov
int3
push
push
mov
pop
out
sub
jle
push
mov
jecxz
repz
xchg
cli
xor
xchg
lock
sbb
movsl
mov
ret
lock
cmc
cmp
daa
or
aas
aam
cmp
xor
std
rcr
imull
into
js
xor
push
out
adc
dec
mov
sti
lea
xor
mov
orl
rorl
movsb
add
movsl
push
sarl
ret
in
push
stos
mov
mov
lcall
push
push
cmp
test
pop
mov
or
push
es
bound
and
mov
push
mov
mov
ficompl
test
frstor
sbb
bound
push
pusha
outsl
lock
and
dec
cs
or
stos
mov
inc
xchg
rorl
jne
push
inc
in
jle
adc
cmp
daa
mov
sbb
adc
and
adc
pop
jno
ret
sub
sbbl
sti
or
inc
cmp
leave
pop
dec
repz
adc
lcall
push
jnp
or
jae
dec
xchg
test
pop
jb
movsl
cmp
daa
mov
hlt
inc
inc
jb
stc
jecxz
dec
imul
cmp
push
inc
cwtl
mov
pop
mov
fdivrs
mov
cmp
data16
add
stos
pop
sbb
cwtl
xlat
out
push
or
cmp
xor
and
pop
push
inc
fidivrs
lods
dec
mov
dec
cmp
mov
lret
fildll
adc
popf
cwtl
sbb
fidivl
inc
xchg
pusha
cmp
xchg
lret
popa
nop
aam
dec
aas
cmpsb
xchg
out
pusha
xchg
daa
mov
mov
shl
sbb
lock
and
pop
lret
pop
xchg
fwait
pop
push
fistps
add
aam
fbstp
cmp
jmp
ss
sub
mov
xchg
mov
mov
mov
dec
xchg
pop
mov
sbb
push
jno
add
lret
pop
lock
sub
mov
out
mov
mov
or
and
stc
outsl
push
je
pusha
mov
jp
lds
xor
xchg
mov
int
mov
add
inc
inc
pop
in
popf
mov
add
xchg
mov
adc
fildll
sub
dec
inc
jg
cmpsl
jmp
cwtl
push
xor
sub
mov
add
push
jo
xchg
sub
push
sbb
xlat
insl
xchg
inc
mov
push
add
push
push
sbb
mov
sub
scas
xor
lret
mov
rolb
lret
adc
mov
daa
popf
jg
push
ret
jo
xchg
xchg
test
sub
xchg
dec
or
jno
cli
lret
rorb
fistps
inc
cmp
xor
jge
ret
sub
adc
pop
cs
xchg
inc
mov
sti
xchg
cmp
mov
mov
mov
jae
cmp
int3
int
sbb
pop
loope
or
shlb
imul
cmc
lods
mov
add
sahf
and
lahf
xor
popa
bound
jbe
and
outsl
cmp
xor
icebp
add
cld
mov
jne
mov
jo
in
rol
xchg
stos
push
mov
jne
mov
imul
adc
inc
orb
and
mov
in
push
inc
jmp
inc
shl
jns
pop
rorb
ret
testb
mov
add
popa
cmp
xor
sbb
adc
adc
rorl
lret
sub
sub
je
arpl
sti
inc
jno
insb
pop
repz
enter
arpl
jge
int
lock
push
mov
adc
cmp
cwtl
mov
sub
das
push
sub
jg
rcll
xchg
pop
push
fs
lods
aas
mov
scas
xor
xchg
bound
cmp
add
sbb
xor
fucomp
outsl
aaa
mov
in
xchg
and
call
push
fdivr
mov
stc
inc
ficomps
leave
popf
mov
mov
jp
sub
jmp
jnp
int3
lret
fcom
movsl
ljmp
int3
xor
ret
nop
xor
or
add
shrl
lret
xor
imul
xchg
push
and
push
push
fs
mov
mov
aas
aad
jno
sbb
mov
jnp
and
arpl
cmc
xor
mov
and
mov
fldt
sub
xlat
mov
mov
pop
xchg
dec
mulb
mov
lcall
cwtl
outsl
sub
pop
aaa
out
sub
mov
sbb
xchg
cld
add
pop
rclb
jns
cmp
cmpsl
cmpsb
dec
jne
push
jns
xor
icebp
mov
and
push
mov
pusha
aad
pop
xchg
add
mov
pop
jge
out
and
mov
pop
mov
ss
push
fcomps
addr16
insb
and
xchg
std
pop
inc
cli
xchg
out
cld
iret
cld
jmp
cltd
add
test
popfw
cmp
mov
inc
mov
ss
mov
pop
add
sti
jle
adcl
pop
nop
xchg
sbb
stos
pop
mov
lcall
mov
jae
or
lds
je
pop
dec
sbb
movsb
xchg
insl
sar
sub
mov
in
hlt
outsl
repnz
push
pop
xchg
in
sbb
orb
cld
cmp
adc
inc
dec
imul
jns
sub
cltd
aaa
add
xchg
mov
mov
icebp
xchg
push
mov
dec
sbb
dec
scas
dec
inc
add
mov
inc
fs
outsl
pop
dec
dec
and
lahf
adc
add
clc
lds
cltd
or
mov
xchg
push
scas
adc
lret
or
jbe
or
mov
insl
mov
xor
fbstp
jnp
imul
iret
pushf
xchg
rorb
cmpb
idivb
inc
pop
iret
dec
imul
mov
xchg
pushf
lods
rcll
lods
push
xor
pop
xor
jns
xchg
mov
sarl
icebp
dec
loop
lret
jecxz
mov
test
into
sbb
out
pop
test
pop
mov
xchg
clc
test
adc
pop
sbb
fwait
cltd
std
rol
and
push
pushf
in
fdivp
daa
jae
int
cmpsl
lds
addr16
mov
xor
xchg
js
sahf
test
cltd
xlat
shlb
add
adc
push
pop
xchg
push
cmp
mov
in
icebp
fstps
out
imul
dec
inc
fldl
sub
lds
jle
jp
loop
lods
fcompp
mov
push
push
fwait
test
sarb
cli
mov
int
addr16
fsubs
ret
lock
and
ja
adc
xchg
ret
mov
inc
ljmp
mov
cmpsl
mov
je
pop
filds
add
daa
scas
adc
addb
xor
jle
adc
push
outsb
movsb
lods
sti
lcall
jg
subl
adc
outsl
cwtl
int3
xor
mov
call
jo
cmova
jle
and
inc
std
push
mov
pop
js
xchg
aam
mov
les
mov
ja
dec
sub
int
pop
pop
sub
sub
push
dec
pop
jl
int3
mov
loopne
fwait
into
fildl
les
mov
fs
data16
xchg
sbb
sub
out
adc
inc
sbb
pop
xchg
and
jno
cs
add
xchg
push
xchg
popa
inc
xorl
cmp
pusha
outsb
sub
aaa
xchg
jmp
mov
mov
push
xchg
sub
push
jo
cmp
and
adc
addl
ret
or
cwtl
test
lahf
cmp
jl
inc
int3
out
or
mov
push
jp
les
or
mov
cmp
lods
mov
lahf
lods
or
insb
dec
dec
mov
inc
dec
pop
jbe
ret
adcb
add
int
mov
or
fsub
aad
pop
pop
mov
lock
mov
mov
pop
mov
cwtl
cmp
or
in
lahf
pop
outsl
aad
pop
cwtl
in
sub
lds
inc
sub
mov
cmpsb
les
xlat
cmpl
test
mov
adc
inc
mov
pop
lds
and
pop
pop
frstor
mov
test
cmp
mov
data16
fsubrp
mov
popa
ss
pop
les
cmpsb
lret
imul
xor
pop
aam
push
rol
push
push
aam
sbb
xchg
loopne
adc
addb
scas
push
ja
addr16
js
dec
cmp
aad
add
mov
sub
iret
andb
fsubrp
sbb
ja
push
dec
adc
sbb
jecxz
xor
jno
or
lock
dec
mov
add
in
iret
shl
sub
xor
incl
push
lcall
dec
mov
mov
fsubp
add
movsb
int
aaa
js
scas
rolb
cmp
mov
and
lea
int
dec
outsb
and
test
pop
sbb
mov
lcall
in
lret
cltd
stos
add
cmp
and
and
std
jle
lahf
or
lock
ficompl
jb
mov
push
mov
push
rcrb
sbb
inc
pop
aam
call
sub
jnp
inc
xchg
xor
push
jecxz
pop
into
cmp
sub
xlat
cmpsl
dec
orb
push
xchg
add
xlat
loop
stos
nopl
imul
push
jge
lock
leave
in
mulb
jl
sbb
jmp
cmpsb
push
jae
mov
jnp
dec
pop
pop
dec
mov
add
pop
fmul
or
mov
pop
out
jne
aad
dec
jbe
stos
inc
and
imul
cmp
mov
dec
sub
sbb
dec
sub
push
pop
push
jecxz
hlt
mov
in
jecxz
add
add
loop
or
out
jle
adc
pop
fld
ss
push
push
xlat
into
outsb
jecxz
jb
aas
cwtl
clc
jge
mov
sbb
scas
or
inc
cltd
xorb
in
pop
decb
movsl
adc
fildl
pop
jns
shrb
cwtl
xchg
add
sub
xorl
cs
and
aas
cmp
and
les
pop
pop
jb
jle
loopne
xorl
pop
jns
cmp
fisttpll
notl
adc
adc
pop
inc
xchg
add
push
cmc
mov
sub
xchg
mov
and
mov
jmp
push
stc
push
push
iret
lods
mov
orb
leave
ds
mov
push
adc
jb
gs
cmp
in
loope
xchg
cwtl
leave
sub
adc
fadd
aas
aaa
js
inc
ds
push
inc
iret
xor
fistpl
lahf
mov
in
lcall
js
mov
or
mulb
or
xlat
xchg
or
outsl
cmc
pop
pop
sbb
lods
in
pop
in
scas
js
pop
cli
ja
in
dec
inc
mov
cmp
cmp
or
shrl
sub
jl
repz
pop
icebp
fiadds
xchg
mov
push
pop
bswap
or
push
cmp
inc
fcomi
and
dec
jnp
sbb
xchg
mov
leave
leave
dec
xor
sub
jnp,pt
mov
mov
jmp
outsb
xchg
sti
std
cwtl
imul
nop
mov
pop
fldl
jbe
inc
sbb
sahf
jno
mov
sti
mov
adc
dec
or
or
inc
inc
mov
jb
push
push
and
add
mov
push
lods
and
outsb
sbbb
aaa
mov
push
ja
mov
int3
in
stos
cmpsl
adc
add
jmp
mov
lret
mov
out
rorb
rcl
sub
inc
fdivl
inc
scas
push
rol
sub
pusha
cmpl
stc
sbb
in
ds
addr16
fs
sub
dec
fisubrl
xlat
insb
dec
stos
add
pop
popf
lock
cmp
lcall
push
inc
std
lcall
daa
shlb
imul
mov
or
jnp
scas
add
and
mov
sbb
add
dec
or
mov
mov
sub
pop
push
jbe
addr16
out
xchg
pop
fcompl
mov
out
sbb
hlt
sbbb
popa
mov
test
imul
mov
pop
cmpsb
or
out
loop
cmp
and
repz
imul
and
out
xchg
push
mov
mov
leave
popa
out
pop
les
shlb
mov
lret
add
cmp
addr16
addr16
cmp
xchg
or
inc
jo
inc
leave
inc
jl
inc
pop
inc
movb
and
add
neg
xor
adc
sbb
imul
stos
and
lcall
push
jo
inc
or
mov
pushf
xchg
nop
jbe
jecxz
push
jmp
or
icebp
loope
sub
sarb
pop
mov
jge
xor
xor
xchg
mov
xor
fnstsw
add
loop
orb
adc
sbb
stc
fwait
cmp
dec
xchg
mov
sbb
dec
pop
cmp
add
and
cmp
jno
std
add
add
pop
add
xor
jnp
and
ds
insb
push
inc
outsb
jns
dec
sub
stc
sub
rcll
andl
lret
or
or
pusha
xchg
mov
mov
mov
pushf
mull
push
test
int
or
aaa
rclb
pop
sbb
xchg
imul
push
and
pop
xor
ror
jae
adc
inc
mov
dec
in
sub
pop
stos
inc
cmp
jo
pop
movsb
pop
dec
lahf
sub
pop
ljmp
imul
sub
ljmp
or
dec
test
xchg
mov
mov
icebp
mov
ljmp
out
fldl
lret
aad
fldcw
pop
out
imul
lds
insb
outsl
xchg
push
jmp
xorb
out
hlt
xchg
mov
pop
and
sbb
push
sbb
and
or
les
lcall
and
mov
xchg
xor
out
jle
jnp
shll
dec
iret
scas
fldl
adc
add
sub
cmpl
aad
jb
push
les
add
std
dec
pop
push
std
mov
xchg
inc
add
cmpb
out
cmpsl
repz
mov
jns
test
adc
pop
bound
dec
test
xor
roll
mov
stos
mov
cltd
iret
pop
mov
shrb
inc
cwtl
mov
ljmp
sub
xor
cmc
popa
outsb
jnp
xorl
cltd
iret
mov
dec
sbb
aaa
arpl
add
fisttps
clc
mov
outsl
clc
and
fstps
daa
sbb
cmp
xchg
lock
jno
insl
cmp
sbb
mov
push
xor
loop
lret
hlt
push
sbb
push
cltd
push
inc
andb
add
bound
or
dec
inc
push
jne
pop
adc
jo
bound
aas
mov
and
xor
mov
push
jbe
lods
imul
gs
xchg
sbb
into
mov
push
inc
movl
popf
add
lret
and
or
jb
pop
scas
xchg
dec
sbb
cmp
jl
lret
imul
hlt
loopne
pop
insb
jno
js
aas
hlt
in
cwtl
jae
mov
adc
inc
dec
pop
cwtl
dec
iret
and
shll
out
push
adc
mov
jecxz
cmc
stc
ret
mov
arpl
sub
cmp
ja
and
int
sbb
pop
jmp
cmc
mov
sub
stos
dec
mov
rorb
in
fwait
xchg
pushf
sub
stos
addr16
js
aad
mov
mov
xor
das
aam
dec
clc
and
or
addb
sub
cmp
cmp
adc
out
adc
dec
and
push
notl
mov
mov
fsubrl
lds
xor
cmp
mov
imull
test
popa
cmp
sub
sbb
ds
stos
pop
mov
mov
sahf
and
mov
adc
or
in
jnp
jae
jle
lcall
dec
daa
inc
mov
xchg
mov
jo
scas
add
inc
mov
rep
or
test
psubsb
fucomp
out
not
pusha
mov
adc
call
add
js
push
jno
jp
data16
adc
xchg
cwtl
das
add
enter
xor
std
add
mov
adc
js
js
pop
es
dec
mov
cmpsl
adc
out
jns
insb
loop
loope
mov
mov
mov
jno
jb
loope
movsb
leave
nop
ret
ss
add
dec
push
or
pop
aad
and
dec
sahf
jnp
jge
xor
icebp
popa
iret
inc
jecxz
sbb
cmpsb
loopne
push
xor
push
out
cmp
cwtl
sbb
mov
push
loope
push
stos
cmp
fsubr
aaa
xor
js
jg
mov
imul
xchg
mov
sub
add
push
push
in
sbb
stc
pop
aas
cmp
pusha
sahf
lcall
dec
decl
xchg
shlb
dec
add
dec
xchg
imul
loope
mov
fs
mov
call
neg
xchg
fwait
push
mov
push
add
lcall
shrl
cltd
xchg
push
push
ret
dec
stos
mov
fwait
or
pop
adc
addr16
jge
sbb
mov
xchg
xadd
mov
out
jb
imul
lods
test
cld
dec
pop
cmc
les
ret
ljmp
pop
nop
repz
data16
mov
mov
mov
xchg
or
mov
sub
ljmp
sahf
and
ds
mov
sbb
cmp
sbb
jecxz
lds
mov
test
iret
and
push
cmp
frstor
insb
ss
lret
je
andb
pop
mov
cmp
adc
mov
dec
mov
arpl
stos
outsl
fs
mov
jb
pop
mov
sub
fists
dec
xchg
mov
dec
icebp
jne
stos
fadd
xchg
xchg
mov
clc
rorl
imul
inc
mov
out
push
pop
mov
or
mov
xlat
sbbb
xchg
mov
cmp
pop
push
jmp
cmpsb
dec
inc
or
cmp
aad
aam
and
or
or
dec
jbe
lcall
add
or
dec
push
ss
push
shll
sbb
adc
aad
adc
sbb
pop
scas
mov
xchg
pop
sub
pop
cmp
stc
jnp
push
mov
push
xchg
xor
popa
inc
xchg
test
or
pop
jge
or
inc
sbb
out
jg
push
aam
mov
sbb
lock
lahf
popa
cmp
adc
sub
stos
jo
add
jnp
movsl
les
jns
jg
mov
jecxz
hlt
inc
inc
ja
jle
mov
leave
mov
cld
sub
scas
push
repz
ficoml
jb
ret
leave
inc
or
jle
xor
inc
mov
xchg
daa
lea
jg
movsb
cmpsb
fbld
cmp
and
and
ficoml
andb
rep
push
cmc
stos
outsl
cmp
cmp
or
jae
adc
xchg
test
mov
push
dec
loop
sub
lret
jbe
xchg
cmp
jecxz
adc
or
fldenv
enter
or
cmpsb
cmpsb
fcom
mov
fildl
cmpl
mov
lahf
jnp
inc
inc
daa
aas
push
jnp
jno
data16
dec
mov
pslld
xchg
jg
aas
add
inc
xchg
jns
fbld
sarb
in
adc
fimull
arpl
mov
mov
std
shll
xor
frstor
and
shlb
add
lock
push
xlat
arpl
and
shrl
jp
add
outsb
mov
cmp
xchg
scas
push
mov
push
divl
inc
xchg
mov
sub
sub
xor
fistl
mov
lcall
add
jl
movsl
mov
push
mov
fldenv
imul
inc
mov
fadd
and
stc
daa
fdiv
icebp
dec
les
bound
mov
dec
and
add
inc
sti
mov
mov
fbld
mov
rorl
cmpsl
test
cltd
mov
jae
rcrl
pop
cld
cmp
movsl
pop
pop
sbb
add
push
call
jp
popa
jbe
sti
pushl
mov
or
lret
loope
or
loop
stc
les
clc
jae
loope
and
add
movsb
inc
cltd
comiss
fimuls
mov
xor
in
jg
mov
mov
cmc
stos
data16
mov
pop
mov
cmp
fwait
cld
int3
or
mov
cmp
iret
push
bound
dec
xchg
dec
testb
aaa
fwait
daa
sbb
rcll
rep
xchg
aam
int
dec
fs
sub
insb
pop
sub
or
or
mov
inc
loop
popa
jg
dec
mov
movsl
fstps
es
sbb
rolb
xchg
rolb
iret
cli
jb
jbe
lock
xchg
sub
dec
mov
jl
push
sub
pushf
leave
lock
sbb
sbb
jg
cli
aaa
sub
or
mov
jbe
shll
lock
mov
addr16
movsb
xchg
test
stos
es
or
or
jbe
push
and
in
pop
daa
ret
adc
xor
addr16
xchg
xchg
inc
out
cmp
mov
es
cmc
incb
mov
int
mov
xor
mov
push
pop
cmpsb
cmp
jae
or
sub
mov
cmp
fcomip
dec
sub
inc
mov
cmp
aad
and
push
jmp
icebp
inc
inc
js
mov
inc
imul
xchg
add
pop
out
pop
sbb
xchg
outsl
lcall
and
mov
push
xchg
mov
cwtl
mov
hlt
sbb
mov
call
add
xchg
and
push
mov
or
pop
out
inc
dec
pop
mov
sbb
sbb
sub
xor
pop
jg
movsb
enter
hlt
cmpl
cld
incb
or
std
push
jae
pop
mov
lock
imul
cs
icebp
fldt
shlb
jle
popa
mov
fcoml
or
push
mov
dec
subl
ja
mov
and
pop
iret
adc
in
arpl
movaps
jne
push
mov
rolb
aaa
sub
sub
pop
jp
into
jl
mov
jb
mov
cmp
sbb
xor
shlb
pop
loop
sbbl
push
xor
mov
mov
jl
and
xchg
aam
pop
push
sbb
push
inc
or
adc
gs
cs
in
jbe
push
fwait
mov
in
pop
sbb
add
aad
cmp
fdivrs
loop
pop
stc
clc
add
iret
pop
xchg
xor
out
adc
ficoms
cmp
int
cmpsb
divb
pusha
movsb
jmp
mov
fs
mov
push
lds
jle
mov
in
inc
pop
loop
dec
lcall
and
into
aaa
ja
pusha
sbb
jns
insl
sub
push
jae
add
sbb
scas
inc
jnp
cmp
and
subb
mov
rcrb
int
push
out
sbb
lea
mov
lret
xchg
sub
stos
test
jo
push
stos
mov
aas
leave
xor
jbe
jl
adc
loop
pop
sbb
xor
push
and
pop
inc
add
jae
shl
or
dec
stc
fdivs
adc
lret
mov
outsb
movsb
cmp
xchg
adc
and
imul
stc
iret
jp
pop
sub
add
mov
dec
push
nop
jmp
fcomps
js
lods
dec
dec
inc
rclb
push
pop
gs
mov
cmpsb
sbb
sbb
pop
sub
int
or
push
bound
mov
lock
pop
lea
jb
jle
push
mov
mov
lds
lock
sti
xchg
jmp
sub
xor
or
movsl
add
push
in
rolb
mov
repnz
sub
sbb
xchg
test
int
push
imul
xchg
jp
into
int
sbb
call
sub
pusha
add
pop
mov
mov
dec
ss
push
aas
movsl
repnz
xchg
jne
out
jl
dec
in
daa
mov
cmp
mov
in
push
mov
shll
jg
sbb
addr16
stc
loop
push
inc
adc
xchg
andl
inc
subl
push
insl
dec
adc
loope
rcrl
jp
pusha
jle
in
lea
out
push
mov
push
enter
aad
dec
ja
dec
mov
idiv
stos
adc
inc
pop
jbe
or
scas
mov
cld
push
push
add
fs
andl
push
sbb
xchg
in
mov
cmc
sbb
jno
xchg
inc
sahf
adc
popa
mov
in
mov
push
inc
clc
lods
insl
jae
xchg
ja
out
cmp
std
in
sub
lods
in
cmpl
std
dec
adc
daa
push
lds
lods
repz
pop
mov
mov
mov
loope
sti
pop
sub
cltd
dec
imul
mov
lods
push
pop
and
push
xchg
bound
mov
mov
std
je
stos
shll
or
xchg
add
arpl
jo
cmpsb
sub
push
enter
push
mov
imul
sbb
ret
mov
mov
insl
mov
xlat
inc
es
inc
jl
test
pop
fisttpl
daa
cmp
mov
mov
mov
insb
dec
jge
loopne
xchg
mov
mov
mov
mov
mov
ljmp
and
insl
testl
loope
adc
mov
loope
cmpsb
sti
subl
in
aad
sbb
xchg
mov
jecxz
xchg
stc
pop
fstps
dec
in
rol
push
imull
test
insl
or
mov
push
xchg
repnz
lcall
sub
sub
mov
inc
lds
jnp
add
int
xchg
xor
dec
fistpl
or
pop
in
inc
pop
sbb
sbb
sub
or
sbb
inc
cmpsl
test
addr16
or
inc
pop
inc
sbb
sbb
lcall
call
mov
call
fiadds
sbb
pusha
pop
xchg
or
and
jle
mov
dec
mov
mov
or
in
push
lret
je
pop
jecxz
dec
daa
add
int
lock
cmp
add
and
xchg
xchg
cmc
push
notl
add
test
cld
in
cmp
stos
dec
test
cwtl
lock
je
ret
arpl
xchg
or
jmp
cmpb
test
and
jmp
push
in
ljmp
scas
jmp
sub
mov
mov
push
and
dec
push
scas
fs
push
jmp
fistl
xchg
adcl
sbb
cmp
add
pusha
add
mov
or
and
aas
call
jl
mov
xorb
push
cmpsl
pop
cs
or
int3
inc
pop
push
add
xor
sbb
mov
pop
xor
xchg
andl
out
pop
cs
nop
jmp
xchg
sbb
or
push
push
mov
pop
or
int
mov
divb
sub
inc
sub
mov
sti
push
fsubl
cwtl
pushf
add
add
sub
bnd
jp
iret
icebp
pusha
sahf
pop
lcall
dec
mov
push
pop
in
or
and
inc
fstl
pushf
pop
loope
and
lock
dec
lret
sbb
xor
ljmp
add
stos
xchg
and
sub
cmp
sub
push
mov
sbb
sub
xlat
cmpsl
xor
sbb
fcomps
jbe
mov
push
fisttpl
fchs
inc
cltd
inc
bound
or
loop
xorl
cmpsl
jo
and
or
movsb
mov
jnp
push
rolb
hlt
or
inc
inc
push
push
pop
movsl
and
adc
or
adc
mov
and
inc
pushf
rolb
jge
jle
test
push
sahf
push
mov
bound
pop
cmp
cltd
gs
dec
push
or
ds
push
mov
pop
xchg
js
out
inc
or
daa
or
add
inc
xor
inc
or
inc
add
mov
inc
mov
xchg
cmp
xlat
mov
nop
pop
das
cs
xchg
sub
xor
loop
leave
cmp
jecxz
fcmovnb
sbb
into
add
and
add
dec
dec
add
or
int
ret
repz
mov
in
mov
mov
imul
sbb
push
mov
shrb
mov
jp
xor
loop
adc
or
pop
sbb
xor
ss
hlt
loopne
or
xor
jg
mov
mov
cmpb
sbb
mov
enter
pop
insb
inc
dec
cmpsl
ljmp
insb
ljmp
lds
inc
sub
or
call
cmpsb
xchg
mov
push
or
das
inc
es
cld
and
xchg
addl
sahf
mov
xchg
es
loope
push
fldenv
iret
int3
fwait
mov
dec
add
xor
sbb
in
lea
jbe
fstpt
jmp
in
push
cmpsb
aad
sub
or
fucomi
insl
lcall
mov
ja
das
imul
cmp
test
repz
adc
inc
mov
lcall
xchg
pop
jl
add
push
mov
jmp
add
xor
or
mov
mov
jbe
xor
jne
mov
imul
dec
aam
rcrb
pop
xchg
xchg
out
mov
add
pop
pop
aam
sbb
xor
test
ljmp
jecxz
jb
push
mov
in
sbb
repz
inc
xor
sbb
outsl
sbb
scas
jl
movsb
or
mov
pop
fiaddl
jge
jne
addr16
sbb
push
cmp
add
fxch
ss
jns
enter
rclb
cmp
je
and
sub
cmpl
jnp
push
cmp
xor
mov
idivb
stos
add
fs
inc
jo
mov
test
imul
clc
sti
or
incl
sbb
popf
dec
sub
rcrb
xchg
xchg
adc
lock
push
addl
test
rcrb
xchg
xor
lods
mov
mov
inc
add
mov
sub
or
enter
daa
lea
adc
push
inc
ds
mov
lods
xor
movsb
mov
mov
and
jbe
jp
cli
lods
fadds
lahf
pop
pop
repz
jge
dec
mov
or
cmp
dec
xchg
inc
sbb
lret
lods
les
push
nop
icebp
hlt
adc
dec
cwtl
add
add
lds
pushf
sahf
mov
jp
fs
rol
lret
movsl
sbb
mov
cmpsb
xor
xor
arpl
mov
xor
xor
rolb
add
pop
iret
pop
cwtl
inc
outsl
mov
mov
fisttps
adc
mov
cmpsb
sbb
es
rcll
in
add
ret
pushf
inc
test
adc
inc
dec
or
push
stc
shr
sahf
popf
and
incb
out
mov
cmp
jne
int
xor
push
cltd
and
mov
in
mov
add
add
jl
lods
inc
pop
add
jno
in
movl
cmp
mov
int
sub
mov
mov
std
pop
push
frstor
push
idiv
push
je
xchg
xor
idivb
pop
lds
mov
aad
add
icebp
jb
stc
mov
insb
pop
xor
mov
outsb
in
sub
insb
and
cmpsl
jo
push
xchg
mov
neg
cmpsl
cmp
lret
cltd
push
test
cltd
iret
or
mov
mulw
jg
icebp
pop
sbb
stos
inc
fdivrl
pop
xlat
cmp
jo
sahf
mov
push
rorb
imul
or
or
add
add
xor
pop
mov
mov
arpl
test
ficompl
dec
push
adc
sub
add
lods
ret
idiv
fsubrp
rol
out
sub
jnp
mov
rolb
or
adc
xchg
xchg
orl
push
and
bound
sub
ss
out
push
es
dec
inc
sbb
dec
je
mov
add
cmpl
out
fbld
dec
cli
adc
jge
or
rorl
popf
mov
fmul
popa
jbe
pop
inc
jg
dec
add
in
adc
push
jo
loope
add
es
test
xor
cld
in
shrl
cmp
or
hlt
xor
cmp
jns
adcl
pop
add
ja
test
adcb
xchg
aam
jecxz
or
inc
push
mov
jno
xorl
loope
mov
pop
aam
imul
test
inc
int
xor
jns
push
inc
daa
cld
arpl
daa
push
mov
subb
push
and
mov
loopne
mov
rcll
lock
mov
nop
popf
imul
pop
sbb
push
add
cmp
cmpl
jp
sub
push
dec
inc
pop
call
hlt
xor
cmp
sbb
dec
xchg
sub
addb
fnstcw
and
add
pop
adc
dec
xor
lret
ja
inc
mov
jg
mov
fldenv
or
xchg
xor
push
mov
lcall
sarl
add
or
mov
daa
push
mov
pop
inc
mov
ret
jge
mov
mov
mov
outsb
sub
dec
mov
call
mov
mov
mov
ret
dec
mov
out
repnz
and
xor
enter
popa
add
jno
sbb
mov
pushf
cmp
dec
rorb
adcl
inc
orb
mov
inc
mov
imul
adc
xchg
lods
cmp
mov
add
mov
mov
mov
lea
pop
les
nop
or
pop
fldt
dec
xchg
dec
repnz
pop
or
jmp
dec
xchg
or
xor
mov
insb
leave
add
inc
movsb
and
in
xchg
xor
jo
loopne
pop
jmp
add
out
repz
mov
repnz
and
dec
sbb
xchg
adc
sbb
insl
cli
lahf
sub
les
pop
cmp
mov
jns
push
lea
ds
popf
aas
push
negb
cmpsl
sbb
ss
add
data16
shl
orl
aas
jbe
into
lea
fistpll
js
adc
test
mov
jne
push
add
fdiv
mov
pop
aad
adc
out
mov
and
push
loop
sub
sub
fnstcw
cltd
pop
popa
clc
push
mov
or
and
dec
and
fistl
cmp
imulb
dec
cmc
ss
call
test
cmp
pop
sub
dec
and
int
jp
sarb
jmp
inc
or
and
mov
les
shrb
dec
sahf
dec
push
xor
cmpsb
mov
imul
fimuls
inc
mov
insb
mov
xor
pop
cmc
insb
cmp
arpl
repz
cmpsb
xchg
adc
cmp
pop
or
addl
jo
mov
inc
mov
mov
dec
lret
pushf
push
cmp
ret
in
in
jo
push
xor
push
cmpsb
movsl
push
into
lret
ss
mov
jg
push
dec
lock
ss
sub
in
roll
es
jo
mov
lock
aaa
mov
push
mov
dec
sbbl
inc
add
xor
cs
inc
pop
stc
sbb
lret
push
ljmp
xchg
jecxz
ljmp
mov
iret
aad
je
lahf
mov
out
inc
pushf
negl
dec
gs
jns
fld
pop
test
mov
and
and
repz
xchg
xor
push
shlb
jl
adc
movsl
fwait
scas
mov
das
leave
pop
fidivrs
pop
jbe
mov
int
xor
sub
mov
inc
add
jne
add
cltd
shll
sbb
and
pop
gs
call
rcrb
mov
movsl
jne
inc
push
out
mov
push
pop
andb
int3
xlat
dec
shlb
inc
stos
mov
cmpl
fwait
movsl
and
jp
cli
jl
mov
cmp
cmc
mov
xchg
rcll
cli
test
rcl
mov
aaa
sub
in
aaa
fstp
sbb
int
sahf
scas
mov
xorb
gs
out
and
ss
mov
dec
sbb
data16
ret
loop
jne
or
loop
jle
fiaddl
push
daa
jmp
pop
pop
int
roll
mov
mov
call
inc
jp
scas
cmpsl
scas
es
lret
lods
inc
cld
sbb
outsl
out
dec
mov
inc
hlt
xor
lcall
cmpsb
push
inc
scas
mov
or
or
inc
mov
rol
pusha
push
loop
xchg
mov
jle
push
imulb
jnp
movl
mov
or
mov
insb
cmp
cmp
mov
dec
and
cmp
in
dec
mov
dec
stos
ja
das
adc
jl
fsubrs
inc
sub
clc
pusha
dec
pop
xor
xor
loop
mov
andb
push
push
and
mov
bound
cmp
sub
hlt
inc
enter
xor
xchg
jmp
out
ds
xor
or
cmpsl
lea
fadd
dec
inc
cmp
lret
jnp
pop
add
out
lret
dec
push
pusha
rclb
rclb
sbb
insb
aam
push
sub
cmp
je,pn
lods
or
inc
std
xlat
mov
pop
stos
out
iret
cmc
inc
sbb
dec
push
ret
imul
mov
jmp
scas
mov
inc
imul
push
rcr
int3
sbb
scas
sub
or
mov
stos
adc
xchg
into
addb
adc
cmpsl
rclb
movsb
cmpsb
in
pusha
jae
xchg
push
pushf
addr16
jo
push
in
jp
jmp
xor
xor
fwait
pop
daa
mov
pop
int
jbe
add
adc
cmp
ret
fsubl
pop
in
aam
jmp
add
jnp
mov
push
jae
mov
pushf
xchg
int
out
les
cld
mov
bound
sub
fcoms
sub
mov
adc
loope
ret
jle
jl
adc
aam
cmpb
mov
ror
cmpsl
pop
das
stos
bound
push
das
scas
xchg
cmp
pop
rcrl
stos
cwtl
sar
out
imul
xor
pop
int3
lahf
sub
into
pop
push
or
addr16
mov
xor
add
aas
mov
pop
stos
sti
fsubrs
test
xchg
inc
xchg
scas
loopne
jbe
idivb
jmp
cmpsl
clc
cwtl
cs
adc
inc
push
mov
xor
and
xchg
clc
mov
cmpsb
je
ja
sbb
mov
pop
je
pop
insl
inc
push
sbb
jns
jecxz
pop
fwait
iret
jbe
jb
push
shlb
rcr
xchg
daa
inc
push
repz
lods
lock
lcall
add
jbe
push
pop
ss
das
fld
aam
adc
cmp
sahf
in
xchg
rol
sysret
lret
jg
push
pop
dec
pusha
sub
shl
jmp
cld
add
pop
or
xor
mov
cmpsl
nop
inc
mov
sub
bswap
sbb
mov
aas
and
sub
xor
cmp
es
das
std
push
out
push
xlat
test
int3
in
frstor
sub
mov
jnp
sbb
adc
sahf
stc
cmpsl
jns
sbb
lret
stc
dec
imul
dec
dec
divb
push
repnz
dec
mov
and
bound
inc
ret
in
mov
add
jg
bound
xchg
ja
in
repz
sub
jmp
sub
dec
pushf
clc
push
xchg
sbb
sahf
nop
notl
ret
inc
sahf
and
xor
mov
lea
sbb
push
mov
int
sbb
mov
daa
ja
inc
call
sbb
fildl
pop
inc
mov
mov
popf
and
adc
pushf
jne
mov
add
sub
fstl
xchg
sar
outsl
inc
pop
data16
mov
inc
adc
jb
shll
adc
fldt
mov
adc
mov
inc
pop
pushf
lahf
mov
mov
out
and
mov
mov
push
inc
push
inc
xor
jne
jmp
and
add
jo,pn
xor
push
adc
repnz
sub
dec
cld
and
cmp
ret
pop
test
xlat
jo
adc
sub
pop
mov
popf
push
xor
cmp
and
xor
imul
js
imulb
xor
mov
outsl
enter
call
nop
lods
into
sbb
pop
data16
xchg
jno
dec
jno
mov
xor
mov
movd
cmp
and
jnp
pop
out
mov
push
ds
bound
loopne
cmp
in
in
cwtl
in
xlat
lods
mov
in
test
jnp
dec
jge
jge
add
sub
jecxz
sub
xchg
sar
pop
sub
and
imul
cwtl
cld
shlb
jg
jmp
xor
dec
xchg
lock
mov
adc
push
pop
mov
cmp
shl
inc
imul
outsb
out
loopne
sbb
adc
icebp
cmp
in
xchg
daa
jne
stos
push
enter
arpl
mov
jmp
mov
sarb
jb
cmp
fistpll
scas
js
mov
inc
pushf
hlt
daa
lock
stos
xchg
jecxz
inc
mulb
sahf
push
repnz
push
pop
pop
jmp
fistl
sbb
dec
mov
inc
loop
pop
push
push
jb
imulb
sub
dec
pop
mov
xchg
loopne
dec
mov
mov
leave
shlb
push
gs
enter
mov
aam
ficoms
or
inc
adc
in
mov
jg
adc
mov
cli
xchg
jnp
stc
adc
mov
xchg
lret
mov
xor
leave
bound
dec
push
lds
xor
cld
roll
aam
jge
ret
out
orb
or
add
mov
dec
adc
sbb
ja
jns
rcll
cwtl
xlat
loopne
inc
hlt
jg
push
int
and
test
push
xlat
test
int3
fdivr
movsl
mov
and
dec
fistpll
stc
out
lds
cmp
and
aam
cmp
loopne
imul
scas
mov
call
push
lret
jecxz
imul
xchg
ja,pn
adc
insl
lret
xor
sub
and
bound
cld
jno
add
in
out
xchg
pop
or
sub
imul
mov
or
push
pop
out
jp
mov
shr
mov
pop
push
jle
lea
stc
sbb
xor
jbe
push
ljmp
pusha
push
dec
lcall
popa
movsl
inc
cmp
xor
dec
mov
mov
mov
pop
xor
and
adc
jb
movsl
mov
mov
sbb
adc
pop
fstps
mov
xor
cli
push
or
das
mov
imul
adc
jb
js
jo
dec
popf
inc
mov
call
push
add
add
pop
sar
repnz
out
xor
or
pop
inc
push
lock
into
sbb
out
mov
ret
push
inc
mov
mov
xchg
dec
imul
xor
cmp
in
mov
xorb
cmp
mov
movsb
mov
sbbl
pop
cmc
pop
lahf
pop
or
jmp
pop
in
movsb
sbb
pop
or
repnz
popl
jp
adc
inc
mov
lds
lock
mov
jae
nop
cmp
jo
gs
fsubrs
mov
mov
push
hlt
sbb
xchg
ret
xor
lcall
xor
les
adc
sbb
xchg
adc
jne
sbb
sti
and
or
das
cs
sbb
mov
pop
or
ja
sbb
sti
mov
imul
xchg
popa
ja
pop
xor
outsb
mov
pushf
xor
jnp
sbb
mov
les
adc
push
sub
dec
addr16
push
dec
push
inc
std
sbb
fadds
inc
test
ret
ja
mov
cmpsl
idiv
test
out
jo
jl
sbb
mov
cmp
cmpsl
inc
insb
in
pop
mov
aad
mov
mov
movsb
fistl
addr16
jbe
ljmp
mov
mov
jae
mov
mov
xor
xchg
xlat
xchg
jnp
jge
data16
xchg
out
and
scas
cmp
lret
icebp
in
imul
ret
int
sahf
cwtl
bound
dec
mov
pop
mov
test
clc
imul
add
test
div
mov
push
js,pt
mov
xchg
fdivl
clc
fldt
pop
mov
dec
push
sub
idivl
test
xchg
and
xchg
lods
out
gs
insl
mov
pop
pop
icebp
pop
cmp
ret
mov
in
nop
test
sbb
cmp
and
jo
movsb
dec
out
test
aas
lods
out
adc
ja
pusha
mov
sub
and
push
cmp
data16
je
xlat
cs
pop
push
lods
adc
sbb
cmp
pop
xchg
cmp
add
cli
lods
shl
sub
sub
inc
shlb
lods
stos
add
and
inc
jge
movsl
dec
push
clc
cmc
jb
mov
pusha
adc
push
lea
outsb
adc
stos
pop
sub
iret
inc
fstps
dec
outsb
lcallw
sub
xchg
sets
sbb
xchg
call
ljmp
js
dec
insl
mov
xchg
mov
push
iret
xchg
adc
ret
jo
cmpl
imul
xchg
inc
pop
js
in
sub
orl
movsl
mov
dec
and
daa
test
xchg
push
nop
repnz
aad
sub
ret
inc
bound
add
ljmp
pop
fidivrs
aaa
arpl
iret
stc
ret
popa
add
cwtl
and
sbbl
cmp
popf
ret
dec
xchg
xchg
mov
cmc
movsl
nop
fsubl
addl
lds
mov
push
push
mov
testb
push
pop
push
and
jae
mov
mov
into
mov
flds
xchg
pop
jne
fldcw
fs
mov
das
push
mov
testl
leave
aam
xor
sbb
and
mov
xchg
aad
sti
mov
int
push
adc
push
mov
aaa
aad
sbb
mov
movsl
and
pop
inc
and
push
mov
aas
pop
xchg
fbld
mov
test
sub
into
inc
test
lock
int3
out
sar
addr16
xorl
add
int3
push
mov
mov
mov
mov
xchg
and
cmp
mov
lret
enter
pop
xchg
nop
push
frstor
cli
sbb
sahf
xor
in
pop
pop
pop
xlat
pop
sahf
mov
aas
push
jmp
addr16
ds
pop
adc
ret
mov
xor
cli
mov
popa
add
fsubrl
mov
and
loop
outsb
das
push
fisttpl
mov
js
or
mov
stos
sbb
cmp
out
ss
ret
dec
incb
nop
push
out
adc
inc
sahf
push
inc
mov
or
imul
adc
mov
mov
lcall
shl
and
sub
xchg
fstpt
add
popa
data16
aad
lods
or
sbb
mov
adc
xor
lds
push
sti
mov
test
xlat
adc
nop
test
adc
mov
and
mov
mov
not
and
xchg
sub
aad
pop
icebp
push
sbb
cmpsl
xor
jmp
mov
pop
scas
lea
js
test
popfw
arpl
jmp
clc
mov
sbb
xchg
xor
bound
dec
sbb
fstps
or
test
in
fsts
outsb
pop
popf
das
in
loope
mov
pop
mov
fistpl
test
xor
jnp
lea
mov
mov
or
aam
mov
mov
call
sar
lds
or
cmp
imul
mov
scas
lock
or
mov
and
sub
cltd
mov
jecxz
es
repz
adc
xor
or
xor
add
jae
adc
inc
iret
scas
mov
cmp
xlat
cltd
sti
cmp
pop
add
mov
jnp
call
push
leave
dec
popf
mov
inc
adc
shrb
and
sub
jnp
jo
pop
negb
cs
lcall
adc
xchg
or
cltd
jno
cmp
filds
push
sbb
cmp
lret
mov
arpl
iret
stos
push
mov
shrb
and
arpl
xchg
push
int
enter
imul
cltd
mov
inc
jecxz
xor
and
js
sbb
jg
mov
movsb
orl
add
sub
or
jl
out
adc
mov
jle
dec
shl
push
xchg
scas
stc
push
ja
movsl
jmp
push
pop
or
in
pop
jns
and
je
in
dec
pop
jb
adc
add
xlat
out
cmp
sub
dec
imul
icebp
xor
lods
mov
and
jae
into
xor
lods
loope
mov
inc
lahf
das
jb
aaa
sub
or
and
jb
xor
adc
bound
adc
add
push
pop
cld
push
hlt
adc
setle
les
mov
xchg
outsb
cmp
scas
jne
fcmovbe
dec
iret
lods
rorl
ja
arpl
push
mulb
sti
xchg
fnstcw
fisubrs
push
push
adc
cwtl
ret
fwait
push
pop
in
mov
and
cmpsb
cmp
cmpsb
pop
push
adc
adc
inc
inc
cmp
enter
out
jbe
fs
lods
out
add
fsubs
dec
out
into
repz
add
sub
or
sbb
ret
dec
sti
inc
mov
xchg
fwait
daa
fimuls
idiv
push
inc
fcmovnbe
adc
stc
mov
xchg
sub
leave
dec
clc
mov
sub
push
iret
mov
adcb
jne
and
inc
hlt
outsl
jge
cli
out
clc
add
cmp
lcall
aam
addr16
bound
addr16
stos
lock
lods
pop
test
add
lea
xchg
jae
ljmp
leave
call
pop
mov
mov
xor
sbbl
sub
aaa
dec
testb
jo
cwtl
jg
mov
mov
imul
mov
and
test
dec
in
in
jl
fcmovu
xor
sub
fsubrs
scas
mov
std
inc
mov
outsb
jl
push
in
ja
std
jno
inc
dec
push
test
in
sarl
dec
sub
jg
or
js
cltd
cmp
clc
mov
and
jle
ds
xor
sar
shl
shlb
test
cmp
popa
mov
pop
call
push
ds
imul
cwtl
loop
aas
fisubl
xor
out
rcll
movsl
insb
rol
out
pop
imul
es
sarl
ret
mov
jp
mov
mov
into
jnp
ret
in
out
movsb
mov
popa
mov
push
xchg
inc
push
imul
ret
mov
sbb
int3
test
setp
daa
out
push
jecxz
xchg
dec
or
xor
out
jmp
js
stos
cwtl
lea
cmp
test
mov
mov
xchg
repnz
xchg
stos
xlat
das
int3
mov
push
imul
pop
or
popa
loopne
inc
add
push
mov
das
fistl
mov
movswl
jmp
jno
arpl
shlb
inc
rol
xor
ljmp
enter
repz
sbb
mov
lds
add
jns
xor
rorl
orb
cmp
sbb
movsb
ret
push
add
enter
cs
cld
aaa
mov
pcmpgtd
add
hlt
loop
adc
pop
ljmp
movsb
or
les
jg,pn
inc
adc
sti
inc
ja,pt
cmc
adc
je
sbb
xchg
ror
into
repz
js
insb
push
cltd
mov
fwait
and
xor
mov
bnd
mov
dec
dec
dec
push
dec
push
cltd
mov
push
adc
ss
in
fwait
mov
aas
and
pop
out
or
dec
pop
fistps
jecxz
pop
push
mov
cwtl
jmp
cmp
ret
cmp
rolb
outsl
pop
add
push
stos
adc
ret
inc
sub
xchg
mov
js
adc
out
int
mov
in
cmpsl
push
dec
cmp
mov
scas
dec
jae
sub
insb
iret
mov
stos
mov
xlat
inc
rcrb
stos
pop
ss
fcom
jecxz
jecxz
jae
insl
cmp
scas
and
stos
arpl
std
lods
das
lret
loop
push
or
sbb
fcomp
pop
cld
mov
push
jl
mov
xchg
jns
sub
mov
and
imul
cmpl
jl
insl
adcb
arpl
loope
test
push
int3
daa
mov
test
xadd
sbb
jne
loopne
sub
dec
roll
mov
pop
pop
dec
negl
mov
bound
cs
mov
push
and
inc
jo
out
and
mov
cmp
cli
out
and
ret
adc
inc
sub
call
fmuls
or
lret
inc
dec
xor
cmpsl
outsl
fnstcw
xchg
outsl
stos
fsts
cld
mov
cmp
sti
std
sbb
mov
arpl
cmp
cmpsb
adc
sahf
inc
loope
mov
mov
sbb
mov
xor
in
inc
stos
sti
or
dec
mov
int
inc
push
mov
sar
inc
mov
sbb
cld
leave
das
cmc
inc
andb
sbb
add
xchg
xor
bound
cs
xor
lret
dec
pushf
push
push
out
sub
inc
fimull
jb
sbbb
repnz
ja
xchg
out
push
and
je
movsl
mov
xor
sbb
mov
cmc
mov
push
and
adc
jle
add
inc
jnp
in
in
inc
je
scas
mov
sbb
dec
add
mov
ljmp
aas
test
sarb
mov
xor
adc
cmc
vpminub
lret
popa
xchg
xor
pushf
xchg
sbb
push
cltd
lods
dec
std
js
arpl
jmp
pop
adc
stos
pushf
fwait
inc
loopne
loop
cwtl
jmp
movsb
jge
fdivs
es
mov
shll
inc
sbb
mov
mov
lcall
dec
cmp
cmp
aam
dec
dec
push
lods
inc
dec
inc
adcl
mov
loop
pop
or
out
sub
push
mov
stc
out
pusha
ja
and
lock
xchg
xchg
dec
xor
out
add
xlat
fisubs
adc
sbb
mov
xchg
cs
mov
push
test
lahf
add
in
sub
in
fnstsw
and
mov
mov
bound
enter
rcr
fst
stc
lock
mov
jb
int
xor
ds
test
lahf
mov
jmp
lret
popa
enter
add
in
dec
int
stos
out
jmp
imul
shrb
jl
sbb
jmp
daa
pop
xor
test
pop
ss
ljmp
cmpsl
fcompl
aas
insl
shll
dec
rorl
lret
pushf
xchg
mulb
stc
test
adc
mov
xchg
lods
push
popf
nop
sub
push
insl
push
pop
push
scas
inc
cmp
das
insl
in
jne
das
in
pop
mov
sti
pop
enter
in
shll
decb
mov
fnstcw
bound
mov
lds
test
pop
dec
fcomps
test
test
stos
lcall
xor
pushf
mov
xchg
insl
dec
and
loopne
push
adc
addr16
pop
lds
pop
das
cld
or
es
outsb
sub
gs
test
and
jae
and
xor
mov
les
movsl
push
add
lahf
push
dec
fimuls
push
mov
lcall
cmp
jl
sub
and
pusha
xor
test
sti
aad
out
in
outsl
push
jg
insl
int
hlt
loop
aad
inc
stc
adc
sub
nop
imul
and
add
lret
push
mov
dec
mov
test
or
je
add
mov
mov
and
push
sub
daa
fcompl
lods
lock
in
mov
mov
fs
or
es
pop
adc
pusha
div
loopne
or
jns
mov
push
adc
jl
inc
jne
xchg
test
out
jge
je
repz
xchg
sti
cmc
mov
jg
mov
mov
add
movsb
stos
add
test
mov
inc
imul
pusha
shll
push
hlt
aam
aam
adc
sbbb
jns
mov
cmpb
ret
pop
mov
lock
js
sbb
jbe
shll
int
sbb
loop
rcll
lods
nop
and
pop
shll
sub
or
ret
lret
fidivrs
mov
push
addl
loopne
shrl
cmp
push
stos
dec
fdivr
testb
stc
jb
push
arpl
mov
out
js
xchg
add
cmp
mov
xor
movsb
and
add
sub
mov
fiadds
adc
and
aas
push
lret
adc
shrl
arpl
and
xor
mov
mov
xor
arpl
sbb
inc
and
sub
cmp
repz
jle
sub
in
gs
dec
fistl
pusha
mulps
jge
inc
adc
xor
sbb
mov
test
jae
loopne
imul
scas
mov
xchg
addb
or
cltd
ljmp
ror
mov
sbb
jl
popf
xchg
xor
sbb
and
inc
pop
mov
stos
sbb
sub
fdecstp
mov
cmpsl
mov
jmp
clc
pop
and
scas
repz
xor
imul
push
adc
les
sbb
ja
pop
jb
dec
mov
adc
sub
inc
sub
lods
iret
cmpsb
int3
in
jns
inc
cmp
inc
or
adc
ds
inc
xor
cmpsb
out
hlt
js
pop
adc
pushl
add
cmc
sbbl
mov
out
in
lahf
sub
aas
shlb
sub
mov
call
imul
psllq
sub
leave
jnp
pop
mov
pop
push
inc
ss
call
xchg
shl
movsl
cmc
cld
stc
fdivrl
repz
inc
sub
aaa
jecxz
xor
adc
ficompl
imul
pop
jge
rcr
popl
aam
mov
repnz
jge
mov
mov
scas
test
iret
sub
stc
push
cmpsb
fidivl
lods
xorl
ds
mov
arpl
ret
daa
xchg
rcrb
mov
stc
pop
mov
ss
lahf
pushf
aaa
cmp
push
shrd
add
movsb
sub
mov
aam
jno
lds
inc
sub
icebp
ja,pn
sub
add
arpl
sub
test
pop
jns
mov
inc
pop
pop
push
dec
sub
xor
lds
test
mov
dec
or
aam
insl
push
mov
sbb
fcomip
scas
push
pop
rorb
sub
ret
mov
add
fwait
pop
xchg
cmpsl
mov
jo
dec
mov
pusha
adc
xchg
arpl
roll
dec
fdivl
cli
leave
jle
and
popf
cmp
pop
scas
je
mov
lds
add
insb
in
push
ret
decb
adc
and
call
les
dec
xor
xchg
push
loopne
sahf
loop
sub
rcrb
add
jecxz
xchg
mov
out
in
dec
sub
mov
mov
jns
fwait
dec
xchg
cli
xor
jecxz
add
add
pop
arpl
jbe
xlat
sub
add
pushl
lock
pop
mov
int
sub
pop
sub
repnz
sti
pop
in
cwtl
jp
adc
dec
addb
aam
loopne
ds
push
push
shlb
scas
mov
dec
sub
ja
xchg
in
mov
inc
fdiv
push
add
aad
pop
push
dec
loopne
pop
popa
inc
adc
out
pop
mov
mov
je
pop
xor
gs
inc
add
jge
mov
js
ds
addr16
or
mov
jbe
repnz
jp
jo
in
loop
cmp
or
adc
stos
pop
in
dec
pop
ss
loope
pop
or
out
cmp
push
das
sub
and
lods
insb
jo
add
inc
dec
lods
aas
jnp
cmp
sahf
nop
dec
inc
mul
lods
and
push
daa
mov
xchg
and
and
jae
push
xchg
aas
add
mov
push
jb
repz
mov
or
test
stos
rcrb
sbb
insl
jge
rorl
movb
mov
push
mov
popf
int3
sbb
dec
mov
scas
out
out
sbb
dec
imul
xor
std
mov
arpl
outsb
pushf
inc
fidivl
fwait
mov
jnp
je
mov
adc
adc
push
sbb
lock
aad
add
mov
pop
loopne
mov
aam
pop
sbb
and
adc
or
dec
fnstcw
mov
sarl
push
outsl
loop
loop
test
cmp
jno
inc
test
ficomps
addl
shrb
and
repz
xchg
jno
mov
call
jb
testl
subb
scas
insl
ret
lret
je
xchg
ja
mov
jecxz
mov
cmp
mov
ja
sbb
cltd
push
into
pop
and
out
shll
push
jp
insb
mov
xor
push
mov
xlat
aas
xchg
xor
lret
scas
icebp
xchg
mov
add
icebp
mov
sbb
jl
testb
into
add
xchg
cmpxchg
aas
cmp
or
imul
mov
lea
cmpsl
imul
ss
xorb
call
cmp
mov
mov
xchg
mov
insb
push
push
std
ds
aad
pop
insl
pop
push
jl
movsl
sub
clc
cmp
inc
xchg
xor
pop
imul
push
or
sbb
push
rcl
and
call
xchg
imul
jae
ret
call
andl
lret
push
add
insl
adc
aad
mov
shlb
push
xlat
add
xchg
and
sbb
cmp
jmp
cmp
cmp
aad
add
jne
cld
stos
loop
dec
push
push
fstpl
mov
xchg
cmp
fcomp
dec
adc
pop
adc
mov
inc
les
js
addr16
fwait
or
mov
pushf
pusha
jge
enter
pop
lret
ja
rcll
mov
xorb
in
jns
adc
push
pop
dec
xchg
cmp
xchg
jg
leave
fnstcw
test
dec
add
arpl
rcll
inc
xor
sub
adc
mov
dec
in
daa
xchg
in
jbe
pop
mov
adc
rcl
push
inc
stc
fsubrs
mov
addl
jae
mov
sbb
rolb
adc
inc
pop
nop
mov
dec
pushf
pop
in
jno
out
ficompl
pop
fbstp
jp
outsl
aam
mov
rcl
in
mov
inc
cmp
xchg
jb
in
push
test
testl
dec
ss
and
les
mov
mov
jmp
ds
cmp
cli
pop
hlt
cmc
sub
iret
ja
mov
add
andl
addps
cmp
lods
mov
fmul
sbb
sbb
out
test
repz
movsb
xor
add
pop
fs
mov
cmp
and
loop
fwait
cmp
lcall
popf
add
mov
rclb
pop
mov
ljmp
cmp
sub
and
fdivrs
jo
mov
inc
mov
add
cmp
mov
lret
add
xor
test
push
jnp
or
lcall
sub
add
mov
add
jecxz
dec
ret
jbe
xor
inc
jne
add
pop
add
adc
sbb
lock
aas
mov
repnz
lcall
cli
xor
repnz
cltd
mull
test
push
mov
negb
lock
mov
scas
in
shl
stos
mov
repnz
sub
add
pop
dec
dec
pop
mov
sbb
jne
leave
push
cmp
sbb
and
adc
inc
or
movsl
push
pop
out
int
cmp
imul
das
int3
mov
jo
mov
cmpsb
mov
pop
es
scas
cmp
les
ret
es
aad
push
sub
movsl
lret
movsb
cli
mov
add
lcall
add
jno
sbb
orl
cld
sbb
scas
andb
iret
repz
out
or
mov
and
add
mov
test
or
inc
lds
and
js
push
jg
mov
repz
daa
pop
movsl
hlt
lcall
jg
in
ret
pop
ret
push
loopne
scas
inc
mov
ret
ret
pop
jge
mov
adc
out
pop
adcl
jmp
pop
repz
adc
xchg
xlat
sub
outsb
add
jae
dec
push
xor
inc
in
sbb
cmc
adc
inc
out
pushf
xchg
sbb
cmp
fnsave
jmp
fstpt
jle
lods
xchg
mov
cmc
les
imul
sbb
cmc
jb
jle
jge
mov
pop
clc
push
cli
pop
xor
stos
pop
orb
cmp
mov
jle
mov
push
outsl
or
testb
mov
mov
fwait
mov
fmul
outsb
add
add
out
stos
push
aam
out
mov
imul
sub
inc
lcall
in
jle
mov
mov
lods
ret
das
sbb
adc
shr
sbb
add
push
dec
test
dec
sarl
dec
loope
jns
xchg
std
lea
jle
outsb
mov
jl
ja
mov
jne
nop
pop
sbb
lahf
push
aam
lods
adc
mov
iret
pop
jg
loop
rorl
into
lcall
outsl
push
sti
inc
push
mov
fisubrl
jno
mov
jl
ret
addl
rorb
mov
into
lods
lcall
repz
adc
xchg
faddl
test
pop
imul
mov
hlt
mov
xor
ret
add
and
cmovs
cmpsb
push
xor
int3
dec
sbb
add
inc
xor
mov
jno
xor
push
fldenv
fsts
cmp
jae
pop
pop
xchg
mov
and
mov
iret
mov
fs
jbe
xchg
or
nop
sbb
add
nop
jb
mov
in
shll
pop
ja
push
insb
mov
xor
or
xchg
fldt
sub
mov
jle
push
sub
jb
xchg
xchg
loopne
rclb
xchg
cmp
push
les
fisttpl
aaa
pop
lock
enter
das
add
sarb
rorl
or
mov
fbstp
and
push
fstpt
xchg
mov
dec
es
lock
cmc
jl
inc
leave
daa
jnp
lret
nop
std
push
bnd
add
adc
mov
sbb
inc
test
pop
add
movsl
xor
rclb
xor
hlt
xor
in
ja
xor
leave
add
mov
or
and
aam
scas
addb
out
add
int
fdivrs
mov
mov
xor
mov
jo
sbb
push
aas
or
cmpl
addr16
push
int3
out
ds
dec
sbb
pushf
or
add
sub
pop
sub
and
xor
lods
and
lods
nop
sbb
or
jae
rolb
call
loopne
lock
xchg
or
adc
cmp
out
in
cli
cs
orb
dec
pusha
lock
xor
pusha
adc
pop
sti
dec
and
je
pop
push
inc
fadds
in
push
or
add
mov
jg
pop
or
lods
mov
fildll
ficoml
and
and
aam
call
movsb
lock
dec
pop
nop
imul
out
loope
jecxz
dec
cmp
jns
xchg
mov
popa
es
jns
jp
mov
pop
fldt
test
and
mov
push
arpl
push
dec
mov
and
sti
rcll
std
pushf
fbld
repz
cmpsl
in
pop
add
loop
data16
stc
movsl
aaa
push
cmp
push
stos
and
adc
loop
jmp
lret
jle
popa
loop
repz
je
addl
repz
dec
or
fildll
fld1
mov
mov
jmp
jecxz
mov
pop
out
fdivl
pop
daa
ja
sub
mov
push
cmpsb
sbb
add
repz
test
movsb
daa
mov
mov
fisttpll
sub
pop
imul
gs
or
sbb
pop
insb
push
out
sub
les
jl
jbe
lods
pop
dec
test
pusha
sbbl
cmpsl
ret
icebp
pusha
xorb
jge
push
in
push
hlt
loopne
mov
mov
xor
rcll
jmp
xchg
notl
in
nop
push
icebp
scas
or
rcll
and
jae
mov
dec
cmp
cmp
xchg
jns
xor
cmp
dec
enter
gs
jg
xchg
jmp
lods
xchg
mov
cmp
mov
dec
dec
clc
sub
xchg
mov
or
mov
cs
rol
orb
push
pop
mov
and
mov
dec
mov
mov
push
int
decl
cmp
adc
das
cltd
les
sub
sub
sbb
inc
in
cmp
cs
hlt
mov
jb
idiv
pop
rcrb
adc
scas
cmp
push
jns
stos
sbb
add
aaa
xor
sbb
dec
iret
data16
dec
xor
mov
inc
faddl
dec
pop
bound
xor
sbb
jmp
push
sbb
xor
loopne
ja
call
cmc
jo
sub
mov
stc
out
adc
loop
inc
push
jmp
jge
test
daa
dec
stos
divl
mov
xor
scas
jmp
mov
fistpll
insb
add
cmpsl
xlat
dec
adc
jl
inc
inc
or
or
mov
inc
push
xlat
test
xor
scas
xchg
nop
pop
mov
inc
faddl
pop
sarb
mov
push
add
mov
rcrl
add
lods
inc
mov
das
rclb
cmp
cmc
int3
aaa
jecxz
cld
sbb
mov
in
inc
pop
dec
pop
push
arpl
shl
int
cmp
mov
stos
lahf
in
out
push
test
ret
loop
pop
mov
fstl
push
fwait
hlt
pop
sarl
nop
add
fcom
rcr
rclb
out
mov
and
lock
rcrl
shl
xor
pop
pop
add
mov
bound
stc
cmpsl
dec
pusha
jae
mov
sbb
dec
std
hlt
fsub
je
faddp
ja
xchg
vmwrite
pop
int3
cld
pop
push
mov
ss
lret
outsb
sarb
cli
iret
loop
push
cmp
inc
insb
cmc
push
mov
lret
jnp
mov
jp
xchg
enter
stos
test
into
xchg
lahf
and
cmp
iret
mov
dec
mov
in
or
pop
xor
imul
fstpt
jmp
pavgw
mov
xorl
sbb
into
xlat
scas
enter
mov
mov
ljmp
fwait
or
lahf
fildll
dec
fxch
xchg
jmp
aas
jbe
xor
push
sub
aam
or
xor
cmpsl
pop
add
repz
adc
xchg
fscale
dec
cmp
sub
scas
dec
scas
inc
push
lret
rorb
push
ret
into
pop
popa
xor
mov
xor
push
dec
push
enter
ljmp
add
in
leave
out
mov
xor
lds
mov
push
es
add
jae
and
mov
pop
dec
dec
enter
mov
push
sbb
popa
inc
xor
dec
inc
rep
sarb
addr16
mov
mov
in
int3
xlat
test
sarb
jb
je
inc
add
outsb
cmpsb
and
enter
or
push
cs
mov
out
xchg
fcmovbe
hlt
imul
jle
testb
add
stos
fwait
js
add
add
add
xor
xorb
push
cmp
mov
pushf
je
mov
sub
ja
stos
add
xchg
push
pop
cmpsb
and
mov
add
test
pop
or
mov
cwtl
out
popf
shr
inc
pop
in
fisttpll
sub
mov
cmp
fwait
div
loope
fucom
outsl
iret
mov
inc
and
jae
es
dec
lret
arpl
pop
xchg
ljmp
jbe
dec
fidivrs
xor
mov
jl
and
pop
push
cmp
push
les
inc
cmp
jne
adc
into
lret
jmp
cmp
cmpsb
in
aam
mov
cmp
lahf
pop
adc
mov
mov
or
leave
pop
hlt
test
xor
jp
iret
xchg
ljmp
sbb
dec
test
movsl
pop
and
loop
push
mov
push
cwtl
int
pop
pop
dec
mov
les
cmp
leave
cmpsl
movsb
sbb
xchg
push
cld
fs
cli
sbb
sub
movsl
mov
test
inc
push
stc
fistpll
rorb
xlat
fstpt
and
xchg
push
add
inc
pop
aas
pop
ss
push
leave
inc
add
add
movsb
ja
and
ret
in
lods
dec
jmp
repz
mov
or
imul
jge
loopne
outsb
lods
push
mov
adc
dec
cmp
mov
cmp
sub
inc
cmp
mov
and
popf
cmp
jo
mov
rcrb
xor
inc
pop
scas
call
test
xchg
adc
pushf
in
dec
push
inc
mov
cltd
into
push
push
mov
je
lods
xor
sub
popf
mov
dec
ret
push
dec
pop
sti
dec
push
pop
outsb
clc
shl
add
dec
add
fnstsw
xchg
push
rcl
sub
in
loope
or
cmpsb
xor
cmpsl
sub
xor
cli
cmpsb
loop
shlb
sbb
xor
movsb
aaa
mov
cmp
pop
inc
ds
rcll
pop
stos
stc
test
push
sbbl
mov
pop
cmp
xchg
fwait
adc
sub
adc
and
push
sbbb
push
test
mov
imul
mov
lods
in
movb
xchg
pusha
mov
test
subb
rolb
rcll
aaa
mov
xchg
cwtl
in
push
cmp
in
jge
pop
jb
lods
sbb
sbb
fcompl
jns
cmp
daa
std
sbb
mov
lea
jge
icebp
rorb
lret
jp
mov
dec
add
cmp
jle
filds
jp
and
mov
push
sub
sbb
insl
add
movsb
cmp
add
sbb
call
sub
mov
ja
inc
sbb
inc
push
and
stos
dec
mov
shlb
cmp
xchg
outsl
add
or
decl
mov
inc
sub
fwait
ss
pop
rcl
sbb
inc
cs
or
mov
out
jne
sub
std
out
lret
insl
imul
inc
imul
dec
out
cmpsb
jecxz
outsb
jne
popf
in
int3
and
addr16
cmp
pusha
shl
in
jge
addr16
ljmp
stc
or
mov
adc
es
shll
sbb
jno
pop
lods
xchg
sti
es
lods
sahf
test
js
pop
jge
lahf
inc
jecxz
pop
add
testl
push
movsl
sub
outsb
push
xchg
dec
pop
imul
mov
pop
dec
ret
xchg
cs
daa
xor
out
push
and
cltd
call
test
cmpsb
dec
mov
jmp
push
mov
fisubl
aaa
cmp
pop
ret
inc
pop
push
pop
bound
xchg
fsubr
add
mov
jmp
mov
mov
sbb
dec
inc
arpl
or
test
mov
dec
push
adc
cmp
daa
rcrl
inc
sub
sarb
fiadds
popa
sub
mov
fiadds
xlat
jp
mov
xchg
push
xchg
push
mov
add
pop
lock
mov
jg
mov
cmpsb
loopne
or
mov
xchg
fwait
out
mov
mov
movsl
mov
pop
scas
outsb
xorb
sbb
pop
test
mov
add
loope
lret
cs
mov
mov
xchg
push
test
leave
insl
and
repz
xchg
mov
mov
ja
aam
sahf
or
out
loop
adc
outsl
das
jbe
cmp
dec
xchg
mov
push
pop
jne
shlb
jbe
adc
sub
dec
cli
lea
mov
pop
lret
rorb
ljmp
xor
scas
fcmovnu
loope
mov
adc
pusha
xchg
icebp
sbb
mov
pushf
or
jmp
sti
jo
inc
scas
js
fmul
and
fsts
out
inc
and
and
pop
fwait
arpl
inc
rcll
int
pushf
and
out
cwtl
ja
inc
in
xor
stc
and
scas
movsb
insl
fimuls
xor
xchg
pop
add
or
pop
pushf
rolb
adc
sbbb
sbb
daa
sbb
cmp
cld
and
std
test
mov
insl
adcb
movsl
pop
xor
push
arpl
test
mov
push
jg
cmc
out
add
mov
adc
adc
hlt
mov
or
xor
jmp
push
mov
pop
lret
add
sahf
inc
jge
int3
and
addb
in
sarb
inc
push
or
pusha
jmp
stc
add
movsb
mov
pop
mov
sbb
scas
adc
dec
cmpb
icebp
dec
stc
rorb
mov
and
inc
imul
lds
cmp
scas
push
pop
js
cmp
test
add
add
pop
ucomiss
loopne
jmp
mov
retw
mov
adc
je
or
mov
cmp
fnstsw
loopne
mov
enter
xor
jno
testl
inc
aad
jle
insl
jns
stos
mov
out
imul
sub
loope
leave
loopne
in
pusha
mov
dec
cld
idiv
and
push
aad
cmc
lret
pop
ret
out
mov
nop
xor
or
sbb
enter
cmp
inc
sub
cmp
jmp
xchg
pop
inc
fisttps
mov
shrl
sahf
push
rcl
test
push
fdivl
call
negb
adc
mov
das
lcall
mov
pop
call
or
pop
out
dec
es
fists
sahf
inc
rolb
jo
ret
sbb
or
sbb
outsb
mov
sbb
mov
lods
jg
out
pop
inc
iret
push
and
ljmp
adc
push
aaa
jb
loopne
cmp
jno
add
repnz
mov
mov
mov
shrl
sbb
add
call
push
inc
int3
adc
insb
enter
jnp
jns
or
pop
int3
cmc
xor
daa
sar
add
fcomp
push
lea
cs
jecxz
jne
pop
dec
xchg
shll
aad
mov
and
mov
out
cli
fsubl
mov
push
stc
jno
push
in
add
shrb
mov
push
lea
subl
push
xor
popf
push
fs
sbbb
call
les
pop
cwtl
push
sbbb
test
sbb
jg
xchg
rcll
mov
sub
jp
mov
popf
cmp
pop
pushf
jg
rorb
pop
jae
loopne
pop
sub
jp
fnstsw
mov
dec
enter
adc
dec
dec
xchg
dec
sub
in
mov
bound
ficompl
jnp
jg
inc
inc
out
ja
lahf
pop
mov
in
stc
das
inc
jmp
and
mov
into
repnz
xor
test
xchg
jo
xor
push
jne
cmpsb
out
lock
pop
dec
test
mov
xchg
lret
dec
fdivrl
clc
out
mov
xor
data16
sti
mov
add
xor
cli
cmp
scas
sbbb
push
push
mov
cmp
fptan
ficoms
ret
imul
push
xchg
pushf
xchg
xchg
lahf
insb
dec
ss
daa
aad
xchg
sbb
add
jb
jns
push
push
out
in
add
dec
mov
mov
jge
ficomps
movsb
fsubs
push
in
push
sub
pop
mov
xchg
mov
push
or
shl
fstps
cmp
insl
shlb
dec
push
lcall
jle
fstl
lret
pop
mov
or
in
ret
fsubs
xadd
fisubl
ret
push
xchg
xchg
add
sub
scas
adc
pop
in
jecxz
push
scas
mov
mov
jo
mov
adc
sub
das
fld
push
jns
jne
xchg
orb
dec
and
jns
jns
dec
or
adc
test
ret
daa
inc
test
jmp
pop
or
pop
scas
data16
push
lock
hlt
cmp
pop
jnp
mov
mov
stc
movsb
es
jge
fbld
les
jbe
cmpsb
scas
xchg
inc
das
xor
lods
sbb
test
add
into
push
mov
inc
xor
dec
jnp
lods
or
cmp
or
xchg
adc
cwtl
xchg
push
sarl
insl
lods
nop
add
ds
mov
cmp
je
test
pushf
dec
fidivl
dec
and
test
push
sub
push
push
xor
aam
cmc
les
adc
jnp
and
pop
jbe
inc
push
insb
mov
cmp
out
pop
cmpsb
inc
ja
dec
mov
dec
rol
insl
fimuls
push
addb
add
out
sub
xor
mov
hlt
out
mov
sub
xchg
sub
mov
adc
mov
xchg
pusha
push
mov
lea
fisubrl
xchg
je
aaa
sbb
cmp
in
lods
dec
push
mov
icebp
lea
shlb
adc
in
mov
push
sub
dec
out
rorl
fldcw
cmpsl
pop
roll
push
jmp
out
push
jecxz
pop
mov
js
cwtl
jno
mov
stos
popa
leave
cmpsb
pushf
out
in
daa
cmc
cmp
ja
nop
adc
mov
fmul
aas
push
pusha
jmp
arpl
mov
idiv
and
icebp
stos
sbb
mov
cmp
add
add
mov
ror
xchg
add
out
lret
out
lds
imul
xor
dec
mov
sub
add
jecxz
call
and
popa
jmp
adc
sub
lock
cmp
adc
stos
jno
mov
cmp
mov
pop
jnp
daa
sahf
ret
mov
adcl
out
fstpt
inc
lock
shl
jne
or
jmp
decl
lret
imul
insb
cmp
leave
std
pop
dec
in
loop
das
aam
fisubrl
inc
cmpsl
fyl2xp1
xchg
aaa
push
inc
xlat
mov
ja
or
jg
xchg
lea
dec
rcll
and
or
or
mov
pop
fiadds
out
movsl
add
or
or
sbb
inc
dec
out
pop
cmp
dec
or
inc
adc
mov
mov
gs
jg
adc
insb
lods
dec
push
pop
int3
xchg
mov
lea
clc
push
insb
add
jb
adc
pop
pop
lods
push
fsubr
scas
adc
stos
clc
popa
pop
movsb
add
add
sbb
mov
cmpsl
popa
push
mov
je
jmp
enter
mov
push
pop
sbb
xor
loop
inc
daa
push
mov
in
cmc
mov
pop
mov
adc
fdivs
loopne
in
stc
pop
stc
stos
jno
and
inc
sbb
in
pusha
lds
add
and
push
add
and
xrstor
pop
enter
sub
rolb
fwait
shr
std
cmpsl
mov
and
out
xchg
stc
movsb
fsubrs
nop
in
fldenv
gs
push
add
fwait
and
ficompl
jmp
mov
xor
mov
fdiv
nop
ret
rcr
mov
push
jle
sahf
outsb
aaa
cmp
aam
push
sub
dec
cmp
mov
into
out
adc
push
adc
lea
mov
inc
push
out
xor
ljmp
cmp
rcl
push
cmc
mov
xchg
data16
subl
paddd
fstpt
cmp
into
xchg
scas
jae
cltd
je
and
stc
js
lods
cmp
out
jecxz
mov
cmp
ja
lahf
mov
mov
cmpsl
inc
mov
mov
pop
mov
sub
cmp
ror
int3
call
popf
mov
adc
andl
fsubrs
in
push
cmp
lahf
fs
idivb
in
mov
inc
jnp
or
xchg
repz
addr16
stc
rorl
mov
sub
add
pop
cmp
mov
add
adc
sub
mov
das
cmp
add
xor
je
cwtl
add
adc
shr
jbe
push
stc
and
sbb
and
xchg
adc
cmpsb
negb
ds
xor
iret
dec
jmp
sbb
ds
xchg
jb
loope
push
inc
inc
loope
add
mov
sbb
cmp
jecxz
aas
or
xor
repz
jmp
push
mov
loope
inc
sub
pop
add
adc
daa
aad
jmp
mov
repz
or
out
mov
call
fsubrp
scas
lret
pop
sub
and
and
mov
xor
cmp
ss
xchg
dec
pop
js
or
lret
aaa
xor
inc
out
scas
andl
add
sbb
fsts
or
sbb
xor
sub
pop
cs
hlt
in
jmp
stc
divb
or
mov
cmpsb
stos
push
xor
movsb
test
jb
xchg
es
in
sub
jae
sbb
pop
mov
and
addr16
adc
or
std
lret
inc
push
jno
lret
es
cmp
ss
inc
lahf
aaa
insl
xchg
bndstx
ljmp
aaa
call
mov
addl
or
add
cmc
xor
lahf
loopne,pt
add
sub
push
jmp
test
or
stc
sbb
loop
dec
or
sub
mov
sub
mov
dec
jge
adc
pop
outsl
popa
lret
stc
pusha
iret
ret
mov
mov
mov
movsl
mov
lahf
repnz
adc
insb
jecxz
xorb
dec
je
sub
adc
cld
inc
jb
mov
sub
inc
xor
cli
dec
xchg
xchg
cmpsb
push
decb
xor
xor
lahf
adc
mov
iret
xor
imul
mov
or
lcall
pop
test
cs
dec
jl
cmpsb
fidivrl
xor
xor
out
rclb
cli
ret
sbb
mov
scas
ljmp
mov
scas
push
fidivl
mov
sbb
xchg
insl
gs
dec
std
mov
dec
call
add
and
fstpl
shlb
fnstenv
mov
hlt
fwait
cmpsl
js
jle
subl
mov
jecxz
xchg
push
cmp
mov
push
mov
push
mov
jb
sbb
out
test
sbbb
fbld
in
push
imul
mov
or
int
jae
push
and
and
pop
and
mov
push
imulb
push
punpcklwd
cs
les
jae,pn
scas
add
mov
adcb
jmp
mov
icebp
sub
mov
loop
cmpsl
sbb
out
jecxz
mov
dec
int3
in
stos
or
jbe
push
popf
fmuls
in
push
test
mov
mov
dec
fdivr
js
and
pop
adc
pop
lock
stos
sahf
jb
sbb
aaa
int3
pop
or
sub
add
inc
cmp
lcall
pop
mov
and
stos
add
push
mov
and
call
lcall
in
mov
pop
adc
bound
mov
loope
cmp
fiaddl
repz
adc
and
imul
rorb
sti
mov
stos
fsubr
fisttpl
in
or
mov
mov
adc
dec
stc
push
imul
inc
mov
ss
arpl
dec
pop
clc
jl
testb
popf
sti
cmc
mov
pop
xor
xchg
cwtl
fadds
xchg
faddl
lods
jle
jecxz
mov
sarb
decl
pop
mov
leave
cld
repnz
fs
aas
sahf
sbb
mov
cmc
xchg
inc
cmp
shl
sbb
mov
bound
ljmp
cld
dec
mov
push
add
adc
and
push
cs
scas
push
les
shl
ljmp
xchg
stos
clc
imul
rcll
in
jl
xor
fldcw
sbbb
daa
add
scas
shl
std
pop
mov
lods
cltd
jle
lahf
insb
lods
inc
pop
arpl
cld
inc
inc
imul
cmc
fwait
scas
in
ja
sbb
push
repnz
pusha
ja
push
out
push
pop
mov
fisubs
cmc
mov
cmpsl
fisubrs
pop
nop
inc
cmp
jae
sbb
dec
stc
dec
push
repz
imul
pop
out
lret
test
xor
mov
lds
les
cmp
ret
or
mov
dec
das
in
fnop
mov
inc
mov
jns
jmp
arpl
xchg
call
les
cltd
sbb
mov
jns
aaa
daa
mov
fstl
mov
dec
iret
or
and
daa
into
sub
lea
pop
lcall
push
ret
rolb
cmp
or
dec
call
pop
hlt
sbb
add
xchg
jbe
stos
pop
outsl
pop
mov
and
sub
mov
mov
or
fstpl
and
testb
sbb
adcb
lret
push
add
ljmp
dec
xchg
sahf
add
fdivs
mov
jg
and
pop
out
fisttpll
push
fiadds
push
lahf
dec
push
cwtl
inc
test
add
dec
mov
add
jo
adc
jne
cwtl
test
mov
mov
xor
xchg
std
mov
aas
pop
lods
cmpsl
mov
mov
inc
les
jae
inc
outsl
jbe
pop
mov
fmuls
iret
mov
mov
mov
push
dec
xlat
dec
sbb
rclb
clc
int
iret
push
test
mov
mov
sahf
cltd
jae
enter
sti
fimull
adc
jg
data16
or
outsb
xor
push
sub
movsl
test
popa
jbe
sub
hlt
add
stos
push
inc
insl
fidivl
out
je
fstpl
int3
pop
mov
push
sub
pushf
add
decl
push
add
sub
fistpl
add
inc
inc
out
mov
scas
adc
test
cmp
sub
pop
or
add
or
mov
mov
cli
cvtps2pd
mov
aad
subb
mov
cmp
mov
mov
mov
add
xchg
mov
stc
data16
sub
enter
shlb
xchg
lret
inc
jnp
push
xor
jle
jecxz
aad
mov
and
insl
sub
ror
aas
xchg
std
aad
fldcw
insb
mov
mov
lret
jecxz
loope
add
add
xor
push
or
dec
je
cwtl
push
push
enter
adc
movsb
push
aas
lods
bound
repz
cmp
push
inc
push
add
imul
in
fcmovnb
adc
mov
cmp
setnp
ds
sbb
sahf
xor
jmp
je
mov
je
aad
pop
cld
lea
fcom
dec
lods
lock
push
movsl
push
sti
int3
or
sbb
cmp
pushf
cmovle
mov
daa
and
and
inc
mov
outsb
sub
or
lods
imul
adc
add
and
lds
inc
mov
loopne
aas
cmp
mov
insl
filds
mov
mov
cmc
call
int
mull
repnz
add
mov
inc
mull
inc
aad
shll
sub
cltd
pop
adc
jg
fdivrl
pushf
out
fcmovb
cmp
cmp
mov
aas
pop
test
fsts
sub
inc
sub
cmp
lds
mov
outsb
jmp
pop
addl
fldt
adc
add
inc
repz
mov
in
enter
test
bound
aaa
ret
add
cmpsl
testl
sub
lods
in
xchg
jl
es
pop
xchg
push
mov
mov
mov
test
hlt
sbb
mov
jecxz
outsl
fisttpll
cmpsb
popa
and
test
jae
out
xchg
pop
shlb
jecxz
pop
outsl
xchg
out
fwait
aaa
dec
enter
mov
enter
cmp
out
dec
int3
push
push
cld
mov
mov
cmp
pop
inc
or
adc
mov
clc
jne
popa
das
mov
jge
jns
push
jns
or
mov
mov
adc
mov
pop
cwtl
jns
shlb
repz
ret
pop
mov
roll
sub
mov
scas
test
xchg
int
aas
add
xor
aaa
ror
inc
xchg
jne
xlat
adc
xchg
outsl
ret
push
inc
ret
lret
inc
das
and
cmp
mov
push
ds
push
mov
mov
sub
push
in
adc
xchg
shr
sub
iret
push
out
jge
mov
ret
sbb
test
ret
mov
in
jmp
add
mov
aas
sbb
fwait
push
fcmovbe
mov
cmp
sub
ljmp
pop
jmp
das
nop
rcrb
mov
adc
sbb
jp
cmpsb
push
ds
addl
inc
adc
fdivs
xchg
daa
testl
int3
cmp
movsb
and
xchg
sbb
shll
stos
repz
scas
ljmp
aad
lock
es
mov
mov
sub
mov
add
in
jbe
mov
ret
or
hlt
sub
cmp
push
xchg
mov
dec
fwait
lods
in
popa
lahf
mov
mov
icebp
mov
fldt
and
fstpt
pop
lret
shll
sarl
sti
loope
out
dec
or
pushl
decb
cmp
sbb
push
mov
out
inc
xchg
fildll
lds
mov
adc
adc
xorl
stos
jmp
push
int
int3
test
loop
adc
mov
jnp
inc
inc
fidivl
cs
bound
or
sbb
mov
stos
int3
pop
lahf
xchg
push
or
inc
sub
push
fdivl
in
mov
fsts
andl
mov
xchg
into
icebp
mov
xchg
loopne
and
and
mov
mov
int3
ret
push
xchg
pop
push
sbb
sahf
lcall
xor
xchg
fsts
hlt
jge
or
movsb
jno
popf
cmc
jge
push
jbe
pop
dec
sbb
inc
or
jbe
pop
fbstp
stos
and
push
dec
jmp
les
pop
mov
insb
sti
rorb
aaa
add
push
sbb
cmp
gs
dec
ds
xchg
je
sbb
stos
rcrb
add
nop
lods
fdivl
scas
pop
push
mov
sbb
cltd
popf
sahf
dec
and
test
cmp
mov
push
push
in
in
enter
outsl
iret
arpl
xchg
mov
and
dec
add
dec
data16
subl
adc
arpl
pop
sbb
sti
dec
ja
pop
and
cmpsb
out
lcall
outsb
out
xchg
lcall
xor
lcall
out
or
push
dec
insb
sbb
gs
dec
jl
mov
fs
test
lods
inc
xor
filds
or
in
mov
mov
xor
jmp
jmp
and
je
adc
mov
test
mov
jle
mov
ljmp
incl
pop
push
jnp
cmp
repz
pushf
add
in
sub
push
ja
xor
mov
lret
andl
sub
testb
subl
cmp
lock
adc
push
inc
mov
mov
je
cmp
inc
jno
rclb
jp
call
adc
shr
ss
dec
sub
mov
test
push
mov
add
adc
mov
sub
cmpsb
xor
lcall
loop
sti
xor
cmpsl
in
jmp
jg
leave
bt
clc
adc
bound
pop
ljmp
aad
xor
mov
mov
xlat
clc
out
call
repz
or
sbb
iret
inc
pop
dec
leave
inc
jb
mov
xor
jmp
dec
inc
xchg
and
push
or
stos
push
inc
mov
mov
cmpsl
push
fdivrl
inc
jo
fnstcw
fdivrs
sbb
repnz
in
movsl
ror
testl
push
pop
mov
adc
test
repnz
or
pop
out
inc
add
sub
jmp
or
xor
std
insl
xchg
loop
mov
lret
mov
push
dec
out
movsb
call
cwtl
and
or
js
jnp
mov
lret
mov
jo
xor
cmp
call
in
lahf
pop
mov
nop
mov
shr
adc
scas
lea
stc
push
stos
bound
scas
ds
add
pop
lcall
test
pushf
inc
dec
push
jae
enter
xor
xchg
adc
outsl
int3
jns
cld
or
call
mov
xorb
gs
pushf
pop
or
push
sbb
unpckhps
inc
xor
aas
test
nop
xchg
call
pop
push
jbe
pop
outsb
jnp
mov
push
lret
loopne
add
in
push
hlt
mov
out
neg
mov
cmp
es
pop
push
pop
rorb
lret
scas
mov
ds
push
jno
dec
incl
repnz
push
pop
les
pop
iret
jae
cmpsb
mov
je
popa
fisubl
std
jle
push
jo
mov
test
andl
jno
jge
mov
inc
cmp
or
imull
push
mov
rclb
dec
sbbb
stc
test
adc
cmp
jl
int
in
insb
mov
mov
cli
adc
lea
mov
clc
addb
jle
jge
cwtl
lods
jecxz
pop
jb
or
mov
mov
enter
adc
push
sub
ficoml
fldt
lcall
xchg
pop
dec
sahf
stc
and
jnp
in
arpl
adcl
test
loopne
jb
loop
leave
daa
out
jecxz
les
xchg
lds
movsl
sbb
mov
aam
hlt
fbstp
jb
insb
jl
std
and
enter
daa
repz
jns
sahf
int
xchg
mov
mov
push
pop
sahf
out
iret
std
daa
aad
add
ljmp
stos
decb
pop
pusha
sbb
fdivrs
lods
lea
out
jp
test
stos
dec
fisttpll
or
rcr
cmc
mov
jnp
inc
cmpsb
mov
dec
data16
sub
mov
adc
push
out
andl
push
aad
in
lfs
inc
sub
inc
addr16
or
incl
and
cmpsb
push
jmp
push
test
adc
xor
push
sub
mov
lcall
push
orb
mov
sbb
hlt
cli
push
jp
ss
and
pop
dec
cmp
iret
dec
sbb
rep
mov
popa
jbe
inc
lods
subl
mov
cmp
dec
dec
jl
xchg
cwtl
adc
lret
call
jle
xor
cs
mov
cmp
dec
sahf
outsl
xchg
sbb
push
dec
push
lods
pop
inc
cli
cmp
push
les
sbb
daa
aas
fstp
lahf
pop
or
aas
scas
dec
xchg
push
xor
sbb
subl
cmp
mov
loope
cmp
cmp
test
mov
imul
fdivr
xchg
repnz
lahf
std
movsl
lods
jmp
ja
lea
xchg
ds
xchg
enter
fildll
in
pop
sub
test
dec
pushl
and
lcall
jae
jo
mov
mov
and
sub
fildl
adc
in
std
add
fcmove
dec
sti
sbb
aas
sub
seta
in
hlt
imul
sti
jo
imul
fnstsw
cmp
cmp
mul
insl
into
jne
dec
cwtl
lods
stos
pushf
sahf
mov
mov
fdivrl
add
pop
mov
push
push
mov
mov
add
addr16
push
mov
sub
mov
jp
adc
jge
stc
aaa
ret
sub
mov
addr16
ret
pushf
add
xlat
push
and
xchg
lret
cwtl
cmp
mov
xor
jb
andb
push
ret
lods
and
push
mov
dec
xor
fidivrs
arpl
xor
xchg
push
push
out
xor
mov
mov
and
sub
xchg
lahf
cmc
sub
pushf
adc
and
nop
rcrb
or
imul
dec
loope
or
repz
pop
aaa
mov
dec
cmc
adc
fisttpll
pusha
adc
cmp
test
out
adc
jae
hlt
in
and
pop
clc
mov
inc
push
std
push
cmp
xor
jns
in
xchg
ret
shll
inc
dec
call
ds
cmpl
xchg
icebp
lods
test
jnp
pop
ret
test
out
es
ror
sub
inc
cmp
mov
add
and
sbb
jns
jecxz
mov
faddp
flds
inc
push
cli
or
subl
insl
add
adc
aas
ljmp
bound
in
mov
mov
sbb
mov
pop
aaa
and
sub
out
mov
rorb
leave
mov
or
insl
data16
pop
mov
mov
outsb
movsl
mov
loop
adc
rolb
jmp
inc
ret
fucomi
xor
arpl
call
mov
jno
and
imul
cmp
scas
push
cmpsb
push
mov
mov
push
test
xor
gs
mov
fstpl
gs
inc
mov
ja
add
cs
jo
mov
mulb
dec
shrb
lret
out
push
jne
movsb
pop
lcall
xor
ljmp
dec
rcrb
in
aam
inc
insw
pop
and
cwtl
pop
std
pop
add
adc
sbb
lock
insl
out
in
inc
cs
push
push
or
adc
in
cli
adcb
shll
push
inc
dec
aas
rcrl
cmp
aas
mov
jp
sub
repz
lods
mov
jnp
scas
and
lods
shrb
enter
es
push
sub
sbb
sub
rcrl
xor
loop
push
ffree
push
adc
xchg
cmp
outsb
not
xor
push
mov
mov
adc
jmp
lods
dec
jns
or
xlat
dec
jge
cmp
pop
inc
push
les
aad
pop
jns
and
std
sub
mov
xlat
cmpsb
ljmp
aaa
or
inc
push
test
mov
scas
sbb
insl
jae
test
cli
dec
push
mov
in
or
insb
cmp
add
data16
or
cmpsb
cltd
aaa
mov
sub
dec
loopne
out
mov
ja
sbb
shlb
dec
sti
mov
enter
je
gs
stos
pop
gs
stos
xchg
aad
out
loope
xor
enter
iret
icebp
add
push
out
daa
roll
dec
popa
ss
jmp
inc
lods
sub
cltd
stc
sub
clc
push
sbb
mov
mov
fldcw
imul
jecxz
sub
xchg
add
pusha
roll
inc
jnp
fs
nop
xchg
addr16
call
sar
jb
movsb
lods
jb
or
inc
xor
test
dec
fnstenv
or
push
push
lods
mov
std
loopne
inc
cmp
dec
jne
imul
out
sarl
gs
rclb
dec
xchg
xchg
bound
pop
mov
in
cmp
inc
pop
pop
mov
push
loope
add
pop
push
xor
lods
lcall
cmpsl
push
aas
mov
ja
outsl
push
mov
iret
mov
dec
ficoms
mov
int3
push
jbe
enter
mov
and
popf
outsb
mov
ds
push
in
adc
icebp
adc
pop
sbb
cmp
mov
addr16
add
mov
xchg
dec
xchg
out
adc
bound
pop
add
scas
adc
push
out
pop
mov
xchg
sub
adc
call
les
fsubrl
add
icebp
jne
ljmp
sbb
mov
mov
rcrl
fsubl
movsb
xor
xchg
ret
cmp
jecxz
adc
loop
jecxz
loopne
out
sbb
push
jbe
xchg
shl
inc
xchg
lcall
lods
icebp
sub
mov
scas
pop
popl
add
jbe
mov
lock
dec
inc
cmc
xor
xchg
enter
mov
iret
xchg
mov
fwait
push
bound
sub
mov
sar
out
add
ss
push
cli
push
fwait
shrl
or
mov
aad
sbb
sbb
lret
loope
loope
xorb
jp
andl
xor
xchg
and
iret
imul
and
mov
mov
lds
and
dec
pop
pop
shr
call
jmp
stos
repnz
subb
pop
or
movsl
xor
das
fistpl
adc
dec
test
add
ds
imul
cmp
sbbl
sti
mov
jno
or
in
out
scas
pushf
inc
jg
int
cmp
out
imul
push
pop
sub
stc
and
inc
cmp
xchg
xor
jecxz
cmc
inc
hlt
nop
movsb
test
lea
arpl
fcom
jo
sbb
fcmove
out
dec
push
stc
lcall
or
jo
in
mov
jle
sub
movsb
pop
fbstp
mov
add
lret
popl
sub
push
or
jne
pop
mov
mov
sub
xchg
dec
push
xor
jge
xor
and
outsb
lret
out
int
jmp
lock
ljmp
inc
xchg
jmp
jno
fstpt
cld
lea
mov
lahf
ja
lcall
or
mov
push
xchg
out
and
mov
push
xor
inc
add
mov
lcall
rorl
aad
pusha
jmp
push
push
pop
xor
sti
adc
js
insl
sahf
dec
arpl
cwtl
cmp
pop
jb
push
sbb
outsb
jmp
in
pop
fcoml
mov
dec
cwtl
aad
push
jge
or
call
js
sti
mov
dec
jecxz
ljmp
mov
cmp
sub
add
push
in
leave
cmp
ss
mov
pop
test
scas
and
aas
lret
mov
loope
jnp
andb
jmp
nop
pop
pop
ret
pop
hlt
insb
inc
into
into
mov
popa
jecxz
inc
add
xchg
clc
in
adc
xchg
pop
jne
xchg
clc
dec
mov
movsl
cmpl
in
fsincos
ss
pop
pop
xchg
les
lcall
fs
cwtl
std
dec
jmp
jmp
call
lar
cmc
xor
loop
pop
pop
icebp
push
repz
mov
cmp
xchg
dec
iret
adc
and
in
loopne
push
sbb
cmp
sub
idivl
dec
xchg
push
cltd
cmp
xchg
adc
or
fmuls
ss
push
cli
mov
nop
scas
fs
jno
fldcw
stos
rcrl
lcall
mov
dec
jno
jmp
mov
out
jmp
sbb
jle
pop
cmpb
cld
shr
mov
pop
aam
data16
pushf
bnd
outsb
in
jmp
push
xchg
int3
sub
mov
outsl
dec
mov
outsb
jle
and
fwait
enter
lcall
sbb
loope
mov
fidivs
jae
push
cld
ffree
inc
push
call
ret
pop
push
not
pop
dec
mov
mov
xchg
jne
incl
adc
mov
je
sti
shrl
and
mov
push
jp
push
lcall
mov
sbb
dec
test
mov
lahf
sbb
xchg
lds
std
jbe
test
and
shl
lahf
sahf
mov
sub
sub
mov
ljmp
ja
fistps
cwtl
adc
jb
jno
jo
inc
lds
inc
notb
mov
aad
pop
jae
cmp
xor
pop
lcall
cs
mov
cmp
add
jae
flds
lcall
sub
fstps
addb
mov
lods
int3
in
fs
js
mov
fs
inc
and
pop
pop
mull
pop
arpl
mov
push
xchg
lds
mov
jp
inc
sti
enter
push
daa
repz
fptan
stos
inc
cmp
mov
or
inc
xchg
and
jp
leave
or
enter
jns
inc
mov
lcall
pop
subl
popa
insw
in
dec
leave
leave
mov
cltd
mov
sbb
jo
imul
sub
pop
int
fsubs
outsb
test
pop
dec
hlt
data16
das
mov
fisttpl
jnp
rcrb
sbb
sub
dec
and
xchg
mov
fsubl
lods
push
fs
or
jns
aaa
sbb
sbb
dec
jp
jbe
xchg
fucomp
push
mov
mov
ss
inc
or
in
jecxz
mov
push
cmpsb
jp
std
or
jno
adc
mov
and
mov
jo
fcmovbe
sub
ljmp
mov
cli
mov
or
fwait
mov
xlat
cmp
mov
push
aas
imul
add
mov
gs
or
jnp
adc
and
loopne
adc
lret
dec
stos
bound
loope
sub
jp
cmp
and
mov
cli
sub
movsl
das
fbld
jno
xor
scas
jge
out
mov
mov
imul
popf
jae
push
adc
dec
movsb
pop
dec
cwtl
jne
test
mov
pushf
xchg
mov
flds
jns
mov
adc
jne
pop
push
insb
fdivrl
cmp
mov
add
inc
sbb
loope
aam
cli
negl
add
jae
mov
add
push
mov
xor
dec
imul
das
jbe
jge
inc
rcll
push
data16
or
inc
cmpb
orl
mov
jp
mov
mov
lods
xchg
stos
faddl
lods
cs
stc
xchg
dec
out
pop
or
xchg
popa
in
mov
and
leave
sbb
pop
repz
and
aad
loope
fnstcw
fdivr
mov
pop
shl
insl
pop
xchg
sbb
shrb
sub
iret
mov
lcall
push
pop
orl
adc
in
lds
pushf
fs
ret
cmpsl
mov
jp
cmp
mov
outsb
in
int3
inc
mov
xor
pop
inc
push
addb
aas
inc
fbld
popf
adc
push
cli
inc
lods
dec
mov
jb
xchg
push
les
mov
shl
cld
lret
or
add
lcall
xorb
jp
dec
mov
inc
decl
push
adc
pop
test
std
push
jb
lods
popa
nop
xchg
dec
stos
ret
in
ss
or
cmp
push
clc
sub
mov
jecxz
inc
push
clc
mov
rcll
fdiv
repnz
jle
mov
mov
out
cmpb
ret
dec
clc
xor
sbb
jnp
push
push
stos
enter
pop
in
mov
push
jne
into
mov
adc
mov
push
fisubrl
out
ffree
mov
mov
es
test
js
pop
cmp
jp
out
xchg
aaa
jno
aam
jb
adc
pop
addl
inc
mov
in
in
out
sbbl
xchg
aas
fdivr
push
xchg
push
mov
sub
inc
pop
push
leave
cmp
inc
push
dec
add
pop
mov
iret
dec
push
xchg
adcl
push
insb
cmp
and
inc
mov
pop
ficoml
push
fcoms
enter
add
add
rorl
test
mov
push
sbb
inc
xchg
fisubrl
test
imul
icebp
aad
aam
lds
inc
mov
insl
sub
in
xor
mov
or
andps
dec
inc
cmp
jb
pop
and
insl
jle
je
lods
jl
jmp
mov
outsl
outsb
xor
aas
jmp
or
add
lock
out
jge
push
rorl
fucomi
arpl
pusha
xchg
or
insl
lret
loope
add
nop
dec
cmc
mov
cmp
pop
xchg
shlb
pop
or
lret
mov
scas
into
jmp
mov
lds
lahf
mov
ret
jg
insl
roll
jl
or
dec
jg
mov
push
mov
inc
fwait
scas
pusha
es
push
jecxz
jecxz
in
mov
mov
push
dec
lea
sbb
std
mov
leave
xor
cltd
pop
mov
dec
push
shrl
mov
pop
mov
outsl
mov
mov
adc
fdivr
jns
cld
jns
adc
je
xchg
sbb
sub
cmpb
jp
xchg
shrb
adcb
mov
push
mov
xor
mov
psraw
mov
std
add
and
xchg
mov
mul
aas
push
mov
aaa
xchg
jmp
jns
imul
or
and
mov
fbstp
cmp
mov
pusha
pushf
scas
sti
sub
test
cmpsl
mov
mov
cmpsb
dec
in
rclb
and
fdivrl
daa
cmpsl
pop
lahf
aaa
jg
adc
idiv
xor
loopne
insl
and
fcompl
cld
iret
movsb
dec
dec
ss
or
pop
loopne
cli
sub
adc
es
sbb
ss
add
pop
stc
sarb
and
scas
js
and
ja
push
lea
mov
push
inc
sub
in
movsl
ljmp
or
outsl
es
pushf
xorl
ret
test
pop
int
daa
rcrb
xchg
sbb
xchg
out
xchg
add
push
addr16
push
lret
inc
jecxz
lcall
pop
mov
mov
psubusw
daa
inc
fistl
in
lcall
mov
stos
cmpsl
jmp
xchg
bound
cmp
and
adc
mov
fmull
dec
ffree
cmp
jno
js
jle
cld
insl
dec
fcomps
xlat
sbbb
lea
push
mov
adc
pusha
insb
push
pop
fnstcw
insb
mov
push
addr16
pop
cmpl
inc
stc
xchg
test
and
pop
add
sbb
fsubrl
sub
movsb
fiaddl
cmpsl
shrb
ja
aas
repnz
xchg
lcall
mov
dec
insl
mov
leave
xchg
xorb
repnz
and
xor
mov
mov
xor
je
jno
sbb
xchg
outsl
adc
xor
cmp
iret
divb
inc
add
pop
xchg
xchg
jge
jbe
mov
jne
fsts
dec
jg
cmpsb
lea
sbb
cmp
lret
lret
pop
sub
cmp
mov
or
push
jecxz
mov
and
sbb
rclb
xchg
cmp
orb
lcall
push
inc
sbb
push
add
fs
arpl
lret
lcall
inc
pop
adc
in
jmp
sbb
mov
rol
out
and
in
dec
jl
pop
mov
test
ficoml
es
or
sbb
pop
movsb
mov
insb
mov
arpl
and
bound
mov
lret
jge
dec
sub
sbb
mov
divb
jo
outsl
push
pop
inc
dec
dec
mov
addl
subb
aas
cli
xchg
cmpl
mov
push
mov
cmc
sti
xchg
adc
lock
sbb
repnz
sub
and
dec
mov
xor
mov
into
add
xchg
ljmp
insb
push
pusha
aas
pop
mov
jmp
les
movsb
cli
cwtl
adc
cmp
cs
stos
notl
mov
out
jecxz
js
fiadds
lret
daa
addb
sub
das
cltd
mov
adc
aas
repz
add
stos
or
sahf
lods
dec
mov
js
inc
pop
clc
mov
pop
mov
dec
pop
sub
ficoms
fsubl
stc
mov
data16
call
data16
xor
popf
lahf
repnz
sub
test
pop
push
inc
int
cmp
sub
sti
orb
adc
push
cmp
inc
mov
cli
bound
inc
in
aas
int3
pop
xchg
fwait
loop
out
or
fld
adc
xor
nop
lea
dec
lds
popa
iret
or
jecxz
adc
out
xchg
shrl
clc
cmpsl
sub
stc
jne
sub
pop
adc
aad
dec
jb
lds
rorl
daa
pop
push
dec
xchg
lods
ret
je
dec
movsl
and
out
fmull
add
xor
xchg
imul
push
ds
xchg
in
or
fisttps
lock
enter
dec
push
rcrl
or
push
in
fiadds
mov
addr16
loope
add
cmpsb
test
out
pop
ss
xor
roll
xchg
mov
jp
xchg
mov
insl
jne
cmp
ljmp
leave
adc
mov
lea
repz
xor
ljmp
cmp
sub
and
push
xor
push
mov
sub
jbe
insl
ja
in
scas
inc
or
or
out
cmp
pop
repnz
mov
pop
in
xchg
cs
leave
pop
mov
push
dec
fsubrs
mov
aam
lret
jecxz
sub
cmp
int
sub
mov
inc
lea
test
mov
adc
out
lahf
out
mov
movsb
mov
rcrl
pop
loope
enter
loope
popa
into
xor
or
ss
fisubl
cmp
and
adc
addr16
or
sbb
mov
sbb
lods
iret
test
xor
and
add
mov
fsubs
arpl
push
jp
fimull
icebp
lock
cli
mov
test
adcb
test
adc
scas
sbb
in
push
ds
cmpsb
stos
imull
mov
fldz
pop
add
lea
or
xor
movlps
inc
mov
add
fistl
subb
mov
imul
or
ja
cwtl
std
cli
cmp
sbb
xchg
hlt
jecxz
mov
idivl
xor
icebp
cs
mov
cld
lock
jbe
aas
xchg
mov
mov
lahf
pop
push
mov
hlt
test
or
shlb
repnz
adc
dec
mov
mov
loope
inc
xor
adc
push
and
into
xor
dec
repnz
adc
pop
test
test
mov
loope
test
add
mov
sbb
testl
fwait
cmpb
xor
ret
into
sub
sbb
and
add
push
dec
lock
and
in
dec
divb
xchg
js
fcmovne
movsb
sarl
out
sahf
rorl
cmc
cmp
cltd
jnp
mov
xor
orb
scas
popf
lcall
lock
pop
ds
scas
cmp
push
rcr
imul
jl
pop
push
gs
add
xor
rolb
test
fbstp
dec
bt
jmp
fcmovnb
mov
ljmp
ret
adc
rol
scas
leave
in
insb
mov
lods
xlat
outsl
mov
xorb
sub
ss
cld
lds
stc
lock
bound
sbb
mov
mulb
test
adc
fbld
les
outsl
cli
call
inc
push
or
pusha
adc
test
movmskps
pop
rcrb
scas
ret
lock
sbb
mov
xchg
sbb
sahf
les
fildl
insl
or
mov
test
or
jbe
mov
faddl
sbb
push
push
dec
cld
or
add
shlb
repnz
fdivp
fcmovu
jle
jg
nop
icebp
sub
push
xlat
pop
jne
rdtsc
mov
ret
test
and
popf
fmull
adc
ret
mov
jg
mov
mov
lret
sbb
inc
xor
je
dec
js
je
push
mov
push
cvtps2pi
scas
xchg
pop
inc
aam
iret
cmpsb
sbb
adc
test
dec
into
xlat
mov
call
sbb
ds
aam
fcoms
ljmp
in
insl
mov
insl
cwtd
jg
imul
pop
fwait
std
or
ficompl
xchg
xchg
xor
mov
shrb
mov
xor
outsb
fadd
shr
mov
out
lods
adc
in
push
loope
pop
std
jne
ljmp
aad
xchg
mov
pop
insb
or
daa
or
arpl
jle
jl
jp
aaa
push
sbb
add
mov
into
add
pop
test
and
jp
clc
decl
mov
out
sub
or
xchg
testb
aaa
mov
adc
fbld
dec
sahf
std
xchg
aad
aas
inc
mov
clc
sbb
xchg
int
lock
mov
pop
inc
jno
jle
lds
pop
dec
xlat
cmpsl
mov
cmp
adc
pop
mov
pop
inc
mov
sbb
push
out
pop
push
jmp
pop
out
xchg
mov
fwait
int
dec
or
cmp
test
ret
mov
mov
sbb
xor
sbb
cmp
pop
rorl
jmp
mull
adc
sbb
sarl
ss
cmc
es
cltd
jae
insl
mov
or
rolb
clc
fs
sbb
pusha
pop
repz
inc
int3
rcl
repnz
aas
add
ficomps
std
or
push
sub
ret
in
cmc
mov
jmp
fs
jo
ret
inc
inc
xchg
enter
pop
out
add
fsts
sub
cmpsb
lahf
test
iretw
sti
adc
aaa
mov
ja
jns
jo
and
inc
push
in
add
pop
sub
popa
mov
or
loop
mov
ret
mov
shrb
sub
inc
mov
repnz
push
rcrb
repnz
and
push
dec
scas
out
jp
adc
out
push
repnz
sbb
fidivrs
in
ja
in
jnp
arpl
inc
push
fcomps
sbb
mov
push
jg
xchg
fidivrs
sbb
jnp
pop
mov
sub
dec
aam
pop
and
xorb
mov
sub
imul
loopne
lret
mov
dec
out
mov
out
test
push
stos
mov
pop
jp
cli
adc
adc
ljmp
rolb
or
mov
test
push
jno
xor
fcoml
jns
es
test
inc
mov
jns
fldt
dec
daa
into
cmc
icebp
jbe
push
sbb
ss
pop
dec
add
mov
aad
dec
jmp
stos
lahf
imulb
nopl
jg
xchg
jmp
jle
add
fisttps
xchg
dec
mov
fsubrp
jno
sbb
or
cli
into
adc
outsl
mov
loop
test
mov
or
dec
cmc
push
popf
repz
sbb
push
mov
mov
popf
push
xchg
sub
push
add
push
xlat
adc
inc
std
push
stc
add
fidivl
or
sub
in
sub
dec
xchg
or
in
mov
sti
adc
fcmove
subb
inc
xchg
ss
mov
out
dec
sub
lcall
sbb
mov
std
idivl
jnp
hlt
out
aad
adc
aas
mov
pop
push
xchg
mov
imul
divb
xchg
mov
ja
popa
push
jb
into
cmp
movsb
int3
push
lret
inc
mov
jle
insb
fcompl
fcmovbe
inc
xchg
adc
mov
xchg
aas
pop
cmp
mov
cltd
loope
in
mov
dec
scas
sbb
push
sbb
lret
lods
mov
mov
addr16
je
dec
loopne
out
mov
or
mov
pop
mov
in
test
push
sub
adc
popf
je
jle
movsb
frstor
cmpb
jg
lea
push
subb
jecxz
xor
inc
cmp
and
cli
insb
mov
aaa
out
and
iret
cmpsb
jno
in
xorb
das
mov
dec
jbe
call
jbe
inc
sbb
mov
xchg
mov
xchg
movsb
push
or
mov
cld
bound
push
dec
js
testb
daa
inc
cltd
sbb
lahf
jns
mov
ds
cltd
cmp
test
and
dec
mov
mov
addr16
out
xchg
sbb
jg
xchg
pop
jne
push
mov
mov
cltd
aas
or
xor
adc
fcoml
and
lret
sbb
or
fsubl
shrb
nop
testl
test
xchg
pause
js
adc
loop
int
xchg
push
inc
xor
cmpsl
mov
push
in
ret
and
add
and
push
mov
into
pop
jnp
incb
push
push
add
scas
jl
pop
jb
ds
bound
sub
aas
sub
sbb
adc
cmpsb
divl
std
add
xchg
cmp
mov
out
mov
jecxz
push
bound
pop
mov
adc
into
pop
sub
movsl
loope
jg
ljmp
adc
and
aaa
out
mov
xchg
add
mov
sbb
fwait
cli
mov
push
roll
int
push
pop
add
inc
fsubs
sub
rorb
cmp
dec
sub
xor
pop
ret
xlat
mov
dec
xchg
mov
sbb
int3
es
sub
sub
int3
lods
ss
xchg
ds
divl
mov
in
loopne
popl
jmp
pop
hlt
out
mov
push
aam
sub
call
sub
push
lods
jp
stos
in
xchg
shll
jmp
arpl
push
fistl
ljmp
dec
out
mov
data16
aad
xchg
out
xchg
scas
and
and
ret
cmp
inc
cmp
push
pusha
movsl
aad
push
inc
xchg
insb
lds
addr16
ss
mov
cmp
push
repz
dec
cmc
fld
stc
lea
cmc
sub
fstpt
xchg
imul
and
cmp
xchg
jnp
pop
lods
shrb
cwtl
sbb
pushf
das
xchg
hlt
add
adc
dec
or
jge
dec
repnz
sbbb
sahf
popf
setns
rcr
or
popa
mov
aaa
pushf
inc
outsb
mov
xor
aaa
lods
mov
jg
push
or
jmp
ret
mov
lods
sub
outsb
ret
mov
push
les
cmp
add
fcmovnb
mov
ds
mov
sub
xchg
jne
pop
lcall
cmp
cmp
lea
mov
jne
pop
dec
pop
mov
add
dec
mov
fmul
and
es
add
adc
sbb
xor
mov
fistps
rcrb
movsl
inc
in
push
fsts
test
div
push
rcrl
sub
and
aaa
outsl
subl
rcrb
cwtl
sbb
jbe
loop
test
adc
sbb
aad
mov
jle
lcall
and
daa
sub
add
push
lcall
roll
mov
lret
mov
jg
pop
inc
xchg
dec
les
xchg
pusha
sub
call
jg
pop
test
inc
push
pop
push
lock
stc
jmp
mov
scas
lcall
test
jne
iret
jecxz
lret
dec
ja
or
movsb
aaa
sub
or
push
push
adc
dec
enter
xchg
imul
sub
adc
shrb
dec
lods
mov
mov
stos
loop
fs
sub
cmp
negl
pop
mov
sbb
int
out
add
lret
cmp
adc
and
fstps
pop
inc
sti
sbb
lea
inc
repz
inc
andl
lcall
addl
aas
cmp
dec
mov
lds
xchg
cli
adc
jecxz
pop
mov
mov
inc
xor
dec
xchg
sub
out
outsl
mov
stos
xchg
nop
hlt
mov
adcb
cmp
sti
cltd
push
aaa
xor
aaa
repnz
mov
rcrl
xchg
add
call
pushf
mov
stc
and
or
mov
cld
lds
lret
lret
leave
dec
outsb
mov
sahf
xlat
ficoms
popa
nop
lret
pop
dec
aam
add
ficoms
adc
push
push
xlat
xor
scas
aaa
sahf
rorb
dec
lods
mov
sahf
cmp
fbld
lcall
jb
mov
push
jb
shlb
roll
out
popf
jbe
ffreep
and
adc
popa
and
inc
xor
mov
mov
pop
ficoml
stos
push
cwtl
push
loopne
aaa
mov
mov
fcmovnbe
lret
mov
dec
or
and
add
in
jge
ljmp
sbb
mov
lret
imul
mov
or
sbb
mov
xor
sarl
js
enter
gs
fistps
sbb
mov
mov
hlt
add
insl
rorb
inc
fsubs
shll
sbb
inc
xor
ret
cwtl
cmp
ret
test
jns
in
mov
rorb
jo
divb
inc
stos
jl
sbb
aaa
movsl
mov
fiaddl
mov
int
mov
or
lret
cmp
mov
sbb
sub
mov
xor
filds
mov
sub
push
clc
dec
xchg
xchg
mov
cmp
lahf
shrb
aam
xchg
push
push
xor
or
cltd
and
jg
xor
jns
lods
push
jns
mov
mov
dec
inc
mov
cmpl
in
aad
dec
ret
cmp
push
in
aad
add
incl
shrb
sub
and
fdivrp
in
and
shll
orl
mov
mov
mov
sbb
sbb
sarl
lahf
push
and
push
mov
and
or
pop
mov
orb
cmp
in
arpl
cmp
scas
add
das
sbb
outsb
pop
into
orb
hlt
fldt
jmp
in
mov
lock
pop
mov
dec
jge
mov
rclb
push
and
int
stos
fs
adcb
push
ds
adc
jae
pushf
pop
mov
dec
or
sub
decl
mov
inc
pop
lret
les
inc
jb
shl
jne
das
inc
push
ret
lds
shl
arpl
mov
xorl
imul
dec
mov
cli
sbb
test
imul
pop
add
push
push
push
bound
pop
daa
outsb
pop
leave
and
inc
push
jbe
mov
jnp
rcl
cltd
push
mov
mov
mov
cmp
sbb
cmp
xchg
xchg
xchg
into
jmp
ret
xchg
cwtl
inc
mov
fwait
scas
sahf
les
clc
adc
mov
mov
jmp
sub
in
lods
aas
or
sbb
mov
leave
lods
pop
mov
subl
xchg
pop
inc
xor
inc
dec
lods
out
aaa
inc
add
push
cld
pop
mov
mov
jl
jle
lahf
das
adc
mov
xor
jae
js
and
cwtl
push
mov
dec
or
dec
fsts
es
pusha
sbb
push
add
mov
shl
jo
hlt
push
andl
cmp
jge
mov
push
cmp
int
daa
dec
mov
xor
and
ds
scas
cmpsl
pop
cmpsl
xchg
pusha
pop
mov
mov
aam
dec
les
and
inc
and
cld
insb
leave
fs
push
rcrl
mov
xchg
jle
add
dec
pusha
outsl
xchg
mov
xchg
incl
pop
push
daa
arpl
sahf
or
andl
punpckhdq
sbb
push
repz
rorl
test
addr16
mov
dec
cmp
jg
cmp
jb
jecxz
mov
xor
test
lods
shll
repz
mov
mov
mov
jge
push
scas
mov
pusha
xor
mov
fs
or
inc
lret
cmc
mov
sub
adc
jbe
lea
mov
outsl
shr
jae
sub
jne
jne
and
adc
or
clc
icebp
je
mov
jnp
push
mov
enter
addr16
les
out
idivl
or
add
sar
inc
xorl
je
mov
sti
arpl
push
enter
inc
pop
inc
cmp
pop
fldl
popa
jns
stos
or
adc
pop
lret
push
dec
movsb
mov
idivb
les
mov
mov
mov
cld
loop
sti
clc
mov
or
xchg
aaa
movsb
jle
lds
cmp
cmpsb
xor
test
or
cmp
cmpsb
ret
adc
lea
imulb
pop
pusha
jge
dec
dec
jb
or
push
scas
lods
notb
icebp
scas
mov
inc
add
call
cmp
inc
rcll
cltd
ret
inc
push
push
fnsave
xchg
jno
scas
mov
jo
dec
bound
je
inc
fwait
mov
cltd
xor
or
dec
sbb
hlt
jp
and
inc
js
bound
sbb
fcomps
jmp
add
xchg
mov
pop
fdivrs
stos
lea
je
cmpsl
pop
std
sbb
sarb
jmp
jp
lea
xor
cmp
xchg
hlt
dec
ret
pop
mov
add
push
and
push
imul
out
fisubs
pop
xor
or
sub
inc
adc
in
sub
cmpsl
jae
mov
jl
xchg
push
aas
inc
stos
pushl
jmp
sbb
pusha
cs
mov
pusha
in
lods
pushfw
inc
inc
jo
scas
lds
iret
mov
fnstenv
test
dec
ljmp
cmp
push
mov
dec
orb
mov
sahf
cld
subb
push
inc
xchg
mov
or
inc
clc
pop
xchg
aad
jge
cltd
mov
sub
xchg
mov
cmp
aas
dec
movsb
dec
rolb
jecxz
mov
dec
pop
dec
push
shll
sub
pop
ljmp
enter
adc
cmp
mov
cmp
dec
aad
ret
mov
and
jbe
inc
adc
iret
hlt
jp
sbb
mul
out
mov
xor
xor
mov
insb
xchg
fsubrs
in
mov
pushf
std
and
xchg
adc
push
xchg
mov
dec
sbb
dec
mov
push
mov
data16
in
cmp
mov
mov
ja
xlat
sarb
adcl
sti
add
insb
dec
mov
aam
bound
adc
arpl
insl
test
stos
testb
adcl
jmp
sbb
cwtl
fiadds
in
jb
jp
mov
pop
aad
sqrtps
out
xor
sbb
sar
stc
testb
mov
loopne
push
ss
test
movsb
mov
cwtl
rcl
push
push
inc
push
cli
lock
out
ret
sub
mov
enter
sub
hlt
cwtl
pusha
leave
imul
aad
pop
cwtl
nop
lret
lods
pop
sarb
test
daa
notb
cmp
loopne
inc
outsb
sub
pushf
cmp
cs
mov
sub
mov
das
das
fsubs
jmp
jb
das
popf
dec
shrl
dec
push
scas
mov
dec
dec
sgdtl
push
out
in
pop
stos
mov
push
mov
test
pop
mov
add
bound
ret
fs
int
lret
outsl
sbb
pushf
or
rcrb
iret
sbb
mov
movsl
inc
cli
movsl
push
and
mov
or
jge
insl
and
mov
cwtl
jbe
loop
rcr
inc
push
ljmp
sub
jnp
mov
adc
and
popaw
pop
inc
xchg
dec
mov
mov
daa
je
xchg
ret
xor
repnz
pop
lds
cmpsb
xchg
dec
jg
mov
xor
sub
aas
dec
mov
inc
adc
out
adc
daa
scas
cmpsb
mov
and
dec
and
faddl
add
prefetcht1
inc
inc
cwtl
aas
dec
jnp
out
pop
ret
ljmp
xchg
mov
adc
fisttpl
addb
arpl
lods
pop
lret
jne
sub
push
xchg
decb
push
xor
lods
push
rolb
or
sub
mulb
cld
fisttpll
cmp
sub
pop
sarl
add
test
addb
repnz
cmp
sub
nop
in
lret
mov
jno
sub
shll
pop
push
xchg
xor
leave
movsl
lods
out
push
jb
cltd
add
jmp
mov
and
cltd
adcb
sub
cs
mov
pusha
loop
inc
addr16
adc
inc
sub
movsl
pusha
xchg
xor
or
or
sub
mov
lret
int
jbe
sub
outsb
and
shrl
dec
sti
push
add
lcall
jbe
mov
push
pop
jmp
aam
insb
mov
negb
in
push
lcall
fadds
pop
xor
push
jle
pop
leave
loop
insb
repnz
shrb
les
pusha
neg
cli
js
pop
test
scas
pop
push
fidivl
scas
sbb
loopne
pop
or
push
cli
xor
xor
leave
fcompl
out
push
mov
mov
lcall
inc
mov
push
rcll
cmp
inc
bound
xor
jbe
push
push
les
in
sbb
sbb
cltd
cmp
or
add
adc
aas
test
pusha
pop
ljmp
in
aaa
push
faddl
xchg
jmp
fdivrl
inc
lret
fisttpll
push
mov
pusha
sti
push
pop
mov
shrl
sub
lahf
add
insl
jge
clc
inc
mull
xor
call
repnz
mov
bound
inc
cli
sub
shlb
fildll
or
imul
mov
dec
stc
fwait
insl
dec
insl
mov
out
imul
rorb
sub
or
xchg
inc
insl
push
push
pop
sub
lret
or
dec
rclb
mov
mov
jmp
jl
hlt
es
outsb
mov
aad
mov
dec
cltd
arpl
push
idivb
adcb
lret
jecxz
lcall
pop
adc
cld
sbb
jns
inc
insl
or
adc
push
push
fildll
bound
jns
ds
incb
jno
sbb
push
in
mov
mov
insb
int3
mov
xchg
cmpsl
fs
pop
xchg
mov
mov
test
lcall
dec
jne
dec
and
shlb
insb
push
xlat
mov
cwtl
mov
push
cmp
loope
push
nop
cmpsl
scas
das
div
cmpsb
dec
imul
push
push
fcomps
jae
adc
xchg
leave
repz
test
cmp
jno
cmp
shrb
lahf
xor
xchg
or
sbb
arpl
cmp
xor
xchg
cmc
neg
pop
jb
xchg
xor
dec
lods
jge
cmp
ja
and
xor
jae
pop
pop
out
jle
lea
inc
push
mov
mov
ret
jne
cltd
loope
leave
ja
lods
addr16
and
in
lcall
pop
dec
xor
adc
int3
lret
out
pop
xor
mov
sarb
fsts
roll
add
shll
ja
fisttpl
cmpsb
decb
stc
sbb
mov
adc
jno
add
repz
adc
xor
mov
cmp
cmp
pop
xchg
dec
inc
cmc
inc
ror
loope
xchg
dec
test
sbb
push
pop
inc
sbb
cli
loopne
cmp
xchg
xor
cmp
dec
xor
xchg
xor
pop
sahf
pop
scas
out
popa
repz
mov
fldcw
mov
inc
ret
call
xchg
mov
lds
mov
aam
testl
icebp
popa
xor
pop
pop
xor
push
sub
or
iret
dec
rorb
sarl
fisubrl
xorb
std
push
or
jle
cltd
mov
push
xor
in
les
or
std
push
lods
iret
mov
stc
cmp
mov
add
sti
lahf
enter
aam
add
lock
xor
xor
in
fs
lock
dec
inc
into
nop
popf
std
mov
cli
stc
jno
mov
mov
hlt
dec
clc
or
mov
xchg
lcall
sbb
ss
lods
test
mov
std
movsb
mov
lock
pushf
cmp
out
adc
push
mov
inc
fucomp
out
inc
push
jecxz
mov
and
test
mov
mov
cmp
pop
lahf
cli
int3
cmp
add
add
adc
sbb
inc
je
or
cli
push
dec
push
dec
data16
push
adc
iret
fdivl
mov
andb
jp
in
aam
dec
jo
mov
insl
clc
jmp
xor
in
jns
push
push
in
out
pop
stos
jbe
jbe
pusha
fwait
or
push
and
mov
push
lcall
push
addr16
push
rdpmc
mov
or
push
les
sbb
push
mov
mov
out
inc
test
or
inc
imul
jns
push
jp
int3
xchg
add
out
inc
and
cmc
insb
nop
shl
cld
mov
mov
and
fistpl
movsb
out
add
inc
mov
sub
jp
inc
or
sbb
pop
test
xchg
fwait
rol
inc
movsb
aam
ret
adc
jge
dec
popa
add
int3
push
and
mov
xchg
mov
dec
lds
test
pop
aad
stc
cmp
cwtl
test
in
roll
or
data16
sahf
es
fcomp
das
sub
shll
add
jae
adc
jg
mov
add
inc
sbb
cmc
repnz
push
pop
mov
scas
pop
ficompl
addr16
inc
jo
mov
jecxz
mov
fmuls
in
push
mov
cwtl
loop
adc
dec
mov
xchg
inc
loopne
xchg
je
mov
push
xlat
xchg
sbb
and
sti
or
xor
mov
jns
int
in
mov
rcrl
nop
leave
mov
popa
xor
fldcw
mov
dec
mov
lds
jo
pop
xchg
test
popa
xor
mov
sub
pop
daa
fiadds
mov
insb
or
push
adc
mull
jmp
dec
rclb
rcl
mov
js
and
jge
or
jp
out
shlb
xchg
in
ljmp
lods
mov
jb
stc
cli
cs
insl
push
gs
cmc
or
insb
andb
fcos
and
shr
aad
xchg
into
jns
bound
leave
ficompl
sub
imul
cmpsl
test
mov
ja
mov
bound
cmp
inc
cmpsb
push
stc
push
or
out
pusha
ret
mov
xchg
test
scas
xor
fisttpl
pop
lea
push
cmp
add
add
mov
je
adc
inc
subb
mov
sbb
fnstsw
sub
xor
pop
out
mov
mov
js
jecxz
nop
push
dec
in
std
add
cwtl
jo
mov
leave
push
pushf
pop
jbe
test
fwait
mov
push
xchg
mov
pop
cld
pop
mov
das
add
fwait
push
push
leave
mov
movsb
jae
xchg
pop
xchg
and
sub
lea
xchg
xchg
pop
push
adcb
cld
add
stos
sbb
mov
inc
cmp
std
fstl
push
xchg
lahf
in
lock
adc
mov
cltd
sbb
inc
dec
xchg
mov
in
jns
dec
out
mov
mov
inc
sub
push
cmp
fbld
push
push
lea
xchg
pop
dec
and
insb
push
pop
shrb
adc
in
cwtl
mov
nop
imul
fadd
add
loop
loopne
push
sar
daa
stc
sub
push
scas
lret
cmp
and
inc
jo
ljmp
dec
jmp
push
inc
jge
pusha
jp
cld
je
cmc
pop
mov
mov
sub
mov
movsb
sahf
pop
popa
and
push
sub
dec
push
sbb
fs
or
jecxz
mov
das
or
jl
sbbl
push
xor
cmp
pop
inc
dec
lds
pop
clc
mov
lds
popa
mov
sub
cmp
sub
jp
cld
stos
push
sarb
leave
push
sub
fbld
dec
dec
push
pushf
outsl
sub
sbb
cmp
push
cmp
jnp
mov
xorb
clc
roll
pop
xchg
sub
mov
sub
ret
dec
add
shr
push
iret
gs
xor
je
lods
pop
andb
sub
out
sbb
cld
mov
divb
add
jnp
push
hlt
sbb
int
jg
jmp
and
or
inc
lods
sub
pusha
push
repz
jns
lock
mov
nop
sbbl
xor
pop
rorb
jecxz
lret
mov
jb
jnp
inc
js
mov
int
call
arpl
mov
in
sahf
xor
jmp
mov
testl
sar
cli
data16
mov
mov
pop
ss
sub
push
into
not
lods
incl
mov
inc
cmp
cmp
push
cmc
nop
add
mov
cs
mov
xchg
add
je
xlat
jnp
dec
mov
ret
push
inc
leave
cld
pop
int
loop
mov
js
mov
orl
mov
movsl
mov
cmp
push
cmc
jns
jge
xchg
jnp
mov
or
add
je
data16
test
rcl
in
movsl
pushf
jns
mov
shlb
or
add
jl
or
sub
data16
sbb
push
std
or
or
dec
loop
sti
push
sub
inc
popa
jae
xor
mov
std
mov
and
push
dec
xchg
sub
out
bound
stos
arpl
and
and
cs
bound
xor
data16
lds
sar
xlat
fyl2xp1
out
pop
mov
mov
sub
es
std
adcl
repnz
xlat
mov
dec
jecxz
cwtl
fisubrs
in
mov
xor
popa
push
adcb
mov
mov
mov
jl
addr16
orl
mov
mov
fidivl
lret
insb
pop
dec
add
cmpsl
mov
rolb
cmp
lods
cmpsl
cmp
push
sbb
sub
lods
test
mov
push
fucomi
popf
popa
rclb
inc
aaa
pop
rcll
lcall
adc
inc
repnz
sti
xchg
mov
xor
sub
dec
mov
add
out
adc
rcll
pop
mov
push
jns
adc
std
and
fcoml
decl
addr16
shll
jp
jbe
aas
or
in
xchg
outsb
imul
mov
leave
push
adc
les
out
xorb
mov
subl
mull
xchg
stos
out
orl
ds
jns
jmp
mov
jns
lods
pop
lcall
shll
fiadds
cmpsb
jne
inc
clc
cwtl
mov
shrb
pop
xor
stc
xor
cmpl
sub
mov
stos
add
mov
push
jmp
ss
sbb
outsl
adc
aaa
adc
cmpsl
mov
sarb
jp
fs
into
test
jecxz
enter
mov
mov
cmp
out
jbe
xor
jmp
or
or
push
mov
cmp
and
jns
out
add
add
push
xor
daa
lock
push
movsl
inc
mov
fs
fs
xchg
fwait
xor
sbb
pop
out
or
cmp
xor
jmp
inc
sub
fimull
xor
sbb
push
scas
loopne
push
rcrb
fidivs
sahf
in
cmpsb
sbb
cld
pop
add
fdiv
cmpsb
orb
inc
dec
call
in
add
dec
adc
sar
mov
cmc
rorb
repz
mov
inc
pop
in
push
mov
dec
popf
push
js
mov
push
sbb
rorb
ret
jl
and
dec
movsl
adc
addb
add
jbe
and
and
pushf
inc
push
push
sarl
push
xor
jge
movsb
or
push
mov
jno
and
and
mov
xchg
xlat
int3
insb
pusha
test
in
and
in
fsub
dec
lahf
lahf
jmp
enter
cmp
test
sbb
std
aam
sub
push
scas
gs
cli
jns
push
insl
sarl
lcall
mov
daa
push
gs
out
cli
or
push
lock
inc
push
and
xchg
xchg
xchg
fstp
inc
cmpsl
sbb
or
icebp
fwait
and
es
cmp
into
iret
idivl
leave
mov
jecxz
mov
adc
cmp
sti
cwtl
mov
mull
cmc
insb
repz
fisubl
mov
popl
xchg
and
jmp
cmp
lret
ss
cwtl
leave
or
pushf
adc
mov
mov
stos
push
jo
ret
dec
mov
lret
and
pop
pop
inc
lcall
add
jmp
xchg
repnz
adc
into
dec
mov
push
popf
pop
xor
adc
imul
mov
ds
flds
xchg
adc
sbb
ja
push
mov
leave
inc
lret
pop
jl
sub
orl
add
and
pop
ss
mov
cmpsl
mov
iret
addb
fwait
cmp
sbb
add
insl
push
aaa
insl
xor
pusha
rcll
lods
sarb
sahf
pop
in
icebp
pop
gs
cmpsb
arpl
inc
mov
xor
test
out
xor
test
jae
fwait
cmp
call
mov
lea
pushw
addr16
rcrb
lcall
dec
popf
xchg
adc
pop
ljmp
push
repz
in
push
mov
icebp
mov
and
lock
sahf
jmp
sbb
mov
mov
fs
icebp
popa
or
scas
push
push
test
jge
inc
std
in
or
lret
inc
jle
jp
mov
and
fwait
clc
divl
ja
and
sbb
adc
sub
ss
pop
testb
push
sbb
xchg
cmp
jge
leave
and
inc
aaa
push
in
and
inc
pop
rcrb
xchg
pusha
sahf
fldenv
shll
xor
mov
jae
push
out
cmpsl
inc
jno
pop
cli
cwtl
movb
mov
scas
add
or
icebp
cmp
jle
xlat
jmp
sahf
jp
mov
insb
or
cmp
or
outsb
movsb
fsubrp
inc
mov
push
repnz
xlat
mov
test
sub
dec
js
push
sbb
and
mov
sub
loopne
fcmove
mov
adc
xchg
push
cli
aas
outsb
test
push
enter
mov
pop
inc
cmp
enter
subl
jae
inc
loopne
sbb
dec
aam
fldenv
lock
in
push
push
dec
call
mov
hlt
cmp
mov
scas
dec
sahf
jg
shll
les
mov
mov
cmp
and
data16
mov
adc
jecxz
leave
xchg
out
xchg
inc
std
loope
inc
cmp
clc
lock
or
imul
test
mov
sti
mov
mov
fs
pop
mov
xchg
push
mov
std
mov
data16
jge
iret
repz
xor
cmp
stc
out
inc
hlt
ljmp
sub
cli
jge
push
lock
in
repz
icebp
inc
lock
xchg
out
ss
pop
pushf
cmpsl
dec
hlt
cmpsl
aam
dec
leave
mov
mov
roll
sub
imull
out
outsb
adc
or
andb
cmp
pop
jle
push
cwtl
mov
idivb
ffreep
pushl
cmp
cmp
jno
xchg
iret
lods
adc
jne
or
push
out
mov
pop
or
loope
push
cmpsl
mov
pop
lret
lret
pusha
pop
ja
rorl
dec
mov
push
aam
mov
pop
pop
lahf
pop
pop
out
sahf
dec
inc
popf
lock
push
je
out
aas
out
outsl
in
loope
jle
sbb
fwait
pop
mov
out
call
insb
mov
dec
vcmpss
push
lds
and
aaa
mov
fsubrl
add
jmp
mov
movsl
cmp
adc
mov
and
jle
movsl
sbb
adcb
dec
shll
jae
cwtl
cmpb
push
inc
or
loopne
lds
jo
add
fcompl
lods
jle
mov
dec
data16
adc
xchg
dec
and
stos
dec
mov
pop
push
std
insb
mov
jne
ret
out
inc
pusha
or
add
jp
lea
lret
push
leave
dec
jge
std
repz
push
out
fwait
adc
cmp
push
ret
fadd
nop
add
inc
ss
imul
fidivrl
mov
sti
push
mov
scas
loop
ss
push
addr16
in
mov
outsl
cmp
pushf
aaa
stc
stc
insb
arpl
lar
stos
mov
rcll
frstor
in
ret
mov
push
push
mov
dec
or
notl
inc
push
call
xor
xchg
push
data16
cmp
insb
sti
addr16
xlat
popa
aaa
icebp
add
mov
lds
js
ljmp
pop
jge
push
iret
jg
lret
xor
es
pop
lea
scas
adc
test
sub
mov
jl
sbb
pop
loopne
xor
fisubrs
jl
mov
cmp
mov
sbb
ljmp
cmc
pop
adc
xchg
add
adc
mov
lods
xchg
sbb
rorb
sbb
movsl
mov
jge
ss
push
push
lds
cld
rclb
lcall
lcall
adc
imul
xor
push
and
sbb
mov
addb
dec
pop
loopne
std
test
outsl
add
arpl
sahf
pop
cmp
mov
inc
test
jno
movsb
xchg
mov
test
push
sub
mov
in
je
in
jb
and
sti
xchg
inc
jmp
jecxz
or
dec
xchg
movsl
call
int
cld
mov
cmp
jge
in
and
clc
lock
outsb
pop
neg
mov
lock
stos
xor
fst
or
les
outsb
or
lea
sbb
sti
ret
mov
and
inc
mov
lds
outsb
rorl
icebp
sub
and
cmpsl
cmpsl
pop
hlt
jns
repz
ljmp
adc
in
ss
sub
ret
jle
mov
push
push
or
mov
pop
xchg
add
sub
mov
call
add
addr16
andb
and
lds
push
dec
adc
and
add
jo
int
std
lds
ljmp
aad
mov
sbb
mov
fmulp
std
insl
ljmp
cmpsb
mov
test
mov
sbb
inc
cld
pop
or
sub
mov
rclb
je
enter
out
inc
lods
push
ds
sub
daa
add
movb
dec
xchg
shl
jle
inc
adcl
icebp
cwtl
popf
mov
cmp
push
test
int3
jo
shrb
sarb
test
inc
jle
scas
xchg
cmc
or
jae
jg
std
push
xlat
lret
dec
daa
pop
ret
jecxz
add
int3
fucomip
loope
fsubs
repz
shrl
sub
mov
inc
test
lea
add
push
xchg
cltd
adc
jge
inc
fbstp
bound
outsb
adc
add
push
movsl
jb
scas
cld
rorb
adc
std
lds
and
sub
imul
push
sbb
adc
repnz
jo
arpl
add
jmp
mov
push
mov
cmp
aas
rcll
xchg
cmp
cli
lock
lcall
sbb
sub
mov
lcall
pop
loopne
fmull
outsb
enter
add
and
js
cld
addr16
jmp
inc
jge
mov
inc
or
adc
fs
and
out
jecxz
out
cltd
shlb
shll
mov
add
cltd
pop
in
stc
aaa
inc
inc
cmc
cli
aas
push
sbb
pop
push
cs
push
push
mov
lea
xchg
mov
pusha
xor
sub
das
xor
repz
dec
hlt
mov
idivb
fs
jle
jae
jge
mov
jl
pop
cmpl
cld
out
cmp
loopne
outsb
pushw
aad
inc
iret
movsb
sbb
adc
sbb
mov
fcoms
xorl
mov
sbb
sub
lods
mov
pusha
lea
leave
jmp
cwtl
push
imul
dec
pop
jo
movsl
ja
sbb
sahf
outsb
adc
xlat
call
push
hlt
mov
jno
mov
movsb
scas
or
mov
mov
fnstenv
add
jnp
push
mov
orl
cli
jmp
fwait
jne
mov
jp
out
nop
dec
sbb
lds
cltd
xor
leave
int3
mov
fcoml
in
lods
cmpsl
jo
gs
scas
push
push
fadds
sbb
std
adc
mov
jmp
imul
stos
xchg
jge
ficoms
sbb
jb
pushf
rol
mov
mov
or
in
lods
test
dec
scas
pop
push
mov
imul
cmpsb
pop
add
jno
iret
bound
jns
and
pop
cmp
mov
pop
add
jno
out
jo
aad
jo
cwtl
aam
popf
mov
cmc
test
xor
push
jns
in
call
fwait
cmp
xchg
cltd
inc
inc
inc
add
out
lahf
pop
in
adc
inc
xchg
or
pop
dec
sbb
mov
faddp
js
mov
in
mov
dec
lret
js
test
jo
mov
icebp
mov
dec
sub
push
pop
jmp
out
imul
dec
rorb
and
sbb
test
ret
gs
hlt
negb
push
ss
je
mov
jmp
stos
in
mov
jae
icebp
sub
pop
out
xchg
inc
ds
xor
shll
sahf
jno
cmp
jbe
inc
or
insl
mov
mov
cld
mov
out
cmp
jmp
mov
imul
inc
xor
xchg
sub
sbb
cli
cmpsl
mov
in
cmp
jns
js
xor
xchg
dec
mov
into
mov
mov
repz
or
aam
jo
fld
nop
pushf
std
inc
ffreep
leave
sbb
mov
adc
adcl
xchg
clc
stc
inc
shlb
js
cmpsl
nop
mov
cli
mov
shl
pop
push
daa
xor
sub
xor
pop
lock
dec
pop
mov
sbb
sbb
dec
dec
enter
sub
inc
sbb
imul
pop
mov
pop
cli
popa
adc
push
mov
outsl
push
popa
cmp
mov
xchg
xor
es
sbb
push
dec
outsl
jae
testb
ret
outsb
into
xchg
stc
sub
inc
pop
cmp
dec
jmp
inc
jnp
mov
lcall
mov
or
and
mov
pop
movsl
mov
inc
dec
dec
jno
pop
loopne
iret
add
adc
adc
sub
mov
xchg
aam
push
mov
push
jae
mull
cmp
ret
int
loopne
ss
arpl
mulb
ss
or
popf
movsl
movsb
cld
or
iret
cli
ficoml
add
repz
mov
xor
push
push
inc
gs
push
leave
out
mov
loopne
cmp
mov
xchg
ret
or
je
aam
jbe
daa
xchg
addr16
xchg
mov
cli
fisttpll
lcall
out
cmp
fidivs
or
inc
adc
xchg
add
pop
jg
out
dec
cs
out
add
cltd
jne
rorl
jbe
insl
lods
or
int
addr16
cmp
clc
cli
xchg
pop
sahf
lock
add
scas
into
sbb
cs
fcompl
loop
cmp
mov
popa
or
loop
or
dec
and
jmp
push
sbb
push
sti
andb
mov
out
jmp
jno
xor
sbb
mov
push
or
mov
nop
xchg
push
adc
out
mov
jae
test
mov
pusha
aam
sbb
cld
or
cli
push
add
orl
jp
dec
mov
mov
je
mov
shll
and
stc
sbb
jg
pop
push
pmuludq
aas
js
and
fadd
mov
push
sbb
and
divl
inc
sub
push
jae
push
and
sahf
out
fstpt
sahf
jmp
inc
and
push
pop
xlat
test
aad
pop
mov
mov
pop
mov
mov
xchg
clc
clc
ja
es
negb
loopne
testl
inc
mov
sbb
mov
insb
jecxz
sub
inc
xor
cs
jmp
ss
or
xlat
mov
sbb
sbb
lcall
imull
popl
dec
jns
sub
shl
pop
mov
dec
push
sub
or
das
test
out
jle
pop
repnz
ja
clc
andb
test
lods
mov
sbb
std
xor
pop
les
cmp
int
adc
mov
mov
pop
das
loope
and
sbb
mov
adc
jmp
xchg
aas
loope
fnstsw
addr16
outsb
pop
in
call
and
inc
mov
xor
push
fninit
cmpsl
pusha
push
test
pop
sarl
xchg
xor
mov
gs
and
mov
stos
dec
mov
push
in
dec
les
aas
fsubrs
xchg
movsb
int
inc
or
lods
adc
jge
movsb
jg
inc
mov
loope
mov
in
lcall
jo
aam
neg
pop
loop
jl
out
aas
jmp
ret
scas
outsl
jo
bound
nop
mov
outsl
mov
imul
cmc
cs
shlb
clc
enter
push
and
stc
js
cmpsl
push
cmp
push
or
ret
mulb
jno
sub
les
mov
iret
repz
gs
aad
arpl
adc
push
dec
leave
inc
pop
jnp
rcll
ss
pop
and
xor
fstpt
or
lret
loope
lods
insb
inc
addr16
add
mov
movsb
cmp
ja
xorb
gs
pop
mov
mov
shll
fistpll
lret
and
and
jnp
pop
or
xchg
add
enter
sar
test
or
xchg
jmp
or
xchg
push
mov
inc
in
clc
lea
jae
cld
push
xchg
xchg
mov
and
shll
popa
data16
push
mov
lds
cld
or
mov
outsb
cmp
xor
xchg
pop
jnp
sbb
dec
mov
xor
pusha
sub
shll
gs
mov
rolb
push
dec
add
adcl
daa
and
test
daa
xchg
xor
mov
xchg
fisubrs
mov
out
sahf
or
cmp
xchg
loop
lcall
cli
xchg
ss
mov
mov
mov
sub
push
xchg
sub
push
stos
mov
nop
adc
add
jnp
mov
outsl
xchg
fwait
cmpl
repz
jmp
xchg
faddl
fbld
sbb
inc
andb
or
push
mov
dec
jbe
xor
leave
lods
push
js
dec
sti
mov
in
dec
out
dec
cmp
xchg
outsl
sub
push
xor
test
jl
pushl
pop
and
xor
sub
dec
imul
pop
dec
adc
mov
clc
repnz
sbb
sbb
jo
pop
loope,pt
sahf
daa
lret
mov
clc
mov
xchg
test
pop
lcall
dec
loop
xchg
lret
sahf
add
loop
cmp
out
push
jmp
repnz
jl
scas
push
cmp
dec
mov
push
pop
fistpl
fwait
repnz
jmp
mov
data16
mov
mov
testb
mov
dec
mov
cmp
sbb
shlb
jp
cltd
nop
addr16
daa
popf
ljmp
dec
mov
xor
fistl
xchg
cmp
inc
inc
jns
imul
fs
cmp
fdivr
ret
and
and
dec
sahf
mov
jge
les
out
adcb
jmp
sub
sbb
pop
push
push
push
dec
push
out
add
es
or
cwtl
pop
imul
cmc
loop
xchg
inc
mov
push
inc
ror
or
pusha
cld
out
test
sub
in
rorl
imul
xchg
xor
mov
xchg
int3
sbb
scas
mov
add
mov
sub
int
jg
xchg
sbb
dec
xchg
outsl
filds
inc
mov
dec
test
lock
testl
xchg
fsubrl
rolb
inc
adc
pop
insl
into
jmp
inc
ja
pop
mov
ret
mov
mov
push
push
ljmp
inc
insb
leave
inc
pop
push
bound
push
push
and
mov
dec
fstpl
sbb
cmp
aaa
pop
adc
mov
imul
inc
xchg
imul
push
pop
sahf
mov
loop
insb
aaa
bound
push
insb
das
push
xlat
jb
rolb
jp
pop
pop
rcrb
sub
sbb
popf
cmp
or
and
mov
pop
fsts
gs
pop
mov
dec
cmp
sub
aam
outsl
xor
push
push
pop
inc
sahf
cmc
das
push
loopne
testl
inc
test
pushf
mov
sbb
add
sub
jo
xchg
loope
in
inc
mov
pop
pop
cld
xchg
sbb
push
pop
xchg
add
push
mov
cmc
push
xchg
call
xor
mov
pop
xlat
sahf
and
pop
jbe
sbb
sub
inc
add
lea
mov
sahf
add
push
lcall
enter
cli
xchg
enter
dec
mov
mov
sarb
and
xor
adc
mov
hlt
adc
outsb
or
and
pop
lock
sub
push
jb
in
mov
push
inc
or
adc
cmp
push
int3
pop
push
popf
xor
mov
push
sub
ja
ret
lea
fldt
push
push
cmpsb
add
push
pop
insb
stos
popf
nop
fucomip
mov
popa
fnsave
cld
outsl
inc
xlat
fucom
or
mov
and
test
stc
loopne
out
test
aad
lahf
pop
out
or
inc
and
sbb
xchg
sar
fisttps
adc
es
pop
cmp
les
mov
aaa
dec
lds
mov
sbb
sbb
int
stos
pushf
cmovno
mov
dec
inc
adc
in
arpl
inc
cwtl
cmp
test
pusha
sub
ljmp
je
mov
js
or
fisubl
xor
movsb
bnd
xchg
nop
int
xchg
xor
test
out
andb
sbb
push
xchg
lods
dec
rcrl
sahf
mov
sbb
xor
fstps
xlat
in
loop
or
dec
xchg
xchg
enter
std
xchg
inc
pop
bound
pop
outsb
popf
arpl
jnp
insl
mov
in
cmc
out
dec
adc
xchg
xchg
ds
sbb
sbb
dec
or
scas
dec
imul
mov
ds
roll
sub
add
fimuls
out
leave
fdivs
mov
gs
lcall
cwtl
shlb
scas
std
rcrl
mov
icebp
lret
pop
and
sbb
pop
mov
repnz
fcompl
cld
imul
or
sub
hlt
add
in
inc
push
push
adc
in
in
pop
sbb
mov
imul
inc
mov
test
xchg
imul
fwait
pop
xchg
push
aam
pop
adc
aaa
cltd
pop
rorb
ret
clc
cmc
in
bound
stos
sub
jle
dec
and
sbb
jbe
jne
int3
sub
loop
mov
out
ja
repz
and
out
rorl
pop
std
pop
or
mov
jae
pop
or
xchg
inc
jae
aas
shl
push
adc
xchg
or
and
lock
sub
add
mov
movsl
dec
fs
xchg
movsl
fs
fnstsw
ss
mov
add
add
push
inc
push
fildl
xchg
sbb
jns
adc
adc
lret
sub
sbb
cld
cltd
and
mov
sub
mov
push
push
mov
test
cmp
pushf
xchg
mov
jp
cld
or
mov
xchg
aam
xor
out
pusha
outsl
cltd
sbb
mov
xchg
sub
push
jb
cmpsl
das
das
aas
insl
inc
icebp
pop
and
push
pop
mov
and
fwait
push
xor
mov
mov
dec
dec
xor
popf
repz
popf
pushf
push
int
mov
jb
dec
pop
movsb
ds
insb
cmp
push
outsl
cmpsl
sub
xchg
mov
adc
das
xchg
mov
movsl
in
test
jle
cmp
mov
or
or
sbb
test
jecxz
mov
and
mov
cmp
xchg
nop
or
push
cmpsb
mov
add
mov
push
cmp
mov
cs
inc
mov
js
jns
inc
test
mov
mov
mov
rclb
fidivrs
test
jecxz
push
jg
jg
scas
insb
cli
repnz
cs
mov
dec
push
imul
xor
xchg
push
insl
mov
jne
test
xchg
pushf
mov
mov
nop
fadd
out
mov
cmp
das
lcall
mulb
cmp
sbb
ja
cmpsb
mov
jle
rcrl
mov
sbbl
xor
dec
pmuludq
jo
nop
in
adc
or
sbb
cld
dec
mov
pop
andl
dec
xchg
popl
mov
repz
les
popf
into
mov
mov
aaa
mov
pushf
ret
fwait
xor
pop
int3
call
push
nop
jl
loopne
aaa
test
fdivl
and
shrb
lahf
mov
test
jbe
dec
push
fsts
push
insb
sarb
cmp
xor
xor
jae
push
daa
mov
add
dec
sub
lods
or
jbe
les
adc
daa
xchg
mov
pop
insb
inc
xor
scas
pop
pop
loope
adcb
mov
cld
xchg
sbb
pop
rorb
imul
mov
movsl
sbb
cmp
out
jle
adc
mov
icebp
sbb
or
and
aaa
push
dec
int
sub
add
lods
cmp
outsl
dec
sbb
std
mov
nop
ffree
xchg
lods
repnz
jge
or
mov
cld
mov
add
icebp
mov
leave
or
jl
cmp
lods
jge
ss
out
daa
push
xchg
orl
in
adc
aaa
jno
je
scas
out
insl
sbb
daa
pop
push
sbb
loop
adc
inc
push
push
ret
dec
push
out
sahf
push
mov
and
dec
add
cld
dec
gs
add
jmp
fisubrs
jae
xchg
sub
out
addl
mov
inc
xchg
dec
in
test
xchg
mov
ss
or
ss
mov
pop
pop
adc
fs
jg
popa
aaa
add
loop
jb
repz
in
xor
cmc
lea
jl
hlt
or
jmp
ss
cli
movsb
adcl
xchg
sub
dec
push
shlb
or
bound
lock
mov
es
stc
inc
lcall
int3
mov
xchg
adc
xchg
sarb
scas
mov
insb
add
shll
imul
add
ficompl
enter
mov
lea
fimull
js
inc
adc
inc
cmp
and
gs
insb
and
xchg
lods
xor
fldenv
loope
lcall
in
xchg
cli
inc
mov
push
xchg
test
out
xor
inc
shll
or
pop
lods
mov
cmp
scas
push
and
faddl
das
jle
fstpl
fdivrl
jo
xchg
jmp
in
dec
pusha
test
cmpsb
mov
pop
jns
shlb
jo
lcall
add
stc
jbe
inc
mov
dec
movsb
mov
iret
xchg
pop
add
sub
pushf
sbb
or
cmp
push
mov
jo
repz
jmp
pusha
mov
xlat
inc
xor
sbb
mov
mov
dec
cwtl
stc
mov
fdivrp
imul
mov
dec
bound
adc
push
rclb
and
mov
stos
inc
test
jg
jb
or
loop
or
insl
sbb
pop
sub
jne
fidivrs
and
out
leave
pop
push
sbb
popf
push
or
inc
jne
in
cmp
mov
mov
je
and
je
ficoms
ja
cmp
out
jp
adc
stc
mov
dec
ss
arpl
or
jo
cli
adc
sbb
mov
sbbl
jb
push
les
xorb
mov
stos
add
mov
and
sarb
cmp
fsubrs
xchg
insb
inc
fidivrs
fprem1
mov
and
fnsave
or
jg
int3
sub
mov
fldln2
mov
sub
orl
lahf
sub
test
sub
pop
out
mov
xchg
mov
jno
repz
and
add
add
mov
and
and
xchg
cmp
fidivs
divb
adc
bound
mov
in
pusha
mov
ja
xor
sub
xor
mov
jb
jne
repnz
mov
mov
push
stos
mov
push
and
jo
pop
arpl
jge
sbb
ds
and
xchg
xchg
mov
dec
jmp
xchg
gs
push
arpl
movsl
sub
lret
sub
push
push
sbb
cmpsb
int3
paddb
cwtl
cs
nop
loope
stc
in
fisubs
sahf
xor
adc
cmp
sub
sub
adc
sti
or
jbe
fcmovbe
std
pop
hlt
mov
aaa
lods
test
test
add
mov
pop
jg
push
fwait
in
mov
pushf
lds
subl
mov
add
cmpsl
std
mov
scas
push
fstpt
mov
pop
adc
cmp
outsb
data16
test
arpl
mov
dec
arpl
add
mov
out
add
les
fbstp
cmc
cs
int3
or
repnz
jns
jnp
jg
adc
adc
incb
mov
xchg
and
sub
cli
mov
in
and
rolb
stos
and
mov
mov
sarb
je
add
imul
insl
int3
shlb
lret
shrl
xor
push
inc
bound
das
sub
cmpsb
sbb
and
cltd
xchg
rorb
into
add
insl
mov
jl
daa
sub
loop
cmpsl
shrl
in
out
jmp
push
jge
movsl
pop
ja
cmp
pop
bound
stos
in
jmp
movsb
dec
ljmp
cmpl
pusha
insb
push
repz
lcall
mov
popl
dec
ss
add
ror
fistpll
aaa
enter
push
lahf
sub
or
cli
dec
pop
and
js
pop
outsl
xlat
mov
stos
mov
add
loop
adc
fs
xor
data16
pop
add
imulb
in
stc
sbb
pop
imul
int3
and
roll
int3
push
add
and
sub
or
mov
clc
cmp
xchg
lods
sar
mov
mov
popa
fmuls
inc
ffreep
add
ret
cmp
sub
and
adc
lods
jb
push
mov
sbb
popf
pop
inc
test
jg
or
cmp
jecxz
sub
or
mov
pop
fildl
or
jge
jmp
loop
pop
aaa
push
mov
inc
arpl
jge
call
inc
ds
and
xor
cmpsl
mov
inc
imul
sub
es
enter
inc
fucompp
xchg
mov
pop
bnd
jl
arpl
cmc
xchg
in
test
int3
xchg
inc
movsl
push
mov
movsb
test
out
pushf
aam
sahf
aad
cmp
addl
add
paddw
and
sub
mov
or
add
sub
fcmove
xor
push
inc
iret
mov
aas
flds
push
cmp
lahf
cld
xchg
sbb
xor
or
inc
mov
xchg
and
jns
les
mov
adc
cltd
xor
jo
add
mov
lods
mulb
mov
and
mov
ret
inc
xor
and
pop
arpl
popa
repnz
flds
add
sbb
xor
adc
mov
add
pusha
cmpsb
pop
and
leave
xor
stc
sub
xor
fcmove
bound
loope
xchg
jecxz
dec
jecxz
inc
cmp
lret
xchg
loope
and
idivl
inc
andl
je
xchg
aaa
loop
popf
mov
pop
push
inc
push
call
cmc
jno
mov
jl
ss
loop
stc
test
add
in
shrb
or
cltd
leave
xor
sbb
out
mov
adc
sub
test
adc
mov
push
ficoml
or
loope
lcall
push
or
les
cmpsb
fsubrp
ffree
add
and
iret
aad
inc
or
mov
ret
jns
repnz
int
stos
pop
popw
mov
out
sbb
cmp
mov
popf
in
xor
mov
iret
pop
iret
push
push
nop
iret
shr
roll
aad
mov
je
movsb
or
es
in
pop
dec
xlat
push
js
push
ss
inc
xchg
xor
mull
loope
pop
pop
mov
jns
mov
mov
aam
mov
roll
out
das
stc
push
xor
lea
xlat
mov
icebp
cltd
lds
mov
push
aad
or
mov
inc
pusha
out
dec
mov
add
and
test
cmpsb
lahf
pushl
push
xchg
stc
xchg
fmull
mov
and
loope
call
scas
xchg
or
or
xor
fs
fcompl
dec
daa
sub
jmp
int3
aam
mov
stos
sbbl
lahf
shll
cmp
sub
out
inc
mov
loope
pushf
call
clc
adcb
out
inc
xchg
pop
imul
cmpsl
aam
fistps
stc
jbe
ljmp
adc
push
out
sub
fidivrl
loope
mov
ljmp
gs
out
out
mov
mov
add
sub
push
mov
iret
mov
and
jp
pop
loop
push
mov
xchg
jmp
pop
ret
dec
std
mov
sbb
mov
mov
mov
movsl
movsl
jnp
repz
adc
ljmp
or
xchg
xor
sub
bound
aas
mov
mov
push
fsub
stos
jle
xchg
rol
mov
xchg
addr16
and
fstps
test
mov
mov
sub
ljmp
lahf
mov
xlat
std
lea
xor
xlat
aam
daa
jb
ljmp
cmpsl
nop
jo
jns
imul
ret
ja
sub
orb
push
pop
ret
pusha
movsb
mov
jb
inc
jnp
and
adc
xor
push
and
cwtl
fs
push
and
or
outsb
mov
push
pop
fldl
add
outsl
mov
dec
or
bnd
pop
and
xchg
push
jnp
negb
stos
xchg
add
xor
or
pop
into
xor
roll
ljmp
lock
mov
or
cmpb
jl
rclb
mov
dec
or
jbe
xchg
mov
test
daa
xchg
cmp
pushf
clc
sbb
stos
mov
mov
pop
mov
hlt
jmp
outsb
jle
in
push
jbe
repz
dec
xchg
fnstsw
pop
inc
mov
mov
mov
xchg
ret
cmp
fisubrs
jp
fs
stos
push
jp
jl
lods
adc
lods
dec
jns
jecxz
cwtl
pop
pushf
dec
js
dec
inc
push
pop
fmull
call
push
loope
push
dec
inc
leave
push
mov
movsb
test
dec
pushf
xchg
jl
out
push
cmp
fwait
repnz
test
jns
sbb
pop
push
push
shlb
scas
and
shlb
mov
adc
fisubs
inc
mov
dec
adc
and
test
aaa
jge
sbb
arpl
jnp
push
int3
push
leave
or
push
push
fwait
aas
push
fidivrl
bound
mov
mov
add
scas
jo
lret
or
dec
clc
xchg
add
gs
fucom
outsb
in
shlb
sbb
lds
orb
call
xchg
or
or
movsb
sbb
popf
or
sahf
xor
push
sub
sub
xor
xlat
sub
movl
insb
enter
jns
js
and
push
and
inc
mov
xchg
sbb
popf
nop
insl
mov
dec
xchg
pushf
shlb
pop
sarl
aam
sub
shl
ja
inc
enter
push
pcmpgtd
imul
shlb
cwtl
aaa
jge
nop
xchg
imulb
ja
push
lea
rolb
mov
out
jg
add
filds
mov
xchg
xorb
mov
push
ret
mov
xor
fidivrs
xchg
scas
cmp
fmull
in
xchg
out
inc
push
idivl
dec
mov
shlb
mull
pop
mov
pop
xchg
inc
std
and
dec
loop
test
pop
dec
inc
xchg
roll
sub
fsubs
add
mov
outsl
cmp
rclb
mov
cmpsl
xchg
cli
xchg
inc
jno
cli
insb
or
scas
je
rcl
and
fisubl
popf
xor
loope
pushl
and
aas
lock
pop
push
xchg
in
jle
push
outsl
lds
mov
loop
aas
mov
mov
mov
rorb
xchg
cmpsb
loope
movsl
into
sbb
add
or
push
sbb
xchg
int3
jo
fimuls
gs
mov
repz
mov
mov
rclb
mov
inc
aad
movsl
imul
mov
movl
and
out
sub
jb
push
sbb
mov
dec
aam
xchg
stos
mov
adc
sub
orl
mov
push
xor
fs
xchg
xchg
pop
mov
sbb
add
cmp
and
fbstp
insl
sbb
push
rcrb
xchg
adc
jae
in
ja
push
jl
mov
in
call
loope
xor
movsl
sbb
mov
popf
push
mov
jecxz
mov
in
sti
jno
mov
xor
call
pop
fists
in
js
push
fwait
test
push
fistl
in
xchg
popf
ret
andl
sbb
rcl
fnsave
pusha
dec
push
out
inc
ja
addr16
leave
movsb
cli
into
sbb
das
sub
pop
fwait
jbe
mov
inc
dec
ss
ret
mov
testl
push
testl
daa
add
xor
mov
outsb
dec
lods
adc
push
pop
popf
std
sub
movsl
inc
aas
add
fwait
outsl
push
jg
test
add
dec
push
rcrb
fsubl
ret
add
inc
mov
xchg
adc
inc
mov
inc
and
fs
cs
iret
lods
add
cld
lahf
add
or
adc
int
mov
cmpsl
adc
cmc
jb
loop
xchg
popf
mov
mov
pop
cmp
movsl
push
cmp
xlat
fstl
dec
dec
idivb
ret
pop
and
push
mov
setp
jno
cmp
sarb
fs
sub
add
inc
lret
dec
fwait
mov
pop
xor
inc
fisttpll
lahf
clc
dec
loopne
cs
ja
xchg
push
fwait
add
ds
inc
data16
leave
xchg
std
pop
push
mov
ja
gs
icebp
mov
jne
fs
dec
mov
xor
push
cwtl
dec
jecxz
xlat
out
sub
icebp
fsts
adc
je
into
push
pushl
repnz
jle
adc
sbb
std
sub
lcall
xchg
sti
lods
mov
dec
out
push
addl
mov
add
mov
shll
pop
xchg
xchg
rolb
cmpsb
aam
inc
negl
lahf
push
dec
mov
mov
mov
in
cmp
fdivp
jne
stos
fstl
jmp
out
les
sbb
in
xchg
sbb
scas
pop
test
xor
jns
xor
ret
dec
mov
sahf
cmp
xchg
push
jae
inc
jl
decb
dec
pop
cmpsl
movb
mov
xlat
adc
xor
adc
imull
inc
fisttps
mov
lret
pop
insb
aaa
xchg
push
add
movsb
negb
push
out
movsb
inc
fsubs
mov
push
movb
addr16
fisttpl
movsl
cli
mov
and
lods
sbb
das
in
mov
add
xchg
bound
insb
popa
cltd
dec
mov
dec
dec
mov
outsl
dec
mov
add
sbb
pop
aaa
andl
aad
rcr
sub
jge
data16
jl
fs
aad
std
mull
inc
xchg
or
push
sbb
ljmp
jle
loope
xor
xor
js
adc
loopne
xlat
cmp
mov
imul
in
xchg
and
outsl
je
aas
addb
int
outsb
movsb
dec
jge
dec
cltd
pusha
mov
sub
rcrl
and
pop
mov
push
mov
push
ja
movsl
and
repnz
mov
scas
cwtl
cmc
dec
add
jl
dec
out
popl
pop
clc
scas
push
in
mov
shll
sub
sahf
cmp
mov
xchg
loope
push
mov
jb
mov
ss
dec
pop
lret
cmp
mov
mov
xchg
cmc
pop
push
cltd
sub
lock
testl
inc
enter
or
pop
fucomi
lea
shrl
push
fs
xor
inc
xor
dec
cmpb
ss
cmp
pop
mov
xor
stos
xchg
test
repnz
lds
sahf
dec
pop
xchg
hlt
inc
and
push
push
cltd
sbb
fidivs
imul
rol
xor
add
movsl
push
movsl
xchg
jb
setnp
cmp
jle
aad
pop
mov
and
inc
push
dec
fdivr
popa
movsl
push
js
imul
fisubl
out
iret
sbb
insb
sahf
jbe
pop
jne
push
das
sub
jnp
lods
mov
sahf
cmpb
inc
popa
sub
les
mov
adc
or
fimull
jl
setne
cmpsb
adc
mov
arpl
add
mov
adc
mov
outsl
popf
fldenv
aam
clc
cmp
rorb
add
pop
push
cmc
add
pop
jne
xor
jb
inc
jmp
xchg
mov
shll
sbb
lcall
inc
imul
add
lea
inc
test
out
outsb
popf
inc
mov
mov
and
pop
or
jmp
imul
cld
into
je
cmp
mov
jl
mov
pop
imull
add
mov
test
dec
xchg
sahf
xor
and
jmp
call
xchg
out
inc
jae
cwtl
rolb
out
xor
sub
jae
mov
jmp
xor
ja
xchg
push
out
dec
sub
test
add
enter
push
pushf
and
mov
fcoml
and
lret
cmp
test
clc
setge
add
out
pop
cmp
shlb
test
jb
dec
scas
shl
mov
xor
mov
jnp
ds
rcr
add
fmuls
scas
dec
mov
loope
or
pcmpeqd
mov
pop
xor
lahf
cmp
and
fldt
lods
and
mov
and
mov
jae
pop
mov
push
fmulp
jno
mov
jns
cmp
mov
add
ret
add
lds
ret
cwtl
pop
ret
pop
popa
insl
ja
xchg
or
inc
xchg
dec
pop
jmp
jo
fsubl
and
mov
mov
test
inc
jno
lock
pop
jbe
cmp
mov
mov
dec
mov
roll
hlt
fs
xchg
jnp
stc
cs
jbe
shll
xchg
xchg
adc
xor
fisubrl
or
rcl
jo
jecxz
jns
outsb
sti
jb
jecxz
adc
xchg
rcrl
dec
jae
adc
hlt
sbb
mov
pop
xchg
gs
sbb
mov
rcrl
pop
or
jge
sub
pop
push
icebp
sbb
insl
xor
icebp
cmpsl
cmp
lret
xchg
adc
aam
and
cs
les
xchg
lret
dec
sbb
pop
adc
mov
aad
gs
push
popa
iret
dec
hlt
cmpsl
andl
lret
xchg
aas
adcb
adc
add
add
mov
es
sbb
aaa
jns
pop
and
cmpsl
push
or
push
xor
testl
jae
mov
and
js
sahf
adc
rolb
bound
imul
and
and
mov
mov
repnz
fcompl
out
fldl
dec
popf
ds
sbb
divb
les
xor
xor
mov
mov
insb
mov
or
iret
aad
mov
repnz
mov
cmp
ret
sbb
xchg
icebp
xor
sub
test
loope
xchg
rcrl
das
lods
idiv
mov
dec
movsb
imul
add
mov
xor
mov
das
ljmp
fwait
cmp
pop
lds
dec
loop
lcall
dec
push
cmpsl
inc
iret
out
lock
xlat
sub
lds
xor
xorb
gs
mov
ss
je
hlt
jg
call
testl
imul
add
mov
enter
cwtl
int3
sbb
lret
dec
add
imul
jg
icebp
push
mov
or
mov
dec
xchg
sub
xor
push
leave
test
rorb
aas
jnp
jecxz
inc
pop
mov
pop
mov
or
in
sahf
mov
cmc
cmp
xor
adc
mov
imul
add
inc
ds
or
testb
xor
in
jb,pn
xchg
cmp
or
stc
push
fcomps
push
data16
push
enter
das
mov
pushf
mov
sahf
fsubr
outsb
dec
rorl
mov
cwtl
movsl
das
repz
test
in
add
and
cmpsb
fwait
lret
add
out
jg
int3
mov
xor
fst
add
mov
lret
imul
sub
movsb
xor
lea
rolb
lret
cld
pop
xor
pop
or
out
packsswb
xorb
add
lea
cmp
xchg
jns
pop
fistps
push
pop
repnz
or
xchg
push
xor
pop
test
js
popa
mov
fcomps
loopne
sub
sbb
inc
cmp
xchg
cmp
mov
sbb
scas
ror
aaa
or
aas
jmp
inc
push
cmp
push
fdivrs
lods
in
ss
mov
inc
add
lret
ss
add
and
push
mov
and
cmp
test
lret
mov
xor
arpl
loop
ret
push
insb
xchg
lea
lcall
lcall
jle
and
jecxz
lods
outsl
and
or
cmp
lock
mov
jl
ds
add
mov
pop
mov
xchg
sub
jp
cs
mov
test
cmp
stc
xchg
dec
sub
fldt
pop
xchg
sahf
ret
cmpsl
xchg
icebp
mov
les
les
out
cmp
ljmp
test
outsb
out
cmpsb
insl
loop
adc
stos
loop
mov
js
xchg
call
call
icebp
in
int
jmp
pushf
mov
lds
lahf
in
push
pop
inc
xchg
xchg
mov
xor
pop
adc
cmpsl
insb
push
sbb
mov
inc
insl
cmp
jmp
push
jo
mov
pop
xchg
js
fsts
arpl
inc
xchg
sbb
mov
stc
inc
test
dec
adc
push
and
jg
inc
sbb
clc
xchg
leave
ja
int3
sbb
loopne
pop
jmp
int
ret
scas
push
pop
fwait
jl
add
xor
inc
pop
popa
clc
and
pop
jp
inc
movb
mov
pusha
push
pushf
jl
xorb
dec
nop
xchg
xor
in
pushf
lds
inc
cmpsb
sti
and
xor
js
pop
mov
pop
pop
mov
lret
sub
dec
mov
inc
lock
idivb
loope
loopne
rcr
dec
ret
xor
icebp
adc
ja
push
les
outsb
inc
out
outsl
xchg
and
add
push
sub
stos
popa
adc
xor
mov
test
orl
jae
pushf
fisttps
xchg
jb
or
rolb
in
mov
xchg
xor
add
jmp
cmp
xor
clc
push
nop
es
push
xor
push
loope
xor
sub
scas
outsl
ljmp
xor
inc
fistl
cmp
dec
nop
add
ror
lcall
mov
cltd
outsb
cld
mov
mov
in
adc
and
mov
add
pop
jl
mov
rcll
in
and
repz
sub
lahf
add
in
sarb
cld
aad
lods
rol
add
jbe
icebp
addr16
jl
and
or
cmc
cmp
test
roll
xor
adcb
mov
sub
push
xchg
mov
jmp
dec
lods
push
mov
int
sbb
sbb
dec
lea
xchg
cmpsl
sub
jge
fidivl
adc
jecxz
out
lahf
mov
fsubs
xchg
pop
popf
lea
mov
push
cmpsl
xchg
pop
bound
add
jmp
or
sub
fdivrl
adc
scas
mov
inc
add
es
mov
jle
add
xchg
aaa
or
rcll
orl
dec
or
ja
jb
bound
js
out
inc
arpl
inc
or
mov
push
mov
pop
imul
lods
add
adc
and
sbb
sub
je
cmp
jge
mov
mov
cmp
in
pop
enter
dec
jno,pn
add
mov
scas
lock
sbb
xchg
push
in
xor
mov
aas
and
mov
jge
pushf
mov
jns
cmpsb
push
mov
in
push
fsub
cmp
xor
mov
aaa
dec
aam
mov
sbb
data16
std
and
add
adc
inc
add
adc
jno
or
mov
pop
xchg
inc
test
pop
lcall
and
jo
jo
call
mov
sub
ret
mov
arpl
jbe
and
mov
cld
mov
or
mov
je
jno,pt
fcoml
flds
dec
dec
ja
movsl
daa
push
in
mov
ljmp
dec
jns
ja
lret
pop
data16
in
data16
jge
stc
iret
pop
adc
scas
pop
inc
cltd
cmp
push
leave
mov
pop
mov
mov
lods
mov
cs
jp
scas
mov
xchg
lahf
mov
or
push
repz
fimuls
pop
xor
call
xchg
je
adc
stos
data16
mov
das
pop
sbb
dec
xchg
or
lret
jp
out
dec
lahf
pop
mov
out
xlat
cwtl
xor
cmp
iret
mov
dec
cmp
out
outsb
bound
repz
loop
xchg
inc
mov
and
add
sub
repz
mov
cmp
ret
adcl
sbb
and
xor
jl
fmull
cmp
es
push
mov
data16
in
filds
sub
adc
gs
jne
call
orl
aam
jp
cmpsl
push
test
push
std
sbb
arpl
nop
enter
inc
sub
fsubrl
inc
pop
gs
rorl
pop
dec
sbb
dec
daa
xor
push
sub
scas
lcall
data16
pop
sbb
icebp
loop
push
jbe
sbb
test
sbb
movsb
subl
into
push
cwtl
lret
jo
sub
cwtl
enter
mov
push
aas
or
xor
mov
pusha
push
arpl
mov
mov
jmp
xchg
mov
jnp
inc
pop
enter
daa
rorb
js
aam
mov
sub
inc
cmp
sbbb
and
std
sarb
jne
sbb
push
std
iret
aaa
add
rorl
fwait
pop
fstpl
fcomip
xor
mov
pop
mov
cmp
ret
loopne
movsb
out
das
push
fadds
and
stc
fisttpll
jle
gs
push
and
rorl
les
inc
fstps
xor
xor
sub
jecxz
push
arpl
nop
test
test
jae
mov
add
inc
add
stos
into
mov
nop
jg
out
nop
add
ficoms
fwait
int
movsl
into
adc
mov
popa
and
mov
add
sarl
test
jne
mov
sarb
aam
push
jnp
jns
and
pop
sub
rclb
lods
or
ret
adc
test
pop
xchg
jmp
push
movb
and
add
jg
and
testl
jge
iret
inc
inc
imul
lret
lea
daa
push
sub
mov
idivb
and
push
cltd
mov
dec
dec
popa
idivl
xlat
mov
out
mov
es
cmp
test
jno
jge
shl
push
in
mov
daa
mov
into
add
or
or
sbb
imul
repnz
ds
nop
cmp
mov
pop
xor
xchg
icebp
fmull
pop
sub
int3
stc
insl
bound
scas
mov
xor
stc
pop
or
cmc
mov
lahf
int
jp
cmp
jmp
or
sub
push
fwait
add
repz
pop
pop
scas
outsb
mov
rorb
push
aas
lds
or
je
sub
rcrl
iret
insb
sbb
or
les
call
int3
push
xorl
sahf
jg
or
xor
fcmovnb
cmpsb
stos
adc
inc
sbb
mov
lock
mov
cmp
jno
mov
mov
sarb
dec
enter
fildll
jno
dec
pushl
test
adc
leave
mov
mov
fwait
push
add
xor
dec
cmp
sarl
xor
out
add
scas
std
mov
repnz
pop
xchg
xor
pop
pop
mov
mov
xorl
dec
add
push
dec
adc
dec
stc
pop
cltd
jg
movsl
out
lods
xor
mov
sub
push
enter
inc
or
xor
int3
roll
and
sbb
pop
in
jne
scas
dec
out
fwait
out
sub
stos
xchg
dec
jns
lcall
int3
mov
pop
fs
sub
jmp
mov
push
enter
shlb
pop
pop
in
cmp
sbb
fldcw
cmp
cld
dec
jmp
add
xchg
cwtl
adc
bnd
xchg
in
jnp
push
cwtd
fisubrs
inc
ret
xor
orl
out
xlat
sub
push
push
inc
inc
mov
out
cmp
sub
mov
pushf
shl
xorb
mov
jl
sub
in
out
shl
ficoml
test
xor
hlt
push
stos
movsb
fstp
add
stc
jge
cmc
ud1
pop
rolb
mov
mov
insb
dec
xchg
cld
push
icebp
inc
inc
lret
test
xchg
aas
lods
pop
cmp
xchg
imul
push
mov
add
jmp
add
sub
mov
cmc
repnz
xor
scas
aas
repz
decl
adc
xchg
in
repz
adc
inc
inc
add
mov
out
inc
js
sub
loopne
mov
inc
jb
mov
push
movsl
add
push
and
or
subl
insb
pusha
mov
mov
insb
popf
jns
push
jo
test
testb
add
push
sub
cmp
out
jae
inc
xchg
inc
adc
rclb
rcll
pavgb
or
xor
jns
out
ret
push
cltd
jl
mov
mov
xchg
xchg
sti
inc
pop
cs
mov
mov
sub
mov
or
inc
js
out
push
pop
icebp
dec
mov
test
add
jno
add
imul
sahf
push
insl
aad
insb
lahf
lcall
mov
lret
sahf
or
mov
mov
std
or
bound
jnp
mov
sub
xchg
xchg
pop
movsb
call
adc
jbe
lret
pop
push
sti
jg
dec
mov
jecxz
test
jle
mov
pop
cmc
ljmp
sub
inc
daa
lock
xchg
pop
fildl
sbb
xor
int
mov
inc
inc
xor
mov
or
or
sub
dec
jne
fidivs
nop
xor
cmp
movsbl
cmp
add
into
add
or
pop
or
das
cli
out
enter
test
add
aad
pop
add
pop
sub
adc
in
stos
popa
xchg
out
mov
sbb
or
xchg
stc
inc
sub
and
inc
loopne
loope
xor
sub
popa
mov
pop
sbbl
cmp
add
pop
sub
cmc
adcb
frstor
pushf
cmp
incl
mov
bound
mov
js
adc
sub
push
push
out
scas
fdivr
je
mov
jl
mov
jns
push
add
adc
lcall
cmp
cli
mov
sub
push
int3
cmp
xor
sbb
arpl
popf
pop
mov
bound
fnstcw
push
mov
mov
inc
daa
mov
loope
outsl
sub
andb
pop
fs
in
push
pop
je
and
push
inc
sbb
push
in
daa
fiadds
mov
cmp
inc
ret
leave
mov
rorl
popa
cld
or
push
dec
test
cmp
icebp
out
std
and
icebp
or
mov
mov
rcrl
aaa
scas
rcrl
push
cld
repz
sub
xor
xor
add
aas
sub
in
push
stos
in
pop
inc
mov
iret
xchg
fdivrs
mov
adc
clc
jge
mov
rcrl
out
das
sbb
lods
dec
loopne
pop
mov
jne
test
sahf
or
orb
movsb
xchg
lods
cmc
mov
ja
in
mov
fstp
mov
cmp
jp
cli
movsb
sbb
lcall
adc
adc
cltd
int3
aaa
cmp
add
shll
sub
cmp
dec
push
push
in
cmp
cmp
mov
sub
loopne
cld
pop
jae
sbb
sub
dec
movsl
jnp
mov
cmpsl
cltd
fcmovnu
and
pop
nop
sbb
gs
insl
and
push
fs
outsl
jns
add
stc
inc
mov
nop
xchg
cwtl
das
les
pop
into
mov
xor
inc
fidivs
lds
ret
mov
scas
cmp
mov
sub
jae
ljmp
push
mov
cmp
gs
add
cmp
fs
mov
adc
das
adc
jbe
pop
sub
lret
hlt
push
in
mov
in
mov
stos
adc
sub
sbb
cmpsl
xor
aaa
scas
jb
shrb
ftst
out
cmp
pop
xchg
lret
les
mov
nop
cmp
fimuls
add
outsl
mov
pop
stos
push
and
mov
jp
int
pop
lds
sub
ja
or
mov
js
cmp
mov
cmp
mov
jge
aam
popa
mov
sub
sbb
xchg
xor
cmpsb
adc
notb
and
inc
andb
jae
sub
shrl
in
test
pop
lods
iret
cwtl
mov
mov
add
push
daa
push
in
pop
dec
aas
push
mov
lock
fldcw
xchg
xor
mov
rcrl
test
pushf
jbe
test
scas
leave
mov
jbe
rcrb
sub
add
out
pop
test
adc
outsl
es
ds
pop
icebp
std
cmp
add
sub
jae
fs
mov
push
add
xor
pop
add
cmp
inc
xor
push
inc
aad
aaa
inc
sbb
mov
je
sub
fwait
int
inc
adc
sub
fsubs
scas
mov
push
jp
jmp
jne
lock
sub
lcall
popf
inc
enter
mov
test
lret
adc
mov
add
pop
mov
aam
movsl
dec
push
hlt
pusha
mov
pop
test
push
loope
lock
jbe
loopne
fucomp
clc
mov
xchg
pop
xchg
jge
sbb
rorb
jg
or
adc
into
cli
xchg
hlt
mov
adc
sub
js
hlt
mov
andb
jns
fistpl
rorb
cwtl
push
xor
in
mov
fildl
dec
mov
imul
or
enter
insl
and
sbb
test
jl
ljmp
jo
inc
or
je
scas
sub
mov
call
cli
dec
push
jno
mov
add
xor
sub
xor
mov
test
call
dec
dec
jo
mov
shr
out
cmp
mov
push
sub
loope
add
lret
mov
adc
das
mov
mov
jecxz
adc
jns
jle
sub
and
fdiv
icebp
cmp
mov
jbe
pop
dec
scas
fldenv
imulb
scas
je
aam
call
in
xchg
or
and
jmp
inc
xor
clc
fistl
mov
sbb
test
sbb
xchg
mov
mov
cwtl
rcrl
aas
pop
int3
loopne
jbe
imul
or
pop
lock
adc
xchg
mov
inc
popa
iret
xchg
shl
cmp
mov
cmp
pmaddwd
dec
mov
movsl
lcall
arpl
fsubl
dec
popf
rorb
psubusw
mov
lcall
cmc
cmp
sbb
add
std
gs
adc
ljmp
jns
mulb
lahf
inc
cli
mov
jle
or
pop
aaa
xor
cmp
xor
iret
inc
jge
mov
sbb
dec
movsb
outsb
std
stos
xchg
cmp
add
hlt
lods
pop
clc
pop
adc
inc
fstpl
push
jmp
mov
jp
jb,pt
jmp
out
out
push
mov
xchg
adc
fs
imul
add
bound
test
out
add
outsb
dec
lea
aas
in
pop
mov
lea
sub
inc
push
xor
inc
xchg
icebp
adc
inc
divb
sub
inc
in
mov
xchg
pop
pop
push
cmp
gs
test
adc
cmp
filds
and
pop
cmp
push
mov
stos
outsb
jo
adcl
sub
jecxz
stos
daa
xchg
and
mov
sub
loopne
inc
addr16
in
ja
imul
sti
lret
xor
pop
jns
icebp
cmp
fs
ret
push
popf
jmp
jnp,pn
push
and
jge
jb
dec
in
mov
scas
mov
pop
xor
inc
xchg
sbb
fisttps
dec
xchg
loopne
pop
mov
sbb
mov
lock
or
leave
mov
hlt
or
and
lea
mov
sub
aaa
add
lret
pop
dec
mov
fcoms
movsb
push
js
out
cltd
lahf
enter
cmp
xchg
flds
push
push
outsl
push
idiv
cwtl
mov
out
jecxz
and
fwait
imul
out
push
push
popa
cmp
lods
inc
mov
insb
xor
sbb
sub
jge
sbb
push
pop
xor
sub
mov
lea
sbb
aas
jmp
jb
sub
shrb
stc
xor
cli
js
sub
mov
hlt
mov
movl
repz
mov
shlb
pop
cli
inc
jae
xchg
cltd
hlt
lds
int3
aaa
cmp
rcll
lock
aaa
repnz
movsb
jno
in
xor
mov
xchg
push
xor
xchg
lds
fnstsw
inc
in
push
fisubrs
aad
addr16
jns
push
push
push
jmp
inc
loope
mov
popa
push
mov
in
inc
push
pop
sbb
push
loopne
and
mov
rorb
push
movsl
jb
or
adc
in
dec
adc
andb
push
push
push
in
addr16
sub
jae
sbb
fistpl
popf
ror
push
pushl
int
cwtl
mov
call
or
movsb
mov
lret
dec
pusha
fnstcw
sbb
pop
xchg
mov
xchg
cmpsl
js
stos
std
xchg
test
sub
add
or
cltd
dec
push
mov
xor
cmp
imul
sbb
sbb
mov
aad
xchg
adc
adc
popa
xor
fisubs
mov
pslld
pop
jmp
pop
push
inc
rolb
int3
lods
je
sahf
mov
add
adc
push
inc
push
push
out
add
leave
and
fistpl
inc
aam
cwtl
adc
push
jp
mov
stos
sub
inc
in
imul
imul
mov
stos
jae
arpl
adc
mov
arpl
xor
in
jo
aaa
or
pop
rcr
fstpl
repz
inc
push
loopne
jbe
adcl
out
sub
adc
mov
ret
push
xchg
cs
notb
adc
stc
cmc
ds
ds
stos
or
pop
in
sti
jmp
out
dec
dec
and
xlat
leave
xlat
jne
adc
rcr
cmp
mov
fistpl
and
cmpsl
add
lcall
fldt
cmp
arpl
dec
inc
adc
mov
les
aas
es
sbb
and
adc
mov
movsl
adc
and
jp
mov
adc
cmp
scas
dec
dec
shll
adc
pop
lds
jno
in
cmp
xor
cltd
popf
or
cwtl
cwtl
lgs
mov
mov
fs
cld
fisubrl
loope
lock
into
mov
add
cmp
mov
insl
jno
ret
jae
enter
fwait
push
dec
lret
mov
push
mov
sbb
ja
push
lcall
pop
pop
mov
xor
not
cmpsb
data16
ret
push
sub
dec
xlat
mov
mov
mov
lcall
cmp
sbb
adc
into
jo
cmp
cmp
and
inc
fiadds
or
cld
loopne
dec
and
ret
cld
add
push
aad
jne
mov
outsl
or
sarl
insb
sbb
test
shl
xorb
cmpsl
out
push
pop
mov
mull
sub
imul
out
lds
dec
mov
shrb
pop
int
in
lahf
mov
pop
rcrb
mov
xchg
jae
das
das
jno
cltd
pop
sbb
in
push
push
std
data16
mov
insb
or
arpl
xor
addb
and
jmp
fcompl
outsb
test
aaa
adcb
xor
rol
push
into
insl
xchg
shl
xchg
addr16
sbb
pop
popa
xchg
cmp
clc
cmp
dec
cs
cmc
rcll
mov
jg
aad
mov
mov
push
mov
cli
push
sub
hlt
arpl
sbbl
mov
jno
clc
and
mov
mov
xor
mov
std
movsb
sub
mov
push
mov
pop
pushf
mov
lret
insl
or
and
jno
setge
mov
cmpb
cmp
xchg
arpl
ret
xorl
daa
push
mov
fidivs
cmpsb
and
inc
mov
inc
dec
movswl
mov
test
xchg
mov
mov
sbb
or
push
out
dec
mov
xchg
faddp
dec
shlb
lock
repz
push
js
xchg
pop
xchg
pop
and
xor
mov
shl
outsb
mov
push
scas
xor
mov
hlt
jge
add
cmp
cmc
cmp
sub
and
add
clc
dec
pop
ret
inc
or
mov
sti
mov
dec
mov
push
push
adc
test
or
or
dec
ficoms
pop
and
add
push
pop
xor
orb
imul
idivb
loopne
out
mov
mov
ljmp
push
outsl
scas
in
and
cmp
mov
outsb
mov
adc
sbb
out
xchg
xchg
mov
sub
arpl
ss
pusha
aam
sbb
xor
mov
lahf
sub
sub
and
xchg
arpl
ljmp
jno
inc
daa
fdivr
arpl
fidivl
dec
scas
mov
ret
push
sbb
loopne
pop
cltd
add
lret
mov
pop
in
ret
pop
stc
mov
cmp
aas
jnp
cli
std
mov
xor
sub
mov
int3
cmpsb
sbb
or
pop
stos
push
outsl
push
sub
fwait
cmpl
ljmp
cli
lret
inc
push
mov
adc
and
ss
lea
testb
inc
testl
pusha
repnz
stos
mov
int
pop
jno
sahf
mov
xchg
cmp
aaa
pop
or
mov
arpl
mov
lcall
call
fstpl
sub
rorb
fldl
gs
rcr
loop
cmp
xchg
sbb
pop
imull
push
jnp
fidivl
or
dec
into
or
fisttps
mov
sub
out
inc
mov
jo
dec
sub
jp
xchg
push
jb
cltd
cmp
mov
mov
in
xor
inc
arpl
lods
mov
lods
jl
mov
int
mov
loop
jle
jmp
jns
std
xchg
rcll
bound
aad
repnz
push
shll
inc
mov
mov
insb
out
cli
mov
es
cmp
iret
lret
dec
jb
push
inc
and
lock
inc
cld
push
or
cmp
fdivrp
or
nop
xor
roll
adc
movsb
pop
test
out
cmpsl
jo
cs
pop
push
gs
push
add
loop
decb
pop
repnz
jnp
mov
fistl
jge
push
adc
mov
and
loope
jbe
xchg
jo
sub
xor
mov
int
ja
xchg
jmp
std
out
or
cmp
aad
scas
les
shlb
xchg
es
mov
test
adc
daa
repnz
ja
add
fdivr
or
fdiv
mov
inc
ret
insb
sarl
jae
xor
cmp
mov
pop
inc
nop
lods
rcrb
aaa
lahf
fcompl
popa
andl
cmpsb
sub
dec
inc
fwait
ret
pop
jbe
pop
push
mov
daa
lea
daa
add
cmpsb
out
lods
and
inc
aaa
sub
bound
xorb
mov
into
jmp
testb
lds
outsl
roll
insb
cmp
add
ds
push
cmpb
inc
push
jmp
inc
push
cmpsb
ljmp
jg
cwtl
lods
fwait
popf
mov
pushf
sub
test
lret
fsubl
push
mov
mov
sbbb
fcompl
out
inc
xor
jbe
adc
push
mov
fldcw
popw
jle
ret
pop
in
adc
inc
or
enter
or
sbb
xchg
adc
pop
mov
ds
pop
cmpsb
jl
sub
mull
subl
clc
adc
cmp
jb
mov
lods
mov
fimuls
adc
inc
les
outsb
pop
mov
adc
inc
xchg
inc
popf
stos
imul
lret
mov
sub
daa
mov
sub
mov
cwtl
sub
pusha
imul
pushf
movsb
xor
sbb
cltd
sub
xchg
inc
pop
in
lods
test
xor
jmp
and
arpl
enter
fs
ret
mov
dec
stos
push
dec
jb
cmp
xor
es
cwtl
jp
inc
inc
inc
sbb
sub
popf
out
das
js
imul
sahf
stos
jl
inc
fisttps
inc
das
xor
or
xchg
or
lds
sub
push
popa
in
ds
jp
mov
imul
xchg
pop
popf
adc
ret
xchg
in
adc
xchg
nop
nop
mov
dec
cmpsl
push
jo
jo
cmc
pop
daa
lret
outsl
inc
add
shlb
andl
sbb
inc
lahf
push
arpl
imulb
add
in
dec
jnp
outsl
mov
jns
loope
test
rcll
sbb
outsb
xchg
and
cmp
daa
push
in
mulb
xlat
test
pop
pop
mov
test
and
dec
gs
fidivrs
outsl
sbb
dec
out
mov
or
inc
les
icebp
mov
xor
xor
test
pusha
push
mov
leave
outsl
adcb
loope
lahf
popa
popa
sahf
mov
inc
insb
xor
test
mov
xor
pop
inc
and
popa
lods
jg
push
lretw
lcall
jecxz
xchg
shr
adc
mov
int
cmp
sbb
pop
outsb
out
into
jle
scas
mov
outsl
push
xchg
pop
mov
test
mov
cmc
int3
lret
pop
mov
sbb
loop
ret
xor
xchg
adc
gs
js
insl
push
popa
ss
push
push
bnd
repnz
in
scas
add
mov
lret
cmp
cld
jo
les
scas
sar
dec
mov
pusha
jb
or
shrb
sbb
push
inc
rclb
xchg
sbb
testl
jecxz
mov
or
jp
cmp
or
cltd
pop
push
push
arpl
mov
lods
push
push
es
enter
xchg
dec
dec
fldenv
inc
jecxz
xor
in
imul
adc
ror
lcall
push
mov
mov
pop
cmp
xor
or
sbb
or
adc
mov
jns
cltd
sub
icebp
insl
xor
fmull
and
scas
fstl
mov
sbb
jnp
adc
xor
leave
dec
fcoms
xchg
xchg
push
jne
push
add
and
loopne
or
adcl
fs
mov
cmp
out
mov
fs
out
cmpsb
repnz
inc
push
sbb
mov
rclb
in
loop
data16
dec
mov
je
jge
cmpsb
push
std
jecxz
push
test
xor
jecxz
ret
jns
arpl
add
enter
mov
lods
out
fs
jmp
xor
ss
push
cmc
or
add
sub
lock
mov
je
cmp
loope
ss
jo
jle
sbb
lods
xchg
mov
int
clc
cmpsb
scas
arpl
inc
cmp
pop
jns
adc
test
test
repz
mov
bound
out
test
mov
push
sub
cmc
mov
adc
dec
sbb
xor
mov
bound
loopne
loopne
jae
xlat
inc
jb
test
lret
xchg
sbb
push
roll
imul
lret
les
inc
mov
scas
sbb
pop
jne
pop
mov
xchg
loop
mov
mov
pop
fcmovnu
sbb
sti
xor
and
sub
out
jecxz
pop
in
xor
push
xor
cmpsb
jmp
pop
clc
add
inc
mull
inc
pop
pop
lock
mov
and
adc
jnp
icebp
mov
xor
pop
test
daa
clc
jb
xchg
test
ret
addr16
or
xchg
daa
fidivs
cmc
xchg
jne
stos
jl
insb
pop
aad
insl
xchg
push
out
dec
iret
sub
orb
loope
xchg
out
mov
xchg
daa
or
ret
hlt
xchg
mov
insl
fcmovnbe
xchg
jecxz
dec
subl
outsl
mov
lock
and
fs
add
or
push
mov
pushf
aas
inc
rcrl
mov
repnz
bound
dec
jecxz
movsl
and
mov
sub
mov
and
insl
test
bound
fistps
cmp
cmp
adc
js
push
enter
sbb
out
in
lret
das
shr
mov
int3
shrl
mov
push
sbb
pop
cld
clc
jnp
mull
and
pop
pop
add
test
pop
jno
adc
pop
vaddsd
test
sbb
pop
shll
and
xor
imul
jnp
rcll
add
ret
sbb
stos
popa
push
xlat
push
scas
popf
ret
cmp
jle
jcxz
cmp
add
xor
or
inc
dec
push
inc
adc
insl
inc
fldl
incl
and
cmpsb
inc
into
leave
cmp
int3
mov
mov
bound
or
push
and
push
jbe
push
cs
xchg
popf
movsb
cmpsb
pop
xor
addl
notl
mov
rolb
mov
ret
lea
les
dec
xor
movsl
aas
sub
or
sbb
push
xor
clc
fstps
leave
mov
outsl
shl
jmp
lret
insb
xor
xchg
and
add
out
inc
jmp
aad
cltd
int3
stos
xchg
lcall
int
roll
mov
mov
xchg
cmpsl
cwtl
inc
mov
push
pushf
outsl
cmp
push
roll
imul
mov
xor
mov
jno
jne
mov
fsub
pushf
stos
je
xor
pop
add
sub
stc
std
cmp
std
test
cwtl
shll
xchg
mov
in
fs
imul
fsubrs
mov
mov
rol
adc
or
mov
ja
mov
fnsave
jmp
cmp
mov
clc
fnstcw
dec
inc
cmp
sub
pop
iret
in
pop
push
sbb
out
rorl
push
sbb
jl
inc
shll
ret
xchg
into
and
out
aam
adc
dec
orb
xor
js
or
das
ja
fscale
and
sub
mov
push
outsl
jbe
lret
lods
or
jo
add
dec
mov
pop
leave
inc
fisttpl
xchg
push
ss
mov
rcrl
push
dec
outsb
mov
stos
enter
pop
or
jb
mov
rdmsr
cmp
and
or
sahf
ss
sbb
ja
aaa
loopne
scas
push
dec
sbb
into
push
push
repz
sbb
fisttpl
push
pop
sbb
mov
inc
das
movsl
movsb
addr16
inc
inc
pop
lcall
inc
adc
xlat
sub
push
and
ja
dec
fmulp
mov
popf
imul
loop
mov
mov
xor
jge
emms
stc
ljmp
outsl
pop
js
orl
fstl
push
clc
call
stos
or
jecxz
addb
sbb
cmpl
and
ret
mov
insb
xor
xor
stos
lcall
xor
or
or
pop
add
and
fstl
cmp
push
icebp
lahf
dec
rdtsc
repnz
das
xchg
sbb
dec
adc
cld
xchg
mov
pop
in
dec
call
xchg
jo
lahf
gs
leave
out
push
xchg
outsl
or
push
data16
cmp
xlat
and
push
popa
aaa
add
inc
jecxz
adc
mov
ret
mov
fsubrl
mov
repz
out
push
cmp
sub
sbb
test
ret
pop
insl
add
sub
pop
jle
call
xchg
cmp
mov
xorl
xchg
lret
shrb
sbb
in
mov
and
int
xor
pop
xor
loopne
mov
pop
jmp
add
arpl
lods
popf
pop
xor
dec
incb
sbb
mov
jo
sbb
arpl
xchg
jecxz
int3
xchg
ficompl
mov
fisttps
jmp
mov
sub
dec
sub
fimull
mov
clc
mov
inc
or
mov
and
andl
cltd
daa
sub
sarl
jne
js
into
test
add
push
add
lcall
dec
das
push
shr
fidivl
in
std
je
cmp
add
in
push
mov
mov
cmp
pushf
ret
cltd
imul
shrd
add
lcall
add
in
pop
icebp
jne
movsb
fdivr
pop
pop
push
inc
and
sub
dec
cli
push
adc
cmp
xchg
popf
adc
daa
or
scas
jecxz
or
jecxz
xorb
push
repz
lods
rcrl
pop
test
sbb
adc
pushw
js
push
pushf
and
cmp
inc
rcl
or
sbb
int
dec
xchg
int
jecxz
push
sbb
scas
pop
mull
fdivrl
or
insb
lds
es
rolb
popf
xchg
lods
pusha
cwtl
ficomps
pop
jb
cmp
fwait
dec
mov
push
outsl
test
cmpsb
popa
fs
dec
aam
repz
inc
lods
xor
jmp
mov
dec
and
jns
daa
scas
call
dec
dec
xor
xchg
rcr
loopne
pop
rcr
loopne
mov
pusha
aaa
cli
scas
aaa
fcmove
dec
bound
sub
arpl
hlt
imul
mov
test
jo
rclb
out
push
sti
and
scas
int3
push
mov
push
and
imul
mov
call
roll
loop
js
pop
xor
sbb
dec
aaa
test
pop
adc
hlt
pushf
cmp
xchg
jnp
ljmp
pop
loopne
popf
aas
xchg
mov
sbbl
scas
adc
mov
jmp
and
cmp
xchg
mov
push
mov
cmp
movq
xchg
inc
xor
imul
cmp
pop
sbb
stos
dec
js
popa
ljmp
cs
movq
and
inc
out
pop
dec
jge
ficoms
and
cli
lret
gs
push
out
inc
inc
push
mov
add
mov
jge
jl
orl
mov
xor
mov
fistps
imul
sbb
inc
jae
mov
insb
jns
pop
inc
ds
mov
sbb
popl
xor
and
mov
pop
bound
popf
test
ret
dec
dec
ret
out
xor
aaa
and
mov
pusha
add
xor
mov
jp
clc
out
sub
mov
xor
inc
scas
daa
iret
jns
ljmp
jno
dec
jo
mov
adc
das
loope
mov
leave
pop
inc
nop
hlt
nop
aas
push
ja
test
js
add
in
ret
cltd
jbe
or
cli
movsl
sbb
movsb
hlt
push
jnp
dec
push
into
mov
and
loop
sarb
ficomps
shlb
ds
out
imul
aad
scas
fwait
int
jne
insb
loope
mov
adc
mov
pop
and
xor
cmp
clc
ficoml
push
leave
or
add
pop
cmp
push
shll
or
ret
fdivrl
pop
leave
data16
fdivl
sbb
jge
notb
gs
xor
dec
jge
ljmp
outsb
loop
xchg
mov
mov
ds
shll
sbb
leave
or
gs
jnp
xorb
dec
mov
xor
bnd
test
push
mov
ja
inc
popf
notb
or
push
or
push
sbb
dec
inc
sahf
xchg
inc
push
mov
adc
es
cmp
scas
cmp
jns
sahf
movsb
inc
movsb
bound
inc
xchg
je
stos
cmp
mov
jb
in
jle
decb
cmp
fisttpl
gs
mov
jae
imul
pop
shl
idivl
sahf
lcall
aad
pslld
xor
out
adc
scas
sbb
gs
out
xchg
imul
pop
jb
jo
setno
shr
rclb
inc
lret
cmp
fistpll
loope
cs
les
pop
loop
mov
pop
mov
push
popa
dec
mov
shlb
sub
jl
js
dec
jae
inc
inc
lahf
xor
sbb
inc
addl
subl
dec
dec
cli
xchg
push
push
js
idivl
adc
sub
cmpsb
popf
inc
add
xchg
das
fwait
mov
inc
loopne
test
cmp
fwait
cld
sahf
or
push
xchg
or
data16
xlat
and
iret
cmp
jno
nop
hlt
rcrb
aam
fdivrs
ljmp
inc
out
lcall
int
mov
daa
adc
push
movsb
int
jle
jbe
ja
add
popf
nop
pop
xor
roll
testb
cmp
or
or
dec
sub
mov
mov
jl
pop
jecxz
add
fimuls
roll
pop
xor
xchg
into
das
cmpsb
mov
fimuls
popf
pop
push
xchg
add
xchg
sbb
dec
cmp
popa
jge
cmpsb
push
enter
dec
stos
cmpsb
sub
push
xor
dec
cmp
or
leave
adc
outsl
dec
aas
jno
xor
add
sbb
push
aad
rorb
js
push
or
rcrb
inc
add
or
dec
fisttps
stos
ds
or
adc
sbb
and
aas
and
test
subb
mov
cmp
and
and
gs
orl
sbb
dec
lahf
andl
dec
mov
js
pop
jo
xchg
bnd
dec
insl
lods
mov
lret
mov
push
jmp
outsl
adc
jg
sub
mov
adc
mov
lret
jp
sbbl
xor
lock
cmp
pop
lea
add
cmpsb
sbb
xor
adc
fadd
test
icebp
lcall
inc
and
sub
nop
mov
int
cmpl
and
fs
pop
lods
jne
insb
push
pop
repnz
fnsetpm(287
push
jnp
sub
pop
dec
add
fcmovne
sbb
xchg
and
xchg
mov
scas
cmpb
mov
xchg
inc
sti
bound
movsl
adc
jae
sti
aad
mov
and
popa
es
out
fstl
add
mov
mov
ffreep
inc
mov
xor
cmp
in
lret
sbb
jl
cmp
iret
lret
push
imul
pusha
mov
sti
mov
adc
rcrb
xor
aad
frstor
mov
cwtl
out
fs
pop
fildl
mov
push
cmpsb
test
add
adc
out
stos
jno
pop
cwtl
inc
das
cwtl
test
mov
mov
jae
mov
les
lret
mov
sub
push
ds
das
sub
jecxz
rorl
test
add
cli
lds
sbb
jae
mov
aaa
out
daa
mov
jl
jg
sbbl
test
push
pop
mov
data16
mov
pop
sbb
rcrb
and
mov
pop
xor
inc
xchg
cltd
jo
jne
add
mov
xchg
and
push
xchg
jb
ret
adc
rorl
out
addb
or
and
sbb
mov
add
and
ficoms
push
cmpsl
xchg
sahf
and
js
addl
cmp
inc
je
js
inc
jne
xlat
mov
sub
imulb
mov
gs
leave
arpl
mov
lcall
aam
inc
inc
faddl
xor
sub
cmpsb
and
stos
cmp
mov
pop
mov
pop
pop
orl
push
in
xlat
push
jae
adc
repz
dec
and
sbb
lret
inc
add
adc
imul
jne
in
jg
dec
mov
mov
dec
rorl
leave
mov
push
cmp
add
cltd
movsl
push
lods
out
adc
sbb
or
mov
in
sub
and
lods
add
les
push
xorl
addl
aad
xor
out
fisubrl
xchg
or
stc
adc
gs
xchg
lcall
push
pop
in
add
push
pop
xchg
cld
or
iret
add
in
and
cltd
push
cmpsl
xchg
in
dec
lcall
scas
push
fdivr
push
fimuls
add
pusha
scas
xchg
mov
cltd
push
popa
sbb
xchg
xchg
daa
stos
out
sti
or
imul
xchg
iret
mov
rclb
inc
and
xchg
dec
mov
adc
xor
adc
dec
fisttpll
shl
jns
mov
adcb
xchg
jle
jno
and
or
cmp
pop
movsl
mov
outsb
aas
mov
cmp
xor
imul
icebp
call
ret
je
dec
in
and
imul
pushf
rorb
loopne
and
imul
data16
cli
jp
sti
add
lea
cmpsb
sbb
clc
xchg
ficoms
xor
sbb
loope
scas
add
mov
call
and
adc
je
stc
inc
pop
add
test
std
stos
sub
mov
sarb
jo
sub
js
mov
bound
pushf
xchg
sti
jo
jl
fs
push
jnp
sahf
push
cwtl
push
inc
dec
imul
pop
push
and
mov
nop
adc
adc
aam
cli
mov
int
call
push
pop
movsl
cmpl
xorb
mov
mov
push
push
dec
in
mov
in
in
add
loop
pushf
sti
xor
mov
mov
sub
jg
mov
neg
shrl
movb
mov
push
popf
adc
sub
fmul
xlat
xchg
cs
push
jb
fistpl
stos
fwait
mov
popf
xchg
add
icebp
sub
in
xor
pop
mov
or
test
and
iretw
stos
mov
and
jmp
mov
in
jle
in
fsubl
mov
andl
xor
lret
add
jno
sub
nop
sahf
mov
and
sub
inc
shrb
add
nop
stc
pushf
outsl
mov
pop
mov
push
cmpl
and
popa
push
stos
push
jl
movsl
test
fcomp
inc
push
and
jmp
mov
lea
sub
add
xor
mov
ljmp
ficoml
xchg
mov
mov
mov
loope
xchg
adc
lret
add
movsl
mov
pop
bound
sub
cmp
xchg
pop
sub
lret
fucomip
xor
stos
and
push
inc
lds
push
adc
in
adc
jns
je
pop
adc
cli
add
loop
mov
inc
pop
ret
outsl
fwait
cmp
push
and
sub
rcrl
leave
lock
sbb
xor
push
xorl
ljmp
icebp
add
inc
xchg
xchg
ss
pop
scas
into
xor
ja
push
jecxz
cltd
push
lret
in
addl
fcmovbe
cmpsb
inc
push
cmpb
lcall
xor
xor
testl
pop
mov
pop
push
mov
or
lret
pushf
das
shll
mov
addr16
push
insb
or
jo
inc
or
cmc
mov
sub
es
out
sbb
sti
push
push
lods
je
test
mov
and
dec
gs
mov
es
mov
dec
sub
fcmovnb
mov
sub
or
out
sub
mov
xor
popf
outsb
cwtl
test
add
fwait
inc
ss
std
data16
mov
shll
jnp
lock
jmp
mov
dec
stc
sub
cmpsl
dec
rcrb
dec
dec
and
aam
imul
lahf
loopne
push
push
and
xchg
mov
and
mov
pusha
lock
dec
rcrb
pop
std
push
adc
pop
daa
test
cld
push
pop
lret
clc
dec
in
cmc
or
inc
in
mov
pop
orb
in
out
and
push
mov
mov
lret
pop
inc
or
mov
cld
test
dec
xorl
sub
dec
loopne
rcl
or
mov
fbld
xchg
sub
sub
std
stos
pop
bound
fs
mov
testb
outsb
sbb
push
sbb
mov
xchg
lahf
pop
pop
or
in
adc
in
or
jns
ret
sub
jns
xor
fldl
sbb
xchg
inc
add
xor
push
or
arpl
filds
cmp
es
es
and
ja
and
dec
repz
fildl
out
out
daa
inc
lock
out
mov
xchg
ret
inc
lea
xchg
mov
xchg
inc
push
stos
aad
xor
loopne
outsl
mov
pop
iret
stc
gs
jbe
mov
aaa
in
shlb
sub
out
jmp
dec
pusha
mov
enter
xor
xlat
repz
jns
pop
leave
insb
adc
xchg
sub
and
jne
mull
test
pop
out
in
add
repz
add
add
fnsave
add
cmp
lret
jmp
in
int
pop
es
dec
jbe
mov
dec
cmp
xorb
popa
mov
test
sub
dec
and
pop
sub
dec
cmpl
ret
loop
mov
divb
out
pop
cmp
mov
jl
mov
pop
iret
push
jns
push
ds
iret
nop
daa
xchg
or
jl
lcall
push
pop
lods
xlat
xchg
add
adc
push
sarl
outsb
jg
xchg
xor
cmpsb
gs
push
cmp
pop
and
out
xor
jle
mov
ja
mov
dec
jb
mov
cmc
xlat
repnz
pop
mov
ja
inc
mov
sub
mov
gs
clc
sahf
scas
pop
roll
popf
jmp
add
pop
and
mov
mov
mov
dec
aam
sub
repnz
incb
test
jnp
jmp
jno
repz
aas
pop
aaa
stos
mov
or
adc
hlt
cwtl
mov
push
push
inc
push
adc
jae
sahf
or
ret
addr16
cmp
das
shlb
addr16
shlb
repnz
jp
push
into
aaa
pusha
andl
add
rcl
js
and
lahf
icebp
aad
mov
test
pushf
push
in
in
sbbl
in
jb
stc
or
pop
call
adc
xchg
mov
idivb
fwait
or
cld
adc
cli
cli
cmp
std
cmp
mov
add
lret
movsb
loop
sbb
cmp
shlb
push
or
fstps
cmp
cmp
jno
out
pop
fstps
inc
dec
xor
fs
cmp
mov
mov
sbb
clc
mov
aam
mov
and
cs
add
push
std
or
cmp
sbb
mov
xor
push
test
rcrb
rorl
dec
adc
or
cltd
sub
jp
jno
pop
gs
inc
inc
push
mov
orb
pop
rcrb
mov
loope
xchg
mov
push
ljmp
pop
movsl
or
pop
adc
bound
leave
pusha
xchg
dec
xchg
and
xor
sbb
test
rorb
movsl
sub
stos
mov
push
push
cmp
push
cmove
pop
jo
push
jmp
mov
mov
push
scas
or
enterw
sarl
or
sbb
push
push
push
mov
movlps
adc
cmp
aaa
add
sbb
and
mov
bts
mov
mov
mov
pop
mov
pop
mov
sbb
lods
or
xchg
pusha
scas
mov
gs
dec
mov
je
mov
xor
fdivrs
push
gs
push
mov
cmp
lcall
add
push
shlb
in
xchg
cmpl
inc
insb
cmp
out
outsl
fs
jae
xor
rcr
into
outsb
mov
loop
jae
push
dec
pop
mov
lret
xchg
xor
lcall
pop
add
rdmsr
test
add
sahf
add
xor
ret
or
rorb
lret
cmc
shrl
mov
sti
out
jp
out
and
aas
in
sub
sub
in
lock
enter
sbb
cli
shl
iret
jge
out
loop
repnz
mov
or
cltd
fnstenv
cmp
jg
movsb
lods
leave
push
mov
adc
jnp
daa
inc
popf
mov
int
in
call
pusha
std
mov
push
int
mov
cmp
jno
mov
adc
rclb
push
jp
adc
lcall
mov
mov
gs
mov
stos
sbb
enter
in
cmp
hlt
nop
dec
xchg
cltd
outsb
mov
sub
insb
je
ror
repnz
pusha
lds
xor
repz
adc
das
mov
mov
sub
push
pop
push
testl
jb
bnd
repnz
pop
cmpsl
mov
icebp
es
mov
out
inc
stc
dec
aam
mov
lahf
sbb
cmc
pop
outsb
test
mov
xchg
inc
xchg
nop
sbb
sbb
or
mov
setnp
dec
jl
jbe
mov
xor
addr16
cltd
cmpsb
jg
mov
fsubrl
movl
xchg
lahf
cwtl
lods
mov
mov
ja
mov
rolb
mov
push
repz
sbb
pop
adcb
adc
out
inc
pusha
and
fdivrl
push
dec
cmp
hlt
jp
in
bnd
sbbl
sub
mov
repnz
loop
clc
loope
xor
dec
add
sub
add
dec
xor
add
add
cmp
mov
inc
mov
ja
jl
cmp
enter
repz
xor
cmpsb
movsl
in
flds
stos
mov
and
pop
xlat
hlt
xor
add
iret
and
mov
inc
sbb
cmp
mov
in
out
mov
fldt
inc
mov
cmp
cmpsb
pop
mov
fisttpll
xchg
mov
sbb
call
sub
je
icebp
addr16
xchg
rolb
or
or
daa
mov
mov
sar
xchg
jae
mov
f2xm1
and
mov
or
xor
add
icebp
lods
push
sti
addr16
ds
jnp
nop
je
lods
lods
mov
out
dec
cmp
fdivrl
pop
xchg
daa
push
mov
push
sbb
data16
mov
pop
xor
xor
loope
inc
and
xchg
loope
es
shlw
test
into
in
dec
ds
cmpsl
mov
mov
pop
les
or
test
lock
inc
fisttps
pop
addr16
shlb
ljmp
incl
jl
stos
jmp
and
ret
and
incl
add
out
pop
lea
xlat
jmp
shlb
lods
jg
pop
sti
jne
popaw
adc
fisttpl
cmpsb
jns
inc
or
cli
arpl
xchg
mov
ljmp
dec
es
rol
lods
xor
add
and
sbb
mov
pushf
imul
and
xchg
mov
es
xchg
outsl
pusha
mov
inc
test
orb
add
js
mov
adc
pop
jecxz
lret
out
push
aas
popf
inc
out
test
ljmp
std
sbb
enter
movsb
sbb
cli
inc
sub
push
cmp
popa
mov
cmp
addr16
call
jl
lret
add
push
data16
dec
adc
sbb
xor
fisttpl
mov
xor
inc
fs
cli
inc
pop
xchg
in
aad
xchg
stc
push
ja
xor
jns
mov
iret
dec
jnp
pop
sbb
xor
and
hlt
insl
sbb
sbb
sub
and
ss
fstpl
imul
test
jle
or
dec
mov
sbb
cmc
xchg
push
rorb
pushf
jge
jge
fnsave
mov
jge
dec
test
xchg
pop
jecxz
dec
xor
push
aaa
out
out
add
jo
push
aad
addr16
pop
rolb
push
or
adc
jmp
out
imul
faddl
sub
cmc
mov
jp,pt
movsb
mov
insl
leave
adc
es
xchg
jbe
sti
loopne
das
cld
dec
xor
push
aad
xchg
or
mov
loop
test
sub
adc
lcall
popf
dec
xor
jp
dec
and
in
add
sub
fs
cwtl
dec
lods
and
and
es
scas
out
pop
into
lock
aaa
push
or
ljmp
out
inc
aas
cmc
insb
add
adc
leave
fs
aaa
and
push
out
cwtl
nop
or
inc
fwait
sub
xor
leave
loope
imul
test
iret
sti
adc
call
jb
outsl
icebp
xor
mov
xchg
jb
pop
loop
add
jne
movsb
fsubrs
sahf
rolb
xor
push
push
out
xor
lea
rorb
pop
int3
xor
push
data16
rclb
mov
and
xchg
push
aam
add
pop
les
fisubs
test
pop
push
out
punpckhdq
negb
sbb
cmp
ret
cmc
into
jle
insb
mov
add
popa
mov
jno
push
mov
fwait
inc
push
lods
or
incb
xor
mov
jo
test
xor
aas
and
jb
jno
mov
cmp
lret
inc
dec
lret
cmp
lea
popf
fidivrs
cli
jne
mov
and
push
roll
jnp
test
mov
push
xchg
jecxz
stc
stos
je
and
mov
mov
sbb
movsl
imul
stos
hlt
or
jnp
lods
iret
pushf
mov
adc
xor
dec
cmpsl
pop
mov
and
inc
xor
jns
sbb
imul
mov
and
xchg
imul
push
stos
pop
lcall
sub
into
or
and
mov
mov
jl
insb
dec
adc
and
orl
pop
adc
jmp
lea
sub
or
adc
aad
inc
push
outsl
xchg
mov
lahf
outsb
sub
sbb
jns
mov
fadds
insl
sbb
fcomi
xor
psrlw
xchg
enter
xchg
shlb
xor
jnp
subl
add
add
das
out
sarb
frstor
push
push
xor
cmp
pop
mov
push
test
lret
faddp
dec
xchg
mov
data16
or
cmp
clc
xchg
cmp
sbb
cmpsb
sbb
push
push
cmp
repz
ljmp
push
push
or
mov
cs
ret
aas
fwait
inc
mov
inc
cmpsb
pop
ret
dec
insb
pusha
xor
sub
outsb
add
pushf
inc
repnz
ret
cmp
insb
and
or
jge
xchg
shll
push
fsubs
xor
lcall
arpl
mov
pop
mov
lahf
sub
pop
jg
sub
jmp
insl
out
push
aaa
aad
notb
add
dec
xchg
cmp
mov
lods
inc
loop
filds
xchg
lahf
popf
add
popf
mov
mov
jg
jo
mov
insl
mov
clc
jl
aas
push
ss
imul
xor
outsb
or
imul
std
push
test
idivb
cmpsb
leave
adc
push
lcall
dec
stos
rcl
cmp
push
adc
int3
xor
mov
fdiv
out
pushf
test
fistps
add
add
xchg
mov
je
js
push
ret
call
mov
dec
pop
adc
mov
ja
daa
cld
or
sbb
inc
mov
lods
xor
popa
xchg
jno
call
inc
and
jmp
fbld
pop
clc
jne
pop
popf
push
scas
movsw
add
xchg
lahf
into
lret
sbb
mov
adc
or
test
cmp
aam
cmc
cmpsb
mov
cld
add
cltd
cmc
xor
ljmp
mov
and
loop
sahf
jge
xchg
enter
pmulhuw
inc
clc
dec
cs
dec
mov
js
inc
test
push
sbb
cwtl
sub
mov
fwait
mov
insl
dec
nop
or
or
push
stos
mov
rcll
loopne
in
js
jge
pop
xor
dec
jmp
xor
lock
negl
mov
fs
fcmovnu
mov
dec
mov
andb
addr16
pop
mov
mov
pop
out
popf
sub
mov
mov
in
jle
subb
dec
ds
mov
jecxz
daa
popa
lcall
jge
test
inc
testb
hlt
mov
out
and
cmp
jnp
jns
in
rcrl
sahf
cmpsb
scas
fstpl
xchg
mov
jne
mov
fs
es
push
arpl
xchg
and
lock
pop
daa
pusha
jns
cmpsb
pusha
fnstenv
inc
inc
cmc
jb
pop
push
mov
movsl
lods
pop
and
add
sarl
xor
cmpsb
call
mov
jl
jne
cltd
insb
pop
adcl
push
mov
sub
sbb
in
or
ja
xchg
fs
xor
cmpl
sub
xchg
pop
arpl
pop
jbe
jnp
mov
ret
xchg
inc
lret
es
mov
rcll
push
jecxz,pn
es
dec
push
dec
mov
addr16
xor
enter
add
outsl
jmp
mov
std
push
out
xor
push
icebp
pop
or
add
adc
cmp
out
mov
bound
rclb
push
cwtl
adc
or
or
idivb
pop
adc
and
iret
push
mov
push
sbb
outsb
adc
divl
shrl
xchg
outsb
loop
in
je
adc
fistpl
and
jmp
ret
rcrb
pushf
xor
cmp
mov
loopne
icebp
push
lret
aam
popf
test
jp
mov
jae
push
adc
xorb
fsubs
or
and
mov
inc
test
add
test
adc
adc
out
push
dec
inc
loopne
call
xchg
out
mov
jle
loopne
pop
dec
iret
jge
fs
cmp
nop
int
push
sub
jp
mov
and
mov
mov
dec
fldl
ficompl
jg
inc
std
adc
popa
ret
fiadds
or
into
pop
mov
push
fldenv
push
js
mov
outsl
add
pop
les
jb
inc
dec
mov
push
inc
xor
inc
ja
fs
push
pop
jnp
cmp
sub
cmp
and
push
iret
outsl
repnz
int
lea
aam
jp
sub
adc
sbb
repz
sbbl
mov
dec
mov
repz
mov
cmp
xor
xchg
shll
xor
int
sub
jo
pop
decb
dec
leave
adc
fs
inc
sbb
shl
int3
scas
or
push
sahf
icebp
in
or
push
fdivr
ds
enter
in
push
pop
jle
data16
les
jno
cwtl
sti
jo
inc
out
push
xor
repnz
in
lret
fidivrs
lods
sub
xchg
sbb
repz
sub
dec
pop
pop
add
lds
and
push
mov
jb
push
roll
push
inc
arpl
fistl
inc
adc
stos
push
jns
arpl
xchg
inc
add
repz
scas
daa
loope
fcomip
ja
ss
sahf
cwtl
add
pushf
sahf
into
jl
pop
in
gs
jmp
repz
addb
out
jne
lret
cltd
mov
js
xchg
outsb
lret
inc
jno
adc
aaa
rclb
xor
jbe
movsb
mov
les
push
push
stos
or
mov
mov
jbe
iret
adc
insl
out
jb
inc
pop
and
mov
outsb
cli
insl
sahf
add
mov
jae
pop
cmp
aam
xor
jmp
pop
mov
in
sti
test
jp
popa
fs
push
rcr
roll
js
aaa
lea
arpl
scas
xor
sbb
adc
xor
xchg
xchg
jbe
cmp
cmp
pop
repz
xor
popf
jmp
xchg
mov
icebp
test
jl
push
cmpsl
loop
repz
mov
mov
fimuls
test
lods
test
adc
jp
movsb
xchg
adc
data16
push
or
cltd
jmp
fwait
jg
mov
mov
and
jne
push
add
jae
mov
lods
adc
xchg
call
popa
inc
jno
dec
scas
adc
data16
xchg
jecxz
fstl
aam
int
jnp
leave
pop
shlb
or
jae
test
dec
jp
jp
ja
shrb
outsb
jg
mov
sub
lea
mov
lret
mov
cwtl
icebp
xor
inc
pop
lahf
out
pusha
dec
push
inc
out
pusha
movsl
add
add
shrb
jge
pop
pop
cld
mov
test
scas
xor
subb
xor
imull
iret
in
shrb
aad
push
cmp
ror
ljmp
add
and
ds
lret
sub
dec
fldcw
into
push
jo
pop
popf
mov
fwait
add
cmp
xchg
cmp
adc
xchg
mov
mov
jns
mov
test
in
in
scas
cltd
sbb
sub
sbb
mov
mov
push
adc
xchg
pop
add
inc
lock
cmpsl
cmc
sarl
int
sub
mov
push
inc
xlat
aad
xchg
pop
out
inc
fbstp
xchg
pop
cmp
es
std
fldcw
je
inc
jg
adc
fadd
pop
push
push
movsl
imul
hlt
pop
dec
inc
sbb
pop
mov
mov
and
and
and
cmp
leave
rorl
or
pop
sbb
loopne
aam
shrb
xor
xchg
sub
push
addr16
movsl
pop
or
data16
cli
lret
std
lods
sub
push
cmp
adc
lret
sarb
xchg
mov
inc
cmpsl
or
int3
rclb
or
fs
hlt
outsl
jns
loope
push
lea
push
and
cmc
popa
mov
jge
sub
sbb
cmp
mov
das
fwait
dec
in
popa
jns
add
pop
xlat
sbb
js
or
stc
aas
test
fisttpll
or
data16
push
mov
arpl
inc
push
ja
xor
adc
sub
cmp
adc
pop
cmc
daa
call
jb
stos
dec
jae
int3
adc
push
mov
sub
inc
mov
xor
enter
mov
mov
clc
jmp
lcall
rorb
rorb
xchg
mov
lock
sub
inc
repz
shrb
je
shlb
out
dec
pop
scas
gs
aad
inc
lock
dec
cmpsb
inc
mov
fs
jb
fists
scas
in
mov
sbb
shll
inc
pushf
xor
and
mov
pop
loopne
push
cmpsb
pop
pop
sti
pop
inc
pop
stos
inc
sub
dec
mov
mov
addl
inc
sbb
sub
mov
push
xchg
cmp
cmpb
inc
scas
and
popa
sahf
add
sub
mov
mov
in
adc
fmul
fmuls
cmp
test
pushf
lods
adc
or
sub
sahf
adc
popa
es
scas
ror
pop
dec
aas
add
out
insl
pushf
pop
cmp
fsts
movsb
icebp
xor
pop
scas
add
out
into
lret
test
xorb
repz
jns
fdivrs
dec
aaa
jp
shr
addb
xor
and
sbb
iret
and
dec
hlt
push
inc
inc
test
cmpsl
inc
les
sti
cmp
insl
emms
sti
pop
fstp
ss
cmp
stos
sbb
popf
jl
shrl
lods
sbb
in
in
lahf
ss
ret
and
pushw
xlat
std
jae
cmpsl
cmp
push
mov
fnstsw
shll
fstp
sub
sarl
adc
jnp
xchg
sbb
jmp
imul
or
xor
lcall
mov
int3
sti
in
bound
enter
bound
out
lret
mov
aam
sbb
jecxz
fistpll
xchg
lret
and
decl
ret
repz
sub
fstps
sti
js
pop
ss
xor
js
push
ret
mov
ss
push
mov
push
mov
adc
cmp
fldt
lock
mov
mov
outsl
lea
jno
loop
les
mov
mov
inc
std
inc
xor
xor
je
loop
xchg
xchg
pop
bound
add
push
fs
test
adc
cmpsl
jb
ds
jge
inc
sahf
lods
roll
pop
ds
insb
or
mov
push
sub
fisttps
inc
mov
fcmovbe
gs
cwtl
dec
dec
dec
lock
std
jmp
clc
add
addr16
jl
jmp
mov
sarb
mov
sar
lret
test
cwtl
jmp
rcr
cmp
jae
add
shll
cmp
add
cmp
aas
pop
ds
sbb
push
ss
push
jnp
out
push
sub
addr16
imul
jge
fidivs
hlt
cli
push
loop
adc
lret
and
mov
icebp
in
mov
mov
inc
jp
inc
push
repnz
mov
or
insb
jb
ret
int
adc
bnd
test
stos
jns
into
stos
pop
jg
adc
in
sbb
jecxz
xchg
add
out
inc
inc
popa
adc
lods
mov
mov
movsb
add
dec
cs
orl
dec
int
xor
mov
push
mov
xchg
mov
mov
dec
pop
push
es
mov
mov
std
stc
dec
cltd
mov
out
jp
clc
fidivs
lahf
xchg
mov
insl
fcomp
and
adc
sbb
jo
mov
movsl
orb
andb
mov
xor
jp
shl
sbb
fs
sub
fs
push
fs
inc
cli
bound
sbb
cmp
sub
dec
cmpsl
int
bound
cmpsl
dec
pop
dec
jo
xchg
andl
jge
mov
mov
or
mov
push
add
lds
adc
jae
test
jbe
or
adc
dec
fisubrl
ss
jne
lods
imulb
insb
mov
lcall
fs
loopne
xor
cmp
test
mov
in
mov
test
mov
repz
sub
test
mov
dec
sub
scas
aas
push
or
pop
lret
mov
stc
add
and
andl
enter
out
divb
in
into
xchg
jbe
shlb
mov
test
or
mov
fdivrs
cmp
out
pop
xchg
xchg
mov
dec
ja
mov
shlb
add
fisubs
xor
mov
outsl
jg
dec
fdiv
mov
adc
frstor
mov
mov
dec
dec
mov
cmp
fwait
pop
mov
xor
scas
sub
push
add
xchg
xchg
lods
lods
ret
push
lret
ja
push
sub
addr16
xchg
in
adc
fnstsw
insb
adc
cs
decl
mov
test
xor
or
mov
sti
cmp
frstpm(287
aaa
rclb
shr
inc
sub
in
out
movsl
fldenv
fistl
movsl
iret
imul
inc
cs
jp
les
pop
or
andl
sbb
push
mov
xchg
jae
jbe
pop
sarb
push
jge
out
mov
mov
push
fnstenv
and
and
testb
arpl
mov
inc
xchg
dec
data16
jb
fdivrl
mov
or
push
ret
fdivl
or
jmp
dec
lahf
or
inc
cmp
movsl
mov
sahf
int3
or
lods
add
insl
fisttpll
cmp
leave
or
inc
add
xchg
sbb
dec
and
sti
mov
loop
fsubrl
repnz
xor
into
push
mov
jl
add
mov
add
das
insl
or
xor
jne
push
jl
divl
sub
outsb
sbb
pop
cmp
add
cmpl
xor
cmp
pushf
mov
into
jno
sbb
lcall
pop
push
fdivl
loopne
sbb
shlb
dec
jo
jle
int
mov
repz
pop
mov
mov
or
test
jo
aaa
cld
jp
stos
mov
fildl
loop
mov
adcb
test
jg
jne
mov
sbb
push
jbe
xor
add
out
in
sub
jl
dec
dec
ja
inc
leave
push
pop
notb
pop
jne
cmp
movsb
aad
push
int
pop
push
fldt
cltd
or
out
and
popa
je
jl
mov
test
ret
adc
xchg
mov
clts
inc
int3
adc
sub
jmp
rcrb
mov
pop
push
clc
adc
dec
xor
mov
jo
addb
pop
mov
into
push
jnp
into
mov
in
mov
ret
and
shll
test
push
scas
mov
or
ret
cmp
nop
sbb
adc
mov
add
push
mov
repnz
and
repnz
nop
inc
ret
mov
push
inc
pop
ret
test
mov
cmp
cmpsb
add
push
fnstcw
out
loop,pn
cmp
jb
pop
xchg
in
inc
dec
dec
xor
in
inc
ds
cs
test
push
dec
clc
or
and
jo
sub
ret
stc
lcall
add
mov
mov
bound
xor
adc
nop
shll
leave
xor
jg
mov
nop
xor
sbb
sub
icebp
lret
pop
pop
pop
imul
aas
xchg
daa
jmp
sbb
inc
xor
daa
leave
xor
cmp
or
rcrb
orb
xchg
push
mov
das
cmp
xor
frstor
arpl
hlt
lret
cwtl
les
adc
dec
inc
mov
and
jge
and
push
ret
and
push
cmpsl
xchg
cmc
cmp
cmp
sub
cmp
jl
stc
add
js
add
loopne
jne
dec
cmc
jns
pop
dec
inc
int3
lahf
sahf
mov
mov
jmp
into
movsl
xchg
dec
pushf
sbb
sub
sti
sbb
loope
fdivrl
mov
mov
sub
fstpt
xor
ss
imul
fidivs
subb
out
mov
sub
fs
mov
jne
int
and
jmp
mov
mov
pop
sbb
push
scas
jp
dec
push
dec
fwait
sbb
cmc
inc
add
pop
or
sbb
ja
add
pop
js
xlat
or
jle
push
addb
dec
pop
ret
fimuls
cltd
js
xchg
xchg
lahf
cli
xchg
lret
xlat
test
push
jmp
mov
pusha
sarb
movsb
icebp
adc
xchg
jp
adc
leave
pop
xorl
fsubr
mov
jecxz
and
mov
popf
out
lret
dec
or
jmp
into
mov
scas
iret
xchg
and
clc
lret
cld
out
jne
in
dec
and
and
xor
cli
test
dec
idivl
or
mov
ss
rcrl
jno
jb
imul
jbe
mov
repnz
and
dec
imul
andl
mov
sahf
insb
shlb
aas
test
or
imul
pop
mov
mov
shlb
xchg
mov
xchg
pop
pop
mov
jnp
fs
scas
cmpsl
call
aam
pop
xchg
scas
dec
nop
jge
mov
insl
and
out
jmp
xchg
mov
jb
adc
push
test
mov
loop
rcrl
add
leave
js
sub
inc
lods
gs
loop
pop
sbb
call
or
mov
cld
sbb
pop
cmp
aaa
fcmovne
jb
mov
xchg
rorb
sbb
in
and
repz
shl
mov
cmpsb
loope
sbb
scas
movsb
or
jg
outsl
hlt
push
sub
jno
pop
int
lret
lret
push
popa
dec
std
out
insl
cwtl
stc
mov
dec
mov
hlt
in
adc
lret
mov
and
sbb
inc
aas
pop
into
faddl
out
inc
scas
rcl
push
outsl
lods
push
cmp
fxam
push
cmp
aad
cmp
enter
inc
idivb
push
xlat
and
out
and
adc
shlb
or
push
sbb
lret
imul
sub
mov
inc
xor
leave
xor
cli
cmp
dec
inc
stos
cmpsl
es
add
sub
mov
mov
pop
cs
mov
xchg
imul
iret
test
mov
addr16
cld
jbe
std
xchg
in
int3
add
popa
ljmp
fsubs
xor
push
addr16
sub
push
mov
movsb
dec
aaa
push
int
xchg
es
push
cmp
fildll
lods
or
int
enter
in
mov
rorl
mov
cmp
mov
jns
jp
ret
les
imull
lock
pop
jl
enter
dec
cmp
mov
fcoms
sahf
inc
mov
inc
cld
inc
ljmp
or
mov
mov
jb
mov
push
pop
jle
fstpl
sbb
adc
cmp
fisttpl
lret
test
add
mov
outsb
je
out
push
or
push
sti
dec
mov
ljmp
popf
sbb
sub
in
inc
jecxz
cli
ss
and
loop
out
dec
loope
jecxz
mov
js
repz
lret
add
xor
lret
ljmp
stos
mov
inc
int3
jbe
fld
mov
sahf
mov
insl
popa
pop
mov
xor
fcoml
dec
jp
test
push
aam
pop
cmp
pusha
add
loop
lcall
mov
jp
xor
adc
subl
sub
sbb
cli
jno
push
sub
push
cmp
lds
repnz
push
or
cmc
test
imul
inc
fldcw
sbb
aaa
and
mov
fsubr
mov
das
outsl
lock
out
insb
pop
inc
hlt
ret
or
fidivrs
mov
ret
sbb
sub
jecxz
aad
xchg
dec
mov
lahf
lea
pop
mov
or
les
xor
mov
jge
int3
lcall
lock
cwtl
sub
test
sbb
sbb
lcall
mov
imul
cmp
sub
fs
negl
mov
in
or
mov
lret
jne
stc
hlt
push
pop
daa
mov
call
aam
mov
mov
cmp
cmp
jbe
in
jmp
dec
icebp
fs
push
insl
outsb
jle
mov
pusha
mov
mov
gs
aad
cmc
mov
adc
cmp
lea
jno
cmc
add
adc
comiss
cmp
je
xor
jecxz
cmp
mov
pop
mov
xor
nop
stc
xorl
repnz
mov
jno
popf
repnz
mov
mov
fiadds
or
adc
or
es
std
fs
push
popl
mov
cmp
push
ja
js
jl
jo
mov
cld
xchg
in
cwtl
pusha
mov
jno
mov
xor
pop
out
ficoml
call
dec
ljmp
inc
adc
das
arpl
inc
fidivs
and
push
mov
hlt
rolb
mov
xchg
xchg
cmp
inc
add
sti
shll
mov
xor
ss
add
sub
loop
sbb
add
cs
pop
pop
shrb
fwait
mov
ljmp
mov
pop
mov
sbb
push
ljmp
lock
outsl
dec
push
gs
sbb
cwtl
mov
push
in
xor
inc
jecxz
cltd
sub
mov
ficomps
push
ficomps
enter
and
sbb
cmp
push
jg
pop
sbb
pusha
xor
iret
div
and
dec
mov
push
int3
cs
ljmp
inc
ret
bound
aad
cmp
mov
daa
cmp
pop
push
aad
dec
subb
gs
shll
or
insl
sbb
cmp
mov
int3
pop
jb
out
push
shrl
mov
aas
loopne
xchg
xchg
dec
gs
fs
push
inc
aad
push
adc
insb
and
popf
inc
test
clc
sahf
in
test
pusha
mov
loope
cld
cmp
in
cmp
sbb
pop
insb
pop
icebp
xchg
cmp
repnz
jge
xchg
push
push
and
and
arpl
dec
cltd
jmp
ret
mov
lock
out
add
adc
dec
iret
mov
or
dec
adc
push
mov
in
mov
sub
decb
clc
shl
xlat
xor
lea
xchg
in
mov
test
lcall
mov
decl
add
call
cmp
cltd
sub
or
jno
fildl
and
adc
jmp
add
test
pop
cmc
mov
xor
pushf
lods
adc
loope
pop
cli
fsubl
fs
repz
data16
int
or
add
mov
into
push
adc
push
mov
pop
mov
imul
fldcw
xor
imul
test
push
and
or
daa
sub
inc
ficomps
inc
adc
dec
add
dec
enter
mov
iret
mov
mov
cmp
push
pop
mov
jae
mov
not
cmp
mov
push
push
jl
pop
mov
aaa
mov
xchg
xchg
push
mov
jo
add
ljmp
shll
mov
add
aam
es
mov
xor
lods
testl
fs
xor
cmp
mov
push
das
add
add
mov
das
mov
stos
fidivrs
jno
scas
or
mov
lret
test
xlat
dec
inc
scas
sub
sbb
out
sbb
and
aam
dec
or
enter
cmp
shll
movsb
xor
and
inc
es
and
jno
hlt
sub
inc
rclb
add
jmp
in
test
mov
dec
inc
fs
or
push
jno
mov
out
sub
dec
push
or
das
jecxz
cmpsb
sub
sub
push
iret
pop
std
mov
out
and
and
filds
bound
pop
rcrb
cmp
ja
cmpsl
data16
dec
xchg
cmp
dec
in
hlt
pusha
ret
lcall
push
pop
mov
add
dec
xchg
push
aad
repz
in
in
or
lahf
inc
ja
dec
pop
and
nop
test
orl
out
sub
dec
lods
xchg
xor
push
cmpb
aas
and
add
mov
cld
scas
and
mov
xor
add
lcall
fstp
jnp
and
mov
push
andb
pop
ret
daa
test
add
cmpb
cmp
xlat
mov
push
stc
mov
int
repz
pop
mov
scas
adc
cmp
sbb
les
loopne
mov
pop
mov
outsb
push
jb
sbb
mov
popa
dec
sub
sub
pop
mov
adcb
fisubrs
hlt
mov
cmpsb
fiaddl
push
cmp
sbbl
and
lea
pop
push
scas
cmc
mov
fcoms
push
pop
aad
rorb
sbb
adc
jle
pop
je
pop
push
int
ljmp
xchg
subl
add
gs
jo
pushf
mov
pop
cmc
add
cmp
sub
hlt
jl
jne
and
or
adc
sbb
xor
inc
cmp
cmc
popf
std
fldcw
ja
dec
push
xor
out
int
gs
inc
stos
ficompl
push
cmpsl
mov
cld
fildl
mov
movsl
popf
in
or
adc
inc
push
jb
pop
push
pop
cwtl
pop
mov
mov
push
jb
xchg
and
pop
sahf
sbb
jnp
popf
dec
call
sub
xchg
inc
inc
lds
mov
andl
push
bnd
cwtl
pop
pop
dec
out
dec
in
ja
lret
jbe
rcll
lods
aad
xchg
aaa
push
rcrl
and
or
cmp
cmpb
roll
lods
lahf
sbb
pop
insl
notl
mov
xchg
cmp
ret
movaps
add
fsubr
inc
clc
add
test
mov
lret
cli
inc
mov
imul
sbb
mov
push
outsb
push
and
inc
mov
sub
sub
imul
mov
add
jae
jmp
dec
sbb
jnp
xchg
sti
lock
sub
stc
add
mov
cltd
loope
lea
test
lock
into
test
filds
into
adc
add
jno
cmpsl
push
adc
fsubrl
cmp
pop
hlt
out
or
sbb
fldenv
inc
or
or
pop
mov
dec
jbe
les
insl
sbb
mov
ret
push
inc
or
jl
push
int
subb
push
lret
lds
fimuls
mov
lea
jle
mov
add
stos
hlt
or
test
add
add
adc
cmp
lret
cwtl
outsl
rorl
in
sub
movsb
sbb
rcll
adc
and
scas
sbb
scas
pop
nop
fwait
adc
add
sub
stc
dec
sahf
mov
cmpsb
sub
inc
mov
leave
ret
sbb
xchg
sub
pusha
lea
sbb
pop
push
cltd
mov
add
int
adc
and
mov
and
shlb
fimuls
mov
int
cmp
lea
addr16
push
lret
cmpsb
jno
in
mov
imul
mov
dec
loope
mov
fwait
loopne
or
das
adc
lds
std
dec
enter
and
lahf
mov
mov
mov
or
jp
lods
sub
dec
daa
xlat
jnp
outsb
push
adc
cmp
mov
test
push
jmp
pop
jns
lea
pop
sbb
div
cld
cs
cmp
or
xor
pop
aas
dec
pop
leave
fucomip
std
cmpsl
test
das
sub
les
inc
fstl
sub
nop
idivb
adc
hlt
out
rclb
rclb
mov
imul
jbe
mov
int
divl
mov
lods
pop
mov
sbb
and
gs
adc
lret
and
sub
cmpsb
add
aad
xor
and
fs
push
mov
mov
xchg
loop
sbbl
mov
fstpt
jmp
inc
pop
test
sbb
cltd
sub
test
in
std
push
mov
fnstsw
or
dec
ret
adc
mov
popa
push
outsl
jne
pop
aas
mov
cwtl
dec
loopne
mov
or
out
out
cmc
dec
test
cmp
xor
jne
leave
cmp
mov
sbb
sub
adc
fdivr
clc
dec
stc
mov
push
adcl
sub
pop
int3
mov
cmp
mov
movb
pop
dec
enter
sub
add
mov
cmpsl
rorb
mov
popf
hlt
dec
jne
cli
or
inc
adc
add
inc
enter
fwait
sub
fsub
jb
adc
orl
ss
push
push
push
dec
pop
ja
inc
lcall
into
xor
mov
in
add
test
sahf
into
sub
fsubrp
lods
inc
jno
inc
and
cli
std
inc
clc
mov
ljmp
mov
jmp
aaa
adc
inc
sbb
es
or
insl
sub
rcr
adc
cs
sahf
mov
push
in
jmp
sub
xor
pushf
rol
pop
inc
xchg
jo
dec
dec
cmp
pop
gs
test
idivb
and
imul
aam
inc
cmp
dec
cmpsb
mov
fnstcw
hlt
jmp
inc
mov
arpl
add
mov
cmc
imul
xor
lret
jb
cmpb
sub
scas
inc
dec
lea
add
std
sub
inc
ret
pop
mov
pusha
mov
test
insl
pop
arpl
mov
jp
data16
std
jl
cltd
inc
stc
rcrb
xchg
mov
movsb
push
lock
cli
inc
adc
mov
daa
and
dec
push
mov
lret
out
add
sub
clc
jb
sub
mov
lcall
xchg
or
xchg
mov
fnstsw
cmp
ss
sbb
stos
xchg
arpl
push
add
mov
ja
pop
push
and
and
iret
cmp
add
inc
xor
and
cs
jns
gs
xchg
test
cmpsb
pop
mov
aam
dec
mov
jl
or
jl
jecxz
cmp
icebp
lret
mov
xchg
addr16
lret
lods
add
lret
test
pop
xchg
push
add
lcall
mov
mov
mov
dec
xor
adc
das
sbb
xchg
rclb
jecxz
daa
stc
fs
cmp
lahf
jg
dec
ret
mov
jnp
fdivs
xor
dec
andb
push
aam
int
sub
xor
aad
outsl
int
mov
fsubrp
jl
mov
insb
imul
mov
out
xchg
add
ja
dec
pop
ret
jnp
scas
cld
add
inc
pop
in
je
mov
outsl
pop
sbb
xlat
inc
adc
cmp
fdivs
jg
shlb
push
mov
lret
movsb
mov
push
insl
mov
rorl
jmp
push
jmp
sti
xor
repz
cmp
stos
xor
mov
js
fdivrl
addb
xchg
icebp
ror
shll
movsl
and
add
cs
mov
fadds
fucomip
push
stc
fnstsw
int3
jb
iret
xchg
push
mov
fs
or
jge
push
cmp
stos
jb
fcomps
mov
and
clc
xor
sbb
aad
scas
push
push
ljmp
les
into
inc
std
and
popf
cmp
sub
ret
and
iret
test
out
inc
inc
std
mov
and
and
pop
pop
daa
push
cmc
or
sub
addl
xchg
pop
xor
mov
mov
push
mov
clc
dec
mov
icebp
mov
sti
add
mov
cmpsb
hlt
dec
jb
shlb
xor
ret
mov
and
and
sbb
add
mov
imul
jb
out
mov
mov
in
lods
inc
or
jle
aaa
jmp
push
loopne
in
shlb
push
xor
fistpll
sbb
xchg
pop
xlat
inc
out
xlat
or
sub
xor
or
pop
push
sti
pushf
hlt
arpl
sub
adc
lods
xchg
or
xor
loope
push
push
lcall
adc
cmpsl
mov
les
rcl
push
out
jl
and
ds
and
sbb
mov
out
and
andl
es
aaa
push
mov
cmpsb
fdivl
jne
mov
dec
popa
mov
push
lret
arpl
lcall
je
shufps
dec
inc
add
cmc
loop
xchg
pusha
fwait
mov
repz
jne
test
inc
ss
lcall
je
mov
inc
idiv
js
insl
and
sub
movsl
adc
insb
xor
sbb
sbb
dec
jmp
dec
pushf
ret
loope
sub
ja
int3
xor
or
ds
hlt
mov
fidivl
mov
pop
pop
aam
dec
pop
fidivrl
inc
ret
data16
das
adc
push
loope
xchg
pop
and
test
cmp
and
pop
arpl
pop
call
cmp
mov
out
jno
cmp
jo
sbb
cmp
stc
aad
out
in
mov
int3
std
aas
stos
aas
push
lcall
mov
push
cmp
fwait
out
xchg
lcall
mov
adc
add
jle
int
shl
jecxz
addr16
les
mov
cmp
push
stc
jbe
bound
pop
cmpsb
sbb
and
push
mov
add
inc
mov
insb
mov
and
add
stos
pop
movsb
sbb
sub
jb
dec
stos
pop
fisubrl
xchg
xor
outsb
xlat
call
ret
inc
xchg
mov
leave
mov
addr16
xchg
shll
int3
or
pop
jno
xor
test
movsl
jb
sbbb
cmp
addr16
push
cmp
xor
inc
xor
fsts
and
dec
add
je
cltd
and
inc
cltd
out
jecxz
mov
add
sub
into
xor
imul
jl
out
add
inc
notl
fwait
fwait
jns
jmp
jecxz
mov
das
mov
aad
cmp
jmp
pop
pop
push
push
scas
movsb
mov
xchg
mov
add
push
and
sbb
aas
popa
sbb
aam
xchg
mov
out
lcall
call
sub
js
and
out
mov
in
icebp
inc
stc
jnp
jne
enter
roll
loopne
mov
xor
imul
mov
ret
loope
mov
push
rcr
pop
fistpl
and
jbe
scas
call
loope
adc
sbb
and
jl
xor
jno
je
cmpsb
and
push
and
pop
aam
lods
fs
xchg
jmp
and
outsl
xor
xor
movsb
cltd
xchg
and
add
cmc
lret
orb
out
stos
cmp
ret
jnp
jecxz
jnp
and
hlt
arpl
popf
mov
cmp
xor
mov
ljmp
cli
xchg
xchg
mov
dec
test
push
or
push
push
fucomi
enter
add
in
or
ljmp
pop
in
inc
jns
scas
daa
mov
loope
loope
fidivl
jns
xchg
mov
mov
sbb
or
fadd
scas
jecxz
jo
insl
jnp
outsl
outsb
enter
lods
xor
push
push
mov
leave
inc
pop
sbb
or
incb
andl
sbb
popf
dec
fs
dec
je
daa
adc
mov
push
out
add
pop
loope,pn
jg
in
pop
xchg
mov
pop
push
sub
sub
adc
test
enter
ds
icebp
or
sbb
xchg
in
aas
and
stos
sbb
cmp
fidivl
and
mov
ficomps
push
rcrl
or
sub
adc
test
popf
mov
and
idivl
cmp
mov
xchg
dec
imul
sti
xchg
pop
les
popa
les
sbb
leavew
mov
jle
or
insb
or
or
cmpsb
jb
mov
cld
dec
ror
cmp
pop
adc
push
scas
xor
mov
pushf
lcall
xor
ds
push
rsm
jno
xchg
call
imul
adcl
mov
in
test
es
movsl
imul
mov
shlb
pusha
push
cmp
xchg
iret
jae
or
xor
cmc
inc
scas
cmp
or
dec
arpl
inc
cmp
js
leave
xorl
fmull
stos
mov
and
jl
loopne
xchg
push
xchg
cs
mov
aad
mov
lahf
xor
rcrb
outsb
test
dec
adc
sahf
leave
movsb
in
inc
test
xchg
sub
je
movsb
inc
add
negb
notb
pop
imul
fsubr
shrb
addl
pop
sbb
xor
je
jl
jo
addl
in
add
cmp
lock
clc
addr16
repnz
notl
add
in
jo
push
sahf
jno
cmp
mov
cli
fldcw
push
lods
int3
jbe
cmpsl
lahf
cmpsl
fistl
jge
mov
pop
cli
movsb
cmp
js
dec
jge
mov
mov
fnstcw
js
idivl
inc
lcall
mov
pushf
xlat
loop
cmp
sub
lea
xor
mov
xor
xchg
leave
jo
data16
cmp
outsl
std
sbb
or
pop
inc
shl
shrl
out
push
xor
loope
mov
in
pop
cmpsl
sub
scas
ret
and
inc
daa
fisttpl
filds
fisttps
std
ljmp
jo
mov
aad
adc
inc
out
popf
lahf
in
fstpl
mov
mov
push
jmp
addr16
mov
jmp
jecxz
xchg
fisubrl
fnsave
shrb
mov
sub
lock
add
or
pop
mulb
jmp
popa
ficoml
pcmpgtb
adc
adc
mov
lret
stc
cld
fimull
push
lret
jp
hlt
not
dec
lret
jbe
hlt
cmp
pop
stos
sahf
mov
in
add
sbb
fiaddl
mov
call
push
mov
mov
push
cmp
dec
mov
loop
sar
jae
ds
mov
ds
mov
mov
jg
inc
fmuls
js
jecxz
ja
mov
sbb
lret
dec
scas
pop
test
test
ret
in
aas
mov
imul
bound
out
inc
into
push
sub
mov
cltd
loopne
sbb
and
out
inc
je
adc
add
int
xor
cmp
sti
adc
push
inc
lret
mov
imul
sbb
outsb
into
add
mov
pop
xchg
adcl
popa
pop
sbb
enter
into
inc
add
inc
repnz
leave
pop
imul
stc
call
sbb
es
mov
mov
lahf
ret
mov
mov
xchg
call
or
jns
and
or
fistps
xchg
jb
lods
push
je
sarb
outsl
and
aam
or
dec
push
push
aas
push
leave
mov
fs
xor
inc
sbb
or
xor
movsb
lret
test
fmul
add
and
dec
movsl
loopne
add
pop
fnstsw
pop
pop
mov
cli
add
mov
push
add
or
je
jno
jns
and
nop
sbb
sub
jecxz
or
cld
addl
std
xchg
rolb
movsb
mov
jnp
rorl
xchg
xlat
fisttpl
cmp
cli
nop
enter
icebp
pop
mov
test
jp
and
and
sub
std
shlb
xchg
jle
sub
cmc
or
in
xchg
ret
ret
jno
loope
adc
insl
inc
push
or
push
push
add
jbe
cmpsl
mov
mov
gs
sti
sarl
mull
mov
out
adc
mov
sbb
jo
out
sbb
jns
ljmpw
and
and
jg
sub
add
call
pop
aad
mov
mov
jge
push
iret
leave
xor
repnz
fidivl
xor
xchg
xor
inc
push
fwait
mov
mov
sub
or
lret
xchg
xor
out
out
mov
add
imul
push
call
dec
mov
push
call
mov
or
xor
xchg
aad
jmp
push
test
in
les
push
jmp
cmpsl
daa
aad
pop
xor
mov
idivl
push
xchg
stos
test
daa
fwait
adc
shl
bound
adc
test
fwait
mov
xchg
xchg
dec
in
add
add
mov
arpl
roll
and
add
mov
inc
leave
lcall
cltd
loop
in
repz
sub
cmp
inc
rclb
jp
in
jae
mov
test
call
mov
inc
adc
add
negl
mov
in
xchg
ret
les
mov
xor
mov
cmpsb
sub
iret
xchg
cmpsl
push
jg
sub
push
inc
out
fldenv
mov
adc
comiss
sub
jne
jbe
ret
lcall
out
orl
sbb
and
shll
cmc
sbb
loopne
push
in
mov
ficomps
inc
insb
clc
orl
arpl
outsl
fistpll
dec
mov
sbb
adc
aaa
ret
test
push
orl
ss
dec
cmp
into
gs
repnz
popf
mov
pop
dec
push
fwait
lret
push
cwtl
cmp
mov
push
cmpsl
add
push
xor
mov
push
pushw
fcomps
das
pop
das
sub
add
jmp
jle
pop
xor
jno
add
stc
jae
daa
xchg
shlb
or
clc
into
adc
mov
xchg
jg
lcall
int3
push
ret
lds
pop
int3
xchg
cmp
insb
imul
pushf
fildl
and
lahf
lods
sub
fmull
pop
pop
sub
jnp
pop
xchg
fstpl
xchg
icebp
jecxz
xor
dec
mov
jne
sbb
out
push
mov
imul
or
out
test
lock
sqrtps
mov
mov
adc
loop
sub
dec
mov
cmpb
rcrb
or
call
out
div
xchg
icebp
push
fistps
mov
sub
mov
pop
int3
mov
mov
je
mov
push
add
aam
pop
push
dec
insl
jo
adc
imul
push
push
mov
sbb
outsb
mov
mov
cwtl
ja
jae
notb
sar
sahf
mov
mov
push
mov
push
sub
mov
cs
scas
movsb
cmp
jle
sarb
outsl
xchg
and
push
stos
mov
mov
dec
fmuls
xorb
push
dec
fmul
out
pop
jg
ret
fisubrs
out
repz
mov
inc
loop
xchg
test
rorl
lds
or
or
pop
cmp
xor
cwtl
cmpl
cmp
roll
sub
aad
xor
push
js
mov
lock
sub
push
scas
popa
adc
insb
add
call
jno
rolb
jo
into
js
addr16
lret
inc
lcall
arpl
lret
or
insl
push
sub
cli
xchg
cmp
jno
jb
xlat
jg
mov
xlat
sbb
cli
fdivrs
call
sub
or
mov
mov
scas
xchg
les
inc
in
lods
sub
jmp
rcr
and
inc
lret
xor
cmp
rcrb
add
mov
dec
ds
sub
arpl
fstl
loope
lcall
hlt
cmp
clc
or
xor
std
mov
aas
ret
sbb
push
test
inc
xor
outsl
lcall
xlat
xchg
xchg
stos
nop
mov
es
or
movb
jl
adc
icebp
jbe
movsb
cld
and
add
push
rol
pop
inc
mov
jge
xlat
pop
mov
and
repnz
jbe
inc
lcall
cmc
mov
fchs
les
mov
lcall
gs
imul
pop
pusha
lahf
outsb
mov
insb
sahf
sub
daa
and
lods
cld
xchg
and
or
sti
inc
jae
inc
push
arpl
jl
test
inc
jo
push
lret
popa
cmpsl
push
cli
popl
scas
aas
out
push
test
in
stos
mov
mov
jno
pop
cmp
pop
cwtl
mov
add
sub
and
jnp
xchg
pop
mov
xchg
cmovns
and
mov
cwtl
cmp
into
sub
cld
sahf
push
fcmovb
stc
std
lret
inc
int3
sti
adc
jns
or
jne
mul
pop
inc
sahf
or
jo
mov
mov
cli
push
fistps
pop
fstpl
mov
or
jo
fbld
adc
inc
adc
ror
push
xchg
std
mov
mov
adc
mov
icebp
xor
cmp
push
jg
jno
sbb
into
mov
icebp
mov
femms
cs
push
lods
or
popl
or
loope
inc
aad
nop
pop
fisubs
sub
or
dec
and
xorb
std
mov
sbb
cmp
stc
aas
das
pushf
pop
or
mov
jg
sqrtps
js
inc
push
orb
mov
sub
das
lock
mov
fs
jb
add
sbb
cmpsl
cmpsb
mov
jne
popf
jp
and
push
inc
mov
mov
jnp
mov
aam
adcb
movsb
jo
clc
and
cld
aas
or
loop
inc
or
jge
idiv
push
les
jp
mov
fwait
inc
cld
out
xchg
dec
lcall
jnp
mov
mov
out
sahf
mov
sub
pop
mov
sahf
clc
xchg
adc
mov
add
dec
std
push
stos
or
mov
cmp
xchg
pop
push
and
lock
mov
adc
jbe
mov
pop
data16
inc
stc
pop
ja
outsb
jns
cmp
or
aaa
repz
jne
inc
jae
aad
and
mov
frstor
jp
adc
mov
lods
js
or
in
movsl
inc
mov
adc
lods
fstps
shrb
insl
or
lahf
sbb
pop
movsl
les
movsl
mov
jg
mov
outsl
rclb
mov
loopne
jmp
dec
fbld
insl
data16
sub
out
cmc
xor
dec
cld
mov
sbb
call
jns
xchg
lcall
in
ret
jae
mov
sbbl
pop
ja
std
mov
mov
sbb
enter
push
cli
arpl
adc
jns
shlb
xor
add
inc
dec
push
ljmp
mov
jns
mov
push
imul
sti
push
cmp
mov
mov
xchg
inc
xor
jle
xchg
je
addl
test
inc
lds
gs
inc
mov
into
ss
loop
mov
fldt
jnp
mov
loopne
dec
int3
ss
push
ret
cmp
sbb
aas
aas
xor
fstps
shl
jle
in
in
outsb
stos
je
lds
das
xor
std
ficoml
and
pop
ficompl
sbb
and
arpl
aas
pop
mov
inc
sbb
adc
cmpb
jae
gs
xchg
test
push
pop
loop
les
sti
jg
arpl
sub
or
nop
int3
inc
jae
sbb
fidivs
and
ficompl
hlt
fscale
sub
add
mov
fistpl
dec
int
idiv
hlt
pop
bound
fucomip
sub
sahf
leave
pop
iret
sub
negl
int
adc
jge
ret
stc
lcall
je
cltd
fmull
sahf
push
imul
jl
or
int3
scas
pop
scas
xchg
rcrb
pop
push
outsb
pop
push
clc
mov
xchg
loopne
test
cmpsb
push
adc
mov
add
xor
int
insb
cmpsb
call
cmp
ds
mov
xchg
dec
jb
dec
adc
jns
aaa
adc
pop
adc
outsb
lahf
mov
add
out
jg
xor
daa
pop
pop
sbb
repz
adc
cld
pushf
loopne
inc
mov
push
xchg
fsts
jecxz
dec
data16
dec
movsb
divl
sub
popa
inc
add
dec
cmp
decb
push
sarl
mov
mov
aas
push
mov
icebp
jne
nop
scas
clc
outsl
in
inc
ret
dec
loopne
sbb
push
mov
xchg
es
mov
mov
mov
mov
push
in
inc
loope
mov
cwtl
mov
mov
insb
inc
sub
movsb
sbb
pop
test
or
inc
sti
cmp
pop
fwait
sub
adc
cmpl
nop
lret
rclb
cmc
sbb
sbb
lods
adc
cwtl
loop
hlt
mov
dec
xchg
mov
mov
dec
sbb
xor
ficompl
jne
sub
cltd
sbb
mov
cs
mov
mov
xchg
js
and
imul
pop
push
xlat
inc
push
mov
nop
jae
std
or
lds
push
sti
add
dec
sbb
cmp
test
dec
pop
xchg
cs
or
push
dec
addr16
cs
cltd
ret
add
xchg
add
xchg
xchg
pop
mov
push
push
bswap
mov
and
mov
xor
clc
cmp
inc
jnp
test
shll
jle
stos
xchg
in
idivl
jne
xchg
arpl
fsubs
add
out
icebp
mov
inc
fldln2
in
and
xorl
dec
cwtl
fisttps
jp
into
in
and
sti
cmpsb
pop
or
or
or
fdivrs
div
sti
push
scas
repz
pop
cmp
leave
pusha
inc
cmp
mov
pop
pop
adcl
jl
bound
cmc
jecxz
shll
inc
cmp
or
repnz
jg
jle
inc
repz
call
lea
data16
xor
rcrl
imul
or
ret
out
dec
mov
mov
mov
pop
cmp
push
fsubl
insb
filds
mov
pop
xchg
fst
push
push
xlat
pushl
push
mov
mov
scas
fisttpl
xorl
lret
jp
mov
cmp
iret
adc
and
mov
xchg
ficompl
into
sahf
jbe
rcl
clc
dec
pusha
adc
sub
add
push
out
ret
testl
push
inc
sahf
outsl
push
dec
loope
aam
in
decl
xchg
jl
adcb
sbb
xlat
sub
xor
lcall
pop
adc
adc
dec
ljmp
lret
mov
mov
xchg
push
sub
pop
sub
sub
sub
je
xor
sbb
imul
in
repz
sub
mov
rolb
pop
and
daa
push
roll
mov
addr16
data16
inc
arpl
loopne
xor
popa
push
xchg
push
push
lock
xor
inc
inc
mov
sub
idivl
jmp
movsb
or
and
or
enter
jle
push
adc
mov
icebp
out
out
cltd
sub
cmp
jge
addr16
adc
les
cmp
in
loopne
ret
jmp
jg
lds
pop
fldl
out
std
int
mov
sbb
jae
lcall
fisubrl
les
push
mov
mov
subb
sub
repnz
repz
lcall
div
inc
or
xlat
adc
lcall
shr
xor
ljmp
inc
out
push
jnp
cmp
fidivl
xchg
mov
out
repnz
jg
cmp
xor
es
fnstenv
inc
mov
in
xchg
mov
lcall
lods
pushf
addb
fdivp
lds
aam
xchg
dec
sbb
pushf
popf
fmull
stos
hlt
mov
adc
hlt
frstor
imul
lods
popa
cmp
ds
jae
xor
cltd
cmp
cli
ja
mov
sub
jnp
out
mov
repnz
xor
inc
sbb
mov
mov
mov
sbb
mov
pusha
mov
fcmovnu
add
push
pop
adc
and
aaa
xchg
sar
jecxz
lcall
jnp
ljmp
add
jae
push
cmpsl
jae
divl
push
mov
xor
lcall
sbb
sub
int
xchg
fsts
mov
dec
es
lret
push
xor
mov
pop
jp
and
fstpl
icebp
inc
mov
out
push
cmc
jb
incl
rcl
inc
push
xor
mov
es
push
cmp
ret
rcll
jecxz
xor
jle
fistpl
cmp
stos
mov
imull
rcll
inc
or
insb
pop
fmul
fwait
mov
aam
and
or
and
prefetch
mov
pop
add
leave
mov
mov
sub
bound
push
dec
jmp
loopne
xor
int3
push
mov
cwtl
js
inc
fisubl
and
pop
push
jle
dec
xor
sub
pop
loope
xchg
cwtl
imul
mov
push
cmpsb
cmpsb
mov
dec
inc
arpl
icebp
mov
fnstenv
les
xlat
fwait
scas
xor
rol
and
inc
test
mov
adc
stos
paddd
dec
fdivrl
mov
and
out
aam
aam
lods
test
into
jae
push
sub
cltd
inc
insb
pop
repnz
ficompl
lods
test
aad
xchg
mov
and
mov
stos
push
mov
jg
ja
clc
push
pusha
inc
js
mov
mov
mov
inc
stc
pop
sub
cmpsl
lea
in
mov
pushf
nop
ja
push
dec
cmpsb
cmp
loop
fsts
movsb
lret
dec
test
sbbb
outsl
and
inc
insl
fstpl
push
cmpsb
int
jl
mov
dec
repz
cld
adc
push
xchg
imul
stos
aas
leave
cli
stc
jg
into
into
outsb
and
cs
lret
xchg
pusha
aaa
pop
or
scas
leave
fsubrs
iret
fcoml
icebp
and
mov
jbe
in
or
in
cmp
outsb
mov
mov
and
repz
adc
or
jb
sahf
sbbl
adc
aad
cmp
arpl
std
pop
pop
or
sbb
std
jb
xor
lret
pop
sahf
jae
aas
fisubl
lahf
nop
movsb
push
xchg
sub
push
in
lea
aaa
shrl
jb
pusha
movsl
mov
inc
xor
or
mov
je
icebp
mov
mov
loope
sbb
mov
jp
arpl
dec
je
or
icebp
cmp
movswl
sub
mov
mov
sub
pop
fnsave
xor
inc
adc
mov
add
fistpl
sbb
adc
ret
push
lods
outsb
jecxz
popf
adc
cmp
stc
stos
and
sub
pop
js
popf
or
mov
mov
push
movsl
adc
sub
ja
pop
movsl
mov
jae
mov
movsl
inc
jmp
sbb
pop
lods
data16
or
mov
pop
and
sub
lret
cli
setge
mov
insl
in
imul
cltd
add
pop
cmp
scas
push
adc
push
popa
test
clc
sbb
sbb
mov
sti
outsb
xchg
loopne
xor
pop
addr16
fmull
mov
aad
xchg
push
inc
aad
add
es
les
leave
or
shrl
add
dec
jge
fsts
mov
int3
cltd
loope
ds
aaa
js
cmp
inc
mov
bnd
push
mov
jecxz
aam
cmc
xor
pop
bound
pushf
int3
cmpsb
jno
fcomps
sbb
inc
cmc
jne
push
int
jne
jl
cmp
lret
sbb
cmp
or
pop
movsl
sbb
jne
shrb
and
das
mov
pop
popf
push
pop
pushf
lahf
adc
rcrb
xchg
push
adc
es
loope
in
cmp
mov
fldcw
pushf
loopne
les
push
mov
out
xchg
push
stc
cmp
xchg
mov
lahf
mov
flds
and
pop
jne
push
cld
dec
fdivs
test
in
cmp
cmp
lahf
mov
mov
adc
cmp
mov
jp
add
pop
mov
push
cmp
cmovns
subb
lock
inc
roll
add
sarl
and
sub
loope
inc
aaa
add
lahf
call
mov
sub
rcl
shll
sub
lcall
xchg
push
sbb
cmp
loop
dec
rcll
rorl
rolb
mov
into
cmp
arpl
mov
fwait
adc
add
inc
cmc
xchg
outsb
add
xchg
mov
jp
or
test
test
pop
fidivl
arpl
pushf
inc
jo
push
dec
xor
pop
pop
aam
mov
xchg
out
pop
pusha
pusha
mov
lea
push
movsl
aaa
das
js
jle
dec
fs
or
sahf
cmpsl
sub
adc
push
jecxz
dec
mov
cmpsb
dec
inc
clc
mov
jo
push
cwtl
or
sub
jle
cmp
sub
and
cwtl
and
repz
jne
roll
add
mov
test
ret
add
cmpsb
notl
pop
movsl
fcompl
add
lcall
aam
cmp
sbb
arpl
push
fdivrs
clc
fisttps
mov
addr16
mov
sub
popa
push
cmpsl
ret
xchg
shr
sub
mov
loopne
in
shll
jo
std
xchg
loop
and
push
cmp
xchg
sub
push
insb
add
and
inc
xor
xchg
sbb
push
cmc
jb
fwait
mov
cli
iret
mov
cs
je
subl
pop
jle
fnstenv
cmc
pop
ret
lods
add
les
mov
shl
add
addl
xchg
ret
mov
inc
xlat
cmp
fdivs
enter
lret
jno
push
icebp
pand
out
inc
push
cli
mov
fcmovnb
add
push
jp
jae
and
push
daa
jnp
sub
mov
xchg
rcrl
sbb
fwait
in
mov
adc
lret
pop
inc
sub
sbb
and
and
outsl
test
leave
sub
in
enter
rcr
aam
hlt
inc
mov
stos
sbb
cmc
mov
pop
cmp
cmp
fldcw
in
les
and
jb
adc
das
jno
xchg
cmp
int3
adcb
or
cs
mov
sub
in
imul
insb
sub
cmp
inc
dec
shl
pop
sub
fcompl
inc
mov
mov
ds
or
stos
out
mov
sub
into
fwait
popl
xor
sar
sbb
cmp
sti
popa
dec
mov
pop
jne
adc
xorl
adc
pop
and
shl
xchg
pop
dec
jle
inc
mov
sbb
out
dec
imul
sub
inc
sbb
jns
pop
mov
push
aam
fimull
inc
and
repnz
out
lock
insl
lea
in
inc
fdivs
adc
xchg
mov
push
xchg
jnp
add
dec
jmp
fcomp
dec
sbb
scas
inc
jmp
mov
fwait
sar
inc
mov
js
sub
cmp
inc
xchg
sbb
inc
xorl
stos
out
insb
aam
addb
pop
or
ret
cmp
movsl
xlat
out
test
imul
ja
outsb
xchg
mov
mov
lret
andb
call
divl
mov
dec
mov
inc
call
mov
adc
shll
imul
pop
es
jecxz
xlat
inc
out
jmp
enter
loope
inc
mov
sti
push
scas
mov
fwait
mov
lcall
sbb
test
aas
fcmovb
outsb
jnp
lcall
into
inc
or
mov
addl
flds
mov
add
popa
and
and
setno
lret
lds
loop
cmp
jbe
dec
xor
push
and
lods
cmp
jp
adc
sub
lahf
imul
xchg
mov
xchg
or
mov
mov
push
shlb
mov
push
cmpsb
aas
jl
data16
ja
or
in
push
scas
pusha
bound
or
outsb
gs
adc
insl
in
cmp
xor
pop
mov
ss
cmp
adc
push
sbb
sti
push
movsl
rorl
mov
stos
outsb
ljmp
jb
mov
mov
loop
jecxz
lods
mov
popf
inc
mov
test
ljmp
lock
sti
push
cmp
xchg
and
outsb
push
arpl
icebp
lock
cmpsb
pop
in
insb
mov
cmp
mov
notl
and
bound
shlb
dec
xchg
adc
mov
icebp
adc
and
out
iret
xlat
pop
dec
jbe
pop
ja
mov
xlat
sahf
aaa
jae
iret
jne
clc
out
xor
sub
sub
mov
fcmovne
mov
clc
or
leave
jne
add
test
mov
out
or
jle
call
jecxz
pop
mov
lcall
jne
xor
inc
mov
sbb
sahf
and
repnz
into
cmp
jnp
pop
jnp
pop
mov
xor
sub
rolb
gs
bound
pushf
cmp
push
jge
push
rcrl
sbb
fcoms
xchg
es
or
into
jecxz
movsl
sub
es
sti
cmp
insb
mov
bound
ficoms
sahf
test
lahf
push
flds
push
mov
int3
scas
push
or
ret
notl
jmp
mov
lahf
hlt
repnz
test
scas
and
lcall
inc
adc
cmp
cs
inc
sahf
imul
jno
in
stc
popa
ljmp
sub
xchg
mov
jg
out
lret
jecxz
xor
mov
call
sti
stos
lock
jbe
rcrb
lret
and
incb
int3
inc
mov
jmp
xor
cltd
stc
fdivl
jmp
inc
cmp
ja
sbb
ljmp
mov
imul
fldenv
sar
sub
mov
cmp
imul
mov
jo
stc
rolb
add
pop
dec
jmp
mov
into
cmpps
je
stc
ss
cmp
fwait
mov
rcrb
pop
out
mov
dec
xor
enter
mov
jo
xor
mov
xchg
ljmp
aas
and
mov
and
in
sbb
jo
imul
clts
sbb
sub
or
je
dec
sub
lret
fnsave
xchg
aaa
stos
sbb
push
frstor
notb
add
xchg
cltd
stos
mov
loope
xor
dec
js
or
mul
in
subb
dec
jno
cwtl
lahf
pop
inc
stos
leave
cmp
fs
or
dec
jmp
fcomi
inc
cmp
jb
cld
xchg
and
rcrb
loop
or
inc
adc
scas
xor
scas
daa
jecxz
test
ret
mov
lods
mov
das
adcb
and
jecxz
and
mov
cwtl
lret
imul
adc
or
mov
dec
and
jnp
clc
push
lret
mov
std
jno
loopne
sbb
push
stos
lods
sub
sub
lods
int
mov
and
movsb
mov
and
int3
pushf
mov
scas
adc
out
jg
into
and
rcrb
repz
pushf
jnp
pop
push
inc
popf
outsb
push
and
inc
jmp
into
push
pop
in
call
fnstenv
std
mov
shrl
xor
inc
bsf
loop
xor
sub
pop
mov
rclb
cltd
cmpsl
fimuls
inc
xchg
push
jl
jp
push
dec
mov
ds
mov
mov
jnp
test
ffree
dec
cmc
cld
mov
xchg
lret
pop
leave
mov
xchg
iret
xchg
shl
mov
subb
into
out
xchg
cmpsl
mov
icebp
mov
lods
mov
notb
xor
jns
in
inc
jge
std
stos
mov
add
xor
loop
add
xor
ljmp
mov
xor
ds
mov
ss
cmp
imul
cmp
xor
push
pop
or
dec
jle
inc
cmpsb
jle
or
daa
fdivr
push
stos
jp
scas
jo
inc
add
mov
in
sbb
movsb
mov
mov
mov
decl
or
stos
outsl
fiaddl
ret
pop
mov
mov
sti
jp
gs
pushf
mov
adc
fildl
call
sbb
inc
ret
or
pop
out
int
ss
sub
pop
xchg
scas
ret
test
mov
mov
test
aaa
les
dec
inc
push
push
and
cmp
in
sub
cmp
enter
aad
jle
or
roll
fwait
jmp
cli
test
sub
push
jle
hlt
mov
push
sbb
push
out
stos
jb
mov
cmp
iret
icebp
and
lods
in
je
fsubl
popa
stos
jnp
pop
add
leave
mov
inc
cltd
mov
ret
xor
loope
stos
jp
jmp
xor
fistl
pop
cmp
mov
aad
inc
int
adc
and
repz
add
lea
sub
xchg
mov
lds
jns
in
mov
ss
scas
cld
int
push
pop
sbb
jp
insl
fcomps
sbb
out
cmp
jns
js
out
out
stc
xchg
test
push
je
mov
mov
adc
es
mov
jmp
dec
rorb
lahf
imul
loope
mov
push
push
dec
mov
inc
cld
xlat
or
and
dec
or
loop
cs
mov
cmp
mov
add
out
stc
movsb
sbb
or
inc
in
pop
imul
scas
fmuls
test
iret
pop
loop
cli
jnp
mov
cmp
pop
xchg
pop
lea
cltd
sarl
in
in
mov
xor
dec
rclb
or
enter
dec
adc
nop
fwait
jne
xchg
int
mov
inc
mov
fadds
or
ficompl
sub
rcrb
add
stc
xorb
insl
xor
cmp
loope
movsl
xor
jle
xchg
add
test
add
dec
push
add
inc
adc
test
out
pop
jnp
push
inc
fisttps
mov
lds
lds
rclb
sbb
in
xchg
cld
inc
in
cmpsl
int3
fsubrl
jl
sub
adc
nop
jo
or
out
xchg
xor
aas
pop
fsubl
cmp
in
ret
mov
mov
js
outsl
or
nop
pop
stc
imul
add
in
adc
dec
cmpsb
lea
sub
sub
xor
or
sbb
fsubr
mov
rcrl
es
lods
sub
fwait
dec
jnp
fcom
cmp
es
mull
loope
hlt
add
sbb
test
or
ljmp
imul
lret
sub
mov
or
xchg
stc
xor
cmp
js
insl
insl
inc
test
push
xchg
cmp
mov
lods
sub
inc
decl
aas
cmp
adc
popf
jno
or
xor
mov
sbb
adc
mov
cmpsl
repnz
sarl
sub
test
addb
addl
aaa
int
push
push
les
inc
mov
clc
sti
out
inc
lret
sub
push
test
xchg
dec
jnp
push
out
xor
stos
xor
jmp
mov
inc
lcall
out
stc
add
pop
lds
inc
enter
push
xlat
sub
mov
ss
fildl
test
sbb
xor
dec
push
inc
out
cmp
ret
pop
les
dec
jecxz
mov
xchg
outsl
mov
pop
fisttps
xor
out
daa
mov
jle
xor
pop
testl
add
mov
popf
gs
jg
ljmp
in
jb
xchg
and
cmp
je
into
ljmp
push
jle
shrl
pop
mov
rcll
shrl
lret
xchg
or
or
xchg
std
mov
adcl
and
or
push
cmp
cmp
sbb
sub
subb
les
cltd
fistl
sub
andb
or
sbb
jecxz
dec
jno
shll
inc
hlt
xor
xchg
xlat
xor
mov
insl
xor
sub
stos
movsb
lods
fldl
pop
push
clc
nop
sahf
movsl
lea
xor
mov
sti
rolb
adc
je
mov
repz
negb
push
fstpt
loop
cmp
mov
gs
notb
out
sub
sarl
push
in
movsl
pop
push
lcall
jle
push
cmpsl
popl
das
idivb
arpl
or
xchg
imul
sub
stos
les
aad
push
pop
xchg
dec
mov
das
cmp
cld
inc
ret
out
jnp
pop
out
in
xchg
and
lods
inc
rol
mov
adc
in
bound
mov
mov
cli
inc
adc
loope
sub
adc
fisubrl
xor
mov
mov
pop
fsts
cmp
sbb
rcr
sbb
daa
iret
aaa
aad
mov
idivb
adc
aaa
dec
dec
test
lock
pushf
inc
shl
subb
xchg
push
ljmp
adc
pop
sbb
or
fdivrs
pop
jl
fwait
in
mov
rolb
mov
stos
lea
bound
negb
jo
adc
push
xchg
jae
scas
pop
jle
cld
jle
cltd
xchg
fstpl
fmuls
mov
vpshuflw
adc
and
jb
mov
cmp
cmp
mov
gs
rcl
cmp
pusha
xor
std
test
cmp
loop
loope
fcom
jecxz
test
and
inc
pop
mov
and
ficompl
stc
jns
lods
xor
jecxz,pt
sahf
sbb
cmpsl
stos
out
fcoml
cmp
add
out
add
mov
repnz
shrb
sahf
iret
add
xor
jb
in
pop
insl
sbb
add
or
call
pop
mov
bound
mov
pop
push
stos
mov
adc
sahf
lret
mov
mov
mov
lret
mov
lds
mov
cs
xchg
loope
lcall
js
enter
jo
push
xlat
pop
div
hlt
shlb
or
mov
out
dec
inc
cwtl
jne
cmp
mov
stc
ret
mov
out
es
icebp
cmp
rorl
std
pop
popa
test
xchg
push
jle
nop
lcall
xchg
into
fsubl
push
cvtps2pd
fwait
jg
jl
aad
jmp
cltd
ljmp
xchg
addr16
scas
mov
arpl
dec
adc
dec
popa
into
movsb
sarl
sarl
sbb
push
lds
es
sar
sbb
lds
dec
ds
dec
jp
test
xchg
dec
mov
sub
ret
inc
lcall
out
mov
mov
imul
jle
inc
dec
mov
xchg
ret
jg
in
sbb
mov
insb
rol
aaa
es
negl
jae
dec
lods
cmc
xchg
jge
icebp
add
and
mov
addr16
cwtl
jg
xchg
jl
add
testb
adc
es
outsl
adc
push
ss
mov
push
fs
dec
inc
cld
negl
ret
sbb
lods
outsl
push
ficoml
int3
mov
cmp
bound
scas
xor
xchg
or
imul
icebp
dec
inc
int
jg
push
xchg
icebp
lcall
bsf
sbb
push
hlt
cmp
jo
fwait
outsl
sub
testb
nop
loopne
mov
nop
imul
xchg
sbb
movsl
stc
jle
call
mov
jge
arpl
ja
pop
jmp
push
popa
sti
or
push
cmp
lock
push
inc
and
and
fisubs
mov
sbb
pop
ja
or
pop
insl
fisubrl
outsl
cmpl
test
jns
dec
jno
xchg
or
xchg
loope
out
enter
inc
inc
add
popf
js
pusha
xchg
cmp
faddl
mov
pusha
mulb
cmp
push
sti
mov
mov
lds
cwtl
or
mov
lret
push
xor
xor
lret
xchg
shll
jge
iret
mov
and
loop
out
jmp
aam
mov
sbb
insl
in
inc
pop
adc
fcmovbe
cmp
xchg
leave
sbb
ds
pop
imul
jb
xor
test
lock
cmc
xor
pop
sub
out
scas
xchg
sub
mov
fisttpl
mov
aad
jmp
imul
pop
out
je
mov
lcall
adc
test
ret
fistl
sbb
test
lods
xor
pushf
mov
test
mov
rorl
or
and
fidivl
movsb
mov
inc
jmp
cld
xchg
pop
jnp
fsts
out
call
xor
nop
sbb
or
add
jo
mov
lds
notb
xchg
pop
push
ret
out
jg
fs
call
test
mov
ret
dec
jnp
jge
lods
adc
ss
lahf
pop
adc
iret
cmp
dec
ret
push
or
iret
out
lods
adc
mov
dec
xor
loopne
enter
fs
mov
jb
xor
shll
lcall
mov
dec
scas
sbb
pop
adc
stc
cmp
xchg
add
and
jno
xchg
or
jp
mov
in
pushf
ja
or
aaa
sbb
and
stos
adc
iret
addb
dec
or
jl
addr16
iret
fcmovu
mov
stc
cmovl
cmpsl
in
adc
pop
dec
rcll
jmp
es
add
push
sti
sti
jge
movsb
jne
jle
fs
or
idivl
or
push
and
out
sti
jno
loope
in
sbb
es
cmp
and
mov
add
pop
test
mov
push
out
push
push
xchg
pop
xchg
inc
or
cmp
je
jp
pop
sub
inc
jmp
sti
fcompl
inc
bound
adc
push
mov
movsl
testb
adc
aaa
int
cmp
mov
mov
jae
mov
enter
sar
jbe
sub
test
mov
jae
sbb
test
mov
pop
dec
pop
cld
hlt
xchg
and
rclb
dec
mov
jno
dec
sub
dec
shlb
inc
jns
int
jg
or
add
repnz
xchg
push
adc
or
lahf
sarl
insl
mov
ss
dec
add
push
icebp
cmp
loop
add
lret
push
pop
stos
pusha
jae
ds
cmp
jg
cmpl
repnz
and
int
gs
inc
fsub
xchg
jno
jnp
leave
sub
mov
mov
sub
inc
mov
loope
lods
aam
push
insb
rolb
sarb
psubq
int3
pop
dec
jnp
lret
jmp
repnz
cmpsl
int3
stos
stos
xchg
jne
and
or
ds
dec
mov
int
cmp
mov
out
push
ljmp
dec
pushf
int
push
sbb
fisttpll
xorl
pushf
adc
ds
dec
xchg
cmc
incl
stc
sbb
mov
outsb
incb
push
push
sbb
movsl
lret
cwtl
or
inc
jle
xor
popf
and
fistl
in
daa
cmpb
rcll
pushf
loop
lret
lret
fidivs
cmp
mov
pop
add
pusha
test
test
out
mov
push
in
sarb
sbb
pushf
and
push
sub
bound
mov
mov
cwtl
hlt
jo
pop
mov
stos
or
fdivl
jl
pushf
sbb
mov
das
outsl
cmpsb
in
push
lret
xor
mov
adc
cltd
inc
push
aaa
lahf
popf
push
cmp
push
fldt
dec
cmp
sti
sub
fidivl
movsb
dec
inc
cld
es
inc
and
insl
pop
jno
push
and
lret
inc
adc
cltd
sbb
or
dec
repnz
xor
jle
mov
and
or
shrl
sub
sub
cmc
jb
insl
push
test
jbe,pt
add
xchg
cltd
cltd
movsb
cli
lds
jnp
les
sbb
xor
push
es
out
or
shll
dec
cmpsl
mov
and
subl
cmp
in
stos
inc
fidivrs
icebp
scas
mov
cs
psrlw
pop
aad
push
lcall
or
mov
cmp
stos
insb
jp
sbb
push
or
movsb
jp
or
loop
pop
xlat
cmp
out
repz
fstpt
xchg
pushf
mov
popa
cmp
fimull
icebp
scas
inc
xlat
push
add
sbb
push
mov
sbb
mov
inc
cmp
add
mov
fisubrl
dec
xor
sar
clc
cmp
test
sti
mov
xchg
or
test
adc
jmp
mov
lods
cmp
dec
mov
out
xchg
xchg
test
mov
fisubrs
pushf
cmp
loop
pop
mov
and
and
sub
lea
bound
loop
and
push
xor
mov
fcmovnb
lock
pop
test
cmp
insb
cmp
mov
adc
cmp
cwtl
sbb
lahf
jmp
fstps
push
sbbl
test
mov
icebp
and
out
cmpsb
cmp
cmp
test
or
scas
test
out
xchg
repnz
jb
xor
insl
cmpsl
lret
out
pop
adc
test
mov
popf
xchg
mov
inc
pop
cmp
pop
sar
mov
mov
ja
outsl
out
and
fistps
and
jle
les
sub
sub
mov
push
push
mov
iret
lods
add
push
sbb
xchg
dec
add
xchg
jmp
cmp
pop
and
pop
movsb
addr16
idivb
lods
fsubrl
xor
out
pop
xchg
dec
push
aam
loop
push
mov
jno
dec
or
cmp
mov
xor
out
add
js
sarb
cmp
ficoms
int
jl
mov
and
std
xor
add
sbb
mov
loopne
cmp
idivb
dec
es
inc
dec
stos
mov
mov
loop
sahf
cli
mov
icebp
or
imul
cld
ja
mov
pop
xchg
adc
popa
pusha
adc
aad
xchg
mov
dec
jecxz
inc
xchg
xchg
rolb
push
imul
dec
sahf
jmp
cld
bts
fcmovnb
fidivl
sbb
inc
fisubs
inc
pusha
in
jnp
xchg
mov
add
sub
pusha
xchg
jnp
cmp
test
cwtl
and
jp
jmp
sbb
jo
sbb
lods
pop
lahf
lahf
dec
fwait
jb
sub
jecxz
test
push
jbe
insl
lock
xor
jp
in
push
mov
jl
aaa
jbe
std
test
inc
mov
nop
or
dec
cld
push
sahf
adc
push
adc
aaa
cmp
mov
sub
mov
sub
sbb
and
jecxz
dec
dec
add
jns
add
mov
and
jnp
jecxz
lret
insl
xor
mov
jae
outsb
dec
repnz
loope
hlt
lret
lds
leave
push
push
dec
or
sbb
pop
lds
scas
cltd
sub
sub
out
decl
call
test
mov
outsl
dec
xchg
mov
movsl
xor
cld
les
mov
loope
int3
subb
in
and
jp
loop
ret
test
leave
cld
aad
jecxz
dec
or
das
out
lods
je
mov
outsb
out
and
in
push
xchg
push
jne
pop
lds
ljmp
xchg
mov
movsb
and
jge
aad
scas
mov
je
cmp
outsb
jg
out
rclb
lods
push
aaa
mov
jmp
jle
fdivrl
cwtl
fisubl
or
add
test
or
sbb
out
push
xchg
das
mov
cli
movsl
xchg
lea
cltd
mov
lcall
test
stos
or
mov
orb
idivb
loopne
cmpsl
inc
lahf
jle
sbb
add
sti
lcall
fsts
dec
sub
mov
dec
repz
xor
jle
cmpl
xor
and
cs
das
cmp
movsl
adc
int
stc
stos
addr16
test
jecxz
sub
xlat
fildll
pop
lret
outsb
ret
jo
xchg
lcall
int3
int
aam
ss
arpl
sub
or
in
stos
jl
pop
daa
and
dec
add
pop
ja
sbb
clc
add
sub
xor
mov
les
and
sbb
cwtl
fnstcw
dec
pop
lahf
cmp
adc
add
mov
push
push
mulb
cmpsb
sub
imul
fwait
inc
sub
push
and
lcall
rcrb
and
shlb
inc
push
push
pop
lret
sbb
das
lds
movsb
mov
mov
sub
jecxz
jmp
cmp
fnstsw
sub
fdivl
adc
jge
ret
lcall
out
and
xchg
inc
shll
add
mov
adc
mov
sbb
js
out
lods
into
dec
lcall
push
xor
out
mov
fdivrl
test
test
xor
inc
stos
inc
pop
loopne
sub
leave
add
xor
enter
or
nop
inc
stc
icebp
jmp
cmc
push
clflush
jp
mov
push
adc
ret
addr16
int
and
and
roll
cmc
xorb
mov
enter
inc
push
ja
or
push
ljmp
loope
insl
cmp
cld
pop
fistpll
imul
and
add
dec
ret
push
jbe
clc
aam
xchg
pop
loop
xor
add
and
add
jl
jl
pop
and
roll
cmp
sahf
mov
leave
push
das
sub
es
js
xchg
mov
mov
cmp
push
adc
bound
sub
js
or
stos
mov
ljmp
xor
push
inc
imul
inc
sub
fildll
sbb
or
in
push
out
mov
dec
roll
adc
aaa
mov
mov
pop
mov
fisubl
dec
inc
clc
outsb
mov
push
push
mov
sbb
jbe
and
mov
mov
mov
inc
mov
push
call
popf
cmp
sub
in
int3
gs
pop
and
insb
lods
xor
arpl
dec
mov
cwtl
ret
jno
dec
in
xchg
movsb
or
ret
cmp
xor
xor
push
sub
mov
add
imul
les
adc
add
jbe
add
adc
lea
popa
sbb
push
sub
fld
jmp
in
dec
mov
pusha
sub
loopne
scas
gs
cmp
inc
imul
cmp
leave
pop
mov
mov
xchg
mov
mov
imul
test
clc
cmp
cmp
or
xchg
xchg
rcrb
pop
stc
loop
jmp
stos
loope
jmp
cmp
and
push
popa
out
movsb
movsl
test
or
ljmp
mov
dec
and
dec
mov
dec
enter
repz
push
clc
inc
into
cwtl
pop
cwtl
lods
sbb
push
mov
adc
xchg
std
addr16
nop
testb
mov
inc
pop
and
push
push
daa
xlat
dec
adc
cmp
je
ss
je
push
sbb
inc
popa
scas
jo
xor
cs
rolb
xor
call
ja
stos
lcall
push
or
mov
mov
mov
cmp
push
sarl
or
mov
ljmp
xor
scas
xor
dec
daa
adc
repnz
cs
subl
cmp
or
rolb
fsts
push
push
das
or
jl
outsl
push
cmpsb
dec
xchg
cmp
sbb
je
add
xchg
adc
shl
xchg
int3
push
xchg
leave
stos
dec
daa
jge
movb
dec
addb
je
ja
inc
push
xor
inc
add
mov
mov
inc
sbb
cli
sub
stos
imul
or
sbb
cmp
data16
pop
add
mov
jno
sub
push
subl
mov
push
icebp
sahf
push
pop
or
jl
outsl
add
mov
xchg
lcall
outsb
xchg
and
fnsave
fwait
sbb
out
push
mov
inc
sub
sub
add
jge
dec
or
mov
bound
xchg
jmp
inc
pop
or
jbe
iret
in
sub
fldl
add
xchg
xor
push
sbb
cmc
add
sbb
test
stos
cmpsl
mov
nop
in
and
pushf
jle
add
lret
lea
xorb
sbb
js
pop
and
insl
or
xchg
je
push
add
addr16
cs
out
fs
mov
xor
icebp
lcall
jno
pop
dec
outsl
rorl
push
sub
mov
xchg
mov
cmc
mov
sarl
and
push
ret
lahf
xor
lret
lods
dec
cltd
ja
jg
add
mov
fcom
aad
mov
push
jge
sub
add
repnz
repz
outsb
add
pop
or
inc
popa
jbe
push
add
bound
push
xor
add
mov
xchg
jno
test
gs
mov
mov
daa
xor
je
in
icebp
mov
fidivrl
jl
jnp
mov
int3
lret
xchg
mov
call
mov
xorl
sarb
fsub
sbb
lret
aaa
xchg
xchg
cmpsl
addr16
fwait
mov
lret
or
call
aam
inc
imul
pop
sbb
sub
jg
sahf
jae
cmpb
inc
testb
clc
dec
xchg
add
pop
mov
jne
fcompl
jg
scas
push
add
aam
lods
in
lods
movb
or
into
in
xor
pop
iret
mov
outsl
adc
lods
out
adc
cmp
or
ds
mov
mov
sbb
arpl
xor
dec
pop
sub
jl
testb
add
adc
addl
pop
lods
loopne
dec
ljmp
in
icebp
mov
xor
add
and
test
mov
dec
adc
push
or
adc
pop
or
gs
aad
loop
push
jnp
cmc
pop
daa
cmpl
fdivrs
leave
hlt
cmp
inc
movsl
xchg
getsec
sub
divb
xor
mov
sub
repz
add
dec
in
add
cwtl
sub
ja
test
test
cmpsb
sbb
xchg
test
xlat
cs
xchg
fdivl
rcrb
leave
pop
sub
sub
loopne
push
stos
sub
iret
movsl
std
pop
insl
bound
out
daa
jns
lock
repnz
ret
sar
jmp
push
push
push
lods
mov
gs
shlb
cmp
lahf
popf
repz
xchg
inc
out
shl
mov
adc
imul
cmpsb
sar
mov
add
adc
inc
dec
and
xlat
pop
sbb
mov
loop
lahf
inc
add
push
mov
mov
pop
inc
int
sub
adc
out
push
jo
mov
cld
fistpl
rcrl
cmc
xchg
and
loop
lret
imul
sarl
mov
scas
in
daa
jo
mov
adc
cmc
adc
inc
xchg
enter
inc
test
jle
mov
bnd
mov
andl
jbe
fidivs
sub
mov
jp
ds
and
cmp
mov
mov
sahf
rorl
cmp
popa
or
push
mov
outsb
add
mov
and
cmp
or
inc
or
sbb
xor
sub
outsl
and
pop
adc
fimull
dec
jbe
bnd
dec
pop
cmp
popf
and
mov
push
add
dec
pop
ss
mov
jmp
mov
push
repz
xchg
cmp
add
cmpsl
out
sbb
insb
adcl
bound
cli
outsl
xor
and
cld
add
pushf
mov
push
lods
mov
dec
mov
xchg
lret
pandn
es
test
fisubs
iret
out
mov
xchg
sahf
lret
es
das
data16
stos
mov
or
int3
mov
inc
imul
and
or
ja
push
xchg
mov
xor
test
pop
fisttpll
jne
jns
sub
push
pop
aas
inc
daa
inc
fisubrs
arpl
inc
clc
stos
mov
and
sbb
push
sub
cmp
xchg
jno
push
mov
in
pop
nop
sbb
and
outsb
sub
in
sar
fidivrl
mov
call
stos
and
rcll
rcrl
sub
sub
mov
dec
movsb
pop
rolb
xchg
sahf
jb
fdivs
and
fistpll
aaa
iret
xor
mov
out
enter
pop
xchg
rclb
add
hlt
cmp
xchg
pushf
fnsave
mov
lret
push
insb
pop
sbb
mov
or
sti
jne
outsl
cmp
mov
lock
jp
jge
and
hlt
jle
jo
pop
gs
ss
fdivrp
enter
shr
mov
data16
cwtl
inc
seto
in
in
xlat
movsb
rorl
out
in
loop
mov
jp
fwait
add
and
pop
pushf
pop
push
xchg
push
xchg
add
xor
decl
jnp
ret
imul
test
ret
xor
mov
mov
push
mov
and
or
popa
loopne
inc
mov
popf
jp
loope
xlat
inc
icebp
loope
movb
pop
mov
mov
test
cwtl
je
ljmp
or
addr16
xlat
fwait
js
xchg
ficoml
sbb
test
push
stc
in
dec
stc
add
arpl
xor
icebp
cmp
lds
push
sbb
or
test
xor
cli
dec
add
cmpl
jo
or
add
movb
xor
inc
pop
hlt
or
jle
adc
xor
cwtl
pop
hlt
sbb
and
hlt
push
data16
sbb
mov
jo
add
daa
repz
insb
sbb
std
dec
shll
bound
jge
push
cltd
test
sub
sti
int3
add
mov
mov
lods
adc
xor
xor
adc
or
xor
push
mov
mov
mov
xchg
cli
bnd
ss
mov
jge
pop
cmp
lahf
sti
push
bound
jle
fsubrp
xchg
stos
scas
mov
jb
and
in
fs
outsl
jns
add
mov
bound
imul
insl
sbb
push
repnz
push
inc
jns
or
mov
fldpi
sbb
dec
hlt
push
popa
cs
lods
mov
stos
int
shll
andb
ret
and
push
mov
ja
fdivrs
pop
mov
inc
loope
in
orl
add
jns
mov
sbb
out
mov
or
rclb
mov
pusha
push
andl
xchg
and
iret
cld
dec
xor
push
push
insl
adc
loopnew
dec
aam
mov
push
jo
cli
xchg
mov
test
inc
or
aad
pop
test
dec
push
xchg
dec
out
mov
scas
xchg
stos
ljmp
iret
ret
or
inc
fimuls
incl
or
insl
mov
loop
out
arpl
dec
mov
xchg
shll
mov
fidivs
jb
mov
rcr
int3
jp
cld
or
fnclex
imul
fs
repz
jns
pop
cmp
fcmovnb
xchg
or
mov
mov
out
aad
sub
mov
mov
imul
lea
out
jl
cld
les
adc
enter
lcall
loop
jns
inc
mov
gs
push
mov
jl
ret
in
pop
stc
cli
mov
outsl
popa
and
pop
add
das
adc
pop
aaa
or
inc
push
cmpsb
push
pusha
add
nop
xchg
xor
lcall
stc
sbb
xchg
xchg
add
aaa
inc
mov
or
mov
imul
in
sbb
lods
jne
push
lcall
stos
dec
cmp
sub
jmp
leave
push
aaa
jb
daa
inc
pop
outsl
pushl
adc
pop
and
fs
mov
sbb
pop
xlat
mov
mov
pusha
inc
iret
sarb
fnstsw
insb
cmp
das
xchg
jp
push
push
dec
loop
dec
mov
les
mov
push
sarl
sahf
push
cmp
jge
pop
js
movsl
mov
cmp
mov
jne
insl
and
mov
fsts
stos
xchg
xor
and
popf
xchg
add
or
out
mov
jb
mov
imul
adc
imul
imul
lret
test
pop
outsb
in
outsb
arpl
mov
mov
loope
add
mov
fiaddl
sti
fcoml
inc
mov
jo
inc
cwtl
dec
push
and
push
mov
add
push
sub
jnp
ret
mov
add
mov
sub
push
fs
jo
int
adc
jmp
mov
dec
rcl
mov
test
mov
mov
bound
scas
shrb
dec
add
push
js
and
mov
test
and
jecxz
add
push
addr16
or
xor
jnp
lcall
mov
sub
dec
repnz
jns
push
mov
test
mov
rcrb
adc
idiv
push
cltd
lahf
shll
xorb
xlat
das
pop
and
and
lods
xchg
fisubl
push
cmpsl
and
push
pushf
mov
cmp
loopne
push
rcl
mov
adc
imul
push
dec
xchg
filds
in
lods
mov
mov
out
push
push
sbb
shr
xchg
inc
jno,pt
sub
mov
mov
push
add
sub
loop
sub
dec
xchg
sub
push
sbbb
pop
lcall
xchg
inc
xor
hlt
cltd
jns
adcb
push
leave
lahf
aad
dec
fstps
add
sub
hlt
lods
inc
mov
mov
pop
xchg
pop
or
rolb
or
dec
xchg
pop
sbb
adc
cs
andl
lret
or
mov
ljmp
mov
data16
orl
cmpsb
rorb
aaa
mov
fs
jno
and
rclb
lock
sbb
cmp
lret
inc
scas
jp
push
in
cmc
adc
xchg
enter
insl
mov
test
insl
outsl
in
xchg
ds
jmp
les
jno
aam
jle
jnp
movsl
lret
ss
maskmovq
sub
push
aas
cmp
jb
shlb
inc
or
leave
icebp
xchg
jns
mov
jns
xor
jmp
or
fwait
sub
dec
andb
fmulp
in
fcompl
dec
jmp
lcall
jns
clc
mov
hlt
mov
shrb
and
push
movsl
sti
add
add
movsl
xchg
inc
mov
jae
xchg
xchg
leave
into
pusha
ss
int
mov
enter
popl
movsb
jnp
xor
fbld
fdivrl
sbb
xchg
mov
rclb
sbb
jne
jnp
fstps
cmp
dec
mov
fbld
inc
lahf
int
or
push
imul
mov
dec
daa
pop
mov
xor
mov
out
push
js
mov
std
out
mov
cld
cmp
mov
out
mov
mov
sub
push
cmp
inc
dec
or
cmpsb
shr
push
inc
jmp
and
es
xchg
push
and
add
inc
stos
lock
xchg
loop
inc
movsb
and
lods
and
inc
add
loope
jecxz
or
ljmp
out
mov
sub
nop
cwtl
mov
push
iret
fs
mov
cltd
mov
std
je
lods
jmp
xchg
pop
fisubrs
xchg
out
jbe
inc
and
in
loop
xor
pusha
mov
mov
mov
loope
cli
push
insl
rcrb
push
shlb
jnp
imul
mov
pop
or
cmp
or
inc
mov
inc
push
call
cltd
gs
mov
lods
sahf
inc
push
out
jns
clc
mov
xchg
sbb
shrb
or
data16
sarb
pop
push
xor
inc
adc
and
imull
aaa
pop
dec
sarb
nop
ficompl
movsb
xlat
xor
dec
mov
ljmp
outsb
inc
mov
xchg
and
and
push
push
xchg
repnz
or
mov
ja
fcmovnb
mov
mov
add
stos
int3
sti
lret
int
cs
mov
cmp
xlat
dec
push
jmp
out
xor
jae
jo
test
stos
sbbb
mulb
es
sbb
stc
sbb
jle
adc
int
clc
stos
jg
xor
fmull
inc
and
movsb
adc
in
adc
pop
sub
lret
pop
xchg
jbe
nop
xor
and
andb
mov
or
xor
mov
fnstsw
shl
repz
ror
inc
add
mov
flds
and
out
or
push
fwait
movsb
jle
inc
xor
jae
insb
pop
jmp
mov
out
add
outsb
call
jno
dec
inc
into
xchg
in
lret
mov
testl
xor
imul
mov
sub
sub
testl
insl
pop
jns
into
iret
jnp
mov
jmp
adc
xchg
fs
xor
mov
lods
lds
mov
sub
add
sbb
jbe
das
sub
mov
int
mov
pop
pop
jbe
dec
xchg
xchg
or
movsb
fstpt
and
das
add
sbb
sub
xor
pop
cmp
sbb
je
lret
out
int
mov
test
push
rorb
test
xchg
inc
xchg
cltd
xor
cmp
xor
jp
cmp
fstl
push
push
outsl
xor
adc
stos
inc
sbb
mov
in
mov
and
adc
mov
xor
xchg
pop
xchg
leave
popf
arpl
idivb
sbb
icebp
pop
aad
pusha
subb
adc
mov
mov
idivb
inc
xchg
fists
pop
xor
jg
lea
and
mov
and
je
test
movsw
mov
adc
jmp
sbb
adc
lods
cmovnp
dec
dec
sub
cmp
jne
inc
lods
xchg
movsl
push
push
jae
mov
mov
dec
mov
repnz
xchg
mov
and
shr
pop
inc
pop
or
das
stc
jb
pop
push
adc
xor
popa
dec
jb
dec
xchg
test
int3
xchg
push
lret
xor
or
lret
fbstp
jae
daa
and
cwtl
test
inc
into
andl
xor
insb
or
mov
enter
cli
cli
sbb
arpl
stos
imul
pusha
out
iret
jne
imul
in
and
sub
xchg
push
int
loopne
mov
testb
jnp
jnp
mov
or
mov
jo
movsl
xchg
jns
xor
mov
pop
sti
xchg
sarb
adc
je
push
inc
hlt
xchg
mov
orl
push
xor
jle
aam
icebp
xor
fsubrs
icebp
dec
mov
jbe
mov
xor
mov
sbb
loope
lods
dec
add
sarb
mov
adc
xchg
lahf
rcrb
ja
cmp
pop
movsb
jl
jmp
stc
jmp
lds
daa
jbe
dec
int3
cmpsb
mov
push
and
jge
jo
jno
push
jle
loope
inc
dec
movsl
add
or
scas
test
inc
cmc
ret
push
out
xchg
insl
mov
add
add
repnz
mov
es
cmp
repnz
popa
xchg
popf
cmp
loopne
sbb
adc
xchg
dec
cs
pop
js
mov
es
and
pop
repz
xchg
pushf
aad
cmp
aad
jbe
outsl
orb
cmp
dec
pop
cwtl
push
push
ret
cmp
lods
fildll
or
jl
cmc
push
and
ret
sub
xchg
imul
add
mov
and
aam
push
push
lock
testl
jle
sub
repz
xlat
in
cs
dec
fidivs
inc
lods
les
hlt
outsb
sub
ds
inc
add
pop
iret
dec
or
iret
cld
and
xor
inc
daa
pop
rolb
push
push
xchg
test
jmp
push
shlb
jo
mov
fdivrs
jge
bound
dec
je
mov
cwtl
cmp
lret
mov
cmc
lds
add
push
mov
enter
mov
or
cmp
xchg
inc
lcall
add
pop
sub
add
jmp
dec
movlps
mov
cmp
jbe
daa
lods
mov
cmp
dec
mov
inc
sbb
push
inc
pop
push
dec
jecxz
dec
insl
push
add
dec
pop
push
mov
mov
and
popl
sub
jl
push
and
mov
ret
movsb
adc
test
push
subl
int3
jl
nop
xchg
mov
cwtl
and
mov
jg
sbb
dec
jl
mov
mov
xchg
loop
mulb
and
daa
sub
subl
jo
andb
seto
adc
test
rorl
clc
or
cmp
cmp
fistpll
inc
mov
push
push
pop
mov
sub
out
imul
ljmp
jge
xchg
lcall
jne
imul
dec
test
mov
mov
hlt
mov
mov
daa
pop
or
mov
pop
jo
sahf
pop
mov
sti
in
outsb
xlat
jg
sbb
cmovne
rcrb
and
dec
push
mov
scas
mov
cmp
ret
cmp
hlt
mov
jp
popf
or
jnp
fs
inc
out
fmuls
rclb
xlat
stos
in
xor
inc
lds
movsl
negb
mov
inc
dec
mov
mov
mov
jno
shrl
fsubrl
mov
test
sbb
scas
out
add
cli
lock
jno
push
cmp
aaa
mov
add
in
mov
rorl
xor
and
push
mov
push
or
and
in
rorb
add
shlb
sbb
clc
xor
xlat
icebp
add
inc
orps
lock
sub
or
lahf
and
ret
test
leave
pop
xchg
fildl
jo
inc
in
mov
mov
out
mov
outsb
shrd
and
jmp
pop
nop
loopne
insl
outsl
icebp
xchg
jb
mov
push
jl
out
test
mov
inc
lds
inc
sub
ljmp
pop
dec
movsl
std
ss
mov
mov
lret
loopne
sbb
icebp
mov
adc
sbb
mov
scas
mov
sub
bound
jl
addb
fs
jne
push
push
sub
nop
rep
ret
lock
les
push
inc
push
nop
jp
mov
pmulhuw
push
adc
jnp
jmp
test
adc
insb
stos
fsts
or
fsubr
jno
mov
movsl
mov
fldl
lahf
jg
xchg
cs
xchg
pop
push
lcall
and
lds
call
xor
pop
jnp
out
jle
or
pop
jg
xor
hlt
pop
xor
jle
mov
cmp
push
jmp
shll
push
and
cmp
rclb
jmp
aam
inc
xchg
push
xchg
ss
test
ja
add
mov
sbb
pushf
mov
int
xor
packssdw
dec
fcomps
sub
mov
call
xor
mov
mov
sub
mov
rcr
fmulp
cmc
mov
sbb
xor
movsl
ljmp
scas
stc
lods
cmp
pop
es
and
cmp
sub
out
jg
pop
lods
cmp
pop
mov
fildll
aam
lock
xlat
lock
jle
inc
out
test
push
enter
push
or
cmp
jmp
mov
push
add
lock
setl
fisttpll
pop
out
xor
mov
or
int3
inc
leave
jns
outsb
xchg
push
mov
dec
shrl
cld
mov
inc
mov
imul
std
outsb
sbb
orps
jns
fwait
mov
xchg
ja
scas
mov
inc
filds
sbb
outsl
add
in
push
push
addr16
hlt
inc
icebp
lock
dec
mov
lock
daa
pop
jmp
mov
and
out
inc
inc
lock
iret
jns
enter
adc
shl
mov
inc
scas
lods
cmp
aaa
inc
jnp
push
cmp
sbb
movsb
scas
cwtl
cmpl
les
ss
xor
outsb
out
jb
cmp
pop
movsb
out
mov
loop
adc
iret
hlt
xchg
push
xor
leave
lods
jl
loop
add
mov
adc
sub
inc
call
icebp
lock
fs
outsb
mov
in
push
movsl
mov
lahf
jns
or
popf
adc
call
lock
add
ljmp
and
fadd
test
in
insb
lahf
clc
int
aas
fcoms
fsubl
bound
popw
roll
fstps
inc
push
push
test
and
xchg
or
jmp
imul
bound
movsl
mov
dec
rcll
popf
daa
in
test
loopne
out
xor
sub
cmpl
push
std
or
adc
mov
nop
xchg
cmpsb
dec
jp
inc
movsb
mov
add
faddl
xchg
pop
push
in
cmpsl
or
lods
js
cmp
movl
sar
xchg
xchg
inc
jp
cmp
pop
mov
stos
insl
scas
mov
aad
lret
or
ret
in
les
int3
pop
push
ljmp
imulb
xchg
fcoms
and
lds
mov
add
xor
push
mov
sbbl
popf
xor
mov
lock
pop
movsl
jl
js
add
jg
sbb
jmp
jge
loopne
sub
sub
bound
ja
aam
pop
push
inc
xchg
pmulhw
dec
sub
mov
sub
jmp
sub
mov
and
mov
into
jb
fs
dec
fstps
sub
gs
dec
mov
xchg
sti
adc
push
push
pop
and
bound
xchg
popl
data16
add
pusha
in
mov
push
push
into
sub
pop
pop
inc
clc
aaa
push
subl
inc
sbb
xor
sbb
mov
adc
ja
inc
mov
outsb
lods
fisubrs
sbb
ljmp
jnp
pusha
jo
loope
xlat
jle
daa
mov
aas
add
inc
pop
push
pop
mov
pop
loope
xor
xchg
mov
sub
adcl
or
or
cmovns
icebp
pop
aas
pavgb
or
lock
xchg
xchg
xor
xor
pop
cmc
adc
inc
or
les
pop
aad
cltd
push
jnp
cmc
cmp
jne
popa
outsl
sub
lret
xchg
push
mov
mov
mov
xorb
shrl
push
sbb
imul
loopne
sub
inc
sbb
dec
scas
add
mov
stos
sbb
xchg
fcomps
movsl
mov
cli
aaa
dec
dec
xchg
xor
pop
mov
cmpsl
dec
pop
data16
adc
adc
ret
leave
push
test
addr16
dec
mov
clc
lret
jne
and
orb
imul
inc
pop
and
jnp
mov
hlt
push
mov
aad
popa
add
sub
adc
rcrl
dec
test
lea
stc
hlt
jb
jmp
xor
sarb
cmp
hlt
popa
sahf
mov
imul
inc
out
cmp
sahf
and
inc
imul
mov
imul
movsb
xor
in
movsb
call
lods
shrl
mov
add
mov
jbe
test
shrb
stos
inc
mov
adc
pop
pop
or
lret
gs
pushf
lds
inc
pop
xchg
jnp
pop
imul
rclb
push
cmp
push
xadd
mov
aam
lods
div
push
xor
fidivrl
lahf
addr16
jmp
pushf
ret
rcr
fs
cwtl
lds
bound
mov
cmpsb
xor
push
adc
testb
stc
or
pop
sbb
xchg
cmovno
xlat
in
das
jmp
fs
imul
xchg
xor
adc
in
lods
inc
xchg
sbb
dec
testl
mov
or
pop
cmp
push
and
sbb
pop
out
push
int
lret
loopne
ret
mov
adc
push
test
in
sbb
pop
pop
sbb
shlb
pop
and
sbb
cld
inc
test
inc
outsl
mov
in
mov
dec
out
sbb
scas
adc
sti
push
aaa
insb
stos
aas
imul
and
cmp
xorl
outsl
push
cld
xor
mov
add
and
out
cmp
cs
fldt
faddp
outsl
stc
mov
sbb
push
in
adc
and
je
mov
les
sub
mov
test
repz
in
int3
pop
in
pushf
and
popl
xchg
mov
mov
push
subl
add
sbb
inc
out
jmp
dec
mulb
push
shlb
push
dec
inc
xor
mov
or
rolb
push
add
adc
mov
pop
cmp
stos
push
pop
lods
daa
clc
xchg
into
rorl
sub
scas
leave
pop
bound
shll
xor
data16
movsl
xchg
bound
dec
jno
jecxz
imul
inc
xchg
loope
jo
sub
cmp
ss
hlt
imul
xor
pop
dec
ret
dec
jae
imul
in
es
and
cld
mov
fisubrl
mov
push
rorb
aas
and
xchg
out
in
js
sub
jns
cmp
clc
aaa
and
movsb
bound
cwtl
cld
dec
sub
int3
and
rcrb
sti
cmp
cmp
and
fcoml
loope
mov
push
cmp
enter
in
outsb
insl
fs
aad
js
adc
or
and
stos
popf
xchg
stc
inc
outsl
es
movsb
inc
mov
sub
or
fildl
lahf
lret
push
xchg
bnd
and
add
roll
aam
movsl
adc
scas
dec
adc
les
push
cmp
inc
aad
mov
lahf
mov
cld
fcoms
fstps
mov
out
pop
shll
mov
mov
sub
ret
scas
aas
roll
adc
sarb
mov
jnp
sbb
sub
add
leave
cmp
xchg
in
mov
jns
fwait
mov
stc
xchg
andl
pop
jne
ds
inc
sahf
sub
sbb
shl
or
call
fistpll
ds
lods
dec
cs
fisttps
and
lods
and
orl
fdiv
int
and
mov
xor
inc
inc
cld
and
dec
pop
xchg
aad
xchg
mov
lahf
cmp
push
lret
rclb
lock
insl
pushf
fistps
sub
ret
notb
mov
iret
lahf
hlt
sub
xlat
fwait
leave
xchg
cld
loopne
frstor
xor
xchg
test
testb
shrl
adcb
in
clc
xlat
adc
mov
sub
adc
sub
jb
neg
mov
sub
cltd
lea
repz
dec
push
mov
push
push
xor
les
push
pop
sub
jbe
mov
or
sbb
or
sbb
in
adc
mov
js
push
push
pop
divl
sub
sub
and
movsl
loop
pusha
inc
pop
sub
out
cld
pop
adc
dec
ljmp
aam
pusha
rclb
pusha
daa
ror
dec
subl
jp
lods
xchg
sbb
test
mov
in
mov
dec
popa
inc
add
ds
outsb
xor
ds
push
fnstsw
inc
mov
jne
sbb
jnp
mov
pop
popa
push
push
jmp
dec
push
les
xor
xlat
adc
int3
orl
and
add
int
and
cmc
sbb
enter
ds
jecxz
adc
das
push
bsr
test
js
movsl
xchg
inc
sti
call
sub
xchg
mov
in
push
inc
cwtl
mov
aam
and
cli
lret
clc
scas
dec
movsl
js
mov
xchg
xchg
repnz
fdivrl
aam
inc
or
sbb
jg
cli
xchg
mov
cmpsb
jae
scas
mov
cs
cmp
mov
shrl
push
inc
out
mov
int
sbb
insl
aad
inc
xor
arpl
add
pop
or
insb
orb
rcr
xor
mov
sbb
data16
cmpb
dec
push
mov
cmp
push
sub
dec
fsubs
mov
das
mov
mov
pusha
xchg
push
xchg
gs
int3
popf
lds
and
faddl
push
mov
mov
mov
fists
jp
jb
jge
push
or
inc
push
clc
lcall
jne
dec
mov
mov
push
int
sub
sub
xchg
mov
pop
mov
add
subb
xchg
xchg
mov
mov
aad
loopne
xchg
xchg
push
call
jge
int3
in
out
stos
lret
ss
movsl
jmp
push
push
push
mov
and
sbb
dec
and
mov
mov
adc
pop
shl
cmp
xor
cmpsb
and
hlt
push
inc
aad
fldcw
bound
sarl
push
out
pop
push
cld
adc
cmp
dec
loop
mov
pop
push
jo
movsl
cmpsl
fs
sbb
or
addr16
mov
cwtl
and
inc
dec
leave
adc
loop
mov
js
add
hlt
mov
ljmp
mov
inc
xlat
and
mov
pop
into
jge
mov
ljmp
add
cmp
push
popf
dec
jo
test
or
outsb
or
mov
cmp
hlt
movsb
sbb
mov
push
push
cli
xchg
sub
bound
pop
push
es
jge
and
out
mov
mov
rolb
movsb
sub
mov
bound
movl
clc
pop
mov
fnstenv
into
nop
sbb
fcoms
push
inc
cmp
push
mov
xchg
sbb
test
pop
pop
pop
fcoms
mov
adc
and
aas
hlt
mov
push
imul
add
out
cmpsb
push
imul
jmp
push
ljmp
and
push
stc
push
ret
mov
popa
cs
pushf
xchg
cmp
xorb
aad
cwtl
cmp
xor
js
aad
popl
xchg
out
mov
inc
sbb
je
loope
sahf
mov
jg
cs
rolb
fwait
ds
data16
je
add
sbb
cmpsl
jle
push
inc
push
hlt
add
xchg
stos
out
push
push
int
mov
mov
stos
mov
das
insl
std
and
pop
insl
cmovne
cmp
sub
add
stc
mov
loope
sti
cmp
mov
jno
shl
pushf
bound
fucom
clc
mov
mov
test
sbb
sti
movsl
movsl
dec
cli
in
das
push
ds
xchg
fstpt
sub
dec
faddl
push
lcall
mov
or
arpl
cmpsb
jecxz
addr16
iret
mov
push
outsl
mov
and
into
xchg
inc
fdivl
test
pop
enter
stc
shlb
sti
or
mov
test
fisubrl
pop
iret
push
mov
and
daa
cmp
jmp
dec
out
int
xor
inc
push
iret
add
jp
jmp
xor
mov
or
loopne
into
inc
xchg
es
popa
test
cmp
push
xchg
hlt
inc
sbb
outsl
mov
lret
call
imul
add
push
mov
stc
xchg
out
sbb
pop
sbb
push
or
bound
xchg
popf
sbb
dec
add
add
add
jle
mov
jecxz
pop
xor
mov
xchg
add
lock
loop
push
fstpt
push
fldln2
out
mov
adc
pop
outsl
jl
and
adc
pop
and
adc
jno
pop
leave
push
sbb
into
imul
xchg
pushf
cmpsb
pop
adc
stc
mov
call
icebp
or
mov
sti
adc
popa
or
xchg
mov
rcrl
repz
sbb
adc
jne
push
into
arpl
mov
push
add
or
jle
inc
mov
arpl
arpl
sbb
loope
xor
xor
and
inc
mov
dec
test
and
fucomi
pusha
stc
es
or
loope
in
mov
jle
xchg
insb
ret
in
in
dec
jl
or
xchg
adc
insb
int
and
daa
lods
xchg
aaa
insb
rcr
out
xchg
mov
adc
pop
mov
and
mov
and
sbb
sarl
inc
test
jl
loopne
sub
jmp
stos
dec
or
pop
test
int
in
pop
dec
sbb
insb
lea
add
adc
lret
jg,pt
lret
rcrl
imul
lea
or
adc
sub
imulb
orb
nop
adc
hlt
sub
daa
repnz
push
in
add
xor
adc
out
dec
mov
sbb
inc
inc
jg
sarb
pop
lcall
hlt
fs
in
mov
inc
or
mov
mov
fmuls
addl
fs
xchg
xchg
xor
imul
stos
rolb
ja
push
je
xor
test
cmp
loopne
mov
pop
sbb
cs
mov
or
pop
adc
mov
inc
imulb
jp
loop
sahf
jge
mov
cmpsb
and
push
popf
pushf
aas
pop
jnp
stos
sbb
fldenv
mov
add
mov
dec
adc
popf
dec
adc
pop
mov
pop
push
xchg
jge
cmc
cld
xor
fldenv
xchg
mov
pusha
int
mov
xor
lods
jl
jl
fldt
ficoml
lret
xchg
mov
xchg
adc
pushf
push
lcall
idivl
fimuls
outsb
cmc
mov
jno
lea
sti
fsubrp
mov
enter
jnp
in
bound
and
xor
mov
mov
mov
fdivp
fs
ljmp
divb
sti
dec
int
cs
ret
in
mov
mov
xor
dec
test
lea
pop
adc
imul
inc
xor
and
jbe
dec
pop
jecxz
and
cwtl
aad
pop
cmpsb
cmpsb
jmp
push
xlat
add
mov
mov
andb
push
cmpsl
mov
xchg
adc
pop
cltd
pop
adc
pop
push
inc
cmp
lcall
add
xor
mov
cmpsb
pop
dec
cltd
lods
mov
dec
and
mov
daa
sbbl
mov
mov
das
jmp
push
xchg
outsl
add
test
pop
push
mov
inc
int3
dec
pop
fwait
xor
out
pushf
jmp
mov
jno
popa
push
cmpsb
and
fucom
je
jo
jno
mov
sub
lds
pushw
call
xorb
clc
jbe
inc
xor
push
adc
iret
data16
cli
cmpsl
je
into
jmp
push
and
je
add
and
cld
adc
push
xchg
cmp
adc
inc
jge
je
push
loop
cmp
je
std
xchg
pushf
sub
test
out
rolb
test
dec
xlat
and
cmp
and
clc
icebp
sti
add
arpl
cwtl
lcall
mov
jmp
and
ljmp
popa
jo
jne
push
inc
xchg
mov
add
fistpl
mov
mov
xchg
dec
popa
jp
cs
and
sub
sub
mov
push
mov
ss
fdivr
sbb
rorl
dec
dec
popw
jmp
xchg
hlt
push
sbb
or
sarb
loopne
and
out
outsb
xor
into
sarb
fistl
data16
movsl
adc
lds
sbb
inc
scas
ret
nop
pop
sub
push
sbb
call
test
rcrb
xchg
sahf
leave
mov
in
je
dec
aas
andl
mov
push
mov
xchg
sbb
xor
lcall
sahf
cmp
push
ss
jo
ret
sarl
push
ss
insl
jb
test
vpsubsw
mov
mov
js
xchg
xchg
pop
prefetch
xor
lods
xor
xchg
aam
cmpsb
push
push
es
std
or
in
fistl
and
mov
out
movsl
jo
les
lret
imul
lods
imul
xchg
arpl
testb
pop
testl
dec
or
and
adc
or
jl
push
xchg
and
xor
movsb
inc
push
pop
jp
clc
popa
xchg
cli
sub
dec
pop
mov
add
pop
popa
mov
sub
fs
jno
sbb
cmp
fidivs
inc
dec
dec
pop
lret
rol
and
decl
repnz
jb
into
sub
negl
add
pop
lret
push
out
push
test
cltd
mov
push
add
insl
mov
sub
outsl
cmp
fiaddl
jmp
cwtl
loop
push
adc
out
mov
pop
and
mov
fildll
scas
aaa
push
arpl
insl
mov
mov
rcrl
mov
ljmp
xchg
jo
inc
pop
je
mov
jb,pn
add
push
fistl
xor
sbb
movsb
sub
out
xor
arpl
clc
xor
in
fistpll
cmp
mov
ds
ret
lea
lahf
ja
mov
rorb
dec
and
leave
fstl
inc
xor
test
mov
frstpm(287
xchg
sub
addr16
sbbb
mov
shl
inc
dec
int3
xchg
xchg
imul
movsb
mov
fisubl
xchg
nop
ljmp
les
mov
out
lret
ficoms
movl
sarb
dec
dec
rclb
xor
das
notl
enter
std
mov
movsl
xchg
ss
sbb
mov
bound
inc
dec
nop
push
cmp
fmuls
dec
loop
fldcw
xchg
fisubs
cmc
jg
and
or
dec
in
sti
aad
cmpsl
cmp
adc
or
or
test
in
ljmp
lahf
dec
lods
push
sbb
jno
and
pop
arpl
cmpsb
xlat
faddl
dec
cmc
int
push
cmp
sub
imul
inc
cmc
xlat
roll
out
sbb
and
cltd
out
pop
push
jg
call
pop
sbb
enter
sarl
and
aam
in
scas
cmpsb
and
sbb
and
mull
lret
jle
mov
dec
pushf
sahf
mov
adc
xchg
and
jecxz
mov
aam
addr16
push
mov
jno
insb
inc
jne
lret
gs
xchg
stos
jl
inc
mov
ficoms
mov
repnz
xchg
mov
outsl
pop
fists
mov
mov
push
data16
dec
mov
das
fnstsw
mov
xor
lea
outsb
xlat
ficoms
jp
inc
jmp
and
inc
push
dec
push
ja
dec
aad
push
pop
cltd
js
push
push
cmp
data16
rcrl
inc
ja
jle
or
adc
leave
fsubl
fwait
push
sahf
decb
jg
push
incl
shr
mov
mov
lcall
pop
xor
add
fwait
cli
or
ja
push
out
xchg
mov
dec
push
inc
xchg
fisttpll
mov
decb
inc
and
rol
pushw
lret
adc
push
push
mov
repnz
shll
add
add
pop
mov
push
adc
sahf
dec
bound
xchg
xchg
shlb
fisttps
lock
add
push
call
imul
les
das
ret
xchg
push
repnz
push
mov
fdivr
cmp
xchg
jg
mov
sti
push
cmpb
add
dec
xchg
lds
pop
push
popf
sahf
fldt
fldt
pusha
pop
jge
lods
jo
jne
and
cld
test
sbb
adc
or
inc
or
pop
mov
loope
bound
inc
ret
loopne
arpl
and
adc
pop
hlt
jg
lods
mov
rcll
mov
jle
test
add
int3
xchg
sahf
pop
je
bound
and
pop
jb
aaa
syscall
popl
inc
jge
mov
les
test
sub
dec
push
stos
pop
ds
arpl
jecxz
rcr
scas
jne
sub
int3
loope
jne
push
das
lds
pop
shl
aad
lea
jne
add
dec
cli
adc
xchg
jmp
fmul
and
xor
mov
push
insb
in
jbe
mov
jge
test
lods
fists
orb
call
loopne
xor
dec
jle
inc
xor
testb
fs
sbb
cmc
int
sub
adc
sti
sbbb
test
add
inc
add
xchg
push
test
fiadds
scas
lods
sahf
cmp
iret
adc
andb
mov
dec
xchg
data16
lds
inc
xchg
sbb
push
in
push
xor
sbb
pusha
setbe
and
jg
jg
adc
aad
clc
test
pop
mov
iret
int
clc
lock
int
mov
or
dec
mov
add
loope
pushf
dec
data16
stc
std
ret
adc
and
test
inc
mov
aam
ss
mov
jmp
adc
xchg
loopne
repnz
push
mov
xchg
xchg
mov
pop
push
ret
or
daa
in
dec
push
or
jp
jge
ficompl
cmp
int3
in
lret
inc
frstor
cmp
imul
cmp
and
jae
sub
pop
mov
dec
sub
insl
inc
xor
jne
mov
pop
pop
test
mov
es
aad
inc
cmpsl
cmp
cli
in
and
push
std
hlt
xor
adc
sbbl
xchg
xlat
adc
pop
xor
icebp
or
cmpsb
fldt
call
mov
push
mov
jecxz
add
roll
mov
xchg
mov
enter
test
int
fwait
movsb
test
mov
scas
cmp
xor
out
sbb
dec
adc
mov
test
cltd
push
lret
add
dec
push
adc
stos
mov
pusha
es
and
lds
jo
push
imul
push
and
jno
xor
adc
add
push
movsb
pop
scas
sub
inc
inc
or
cli
adc
mov
enter
and
fistpll
call
mov
das
mov
jne
xchg
test
pop
jmp
adc
pop
jne
mov
loope
mov
ljmp
mov
pusha
lea
mov
dec
jo
ss
mov
aas
int3
push
or
xor
mov
inc
faddl
xchg
ljmp
cmp
cmp
dec
pop
mov
into
sub
mov
scas
in
add
push
xor
push
call
xor
nop
fldenv
add
arpl
xor
jg
cmp
sti
imul
ds
lea
leave
stc
icebp
imul
jge
add
das
popa
or
dec
mov
iret
pusha
push
push
cli
popf
inc
std
dec
sub
sarb
dec
clc
mov
push
jb
je
adc
les
adc
mov
movsb
in
mov
mov
adc
adc
in
arpl
loop
ret
add
pushf
xchg
jecxz
add
or
addr16
mov
dec
int3
ss
mov
and
lock
mov
push
shll
roll
test
aaa
cltd
scas
in
sub
dec
adc
lods
sub
lahf
andl
neg
lds
iret
cmpb
sahf
or
adc
xor
cmpsl
xchg
cmc
gs
pop
test
dec
xor
test
subl
sbb
cs
cmp
jmp
or
test
add
stc
std
test
fmull
push
push
inc
clc
test
mov
scas
inc
stc
add
fildll
ret
mov
popa
out
in
xchg
fcompl
aaa
out
mov
sbb
nop
stos
roll
pop
jmp
ret
jge
rol
and
popf
jae
or
arpl
addr16
mov
mov
in
cmp
dec
xor
pop
orb
push
pop
mov
fldenv
lods
enter
mov
dec
jo
arpl
and
sbb
std
das
or
mov
pop
pop
jno
cmc
in
imul
push
mov
xor
jo
mov
cmp
jle
jp
popa
dec
pop
xor
fwait
adc
and
mov
pop
or
push
shr
adc
push
xchg
xchg
xor
jmp
pop
add
add
daa
insb
push
sub
int3
les
mov
data16
out
jmp
loope
aad
ljmp
adc
fdivrs
adc
repz
pop
add
jp
push
lcall
sub
imul
cmp
cmp
dec
jns
mov
pusha
sti
sbb
push
fwait
das
mov
mov
mov
lahf
and
push
mov
pop
lods
ret
or
cli
jge
cmpsb
pop
lcall
loop
ret
pusha
sbb
popa
out
out
enter
fildll
aaa
pop
in
dec
jne
or
xor
cmpsb
pop
or
push
cld
mov
sahf
and
add
cld
mov
jae
in
cmpsb
lahf
mov
lahf
movsb
scas
xchg
jo
loop
lds
test
fdivrp
cs
dec
shll
mov
jmp
std
sbb
xor
data16
shrb
lahf
inc
sbbl
lahf
fcomi
mov
push
popa
mov
pop
pusha
mov
pushf
xchg
fbstp
cmpsl
dec
lds
pop
sub
xlat
js
cltd
push
lods
and
or
add
fucomi
mov
or
pusha
cmp
cld
fs
lea
gs
pop
xor
lahf
loop
add
xchg
dec
lret
mov
pop
fwait
and
cmp
