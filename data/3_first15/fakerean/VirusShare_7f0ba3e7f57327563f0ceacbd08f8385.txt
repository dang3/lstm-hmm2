popf
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
pop
or
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
call
test
jne
add
mov
cmpb
je
mov
mov
mov
cmpb
je
mov
mov
mov
mov
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
cmpb
mov
je
mov
lea
push
lea
push
push
call
testl
jne
cmpl
je
mov
movl
mov
call
mov
mov
xor
xor
cmp
je
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
call
mov
lea
call
test
jne
mov
mov
cmpb
mov
jne
mov
cmpb
je
mov
mov
cmpl
je
mov
add
mov
mov
cmpb
jne
mov
mov
mov
mov
call
cmp
jne
xor
xor
lea
cmpl
je
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
add
add
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
pop
sub
pop
sub
pop
mov
mov
pop
add
ret
mov
push
lea
mov
call
mov
mov
lea
push
mov
mov
push
lea
call
cmpl
je
mov
mov
cmpb
je
mov
test
jne
mov
add
mov
mov
lea
mov
cmp
je
mov
test
je
movl
mov
lea
push
push
push
call
add
cmpl
je
test
je
mov
add
mov
mov
jmp
mov
mov
push
lea
mov
call
mov
mov
jmp
pushl
mov
pushl
mov
pushl
mov
push
call
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
add
mov
xor
mov
test
jne
mov
push
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
pushl
call
test
pop
pop
je
mov
jmp
push
mov
sub
andl
push
mov
push
push
mov
movzbl
push
pushl
and
pushl
lea
push
xor
call
mov
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
andl
andl
mov
mov
lea
call
mov
lea
mov
mov
call
andl
test
je
movl
mov
mov
push
call
push
lea
push
lea
push
push
lea
push
pushl
push
call
mov
add
test
je
mov
test
je
testb
mov
je
mov
mov
mov
cmp
jne
mov
mov
lea
call
xor
mov
call
mov
lea
call
mov
test
je
mov
mov
mov
mov
test
je
lea
call
andl
andl
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
cmpw
jne
push
mov
mov
push
lea
push
push
call
cmpl
je
push
mov
cmpl
mov
mov
je
orl
lea
push
mov
call
push
mov
call
push
call
mov
pop
mov
call
mov
test
jne
pop
pop
leave
ret
push
mov
push
push
push
push
push
mov
push
call
mov
test
je
push
call
pop
movl
cmpl
je
push
call
test
pop
je
mov
andl
mov
mov
mov
mov
mov
movl
mov
mov
mov
push
call
test
je
mov
push
call
mov
mov
push
push
push
call
mov
mov
push
call
test
je
cmpl
je
push
call
pop
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
and
push
mov
addl
push
js
mov
mov
or
test
je
xor
pop
mov
pop
ret
mov
cmp
mov
jne
test
mov
jne
cmpb
je
test
jne
mov
push
push
mov
call
movb
xor
pop
mov
pop
ret
mov
call
xor
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
lea
mov
mov
call
test
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
call
mov
mov
mov
push
pushl
push
push
mov
call
test
mov
js
call
cmpl
jne
mov
mov
call
mov
mov
mov
mov
mov
imul
imul
lea
call
mov
push
push
push
call
flds
mov
push
fstps
call
flds
mov
push
fstps
call
xor
cmp
jne
pushl
mov
mov
lea
mov
mov
call
lea
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
mov
cmp
je
mov
mov
mov
call
push
lea
mov
call
lea
push
push
call
mov
test
jne
pushl
andl
mov
lea
call
mov
mov
mov
push
push
call
test
jne
lea
mov
test
mov
jne
push
call
test
pop
je
movl
andl
andl
test
je
mov
mov
mov
call
mov
test
je
mov
mov
push
pushl
call
cmpl
jne
xor
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
test
jne
mov
mov
pushl
mov
push
call
ret
mov
jmp
push
mov
push
push
mov
push
call
xor
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
leave
ret
mov
mov
mov
push
mov
mov
mov
add
mov
xor
pop
ret
int3
mov
mov
testb
mov
je
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
not
and
mov
testb
jne
xor
mov
testb
jne
mov
mov
mov
shr
and
mov
ret
push
mov
lea
pop
jmp
xor
mov
mov
shr
and
mov
ret
push
mov
cmp
je
push
mov
mov
xor
cmp
ja
pop
pop
ret
push
mov
push
test
mov
jne
cmpl
push
jne
xor
lea
call
mov
pop
leave
ret
mov
push
call
jmp
mov
push
lea
call
mov
lea
push
push
call
cmpl
je
jmp
push
mov
mov
sub
call
test
jne
mov
mov
call
leave
ret
push
mov
mov
mov
call
test
mov
je
mov
push
push
xor
call
cmp
je
push
lea
mov
call
lea
lea
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
lea
call
pop
jmp
push
mov
sub
mov
xor
mov
push
mov
push
lea
mov
xor
cmp
push
mov
jne
xor
cmp
mov
jg
mov
test
je
mov
push
push
call
mov
andl
lea
lea
push
lea
movb
mov
movl
call
call
push
push
push
call
mov
test
je
testl
jne
push
mov
call
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
jmp
mov
mov
mov
call
mov
lea
call
mov
test
je
mov
push
call
incl
cmp
jl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
push
mov
lea
mov
mov
lea
push
and
or
lea
push
push
movl
mov
call
mov
mov
add
cmp
jne
mov
xor
cmp
mov
movl
mov
ja
push
push
push
lea
mov
mov
mov
push
call
mov
cmp
je
testl
je
lea
cmp
jne
mov
pop
pop
pop
mov
pop
ret
lea
sub
mov
mov
push
mov
mov
sub
mov
call
cmpl
je
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
call
mov
xor
test
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
test
push
push
mov
je
cmpb
je
mov
cmpl
mov
jge
push
mov
call
add
lea
mov
movl
call
test
je
xor
mov
test
jne
test
jne
test
jne
mov
xor
push
xor
mov
mov
call
add
cmp
jne
push
lea
push
push
mov
call
mov
mov
add
mov
mov
push
lea
lea
mov
call
test
je
mov
test
je
testb
mov
mov
jne
cmp
je
call
push
push
push
push
call
mov
cmp
ja
mov
cmpl
jge
mov
test
je
lea
push
call
add
mov
cmpl
jne
mov
mov
push
call
add
test
je
mov
mov
mov
push
push
push
mov
call
lea
push
call
add
test
je
mov
mov
pop
pop
pop
pop
xor
call
add
ret
cmpl
jne
cmpl
jne
cmpl
jne
lea
push
push
call
add
test
je
cmpl
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
mov
jne
mov
mov
mov
call
test
mov
js
mov
jmp
cmpl
je
jmp
push
lea
sub
push
push
push
mov
xor
push
call
test
je
mov
pushl
lea
call
mov
cmp
pop
mov
je
mov
xor
lea
mov
inc
push
mov
mov
mov
push
call
test
js
cmpl
je
mov
andl
lea
push
mov
mov
mov
push
call
test
js
lea
mov
lea
mov
lea
mov
lea
mov
lea
xor
push
lea
push
movl
movl
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
lea
push
lea
push
mov
movl
movl
mov
call
mov
pop
pop
lea
push
push
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
jne
testb
jne
mov
mov
lea
push
push
call
cmpl
je
pushl
call
cmp
pop
je
mov
push
push
push
mov
call
test
je
mov
movw
pushl
mov
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
xor
lea
call
mov
pop
pop
pop
add
leave
ret
mov
push
push
call
jmp
testb
je
jmp
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
pushl
mov
pushl
call
neg
pop
sbb
pop
inc
ret
mov
decl
mov
je
ret
movl
push
movl
call
pop
xor
jmp
push
mov
push
xor
push
push
mov
mov
push
lea
pop
mov
movl
call
test
pop
je
cmpl
jne
pop
pop
mov
pop
ret
call
mov
jmp
pushl
mov
pushl
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
push
call
cmpb
jne
mov
mov
test
mov
jne
mov
mov
mov
lea
not
and
lea
cmp
ja
mov
xor
cmp
je
cmp
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
pop
mov
pop
ret
push
lea
push
call
add
mov
jmp
push
push
mov
mov
test
jne
mov
push
push
call
test
je
test
je
mov
push
call
pop
pop
ret
mov
mov
test
je
mov
mov
cmp
jae
mov
test
je
pushl
mov
pushl
push
call
ret
mov
jmp
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
xor
push
call
test
je
mov
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
je
pushl
call
cmp
pop
je
mov
mov
call
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
mov
lea
mov
call
mov
cmp
je
pushl
lea
call
lea
call
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
push
pushl
call
andl
pop
push
mov
lea
call
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
push
mov
sub
lea
cmpl
push
je
mov
mov
mov
xor
pop
leave
ret
push
mov
push
pushl
mov
call
pop
mov
lea
call
mov
mov
pushl
mov
push
call
test
pop
pop
pop
pop
jne
pushl
pushl
call
mov
pop
pop
jmp
push
mov
test
je
mov
push
mov
call
test
jne
mov
push
mov
call
test
jne
mov
mov
call
test
je
mov
pop
ret
mov
jmp
xor
pop
ret
push
push
push
mov
test
je
mov
mov
call
test
je
mov
call
mov
test
je
mov
mov
call
cmp
jb
mov
test
mov
jne
test
jne
pop
pop
pop
ret
pushl
call
pop
mov
call
mov
mov
jmp
push
mov
and
sub
push
mov
mov
mov
mov
push
xor
cmp
push
mov
je
mov
push
call
pushl
lea
push
mov
mov
mov
mov
push
lea
movb
call
mov
test
je
mov
push
pushl
lea
push
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
lea
call
pop
pop
xor
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
lea
call
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
mov
test
pop
jne
mov
test
jne
mov
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
push
push
push
push
mov
call
test
je
andl
push
mov
mov
add
cmp
je
xor
mov
cmp
mov
je
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
mov
mov
inc
cmp
jne
pop
cmpl
jbe
mov
mov
cmpb
je
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
cmpl
push
push
jle
cmpl
jle
mov
mov
mov
mov
mov
mov
push
lea
mov
mov
movl
call
mov
mov
lea
push
call
mov
mov
mov
add
call
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
call
mov
mov
mov
mov
call
fstpl
mov
fildl
mov
mov
push
fidivl
mov
fstpl
call
fstpl
mov
add
call
test
je
mov
mov
mov
jmp
mov
mov
cmp
je
movzwl
test
je
movswl
call
movzwl
cmp
jne
lea
push
lea
push
mov
push
mov
call
add
test
je
fildl
mov
mov
push
fidivl
mov
push
fstpl
call
fld1
fsts
add
fcomps
fnstsw
test
jnp
lea
flds
mov
fstps
sub
lea
fmuls
lea
fstpl
fldl
fstpl
fldl
fstpl
fldl
fstpl
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
push
lea
mov
mov
call
mov
mov
mov
test
jne
test
je
mov
mov
push
call
add
test
mov
jne
cmpl
jle
cmpl
jle
mov
lea
call
test
je
xor
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
lea
mov
cmp
push
lea
jne
test
jne
xor
test
jne
mov
mov
and
or
jne
xor
test
mov
jne
xor
pop
pop
ret
mov
mov
mov
mov
pop
pop
ret
mov
jmp
push
mov
mov
mov
push
push
mov
push
add
mov
push
xor
mov
mov
call
test
jne
cmp
je
push
call
cmp
pop
je
mov
orl
mov
pushl
mov
call
pushl
mov
push
mov
call
pop
pop
pop
pop
ret
push
mov
push
cmpb
jne
mov
test
movb
jbe
dec
mov
mov
push
lea
mov
push
mov
mov
mov
cmp
jb
mov
test
je
pushl
mov
dec
mov
call
jmp
push
mov
call
mov
pop
mov
movb
pop
leave
ret
movl
jmp
add
call
test
je
push
push
mov
push
lea
push
mov
call
test
je
push
push
push
mov
call
test
jne
cmp
je
call
movl
xor
inc
pop
ret
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
test
mov
je
addl
lea
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
push
lea
push
movl
movl
movl
call
orb
cmp
jne
cmpl
je
mov
cmpl
jne
mov
call
test
je
push
mov
mov
call
test
je
mov
call
test
je
push
call
test
je
cmpl
jne
cmp
je
orb
push
call
test
je
cmpl
jne
cmpw
jne
mov
cmpl
jne
mov
movl
mov
add
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
test
je
addl
cmpl
je
mov
pop
pop
pop
mov
pop
ret
test
jne
mov
test
je
push
lea
call
cmp
je
lea
push
push
mov
call
add
test
je
push
push
lea
push
mov
call
test
mov
jne
lea
push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
lea
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
cmp
je
mov
push
mov
call
jmp
push
mov
mov
cmpl
push
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
mov
mov
mov
mov
jne
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
add
jmp
mov
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
lea
call
pop
xor
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
neg
sbb
and
add
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
movl
call
mov
test
mov
mov
je
lea
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
xor
cmp
mov
je
mov
mov
call
push
mov
lea
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
mov
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
xor
lea
call
pop
mov
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
jne
pop
pop
pop
pop
add
ret
mov
jmp
lea
mov
mov
call
add
cmp
jb
mov
jmp
lea
mov
lea
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
push
mov
movl
movl
movl
cmpl
jge
mov
test
jne
mov
test
je
push
call
test
pop
je
andl
mov
test
jne
mov
test
jne
mov
test
mov
jne
test
jne
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
cmp
jge
xor
cmp
jne
testb
jne
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
movb
cmpb
jne
cmpb
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
push
push
call
add
test
jne
lea
mov
mov
mov
push
push
mov
call
cmp
jne
lea
push
mov
call
call
push
push
push
push
call
orl
mov
mov
test
jne
test
jne
testb
jne
push
lea
movl
call
mov
mov
lea
push
call
add
cmpl
je
push
call
add
test
je
mov
call
mov
test
je
mov
mov
push
call
mov
test
lea
mov
jne
cmpl
je
mov
and
jne
test
jne
push
mov
call
push
lea
movl
call
mov
mov
call
mov
lea
push
lea
push
movzbl
push
push
mov
shr
and
push
mov
push
lea
push
push
mov
push
push
call
test
js
mov
mov
add
test
movl
jne
push
push
push
push
push
push
push
call
add
lea
mov
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
testb
je
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
je
cmp
jne
movl
xor
test
js
mov
mov
push
lea
lea
movl
movl
mov
mov
mov
call
cmp
je
push
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
xor
jmp
mov
jmp
lea
movzwl
push
call
add
test
jne
cmp
jae
mov
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
lea
mov
xor
mov
mov
sub
mov
lea
lea
mov
movl
movl
mov
call
add
push
mov
mov
mov
call
test
jne
mov
cmpw
je
mov
push
mov
call
add
xor
push
lea
mov
call
lea
lea
push
push
mov
mov
movl
movl
mov
movb
call
push
push
push
lea
push
lea
push
call
mov
mov
add
test
jne
test
jne
test
js
mov
cmp
je
cmp
je
mov
mov
push
push
push
mov
call
lea
call
mov
test
jne
test
jne
nop
mov
xor
jmp
lea
nop
mov
cmp
jb
mov
push
mov
lea
mov
call
lea
call
lea
push
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
push
push
call
test
js
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
jne
cmp
lea
jne
mov
push
mov
call
mov
push
lea
mov
call
lea
call
cmp
lea
je
lea
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
push
push
push
mov
push
lea
cmpl
movl
je
mov
test
je
mov
mov
lea
mov
push
push
push
call
add
cmpl
movl
je
push
call
pop
mov
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
test
push
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
push
lea
mov
call
pushl
lea
call
test
pop
mov
je
pushl
call
mov
pop
mov
mov
mov
lea
call
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
mov
lea
push
pushl
push
call
test
mov
jne
testb
je
lea
mov
mov
mov
lea
push
mov
movl
movl
movb
mov
push
call
test
mov
jne
push
push
lea
push
or
mov
call
push
lea
mov
call
push
push
push
lea
push
lea
push
call
add
test
mov
jne
push
call
cmp
pop
je
pushl
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
lea
call
mov
pushl
mov
push
call
test
mov
jne
lea
call
pushl
pushl
call
pop
pop
jmp
push
mov
mov
sub
push
lea
push
push
call
mov
test
jne
push
call
test
jne
and
push
push
lea
call
mov
lea
push
push
call
test
jne
lea
push
push
pushl
call
add
test
jne
xor
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmpl
jne
pushl
lea
call
cmp
je
cmp
je
cmpl
jne
mov
mov
lea
push
pushl
pushl
push
call
test
jne
cmpl
jne
lea
call
lea
call
xor
pop
pop
leave
ret
xor
lea
call
mov
jmp
push
movzbl
push
push
movzbl
push
pushl
mov
call
cmpb
mov
jne
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
test
movl
movl
movl
movl
jne
mov
cmpl
lea
jbe
xor
movl
mov
mov
mov
test
je
call
push
call
add
mov
addl
add
cmp
jb
testb
jne
mov
test
jne
cmpl
jne
mov
mov
subl
sub
mov
lea
sbbl
test
jne
mov
test
jne
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
je
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
ds
test
je
mov
call
push
call
add
pop
pop
pop
pop
pop
ret
mov
subl
mov
sub
sbbl
jmp
mov
test
je
mov
mov
mov
mov
movl
movl
jmp
call
push
call
add
jmp
push
mov
sub
push
push
push
push
push
call
mov
add
lock
add
add
mov
add
jbe
mov
stos
test
rolb
mov
std
testl
add
fwait
mov
loope
add
sub
push
mov
add
push
push
push
push
push
push
push
lea
push
call
pop
scas
xchg
imul
xchg
mov
add
add
mov
xchg
add
addr16
add
test
repnz
bound
add
in
in
lcall
inc
in
push
push
lea
push
call
cmpb
jle
lret
add
mov
add
add
iret
add
shlb
jle
mov
jno
imul
in
clc
lcall
push
push
push
push
call
jns
jmp
arpl
add
add
roll
lock
in
ret
jmp
push
sarl
subl
stc
add
fcom
add
add
push
add
add
enter
imul
mov
int3
add
push
call
push
lea
push
push
push
push
lea
push
push
push
push
call
add
test
pop
aam
add
fiaddl
jb
add
add
add
mov
xchg
add
lock
push
add
add
loop
add
add
mov
out
add
mov
add
add
jge
lahf
add
stos
pop
jne
in
cli
mov
add
add
mov
add
addb
pop
jl
add
sub
pop
push
push
push
push
call
mov
mov
add
jo
mov
add
add
add
pop
add
ljmp
faddl
add
add
add
int
rolb
add
loopne
cmpsl
sti
out
aam
jl
lods
add
add
jecxz
add
pop
ret
mov
mov
add
cmc
add
nop
loope
sub
pop
call
push
push
push
call
lods
add
lahf
lds
enter
mov
add
lret
mov
add
lahf
add
jecxz
add
loope
add
jns
mov
add
cltd
mov
ja
add
scas
mov
lahf
add
addb
mov
aad
in
hlt
lcall
jb
add
ret
push
push
push
push
push
push
push
lea
push
push
call
mov
out
into
add
je
xchg
sub
add
pop
out
add
add
leave
add
out
mov
aam
add
movsl
add
stc
push
pop
xchg
mov
add
push
shll
add
add
add
mov
xlat
mov
pop
mov
push
push
push
push
lea
push
push
push
call
jmp
cwtl
scas
add
imul
jecxz
andb
add
movsb
add
stos
xchg
rolb
test
mov
add
add
jge
mov
add
add
push
lret
movsb
xchg
nop
jns
add
add
add
jno
pusha
sahf
sub
pop
mov
push
lea
push
push
lea
push
push
lea
push
push
call
imul
fidivrs
add
stos
cwtl
fiaddl
loopne
pop
les
add
sti
mov
xchg
mov
jns
fildl
fcoml
mov
jnp
push
lock
call
sub
pop
add
push
push
lea
push
lea
push
push
call
add
add
roll
jno
mov
in
cmpsl
add
jb
cwtl
test
out
add
addr16
fiadds
add
fldl
add
add
aam
int
js
add
data16
rcrl
pop
add
add
push
push
lea
push
lea
push
push
push
push
call
mov
scas
add
push
add
add
lods
call
add
js
pop
add
push
add
add
xchg
add
andb
add
add
sti
add
mov
push
fcom
scas
add
lahf
add
add
nop
pop
shl
xlat
loopne
sub
pop
mov
xor
push
push
lea
xor
sub
push
push
pop
add
rol
shr
sub
shl
pop
rol
pop
push
push
push
push
call
add
pop
out
xchg
imul
fs
movsl
add
add
add
sti
add
test
stos
mov
mov
add
pusha
push
mov
je
add
mov
jne
add
add
jae
leave
mov
in
add
add
add
add
add
add
out
popf
std
addr16
mov
pop
pushl
call
push
push
push
push
push
push
lea
push
push
push
call
add
add
rorb
add
test
add
mov
jnp
rcr
outsl
fwait
out
add
pop
add
add
insb
add
lcall
inc
lock
push
lea
push
push
lea
push
lea
push
call
mov
loope
add
ficomps
out
mov
int
xchg
cwtl
bound
test
cwtl
call
add
test
stos
pop
test
movl
rolb
mov
std
sub
pop
lea
push
push
push
push
call
add
gs
jmp
fptan
test
add
lods
jp
hlt
pusha
mov
test
add
add
cli
add
push
iret
lods
add
xchg
add
add
jmp
mov
add
mov
pop
faddl
push
push
lea
push
push
push
push
push
lea
push
push
push
call
roll
mov
mov
add
pop
mov
jbe
add
int
test
add
ja
add
std
add
cwtl
int
push
aam
sti
mov
in
add
jne
push
lea
push
push
lea
push
push
lea
push
call
lcall
popf
nop
add
add
pop
pusha
add
testl
add
add
add
mov
mov
fildl
rcr
xchg
push
add
out
add
mov
mov
add
mov
xchg
push
add
flds
jne
call
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
push
add
cmpsl
mov
in
add
xchg
adcl
add
leave
ljmp
pop
jl
pop
add
fsubrs
movsb
add
push
push
popf
mov
mov
in
fdivr
lcall
jne
pushl
push
push
push
push
call
add
jnp
xchg
push
add
ja
add
jae
add
lods
stos
sti
pop
pop
enter
mov
push
add
jmp
repnz
add
add
add
fisubl
test
add
jno
sbbl
xlat
jnp
data16
add
xchg
add
jp
add
add
jb
add
push
push
dec
lea
add
push
sub
add
inc
rol
shl
sub
not
not
pop
sub
pop
push
push
push
push
push
push
push
call
xchg
popf
add
orl
bound
add
out
add
lds
pop
add
std
movsb
mov
stos
lods
add
jne
add
pop
add
push
add
add
lahf
xlat
push
test
xchg
test
int3
add
loop
mov
pushl
call
push
push
push
lea
push
lea
push
push
push
push
call
mov
jb
add
add
roll
add
cwtl
add
add
ffree
lds
cwtl
call
imul
testb
fiadds
inc
push
push
rol
shr
push
and
add
xor
sub
rol
add
add
pop
sub
shr
rol
shr
pop
push
push
call
add
leave
xchg
push
xchg
add
add
addr16
mov
mov
mov
add
into
or
lahf
mov
add
lods
add
jns
pushf
add
xchg
fistps
add
clc
add
push
push
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
jne
pusha
add
addr16
pop
cli
mov
addl
stos
jns
movsl
mov
div
mov
add
add
arpl
add
lcall
rclb
push
xchg
jnp
lea
push
call
add
lock
aad
jo
jae
add
push
add
std
out
mov
mov
mov
add
jne
mov
add
mov
add
in
in
hlt
pop
mov
push
push
push
push
call
mov
add
add
imul
pop
imul
cmc
jge
iret
add
xchg
pusha
add
jp
add
mov
sahf
pop
jbe
jo
add
addb
fwait
cld
in
jmp
push
mov
add
out
fisubrl
add
jmp
mov
add
in
hlt
pop
push
mov
push
push
push
push
push
push
call
add
bound
xchg
add
cmpsl
add
add
push
mov
insb
add
stc
xchg
add
out
mov
std
add
int
mov
lcall
pop
in
add
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
jbe
aam
loope
mov
roll
add
faddl
pop
add
lret
shl
mov
push
push
add
add
pop
add
add
jb
ffree
jmp
mov
add
fidivrs
add
lcall
ret
dec
add
push
lea
push
lea
push
lea
push
push
push
push
call
cmpsb
mov
jb
not
cltd
out
sbbl
add
mov
stos
add
mov
add
push
cltd
orb
mov
xor
push
push
call
add
add
jno
pop
addr16
mov
pop
add
jp
clc
add
pop
add
add
add
add
out
test
call
add
cmpsb
in
jmp
xchg
rolb
mov
mov
add
pop
mov
add
adcb
les
sub
pop
add
push
push
push
push
push
push
call
add
add
add
mov
add
add
add
jl
data16
mov
jnp
jp
add
lahf
push
pushf
add
std
add
add
add
mov
add
test
add
test
add
sub
pop
mov
xor
push
push
call
jge
mov
add
lods
jecxz
cwtl
popl
sti
jns
aad
jnp
add
mov
add
jb
add
out
negb
mov
data16
mov
add
ffreep
jbe
sub
pop
add
pop
push
lea
push
push
push
push
push
lea
push
push
call
add
jbe
fadds
add
add
lret
fsubrl
cmpsb
rcr
stos
flds
hlt
add
add
add
add
add
in
mov
add
add
add
add
push
add
add
roll
cmpsl
add
arpl
stos
leave
gs
testb
add
jp
mov
test
dec
add
cmp
or
inc
push
push
push
lea
push
lea
push
push
push
call
add
add
add
in
ret
mov
stc
cli
out
scas
out
mov
add
cli
fcmovnu
roll
jno
add
loope
add
call
sub
pop
xor
push
lea
push
push
push
push
push
call
add
add
movsl
mov
mov
cmp
add
add
fcoms
ljmp
pop
jl
jno
flds
lret
pop
jb
add
lods
mov
add
add
clc
add
neg
add
fidivl
out
ja
add
les
add
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
mov
test
addb
push
jno
add
add
xlat
add
addl
test
imul
fiadds
pop
add
add
cltd
xchg
out
lds
lods
add
add
lods
push
add
add
add
in
jmp
jmp
add
fwait
add
add
lcall
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
stos
call
sahf
add
idiv
test
xchg
mov
add
add
add
jo
pop
mov
add
jns
add
pop
push
add
mov
out
scas
popf
add
add
pop
add
shr
add
iret
pop
movsl
add
pop
add
iret
add
sub
pop
mov
xor
push
push
push
lea
push
push
call
add
push
mov
faddl
add
jecxz
jns
add
rolb
popl
jge
mov
stos
int3
test
xchg
div
test
add
add
data16
add
jne
sub
pop
sub
push
push
call
add
data16
idivl
add
filds
add
add
mov
hlt
test
lret
add
movb
add
lcall
rep
push
lea
push
push
lea
push
lea
push
call
fstpl
cli
int3
jo
add
add
add
add
add
pop
cmpsl
mov
lcall
add
insb
xchg
jne
je
sub
pop
pop
push
push
lea
push
call
int3
pushf
mov
je
add
js
mov
add
mov
leave
rolb
mov
add
loop
add
addl
hlt
add
push
push
lea
push
push
call
movb
pop
add
mov
mov
add
add
sarl
mov
add
imul
push
pop
add
add
sahf
imul
cli
add
mov
test
out
add
int3
jp
in
in
lock
add
add
push
push
push
lea
push
call
fbld
add
push
pop
push
test
mov
xchg
add
add
add
add
add
mov
add
mov
cld
jns
in
lock
lcall
inc
and
mov
lea
push
lea
push
lea
push
push
push
push
push
call
arpl
into
mov
mov
pop
stc
cmc
push
mov
mov
add
add
fsubr
sbb
add
cwtl
add
add
pop
out
add
xchg
lahf
out
add
push
add
mov
sub
pop
mov
xor
push
lea
push
push
push
push
push
lea
push
push
push
push
call
ljmp
add
in
add
mov
add
add
repnz
testb
stc
mov
pop
pop
add
add
add
faddl
add
add
lret
xchg
lret
xchg
addr16
out
mov
mov
in
fcomps
dec
sub
or
jb
push
push
push
lea
push
push
call
add
jmp
add
add
xlat
jl
out
add
not
mov
add
add
sahf
add
add
mov
mov
addl
xchg
call
add
pushf
mov
cmpl
jmp
add
lds
add
add
add
call
push
push
call
in
add
add
xchg
mov
cli
add
add
outsl
ja
mov
xchg
add
add
mov
mulb
pop
lods
add
bound
test
in
clc
pop
add
push
push
push
call
cwtl
add
loop
add
add
orl
mov
add
xlat
icebp
add
add
mov
lahf
imul
mov
cwtl
jmp
mov
lcall
ret
shll
jnp
jle
pop
mov
inc
add
add
jmp
movsl
add
add
fildl
add
add
bound
mov
add
push
mov
add
add
add
out
out
add
add
roll
add
mov
rolb
add
cltd
mov
lcall
rcll
mov
inc
push
push
lea
push
push
push
call
mov
add
push
add
out
add
add
pop
add
jge
add
add
xchg
lret
add
jmp
in
in
lcall
fsubrs
nop
mov
push
not
push
sub
add
inc
sub
inc
pop
not
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
fwait
icebp
jae
stc
divl
mov
cld
mov
fdivr
add
movsl
add
add
add
mov
pop
add
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
push
push
call
jae
add
add
add
jb
lods
add
add
add
add
mov
add
jle
mov
mov
jnp
add
push
arpl
add
lret
add
and
add
aam
ljmp
pop
push
push
push
lea
sub
xor
push
push
pop
add
inc
ror
shr
sub
rol
pop
shr
pop
push
rol
inc
sub
sub
pop
push
push
push
inc
sub
not
pop
call
push
push
push
push
lea
push
push
lea
push
call
addl
insb
add
out
aad
add
xchg
jne
add
add
mov
mov
add
add
rolb
arpl
mov
mov
fs
mov
imul
clc
imul
sahf
sub
pop
mov
push
add
rol
pop
push
push
shr
not
dec
rol
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
out
add
lret
lds
add
int3
mov
rolb
in
movl
xchg
pushf
loopne
push
add
jbe
mov
mov
xchg
add
add
pop
hlt
push
add
lea
add
pop
add
add
push
push
push
lea
push
lea
push
push
push
call
adc
add
lret
mov
add
lock
rclb
add
mov
fs
aad
mov
add
push
pop
jae
int3
rolb
add
pushf
outsl
in
push
add
jmp
add
mov
xor
push
pop
add
push
push
pop
mov
push
push
push
push
push
push
call
push
add
add
add
ret
in
roll
pop
add
add
fs
add
xchg
lcall
add
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
jl
add
add
pop
mov
add
fildl
mov
incb
jb
add
cld
mul
add
add
mov
add
add
lahf
add
mov
data16
add
mov
andb
xchg
add
sub
popf
in
lret
add
std
cmp
fdivr
lcall
les
add
add
shr
xor
pop
add
pop
push
push
push
push
push
push
lea
push
push
call
add
add
add
pop
imul
push
add
testb
pusha
out
add
mov
add
add
mov
clc
hlt
mov
add
cld
out
push
jb
add
add
jnp
fsubrs
add
stc
add
add
rolb
hlt
jno
sub
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
mov
in
add
add
mov
addl
fcomps
jo
mov
push
mov
add
lods
mov
add
cli
mov
pop
xor
push
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
add
add
out
aam
mov
add
lret
testb
add
add
add
movsl
idivb
sbb
pusha
lods
push
cwtl
loopne
lods
lods
jmp
cli
ljmp
pop
pop
movl
in
add
mov
add
clc
add
in
fdivr
lcall
les
inc
sub
pop
rep
mov
xor
push
push
call
mov
outsl
mov
data16
aad
xchg
add
pop
test
jo
fwait
mov
flds
xchg
jle
push
lret
clc
add
push
push
add
cwtl
scas
add
add
add
add
push
push
add
add
sub
pop
or
je
push
push
call
mov
add
add
cmc
movb
jns
xlat
loop
add
add
add
hlt
stos
int3
add
mov
lods
add
jl
add
js
leave
mov
xchg
add
rcr
add
jmp
call
sub
pop
mov
push
push
push
push
push
lea
push
call
jmp
jbe
out
int
iret
add
icebp
xchg
mov
ljmp
pop
add
mov
add
add
movl
in
pop
xor
push
push
push
push
push
call
cli
add
jo
mov
jbe
push
add
add
outsl
add
loop
jp
add
add
aam
into
cli
rolb
xchg
testl
clc
sbb
add
add
add
sub
pop
add
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
les
add
js
add
int
add
enter
aad
xchg
add
add
out
add
add
add
add
add
lock
loope
add
xchg
sti
push
xchg
add
add
aam
add
jmp
lcall
add
mov
rorb
lcall
push
sbb
or
lea
push
push
push
lea
push
push
push
lea
push
push
call
stc
pop
mov
add
mov
add
xchg
mov
lahf
cltd
cwtl
movsb
mov
jle
add
push
push
cmpsl
mov
ja
add
add
add
add
pushf
roll
add
mov
clc
pop
add
gs
add
fs
add
xlat
fwait
in
lea
les
add
in
fdivr
lcall
adc
push
push
lea
push
push
call
frstor
cwtl
roll
arpl
mov
add
mov
add
add
jp
mov
call
fs
add
out
leave
nop
call
add
add
add
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
call
test
pushf
loopne
fucomp
leave
test
add
xchg
add
loopne
repnz
aad
add
xchg
mov
add
add
push
add
testl
xchg
filds
add
repnz
push
push
push
push
call
add
pop
xchg
lcall
fistps
add
add
add
add
imul
in
in
lcall
jne
push
lea
push
push
lea
push
push
push
call
lret
mov
imul
popf
add
loopne
add
bound
mov
stos
add
lock
lcall
push
shl
pop
mov
xor
push
inc
add
pop
add
push
push
call
cld
outsl
jae
mov
add
add
les
mov
aad
out
add
jmp
mov
push
shl
add
add
add
add
mov
fnstenv
add
hlt
jne
mov
add
rol
add
out
lret
sub
pop
pop
rep
push
push
push
call
lahf
pop
lret
xchg
sub
lcall
fadds
add
sahf
mov
add
mov
add
jae
pop
add
test
sbbb
into
lret
icebp
add
add
fs
icebp
add
lcall
dec
sub
or
lea
push
push
lea
push
push
push
lea
push
push
push
call
xchg
into
add
add
add
add
imul
aad
add
add
xchg
add
add
lcall
add
add
add
bound
add
add
push
add
mov
jmp
add
add
fdivs
add
mov
add
sub
pop
xor
push
push
call
testb
mov
rclb
pop
push
push
pop
fdivr
scas
lret
lds
mov
mov
repnz
add
jns
sti
data16
je
out
add
iret
add
leave
add
fcomps
add
add
ja
mov
add
mov
stc
sub
pop
add
push
xor
pop
or
je
mov
push
push
push
push
push
lea
push
lea
push
call
add
jbe
lret
mov
add
add
add
add
mov
rol
test
in
mov
add
mov
incb
sub
pop
add
add
push
push
lea
push
call
add
ljmp
mov
popl
mov
lock
mov
clc
jl
mov
roll
mov
add
in
jne
movsb
test
push
add
add
add
fwait
push
push
jno
add
movsb
push
lea
push
push
push
push
call
xchg
movb
rcrl
push
jne
mov
add
add
add
add
add
mov
push
mov
add
mov
add
add
iret
out
loope
mov
addl
xchg
add
add
add
sub
pop
pop
push
push
sub
xor
shl
push
sub
add
lea
lea
sub
shr
ror
pop
sub
add
shl
pop
push
push
push
call
shl
shr
aad
jp
add
add
mov
add
add
addr16
iret
add
imull
subl
sub
pop
pop
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
add
add
add
lods
pusha
nop
add
jne
mov
test
add
lods
add
add
cwtl
jnp
call
loopne
mov
push
lea
pop
mov
push
rol
inc
pop
mov
jmp
push
push
push
push
push
push
call
xchg
flds
add
ficompl
pop
add
cwtl
add
mov
hlt
loope
add
add
std
data16
add
add
loop
movsl
xchg
add
xchg
jbe
icebp
add
add
add
jb
sub
pop
push
push
sub
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
in
add
cmc
popa
add
mov
cld
cwtl
jge
testb
nop
pop
jp
pop
fistpll
mov
add
jp
add
lcall
cld
push
inc
add
add
dec
pop
push
push
push
sub
not
not
pop
push
push
push
push
call
add
mov
clc
add
add
add
add
jle
add
mov
pop
fidivrs
push
add
addl
add
fs
xchg
add
lcall
push
push
push
lea
push
push
lea
push
lea
push
push
call
loop
mov
add
push
mov
nop
jb
mov
add
lcall
movl
jo
test
add
jnp
notb
mov
add
mov
imul
js
jae
in
loopne
lcall
inc
cld
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
fidivs
addl
add
addb
lods
fdivl
int3
add
out
add
add
add
stos
enter
push
jne
add
add
lods
jo
stos
add
push
stos
les
addr16
mov
fistpl
push
add
add
roll
jge
add
in
fcompl
push
ror
pop
pop
pop
push
add
pop
pop
push
rol
add
pop
leave
ret
push
lea
push
push
call
out
add
roll
int
clc
push
out
fildl
push
add
mov
add
sahf
mov
add
jge
push
stos
cmc
add
add
push
xchg
add
add
nop
add
je
movsb
test
xchg
jb
movsl
out
add
insb
jecxz
add
addl
add
popf
sub
pop
push
push
sub
pop
mov
push
sub
dec
add
pop
add
push
pop
push
push
sub
pop
push
push
push
push
lea
push
call
add
mov
mov
add
popf
mov
iret
mov
mov
mov
add
mov
aad
jb
movb
into
add
cmpl
roll
xchg
add
imul
add
add
nop
aam
mov
cmpsl
add
add
push
push
lea
push
lea
push
push
lea
push
push
call
add
addr16
add
add
jbe
add
add
jmp
add
mov
add
lock
movsl
push
jbe
in
call
movl
addl
push
pop
test
je
push
push
push
push
call
iret
push
xchg
jnp
lea
add
add
imul
push
push
push
fs
popf
add
lret
add
add
mov
add
add
add
add
push
insb
add
add
add
in
jmp
loope
fistpll
lock
mov
push
push
push
push
call
push
clc
push
push
hlt
add
roll
jb
add
mov
testl
fmul
mov
add
add
js
push
gs
add
add
xchg
add
lcall
mov
lock
pop
pop
push
push
push
push
push
call
addl
add
test
xchg
xchg
lcall
les
stos
cwtl
addl
int3
addl
testb
mov
add
add
test
in
in
lcall
push
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
cmpsb
lahf
mov
add
add
fimuls
les
outsl
enter
int
add
add
lea
int3
add
arpl
pop
xchg
pop
push
mov
loope
add
iret
add
add
movsb
jae
out
add
scas
lret
add
pop
add
add
add
lcall
push
not
pop
leave
push
push
push
push
lea
push
call
mov
jmp
add
sbbb
add
pop
mov
add
add
addl
add
cltd
fwait
add
subl
jecxz
mov
jmp
push
jno
in
add
fildl
in
mov
lret
in
lcall
add
push
push
lea
push
call
push
add
mov
roll
arpl
push
xchg
add
mov
add
aad
add
lret
sub
pop
push
mov
push
shl
ror
shr
lea
pop
add
push
dec
pop
push
push
add
add
pop
push
push
sub
pop
push
push
push
lea
push
push
call
pop
not
mov
add
not
xchg
mov
add
mov
add
movsl
add
bound
ljmp
mov
mov
lret
add
out
icebp
jnp
mov
je
add
movsl
mov
add
add
iret
rcrb
add
rolb
xchg
jne
aam
cmc
sub
pop
push
push
push
call
insb
mov
add
jb
shrl
add
xchg
add
arpl
push
add
add
roll
add
add
xchg
add
gs
push
filds
mov
lahf
cwtl
sti
ja
pop
ljmp
add
add
push
in
lret
fistpll
in
clc
lcall
inc
cld
add
add
addl
push
shr
shl
pop
push
call
push
lea
push
push
push
push
push
push
push
lea
push
push
call
movsb
add
add
xchg
add
adc
add
xlat
rolb
mov
xchg
mov
ror
push
jmp
xchg
stc
add
testl
mov
leave
add
push
add
add
lret
xchg
pusha
out
jae
sub
pop
mov
pushl
push
push
push
push
push
push
lea
push
call
add
add
subb
arpl
stc
add
pop
std
add
add
add
add
add
mov
scas
push
cmc
cmc
add
add
add
add
mov
add
mov
push
xchg
add
sub
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
test
lret
push
mov
loope
ret
not
push
insb
fimull
add
add
insb
iret
idiv
add
loop
mov
add
add
ljmp
add
lret
add
add
lret
mov
add
pop
add
loopne
ret
ljmp
add
add
lcall
add
loop
call
xlat
pop
cmpl
jne
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
addl
xchg
jge
add
out
push
popa
add
mov
add
test
add
out
add
gs
test
add
mov
xchg
mov
repnz
mov
mov
popf
add
out
add
add
xchg
mov
mov
sahf
add
lds
add
lcall
push
add
add
xor
shl
pop
pop
pop
push
push
lea
push
lea
push
push
push
push
call
add
fwait
movl
mov
add
pop
imul
add
mov
xchg
test
push
pop
fisubrl
flds
int
out
add
add
fwait
add
add
lcall
pusha
add
in
in
lcall
push
lea
push
call
fidivs
add
cld
add
mov
add
add
pop
lahf
roll
add
add
pop
pop
xchg
int
movsb
pop
add
fiaddl
insb
les
jp
enter
not
int
add
add
cld
lds
lret
sarb
add
pop
leave
ret
push
push
call
add
xchg
mov
rolb
mov
ja
lock
add
in
add
mov
add
shlb
cltd
leave
xor
mov
pop
pushf
add
cli
loopne
push
shlb
add
lret
mov
add
popa
mov
test
sub
pop
push
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
add
add
add
mov
mov
sub
shlb
push
jae
add
int
into
mov
xchg
jge
add
test
add
stc
mov
in
xchg
add
jmp
int
sarb
push
ljmp
add
add
lcall
cld
push
push
lea
push
lea
push
push
push
call
mov
testl
add
add
cmpsb
lods
pop
insb
add
add
scas
pop
iret
mov
mov
test
add
add
mov
add
add
into
mov
add
repnz
call
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
add
add
add
in
pop
add
arpl
fwait
add
add
add
fsubrp
xchg
fdivrs
pop
js
aam
add
pop
rolb
leave
int3
add
call
sub
pop
push
push
add
pop
push
push
shr
sub
add
pop
push
push
dec
shl
sub
pop
movl
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
stos
push
aad
popf
add
add
out
mov
aad
imul
add
add
add
shl
add
add
loop
aam
in
loopne
lcall
add
dec
and
dec
enter
call
int3
xlat
shl
add
push
add
fldl
push
add
call
add
jne
arpl
xchg
jmp
movsl
add
add
jnp
add
mov
test
int3
mov
jb
js
ljmp
pop
call
push
dec
add
inc
sub
pop
push
push
inc
pop
call
subl
push
not
sub
not
inc
pop
cmpl
jne
push
push
push
push
push
call
add
mov
add
add
aam
add
shlb
add
pop
add
clc
add
add
add
push
mov
xchg
cmpsb
jbe
sub
pop
pop
pop
push
push
push
call
add
add
aam
add
add
mov
add
hlt
movb
mov
xchg
jmp
add
popa
imul
fiaddl
fsubr
jp
shrl
add
add
push
les
rolb
imul
sub
pop
pop
push
push
push
push
lea
push
call
stos
xchg
add
iret
lcall
add
mov
lods
add
rcll
loopne
mov
stos
add
mov
add
add
int3
jnp
xchg
in
fadds
add
add
testb
mov
jb
data16
int3
into
cmc
data16
scas
add
add
add
add
add
in
lcall
push
push
push
push
push
push
call
add
mov
add
add
add
mov
stos
pop
push
repnz
jne
bound
jno
stos
mov
ljmp
pop
add
add
jle
cwtl
test
sahf
faddl
add
test
std
add
add
cli
imul
add
sub
pop
leave
push
push
push
push
lea
push
push
push
lea
push
push
call
scas
gs
xchg
lcall
add
xchg
add
pop
mov
mov
imul
in
fdivr
lcall
push
add
add
pop
push
push
push
push
lea
push
call
add
loopne
pushf
jnp
add
fidivl
add
push
ljmp
mov
jne
ret
pop
pop
mov
scas
add
pusha
add
lret
jae
add
add
add
scas
ljmp
lock
lcall
in
push
rol
pop
add
push
lea
push
lea
push
lea
push
push
lea
push
push
call
test
mov
fistpll
add
arpl
cltd
pop
aam
jmp
lcall
add
add
add
mov
add
andb
mov
insb
mov
jo
call
movsl
add
add
mov
push
push
push
call
push
mov
add
lret
arpl
add
lret
add
mov
add
iret
clc
add
add
add
add
sub
filds
lock
add
jno
mov
mov
add
add
int
pushf
pop
hlt
add
add
iret
sub
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
ret
pop
icebp
add
jne
add
add
cli
pop
movsb
mov
fnstcw
mov
xlat
rorl
and
add
insb
mov
add
scas
add
push
sub
lea
dec
pop
push
push
add
pop
mov
lea
push
inc
inc
sub
shl
pop
sub
push
push
push
push
push
push
lea
push
push
push
call
pop
pop
test
lret
mov
add
add
mov
add
push
rcrb
lret
add
int3
add
add
add
add
push
aam
add
xchg
add
add
add
jne
push
loopne
xchg
lods
add
add
loop
cwtl
jmp
sub
pop
mov
push
inc
shl
pop
shr
push
push
push
push
push
push
push
push
push
push
call
add
stos
add
push
add
rolb
xorb
add
shlb
add
push
ror
mov
jle
add
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
arpl
add
add
mov
outsl
lock
fistps
add
pop
faddp
insb
jle
movsb
xchg
mov
jl
mov
enter
push
jp
cwtl
bound
add
jne
adcb
add
in
fcomps
inc
cld
mov
push
rol
dec
add
add
pop
add
push
lea
push
push
lea
push
lea
push
push
call
add
out
mov
add
test
xchg
xchg
rclb
xchg
add
lods
mov
flds
pop
in
std
fadds
pop
add
add
mov
mov
add
imul
mov
cwtl
mov
cld
add
sub
pop
add
push
pop
mov
push
add
add
add
pop
mov
cmp
jne
push
lea
rol
sub
pop
cmp
jne
push
push
push
push
push
lea
push
push
push
push
push
call
add
call
add
add
pop
shlb
add
add
jo
add
add
pop
xchg
jns
jb
cmpsb
pop
arpl
add
leave
add
mov
loopne
add
pop
add
push
mov
mov
out
mov
les
sti
pusha
xchg
mov
lcall
inc
adc
add
add
add
push
push
call
mov
fcoml
mov
xchg
mov
add
call
popl
jo
stos
add
add
add
scas
mov
jp
cmc
push
mov
filds
sub
pop
jmp
push
push
push
lea
push
lea
push
call
mov
movsl
adcb
mov
add
mov
test
clc
cli
push
pop
push
add
add
sahf
jae
add
mov
mov
add
add
stos
test
int
scas
lcall
lock
test
sti
push
mov
sbb
add
mov
sbb
add
in
in
pop
mov
mov
push
lea
push
push
push
push
call
out
jl
add
add
add
jmp
stos
add
mov
mov
cld
jae
push
add
jle
add
add
nop
add
pop
pop
add
enter
aad
scas
ja
add
mov
aad
jl
add
ljmp
addl
add
mov
push
push
call
add
add
test
add
add
add
sti
add
push
jp
add
rcr
xchg
rcrl
out
mov
jne
push
in
push
add
sti
add
push
addb
gs
pop
mov
push
shl
lea
shl
add
pop
movl
jmp
push
not
add
sub
shr
pop
mov
push
xor
pop
mov
cmp
jne
push
push
push
call
iret
add
jmp
add
pop
pop
add
fld1
add
loop
cmpsl
stc
push
pop
add
faddl
jmp
add
inc
adc
add
add
add
rol
ljmp
mov
inc
cld
push
push
call
shr
cld
add
movb
add
xchg
mov
add
mov
rclb
outsl
sti
sti
mov
test
add
add
into
bound
fldl
cmpl
jne
mov
push
shr
add
rol
pop
movl
jmp
push
add
lea
pop
pushl
push
pop
pop
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
pop
pop
fsub
test
mov
loopne
nop
fsub
fmull
repnz
lret
pop
add
loope
add
add
add
pop
push
add
test
cli
add
imul
into
mov
lock
repnz
enter
add
add
lcall
inc
or
inc
sbb
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
push
iret
out
jl
movb
mov
add
push
mov
ja
xchg
add
stc
cld
mov
push
add
out
xchg
cmpb
xlat
sub
pop
mov
push
push
xor
add
push
sub
add
sub
dec
inc
pop
not
sub
lea
pop
push
pop
push
call
push
push
push
push
push
push
push
call
lods
add
pop
jge
mov
pop
pop
add
loopne
add
add
jl
scas
out
jo
shrl
lea
rolb
push
add
in
add
mov
lcall
js
int3
fldz
ret
jecxz
add
push
push
dec
dec
push
xor
add
shl
sub
lea
pop
sub
rol
shr
pop
push
rol
add
pop
push
push
dec
add
rol
pop
call
push
sub
dec
pop
cmpl
je
push
push
not
rol
push
and
add
sub
ror
shl
pop
ror
inc
pop
push
push
push
push
lea
push
push
push
push
call
add
rolb
testb
push
mov
nop
ror
stc
out
lret
lahf
add
leave
add
add
add
fwait
imul
add
mov
roll
mov
pop
out
mov
mov
add
jne
out
add
sub
pop
push
push
push
lea
push
call
outsl
test
jge
jle
mov
add
mov
push
add
add
add
push
mov
add
jp
lods
sarb
je
add
mov
mov
popf
lret
aad
arpl
add
push
add
imul
add
add
je
add
insb
add
pop
cmpsl
insb
sub
pop
call
cmpl
je
push
push
ror
push
sub
add
add
rol
rol
sub
add
inc
pop
rol
pop
push
push
push
push
push
lea
push
call
add
mov
cmpb
mov
pop
jno
add
push
cmpsl
movsb
sti
addl
push
add
add
lea
push
add
jo
imul
jnp
clc
add
push
jge
push
scas
mov
mov
in
call
push
push
ror
pop
call
cmpl
je
push
push
dec
sub
push
sub
add
rol
shl
shr
sub
sub
xor
rol
pop
sub
dec
pop
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
pusha
mov
jne
jmp
add
add
add
aad
lea
sti
add
add
insb
mov
sbbl
add
jne
jbe
loope
popl
sub
pop
push
call
push
push
lea
push
push
push
push
call
insb
rolb
mov
add
jb
mov
fiadds
xchg
jns
add
add
jl
cld
loopne
test
mov
add
xchg
lahf
mov
roll
add
call
rol
je
push
push
sub
lea
shl
shl
push
or
not
add
add
add
ror
sub
shr
rol
pop
ror
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
lret
add
int
hlt
add
jae
add
lret
mov
mov
add
push
fsubrs
js
fdiv
add
movsb
add
add
lcall
call
push
shr
not
pop
cmpl
je
push
push
add
inc
ror
sub
push
or
inc
add
lea
xor
sub
shr
inc
shl
pop
sub
sub
pop
push
pop
push
push
push
lea
push
push
push
push
call
test
arpl
mov
add
add
mov
mov
xchg
movsl
stc
andb
lret
jl
add
shll
pop
movsb
enter
add
pop
add
pop
call
cmpl
je
push
push
lea
not
push
and
add
xor
ror
add
sub
add
lea
sub
pop
pop
push
dec
not
pop
push
push
rol
xor
pop
call
cmpl
je
push
push
lea
push
and
add
ror
sub
shl
sub
add
pop
xor
pop
push
sub
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
scas
popa
xchg
add
add
add
mov
fmuls
add
movsl
roll
mov
fdivr
lcall
add
push
push
lea
push
push
call
add
xchg
leave
add
test
xchg
je
call
xchg
add
xchg
add
add
add
add
add
add
gs
shll
sub
pop
cmpl
je
push
push
dec
add
push
sub
add
lea
add
sub
add
pop
shr
rol
sub
pop
push
push
push
push
push
lea
push
push
call
sahf
pusha
scas
cltd
pop
add
fcomps
cmpsb
xchg
add
add
adc
in
add
xchg
jae
stc
mov
jb
add
in
add
lcall
push
push
push
call
push
add
add
xchg
add
add
rorb
roll
add
pushf
add
lret
fcomps
leave
add
shrl
mov
push
push
push
push
push
push
lea
push
call
add
xchg
hlt
in
add
enter
add
ljmp
test
lcall
jmp
mov
in
pop
fbld
les
out
mov
roll
mov
in
cld
mov
cmpl
pop
add
rcr
fs
push
xchg
add
fiadds
cmp
test
add
add
cwtl
sub
or
not
add
xor
dec
sub
sub
dec
shl
pop
add
inc
shl
pop
push
shr
sub
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
test
add
add
push
cli
stc
out
mov
add
push
fnstsw
imul
mov
mov
pop
call
push
not
pop
cmpl
je
push
push
sub
push
push
pop
add
add
dec
dec
sub
ror
sub
pop
ror
pop
push
not
add
pop
push
call
push
push
push
push
push
push
push
lea
push
push
call
push
push
add
test
jmp
mov
loope
ja
aam
scas
out
push
lds
mov
roll
add
cwtl
out
sahf
je
add
add
add
mov
pushf
lret
add
lret
stos
scas
sub
pop
cmpl
je
push
push
push
and
add
shr
dec
shl
sub
ror
not
pop
ror
inc
pop
push
rol
dec
add
lea
pop
push
push
xor
shl
ror
pop
call
cmpl
jne
push
push
lea
push
call
add
add
lea
jno
mov
xor
int3
fidivs
add
push
mov
mov
jl
and
out
pop
add
add
add
add
sub
pop
mov
movl
push
lea
push
lea
push
push
call
addr16
pushf
jnp
mov
add
add
sahf
sahf
push
mov
add
add
test
mov
mov
into
push
int
pop
add
rolb
xchg
pop
jle
mov
add
add
mov
stos
int3
add
add
lcall
lock
jmp
push
lea
push
push
call
mov
push
add
pop
rcl
nop
xchg
stc
add
mov
add
mov
call
add
leave
cld
lds
lods
add
pusha
add
fwait
add
add
loopne
add
add
jmp
sti
into
add
push
filds
icebp
sub
pop
xor
pop
push
not
lea
pop
pop
pop
push
push
lea
push
lea
push
call
out
xorl
mov
add
add
movsb
in
add
ja
pop
pushf
push
outsl
add
cli
add
add
xchg
outsl
add
jmp
add
mov
mov
add
iret
bound
add
mov
in
lock
lcall
push
lea
sub
sub
pop
leave
push
push
push
push
push
push
push
call
ret
add
lret
add
pusha
fsubs
mov
add
add
add
add
negb
add
test
movb
rolb
in
in
lcall
or
push
lea
push
push
push
push
push
push
call
scas
aam
add
push
jmp
outsl
in
add
add
mov
add
add
add
mov
add
mov
add
add
add
sub
pop
push
mov
push
push
push
push
push
call
sarl
push
add
add
add
pop
xlat
std
sti
add
jae
imul
lahf
add
mov
mov
mov
add
add
add
movl
add
add
jge
add
add
pusha
add
data16
mov
popa
mov
ror
sub
pop
add
cmpl
jne
push
push
sub
rol
lea
push
or
not
add
not
shr
shr
sub
lea
lea
pop
inc
inc
rol
pop
push
shl
pop
pushl
push
add
xor
add
pop
call
push
push
push
push
push
call
pop
iret
add
shll
movl
imul
fildl
cltd
add
add
add
add
jne
fistl
add
add
lahf
pop
rcl
mov
shl
jnp
add
enter
mov
movsb
add
shr
mov
push
lea
push
push
call
add
add
lcall
add
add
cltd
add
stc
lock
add
mov
push
add
add
add
add
repnz
pop
cmpl
jne
mov
push
lea
pop
call
push
rol
pop
ret
push
lea
rol
xor
pop
jmp
push
not
inc
rol
sub
pop
cmpl
jne
push
push
inc
xor
dec
sub
push
or
inc
add
sub
add
not
shl
sub
pop
inc
sub
pop
push
lea
ror
pop
pushl
push
push
push
push
lea
push
push
push
call
lahf
add
add
add
ror
add
add
add
int3
outsl
add
std
add
push
mov
add
xchg
test
jle
into
add
add
add
cltd
in
mov
jne
add
movl
push
push
push
push
push
push
call
add
divl
add
enter
pusha
jmp
add
in
add
fistl
fwait
scas
stos
add
add
add
add
in
out
add
je
mov
mov
xchg
add
xchg
add
xchg
addb
pop
push
push
pop
call
jmp
push
push
push
push
call
add
ja
add
add
loopne
test
jne
ljmp
mov
pop
add
add
add
loope
add
jbe
shrb
mov
lock
cmpl
je
cmpl
jne
push
shl
ror
pop
mov
push
rol
pop
mov
push
push
sub
pop
call
dec
push
and
push
push
call
push
add
nop
pop
add
mov
fwait
mov
fwait
xchg
andb
popa
ret
fsubr
sarl
call
add
mov
in
add
add
add
add
arpl
add
push
mov
sahf
add
mov
add
in
frstor
shr
mov
in
lock
lcall
push
adc
add
sub
ret
xor
add
dec
sub
lea
sub
sub
shl
pop
add
add
pop
push
push
call
mov
add
rolb
add
movb
mov
mov
flds
add
mov
add
add
cmc
jo
mov
sub
pop
pushl
call
push
shr
add
pop
call
push
push
not
shl
push
or
not
add
xor
shl
add
sub
rol
shl
ror
pop
xor
sub
pop
push
lea
pop
pushl
push
push
push
call
imull
aad
jl
shrb
add
add
add
lret
add
xchg
scas
add
fadds
add
add
add
add
mov
je
xchg
lods
add
add
mov
mov
add
pop
add
jge
lods
lock
out
lds
ds
add
arpl
sbb
xchg
cmp
add
lds
add
pop
add
ret
mov
sahf
fiaddl
mov
fldl
roll
add
jno
loopne
push
add
lret
gs
pop
call
push
push
add
rol
xor
push
or
not
add
shr
sub
ror
xor
pop
add
pop
push
push
push
call
push
push
add
pushf
xchg
add
mov
mov
add
mov
push
push
sahf
mov
cmpsb
pop
stos
add
lcall
jne
call
push
dec
shl
rol
add
pop
call
push
push
shl
push
xor
add
dec
sub
lea
add
ror
pop
shl
pop
push
push
push
push
push
push
lea
push
call
out
flds
jmp
add
loope
mov
test
in
add
call
add
lods
add
fildl
add
int
in
in
lcall
jne
push
sub
pop
call
call
push
push
rol
push
xor
add
inc
sub
add
pop
shl
sub
pop
push
add
lea
not
pop
pushl
call
push
pop
call
push
push
add
lea
rol
push
xor
add
sub
sub
shr
pop
xor
pop
push
add
shr
pop
pushl
push
xor
not
inc
add
pop
call
push
rol
rol
pop
call
push
push
ror
ror
not
push
or
not
add
inc
sub
lea
shl
sub
pop
add
shr
pop
push
ror
pop
pushl
push
sub
xor
ror
pop
call
push
lea
push
push
push
push
lea
push
push
call
add
rclb
mov
shlb
mov
add
xchg
and
pop
js
bound
push
mov
add
push
add
add
hlt
mov
push
cltd
testl
in
in
call
push
push
not
push
or
inc
add
shr
xor
inc
sub
add
pop
dec
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
mul
add
mov
add
xchg
add
hlt
jb
test
cld
jl
leave
leave
mov
stos
push
cmc
xchg
jbe
add
add
jl
add
imul
stos
loope
add
addr16
mov
push
ret
jno
add
cld
add
add
enter
add
lcall
jne
push
push
push
push
push
lea
push
lea
push
call
mov
fistpll
add
add
mov
lds
add
push
xlat
jnp
add
add
push
mov
pop
outsl
les
pop
add
xchg
pop
in
mov
add
add
push
mov
lock
add
add
in
in
call
push
shr
add
pop
call
push
push
not
push
push
pop
add
sub
sub
ror
sub
pop
add
sub
pop
push
lea
push
push
lea
push
push
push
push
push
push
call
add
mov
add
add
xchg
mov
imul
jmp
faddl
push
add
mov
add
add
movsb
add
into
mov
push
loop
add
add
add
iret
add
rolb
add
subb
fcompl
jne
push
not
pop
call
push
not
pop
call
push
push
inc
push
sub
add
sub
dec
dec
pop
shr
sub
lea
rol
pop
push
lea
push
push
lea
push
push
push
push
lea
push
call
pop
add
add
add
movsb
add
rclb
add
add
add
ljmp
jbe
mov
add
lcall
jne
call
push
ror
pop
lea
push
sub
pop
push
call
push
push
sub
push
or
inc
add
shl
sub
shr
sub
dec
sub
shl
not
pop
not
add
xor
not
pop
push
push
push
push
call
add
imul
stos
add
addb
mov
xchg
cltd
add
add
add
add
mov
add
add
push
mov
cmpsl
add
jmp
in
lock
pushl
push
add
xor
not
pop
call
push
dec
not
rol
pop
call
push
push
add
add
push
sub
add
rol
sub
shr
pop
dec
xor
add
pop
push
lea
push
push
push
lea
push
call
push
mov
add
stc
add
add
iret
rolb
arpl
mov
jno
test
push
mov
call
add
add
add
mov
add
shll
mov
pop
cltd
loope
sti
add
fldcw
xlat
mov
hlt
mov
xlat
test
int
add
lcall
jne
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
fisubl
mov
mov
clc
add
filds
pop
arpl
lods
add
add
lahf
add
add
clc
add
test
add
stos
add
mov
fldl
add
fs
pop
call
push
dec
sub
lea
pop
call
push
push
lea
sub
push
xor
add
dec
inc
sub
sub
ror
lea
pop
shl
shr
add
pop
push
sub
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
add
push
addl
push
add
lea
sahf
cwtl
sub
stc
add
xchg
pop
cmc
jmp
add
mov
out
xchg
xchg
add
int3
pop
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
call
add
aad
pop
add
xchg
jbe
add
jbe
lret
hlt
mov
fiadds
add
add
cmp
imul
xchg
loop
mov
fndisi(8087
out
add
add
shrb
lret
push
push
sub
add
lea
not
sub
sub
shr
xor
lea
inc
pop
ror
sub
lea
pop
push
push
push
push
lea
push
push
push
call
lahf
push
xchg
add
movsl
stos
lea
enter
mov
add
pop
push
lahf
iret
mov
add
add
js
pop
add
sub
pop
pushl
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
repnz
sti
add
add
add
xchg
add
in
cli
pop
add
mov
add
add
add
add
add
cli
cltd
jae
jle
test
cwtl
rorb
testl
stos
sbb
add
pop
add
push
sub
lea
push
xor
add
sub
add
rol
add
sub
lea
shl
shl
lea
pop
dec
rol
shr
ror
pop
push
push
sub
lea
shl
sub
push
or
inc
add
xor
sub
rol
pop
sub
rol
shr
pop
push
shl
pop
call
push
push
lea
push
call
add
add
test
fwait
lock
scas
add
add
loopne
add
xlat
mov
sti
add
add
mov
mov
stc
add
add
add
add
xchg
arpl
jbe
add
add
mov
je
jnp
mov
gs
lods
stos
add
lcall
dec
jne
push
push
push
push
lea
push
push
push
push
call
clc
fidivl
add
push
push
icebp
add
add
mov
add
add
in
add
add
add
call
loop
add
popf
pop
add
xchg
movsl
scas
sub
add
les
mov
loopne
lcall
flds
add
mov
push
xor
pop
int
lea
push
push
lea
sub
push
or
not
add
add
add
add
shl
sub
dec
pop
lea
pop
push
ror
shl
sub
pop
pushl
push
push
lea
push
push
push
push
call
add
add
movsb
cltd
imul
add
mov
add
add
jo
jo
mov
push
addr16
add
call
call
add
push
lea
push
lea
push
push
call
movsl
mov
les
fstl
add
add
push
add
shl
mov
push
jle
xchg
mov
rolb
js
lcall
pop
pushfw
add
add
sub
pop
push
call
push
push
push
sub
add
shr
shl
add
sub
sub
pop
sub
shl
shr
pop
push
push
push
push
push
lea
push
push
call
mov
pop
add
cli
shl
add
fisubs
add
pushf
jge
jle
lea
mov
mov
aam
add
add
mov
jne
push
push
call
out
add
xchg
add
add
sbb
add
jns
add
mov
mov
cwtl
add
out
je
jae
into
add
int
add
rorl
in
js
stos
add
add
pusha
pop
mov
add
add
sub
pop
call
push
push
call
add
add
pop
call
add
cltd
ljmp
outsl
add
add
add
hlt
cmc
add
cmpsb
add
add
add
add
in
insb
fwait
stos
add
add
lcall
rclb
jno
push
push
push
push
call
fadds
jl
lret
xchg
cmpl
add
add
int3
enter
push
add
insb
mov
call
stos
lods
add
cltd
lea
jp
cmpsl
pop
mov
add
je
add
cltd
scas
je
faddl
cwtl
ficoms
add
jnp
fadds
lcall
inc
cld
push
sub
inc
pop
lea
push
push
shl
xor
ror
rol
push
push
pop
add
not
not
sub
sub
pop
inc
pop
push
push
push
call
lods
add
push
add
add
rcrb
cwtl
push
xabort
mov
pop
add
add
add
xchg
and
sahf
call
sub
pop
pushl
call
push
push
call
fiaddl
jecxz
jbe
lret
add
int
subl
push
cltd
xchg
cmpsb
add
int
pop
pop
jae
add
add
mov
add
push
push
jmp
ficomps
test
in
clc
lcall
add
push
push
shl
not
add
pop
push
push
push
push
push
call
add
add
mov
add
push
add
jns
loop
add
out
in
jmp
add
xchg
stos
out
rolb
ror
aad
test
rcr
mov
cltd
sbb
mov
add
scas
stos
add
sub
pop
pushl
push
push
lea
add
push
or
not
add
xor
inc
sub
dec
pop
sub
sub
rol
pop
push
lea
push
lea
push
push
lea
push
call
add
add
add
stos
add
xchg
add
data16
mov
arpl
push
add
add
roll
xchg
add
mov
add
mov
add
movl
lcall
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
std
add
fwait
fwait
add
lahf
jp
mov
push
jae
add
loop
scas
faddl
aam
add
loop
popf
out
add
sarl
out
add
shlb
jecxz
mov
mov
mov
lcall
shrb
shl
in
push
rol
sub
shr
push
sub
add
not
inc
xor
sub
add
add
shr
pop
shr
shr
ror
pop
push
add
add
pop
pushl
push
ror
pop
call
push
push
lea
push
push
push
push
call
add
add
add
push
jae
push
test
arpl
add
mov
test
add
add
add
into
mov
add
add
add
add
add
jbe
sub
pop
call
push
push
not
push
and
add
ror
lea
lea
sub
sub
inc
pop
rol
sub
pop
push
lea
push
push
push
push
push
push
call
add
add
out
testb
mov
add
call
cld
add
xchg
xchg
add
scas
leave
lahf
rcrb
imul
out
insb
add
mov
in
sbbl
mov
in
pushl
push
push
push
call
fnstenv
nop
add
add
add
movsl
mov
add
mov
shll
jno
add
sti
addr16
add
xchg
xchg
pop
in
leave
xlat
add
out
jl
out
mov
iret
add
push
add
jno
enter
add
xchg
pop
sub
pop
call
call
push
lea
push
push
push
push
push
push
push
lea
push
call
test
lds
add
add
add
add
mov
jmp
test
scas
in
push
push
in
push
push
sahf
add
nop
scas
add
mov
mov
mov
add
mov
in
popa
add
add
sub
pop
pushl
push
push
push
push
push
push
push
push
push
call
lret
mov
mov
pop
mov
fdiv
jecxz
mov
mov
add
add
mov
rolb
cltd
popf
lea
add
add
insb
add
add
add
add
lcall
xchg
addl
and
push
push
push
call
push
add
sahf
lahf
fadds
add
add
jmp
out
testb
test
add
fadds
add
repnz
fcomps
mov
cli
add
add
push
rol
fldenv
mov
jle
mov
push
loope
in
hlt
pop
jmp
push
push
shl
xor
push
or
inc
add
rol
ror
lea
sub
add
rol
shr
pop
shl
lea
not
pop
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
add
pop
sarb
int3
rolb
cli
aam
add
test
add
roll
jno
mov
mov
lea
push
jae
mov
movsb
je
aam
add
jb
lcall
pushl
push
push
lea
push
push
push
push
call
outsl
jmp
add
mov
leave
mov
enter
jmp
xchg
add
int
test
add
mov
testb
pop
add
sti
push
mov
pop
add
add
add
pop
add
add
data16
add
mov
call
add
push
push
sub
add
sub
pop
call
push
push
dec
ror
rol
shr
push
push
pop
add
sub
sub
sub
pop
add
not
shl
add
pop
push
inc
dec
sub
pop
pushl
push
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
call
add
in
add
add
add
mov
mov
cltd
add
fcoms
jp
test
add
jns
add
roll
add
pop
adcb
add
int3
in
incb
cmpl
add
movsb
sub
pop
push
push
push
lea
push
push
push
push
call
mov
mov
call
add
subb
xchg
add
push
loope
xchg
add
push
imul
push
sub
pop
leave
push
xor
add
pop
add
push
rol
add
sub
pop
pop
push
push
push
call
scas
sarb
add
arpl
add
add
notb
std
add
add
add
jne
imul
push
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
ret
add
pop
test
add
add
or
add
add
mov
je
in
movsb
popa
jns
pop
add
add
add
add
scas
js
mov
add
xlat
arpl
add
add
lea
lcall
push
push
push
push
call
add
xchg
push
add
mov
add
add
mov
test
mov
hlt
fbstp
add
lret
jne
loope
xlat
imul
arpl
mov
add
ret
clc
mov
int3
sub
pop
xor
inc
push
lea
push
push
push
push
push
push
push
push
call
add
addr16
int3
xchg
add
roll
add
testb
lret
add
movsb
add
add
add
xor
lock
add
xchg
lcall
mov
add
push
xchg
add
faddl
add
lcall
or
push
push
lea
push
push
push
push
push
push
push
push
call
sub
pusha
out
xchg
in
add
add
xchg
inc
add
add
cmc
add
pop
roll
add
stos
add
mov
lcall
xlat
push
nop
jmp
add
add
add
jno
rorl
add
add
pop
leave
push
shr
pop
ret
push
push
push
push
push
call
add
shll
ror
lret
in
add
loope
add
in
add
jne
add
add
add
call
add
roll
jb
push
add
xorl
xlat
insb
enter
test
jne
mov
data16
lcall
add
mov
add
lcall
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
stc
addb
fnstsw
mov
cmpl
add
lds
mov
adcb
add
add
jecxz
mov
in
add
movl
mov
pop
jnp
flds
add
add
popa
jl
in
loopne
mov
cmpl
jne
push
lea
pop
mov
jmp
push
push
lea
push
push
call
push
add
add
int3
mov
add
std
shr
gs
enter
add
ljmp
test
add
push
mov
ret
pop
mov
push
pop
add
cmpsb
lcall
lock
lcall
inc
or
call
push
adc
loopne
pop
and
push
push
lea
push
push
push
lea
push
push
call
jle
add
jl
xchg
add
scas
add
add
add
mov
pop
shlb
add
fidivs
pop
add
add
add
add
filds
fisttps
lcall
leave
xor
push
not
shl
not
pop
add
push
lea
push
lea
push
lea
push
call
pop
fdiv
jge
fdivrp
add
add
insb
sti
xchg
mov
ret
stos
xchg
pop
xchg
jns
add
add
in
mov
flds
mov
mov
ja
pusha
add
sub
pop
xor
push
lea
push
push
lea
push
lea
push
push
push
call
add
jb
out
int3
iret
out
mov
lods
push
jno
xchg
xchg
push
add
mov
add
pop
add
add
pop
dec
push
push
push
push
push
call
push
repnz
add
hlt
popf
add
add
add
push
pop
mov
testb
call
nop
outsl
enter
fists
mov
xchg
add
mov
add
add
rcrl
add
add
loopne
lock
lcall
pop
push
test
in
pop
sub
jmp
push
not
rol
pop
sub
pushl
push
add
rol
pop
pop
push
push
push
push
push
push
call
add
stos
stos
enter
insb
add
add
shl
add
add
add
add
mov
add
sub
pop
sub
push
add
inc
add
pop
cmp
jne
push
add
sub
pop
mov
push
ror
sub
sub
pop
lea
push
pop
sub
push
shr
pop
mov
shr
push
lea
rol
rol
pop
add
push
push
call
add
mov
gs
js
xchg
jmp
fs
rol
popa
out
jbe
add
in
mov
add
lret
push
cld
addl
add
jno
xchg
add
shlb
mov
mov
add
scas
xchg
add
lcall
jmp
adc
rcrl
xor
sub
pop
pop
push
dec
dec
pop
shr
push
push
push
push
push
push
lea
push
lea
push
call
mov
sti
fcmovu
push
cmc
sahf
mov
filds
push
push
fcmovnb
add
add
add
add
xchg
imul
add
add
scas
out
pop
sahf
std
movsb
add
add
in
cld
pop
add
add
add
add
add
jecxz
add
xchg
clc
xchg
fistl
pop
and
push
shr
not
xor
add
pop
sub
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
mov
cwtl
mov
add
jbe
xchg
add
iret
pop
push
out
add
cltd
cmpsl
bound
add
jl
int3
nop
add
mov
rolb
stos
add
mov
test
mov
add
add
add
lret
fsubr
enter
add
jne
incb
pop
cmp
jne
push
push
lea
push
push
call
cmc
in
insb
mov
add
add
stos
stc
pop
arpl
jge
mov
add
mov
add
lea
jmp
add
pop
stc
scas
add
faddl
add
add
lahf
add
add
add
add
cld
push
sahf
add
mov
add
add
outsl
add
add
add
add
jne
mov
leave
push
ror
pop
ret
push
push
push
call
add
xchg
xchg
add
add
roll
add
jno
fisubrs
add
add
add
clc
lcall
in
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
ficompl
fdivl
xchg
add
xchg
mov
roll
add
add
aam
add
stos
add
imul
add
add
hlt
adc
pop
movsl
sub
pop
add
push
pop
push
push
lea
shl
ror
pop
push
push
xor
pop
push
push
push
push
call
mov
add
pop
stos
add
cmpsb
ret
addr16
iret
add
jne
ljmp
jns
nop
xchg
roll
rorl
lcall
add
add
cmpsl
add
movl
aam
add
call
out
push
into
pushf
xchg
mov
add
push
in
hlt
lcall
push
pop
push
mov
push
push
push
push
push
push
call
add
lcall
cmc
rcrl
jne
cli
adc
cltd
stos
add
jmp
add
add
stos
add
enter
jmp
pop
sub
pop
lea
sub
push
push
push
push
push
push
push
push
push
push
call
mov
mov
scas
add
add
in
out
push
mov
add
add
add
add
mov
mov
add
add
mov
add
mov
out
in
bnd
jecxz
add
sub
pop
mov
push
sub
pop
shr
add
push
dec
pop
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
add
fdivr
add
mov
add
jb
cmc
arpl
cmpsb
lds
out
movsb
jns
nop
cli
mov
add
mov
bound
in
fsts
mov
popf
scas
jbe
push
cld
push
cmpsb
lods
mov
js
add
lret
add
fistl
test
mov
fcomps
pop
or
xorb
adc
add
inc
pop
mov
push
add
lea
pop
add
xor
push
shr
dec
shr
pop
mov
push
push
push
call
push
mov
mov
idivb
add
add
nop
add
xchg
arpl
out
int
repnz
mov
data16
add
mov
rcrl
add
add
push
add
add
sub
pop
and
rol
push
push
push
lea
push
push
push
call
add
scas
call
add
lods
add
add
sti
lea
shl
add
push
push
jmp
sti
shrb
add
pop
xchg
add
into
test
in
call
rol
push
push
push
push
lea
push
push
push
lea
push
push
push
call
push
in
rolb
arpl
mov
add
pop
mov
add
add
popl
pop
add
arpl
add
out
sub
sub
pop
inc
cmpb
jne
push
pop
add
cmp
je
push
push
push
lea
push
push
push
push
push
call
add
fsubl
fs
pushf
xchg
add
pop
cltd
add
jbe
lea
add
cli
xchg
test
mov
add
add
loope
push
add
jne
add
outsl
in
add
lcall
ret
adc
lea
pop
cmpl
jne
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
cltd
add
rclb
jns
pop
add
xchg
add
cld
add
pop
add
fwait
add
jl
add
ljmp
pop
add
shlb
add
add
add
out
pop
mov
movl
mov
mov
add
add
add
out
jbe
add
sub
pop
xor
push
shr
ror
rol
add
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
call
add
icebp
xlat
lret
cld
out
add
add
test
popl
add
cwtl
add
add
in
iret
add
sti
add
push
sti
add
int3
mov
jo
sub
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
iret
je
std
imul
add
add
mov
add
mov
hlt
scas
incb
out
enter
add
bound
jo
mov
in
fcomps
push
push
push
push
push
push
push
lea
push
push
call
jecxz
jne
stos
out
mov
sbbl
add
mov
xlat
add
add
push
add
push
add
add
add
clc
xchg
les
js
add
popa
add
jp
jecxz
add
mov
jle
imul
mov
lods
jne
add
loope
loope
add
bound
lahf
add
sub
pop
pop
pop
push
push
lea
push
lea
push
push
call
popl
arpl
add
out
add
outsl
mov
ljmp
add
add
imul
pop
add
lret
add
add
jno
pushf
outsl
lret
add
pop
popa
ljmp
lcall
ret
push
ror
xor
inc
pop
mov
add
push
shr
add
pop
mov
push
dec
pop
push
mull
push
sub
pop
pop
push
ror
xor
pop
call
push
xor
shl
sub
not
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
shll
loopne
rolb
mov
push
add
add
popf
add
add
add
repz
call
inc
jne
call
push
pop
jne
lock
imul
add
lret
add
add
mov
add
jmp
xchg
insb
fdivrs
mov
mov
pushf
incb
add
clc
lcall
xor
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
imul
push
xchg
push
rol
add
cmpsb
mov
push
add
test
fcoml
lcall
shlb
cltd
je
jb
push
push
data16
mov
loope
test
add
mov
add
mov
add
aam
add
movsb
pop
cmpb
lcall
push
rol
not
pop
pop
pop
push
push
push
call
add
add
add
mov
js
fwait
ljmp
mov
push
add
xchg
add
stos
imul
mov
add
jmp
clc
jmp
add
lcall
push
add
ror
add
pop
leave
push
sub
pop
ret
push
push
lea
push
push
push
lea
push
call
mov
in
push
loopne
push
jne
pop
jp
add
fwait
xchg
add
add
test
xchg
cmc
mov
add
mov
add
add
xchg
jne
add
cmc
add
in
jo
add
in
push
sub
lea
add
lea
pop
add
push
push
push
push
push
push
push
push
push
call
add
add
add
push
add
repnz
mov
add
fcom
imul
repnz
add
fiaddl
ljmp
add
mov
add
leave
cld
lds
add
sub
pop
push
push
ror
ror
add
pop
push
push
sub
pop
push
push
rol
add
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
roll
add
push
cli
popa
nop
add
nop
add
aad
pusha
fwait
xchg
mov
mov
rcl
leave
add
cmpsl
call
pop
pop
push
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
xchg
add
lahf
add
jnp
add
add
js
jo
pushf
add
add
icebp
movb
add
add
add
add
pop
sub
pop
lea
sub
push
pop
mov
push
add
lea
pop
shr
push
pop
add
mov
push
ror
not
pop
add
pushl
push
push
push
push
lea
push
push
push
call
neg
add
add
add
mov
add
cwtl
add
fwait
cmpsl
add
pop
js
push
add
fadd
aad
stc
add
cmpsl
xlat
add
mov
add
mov
add
add
hlt
add
add
push
cltd
fcoml
fiadds
sub
pop
popl
push
push
push
push
push
lea
push
push
push
push
push
call
xchg
out
push
fistpl
add
add
add
mov
jge
push
arpl
add
mov
fwait
mov
test
add
add
add
mov
push
int3
jmp
stc
add
mov
add
xlat
jbe
add
loopne
in
mov
jnp
push
rol
add
pop
add
push
push
push
lea
push
push
lea
push
push
call
add
jno
iret
add
add
fwait
xchg
add
fdivrl
add
fldl
add
cld
cli
jb
xchg
int
mov
in
aam
add
popf
add
lods
add
add
add
add
mov
stc
flds
lcall
testb
rcrl
adc
rcll
ror
pop
xor
rol
push
rol
rol
pop
nop
push
pop
nop
xor
push
push
push
push
push
push
push
push
call
ja
pop
pusha
mov
mov
add
loopne
nop
and
add
mov
mov
add
add
add
add
hlt
ljmp
bound
pushf
cwtl
mov
clc
pushf
lahf
pop
add
pop
out
mov
lods
movsb
add
lcall
push
push
push
call
add
jns
add
aad
add
add
xchg
neg
mov
movsb
pop
add
enter
xchg
pop
imul
add
mov
add
add
xchg
lret
test
cltd
fnsave
add
xchg
add
pop
add
add
add
in
hlt
pop
nop
inc
push
ror
pop
nop
push
push
push
push
push
call
add
lods
sti
add
repnz
stos
out
addr16
sti
add
jl
add
add
jmp
jmp
scas
jno
add
cltd
call
add
add
fisubs
mov
add
mov
je
add
push
shl
sub
add
pop
cmpb
jne
push
shr
not
not
pop
add
nop
push
push
push
push
push
push
push
call
sti
movsl
add
bound
add
rol
out
fiaddl
add
loope
rolb
cwtl
add
add
fdivrs
pop
mov
mov
add
add
add
add
filds
std
cmpsb
add
aam
enter
push
jmp
push
test
jo
xchg
xchg
push
add
mov
lcall
push
push
push
lea
push
lea
push
push
push
lea
push
call
push
add
std
pusha
mov
jp
les
add
mov
test
add
pop
mov
stos
pushf
std
add
mov
jmp
stos
add
add
inc
or
test
dec
add
dec
pop
nop
push
shr
ror
sub
add
pop
nop
push
sub
shr
add
pop
inc
push
ror
lea
shr
pop
nop
nop
push
push
push
push
lea
push
lea
push
push
push
call
je
data16
loopne
xchg
imul
into
add
popf
imul
mov
shrl
test
in
mov
jmp
insb
jp
cltd
mov
jp
stos
xlat
add
sub
pop
cmp
jb
xor
push
lea
push
push
push
lea
push
push
push
call
add
mov
movsl
add
xchg
mov
mov
imul
push
add
shl
add
testb
add
test
add
data16
aad
mov
xchg
lea
daa
add
add
and
call
add
addr16
insb
jl
add
xchg
mov
faddl
add
add
pushfw
lock
push
out
add
add
lds
add
push
imul
add
add
jae
shll
jge
fildl
call
xchg
add
pop
mov
add
push
push
call
add
xchg
rorb
cltd
add
push
cli
in
cltd
test
out
add
fdivrs
mov
mov
test
sub
pop
movzwl
push
lea
push
push
push
call
movsb
mov
mov
in
pop
xlat
mov
enter
add
add
push
add
pop
clc
loop
mov
leave
pop
pop
aad
add
jnp
pop
hlt
add
scas
push
add
add
add
shlb
ret
add
inc
sbb
rcll
loope
shl
pop
mov
push
push
call
add
push
imul
test
add
in
loopne
jno
add
test
ja
jae
add
mov
test
fiaddl
jl
mov
sub
pop
xor
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
ljmp
int
add
sar
add
add
imul
push
mov
fs
repnz
repnz
clc
mov
movsl
jecxz
mov
sub
pop
xor
shl
push
not
rol
ror
pop
xor
shl
push
push
push
push
lea
push
lea
push
push
call
add
arpl
add
pop
mov
add
mov
movsb
push
mov
add
add
xchg
sub
pop
xor
push
lea
push
push
push
push
push
push
push
push
call
sti
gs
add
jnp
add
add
add
add
xchg
int3
les
pop
loopne
mov
cmc
fiaddl
add
movsb
add
mov
add
lcall
loope
xor
push
push
push
push
push
lea
push
push
push
call
add
add
jne
xchg
push
cli
stos
jb
lock
add
add
xchg
cwtl
gs
add
jle
ficoms
add
enter
popf
add
cli
add
mov
xchg
outsl
add
lcall
rcll
dec
lods
dec
xchg
push
lea
push
lea
push
push
push
push
call
push
clc
mov
stos
bound
lock
add
ficoml
add
add
movsl
add
add
ja
add
scas
mov
xor
sub
pop
add
pop
push
pop
pop
push
push
push
push
push
push
call
push
jmp
repnz
lods
mov
add
add
add
add
add
div
icebp
add
mov
xorb
imul
add
movsl
pushf
cwtl
andl
add
jge
mov
jae
mov
jge
add
add
sub
pop
pop
push
ror
add
pop
pop
push
push
push
lea
push
push
call
leave
add
out
aad
add
lods
add
popf
mov
pushf
add
rcll
add
add
nop
add
fcom
mov
lcall
push
add
pop
ret
push
push
push
push
push
push
push
call
int
mov
cltd
leave
add
cmc
push
clc
add
jb
pop
jo
clc
add
add
stos
add
pushf
push
fs
add
cwtl
mov
add
add
mov
push
sub
rol
pop
push
push
add
pop
push
push
push
call
je
add
bound
pop
pop
popl
add
cmpsb
fwait
add
mov
jno
in
clc
add
clc
lcall
push
push
push
lea
push
push
lea
push
call
add
add
fcompl
outsl
loopne
test
outsl
add
ret
add
add
pop
add
add
call
add
add
push
pop
add
pop
mov
imul
std
call
xlat
aad
push
add
xchg
add
push
mov
rcrl
add
add
sub
pop
push
push
sub
pop
mov
mov
push
push
lea
push
lea
push
push
push
call
fstpt
xchg
int
ret
jle
jb
add
xchg
mov
add
fidivrs
xchg
imul
add
popa
add
addb
or
add
push
add
inc
add
pop
mov
push
shr
sub
add
not
pop
test
je
push
sub
pop
mov
mov
push
not
shl
ror
pop
mov
push
push
push
push
push
push
push
lea
push
push
lea
push
call
jnp
testl
in
add
test
int3
jb
out
add
arpl
jbe
add
add
add
add
mov
add
bound
les
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
xchg
filds
push
add
in
mov
loope
lds
add
add
add
add
jp
add
cwtl
add
fwait
nop
add
add
lret
add
mov
fcompl
rorb
test
add
add
test
inc
shl
pop
test
je
push
shr
shr
dec
rol
pop
mov
push
sub
pop
inc
push
rol
xor
not
lea
pop
cmp
je
test
jne
push
sub
shr
pop
xor
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
add
add
pushf
add
add
add
mov
ljmp
nop
fcmovu
out
scas
add
add
add
add
mov
mov
add
add
mov
in
loopne
pop
push
push
push
push
push
push
push
call
mov
stc
add
pop
in
jae
add
mov
in
add
add
jno
mov
add
in
in
lcall
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
cwtl
out
mov
add
add
add
gs
fbld
push
add
add
mov
iret
add
mov
in
fdivr
lcall
push
push
push
push
call
add
add
add
add
add
jnp
lds
add
mov
add
jecxz
ljmp
add
test
out
add
pusha
add
add
lahf
in
add
leave
add
add
add
add
add
add
lcall
leave
push
push
push
push
call
lock
fnstcw
add
mov
mov
rclb
add
add
jae
mov
jle
push
leave
pop
pop
cwtl
aad
out
stos
sub
pop
ret
mov
push
push
call
fsubs
push
add
jb
loop
add
insb
lahf
jbe
int
jmp
mov
sahf
fs
xorl
rclb
movsb
add
xchg
js
add
mov
rcr
add
add
add
jecxz
sub
pop
inc
push
ror
shl
not
pop
cmp
jne
lea
push
push
push
call
cld
xchg
pushf
add
add
out
movb
leave
nop
mull
push
add
scas
lods
icebp
jbe
jmp
push
push
outsl
add
sahf
push
neg
add
add
hlt
pop
mov
test
je
push
push
call
add
pusha
into
push
fildll
add
push
add
clc
call
add
add
jae
mov
jo
movsb
add
mov
add
imul
add
lret
add
push
sub
pop
mov
push
ror
pop
add
push
shr
inc
pop
cmp
jne
push
push
push
push
push
push
lea
push
call
stos
mov
bound
insb
sub
shl
jne
mov
int
test
add
push
mov
jl
js
fdivp
add
flds
push
add
popa
add
add
push
xchg
out
movsb
test
call
roll
add
out
add
cmc
mov
call
xchg
lods
fdivs
sarl
fiaddl
sub
pop
mov
test
je
push
push
push
push
push
push
push
push
call
push
push
call
add
add
add
add
add
rcll
stos
mov
xchg
sbbb
add
add
add
xchg
mov
add
lods
test
jp
add
add
into
push
arpl
lcall
callw
out
mov
stc
dec
pop
add
push
lea
pop
cmp
je
jmp
push
rol
not
inc
pop
xor
push
add
pop
pop
push
rol
ror
pop
pop
pop
push
add
xor
pop
pop
leave
push
push
lea
push
push
push
call
sahf
mov
testb
mov
repnz
xchg
mov
cmc
add
shlb
jo
sahf
addr16
add
popl
add
flds
mov
add
jne
lods
pop
test
pop
ret
lea
push
push
call
add
fiadds
add
add
into
add
outsl
pop
fimull
lock
scas
adcl
push
add
lret
addr16
mov
cmpsl
add
jnp
fwait
pop
sub
pop
pop
push
sub
pop
pop
pop
push
push
push
lea
push
call
push
icebp
jbe
cld
jp
out
mov
movsb
pop
push
loope
mov
cld
arpl
pop
lock
pop
stos
stc
pusha
jecxz
add
mov
add
call
add
add
add
addl
cmpb
and
add
out
add
cli
aad
stos
mov
out
sub
pop
pop
push
not
pop
leave
push
pop
ret
push
shr
pop
mov
push
sub
shl
pop
pop
push
not
ror
sub
sub
pop
pop
pop
push
sub
pop
pop
push
add
pop
leave
push
push
push
push
push
lea
push
push
call
xchg
add
stos
mov
add
push
add
add
mov
add
push
add
shll
add
imul
mov
add
rolb
je
testl
add
jmp
pop
add
push
add
in
in
ret
cmp
mov
xor
mov
mov
into
mov
ror
mov
mov
mov
icebp
lret
dec
mov
xchg
lret
or
orl
add
imul
lret
inc
mov
leave
xchg
cmp
fcmovu
out
cs
setae
xchg
mov
addb
inc
adc
and
push
je
popf
mov
pop
shr
fistps
jno
add
xchg
jge
pop
mov
mov
sbb
popf
test
and
fdivl
in
test
inc
cmp
push
inc
stos
imull
cmp
cmp
pop
jmp
push
jmpw
das
push
into
addl
xor
jecxz
xor
mov
push
push
sbb
dec
movsl
mov
icebp
sub
adc
cmp
fisubl
adc
xchg
arpl
cwtl
push
mov
jmp
mov
test
aas
xor
or
into
shrb
and
sbb
shlb
lock
lcall
icebp
xchg
ds
adc
loopne
js
cmp
push
leave
ret
outsb
loopne
cli
sub
lahf
repz
lock
sbb
out
adc
jns
sbb
xorl
sub
pop
ds
mov
dec
add
js
and
scas
scas
sahf
out
pop
scas
pop
in
rcrl
rcrb
cltd
lcall
jne
aas
in
cld
sbb
sub
mov
push
mov
xchg
mov
sti
ret
xor
inc
cld
mov
stc
gs
jns
insb
lgs
ret
dec
xchg
cli
mov
ja
jno
icebp
pop
enter
stc
nop
dec
rcrl
pop
imul
inc
xlat
js
fwait
les
cmpb
push
call
jns
in
cmp
jp
pop
jo
pmaxub
fcmovnu
pop
lret
mov
outsl
arpl
stos
mov
vmptrst
aad
dec
test
pop
xor
es
pushf
lret
pop
rorl
into
test
sub
xchg
mov
xorb
fdivrs
adc
fs
xchg
daa
mov
stos
rcrl
pop
pop
mov
lds
xor
lret
and
aaa
adc
dec
sub
sbb
loopne
push
adc
cld
or
out
push
xchg
adc
adc
das
cs
sub
sub
cli
xchg
lods
mov
xlat
mov
stc
ljmp
inc
or
sbbl
fwait
je
pop
std
shlb
xchg
adc
int3
inc
push
leave
push
ret
clc
int
add
sbb
std
in
inc
mov
and
xchg
daa
push
test
idiv
adc
sbb
mov
push
inc
jmp
xchg
push
xchg
mov
inc
add
ficompl
mov
decb
push
push
xor
adc
cmp
mov
dec
fdivl
fdivl
out
ja
cmovbe
xchg
loopne
clc
gs
jle
test
inc
sbb
lahf
push
test
aad
loopne
or
or
pop
scas
fidivl
jne
sarb
sbb
or
xchg
mov
sub
mov
mov
fldl
dec
movsb
pop
pop
es
jle
shlb
xchg
aam
cld
loope
xor
mov
cltd
icebp
adc
xchg
ss
out
inc
js
mov
push
add
jns
lods
out
addr16
in
pushf
add
scas
js
inc
inc
xchg
mov
pop
dec
je
xchg
push
push
mov
mov
in
or
stos
mov
pop
and
xchg
sub
xchg
stos
in
sahf
and
loopne
in
inc
popa
mov
sbb
je
movsl
iret
fdivp
iret
addr16
add
test
repnz
xchg
xlat
xchg
mov
and
sarl
inc
sub
xor
push
fwait
hlt
mov
cmp
and
jbe
pop
aaa
loope
aaa
push
sub
mov
ljmp
sub
in
pop
jl
aam
sub
test
in
js
lcall
mov
popf
scas
out
dec
mov
dec
xor
fldz
and
dec
and
repz
js
movsb
sbb
xor
xlat
xchg
shr
jns
mov
addb
imull
rolb
xchg
pop
icebp
jmp
std
daa
mov
fildll
mov
ret
adc
inc
cmpsl
fdivrp
mov
or
push
jbe
mov
out
int3
lret
pop
outsl
test
data16
daa
test
sbb
sahf
mov
mov
insl
int3
push
aam
mov
add
mov
iret
stos
mov
test
xor
jbe
mov
xchg
push
insl
mov
enter
add
stc
aas
sbb
aaa
sbb
out
mov
loop
xor
pop
popf
mov
int
sarl
or
mov
mov
sub
mov
and
mov
or
lcall
dec
ret
cs
or
push
jl
xor
test
cmc
mov
sub
inc
pop
scas
mov
and
jge
ret
dec
scas
bound
inc
mov
rol
or
push
xchg
push
mov
mov
fistl
dec
adc
xlat
cmp
push
in
cmp
adc
out
sbb
shlb
xchg
bound
inc
sar
push
mov
mov
adc
inc
rcl
aam
jmp
fwait
mov
cltd
out
test
mul
aas
clc
jae
dec
ret
loopne
inc
cmp
fwait
sbb
cmpb
push
aad
jecxz
repnz
lahf
iret
test
cmpb
jmp
xorb
test
in
and
fmuls
pop
leave
sbb
gs
sub
jg
add
aas
mov
test
push
adc
xchg
out
stos
or
out
mov
lock
out
or
mov
popa
inc
pop
movsb
nop
stos
add
loope
fbstp
xor
sub
jb
sub
sub
pcmpgtw
inc
cmpsb
xchg
xor
cwtl
dec
scas
gs
mov
fs
shll
loope
daa
mul
cmc
repnz
into
jge
icebp
sub
xchg
or
test
dec
inc
test
iret
fsts
aam
cmp
mov
lret
cmp
xlat
dec
cmp
mov
bound
pop
cli
sub
pop
mov
dec
popf
pop
loopne
cwtl
mov
and
fnsave
jecxz
or
pop
leave
lret
sub
mov
cmp
fildl
dec
clc
imul
push
jbe
jg
stos
stos
ds
xchg
pop
outsb
test
icebp
andl
scas
lret
sarb
enter
jnp
dec
add
and
cmp
clc
cmp
mov
bound
inc
mov
mov
add
jno
lret
mov
push
cwtl
mov
cmp
push
roll
mov
gs
pop
push
mov
and
sbb
push
pushf
push
loope
sbb
out
push
arpl
or
gs
daa
mov
pop
cli
adc
enter
cmp
adc
dec
jp
mov
roll
ljmp
mov
subl
stos
pop
inc
in
mov
push
cmc
es
sbb
dec
scas
sub
lods
or
xchg
call
negb
lahf
or
nop
int
mov
add
jo
mov
mov
push
mov
pop
push
loope
in
int
inc
mov
test
jns
rorl
inc
icebp
jle
std
mov
lahf
push
adc
jecxz
lret
xchg
sti
push
adc
nop
mov
fdivl
adc
pop
andb
xchg
xor
xchg
fsub
adc
inc
mov
test
sbb
popf
or
test
ja
int3
add
std
and
and
out
iret
int
xor
addr16
mov
aad
stos
enter
nop
jae
sbb
cmc
mov
mov
xor
sarb
mov
dec
loope
cmp
hlt
xchg
inc
cli
scas
pop
and
testl
jns
push
outsb
pop
lea
xchg
mov
adc
lock
decl
leave
lcall
popf
rol
cmp
loop
or
jae
pop
xor
int3
jg
sbb
out
je
mov
jmp
shrl
sahf
push
jns
hlt
pusha
jp
shl
sbb
mov
jmp
inc
xchg
or
xchg
xor
imul
adc
adc
sbb
and
ljmp
pop
ror
or
lahf
push
push
push
mov
push
mov
ret
xor
rorl
mov
jno
mov
sbb
push
mov
inc
mov
xchg
out
clc
js
pop
jp
dec
adc
scas
xchg
repnz
jno
das
ret
into
mov
pop
imul
xor
xchg
mov
inc
mov
xor
fisubrs
mov
cmpsb
and
jecxz
mov
push
shlb
stos
es
push
iret
movsb
push
sub
jecxz
insl
push
xorl
test
fstps
sbb
push
insl
mov
movsl
fistpl
repnz
daa
jb
pop
or
cmp
xor
push
sub
adc
xchg
cmp
xchg
inc
dec
dec
jo
in
js
ja
mov
and
std
push
xchg
test
fwait
or
fstpl
pop
or
mov
inc
test
xchg
imul
jbe
mov
in
lret
mov
mov
jecxz
dec
adc
sbb
fisttpl
rol
bound
imul
adc
and
cmpsb
push
adc
cmpsl
pop
sub
cli
cmpsb
jns
and
push
test
jo
jb
sbb
pusha
xchg
je
jae
xorb
sub
push
xor
popa
adc
js
in
lcall
mov
pop
das
jle
ja
mov
sahf
inc
inc
mov
xchg
dec
jl
mov
fidivrl
inc
xor
loopne
jg
sbb
adc
shl
mov
dec
xchg
mov
das
lahf
inc
fsubrp
xlat
dec
leave
cmp
sbb
dec
dec
mov
mov
lock
fs
sbb
mov
rclb
popf
sub
addr16
das
mov
rolb
in
adcl
je
sub
inc
push
fwait
mov
enter
pop
xor
add
mov
inc
xchg
pop
sahf
dec
pop
sbb
jo
ljmp
xor
mov
enter
inc
mov
lock
mov
sub
sbb
and
push
xchg
pop
daa
aad
mov
mov
fiadds
sti
or
imul
push
out
cmp
popa
ret
orb
incl
mov
dec
lods
dec
cmp
jo
int
add
inc
pop
stos
adc
int
sahf
rep
aad
cmp
xor
inc
ss
mov
add
mov
xlat
shll
sbb
shll
jb
or
jbe
dec
dec
push
notb
pop
jecxz
pop
xor
nop
push
inc
xor
inc
push
pop
out
adc
or
push
cld
jae
imul
enter
add
sub
jecxz
popa
sub
iret
jbe
ds
or
xor
jo
int3
notb
fcomp
mov
pop
mov
pop
nop
inc
mov
repnz
or
inc
pop
mov
and
clc
jae
jecxz
sarl
and
mov
pop
push
mov
int
sbb
sbbl
push
pmulhuw
mov
movhps
or
dec
xchg
cwtl
dec
mov
xchg
pop
cld
out
frstor
jle
ljmp
jo
xchg
ja
cld
js
sub
mov
xchg
je
bound
or
pop
loope
dec
and
in
push
loopne
add
sbb
mov
mov
rcrb
cmp
repz
jge
push
fnstsw
or
pop
call
cli
add
push
push
leave
les
dec
aad
in
dec
mov
test
out
xor
ret
lods
cltd
add
mov
hlt
sbb
dec
mov
xlat
testl
pop
cld
mov
icebp
jno
dec
xchg
jmp
xor
pusha
test
stos
adc
sbb
shr
jl
icebp
cmp
outsb
aam
pusha
mov
je
mov
cld
dec
xchg
xlat
out
ljmp
fstpt
or
cwtl
and
int
jmp
in
lret
mov
add
imul
jle
xchg
call
mov
mov
xchg
das
lds
outsb
mov
incb
loope
push
pusha
or
xchg
sub
jb
dec
stc
lcall
push
outsl
js,pn
jge
out
mov
dec
push
dec
inc
lcall
lock
mov
jge
xchg
aaa
add
notb
stos
mov
shrb
inc
push
sub
pop
fadds
neg
xchg
or
or
lahf
add
add
js
in
cmp
int
mov
shll
mov
fdivs
xchg
rclb
loop
sbb
adc
inc
jnp
xor
leave
loope
sub
mov
cwtl
cltd
push
int3
call
je
jnp
sbb
js
cltd
lcall
test
test
mov
cwtl
jno
mov
lahf
push
test
push
jp
outsl
outsl
hlt
xchg
repz
daa
sub
rcrl
or
loopne
pop
push
pop
popf
imul
and
cmpsl
loopne
fwait
pop
cmp
cmp
cmp
int
div
test
scas
aaa
cmpsb
mov
popf
mov
and
shlb
sub
xchg
shll
je
xlat
inc
add
and
mov
loopne
pop
roll
jns
mov
insl
mov
push
out
adc
fildl
loope
adc
and
adc
jge
mov
and
add
sbb
loop
mov
scas
add
and
lahf
or
shr
inc
testl
js
mov
js
adc
sbbl
cli
ljmp
fisttpl
into
jg
loope
ficoml
mov
push
jge
adc
adc
ss
iret
jb
jmp
pop
dec
test
imul
call
stc
xchg
xchg
or
cmp
mov
inc
std
pop
cmpl
sbb
xor
call
sti
out
xor
add
pop
push
dec
scas
push
sub
jb
stc
add
sbb
push
jmp
sub
sub
sbb
out
dec
mov
scas
aam
pop
cmp
xchg
je
mov
js
and
xor
out
lret
scas
not
push
or
add
mov
fwait
xlat
outsb
out
push
adc
daa
push
pop
jmp
ds
inc
jb
ret
fldcw
mov
mov
mov
sahf
cmp
jmp
js
push
aas
and
pop
add
lods
aam
int3
adc
and
fadd
cltd
adc
outsb
cmp
lds
push
push
es
mov
shlb
popa
repz
inc
lock
or
lods
mov
mov
lcall
out
fidivrl
xor
mov
frstor
das
iret
outsb
leave
cmp
sbb
mov
or
push
lds
in
add
gs
dec
adc
and
sub
enter
cs
leave
imul
clc
xchg
sbb
lods
push
je
ret
sbb
sub
cmpsl
mov
rcrl
aaa
xor
and
pushf
adc
js
bound
inc
push
adc
and
sbb
fwait
mov
push
push
xchg
ss
jg
repz
jle
mov
push
das
stos
rcl
push
mov
push
cmp
mov
negb
rcll
push
cltd
pop
pop
out
sahf
inc
int3
outsb
cld
stos
adc
mov
movsl
fwait
inc
jge
xchg
outsl
in
rolb
popf
mov
fadd
je
stos
and
movsb
cli
xchg
push
or
dec
and
adc
andl
jns
arpl
or
loopne
shrb
test
or
imul
cmpsb
dec
xchg
iret
push
dec
mov
xlat
add
repnz
mov
test
lea
pushf
pop
bswap
cmpsl
push
loop
cmp
fs
std
nop
xor
xchg
mov
fcmove
dec
hlt
cli
fisttps
push
sbb
ja
ljmp
lahf
mov
cwtl
hlt
aam
mov
mov
mov
mov
addl
fldenv
mov
xlat
pop
inc
sub
xchg
push
and
pop
stc
inc
jns
cmp
int
push
pop
or
test
mov
cmp
filds
cmp
outsl
xor
loopne
cli
sub
je
adc
sbb
cmpsl
pop
xor
sub
popf
inc
jno
add
xlat
sbb
xchg
fldenv
cld
popw
mov
jge
pop
xchg
testb
imul
idivb
ss
xchg
mov
pop
or
adc
call
xor
mov
cli
loop
movsb
ret
mov
fcompl
sbb
add
or
call
inc
popa
sti
inc
into
sti
lret
and
cltd
dec
mov
sub
adc
and
cmpsb
or
ret
xor
popf
mov
push
addr16
push
mov
ret
mov
push
add
jno
mov
andl
stos
out
add
flds
popa
sub
xchg
xchg
andl
mov
dec
aaa
mov
ret
or
push
inc
je
test
addb
jmp
hlt
pop
mov
inc
push
roll
les
fcomps
scas
in
lret
dec
adc
arpl
inc
gs
jb
add
std
pop
cmp
inc
fistps
lds
jb
or
outsb
rcll
scas
sbb
ds
ficompl
aam
cmp
cmpsb
aaa
idiv
mov
or
and
mov
sub
adc
or
and
je
cs
aad
icebp
cmpsb
mov
sub
cld
sbb
hlt
cwtl
cmp
pop
cmp
rcrb
int3
rcrb
push
lock
sbb
movsl
je
sarb
mov
adc
icebp
mov
sbb
ret
cmpb
xchg
pop
sub
inc
jns
dec
bound
lret
jmp
addr16
andl
or
jbe
pop
xor
push
icebp
mov
rcll
add
mov
cld
lret
sahf
mov
fcmovbe
xor
pop
out
or
inc
les
push
enter
mov
std
std
mov
in
mov
bound
fnstcw
sub
and
push
lea
sbb
faddp
add
mov
push
xchg
and
daa
push
mov
jno
aam
jge
xchg
sbb
mov
mov
fldln2
out
mov
adc
inc
xor
test
insl
in
push
mov
jmp
pop
test
and
xchg
pop
subl
mov
mull
cmpsl
hlt
stc
cmp
adc
pop
xor
mov
sub
and
loopne
mov
in
lahf
mov
pop
call
hlt
sbb
add
ss
aaa
xlat
sbb
ret
shl
and
imul
bt
stc
rorb
cwtl
add
xor
xor
fildll
xor
mov
fistpll
jge
push
das
ss
dec
xchg
inc
in
es
mov
frstor
and
fisttpl
pop
shll
add
pop
shlb
shrl
test
mov
jp
ss
xchg
addr16
adc
add
add
adc
fcompl
mov
cmp
push
cmp
mov
rcrl
orl
dec
mov
inc
movsl
lret
dec
andb
sub
and
stc
push
xlat
dec
dec
ja
je
call
scas
mov
ud1
clc
push
mov
xorb
test
addb
sbb
arpl
sub
aad
push
adc
call
repz
mov
lock
aaa
mov
lahf
inc
js
xchg
enter
sub
or
lds
outsl
jl
clc
pop
jne
fcmovbe
lcall
xchg
orl
pop
xor
push
jg
out
jns
cmp
in
push
pusha
add
lods
and
pop
in
dec
inc
inc
xchg
push
push
mov
jp
fildl
sbb
xlat
out
es
xor
xchg
or
in
ss
es
inc
xchg
dec
test
push
cmp
jle
sahf
sub
jp
out
xchg
out
das
and
mov
loopne
push
or
mov
lcall
mov
dec
cs
sbb
insb
push
cmp
inc
mov
xorl
and
jbe
outsb
jge
add
pop
dec
jp
sub
bswap
xchg
pushf
sub
fdivrp
pop
push
mov
or
push
data16
out
or
ret
hlt
scas
lret
je
mov
nop
cmpsl
pop
aas
xchg
inc
push
stos
gs
push
test
incb
inc
pusha
fcmovu
add
sbb
es
rcll
sub
add
mov
mov
lods
dec
adc
loop
cmp
and
xchg
sbb
cmp
ljmp
inc
adc
xchg
sub
ret
stc
movsb
cmp
push
mov
dec
sbb
jge
or
push
sti
xchg
lahf
cld
dec
enter
stos
nop
xchg
xor
repz
push
movsl
jb
push
les
pushf
add
mov
push
movsb
xor
and
nop
sub
adc
leave
xchg
lcall
mov
adc
xor
out
cmp
vandnps
bound
push
rcl
rcrb
out
int3
jp
call
jnp
mov
adc
sbb
inc
dec
push
sub
jo
lcall
fistl
sbb
in
lcall
fsts
in
aam
std
cwtl
std
sti
enter
outsl
in
dec
sbb
sti
test
fmuls
ret
adc
sbb
mov
cmp
pop
movsb
loopne
out
cwtl
xchg
fisubrl
out
lret
pop
mov
in
out
js
lock
and
insl
jge
das
fdivl
sub
mov
scas
lahf
add
jg
popf
aam
lahf
mov
push
sti
jp
jge
clc
xor
das
cmp
xchg
fbstp
mov
xchg
xor
mov
outsb
sbb
lahf
pop
out
jo
dec
mov
cmp
cmp
mov
xchg
add
jnp
inc
stc
xchg
xor
mov
xchg
jns
lea
icebp
mov
mov
fs
mov
jecxz
xchg
mov
cmp
cmc
cmp
mov
adc
cld
push
jo
mov
adc
inc
hlt
mov
sub
push
xlat
xor
jle
cmc
aam
lock
cmp
iret
push
popa
xchg
fsubl
and
stos
lret
adcb
outsb
jbe
arpl
dec
shrb
mov
mov
dec
sbb
push
iret
lret
xor
jns
mov
push
repnz
xor
outsb
adc
imul
andb
inc
pop
sub
icebp
adc
mov
or
xchg
bound
sub
cld
addl
insb
mov
add
lods
sub
sbb
sbb
stos
outsb
inc
xor
out
pop
pop
dec
insb
mov
add
mov
stc
sti
push
test
repnz
dec
sbb
lret
out
fimull
dec
jmp
lahf
data16
mov
js
lret
nop
test
sub
inc
das
jl
js
aaa
clc
sarb
lret
mov
ret
add
push
jnp
out
inc
mov
jge
test
rorb
sbb
cmp
cmpl
shlb
push
imul
int3
and
imul
pop
orl
ljmp
insl
sbbl
xor
popa
testl
push
rol
mov
mov
sbb
fs
int
nop
add
push
test
mov
test
decl
sub
pushl
imul
xchg
push
mov
push
pop
faddl
jmp
and
out
ja
jne
int
pop
mov
ja
mov
xor
adc
loope
pop
mov
fnsave
push
adc
pushf
inc
jne
cmc
push
dec
daa
fwait
xchg
mov
xchg
mov
mov
cmpl
imul
sub
jmp
xorl
gs
xor
cmpl
xchg
cld
adc
pop
add
fprem
nop
dec
jbe
mov
ret
jl
pop
test
push
sbb
inc
lcall
leave
les
xor
xchg
fists
shr
adc
lea
std
and
mov
push
or
inc
xor
inc
lods
push
mov
jns
mov
sub
mov
mov
sbb
outsl
dec
xchg
or
cmc
rclb
cmp
stos
jl
xlat
aam
dec
stos
sti
adc
ja
xchg
push
stos
mov
insl
sbb
mov
ret
ds
sahf
xor
pop
mov
fidivrl
cmp
mov
cli
repnz
roll
outsb
adc
movl
adc
hlt
cltd
xlat
pop
push
push
repnz
test
xchg
in
je
int3
xchg
andb
lock
pop
jecxz
lock
fadd
popa
push
cmp
mov
stc
mov
jmp
mov
jbe
std
cmpsb
sbb
ljmp
add
shrb
ror
fcmovnbe
adc
push
add
push
mov
push
sub
cmp
inc
test
sub
dec
dec
jae
leave
or
jb
out
sub
adc
cmpsl
pop
mov
jo
or
adc
into
cmpsb
loop
mov
push
xchg
icebp
push
pop
scas
push
insl
sti
movb
sbbb
jl
add
dec
stos
jo
pushf
aam
shrb
xor
cmp
dec
sub
or
sbb
stc
xchg
int
cs
icebp
adc
fnstcw
test
and
or
mov
sti
fs
pop
sbb
outsl
ss
repz
push
push
xchg
ret
movsl
push
lret
in
mov
xlat
mov
scas
xchg
andb
adc
mov
xor
popa
out
fwait
ficomps
sbb
mov
fs
push
xor
cmp
push
lret
push
push
lods
jb
cmp
xor
fidivrl
stc
lret
add
mov
into
inc
push
mov
inc
mov
cmp
adcl
mov
popf
es
into
or
xor
imul
addr16
mov
dec
js
lods
pop
test
mov
sbb
aam
fisttpll
test
pop
aas
in
out
mov
jnp
jo
mov
or
loope
xor
pushf
mov
or
dec
sbb
add
repnz
popf
sbb
xchg
fbld
mov
aam
sub
icebp
dec
out
adcl
lahf
call
lds
dec
inc
adc
lret
lods
scas
mov
flds
iret
mov
roll
and
cmp
sti
mov
inc
mov
bsf
dec
lret
jo
loope
loop
sbb
fbld
insl
bound
ljmp
push
add
cmc
jns
fwait
sub
or
xor
lock
fidivrs
fdivrs
outsb
lods
xchg
push
in
aam
cs
ret
adc
pop
xor
int
jnp
sahf
push
inc
mov
nop
cmp
imul
mov
fwait
ret
les
iret
jmp
imul
cmp
js
cmpsl
stc
inc
into
mov
jmp
push
lahf
mov
xchg
mov
insl
fcoml
push
cmp
js
pop
shrl
ret
insl
adc
sbb
nop
and
push
cmp
sbb
shll
mov
jno
lock
in
dec
jg
mov
fimuls
jle
pop
pop
add
xor
pcmpgtw
and
xorl
xchg
sub
ja
jne
add
mov
mov
imul
mov
mov
mov
pushf
stos
mov
aaa
xorl
mov
fld
sbb
mov
push
pusha
rolb
cmp
fdivrl
lock
sbb
in
or
or
int
lock
popf
pop
shll
push
xchg
inc
cmpsb
inc
add
pop
repnz
lea
mov
loopne
notl
lret
mov
cmpsb
dec
sbb
dec
or
add
xor
iret
int
inc
inc
out
inc
cmp
cltd
or
and
js
sub
cmp
push
outsl
dec
lock
enter
jnp
adc
jns
lock
sub
xorl
xor
cld
pop
pop
fcmovu
and
mov
outsl
cmc
mov
lock
shlb
cld
sbb
push
add
push
and
inc
jl,pn
lahf
jb
imul
add
pop
into
stc
xchg
jp
stos
test
pop
jp
pop
dec
nop
call
in
stos
loop
sub
mov
add
ds
ds
arpl
fisubrl
lret
mov
loopne
sbb
mov
mov
rclb
jl
mov
fdivs
loope
or
movsl
pop
sub
out
mov
pop
and
fsubr
scas
or
mov
jge
add
xchg
xor
flds
out
movsb
and
sub
adc
sub
cs
sahf
int
sti
cmp
cltd
loopne
and
inc
push
sbb
data16
loopne
ret
xor
loop
xor
xor
pop
mov
out
or
out
inc
cmp
dec
not
in
arpl
sbb
pop
or
les
jne
jle
popf
dec
and
es
aad
jge
shlb
repz
mov
sub
inc
push
je
repnz
loope
xchg
mov
test
addr16
xor
mov
sub
jmp
sub
enter
inc
dec
push
mov
or
dec
stos
jmp
xor
sub
inc
bound
js
sbb
mov
stos
mov
mov
sbb
mov
sub
add
jmp
pop
mov
mov
cmp
pusha
pop
sbb
cs
rcrl
cmp
inc
cmp
push
stos
cmp
icebp
sbb
pop
mov
pop
cmp
stc
push
std
dec
and
sub
xor
in
scas
mov
sub
push
mov
adc
in
jno
adc
xchg
mov
mov
jg
loop
test
imul
inc
pop
and
stos
ret
cwtl
enter
rorl
and
xor
inc
fs
push
aad
shll
jnp
ss
movsl
cmp
push
aad
shrb
ljmp
leave
cmp
in
xchg
jp
sahf
mov
mov
cli
daa
test
out
cwtl
sbb
loopne
mov
in
int3
sbb
jbe
jno
cmp
push
jbe
gs
rorl
xchg
idivl
jnp
add
inc
pop
sbb
mov
sbb
or
push
dec
sbb
mov
push
lea
jne
mov
push
ja
inc
pop
sbb
in
cwtl
mov
inc
ss
mov
int3
dec
sub
cmp
add
xchg
outsl
sub
test
in
rorl
push
dec
aad
pop
add
adc
xchg
les
jmp
out
iret
lock
xor
cwtl
loopne
notl
subb
dec
cmp
jmp
stc
in
mov
and
sbb
test
push
scas
in
mov
fisubl
fstl
pop
imul
rcrb
fucom
and
out
fists
es
mov
add
rcrl
jg
inc
ss
jl
pushf
and
fcomip
xor
inc
rcrl
jg
idivl
pop
push
in
xchg
adc
push
xchg
nop
push
push
or
xorb
call
int3
dec
mov
fcoml
sub
shlb
movsb
mov
mov
imul
testb
mov
pop
adc
dec
push
lds
xlat
addl
divl
sbb
daa
xor
push
jne
fucomp
imul
push
sti
mov
xchg
mov
aaa
cli
push
pusha
mov
subl
adc
inc
rcll
out
jmp
and
mov
adc
xchg
iret
jae
push
add
aam
pop
outsb
mov
cmp
mov
cs
xchg
push
mov
lods
jge
adc
pop
cltd
mov
rcrl
loope
inc
sbb
stos
test
sbbl
jo
notb
jecxz
dec
sub
icebp
add
push
orl
mov
cmp
inc
jl
cmpsb
cmpsl
xchg
add
jno
pop
daa
addr16
xor
pop
js
and
xor
mov
loope
repz
mov
add
cmp
jecxz
add
mov
pop
pop
mov
and
inc
lret
xchg
or
sarb
mov
xor
loopne
aaa
mov
pop
lcall
dec
inc
xor
outsb
adc
test
xorb
and
repz
push
sbb
mov
push
dec
xor
popa
test
out
mov
dec
mov
or
lcall
xor
nop
inc
pop
movsb
inc
or
mov
repnz
cmpb
fidivs
or
jne
inc
bound
aas
dec
sub
stos
lods
mov
dec
hlt
lret
movsb
insb
xchg
pop
inc
mov
add
inc
lock
inc
lock
or
mov
mov
cs
and
popf
xor
dec
fcmovb
adc
js
pusha
pop
lock
daa
xchg
mov
test
adc
fcmove
push
xor
subl
jns,pn
pop
mov
test
sbb
xchg
jbe
out
and
repnz
movb
jne
jp
mov
xchg
int3
xchg
mov
popf
notl
dec
xor
pop
xchg
pop
jne
sahf
push
or
add
jb
gs
mov
aaa
sub
push
or
mov
mov
and
scas
sub
movsb
mov
push
sub
movsl
xchg
outsb
mov
push
jle
or
pop
std
out
or
sub
xchg
sub
pop
sbb
jmp
sahf
aam
ja
aam
xlat
adc
cmc
loopne
ret
cli
jae
push
repnz
mov
pop
out
stos
mov
inc
rclb
mov
lods
insb
test
xchg
adc
xchg
imul
xor
adc
pop
inc
mull
mov
pop
inc
shll
mov
mov
xor
mov
lods
xchg
repnz
je
pushf
paddb
flds
adc
and
jb
cmp
call
aaa
mov
pop
daa
xchg
cmc
insl
lcall
dec
xlat
mov
dec
in
add
adc
stos
jmp
xchg
sbb
push
ret
rcrl
or
in
roll
and
insb
xchg
clc
sbb
mov
xor
inc
cmp
mov
cmp
lret
insl
andb
inc
outsl
das
sbb
mov
jne
sbb
mov
out
pop
cmpsb
inc
fstpl
bound
pop
loopne
jle
stos
std
or
sbb
jne
mov
fdivl
cld
hlt
loope
xchg
and
cmp
sbb
arpl
jbe
cs
cld
fsts
cmp
leave
add
orb
lret
sub
dec
and
cwtl
push
inc
mov
imul
cmp
mov
mov
pop
push
pop
sahf
mov
pop
popf
dec
sbb
pop
sub
adc
out
nop
adc
jnp
mov
dec
mov
push
pushf
xchg
stos
or
repz
call
push
mov
adc
loop
ds
mov
repnz
mov
push
cmpsl
pop
jmp
mov
pusha
adc
cs
int
mov
addb
pop
push
cs
sbb
jge
pop
push
iret
pop
out
adc
lea
std
mov
xchg
cmp
xchg
xchg
xlat
sub
xor
out
ss
xor
fwait
cmp
sbb
aad
clc
mov
mov
js
repnz
and
mov
mov
xchg
jg
add
into
add
and
call
lret
iret
or
fwait
outsl
sti
xchg
popa
inc
cmp
pop
in
adc
outsl
pop
pop
cmp
push
ret
push
mov
repz
mov
push
stos
loope
cmovg
mov
rcl
mov
or
push
adc
sub
dec
and
sub
test
neg
shlb
rolb
jp
lods
cmp
shlb
xlat
jecxz
cmp
in
cmp
pop
mov
inc
test
dec
add
mov
sub
jecxz
scas
lea
xor
push
cmp
mov
jbe
imul
push
testb
jg
mov
aad
imul
xchg
rcll
cwtl
dec
mov
ret
add
sbb
mov
ja
test
and
xchg
or
adc
pushl
cmpsw
mov
stc
ds
mov
or
xchg
pushf
xchg
adc
adc
aam
jge
and
xor
or
lock
pop
jecxz
adc
jb
jne
mov
sbb
ljmp
xchg
imul
xor
int
stos
cmp
push
ds
popa
or
adc
sbb
or
fisubl
lods
xchg
xor
inc
ret
ret
mov
daa
enter
iret
es
push
stos
mov
arpl
repnz
cmc
dec
fiaddl
loopne
loop
cld
int
pop
dec
test
dec
bound
xor
imul
add
js
xor
adc
insb
or
movsl
xlat
seta
stos
sub
call
push
les
shr
outsb
push
sub
std
int
sub
sbb
mov
loopne
mov
fadds
stos
pop
or
xchg
es
in
pop
sub
lods
out
xor
xchg
imul
mov
xor
gs
test
stos
mov
iret
push
ljmp
icebp
cltd
pop
sbb
pusha
popf
mov
lods
aas
mov
and
addr16
cmpsb
push
jmp
or
loopne
out
int
inc
jecxz
outsl
das
and
jge
jne
xorl
incl
push
mov
mov
cmp
inc
jno
out
mov
aad
cmpsb
cwtl
js
push
xchg
dec
jg
data16
push
or
jp
jnp
bound
inc
push
arpl
inc
bsr
push
insl
and
testl
jno
fisttps
dec
ret
jns
xchg
clc
sbb
mov
cmp
push
mov
dec
fbld
scas
xchg
jns
mov
mov
daa
adc
lcall
dec
lods
push
fcompl
vpmadcsswd
mov
sti
mov
push
adc
imul
mov
dec
xchg
shr
ret
jno
in
test
adc
inc
push
imul
xchg
test
pop
push
loope
pop
sub
mov
inc
clc
jmp
jmp
mov
mov
inc
push
pushf
push
cmc
xor
push
ret
inc
lock
insb
mov
into
loopne
dec
mov
xchg
imul
sbb
rorb
imul
in
xor
cld
mov
in
inc
or
fistpll
out
leave
rcrb
je
add
push
repz
fstpt
sbb
add
xchg
ret
popa
aad
push
test
push
fstl
sub
es
rcll
sub
push
mov
popa
mov
cmp
push
fisubs
subl
jg
push
xor
outsl
loopne
push
lods
adc
popa
fucomi
sarb
add
gs
movsl
cltd
movl
dec
mov
mov
xchg
cli
mov
push
imul
movsb
pop
daa
mov
lea
movsb
sbb
aad
int3
aaa
xchg
inc
push
test
fdivrp
inc
push
stc
out
cmc
or
aas
testb
jmp
sbb
mov
adc
stos
and
add
adc
leave
xchg
cmp
mov
mov
ret
pop
and
rcl
aas
rcll
mov
dec
test
jmp
ret
es
lock
je
fcomi
popf
clc
mov
dec
movsb
dec
cmp
mov
xlat
mov
ja
cmpsl
or
enter
dec
pop
cmp
movsl
and
cmpl
in
pop
xor
push
popf
xchg
jge
stos
push
dec
neg
xchg
sbbb
lcall
dec
imul
mov
adc
jmp
ss
test
notb
shll
sbb
fistl
xchg
adc
mov
icebp
repz
mov
jmp
arpl
dec
jne
scas
imul
push
sahf
pusha
cmp
dec
or
push
scas
fidivrl
ret
outsb
rol
cltd
mov
sub
in
add
call
inc
jne
inc
or
cmp
std
clc
sub
sahf
cmp
mov
mov
mov
jmp
sahf
fnstsw
push
sbb
outsb
push
push
outsl
mov
or
test
nop
push
out
stos
aam
out
mov
add
adc
sarl
repz
push
pop
xor
or
adc
jecxz
adc
stos
cmp
jb
stos
jge
jnp
or
adc
pop
insb
mov
jl
xorl
mov
mov
es
mov
lret
inc
and
aas
cs
rcrb
cmp
insl
and
inc
pushf
xchg
rorb
adc
cmp
sub
and
pop
push
or
inc
rolb
or
or
lds
sahf
jle
stos
xchg
sbbb
hlt
repnz
pop
cmp
add
xchg
jo
mov
add
or
pop
je
imul
inc
jge
icebp
cmc
mov
jmp
notl
jb
pop
in
std
and
jge
mov
mov
or
imul
jg
sti
pop
gs
out
fidivrs
xchg
lahf
imul
lds
out
sahf
inc
imul
jae
int3
in
pop
or
jmp
mov
mov
imul
dec
jb
scas
or
mov
sar
xor
cmp
push
repz
or
pusha
sbb
jge
leave
cs
and
xchg
sbb
cltd
cmp
imul
fsubrl
mov
mov
loope
ror
cmpsl
nop
push
pop
inc
mov
fwait
cli
popf
in
cmp
movsb
sub
cmp
xchg
mov
inc
mov
ficomps
cmpsb
in
mov
lret
rcrl
ret
sarb
inc
fs
shlb
xchg
in
daa
push
and
aam
mov
mov
cmc
add
aam
and
dec
in
xchg
data16
dec
loope
or
add
mov
adc
fldenv
jnp
mov
cltd
mov
clc
jo
sub
or
push
cltd
fcompl
add
lds
decb
jp
mov
inc
dec
and
mov
fs
xor
sub
xorb
lea
xor
xchg
leave
shr
push
popf
lret
fcomp
xor
cmp
shlb
inc
or
stos
bnd
xchg
xor
add
jns
std
mov
insb
jbe
mov
in
inc
mov
dec
inc
gs
mov
cmp
bnd
xchg
or
lods
jmp
aad
jg
add
scas
test
fstps
mov
js
in
ja
insb
test
ror
sbb
push
or
xchg
sbb
adc
push
bound
in
aaa
and
mov
push
fidivl
xchg
fisubl
add
aaa
insl
inc
je
jp
pop
pusha
call
mov
jno
mov
sti
shrl
rol
pop
mov
sbb
mov
cmpsb
xchg
test
sbb
inc
out
scas
imul
jmp
adcl
lds
xchg
dec
jge
nop
call
pusha
mov
cmp
jne
mov
das
into
pop
cmp
xchg
scas
fistpl
sahf
pop
es
mov
pop
add
mov
cmp
lds
nop
dec
adc
stos
xlat
stc
inc
dec
outsb
sbb
imul
and
aad
cs
mov
out
mov
insl
mov
loope
hlt
and
mov
mov
ljmp
add
jbe
jb
push
sbb
sub
push
std
jp
xchg
rcll
jmp
jnp
or
in
mov
and
or
test
jl
jmp
fsubs
jo
dec
js
push
lret
cmp
dec
pop
mov
mov
xor
lock
jne
pop
jo
test
xchg
xor
incl
ds
in
jp
and
jg
jmp
xor
mov
pop
adc
test
in
or
push
adc
int3
nop
movsl
inc
aad
mov
xor
inc
popf
dec
data16
push
aas
xorb
out
ljmp
inc
les
fwait
pushf
mov
dec
test
jno
imul
cmp
cwtl
lcall
data16
sbb
or
arpl
icebp
sahf
mov
shrl
jmp
jne
out
inc
xchg
xlat
push
add
sub
movsl
or
adc
fdivrp
lods
rcl
or
mov
addb
or
push
pusha
es
add
sub
lcall
aad
push
cmc
xor
push
pop
jge
jno
mov
mov
or
in
sbb
mov
addr16
sub
js
push
push
aam
inc
adc
jne
adcl
push
out
mov
add
fnstcw
fwait
xor
sub
adcl
lds
jns
cmp
adc
push
lods
loope
pop
xchg
mov
imul
divb
lret
loopne
add
jns
imul
imul
xchg
movsl
bound
test
inc
jg
xchg
dec
inc
jle
lahf
mov
mov
push
push
xchg
in
bound
cmpb
push
orb
push
aam
push
fwait
push
cld
and
mov
fwait
push
call
bound
push
sbb
mov
mov
lret
pop
aad
repnz
and
xor
into
sbb
sti
adcb
out
adc
addr16
or
xor
daa
mov
sarl
shll
icebp
ja
test
lret
es
cmp
sbb
adc
mov
ljmp
loope
dec
in
std
push
loopne
sahf
ret
rclb
daa
jno,pt
fcoml
lret
or
iret
fiaddl
adc
dec
hlt
jg
and
pop
icebp
push
sbb
lret
rcrl
call
sbb
push
jg
sub
fistps
leave
cmpl
xor
xlat
imulb
inc
es
push
push
cld
or
cmp
shl
insl
xchg
orl
pusha
xchg
jns
push
mov
arpl
xchg
or
pop
sub
cmp
shl
xor
mov
fcomip
jbe
les
mov
jno
hlt
roll
stos
mov
mov
xchg
outsl
or
or
mov
or
jle
aam
imul
adc
mov
scas
xchg
add
jbe
sub
or
push
xchg
ret
out
aad
movsb
mov
inc
cwtl
mov
cmp
cmc
mov
inc
xor
push
push
stc
cltd
mov
add
out
into
ljmp
push
add
add
inc
fsubp
mov
lods
lahf
and
mov
sub
loopne
jp
lds
lea
add
imul
inc
pop
call
sarb
push
dec
and
pop
jp
xor
test
adc
pop
inc
cwtl
and
lret
mov
xchg
mov
lea
lcall
aaa
call
cmpsb
je
push
aam
sub
testb
inc
out
out
movsb
jmp
and
pop
mov
jmp
fnstsw
xchg
sbb
outsb
sbbb
mov
mov
xor
xchg
push
add
out
daa
lods
xlat
dec
inc
mov
lret
jae
and
pop
pusha
hlt
jle
js
flds
dec
icebp
ror
sarl
jg
mov
xor
js
lds
cmp
sti
idivb
lods
mov
test
lret
cmp
xor
ficoml
insb
or
push
add
ss
testb
filds
push
ret
ret
mov
fidivl
mov
mov
ror
mov
iret
aad
outsb
ljmp
popf
fstps
jb
adc
inc
cmp
ret
sbbb
out
shr
inc
ja
mov
popf
push
sbb
loope
fsubl
jbe
bound
iret
cld
push
jl
sbb
mov
loop
add
outsb
int3
loop
testb
ret
ret
mov
inc
dec
xor
cwtl
and
mov
xor
mov
test
dec
outsl
xor
push
pop
mov
xorl
loopne
nop
adc
inc
and
or
adc
movsl
in
pop
sub
aam
out
xchg
push
and
pop
mov
push
inc
outsb
cmp
dec
jle
imul
pop
jge
or
hlt
imul
push
scas
pop
in
bound
adc
gs
les
pop
or
movsl
xchg
and
out
jo
xchg
push
mov
adc
mov
sbb
pop
push
gs
mov
movsl
push
setne
jmp
pop
loope
aaa
cmp
rcl
clc
mov
xlat
jp
stc
cmc
adc
jp
and
sub
repnz
mov
pcmpgtb
push
and
push
into
sub
jno
push
cmp
movsl
cmp
mov
popf
repz
inc
jecxz
imul
and
mov
lock
lods
jo
stc
fisubs
inc
sbb
xchg
xchg
jb
sbb
jne
fstps
imul
dec
jge
push
push
sti
pop
mov
mov
stc
xchg
xorb
sub
push
sbb
jnp
mov
and
mov
addr16
sbb
jne
lods
adcl
in
in
cmpsb
mov
sbb
jmp
das
add
loope
test
test
arpl
mov
rolb
pop
add
push
dec
rcl
fmull
dec
lcall
jle
jle
aaa
sbb
xchg
push
jnp
mov
lock
ficomps
add
dec
mov
stos
subl
jbe
dec
pop
adc
jp
pop
mov
xchg
aam
jp
movsb
push
in
jno
out
scas
sub
mov
push
inc
add
xchg
xor
lea
scas
orb
shr
cltd
into
xchg
lcall
jnp
fildll
sbb
pushf
xlat
imul
jbe
pop
sbb
insl
inc
inc
int
xrelease
ffreep
add
pop
push
pusha
mov
mov
rolb
inc
into
jne
xor
sub
and
iret
cmpsb
lock
movsl
inc
xor
jbe
push
call
imul
pop
ss
sub
orb
xor
xor
cmp
dec
enter
inc
dec
push
imul
lcall
push
mov
pop
test
xchg
lock
ja
pushf
lods
dec
cmp
sahf
sub
loope
xchg
popf
scas
stc
dec
repnz
mov
xlat
mov
test
push
adc
loope
inc
enter
shlb
sbbl
pushf
andl
fwait
mov
shrb
cli
out
das
adc
cmc
cmc
pop
sti
cmp
dec
push
sbbb
stc
mov
pushf
xchg
xchg
fcoml
jne
or
xor
in
test
js
or
maskmovq
cli
sbb
mov
push
and
fildl
stos
mov
or
mov
xchg
jns
push
push
shll
daa
jno
lds
and
test
cmpsl
pop
cld
xor
mov
ds
js
inc
mov
xor
jge
add
inc
aaa
dec
shlb
aaa
mov
test
popf
fsubs
ds
mov
mov
movsl
jnp
imul
cmp
leave
jmp
mov
pop
mov
loop
push
test
jl
lret
je
push
or
or
cmp
bound
sbb
out
bound
cmp
xchg
decb
loopne
fidivs
aas
jb
in
popa
sub
add
clc
cmp
scas
lds
xchg
pop
mov
in
mov
fbstp
jb
mov
mov
ret
addl
inc
and
mov
movsl
test
cltd
xchg
ret
movsb
cs
bound
jmp
pop
jge
add
out
ljmp
ret
cmpl
lret
pop
rcll
movsl
icebp
mov
pushf
mov
hlt
sub
popf
pusha
loop
pop
jle
and
mov
adc
in
or
repz
rcrl
dec
les
push
es
mov
mov
sub
mov
jnp
dec
or
pop
bound
and
cs
xchg
outsb
dec
push
cmc
jno
push
push
pusha
mov
enter
cmp
pop
imul
adc
cmp
into
xor
cmp
or
push
xchg
ljmp
aas
repz
test
mov
xchg
lods
and
mov
mov
mov
and
mov
pushf
inc
sub
jns
pop
inc
adc
xchg
push
addr16
add
fwait
mov
scas
pop
xor
push
mov
js
inc
mov
mov
stos
dec
push
adc
int
andl
xor
adc
mov
or
cwtl
call
dec
mov
and
inc
xchg
addr16
and
das
ss
into
adcl
sbb
enter
fdivrs
rorl
out
xchg
mov
add
pop
mov
xchg
mov
stos
inc
in
int3
cmpsl
adc
rorb
add
jnp
mov
mov
push
leave
dec
loop
jecxz
fs
xchg
lret
sti
js
mov
jle
into
je
xchg
adc
jecxz
loope
inc
repnz
int3
into
mov
mov
dec
negb
xor
aam
stc
cmp
xor
or
sub
xchg
pusha
dec
movsb
jmp
jb
mov
cmc
mov
lahf
daa
iret
push
inc
push
mov
jb
ja
mov
cmpsl
mov
mov
lea
jecxz
adc
jecxz
out
cmp
jp
dec
xchg
cmp
scas
or
out
mov
js
fmul
push
mov
dec
shrl
outsb
adc
push
push
fwait
and
and
adc
addr16
rorb
cmp
pop
out
push
add
in
push
pop
xlat
pop
adc
and
and
imul
sub
jne
data16
retw
or
mov
movsl
pop
xchg
sahf
ja
pop
lods
xor
lret
aam
flds
add
lret
lock
jne
xchg
jne
mov
dec
lods
sub
mov
popa
mov
sub
leave
mov
out
push
dec
sar
sbb
dec
sbbl
mov
rorb
cld
test
pop
mov
cmc
jo
mov
scas
insl
sbb
jns
aad
dec
stos
sub
shll
mov
sbb
ror
rcrl
dec
adc
pop
dec
std
popf
add
mov
das
mov
push
sti
or
xchg
xchg
shll
jmp
sub
xchg
cltd
inc
xor
or
or
sar
pusha
xchg
sahf
push
bound
outsl
jg
lock
gs
outsb
lods
cmp
mul
fisttpll
cmpsl
xchg
popf
push
lods
test
daa
jecxz
pop
scas
pop
mov
pop
mov
jae
lret
or
mov
and
xchg
fistpll
test
pop
lahf
insl
pop
jnp
mov
fwait
jbe
fnsave
sub
lock
and
jno
inc
mov
into
mov
or
mov
out
jae
test
sub
mov
inc
std
in
test
push
popf
cmpsl
lock
ljmp
jp
outsb
mov
inc
bound
adc
and
mov
push
sbb
ljmp
movsl
insb
mov
jle
imul
cli
cwtl
mov
lcall
mov
jo
pop
andl
push
sbb
pop
addl
jecxz
mov
cmc
iret
ss
push
cld
mov
push
cmpsb
lea
inc
hlt
xor
mov
stos
add
ret
ss
sub
and
sbb
insl
aas
in
or
imul
adc
addb
mov
les
push
inc
mov
xor
shll
arpl
xchg
jecxz
stos
mov
aad
cmp
dec
iret
pusha
jp
loop
pop
lcall
scas
clc
cmp
pop
fistpl
roll
gs
fs
jbe
idivl
sti
out
cmp
and
test
test
jns
shr
movsb
mov
adc
outsb
push
stc
jne
cltd
push
sahf
popf
out
data16
cmp
cld
sbb
and
loop
push
cmp
sbb
jne
shl
lahf
cmp
imul
jbe,pn
sbb
cli
xchg
xchg
into
xor
fmuls
push
add
mov
push
and
pushf
mov
sub
mov
sbb
pop
sbb
xchg
and
or
sbb
shll
lds
imul
dec
dec
rorl
push
daa
test
sub
xchg
push
sbb
sarb
and
xchg
mov
dec
jmp
sbb
inc
xor
pop
std
cwtl
std
jmp
repnz
sbb
insl
ja
leave
bound
and
push
fstl
push
xor
out
faddl
push
mov
pop
out
pop
adc
jbe
dec
xor
int3
mov
mov
dec
sbb
cwtl
mov
out
fdivl
test
jle
inc
inc
lret
lock
ja
dec
sbb
pop
scas
movsl
loopne
jge
loope
mov
inc
cmpsl
pop
bound
or
cmp
jl
mov
or
mov
cltd
dec
and
jo
out
sbb
negl
jmp
jle
in
sbb
mov
cmp
rcrl
cmpsb
decl
loop
mov
lahf
jp
lods
sti
sub
fimull
adc
sub
dec
or
adc
mov
xchg
imul
sub
repz
xor
xor
add
push
sub
jmp
push
mov
sub
or
shll
mov
imul
jns
add
aam
cmp
es
rolb
sbb
test
add
push
or
ret
xchg
sbb
sub
lahf
mov
popa
xor
ljmp
xchg
popf
inc
sbb
cld
pop
mov
mov
fisttps
add
jnp
pushf
and
inc
pushf
fs
push
lods
scas
push
gs
mov
aas
or
add
and
mov
mov
cmp
test
dec
enter
push
mov
repz
cltd
ret
jecxz
shrb
out
mov
loop
xor
jle
sub
mov
mov
push
jnp
aad
xchg
fistpll
mov
into
cmp
cmp
rolb
iret
cmp
addb
pop
xor
jl
adc
arpl
outsb
push
pop
call
pop
insl
sub
push
xchg
pushf
clc
nop
jno
pop
dec
push
fwait
xchg
roll
xchg
test
pop
loop
push
testl
jecxz
test
outsl
dec
sub
rolb
or
into
push
sbb
sahf
mov
xchg
bound
push
sbb
mov
gs
add
sar
cmpsb
aas
jecxz
out
fbstp
scas
mov
pusha
js
cltd
dec
push
mov
scas
mov
mov
or
lods
rorb
inc
sbbb
mov
sbb
jp
ss
leave
push
negb
xor
stos
ret
pop
imul
lret
mov
aad
je
repz
xchg
push
lock
cs
fwait
cmova
and
or
mov
and
in
mov
outsb
addr16
iret
jmp
jmp
adc
sbb
jge
pop
repz
je
ds
test
cmp
push
mov
popf
cs
test
ss
cld
jle
pop
xchg
outsb
xor
fcoms
and
movsl
popa
shlb
or
xchg
mov
add
mov
fdivrl
and
imul
into
xor
idiv
adcb
leavew
jb
and
lods
mov
clc
js
ss
rorb
lea
xlat
arpl
cmpb
pop
popf
fs
cltd
lea
adc
mov
xchg
inc
sbb
fdivr
or
dec
jmp
aas
lods
sub
lahf
and
lret
lock
in
mov
insl
nop
pop
outsb
cmp
test
pop
js
add
jl
lds
loopne
mul
adc
std
sbb
and
add
jns
xor
std
call
dec
pushf
fdivrs
sar
ret
mov
mov
jle
movsl
push
jl
push
sti
ljmp
inc
inc
fucomp
out
dec
jl
das
dec
icebp
loope
cmpl
dec
xor
fsubrl
or
shl
sub
dec
lock
into
push
insl
loop
nop
adc
xchg
test
mul
inc
add
sbb
xorb
stc
xor
in
out
adc
int3
das
inc
cmp
sbb
cmp
lret
nop
sbb
shl
sti
rcll
push
je
loope
daa
sbb
lods
push
dec
jmp
lds
in
je
addb
andl
mov
dec
pusha
inc
mov
pop
arpl
cs
sbb
testl
jle
cmp
icebp
jle
pop
repz
insb
es
add
mov
add
cltd
inc
cmp
xor
pop
adc
xor
mov
sub
lods
test
rcll
jmp
inc
xor
xchg
inc
xor
sbb
mov
mov
inc
lahf
inc
xor
shrl
lahf
and
gs
repnz
xlat
shrb
push
add
adcl
and
repz
js
rorl
leave
gs
popf
mov
scas
adc
cmp
movsl
dec
insb
pop
cmp
jns
inc
sub
jnp
shl
bound
cmpb
adc
mov
sub
and
jae
and
mov
inc
rorb
jb
cmc
fisttpl
inc
sub
cmpsb
jae
les
bound
cmp
fsts
sub
jp
test
cs
mov
in
enter
shlb
adc
jp
and
out
in
xor
or
pop
pop
mov
push
icebp
dec
inc
insl
push
dec
scas
call
in
sub
nop
pop
out
pop
cli
and
pop
pop
dec
add
in
stos
aam
aaa
ds
mov
leave
jmp
jge
dec
movsb
cwtl
sti
int3
ss
jno
bound
testl
or
sub
inc
test
data16
data16
fdivrs
out
mov
mov
aaa
xlat
jmp
push
sub
jl
shrl
sahf
dec
and
xor
out
push
insb
push
lcall
dec
cmpsb
cmp
mov
cmp
cld
loope
sbb
test
daa
cmp
enter
push
fistpll
sbb
mov
inc
xchg
dec
fsubrs
or
jle
mov
scas
xchg
and
hlt
into
add
jg
in
daa
or
aaa
mov
dec
and
enter
je
or
sbb
jmp
pop
nop
push
jecxz
lds
mov
xlat
cmp
test
lock
pusha
xor
out
in
insl
mov
inc
pop
ja
ficompl
js
dec
jb
or
jge
fisubrl
into
xor
lods
push
icebp
call
pop
mov
pushf
in
dec
inc
jg
aaa
xor
push
pop
add
mov
sbb
mov
sub
add
mov
aad
and
inc
je
icebp
lcall
mov
dec
icebp
mov
lahf
outsb
lock
mov
sbb
inc
movaps
in
xor
jno
loope
iret
and
in
stos
leave
cmpsb
xchg
sub
lret
in
subb
int
aaa
stos
fsubrs
popf
adc
jae
xor
jne
inc
mov
push
lret
shll
out
lret
mov
add
mov
jle
jecxz
imul
push
subb
shl
sub
push
cmc
inc
xor
dec
xchg
sbb
and
insl
gs
jmp
mulb
sub
js
aaa
ja
mov
mov
stc
cmc
xchg
mov
pushf
mov
scas
lds
and
mul
pop
fstpl
ja
leave
xor
pusha
cs
clc
mov
sub
cmp
and
ficompl
adc
add
icebp
arpl
addr16
pop
and
cmc
out
fstps
push
sarl
or
loop
cltd
xchg
jno
inc
sub
inc
or
std
dec
jne
ret
leave
add
jecxz
into
and
movsb
sbb
push
mov
xlat
into
std
lea
xlat
push
mov
cltd
cmp
cmp
imul
xor
shl
jmp
jmp
scas
not
imul
adc
xchg
push
sbb
cmpsb
sbb
cmp
or
test
pop
dec
test
popf
mov
mov
push
test
and
add
add
sbb
rolb
popa
sub
sahf
mov
inc
pop
and
lock
fisttpll
fiadds
pop
popl
sbb
lds
mov
enter
sarb
xchg
ficoms
xor
ret
push
or
xchg
mov
add
shll
xor
ret
mov
sti
pusha
fistpll
js
cmp
inc
sbb
sub
movsb
sarb
xchg
out
cwtl
cmp
xchg
sub
nop
aam
dec
sub
loop
adc
fiaddl
je
jl
mov
outsb
lods
pop
outsb
ja
push
fsubrl
mov
out
inc
js
mov
mov
shll
mov
push
xchg
cmp
push
mov
inc
push
out
pop
dec
rclb
data16
pop
xchg
or
pop
arpl
clc
dec
or
lahf
push
mov
lcall
inc
jbe
mov
jne
lea
in
in
xor
jbe
jb
cmp
add
mov
push
and
in
mov
xchg
sbb
cli
mov
je
cmp
andb
jnp
mov
sbb
outsb
push
ljmp
inc
lahf
xchg
pop
mov
cmc
mov
dec
lret
adc
arpl
lcall
movsb
mov
xchg
in
sub
add
pop
mov
movsl
cmpsb
pusha
insl
fst
mov
mov
cs
and
mov
xchg
mov
pop
movsl
loope
xchg
stos
std
fwait
mov
add
mov
push
jo
push
mov
and
push
xchg
mov
xlat
cmpsb
adc
jmp
cmc
sub
int3
jb
sbb
cltd
adc
je
jb
clc
mov
xchg
shlb
cmp
fstpt
stc
sbb
xorb
and
lods
mov
sub
sti
arpl
xchg
adc
push
jmp
jae
and
mov
sti
subb
mov
jae
cmp
xchg
sub
test
dec
pop
jmp
dec
xchg
lea
xchg
lea
inc
repz
push
xlat
lea
cli
test
mov
cmpsl
lret
fildll
lock
xchg
pop
pop
inc
xchg
ret
iret
cli
outsl
jb
mov
dec
scas
dec
cmp
lret
loop
and
scas
or
lcall
jg
daa
test
adc
sub
cmp
aaa
mov
xchg
xchg
fdivrl
movsl
mov
jecxz
mov
shlb
jecxz
in
mov
xor
pusha
add
repz
hlt
mov
add
in
mov
mov
jo
lock
idivb
mov
mov
cwtl
jmp
add
and
repz
idivb
cmp
mov
cmp
or
subl
dec
jg
mov
jns
jae
jno
jge
xor
add
or
pusha
mov
add
out
xlat
scas
push
mov
popf
adc
es
sbb
or
adc
mov
sub
lret
mov
adc
ja
int3
sbb
outsb
lods
jl
in
xor
out
jo
mov
scas
movsl
xor
pop
movsl
mov
dec
cmp
stos
push
mov
jecxz
inc
repnz
addr16
sbb
jae
ret
mov
outsb
pop
cmp
stos
test
dec
jge
mov
jbe
or
shrl
lods
pop
ja
mul
mov
pop
add
mov
movsl
inc
add
sub
adc
in
xchg
mov
jmp
jbe
enter
cmp
xchg
mov
jge
push
jo
add
and
rolb
mov
jne
jle
push
fwait
mov
pop
lret
loopne
inc
idivl
movsb
lods
mov
fs
jl
inc
aas
js
outsl
call
je
nop
jg
xor
into
jns
sub
mov
dec
add
or
fdivrl
mov
xor
xchg
sub
fs
fsubl
pop
movsb
aas
add
arpl
gs
push
mov
lret
jg
cmc
push
adc
dec
test
adc
jae
pusha
inc
jne
fistl
dec
inc
jmp
pop
dec
test
jnp
fsubrp
pop
lock
mov
jbe
adc
out
xchg
mov
or
ret
mov
aas
insb
pop
je
fs
bound
in
mov
and
add
sub
icebp
mov
pusha
pop
xor
mov
pushf
dec
inc
out
out
inc
or
clc
sbb
xchg
sub
sub
arpl
xchg
sbb
repnz
orb
push
fiadds
push
mov
cmp
inc
mov
fs
or
add
mov
dec
pop
negb
arpl
and
push
sti
pop
adc
lock
inc
jnp
dec
test
addr16
xchg
xor
stos
das
out
dec
or
sub
or
leave
addb
pusha
clc
jg
in
lods
loope
mov
test
mov
xlat
cmp
mov
in
sbb
ss
rcll
jo
dec
cmp
addr16
je
inc
sub
adc
outsl
inc
or
pop
mov
pop
mov
xor
lcall
ss
mov
fs
mov
jmp
fs
and
jl
lds
std
aad
adc
inc
decb
test
bound
mov
adc
pop
push
div
lds
sbb
cwtl
or
cmp
fwait
test
icebp
loopne
ljmp
pop
xchg
je
scas
loopne
jo
flds
adcl
mov
xchg
push
push
adc
xor
out
arpl
out
xor
inc
inc
lret
mov
and
jl
test
adc
lret
pop
xor
jmp
or
cmp
sbb
sbb
cmpsl
mov
push
add
cmpb
push
cmp
mov
xchg
pop
dec
mov
int
rclb
push
xchg
and
cmpsb
mov
loopne
inc
cmpsb
xor
xchg
cltd
mov
in
test
lea
ljmpw
push
xlat
adc
xor
popf
push
xchg
mov
cmp
jo
in
js
pop
cld
imul
lds
cmc
pop
xor
push
ja
jns
fisubl
jnp
adc
dec
xor
mov
add
xchg
ljmp
xor
into
shll
inc
pop
in
cmp
mov
cmp
mov
or
pop
or
push
int3
pop
arpl
adc
adc
aas
ja
jle
adc
mov
dec
flds
xor
jbe
fsubl
imul
pop
lret
inc
arpl
xor
hlt
push
dec
hlt
js
jg
pop
mov
daa
scas
dec
test
cmp
mov
mov
dec
jg
lock
pop
loop
push
or
push
insb
dec
and
mov
inc
adc
mov
mov
testb
pushf
int
roll
and
add
out
orl
sti
lods
cs
xor
xchg
ljmp
repz
fnstcw
dec
nop
push
push
cmp
stc
orb
jcxz
iret
cmc
lock
cld
cmpsl
stos
pop
test
pop
lock
adc
sub
xor
es
mov
sub
pushf
mov
mov
daa
ja
push
or
jo
pop
jae
fsubr
pop
mov
push
cmp
and
inc
call
inc
mov
mov
into
out
das
in
scas
mov
adc
jns
shll
test
jle
pop
jg
adc
pop
hlt
aaa
adc
inc
dec
adc
inc
cli
jno
adc
lock
popf
fisttpll
sub
movsb
decl
jno
loope
push
loopne
fdivl
mov
inc
xchg
adc
in
xor
push
adc
iret
jle
lea
cmp
lret
icebp
push
inc
ss
pusha
mov
mov
dec
in
mov
dec
jo
outsb
cmc
inc
out
inc
movsb
push
push
enter
or
inc
mov
aad
push
loope
mov
lret
mov
loop
pop
loope
int3
stos
xchg
fs
pop
hlt
push
fldl
test
int
fcmovb
imul
fidivl
dec
rcll
sbb
push
adc
lods
fwait
imul
mov
dec
insb
push
std
sbb
aas
movsb
xchg
mov
into
pushf
or
addr16
pop
movsl
es
sub
jmp
shlb
inc
iret
jbe
mov
adc
test
in
iret
dec
mov
mov
cmc
and
push
jge
push
lds
ja
stos
inc
add
cli
sub
cli
adc
xor
iret
push
lods
mov
xor
push
add
aaa
bound
jg
add
xor
ret
sub
push
jnp
jo
ds
add
loope
or
sub
inc
sub
sub
jns
push
andl
mov
inc
dec
lock
dec
adc
mov
or
xor
push
ds
stos
aam
pop
lret
xor
ljmp
sub
adc
pop
xor
outsl
push
test
cmp
js
push
je
test
sub
dec
lahf
xchg
push
loop
mov
iret
shl
inc
andl
hlt
jp
test
test
add
push
mov
and
add
pop
mov
int3
ret
dec
ljmpw
loope
adc
sbb
cli
cs
sub
stos
adc
pop
out
leave
stc
mov
pop
pop
addr16
add
lea
add
pop
pop
ret
call
sahf
mov
popf
imul
xorb
adc
in
mov
xor
aaa
mov
mov
jns
mov
inc
cmp
test
outsl
dec
mov
or
jns
sbb
repnz
int
out
leave
bound
fdivrp
and
mov
cmp
cld
dec
or
pop
add
cmp
subl
jmp
cmpsb
sbb
imul
sti
or
sub
out
jmp
in
xchg
mov
negb
and
imul
mov
jnp
sbb
mov
sbbb
or
outsb
out
mov
push
ds
js
add
adc
jp
and
push
push
mov
mov
jo
jl
sub
pop
or
pop
je
add
movsl
inc
mov
icebp
mov
dec
mov
pop
repz
mov
mov
call
fcoml
ljmp
cltd
xor
xor
add
xchg
outsl
xchg
je
push
cmpsb
les
in
cmp
and
and
add
shr
addr16
push
outsb
fstl
rorl
scas
push
clc
inc
jo
mov
loope
jg
push
cmc
das
loop
lods
aad
test
xor
repz
xchg
mov
dec
sbb
test
mov
shrl
rclb
arpl
scas
aad
sahf
aam
cmpsb
jo
push
inc
cltd
mov
pop
addr16
jbe
out
mov
push
mov
out
idivl
fmuls
push
cld
fldt
push
dec
fucomi
sahf
mov
pop
lea
ljmp
add
dec
cli
cld
lcall
inc
cld
loop
mov
dec
mov
in
mov
mov
mov
cmp
push
adc
sub
sarb
lret
movb
lods
or
lds
push
arpl
pop
or
lahf
pop
lods
mul
ret
imul
add
incb
popa
test
idivl
movsb
add
dec
rep
xchg
mov
insb
mov
add
cmp
leave
mov
xchg
sahf
mov
fwait
outsb
cmp
or
mov
das
xchg
push
loope
leave
sub
pop
scas
repz
sar
lea
scas
push
cmpl
notb
cmpsb
vsubpd
aaa
mov
cmpsl
out
fisubrs
das
aad
push
mov
jg
fs
stos
push
mov
add
lods
cmp
testl
and
cmp
or
push
daa
cmpsb
leave
stos
test
inc
fcomps
cmc
cltd
in
xor
negb
movsl
add
add
cmpsb
jae
inc
xorps
and
cmp
jae
inc
jae
xor
pop
rcll
or
cmc
jp
stc
cmp
pusha
or
xchg
addl
ret
mov
dec
mov
scas
jns
cwtl
push
imul
fidivrs
fnstsw
and
loopne
fcomps
jle
aaa
lcall
dec
cs
or
xchg
ds
sbb
arpl
jl
rcrl
ret
xor
popa
rorl
xor
mov
lock
push
iret
jae
icebp
mov
pop
sub
push
pop
shll
pop
movsl
sbb
inc
jo
push
mov
lcall
inc
mov
cmp
dec
inc
fstpt
push
xor
in
in
mov
jmp
xor
add
push
pop
push
pop
cs
aam
or
xchg
xor
int
sbb
insl
lret
mov
sbbl
pop
out
lea
out
dec
imul
or
imul
push
add
sbb
mov
pop
test
push
and
sahf
fcmovnu
or
fnsave
in
dec
push
mov
outsl
fsubr
inc
add
or
dec
decb
mov
xor
and
lds
mov
and
push
mov
mov
test
aam
add
movsl
pusha
outsb
jnp
and
ljmp
and
scas
scas
idivb
xchg
dec
das
mov
jo
mov
sbb
inc
enter
xor
adc
pop
gs
aad
jb
cltd
xchg
add
xor
ds
jge
cld
inc
ret
jle
adc
mov
xor
insl
lds
mov
mov
pop
sub
imul
imul
xchg
xor
push
stc
stos
das
adc
and
inc
push
cs
xchg
xchg
cmp
sbb
arpl
lcall
dec
xor
push
mov
gs
stos
xor
pusha
add
movswl
ljmp
add
loopne
rcr
fs
cmpsl
andb
adc
push
or
sbb
cltd
mov
xchg
ret
cmp
in
xchg
sbb
pop
xchg
lods
sarb
lds
mov
jle
pop
jbe
clc
or
leave
loope
or
push
hlt
mov
mov
sub
jge
sbb
jne
xor
popf
dec
mov
cmp
test
lods
out
push
or
ss
sbb
pop
lahf
in
lret
adc
push
pop
into
mov
xor
cli
mov
in
and
popa
push
repz
push
ss
insb
mov
lds
lcall
adcl
mov
or
xor
outsl
mov
sahf
pusha
mov
xor
in
popa
xchg
js
inc
pop
cli
scas
push
int3
or
test
shlb
mov
aaa
push
pop
mov
jmp
cld
shl
sti
mov
out
and
sub
es
mov
repz
jns
out
jmp
lret
fimull
out
aad
push
shl
mov
sahf
sbb
pusha
jmp
mov
sbb
push
repnz
pop
push
add
stos
test
sub
imul
cmp
and
pop
mov
cmc
fimuls
imul
and
xor
out
mov
lods
adc
add
mov
inc
xchg
iret
stos
inc
popf
sub
or
dec
pop
push
fbstp
add
push
in
pop
pusha
lock
fs
rol
out
push
outsb
lock
hlt
cld
push
push
xor
hlt
mov
mov
dec
xor
cwtl
pop
fcoms
out
push
push
sbb
iret
xor
adc
mov
sbb
imul
add
mov
cwtl
cmp
mov
lahf
push
xor
pushf
xchg
mov
push
jb
scas
jno
lret
jg
xchg
jg
xchg
mov
pop
repnz
imul
pop
fdivp
mov
cwtl
out
filds
iret
mov
lret
sub
imul
fnstenv
and
int
dec
mov
inc
les
insl
mov
insb
mov
je
mov
mov
xchg
push
lods
mov
mov
inc
jo
nop
mov
jo
addr16
xor
mov
out
aaa
lock
lock
add
arpl
bound
out
pop
out
push
insb
cli
aam
pop
adc
add
and
mov
push
andl
xchg
mov
nop
inc
sarl
pop
clc
add
xchg
les
clc
je
sub
mov
cmp
lret
int
push
sub
jle
cmpsl
in
and
push
les
xchg
insl
ja
and
stos
jmp
cmp
pop
mov
data16
stos
pop
movsl
add
bound
mull
push
jnp
jns
cmp
inc
cmpsb
add
xchg
push
in
and
xchg
mov
cmpsb
movsb
outsb
xor
lret
in
into
or
push
movsb
pop
nop
aad
sbb
imul
jge
xchg
pop
sbb
pop
sub
adc
and
movsl
inc
and
je
lock
add
jo
mov
out
xchg
adc
dec
or
dec
notl
insl
ja
dec
cmp
mov
loop
pop
lea
push
lods
shll
or
bound
and
jno
dec
pushf
cwtl
popa
xchg
sahf
cmp
jno
sbb
dec
repnz
ds
add
addr16
call
jge
xchg
xchg
loope
out
push
hlt
loopne
and
jmp
stc
pop
or
aaa
add
cmp
pop
jns
xchg
and
les
push
fdivl
rorl
mov
and
imul
push
mov
and
fidivl
xchg
lods
in
push
dec
lea
negb
fildl
es
call
sub
push
call
dec
adc
enter
push
pushl
scas
push
mov
cwtl
adc
mov
push
lock
cli
test
popa
pop
mov
sub
mov
sub
out
es
rcrl
inc
jmp
mov
mov
mov
cmp
push
fldt
add
in
insb
test
sub
mov
lods
xchg
outsb
pop
ss
test
or
cmp
fmulp
mov
xchg
lock
fiaddl
icebp
jb
fldcw
mov
loopne
std
out
xchg
xor
out
sahf
jb
cltd
arpl
out
or
cmp
gs
pusha
lock
jns
inc
mov
cmc
arpl
sub
aas
sub
arpl
xchg
inc
pop
jge
xorb
mov
pop
xlat
lds
stos
mov
mov
cmp
hlt
push
cmpsl
scas
out
in
jg
xchg
nop
push
loope
dec
sbb
sub
xor
test
xchg
inc
mov
push
jl
add
jae
xor
mov
out
cmp
loop
fidivrs
pop
jecxz
add
push
mov
lea
dec
sub
rorl
xchg
mov
adc
test
cs
fnstenv
xlat
cmpsl
jge
mov
xchg
xchg
rclb
jns
add
lods
sahf
mov
ds
cmp
push
daa
insl
mov
fsubrs
and
aaa
cmp
insb
jbe
pop
cwtl
sahf
repz
cmpsl
jb
outsb
out
mov
pop
xor
pop
add
in
mov
lock
push
xchg
push
fwait
xor
sbb
jae
mov
ror
pop
out
adc
test
xchg
pop
mov
xchg
sub
dec
mov
lahf
sbb
clc
aas
jp
jbe
ret
add
cld
jbe
fimuls
pop
stos
sbb
popf
cmpsb
adcb
dec
add
aaa
or
and
sbb
dec
dec
ret
cmc
dec
xchg
sbb
xor
adc
dec
leave
sub
push
dec
push
ds
cld
repnz
movsl
mov
icebp
das
adc
movsl
sahf
cli
hlt
mov
popf
mov
sub
aaa
sub
mov
jp
outsl
aaa
push
insb
loop
mov
jmp
or
imul
inc
pop
pop
mov
mov
sub
loope
mov
in
dec
idivb
pop
scas
jg
fcompl
lret
popa
scas
cmp
xchg
push
xchg
cmp
xlat
movsb
fwait
decl
pushf
or
ret
xchg
or
inc
fnstsw
jmp
pop
xor
and
pop
loop
cld
inc
cmp
push
inc
shrb
cmp
es
aam
pop
clc
in
jecxz
inc
lcall
fbld
mov
das
movsb
cmpl
addl
repnz
cmp
mov
faddp
xor
mov
popa
in
int
push
dec
push
jmp
mov
and
cmp
ret
lea
jae
xor
push
sbb
out
adc
fsubp
out
test
push
add
mov
mov
lahf
int
scas
aad
fimull
cmp
sub
imul
imul
cmp
jg
ss
inc
sub
daa
mov
roll
sub
test
pop
ret
push
jo
add
ficoms
push
test
pop
lahf
cs
jae
jns
jo
stc
neg
xchg
lea
lahf
pop
push
mov
mov
mov
int
or
es
xor
or
dec
and
mov
dec
aam
shrl
std
add
fs
cmp
xor
cli
add
cmpsl
rorb
jge
ljmp
testl
sbb
ret
pop
xchg
leave
push
xchg
imul
sbb
lret
push
popa
push
inc
pop
outsl
sub
scas
pop
add
sub
mov
xchg
add
dec
inc
das
or
js
cmp
pop
push
sub
cltd
ss
ds
fst
rcrb
jb
rolb
jg
bound
outsl
sub
inc
pop
repz
aaa
test
adc
stc
cwtl
pop
cmc
pop
xchg
push
push
nop
imul
push
mov
clc
test
sub
aaa
jbe
dec
or
in
enter
sub
das
mov
cmp
std
test
mov
jmp
js
dec
ficoml
lahf
bound
mov
je
int3
push
cmpsb
lock
or
or
rorb
stos
pusha
mov
add
cmp
mov
loopne
jp
mov
push
fcoml
stc
outsl
pop
pop
pop
in
xor
out
shll
add
pop
xor
push
push
add
test
dec
pop
in
cmpsb
mov
dec
addr16
mov
push
and
cmpsl
lods
jmp
push
push
inc
sub
mov
xor
mov
sbb
lcall
mov
push
jno
push
cmp
sub
out
mov
push
sbb
mov
stos
cltd
scas
push
loopne
xchg
fcmove
fcoms
rcrl
sub
pop
adcl
xchg
sbb
xor
rcll
sarb
pop
xor
sub
sbb
mov
das
push
cwtl
sub
inc
or
rcl
and
mov
and
cmp
sub
adc
jmp
repnz
mov
aas
sahf
jg
mov
adc
adc
inc
rorb
or
adc
cmp
xchg
cmpsb
mov
out
pop
push
xchg
mov
repnz
mul
lds
mov
popl
cmp
jnp
xchg
mov
pushf
sbbb
sahf
fistpll
shrl
cmp
lret
mov
jbe
adc
rcrb
and
add
mov
or
lods
and
jae
sub
faddl
cmp
test
inc
push
sbb
ficomps
xacquire
jae
insb
jecxz
cmc
xorl
and
cmp
jle
mov
out
and
iret
test
mov
and
aad
lea
push
pop
pusha
pusha
mov
adc
jmp
aad
scas
inc
sbb
test
pop
adc
rclb
test
std
sbb
pop
pop
sbb
pop
adc
lret
mov
insb
mov
sbb
cld
gs
xchg
jo
arpl
sub
inc
mov
mov
jns
lods
push
mov
xor
call
mov
push
mov
std
lds
mov
fcompl
or
aad
or
in
repz
daa
xchg
adc
icebp
jecxz
fistps
stc
mov
jle
cltd
sub
pop
mov
mov
out
mov
stc
xor
mov
push
mov
inc
test
push
or
mov
fsubp
lcall
sbb
adc
and
mov
sub
outsl
stc
inc
testl
jb
inc
aas
mov
cmp
movsb
xchg
imul
sbb
push
mov
insl
and
leave
fsubrl
xchg
jae
mov
add
repnz
pop
adc
add
cmp
call
inc
scas
dec
xchg
xor
jg
cwtl
arpl
adc
and
jne
out
or
push
neg
push
inc
insb
lods
or
inc
and
test
jbe
inc
stos
sub
xor
iret
xchg
mov
or
cmp
mov
pop
inc
aaa
pop
pop
popa
outsl
cmp
int3
adc
int
rorb
pop
cmp
repnz
inc
cmova
push
les
pop
in
mov
ss
jno
nop
lds
inc
fwait
insb
jp
addr16
jae
jb
xor
not
fisttps
sbb
icebp
or
or
mov
fidivs
xchg
jno
adc
sub
imul
mov
sub
faddl
popl
jns
ja
mov
adc
adc
add
adc
andb
mov
dec
hlt
cmp
add
and
push
or
lret
std
fucomp
fnstenv
stos
cmc
cwtl
pop
jnp
lods
enter
int3
cs
pop
mov
mov
cli
push
cmpsb
gs
jbe
mov
out
in
push
je
shr
int
mov
test
pop
push
push
sarl
fwait
mov
dec
sub
pop
xchg
test
iret
jle
lods
enter
mov
into
xchg
mov
addb
cmp
dec
shll
aas
lea
incb
jmp
ds
aad
push
aam
imul
jb
push
adc
push
das
fidivrs
dec
add
pop
fistpl
xchg
push
repz
ret
dec
std
scas
bnd
inc
sub
or
inc
or
mov
or
int3
dec
or
push
iret
sub
cmp
jo
xor
adc
and
xor
jge
or
mov
or
xlat
imul
xor
cmpsl
jnp
lea
push
cmpsl
sbbl
jb
in
push
and
rol
mov
cwtl
in
sbb
mov
xchg
mov
xchg
call
adc
pop
inc
cmp
lods
loopne
leave
xchg
adc
jmp
pop
sahf
push
inc
jle,pn
test
and
mov
mov
and
imul
sti
in
jge
cmpsl
jns
xlat
add
jb
lcall
xchg
outsb
sub
mov
inc
aaa
xchg
dec
aaa
jmp
push
loopne
push
xchg
aam
pop
xor
lods
mov
je
mov
arpl
cmp
jge
xor
loop
sahf
mov
and
fisubs
push
adc
dec
push
or
fdiv
mulb
push
int
sbb
dec
arpl
xchg
pushf
ret
loop
inc
inc
mov
cmp
pop
mov
insb
test
sub
mov
jmp
push
mov
mov
mov
stos
aas
jmp
bound
xchg
jns
mov
sub
cmc
cmpsb
pop
mul
sarl
xbegin
fisubrs
outsl
cmp
pop
aaa
divb
or
mov
xchg
pop
sti
mov
cmc
sbb
pop
push
test
xor
mov
xchg
sub
pcmpgtb
stos
lret
popf
dec
int
mov
jo
aam
dec
jecxz
sbb
mov
xchg
mov
mov
dec
aas
add
movsl
fs
and
cmp
test
fstpt
daa
cwtl
fwait
xchg
adc
outsl
lea
ficoml
bound
lock
xchg
lea
mov
fiaddl
shrl
subl
pop
shrb
aad
lcall
in
sub
lahf
mov
xor
ret
pop
xrelease
sti
movsb
daa
sub
lcall
inc
icebp
icebp
in
cltd
xchg
pop
clc
shlb
insl
insl
inc
loope
sbb
fwait
iret
dec
in
sub
lock
xchg
insb
pop
cli
xor
inc
sti
xor
lods
mov
inc
arpl
jbe
push
lea
mov
or
jbe
pop
jo
xchg
ficomps
mov
stos
fwait
cmp
sbb
push
shrb
or
lahf
pop
and
rolb
andl
stos
xor
ds
rorl
or
insb
pop
cmp
inc
insb
or
inc
xor
rorb
test
setne
subl
cmp
xchg
xorb
mov
addr16
and
push
push
test
dec
fnstcw
sbb
and
es
inc
push
cmp
cwtl
jmp
mov
push
nop
sub
jne
jle
lods
dec
sbb
cmp
loop
sub
lret
in
repnz
ds
hlt
push
dec
xchg
mov
imul
pop
lret
test
mov
popf
cltd
xchg
sbb
jns
xchg
mov
lcall
or
repz
in
mov
mov
fwait
jno
andb
cmp
jo
std
lock
add
pop
ret
lock
ret
cld
cwtl
adc
mov
in
lret
mov
lods
add
xor
movsb
xor
cld
adc
push
lahf
lds
adc
push
cmp
xor
imul
ss
push
lahf
push
movups
fldt
add
sub
in
iret
sub
push
sarb
lahf
jp
dec
push
out
xor
ret
pop
cmpsl
sub
sbb
xchg
ret
lea
cmp
push
ss
loopne
adc
ljmp
sub
fistpl
test
pop
add
mov
gs
lods
addr16
push
sbb
push
or
repnz
ficompl
imul
jmp
mov
lahf
adc
xlat
cmp
push
mov
mov
and
pop
pop
ss
add
fwait
inc
mov
mov
pusha
xchg
sub
mov
push
sub
loop
inc
mov
lea
pop
and
scas
mov
mov
pop
mov
gs
fidivs
movsl
adc
lahf
or
je
xchg
xchg
and
scas
adc
inc
clc
cld
leave
sbb
pop
les
and
sbb
add
pop
pop
out
add
in
jns
push
daa
mov
pushf
add
push
enter
nop
cltd
add
inc
push
repnz
pop
out
mov
dec
xorl
jp
mov
mov
add
sub
push
outsb
mov
jecxz
sub
adc
xchg
inc
out
lock
cltd
push
inc
sbb
pop
dec
enter
jbe
xchg
cmp
es
movsl
es
mov
mov
andl
xor
sub
andb
xor
cmp
xchg
sbbb
mov
punpcklwd
mov
inc
insl
pop
es
mov
fs
jmp
sub
xor
into
pop
pop
and
ljmp
subb
roll
add
lret
adcb
push
push
jae
in
push
push
int3
int
jae
or
mov
aad
dec
xchg
fists
xchg
mov
das
out
push
mov
pop
call
out
adc
dec
stos
mov
xor
cmp
inc
stc
mov
sub
rorl
int3
pop
aas
addr16
xchg
leave
lahf
sbb
scas
in
sti
cmp
jnp
dec
xor
inc
outsl
arpl
outsb
jae
bound
sub
hlt
das
adc
xor
mov
push
mov
fwait
aas
mov
mov
push
sti
das
add
orb
jb
sbb
loope
fucompp
scas
dec
nop
insb
insb
js
jnp
xchg
xchg
mov
sub
cwtl
subl
mov
gs
movsl
inc
jle
pop
xorb
pop
xchg
hlt
dec
testl
push
cmp
stos
sbb
movsl
cmp
je
bound
ss
sbb
cmp
rcrb
mov
mov
or
ret
xor
popa
call
fnstsw
sbbl
fnstsw
mov
mov
cld
push
pop
xchg
mov
xor
ficoms
dec
xchg
rclb
dec
das
sub
sub
pusha
ficoms
pop
lods
out
mov
negb
cmp
insb
xchg
daa
mov
cmp
and
ss
andb
xchg
push
dec
aaa
jl
pop
adc
and
cmp
sub
dec
mov
push
pop
adc
fxam
das
mov
or
dec
mov
push
in
popa
bound
fs
movsl
ret
popl
lods
jmp
sti
out
add
pop
and
jbe
dec
incl
bound
arpl
dec
ret
mov
ret
and
add
loope
inc
and
mov
mov
push
outsl
adc
mov
out
sarb
lock
adcl
fnstsw
rolb
clc
sahf
mov
mov
jno
in
add
nop
lret
pop
movb
xchg
xchg
aam
js
jns
pop
fimull
sbb
ret
scas
xlat
xor
push
cmp
sbb
jnp
push
sbb
jb
xor
pushf
fistl
inc
jo
insl
dec
add
cmpsl
mov
cmp
jl
xchg
xchg
mov
out
mov
adc
js
push
adc
fsqrt
fucom
adc
insb
inc
lcall
sub
nop
sub
push
pop
lea
mov
fistpll
test
enter
movsb
pop
ja
pop
jb
mov
call
bts
mov
data16
jp
mov
or
fstpt
mov
mov
and
inc
mov
mov
xchg
pop
mov
push
out
sar
mov
fcoml
sbb
insl
pop
and
jns
stc
mov
aam
mov
inc
lds
repz
mov
mov
pusha
lcall
and
add
inc
mov
xor
sub
jl
add
cmpsl
xor
jo
xchg
xor
popa
iret
sub
aad
push
mov
and
mov
push
sar
leave
inc
mov
cmp
jae
or
insl
jmp
in
sub
filds
inc
hlt
out
push
lods
cmp
adc
push
mov
push
insb
sub
or
shl
sbb
cli
cmp
sub
lea
add
ds
dec
das
cmp
test
sub
out
mov
mov
aas
push
out
jg
mov
cmp
sub
in
andl
xor
pop
push
inc
addr16
hlt
sbb
xlat
cli
out
sub
or
shrl
mov
mov
or
pop
icebp
stc
xor
paddq
jbe
jl
ja
inc
cmpsl
lods
enter
xor
cmp
or
sbb
mov
outsl
pop
and
cmp
fisubrs
es
rclb
sarl
jo
outsb
out
jne
dec
bound
jp
jo
sub
ja
and
mov
dec
mov
jecxz
cwtl
and
jmp
dec
insb
lcall
mov
sbb
pop
sub
or
or
inc
mov
int
mov
inc
arpl
jge
mov
jbe
imul
in
imul
xchg
out
loope
mov
dec
clc
cmpsb
mov
dec
push
pop
push
sarb
jnp
xor
sbb
lods
adc
mov
and
and
outsl
or
add
repz
inc
stos
push
mov
cmp
fs
push
fists
xchg
out
add
or
pusha
aaa
into
dec
or
in
cltd
adc
cmp
mov
sbb
pusha
ss
nop
jns
aaa
xchg
in
or
mov
arpl
and
sub
pop
push
ret
push
jbe
sar
sub
ret
push
xorl
ror
jecxz
mov
push
repnz
in
mov
mov
fimull
out
push
cld
push
jecxz
jmp
addl
push
pop
lret
add
bound
pop
loop
test
scas
iret
mov
cmpsb
fidivrs
inc
test
rclb
and
inc
xor
repz
adc
popa
dec
out
jge
cmp
movsb
add
cld
in
mov
jns
add
pop
mov
sub
pop
clc
ds
out
cmc
add
dec
jecxz
clc
fdivl
sub
xchg
fcmovbe
int3
scas
es
sub
mov
add
sbb
pop
out
mov
lds
sarb
sti
dec
sub
cli
ss
divb
enter
and
push
and
cmpeqps
outsb
lahf
test
daa
bsr
fcmovnbe
fucomp
addr16
sub
aas
into
sbb
ficompl
scas
push
jle
pop
adc
or
je
gs
repnz
mov
xchg
pop
adc
jns
xchg
jl
fisttpll
cmp
insb
inc
pusha
mulb
das
mov
int
cltd
sbb
shll
push
repnz
loopne
mov
pop
ds
test
push
ficoms
jae
rcll
cmp
jecxz
jae
sub
gs
jmp
mov
cmp
cmp
gs
adc
xor
popf
jnp
adc
enter
and
dec
pushf
pop
add
inc
cltd
in
jae
in
and
jge
sar
fbld
push
fidivrl
push
iret
jnp
push
and
out
cmp
pop
cmp
pop
bound
xchg
or
pop
pop
call
dec
imul
push
loopne
outsb
inc
mov
jl
pop
and
cmp
faddl
lret
jg
mov
fmulp
sar
insb
jl
push
inc
jecxz
fisubl
and
aas
push
negl
arpl
cmpsb
int3
xchg
imul
inc
mov
lret
mov
in
jmp
std
pop
add
out
imul
xchg
in
pop
gs
xchg
cmp
test
stc
fisubs
mov
movsl
push
in
inc
jo
jnp
mov
xor
scas
push
jl
mov
mov
and
inc
mov
popa
imul
dec
loope
xorb
imul
fwait
jae
mov
aaa
xchg
jb
bound
xor
mov
std
and
adc
push
xchg
adc
pop
mov
dec
cltd
pop
xlat
or
pushf
xor
test
jo
ds
fistps
dec
test
mov
shll
or
mov
pusha
mov
cmp
pop
sub
sub
add
jns
jns
je
xchg
subl
and
mov
dec
fwait
arpl
data16
outsb
sahf
jp
scas
mov
xor
popa
pusha
repnz
test
in
fsubr
outsb
push
test
jl
xorb
out
sbb
mov
or
lods
push
mov
aam
dec
mov
push
lods
pop
and
jle
push
icebp
mov
outsl
ja
decb
jae
cmp
loope
ljmp
dec
pop
and
xchg
mov
adc
rcrl
lcall
and
mov
pop
in
hlt
xchg
mov
sbb
rcrl
mov
cmp
xchg
push
mov
pop
in
mov
aaa
fmuls
add
imul
sub
mov
cmpsl
clc
ret
lods
mov
cmpl
sub
jno
cmpsl
inc
imul
inc
mov
and
andb
fcoml
sbb
xchg
and
inc
push
leave
popf
jl
nop
push
xchg
dec
cmpsb
xor
or
lret
and
pusha
ret
and
dec
out
mov
inc
and
mov
jbe
push
cwtl
movb
mov
inc
call
jnp
je
add
jmp
aaa
jmp
mov
popa
leave
pop
jmp
into
in
aam
mov
out
mov
mov
xchg
xor
lds
adcl
lock
sub
arpl
add
dec
mov
popf
syscall
and
into
mov
movsb
in
test
fwait
pop
and
mov
stos
cmp
iret
fisubs
aas
add
test
ds
or
push
jle
adc
nop
xor
sub
inc
fcomp
xor
jb
mov
cwtl
aaa
test
lock
lahf
adc
outsl
insb
test
jnp
xchg
and
in
xchg
mov
outsl
mov
loope
jb
test
cmpsb
push
mov
mov
inc
mov
mov
aad
cmc
inc
push
push
stc
inc
setne
fistpl
mov
icebp
dec
ss
popf
cmp
lahf
jbe
mov
outsl
inc
es
test
xor
add
pop
xor
rolb
mov
mov
daa
pushf
loopne
into
sbbl
loopne
lahf
call
xor
cli
outsl
xor
mov
mov
mov
sbb
sbb
mov
pop
lcall
jo
aad
or
mov
push
adc
sub
into
push
das
sub
enter
jns,pt
mov
jle
popa
mov
jecxz
out
mov
jno
hlt
xchg
mov
jo
dec
mov
andl
clc
push
push
mov
pop
pop
cli
sbb
mov
ret
out
inc
sbb
movl
lods
imulb
shlb
cmp
or
sbb
jae
add
repnz
dec
test
jg
or
lds
push
aas
jno
fwait
xor
pop
jns
cs
sar
fucom
xchg
aas
pop
jecxz
xchg
adc
xor
jo
sbb
loopne
push
pop
dec
cld
aad
les
mov
sbb
shrb
lahf
outsb
ja
add
fsubs
adc
in
test
mov
sbb
xor
cmc
xor
lret
stos
xchg
out
icebp
lahf
gs
jmp
mov
push
push
jae
imul
loope
jne
inc
movl
inc
or
sahf
inc
aam
add
mov
xchg
adc
test
ljmp
data16
dec
cld
nop
cmpl
sbb
ja
repnz
ja
dec
jae
arpl
lods
xor
insl
subb
cmpsb
stc
push
mov
ljmp
and
popa
or
daa
pop
jmp
xchg
pop
push
inc
and
dec
lds
pop
ljmp
pop
push
sahf
cli
mov
mov
popf
aad
pop
mov
popa
hlt
test
mov
icebp
jp
or
stos
rorb
lahf
xchg
fstps
loop
mov
mov
and
shlb
pop
adc
xorb
rclb
call
inc
cs
lods
mov
inc
int3
push
movb
and
push
ret
or
popf
sub
mov
dec
sbb
cmp
repnz
jb
int3
leave
repnz
in
rclb
into
fld
dec
cld
insb
pushf
xchg
pop
clc
lcall
std
js
sbb
imul
imul
mov
mov
mov
jge
xchg
cmpsb
xor
dec
push
adc
adc
jl
pushf
lods
cmp
loope
push
cld
xor
push
pop
fucomip
sub
jmp
xor
cmp
inc
dec
scas
or
jns
in
and
mov
js
outsl
or
imul
cmp
xchg
lock
or
psrld
test
cmp
sbbl
scas
pushl
imul
mov
cld
cmp
out
lock
nop
jno
mov
scas
cmc
inc
inc
popl
adc
test
add
inc
inc
repz
cli
dec
jmp
mov
lahf
ss
push
lsl
movsl
out
int3
lret
scas
or
cli
lods
xor
sti
ds
add
xor
rorb
dec
insb
and
cmp
aam
mov
and
fildll
outsb
inc
sbb
jge
insl
mov
xchg
xchg
jnp
aad
in
xor
cmp
jno
mov
jb
cmp
mov
xor
dec
enter
lods
lock
xchg
testl
xor
stos
cmovl
mov
sub
add
dec
pop
std
xor
icebp
mov
inc
xlat
push
xchg
outsb
subb
dec
fs
mov
outsb
mov
sbb
into
pop
inc
arpl
aam
sub
jg
jl
decb
xchg
cmp
xchg
mov
lods
jp
pcmpgtb
aad
js
fmull
scas
inc
aad
xchg
pop
mov
lahf
adc
cmp
sti
xchg
shlb
mov
test
lods
enter
inc
lret
mov
repnz
je
mov
mov
pop
push
xlat
fidivrs
sub
xchg
lock
xchg
jge
cmpl
cmp
sbb
std
mov
sbb
and
xor
jb
lahf
aaa
stc
mov
fdivl
xor
outsl
addl
mov
loop
cmp
insl
test
loope
xchg
sub
pusha
mov
mov
jmp
loope
sahf
cmp
add
jle
data16
lret
pop
add
rclb
xlat
push
in
pop
jp
mov
jns
xchg
push
xor
in
mov
je
push
pop
out
pushf
enter
flds
xchg
adc
mov
mov
mov
sbb
ja
inc
inc
push
jns
out
repz
inc
sbb
pop
cmp
shrb
imul
rcrl
push
stos
lock
jae
pop
sbb
test
and
fsubrs
add
addb
mov
mov
mov
fmuls
sbb
fnstenv
fcompl
mov
sahf
cli
scas
dec
popa
and
movsl
arpl
into
mov
sbb
out
ja
cli
pop
mov
xor
mov
pop
xor
rcll
adc
stos
stos
lcall
inc
jae
adc
cli
jp
daa
sub
dec
aad
lock
xor
mov
push
icebp
adc
fisttps
lcall
fcomip
lahf
inc
pop
jns
mov
inc
and
movsl
xchg
sub
sub
adc
aaa
push
pop
mov
mov
xor
fistl
inc
test
pusha
outsb
je
addr16
sbb
jg
movq
fsubr
mov
cmp
aad
stos
outsl
jne
mov
fstpl
arpl
in
jne
fadd
mov
lret
lods
inc
cmp
mov
mov
insb
lret
adc
std
pop
inc
aaa
into
xorl
lods
pop
mov
mov
push
cltd
dec
lea
pop
or
sbb
out
nop
push
cmpsb
test
add
out
fisttpl
mov
mov
add
mov
cmp
sub
std
test
daa
imul
jb
loopne
push
dec
adc
adc
pop
ret
adc
dec
pop
inc
mov
idivl
mov
fbstp
jmp
fs
js
fs
xor
stos
pop
jg
out
mov
push
xor
dec
lea
inc
xor
sub
inc
or
rcrb
add
jmp
test
jnp
faddl
add
sub
mov
sub
adc
and
pop
scas
daa
push
cmp
sub
add
inc
sbb
rorb
xchg
sahf
xchg
and
dec
mov
jle
xorb
mov
jmp
xchg
sub
adc
or
cmpsl
jbe
lahf
movsb
or
setge
loop
xor
lods
loope
test
pop
xorb
int3
sub
ret
pop
push
scas
inc
aad
js
arpl
sub
push
cs
mov
mov
sahf
fcomps
jne
push
dec
cmpsb
adc
xlat
pop
add
push
inc
add
lods
sub
mov
leave
mov
out
in
gs
shr
cli
popl
popf
ret
push
and
xor
arpl
or
mov
mov
sti
pusha
movsb
mov
xchg
adc
icebp
int
repnz
rorl
pop
mov
lea
xor
dec
movsb
lods
cld
lahf
xchg
xchg
mov
cmp
pushw
sbb
rorb
iret
add
popa
inc
hlt
ret
add
dec
mov
sub
inc
sub
loop
jnp
jmp
pop
xchg
test
push
mov
in
xor
dec
lahf
call
xor
adc
sbb
sarb
xor
lds
sbbl
dec
cmc
popa
std
cmp
jb
in
insb
mov
roll
sub
jb
or
sahf
xchg
inc
lock
dec
testb
and
xlat
test
mov
int
inc
mov
sbbl
test
mov
mov
mov
add
push
pop
shr
mov
hlt
jge
ja
call
and
clc
xchg
fs
add
adc
push
in
ds
pop
insb
inc
adc
fidivrs
outsl
fwait
or
add
jmp
xlat
xor
add
sub
out
cli
fs
xor
xor
jne
mov
ss
sub
mov
xor
je
ss
xor
push
jnp
cs
xchg
pop
insl
jmp
push
cmp
fldenv
out
pop
push
les
jmp
repz
nop
add
push
mov
rclb
xor
fwait
addl
mov
sti
test
outsb
dec
mov
loop
inc
sub
push
imul
sbb
scas
insb
xchg
jbe
test
or
fstpt
adc
rcr
test
pusha
cwtl
jg
leave
es
mov
sbb
xchg
push
lcall
pop
mov
daa
dec
andl
ret
fsubl
push
cmp
insb
imul
adc
jg
mov
in
xor
jmp
cld
ret
xchg
pop
add
testb
fwait
stc
push
daa
loopne
out
mov
imul
imull
imul
cltd
fs
out
mov
hlt
outsl
xor
sub
push
sub
loopne
push
sbb
mov
push
jae
add
out
pop
push
enter
js
outsl
aam
pop
stos
aas
imul
or
or
mov
imul
rcrb
iret
dec
dec
fildl
loope
les
mov
xlat
mov
test
inc
inc
jne
mov
cwtl
sub
pop
lahf
cmpsl
push
or
je
pop
mov
adc
int
pop
pop
mov
popl
dec
loop
fiadds
aam
dec
cltd
nop
sarb
xchg
mov
xor
ljmp
xor
andl
sub
add
leave
lahf
call
ljmp
xor
sub
out
inc
sub
or
add
add
or
sub
aas
lods
repz
inc
aam
lcall
lods
mov
adcl
mov
xor
mov
inc
and
xchg
push
pop
mov
dec
mov
cld
bound
fistps
loope
fcomp
or
pop
push
ja
push
inc
mov
in
daa
popa
test
mov
divl
stos
pushaw
jo
and
push
ja
xlat
pushf
jl
ret
add
aad
popa
ss
jp
xchg
data16
andb
mov
mov
or
ret
push
cld
decb
adc
std
xor
mov
mov
dec
xchg
sbb
insl
imul
shll
jecxz
push
mov
mov
loopne
in
push
or
lea
in
mov
insl
mov
insb
shr
call
cli
mov
mov
mov
pop
xlat
popa
cli
sahf
adcb
inc
nop
imulb
add
push
add
std
jecxz
adcb
hlt
add
mov
xor
into
mov
loope
inc
pop
das
inc
test
pop
sbb
push
out
sbb
inc
mov
popa
and
pop
sbb
nop
inc
or
jb
call
out
ret
enter
insb
or
sahf
mov
pop
mov
mov
xchg
ja
jae
xchg
jbe
les
loop
pop
pop
adc
or
add
or
dec
dec
fldenv
cli
scas
enter
push
jecxz
sub
ljmp
jge
gs
xchg
aam
lods
popf
orb
cmp
jne
pop
inc
push
mov
xchg
push
lods
cmp
rcr
repnz
or
lea
lret
insl
in
out
iret
sbb
rcll
pop
xor
daa
add
xchg
and
xor
dec
sbb
imul
mov
shll
and
mov
lahf
or
lods
stc
mov
ret
pusha
sub
or
pop
scas
les
add
mov
and
pop
into
inc
xchg
mov
outsb
je
and
or
movsb
jae
stos
std
jns
and
add
cmp
cmc
fists
frstor
shl
int3
xchg
jmp
lods
xor
sub
test
add
xchg
cmc
jns
cmp
xchg
dec
cltd
or
jno
ss
push
stos
leave
movsl
arpl
rorb
into
add
sbb
fsts
adc
mov
xchg
lret
insl
loope
jle
dec
aam
insb
push
lock
jno
insb
pop
jb
imul
negb
sub
jp
mov
std
sub
ror
dec
mov
fcmovnb
or
xchg
nop
xchg
mov
xchg
leave
jecxz,pt
jnp
and
and
stos
ljmp
fwait
sub
add
add
movsb
fisttpl
jecxz
push
jnp
mov
mov
pop
mov
pop
subb
sbb
sub
ss
stos
jp
sbbb
clc
repnz
stos
addb
cmp
ss
inc
imul
repz
icebp
mov
sbb
sbb
fbstp
stc
add
jmp
test
mov
popa
or
sbb
cmp
inc
pop
push
daa
nop
in
fstl
in
stos
call
mov
fistpll
fistpll
pusha
inc
inc
jmp
jmp
sbb
push
add
gs
loop
jl
andb
xchg
inc
jge
push
add
xchg
addr16
pop
xor
dec
mov
lea
faddl
pop
sub
mov
loop
xlat
in
push
mov
add
sub
sub
xchg
cmpb
fnstenv
mov
in
out
mov
mov
lcall
adc
popfw
imul
push
or
jg
pusha
lcall
jno
dec
dec
jne
inc
jbe
cmp
shlb
lock
dec
jo
xor
popf
jnp
scas
xchg
add
push
cmp
mov
stc
repz
fildl
and
sub
mov
das
xor
xor
mov
incl
addr16
mov
inc
dec
test
dec
xor
fs
pop
mov
aaa
push
pop
adc
inc
daa
mov
add
nop
loop
jg
inc
xor
dec
push
pop
into
hlt
or
jl
aad
push
stos
xor
xchg
insl
ret
adc
lock
mov
cmovb
fisubrl
fs
jge
xchg
xlat
sbb
fnstsw
and
imul
notl
shl
mov
push
push
add
popf
jne
dec
addr16
adc
cwtl
ja
cmp
xor
xchg
call
add
mulb
popl
lds
ds
popa
aas
xor
mov
fiadds
mov
pushf
leave
xchg
ljmp
repz
mov
dec
gs
aas
sub
js
cmp
insl
xor
cmpsl
mov
adc
and
mov
js
mov
movsl
cmp
aad
sbb
fcoml
and
outsb
jb
js
aas
mov
test
cli
dec
lcall
rorl
adc
or
dec
dec
stc
lods
mov
or
sbb
rolb
iret
dec
mov
xchg
aad
incl
mov
push
inc
mov
push
call
cmc
cltd
pop
stos
aad
pop
jg
pop
bound
in
jle
outsl
and
xchg
call
sbb
inc
cmpsb
cmc
and
outsb
fdivl
mov
lods
inc
jmp
push
stc
xor
insb
inc
notl
or
loopne
or
test
jge
add
dec
inc
add
imul
nop
cmp
out
cmp
sub
inc
dec
daa
repnz
scas
outsb
cmp
mov
jae
in
pop
inc
adc
pop
aad
xchg
mov
mov
scas
xchg
mov
push
js
and
cmp
dec
mov
dec
pushf
cli
cwtl
jno
stos
ds
lods
lcall
test
sahf
es
add
mov
pop
xor
movsb
adc
int3
bound
xchg
jmp
add
adc
fldl
mov
cmp
jl
test
add
ljmp
bnd
add
xor
test
test
into
push
cli
mov
xor
jg
rorl
packssdw
jo
jg
notb
xchg
aam
in
arpl
xor
popa
dec
xchg
mov
cmp
xor
mov
pushf
pop
clc
addr16
sbb
mov
ror
popa
push
nop
mov
js
dec
mov
push
xchg
jecxz
scas
xchg
in
mov
rcrl
fsubp
adc
rcrl
sar
das
shl
push
and
cmc
push
lret
aam
mov
cld
or
xchg
mov
sub
sbb
mov
ljmp
or
sbb
pop
rcll
fcomps
add
cmp
cmp
sbb
jnp
xor
stos
sahf
or
cmc
psubusw
jnp
enter
cmpsl
or
add
in
cld
pop
jnp,pt
push
orb
sbb
mov
enter
adc
imul
scas
or
pop
inc
adc
outsl
pop
aad
inc
mov
mov
ret
pop
cmpsb
adc
es
inc
xchg
or
lods
push
adc
xor
mov
in
dec
pop
push
bound
movsb
fs
sbb
inc
xchg
pop
orb
ret
fwait
outsl
or
xor
or
lea
and
mov
call
es
mov
scas
sub
push
jno
jmp
dec
lcall
xchg
xor
js
scas
push
and
add
push
out
je
jo
jbe
mov
push
jg
aam
test
sub
popa
push
or
jp
mov
call
add
test
aas
dec
add
push
scas
aam
sbb
lret
lahf
rclb
jae
stc
rcrb
jmp
sub
jbe
ficoms
aaa
sub
icebp
push
cmp
popa
jns
roll
fidivrs
lret
add
or
sbbb
nop
pop
push
fisttpl
add
cmp
pop
sbb
test
mov
jae
loope
mov
pop
add
mov
pop
jno
lds
int
in
jmp
mov
mov
push
jno
or
jnp
data16
mov
dec
fdivr
inc
lea
xchg
sbb
add
jmpw
xor
in
cs
jl
inc
not
sub
aam
dec
and
imul
dec
mov
mov
pop
test
or
out
in
orl
call
mov
stos
mov
mov
in
sub
inc
cmp
push
dec
xor
jb
aad
fnstsw
inc
iret
cld
ret
pop
and
dec
ljmp
jg
xchg
mov
outsb
pushl
mov
outsb
sahf
xchg
sbb
sti
lcall
pop
into
dec
jecxz
enter
stc
cmp
push
mov
lods
test
adc
lret
jmp
gs
sub
push
popf
jl
mov
xlat
inc
xor
sti
sbb
nop
jmp
fwait
or
adcl
mov
gs
test
xchg
lahf
ljmp
mov
nop
mov
xchg
das
pop
scas
sub
cmovne
shrl
lock
out
jmp
push
enter
pop
jnp
xchg
push
ret
mov
nop
jge
xchg
mov
cmpsb
shrb
jp
andb
adc
dec
sbb
int3
cli
mov
jbe
int
hlt
in
pop
shrb
popa
in
jae
sub
sbb
dec
in
fsubrs
pusha
or
pop
ljmp
push
inc
cli
and
ror
std
int
movsb
cli
lods
int3
lret
gs
jmp
insl
push
lret
popa
int3
sbb
add
add
repz
push
push
sbb
sub
push
fisttpl
add
test
andl
cmpsb
sub
fnsave
imul
adc
repnz
jno
push
pop
aad
push
xchg
push
fxch
adc
jo
xchg
ja
sbb
mov
mov
aaa
push
pop
push
fmuls
jb
add
iret
out
shll
xor
bound
jae
mov
pushf
shlb
std
js
mov
jne
test
xchg
and
loop
xchg
fs
loop
push
sbb
push
cmp
sbb
xor
jge
gs
cmp
push
pop
mov
mov
or
lock
jnp
adc
mov
adc
incl
shr
scas
pop
aas
cmp
cmp
xor
jb
xchg
pushf
frstor
add
mov
cwtl
dec
pop
inc
cwtl
push
or
push
fbld
adc
aad
sarb
adc
pop
mov
mov
fs
bnd
mov
mov
data16
cmpsb
mov
xorb
push
cmp
and
pop
and
mov
add
leave
lahf
gs
imul
out
adc
mov
and
in
adc
mov
add
test
or
out
push
inc
sub
pop
cmp
xlat
mov
imul
add
or
dec
lret
or
fisttpll
fists
fwait
push
fs
inc
sti
clc
in
mov
ret
nop
outsl
dec
push
in
mov
mov
fsubrp
cld
loope
cmp
je
and
push
les
mov
not
xchg
outsl
mov
addb
pop
add
jno
fidivs
das
mov
popf
in
push
pushf
lcall
dec
loope
lret
push
xchg
jnp
xchg
out
cmpsl
ja
jb
jl
fcoml
sub
and
xor
add
lock
pop
hlt
sub
sets
jns
xchg
dec
cld
inc
push
mov
repnz
call
jbe
cmp
ret
sbb
push
aam
shll
lcall
or
mov
jle
cli
pop
je
movups
popf
sub
sar
adc
fsubs
push
aam
cmp
mov
mov
xchg
xor
push
fwait
cld
and
inc
nop
mov
lret
jno
es
nop
jns
mov
rorb
and
push
inc
inc
pushf
xchg
add
jne
sbb
cmc
scas
push
movsb
jle
pop
adc
inc
dec
in
aad
outsb
jne
xchg
loopne
and
pop
cmpsl
test
fisttpl
icebp
add
jnp
sti
and
push
movsl
mov
rorb
jbe
pop
pop
xchg
lods
jle
in
add
mov
inc
cmpsl
imulb
cmp
fsubrs
pop
cmpl
jp
aad
popf
aas
ljmp
mov
loope
push
ret
pop
xlat
pop
fldenv
fwait
mov
movsb
push
fs
add
dec
shlb
bound
arpl
imul
sbb
mov
adc
push
cmp
imul
cmp
outsl
movsl
add
push
adc
in
sub
xchg
cmp
outsl
cli
inc
aaa
mov
cmp
cmp
lods
sub
int3
sub
pop
sub
push
mov
jno
in
xlat
out
punpcklbw
jbe
ja
jb
leave
test
repz
xor
sbb
pop
inc
lods
xor
mov
out
push
ja
sub
xchg
in
das
sbb
les
pop
mov
pop
jae
cmc
insl
mov
out
outsl
repnz
xchg
addr16
and
or
push
pop
imul
fidivrl
push
jmp
in
sub
mulb
ja
xchg
cmpsl
add
sbb
repz
xor
je
aas
inc
xchg
dec
mov
lods
jle
int3
jno
jmp
mov
fimuls
out
push
fistpll
mov
jo
jns
mov
pop
subb
pop
fbstp
jle
gs
stos
ja
fwait
pop
lds
cld
lahf
mov
repnz
dec
lock
fimull
mov
push
popf
sbb
mov
or
fmuls
mov
lods
lret
add
into
adc
push
icebp
pop
test
pop
lds
dec
bound
mov
bound
cmp
outsb
cmp
ss
testl
add
ljmp
pusha
in
loop
and
xchg
cmp
adc
int3
sahf
or
test
sub
std
adc
test
rolb
test
imul
mov
aas
ret
pop
ret
pop
push
push
lret
in
fstpt
shll
xchg
add
pop
xchg
inc
into
fists
mov
and
leave
sub
out
dec
dec
arpl
cli
pop
popa
ljmp
mov
or
mov
add
fst
xor
push
sar
mov
repz
mov
mov
sahf
lods
mov
inc
xor
adc
adc
aad
sbb
addr16
and
xchg
js
push
clc
or
mov
subl
dec
mov
xchg
nop
mov
shr
or
push
sbb
cs
cmpsb
testl
in
cmp
mov
push
outsb
mov
pop
adc
xor
push
xchg
or
add
and
test
add
xchg
div
pop
cmp
jbe
mov
popf
out
cmp
addr16
dec
jl
pop
jge
test
sbb
hlt
inc
icebp
in
dec
mov
pop
mov
push
stos
sahf
loop
mov
push
and
sub
pop
mov
fildl
out
repz
pop
adc
xchg
sub
mov
pop
sbb
mov
jbe
mov
and
mov
fwait
mov
xchg
pop
iret
mov
ss
cld
jmp
sarb
mov
inc
stc
imul
loope
pushf
push
jmp
xchg
adc
mov
add
cmpsl
scas
push
int
mov
aas
out
jge
rclb
mov
mov
ret
xchg
sub
sub
xor
out
sbb
lods
imulb
ret
mov
sahf
inc
out
cwtl
xor
inc
add
aas
loope
push
dec
adc
outsl
xchg
bound
out
out
sub
sub
call
mov
mov
mov
sarl
adc
sahf
sub
mov
stos
inc
fistpl
clc
sub
push
cld
dec
adc
mov
repnz
test
xlat
cmpsb
test
cmp
mov
dec
mov
imul
push
adc
ret
mov
imul
xchg
cmc
sub
mov
dec
sarb
jo
mov
and
and
mov
testb
rcr
push
pop
in
mov
push
ljmp
fistpll
loope
push
inc
jmp
dec
mov
cmc
xchg
cmp
push
lea
dec
inc
xor
daa
mov
jle
and
mov
cmpsb
inc
lods
cmp
imulb
int3
jnp
out
push
inc
cmp
sahf
popa
sub
jecxz
inc
mov
jne
aaa
incl
adc
or
inc
fnstenv
popa
dec
repnz
dec
xchg
mov
outsb
lret
add
cltd
mov
lahf
ret
insb
rcl
push
or
mov
std
cwtl
jp
xor
pop
das
and
sub
aaa
jo
movsb
mov
pop
repz
inc
xchg
xchg
fsubr
out
sub
sub
adc
inc
jns
fwait
mov
xor
push
nop
xor
or
dec
pop
sti
popa
pop
testl
xchg
popw
call
inc
ret
sub
in
or
xchg
shl
jbe
movsb
cmp
in
insb
dec
lahf
outsb
cld
or
sbb
push
xlat
fbld
pop
cs
divb
or
push
addb
mov
pusha
movsb
dec
mov
pop
leave
dec
movsb
aaa
in
push
inc
in
sub
pop
and
lock
mov
fs
xchg
lods
jne
add
jnp
pushf
jp
pop
xchg
ds
and
out
das
popf
in
aaa
in
shrb
mov
flds
outsl
mov
mov
dec
test
pop
ret
mov
push
xchg
outsl
aad
and
insl
adc
or
sub
push
lods
jecxz
aad
push
jb
insl
pop
xchg
cmpb
cmc
or
sarb
dec
fs
mov
pop
lcall
roll
mov
divl
inc
rcll
push
pop
pop
lock
popf
imul
inc
lods
xchg
pop
and
xor
sub
mov
jecxz
mov
imul
lret
inc
mov
mov
ficoml
or
fcoml
push
ffree
adc
push
fistl
xor
aaa
push
out
shl
jmp
mov
mov
jbe
cli
into
stc
mov
rcll
dec
lcall
mov
and
fwait
pop
xchg
mov
push
add
jle
dec
or
movsb
outsl
adc
jle
dec
or
and
pop
xor
mov
adc
incb
cli
lods
push
sbb
dec
dec
xchg
and
push
mov
jne
ds
mov
pusha
bound
adc
mov
in
dec
paddusb
xchg
clc
mov
pop
jo
jge
cs
xor
push
pop
mov
add
idiv
mov
dec
mov
dec
andb
imul
jp
sti
ds
out
xor
les
fildl
mov
mov
cld
fwait
cli
mov
lcall
sub
sub
shl
insb
pop
mov
loop
add
pop
push
int
lock
cs
es
pop
dec
mov
mov
mov
push
mov
dec
xchg
fldl
mov
sahf
adc
adc
push
insl
sub
push
and
adc
mov
sub
popf
and
daa
and
adc
mov
in
ljmp
pop
scas
add
stc
insl
mov
mov
mov
or
mov
sbb
cltd
sbb
mov
lock
mov
js
lret
insb
mov
jno
daa
cmovp
add
mov
cmp
imul
push
sbb
addr16
les
mov
ret
mov
out
xlat
rcll
or
je
mov
sbb
repnz
and
imul
cmp
mov
lcall
leave
sahf
cltd
mov
hlt
cmp
push
test
jno
out
inc
and
pop
mov
faddl
xabort
cmpb
mov
jae
inc
or
fisubl
out
out
push
mov
loopne
mov
lock
mov
shrl
inc
and
dec
or
mov
ds
dec
js
aad
pop
push
cmp
das
aas
cs
push
notl
ja
mov
jnp
shl
in
loopne
test
inc
loopne
ret
dec
nop
aam
add
mov
stc
sub
push
mov
push
push
loop
or
iret
mov
pop
xchg
pop
lret
pushf
sbb
fnstcw
addr16
inc
lahf
sbb
test
pop
xor
dec
jmp
add
dec
cmp
dec
call
xchg
scas
fwait
aas
js
pop
ret
divl
or
in
mov
jne
jo
ficompl
sahf
pushl
stos
imul
aas
sbb
jg
jb
test
leave
pop
pop
int
mov
movsl
int3
mov
lcall
por
int
sarl
jns
jecxz
fstpt
loope
jle
fisubrl
jecxz
scas
out
fcomi
divl
inc
imulb
cmp
sub
ret
push
jle
jae
out
mov
xor
int3
pop
js
jne
cwtl
jge
sub
stos
mov
scas
rorb
mov
lret
or
and
pop
xor
mov
cli
lods
mov
or
jge
pop
sub
mov
push
scas
into
pop
pop
xor
sti
jo
or
rcr
add
mov
mov
pop
xchg
das
out
fistps
cmpsl
cltd
dec
cmp
icebp
push
lcall
fs
and
push
imul
addr16
outsb
jle
mov
push
or
je
mov
std
rcrl
cmp
cld
dec
xchg
filds
sbb
lret
pop
sahf
mov
jb
imul
in
dec
loop
pop
leave
push
cmp
mov
in
and
imul
mov
add
mov
cmp
jno
loopne
sarb
ret
pop
mov
or
add
ffree
imul
lcall
cmp
push
sub
test
in
in
test
or
fcompl
sti
popa
mov
std
test
pop
ret
test
test
sub
mov
inc
call
xor
std
mov
sbbb
jle
stos
test
pushf
enter
mov
fisubl
dec
lods
inc
sbb
push
aam
pop
loopne
sbb
mov
push
push
dec
repnz
dec
sub
dec
jmp
mov
inc
mov
movsl
dec
in
sti
std
inc
scas
lret
push
mov
push
dec
inc
and
mov
adc
adc
lods
movsl
push
and
mov
xor
xchg
push
mov
les
push
int3
popa
inc
dec
adc
es
enter
rcrl
mov
sub
add
mov
decl
cmp
cltd
shll
lods
das
inc
sub
mov
into
pop
ficoms
and
or
mul
inc
jg
xlat
adc
mov
movsl
mov
xchg
dec
push
scas
loopne
cmp
or
xor
ljmp
cld
jle
push
mov
ret
pop
ret
add
pop
orl
adc
mov
inc
mov
movsb
push
imul
adc
xor
xchg
mov
das
push
jge
and
xor
jecxz
or
mov
je
mov
lret
jbe
sbb
lods
add
pop
sub
repz
push
mov
mov
xor
int3
cmc
sbb
fidivrs
sbb
inc
pop
int
mov
jbe
sub
addr16
xlat
add
fistps
jecxz
sub
mov
sub
leave
roll
cs
loope
add
mov
aam
insl
or
mov
cmc
sub
mov
and
imul
xchg
lea
cmp
cltd
cmpsl
cld
in
pushf
xchg
push
fcoms
je
fisttps
pop
push
pop
pop
cltd
mov
adc
mov
lods
test
dec
lcall
pop
adc
xor
and
push
stos
dec
dec
xor
movsl
fildll
push
adc
jbe
fists
mov
mov
cmpsb
cmp
mov
sbb
ss
cwtl
jge
repz
popa
popa
mov
and
cmp
jbe
in
test
out
fiaddl
rclb
xchg
popf
lds
adc
jg
push
or
sbb
call
add
mov
fisubl
push
es
inc
out
aam
cmp
in
jo
jg
ret
aam
divb
push
test
xor
push
mov
mov
sbb
push
int
inc
hlt
xchg
mov
push
push
and
sti
push
stos
aas
arpl
out
out
leave
sub
add
xor
sbb
xor
leave
rcrl
cmpsb
gs
push
fdiv
add
ret
mov
mov
arpl
icebp
mov
xchg
push
mov
pop
cs
dec
leave
aad
mov
or
out
ret
pop
sbb
xor
jg
out
xor
lock
cmp
mov
jl
mov
sub
insl
pop
mov
pushf
decl
mov
dec
cwtl
jmp
or
jge
nop
cs
add
aas
mov
icebp
sbb
call
int3
sets
dec
std
push
bound
xor
mov
inc
and
cmp
mov
clc
aam
sbb
ja
inc
gs
leave
or
or
out
movsb
cwtl
jo
mov
jno
adc
xor
cmp
cmp
jno
xchg
push
jae
cmp
jnp
jns
stos
dec
xor
fisttpll
fdivs
jbe
sti
push
sub
scas
xchg
insb
pop
pop
fisubs
imul
cmp
shll
mov
lds
cmp
adc
popa
stos
cmpsl
xchg
pop
movsl
pop
rclw
test
lock
cmc
hlt
xchg
mov
dec
in
push
pusha
dec
and
outsl
adc
jae
mov
out
sti
ds
pop
inc
xchg
lahf
mov
push
int3
dec
and
fisubl
xor
cmc
jmp
dec
movsl
push
pop
sarl
mov
sbb
push
inc
jmp
popa
pop
mov
pop
adc
inc
xchg
add
adc
cltd
or
xchg
push
popa
in
loopne
jmp
hlt
mov
pushf
lcall
je
and
add
inc
mov
inc
xchg
call
lea
icebp
cmp
imul
mov
fxch
insl
bound
cmpsb
cmpsb
scas
mov
sbb
sbb
adc
xor
insb
dec
mov
adc
insb
lret
insl
mov
mov
jbe
sub
enter
sbbb
adc
jle
out
inc
push
xchg
dec
sti
mov
rclb
push
jmp
in
adc
cmp
and
imul
icebp
out
push
sti
pop
mov
ret
push
jno
and
sbbb
inc
xchg
loope
loopne
sub
pop
ds
add
int
push
test
les
mov
cltd
mov
pop
cmp
xchg
mov
or
cmp
jecxz
mov
mov
test
mov
loopne
sbbb
dec
mov
data16
or
enter
ds
enter
mov
fistps
cld
cmc
jo
dec
test
lahf
in
fwait
jnp
sbb
subl
push
and
xchg
adc
fadds
pop
xor
inc
insl
repz
sub
sbb
ja
add
loope
adc
fnstsw
cmpsb
popa
fistl
mov
mov
dec
aad
lret
cmpsl
inc
test
bound
test
dec
jl
icebp
add
cltd
inc
imul
andb
mov
or
push
push
jnp
aam
jno
mov
call
mov
mov
sbbb
test
es
sub
cld
jae
in
imulb
jmp
mov
pop
mov
stos
incb
inc
or
push
xor
cs
lock
cmp
in
pop
inc
cmp
lcall
mov
xor
sbb
pop
inc
xor
or
jne
add
aam
jg
into
fldt
js
call
dec
das
into
push
in
lret
call
mov
ds
jns
mov
stos
push
enter
sti
call
mov
popa
into
mov
hlt
cmp
xchg
xchg
shrl
xlat
pop
add
mov
aas
push
jno
pushl
or
clc
addr16
xchg
and
pop
arpl
popf
stos
jns
ret
mov
scas
or
aam
insl
loopne
cltd
cmp
cld
jo
dec
push
shlb
push
add
mov
mov
cmp
cwtl
rorl
mov
add
mov
and
dec
mov
mov
jo
add
movsb
jmp
cmp
pop
popf
push
cwtl
mov
cmp
ljmp
fst
ret
outsl
mov
mov
lcall
bound
jns
inc
xor
mov
loopne
fildll
dec
lock
mov
test
jg
in
jge
into
xor
xor
lds
int3
and
sbb
out
pop
xchg
cli
out
mov
inc
fucomp
pop
int
inc
mov
imul
ficoms
call
das
aam
dec
and
gs
dec
xor
adc
adc
mov
adc
and
setnp
stos
pop
and
mov
jbe
scas
mov
lods
btr
pop
fdivs
jge
sbb
jecxz
cmp
mov
insl
xchg
inc
jge
mov
xchg
push
push
xchg
add
nop
or
in
adc
mov
mov
es
aad
lret
xchg
stc
jo
out
icebp
ja
xchg
mov
jns
adc
mov
fwait
sub
aaa
xchg
and
sub
fcoml
mov
adc
ds
sbb
dec
mov
xchg
jle
cld
and
mov
adc
sti
lock
lcall
ja
and
andb
jg
cmp
xor
stos
sub
xchg
and
jb
xchg
dec
add
pop
mov
mov
je
lea
lods
dec
xchg
mov
in
mov
fstpt
jmp
movsb
cltd
xor
out
ja
mov
cltd
insb
push
and
sbb
dec
fstl
scas
mov
pushf
imul
int3
mov
cld
lahf
and
mov
pop
fldenv
xor
in
out
sub
lods
and
mov
int3
ljmp
inc
cmp
push
push
jns
stos
mov
sahf
in
in
andb
cmp
adcb
dec
push
xlat
mov
mov
in
in
push
mov
mov
and
je
adc
pop
mov
aas
lods
loope
push
xchg
push
stc
outsl
xchg
inc
sbb
sbbb
fisubl
sub
push
push
mov
push
and
xchg
fs
in
mov
xchg
xchg
or
out
mov
inc
and
shll
add
inc
sar
stos
shll
adc
add
xchg
ss
ds
loopne
fdivs
sub
lcall
xchg
push
mov
pop
mov
sub
icebp
lret
fimull
fisttpll
hlt
mul
mov
inc
aam
cmpsl
enter
fucomp
sbb
cmp
test
xchg
push
or
adc
cmc
loop
bound
xor
mov
shlb
clc
jae
xchg
or
insl
push
rolb
aas
mov
push
cmp
imul
daa
adc
pop
cmp
negl
mov
inc
dec
lods
and
and
leave
push
jnp
scas
adc
insb
cld
cmp
insb
jp
lds
adc
or
push
mov
pop
lods
dec
pop
sbb
ds
or
cmp
jp
xchg
or
dec
add
lcall
iret
xor
adc
cmp
ds
fs
mov
push
sbb
mov
push
jp
cmp
push
subb
xchg
pusha
test
pop
cmp
dec
xchg
inc
cmp
xor
test
into
call
jp
movsb
inc
imul
xchg
pop
popf
xlat
push
push
es
add
mov
lcall
sahf
call
mov
lret
out
in
dec
adc
inc
xor
mov
iret
dec
ret
xor
adc
or
xchg
sbb
xchg
dec
sub
xchg
lret
loopne
in
cmp
xor
sub
xlat
sub
repz
adc
shrl
into
rorl
loope
pop
fmuls
push
fbstp
pop
loopne
rorb
push
mov
enter
pop
mov
test
mov
enter
pop
pop
pop
loope
loop
mov
data16
jno
fdiv
pop
jns
out
xchg
inc
arpl
adc
jb
mov
add
shl
push
daa
sbb
xchg
xor
ficoml
xor
push
shll
das
and
mov
sar
dec
cmpsb
rcr
add
jle
scas
lods
xchg
sti
or
into
pop
add
aam
or
cmp
mov
js
xchg
pushl
and
fidivl
sub
mov
scas
ss
add
inc
xchg
xor
stos
adc
movsb
and
pop
xor
or
pop
stos
leave
push
mov
inc
pop
jge
or
rorl
add
inc
lret
fadds
sbb
out
push
mov
xor
stc
pop
dec
dec
shr
int
rcrl
xchg
adc
outsb
push
bnd
dec
sub
dec
push
xchg
adc
xor
mov
mov
aad
popl
andb
or
jno
inc
shrl
jno
push
and
nop
mov
adc
jns
std
shll
cli
and
jbe
cmp
notl
into
lret
pop
out
mov
fisttpll
rcr
mov
lret
jecxz
push
add
add
into
cld
fucomip
cmp
push
loope
bound
ficoml
sbb
and
mov
push
repz
insl
sahf
frstor
lods
push
enter
hlt
dec
jnp
mov
rcrl
data16
ja
lret
shlb
inc
test
mov
lahf
lcall
fidivl
mov
xchg
sbb
pop
inc
xor
arpl
fstp
leave
icebp
mov
loope
xor
pop
and
jp
xchg
stc
jb
sbb
ds
inc
movsl
or
cli
mov
enter
cli
pop
js
ret
js
jmp
push
lret
stos
loope
mov
dec
out
sub
mov
pop
and
fimull
jge
xchg
out
sub
sbb
repz
mov
mov
and
lock
jp
test
loop
dec
pop
mov
je
or
out
fwait
enter
repnz
jle
xchg
mov
sub
mov
adc
mov
mov
movsb
pop
jecxz
xor
cmp
int
outsb
pop
bound
popf
mov
stos
imull
push
call
xor
xchg
sarb
mov
jns
mov
icebp
stos
repnz
xor
jno
inc
cmp
jg
xchg
clc
and
mov
and
mov
pop
mov
xor
outsl
je
in
xchg
dec
mov
mov
and
nop
adc
xlat
sahf
sti
xor
xchg
inc
mov
fcmove
loopne
sbb
testb
cmp
push
xchg
mov
call
repnz
add
fistpl
cmp
lea
test
adc
jbe
mov
pushf
test
inc
or
mov
in
jle
xor
push
fwait
inc
lea
mov
lods
std
xacquire
jnp
mov
and
pop
shl
stos
push
in
dec
fmull
sub
mov
sub
sub
je
mov
xor
pop
sbb
cwtl
cmp
dec
pop
scas
mov
test
jno
jb
ret
xchg
sbb
xlat
sub
cld
or
les
stos
fimuls
push
mov
push
cmp
sbb
jae
adc
daa
mov
out
psllq
add
fldl
pop
or
mov
pusha
test
mov
lods
lods
add
pop
int3
mov
jmp
rorl
xor
push
cmpsl
hlt
mov
mov
lea
add
mov
int
push
out
aas
sbb
testl
xchg
or
jp
push
bndstx
mov
pusha
ffreep
sbb
repz
sbb
mov
ss
and
jle
push
add
xchg
adcb
mov
cs
bound
mov
add
outsb
lds
adc
xor
in
pop
loope
mov
in
stos
push
mov
xchg
inc
push
fstps
mov
jle
neg
inc
sbb
pop
dec
mov
mov
stos
movsb
mov
or
loopne
daa
scas
jl
lret
pushfw
ret
imul
xlat
cs
aad
jmp
add
rolb
pop
sbbl
lahf
daa
jbe
or
add
lock
or
hlt
and
es
loop
jg
xor
jns
push
in
popa
mov
andl
xchg
pusha
jb
insb
cwtl
in
insb
or
sbb
call
roll
jle
enter
mov
adc
inc
mov
sub
cmp
mov
and
xor
rcrb
imul
dec
jg
mov
scas
lret
push
sarl
dec
in
repz
je
daa
xchg
xchg
cmp
xor
jmp
ret
fcom
mov
jne
dec
jbe
shll
lods
mov
mov
xlat
lret
mov
cmp
mov
ja
jmp
addl
out
mov
je
mov
push
xchg
mov
loop
xlat
xor
pop
jnp
filds
adc
loope
add
stos
and
shll
mov
mov
pop
popf
inc
cmp
enter
cmc
adc
xor
aad
jge
mov
push
scas
shrb
inc
out
lahf
xchg
pop
pop
xchg
jne
mov
mov
gs
in
sub
in
inc
add
lret
mov
cmp
add
fsubrl
imul
inc
fsubr
pop
stc
loop
fdivr
jle
cmp
mov
jae
sbb
sti
sbb
xor
scas
sub
adc
cmp
xor
dec
mov
xlat
arpl
jno
dec
xchg
repnz
js
mov
mov
out
cmc
push
adc
cmp
push
subl
in
and
sub
or
gs
inc
out
fadds
sahf
and
shlb
in
jno
xchg
mov
mov
test
divps
jne
mov
sbb
pushf
or
and
loop
push
fiaddl
loopne
bound
lods
xchg
dec
sub
push
jle
stos
test
or
cmp
jg
cmpsb
mov
dec
pop
xchg
mov
test
add
push
les
mov
fisubl
incb
rorb
add
inc
je
and
call
mov
fs
es
subb
pop
lret
popa
imull
jmp
cld
fsts
cltd
xor
push
jmp
mov
cmpsb
push
add
or
ret
and
inc
cmp
fsubs
xor
mov
fwait
pushf
inc
rcrl
pushf
push
out
sbb
xchg
pop
and
pusha
sahf
mov
adc
js
mov
or
nop
orl
scas
loopne
cmpsl
xor
fld1
inc
mov
mov
cwtl
nop
sahf
rcl
lea
stc
adc
shlb
jge
je
dec
xor
push
iret
inc
xor
in
int3
fwait
fwait
pop
mov
bound
sub
xchg
das
adc
push
cmc
mov
int
shl
push
test
mov
ss
sub
xor
aad
mov
nop
rclb
in
sub
loop
push
in
inc
dec
mov
jns
xchg
dec
sbbl
shlb
or
lds
outsl
mov
iret
mov
iret
out
and
push
fiadds
ss
mov
or
push
jge
movsl
jge
repz
fmull
stos
mov
xchg
scas
xlat
or
push
xchg
in
insb
mov
shlb
jl
insl
daa
xchg
dec
sub
or
jl
adc
insb
dec
mov
fs
cmp
jecxz
xchg
out
mov
mov
clc
add
es
adc
lds
xor
xchg
aas
pop
bound
movsb
stos
lahf
mov
inc
adc
push
ss
cmpsl
cmpb
insb
mov
bound
and
lahf
test
pop
or
loopne
sbb
dec
inc
cs
xor
xor
jns
fcomp
push
inc
outsb
icebp
dec
stos
or
pop
insl
imul
mov
popf
cmc
sti
in
jbe
stos
sahf
or
repnz
repnz
loope
lds
out
lret
sub
push
mov
jae
mov
jbe
xchg
dec
stos
rorl
stos
out
hlt
scas
push
repz
fnsave
fcoml
inc
decl
or
repnz
sub
inc
ds
stc
inc
insl
ret
add
shlb
gs
inc
out
es
addr16
loope
adc
jp
cmpsb
ficompl
test
jmp
mov
xor
sahf
jmp
mov
jbe
sbb
leave
jp
test
inc
mov
inc
lods
cmp
fwait
dec
cli
xor
fwait
xchg
jae
add
bound
cmp
xchg
mov
push
negl
sbb
lahf
pop
addr16
or
mov
aad
xchg
pusha
das
rol
sub
inc
daa
mov
sarl
hlt
loop
notb
lods
fdivp
sub
cmp
nop
and
sahf
jmp
das
xchg
pop
dec
les
pop
inc
sbb
insb
adc
pop
pop
cld
dec
int
lcall
lods
dec
aas
in
mov
in
cs
dec
sti
dec
mov
mov
sub
pop
dec
inc
mov
add
push
sti
cltd
sbb
je
cmp
sbb
arpl
subb
into
rcll
std
cwtl
mov
imul
sub
adc
push
pop
out
mov
jg
push
out
out
push
dec
aam
aas
and
test
rdmsr
jl
fsts
pop
das
mov
out
inc
sbb
int
setl
inc
ja
mov
dec
and
jne
xchg
and
mov
imul
fsubrs
xor
adc
mov
stc
mov
add
leave
sub
clc
inc
and
pop
inc
fistpll
test
jnp
mov
loop
rcll
out
stos
mov
mov
xchg
pop
dec
mov
pop
sbb
movaps
jle
mov
dec
stos
scas
aaa
movsb
lods
pop
test
xor
push
sbb
sarb
cltd
and
jb
inc
mov
fdivrs
repnz
pop
gs
clc
fisubs
insl
cmp
mov
cmpsl
xchg
mov
icebp
add
loope
js
xor
es
pop
in
jg
cmp
inc
cli
shr
lret
jns
jo
cmc
or
mov
adc
jg
outsl
das
adc
lea
cmp
adc
add
aaa
mov
data16
cmpsb
or
pop
test
cmp
xchg
icebp
xor
out
je
pushf
in
adc
pushf
jge
stc
loope
inc
lret
mov
mov
xor
fidivs
imul
push
xchg
jmp
lock
xor
xchg
pop
js
sub
or
cmpsl
push
aad
add
lea
in
and
dec
lea
xchg
cmc
das
lret
xchg
dec
inc
dec
call
lcall
das
rorl
fsts
inc
fimull
cwtl
push
mov
xchg
pop
mov
cmp
mov
sub
adc
push
repz
loopne
decl
cwtl
lcall
jle
lock
cmpsb
pop
cmc
adc
adc
out
sbb
inc
jmp
int3
sub
les
mov
pop
xor
jnp
mov
test
jle
fmul
negb
xor
andl
push
xchg
inc
mov
dec
jb
out
pop
dec
pop
mov
or
lea
in
lds
ret
cmovae
loopne
inc
or
es
jl
and
sbb
lret
add
fcoms
inc
mov
jle
bound
jle
jp
cltd
test
xchg
jbe
mov
addr16
lods
lods
inc
jl,pt
cmpsl
add
xchg
inc
mulb
dec
inc
lods
outsb
mov
lods
stc
adc
pop
fwait
inc
ret
xor
xor
mov
data16
push
ret
sub
sub
sub
rcl
scas
mov
and
mov
cltd
popf
sub
sbb
lahf
sub
mov
jmp
lock
adc
fdivs
and
xchg
stc
jecxz
inc
jnp
aam
mov
sbb
loopne
popa
push
lods
fstpt
stc
inc
add
push
in
or
pop
outsl
ds
sub
jno
mov
inc
orl
or
mov
fidivrs
cmp
nop
mov
mov
cmc
je
xchg
pop
stos
nop
cmpsl
jno
or
hlt
xchg
dec
mov
std
pop
iret
xor
loopne
in
xchg
inc
jnp
jmp
pop
shrl
and
outsl
xchg
fisttps
sbb
mov
enter
cltd
pop
daa
lsl
add
xlat
or
mov
inc
sbb
pushf
jp
cmpsb
pop
test
or
mov
cmp
sub
bound
imulb
popa
xor
and
rorl
imul
inc
and
clc
ljmp
mov
cmp
mov
sub
push
test
xlat
xlat
xor
popa
sbb
les
cmp
pop
rcr
lods
push
cmpsl
std
jle
lods
adc
es
pop
add
dec
iret
insb
jg
mov
mov
push
clc
ja
imulb
mov
out
mov
js
dec
add
and
mov
test
pop
push
mov
mov
int3
imul
fs
xor
push
fildll
xchg
mov
xor
call
cmpsb
and
lahf
iret
pop
std
mov
add
cli
loope
or
or
lock
ds
and
mov
icebp
jge
movsl
or
out
inc
data16
ja
lret
sbb
cmp
push
mov
hlt
mov
dec
ss
xchg
stos
adc
jl
dec
mov
jne
clc
loop
das
xor
imull
adcl
mov
sbb
aas
mov
jns
lret
pop
notb
aaa
out
cmpb
sti
xchg
mov
adc
add
cwtl
jle
aad
bswap
or
stos
stos
fbld
mov
je
adc
adc
dec
divl
sub
sub
ret
inc
dec
adc
mov
mov
dec
imul
jne
sahf
les
fs
jecxz
iret
data16
lea
mov
mov
xchg
imul
scas
cmp
or
fwait
stos
in
jns
cmpsb
push
outsl
pop
nop
loopne
mov
or
xor
out
mov
jae
and
mov
dec
or
mov
mov
jp
adc
inc
out
dec
pop
sub
bound
sub
sub
push
adcl
inc
mov
mov
push
mov
imul
movsb
jecxz
inc
bound
test
dec
inc
dec
push
das
cmpsl
fstps
ja
int
stc
or
xchg
and
xor
ljmp
jno
xor
push
inc
insl
mov
insb
loope
adc
jae
jae
mov
and
xor
or
sub
mov
xchg
mov
int3
call
push
and
jnp
aas
out
loop
push
and
shll
xor
pop
mov
ds
hlt
add
cmp
jmp
orl
out
cmp
dec
inc
xchg
jne
push
pmullw
rcll
scas
lret
sbbb
mov
xor
adcb
pop
bound
jae
fsubl
xchg
or
popa
outsl
js
mov
in
pop
xor
xor
inc
sub
es
test
pop
xlat
sbb
es
and
repz
inc
and
popf
xor
fs
or
inc
adc
repnz
int3
and
scas
mov
and
std
and
mov
pushf
or
add
and
mov
jl
roll
sbb
push
sbb
mov
mov
push
cmp
cmp
insb
lcall
das
lcall
out
lret
dec
shll
xchg
cltd
inc
stos
add
das
cmc
pop
sub
jae
xor
push
jle
jle
cmp
mov
fimull
sar
cmp
lock
imul
dec
xor
and
xchg
lret
mov
orb
pop
and
mov
pop
repnz
xchg
xchg
xor
clc
xor
adc
dec
mov
out
mov
sub
mov
lea
dec
mov
cld
test
test
mov
inc
push
je
add
leave
and
push
mov
mov
mov
lcall
jl
lods
es
xlat
xchg
mov
add
pop
test
xor
dec
stos
sbb
aad
lret
addl
pusha
les
xor
cmc
jb
add
mov
mov
add
mov
inc
fstpl
dec
lahf
decl
add
cmp
les
jge
or
ss
fldenv
ja
sbb
jbe
xchg
mov
or
jbe
xchg
fnsave
dec
xchg
aam
mov
pop
cmp
inc
push
out
pop
mov
sbb
push
daa
fwait
stc
lahf
aad
scas
loopne
xor
mov
fisubs
nop
dec
or
dec
adc
mov
xchg
inc
sbb
push
mov
loope
dec
sub
and
aad
sbb
imul
repz
pop
int
xor
inc
cmpb
and
scas
cmpsl
fimuls
into
dec
cmc
in
add
bound
sti
xor
mov
in
and
pop
test
adc
clc
sbb
popf
rcrb
xorb
movsl
adc
xor
notb
add
mov
mov
not
test
aas
movl
pop
data16
or
in
cmc
insb
mov
faddl
sbb
arpl
or
jo
ss
jmp
cmpsl
movsb
sub
sti
mov
lock
jno
push
or
jbe
sbb
jle
mov
subb
ss
xchg
mov
ficoml
adc
fs
xor
jp
cwtl
pop
insb
push
dec
stos
stos
inc
add
lods
xchg
sahf
scas
or
inc
push
sbb
scas
lahf
aam
push
fs
xchg
repz
mov
sti
lcall
pop
shlb
pop
cmpsb
outsb
push
in
dec
sub
hlt
into
push
data16
adc
das
cmpl
imul
cld
popf
jno
and
cmp
imul
daa
dec
jns
dec
imul
pop
sub
lahf
cs
add
test
push
mov
and
sbb
insb
sbb
push
notb
ss
inc
xchg
inc
outsl
std
lea
andl
test
and
add
in
cmpl
cmc
cmp
pop
pop
add
frstor
mov
ja
lods
sti
xchg
clc
mov
pop
lods
iret
cmp
bound
ljmp
inc
push
int
cltd
addr16
lods
mov
aad
mov
push
pop
into
and
scas
mov
pop
pop
pop
mov
push
int
in
mov
and
pusha
lcall
in
dec
shrb
fimull
outsl
fs
mov
test
jns
pop
aad
dec
mov
jns
loope
mov
in
pop
mov
sti
adcb
xlat
jne
lea
std
cmp
sbb
push
mov
insb
aam
mov
or
and
push
jns
lds
scas
je
pop
loop
mov
test
jno
sbb
add
into
xor
lcall
xchg
data16
out
mov
ss
pop
xchg
jo
setp
or
push
por
add
mov
scas
push
imul
mov
sbb
push
jge
push
or
or
repnz
mov
lret
push
push
sub
mov
fisttpll
pop
pop
aam
fstpt
adc
and
mov
mov
mov
xor
bound
call
inc
mov
lods
lea
sub
cmp
jb
js
rcrl
ja
aas
outsb
or
cmp
xchg
jnp
inc
add
fldl
scas
push
jne
mov
out
sti
jb
pop
shlb
mov
in
jno
gs
pop
jo
aaa
push
inc
pop
shll
int
mov
pop
rcrl
lcall
out
movsb
scas
jge
push
outsl
in
pop
xchg
xor
test
adc
ljmp
lret
loop
or
lret
push
mov
push
jle
mov
xchg
push
aaa
or
mov
adc
pop
cmp
jecxz
out
cli
dec
mov
stos
jecxz
fucomip
rcr
loopne
outsl
mov
cmp
mov
mov
or
inc
dec
mov
iret
fsubr
sbb
repnz
sub
push
mov
jnp
mov
jno
jns
aaa
daa
shlb
js
ds
fisubrs
push
scas
mov
ja
xchg
push
xor
dec
cs
aaa
adc
and
mov
or
loope
dec
cltd
jbe
cmp
mov
mov
mov
out
jnp
lcall
and
out
and
sub
mov
mov
jo
adc
insb
push
cmpsb
dec
or
fldenv
je
test
mov
add
mul
ja
adc
lret
and
mov
sub
adc
xlat
pop
xor
and
cltd
lcall
mov
cltd
into
push
mov
mov
ficompl
xor
cmpsl
mov
sti
adc
adcb
adc
std
cmp
call
xchg
jmp
add
or
sbb
sbb
loop
xchg
xlat
lret
ret
pop
in
jecxz
addr16
daa
xor
jns
outsb
mov
push
adc
adc
jmp
das
les
andb
shl
mov
and
adc
jecxz
mov
mov
mov
mov
test
and
out
and
mov
rolb
xor
nop
pop
mov
push
in
outsb
fistpl
lcall
popf
add
punpckhdq
and
cmp
aad
test
xorb
cmp
xlat
subl
imul
shl
lcall
jno
cmp
pop
repz
xchg
lea
dec
xchg
pusha
cmc
push
lods
mov
sub
or
xor
xchg
push
dec
jno
in
mov
movsl
push
cs
jne
mov
and
inc
inc
fwait
mov
adc
jge
es
inc
jno
inc
fnstcw
lcall
jge
xor
stos
add
adc
jge
mov
push
loopne
or
add
cmp
lahf
fld
cmp
push
cmp
movsl
push
push
mov
cmp
int3
mov
sbb
mov
jo
jg
dec
xchg
ret
push
and
mov
inc
ficoml
fnstsw
aaa
outsl
loopne
ret
js
nop
mov
mov
mov
sbb
sub
sub
dec
xchg
daa
xor
mov
xchg
int3
adc
push
cli
fsub
mov
and
mov
repz
push
dec
pop
lret
int3
add
das
mov
addb
test
stos
sar
mov
sub
in
push
je
sub
cmp
mov
es
push
mov
xor
and
insl
in
in
xchg
mov
or
pop
icebp
inc
mov
add
push
mov
test
xchg
xchg
dec
aaa
out
mov
ret
jecxz
xchg
pop
in
in
ljmp
in
int
sbb
xor
repz
xchg
jmp
cmpsl
fbstp
call
mov
fisttpl
mov
xor
popa
xchg
into
int
cmp
cmp
out
lods
ja
xchg
out
adc
loop
incl
mov
sarl
sub
sub
xor
add
sub
mov
aaa
mov
jmp
sbbb
mov
push
xor
xor
pop
test
or
dec
sbb
pop
outsl
icebp
xor
loope
cld
repz
push
popa
iret
xchg
pop
xorb
cltd
in
btc
pushf
pop
pop
push
mov
or
mov
cwtl
sbb
daa
add
sub
mov
cs
mov
inc
test
sbb
ret
mov
das
jae
in
scas
push
mov
mov
and
jle
test
xor
jmp
psubsw
pushf
jmp
cmpl
sub
aam
aas
cmc
dec
cmp
mov
mov
and
outsb
test
mov
jbe
sbb
xlat
push
cmp
test
bound
mov
popf
inc
jns
xor
repz
cmpsl
in
adc
add
fisubrl
arpl
mov
in
jb
cmp
adc
adc
push
push
movsl
cld
jecxz
jae
icebp
xchg
mov
lahf
fwait
jns
data16
jns
jecxz
das
rcr
sahf
inc
sub
popf
loope
movsb
ficoml
or
dec
pop
insl
addr16
mov
into
aam
les
mov
jg
popf
into
push
ja
push
mov
ljmp
sub
imul
mov
test
ss
inc
sbb
dec
pusha
push
sub
lcall
stc
in
jo
ljmp
dec
lcall
stos
cmp
fisubrs
dec
and
movsb
stos
dec
fsubp
rcrb
pushf
imul
pop
jbe
sub
pop
and
out
dec
call
inc
cli
mov
mov
xchg
call
pop
gs
je
stc
inc
mov
mov
mov
lcall
cmp
push
sub
xorl
mov
xor
pop
mov
aas
dec
mov
xchg
cmp
mov
clc
lds
int
mov
jae
clc
xchg
inc
mov
mov
imul
jp
jle
xchg
mov
shll
fsubrp
mov
adc
add
mov
xor
test
imul
in
test
sbb
add
cmp
jle
lret
push
ret
cmp
mov
xor
or
push
xchg
dec
cmpsl
or
xlat
test
jnp
ret
push
push
jle
add
sbb
jmp
pop
outsl
xor
addr16
xchg
jp
das
lods
or
push
mov
dec
inc
movsb
outsb
outsb
push
add
add
mov
and
daa
imul
inc
or
pop
imull
insb
mov
and
jns
mov
adc
pop
nop
mov
pop
push
cmpsl
inc
stos
sbb
rolb
icebp
ljmp
stos
test
pop
pushf
daa
mov
je
inc
stos
call
outsb
cwtl
test
jo
pop
ret
aaa
shll
in
mov
pop
pop
ret
push
push
into
mov
adc
jmp
sbb
pandn
scas
iret
data16
test
jmp
and
mov
push
cwtl
dec
int
in
inc
sbb
in
jb
sarl
lea
adc
inc
cmpsb
cmp
cmp
mov
push
stc
mov
aaa
fildl
sahf
insl
lods
xchg
jb
fcmove
inc
aaa
lret
arpl
jne
bound
std
mov
loop
int3
mov
sbb
xchg
jbe
push
add
xchg
pop
dec
pop
rcl
les
movsl
rol
or
fiaddl
ja
and
imul
outsl
outsl
pusha
jo
loop
xor
int3
outsb
int3
enter
or
mov
pop
push
jmp
daa
xlat
jecxz
push
fistl
push
xchg
test
pushf
pop
add
cmpsb
gs
push
dec
xor
test
loope
mov
and
add
out
lock
lahf
dec
lods
je
pop
push
enter
call
add
push
dec
stc
dec
dec
pop
dec
xor
das
xlat
daa
test
pop
pmaxub
push
fsub
hlt
ss
out
adc
lcall
shrl
sbb
cmp
mov
cmp
cmpsb
pop
outsb
mov
xchg
jmp
loope
jnp
adc
xor
mov
or
sbb
fs
orb
xchg
stos
cmc
outsl
incl
mov
jle
iret
mov
xlat
pop
shlb
or
or
pop
pop
call
gs
repnz
xchg
jns
xchg
fisttps
mov
cmp
insb
pop
mov
xor
mov
cmc
jb,pn
ja
std
jge
ljmp
push
into
insl
in
neg
scas
dec
scas
and
mov
insl
ja
in
and
test
xchg
lahf
pop
cmp
and
xchg
mov
pop
outsl
inc
adc
aas
add
mov
loop
mov
jbe
push
insb
stc
xor
adc
in
cmp
movsb
sarb
mov
and
clc
fwait
push
fisttpll
or
adc
dec
lahf
mov
adc
xchg
into
imul
jo
pop
xchg
fcompl
pop
dec
jle
jmp
mov
lcall
mov
adc
lret
pop
add
push
insl
mov
lret
push
fsts
jecxz,pn
jge
xchg
les
dec
push
outsl
movsb
aam
aad
xchg
test
ss
dec
int
push
inc
jbe
aam
shll
enter
in
cmpsl
xor
imul
les
fucompp
mov
call
fdivrl
add
push
xchg
repnz
bound
mov
call
sub
dec
out
push
lods
dec
mov
xchg
xchg
push
test
lods
fcmove
add
shlb
push
loope
fdivl
jne
in
and
shlb
and
xor
mov
daa
sub
insb
cwtl
test
scas
jge
scas
lcall
ret
pop
iret
enter
dec
ret
lret
push
adc
subb
sti
test
lods
jg
pop
jo
sbb
in
cld
les
js
sete
push
sub
out
inc
and
pop
in
repz
loope
shlb
mov
iret
cs
jbe
add
jnp
mov
xor
fidivl
pusha
nop
jbe
decb
lea
mov
popa
loopne
mov
sti
mov
cld
fs
sub
jle
inc
lds
lods
xchg
rcll
mov
jge
jae
popf
leave
sub
out
xchg
mov
cmpsb
lret
mov
push
xor
mov
repnz
jne
into
test
ret
adc
inc
jl
fstps
mov
pop
or
xor
mov
enter
repz
xchg
aas
rorl
mov
shlb
cld
push
adc
pop
bound
push
out
shlb
fisubs
or
icebp
xchg
out
leave
mov
cmpsl
pop
dec
hlt
pushf
cmp
imul
sti
jl,pt
leave
movsl
loope
insl
xchg
adc
stc
xor
sub
sub
lock
adcl
mov
outsl
or
push
mov
dec
add
adc
cmp
iret
movsl
xor
add
jb
ret
mov
imul
xchg
sub
push
mov
mov
push
rcl
mov
imul
in
inc
inc
outsb
out
out
aam
mov
xchg
stos
sub
cmp
adc
push
popa
add
enter
sub
mov
xchg
je
push
cs
push
push
pop
sub
out
mov
and
adc
inc
jmp
push
sarl
cmp
loop
pop
stos
push
aad
loop
stc
and
mov
sub
xchg
adc
out
sbb
gs
xchg
jb
das
or
pop
mov
inc
mov
jmp
fdivs
mov
adcl
sub
dec
dec
xor
inc
or
mov
loop
pusha
outsb
cld
mov
pusha
xchg
push
xchg
push
lea
mov
insl
pop
sub
dec
dec
test
sub
aam
das
cmp
or
pusha
ljmp
lds
imul
jecxz
dec
das
push
jge
push
xchg
inc
add
or
mov
xor
add
leave
jno
mov
ds
lods
sahf
imul
scas
loop
mov
fistl
insl
adc
and
scas
int
stos
sbb
js
lret
cmpsb
mov
bnd
pop
or
xchg
jbe
psadbw
cmc
cmpsl
mov
dec
inc
or
push
xchg
pop
shll
scas
addb
xlat
stc
xor
insb
jne
sarl
push
icebp
pop
sbb
cmp
lcall
dec
xchg
daa
popf
dec
jl
ljmp
jecxz
fdivl
xor
jns
jbe
sbb
dec
xor
cmp
xor
pop
xchg
rorb
scas
mov
sub
pop
pop
jp
sbb
out
addb
adc
lcall
stc
ret
fnstcw
cmp
in
btcl
mov
add
insb
mov
enter
jbe
shrb
aaa
jge
or
dec
sbb
mov
leave
out
mov
imul
dec
ror
push
fidivrs
xchg
xchg
dec
jo
inc
mov
imul
cwtl
dec
pop
push
add
mov
cmp
sti
jmp
mov
clc
fwait
aam
cld
imul
test
mov
pop
jnp
or
add
test
loopne
inc
jmp
out
lods
btsl
push
xchg
shll
movb
shll
outsb
inc
dec
mov
out
pop
mov
dec
cltd
neg
inc
inc
jg
icebp
xchg
aas
pop
test
pop
xchg
inc
or
pop
loop
lds
mov
lods
or
pusha
scas
inc
pop
jge
inc
out
loope
cltd
imul
lds
mov
pop
shlb
xor
mov
lock
mov
inc
imul
pop
movsb
scas
cmp
inc
inc
stc
insb
dec
mov
fdivr
sub
jo
ds
test
lds
lret
mov
fwait
jle
cmp
mov
stos
add
sti
pop
gs
mov
lea
loopne
or
es
out
repz
push
sub
fdivl
or
leave
mov
pop
mov
xor
mov
jno
adc
imul
push
fisttpl
xchg
inc
aas
js
xchg
sarl
and
sbb
xor
sub
test
test
jno
inc
xor
push
popf
fcompl
cmpl
pusha
add
into
pushf
call
jecxz
jge
std
insb
jl
repnz
cs
or
cmp
mov
loop
adc
lods
mov
icebp
pop
mov
jg
sbb
nop
iret
add
and
mov
fldcw
cwtl
and
push
xchg
ljmp
es
inc
mov
xor
pushf
xor
mov
mov
lock
cmc
sbb
imul
or
and
lcall
xchg
arpl
fidivl
popa
and
fsubrl
and
mov
ss
sahf
xchg
dec
sub
or
push
xchg
ret
orb
mov
mov
daa
inc
in
mov
mov
pop
pop
loope
sbb
cmp
mov
arpl
sti
mov
out
or
jnp
loop
negb
adc
jno
test
mov
xchg
xchg
lcall
push
frstor
inc
sbb
dec
mov
and
pop
jle
pop
into
pop
xlat
jne
notb
inc
mov
pop
test
pushf
cmp
in
in
jns
cs
sbb
and
pop
mov
dec
aaa
fsts
les
fcmove
fimuls
js
shll
inc
and
int3
add
xchg
sub
cmpsl
mov
rcrb
stos
fstpl
ljmp
mov
or
mov
inc
outsl
sbb
and
jbe
cmp
inc
sbb
in
dec
shrl
add
mov
cmp
scas
fwait
cli
sbb
sarb
push
dec
inc
add
dec
mov
mov
xchg
subl
lock
push
pop
adc
pop
shll
dec
sub
inc
inc
push
pop
jecxz,pn
jbe
mov
add
outsb
int
pop
jno
sbb
nop
sub
leave
int3
cmp
shrb
pop
add
push
xor
test
popa
sub
scas
xchg
scas
cwtl
lahf
xor
add
out
lods
lcall
or
pop
mov
and
xchg
pop
pop
divb
cwtl
and
and
pop
push
and
xorl
add
dec
aaa
or
fwait
mov
fwait
inc
ds
mov
dec
xlat
shl
mov
out
add
sub
push
dec
and
lds
push
pushf
mov
push
xor
iret
push
push
or
aad
xor
jns
call
cmpsb
or
repnz
adc
add
jns
mov
testb
xchg
dec
out
popf
imul
dec
push
xchg
sti
inc
xchg
add
sub
mov
pusha
sub
adc
movsb
sar
or
sarl
sbb
mov
out
cmp
pop
mov
push
or
cmpsb
lret
sbb
adcl
add
loop
push
sub
mov
xlat
pop
jle
test
or
test
mov
jl
fcompl
arpl
fistpl
inc
rol
push
ficomps
push
inc
cmp
and
pop
sti
pop
addr16
jecxz
cmpsb
add
jne
nop
jg
dec
mov
xchg
mov
cmp
movb
out
jle
pop
jecxz
popl
xorl
ds
outsl
xor
jne
sbb
jb
pop
pushf
test
pusha
hlt
cli
xor
jp
jnp
sbb
icebp
nop
int
cmp
lahf
je
dec
mov
or
dec
pop
daa
out
pop
lock
inc
jb
xchg
and
ret
and
push
je
pop
leave
orl
addb
pop
outsw
cld
jb
jmp
mov
mov
mov
inc
dec
in
add
pushf
int3
mov
lds
mov
enter
test
outsb
sub
xchg
imul
xchg
rclb
sbb
mov
es
mov
push
mov
jo
pop
cmc
rcrb
shrl
shll
loopne
scas
mov
es
imul
xchg
inc
push
cmp
leave
inc
in
aas
mov
mov
rcrl
stc
jnp
out
push
mov
push
ss
sarb
out
cmpsb
int3
xor
sbb
lret
adc
stos
cmc
daa
sub
aad
cmp
inc
jb
scas
dec
inc
lret
cld
lods
es
or
pop
pushf
sbbl
sbb
xor
xchg
cmp
int
lock
pop
mov
sub
rcll
mov
sub
xlat
xchg
cmp
and
cli
in
pop
jecxz
in
shl
sti
cmp
mov
mov
testb
popl
mov
mov
push
pop
stos
cmp
call
jne
movsl
scas
test
inc
jle
inc
xor
sahf
mov
mov
mov
std
pop
jg
mov
sbb
pop
loope
lcall
mov
jae
and
repz
orl
sub
pause
and
push
outsl
cltd
icebp
shll
scas
sarb
jno
movsb
lret
xor
xchg
xlat
std
aas
icebp
sarl
xor
cmpsl
xchg
dec
jb
fsubrs
lock
sbb
cmp
jbe
out
fimull
loop
pop
mov
pop
in
mov
outsl
xchg
lea
sub
sti
sbb
movsb
or
and
pop
jo
and
dec
push
mov
cmp
call
stc
push
in
arpl
xlat
push
fsub
adc
mov
pop
test
mov
push
push
cmpsl
pop
xchg
cmp
mov
pop
in
pop
pop
cmpsl
mov
mov
es
and
fisubrs
out
push
adc
inc
loope
sar
sbbb
mov
sahf
pop
or
mov
pushf
notl
dec
push
adcb
inc
mov
jmp
bound
cwtl
dec
jle
lret
pop
enter
icebp
mov
cwtl
cs
jle
aad
into
adc
lret
lcall
outsb
push
pop
dec
dec
imul
fwait
movsl
mov
mov
test
jae
mov
add
addr16
fistl
mov
or
xchg
cmp
pop
lods
adc
jge
xchg
or
mov
mov
mov
in
push
out
xorl
push
lcall
xchg
cwtl
cltd
mov
add
or
add
stos
xchg
mov
test
popa
out
jb
mov
pop
not
sub
aas
sub
mov
inc
faddl
jp
decl
cld
xorl
xlat
gs
inc
dec
or
xchg
loope
mov
sub
adc
test
in
push
xor
xchg
sahf
or
jl
stos
pusha
sbbb
jmp
push
xchg
mov
in
jl
jne
sub
sub
jbe
jge
mov
add
out
movsl
sahf
mov
rcl
shll
add
jmp
push
jg
pop
dec
pop
js
xchg
test
scas
sbb
pop
stos
or
pminsw
xor
jo
mov
lea
out
out
inc
test
das
mov
lea
cmp
scas
push
mov
sub
leave
test
sbb
cmp
xchg
add
lret
dec
enter
fcomps
lcall
cltd
sub
xchg
sbb
push
sub
enter
pop
push
loop
sub
mov
test
mov
pop
pop
sti
push
add
js
nop
sbb
and
mov
ja
insb
pop
shlb
ljmp
mov
xchg
insl
loopne
adc
xlat
stc
ja
shl
int3
xor
pop
lds
xor
sbb
sbbl
jl
shll
ds
dec
hlt
xchg
inc
cmp
jnp
pushl
je
insb
adc
repnz
pop
add
jle
pushf
and
out
xor
outsb
mov
lds
in
sbb
testb
push
or
add
pop
lock
ja
pop
mov
call
pop
push
into
jb
push
mov
lea
cmp
gs
sbb
daa
push
out
lods
adc
imul
dec
mov
add
fs
and
pop
xchg
call
xchg
ret
ret
push
dec
or
sbb
sub
ror
bound
mov
push
mov
mov
into
push
aaa
repnz
repnz
call
imul
mov
fildll
sub
out
pop
mov
lds
in
jmp
ret
pop
loopne
inc
mov
inc
enter
jae
sbb
aas
ljmp
mov
mov
ljmp
cltd
adc
dec
stos
sub
aas
sbbb
inc
cwtl
push
pop
mov
clc
xchg
sub
mov
mov
in
enter
cmc
inc
jmp
pusha
push
cwtl
sarl
sub
repz
je
and
int
aad
pop
fnstcw
mov
mov
sti
dec
push
fdivs
test
pop
mov
sub
scas
jl
lds
rorb
jg
xchg
test
repz
jle
nop
add
sub
jle
pop
ss
xchg
jmp
jmp
mov
lds
pop
jge
pop
fbstp
inc
rcrb
ret
fsubl
push
mov
ja
add
aaa
push
push
sbb
inc
add
or
dec
pusha
sbb
xlat
std
push
adc
aaa
popf
xor
dec
mov
into
hlt
xorb
inc
jnp
xchg
jbe
jo
dec
jmp
les
aam
ja
xchg
jecxz
sbb
xchg
stos
mov
std
pop
negl
adc
fs
scas
and
or
add
push
ret
xor
sbb
inc
mov
pop
icebp
sub
jne
in
mov
or
stos
xchg
or
dec
in
es
mov
xor
stos
xchg
fs
cs
or
mov
int3
inc
js
dec
inc
pop
dec
xchg
mov
divb
cmp
aaa
les
push
sbb
xchg
call
adc
ljmp
xlat
xor
pusha
daa
idiv
and
insl
xchg
cmp
aad
fnstsw
jb
add
and
mov
cs
sub
cmp
loope
loope
jno
mov
nop
mov
imul
test
popa
out
call
ljmp
fwait
xor
sahf
fldl
aaa
popf
xor
xor
ds
test
or
inc
or
je
adc
dec
push
xchg
pop
jbe
or
test
cmpl
lret
push
or
and
push
popf
xchg
leave
les
je
xchg
ret
adc
fldl
pop
or
and
fdiv
mov
mov
inc
and
adc
movsb
rcr
xchg
loope
xor
cmpsb
jge
adc
inc
cmp
rcr
lret
sbbl
mov
daa
mov
addr16
rorb
popf
or
in
addr16
jp
dec
adc
dec
sub
push
aam
pushf
mov
sarl
aaa
push
inc
les
icebp
jmp
pop
sbb
insl
mov
daa
mov
pop
out
lds
lods
jecxz
jae
inc
push
jno
sbb
repz
addl
xor
jecxz
sub
pop
movsl
out
cmp
ja
je
add
aad
xchg
xlat
bound
jmp
pop
pop
push
aam
push
sahf
dec
xchg
popf
ffree
je
xchg
cmp
cmp
xor
cli
test
cltd
pop
dec
daa
call
inc
stos
das
cld
out
outsl
lcall
scas
sub
cltd
mov
push
xor
gs
dec
xchg
bound
std
mov
jo
incl
jno
ljmp
cmp
lcall
fcoml
mov
and
mov
scas
or
add
stos
cli
mov
or
mov
and
sbb
jmp
adc
ljmp
add
pop
add
pushf
mov
mov
adc
dec
popf
out
xor
fldenv
adc
mov
mul
xchg
scas
pop
or
jmp
lahf
sbb
pushf
mov
pop
inc
sub
sbb
and
dec
add
das
sbb
sbb
or
push
dec
ljmp
xchg
sub
jl
pop
test
or
je
scas
pusha
sbb
insb
or
pusha
push
std
das
or
cmova
loopne
cmpsb
mov
rcll
pop
pop
cmpsb
ffree
dec
mov
or
dec
ljmp
or
out
call
sbb
pop
loop
lahf
pop
or
jle
movsl
sub
pop
jne
xor
lret
mov
lret
fcoms
sub
sub
mov
pop
in
je
jb
adc
jle
sbb
xchg
loop
test
mov
sub
fcmovb
sub
outsb
push
mov
repnz
cli
into
ss
add
movsb
in
mov
xchg
mov
outsl
xor
jl
jg
pusha
push
shr
ja
push
push
aaa
pop
shl
repnz
mov
adc
inc
sub
cmp
fisubs
xor
ja
push
push
loope
jnp
data16
mov
dec
dec
push
fs
xchg
cmp
adc
cmc
insl
lods
jno
je
sbb
faddp
adc
mov
sbb
shll
xchg
outsb
sbb
leave
jle
push
pop
cmp
cmp
sub
sbb
pushf
mov
lret
arpl
hlt
ds
mov
push
and
lret
push
sbb
add
fdivl
popa
cld
fldcw
gs
stc
xchg
xchg
pop
pop
lret
mov
fnstenv
flds
push
jecxz
inc
pop
rclb
adc
clc
dec
shll
add
int
xchg
inc
jns
xor
lahf
pop
dec
cmp
pop
popa
les
add
jl
out
lahf
dec
pop
or
in
sub
test
or
xchg
enter
or
dec
arpl
shl
loopne
outsb
and
add
scas
pop
pop
stos
push
inc
add
jmp
jmp
stos
jle
and
cmpsl
mov
add
jl
inc
cli
cld
or
push
add
test
jns
xchg
call
fisubl
rol
jno
mov
dec
mov
mov
or
xlat
pushf
sarb
cmp
int
xor
fstpl
mov
dec
hlt
lcall
sub
das
and
fnstcw
inc
out
lods
push
int
orl
push
sahf
adc
in
mov
pop
dec
and
fbld
out
sbb
mov
and
fldenv
sub
and
mov
pushf
xchg
xorl
fbstp
inc
pushl
shlb
jmp
sub
js
outsl
mov
loope
lret
inc
xor
fistpl
rorl
sbb
lcall
lret
sbb
dec
add
pushf
pop
jle
bound
popf
add
push
xchg
sbb
sbb
xor
pusha
xor
lret
push
and
daa
pop
sti
into
fadds
lds
xchg
jecxz
pop
loopne
mov
es
lods
pop
test
ret
push
adc
mov
or
mov
xor
jbe
lahf
insl
or
pop
out
inc
fstpt
std
xor
mov
pop
and
sbb
adc
cs
push
sbb
aas
sahf
addl
and
in
in
dec
sbb
sbb
or
sub
lcall
callw
and
lods
clc
jle
jmp
push
gs
push
scas
cmp
jmp
ficoms
and
mov
jae
fmull
push
notb
pop
into
rcll
fsubl
adc
adc
bound
cli
jecxz
mov
loopne
data16
hlt
iret
mov
addb
test
cmp
outsl
loope
xor
sbb
cwtl
jo
gs
xchg
popf
loope
xchg
push
in
das
inc
arpl
pop
out
push
push
arpl
jecxz
and
aad
or
push
xchg
enter
mov
repnz
out
test
cmp
movsl
test
dec
js
xchg
jo
push
fwait
and
push
jg
xor
lcall
sub
ret
jp
pop
xlat
inc
cmp
mov
daa
aad
out
jbe
gs
into
cmp
pop
mov
insb
push
push
in
mov
inc
insb
jo
in
cmpsl
push
call
cmp
or
lgs
xchg
or
push
ja
jno
push
ljmpw
movsb
mov
pushf
xor
jbe
rorb
into
adc
jmp
outsl
lret
in
fnstsw
sbb
jmp
adc
leave
inc
sub
or
inc
hlt
mov
mov
add
loopne
loop
movsl
sub
cmp
cltd
sbb
push
and
in
into
jp
loop
repnz
aam
pop
arpl
push
inc
pop
rclb
adc
mov
lret
push
and
jecxz
sbb
pop
sbb
mov
or
test
ret
leave
popf
clc
add
hlt
rcll
or
fimull
cmp
add
sub
dec
in
mov
icebp
dec
cmp
jp
xchg
cwtl
xor
test
sete
js
pop
pop
ds
aaa
push
inc
sbb
popf
jae
jg
shll
or
xchg
mov
xchg
je
pop
jno
mov
clc
test
jb
testb
mov
out
je
shrb
mov
ret
adc
jne
lds
cmp
dec
mov
shll
adc
pop
arpl
lcall
push
sub
pop
fisubl
rorb
test
dec
test
into
mov
xchg
or
mov
popf
iret
mov
dec
dec
push
icebp
repz
cld
loopne
push
lcall
xchg
or
leave
add
movb
iret
call
int
aad
test
mov
jle
div
test
mov
add
sbb
stc
inc
mov
sub
and
aad
jnp
adc
cmp
subb
and
pop
pop
cmp
cmp
push
outsb
ds
xchg
xor
and
test
cmp
repz
mov
mov
inc
inc
pop
insb
or
pop
pushf
cmp
mov
popa
int3
iret
dec
jnp
mov
mov
dec
mov
push
loope
movsl
mov
cmpsb
jo
xor
aad
adc
ljmp
mov
jno
jl
dec
or
inc
or
jge
jge
repnz
mov
adc
loop
xchg
orb
fisubrs
cmp
sub
fs
or
adc
jnp
push
icebp
fmull
fnstsw
shll
sub
lcall
pop
fwait
mov
jae
push
aam
push
out
rorl
jp
sub
daa
rol
roll
pop
test
cmp
insl
push
in
mov
cld
int
cltd
js
out
jnp
mov
lds
adc
xchg
mov
filds
bound
fimuls
and
pop
lahf
in
pop
mov
inc
jae
daa
sub
imul
in
loope
xor
bound
mov
xlat
notb
inc
daa
data16
cld
sbb
push
fsts
add
popa
lcall
scas
sub
lret
jno
inc
add
adc
adc
repz
loope
and
mov
shl
jg
aas
or
sbb
int
out
xchg
mov
mov
cmp
jb
xor
mov
mov
mov
lret
mov
repnz
ret
into
mov
mov
or
adc
mov
mov
sub
inc
xchg
in
add
loop
imul
in
jl
jge
test
je
bound
jmp
imul
roll
enter
xor
add
add
push
inc
out
push
mov
lret
push
loop
sbb
icebp
mov
repz
mov
and
pop
lea
mov
test
push
and
fisubl
push
cs
mov
jmp
cmp
push
pop
xor
jmp
incb
mov
cmp
mov
jle
fisubrs
jno
push
mov
les
in
xor
pusha
mov
lea
push
and
xor
popl
in
pop
sub
pop
mov
pop
sbb
mov
sbb
fisubrl
sbb
adc
insl
stos
adc
mov
mov
fucomip
push
add
fdivrp
invlpg
and
adc
dec
dec
aas
test
push
cmpsb
iret
ja
imul
test
cmp
bound
sar
sti
mov
adc
lahf
mov
insl
sbb
mov
shll
std
dec
adc
outsb
or
mov
adc
mov
ror
stos
aas
lret
dec
inc
jbe
shlb
and
sar
faddp
jl
jmp
add
push
cmp
xchg
pop
xor
fstpt
xorb
xor
mov
cwtl
mov
pop
icebp
xchg
cmp
jecxz
cmp
cmp
mov
stos
sbb
push
xor
xor
jmp
jae
or
das
adc
jl
hlt
inc
mov
push
mov
cmp
inc
xlat
out
out
pop
pop
insl
sbb
inc
mov
push
inc
imul
xchg
mov
in
mov
inc
mov
ud2
push
mov
out
jmp
inc
push
mov
xor
mov
pop
jno
loop
push
jo
pop
mov
dec
in
call
inc
dec
or
cmc
mov
inc
pop
mov
inc
mov
jle
sub
sti
dec
in
mov
das
and
orl
pop
mov
and
fildll
and
je
fwait
pop
rolb
push
inc
sti
jg
ds
xchg
out
stos
loop
addr16
pop
xchg
cmp
xor
outsl
arpl
test
mov
ret
lcall
std
or
mov
shl
mov
mov
in
imul
cmp
jnp
dec
call
add
cmp
sar
insb
dec
adc
jo
lfs
pop
xchg
jnp
fistpl
jnp
out
dec
jp
cmp
and
jne
popa
lahf
mov
rorl
mov
fsubs
xor
add
in
int3
icebp
xorb
cli
inc
pop
jns
sbb
subb
fimull
iret
aam
andb
in
inc
inc
xchg
lcall
push
adc
cmpsl
lea
lods
sub
xor
or
lret
sarl
pop
pop
cmp
imul
fadd
ss
movsb
hlt
push
lea
xchg
add
mov
icebp
movsl
mov
sbb
cltd
xor
out
out
call
loopne
pusha
outsl
icebp
fstpl
push
and
cmp
test
dec
test
insb
inc
jmp
mov
pop
mov
ljmp
ja
gs
loope
pop
adcb
push
mov
push
call
add
movd
mov
pop
or
lods
mov
fcmovne
movsb
cli
int
add
inc
cmp
popa
xchg
sbb
icebp
xchg
cmpl
xchg
pushf
fdivp
sbb
jae
sbbb
add
ljmp
repnz
shl
push
mov
sbb
push
mov
dec
insl
shr
add
pop
lods
call
push
xchg
jae
inc
mov
test
sub
fsubp
mov
dec
movsb
lds
stc
jno
out
pop
xchg
adc
out
mov
jmp
jge
popf
cmp
dec
addr16
inc
or
cmp
cs
in
add
insb
jecxz
movsb
adc
jnp
jl
loopne
cmp
pop
push
xchg
adc
xchg
rcrl
fs
js
lods
sahf
gs
and
xchg
pop
ss
aas
xor
popf
jne
mov
sbb
xor
pop
ljmp
mov
aad
mov
mov
mov
outsl
inc
xchg
mov
dec
cmpsb
and
mov
pop
push
sbb
insl
inc
pop
pop
incl
pop
sahf
and
jge
enter
pushl
add
xchg
nop
clc
outsl
xchg
sbb
pop
aaa
cmp
sbb
aaa
mov
pop
mov
lret
insl
and
fwait
add
jnp
inc
push
pop
jno
insb
movsl
cmp
xor
jmp
cmpl
cmp
xor
repz
jle
jo
aad
icebp
fcmovb
test
retw
repnz
and
imul
push
xchg
mov
xchg
out
pop
lods
jns
or
cmp
xlat
int3
jge
jo
fwait
push
bound
rcrl
xchg
sub
out
xor
cmp
push
insl
imul
mov
xchg
mov
pop
mov
inc
aad
push
push
stos
gs
jmp
inc
pop
jne
outsl
cmp
add
xchg
incb
inc
shl
fcoms
mov
xor
push
lock
xchg
loop
outsb
aas
pop
int
loope
aas
nop
js
out
cli
sbb
ds
jns
ja
add
mov
xchg
stos
ja
push
xchg
fs
xor
cmp
call
dec
and
pushf
or
cmpsb
pop
jnp
add
mov
add
arpl
xchg
out
mov
call
add
lret
and
daa
stc
shlb
lods
mov
xchg
xchg
fistps
sub
clc
pop
jge
mov
test
shlb
or
xchg
xor
add
cmp
fldcw
sti
aaa
mov
add
and
cld
sub
cmp
and
pop
mov
or
pushf
mov
fs
jp
mov
mov
daa
pop
mov
xchg
scas
scas
es
pop
sub
jo
sub
adc
cld
pop
shrl
or
insb
inc
xlat
sbb
and
sbb
or
std
shlb
pushl
mov
cmp
or
clc
sbb
xor
out
jg
icebp
insl
out
lods
sbb
inc
xor
add
orl
call
and
push
js
mov
cli
fisubrs
mov
sub
mov
pushf
and
scas
clc
jo
call
sub
mov
loop
xor
xor
test
and
mov
add
dec
adc
aaa
sub
pop
shrb
mov
and
dec
test
push
mov
stos
mov
xchg
cmp
push
sub
lret
and
pop
and
push
push
mov
sub
inc
es
jp
test
fdivr
push
addb
lahf
xchg
pop
pop
movsl
push
in
inc
leave
decb
xor
and
sti
adc
out
loopne
test
leave
pop
add
ficoms
scas
imul
imul
xchg
lahf
or
movsl
push
loop
lcall
repnz
add
jbe
pop
lds
arpl
sbb
cmpxchg
cwtl
mov
or
rcll
and
and
scas
int3
hlt
scas
daa
nop
in
mov
pop
pop
pop
sub
jne
insb
sub
out
fsubl
fwait
cwtl
jns
or
mov
out
inc
cwtl
push
hlt
fcomps
imul
xchg
test
jmp
fsubrs
dec
scas
mov
xchg
cmp
or
repz
cltd
ljmp
add
fisubl
add
dec
mov
lea
in
jns
aam
mov
repz
inc
out
mov
clc
roll
in
add
dec
lret
int
lock
jno
lret
cmp
lea
test
fcmovu
in
and
in
arpl
lds
fdivr
sub
xchg
ljmp
mov
dec
lock
rcrl
mov
inc
orb
push
pop
movsl
das
sub
push
push
addl
std
xchg
or
leave
pop
mov
adc
xor
xchg
popa
xlat
xlat
popf
fsts
insb
xchg
dec
add
sub
jo
or
mov
inc
push
add
mov
mov
mov
inc
dec
mov
testb
jb
push
ljmp
orb
cmp
and
xchg
mov
leave
and
js
xchg
movsl
std
fwait
punpckhdq
js
push
cmp
xorl
add
mov
sub
xchg
dec
add
inc
sbb
mov
jle
in
into
mov
mov
inc
adc
std
bnd
fistps
ja
xchg
inc
lret
loope
fldcw
mov
pusha
xchg
ret
sti
insl
sbb
repz
cmp
xchg
ss
mov
xchg
test
stos
pop
fnstsw
inc
outsb
rcrl
call
test
push
cmpsb
pop
sbb
pop
or
jl
out
or
outsb
push
xor
popa
mov
jmp
and
jge
or
cld
pop
mov
mov
hlt
push
sub
aaa
pushf
shll
add
insb
adc
pop
decl
test
xor
pop
and
dec
pop
push
inc
xchg
out
cmp
repz
sub
sub
fwait
and
xchg
xchg
lcall
xor
pop
xchg
mov
outsl
mov
inc
sub
test
mov
lret
icebp
jne
aaa
push
imul
jle
sub
lods
pop
aas
jns
pop
std
fldcw
push
sbb
insl
lea
cwtl
pop
and
movl
test
js
jl
lret
add
jmp
adc
nop
lods
push
jne
bnd
add
cmp
inc
mov
mov
and
jb
jmp
add
jmp
fistpl
xor
pop
push
into
sub
and
mov
arpl
cmp
sbb
shll
xlat
cmc
inc
cld
adc
cmpsl
pusha
dec
out
xor
daa
xor
fldt
int
jae
mov
mov
jno
lea
mov
outsl
jo
sub
test
lret
lahf
inc
push
dec
ror
jmp
xchg
mov
dec
jle
addr16
je,pt
dec
ljmp
dec
pop
jbe
gs
pop
or
jecxz
fs
rcrl
das
test
sbb
sbb
xchg
pop
enter
or
push
aas
aad
lds
pop
rolb
cmc
sbb
adc
pop
adc
mov
lahf
xchg
push
or
adc
aaa
sub
inc
jge
push
jo
aad
cmp
dec
repz
mov
xor
mov
fmull
ret
daa
into
sub
hlt
pusha
lahf
dec
xchg
shl
lret
jl
bound
mov
adc
loopne
mov
xlat
out
bnd
orb
incb
adc
adc
mov
mov
sbb
ds
sbb
mov
not
nop
and
into
mov
cwtl
imul
pop
pop
cmp
add
in
aam
es
xchg
fisubs
repz
add
sti
xchg
cmp
push
adc
sahf
in
push
leave
push
arpl
xchg
int
std
or
mov
pop
in
clc
movsb
int3
add
adc
add
add
mov
pop
ja
loope
lret
pop
dec
ds
mov
shll
arpl
shll
mov
aad
cmp
mov
cmp
addr16
pusha
rolb
pusha
mov
lods
and
xor
adc
xor
jge
cld
mov
popa
jmp
iret
pushf
and
add
xchg
fidivrl
test
mull
rcrb
inc
rol
xchg
mov
cs
rcr
mov
dec
loop
jl
leave
rcl
xlat
bound
inc
dec
jno
call
lret
imul
add
shlb
cmpb
lahf
test
xchg
mov
xchg
std
xchg
lods
dec
mov
clc
and
jnp
push
leave
stc
enter
push
inc
dec
inc
fildll
jns
and
sbb
xchg
jno
lods
mov
fsub
iret
out
adc
jecxz
or
mov
pop
idivl
addr16
and
stos
fs
js
pushf
mov
mov
rorb
pop
or
pop
sub
mov
subb
mov
cld
push
arpl
das
mov
jb
out
sbb
sbb
jb
enter
sbb
insb
push
out
jnp
sub
repnz
push
push
fcmovnu
pop
and
shlb
ret
arpl
sub
pop
popf
sbb
jne
clc
pop
addl
jns
push
cmp
mov
inc
aas
jge
je
repnz
fs
adc
ja
shll
lea
cmp
sahf
and
dec
cmpsl
int3
and
inc
cld
mov
mov
inc
pop
sarl
push
jb
shl
outsb
xchg
mov
daa
and
xchg
push
mov
push
stos
rol
sbb
and
cmc
stos
daa
push
dec
and
movl
xchg
inc
pop
pop
mov
nop
mov
fadds
or
add
mov
hlt
dec
gs
mov
mov
pop
or
inc
adc
mov
inc
xlat
rorl
mov
inc
int3
cld
jno
sbb
sub
and
ja
mov
pop
xchg
lret
add
lcall
jbe
sbbb
sbbl
sahf
jle
out
pushf
repnz
xchg
scas
repz
mov
mov
lcall
je
mov
and
insb
mov
push
les
mov
jmp
fidivrl
add
dec
push
in
lret
sbb
pushf
push
cli
mov
sbb
enter
push
and
addr16
das
addb
push
adc
xor
sbb
cmp
push
add
jge
in
mov
ss
movsb
mov
jl
rcr
and
mov
hlt
xchg
outsb
cwtl
fldt
stos
icebp
sahf
dec
push
mov
push
jns
ja
jno
inc
gs
jno
ds
push
fistpll
jmp
push
je
lods
aam
movl
popa
and
push
inc
stc
cltd
mov
push
push
fmull
out
fcmovne
adc
repz
ja
mov
add
lahf
stc
adc
sbb
mov
dec
jge
sti
lods
sti
iret
sarl
lods
fdivrs
push
repz
or
dec
ret
mov
inc
push
mov
rcl
xor
mov
divl
out
or
aaa
das
xlat
aam
dec
bound
xchg
cmp
pusha
xor
loope
mov
adc
jno
pop
inc
mov
push
sub
jae
xor
fdivs
enter
mov
push
stc
lea
push
into
stc
fs
mov
inc
xchg
addr16
jl
in
cltd
ljmp
xor
and
jb
cmp
and
cmp
test
aaa
imul
je
push
cmp
inc
jno
add
pop
push
mov
push
pop
fcomps
dec
ret
inc
das
push
jg
std
imul
repnz
add
test
nop
cmc
out
jb
rcl
stos
movsb
fisubrs
mov
push
cwtl
gs
dec
push
faddp
dec
jl
adc
addl
call
scas
jmp
iret
fwait
aas
inc
in
dec
dec
rorb
inc
mov
mov
inc
idivb
aas
fnstcw
xchg
lods
cmp
shrb
or
push
pop
out
jg
nop
inc
mov
mov
fidivrs
pop
or
addr16
xor
and
movsb
jnp
insb
shrb
loope
inc
fimull
jmp
loop
add
inc
cmp
push
lock
jge
lcall
ja
mov
mov
fdivrs
jne
pop
lods
mov
fwait
add
push
add
iret
jmp
pushf
add
sti
and
int3
jp
bound
push
sub
adc
es
sub
lods
movsb
adc
adc
mov
add
push
push
push
jg
cltd
shlb
cld
es
jb
pop
daa
jae
pop
sti
movsl
inc
call
fs
in
testl
clc
out
mov
jle
xor
mov
mov
cld
jno
scas
jno
push
dec
cmc
fistl
jb
add
fs
lahf
mov
mov
push
sbb
sbb
add
out
mov
sahf
es
in
mov
je
in
jo
ds
dec
and
jmp
pop
stos
int3
fnsave
out
jns
out
repnz
mov
inc
xor
sahf
adc
xor
pop
ja
mov
popa
mov
sub
pop
scas
xchg
cld
ja
or
mov
in
mov
dec
fadds
sbb
sbb
sub
ret
jle
push
shll
jp
test
jo
pop
sub
add
adc
repz
pushl
inc
jae
movsb
insb
push
nop
xor
sub
mov
sbb
nop
mov
or
mov
or
and
dec
inc
fadd
insb
or
xchg
adc
xor
xlat
mov
and
divl
and
pop
or
fstpt
les
push
adc
loope
xchg
movsl
movsl
push
push
cmpsb
or
scas
mov
push
push
cwtl
push
jecxz
and
xor
cmp
jo
inc
hlt
call
or
fiaddl
stos
addb
sbb
in
movsb
es
jae
pusha
pop
outsl
pop
push
sahf
adc
lods
lods
lahf
test
add
nop
xor
dec
pop
xor
outsl
jge
sar
cmp
jne
xchg
mov
jbe
lods
inc
div
cltd
mov
push
xchg
sarl
jne
or
mov
loope
mov
stc
out
add
or
rcll
sbb
pop
negb
out
hlt
mov
cli
adc
sub
jl
shr
ljmp
mov
addr16
daa
repz
push
out
pop
xchg
or
cltd
jl
xor
push
sbb
adc
xchg
icebp
std
bound
sbb
out
pop
pop
imul
or
ffree
push
jns
mov
push
cmc
cmp
fists
fdivrs
cltd
inc
pushf
or
arpl
pop
movsl
cmpsl
and
jp
rolb
js
mov
push
mov
xchg
xor
mov
jns
lcall
call
orb
or
jnp
cmc
sbb
popa
push
aaa
jle
ds
stos
and
arpl
das
data16
inc
push
mov
push
adc
das
sub
mov
push
cld
or
sub
inc
dec
jecxz
scas
cmp
xchg
cmpsb
addr16
popa
gs
adc
rcrb
xchg
and
xor
xchg
inc
adc
jp
testb
jle
imul
das
push
sahf
ret
sbb
inc
mov
stc
jg
andb
xor
mov
jg
hlt
daa
xchg
cld
scas
mov
cmp
cld
subl
fs
cmpsl
inc
imul
lea
test
sbb
sbb
push
nop
lret
push
scas
js
stc
sub
leave
push
repz
jmp
mov
mov
popa
mov
mov
stos
mov
sbb
add
movsb
fs
test
push
aam
inc
sbbl
adc
xor
mov
inc
xchg
fimull
dec
pop
loope
and
stc
pop
loopne
cli
rolb
xchg
aas
push
les
cltd
out
daa
xor
or
outsb
popa
les
pop
repnz
mov
gs
jl
shlb
jns
pop
movsl
outsb
test
add
sbb
loopne
outsl
sub
lea
popa
jle
inc
sbb
popa
mov
enter
ja
aad
push
popf
sti
cmp
pop
add
sbb
gs
lahf
sbb
rol
js
aad
int
pusha
and
arpl
jb
dec
mov
mov
loopne
jmp
les
add
push
jp
sbb
div
xor
inc
push
pop
int
out
push
cmpsl
in
xchg
jp
sub
xchg
lock
xchg
pushf
hlt
cmp
lods
mov
addr16
gs
or
push
scas
push
or
jo
xchg
cmc
aaa
mov
jl
mov
clc
sub
fisttpl
mov
push
cltd
mov
loopne
pop
popa
mov
ds
imul
inc
push
jg
inc
cmp
sbb
pop
imul
insb
int
cltd
cmc
stos
cmp
aas
sarl
fwait
pop
add
outsl
ss
inc
and
and
rol
add
int
jle
inc
fs
xor
int3
pop
xor
aas
cmp
int
pop
mov
push
xor
mov
xor
out
outsl
sbbl
jbe
mov
enter
imul
mov
lods
jns
push
out
or
sub
shll
xorl
sbb
jbe
pop
out
lock
or
pushf
mov
push
out
jns
lret
mov
jb
sub
add
lock
jnp
in
and
xlat
mov
dec
int3
inc
das
push
adc
dec
mov
imul
pop
pop
lods
bound
mov
pop
into
mov
and
xor
int
pop
lahf
pop
pop
dec
lods
into
add
and
lcall
xchg
push
stos
sub
adc
add
adc
rcrb
pop
and
pop
shlb
in
mov
xchg
cmpsb
mov
adc
sub
pop
dec
mov
out
out
sub
dec
jp
lea
sbb
mov
or
inc
dec
sbb
aaa
sub
cs
insb
lret
cmc
fsubr
repnz
rcll
xorb
sahf
cmpsl
loop
or
pop
mov
dec
inc
in
mov
adc
cmp
mov
stc
lods
mov
les
cld
add
hlt
nop
ja
enter
dec
mov
jle
pop
xor
jae
add
or
lds
jp
xchg
subb
popa
jg
dec
sub
in
aaa
cmc
hlt
mov
add
das
je
xchg
inc
stos
sbb
inc
sbb
repnz
xstore-rng
cmpsl
inc
hlt
popf
loop
out
jl
mov
mov
push
in
movsb
flds
shr
lret
in
jl
and
arpl
xchg
or
and
shlb
add
xor
call
fists
sub
aam
jg
jne
sub
or
xorb
sbb
cs
imulb
js
cld
cltd
cmp
sbb
jecxz
push
inc
popf
jge
dec
push
sbb
and
mov
js
sub
or
and
jecxz
push
das
stos
int3
hlt
cmp
jl
enter
aam
iret
clc
jmp
aaa
cmpsb
aaa
mov
pop
mov
jmp
mov
pop
aad
int3
cwtl
aam
add
js
jmp
aam
test
xchg
mov
pop
fcomps
push
and
jo
xchg
addr16
dec
mov
ljmp
and
lret
push
mov
and
mov
pop
xor
insb
fs
mov
cmp
loopne
or
mov
repz
stos
lods
sbb
pop
push
loop
pop
mov
ds
and
ret
out
jno
jp
or
sbb
aas
das
icebp
mov
stc
call
jbe
cld
lods
sbb
scas
xchg
lahf
lret
loopne
mov
jb
and
jb
push
push
call
pop
clc
ja
mov
xor
and
mov
lock
push
cmp
seta
test
cmp
and
call
lock
dec
ret
mov
push
imul
out
lods
jo
push
fsubrl
test
sbb
fucomp
fbstp
lret
xor
xchg
andl
call
adc
jl
out
call
and
jb
rcll
push
stos
push
inc
and
subl
xchg
mov
mov
mov
popf
psubsw
pop
xor
jns
loopne
push
inc
fdiv
outsl
dec
movsb
outsb
sbb
sub
sub
in
or
push
fsubrl
retw
stos
pop
push
adc
or
daa
sbb
out
lods
fidivl
cmpsb
adc
jmp
lods
add
dec
dec
aaa
pop
sarb
jmp
test
test
mov
repz
ds
movsl
mov
add
pop
jge
mov
into
mov
inc
insl
mov
or
pop
inc
repnz
add
lock
orb
mov
fstpt
push
std
adc
sub
test
inc
xor
je
inc
inc
dec
fs
call
sbb
jnp
mov
mov
jae
sahf
xor
lret
pop
adc
test
mov
jae
clc
pop
push
addr16
mov
mov
aas
add
in
cmpsl
adc
adc
daa
loop
push
jle
jecxz
in
add
in
lods
pop
mov
incb
sub
inc
push
clc
xchg
sub
dec
inc
sub
mov
or
jmp
aas
popf
inc
dec
test
pop
or
xchg
aas
add
int
xor
andb
cmc
mov
dec
imul
mov
or
out
das
mov
xor
or
std
incl
jno
mov
and
jnp
es
into
sbb
push
mov
stc
addr16
aad
iret
lcall
loope
cli
sahf
loope
cmp
mov
push
lods
sti
or
pop
xor
mov
adc
sbb
cmpb
inc
dec
jnp
lock
icebp
dec
push
fiaddl
mov
sub
lods
push
and
inc
inc
mov
cwtl
aaa
hlt
insl
cmp
shl
sub
outsb
cmp
sarl
inc
mov
inc
in
add
adc
adc
dec
xchg
and
inc
xchg
sbb
cmpsb
mov
out
mov
jne
inc
push
jnp
xchg
js
daa
int3
sbb
adc
push
inc
setge
and
xchg
fcoms
inc
inc
test
test
mov
cmp
mov
das
movsl
dec
fsubrs
nop
pusha
sahf
mov
mov
fcoml
ficomps
push
clc
xchg
mov
sar
sub
hlt
and
mov
inc
inc
mov
fbld
sbb
xlat
mov
fimuls
xor
movsb
jae
rolb
filds
mov
insl
rcr
add
aas
pop
leave
addl
out
lcall
jle
les
lcall
pop
xor
shll
out
and
std
addr16
jno
jnp
xchg
jb
mov
rorl
dec
sbb
or
nop
sub
inc
fnstsw
andl
and
lahf
andl
adc
sub
lcall
sbb
xlat
std
aaa
and
test
xchg
std
pop
dec
in
sbb
xchg
jg
mov
fnstcw
popa
ljmp
push
out
push
jmp
fmulp
push
lahf
inc
push
xorb
jle
jp
fldt
jnp
sub
les
adc
repz
rolb
repnz
cs
addr16
pop
xchg
cmp
xorl
repz
ss
inc
pop
data16
or
test
mov
hlt
faddl
mov
sti
jb
and
inc
dec
cwtl
mov
or
dec
xchg
push
push
leave
inc
cs
mov
xor
ljmp
jo
imul
or
push
sbb
inc
ss
mov
daa
sbb
and
jp
enter
sbb
xlat
or
mov
lahf
cli
iret
mov
pop
mov
mov
filds
sub
into
out
mov
adc
fwait
jle
sbb
or
fists
inc
test
xor
rcll
pop
imul
and
mov
cmp
inc
rorb
adc
loope
dec
roll
addr16
cwtl
pop
jge
or
sbb
cmc
pop
and
addr16
mov
ret
inc
mov
ret
mov
dec
sub
cwtl
into
xchg
inc
add
inc
es
lods
xchg
iret
cmpsb
les
inc
stos
xchg
mov
push
inc
xchg
aaa
adc
jle
pop
sub
rclb
xchg
sub
sbb
fnstenv
xor
jnp
fcomp
add
and
mov
mov
jl
or
lds
pop
loope
adcb
les
inc
sbb
shll
clc
xchg
sti
mov
xor
sahf
sub
mov
icebp
in
mov
pop
out
popf
xor
cld
inc
sbb
add
pop
dec
test
bound
inc
sub
ljmp
sbb
jecxz
sbb
or
lods
inc
divps
int3
pusha
dec
adc
or
push
push
jge
popf
mull
push
pop
sub
xchg
int
in
cli
imulb
js
aaa
xchg
sbb
sub
and
cmpsl
sub
xor
daa
imul
icebp
xchg
push
and
mov
dec
inc
js
lret
popf
adc
ja
pop
jecxz
mov
mov
sarl
mov
jge
div
pushf
cli
mov
mov
sub
adc
scas
jae
jb
icebp
xchg
test
mull
mov
sbb
dec
out
or
aad
std
inc
rcrb
mov
andb
and
es
into
imul
jmp
xchg
movsb
movsb
rol
pusha
cmpsb
mov
cmp
lahf
adc
fidivrl
or
rcrl
jge
out
out
ret
pusha
sub
dec
les
rolb
and
inc
inc
orb
aaa
mov
dec
repnz
xor
or
add
add
cmp
ret
xor
fcmovnu
sub
std
stc
ja
mov
faddp
inc
xor
lahf
push
mov
push
add
mov
dec
aam
add
ds
push
aaa
enter
sub
or
and
lods
add
ljmp
fldenv
jg
sbb
lret
aad
inc
and
daa
cmp
int3
in
mov
and
xchg
pop
mov
stc
cli
loope
mov
xchg
nop
scas
mov
repnz
setp
int
sub
mov
add
jbe
adc
fstl
jno
pop
lahf
xchg
test
mov
sub
and
pop
dec
pop
xlat
enter
ret
fldl
mov
nop
imul
nop
lods
ds
jmp
call
test
das
inc
fs
push
xor
loop
xchg
ds
sbb
and
pushf
out
push
add
das
push
xor
popa
rcll
or
xchg
aam
leave
dec
adc
cmp
sbb
add
out
sub
jecxz
dec
insl
int3
repnz
int
fisttpl
repz
mov
lea
mov
int3
pop
repnz
inc
jecxz
or
pop
sub
add
jmp
outsb
jmp
rorl
jo
xchg
fldenv
outsb
cmp
or
xor
test
jle
mov
dec
lea
dec
cmp
sub
xor
cmp
jg
jl
stc
dec
shlb
sub
mov
cld
inc
xchg
adc
mov
test
push
ljmp
and
shrb
outsb
jecxz
xchg
xor
dec
sbb
pop
dec
mov
fs
mov
mov
fisubs
cmp
imul
jg
aad
int3
sub
dec
fs
mov
sub
cld
mov
dec
jno
jge
mov
sahf
leave
stos
cld
aas
mov
pop
cmp
repnz
loopne
inc
dec
push
mov
jmp
jnp
aam
xchg
popf
mov
xchg
mov
and
cli
sub
cmp
fs
ljmp
out
push
inc
xor
sub
ds
mov
shlb
pop
xor
sbb
daa
loopne
jg
dec
cmp
mov
jae
mov
mov
dec
iret
iret
out
cli
xor
popf
jmp
xchg
filds
in
test
sub
cmpsl
aad
rcll
mov
dec
pusha
xchg
int3
sbb
pusha
popl
ret
xchg
and
jne
ds
lds
or
hlt
mov
call
adc
das
pop
js
xlat
loopne
dec
inc
in
and
lds
and
jle
fwait
sbb
mov
sahf
sbb
xchg
xor
xor
sbb
std
in
xlat
ret
subb
aam
fdivl
or
cwtl
jg
mov
jo
leave
sub
or
push
xchg
dec
dec
ret
xchg
jge
jecxz
and
clc
inc
push
jo
loope
ljmp
jne
pmaxub
pop
mov
nop
mov
cmp
add
or
dec
dec
lods
ret
pop
adc
mov
sbb
xchg
popf
dec
outsl
ljmp
mov
adc
push
mov
dec
sub
mov
aam
inc
jbe
addr16
stos
inc
icebp
int3
inc
dec
addb
xchg
icebp
mov
mov
mov
xchg
inc
sub
cmp
repnz
movsb
or
xor
sub
jge
insb
mov
sbb
cld
mov
pop
gs
test
ljmp
cmc
jl
loop
jbe
lahf
mov
imul
test
rol
sti
jecxz
xor
and
aam
ficomps
aas
test
cmpsl
adc
jbe
call
jge
hlt
jbe
adc
pop
mov
pop
sbb
push
dec
aad
push
pop
add
out
push
inc
not
sub
pop
jmp
icebp
ljmp
out
aaa
inc
sub
sbb
mov
fdivrs
push
xor
sbb
mov
jae
sub
push
bound
jl
out
sbb
out
xor
data16
mov
andb
cmp
inc
xchg
mov
cmp
mov
and
dec
loope
in
cmp
insb
andl
push
jg
jbe
out
mov
out
pop
add
andl
add
jae
jecxz
dec
cld
in
adc
leave
sub
xchg
mov
ret
loopne
in
xchg
xchg
mov
sarb
mov
jns
dec
pop
xchg
xor
sbb
adc
push
stos
loopne
subl
mov
stos
idiv
or
sbb
in
push
or
adc
jmp
sahf
xchg
test
push
int
inc
or
cld
cmc
cmc
sbb
ficoms
dec
inc
popf
scas
mov
cld
mov
mov
adc
repz
mov
dec
push
iret
in
push
lcall
inc
movb
xchg
pop
add
fnsave
push
xchg
cmp
ret
jno
push
adc
aas
enter
dec
dec
inc
push
mov
test
sub
dec
lcall
adc
js
push
lret
and
mov
lock
nop
or
xor
or
mov
out
jnp
mov
nop
xor
mov
sub
xchg
xor
sub
jns
int
jnp
test
call
std
lahf
jno
cld
jnp
jmp
xlat
mov
pushf
and
sbb
mov
and
pop
js
sub
lods
push
xchg
lahf
iret
dec
cltd
cli
jno
pop
push
mov
mov
adc
sub
xor
cmp
xlat
dec
xor
in
sbb
sbb
std
and
jno
sbb
scas
cwtl
xchg
leave
loope
and
aaa
pop
lods
movsl
call
xorl
mov
mov
and
ds
repnz
adc
and
lods
rcrb
mov
xorb
dec
sbb
cld
mov
adc
pop
inc
popa
sarl
dec
adc
pop
mov
je
push
ss
sub
mov
mov
dec
out
or
push
mov
cmp
ret
mov
push
add
int3
cmpsl
or
aaa
jl
sbbl
incl
into
cmp
int3
lea
inc
icebp
movsl
mov
xor
movsl
inc
mov
insl
fnstcw
aam
push
xorl
fldl
aas
std
popa
fimull
insb
and
stos
test
inc
adc
mov
sbb
adc
mov
or
repnz
cld
ret
or
fidivrl
mov
call
or
xlat
xchg
jp
mov
mov
or
sbb
inc
loopne
inc
ss
mov
jae
cld
out
cld
mov
adc
add
mov
push
or
jmp
pop
pop
xor
push
outsl
sbb
mov
jo
xor
dec
jg
imul
push
pop
adc
repnz
xor
mov
jg
out
call
xlat
push
sbb
rcrb
xor
daa
mov
add
mov
xchg
or
enter
lock
test
jbe
adc
imul
inc
push
mov
or
outsl
movsl
mov
push
decb
clc
test
loop
xlat
dec
sbb
pop
stc
in
or
pop
cmp
xchg
test
fs
dec
xorb
cmpb
xor
out
stos
gs
inc
add
dec
xchg
aad
loopne
cmp
adc
pavgb
cld
sub
push
mov
pop
mov
jne
sbb
loope
rorb
andl
and
test
inc
mov
cs
lods
jl
mov
mov
add
adc
sub
arpl
fnstsw
dec
jnp
pop
sbb
jp
call
pusha
add
cmpsb
jne
sti
push
ret
cmp
mov
icebp
fcmovbe
push
add
int
mov
adc
cwtl
stc
adc
movsl
cmp
in
int
and
ror
sti
cmpsb
loopne
sti
rcll
lahf
inc
stc
push
ret
push
int3
int
mov
movsb
jae
negb
inc
rcll
jmp
repnz
mov
std
dec
adc
push
aaa
sbb
add
xchg
pusha
les
mov
popa
outsl
inc
test
add
push
ret
nop
lock
lret
sub
push
addr16
jnp
lods
mov
mov
mov
xlat
pop
cmp
clc
loopne
mov
hlt
lods
add
add
out
stos
int
aas
or
in
mov
frstor
cltd
pop
movzwl
mov
mov
repz
gs
int
mov
jge
shlb
mov
mov
imul
iret
loopne
mov
insb
es
andl
in
in
test
mov
and
xor
out
mov
std
imul
test
push
xchg
push
mov
dec
adc
dec
lret
daa
pop
call
roll
hlt
adc
test
mov
push
out
push
pop
leave
adc
add
outsl
ss
xor
scas
mov
sbb
sbb
pop
push
test
mov
fstpt
jae
mov
movsb
mov
xchg
sbb
ss
in
xchg
cmp
xchg
push
out
xchg
xlat
jae
and
sbb
jo
push
mov
movsb
mov
cld
mov
gs
jl
pop
inc
lea
sbb
in
lds
jbe
cmp
push
add
js
shl
mov
add
and
jg
std
push
adc
pop
push
std
xor
punpcklbw
repnz
jnp
add
sub
cmp
arpl
enter
in
fwait
dec
mov
adc
mov
aaa
dec
mov
mov
xchg
push
xor
loopne
mov
sbb
mov
or
stos
jp
and
cld
out
je
cs
stos
and
lods
and
mull
cmc
inc
cmc
lret
stos
cmpsl
dec
in
push
xor
mov
xorl
mov
shlb
inc
or
lea
movsb
xchg
cmp
insl
stos
adc
outsl
add
loope
sub
or
inc
lock
pushf
pop
stos
push
cmc
pop
iret
sbb
mov
mov
sub
push
sahf
cmp
xor
jns
jmp
mov
nop
pop
shr
bound
je
cwtl
add
or
push
push
and
sbb
movsl
lods
dec
cwtl
pop
shlb
jmp
push
pop
inc
mov
mov
cmp
hlt
add
push
push
movsb
xchg
xchg
call
mov
movsl
stos
daa
push
adc
pop
inc
es
cs
adc
cmpsb
pop
sbb
jbe
loopne
in
push
inc
lret
repnz
mov
les
ret
hlt
in
pop
xor
jnp
push
xor
imul
aaa
xorl
test
std
add
lcall
cmp
sub
sbb
cmp
xor
iret
xchg
cmc
or
out
add
lods
inc
pop
lods
stc
sub
je
sub
mov
add
popa
cli
orb
stos
cmp
push
xchg
pushf
mov
arpl
jbe
imul
push
pop
jmp
mov
mov
imul
inc
adc
jp
add
push
cwtl
cwtl
jnp
fildl
leave
andb
lcall
fs
jne
lea
jnp
cmp
jp
imul
lahf
mov
test
enter
out
jle
adc
or
pop
cli
cmp
lret
rorl
jmp
clc
fdivp
cltd
jge
mov
add
xor
push
lods
mov
aam
int
sbb
mov
sub
mov
icebp
mov
nop
movsl
cmpb
nop
xchg
add
les
adc
insl
and
xchg
out
fisttpll
mov
ljmp
add
xchg
idiv
popa
nop
and
leave
jb
adcb
push
rorb
sub
mov
sbb
leave
sbb
movsb
aam
fstpl
stc
add
scas
cmp
icebp
movsb
xor
out
xchg
testb
fdivs
mov
xor
ss
xchg
repnz
hlt
jne
lcall
out
sub
pop
movsb
sub
jl
dec
in
aaa
xchg
inc
scas
lcall
mov
movsl
add
or
ret
mov
enter
xor
sub
popa
js
sub
lret
jle
loopne
je
lods
cwtl
int
sbb
aam
fistpl
sti
imul
lds
inc
mov
push
mov
jmp
mov
adc
dec
adc
and
lds
lret
jnp
movsb
enter
mov
jecxz
inc
xchg
cmp
test
xor
cs
les
insb
sub
int3
pop
data16
adc
adc
mov
cmpsl
adc
mov
or
cmc
xor
mov
scas
mov
sbb
insl
jno
adc
ret
sti
stos
add
sbb
adcb
dec
fdiv
fucomp
fdivrs
sbb
sub
iret
jb
cmp
sub
sbb
imul
or
icebp
gs
aas
jne
enter
cmpsl
insl
dec
inc
cli
popf
jno
cmpsb
lock
xlat
xchg
pusha
push
andl
into
ds
loope
fxch
rolb
jns
ret
push
aas
cwtl
push
imul
call
inc
int3
fnstcw
sub
int3
repz
xchg
inc
ljmp
es
cmpl
fcoml
orb
xor
jmp
lock
xchg
push
cmc
lock
cmpsb
or
inc
mov
movsb
movsb
add
xor
sub
ror
insb
mov
movlhps
mov
sbb
cmc
mov
lahf
repnz
push
mov
cmpsl
lds
or
stc
jne
insl
xchg
sarb
and
sbb
test
mov
stos
push
clc
imul
fstpl
aad
popa
dec
je
nop
jb
in
test
scas
jle
lahf
pop
push
popa
push
data16
pop
aas
pop
pop
push
cmp
mov
stc
push
pop
lock
mov
pop
in
pop
push
mov
pop
das
testl
arpl
outsl
dec
jnp
stos
push
ljmp
mov
imul
imul
mov
pushf
or
inc
fwait
and
inc
icebp
xchg
xchg
popf
sub
daa
faddp
clc
fadd
insb
pop
jno
pop
sub
test
inc
mov
test
lret
lahf
std
push
sbb
add
movsb
repnz
push
ja
mov
iret
gs
inc
popa
add
xor
push
jmp
pop
lea
jo
cmp
or
cmp
lods
shll
dec
fdivp
mov
cmpsl
out
cmp
ss
adc
or
shll
xchg
mov
xchg
jp
setb
jns
pop
sub
mov
jb
and
dec
push
push
or
add
pop
lock
pop
push
push
fmuls
cltd
mov
lahf
sub
push
std
pop
cmp
outsb
into
lret
inc
sbb
cmpsb
add
jecxz
mov
jbe
loopne
jp
add
inc
outsb
loop
js
and
jge
cmp
imul
rcll
mulb
mov
imul
push
cmp
aad
or
nop
sub
add
adc
ss
cmc
jp
into
loopne
push
sbb
lock
sbb
adc
mov
mov
cli
mov
andl
mov
aad
push
cltd
pop
cwtl
mov
inc
pop
out
jge
popf
mov
aas
xchg
mov
sbb
test
lret
not
jns
push
movsl
or
lds
clc
mov
loopne
in
xlat
mov
mov
out
movsl
or
push
addr16
push
rcrl
lock
jmp
mov
cmpsb
fs
lcall
and
mov
les
frstor
mov
orb
cs
sbb
icebp
xor
inc
pop
std
jmp
mov
push
pop
shrb
adc
cmp
fwait
or
pop
inc
test
xchg
sbb
popf
push
add
dec
cmc
jge
cmpsb
leave
and
out
mov
out
cmp
lcall
inc
mov
jle
or
sub
xchg
rorl
nopl
mov
pop
imul
pop
inc
imul
mov
mov
sbb
idiv
iret
shlb
inc
mov
jno
mov
lret
mov
stos
testb
ljmp
movsl
lea
dec
hlt
jmp
jmp
movsb
out
scas
xlat
cmp
lahf
adcb
and
cmp
stos
pop
and
sub
js
jmp
pushfw
das
add
pop
scas
repnz
mov
cmpsl
lret
adc
mov
rol
jo
add
fadds
xchg
and
sti
pop
fnsave
pop
cli
xchg
shlb
loopne
test
inc
sub
in
je
sub
jmp
ret
out
outsb
inc
mov
jb
lahf
out
inc
ret
test
sub
fsts
add
in
mov
daa
cmp
daa
out
cltd
mov
loopne
pop
andb
cs
jle
and
xchg
pusha
repz
and
stos
fcmovnb
loop
sbbl
xor
sub
or
test
clc
adc
or
dec
cwtl
test
jmp
js
dec
sahf
cmp
mov
add
pop
addb
dec
jnp
pop
movsb
and
dec
cmpsl
imul
sbb
xchg
andl
mov
pop
inc
dec
cltd
jne
jge
mov
sbb
int3
dec
lea
cld
mov
repnz
leave
cltd
pop
out
xlat
jns
sub
popa
push
inc
icebp
enter
xor
cld
xchg
in
popf
loope
repnz
or
lea
sub
ljmp
cmpsb
cmc
jns
sub
sub
pop
loope
dec
arpl
hlt
push
out
mov
and
mov
mov
ds
xchg
shrl
icebp
bound
ds
mov
mov
out
push
dec
mov
xor
xchg
adc
jns
cmc
and
dec
testl
fnstenv
and
xchg
jnp
ljmp
add
out
dec
ficoms
adc
mov
xchg
mov
icebp
sub
aaa
call
das
xchg
mov
sti
lcall
push
mov
xor
or
pop
pop
bnd
and
aam
jae
mov
sbb
xor
sub
fstl
push
pop
fdivrs
idivb
mov
xor
nop
enter
jbe
cmp
popa
add
pop
inc
xchg
dec
in
pushl
sub
dec
jb
dec
mov
fildl
jnp
fsub
sub
jge
ret
push
jmp
lock
dec
insb
dec
out
or
mov
shlb
mov
cmp
sub
shll
nop
cwtl
cmp
jmp
jmp
jge
jbe
push
out
inc
jnp
or
ficompl
movsb
rcl
addr16
cmp
sub
mov
mov
cmp
pop
clc
faddp
cmp
add
jge
mov
insb
xchg
push
adc
call
push
jecxz
add
loop
sar
dec
test
test
mov
push
or
rol
add
jmp
cld
lds
cmp
adc
and
jne
pop
shlb
fstps
sbb
dec
mov
les
out
add
loopne
adc
mov
fiaddl
out
cld
xrelease
int
jo
inc
jp
in
push
pop
push
outsb
test
mov
push
ret
aaa
shll
or
mov
push
push
mov
sub
inc
xchg
xor
adc
sbb
mov
icebp
ljmp
mov
cmc
aam
xor
and
mov
pop
pushf
ret
jge
out
ret
insb
insl
and
sub
scas
into
arpl
xchg
lock
hlt
adcl
into
cmp
imul
and
jnp
pop
jb
mov
jae
pop
jle
mov
scas
mov
mov
jge
insl
mov
cmp
push
pusha
addb
xchg
mov
pop
jle
outsl
xchg
push
sti
mov
xchg
sub
int
pushf
adc
call
enter
jns
push
mov
pop
sub
idivb
int
addl
mov
imul
mov
lods
pop
aaa
jle
mov
and
adc
xchg
cmp
bound
dec
mov
add
xchg
xlat
mov
lods
or
cmp
lock
rcr
sub
pop
mov
push
das
or
cmc
es
mov
test
shlb
lods
add
push
fwait
push
mul
lods
sbb
aas
in
test
mov
xchg
rclb
or
les
or
push
xor
out
pushf
push
jo
mov
lret
or
cmp
in
out
push
adc
mov
add
mov
jge
je
pop
xchg
nop
aad
ja
in
adc
test
or
dec
cmp
in
mov
sbb
out
ret
mov
jge
ja
fdivs
xchg
jns
mov
xchg
fs
inc
jb
das
ret
arpl
fs
sub
jo
out
push
in
inc
inc
out
mov
das
cmp
or
in
push
jo
lods
push
nop
not
jmp
mov
test
push
jle
add
add
int
lcall
insb
pop
jg
jb
xchg
push
adc
sub
shr
mov
mov
sbb
movsl
leave
or
inc
cwtl
imul
cmp
sbb
push
jmp
pop
call
in
fwait
les
idivl
outsl
and
inc
add
mov
sahf
lcall
pop
lock
pop
xlat
int3
aaa
adc
mov
or
and
test
xor
dec
in
jae
sbb
mov
std
fmull
adc
and
cmp
add
and
leave
bound
jbe
mov
outsb
jge
or
test
mov
and
xor
jne
lahf
mov
enter
jge
test
xor
mov
pop
sti
xor
jb
lret
and
jns
jbe
add
leave
shrb
xor
andl
sti
mov
xchg
cld
iret
mov
pop
xchg
dec
pop
mov
cmp
or
fisubrs
lods
jne
loopne
fwait
mov
fsubrl
push
mulb
lea
leave
sub
call
pop
mov
xchg
out
ljmp
mov
and
out
mov
out
mov
out
inc
adc
sbb
es
push
mov
setle
cmp
add
adc
adc
insb
or
pop
sbb
push
outsl
jle
dec
dec
xor
mov
add
loop
int
mov
mov
pusha
inc
cs
mov
out
jge
and
jb
adc
aaa
sub
mov
mov
xchg
insb
or
inc
pop
mov
xor
mov
push
mov
xor
xor
out
or
repz
aad
data16
fwait
xor
jns
mov
icebp
out
loop
in
dec
shl
mov
addr16
idivb
sub
pop
lock
push
mov
stc
sub
push
sbb
pop
js
subl
adc
test
loopne
cmpb
pop
xchg
sahf
mov
or
or
xor
je
int3
push
mov
enter
inc
cmpsb
sbb
sbbl
test
loop
and
testl
mov
pop
push
ljmp
cmp
sbb
sub
jge
xor
jecxz
test
mov
jb
data16
mov
jp
mov
daa
cwtl
pop
pop
and
push
ror
mov
ja
je
test
jns
inc
xor
ljmp
xor
scas
xchg
pop
mov
push
dec
dec
out
mov
arpl
or
andl
cwtl
jle
ficoml
shrb
xchg
mov
xor
mov
dec
mov
movsb
test
loope
out
idivb
pop
int
pop
fcompl
jnp
dec
xchg
mov
shr
push
fistps
cmpsl
pushl
insb
jp
push
xor
loope
mov
jl
mov
jo
pop
adc
inc
cmp
inc
inc
inc
repnz
sbb
mov
lds
adcl
les
sub
and
jecxz
mov
scas
cs
push
inc
scas
sbb
mov
idivb
movsb
test
lods
dec
lret
repnz
dec
xchg
inc
sub
fistpl
loop
fldcw
sub
push
loopne
pop
and
and
cmc
dec
adc
es
mov
jmp
daa
insb
loopne
jmp
pop
insb
lods
and
testb
or
sbb
xchg
adc
dec
aad
icebp
clc
dec
sub
enter
pop
sub
xor
or
sahf
arpl
jecxz
iret
in
in
push
aad
pop
je
das
stos
pop
out
idivb
mov
sub
dec
fists
bound
cmp
sahf
inc
rclb
dec
int
stos
mov
fsubs
push
popa
lods
or
sbb
dec
xor
sbb
sti
xor
clc
inc
fistpl
sbb
ret
dec
jle
ret
adc
dec
cmp
mov
movsb
cmp
inc
cmpb
pop
sub
jp
pop
xlat
adc
jmp
dec
cmp
add
stos
js
cmp
les
cmp
mov
aas
inc
jmp
aas
setle
jne
bound
cmp
pusha
je
sbb
push
rorb
fiaddl
repnz
push
dec
ja
daa
insb
dec
add
xor
mov
mov
fs
jle
mov
arpl
inc
fwait
add
fmull
cmp
push
movsb
aas
lods
aam
aaa
add
lret
cmpsb
int3
cmp
mov
inc
stc
subb
jbe
fbld
fcom
sbb
mov
push
in
mov
xorl
cmp
sub
fs
imulb
dec
les
cmp
and
stos
clc
inc
daa
dec
cmp
sub
add
xchg
pop
mov
pop
jp
in
test
lods
cmp
pop
ret
xor
mov
pushf
push
ds
or
cld
dec
aaa
mov
lret
mov
cmp
xchg
fadds
mov
out
lock
je
lret
lret
xchg
scas
jmp
xor
mov
adc
std
int
or
push
cmc
scas
adc
dec
pop
add
insl
pop
adc
push
ficomps
std
or
adc
in
dec
leave
ds
divl
lea
sysexit
pop
fwait
test
xchg
int3
fstps
inc
jg
jo
jge
mov
pop
jo
in
jmp
sbbb
outsb
xchg
cmp
iret
lcall
ds
jbe
mov
push
fsubr
lods
in
dec
test
mov
das
inc
mov
dec
inc
xor
xchg
dec
mov
das
mov
jg
ljmp
xchg
outsb
mov
aas
pop
int3
out
inc
add
sub
mov
mov
adc
ss
push
sbb
inc
push
shll
add
xchg
popa
call
sub
iret
pop
and
push
movsl
mov
cmc
ds
mov
fdivl
repnz
cmp
test
pop
outsb
ficomps
adc
lea
sahf
pop
sub
data16
loop
stc
adcl
mov
and
push
mov
push
sti
cwtl
inc
push
outsb
cmp
mov
test
imul
nop
push
lret
mov
inc
adc
jecxz
enter
fists
call
inc
outsb
sub
lods
push
lea
fnstenv
adc
and
mov
cmpl
cmp
adc
loopne
cmp
xchg
cs
push
scas
xor
pop
dec
cmp
daa
cmp
jbe
ficompl
adc
dec
push
add
sti
data16
jg
mov
push
mov
jmp
mov
scas
cld
cs
push
or
lods
dec
xor
scas
adc
fdivs
xor
std
dec
inc
and
xor
lea
iret
cmpsb
inc
add
dec
adc
aam
and
or
mov
movsl
lea
int
pusha
movsl
mov
xchg
pushf
movb
push
xchg
add
mov
mov
roll
enter
inc
sub
fsubr
mov
xchg
xchg
jmp
push
sbb
dec
mov
xchg
push
xchg
dec
pop
aad
ljmp
imul
or
and
clc
cmp
popa
sarb
insb
data16
jge
jecxz
repnz
or
fs
pop
shr
sbb
insl
lcall
adc
dec
mov
mov
jbe
sbb
test
and
dec
xchg
jbe
mov
es
stc
fidivl
jecxz
jecxz
mov
add
hlt
jbe
jl
lods
aam
ret
inc
pushf
scas
loopne
inc
rcll
insl
into
fidivs
push
mov
rolb
jecxz
mov
jae
jne
shr
lock
hlt
mov
out
pop
pop
rorb
push
mov
sarb
pop
xor
scas
aas
scas
idivb
inc
sarl
mov
lods
jno
aad
shr
add
or
sti
movswl
fcomps
shl
shll
xchg
pop
or
jmp
pop
pop
inc
aam
sub
repnz
jo
jo
loopne
mov
adc
sbb
hlt
gs
push
scas
sub
mov
insb
cmpsl
pusha
adc
inc
dec
test
lods
lea
jl
stos
pop
or
xchg
add
cld
fstpl
cmp
xor
lret
mov
std
and
dec
ds
mov
xor
sub
inc
sahf
mov
mov
sbb
xchg
mov
push
or
lret
cltd
popf
dec
jae
nop
pop
mov
mov
fldt
popa
lock
fcomi
cwtl
mov
xor
jb
and
or
ds
loope
or
aaa
aaa
mov
jp
gs
pop
push
rorb
adc
out
cli
imul
jp
push
sub
mov
xchg
out
or
sub
mov
cltd
insl
pop
jb
adc
sub
data16
shrl
aad
iret
xlat
jge
cltd
pop
xor
ret
sbb
xor
lret
movsb
and
test
cs
jo
dec
nop
push
popa
mov
jg
cmp
bound
push
dec
stc
jns
cld
mov
enter
adc
and
cld
shl
sub
cmp
mov
jae
dec
out
out
hlt
xor
cmp
mov
and
pop
dec
or
ret
or
mov
mov
aad
jae
lret
and
xor
sbb
mov
pop
push
dec
aad
sub
adc
call
lods
movsb
out
clc
inc
test
je
sub
jmp
xchg
out
cmp
mov
xchg
insb
mov
adc
xlat
lcall
aaa
jne
xchg
add
mov
dec
addr16
sbb
clc
das
add
mov
jnp
imul
add
push
or
push
and
adc
mov
mov
push
arpl
xor
push
pusha
dec
adc
jl
adc
adc
or
ds
pop
sbb
fistpll
xor
add
dec
xchg
push
imul
loope
js
sub
inc
push
fimuls
xchg
xchg
push
mov
or
hlt
jmp
jb
stc
cmp
inc
pop
or
jmp
arpl
arpl
cli
cmp
inc
and
insb
mov
cmp
mov
mov
xchg
sub
adc
dec
icebp
adc
mov
repnz
add
inc
dec
jb
inc
and
sbb
add
jbe
cmp
arpl
pop
push
jno
lahf
popf
jae
inc
lock
or
insb
es
bound
mov
repz
dec
aaa
add
sbb
scas
mov
xor
cmp
jne
cs
sub
jne
mov
data16
sub
outsb
sbb
lds
push
xor
fidivs
xchg
push
jnp
mov
insb
test
add
mov
jge
fyl2xp1
test
out
mov
pop
push
test
lret
in
out
outsb
inc
adc
icebp
xchg
popf
shrl
add
not
mov
mov
xchg
xor
or
sub
push
call
cs
inc
shlb
unpcklps
push
out
fbld
jo
lcall
xor
mov
stos
test
sbb
lcall
aam
adc
mov
add
stc
sbb
cs
imull
pop
xor
arpl
or
jo
sub
out
and
mov
mov
stos
push
out
sbb
xor
xlat
and
cmp
popa
idivb
xchg
jmp
rcl
dec
inc
icebp
adc
sub
jg
stc
xchg
lods
and
xor
in
es
mov
fldlg2
jbe
gs
sbb
cmp
sub
jb
cmp
test
insl
or
pop
jns
addr16
jg
adc
jge
cmp
lret
pmulhw
mov
inc
push
out
clc
adc
out
inc
mov
or
out
aam
mov
cmp
add
popf
push
adc
adc
adc
repz
stc
cmp
fdiv
xor
int
cmp
cmpsl
inc
dec
inc
and
call
stos
stos
xor
push
outsb
data16
xchg
add
or
ja
mov
lret
lret
mov
xchg
pop
ss
jne
ja
adc
inc
jo
test
mov
mov
lods
insl
pop
in
push
push
test
pop
loopne
mov
xor
das
inc
cmp
ja
adc
dec
inc
loope
addr16
out
repz
iret
lret
push
sbb
stos
xchg
cmp
in
inc
dec
sub
cmpsl
xchg
or
std
mov
iret
roll
push
test
sahf
ret
mov
ljmp
stc
movl
cmp
sti
cld
and
in
aam
or
inc
out
lea
popa
sub
jmp
imul
cmpsl
jl
and
sbb
xor
xchg
xchg
jp
mov
mov
leave
iret
mov
int3
xor
mov
push
dec
addr16
stc
hlt
add
gs
sub
test
sub
cmovp
push
sub
sbb
adc
icebp
sbb
push
xchg
aaa
in
mov
mov
popa
or
mov
rol
lods
inc
stc
jp
pop
inc
xchg
mov
rorl
dec
adc
pusha
das
and
sbb
push
insl
pop
sbb
mov
cmp
pop
pop
sub
lcall
cmp
mov
or
ss
cmp
mov
inc
loope
call
cmp
sbb
sub
xchg
std
and
std
mov
iret
sub
je
cmp
xor
mov
insb
ja
adc
xor
aaa
inc
insl
adc
sarb
mov
inc
xor
nop
cmp
in
shlb
movsb
mov
sbb
rorl
das
das
mov
popf
les
xchg
outsl
cltd
ret
xchg
adc
push
adc
dec
pop
loope
or
xchg
lcall
mov
sar
mov
test
pop
cmp
sub
sub
mov
xor
jp
or
jae
add
lcall
push
loope
add
push
fiaddl
sbb
ret
out
and
adc
call
push
nop
inc
pop
push
jne
leave
out
sbb
sub
and
shlb
cmp
pop
es
jnp
imul
push
push
pop
sub
lea
fdivs
sub
push
lahf
pop
pop
mov
adc
xchg
xchg
cmpb
cwtl
jns
adc
ret
insb
or
insl
addr16
dec
sub
data16
and
fldenv
cmp
mov
ret
divl
mov
dec
mov
into
mov
cld
mov
adc
inc
cmp
sbbl
mulb
pop
inc
jl
pop
mov
lret
sub
pop
scas
pop
pop
mov
pop
insb
out
add
dec
popa
xor
xor
pusha
arpl
mov
pop
pop
sub
popf
jmp
xchg
lods
jno
loopne
add
push
inc
add
mov
and
xor
nop
inc
out
cltd
or
sysexit
icebp
icebp
add
repnz
sti
outsb
cmp
cmc
jbe
fwait
add
sahf
mov
pop
cmp
xor
insl
add
fsubl
aas
xchg
push
jo
jbe
test
cwtl
repnz
cmp
pop
arpl
pop
sbb
lret
movsl
jns
mov
add
orl
xchg
mov
or
xchg
movsb
sti
in
mov
jmp
imul
xchg
add
int
mov
scas
movsl
pop
cmpsb
test
cli
out
mov
out
rcll
xchg
pop
cld
and
mov
inc
pop
push
repnz
ror
js
jmp
cmp
add
aas
push
jno
sub
mov
jle
jg
mov
aad
mov
hlt
jl
subl
jl
hlt
std
jmp
and
mov
inc
stos
sahf
dec
xor
out
subl
add
cmpsb
mov
cltd
xor
inc
mov
lret
add
test
mov
mov
idiv
inc
xor
jl
adcb
dec
or
sbb
and
jmp
das
pop
fisttps
dec
mov
sbb
adc
loope
xchg
int
stos
sets
movsl
cmp
addb
dec
or
mov
outsb
push
xchg
cmp
cld
or
in
lret
xor
jno
mov
mov
add
das
pop
push
sub
lret
aad
push
clc
int
mov
into
sub
lcall
setb
sub
adc
shrb
xchg
loop
test
clc
jns
xchg
test
jne
fwait
mov
cs
dec
addr16
repnz
push
or
ja
rcrl
iret
call
xor
divb
jne
sub
adc
stc
xor
div
sbb
sub
std
xor
scas
adc
sbb
jne
push
and
mov
push
in
pop
je
mov
lahf
sti
lds
jge
fs
sub
ja
leave
aas
xchg
jae
nop
fwait
xchg
pop
dec
adc
sbb
bound
xchg
push
clc
jp
movsl
js
addr16
and
pop
divb
insl
push
ret
dec
push
dec
testl
aad
add
cmp
sub
mov
lret
mov
mov
adc
xor
pushf
fbstp
jo
mov
mov
dec
mov
stos
lcall
aas
cmove
push
fsts
out
mov
scas
jns
and
jmp
int3
fsubs
or
repnz
pop
insl
lcall
aam
test
pop
mov
inc
inc
repz
psrld
or
sbb
lds
es
sub
aas
hlt
cmp
sarb
sbb
add
scas
arpl
adc
mov
lods
and
movsb
mov
sub
and
and
xorb
out
lods
jle
jmp
scas
cmp
xor
inc
stos
fwait
cld
adc
jnp
xchg
adc
cmpsb
or
sub
mov
mov
mov
lcall
aam
out
lret
jae
push
inc
lods
hlt
je
fwait
pop
xor
imul
test
test
pop
xchg
dec
aaa
cmp
mov
gs
add
xchg
or
outsl
rolb
into
insl
mov
inc
push
sbb
mov
cmp
pop
xlat
mov
js
and
cmp
inc
aad
cmp
call
lds
in
push
xor
lock
fidivrs
mov
int
fcompl
lods
jmp
std
inc
bnd
por
jge
push
adcb
ja
inc
mov
popf
ret
loope
and
mov
popl
push
xchg
bound
out
imul
in
sbb
out
push
daa
or
out
push
push
xor
cltd
int3
data16
fdivrl
cltd
rorb
jmp
xchg
lret
cmp
fldcw
mov
sarl
into
mov
add
inc
mov
mov
cmp
cmp
gs
jmp
out
fdivrp
movsl
or
inc
into
lahf
movsb
xchg
mov
movsb
jns
jnp
push
ljmp
pop
scas
add
cwtl
mov
or
roll
xchg
xchg
lock
add
rolb
aad
fnsave
sbb
mov
xchg
jle
dec
sahf
fdivrl
sub
in
leave
out
push
ss
dec
jl
push
stos
mov
inc
imul
icebp
repnz
and
cmp
mov
iret
lds
or
inc
nop
jecxz
aas
or
rclb
xchg
into
jae
mov
or
push
adc
jge
aam
add
imul
sarl
and
int
cmp
repnz
and
add
stos
jbe
pop
sub
inc
mov
mov
inc
std
enter
in
inc
jne
out
dec
fstpt
iret
sub
add
mov
testl
loopne
incb
mov
mov
push
cmp
cmp
inc
fmul
imul
push
scas
mov
sub
add
fwait
dec
xchg
lock
mov
lcall
inc
hlt
push
sbb
pop
mov
pop
push
cmpsb
lods
lret
sbb
stos
sub
adc
addb
fwait
push
nop
hlt
es
in
jmp
mov
out
loope
fld
cmpsl
pop
pop
sbb
jle
ljmp
fs
xor
sub
jmp
movsb
sti
imul
daa
inc
gs
cmp
xor
cmp
mov
xchg
iret
lahf
or
mov
push
call
shlb
push
cs
orl
xor
mov
pop
in
fs
jb
jne
xchg
dec
lcall
call
add
sub
outsl
jl
hlt
cmpsl
xchg
mov
lcall
cld
es
aam
jmp
adc
shr
shr
cltd
mov
mov
xchg
inc
icebp
sti
lock
cmp
addr16
cmp
cld
push
dec
ss
push
rcr
shr
sti
fwait
cmp
js
cmc
xor
or
mov
inc
inc
test
aaa
in
pop
icebp
cs
jl
mov
bound
add
lret
lahf
add
cmc
inc
mov
dec
push
and
cmp
push
sbb
int3
jb
nop
rcll
gs
sub
data16
sti
hlt
cmp
lret
arpl
sub
jno
sub
fnstenv
scas
cwtl
inc
sarb
sarl
mov
out
sbb
sbb
sbb
or
in
sbb
insb
cmpsb
jo
enter
push
jns
inc
dec
xchg
aas
or
repnz
test
ja
xchg
add
shll
or
lods
push
lahf
les
sbb
popa
mov
pop
xor
adc
cs
push
out
stos
mov
shl
and
add
adc
in
pop
std
sbb
mov
lret
jmp
mov
sbb
out
mov
test
mov
shlb
jmp
mov
inc
pop
sbb
and
aam
adc
pop
fwait
or
shll
add
jge
mov
in
jne
adc
and
rcr
loopne
es
mov
xchg
xchg
cmp
js
int3
cld
into
pop
or
adc
sub
push
fs
dec
dec
and
ret
dec
lds
ret
lcall
or
out
fcomps
lcall
dec
lea
xchg
movsb
mov
and
sbb
jmp
or
jnp
mov
icebp
icebp
lea
std
nop
xchg
jb
sub
sbb
insb
and
in
outsl
mov
adc
lret
and
pop
push
lods
xorb
popl
lcall
push
sub
xchg
jb
les
xchg
test
ja
jp
sbb
into
adc
fstl
ja,pn
cmp
mov
add
dec
inc
repnz
bound
push
sbb
test
out
adc
js
fsubrl
arpl
loop
movsb
pop
xchg
fsubrs
fiaddl
inc
imul
cmovb
cmp
mov
fisubs
addl
pop
or
pop
cmp
out
or
outsl
add
xor
mov
stos
or
fiaddl
jle
adc
dec
cmp
jno
jnp
mov
jo,pn
cwtl
js
pusha
ja
pop
cli
mov
movsb
mov
mov
inc
cmpb
mov
push
cs
cmc
xchg
cmp
scas
bound
jg
outsb
mov
mov
push
xor
icebp
add
jmp
xorb
mov
pusha
das
nop
cmp
mov
pop
pop
cmpsb
cmpsb
sahf
xchg
test
out
inc
xchg
cwtl
int
mov
dec
mov
sahf
cmp
cmc
inc
scas
or
call
pop
adc
pop
mov
push
jae
sub
out
imul
fimuls
in
dec
push
sti
xor
icebp
pop
pop
inc
clc
fstpt
push
jmp
push
or
pop
lock
jmp
add
cmpsl
push
or
fstpl
and
in
pop
or
pop
adc
xor
mov
add
outsl
xor
mov
xor
mov
aas
mov
insl
psubw
push
lcall
enter
sbb
in
sqrtps
arpl
clc
repnz
push
subl
push
dec
mov
mov
dec
nop
sbb
jnp
sbb
icebp
xchg
mov
xor
push
inc
inc
sbb
int
adc
pop
test
or
fsubrl
xchg
mov
nop
cmc
call
scas
push
mov
and
jge
mov
cmpsl
out
lods
fxch
mov
mull
int
sub
shlb
dec
out
imul
cmpsb
sbb
mov
jbe
mov
jnp
and
dec
jno
enter
loop
pop
cwtl
sbb
ret
xor
xchg
lock
lock
mov
pop
aas
or
pop
fsubrl
cmp
pop
das
xchg
pop
and
ja
scas
dec
add
data16
and
cld
hlt
lods
push
or
das
movsb
pusha
sbb
cld
fs
add
or
jo
dec
adc
sub
sahf
push
mov
and
dec
ljmp
enter
cmp
popa
adc
hlt
in
jmp
push
int
adc
es
inc
xchg
pop
inc
cs
lods
inc
push
ret
pop
lsl
sub
ret
or
or
popa
out
stos
cmp
dec
pop
or
mov
dec
inc
push
sub
pop
bound
or
int
jmp
xchg
cmp
loop
int
sub
push
mov
pop
arpl
push
lock
test
adc
pop
jne
sti
aaa
mov
mov
ljmp
notl
push
push
lahf
cltd
je
xchg
sub
imul
popf
sti
xor
cmp
insl
in
insl
and
in
or
dec
pop
loope
bound
shlb
fistl
or
jmp
or
or
dec
pushf
pop
stos
sub
push
iret
leave
xlat
test
dec
jg
xchg
xor
jge
test
aas
les
enter
nop
dec
ret
int
out
jb
cld
mov
pop
xor
xor
lret
jecxz
push
mov
dec
add
pusha
stos
bound
icebp
adc
add
mov
shrl
mov
repz
clc
bound
mov
aaa
jo
sar
jb
pop
ds
nop
bound
and
inc
push
push
or
fsqrt
insb
js
inc
pop
push
xor
jbe
inc
movsl
mov
lret
xor
pop
std
mov
mov
je
mov
loopne
imulb
out
sahf
dec
pop
sbb
xchg
push
leave
sbb
jle
icebp
push
adc
lea
bound
shlb
out
push
andl
arpl
insl
sbb
mov
sub
enter
cmp
je
and
stos
xor
loopne
into
inc
unpcklps
adc
subb
stos
or
xor
jle
les
imul
bnd
pop
popf
mov
inc
mov
dec
imul
and
out
imul
adcb
push
in
in
addl
in
pusha
mov
pop
mov
clc
mov
les
data16
imul
xchg
and
cmp
lods
mov
shlb
cmp
xlat
scas
mov
jns
dec
repz
sub
stc
mov
sbb
lret
repnz
cwtl
out
xchg
int3
pop
push
shll
pop
dec
push
adc
mov
out
xor
pusha
xor
sub
push
mov
mov
ljmp
into
aas
scas
mov
pop
scas
fstl
lcall
lcall
sub
or
mov
loopne
or
lods
in
push
out
adc
sbb
iret
aad
out
xchg
imul
push
dec
mov
movsb
lock
fmull
gs
push
pusha
je
xchg
scas
mov
pusha
lds
cmp
loope
loope
lret
ret
push
movsl
jp
ret
ljmp
movsb
mov
movsl
mov
or
aas
sub
fsubrp
lds
inc
insb
inc
imul
add
or
cmpsl
xchg
imulb
pop
xchg
js
loope
aad
xorb
pop
mov
or
cmp
mov
inc
push
sbb
ljmp
pop
jns
and
pop
pop
dec
inc
mov
arpl
sub
and
mov
jnp
cmp
xor
mov
fnsave
insb
int
or
mov
mov
mov
arpl
push
xor
adc
cmp
xor
out
and
dec
cmpsl
je
lods
in
cmp
lahf
negb
cld
cltd
es
fcmove
mov
call
mov
sbb
sbb
pop
test
lods
or
cmp
jae
leave
imul
jl
ss
xchg
addr16
push
jl
jp
sub
movsl
jbe,pn
fwait
add
push
les
repnz
in
jp
icebp
cmc
pusha
enter
mov
into
pop
push
repz
inc
movb
mov
jo
popa
lret
jecxz
or
aam
cli
sbb
cs
mov
adc
outsb
or
or
jg
xor
outsb
inc
lea
or
pop
or
scas
and
mov
lret
mov
lcall
test
xchg
dec
enter
inc
cmp
lods
sbb
jecxz
repz
pusha
rol
rclb
xor
inc
fs
mov
negl
neg
mov
push
adc
sarl
outsb
push
dec
stos
cmp
xchg
pop
loop
mov
adc
pop
pop
sbb
jmp
cmc
push
loop
mov
fwait
sbb
mov
pusha
lret
xor
inc
std
push
push
fildll
mov
push
sar
sbb
jmp
adc
outsl
lret
in
loope
mov
lret
push
lcall
insl
sub
dec
test
lret
push
mov
outsb
bnd
sub
stc
lock
ss
ror
sbb
cmp
minps
sbb
fldz
push
test
outsb
inc
repnz
or
fcoml
lods
dec
sbb
inc
sbb
les
jmp
pop
xchg
or
enter
pop
xchg
aas
pop
fistpll
xchg
lret
adc
inc
jne
gs
and
xchg
adc
lods
add
lahf
std
and
sub
mov
data16
mov
pop
sbb
mov
int3
cmc
push
clc
stos
out
bound
loop
aas
mov
mov
mov
jp
xchg
push
mov
dec
or
jne
cmpsl
sbb
test
mov
sti
out
fldcw
loop
xchg
push
loopne
popf
fstl
pop
cli
mov
push
sbb
xchg
cs
inc
push
fs
clc
sub
int3
inc
cltd
push
mov
mov
ret
mov
lods
dec
mov
sbb
cld
jmp
out
mov
adc
inc
lret
aaa
sbb
sarl
inc
lds
gs
mov
push
cmp
mull
lods
and
test
adc
data16
xor
mov
add
mov
sbb
adcb
and
lods
test
lcall
ret
int
and
outsb
adc
inc
shr
pop
out
cmp
add
mov
inc
and
jne
in
gs
push
clc
cmp
ficompl
pusha
sahf
inc
outsl
inc
jbe
lcall
aam
and
movsl
out
add
adc
sbb
sub
mov
mov
cmp
push
fwait
adc
pushf
les
addr16
out
popf
movsl
dec
add
fiadds
out
in
mov
faddl
jle
push
jne
add
mov
push
dec
int3
dec
test
add
hlt
sbb
sbb
pop
jno
das
sub
inc
adc
sub
lahf
xor
jno
dec
cmp
lods
lods
adc
mov
and
add
mov
cmp
in
icebp
jmp
cwtl
xor
leave
pop
nop
cmp
test
gs
sub
mov
jle
jge
inc
push
xor
dec
not
in
divl
lods
arpl
xor
lods
or
rcrb
sbb
xor
hlt
xlat
mov
jnp
iret
fwait
xchg
lcall
jb
pop
imul
and
stos
test
int3
bnd
mov
jl,pt
mov
xchg
adcb
loopne
jbe
mov
mov
fucomp
stc
pop
push
jle
jmp
and
imul
gs
xchg
sbb
daa
shlb
pop
pop
enter
fs
je
inc
clc
bound
mov
fimuls
or
push
test
out
jbe
sbb
popf
ret
test
hlt
push
aas
test
mov
push
fs
cmc
cli
rorl
fistpll
xlat
push
jnp
mov
cs
insl
jge
lcall
fmuls
xlat
adc
push
repz
sub
add
fwait
outsb
mov
and
lock
sbb
out
sub
mov
mov
pop
cltd
js
sbb
jg
mov
sbb
test
mov
cmp
push
mov
add
sub
fstps
data16
cmp
push
and
jbe
loop
cmp
pop
out
push
jnp
adc
sub
mov
xchg
out
rorl
in
dec
aaa
sahf
lock
xlat
jp
jmp
hlt
push
hlt
lods
je
jnp
negb
adc
lret
hlt
rcll
dec
push
push
hlt
roll
add
mov
out
pop
push
cmp
xor
sbb
mov
push
add
mov
xchg
lea
scas
imul
loope
es
pop
mov
push
jmp
xchg
xor
jle
sub
leave
inc
pop
or
stc
fldcw
cmp
push
aam
sbb
into
mov
dec
fsubl
sbb
xor
insl
mov
cmp
xor
push
in
enter
les
test
inc
dec
mov
jecxz
adc
xor
dec
rolb
lods
test
xor
sub
testb
cmpsb
mov
push
xor
iretw
stc
dec
lods
lods
xor
jp
mov
stc
jge
and
pop
xchg
mov
daa
adc
ds
dec
push
xchg
int
sbb
push
js
fdivrs
push
mov
leave
add
add
mov
add
add
ret
cmpsb
xchg
lds
sbb
aad
inc
mov
or
fldl
shrb
dec
add
xchg
ja
adc
push
negb
dec
leavew
cli
repz
test
data16
lcall
iret
arpl
pop
mov
xor
cmpsb
movb
int3
fistpll
icebp
xchg
outsl
mov
jb
fisttpll
std
lods
mov
outsl
xchg
pop
int3
aaa
fwait
xor
hlt
sarb
pop
fnsave
push
negl
out
arpl
push
xor
loopne
sub
outsl
xor
out
pop
out
adc
or
loopne
add
push
call
enter
inc
mov
xor
loopne
jne
cmp
ret
dec
loopne
and
cmp
pop
sbb
jmp
mov
sub
icebp
sub
insl
adc
in
add
mov
mov
sub
inc
dec
cmc
or
cmc
sbb
popf
mov
pop
cmp
mov
push
sbb
xlat
jp
ror
dec
insb
arpl
pop
scas
cmp
retw
lock
jne
out
push
loop
popa
hlt
sahf
test
ljmp
mov
xchg
mov
jl
test
sbb
xchg
mov
adc
push
pop
pop
inc
push
int3
mov
adc
fisttpl
mov
pop
jecxz
jae
daa
data16
mov
pop
adc
rolb
subb
negb
hlt
sbb
sub
jmp
xchg
stos
xchg
repz
xor
int3
dec
xchg
ss
dec
ss
aad
imul
and
or
orb
iret
cmp
loopne
fcmovnb
add
mov
mov
stos
mov
out
insb
call
push
stc
push
or
cmp
cmp
mov
int
subb
lea
add
mov
icebp
inc
imul
inc
adc
dec
sbb
int
cmp
mov
in
lahf
jo
pop
mov
repnz
adc
push
adc
add
pop
mov
cmpsl
xchg
inc
xchg
pop
cmp
and
jbe
pop
stos
sub
test
push
int
dec
dec
sub
lds
mov
rcrl
loope
cmp
xchg
sub
mov
sub
leave
mov
fidivs
scas
das
gs
xlat
ret
xchg
lods
mov
faddl
sbb
jnp
das
lret
push
dec
pushf
mov
outsb
xor
pop
or
adc
push
fisttpl
fidivl
test
fistps
and
cmp
out
loopne
test
jp
scas
ja
mov
push
icebp
movlps
sbb
gs
insl
adc
aam
pop
repnz
loop
pop
push
adc
std
or
shll
mov
jae
xor
adc
jmp
pop
mov
andb
andl
sub
mov
dec
sbb
fldt
arpl
int3
lock
or
sbb
int3
cld
ret
jg
pop
ljmp
mov
xchg
sbb
out
push
push
push
call
popa
loop
adc
shll
xchg
push
aaa
mov
stos
imul
xchg
test
ret
cld
push
mov
stos
jge
test
xchg
out
jecxz
or
sbb
popa
push
push
stos
arpl
xchg
pop
aas
sub
aas
insb
daa
or
loope
dec
and
movsl
xor
jg
fsubrs
js
mov
aas
lahf
lea
lock
mov
pop
dec
mov
es
lds
loopne
pushf
mov
jne
enter
es
imul
ljmp
jae
mov
lret
lret
imul
pop
mov
inc
jmp
or
xchg
mov
sub
jge
cmpsb
bnd
aas
mov
and
es
push
out
sarl
pop
je
adc
mov
loope
jne
stos
push
push
pushf
add
imulb
xorl
fs
int3
cmp
add
hlt
mov
inc
sub
and
cltd
fldl
or
fnstcw
add
or
xor
neg
jns
test
lahf
cli
and
push
adc
lods
or
fs
das
pop
mov
and
inc
push
fstpt
ret
gs
popf
clc
iret
cli
leave
in
lcall
sub
mov
cltd
sub
test
movb
pushf
addr16
in
xor
rcll
push
mov
cmc
jns
mov
adc
and
adc
stos
call
std
and
call
sub
mov
dec
mov
mov
adc
cmp
int3
xor
adc
push
jae
mov
fbstp
lcall
negl
sub
idivl
sbb
sub
lcall
aas
mov
push
dec
icebp
cmc
xor
push
ret
cmp
into
sti
sbb
lret
loope
xlat
fwait
and
scas
cmpsl
aas
inc
mov
jnp
jmp
or
mov
jbe
fucomip
test
dec
or
rclb
jnp
pop
aad
sbb
test
dec
cmpb
push
pop
popa
or
xchg
xor
adc
cmc
mov
addr16
xchg
or
into
rcll
cmpsb
inc
mov
sub
in
sub
fsts
mov
icebp
lea
jno
xchg
rcr
callw
enter
sub
mov
call
inc
repnz
jp
xor
jae
jno
aad
xchg
mov
js
das
std
or
pushl
jbe
dec
lea
xchg
pop
fnstenv
mov
and
insl
cmc
mov
adc
out
adc
cld
es
fisubl
jg
jne
xor
shr
sub
jno
imul
dec
fildl
cs
jecxz
cmp
test
jns
fidivrl
xchg
adcl
mov
lcall
mov
adc
ljmp
sub
sub
xlat
xor
int
dec
xchg
stos
mov
js
aaa
das
sub
sub
add
es
cmp
es
xchg
outsb
rcrl
mov
in
jae
push
inc
in
pop
add
push
es
cld
aaa
dec
add
sbb
pop
aaa
bound
push
jl
cwtl
or
dec
push
arpl
dec
adc
shl
and
sbb
xor
faddl
sbb
xor
mov
outsb
dec
insl
and
and
out
push
fildl
ret
js
jno
mov
add
mov
shll
mov
int
mov
dec
add
rcl
test
mov
jo
mov
test
add
mov
adc
scas
call
cmp
cld
and
jecxz
xchg
mov
pushf
mov
addb
pop
imul
xor
mov
out
cltd
push
push
cmp
insb
fimull
icebp
cmp
sbb
in
pop
xchg
cmp
divl
int
rol
and
mov
in
inc
inc
aad
sub
jp
pop
pop
insb
icebp
lret
addr16
and
xchg
sub
in
and
xor
mov
mulb
and
fwait
pop
repnz
test
sub
std
mov
mov
pop
cmp
sbbl
popa
shlb
gs
cmp
pusha
hlt
inc
fdiv
loopne
pop
adc
mov
daa
in
outsb
lret
inc
sbb
das
shll
cmpb
cli
es
shll
adc
je
pop
push
dec
dec
xchg
test
dec
pop
adc
mov
mov
adc
push
sub
mov
jno
sbb
xor
js
sbb
and
or
mov
lret
cmpsl
push
sahf
xor
lods
dec
push
mov
loopne
lcall
shlb
fisttpl
pop
lahf
mov
push
push
ss
stc
xor
lods
mov
xor
clc
nop
out
cltd
popf
mov
sbbl
addb
call
cmpsl
popa
pop
sub
push
ret
test
jge
hlt
loope
cli
or
or
xchg
mov
aas
and
sarl
mov
and
mov
data16
mov
mov
jns
push
jae
mov
or
cwtl
repz
imull
pop
aam
stos
xor
insb
add
inc
daa
rclb
loop
loopne
rorl
add
lret
sahf
mov
xor
ret
pop
cmp
ljmp
add
jae
stos
fidivl
int
inc
pop
dec
aaa
jno
test
jle
sahf
inc
mov
and
fwait
nop
scas
push
xchg
sbb
test
iret
cmp
pop
loopne
adc
xlat
dec
adc
stc
fdiv
cli
loopne
inc
mov
sahf
aam
sbb
aad
mov
push
jbe
leave
inc
mov
mov
push
js
inc
popa
inc
sbb
sahf
pop
dec
movsl
mov
mov
cmp
sahf
ficoml
xchg
mov
test
and
or
test
xor
mov
cmp
jbe
pop
mov
outsl
leave
jns
movsl
aam
rorb
iret
or
fisttpl
pushf
xor
in
in
out
mov
out
shlb
mov
mov
out
cmpsl
sti
dec
out
lcall
inc
add
push
and
pop
inc
decl
gs
rcl
jne
std
icebp
jecxz
jecxz
clc
inc
inc
cmp
sub
xor
shl
sub
bound
loope
out
int
mov
push
adc
adc
hlt
jmp
std
xchg
clc
in
scas
mov
int3
call
test
popa
jl
mov
cs
cli
in
lds
clc
sbb
or
rorb
divl
mov
mov
inc
xor
adc
and
aam
and
pushf
cmpsb
dec
ja
jle
or
adc
mov
inc
addr16
pop
je
push
cwtl
inc
pop
mov
or
fsubs
lret
xor
les
out
jmp
push
xchg
dec
adc
cmp
test
les
test
out
call
xor
sbb
stos
cmp
icebp
imul
pusha
push
popf
or
fdivr
sti
cmc
xor
pop
fs
and
xchg
mov
fnstenv
jno
jge
cmp
inc
call
and
out
pushf
inc
xor
pop
test
shrb
inc
xchg
cmp
add
push
xor
pop
adc
scas
mov
lahf
mov
mov
push
outsl
mov
cwtl
pop
xchg
out
mov
lock
int3
das
add
push
sbb
movsl
mov
add
push
sub
jecxz
inc
jo
xor
mov
push
xor
lahf
push
inc
int3
sbb
das
xchg
inc
sbb
sbb
cmpsl
hlt
mov
mov
out
mov
push
icebp
orb
pop
mov
push
lahf
or
pusha
loop
adc
inc
add
fcoms
inc
pop
int
orb
nop
ds
mov
adc
int
sti
fnstcw
sbb
mov
sbb
fs
sbb
mov
cmp
pushf
mov
ret
lods
inc
or
movsb
test
loop
aaa
xchg
pushf
cmpsb
popf
and
cmpsb
and
inc
inc
fisubrl
xorb
in
jle
js
movsl
fistps
loopne
inc
aad
jmp
inc
jnp
outsb
mov
and
jae
pusha
inc
fldpi
add
rcrb
push
push
push
and
push
xchg
ja
add
add
sbb
clc
push
jp
addr16
xchg
adc
rcrb
sub
shlb
and
pop
movsl
mov
dec
in
lea
pop
push
push
xchg
or
jmp
orb
inc
inc
mov
out
popa
mov
mov
mov
cmp
test
shll
into
and
and
mov
leave
cmp
mov
notb
xchg
sbb
mov
popf
popa
sbb
fldt
push
mov
or
sub
mov
leave
jb
stc
sub
pop
xchg
idivb
mov
cmc
jnp
jnp
std
push
pop
ret
insb
xor
into
pop
enter
pusha
aaa
mov
stc
mov
mov
in
pop
movsl
or
call
in
dec
cmpsl
sbbl
jp
enter
push
fdivl
js
fldt
cmpsl
aaa
and
inc
xchg
mov
jno
sar
data16
sbb
arpl
sub
jno
fwait
mov
ret
cmpb
lds
pop
ret
push
dec
add
mov
mov
dec
movsb
notl
inc
stos
jb
test
js
cmp
inc
add
mov
scas
jne
mov
out
rcrb
or
or
inc
xchg
mov
fistps
pop
adc
stc
lret
js
xor
std
jg
pop
arpl
xchg
mov
jg
dec
jae
xchg
es
test
mov
adc
lods
pop
xchg
mov
jecxz
sub
inc
adc
xchg
icebp
dec
fidivl
aas
xchg
xor
out
test
adc
jbe
cmp
sbb
push
rolb
jp
or
jno
lea
in
dec
int3
fstps
daa
xchg
cwtl
lret
mov
and
mov
sbb
test
cmc
adc
shlb
stc
cwtl
jecxz
ds
ret
cli
jb
fistpll
jno
jmp
mov
cmp
inc
cmpsl
call
dec
arpl
ds
mov
cmovle
pop
fwait
iret
inc
pop
cmp
mov
pop
and
popl
mov
imul
ja
inc
jae
test
xchg
sarl
mov
and
or
add
ret
aaa
test
mov
imulb
fisttpll
inc
aaa
aam
xchg
les
stc
push
je
push
fbstp
push
scas
outsl
mov
pop
in
cmp
mov
sar
and
lret
push
jecxz
mov
test
popfw
xor
jnp
incl
sbbl
dec
dec
push
push
push
ret
mov
dec
jns
pop
pop
push
gs
int3
iret
xchg
inc
fcomi
movsb
outsb
icebp
adc
xor
push
jae
in
in
mov
fwait
pop
inc
cmp
aad
out
fnstenv
xchg
iret
mov
imulb
lret
inc
int
pushl
push
sbb
sbb
push
sbb
adc
andl
jno
xor
int
outsl
in
mov
and
sbbl
mov
arpl
movntps
std
push
cmp
dec
sbb
cmpb
and
call
xor
and
sahf
xor
int3
jno
rcrl
inc
push
mov
adc
sub
inc
lcall
sarl
shrb
subb
jo
iret
lret
sub
inc
clc
bound
out
inc
cmpsb
adc
xor
imul
xchg
icebp
pop
into
dec
adcb
inc
or
inc
xchg
or
sbb
hlt
cs
je
or
push
jmp
ja
fwait
xor
negb
mov
inc
mov
outsb
loopne
mov
ret
aas
mov
mov
ljmp
rcrl
or
sbb
inc
sti
test
scas
or
xchg
jne
je
jle
inc
mov
mov
inc
stos
cmp
mov
mov
or
dec
fdivs
insb
icebp
cld
mov
sbb
jle
int3
in
scas
xchg
push
nop
adcb
mov
in
pop
adc
pop
jge
mov
pop
aam
sbb
cmp
mov
test
mov
fimuls
xchg
push
movsl
xchg
mov
xchg
jb
sub
jg
es
add
iret
pop
push
inc
dec
mov
daa
cmp
out
pop
stos
mov
jecxz
mov
jg
sub
lahf
ds
in
aas
in
and
ss
xchg
fistps
popf
test
lods
pop
jge
or
loopne
jae
popa
cli
mov
xchg
xchg
mov
push
sub
push
inc
pop
mov
gs
xor
imul
lods
ds
pop
cmp
jbe
xor
push
stos
sbb
int
out
pop
and
sahf
mov
xlat
inc
sub
dec
lret
sub
sub
daa
and
xchg
jns
adc
dec
add
aad
mov
cmp
aas
insl
stc
mov
mov
jae
cltd
jle
fwait
lcall
mov
pop
dec
jge
out
push
fists
in
lock
adc
rcrl
xor
fnsave
pop
repz
adc
cli
sub
stc
fwait
incl
inc
fldt
sbb
repnz
into
popa
inc
sbb
in
add
js
xorl
sbb
mov
inc
jg
and
or
insl
je
rcrb
sub
test
pop
lods
cmpsl
sub
inc
cmc
and
dec
sub
and
out
xlat
add
pop
fadd
lods
push
jns
and
mov
insb
xchg
jmp
cmpsl
bound
incl
cmp
dec
adc
fyl2xp1
sub
addr16
inc
in
mov
cmp
enter
or
lds
fwait
leave
push
push
xchg
xchg
clc
les
pop
repz
inc
push
pop
mov
cs
push
add
jbe
mov
cmp
add
inc
hlt
xchg
push
dec
and
les
dec
sbbl
xorb
mov
or
fadd
xor
cmp
dec
in
stos
arpl
sbb
scas
sbbl
adc
inc
mov
andl
pop
dec
xchg
aad
addb
shlb
sbb
sti
mov
mov
xor
sub
pop
daa
dec
push
iret
jp
fldenv
cltd
pop
roll
sub
leave
mov
sar
nop
mov
mov
inc
std
jnp
js
mov
cmpsl
sbb
mov
dec
mov
int
pop
hlt
lahf
jl
sarb
mov
int
push
int3
cld
popl
and
jg
jge
popa
repz
jmp
jle
shr
mov
dec
jno
pop
xchg
pop
adc
jl
ret
adc
sub
xor
inc
and
dec
mov
ljmp
push
add
pop
jge
lcall
push
shr
fcompl
pop
xchg
mov
sarl
push
popa
sbbb
pop
pop
ret
mov
movsl
inc
repnz
jecxz
mov
mov
daa
loope
scas
test
lock
and
adcb
mov
push
inc
daa
sbbl
cs
dec
mov
dec
jo
adc
shll
out
rcrb
push
lods
mov
push
ds
or
aas
stos
fldcw
clc
call
outsb
or
mov
into
sub
jno
cli
mov
imul
pop
sub
sbb
inc
mov
mov
cli
in
xchg
out
out
bound
stos
orb
xchg
mov
adc
loopne
dec
mov
mov
fidivrl
out
dec
mov
insl
jge
mov
dec
xorb
leave
popa
ds
ficompl
or
es
cmp
xchg
cmp
loope
sarb
in
je
mov
mov
cmp
jl
cltd
and
lret
cmp
or
std
aad
and
fsubrs
dec
pop
lret
fchs
mov
push
cmpsb
test
shll
ss
addr16
sarl
xchg
jge
movsb
jo
mov
inc
lds
fnstcw
push
jg
mov
mov
add
mov
arpl
out
clc
lcall
adc
mov
les
cmc
inc
mov
in
movsl
xchg
dec
cwtl
ds
lods
leave
call
test
push
ljmp
add
mov
inc
bound
lret
das
sbb
outsb
xor
in
enter
sahf
mov
mov
xchg
add
ret
mov
push
fsubrs
sbb
adc
add
lods
lret
adc
mov
adc
fs
sbb
mov
and
push
push
or
jb
aad
xchg
imul
pusha
rol
cli
dec
lcall
mov
push
or
lahf
sbb
jne
leave
add
sbb
cmp
outsb
test
testl
in
mov
mov
dec
shlb
mov
out
flds
jmp
popa
lds
roll
inc
xor
xchg
inc
gs
fmul
outsb
arpl
pop
shll
sbb
nop
push
lcall
pop
dec
clc
and
pop
push
int3
call
pop
stc
mov
sahf
fldenv
dec
sbb
lahf
mov
in
arpl
stos
mov
jno
test
xchg
clc
xor
push
jnp
and
sbb
repz
jae
jo
mov
mov
loop
mov
stc
popf
cmp
push
les
scas
adc
leave
sarb
bound
jno
test
sub
mov
xor
jo
mov
test
jno
cmp
inc
mov
out
neg
mov
cmpsb
pop
cmp
and
xchg
push
mov
rolb
fstl
pop
lods
repz
sahf
dec
subl
in
inc
pop
lcall
test
popa
gs
mov
pushf
mov
cltd
dec
rolb
cmpsl
xchg
pop
adc
test
cmp
pop
lds
or
xor
subl
cmp
clc
dec
xchg
div
fsub
inc
jae
inc
call
iret
dec
push
leave
test
cli
cltd
lcall
xchg
mov
xchg
in
out
in
xchg
xchg
mov
adc
cmp
pop
xchg
pop
dec
xor
adc
or
xchg
jle
cmc
jp
inc
push
cmp
sbb
mov
js
into
daa
adc
gs
xchg
jno
ret
ljmp
cmpsb
ljmp
shlb
or
hlt
or
loopne
fnstcw
leave
cmp
rcr
mov
pop
btc
add
sahf
lcall
cmp
lret
dec
push
push
orl
out
adc
dec
mov
fwait
pop
pop
lds
insb
mov
ficomps
dec
in
mov
scas
xchg
push
xchg
dec
in
loope
jns
addr16
mov
mov
push
dec
cmp
insb
xchg
xlat
in
mov
push
and
xchg
fildl
mov
pop
jp
mov
or
flds
dec
divb
mov
inc
jmp
sahf
mov
or
fistps
lret
mov
es
scas
sub
push
into
leave
xchg
leave
into
movsb
fcmovb
push
xchg
in
jle
cmp
clc
inc
cmp
rcrl
das
repnz
sub
and
adc
cmp
push
xchg
mov
rorl
popa
adc
pop
js
notl
pop
dec
adc
mov
lcall
mov
xchg
leave
jecxz
dec
jo
loope
mov
push
ja
adc
adc
movsl
std
sub
jnp
decb
je
ret
bound
jecxz
dec
jle
pusha
push
sbb
es
xor
call
ret
jle
xchg
or
sub
gs
add
inc
sub
fstpt
lea
jb
add
xor
xor
push
push
pop
cs
scas
movsl
jns
adc
lret
arpl
push
or
jecxz
cmpsb
js
pop
mov
mov
xor
lret
dec
stos
push
mov
popf
cli
mov
mov
xlat
mov
addl
mov
leave
cmp
xor
jae
jno
pop
inc
dec
pop
cmc
shl
xchg
cmp
shlb
imul
arpl
or
mov
addl
sub
adc
mov
mov
ja
push
aad
test
bound
push
lcall
mov
adc
fcomps
dec
jecxz
es
sbb
js
pop
fmuls
xor
lds
adc
push
outsb
xchg
loope
inc
lret
andl
cmp
div
shlb
xlat
aad
pop
push
hlt
mov
sub
xchg
pop
test
sub
pop
add
fs
jle
mov
xor
mov
loope
aas
fs
mov
cmp
inc
daa
mov
mov
out
mov
xchg
mov
pop
xchg
faddl
jae
dec
add
je
lahf
push
adc
lock
addr16
fbld
xchg
mov
ljmp
inc
ret
cmpsb
sub
fidivs
test
andl
cmp
push
dec
idivl
push
cmp
idivl
movsl
es
and
sbb
cmpsl
call
mov
fwait
js
mov
mov
fs
adc
or
adc
hlt
jle
pop
sbb
mull
or
frstor
gs
inc
pop
push
out
sti
mov
cmp
dec
xchg
jp
ficoml
mov
jl
test
nop
ficompl
dec
test
in
jae
jp
insb
cmpsb
aas
loopne
cltd
shrb
pop
mov
and
adc
icebp
mov
push
adc
js
sti
ljmp
dec
jg
dec
pop
andl
call
out
cli
leave
mov
xchg
out
outsl
sbb
loope
jl
test
imul
sub
lock
push
out
test
xchg
fucom
arpl
call
add
test
add
icebp
outsb
push
cmpsl
rclb
imul
es
stc
jnp
jae
loop
inc
jno
push
vpcmpgtd
jo
dec
into
mov
lret
jp
idivl
inc
std
loopew
cwtl
fisubl
in
lret
repnz
ret
sbb
push
dec
test
xor
cmpsl
sub
or
dec
sbb
xorb
push
scas
add
sub
jle
jae
shll
xor
dec
mulb
mov
outsl
cmp
dec
pushf
jo
out
mov
mov
dec
pop
loope
decb
faddl
mov
jg
push
or
arpl
xchg
push
mov
sbb
je
test
ds
mov
mov
mov
fldt
adc
sarb
mov
lret
jns
gs
inc
pushf
inc
jecxz
ror
sbb
daa
insb
aam
roll
js
mov
adc
and
lahf
outsl
cli
pusha
and
fdivs
and
fwait
sbb
pop
xchg
aam
xchg
ret
in
push
rcr
push
sbbl
shrl
mov
fcomps
in
push
lock
std
or
sbb
aam
pop
movsb
sbb
leave
adc
xor
push
xor
adc
repnz
scas
mov
inc
ljmp
rcrb
adc
pop
push
jo
cmp
insl
and
mov
std
dec
mov
stos
mov
mov
and
rcl
insb
movsb
insl
mov
notl
pusha
mov
add
cmpsb
popa
xchg
aaa
sub
mov
shlb
push
push
lea
in
cmp
push
loopne
sahf
imul
jbe
xchg
jmp
sbb
pusha
jge
jl
aas
inc
test
jns
jle
mov
addr16
push
mov
jge
cmpsl
add
dec
clc
push
ja
xchg
fildll
movsb
sub
aas
pop
lret
lret
jno
jmp
js
push
fisubl
push
stos
xor
leave
daa
mov
dec
loope
jo
jge
jecxz
sti
add
jmp
stos
add
test
jb
fwait
mov
push
mov
sbb
xchg
mov
xor
mov
push
jno
adc
xadd
add
sti
dec
and
xchg
js
cmp
push
fcompl
data16
inc
rclb
jmp
ja
imulb
in
pop
or
inc
scas
scas
repz
add
and
sbb
and
xor
call
lret
add
pop
cli
adc
cmpsb
rcrb
shrb
lret
dec
icebp
lcall
pop
pop
sarl
mov
mov
adc
cmc
jl
outsb
or
fwait
repz
lcall
fwait
sbb
mov
shr
mov
sbb
adc
into
and
popf
fdivrs
iret
mov
mov
mov
or
imulb
pop
sbb
mov
stos
ljmp
out
test
add
cmc
bound
scas
outsb
ficompl
or
test
inc
push
arpl
ror
jg
xchg
adc
adc
push
push
insb
addb
rcrb
cmp
aam
lea
sub
or
addr16
jnp
fwait
or
rcrb
sbb
push
xchg
mov
mov
int
sahf
bound
sti
in
les
mov
push
jmp
pop
ret
cs
xchg
pop
sbb
fists
xor
jmp
add
xor
sbb
cld
lret
insb
and
roll
add
pop
popa
xlat
push
push
sub
mov
mov
leave
sbb
add
mov
lret
dec
pop
mov
or
mov
adcl
imul
fisubrs
lods
in
push
shl
dec
add
push
je
add
lock
fisttps
inc
inc
call
inc
push
add
sti
mov
ljmp
jle
and
push
aam
xchg
aam
push
imul
call
adc
mov
sarb
popa
test
jl
push
outsb
mov
sbb
outsl
mov
lcall
jne
adc
daa
push
add
lret
test
gs
insb
icebp
and
in
dec
ret
and
repz
and
cltd
inc
and
pop
lahf
xor
jp
mov
mov
pop
and
bound
sub
sarb
movsl
or
xchg
jnp
ss
mov
es
sarl
lcall
fprem1
and
out
out
push
ficoml
push
and
xchg
arpl
hlt
push
dec
cmpsl
lret
or
xor
fistps
sbb
push
add
cmp
and
pusha
sub
and
xchg
dec
xor
fcoml
or
xchg
pop
sub
popf
icebp
cmp
lods
fdivs
lods
loop
cmp
mov
push
aaa
push
popf
fldt
ss
icebp
xchg
cmp
cmp
neg
xor
enter
loopne,pt
mov
jne
xchg
mov
jbe
dec
jno
in
mov
sbb
mov
ret
dec
pop
bound
cmpsb
dec
jp
pop
cmp
xor
adc
test
cmp
mov
xor
jns
xchg
outsb
cwtl
out
fisubrs
out
xchg
es
insl
stos
data16
sbb
movsb
inc
mov
fisttpl
addr16
es
popf
jnp
push
mov
out
mov
xchg
in
dec
cmc
pshufw
push
lods
inc
push
and
mov
lahf
pop
cmp
mov
inc
dec
sahf
xchg
mov
loope
les
pop
jno
outsl
push
je
mov
fwait
call
pop
dec
rorl
cmp
jg
xchg
sbb
out
lea
jae
pop
lock
rclb
in
push
addr16
add
cmp
loope
cmp
sti
outsl
nopl
rcl
stos
jb
hlt
test
pop
loop
xchg
jge
jle
std
pop
cmp
fnstcw
add
movsb
add
test
mov
mov
mov
push
mov
fidivs
pop
xchg
lock
inc
scas
aaa
hlt
or
inc
jmp
inc
cmp
imul
jle
and
sti
and
pop
hlt
xor
mov
lcall
cmp
sbb
aaa
lock
shr
div
cs
fnstcw
ss
dec
mov
je
popl
fisttpll
das
or
jmp
cmp
mov
add
dec
cmpl
sbb
clc
xchg
xlat
out
sub
cmp
fwait
incl
adc
aas
jge
mov
adc
std
cltd
cmc
shr
bound
roll
aaa
jmp
testl
movl
mov
loopne
cmp
mov
cmpsl
in
push
mov
in
push
xchg
xor
push
xchg
push
outsb
outsb
addr16
and
push
imul
mov
xor
sbb
xor
into
sbb
repnz
in
mov
cmp
ds
fiaddl
push
imul
lret
dec
daa
mov
adc
sbb
dec
mov
shufps
sbb
cld
adc
or
jmp
scas
dec
cmp
sbb
clc
div
ljmp
push
bound
sub
and
mov
rorb
mov
popf
sahf
into
orl
imul
xchg
add
pop
push
fwait
pop
mov
inc
or
adc
sub
jo
pop
cmp
sti
and
mov
jnp
push
dec
insb
and
mov
mov
iret
mov
push
into
aam
and
js
xor
lods
in
repnz
mov
sbb
dec
sub
das
pop
stos
stos
ja
mov
mov
test
sbb
in
cwtl
fs
jbe
xchg
cmp
or
sar
jmp
fbld
int3
int3
imul
inc
and
push
push
cmp
inc
int3
outsl
pop
inc
xlat
jge
or
shll
adc
mov
andl
fwait
push
in
add
lret
cs
sub
mov
and
daa
dec
dec
xchg
sbb
cmpsb
es
sub
leave
stc
repz
push
jne
dec
mov
push
inc
jp
sti
loope
lock
rcll
xchg
and
movsl
call
mov
jmp
ret
lret
stos
jbe
ficoml
sbb
fistpl
daa
jbe
push
pop
jg
shrl
sub
mov
shl
popf
dec
jo
in
jle
xor
sub
not
test
pop
sub
and
loop
mov
push
mov
lds
cmp
lahf
lods
inc
lret
xchg
jmp
mov
sbb
cmp
xor
xchg
cltd
mov
out
mov
mov
mov
fs
ss
fildl
sbb
or
repz
js
clc
lret
sub
int
add
xchg
jl
add
sbb
push
es
mov
pop
lcall
lods
adc
movsl
lret
dec
sbb
dec
out
and
xchg
and
pop
aam
aad
bound
test
and
xchg
and
stc
mov
jge
std
enter
lea
aad
inc
add
mov
cmp
mov
cltd
mov
ds
rclb
mov
fldcw
add
add
mov
ja
lea
pop
jbe
adcl
and
mov
in
push
push
adc
das
cli
push
mov
push
aam
cltd
lods
mov
mov
mov
add
std
sbbb
sbb
sbb
pop
std
push
lds
mov
mov
aam
cld
fsubl
ret
pop
or
and
push
cs
adcl
pop
dec
sub
pop
lds
lods
mov
into
add
jp
push
push
add
sub
dec
mov
xchg
adc
pop
cmp
and
adc
push
mov
xchg
jmp
dec
es
pusha
push
cmp
shl
xor
inc
xchg
outsb
sub
and
subl
icebp
into
fldenv
push
int
mov
je
add
repz
push
lcall
jge
xchg
enter
insl
les
jno
mov
push
jmp
insb
mov
and
pop
out
mov
loop
cltd
ficomps
ret
pop
out
imul
push
ljmp
ret
adc
dec
pop
xchg
xor
mov
jmp
out
push
ljmp
nop
adc
sarl
lock
ret
sbb
adc
pop
mov
movsl
aaa
data16
dec
shrb
rclb
cmp
ljmp
inc
xchg
lods
div
rcll
shrb
mov
xlat
test
mov
cmp
jecxz
push
pop
ret
ret
rcrl
ret
adc
lods
sbb
mov
adc
or
push
sbb
stc
xchg
add
in
divb
xor
hlt
adc
fsts
mov
cmpsb
pop
jp
add
xor
mov
xchg
inc
outsb
push
adc
popa
jecxz
lock
cltd
mov
cwtl
mov
lcall
xor
mov
xor
movsb
push
gs
sbb
ljmp
inc
xor
pop
jle
inc
xchg
nop
xchg
pop
inc
mov
fidivrs
xchg
lahf
and
imul
mov
cmp
out
inc
iret
add
xchg
ss
inc
lods
cmp
test
mov
or
ror
daa
sti
sbb
push
ljmp
push
movsl
stc
xchg
enter
dec
dec
xchg
add
jae
data16
int
lods
and
inc
push
inc
in
and
lds
jecxz
out
inc
aam
xor
lea
sahf
arpl
push
and
mov
or
inc
dec
mov
popf
sub
fwait
cmpsb
sarl
popa
mov
clc
scas
add
xchg
in
in
push
gs
outsl
repz
and
mov
test
and
call
test
xchg
mov
or
and
or
ficoms
bound
jl
add
cwtl
mov
dec
inc
sbb
sub
xor
pop
lea
ss
aaa
je
sub
outsl
jle
vminsd
dec
mov
lods
daa
rolb
cltd
pushf
and
cwtl
push
mov
mov
sahf
or
ret
adc
push
test
xor
into
iret
dec
cmp
mov
dec
lea
mov
cmpsb
ret
lret
arpl
adc
fcomps
and
int
xor
stos
ret
and
or
sbb
fistl
aad
cmp
sub
jl
xor
addr16
int
dec
test
scas
cld
cmp
test
adc
jae
and
test
in
cli
stos
inc
pop
pop
jae
mov
ljmp
shlb
or
and
mov
rcrb
pop
pop
testb
adc
mov
repnz
pop
lret
pop
aas
xor
punpckhwd
xchg
cltd
and
push
mov
rcl
lock
shrb
inc
loop
cld
shrb
in
dec
aad
cmpsb
stos
push
xor
add
xor
ds
cmp
push
in
mov
jmp
arpl
ja
pop
mov
cmp
pop
push
insl
test
add
lock
sub
mov
loop
or
lds
push
adc
test
fiaddl
pop
sbb
ss
aam
and
adc
sub
add
sbb
inc
inc
stos
sar
je
pop
jne
mov
or
and
mov
mov
scas
jle
sbb
mov
loopew
push
scas
cmp
ja
pop
rcll
imul
push
lahf
jp
clc
shlb
xchg
jmp
mov
repnz
pusha
cs
mov
lahf
dec
cwtl
jecxz
sub
js
mov
notb
dec
ret
cwtl
inc
add
in
push
imul
and
cltd
test
mov
or
in
cmc
roll
in
pop
pop
lds
stc
sbb
lock
jge
fwait
push
or
scas
inc
fsubr
push
gs
adc
mov
mov
sbb
mov
cmp
outsl
xchg
mov
dec
xchg
dec
ljmp
shrl
mov
testl
scas
aas
sub
in
movsb
sbb
push
pop
bound
push
stc
sarb
mov
andb
movsl
repnz
adc
cmc
inc
pop
inc
inc
mov
in
xchg
out
cmpl
jg
add
fsts
repz
loope,pn
test
out
hlt
ss
cmp
inc
ds
xchg
mov
pop
jl
out
pop
aad
out
xchg
ja
mov
in
rcr
xlat
pop
inc
lahf
aam
xchg
mov
mov
jae
dec
mov
sbb
cld
fsubs
xlat
into
pop
or
in
loop
pop
inc
nop
xor
aas
rorb
mov
insb
nop
out
loop
addr16
gs
scas
lret
cld
es
and
sub
mov
mov
mov
sbb
dec
jecxz
aad
lods
rorl
test
cmp
cld
or
in
adc
jg
pop
jo
insl
xchg
faddl
push
xlat
repnz
jno
sbb
xor
mov
mov
mov
xchg
adc
popf
ret
mov
add
push
or
sahf
pop
sub
adc
add
into
jp
out
xor
mov
sub
stos
sbb
stos
movsl
or
and
jecxz
xor
add
pusha
aas
loopne
mov
enter
dec
xchg
push
fwait
cmp
in
addr16
or
ss
push
in
cmpsb
or
icebp
shlb
jns
jo
leave
xor
in
gs
jge
filds
sub
inc
fisttpl
imul
aam
and
xchg
ret
mov
scas
test
inc
lret
lahf
rolb
jl
xor
mov
and
call
cmp
sbb
inc
ficomps
dec
add
arpl
subb
stos
fildl
fadds
or
inc
push
outsl
sbb
mov
mov
into
mov
mov
fwait
dec
mov
popf
hlt
inc
cli
cmp
inc
mov
movsl
adc
mov
gs
arpl
out
pushl
nop
mov
jmp
sbb
andb
lock
dec
cli
xor
sarb
push
mov
in
jge
and
icebp
jbe
mov
rcll
sar
push
lods
outsl
cld
in
mov
call
ficompl
adc
mov
bound
test
xchg
cltd
add
cwtl
jge
inc
pop
mov
inc
adc
mov
cmpsb
decb
jle
cltd
dec
push
pop
xchg
mov
lods
mov
mov
aam
jge
mov
adc
mov
jg
repz
xchg
jbe
rorl
int3
loopne
inc
adc
in
shr
cmpsb
mov
inc
rcl
test
out
in
xor
jae
sub
xor
fmuls
mov
or
xor
push
cmpb
out
or
push
das
xlat
cmp
pop
mov
stos
das
ret
outsb
push
test
push
inc
push
or
sub
mov
aam
loope
xor
xchg
push
cmc
adcl
lret
in
mov
loope
xchg
clc
push
cmc
in
lock
cs
lret
imull
mov
popf
mov
xchg
push
pop
stos
cmp
fsubrs
movsb
jg
mov
push
xchg
in
push
jne
shll
jne
pop
mov
pop
jecxz
push
out
jb
xorb
shll
mov
ja
pop
cwtl
ljmp
stc
sub
lds
inc
in
gs
clc
dec
jecxz
add
lahf
stos
xchg
je
inc
cmc
cmpb
xchg
pop
sbb
adc
fwait
jle
inc
xchg
sti
xor
push
in
mov
pushf
inc
mov
sahf
push
mov
jp
adc
std
stc
cmp
pop
inc
fwait
push
stos
mov
movsb
fstl
fwait
xor
inc
call
adc
inc
mov
push
mov
stc
mov
es
pop
sbb
xchg
inc
rcl
and
paddd
ds
push
sub
jbe
scas
in
pop
push
outsl
sbbb
pop
and
jno
jbe
repnz
dec
subb
push
xor
inc
jecxz
call
testl
mov
mov
loope
aas
sub
sahf
iret
rcrb
and
xchg
adc
mov
pop
repz
inc
arpl
fwait
cmpsb
clc
mul
adc
sbb
rcl
xchg
adc
mov
ret
das
ret
cmp
push
cmp
sub
stc
lods
add
popf
int3
jmp
mov
sub
or
imul
and
mov
mov
pusha
or
dec
sbb
rorl
mov
outsb
jno
int3
xchg
std
jl
sub
xchg
xchg
sbb
addr16
data16
std
pop
loopne
inc
xchg
aas
push
scas
iret
je
cmp
lret
xchg
jl
lds
loope
jne
inc
xchg
xor
lahf
pop
jae
ss
pop
in
test
adc
aaa
mov
fisubl
mov
js
cmp
inc
xchg
sub
inc
mov
push
or
sbb
cli
sbb
or
inc
or
sub
movsl
enter
dec
movsl
xor
stc
inc
insl
popl
add
add
jb
scas
lods
pop
jnp
enter
fiadds
movsl
mov
mov
inc
xchg
roll
fmull
mov
imul
jnp
sub
xor
insb
mov
and
inc
mov
xor
mov
dec
dec
lods
push
mov
mov
lock
ret
test
inc
mov
lods
push
xor
movsb
cmp
scas
mov
xchg
adc
lret
les
pop
cmp
sahf
imul
jmp
movsb
inc
jge
rcll
jmp
inc
xchg
push
cli
rorb
push
dec
mov
sbb
xlat
stos
cltd
sbb
push
addb
xchg
pop
stos
repz
add
pop
cli
ss
cli
and
xor
sub
dec
popf
mov
fmuls
pop
adc
cmpsl
mov
pop
push
mov
dec
push
fidivrl
lahf
xlat
rcll
aad
adc
stos
adc
loop
sub
cmp
addl
std
add
xor
cmp
add
in
mov
leave
add
xchg
xor
ret
xchg
cld
leave
pusha
add
or
fs
popa
cmc
fsubrp
mov
push
leave
lea
mov
add
sbb
mov
dec
xor
movsl
xlat
and
in
mov
push
lods
push
pop
movsb
stos
add
push
pop
ja
data16
das
fs
push
inc
adc
xchg
nop
xchg
push
js
cltd
mov
mov
rclb
pop
adc
mov
or
cmp
movsl
xor
and
cmpsb
jns
and
push
push
and
dec
enter
inc
inc
popa
and
in
jbe
loope
sbb
sub
or
data16
in
lret
lahf
adc
xchg
mov
stos
aam
dec
cs
mov
push
imul
pop
and
push
xor
push
daa
mov
inc
add
jmp
mov
mov
bound
addr16
int
pop
scas
dec
cmc
ret
rcl
lret
pop
sub
cmp
mov
cmc
push
cwtl
and
inc
clc
daa
xchg
es
cmc
add
xchg
stc
mov
inc
jmp
push
sbb
aad
jmp
and
js
pop
and
cmp
std
lods
xchg
inc
icebp
or
insb
cmpsb
jle
nop
sbb
shr
sbb
inc
inc
dec
mov
pop
mov
dec
pusha
dec
mov
sahf
xor
cwtl
sbb
or
test
sbb
or
jmp
mov
dec
cvtps2pi
cs
loope
xchg
orl
hlt
mov
xor
fwait
cs
jo
sub
loop
mov
stc
outsl
ss
push
dec
testl
dec
or
out
mov
adc
mov
dec
mov
popa
rclb
enter
rclb
add
insl
or
sbb
lock
cwtl
in
fwait
loopne
pusha
cmc
sub
push
pop
inc
fld
xchg
loop
ja
aam
pop
call
jae
xor
or
xor
or
inc
and
orl
std
data16
aad
fsubrl
jp
jno
dec
sahf
sahf
pop
pop
das
xor
sbb
sbb
mov
nop
mov
add
shll
insb
shlb
add
jbe
clc
jle
popa
es
test
jnp
add
fimuls
jo
jecxz
push
dec
andl
pop
or
out
repz
mov
or
mov
aaa
ficompl
sub
fsubrs
pop
mov
orb
hlt
lahf
sti
sub
or
jnp
xchg
lock
mov
sahf
addr16
sub
out
mulb
bound
in
fucomi
push
xchg
xchg
add
dec
into
test
jne
lds
shrl
mov
je
out
test
sub
call
adc
sbb
inc
jnp
mov
adc
loope
push
jecxz
mov
xchg
jmp
pushf
pusha
in
nop
push
mov
mov
cmpsl
das
addr16
and
mov
ret
or
rorb
and
cmpsl
fnsave
xchg
push
hlt
inc
cmc
mov
nop
mov
mov
or
inc
and
lock
lret
lcall
loop
out
lods
ret
mov
xchg
sub
int3
and
mov
fwait
cmp
pop
xor
pop
xor
inc
cmp
into
push
or
add
jge
shl
sub
sub
dec
ret
mov
movsl
push
std
fwait
sub
pushl
lret
inc
test
jle
icebp
faddl
adc
inc
add
xchg
ret
or
stos
sub
pusha
cmc
pushf
outsl
inc
jmp
or
std
push
push
jecxz
xor
or
leave
add
jnp
mul
add
ljmp
sub
xchg
or
stos
jp
sub
xlat
jb
js
pushf
aas
test
mov
loop
push
cltd
jge
bsr
pop
or
mov
cwtl
adc
pop
cltd
pusha
rorb
loope
stc
pop
sub
mov
mov
lods
push
out
int3
pop
xchg
xor
jge,pt
dec
cmpsl
sub
loop
cld
jmp
in
mov
pop
and
int3
xchg
sub
mov
paddsw
repnz
aad
ja
pop
dec
or
jecxz
and
dec
and
dec
stos
and
stc
call
mov
and
negb
push
fadd
add
inc
xchg
shr
data16
clc
subl
inc
mov
fimull
xlat
add
pop
clc
mov
and
out
xchg
icebp
mov
add
push
xor
daa
rolb
lods
mulb
in
sahf
pop
lret
adc
and
arpl
lret
adc
movsl
js
pop
mov
fldl
adc
nop
scas
or
xchg
out
inc
js
xor
in
jmp
push
pop
xchg
and
sbb
xlat
sbb
and
xchg
mov
rdpmc
addl
into
push
cmpsb
xchg
push
dec
nop
sbb
cld
sub
and
cmp
fadd
idivb
pop
cmp
jg
jl
test
mov
xor
iret
lret
lods
push
push
mov
movsl
das
in
icebp
lock
sbb
mov
mov
sub
lods
pushf
mov
enter
jo
add
sub
xchg
cmp
cli
sbb
das
jnp
loopne
out
cmp
dec
or
mov
dec
sub
loop
jle
dec
lret
xchg
jle
inc
cmp
mov
test
loop
pop
gs
aad
mov
jmp
inc
addb
fmuls
sarb
gs
mov
mov
mov
mov
add
mov
imul
push
sub
add
pop
iret
pop
rcrb
lcall
pop
sub
je
scas
fdivs
rcll
mov
loopne
pop
pop
jne
ljmp
sbb
dec
mov
adc
outsb
mov
dec
leave
and
mov
stc
mov
test
ror
or
pop
push
mov
and
ret
push
sarl
dec
xor
stos
mov
pop
clc
xor
arpl
std
jmp
movsb
arpl
pop
data16
xchg
jle
push
mov
push
scas
sub
adc
mov
cmc
fs
cmp
jl
test
or
incl
mov
inc
jge
pop
pop
mov
inc
cmp
subl
sbbb
insl
pop
lods
mov
sbb
bound
cli
jnp
test
out
pop
mov
push
in
push
insb
arpl
dec
pop
sbb
add
addr16
dec
and
and
or
xchg
add
add
adcb
add
mov
pushf
pop
stos
pop
ja
roll
mov
sti
pop
pushf
xchg
js
shll
int3
mov
adc
add
inc
mov
mov
xorl
xor
xchg
xchg
mov
push
and
movsb
das
in
cwtl
test
fxtract
aam
mov
nop
or
mov
frstor
add
fs
xchg
mov
xor
dec
cwtl
movb
out
xor
lahf
jbe
push
push
arpl
outsl
addl
mov
mov
cmc
icebp
inc
jbe
sub
xchg
or
das
and
lret
dec
fstpt
test
and
test
push
xchg
repnz
loope
outsl
bound
adcl
xchg
fsubrs
mov
rcrl
rcll
mov
pop
mov
pop
jne
idivb
insb
out
addb
ss
mov
xchg
divps
mov
pop
test
rolb
movsb
cmpsw
rclb
pop
test
cmc
push
adc
hlt
popf
outsb
les
inc
stos
inc
inc
fdivs
jne
repz
xor
pop
incb
xlat
repz
ja
mov
push
jl
xchg
adc
aaa
adc
cmpsb
subb
and
and
jo
fidivrl
out
pop
adc
int
add
out
loopne
je
inc
mov
jbe
lods
clc
outsl
cmp
pop
out
mov
xchg
movl
push
mov
outsl
push
mov
and
xlat
push
lahf
cmp
ret
inc
inc
stos
fiadds
xor
pop
jl
sbb
movsl
push
sbb
out
aaa
mov
dec
fdivs
pushf
adc
std
jge
dec
cmpl
push
xchg
xchg
nop
data16
mov
sbb
ret
dec
fbstp
scas
mov
mov
cwtl
jmp
scas
rorl
ret
push
and
jb
sbb
test
arpl
push
cwtl
hlt
jmp
lahf
fcmovnu
sub
pop
pop
add
adc
stos
icebp
push
dec
mov
icebp
mov
pushf
push
jl
push
cld
mov
pop
xchg
mov
test
adc
int3
add
aam
into
and
imul
shl
dec
lods
lahf
lret
cmpsb
out
xchg
xchg
jns
mov
xchg
movsl
xchg
jp
push
adc
mov
dec
sbb
arpl
pop
mov
add
sub
popa
clc
loopne
insb
xchg
ret
jecxz
cmpsb
js
jge
fsubrl
rol
sarb
shr
mov
jl
cmp
mov
and
mov
sbb
mov
cmp
cltd
jno
hlt
mov
stos
cmp
mov
dec
adc
jns
push
sub
sub
and
movsb
xor
cmpsl
mov
jnp
add
sbb
hlt
jne
fwait
adc
fucomp
scas
mov
mov
cmp
not
dec
call
and
ja
xchg
mov
jne
jmp
iret
inc
push
aas
out
aas
loopne
cli
cli
pop
push
inc
fistl
sti
aas
sub
sub
jb
aaa
inc
in
push
jo
jae
pop
stc
xchg
xchg
insl
stc
pushf
rorb
popa
adc
aas
out
es
xor
jae
xchg
movsl
mov
fwait
sbb
xchg
jbe
faddl
or
in
inc
cltd
or
or
std
xchg
out
test
xlat
or
fs
rcrl
pushf
mov
inc
lret
adc
adc
imul
xchg
adc
int3
scas
dec
aaa
jne
mov
cltd
adc
mov
ret
mov
inc
and
push
xadd
lcall
sbb
stos
push
lcall
jb,pn
punpckhwd
inc
sub
mov
and
mov
sbb
pop
notl
pop
ss
in
pop
repz
dec
pop
data16
fstpl
rcrl
sbb
or
adc
rcll
mov
repnz
push
push
arpl
pop
xchg
pop
rorb
xor
xchg
inc
fsub
push
dec
cmp
inc
popa
push
orl
and
mov
push
push
rcll
mov
xor
dec
pop
and
sbb
push
int
pop
fdivrs
movsl
sbb
xchg
outsb
inc
pop
inc
int3
js
test
mov
mov
sub
and
or
mov
cmp
lods
les
push
sbb
push
mov
ret
mov
and
movsl
cmp
mov
std
outsb
mov
jmp
ficompl
adc
add
jecxz
jl
mov
mov
mov
jp
add
int
popa
mov
out
ja
mov
add
lret
fisubrl
into
jle
mov
loopne
push
fcoml
insb
addl
inc
pop
xor
out
xchg
fdivr
push
insb
mov
stos
mov
jbe
imul
lret
mov
or
jns
insb
movsl
mov
mov
xor
test
xchg
cltd
loopne
test
outsl
mov
sub
dec
jo
xor
push
mov
mov
dec
push
push
mov
dec
mov
mov
inc
out
pop
jno
in
mov
in
jp
lock
stos
adc
lret
xchg
clc
scas
mov
shlb
shl
cmp
push
push
jg
lods
icebp
fnclex
jmp
sbb
out
sub
adc
call
mov
int
out
addl
fcomp
enter
in
sub
jp
cltd
in
stos
clc
sbb
mov
fildl
ret
add
clc
rcr
lea
mov
pop
outsb
add
xor
xchg
mov
lahf
cs
xchg
mov
dec
sbb
sahf
push
push
mov
aad
outsl
xchg
inc
dec
leave
inc
mov
lahf
mov
bound
inc
jnp
cld
push
aam
xchg
push
mulb
mov
mov
ds
outsl
jecxz
enter
shl
divl
dec
outsl
xchg
rcll
sti
popf
out
xchg
mov
ds
out
jg
inc
cmp
and
pop
push
mov
pop
shll
scas
orb
inc
mov
movsb
lea
push
out
mov
sarl
out
mov
jp
inc
jns
scas
push
lds
mov
lret
lret
dec
vminpd
push
jne
jl
or
mov
cmp
test
into
arpl
cli
sub
cs
cmp
jne
xchg
xchg
out
out
pop
dec
pop
mov
cld
stos
xorl
sbbb
out
adc
jp
adc
fstp
xchg
xor
outsl
idivb
fucom
jle
enter
mov
movsl
lea
lods
int
jl
ljmp
cmp
xor
xor
push
test
daa
out
fdivrp
fsubl
mov
rolb
mov
inc
outsl
stos
sub
mov
push
mov
xchg
jmp
push
or
sub
test
sbb
es
dec
jp
or
popf
push
loope
outsb
loopne
pop
test
adc
and
lods
movsl
test
fs
push
popa
mov
pop
mov
hlt
push
mov
daa
push
cmp
ret
cltd
sub
ret
scas
mov
adc
fisttpll
add
or
lds
popf
popa
jae
mov
cmp
fmul
push
mov
mov
cmp
test
sub
or
test
adcl
movsb
sub
or
sbb
dec
sub
jb
mov
push
fcomps
adc
push
xchg
sub
int
repnz
cmp
loope
sub
sarb
pusha
daa
testl
push
mov
or
and
or
into
add
dec
lods
outsb
xlat
ror
adc
xchg
loop
std
cmp
dec
pavgb
hlt
sbb
ja
mov
push
lret
mov
push
or
rol
pop
mov
jno
jg
scas
pop
mov
rolb
sbb
stos
lret
jmp
ret
pop
les
sbb
test
call
std
lods
out
in
push
sub
andb
cmp
and
inc
mov
hlt
iret
mov
sbb
cmp
decb
mov
mov
push
add
faddp
xor
sbb
fcomi
jae
negb
mov
cmp
add
pop
lods
sahf
into
clc
inc
push
scas
lock
cmp
inc
sbb
pop
sub
add
lcall
stos
xchg
push
or
mov
sti
xchg
cld
call
fucom
xor
sub
mov
sub
mov
xrelease
jno
psubsb
jmp
scas
insb
sarb
fwait
mov
mov
xor
lock
es
and
icebp
sar
mov
imul
int3
add
cltd
or
mov
mov
in
sub
or
hlt
push
sub
pop
test
push
push
or
xlat
and
fwait
popa
sub
leave
push
jl
jle
and
adc
xchg
xor
dec
mov
jno
movsl
out
loopne
xor
sarb
adc
je
mov
cmpsl
or
sub
mov
xchg
decb
aad
mov
fld
mov
loope
add
inc
mov
bound
fistpl
lcall
dec
js
sbb
lea
pop
stos
mov
roll
cmp
inc
cmpsl
aam
jns
ret
inc
test
or
dec
and
jae
or
lock
and
jnp
push
sbb
cmpsl
push
mov
and
cld
dec
sub
gs
xchg
xor
sub
pop
cmp
ficoms
pop
cmp
movsb
push
subl
xchg
push
int
iret
iret
insb
xor
and
mov
push
shlb
xchg
repnz
lret
ret
add
movsb
mov
daa
hlt
pop
inc
push
sub
insb
add
mov
aad
jmp
inc
dec
pop
mov
jmp
xchg
aad
sbb
arpl
jecxz
xchg
xchg
out
iret
xchg
mov
sub
lock
orb
jp
dec
ret
and
lods
icebp
mov
enter
push
ret
xor
cmpsl
cld
push
movsl
dec
sqrtps
push
loopne
lods
arpl
into
cmp
mov
cmp
mov
pop
or
shrl
jo
mov
push
adc
fwait
popl
push
mov
sarl
jno
xchg
in
lcall
pop
mov
inc
outsb
jge
lret
adc
xor
hlt
out
sbb
jo
adc
jae
and
lea
mov
sti
aas
fnsave
loope
daa
in
push
repnz
out
push
clc
loop
cltd
mov
sbb
cli
imul
pop
out
out
jnp
clc
mov
sub
mov
mov
insl
xlat
dec
mov
fnstenv
push
sbb
mov
xchg
in
and
push
push
xor
push
andb
lods
pushf
jmp
adc
sub
adc
or
sbb
sbb
xchg
xor
add
clc
pop
ret
aas
jl
push
ds
inc
out
jmp
cs
mov
lock
leave
ret
push
jmp
pop
inc
scas
xchg
sarl
shll
test
inc
dec
daa
sub
nop
cmpsl
fldl2e
fstps
insl
inc
fdivrs
sbb
jp
sbb
bound
jo
test
addr16
xor
push
jns
sti
ret
cli
and
mov
jp
icebp
xchg
jns
outsl
push
cmpsb
inc
push
hlt
xor
lret
mov
aam
fisubl
mov
push
ja
pop
xchg
xchg
fdivrs
inc
js
popa
sarb
adc
add
repz
clc
lds
xorl
scas
mov
mov
jle
leave
test
mov
into
mov
mov
lcall
mov
andb
popa
pop
mov
mov
out
stos
jbe
or
pop
popa
jp
or
out
loopne
jb
or
mov
cmp
jcxz
mull
sbb
test
jmp
sub
push
push
fcomps
and
ficompl
sbb
clc
pop
aam
icebp
adc
pop
xor
jl
cmp
test
mov
xchg
mov
jbe
in
pusha
outsl
call
shl
add
mov
xchg
dec
ret
cwtl
pusha
sub
xchg
sbb
movsl
mov
mov
sub
dec
xor
pusha
adc
into
inc
inc
ds
out
dec
adc
xlat
xchg
fwait
adc
notb
inc
inc
inc
or
push
push
xor
mov
into
enter
pop
or
sbb
sbb
adc
mov
pop
cmpsl
loop
dec
dec
out
jbe
sbb
imull
and
cmp
push
fcomps
clc
jge
jle
lods
mov
cwtl
dec
mov
clc
data16
sub
xchg
xchg
repz
or
cwtl
jbe
hlt
xor
cmp
xchg
loope
cmpsl
das
lds
ret
addr16
dec
cld
push
jmp
dec
mov
daa
xchg
dec
mulb
negl
mov
aaa
fadds
cmp
inc
pop
negb
push
scas
dec
nop
mov
pop
aas
mov
cmpl
fwait
lret
scas
xor
push
lret
jo
imul
in
repz
or
xor
ljmp
pop
and
add
arpl
push
arpl
add
stc
pop
outsb
dec
sub
shll
mov
lock
sbb
mov
bnd
aas
jbe
xchg
inc
and
sub
dec
cwtl
fisttps
mov
jns
and
outsl
pop
sarl
sbb
push
jle
cmp
loopne
xor
dec
daa
push
adc
mov
das
adc
xor
dec
xchg
jmp
sub
sbbb
stos
repz
mov
loope
mov
cmc
repnz
test
movsl
inc
push
packssdw
js
addl
fs
lods
inc
fdivr
and
mov
inc
mov
mov
xorl
and
out
popf
cmp
pop
mov
mov
jbe
sub
std
and
push
mov
mov
incb
neg
mov
outsl
dec
and
mov
ficompl
fnsave
in
std
cmp
notb
jge
iret
add
ljmp
movsb
in
xor
shrl
fstpl
shrb
in
pop
enter
jle
repz
les
mov
or
inc
loop
inc
rolb
fistl
jle
mov
xchg
out
xchg
push
aam
sub
movsl
loopne
mov
adc
cli
enter
push
clc
call
mov
dec
inc
pop
lcall
filds
sbb
dec
push
lds
xchg
lods
push
dec
mov
pushf
push
ret
jne
sub
ss
sahf
popf
repnz
mov
mov
fisubl
sbb
repz
jb
jmp
in
push
call
xor
mov
xor
jmp
jp
ds
subb
out
push
outsl
inc
mov
cmc
loope
push
fs
add
mov
mov
add
jb
ja
dec
in
insl
push
jnp
mov
cmc
xlat
inc
fldcw
mov
std
cwtl
movsl
andps
dec
fldt
add
lret
sub
outsb
shl
xchg
popf
int3
push
nop
xor
dec
xrelease
xchg
repnz
and
push
pop
xor
mov
push
andb
mov
jbe
mov
movsl
lds
add
xchg
les
adc
shrb
sbb
cwtl
pusha
xchg
dec
inc
push
nop
cmp
xor
jmp
adc
mov
jmp
pop
jecxz
sub
dec
lret
adc
add
hlt
out
shlb
scas
mov
sbb
gs
loope
jmp
sbb
aas
jmp
out
pop
inc
push
lods
dec
xor
movhlps
dec
mov
sbb
pop
fisubrs
pop
jo
mov
cli
ret
inc
dec
adc
out
aam
cmp
out
int
push
jp
mov
push
ja
lcall
mov
inc
pop
mov
outsb
push
mov
int
mov
ret
out
push
imul
mov
sub
push
sub
and
pop
pop
subb
dec
jbe
into
iret
dec
cmp
xchg
sbb
jmp
push
mov
xorl
lret
inc
jb
dec
in
imul
mov
fcmovb
lcall
popa
repnz
pop
lcall
jns
mov
xor
sbb
inc
mov
jp
push
cmp
mov
adc
rcll
jbe
inc
dec
mov
lret
mov
jle
fildl
push
insl
ljmp
pop
sti
dec
and
scas
fistl
mov
sbb
dec
pop
push
jne
dec
dec
sbb
pusha
jmp
js
cld
inc
rcr
es
loop
push
jp
sub
ror
sbb
out
enter
mov
ret
inc
lods
popa
jmp
icebp
popa
xchg
mov
lret
stos
pop
jae
je
pop
or
scas
pushf
hlt
mov
mov
mov
cmp
lods
icebp
insl
fsub
hlt
in
mov
inc
or
movsb
aad
insl
in
loope
sbb
jno
fs
mov
add
jno
cmp
push
mov
pop
mov
out
mov
scas
ss
pop
pop
xchg
int
out
lds
adc
cmp
aad
mov
icebp
sti
pop
add
adc
clc
ret
loope
imul
outsb
stos
push
sub
sbb
jno
mov
fcmovne
test
jo
les
js
mov
xchg
pmulhuw
ds
imul
add
add
cmc
inc
insl
xor
lds
pop
in
inc
cmpl
es
cltd
cltd
pushf
popf
push
or
ret
cmp
cmp
ret
mov
pusha
xlat
sub
inc
adc
mov
stos
xor
stos
leave
into
rcrb
lahf
push
sub
mov
pop
mov
int
out
fldl
icebp
imul
das
mov
fcmovnu
push
jb
andl
inc
jp
pop
fs
push
inc
lahf
cmc
addr16
lcall
int3
nop
das
in
cmp
jo
shrl
jae
dec
mov
push
xchg
push
sub
daa
stos
ficoml
mov
and
jg
aam
mov
in
int3
imul
xor
mov
popa
rol
notb
pop
fwait
mov
jl
adc
adcl
push
out
outsl
call
sbb
bound
adc
cltd
pop
sub
pop
cmpsb
clc
pop
out
insb
mov
imul
out
adc
lea
jg
in
aad
mov
xchg
and
jnp
repnz
jns
xchg
xchg
xor
push
and
sbb
sbb
fnstsw
xchg
xchg
mov
mov
push
ja
sub
fsubs
mov
inc
andl
dec
scas
jnp,pt
icebp
push
les
fistpl
xor
loop
push
cwtl
mov
push
mov
dec
xchg
xchg
scas
aad
rcrb
in
sbb
pop
adc
or
outsb
or
divl
jne
cmp
in
divb
xlat
and
int3
jle
adc
loop
dec
xchg
int3
sbb
xor
add
push
xor
popl
lods
cmp
orb
dec
loop
adcl
add
xor
jg
or
jnp
xchg
out
adc
fisubrl
test
in
ljmp
jns
mov
jo
add
add
cmpsb
mov
mov
das
insl
ret
xor
jnp
jb
pop
mov
fiaddl
dec
daa
xor
lods
inc
aam
jnp
inc
pinsrw
mov
fld
hlt
or
mov
iret
in
cmc
daa
movsb
rorl
jnp
cmc
or
gs
push
shll
pusha
jnp
push
pusha
mov
in
cmp
mov
in
in
mov
cli
out
and
and
test
jb
out
ror
sub
xchg
sub
mov
xor
xchg
pop
nop
xchg
in
in
mov
jo
add
add
sbb
loop
jle
sub
push
icebp
js
fldl
leave
push
jbe
inc
push
pop
mov
cmc
or
int
in
cmp
aad
adc
aam
push
jmp
mov
jb
in
test
xchg
lea
and
pop
jmp
int3
imul
fnsave
ret
dec
icebp
sahf
clc
outsb
out
xchg
mov
adc
push
inc
or
cmovs
in
lock
clc
add
add
movsl
je
ss
xor
push
lods
adcl
push
mov
sbb
pop
adc
adc
cld
je
cwtl
cmp
dec
ds
fwait
test
std
aaa
dec
jnp
lock
pop
repz
cwtl
in
cltd
out
cmp
insb
adc
mov
fsubl
pop
inc
and
adc
jb
pop
mov
dec
adc
mov
xor
repz
mov
pushf
mov
sbb
push
xchg
fidivrs
daa
mov
hlt
add
push
enter
or
mov
add
jae
rcll
scas
lahf
inc
jns
sahf
test
mov
jno
mov
addl
pop
ds
mov
dec
imul
into
pop
xor
pop
dec
icebp
fsubs
pop
pop
add
out
sbb
sub
cmpl
push
dec
sub
jge
loopne
fsub
adc
cmp
lahf
cli
add
jp
out
sub
mov
flds
dec
cwtl
xchg
inc
dec
aas
cmp
adc
divl
mov
push
fnstcw
ljmp
test
adc
jns
fists
repz
cmc
jecxz
rolb
jecxz
sbb
fs
sbb
bound
fldenv
scas
cmp
addr16
sbb
cmovl
popa
adc
test
lea
aad
jo
mov
inc
xchg
jmp
aas
pop
push
sarb
test
jle
jno
ja
ret
push
sbb
push
hlt
mov
mov
ljmp
movsb
push
es
fiadds
sbb
jl
repnz
mov
inc
xchg
mov
fcomip
and
ljmp
ss
push
aaa
roll
js
and
daa
loopne
add
mov
int3
add
popa
ja
std
dec
jnp
adc
jge
lods
sub
dec
pushf
aam
inc
adc
repnz
sub
outsb
ret
ret
mov
sti
aas
adc
cli
out
mov
cld
push
cmp
or
add
jnp
outsl
pop
adc
sub
data16
mov
cmp
push
adc
and
xchg
mov
sub
test
repz
arpl
xor
ja
pop
cmp
into
shlb
fadds
sub
mov
aaa
gs
in
nop
mov
je
xor
test
adc
mov
lods
jp
gs
cwtl
scas
movsb
movsl
adc
inc
lock
ret
xor
xor
sti
sbb
add
cltd
dec
sub
movsl
lea
cmp
xchg
stos
mov
mov
xchg
lcall
dec
mov
in
fildl
push
fwait
cmp
clc
jo
out
or
out
popa
pop
fwait
mov
xor
mov
js
or
test
mov
sti
imul
dec
pop
pop
jl
test
or
scas
sub
jl
and
rorb
insb
and
xor
sar
sahf
ficompl
inc
push
enter
addr16
out
xchg
or
test
xchg
out
jnp
aas
adc
ja
movsb
push
mov
jno
cmpsb
js
push
mov
mov
push
cwtl
lds
xchg
xor
js
or
ljmp
adc
add
cmp
jne
and
cmc
pop
push
mov
mov
movsl
pop
xor
mov
mov
es
scas
inc
ja
imul
fnsave
cwtl
mov
std
std
lods
pop
jg
sub
jp
xlat
stos
aaa
push
sbb
inc
jb
dec
fmull
push
loop
jge
inc
ljmp
and
pop
pop
jmp
pop
ja
and
cmpb
push
imul
or
out
mov
hlt
fcom
pop
jp
jo
lret
mov
fwait
int3
sbb
dec
neg
jbe
loope
cmp
and
test
xchg
xchg
ss
inc
data16
mov
inc
cmp
arpl
mov
sub
push
pop
jmp
loop
lahf
fsubrs
cltd
fsubrl
jno
lahf
pop
into
and
mov
sub
push
pop
add
leave
push
rclb
outsl
sub
jns
and
dec
sarb
pushf
cwtl
cmp
inc
and
mov
jno
addr16
jno
cmpxchg
mov
mov
int3
push
push
inc
dec
pop
call
mov
out
mov
mov
sub
mov
sbb
dec
rcrl
aam
fcmovnb
out
ds
dec
lods
xchg
mov
push
fwait
jb
push
popa
gs
xchg
jp
jmp
jmp
and
push
insb
push
outsl
sbb
ror
adc
fildl
cmc
mov
fldcw
cmp
add
movsl
xor
dec
xchg
and
cmp
in
mov
nop
cmp
dec
cmp
clc
cld
jmp
repz
bound
jmp
inc
and
scas
cmp
dec
es
imul
ficoml
cmp
pop
lahf
or
push
out
sub
sub
cmp
cmp
addr16
or
push
andb
sti
mov
cwtl
add
sub
popa
cltd
xchg
jmp
comiss
test
mov
ss
or
rorb
out
ret
andl
and
push
adc
jmp
shrl
push
hlt
adc
mov
cs
add
bound
mov
mov
push
push
or
push
add
adc
cmpl
test
mov
loop
cmpsl
cmpsb
lock
add
outsl
stc
popa
in
jle
inc
mov
outsl
push
filds
adcl
je
scas
test
inc
test
or
sbb
mov
mov
mov
cld
outsb
mov
fldl
scas
push
cmc
lret
mov
pop
jge
sbb
and
in
fstpl
xor
jge
in
repz
xchg
int3
popf
pop
sbb
pop
mov
xchg
fbstp
push
mov
jb
pop
repnz
js
pop
jge
dec
xor
or
xchg
movsl
jg
stc
fisubrs
movsb
cmp
popa
outsl
fcmovb
shlb
jg
push
add
jb
xchg
mov
mov
or
jle
push
xor
cmc
stos
repnz
and
jl
cli
inc
xchg
aas
push
add
outsl
aad
mov
and
out
sub
fbstp
pushf
sub
jns
jecxz
cli
pop
fstl
mov
cmp
cmp
push
ljmp
or
imul
incl
fwait
or
pop
lahf
scas
and
inc
test
lret
out
sub
jecxz
std
fildl
and
bound
fwait
cmpsb
and
sbb
push
push
lret
int3
pop
in
jmp
jmp
int
cmp
test
inc
sub
and
jno
cltd
into
mov
jecxz
outsb
pop
add
xlat
jp
mov
shlb
or
outsb
adc
dec
shll
jo
ljmp
popf
pop
jecxz
test
mov
push
xchg
test
cli
mov
mov
add
xchg
and
dec
pushf
cmp
cmp
pop
aam
std
es
xchg
aad
in
sbb
xor
mov
loopne
inc
in
jle
adc
lret
das
push
test
mov
incb
call
jl
and
ss
and
push
pop
mov
cmp
mov
xor
mov
inc
bound
stos
in
xchg
inc
arpl
lea
sub
pop
jbe
jb
and
ds
xor
rorb
fnstcw
nop
rorb
imul
mov
loop
xchg
sbb
dec
scas
test
lock
push
sbb
iret
push
fldln2
scas
bound
ja
jb
inc
leave
fiaddl
imul
pop
mov
mov
sbb
xor
movsb
mov
nop
sbb
sbb
out
hlt
loop
adc
ljmp
sbb
jmp
out
push
lea
in
scas
and
xchg
insb
sub
xchg
icebp
mov
loop
fcoml
sub
xchg
out
bound
push
push
ja
pcmpgtb
clc
mov
nop
dec
in
test
pop
outsb
insb
xchg
cmp
sub
out
pop
xchg
fnsave
cld
dec
inc
fistl
adc
adc
imul
add
or
sarl
lret
lea
loopne
and
divl
leave
fmul
mov
cmp
out
mov
in
mov
outsb
sbb
mov
xchg
inc
out
in
mov
pop
daa
pop
add
mov
inc
je
pop
loopne
imul
jmp
and
dec
mov
cmp
cmpsl
bound
mov
fs
scas
fsub
sbb
icebp
add
xor
push
sub
dec
pop
incb
xor
and
lock
sarl
scas
xchg
dec
test
js
clc
andps
adc
cwtl
xorb
sub
xchg
ja
aas
inc
fcmovne
icebp
insl
dec
into
icebp
sub
add
adc
fldcw
mov
inc
fcmovne
and
in
push
fmuls
xlat
adc
mov
pop
loope,pt
xchg
ljmp
aaa
ja
jg
pop
push
movsb
jns
jb
xlat
cmpsb
fcoml
mov
addr16
repz
push
dec
mov
or
stc
insl
xor
in
inc
jnp
jp
pop
sub
movb
cli
aaa
dec
pop
scas
lcall
inc
mov
inc
shlb
push
sbb
shlb
jno
push
push
popf
push
dec
cs
cmpsl
shrb
xrelease
sub
outsb
push
push
enter
add
arpl
das
pop
mov
xchg
push
mov
dec
jp
sub
clc
mov
cmc
inc
ret
popf
icebp
cmp
mulb
loope
iret
aam
insb
or
mov
mov
stc
mov
cli
adc
push
sub
push
xchg
jmp
or
push
sbb
pop
lret
stc
jnp
arpl
mov
jae
ja
insb
fsts
mov
sub
stc
mov
shrb
xlat
sbb
jl
mov
mov
push
push
test
cmpsl
es
xor
movsb
cld
pop
inc
loop
push
in
scas
in
pop
rclb
jge
lcall
dec
fimull
nop
sbb
loop
dec
dec
xchg
mov
pusha
fstpl
mov
jbe
addr16
push
or
xchg
arpl
xchg
pop
jle
or
dec
and
popf
icebp
xchg
cld
cmpsb
push
cmpsb
jmp
dec
mov
jge
lahf
xchg
pop
pop
mov
outsl
cmpsl
test
xchg
sbb
data16
push
inc
ret
xor
lea
jbe
jle
jmp
adc
or
mov
mov
les
pusha
sarl
fldl
pop
outsb
sub
pop
lret
xchg
push
in
sub
mov
xor
out
xchg
lea
xchg
push
cmp
int3
mov
popf
rcrb
loope
mov
inc
or
lods
into
clc
sbb
inc
or
sub
cmc
add
and
sub
push
iret
add
enter
imul
add
pusha
movsb
stc
jno
sbb
daa
cmp
push
jo
imul
push
out
ds
dec
push
lret
stos
sub
add
or
adc
andl
ja
push
leave
sbb
mov
lret
lret
cmp
stos
repz
cwtl
xor
leave
xchg
imul
pop
inc
inc
pop
inc
test
push
ds
jge
enter
scas
fsubr
cmp
pop
das
jnp
imul
mov
mov
out
inc
sbbl
mov
adc
dec
push
movsl
rorb
aas
or
lret
add
and
notb
pop
inc
out
incl
push
ret
dec
sti
outsl
jbe
popf
js
cld
lock
test
or
xor
or
xorb
sub
imul
or
push
loop
or
or
sar
aam
ficoms
call
adc
jnp
imul
and
movsl
sbb
jmp
testl
rcl
pop
pop
push
fs
rclb
and
ficomps
sahf
inc
mov
inc
insb
les
inc
divl
mov
call
ds
data16
xchg
and
sbb
inc
dec
hlt
mov
and
std
lds
out
mov
loop
loop
in
inc
push
cmp
inc
loop
dec
add
xor
sbb
pop
mov
adcl
pop
or
cmpsb
dec
fdivs
out
enter
and
mov
jns
popf
pop
jnp
mov
lret
inc
lea
mov
js
adc
movsb
inc
xorb
xor
dec
sub
movsl
dec
push
hlt
lret
push
sub
clc
mov
add
or
cmpsb
test
mov
aam
in
subb
jns
or
mov
ljmp
xor
pop
sbb
cmp
inc
imul
xlat
push
test
cmc
mov
lret
int
xor
ss
push
xlat
cmp
adc
or
mov
push
ljmp
dec
addr16
sti
push
nop
or
repnz
and
push
jbe
jo
popa
push
jecxz
push
mov
dec
std
test
insb
pop
pushf
ficoml
push
push
dec
test
xchg
insl
and
mov
jnp
std
pop
adc
add
push
jno
lret
aad
arpl
icebp
sub
js
jae
inc
mov
and
shlb
adc
pop
lods
add
ja
mov
mov
cmpl
push
pop
fcomp
jno
fdivrs
push
mov
jo
int3
out
test
aam
xchg
or
fwait
and
sbb
rcr
ja
iret
lahf
push
lahf
xchg
add
in
call
push
lods
jbe
test
dec
lds
push
fs
icebp
cs
xor
and
pop
std
sbb
inc
jge
jnp
and
push
push
mov
cmpsb
mov
jne
pop
cli
dec
mov
cs
aas
out
jecxz
pop
loopne
jne
dec
inc
cmp
push
inc
lret
cmc
insl
or
pop
jns
push
stos
aas
mov
ret
push
sbb
xor
sub
enter
pop
jle
add
pop
lock
add
into
ret
push
in
into
outsb
sbb
outsb
mov
inc
and
cmpsl
int3
aam
sahf
cmp
pop
movsb
out
imul
mov
daa
cmpl
out
xor
xor
fs
fs
mov
adc
inc
es
scas
hlt
rcrl
test
cvtps2pi
mov
inc
xchg
xchg
jge
mov
nop
push
int3
jnp
mov
inc
repz
or
lahf
dec
jl
xchg
mov
imul
es
out
and
repnz
mov
pop
je
bnd
loope
leave
aam
xchg
xor
ss
sub
rep
nop
lea
insb
sbb
popa
dec
mov
adcl
or
inc
mov
dec
pushf
and
lods
mov
cli
pop
jecxz
mov
dec
and
lret
mov
jge
test
mov
mov
into
hlt
pop
fbld
cwtl
add
inc
push
sbb
iret
mov
jle
dec
mov
push
incb
mov
in
lret
cmc
or
loopne
fs
data16
mov
push
inc
aaa
mov
push
sub
rorb
nop
xchg
fsubrp
mov
and
ret
cmp
mov
add
cmp
mov
pop
mov
mov
repnz
push
into
add
xor
leave
lretw
push
adc
insl
lods
loop
mov
rcrl
mov
xchg
and
fldl
movsb
pusha
cmp
xchg
sahf
xor
push
jns
ljmp
cmpb
push
loopne
and
sahf
leave
or
push
addb
cmpsb
adc
sub
inc
ret
test
imul
ja
jp
sub
pop
pop
sub
adc
pop
or
lea
jne
aaa
jp
sahf
mov
mull
fsubrl
je
fsubp
mov
iret
test
mov
xor
popa
data16
out
or
shl
adc
push
xchg
sbb
adc
jns
fwait
jl
add
cmp
aam
iret
arpl
fidivl
jno,pn
loope
inc
jp
testb
inc
pop
push
push
pop
mov
gs
mov
jmp
adc
add
iret
pop
xchg
clc
lock
inc
xlat
cmpsb
or
sub
sub
mov
lods
das
fs
out
and
dec
and
xchg
jecxz
sbb
adc
xchg
clc
popa
jne
cmp
sbb
mov
xor
mov
icebp
sbb
adc
cmp
jp
xchg
movsb
movsb
in
insl
mov
in
xor
dec
out
jp
or
add
add
sti
jae
or
aaa
push
xor
cmp
and
sub
in
out
jge
xor
cmpsb
in
fists
into
pop
inc
rolb
lds
xchg
mov
mov
flds
xchg
shl
cmc
bound
sarb
adc
dec
jmp
mov
jo
iret
outsb
lret
addb
sub
fstpl
mov
rorb
inc
fs
jp
add
lahf
xchg
lds
enter
icebp
in
in
data16
sbb
jb
cmpsw
sub
out
jne
or
pop
js
sbb
mov
insb
daa
scas
add
xchg
test
sbb
xchg
or
mov
sbbb
push
jge
faddl
xchg
inc
jb
sbb
push
jno
stc
sub
xor
in
ja
mov
out
cmp
mov
cmp
mov
cltd
leave
or
push
jb
lock
dec
adc
in
sub
jb
xchg
xchg
pop
pop
in
not
rclb
inc
adc
lds
inc
mov
mov
mov
notb
cmp
ss
jle
aad
mov
fmul
das
inc
es
in
mov
jo
mov
inc
aam
xchg
pop
ja
dec
lret
adc
or
jne
adc
shrb
adc
sub
mov
jecxz
sbb
mov
adc
mov
mov
jg
icebp
jns
sub
fildl
jge
jns
add
pop
jae
adc
cmc
sbb
lea
pop
das
insb
mov
test
jne
inc
push
int3
jmp
sub
adc
xor
test
xor
ds
test
dec
adc
lret
inc
outsb
cmp
pop
inc
and
push
or
imul
lret
jb
add
cli
out
jnp
sar
lret
stos
ds
cmp
mov
and
shlb
sub
xchg
lret
pop
add
inc
xor
fwait
adc
pop
daa
sarb
ja
popf
pop
fistpll
mov
scas
pop
adc
mov
lret
push
lahf
icebp
les
mov
ret
xor
mov
mov
jle
insl
out
xchg
dec
and
call
fimull
ljmp
gs
xor
dec
add
shlb
push
add
adc
dec
jns
ljmp
jp
push
mov
pop
and
jmp
stc
add
jmp
fwait
xchg
and
jno
sti
sub
mov
xchg
shrb
mov
mov
xchg
cmp
mov
mov
lret
pop
call
pop
mov
sub
inc
pop
lods
xor
je
adc
lahf
popf
mov
loope
or
push
dec
out
stos
aaa
dec
xor
stos
cltd
xchg
adc
pop
aam
ret
mov
es
cmp
mov
push
adc
imul
and
mov
andl
out
fcmovnbe
jns
push
dec
mov
mov
out
cmp
rcrb
mov
mov
dec
sub
cmpsl
push
out
aaa
sub
mov
sub
int
xchg
push
lcall
imul
mov
pushf
adc
or
push
rorl
je
push
sub
insl
inc
xchg
mov
jle
ds
imul
jecxz
stos
xchg
shl
pop
scas
or
stos
repnz
add
xchg
dec
sbb
cmpsb
ljmp
pop
movsl
adc
fistps
add
rep
rcll
jecxz
mov
dec
fldenv
dec
mov
xlat
test
jne
inc
push
sub
daa
or
lds
clc
and
mov
sahf
in
sbb
or
adc
mov
aas
cmpsl
mov
call
lahf
push
jge
fmuls
jle
add
cs
les
jecxz
xchg
dec
jae
cmpsb
sub
dec
idivl
add
into
pop
xor
push
pop
adc
jns
xlat
stc
jbe
or
or
pusha
cmp
mov
jecxz
pop
push
ss
sahf
fwait
movl
test
sub
mov
test
mov
icebp
mov
shl
mov
shlb
cmp
enter
cmpl
sti
mov
mov
imulb
inc
scas
xor
les
addr16
sbb
inc
jge
test
cmp
add
cmpsb
mov
inc
scas
fists
push
pop
popf
adc
dec
jecxz
pop
add
int
inc
rorl
loope
rcrb
in
out
sbb
cld
push
test
jmp
out
jbe
pop
leave
add
fsubr
les
lea
cli
cmpsb
push
pop
inc
jle
mov
out
push
fsubr
sbb
push
mov
cltd
jl
scas
mov
add
pop
loop
dec
test
cmpsl
test
xorb
mov
sub
push
ja
lahf
pushf
mov
dec
cmp
mov
int3
cmpsl
aas
testl
mov
lods
dec
sbb
xchg
adc
es
or
sub
xor
or
mov
insl
shl
movsb
sbb
lods
adc
cmp
cld
movsl
stos
mov
imul
ljmp
sbb
ret
mov
xchg
jge
fcmovbe
jle
es
daa
stos
test
daa
mov
dec
xor
bound
pop
dec
pushf
mov
mov
dec
ret
test
outsl
mov
or
inc
shlb
push
jae
jne
push
clc
es
addl
ror
add
xchg
aad
adc
test
pop
rorb
sub
movsb
dec
ror
sub
dec
xchg
fildl
subl
jecxz
push
pop
stos
adc
rcrl
call
test
rorl
xor
repnz
loopne
das
cwtl
pop
push
test
pusha
mov
mov
nop
push
aas
or
jb
addr16
iret
push
fbld
or
jno
pushf
insl
pushl
or
fiadds
imul
je
dec
imul
pushf
dec
push
fisubrl
stos
in
cmpsl
pop
mov
push
mov
push
sbb
adc
add
sbb
ret
xchg
or
dec
mov
lret
cli
inc
xchg
xchg
jae
es
and
fdivrl
or
arpl
aad
idivl
inc
jmp
pop
dec
cmp
jg
rcrl
scas
ficomps
into
add
popa
push
sbb
pop
xchg
shrb
sub
addl
pop
fisubrs
les
mov
dec
popf
and
mov
jecxz
ret
pop
xor
out
dec
push
or
cmp
pop
pop
sbb
das
shlb
dec
xor
scas
jo
jbe
xchg
inc
lret
push
lret
push
and
pusha
mov
dec
pushl
push
or
push
hlt
daa
xor
das
scas
data16
pop
jmp
jp
cmp
and
mov
cli
jo
mov
cmp
sti
add
out
leave
dec
adc
jecxz
dec
test
roll
sub
out
fstp
jb
push
shlb
inc
push
jbe
pop
xchg
mov
movsb
cwtl
js
scas
in
std
mov
lret
es
push
xchg
jb
in
push
adcl
xor
int
fs
fwait
stc
mov
in
insl
mov
jg
cmp
shlb
psllw
fildl
adc
ret
sbb
hlt
pop
xchg
push
xchg
subl
jp
cltd
mov
repnz
ja
shl
sbb
xor
xor
jg
cs
arpl
in
out
inc
out
fildll
add
daa
jle
lock
inc
mov
out
jns
insl
pop
inc
mov
sub
sbb
mov
scas
in
and
and
pop
add
cmpl
push
lods
mov
jae
call
cmp
cli
mov
dec
movsb
shll
xchg
loop
in
in
ret
lds
out
iret
push
arpl
js
out
mov
std
cmc
inc
jns
mov
pop
sbb
inc
shll
fs
or
lret
lea
xchg
lods
sbb
adc
shr
and
shl
mov
aad
cmp
test
cltd
mov
test
sub
adc
lret
xchg
stos
sub
js
mov
pushf
mov
shlb
add
mov
movsb
sahf
sti
push
xchg
mov
push
fisttps
push
stos
insl
test
shll
andb
ja
xchg
rcrb
and
mov
dec
popf
pop
outsl
inc
cwtl
sbb
xchg
sahf
mov
popf
xchg
repnz
outsl
lds
cmp
cmp
dec
xchg
pop
dec
pusha
cmp
mov
cmp
test
add
notl
test
cli
shl
sub
sbb
fs
out
in
pop
imul
jmp
inc
xchg
imul
jecxz
cld
mov
cmpsl
shlb
cs
jp
mov
rolb
mov
sti
das
ret
ja
pop
sahf
dec
inc
test
sti
cmc
xchg
leave
inc
jbe
nop
out
cmp
inc
stos
dec
xor
pop
pop
lea
loope
adc
imul
push
push
or
push
mov
shll
mov
shr
mov
fwait
repz
and
out
inc
and
jle
sbb
mov
test
sub
jle
or
cmc
and
hlt
mov
pop
pushf
sbb
mov
movb
sbb
fistpll
ljmp
xchg
nop
addr16
sbb
hlt
sbb
cmp
in
sub
sbb
mov
rol
add
ret
rcrl
out
aam
ret
cmpsb
call
sbb
lods
push
test
fs
mov
jnp
shlb
mov
mov
pop
repnz
mov
test
and
dec
xchg
sub
pushf
sbb
jb
add
jae
jle
xchg
aam
cmp
pop
setnp
rorb
xor
leave
popa
xchg
aad
and
daa
pop
lods
jmp
pop
int
sbb
pop
dec
adc
xor
adc
cmp
cmp
pop
aas
cmpsb
fidivl
dec
das
mov
add
sub
clc
mov
jl
jle
cmpxchg
inc
fwait
insl
fisttpl
fiadds
fwait
xchg
inc
cli
inc
mov
jmp
stos
pusha
lds
cmpsb
into
xchg
popa
sbb
btrl
mov
and
subb
and
sub
call
jmp
add
pop
jmp
xchg
out
pop
or
testl
push
out
mov
dec
test
push
or
add
push
in
xor
mov
or
pop
push
jno
cwtl
mov
jecxz
add
in
pop
push
mov
aas
lahf
vmwrite
dec
or
mov
jne
cmp
jmp
negb
or
test
gs
mov
jae
xchg
sahf
in
cmpsl
cld
int3
mov
fwait
andl
pop
repz
repz
jnp
sbb
dec
mov
test
adc
scas
jge
jnp
inc
jle
or
ljmp
inc
nop
cmp
mov
xchg
movlhps
test
loope
xor
cmp
mov
das
xor
dec
andb
out
xlat
adc
or
cmpsl
xor
int
aad
insb
add
aam
aad
sbbl
push
jae,pn
lds
push
mov
ljmp
and
fsubrs
cli
xor
mov
sub
xor
das
and
xor
push
cmpb
faddl
xor
ret
mov
pop
sub
in
pop
adc
jns
punpckhwd
fstpl
pop
call
xchg
mov
dec
insl
pop
rep
or
jns
cmpsl
and
lret
cmpsl
push
aam
jmp
scas
add
dec
pop
cmpsl
xorb
rcrb
repnz
in
ljmp
cld
dec
jmp
or
in
xchg
icebp
out
in
sub
pop
push
sbb
imul
push
pop
jns
iret
or
shlb
pop
mov
mov
fcoml
xchg
jae
dec
xchg
incb
cmp
aam
loopne
add
or
scas
sbb
mov
ss
dec
ret
imul
push
xchg
inc
sub
pop
outsl
jmp
lahf
add
or
daa
loope
cltd
fmull
fiadds
mov
popf
in
jmp
pushf
movsb
jp
add
sub
loopne
nop
jns
dec
and
add
sbbb
les
and
jmp
sarb
push
cmp
lock
lods
push
aad
aad
sti
jge
xor
jne
lea
push
jp
int3
popf
push
pop
lcall
les
rcll
fistl
mov
mov
dec
popf
sbb
sbbl
hlt
popf
pop
pop
push
xchg
cmp
or
test
and
mov
and
pusha
fs
mov
mov
jge
jl
das
mov
test
repnz
xchg
and
mov
cmp
push
push
ret
xchg
std
je
pop
popa
sbb
pop
and
dec
push
jmp
fs
jae
mov
cmc
xor
out
ret
xchg
cmp
pop
lock
ret
mov
int
enter
pop
mov
pushf
xor
pop
mov
inc
inc
leave
and
pop
lock
jbe
and
stos
js
inc
jns
jnp
rcr
aam
or
mov
call
xchg
mov
out
iret
mov
pop
pop
fidivrl
mov
iret
xchg
adc
add
or
addr16
in
xor
mov
daa
into
fwait
inc
dec
mov
test
fdivrl
fidivl
ret
pushw
ret
push
daa
pop
push
stos
xchg
push
dec
repz
imul
jae
push
or
xor
loopne
sub
sbb
daa
jmp
pop
stc
add
int
add
inc
scas
lret
ss
js
ret
xchg
adc
jle
pop
sub
inc
leave
clc
scas
testl
mov
add
filds
out
sub
repz
ficoml
mov
lock
int
jnp
push
jo
pop
mov
dec
out
xchg
dec
inc
add
scas
add
sub
inc
fcmovnb
cmc
aad
add
sarl
pusha
xorb
aas
cmp
repnz
test
insl
dec
int
jo
push
and
and
xchg
nop
xor
das
sahf
inc
add
xchg
dec
out
test
push
ljmp
add
push
cltd
dec
ljmp
clc
sbb
je
mov
inc
lret
sbb
mov
cmpsl
test
and
adc
int3
imul
mov
fisttpl
sahf
pop
jl
mov
ret
adc
xchg
shll
add
fidivs
adc
inc
sbb
pop
arpl
cwtl
sbb
dec
int3
gs
push
mov
fisubl
xchg
push
mov
shrl
pop
iret
out
int3
test
lcall
and
decl
imul
push
test
neg
adc
bound
xchg
sahf
pop
cltd
xchg
pop
cs
lahf
adc
leave
mov
movsl
add
push
xchg
xchg
lea
mov
pop
sahf
out
lcall
das
clc
jecxz
inc
mov
test
dec
jp
mov
inc
add
adc
pop
dec
xchg
sub
adcl
lock
out
and
cmp
test
lret
repnz
xchg
pop
cmp
mov
shrl
inc
sbb
stos
pop
mov
shlb
mov
movsl
dec
push
mov
test
inc
jecxz
pop
sti
in
xchg
outsb
mov
add
in
je
xor
mov
push
and
mov
cltd
adc
in
push
or
leave
std
xchg
push
dec
jbe
mov
fs
movsb
xchg
das
push
clc
mov
out
cltd
inc
dec
iret
ret
jns
loop
lahf
aad
dec
lds
loop
dec
cs
clflush
sub
push
sbb
sti
jb
adc
ljmp
clc
icebp
cli
mov
aad
or
mov
ffree
aam
ficomps
mov
iret
out
add
inc
repnz
inc
mov
loope
int3
push
dec
xchg
dec
push
stos
push
jge
pop
rcr
xchg
ss
cmp
add
jnp
sbb
lock
out
ja
pushf
add
lock
data16
xchg
mov
mov
loope
push
cwtl
pop
jmp
stos
jecxz
out
ud1
xchg
fucomi
xlat
movsl
sbb
add
dec
or
xchg
push
mov
mov
test
je
ret
and
push
and
and
out
ds
push
or
push
imul
je
out
xor
cmp
out
lahf
data16
iret
clc
mov
arpl
mov
ss
add
ljmp
or
and
pop
push
lret
dec
lea
fnsave
mov
idiv
xchg
bound
dec
mov
dec
and
sti
cmpsb
in
or
xor
or
mov
inc
jo
dec
icebp
jecxz
outsl
cs
xchg
and
jle
add
adc
mov
pop
movsl
mov
popa
dec
fidivrs
mov
lret
rcrb
cmpsb
sbb
xchg
mov
xor
and
sub
sub
xchg
loopne
sbb
adc
cwtl
aas
loope
inc
mov
jnp
dec
inc
popa
cs
dec
dec
mov
mov
push
add
rorl
cmc
jle
lods
stc
jns
mov
fsubp
cmp
loopne
dec
cmp
enter
add
push
inc
sarl
mov
mov
stos
rcll
jae
push
dec
cmovb
and
testl
ljmp
dec
std
inc
cltd
xchg
pop
and
jp
and
push
scas
xchg
lds
sbb
mov
fsubs
inc
call
stc
hlt
inc
rcll
sarb
mov
sarl
fiaddl
xchg
xchg
and
dec
pop
imul
movsb
or
testl
push
ja
mov
outsb
and
cmc
in
and
jno
or
lods
push
lds
lock
das
pushf
add
repnz
ficompl
mov
sub
lret
dec
push
mov
mov
ljmp
aaa
xchg
cmp
xchg
lock
sbb
pop
outsb
repnz
testl
or
shll
mov
push
das
arpl
into
xorb
setbe
xchg
push
push
lds
subb
scas
outsl
mov
movsl
nop
clc
cs
xchg
jg
inc
fbld
fidivs
jae
mov
nop
sbb
mov
fs
es
imul
sbb
inc
mov
fnstenv
and
mov
sti
jl
cmpb
add
inc
adc
jb
cld
test
pop
das
mov
cmpsl
loope
mov
insb
jle
stc
inc
nop
out
iret
aas
cmpsl
call
jmp
add
in
push
repnz
cld
cmp
xor
jg
mov
add
push
cmpsl
loop
fnsave
push
add
dec
jmp
out
test
je
insl
es
inc
bt
xor
repz
lds
push
push
cli
adc
shll
mov
testb
sub
inc
pop
or
mov
shrb
sbb
fidivrl
pop
ss
pop
ja,pn
jne
int
dec
push
test
into
xor
sbb
imul
mov
call
sbb
shlb
into
mov
sbb
dec
inc
das
out
test
jg
ror
dec
mov
or
cli
mov
xchg
imul
push
mov
gs
hlt
mov
pushf
iret
insl
loopne
push
fistl
out
dec
imul
mov
cmp
fisubl
xchg
test
imul
push
in
jne
add
popf
dec
js
pop
lret
push
jns
repnz
xor
fidivs
mov
push
icebp
jle
nop
addr16
mov
sub
rclb
xor
outsl
mov
mov
dec
jle
pop
xchg
lret
arpl
or
out
repz
mov
inc
adc
mov
fnstenv
cmc
adcb
sbb
imul
sti
mov
mov
lret
sbb
add
mov
cmp
out
dec
call
movsl
xor
scas
dec
xor
lcall
push
xchg
int
bound
sbb
seta
mov
gs
add
nop
dec
and
push
mov
push
jns
sbb
cwtl
aam
aam
add
lret
push
mov
imulb
xor
cld
mov
jb
leave
mov
pop
inc
add
out
js
bound
sub
sub
mov
jbe
in
add
sbb
int
movsl
test
cli
fldt
jle
mov
xor
test
add
jp
mov
jb
pop
xor
cmpsl
imul
push
push
sti
or
mov
sbb
push
aas
xor
ljmp
mov
bound
outsb
mov
mov
inc
cwtl
out
cmp
dec
lods
jle
sub
xor
aas
insl
imul
data16
orl
jb
ret
lret
ja
shlb
popa
mov
add
jae
or
rolb
sub
add
cmp
out
xchg
cmp
pop
lret
mov
in
popa
fnstsw
pop
jb
in
lcall
cmp
push
xchg
mov
insb
icebp
stos
inc
and
sti
dec
ss
fs
mov
out
mov
lahf
enter
sub
hlt
or
ja
andl
fldcw
xor
int3
or
test
cmp
push
mov
fwait
sbb
iret
mov
and
mov
mov
cmp
lret
sub
shrb
decl
dec
jecxz
fldenv
sub
aas
pop
mov
push
aad
std
mov
mov
in
dec
push
sbb
pop
fnstenv
dec
shrl
add
xchg
ror
jl
out
jno
std
mov
pop
cmpsl
sbb
jecxz
jno
xor
pop
sub
xchg
das
jbe
repz
cmp
insb
push
negl
leave
or
jnp
xor
int
jnp
xchg
pop
mov
pop
adc
mov
icebp
aam
jnp
aaa
sbb
stc
in
repz
xchg
lcall
sub
xchg
push
in
aam
and
popf
jg
mull
imul
cmp
js
mov
add
xor
xchg
push
sbb
scas
clc
mov
in
roll
xor
and
fcomps
into
ljmp
xchg
es
sub
movsl
xor
pop
aam
in
push
sti
and
add
jbe
out
pop
push
xchg
hlt
movsb
adc
fs
push
inc
ficoml
jge
fimuls
inc
rcll
add
cmp
xor
xor
mov
lock
fdivrl
leave
or
cmp
movsb
fcmovne
push
xchg
dec
adc
pop
sub
mov
sbb
aaa
or
mov
in
in
mov
in
jg
add
sub
and
cmp
pop
or
push
dec
pushf
xchg
scas
test
fistps
loope
lock
mov
repnz
pusha
mov
sbb
imul
test
pop
stos
cmp
cmp
arpl
sbb
std
mov
push
pop
stos
nop
imul
clc
jecxz
inc
in
shr
and
add
sbb
cwtl
jno
icebp
mov
gs
mov
xor
je
lret
cmp
pop
mov
movb
inc
aaa
pusha
mov
imul
add
out
sub
cmp
sarb
cwtl
push
xchg
mov
xor
imul
push
iret
das
ret
imul
jl
jo
sbb
sar
out
int3
mov
add
jmp
gs
dec
scas
orb
adc
jno
or
mov
call
add
imul
inc
jle
sub
jnp
subb
pushf
xchg
imul
cltd
ja
fcmovnb
add
mov
or
push
and
sahf
ret
mov
ds
xchg
dec
lret
dec
mulb
fst
rorl
sub
stos
adc
cmp
sbb
and
jb
ret
mov
xchg
outsb
outsb
dec
loope
jnp
jo
add
xor
adc
cmp
fsubl
or
pop
sbb
mov
leave
xor
lods
adc
ds
mov
mov
bound
cmp
jmp
rcrb
stos
sbb
mov
adc
push
mov
lret
sbb
sbb
loop
pop
ret
test
out
jge
outsb
adc
lcall
int
mov
jns
jo
sbb
enter
shrb
xchg
adc
push
es
popf
push
je
loopne
pop
mov
scas
jl
jl
fstpt
dec
xor
rcll
cwtl
add
xor
or
xchg
or
xchg
call
jo
testl
lahf
stos
int
or
pop
jp
mov
push
movsl
pop
outsl
xlat
dec
mov
xchg
pop
movsl
pop
inc
or
push
dec
and
idivl
data16
repz
xchg
and
jns
jo
mov
adc
inc
divl
xlat
sahf
or
push
push
sti
mov
xchg
sbbb
ljmp
push
subps
ret
adc
jecxz
add
popf
int3
pushw
inc
mov
xchg
dec
sbb
movsl
cmpsl
ja
movsb
out
outsb
sbb
dec
es
xchg
lahf
pop
sbb
dec
cmp
repnz
cmp
outsb
jp
dec
and
in
test
mov
inc
jge
cmc
and
mov
pushl
clc
int
fstp
pop
xlat
inc
sub
cmp
add
push
test
lret
jnp
rclb
dec
jno
mov
sub
fnsave
mov
inc
gs
sbb
cmpsl
sub
sbb
adcb
adc
adc
xchg
push
pop
hlt
add
push
sbb
sbb
cld
or
xorl
rolb
fwait
incl
loopne
jae
or
movsl
inc
movsl
int
out
roll
inc
inc
mov
dec
test
sub
pop
push
scas
lods
in
movsl
mov
jne
lea
sti
xor
xor
aaa
enter
adc
pop
cmp
mov
loop
out
jbe
fisttps
mov
mov
pop
fwait
xlat
xor
xchg
test
clc
shll
movl
cmc
sahf
loop
mov
or
and
mov
test
mov
mov
add
jge
insb
cmpsl
imul
jbe
push
lock
cli
movsl
jge
mov
add
pop
fisubs
stc
inc
mov
movsl
ss
mov
aad
pop
lret
ss
lock
data16
shll
pusha
and
xor
stos
xor
jecxz,pt
jmp
loopne
sub
mov
sub
inc
cwtl
in
push
mov
xchg
cmp
hlt
xchg
jbe
dec
jmp
shrb
pop
push
xlat
sti
out
xor
mov
dec
aad
pop
cmp
xor
mov
scas
data16
mov
movsl
mov
movb
out
aam
test
sbb
scas
les
mov
fbld
xchg
iret
std
aaa
ret
xchg
cmp
add
jae
mov
fwait
or
xchg
jns
xlat
int
mov
popa
push
cmp
adc
orl
sbb
push
or
stos
cmp
in
pop
sub
cmp
cmpsb
rol
mov
notb
pop
mov
inc
lea
fwait
push
aam
mov
insb
testb
mov
mov
flds
xor
mov
mov
addb
add
xor
xchg
call
inc
loop
lock
adc
jp
adc
insb
jne
fcmovu
push
sbb
jbe
dec
inc
arpl
push
bound
pop
mov
icebp
adc
push
cld
jmp
or
jg
mov
test
sbb
fcomi
test
inc
leave
dec
xchg
jge
push
jne
cli
jb
dec
mov
shll
jecxz
and
lcall
xorb
lcall
aad
cmp
cli
push
ja
or
cmpsb
hlt
mov
into
js
shrb
mov
dec
sub
sub
xlat
adc
cmp
fwait
xchg
test
cltd
ret
cmp
aad
inc
stc
inc
lret
push
lock
jbe
stc
and
dec
push
enter
rcr
ret
stc
mov
jo
test
addr16
dec
cmpsl
sbb
pop
fnsave
mov
jno
fiadds
jns
vaddss
push
inc
rcrb
leave
cwtl
xchg
leave
cmp
jp
sub
out
xlat
mul
shl
lret
scas
push
xor
mov
push
add
test
test
fdivs
mov
and
sbb
neg
aad
sub
push
adc
repz
stos
or
jmp
sar
lds
push
aaa
add
sti
das
mov
jb
in
xchg
hlt
mov
jg
mov
js
sub
cvttps2pi
addr16
cs
lds
pop
rol
and
and
push
mov
or
cmp
xlat
jge
or
in
int
fs
dec
push
and
jbe
cltd
sbb
bound
pop
hlt
jo
and
lret
fcoml
test
cmp
or
movsb
push
mov
pop
push
jge
sarb
mov
mov
or
add
fdivrl
std
out
xchg
push
in
cmp
adc
cmp
jg
pop
sub
in
aas
jg
jmp
fwait
mov
loope
sbb
adc
es
sbb
out
int
xchg
lods
xchg
insb
cmp
das
jb
mov
pop
lds
mov
call
stos
cmp
icebp
shr
out
push
iret
and
inc
add
sbb
ja
sub
nop
or
push
jns
imul
jle
adc
iret
lret
sbb
sbb
clc
rcrb
mov
cmp
lahf
xorl
mov
cmpsb
sbb
xchg
es
mov
lods
cmp
out
add
xchg
xchg
repnz
sbb
xor
in
test
mov
and
popa
data16
adc
test
in
dec
movsl
data16
xchg
lds
mov
jbe
sti
mov
stos
sub
mov
cmpsb
sub
rclb
cs
inc
add
fdivrp
sub
jbe
xchg
mov
cmp
hlt
cmpsb
xor
clc
rorb
sub
out
or
rorl
mov
cmp
xchg
mov
fstpl
push
popf
fwait
mov
lret
jns
push
sub
imulb
loop
xor
pop
xchg
sub
out
mul
or
xlat
popf
add
mov
inc
popa
sub
mov
dec
movsb
mov
shl
mov
loope
outsb
add
in
xor
mov
mov
lret
adc
push
cmp
andl
in
shll
xchg
ret
hlt
ja
mov
cmp
hlt
or
popf
inc
or
ret
sbb
pop
cli
std
mov
mov
das
insl
push
push
push
inc
pop
movsb
cld
in
xor
push
dec
sahf
jno
scas
push
mov
sub
mov
imul
test
leave
inc
jne
xor
adc
xor
and
jge
nop
lods
mov
push
sti
stc
adc
or
pop
push
dec
xchg
xor
add
mov
jae
dec
adc
dec
dec
sbb
call
push
insb
mov
fstpt
push
push
mov
push
dec
mov
mov
in
sbb
xorl
inc
aad
xadd
insb
xchg
roll
xor
dec
aam
push
gs
in
inc
lcall
pop
mov
test
pop
stc
dec
jmp
ret
and
stos
movsb
test
xorl
mov
scas
pmuludq
in
mov
jg
mov
out
fwait
outsb
mov
fwait
push
mov
shr
call
sub
call
or
inc
fldenv
in
jecxz
dec
dec
cmp
ljmp
jno
fsubl
in
and
sub
out
ret
shl
stc
and
or
xchg
inc
lea
pop
add
addb
das
adc
jnp
in
xor
nop
sub
sbb
icebp
mov
mov
mov
mov
imull
lea
fadds
ja
or
fwait
enter
xor
in
movsb
sti
and
dec
repz
jecxz
mov
cld
out
ficoml
or
enter
js
cmc
jp
into
cli
cmp
xchg
lock
dec
daa
stc
pop
aas
unpckhps
xchg
fisttpl
out
push
mov
mov
push
push
dec
into
dec
push
inc
sub
ret
adc
sbb
add
jb
cwtl
xor
lods
pop
lahf
repnz
push
mov
mov
ss
daa
push
scas
push
add
cmpsb
out
lea
mov
jne
bound
cmpsl
fisubl
jb
lds
jno
inc
jg
into
xchg
ja
xor
int3
jge
into
pop
mov
mov
xchg
cmp
sti
outsb
fs
rclb
test
inc
mov
ret
lock
lcall
inc
in
dec
push
push
mov
cs
jp
xchg
jno
inc
dec
cwtl
nop
mov
and
mov
insl
add
push
cmp
dec
je
das
push
ret
jmp
ss
mov
mov
movsb
int3
mov
mov
outsl
adc
and
inc
iret
push
nop
or
push
outsb
sbb
sbb
add
xchg
popa
and
mov
pop
scas
scas
xorb
imul
aam
pop
ds
mov
in
cmp
fsubrs
and
in
sub
cs
lds
add
push
mov
fisubrl
ljmp
push
cmp
mov
jns
icebp
mov
dec
aas
push
jle
mov
sub
jecxz
push
jl
lahf
jg
rorl
icebp
jge
and
faddl
xor
sub
ret
outsb
cwtl
dec
js
xlat
or
dec
or
clc
enter
inc
repz
or
call
je
mov
pop
mov
add
add
jg
arpl
or
inc
fsts
xchg
movsl
mov
aas
cwtl
popf
push
rorl
pop
adc
lret
insl
out
into
fldcw
cs
into
add
pop
sarb
sbb
je
fcoml
xchg
xor
cli
pop
scas
rorb
or
jg
sub
push
adc
sub
stos
movsb
mov
sbb
in
mov
sbb
dec
and
xchg
stc
and
pop
scas
jle
cmp
movsb
push
push
sub
adc
mov
and
mov
jnp
mov
mov
test
ljmp
sti
rorb
out
xor
xchg
cmp
out
shl
or
insb
rcrb
and
in
or
je
pushf
nop
jmp
clc
jno
xor
sbb
in
mov
aaa
xor
add
lods
and
jecxz
lret
dec
xor
jl
mov
push
ja
sbb
cmpsb
cltd
fst
xchg
enter
in
xchg
jnp
ficoml
mov
push
sbb
fcmovne
cmp
xchg
jne
mov
or
push
mov
mov
outsb
sarb
mov
adc
pop
jae
notl
push
in
or
xor
fists
ret
jno
mov
cmp
mov
or
push
test
xchg
fcoml
rcr
dec
mov
dec
mov
das
and
add
mov
push
mov
or
outsl
push
or
repz
sub
call
icebp
in
in
mov
pop
push
int
jle
jmp
dec
or
dec
stc
ret
fcompl
or
jb
cmc
sbb
divl
out
loope
in
jecxz
les
insl
jp
imul
mov
rcl
je
mov
insl
xor
subl
aad
call
addr16
shl
or
push
xlat
xchg
or
mov
xor
sub
jns
das
jle
popf
je
popf
std
push
pop
daa
sahf
bound
adc
outsb
cmpsb
xor
pop
mov
mov
lret
lret
jnp
mov
sub
jno
fpatan
movsb
cwtl
adc
cmpsb
shll
sbb
or
insb
in
adc
shlb
cmc
insl
es
test
lea
outsb
dec
js
outsl
or
dec
imul
adc
insb
fbstp
sti
scas
add
in
pop
xlat
mov
adcb
xor
ret
cmp
sahf
dec
scas
sbb
stos
rclb
fwait
dec
lret
jbe
mov
movsb
lods
leave
cmp
leave
inc
into
cmpsl
cmp
imul
inc
inc
xor
push
insl
pop
fildll
enter
push
imul
repnz
jp
pop
sub
ret
dec
movb
mov
cmp
clc
inc
mov
lahf
sarb
int3
imulb
xchg
out
mov
lcall
or
icebp
movsb
or
leave
arpl
push
sbb
jns
push
mov
pushf
pop
jno
sarb
mov
lcall
imul
adc
add
mov
fimull
pop
mov
mov
pop
adc
inc
ja
jb
psubb
push
or
pop
mov
imul
nop
psubsw
xchg
aaa
dec
lea
sbb
jg
mov
outsl
xchg
enter
loope
pusha
dec
sub
nop
cmp
jnp
mov
popa
sub
addr16
enter
movsl
xor
mov
mov
test
repnz
nop
fmul
mov
cmp
jp
ljmp
out
adc
jl
test
add
add
loop
xchg
lret
test
xor
pop
adc
pop
mov
cmp
mov
inc
out
stos
scas
stos
pop
sbb
and
in
or
sbb
jle
adc
les
mov
xchg
js
out
lea
adc
xchg
push
in
cld
mov
add
or
dec
mov
imul
xchg
pop
push
adc
cld
and
fs
std
xchg
out
fwait
lcall
sahf
notb
add
push
addr16
mov
nop
pop
and
mov
pop
ja
shld
out
mov
cmp
push
mov
sbb
push
stc
rcr
outsb
pop
rorl
xchg
pop
mov
test
mov
xchg
aaa
pop
cmpsb
add
or
aam
or
or
mov
into
xchg
dec
pop
push
jmp
ficoml
loope
jle
adc
mov
mov
xchg
adc
mov
les
mov
add
insb
mov
ljmp
sub
frstor
insl
add
dec
dec
imul
push
js
repnz
xor
xor
inc
data16
mov
push
jge,pt
jle
or
xor
mov
sbb
dec
dec
jb
aad
mov
and
lods
jns
mov
mov
loope
sbb
mov
mov
mov
popf
xchg
pop
fistpll
sbb
xor
jmp
jbe
inc
inc
pop
inc
pop
rol
add
add
add
arpl
push
in
shl
fnstcw
pusha
rorb
push
push
lock
pop
in
jo
sbb
sub
rolb
lods
fildll
jb
test
mov
rol
nop
or
mov
mov
dec
pcmpeqw
cmp
mov
test
mov
mov
ds
add
les
pop
aas
adc
jmp
in
jle
jbe
xor
in
sbb
pop
cltd
sbb
test
fildl
or
push
jae
cltd
xorb
rorl
popf
lcall
xchg
fistpll
js
out
std
xchg
sub
pop
loopne
mov
push
sbb
and
push
in
lret
mov
mov
iret
pmaxub
jne
xor
cli
or
pop
lret
push
push
mov
xor
adc
mov
popl
mov
out
addl
jbe
leave
shlb
sti
inc
and
leave
mov
test
or
jb
out
cmp
fidivs
fwait
pop
out
lea
cmp
jmp
add
fstpt
add
sbb
sbb
sub
sub
xorl
arpl
scas
add
ret
mov
cmp
and
testl
xor
adc
pushf
mov
mov
ljmp
push
pop
xor
sarl
in
or
xor
xchg
lcall
add
nop
pop
inc
pop
loopne
stc
dec
cmc
mov
mov
pushl
jbe
push
push
xor
jge
cmp
out
fucom
cmp
popa
or
jae
in
mov
pop
or
subb
imul
cmpsb
lds
ss
ds
int
outsb
mov
or
add
mov
xchg
bnd
dec
xchg
xor
imull
js
mov
xchg
push
sub
dec
pop
outsb
sbb
pop
ss
ss
inc
adc
push
push
loopne
fwait
dec
decb
xchg
or
test
mov
lods
inc
mov
out
je
push
pop
sub
jns
dec
std
testb
mov
dec
pop
fs
push
sarl
lds
xor
imulb
add
movsb
lret
dec
cmovge
mov
cmp
inc
testl
dec
imul
andl
jae
mov
add
imul
hlt
jge
cmpsl
mov
mov
idivl
andb
jo
test
xorb
scas
mov
mov
and
lock
push
xor
pmovmskb
loop
xchg
pop
sahf
outsl
aaa
mov
mov
test
add
dec
push
inc
or
das
jb
jmp
scas
cmp
test
insb
insb
out
push
jg
adc
jae
nop
inc
pushf
cmpl
sub
cmp
xchg
push
es
lea
cmp
fwait
pop
mov
pop
dec
jns
sub
rcrl
pop
mov
stos
sbb
cltd
in
addr16
push
and
incl
repz
ss
xor
fs
fwait
cmpsl
test
outsb
shrl
dec
mov
test
fidivl
xor
pop
fs
dec
sub
cmp
xor
and
jb
lock
sub
movsl
cld
lods
imul
stc
movsl
imulb
fmul
sbb
sbb
jmp
sbb
nop
aas
icebp
inc
sbb
push
bound
dec
pop
data16
mov
sub
rep
xchg
enter
or
push
cs
xchg
adc
arpl
fildll
mov
and
sahf
aad
loopne
xor
sbb
or
rorb
test
jl
jge
inc
mov
dec
add
cmp
cmp
push
arpl
mov
mov
sti
and
add
and
jno
inc
hlt
into
dec
lret
mov
inc
or
jecxz
inc
mov
lret
sub
in
add
push
dec
push
movsl
add
adc
or
inc
in
aas
jmp
pop
jb
test
out
lcall
sbb
pop
pop
mov
enter
mov
into
adc
cs
cmp
push
xor
mov
das
fnsetpm(287
pop
out
mov
mov
sub
xlat
cmpsb
int3
sti
in
loopne
jno
dec
loop
lret
pop
stc
pushf
push
mov
cwtl
mov
jae
imul
adc
addl
xchg
call
icebp
in
cmp
or
negl
and
ret
and
sub
clc
call
and
test
push
fmull
jo
bound
mov
stc
out
insb
out
push
push
in
lock
mov
push
cmp
add
stc
enterw
lcall
aas
jno
scas
push
inc
mov
adc
ss
ss
sub
xchg
loopne
cli
inc
aad
fldenv
sub
mull
nop
jne
cmpsl
repz
mov
xor
icebp
mov
inc
add
and
pushf
mov
fildl
dec
mov
xchg
ja
jne
sar
pop
clc
repz
stos
les
imul
repz
sub
sub
scas
dec
lods
subb
lea
dec
stc
pop
cmp
dec
xor
sti
ljmp
pusha
cmpsb
lea
out
mov
push
loope
push
xchg
mov
cmp
in
idivb
mov
xchg
add
lahf
sub
test
dec
enter
movsb
dec
cmpsb
push
jns
cmc
aad
out
mov
jmp
cs
and
loopne
enter
or
aas
push
dec
rcl
mov
pop
sarl
shrb
jecxz
xor
cmpsl
test
pop
push
dec
mov
aam
adcl
push
dec
out
stc
adc
int3
in
sub
mov
sbb
jecxz
xor
fbstp
jns
lock
outsl
push
lods
loopne
mov
cmp
scas
sbb
sub
inc
into
fdivp
aaa
jge
mov
pop
inc
stos
repnz
inc
outsb
cltd
fstpt
call
jo
sub
jp
add
sahf
bswap
outsb
mov
inc
and
rdpmc
stos
fcmovne
xor
out
aaa
clc
sub
jae
int
or
sahf
dec
add
push
fistpll
cmpsl
jo
adc
pop
daa
outsb
cmpsb
dec
sbb
pop
mov
pushf
pop
mov
fwait
sbb
mov
orb
sbb
out
lcall
lea
into
mov
lret
lock
jne
clc
lret
rclb
sbb
sub
xor
lods
lds
lods
cmp
in
push
leave
out
inc
lret
mov
dec
arpl
and
add
mov
adc
aaa
mov
lea
push
push
mov
lods
adc
add
int
cmc
jne,pn
popf
pop
adc
dec
test
into
je
lahf
dec
icebp
stos
mulb
mov
mov
in
xor
subb
movsb
jnp
orb
loop
xor
fwait
neg
repnz
xor
lds
cmp
sti
pusha
sub
pop
call
xchg
xlat
cli
jecxz
nop
into
mov
int3
out
mov
and
rclb
call
jnp
xchg
push
inc
mov
or
mov
fbstp
xor
pop
dec
push
addr16
xchg
push
mov
sahf
sbb
stc
sub
cli
dec
lods
jnp,pn
pop
mov
bound
popf
xchg
or
decb
lods
lds
sahf
xchg
je
and
insl
xchg
dec
in
mov
jmp
js
cmp
inc
xchg
call
sub
stc
cmp
or
mov
bound
aas
push
fists
sbb
daa
test
dec
jb
inc
fiadds
push
ss
mov
adc
jle
lret
outsl
pop
jmp
push
int
insl
or
mov
pop
testb
scas
xchg
cmpsl
loope
jp
insl
sbb
push
insl
xchg
rolb
imul
loop
lock
add
sub
push
cld
pop
adc
fidivrl
xchg
orl
pop
frstor
mov
orb
mov
adc
adc
or
mov
jo
mov
sub
mov
jno
sbb
lahf
imul
jbe
sti
add
xchg
mov
push
mov
in
pushf
mov
jns
jo
jbe
pop
mov
fwait
jae
sbb
pop
push
or
dec
xchg
push
mov
js
xor
pop
lcall
push
adc
ja
or
outsb
movsl
dec
sbb
pop
push
inc
push
lock
es
xor
fmull
push
shr
xor
cmp
fmuls
mov
stos
lret
and
and
scas
jp
ss
jmp
fidivrs
dec
inc
and
enter
and
pop
xorl
mov
sbb
mov
pop
lock
push
test
cmp
xor
xchg
stos
push
and
mov
lods
out
jp
insb
cld
inc
push
sbb
mov
add
or
xor
mov
imul
cmp
aaa
xchg
aas
xchg
test
daa
repz
and
mov
mov
cmp
adc
je
mov
cld
bound
stos
mov
cmp
jmp
stc
lea
je
idivb
pop
leave
out
lret
test
xor
movsl
ljmp
dec
or
sbb
ss
int
jno
mov
sbb
ret
negl
pushl
pop
and
mov
jmp
idivl
xor
inc
loopne
test
loope
fstl
mov
sbb
xor
pop
sub
lret
test
mov
cwtl
xchg
mov
daa
cmp
cmp
mov
mov
scas
data16
jae
lods
xchg
mov
in
push
cmp
lahf
mov
fidivl
cmp
mov
inc
pop
lret
cmp
cmp
xor
rcrl
dec
insb
cmc
stos
adcl
inc
adc
xchg
lret
pop
repnz
cli
push
mov
lret
das
and
out
adc
enter
std
cld
mov
sub
pop
sbb
and
pop
mov
cmp
jecxz
push
enter
xor
lods
mov
xchg
sub
adc
jbe
mov
out
cmpsl
imul
lds
cmpb
push
jle
xchg
adc
dec
pop
pushf
lret
and
jle
aam
lahf
xchg
cmp
xchg
fwait
enter
movsb
dec
pop
pop
lahf
out
fnsave
scas
pushf
jge
sbb
cmc
and
in
lahf
add
jg
shrb
int
dec
in
jmp
je
mull
xor
mov
mov
sbb
inc
pusha
cltd
fwait
sub
push
shr
pop
cmc
sub
sub
jbe
sub
mov
icebp
int3
mov
fdivs
and
inc
data16
notl
pop
aad
icebp
test
sub
cli
xchg
mov
xor
ja
or
imul
movsl
stos
addr16
mov
xor
mov
dec
mov
shll
inc
xor
nop
mov
mulb
daa
movsb
push
es
and
add
aaa
das
xchg
mov
out
stos
out
dec
sub
pop
push
xchg
cld
adc
cwtl
lahf
in
push
ret
ss
fwait
cmpsl
ja
out
jae
or
imul
xor
jo
push
push
ss
pusha
stos
mov
inc
inc
pop
ret
jo
sarl
hlt
popa
mov
pop
mov
lea
sbb
push
in
push
or
or
push
and
push
add
test
jle
xchg
xchg
rorb
fsubrs
xor
iret
mov
push
fisttpl
gs
lock
jae
leave
test
cmp
and
js
pop
push
cmp
mov
cmp
cmp
je
mov
mov
mov
dec
jecxz
int
sahf
addr16
xor
inc
add
xchg
mov
jnp
adc
push
push
mov
pop
cld
add
incb
movhps
dec
data16
inc
movsl
loop
hlt
sub
push
cltd
test
pop
shr
ljmp
dec
lods
vpdpwssd
test
inc
hlt
rolb
int
sbb
mov
cmp
lcall
test
fldt
pop
cld
in
jne
and
and
jecxz
movsl
fistpll
cltd
pop
xchg
xchg
insl
sbb
sub
insb
push
fdivl
fwait
cmp
lods
cmp
push
mov
insl
aas
lods
dec
loop
out
push
test
std
adc
lods
pop
push
popf
xchg
or
adc
loopne
mov
mov
add
lret
push
shlb
lret
pop
cmp
in
inc
cli
sub
repnz
dec
into
lods
ds
and
in
cmc
pop
lahf
xchg
out
test
je
push
mov
movsb
dec
and
jno
jp
mov
cmp
fidivrl
ljmp
cmp
outsb
mov
in
or
sbb
mov
xchg
and
ret
cwtl
jae
pop
sahf
and
sub
outsl
gs
and
test
cmpsb
jne
and
mov
data16
adcl
aad
add
lock
mov
cmp
dec
testl
fistpl
clc
adc
push
cs
adc
into
lea
mov
mov
inc
push
lahf
mov
jae
insl
mov
sbb
sub
pop
aad
cli
push
jg
stos
mov
shrb
fisubrl
mov
jecxz
repnz
inc
mov
fnstcw
dec
mov
stc
fcoml
sahf
xor
nop
xchg
aaa
test
daa
mov
mov
sti
jg
pop
jb
popf
aas
sub
into
xchg
dec
xor
pop
inc
push
mov
nop
dec
mov
scas
jmp
inc
cli
popf
xor
je
xchg
popf
js
cmpsb
testb
adc
mov
pop
ljmp
in
inc
ja
int3
fisubs
sub
sub
adc
mov
and
js
or
pop
jmp
mov
add
dec
cmc
nop
cmp
inc
cmpsb
leave
imul
ja
movsb
sub
xorl
adc
ja
pop
shrb
lret
fwait
mov
out
mov
cli
jg
jecxz
fdiv
stos
lahf
mov
mov
daa
lcall
mov
jnp
add
dec
repz
adc
lret
sub
jo
and
shrb
addr16
fs
nop
and
mov
xchg
mov
sbb
jns
dec
dec
xor
addr16
out
push
sub
loope
int
push
jne
xor
sahf
je
dec
insl
jge
jo
cmp
jns
iret
sbb
cs
push
in
jge
xchg
dec
jne
test
xchg
movsb
gs
add
jb
sbb
aam
movsl
mov
inc
add
adcb
pop
pop
mov
das
inc
jecxz
and
mov
dec
adc
repz
leave
cmp
lea
xchg
xor
jo
pop
fbld
ss
pop
inc
push
add
jae
xchg
pop
jo
inc
mov
lods
or
popf
jg
enter
mov
cmc
ljmp
std
pop
pop
rcrb
movzwl
out
adc
add
sub
and
add
adc
mov
rep
xchg
dec
int3
or
imul
inc
cmpsb
inc
jae
repz
icebp
jno
scas
adc
or
out
lret
lcall
popf
push
cmpsb
iret
pop
insl
mov
add
or
es
mov
test
clc
sub
xor
int3
push
and
out
push
inc
or
lcall
mov
jge
mov
push
movsl
rep
std
sub
jns
clc
jp
mov
sub
cmp
lock
aaa
test
mov
inc
xor
mov
push
push
decl
add
fwait
add
fstps
repnz
mov
mov
lret
mov
jg
sahf
ss
pop
pop
popa
xchg
insb
sub
pusha
shrb
cmp
ss
cmp
dec
dec
ret
pop
cltd
xchg
fmuls
adc
std
pusha
bound
mov
movsb
or
ljmp
rcrl
sbb
sbb
mov
imul
icebp
stos
push
sbb
repz
stos
fistpl
jmp
cld
xchg
mov
iret
decb
mov
mov
jne
cmp
mov
loop
xchg
out
out
mov
and
pop
into
xchg
dec
add
add
xor
push
jmp
sub
pop
xor
ljmp
nop
or
dec
add
lods
out
inc
mov
das
stc
mov
mov
mov
test
pop
int
aam
out
and
mov
xchg
push
lret
jge
repz
add
insb
outsb
ret
rcll
in
gs
sub
sub
imul
sub
imul
in
add
jmp
push
jnp
insb
xlat
pop
icebp
mov
popa
dec
lds
mov
mov
sub
negb
mov
push
shll
cs
imul
sbb
pushf
test
sahf
and
xlat
sub
pushf
add
stc
iret
jle
fidivrl
das
dec
sub
adc
push
ja
divb
fs
test
loope
cmp
adc
mov
and
popf
mov
adc
xchg
jae
push
mov
xor
mov
mov
jmp
dec
jne
and
in
popf
xchg
data16
loope
test
push
cmc
sub
mov
xor
xchg
mov
mov
sti
add
test
repz
jp
movsl
das
cmpsb
mov
mov
xor
in
repnz
aaa
jle
push
inc
adc
sarb
pusha
fdivl
pop
add
cmpsb
push
dec
push
dec
and
push
pop
je
mov
das
mov
jp
mov
les
dec
fidivrl
cmpsb
movsb
push
add
ja
call
mov
cwtl
push
pop
adcb
sub
cmpsb
nop
push
xchg
inc
push
in
xchg
mov
test
loopne
jecxz
adc
movsl
lcall
test
cltd
ss
cmp
push
imul
imul
es
in
and
xchg
cmp
push
in
add
and
inc
jp
test
arpl
pop
push
rcll
dec
mov
aas
pop
andb
stc
out
push
dec
jo
rcl
outsl
adc
lea
stos
mov
and
jecxz
shll
or
push
mov
push
mov
push
pop
ret
sub
push
fists
pop
or
xor
scas
into
imul
or
rcrb
mov
mov
push
push
aas
stos
mov
ljmp
ja
mov
mov
es
or
jle
sbb
sub
loop
sahf
call
call
roll
mov
fs
fdivrs
cmpsl
inc
les
out
sarl
pop
es
ss
aaa
pop
adc
dec
inc
mov
into
sbb
inc
push
es
lcall
cmp
scas
sahf
jnp
stos
ret
in
and
call
jne
outsl
jl
dec
fnsave
jl
mov
cmp
sbb
sarb
adc
stos
popa
add
dec
or
test
aam
mov
icebp
sub
loop
dec
shl
dec
outsl
shlb
pop
out
xor
cmp
mov
xor
push
xlat
ss
mov
mov
xchg
std
aaa
fstpt
xor
bound
push
cmp
lret
inc
dec
xchg
xor
jmp
fwait
cltd
daa
and
jo
jne
jg
sub
jmp
xchg
ds
repz
xor
add
pushf
dec
loopne
dec
sbb
imul
cld
pusha
push
mov
loopne
int3
es
out
daa
jl
in
adc
dec
test
push
adc
int
clc
xor
cmp
fsubl
call
insb
and
ret
js
adc
xchg
leave
sbb
ret
test
sti
or
xchg
sbb
mov
in
fwait
sbb
jp
mov
ds
sbb
ja
jl
int
pop
loope
icebp
pop
sub
das
xor
hlt
outsb
je
mov
jne
lods
ret
cmp
daa
add
popa
lods
stc
inc
mov
xor
pushf
push
daa
mov
push
sbb
mov
leave
ja
rorb
stos
outsb
xlat
sbb
jne
push
adc
fsubr
lods
dec
ret
jno
inc
cmp
imul
push
mov
xchg
cmpsl
mov
cmp
jno
movsl
push
test
xor
cmp
push
sti
in
push
testb
mov
jo
push
mov
add
add
mov
inc
mov
outsb
leave
pop
jmp
insl
mov
sbb
rcr
mov
shlb
mov
ffree
mov
sbb
sbb
je
notl
mul
add
or
out
arpl
and
aam
andb
in
dec
outsb
inc
in
adc
ret
test
outsl
mov
mov
rorb
enter
shll
add
out
inc
std
das
jmp
lock
lahf
ror
and
stos
mov
adc
sar
sbb
cmp
cwtl
pop
pusha
mov
xor
call
pushf
out
dec
mov
repnz
mov
repz
xor
es
mov
stc
iret
xchg
xorl
xlat
test
dec
insb
xor
dec
pop
inc
mov
mov
repnz
lock
add
es
fistps
jno
jnp
cli
mov
or
add
ja
mov
pop
jbe
mov
jno
jle
lods
lret
fcmove
mov
push
sub
push
inc
decb
mov
data16
cmp
scas
or
jge
xor
repz
cmpsb
shll
adc
mov
popf
push
cmpsb
adc
mov
sub
cmp
pop
imul
add
pop
sbb
jns
and
in
inc
stos
xor
and
das
jnp
lahf
dec
femms
fidivl
dec
jp
repz
mov
pushf
cmpsb
aaa
gs
repnz
and
xor
pop
add
fdivrp
loope
ljmp
scas
add
xchg
aam
ljmp
xor
mov
nop
cmp
push
jg
pop
andb
iret
repnz
nop
sbb
std
sbb
push
xchg
push
push
aad
cmp
es
cmp
cs
mov
sub
call
sbb
mov
push
push
scas
push
sbb
jecxz
cli
testl
sbb
pop
add
imul
sub
and
lret
loop
or
sti
fsubrs
jmp
mov
dec
mov
inc
xor
xor
pop
lds
cmpsb
xor
sbb
jmp
test
imul
lahf
mov
loopne
xchg
mov
add
scas
mov
call
stos
stos
aas
scas
push
mov
pop
xor
and
pop
into
dec
sub
in
aaa
lcall
mov
aas
push
sub
bound
dec
pop
out
pop
outsl
gs
in
pop
test
je
bound
or
rcrl
jmp
stc
pop
adc
inc
mov
mov
stos
xor
adc
ja
aad
xchg
sub
pop
mov
push
pop
push
dec
inc
or
pop
fcoms
cmp
dec
hlt
mov
push
popf
cmp
subl
push
sub
jp
mov
jne
mov
adc
add
imul
out
lcall
int
movsb
and
jno
insl
add
jb
ret
jne
in
sub
sbb
fldt
fdivs
mov
and
xchg
lss
jo
insb
or
mov
lret
test
jmp
cmp
push
or
int
adc
andb
shrl
or
in
testb
aad
test
je
in
mov
ret
loopne
ljmp
adc
push
and
addl
mov
imul
in
icebp
clc
adc
mov
rclb
adc
and
fcoml
cwtl
sbb
xorl
sbb
in
rcll
jge
cmp
add
jle
lea
jns
mov
xchg
addb
out
lea
test
cmp
fcoml
shll
aaa
push
dec
lret
mov
xor
cmc
pop
adc
repz
add
clc
push
aaa
loopne
arpl
mov
push
xor
and
push
or
mov
sar
jmp
push
jno
aad
jbe
xchg
sub
sti
and
inc
push
xchg
mov
js
mov
sbb
incb
inc
mov
jo
icebp
sub
movsb
scas
jbe
or
sub
xchg
push
dec
outsl
cmp
sbb
js
mov
add
mov
cmp
movsb
rclb
pop
ja
adcl
inc
xchg
popf
lret
das
int
call
mov
mov
lods
push
outsl
xchg
xchg
repnz
jmp
mov
xchg
push
lds
adc
mov
or
sbb
push
add
fld
cmp
shr
xchg
in
ss
ret
pop
sbbl
in
mov
fisubl
adc
stos
and
cmc
and
push
cmpsl
aam
nop
dec
repz
mov
mov
icebp
mov
push
or
add
adc
xchg
fbstp
lahf
sub
pop
sbb
push
mov
pop
flds
fisubrl
or
out
rorb
in
popf
loop
mov
bound
dec
lret
arpl
xchg
fbld
inc
outsl
lret
xchg
dec
xchg
les
into
out
stos
jb
mov
movl
sbb
gs
inc
sub
insl
xlat
xor
scas
sbb
lock
fildll
inc
jecxz
lcall
jge
mov
and
aam
lahf
sbb
aas
lods
push
lret
dec
loopne
sahf
bound
cmp
inc
sub
mov
adcb
xor
or
ret
jmp
sub
test
push
push
hlt
mov
mov
mov
jmp
shrd
sahf
cmpsl
inc
icebp
shrb
out
ss
jnp
movsb
cmp
imul
sub
lahf
outsb
rolb
dec
stc
sbb
jae
jmp
xor
dec
sti
xchg
fdecstp
push
cmp
or
add
fstp
aam
ret
out
mov
xchg
mov
adc
sbb
xchg
sub
mov
leave
xor
sar
push
jno
cmp
dec
mov
xchg
and
adc
cltd
notl
out
call
xor
out
inc
or
jg
int
popf
sbb
push
repz
scas
shlb
xor
mov
lock
add
aam
xchg
fisttpll
sahf
jnp
dec
aaa
leave
xchg
and
clc
sbb
sub
out
cmp
push
loope
femms
jns
xchg
add
sub
popf
sbb
aad
mov
dec
or
sbb
sbb
mov
sub
sub
mov
mov
lock
mov
ficompl
sbbb
cltd
xchg
xor
jg
dec
and
adc
xor
scas
jg
jge
pop
push
inc
in
dec
sarl
pop
inc
xor
mov
in
jp
lcall
pop
xchg
mov
cmp
and
jge
xchg
push
xchg
mov
loope
mov
iret
xchg
arpl
push
lds
sbb
lret
enter
fldcw
push
xchg
sbb
nop
ss
cwtl
push
pushl
and
imul
int
xor
mov
push
jg
gs
dec
iret
lds
mov
outsb
inc
xchg
jp
inc
shl
xor
out
jae
inc
fistpl
movl
lcall
clc
cmp
cmp
and
mov
popf
fisubrs
mov
fs
jecxz
fwait
popf
lcall
in
pop
cmp
das
pusha
xchg
mov
adc
sbb
test
sbb
leave
mov
or
xchg
out
sub
mov
mov
out
fistpll
sbb
insl
xor
mov
jecxz
test
fmul
xor
scas
cmp
rolb
aas
in
loop
lock
mov
jge
xchg
lcall
repnz
shl
daa
pop
cmc
sub
cli
pushf
and
cmp
fwait
xchg
shrl
inc
and
fnstcw
mov
and
push
in
pop
or
jno
fiadds
rcrb
dec
sub
lods
fldt
mov
mov
pushf
push
push
rcrb
in
ret
roll
mov
adc
clc
cmp
or
lock
jp
aaa
and
testb
cmp
mov
jo
ret
inc
sub
cmp
in
dec
das
inc
jle
lock
movl
lods
sbb
outsl
cmp
push
cmpl
fisttpl
and
xlat
adc
cmpsl
stos
jbe
mov
testl
sbb
sbb
pop
inc
mul
mov
mov
rolb
mov
xor
mov
adc
cli
push
and
lahf
sbb
ds
dec
xchg
cmp
fsub
gs
in
stos
pop
pop
xor
iret
sbb
cwtl
rcrl
cld
mov
lods
in
loope
mov
cs
jne
lret
xor
aaa
adc
fmul
popa
inc
outsl
jecxz
pop
std
adc
adc
mov
push
xlat
push
cmp
xchg
sbb
push
jb
adc
pop
cltd
aam
mov
aaa
mov
fsubrs
push
gs
or
jg
dec
test
mov
mov
lret
and
gs
cld
cld
push
xor
test
dec
push
jge
pop
cmpsl
adcl
loopne
pop
push
and
inc
hlt
shrb
dec
mov
mov
rcl
add
je
insl
or
inc
cmc
dec
xchg
mov
cmp
jmp
out
out
fcoms
scas
pop
jge
mov
sarb
rorl
inc
pop
mov
in
movsb
dec
cmp
pminsw
lret
xchg
add
pop
inc
scas
jno
xchg
inc
sbb
add
mov
lods
lods
adc
jg
fnstsw
push
inc
das
cli
mov
lock
aaa
pop
xchg
xlat
jae
data16
out
bound
push
psubw
ret
aad
add
mov
fstp
fwait
negb
inc
cmp
pushf
enter
xor
ljmp
mov
lcall
mov
mov
jle
xchg
jne
cs
adc
mov
sub
mov
icebp
sub
or
add
sub
nop
bound
dec
ret
and
dec
stos
push
fldcw
int3
adc
lods
flds
in
push
mov
les
cmp
xchg
or
dec
insl
in
mov
mov
dec
repnz
xor
pop
pushw
sub
mov
pop
lock
jl
call
mov
pop
faddl
pop
mov
out
rorl
fdiv
push
mov
scas
sub
test
sub
insl
sbb
mov
aaa
push
int3
mov
pop
js
js
sahf
or
in
sub
in
add
push
cmp
xor
ret
movsl
push
xor
push
nop
mov
test
pushf
pop
mov
cld
imul
out
stos
add
cmp
daa
sbb
xor
pop
orb
inc
dec
adc
dec
mov
lret
lea
xchg
pusha
xor
bound
scas
and
jmp
adc
rolb
dec
mov
sbb
inc
xchg
xor
add
inc
mov
push
cmc
nop
stos
mov
fsubrs
inc
aad
sbb
imul
rolb
xor
jbe,pn
dec
sbb
pop
ss
adc
lods
enter
sbb
pop
push
aam
cwtl
fldenv
push
and
jmp
fucomip
adc
xor
inc
in
pop
loop
rcpps
and
sbb
repz
out
inc
push
popa
add
int
inc
xor
pop
xor
sbb
sub
xchg
xor
cmp
aas
cmp
push
icebp
mulps
adc
fwait
popf
rcl
mov
or
lcall
push
push
stos
repz
mov
add
imulb
add
repnz
or
int3
mov
outsb
into
leave
xor
sbb
popa
mulb
sub
loopne
lcall
fldcw
or
inc
adc
loopne
xor
leave
div
lret
inc
les
movsl
mov
cmp
xor
sahf
jnp
scas
das
mov
adc
fsubr
mov
cmc
mov
xor
jmp
cmp
mov
loope
jo
xchg
andb
xlat
enter
in
xchg
movsb
arpl
push
or
int3
fcmovnb
in
or
stos
pop
adc
test
mov
daa
jmp
int
cmp
leave
out
ljmp
loopne
outsl
in
xchg
dec
mov
push
cmpsl
push
cmpsl
sahf
test
pop
inc
inc
push
sbb
cmp
mov
in
pop
int3
dec
sbb
mov
jg
scas
dec
fstl
add
sbb
pop
cltd
sbb
jno
aam
fisubl
in
ret
loope
test
or
push
adc
pushf
push
je
pop
mov
iret
pop
sub
or
sub
and
xchg
sti
movl
fdivl
cli
and
jae
and
mov
in
add
cmp
lret
add
sbb
dec
jbe
mov
out
insb
cmpsl
stos
aad
cmp
pop
scas
out
pop
pop
or
pop
dec
inc
or
fimuls
out
je
pop
mov
daa
pop
dec
rcr
dec
sbb
stos
xchg
mov
repz
cmp
xchg
push
jmp
cmp
dec
test
add
or
mov
pop
stc
shlb
les
fldenv
lea
test
push
push
test
add
add
test
clc
sub
push
iret
int3
mov
outsb
shlb
sub
les
xlat
les
repnz
lea
out
test
push
push
mov
mov
jno
notl
insb
ret
sti
aam
enter
jge
mov
push
js
jo
add
out
dec
and
ss
cltd
pop
push
mov
fchs
xchg
rol
fidivrl
btc
arpl
and
ds
into
jns
bound
out
sub
mov
daa
sub
inc
fiaddl
cmpsl
ja
push
daa
jmp
push
js
out
mov
push
pop
mov
insb
out
fldcw
sub
xchg
add
in
je
sub
imulb
mov
mov
cmpsl
ret
mulb
cmp
and
popf
int
iret
mov
cld
les
sbb
inc
repz
int
ja
test
jo
push
and
inc
lods
cld
mov
hlt
jl
jbe
hlt
dec
cld
sub
xor
or
jl
mov
fwait
and
jb
mov
add
or
adc
jb
fsubp
jb
ss
ret
js
mov
jg
push
adc
out
sbb
mov
arpl
mov
xchg
icebp
and
andl
mov
xchg
push
add
pop
scas
orb
cmp
dec
mov
imul
inc
ud2
xchg
mov
and
pop
jns
pop
jecxz
push
dec
or
sub
loopne
call
cmc
mov
mov
xchg
cli
sbb
leave
xor
jae
sti
in
cmp
ds
adc
shll
neg
cmp
bound
jp
stos
flds
notb
test
sub
rcrb
loop
cmp
push
std
xor
inc
cwtl
mov
jb
mulb
scas
mov
xchg
call
repnz
fnop
jns
fcoml
into
pop
cs
adc
dec
inc
mov
sbb
push
cmp
jg
xchg
popf
out
sub
push
aas
rclb
lcall
mov
les
pushf
adc
lret
mov
jbe
xchg
sub
mov
insl
inc
fadds
lea
int
push
data16
scas
mov
pop
adc
push
lock
add
not
mov
sub
mov
jge
xor
and
cmp
js
sbb
or
int3
test
movl
xchg
iret
hlt
arpl
inc
dec
add
cmp
sub
mov
pop
or
mov
insb
or
in
out
push
int
es
sub
cld
jae
jbe
mov
stos
cmp
mov
cmp
movsb
out
subb
adc
mov
cltd
hlt
mov
ret
shll
cs
lods
pop
or
dec
outsb
mov
sbb
and
and
pop
enter
xchg
imul
xchg
xchg
sbb
mov
cmpsb
dec
mov
test
cltd
aaa
movsl
fidivrl
out
pop
xchg
and
hlt
dec
in
fldcw
mov
nop
dec
cmpsb
out
lret
nop
mov
inc
sti
and
sub
push
enter
loopne
ja
sub
or
mov
les
inc
push
jne
and
pop
dec
add
sub
loopne
mov
xor
adc
pop
jle
xor
sarl
xlat
jg
and
dec
xor
mov
idivb
das
aaa
sbb
ss
hlt
push
push
sbb
adc
das
xchg
adc
push
out
adcb
push
fimull
outsb
mov
cli
push
sbb
inc
inc
mov
pop
in
mov
ficomps
scas
sub
repz
jb
dec
rclb
out
psrlw
sub
pushf
je
fiadds
mov
mov
xchg
call
pop
jbe
test
jo
xchg
or
jae
add
clc
movsb
xor
orl
cmp
ljmp
cli
or
leave
add
out
sbb
pop
jnp
push
stos
pushf
imul
lods
movsl
aaa
test
push
jl
inc
or
lret
pop
imul
enter
repz
sti
xor
xor
les
jne
mov
aas
push
push
mov
mov
lret
out
push
mov
loop
and
sub
outsb
dec
rorb
es
pop
push
and
sar
lods
adc
push
decl
sub
push
lret
cmpsb
mulb
std
addr16
cmp
into
mov
pop
inc
ljmp
jnp
cmpsl
data16
ret
sub
mov
add
and
pop
xor
add
push
mov
adc
repnz
scas
mov
xchg
mov
fxch
jp
fisubrs
fsubp
mov
rcll
test
xchg
repnz
outsl
mov
or
aas
enter
ljmp
clc
adc
adc
pop
adc
mov
daa
mov
lahf
adc
jecxz
mov
xchg
std
cltd
lret
jge
cmp
mov
pop
sbb
arpl
lds
dec
push
lahf
jp
jecxz
out
movsl
add
pop
sbb
sub
xor
dec
cmpsl
sub
sbb
sub
cmpl
jmp
jo
lods
dec
aaa
cmc
and
add
mov
jecxz
sahf
gs
jno
fucomip
pop
and
pushf
sub
bound
xor
cs
and
jge
lret
mov
gs
jne
jns
cmp
leave
xor
mov
mov
push
int3
cmp
push
pop
pop
mov
push
pusha
adc
pop
adc
iret
pop
and
rcl
arpl
aas
xor
sbbb
popa
popa
pop
cltd
stos
pcmpeqw
inc
stos
cmpl
data16
add
sar
push
push
lea
roll
push
out
dec
mov
test
pop
mov
inc
sbb
lock
scas
dec
push
pop
inc
in
int
jg
test
jnp
inc
adc
jmp
std
sbb
fstpl
pop
imul
psubq
icebp
gs
ror
into
popa
pop
andl
or
add
jge
and
scas
push
test
mov
or
add
xchg
pop
rorl
jg
enter
in
add
push
push
insb
out
inc
scas
push
outsl
jmp
outsl
jge
fcmove
stc
repz
lea
add
popa
jno
push
jge
mov
mov
mov
push
or
cmp
mov
adc
rorl
pop
jne
mov
push
add
pop
cmpsb
jbe
dec
mov
jno
and
out
push
push
cmp
mov
pop
inc
pop
shrl
ss
jle
xchg
movsb
popf
lods
aaa
jmp
mov
sti
scas
adc
gs
cmc
push
or
or
mov
mov
push
dec
and
lods
pop
jnp
dec
scas
sbb
arpl
mov
ja
adc
test
test
adc
ret
pop
push
sahf
push
inc
inc
push
movsb
xchg
pusha
push
cli
sub
xor
loopne
inc
shlb
loopne
scas
nop
xchg
add
ficoms
or
cmpsl
xor
adc
inc
test
ljmp
in
add
outsb
jo
or
and
lods
sbb
and
and
lock
incl
mov
mov
jb
push
pop
lock
pop
sarl
outsl
push
sub
es
cmp
fndisi(8087
adc
faddl
and
lret
pop
loopne
fstl
cmp
pop
inc
xor
push
and
scas
adc
dec
push
jge
push
rclb
pushf
sbb
aas
pop
mov
pop
arpl
mov
outsb
jg
aad
mov
jge
loop
cwtl
loopne
cmpsl
movsb
ljmp
aam
xor
xchg
xchg
pop
in
aam
shr
es
jmp
repnz
stos
jecxz
les
fstps
dec
xlat
inc
or
idivl
fnstcw
mov
add
sahf
mov
insb
xchg
push
aas
sub
fldcw
das
mov
xchg
or
add
inc
pop
cld
out
xchg
xor
and
popa
roll
lret
sahf
cwtl
cmp
test
mulb
outsl
lcall
sti
mov
cmpsb
mov
xchg
dec
mov
aam
shrb
mov
mov
nop
test
lret
insb
sub
mov
scas
xchg
or
cmpl
ljmp
shrl
pop
dec
and
mov
mov
sar
dec
cmp
enter
mov
inc
dec
and
push
iret
pop
mov
adc
rcl
ret
in
sub
jno
test
iret
daa
jo
add
adc
in
inc
cmp
push
and
fsubrl
in
leave
xor
repz
inc
mov
in
push
xor
gs
adc
loope
add
bound
stc
es
ja
leave
dec
pusha
in
sbb
pop
jmp
ret
mov
aam
ret
push
pusha
ss
sub
mov
inc
cmc
enter
mov
call
inc
lahf
push
cs
xchg
cmp
xor
inc
mov
and
cmp
sti
or
push
sub
adc
fucomip
fmull
dec
xor
js
mov
jp
xor
imul
movsb
add
outsb
dec
in
gs
mov
andl
sbb
lds
push
aas
andl
inc
mov
jo
cs
adc
inc
test
iret
scas
xor
mov
mov
xor
ljmp
decl
rcrb
je
jo
aad
outsb
out
or
dec
inc
ret
daa
or
or
scas
out
insb
cmovae
imul
loopne
mov
mov
sbb
inc
sub
aad
loopne
add
pop
in
mov
pop
scas
xchg
lahf
jl
out
xchg
push
rorl
add
nop
ja
jno
jg
pusha
mov
mov
out
pop
shr
pop
in
mov
lods
mov
test
jl
rcr
mov
insl
mov
int
cmp
sbb
cmp
fwait
das
rolb
add
clc
pop
mov
xlat
ret
sbb
sahf
rorb
jns
push
add
je
mov
test
js
and
std
ja
add
cltd
cmp
repnz
and
mov
lods
aam
aaa
mov
push
pop
xor
xor
mov
or
push
jne
sub
or
imul
and
jae
in
or
rolb
add
lret
out
add
push
ds
popa
push
imul
mov
sahf
and
addb
mov
imul
or
inc
inc
xchg
scas
cmp
out
sbb
mov
jo,pt
mov
dec
pop
mov
popf
bound
test
inc
pop
cmp
iret
sub
jecxz
or
shl
dec
jo
mov
xor
stos
dec
inc
dec
sbb
cmpsb
sub
cmp
mov
mov
push
push
test
cmp
sub
addr16
shrb
repnz
enter
mov
sahf
inc
ss
inc
xor
lods
xchg
gs
sarb
adc
pusha
jp
cmpxchg
dec
adc
mov
mov
lds
fs
mov
sub
insl
lret
or
lret
out
sub
inc
inc
xchg
and
test
arpl
dec
jecxz
push
popa
js
imul
jge
addl
dec
or
ret
lahf
movsb
insb
mov
xchg
or
jae
dec
mov
loopne
out
ja
jmp
mov
jp
xchg
push
sbb
out
outsl
in
mov
stc
shrb
cld
setns
sti
jnp
add
dec
and
pop
pop
sub
movb
mov
out
gs
mov
add
mov
test
adc
mov
mov
sti
mov
xchg
hlt
pop
cmp
inc
test
mov
adc
jo
rsm
dec
iret
enter
or
fdivrl
xchg
cmp
mov
xchg
cltd
addr16
xchg
aas
dec
push
cld
aas
loop
fbld
hlt
inc
sub
adc
sar
dec
cmp
ljmp
add
adc
push
adc
mov
dec
xchg
jg
scas
sbbl
into
or
pusha
stos
fnsave
lahf
out
lods
or
mov
lret
pusha
std
mov
lock
dec
repz
pop
mov
mov
mov
in
pop
test
or
iret
and
int3
mov
lea
cwtl
imul
ret
lds
inc
mov
jmp
and
pop
mov
lahf
dec
push
ds
stos
dec
pop
dec
testb
lahf
xor
jle
rorl
inc
mov
mov
iret
bound
sbb
cmp
mov
and
lods
out
insb
xchg
jmp
jne
rorl
adcl
cmpsb
pop
inc
jnp
stos
push
push
pushf
clc
pop
pop
je
iret
stos
push
das
and
and
popf
aas
or
mov
decl
xchg
dec
dec
mov
jecxz
ljmp
je
jnp
insl
mov
jle
out
lcall
mov
and
sti
int
ss
mov
mov
insb
sub
aam
lret
ja
call
push
or
xchg
pop
imulb
xor
pop
adc
inc
xchg
pop
cwtl
mov
or
aad
inc
inc
pop
push
enter
pop
sub
sub
xchg
aad
or
xlat
popa
inc
aad
dec
push
mov
or
xchg
and
mov
fmulp
push
push
adc
mov
out
sbb
mov
addr16
scas
aas
movsl
sbb
mov
sub
sbb
adc
push
testl
fdivrs
pop
ljmp
out
aam
je
in
in
sub
push
jecxz
push
clc
rorb
or
divl
jns
stos
fs
push
dec
dec
push
add
sub
push
repz
js
cltd
sbb
je
jnp
push
cmpsb
pop
jle
sbb
jno
inc
pushl
push
fcmovnbe
fisttpll
xchg
lret
fimull
jmp
mov
cmpsb
pusha
cmp
cltd
push
sub
cmp
jno
mov
jnp
mov
sbb
enter
xor
imul
sub
and
movsb
or
push
int
xchg
mov
ficompl
pusha
pushf
sbb
inc
repz
ret
pushf
adc
imul
sbb
dec
jecxz
push
subb
dec
and
outsb
dec
mov
mov
xor
cmp
cs
cwtl
rcrb
movl
pop
jl
sub
pop
xchg
jno
and
out
fwait
lret
orl
mov
lahf
jmp
dec
xchg
mov
inc
push
mov
mov
insl
push
cld
xor
mov
jmp
movsl
mov
std
enter
jae
add
push
cmpl
mov
pop
ret
dec
jle
dec
jp
mov
gs
inc
dec
fwait
sbb
push
addr16
jne
sub
call
xchg
movsl
std
ficomps
scas
cmp
mov
addr16
in
xor
movsl
test
arpl
add
cmc
int
int
arpl
inc
pop
lods
pop
mov
cmp
cltd
in
rcl
sbb
mov
subl
jne
inc
pop
dec
dec
adc
gs
mov
push
mov
das
in
xor
fs
lahf
cmpsl
sbb
mov
mov
add
add
repz
xor
xorb
int
repnz
xlat
push
into
jl
jo
cmp
and
or
xchg
lea
pop
push
jo
gs
bound
adc
std
lcall
in
in
adc
jo
js
adc
popa
and
test
push
dec
lods
bound
nop
mov
or
add
adcb
pop
fstpt
loope
int3
push
shlb
ret
pop
xor
mov
cmp
and
movsl
mov
lock
mov
imul
jns
cmpsl
jne
cmc
xchg
inc
inc
jmp
stos
add
shlb
pop
cwtl
add
loopne
mul
jg
lahf
insb
jb
push
mov
in
clc
sbb
aas
sbb
xchg
outsl
aas
lea
mov
jle
and
ss
pop
adc
fsubp
or
sub
int
aam
xchg
fucomp
mov
jbe
loopne
xchg
int
adc
test
std
dec
inc
xor
or
insb
fists
dec
xchg
add
and
test
sub
in
mov
daa
repz
popl
or
shlb
mov
in
sbb
push
in
pusha
shlb
or
mov
mov
add
movsl
jo
addr16
push
push
add
mov
call
lods
imul
xchg
fimuls
and
pushf
jecxz
js
mov
cmp
out
pop
sub
jns
xchg
xchg
xchg
dec
mov
push
pop
in
repz
subb
jl
call
sbb
fstps
push
add
rcr
lcall
xorb
js
mov
mov
pusha
xchg
mov
jo
dec
inc
push
out
dec
mov
repz
lcall
inc
loopne
inc
push
jle
pop
sbb
adc
jmp
shlb
test
daa
sahf
movsl
xchg
and
jmp
cwtl
pop
stos
lods
jnp
sbb
call
dec
pushl
inc
pop
fisubrl
jg
push
ja
add
rcll
add
add
or
or
pop
inc
mov
push
jle
movsb
out
xlat
fisttpll
fsubl
sub
xor
test
adc
jge
inc
sbb
lahf
or
cmp
pop
lret
mov
fnstcw
mov
push
xlat
pop
fisubl
mov
jo
mov
fdivl
addb
fstl
stc
jno
inc
lret
shlb
xchg
inc
ret
or
jns
in
push
mov
icebp
cmc
sbb
jmp
jecxz
enter
jbe
jl
xor
imul
push
jnp
add
pop
or
pop
aad
fcompl
pop
xor
mov
pop
xchg
outsb
pusha
add
pop
loope
and
int
mov
and
div
gs
stos
add
das
mov
inc
cmp
mov
repz
loopne
outsl
xchg
std
fdivl
adc
fistpll
imull
idivb
mov
popf
sbb
int
xchg
mov
ja
push
dec
scas
js
inc
jo
push
adc
mov
jge
mov
mov
in
mov
add
xor
outsb
mov
jp
xlat
test
and
es
xlat
adc
in
push
sub
repz
dec
popw
jnp
enter
jno
inc
jb
inc
jmp
mov
xlat
pop
in
lret
add
movsb
cmp
ljmp
lods
pusha
lret
sarl
push
scas
cmp
call
and
adc
inc
lock
sbb
mov
and
xor
stc
pop
xchg
push
cmpsb
mov
jno
gs
loopne
mov
shrl
pop
cmc
aas
fimuls
dec
pusha
add
out
mov
jnp
movsl
js
xor
and
fs
ror
jg
inc
fiadds
scas
jno
xchg
mov
cmp
data16
mov
and
data16
cwtl
cmpsl
xor
lods
addb
cmp
fucom
mov
adc
sbb
xor
aam
xchg
xchg
clc
clc
or
sbb
xchg
idivl
mov
test
rclb
push
sub
jnp
loop
cmc
pop
jno
jne
cmp
pushf
loopne
xchg
jp
sub
pop
in
sbb
scas
pop
dec
xchg
insl
xlat
stos
sarb
xor
stos
imul
inc
iret
ss
in
mov
lods
jp
aas
leave
ljmp
bound
sbb
in
or
mov
scas
imul
sbb
stc
pop
stc
mov
enter
dec
cmp
in
std
scas
pminub
push
popf
in
cmp
mov
mov
fwait
in
sbb
pop
in
ret
lcall
add
loope
push
loope
cltd
inc
sbb
inc
in
addl
imul
scas
mov
mov
repnz
fsts
pop
cltd
aas
push
icebp
loopne
daa
aas
pop
lock
test
mov
jl
lock
das
and
cld
jns
cli
ud0
shll
and
sti
jle
pushf
iretw
dec
fbstp
push
jo
add
sbb
les
jae
inc
adc
add
enter
outsl
dec
data16
push
sti
dec
or
shll
pop
mov
orb
outsb
test
pop
adc
mov
xchg
cmp
cmc
loop
in
dec
sub
pop
insb
ss
cmp
inc
mov
jns
cmp
xchg
repnz
imul
jbe
inc
insb
mov
jmp
mov
mov
outsl
add
push
xchg
xchg
cmp
xchg
daa
outsl
mov
mov
cmpsl
clc
hlt
rorb
mov
mov
sahf
pop
clc
movsb
sbb
inc
repnz
in
in
mov
mov
xor
sub
std
adc
sub
sub
pushl
lea
inc
adc
lods
scas
jmp
pusha
pop
gs
sbb
nop
int
negb
push
mov
cmc
push
mov
mov
dec
cmp
loop
xor
fwait
jmp
push
enter
jbe
stos
jns
mov
mov
fists
jo
sub
push
xchg
or
lret
fbld
loope
rol
lds
pushf
mov
ret
jmp
out
add
mov
repz
jnp
dec
leave
mov
push
cmp
xchg
shll
jnp
sbb
or
daa
in
rorb
into
inc
int
or
loope
push
stos
cmp
adc
jp
popa
pusha
aad
int3
bound
or
mov
dec
mov
sbb
rcl
sub
mov
vpmadcswd
push
es
and
test
les
lret
mov
test
xor
inc
leave
iret
cmpsl
sbb
lret
sub
or
or
and
cmp
fimull
pop
hlt
xor
mov
jge
push
cwtl
inc
push
and
xchg
iret
and
stos
das
pop
jg
cld
repz
and
pop
pushf
or
fwait
cmp
fidivrs
pop
ret
cmp
cmp
das
ret
pop
push
mov
fs
test
lods
or
fisttps
xor
lret
aad
push
scas
outsb
shrl
mov
or
xchg
push
cmp
and
popf
add
dec
stos
pop
inc
cli
pop
cmp
in
sar
jb
sub
dec
in
jl
adc
clc
mov
sti
dec
shll
pop
aaa
xchg
add
jg
push
sbb
xchg
or
adcl
bound
or
scas
xor
dec
add
outsl
in
rcrl
sub
mov
xchg
pop
adc
or
aam
jecxz
loopne
ret
cmpsb
imul
xchg
inc
insb
gs
lods
add
push
clc
lcall
cmp
cli
xchg
jmp
lahf
call
pop
push
enter
add
movb
int
pusha
test
push
ljmp
cmp
or
mov
mov
shll
sub
xor
sbb
fcomps
xchg
bound
ret
cmpsb
xchg
je
adc
enter
jp
orb
push
std
pop
xor
sbb
xlat
mov
push
fisubrs
mov
ja
sbb
xchg
xor
mov
mov
pop
aam
push
and
jmp
in
rorb
test
push
fs
call
pop
icebp
xchg
mov
loope
mov
in
mov
fstps
adc
mov
sbbb
dec
jg
lock
adc
insb
push
ret
push
mov
fnstsw
mov
mov
pop
mov
mov
int
adc
sbb
cmc
dec
fsubl
pop
aaa
xchg
cmp
sbb
icebp
lods
mov
mov
pop
push
pop
dec
hlt
out
dec
enter
lds
cs
sbb
lcall
or
jecxz
cmpsb
cmp
xchg
add
push
pop
aam
inc
adc
pop
imul
iret
push
fistps
pop
outsl
repnz
sti
icebp
clc
stos
pusha
data16
xor
hlt
xor
xor
xchg
lret
int3
rcrb
jne
pop
out
mov
add
aaa
in
fcomi
mov
test
or
mov
mov
in
lods
sub
mov
push
clc
pop
lds
or
in
insl
inc
into
mov
jmp
add
add
add
ss
sbb
or
subl
fwait
mov
xchg
mov
mov
fxch
fwait
lret
cmp
mulb
dec
fistpl
sub
dec
jecxz
in
xorl
mov
push
inc
xor
mov
outsl
lret
je
cs
adc
mov
dec
bound
jns
out
cvtps2pd
jne
dec
pop
addr16
cli
insl
addr16
aaa
out
pushf
jnp
std
in
xor
sbb
push
loop
xor
outsl
int
sub
icebp
fcmovbe
or
mov
lock
jl
js
nop
mov
shrb
mov
push
xor
fisubrl
jg
dec
mov
cmp
scas
lret
jmp
mov
adc
hlt
xor
adc
lcall
aas
jo
xor
pop
sbbl
mov
mov
iret
pop
aad
xor
xor
fdivrs
mov
sub
adc
out
mov
icebp
mov
pop
ss
and
add
faddl
aad
push
test
adc
icebp
rcl
cmp
sub
cmp
adc
imul
lret
inc
push
inc
lods
fdivrs
insb
sbb
xchg
mov
aam
addr16
dec
jp
dec
test
mov
xchg
xor
mov
sbb
push
jno
loopne
scas
jae
mov
aad
ja
daa
fs
adc
mov
adc
mov
jl
ja
cmpsb
dec
es
js
xchg
sbb
negl
sbb
loope
rcrl
adc
mov
and
mov
cltd
mov
data16
orl
dec
xor
xchg
dec
jecxz
push
add
jmp
mov
pop
clc
inc
jns
lea
xor
xchg
jns
xchg
pop
negb
outsl
jg
jns
or
mov
ret
cwtl
cwtl
cmp
mov
in
xchg
out
rorl
cmp
test
rorb
ss
cld
jne
fimull
ja
mov
cmp
dec
jns
leave
stc
scas
mov
xchg
leave
mov
pusha
mov
fistps
jo
repz
out
stos
mov
notb
aaa
int
xchg
xor
in
fdiv
clc
xchg
mov
jmp
cmp
scas
jp
push
cmpsb
dec
cltd
ja
ret
data16
jecxz
test
push
mov
mov
lcall
mov
add
sub
subl
dec
adc
or
js
jb
popf
in
push
cs
or
cmp
dec
lock
out
mov
pmulhuw
fwait
add
or
mov
xchg
fldenv
sub
and
in
mov
xchg
xchg
push
xchg
or
sbb
out
sbb
and
lahf
aas
mov
clc
mov
mov
aam
insb
sub
cwtl
add
push
xchg
xor
sbb
or
nop
test
xchg
flds
xor
ss
test
ret
pushf
mov
and
pusha
movsl
or
sbb
mov
pop
test
push
test
sub
rcrb
fs
push
inc
aaa
fsubr
pop
add
fs
sub
lcall
sbb
cltd
inc
fidivrl
test
jnp
jl
hlt
pop
insl
imul
or
jl
sub
mov
imul
out
jmp
mov
xchg
fcmovb
loopne
lods
or
fnop
sbb
push
fisttpl
pop
sub
add
jp
fldenv
and
pop
add
sarb
mov
roll
mov
cmc
icebp
mov
es
arpl
mov
jae
add
test
imul
insb
jecxz
rep
mov
mov
roll
cmpl
push
lcall
pop
pop
inc
cmpsb
xor
das
das
loop
sbb
pop
xchg
xor
popf
nop
inc
arpl
stos
js
leave
pop
mov
sub
lcall
adc
iret
pop
loopne
sbbb
pusha
lods
inc
mov
pusha
or
mov
pop
dec
xchg
inc
xchg
jne
pop
inc
arpl
divb
xor
es
mov
jbe
out
mov
sti
jb
ljmp
xchg
gs
out
mov
lcall
sahf
mov
dec
dec
xchg
aad
stos
mov
flds
and
daa
dec
test
filds
fs
andl
sub
jb
sbb
test
inc
cmp
dec
pushl
xor
cmp
shll
xor
addr16
popa
cmp
mov
sbb
aad
or
lahf
mov
data16
jecxz
out
xchg
hlt
dec
mov
jnp
lds
test
arpl
xchg
add
adc
out
mov
shlb
mov
shr
mov
jge
lahf
jns
xchg
in
add
xchg
sub
movsb
xor
push
bnd
xchg
js
xor
push
clc
out
iret
rcr
stos
in
cmpsl
cld
push
or
push
jno
loope
mov
iret
and
mov
stc
ljmp
clc
jb
sub
std
pop
lcall
jge
add
dec
xchg
jae
imul
sub
ja
adc
sub
loopne
sub
or
xor
jp
lods
leave
stc
push
mov
push
lea
lods
stc
mov
lods
jmp
pop
cmp
xchg
xlat
popfw
dec
movsl
dec
push
push
inc
sbb
bnd
loope
loopne
adc
mov
mov
sbb
jb
cmp
xor
or
inc
test
cmp
mov
cmp
ficomps
jae
push
xchg
or
push
addl
pop
int
iret
ljmp
imul
int
cltd
mov
out
mov
add
mov
rolb
les
stc
movb
dec
sahf
outsl
jmp
add
jmp
ss
adc
xchg
icebp
pop
imul
ret
inc
lahf
push
push
sub
dec
shlb
sbb
mov
in
cmpsb
adc
xor
orl
sar
sti
jns
aam
mov
aam
mov
shrb
jne
dec
sbb
push
jge
add
scas
lock
fwait
jo
xchg
pop
cmp
or
inc
loope
jnp
movsb
ret
rorb
dec
and
mov
outsl
xchg
and
xlat
popf
add
ret
adc
aam
jae
xchg
inc
sub
push
into
jne
jg
jle
in
inc
scas
addl
ja
mov
jg
repnz
divb
rcr
icebp
sbb
scas
or
xchg
lahf
or
xchg
jb
inc
enter
dec
push
pop
push
push
sti
outsb
inc
jns
rorl
movsl
dec
filds
sub
dec
sub
ja
in
outsl
or
pop
test
insb
push
scas
jbe
popa
cld
outsb
in
ja
cmp
cltd
and
out
pop
cmp
outsb
xor
mov
scas
dec
fcoml
dec
cmp
outsl
sub
add
push
ja
sti
xor
xor
push
or
or
jmp
or
js
shlb
rorb
cmp
sarl
andb
call
js
mov
sub
in
jae
in
sbb
cltd
dec
out
xor
aaa
mov
push
rdpmc
les
inc
hlt
test
cs
mov
jb
dec
sbb
clc
arpl
scas
ret
sub
icebp
mov
xlat
rcrw
fucomp
dec
pusha
fmulp
outsb
pop
jmp
rcll
out
mov
inc
cmpsl
movsb
std
fisubrs
pusha
js
mov
adc
es
pop
lahf
mov
mov
orl
sbb
cmp
dec
xor
and
xor
jg
ret
adc
add
pop
movsb
and
flds
cmp
or
bound
inc
cmpsl
xor
add
add
imul
stos
sub
popf
scas
and
into
test
dec
jmp
in
lcall
outsb
inc
loop
push
fbld
loope
ret
cmp
mov
ljmp
pop
lds
xor
and
mov
cmc
sbb
sbb
out
in
loope
inc
pop
outsl
fdivrs
mov
movsl
sbb
mov
sti
mov
jmp
push
adc
fwait
lret
out
jg
dec
fidivl
cltd
mov
cmpsl
je
pop
push
je
cs
rolb
or
jg
fmuls
jg
push
push
add
sbb
push
inc
fnstcw
je
popa
pop
xorl
sub
xor
aad
mov
ss
loope
cmpsl
mov
andl
dec
not
mov
and
mov
movsb
js
or
push
shlb
fwait
sub
push
test
pop
adc
fwait
dec
inc
into
cmp
dec
jnp
int
popa
imul
subb
test
inc
jge
lea
ficompl
in
add
dec
fimull
jb
dec
fucomi
push
hlt
dec
fiaddl
jle
jbe
xlat
push
inc
shlb
outsl
mov
xchg
sbb
sbb
or
dec
iret
icebp
lret
and
mov
xor
mov
xor
and
pop
xor
push
or
add
mov
lcall
dec
adc
and
adc
xchg
shl
das
dec
pop
scas
lret
dec
js
mov
jns
push
xchg
test
bound
mov
pop
inc
jmp
inc
cmpsb
js
fs
gs
sbb
jge
dec
jnp
pop
enter
mov
idivl
inc
jge
inc
xchg
test
iret
les
roll
mov
jno
inc
and
sti
dec
mov
sub
mov
push
aaa
mov
imull
addr16
dec
addr16
shlb
adc
aaa
cwtl
cs
push
f2xm1
inc
jno
arpl
cltd
rcrb
mov
pushf
imul
les
jne
stos
mov
xlat
xchg
les
cltd
jb
fs
mov
push
outsb
and
xor
cs
rclb
out
push
in
std
enter
subl
adc
add
pop
fldcw
pop
cmp
cmp
add
lahf
dec
gs
add
arpl
ss
cmp
lret
mov
add
test
dec
insb
add
in
pop
hlt
jge
or
cli
cwtl
jg
mov
mov
lds
cmp
sub
push
xor
cld
xchg
decl
mov
dec
ret
sahf
xlat
push
sub
or
fwait
sub
insb
shl
sti
xor
cmc
mov
enter
aad
xor
addb
cmp
es
aad
jne
fs
jae
loop
push
outsl
dec
xor
dec
imul
lds
stc
push
mov
jle
xchg
int
or
xor
insb
scas
dec
mov
xchg
sbb
in
movsb
mov
xlat
sti
fwait
jmp
push
dec
cmp
mov
pushf
pop
test
adc
jno
xor
shrl
enter
aam
pop
and
push
xchg
rorl
cmp
sub
js
fcmovnu
cli
ds
xchg
aas
std
lds
xorl
mov
dec
inc
movsl
test
xchg
ja
cld
int3
inc
xor
decb
pop
cli
mov
inc
push
mov
std
mov
ljmp
mov
adc
rolb
xchg
ss
jp
cmp
aam
pop
incb
dec
dec
pushf
mov
mov
sub
mov
and
outsl
mov
sub
popl
add
fsubl
push
mov
incl
sbb
xchg
js
and
in
lods
mov
icebp
aaa
sub
xlat
inc
frstor
cmp
inc
push
rolb
ds
sbb
jmp
fidivs
leave
out
div
outsb
mov
ja
add
aas
dec
aad
outsl
mov
mov
inc
in
push
xor
js
out
jb
mov
or
ss
jl
cltd
jmp
cmp
int3
sti
xorl
jg
je
shlb
mov
insb
or
and
test
mov
nop
pop
jo
cmp
cs
lods
imul
or
pop
cmpb
dec
mov
jge
sti
xor
pushf
inc
mov
arpl
std
dec
cmp
or
stos
xchg
mov
addl
shrb
mov
out
jae
mov
insl
mov
xor
addr16
sbb
and
lds
ficoml
frstor
sub
inc
inc
push
fisubl
push
add
and
aaa
orb
lret
sarb
xchg
mov
inc
pop
sub
pop
mov
jle
fdivs
push
movb
push
frstor
lock
adc
sahf
fldenv
mov
push
mov
hlt
push
sbb
sbb
adc
add
mov
or
outsb
mov
dec
push
xchg
xchg
dec
jae
fimuls
hlt
sub
mov
aaa
shlb
or
pushf
insl
ljmp
ret
jns
jo
cld
pop
cmpsl
fstpl
movsl
insl
sbb
leave
test
or
cmp
sbb
mov
mov
xorl
mov
daa
stc
inc
xor
jp
xor
mov
jg
sbb
lcall
insl
push
movswl
test
mov
pop
and
mov
xor
dec
xor
ljmp
dec
mov
cmpsl
ja
sub
push
and
sbb
adc
pop
aas
lock
adc
dec
and
sub
mov
xorb
sub
ret
in
out
daa
jae
cmp
jno
dec
push
or
lods
dec
mov
shl
pushf
adc
fs
inc
pop
inc
dec
and
jecxz
add
in
sbb
fs
jmp
sub
inc
fstl
sbb
sarl
inc
xchg
jbe
lcall
mov
stos
ret
pusha
and
pop
lret
cmp
mov
or
addr16
lods
cmp
lcall
int
add
pop
xchg
jl
pop
call
popa
dec
sub
push
push
push
jb
loopne
mov
inc
add
adc
popf
adc
adc
mov
cmpsb
sbb
cmpsb
and
adc
or
adc
inc
mov
cmc
ret
xchg
inc
int3
jnp
daa
test
daa
dec
scas
int
addr16
test
subl
clc
xchg
ret
mov
movsl
adc
adc
cmc
repz
iret
dec
cmpsb
in
or
sub
sbb
flds
lods
jb
ss
nop
pop
stc
sbb
in
pop
inc
arpl
pusha
loop
sub
xchg
cmp
mov
adc
inc
jp
les
xchg
clc
jmp
cld
repz
sub
scas
jge
mov
leave
or
jg
dec
lock
sub
lahf
xor
mov
sbb
cmp
pop
jecxz
test
xchg
jb
xchg
adc
dec
xor
dec
and
mov
sti
pop
push
ret
inc
mov
bound
stos
data16
sti
inc
movsb
push
cmpsb
mov
mov
aad
add
mov
into
mov
push
jae
mov
sub
cmpsl
ds
cmp
pop
adc
popf
mov
aam
stos
lods
inc
push
pushf
pop
andl
inc
mov
aas
xchg
bnd
sbb
outsb
pop
movsl
push
fdivl
lock
jns
movsb
xor
into
xchg
cmp
mov
ret
add
jo
test
sbb
lahf
mov
sub
push
mov
mov
sahf
pop
fsub
aam
sbb
pushf
push
fimuls
lods
mov
mov
xor
mov
pop
arpl
sarl
pop
mov
stos
mov
cmp
sbb
mov
pop
and
dec
mov
push
push
push
addl
and
dec
xchg
popa
pop
test
call
fbld
stos
push
cmp
mov
pop
push
add
push
sbb
pop
enter
sub
subb
popl
addb
dec
sub
cmpsl
push
or
mov
jecxz
sar
lret
in
aam
and
testb
add
subl
cmp
mov
mov
lods
popf
std
xor
sbb
fcompl
enter
je
mov
xchg
insl
jb
lods
jb
mov
add
push
data16
out
fdivrs
pop
out
in
pop
pop
adc
hlt
lds
jg
mov
mov
mov
rcr
repz
and
fucom
inc
xorb
sbb
adc
testl
stos
mov
test
int3
sbb
int3
xchg
fistps
outsb
xchg
or
dec
aam
mov
dec
add
int3
jecxz
lcall
inc
stos
xor
pushf
loopne
lret
cmpsb
bound
mov
xchg
push
or
rcr
jp
cmc
addr16
mov
inc
in
cmpsl
adc
push
xchg
sub
xchg
hlt
or
mov
aam
mov
fsubr
fstps
add
lock
shll
dec
loope
cmpsl
aam
pop
sti
mov
xorl
testl
ss
lock
mov
popf
cmp
pop
sti
mov
clc
clc
les
stos
xlat
rcl
fcompl
das
jbe
in
mov
sub
out
daa
dec
xchg
fmuls
fildll
movsl
repz
cwtl
jge,pt
push
ljmp
sbb
lock
or
popa
pop
mov
sbb
cld
ljmp
mov
dec
xchg
insb
cli
into
jno
pop
inc
or
jl
std
ljmp
int3
mov
fildl
push
dec
ficompl
sbb
popa
jbe
iret
add
das
and
mov
ret
mov
mov
cmpb
sbb
lock
scas
fcmovbe
in
add
fbstp
push
lds
sub
pop
jge
pop
inc
sbb
and
addr16
push
movsl
es
es
divb
cmp
dec
jl
add
push
push
jle
cmc
std
cmpsl
std
into
mov
pop
mov
lock
out
push
inc
mov
out
in
mov
jle
movsb
into
push
test
jae
jmp
sub
mov
pop
xchg
into
and
enter
mov
insl
inc
pushf
stos
outsb
outsl
sbb
sbb
adc
insl
push
pop
arpl
loopne
xchg
aam
ss
faddp
rcrl
mov
jle
jne
leave
mov
xor
pop
stos
mov
or
sbb
xchg
mov
rclb
mov
clc
add
add
xchg
sub
lahf
dec
das
test
jle
mov
dec
mov
dec
push
ficoms
pusha
jmp
jb
inc
sahf
mov
into
mov
add
mov
pop
push
movsl
call
sti
es
add
dec
es
lcall
push
mov
jl
or
fsubrs
ss
mov
aam
inc
and
cmp
pop
push
cmp
stos
adc
sub
xchg
push
cmp
xlat
aad
ljmp
repz
mov
inc
and
mov
shlb
jmp
cs
cmp
xor
sub
inc
xchg
adc
add
adc
jbe
push
mov
mov
fsubr
lods
sub
sub
out
dec
jbe
cmc
xchg
rorl
inc
and
loope
jno
xchg
jnp
in
adc
pop
sub
and
insl
mov
testl
movsl
mov
push
add
lods
test
imul
mov
or
inc
inc
push
out
push
jg
repnz
adc
jecxz
xorb
pop
jle
aad
fadds
inc
xchg
je
call
mov
xchg
dec
daa
push
movsb
inc
call
sub
fldenv
insl
in
cmp
mov
jnp
pop
xor
lods
int
in
lock
mov
dec
outsb
inc
testl
loope
jp
add
in
push
pop
sub
test
lret
add
loope
adc
or
inc
push
dec
gs
cmp
cli
div
jnp
xchg
sbb
mov
inc
add
xor
mov
cs
cmp
mov
jnp
repz
lock
xchg
bound
sti
xchg
shll
adc
shlb
scas
mov
mov
dec
jnp
divb
adc
jbe
fst
lods
int3
mov
lods
dec
xchg
jne
pop
add
arpl
or
sub
mov
pop
outsb
mov
mov
push
sbb
je
pop
rcrl
dec
adc
add
sub
outsl
jae
cmp
sub
ret
ljmp
jnp
push
inc
movsl
notl
mov
xchg
fsubr
aad
faddl
inc
sti
or
push
sub
scas
lods
push
arpl
push
aas
or
subl
iret
popa
mov
sbb
cmp
mov
pop
cs
add
ret
pusha
addb
mov
lock
cmp
push
ret
mov
pusha
xor
jne
push
sti
mov
ds
pop
add
or
mov
pop
mov
stc
mov
pop
sbb
scas
or
fildl
ffreep
xchg
jno
jp
scas
cmpsl
loopne
mov
test
imul
xchg
pop
pop
xor
pop
pushf
lcall
cwtl
call
rolb
jo
or
sahf
adc
pushf
inc
cli
push
push
jae
mov
xchg
outsl
shll
stos
xchg
pusha
inc
xorl
movsb
push
mov
mov
jns
data16
push
or
pushf
add
sbb
mov
and
dec
cmpsb
mov
loopne
outsl
cmc
pop
sub
bswap
mov
mov
clc
xchg
mov
sbb
xchg
pop
lock
pcmpeqb
dec
in
icebp
lret
push
test
jecxz
das
push
arpl
popf
adcl
or
add
test
rcrb
pop
fsubrs
cmpl
js
jno
inc
pop
mov
dec
sub
inc
lock
fbld
test
xchg
pusha
push
cmpsb
pop
jbe
js
mov
and
adc
shll
dec
mov
mov
movsl
stos
leave
ret
dec
daa
loop
iret
call
insb
inc
in
mov
pop
addr16
inc
lea
xchg
int
pop
sub
dec
xchg
sub
mov
cmp
das
lds
jl
sub
xchg
pushf
outsb
push
cli
sbb
add
testb
xlat
sbb
push
sub
addl
inc
sti
lahf
fadds
xor
aas
push
mov
pop
mov
or
or
jmp
cmp
mov
mov
pop
mov
test
push
pushf
shll
je
orb
andl
mov
js
inc
addr16
inc
pop
inc
xor
jae
cmp
test
mov
sub
movsb
dec
sahf
jl
jb
mov
mov
inc
mov
xor
addl
mov
cmpsl
notb
pop
xchg
es
or
repnz
lock
cltd
loop
pop
jp
and
leave
je
push
xchg
ret
and
in
add
cmpsl
mov
movsb
insb
mov
outsb
xchg
mov
sbb
imul
out
dec
sahf
frstor
sub
enter
imul
popf
push
cltd
jns
test
add
sti
jmp
push
out
sbb
jo
xchg
orl
push
cmc
mov
outsl
ljmp
mov
sbb
ja
inc
cltd
sti
imulb
mov
sbb
xor
arpl
into
fmull
add
cmp
adc
jne
hlt
dec
sbb
mov
test
add
xchg
and
jnp
jne
cmpsl
xchg
rclb
std
into
mov
addr16
pop
out
ret
adc
push
or
push
fsts
ja
sarb
pop
jo
loope
dec
out
or
daa
lods
clc
xchg
sub
ss
repz
shlb
xor
cli
add
xchg
add
ror
sub
aam
cmpsb
xor
aaa
xchg
in
or
mov
and
cmp
daa
das
shll
icebp
pop
sbb
insb
push
psubusw
sub
iret
aam
xchg
jmp
mov
movsb
out
add
imul
and
cmpb
mov
addl
xlat
add
mov
fsubrs
lcall
mov
incb
or
xor
add
test
fwait
dec
loopne
pop
filds
adc
gs
adc
les
mov
xor
lds
loop
scas
fidivrl
pop
push
mov
fdivrp
mov
pop
pushf
testb
lahf
test
sub
ficompl
push
test
mov
ret
lds
cmp
push
and
push
jb
adcb
cmpsb
cmc
push
dec
dec
rolb
stc
fldenv
lret
push
dec
insb
int3
mov
jmp
imul
dec
aad
cmp
sub
sbb
inc
push
into
mov
dec
xor
mov
pop
jnp
adc
and
cs
push
lret
lock
sbb
pop
push
or
subl
and
lods
ljmp
sub
pop
icebp
pop
or
push
mul
leave
push
cltd
mov
movsb
jns
mov
ror
cmp
pop
lret
dec
int3
add
inc
add
mov
adc
xor
call
and
add
mov
imul
cmp
rol
movsb
xor
std
rorl
jae
cld
push
lock
add
pop
ret
push
rcrb
adc
incb
movsb
cs
xor
fnstsw
push
mov
mov
adc
mov
pop
lea
pop
clc
adc
fcoms
add
xor
ja
jecxz
xor
int3
sbb
push
push
dec
pusha
push
popw
xchg
xor
filds
mov
jbe
fwait
mov
pop
xchg
cmp
lcall
cmp
call
in
jbe
mov
and
popa
jnp
pop
mov
xor
popaw
sub
vcmppd
sbb
jne
mov
arpl
mov
adc
sbb
lret
mov
pop
outsl
daa
pushf
xchg
xchg
or
test
inc
mov
pop
push
mov
xlat
movsb
out
insb
push
adc
sbb
jbe
insb
push
leave
ret
mov
sub
mov
lock
lret
lret
stc
cmp
aam
fwait
dec
lock
std
inc
jno
gs
nop
repz
push
sbb
fcomps
sub
mov
jp
sub
add
sbb
or
xor
xchg
popa
outsb
mov
jg
in
jecxz
xchg
mov
fidivl
push
out
stos
cltd
jp
add
sub
test
aaa
insb
insb
fisttpll
jo
stos
outsl
or
int
push
data16
push
inc
dec
inc
in
sub
and
pop
sti
push
cmp
xor
or
das
xchg
test
cld
notl
into
in
sahf
ja
mov
dec
enter
xor
inc
xchg
or
lods
jp
xchg
mov
ja
inc
jno
cmpsb
test
inc
test
mov
pop
inc
lock
popf
xor
sbb
outsb
mov
sbb
out
add
mov
out
out
sbb
pop
xor
movsl
jae
fsts
add
mov
add
stos
in
pop
or
adc
je
adc
sbb
jp
jo
adc
in
lret
gs
pop
aad
or
add
xlat
xor
sahf
adc
sahf
stc
and
sbb
cmp
adc
jno
adc
add
cld
mov
int3
loope
ds
loopne
iret
cmc
in
sbb
mov
pop
cmp
aaa
cltd
jge
mov
mov
jae
arpl
xor
jnp
pop
push
push
and
scas
sub
xchg
fstps
sarb
inc
ss
mov
sarb
movb
jg
mov
ret
cs
shlb
stos
push
lods
imul
das
scas
insl
mov
dec
mov
and
sub
push
lret
imull
and
sarl
mov
pushf
add
add
adc
aas
ss
sbb
and
sub
jg
rcrb
push
orl
leave
scas
push
dec
or
loopne
inc
mov
insl
xchg
pop
xchg
popa
cmp
push
out
std
push
lcall
add
mov
mov
mov
mov
push
das
call
into
shlb
adc
sbb
push
xchg
adc
add
xor
jae
rorl
add
mov
jge
jmp
in
imul
sub
push
or
bnd
popa
cmp
bound
push
push
ljmp
das
mov
sbb
pop
push
push
sar
pop
adcb
out
popf
add
lods
pop
scas
inc
push
rcl
cmp
js
dec
stos
rcll
in
add
jl
sub
adc
adc
popf
rcrl
mov
mov
pop
outsb
adc
sbb
lss
stc
mov
mov
mov
jno
imul
repz
cmp
icebp
ret
mov
loope
mov
dec
xor
fnstsw
cmp
inc
cmp
jmp
mov
cmp
iret
dec
mov
xchg
lar
xchg
push
es
pop
cli
xchg
mov
and
add
pop
add
push
vcomiss
sahf
add
aam
cmc
cmp
enter
dec
unpckhps
mov
sub
sub
rorl
test
lods
xor
dec
sub
push
fildll
cmp
and
sbb
cli
xor
jno
aam
inc
or
loop
inc
and
in
push
xor
dec
mov
xchg
mov
pop
fmuls
xor
insl
sbbl
sbb
aaa
lcall
pushf
iret
mov
adcb
fwait
dec
xchg
stc
sarb
cmp
and
movsb
pop
mov
fdivl
shll
out
dec
mov
mov
xchg
inc
nop
cli
jnp
pop
dec
dec
xchg
ret
cltd
out
gs
xor
pop
scas
sub
and
js
jno
push
mov
inc
jle
fisttpl
cmpsl
pop
push
cmpsl
in
sbb
ret
adc
lds
sub
cmp
test
cmp
jg
pop
iret
push
and
clc
adc
mov
xor
xchg
mov
mov
mov
ficompl
cli
gs
pop
js
jmp
jb
cmp
jge
and
jmp
mov
hlt
stos
sub
inc
sbb
jl
add
out
sub
loop
stos
and
add
push
or
xlat
cwtl
jno
mov
mov
xor
shrl
cld
aam
inc
pop
sti
or
pop
jbe
fsubrl
ret
xchg
push
sbb
jne
stos
pop
mov
jns
xor
mov
out
je
mov
pop
dec
fwait
jb
add
jne
into
pop
lea
pop
lret
sbb
cmpsb
jp
in
cli
repnz
adc
mov
xchg
xor
int3
jp
lcall
sub
addl
fisttpl
cmp
mov
push
idiv
push
jnp
xor
sub
xchg
fs
test
ret
cmp
divl
xchg
adc
mov
loopne
sbb
fcmovnu
call
sti
adc
mov
outsl
mov
adc
repz
mov
lods
mov
pop
fnstcw
repnz
mov
in
std
push
jmp
jg
rcl
aaa
or
and
fcmove
hlt
fwait
xor
repnz
fdiv
mov
aas
mov
inc
adc
adc
lret
inc
in
or
leave
push
mov
shlb
outsl
enter
pusha
cltd
push
call
fcmovu
fisttpl
cmpsb
mov
imul
repnz
jne
or
or
jecxz
and
out
pushf
mov
test
or
pop
popa
dec
outsb
cmp
test
ret
xchg
jp
fildl
push
repz
mov
pop
xchg
loop
in
inc
mov
sub
push
in
add
push
xchg
xchg
or
repz
sbb
adc
divl
les
imul
getsec
gs
add
bt
cli
push
push
adcl
mov
xor
or
pop
sub
bound
icebp
imul
cwtl
fiadds
xchg
pop
test
inc
div
jbe
or
fistpll
movaps
in
mov
lea
dec
hlt
mov
push
mov
leave
lret
xchg
test
or
jle
xchg
sbb
neg
ffreep
fldcw
fadds
aam
negb
inc
stc
sub
and
pushf
aas
jb
push
and
sbb
xor
dec
add
fcmovnu
adc
xchg
push
lcall
jle
pop
mov
pop
add
aam
sub
in
push
imul
push
aas
into
xchg
subl
in
sti
adc
sbb
or
sub
std
sarb
ss
leave
loopne
idivb
push
cli
test
lret
xchg
sub
cli
sbb
jne
test
mov
adc
iret
stc
mov
or
mov
mov
and
cmp
ret
bound
jnp
pop
and
pop
sti
inc
push
call
mov
rorl
sub
xchg
dec
fs
push
pop
jno
adc
decl
test
les
and
push
jbe
xor
test
adc
push
outsb
mull
fwait
inc
sahf
xlat
daa
rclb
arpl
jo
bswap
add
mov
or
xchg
cmp
test
fcos
jbe
mov
add
pop
in
dec
jbe
push
push
pop
push
inc
mov
pop
add
xchg
mov
insl
jno
cmc
loop
ja
or
jle
xchg
cltd
xchg
and
ror
vpaddsw
xchg
lds
xchg
ds
dec
pop
xchg
inc
cmp
lahf
popa
adc
mov
sbb
pop
mov
mov
outsl
sbb
out
lods
into
push
test
cmpb
jbe
lahf
leave
test
inc
push
cmp
ss
mov
aam
cs
andb
sub
out
and
mov
mov
stos
sub
push
imul
lods
xchg
out
sub
jns
inc
and
xlat
sbb
jo
mov
sti
fnstenv
xchg
cmp
fcoml
mov
jp
inc
add
jecxz
insb
pop
jo
daa
inc
stos
push
mov
rolb
mov
push
xor
xchg
xor
sbb
inc
js
out
ljmp
pop
push
lods
leave
pusha
cwtl
rorb
cmpsl
sub
mov
xchg
ret
dec
pop
push
mov
inc
in
sub
cmp
inc
cmpsl
xchg
mov
popf
cmc
jg
lret
mov
pop
negb
add
xor
cwtl
cs
xchg
aas
mov
mov
sub
mov
int
jg
into
fwait
dec
cltd
adc
aad
cli
dec
dec
mov
push
jno
jnp
enter
push
sub
push
cli
fbld
gs
in
jge
mov
jo
das
in
dec
pushf
cmp
cmp
ja
and
sub
dec
dec
xor
call
pop
addr16
sbb
lea
mov
stc
inc
int
add
insb
xchg
mov
jp
mov
dec
movsb
mov
fcompl
and
inc
mov
test
and
pop
push
xchg
pop
adc
clc
ret
in
push
xchg
cmc
es
xor
sti
icebp
mov
dec
mov
sbb
jg
inc
out
outsb
jmp
xchg
add
mov
sbb
int3
hlt
fildl
xchg
mov
ss
movsb
nop
adc
adc
xchg
pop
mov
mov
and
lds
xchg
jmp
data16
jle
add
mov
mov
push
add
lods
xchg
jmp
cli
cmpb
out
bound
call
aad
pop
adc
jae
rcrb
sbb
ljmp
fadds
or
adc
xor
lds
and
ds
xchg
cmpsb
rcr
lock
pop
add
icebp
xchg
das
inc
inc
mov
cltd
orb
insl
int
loop
pop
xchg
dec
mov
mov
sti
fistl
sarb
scas
ljmp
aaa
add
ffreep
mov
call
insb
rorl
add
lahf
adc
mov
jnp
mov
repz
into
mov
insb
sbbb
or
mov
inc
mov
mov
inc
xlat
dec
ds
out
std
ds
xchg
push
mov
leave
das
sub
jnp
and
adc
aam
pop
pop
dec
insl
add
fdivl
cmpsl
or
addl
mov
xchg
xchg
aad
outsb
mov
inc
mov
pop
push
mov
cld
icebp
xchg
push
add
dec
cltd
inc
repnz
mov
icebp
push
aas
mov
pop
push
testb
jo
adc
dec
pcmpgtb
test
loop
les
aaa
mov
adc
jbe
testb
sbb
outsb
scas
or
pop
sahf
pop
xchg
andb
inc
inc
cs
xor
jmp
out
mov
mov
mov
mov
mov
daa
inc
lahf
or
dec
push
out
lea
cmpsl
ds
arpl
xlat
outsl
mov
mov
andb
enter
sahf
into
inc
push
int
push
mov
xor
mov
fidivrs
sbb
aas
xchg
hlt
hlt
add
xchg
cmp
cmp
in
flds
imul
pop
mov
inc
outsl
stos
push
xor
enter
ret
push
outsb
push
push
pop
shrb
push
jns
imul
repz
aaa
cmp
xchg
pop
fmull
lods
fbstp
jecxz
dec
insb
inc
pushf
sub
inc
movsb
inc
adc
jl
push
sbb
pop
in
test
into
out
popf
leave
mov
es
dec
sarl
test
bound
add
pusha
fs
mov
cmp
mov
jl
or
lods
out
cmp
sbb
sub
ror
or
fwait
pop
dec
jnp
jle
loop
push
pop
jle
arpl
cwtl
cld
xchg
fnstcw
push
jae
and
pop
outsb
add
mov
mov
push
xlat
push
and
and
inc
adc
imul
inc
jp
push
cwtl
test
sarb
cmp
mov
adc
les
inc
add
jmp
out
mov
dec
fdivp
push
and
dec
adc
and
cmp
xchg
lods
testl
mov
and
cmp
jmp
mov
pop
aaa
scas
sbb
or
dec
bound
adc
push
pop
inc
mov
iret
jnp
push
fistpll
fnstenv
in
pusha
in
inc
xlat
mov
popa
cmp
sub
scas
adc
mov
fsts
adc
jg
cmp
jmp
mov
mov
mov
lods
dec
or
ss
inc
push
xchg
fistpl
addr16
mov
jle
out
out
push
inc
sub
mov
or
push
adc
das
jg
sub
movsb
aaa
dec
arpl
push
add
sub
dec
test
sbb
add
inc
aam
adc
std
dec
imul
adc
scas
sub
mov
rorl
cld
dec
dec
jp
roll
add
ret
xor
mov
hlt
outsb
das
lods
je
arpl
and
imul
addr16
in
and
fcoms
leave
ret
fiadds
pop
popf
push
sbb
das
mov
xor
aas
xorl
mov
xor
rcl
jge
sbb
pop
mov
sahf
jno
ss
sub
test
push
or
clc
pop
xor
cmp
in
jno
in
dec
xor
popa
dec
pop
mov
dec
shlb
outsb
push
daa
xchg
cli
add
jo
sbb
fimuls
frstor
nop
jecxz
lods
cld
jo
arpl
mov
xchg
mov
ret
sub
les
js
imul
in
mov
test
push
in
icebp
incb
fdivs
movsl
xchg
arpl
nop
cmpsl
dec
popf
push
cmc
in
sbb
and
xor
mov
rorb
jmp
gs
imul
aas
enter
outsb
xor
push
subl
mov
repnz
or
ror
fwait
adc
or
mov
out
xchg
int
sub
adc
ds
std
and
cmp
push
incl
ret
pop
or
push
ret
sub
out
add
lods
ss
pop
adc
dec
xchg
pop
js
pop
mov
addr16
decl
or
pop
pop
repnz
shll
sbb
data16
xchg
ret
test
addr16
adcl
push
dec
mov
insl
in
mov
mov
dec
imul
push
insl
pop
sub
leave
push
xor
sti
repz
and
inc
jecxz
aad
mov
xchg
push
ss
cmp
mov
push
mov
push
negl
add
xchg
in
push
cmp
push
cmp
movsb
mov
rcl
pop
mov
imul
mov
xchg
push
inc
movsb
call
push
or
or
dec
push
pop
ss
xchg
jno
mov
sbb
out
adcb
lret
pop
sub
jmp
lret
cmp
jg
mov
hlt
outsb
push
call
push
inc
inc
test
call
hlt
test
cmp
inc
jae
mov
roll
icebp
dec
pop
xlat
or
jns
or
cmp
mov
enter
sbb
mov
fisttpl
pop
popl
jle
in
psllq
daa
add
xor
loopne
pop
push
sahf
ret
insl
movsb
or
leave
scas
mov
out
adc
andl
xchg
lods
sbb
push
lahf
xlat
pop
icebp
add
cwtl
jge
sub
and
sbb
and
rcrl
jne
bound
sbb
mov
test
loop
jle
mov
or
pop
pop
xchg
lods
idivb
lret
addb
fdivp
insl
sub
shlb
inc
xchg
iret
push
add
xor
push
stos
xchg
mov
test
pushf
add
jae
leave
lock
repz
jmp
repz
imull
mov
pop
cmp
sub
cmp
lcall
jns
or
outsl
data16
and
sarl
in
inc
test
xor
jle
clc
mov
inc
popa
sub
xchg
adc
scas
jg
data16
or
nop
sar
arpl
mov
jb
movsb
mov
scas
push
push
cmpsb
dec
call
adc
cwtl
movsl
and
je
pushf
push
cmpsb
icebp
mov
push
dec
sub
test
lods
xor
jne
daa
mov
out
aam
add
xor
je
jne
out
mov
test
add
push
pop
iret
int3
push
lods
jp
jg
xlat
leave
push
inc
repz
je
dec
test
cli
call
std
adc
mov
mov
cli
mov
test
mov
imul
pushf
pop
mov
cwtl
out
lods
xchg
xchg
movsb
pop
bound
je
xchg
jl
test
lock
dec
mov
je
mov
xchg
inc
add
xor
push
pop
mov
mov
fsqrt
sbb
push
and
add
pop
test
mov
psubusw
mov
in
iret
shl
je
leave
cmc
mov
push
test
sub
repz
pusha
inc
pop
test
sbb
sub
call
or
xchg
cmpsb
mov
test
cwtl
jae
sub
rclb
push
imul
adc
in
mov
or
setge
pusha
inc
sub
jecxz
xchg
or
arpl
test
pop
cmpsl
dec
call
out
aam
cmp
or
inc
idivl
mov
cmpsl
xchg
call
out
divb
popf
mov
shll
in
jge,pn
and
ret
hlt
pop
in
jns
int
adc
dec
pop
sbb
mov
enter
inc
mov
js
xchg
leave
lock
jno
xchg
dec
xor
pop
imul
mov
loop
stos
sarb
cld
call
add
sbb
insl
inc
out
outsl
imul
cs
mov
or
cmovne
inc
stos
cmp
push
push
jns
xchg
icebp
bound
mov
shll
addr16
loope
or
sub
das
adc
mov
xchg
pop
mov
les
inc
mov
outsb
pop
lods
sub
shrl
icebp
mov
test
fildl
xchg
jne
js
pop
rcrl
adc
lcall
imulb
cli
movsl
pop
daa
mov
jnp
jo
jbe
xor
in
fimull
mov
xchg
scas
jns
push
dec
cwtl
mov
call
pop
push
scas
fildll
cmc
and
xchg
int
int
or
add
adc
add
gs
in
push
sbb
fmull
xor
outsb
adc
out
or
inc
jno
push
popf
idivl
add
lret
inc
and
inc
pop
sbb
jne
ljmp
repz
sbb
sub
bound
or
outsl
push
xchg
jnp
pusha
jne
daa
xchg
or
dec
divl
sbb
jne
enter
pop
adc
sub
push
adc
push
add
xor
lret
or
test
in
xchg
sbb
add
addr16
adc
jo
dec
loopne
aas
lret
mov
push
or
out
inc
xor
cld
lcall
mov
pop
jecxz
mov
mov
int3
mov
sub
jo
sbb
fbstp
or
js
add
xchg
xchg
mov
out
xor
xlat
cmp
fadds
shll
push
xor
sub
nop
fwait
scas
adc
je
adc
jbe
mov
push
mov
stos
fwait
cmp
push
mov
push
ljmp
cli
in
xchg
enter
xchg
out
fldt
xor
addl
les
and
sbb
aas
inc
pop
mov
repnz
pop
scas
ds
in
lods
movsl
xchg
psadbw
push
jl
push
push
xor
or
or
adc
adc
pop
ret
cmp
push
pop
test
stos
outsl
mov
cmp
inc
mov
xchg
fincstp
iret
ds
insb
mov
ja
popa
inc
add
cmp
arpl
push
ljmp
xor
mov
mov
outsl
cmpsb
mov
cmp
divl
xchg
mov
mov
sub
add
xor
aas
mov
sbb
xchg
adc
sbb
repnz
lret
scas
jp
mov
mov
ficoms
push
xchg
inc
mov
or
int3
test
add
fiadds
push
orl
aaa
dec
xchg
xchg
cmpsb
mov
xor
cli
cmp
push
mov
mov
sub
data16
mov
scas
call
mov
imul
mov
sbb
sbb
sbb
shll
and
sbb
shrl
lret
dec
mov
jecxz
into
and
leave
aam
mov
out
movsl
out
ljmp
bound
xchg
push
clc
xchg
xchg
loop
repz
xlat
fsubs
mov
fidivrs
aas
mov
enter
mov
insb
repnz
in
cld
mov
pop
ret
andl
ss
xor
enter
inc
xchg
popa
pop
lcall
inc
sub
fsubr
and
loopne
and
decl
rclb
sub
jae
iret
in
and
xchg
subl
out
cmp
mov
dec
in
inc
out
outsb
jb
scas
fsub
or
jge
mov
and
mov
or
cli
mov
sub
jb
xchg
test
cmp
dec
test
add
mov
xchg
lods
xor
jno
adc
leavew
imulb
xchg
sub
cmpsl
test
fstps
adc
or
sub
test
jle
je
fistpl
mov
mov
inc
inc
jp
cmpsl
imull
or
cld
xlat
jge
sbb
out
xchg
xchg
rclb
loopne
daa
pop
push
sbb
xor
inc
mov
mov
dec
nop
sar
rcrb
ficompl
or
clc
and
push
push
xchg
jnp
add
add
cmpsb
add
addr16
push
mov
pushl
andl
inc
push
fldcw
or
cwtl
scas
pop
adc
xchg
mov
in
test
addl
cmpb
and
mov
push
inc
loop
imul
adcb
bound
in
scas
sbb
jecxz
inc
loopne
push
adc
rolb
adc
pop
rcrl
scas
insl
test
les
lret
les
pop
sti
add
jge
cmp
mov
fs
xlat
ds
xchg
sub
iret
movsl
xchg
fwait
stc
cld
xchg
fisubs
xchg
std
xor
cmpsb
jp
or
inc
mov
scas
cmp
cmpsb
cmp
pop
int
add
or
sub
dec
lret
fldl
cmc
xchg
mov
adc
inc
call
mov
cmp
mov
push
dec
jge
or
imul
icebp
cmc
aaa
cs
mov
mov
mov
jmp
std
add
xchg
jo
sbb
cmp
incl
push
jbe
fsubr
shll
cld
and
cmpsb
aad
lods
movsb
data16
and
push
mov
daa
decb
loope
pusha
fstl
fldl
jo
mov
aam
stos
ret
mov
cmp
mov
push
fmull
mov
mov
outsb
mov
push
addb
popf
js
aaa
add
pop
cmovb
orb
jl
shrb
push
icebp
fcomps
pop
jnp
jns
out
mov
mov
pop
out
popa
repz
mov
pop
mov
adc
xchg
stos
inc
rcll
dec
cmp
sub
and
or
sub
adc
cltd
sub
leave
pop
pop
test
ljmp
pop
xchg
or
adcb
aad
pop
aaa
movsb
dec
outsl
mov
dec
daa
rcl
popa
mov
add
cmpsl
insl
test
addr16
jb
or
rcrb
lret
mov
xchg
jge
bnd
mov
sub
in
dec
clc
xchg
mov
in
stc
mov
cmp
movsl
daa
rcll
outsl
add
jae
out
mov
imul
int3
pop
jecxz
lods
data16
inc
cs
lods
fimuls
push
xchg
dec
cmp
pop
mov
stos
push
mov
ficoml
jl
xor
js
loope
out
adc
pop
xor
or
pop
sahf
aad
jg
push
in
loop
dec
test
repnz
gs
dec
and
cmpsl
pop
inc
out
shrb
dec
fcmovne
test
aas
add
leave
dec
iret
add
lds
in
dec
cmpsl
mov
mov
pop
fbld
pop
int
jl
vmwrite
mov
xchg
cmp
leave
ss
popa
sub
adc
mov
imul
cmp
and
mov
std
ret
movl
mov
rcrb
dec
test
mov
mov
xchg
aas
int3
sar
push
mov
dec
loope
imul
xchg
fidivrs
sarb
push
add
xchg
fildl
imul
jns
xor
std
jno
push
jae
xchg
add
in
xor
mov
and
mov
pop
add
sbb
es
mov
cld
test
or
insl
cmp
lds
add
and
inc
or
lea
dec
roll
mov
pop
ret
fs
xchg
rcrb
add
cmp
js
add
mov
loope
xor
insl
inc
fwait
int3
lret
sbb
test
sbb
cmp
pop
sub
push
sbb
push
nop
xchg
mov
cmp
in
in
jb
cmp
jecxz
and
fistpll
mov
dec
ror
or
jle
cs
jno
push
loope
sti
add
pop
cmpsb
fsubrp
shrb
push
dec
stc
js
mov
mov
mov
xchg
push
mov
fsubrl
push
ds
adc
mov
xchg
loope
fisubrs
data16
out
rolb
mov
nop
push
and
pop
fwait
enter
add
sbb
insb
mov
popa
jge
and
or
mov
loopne
jle
cmp
lock
push
lahf
add
ret
adc
loopne
and
xlat
lret
in
cld
int
mov
cmp
sarl
popl
mov
mov
pop
xchg
js
jo
jle
push
jns
inc
test
pop
jno
mov
add
stos
mov
int
js
in
idivb
test
lods
repz
inc
lcall
or
imull
or
and
test
mov
mov
into
ret
mov
mov
push
test
rorl
out
or
adc
mov
imul
into
push
pop
inc
inc
push
pop
dec
push
fisubrl
xchg
add
hlt
adc
jg
add
daa
inc
jmp
lods
xor
inc
dec
outsb
shll
jne
push
and
test
mov
sbb
test
pop
cwtl
daa
pop
jecxz
jecxz
sar
adc
jecxz
sub
in
test
fidivs
mov
cmp
mov
sub
inc
adc
rclb
sti
xor
add
push
or
cltd
ljmp
fninit
daa
mov
lods
jbe
rorb
sub
mov
lock
push
jge
insb
clc
out
sbb
ljmp
pop
dec
into
pop
loop
mov
or
xchg
aas
inc
es
lds
push
mov
xchg
movsl
pop
sub
add
mov
and
ret
insb
cmp
pop
mov
and
mov
in
test
lcall
int
pop
leave
inc
mov
sub
sub
daa
mov
aaa
lods
ja
jns
cld
dec
adc
jns
insb
push
aas
and
sub
mov
nop
test
cmp
mov
jp
xchg
fimull
sbb
inc
adc
fwait
in
jge
jmp
push
icebp
popf
call
pop
mov
pusha
mov
xor
mov
pop
and
xchg
sub
pop
cmp
mov
mov
mov
pushl
dec
sub
aam
pop
push
inc
addr16
mov
data16
sub
test
push
dec
pop
lret
inc
sbbl
roll
icebp
and
push
in
push
xlat
mov
mov
mov
pop
int3
je
xchg
mov
pop
enter
mov
negb
bound
adc
xchg
and
scas
imul
pop
movsb
fstps
jnp
icebp
pop
insl
mov
jmp
adc
lret
sbb
repz
aam
cltd
mov
ds
lahf
test
bound
jno
outsb
xor
sub
rcl
test
mov
loope
mov
and
test
shrl
adc
and
movsb
mov
push
stc
mov
mov
fsub
sub
add
jae
addr16
andb
add
inc
mov
mov
stc
in
push
std
xchg
adc
sahf
dec
popa
xor
icebp
jl
fstl
aaa
pop
cmp
jno
lret
pop
hlt
dec
push
mov
pop
push
push
inc
xchg
rorl
or
inc
fs
repz
mov
dec
imul
movsb
or
add
stos
in
xor
arpl
outsl
sbb
and
sub
jmp
pop
pop
add
add
sub
daa
push
adc
push
xchg
imul
test
cmp
jecxz
shl
xchg
ljmp
and
xlat
out
outsl
ss
imul
pop
out
inc
xor
xchg
pop
ret
pop
xchg
dec
repnz
adcl
data16
inc
call
xchg
in
pcmpgtd
std
sbb
jnp
mov
add
jbe
insb
pop
sub
repnz
lret
sub
sbb
fldl2e
in
js
push
push
sti
addr16
adc
or
mov
notb
dec
push
push
loopne
mov
ja
imul
in
inc
lock
sti
xchg
aas
scas
xor
cmpsb
or
mov
nop
jo
mov
mov
decl
mul
xchg
int3
mov
inc
cmc
mov
add
insb
in
call
dec
enter
mov
xchg
xchg
add
repz
xchg
dec
xchg
or
ret
pop
fsubrl
sti
jmp
cwtl
add
fidivrs
fdivl
mov
sub
aas
mov
mov
imul
out
xor
jp
xchg
mov
adc
fsubl
ret
fs
xlat
fcomps
jns
dec
cld
lahf
jae
pop
lret
mov
sub
pop
lret
pop
jmp
and
sub
pushl
lods
or
ljmp
leave
imul
jmp
out
lret
lret
fnstcw
push
add
fbld
add
mov
sbb
in
xchg
sbb
or
xor
jbe
gs
sbb
fadds
xchg
enter
or
enter
sti
jecxz
and
dec
dec
cmp
enter
lock
cs
pop
mov
add
cmp
idivb
pushf
pop
addl
pop
pop
pop
stos
fcoms
jle
clc
jmp
dec
shll
hlt
adc
sub
icebp
adc
stos
lcall
sbb
add
pop
aas
mov
dec
inc
adc
loope
hlt
inc
push
movsb
and
outsl
adc
push
pushf
fnstsw
cld
mov
inc
sub
or
fistpl
lods
mov
test
inc
mov
xor
pop
sbb
add
cmpsb
or
pop
or
xor
iret
mov
popf
ds
mov
lahf
testl
jns
repz
inc
mov
inc
test
push
xchg
sbb
add
lods
ss
dec
cwtl
xor
imul
push
pop
cmpsl
aas
test
leave
test
jg
divb
pop
xlat
movsl
sahf
mov
shl
cmpsl
push
pop
sbb
aad
mov
pop
xchg
push
mov
das
pop
int3
xchg
jnp
into
sub
mov
incb
cmp
pcmpeqw
adc
dec
icebp
mov
inc
and
sub
fdivr
lret
or
jno
bound
clc
mov
add
jae
pop
xor
jnp
insb
mov
adc
scas
adc
adc
lret
test
mov
repz
sahf
stos
mov
pop
insl
mov
jo
inc
out
ljmp
int3
xchg
lds
and
xchg
out
pop
pop
stos
dec
and
sbb
mov
scas
frstor
cmc
mov
imul
dec
insb
dec
mov
call
jmp
mov
cmp
mov
fcompl
xchg
test
sbb
mov
aaa
push
dec
mov
or
push
sbb
mov
leave
stos
lods
in
ljmp
mov
mov
adc
sahf
out
in
lods
adc
pop
lcall
int3
mov
push
and
in
sahf
adc
jae
sti
cmp
fs
dec
mov
lret
cli
test
jbe
pop
push
cmp
mov
adc
jmp
ss
sbb
mov
push
inc
rclb
sub
inc
test
aas
movsl
mov
mov
jno
cmovne
scas
mov
test
adc
iret
lret
cmp
ror
add
aad
loopne
mov
ljmp
mov
cmp
jno
aaa
mov
mov
mov
enter
lret
ja
sbb
mov
or
dec
cmp
xor
aad
and
cmp
mov
dec
push
mov
xor
cltd
lock
inc
push
out
adc
lods
call
sbb
mov
aad
jne
jge
shll
adc
ja
jb
out
popa
lds
int3
adc
pop
in
bnd
in
dec
out
adc
aaa
js
ffree
rcr
mov
iret
mov
insl
in
push
pushf
or
mov
dec
inc
inc
jnp
mov
mov
inc
mov
mov
xchg
loope
popa
in
jle
or
fsts
add
fstps
insb
push
popf
or
dec
mov
mov
inc
pop
data16
xor
and
dec
in
and
cs
mov
cld
pop
sti
ja
scas
test
or
adc
push
popf
iret
call
inc
mov
fsubl
push
in
aam
int
cmp
adc
ret
dec
loope
xor
xor
push
and
gs
or
xor
adcl
and
aas
mov
aad
pop
mov
test
sbb
or
add
icebp
movsb
out
mov
inc
call
mov
and
cltd
sarb
ljmp
insl
mov
pop
iret
cmpsb
int
add
cmp
imul
loop
mov
jg
jns
mov
add
or
xor
xchg
mov
mov
add
xlat
pop
loopne
outsb
or
xchg
sbb
shlb
mov
cmp
mov
popa
movl
push
loope
leave
adc
call
out
add
imul
leave
jnp
imul
cmp
xor
enter
mov
mov
push
fidivrs
jmp
push
and
rolb
sahf
xchg
out
inc
push
scas
nop
jo
pop
repnz
dec
jb
ljmp
mov
ret
insb
mov
xchg
or
and
dec
das
mov
cmpsl
lret
pop
xchg
and
bound
cmpsl
add
push
mov
js
pop
cltd
dec
dec
fsts
in
jnp
jbe
and
mov
movsb
out
and
daa
xchg
stos
pop
cwtl
xchg
mov
shl
mov
dec
jns
les
cltd
push
mov
jmp
add
push
mov
push
mov
jecxz
pop
jmp
cmpsb
sarl
fs
or
lahf
clc
and
adc
ret
xlat
or
jmp
popa
push
repnz
cmpsb
jne
inc
rol
dec
lcall
andl
mov
mov
pusha
pop
cmp
sub
jl
loop
or
pushf
adc
inc
dec
mov
cmp
add
dec
pop
and
mov
out
vrsqrtps
jb
and
inc
iret
imul
ds
or
and
jmp
in
push
in
pusha
cmp
xchg
mov
aam
cmpsb
sar
out
in
pusha
fnsave
mov
cs
dec
cmp
and
push
test
cmc
sub
push
mov
cmp
lea
add
inc
in
xchg
jle
nop
in
lret
gs
mov
adc
jmp
inc
jle
xor
lahf
rorb
pop
jno
nop
out
in
xchg
testb
in
in
pop
pop
in
dec
std
cmp
lret
fisttpl
push
dec
sub
cmpl
jbe
push
leave
ret
sub
dec
test
or
and
inc
add
push
lods
outsl
popa
in
adc
nop
dec
push
push
lods
mov
dec
loop
xor
js
test
cwtl
scas
out
repz
sub
and
loop
pushf
inc
cmp
cmp
cmpsb
xor
shll
jno
clc
push
insl
mov
test
insb
push
sub
push
sar
clc
cmp
imul
sbb
and
mov
cmp
xor
mov
sub
call
cmc
adc
xchg
mov
mov
rorb
mov
mov
testb
mov
push
cwtl
dec
pop
daa
or
insb
or
push
add
sbb
cmp
testb
testl
jg
sbb
inc
fs
push
adc
call
add
inc
adc
cli
jmp
push
cmpsb
dec
sbb
push
lock
sbb
rcl
rolb
mov
mulb
and
lret
or
pop
inc
jmp
xor
mov
push
add
mov
jmp
xchg
mull
jle
dec
cmp
mov
leave
cmpsb
loopne
cmc
adc
js
add
shrl
jnp
dec
push
shll
push
lcall
lock
lods
arpl
jge
xor
mov
hlt
repnz
jg
xor
enter
inc
and
ja
adc
fcomps
push
sub
fwait
mov
dec
arpl
rorl
fwait
xor
push
xchg
lock
cwtl
dec
fcmovu
sub
dec
push
cmp
movsl
das
mov
jl
nop
push
dec
adc
cmpsl
jp
xor
std
rorl
mov
inc
imul
sbb
xchg
pop
out
push
loopne
xchg
int3
add
cmp
jp
xchg
xor
xchg
adc
cwtl
push
lods
sub
pop
gs
aam
mov
jae
pop
pop
cmovg
test
out
movsl
movsb
fisttpll
test
jns
sub
call
pushf
pop
lcall
data16
ret
outsb
mov
bound
mov
add
out
and
out
push
or
cmp
daa
mov
fnstsw
xor
and
into
in
fists
mov
mov
lahf
testl
cs
testb
xorb
mov
in
jo
lea
lods
mov
jmp
mov
les
ja
add
rcl
mov
stos
mov
mov
lock
cmpsl
cli
add
mov
mov
xchg
fisttps
add
fcoml
push
lret
iret
mov
out
sub
das
aaa
dec
cmp
pop
mov
push
pop
mov
imul
xchg
dec
xrelease
mov
lahf
xlat
popa
mov
clc
cmp
lock
fcmovnbe
cmp
arpl
xor
jbe
fildl
and
test
push
aad
add
add
daa
push
mov
fcomi
dec
mov
mov
jbe
push
cmp
jne
dec
dec
jne
loop
or
mov
adc
mov
leave
dec
scas
fs
ljmp
mov
fs
pop
mov
fistps
and
movsl
sub
out
scas
jo
mov
xchg
std
cmpl
or
mov
cmpsb
push
fisttpl
pop
sahf
push
pop
jl
pop
fwait
sbb
lds
inc
jmp
loop
mov
mov
push
aad
movb
jbe
dec
adc
sti
xchg
pop
sti
shrl
frstor
movsb
sbb
jno
cmp
fisubs
mov
mov
jbe
push
xchg
dec
add
sub
xlat
pusha
fdivs
jo
add
push
ret
lahf
bound
xchg
add
xor
clc
js
sbb
insb
test
inc
ret
testb
scas
mov
popf
in
mov
aas
es
xchg
pop
push
lock
adc
push
inc
jge
scas
fwait
sub
cmp
pop
sub
inc
jo
shlb
cltd
popl
mov
cmpb
push
jecxz
out
ljmp
mov
sbb
pusha
push
mov
mov
ja
jg
std
iret
mov
insl
in
jl
rolb
inc
or
les
cli
sub
popf
sub
pop
scas
lds
mov
movsb
xor
jno
jl
and
fstl
sbb
inc
nop
xchg
mov
pop
ja
xchg
mov
adc
jmp
mov
in
pop
and
fbstp
icebp
insl
adc
jle
cmpsb
xchg
leave
popa
mov
imul
jbe
clc
sti
fistl
or
je
shlb
inc
outsl
dec
pop
add
int3
push
xchg
in
sub
push
mov
lods
mov
jl
in
cmp
fwait
mov
inc
int
add
mov
adcb
cmpsl
sti
mov
dec
xor
xchg
fwait
mov
pop
outsl
lea
sub
pop
xor
fcmovnbe
sbb
stc
jmpw
adc
jo
test
movsl
sub
add
loop
insb
pop
lods
sub
push
fildll
xor
int3
leave
mov
xchg
popf
ja
inc
and
cmp
subb
add
pop
pop
xor
jecxz
rcrb
push
popf
das
icebp
cmovae
dec
add
fcomps
out
mov
and
xchg
push
adc
sbb
pop
cmp
jle
mov
xlat
popa
jns
mov
cld
arpl
mov
faddp
dec
test
xchg
sahf
in
fldt
push
adc
mov
js
fldenv
xor
inc
pop
pop
out
je
lock
jne
mov
cmpsb
xor
out
leave
mov
mov
cmpb
cmpsl
dec
push
dec
out
jo
repnz
push
repnz
aaa
int
jno
inc
rorb
sahf
push
jmp
lret
dec
in
push
fidivl
hlt
cwtl
fadds
push
icebp
fdiv
aaa
mov
fdivl
jo
cmp
mov
pop
mov
mov
mov
mov
bound
loopne
hlt
jnp
xchg
add
push
mov
les
sub
pop
lods
stos
mov
dec
es
cmp
in
inc
adc
addr16
daa
sbb
inc
and
xor
xchg
xchg
repnz
jae
mov
fdivrl
adc
xchg
adc
pushf
jno
dec
adcl
sub
adc
xor
mov
mov
int
lods
arpl
or
jo
push
or
mov
scas
das
sbb
out
push
outsb
into
mov
pop
or
xchg
jmp
push
jbe
out
sub
roll
jbe
xor
test
inc
icebp
and
int3
push
and
sub
xchg
cmp
jne
fs
dec
push
ljmp
inc
pop
pop
incb
dec
add
and
mov
sbb
movsl
out
jbe
xor
dec
lods
sub
fstl
gs
adc
cmp
sbb
je
hlt
lods
out
add
fs
movsb
cmp
stos
push
stc
loope
ss
sti
pop
cmp
rcrb
jecxz
lret
mov
rcrb
or
jp
aam
bound
movsl
push
and
dec
or
or
add
push
or
xor
clc
mov
mov
in
lock
mov
push
inc
or
pop
mov
and
mov
outsb
frstor
ror
dec
mov
mov
aam
cmp
xchg
cmp
scas
pusha
jge
pop
imul
sbb
pop
jmp
adc
mov
mov
jo
out
and
mov
popa
add
dec
xorb
mov
add
jmp
arpl
repnz
cmp
dec
sbb
sbb
inc
xchg
loop
mov
xor
sbb
push
notb
popa
fstps
out
sub
dec
ret
pop
ljmp
aam
clc
xchg
push
movl
aaa
out
pop
fucom
cs
hlt
and
push
nop/reserved
adc
xchg
sbb
cmp
and
dec
mov
inc
dec
insb
out
shlb
inc
mov
int3
leave
dec
xchg
outsl
push
and
sbb
fsubrl
push
push
mov
pusha
or
ficompl
addb
mov
adc
sub
mov
mov
rorl
leave
push
popf
mov
pop
cmp
mov
or
xchg
cltd
pusha
inc
filds
push
push
or
jg
jmp
mov
sbb
push
int3
insb
sbb
int3
ds
stos
stos
in
aam
jmp
imul
mov
xchg
pop
loop
imul
arpl
mov
cmpsb
pop
push
inc
mov
repnz
test
js
or
fnstenv
fsubrp
lret
cltd
pop
mov
dec
mov
add
fstl
mov
incb
and
shl
mov
into
pusha
in
cmp
add
sbb
pop
pop
sahf
daa
fxtract
sub
fldenv
mov
hlt
xor
xchg
lahf
push
leave
jo
fstl
jmp
lret
testb
adc
cmpsl
cli
dec
imul
mov
addr16
cwtl
push
xchg
push
outsb
cld
aad
mov
stos
test
xchg
cmp
bound
pop
loopne
lds
fiadds
lods
pop
arpl
std
sti
xor
xor
mov
hlt
cmp
sbb
mov
pop
sub
hlt
ficomps
fwait
push
das
inc
int3
push
lret
arpl
add
xchg
xor
or
aad
push
outsl
sbb
jns
xchg
fidivrl
inc
xor
stos
jb
dec
push
repz
or
inc
sub
lods
les
pop
cltd
cmp
dec
cmp
repz
inc
fiaddl
inc
pop
mov
pop
je
sbb
push
popa
enter
lock
inc
hlt
stos
je
insb
scas
jnp
imul
ljmp
fs
mov
pop
jns
call
pop
or
xor
mov
stos
imull
stos
xchg
lds
aam
loop
fwait
push
lret
sub
subb
data16
sub
sbb
insl
inc
std
dec
push
or
mov
out
xchg
pop
or
mov
cmpsl
dec
and
sar
shll
or
inc
movsl
push
or
repz
ss
cld
inc
mov
fildll
mov
xor
pop
fwait
outsb
lret
or
mov
je
cmp
jge
dec
pop
dec
inc
push
sub
loope
mov
shlb
cmp
es
and
fs
out
mov
sbbl
fwait
adc
xchg
sub
mov
insb
loope
adc
stc
sub
jmp
out
imul
test
mov
fmuls
fldt
fstps
loop
mov
mov
cmp
addl
jmp
mov
xchg
ljmp
stos
lcall
mov
inc
test
mov
sub
push
fsubrl
adc
loop
jp
jl
add
lret
sbb
cli
inc
lahf
adc
cmp
xchg
fdivl
nop
ds
push
dec
rcl
in
mov
imul
mov
mov
inc
inc
sub
sti
sar
pop
and
push
inc
push
sbb
xchg
mov
xor
ja
pop
push
fsubrl
out
movsl
scas
and
fcomi
lret
cmpsl
orl
call
add
dec
add
test
push
adc
bound
mov
call
jecxz
insb
pushl
inc
sbbl
sbb
jmp
lret
ss
dec
xchg
dec
mov
adc
mov
sub
jmp
pusha
inc
je
mov
mov
mov
leave
popa
in
pusha
outsl
jl
xchg
push
test
ljmp
xchg
cmp
pop
out
jno
sub
shr
adc
add
fs
push
mov
stos
test
cmp
test
push
or
movsl
loope
mov
in
aas
cmp
sub
shl
fnstenv
lret
out
cld
js
stos
xchg
pop
rol
cmp
xchg
repnz
jge
stc
adc
mov
or
mov
insb
add
mov
pop
addr16
and
js
sub
shrl
jb
aaa
xor
out
cmp
cltd
xor
test
das
andps
jmp
xchg
jbe
inc
call
int
insl
push
pop
xchg
jne
fsqrt
xor
adc
loop
mov
popf
adc
mov
test
pop
scas
addr16
dec
in
xlat
xchg
xchg
shlb
mov
sub
mov
mov
ret
xor
mov
out
inc
jo
pushaw
sbb
cli
test
mov
stc
aad
jle
sub
mov
and
into
pushf
dec
mov
scas
mov
scas
pushl
js
mov
add
pop
xor
js
insb
mov
int3
idivb
push
jnp
pop
and
jnp
cwtl
mov
mov
fidivrs
sarl
fistpl
scas
push
push
leave
in
mov
lret
loope
cli
adc
jecxz
jg
fnsave
dec
aas
stos
push
xor
pop
cwtl
leave
xchg
ret
insb
push
mov
push
sub
xlat
addl
adc
push
sbb
ja
lret
gs
adc
imul
cmp
xor
mov
test
add
fucom
dec
test
repz
pop
cmpsb
daa
in
xchg
ret
mov
pusha
or
decb
cs
movsb
testl
pushf
mov
shll
jno
xlat
dec
cmp
out
pop
fs
push
sbb
popa
repz
es
inc
adc
mov
adc
mov
dec
mov
lock
push
xchg
jno
imul
dec
pop
mov
stos
sub
in
jp
adc
ret
adc
add
inc
out
cs
and
dec
test
sbb
cmpsb
mov
inc
lds
inc
push
je
push
cmpsb
and
mov
cmpsl
sti
mov
push
jb
aaa
and
push
sub
es
mov
daa
mov
jae
int
inc
jg
cmp
pop
xchg
in
popa
push
mov
fnstsw
aad
bound
mov
push
loop
fdivl
jnp
aaa
mov
or
sbb
mov
xchg
mov
add
cmp
xchg
iret
xchg
fcmovne
xor
bound
inc
jo
and
daa
xor
xor
in
fstpt
cmp
dec
rcr
mov
test
or
xchg
mov
test
adc
jo
test
mov
sbb
add
or
mov
xchg
aaa
out
dec
mov
xchg
out
cmp
out
and
rclb
adc
xorl
pop
lret
mov
push
jge
loopne
inc
adcl
aas
jg
mov
pop
add
xchg
xchg
xor
mov
push
insl
or
dec
sub
lea
lret
imull
lock
jb
in
dec
bnd
pusha
inc
xor
pop
mov
mov
xor
out
xchg
rclb
mov
clc
jne
cmp
adc
in
push
icebp
xor
ss
jle
add
repnz
xor
repz
xor
mov
cs
hlt
mov
aad
nop
mov
nop
mov
fdivr
adc
lods
mov
out
inc
mov
dec
dec
push
mov
fcomi
into
je,pt
sub
mov
lods
dec
and
loop
lods
jp
in
push
push
inc
mov
inc
addl
mov
push
mov
cmp
lret
sahf
pushf
mov
outsb
in
jmp
lret
popf
aad
xor
push
pop
jg
scas
bound
dec
dec
mov
push
push
mov
nop
popf
fcmovnb
jno
pop
dec
je
add
push
repnz
and
cli
sub
insl
enter
jg
scas
scas
cld
out
sub
andl
stos
lcall
das
sbb
adc
movsb
push
jecxz
test
stos
dec
mov
jns
add
xor
out
add
push
inc
pop
jae
sbb
js
pusha
mov
mov
or
sti
subb
lret
mov
pop
adc
pop
mov
inc
je
xchg
and
mov
mov
xor
or
pop
dec
xchg
cli
mov
sti
sar
xchg
stos
mov
aad
xchg
or
add
mov
lock
stos
and
outsl
xchg
mov
addb
sub
inc
mov
mov
xchg
jbe
leave
pop
cmp
jns
pop
mov
imul
dec
outsl
xchg
fsubl
sbb
js
movsb
jmp
jne
adc
cmp
xchg
fwait
cli
dec
lds
in
inc
insb
enter
mov
sahf
arpl
pusha
loop
sbb
push
sub
xchg
jo
xchg
xchg
int3
pop
cld
and
mov
xchg
add
jae
sub
push
xchg
dec
xchg
pop
add
out
pop
mov
jle
repz
fdivrs
inc
inc
lock
add
push
int3
fucomip
and
in
repnz
repz
sub
mov
add
ss
sub
outsl
in
pop
int3
or
xor
or
xchg
les
jns
jmp
ds
add
mov
cmp
xchg
add
imul
dec
lods
cmp
notb
mov
xor
push
sbb
mov
test
arpl
pop
add
shll
sub
out
lret
pop
mov
pop
pop
xchg
push
cmp
add
or
iret
mov
pop
int
jge
ficompl
jmp
cwtl
inc
or
test
mov
mov
lds
fwait
shll
xor
sub
sbb
add
jmp
and
xor
das
and
je
cmp
adc
idivb
cmc
jnp
cmp
or
out
ja
push
aam
daa
xor
out
mov
rcrb
in
or
xor
loope
add
sbbl
in
packsswb
popf
je
sub
in
jb
and
inc
add
mov
lea
sbb
dec
scas
xchg
xchg
fdivrs
cld
insl
and
cli
lea
daa
in
mov
test
mov
int
fsubr
in
scas
mov
pop
jae
outsl
push
dec
gs
and
lcall
fdivs
and
mov
cmpl
xchg
pop
addr16
or
andl
cmp
mov
repz
cmpsl
test
mov
aad
dec
pop
xchg
jnp
lods
jne
pop
sbb
mov
repz
adc
fcoms
push
adc
lock
insl
mov
or
lods
add
je
dec
fisubrl
pop
and
aaa
pusha
sbb
cmp
cwtl
jo
dec
sub
out
pop
fst
adc
sub
ficomps
adc
subl
stc
icebp
les
mov
sbbl
mov
xchg
mov
mov
movzwl
dec
mov
fxch
and
movsb
cmpsl
push
mov
mov
into
xchg
mov
push
imul
jb
and
bound
std
mov
pop
clc
sti
in
xlat
outsb
fnstenv
dec
cmc
in
mov
mov
ret
scas
aam
push
addr16
enter
adc
add
push
sub
mov
nop
jle
bound
das
mov
push
push
imull
mov
adc
fs
icebp
mov
add
sub
loopne
xchg
rol
fwait
mov
sub
loop
jbe
lea
pop
jp
loope
imul
xchg
popf
out
jnp
or
xchg
pop
sub
push
mov
mov
sub
dec
shrb
inc
add
cmp
jle
pop
lods
mov
mov
push
pop
mov
fwait
xchg
lods
cmpsb
pusha
movsl
mov
loop
or
scas
sbb
xor
das
or
daa
mov
fidivrl
mov
mov
js
cmp
aam
cmc
repz
jg
mov
les
jb
in
jns
aas
mov
mov
pop
imul
int3
fs
out
sahf
adc
and
movntq
outsb
fidivrl
je
jecxz
or
cmpsl
pop
cmp
outsl
push
cmp
enter
xchg
test
fdivrs
loope
idivb
arpl
mov
pushl
add
cltd
push
adc
mov
aas
movsl
movsb
mov
lret
or
sbb
daa
fadd
fadd
jne
mov
or
push
mov
inc
xchg
lret
sub
popf
xchg
nop
mov
imul
ja
cmp
imul
adc
div
xchg
xchg
scas
cltd
ljmp
xchg
ss
je
inc
fisttps
jo,pt
notb
mov
insl
nop
int3
fwait
jmp
cwtl
cmc
fisttpl
mov
les
inc
pop
pop
cwtl
lea
sbb
cli
mov
mov
jae
push
dec
add
icebp
test
cmc
je
push
out
jle
inc
lahf
cmp
insl
lock
adc
jmp
lods
jg
cmp
imul
mov
test
add
test
jae
adc
xchg
movsb
fldt
jns
push
arpl
jecxz
enter
jg
xor
sbb
aad
dec
xchg
mov
cmpsb
stos
adc
ljmp
cmp
and
int
add
add
adcl
daa
cltd
mov
sub
pop
ss
mov
xor
into
and
xchg
insl
add
or
push
aam
push
push
add
jg
mov
jle
call
mov
sti
xchg
sahf
dec
cmp
mov
aaa
andl
ds
mov
dec
cli
xchg
shlb
mov
pop
out
jno
add
leave
test
adc
repz
adc
sub
add
push
jae
inc
and
ds
and
dec
inc
mov
and
add
cwtl
scas
icebp
int3
mov
scas
dec
test
xor
pop
pause
jb
jmp
cld
les
push
xorl
jmp
dec
insl
nop
fdivs
adc
decb
add
lret
cmp
xor
sbb
dec
ret
xchg
mov
jo
mov
adc
dec
jp
lret
xchg
loop
ret
fnstsw
xor
jne
jl
std
pop
inc
addb
adc
cmpsl
ss
xchg
and
sbb
cmp
mov
pop
pop
mov
std
or
jg
sarb
repnz
out
pop
sbb
push
andl
dec
pop
clc
and
add
mov
insb
pop
gs
jp
dec
inc
jnp
je
int3
xor
enter
fs
stos
inc
mov
adc
mov
mov
lods
mov
xlat
jno
mov
rorl
insl
jmp
jmp
fwait
stos
or
dec
push
mov
in
ljmp
push
gs
jecxz
cmp
add
mov
lds
js
lea
fistpll
inc
jl
rolb
xchg
mov
sub
or
jecxz
jecxz
out
out
mov
mov
and
or
in
sub
jl
ja
mov
pop
aad
ret
mov
jnp
xchg
mov
ljmp
dec
sub
dec
jnp
and
add
dec
mov
sbb
repz
push
cmp
fmull
cmp
repnz
aad
cli
inc
xchg
test
jbe
cmp
loopne
cs
data16
gs
aaa
cmpsl
mov
cltd
repnz
or
push
outsb
cmpsb
xlat
in
subb
add
hlt
pop
push
fisttps
aad
mov
xor
int3
rolb
xor
mov
gs
idivb
shlb
cli
lods
jnp
shrb
or
test
setl
mov
movsl
push
jae
loopne
cltd
mov
divb
push
lea
push
pop
add
jo
or
mov
jecxz
mov
and
mov
push
mov
addr16
xchg
or
cmp
cmpsb
sti
dec
cwtl
imul
push
mov
mov
inc
mov
xor
lods
iret
jg
jmp
mov
push
mov
test
and
test
sbb
mov
mov
pop
sti
pop
movsb
cmp
jo
arpl
mov
lods
int
stos
aaa
mov
loope
aam
mov
sub
xchg
pop
icebp
add
ds
push
inc
test
je
mov
inc
xchg
les
inc
ret
into
mov
ds
cmp
and
jecxz
mov
jecxz
cmp
xchg
xchg
jo
inc
mov
or
pop
xchg
push
cs
test
and
fwait
shll
push
xor
rcrb
adc
dec
roll
lock
mov
cmp
insl
dec
fcoml
out
in
xlat
mov
ret
lock
repz
orl
leave
mov
vsqrtss
mov
xor
mov
fists
aad
inc
leave
sbb
mov
in
xchg
nop
dec
fwait
push
push
popf
inc
fdivrl
xor
pushf
outsl
or
mov
and
inc
imul
sbb
sub
push
jno
push
icebp
iret
in
jno
xor
adc
add
js
sbb
inc
xor
jb
jnp
mov
mul
or
push
pop
mov
mov
jne
and
and
test
std
mov
out
adc
adc
jb
popa
dec
idiv
xor
mov
cmp
or
push
in
or
stos
push
fs
mov
push
push
sub
sbb
sbbb
fstpt
push
lods
mov
test
dec
lret
jb
pop
mov
cmc
aad
jmp
sbb
adc
sarl
cmp
cmp
bound
mov
sub
xchg
pop
mov
and
adc
movsb
bound
jnp
xchg
push
push
arpl
sbb
testl
sub
out
xlat
out
into
rcrb
xlat
incb
outsl
pop
add
fistps
cmc
cld
dec
ja
sahf
in
jle
sbb
test
dec
fistpl
test
add
in
add
dec
cld
cltd
pop
xchg
sbbl
mov
mov
outsl
push
push
ret
mov
movsb
push
pushf
push
insl
xor
jmp
and
sbb
xor
fcoms
and
fimull
and
imul
dec
sbb
adc
jae
mov
lahf
fisubrl
xchg
sahf
lods
cs
add
dec
cmpsb
popf
pop
ds
add
xchg
pop
ds
roll
jbe
lds
push
sahf
int3
mov
movsl
cmc
aaa
out
jno
je
daa
fs
jnp
in
sub
fldcw
add
imul
nop
inc
pop
pop
sbb
clc
xchg
xchg
cli
xchg
and
popf
push
adc
xor
cltd
sbb
or
sbb
lcall
jmp
in
aaa
lea
js
sbb
cld
in
jle
jno
bnd
test
shr
repz
leave
xchg
xorb
jae
cmp
adc
decl
out
dec
hlt
xchg
dec
inc
jmp
ss
push
inc
pop
sti
jge
push
aam
cmp
pop
add
add
mov
in
daa
xchg
add
add
add
lahf
and
fildll
push
cli
pop
inc
dec
pushf
inc
inc
pop
add
out
mov
imul
add
sbb
mov
mov
fs
jmp
xchg
inc
cmp
test
pushf
xor
mov
sub
movsl
or
jecxz
jmp
mov
inc
filds
dec
xchg
push
pop
shr
mov
inc
mov
gs
inc
std
xchg
scas
and
dec
hlt
adc
sub
pop
bound
mov
mov
mov
ja
sub
xor
xchg
andb
dec
add
cmp
andb
add
fwait
inc
stos
mov
pop
repz
mov
add
adc
fsubr
xchg
cld
inc
insb
in
in
lret
lcall
mov
cmp
mov
sti
repz
cmp
push
jb
jb
dec
cmp
dec
inc
xor
and
xchg
xchg
pop
fistl
mov
push
vmovaps
cmpsl
out
loop
mov
clc
repz
mov
movsb
dec
inc
sub
mov
es
pop
cli
mov
sahf
jle
jge
adc
or
sti
shrl
mov
idivl
fwait
push
popa
jo
pop
push
and
ret
push
mov
xchg
push
das
fisttpll
xor
xchg
lods
stos
dec
insb
mov
out
sub
cmp
mov
or
xchg
jne
xor
test
inc
cmp
adc
xor
push
test
cmpb
sbbb
rcrb
stos
int
inc
xchg
adc
mov
fdivrs
xlat
push
aas
test
test
into
lds
out
xchg
shlb
hlt
fwait
popa
ja
stc
jo
js
int3
aam
leave
shll
mov
jns
ficomps
push
stos
pop
mov
jae
ja
lret
mov
ret
adc
notl
sub
ret
push
mov
repz
jmp
mov
fdivr
test
aam
fmuls
adc
stos
clc
xchg
adc
pop
out
call
call
cmp
xor
cmp
pop
pop
pop
gs
arpl
pop
pop
push
gs
mov
push
fistpl
ja
sbb
aam
aas
call
mov
xchg
push
pop
xchg
fsubr
add
xor
mov
popa
mov
lret
cld
repnz
fisubs
sub
push
bnd
xor
or
hlt
pusha
out
jmp
cmp
jp
pop
jge
pop
inc
popa
pop
jo
in
mov
movsl
mov
sub
sbb
mov
fdivr
mov
enter
gs
push
jg,pn
inc
mov
push
push
adc
mov
pop
shlb
xchg
jae
test
add
iret
mov
in
repnz
test
push
sub
enter
and
cmp
ja
xor
cmp
add
cmp
je
jp
adcb
ffree
adc
aas
insl
pop
push
jae
mov
imul
cmp
mov
ds
pop
xor
pop
ret
jo
xchg
mov
sub
push
fwait
pop
cmp
and
xor
ljmp
fstsw
push
movsl
sti
nop
out
insb
push
out
mov
insl
sbb
jle
inc
add
or
rcl
bound
scas
mov
xlat
push
fsubs
sbb
mov
jg
xchg
jmp
cmp
fcmovu
dec
aaa
rcrb
mov
cli
jl
in
pop
mov
or
ss
faddl
xor
pop
or
mov
mov
or
push
repz
aam
addr16
gs
rcrb
mov
lods
repnz
xor
in
pop
xor
mov
xchg
push
pop
xchg
cmp
cltd
mov
jae
or
sarl
pop
mov
sub
icebp
sarb
lea
or
add
and
jge
push
es
dec
in
ret
aad
jp
jo
jo
push
xchg
stc
hlt
and
out
test
ljmp
and
adc
sbb
xor
int3
in
jp
pop
mov
enter
fidivrs
push
stos
fsubrl
push
sbb
mov
daa
jb
arpl
cltd
mov
sub
mov
dec
mov
or
cmp
rorb
pop
testb
and
inc
push
cmp
test
daa
scas
pop
insb
mov
xchg
daa
inc
addl
adc
xorb
cs
dec
fmuls
jne
shl
loop,pt
pushf
xchg
in
jnp
roll
push
fcompl
pop
push
and
dec
xor
movb
or
fisubrs
insb
out
pop
jmp
xor
mulb
mov
sbb
jae
cmpl
aas
mov
mov
inc
jb
cmp
adc
out
fwait
mov
stos
xchg
push
loop
ret
loope
cmp
xchg
jle
fisubl
xor
stos
push
fistps
jmp
in
mov
xchg
in
sbb
test
mov
sub
or
sub
arpl
jle
jl
lahf
insl
into
dec
mov
js
mov
jno
add
pop
and
lock
into
push
mov
dec
adc
inc
xchg
jg
mov
gs
sbb
inc
bound
sbb
mov
dec
fdivs
data16
jo
call
xchg
fwait
xchg
mov
xor
mov
jne
push
push
std
js
dec
sub
ds
enter
inc
cs
scas
jp
mov
repnz
fnstcw
jle
lock
pop
adc
cmpsb
cli
inc
addb
shlb
push
mov
cmp
sti
popa
sub
fistpl
mov
stos
cmp
add
inc
inc
or
jp
in
out
repnz
outsl
nop
loope
push
dec
and
mov
movsl
ret
pop
dec
push
sub
mov
cli
loop
xor
mov
sub
mov
mov
push
push
push
xor
into
js
sub
inc
das
sub
fisttps
ret
in
negl
movsb
fisubrl
out
inc
rcr
push
mov
and
loopne
xor
add
ds
pop
stos
jae
mov
dec
out
or
test
hlt
popa
sbb
sahf
pop
nop
pop
add
mov
int3
push
test
sbb
and
or
mov
daa
idivl
dec
mov
push
mov
leave
jmp
inc
xchg
jecxz
loop
ficoms
dec
notb
sbb
ljmp
jno
pop
cli
mov
dec
mov
mov
push
call
xor
push
dec
or
loop
jno
mov
cmc
insb
and
idiv
shl
jl
mov
icebp
clc
xor
scas
sar
int3
push
pop
jmp
in
int
andb
push
push
lods
repnz
stos
xor
mov
mov
rol
mov
dec
sub
mov
mov
jb
xchg
cmp
sbb
xchg
testl
gs
mov
insb
mov
add
xor
dec
ljmp
sbb
dec
jne
sbb
push
ret
mov
addr16
enter
dec
inc
rcrb
or
xor
and
test
jle
xchg
popa
xchg
dec
mov
aas
dec
stc
sub
inc
inc
add
loope
and
clc
fs
shll
pop
push
nop
les
sub
imul
or
lcall
pop
outsb
lods
jb
int3
xor
scas
xchg
outsl
rcrb
int
out
inc
in
repz
add
mov
jg
jge
fcmovne
mov
in
mov
add
fwait
sbb
stc
movsl
mov
fsts
fwait
aad
cwtl
cmpsb
ja
in
xchg
int
fsubl
lcall
xchg
adc
nop
insb
pusha
lcall
push
iret
dec
cmpsb
jbe
scas
popa
sbb
fs
andl
xchg
shrb
mov
mov
std
mov
mov
push
push
mov
mov
sub
in
int
sbb
inc
dec
mov
addb
mov
fwait
jns
cmc
xor
aaa
lds
mov
push
sbb
out
ja
inc
outsb
rorl
mov
sub
and
lret
lcall
jg
out
bound
andb
insl
loope
fstl
das
add
rolb
add
add
pushf
ljmp
push
test
jb
lds
adc
aaa
fsubrs
xchg
sbb
pop
loope
loopne
loope
add
push
scas
pop
add
or
test
into
mov
dec
pop
jbe
push
out
in
xor
mov
mov
dec
loop
addl
push
or
idiv
jge
test
ret
pop
cmp
mov
mov
add
pop
addr16
mov
jl
in
mov
cmpsb
mov
xor
sbb
fcompl
inc
pop
div
jle
xchg
fidivrl
pop
dec
mov
fildll
ds
fistpl
xor
mov
xchg
inc
sub
dec
sub
pop
sbb
mov
iret
dec
mov
rcrb
mov
push
arpl
jb
pop
pop
sbb
js
das
mov
sbb
repz
daa
sti
xor
xor
mov
nop
xor
cmp
int3
popf
adc
mov
ss
sbb
test
adc
jo
xchg
les
sub
shl
jno
or
jge
push
inc
ja
mov
mov
pop
pop
fs
in
mov
fs
out
call
je
clc
push
ror
into
jb
cmp
ljmp
pop
popf
icebp
js
mov
inc
scas
stos
adc
inc
add
adc
pushf
gs
and
call
add
adc
mov
mov
ljmp
pushf
movl
pop
mov
sbb
mov
add
push
imulb
sbb
pop
popf
push
dec
dec
fwait
pop
icebp
push
pusha
ljmp
dec
push
mov
push
lds
ret
xchg
and
mov
jmp
jno
jecxz
cs
jbe
pop
mov
mov
addr16
aad
scas
dec
clc
mov
lahf
gs
xchg
cmp
cmp
push
and
outsb
int3
sbb
fsubr
xlat
inc
or
dec
lahf
loopne
das
fildll
scas
jge
or
sbb
sar
cmp
dec
aam
repz
add
mov
xchg
or
pop
pop
sub
loope
adc
test
mov
xor
pop
ficomps
filds
jecxz
add
push
mov
icebp
outsl
shll
and
push
out
adc
ss
fs
dec
xor
mov
ljmp
stc
lret
ss
ja
cmp
ucomiss
add
es
xchg
and
out
in
push
mov
call
and
fnstenv
mov
push
mov
jp
out
mov
or
enter
lret
mov
xor
pop
bnd
pop
sub
mov
leave
mov
jl
cmp
mov
pop
jp
cmp
sub
mov
mov
out
filds
push
jnp
mov
les
mov
cltd
inc
inc
push
pop
jge
arpl
outsl
adc
or
mov
int3
cmp
sub
and
jae
scas
mov
xor
xchg
jbe
pop
sbb
jmp
movsl
adc
cmp
add
jb
cmovs
stc
stc
push
addr16
pop
xchg
sbb
in
mov
inc
add
mov
push
and
xor
lods
mov
cmp
jns
dec
adc
insb
cmpl
lret
pop
and
in
ret
lcall
lahf
fincstp
dec
in
or
mov
xor
add
xchg
jge
add
iret
loop
shrb
popa
dec
pop
pop
mov
call
or
cmp
adc
push
fcom
lret
and
or
lahf
nop
js
test
jle
sahf
pop
clc
pop
mov
leave
mov
clc
add
insl
ficoms
std
out
mov
mov
pop
xlat
stos
xor
aas
jg
ret
inc
scas
push
jge
mov
scas
add
andb
add
repz
cmp
pop
pop
sbb
int
jno
enter
push
cmp
inc
push
paddsb
mov
fwait
loopne
adc
rorb
fadd
pop
cmpsb
push
lcall
or
xchg
sub
xchg
shlb
pop
cld
in
lret
mov
loopne
pop
adc
jmp
mov
xorl
dec
repnz
jle
push
fstpt
imul
push
sti
xchg
adc
hlt
fbstp
mov
fwait
sahf
adc
push
xor
ret
mov
sub
in
sub
or
xor
mul
fcmovnb
jbe
cwtl
out
sub
or
or
inc
lods
mov
adc
jnp
data16
lods
test
jle
mov
sub
adc
sub
dec
add
cltd
outsl
xlat
jns
xchg
or
push
pop
cs
mov
cwtl
loop
mov
xchg
adc
xor
xor
push
mov
jne
loope
inc
lods
in
pop
xchg
adc
sub
fdivrl
pop
rclb
jle
arpl
cld
test
pop
dec
lods
das
lahf
cmpsl
or
imul
hlt
mov
sub
xor
fiaddl
pop
lods
mov
mov
cmp
push
jns
inc
mov
pop
fwait
jp
shr
mov
fwait
and
jmp
xchg
lahf
inc
pop
daa
out
mov
sbb
lods
push
or
inc
push
cmc
mov
lods
aas
insl
cmp
movsb
xor
add
in
xlat
mov
lds
lds
push
cmpsl
add
int3
jno
insb
inc
mov
push
enter
pop
and
lock
pusha
dec
jae
jnp
pushf
rcr
adc
mov
jmp
or
xchg
call
scas
cmp
fcmovnbe
inc
insb
enter
dec
pop
sbb
imul
cmp
mov
adc
jo
push
mov
test
cld
pushf
lea
jno
adc
cmpsb
xchg
inc
mov
add
jnp
gs
mov
sub
test
mov
aam
movups
in
xor
lds
lret
mov
inc
out
inc
cs
xchg
adc
pop
jmp
and
sub
pusha
sbb
fsts
lock
jne
aam
repnz
fdiv
cmp
shll
inc
in
pop
fdivs
pusha
push
sub
jle
popa
fsubr
inc
dec
sahf
std
sub
imul
js
xor
fxch
hlt
mov
cmc
clc
lret
into
cmp
les
leave
clc
lcall
mul
mov
outsl
or
repnz
sbb
fists
fsubs
mov
shlb
pop
lret
mov
cltd
shrb
dec
mov
dec
jns
negl
or
nop
mov
mov
lret
jle
mov
push
jae
jl
ja
mov
xor
push
mov
sbbb
cmpsb
mov
cmp
or
or
lcall
hlt
hlt
mov
out
cmp
pop
daa
sub
lea
in
push
mov
cltd
aaa
in
shrb
cmp
xor
addr16
jmp
enter
fnsave
insl
movsl
mov
sbb
jae
test
fcmovne
mov
jl
and
lods
adc
mov
or
popa
mov
das
movsl
cmpsl
xchg
in
cmp
arpl
ds
int3
inc
out
fwait
sub
movl
xchg
and
and
dec
fdivrp
xor
inc
into
inc
lea
dec
in
mov
sbb
test
pusha
mov
gs
sarb
arpl
out
pop
fmull
jge
mov
add
int3
adc
hlt
rol
push
xchg
xor
push
es
out
jle
es
cmp
aam
lret
out
mov
push
xlat
mov
push
rcll
scas
xlat
jge
sbb
daa
sbb
ss
jnp
jmp
pop
mov
repz
and
out
sbb
div
push
xchg
and
dec
push
lahf
lods
lds
loopne
cmp
loope
xchg
lret
andb
xchg
push
test
dec
add
pop
fisubl
imul
mov
or
adc
ret
mov
std
lods
dec
jnp
pop
test
roll
jae
dec
jmp
dec
cli
and
xchg
loopne
aam
add
lret
ljmp
adc
data16
ljmp
das
cmp
cltd
xor
inc
jl
daa
jg
jge
sti
ret
cmpsb
inc
lret
inc
pop
fnstsw
into
call
lahf
insl
fidivl
cmp
ret
sub
or
pop
mov
pop
xchg
push
stos
xchg
adc
pop
push
loopne
mov
push
fwait
adc
sub
jecxz
or
insb
xor
jb
cmp
fiaddl
pop
cmp
sbb
fidivrl
in
pop
aas
rorb
inc
mov
std
in
movsl
test
mov
mov
sub
xor
jge
stos
mov
sbb
xor
dec
or
xchg
les
mov
cwtl
rsqrtps
pop
stos
and
mov
cmp
repz
mov
fisubrl
cmp
mov
or
fwait
shrb
sbb
and
jns
movsb
pop
sbb
bound
gs
andl
adc
jno
mov
jmp
data16
push
cld
dec
sub
out
int3
sbb
std
mov
bound
or
in
mov
test
xor
lcall
fnstsw
sbb
in
jno
xchg
adc
stos
xlat
mov
adc
jns
lods
nop
cmpsb
inc
xchg
mov
mov
sub
pop
add
xchg
push
jne
sub
in
and
mov
outsl
adc
jb
pop
pop
ret
fsubr
sbb
mov
mov
out
inc
pop
push
imul
out
push
jle
push
test
sub
fnstcw
fimull
mov
xchg
int3
mov
mov
mov
insb
rorl
add
out
in
inc
aas
gs
fmuls
dec
cli
inc
xor
sub
mov
gs
insb
testb
shrl
dec
cmp
sahf
cmp
out
stos
add
jecxz
sub
out
repz
iret
inc
or
sbb
xchg
or
imul
dec
jbe
test
imul
idiv
push
mov
psrlw
sub
gs
pusha
jg
icebp
jg
repz
mov
outsb
inc
mov
xchg
xchg
jne
sub
add
sbb
push
adc
mov
fld
adc
js
pop
cltd
pushf
or
sbb
dec
dec
fstl
sbb
cmp
sarb
jmp
in
in
mov
pop
push
lods
rcrl
or
push
fcomps
mov
add
rorl
fwait
jp
mov
jb
addr16
jle
and
push
dec
adc
ret
imul
pushf
dec
jns
mov
sbb
sbb
les
mov
repnz
pop
jb
jmp
jle
loop
mov
test
in
mov
xchg
push
int
adc
jo
in
mov
adc
xchg
or
lret
add
scas
call
cmp
stos
pop
movsl
fwait
popa
enter
adc
push
push
dec
inc
lds
add
pop
into
mov
dec
iret
imul
pushf
push
loopne
lret
adc
int
mov
lods
aad
sbb
dec
mov
xlat
jg
clc
or
fwait
shr
ljmp
jle
jae
arpl
out
mov
add
cmpsl
pop
mov
adc
xchg
jbe
out
imulb
negl
aad
rclb
cmp
je
test
adc
jbe
push
jnp
push
cld
je
adc
mov
imul
fwait
pusha
es
push
jo
int
pop
lret
js
mov
inc
pop
pop
cmp
ljmp
cmp
sbb
sti
dec
mov
rcl
movntps
or
and
icebp
pop
icebp
jbe
adc
fs
shlb
imul
ss
loop
or
xchg
mov
clc
shr
fisubs
inc
and
cmc
arpl
fistpl
push
and
sub
inc
pop
xor
xchg
lcall
insl
ret
push
jp
pop
in
lcall
not
lds
scas
mov
sysenter
loope
loop
mov
mov
lds
outsb
mov
lret
push
iret
pop
fidivrs
push
xchg
sbb
fldt
xchg
pop
mov
adc
pushf
daa
rorb
shrb
popf
les
mov
ret
xchg
push
aas
adc
push
outsl
xchg
stos
cmp
mov
imul
sahf
ss
in
pop
inc
mov
ljmp
xor
out
push
xchg
outsb
imul
into
outsb
es
fwait
xchg
or
cmp
divb
sbb
ja
xchg
jge
mov
adc
or
andb
cmpsb
sbb
cmp
inc
xor
mov
pop
jnp
shr
push
mov
xchg
push
repnz
cmp
js
pop
sub
ffreep
sbb
push
pushfw
pusha
sub
jns
mov
bound
sahf
adc
and
lods
dec
push
movsb
stc
adc
cmp
and
pusha
pop
fmull
std
mov
or
cmp
or
jl
jns
fdivs
fcomip
outsl
sub
ds
daa
add
push
outsl
jge
sbb
cltd
add
or
lds
mov
mov
mov
xor
sub
cli
popa
scas
xor
sub
dec
cmc
into
aas
or
cmp
pop
test
xor
cwtl
out
lret
pop
shr
add
xchg
mov
mov
stc
fsubrs
nop
adc
and
xor
sbb
inc
shll
cmp
mov
or
test
dec
lods
jno
or
xor
mov
xchg
dec
add
xor
sbb
test
js
mov
push
xchg
jnp
mov
hlt
jl
call
rol
ja
addl
icebp
jle
and
mov
push
pop
push
mov
pop
pushf
jno
enter
adc
fmulp
cli
popa
adc
fdivs
test
hlt
adc
dec
inc
fimull
push
jnp
fs
lds
sub
and
divb
jmp
ret
and
outsb
clc
int
push
sub
mov
jl
test
pop
repnz
adc
negl
js
mov
lds
jl
add
mov
or
cmp
pop
push
mov
push
or
mov
push
push
subl
xchg
dec
push
push
arpl
es
loopne
aas
cmp
and
mov
popf
xor
orb
or
push
cs
ss
int
xchg
push
xchg
pushf
pop
lcall
push
outsb
in
push
or
dec
repz
xchg
and
test
leave
push
sbb
dec
std
xchg
and
incb
adc
sbb
pushf
lds
inc
mov
push
adc
pushf
xor
into
sbb
lea
not
pop
shrl
outsb
sbb
push
test
cmpsb
lahf
and
or
cmp
or
dec
mov
fs
push
jnp
pop
pop
add
mov
lret
mov
inc
sbb
loop
push
jb
pusha
jl
dec
imul
cmp
divb
sahf
and
call
rclb
shll
add
lahf
xchg
ret
xchg
pop
sbb
cmpsb
je
outsb
sub
icebp
jno
stc
outsl
out
add
pop
cmpsb
jb
pop
cmp
test
lods
lock
pop
push
loopne
pusha
mov
loope
xchg
pop
push
push
je
stos
pop
pushf
fcmovnb
xchg
dec
jbe
add
fs
arpl
ficomps
incl
mov
xlat
mov
push
push
hlt
pop
mov
bound
pop
imul
xor
xchg
fisttpl
mov
movsb
add
xor
int3
ret
pushf
or
inc
push
push
push
stc
sub
inc
xchg
outsb
add
xor
lahf
and
sahf
inc
jns
xor
shr
out
ret
sbb
pop
sub
daa
cmp
jb
ret
leave
pop
adc
inc
lret
pop
sbb
cmp
in
dec
in
and
or
cmp
mov
xchg
mov
and
loop
mov
jge
xchg
jo
jge
inc
inc
movsl
adc
cmp
mov
js
incb
out
add
out
mov
xor
push
iret
loop
pop
popl
inc
ljmp
fstpl
xchg
sbb
jle
fcoms
push
adcb
cmp
aam
inc
popa
add
sahf
cmp
and
mov
mov
mov
out
in
aam
mov
pop
pushf
pop
push
aad
push
pop
xchg
xchg
xor
out
and
fs
mov
les
dec
sbb
lahf
lcall
shll
mov
cltd
fptan
push
adc
cs
push
stc
push
or
add
and
nop
loope
cmp
xor
movsl
ret
test
stos
jnp
js
pop
mov
in
mov
sub
xor
dec
jecxz
in
or
add
int
cmp
fstl
mov
in
sahf
xor
cmpsb
imul
inc
cwtl
icebp
loopne
mov
xor
mov
mov
es
push
clc
daa
rorb
push
jb
ret
repnz
rcrl
in
xchg
rol
movsl
idiv
inc
int3
sbb
push
fs
inc
mov
test
mov
push
sub
push
xchg
in
push
cmp
inc
mov
pop
sahf
aad
push
mov
iret
add
add
pop
sti
inc
pushf
adc
ja
ljmp
enter
sub
push
popa
stos
je
loope
push
mov
sub
lods
iret
mov
daa
addr16
ss
sub
push
sarb
xchg
cmp
scas
dec
daa
or
movsb
lods
shrl
mov
notb
mov
std
loope
cmp
test
gs
aam
pop
inc
sbb
cmc
popa
xchg
dec
jg
mov
les
test
push
jge
cld
out
mov
adc
es
push
or
xchg
ss
cmp
inc
adc
lahf
in
push
mov
inc
xchg
pop
add
push
outsl
fldl
push
sbb
push
dec
add
test
hlt
xchg
outsl
xor
jno
or
jo
xlat
ror
cmpl
push
insb
push
inc
inc
out
or
sbb
push
ret
or
pop
inc
mov
xor
push
and
mov
cmpsb
insb
jo
stos
mov
loop
lret
ds
loope,pn
out
subl
insl
aaa
fistl
clc
popa
arpl
xchg
jg
cmp
dec
mov
cli
inc
pop
loop
push
and
push
movsl
push
in
xor
aas
mov
sub
mov
mov
xchg
or
js
jno
xor
ss
gs
dec
xchg
jmp
ret
cli
subb
notl
jbe
mov
jge
pop
or
cmp
out
dec
fwait
cwtl
xchg
leave
jbe
jle
add
scas
mov
adc
push
ret
push
mov
ja
and
testb
mov
inc
push
dec
xor
rorl
sbb
lods
insb
inc
mov
jnp
mov
adc
ja
rcl
pop
aam
xor
in
add
cmpsb
pop
imul
mov
rdtsc
xchg
jl
or
jp
sbb
inc
cmp
push
cmp
aas
mov
negl
lret
inc
pop
dec
ret
gs
mov
xchg
lock
popa
mov
lret
push
sarl
out
push
adc
sbb
mov
adc
push
lods
or
mov
push
out
mov
mov
sub
add
cs
sbb
or
cmp
cmp
inc
lods
aas
dec
and
dec
das
sbb
loope
xchg
add
jo
sbb
push
cmp
hlt
in
sub
fisttps
dec
sarb
inc
push
mov
mov
push
fiaddl
jns
cli
cmp
jmp
enter
add
ror
pop
jmp
xor
inc
push
ret
cmpsb
sbb
stos
push
andl
cmp
adc
dec
scas
mov
lock
fldt
cltd
sar
push
lock
sarb
shr
jl
or
add
xor
shlb
js
repnz
add
test
xor
fdiv
mov
sub
in
xor
jb
test
dec
dec
xorl
mov
and
int3
jb
cltd
xchg
jmp
add
add
jmp
xor
push
scas
sbb
clc
adc
and
jp
cmpsl
test
addl
clc
test
fldt
mov
mov
roll
xor
adc
imul
xchg
outsl
add
fnstsw
loop
sbb
test
inc
aad
cmp
push
std
mov
jne
push
xor
pop
mov
or
dec
and
lock
and
pop
mov
sbb
mov
push
xor
dec
xor
jae
sub
imul
shll
sub
sbb
dec
js
sbb
js
subb
dec
imul
inc
or
push
dec
out
pusha
lret
ds
xor
xchg
mov
fmul
cmpsb
clc
sti
push
cmpsl
add
stos
dec
mov
sbb
shrb
sti
imul
dec
and
dec
jle
cmp
loope
sbb
cmc
push
out
mov
ss
ja
shrl
les
shrb
mov
xor
fimuls
std
mov
dec
movsb
std
cmpsl
push
mov
arpl
divb
jl
jae
jb
imul
xchg
dec
push
in
cvtps2pi
ss
out
cmc
xchg
movsb
cltd
dec
inc
cwtl
out
lcall
lahf
pop
mov
sub
cld
fbld
int
stos
mov
out
int3
and
push
add
fistps
insb
jbe
xlat
xchg
pushl
push
mov
adc
jg
lret
xchg
out
fcomps
inc
out
aam
lods
jl
jbe
les
mov
in
cwtl
cmpxchg
je
insb
sbb
mov
push
cmp
cmpsb
sub
loopne
out
sub
pusha
imul
int3
loope
jle
test
popa
in
mov
or
lea
popf
adc
sub
arpl
and
fcomi
push
sbb
add
lahf
jns
enter
sub
and
jmp
lds
inc
leave
fnsave
push
xor
aaa
mov
inc
lret
sbb
or
adc
xor
mov
inc
insb
jle
add
cmpsl
js
or
pop
xor
data16
pop
hlt
loop
mov
aad
mov
loopne
mov
cmpsl
je
addr16
mov
mov
mov
sub
out
pusha
stos
pusha
push
in
xchg
jo
and
mov
cmp
es
or
mov
loopne
leave
adc
dec
inc
inc
sarb
loopne
push
repnz
comiss
mov
push
jne
add
aam
mov
das
movsl
sub
jge
cmp
cltd
repnz
cmp
ljmp
push
insl
outsl
lret
jecxz
roll
jle
movsb
add
xor
add
mov
clc
xor
inc
xor
xchg
aaa
out
shll
addr16
cmp
push
sar
xlat
test
movsl
mov
and
adc
cmpsl
sbb
xor
mov
mulb
sbbb
out
mov
lret
loop
arpl
insl
sub
ja
mov
sub
popa
daa
loope
into
ret
or
xchg
push
ss
sti
xchg
jae
cmp
inc
xchg
fimuls
mov
gs
scas
inc
xchg
iret
cmp
insl
aad
push
mov
into
in
sub
test
arpl
ret
push
dec
mov
sbb
jg
test
aad
incb
popa
out
sbb
cwtl
or
stos
jp
lret
sbb
shlb
sahf
and
stos
mov
xchg
aad
nop
sbb
mov
ret
jno
push
jl
add
popl
xchg
push
add
ficompl
dec
sub
and
fadds
jno
out
aad
pop
cmpsb
shlb
xlat
mov
nop
repz
add
cmp
dec
jmp
cmp
into
push
into
outsb
add
aas
in
imulb
fdivs
push
sub
aaa
pop
lds
add
ljmp
inc
dec
pop
cmp
jbe
adc
and
iret
loop
or
xor
cltd
jge
mov
cwtl
jnp
repz
pop
pusha
lock
sub
jnp
dec
xor
roll
and
dec
sbb
cmovns
push
rcr
lea
leave
ja
fldt
push
adc
and
inc
cs
test
loopne
out
xchg
and
push
push
xchg
wbinvd
and
repz
push
ss
dec
out
outsb
pop
aad
jns
sbb
subb
sub
leave
call
xchg
mov
pop
xchg
mov
pop
jecxz
cmpl
mov
cmp
lahf
movsl
test
test
test
xor
push
in
je
movsb
sub
aam
sbb
push
jae
addr16
decb
add
ds
cmp
imul
and
stc
pop
mov
loop
mov
test
std
mov
mov
fs
les
popa
push
test
lcall
dec
adcl
inc
add
pop
adc
sbb
fldt
jb
rorl
push
ja
andb
fldt
leave
sbb
xchg
adc
cmpsb
mov
leave
sbbl
mov
les
fimuls
icebp
push
cmpsb
jbe
cmp
push
or
add
mov
pop
pushf
shll
test
add
dec
out
or
subl
pop
mov
xchg
test
lods
cmc
xchg
ss
loopne
pop
movsb
dec
loop
rorb
jp
mov
inc
fdivrp
in
scas
dec
mov
sbb
mov
movsb
adc
sub
cmp
inc
bound
out
fcoml
rcl
adc
jo
ja
inc
ds
sub
adcb
lds
inc
call
pop
insl
adc
mov
pop
shl
lahf
jbe,pn
mov
adc
dec
adcb
add
cld
fcoml
test
xchg
loope
dec
out
aaa
inc
movsl
dec
xchg
or
clc
pop
loope
sahf
js
xor
sbb
add
pop
or
nop
ficoms
push
test
sub
sub
test
pop
nop
imul
insb
fiadds
xchg
cmc
dec
lea
jecxz
je
or
addr16
inc
ljmp
imul
xchg
adc
lods
pop
mov
in
push
jae
xchg
int3
xor
fistps
sub
push
add
cwtl
mulb
movsb
push
lea
xor
pop
mov
pop
mov
push
pop
push
push
outsl
das
aam
jne
rcrl
out
xor
ret
cmp
add
dec
jo
xor
fs
jecxz
int
mov
or
or
ret
movsb
adc
shlb
hlt
pop
cmp
jg
andl
pop
sub
cld
inc
bound
repz
pusha
xchg
or
in
cs
jnp
mov
cmp
adc
mov
ret
lods
pop
or
addb
pop
adc
pusha
xchg
add
scas
int3
add
or
mov
mov
xor
jg
dec
data16
inc
nop
in
push
orb
in
cwtl
mov
int3
xor
in
imul
sub
call
xchg
push
fcmovnb
test
repz
pop
mov
neg
cmp
pop
mov
pop
sarb
rolb
std
movsl
mov
inc
jl
adc
adc
sub
and
in
add
rorb
clc
inc
pushl
lahf
push
dec
dec
sbb
cmp
das
jne
lods
adc
xchg
popf
aad
xchg
add
pop
jp
mov
mov
lcall
jne
mov
adc
in
sbb
adc
sub
and
mov
mov
xor
cmpb
cmp
pop
fs
jbe
pop
aad
xchg
push
loope
dec
or
test
mov
xor
fstl
dec
in
mov
dec
jecxz
das
xchg
leave
out
cmc
and
lds
push
shll
loope
or
les
xchg
dec
jg
das
dec
and
shll
mov
cmp
pop
test
mov
and
mov
sub
jg
push
aaa
xor
lahf
push
add
push
sub
sub
xchg
mov
push
add
gs
add
cmp
fidivs
pop
dec
cwtl
sarl
xchg
hlt
and
aaa
in
inc
xor
sti
ret
or
aaa
ds
sbb
dec
sahf
call
xor
push
out
inc
xlat
ret
inc
std
or
in
and
xchg
or
cmp
loop
pop
cli
or
aad
push
cmpsb
loop
push
dec
mov
cmpsb
arpl
jno
sub
cltd
mov
stc
lock
adc
jo
cmp
dec
and
mov
jl
cs
jnp
jle
sub
mov
mul
or
xchg
cmp
repz
test
jo
mov
ss
scas
hlt
add
and
lcall
mov
jg
outsb
inc
mov
inc
int3
rorl
cli
pop
mov
insb
mov
jae
inc
sbb
inc
and
repnz
sahf
jbe
jp
sahf
inc
lret
jl
pop
fldt
sub
add
push
test
sub
cmp
add
stos
pusha
cmp
out
mov
pusha
lea
pop
xchg
imul
xor
mov
insl
shlb
outsb
pop
mov
outsl
movsb
mov
push
push
fistl
adc
outsb
dec
adc
jle
imull
jmp
xchg
dec
adc
inc
fdivr
lock
sbb
jle
push
push
rcrl
adc
push
popa
nop
aaa
adc
aaa
mov
fdivs
arpl
scas
aaa
popa
enter
fcoml
test
mov
cmp
int3
and
shrb
ja
out
sbb
dec
sbb
js,pt
lret
notb
stc
fcomip
cmpsl
hlt
ret
xchg
fisubrs
jl
stc
lods
shlb
mov
adc
aas
mov
dec
xchg
shl
test
test
mov
lea
fiadds
pop
sbb
mov
xchg
cmp
std
lret
or
fwait
out
inc
mov
jnp
push
lods
cld
pop
mov
pop
xchg
lcall
and
test
cmp
push
lds
jo
fsubs
call
ja
push
jbe
test
mov
jno
cmp
mov
or
push
sbb
xchg
or
mov
lea
or
push
ror
adc
aaa
pop
stc
mov
jo
sub
mov
or
insl
lahf
dec
pop
ja
rcrb
inc
jns
jge
lock
test
es
idivb
jmp
mov
cld
pop
mov
xor
fsubrs
sbb
xlat
mov
and
xchg
pop
je
mov
jae
outsb
ja
popf
sub
xchg
in
xor
fbld
addr16
xchg
hlt
scas
or
or
adc
sbb
mov
xor
sub
push
pop
adc
les
das
aad
cmpsb
sbb
jo
icebp
stos
fstpt
addb
repz
mov
lcall
xor
dec
icebp
bound
jo
pop
inc
and
call
dec
test
bound
ret
jns
mov
xchg
mov
and
in
mov
in
xchg
lcall
insb
stc
ret
stos
pushf
or
js
ds
mov
xor
stc
fcomp
mov
out
rcrb
mull
jno
lret
jne
aaa
popa
in
movsb
das
popf
icebp
std
push
hlt
lcall
test
outsb
or
hlt
mov
and
sub
mov
pop
aaa
aam
jnp
loopne
jp
stos
js
outsl
aam
sbb
jne
iret
sbb
sbb
and
clc
jne
stos
fidivrs
and
mov
mov
jecxz
lds
adc
stos
out
lods
sbb
repz
cmp
jge
test
aad
insb
or
push
bound
lds
cli
outsl
mov
pop
add
mulb
fwait
out
sub
and
mov
mov
push
inc
int
mov
fimull
sub
arpl
jg
xlat
adc
mov
mov
xor
mov
pop
addb
sbb
xchg
ljmp
push
sbb
testl
insl
pop
push
mov
or
or
lds
xor
iret
out
pop
xchg
pop
daa
das
popf
mov
pop
cmp
pop
xchg
mov
push
and
cli
dec
jb
jmp
inc
mov
gs
xchg
pushf
addl
mov
add
cld
bound
xor
idivb
lcall
push
lcall
int3
xchg
in
icebp
pop
sahf
dec
movsl
pop
notl
imul
out
adc
mov
or
jmp
in
int3
mov
push
jmp
dec
adc
pop
adc
scas
sti
pop
js
sbbl
or
mov
adc
cli
sbb
mov
add
in
mov
pop
mov
mov
dec
shl
movsl
jbe
jne
pop
cmp
rolb
and
imul
push
repnz
sti
pop
dec
inc
push
or
aaa
cli
pop
sahf
sub
stos
mov
jge
scas
push
ret
mov
mov
cmp
push
push
jp
pop
adc
push
into
test
lea
test
icebp
mov
sbb
pushf
leave
xor
cmp
and
adc
xor
loopne
cmpsb
fwait
cmp
aad
xor
sbb
loop
sbb
adc
mov
sbb
jge
stc
push
lret
mov
arpl
dec
dec
sub
adcb
dec
repz
adc
xor
lods
mov
dec
mov
push
xchg
das
pushf
dec
mov
out
pop
xchg
push
adc
cli
xchg
inc
xor
fnstsw
mov
sub
sbb
fcomip
mov
or
in
jle
mov
mov
inc
aam
sbb
cmpsl
add
mov
or
jb
xchg
or
hlt
into
mov
arpl
rol
arpl
and
cwtl
ficoms
xor
jb
inc
add
jne
sbb
sub
inc
mov
icebp
push
add
inc
inc
mov
xor
mov
sahf
hlt
loop
ds
aad
inc
int
outsb
kmovw
jle
ja
imul
dec
aam
adcl
mov
lret
jle
sti
cmp
add
push
out
dec
mov
shr
sbb
inc
daa
jb
in
jl
dec
push
jmp
pop
fiadds
into
jnp
dec
jge
inc
cld
sub
lcall
in
fiaddl
dec
gs
pop
in
incl
insb
aas
popf
faddl
pop
movsl
fistl
leave
mov
xor
xchg
add
add
dec
ret
cmp
sub
dec
movsl
iret
pushf
sbb
cs
jecxz
mov
js
lret
jae
or
xchg
cld
adc
lods
cmp
xchg
pop
xor
push
dec
scas
inc
adc
cmpsb
pop
pop
mov
ret
xor
push
push
sub
inc
sahf
dec
cmpsl
imull
fmul
loop
rcll
nop
jmp
cmpsl
push
sbb
dec
sub
cmc
mov
cli
adc
mov
lock
je
mov
add
push
shlb
mov
mov
pop
call
xor
mov
push
cmp
add
in
sbb
cmp
adc
sub
ljmp
aad
push
xor
loopne
cmpsb
mov
jp
xor
mov
jp
mov
insl
mov
adc
fwait
pop
aad
js
dec
mov
cltd
jl
cmpsb
mov
fldcw
push
mov
and
mov
sahf
inc
jecxz
subb
push
pop
cmp
es
lret
int
ja
push
inc
pop
mov
xor
and
or
push
jbe
out
mov
repz
mov
cs
inc
aam
pop
addr16
add
cmc
dec
ffree
inc
andb
xor
adc
nop
sbb
add
shll
call
stos
add
sar
hlt
jae
aad
jmp
push
dec
adc
push
pop
rolb
mov
sub
orl
ss
adc
add
jne
and
stos
fwait
mov
adc
pop
hlt
push
sahf
hlt
js
adc
mov
dec
out
or
mov
dec
in
jbe
fistps
cmp
mov
xchg
pop
dec
pop
jmp
adc
gs
xchg
push
and
pop
xchg
mov
lahf
pop
push
cmp
add
out
mov
xor
loopne
int3
int
xor
pop
nop
jg
popf
lret
xchg
leave
mov
pop
fsub
mov
mov
sub
bound
adc
leave
push
inc
xor
inc
movsb
xchg
ds
insb
push
call
mov
pop
mov
dec
inc
jnp
jp
hlt
mov
es
sub
insl
jmp
or
leave
test
cmpsb
push
shlb
pop
sbb
jle
pop
mov
mov
movsl
fwait
rcrb
gs
jnp
add
or
sbb
rcrl
out
add
cmp
stos
addr16
out
sub
xor
fmull
add
js
inc
insl
cltd
shr
adc
rcrb
dec
pop
iret
ss
push
leave
std
pop
int3
loopne
or
das
pop
lahf
or
inc
cmp
fwait
je
repz
add
mov
lods
cmp
mov
lret
mov
aas
rolb
pusha
repz
movb
sbb
into
mov
popa
jnp
jg
lret
rorl
add
xor
mov
mov
cmp
pop
xchg
rol
bound
in
test
daa
fcoml
sahf
sbb
push
jge
aaa
mov
sbb
sub
fldt
xor
mov
push
sub
pop
dec
hlt
mov
jns
lods
mov
mov
cltd
mov
sub
outsl
fstl
cltd
je
and
call
out
fwait
pushf
sbb
and
scas
icebp
dec
mov
aad
fdivs
mov
mov
sbb
fnstenv
sahf
ss
xorb
sti
loop
sbb
arpl
push
cltd
lea
inc
or
and
lods
dec
ljmp
sbb
jae
push
cltd
int
jno
cmp
and
jne
ret
cmp
or
jnp
lock
das
push
adc
add
xor
mov
mov
jp
jns
pop
add
sahf
icebp
int
ljmp
mov
jl
inc
and
mov
jnp
call
hlt
jae
cmp
aad
cld
addl
cmpsb
test
cmp
dec
sub
stos
mov
lods
jae
imul
jge
inc
fistl
pop
jbe
cmpb
adc
nop
das
or
sub
sbb
dec
cs
cmpsb
repz
pop
and
push
in
cmp
hlt
cltd
inc
int3
loopne
lods
aas
mov
push
adc
dec
pop
js
fwait
xchg
jmp
and
or
idiv
sub
in
test
push
xor
into
leave
aad
sbb
lock
xlat
adc
add
nop
call
mov
dec
in
nop
loope
int3
cmp
dec
cmp
jae
cmc
test
push
mov
dec
cmpsl
sub
lahf
lret
popf
push
cli
scas
add
push
pop
bts
cwtl
stos
xchg
pop
mov
jmp
xlat
adcb
mov
cmp
adc
inc
test
aaa
in
xchg
cmp
addr16
lods
movb
cmp
jp
lock
jmp
jl
repz
repnz
mov
sbbb
clc
rclb
lock
lods
dec
xlat
push
inc
in
and
int3
jb
mov
in
sti
lods
outsb
sub
xor
callw
adc
mov
xchg
sub
icebp
sbb
jo
sbb
lods
xor
cmc
dec
pusha
sub
jno
shr
push
push
dec
cltd
cmpsb
pop
jmp
jae
cmp
xlat
jnp
sbb
sub
daa
in
outsb
mov
loop
mov
out
fdivrl
mov
daa
fwait
add
or
das
outsb
adc
stc
adc
push
ja
jl
popf
cli
fld
add
mov
in
xchg
js
jmp
and
aaa
nop
fcmovnu
fimuls
adc
push
fsubl
mov
fsubs
mov
js
add
shlb
pop
adc
cmp
cmp
dec
adc
push
lds
lcall
add
mov
scas
test
int3
mov
xor
cmp
push
xor
cmp
out
mov
scas
mov
cmp
adc
inc
pop
loopne
push
sbb
les
xor
lock
ss
insb
jge,pt
add
fadd
mov
cmc
or
aam
mov
clc
ret
addr16
mov
cltd
out
mov
ret
out
mov
es
frstor
mov
icebp
and
adcb
pop
hlt
aas
xchg
inc
hlt
fsubr
out
in
jecxz
rcrb
inc
aad
and
jb
gs
cmc
jno
pop
sub
dec
mov
adc
ss
out
test
adc
int3
pop
cmp
aaa
adc
into
int
and
push
fsubrs
push
popa
iret
adc
inc
xchg
jl
mov
xchg
adc
gs
cmp
sbb
fs
dec
mov
adc
inc
arpl
fmull
mov
mov
xor
aaa
sar
sub
xchg
out
sbb
add
lods
jl
ds
scas
jnp
aas
lret
push
rolb
hlt
clc
mov
in
ja
cwtl
add
adc
mov
popa
cli
movb
test
iret
mov
jge
adc
jmp
out
popl
adc
pop
jmp
mov
call
mov
lcallw
push
dec
cs
scas
loopne
lds
imul
jl
push
arpl
fiaddl
pop
mov
mov
and
mov
pop
pop
inc
fmull
addb
bnd
pop
adc
mov
cli
in
or
mov
imul
cwtl
xchg
push
pop
xor
out
pushf
inc
cld
xchg
std
int
dec
push
adc
sbb
shrb
mov
xor
adc
mov
mov
fnsave
mov
insb
push
jl
pushf
sbb
adc
mov
dec
sarb
scas
push
decb
cltd
test
dec
ja
mov
aam
jge
pop
test
mov
shlb
out
fcomi
mov
adc
sub
pushf
xchg
add
jp
js
or
flds
mov
cmp
daa
insl
cs
dec
jge
mov
mov
adc
fwait
jbe
adc
stos
test
and
sub
pushl
fiaddl
or
imul
lods
dec
pop
fiaddl
and
cmp
adcl
std
loop
inc
enter
das
sahf
cmpsb
movsb
or
lods
mov
int
cmpsl
out
popf
loope
mov
and
mov
iret
pop
add
loopne
rolb
sbb
jmp
or
aam
inc
lcall
adc
and
jg
ss
sub
cld
cmp
lods
inc
stc
mov
jb
jo
lret
cmp
sbb
mov
dec
sub
xchg
sti
pop
pop
mov
add
pop
xchg
pop
push
xor
lret
cmp
lahf
mov
sahf
arpl
inc
or
test
cmp
pop
cs
add
cmp
shrb
in
rolb
shlb
test
xor
loope
xor
cld
or
or
shll
rcrl
dec
xorb
dec
test
inc
jle
mov
insl
rcr
pop
pusha
stc
mov
fidivl
js
dec
enter
ds
adc
popa
jbe
mov
push
inc
mov
repz
adc
aad
mov
xchg
arpl
sbb
popf
jns
es
lret
arpl
loop
adc
jmp
andl
jle
pop
cwtl
mov
xchg
cmp
mov
ffree
int3
call
inc
outsl
mov
icebp
or
test
mov
aas
cmpsl
subl
cli
rorb
jecxz
jp
movsl
add
jmp
mov
and
xchg
aas
arpl
and
out
enter
enter
inc
adc
pop
and
lock
cmpb
mov
jns
out
lods
fists
inc
mov
sbb
mov
mov
jge
or
aaa
jmp
movsl
les
sbb
mull
iret
add
data16
hlt
roll
andb
inc
add
adc
xchg
mov
lret
mov
arpl
stos
ret
cltd
push
cli
pop
pop
popa
sbb
push
je
inc
loope
mov
inc
mov
movsl
adc
or
xor
es
push
jne
dec
mov
jbe
push
mov
sarb
jno
out
mov
jle
pushf
add
je
in
idivl
mov
mov
pop
and
ficoms
loopne
xchg
movw
pop
and
xchg
dec
mov
or
cli
out
push
mull
xchg
cmc
adc
inc
lods
push
clc
pop
dec
rcrb
das
imul
xchg
mov
leave
pusha
jno
and
push
push
je
outsl
xchg
testb
dec
pop
sbb
pushf
rorb
out
enter
cmp
pop
cwtl
ret
or
push
dec
fstpt
adc
and
mov
js
dec
les
cmp
bound
adc
daa
adc
xor
mov
inc
adc
dec
push
sub
or
pop
xor
scas
xor
xchg
in
push
movsl
jne
fldcw
xchg
out
xor
imul
filds
leave
fadds
push
add
pusha
jg
fucomi
mov
xchg
jno
xor
ss
popa
add
and
testb
mov
mov
sub
rclb
inc
and
sti
xchg
cli
or
loop
mov
jne
jmp
fcmovnu
inc
cwtl
cmpsl
jle
cmp
into
xor
shll
popa
lret
fstl
test
gs
out
xchg
dec
nop
jecxz
jl
push
lods
mov
popa
and
loop
jl
pop
sbb
push
insb
stos
mov
sbb
cltd
xchg
jo
repnz
mov
xchg
inc
insb
loope
or
push
cs
lock
xchg
sbb
sbb
xchg
push
clc
jecxz
and
sbb
xor
add
stos
add
jle
mov
rclb
or
jno
in
jne
pusha
xor
fldcw
cmp
out
or
pop
hlt
aad
or
or
cli
push
lret
cmp
lods
jecxz
xchg
mov
into
jbe
movsb
ror
inc
iret
dec
fimull
call
jae
push
jns
push
pop
push
ret
cmp
mov
and
scas
inc
ljmp
jecxz
test
fisubl
fs
mov
mov
test
shll
test
pushf
fisubrs
ja
and
mov
daa
jbe
pop
mov
shrb
add
pop
mov
aad
lods
imul
jo
shll
push
push
mov
aam
repz
jp
stos
adc
nop
inc
mov
movsl
repz
loopnew
sub
cmc
mov
mov
dec
mov
dec
lods
aaa
xor
and
adc
push
jl
cmpb
or
lret
lock
sub
and
dec
idivl
sub
dec
xor
mov
push
mov
dec
mov
xrstors
xchg
lea
out
jbe
clc
xor
push
hlt
pop
sub
sahf
out
adc
mov
push
or
pop
cld
sbb
push
push
outsb
les
mov
xchg
in
nop
test
and
out
shll
mov
movups
stos
mov
incl
add
outsb
in
pop
xor
rcr
mov
adc
jmp
mov
insb
adc
adc
out
pop
jle
or
push
pop
mov
lock
dec
jp
js
daa
lret
arpl
cwtl
push
leave
out
mov
test
ja
lea
es
ret
scas
add
push
sub
pop
dec
dec
or
mov
