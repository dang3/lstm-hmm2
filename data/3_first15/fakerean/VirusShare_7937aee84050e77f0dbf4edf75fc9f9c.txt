jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
imull
inc
add
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
fiadds
inc
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xchg
inc
add
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
push
ss
add
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
pop
inc
add
add
push
add
add
push
add
xchg
add
add
inc
add
mov
add
push
inc
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
mov
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
inc
or
adc
lds
pop
or
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
dec
sbb
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
mov
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
aaa
inc
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
cwtl
push
inc
add
cmp
je
mov
pop
cmp
pusha
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
jg
inc
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
and
inc
add
lea
mov
mov
inc
add
xor
sbb
pop
and
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
js
inc
add
add
mov
mov
push
push
call
test
js
lea
lea
movl
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
out
pop
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
xor
adc
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
sbb
add
mov
lea
cmp
or
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
inc
sbb
fldl
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
test
push
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
incl
mov
mov
addl
cmp
jb
xor
mov
cmp
jne
xor
add
cmp
mov
jne
mov
pushl
push
push
call
pop
pop
xor
pop
leave
ret
mov
mov
call
sub
jne
mov
add
lea
cmp
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
pushl
xor
push
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
pop
jmp
call
jmp
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
test
je
andl
push
mov
mov
mov
call
mov
andl
test
jne
lea
mov
lea
push
call
test
mov
js
mov
test
je
mov
push
call
mov
mov
mov
call
mov
test
je
decl
cmpl
je
mov
pop
pop
leave
ret
mov
test
je
push
call
pop
xor
ret
push
mov
test
je
cmpl
jg
xor
mov
xor
pop
ret
push
mov
push
andl
push
push
mov
mov
lea
push
mov
call
test
js
cmpl
push
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
call
lea
mov
call
push
mov
mov
call
pop
pop
ret
mov
test
je
push
call
pop
xor
ret
andl
inc
mov
mov
test
jne
mov
cmpl
push
je
pushl
mov
call
mov
test
jne
mov
mov
call
andl
andl
mov
pop
ret
pushl
push
pushl
pushl
call
jmp
push
mov
cmpl
je
cmpl
push
je
mov
push
lea
movl
call
cmpb
je
pop
xor
pop
ret
pushl
lea
call
test
je
jmp
cmpb
jne
push
lea
call
mov
call
pop
movb
jmp
int3
mov
sub
cmpl
push
push
mov
push
jge
mov
mov
movl
mov
mov
push
mov
movl
call
mov
add
test
js
mov
cmpl
push
je
mov
adc
test
les
add
add
test
je
push
call
mov
add
cmpl
jge
mov
mov
push
push
push
call
mov
add
cmpl
mov
jge
mov
mov
aas
inc
add
add
addl
test
jle
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
mov
push
pushl
mov
mov
pushl
mov
push
call
test
lea
js
cmpl
je
andl
mov
pop
pop
ret
mov
jmp
movl
jmp
push
mov
sub
mov
xor
mov
push
pushl
mov
mov
push
call
test
jne
xor
mov
xor
pop
call
leave
ret
push
mov
cmpl
jne
cmpb
push
push
call
mov
xchg
test
add
xchg
jmp
add
aam
imul
add
add
rolb
add
mov
push
in
add
pushf
xlat
test
add
lods
into
movsb
insb
add
fwait
push
imull
in
add
push
push
push
push
push
call
gs
add
add
mov
add
push
xchg
fiaddl
stos
shl
add
add
jnp
jmp
xchg
add
add
add
ja
jl
add
stos
add
pop
pop
test
pop
pop
add
fs
add
add
mov
lock
add
add
movl
lcall
inc
in
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
jno
add
stos
sti
mov
mov
jbe
fistpl
add
xchg
into
add
incb
add
mov
jmp
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
add
add
mov
lea
add
hlt
cwtl
rolb
fwait
popa
stc
jp
fsubrp
add
pop
add
leave
test
in
sub
pop
push
push
push
push
lea
push
call
repnz
leave
add
push
outsl
add
jl
mov
push
add
add
add
push
add
ror
scas
xchg
push
into
nop
jns
mov
add
cmpsl
jmp
add
movb
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
add
stos
mov
roll
enter
pop
lods
push
xchg
mov
cltd
test
loope
add
lret
add
add
call
push
push
push
push
push
push
call
add
int
add
cmpsb
stos
leave
not
fsubrs
cld
add
lods
add
fcoml
iret
testl
fadds
mov
add
mov
pop
mov
add
clc
cmpsl
scas
mov
jnp
mov
jno
lock
lods
add
add
popa
mov
mov
in
call
add
push
push
push
push
push
lea
push
push
push
lea
push
call
add
call
add
add
lds
push
pushf
stc
fldl
add
mov
xchg
push
out
test
add
xchg
add
out
sti
add
add
js
testl
sub
pop
push
push
push
push
push
push
call
xchg
add
mov
pop
push
push
imulb
pop
add
push
add
push
sbb
add
add
incb
add
fcoml
add
add
add
sti
pop
add
add
push
imul
sub
add
push
lea
push
push
lea
push
call
cmpb
mov
add
mov
ljmp
add
mov
lods
sti
ja
add
insb
add
jne
jb
add
jl
add
lcall
test
add
ret
push
push
push
lea
push
push
push
push
push
call
add
add
clc
push
stos
repnz
fwait
and
xchg
add
add
mov
std
add
rcrl
add
movb
pop
pusha
cltd
add
add
fildl
add
cmpsl
out
pop
add
add
add
xlat
aam
jno
add
mov
add
out
jne
add
repnz
pop
mov
push
push
push
push
push
push
push
push
call
add
lea
jo
loop
out
pushaw
mov
mov
add
xorb
pop
cwtl
mov
popa
add
mov
mov
add
jb
push
scas
push
xchg
add
fiaddl
ret
iret
out
add
add
pop
jb
add
pop
mov
add
push
push
push
push
push
push
lea
push
push
push
call
push
loope
fwait
lds
imul
add
add
add
pusha
add
xlat
jp
repnz
add
push
add
add
adc
pop
cld
push
jp
add
test
add
js
les
add
add
pop
add
add
add
mov
in
add
add
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
xchg
testb
add
xchg
add
add
add
add
pop
cwtl
fcmove
add
aam
xchg
ja
add
mull
pop
add
lahf
add
add
add
cwtl
push
add
movsb
fsub
xchg
sub
pop
add
push
push
push
lea
push
lea
push
push
push
call
add
pop
ljmp
add
add
repnz
add
test
add
push
add
xchg
add
aad
ja
jle
movsl
out
jo
in
add
mov
addl
call
mov
cmpsl
frstor
rolb
sub
pop
mov
push
push
push
lea
push
lea
push
call
add
add
add
add
add
test
int
add
clc
flds
scas
out
stos
add
add
cmpsl
mov
mov
add
fsub
insb
add
frstor
add
xchg
mov
add
mov
push
rcl
mov
sti
stc
add
jns
out
add
add
add
add
lcall
sbb
push
push
push
push
push
lea
push
push
push
push
call
mov
lea
jmp
ror
add
add
mov
shll
mov
sar
fsub
add
mov
jle
out
add
sahf
test
add
push
jge
je
scas
fistl
sub
pop
add
push
push
not
add
push
push
pop
add
shr
sub
shl
not
rol
pop
shl
pop
push
push
lea
push
push
push
lea
push
lea
push
call
xchg
add
add
add
pop
imul
xchg
add
add
fadds
add
cltd
adcb
add
popa
push
cli
add
popl
in
add
add
fs
add
add
stos
push
cmc
add
sahf
lcall
jne
call
push
push
push
push
push
push
push
lea
push
push
call
pop
int
xchg
stc
mov
shlb
out
loop
imul
jle
lds
leave
sahf
add
fwait
mov
add
add
add
xchg
add
add
add
xchg
add
fdivr
lcall
inc
lock
push
lea
push
push
push
push
push
push
push
call
pop
add
add
add
pop
addr16
aad
mov
mov
add
push
mov
lock
out
mov
add
push
add
add
movl
lea
push
push
push
call
test
xchg
mov
jl
jb
insb
mov
lods
jo
add
jle
add
add
add
add
xchg
loopne
je
mov
scas
xchg
add
ret
lds
add
in
hlt
lcall
push
push
push
lea
push
call
pop
jno
cltd
shlb
cmpsb
mov
fnsave
outsl
add
rcrb
mov
add
hlt
clc
add
add
add
xchg
cwtl
lret
cld
iret
test
fs
outsl
add
mov
add
add
add
addb
out
add
pop
arpl
std
mov
int
jae
in
mov
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
call
pusha
cld
add
cltd
fiadds
add
leave
add
mov
add
test
add
add
mov
mov
add
in
cli
adcl
loopne
lcall
jne
push
lea
push
push
push
push
push
call
add
ljmp
xchg
xorl
add
jmp
add
stc
xlat
rol
add
mov
add
pop
call
push
lea
push
lea
push
push
lea
push
push
push
call
sti
les
add
xlat
add
mov
icebp
jp
add
jge
add
mov
mov
repnz
add
fucomi
mov
enter
add
cltd
popf
divl
repnz
push
add
in
add
cltd
add
jp
sub
pop
pushl
push
push
lea
push
call
arpl
add
add
push
pop
imul
les
insb
add
add
fadds
filds
xlat
add
add
add
enter
bound
push
xchg
add
xchg
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
call
add
mov
add
ret
add
lea
popl
movb
add
add
cmpsl
push
add
movb
add
lcall
push
mov
add
add
push
add
lds
scas
sub
pop
call
push
push
push
xor
add
lea
rol
rol
sub
xor
not
not
pop
sub
add
pop
push
push
lea
push
push
push
push
call
add
pop
cmpsb
fadds
enter
lock
mov
add
je
add
ljmp
add
nop
add
outsl
add
add
xchg
jl
lock
mov
add
ja
cwtl
fcomi
fsub
add
lcall
jne
push
lea
push
push
call
xchg
add
add
out
add
add
add
lcall
fdivrl
add
call
in
hlt
pop
call
push
push
push
push
lea
push
push
push
lea
push
call
stos
add
xchg
push
cld
add
js
add
lods
stos
add
les
pusha
push
xchg
shrb
fstps
lret
mov
mov
loopne
push
push
push
ror
push
push
pop
add
sub
sub
shl
not
pop
ror
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
jnp
fadds
call
add
out
jmp
lods
roll
fwait
add
add
push
add
add
add
add
fnstcw
xorb
add
int
cmpsl
add
mov
roll
faddl
add
mov
mov
add
push
lea
push
call
add
add
xchg
add
push
push
fadd
add
mov
add
add
add
lock
popa
loopne
jbe
fstp
scas
shlb
mov
hlt
add
scas
fwait
push
fadds
mov
add
hlt
add
lcall
add
in
dec
sbb
or
add
xchg
push
lea
push
push
lea
push
push
call
fdivs
sti
add
lods
fs
mov
les
add
pop
xchg
mov
push
add
jecxz
add
xchg
push
aam
add
add
add
add
lock
pop
call
mov
push
push
push
call
stc
clc
pop
add
lret
add
into
pop
addr16
mov
add
xchg
std
pop
iret
pop
push
add
movl
add
add
icebp
mov
cmc
mov
add
push
push
add
add
sub
pop
push
push
push
push
call
add
lret
add
add
add
mov
push
test
addl
xchg
add
int3
add
add
jmp
lret
filds
addl
mov
add
cmpsb
mov
pop
js
shlb
add
in
add
stos
mov
test
sub
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
lea
pop
cmpsl
mov
scas
jge
add
jmp
leave
add
add
add
lret
add
pop
add
xorb
jmp
ljmp
add
lcall
pop
hlt
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
out
lock
mov
jge
add
add
mov
add
fiaddl
mov
in
mov
fiaddl
mov
js
pop
jp
push
mov
fimull
mov
jb
scas
add
add
in
pop
jns
add
in
fdivr
lcall
pop
in
push
push
push
push
push
push
push
push
push
call
jb
add
add
add
cmc
add
mov
mov
test
lods
mov
add
add
pop
add
add
mov
add
ret
add
add
add
push
lea
push
push
push
lea
push
push
push
call
mov
add
cmpsb
add
jbe
xchg
add
pop
add
aad
jae
mov
push
add
add
loopne
mov
add
xchg
add
clc
add
sub
pop
mov
xor
push
push
call
orl
mov
add
pop
add
data16
add
repnz
mov
add
mov
add
mov
lcall
jne
push
lea
push
push
push
call
lods
je
add
add
lods
add
roll
push
add
mov
add
mov
leave
add
add
mov
pop
sub
pop
push
mov
xor
push
push
lea
push
push
call
mov
add
lods
clc
test
testl
mov
add
cmpsl
rcl
add
add
cmc
add
lahf
out
push
mov
jp
pop
add
test
insb
les
sub
pop
add
push
push
push
call
mov
cli
roll
out
add
push
je
xorb
pusha
mov
add
mov
in
add
shr
sub
xchg
data16
pop
sti
jmp
cltd
fistpll
add
jns
ljmp
mov
jle
popa
mov
out
add
add
mov
movsb
add
in
hlt
lcall
push
push
push
push
push
push
lea
push
push
call
sti
add
add
lds
scas
addr16
out
cld
out
add
push
jbe
add
pop
mov
add
cltd
into
pushf
popa
add
jl
push
aad
in
mov
lcall
sub
pop
mov
xor
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
mov
shlb
add
je
mov
add
add
add
add
add
fidivrl
add
mov
add
outsl
scas
add
int
add
sti
push
imul
add
fildl
add
add
js
mov
add
add
xchg
push
add
sub
pop
push
push
push
push
push
push
push
call
add
lret
je
push
mov
xchg
add
out
xchg
add
add
std
jbe
ret
jecxz
add
imul
add
add
insb
add
imul
fs
ljmp
push
add
add
jno
add
sub
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
iret
ret
hlt
filds
jle
lret
lea
push
add
test
add
add
xchg
aad
fadds
idivb
arpl
lods
add
pop
mov
rolb
popa
sub
pop
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
push
mov
add
lods
pop
shl
leave
loop
add
pop
xchg
cld
stc
xchg
add
add
ja
fwait
imul
add
int
mov
add
movsb
push
lea
push
push
push
push
call
out
stos
jbe
test
ljmp
mov
out
add
cld
push
mov
fs
add
jmp
add
in
add
mov
andl
xchg
js
in
mov
in
popl
lcall
push
push
push
push
push
push
push
call
add
add
jo
mov
hlt
lret
int
add
jecxz
add
add
add
add
sub
pop
mov
push
push
push
push
push
push
lea
push
call
call
js
leave
push
mov
ja
jp
mov
push
add
add
movsb
add
int3
add
imul
add
filds
add
xchg
cmc
pop
fsubrs
call
movb
movsb
add
mov
mov
les
add
bound
add
pop
add
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
fdivrs
add
fiaddl
add
add
test
mov
cltd
xchg
add
add
mov
rol
mov
add
fildll
add
mov
add
out
add
xchg
add
mov
arpl
shll
mov
in
fdivr
lcall
ret
add
add
push
push
push
push
push
push
push
push
call
cmc
ret
popf
cld
lods
lret
add
mov
add
add
add
add
xchg
pusha
shl
mov
add
add
mov
add
js
add
add
mov
jle
enter
add
into
lods
add
sub
pop
add
mov
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
aad
add
pop
add
add
add
add
add
sti
std
add
test
mov
rcrb
mov
pop
add
add
sub
pop
xor
push
lea
push
push
push
push
push
push
call
in
mov
add
pop
cmc
stos
out
cwtl
xchg
push
add
jne
add
test
xchg
pop
testb
add
test
add
test
aad
insb
sti
pop
movsl
mov
in
in
add
push
push
push
push
push
push
push
call
add
jbe
gs
jge
bound
add
aad
rolb
out
incb
mov
xchg
add
in
lcall
push
and
test
push
push
push
push
push
lea
push
push
call
add
mov
pop
mov
js
roll
testl
add
testb
push
loop
ret
lock
add
jbe
mov
cmc
add
out
cltd
mov
jge
add
add
cmpsb
push
mov
in
call
xor
push
push
call
mov
mov
in
xchg
iret
add
jmp
add
ja
repnz
imul
shlb
lret
push
add
xorl
xchg
sarl
cmpsb
add
repnz
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
insb
stos
in
roll
pop
out
clc
fcomp
add
fimuls
jecxz
fiadds
xchg
add
pushf
add
xchg
mov
add
stos
mov
add
test
test
push
cmpsl
add
dec
sub
pop
jae
push
push
push
lea
push
push
lea
push
lea
push
call
fiaddl
add
add
fiadds
add
push
add
mov
in
je
xor
add
fs
add
add
add
testl
jno
mov
add
pop
sub
pop
xor
push
lea
push
push
push
push
call
jo
add
add
test
out
mov
add
add
iret
add
mov
add
add
jo
ljmp
add
out
stc
add
in
pop
add
push
push
push
lea
push
lea
push
call
movsl
mov
loope
add
add
out
jle
add
add
loop
add
movb
lds
flds
pushf
popa
add
push
hlt
rcrb
add
add
push
add
add
add
scas
in
js
jmp
add
ret
jmp
jne
push
lea
push
push
push
lea
push
push
lea
push
call
jbe
add
arpl
ljmp
push
add
jo
add
pop
call
cli
out
add
push
add
pop
add
test
arpl
add
add
add
fcompl
rcll
sub
pop
mov
push
push
sub
push
and
add
not
sub
dec
inc
xor
pop
ror
add
pop
push
push
call
decb
add
into
leave
mov
add
add
test
cld
mov
jo
add
xchg
add
pusha
movsb
fiaddl
pop
cmc
add
add
add
andl
jno
gs
sahf
add
loop
add
mov
add
add
add
lcall
jne
push
inc
pop
call
push
sub
shl
lea
pop
push
push
push
rol
inc
sub
push
and
add
sub
add
sub
ror
xor
shl
pop
inc
pop
push
lea
push
push
push
push
push
push
lea
push
push
push
call
repnz
add
mov
mov
fildl
add
add
add
add
add
test
fwait
movl
mov
add
add
add
add
stc
add
add
add
movl
mov
clc
add
scas
jle
xchg
mov
add
lret
xchg
add
push
push
push
push
push
call
xchg
add
call
ja
mov
movl
stc
add
fists
test
imul
xlat
test
pusha
fstpl
in
lock
push
push
inc
shl
xor
pop
call
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
xchg
je
xchg
push
add
pop
add
add
ja
std
add
rcl
add
jnp
add
add
in
bound
sub
pop
mov
push
push
dec
add
ror
dec
pop
push
push
rol
dec
shr
pop
mov
push
rol
pop
add
add
push
xor
add
pop
add
mov
push
push
lea
push
lea
push
push
push
call
add
add
movsl
mov
sarb
xchg
mov
stos
add
bound
add
fwait
push
addb
push
add
lods
movl
add
leave
add
add
cwtl
addr16
mov
add
add
test
in
lcall
xor
push
lea
push
call
add
mov
into
add
addb
add
mov
push
mov
pop
add
lcall
add
xchg
pushf
add
pop
fcmovnu
add
data16
add
loope
iret
addb
notl
hlt
std
imul
add
add
xchg
jb
mov
hlt
add
add
add
fsubrl
sub
pop
add
push
push
push
call
push
push
add
fnstsw
mov
add
mov
add
in
loop
add
add
add
add
sub
pop
add
push
push
push
lea
push
push
push
push
call
add
add
add
add
mov
add
mov
fcompl
xchg
add
add
add
lcall
inc
adc
lock
push
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
rolb
rol
add
std
push
add
add
add
xchg
add
pop
xchg
cltd
icebp
xchg
out
add
add
push
add
jl
lock
jl
add
jne
pushf
add
jl
sub
pop
add
push
push
push
push
call
test
notl
into
add
push
add
fcomps
add
add
add
xchg
cltd
add
push
mov
pop
mov
add
test
add
add
cmpsb
sub
pop
pop
mov
xor
push
rol
sub
pop
rep
push
add
rol
pop
mov
push
push
push
push
call
add
add
add
xchg
mov
add
lock
fldcw
add
std
add
add
call
fadd
out
lods
add
imul
stos
lods
jbe
std
add
mov
add
add
add
sub
pop
xor
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
sti
add
add
push
enter
add
fcmovb
push
add
lret
xchg
cmpsl
add
add
xchg
fadds
lea
add
pop
insb
xchg
add
int
movl
jns
add
push
push
add
insb
add
pop
popl
mov
mov
in
bound
add
add
add
push
push
push
push
push
push
call
mov
add
lret
add
jmp
stos
sti
add
lods
xlat
lock
fistpll
add
leave
push
sti
add
add
pusha
sahf
imulb
add
lods
jbe
xchg
jecxz
add
nop
push
out
mov
aam
sub
in
call
or
je
mov
xor
push
rol
pop
mov
push
push
push
push
push
push
push
push
call
fsubs
jmp
in
add
add
fadds
add
fldl
add
add
add
add
add
lret
add
xchg
mov
mov
sub
pop
xor
push
push
push
push
push
push
push
push
call
mov
add
mov
aad
jae
stos
add
andb
add
add
fiaddl
xchg
jp
mov
sub
pop
add
push
push
push
push
push
lea
push
push
lea
push
call
in
mov
jns
notl
add
push
jae
add
add
push
les
add
lret
lods
add
stc
sub
pop
add
add
push
push
lea
push
push
push
push
push
call
jbe
add
movl
add
les
pop
mov
sar
push
mov
shll
lea
add
fwait
sahf
insb
pushf
fcomi
popf
add
add
add
gs
cmpsb
enter
add
add
je
repnz
xchg
fdecstp
add
push
pop
rolb
mov
add
push
rol
add
add
sub
pop
mov
xor
push
rol
pop
add
push
push
lea
push
push
lea
push
call
add
add
pop
add
movb
add
shl
fcmovnb
add
add
add
iret
jbe
repnz
push
pop
rolb
cmp
idivl
xchg
jb
in
ljmp
pop
pop
push
push
call
add
add
add
mov
add
cli
subb
pushf
fadds
in
push
fs
loop
jns
xchg
mov
xchg
xchg
popf
test
in
les
push
hlt
in
mov
add
mov
jo
xchg
add
pop
cmpsb
fwait
add
movsb
mov
xor
push
add
add
pop
or
je
push
push
push
push
push
push
push
call
add
out
add
push
pop
add
add
lahf
pop
add
mov
mulb
jecxz
add
add
add
lcall
push
sbb
xchg
cmpsl
add
filds
mov
jecxz
loope
push
lods
add
add
pop
mov
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
jmp
test
add
icebp
add
movsb
add
scas
mov
into
lahf
mov
push
jno
mov
xchg
add
add
add
add
add
push
pushf
nop
jl
movb
loopne
add
stc
mov
add
enter
add
sub
pop
add
add
push
add
pop
rep
pop
push
push
add
not
shr
push
or
not
add
rol
rol
sub
add
shl
pop
sub
pop
push
push
push
push
push
call
jnp
out
cmpsl
add
add
arpl
push
nop
subl
fnstsw
jo
addr16
lret
incb
in
in
aam
mulb
add
aam
repnz
mov
mov
add
addr16
add
push
jmp
add
xchg
sub
pop
pop
push
push
lea
push
push
push
call
add
lahf
cld
lret
add
add
add
pop
add
pushf
js
cmc
mov
add
jnp
cwtl
mov
pushf
add
idiv
add
adcb
xchg
mov
cwtl
add
add
add
orl
shll
add
add
roll
lock
push
push
lea
push
call
push
icebp
popa
jbe
icebp
push
out
mov
add
out
mov
add
jae
enter
xor
push
add
enter
add
mov
leave
add
mov
clc
addb
mov
stc
idivl
ja
push
pop
add
pusha
roll
insl
hlt
push
push
lea
push
push
push
call
add
stos
add
xchg
add
in
hlt
rolb
addb
push
add
add
std
add
imul
add
jbe
scas
nop
mov
jp
add
push
test
int
add
add
movsb
stos
push
add
add
test
fwait
add
lcall
inc
and
jmp
push
push
call
loop
idivb
pop
xchg
add
notl
add
pop
shlb
add
cmc
mov
pop
add
lea
leave
repnz
sub
pop
push
push
push
call
in
lret
add
call
add
add
jecxz
mov
add
sahf
add
mov
add
in
add
clc
pop
mov
add
push
dec
lea
add
pop
push
push
sub
rol
sub
pop
push
push
add
dec
rol
pop
push
push
push
push
push
push
push
push
push
call
fiadds
mov
add
insb
jle
add
popl
js
add
add
out
roll
add
leave
mov
add
add
lea
add
cmpsl
out
add
pusha
add
xchg
in
pusha
enter
stos
jnp
out
pop
add
add
mov
add
add
add
jge
in
in
lcall
inc
cld
push
lea
pop
pop
pop
push
push
lea
push
push
push
push
call
mov
xchg
add
add
loopne
xchg
add
jl
xchg
mov
loop
add
add
mov
lret
sti
add
pop
ret
add
sub
pop
pop
push
sub
pop
pop
leave
push
ror
sub
lea
pop
ret
push
not
pop
push
mov
push
sub
pop
add
push
lea
pop
push
push
not
add
pop
push
push
push
dec
dec
pop
push
push
rol
not
pop
movl
addl
push
dec
sub
pop
test
je
push
push
lea
push
push
push
push
call
mov
lods
add
testb
lock
add
pop
in
jmp
testl
loopne
xchg
push
add
lock
add
add
add
jae
add
movl
sub
jbe
lea
mov
mov
add
push
add
xchg
mov
imul
pop
sub
pop
mov
push
not
shl
pop
pop
pop
push
lea
push
push
lea
push
push
push
call
jge
xchg
fadds
shrb
cmpsl
test
loop
add
cmpsb
in
int
stos
roll
cli
mov
mov
add
gs
cltd
xchg
bound
jp
add
xchg
jle
mov
testb
shll
lret
fldl
lcall
push
inc
xor
pop
pop
leave
push
add
pop
ret
push
shl
pop
push
push
lea
shl
add
pop
mov
push
rol
lea
inc
lea
pop
add
push
push
push
push
push
push
push
push
call
add
popa
and
jge
icebp
add
add
test
mov
add
push
stos
arpl
xchg
add
pop
xchg
in
not
lods
add
add
jmp
push
sub
pop
push
push
rol
inc
pop
push
push
inc
add
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
int
hlt
push
add
lret
add
add
mov
add
add
loopne
add
add
lret
popl
add
add
imul
push
jbe
add
sub
pop
testl
push
push
call
add
mov
sahf
push
pop
add
test
shrl
add
add
ret
fiaddl
add
loope
xchg
xchg
push
mov
out
add
add
add
mov
mov
movb
insb
add
add
xchg
mov
add
mov
fnstcw
lcall
inc
or
push
push
push
push
push
call
add
mov
data16
notb
addr16
icebp
test
add
add
std
add
scas
rolb
call
push
push
push
push
call
add
add
arpl
push
sbb
add
int
add
in
imul
pop
in
fadd
lds
in
add
xchg
stos
lret
leave
add
add
add
loope
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
call
orl
add
add
je
xchg
add
outsl
std
mov
add
xchg
mov
scas
in
outsl
jp
add
bound
stos
imul
in
cmpsl
addr16
add
loop
sub
pop
pushl
push
add
add
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
add
js
add
add
push
add
jbe
add
roll
call
sarl
fistpl
lret
stos
xchg
add
in
add
mov
add
add
add
add
int
loope
add
fdivr
lcall
add
adc
cmp
sbb
lea
push
push
lea
push
push
call
sti
cwtl
add
pop
mull
add
add
add
add
imul
lods
add
mov
jae
pop
add
rcll
cmpsb
loopne
add
jne
add
lcall
add
incl
test
not
add
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
movsb
int3
ja
add
bound
mov
add
add
mov
test
xchg
in
add
out
rolb
add
add
add
add
movl
add
cltd
rol
add
int
sub
pop
pop
push
lea
push
push
push
call
test
add
add
addb
add
add
add
add
xlat
xchg
xchg
mov
lds
scas
push
popa
mov
mov
int3
add
add
mov
add
add
add
add
add
clc
pop
add
pop
add
add
push
xor
sub
pop
pop
leave
push
shl
ror
inc
pop
ret
push
push
xor
not
rol
pop
mov
push
add
pop
add
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
pop
ja
add
add
push
xchg
add
add
mov
loop
mov
add
jnp
addb
push
xchg
addr16
jge
add
push
lock
fcomps
add
jl
mov
fdivr
lcall
push
rol
pop
push
push
push
push
push
push
push
push
push
push
push
call
add
js
add
add
mov
add
stos
push
mov
je
rolb
int
je
add
add
add
add
ljmp
add
push
add
add
addl
add
sub
pop
push
push
xor
ror
sub
pop
movl
push
push
lea
push
push
call
add
mov
lods
add
fistl
add
add
lahf
jne
push
mov
lods
add
loopne
mov
lea
filds
xchg
js
in
add
xchg
xchg
add
add
jno
in
lock
lcall
add
jecxz
call
push
call
add
bound
add
add
add
cld
out
nop
jne
add
jns
and
sahf
lock
mov
enter
sub
pop
push
push
push
push
push
call
popf
xchg
pop
add
mov
push
push
movsb
add
pop
hlt
sti
cmc
add
add
ja
hlt
add
add
add
add
jmp
mov
fwait
popa
xlat
fwait
xchg
add
jge
add
add
lret
clc
add
add
jmp
jle
mov
add
add
lcall
cmp
lods
jno
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
fidivs
add
addl
fwait
add
out
add
push
xorb
out
add
pop
insb
cld
jp
add
mov
mov
add
add
jns
in
jns
push
add
enter
add
mov
add
push
out
mov
lcall
insl
cld
add
test
sbb
pop
add
add
loopne
mov
mov
pushf
popf
hlt
test
add
scas
scas
add
add
add
add
popa
add
sarb
add
add
fidivs
mov
add
int3
sti
add
xchg
add
test
jecxz
addb
rclb
add
add
mov
pop
pop
pop
push
lea
push
call
test
add
mov
add
mov
nop
add
add
add
clc
mov
mov
add
add
add
movsl
int3
add
andb
stc
xlat
sub
pop
pop
pop
push
add
lea
dec
pop
leave
ret
push
add
add
not
pop
push
push
inc
pop
mov
add
push
add
not
pop
push
push
inc
rol
pop
push
push
push
rol
pop
push
push
shr
lea
inc
inc
pop
mov
push
push
push
push
call
add
add
add
mov
mov
out
jns
add
scas
add
enter
jbe
add
add
lcall
inc
cmp
pop
sub
push
rol
shl
shl
pop
mov
shr
push
sub
shl
pop
add
push
push
push
push
push
push
push
call
jl
add
jnp
pop
mov
pop
filds
add
popf
popl
fs
loope
add
fstpl
push
mov
aad
push
std
int3
arpl
sti
add
std
add
out
jge
insb
xchg
incb
jbe
add
inc
cld
push
ror
inc
rol
pop
mov
add
push
rol
sub
pop
add
push
push
push
push
push
lea
push
call
push
mov
mull
add
mov
add
add
xchg
add
add
test
add
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
call
jae
icebp
add
add
out
add
add
add
test
mov
leave
pop
bound
jl
pop
repnz
jmp
ja
mov
enter
add
add
out
add
cld
pusha
mov
add
add
add
loopne
lcall
nop
nop
nop
nop
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
push
sahf
stos
add
add
cld
add
test
xchg
mov
add
int
enter
push
add
sub
pop
cmp
jne
push
push
push
call
xchg
add
fcompl
add
jge
add
popa
mov
add
gs
add
fwait
loope
mov
add
in
jmp
push
andl
add
jne
push
dec
sub
add
pop
mov
push
ror
pop
movl
push
push
push
push
push
push
push
push
call
xchg
add
add
jle
push
jmp
add
add
data16
push
out
mov
add
icebp
add
les
jp
fidivs
cltd
out
out
add
mov
jno
push
add
leave
lea
mov
push
add
add
fsubrs
ljmp
loopne
xchg
jae
add
add
mov
adcb
out
lcall
lcall
push
or
add
iret
inc
pop
mov
push
lea
push
lea
push
lea
push
call
xlat
cmpsb
add
std
add
mov
test
add
imulb
lret
lds
add
mov
mov
add
jb
add
add
mov
add
pop
add
ljmp
flds
ljmp
jae
add
push
push
call
add
add
roll
push
add
js
push
jae
imul
std
repnz
add
mov
cwtl
js
add
stc
mov
add
popf
movsl
add
add
movsb
popf
pusha
add
add
add
sub
pop
mov
push
shr
pop
movl
push
lea
push
push
push
push
push
call
add
movsb
xchg
add
les
add
int
adc
push
push
jb
jecxz
add
cmc
add
loop
add
mov
adc
xchg
mov
add
xchg
jne
add
jne
cwtl
xchg
jle
add
jl
add
mov
call
add
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
lahf
insb
pop
push
shr
popa
mov
rolb
mov
pusha
mov
xchg
out
add
loop
cmpsb
lret
jle
add
out
lock
mov
vpshlb
add
push
add
scas
rcl
xchg
cld
arpl
mov
rcll
in
fcomps
inc
cld
push
add
rol
add
pop
mov
push
push
push
call
rcl
or
mov
lahf
mov
add
in
stc
mov
add
mov
pusha
call
sub
pop
cmp
jne
push
not
lea
dec
pop
mov
movl
push
push
call
add
add
add
mov
xchg
call
add
in
pop
jbe
mov
repnz
add
pop
sahf
add
add
add
add
testl
imulb
mov
fadds
xchg
add
add
add
xchg
add
mov
popf
add
sub
pop
jmp
mov
push
shr
pop
cmpw
jne
push
xor
sub
add
pop
mov
push
lea
xor
pop
movl
push
not
ror
ror
dec
pop
jmp
push
push
call
add
add
mov
fiadds
mov
add
les
rol
jns
mov
mov
pop
add
stos
cmc
add
xchg
add
cld
cld
incb
rolb
add
add
add
popa
sub
pop
pushl
push
push
push
lea
push
lea
push
push
call
add
bound
popa
add
out
mov
aam
stos
add
addr16
push
pop
fcmovnu
add
lret
push
sti
cld
cmpsl
movsb
movw
in
call
or
push
push
push
lea
push
push
push
push
call
mov
add
add
add
add
insb
add
mov
popa
lret
add
add
xlat
mov
test
add
mov
jo
push
sub
pop
mov
mov
push
push
dec
add
push
or
inc
add
xor
shl
shr
sub
shl
add
pop
ror
dec
pop
push
lea
push
call
aam
lds
add
lahf
add
flds
call
add
mov
add
incb
icebp
add
pop
xchg
add
ja
in
add
lods
stc
sahf
add
jecxz
add
add
in
clc
pop
push
push
lea
pop
call
push
add
pop
cmpl
je
push
push
inc
push
xor
add
add
shl
sub
sub
shr
sub
pop
sub
rol
sub
pop
push
inc
pop
push
push
rol
pop
call
cmpl
je
push
push
add
shl
push
sub
add
not
sub
dec
sub
rol
sub
add
pop
sub
add
pop
push
dec
pop
push
call
push
inc
pop
cmpl
je
push
push
sub
push
xor
add
rol
ror
not
sub
add
rol
shl
ror
pop
sub
pop
push
push
push
lea
push
push
lea
push
call
lods
add
xchg
mov
push
add
add
add
add
stos
mov
pop
fwait
js
test
lcall
call
push
pop
cmpl
je
push
push
add
ror
push
sub
add
lea
sub
rol
ror
sub
shl
pop
lea
pop
push
rol
add
inc
pop
push
push
ror
pop
call
cmpl
je
push
push
shr
push
xor
add
add
add
rol
sub
sub
sub
add
pop
not
xor
shl
pop
push
shl
dec
pop
push
push
inc
pop
call
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
add
imul
jne
popf
add
mov
scas
les
pop
testl
roll
push
add
push
add
add
roll
roll
jns
pop
add
cld
les
filds
jnp
add
add
in
imul
xchg
lcall
cmp
rol
je
push
push
lea
push
or
not
add
dec
ror
shl
sub
rol
rol
dec
pop
add
shr
pop
push
inc
lea
pop
push
push
add
xor
dec
pop
call
push
lea
push
push
push
lea
push
push
push
push
call
add
add
add
add
fld
add
add
add
mov
std
mov
testb
add
lret
mov
add
scas
add
out
out
add
lds
cmp
in
loopne
lcall
cmp
or
int3
je
push
push
sub
xor
push
and
add
rol
sub
pop
dec
inc
inc
pop
push
add
shl
add
pop
push
push
shr
pop
call
cmpl
je
push
push
push
sub
add
xor
sub
shr
add
pop
lea
sub
sub
pop
push
shr
lea
pop
push
call
push
rol
xor
inc
pop
cmpl
je
push
push
rol
push
or
not
add
rol
ror
sub
shl
pop
not
sub
add
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
bound
into
add
add
imul
aam
sahf
add
enter
add
pop
add
add
testb
pop
add
pop
addl
add
add
repnz
lds
mov
add
fsubrl
add
lcall
push
shr
pop
call
push
dec
shr
add
pop
cmpl
je
push
push
not
add
push
xor
add
inc
lea
ror
not
sub
sub
xor
sub
pop
inc
pop
push
lea
push
push
call
lret
add
add
add
add
test
add
out
add
jecxz
push
jl
add
xchg
iret
add
add
add
add
jo
add
push
ror
inc
inc
pop
call
cmpl
je
push
push
shr
add
lea
ror
push
or
inc
add
lea
xor
sub
xor
pop
pop
push
push
push
push
call
add
mov
clc
push
jno
cli
outsl
pop
add
pushf
jmp
fcompl
arpl
pop
test
cltd
out
out
add
insb
add
add
testb
outsl
rcl
out
mov
insb
icebp
add
add
jp
in
lock
push
push
push
call
leave
mov
mov
xchg
add
call
repnz
gs
bound
add
mov
add
add
add
fdivl
mov
jae
fadd
mov
add
roll
push
xchg
add
scas
add
outsl
sahf
rolb
add
cmpl
je
push
push
xor
push
sub
add
not
sub
sub
sub
shr
pop
sub
add
pop
push
sub
pop
push
push
push
push
lea
push
push
push
push
call
aad
add
arpl
add
add
add
add
imul
add
add
push
add
add
cwtl
add
push
fadds
sub
pop
call
push
push
push
push
push
call
add
arpl
add
add
add
add
pop
lock
add
cwtl
mov
pop
jmp
pop
add
add
add
jns
lcall
bound
mov
jb
mov
lcall
js
xor
pop
ret
scas
add
add
vaddsubps
ret
pop
mov
push
push
push
push
push
call
add
sbbl
add
mov
add
cld
cmp
scas
jecxz
add
movsl
hlt
int3
add
cli
add
test
ret
add
fwait
mov
add
in
in
pop
movl
push
lea
push
push
call
sahf
add
imul
stc
je
mov
xchg
pushf
int
outsl
fcmovbe
add
mov
popa
push
add
out
xchg
push
pop
movsl
add
test
lcall
push
add
add
rclb
pop
pop
push
push
lea
push
lea
push
call
iret
mov
addb
mov
push
addl
nop
add
out
js
stc
mov
mov
add
jge
fisubrl
add
jmp
lea
add
lcall
push
sub
pop
pop
push
pop
pop
push
push
push
push
push
push
lea
push
call
add
add
imul
pop
filds
mov
sti
lcall
add
lock
add
mov
jbe
sti
add
fnstenv
fxch
out
add
ljmp
in
sub
pop
leave
push
push
push
push
push
call
push
add
mov
cltd
lock
vorps
scas
in
xor
xchg
out
mov
add
leave
add
in
in
lcall
or
push
push
lea
push
lea
push
lea
push
push
call
add
mov
incb
add
int
int3
fnstsw
add
add
add
test
in
add
fbstp
andl
in
pop
add
push
xchg
jbe
test
add
mov
lcall
mov
push
push
push
lea
push
lea
push
lea
push
push
push
call
jne
in
add
lret
mov
pop
mov
loop
lahf
aad
add
lds
les
add
add
push
shrl
add
pop
loop
nop
fwait
add
loopne
add
push
lea
add
pop
cmpl
jne
push
push
add
dec
push
push
pop
add
shl
sub
sub
dec
pop
ror
add
dec
pop
push
push
push
lea
push
push
lea
push
call
test
leave
lcall
xchg
icebp
leave
gs
add
add
add
add
in
add
add
add
xchg
jecxz
incb
push
add
pop
rolb
sub
pop
pushl
push
dec
shl
shl
sub
pop
call
push
push
not
sub
sub
lea
pop
call
push
push
push
push
push
call
popf
xchg
jnp
lret
clc
add
jo
add
add
jne
xchg
fldl
mov
test
in
cmpsl
jno
rclb
js
imul
int3
leave
add
add
js
mov
mov
add
int
add
filds
add
jae
mov
mov
add
push
cli
push
mov
in
lcall
lods
and
add
or
add
xchg
cld
sahf
icebp
add
icebp
shll
cli
add
fsubs
mov
add
cmpsl
jnp
add
add
mov
imul
xchg
iret
add
add
add
bound
scas
xchg
add
sahf
pop
add
mov
add
addb
filds
lcall
jge
add
test
push
push
push
push
push
push
push
call
mov
add
add
shll
add
add
add
testl
add
ret
lock
add
add
mov
add
mov
test
fwait
xchg
test
mov
add
loop
mov
int3
add
scas
push
cmpl
jne
push
inc
add
add
pop
leave
add
push
sub
pop
pop
push
push
push
call
roll
cmpsb
lret
lcall
cmpsb
int
pop
mov
add
int3
add
xchg
scas
cld
out
xlat
fidivrs
fisttps
mov
add
out
mov
add
add
int3
fwait
jmp
test
shlb
in
push
sahf
sub
pop
pop
pop
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
jl
add
fiadds
add
arpl
rorl
lret
lcall
addb
add
add
pop
add
in
fcomps
push
xor
ror
pop
leave
add
push
add
pop
ret
jmp
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
mov
nop
fstps
add
add
add
mov
arpl
pushf
add
pop
add
pop
ret
scas
sti
fs
sahf
jl
fstpl
jecxz
mov
leave
sub
pop
cmpl
jne
push
push
sub
push
sub
add
inc
sub
ror
ror
sub
dec
pop
rol
inc
not
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
fiaddl
movsl
add
add
addr16
pop
jae
add
push
jmp
jl
push
lds
add
jae
out
hlt
pop
add
ficomps
fcomi
xchg
aad
add
add
add
mov
imul
movsl
scas
mov
jmp
mov
add
js
add
add
lret
sub
pop
pushl
push
push
call
int
insb
add
pop
xchg
fldcw
stos
rcl
mov
mov
enter
add
aam
add
les
lds
add
mov
movsb
into
loope
addl
mov
add
add
mov
add
in
data16
cld
add
mov
add
add
lcall
cs
push
push
push
push
push
push
lea
push
push
lea
push
call
outsl
add
loope
lea
lods
jnp
add
ljmp
jbe
cld
mov
fcmovu
repnz
push
mov
clc
in
test
pop
loope
add
rcll
fnstenv
add
enter
mov
fildl
add
mov
in
loopne
lcall
rclb
call
sbb
lcall
pop
mull
push
push
push
push
push
push
push
call
add
add
arpl
std
bnd
stos
add
jb
add
je
xchg
lods
lods
jbe
pop
add
pop
jge
imul
sbbb
mov
add
lcall
jge
add
test
das
push
call
add
int
data16
add
mov
add
add
mov
add
add
rcr
add
xchg
bound
hlt
test
add
mov
enter
mov
push
leave
test
add
add
sub
pop
mov
push
push
push
lea
push
lea
push
lea
push
call
add
xchg
add
add
mov
aam
lods
add
push
add
in
scas
pusha
add
add
add
push
lods
add
jle
popa
add
pop
flds
add
add
add
loopne
rolb
add
imull
sub
pop
mov
push
lea
push
call
push
mov
pushf
jno
rolb
aad
lods
add
in
add
scas
imul
add
jle
jp
add
cmpsl
push
jno
add
add
sub
pop
jmp
push
rol
pop
push
push
push
rol
lea
ror
push
push
pop
add
shr
rol
shr
sub
xor
pop
add
dec
pop
push
push
push
push
push
call
leave
lods
mov
out
mov
add
roll
mov
lods
aad
add
scas
jae
pop
add
mov
pop
out
add
add
push
addr16
movsb
add
loope
hlt
mov
cmpsl
add
add
add
xchg
push
mov
in
pop
add
push
ror
in
in
lcall
jne
push
shl
pop
call
push
lea
push
lea
push
push
push
push
call
je
add
roll
movl
jbe
fs
mov
add
dec
add
add
movsb
add
add
add
mov
loop
call
add
add
rolb
jl
data16
add
shrb
inc
int3
cmp
lret
and
int3
shr
push
or
inc
add
not
inc
sub
add
pop
shl
inc
xor
pop
push
xor
xor
pop
pushl
call
push
push
lea
push
push
call
cmpsb
arpl
add
lret
stc
rcl
jns
pop
into
test
fsts
add
add
flds
shl
div
add
add
enter
add
mov
call
push
push
xor
sub
push
push
pop
add
ror
not
xor
rol
sub
ror
not
sub
inc
pop
sub
shr
pop
push
shl
add
pop
pushl
call
push
lea
pop
call
push
push
add
push
or
not
add
rol
sub
xor
shl
pop
ror
xor
shr
pop
push
lea
push
push
call
add
jo
mov
cltd
enterw
jp
add
xchg
aam
add
add
add
lahf
mov
roll
sub
pop
pushl
call
push
sub
pop
call
push
push
push
or
inc
add
sub
add
sub
add
dec
xor
pop
dec
xor
sub
pop
push
lea
push
push
push
push
lea
push
call
icebp
mov
add
add
lods
int
add
jp
lods
push
add
movsb
icebp
in
out
jne
add
add
add
mov
testb
in
call
call
push
add
pop
call
push
push
add
push
push
pop
add
dec
sub
not
not
pop
dec
rol
pop
push
lea
push
lea
push
push
lea
push
call
add
xchg
fmul
lods
add
pusha
add
add
add
fisubs
add
mov
add
xchg
scas
loop
add
std
add
bound
pop
add
jne
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
jae
add
in
add
add
add
outsl
int
pushf
add
add
jo
add
mov
hlt
add
add
mov
add
lcall
dec
sub
add
shrb
int3
insl
pop
push
shr
lea
push
and
add
lea
rol
add
add
sub
sub
add
sub
pop
sub
add
rol
pop
push
not
pop
pushl
push
lea
push
call
aam
div
out
add
jp
xchg
pop
std
out
mov
gs
xchg
jl
fildll
add
mov
pusha
add
sub
pop
call
push
add
inc
pop
call
push
push
not
push
sub
add
rol
sub
add
xor
add
rol
pop
ror
add
pop
push
add
pop
pushl
call
push
push
call
add
stc
add
mov
out
jp
add
add
sti
push
movsb
call
add
pop
mov
xchg
fincstp
add
insb
add
pop
call
push
push
lea
inc
shl
lea
push
and
add
shl
add
shl
sub
shr
shl
ror
pop
sub
add
pop
push
ror
pop
pushl
push
push
push
lea
push
lea
push
call
mov
mov
lret
add
add
mov
in
mov
out
mov
add
add
add
add
add
add
fldenv
add
out
add
test
jae
aam
in
scas
add
add
nop
int3
mov
pop
call
push
dec
pop
call
push
push
sub
push
xor
add
add
dec
sub
ror
add
sub
pop
xor
shr
add
rol
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
add
fwait
roll
mov
outsl
out
test
xchg
stc
cwtl
stos
mov
pop
fistps
fiaddl
addr16
cld
shr
movsl
mov
mov
add
jb
add
jne
push
dec
pop
call
push
xor
inc
pop
lea
push
push
push
push
push
push
push
push
push
call
jae
add
jecxz
mov
int
mov
add
lods
call
mov
negl
addr16
test
add
add
mov
add
std
imul
hlt
add
clc
data16
pop
lods
std
add
push
shl
inc
lea
xor
pop
call
push
push
rol
add
push
and
add
rol
dec
inc
sub
sub
shl
rol
pop
lea
inc
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
add
jl
mov
ficoms
add
add
add
loopne
add
add
mov
pusha
push
iret
mov
iret
push
jp
icebp
jmp
add
test
addb
fidivrl
ffree
add
add
in
loopne
pushl
push
xor
add
pop
call
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
fsubp
jns
push
add
add
icebp
jmp
test
mov
add
out
stos
jnp
stos
les
add
pop
pop
add
jge
loopne
pushf
scas
add
push
hlt
sub
pop
call
push
push
xor
inc
push
or
inc
add
xor
add
not
shl
sub
lea
shr
pop
pop
push
xor
rol
sub
pop
pushl
call
push
pop
call
push
push
dec
inc
sub
push
push
pop
add
dec
sub
add
dec
pop
shr
rol
rol
pop
push
dec
dec
dec
rol
pop
pushl
call
push
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
add
out
add
std
fs
mov
out
movsl
pusha
test
jl
addb
mov
xchg
add
sub
pop
call
push
lea
pop
lea
push
push
add
not
shr
push
push
pop
add
add
shl
sub
not
pop
add
xor
not
pop
push
push
push
lea
push
lea
push
push
call
popa
ja
add
jns
add
enter
jne
movsb
push
in
mov
xchg
add
add
xacquire
imul
scas
add
add
pop
xchg
js
ljmp
pop
pushl
push
push
push
push
push
push
push
call
jecxz
push
pop
in
jle
pop
mov
mov
pusha
scas
add
incb
mov
add
mov
push
xchg
add
mov
lods
scas
sahf
sbbl
stos
out
sub
pop
call
push
lea
push
lea
push
call
add
add
add
push
test
add
push
test
ja
out
pop
lods
add
movsb
add
push
push
add
in
fsubl
add
sar
stos
add
in
hlt
lcall
push
lea
push
call
lock
mov
add
popf
gs
add
xchg
add
out
mov
loop
in
test
aad
add
mov
lea
add
push
mov
movsb
jle
mov
leave
out
imul
add
fld
jle
mov
mov
add
in
clc
lcall
shrb
stos
out
push
rol
push
sub
add
xor
sub
shl
sub
shl
inc
pop
sub
pop
push
push
lea
push
call
clc
rolb
mov
cmpsb
subb
add
stc
add
mov
insb
mov
add
add
add
cmpsl
add
add
outsl
enter
jb
push
push
add
jne
push
not
add
pop
call
call
push
lea
push
lea
push
call
loope
add
add
test
mov
cwtl
pop
fildl
jge
out
add
sahf
roll
aad
testb
add
pop
mov
icebp
add
mov
xchg
add
pop
add
sub
pop
mov
push
push
lea
add
rol
push
and
add
shl
shl
inc
dec
sub
dec
pop
xor
add
ror
pop
push
push
push
lea
push
push
push
push
push
push
push
call
rcl
int
in
cmc
stc
add
mov
add
mov
std
add
in
add
mov
add
jmp
sarl
pushl
push
add
not
pop
call
push
shl
pop
push
push
sub
inc
shr
pop
pushl
call
push
push
shl
not
push
or
not
add
add
sub
add
sub
pop
dec
pop
push
rol
pop
pushl
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
int
add
mov
jno
movsb
leave
jnp
jmp
add
xchg
lock
add
add
leave
add
fiadds
xchg
add
icebp
fucom
cli
jge
mov
rolb
add
lcall
xchg
pop
add
push
push
add
ror
shr
push
push
pop
add
sub
not
not
shl
shr
pop
add
not
xor
pop
push
push
dec
add
not
push
push
pop
add
add
add
sub
xor
sub
pop
ror
xor
pop
push
lea
sub
rol
pop
call
push
push
rol
ror
push
and
add
xor
xor
add
sub
dec
shl
pop
sub
lea
pop
push
xor
not
dec
ror
pop
pushl
call
push
add
shr
ror
pop
mov
push
rol
ror
pop
lea
lea
push
push
push
call
out
insb
add
jge
xchg
add
add
add
faddl
out
pop
addr16
xchg
add
xchg
scas
cmpsl
jmp
add
mov
movsl
fstp
out
add
jo
cmpsb
int3
sti
add
add
mov
add
cltd
pop
add
pop
pop
aad
shlb
jle
sahf
push
test
mov
in
hlt
pop
push
push
push
add
sub
lea
pop
push
push
xor
xor
pop
push
push
not
pop
push
push
dec
ror
rol
pop
push
push
push
lea
push
lea
push
push
lea
push
call
mov
je
mov
shll
add
xchg
push
jae
out
out
jp
add
cwtl
scas
test
add
add
add
shlb
add
leave
xchg
add
add
add
fistpll
add
lahf
fadds
pop
loope
in
in
lcall
add
inc
push
push
lea
push
call
push
add
mov
ret
mov
add
lods
add
cltd
imul
add
xchg
cli
test
add
add
add
push
add
mov
add
mov
add
cmpsl
mov
sub
pop
pushl
push
push
add
pop
call
push
push
add
push
or
inc
add
sub
sub
add
pop
inc
lea
not
pop
push
add
shr
add
pop
pushl
call
push
push
push
call
push
pop
add
addb
in
add
pop
lahf
fucomip
stc
mov
bound
in
pop
add
add
add
gs
add
mov
sti
add
add
out
out
cmc
fs
pusha
add
mov
add
add
xchg
jno
in
hlt
lcall
rclb
add
pop
mov
push
lea
sub
xor
not
pop
pop
push
push
push
call
add
add
push
les
add
push
test
jl
push
add
add
mov
mov
data16
lahf
add
xchg
add
jmp
mov
fmul
faddl
mov
lea
mov
lcall
jne
call
push
push
not
rol
add
push
or
inc
add
sub
xor
sub
rol
sub
inc
sub
not
pop
xor
not
shr
pop
push
push
push
push
call
stos
add
add
cmpsb
ja
add
mov
test
jp
insb
leave
add
push
imul
sahf
add
sub
pop
pushl
push
push
push
call
jp
add
add
jae
mov
sbbl
add
mov
movsl
lahf
add
lea
fsubp
xchg
jno
add
rcrl
add
scas
add
cltd
add
push
add
mov
mov
jo
add
push
not
pop
push
call
push
lea
push
push
push
push
push
push
call
cmpsb
add
add
sub
jb
jb
scas
add
add
push
add
iret
nop
out
mov
mov
push
popl
stc
add
add
add
rolb
add
lret
add
cltd
push
shll
add
add
pop
jge
mov
lret
nop
addl
in
in
mov
push
shl
add
pop
lea
push
push
inc
add
push
and
add
add
xor
shr
sub
dec
dec
shl
lea
pop
dec
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
push
mov
jl
in
add
add
popa
add
addb
aad
mov
add
jge
jge
add
jne
call
push
push
lea
push
lea
push
push
push
push
call
mov
lods
jae
into
into
mov
fildl
add
jge
add
pushf
out
mov
xchg
add
add
add
popl
add
add
cltd
stos
add
mov
jnp
shr
add
add
cld
jns
add
imul
add
add
enter
shlb
pop
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
lcall
in
push
lret
lea
repnz
mov
jmp
cwtd
mov
xchg
add
jle
fildll
loopne
lcall
shrb
movsb
in
push
push
sub
dec
push
or
inc
add
add
add
shl
add
sub
sub
pop
xor
sub
pop
push
rol
shr
pop
pushl
call
push
push
push
push
push
push
push
push
call
imul
add
pop
xchg
add
addb
jne
bound
jmp
scas
mov
lahf
add
std
jmp
int
shl
add
xchg
mov
arpl
out
push
leave
mov
add
add
clc
mov
call
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
shll
add
into
loop
add
add
xchg
xchg
mov
xlat
add
add
add
jp
add
sub
pop
lea
push
push
shl
shr
push
push
pop
add
rol
add
sub
xor
pop
inc
dec
pop
push
shr
not
sub
pop
pushl
call
push
dec
xor
pop
lea
push
push
inc
not
sub
pop
push
push
shl
rol
pop
push
pushl
push
push
rol
push
and
add
shr
shl
sub
sub
sub
sub
shl
pop
xor
pop
push
lea
push
lea
push
push
call
add
jb
imul
add
int3
in
xchg
mov
add
lret
push
sahf
jp
iret
add
add
add
add
ret
add
add
add
push
addl
in
add
jmp
add
push
lds
push
xchg
rolb
jmp
cmp
enter
add
sub
pop
push
push
shl
pop
call
push
push
push
xor
add
xor
rol
sub
sub
pop
add
pop
push
ror
dec
dec
dec
pop
pushl
call
push
dec
inc
dec
pop
push
push
lea
push
push
call
xchg
iret
add
hlt
stc
xchg
pop
add
nop
add
shrl
add
add
add
repnz
negb
mov
sub
pop
call
push
push
rol
inc
push
sub
add
sub
lea
xor
sub
add
sub
dec
shr
pop
xor
add
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
hlt
add
add
push
add
add
push
addl
popa
js
push
mov
fs
add
lret
mov
stc
addr16
icebp
add
add
clc
mov
cwtl
sub
pop
pushl
call
push
push
push
call
mov
loope
add
add
xchg
add
fiaddl
iret
sti
subl
add
add
pop
add
add
jmp
imul
mov
add
jp
test
in
sub
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
jmp
mov
add
add
js
test
testb
cmc
repnz
rolb
lods
stos
add
fs
fmul
loop
adc
fidivrs
add
mov
add
test
pop
jmp
push
add
add
pop
pushl
push
shr
shr
pop
mov
jmp
push
push
ror
push
or
not
add
add
ror
sub
add
lea
pop
xor
shl
pop
push
shr
ror
sub
pop
pushl
push
lea
add
inc
pop
call
push
push
push
push
lea
push
lea
push
call
mov
in
add
push
xchg
mov
mov
pop
cli
add
add
mov
add
mov
into
lret
push
add
jno
push
xchg
cltd
add
pushf
mov
je
xchg
test
mov
movl
aam
add
lret
xchg
add
lcall
add
imul
xor
add
sti
add
sti
add
add
add
jne
fsubrp
add
cli
in
fadds
lahf
add
mov
repnz
in
add
in
add
shrb
lret
push
rol
shl
dec
push
and
add
inc
sub
sub
shr
pop
lea
pop
push
shl
add
pop
pushl
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
pop
cli
iret
push
mov
mov
mov
add
cmc
add
fucomip
push
movb
andb
xchg
add
jle
aam
in
mov
add
add
mov
call
flds
lods
scas
aad
push
pop
lea
add
fstl
xchg
add
call
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
xchg
jne
add
pop
addl
ljmp
out
out
jno
shlb
mov
mov
add
add
nop
sarl
in
add
add
sahf
add
add
add
loop
add
fsubr
add
ret
lods
cmc
lds
lcall
push
push
push
push
lea
push
push
lea
push
push
call
movsb
mov
add
add
add
rolb
ror
add
add
shll
add
add
xchg
add
test
add
movb
add
lcall
rclb
enter
mov
push
push
push
push
push
push
call
add
sub
add
loop
push
ja
pop
cwtl
ja
mov
cmpsb
add
add
insb
lods
aad
mov
imul
insb
lds
add
push
lea
push
push
lea
push
call
jecxz
enter
mov
add
mov
ret
add
jno
mov
mov
adcb
ja
les
call
xchg
xchg
xchg
push
add
pusha
lea
test
addl
push
rolb
add
rcr
test
add
hlt
add
xchg
add
push
add
add
add
imul
sub
pop
pop
push
push
push
push
call
add
jb
add
hlt
add
into
add
push
pop
add
jns
popa
loopne
xchg
call
sahf
add
jmp
mov
add
mov
add
add
mov
in
je
mov
mov
add
jne
mov
add
lcall
push
push
push
push
push
push
lea
push
push
call
in
add
xchg
cmpsl
add
mov
loope
add
add
add
andl
push
add
jmp
les
add
test
add
add
add
mov
add
add
add
add
add
lcall
push
push
lea
push
call
repnz
iret
pushf
outsl
mov
add
mov
add
add
pusha
add
xchg
xchg
cmpsb
mull
scas
movsl
add
xchg
push
in
add
sub
pop
pop
leave
push
shl
rol
not
xor
pop
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
into
fsubr
push
je
gs
xchg
add
add
add
cmpsb
in
add
jecxz
add
pop
scas
fisubl
lds
jge
add
jmp
push
addl
leave
ret
push
add
sub
pop
push
mov
push
lea
push
lea
push
push
push
push
call
mov
imul
lods
insb
icebp
mov
mov
add
add
mov
shlb
not
add
mov
xchg
sub
pop
cmpl
jne
mov
push
shr
shl
rol
lea
pop
jmp
push
shl
pop
mov
and
push
inc
pop
xor
xor
push
push
lea
push
push
push
call
push
xchg
clc
andb
add
fimuls
nop
test
scas
rorb
popf
cltd
rolb
pop
popa
add
arpl
add
mov
jp
add
in
pop
add
push
pop
xor
push
push
call
xchg
cmpl
xchg
add
test
xlat
add
push
add
lea
repnz
roll
add
push
add
add
add
cld
add
pop
add
pusha
add
mov
mov
clc
pop
dec
push
push
push
push
push
push
push
push
push
lea
push
call
pushf
add
xchg
testb
cld
add
add
enter
icebp
stos
insb
fwait
cltd
idivl
mov
jle
add
add
shr
add
out
movsb
leave
in
add
cmpb
out
add
mov
notl
add
add
add
in
movl
adc
add
push
dec
pop
jmp
push
push
push
push
lea
push
push
lea
push
push
call
add
add
pop
mov
fwait
insb
add
testb
mov
jns
aam
xchg
xchg
bound
add
add
jmp
jmp
lock
push
push
out
mov
pop
sub
push
push
push
push
call
add
in
mov
add
arpl
push
add
add
loop
add
stos
cwtl
add
add
repnz
addl
add
lods
cld
mov
mulb
ja
push
mov
add
ret
add
sub
pop
pushl
push
push
lea
push
lea
push
call
add
into
xlat
add
mov
xchg
add
pop
cmc
lods
push
add
flds
push
stos
popf
add
add
add
pop
cmc
pusha
mov
add
sub
add
lcall
push
push
lea
push
lea
push
call
mov
nop
xchg
add
int
mov
in
aad
fiadds
add
add
imul
mov
add
notl
add
add
iret
add
add
mov
mov
add
lcall
jmp
push
push
lea
push
push
push
lea
push
push
push
push
call
jp
jno
stc
push
mov
add
movsb
add
cli
aam
add
lret
add
jge
jge
iret
into
leave
jae
add
in
je
sub
pop
cmp
jne
push
sub
dec
xor
pop
mov
push
push
push
push
call
add
fldenv
add
xchg
stc
popa
testb
push
lret
add
add
loopne
pusha
addl
jae
add
mov
nop
add
push
add
testb
add
add
jl
add
add
pop
add
lods
xchg
test
jp
test
mov
shrb
in
lock
lea
push
sub
lea
inc
sub
pop
sub
push
sub
lea
inc
pop
mov
push
lea
lea
lea
pop
shr
push
push
push
push
push
call
pop
mov
leave
lods
add
add
in
mov
test
add
add
add
sub
pop
add
push
lea
push
push
push
push
push
push
call
add
jb
jae
mov
addr16
add
cwtl
fsubl
add
add
xchg
mov
add
pop
mov
cld
out
mov
add
add
mov
cltd
roll
add
loope
in
in
sub
pushl
push
sub
pop
pop
push
push
lea
push
push
push
push
push
push
call
add
add
jne
fadd
shr
pop
add
ret
add
push
add
popa
test
push
cmpsb
mov
mov
add
xchg
add
jmp
push
pop
and
sub
push
xor
add
shl
pop
cmp
jne
push
lea
push
call
add
loopne
add
sti
mov
xchg
add
jno
add
add
testb
add
jecxz
jns
hlt
add
in
insb
add
add
in
add
add
add
nop
into
rcl
scas
add
add
out
add
lcall
ret
push
push
lea
push
push
push
call
add
add
add
int3
jmp
fisubrl
add
pop
sar
faddl
shrb
fwait
add
loope
js
jge
mov
sahf
add
mov
in
in
pop
push
mov
push
dec
not
pop
add
push
pop
push
push
ror
pop
push
push
pop
push
push
add
dec
ror
pop
push
push
push
push
push
call
add
movb
xchg
push
xlat
add
add
cmc
bnd
add
jae
add
iret
icebp
add
push
add
mov
xchg
fistps
pop
add
testb
fmul
loop
iret
faddl
xchg
out
jns
test
mov
add
fcoml
add
mov
add
add
pop
or
loopne
arpl
add
pop
mov
addr16
cwtl
aam
add
div
mov
add
xchg
jb
pop
add
cltd
loop
frstor
add
add
pop
loopne
add
mov
pop
cwtl
add
add
pop
add
jl
add
add
rolb
mov
add
fldl
add
add
filds
iret
add
add
add
clc
lcall
ljmp
adc
ljmp
push
lea
push
push
call
cmpsl
jge
int3
add
add
jo
ror
add
xchg
add
xchg
xchg
jns
add
add
add
lods
add
add
add
repnz
add
enter
in
lock
add
push
push
push
push
push
push
call
hlt
add
add
rcrl
add
add
add
sti
add
add
push
loopne
ja
lea
les
stos
nop
out
add
jae
aad
add
add
xchg
call
call
loop
mov
andl
add
leave
add
add
add
call
add
add
pop
or
lret
ljmp
push
push
push
push
push
call
jp
pop
loopne
add
movsb
faddl
add
cmpsl
cmpsl
call
add
gs
add
add
add
add
jnp
add
add
xorl
in
call
add
push
lea
pop
xor
push
push
lea
push
push
push
push
push
lea
push
push
call
stos
add
mov
add
add
mov
les
out
add
add
add
mov
add
in
add
push
lret
into
addr16
cmpsl
mov
add
lods
mov
jb
out
add
xlat
push
push
push
lea
push
call
mov
gs
add
add
ljmp
int3
mov
add
rcll
fiaddl
pop
icebp
sti
mov
mov
fists
add
lcall
loopne
push
push
lea
push
push
push
push
push
push
push
push
call
cmp
mov
add
in
xchg
add
add
jns
add
mov
add
add
add
in
fdivr
lcall
rolb
push
lea
push
push
push
lea
push
push
call
lcall
add
mov
jmp
mov
stos
aam
pop
add
icebp
scas
add
jecxz
sub
add
add
add
add
mov
std
add
lcall
rolb
add
jle
pop
inc
cmpb
jne
push
push
push
push
push
call
xchg
test
fsubr
sti
ret
aam
fbld
xchg
int3
mov
push
add
fadds
fwait
add
add
loope
pushf
data16
in
test
sub
pop
add
cmp
je
push
not
pop
add
cmpl
jne
push
lea
push
call
nop
lret
lcall
leave
movsl
outsl
add
fwait
add
jno
pusha
add
add
push
loope
enter
mov
cld
push
add
loope
movb
cwtl
rol
add
xchg
andb
pop
xor
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
add
mov
aam
add
pop
sahf
cli
add
jmp
add
in
idivb
movsb
sub
pop
pop
push
lea
push
push
push
lea
push
call
cwtl
add
add
fwait
add
jbe
stos
pop
lea
stos
cld
cltd
mov
add
xchg
xchg
add
in
addr16
add
test
add
mov
sti
jns
pop
add
lret
pop
add
add
stc
mov
add
mov
jb
mov
testl
add
jb
mov
sahf
mov
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
add
sar
lret
shrl
add
add
add
mov
push
pop
fadds
add
add
test
push
mov
add
int3
rcr
jo
add
add
xchg
push
scas
add
mov
add
stc
jno
in
fdivr
lcall
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
hlt
add
add
push
add
sahf
xchg
lock
jmp
fs
add
test
add
in
repnz
sahf
push
add
jmp
je
sub
pop
pop
push
push
push
lea
push
push
push
call
add
jle
add
out
fstl
add
push
mov
mov
add
loop
jne
mov
js
add
int3
add
jae
add
add
add
sub
pop
leave
push
add
pop
ret
mov
push
push
push
call
lret
jo
add
add
add
add
add
add
lods
in
fnstsw
add
add
jo
jb
popl
jge
mov
add
mov
lods
mov
les
cli
clc
add
add
leave
add
cltd
add
mov
mov
loop
mov
in
hlt
lcall
push
or
lea
push
push
push
lea
push
push
push
call
jnp
add
fcomps
hlt
xchg
pusha
add
pusha
fcmovb
add
scas
mov
jge
xlat
stos
movsl
imulb
sbbb
lods
out
add
xchg
mov
test
int3
xchg
pusha
flds
sti
test
out
pop
add
add
add
orb
add
push
add
add
push
push
not
sub
xor
pop
add
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
push
add
roll
pop
pusha
int3
push
add
mov
pop
jmp
xlat
in
std
addl
ja
add
add
pushf
add
add
mov
jb
add
xchg
enter
loopne
lcall
add
addb
add
add
push
push
push
push
push
push
push
push
call
add
pop
xchg
mov
push
data16
in
xchg
incb
add
incb
mov
mov
add
roll
xchg
mov
push
jmp
roll
in
sub
pop
pop
push
lea
push
push
push
push
push
push
push
call
sti
pop
xchg
lret
add
xchg
add
lret
movsb
add
jnp
pop
sahf
movb
jmp
add
add
lcall
push
shl
not
pop
mov
push
lea
push
push
push
push
call
fstpt
mov
mov
fadds
fadds
addb
push
lea
add
pop
add
add
add
add
add
pop
add
shrb
in
in
lcall
call
push
pop
xor
push
shr
inc
not
sub
pop
pop
pop
push
inc
pop
pop
push
push
push
push
push
push
push
call
add
xchg
in
mov
mov
into
lret
bound
filds
add
lahf
mov
push
mov
mov
pushf
lret
mov
mov
add
in
gs
add
add
add
pop
push
sub
sub
sub
add
pop
leave
ret
push
push
push
call
testl
add
mov
lock
lret
push
movsl
mov
in
cli
pusha
mov
add
fadds
add
add
in
hlt
pop
push
mov
push
push
lea
push
push
push
push
lea
push
call
add
add
add
ljmp
jnp
add
ljmp
xchg
fwait
stc
add
add
test
xchg
mov
out
pusha
add
ja
in
in
add
push
shr
pop
push
push
push
lea
push
push
push
call
iret
addr16
test
add
add
add
push
xchg
shl
mov
add
loop
push
add
pop
add
push
add
add
pushf
jl
mov
loop
push
add
mov
fiaddl
cwtl
sub
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
call
loope
out
add
add
add
std
sbbb
popl
add
add
add
scas
out
add
popa
add
sbb
test
add
push
addr16
rolb
add
cmpsb
add
add
mov
lcall
push
sub
xor
pop
mov
push
not
add
ror
pop
push
pop
push
push
call
add
add
add
add
push
xchg
add
add
mov
add
xchg
add
add
ja
mov
popa
pop
test
in
gs
add
push
movsb
mov
mov
lds
add
pop
add
add
add
fs
clc
lcall
push
cmp
inc
add
shl
pop
sub
push
sub
add
pop
mov
push
inc
lea
pop
shr
push
dec
pop
add
push
push
push
push
push
push
call
lds
push
mov
mov
leave
xchg
mov
gs
mov
loop
in
add
fldl
add
add
mov
lock
push
add
mov
pop
add
add
add
sub
pop
mov
add
push
lea
push
call
fs
pushf
faddl
add
mov
pop
sarb
add
push
xchg
cmc
mov
push
add
add
add
xchg
push
add
add
mov
add
add
xlat
insb
cltd
mov
fbstp
add
hlt
pop
aam
add
add
jmp
add
out
add
lret
mov
mov
xchg
lcall
jae
popl
push
push
push
push
push
push
push
call
jo
mov
add
add
add
add
arpl
mov
add
aad
arpl
imul
gs
add
add
jns
add
mov
rolb
sahf
std
add
add
popf
add
mov
stos
pushf
test
mov
pop
mov
add
push
ror
sub
sub
ror
pop
xor
push
rol
add
pop
lea
push
push
push
lea
push
push
push
call
jmp
add
cmp
add
push
add
mov
jne
cld
loopne
not
pop
stos
push
add
add
pop
add
icebp
push
addl
add
aad
jge
xchg
cli
imul
sub
pop
mov
add
push
push
lea
push
lea
push
call
js
leave
in
adcb
roll
add
add
jge
jae
in
add
push
push
add
mov
add
mov
in
data16
mov
add
add
jno
mov
mov
add
sahf
add
pop
jl
shll
add
in
lock
lcall
rclb
push
push
push
push
push
call
fldl
add
add
popf
repnz
jbe
test
add
mov
cmc
in
add
add
add
mov
adcl
add
loopne
cltd
mov
lret
add
add
sub
pop
rol
push
pop
nop
push
lea
pop
nop
push
not
shl
dec
sub
pop
xor
push
push
lea
push
push
push
push
push
push
call
add
mov
shlb
fwait
scas
lea
fldl
lods
mov
repnz
add
addb
ja
jno
enter
add
add
push
add
loopne
nop
nop
push
push
push
push
push
push
push
push
push
push
call
scas
add
jge
leave
icebp
push
mov
push
stos
mov
add
cli
xchg
stos
lods
add
add
data16
xchg
pushf
add
add
add
bound
shl
in
mov
aad
flds
add
cld
ret
mov
add
jb
add
add
repnz
push
xor
sub
add
lea
pop
nop
nop
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
add
in
add
scas
loopne
filds
insb
pop
jbe
js
xchg
xchg
out
add
add
add
mov
iret
add
mov
roll
add
ret
scas
fisubl
mov
loopne
add
jbe
scas
addr16
lahf
add
mov
incb
add
in
fcompl
cmp
jne
push
lea
push
push
push
call
mov
lea
lret
into
push
lods
xchg
call
add
ljmp
mov
incb
jecxz
aad
fldl2e
mov
add
roll
enter
ja
jno
push
stc
lea
in
lock
add
push
lea
push
lea
push
push
push
push
push
lea
push
call
push
add
pop
popf
ja
int
stc
add
pop
aad
add
jecxz
jae
xchg
je
pop
add
cli
add
into
push
mov
mov
push
addb
int
add
pop
fs
pop
nop
push
lea
push
push
push
call
lods
cmpsb
add
pop
divl
sti
add
int3
xchg
add
mov
out
xchg
add
lahf
pop
fnstenv
rolb
mov
jbe
movsb
add
mov
add
fld
add
mov
xchg
in
movl
jmp
add
in
lock
lcall
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
cmpsb
add
gs
mov
cltd
add
xchg
mov
negl
cwtl
hlt
addb
add
insb
push
mov
cltd
hlt
notb
add
add
add
fadds
test
add
addl
add
xchg
out
add
leave
add
cld
test
sahf
les
pusha
jecxz
in
fcompl
inc
or
test
add
add
rcll
loopne
shl
rol
jmp
add
ror
pop
nop
push
dec
inc
add
inc
pop
inc
push
lea
not
pop
nop
push
push
push
push
push
push
lea
push
push
push
push
call
xchg
callw
cld
jns
pop
add
add
bnd
jno
mull
mov
rol
pop
std
add
ljmp
push
add
pop
shlb
add
aad
add
add
arpl
add
add
mov
sub
pop
nop
cmp
jb
push
inc
lea
pop
xor
jmp
push
add
not
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
pushf
mov
xchg
out
stos
fcompl
out
jb
pop
add
aad
add
add
mov
testl
scas
mov
pop
hlt
lahf
xchg
add
add
add
fdivr
lcall
rorl
mov
jb
lea
rol
pop
mov
push
lea
pop
add
mov
push
push
push
push
call
fldl
push
ja
add
add
lods
fldl
add
mov
stos
mov
pop
shr
add
add
cwtl
add
pop
add
sar
enter
cld
add
add
add
push
add
add
pop
add
add
xlat
scas
push
mov
add
jge
scas
in
lock
lcall
leave
xor
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
repnz
add
stos
lock
leave
faddl
idivl
add
add
mul
jns
shl
mov
test
je
add
lods
add
jno
add
loope
clc
add
ret
jmp
shlb
add
mull
out
xchg
jae
lcall
pop
shl
push
push
push
push
lea
push
push
push
push
push
call
sahf
mov
add
add
xchg
add
fs
mov
add
add
add
jb
scas
sub
pop
xor
shl
push
add
xor
inc
pop
xor
push
push
lea
push
push
push
call
popl
add
icebp
in
pop
mov
mov
mov
mov
shlb
add
mov
push
add
mov
lea
pop
shl
push
push
push
push
push
push
push
call
jnp
pushf
mov
pop
outsl
ja
jmp
add
test
mov
imul
add
arpl
add
xchg
cld
cltd
xchg
xchg
in
mov
add
add
add
fldl
lret
add
nop
mov
add
pusha
pop
add
jmp
jne
mov
in
in
xor
mov
push
add
sub
dec
lea
pop
add
push
add
add
xor
pop
pop
push
lea
push
push
push
push
push
call
add
stc
faddl
lea
lcall
test
cmpsl
add
mov
hlt
add
add
add
mov
repnz
add
sti
add
aad
add
in
add
loope
in
call
pop
pop
push
ror
pop
pop
push
push
push
call
push
push
xchg
add
add
mov
mov
xchg
ja
fs
add
mov
call
scas
mov
add
pop
add
pop
sarl
pop
add
test
out
add
add
leave
out
into
mov
mov
add
jno
in
hlt
pop
leave
ret
push
pop
push
push
rol
add
not
pop
mov
push
lea
push
push
push
push
push
push
call
add
mov
jns
push
add
add
add
imul
add
mov
add
addb
stc
cld
fwait
jge
movsl
add
sub
pop
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
fwait
pop
pop
popl
push
loopne
push
jns
mov
movsl
mov
add
mov
add
addl
cmpsb
cmpsb
cwtl
into
add
jmp
add
ficoms
add
fdivr
lcall
push
push
push
call
jnp
enter
rolb
add
mov
jge
add
test
stos
push
add
cmc
rolb
lret
lret
add
mov
add
sub
pop
push
push
lea
push
push
push
call
ficomps
mov
jecxz
xlat
add
add
sti
test
add
jge
add
add
std
cld
loope
add
xchg
add
add
push
mov
out
mov
xchg
add
pushf
mov
add
imul
add
mov
enter
lret
add
lea
add
sahf
sub
pop
mov
push
sub
add
pop
mov
mov
push
rol
pop
test
je
push
add
shr
pop
mov
test
je
push
push
lea
push
push
lea
push
push
push
call
jcxz
add
add
jno
cmc
loope
jl
add
aad
pop
push
mov
push
add
mov
filds
aad
jb
scas
mov
icebp
mov
add
add
xchg
fsubs
add
add
add
add
leave
xchg
jo
arpl
jne
add
mov
push
imul
arpl
push
sub
pop
mov
mov
push
lea
push
push
push
push
push
push
push
push
call
scas
lahf
sarw
add
add
int
mov
add
jns
pop
pop
popa
test
movl
add
add
mov
sub
pop
mov
inc
push
xor
ror
sub
sub
pop
cmp
je
test
je
push
not
shl
pop
mov
inc
push
xor
lea
pop
cmp
je
push
inc
pop
test
jne
xor
push
shr
pop
pop
push
not
pop
pop
push
shl
ror
pop
pop
pop
push
lea
push
call
imul
add
add
cwtl
xchg
lods
lcall
popa
rcl
addr16
add
xchg
add
push
add
scas
add
shrb
in
movsb
pop
add
call
test
mov
je
add
add
mov
add
sar
shll
repnz
mov
jo
add
enter
mov
leave
ret
push
push
lea
push
push
push
push
push
call
add
cwtl
add
add
add
clc
je
add
add
push
jle
popf
int
add
jae
mov
int3
add
in
add
in
lret
add
xlat
jmp
add
jl
add
into
add
xchg
std
mov
out
add
add
push
fcoml
add
jbe
jl
in
in
lcall
push
inc
push
lea
push
call
xchg
mov
add
mov
xchg
add
add
add
movsb
add
add
jbe
in
jbe
int
scas
jae
hlt
jle
push
add
add
jmp
push
add
add
gs
enter
add
jb
in
clc
lcall
lock
push
inc
pop
lea
mov
push
push
push
push
push
call
insb
lret
add
rcl
xchg
les
jbe
lods
cmpsl
xchg
add
xlat
leave
enter
cmpsl
fistps
clc
add
in
test
push
push
sub
inc
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
jle
ljmp
add
pop
add
push
mov
test
add
add
add
mov
push
pop
lea
fiaddl
test
add
add
add
add
mov
push
add
ja
mov
xchg
add
outsl
in
sub
pop
cmp
jne
push
ror
ror
pop
mov
push
lea
push
call
add
testb
mov
xchg
jecxz
test
fld
add
iret
add
aad
add
add
in
test
addr16
lods
add
add
add
add
pop
add
js
movsl
aam
push
out
add
clc
pop
test
je
push
shr
ror
pop
mov
push
lea
push
lea
push
push
call
pop
cld
out
jecxz
push
add
add
add
add
int3
add
in
add
add
test
jne
stc
sub
pop
add
push
lea
push
push
push
push
call
in
out
test
adcb
add
gs
add
out
add
jbe
cmpsb
movsl
push
add
popf
nop
fstl
add
add
cmpsb
mov
mov
xchg
add
fstps
jae
movb
lds
add
ja
add
cltd
add
add
add
mov
pop
cmp
je
push
lea
not
rol
pop
jmp
xor
push
lea
push
lea
push
lea
push
call
add
fadds
repnz
data16
lods
mov
xlat
add
add
add
mov
cmpsb
popf
arpl
add
hlt
xchg
ficoml
hlt
jbe
ret
add
xchg
add
mov
jnp
loop
mov
add
jle
xchg
add
xchg
les
lcall
push
lea
push
call
cltd
add
lea
add
mov
add
add
bound
add
stos
loopne
hlt
xchg
add
add
mov
lods
add
add
add
jmp
xchg
push
add
lea
add
push
shr
pop
pop
pop
push
lea
push
call
roll
cltd
add
push
add
add
xchg
mov
xlat
add
add
lcall
test
mov
notb
pop
loopne
add
pop
cmpsb
add
add
add
mov
in
add
lcall
push
shl
pop
ret
push
lea
push
push
push
push
push
push
lea
push
push
push
call
insb
out
add
nop
lods
add
iret
add
add
std
test
loopne
je
add
jl
add
xchg
fwait
add
push
lcall
inc
call
shrl
dec
jmp
jnp
mov
push
call
lods
add
popa
add
faddl
pop
add
mov
std
in
xchg
bound
cmpl
fildl
outsl
mov
pushf
je
add
jecxz
push
jle
push
push
add
add
mov
in
in
pop
pop
push
sub
pop
pop
push
push
push
call
fcompl
faddl
xchg
lea
out
ror
into
add
add
jns
lcall
pop
cmpsb
add
pop
add
add
out
add
add
pop
mov
mov
in
imul
add
leave
jae
push
add
pop
xor
add
in
hlt
pop
pop
push
sub
sub
inc
lea
pop
pop
leave
push
push
push
push
lea
push
push
push
push
push
push
call
test
mov
test
add
lods
mov
xchg
filds
add
jecxz
pop
jge
std
pop
jno
lock
call
mov
add
add
add
add
scas
sub
pop
ret
push
sub
shl
sub
pop
mov
pop
push
shr
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
push
lods
jl
add
add
add
bound
rorb
add
mov
flds
mov
add
pop
add
nop
add
add
pop
add
add
lret
push
nop
add
add
mov
loopne
add
lcall
push
shl
pop
pop
push
add
pop
leave
ret
test
push
test
jae
test
jb
sbb
imul
push
test
jae
cld
mov
add
cmp
adc
shrb
fwait
addr16
or
shll
push
jns
outsl
repnz
xor
cmpsb
cmp
out
inc
push
pop
xchg
mov
xchg
xchg
add
sti
inc
mov
sub
test
lods
push
xchg
mov
inc
iret
andl
movsl
xlat
bound
leave
pop
ds
cmp
in
push
and
imul
cmp
or
repz
bnd
inc
pop
push
aad
xchg
cmp
icebp
stos
inc
mov
dec
aas
xlat
fmuls
cli
inc
pushf
push
es
inc
orl
inc
mov
mov
lods
mov
pop
sub
adc
and
gs
adc
sub
cltd
dec
jnp
aam
test
pusha
orl
inc
enter
or
pop
mov
push
jno
adc
mov
ficompl
in
sahf
mov
leave
dec
dec
outsb
sbb
pusha
mov
and
pop
sub
lahf
or
xor
pop
inc
xor
cmp
lock
dec
xchg
xchg
popf
rol
rorb
test
mov
mov
jg
jl
gs
and
pop
mov
mov
mov
push
imul
push
insl
in
or
xchg
rcrl
sti
nop
sbb
lret
icebp
js
orb
sub
xchg
push
cmc
imull
or
daa
cmp
popa
cmp
mov
imul
sub
fisttpll
fs
or
sbb
enter
and
mov
lcall
and
push
ror
jno
hlt
repnz
sub
mov
mov
and
push
lds
cmp
jbe
push
cli
iret
int
and
insb
cmc
ja
pop
cltd
cmp
ficoms
adc
out
icebp
js
daa
aas
cmc
jb
xlat
inc
repz
aam
cmp
mov
loopne
jnp
jl
jnp
xor
adc
or
mov
cs
aaa
mov
call
and
mov
inc
mov
je
aad
push
cmpsb
out
mov
testl
adc
jae
xor
clc
cmpsl
test
cmp
and
pop
ljmp
mov
loope,pt
pusha
mov
ljmp
mov
inc
aad
data16
xchg
outsb
test
ss
inc
pop
jo
sbb
dec
sbb
outsb
push
inc
mov
jb
push
scas
rorl
inc
jle
rolb
xlat
gs
pop
ljmp
jmpw
mov
not
iret
lock
bnd
cld
xor
mov
pop
cwtl
addr16
xchg
lret
cmpsl
in
inc
sbb
inc
daa
into
and
int3
jmp
leave
jge
jne
pop
mov
jp
or
inc
jl
jecxz
repz
out
scas
xor
adc
nop
data16
sub
fwait
add
jg
dec
je
jp
frstor
popa
pusha
xchg
cld
pop
mov
out
stc
sub
add
jnp
stos
push
ret
data16
dec
jbe
mov
jnp
int
repz
loopne
js
mov
test
mov
mov
mov
fdivrs
inc
fists
ss
jae
lds
jmp
or
ss
sbbb
test
test
cwtl
add
cmp
stos
loopne
push
and
mov
dec
outsb
bound
pop
mov
xchg
lods
add
pop
xor
adc
mov
movsb
pop
adc
add
sub
sub
jo
ds
push
arpl
mov
ficoml
xor
int
stos
jle
nop
clc
inc
push
mov
dec
push
sub
cld
mov
cltd
inc
inc
push
and
mov
xchg
sbb
lods
out
mov
into
jecxz
fs
or
dec
pop
cld
ret
outsb
ljmp
push
call
adc
mov
cmp
and
or
shl
add
movsl
in
inc
clc
js
mov
cmp
and
fwait
test
mov
mov
popl
xor
pushaw
mov
push
push
pushf
jno
loope
dec
fisttpl
out
dec
jge,pt
dec
outsl
arpl
inc
daa
dec
pop
cmpb
fs
push
dec
dec
adc
int
lcall
add
call
scas
mov
int3
xor
std
gs
push
jo
imul
mov
hlt
sbb
inc
rorb
mov
cli
pop
pop
iret
xor
dec
and
popf
mov
push
andb
cli
std
fcomps
ds
lods
jg
imul
arpl
push
fwait
jo
add
pop
dec
in
mov
test
pop
jmp
movb
test
mov
ljmp
push
loope
movsb
pop
mov
cmp
mov
xlat
pop
or
inc
pop
sub
sub
and
mov
lods
mov
ss
sbb
mov
or
gs
sbb
add
in
pop
inc
ficompl
arpl
imul
ds
insb
adc
mov
sahf
sbb
fs
adc
xor
lock
cmpsl
repz
loop
jmp
clc
push
pop
arpl
or
and
jbe
sub
dec
push
push
push
and
inc
ss
push
push
data16
call
sub
clc
stos
mov
in
jle
cmpsl
inc
lcall
adc
inc
sarb
fwait
adc
sbb
fdivrp
fildll
jmp
leave
push
das
roll
push
cltd
lret
add
push
mov
sub
std
negb
mov
test
adc
adc
loopne
aad
cli
in
adc
mov
mov
mov
cltd
imul
lret
test
pop
mov
shrl
insl
pop
fdiv
bnd
lret
mov
pop
test
sbb
test
bound
mov
push
test
cmp
aam
sti
jge
push
lock
and
xor
mov
jle
sbb
movb
pop
mov
popf
mov
fstpt
push
jg
lock
bound
leave
xchg
mov
lds
dec
sbb
insl
jmp
sub
js
data16
popf
cs
xchg
inc
pushl
mov
xchg
mov
bound
shrb
sub
fidivs
inc
fidivs
js
mov
and
hlt
cmp
dec
fadd
cmc
das
xor
cld
adc
dec
ret
test
aad
in
dec
sarb
lret
add
xchg
repnz
dec
nop
dec
xor
lcall
addb
ljmp
stos
pcmpgtw
xchg
js
sbb
pop
mov
hlt
adc
andb
xchg
int
push
outsb
jmp
jge
xor
ss
out
and
nop
test
aas
sbb
imul
or
das
jbe
cmp
popf
mov
or
cs
ret
dec
rol
cld
es
int3
dec
mov
aas
mov
push
sarb
in
je
stos
jp
ss
aad
sbb
push
jl
cwtl
push
insl
call
ss
dec
testl
jnp
scas
mov
dec
jnp
push
std
dec
mov
mov
xor
sbb
adc
adc
push
aad
push
out
lock
lahf
sbb
das
push
nop
add
bound
in
xchg
cmp
jmp
inc
pusha
cmpsl
xchg
xor
dec
in
push
adc
xor
pop
sub
push
fwait
or
xchg
idivb
mov
pusha
das
pushw
add
into
or
loop
jns
mov
addl
mov
mov
sbb
arpl
stc
imul
pop
mov
xchg
sub
mov
incb
pop
or
or
jne
stos
push
push
shrl
test
mov
cmp
in
push
ljmp
aas
or
mov
test
fcmovnu
mulb
or
cmp
fstpl
lea
andb
adc
jg
cmp
stos
into
in
in
xchg
jge
sub
push
push
xchg
inc
orl
enter
and
cmp
jae
in
dec
sbb
sarl
mov
and
cmp
ret
xor
push
je
dec
xor
lret
lods
fsubrl
scas
mov
add
push
xchg
cmp
popf
or
push
jmp
scas
dec
ja
sub
pop
subl
pop
fs
push
test
and
add
clc
inc
mov
xor
fwait
pop
nop
lock
enter
fistpll
push
dec
mov
gs
xlat
call
arpl
ss
dec
dec
hlt
pop
jmp
clc
ljmp
mov
sub
sbb
dec
mov
lods
enter
movsl
xor
sub
ja
push
movsl
out
fsts
mov
lret
xchg
divl
data16
stos
inc
test
fnstcw
imul
mov
cs
sbb
mov
cmc
inc
xchg
jle
inc
ret
jecxz
sbb
cmp
sbb
jmp
cwtl
or
sub
mov
mov
xchg
mov
lret
push
sub
popa
iret
leave
cmp
filds
fstl
adc
push
xlat
bswap
imul
bound
scas
sub
adc
jns
sahf
arpl
lods
add
jl
cmpl
pop
test
icebp
push
pop
pop
aad
mov
push
enter
pushf
fadds
je
sbb
jno
mov
addr16
test
xor
or
cmp
jns
cmc
jge
xchg
sub
pop
es
xor
sbb
cli
or
andb
jne
adc
sbb
std
mov
inc
movsl
adc
mov
repz
jnp
mov
leave
inc
jnp
ja
push
std
cmp
xor
jle
cmp
in
aaa
imul
push
ja
fwait
pop
inc
or
repz
pop
test
sbb
adc
xlat
int
xor
pop
pusha
mov
loopne
adc
xchg
mov
ja
test
stos
mov
dec
pop
inc
inc
addr16
add
sbb
push
loope
xchg
out
push
pop
fcmovnbe
lds
push
cmp
xchg
imul
stc
add
shll
dec
scas
xlat
adc
popa
sti
clc
decb
cmc
ja
data16
pushf
xor
mov
adc
daa
popf
xchg
fs
dec
or
dec
loopne
cmpsb
mov
sbb
jle
scas
dec
or
dec
cmpl
cmpsb
out
movsl
sbb
pushf
test
std
mov
pop
pusha
in
ja
jp
sub
lds
lods
cmc
xor
xor
nop
or
push
fimull
shlb
mov
add
int
mov
push
jns
loopne
sbb
mov
fcmovne
test
sub
mov
mov
lock
and
test
jle
je
pop
test
ss
movsb
int3
dec
or
sti
rorb
mov
es
xor
inc
mov
and
jmp
cmp
ret
jne
jae
test
js
pop
push
push
dec
sahf
std
and
sarb
and
jo
das
push
xchg
push
subl
call
ss
add
adc
xchg
or
lock
or
push
lahf
or
cli
or
aas
jle
xlat
lds
mov
pop
xchg
stc
iret
imul
ror
leave
add
pop
adc
loope
les
rcrl
add
and
dec
stos
mov
dec
jnp
outsl
stos
inc
push
pop
add
sub
and
adc
sbb
mov
insb
sub
or
inc
pop
adc
sub
adc
pushf
jns
je
mov
jns
pop
mov
test
lret
rol
paddw
pop
pop
cltd
sbb
add
cmpb
jp
jg
data16
inc
cwtl
jb
lods
rclb
adc
jmp
bound
scas
dec
jo
xor
push
inc
in
cmp
outsl
in
decb
or
shl
push
jbe
je
mov
mov
test
mov
pop
pop
mov
ljmp
fwait
pusha
js
adcl
pop
add
xor
sub
mov
jne
jo
or
fcom
addr16
push
cmp
jecxz
out
or
push
or
adc
sub
mov
shr
mov
pusha
mov
fstl
fnstenv
push
and
mov
mov
jno
hlt
dec
mov
push
jae
lret
xor
fisttpll
fs
daa
and
xchg
mov
movsb
and
shl
lock
cmp
and
mov
push
sahf
mov
xchg
lret
xchg
data16
cmp
mov
clc
xlat
ret
ljmp
dec
jne
mov
push
push
xor
jmp
inc
inc
pop
cmp
ljmp
fs
cs
mov
fldcw
rcrb
cli
adc
mov
mov
dec
xchg
mov
sbb
mov
mov
mov
jns
mov
outsb
jno
nop
loop
lahf
xchg
popf
stos
sahf
sub
pusha
cwtl
adc
pop
jnp
in
inc
std
jp
xchg
mov
pop
loop
push
cld
inc
adc
aas
jne
mov
inc
test
enter
roll
adc
js
xor
call
pushl
jb
ja
pop
adc
popf
roll
ret
jb
mov
loope
jae
xlat
jle
or
mov
scas
add
mov
divb
add
ficompl
test
addb
inc
scas
jnp
cwtl
jl
out
adc
negl
pop
or
pusha
cld
jno
push
add
pop
ja
das
mov
xor
mov
xchg
cld
fbstp
sub
jbe
or
sub
mov
lret
lret
and
call
add
fadd
sahf
iret
loope
pop
jnp
cwtl
testl
and
test
and
xchg
daa
enter
sub
jns
rcll
into
lret
out
add
xchg
jle
sbb
imul
in
outsb
pop
or
mov
test
mov
inc
ds
adc
or
cmpsl
loopne
mov
cmp
sti
sahf
sbb
std
ds
push
lea
pop
data16
xchg
mov
pusha
xchg
inc
add
jnp
pusha
adc
pop
icebp
aas
mov
sti
test
cmp
ret
movb
jle
lcall
pusha
or
out
rorl
or
push
mov
sub
ja
aam
cwtl
dec
cmpsl
xchg
lcall
mov
scas
xchg
ret
xchg
dec
int
dec
nop
xor
mov
imul
push
cmp
scas
xor
inc
add
or
jne
adc
stc
cwtl
push
je
ss
push
cwtl
jmp
cmc
pop
aad
xor
fidivrs
or
fdivrl
outsl
ficoml
inc
add
push
daa
mov
repz
out
lsl
mov
mov
cmc
lret
dec
jo
shlb
into
jg
jbe
pop
inc
adc
sbb
mov
cmpsl
sbb
xchg
cmpsb
pushf
or
sbb
add
clc
test
iret
lock
cld
xchg
stos
fxch
inc
mov
pop
and
mov
ret
fidivrl
sbb
std
ret
mov
scas
enter
sub
bound
add
inc
xchg
push
daa
scas
mov
insb
cld
in
dec
cmpsl
cmpsb
jbe
das
aas
sahf
ds
or
pushf
pop
scas
ret
mov
movsl
mov
bound
cltd
fisubrs
in
push
mov
rcrl
test
mov
stos
cmp
outsl
adc
push
into
adc
and
cwtl
inc
push
jno
jnp
cmpsb
xor
xchg
dec
mov
and
adcl
add
in
testb
mov
dec
divb
aam
adc
jge
jl
mov
or
imull
or
cmpsl
inc
mov
loopne
mov
jmp
and
jno
movsl
cmp
jg
inc
call
push
dec
sub
add
dec
aas
sbb
imul
mov
lret
rcl
lea
xchg
jno
jge
jl
ret
notl
ret
xor
mov
jo
and
sub
scas
mov
popf
push
lret
xchg
sbb
jmp
cmp
cmp
sub
mov
int3
test
frstor
push
jl
clc
mov
and
dec
call
xor
or
aas
adc
sub
adcl
adc
pop
push
xor
ds
rolb
movsb
cmc
and
cld
lock
cmpsl
dec
and
jbe
rcrl
inc
inc
jae
rcr
mov
inc
jne
sahf
dec
imul
push
xor
push
loopne
out
fwait
in
mov
mov
lcall
test
sub
mov
dec
andb
mov
or
jne
jbe
es
jg
out
push
sbb
lahf
out
xor
push
lock
mov
in
sub
popa
add
mov
imul
xchg
jmp
lahf
lods
adc
outsl
cmp
enter
test
jmp
and
push
mov
xor
cmp
leave
les
lods
ret
es
addb
out
jl
push
push
adc
and
sbb
movsb
xchg
cltd
pop
sti
bound
xor
jp
shlb
push
repz
call
jg
sbb
lcall
lcall
xchg
stc
int
push
std
test
roll
cmp
and
xchg
imul
loopne
movsl
fldcw
das
sbb
mov
and
dec
int
loop,pt
dec
or
ljmp
jae
xor
cld
scas
cmp
sub
int3
xor
push
mov
dec
xchg
out
xchg
cmc
mov
orb
int3
mov
jne
xchg
adc
or
shlb
in
add
stos
xlat
or
fldcw
loope
ds
mov
pop
pop
inc
div
fisubrs
and
jecxz
test
push
cld
testl
sbb
arpl
dec
fdivr
sti
adc
daa
cmp
and
mov
cmc
pop
fcmove
pop
mov
and
arpl
or
pop
insb
cmp
inc
inc
cwtl
or
push
adc
and
addr16
push
xchg
pop
stos
popf
shrl
movsb
sub
push
jae
inc
sahf
fs
popa
imul
cmp
movsb
sub
adcb
inc
mov
and
cli
dec
push
mov
sbb
jl
loop
mov
shl
lret
roll
ss
sub
push
lds
insb
pop
shlb
sbb
cltd
pop
dec
pop
push
pushf
dec
dec
sub
xchg
xchg
mov
sub
push
xchg
test
cltd
mov
pop
das
arpl
pushf
mov
cltd
pusha
pmovmskb
fmull
leave
ljmp
into
sub
push
mov
iret
sub
cmp
sbb
jecxz
cmc
movb
insl
jl
mov
cmpsl
mov
mov
and
outsl
mov
test
fucomp
push
les
fstl
jge
jns
mov
test
cmpb
andb
mov
add
fmuls
mov
sub
jmp
jne
sub
in
repz
inc
repnz
xchg
xchg
lods
fnstenv
inc
pop
sub
out
lret
mov
pop
cmp
fbstp
test
test
loopne
add
loope
xchg
ret
add
testl
xor
push
lret
insb
in
inc
xor
insl
push
adc
xor
ret
adc
in
rcrw
mov
repz
inc
lret
pop
push
fsubs
mov
add
and
lock
inc
clc
xchg
in
inc
mov
jmp
push
pop
lret
pop
jno
es
aaa
mov
xchg
xchg
add
push
xchg
enter
les
int
scas
push
emms
sub
push
stos
jp
js
push
mov
ljmp
jmp
xor
arpl
cmp
fsubrs
cli
scas
adc
mov
xlat
jne
push
ja
mov
in
push
push
cmp
fistpl
add
inc
push
adcb
jno
movsb
and
mov
pop
stc
and
rorl
mov
out
jnp
les
out
add
cmp
insl
pop
lret
cmc
popa
jo
int3
adc
ret
insl
and
shll
mov
add
repz
jno
inc
repz
rcll
mov
nop
insb
int
arpl
jb
or
call
ret
xchg
lahf
or
cmpsb
or
xor
push
das
mov
adc
xchg
or
leave
inc
adc
std
loop
out
lret
outsl
fcoml
dec
and
mov
or
mov
int
cmp
mov
dec
pop
lods
iret
outsb
sbb
andl
inc
test
sar
pop
dec
lret
bound
mov
cld
es
das
faddl
pop
add
jp
insb
or
mov
jo
mov
xchg
int
hlt
push
and
hlt
lret
or
and
sbb
xchg
ljmp
sub
mov
xchg
sub
lds
cmpsb
cltd
std
push
subl
ja
mov
in
nop
lods
sub
xchg
and
cli
mov
jae
push
nop
call
jne
sub
fisubl
fs
hlt
inc
and
cld
mov
fiadds
iret
adc
xchg
aaa
push
loopne
mov
ljmp
hlt
pop
inc
xchg
sbb
mov
ds
and
and
jns
inc
shll
cli
movsl
jge
cmp
sub
fldt
adcl
cmpb
cmova
mov
daa
stos
adc
sbb
stc
andb
ja
in
jmp
xchg
cmp
jg
cmp
test
xor
addl
jbe
je
jl
jmp
fistl
push
xchg
and
jmp
andl
mull
xchg
je
jmp
sar
push
pop
leave
out
dec
jl
push
outsb
xor
aad
ds
icebp
mov
xor
push
jns
rcrb
mov
mov
mov
or
cli
mov
repnz
lds
fwait
imul
or
mov
jecxz
mov
jns
gs
enter
jne
cmc
data16
ss
add
cmp
call
jmp
dec
dec
daa
outsb
lds
imul
rorb
test
inc
lret
jns
sarl
imul
repnz
add
les
jl
or
or
fadd
cmc
loop
test
cmp
lahf
outsb
pop
mov
jo
jns
inc
pop
sub
cs
in
mov
in
or
xchg
add
pushf
push
jmp
in
pop
mov
jnp
push
sbb
stos
sbb
in
daa
jge
rorl
scas
or
mov
lods
add
push
aaa
push
mov
add
das
add
inc
jne
inc
mov
call
loope
push
cmpsl
adc
xorb
sub
insl
sub
cmp
imul
cwtl
pop
sbb
add
clc
xchg
insl
jg
scas
shrl
outsl
jmp
mov
push
push
xor
mov
add
fwait
xchg
insb
sub
mov
ficomps
push
stc
clc
ja
or
test
xor
insb
cltd
ret
inc
sub
dec
sbb
jo
into
sbb
lahf
loop
mov
inc
fst
shl
in
pop
jne
imul
pop
xor
push
add
adc
dec
xor
fcomi
mov
jbe
imul
cmp
call
aas
pop
lret
daa
fld
push
arpl
aaa
add
adc
push
lds
insl
mov
inc
xlat
push
adc
pop
test
lahf
cmp
adc
push
inc
test
inc
cmc
adc
in
ss
int3
clc
cmp
cmp
scas
pushf
and
fildl
stos
jno
add
flds
leave
pop
ljmp
jg
jmp
jecxz
sarl
test
pusha
sbb
test
outsl
popa
inc
and
lcall
test
insb
sahf
lods
add
xor
xor
cmpsb
les
sbb
and
xchg
pusha
mov
mov
lods
das
or
ss
dec
frstor
and
dec
mov
rorb
add
outsb
call
pop
mov
es
loop
push
mov
ficomps
aam
movsl
dec
repz
sub
add
push
xchg
mov
cmp
icebp
fdivrl
clc
sbb
xchg
stos
sahf
pop
sbb
xor
fstpl
xchg
push
inc
mov
pop
sahf
pop
gs
jecxz
inc
dec
lcall
shl
fisttps
dec
or
lret
sti
test
lds
cld
shlb
or
sbb
fistpl
orl
mov
adc
jb
subb
pop
hlt
add
data16
or
in
add
popf
shrl
in
ja
aad
cwtl
dec
adc
mov
pushf
jecxz
mov
test
jle
xlat
shlb
int
and
cmp
stc
andb
ss
or
and
adc
mov
fldcw
xlat
jmp
rcl
ret
xor
or
data16
in
or
adc
cmp
mov
push
cmp
cltd
imul
jl
push
ror
adc
adc
fdivp
test
lret
call
lcall
cmpb
cmp
in
xchg
aam
daa
aaa
out
xchg
inc
rorl
shl
dec
repz
adc
jns
ljmp
pusha
nop
or
mov
cmpsb
sub
xchg
fistpl
movsb
cmc
jae
stos
test
cmpsb
mov
inc
inc
ja
rorl
rcll
add
idivb
jae
jp
xorl
push
aad
lods
xchg
push
jg
loopne
int3
xchg
pushf
xchg
dec
sbb
inc
xchg
xchg
mov
leave
cld
adc
jne
xchg
shl
mov
or
cwtl
mov
push
xor
pusha
mov
mov
adc
push
push
mov
push
in
push
sti
mov
rcll
jb
bound
lret
pushf
cwtl
mov
loop
inc
hlt
test
cmp
pop
mov
in
out
push
fsubrp
pushf
dec
leave
and
fisttpl
sqrtps
js
int3
jg
rcrl
jp
jae
test
pop
or
fsts
lcall
data16
imul
push
push
adc
inc
shll
mov
push
xor
dec
mov
js
cmp
mov
enter
adc
and
aad
scas
push
test
jle
xor
clc
adc
gs
cwtl
in
xchg
dec
ds
cmp
mov
push
add
or
std
jge
ja
mov
call
ss
hlt
push
inc
jmp
push
movsl
mov
icebp
mov
xor
and
and
mov
lret
push
push
movsb
outsb
nop
inc
dec
xor
repz
dec
cmp
xor
push
and
cmp
cld
mulps
push
cmp
inc
sbb
hlt
fisubrs
mov
xchg
add
cmp
pop
xchg
xor
push
inc
jecxz
sbb
imul
xchg
mov
adc
dec
addr16
out
cmp
scas
sub
cltd
cmp
fsubs
mov
adc
sub
shrl
loop
loopne
xchg
iret
jge
addl
mov
ljmp
std
cmpsb
or
xor
mov
xor
xor
mov
data16
cmp
lds
out
repnz
add
subb
es
and
dec
hlt
lcall
aas
jnp,pt
sti
push
jg
xchg
std
jo
iret
outsb
mov
pop
jle
jg
sub
add
stc
fnop
pop
sti
xchg
lret
jae
and
shl
out
movsb
aad
dec
xlat
and
clc
outsb
sbb
out
stos
mov
jne
xchg
cmpsl
xor
addb
mov
sahf
sub
bound
sub
and
ret
cmp
inc
pop
push
add
push
dec
xchg
mov
inc
insb
imul
sub
imul
mov
sbb
lcall
dec
ss
or
loope
into
aad
shrb
lods
push
or
lea
lcall
lcall
or
mov
xlat
dec
addr16
pop
mov
add
std
cmp
ds
cmp
sbb
punpckhbw
cmp
arpl
fcmovbe
arpl
push
imul
mov
pop
pop
jl
sti
mov
jl
push
mov
int
adc
icebp
lock
fldl
mov
push
xor
and
leave
fcomip
call
das
aaa
sbb
mov
aas
push
inc
movl
add
fstpt
cmp
inc
je
popf
add
subb
adc
pop
mov
mov
fcompl
sbb
sti
clc
cmp
cmp
push
movsb
and
fs
push
add
cltd
gs
pop
and
lock
icebp
jl
ret
mov
cmp
fbld
pop
int
jns
jmp
outsb
nop
sub
pop
jmp
pop
sahf
movsl
lds
jo
sti
jg
mov
mov
fnsetpm(287
cmpsl
cmp
fstpl
mov
lock
add
or
cmp
lcall
pop
push
movsl
cmp
ret
pop
addr16
imul
cltd
rcll
fsub
in
xlat
dec
sub
enter
xchg
cmp
dec
mov
repnz
and
fisubrs
in
out
cmp
repnz
cmp
add
outsb
and
lea
mov
pop
loope
or
sbb
xlat
setns
loop
nop
test
scas
and
or
popf
mov
icebp
fwait
mov
add
mov
stos
repnz
and
mov
xchg
adc
mov
adcb
sub
and
mov
jecxz
inc
inc
sbb
sub
es
out
test
fstl
test
outsl
pusha
adc
inc
aas
rolb
jbe
data16
decl
jle
clc
shrl
xor
push
ss
aas
fdivrl
xor
xchg
adc
hlt
fcmovb
or
stos
in
pop
cmp
out
call
and
lods
sbb
pop
inc
add
push
cmpsl
fwait
data16
enter
mov
test
in
dec
or
sbb
mov
cmp
lock
movaps
les
pushf
fmuls
outsb
pop
xor
repz
lret
xor
mov
sub
pop
out
push
xchg
xchg
test
out
push
add
repnz
mov
gs
cmp
push
lock
add
add
fs
int3
in
sbb
xchg
int3
inc
xchg
imul
or
call
int3
idivl
adc
pushf
and
or
ret
int3
fldln2
mov
sub
pop
mov
add
xor
cmp
mov
fisttpl
xor
arpl
pop
lods
mov
es
mov
or
inc
dec
xchg
or
and
jg
adc
or
mov
push
dec
mov
mov
push
aas
test
aam
mov
arpl
stos
cmpsb
and
out
loop
out
pop
ja
mov
enter
mov
adc
push
iret
mov
mov
ljmp
push
in
fnstsw
inc
add
xor
in
sbb
jmp
jo
push
aam
mov
lahf
xchg
mov
and
or
and
cmpsl
push
aas
rclb
push
ret
push
xor
cmp
xor
std
lret
cwtl
dec
int
leave
mov
cltd
fdivp
pop
inc
icebp
daa
sahf
mov
xchg
mov
mov
js
jno
aas
push
daa
dec
andb
cmp
add
jne
in
das
or
and
orb
push
pop
mov
lret
add
ror
cmpl
nop
aas
add
mov
dec
mov
xlat
in
xor
xchg
xor
xor
inc
mov
adc
sbb
jnp
rclb
mov
inc
mov
mov
mov
or
sarb
pop
fsubrs
jg
mov
mov
sahf
ret
dec
call
std
sbb
adc
add
enter
xor
cli
inc
add
xlat
faddp
pusha
movsb
int
xlat
push
inc
cmp
xor
fldcw
lret
orb
jns
repz
div
xchg
mov
and
stos
sbb
lds
push
mov
lods
dec
into
jb
adc
or
push
ret
pop
jae
xlat
test
dec
neg
or
sub
inc
inc
pop
dec
call
fcmovb
pop
bound
and
sbb
cmc
xchg
faddl
and
xlat
adc
mov
mull
lds
sahf
mov
jmp
and
pop
popf
daa
fnsave
mov
xchg
xor
pop
iret
js
mov
jne
mov
dec
stos
daa
mov
clc
popf
ja
aaa
imul
xchg
pop
push
stos
test
cmp
lods
mov
ret
sarb
or
popa
std
sub
ljmp
adc
stc
jle
insb
imul
xchg
cltd
xlat
pop
add
adc
mov
jmp
dec
loopne
sub
push
ljmp
fidivrl
push
pop
xchg
mov
iret
push
xchg
in
or
or
cld
pushf
push
push
pop
leave
jecxz
xchg
test
sbb
dec
dec
mov
nop
lock
push
jo
inc
mov
jle
bound
jnp
pop
add
loopne
test
int3
fnstenv
mov
xchg
shrl
or
iret
mov
or
adc
fwait
mov
xchg
and
hlt
cmc
lahf
cmpsb
popa
fdivrl
push
fcomps
xchg
fstpt
repz
aas
pop
rolb
add
jbe
xchg
mov
xchg
mov
xor
dec
mov
mov
xchg
jo
cmpsl
add
and
push
scas
cmc
iret
inc
gs
ds
ja
push
movsl
shll
fnstsw
xor
inc
xchg
xlat
mov
push
jo
sahf
inc
sarb
inc
sbb
mov
sbb
shlb
fidivl
pop
test
loope
ret
xchg
lock
mov
jnp
inc
mov
sbb
pop
popa
push
sub
icebp
jmp
jnp
sub
or
mov
push
jb
mov
cli
adc
pop
or
sub
test
aaa
jbe
sbb
xchg
or
rorl
dec
js
test
inc
sub
xchg
sub
ljmp
mov
imul
fidivs
cmp
cwtl
shlb
out
fwait
mov
cmp
mov
dec
or
or
out
hlt
fstpt
inc
xor
add
pusha
dec
andb
cmp
cmp
test
cmp
call
dec
and
sub
cmp
mov
dec
jb
hlt
mul
cmpsb
mov
fdivrs
sub
dec
sub
inc
mov
sub
xor
fmul
cmpsb
rclb
jp
sub
std
push
pushf
pusha
shl
push
shrb
cmpsl
pop
mov
xchg
and
xchg
mov
movsl
mov
or
adc
dec
lock
pusha
loopne
gs
jp
push
ja
dec
mov
mulb
adc
xor
fldl
push
pushf
movsl
cmpsl
test
scas
test
imul
shrl
xor
sbb
jno
pop
pop
lret
mov
into
inc
imul
cmp
enter
sbb
and
sahf
out
jecxz
rcr
data16
mov
neg
out
stc
aaa
mov
jne
mov
stos
sbb
xor
inc
dec
xor
adc
sarl
sub
sub
popf
jno
je
mov
stc
enter
cmp
mov
in
push
data16
adc
andl
mov
cld
lcall
push
cltd
sub
stc
es
mov
dec
pop
xor
ds
mov
bound
inc
xor
and
jns
mov
mov
mov
push
jmp
inc
sub
xlat
jecxz
leave
dec
or
or
mov
or
scas
lods
lds
int3
icebp
mov
sbb
push
stos
xchg
outsl
ret
adc
inc
adc
xor
pop
sub
push
mov
jno
aaa
outsl
pusha
mov
fcomps
call
sub
xchg
mov
sub
xor
out
pop
mov
adcb
dec
jge
lret
ret
es
bound
cld
gs
call
int3
and
or
jmp
dec
scas
cmp
adc
aas
fcmovu
xchg
lods
inc
adc
dec
jno
mov
aas
dec
rol
movsl
sub
push
popf
cld
imul
lret
ret
pop
out
sahf
fcmovu
mov
sbb
add
js
ljmp
mov
and
sub
mov
add
jae
stc
cmpsb
inc
imul
lea
adcb
cwtl
ja
inc
jae
out
lahf
jl
mov
scas
cmp
or
pusha
push
pop
out
fildll
cmpsl
js
mov
ljmp
pop
lods
movsb
mov
aam
push
mov
pop
adc
ret
pop
es
push
mov
std
jns
sahf
aas
mov
mov
cmp
lret
xchg
mov
test
jg
sarl
loop
mov
hlt
mov
lods
inc
test
push
leave
insl
pop
jle
and
data16
mov
inc
scas
lahf
pop
push
add
xor
lret
or
dec
jecxz
aam
push
xchg
pop
rcr
xor
imul
and
ljmp
stos
lods
int
into
and
stos
cwtl
pop
xor
mov
pop
sbb
push
movsl
jl
in
das
push
xchg
cmp
lds
cmp
fwait
mov
xchg
lds
or
pop
inc
in
mov
mov
mov
push
es
movsb
add
rorb
shll
rorb
jp
add
dec
sbb
iret
pop
arpl
cmc
xchg
inc
inc
xchg
mov
mov
orb
js
fstps
mov
mov
or
mov
lret
dec
inc
loopne
lods
sub
jae
test
repnz
and
jbe
lods
inc
sub
cmp
test
dec
sub
das
cmc
gs
shll
test
idivl
dec
mov
or
insb
test
ret
push
dec
daa
ret
cld
mov
sub
test
dec
ja
ret
add
jecxz
cmc
xor
fsubp
out
sbb
daa
cmp
inc
imulb
repz
jge
dec
push
mov
addr16
fisubl
and
jmp
inc
test
subl
mov
arpl
sbbl
push
dec
jmp
stos
pop
movsl
movsl
xorl
outsl
add
cmpsb
pop
push
jns
adc
stos
lahf
cmp
scas
pop
cmpb
xlat
sbb
ret
repnz
jmp
ss
loopne
aam
outsl
pop
pushf
fstpt
ficoml
dec
inc
icebp
psubusb
sbbl
push
icebp
sbb
xchg
adc
push
pop
scas
cli
ror
fdiv
mov
pop
inc
inc
cmp
aas
loopne
add
jg
lock
cmp
test
lea
push
dec
jno
test
shrb
icebp
aad
mov
rcll
aad
mov
ljmp
into
iret
fcmovbe
jbe
lahf
lcall
jo
fisubl
cmp
mov
inc
push
or
push
js
lahf
aaa
push
sbb
in
pop
push
idivb
mov
push
rorb
cld
push
cli
xchg
sub
ret
das
daa
dec
int
push
push
pop
dec
xor
jae
lods
cmp
sbb
les
movsl
sbb
and
adc
lahf
shl
cwtl
cmp
imul
xor
popa
or
call
test
cmp
pop
shll
mov
or
push
push
loope
call
inc
loope
push
mov
outsb
jle
inc
ljmp
adc
push
ret
cmp
addr16
js
clc
mov
adc
sahf
fldcw
mov
xchg
mov
scas
andb
inc
fsts
xchg
pop
loop
fs
loope
lods
jp
jp
jp
aad
das
stc
and
sbb
pop
mov
test
jae
xor
pop
mov
rol
ret
xlat
cld
push
shl
fs
pop
bound
adc
shll
ss
adc
mov
repz
aam
iret
jg
jmp
mov
jle
jmp
and
mov
dec
or
adc
movb
cmpsl
xor
dec
icebp
jb
arpl
lahf
xchg
inc
lods
or
dec
imull
loope
repnz
mov
rcrb
pop
jbe
testb
mov
lret
fildll
or
cmp
rcll
or
mov
adc
mov
jno
in
or
mov
test
adcb
adc
sbb
imul
popa
mov
addr16
repnz
xchg
cmp
and
imul
jnp
push
insl
mov
cmp
xchg
fdivs
dec
pop
ficoms
mov
sbb
inc
mov
push
inc
out
arpl
mov
jle
insb
pop
push
cmp
xchg
sbb
cli
inc
lods
fistl
jg
xchg
and
negl
xchg
lahf
jle
movsl
les
sub
fisttpll
lods
push
arpl
aad
jbe
lahf
jp
mov
rcl
shlb
xchg
adc
and
shrb
cmpsb
shrl
dec
adc
lock
sbb
cmp
pop
xorl
mov
add
in
out
sub
sub
adc
int
pop
enter
jns
mov
dec
aaa
pusha
cmp
and
xor
insl
fcmovnb
mov
mov
lea
mov
push
pop
jmp
xor
jle
jno
mov
mov
das
sbb
insl
das
cltd
dec
mov
add
dec
andb
fists
push
or
lea
or
dec
inc
call
add
adc
in
or
and
mov
add
js
sub
adc
cmp
fildl
inc
sahf
fdivs
roll
jecxz
add
mov
dec
add
cmpsb
fcomi
int
psraw
xorl
pop
push
sbb
rcrb
cld
ljmp
into
imul
sbb
loope
mov
ss
xor
xchg
outsl
push
rcr
fwait
lock
lret
scas
js
bound
mov
mov
jns
movsb
cmpl
mov
cmp
inc
int
sahf
pop
sbb
push
or
addb
repz
dec
ret
dec
scas
cwtl
sbb
in
or
push
dec
dec
sbb
clc
xchg
mov
cmp
mov
xchg
cwtl
test
xlat
test
mov
push
ja
repz
lock
or
jbe
ds
mov
pop
repnz
add
jmp
scas
cli
sub
addr16
lods
into
adc
jae
mov
cld
icebp
sahf
lret
and
dec
movsl
add
out
ljmp
hlt
add
or
mov
fdivl
add
out
push
fidivl
dec
lret
and
cmpsb
and
mov
hlt
pusha
mov
lds
sub
and
xor
mov
inc
push
sahf
inc
dec
lock
into
mov
notl
sti
jmp
xor
in
stc
adc
xor
ljmp
dec
jno
push
sub
mov
and
push
mov
pushf
sub
lock
add
ret
cld
lods
dec
adc
jb
push
pop
lods
mov
jae
aam
movsb
jle
icebp
cs
and
jae
ljmp
add
lods
jp
xor
cwtl
loop
xchg
adc
pop
pop
sub
hlt
inc
sub
ret
scas
mov
adc
test
test
add
mov
jmp
ja
pop
xlat
rcrb
cmova
push
add
pop
int3
and
mov
outsl
xchg
xchg
gs
add
rcll
mov
pop
fwait
cmp
mov
mov
inc
xchg
jne
cmp
add
sub
dec
and
daa
shrl
mov
pop
and
dec
scas
orl
ret
xor
daa
inc
adc
loope
ficomps
loope
and
sahf
fmulp
jl
mov
jno
adc
add
pop
sbb
into
daa
jae
xorl
add
xchg
adc
mov
gs
bound
cld
outsl
sub
aaa
dec
dec
psllq
push
lea
cmp
ret
xchg
stos
inc
mov
negb
cld
and
in
cmp
int3
push
lods
xchg
mov
mov
out
mov
or
or
out
mov
xor
push
mov
das
data16
sub
dec
sbb
xlat
inc
popa
repz
adc
pusha
data16
mov
dec
push
mov
cwtl
push
pop
push
lock
mov
lock
mov
test
cs
adc
icebp
aas
les
cmp
test
fs
gs
jbe
fmuls
iret
loopne
shlb
push
pop
xor
fsubr
jp
sbb
popa
cmp
push
icebp
cs
mov
fadd
das
hlt
adc
std
push
pushf
jle
test
sub
rcrl
ss
sbb
cmc
or
xchg
push
inc
movsl
fwait
mov
dec
sbb
ss
sbb
test
xor
mov
rep
mov
stos
xor
enter
imul
pop
dec
in
jl
pop
mov
gs
icebp
iret
sub
movb
cmp
sub
ret
int
jns
int3
xchg
dec
movsb
sub
scas
lahf
call
in
arpl
xchg
mov
mov
inc
ret
xor
repz
lods
pusha
mov
rorb
mov
push
fidivl
mov
add
outsb
pusha
loopne
dec
xlat
rcrb
addr16
outsb
pusha
out
add
cmp
cmpb
mov
mov
dec
stos
jns
cld
sub
hlt
push
xlat
push
xlat
negb
pop
sbb
js
iret
enter
dec
inc
insb
adc
mov
stos
xchg
xlat
jg
int
outsb
movq
dec
adc
stc
lahf
inc
xor
in
push
add
add
ljmp
ficoms
pop
sbb
dec
aam
push
mov
loope
jle
sbb
fbstp
js
call
jl
clc
bound
add
in
rclb
cmp
jbe
mov
stos
loop
popa
xchg
faddl
dec
mov
cmpsl
mov
shl
dec
or
dec
pop
lea
xchg
pop
test
pop
sub
stc
jecxz
ret
or
cwtl
or
in
dec
mov
divb
and
dec
shl
pop
cld
jnp
test
out
jmp
mov
lods
test
lret
or
mov
out
jb
pop
push
push
mov
gs
rcrb
fisttps
push
pop
pushf
mov
ss
pusha
gs
out
ret
pop
xchg
addr16
mov
loop
adc
shl
push
push
add
mov
sub
jge
loopne
orb
mov
hlt
add
jmp
out
outsl
pop
mov
jl
fnstenv
ja
mov
into
adc
push
pop
test
insb
arpl
mov
xor
pop
jg
outsb
lods
fldt
adc
xchg
jecxz
mov
loope
inc
aam
xchg
add
insl
movb
inc
add
jnp
mov
mov
jne
lahf
loopne
ds
sti
jb
stos
ljmp
mov
sub
into
lds
out
stos
push
xchg
push
shrl
push
mov
loopne
dec
sub
in
lods
jbe
and
jle
inc
mov
push
xor
rcl
shrb
int
fs
scas
es
mov
pop
lret
test
pop
jg
pop
call
cmpsb
fstl
mov
out
xor
jle
in
iret
mov
dec
mov
test
cmp
cmpb
dec
sbb
sbb
cltd
adc
inc
int
sub
push
inc
xor
push
sub
mov
outsl
dec
jb
mov
xor
negl
xor
cwtl
push
dec
lds
int3
mov
repnz
sub
arpl
xchg
fmull
leave
xchg
movsb
pop
addr16
xor
cmp
push
lcall
or
and
test
aas
jno
mov
arpl
pop
mov
mov
xchg
cmp
push
xor
mov
divl
les
in
pop
lock
hlt
mov
or
sbb
pop
in
dec
orb
xchg
pop
mov
sbb
lock
movsl
lods
rcrl
push
test
jne
cmpsb
or
cmp
loop
or
orl
mov
mov
addr16
test
mov
icebp
in
or
ret
cld
insl
popa
inc
decl
jl
add
push
lcall
inc
sub
rorb
jmp
mov
js
push
clc
and
add
int3
aaa
in
xchg
int3
les
add
pushf
jge
xor
cmp
xor
out
xchg
rolb
sub
data16
lds
push
push
inc
mov
cwtl
push
fdivrl
dec
repnz
fimull
adc
popa
xor
inc
inc
sbb
sti
div
sbb
xor
ret
std
inc
cwtl
mov
push
aad
out
lods
cmc
jle
xchg
test
sahf
out
jne
aad
pusha
mov
xor
xor
cmp
sub
adc
ret
mov
mov
les
cld
clc
data16
mov
xchg
dec
lahf
mov
jns
popa
push
add
or
and
dec
sbb
add
mov
sbb
testb
xchg
imul
outsl
xor
add
push
ss
repz
xchg
mov
mov
das
dec
dec
lods
mov
adc
mov
mov
push
lock
leave
mov
pop
cmp
aad
push
xor
mov
rolb
cltd
pop
int3
push
mov
loop
jae
test
pop
adc
jge
scas
shrl
pushf
sbb
les
ds
hlt
jge
or
test
lods
inc
jnp
sbb
jp
push
push
and
cwtl
fwait
jbe
movsl
dec
leave
in
jns
out
in
mov
stos
sub
stc
cwtl
daa
incb
idivl
jge
aaa
in
shl
pop
cmpsl
fisttps
push
int
adc
sbb
clc
xor
fstps
cltd
in
out
loop
mov
add
jbe
push
mov
stos
mov
xchg
aam
sahf
aad
jbe
aas
push
mov
je
data16
pmaddwd
xor
jns
je
ret
sub
mov
mov
xor
inc
cmp
dec
aad
push
nop
cwtl
imul
push
test
jp
arpl
cmp
inc
fwait
das
inc
sub
ret
sbb
cs
dec
bound
inc
arpl
pop
inc
mov
pusha
lea
call
ljmp
out
rorb
out
leave
popl
xchg
push
xlat
mov
cmp
insb
sbb
std
or
dec
divl
adc
xor
loopne
jecxz
fiadds
loope
sar
int3
push
lret
mov
jb
shrl
dec
cmp
andb
xchg
mov
test
cmp
int
jle
mov
std
push
fcmovu
xlat
rorl
shrl
out
mov
les
jp
sub
fisubrl
jge
icebp
pushf
mov
ret
mov
jo
sub
add
pop
hlt
dec
sbb
xor
sub
mov
out
xor
arpl
cld
and
xchg
movsb
inc
jnp
loopne
lods
mov
repnz
adc
pop
pop
ljmp
sub
cltd
add
and
loopne
xor
lods
mov
push
cmp
pop
ja
sbb
test
or
sub
push
iret
and
push
push
out
mov
scas
arpl
and
and
mov
nop
dec
pop
daa
das
fsubrp
pop
jle
push
addr16
mov
fdivp
pusha
and
pop
mov
push
mov
int
lds
dec
push
cli
outsl
ret
mov
mov
or
out
mov
adc
sub
inc
xor
pop
push
mov
rcrb
outsl
arpl
cmpsb
jae
pop
imul
adc
out
daa
stc
mov
fnstcw
mov
aaa
push
mov
mov
das
loop
loope
mov
and
and
in
mov
jo
es
insb
test
jnp
in
xchg
xor
or
mov
adc
inc
dec
jl
rorb
loop
rolb
push
pop
xchg
cld
dec
jb
xchg
cmp
jnp
in
inc
push
dec
push
andb
inc
cmp
cmpsb
dec
aas
enter
xchg
test
or
push
jp
dec
lods
js
sbb
or
cs
xor
mov
ja
shrb
push
push
push
inc
xor
ret
add
push
aaa
add
jns
dec
in
pop
add
xchg
mov
divb
xor
in
mov
pop
and
inc
leave
adc
mov
push
mov
xchg
rorl
jmp
fistl
or
xor
jmp
scas
inc
mov
inc
pop
mov
loopne
addr16
fsubr
push
ja
xor
js
or
push
hlt
mov
loopne
inc
cwtl
push
cmc
mov
sarb
push
ja
mov
push
inc
xor
ss
mov
sub
mov
mov
popf
or
adc
mov
push
cli
hlt
jle
movsl
lock
push
inc
mov
mov
inc
push
push
cmp
out
mov
loop
xchg
sbbl
mov
arpl
mov
sbb
in
aad
xchg
shll
shll
dec
and
dec
gs
orb
xchg
mov
rorl
adc
out
cmpsl
scas
xchg
add
xchg
pop
les
test
xlat
aaa
and
mov
xchg
adc
pop
push
push
in
pop
mov
cmc
mov
jns
sub
push
adc
pop
mov
and
mov
and
xchg
sti
adc
mov
adc
rol
cmc
mov
inc
imul
dec
pop
fmull
inc
loopne
sub
imulb
loope
push
jge
jo
add
in
pushl
or
push
lret
pop
imul
push
mov
pop
xchg
and
xorb
jp
sbb
enter
test
stos
pop
or
inc
ja
repnz
iret
pop
ret
xchg
aad
mov
inc
or
in
fstps
xchg
push
sub
test
xorb
pop
in
dec
pushf
pop
mov
insb
adc
aas
jp
xorb
addb
lods
or
push
sbb
sub
jbe
js
mov
sub
fnstcw
stos
cld
mov
mov
stos
ret
and
cmp
fstps
fs
pop
jecxz
mov
addr16
js
mov
in
stc
adc
daa
and
lods
or
test
les
fsub
cmpsl
inc
or
inc
fsubrs
push
inc
testl
popa
adc
insb
inc
ret
iret
mov
ret
imul
dec
push
push
pop
arpl
xchg
pushf
or
push
jmp
cmp
adc
cmp
push
push
mov
add
stos
or
cmc
je
jb
cmp
mov
lods
or
add
dec
divb
stos
int3
lea
jg
lahf
dec
xor
ss
inc
mov
mov
mov
or
jnp
fsubl
cmp
rep
xor
xor
mov
mov
mov
pop
and
pop
push
inc
enter
xor
movsl
adc
xchg
jno
sbb
dec
sub
push
stos
xor
imul
xchg
int3
mov
cmp
sub
mov
dec
neg
int3
fstps
inc
or
xchg
das
sub
mov
xor
jae
outsl
mov
push
jg
dec
fsqrt
sbb
xchg
imul
cmp
xchg
lds
popa
sbb
push
insb
cltd
dec
test
cmp
fsubl
int
lret
lds
je
aad
outsl
cli
xor
inc
jno
ljmp
mov
sub
lods
mov
or
inc
rclb
sbb
fldenv
push
or
clc
es
pop
mov
pop
data16
jns
aaa
inc
test
adcl
jl
jns
sbb
shlb
lods
dec
je
call
inc
mov
int
add
cltd
inc
mov
shll
inc
inc
mov
mov
pop
lea
push
rcrb
mov
ds
pop
xchg
mov
and
mov
jno
je
aaa
jp
lcall
insl
add
mov
sub
dec
rclb
mov
push
test
adc
pusha
adc
arpl
imul
add
add
pop
xchg
enter
inc
cld
push
dec
into
popf
mov
inc
mov
inc
es
mov
test
or
and
add
shll
repz
mov
lea
in
pop
inc
add
cmp
ja
into
sub
jle
std
imul
data16
fidivrs
add
push
xchg
addb
stos
aam
out
cmpsb
repnz
rol
adc
outsb
lcall
fs
cld
jge
lcall
js
sti
incb
into
sbb
mov
dec
jne
fwait
sti
xchg
movsb
dec
test
data16
daa
cmp
cmp
pushf
xchg
mov
xchg
test
jecxz
pop
inc
out
ljmp
aam
xor
adc
mov
sahf
lock
and
stos
push
sub
scas
inc
scas
or
sbb
lret
pop
lock
and
movsb
cltd
cmpsl
into
add
in
js
lret
adc
adcl
push
jne
inc
jns
aad
shrb
shlb
xchg
dec
add
push
mov
inc
pushf
out
add
mov
jg
pop
movsb
sub
in
jns
rcrl
xchg
sbb
dec
aam
cmp
sarl
insb
mov
mov
iret
loope
mov
cmpl
lods
sub
xchg
xorb
icebp
inc
gs
mov
testb
fiadds
xchg
mov
pop
jae
mov
adc
xor
daa
push
cmpsb
inc
cwtl
add
jge
movl
es
lcall
cld
xor
cmp
jae
add
push
cmp
repz
xorb
push
mov
dec
push
jbe,pt
push
push
sbb
cmp
gs
lret
push
jp
int
movb
pop
aad
in
out
and
and
xchg
pop
sbb
mov
xor
mov
jg
mov
add
mov
or
sub
outsl
dec
les
pop
inc
mov
je
xor
data16
sub
not
je
jno
inc
cmp
add
sbb
mov
imul
popa
mov
cmc
iret
mov
mov
mov
popa
addb
out
and
bound
push
lds
in
adc
sub
jne
pop
repz
and
inc
xlat
es
inc
inc
xchg
repz
add
stos
call
xchg
fcomps
xchg
fdiv
in
test
jne
jle
mov
fiaddl
popf
aad
cmp
lods
cltd
cmp
adc
stc
push
pop
and
out
push
fsubrs
push
push
pusha
jg
fisttpll
cli
out
mov
push
les
sub
jmp
iret
mov
shrb
scas
and
jno
outsl
or
cmp
mov
jno
aad
ret
addr16
fdivs
lret
test
and
aad
das
cmp
je
inc
flds
pop
push
pop
ret
mulb
xor
call
out
pop
enter
enter
add
fwait
loop
xor
cmp
xor
sbb
pop
jne
stc
lods
or
xchg
mov
inc
in
mov
adc
subb
inc
jae
les
lahf
flds
mov
ljmp
test
adc
jle
xchg
shl
push
dec
out
and
cltd
ret
iret
stos
insl
push
dec
in
andl
jecxz
mov
push
andl
dec
dec
push
in
sub
addr16
cmp
jecxz
ret
jg
std
mull
sbb
adc
lcall
or
add
arpl
adc
cmp
lea
adc
lea
push
cld
xor
mov
loopne
pop
iret
pushf
jg
fisubs
gs
pusha
or
or
mov
les
cs
and
pusha
mov
fisubs
das
fistpll
ret
fs
add
sbb
push
dec
inc
pop
cmc
ja
repz
mov
mov
jbe
jg
or
sbb
cmp
daa
push
dec
flds
inc
xor
add
icebp
cmp
mov
mov
sarb
fldenv
mov
xor
out
stos
test
js
adc
mov
inc
fmuls
add
adc
mov
lret
sar
in
and
scas
test
icebp
inc
mov
popf
mov
xchg
movsl
sub
push
mov
fs
shll
adc
add
xchg
mov
fstpl
mov
push
lcall
sarl
fimuls
mov
cmp
fs
pusha
inc
pop
xor
jbe
mov
and
xchg
xlat
sub
daa
xchg
pushf
test
cwtl
xchg
test
sub
fisttps
or
push
jo
into
push
cld
jne
je
cld
jo
mov
or
jge
or
sbb
cmp
test
sub
fisttpl
outsl
fisubrl
test
stc
sub
jno,pn
add
add
push
test
cmpsl
jge
xor
fildll
jle
movsb
int3
and
repnz
pop
ret
inc
add
push
push
push
pop
sub
and
push
jg
push
les
jb
fmuls
xorb
cmpsb
dec
pop
jae
out
mov
in
cli
cwtl
pavgb
sbb
fdivrl
mov
xchg
stc
push
or
pop
in
sar
rcll
mov
jp
jno
push
loop
mov
sbb
negb
mov
es
adc
fidivrs
pop
das
and
add
hlt
mov
leave
push
flds
out
sarl
and
ss
jno
out
addr16
mov
jp
subb
add
lret
mov
loopne
fidivrl
int3
pop
adc
or
mov
in
popa
xor
pop
stc
mov
adc
sbb
add
shlb
cmpsb
shll
mov
pop
dec
and
xchg
ljmp
pop
ljmp
in
pushf
xchg
push
int
dec
push
clc
rorb
dec
add
and
jae
div
mov
insb
mov
mov
gs
xor
in
fisubrs
cmp
gs
mov
add
inc
add
mov
pushf
mov
fdivrs
sti
ljmp
test
xor
pop
xchg
pop
mov
and
ljmp
clc
jbe
mov
adc
es
add
stc
xchg
mov
int3
rcrb
jae
insb
mov
shl
stos
sub
loop
imul
ss
incl
mov
cmp
or
pop
cmpsb
cld
sti
in
clc
mov
daa
mov
scas
enter
and
shrl
flds
pop
roll
ja
dec
inc
scas
push
push
jecxz
out
mov
insl
popa
jmp
add
iret
mov
nop
mov
das
xchg
inc
inc
lret
cwtl
dec
in
cwtl
cmpsl
div
stc
movsb
and
enter
lcall
cmp
pop
icebp
add
xchg
outsl
mov
jp
rorl
pop
mov
push
add
pushf
mov
das
mov
cltd
or
subb
inc
cmp
add
push
push
mov
sahf
sbb
gs
inc
rcll
pop
or
xrstor
jbe
pop
js
out
in
xchg
std
mov
pop
shll
jno
pushf
and
enter
mov
xchg
dec
mov
cld
idivb
es
out
movsl
fwait
mov
aad
rcl
adc
xchg
sbb
jmp
push
xchg
or
cmp
mov
xchg
mov
or
xchg
mov
out
add
test
add
cmp
arpl
xchg
xor
adc
xchg
je
iret
test
jnp
or
mov
repnz
push
mov
lcall
sub
push
clc
repz
xchg
jno
fisttpll
xor
mov
sub
js
ss
cld
xchg
adc
cmpsl
bound
xchg
xor
dec
fnstcw
lods
enter
add
pop
inc
je
jle
mov
dec
jo
sbb
sbb
push
test
dec
or
and
pop
ret
and
in
andb
mov
adc
testl
das
mov
adc
xor
fs
lahf
cmp
in
dec
movsl
out
ret
outsb
pop
das
xorl
push
mov
xchg
es
imul
in
sbb
pop
in
dec
dec
mov
adc
or
mov
xchg
in
subl
loop
pop
cmp
cmp
icebp
enter
push
or
adc
in
or
push
stc
sti
mov
outsb
fstp
cld
aam
or
lcall
sub
movsb
out
jp
or
out
rcrb
mov
inc
imul
insb
inc
cwtl
xor
jae
lods
cmpsb
loopne
aam
mov
xor
xchg
push
pop
mov
aam
mov
sbb
mov
and
popf
fmuls
lret
mov
cmpsl
add
out
cs
and
jle
repz
adc
cmp
and
push
inc
out
pop
arpl
or
clc
push
pop
fwait
push
iret
pop
cmp
xchg
jl
cmp
cmp
mov
rcrl
call
inc
notb
data16
add
sti
lea
and
aad
test
xlat
scas
mov
lahf
jp
stos
fdivrl
add
jecxz
xor
test
mov
or
insl
leave
lcall
data16
inc
mov
jle
mov
pop
xor
into
sbb
dec
mov
stos
mov
xor
js
mov
sub
std
mov
fstl
into
cmp
sbbb
outsb
and
jge
and
je
and
loope
imul
add
jl
fsts
iret
cmpl
dec
stos
sbb
dec
lret
mov
push
adc
xor
xlat
sub
ficoml
mov
fwait
inc
xchg
mov
fidivs
gs
and
outsl
adcb
and
lret
pop
pop
pop
ret
outsb
mov
inc
inc
pop
aas
jp
and
adc
cwtl
and
xchg
xor
pop
push
mov
dec
push
xorb
mov
push
pop
ljmp
adc
mov
add
cmp
pop
mov
cmp
rorb
lods
lea
ror
aas
test
jbe
xor
andl
adc
mov
popf
inc
adc
xchg
mov
sbb
or
dec
xchg
and
push
and
dec
inc
int3
add
sbb
adc
inc
fcmovnbe
stos
rcrl
pop
pop
xchg
push
dec
data16
and
jg
xchg
jmp
xor
das
jg
insb
fldenv
cmp
ss
lock
push
cmpl
sarl
xchg
pop
dec
mov
add
inc
or
scas
mov
pop
pop
sbb
addr16
insl
ffree
push
daa
dec
dec
sti
out
mov
adc
addb
movsb
xchg
pop
ss
adc
test
mov
fldenv
or
stos
jl,pn
dec
mov
and
cmpsb
add
sub
cs
add
aaa
jbe
add
sti
jo
jne
push
lea
or
or
stos
shrb
ret
or
sbb
pusha
jae
xor
lcall
and
xchg
sbb
stc
repz
cwtl
cmp
or
lds
lds
mov
mov
jne
aam
hlt
sub
into
clc
mov
lock
and
popa
testl
mov
mov
and
or
dec
mov
and
push
and
sti
iret
mov
adc
aas
aad
popf
and
xlat
mov
dec
repz
stos
xchg
jae
xchg
jg
iret
bound
scas
xor
popa
sahf
pop
fwait
fs
repnz
ljmp
andb
push
scas
mov
sub
fldt
bound
lahf
insl
in
cwtl
and
sub
movsb
inc
mov
xchg
xchg
mov
adc
pop
mov
rorb
fwait
insl
fnsave
cmpsl
mov
adc
adc
add
mov
sub
out
or
lock
fisttpll
cld
insb
cli
rcrb
mov
sbb
bound
ret
dec
cltd
and
jns
pop
jno
outsl
in
test
mov
mov
sub
mov
pop
jge
aad
sub
pop
addb
and
inc
and
popa
jle
inc
sub
dec
repz
and
jp
iret
xlat
inc
mov
xlat
xlat
fnstsw
xchg
inc
push
jl
arpl
and
sbb
iret
sahf
pop
xchg
mov
js
mov
sbb
jle
jno
xlat
push
jp
xor
lods
inc
out
sahf
fidivs
xor
bound
repnz
pop
out
xor
inc
repnz
xorl
mov
mov
faddl
xor
out
dec
mov
hlt
cwtl
add
shlb
outsl
jo
shrb
aaa
add
sub
js
test
test
mov
outsb
fisttps
push
inc
mov
test
push
std
push
mov
loop
cs
or
fwait
mov
mov
lods
xchg
int3
dec
cmp
notl
es
push
insl
mov
jne
orb
int
push
cmp
cltd
pop
jle
mov
add
xchg
and
mov
adc
xor
sbb
pop
hlt
or
in
fisubrl
pop
fdivrl
in
mov
test
mov
inc
aam
add
add
pop
cmpsb
push
mov
in
in
pop
outsl
imul
adcl
sub
loope
nop
je
or
int
mov
xchg
jmp
ja
adc
lcall
mov
popl
and
in
cmc
fldz
lds
mov
cmpl
icebp
add
cmp
ss
nop
adc
hlt
lcall
add
mov
push
push
inc
lea
mov
arpl
mov
push
mov
inc
jns
mov
adc
es
push
aaa
pop
sahf
insl
push
loop
adc
das
sarb
adc
in
stos
dec
js
in
cmp
mov
xor
aad
je
add
mov
mov
lods
into
out
decb
inc
mov
push
loope
imul
add
das
fistpll
and
adc
inc
insl
or
mov
jns
lret
xchg
divb
adc
dec
and
loopne
mov
ret
out
push
mov
in
mov
jbe
xor
jg
push
dec
push
je
and
xor
and
mov
shrl
jg
inc
dec
sub
push
mov
inc
xlat
data16
cmpsl
push
enter
jbe
rcrb
int
jecxz
movsb
mov
mov
add
jl
mov
cmp
cmp
dec
xchg
jl
stos
and
gs
scas
ljmp
popf
pusha
adc
repz
cs
lret
ja
pusha
inc
mov
icebp
jne
pop
in
addr16
ja
stos
lods
cs
inc
mov
xlat
mov
fmul
imul
adc
mov
or
inc
sarl
sbb
bound
sbb
imul
sbb
and
je
cltd
pop
out
or
jp
subl
popl
inc
cmpsl
push
cmp
and
rcrb
mov
push
fisttps
or
pop
insl
add
mov
jg
adc
fidivs
inc
pop
ficompl
in
das
xor
sub
enter
xchg
aad
or
xor
out
mov
inc
mov
inc
and
cmpsl
mov
cmp
orb
pop
or
push
les
jno
das
mov
cmpsb
popl
rcll
mov
lahf
adc
stos
ds
fdivrl
popf
scas
xchg
lds
scas
jle
in
mov
outsb
gs
xor
dec
mov
push
xchg
inc
aas
jl
mov
and
in
cmp
cmp
dec
and
ret
loop
ret
push
sub
repz
mov
dec
add
sub
add
pop
sarb
mov
mov
out
add
in
push
ljmp
shlb
ret
sarb
jle
sahf
mov
add
dec
xchg
pop
rcr
push
sarb
pushf
dec
test
std
les
outsb
cmp
ds
add
clc
lock
push
cmp
in
test
mov
sbb
fcomp
xor
mov
or
mov
in
push
jb
lods
jg
neg
call
jnp
sbb
jmp
mov
push
movsb
jbe
sub
xor
dec
dec
mov
jmp
ljmp
pop
mov
test
jg
and
xor
xchg
out
push
bound
dec
ss
aam
addr16
mov
dec
jb
inc
je
inc
lock
push
jo
jae
in
inc
push
jmp
jg,pt
les
add
jge
cmpb
xlat
jg
je
push
mov
aam
and
and
ja
pop
loopne
inc
lea
mov
or
fisttps
stos
fdivl
aaa
shr
ret
push
stc
mov
repz
adcb
dec
push
fs
inc
sub
or
sti
scas
shl
stos
cmpsl
ljmp
cld
mov
push
pop
mov
arpl
gs
nop
jmp
enter
adc
stos
insl
mulb
mov
jmp
pop
ljmp
add
into
sbb
pop
mov
imul
jmp
mov
mov
js
cmp
pop
leave
xor
hlt
ret
cmp
call
jg
ljmp
dec
jge
std
push
sbb
push
unpckhps
test
and
xor
loop
pop
inc
and
mov
pop
out
orb
and
rolb
aaa
mov
stos
jb
or
rol
and
mov
into
xchg
sbb
lcall
fwait
inc
mov
fldl
pop
leave
inc
cmpsb
nop
testl
fdivrl
nop
sahf
sub
je
lcall
push
adc
ret
vmovupd
xchg
scas
enter
outsl
xor
push
jo
cltd
mov
pop
inc
jns
jecxz
mov
sub
popf
jl
pop
sbb
push
jne
addb
fisttps
das
sbb
or
arpl
aam
push
jmp
mov
iret
das
cmc
push
int
push
out
jo
das
jb
jmp
lock
jmp
or
mov
inc
or
sub
mov
pop
fwait
nop
xchg
xchg
push
andl
pusha
or
add
fsubp
or
mov
insb
add
repz
popl
out
xchg
dec
lcall
mov
mov
sub
bound
and
int3
pop
push
inc
int
mov
ljmp
sbb
dec
inc
mov
and
lcall
mov
gs
dec
sidtl
inc
rorb
xchg
andl
xor
cmp
les
stc
mov
fwait
lret
filds
flds
adc
pop
pop
pop
xor
cmc
and
cmp
lds
pop
xchg
and
loopne
pop
inc
sub
repnz
stos
lret
push
lret
mov
push
xchg
iret
mov
clc
loopne
popf
out
add
leave
ljmp
ret
movsl
jecxz
cwtl
push
dec
les
sub
or
pop
jge
mov
mov
push
jb
fstpt
inc
pop
jp
aas
inc
ds
repnz
pop
scas
scas
mov
cmp
pop
ret
fs
insl
in
lods
outsb
dec
adc
sbb
test
adc
lret
das
popa
pop
sub
jno
ret
pop
pop
ds
insb
pop
out
movsl
or
sub
push
add
xchg
xchg
xor
mov
cmpsl
mov
add
xor
mov
xor
jb
mov
leave
cmc
int
pop
in
inc
dec
ds
into
rol
jl
and
insb
stc
into
test
out
lods
pop
and
lods
aaa
or
cmp
fiadds
test
iret
out
add
aaa
test
push
push
pop
rolb
pop
mov
push
enter
test
orb
xchg
adc
cmc
inc
repz
jns
icebp
adc
addb
lock
loope
adcb
and
int
jne
sbb
arpl
inc
fucomp
dec
scas
es
leave
cmp
enter
aaa
daa
sbb
call
ret
scas
popf
call
jae
inc
fsubrl
ss
mov
in
push
mov
adc
out
and
cli
enter
lds
mov
rcr
or
lds
xchg
sti
idivb
jmp
out
loop
pop
shll
mov
sbb
out
int3
jmp
lock
iret
sbb
dec
and
outsb
ret
lods
ficoml
mov
insb
ret
sbbb
cwtl
mov
mov
dec
mov
adc
movsb
mov
sti
push
leave
push
movb
flds
sub
testl
outsb
mov
lahf
or
clc
in
xchg
mov
cli
fildl
fadd
les
and
lods
cmp
lcall
inc
cmp
mov
add
ret
mov
fisttps
inc
mov
add
mov
aaa
jmp
punpcklwd
ficoms
and
cmp
lahf
roll
gs
scas
mov
movsb
ljmp
cmc
pop
mov
sub
mov
jns
fiaddl
xor
jae
jnp
je
mov
shrb
pop
gs
mov
outsl
gs
cmp
push
xorb
sbb
and
js
xchg
aaa
mov
pop
subl
int3
jl
daa
out
out
xchg
scas
aam
fisttpl
cld
adc
jl
inc
divl
in
repz
push
in
xchg
push
or
fsubrs
mov
in
out
loopne
cltd
je
pop
adc
dec
out
jne
nop
xorb
cmp
in
add
pop
cwtl
mov
sbb
mov
sub
es
xor
and
push
push
xchg
push
ds
repnz
xor
mov
ds
mov
cmpsb
and
fidivrs
push
cld
sbb
cmpsl
cmp
stos
shlb
jbe
push
lea
pop
pusha
fildl
test
lods
imul
lods
insb
mov
add
pop
lds
sub
popa
push
xchg
filds
call
loope
fnstsw
out
inc
or
add
pop
pop
out
and
push
outsl
mov
sub
dec
xchg
cmp
sbb
icebp
sti
xor
cmp
insl
xchg
lret
sti
testl
xchg
iret
mov
aaa
push
in
das
inc
mov
jne
dec
add
popa
clc
xchg
or
fsubrs
aaa
imul
test
clc
icebp
iret
mov
fdivrl
scas
push
or
sti
xchg
dec
inc
cmp
stc
add
jns
lods
jge,pn
movsb
mov
pop
out
push
mov
fcoml
rclb
icebp
xor
and
jbe
into
cld
scas
mov
and
adc
scas
lret
cmpsl
rcrb
or
adc
in
dec
in
jge
andl
jmp
testb
cmpsb
mov
xchg
inc
cmp
sub
sub
ret
xor
stos
roll
or
pusha
xchg
test
add
clc
into
pop
mov
jno
adc
xchg
mov
insl
push
inc
mov
ljmp
pop
xor
leave
sbbb
sbb
inc
test
sbb
inc
icebp
mov
sub
mov
push
adc
jnp
xchg
loop
push
mov
lock
adc
sahf
insl
leave
movsl
xchg
xor
and
fwait
xor
dec
or
sub
scas
inc
xor
xchg
cmp
inc
xlat
je
mov
cli
dec
ss
xor
call
sbb
jge
arpl
jno
icebp
pop
adc
stos
inc
sbb
leave
lahf
cli
pop
mov
jmp
test
test
nop
jne
test
sar
jb
jbe
stos
cmp
fs
test
adc
inc
ret
sub
sub
outsb
inc
jl
xchg
in
imul
inc
nop
ret
xchg
or
xor
push
dec
or
jnp
and
mov
jmp
cmp
aas
cld
xor
cli
mov
inc
lods
test
jo
cmp
add
dec
call
dec
mov
fcmovu
les
pop
pop
daa
adcb
lock
lods
js
mov
and
stc
add
cld
sub
int3
pusha
inc
enter
mov
inc
mov
scas
cld
fistpll
push
popf
orb
xchg
mov
lahf
out
mov
test
pop
lldt
lea
sahf
fiaddl
sub
mov
sub
add
xchg
and
outsl
xor
out
push
push
add
sbb
adc
ds
or
popa
dec
xchg
xchg
xchg
test
lret
jns
pop
mov
mov
xchg
addb
aad
fbstp
mov
pop
shrl
push
sahf
test
scas
push
popa
push
pop
xchg
fcompl
xor
rcrl
stos
dec
jle,pn
cmpsl
inc
pusha
push
stos
ds
add
sub
mov
cmp
adc
mov
in
mov
movsb
mov
sub
cmpsl
mov
pop
pop
jge
pusha
popa
cmp
sti
dec
sbb
sub
adc
movsb
enter
outsb
push
outsb
filds
mov
xchg
mov
adc
pop
stc
push
mov
jge
stos
test
add
jnp
fstp
outsl
ss
fstpl
lods
lahf
jns
inc
inc
jge
and
inc
pop
ss
xor
lods
imul
nop
and
out
ror
cmpsl
xchg
in
mov
mov
xor
add
loop
les
fcoml
es
out
sbb
bswap
mov
test
cmp
mov
aad
sub
pop
jae
rorl
push
inc
pop
repnz
xlat
in
dec
push
ret
fxtract
xor
xchg
mov
cmp
outsl
imul
cmpsl
mov
jne
ret
sub
out
mov
adc
ficompl
cmp
cmp
loope
xlat
fstl
imul
push
rcrl
les
jnp
aaa
sub
add
jne
hlt
out
pop
stos
enter
mov
fbstp
das
aas
das
test
roll
aam
insl
inc
sahf
stc
pop
jle
add
mov
sbb
lods
fstpt
fildll
push
adc
or
inc
stc
push
pop
mov
icebp
repz
sahf
push
test
xor
pop
adc
mov
jle
fisubl
or
adc
mov
outsb
imul
pop
rorl
and
es
xchg
xor
stc
jo
push
cltd
mov
xchg
lea
lods
push
into
sub
pusha
js
sbb
cli
fstpl
hlt
hlt
add
pop
ret
add
xlat
mov
aad
sub
addb
js
jle
xchg
cmp
jmp
xchg
xor
idivb
clc
adc
out
dec
out
jl
pop
jae
cwtl
push
push
cmc
mov
inc
icebp
mov
ss
inc
pop
cmp
xchg
inc
jo
cmc
add
cmp
dec
add
fadds
cmp
or
in
xchg
push
xchg
ret
and
cmp
adc
pop
mov
enter
mov
push
adc
xchg
or
jge
xor
es
xlat
loopne
out
sub
std
test
mov
stos
pusha
scas
push
inc
push
cmp
pop
loopne
je
dec
jne
jecxz
hlt
into
js
int3
das
or
push
xor
out
mov
dec
jmp
fstpl
push
cmc
fnstcw
push
out
lods
mov
popf
mov
dec
imul
pop
subb
and
sbb
jmp
cmp
inc
lds
or
js
loop
sbb
and
sub
or
mov
test
mov
fs
mov
inc
lds
push
mov
das
in
fs
pop
hlt
aas
test
add
fcompl
sub
out
inc
out
fwait
push
shl
pop
insl
xorb
pop
dec
jno
fdivr
popf
in
test
inc
push
mov
mov
stos
jns
sbb
adc
icebp
mov
jne
mov
subb
pop
hlt
lret
sbb
outsb
or
inc
fidivs
stos
pop
xchg
dec
insb
ja
les
mov
and
add
frstor
gs
jmp
insb
dec
ljmp
inc
pushf
int3
mov
mov
rol
push
jl
in
popa
mov
and
aam
rorb
je
inc
mov
pop
leave
mov
out
pop
and
sti
or
xchg
jmp
out
pop
cmpb
pop
ret
mov
jo
out
loope
mov
jne
mov
jnp
dec
in
dec
mov
push
in
cmpsb
lret
test
loop
mov
or
add
ret
or
les
aas
cmc
movsl
jge
jo
test
pushl
addl
sti
inc
std
lcall
adc
sahf
jno
jg
jne
cmc
xchg
repz
add
sub
dec
sbb
popf
in
cmpsl
push
in
movsb
or
xchg
cmp
hlt
push
mov
ds
out
push
mov
ljmp
push
lea
jns
pop
xor
pusha
dec
cmp
test
aad
test
cmc
sti
iret
jbe
sbb
in
xchg
test
mov
cmp
cltd
mov
ret
and
add
iret
stos
push
adc
dec
ret
jb
add
push
push
lock
cmp
loope
divb
push
aam
xchg
jl
data16
decb
data16
add
lret
int
mov
or
sub
inc
push
add
lods
loopne
mov
mov
mov
movsl
mov
mov
adc
rorb
push
fsubrl
arpl
pop
push
fsubrp
sbb
add
mov
ds
sub
fcmovb
xor
outsl
lds
stos
sbb
lods
inc
cmpb
adc
sbb
pop
push
xchg
ja
adc
ret
or
cli
popf
insl
or
or
mov
call
icebp
inc
pushf
aam
lcall
sahf
ret
or
add
inc
cld
dec
push
mov
and
inc
subl
aam
inc
sbb
loopne
js
lock
jbe
inc
cmp
out
sbb
cmpsb
push
push
xchg
sbb
cmpsl
inc
adc
daa
xchg
loope
out
push
xchg
push
xchg
lret
mov
adc
mov
test
out
insl
in
inc
test
mov
mov
punpckhwd
lods
sbb
jne
xor
mov
push
and
sbb
jl
or
sbb
lock
arpl
cmp
lods
aas
arpl
sub
pop
dec
es
js
xlat
outsb
js
inc
jecxz
and
or
xchg
pop
sbb
jmp
jb
das
push
fildll
nop
imul
push
mov
bound
mov
cwtl
sub
je
mov
cmp
xor
roll
mov
rorb
out
xchg
outsl
lret
push
pop
mov
sahf
add
push
imul
cmp
movsb
icebp
dec
push
dec
xchg
pushf
adc
rorl
or
or
cmpsb
mov
mov
mov
iret
dec
outsb
inc
mov
jo
jle
hlt
xchg
fnstenv
or
js
pop
outsl
insl
pop
jne
stos
lret
dec
adc
or
out
fidivl
lds
addr16
daa
mov
scas
inc
fisttpll
pop
jnp
inc
push
pop
inc
call
pop
push
mov
sti
insl
daa
lock
cmp
cmp
push
mov
test
addl
rcrb
jnp
aad
sbb
cs
mov
data16
and
xchg
mov
mov
pop
in
mov
ja
arpl
ret
loopne
addb
xchg
popa
fcmove
pop
sub
in
xchg
icebp
data16
int
adc
data16
mov
jae
or
mov
mov
leave
icebp
xchg
stos
and
cmp
add
mov
cmpl
xchg
xor
or
out
lret
lcall
adc
inc
and
bound
sbb
in
hlt
enter
iret
fistl
sub
inc
sarb
mov
into
push
loope
mov
mov
xor
ljmp
mov
mov
leave
pushf
lods
jae
adc
sbb
mov
mov
jmp
xor
xor
inc
or
stos
mov
push
out
mov
in
or
ja
je
cmpsl
dec
push
inc
fcoms
aad
shrl
pop
out
rcll
inc
cwtl
repz
rorl
xor
rorl
push
ficoml
lea
inc
and
sar
fsts
aam
cmp
in
and
aas
nop
mov
mov
cmp
xchg
lock
in
xchg
pop
pop
or
into
stos
adc
call
sti
clc
nop
scas
xor
jbe
icebp
mov
jg
stos
jns
je
add
js
sbbl
push
xor
mov
inc
test
ja
jns
incl
cltd
lea
test
mov
xor
push
or
mov
mov
fidivs
sarb
shll
xlat
pop
cmpsb
call
mov
mov
aam
adc
cmpsl
popa
inc
xor
adc
rol
rcrb
adc
jno
mov
insl
fisubl
jge
lret
jge
inc
scas
dec
data16
push
mov
fs
cltd
inc
mov
cmp
cli
sahf
sub
inc
paddd
out
jl
xor
hlt
xor
insl
cmp
cmpsl
jnp
lret
push
inc
adc
dec
daa
icebp
stc
addr16
pop
add
lcall
pop
nop
aad
movsl
sbb
pop
mov
into
mov
adc
cmp
xor
and
xchg
add
addr16
cld
in
mov
mov
mov
dec
pop
js
cmp
mov
repz
out
clc
inc
fsubrp
adc
stos
insb
jecxz
push
sbb
cmpsb
gs
cmpsb
cmovl
push
sahf
cmovs
enter
mov
movsb
cs
xlat
lahf
int3
cwtl
imul
xchg
imul
mov
pop
adc
mov
cmc
jbe
xor
mov
out
orl
jnp
sbb
inc
push
repz
adcb
pop
lods
push
lea
fdivrl
mov
ret
and
outsb
lret
nop
out
and
pop
mov
in
push
arpl
test
mov
and
int3
test
sbb
stc
sub
es
cs
fbstp
pop
mov
rorb
or
sbb
push
outsl
mov
ja
clc
xchg
loop
adc
pop
into
add
cs
call
or
or
insl
fistps
lret
and
idivl
or
or
mov
out
iret
dec
pop
in
xchg
mov
cmpsb
cmp
xchg
jno
xor
inc
fldl
pop
daa
xor
jge
cmp
or
sbb
scas
push
jnp
add
outsl
xchg
sahf
adc
xchg
idivb
dec
divb
xchg
and
pop
js
push
cmpl
jnp
pop
mov
mov
mov
fistps
xor
popa
test
pop
cmpl
cmp
sub
adc
jmp
jno
push
mov
or
push
shr
mov
mov
lea
clc
cltd
mov
fs
shr
dec
fwait
adc
and
xchg
sub
lds
sub
cmpsl
arpl
popa
ljmp
sub
in
fwait
add
cmp
cmp
sub
sti
fisubrs
out
mov
push
dec
push
mov
mov
cmpsl
test
or
adc
mov
xor
lcall
xor
rorb
pop
mov
test
inc
fdivl
add
les
nop
fadds
inc
or
andb
mov
or
int
test
neg
adc
pop
push
aad
jo
pop
inc
cmp
jo
incb
jne
fistps
dec
inc
aad
sbbb
jns
arpl
scas
and
sbb
mov
xor
pusha
xor
mov
mov
push
add
push
or
jmp
push
xchg
inc
jle
mov
cmp
ficoms
mov
cld
adc
sbb
adc
or
les
sbb
push
jle
ss
push
ret
roll
cmp
mov
rcr
cli
adc
lahf
pusha
pop
mov
pop
jmp
in
mov
inc
jl
out
jle
adc
loop
outsl
rcll
sbb
and
clc
adc
mov
lods
bound
sub
pop
inc
push
mov
pop
movsb
inc
cmp
je
adc
shl
mov
mov
cld
dec
aam
cld
pop
jge
jle
popf
inc
mov
fisubrl
ret
test
lds
jns
jmp
add
inc
ljmp
mov
add
pop
push
cmpl
mov
sub
lods
or
xchg
lds
lret
jbe
test
lea
cltd
dec
fildl
inc
stc
loopne
push
cmp
sahf
pop
es
pop
xor
xchg
jb
xchg
add
jle
cmp
sbb
das
pop
inc
popf
and
pop
jl
out
aad
outsb
iret
dec
loope
test
or
push
xor
add
jae
cs
lds
faddl
arpl
jbe
les
adc
insl
out
popa
loop
repnz
gs
add
loop
push
sti
fdivp
pop
es
ror
ja
sarb
addr16
movsl
adc
fmuls
pop
repz
icebp
aam
clc
adc
movl
add
fldln2
into
ljmp
mov
in
mov
stos
mov
adc
xchg
call
ljmp
mov
or
loope
daa
or
inc
push
jb
xchg
push
mov
das
aam
ret
out
xor
addr16
jno
inc
fidivs
ret
test
fsub
das
bound
sub
movsb
mov
mov
cmpsb
ds
sti
aaa
cmpsb
adc
rol
jno
loope
and
test
xor
ds
jge
mov
cld
cmc
dec
int3
sub
xor
jb
stos
aaa
iret
jne
inc
push
add
push
mov
gs
test
add
mov
ljmpw
inc
jecxz
mov
cmp
rorb
out
mov
enter
and
movsb
adc
cltd
insl
mov
lods
sub
js
add
cli
mov
movsb
test
xchg
adcl
lock
cmp
out
add
insl
aam
push
sbb
pop
nop
popl
cmpl
das
xchg
xchg
inc
sbb
adc
in
call
add
movl
sysret
cmpsl
outsl
mov
daa
repz
mov
mov
inc
bound
daa
pop
push
xor
ret
sarb
mov
mov
or
cmp
jl
sub
sahf
fs
sbb
mov
xchg
mov
in
add
clts
nop
jmp
and
test
push
adc
jno
mov
xchg
sbb
popf
sub
inc
ss
jns
dec
rolb
add
lcall
pop
xor
test
cmp
les
loop
in
cmp
out
jle
popf
push
jno
cmpb
mov
and
xor
sbbb
rorl
orb
cmp
aas
or
cld
mov
push
testb
test
adc
filds
cmp
push
fbstp
lret
push
push
cli
push
push
mov
xchg
xor
mov
lock
sub
mulb
inc
pop
xchg
addr16
cmp
mov
fwait
hlt
xorb
inc
negl
scas
pop
ds
mov
inc
pop
cltd
test
call
cmpsl
push
mov
inc
jp
je
adc
xchg
adc
lods
jb
dec
jae
pop
cmpsb
push
arpl
out
cmpsl
adc
push
stos
jl
fildll
jnp
cmp
stc
push
outsb
gs
insl
dec
xor
test
insl
xor
inc
mov
loop
or
inc
dec
mov
insl
cmp
adc
jp
xchg
enter
xlat
push
jo
jns
jmp
out
cmc
mov
sqrtps
int
test
mov
or
in
pop
lea
arpl
lds
sub
push
in
test
dec
notl
sub
adc
ret
adc
inc
loope
mov
cwtl
xor
pop
pop
mov
jle
cmc
pop
out
std
lods
inc
mov
adc
arpl
mov
iret
lret
add
ret
stos
cmpsb
and
stc
inc
push
sbb
xchg
test
sub
out
bound
fisttpl
mov
and
pop
or
and
gs
dec
cltd
in
sub
mov
out
mov
xchg
push
mov
mov
addb
lret
outsb
pop
mov
push
gs
aad
dec
ja
sub
inc
stos
frndint
push
aaa
popf
cmp
repnz
das
loope
leave
xchg
popa
mov
loopne
int
aam
sbb
data16
fsts
or
cmpsb
xor
push
icebp
push
out
xor
xchg
xor
xor
jns
lret
sti
push
cwtl
xor
test
push
mov
ljmp
jp
lea
jb
ret
mov
sub
in
pop
push
pop
push
push
adc
mov
mov
mov
push
xlat
mov
pop
pop
sbb
push
sub
mov
push
cli
ja
aad
xchg
add
addr16
filds
cmp
pop
inc
fmull
lret
xchg
mov
cwtl
pop
jo
ss
sub
pop
sbb
pop
fstpt
ss
mov
test
xor
arpl
push
or
cltd
adc
ss
data16
pushf
sbb
into
pushf
mov
pop
mov
data16
gs
leave
pop
je
test
std
fcmovne
lock
mov
inc
mov
pop
sbb
push
or
cmp
mov
cmp
daa
mov
pop
xor
test
adcb
xchg
fs
lret
repnz
std
and
cmp
in
jle
int3
mov
rcl
push
push
mov
popa
or
jge
adc
aad
jnp
repnz
xor
stos
xor
xchg
icebp
mov
dec
sub
cmpsl
cmp
movsl
std
test
fdivrp
adcb
xchg
dec
jno
mov
xor
je
adc
xchg
mov
dec
sub
iret
negl
jg
pop
rclb
and
dec
xchg
scas
fcmovb
in
inc
xchg
or
jp
sub
cmp
add
and
pop
lret
xor
fwait
test
push
lock
addr16
mov
jecxz
aam
outsl
dec
adc
sahf
mov
pop
inc
add
sbb
out
in
add
adc
sub
pop
cmc
sbb
int3
adc
push
in
fidivrs
jecxz
daa
subl
pop
daa
repz
pop
mov
cwtl
negb
mov
sub
sub
es
xorb
movsl
aaa
call
movsb
arpl
cmpsb
mov
imul
idiv
ljmp
aad
lret
fbstp
sub
adc
mov
fimuls
xor
lcall
aam
or
pop
xchg
movsl
pusha
ret
in
repz
jg
sub
jo
lret
cmp
cli
mov
fdivrs
cmp
inc
aaa
pop
ret
and
mov
sbb
fimull
sbb
daa
testb
ret
or
jne
jg
inc
mov
mov
push
inc
add
cmpsb
mov
pop
popf
lret
in
outsb
test
out
insb
rorb
jmp
xor
dec
addr16
andl
nop
cld
jne
inc
mov
movhps
cmp
mov
pushf
loopne
mov
in
dec
cmp
inc
popf
out
mov
jle
sbb
inc
jl
mov
scas
jmp
or
inc
adc
pop
cld
sbb
xor
out
out
nop
or
cmp
add
mov
call
imul
notl
mov
mov
lahf
sbbl
jns
xchg
out
stos
xor
call
movsb
imul
inc
push
and
sbb
repz
and
icebp
jae
out
mov
imul
sbb
dec
or
fdiv
mov
insb
rorl
cmp
or
mov
mov
cld
andl
add
ret
scas
xor
cwtl
test
pop
pop
pop
testl
popf
mov
fwait
push
in
or
mov
or
sbbl
pop
shl
in
faddl
xchg
mov
sbb
pop
pusha
push
imul
push
stos
stos
pop
ja
daa
addr16
xchg
jb
push
in
sbb
fdivl
test
add
push
filds
mov
into
popa
xchg
dec
lods
push
jmp
xchg
inc
mov
cltd
mov
xchg
aad
test
dec
add
ret
and
outsb
leave
xor
ret
in
mov
push
pop
lret
push
mov
je
fiaddl
addr16
dec
decb
out
mov
sbb
lock
jl
leave
xchg
pop
push
or
fadd
stc
outsb
push
sbb
add
push
jge
in
insb
xor
inc
addr16
stos
lea
loopne
aas
inc
negl
sub
and
push
aad
sbb
nop
cmpsb
xor
sbb
xchg
adc
sbb
xchg
jp
in
iret
mov
out
test
shll
mov
ja
ljmp
ss
addr16
inc
xlat
sbb
pop
push
outsb
lahf
cltd
mov
mov
dec
mov
into
in
pop
mov
stos
sbb
idiv
cmp
push
lods
iret
shrb
mov
sbb
sahf
mov
xor
pop
push
mov
add
ret
add
sub
sub
sub
pop
rolb
scas
push
jo
mov
push
add
gs
sti
add
inc
sub
xchg
in
and
mov
stos
inc
shrb
aaa
in
dec
xor
jge
sbb
ret
lret
into
ds
jecxz
cmp
jae
jle
jg
sti
repnz
pop
jecxz
dec
popf
test
push
push
das
xchg
push
mov
push
ret
in
sub
inc
add
adc
jb
test
dec
sahf
pop
jg
cwtl
jge
testb
xor
loope
mov
xchg
xor
or
mov
sti
dec
movsl
fbstp
cltd
adc
loope
es
popa
jecxz
sub
xchg
pop
jg
popa
cwtl
out
xor
lea
inc
cmp
inc
cmpsb
or
aaa
push
adc
jne
repnz
add
fcmovbe
into
sub
inc
loop
pop
lods
lahf
clc
sub
adc
ja
cmpsb
adc
andl
and
ret
pop
mov
es
mov
adc
lea
lods
lcall
adc
fdivl
je
mov
mov
xchg
jno
inc
fs
mov
in
cwtl
shlb
lret
divb
data16
push
adc
xor
ror
mov
adc
push
imul
lcall
cmpsb
push
mov
mov
and
shl
xor
and
cltd
iret
and
mov
sahf
call
int3
push
pusha
sti
outsb
xor
popa
popf
shl
cmp
pop
ficoml
mov
stos
shll
and
pop
mov
push
push
jo
jns
jne
mov
mov
mov
xor
mov
jo
mov
mov
mov
cmp
xor
cmp
lods
dec
popa
mov
mov
dec
and
pop
mov
xor
mov
add
fldl
scas
sub
iret
xchg
daa
pushf
or
cwtl
nop
dec
xchg
sbb
lock
aaa
push
jb
and
sbb
addr16
fcomip
push
repnz
pop
rcrb
fs
pop
movb
pop
xor
cmpsl
enter
push
cmpsb
les
push
jl
daa
cmpsb
pop
popa
ljmp
outsl
clc
sub
jae
scas
xor
pop
mov
dec
jmp
loope
je
pushf
jle
iret
xor
and
jl
test
repnz
lcall
jo
jge
dec
pop
add
jle
shr
jge
fnstcw
int3
sub
roll
in
mov
mov
or
test
dec
enter
fisttpll
pop
movsl
mov
out
rcl
mov
leave
popf
dec
jne
hlt
lret
cmpsl
leave
fsubr
inc
xor
dec
stos
and
outsl
cmpsl
orb
aas
stos
pop
cld
scas
insb
mov
into
xor
in
sahf
ds
sbb
mov
mov
jge
js
jno
sub
mov
in
lahf
fnstenv
scas
loope
aam
sub
sub
pusha
xchg
cwtl
cmp
daa
scas
cli
cmc
adc
loop
mov
mov
int
push
xchg
adc
mov
and
cld
ret
mov
sbbl
cmc
cmp
push
or
in
mov
inc
mov
mov
leave
hlt
sbb
and
sub
mov
divl
pop
jne
or
pop
inc
dec
test
add
mov
jmp
aas
xor
cmp
sbb
or
fidivrs
mov
fcmovnb
sub
push
lds
out
and
jle
add
jecxz
dec
imul
lock
ret
mov
in
adc
or
dec
pop
xor
push
data16
jl
jge
or
ret
cmc
fs
sbb
push
jl
dec
out
pop
jns
cld
mov
ljmp
cmp
cmp
inc
mov
dec
fs
jmp
add
ja
mov
out
cwtl
mov
in
insl
popf
xlat
dec
leave
mov
mov
mov
dec
int3
add
or
add
out
shr
lret
mov
fwait
lods
jb
or
fidivs
fwait
adc
stos
adc
push
push
and
xor
inc
fdivr
lock
lds
jp
std
pushf
jl
xchg
cld
subl
outsl
xchg
xor
adc
shlb
xchg
mov
lahf
dec
and
leave
pushf
and
enter
jmp
icebp
add
push
shr
pusha
jp
mov
or
add
out
int3
cli
repz
fsts
stos
inc
insb
or
dec
std
ret
fisubs
sub
and
push
xchg
dec
add
or
loopne
rolb
imulb
sti
dec
imul
hlt
pushf
sbb
arpl
stos
test
mov
int3
hlt
jp
jno
xchg
mov
insl
xor
scas
xchg
aam
outsl
loop
jecxz
add
lods
aaa
fcmovbe
cld
call
pop
cmp
pop
pop
push
pop
cwtl
adc
jne
arpl
mov
add
arpl
inc
addb
push
mov
fdivl
mov
cmp
mov
pop
jp
pusha
mov
gs
das
sahf
pop
and
aam
mov
xorl
out
inc
fisubrs
pop
push
fdivs
leave
stos
jne
in
pop
sub
aam
jb
mov
xor
mov
and
mov
aas
inc
out
mov
incl
xlat
jb
scas
dec
push
mov
inc
cmp
rcrb
loope
jae
sbb
pop
pop
mov
clc
orl
fildll
out
fisttpl
jo
ret
aas
push
jg
sub
sbb
test
inc
clc
rol
xchg
or
test
inc
mov
xor
scas
add
out
xor
xchg
cltd
fadds
push
adc
gs
cmc
ljmp
adc
xor
loop
add
scas
pop
push
mov
push
out
mov
xor
xchg
int3
jp
ss
shll
lods
adc
fldenv
push
push
push
push
imul
jbe
roll
pusha
sub
addr16
leave
dec
cmpsl
lahf
xchg
adc
add
cli
test
fadd
adc
addr16
out
cwtl
xor
fdivl
in
cmp
xor
dec
and
xchg
mov
cwtl
sub
inc
push
and
sub
insb
pop
jle
pop
nop
sub
xor
clc
xchg
ja
adc
mov
stc
mov
imul
xchg
and
or
mov
xchg
popf
pop
or
testb
xor
loopne
push
dec
stos
dec
sub
mov
xchg
sbb
daa
add
sbbb
jge
call
loope
iret
sti
pop
test
cmp
sbb
repnz
jb
pop
movsl
jae
sub
hlt
rorl
xchg
mov
mov
stos
rsqrtps
cmpsl
push
pop
aaa
in
push
xor
cmp
mov
test
xchg
push
mov
fistpl
pop
adc
and
add
andl
mov
jns
jge
ret
jb
popl
xchg
stc
pop
call
add
lock
xchg
xchg
rol
hlt
insl
add
adc
jmp
pop
divb
in
das
repz
mov
mov
ret
aad
xchg
mov
jle
mov
rorb
xor
mov
adc
pop
inc
ljmp
pop
cmp
xchg
lret
int3
inc
push
inc
bound
pop
mov
lock
scas
dec
nop
ficompl
in
dec
jmp
adc
and
cmp
inc
scas
jle
cmp
mov
xchg
mov
stos
jge
jge
pop
stos
addl
in
inc
mov
shrl
xor
pinsrw
mov
adc
mov
dec
cmp
pop
jg
sbb
inc
push
popf
pop
dec
into
fsub
jge
cmp
pop
fisubrs
jns
xchg
loop
jmp
fisttpll
xlat
aaa
cmp
mov
jbe
into
lret
ret
jne
lret
sbb
push
lods
loope
lcall
testl
out
aam
inc
mov
pop
leave
stos
and
and
jle
adc
cs
inc
fdivr
mov
rclb
push
xchg
in
xchg
cltd
cmp
loope
hlt
lods
inc
rorb
enter
mov
inc
cs
lods
pop
int
jo
ret
pop
fimull
data16
jae
or
rclb
jecxz
add
popa
xchg
pushf
jno
imul
imul
fs
and
add
gs
es
push
daa
clc
cwtl
mov
jae
xor
xchg
jp
adc
dec
outsl
jmp
dec
cli
push
insb
mov
pop
mov
xorb
sahf
sub
bnd
stos
mov
cld
movsl
ja
pop
jne
inc
stos
xor
loop
ret
xchg
hlt
int3
outsb
jecxz
pop
stos
adc
mov
and
mov
in
mov
call
leave
cwtl
iret
icebp
aam
inc
addr16
fwait
push
add
inc
cmp
adc
jmp
lock
sbb
rorl
dec
mov
cltd
push
aas
jb
add
mov
out
fs
cwtl
push
test
adc
into
xchg
sbb
popf
cmp
sub
sbb
mov
mov
mov
dec
aaa
mov
push
sbb
push
add
gs
aam
bsr
sub
push
outsl
xlat
lods
mov
test
push
mov
jmp
push
xchg
in
int3
adc
cmp
faddl
mov
ret
in
scas
xor
mov
jg
xor
ret
inc
clc
push
sub
xchg
mov
add
enter
xchg
daa
mov
dec
fnsave
mov
mov
ss
sub
enter
loope
jecxz
cmp
mov
adc
mov
sbb
ret
cmpsl
push
add
push
sbb
and
push
jns
xor
lcall
sbb
push
add
out
lods
lds
roll
cltd
fidivrl
pusha
mov
ss
in
pop
loopne
mov
inc
inc
jae
idivb
mov
mov
nop
popa
xor
inc
sub
stos
cmp
mov
lcall
fsts
repz
ja
lahf
push
enter
pop
mov
pop
adc
adc
jns
dec
push
cs
insb
mov
add
and
pop
adc
daa
imul
add
dec
stos
pop
pop
mov
cmc
sbb
aaa
repnz
add
cmpsb
jle
push
sbb
push
adc
adc
mov
int3
rol
stos
iret
mov
mov
cmp
xchg
or
fdivrl
imul
xchg
add
adc
mov
inc
in
mov
fsts
push
loope
mov
mov
jbe
push
xchg
cmpl
jmp
push
lret
jnp
ror
mov
sahf
mov
stos
mov
jb
xchg
push
inc
pushf
loopne
xor
sbb
pop
lret
imul
fstl
mov
sub
movsl
popa
adc
pop
mov
push
jmp
xchg
pop
scas
xchg
fstpl
aad
adc
cmp
jae
dec
cmpsl
in
lahf
push
punpcklwd
adc
call
push
push
insl
in
loopne
inc
jns
pop
test
sbb
stc
xlat
adc
outsl
and
ljmp
fbld
repnz
ds
fcmovnb
push
sahf
imul
fldl
adc
aam
mov
jo
pop
pop
xchg
jge
div
sbb
xchg
hlt
pop
cmc
sbb
cmc
pop
and
and
popf
ljmp
mov
and
je
dec
test
fdivs
mov
or
sub
outsb
cmp
dec
mov
xchg
aad
stos
sbb
cmp
push
pop
pop
add
jnp
sub
scas
push
shlb
dec
js
inc
std
stos
sbb
idivl
out
sahf
dec
and
shr
xor
fisubrs
popa
mov
jmp
xchg
pusha
dec
mov
jp
data16
data16
les
xor
add
and
insl
imul
and
test
adc
stos
popl
test
cmp
addb
pop
cli
adc
or
mov
mov
adc
cmp
in
movsl
in
filds
mov
xor
push
adc
lcall
dec
push
mov
cmp
jno
fdivrs
sub
jge
clc
or
jae
fcom
shl
neg
push
je
test
outsb
int
xlat
call
sbb
pop
popf
cmp
mov
sbb
jl
in
and
std
cmp
cmc
push
ds
sbb
dec
rcrl
lcall
xchg
rcl
sub
ss
cs
xor
add
pop
rcll
stos
subb
pop
lret
arpl
popa
or
push
mov
jno
jb
xchg
addr16
rcrl
add
negb
cs
pop
jno
cmp
sub
leave
lret
dec
jo
sti
xchg
dec
ljmp
or
xchg
bound
cmp
pusha
fcmovnu
inc
xor
dec
xor
enter
pop
mov
jle
rcrb
fbld
mov
leave
pop
outsl
sbb
cmp
mov
aam
sbbb
fisttpl
fstpl
dec
in
stc
mov
test
xlat
mov
push
mov
push
insl
imul
jae
add
mov
imul
pop
lea
xchg
jno
int
jno
ret
orl
andl
push
push
jmp
adc
pushf
rcll
jae
ds
mov
fstpl
outsl
push
test
pusha
data16
pusha
in
scas
mov
and
mov
sbb
in
cmp
cmp
mov
lock
jnp
faddl
cltd
mov
adc
xor
jge
mov
dec
xchg
inc
bound
and
or
outsl
cli
out
pop
xor
clc
insb
call
mov
adc
cmc
into
outsb
dec
xchg
cltd
out
jg
aas
mov
inc
rcrl
jae
adc
fnstcw
out
cmp
jne
aad
jle
test
sarb
push
mov
mov
test
cs
dec
sbb
das
rol
fxam
cmpsl
and
lahf
pop
sub
fimull
adc
jmp
adc
subb
xchg
mov
push
aas
les
scas
outsb
dec
nop
add
mov
jbe
sbb
jo
mov
and
shl
xchg
xchg
xchg
inc
pop
mov
insl
int
xchg
ss
and
inc
es
xchg
mov
sub
add
add
aam
cmp
push
cmp
bound
sbb
xchg
cmpsb
or
xchg
dec
pop
jle
pushf
fcomps
cmp
mov
popa
adc
xchg
ds
in
fs
dec
fists
popf
sbb
leave
jg
in
jge
pop
pushf
test
mov
pop
js
mov
inc
ret
hlt
test
je
enter
rcr
sbb
imul
pop
sbb
mov
arpl
sbb
cwtl
mov
dec
lcall
fisttps
lea
or
ret
repnz
lods
pop
ror
jmp
popf
mov
popa
mov
inc
out
and
mov
sbb
ljmp
ljmp
fstpt
and
or
sbb
cltd
xlat
shlb
mov
nop
xchg
add
cs
pop
mov
ja
fcmovne
push
jecxz
push
mov
pop
aas
mov
push
push
setb
repnz
jnp
jge
loope
iret
movsb
lret
mov
jno
stos
sub
sub
pushf
stc
mov
pop
repnz
mov
jmp
cwtl
hlt
sti
adc
in
dec
adc
leave
xchg
sub
cmp
test
cmp
mov
cli
and
pop
lds
add
mov
dec
rclb
add
and
iret
fists
int3
push
lahf
jp
es
push
dec
aas
and
inc
push
fidivs
xchg
push
sub
dec
adc
daa
pop
jne
mov
mov
cli
jbe
loope
stc
add
cmpb
cmp
push
stc
add
and
add
pop
ja
pop
mov
inc
push
cmpsb
ficomps
adc
pop
lds
jno
and
xlat
mov
je
lcall
jp
fmull
xchg
ret
or
cmp
dec
idivb
lds
push
lret
sbb
pusha
lahf
sbb
cmp
push
add
adc
cs
sbb
sahf
scas
popa
mov
push
add
test
cmc
scas
xor
fisubrs
mov
pop
sub
xor
sub
jge
inc
test
adc
xchg
repz
lahf
add
cmp
fdivrp
jge
xchg
dec
jp
aas
das
push
dec
add
adc
pop
xor
cmp
fisubs
test
shrl
jecxz
or
adc
push
pop
rclb
fwait
add
arpl
mov
idivl
mov
js
popa
idivb
xchg
inc
pop
jno
lock
pop
fmull
fwait
inc
sbb
daa
aad
lret
lods
loop
jns
mov
popa
cwtl
cmc
jp
icebp
jbe
out
sbb
adc
in
adc
pop
out
ficompl
push
mov
push
mov
nop
movb
lcall
sbb
nop
jg
cmp
push
pop
out
lods
mov
bound
cmp
sbb
stos
xchg
std
mov
dec
xor
inc
iret
in
and
mov
fs
cmp
and
push
or
aad
pop
loop
cli
and
insb
add
jne
idiv
push
mov
fsubr
push
mov
and
jp
or
outsl
insl
sbb
fldl
mov
stos
xchg
outsl
dec
out
enter
gs
push
sti
into
mov
dec
mov
jp
data16
das
cmp
and
orb
test
dec
jae
sysret
mov
jecxz
mov
insb
inc
adc
cmp
je
in
and
pop
xchg
jp
dec
mov
aam
out
insb
push
xor
xchg
repz
jne
cmp
jnp
xorw
in
ret
ja
adc
cmp
adc
cld
js
out
jno
pusha
mov
repnz
mov
mov
sbb
fs
int3
out
pop
seta
call
dec
push
jns
retw
testl
push
scas
outsl
xchg
int
lods
roll
test
movsb
xchg
pusha
call
adc
mul
mov
icebp
flds
xchg
or
push
stc
stos
and
cmpsl
rorl
imul
and
pusha
andl
push
push
outsl
outsb
or
jo
loope
or
ja
pusha
and
cmp
xor
aaa
xlat
adc
shl
pushf
fmuls
cmp
fmull
mov
adc
lahf
in
adc
xorl
dec
adc
scas
std
das
lea
or
fldl
xchg
xor
subb
add
push
add
jmp
mov
add
ret
outsl
mov
mov
out
xchg
push
fs
out
adc
ds
and
xchg
cmp
pop
cs
sbb
fstpt
cmp
xchg
jnp
add
pop
in
cmp
xor
xchg
iret
lret
pop
adc
lret
pop
pop
aam
lds
sahf
adc
mov
data16
icebp
xchg
bound
loope
xor
cld
jle
loope
xor
jnp
mov
mov
sbbl
nop
mov
push
xchg
mov
cld
sub
outsb
lahf
jne
ds
cwtl
bound
pop
mov
pop
idivb
cmpsl
jo
mov
scas
xchg
insl
sbb
cltd
pop
scas
push
or
in
xchg
mov
pop
adc
ljmp
mov
adc
mul
outsb
mov
sbb
jno
ret
lock
je
mov
jp
and
rcrb
into
xor
sbb
lcall
pop
mov
inc
imul
stos
pop
jecxz
pop
xchg
and
fs
push
ficoml
pop
fwait
ljmp
mov
sbb
lea
jg
dec
out
xorb
dec
cmp
jo
lods
jmp
insl
push
xor
shrb
out
cmc
lea
rolb
pop
push
jnp
cld
popa
xlat
push
ret
push
push
mov
subl
pushf
into
jno
imull
mov
jle
sub
fcompl
xor
data16
jbe
push
loopne
cmp
add
scas
test
dec
es
in
xchg
pop
and
clc
sbb
loope
std
or
push
pop
outsb
mov
mov
lods
xor
pusha
lret
cmpsb
cmpsl
sbb
fdivl
je
cs
sub
test
icebp
aad
xor
mov
scas
scas
mov
iret
lahf
cmc
cmp
daa
test
repz
out
xor
push
xchg
pop
sub
fsubrs
sub
je
pop
jmp
bound
testl
pop
xchg
pop
iret
cmpsb
and
or
in
add
ret
xor
icebp
dec
dec
out
gs
fs
cld
add
sbb
test
ret
mov
and
clc
aad
bound
xor
es
xor
mov
add
pop
add
mov
loopne
fcmove
xchg
cltd
into
sahf
and
enter
mov
or
sbb
sbb
inc
push
lahf
nop
jno
sub
inc
xlat
mov
fistps
into
sub
popa
dec
sbb
aam
sbb
out
inc
push
sti
imul
jnp
fildl
cld
and
adc
xor
inc
xchg
inc
dec
movsb
fisttpl
leave
testb
in
fnstcw
repnz
push
mov
inc
inc
lret
aaa
scas
adc
mov
icebp
sbb
outsl
lods
add
sub
push
fwait
push
push
int3
jo
fidivs
mov
dec
xor
xchg
mov
lods
push
test
adc
inc
add
cmp
jle
ss
aas
xchg
and
jbe
bound
mov
jnp
bnd
jecxz
lret
imul
loopne
xchg
inc
sub
call
fwait
mov
rcrl
ret
cmpsb
inc
and
dec
xor
pushf
xchg
ret
inc
dec
fsubl
mov
xchg
out
fsubrs
into
pop
pop
flds
mov
repnz
mov
dec
out
ret
cmpsb
and
mov
adc
fisubs
dec
enter
stos
xchg
test
arpl
jmp
push
mov
cmc
out
jae
aaa
sarl
out
dec
aad
push
add
cmp
xchg
xor
jns
sbb
sarl
aam
jmp
fsubrl
lods
xchg
jno
dec
xor
scas
mov
into
aas
or
add
jmp
jbe
lods
loope
test
arpl
mov
rcrb
stos
stos
push
call
sti
mov
stos
add
mov
dec
push
mov
mov
stos
inc
push
gs
mov
sbb
stos
cs
mov
lret
adcl
icebp
xor
shll
xor
add
push
lret
ss
pop
in
fidivs
mov
clc
mov
mov
jg
push
movsl
jae
xor
loope
mov
add
flds
jne
out
inc
dec
jno
loope
xchg
lods
into
lds
cmp
adc
xchg
xchg
cmp
int3
lahf
mov
mov
pop
inc
int
dec
xor
movsb
call
mov
sbb
xlat
add
adc
imul
sbb
mov
clc
loop
out
outsl
mov
inc
and
jb
arpl
mov
dec
and
jg
inc
fwait
test
arpl
scas
cmp
dec
mov
lret
jns
sub
jne
ret
rcrl
loope
pop
xchg
repz
jno
sbb
or
je
fstpl
leave
nop
pop
jle
popf
jo
ljmp
mov
xor
jb
sub
fstp
pop
in
xchg
lea
test
xchg
mov
mov
into
lea
dec
mov
push
call
add
inc
push
pop
inc
test
test
xor
push
repnz
movsb
in
sbb
outsb
sbb
icebp
or
jno
aas
jae
inc
pop
mov
ja
push
sbb
cwtl
add
and
and
mov
cltd
mov
dec
popa
lret
aas
lock
mov
shr
push
sub
lcall
and
dec
aam
xor
adc
movsb
push
aad
dec
fidivs
fidivrs
or
ds
xlat
add
in
mov
xchg
mov
mov
pop
mov
pop
xor
stos
xor
adc
xor
sub
mov
test
lret
pop
outsl
mov
or
dec
shr
cmpsb
xlat
mov
sub
pushf
cli
loopne
dec
js
push
les
push
cmp
adc
dec
jne
imul
adc
mov
pop
cmp
lahf
das
loope
cmpl
scas
xchg
pop
sub
or
test
mov
imul
jbe
mov
stos
mov
call
in
aas
cmp
outsb
in
fwait
and
push
pop
and
daa
mov
popf
sbbl
xlat
pop
sbb
insb
ja
pusha
bound
adc
fistpl
mov
xor
sbb
cmp
or
push
fldt
popf
ja
inc
ficoml
nop
insl
jo
imul
or
cmpsl
jmp
xchg
jnp
ffree
movsl
cwtl
mov
outsl
js
mov
cmp
mov
cmp
sbb
aaa
cmp
lock
iret
fs
mov
ja
sbb
movsl
je
insb
mov
mov
cld
fdivs
ja
sub
fs
mov
xor
sbb
add
shr
stos
push
inc
xchg
pop
add
fsts
cmp
jle
and
pushf
idiv
bound
mov
jecxz
cmp
xchg
and
mov
pop
shrl
cld
push
dec
sub
jg
bsf
ss
cmpl
testb
pop
outsb
andl
adc
push
mov
push
cwtl
mov
icebp
lahf
mov
icebp
test
notl
push
lods
jecxz
repz
test
sbb
call
mov
imul
xchg
sub
cltd
mov
fistps
jecxz
push
lods
cld
mov
cltd
movsl
mov
pop
hlt
dec
add
mov
pop
negl
pop
stos
mov
iret
andb
inc
aaa
leave
mov
jns
ljmp
lahf
icebp
xor
dec
adc
loopne
mov
xchg
xor
mov
mov
movl
and
fnstenv
and
mov
popf
btcl
gs
sbb
sbb
xchg
xchg
aaa
out
add
inc
cmc
loope
std
or
cli
int3
das
in
xor
jge
adc
test
push
out
arpl
dec
dec
mov
jmp
lret
roll
nop
push
in
test
jge
jae
xchg
sahf
iret
mov
sbb
add
inc
cwtl
lahf
out
add
push
inc
ret
mov
xor
aas
mov
lods
jge
pop
das
lahf
lret
repz
xchg
push
imul
out
lods
add
movsb
cltd
js
loope
imul
xchg
lcall
pop
mov
cmpsl
pusha
adc
mov
xor
jnp
loop
and
dec
test
mov
push
mov
test
mov
xchg
icebp
inc
test
jecxz
fs
cmp
push
clc
push
xor
sbb
cmp
adc
cmp
movsb
xor
sarl
decb
inc
movsb
mov
mov
imul
js
mov
dec
fyl2xp1
pusha
dec
sub
sbb
out
incb
jnp
test
fs
jae
imulb
js
pop
lret
jle
mov
xchg
mov
out
test
cli
xor
or
push
cmpsb
pop
mov
lea
xacquire
mov
loop
mov
js
add
shll
imul
out
dec
outsb
add
popf
dec
ds
push
dec
sarb
jae
loop
adc
cmp
fsubrs
mov
ret
popa
cltd
pushf
das
inc
pop
shlb
dec
in
mov
mov
mov
sbb
test
mov
les
push
insl
pop
dec
pop
jmp
pop
mov
push
push
icebp
mov
sub
je
mov
pop
test
stc
inc
inc
notl
push
mov
lahf
add
cmp
cmp
xchg
aad
xor
adc
sub
jne
xor
test
ds
in
dec
ret
and
and
loop
aas
bound
icebp
jecxz
imul
out
adc
das
lds
mov
lock
mov
mov
inc
test
lcall
and
mov
push
pop
fsubs
mov
push
scas
std
in
test
dec
add
dec
mov
mov
jae
arpl
dec
jb
adc
mov
add
and
sbb
jb
out
cmp
scas
pop
pop
dec
in
mov
leave
jge
test
rcl
mov
push
cmp
js
addb
rcrl
out
xchg
or
js
gs
popa
dec
fdivs
mov
push
repz
cld
roll
inc
lret
add
into
push
or
scas
xchg
das
push
bound
add
bound
fs
sbb
or
imul
mov
imul
sub
repz
mov
cmp
addr16
sbb
mov
aas
or
push
pop
add
sub
jo
inc
inc
push
or
into
mov
cmpsl
jge
out
jmp
jmp
jb
lods
inc
rorb
es
mov
cmpsl
and
cli
sbb
jl
nop
push
js
cmp
adc
arpl
jecxz
iret
sub
in
mov
pop
stos
test
xchg
inc
dec
cmc
inc
pop
push
shrb
add
les
xchg
mov
popf
sbb
mov
mull
cmp
lock
dec
pop
enter
and
mov
test
cmpsb
pop
bound
mov
std
jno
or
cmp
dec
lret
dec
in
repnz
scas
loop,pn
sbb
ljmp
jnp
mov
idivl
pop
test
push
lcall
mov
cltd
sbb
mov
xchg
mov
and
daa
push
in
mov
adc
jmp
insl
and
ret
pop
push
mov
ljmp
push
rorb
sbb
xor
nop
mov
pop
out
inc
xor
sahf
data16
mov
cmp
adcb
cmc
push
mov
lods
nop
sub
dec
mov
lea
movb
out
hlt
icebp
int3
lds
jb
sbb
imul
out
les
int3
outsb
orl
out
cli
out
and
mov
pop
scas
int
daa
push
daa
xorb
and
dec
mov
cmc
cmpsl
test
testb
scas
inc
sub
incl
pop
push
pusha
mov
jne
xor
bound
jo
xor
inc
or
jne
pop
fdecstp
sbb
into
decl
icebp
sarl
stc
clc
or
mov
pushf
fsub
cmpsl
lds
fdivp
gs
push
in
lret
pop
scas
xchg
xchg
out
mov
pop
fs
int
fcompl
dec
in
movsb
scas
sub
xchg
pusha
addb
xchg
and
adc
cmpsl
push
test
std
cwtl
out
adc
gs
adc
push
cld
icebp
xchg
addl
mov
popf
pop
mov
push
stc
in
adc
mov
pusha
push
mov
cmp
ja
and
test
xor
xor
mov
shr
cmpsb
mov
mov
xor
or
pop
popaw
push
xchg
jae
mov
pop
fwait
loopne
aas
loop
sub
jg
mov
or
sub
add
jmp
cmc
adc
sbb
mov
cmp
or
lahf
or
push
xor
xor
mov
arpl
pop
pop
sub
mov
sub
mov
inc
mov
rcrb
mov
mov
pop
or
sub
pushf
aad
sbb
mov
mov
dec
fisttps
shl
xchg
icebp
cmp
xor
xchg
mov
inc
adc
dec
mov
push
xor
dec
aaa
xor
sbb
inc
aas
jmp
jmp
add
push
mov
mov
inc
xchg
dec
fisttpll
inc
cmp
repz
out
dec
aaa
sub
std
scas
sub
andb
cmp
imul
xchg
std
sti
mov
testl
out
jb
xchg
mov
inc
jl,pt
mov
xchg
stos
and
test
popf
outsl
lea
les
xchg
pop
and
arpl
adcb
out
ja
push
xchg
repnz
pop
push
mov
or
push
jl
es
jl
nop
mov
daa
dec
popl
in
sbb
fadds
outsl
int3
inc
icebp
xor
push
mov
sbb
push
mov
rorb
es
dec
xor
sub
jge
adc
dec
xor
mov
mov
enter
mov
add
test
or
inc
and
es
mov
dec
ss
in
pop
int
lret
pop
sub
xor
push
sub
lods
lods
mov
mov
imul
clc
and
cmp
mov
jle
iret
push
test
stc
cmp
daa
js
movsl
cli
mov
subb
movsl
jnp
and
jbe
sub
mov
iret
ljmp
hlt
lods
or
jno
dec
movl
add
mov
jp
testb
addb
and
pushf
lahf
sbbb
add
lret
inc
xor
mov
pop
or
and
xchg
neg
in
inc
mov
jg
push
add
fs
xor
sti
out
push
mov
inc
addb
xor
sub
int3
pop
xor
mov
push
add
and
outsl
sbb
push
xor
lcall
mov
ret
int
xchg
sbb
mov
mov
stos
xor
shl
loopne
jno
or
xor
cwtl
daa
push
scas
push
stos
ret
pop
aas
out
es
sub
test
xchg
add
rcll
test
fisttpl
popa
ret
das
lods
aad
iret
pop
les
jo
mov
and
test
lods
cmpsl
mov
sahf
imul
sub
je
jle
add
cmp
stc
out
sti
or
push
push
mov
aaa
scas
pop
popf
mov
data16
mov
jge
dec
pop
cmp
jb
mov
pop
push
xor
push
and
popf
gs
xor
arpl
xor
mov
jbe
and
stos
hlt
popa
push
cmpsl
arpl
jmp
mov
push
mov
cmp
es
scas
add
add
orl
mov
popa
cmpsl
ret
push
sbb
jnp
movb
xchg
dec
pop
xlat
jbe
ret
or
jnp
fcmovb
loope
mov
jl
shrb
pop
jmp
sub
lea
push
fsts
or
add
xchg
ljmp
mov
fldt
lahf
in
cmpsl
ret
inc
xchg
jp
xor
daa
inc
je
stos
mov
pop
jmp
xor
push
out
or
jge
ds
cmp
pop
lods
mov
dec
stos
push
movsl
dec
stos
mov
add
xor
imul
sbb
xor
adc
mov
int
jo
xchg
pusha
mov
mov
sbb
lods
dec
lahf
cs
movsb
int3
test
push
fs
jbe
daa
aaa
mov
xlat
stos
arpl
ja
stos
cwtl
stos
es
dec
stc
push
mov
mov
pop
les
sbb
and
ret
inc
dec
ss
push
push
es
push
ds
cmp
outsl
xor
mov
flds
jno
lret
push
mov
pop
loopne
std
outsb
loope
jp
jae
cmpsb
push
xor
ret
loopne
fistps
icebp
adc
adc
or
mov
add
int
mov
insb
or
jg
das
enter
xchg
test
in
mov
add
shr
nop
aam
sbb
xor
arpl
mov
or
jl
add
and
daa
mov
sub
loope
push
fidivl
inc
in
cmpsl
pusha
mov
rcrb
mov
add
sub
sarb
lahf
dec
mov
push
cmpsl
cmp
jp
mov
fildll
jecxz
lea
test
in
inc
stos
pop
das
mov
sarl
das
pop
jns
insb
pop
mov
xor
inc
pop
and
and
cmp
or
daa
jb
jno
mov
shrl
add
fcomps
xor
mov
into
aad
and
inc
jle
repz
and
jnp
jnp
or
inc
dec
jp
and
dec
jb
mov
out
hlt
pop
sti
cmp
mov
push
xor
fidivl
mov
out
test
pop
das
xchg
jns
xor
mov
jno
lahf
cmpsl
mov
or
pop
out
pop
mov
mov
test
inc
or
mov
cmp
pop
ljmp
es
mov
pop
adc
pop
neg
movsl
sbb
add
lock
dec
test
scas
add
test
es
fucom
in
ljmp
mov
xor
mov
mov
xchg
sub
mov
mov
xchg
hlt
dec
loopne
sub
dec
rorl
movsb
cld
test
sub
sbb
push
push
jge
mov
pop
popf
xchg
mov
jnp,pn
mov
out
cmp
xchg
movsb
into
mov
jg
jle
out
fstps
mov
dec
imul
shrl
add
xor
mov
fwait
mov
pop
lret
stos
sbb
add
mov
or
xor
pop
inc
mov
add
pop
xchg
mov
cmp
xorb
pminub
sahf
jno
inc
sub
sub
sub
xchg
data16
xchg
push
mov
mov
cmpb
push
mull
pop
ds
dec
sbb
inc
ljmp
cmp
fs
push
lods
pop
or
lea
sahf
cmp
jbe
jo
hlt
imul
repz
push
pop
enter
lcall
xor
lds
lods
dec
movsl
lcall
repz
jg
sbb
mov
outsb
pop
enter
add
mov
add
cld
cmp
xlat
inc
in
cli
mov
dec
fcom
nop
jns
add
pop
push
mov
dec
adc
xchg
mov
mov
lret
push
test
test
popa
test
xchg
or
shrb
mov
rclb
pop
cmp
xchg
xchg
fisubrl
int3
ljmp
cwtl
mov
dec
shrl
inc
mov
jl
inc
xor
dec
repnz
and
jbe
jecxz
clc
push
mov
lcall
add
notrack
in
jne
xchg
fs
xlat
dec
push
call
mov
xchg
cmp
push
fisubl
mov
aam
fucomip
xchg
push
jb
loop
pop
dec
dec
sub
sub
adc
cmp
mov
cmpsb
shrl
xchg
cmpsb
movsb
into
nop
or
sbbl
mov
cmpb
push
cli
and
lahf
mov
popa
add
add
fisubrl
mov
sub
test
clc
dec
add
bound
sub
pop
mov
inc
inc
or
js
cmc
adc
mov
and
pop
loop
xor
or
jmp
iret
xor
pop
iret
int3
andl
xor
lock
aam
ret
jge
jl
sarb
sbb
mov
and
and
popf
aam
int
mov
push
sbb
out
mov
movsb
in
js
mov
hlt
fadds
fcomp
clc
test
push
popf
jo
imull
cwtl
push
into
adc
pop
test
cltd
imul
out
jns
mov
mov
iret
xlat
imul
nop
inc
in
sahf
sub
roll
jns
mov
out
cmp
xor
xor
movsb
xchg
fnsave
dec
mov
lea
push
sahf
int
pop
sbb
xchg
repz
pop
dec
lods
mov
xor
aam
in
out
sti
das
mov
jge
mov
add
loopne
jnp
xlat
xchg
call
outsl
out
cli
push
pop
jmp
add
repnz
adc
cmp
dec
ss
out
fcmove
sbb
lcall
mov
sahf
sbb
mov
push
xor
into
data16
xor
add
jg
mov
dec
cmp
sub
movl
outsb
pushf
sbb
cmp
pop
adc
jge
ss
mov
xor
push
cmp
mov
notb
sbb
xor
repnz
cmpb
dec
jo
mov
sub
push
out
hlt
jecxz
inc
dec
mov
adc
orl
out
enter
int3
xor
jnp
cltd
js
jae
popa
aam
enter
out
cmp
mov
out
les
adc
test
add
xchg
fstl
sahf
out
test
data16
mov
xor
leave
mov
dec
popf
or
dec
adc
jno
cltd
es
call
lods
pop
inc
add
clc
adc
dec
cmp
push
mov
mov
lock
data16
or
leave
insb
stos
jae
dec
jnp
xor
push
shrb
dec
jns
sub
or
mov
mov
in
mov
nop
jmp
and
fiadds
int
ficoms
inc
mov
jno
movsb
mov
and
stc
shlb
and
in
lret
mov
leave
lcall
pop
hlt
insl
push
add
or
es
jae
push
pop
pusha
iret
sub
xor
insl
push
repnz
xchg
shlb
out
in
push
or
je
add
xor
mov
xlat
xchg
je
call
pop
mov
hlt
lret
call
pop
mov
xlat
ds
sbb
loopne
sub
stos
cld
fdiv
ljmp
test
sub
test
call
decl
dec
repnz
cmp
mov
test
loope
sbb
addps
inc
imul
test
xchg
lret
mov
ret
mov
aaa
aam
xor
test
inc
das
mov
sub
sarl
xchg
rcrl
shll
mov
lahf
cmp
or
lea
inc
xchg
lea
mov
test
mov
cmc
inc
mov
cmp
pop
mov
jns
inc
push
popf
dec
rorb
js
sub
aad
add
jb
dec
adc
and
iret
js
fists
out
pop
int3
mov
sbb
cmp
divl
xchg
addr16
jg
mov
jecxz
out
and
adc
inc
pop
and
cmpsb
pop
insl
lcall
ret
outsb
aad
cmp
jg
inc
repz
mov
mov
fldt
mov
pop
and
xchg
push
push
cs
cmpsl
cmp
adc
mov
jno
xchg
es
add
les
loop
outsb
sub
xchg
aam
fimuls
dec
das
test
fstpl
shll
or
mov
es
jns
stos
dec
push
lock
loopne
jl
adcb
sub
mov
cmp
call
call
fwait
sbb
test
adc
mov
lea
das
mov
mov
mov
cmp
push
mov
and
movsb
dec
int3
mull
xorl
pop
xchg
fistl
push
call
pop
pop
lret
sub
mov
jmp
dec
pop
or
adc
rolb
sub
xchg
mov
jb
add
xor
sbb
insl
ds
or
xchg
les
mov
imul
rcr
sub
rcll
and
ss
mov
cmc
das
cmp
inc
sub
jae
push
shl
mov
ret
mov
popa
dec
jg
lret
aas
mov
sub
ds
xchg
dec
inc
test
pop
inc
xchg
cld
push
pop
pusha
push
mov
inc
dec
push
mov
fnstenv
mov
mov
adc
cs
mov
clc
imul
in
int
mov
out
test
gs
push
pop
aad
jg
mov
into
out
jge
scas
clc
js
xor
push
orl
insb
imul
xchg
or
loop
or
dec
or
daa
inc
mov
loop
mov
fisubl
mov
ds
sub
ret
cmp
mov
push
and
dec
daa
ds
and
jge
and
xor
adc
adc
shll
dec
mov
movsb
mov
pop
mov
aas
je
enter
cli
inc
sahf
xor
mov
sbb
ds
push
cwtl
rcll
sbb
adc
push
xchg
push
adc
ds
xchg
xchg
shll
xor
xchg
adc
xor
cmp
sbb
mov
xor
mov
mov
add
jg
aas
loop
fnstsw
ljmp
andl
dec
push
ret
ss
lret
pop
outsb
or
test
mov
test
push
push
mov
popf
jbe
in
xor
mov
mov
sub
xchg
incl
lods
xlat
call
arpl
mov
out
xchg
inc
dec
fwait
inc
call
adc
imul
hlt
repz
ret
cmpsb
jns
and
iret
bound
lret
xor
imul
or
mov
xchg
cmp
push
das
cmp
shll
in
orl
daa
add
mov
cmp
int3
inc
add
sbb
inc
in
add
ss
test
shr
xchg
shl
add
inc
push
shrb
inc
xor
sub
adcb
sbb
aaa
call
xor
pop
scas
stos
ret
stos
int
sbb
in
loope
vcomiss
daa
aam
lds
stos
out
arpl
lods
jmp
int3
mov
les
insl
cltd
subb
add
iret
ret
and
push
imul
addr16
mov
daa
stos
sub
fistps
inc
int
insl
xchg
lds
fmuls
pop
dec
cmp
mov
adc
mov
testl
xchg
inc
or
xor
lea
punpcklbw
xor
push
lret
sar
roll
mov
into
cli
test
mov
cmpl
daa
outsl
jp
cmp
mov
mov
add
outsl
out
mov
push
push
test
xor
enter
dec
cmc
lock
rolb
gs
and
add
lds
in
inc
ljmp
aam
fidivrl
push
loopne
mov
pop
aas
insl
push
mov
cmp
mov
mov
pop
mov
jns
popa
fadd
iret
data16
in
cmp
popf
dec
cld
scas
and
sbbl
call
mov
scas
loop
mov
aad
addr16
mov
mov
mov
pop
add
sub
jg
sub
in
xchg
push
cwtl
mov
adc
sbb
aaa
bound
push
push
scas
jns
push
mov
nop
pop
mov
mov
mov
je
xchg
mov
rol
dec
scas
pop
hlt
cmp
mov
pusha
xor
pushf
into
sahf
cli
inc
pushf
adc
negl
sub
std
cmp
incl
std
jecxz
int
cwtl
cli
cli
push
js
sub
iret
js
or
add
xchg
lea
adc
inc
pop
push
jecxz
cmp
pop
pop
lods
dec
and
mov
push
lcall
cmp
jmp
adc
pop
or
fstpt
shll
dec
test
push
xchg
pop
lods
mov
movl
fs
add
jae
ror
das
and
mov
inc
outsl
test
jbe
mov
stos
lret
out
jo
xor
xchg
jne
loop
xchg
mov
leave
lods
dec
pop
emms
clc
popa
test
dec
jne
inc
pop
mov
add
sahf
mov
std
lahf
dec
lods
sub
sti
imul
imul
push
jle
push
cmpsb
lea
mov
div
int3
sub
jo
fildl
movsb
jl
jecxz
aad
push
bound
pop
mov
mov
pop
popf
popa
ret
add
xchg
cld
lcall
pop
aad
nop
icebp
pop
mov
push
test
pop
setbe
movsl
inc
push
pop
push
and
pinsrw
jnp
adc
popf
dec
int
mov
xor
les
sbb
jne
and
jne
stos
jo
movsl
cmp
loopne
push
ror
xchg
mov
stos
jne
lret
arpl
add
or
add
rcll
dec
xchg
add
loop
ds
out
mov
sub
test
sub
stc
add
pop
mov
jle
insl
adc
jl
shll
icebp
xor
mov
adc
inc
stc
es
add
inc
mov
loop
cltd
jp
in
xor
mov
outsb
push
sub
mov
mov
stos
and
dec
mov
addr16
or
dec
aad
imul
pop
ret
add
jb
imul
inc
pop
jmp
sbb
sub
lret
repz
mov
mov
push
ss
popa
cmpsl
pop
daa
mov
lds
loop
push
mov
inc
leave
int3
add
pop
cli
pop
or
pop
lods
ja
jb
pop
ret
fs
and
sbb
shrl
insb
pop
cli
sbb
mov
jle
mov
push
inc
daa
sub
add
notl
xchg
icebp
loope
sbbb
lock
dec
add
mov
addr16
jo
daa
fwait
push
inc
leave
push
sti
mov
push
cltd
jg
mov
xor
or
mov
xchg
popl
jns
jmp
ss
addr16
adc
xor
fiadds
jle
mov
fstpt
int3
xorb
xchg
mov
imul
mov
sbb
pop
push
pop
add
cli
jg
jnp
aam
nop
test
fadd
or
mov
cmp
jle
test
sbb
mov
aaa
adc
mov
sbb
lods
lods
sar
and
add
movsl
cmp
jmp
and
adc
push
mov
sti
or
out
shll
adc
push
xor
and
adc
sub
movsb
imul
sbb
jnp
cmp
jno
xor
push
xor
test
pop
ljmp
ds
push
mov
dec
imul
shlb
push
xlat
es
shrl
outsl
faddl
xorb
or
aam
xchg
jns
fsubl
call
aad
ret
pusha
fdivs
xlat
xchg
ret
sub
je
dec
lock
fisubrs
imul
cltd
pop
pop
fucom
std
mov
mov
insl
adc
imul
addr16
jmp
fmull
fisubs
jecxz
mov
movsl
cmp
or
xor
insl
or
pop
mov
test
ja
pop
sahf
xor
cmp
xchg
cmp
aad
inc
cmpsl
jp
shlb
mov
es
lret
les
inc
pusha
outsb
inc
js
jg
fisubrl
adc
testb
push
sarb
leave
xchg
jecxz
stc
jecxz
sahf
repnz
gs
aam
arpl
stos
xor
mov
dec
outsb
add
jno
ja
test
bound
pop
push
xchg
jge
pop
loope
push
inc
in
adc
sbb
pusha
mov
arpl
pusha
xchg
push
nop
je
shll
mov
loopne
and
xchg
mov
lret
addb
mov
scas
nop
ret
fmulp
imul
cmpsb
jg
movsb
xchg
jl
mov
fwait
mov
jecxz
jbe
pusha
mov
cld
mov
mov
roll
fdivrl
sub
add
jge
das
loop
andl
and
enter
fiadds
fadds
test
out
rorb
sbb
notl
loop
stos
push
push
jno
out
cwtl
aas
pop
dec
mov
or
pop
push
sbb
xor
movl
jge
loope
xor
int
or
xchg
ljmp
mov
push
shll
adc
jg
dec
test
test
adc
rcl
fidivrl
movsl
cmpsb
xor
jmp
cmp
xor
test
push
sbb
loope
icebp
jp
add
pop
and
fstpt
arpl
push
cmp
sbb
xchg
jne
clc
push
xor
inc
add
movsl
test
xor
shrb
adc
cwtl
cli
mov
cmp
imul
jl
jae,pn
jl
ds
dec
jmp
das
or
ror
mov
ror
call
mov
idiv
push
int3
repnz
push
aaa
dec
das
imul
mov
lock
and
lcall
scas
xchg
add
push
rorl
xchg
shl
mov
aad
lock
cli
and
fcmovnb
loopne,pt
xchg
pop
and
aaa
xchg
aad
ds
pop
sub
mov
lds
jmp
fists
cmp
pcmpgtd
aaa
pop
inc
in
ljmp
fwait
push
clc
lock
adc
pop
mov
lahf
and
es
mov
test
lret
fcmovnbe
push
loopne
iret
jp
in
or
icebp
mov
sbb
outsl
movsl
jp
insl
mov
sbb
or
inc
out
jb
inc
mov
sbb
jg
aad
xor
clc
jl
paddusw
dec
mov
aam
pop
push
cld
stos
xchg
pusha
cwtl
jnp
pop
mov
mov
inc
xchg
pop
inc
inc
in
cmp
sub
unpckhps
sub
imul
rcr
pop
push
pop
imul
sub
icebp
push
mov
in
dec
insb
push
addr16
mov
inc
cmpsb
int
fidivrl
insb
mov
inc
inc
xor
sbb
xchg
or
push
add
and
lcall
push
or
aam
jge
fnstsw
fisttpl
fistpll
mov
and
mov
cltd
jae
movsl
shll
mov
push
jp
push
loope
movl
sahf
cmc
arpl
jle
nop
aaa
outsb
dec
push
mov
cmp
out
ret
int
jns
pop
or
test
ret
and
aam
cwtl
cmpl
leave
inc
ret
dec
push
xchg
sbb
xor
adcl
pop
pop
ljmp
cwtl
fs
dec
inc
imul
sub
jae
into
dec
mov
cmp
push
mov
mov
sti
cmpsl
sub
scas
sub
mov
sahf
add
in
pushf
mov
fbstp
add
xchg
cmp
jl
cmp
dec
or
lcall
cmp
data16
sub
jnp
cmp
fiadds
into
or
add
xchg
ja
les
mov
cmp
inc
cltd
xor
test
mov
aad
enter
push
std
ret
insb
cmpb
mov
lret
lock
xchg
lret
fwait
rcrl
dec
sbb
shlb
push
test
scas
mov
or
add
shr
dec
mov
lret
sbb
stos
mov
shll
jno
fcomi
neg
jb
in
ss
lds
mov
mov
pop
add
pop
test
adc
jp
or
pop
xor
xchg
adc
xchg
ret
outsb
push
dec
mov
mov
and
sbb
dec
popf
das
lret
pop
xchg
mov
pop
push
pop
cmp
arpl
push
leave
mov
mov
mov
push
pusha
ja
ret
or
mov
insl
hlt
cmp
lods
roll
cmpsb
movsl
out
xchg
mov
xor
push
cltd
mov
inc
pop
in
fs
jbe
xchg
nop
dec
lea
ljmp
pusha
pop
std
push
int
ljmp
sub
sub
jl
in
or
popa
mov
push
andl
sahf
inc
leave
pop
push
mov
aaa
mov
xchg
add
cld
mov
iret
lods
rcll
lds
xchg
adcb
jmp
and
xchg
dec
and
and
nop
data16
in
les
dec
fmulp
xlat
pop
lret
mov
in
outsl
cli
sub
mov
lcall
mov
push
push
es
aam
inc
sub
decb
sbb
enter
xor
add
xor
xor
test
cltd
sbb
and
push
mov
leave
cs
mov
lds
push
pop
jle
sbb
inc
pop
sbb
pop
out
inc
mov
rol
iret
stos
hlt
cld
pop
movsb
imul
pop
xchg
cs
lcall
push
cmp
pusha
out
jne
aad
sub
jg
test
pop
adc
or
or
mov
cmpsb
out
inc
mov
sub
xchg
inc
mov
adc
scas
aad
scas
movsb
sbb
bound
stc
in
dec
cmp
mov
dec
mov
repz
cmp
xchg
in
lea
add
pushf
cmp
les
scas
aam
fwait
int
pop
rol
push
ficoms
cmpsb
bound
enter
in
inc
sti
cmp
fwait
xchg
pop
or
fistpl
data16
bound
mov
popa
daa
mov
adc
rorb
aad
js
or
shlb
imul
cmp
test
seto
push
arpl
jp
jmp
push
jp
nop
test
rol
ds
shlb
sub
fstpt
cs
imul
lret
push
repz
xchg
jae
cmp
lods
pushf
inc
mov
mov
sar
daa
dec
lock
push
hlt
ljmp
pop
mov
lret
mov
mov
fcoml
xor
lods
pop
xor
fstps
rcrb
aad
mov
pop
mov
mov
iret
xor
cmp
loopne
arpl
daa
mov
in
sarb
insl
xadd
jmp
xor
sarb
cmp
loopne
movsl
rol
sbbl
mov
lret
dec
in
test
xor
outsb
mov
movb
add
cmp
pop
lret
mov
in
add
push
inc
ret
iret
mov
test
pop
or
int
dec
cmp
pop
fildl
xchg
xor
call
jle
mov
or
dec
jg
outsl
enter
arpl
inc
push
cmp
aad
js
xor
ss
jle
test
test
xlat
test
lods
ja
imul
xchg
movsl
bound
gs
or
cmpsb
xchg
inc
adc
or
pop
pusha
mov
push
imul
cmp
dec
xchg
or
popfw
aas
jge
cwtl
lcall
cwtl
scas
pop
iret
xchg
sub
jl
add
inc
push
xor
push
mov
jbe
sahf
xchg
sbb
fnstcw
fildll
daa
cli
dec
mov
inc
cmc
pop
rorb
call
xor
mov
mov
pop
add
fisubrs
icebp
mov
inc
sarb
adc
mov
outsb
pop
inc
adc
sbb
mov
mov
test
int3
lods
dec
or
arpl
xchg
call
aas
pop
test
lea
cmp
jae
lahf
push
cmp
mov
out
addb
mov
pusha
mov
cmp
jmp
out
and
int3
xor
in
cmp
pop
pop
jo
add
fnstcw
popf
outsl
cmpsl
or
xchg
mov
jmp
mov
jecxz
mov
hlt
inc
add
fisttpll
hlt
fidivrl
and
and
mov
add
in
adc
std
mov
xor
ds
pop
mov
lods
sub
icebp
jge
add
data16
mov
mov
cs
xor
shlb
adc
mov
ret
daa
push
dec
or
bound
xchg
push
lods
or
push
loope
into
inc
sbbb
mov
cvtpi2ps
dec
icebp
jb
adc
cmpsl
adc
mov
pop
repnz
scas
testl
clc
inc
inc
pop
xchg
sbbb
cltd
pop
or
loopne
pop
dec
sti
fwait
mov
loopne
in
inc
addr16
cmpl
outsl
mov
int3
jae
mov
in
ficompl
jecxz
or
rcl
loope
aas
rcrl
mov
outsb
pop
aam
lcall
mov
shrl
cli
fdivl
pop
dec
inc
or
xchg
repz
mov
rcrb
push
and
sahf
sbb
mov
dec
lds
dec
stc
push
jp
sub
mov
stc
dec
lods
sub
into
adcb
imul
cmp
insb
fcoms
repz
subb
or
push
mov
inc
push
dec
mov
fiaddl
sbb
push
jl
dec
inc
movsb
push
inc
int
out
out
pop
and
lcall
fwait
jno
insl
adc
roll
les
xchg
stc
in
enter
int
gs
incl
sbb
cld
lret
sub
sub
cmp
jb
insb
fisttpl
mov
mov
mov
pop
das
cmpsb
scas
es
sbb
daa
mov
dec
leave
jge
outsl
and
dec
jbe
cmp
jp
inc
cmp
fadds
insb
movsb
and
adc
cmc
push
or
pop
outsb
cmpsb
stos
cltd
pop
dec
jmp
add
sti
pusha
inc
pop
clc
add
pop
dec
and
mov
mov
sub
pusha
movsb
psraw
jp
int3
pop
xor
mov
jo
mov
xlat
jge
xchg
ror
cmp
pop
or
scas
gs
mov
adc
arpl
inc
dec
jns,pn
mov
inc
mov
or
rorb
mov
es
dec
rol
mov
xor
iret
add
popf
data16
sub
gs
aad
lds
ret
and
mov
xchg
pop
arpl
int
addr16
call
mov
pop
rorl
sub
cmp
pop
arpl
das
mov
ret
xchg
repnz
push
ss
and
repz
sub
push
jle
roll
jno
addr16
dec
jns
std
rcll
aad
mov
jg
les
push
call
mulb
repnz
inc
dec
ss
mov
ss
lock
stos
mov
cs
and
pop
aaa
cmp
adc
mov
clc
or
stc
imul
lock
lret
mov
xchg
or
in
or
mov
loop
ss
gs
hlt
pop
lods
push
bound
push
and
xor
test
xor
fucom
roll
push
jns
aaa
aas
int
test
fdivrs
testb
push
jbe
in
mov
test
adc
aad
aas
fisttps
dec
scas
sti
stc
mov
popa
pop
xor
jecxz
mov
sbbb
dec
xlat
imul
sub
sti
js
inc
pop
movsl
xor
out
pusha
mov
into
in
mov
icebp
pop
call
inc
mov
scas
xchg
cmp
outsb
sbb
pop
stc
dec
std
std
mov
mov
mul
out
cmp
sub
cmp
sbb
lahf
lock
int
jp
mov
popf
jp
cltd
loopne
lea
cmpsb
jle,pn
adc
roll
scas
fstps
mov
mov
shl
xchg
iret
leave
sbb
mov
or
adc
mov
pop
pop
iret
rcll
aaa
scas
fxch
leave
hlt
aad
cwtl
mov
loopne
flds
test
ds
or
jnp
lods
lock
or
and
pop
xchg
or
pop
jbe
push
int3
aad
mov
arpl
lahf
repnz
pop
jns
xchg
xor
adc
mov
xor
shlb
lods
mov
push
insb
pop
xor
js
mov
inc
xchg
ret
jl
pop
jb
sub
mov
sub
test
sub
mov
das
dec
leave
adc
sti
mov
mov
jo
xchg
push
jae
or
xor
add
ss
lret
cltd
mov
cmp
dec
aad
jmp
lcall
inc
out
mov
imul
pop
enter
push
mov
fdivl
and
out
ss
mov
jecxz
jle,pn
pop
xchg
scas
mov
mov
jecxz
daa
jns
add
dec
fisubl
or
dec
push
add
mov
mov
jnp
mov
add
mov
in
div
or
aam
jmp
mov
ss
mov
orb
push
pop
pop
fisubs
jl
inc
sbb
mov
gs
sub
loope
mov
inc
js
int3
mov
adc
cs
adc
xchg
adc
in
push
push
sub
inc
call
xchg
lahf
sub
mov
mov
sub
or
nop
out
mov
dec
gs
mov
jg
push
movsl
dec
sahf
cmovg
das
icebp
fldt
punpckhwd
mull
es
outsb
ja
jp
cmp
imul
xchg
test
and
in
cmp
jecxz
cmp
push
in
gs
int3
add
mov
inc
loop
data16
loop
dec
lea
mov
adc
push
jecxz
or
push
lret
cmpsb
mov
cmpsb
aas
cmp
ror
cwtl
mov
and
sahf
pop
int
arpl
lock
repnz
and
push
push
push
lret
outsl
sbb
ja
leave
pop
inc
fucomi
mov
int3
dec
pop
push
and
jo
into
ds
es
insl
inc
mov
popa
mov
test
outsl
sahf
add
push
inc
test
out
inc
pop
add
test
out
pop
mov
and
clc
jns
mov
pop
sub
imul
sub
jg
out
sub
push
out
sti
test
lods
and
insb
negl
cmp
push
pop
test
dec
mov
jae
slwpcb
sub
lret
xchg
add
icebp
inc
enter
sbb
jno
sub
ds
pop
test
pop
fidivrl
push
sub
je
fisubl
jnp
xchg
xchg
lahf
clc
dec
mov
cmp
stc
outsb
jl
ljmp
lds
mov
sub
and
call
stos
int
cmp
shr
mov
jmp
adc
lcall
push
lods
fdivrl
jp
adc
rorb
jns
inc
into
dec
add
jne
cltd
pop
xchg
pop
repz
test
ja
test
adc
les
jg
xor
mov
lock
jno
pusha
jne
bound
in
adc
push
inc
pushf
or
pop
scas
pop
jmp
jp
test
or
filds
jne
shl
pop
mov
loop
addr16
js
insb
add
sbb
cmc
insl
cmpsb
icebp
decb
cmpsl
loopne
xor
and
test
adc
add
es
mov
lret
aad
pop
idivb
sub
lret
test
inc
shrb
sub
or
xchg
mov
inc
cmp
stos
fisubs
imull
addb
add
cmp
mov
mov
add
outsb
aam
sub
push
mov
nop
sbb
inc
xor
rcll
xchg
pavgb
notl
sub
int3
jmp
jo
push
cmp
call
int
mov
fsubrp
jle
mov
push
mov
fistps
pop
test
subb
xor
xor
das
shlb
sub
or
das
arpl
cmp
je
jg
pop
in
mov
fprem
mov
fildll
xchg
inc
xor
mov
stos
adc
int
mov
aas
mov
pop
mov
mov
mov
das
mulb
mov
xchg
or
ss
cmp
lahf
mov
fsubrs
pop
sahf
daa
sbb
push
or
lret
push
add
cwtl
fstps
mov
cld
sub
jb
sahf
fdiv
out
xor
mov
movsb
mov
mov
fistl
push
mov
cmpsl
push
inc
sub
lea
sbb
push
mov
rorl
dec
pop
lods
mov
leave
push
or
dec
in
cmp
int3
test
nop
mov
mov
test
jmp
jmp
fstps
cmp
jnp
or
sahf
ret
mov
das
mov
sbb
das
lds
jne
cmp
dec
jecxz
sahf
mov
loopne
jb
push
mov
adc
fdivr
inc
into
pop
xchg
push
in
mov
icebp
cmp
andb
mov
jno
out
mov
pop
cmp
xchg
pop
dec
mov
jp
pushf
cwtl
in
sbb
push
enter
add
fistpl
xchg
lock
xchg
cmp
mov
adc
bnd
fdivrl
pop
push
pop
sahf
mov
int3
daa
mov
sub
sbb
decl
push
mov
fidivrl
cwtl
jge
into
push
add
pop
out
jb
xor
popf
ja
dec
popf
mov
fnstenv
shll
cmpsb
inc
lret
into
jp
jge
popa
pop
xor
icebp
daa
xor
jbe
pop
mov
pusha
popf
imul
ret
insb
sub
jmp
out
push
or
xor
outsb
hlt
pushf
add
cmpsl
scas
mov
loope
cltd
sbb
jle
fstps
jo
fsubrl
shrl
les
fs
std
cwtl
jns
xor
rorb
jno
lds
xchg
pop
mov
jp
pop
dec
pop
popf
cs
aaa
inc
lods
test
cmp
jge
adc
fs
mov
and
sub
icebp
or
gs
fwait
push
push
in
aad
sub
or
fdivs
bound
jp
jae
and
and
movsl
jns
std
mov
test
xor
jmp
aaa
int
add
jmp
lods
out
fdivrl
adc
and
bound
and
xchg
pushf
test
aam
xchg
jecxz
ljmp
xor
sbb
dec
push
inc
mov
inc
stos
dec
sarl
dec
pop
xchg
fldt
mov
xchg
daa
cli
jb
xchg
loopne
je
cmpsb
jno
leave
lds
jbe
push
adc
pop
and
adc
jge
jno
test
push
repz
xchg
and
xchg
xor
pop
sbb
les
cmp
and
jge
in
push
fs
addl
inc
sub
inc
lahf
into
mov
cmp
and
push
ja
sub
popf
rcrb
pushf
jge
std
ret
push
in
ljmp
sub
cmp
jb
or
cwtl
push
sub
mov
jge
inc
mov
mov
mov
sub
pop
and
adc
push
and
add
addr16
mov
cmp
ret
xchg
jg
aas
out
xchg
fiadds
lods
std
add
mov
push
rclb
xor
les
sub
fiaddl
xchg
shll
or
add
gs
pop
filds
jmp
fidivs
dec
pop
pusha
test
in
stos
data16
and
add
test
scas
dec
or
pop
shlb
xor
arpl
mov
dec
or
test
mov
mov
and
inc
push
dec
out
xchg
sti
jg
fs
cmp
inc
popa
xchg
mov
sbb
mov
hlt
les
hlt
int
aas
jl
inc
imul
ret
add
ror
push
arpl
arpl
and
sub
shl
test
or
cltd
jne
movsl
lock
mov
imull
notb
sub
test
and
gs
mov
popa
xor
stos
mov
stos
push
cwtl
pop
mov
into
sub
gs
xchg
cvtpi2ps
lds
mov
push
popf
push
adcb
shr
loop
cmpsl
ficoml
adc
mov
enter
add
push
push
inc
sub
xchg
sbb
leave
pop
and
cmp
insb
sub
add
inc
inc
cwtl
aad
and
dec
mov
cmp
and
enter
rorb
lret
mov
and
data16
popf
add
inc
stos
lret
mov
iret
rol
insl
arpl
popa
pop
mov
imul
fisubrs
mov
fidivl
out
dec
mov
xor
and
ret
jbe
daa
orl
fs
jo
pop
pop
cmp
fdivrs
pop
lds
mov
loop
dec
or
pushf
rorb
test
pop
cmp
sub
arpl
mov
jnp
fs
iret
inc
in
aad
push
andb
dec
in
bound
fdivrl
aaa
jb
mov
out
divl
mov
push
cs
sbb
push
lock
sahf
mov
leave
sub
repnz
mov
and
mov
jo
es
mov
jb
adc
clc
addr16
sbbb
dec
mov
xor
pavgb
xor
shlb
int3
scas
sbb
hlt
add
insb
ss
in
sbbl
pop
push
testl
xor
adcl
add
iret
subb
scas
outsb
adc
push
test
push
popf
mov
inc
leave
inc
sbb
sbb
cmp
and
cmp
sub
inc
push
mov
in
push
mov
aad
xor
and
pop
arpl
inc
cmpsb
xchg
xchg
stos
pushf
lea
cwtl
push
lret
andb
rorl
mov
mov
sbb
push
mov
loope
aad
add
das
pusha
outsl
out
add
repnz
rorb
in
mov
or
sti
pop
adc
mov
rcll
repz
sbb
add
xor
rorb
push
ret
push
test
stc
mov
fsub
push
add
mov
or
mov
scas
mov
jae
mull
and
and
cs
or
mov
or
lahf
in
pop
cmc
pusha
push
imulb
or
jmp
cltd
orps
shl
push
inc
or
xor
jb
addl
push
xchg
jle
mov
icebp
ljmp
add
imul
mov
push
test
sahf
adc
or
popf
scas
lea
cmc
clc
scas
xor
imul
xchg
mov
inc
enter
out
push
lods
jl
not
mov
mov
inc
aaa
pop
adcb
fmuls
sbb
sbbb
arpl
sbb
cli
lods
pop
fxch
shlb
insb
out
xor
fwait
xchg
mov
in
mov
nop
mov
repnz
shl
adc
mov
cmp
mov
inc
pop
out
or
cmp
and
inc
mov
add
push
jbe
lcall
xchg
fwait
mov
cmp
pushf
push
adc
pop
inc
mov
xor
jae
jp
repz
aad
lret
mov
xchg
lahf
pop
add
push
nop
incl
sbb
dec
fsubs
mov
lds
out
cmpsb
and
fldl
dec
or
push
xor
mov
clc
shl
adc
pop
push
jle
pop
mov
sbb
mov
adcb
fsubl
daa
lock
mov
aad
mov
test
jle
mov
int3
mov
leave
test
out
test
xchg
dec
mov
dec
mov
xchg
xlat
push
subb
pop
sahf
int3
xchg
insl
test
sub
jg
xchg
int3
enter
aam
add
into
scas
xchg
inc
mov
push
mov
mov
fiadds
sahf
mov
jmp
inc
ja
mov
cmpl
shlb
mov
push
imul
dec
lea
out
dec
adc
fisttpl
inc
test
dec
imul
into
stos
sti
aam
or
dec
aaa
jb
dec
rorl
test
arpl
add
push
clc
adcl
push
fwait
xor
mov
sub
and
push
mov
ds
mov
mov
repz
into
clc
push
push
cli
mov
shlb
or
repnz
push
push
mov
ret
inc
imul
fcmovnu
cmp
aas
or
ret
jecxz
push
fstps
mov
addb
insb
dec
shr
cmp
fcmove
leave
sbb
mov
scas
aam
mov
push
and
inc
movsb
sub
pop
and
add
cwtl
sbb
xchg
mov
aas
popa
push
push
mov
mov
not
das
dec
adc
fwait
xchg
int
shlb
xchg
icebp
xor
ds
mov
inc
push
out
in
mov
jle
pop
out
arpl
lods
outsb
dec
xchg
ds
xchg
loopne
or
mov
sbb
ja
jp
mov
and
gs
aam
fstl
test
jp
push
dec
sub
repz
fildll
je
pusha
loopne
push
mov
jno
push
xor
dec
pop
cmp
jbe
sbb
dec
ret
cmp
and
adc
pop
cmp
push
mov
sbb
xchg
cltd
add
pop
dec
test
es
fsubrl
xchg
dec
push
in
dec
or
rcll
and
test
push
cs
movsb
xchg
or
int
aad
pop
push
jae
pop
xor
ja
ss
mov
xor
pop
sub
sbb
movsb
sub
loop
mov
pop
jnp
pop
ss
mov
call
jbe
jp
push
lock
aam
mov
jno
js
jne
fiaddl
in
and
daa
aas
aaa
leave
mov
mov
in
xor
dec
ffree
test
mov
adcl
xor
das
aam
xor
lahf
es
xor
out
xor
sbb
sarb
cmp
divl
loope
sbb
ljmp
sets
adc
test
scas
mov
imul
mov
pop
call
insb
mov
lea
mov
push
sub
sbb
cmp
dec
test
jns
pop
repz
mov
mov
push
or
fisubrs
out
mov
pop
jl
fwait
stos
push
daa
or
hlt
rep
or
cli
and
add
jge
repnz
sbb
pop
mov
rcl
pop
lret
aas
sbb
decb
test
and
les
out
cltd
es
push
stos
out
out
xlat
insb
in
mov
leave
add
imul
cmpsb
jo
je
add
push
mov
add
enter
cmp
jnp
and
xor
ficomps
stc
and
inc
and
call
push
mov
in
pushf
lea
push
mov
mov
mov
clc
inc
shll
out
jge
cltd
mov
aas
xchg
jecxz
pop
sbb
inc
fs
jge
insl
add
sti
in
loope
xchg
fwait
push
pop
in
fs
scas
scas
inc
or
sbb
mov
outsl
dec
repnz
subb
ljmp
loop
popf
sbb
in
or
repnz
fldenv
or
dec
fisubs
mov
jno
dec
lea
jno
lret
into
lret
mov
xlat
xor
test
and
fdivrs
cmp
push
add
jecxz
clc
shl
mov
jnp
cmpl
inc
mov
xchg
repz
jecxz
cmp
lret
jne
mov
daa
fdivl
xchg
xor
cmc
std
adc
fisttpll
cmp
add
push
mov
mov
or
jecxz
movsl
out
mov
test
punpckhdq
cmp
nop
jg
cmp
in
shll
xorl
mov
icebp
lcall
push
pop
pop
fadd
aad
int
xchg
mov
ja
imul
fnstenv
jl
lahf
xor
and
cmp
jo
sbb
hlt
xchg
icebp
mov
xlat
adc
cwtl
dec
mov
mov
lcall
imul
jg
mov
xor
inc
fistps
xchg
mov
mov
sbb
mov
add
dec
sbb
xchg
test
jo
out
in
leave
lcall
gs
sub
sbb
sbb
cmpsb
orl
push
add
push
fistps
idivl
hlt
xorb
loopne
call
pop
aam
aaa
loop
mov
and
adc
dec
pop
jg
sbb
scas
clc
popf
out
mov
mov
or
cmp
lods
inc
out
xchg
xchg
dec
push
dec
or
mov
mov
xor
dec
lods
cs
sbb
jg
or
rorl
mov
mov
std
xchg
push
inc
fdivrl
fidivrl
js
cmp
or
pusha
loop
icebp
movsb
out
jecxz
mov
fcoml
adcb
je
shlb
sub
jno
xchg
xchg
cmp
dec
adc
jnp
xlat
cmp
clc
mov
and
pop
push
lea
mov
repz
push
and
cs
test
movsb
jl
sbb
cmp
mov
xchg
jmp
imul
fs
leave
mov
and
mov
inc
pusha
push
in
ret
push
andb
cmp
scas
fistpll
pop
pop
in
leave
int
lods
scas
and
jg
cmp
test
mov
pusha
or
pop
fwait
cmp
lahf
iret
fsubrl
fisubrs
add
lret
sub
mov
movsb
popf
popf
test
mov
in
in
js
fcompl
mov
mov
pop
repz
test
dec
jmp
psrad
in
xorb
fwait
dec
loopne
subb
icebp
mov
stos
xor
loopne
test
or
pop
and
adc
xor
daa
fsubrs
cmp
divb
in
cld
idivl
mov
inc
outsb
jle
adc
cmp
call
clc
test
rclb
inc
andb
push
adc
shlb
mov
sbb
pop
pop
inc
outsb
outsb
xchg
mov
lock
scas
xchg
or
push
mov
jp
mov
push
mov
idivb
adc
xor
or
or
lret
test
push
inc
sub
je
sbb
or
dec
andl
and
pop
sub
cmp
arpl
icebp
mov
mulb
les
xorl
sub
sub
movsl
imul
addr16
in
xor
add
mov
cmovns
lcall
jno
push
sarb
jg
lods
pop
inc
xchg
dec
ss
mov
lock
xchg
daa
dec
mov
fwait
es
cld
and
scas
ljmp
mov
mov
cmp
xchg
stc
lret
xchg
cwtl
int3
adc
cmpsb
jo
loopne
inc
sbb
mov
or
lods
jle
outsb
xchg
sahf
addr16
imul
mov
dec
addr16
add
test
mov
xlat
rorb
mov
call
iret
cs
test
xchg
nop
clc
push
push
mov
cwtl
ss
mov
testl
movsl
xor
lock
adc
jne
ljmp
add
pusha
aas
lea
popa
push
inc
ret
popf
cmp
push
les
scas
xor
cmpsl
pop
fst
loopne
jmp
sub
scas
pushf
sbb
mov
push
pop
mov
jbe
sbb
cmc
pusha
cmp
in
adc
adc
pop
jmp
or
dec
movsl
push
dec
jne
pop
aam
lods
loope
outsl
aaa
fnsave
icebp
lods
sub
add
lea
ss
add
jno,pn
out
insb
push
lods
repz
cmpsb
outsb
push
xchg
insb
ljmp
inc
fwait
xchg
mov
mov
movsb
sub
xchg
add
push
jle
not
xchg
and
mov
xor
inc
outsl
mov
pop
sbb
dec
ja
pop
mov
enter
dec
sti
movl
mov
das
pusha
out
sahf
jns
dec
imul
out
xchg
out
fsts
leave
adc
jbe
xor
mov
sub
test
adc
mov
jbe
or
push
xchg
jecxz
xchg
xchg
xor
add
bound
lcall
aaa
mov
push
mov
jbe
jbe
or
cs
ljmp
mov
sub
add
fidivl
fiadds
insl
mov
add
int
pop
loop
sbb
test
push
fldt
nop
inc
rclb
movb
pop
inc
push
jb
clc
int
inc
je
mov
inc
push
fwait
icebp
jecxz
jo
push
ret
sbb
pop
mov
insb
push
pop
nop
pop
test
sbb
cmp
adc
or
xorl
pop
ficoms
imul
cmp
jno
mov
pop
cmp
sbb
push
orl
inc
add
mov
add
std
mov
je
or
gs
or
fbld
cltd
push
inc
mov
jne
or
jle
ret
mov
sub
pushf
xor
daa
insl
dec
mov
addr16
xchg
daa
mov
fcom
ret
or
les
out
dec
lret
xlat
neg
cmpsb
and
xchg
rorb
inc
inc
lret
inc
movsb
mov
xor
jbe
lods
test
inc
mov
xor
dec
lods
hlt
push
cltd
cs
jmp
push
dec
dec
jb
jmp
scas
es
and
or
or
into
insl
pop
push
push
add
or
xchg
rcll
sbb
jmp
nop
fsubrl
icebp
pop
inc
jno
mov
pop
add
or
into
inc
inc
mov
sbb
xor
adc
sti
and
ljmp
dec
pop
jmp
inc
pop
push
cltd
lahf
cmpsb
pop
enter
sub
lods
test
mov
data16
popa
test
add
sub
jecxz
sub
ret
dec
push
mov
addr16
xor
dec
push
dec
sbb
pop
imul
sub
pop
mov
in
add
add
mov
aaa
movsb
sti
mov
mov
clc
mulb
xorb
scas
flds
fwait
sub
aad
pop
aaa
shlb
inc
fstpl
jae
sti
enter
daa
lahf
xchg
arpl
mov
jae
mov
mov
dec
mov
mov
xor
jno
call
pop
outsb
adc
mov
mov
mov
pushf
pop
mov
cli
mov
gs
lcall
mov
outsb
andb
repnz
out
dec
jb
dec
mov
xor
dec
lret
jo
call
lahf
test
jno
inc
les
mov
ja
and
jp
rol
fsts
dec
ds
fcomip
pop
std
ss
sbb
es
setno
mov
inc
xchg
imul
xchg
ror
jl
add
loop
clc
sti
jecxz
add
add
idivb
lods
stc
je
push
xchg
clc
movsb
hlt
jle
adc
fcompl
ret
nop
lahf
mov
jmp
mov
sub
das
push
test
mov
xor
mov
cmp
out
sbb
into
add
xchg
inc
out
js
in
xor
jno
adc
push
jo
push
js
rcrb
and
xchg
aas
push
je
jae
arpl
rclb
pop
adc
lea
mov
ficomps
sbb
jmp
movsb
inc
and
in
xor
pop
pop
pop
es
loope
pop
hlt
sub
jmp
adc
cmpsb
fwait
loope
pop
bnd
sbb
jp
fisubrs
inc
lcall
fcomip
test
adc
mov
fmuls
aad
jbe
adcl
aaa
jmp
int3
outsb
out
xor
xor
test
loop
pusha
lock
je
sbb
xor
jne
imul
rcrl
adc
pusha
or
fs
leave
loop
jecxz
sbb
in
idivl
push
daa
mov
inc
addl
add
lock
fistl
and
jb
inc
movsb
jecxz
mov
sbb
and
xchg
imul
imul
data16
cmp
pushfw
sbb
out
mov
dec
push
jmp
adc
cwtl
out
or
popf
jecxz
xor
mov
add
decl
mov
cmp
xor
test
mov
mov
add
outsb
inc
and
inc
insb
ficomps
cmp
enter
or
cwtl
xor
push
outsb
ljmp
push
xor
fldenv
ret
stos
jb
rcl
add
xchg
xorb
jle
lock
lods
pop
stos
adc
xchg
sbbl
iret
sub
xlat
sbb
call
adc
dec
sbb
fidivl
test
cld
int3
pop
add
dec
push
iret
insb
out
pop
insb
jmp
and
sbb
fidivl
lea
aaa
adc
push
jbe
inc
jecxz
mov
mov
mov
mov
mov
fbstp
in
negb
loop
outsl
sbb
popl
stos
pop
idivb
enter
adc
dec
pushf
cmp
sbbl
mulb
pushf
xchg
fdivrs
xchg
lods
cmp
add
fidivrs
or
test
ror
rorl
pop
fistps
pop
in
xor
in
jge
dec
int3
sbb
loop
fwait
push
or
inc
add
add
aaa
dec
push
in
push
dec
xchg
outsl
aam
add
in
sub
icebp
fwait
aad
sub
fsubrl
push
sub
pop
sbb
xchg
add
insl
xchg
or
push
pusha
roll
in
dec
xor
cmpsb
cmpsb
outsb
add
mov
or
lods
not
mov
mov
jmp
pop
fcoms
xor
jno
fs
scas
mov
sub
or
pop
mov
testl
dec
dec
xchg
sbb
cmp
push
pop
nop
push
rcll
add
in
int
adc
dec
int
jno
cbtw
pusha
cmp
jb
adc
int
gs
test
mov
aas
mov
lods
dec
cmp
push
aas
pop
gs
in
out
enter
add
iret
push
pop
repnz
inc
sub
dec
popf
lods
call
fstpl
ss
dec
stos
std
mov
push
repz
push
jg
add
sar
subb
mov
js
inc
pop
and
imul
mov
push
mov
nop
inc
cmp
daa
or
lea
imul
cmpsb
cmp
stc
in
pushf
aam
inc
inc
add
loop
fwait
cmp
add
push
idivl
sub
mov
push
cmc
sbb
cmpsl
or
sbb
cld
inc
cmp
xor
fwait
test
adc
imul
push
mov
and
filds
mov
loope
xor
cs
inc
push
push
cs
out
or
dec
andb
jae
xor
adc
xchg
mov
inc
inc
push
add
sbb
push
popa
sbb
dec
idivb
pop
shll
or
outsl
shll
xchg
mov
addr16
cmpsb
xchg
loop
movsb
std
jne
out
jns
push
mov
loop
stos
push
je
adc
test
pusha
cmp
cmc
push
sbb
insl
adc
addb
mov
adcl
push
aam
and
add
test
jge
add
mov
and
jae
pop
or
mov
xchg
push
sub
je
sub
xchg
es
push
mov
jp
stc
aas
jmp
into
mov
jo
push
loope
xor
adc
bound
in
fiaddl
addr16
jnp
mov
shrb
mov
jb
xor
pop
xchg
iret
xor
cmp
lret
or
sbb
ret
les
in
jg
mov
mov
out
jp
mov
gs
xor
call
mov
dec
loope
imul
test
pop
lahf
hlt
jb
int3
add
mov
stc
jp
jo
xchg
jge
les
xchg
jbe
sbb
ss
sbb
push
maskmovq
divl
push
jnp
cmp
or
add
cmpsb
push
lret
push
test
popf
xorb
rorl
and
sub
lock
sub
cmp
or
loop
mov
xchg
add
sub
inc
xor
cmp
add
xchg
pop
xchg
lret
loop
pushf
dec
scas
mov
mov
mov
or
xchg
in
sbb
or
sub
jne
pusha
or
rcrb
cs
stos
sbb
icebp
jne
lret
dec
sbb
aam
dec
push
xlat
and
aam
inc
sbb
xchg
pop
sub
cli
xor
jecxz
adc
xor
jnp
call
mov
cmp
lret
rclb
icebp
add
push
push
in
push
repnz
xchg
and
mov
fildll
addr16
in
cmp
mov
jecxz
cmpsl
mov
xchg
xchg
cmp
enter
sub
call
dec
jp
and
jg
lock
lea
data16
mov
imul
fsubl
nop
mov
sub
jl
xor
add
data16
xchg
push
fwait
adcb
in
sub
mov
out
sbb
stos
add
dec
cmp
mov
xchg
cmp
je
fstps
inc
test
into
mov
dec
sub
pop
icebp
je
cmp
ja
pop
arpl
imul
jle
mov
mov
cmp
dec
je
push
nop
mov
nop
mov
cli
ret
jb
sti
in
jge
and
cmpsb
or
xlat
adc
pop
sbb
in
jno
push
jae
shrl
sti
jb
shl
mov
push
add
jge
sub
mov
push
jle
add
call
ljmp
rorl
outsl
push
cmp
outsb
repnz
insb
sbbb
arpl
incl
fcomp
lds
xchg
push
cmpsl
push
imul
inc
insl
mov
hlt
scas
cmpsb
lock
pop
mov
fistpl
push
push
das
adc
mov
stos
cmpsl
jb
xor
and
fildl
fcompl
imull
or
out
ror
fbstp
sub
les
xor
xchg
xor
xor
daa
adc
inc
mov
and
push
mov
xchg
mov
ja
cmpsl
push
out
insl
xchg
inc
imul
cmpsb
rorb
or
or
pop
cmp
sbb
inc
or
in
outsl
out
pop
mov
cmp
in
cwtl
test
push
insb
dec
mov
and
insl
pop
js
xor
lret
add
push
add
movsb
xor
adc
sbb
test
lahf
mov
outsb
add
jbe
movsb
movl
push
movsb
or
leave
out
or
or
sbb
mov
test
sub
test
mov
popa
xor
ss
lret
cwtl
lcall
movsb
sbb
aaa
in
sub
scas
test
in
scas
shrb
shrl
mov
test
les
dec
push
mov
or
call
movsb
jns
ds
in
lock
xchg
jae
movsb
dec
cmp
notl
mov
cmp
sub
push
mov
scas
hlt
stos
mov
mov
arpl
popa
int
xchg
jne
cli
push
inc
pusha
pop
in
sbb
call
pop
jbe,pt
in
push
into
lahf
sbb
rorb
mov
add
or
scas
popa
dec
xchg
mov
xchg
insl
sbbl
mov
lcall
test
xchg
mov
xor
lods
push
or
aas
mov
cmc
xor
ss
sbb
mov
cmpsb
lods
aas
pop
sbb
push
inc
mov
aaa
cmpsl
movsb
daa
rcll
mov
loop
dec
inc
mov
cmp
and
test
jecxz
aam
enter
add
mov
cmp
lcall
dec
leave
jo
std
fidivs
sbb
xor
inc
fcompl
and
sti
inc
fwait
into
sahf
xchg
add
js
insb
lods
loopne
inc
subl
sbb
stc
cltd
cmp
subb
lea
or
or
in
imul
ds
arpl
jbe
xor
jle
lahf
das
test
clc
mov
out
shll
cwtl
adc
movsl
mov
xchg
pop
jle
adc
shrl
hlt
add
outsl
clc
push
push
sbb
fwait
add
sahf
stos
das
decl
lret
into
loope
stos
inc
repz
shr
inc
sahf
and
shrb
xchg
pop
movsb
out
jge
popa
or
ds
inc
xchg
cmp
mov
push
dec
stos
push
xchg
cmpsb
pop
insb
lods
aaa
lea
imul
cli
dec
cmc
loopne
xchg
je
jg
dec
ljmp
dec
jno
aam
stc
loop
fsub
mov
xor
push
mov
mov
or
cmp
mov
out
jae
fldenv
push
sub
push
data16
leave
shll
lock
rorb
repz
gs
fucomip
cmpl
add
bound
fcoms
push
sbb
mov
pushf
sahf
push
popf
out
int3
pop
dec
cmp
mov
jmp
push
pop
call
popf
xor
jg
adc
ret
jp
and
das
sub
and
push
sub
adc
push
in
popl
in
loop
dec
jg
ror
ret
sbb
push
or
or
push
mov
push
xor
mov
mov
cs
xchg
dec
cmp
push
mov
xorl
scas
icebp
js
jno
inc
in
xchg
imul
mov
aas
jno
jo
push
inc
xorps
push
mov
nop
daa
sub
std
and
rol
lock
ds
lods
repnz
imul
aad
adc
sbb
jmp
fdivr
notb
sub
cmp
mov
movsb
fdivrl
dec
loop
jne
mov
ret
lea
ss
cmpsl
out
outsl
xchg
xor
push
enter
fcompl
push
inc
cmp
jnp
loope
clc
push
rclb
xchg
aad
pop
ret
and
pusha
shll
ss
fs
xchg
js
test
jb
inc
loope
cmp
jo
mov
pop
addb
in
mov
gs
mov
outsl
je
dec
jnp
push
xchg
rcl
jnp,pn
sti
xchg
insl
pop
mov
dec
add
push
sbb
inc
aas
push
mov
push
xor
mov
andl
lea
jecxz
lcall
jp
jp
loop
mov
dec
xchg
mov
lock
outsl
and
dec
mov
xchg
rcrl
mov
sbb
add
adc
pop
and
lock
aam
push
add
push
push
and
sti
test
stos
loop
aam
add
lret
mov
xor
out
inc
mov
ljmp
push
rcl
dec
mov
inc
stos
push
insb
in
mov
sub
adc
daa
inc
lret
and
lods
sbb
dec
shrl
js
incl
adc
inc
sahf
fadd
dec
imul
xor
jbe
jnp
sti
xchg
loopne
repnz
dec
aad
cmp
mov
nop
lcall
sbbl
inc
mov
test
fs
or
pusha
mov
mov
insb
loopne
dec
ret
and
in
dec
cmp
lea
xor
es
jno
pop
sbb
test
movaps
pop
mov
sub
or
xchg
ret
out
push
dec
xor
scas
int3
cmp
mov
mov
es
inc
mov
mov
mov
outsl
adc
mov
sub
pop
cmp
push
test
ljmp
xchg
je
addr16
cmc
mov
fs
xchg
sub
dec
sbb
sub
in
rcrl
out
push
fidivs
xchg
outsl
and
xlat
lahf
bound
insb
inc
pop
scas
jo
or
loope
rcrb
mov
jp
repnz
push
mov
mov
pop
mov
repnz
jp
jnp
add
add
adc
cmp
jb
dec
call
aam
stc
repnz
cld
addr16
pop
rcr
and
sbb
cwtl
repnz
lea
pop
pop
pusha
jmp
dec
inc
in
dec
loopne
mov
cmp
popa
sbb
hlt
sub
jnp
out
popf
mov
out
xor
arpl
jne
inc
xchg
push
jle
fisttps
jo
add
cmp
test
gs
cmpsl
add
fcoml
or
popf
maskmovq
negl
sub
and
cmpsl
cmp
sub
jne
sub
push
enter
ret
and
or
dec
sub
loop
hlt
ret
test
dec
jecxz
pushf
ret
and
adc
dec
ss
les
aam
xchg
jmp
out
and
pushf
or
dec
jmp
sbb
in
bound
aam
inc
repz
out
repnz
movsb
sub
jl
imul
mov
push
jae
mov
mov
or
cltd
sub
add
fstp
jge
pop
stc
cwtl
hlt
sbb
cmp
cmpsl
in
mov
repnz
jmp
hlt
sahf
hlt
xlat
jbe
test
test
jge
sbbb
sbb
pop
jnp
jne
fists
mov
aam
xor
lret
mov
aas
cmp
xchg
bnd
jecxz
jnp
and
and
xor
fst
or
add
arpl
leave
push
inc
pop
cmp
add
or
clc
xchg
mov
ja
jge
scas
fadd
sbb
sub
pop
mov
push
push
and
pop
imul
pop
mov
stos
sbb
imul
imul
addr16
pop
data16
shlb
jns
aad
cmpsb
xchg
aam
mov
cmp
cld
mov
adc
outsl
std
dec
push
push
shlb
ret
sub
sbb
add
or
xchg
push
fistpll
xlat
jmp
mov
scas
adc
or
in
xor
jmp
mov
mov
adc
test
mov
mov
add
inc
push
xchg
pusha
and
sub
pop
jbe
imul
icebp
push
mov
insl
movsb
out
sbb
cmc
orb
or
sub
iret
rclb
iret
cmc
and
stos
add
push
or
sub
and
push
pop
jae
aam
xchg
xor
mov
lods
sysenter
xor
daa
aaa
mov
mov
hlt
rol
int
push
fnsave
sub
pop
xor
aam
aam
push
xor
push
push
cli
shll
xchg
mov
rcrl
lret
popa
fcompl
mov
xchg
arpl
or
pop
ficomps
in
hlt
inc
scas
aas
ret
cmc
in
sbb
cmp
imul
int
pop
adc
adc
add
inc
pop
in
add
sahf
lret
sbb
sub
and
pop
mov
cmp
sti
repz
lahf
jbe
xchg
insb
sub
push
pop
xchg
adc
sub
movsl
stc
fistl
sbb
aad
jl
xlat
jmp
cmp
lods
xchg
add
ret
inc
repnz
adcl
sub
xor
pop
add
xchg
inc
sub
push
mov
mov
arpl
xchg
sbbl
addr16
cld
insb
into
int
jns
ret
jae
out
addr16
mov
scas
imul
mov
imul
testl
xchg
bound
imul
je
xchg
pushw
in
pushf
push
mov
test
inc
inc
xor
sbb
adc
and
fcoml
popa
ficoms
jp
push
lds
enter
xor
les
dec
and
sub
fsts
add
sbb
loope
fwait
imul
adc
sbb
push
push
mov
sbb
jmp
mov
sbb
dec
cmpsb
cmpsl
arpl
xor
adc
inc
jmp
repnz
std
sub
insb
cmpsl
orl
push
fisttps
cwtl
repz
shrb
cmc
jno
cmp
pop
cmpsb
sub
cwtl
add
mov
out
insl
fcom
xchg
xchg
bound
inc
mov
fxam
sub
push
icebp
int
or
sbb
icebp
popa
or
inc
pop
pushf
dec
pop
sub
dec
scas
mov
and
xor
mov
sub
enter
daa
in
sub
or
adc
lea
adc
adc
add
sub
rolb
roll
jo
dec
hlt
adc
xor
shr
lret
xor
cltd
arpl
sbb
aam
lods
mov
sbb
jns
xor
iret
push
aaa
pop
arpl
add
daa
stc
jae
adc
add
or
movsl
adc
and
aaa
push
jecxz
in
aas
push
mov
pusha
insl
inc
dec
push
pop
sarl
addr16
mov
cmp
leave
lods
xchg
test
cli
jno
insl
push
fistps
stc
dec
fwait
sub
push
fildl
test
ja
test
add
cli
mov
lods
or
les
inc
mulb
fnsave
mov
les
int3
xchg
inc
repz
pop
daa
mov
outsb
fs
xchg
jno
jmp
pop
cld
jge
aas
add
push
dec
dec
es
cld
sbb
shlb
xor
xchg
lahf
popa
in
inc
or
test
out
xor
aam
movsb
mov
loopne
inc
outsl
mov
dec
inc
or
cmpsl
xor
cwtl
mov
ljmp
outsb
jns
jns
mov
popl
in
jnp
jl
arpl
pop
stos
pushf
or
and
dec
push
stc
ret
push
mov
imull
jp
das
outsb
fwait
imul
insb
call
sti
jge
mov
cmp
push
cli
sbb
lcall
bound
pop
jbe
push
or
push
xchg
mov
push
or
xor
inc
daa
int
scas
lock
in
cmp
and
iret
imul
in
call
add
shrl
ss
cmp
jle
inc
cmp
cli
xor
xchg
jle
cs
dec
pushf
xlat
sub
fldl
popf
sbb
jl
push
adc
aam
sahf
sub
popa
aas
lret
pop
rol
aam
dec
mov
lahf
mov
or
sub
pop
push
mov
or
imul
test
inc
mov
test
jecxz
int
faddp
rclb
stos
mov
mov
out
fidivrl
sub
testl
sbb
or
pop
pop
pop
jne
sub
les
jg
shlb
pop
jecxz
mov
dec
addr16
ljmp
call
std
xchg
mov
popf
mov
mov
ds
sub
outsb
loopne
xchg
xlat
shrl
xorb
ja
je
mov
std
gs
inc
test
mov
es
inc
cwtl
sub
push
sbb
call
dec
mov
imul
sahf
test
dec
and
ret
push
sub
adc
push
dec
test
aad
xor
jge
arpl
fs
mov
sti
out
add
mov
or
pop
xor
xchg
mov
cld
es
xchg
sbb
mov
icebp
adc
pusha
mov
xchg
clc
addl
jmp
jp
ret
mov
imul
jmp
xchg
and
test
xchg
sbb
ja
pop
out
push
lock
inc
or
cmpsb
cmp
idivl
xor
mov
dec
daa
int3
std
ss
xchg
mov
sbb
dec
xchg
inc
adc
mov
sub
shl
cli
add
fimull
movsb
mov
fwait
mov
scas
add
cmp
mov
into
in
xlat
cmc
stos
lods
cltd
pop
push
shll
das
cwtd
mov
pop
jb
add
mulb
sub
fmulp
mov
xchg
mov
mov
inc
cltd
push
daa
xchg
sbb
je
adc
test
add
into
bnd
or
dec
movsb
pop
sbb
cmc
imul
mov
out
mov
mov
sub
inc
out
xor
mov
pushf
pop
push
in
popf
inc
and
add
lods
sub
or
lods
mov
insb
dec
loop
lea
fisubl
bound
xor
push
pop
nop
lret
mov
mov
movsl
cltd
les
jb
mov
mov
subb
xor
cmp
jmp
or
xchg
orb
stc
out
add
inc
pop
or
cmp
push
loop
add
ds
inc
sub
jmp
pop
and
insl
fwait
xchg
sbb
int3
out
mov
fnsave
mov
cmpsl
test
sub
rolb
pop
js
add
mov
in
stos
and
bound
into
cwtl
clc
push
pop
jmp
pop
mov
lock
lock
test
jns
lock
xchg
lock
clc
inc
adc
flds
push
inc
adc
jns
dec
test
in
adc
cli
jae
out
pusha
pop
or
out
mov
aad
mov
lret
adc
cmp
mov
aad
push
cli
xchg
xor
sub
shlb
out
pop
mov
pop
inc
lods
push
out
outsb
out
ss
ja
adc
xchg
scas
inc
div
mov
dec
or
adc
or
sbb
mov
es
outsl
arpl
xchg
imul
stos
mov
lahf
jecxz
xorl
jmp
sbb
imul
pusha
lea
cmp
in
rcll
mov
sub
add
jle
mov
pop
hlt
leave
call
stos
push
out
ret
cmp
rorl
mov
push
mov
ds
jl
lods
inc
inc
adc
sub
neg
adc
out
dec
int3
test
dec
mov
and
gs
or
cli
sbb
push
fimull
inc
mov
sbb
jmp
sbb
lcall
push
dec
faddl
stos
mov
add
pop
add
outsb
in
fistps
sbb
imul
ljmp
mov
cmp
pushf
js
jbe
cltd
push
loope
ds
mov
xchg
push
jg
fmull
sub
sub
pushf
imul
push
jo
imul
mov
sahf
cmc
in
inc
stc
cmp
adc
push
cmp
jnp
xlat
mov
shlb
push
cmpsb
movsb
aam
rcrb
mov
repnz
out
out
mov
loope
ss
push
mov
nop
pop
cs
andb
and
les
sbb
dec
mov
fisubrl
pop
pop
and
pop
imulb
test
jno
into
shrl
aas
fisubl
rcrl
mov
inc
pop
mov
cmpsb
repnz
pop
lret
add
add
dec
sahf
lret
xchg
xchg
cld
and
push
and
sti
incl
xchg
repnz
pop
fchs
push
mov
push
cmp
push
arpl
cmp
stc
sbbl
jno
xor
fcmovnb
or
lock
push
outsl
aad
cltd
pop
cmp
mov
mov
inc
mov
outsl
jnp
lods
sbb
sti
arpl
int
xchg
sub
lret
repz
ret
popf
or
cld
inc
fiadds
push
js
outsl
mov
repz
dec
cmp
lahf
xchg
lret
les
mov
rclb
jb
aad
jnp
or
xor
push
divps
push
lret
xor
fisubl
insl
sti
jb
or
repz
lods
cwtl
imul
mov
mov
cmp
mov
insl
cli
in
sbb
outsl
ret
xchg
andl
xor
adc
jle
dec
sub
scas
mov
scas
pop
sub
pop
jecxz
loope
xor
sub
in
cmp
push
daa
sub
lret
cmp
mov
pop
cmc
jmp
out
sbb
scas
scas
adc
mov
mov
rol
pop
push
outsb
iret
jbe
std
sbb
out
add
lret
xlat
out
outsl
lret
les
lcall
es
mov
and
in
imul
jmp
fcoml
mov
bound
std
data16
pop
test
scas
stc
pusha
push
lret
fsubl
xchg
movsb
and
out
testl
insl
fs
inc
js
dec
add
gs
or
adc
fwait
loop
pop
fisubl
or
sub
adcl
xor
cltd
jnp
iret
jns
aam
push
cmp
mov
and
cwtl
outsl
dec
sub
cmpsl
add
dec
ljmp
add
rcl
je
fcompl
fs
xor
cwtl
jns
or
insl
loopne
cmp
sub
adc
fisubl
push
divb
or
mov
jl
sbb
cmp
mov
out
in
dec
fmul
fmuls
mov
imul
out
xchg
lea
xchg
enter
int3
mov
push
and
jmp
cld
dec
pop
inc
pop
out
mov
in
outsl
xchg
shlb
push
mov
fdivrl
and
xchg
add
aas
sub
imul
ss
outsb
inc
dec
fistps
add
cmp
aad
pop
data16
dec
cmc
sbb
cli
aam
in
mov
xor
adc
mov
sahf
lods
rcrl
jmp
mov
cld
adc
sub
lods
mov
inc
inc
xor
push
movsb
and
pop
push
mov
movsl
inc
or
pushf
sub
xor
pop
sbb
in
push
sub
sbb
ljmp
ret
leave
xchg
addr16
out
inc
orb
out
pusha
jp
push
jo
sub
outsb
sbb
pop
fisubl
push
xor
popa
inc
or
stc
stos
add
popf
inc
xchg
mov
push
pop
test
mov
fisttps
dec
stos
movsb
stos
or
mov
bound
out
adc
push
mov
lock
fiaddl
gs
addr16
sub
push
xor
addb
jns
lock
jns
mov
and
push
xchg
cmp
pop
sub
test
movsb
jp
icebp
mov
sbb
adc
out
and
clc
sub
jp
in
mov
ror
divb
jae
inc
sub
aaa
out
cltd
repz
sbb
sbb
cli
sbb
and
repz
icebp
pop
int3
in
daa
ljmp
cmpsl
pusha
or
sbb
rcll
xchg
mov
sahf
loop
inc
lods
rorb
mov
jno
cmp
scas
pop
and
xchg
push
mov
fnsave
push
fidivl
cld
es
inc
add
push
push
jg
popa
jb
push
ret
or
jno
mov
xor
xchg
push
dec
push
stos
inc
rcl
jno
and
xchg
call
adcb
mov
lcall
ds
repnz
fisttpl
inc
mov
int
jne
js
sub
sbbl
xchg
lods
loop
mov
sti
adc
inc
daa
std
cmp
lret
jg
shll
testl
jg
clc
mov
mov
divb
jne
dec
loope
and
pop
jae
or
jbe
xchg
and
sbb
cli
mov
adc
faddl
psubsb
mov
sbb
push
sub
fildl
imul
inc
dec
jge
je
fwait
mov
cmp
push
lods
repz
and
sbb
fnstenv
rcll
pop
pop
leave
bound
aaa
dec
push
mov
cld
and
ror
pusha
sbb
push
gs
xchg
mov
push
into
pusha
add
push
das
jo
jne
dec
sub
add
fldenv
mov
arpl
pop
jl
fimull
subb
mov
pop
aaa
mov
shlb
lds
lahf
add
push
add
lahf
popa
cwtl
test
xor
roll
movsb
inc
sbb
popa
and
or
daa
cmc
mov
sub
test
mov
in
enter
fsts
adc
or
cmpsl
cmp
push
inc
jle
cmp
push
shll
adcb
jne,pn
cmc
sbbl
sbb
aaa
pop
addr16
add
ds
and
idiv
fdivrs
push
out
divb
and
jmp
mov
jecxz
mov
stos
rcr
icebp
cmp
jle
cli
cltd
jbe
mov
ljmp
dec
fsubl
mov
imul
lds
adc
push
fwait
cmpsb
je
testl
dec
jae
leave
mov
les
or
dec
sub
movsb
mov
rcl
xor
and
shrb
loope
pop
fs
push
cwtl
pop
into
mov
gs
xor
fistpll
jbe
pop
dec
shlb
cs
mov
mov
cmp
xor
cmp
cmp
push
mov
pop
je
mov
dec
adcb
cmp
outsb
xchg
das
popa
repnz
adc
rcll
xchg
cwtl
icebp
sbb
or
imull
leave
push
lods
aas
shl
sbb
fmuls
dec
fcmovne
xchg
cmp
push
pop
xchg
lcall
pop
cmp
pop
insb
xor
lahf
xchg
iret
push
iret
sub
mov
lret
mov
or
sub
pop
test
sbb
stc
cmp
ja
jno
push
pop
jp
cmp
sbb
test
and
cs
xchg
loop
mov
incl
add
and
in
and
jae
pusha
inc
pop
loope
push
mov
mov
fdivrl
xchg
xor
push
stos
idiv
dec
int3
or
ret
xchg
ljmp
repnz
mov
nop
adc
lret
inc
fwait
int3
dec
push
mov
in
cmp
cmpsb
and
mov
jne
sbb
cmp
mov
inc
and
mov
mov
xchg
aas
js
inc
cwtl
cmp
adc
pop
dec
rolb
data16
xchg
rcll
adc
add
lcall
cmp
outsl
jle
xchg
leave
cmp
int
mov
iret
xchg
xchg
adc
push
mov
je
int3
scas
push
sti
gs
in
out
movhps
loope
aad
and
mov
push
mov
push
jle
dec
mov
lret
cld
push
cmc
mov
pop
adc
xchg
mov
mov
sbb
subb
fsubrs
stos
das
enter
mov
sbb
data16
ss
and
pop
push
sub
push
sbb
pushf
jae
arpl
lods
mov
sbb
out
scas
aaa
adc
sub
cmp
jle
cli
sahf
cmc
repnz
out
push
bound
push
add
mov
mov
outsl
adc
xor
sub
sbb
test
mov
das
lods
xchg
popl
ljmp
jno
into
push
inc
and
iret
mov
mov
inc
cmp
sbb
leave
pushf
jge
ror
add
pop
daa
aad
jg
xlat
nop
addr16
push
push
insb
xor
lahf
jp
faddl
scas
mov
mov
ljmp
pop
mov
mov
inc
leave
mov
jbe
xchg
fldcw
pop
xorl
pop
test
fstl
or
loopne
pop
jo
dec
push
rcll
pop
xchg
imul
jecxz
mov
pop
push
lret
repnz
pop
mov
stos
adc
mov
or
cmpsl
fwait
sti
cli
mov
lret
xchg
outsl
and
and
adc
addr16
inc
sti
mov
pop
fld
add
repnz
test
mov
push
sub
push
shll
push
or
push
les
cli
test
mov
push
and
push
xchg
out
mov
jb
jb
mov
sbb
sub
cwtl
mov
add
jp
icebp
mov
insl
std
xlat
add
mov
dec
ficompl
outsl
cmp
pusha
pushf
mov
fwait
test
xchg
cmp
cli
adc
inc
jecxz
les
test
xchg
int3
jl
insb
push
inc
shlb
mov
sub
hlt
js
lods
or
jle
je
pushf
inc
mov
rcrb
xor
js
into
adc
sub
add
push
push
dec
adc
mov
xor
insl
mov
shlb
push
pop
into
and
aaa
xor
cmp
stos
cmp
pop
loop
jo
mov
fidivs
cltd
and
mov
hlt
lods
jne
rcll
mov
dec
push
jne
mov
mov
pop
xchg
out
fyl2xp1
loop
sub
insb
adc
dec
cmpsl
sbbl
xchg
addb
mov
dec
pop
insl
loop
mov
sbb
pop
sub
adcl
jecxz
cmp
jbe
inc
cmp
xchg
arpl
xchg
leave
push
push
fs
outsb
push
mov
pop
out
cmpsl
push
shrl
ret
mov
mov
rol
adc
lods
mov
push
fiadds
gs
das
js
into
cli
mov
add
cli
jns
sub
nop
xor
insb
negb
jo
fwait
sub
in
adc
cmpsl
ss
push
nop
sbb
es
or
jge
xchg
aam
mov
cmp
lds
out
prefetch
nop
insl
dec
inc
xchg
aad
push
jno
fwait
xchg
call
rcrl
mov
mov
stc
aas
xor
pop
mov
dec
add
xchg
repz
dec
jp
mov
in
sar
dec
jp
icebp
cwtl
rolb
outsb
test
aam
dec
and
sub
loop
push
rorb
lock
or
xchg
int
mov
pop
cmp
roll
xchg
sub
fbstp
dec
push
push
cmp
dec
jl
and
ljmp
pushf
sarl
sahf
adc
mov
in
push
jge
push
jp
lds
iret
jo
test
pop
sbb
jnp
mov
inc
mov
test
mov
int3
mov
push
sub
push
pop
mov
xchg
inc
xor
mov
orl
mov
nop
popf
lahf
repnz
push
jle
je
jle
inc
imul
and
inc
mov
xor
fistps
sub
adc
sub
mov
xor
leave
mov
inc
jl
je
testb
mov
imul
sub
aas
jo
aad
add
xor
add
shl
mov
lret
push
cmp
scas
hlt
hlt
sub
in
ret
int
push
cmp
movsb
dec
mov
in
ds
mov
cmp
das
push
sbb
cmp
mov
imul
lods
incl
int
call
pop
hlt
and
adc
push
jne
enter
inc
sub
add
insw
and
sbb
pusha
jecxz,pt
popa
movl
cmp
rsm
clc
pop
ds
push
mov
xor
pop
inc
es
jg
enter
jae
inc
subl
sub
in
cmpsb
imul
dec
int3
cli
jecxz
xchg
fdivs
arpl
sub
add
sbb
inc
jb
jmp
cmp
jle
js
cmp
mov
int
arpl
fld
insl
mov
adc
fisubrl
xchg
push
hlt
jbe
test
test
lret
inc
jbe
mulb
fisttpl
test
ljmp
sub
push
cmpsb
xlat
cld
inc
jbe
xor
sbb
ds
sbb
test
cmp
lcall
fimuls
aad
movsl
fstps
into
cmp
nop
out
loopne
or
mov
adc
sbb
dec
lods
lea
js
mulb
icebp
stos
jnp
adc
icebp
mov
lret
orb
lea
pop
inc
mov
cmp
adc
pop
rclb
cmp
lds
rorb
mov
aas
adc
popf
sbb
pop
fldl
push
scas
sti
fs
pop
xor
push
lcall
lahf
movsb
push
push
add
mov
and
lds
push
loop
fwait
pop
shll
test
leave
imul
shlb
mov
sub
or
sub
nop
jns
mov
sbb
repnz
lahf
es
xchg
pop
test
mov
arpl
int3
mov
dec
sub
jae
sub
shll
sbb
xor
add
scas
push
dec
xorb
or
sbb
add
stos
push
or
dec
fxam
test
mov
dec
mov
lea
mov
and
cld
pop
cmp
cwtl
xchg
ss
xchg
mov
mov
xchg
xchg
sbb
arpl
sub
mov
push
fildll
mov
lret
sti
shrl
fimuls
pop
movsb
mov
lahf
movsl
push
scas
sbb
imul
jmp
fnstenv
rolb
pop
popf
repnz
xor
mov
push
dec
mov
xlat
test
aam
push
mov
fisttpl
mov
out
mov
insb
xchg
push
cltd
stos
test
sbb
lahf
jb
cmpl
popa
dec
mov
push
outsb
sub
loope
and
and
sub
sbb
std
jmp
imul
testb
fs
push
pop
mov
mov
cmpl
push
xor
es
notb
out
insb
scas
daa
and
sub
mov
or
inc
add
and
jp
jns
dec
add
jne
push
mov
push
out
or
fwait
dec
pop
in
sbb
xor
clc
insb
stos
xor
ja
fcomps
push
arpl
mov
mov
aas
push
cltd
dec
sti
add
jmp
mov
popf
and
jns
xchg
or
xor
arpl
mov
arpl
inc
mov
sbb
orl
subl
pop
cmp
aam
xchg
jmp
adc
mov
mov
cmpsb
mov
add
pusha
adcl
jne
inc
xlat
push
add
das
lret
mov
mov
out
imul
test
cmp
test
or
jge
xchg
ss
inc
jnp
sub
or
or
lods
dec
es
sti
cmp
add
fcmovne
adc
jnp
xor
mov
jp
jg
sub
fsts
add
cmp
dec
sbb
dec
loopew
pop
stos
xlat
cld
test
cmp
add
xor
cltd
pop
lds
push
mov
insl
repz
jnp
lods
sub
addb
add
lcall
and
aaa
pop
xor
mov
into
int
jp
test
pop
fneni(8087
jb
jns
sbb
xor
sbb
inc
out
mov
jns
jb
mov
inc
imul
movsl
call
cltd
lea
sbbb
ja
js
mov
cltd
pop
in
add
fbstp
test
outsb
test
ret
stos
leave
dec
xchg
into
popw
js
jno
outsl
cwtl
lcall
outsl
adc
push
push
out
out
aad
scas
cmp
pop
shrl
icebp
dec
das
js
pop
loop
sub
js
cmpsl
mov
sub
shl
fdivs
int3
test
push
sbb
into
cmp
test
outsb
xor
cmp
mov
rorb
fdivrl
xchg
jne
and
icebp
mov
je
push
mov
jne
push
subb
add
mov
dec
mov
in
push
repnz
lahf
add
std
sub
loope
movsl
test
clc
push
inc
mov
and
std
jg
stos
out
out
add
out
jns
jnp
and
ds
popf
or
jnp
mov
cmp
mov
adc
loopne
loop
sub
jne
data16
add
lret
ficoms
out
mov
scas
jo
nop
push
dec
push
mov
flds
daa
or
jecxz
pop
xchg
fcmove
mov
sbb
aaa
aad
int3
andl
pop
rcll
sub
ret
cmp
adc
xor
add
insl
pop
in
sub
and
jb
sbb
mov
sub
jnp
int3
xor
gs
in
mov
jp
outsl
addr16
lock
pop
into
push
stos
and
push
sub
inc
push
mov
cmp
lock
into
jl
les
cltd
leave
push
push
jae
or
or
out
gs
mov
fwait
jp
push
stc
es
jbe
cld
jle
jmp
test
test
xchg
loope
jge
testl
in
and
ss
jg
fs
data16
sbb
repnz
rcrl
sar
enter
sbb
cmp
xchg
or
pop
push
arpl
jp
push
das
iret
mov
pop
pop
xor
fldl
sub
ja
push
sbb
cmp
dec
sub
sahf
mov
lret
lea
mov
jne
into
mov
movsb
inc
adc
movsb
dec
rorl
adc
inc
scas
shrl
jp
and
imul
sarb
jbe
les
loope
xchg
lcall
mov
test
in
add
dec
sub
lcall
xor
movsb
repnz
mov
mov
call
mov
das
xchg
mov
and
js
movsl
mov
gs
sub
mov
das
icebp
push
data16
sarl
and
cld
adc
mov
cmpsb
call
rclw
call
cmp
add
xchg
or
cmpsb
arpl
jl
xchg
push
test
dec
outsl
inc
xchg
insb
sbb
cmc
test
mov
mov
es
out
movsb
mov
roll
stc
mov
push
pop
ja
xchg
xlat
push
pushf
and
ljmp
movsl
adcb
fwait
mov
xor
rolb
repnz
sarb
sbb
ret
lock
scas
cmp
aaa
add
inc
push
xchg
sub
add
jmp
cltd
insl
mov
es
sbb
mov
movsl
jne
pop
cmpsl
out
ss
mov
xchg
mov
push
push
dec
push
aaa
cmpb
jno
data16
iret
out
mov
pusha
sub
push
xchg
std
sbb
bound
nop
sub
push
enter
pop
mov
fwait
xlat
insb
aam
adc
xchg
mov
sbbb
mov
pop
lret
sub
aas
jle
jg
sbb
mov
dec
mov
push
lods
sub
hlt
lahf
out
cmp
xor
and
lcall
pop
cmp
js
cmp
jnp
popf
add
jns
push
sub
sbb
movsb
into
cmp
cltd
cmp
xchg
test
inc
mov
arpl
dec
push
push
pop
outsb
movsl
push
or
mov
push
push
rcrl
mov
xlat
fcoml
inc
leave
call
pop
insb
mov
sbb
xor
sarb
in
cwtl
fwait
std
inc
and
loope
inc
and
mov
mov
mov
xor
mov
test
jmp
fs
pop
jno
ret
inc
cmp
nop
mov
clc
xor
or
dec
adc
dec
cld
lods
add
dec
repnz
pop
adc
paddusw
mov
push
add
cmp
mov
push
sti
cmp
xor
xchg
sti
or
push
jmp
into
xchg
adc
push
sbb
jmp
pop
jo
filds
jp
in
xor
xchg
mov
mov
ficomps
mov
jmp
out
out
arpl
sbb
inc
mov
adc
shlb
shr
xor
mov
insl
adc
inc
adc
xchg
push
clc
jmp
push
out
int
dec
cltd
adc
fidivrs
sbb
stc
jns
scas
sbb
push
mov
test
xor
pop
inc
push
aas
jp
in
jp
cmp
push
and
lock
jle
sbb
pusha
sbb
adc
and
mov
lods
inc
adc
psubb
leave
fcoml
lock
sahf
subb
jl
mov
dec
adcl
fsubrl
cmpsl
pop
xchg
loopne
nop
shrb
dec
in
dec
dec
or
lds
ret
stos
aam
in
mov
dec
aam
lret
pusha
imul
add
mov
movl
sbb
inc
rcrb
fcom
jbe
movsl
push
in
xchg
aaa
adc
mov
pop
cmp
es
xor
xor
insl
bound
mov
mov
fisttpll
pop
cli
fimull
loop
cmpsb
mov
cmpb
movsl
outsl
das
notl
sti
sub
sbb
mov
inc
rcrb
lods
gs
lahf
cmp
jle
andl
push
push
in
mov
push
cltd
pop
inc
loope
enter
cmp
lret
cmp
enter
xor
add
jb
cmp
mov
mov
push
sub
fisttps
inc
lret
add
dec
add
or
repnz
xchg
xchg
cmpsb
arpl
mov
inc
inc
mov
mov
inc
js
sub
adc
pop
in
xor
popa
cmp
or
lods
add
add
add
cmp
test
or
pop
int
push
lods
pop
mov
sub
cmpsl
pop
or
or
or
dec
fsubrl
push
push
adcb
jl
lds
xlat
mov
mov
mov
icebp
es
dec
xchg
cwtl
mov
and
in
pop
jg
mov
in
lcall
neg
inc
mov
sub
ret
fcmovnb
sub
jo
fisttpll
push
add
les
mov
pop
xchg
jp
stos
outsb
jne
push
jno
movsl
mov
mov
mov
sbb
arpl
push
das
je
add
jae
jg
mov
mov
fldcw
aad
inc
shll
pop
outsl
jne
outsl
mov
subb
xchg
xchg
lods
adc
mov
and
dec
adc
subb
jae
push
in
push
lods
push
sbbl
cmpsl
repz
xlat
xor
dec
xchg
mov
lds
das
mov
and
mov
inc
negb
aam
sbb
pop
daa
das
push
stc
insw
and
jae
ret
inc
into
mov
jnp
pusha
les
mov
push
pushw
out
cmp
dec
cmpsb
cmpb
cmp
les
jae
or
jnp
mov
push
sub
mov
dec
adc
sbb
fists
or
mull
rcrl
pop
divb
imul
jmp
repz
push
dec
cli
xchg
pop
out
push
or
inc
test
push
dec
dec
adc
add
cmp
xchg
push
cmp
sub
jnp
fnsave
fstl
mov
loop
ret
sbb
int
mov
add
faddl
lock
jmp
aaa
das
dec
ret
xor
inc
dec
xchg
sub
adc
fisubl
and
int
sbb
scas
adc
and
push
cmp
jl
sbb
sbbl
jae
or
xor
or
out
fs
data16
sbb
xchg
popa
sbb
jo
sub
in
jmp
or
xchg
xchg
mov
add
jge
fsubrp
sbb
pop
das
jo
dec
mov
addb
inc
mov
leave
jge
mov
or
push
das
stc
lcall
ret
and
movsb
push
lods
push
dec
mov
mov
mov
mov
jae
mov
sub
aas
in
push
aas
scas
and
ss
or
loop
ds
mov
into
sbb
cs
movsb
mov
enter
test
pop
shr
pusha
shl
outsl
mov
xchg
pop
pop
cmp
add
mov
fs
sub
mov
and
cmpsb
jle
sub
mov
sub
push
sti
add
xor
inc
sbb
aad
mov
mov
sub
mov
stos
imul
mov
out
jnp
sbb
mov
dec
sub
inc
scas
std
popa
fmuls
inc
lcall
jecxz
add
ss
movsl
mull
subb
inc
loope
sahf
enter
es
pusha
stc
adc
lret
xchg
nop
je
outsb
and
and
out
xor
enter
shrb
jmp
aam
xchg
cmp
js
xchg
lret
sbb
dec
enter
fwait
ljmp
cmp
popf
or
xchg
cmp
xor
pushf
imul
lock
and
xchg
or
mov
test
flds
adc
xchg
jmp
and
push
cmp
fistl
loopne
dec
lock
pop
imul
push
add
aas
lcall
ret
push
lret
dec
push
in
into
fdiv
test
cmp
push
in
push
mov
rcll
jecxz
or
retw
sub
fimuls
outsl
ljmp
cmp
imulb
or
pushf
or
lea
dec
mov
aaa
pop
inc
dec
pop
fwait
or
iret
pop
addr16
jno
jl
sti
icebp
jae
xchg
mov
bound
sbb
lods
xlat
rcrl
hlt
push
add
sarb
stos
movsl
ljmp
je
or
es
push
jo
cmp
push
sahf
inc
dec
sbb
and
cmp
inc
mov
jb
popf
data16
jne
in
outsb
mov
dec
and
test
mov
mov
aas
jecxz
jle
sbb
adc
add
pusha
test
cmp
decb
cmp
rclb
and
test
js
ret
outsb
pop
xchg
pop
mov
cmp
jne
fdivrl
push
jl
push
pop
push
mov
out
adc
fcoml
mov
sbb
lods
and
pop
stos
cli
xor
shrb
push
cmp
ret
rcll
cli
mov
sti
jge
mov
fisubrs
or
dec
lods
mov
jnp
jbe
pop
push
js
dec
sbb
faddp
ret
nop
inc
xor
nop
sbb
push
push
shll
mov
fdivl
movsb
rcrb
sbb
inc
push
mov
inc
mov
nop
shrb
adc
push
std
jns
sti
inc
cld
imul
in
inc
mov
movsl
scas
clc
in
lea
or
dec
pusha
or
adc
call
jg
sbb
mov
cmp
adc
or
cwtl
out
subl
or
fucomi
cmp
les
xor
movsb
and
xchg
inc
sbb
mov
xchg
inc
mov
arpl
ret
sub
ds
xchg
push
mov
jge
pop
int
dec
jae
dec
xchg
rorb
or
adc
sub
ds
out
xor
cltd
enter
cmp
push
xor
outsl
xor
cmp
shrb
lea
mov
cltd
nop
push
aas
pop
mov
mov
stos
jne
leave
push
jmp
in
inc
adc
stc
sbb
mulb
clc
and
fcomi
call
mov
repz
aas
jae
xor
out
mov
scas
pop
xlat
negb
adc
je
or
xchg
cli
dec
imul
out
mov
imul
leave
jmp
mov
ja
bound
sub
addl
mov
je
loope
dec
push
fwait
push
and
mov
imul
leave
adc
xor
in
cmp
cmp
cltd
sbb
mov
lock
into
pop
out
ds
cwtl
pop
mov
test
mov
dec
mov
enter
call
xchg
ja
cs
fsubl
mov
mov
xor
gs
push
inc
es
xchg
aam
pop
jno
leave
fcoml
loop
mov
pop
xchg
inc
minps
and
pushf
push
add
xlat
call
insl
mov
pop
je
jl,pt
add
sti
incb
jo
jae
insl
pushf
xor
sub
cmp
mov
or
adcl
gs
gs
imul
out
dec
or
mov
cmp
cli
mov
hlt
jl
dec
xchg
enter
enter
jecxz
arpl
add
mov
xchg
push
mov
pop
inc
mov
adc
or
jno
ja
jl
out
xorl
loop
sti
iret
clc
shr
mov
sub
xchg
pop
aad
mov
ljmp
movsb
repz
mov
cmpsl
cmpsb
fiadds
xchg
pop
xchg
out
cs
jle
and
mov
adc
icebp
divb
push
inc
test
inc
mov
mov
addl
loop
iret
mov
inc
sub
push
pop
test
test
lock
bound
sub
mov
jnp
popa
out
push
adc
movsb
mov
or
loopne
les
iret
adc
lods
add
mov
in
sub
pop
push
mov
add
lret
mov
repnz
mov
push
or
in
xor
sbb
jmp
and
jle
pop
sub
push
cs
leave
inc
aad
sub
adc
in
inc
sbb
shrb
sbb
lds
cmpsb
ss
cltd
lea
into
popa
shlb
mov
fildl
in
xor
insb
mov
ja
jne
sub
cltd
adc
mov
imul
sbb
ror
call
dec
xor
push
or
loope
negl
push
insb
xchg
adc
fstl
cmpsl
jae
xor
popf
loope
clc
sahf
movl
jne
mov
sub
cld
jbe
xchg
pop
enter
pop
dec
dec
es
push
shl
inc
aam
adc
push
pop
xchg
stc
and
cmp
scas
or
outsl
pushf
or
sbb
pushf
outsl
push
aaa
ljmp
sbb
iret
scas
jg
push
daa
or
sub
test
pop
or
adc
hlt
and
stos
stos
js
sub
out
sti
push
or
sbb
movsl
jne
xlat
lock
xchg
jnp
inc
adc
rorl
stc
in
add
pop
jno
dec
push
adc
push
jmp
add
gs
fldt
bound
xchg
push
and
add
outsl
sub
mov
push
dec
fiadds
push
arpl
mov
and
push
mov
cmpb
pop
arpl
cld
js
sbb
sarl
sti
cmpsl
lret
cmpsb
push
loopne
xor
xchg
sbb
jecxz
stos
mov
jo
pop
mov
jp
sar
adc
sbb
idivb
dec
or
stos
incl
sti
xlat
inc
fs
jl
rclb
sub
jnp
and
outsb
test
push
inc
jo
mov
jmp
mov
sahf
sti
mov
fs
adc
jl
scas
add
pop
ss
fcmove
jbe
test
xchg
ret
jno
imul
imul
jmp
clc
mov
mov
adc
push
fdivrp
movsl
pop
ret
xchg
das
test
cmc
notl
in
nop
into
in
jle
push
mov
push
adc
cmp
xlat
inc
ffreep
or
in
push
jno
in
fsubrs
add
cmpsl
nop
xchg
jno
data16
ljmp
js
or
xor
lret
or
inc
test
jnp
jno
bound
dec
push
cltd
mov
mov
sub
or
mov
or
call
inc
push
lds
push
sti
lods
and
and
cmp
inc
movsl
in
mov
into
pop
push
dec
daa
cltd
testl
push
jb
mov
and
dec
mov
fimull
je
add
int
adc
mov
ljmp
or
xchg
stc
cmp
xor
aaa
mov
mov
and
movsl
cmp
mov
mov
adc
dec
movups
and
adc
leave
out
xor
add
mov
xchg
jmp
movsb
jl
shll
xchg
sbb
push
loopne
test
ret
cmp
fsts
gs
in
or
test
pop
jae
int
adc
mov
fistpl
dec
in
loop
lret
push
daa
roll
std
adc
xchg
dec
pop
loopne,pt
or
test
test
inc
mov
aaa
fldcw
pop
push
aaa
push
jns
in
out
lea
in
push
rcpps
hlt
xchg
mov
addr16
xchg
sbb
pop
jg
mov
popa
pop
push
push
wbinvd
sub
sbb
mov
out
outsb
mov
adc
dec
rclb
mov
xchg
test
pop
inc
push
jge
mov
pop
pop
rorb
ret
pop
cmc
cmpsb
cs
sarb
mov
jno
mov
test
repnz
icebp
cmp
call
sub
sarb
out
and
cmp
sbbl
cmc
arpl
pop
xor
arpl
ffreep
mov
jns
mov
cli
cmc
pop
int3
add
test
clc
nop
xchg
iret
dec
pop
stos
js
popa
lds
std
and
test
cli
in
or
loop
les
fs
xchg
sbb
outsl
subb
pop
arpl
pop
jmp
int3
push
mov
fst
adc
movsb
cld
and
je
xchg
rcll
or
iret
popa
inc
xlat
push
inc
add
scas
enter
lcall
add
sub
xor
cmp
sub
pop
jo,pt
shrl
mov
cltd
add
inc
out
pushf
xchg
xchg
jl
leave
adc
jne
mov
push
mov
dec
pop
outsl
ds
xor
mov
mov
mov
mov
aaa
xor
negl
pushfw
jnp
shr
or
xchg
mov
aad
dec
mov
test
lock
inc
pop
push
push
mov
sub
inc
jge
mov
popf
data16
hlt
adc
outsl
adc
lret
jge
scas
mov
dec
call
jge
xor
add
scas
repnz
mov
add
pop
xor
pop
mov
push
add
dec
adc
mov
push
scas
imul
fs
push
aad
pop
or
test
mov
push
cltd
shlb
repz
mov
bound
or
add
lods
cmp
xor
addr16
inc
or
les
cwtl
sbb
mull
cwtl
mov
sub
add
scas
jl
jmp
jnp
out
adc
and
sub
addr16
jge
inc
inc
jp
iret
into
mov
xor
cmp
pop
xor
push
xchg
sbb
push
aad
push
mov
xor
xor
outsl
xlat
ds
sbb
cs
or
leave
jns
mov
js
add
pop
xchg
es
dec
iret
icebp
add
ss
adc
lods
pop
sub
out
push
lret
shrl
xor
aam
subb
loop
jecxz
and
test
cmp
cltd
mov
cwtl
xchg
js
ljmp
mov
mov
inc
icebp
fyl2x
imul
mov
add
inc
inc
sti
mov
cltd
adc
push
sub
mov
int
lods
adc
bound
mov
cmpsl
push
pop
ljmp
dec
mov
xchg
inc
js
pop
stos
clc
xchg
xor
pop
lds
pop
lds
mov
push
cmp
mov
or
jne
test
mov
cltd
lcall
mov
mov
lcall
orb
xchg
cmc
jmp
push
shrb
std
adc
rcll
add
iret
leave
dec
in
scas
pop
shll
pop
es
repz
outsb
fs
or
mov
adc
jp
jbe
insb
adc
push
or
ret
xor
push
sbbl
inc
movsl
cmpsb
nop
ret
add
ret
aaa
mov
add
pusha
or
mov
push
cmp
out
je
scas
jge
fstp
cmpb
ds
pop
pop
enter
outsb
and
adc
hlt
fnstenv
jb
ror
jb
push
and
mov
adc
les
test
xor
or
or
ficoml
loope
cli
jae
xchg
je
and
mov
pop
xor
stos
or
push
xor
sub
pusha
xchg
imul
out
loope
sub
add
outsl
add
cs
stos
jecxz
sbb
stos
fistl
das
mov
lea
pop
pop
fbld
dec
xchg
scas
nop
adc
scas
inc
lcall
ret
cmc
fidivs
xchg
out
repz
cwtl
mov
lret
xchg
cmpsb
cli
inc
jbe
jecxz
sbb
stos
sbb
iret
cmp
imul
sahf
add
xchg
pop
imul
aad
fadds
in
jge
setns
flds
icebp
xchg
jne
cs
jne
mov
ret
xor
es
mov
ljmp
push
cmpsb
testl
adc
pop
pop
in
push
push
mov
das
mov
punpcklwd
test
pop
out
or
mov
fildll
inc
cmp
jnp
icebp
cmpsl
push
daa
scas
dec
adc
adc
xchg
lahf
dec
outsl
fwait
into
popf
push
add
fbstp
aaa
xor
and
sub
lret
ljmp
mov
pop
pop
mov
testl
push
addr16
pusha
out
shlb
sub
inc
push
cmpsl
mov
std
neg
sub
daa
add
dec
lcall
inc
popf
cmpsb
stc
or
ret
inc
testb
arpl
inc
mov
pop
mov
or
xor
jle
in
lock
ret
mov
xchg
inc
jp
pop
sub
cs
lahf
inc
pop
adc
enter
sbb
push
pop
lcall
jns
and
testl
stc
jne
mov
push
jl
ds
xchg
push
popa
add
mov
imul
in
fadd
push
jns
sub
jmp
out
repnz
pop
mov
in
ljmp
inc
sbb
sub
ljmp
mov
sbb
push
and
jle
testb
fwait
dec
adc
dec
pop
les
cwtl
rclb
lcall
xlat
ljmp
push
sbb
push
cmpsb
aad
mov
out
xchg
mov
cltd
jbe
lret
sbb
jnp
fs
fistps
mov
pop
je
adc
mov
push
pop
sbb
enter
push
pop
mov
and
shlb
fnstcw
sub
movl
cmp
inc
mov
sti
dec
jecxz
lds
jns
push
pop
jb
pop
loope
imul
ret
push
xchg
pusha
dec
push
test
mov
pushf
pop
lock
mov
ja
out
sbb
jecxz
jo
pop
mov
mov
inc
and
mov
add
in
sbb
lret
mull
out
lds
pop
sbb
bound
pusha
pop
dec
fisubs
lds
lods
cmp
mov
stos
test
lods
jl
arpl
xchg
outsb
sub
fcomp
add
mov
lods
sbb
push
push
cmp
outsb
push
push
sbb
jns
fwait
fwait
cmpsb
in
push
lea
aad
push
inc
loopne
jecxz
lock
adc
ja
addr16
sub
data16
inc
int
mov
shr
hlt
jecxz
cmp
popf
fwait
xchg
int
in
mov
imul
popf
insb
push
outsb
rorl
lcall
int3
insl
imul
sti
mov
gs
gs
mov
push
leave
vprotq
or
sbb
jnp
shrl
add
test
ljmp
sub
test
lock
mov
test
cs
cli
and
cs
and
aas
mov
xchg
scas
add
in
jnp
xchg
sub
pop
jae
clc
lods
hlt
and
aaa
stos
jp
jne
cmp
and
fcoml
mov
gs
xchg
leave
push
aaa
xlat
push
or
inc
sbb
loope
enter
cwtl
push
push
xor
mov
repz
push
or
adc
call
cli
fdivrs
lret
pop
into
push
push
call
repz
push
jge
mov
std
xchg
std
add
xor
add
je
icebp
add
fnsave
pop
std
fwait
test
dec
scas
adc
loope
out
outsl
cmovb
ja
sahf
push
scas
cwtl
jnp
fimuls
adc
aad
adc
sbb
in
jecxz
out
or
call
inc
jp
mov
adc
aaa
or
lock
xchg
jmp
xchg
xor
xchg
repz
aam
jmp
mov
aam
adc
cs
jnp
scas
and
pop
stos
xchg
je
adc
into
aam
pop
and
out
xor
loope
or
pop
js
pop
and
iret
shr
pop
mov
fidivs
mulb
and
inc
aad
pop
mov
pop
popf
int
jb
in
rcrb
pop
test
lcall
push
xchg
pop
sbb
mov
sbb
mov
mov
test
dec
incb
cmp
enter
inc
or
retw
sbb
fwait
sub
mov
xchg
push
scas
or
lahf
inc
fs
repnz
xchg
mov
out
push
clc
insl
cs
cmp
sbb
pop
mov
pushf
ret
or
gs
xchg
and
xchg
mov
lods
cmp
jge
lods
dec
movsl
ss
sub
xchg
dec
and
pop
stc
cmp
iret
pop
into
jp
adc
or
dec
mov
imul
divl
fxtract
sti
adc
cmp
push
pop
cs
lods
sbb
mov
shlb
outsl
test
xchg
dec
repz
xor
loop
push
mov
xor
lret
outsl
mov
mov
movsl
jno
xor
mov
inc
stc
imul
repz
mov
or
xchg
sub
stos
xchg
flds
or
addb
fsubrs
inc
mov
and
pop
jecxz
jle
nop
mov
xlat
sbb
mov
div
call
jl
and
xchg
sarb
dec
jmp
call
pop
cmc
aam
lods
sarl
imul
mov
nop
xchg
mov
push
inc
cmp
insl
into
inc
es
xchg
test
cmc
dec
shrl
in
nop
enter
and
push
into
cmpsl
sbb
xchg
ror
cmp
adc
adc
xor
neg
out
repz
aas
dec
lods
popa
data16
and
fpatan
mov
imul
mov
adc
dec
addr16
subl
xor
or
pop
jb
push
pop
rorb
jle
xor
pop
sub
mov
aad
xchg
jl
mov
adc
add
mov
or
js
xchg
mov
mov
dec
push
ret
push
lods
dec
push
imul
mov
jns
or
in
imul
fdivrs
sbb
push
loop
aam
mov
fwait
inc
into
rol
js
lcall
shlb
xor
inc
ret
gs
mov
aam
push
push
xchg
push
insb
into
rcrb
xchg
sub
insl
imul
and
mov
mov
push
arpl
lods
adc
scas
add
popfw
gs
into
lret
cmc
pushf
bound
scas
sar
mov
inc
scas
lcall
rcl
mov
mov
shlb
mov
cmp
pop
imul
add
inc
aad
pop
dec
mov
sti
add
out
xor
leave
mov
jo
mov
addr16
mov
cmpsl
scas
mov
repnz
repz
dec
cmpsl
push
adcb
mov
cmp
cmc
aad
and
dec
and
push
and
dec
pop
outsl
jmp
mov
add
imul
aad
adc
fimuls
pushf
sub
fisttpll
aas
mov
push
cmp
push
aad
aaa
dec
mov
push
jg
stos
sub
in
lods
mov
or
jge
inc
out
out
mov
jo
std
stos
jbe
and
mov
inc
stos
jo
outsb
pop
adc
jle
in
stc
or
js
or
xchg
dec
jg
into
test
mov
xor
xchg
je
xchg
rdmsr
jae
fisttpll
inc
mov
xlat
inc
sbb
lods
pusha
xchg
int3
mov
aad
xchg
cmp
push
xor
inc
xchg
aam
pushf
push
dec
movsl
in
push
pop
and
addr16
gs
lods
mov
mov
inc
mov
cwtl
insb
rorb
loop
mov
popa
inc
jae
mov
xchg
sbb
repnz
cmp
fisubrs
jno
out
xchg
out
push
or
pop
ja
cld
xchg
pop
pop
add
mov
movsb
jne
fisubrs
xchg
dec
stos
fwait
sarb
add
xchg
std
insl
push
es
mov
popa
inc
call
fxch
xorl
cld
and
lds
insl
stos
hlt
ficompl
push
enter
shrl
into
push
adc
lahf
imul
mov
test
lds
and
shrl
mov
subl
jne
aad
icebp
repz
inc
pop
jg
xor
js
pop
sbb
mov
clc
leave
mov
imull
aad
les
cld
cmpb
fnsave
ds
and
mov
mov
add
add
int
jge
rcll
dec
das
jb
lods
fsubs
push
cmpsb
mov
fisubl
mov
loope
out
jne
push
pop
jp
push
ljmp
mov
fwait
push
or
mov
jle
popf
aaa
and
add
lock
andb
push
or
cmp
xor
inc
mov
add
mov
outsl
scas
pop
mov
mov
js
inc
shrl
js
rorb
mov
lods
sub
mov
dec
out
pop
loopne
cmp
sub
ror
fcmovnb
dec
jo
stos
sub
mov
lret
xchg
jmp
into
push
shlb
xchg
mov
push
movb
xor
leave
aas
sar
sub
cmpsl
mov
iret
gs
int
jo
pop
and
mov
dec
enter
popf
xor
mov
adc
push
loopne
stc
call
jbe
cmpsl
xchg
xor
jb
push
add
mov
in
jecxz
in
mov
pop
push
mov
push
xlat
addl
sahf
add
jmp
ret
incl
pop
mov
mov
pop
add
das
test
sahf
les
into
pop
mov
insb
fdiv
outsb
pop
lret
in
pop
je
add
aas
sub
xor
iret
adc
push
lea
mov
xlat
test
sbb
jo
jge
clc
mov
jge
cmp
mov
movb
bound
cmp
push
push
sub
ja
loope
xor
insl
jno
pop
aas
cld
add
fsubrs
insl
jae
xchg
sarl
mov
or
jae
daa
nop
sbb
cmpsb
mov
xchg
and
cmpsb
imul
push
test
dec
and
ret
aaa
inc
iret
into
cwtl
leave
cmp
xor
xor
mov
jle
push
scas
popf
pop
inc
into
adc
pop
adc
movsl
lods
mov
cmc
mov
fs
xor
and
out
jno
stc
dec
movsb
in
or
jns
shrb
jns,pt
xor
add
fdivrs
xchg
mov
andb
xlat
rcl
dec
inc
aad
pop
xchg
xchg
lods
mov
mov
fmull
cli
out
or
imul
pop
add
xor
rcll
in
or
mov
roll
ret
sbb
mov
or
xor
in
adc
pop
push
xor
push
jnp
test
xor
xchg
pop
jg
push
inc
mov
lahf
mov
shll
arpl
push
adc
in
push
cmp
xchg
dec
mov
cmp
xchg
mov
in
pop
dec
aad
mov
rol
nop
imul
fisubl
cmpsl
push
fcoms
inc
mov
mov
jl
faddp
jns
mov
push
ds
xchg
int
ds
jp
scas
push
pop
rcl
push
and
mov
std
pushf
subb
sbb
mov
test
mov
pop
test
mov
movsl
bound
cmp
xor
jnp
or
das
lahf
mov
sub
notl
jl
xor
rorb
sbb
lahf
jnp
xchg
notb
popa
jno
mov
lods
cmp
aaa
cmp
aad
jg
in
push
sbb
dec
sbb
mov
or
inc
push
loopne
cltd
insl
and
std
cmpsb
sbb
sbb
jge
scas
lods
mov
add
mov
cs
jb
scas
jb
sub
ss
sahf
mov
jne
jb
out
imul
repnz
mov
flds
add
sub
sub
push
fs
or
xor
stc
xorb
movsl
and
push
jg
sub
sbb
xor
and
push
adc
mov
nop
scas
movsl
and
imul
sub
jns
cmp
rcrl
test
push
push
test
xchg
fidivrs
cli
sti
mov
cmp
clc
and
xor
jmp
stos
cwtl
cmpsl
stc
aad
sbb
ss
jae
sub
or
push
mov
cwtl
push
fcmove
mov
and
mov
xchg
jne
adc
js
push
inc
xchg
jmp
popf
std
icebp
ja
xor
out
cmc
sbb
mov
sbb
jo
jg
dec
lds
mov
add
cltd
dec
push
xor
and
clc
cmp
leave
cmp
jnp
adc
cmc
dec
mov
push
clc
sbb
add
mov
jle
aad
cmp
add
xchg
jnp
mov
insb
stos
jg
outsl
jbe
pop
mov
sbb
push
test
out
in
pop
xchg
into
aam
and
mov
movsb
ljmp
xchg
sbb
les
std
fwait
pop
inc
in
push
or
icebp
pop
js
int3
pop
test
sti
xor
ret
sub
loope
mov
int
xor
icebp
or
gs
jg
pop
xor
stos
adc
adcl
xor
xchg
sbb
fstpl
popa
jecxz
mov
out
addr16
cmp
aam
push
sbb
int
add
add
pushf
cmp
sti
bound
insb
mov
pop
adc
enter
cmp
adc
es
hlt
mov
push
sub
adc
fsts
das
pop
add
je
loop
sbb
test
jmp
sub
pop
cli
xor
mov
repnz
xor
jg
xor
or
faddl
sub
xorl
gs
mov
xchg
add
imul
gs
mov
xor
out
into
jne
mov
jo
call
test
fstpl
je
xor
jge
test
inc
or
dec
mov
rcrb
lcall
xchg
sbb
sub
mov
inc
fwait
pop
out
iret
daa
cli
or
push
adc
das
pop
dec
pop
sbb
flds
mov
cmp
dec
mov
inc
outsl
movsl
cmp
cmp
int3
lret
adc
lock
dec
push
testl
or
fst
xor
ret
int
fwait
jbe
dec
dec
fwait
adc
cwtl
jno
mov
jl
test
sarl
lods
sbb
sahf
mov
in
and
imul
inc
test
cmp
mov
sgdtl
dec
faddl
in
inc
rclb
nop
lea
arpl
mov
sbb
cmpsl
sub
pop
insl
jnp
daa
inc
adc
dec
mov
inc
lahf
lods
rolb
lea
imul
shlb
scas
adc
pop
das
mov
jnp
jno
xor
inc
imul
int
negl
pop
fcom
stc
cli
in
xorb
push
push
jmp
push
sbb
pop
cmp
sub
cmpsb
ds
lahf
in
adc
leave
js
xchg
cld
clc
scas
xchg
hlt
out
mov
mov
adcl
scas
xor
sbb
cwtl
cmp
ds
out
push
les
int3
stos
sbb
lea
xor
in
jmp
orl
sub
ja
shll
adc
mov
shrl
test
mov
aad
or
mov
mov
sbb
out
movsb
lock
or
loop
sub
das
insb
mov
mov
outsl
pop
xchg
pop
dec
sub
sub
mov
ss
out
dec
pop
lret
pop
xor
nop
xadd
fcmovb
mov
xorl
ss
negl
dec
comiss
dec
cmp
mov
push
mov
mov
mov
cmovs
and
xor
or
out
out
cli
or
rcl
sbb
pop
xchg
or
mov
sbb
cmp
push
lods
fstl
loopne
inc
fnstenv
or
xchg
pushf
clc
jne
adc
mov
cmpsb
xchg
mov
mov
pop
into
fldcw
pop
sub
outsl
cmpsl
inc
add
pop
jae
inc
ficompl
jp
jae
pop
loope
aaa
das
or
mov
in
jnp
nop
inc
jge
sbb
shr
clc
ljmp
fisubs
insb
insl
xchg
fs
xchg
in
mov
fstpt
testl
loope
add
push
stos
ret
push
add
mov
shll
mov
adc
pop
sbb
pop
repz
cld
jno
xchg
mov
xchg
cmp
xor
sbb
xor
inc
adc
pop
shl
dec
pop
sbb
mov
mov
shll
mov
jo
ret
pushf
mov
loopne
jg
jle
xor
fbld
or
inc
sub
cmp
fcoml
mov
cmp
add
add
clc
xchg
xchg
and
push
add
pop
xchg
dec
fidivrs
test
push
icebp
aaa
in
fnstsw
sub
ret
add
ja
pop
jae
out
insb
mov
xor
jne
pop
mov
dec
mov
push
cmp
ja
das
pop
or
mov
pop
dec
push
cmp
sub
repz
scas
mov
fs
inc
jb
mov
addr16
dec
adc
sti
pop
aad
clc
repnz
mov
outsb
push
dec
push
pop
mov
mov
sti
jecxz
mov
ljmp
scas
sbb
cli
push
lods
cmp
adc
sub
cmp
pop
outsl
mov
dec
js
sbb
inc
xchg
sbb
loopne
dec
xor
pop
or
pop
pop
and
push
js
jb
shr
rol
sbb
pop
enter
lea
sub
popf
or
mov
mov
movb
xchg
jge
int3
gs
xor
lcall
jnp
aam
push
adc
or
mov
shr
sti
int
lods
daa
jge
lods
aam
out
ss
lahf
fstl
fsubrl
sub
mov
adc
or
repnz
outsb
cli
cs
pusha
dec
xchg
lds
cmp
mov
mov
iret
pop
jo
xchg
out
loop,pt
or
jne
shrb
mov
sub
cmp
adc
or
rclb
or
ljmp
adc
sbb
and
xchg
test
xchg
int3
enter
xor
adc
jo
mov
pop
dec
mov
push
cld
add
sbb
out
mov
mov
js
push
xchg
clc
dec
leave
into
data16
repnz
mov
sub
mov
repz
gs
push
push
push
fdivp
das
lds
jnp
in
dec
in
lret
sbb
mov
iret
mov
icebp
lock
push
call
cmpb
test
popf
add
pusha
mov
push
mov
pop
aam
ret
sbb
add
stos
pushf
inc
stos
jle
adc
fmul
aaa
pop
loopne
add
push
mov
std
mov
je
cmp
ja
mov
clc
ja
pusha
mov
xor
and
loope
jmp
nop
xchg
pop
in
das
call
das
cmp
lods
out
fsubs
dec
inc
divb
mov
sbb
std
bound
repz
push
fucomi
cmpsb
mov
jmp
sbbb
add
push
xchg
rolb
add
jecxz
sahf
in
fs
test
stos
lock
orl
push
lods
jbe
pop
inc
fcom
cwtl
out
pop
loopne
dec
int
push
push
xchg
fisttpl
dec
movsl
add
orb
mov
jmp
xor
pop
push
sbb
add
loope
jb
fdivr
dec
stc
shlb
inc
nop
flds
loopne
and
fs
repnz
out
cmp
mov
mov
data16
out
sub
test
inc
fwait
xlat
lods
out
adc
in
or
mov
aaa
lods
cwtl
int3
push
mov
inc
rcrb
mov
mov
sbb
cmpsl
dec
mov
cmp
cs
sub
fdivs
add
pop
movsb
stc
jge
lods
sbb
and
mov
and
push
cmpsb
por
mov
or
jnp
subl
push
or
fstpt
or
sahf
std
dec
push
and
stos
mov
xchg
xor
pusha
popl
lock
bound
ss
fsts
mov
dec
cmc
lock
lea
lret
xor
movl
xchg
push
sbb
aaa
jg
movsl
test
in
mov
dec
testb
js
inc
ja
jns
mov
adc
js
sbb
xchg
adc
push
mov
mov
or
imul
jns
and
hlt
out
mov
repnz
jecxz
data16
mov
sbb
jns
sahf
add
in
xor
mov
outsb
stc
cmp
pop
test
das
pop
cmpb
or
les
push
xor
cmp
addb
add
push
mov
je
in
jmp
mov
mov
inc
fsubrp
loope
lods
push
jns
add
gs
outsw
lret
jns
xchg
or
push
fs
sbb
mov
pop
outsl
cwtl
enter
xor
dec
or
or
mov
enter
adc
in
nop
pop
stos
mov
ja
cltd
sub
adc
pusha
cmp
and
adc
shlb
cmpsl
jno
lcall
pusha
xchg
jecxz
es
leave
addl
and
aam
aad
in
mov
lcall
aad
ds
or
jl
jmp
sahf
lret
jg
adc
movsl
sub
xchg
insl
mov
fcomp
mov
sub
xor
push
pop
ret
adc
and
add
fcomps
xor
fwait
sarb
mov
pop
adc
cmp
out
loopne
cmpsb
and
mov
cmc
rcll
mov
mov
leave
jne
insb
scas
popf
imul
jae
adc
mov
jp
scas
or
jo
loope
dec
xchg
xor
sub
nop
xor
sbb
xchg
in
fcmovnbe
and
flds
inc
mull
test
add
jle
xchg
ret
mov
sub
mov
lahf
lcall
mov
jae
mov
pop
or
dec
lea
dec
pop
clc
lock
ret
inc
lcall
or
inc
popf
jns
outsl
lcall
mov
cmpsl
clc
xor
sbb
lahf
adc
lahf
jnp
jmp
jae
jo
dec
fwait
push
mov
ds
mov
mov
cmp
pop
push
jl
cwtl
dec
aad
xor
add
jg
lock
cmc
lods
ja
movsl
jg
sbb
mov
pop
les
push
push
js
ret
dec
push
andl
mov
ret
or
call
mov
sub
adc
out
ja
adc
mov
or
xor
je
pusha
and
adc
push
gs
adc
sub
jbe
jbe
ds
outsl
xchg
sti
push
push
outsb
cwtl
clc
loop
dec
arpl
ror
inc
cmp
or
adc
sbb
in
repnz
arpl
adc
cltd
push
nop
cmp
out
xor
nop
in
xchg
pop
lahf
fstp
add
ss
sub
int
lcall
fisubrs
and
mov
pop
inc
fnsave
loope
add
out
sbb
outsl
jmp
add
add
movsl
pusha
cmc
cmp
xchg
lock
fwait
xchg
outsl
jl
xchg
sub
lods
out
mov
mov
mov
adc
mov
data16
negb
inc
cmp
cmpsl
clc
cmp
push
or
xchg
push
aad
lret
into
shll
scas
pusha
and
sub
divl
gs
add
fstpl
mov
xchg
in
das
sbb
stc
mov
sbb
or
adc
push
mov
sbb
xchg
enter
pop
imul
aam
jl
and
and
jl
lods
or
and
pop
mov
mov
repnz
jmp
sbb
clc
scas
mov
shr
arpl
dec
cmpsb
test
push
les
movsb
inc
or
adc
mov
inc
mov
rol
mov
insl
out
repz
test
stos
push
cmp
rcrl
rorl
arpl
scas
out
and
inc
mov
mov
out
cmpsl
lahf
xchg
add
and
aam
fdivrl
sub
mov
xchg
xchg
fnstenv
shll
adc
and
xchg
pop
sub
mov
mov
add
hlt
jo
mov
jbe
xor
mov
push
jne
inc
push
pop
pop
imul
push
push
pop
out
fucomi
js,pt
mov
mov
and
push
rorl
adc
dec
xchg
rcrb
shrl
lret
mov
mov
jb
scas
scas
rorl
ret
outsl
mov
sub
dec
mov
mov
scas
mov
mov
pop
aas
int
xchg
pop
xchg
mov
lods
repnz
inc
mov
xchg
push
out
test
pushf
push
outsl
cmp
popa
cltd
mov
jmp
mov
or
inc
xor
add
xor
mulb
push
jl
ret
add
test
fbld
movsb
cmpsl
xchg
sub
lea
insl
sbb
mov
add
or
pop
xchg
popf
push
mov
jle
push
dec
std
das
xchg
jb
push
and
or
pop
mov
sub
pushf
xchg
xor
mov
and
inc
jbe
jecxz
jnp
sub
or
mov
lea
pop
aas
sub
pop
loop
jo
iret
adc
movsb
test
fcoml
leave
das
cs
lods
mov
mul
rcll
mov
pop
xchg
shll
cmp
adc
cmp
or
jp
mov
insl
cmpsl
sub
and
or
mov
in
inc
jmp
pusha
inc
je
in
mov
or
pop
dec
and
gs
sub
stos
lret
cmp
insb
in
and
push
test
sub
sbb
push
pushf
stos
mov
enter
mov
push
jne
and
es
mov
shll
cmp
loopne
inc
adc
lods
outsl
test
and
ja
pop
sbb
dec
inc
test
mov
xor
addb
sbb
fdivr
inc
mov
or
cmpsb
repz
call
dec
xchg
mov
xchg
sbb
cmp
jo
jno
aam
fwait
mov
dec
roll
cvtdq2ps
push
xchg
mov
cmp
or
lretw
mov
mov
and
adc
call
jae
es
rorl
repz
push
push
sbb
in
pop
pop
lcall
mov
mov
cmp
sub
nop
dec
ror
andl
inc
dec
testl
mov
mov
jnp
jne
loopne
mov
xchg
adc
dec
lea
sbb
popa
ljmp
aaa
jge
mov
sbbb
jo
sbb
xchg
adc
cmp
pop
or
jl
loopne
imul
pop
into
xchg
bound
add
fs
dec
repnz
and
int3
stos
addb
adc
in
cmp
loope
fimuls
xor
les
ret
stc
maxps
add
lds
pop
jbe
aaa
mov
push
jl
and
mov
cmp
xchg
push
lret
addb
test
inc
ljmp
xchg
pop
cmp
imul
out
pusha
lret
ret
fcmovu
jo
add
in
sub
pop
mov
sub
jo
stc
lods
gs
lret
jmp
ljmp
inc
std
and
cltd
out
inc
and
in
jle
sti
jge
sbb
and
stc
sbb
hlt
mov
pop
sbb
cmp
adc
adc
test
insb
adc
cltd
sbb
sbb
aaa
std
ror
repz
jge
pop
orb
ljmp
mov
mov
bound
incl
pop
add
repnz
fisttpll
sbb
stc
aam
adc
mov
jbe
mov
lods
mov
sbb
shll
iret
cmp
cmp
cld
lahf
mov
fidivs
adc
push
inc
out
insl
adc
dec
fwait
inc
mov
xchg
mov
int
or
icebp
out
int3
mov
sbb
adc
fwait
pushf
xchg
cmovae
push
enter
and
mov
xor
adc
cmp
outsl
xchg
pop
fcoms
add
repz
mov
aam
push
imul
push
push
jecxz
popf
push
or
pop
fdivrl
push
rcrb
dec
das
iret
les
push
inc
lahf
mov
icebp
sub
sbb
inc
xor
mov
sbb
and
addr16
jo
jp
lahf
in
pop
loope
shlb
and
lcall
dec
or
bnd
adc
int
mov
pop
mov
dec
fidivrs
pushf
ljmp
insl
mov
loop
sub
int3
imul
int
push
pusha
add
sbb
pop
inc
push
aam
pushf
adc
fisubl
lock
cs
out
incl
cltd
mov
int3
xor
pop
add
filds
mov
std
aam
push
icebp
or
pop
test
sub
xor
mov
pop
int3
xor
sub
inc
xor
mov
pop
cmp
out
sub
push
jmp
std
inc
stos
adc
jnp
pop
ss
lds
pushf
loope
lret
das
mov
scas
clc
test
cmpsb
dec
outsb
and
ja
xor
cwtl
sti
push
cli
addl
add
fyl2xp1
rcl
fldt
movsl
jge
adc
xchg
jae
xchg
push
pop
loopne
jno
cmc
shlb
hlt
cli
in
pop
xchg
sti
pop
dec
mov
into
mov
rclb
add
mov
fwait
sbb
out
and
lret
sahf
insl
add
sub
xor
pusha
mov
js
inc
loope
out
out
out
out
push
int3
cmpsb
mov
or
repz
push
call
pop
std
jae
frstor
add
mov
ljmp
test
out
cmp
lea
iret
jo
rcrl
cs
fs
sti
adc
inc
xchg
xchg
mov
xor
inc
pushf
cmp
inc
sub
insl
loope
push
icebp
push
int
dec
xor
out
mov
xorb
inc
push
adc
inc
movsl
lea
shrl
in
cmpsl
or
shl
mov
mov
push
cmp
push
adc
xlat
pushf
pusha
popf
push
rcrb
ret
and
dec
xchg
xchg
and
in
or
or
sahf
sarl
lahf
movsl
int
repz
dec
scas
cli
out
int
mov
js
test
jae
sbb
pop
mov
xchg
cli
loopne
scas
mov
xlat
aad
sub
aad
lods
or
test
lcall
rol
ds
pop
sbb
and
arpl
push
dec
jbe
xor
cmp
enter
nop
dec
dec
dec
lahf
push
lcall
mov
nop
imul
je
scas
dec
out
adc
pop
pop
push
ret
arpl
pusha
xor
mov
inc
jbe
jne
sub
arpl
cmp
jne
int3
inc
push
insb
stos
stos
mov
push
add
std
sbb
ficomps
fisttpll
loope
add
movsl
pop
sahf
lahf
inc
push
xchg
mov
ja
jmp
mov
dec
cli
cmp
fnsave
stc
test
ficoml
adc
mov
test
shll
add
dec
xchg
jne
or
movsb
data16
fiaddl
xchg
add
mov
push
sub
enter
leave
lahf
jle
xlat
xchg
aam
and
adc
inc
pop
add
inc
lock
mov
stos
add
mov
aad
push
test
int3
std
adc
pop
sbb
insb
mov
sahf
or
pop
xor
push
jns
lods
les
subl
jp
dec
push
imul
leave
repz
mov
or
mov
xorb
mov
sub
cltd
xchg
call
cmpsb
sbbb
jns
mov
lods
test
pop
inc
jg
xchg
mov
loopne
ljmp
mov
xchg
xor
lret
add
or
dec
push
fidivrl
fsubs
cmp
mov
imul
mov
ja
or
test
js
sbb
gs
sbb
cltd
add
in
or
push
push
loop
pusha
jno
dec
add
mov
shll
sub
lods
jmp
push
hlt
pop
push
jo
out
cmp
sub
leave
das
push
fcoms
pop
icebp
scas
and
mov
stos
test
pop
daa
popa
ds
add
mov
fmulp
jno
mov
lahf
inc
jl
xchg
in
adc
loop
ljmp
jno
push
push
jmp
popf
pop
pop
dec
popa
xlat
sub
pop
or
roll
mov
ss
stos
and
mov
mov
rclb
lds
lea
mov
outsb
ss
lock
stos
mov
lcall
lock
mov
sub
ret
lret
and
mov
inc
pop
repz
sbb
dec
cmp
fmull
pop
lock
clc
stc
sahf
sbb
cmp
idivb
ljmp
hlt
or
sub
jp
sbb
test
je
push
ss
mov
mov
dec
or
ljmp
rsm
ds
stc
push
mov
pusha
sbb
in
js
sbb
sub
mov
adc
mov
nop
pusha
or
in
jecxz
addr16
xchg
xor
ds
movb
nop
mov
cltd
fwait
cmc
and
dec
jp
cmc
push
dec
enter
stc
scas
lea
sahf
popa
adcb
cmp
sub
ja
push
hlt
xchg
pop
sti
test
sbb
pop
adc
loope
cmp
or
sbb
jns
aas
push
movsb
js
es
stos
cs
imul
movsb
pop
cmpsl
jge
push
push
js
push
addr16
fwait
sahf
pop
lds
int3
shrl
adc
cmp
imul
data16
cmc
test
shl
adc
mov
jb
cmc
or
test
repz
push
sub
into
push
xlat
mov
movsl
insb
gs
aas
fiaddl
jb
cmpb
les
loopne
jns
in
pushf
add
jmp
add
iret
xchg
or
mov
and
notb
or
loopne
jp
push
lcall
fcoml
notb
and
pop
pusha
test
sbb
repnz
loop
push
movsb
popf
and
out
push
bound
cs
inc
inc
ss
or
pushf
and
mov
add
icebp
pop
jnp,pt
xor
shlb
pop
jo
mov
loopne
les
mov
mov
add
ret
lahf
or
insb
idivb
cmp
add
sub
addr16
push
test
pop
popa
or
sub
imul
mov
mov
xchg
aas
jbe
and
popf
aas
sbb
test
cmpsl
cli
xchg
insb
cmp
fiadds
stos
xor
xor
mov
cmp
loopne
xor
cmp
push
add
mov
ljmp
jecxz
out
ret
adc
shlb
sti
int
jl
imul
push
or
and
test
jno
jb
sbbb
xchg
mov
inc
sbb
pushl
cli
push
fistpll
into
test
or
test
jo
imulb
cmp
movl
fdivp
sti
inc
ds
mov
sti
sbb
daa
add
idivl
inc
lret
push
frstor
ror
pusha
pusha
sti
mov
cmpsb
ljmp
je
xchg
sub
movsl
clc
jle
lret
gs
test
nop
ret
mov
mov
movb
out
push
dec
js
dec
lods
push
icebp
out
pop
sbb
mov
mov
fisttpl
dec
je
fwait
shrb
repz
pushl
loope
pop
scas
xchg
aas
mov
push
pusha
xchg
and
les
xchg
fsubrs
sbb
fs
add
ret
repz
xchg
jge
sub
das
xchg
mov
xor
adc
sbb
sbb
call
adc
daa
roll
pop
or
sub
jnp
ficompl
and
sar
cmpsl
xchg
or
adc
fstpt
data16
fimuls
stc
je
mov
flds
roll
je
in
add
mov
bound
int3
adc
repz
repz
push
mov
add
push
xorl
pushf
and
lods
add
mov
mov
adc
popa
pop
stos
xchg
xchg
pop
and
push
push
xor
inc
js
rcrb
push
bound
pop
enter
loop
mov
sub
xchg
jl
jo
jbe
mov
pushf
movb
inc
sub
or
cmpsb
out
pop
lea
adc
in
cmp
adc
sub
in
push
enter
scas
es
adc
out
sbb
jmp
fwait
leave
add
iret
jo
cmc
mov
mov
into
jbe
jo
lods
negb
dec
adc
jle
sub
sbb
out
hlt
adc
mov
data16
mov
jns
xor
adc
test
imul
mov
fisttpll
lret
jecxz
in
test
or
aad
add
xchg
fdivp
xor
mov
sbb
je
jo
aas
rcr
and
sub
xor
pop
push
test
sbb
aas
shl
xor
int
cs
idivl
dec
int3
fcompl
sbb
xlat
fistpl
xchg
addr16
mov
popf
add
ds
and
push
xor
int
push
add
pop
cmpsl
mov
cltd
push
adc
and
test
xor
sub
lret
insl
xchg
les
sti
cmp
sahf
cltd
mov
int3
push
mov
addl
aam
mov
shlb
fisubrs
lods
dec
sbb
jb
sbb
sub
xor
arpl
les
popa
inc
xor
cmp
sbb
xchg
ffree
jmp
inc
in
in
dec
outsb
orl
fdivs
ret
adc
rorb
scas
mov
sahf
shl
cmp
popa
jmp
xchg
leave
push
xchg
or
push
mov
dec
xchg
pushf
pop
stc
inc
jle
mov
lods
bound
clc
mul
test
and
pop
mov
repnz
sub
bound
sbb
pop
out
mov
push
icebp
movsb
into
icebp
fs
sbb
sub
xchg
in
mov
lcall
fcoml
loop
pushf
lret
xor
pop
aad
pop
mov
xchg
inc
in
out
inc
mov
fs
scas
or
xchg
shll
cld
daa
mov
jle
inc
sbb
and
dec
je
xor
mov
push
inc
push
add
jns
push
inc
cmc
xor
xchg
fwait
cmp
aaa
xor
dec
mov
sahf
sbb
shll
xor
sbb
cld
fwait
sbb
sub
mov
pusha
movsl
fldl
push
in
pop
insb
or
push
push
test
or
sbb
or
inc
push
jle
hlt
dec
jl
adc
adc
lcall
push
inc
push
mov
arpl
push
mov
ret
xchg
fisubrl
lret
outsb
andb
ljmp
cmp
out
jmp
adcl
sbb
sbb
or
lcall
repnz
stc
pop
imul
movsl
cmp
ret
push
jo
push
test
out
push
outsb
fldl
dec
lea
xchg
lahf
mov
ror
dec
and
push
mov
scas
out
cmp
icebp
push
ss
adc
lock
cmp
sarl
pop
cwtl
jb
xchg
sbb
mov
dec
nop
xor
inc
leave
dec
and
arpl
xchg
adc
mov
cmpsl
xlat
pop
dec
push
cli
flds
or
jns
sub
jbe
dec
rcrl
stos
fldenv
mov
sbb
test
scas
or
inc
or
ja
negb
dec
push
jge
and
stc
mov
sarl
in
sbb
insb
xor
dec
inc
mov
out
sbb
lods
dec
mov
icebp
imul
iret
inc
fidivrl
jns
mov
out
cmp
xor
or
and
into
rcll
fdivl
mov
pop
aam
mov
pop
jmp
aad
inc
adc
dec
cmp
dec
dec
aam
push
mov
stos
test
sub
das
ljmp
pusha
testl
aas
subl
pop
pop
cli
pop
hlt
call
sub
sti
sub
nop
push
push
mov
or
sbb
mov
dec
scas
jbe
jmp
sbb
aaa
adc
or
cmc
aaa
test
imul
sub
out
add
sar
push
repnz
xchg
enter
mov
decb
mov
mov
inc
mov
andb
inc
aad
jo
jp
jecxz
cmp
mov
dec
sbb
cmp
stos
stc
cmc
and
mov
adc
pusha
lahf
pusha
cmpsl
push
mov
push
aaa
jne
cmp
and
mov
mov
mov
loope
pop
mov
rcl
in
jp
movsb
aas
sbb
xchg
loop
out
push
or
or
adc
arpl
lahf
jns
jae
mov
or
xor
pop
add
pop
jnp
stc
movsl
fs
stos
outsl
leave
int3
dec
mov
les
addl
cs
adc
add
lahf
cmp
jg
imul
mov
scas
xor
dec
mov
xchg
imul
stos
sbbl
xchg
or
or
push
mov
lret
sub
add
adc
lret
adc
and
nop
and
pop
nop
pop
aaa
push
and
cld
inc
xor
enter
mov
sub
push
jo
xor
out
sbb
push
mov
mov
jl
pop
adc
add
inc
fcom
jb
stc
xlat
mov
out
xchg
pop
mov
push
shll
ja
jns
sbb
sbb
inc
jns
popa
pop
or
inc
push
dec
pop
and
inc
jp
loop
adc
push
xor
or
loopne
ja
mov
lahf
or
sarl
dec
arpl
test
lock
mov
mov
fcompl
fcos
data16
xor
push
adc
inc
mov
xchg
xchg
push
neg
in
ja
add
rcll
jns
adc
fmul
dec
gs
mov
and
and
fidivrs
cmpsb
loop
les
les
jle
insl
jmp
insb
out
mov
xchg
pop
mov
cs
xorb
sub
fbstp
and
pop
inc
outsb
rol
js
push
loopne
inc
inc
pop
into
jne
dec
mov
fisttpl
lods
jle
es
les
in
add
dec
ljmp
mov
imul
hlt
hlt
mov
and
scas
cmpsb
push
cmp
xchg
enter
mov
dec
popa
lods
push
sbb
fdiv
leave
fwait
pushf
sbb
cmpl
mov
pusha
lods
mov
push
cmp
loope
addr16
xlat
or
into
shll
fsubrs
cmpsl
fsub
loopne
rcrb
xchg
pop
pop
fstps
push
jae
scas
out
nop
mov
test
fmull
adc
stos
outsl
jb
in
push
cmpsl
xchg
out
jge
int
push
loop
and
out
in
test
jle
mov
repnz
and
inc
out
mov
aaa
leave
icebp
pop
add
cmc
clc
pushf
insl
mov
gs
sub
or
jp
in
mov
popa
and
xchg
or
cmc
aam
stos
out
cmp
mov
xor
mov
clc
mov
cmpsb
xchg
lahf
stc
sub
mov
mov
lea
mov
lcall
or
mov
pop
mov
cmp
pop
inc
xchg
pop
mov
or
push
je
mov
stos
rorb
shrl
xchg
ja
pop
les
fmul
sti
pushf
fcmove
inc
xchg
or
das
push
insl
int3
mov
cs
adc
movsl
xorl
daa
lret
lods
and
outsl
mov
imul
sti
jb
popf
in
mov
xor
dec
das
int
sbb
lds
jle
cmpb
push
push
shrl
cmc
or
arpl
lret
repnz
pop
test
nop
addr16
and
aad
lret
xchg
or
jmp
out
ret
cmp
cwtl
or
cmp
lahf
push
mov
imul
dec
loope
push
xor
lret
fnsetpm(287
push
into
jb
ficompl
pop
jle
dec
push
sub
push
pop
iret
add
adc
imul
std
test
das
adc
sbb
sub
int
fisubrs
dec
or
sub
sbb
cmp
repnz
sbb
jnp
mov
adc
divl
lret
je
and
pop
inc
shl
fsub
cli
imul
lea
scas
lcall
lds
aam
imul
ds
dec
cmpsb
adc
push
jmp
lret
addr16
adc
pop
xchg
test
and
ret
push
cwtl
xchg
ds
dec
lods
cmpsl
shll
pop
xlat
andb
loopne
pushf
jbe,pt
lcall
pop
or
scas
adc
and
mov
inc
aad
test
mull
xchg
wbinvd
daa
sub
mov
xchg
mov
lcall
mov
cltd
shlb
and
mov
inc
ret
fdivr
jle
das
or
pop
aad
scas
je
sub
mov
mov
outsl
pop
and
hlt
xchg
xor
sub
int
stos
xchg
and
push
jle
ror
aas
sub
mov
outsb
notl
xchg
test
inc
mov
rorb
push
lods
stos
cmpsb
sbbb
ljmp
out
sbb
sahf
movsl
std
cmpsl
out
xchg
mov
ret
add
fsubrp
dec
or
cmp
int
les
inc
scas
fisubs
cmp
fcomps
iret
dec
out
repnz
test
xor
ja
dec
mov
jnp
inc
and
mov
sahf
test
psrlq
xor
push
adc
loop
les
insb
cmc
ficomps
dec
adc
mov
lret
fidivs
fwait
push
xor
in
out
lea
push
sbb
xchg
cmp
xor
jo
shr
adc
mov
xlat
ja
aad
cmp
and
popf
sub
xchg
int3
fnstsw
push
dec
add
adc
insl
lcall
lcall
in
pop
inc
inc
mov
xchg
data16
out
push
push
dec
daa
leave
outsl
inc
in
mov
in
dec
js
scas
mov
filds
sbb
pop
dec
divb
jno
pop
or
cmp
push
cmp
cmp
sub
inc
outsl
mov
test
int
aaa
pusha
xor
mov
pop
push
mov
enter
ja
push
fstpl
enter
mov
inc
or
sub
fiadds
out
dec
je
jge
cmpsb
mov
pop
jmp
xor
call
aas
adc
xchg
xchg
divb
add
sti
pop
add
jae
push
inc
sub
pop
add
mov
mov
lret
inc
adc
outsb
aad
aas
pop
fnsave
out
pop
test
dec
in
lret
lea
xor
mov
adc
cmc
in
pop
cli
add
and
push
sbb
dec
mov
push
jle
fs
jge
jp
mov
cld
ljmp
mov
inc
mov
adc
call
and
lahf
mov
iret
and
or
in
outsl
adc
mov
xor
inc
push
ljmp
addr16
std
lea
inc
dec
push
lods
xchg
repz
pop
out
and
or
lock
movsl
in
push
mov
dec
dec
test
push
sbb
add
outsl
mov
cmc
or
mov
das
jl
pop
mov
mov
cmp
lcall
adc
orb
test
jp
push
sbb
pop
movsb
xor
and
and
movsl
pop
mov
fwait
push
mov
aam
pop
rol
push
dec
push
jmp
and
stos
and
enter
mov
xchg
mov
cmp
sub
dec
dec
mov
loopne
fcomps
mov
shrb
orb
outsl
cmp
or
shl
jmp
or
js
mov
fnstenv
pop
cwtl
adcb
aas
push
cmpb
sub
jmp
jbe
dec
adc
ret
aad
push
mov
xchg
adc
mov
test
jno
sub
pop
mov
ljmp
jb
sarl
testb
inc
cmp
sub
lahf
out
sbb
iret
add
std
jl
push
es
mov
inc
inc
add
inc
push
xchg
mov
xchg
pop
inc
movsb
xchg
test
mov
xor
sbb
push
scas
xor
cld
cmova
fnstsw
stc
adc
xchg
mov
xchg
outsl
fdivrs
xchg
pop
jmp
fwait
in
stc
int3
push
inc
xor
ret
or
les
mov
repz
in
out
and
and
mov
lea
aas
lods
aaa
push
iret
cmp
das
loope
mov
dec
mov
xor
shlb
les
cld
adc
push
lret
fs
sub
inc
insl
loopne
orl
std
push
inc
inc
or
pop
xorb
xchg
subl
xor
dec
sub
mov
cmc
test
cwtl
pop
insl
or
into
jne
jno
mov
pop
inc
pop
lods
gs
insb
xor
pop
cmp
mov
adc
mov
in
inc
pop
xorb
aad
jp
xor
cwtl
cmp
adc
je
adc
out
int3
mov
stos
jmp
cmpsl
adc
cli
mov
add
dec
rolb
es
mov
aaa
lret
pop
call
das
push
repnz
sbb
mov
fwait
inc
jg
insb
mov
idivb
mov
pop
and
nop
fldl
push
rclb
adc
in
repnz
fisubs
test
gs
mov
pop
enter
inc
stc
pop
aas
mov
repz
pushf
icebp
movsb
movsl
xorb
cwtl
mov
lret
xor
xlat
pop
jb
xor
mov
rsm
dec
and
repnz
sbb
or
add
xchg
dec
out
aam
dec
test
push
cltd
push
sbb
pop
lods
dec
je
and
jge
adc
ret
fsubrs
mov
cld
xor
aam
xchg
cmpsb
jne
aas
icebp
lret
in
stos
pop
cs
lds
mov
repnz
fbld
divl
adc
pusha
mov
es
gs
imul
mov
or
fisubrl
xor
or
push
mov
and
mov
and
clc
aaa
cmp
mov
mov
push
mov
cltd
subb
subb
inc
jne
push
inc
push
in
mov
xchg
lret
adc
cmp
sub
sbb
lods
dec
sbb
or
movsb
shl
loopne
pop
mov
lea
fst
dec
sub
or
sub
sbb
mov
les
xchg
sub
sbb
adc
pushf
stc
push
inc
loop
les
leave
stos
or
push
orb
pop
mov
cld
scas
pop
or
in
daa
xchg
add
push
lea
loope
paddsb
xor
cli
clc
js
adc
mov
xchg
xchg
mov
xchg
fldenv
out
sbbb
mov
mov
mov
pushf
fldl
xor
cmc
fisubl
repnz
ffreep
xor
stos
ficomps
jo
inc
pop
stos
dec
scas
jb
mov
jns
adc
mov
xchg
xchg
pop
ret
xor
icebp
test
dec
add
jae
ds
stc
fldenv
dec
insb
out
loop
xchg
into
and
sahf
scas
xlat
jae
mov
push
testb
out
int3
pop
sub
mov
fdivl
mov
mov
cmc
movsw
push
gs
cmp
push
mov
dec
fs
jbe
mov
mov
nop
or
mov
rcl
sbb
add
lcall
sub
cld
sahf
inc
cltd
das
pop
add
push
cmp
xorl
ret
jne
fidivs
outsb
xorl
jle
inc
mov
sub
sub
lahf
jne
xor
mov
gs
cmp
rcr
movsb
cmc
cmp
pop
and
push
out
cli
shrl
es
mov
jb
ljmp
movsb
in
shrb
fwait
sub
adc
int
add
nop
das
cmp
mov
jb
inc
bound
cmpsl
inc
mov
int3
scas
icebp
out
mov
push
stc
ret
sub
or
mov
mov
cmpsl
addr16
sti
js
mov
test
ja
ja
and
lods
adc
pop
fsubrl
cltd
xchg
and
dec
scas
sbb
jp
push
lret
cli
out
adcb
mov
shl
ret
leave
or
jl
insb
imul
punpckldq
pop
stos
not
mov
sub
mov
test
jmp
es
test
sti
repnz
fwait
into
pop
xor
repnz
pop
cmp
fildll
outsl
sub
insl
cli
sub
xchg
mov
dec
rcrl
ret
popa
pop
cmc
orl
xchg
cwtl
scas
pop
inc
or
das
jge
cmp
push
adc
es
sarb
pop
sub
call
add
mov
insb
dec
repnz
inc
push
call
pop
sub
jbe
xchg
add
push
or
sub
pop
loop
popa
loope
jmp
xor
stc
fldenv
out
sbb
hlt
mov
add
mov
pop
push
add
or
outsb
movsb
pop
jecxz
xchg
imul
arpl
mov
rcrb
jg
push
rolb
nop
cmpl
jecxz
repnz
mov
inc
pop
adc
cmp
nop
sar
call
add
iret
call
test
loope
cld
es
jns
daa
cmp
dec
mov
or
in
ffreep
cmpsb
leave
insl
mov
dec
testb
sar
pop
test
push
cmp
lret
fidivrl
bswap
and
adc
xchg
cmp
fbstp
jmp
inc
lods
pop
inc
sbb
out
bound
subl
scas
push
insb
add
shll
aas
out
ror
arpl
add
sti
pusha
or
mov
xor
dec
enter
stc
arpl
and
adcb
daa
mov
mov
and
mov
xor
aas
jecxz
int
push
push
lahf
repnz
out
lahf
xor
test
jmp
cli
sub
fldl
pop
push
mov
leave
xorl
push
mov
cmp
in
lea
sbb
icebp
bound
jmp
add
into
push
and
sub
xchg
adc
arpl
push
pop
imul
popf
sbb
dec
dec
pop
int
sarb
in
leave
add
sahf
scas
adc
jnp
or
test
inc
icebp
pop
xchg
mov
ss
cmp
loopne
out
pushf
outsl
adc
bound
xlat
daa
sbb
test
jnp
or
into
jmp
mov
fstp
xor
xor
jbe
jns
pusha
pop
adc
hlt
dec
mov
mov
jo
cmp
fists
sub
mov
inc
and
inc
in
test
xor
insl
mov
aas
aam
out
push
mov
iret
imul
push
xor
scas
out
dec
sbb
mov
std
dec
fidivrs
mov
cld
adc
je
das
or
movsl
ja
testl
repnz
mov
pop
pushf
jp
fisubl
xchg
jbe
pop
fs
arpl
fwait
js
jne
xchg
xchg
jmp
aam
xlat
mov
and
int
andb
jns
pop
mov
ret
cs
int
jbe
cmpsl
cmp
inc
sub
pop
aad
adc
sub
ret
lret
mov
mov
cmp
scas
mov
mov
jns
scas
ss
loope
popf
cmp
call
and
icebp
adc
mov
push
jo
test
into
push
inc
jno
mov
push
shll
or
inc
jbe
int3
and
cmp
push
jmp
fwait
and
add
pop
loop
ret
sbb
mov
bndldx
inc
mov
lret
and
xchg
push
adc
push
push
jp
lret
arpl
jne
push
inc
out
out
mov
adc
stos
mov
pushf
xor
enterw
mull
adc
fnstcw
xchg
cmp
sbb
sub
lret
inc
jne
cmc
jge
or
inc
inc
test
dec
ds
push
xchg
jne
mov
xlat
push
pop
cld
arpl
mov
push
mov
xchg
sbb
daa
loop
dec
fsubp
pop
sbb
test
aad
pop
xchg
aas
loope
cs
inc
jnp
inc
push
push
inc
inc
movsl
pop
jne
mov
movsl
shlw
mov
in
jecxz
pop
xchg
rorb
cs
sarb
cmp
dec
mov
fs
andl
lcall
data16
push
aaa
loop
test
sbb
or
inc
imul
mov
int3
loopne
adc
dec
hlt
mov
xor
cmp
cmp
scas
cmc
and
ror
std
mov
sarb
cltd
scas
arpl
fcmovnbe
adcb
push
dec
test
push
test
jle
dec
addb
adc
call
popf
dec
aam
cmp
sub
inc
ret
repnz
mov
shlb
cmp
push
insb
in
movsl
and
inc
pushf
rolb
jae
insl
ss
and
clc
ret
repz
int3
sbbb
xor
aaa
jae
mov
loopne
pop
xchg
arpl
push
inc
les
jmp
mov
in
repz
cmp
and
inc
xchg
sub
or
das
mov
lret
xchg
push
in
subl
push
imul
aas
cwtl
xchg
xchg
repz
and
fcoml
lcall
fcmovnb
xor
hlt
jae
cltd
mov
imul
xchg
cld
and
add
adc
les
and
in
xchg
ljmp
rolb
in
mov
cmp
jo
test
xor
jns
xor
sbb
repz
bound
add
fisubs
out
addr16
mov
xchg
adc
loop
push
int
mov
or
pushf
mov
inc
imul
inc
test
das
out
dec
ljmp
js
jbe
rolb
in
addr16
add
push
in
lret
mov
jg
and
fsubrs
cmp
sub
push
dec
stc
pop
xorb
mov
insb
pop
ret
sbb
sbb
add
adc
mov
lods
xor
adc
outsb
lds
add
or
jae
xor
sub
jg
pop
repz
xor
shll
aam
cmpsb
xor
repnz
push
mov
jecxz
xor
mov
fs
or
faddp
sarb
mov
pop
pop
inc
aam
sarl
movsl
xchg
mov
in
sub
xchg
repz
dec
mov
outsb
sahf
adcl
test
inc
insb
pop
cmp
pop
mov
and
jns
cmp
sbb
xchg
insb
lret
xlat
int3
inc
fisttpl
mov
jne
dec
xchg
or
cwtl
dec
add
mov
sub
xchg
xor
jmp
add
push
cmpb
dec
adc
mov
test
mov
mov
stc
subb
movsl
rcll
dec
clc
cmp
jbe
jl
sbbb
adc
loope
mov
jo
mov
cld
lods
xor
rclb
inc
and
aad
pop
lock
fidivs
inc
jb
push
dec
pop
ss
fxch
sti
sbb
repz
jnp
cmpsl
loopne
lret
cmc
jae
adc
loopne
enter
mov
or
jno
gs
cltd
xchg
fcom
in
push
imul
movsb
add
aam
mov
adc
or
or
fs
repz
cld
mov
mov
or
sarb
jne
out
pop
inc
fucomp
inc
lret
mov
mov
mov
jle
pop
aad
jge
mov
addr16
and
mov
add
add
scas
mov
or
repnz
or
mov
ds
push
enter
aas
ljmp
addl
insl
leave
repz
xor
pop
cmp
cmp
adc
lock
add
repz
stos
bound
xchg
or
fisubrs
mov
lahf
mov
xlat
test
imul
mov
es
js
dec
adc
fsts
adc
test
mov
cmp
adc
lret
test
leave
jb
pop
inc
outsb
xor
fcompl
pop
cld
add
enter
dec
inc
movsl
mov
popf
adc
jp
jmp
lahf
mov
ljmp
and
scas
jl
pop
bound
out
xor
cmp
leave
adc
inc
test
cwtl
inc
cmp
int3
int
fldl
mov
and
push
setb
push
mov
cltd
popf
mov
insb
mov
dec
dec
into
or
lret
aas
aaa
aam
negl
cmp
mov
and
sbb
inc
dec
push
mov
dec
cmpl
add
mov
xchg
dec
jnp
add
scas
or
mov
and
test
cmpsb
mov
jo
mov
xor
imul
mov
xor
faddp
pop
mov
pop
sahf
mov
xchg
cmp
es
leave
shlb
or
xchg
jg
adc
mov
pop
std
cli
xchg
xchg
icebp
movsl
popfw
icebp
jp
outsl
es
rcll
ja,pt
fwait
adc
cmp
jecxz
cltd
and
jmp
out
sbb
push
mov
ss
aas
test
mov
lds
stos
fisttpll
negl
push
insb
jp
mov
add
ja
call
popf
pop
addr16
jb
sti
dec
add
xchg
sbb
inc
or
pop
xlat
inc
mov
dec
mov
sub
xchg
ljmp
andb
cmp
inc
and
xchg
adc
mov
mov
mov
mov
dec
adc
push
and
ret
xchg
push
jp
adc
pop
fstpl
mov
out
mov
loop
push
push
jae
rorb
mov
andl
cmp
add
mov
inc
mov
mov
neg
iret
lods
dec
lea
aaa
cs
jle
fs
shl
das
push
in
mov
nop
cli
stc
jp
cld
mov
rcr
popa
adc
popa
pop
inc
ror
and
ficoml
fidivrl
clc
lcall
faddl
push
jmp
inc
add
push
data16
inc
mov
dec
xor
data16
xlat
ss
hlt
push
clc
dec
cmp
scas
lock
dec
fsubr
dec
mov
inc
mov
jge
dec
iret
xlat
push
mov
pop
or
push
dec
notb
jno
movsl
cmp
add
inc
push
fsubrs
dec
push
hlt
dec
add
fnsave
outsl
ret
push
xchg
dec
jmp
icebp
mov
jno
push
sbb
inc
xchg
fld
out
sbb
push
not
xchg
xchg
mov
pushf
ja
add
ret
shll
into
lcall
cmp
and
movsb
and
outsl
subb
push
in
push
arpl
push
jne
lret
push
pop
inc
jge
mov
cld
jns
div
inc
aam
mov
jge
dec
dec
mov
hlt
or
insb
and
js
roll
movsb
inc
sarb
lahf
rcl
push
or
sbb
dec
fistps
and
cwtl
xor
pop
fsubrl
cli
xchg
jmp
fstps
outsb
cmp
cmpsl
dec
or
shll
jmp
call
jl
or
push
adc
in
xor
xchg
daa
add
aaa
jo
sub
add
adc
insl
inc
pop
fiaddl
dec
adc
jo
add
jle
mov
xchg
fst
adcb
or
iret
icebp
mov
orb
jmp
loope
mov
scas
xor
scas
cltd
and
mov
pop
ljmp
frstor
xchg
pusha
mov
jg
jb
mov
sbb
ficompl
sti
cmp
adc
xchg
stc
lods
aaa
sub
inc
cmc
icebp
xor
jg
ja
mov
or
add
enter
sub
loope
enter
data16
out
push
js
inc
sub
cmp
in
movsbl
jge
aas
mov
aas
sub
jne
in
shlb
imul
pusha
pop
jb
lods
add
cmp
loope
in
inc
inc
pop
pop
dec
mov
fists
add
test
mov
lock
popf
mov
mov
stos
and
pop
push
jb
push
pop
nopl
push
cmp
divl
inc
xlat
pop
dec
push
cli
imull
add
scas
insb
addl
aam
xchg
sbb
icebp
mov
xor
data16
lahf
nop
in
fidivl
mov
cmp
push
popaw
mov
inc
pmaxsw
sub
aad
add
scas
add
sti
xchg
icebp
or
pusha
les
addr16
ds
int
clc
mov
addb
or
adcb
cmp
not
mov
inc
popa
xchg
int3
std
lods
ljmp
mov
shll
push
es
and
test
cli
jge
into
aad
es
dec
xchg
xlat
add
adc
jne
cmp
mov
dec
jg
inc
xchg
mov
scas
pusha
mov
cli
enter
lret
mov
sub
gs
jno
icebp
push
icebp
into
jmp
or
pop
mov
scas
into
pushf
arpl
aad
pusha
jno
push
xor
mov
divl
cmp
pop
testl
pop
xchg
out
clc
imul
movsl
adc
add
jmp
pusha
je
pushf
mov
sti
fld
enter
mov
mov
insl
pushf
dec
cmp
mov
cmp
je
push
xchg
repz
mov
loopne
push
pop
icebp
notb
mov
sbb
push
lahf
push
xchg
mov
lds
mov
sub
push
popf
sbb
fadd
repnz
aaa
mov
scas
data16
loope
fistps
mov
add
cld
fs
pop
outsl
sub
dec
rcrb
call
mov
or
push
cmp
aaa
fiadds
addr16
sbb
lods
loopne
sbb
xor
cmc
dec
insb
jle
or
stc
rcrb
fsts
shl
pop
or
cmp
dec
xchg
and
pushf
sub
push
mov
pop
dec
sub
sub
call
in
stc
push
cmp
neg
out
cmpsl
pop
mov
inc
inc
call
jmp
xor
dec
dec
fstps
jo
rcrl
or
adc
mov
fidivrl
mov
call
imul
out
repnz
sub
ret
pop
cli
out
out
dec
cmpsb
and
sbb
inc
mov
gs
push
jge
mov
ja
and
adc
adc
outsb
into
xchg
mov
mov
les
mov
and
ds
add
push
mov
loope
flds
in
jl
xor
nop
stos
cmp
cltd
push
pop
cmp
adcl
stc
mov
repz
push
sub
sti
outsb
dec
inc
aas
into
rolb
adc
int
out
inc
std
sub
or
push
unpckhps
sub
outsb
cwtl
pusha
ljmp
gs
mov
insb
xor
dec
std
inc
xchg
jl
mov
fmuls
xor
ret
mov
push
push
ss
push
xchg
scas
dec
sub
repnz
pop
cmp
xchg
and
imul
loopne
rorl
xor
ffree
sbb
cmp
fnstsw
fimull
inc
pop
int
dec
sbb
lea
aad
fs
lods
rcrl
in
mov
cmpsb
data16
mov
ds
popa
sub
mov
or
int3
mov
or
sarl
ret
dec
ss
mov
addb
push
fbld
fs
jb
xchg
in
in
pop
xchg
mov
rol
jp
into
cmpsb
iret
cltd
xchg
mov
dec
sub
or
jno
in
scas
mov
adc
scas
fwait
mov
jge
ret
inc
cmc
out
add
cmp
jae
pop
pusha
addb
int3
mov
adc
mov
and
or
jnp
or
andb
ret
jl
xor
mov
push
arpl
mov
int3
int3
repnz
push
mov
push
pop
outsl
mov
xchg
sub
insb
jo
sub
xchg
inc
cwtl
test
xor
dec
xchg
cmpl
xchg
jecxz
mov
xor
dec
dec
cltd
lahf
test
jno
push
dec
add
arpl
inc
cltd
nop
fdivrs
mov
or
movb
jbe
cli
pop
cmc
cmp
das
mov
fisttpl
fdivs
cmp
aad
roll
mov
sub
imul
test
mov
push
sub
mov
jmp
or
add
out
ret
jne
repz
out
add
mov
test
push
cmpsb
push
mov
pop
pop
pop
mov
les
lods
xor
sub
jl
cs
nop
bound
pop
cltd
jbe
jbe
call
xchg
scas
add
or
and
cmp
add
push
sbb
mov
xchg
cli
rorb
or
aam
or
iret
and
call
shr
gs
mov
pop
outsl
and
xchg
aad
clc
mov
jg
mov
aam
cltd
dec
or
mov
mov
mov
mov
pushf
out
xchg
pop
xchg
hlt
ds
movsl
cltd
mov
shrb
leave
and
ret
and
jbe
or
jecxz
inc
xor
in
mov
adc
inc
mov
add
sti
jbe
or
sub
mov
imul
pop
in
cmpsl
lock
les
xchg
sbb
mov
adc
jle,pn
or
pop
rcrl
sahf
stos
out
push
push
or
loopne
pop
or
jmp
add
xchg
cmpsl
cmp
idivl
nop
push
xor
xchg
lea
stos
inc
add
push
sub
inc
pop
fildll
push
push
enter
fimuls
gs
mov
dec
andb
push
fldl
push
jp
outsb
es
imul
test
clc
add
jl
push
inc
mov
and
or
fisttpl
adc
sbb
lea
push
push
sar
fnsave
lods
adc
sub
or
lahf
add
rol
fs
aaa
repz
mov
scas
push
and
outsb
sbb
in
xlat
mov
out
pop
ss
sbb
pop
leave
mov
push
cs
mov
repnz
inc
ds
fs
test
cmc
cmpsl
aaa
push
dec
push
cmovbe
lods
shlb
or
mov
movsl
sarl
aas
jbe
sub
scas
fnstcw
xchg
sbb
mov
hlt
insl
xchg
pop
addr16
push
lods
jge
push
testl
sub
xchg
ljmp
sub
shrb
or
push
push
xchg
dec
int
inc
or
inc
std
and
repnz
xchg
fimull
gs
push
mov
xchg
or
and
and
dec
popa
sbb
dec
cmp
jecxz
data16
fdivl
push
pop
addr16
jnp
add
lret
data16
push
hlt
call
es
in
pushf
push
ja
pop
sub
aad
or
outsl
push
lds
fildl
cmpsb
test
sub
mov
jle
dec
arpl
lret
fnstsw
andb
filds
test
in
and
push
mov
push
pop
xchg
jns
push
test
mov
mov
pop
xchg
xchg
ud1
or
fwait
dec
xor
bound
shr
inc
cmpsl
aaa
iret
dec
jge
and
shl
xchg
scas
mov
data16
fisttpl
testl
cmp
xor
popa
jnp
ret
xchg
mov
cmp
mov
fdivs
popf
shrb
insb
mov
push
enter
mov
fnstsw
insb
jmp
hlt
xor
cmc
cmp
fcmovu
mov
fiadds
sbb
xchg
imul
jle
gs
cmp
xchg
jne
imul
sbb
imul
push
cmpb
pushf
sub
xchg
sbb
cwtl
mov
dec
xor
sub
jg
sub
pusha
add
ja
pop
cltd
cmp
repnz
and
in
or
or
rcll
add
push
jb
pop
dec
outsl
pop
push
push
adc
sbb
mov
lock
jnp
mov
movsb
sbb
pop
ja
call
bnd
dec
cwtl
sub
fwait
rol
sbb
out
push
cli
insb
js
pop
xor
xor
pushf
test
fisubrl
jge
leave
pop
adc
outsl
mov
pushf
int3
fsubrs
in
push
inc
add
cmp
and
iret
push
push
ja
cltd
les
pushf
xor
inc
fdivp
jo
mov
inc
lea
add
sub
xchg
and
cmp
jp
test
out
push
xchg
or
pop
and
popw
xchg
rcl
imul
sub
adc
mov
mov
pusha
icebp
stos
gs
mov
ss
sbb
push
out
loopne
cmp
cmp
adc
sub
xor
cmp
push
rcrl
test
fmuls
push
shrl
ficoml
cwtl
push
pushf
and
pop
push
jnp
or
add
cmp
xor
push
inc
sbbb
add
xlat
mov
fwait
rclb
pop
sbb
add
popa
ljmp
and
testl
hlt
icebp
mov
dec
mov
sub
testb
fidivrs
out
in
push
cmp
clc
test
mov
shlb
jb
or
inc
jns
sti
dec
movsb
pushf
mov
cmp
fstpl
pop
fimuls
shlb
aam
dec
leave
add
inc
jge
xor
inc
setno
test
and
mov
add
ds
stos
xor
das
dec
xor
jmp
mov
ja
cmp
or
mov
xor
divb
repnz
in
add
or
popa
dec
sbb
sbb
push
leave
data16
lea
xchg
push
pop
std
and
cmpsb
lcall
aas
lock
cmpsl
inc
hlt
add
addr16
sub
push
fnsetpm(287
add
mov
jmp
dec
int3
pop
jge
pop
dec
fcompl
mulb
clc
mov
jns
mov
xchg
sbb
jo
adc
fisubs
mov
and
scas
sbb
dec
imul
sbb
push
mov
mov
mov
push
xchg
add
jl
push
and
loope
aad
or
cwtl
push
sbb
inc
pusha
pop
orl
xchg
xchg
cmpsl
mov
add
dec
mov
pop
or
pop
lds
dec
adc
xor
adc
repz
cli
or
ja
sub
test
sbb
lock
and
or
roll
movsl
movsl
dec
add
into
jle
sbb
sbb
ret
jns
or
xor
fs
inc
push
push
fcoms
mov
xchg
enter
push
sub
std
icebp
lcall
inc
cwtl
lret
cmc
mov
push
notl
or
loop
xor
sarl
out
adc
jg
cmpsb
inc
adc
js
aam
daa
push
mov
jb
inc
fwait
cmp
adc
push
mov
ret
inc
xor
inc
push
mov
sub
out
dec
mov
es
mov
xchg
cmp
bound
sub
mov
int3
jmp
inc
invd
cmp
int3
pop
loop
dec
aam
popf
pop
repnz
xchg
out
loope
xor
fidivrl
add
or
aam
and
and
sbb
scas
cwtl
sbb
dec
mov
mov
xlat
ficomps
xor
js
fistpl
mov
xchg
test
mov
sbb
inc
inc
xchg
mov
repz
gs
sti
jmp
jb
fisttps
mov
sti
add
and
fs
mov
xorb
stos
pop
xorb
das
repz
or
in
pop
int3
xchg
add
call
adc
mov
xchg
push
mov
shr
jl
jb
sub
sub
jbe
test
add
aad
jo
movsb
or
sub
mov
inc
mov
ficoml
jle
cwtl
push
pop
frstor
push
stos
scas
aaa
ret
mov
xor
movsl
aas
aam
imul
push
icebp
imul
mov
mov
pop
in
sbb
mov
push
mov
hlt
pop
xchg
jne
sub
push
fsubl
leave
cld
lahf
xchg
mov
cmp
mov
sahf
adc
and
lds
outsl
cltd
enter
movsb
loope
sti
mov
mov
cmp
scas
test
test
xor
mov
xchg
es
and
pop
adc
pushl
pop
mov
mov
pop
dec
lock
jp
jl
push
add
lahf
call
push
popf
dec
aad
and
xchg
repnz
sbb
adc
cmp
mov
fimull
ss
lret
dec
jecxz
js
jg
imul
mov
testl
fstl
fldt
fidivs
js
jle
loop
jle
insl
ja
les
push
sahf
scas
pop
rorl
inc
rcrl
hlt
cmp
cmc
xor
pop
lods
sar
mov
mov
aam
loopne
jae
roll
les
pop
repnz
shlb
dec
adcl
pop
test
xlat
add
ret
outsl
pop
pop
inc
or
daa
sub
add
push
dec
leave
add
adc
jbe
js
dec
push
sub
sbb
add
ds
xor
or
std
js
ds
int3
or
shll
push
sbb
ss
popf
mov
je
inc
lods
inc
fimull
sbb
adc
rcll
ja
add
xor
sbb
aam
sbb
scas
call
test
or
inc
inc
adc
mov
or
mov
or
mov
fmuls
rcrb
in
xor
xor
mov
jg
mov
ror
jle
aaa
mov
xor
inc
push
mov
mov
xchg
add
and
mov
jge
imul
pushf
add
and
push
lret
xor
dec
mov
sbb
adc
and
in
dec
sbb
jp
lret
jecxz
mov
mov
test
cmpsl
mov
and
fptan
movsl
jecxz
rorl
shrb
cmp
dec
inc
mov
mov
cmp
adc
gs
push
cmp
xor
cltd
clc
xchg
into
mov
rcr
bound
test
mov
shl
and
cmp
xor
pop
and
pop
or
pop
mov
mov
and
jno
ret
lret
ss
stos
or
pop
inc
imul
mov
push
jle
pop
movsb
cmpl
push
and
mov
xor
mov
mov
dec
fisubl
mov
xlat
add
rclb
mov
mov
or
insl
mulb
mov
aad
cmp
filds
shr
js
lods
imul
lock
push
mov
bound
xlat
jb
add
imul
mov
lea
xlat
and
inc
ds
adc
sbb
out
inc
ds
iret
lock
inc
and
mov
jecxz
mov
pop
adc
sub
outsb
cltd
dec
nop
adc
inc
xor
test
dec
ret
or
jle
cmpxchg
jb
xor
out
incb
lahf
lret
or
jne
pushf
dec
dec
xchg
jb
push
daa
mov
mov
dec
cltd
mov
add
push
pop
mov
dec
int3
or
mov
mov
mov
xchg
nop
shr
aad
pop
loopne
lea
jp
mov
mov
outsb
xchg
rcl
pop
ret
and
xor
inc
test
add
ss
gs
xor
aad
xor
in
sbb
mov
dec
jge
sbb
push
jle
add
pop
mov
out
in
jp
fimull
jnp
test
popa
in
dec
in
loope
hlt
xchg
nop
pushf
jp
icebp
ja
cli
sub
loopne
jns
aaa
inc
sub
cwtl
in
jb
arpl
mull
roll
xchg
jne
inc
outsb
pop
std
frstor
cmp
push
pop
mov
pop
mov
xchg
insb
xorb
sbb
xchg
dec
or
lret
in
scas
arpl
sub
idivb
pop
lret
fisubs
outsl
add
loope
xchg
mov
or
mov
rcll
xchg
fildl
mov
adc
xchg
lret
or
fadds
stc
cmp
das
ljmp
sbb
lods
push
or
xchg
sbb
add
xor
gs
or
mov
mov
adc
or
std
adc
in
push
pushf
inc
pop
sbb
sub
sub
push
nop
mov
mov
nop
fists
push
out
inc
lods
je
jge
xchg
rcr
mov
dec
frstor
gs
pop
insl
jns
arpl
xor
ret
add
es
push
xchg
sbb
cmp
scas
ret
je
push
and
in
adc
es
pop
mov
add
add
xor
mov
sub
dec
ds
ret
xchg
jae
inc
jne
mov
std
les
jae
or
das
out
sub
jb
sub
jecxz
xchg
jns
into
sbb
jnp
pop
outsb
fcomp
pusha
cld
dec
int3
rcll
movaps
ficomps
mov
dec
xor
fiadds
ret
arpl
pop
sbb
aam
lods
shl
mov
mov
xchg
xchg
shll
ds
push
dec
xchg
cwtl
shlb
std
ret
cwtl
mov
cltd
mov
pop
cmp
xchg
inc
dec
mov
inc
enter
mov
popf
mov
stos
fptan
mov
sahf
jnp
or
inc
add
xchg
pop
sbb
add
sbb
notb
fdivrl
pop
push
dec
lea
int
push
lods
mov
mov
movsl
add
aaa
sbb
and
jge
das
icebp
xchg
imul
loope
test
aad
fs
pop
pushf
and
jmp
loopne
fcomip
test
xchg
and
gs
and
inc
jnp
sub
into
sahf
clc
mov
and
xor
ficoms
mov
and
dec
mov
xor
xlat
out
cmpsb
lods
cmp
andl
loope
loopne
arpl
add
hlt
jecxz
loopne
xchg
xchg
loop
push
push
inc
and
sub
mov
jg
ret
inc
sub
mov
xor
aaa
out
fs
data16
xor
jbe
push
sub
xchg
cs
out
test
pinsrw
outsl
cwtl
ss
decb
call
sub
dec
pusha
adc
arpl
repnz
ret
mov
mov
test
jge
shl
loope
or
out
int3
push
shlb
movsb
add
stos
addl
out
inc
inc
in
iret
je
rcl
cs
inc
scas
push
cwtl
push
mov
xor
xor
mov
into
fstpt
test
adc
mov
xchg
cmp
fs
nop
dec
lea
je
stc
nop
imul
addr16
shll
mov
mov
adc
push
add
fcomp
cmp
fnstenv
dec
ret
mov
push
xchg
sbb
xor
nop
pop
pop
lock
rcr
mov
push
jg
sti
jo
sbb
or
mov
mov
je
xchg
jnp
inc
cmc
cltd
es
mov
and
xlat
shlb
jbe
jnp
sub
mov
aad
ja
das
adc
xlat
out
cmp
mov
sub
sub
jns
les
mov
sbb
pop
fs
rorl
inc
int3
add
lret
popa
jg
and
in
adc
pusha
xchg
iret
nop
inc
hlt
push
sub
jmp
test
lcall
loopne
xor
rolb
mov
lahf
xor
inc
cld
mov
mov
pop
or
or
jb
jno
cmp
inc
shl
fsubrs
addl
cwtl
cld
in
sub
arpl
mov
insb
imulw
lea
imul
and
aad
adc
gs
sub
xchg
jno
mov
arpl
aaa
cltd
bound
xlat
fsubs
and
mov
cmpsl
and
or
jno
mov
mov
cmpsb
loopne
mov
mov
psubusw
lods
outsb
push
mov
frstor
jg
or
adc
aaa
stos
or
fstps
js
mov
call
imul
outsb
and
inc
loopne
int
enter
pop
xor
cmp
add
cmp
push
fsub
clc
ds
push
mov
or
xchg
pop
lock
out
push
push
mov
cmp
xor
or
test
test
sbb
popf
dec
jne
sub
mov
xchg
lcall
leave
daa
inc
adc
ja
shrl
jbe
fiadds
outsb
lods
sbb
test
inc
push
insb
and
fistpl
lret
clc
add
pop
jbe
fnsetpm(287
sub
mov
jmp
mov
scas
cmp
adc
inc
test
adc
aam
test
ret
pop
int
lea
xchg
sub
xor
mov
iret
dec
stos
push
push
outsb
push
adc
mov
inc
jb
mov
jno
popf
iret
fs
clc
add
pop
mov
xchg
inc
mov
test
xchg
adc
jne
mov
dec
orb
lea
filds
push
mov
sub
cmp
mov
ljmp
cmp
daa
jecxz
push
mov
int
outsb
push
dec
sub
dec
repnz
pop
cs
and
in
out
jo
enter
mov
mov
mov
and
pusha
loopne
mov
mov
sahf
loope
dec
jl
pop
xlat
dec
ljmp
dec
pop
subl
xchg
sub
mov
jnp
cmc
cli
aam
jle
dec
mov
sub
push
push
int
ret
lcall
fnstenv
push
hlt
cmp
lock
and
xchg
arpl
movsl
dec
pop
cltd
add
std
xchg
cmp
fadd
push
inc
mov
jge
xor
mov
orl
sbb
add
xchg
aam
dec
add
mov
mov
mov
mov
int3
rorl
sbb
xchg
pop
push
cmp
inc
lcall
in
or
cmc
je
jge
sbb
pusha
xchg
or
mov
aas
stos
icebp
mov
jae
pop
xchg
cmp
mov
cmc
mov
addb
mov
leave
jge
paddusb
jns
cli
addr16
lret
xor
mov
fiadds
sbb
sub
les
js
mov
aam
xchg
inc
iret
sub
sbb
mov
inc
add
ret
dec
stos
rorb
mov
ret
in
outsb
xlat
shrl
hlt
sub
pop
dec
push
xor
or
adc
rolb
movsl
mov
das
xchg
inc
push
inc
jge
mov
mov
xchg
push
mov
inc
adc
adc
cmp
mov
inc
std
in
adc
inc
or
cmpsb
stos
xor
sub
pop
je
adc
mov
pop
jge
jge
adc
dec
mov
sub
mov
xchg
sarl
mov
xchg
cld
cmp
imul
inc
lcall
xor
cmp
jne
xchg
loop
orb
in
insl
mov
iret
xor
mov
inc
xorl
xor
shr
scas
mov
rcrl
dec
fldcw
call
xor
shlb
addr16
push
xor
push
test
adcb
inc
test
add
pop
ja
xor
es
mov
pop
and
clc
and
add
push
shll
movsb
sub
je
sbb
jecxz
call
test
pop
adc
sbb
sub
xchg
cmpps
enter
inc
or
mov
mov
jns
loopne
dec
jl
sbb
enter
xchg
lcall
movsb
dec
mov
andl
movsb
push
out
jo
popf
mov
rcll
icebp
scas
jns
push
nop
arpl
mov
test
fidivrl
scas
in
inc
add
jne
push
mov
loopne
xor
js
gs
fldenv
xchg
inc
repnz
mov
ss
add
rcr
mov
pop
sti
mov
dec
xchg
lock
sbb
xchg
sub
mov
popf
adc
scas
xor
sub
sub
hlt
aas
inc
ror
cmpsb
pop
jns
jg
sub
rorl
out
popf
pop
popf
mov
cld
xor
lret
add
jno
mov
movsl
mov
pop
std
stos
popf
push
jns
mov
out
imul
xchg
sbb
cmp
xor
jns
add
xor
in
pop
imul
insl
lea
cwtl
scas
test
xchg
pop
outsb
cld
mov
int3
mov
js
lahf
jmp
pop
mov
push
data16
es
mov
pusha
xchg
data16
add
jns
daa
jg
int
out
sti
ljmp
cld
sbb
jge
pop
sub
std
xchg
lock
clc
subb
and
sub
cmpsb
insl
faddl
jmp
mov
fnsave
test
leave
mov
fdecstp
lock
cmc
mov
cmpsb
push
adc
add
mov
cmp
sub
or
mov
mov
in
pusha
cli
mov
clc
cmp
mov
add
movsb
inc
sbb
dec
adc
in
sbb
xor
adc
or
cmp
and
call
or
cmp
movsb
mov
xor
ror
inc
out
cmpsl
repnz
les
push
xchg
out
call
je
jmp
mov
test
sbb
push
aad
and
data16
sahf
daa
jbe
sub
and
push
jg
or
mov
cwtl
fisttps
aas
testl
test
inc
dec
lcall
pop
fadd
adc
mov
pop
lahf
jmp
ss
sub
jg
stos
movsb
cmp
dec
pop
js,pt
das
cmp
and
stc
mov
arpl
ja
jo
cli
bound
push
mov
cmovns
xchg
dec
jl
in
sbb
inc
out
les
js
and
or
push
in
and
enter
fdivrs
lods
push
mov
jbe
add
add
shrb
ficompl
scas
arpl
fcomi
ret
aad
int
shlb
push
out
mov
aas
in
icebp
and
or
cmp
idivb
daa
fistpl
out
mov
sub
pop
dec
jne
xchg
sbb
and
pusha
push
xlat
xchg
enter
unpcklps
iret
stc
aas
cmp
sub
sbb
mov
mov
mov
test
inc
inc
aam
add
pusha
daa
push
test
fstps
adc
je
dec
push
ja
and
jecxz
mov
mov
mov
addr16
push
das
inc
out
fisubrs
mov
inc
mov
loopne
fwait
test
sub
inc
xchg
lret
mov
fsubrs
adc
inc
xor
ret
xchg
push
push
push
dec
js
inc
xor
test
out
add
push
aaa
lcall
adc
and
jl
loop
pop
adc
pop
ret
arpl
sub
aas
sub
jecxz
jg
or
xor
jle
xor
js
and
jmp
mov
add
ret
sub
aas
mov
incl
mov
cmpsl
lods
sbb
pop
jmp
push
in
movsl
jge
and
sarl
jns
and
cmp
in
push
mov
add
mov
add
pop
inc
jmp
mov
add
lock
rolb
insl
cmp
add
and
out
jecxz
push
push
outsl
psrad
lret
inc
lahf
lret
pop
pop
orb
inc
std
mov
and
subb
mov
dec
sbb
andl
loope
in
push
inc
cli
mov
cwtd
sbbb
shl
push
aaa
ret
jmp
cmp
add
cmpsb
bound
push
push
or
in
repnz
mov
mov
mov
dec
sub
push
das
lods
fildl
xchg
mov
shll
sub
lods
aaa
xchg
adc
sub
cmp
jnp
lahf
push
inc
pop
sti
sub
cmp
sti
xor
lcall
mov
add
sbb
or
xchg
cmpsl
aam
loop
js
sub
dec
mov
gs
mov
test
cltd
movsl
mov
xlat
out
and
push
cmpl
mov
mov
sbb
fwait
mov
clc
push
jns
cmp
es
aaa
idivl
pop
mov
fs
push
loope
xchg
lahf
mov
cld
stos
mov
inc
arpl
fwait
lods
add
dec
dec
xor
mov
loop
gs
mov
repz
cmpsl
in
dec
adc
xchg
or
push
fisubl
sub
shll
dec
lcall
arpl
or
push
movsl
aam
push
xor
adc
fsubrl
push
aaa
pop
in
hlt
outsl
xchg
lret
inc
cwtl
ret
fwait
xor
add
xchg
dec
adc
mov
pop
cwtl
mov
cmpsl
sti
and
es
jl
std
pop
mov
stos
push
rcll
mov
push
out
jbe
test
dec
ret
ret
adc
dec
mov
or
dec
mov
mov
fwait
popa
pop
cltd
jge
les
mov
outsl
lods
add
mov
xor
xchg
add
mov
push
in
nop
xchg
out
movsl
adc
xor
stos
shl
push
push
xor
xor
add
test
inc
push
xchg
pop
pop
or
jbe
push
xor
ss
rcrb
jge
or
mov
adc
cmp
push
cwtl
cli
inc
int3
shrb
jne
in
fidivs
mov
inc
sub
test
jb
test
lds
loop
push
push
shll
lgs
popf
pop
dec
movsb
rorb
mov
push
cld
adc
add
add
ljmp
mov
popa
leave
mov
or
and
ror
es
es
inc
inc
mov
fimuls
fwait
arpl
sbb
rorb
lret
push
dec
fstpl
sbb
ret
ljmp
inc
fiaddl
lds
pop
outsl
jae
aas
dec
and
imul
leave
insl
or
imul
and
and
sbb
test
sub
in
imul
cmpsl
and
sbb
cmpsb
adc
imul
jecxz
gs
xchg
cli
outsb
push
mov
icebp
ljmp
mov
addr16
cs
outsb
jnp
xchg
adc
cli
shrb
push
xchg
mov
dec
pop
or
lahf
mov
sub
test
cmp
add
mov
cmp
in
mov
movq
out
mov
mov
sub
or
cmc
out
push
xor
push
incl
mov
inc
mov
push
ja
adc
imulb
loop
movsb
adc
xor
movlhps
dec
nop
sub
mov
inc
iret
inc
jae
shlw
sub
add
mov
jae
adc
cmp
sarl
cmp
push
popa
sub
and
inc
mov
mov
mov
loop
or
xchg
sub
add
in
mov
les
pop
dec
into
adc
push
add
lret
cmp
inc
cmp
shlb
adc
jmp
cmp
push
out
in
inc
lret
movsb
pop
fbld
and
and
test
add
rcl
imul
add
push
out
ret
jecxz
scas
fdivl
inc
pop
outsl
clc
jge
adc
push
shl
xor
lret
sub
inc
xor
xor
movsb
and
push
fiaddl
mulb
sbb
inc
jo
hlt
js
gs
das
call
cwtl
push
xchg
mov
cmp
ud1
jmp
stc
cmpsb
push
mov
jo
fstl
push
mov
mov
lcall
stos
movsb
jnp
xor
pop
fwait
add
jmp
sub
xchg
or
or
aaa
out
mov
adc
je
aad
jno
in
lcall
lahf
les
into
cmp
mov
jg
inc
call
popa
jmp
fisttps
incb
jo
cld
gs
jo
cli
out
dec
push
or
jecxz
cs
in
roll
sbb
push
cmpsl
push
scas
repz
cltd
pop
lods
scas
xchg
mov
rol
lret
mov
xor
and
test
dec
fsubl
adc
iret
std
or
loope
pusha
sarl
xchg
dec
mov
jmp
cmc
mulb
jo
lahf
sahf
dec
js
mov
or
fs
idiv
dec
bnd
adc
lods
adc
mov
pop
mov
push
stos
push
jecxz
das
push
fdivl
pop
imul
pop
fildll
iret
je
mov
das
and
imul
cmp
cmp
out
mov
ljmp
push
sbb
cltd
imul
mov
call
dec
fidivs
mov
xchg
sbb
rcr
mov
dec
outsl
aam
frstor
sbb
inc
fld
fildl
or
gs
cwtl
xchg
push
loope
mov
jae
mov
adc
xor
mov
addb
inc
imul
dec
adc
push
sbb
or
add
fdivs
pop
dec
push
gs
loope
and
lcall
ret
mov
sbb
pushf
jne
pop
movsb
test
adc
pop
lods
inc
mov
jno
cmp
fsubrl
sbb
mov
clc
je
push
movsb
push
sahf
and
cltd
jg
dec
sub
xchg
sub
jo
xchg
dec
and
stos
sub
inc
push
add
lret
aas
xlat
ficompl
lea
dec
inc
add
int
xlat
lret
cmp
in
sbb
iret
cs
dec
enter
add
aas
xor
cmp
xor
jnp
cmpsl
xor
sub
xor
pop
adc
int3
push
fistpll
insb
dec
fcoms
aam
adc
in
lcall
cmp
or
inc
gs
cwtl
jae
or
repnz
dec
test
push
mov
inc
nop
fcoml
cmpsb
addr16
jle
jo
repnz
push
aad
sbb
push
nop
cmp
out
adc
mov
lods
fndisi(8087
sbb
pop
dec
in
movsb
out
insl
jnp
adc
pusha
mov
cmp
xor
mov
shrl
mov
add
xor
and
or
cmp
dec
xorb
push
jne
push
pop
dec
aaa
mov
sarl
push
sahf
cmp
mov
xor
mov
and
mov
mov
sbb
push
insl
leave
push
inc
push
ret
roll
test
lods
xchg
call
cmp
adc
fwait
inc
fwait
inc
outsb
in
sbb
into
jo
sbb
hlt
xlat
das
cmc
lods
leave
pop
sub
add
mov
das
scas
jl
les
mov
sub
aaa
and
out
out
shrl
shl
mov
sarb
pop
nop
in
mov
test
or
cltd
imul
movswl
fists
xchg
xchg
dec
dec
jmp
in
or
xor
and
jae
into
sahf
inc
jb
cltd
out
fnstsw
mov
lcall
mov
and
or
jne
jl
les
loopne
sbb
jle
nop
pop
je
adc
out
or
lcall
dec
inc
lret
flds
mov
jo
int
flds
inc
push
and
out
xchg
icebp
xchg
jmp
inc
mov
enter
fcoms
dec
and
mov
mov
call
fwait
inc
mov
ds
push
cs
mov
xor
shlb
sbb
movsl
sahf
jle
jl
push
andl
icebp
cmp
jmp
sbb
xlat
pop
lods
stos
and
fdivs
jmp
pop
mov
add
icebp
fsts
mov
pop
dec
outsb
mov
test
lock
jecxz
push
mov
inc
out
xor
jmp
test
cltd
mov
mov
hlt
xchg
into
aad
mov
mov
mov
mov
ror
jno
fs
test
sub
in
jnp
dec
sub
rolb
psllw
mov
aam
ds
aas
mov
xchg
pop
popf
inc
rcll
mov
lock
jb
hlt
jmp
ds
lcall
pusha
imul
mov
pop
rcrb
cld
lahf
inc
insb
push
sahf
or
out
in
cmp
fldl
dec
popa
out
push
sti
xor
in
and
scas
movl
jl
fisubs
or
xor
data16
out
xlat
xchg
and
imul
jmp
ffreep
pop
lcall
push
js
mov
sbb
xchg
jnp
adc
mov
mov
jae
pop
pop
insb
repnz
enter
xor
fisttpll
popf
push
push
mov
xchg
iret
dec
push
out
dec
fsts
cwtl
out
xlat
and
es
sti
push
roll
or
cmp
bound
imul
mov
cmp
or
cltd
mov
xchg
stos
js
loop
lods
ret
fimull
add
add
data16
test
lods
shll
int3
or
dec
pusha
insl
pusha
dec
sub
std
int
xchg
cwtl
mov
arpl
mov
push
mov
dec
into
js
inc
xor
mov
lret
popf
dec
jnp
mov
lret
jp
pop
dec
inc
push
in
in
sub
add
stos
lods
cmc
aaa
xor
push
xchg
divps
in
je
push
adc
ja
stos
test
adc
psrld
or
in
lods
xor
test
test
iret
stc
mov
jns
lcall
mov
cmp
cmpsl
adc
sbbb
shlb
sbb
cmc
add
stc
xor
or
ret
test
mov
and
lods
sti
lret
scas
pop
test
arpl
jge
and
jecxz
mov
insb
imul
fwait
xchg
fiadds
adc
sarl
dec
add
jg
xchg
sub
insb
cmp
sbb
lds
loope
jl
inc
pop
lcall
mov
mov
pop
add
lcall
xchg
push
fisubs
inc
sbb
fsub
dec
loop
hlt
pop
and
cmp
icebp
add
and
cmp
dec
mov
ljmp
icebp
cltd
fstpt
pop
adc
mov
cs
repz
movsb
mov
orb
add
hlt
mov
mov
sarl
push
xchg
lock
out
push
rcl
dec
daa
shlb
mov
test
xor
in
mov
stc
cmp
xchg
xor
or
adc
push
call
adc
dec
data16
sub
out
cmp
aam
xchg
fildl
lock
dec
or
lcall
fidivl
rolb
pop
scas
inc
xlat
iret
outsl
stc
cmp
sar
inc
outsb
scas
push
pop
hlt
xor
test
pop
mov
push
addr16
dec
xchg
sub
adc
pop
add
sbb
adc
jae
add
fwait
cmp
and
cmp
lret
push
cli
jbe
les
lcall
mov
inc
mov
dec
pop
dec
js
and
jno
sbb
xor
jmp
jge
mov
stos
and
outsb
cvtps2pi
push
imul
xorb
adc
shrl
inc
add
jne
xchg
xchg
lahf
out
aaa
lcall
es
cltd
push
sbb
cmc
cltd
mov
dec
dec
out
or
mov
xchg
repz
xchg
xor
lret
cld
hlt
aad
icebp
imul
shr
xchg
add
stos
push
imul
in
lret
sbb
mov
clc
stc
ret
addr16
out
mov
cs
mov
inc
or
jg
xor
stos
and
nop
stos
mov
inc
xchg
and
cmp
inc
lcall
sbb
push
rcrb
mov
or
imul
xor
ret
rcrl
xor
mov
in
fidivl
sub
dec
jg
jns
loop
dec
ret
insl
mov
dec
es
cmp
xchg
popl
mov
mov
loope
popa
stos
hlt
add
hlt
js
fnstsw
rorl
fbstp
ds
inc
mov
stos
push
mov
mov
cltd
jne
rolb
cmp
iret
stos
dec
adc
push
cltd
imul
jmp
or
jge
adc
out
mov
xor
in
jecxz
fwait
repz
out
add
movsb
icebp
bound
je
mov
mov
jl
fwait
xlat
leave
pop
dec
lcall
adc
test
cli
pop
xchg
jns
in
jle
outsl
movsb
mov
cwtl
pop
add
push
and
scas
mov
pusha
sbb
or
scas
lock
pop
sbb
push
ss
cmp
cmp
mov
repnz
fistps
js
adc
fstps
dec
mov
mov
and
mov
sbb
nop
pop
insl
fs
jle
sahf
sub
or
mov
xor
sub
jae
push
repnz
push
push
xchg
sbb
or
loope
sti
and
fistps
mov
mov
enter
pop
imulb
out
xchg
and
mov
jnp
pop
mov
stc
movsb
movsl
mov
js
add
loope
ret
pop
jmp
test
add
sub
and
jg
lds
mov
ret
insb
xchg
cs
fcmovne
adc
jae
adc
pop
lods
fs
push
out
cmp
das
cmp
aas
add
or
mov
and
arpl
and
loopne
or
inc
add
lea
fistpl
enter
mov
sub
adc
mov
insb
fs
in
sti
out
stos
in
cmp
out
sub
das
inc
xchg
push
jne
dec
imul
xchg
xor
sub
push
bound
loope
add
cltd
je
jnp
add
jne
xor
into
cmp
iret
and
jge
roll
cs
out
or
xchg
mov
int
aaa
iret
or
mov
sbbb
shrb
pop
pop
mov
jecxz
inc
mov
xchg
inc
int
in
stc
out
das
mov
sbb
notb
cmp
push
push
call
fildll
addb
sub
sbb
and
stc
popa
inc
scas
movsl
int3
cmp
test
jg
push
jp
jle
inc
ss
fmull
add
daa
jp
and
push
mov
sbb
lds
lret
and
mov
inc
push
xchg
stos
cmp
iret
push
mov
add
mov
mov
stos
out
lods
dec
lods
ret
test
pop
ja
and
inc
lods
out
nop
ret
or
nop
fcmovne
stos
imul
cli
daa
sbb
push
imul
mov
adc
test
lods
sti
dec
push
xchg
xor
int3
adc
mov
fcoml
xor
mov
add
movsl
xor
fstps
cmp
jge
pop
jmp
add
sub
dec
mov
sbb
cwtl
inc
imul
mov
cmp
in
xchg
push
fstpl
data16
xor
insb
js
inc
and
aam
jp
fs
dec
and
inc
jo
mov
mov
rcr
test
cmp
pop
add
push
arpl
inc
dec
cwtl
adc
dec
outsl
mov
fstps
inc
insl
pop
mov
jecxz
neg
adc
loopne
push
mov
mov
out
mov
adcb
push
xchg
dec
and
js
jbe
jo
cwtl
adc
clc
das
jmp
in
jnp
sbb
decl
cmp
lock
ljmp
add
ret
out
adc
mov
shl
dec
sub
cltd
fwait
xor
call
cltd
adc
jge
lahf
cmpsb
mov
sbb
and
sbb
es
pop
shlb
cltd
xlat
or
xchg
out
ror
or
pop
mov
mov
xor
ret
in
loopne
mov
int
xchg
mov
or
pop
xor
adc
outsl
sbb
fcoms
in
push
inc
push
enter
adc
push
iret
stos
pushf
jbe
mov
stos
mov
lds
and
test
dec
xchg
mov
push
mov
mov
dec
adc
push
push
jbe
sbb
inc
fsubrp
sbb
xchg
pop
mov
cwtl
xor
jno
cmpsl
or
push
xor
gs
mov
pop
loopne
add
adc
adc
jnp
stos
test
jno
notb
movsl
mov
and
add
jne
push
outsl
xchg
out
leave
ja
mov
in
mov
jne
jge
testl
sbb
fnstsw
and
push
mov
jg
xchg
orl
pop
fdivrs
enter
xor
sbb
pop
sarl
mov
hlt
aaa
dec
in
cmp
pop
cmc
addr16
lock
stos
adc
mov
jnp
sub
aaa
in
inc
rcrb
clc
push
jne
outsb
cmpl
lods
jo
add
test
mov
xlat
xor
lret
add
aam
repnz
lret
pop
sub
lahf
cmp
test
jle
xchg
mov
mov
icebp
jl
jmp
dec
fs
shl
stos
fistpll
mov
mov
fucomi
orb
fbstp
ljmp
jge
orl
xor
jge
mov
enter
out
data16
ss
mov
xchg
dec
pop
dec
pop
mov
xor
loopne
push
and
call
xchg
out
sub
ret
leave
adc
sbb
push
fs
repz
mov
out
out
jg
push
popa
mov
in
ret
std
sbb
push
inc
jne
stos
add
jp
inc
cmp
jne
shl
rol
adc
and
cmpsl
xor
mov
test
pop
mov
cli
add
rolb
push
faddl
jmp
inc
std
orl
cmp
je
add
das
fildl
dec
mov
push
xchg
push
xor
les
mov
push
lock
mov
cmp
int
mov
stos
cmpsb
mov
mov
or
popa
in
mov
dec
test
ja
iret
rorl
fs
adc
inc
adc
dec
mov
xor
jge
cmp
sub
lods
push
add
call
xchg
movsl
lret
push
or
icebp
lock
gs
rcll
fisttps
out
subb
ficoml
mov
idivb
xor
test
or
adc
clc
mov
push
insb
aad
xor
mov
dec
sub
inc
aaa
add
mov
enter
or
push
push
or
mov
fdivs
xorl
outsb
mov
xor
mov
xchg
mov
mov
mov
and
mov
fadds
push
loope
sub
and
dec
ret
fidivrl
sbb
push
pop
leave
stos
clc
fisttps
cmpsl
jnp
addr16
out
test
mov
jb
bound
sarl
hlt
adc
arpl
loopne
into
rolb
dec
and
sti
jns
cmp
add
in
mov
mov
adc
push
jl
fnstenv
adc
in
cmpsl
rorl
dec
lret
mov
xchg
pushf
mov
sbb
stos
jb
stos
sbb
inc
aad
inc
fwait
mov
daa
adc
adc
cmp
mov
sub
nop
cli
pop
imul
mov
inc
repz
cmpsb
imul
imulb
cmpsb
and
roll
cld
bound
loop
iret
ja
sarl
addl
nop
push
fcomps
es
hlt
sub
arpl
sub
sub
push
ret
clc
add
enter
jp
push
inc
cmc
test
gs
sub
or
pop
arpl
or
sahf
pop
push
loop
ljmp
inc
xchg
mov
sti
aad
shrl
push
push
orl
push
stos
dec
shl
rorl
pop
sarl
cli
jae
xor
mov
xlat
imul
rcrl
xor
xchg
inc
stc
and
jae
mov
aam
mov
fcmovne
jmp
std
inc
and
pop
adc
pop
sub
insb
mov
push
pop
fbstp
jp
pop
test
mov
sar
repz
xor
imul
xor
pusha
push
addb
cmp
outsb
and
stc
ds
adc
mov
out
mov
mov
mov
mov
push
xchg
cmp
outsb
pop
imul
push
and
xor
lret
stos
xor
jg
imul
mov
das
adc
les
insl
push
jne
repz
push
ljmp
or
sbbl
insl
pushf
mov
adc
mov
shrb
mov
xor
div
push
aad
push
jl
shlb
fsts
jecxz
repnz
repz
mov
pushf
test
cltd
add
lcall
lods
movsl
out
shrl
andb
stos
xchg
jge
add
in
push
pop
nop
mov
scas
outsb
mov
ret
aas
icebp
int3
popf
inc
test
stc
cld
pop
shll
mov
or
or
repz
or
inc
sub
push
imulb
leave
or
in
mov
rcpps
adc
pushf
pop
roll
mulb
push
sbb
sbb
inc
cli
inc
jge
clc
or
ja
add
into
in
jno
xchg
mov
je
sbb
les
xor
sbb
filds
cmp
sbb
xchg
cltd
push
jns
pop
out
out
dec
mov
xorl
xchg
fimull
js
inc
jmp
adc
out
jecxz
mov
add
lods
cwtl
test
dec
sub
jl
cwtl
adc
insl
xorb
and
fsubrl
stos
jo
sub
loope
loopne
lcall
les
jp
int
sbbl
imull
and
mov
cwtl
fldt
add
cmc
repz
ret
mov
add
mov
xchg
mov
sub
lea
ss
fisttps
cwtl
mov
push
or
outsb
scas
cmpsl
sbb
repz
jl
dec
xchg
push
sbb
mov
cmp
push
jno
xchg
cmpsb
xor
mov
xchg
cwtl
jmp
sbb
jp
repz
pop
int3
dec
or
ds
shll
ret
dec
ljmp
bound
cli
mov
mov
push
mull
mov
add
push
cmp
dec
add
mov
mov
lcall
loop
int3
lods
rol
sarb
xchg
xlat
dec
push
add
addr16
mov
div
incl
pop
xchg
aam
les
cmp
or
enter
cmp
sarl
inc
scas
fidivl
sbb
movsb
inc
and
jae
ficomps
inc
sbb
imul
or
sti
cmp
jg
fcomps
cmpsb
leave
cwtl
xchg
dec
cmp
mov
std
js
das
mov
int3
data16
mov
mov
or
xchg
push
cmc
mov
inc
or
lds
insb
adc
mov
mov
mov
mov
daa
and
push
push
pop
movsl
fs
fcmovne
adcb
xchg
imul
mov
inc
ds
cmpsl
data16
dec
pop
loop
sub
outsl
sub
ds
in
cmp
je
pop
xchg
xorb
xchg
xor
mov
sbb
or
mov
and
xchg
pop
xchg
inc
sbb
cmp
rorl
mov
jmp
pslld
mov
pop
stc
aam
pop
lret
mov
rorl
out
mov
inc
xchg
fbstp
call
scas
mov
xchg
inc
das
lcall
sbb
pushf
add
scas
inc
push
jno
test
fwait
jno
stos
aam
popf
sbb
in
and
icebp
bound
sub
mov
fwait
add
cmpsl
loopne
push
pop
lock
cs
shlb
fwait
mov
sbb
sbbl
dec
fcomip
mov
imul
mov
pop
xor
dec
mov
imul
add
sub
bound
out
clc
dec
sbb
aam
sarb
negl
arpl
adc
jge
scas
cmp
xchg
inc
shrl
or
jp
outsb
mov
pop
cmpsb
andl
loope
cli
fmul
mov
in
call
gs
scas
mov
jbe
sbb
jns
addb
mov
adc
cld
pop
or
push
inc
inc
or
das
scas
jne
adcl
std
pop
js
jb
in
stc
push
mov
sahf
test
daa
mov
in
stc
sarl
mov
mov
sbb
and
packsswb
sbb
or
lea
fistps
adc
push
scas
jo
sbb
add
test
aas
cmp
mov
pop
into
jae
sbb
ret
ljmp
xchg
mov
xchg
sub
lea
or
sarl
rolb
mov
push
push
dec
or
jecxz,pt
stc
loop
loopne
rclb
jg
imul
daa
and
inc
cli
pushf
jbe
lahf
push
stc
xor
scas
dec
adcl
inc
push
mov
jo
or
dec
adc
cli
add
mov
call
mov
sbb
add
dec
mov
mov
aas
xchg
fwait
push
push
mov
rcl
sbb
shl
data16
ret
in
scas
adc
insb
flds
fsts
test
mov
mov
push
inc
pop
fldcw
clc
push
arpl
scas
test
mov
push
push
xchg
int
roll
das
into
insl
push
sbb
adc
or
addl
call
sbb
gs
push
sbb
push
mov
sti
andb
rcrl
push
mov
iret
outsl
test
mov
sbb
fdivl
mul
xchg
cmp
lcall
sub
adc
sahf
outsb
psrad
inc
imul
jle
xchg
xor
gs
sbb
xchg
inc
pop
aam
cmp
aam
xor
mov
jo
mov
out
ss
imul
ja
aaa
imul
je
jae
push
insl
mov
sbb
mov
mov
je
inc
adc
pop
push
adc
ljmp
mov
pop
mov
rcrb
scas
sti
imul
repnz
scas
nop
or
sbb
xchg
mov
fimuls
cltd
jp
or
dec
cltd
loope
imul
fwait
or
lods
loopne
ds
lods
test
pop
jno
sub
roll
das
into
aaa
scas
fadds
pusha
mov
clc
cwtl
push
adc
add
mov
pop
mov
adc
add
repnz
test
rclb
inc
mull
mov
test
nop
rorb
inc
xor
js
cmp
inc
stc
sbb
mov
arpl
in
cmpl
push
add
fiaddl
pushf
out
mov
cmp
ljmp
iret
add
sub
dec
fidivs
xchg
imul
mov
jne
iret
outsl
push
sarb
int
xor
or
add
mov
pop
dec
sub
mov
mov
fiadds
out
push
mov
and
sub
push
jo
das
cmp
ljmp
das
push
ret
std
or
sbb
repnz
adcl
xchg
in
xchg
cli
imul
cli
aas
cli
jns
dec
fdivs
fwait
ja
fs
xchg
insb
movl
imul
stos
jp
xchg
xor
ja
and
scas
add
and
bound
push
sub
xchg
sub
or
push
fisubs
sub
add
pop
and
imul
jmp
push
imulb
fwait
outsl
pop
or
sub
cmp
stos
xor
sbb
sub
and
xor
push
adc
aas
pop
push
push
ljmp
and
cmp
mov
hlt
movb
fsubl
xchg
cmp
push
or
mov
lds
jp
rol
sbb
jo
shlb
pop
test
jl
pusha
pop
int
je
icebp
insb
xchg
mov
and
out
js
mov
cmpb
mov
arpl
es
inc
xchg
fcoml
addr16
xchg
adc
test
inc
pusha
mov
cmp
popf
inc
lret
das
jl
in
adc
mov
inc
gs
in
xchg
cmc
out
fadds
inc
and
cmc
and
lods
ss
push
movsl
cmp
push
in
sub
stos
adc
in
mov
add
inc
xchg
dec
jl
into
mov
je
adc
fdivp
in
scas
push
fdiv
or
pop
in
xchg
jne
jle
mov
sbb
insl
and
xchg
dec
adc
dec
icebp
mov
cwtl
mov
mov
push
sub
orb
mov
fmull
push
mov
mov
outsb
repnz
movsb
test
lock
mov
mulb
mov
adc
cmpsl
add
push
dec
loope
imul
adcl
cmp
out
lds
jge
jp
lds
adc
lods
pop
push
ret
xor
hlt
and
fs
scas
jmp
pop
leave
jne
inc
adc
sbb
pop
pop
sub
mov
mov
push
aas
or
dec
outsl
lds
popa
ja
xchg
cmp
jmp
addl
pop
adc
icebp
jnp
dec
mov
movsb
and
cmp
jnp
jmp
and
lret
iret
int
ret
popa
int3
inc
into
adc
loopne
ficomps
pusha
push
mov
inc
mov
push
adc
mov
negb
dec
test
push
addr16
movsl
add
in
lock
loop
xor
es
inc
fistps
in
adc
jg
cmpsl
pop
bound
sbb
test
pop
daa
or
iret
pop
xor
enter
daa
outsl
ror
aam
dec
inc
mov
mov
xchg
dec
shr
fwait
jp
inc
fs
dec
mov
arpl
pop
xchg
cmp
inc
rcrb
ss
xor
adc
jmp
aam
mov
bound
test
mov
push
cmpsb
xor
loope
jp
cmp
lea
jns
xor
mov
add
outsb
adcl
dec
repnz
inc
cltd
fisubrl
dec
ja
bound
xorb
add
cmpsl
ret
test
aam
ja
repz
inc
clc
mov
jae
sbb
and
push
or
mov
popa
outsl
lahf
inc
xchg
stos
addr16
test
xchg
jl
jb
pop
xchg
hlt
pop
out
cld
mov
sub
ljmp
xchg
mov
dec
push
fistpl
dec
insb
xchg
scas
jmp
cmc
sahf
je
int3
imul
daa
fldl
dec
iret
lcall
lock
arpl
rclb
sbb
aad
push
xor
in
lahf
stc
data16
inc
mov
push
test
mov
sbb
push
int3
dec
push
ja
mov
xchg
jge
leave
jecxz
sub
cwtl
cmpsl
lods
mov
push
fidivrs
out
test
jb
xchg
dec
cmpsl
pop
int3
mov
push
sub
jg
lods
lret
int3
rcr
mov
mov
mov
repz
stos
jecxz
orb
pop
adc
mov
mov
adc
iret
sub
mov
ljmp
les
cs
pop
mov
stos
test
add
mov
xor
stc
scas
lret
roll
sub
orb
jne
fstpl
pop
fldl
jne
pop
jecxz
cmp
xchg
mov
icebp
fnstcw
jb
mov
hlt
cli
and
clc
sub
divb
xchg
adc
in
cld
mov
push
add
and
inc
loop
aas
bound
mov
adc
or
loop
cmp
xchg
lea
xchg
daa
xlat
fprem1
sub
ljmp
pusha
inc
in
push
cmp
lret
fs
sbb
add
mov
push
xor
push
js
cmp
push
inc
das
lods
call
pop
in
pop
xchg
subl
imul
cmp
xchg
icebp
mov
mov
faddl
ds
xor
cmpb
in
xchg
dec
inc
rclb
jmp
pop
cmc
sub
aas
dec
push
lea
fistpll
and
mov
enter
es
sti
jp
dec
cmp
faddl
sub
mov
pop
in
push
ljmp
pop
in
addr16
out
movsb
and
out
clc
arpl
mov
mov
pop
cltd
insb
sahf
adc
sub
testl
mov
lret
hlt
adc
divb
mov
ss
adc
inc
arpl
xor
and
in
mov
sti
out
cmp
test
lret
lea
fdiv
movsl
mov
out
cmp
mov
pop
lret
popa
jne
mov
addr16
rorl
idivw
loope
or
aas
lods
in
cmp
adc
xchg
mov
sbb
push
inc
sub
iret
scas
rorb
xchg
jp
js
fwait
sbb
sub
mov
xchg
inc
mov
mov
loopne
cmp
jne
mov
jmp
leave
jo
sbb
jmp
xor
xlat
dec
sub
mov
cld
bound
xchg
mov
push
cmp
lret
fadds
loop
int
jp
addr16
push
cmovne
xchg
dec
popf
jmp
adc
cmp
jne
sbb
ret
mov
cmp
out
mov
scas
cwtl
push
fidivs
hlt
decl
and
cli
cli
popf
imul
mov
push
mov
xor
mov
mov
jb
aam
fistpl
cltd
xchg
cs
icebp
mov
mov
pop
in
xchg
xchg
mov
add
shrb
push
mov
jp
sub
lds
cmp
gs
inc
mov
cmp
sbb
and
push
popa
add
out
adc
inc
push
outsb
xor
fdivl
jb
xchg
and
pushf
mov
and
dec
mov
dec
push
pop
ficomps
mov
sar
cmp
pop
mov
inc
and
jecxz
subb
outsb
loop
and
inc
mov
scas
sub
sbb
arpl
dec
mov
mov
test
dec
jl
data16
jl
mov
jl
std
xor
cli
xchg
ret
stos
lea
test
mov
dec
jne
dec
push
inc
xor
addr16
out
sbb
into
repnz
jnp
push
out
insb
xchg
ja
push
adc
movsl
mov
pop
scas
cmp
hlt
ja
test
addr16
lret
pop
mov
jecxz
lods
mull
xchg
pop
add
pop
sub
imulb
pop
mov
jne
decl
fnstenv
mov
sti
mov
and
stos
adc
or
xchg
ret
mov
jne
ljmp
jecxz
mov
inc
sete
repz
xchg
and
fstpt
inc
lahf
stos
clc
popa
fbld
out
mov
aam
mov
adc
xchg
dec
stc
je
dec
fldcw
lret
pusha
and
ljmp
imul
and
sub
repnz
sarl
int3
loopne
movsl
lock
popa
pop
divb
pop
adc
enter
roll
ret
jl
insb
mov
cmp
scas
test
inc
xchg
xchg
scas
pop
in
or
shlb
pop
pop
icebp
mov
leave
movl
cmp
loop
add
dec
pop
rcl
repnz
pop
mov
mov
movsb
nop
pop
loope
aas
xchg
test
add
cwtl
scas
inc
adc
jne
xchg
in
out
mov
repnz
loope
pop
in
pop
mov
pop
cld
sub
in
sub
adc
test
mov
inc
aas
scas
insl
je
adc
adc
lds
insb
sbb
inc
scas
imul
xchg
clc
shll
push
dec
lahf
lock
test
or
jg
xor
loopne
fmuls
scas
cmp
loop
add
mov
adc
test
clc
pop
inc
daa
arpl
stos
xchg
stos
and
and
adcl
mov
cmpl
adc
add
lea
push
or
testl
jp
pushf
or
es
push
mov
push
lahf
and
pop
pop
pop
out
mov
enter
iret
iret
adc
sub
lret
push
and
incl
xchg
lret
cmpsl
subb
push
mov
sub
pop
lds
loop
push
cli
xlat
pop
and
jge
std
inc
test
or
adc
stos
aas
insb
pushf
sub
inc
ds
lret
in
imul
sbb
inc
shrl
mov
stc
ljmp
fidivrl
mov
test
data16
iret
insb
push
into
xorl
fsubl
popa
inc
mov
mov
lcall
jmp
rcrb
pop
test
ficomps
jnp
aas
mov
sti
test
mov
mov
sub
ss
dec
mov
leave
hlt
xchg
lock
push
push
int
xchg
std
cltd
inc
sti
mov
fstpt
cmp
mov
rcl
mov
cmpsl
aas
mov
popa
add
imul
push
add
fwait
lock
fnstsw
popa
pop
and
imul
sti
xor
icebp
pop
fcoms
xor
lds
aad
cmp
inc
pop
mov
jmp
call
add
out
push
adc
mov
ret
rorl
sbb
sub
popa
ficompl
lret
scas
iret
fdivrs
xlat
add
scas
int
cmp
mov
stc
pop
sbb
fwait
popa
lahf
data16
cmpl
and
leave
gs
or
sub
cmpsl
lret
fwait
mov
bound
or
sbb
das
fsubs
xchg
loop
or
stos
cmc
or
sub
or
sbb
push
cli
sub
and
fstps
pushf
xor
sub
test
scas
xchg
repnz
cmp
fildl
sahf
jo
mov
dec
test
lret
mov
int
sbb
or
fucomip
imul
int3
test
or
ret
lret
sub
in
rorl
add
movsl
sarb
mov
mov
mov
mov
sbb
sbb
push
add
sub
pop
dec
das
sbb
cmp
mov
movsb
or
jbe
ljmp
stc
xorb
pop
mov
lret
dec
cmp
test
dec
xchg
cmp
bnd
jmp
cmpsl
push
adc
xchg
sub
cs
push
mov
inc
and
dec
pop
add
fdivrl
rcll
xchg
mov
outsb
dec
mov
stos
test
pop
mov
and
addr16
and
jo
aaa
lods
mov
inc
bound
and
adc
mov
add
mov
jl
popf
jne
xor
mov
lea
cmp
add
xchg
sub
gs
xchg
arpl
mov
js
pop
popf
inc
lea
es
push
out
push
add
ja
dec
push
mov
scas
cld
dec
std
shlb
lret
push
xor
cltd
pop
fnstcw
imul
fs
clc
and
jmp
push
xchg
mov
int
xchg
shll
cmp
filds
clc
or
aam
scas
sbb
mov
cmp
daa
fnsave
in
out
lahf
testl
and
jno
jmp
fs
xchg
roll
ret
inc
repz
dec
lods
pop
sub
xor
mov
sbb
inc
or
pop
mov
insl
fisttps
in
cmp
leave
or
mov
jle
int
data16
das
fcompl
inc
enter
testb
sub
mov
pop
dec
pop
nop
daa
adc
dec
push
xchg
not
fwait
pop
push
js
movsb
mov
cmp
repz
out
sub
inc
push
shlb
mov
es
out
in
jg
ja
mov
addr16
xor
cmp
stos
dec
sub
popf
aam
adc
mov
xor
add
xchg
xchg
add
arpl
or
cld
jmp
cmp
inc
cld
fadds
sti
flds
push
sub
jb
insl
cld
orl
repnz
testl
and
add
mov
dec
mov
mov
enter
ja
out
shrd
fwait
int
das
mov
mov
movsl
cmp
bound
jns
pop
lods
or
addr16
add
mov
sbb
pop
xor
pop
add
daa
push
xchg
push
movsl
in
jle
sahf
dec
ds
mov
mov
cwtl
ds
xchg
jge
jo
mov
hlt
ljmp
insb
negl
jg
lds
push
insl
adc
out
sub
sub
cmp
or
in
adc
dec
lds
in
xchg
icebp
pop
ja
cmp
enter
mov
adc
xchg
cmp
mov
mov
sbb
sbb
or
scas
inc
mov
fsubl
jne
sub
pushl
jo
xchg
inc
push
ljmp
mov
rcrb
xor
ss
jmp
sarl
pop
dec
or
andl
jle
pop
mov
call
xchg
ja
adc
push
in
mov
dec
mov
push
adc
dec
int
aas
mov
sbb
xchg
jp
bound
sub
ret
push
fld
cmc
lahf
cwtl
push
cmc
js
shll
cmp
mov
je
lcall
dec
jp
stos
cmp
scas
cmp
cs
or
popa
lods
xchg
sub
push
xor
mov
stc
xlat
jae
sub
mov
mov
dec
cli
mov
es
cmp
das
sub
pop
xor
cmpsb
inc
dec
or
dec
dec
and
lret
loop
fmull
adc
push
push
cmp
inc
add
pushf
sub
sbb
daa
mov
aas
sub
shrl
push
ret
push
fucomp
jo
adc
outsb
bound
cmp
repnz
jnp
roll
mov
js
je
jp
jnp
not
incb
testb
sub
xchg
cmp
fs
xor
test
push
sub
xchg
mov
xchg
in
ljmp
lahf
loop
lea
cmpsl
ljmp
loop
clc
adc
xchg
inc
jb
cwtl
pop
jle
sahf
inc
cmpsb
lcall
bound
test
cld
es
aam
sub
pushf
jnp
stc
dec
sub
xor
jns
hlt
jp
jns
xchg
inc
fsts
arpl
aaa
sbb
sub
mov
aas
andps
lods
shll
and
popf
add
fidivl
loopne
inc
or
sbb
mov
repz
scas
je
cwtl
test
xchg
mov
xchg
fiaddl
and
test
add
jecxz
rcrb
int
cli
fnstenv
adc
idiv
and
dec
push
push
push
das
popf
or
push
or
in
ja
rcrb
pop
mov
push
jne
in
ljmp
insb
out
mov
adc
push
dec
lret
mov
std
ja
std
fdivl
aas
add
xor
out
cli
dec
mov
je
or
or
xchg
in
arpl
mov
ljmp
ljmp
test
jns
leave
cld
sub
data16
aas
cs
popl
dec
dec
adc
pop
jmp
out
gs
mov
cs
or
xor
test
stc
add
mov
rorb
sub
pop
ja
xchg
out
test
mov
dec
sti
popa
sub
lahf
adc
mov
cli
int
fcoms
fst
inc
stos
xlat
lods
dec
mov
lret
sbb
mov
sbb
xor
cmp
leave
or
out
aad
outsl
inc
xor
and
data16
mov
sub
add
xor
std
add
loop
mov
inc
pusha
mov
pop
sub
pop
pop
decl
int
jmp
xchg
jmp
cmp
rorb
cmpsb
lods
mov
and
ror
jle
fcomps
jmp
dec
jno
fnstenv
xchg
or
pop
dec
and
jmp
sub
lret
insl
xchg
sbb
insb
icebp
dec
pop
xor
iret
fmul
popw
call
cmovne
dec
mov
aaa
aad
stc
rclb
movsl
inc
adc
add
push
sub
test
mov
dec
push
xorl
push
mov
sub
scas
daa
cs
jmp
in
mov
mov
icebp
rcrl
or
xor
sbb
rorl
lock
sub
jne
gs
push
dec
mov
test
jne
jge
sbb
mov
cmc
and
jnp
bound
loope
rclb
mov
lcall
subb
xchg
pusha
pop
xlat
cltd
sar
jae
test
movsb
sub
inc
push
jns
cbtw
decb
fwait
int3
push
mov
jns
cmp
nop
push
xor
std
stos
xor
jg
push
lret
sub
fcomip
add
dec
mov
add
xchg
enter
pop
or
rorb
fldcw
mov
xchg
mov
add
mov
adc
xchg
int
jp
xchg
xchg
jne
je
adc
or
xchg
in
mov
icebp
hlt
cld
push
jg
mov
test
and
je,pt
xor
adc
xchg
andb
xor
ds
icebp
outsb
adc
test
fistl
xchg
sbb
idiv
xor
pop
mov
cmp
mov
arpl
ds
sub
jns
cs
sub
arpl
push
cmpsb
in
enter
sub
jae
pop
sbb
call
nop
add
add
sbb
jecxz
jmp
sbb
shrd
fsubs
sub
adc
mov
into
pop
mov
mov
scas
mov
imul
insl
shlb
int3
out
fstl
test
lea
fldl
push
xor
sbbb
dec
aaa
gs
andl
int
cmp
inc
xor
scas
add
lods
fiaddl
les
fsubl
das
mov
xchg
scas
fildll
mov
mov
orb
mov
xchg
push
dec
out
xlat
dec
cmp
std
push
lahf
adc
jg
std
test
loop
and
push
jbe
xor
sar
inc
bound
call
lods
sarb
inc
ds
xchg
bound
sub
lahf
dec
mov
pop
jno
mov
push
clc
and
or
jnp
inc
rcr
sti
movsl
stc
sbb
jge
das
incl
outsl
enter
nopl
mov
xchg
xor
out
dec
lods
dec
xchg
int3
out
mov
sbb
push
sub
ljmp
ljmp
jne
dec
out
add
ja
mov
add
lret
in
scas
cwtl
cmpsb
mov
mov
xor
bound
test
mov
outsb
dec
pushf
js
inc
out
mov
xchg
mov
cld
repz
and
shl
sbb
mov
mov
shlb
and
lret
enter
xchg
decb
lds
ja
push
pop
mov
not
sahf
and
xchg
xor
cmp
cmpsl
mov
testl
aam
pop
pop
sbb
cmp
ret
jp
xchg
xor
imulb
mov
jecxz
ja
jns
mov
mov
hlt
cmc
push
pop
mov
add
nop
lahf
push
push
divl
sub
test
xor
ja
test
jle
loopne
nop
adc
shll
jl
pop
movsb
into
out
inc
out
nop
push
rcrl
iret
aam
pop
insl
aas
popf
jmp
cmpsl
loope
js
xor
movsb
scas
mov
dec
add
jbe
ss
sarl
mov
pop
dec
mov
xor
sub
andl
int
call
sub
push
xor
in
jmp
scas
enter
sub
push
cld
arpl
insl
xchg
ret
popf
adc
cmpsb
test
mov
fcomps
mov
push
lcall
add
jg
notb
mov
push
and
ret
mov
fs
add
decl
cmp
inc
cmpsb
add
repnz
lods
pop
outsl
into
adc
inc
sbb
addl
mov
pop
ljmp
scas
leave
jns
addr16
cmp
add
sub
sahf
in
lret
push
sub
jae
jae
add
test
pop
and
fsubrp
cmc
mov
xchg
mov
pop
popa
lock
test
fstps
xchg
cmp
leave
xchg
mul
sbb
rorb
in
push
cmp
sbb
lods
pop
pop
xchg
fadds
pop
mov
test
jnp
mov
aas
fsubs
ja
in
in
dec
and
roll
cmp
in
xchg
pop
aaa
jne
dec
inc
mov
fmull
cmp
dec
cmpsb
adc
jle
mov
lea
test
outsb
push
int
mov
dec
ret
add
and
adc
and
add
or
pusha
mov
dec
loop
pop
out
loopne
fildl
ljmp
mov
or
adc
jle
fidivl
push
scas
movsl
dec
xor
push
lods
shrl
fsubr
lret
push
inc
daa
pop
cltd
sub
imul
jnp,pt
xor
daa
and
inc
stc
mov
xor
mov
nop
ja
into
xor
add
mov
cmpsb
and
int3
mov
repnz
or
subw
jp
xor
mov
mov
sahf
sbb
sti
mov
imul
call
insb
lahf
mov
sbb
icebp
or
jo
xchg
add
jb
dec
sbb
mov
add
ficomps
pusha
sub
str
pop
pop
dec
nop
cmp
es
push
arpl
lea
mov
jg
push
xchg
insl
push
jbe
inc
fstl
dec
adc
sbb
jno
and
inc
rorb
lret
or
fadds
stos
notl
pop
push
stos
cmp
fcomip
xchg
call
in
ret
push
mov
pop
sarb
test
or
sti
fisubrl
loop
xchg
adc
iret
mov
jl
sbb
mov
repz
push
push
pop
push
lds
das
jmp
cmp
xchg
xacquire
insl
loop
xchg
sub
jnp
popa
pop
pop
outsb
mov
push
lock
dec
jmp
xor
imul
test
and
notb
sbb
cltd
stc
shlb
and
sub
sbb
pop
call
inc
sahf
xor
sti
popa
dec
inc
sbb
jb
lret
fstl
rorb
int3
iret
test
sub
pop
out
test
add
nop
xor
jmp
cld
push
mov
sub
mov
mov
sub
repnz
cltd
andl
into
push
xchg
repz
cmp
fs
cltd
ljmp
int
jb
std
stos
or
sahf
outsb
je
sub
aaa
popa
scas
ss
add
mov
push
mov
push
cld
jne
mov
push
xchg
loop
imulb
push
pop
pop
fs
jb
pushf
or
insl
mov
fimull
scas
sbb
stc
cld
div
add
mov
dec
icebp
pop
das
add
jp
and
outsl
mov
loop
xor
inc
stc
stos
inc
fs
mov
rcll
jge
cld
jl
frndint
pop
push
xchg
testl
and
adc
add
pop
or
mov
bound
icebp
movl
xor
outsb
push
mov
imul
loope
and
lahf
sbb
push
cmpsl
rcrb
cmp
lods
sbb
sub
xor
fnstsw
push
sub
mov
sub
or
std
jg
inc
cmpsl
xor
cwtl
xor
pop
popf
mov
sbb
mov
in
push
xchg
stc
fildll
mov
mov
adc
arpl
inc
rorl
sahf
mov
movsb
iret
cld
and
sub
or
repnz
xchg
movsb
cs
or
sbb
lods
add
sub
mov
cmp
ss
popf
in
loope
mov
jae
and
xor
mov
loope
scas
aad
jmp
sub
xlat
fsubrl
cltd
jns
inc
mov
mov
lods
sub
xor
out
jb
mov
inc
data16
cmp
hlt
xchg
out
fmulp
in
xchg
jnp
xchg
mov
call
fwait
xor
mov
add
dec
repz
cmc
add
roll
push
scas
xor
sub
ret
push
ljmp
xor
adc
lds
out
mov
jb
out
ret
adc
sub
sti
xor
repz
sti
loop
cmp
lds
jl
test
cmp
push
add
popf
xor
xor
sub
mov
fwait
lret
mov
inc
push
mov
sbb
ss
jbe
cs
xor
dec
mov
jle
xor
xchg
cld
sahf
mov
inc
sbb
dec
fidivs
sbb
arpl
push
fnsave
mov
stos
pop
popa
loope
mov
in
push
inc
mov
int
add
sbb
sub
pop
movsb
xor
gs
jmp
cs
and
mov
or
in
sub
mov
fdivl
fisttpll
xchg
loop
push
imul
push
fbld
mov
xchg
or
les
push
mov
push
sbb
sub
test
and
insb
repnz
or
bound
loop
xor
mov
pop
imull
push
xchg
movsl
xchg
fs
adc
mov
xchg
popa
dec
dec
cmpsb
mov
lods
push
xor
xchg
jge
xor
aad
std
mov
mov
or
call
outsl
aas
cmpsb
mov
sub
jb
in
adc
lcall
adc
fiaddl
cmpsb
jo
sahf
out
or
pushf
int3
and
mov
sub
test
stos
ds
ja,pt
aas
mov
mov
fcomps
sbb
cmp
aaa
pop
mov
or
cmpsb
adc
icebp
jo
push
lret
movsb
push
add
aam
add
ror
mov
outsb
mov
leave
or
add
jns
test
xor
inc
or
outsl
imul
and
mov
and
out
sub
pop
clc
cmpsb
jle
add
es
icebp
dec
ss
jb
nop
sbbl
mov
lock
mov
jae
fstl
mov
insl
repz
insl
jnp
test
fwait
pop
fdivp
xchg
call
lret
stc
insb
mov
fdivrl
add
aas
lea
jne
jp
call
xor
push
mov
lret
outsl
mov
std
and
push
push
lret
shl
sub
rcrb
fiaddl
add
rcrl
clc
repnz
in
sahf
hlt
test
es
dec
pop
loopne
and
mov
mov
or
mov
inc
stos
push
pop
rorb
sbb
les
lcall
aad
jle
test
sbb
cmc
icebp
decb
push
xor
inc
jne
imul
xchg
xchg
nop
lret
bound
sbb
and
fisttpll
mov
nop
adc
fildll
imul
gs
or
loope
adc
in
neg
rcrl
aam
sbb
cmp
mov
sarl
btrl
pusha
mov
xchg
push
jle
xchg
repz
nop
ret
insb
andl
cld
testl
test
add
jp
cmp
scas
popf
xchg
enter
std
pop
pop
cmp
sub
movsl
ds
fldt
jecxz
outsb
fs
add
movsb
mov
into
push
fdivrl
fldenv
testl
movb
repz
movsb
insb
je
dec
cli
mov
xor
cli
mov
icebp
xor
sbb
in
xlat
mov
adc
inc
dec
inc
dec
adcb
int
xchg
pop
or
xchg
iret
xchg
cmp
jle
stos
shll
js
lss
addr16
daa
sbb
and
xlat
das
inc
movsb
int
cmp
daa
adc
in
jmp
mov
pusha
inc
in
lret
lret
hlt
sahf
popf
pusha
adcl
jmp
jno
sub
test
mov
movntps
loop
lods
inc
inc
xor
add
inc
ljmp
mov
popf
enter
sub
mov
mov
out
loop
pop
call
cmp
inc
mov
cmp
cmpsl
inc
cmpsb
movsb
stos
adc
push
fwait
adc
mov
fildll
xor
push
vmwrite
sbb
or
and
xchg
adc
sbb
cmp
adc
and
push
push
loopne
sahf
mov
ljmp
rclb
into
xchg
pusha
in
adc
cwtl
rclb
push
test
test
addr16
je
ss
lcall
std
ror
aam
and
ljmp
pop
stos
jmp
adc
in
addl
lret
jne
or
fcmove
clc
sbb
or
dec
mov
lds
mov
cmp
loop
inc
icebp
cmp
xchg
pop
rcl
movsb
mov
shlb
xor
pop
sbb
dec
xor
scas
push
stos
and
pushw
dec
fmuls
xor
shll
test
cmp
mov
adc
hlt
pop
filds
xchg
mov
pop
lcall
mov
cs
daa
mov
scas
repz
push
mull
pushf
jg
xor
adc
outsb
xchg
test
xchg
jae
adc
jle
repnz
imul
push
fsts
arpl
movsb
add
cmp
mov
lods
mov
popa
mull
cli
fidivrs
jnp
sub
test
lds
test
hlt
dec
pop
inc
and
stos
xchg
xlat
pusha
lock
outsb
lcall
je
jl
jp
movups
movsb
lods
lods
add
or
lods
jnp
mov
xchg
mov
adc
rcll
aam
test
xlat
xchg
sub
sbb
in
pop
out
cld
test
inc
sbb
imul
inc
addr16
dec
lret
rclb
pushf
pop
jne
add
or
jns
lret
ror
ds
flds
cmp
and
xor
xchg
dec
add
int
sub
pop
xor
lea
push
gs
push
int
xor
jbe
insb
mov
push
daa
lcall
pop
daa
mov
stos
or
sti
push
fisttps
out
cmc
cli
addr16
xchg
in
xchg
xchg
inc
outsb
push
mov
btc
cmpb
sbb
dec
lahf
inc
adc
push
mov
popf
mov
xchg
cmpsb
hlt
lods
lea
mov
mov
sbb
insl
pop
cmp
xor
loop
push
stc
pop
jbe
out
pop
xchg
dec
xchg
aad
dec
in
fucomi
mov
add
push
adc
sbb
inc
ljmp
jae
insb
fstpl
sub
loopne
adc
enter
fimull
push
xchg
cltd
jbe
bound
adc
es
leave
cmp
xor
adc
shrb
ss
jmp
inc
xor
cmpsb
mov
xchg
mov
sahf
mov
dec
sbb
xchg
lcall
iret
shlb
pop
sub
out
insb
cld
jp
ficompl
das
mov
pushf
lock
cmp
cli
shrl
ss
inc
dec
sub
mov
int3
xor
xlat
pop
lcall
test
adc
scas
dec
pop
das
repz
push
xor
dec
lods
add
cmc
cmpsb
dec
aas
inc
push
inc
jno
cmp
inc
jmp
movsb
cli
sar
mov
int
std
and
ret
bound
or
add
fstps
add
lahf
adc
mov
dec
negb
ljmp
jg
inc
outsl
dec
jmp
test
aam
mov
cmp
pop
pop
clc
or
mov
xchg
dec
orb
call
cmp
xchg
lds
orb
aad
lds
adc
xorw
pop
mov
andl
fnsave
jno
or
jae
pop
loop
out
mov
pop
loop
jp
lock
cmp
inc
loopne
movsl
sarl
imul
inc
dec
mov
sbb
sub
jb
test
cmpsb
rcll
nop
mulb
push
xor
in
fnstsw
mov
sub
subl
outsl
mov
aad
out
or
xlat
hlt
jp
std
push
cld
pop
loop
cmp
cmp
ret
in
and
push
xchg
out
cmpl
iret
iret
hlt
mov
jnp
and
inc
insb
mov
mov
lods
add
add
push
ret
xorb
arpl
inc
pop
cmpsl
negb
dec
push
enter
push
les
imul
pop
mov
int
mov
bound
std
das
into
xchg
pop
scas
push
adc
cmpl
and
or
test
cmp
mov
stos
add
xchg
loopne
pop
cmp
jmp
adcl
std
out
pop
pop
addr16
jno
add
adc
xor
cmc
push
push
xchg
js
xchg
pushf
jo
stos
jl
and
pop
mov
lds
jg
add
hlt
pop
std
mov
loope
pushf
mov
rol
mov
and
push
inc
dec
pusha
clc
mov
xchg
shrl
ret
push
dec
sub
add
jmp
pop
sub
test
loop
cs
mov
pop
inc
or
jo
push
imul
mov
or
cmpsl
mov
mov
sahf
inc
xchg
jecxz
lods
xorb
push
push
cli
jl
cmc
fsubs
or
shl
pushf
repz
pop
neg
pusha
cmpsb
in
add
mov
loope
nop
jg
fsts
and
push
sbb
adc
fsubs
loop
jne
push
mov
scas
cmp
pop
pop
rcrb
ret
mov
push
pop
aaa
repz
das
pop
mov
mov
mov
cmpsl
fiadds
add
cltd
xor
lcall
sub
shrb
int
loopne
adc
imul
out
xchg
add
cld
jecxz
enter
pop
aaa
inc
xchg
jg
shll
leave
mov
push
sub
sbb
hlt
sub
bnd
repz
daa
pop
add
mov
mov
mov
jg
pop
rcll
jl
rorl
dec
in
movsb
repnz
sub
xchg
inc
inc
dec
sbb
incb
icebp
mov
pop
data16
sbb
jle
lods
sbb
arpl
dec
hlt
cmp
pop
cmp
cmp
jp
xor
sub
stos
dec
cwtl
cmp
aad
add
adc
in
jno
pop
inc
jne
sti
mov
dec
mov
hlt
lods
sbbb
insb
hlt
dec
js
pop
and
out
test
jl
cwtl
mov
mov
in
xchg
sub
sti
call
add
mov
test
jne
lahf
fsubrs
xchg
xchg
inc
add
cmpsl
add
stc
pop
dec
mov
cli
mov
fcmove
sub
dec
repnz
xor
dec
cmpb
sbb
add
add
mov
sbb
jecxz
mov
xor
lahf
sbb
push
mov
das
jecxz
fistpl
das
inc
sti
xlat
dec
addr16
xor
jg
sub
push
es
sub
pop
lods
adc
xor
insl
cld
mov
pop
out
jns
mov
mov
daa
pop
xchg
out
fnstenv
fistpll
push
lods
push
shrb
bound
dec
mov
push
adc
jne
xor
push
in
jp
add
cmp
cmp
xor
sbb
sbb
loope
jl
sbb
push
mov
adc
iret
inc
enter
mov
sub
cmp
or
ljmp
faddl
pop
ja
repz
movsl
add
or
jmp
in
or
pop
dec
repnz
ss
iret
jp
xchg
mov
ret
cmp
inc
idivl
in
and
or
popf
xchg
fnstsw
mov
push
idivl
cmp
mov
into
push
aad
shlb
lods
out
cltd
pop
inc
mov
int
dec
jbe
or
sbb
cli
aaa
mov
ss
cmp
rolb
pusha
dec
push
insl
adc
jnp
lret
ret
leave
orl
xchg
jmp
ficoml
repnz
pop
loope
xchg
lods
push
gs
int3
test
mov
mov
hlt
in
in
insl
sbb
pop
jp
ss
mov
lcall
sub
out
push
fwait
mulb
cs
xor
mov
aam
sahf
sbbb
in
inc
sub
fildl
jl
mov
daa
out
pop
dec
test
addr16
dec
mov
pop
arpl
pop
mov
nop
fwait
jmp
mov
daa
sbb
mov
pushl
cmp
lods
xor
fsubs
cmp
fldenv
and
pop
mov
sbb
pop
data16
xchg
dec
lret
mov
xchg
pop
xlat
bound
arpl
lea
pop
popa
sub
adc
add
sahf
push
ss
pop
mov
mov
fwait
test
stos
and
das
gs
fs
pop
jns
fwait
hlt
testl
and
mov
mov
adc
in
sahf
test
test
dec
cmpsb
gs
xchg
das
sbb
mov
pop
adc
and
adc
or
push
xor
inc
or
dec
test
ud0
mov
jbe
movsl
mov
xchg
and
dec
rorb
enter
mov
sub
repz
sub
mov
or
shl
outsl
test
fimull
fwait
dec
push
xor
loopne
cld
imul
push
sbb
jne
pop
mov
push
aam
std
adcb
mov
call
mov
mov
inc
jmp
decl
dec
test
sub
testb
fstl
push
mov
xchg
jae
lds
mov
rcrl
lahf
popf
jg
pop
in
pop
movsl
xchg
xlat
insb
clc
jns
mov
sti
in
and
push
sahf
sbb
sbb
jecxz
sub
mov
outsb
mov
ret
and
add
xchg
xor
mov
jns
add
in
push
test
add
leave
and
pop
movsl
dec
xor
fwait
inc
loope
lret
insl
dec
push
or
in
and
fwait
in
sub
addl
das
xorb
notb
aaa
imul
adc
add
in
dec
outsb
inc
lret
dec
hlt
and
loopne
call
cmp
test
cmp
lea
jo
shll
jmp
mov
movsb
int3
ljmp
jns
sbbl
jae
lret
push
imul
push
xor
out
cmp
cli
mov
mov
or
dec
fldenv
mov
xor
xchg
inc
mov
mov
sbb
adc
push
lods
idivb
popf
adc
imul
out
sbb
fsubrp
inc
hlt
rcrb
xor
in
push
addr16
lds
imul
mov
adc
and
fstpt
sahf
xor
out
inc
addr16
sbb
cli
test
hlt
mov
iret
dec
ret
mov
loopne
dec
pop
and
stos
pushf
in
iret
in
jecxz
jo
stc
fistpll
lahf
stos
mov
jb
ss
xchg
adc
outsb
inc
cmc
push
movsl
jne
jmp
int
sti
xor
mov
cld
orl
jb
enter
mov
pop
mov
mov
and
sub
lods
dec
mov
mov
mov
lods
inc
rolb
loope
stc
sub
outsb
stc
and
ds
std
inc
inc
std
rcll
out
ljmp
sti
out
add
lahf
enter
mov
dec
mov
clc
push
push
and
cwtl
push
jo
popa
loope
jo
sub
loope
in
jg
mov
jmp
popa
scas
scas
mov
push
push
popa
mov
ja
jmp
add
and
mov
or
ja
mov
push
popl
in
dec
and
lock
inc
cltd
mov
call
pop
mov
aaa
in
lahf
adc
push
inc
jmp
popf
adc
cmp
pushf
mov
xchg
xor
das
cmc
cmp
lret
pop
or
cmc
in
fisttpl
adc
sub
out
outsb
sbb
mov
mov
adc
aas
mov
mov
jecxz
out
push
mov
ficoms
in
dec
ret
add
out
sbb
cli
mov
fwait
das
sbb
push
xchg
cld
cmp
or
shll
bound
mov
pop
dec
outsl
jo
lods
ja
and
cmpb
or
mov
inc
inc
and
sbb
stos
fdivr
leave
pusha
std
lods
push
add
xchg
fidivrl
mov
int
fnstsw
inc
pop
cmp
lea
inc
mov
xchg
fildl
xchg
ror
inc
push
xor
inc
push
inc
cmpsl
sahf
push
adc
cmovl
cld
repz
rclb
movsb
push
insl
stos
and
or
outsb
xchg
inc
push
push
sahf
fucomip
das
jne
xchg
imul
lcall
inc
fld
bound
add
sub
fidivrs
insb
pop
daa
ret
pop
jge
adc
xchg
lret
add
dec
mov
loopne
mov
adc
pop
std
mov
jno
sub
jp
sbb
mov
mov
pop
dec
sbb
out
cmp
movsb
addl
shll
es
pop
or
adcl
test
and
mov
js
mov
stc
xlat
mov
fcoms
shll
sub
cmc
pushf
push
cwtl
es
push
xlat
ljmp
aam
mov
adc
test
test
xor
js
dec
inc
sub
adc
fcoms
dec
ljmp
dec
test
adc
mov
out
sahf
idivl
in
fstpt
shlb
js
bound
in
xor
addl
xchg
cmc
out
in
out
add
mov
pop
pop
sub
xchg
sbb
sub
stc
xchg
push
push
dec
in
int
inc
fisubrl
dec
fsubrp
aam
adc
mov
lahf
push
pusha
or
sbb
fwait
mov
gs
mov
inc
mov
xor
nop
lret
cmp
pop
fisubrs
inc
popa
xchg
inc
push
cli
sbb
cmpb
mov
jb
jle
icebp
xchg
lds
int
mov
xchg
pop
inc
sti
fwait
retw
repz
test
ret
arpl
push
sbb
mov
and
ds
sub
divl
loope
or
dec
push
mov
jle
lret
lldt
add
sbb
dec
mov
sub
ret
xchg
push
lret
mov
mov
stc
test
mov
idivl
and
push
xchg
out
jmp
fisubs
lea
sub
xchg
add
dec
push
popf
adc
pusha
mov
or
lret
or
out
les
xor
jmp
mov
pop
loope
cmp
je
xchg
bound
shll
int3
dec
lahf
fwait
orb
sbb
mov
xor
popa
sub
sub
in
ja
mov
inc
shrl
lea
jo
incb
ret
or
fcompl
sbb
mov
or
ret
insl
jl
adc
sbb
lcall
lods
jnp
lock
sub
ret
call
cmp
xor
push
popa
inc
mov
mov
inc
sub
mov
cmpsl
inc
outsl
add
mov
out
inc
movsb
cmpsl
mulb
mov
rolb
and
cmp
adc
outsb
add
xor
movsl
mov
nop
mov
jmp
jnp
sbb
xchg
icebp
fidivrl
dec
or
pop
loop
cld
push
push
lods
mov
adc
inc
push
ret
outsl
mov
cmpsl
ja
test
inc
fcom
test
jno
push
and
shl
push
in
fbstp
cli
outsl
mov
xchg
mov
inc
repz
loopne
dec
cmpsb
cltd
xchg
xchg
inc
pop
mov
rorb
imul
dec
ret
aaa
enter
nop
or
mov
icebp
dec
lret
sbb
or
and
aaa
iretw
and
into
cmp
iret
imul
test
xor
sub
sti
stos
cmpb
xlat
push
mov
dec
sarb
sbb
mov
sub
leave
dec
ljmp
jg
scas
pop
add
enterw
clc
pop
sub
xchg
mov
fldenv
lods
test
shl
cmp
in
jge
cmp
sbb
xor
xchg
add
pslld
hlt
rcl
movsl
xchg
mov
jg
push
and
addr16
adc
sub
std
cld
mov
mov
push
sub
pop
adc
lret
aad
and
mov
lods
loope
sarl
addr16
jbe
push
fbld
pushf
mov
fwait
add
mov
mov
xor
mov
pop
xchg
inc
pusha
out
ret
inc
mov
cmp
dec
in
push
jnp
cli
mov
mov
cmp
fnsave
dec
hlt
cli
sub
ja
cld
outsl
pushf
out
and
xor
mov
fstpt
int3
mov
aam
roll
mov
call
inc
and
adc
push
test
sbb
mov
jle
mov
aaa
rcr
push
push
mov
jge
dec
adc
adc
mov
or
fmul
push
lret
cmpsb
outsl
in
enter
push
outsb
loope
dec
inc
sbb
cmc
jae
lret
das
rcll
adc
pop
or
cli
inc
push
mov
mov
ss
roll
push
adc
test
mov
cmp
lea
icebp
mov
push
add
push
fcompl
mov
cld
ds
into
int
pop
push
dec
xchg
aas
repz
push
lea
nop
leavew
adc
iret
jb
daa
lds
stc
xchg
jo
dec
add
ja
fists
arpl
dec
mov
popa
cmpsl
xchg
shrb
orl
cli
stos
pushf
popa
jne
rorl
daa
lods
je
ja
nop
fwait
sbb
or
mov
mov
in
lret
outsb
repz
xor
adc
sbb
out
addr16
and
dec
std
cld
add
ljmp
out
out
adc
add
cltd
imul
xor
ljmp
incb
mov
addr16
pop
xchg
adc
mov
adc
loopne
sarb
inc
push
dec
or
push
ja
addl
sub
push
hlt
inc
inc
pop
mov
gs
insb
xor
and
call
fidivs
adc
push
aad
jno
outsl
jbe
xor
out
cwtl
pop
sbb
mov
sbb
cmp
scas
movb
test
aaa
je
xor
xchg
push
repnz
cmp
jp
xor
and
xchg
push
add
jno
cltd
cs
cld
or
adc
push
adc
xor
jl
out
add
and
push
inc
test
loopne
mov
or
push
fdivrs
jbe
movlps
sub
loop
jp
jo
add
test
dec
add
mov
gs
push
and
sbb
xchg
and
cmc
sub
jb
or
ret
fistps
mov
cmp
pop
add
aam
outsb
fmulp
mov
ret
push
lock
or
jl
cmp
mov
mov
je
inc
mov
pushf
daa
dec
das
cmp
xchg
adc
or
xor
add
ljmp
mov
cmp
