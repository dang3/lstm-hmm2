sbb
add
xchg
mov
inc
xor
mov
int3
cmp
lret
or
pop
cltd
cld
lock
fwait
sub
sti
mov
pusha
push
push
adc
lock
sbb
dec
or
jg
mov
inc
test
jmp
ja
ds
push
stc
mov
imul
mov
out
jle
mov
leave
push
pop
popa
dec
decb
xor
jecxz
dec
aad
fs
test
bound
mov
inc
out
pop
loopne
inc
xchg
xor
mov
pop
inc
std
xor
and
addr16
je
mov
add
stc
push
sub
cmp
and
stos
sub
push
test
xchg
sub
jb
clc
outsl
imul
and
ret
jp
push
inc
jo
rclb
add
popa
ljmp
jp
in
cltd
mov
rcrb
ss
lcall
lcall
icebp
inc
lods
xchg
ja
inc
cmp
inc
adc
pop
clc
inc
ret
testl
push
xchg
repnz
jmp
cmp
int3
sub
push
mov
sahf
jecxz
xor
lods
xchg
lds
into
out
pop
enter
flds
push
je
mov
sbbb
adc
or
dec
rolb
inc
inc
mov
adc
push
ret
cs
or
ljmp
jb
scas
sti
cmp
mov
sbb
mov
test
movsl
mov
or
aam
test
jno
push
mov
imul
sahf
dec
idivb
pop
jno
aaa
mov
jnp
mov
pop
jno
adc
and
iret
ret
xlat
and
dec
sub
jnp
sub
and
adc
add
dec
div
je
adc
or
or
jo
jo
jecxz
mov
xor
add
cmpsl
loope
iret
adc
and
enter
imul
aaa
mov
dec
xor
dec
mov
xchg
mov
js
push
repnz
je
pop
mov
mov
leave
dec
int3
lods
push
leave
cwtl
call
lods
rcr
inc
push
jmp
sub
dec
jnp
insb
inc
jmp
test
xor
std
repnz
mov
iret
lret
jg
inc
ds
bound
popa
xchg
lds
sbb
test
lea
mov
jbe
jae
js
xor
fldenv
xchg
sub
pop
inc
jae
dec
xor
add
stc
nop
mulb
scas
pop
icebp
pop
mov
sbb
mov
and
cmpsb
mov
jno
repz
jg
pop
or
cmp
cmp
mov
push
lret
lcall
mov
cmp
jbe
lds
sub
sahf
mov
or
push
push
sub
push
jne
out
in
popf
push
imul
scas
inc
mov
in
aas
pop
jae
aas
fsubrs
cwtl
mulb
fwait
scas
xchg
lret
sub
pop
mov
or
xor
cmp
inc
or
sti
sub
or
and
pop
push
mov
sub
sbb
popf
popa
leave
out
inc
rcrl
cmpsb
repnz
fistpl
out
div
lods
cmp
rclb
dec
xchg
cltd
enter
adc
and
pop
je
xchg
pushl
dec
push
add
mov
shr
and
clc
mov
sbb
mov
fdivrl
mov
pop
js
and
call
flds
push
mov
cmp
cli
aam
rcrb
int3
mov
aaa
and
shlb
pop
cmpsl
xor
adc
mov
add
lret
in
es
faddl
jle
mov
dec
sub
xchg
cmp
push
inc
mov
aaa
adc
loope
xchg
xor
test
mov
mov
ds
pop
sbb
fcoms
xor
loop
jbe
cltd
dec
mov
leave
stc
mov
push
xchg
fildl
clc
dec
xchg
arpl
lods
scas
xchg
xor
fs
adc
pop
outsl
lcall
mov
dec
lret
push
or
mov
add
fstps
fildll
pop
dec
push
shrb
in
dec
push
mov
dec
push
aad
mov
push
das
mov
lea
fwait
mov
sarl
xor
adc
or
fldt
std
fidivs
cmp
jb
mov
or
mov
add
sub
sub
jl
jmp
fnsave
and
add
and
mov
dec
and
aaa
jecxz
pop
outsl
lds
push
lock
jne
clc
inc
push
and
inc
stos
xor
xchg
std
movsl
inc
dec
lcall
test
xor
inc
sbbb
std
pop
fstp
pusha
sti
mov
push
sub
mov
into
xchg
mov
adc
loop,pn
xor
stos
sbb
dec
xchg
out
jo
packuswb
jmp
dec
sub
or
rcrb
nop
stos
add
mov
subl
push
pop
cmp
loopne
insb
inc
add
cmpsb
aam
xor
mov
jb
xchg
pushf
mov
add
shrb
pop
add
inc
sub
cmp
ror
push
pop
imul
push
pushf
repnz
rorb
jo
jo
inc
cwtl
aas
stc
or
push
fwait
pop
pop
push
xchg
mov
xchg
sub
gs
adc
sbb
push
xor
fistpl
pop
push
adc
iret
cmc
jno
lock
das
push
test
sbb
fldenv
call
rolb
aaa
movsl
mov
scas
or
mov
cli
pop
sub
mov
imul
xchg
adc
cmp
and
lcall
gs
fcoms
xchg
popa
sub
loop
add
mov
jp
and
cmp
stc
xchg
and
lods
fstps
push
mov
push
mov
xor
out
pop
jmp
fistpl
inc
outsl
fxch
and
pop
nop
pop
mov
push
add
dec
adc
mov
jbe
cltd
stos
and
inc
repz
bound
mov
test
sbb
mov
mov
adc
mov
popl
data16
out
cld
push
dec
pop
mov
aas
mov
cmp
push
std
xchg
stc
icebp
ret
scas
je
ret
imul
rcr
pop
dec
icebp
lret
pop
ja
push
icebp
sbb
pop
aaa
pop
hlt
out
pop
cs
mov
lcall
out
addl
mov
sub
cmpsl
mov
xchg
test
cli
pop
divl
dec
pop
test
stos
xchg
int3
xchg
loop
or
cmpsl
mov
inc
int3
lock
nop
xchg
cltd
insl
pop
roll
arpl
scas
inc
push
jno
outsb
adc
lret
arpl
jb
lods
xchg
and
add
jns
or
inc
add
xchg
adc
pop
dec
sbb
std
dec
adc
jbe
pushf
push
jecxz
dec
data16
ss
testl
mov
pop
sbb
jmp
sti
andb
push
xor
loope
out
sub
outsb
call
inc
or
push
dec
ja
xchg
or
rorl
lret
std
mov
stos
aam
insl
icebp
std
int3
xchg
dec
pop
lock
into
xchg
mov
dec
xchg
jg
cbtw
push
test
cld
jns
sub
push
das
movsl
inc
xor
push
jge
js
fst
das
mov
clc
adc
data16
xchg
mov
pop
jnp
xchg
hlt
ficoml
rolb
daa
test
jp
lea
insl
inc
lret
movsl
adc
xchg
in
jae
push
test
sti
sti
and
push
xchg
push
ja
cltd
lods
jmp
daa
sbb
pusha
in
stos
push
push
test
push
jae
pop
sbb
mov
push
ror
mov
mov
std
lret
aad
cmpsl
add
inc
jecxz
add
out
xchg
out
mov
inc
dec
mov
and
or
adc
sbb
adc
les
pop
cli
jp
pop
in
rol
fisubrs
sbbl
add
mov
inc
ljmp
cmpsb
inc
push
xchg
je
call
dec
add
jae
mov
sub
fsts
jg
sub
ljmp
cmp
inc
fwait
jb
xchg
add
rcr
and
daa
pop
jmp
jbe
jmp
sbb
mov
jns
xchg
pop
and
mov
rorl
cmp
insl
push
lret
int3
xor
stos
iret
push
dec
mov
sbbb
cmp
fidivrl
imul
push
daa
scas
pop
cs
pushf
inc
xchg
xchg
or
cli
fs
jnp
scas
mov
push
icebp
mov
stos
mov
leave
insl
fldenv
cmp
les
xchg
cs
mov
pusha
add
arpl
sahf
sub
push
and
xchg
mov
jmp
xor
and
xchg
aad
inc
ja
add
push
leave
daa
push
fwait
and
lds
js
xchg
jno
jns
int
sbb
aam
repz
daa
fwait
xchg
stc
push
xchg
test
inc
inc
xor
hlt
sbb
shll
sub
fists
xor
aas
mov
lret
mov
in
cmpsl
xchg
add
cmp
test
xor
push
push
stc
scas
ja,pt
sbb
std
adcl
adc
mov
cs
lea
cwtl
add
sbb
xor
xchg
adc
orb
loop
cmp
hlt
test
dec
cmp
mov
xor
xor
pop
mov
sbb
jns
out
adc
xorl
and
xchg
imul
cs
rcll
sub
je
xlat
in
inc
test
inc
adcb
popf
sarl
add
xchg
sbb
or
sbb
cmp
ljmp
or
jge
mov
hlt
ffree
in
xor
ficoml
pop
fsubrs
mov
cmp
mov
js
sub
jno
mov
cli
cmp
or
pop
dec
push
cmc
cmp
leave
hlt
fwait
dec
fisttpl
mov
rcrl
xchg
push
xor
sahf
enter
mov
xor
out
pop
xor
sbb
push
or
mov
das
cmp
clc
fists
adc
sbb
mov
jae
pop
sub
cmpsl
xor
xor
ret
xor
sbb
mov
repz
mov
dec
mov
sbbl
out
clc
loopne
sbb
sub
ds
adc
sbb
sbb
mov
fwait
xchg
cld
cmp
adc
push
jl
push
xchg
pop
push
pop
iret
jno
cmp
mov
sbb
mov
sbb
gs
mov
push
jp
mov
ljmp
clc
inc
inc
xchg
je
sbb
mov
negb
mov
inc
scas
enter
and
push
sbb
inc
test
sti
adc
add
mov
aas
xchg
or
aad
into
icebp
cmc
pop
or
adc
xor
mov
loop
ljmp
mov
dec
scas
iret
loopne
or
ficompl
cmp
cltd
loopne
std
lahf
ja
sub
xchg
popa
cli
in
push
mull
jae
out
fldl
sarl
or
setle
and
sbb
movsl
sub
rclb
inc
fwait
dec
jmp
jle
test
push
inc
jnp
sub
jne
inc
ret
inc
mov
test
xor
movl
pop
cmp
push
mov
lahf
mov
pop
jbe
dec
ficoms
jle
mov
inc
dec
sub
iret
js
int3
aas
insl
lcall
pushf
daa
jg
fs
cmp
scas
mov
into
ljmp
daa
mov
ss
roll
fisubrl
mov
lcall
push
mov
mov
push
xor
xor
arpl
sar
xchg
std
loop
mov
push
pop
sbb
cli
dec
pop
or
frstor
aas
arpl
ret
sbb
dec
pusha
mov
adcb
insl
fistpll
push
call
nop
popa
mov
les
sarl
shlb
loope
loop
push
lds
mov
jp
popf
xlat
imul
and
xchg
int3
pop
mov
fs
push
mov
repz
xor
mov
cwtl
xor
data16
mov
or
xchg
sub
scas
es
fisubl
inc
push
sbb
scas
pop
sbb
cmp
xor
inc
outsb
cwtl
cwtl
ja
push
or
mov
lea
xchg
cli
maxps
and
xchg
jno
push
mov
adc
mov
adc
inc
jge
cmp
jge
or
outsl
jns
or
insl
sti
leave
lahf
fisubrs
mov
add
pop
push
inc
dec
fs
out
inc
lret
dec
bound
cmpsl
or
in
sahf
cmc
add
cmp
mov
sub
ficoms
insb
mov
cmp
fst
ret
sub
stos
mov
and
and
add
xor
pop
mov
add
out
pop
sti
dec
jns
sbb
xor
aaa
out
lds
in
enter
scas
shlb
inc
sti
xor
in
mov
sub
fs
nop
test
xchg
adcl
pop
pop
adc
in
pop
ror
ja
xchg
dec
clc
test
je
fadds
mov
or
mov
or
dec
jnp
ja
sahf
cmp
shrb
pop
in
push
add
in
pop
loope
push
mov
xor
cld
in
pop
lods
sub
ficompl
rcrb
jbe
inc
inc
pop
pop
inc
sarl
daa
insl
test
jge
aas
mov
sbb
pop
jnp
leave
sti
or
mov
rorb
fcmovnbe
mov
xor
sbb
adc
test
mov
cwtl
int
cmc
xchg
lret
lock
enter
jno
dec
add
loope
aad
sub
dec
cld
jns
mov
push
mov
cld
inc
popa
xchg
outsb
xor
pusha
es
adc
loope
mov
lahf
data16
roll
xor
movsl
xor
shrb
or
inc
pop
fcoml
shll
loopne
arpl
push
add
xor
je
mov
or
in
pop
lahf
ret
movsb
and
cmp
adc
lret
dec
fdivl
cmp
aam
lahf
fidivs
iret
adc
or
xchg
xchg
push
gs
fistps
push
pushf
dec
cmp
out
insl
xchg
mov
jnp
pop
mov
jbe
cwtl
test
loope
add
repnz
daa
loope
adc
cmp
pop
pop
cmp
xor
push
xchg
in
jns
xor
mov
in
mov
aaa
pop
fldt
imul
push
xor
jl
pop
stos
fadd
and
mov
adc
scas
fnstcw
loopne
xor
add
cmp
xchg
add
fidivrl
mov
insl
add
and
mov
push
push
int3
std
cmp
push
cmp
das
sub
xchg
push
shlb
aad
push
ret
add
jo
loopne
adc
xchg
xchg
repz
cs
ja
cmpsl
daa
push
pop
hlt
fdivl
or
repnz
loop
pop
xor
bsf
in
pushl
std
cli
outsl
mov
arpl
or
add
pushf
push
fcoms
sbbl
xchg
dec
pop
xchg
and
xor
iret
adc
mov
aaa
lock
stos
ss
pop
daa
jnp
sbb
mov
sub
out
negb
lcall
ja
push
das
mov
outsl
xchg
push
mov
addr16
push
sub
int
inc
jle
xchg
jl
jg
fistpl
and
punpcklwd
xorb
sarl
sub
push
adc
out
daa
sti
push
ss
mov
inc
mov
xchg
ljmp
hlt
or
js
scas
fwait
and
out
iret
cmc
cmp
push
and
mov
fdivs
pusha
and
out
mov
jo
push
in
xchg
popf
xor
stc
push
jmp
pop
je
lods
test
daa
call
aas
lret
inc
pop
adc
outsb
pop
stos
jecxz
test
mov
fnsave
sbb
call
xchg
out
nop
int3
fnsave
jg
xor
xor
inc
add
dec
jnp
outsb
enter
add
ret
into
sbb
xchg
sahf
loop
repnz
mul
data16
inc
popa
cmc
inc
lret
call
iret
js
or
sbb
test
mov
fbstp
xor
push
les
push
push
aam
mov
sbb
daa
cwtl
filds
pop
inc
dec
ret
mov
fwait
mov
aam
nop
jbe
sbb
mov
adc
and
jne
or
aad
repnz
and
or
scas
sbb
cs
add
or
pop
mov
pop
add
ljmp
movsl
xorb
and
xchg
in
mov
cmpsb
xchg
fsubrs
mov
ljmp
push
in
movsb
xchg
test
xor
call
std
dec
sbb
movsb
sti
adc
lods
outsb
and
push
popa
xchg
jl
cmp
add
cmc
push
cs
cmpsb
pushf
or
pop
and
or
daa
dec
cmpsl
lods
insb
shlb
xlat
iret
pusha
dec
int
fimuls
lock
sub
call
mov
inc
dec
lea
or
mov
in
adc
clc
data16
outsl
enter
leave
cmp
jne
fnstenv
hlt
sbb
aaa
mov
or
or
jae
pop
push
sub
data16
hlt
je
cmpsl
lock
enter
dec
les
pop
and
sbb
lock
xor
imul
cli
cmp
lahf
xchg
movsb
aas
leave
mov
inc
sbb
pushf
leave
cmp
out
repz
mov
sbbb
sti
dec
jmp
jg
mov
jo
movsl
push
xchg
xchg
aam
rcrl
lods
insb
xorl
sarb
mov
clc
sete
outsb
lahf
lcall
add
cmp
testb
orb
into
add
xchg
inc
mov
lods
inc
dec
fdiv
inc
mov
test
mov
fstl
xlat
jmp
call
sub
push
mov
mov
daa
xor
push
cmp
js
into
sbb
cmp
xor
adc
dec
fmul
adc
jmp
push
roll
xchg
lret
pop
xchg
push
xlat
les
xor
inc
int3
sbb
inc
dec
shlb
mov
adc
test
cmc
xlat
clc
push
ds
add
xor
xorl
imul
sub
fcmovb
ficompl
inc
mov
cld
jg
mov
not
je
pop
in
inc
jmp
lcall
lret
or
xor
fldl
xor
mov
jle
repz
xchg
inc
xchg
lahf
in
stos
lret
outsb
jno
mov
pop
imull
nop
out
dec
mov
mov
jae
add
aas
sub
mov
mov
hlt
push
setb
push
pop
punpckldq
jnp
ret
push
imul
pop
inc
inc
test
dec
inc
adc
insw
lcall
mov
mov
or
out
push
add
repnz
jmp
mov
xor
jl
cs
fadds
ret
ficoml
xor
je
les
in
repz
push
jno
gs
testl
mov
sub
and
pop
sbb
imul
insl
jge
pop
ss
xchg
pop
dec
sahf
push
shlb
sbb
test
xchg
xor
bound
stos
mov
test
pop
in
cmp
jbe
addr16
lcall
cwtl
sahf
scas
js
dec
xchg
jne
sahf
mov
sub
ret
pop
mov
and
push
outsl
mov
sbb
sbb
add
jecxz
rcr
push
aaa
cld
or
insl
fs
inc
mov
mov
xor
lock
xchg
push
jmp
xchg
xor
fwait
mov
and
into
jmp
bound
out
xchg
push
lea
outsb
sub
push
mov
jp
dec
dec
dec
push
or
ret
out
pop
cli
xor
je
push
divl
mov
or
jne
clc
push
and
lock
mov
adcb
push
push
leave
pusha
xchg
rolb
mov
lods
jnp
clc
add
aad
or
push
jbe
sub
sti
sarl
mov
jae
sti
and
dec
mov
xor
call
cwtl
ds
loope
rclb
mov
rcll
int3
stos
leave
lret
push
ror
jmp
movaps
push
inc
mov
nop
in
hlt
js
mov
loopne
pop
cmpsl
fs
cmp
cmp
xor
negb
or
lea
cmp
inc
inc
add
push
xchg
sti
mov
push
sub
dec
xchg
movsl
inc
adc
nop
adc
xor
out
call
scas
push
pop
mov
jb
cs
mov
add
popa
and
fwait
sarb
fisttpl
cmc
inc
in
loop
or
icebp
xchg
pop
aad
mov
mov
mov
jnp
pop
ret
fiadds
push
jp
jae
jns
jecxz
imul
dec
pop
pop
pop
sub
inc
mov
jbe
stos
dec
pop
add
and
adc
imul
stos
xchg
jb
cmc
fbld
jl
imul
mov
lods
js
data16
sbb
adc
js
nop
loope
or
jae
pop
push
and
dec
add
jb
std
sub
jo
lods
stos
push
push
sub
sub
sbb
lds
out
mov
pop
cwtl
loopne
pop
shrl
pop
inc
adc
scas
jo
jbe
bound
mov
lock
rcrb
mov
std
dec
sub
nop
lahf
test
jns
mov
jno
leave
scas
sbb
push
dec
lcall
sbb
aaa
stos
movsl
and
sti
sahf
out
lret
sbb
cmp
mov
lock
data16
lret
mov
jb
insl
sbb
and
cmp
rcll
inc
adc
out
fldl
pop
inc
std
aaa
jo
test
mov
shr
sub
cmp
dec
scas
test
or
in
into
xchg
nop
pop
hlt
inc
fs
sbb
push
inc
mov
mov
or
add
jne
movsb
cmp
iret
and
push
shlb
sahf
mov
inc
pop
aam
push
inc
sub
int
xor
int3
add
stc
lret
lods
sbb
ret
aad
ret
enter
cltd
or
xchg
or
xchg
pop
mov
jecxz
jp
add
push
repnz
xor
iret
sub
pusha
push
bound
cmpsl
ret
sub
jp
xchg
daa
iret
into
xchg
xchg
and
jmp
cmpsb
dec
shl
mov
push
int
stc
sahf
lret
lret
push
jl
cltd
aad
js
into
dec
inc
jo
mov
fimuls
pop
jge
leave
adc
inc
dec
fwait
jnp
loope
test
mov
fisttps
out
adc
mov
lods
adc
out
mov
xchg
or
mov
jp
das
xor
cmp
inc
dec
hlt
sub
and
xlat
mov
pop
mov
sbb
inc
push
adc
leave
call
lods
out
stos
adc
imul
test
push
jge
xchg
imul
jnp
mov
or
aaa
inc
cmpl
call
or
sbb
pop
sub
lcall
add
loopne
jecxz
xchg
sarb
cmp
sbbl
mov
mov
in
xor
rol
xchg
xchg
or
pushf
jg
xor
pop
addr16
in
adc
cmp
cmc
sbb
add
sbb
xchg
test
ud1
mov
xchg
pop
icebp
stc
fists
mov
scas
jb
fcmovnu
xchg
aam
or
outsb
add
cmp
mov
pushf
shll
pop
or
rcll
lds
sbb
dec
sbb
xor
jnp
scas
leave
clc
add
in
stos
push
fstps
out
aaa
jbe
xchg
popf
xchg
in
and
divb
int3
sbb
cmp
adc
xor
mov
jns
mov
adc
pop
out
loopne
stos
lcall
push
push
push
test
ss
cs
cmp
adc
xchg
adc
jmp
in
lock
sub
cltd
lods
sub
and
dec
or
aad
in
jmp
shlb
pop
lcall
ret
das
pop
cmp
lret
or
and
outsb
jnp
pop
mov
xor
clc
fwait
addr16
cli
sbb
das
add
inc
loopne
jnp
add
mov
movsl
lea
out
dec
add
push
popa
repnz
jge
and
ss
out
jge
inc
testb
mov
scas
push
mov
outsb
cmc
or
xor
das
xchg
decl
or
xlat
sub
test
fisttpl
or
dec
pop
mov
loope
lods
in
in
out
ret
push
jmp
mov
leave
xchg
pop
outsl
and
dec
jo
mov
subl
mov
ds
dec
cmp
and
add
push
xchg
mov
mov
fs
rclw
add
inc
lds
loope
push
inc
sub
adc
shll
movsl
notb
movsb
or
sub
cs
aaa
popf
dec
or
jg
cmpsb
cmp
jo
ja
cmc
cmpsl
cmp
pop
stc
bound
and
lods
sub
jnp
add
xchg
es
pop
xor
lock
add
out
ds
rcl
dec
push
dec
push
pop
sti
or
xor
lret
stos
dec
mov
das
stos
xor
jle
adc
daa
add
orb
adc
add
or
idiv
cmpb
mov
ret
xor
xlat
sub
mov
dec
insl
adc
push
stc
hlt
xchg
in
mov
mov
jecxz
xchg
in
pop
pop
mov
ds
aas
pop
push
cmp
push
repz
cmp
and
mov
loop
loopne
pop
xchg
lret
ret
sahf
jbe
mov
dec
add
push
decb
jle
mov
xchg
mov
sahf
int
adc
call
push
test
hlt
cmp
jl
sub
or
xor
ss
adc
outsb
pop
mov
jle
in
push
sbb
inc
jo
popa
imul
imul
push
out
pusha
sub
pop
icebp
xchg
hlt
adc
aam
dec
mov
mov
push
ja
push
pop
and
pop
mov
or
das
stc
popf
xor
push
pop
popa
sbb
fwait
cmpb
lock
out
repnz
popf
lea
dec
or
inc
pop
jbe
sti
addr16
fstpl
loopne
xchg
fstps
mov
mov
cmp
xchg
inc
out
xor
fdivrl
xchg
xorl
repz
mov
add
adc
xchg
pusha
movsl
xor
jo
sbb
xchg
pop
mov
and
sub
adc
xchg
pusha
or
test
stos
js
push
mov
test
inc
jnp
add
push
mov
push
add
mov
inc
leave
dec
inc
insl
mov
pop
sbb
imulb
sub
fimull
lret
xchg
pop
mov
aam
push
cmp
repz
push
push
aad
inc
jge
gs
mov
or
add
mov
pop
std
decb
les
inc
or
xor
xor
adc
cmp
dec
pop
sub
out
cmpsl
mov
inc
icebp
add
dec
sbb
iret
xor
daa
negl
es
add
mov
xor
into
pop
xor
mov
or
int
int
lret
cmp
aas
dec
xor
dec
cmp
mov
lret
jp
out
jo
repz
inc
movsb
cmp
data16
mov
mov
mov
in
mov
inc
mov
lods
gs
inc
cmp
add
cmp
ror
repnz
test
out
pop
jmp
mov
sarb
push
sbb
and
movsl
jmp
lods
push
mov
xor
pop
dec
je
push
fstp
push
cmp
add
shlb
jnp
shrl
or
xor
js
hlt
mov
repz
jo
jp
lods
movsb
inc
enter
into
outsl
outsb
add
out
pop
pusha
arpl
in
shrl
push
dec
xor
ja
mov
mov
fldenv
imul
out
push
and
mov
push
and
divl
jmp
mov
or
js
ljmp
sbbb
enter
lods
mov
ja
mov
xchg
idiv
dec
loop
or
hlt
push
sub
jne
or
and
mov
test
data16
pushf
mov
loopne
leave
pop
mov
subl
imull
mov
ret
idivl
add
xor
scas
xchg
jg
adc
sarl
insl
add
adc
cmpsl
pusha
js
jp
sub
cmp
push
sub
dec
push
mov
inc
mov
loope
cmpsl
pushf
mov
add
dec
and
cli
mov
xor
mov
jmp
pop
inc
push
jo
scas
adc
fs
les
mov
and
lcall
pop
cmp
jg
out
jl
jp
ret
cmpsb
mov
mov
shlb
mov
out
dec
idivb
or
adc
clc
nop
cmp
or
xchg
jnp
sarb
xchg
in
mov
xor
push
sbbb
inc
mov
lcall
aad
rcll
lods
pop
mov
call
dec
mov
and
ss
sub
jp
xor
ss
cmp
xchg
lods
lock
out
cmp
sbb
jnp
je
or
test
jmp
sbb
addl
loope
dec
and
popa
mov
stos
push
andl
imul
pop
lea
lods
xchg
mov
imul
sbb
sbb
xchg
mov
xor
enter
sbb
iret
mov
sbb
gs
repz
sub
fidivs
cmp
push
sub
rorb
outsl
inc
sub
popa
ljmp
fadds
push
lods
jnp
pop
adc
sub
pop
and
stos
test
xor
lods
in
pop
mov
testl
mov
mov
adc
ljmp
xlat
call
jg
cmp
lds
push
xchg
push
or
out
jmp
mov
dec
sbb
aas
fimull
fdivl
mov
cld
fildll
sub
outsb
mov
cmp
clc
jns
je
aaa
push
jg
movsb
mov
push
adc
movsb
in
add
flds
jb
rep
lods
scas
enter
loopne
arpl
lods
inc
push
cmp
jbe
inc
ret
ds
dec
and
out
pop
mov
sti
shrl
ds
xchg
popa
xor
ss
ret
mov
fs
adc
bound
das
push
mov
dec
mov
adc
push
sti
js
pop
test
sub
mov
loop
mov
mov
pop
adc
mov
in
push
adc
loope
fsubp
mov
xor
jp
lret
add
and
xorl
cli
xor
jmp
lahf
adc
adc
sbb
stos
mov
sub
nop
mov
pop
addr16
pusha
shl
incl
mov
ret
jb
sub
cmpsl
shrl
int3
or
xor
inc
dec
in
adc
mov
cmc
xchg
sbb
imul
fwait
daa
jo
mov
xchg
cmpsb
stos
push
sbbb
pop
out
sbb
adc
mov
les
fbld
lcall
mov
daa
inc
mov
or
push
sub
ss
push
in
cs
cmpsb
sub
xor
pushf
faddl
adc
insb
mov
jg
dec
jno
add
iret
repz
rolb
leave
ret
dec
adc
lret
lret
mov
pushf
inc
movsb
push
push
out
add
mov
jns
or
add
mov
stc
daa
scas
fldt
jo
lods
or
lret
movsb
push
mov
push
pushf
mov
pop
xor
in
in
dec
push
adc
mov
nop
arpl
lret
mov
mov
mov
push
push
std
mov
add
mov
xchg
fisttpl
mov
fdivl
fisubs
rcpps
sub
daa
sbb
mov
int
lahf
inc
lods
repnz
sbb
out
jl
outsb
ds
and
nop
sub
inc
and
jmp
inc
push
pop
jne
fwait
dec
sub
push
push
push
scas
hlt
push
pushf
mov
xchg
icebp
adc
or
cmp
paddusb
inc
inc
push
popf
pushf
jmp
sbb
dec
jge
test
cmpsl
xlat
icebp
repz
shlb
std
push
xor
std
sbb
add
pusha
inc
testl
push
push
xor
les
in
push
scas
shrb
imul
addr16
sub
mov
or
xchg
lds
inc
cmp
jmp
sub
daa
or
and
nop
mov
lods
dec
sbb
aas
rcrl
jno
int
or
mov
add
pop
add
imul
lret
cwtl
test
inc
jae
jmp
push
mov
shrl
sub
fsubrl
mov
xchg
loopne
mov
cltd
aaa
jmp
add
lods
push
les
rcll
scas
aaa
lea
leave
int3
xor
call
andb
or
or
pop
push
insl
mov
pop
mov
pop
push
cwtl
sub
push
jmp
jno
push
push
jbe
mov
mov
pop
sub
inc
mov
lret
push
mov
xor
push
loopne
pusha
pop
pop
sub
fs
jnp
lret
subl
jl
test
or
adc
test
out
ds
jno
hlt
cmpsl
mov
loope
mov
cmp
dec
pop
or
jmp
les
sub
sub
sub
inc
mov
xlat
push
ret
loopne
sti
mov
out
jl
rol
dec
adcl
subb
add
in
ret
popa
in
cmp
fwait
divb
or
add
add
das
movsl
out
lahf
inc
push
pop
cltd
loopne
mov
outsl
sub
or
push
testl
test
sar
popf
imul
filds
mov
xchg
in
xorl
cmp
mov
jb
pop
xor
jb
jp
and
mov
lods
nop
lea
cltd
jecxz
inc
jmp
cmc
push
jl
mov
leave
dec
jmp
repnz
mov
dec
imul
dec
fidivrs
inc
lahf
leave
rolb
insb
sub
mov
xor
cmp
shlb
inc
push
call
cmp
orl
xor
sub
fcoml
test
leave
push
mov
addb
push
insl
lret
orl
cli
pop
out
push
sbb
sbb
stc
int
bnd
xor
mov
imull
push
lds
xchg
jmp
xlat
add
mov
adc
sbb
loop
mov
lret
xor
pop
sub
jne
pop
call
inc
loopne
dec
test
aad
aaa
jmp
test
test
inc
push
imul
add
leave
pop
xor
outsl
pop
mov
arpl
mov
xchg
movsb
cltd
aad
lods
cmp
das
add
or
test
adc
jnp
lret
xor
movsb
pop
xor
movsl
adc
test
push
fstps
insl
mov
mov
insl
push
pop
inc
or
xchg
clc
push
cmc
cmpsl
in
or
pop
ds
ss
fstps
push
mov
jge
notl
or
fiaddl
lahf
push
repz
xchg
mov
jle
jecxz
out
push
sahf
jmp
jns
cli
add
stos
inc
fildl
mov
xchg
cld
negl
icebp
popa
push
imulb
xchg
xor
ss
insl
jp
dec
mov
pusha
andl
mov
js
or
negb
cmc
inc
adc
jnp
push
adc
jp
jne
jne
in
push
je
push
daa
lcall
cmp
mov
jg
jge
fwait
cmp
in
pusha
aaa
cmp
xlat
or
or
lea
sub
lret
jo
cltd
xchg
jae
inc
cld
fsubl
insb
lock
in
loope
stos
cmpsl
inc
jb
test
sarb
xchg
mov
mov
xchg
inc
fcoms
inc
push
xor
jp
mov
xchg
ret
jmp
jo
mov
xchg
mov
add
rcll
xchg
add
test
ret
xchg
sahf
pop
in
lods
sbb
stos
popf
mov
stos
imul
pushf
xchg
hlt
push
lret
cltd
shrb
push
leave
stos
mov
lcall
pop
mov
and
inc
push
mov
lea
sub
mov
js
push
adc
into
fs
mov
push
mov
cmpsl
adc
cmpsl
aam
loope
cli
xor
mov
sbb
ljmp
in
dec
dec
cmp
and
xchg
addr16
pop
ror
jns
or
fmuls
jnp
addl
fdivl
jae
in
mov
add
bound
pusha
cmpsb
mov
adc
clc
sub
in
push
or
clc
mov
xor
jge
in
addb
push
sbb
mov
dec
rcll
sbb
inc
or
mov
add
pop
or
test
bound
arpl
or
inc
cli
fbstp
fsubrs
pusha
dec
xchg
loope
xchg
or
cmp
bound
xchg
push
cli
jae
int3
aaa
xchg
add
sahf
enter
aad
sbbl
push
or
xchg
add
out
popa
stos
sub
pop
ret
and
fdivrl
sahf
test
scas
int3
xchg
xchg
mov
nop
shll
fwait
aam
mov
inc
lea
jbe
outsb
sbb
xchg
std
aaa
cmc
pusha
mov
jmp
cli
cmp
loopne
out
push
fcomip
cltd
fadds
xor
stos
mov
lods
out
mov
scas
sbb
jl
xchg
imul
xchg
gs
or
hlt
jge
je,pt
xchg
push
xchg
inc
and
ds
push
jns
add
sub
es
or
sub
jp
pop
add
repnz
sbb
les
push
dec
sub
pminsw
call
and
mov
pop
icebp
ror
insb
mov
int3
mov
mov
mov
xchg
jle
data16
mov
pop
roll
lret
adc
sub
cltd
sub
pop
cmp
icebp
imul
jl
sub
xchg
pushf
ljmp
test
aam
xchg
pop
lret
sbb
lcall
push
xchg
fs
fmull
push
cli
and
outsb
int
sar
bound
negl
dec
push
mov
xlat
outsl
lahf
push
jp
jo
test
aas
inc
inc
mov
repz
xor
mov
aaa
jmp
aas
inc
bound
stos
fstpt
mov
xchg
xchg
bswap
mov
push
iret
or
out
adc
adc
adc
pop
xchg
mov
push
push
fidivrs
pop
iret
ss
push
xlat
dec
ja
hlt
cmp
push
mov
pop
mov
mov
adc
gs
push
adc
jp
mov
sub
ljmp
fld
in
or
test
stc
sbb
mov
popf
lcall
pop
ret
adc
inc
cmp
pop
pop
mov
cmp
pushf
nop
add
adc
jle
lret
int3
push
jl
sti
mov
sub
mov
push
cmc
dec
cmpsb
cmpb
mov
push
sub
js
sub
cmpsb
fmulp
xchg
test
push
lahf
add
jge
lret
cmc
lds
sub
mov
cmpsb
outsb
in
xchg
sbb
pop
inc
dec
mov
xor
cmp
pushf
push
cmp
mov
ja
outsl
cmpsb
aas
ss
push
push
or
inc
mov
or
or
lcall
shrb
push
insl
mov
call
mov
mov
rol
and
cmc
leave
jecxz
sbb
shr
stos
mov
xchg
xchg
or
cmp
mov
xor
mov
inc
pop
sbb
pop
and
and
sub
lcall
adc
lods
test
aam
addr16
and
push
hlt
mov
inc
mov
cmpsl
imul
out
repnz
testl
scas
into
int
bound
popf
jae
xor
cmp
mov
fwait
fs
or
mov
int3
or
cltd
mov
push
cmp
arpl
outsb
mov
push
ret
add
and
fidivl
inc
mov
mov
cli
jnp
mov
rcll
sbb
add
xchg
jl
push
add
jp
push
lahf
insb
lcall
sub
add
cmp
fistps
test
loop
and
fdivl
fildl
mov
cli
push
aaa
cmp
inc
fwait
stos
adc
mov
xchg
ja
dec
dec
fwait
dec
adc
sub
dec
jg
jmp
inc
mov
pop
loopne
callw
inc
shrl
shll
sub
inc
loop
jne
lret
scas
call
pop
fists
adc
int
bound
fneni(8087
pop
xor
jne
pop
icebp
jb
and
pop
nop
aam
mov
fcompl
jnp
les
mov
xor
das
or
adc
jo
call
shlb
push
or
push
js
pop
pop
enter
sub
std
xor
dec
sbb
leave
sub
fcmovb
leave
call
and
xchg
cwtl
lahf
xor
adc
pop
cmp
sbb
dec
mov
push
insb
mov
fstpt
pushf
icebp
lcall
cmp
into
lock
mov
mov
and
xlat
mov
xor
js
pop
gs
outsb
mov
sub
cli
cmp
push
arpl
addr16
cmp
mov
in
popl
shrb
cli
sbb
mov
dec
out
xlat
fldlg2
idivl
sbb
mov
dec
or
in
inc
repnz
mov
inc
adc
fidivrs
add
push
fldt
loope
jmp
in
add
cmp
or
lret
cmpsl
pop
xor
inc
imul
lock
movsb
or
ss
xor
cld
test
popf
pop
cmp
data16
icebp
and
mov
sub
shll
add
cmp
mov
pop
and
jo
xorl
mov
out
ficomps
stos
icebp
mov
insb
je
mov
and
and
rorb
mov
cmp
sub
mov
cwtl
rcrb
rcrb
call
inc
fidivrs
mov
aas
cli
inc
adc
roll
cmpsl
and
fs
push
jbe
mov
mov
sub
cmpsl
jl
sub
xchg
outsl
add
jns
popa
roll
ret
cli
mov
je
out
daa
push
xor
cld
call
sub
ret
adc
inc
sti
jbe
push
xor
int3
scas
dec
inc
cld
out
cmp
inc
lods
movsb
and
adc
inc
sbb
scas
lods
bnd
sahf
ret
mov
xor
cmc
int
testb
inc
mov
add
xlat
out
mov
push
xchg
xchg
push
cmpsl
test
xchg
sbb
adc
sete
jbe
xchg
adc
pop
push
and
mull
xlat
mov
popa
rcll
pop
cmpl
pop
mov
ja
fistps
push
xlat
jns
stos
push
mov
adc
sbb
cs
pop
push
sub
cmpsb
xor
jns
inc
sahf
imul
into
sbb
lods
movsl
test
jne
dec
adc
adc
mov
leave
or
jae
xor
sub
push
sahf
xor
test
adc
pop
dec
inc
pop
testb
jae
jp
push
lahf
addb
mov
cwtl
int
rcrb
push
pop
mov
jle
shrl
lret
and
jecxz
loop
push
repnz
xor
shrl
frstor
inc
adcb
pop
fmuls
enter
xchg
stc
mov
in
xchg
repz
or
loop
cmp
and
adc
and
adc
lods
icebp
sbb
or
mov
outsb
adc
mov
repz
add
push
add
js
push
and
loope
mov
jge
adc
push
mov
ret
pop
or
jl,pt
scas
mov
shll
outsl
fs
dec
adc
je
aaa
mov
cld
pop
push
out
shl
add
ret
xchg
xchg
aas
repz
pop
stos
mov
mov
fucomip
sbb
shrl
test
mov
or
mov
mov
out
je
rorb
stos
mov
add
inc
push
scas
cmp
js
add
pop
jb
imul
cmp
shl
mov
dec
mov
xor
test
fcoms
ret
mov
dec
push
movsl
notb
stos
roll
mov
mov
push
pop
out
mov
mov
sub
mov
add
and
push
lea
push
dec
test
pop
pop
outsb
mov
cltd
xchg
mov
pop
or
adc
xchg
or
addr16
lods
int3
mov
lock
ficompl
cmpsl
pusha
sbb
jae
test
adc
lea
fstl
and
in
outsb
or
sbb
xor
repnz
iret
lcall
lock
jp
mov
cmc
cmp
xchg
pop
sbb
mov
stos
cmp
or
xor
ljmp
xor
xchg
leave
icebp
pusha
add
jl
jno
out
cmp
in
adc
imul
mov
adc
jae
pop
ss
test
aas
shlb
push
shlb
adc
pop
cmpsl
pusha
rcl
push
dec
aas
insb
inc
clc
push
orl
sub
cmc
insb
repnz
movsl
cs
loopne
mov
cmc
dec
andb
mov
and
daa
inc
xor
jno
jne
cmp
dec
in
psllw
push
popf
addr16
jecxz
out
icebp
mov
lea
ret
out
popa
imul
and
fucomi
and
fnstsw
cmp
jg
dec
inc
pop
lahf
mov
outsb
mov
insb
push
mov
add
sbb
mov
ja
sahf
add
mov
into
loop
xchg
fsubrs
fisttps
jle
adc
jg
lods
pushf
aas
in
lds
cmp
lret
dec
sub
arpl
outsl
gs
aad
stos
mov
fs
mov
in
sub
ja
xor
inc
test
ja
push
fisttpll
loopne
fcoms
out
movsb
sbb
cmp
clc
in
ret
inc
hlt
sub
in
movsb
mov
xchg
pop
bound
mov
insb
test
mov
inc
mov
fsts
mov
xchg
into
cmp
mov
fwait
sbb
push
xor
and
leave
xchg
bound
mov
push
pop
add
pop
push
repz
or
inc
roll
fstl
or
test
sahf
fs
ds
divb
xor
mov
movsb
pop
sbb
xor
or
jle
pop
addb
jno
cmp
push
adc
mov
mov
enter
popf
movaps
cli
xchg
pushf
jns
das
pop
aas
pop
xchg
inc
mov
rolb
pop
je
pop
repnz
mov
test
dec
adc
jmp
adc
jecxz
into
subl
jmp
lds
ja
pop
fstpt
mov
adc
xchg
mov
pop
mov
dec
outsb
mov
xchg
mov
sbb
sti
lea
jbe
test
icebp
out
out
lock
loop
sbb
or
movsl
sahf
aas
in
mov
mov
orl
pop
jecxz
jns
pop
push
push
shlb
sbb
lretw
cmp
mov
push
sub
xlat
fildll
push
inc
insl
loope
repz
mov
add
arpl
add
dec
shll
add
mov
pop
adc
sbbl
outsl
cmp
lods
pop
ret
into
mov
adc
add
test
xor
out
in
cld
push
pop
fadd
ljmp
mov
push
hlt
pop
lds
add
mov
lods
out
adc
mov
incl
inc
jbe
rcrb
adc
inc
fcmovbe
sbb
add
push
decl
cmpsb
mul
loope
aam
inc
dec
xchg
ss
cmp
sub
push
adc
pop
outsl
mov
cmpsl
inc
ret
sbb
pop
fsubl
cmova
push
or
push
xchg
pusha
repnz
test
in
leave
mov
inc
xchg
push
div
cmpsl
or
lods
add
lea
cli
mov
ss
add
rolb
cmp
jl
sub
pop
mov
push
jne
out
push
mov
sbb
mov
test
mov
mov
dec
add
lea
fsts
or
gs
stos
adc
cli
push
inc
stos
mov
fwait
lahf
jnp
loope
add
out
and
and
icebp
jnp
dec
mov
pop
lods
xchg
dec
jns
jle
and
jae
arpl
add
nop
push
or
notl
jl
mov
movsl
jecxz
mov
sub
outsb
mov
pushf
lret
pop
inc
jmp
sub
mov
sbb
xor
enter
rol
jl
cmpl
aaa
std
xchg
mov
or
mov
jl
stos
pop
sbb
mov
xchg
sbb
sub
lea
cli
add
ss
bound
gs
adc
sarl
nop
fnclex
testl
insl
push
outsb
fcmove
xchg
or
dec
cltd
outsb
mov
jle
popf
mov
stos
or
std
add
or
in
sbb
imul
jns
push
ds
mov
es
bound
or
push
pop
aam
mov
cld
and
and
sub
in
repz
ja
dec
push
or
mov
mov
rcrb
cmc
in
mov
push
das
jmp
stos
add
lods
xor
sub
add
adc
in
jmp
mov
add
jne
sbb
je
xor
add
mov
ffree
and
ds
stc
ja
inc
and
test
in
daa
xor
iret
push
or
in
mov
arpl
int3
add
decl
dec
sbb
sti
cmpb
scas
cmpsb
imul
add
inc
jp
orl
pushf
dec
enter
xchg
or
lcall
jno
dec
xchg
orl
adc
ds
lcall
pop
xor
mov
cmp
imul
or
inc
inc
ret
ret
out
add
mov
fcmovb
sub
fistpll
pop
insl
push
testb
inc
xor
xchg
inc
add
roll
xor
test
rorb
lods
jge
jae
mov
in
cmpsl
sbb
sub
xchg
mov
jbe
add
jecxz
leave
int3
cmpl
std
cmp
cli
loope
ja
inc
lret
in
push
imul
ljmp
add
pop
int3
pop
sub
sbb
dec
mov
xchg
sar
xchg
xchg
pusha
lods
int
ljmp
inc
fbld
push
scas
movsl
repz
imul
add
popf
cmpsl
jnp
jne
pop
push
loope
jmp
rclb
out
mov
or
das
cld
data16
jle
mov
out
xor
ja
call
mov
cltd
sub
add
jae
push
adc
jmp
inc
scas
inc
inc
adc
aaa
adc
jecxz
mov
mov
mov
inc
das
daa
xchg
xchg
cmpl
inc
in
cmp
sub
sbb
divb
push
jae
lock
clc
cmp
in
fidivrl
int
pop
jae
iret
imul
test
push
adc
mov
addr16
jo
insl
jmp
mov
and
jecxz
push
or
mov
xor
lods
sub
push
adc
scas
out
xorl
shld
inc
jbe
aam
and
pushf
sbb
fildll
lock
jno
pop
testb
xchg
loopne
iret
and
adc
fs
xchg
mov
ret
jns
jmp
push
sub
int
adc
fwait
add
fsubl
sub
mov
in
in
xchg
add
adc
aaa
cltd
frstor
cmpsl
inc
mov
add
outsb
jnp
insb
ljmp
lds
loopne
cli
stos
xchg
xor
or
repnz
ss
testl
mov
jg
pusha
test
xchg
xchg
xor
dec
rcll
push
stc
loopne
pushf
pushw
sub
adc
jo
mov
scas
pop
out
push
push
add
adc
iret
cmp
repnz
mov
xchg
stos
lods
xchg
xlat
int
jl
out
ja
mov
lcall
xor
xchg
mov
loop
cmp
lea
fildl
negb
dec
xchg
push
hlt
jecxz
fdivrl
mov
jns
jp
sub
cmp
jg
dec
xor
push
std
les
and
xchg
cmp
clc
dec
mov
in
and
xor
mov
hlt
sub
addr16
in
mov
mov
and
cmp
inc
cmp
or
inc
orl
imul
adc
lock
out
inc
jae
push
cltd
out
adc
out
dec
mov
test
std
dec
int
enter
add
push
xchg
test
inc
or
pop
arpl
hlt
and
xlat
inc
push
push
add
sbb
xchg
xchg
enter
xor
mul
subb
std
cmp
xchg
test
adc
sbb
push
loopne
scas
push
mov
add
stos
and
inc
push
or
in
sub
test
sbb
insl
fimull
push
sbb
testb
cmp
das
add
inc
subl
lods
pop
daa
aad
xor
sbb
cmpb
jmp
jne
out
insl
pusha
cmpsl
and
into
push
xchg
mov
popa
mov
or
adc
cwtl
test
push
jb
or
jb
ret
pop
dec
xchg
lock
popf
stos
xor
sbb
mov
faddp
cwtl
adc
das
data16
add
push
push
in
pop
jno
out
lds
inc
test
ret
fcompl
push
in
pop
imul
lods
outsl
mov
scas
push
or
push
xchg
dec
jb
test
jno
dec
or
lods
mov
push
add
adc
sti
dec
mov
out
pop
imul
into
mov
sbb
cli
add
adcl
int3
jns
repnz
ja
mov
ret
push
push
and
lahf
cmp
clc
dec
and
stos
jb
cmc
and
xchg
xor
xchg
push
out
aaa
aas
aad
insb
rcll
lods
std
arpl
pop
aad
or
inc
or
xchg
hlt
dec
fisubrs
call
sub
push
inc
out
sub
add
push
arpl
inc
mov
mov
arpl
xchg
lds
add
es
popa
sub
sahf
pop
inc
adc
hlt
xor
cmpsb
pop
shll
pusha
out
jp
pop
jl
sub
jns
inc
push
cmpb
pop
shrb
pop
xchg
js
jmp
outsb
pop
outsl
and
aad
das
xor
sub
push
iret
lods
add
popf
testl
int
repz
inc
cmp
dec
xchg
inc
jmp
cli
pop
cs
add
je
gs
mov
or
jno
xchg
pop
loope
cld
inc
inc
pop
jg
imul
pop
jno
into
in
jne
xchg
rcl
push
call
clc
dec
cmp
pop
ret
and
bound
jg
mov
push
cmp
scas
js
and
lahf
cmp
shr
cmpsb
dec
mov
pop
aas
push
add
push
mov
jo
scas
xor
imulb
addr16
mov
mov
and
or
jle
cmp
notb
ds
aam
outsb
pop
sbb
fcoml
sub
adc
rcrb
cmp
push
jg
stc
repnz
int
push
add
add
adc
cmc
jbe
scas
in
iret
xlat
xchg
or
je
nop
cmc
mov
cs
jae
dec
pop
pop
sbb
sarl
inc
aaa
pop
andb
mov
jmp
sbbb
imul
nop
inc
aad
fdivl
rol
arpl
les
add
mov
push
pop
cmp
movsl
bound
adcl
push
fwait
es
std
jmp
add
imull
xchg
imul
sbb
js
mov
xchg
sbb
lret
xchg
add
movsl
pop
inc
dec
mov
in
inc
idivl
jp
sub
enter
addr16
adc
push
lahf
mov
ftst
movsb
hlt
xchg
aad
arpl
mov
lock
pushf
push
xorb
jl
jns
pop
mov
rep
test
ds
decb
std
imul
lcall
xor
or
mov
arpl
mov
ret
jns
in
out
xorb
xchg
and
push
cmp
lock
mov
sbb
sbb
ss
mov
dec
jg
mov
sahf
lock
insl
pop
popf
push
inc
pop
jmp
adc
fdivrl
or
ds
jbe
adc
pop
pop
cltd
dec
cmp
imul
xchg
gs
pop
out
add
loopne
gs
repz
scas
sti
push
mov
test
iret
mov
std
pop
lahf
mov
enter
pop
ds
add
mov
and
clc
repz
mov
outsl
in
xchg
xchg
out
insb
mov
inc
xor
pushf
mov
pusha
aad
jg
add
dec
and
stos
outsl
mov
rolb
mov
xor
push
jne
in
andl
les
stos
sbb
nop
hlt
icebp
jmp
cmpsb
sub
sub
sub
daa
test
pop
or
jg
dec
orb
add
stos
push
lret
mov
push
ror
arpl
cs
lahf
mov
dec
jns
sub
roll
nop
out
jmp
sub
pop
jl
add
adc
je
push
movsb
imul
jae
popl
mov
arpl
push
mov
and
lret
jb
inc
xchg
add
jg
rolb
cld
ret
ds
sbb
mov
push
iret
inc
aaa
insb
lcall
bound
mov
cld
lret
mov
jbe
push
mov
sub
jo
in
add
cmp
mov
imul
stc
add
clc
push
je
sahf
call
test
add
or
stos
lret
and
stos
leave
add
inc
xor
mov
push
push
test
fnsave
and
dec
pop
sbb
aam
test
pop
dec
cmp
mov
xchg
pop
lock
jns
leave
cltd
sahf
or
or
and
fdivs
andb
mov
xor
sarb
push
popa
stos
cmp
aas
jns
negb
cli
sbbl
andl
aas
fisttps
mov
out
test
in
jg
cltd
xchg
pop
das
pop
inc
pop
cld
inc
add
and
lahf
push
xchg
jl
inc
push
mov
mov
jb
jg
iret
jp
out
add
jge
inc
pop
add
xor
push
push
push
out
mov
and
cmp
and
sbb
scas
cmp
adc
call
and
rclb
subb
inc
xchg
and
jge
orl
daa
test
popf
jecxz
imul
xchg
cmp
cmp
in
sub
call
mov
fsubrs
out
mov
and
push
cwtl
inc
sbb
mov
inc
cmp
pop
jb
cmp
xor
push
cmp
xchg
inc
roll
dec
mov
dec
mov
push
adc
cltd
sub
mov
in
dec
push
dec
ret
je
and
pushw
jmp
frstor
ja
enter
sbb
sti
add
mov
push
jnp
repnz
repz
cmpl
or
aas
ss
ret
lods
js
sahf
pop
stc
js
and
and
adc
push
mov
clc
cmp
int3
fsts
bound
fidivrs
adc
ret
cmp
bound
fbld
push
and
inc
push
dec
push
cmp
sidtl
sub
loopne
sub
push
cli
frstor
out
mov
notb
mov
lea
mov
pop
sub
and
enter
movsl
test
add
cmpsb
xor
inc
sbb
hlt
into
and
inc
inc
jb
repnz
lret
push
mov
shlb
sahf
push
in
stc
xor
gs
ret
nop
test
aad
push
mov
xchg
in
fldl
and
adc
shr
cwtl
cmp
mov
dec
loop
std
mov
loopnew
xchg
lock
lahf
inc
inc
arpl
popa
jle
lahf
pushf
ljmp
je
adc
cld
adc
or
inc
pop
mov
popa
lcall
inc
cmp
fstpl
aad
fwait
xchg
aam
lret
sbb
ret
scas
sbb
lods
das
cltd
lret
cmp
adc
dec
daa
add
jmp
adc
mov
fs
leave
push
inc
cvtdq2ps
scas
std
adc
outsl
add
scas
orb
xchg
dec
mov
mov
pop
xchg
idivb
mov
out
das
xor
repz
ret
mov
xor
push
fsubr
ret
scas
cmc
add
mov
insl
sub
adcl
dec
das
push
pop
mov
adc
pushf
or
dec
andl
ret
fucomip
push
in
xor
lea
ss
out
inc
push
test
mov
xlat
dec
mov
push
lcall
loope
lds
sbb
xlat
dec
pop
dec
insb
cli
sub
imul
repz
sbb
sub
jb
ret
loopne
pop
inc
fwait
in
mov
dec
jb
dec
add
loope
inc
in
stos
hlt
jecxz
test
js
leave
jbe
dec
cltd
pusha
into
push
jmp
pop
push
add
mov
pushf
xor
dec
shl
push
and
imul
data16
inc
lret
dec
fdivrl
iret
and
clc
clc
sbb
xor
cld
inc
pusha
fstpt
movsl
or
in
fst
movsb
lea
mov
js
ficomps
pop
nop
and
in
inc
pusha
into
pop
insb
cli
mov
fwait
push
inc
sbb
sahf
repz
or
push
push
inc
or
in
aas
pop
ljmp
ret
loope
cltd
cmovs
push
cli
clc
jecxz
add
jl
push
sbbb
add
mov
push
fsubl
mov
fcompl
xor
or
test
js
mov
lret
xor
cmp
sbb
fs
jae
leave
sti
call
pop
mov
sub
sub
daa
add
lods
das
sub
fwait
repz
pop
sub
dec
sbb
test
test
pop
fstpl
mov
push
call
adc
mov
pop
imul
xor
popf
ss
shrb
in
ficoms
loope
mov
test
movsb
mov
sbb
cmp
stos
fstpt
push
or
add
push
lock
pushf
push
pop
fucomi
cltd
punpckhbw
and
mov
rcll
sub
xor
test
mov
mov
xlat
jl
push
fnstcw
pop
fimull
cmp
clc
data16
pop
sbbb
sti
or
pop
or
jnp
into
pop
mov
inc
pusha
jle
decb
sub
ja
jne
stc
push
fdivl
stos
jle
fisttpl
loope
lea
push
les
out
push
popa
sub
xchg
test
enter
pop
mov
jae
xchg
push
popa
sub
xor
and
adc
loope
xchg
inc
cmp
adc
or
je
inc
call
paddusw
dec
push
mov
aas
aad
mov
data16
add
xchg
pop
sbb
data16
je
cli
cmpsb
dec
and
cmp
cmp
pusha
call
jnp
sub
jns
pop
aad
ret
mov
and
pause
adc
cmp
xor
enter
sub
lods
aaa
pusha
pusha
insl
scas
fcoml
cltd
in
mov
fmulp
sti
jnp
cltd
sahf
push
outsb
push
adc
sbbb
mov
lock
cmp
pop
jae
xchg
cmc
dec
movsl
add
lret
mov
jle
arpl
push
lds
xor
dec
les
push
nop
arpl
stc
xchg
mov
sub
frstpm(287
dec
lcall
loop
sbb
and
lds
sbb
and
or
mov
ret
lds
test
pop
scas
pop
popf
out
adc
xchg
push
fisttps
mov
pop
add
add
scas
ficoms
pop
jne
xchg
push
push
fwait
in
ja
sbb
and
pop
xor
cld
cmp
mov
mov
lock
adc
js
mov
test
int3
fcompl
sti
lret
out
dec
notl
stos
aad
pop
mov
and
sbb
test
ret
daa
push
and
cmp
pop
xchg
mov
sti
adc
subl
mov
pop
and
xor
jne
outsb
mov
dec
daa
fs
clc
notl
xlat
in
call
push
jbe
cmpsb
adc
lret
addb
inc
add
xchg
sbb
outsb
add
fwait
mov
das
call
jge,pt
mov
sub
pushf
popf
iret
adc
xor
ss
dec
cmp
inc
int3
das
addl
std
out
mov
or
xor
movsl
sbb
int3
or
outsl
arpl
adc
and
in
dec
nop
pop
push
dec
repnz
test
out
mov
dec
pop
pop
add
fstpt
lret
fstpl
cld
push
in
fldcw
shlb
leave
add
es
inc
nop
in
and
sbb
in
ss
mov
lea
mov
push
fs
ficompl
mov
cmpsb
subl
pop
into
xor
mull
mov
sub
pop
cmp
aas
jno
aas
and
mov
clc
adc
paddd
mov
and
or
pop
xchg
jne
lods
sbb
out
adc
lea
pop
fdivr
gs
lahf
outsl
arpl
fst
lret
dec
cmp
xchg
xchg
mov
pop
mov
stos
stos
xchg
mov
in
lahf
das
in
jge
inc
stos
bound
mov
xor
mov
fmuls
mov
rol
inc
pop
rcll
xlat
jge,pt
ret
xor
fadds
or
mov
pop
pop
mov
scas
inc
inc
decb
pop
arpl
pop
lds
push
push
int
clc
mov
aaa
add
test
inc
outsl
icebp
hlt
mov
roll
popf
mov
hlt
sub
stc
popa
jecxz
pusha
test
or
jmp
js
cmp
mov
lods
pop
mov
dec
mov
cmc
push
addr16
mov
cmp
pop
mov
jp
ja
cmc
jnp
outsl
adc
xchg
adc
adc
dec
lds
loope
arpl
mov
lds
jb
cmp
add
cmp
inc
xchg
jmp
stos
test
push
or
push
sbb
inc
xchg
add
jae
fsts
fsts
mov
jmp
xor
xchg
sbb
int3
cmp
xchg
jne
aad
mov
loope
lret
pusha
arpl
lods
push
jb
jne
jle
fisubs
jmp
xor
lcall
enter
push
add
push
xor
jnp
mov
fiaddl
cmp
test
mov
imul
mov
stos
aad
rcrl
xchg
ja
jp
push
mov
sub
xchg
aas
dec
movsl
sti
cwtl
fwait
hlt
pop
stos
jbe
lods
andb
cmp
inc
mov
mov
fsubl
lods
daa
cmp
stos
pop
pop
imul
rol
pusha
icebp
sub
sub
fwait
pop
stos
arpl
dec
fwait
test
outsl
aam
mov
shlb
jbe
mov
aaa
push
xchg
pop
inc
lods
inc
xchg
adc
pop
inc
in
jno
dec
push
outsl
push
scas
test
jecxz
add
xchg
jns
jnp
sahf
xchg
scas
repz
push
cs
ficoml
je
mov
xchg
stos
jecxz
cmpsl
mov
adc
insl
jmp
mov
mov
mov
mov
jae
call
stc
stc
sub
stos
push
les
mov
outsb
outsl
leave
and
mov
mov
push
and
mov
or
mov
int3
outsl
stos
ret
sub
jno
inc
imul
or
or
pop
inc
sti
xchg
loop
test
jne
cmpsl
jg
faddl
cmp
mov
dec
es
orps
lock
lea
pop
sub
or
mov
jae
sbb
fidivrs
jae
gs
mov
fs
jno
mov
iret
cmp
jns
sti
fs
sbb
js
lods
movsb
inc
fildl
movsl
shlb
jnp
dec
and
fdivrl
into
push
stos
sub
adcl
stc
das
je
fisubrl
mov
addr16
in
movb
pop
sbb
xchg
insl
jb
add
imul
imul
push
xlat
xchg
lods
jp
movsb
and
dec
xor
imul
or
sti
aaa
and
das
and
aaa
mov
mov
iret
jae
loope
push
mov
mov
fisttpl
ljmp
repz
fwait
repz
adc
push
mov
pop
iret
addr16
in
mov
xor
jmp
out
shrb
xchg
dec
push
lcall
aad
rorb
push
or
loope
mov
inc
xchg
mov
cmp
cltd
dec
xlat
das
divb
jo
cs
add
mov
pusha
sbb
sbb
fsubrl
rclb
stos
add
mov
adc
jnp
repnz
push
mov
pop
sbbb
jl
cmovnp
or
xchg
decb
repz
sub
rorb
xchg
and
adc
cli
jb
mov
hlt
pop
fcoms
xor
push
faddl
lahf
sbb
xchg
mov
pop
aad
testb
xor
ret
push
test
inc
repz
mov
xchg
insb
xlat
adc
inc
mov
stos
push
xor
in
cmp
mov
sbb
popf
mov
scas
xchg
pop
xchg
xor
mov
or
add
sbb
cmp
push
adc
or
jb
call
dec
push
popf
outsl
hlt
pop
mov
inc
aam
mov
push
push
es
orl
lcall
filds
add
dec
cmp
mov
mov
fptan
push
inc
sub
cmpsb
sub
pop
pop
inc
loopne
jo
jge
imul
bound
fs
pop
and
leave
xchg
lds
out
ror
aad
cltd
in
and
test
add
nop
cmp
mov
rclb
fidivl
xchg
adc
adc
mov
sub
push
jg
sbb
push
frndint
fcoml
sub
jle
shll
fwait
orl
in
lea
jne
push
adc
ja
cmpb
fstp
sarb
stos
sbb
enter
sub
stc
scas
addr16
inc
ljmp
enter
push
leave
mov
mov
pop
aaa
rclb
pop
out
sbb
call
lock
cmpsb
jb
pinsrw
cmp
cs
adc
jle
mov
lcall
sar
mov
dec
lahf
jmp
cmpb
cmpsb
test
mov
pop
xchg
dec
enter
push
outsb
dec
ja
enter
lret
fiaddl
sti
or
xchg
xor
rcrl
cwtl
jnp
stos
into
out
das
je
insl
stos
xchg
outsl
sbb
aas
sahf
and
sbb
mov
sbb
cmp
mov
iret
mov
sbb
mov
and
sti
jnp
adc
adc
shlb
xchg
fsubrp
cli
mov
pop
or
gs
jmp
mov
ljmp
pop
out
adc
divb
sahf
inc
mov
push
jmp
mulb
sub
je
or
pop
inc
addb
xor
jo
bswap
cmpsb
aam
push
popf
pop
sub
adc
inc
cltd
negl
xchg
xchg
mov
jl
nop
icebp
fstpl
xchg
and
rorl
xchg
aaa
dec
and
jmp
imul
xchg
shrb
xchg
or
popa
in
mov
inc
adc
push
icebp
dec
and
dec
cmp
lret
jecxz
mov
int3
popf
std
cld
inc
mov
js
sbb
jl
or
imul
cmpsl
icebp
hlt
and
inc
cwtl
mov
imul
out
xchg
call
ret
aas
adc
cltd
sub
lea
jbe
jne
mov
push
negl
dec
mov
cmp
repz
faddp
xor
lea
xlat
mov
shl
sbb
xchg
mulb
loop
mov
xlat
jbe
xchg
mov
jl
jmp
and
aas
pop
in
sub
mov
or
cmpsb
ficompl
pop
mov
pop
xchg
imul
ss
pop
sbb
mov
repz
test
pop
test
std
jg
les
cmc
sbb
pop
add
mov
xor
add
test
cmp
inc
cmpsb
and
xchg
add
sbb
jecxz
sarb
xchg
data16
xor
sbb
imul
cmp
cmp
fstpl
inc
cmp
xchg
or
mov
pop
add
shlb
push
pop
adc
xchg
fbstp
dec
jae
dec
push
lods
pop
xor
or
jo
aaa
mov
add
in
sbbl
mov
in
jmp
jle
fsub
mov
mov
loop
mov
adc
notb
xchg
and
xlat
xor
push
enter
ds
fdivr
les
test
repz
pop
or
je
mov
jo
push
xchg
or
push
cmc
aaa
or
jmp
xchg
inc
mov
imul
xchg
mov
aam
repz
xchg
push
pop
fs
out
lret
dec
mov
pop
fdivs
out
mov
insb
insl
add
push
jns
loop
mov
adc
cmp
fstl
push
jmp
sti
loop
adc
or
orl
xor
push
push
and
popf
roll
add
test
jp
dec
mov
inc
add
out
ljmp
ss
imul
jne
sub
inc
stos
push
and
inc
and
popl
jg
mov
mov
push
jo
sbb
aad
fbstp
mov
sbb
jmp
xchg
popf
cmpsl
push
fiadds
jmp
sbb
cmp
xchg
fdivrs
jb
fstpl
dec
mov
loop
sti
arpl
inc
mov
inc
mulb
pop
xchg
mov
xchg
loope
pusha
cmp
sahf
lea
jbe
roll
add
addb
arpl
xor
mov
xchg
sbb
ds
imul
shlb
jno
rcrb
xchg
inc
push
sahf
ret
pop
adc
fcoms
imul
jae
cmp
push
mov
inc
jmp
inc
or
movsb
cmpsw
jle
sub
ljmp
adcl
dec
jp
out
aas
adc
iret
or
cmp
inc
daa
cltd
clc
xchg
mov
sub
andb
cmp
sbb
push
pop
or
cmp
out
xchg
int
mov
push
enter
mov
rcrl
insl
mov
jle
lock
pop
loope
mov
and
mov
mov
cld
push
cli
leave
fs
dec
cmp
push
xor
shr
add
cmp
xchg
arpl
es
cmpsb
lds
insl
xor
pop
add
pop
test
subb
xor
je
out
dec
jno
subb
lods
fmuls
daa
mov
cld
cmp
ret
cmp
cmpb
or
lret
cld
stc
inc
mov
adc
adcl
push
push
insl
and
mov
mov
sbb
push
loopne
or
jg
out
ficoms
push
pop
and
mov
push
mov
pop
or
testb
cltd
lret
cltd
mov
push
icebp
aas
cmp
outsl
js
adc
out
addl
clc
pop
push
test
cmp
xor
sub
aam
pop
out
lds
xlat
ret
nop
lods
add
push
adcb
aas
cmpsl
psubsb
and
jbe
mov
rcll
pand
sub
and
repz
adc
inc
dec
sub
adc
xchg
jge
xor
sub
sub
adc
xchg
scas
and
cmp
pop
lods
adc
pop
dec
pop
loop
push
push
or
lods
mov
mov
sub
stos
push
testl
pusha
sti
cmp
and
les
push
add
fistpl
fwait
les
imul
cmpl
test
jl
filds
pop
lret
xor
je
lret
dec
xlat
mov
jg
jecxz
cmp
sbb
scas
sbb
outsl
xchg
add
fs
add
lret
stos
enter
pop
jnp
iret
movsb
and
sahf
scas
insb
xlat
test
push
push
xlat
xchg
test
sub
pop
aaa
push
pop
push
jne
pop
lock
pop
sub
add
push
lret
pop
mov
and
notl
add
popf
ds
adc
sbb
sbb
je
pushf
loope
sub
pop
enter
fs
mov
jle
jnp
adc
lods
and
mov
dec
data16
push
xchg
add
shl
push
ss
arpl
jmp
pop
cmpsl
pop
push
lock
bound
lods
test
jle
fwait
add
popa
jp
stos
mov
test
pop
out
push
stos
push
or
sahf
jmp
adc
fwait
inc
pop
imul
sub
mov
adc
adc
lret
test
ljmp
and
push
cli
stos
sub
sub
mov
xor
xor
data16
xor
push
data16
int3
mov
js
loop
xor
mov
fs
insb
xor
das
sub
ret
scas
push
cmp
jg
mov
dec
aam
cmp
cmp
clc
pop
add
xor
fmul
popf
ljmp
pop
inc
adc
pop
jle
cmp
addl
std
xchg
push
xor
andl
add
and
adc
push
rsm
sahf
jmp
lock
dec
addr16
sbb
sbb
mov
incl
jg
fsubs
shrl
mov
loope
adc
mov
mov
andl
xchg
mov
fstpt
loope
xchg
lcall
add
je
or
lock
leave
cmpsl
dec
add
out
add
cltd
pop
lods
fidivrl
imul
leave
sti
scas
sub
mov
fidivrs
push
push
scas
sub
adc
movsb
ss
aas
out
pop
xchg
jbe
cmp
lds
test
push
adc
push
je
and
add
mov
test
push
xorl
jnp
rcl
pop
xor
aam
fldt
inc
out
scas
push
cmp
cli
sbb
arpl
xor
or
cmp
in
pop
xchg
rorl
pop
sahf
je
and
mov
negl
or
xchg
inc
ljmp
insl
pop
inc
and
repz
loopne
cs
sub
fisubs
xor
sbb
lahf
les
fstpt
mov
mov
movsb
inc
mov
sbb
les
mov
jmp
and
mov
cwtl
mov
adc
xchg
mov
arpl
adc
xor
jb
getsec
aad
add
cs
outsb
jge
mov
push
out
sti
sbb
into
cmp
aad
hlt
pop
cmp
mov
pop
shll
je
push
jle
call
insb
mov
sbb
lahf
push
mov
lods
test
daa
and
xor
sbb
cmpsb
in
mov
sub
xor
push
aad
dec
jl
stos
jne
mov
call
outsl
xchg
popf
test
mov
cltd
mov
cmp
mov
sub
test
clc
cmp
dec
test
ficoml
lods
xchg
ljmp
es
xchg
out
outsb
out
sub
int
cwtl
mov
int
ss
push
xor
stos
pop
sbb
xor
out
jmp
push
fwait
cmp
inc
stos
add
mov
xor
shl
and
idivl
mov
sbb
stos
inc
xor
add
sbb
repnz
sub
jecxz
notl
sti
jbe
aam
cwtl
xor
add
aas
sub
mov
icebp
mov
jle
rcrb
cmpsb
imulb
push
clc
push
mov
xchg
sbb
xchg
dec
sub
inc
inc
sbb
into
mov
mov
and
cmpsl
sbb
mov
xchg
push
mov
or
and
popf
aaa
lret
ret
dec
add
scas
nop
shl
test
aaa
add
shll
mov
jno
ror
lods
lcall
add
xlat
loope
fnstsw
pop
into
jo
xlat
in
jp
into
pop
jle
adc
sub
adc
jo
and
xchg
jmp
pop
cwtl
or
inc
popa
pop
outsl
mov
gs
lcall
pop
mov
sbb
popf
pop
test
jl
subb
ds
mov
add
dec
stos
into
cld
dec
xor
fsubrs
push
hlt
es
add
and
test
xor
lods
xor
lret
pop
fldcw
or
push
adc
xchg
insl
adc
in
sub
rclb
inc
lods
fstpl
xchg
popf
adc
loopne
xor
mov
movd
jp
xchg
sub
push
jecxz
jg
push
ret
dec
pop
leave
mov
int3
push
xorl
mov
push
jbe
std
pusha
jnp
jmp
fnstsw
mov
in
jnp
mov
lret
aaa
xor
pop
xchg
andb
mov
data16
outsb
add
pop
push
fcomps
sub
push
rcl
in
add
or
adc
lahf
js
sub
icebp
and
add
push
imul
mov
push
pavgw
scas
mov
aam
imul
call
aad
movsl
aas
data16
jecxz
int3
pop
mov
ret
adc
pop
aam
cmpl
aad
popf
ds
pop
or
xchg
daa
rorb
push
mov
rorb
xor
out
inc
mov
nop
les
ret
fldl
rorl
jns
enter
js
scas
pop
movl
pop
aas
sub
sub
std
and
repnz
adc
std
push
stc
aaa
rorb
xor
lock
adc
push
std
mov
push
cli
or
pusha
jmp
in
jnp
in
push
ret
arpl
or
bound
pop
fidivrl
insb
mov
lods
enter
mov
fs
pusha
fdivl
xor
xor
cmp
leave
jnp
imul
out
mov
mov
aas
jne
mov
sub
xchg
fcmove
pop
addr16
sbb
rclb
cmp
mov
mov
outsb
std
jnp
mov
fcmovne
adc
add
jae
push
jbe
lret
mov
cmp
enter
lds
xor
lea
lret
mov
scas
int3
pop
fdivl
out
xor
push
xor
test
ss
js
and
in
pop
scas
mov
xchg
push
lock
and
push
add
adc
mov
outsb
sub
sti
sub
mov
leave
jno
repnz
pushf
cmp
ljmp
fnsave
mov
add
mov
fs
inc
xchg
mov
adc
push
mov
jno
sub
test
mov
mov
xor
lcall
and
aas
rcl
sbb
dec
add
adc
jo
sbb
jb
fnstenv
fildl
sbb
iret
pop
pop
lods
cmpl
rcr
mov
jae
flds
icebp
ljmp
inc
fisttpl
jmp
inc
mov
imulb
out
in
inc
je
stos
push
xchg
mov
cwtl
lods
pusha
aas
inc
mov
xchg
hlt
and
jns
and
push
mov
or
sbb
xchg
sbb
or
imulb
xor
imul
adc
fstpl
inc
cmp
push
cmp
jp
mov
les
cli
cmp
xchg
pop
orb
cmpsb
loope
pop
lock
lret
jg
addb
inc
sub
push
in
jmp
xorl
push
pop
and
sbb
rclb
mov
mov
loopne
jno
fsubl
fstpl
icebp
mov
shrl
xchg
pop
das
push
out
in
push
rolb
fdivr
xchg
jge
cld
push
daa
fsubrl
jl
test
scas
sti
out
sbb
inc
pop
add
and
jmp
adc
or
push
push
faddl
cwtl
jecxz
aas
xchg
mov
or
push
jbe
xor
adc
mov
xor
orb
mov
subl
and
jb
dec
fwait
xchg
jecxz
mov
ds
ljmp
test
scas
jmp
hlt
mov
jmp
dec
or
cli
inc
push
cmp
jnp
sbbb
imul
xchg
test
dec
adc
mov
test
mov
lods
insl
stos
cltd
mov
call
imul
loope
mov
mov
mov
jp
xor
popa
cmp
aas
lret
into
fstps
sbb
push
popa
ds
jg
rclb
in
pop
ds
jnp
pop
sub
out
dec
jp
out
jge
lret
xchg
jp
lahf
nop
jg
cmc
lods
faddl
test
mov
fnstenv
xchg
fsubs
adc
sbb
dec
cmpsb
stos
cs
jecxz
cli
push
enter
mov
cmp
paddq
inc
jns
mov
pop
cmp
mov
into
and
inc
pop
adc
jne
push
mov
xchg
xor
pop
popa
mov
pop
or
pop
ss
adcb
dec
fadd
in
insb
jge
or
inc
sti
xor
lock
fsubrl
cmp
xchg
pop
daa
stos
sub
pop
jmp
xchg
pop
es
pushf
stc
push
aaa
ret
ja
or
jo
fdivrp
pop
sub
cmp
lds
jle
arpl
jns
out
sub
or
add
sub
jo
and
mov
adcl
mov
scas
mov
mov
pop
xchg
sbb
jge
jnp
jb
xchg
mov
je
xor
cmp
push
sub
xor
and
xchg
lock
sub
dec
test
dec
gs
and
loope
dec
test
and
or
ljmp
xchg
outsl
add
out
sub
test
jge
cli
sub
mov
cmp
ds
fists
mov
xor
add
adc
pop
inc
addr16
pop
int3
leave
mov
jne
and
push
xor
pop
icebp
add
push
addr16
xor
mov
sub
mov
jns
fs
lret
or
int3
xchg
sub
inc
cmp
outsb
clc
iret
push
cwtl
aas
mov
mov
out
int
icebp
ja
add
call
push
bound
xlat
jne
jns
outsb
lcall
sbb
mov
and
sti
shrb
inc
int
clc
outsl
popf
xchg
jg
xchg
repnz
push
ss
ja
arpl
sub
jno
adc
not
sti
or
rcl
movsl
and
rolb
fwait
andl
dec
inc
sub
popa
mov
aam
les
push
insl
sub
pusha
mov
push
jle
test
rcrl
in
push
das
arpl
sbb
ficompl
sbb
hlt
cmp
loop
jb
outsb
xchg
and
pop
push
test
add
ds
dec
pop
pop
cmp
cmp
mov
out
inc
or
mov
call
pop
popf
pop
mov
pushf
mov
dec
mov
push
mov
mov
outsl
dec
dec
imul
and
xlat
jno
icebp
push
les
les
xchg
repnz
iret
lcall
add
mov
lahf
rcrl
adc
mov
add
daa
arpl
adc
xor
jle
daa
je
repz
mov
mov
clc
mov
jp
adc
add
adc
hlt
insl
mov
push
orb
nop
lods
push
sbb
dec
insl
and
addr16
xchg
in
lretw
es
out
jnp
sub
add
or
adc
cltd
cmpsb
seta
orl
mov
dec
es
mov
xchg
fisubl
divl
adc
fisubl
push
in
or
push
dec
pop
mov
mov
out
out
mov
xchg
outsl
push
lcall
adc
mov
fnsave
cmpsb
adc
rcrb
cs
cld
icebp
jmp
dec
pop
mov
mov
jg
dec
imul
daa
cmp
shl
mov
add
xchg
leave
es
aam
lcall
adc
fcmove
mov
push
push
jl
jg
cmpsl
ret
push
sbb
sti
insl
cmp
inc
fldt
call
add
and
add
and
testl
xchg
inc
cltd
or
mov
cmp
decl
mov
pop
leave
nop
mov
jo
mov
movsb
andl
cltd
dec
loop
mov
fistpl
sub
or
test
les
mov
adc
out
jnp
jge
cli
bound
push
sbb
shlb
sub
sarb
orb
mov
aaa
push
out
lahf
out
dec
stos
rcll
push
lret
and
in
fistpl
repz
add
xlat
lret
stc
or
mull
lock
arpl
xor
imul
mov
icebp
rorb
test
and
jp
mov
xchg
jno
jb,pt
and
fimuls
imul
out
scas
icebp
sbb
popf
aaa
pushl
pop
mov
enter
jl
jp
dec
add
repz
cmc
mov
into
jmp
mov
mov
and
lret
fsts
stos
sti
or
rcrl
clc
hlt
jae
mov
movsl
cmp
jle
dec
push
or
ret
dec
jno
inc
andl
std
xchg
mov
xor
push
push
xchg
push
fcomps
fs
ja
mov
sub
and
outsb
repz
lcallw
cmp
jno
rcrb
pushf
stos
icebp
test
insb
xor
sub
movsb
lret
and
jnp
cwtl
das
cmp
pushf
push
lahf
mov
or
jp
sub
sub
inc
mov
adc
inc
cli
and
mov
fsubrs
popa
cli
adc
rorb
gs
mov
jecxz
push
mov
mov
push
push
call
mov
adc
nop
pop
aas
dec
push
enter
test
notb
aaa
shl
push
jo
dec
mov
sub
sbb
mov
jo
add
mov
shrl
insb
decl
jl
iret
icebp
pop
cmp
mov
push
mov
jecxz
ljmp
mov
jmp
jp
and
mov
shrl
test
fistl
inc
push
mov
and
add
inc
cmc
fsubrs
sti
push
stos
jl
sub
jno
inc
and
rorb
bound
mov
stos
std
mov
popa
stos
sbb
pop
das
out
loop
add
jb
and
push
lret
out
mov
sub
mov
push
push
shlb
sbb
ja
add
shrl
les
out
push
in
insl
mov
add
idivl
scas
xor
imul
movsl
pop
jbe
std
shrl
jne
lahf
leave
xor
pusha
out
fdivs
test
gs
insl
es
inc
dec
cmp
pop
cmp
lock
lods
mov
clc
test
add
mov
out
in
cli
sarb
add
vpminub
mov
mov
push
mov
rcrl
subl
or
add
jbe
xchg
pushf
out
test
push
and
fwait
xchg
dec
dec
shrb
test
xor
leave
xor
aaa
lock
mov
cs
mov
mov
aad
out
xor
xor
push
push
jbe
jl
and
mov
or
inc
into
mov
andl
and
jbe
jg
movsb
adc
lods
mov
xor
sbb
cld
mov
filds
bound
rclb
in
inc
inc
repz
xor
push
icebp
int3
sub
das
xor
addr16
push
xchg
icebp
ret
mov
mov
ficoms
cmpsl
loop
fs
mov
xchg
sbb
mov
pop
ret
filds
fimuls
pop
jp
imul
pop
nop
add
repnz
fdivl
rcll
in
inc
cmc
push
xor
movsl
cmpsl
pusha
mov
dec
mov
inc
push
popa
outsl
leave
xor
sub
imul
lock
mov
cld
cmp
inc
ljmp
mov
push
and
or
out
sbbl
sahf
scas
outsl
ljmp
imul
out
pop
popf
sbb
cwtl
outsl
push
shl
pop
sbb
sbb
add
imul
into
outsl
xchg
xor
decb
enter
movsl
adc
popa
add
ret
mov
pop
roll
mov
pop
pusha
push
fwait
adc
into
mov
pop
jnp
mov
jno
dec
mov
mov
dec
xchg
or
mov
add
cmp
rcrb
rcll
jbe
int
pop
push
les
push
stc
stc
fwait
fwait
insl
int
ret
jmp
das
jae
rolb
xor
addr16
adc
xor
mov
pop
fwait
adc
dec
inc
or
stos
pop
xchg
xchg
aad
loop
cs
mov
scas
in
lea
arpl
ret
lret
mov
daa
stc
sbb
test
add
mov
ja
pop
pushf
push
repz
jg
faddl
shl
mov
loop
mov
or
in
jp
dec
xor
mov
cmp
cmp
lds
cmpsl
divl
cmp
push
add
ljmp
negb
xor
push
in
insl
js
mov
add
cmpsl
lods
clc
out
stos
sub
in
nop
test
idiv
cs
movsb
or
stos
mov
shlb
inc
mov
iret
cmp
and
xchg
mov
push
fbld
inc
stos
js
je
in
mov
pusha
mov
sahf
jecxz
jns
mov
iret
stc
jl
imul
mov
cld
insl
push
out
out
test
adc
push
movsb
jns
fs
sub
icebp
inc
stos
xor
aas
mov
inc
cld
pop
xor
das
add
mov
daa
mov
mov
and
cli
out
in
loopne
ror
push
sub
jmp
popf
jmp
in
inc
jbe
xchg
cli
push
sbb
or
nopl
into
xor
adc
pop
mov
fistps
pop
in
scas
mov
mov
xchg
incl
mov
push
mov
movsl
jl
les
shrb
test
fdivrs
por
pop
ljmp
pop
js
pusha
mov
xor
inc
sti
jae
xor
scas
dec
test
xchg
adc
jg
cli
pop
scas
cmp
test
sti
stc
adc
pop
mov
cmp
jne
sub
popa
cld
ds
sti
push
adc
adc
push
pop
mov
idivb
xchg
fidivl
imul
jbe
es
sbb
add
fistl
mov
add
pushl
push
sub
lods
call
insb
bound
jno
sub
push
test
repnz
sub
nop
cmp
test
and
and
jo
stc
mov
xlat
test
rclb
sub
gs
mov
dec
ret
sub
jp
js
ljmp
mov
jp
add
cltd
shrb
int
cld
cmp
scas
pop
and
pop
lret
outsl
insl
adc
jb
mov
mov
icebp
and
dec
xorl
rcll
pop
mov
add
xchg
mov
mov
push
jg
mov
pop
sbb
repz
loopne
add
test
mov
pop
leave
sbb
and
fstp
nop
mov
xor
test
mov
pop
ret
xorps
add
cmovo
ljmp
fwait
pop
adc
loopne
xchg
xor
sbb
mov
stos
mov
loop
sbb
rcrb
fldl2e
push
and
push
mov
repz
xor
clc
dec
mov
out
pusha
call
ljmp
xchg
jge
adc
scas
fs
mov
xchg
fwait
xchg
lock
add
mov
xor
dec
ja
sbb
mov
lods
jecxz
pop
fimuls
out
and
push
fiaddl
jmp
dec
sbb
jg
pop
mov
in
test
add
lahf
mov
jg
xor
sub
xchg
lods
adc
dec
lcall
aaa
push
pop
mov
arpl
in
sub
sub
mov
dec
test
xchg
test
add
fmulp
movsb
stos
loope
push
outsb
jnp
in
mov
test
mov
xchg
aad
clc
jo
cmp
mov
push
jmp
push
fisubrl
ret
sbb
test
adc
and
lcall
lcall
and
andb
jecxz
cli
mov
shlb
ja
pop
fstps
loope
ds
ljmp
pusha
je
shlb
aad
sub
add
mov
inc
or
mov
out
inc
sbb
jecxz
stos
push
dec
cmpsl
loopne
dec
xchg
mov
add
jne
cmpsb
scas
insl
lahf
push
negl
push
sarl
push
dec
insl
icebp
ss
xor
xchg
lods
mov
loope
call
mov
xor
and
dec
outsb
xor
repnz
and
lods
mov
les
lcall
data16
adc
adc
out
cwtl
in
data16
sarb
jge
add
inc
add
jo
cmp
push
push
in
outsb
pop
test
adcl
cmpsl
sbb
adc
cmp
dec
or
mov
and
xor
adc
cmp
test
adc
adcb
pop
cmp
ds
pop
add
jmp
xchg
sub
int
es
fwait
or
xchg
call
repz
imul
sbb
cmp
dec
outsl
mov
add
and
lret
sub
add
ljmp
add
pop
inc
sti
lahf
enter
sub
stos
xor
movsl
xor
imul
sbb
rcll
movsl
mov
mov
hlt
pop
fldt
jb
aam
sbb
scas
rcrb
negb
and
les
addr16
xchg
pop
aas
fistpll
dec
cmp
mov
mov
fwait
xchg
push
cmpsl
fnstsw
inc
cmp
scas
and
xor
inc
sub
xchg
cmpsb
jno
leave
insb
push
fisubrs
cmp
push
pusha
in
mov
aaa
push
imulb
idivl
shlb
fistpll
insl
adc
adc
pop
xlat
adc
sbb
aad
inc
cmp
jle
sbb
mov
aas
sbb
inc
fmulp
cmc
jle
dec
add
push
andb
movq
sbb
popf
adc
adc
inc
mov
and
call
pop
push
cmp
jno
xchg
jp
cmp
push
repz
push
div
push
push
mov
xlat
rorb
mov
dec
out
jg
imulb
cmp
xor
mov
stos
std
ja
mov
mov
andb
lahf
pop
dec
loope
fnsave
mov
sahf
or
repnz
xchg
arpl
pop
dec
pop
enter
xchg
sub
pop
jmp
xor
test
and
jns
popa
inc
and
add
lock
les
xlat
loope
add
imul
pop
adc
add
push
pop
scas
mov
push
iret
imull
das
bound
in
or
sbb
ljmp
mov
and
pop
stos
xor
and
mul
mov
imul
aaa
ja
or
and
or
imul
mov
mov
clc
leave
outsl
jne
inc
pop
xlat
push
sarl
sahf
fadds
leave
sub
aam
xchg
jecxz
outsl
mov
dec
movsb
negb
push
aas
xchg
jnp
mov
std
xchg
daa
xchg
sbb
cmpsb
adc
jg
idivl
in
pop
and
das
sub
popf
pushf
shrb
jnp
fidivrl
lcall
jp
adc
xchg
sub
lahf
aaa
idivb
add
addr16
aas
std
sbb
and
loope
sub
jecxz
cmp
cmp
mov
fldcw
cmp
pop
jle
xchg
push
dec
mov
sbbb
fadd
push
xchg
repz
in
test
stc
cmp
sbb
xchg
int3
out
adc
out
mov
jnp
movsl
mov
sbb
dec
pop
push
and
mov
sahf
cltd
clc
lret
sub
mov
loopne
push
rorl
and
ss
push
push
sbb
in
xor
dec
ret
pushf
jae
lahf
xor
gs
loop
stc
je
jnp
dec
ret
mov
push
andb
icebp
dec
ljmp
outsl
mov
dec
out
xchg
mov
inc
jne
xor
into
inc
scas
inc
test
std
mov
lods
sub
imul
notl
shll
sub
push
nop
xchg
push
xchg
push
jecxz
and
sbb
xchg
xor
mov
popa
adc
ret
sub
outsl
adc
xor
scas
lahf
sbb
cmp
lcall
add
jb
push
jge
pop
jmp
in
pop
and
jge
mov
bswap
std
xchg
mov
push
enter
hlt
fdivl
aas
xchg
mov
cmpsl
mov
jae
adc
jle
aaa
xor
dec
jns
jp
and
xlat
aaa
or
sbb
dec
rolb
inc
popf
xlat
and
fsub
cmpl
jmp
xchg
mov
pop
shl
sub
mov
cmp
xor
scas
fdivrs
ja
jmp
arpl
nop
mov
pop
in
adc
addr16
in
adc
cmp
fimull
and
loop
sar
fisttps
ds
cli
push
mov
aaa
xchg
gs
inc
ret
cld
mov
xor
xor
xchg
in
mov
cld
mov
adc
pop
mov
jb
dec
popf
mov
dec
mov
movsl
test
sbb
jp
roll
or
and
rolb
gs
pusha
mov
lea
pop
inc
aad
adc
inc
xchg
je
sub
pop
les
jae
dec
mov
sbb
sub
xor
leave
addr16
daa
int
rorb
leave
push
cmc
mov
jo
xor
cmp
enter
and
cli
push
xor
mov
lret
cli
pop
xchg
enter
daa
cmpsl
jb
enter
pushaw
mov
jle
inc
ljmp
shrb
inc
pop
orl
mov
add
cmp
fcompl
adc
mov
xor
mov
or
in
loopne
loop
mov
push
pop
int
into
push
insb
sub
insb
jle
inc
mul
in
call
fnsave
mov
cld
sbb
push
push
push
xor
lcall
rorl
push
gs
or
push
hlt
jmp
shll
jno
lret
fucomip
cmc
cmpsb
out
push
stc
scas
fadd
inc
arpl
ret
fcompl
xchg
gs
dec
shll
push
xchg
mov
pop
ljmp
out
sti
xchg
cmp
je
and
aaa
fdivrl
sub
mov
pop
addr16
pop
or
sar
ljmp
out
mov
inc
inc
pop
in
rcrl
pop
repnz
pop
cmp
cmpsb
mov
pop
push
mov
imul
push
je
aaa
arpl
test
jl
cltd
or
cmp
les
jae
dec
xor
adc
xchg
xor
cltd
cld
fsubr
data16
jae
jbe
jmp
xor
aas
sub
pop
or
das
sti
push
mov
push
cmp
aam
mov
push
out
arpl
test
inc
rolb
fisubs
inc
cmp
push
lcall
ja
rorb
subb
sub
mov
and
rcrl
push
dec
outsb
xchg
outsl
cs
jmp
push
cmp
hlt
add
dec
imul
sub
rorb
js
daa
cmp
mov
mov
sub
insb
add
xchg
stos
mov
pop
jl
aam
mov
xchg
jmpw
inc
mov
cmpsl
scas
xchg
les
jb
cmc
andb
pushf
add
outsb
mov
dec
adc
pop
pop
pop
out
mov
jecxz
repz
mov
enter
pop
mov
lret
sub
mov
inc
loopne
cmp
fsubs
adc
and
stc
push
add
jmp
or
stos
cmpsl
cmc
nop
lock
hlt
stc
dec
cmp
push
int
mov
xchg
dec
lds
jl
lcall
mov
imul
cmp
fsubp
xchg
jge
sbb
jle
out
cmp
rcll
pusha
rorl
pop
stos
cmp
loope
jle
inc
push
and
insl
es
lock
jecxz
jbe
adc
lock
push
mov
sub
test
xor
mov
into
mov
ljmp
lret
shrb
fs
add
aaa
in
mov
cmpsb
sbbl
int
mov
push
xor
pusha
sub
sub
daa
cmp
aad
int3
xchg
mov
aas
adc
mov
in
or
sbb
jl
push
inc
sub
pop
inc
jno
jle
scas
sbb
ret
in
mov
out
cmpb
cld
mov
push
push
sub
xchg
dec
int3
jo
dec
jecxz
mov
pop
in
or
mov
ret
mov
loop
sbb
js
icebp
into
lods
jns
arpl
movsb
lahf
test
xchg
int3
pop
iret
mov
push
testb
sub
bound
rcr
test
adc
inc
sub
cmc
mov
sub
mov
inc
out
push
mov
fcompl
iret
test
adc
decb
mov
pop
add
and
call
mov
mov
or
insb
xchg
or
pop
inc
rcl
add
idivl
loopne
mov
push
addb
stc
xor
testb
cltd
sarl
add
repnz
aam
jo
out
inc
aas
rclb
mov
jbe
or
pusha
jp
and
inc
iret
lock
lods
fdivl
js
lock
insl
pop
roll
nop
push
mov
cltd
xor
adc
and
xchg
int
jecxz
data16
inc
mov
jbe
or
sbb
sub
inc
add
sub
cmp
inc
dec
mov
sbb
mov
dec
jbe
mov
loope
cs
mov
add
xchg
inc
jp
jns
fucom
movsb
and
push
push
dec
dec
jmp
push
push
test
inc
je
and
ljmp
mov
dec
fwait
adc
fcmovnb
pushf
fs
into
mov
mov
aas
ss
lahf
xchg
scas
out
xlat
push
imul
stc
das
mov
pop
pop
dec
std
mov
out
loope
nop
jmp
rsm
mov
loope
adc
xchg
jae
mov
sub
xchg
fwait
sub
and
sbb
sbbb
stos
push
xor
jbe
popf
sbb
nop
mov
push
sub
and
cmp
mov
push
dec
shr
outsl
cwtl
push
mov
pop
or
fmulp
inc
jl
testb
fisubl
mov
fwait
out
pop
lahf
push
jecxz
jle
fidivrs
mov
adc
mulb
int3
jb
into
ja
insl
push
js
jb
shl
push
scas
enter
enter
lea
lods
test
or
push
push
mov
jbe
fs
icebp
and
push
mov
jg
push
jns
cwtl
dec
push
add
adc
jle
pop
sub
push
repz
addr16
push
mov
fnstenv
xor
xchg
mov
mov
pop
test
mov
out
aad
cmp
mov
jb
in
push
sub
xlat
pop
jle
fwait
inc
push
adc
repz
pusha
cs
lock
sti
stos
pusha
jno
inc
mov
incl
stos
insl
pop
in
sbb
push
jno
cmp
push
dec
ss
mov
daa
sti
shlb
jg
scas
mov
add
mov
and
jecxz
jnp
mov
out
mov
mov
repz
loopne
pop
cmpsb
xchg
cmp
add
stos
jecxz
mov
fs
mov
xchg
mov
into
or
add
xchg
aaa
lods
js
fmull
jg
clc
loop
xchg
sbb
in
hlt
fcomi
cltd
fmull
rorb
add
shll
mov
test
pop
fdivs
jbe
imul
rol
xchg
and
repnz
adcb
mov
inc
sub
cmp
sbb
or
les
xor
subl
or
add
inc
ss
xchg
ds
ljmp
outsb
push
inc
xchg
sub
cmp
push
jp
mov
out
mov
adc
adc
arpl
jl
xor
aas
loopne
xchg
sub
mov
inc
icebp
cli
out
sbb
pop
mov
xorl
rolb
aas
lret
cli
fistpll
in
inc
enter
fdivr
jmp
hlt
fsubl
lret
mov
mov
xor
jmp
and
aaa
in
jp
and
dec
xlat
sahf
push
ja
aas
jmp
push
sbb
popa
jl
dec
jbe
sbb
xor
pop
dec
test
lock
call
add
jnp
xchg
lds
pop
cmp
and
sahf
mov
addr16
mov
fdivrs
loopne
ja
popa
pop
cmp
stc
int3
push
pushf
jne
sub
adc
pusha
loop
inc
call
push
js
les
aam
scas
out
imul
orl
xor
cli
sub
loop
jbe
lahf
jbe
jne
nop
push
jmp
add
and
xor
inc
sbbb
xor
ss
jge
insb
pop
cmp
push
and
push
gs
cwtl
jg
dec
or
aad
lahf
leave
mov
mov
jb
push
sar
mov
mov
or
sahf
scas
push
adc
xchg
xor
leave
out
fcom
inc
insb
push
jecxz
mov
mov
cmp
push
mov
mov
adc
pop
inc
adc
xchg
pop
sbbb
mov
lods
scas
dec
loopne
fsubl
mov
repz
jne
push
jp
mov
fbld
push
dec
inc
push
gs
xchg
bound
enter
addr16
xor
sbb
mov
rcll
es
rcrb
add
das
cltd
enter
push
xor
push
sahf
lods
push
mov
outsl
or
das
repnz
dec
je
test
xor
push
pop
jecxz
insl
subb
or
out
leave
aam
lret
mov
dec
data16
aam
sbb
push
jne
dec
fnstcw
shr
adc
cmp
adc
int
inc
sub
cltd
cmp
mov
ds
mov
hlt
pop
sub
mov
inc
xchg
imul
fcompl
pop
pop
gs
mov
mov
mov
cmc
mov
jno
mov
mov
mov
mov
push
movsl
sahf
fiadds
mov
jo
mov
mov
faddl
fsubrp
in
add
shrb
pop
stos
cmp
jbe
jl
push
pop
int
jecxz
push
addr16
jno
push
sub
mov
and
push
inc
adc
cmovb
dec
pop
movsb
lea
ret
out
shrl
sub
out
xchg
pop
pop
ficoml
out
xchg
jmp
mov
mov
insl
pop
mov
dec
out
adc
imul
push
jae
repz
add
push
pop
mov
imul
addl
icebp
lds
jne
push
in
jns
ja
xchg
fnsave
fcomps
xchg
xchg
jmp
adc
adc
in
jae
lret
daa
cmpsb
xorl
in
inc
lock
push
lock
outsl
lock
dec
or
in
add
das
mov
mov
inc
mov
cmp
mov
adc
jmp
notb
push
cmpb
cmp
push
and
sbb
inc
dec
cli
nop
add
jmp
add
lret
cmp
sbb
aam
popf
inc
mov
add
push
jl
sbb
pop
mov
scas
pop
push
push
lahf
or
dec
mov
arpl
push
cmpsw
jmp
and
popa
lcall
sub
mov
pop
scas
adc
mov
add
bound
add
lret
dec
adc
xchg
in
mov
lods
les
jne
in
cmp
out
pop
out
add
loopne
gs
mov
sbb
inc
inc
adcb
push
adc
mul
in
xor
and
dec
pop
dec
pop
dec
fisubl
outsb
push
pusha
or
jmp
mov
add
ljmp
xbegin
cmp
push
out
jmp
aaa
cwtl
lahf
push
or
mov
jo
mov
cmp
nop
aad
rorb
scas
jns
ret
mov
and
sbb
pop
insb
pop
icebp
stos
jge
call
dec
jb
add
and
insl
xchg
sbb
divb
pop
pop
leave
sub
mov
cmp
jg
jne
cmpsb
ljmp
adc
pop
iret
imulb
inc
xchg
and
ss
sub
jne
adc
inc
sbb
dec
or
xor
inc
jge
outsb
call
bound
cmp
popa
sbb
inc
dec
add
inc
aam
scas
mov
xchg
adc
push
int
inc
xor
lret
xchg
mov
and
loop
or
jae
mov
stc
fdivrs
xchg
inc
adc
inc
mov
cli
cld
icebp
xor
daa
xchg
and
inc
xchg
nop
jb
lea
stos
js
fwait
sbb
xlat
nop
int3
xor
sub
xor
jno
sbb
cmpsb
imul
and
out
push
pop
mov
fs
out
scas
xchg
lahf
adc
push
fs
sbb
sbb
push
jle
mov
push
sub
arpl
add
mov
fnstsw
pop
mov
vpcompressd
adc
mov
je
lods
inc
adc
sbb
sub
in
adc
lock
hlt
mov
lret
test
push
xor
sbbl
mov
aaa
rcll
pushf
inc
mov
push
fimull
aaa
sub
push
mov
out
xchg
ljmp
or
xchg
push
inc
test
jbe
ds
cmp
mov
rol
or
xchg
imul
orb
aaa
sbb
js,pn
cmpsb
inc
inc
icebp
lret
push
aas
push
xchg
cmc
std
add
pop
or
ret
rcr
sarb
lods
xlat
repnz
mov
loopne
pop
dec
out
inc
xchg
inc
dec
jmp
inc
adc
insl
and
clc
and
inc
mov
mov
pop
lock
ret
cwtl
xchg
mov
aaa
jge
jne
fcoml
add
mov
jmp
aad
jge
rorl
bound
mov
sahf
pop
ret
fsub
mov
cmp
jno
lcall
inc
cmp
sub
adc
push
cmp
loope
fists
aam
aam
lcall
shll
js
pusha
int
in
sbb
inc
shll
xchg
lea
sbb
cmp
outsl
fs
jbe
stos
jg
push
cmc
aaa
aaa
cmp
pop
ficomps
mull
fcomps
std
idivb
stc
movsb
andl
mov
inc
fisubs
repnz
sub
inc
add
push
and
cmp
and
push
adc
push
mov
cmpsb
pop
pop
cmp
push
lret
or
or
aam
popa
adc
xor
repnz
in
aam
pop
adc
mov
fcoms
sub
ss
mov
add
lahf
das
pop
cmpsl
lahf
js
push
movsl
rolb
lock
dec
aam
int3
xor
aas
aas
xchg
les
inc
insb
add
int3
sbb
ret
insb
dec
outsb
pushf
lods
sub
rolb
call
push
adc
std
sub
mov
cmp
sub
cs
or
pop
add
inc
les
xchg
out
fcmove
cmp
out
pop
ret
dec
sub
or
jne
mov
push
hlt
sub
sub
mov
sbbb
cmp
mov
push
scas
inc
and
scas
icebp
xor
ret
pop
inc
andl
sub
push
and
mov
loope
call
into
dec
js
mov
sub
cmp
movsb
test
push
pushf
in
loopne
fbstp
stos
pushf
outsl
insl
decl
pushf
mov
fs
sbb
push
out
lret
inc
inc
dec
xor
cmc
dec
xchg
cmpsb
sbb
into
in
mov
pop
scas
mov
es
sbb
dec
mov
cmp
inc
xchg
fnop
inc
push
jo
das
fadds
fwait
jae
adc
int
cmp
fidivrs
push
stos
mov
loopne
sti
adc
pop
cmp
dec
loopne
jb
and
outsb
cmp
pop
push
jle
vrcpss
pop
leave
mov
pop
rcr
mov
int
sbb
int3
push
cltd
jns
popf
pop
inc
in
ficomps
inc
xchg
in
addr16
mov
les
jmp
pushf
and
inc
pop
ljmp
xor
and
inc
and
pop
cltd
sbb
and
mov
mov
stos
lds
push
mov
testl
sahf
pop
cwtl
fdivrl
sub
pop
adc
sbb
mov
cmp
cmpb
dec
mov
sbbl
xor
dec
push
dec
adc
xor
scas
or
idivl
add
mov
or
adc
adc
inc
les
lds
mov
enter
ret
push
ss
repnz
mov
lds
jl
mov
sub
add
push
jae
xlat
in
xchg
sbb
inc
fwait
push
enter
lock
cmp
sbb
pop
aad
jp
std
mov
test
or
mov
popf
fxch
mul
aam
inc
mov
lret
pop
outsl
inc
pop
adc
sbb
sub
dec
xor
sub
addr16
mov
adc
and
cli
inc
cli
aas
pop
mov
nop
cmp
xchg
imul
dec
dec
lret
movsb
or
push
aam
push
jg
hlt
outsl
push
sti
adc
mov
inc
xor
fwait
ja
sub
std
add
or
dec
push
and
pop
inc
ror
repnz
loope
icebp
mov
popa
mov
into
sbb
lea
inc
loop
jns
rcll
and
sti
pusha
push
mov
jns
mov
mov
cltd
xchg
clc
addb
clc
arpl
jl
xor
scas
sub
sbb
in
jmp
mov
adc
push
inc
mov
mov
adc
daa
lds
jnp
fs
sbb
pop
fdivrs
cmp
xor
push
subl
jp
adc
push
movsb
xchg
pop
repz
xor
push
daa
push
shl
add
mov
lods
fadd
scas
sahf
push
iret
and
sahf
pop
aam
in
fimull
xchg
dec
sub
sbb
fs
xlat
or
call
push
mov
cmpsl
xchg
rolb
loope
in
xchg
push
nop
int3
pop
inc
mov
mov
jmp
sub
stc
push
dec
mov
out
mov
or
out
stos
push
in
mov
scas
popf
loop
mov
sub
ds
out
scas
pusha
mov
ja
aad
push
fistl
pop
pop
jae
inc
mov
push
int
shlb
insl
ficompl
sbb
mov
mov
xchg
mov
data16
test
xor
jno
and
rcr
movsb
movsb
cli
inc
jmp
sahf
test
xorl
jmp
rolb
add
fisttpl
adc
mov
sub
rorb
cmp
cwtl
inc
sahf
push
int3
or
fs
or
and
scas
ja
push
pop
lahf
in
sub
push
add
pop
mov
loopne
jbe
push
jo
stos
adc
aad
add
aas
xchg
insb
ret
mov
inc
frstor
mov
xchg
cs
mov
and
pop
sub
xchg
pop
sahf
mov
rcl
mov
hlt
out
adc
stc
or
fistpl
sbb
inc
and
lds
lods
jno
ret
inc
or
pop
adc
xchg
ficoms
stos
test
repz
jo
mov
insl
push
jmp
add
jge
sti
ss
mulb
insb
test
dec
movsl
inc
xlat
jge
lds
subl
and
push
and
call
sub
mov
es
mov
sbbl
cmp
inc
pusha
ljmp
shrl
inc
outsl
pop
dec
jnp
mov
xor
jae
sbb
ds
lret
arpl
sub
sbbb
faddl
sbb
out
stc
das
hlt
out
jb
pop
fists
test
mov
jbe
test
daa
xor
cwtl
sub
fstl
add
repnz
and
jbe
aad
arpl
sub
push
aad
imul
imul
push
lea
inc
inc
pop
xchg
add
js
gs
mov
das
fsubl
xor
in
out
sti
pop
lods
loop
jae
jbe
in
mov
adc
jmp
call
push
je
xchg
aas
mov
cmp
arpl
jne
mov
lcall
and
pop
pop
adc
mov
jl
cmp
call
and
outsb
cmp
jb
gs
lds
inc
dec
dec
mov
mov
in
jl
leave
jg
add
and
ja
enter
sbb
notb
mov
cltd
pushf
pop
psrlq
mov
or
aad
mov
aas
inc
xchg
cmp
mov
ret
icebp
sbb
dec
mov
xchg
jp
rorl
cmp
fistpl
mov
pop
daa
aas
adc
data16
loope
inc
dec
xor
sahf
cltd
daa
jmp
nop
outsl
int
cmp
jnp
xor
lock
in
cs
movsb
cmpsl
nop
daa
xchg
aad
int3
push
decb
in
in
into
int3
aam
xchg
in
clc
jge
pop
rorl
lock
stos
gs
jnp
nop
inc
sahf
pop
imul
insb
arpl
jge
inc
loop
cmp
icebp
ficoms
mov
pop
scas
dec
jne
jmp
xor
xchg
loope
shll
mov
int3
sub
add
push
inc
repz
jecxz
shlb
jns
lods
mov
addl
adc
rcrl
mov
insb
sti
icebp
sub
cli
fdivs
and
mov
in
pop
ja
mov
in
insl
adc
cltd
cmp
and
push
cld
leave
imul
out
loop
inc
inc
data16
int3
xchg
mov
stos
and
pop
or
rcrb
pop
outsb
outsl
roll
and
mov
int3
movsl
in
mov
test
imulb
push
das
sub
sbb
stos
push
and
sbb
add
iret
adc
mov
lods
add
fldl
pusha
rcrl
or
insl
aas
jbe
popf
adc
add
arpl
cli
adc
repnz
cmp
movsb
mov
xor
lds
jns
outsb
inc
cld
fnsave
sub
xchg
cmpsl
loop
test
negl
std
jmp
shll
mov
movsl
sub
pop
in
xchg
icebp
filds
cs
mov
push
lahf
add
push
xchg
dec
sbb
leave
and
iret
xchg
pop
scas
roll
leave
push
mov
push
ds
sbb
fwait
cltd
pxor
mov
fucom
lea
imul
push
dec
dec
ja
call
xlat
or
subb
push
ds
sub
push
test
pop
inc
add
push
js
lea
lds
push
cld
movsb
mov
lret
pop
pop
stos
iret
inc
push
fs
push
incb
in
pop
push
stos
inc
stos
lret
aad
stc
jae
mov
frstor
inc
push
cmp
sbb
sbb
inc
out
adc
ffreep
sar
and
nop
mov
dec
out
push
lea
ret
dec
movsb
mov
xlat
inc
mov
xor
mov
sub
imul
loopne
inc
add
pop
cmp
xlat
sub
cmpsl
loope
out
les
lret
loopne
andl
sar
add
and
xchg
xor
xchg
add
cmpsb
jb
xlat
in
xor
xor
out
lret
xor
leave
out
pop
pop
ljmp
sbb
bnd
sbb
xchg
dec
lock
hlt
ljmp
scas
mov
push
add
repz
and
subb
jge
fucom
int
sarb
mov
jp
sarl
and
cli
ss
scas
aas
xchg
xor
jne
rolb
fprem1
xchg
jle
enter
xor
mov
push
mov
je
push
jae
push
cmp
push
mov
add
daa
jg
into
outsl
dec
push
out
or
adc
pop
inc
rcrb
mov
inc
pushf
mov
jge
mov
dec
hlt
mov
cmp
scas
lret
hlt
pusha
movsl
cltd
mov
sub
push
sbb
xchg
movsl
mov
cmp
push
adc
pusha
cwtl
punpcklwd
lods
fdivrs
or
lea
fdivr
scas
mov
icebp
in
jg
pop
push
cmpsl
iret
push
sbb
mov
jns
xor
lcall
sub
push
rorl
orb
les
pop
repz
les
sub
movsb
test
mov
xchg
sub
icebp
add
arpl
call
inc
popf
adc
push
mov
jb
and
xchg
mov
mov
jae
xlat
fs
add
pop
dec
adc
loopne
iret
hlt
and
movsb
mov
in
sub
add
push
bound
push
xchg
mov
push
push
lods
cmp
or
jb
sub
js
bound
lock
stos
sbb
dec
movsb
cwtl
mov
pop
xchg
aas
push
aad
stc
mov
repnz
jbe
mov
div
test
sarl
jg
movsb
adc
aad
test
add
data16
push
jno
sub
xor
sub
fcompl
add
mov
pop
mov
or
test
xchg
adc
pop
adc
daa
into
nop
fcos
into
sub
sahf
adc
sbb
adc
lea
hlt
scas
outsb
pushf
aas
sub
xchg
lahf
cmp
dec
loop
sub
dec
bound
int3
jge
mov
ss
dec
aaa
xlat
xchg
dec
dec
in
xchg
jne
data16
js
ljmp
and
out
sub
gs
ret
lock
jmp
sarb
add
push
repnz
fmuls
xchg
inc
out
xlat
inc
daa
sbb
sbb
jp
cli
sub
das
adc
mov
xchg
add
pushf
sbb
nop
repnz
out
pop
push
add
push
adcl
pushf
test
icebp
mov
loop
fsincos
mov
ret
mov
fsubrs
call
lret
xor
shlb
jle
dec
test
cmp
lds
leave
cwtl
stos
lcall
push
push
cmpsb
mov
testb
inc
push
mov
xchg
jle
aas
cld
jle
enter
fidivs
clc
shrb
sub
test
push
xchg
jno
inc
pop
xchg
sbb
cmp
cld
dec
sbb
fiadds
mov
aas
out
xchg
add
mov
jmp
pop
pop
cs
mov
rolb
fisubl
mov
adc
in
pop
shlb
in
lea
mov
push
fdivs
dec
mov
push
xchg
mov
add
dec
sahf
xchg
add
insb
je
out
cld
out
cld
test
or
mov
sbb
arpl
divl
sahf
clc
int3
add
loope
fistpl
ja
pop
notl
xchg
into
leave
xor
xchg
cmp
or
push
sbb
leave
in
scas
pusha
xor
out
fwait
xchg
or
out
cwtl
dec
sub
jle
or
out
add
lret
or
push
cltd
xchg
lret
push
sbb
repz
jmp
or
int3
or
stos
shll
or
sti
mov
lcall
add
test
sub
int
dec
nop
test
mov
sub
add
rolb
push
in
test
or
xchg
nop
inc
cs
add
pop
aad
insb
xor
loopne
xor
ffree
movsb
sub
pop
insl
jle
mov
mov
les
add
in
inc
insl
push
dec
xchg
rcrl
pop
dec
inc
imul
cwtl
sbb
jnp
ds
mov
push
in
pop
icebp
mov
addl
test
mov
and
mul
adc
sbb
mov
or
int
hlt
pop
div
daa
and
daa
pop
jb
xor
or
test
adc
and
popa
mov
loopne
roll
sub
sub
and
into
mov
sub
cmc
push
je
stc
and
js
imul
rclb
arpl
in
aam
inc
mov
imul
or
inc
imul
mov
sub
pop
mov
or
arpl
in
xlat
jmp
sbb
ss
out
hlt
imul
mov
jp
dec
adc
dec
rclb
push
fnsave
pop
lret
xchg
mov
mov
cld
cmc
add
pop
sbb
inc
movsb
daa
sahf
rcrb
stos
inc
aaa
sbbl
in
sbb
xor
jb
cmp
int
movsb
mov
dec
mov
add
jo
in
dec
loop
adc
lret
jb
imul
hlt
loope
roll
dec
stc
xchg
int3
js
adc
cmpl
fucomip
adc
add
jge
xchg
mov
hlt
push
sbb
dec
pop
data16
pop
sub
lcall
mov
outsb
jecxz
xchg
fstl
les
frstor
or
push
outsl
rolb
add
repz
or
sarb
xchg
pop
or
lret
mov
in
xchg
dec
jae
push
clc
push
out
xor
lret
or
xchg
mov
mov
lret
mov
push
cltd
arpl
inc
or
sbb
testl
cmp
fisttps
jae
pop
cli
pop
fimuls
out
fisttpll
or
pop
xor
sbb
jae
iret
xchg
aad
add
or
je
ljmp
sub
cs
or
outsb
xchg
out
xchg
repnz
push
adc
inc
ret
dec
scas
loopne
and
push
ret
lret
test
cmp
cmp
xchg
mov
lcall
pusha
and
adc
vunpcklps
sub
xlat
aam
mov
fisubrs
push
cmp
les
push
hlt
inc
cmp
ja
pop
enter
imul
in
inc
aam
pop
fwait
mov
cmp
dec
jno
fldl
push
out
fidivl
ss
leave
cs
sbb
dec
push
inc
add
fidivrs
xor
lods
sbb
lret
into
test
adc
cld
in
addr16
push
hlt
mov
jle
les
push
push
push
push
dec
mov
add
addr16
das
enter
xlat
stc
push
cmp
hlt
mov
push
xchg
or
addr16
push
mov
sub
push
enter
push
sbb
int3
mov
jns
divl
jge
push
mov
lcall
dec
imul
jp
mov
jl
dec
mov
negl
sbb
mov
shrb
push
fisttpl
jo
adc
or
aas
test
cmp
in
adc
mov
movb
sub
aad
push
inc
loope
movsb
lods
stos
lretw
sarl
aad
adc
xchg
sub
addr16
push
mov
jns
sub
stc
icebp
ds
cmp
int
and
mov
jae
lock
loope
es
dec
lock
xor
test
add
push
popf
mov
insb
ja
daa
xchg
inc
cmp
dec
xchg
and
fwait
lahf
xor
push
add
sbb
push
pushf
xor
inc
jecxz
jmp
test
jmp
roll
inc
imulb
pop
or
lahf
dec
outsl
jmp
sbb
ljmp
rcrl
stos
repz
mov
mov
js
loope
les
jmp
dec
rolb
sbb
popf
je
or
ja
icebp
popa
mov
pop
push
pop
xor
sub
repnz
jp
cmp
lods
sub
jae
nop
adcl
int
xor
sbb
mov
push
mov
inc
loop
add
or
sbb
dec
fs
sbb
fisttps
pop
push
sbb
or
jo
loop
mov
xchg
sbb
mov
dec
ffree
jns
pop
insb
and
xor
xor
repnz
fwait
lock
jo
and
out
inc
or
sti
in
mull
jb
arpl
divb
leave
adc
popa
in
gs
rorl
ss
mov
js
popa
push
inc
loop
repz
mov
and
mov
lcall
jno
cltd
xchg
mov
iret
ret
ret
adc
lahf
push
sbb
nop
cmp
out
test
xor
ss
rorb
xor
sahf
add
mov
adc
fnstenv
sub
mov
inc
ljmp
xchg
je
fucomp
pop
add
mov
inc
inc
mov
lcall
jae
movsb
and
mov
cmpsb
sub
repz
cs
push
int3
push
test
mov
movsb
jb
sbb
xor
jnp
xor
pusha
cmp
fimull
jo
sub
iret
pop
adc
lds
cmp
clc
fildl
lret
cmpb
bound
pop
scas
in
mov
sub
mov
sti
push
mov
jmp
pop
adc
sbb
jmp
push
outsb
ret
and
sub
xor
repz
notb
xchg
mov
push
outsl
lcall
dec
or
fimuls
jns
mov
jl
sub
cmp
je
rcll
sub
test
cli
in
loop
pop
mov
rorl
cmpsb
arpl
fistpl
sbb
mov
lea
or
adc
sub
or
jno
subb
sahf
inc
inc
pop
cmp
xchg
cli
in
push
out
jno
fs
lods
sub
mov
mov
jmp
sbbl
aaa
and
lahf
pop
add
in
nop
mov
push
cli
mov
push
popa
pop
and
scas
lock
fwait
andl
push
adc
bound
inc
rorl
insb
jb
push
and
mov
out
rcl
stos
sbb
dec
pop
and
div
adc
sbb
aam
push
mov
sbb
add
jge
add
mov
loop
nop
mov
dec
rdtsc
popf
xchg
fmulp
pop
scas
aad
pop
adc
dec
lret
push
movsl
popf
jbe
and
inc
jae
sbb
push
dec
mov
arpl
mov
push
mov
dec
imul
inc
inc
data16
addb
xor
add
mov
ficoml
inc
daa
sbb
dec
enter
cmpsb
push
dec
cmp
sbb
inc
aam
repz
lods
movsb
pop
push
dec
imul
add
sub
push
mov
mov
mov
pop
repnz
jl
popf
xchg
jae
fwait
jo
ss
enter
popa
and
xchg
push
inc
push
fcomps
cmpsl
dec
fsubl
mov
push
push
mov
sti
xchg
push
scas
add
adc
icebp
test
mov
sub
mov
arpl
clc
push
cltd
lahf
pop
out
push
mov
pop
dec
inc
and
mov
inc
xchg
lahf
inc
jno
je
popf
inc
sub
mov
jb
cmc
lods
pop
pause
lret
cld
es
mov
xchg
int3
lea
or
jnp
ja
frstor
sbb
data16
and
lods
outsb
lret
scas
push
das
enter
jno
enter
hlt
iret
cs
inc
cmp
cmpl
mov
lds
ss
out
cltd
fs
pusha
push
arpl
xorl
push
sub
fidivs
shlb
add
lock
aaa
daa
fsubrs
mov
mov
sti
inc
dec
ja
mov
sbb
dec
ljmp
mov
aas
or
in
mov
pop
stc
add
bound
mov
xchg
stc
insl
test
mov
inc
imul
es
jnp
out
cmp
inc
or
lahf
lret
ljmp
iret
jl
imul
scas
int3
scas
add
xchg
jbe
dec
jg
cli
sbb
xor
cmpsb
in
lret
add
pusha
cli
rorl
pop
fimuls
in
in
jge
das
lds
inc
in
sub
jne
xchg
cmp
sub
xor
lret
push
mov
sub
movsl
pop
lods
outsl
jge
arpl
jle
lods
sbb
out
es
movsl
stc
add
cltd
in
sbb
add
push
jg
xchg
mov
mov
pop
xor
jae
push
and
lret
xor
pop
xlat
sub
xor
dec
ffreep
sbb
mov
add
test
out
inc
jo
in
xor
test
inc
fs
xchg
mov
and
in
popa
aaa
out
cwtl
cmp
push
mov
push
out
cli
lds
push
movsl
push
push
das
sahf
stc
fs
in
subl
sbb
int
rolb
movsb
push
xchg
mov
xchg
sbb
stc
add
adc
jbe
mov
data16
ja
and
dec
xchg
jbe
call
cltd
aad
and
rolb
mov
adc
xlat
add
call
clc
stc
jecxz
loope
lock
inc
xchg
inc
nop
pop
rcrb
dec
jb
shrb
xchg
test
mov
mov
xor
insb
or
mov
sbb
sbb
xor
push
inc
adc
cmp
stos
outsb
xlat
sbb
push
pop
cmp
jge
jl
push
lods
je
pop
cmp
enter
push
sti
jecxz
mov
scas
push
pusha
mov
or
enter
test
out
int3
xor
scas
insl
test
dec
or
int
in
repnz
outsb
jnp
popa
inc
rclb
pop
lret
lods
cmp
je
mov
xor
lock
or
inc
push
repz
push
lahf
jecxz
pop
dec
push
pop
in
pop
xchg
outsl
sub
cld
or
push
int3
inc
fcmove
outsb
lds
jle
dec
mov
or
push
xor
push
fldl
add
mov
out
pusha
jae
cltd
dec
fnstsw
lahf
ss
inc
jl
cmp
cmpsb
andl
mov
mov
pop
lods
lea
sub
sbb
add
xor
lret
stos
pop
xor
pop
je
stc
pop
mov
ljmp
sti
repnz
mov
shlb
repz
and
ja
mov
xor
push
push
aas
and
dec
dec
loop
ret
push
loopne
scas
loop
xchg
jmp
mov
cmp
dec
outsl
jmp
jecxz
ror
scas
xchg
ret
xchg
adc
lds
push
xchg
and
iret
subl
repz
gs
imul
test
mov
sahf
shl
pop
push
pusha
xor
sub
or
pop
add
icebp
bnd
xchg
inc
jno
push
fwait
sbb
cmp
icebp
nop
fistl
pop
std
fnstcw
dec
imul
imul
pop
sbb
jle
or
call
jno
js
sbb
js
lods
in
add
je
lahf
iret
movsb
inc
in
xor
leave
stos
gs
mov
xor
movsb
dec
adc
loopne
mov
je
push
stos
add
xor
popf
ljmp
mov
test
test
pop
cmp
stos
push
mov
lea
cld
dec
add
cmp
mov
inc
pop
ds
pop
and
jb
ret
sub
or
cmpsb
add
add
dec
out
punpckhwd
push
and
pusha
nop
in
pop
daa
shrb
cli
mov
out
addl
ss
push
iret
xor
into
popa
lfs
inc
jmp
mov
cmpsb
mov
fadds
lea
scas
dec
xchg
dec
stos
daa
lea
and
sub
cltd
cmp
pop
jno
push
cmc
push
mov
mov
mov
insl
push
rclb
xchg
pop
out
cli
xchg
int
xchg
push
mov
dec
fwait
icebp
rcrl
and
dec
fwait
popf
inc
insb
fnstenv
or
jecxz
or
int3
xorb
xchg
test
gs
jl
sbb
dec
insb
cwtl
push
ljmp
mov
xor
fsubr
xor
daa
mov
pop
push
jmp
xor
pusha
ja
dec
je
mov
popa
xchg
and
or
mov
in
rolb
imul
mov
pop
ret
dec
xchg
out
lds
int3
sbb
mov
bound
add
out
outsb
sti
jmp
arpl
fisubrl
mov
jg
mov
sub
pop
test
dec
sbb
shrb
xchg
scas
push
ja
xor
imul
gs
call
dec
sbb
ss
repnz
shr
ss
icebp
insb
test
jbe
int
data16
sbb
dec
into
cmpsb
idivb
sbb
jae
cmp
lock
mov
pop
add
adc
dec
push
xchg
jl
leave
xor
xor
rcrl
mov
inc
jecxz
mov
popf
mov
cmpb
clc
adc
xor
jne
push
arpl
out
mov
push
fldenv
mov
xchg
aad
inc
call
pop
es
in
fsubl
mov
xchg
adc
push
mov
arpl
scas
pusha
fsubrp
xor
out
pop
int
fisubrl
pop
sub
and
rorb
cmpsl
fcoms
mov
and
gs
or
popf
mov
adc
fnstcw
pop
mov
pop
sub
lret
add
sub
and
sbb
inc
dec
jp
les
inc
ret
enter
sbb
sahf
dec
cmp
mov
cmpsb
or
and
stc
lret
ja
and
xor
push
lock
sub
imul
in
stc
sarb
jmp
cmp
cmpsb
outsb
mov
and
flds
adc
or
mov
inc
mov
scas
pusha
fbstp
pushf
adcb
ljmp
mov
loopne
cmpsb
xor
xchg
xchg
cmp
into
in
fiaddl
aad
popa
stc
push
xor
insl
sub
or
mov
std
adc
mov
push
je
xor
jns
jmp
fldcw
mov
inc
sub
sub
adc
loop
aam
push
push
jae
push
das
jo
jnp
or
or
pushf
cmp
mov
push
imul
aas
sti
mov
out
cmpb
mov
sarb
insb
lea
repz
pusha
adc
inc
or
popa
loopne
inc
lds
mov
dec
sub
mov
mov
dec
pop
lahf
test
inc
ds
cmp
jb
loop
fadd
push
popf
xor
je
and
hlt
mov
imul
fwait
mov
xor
rclb
mov
xchg
rolb
pop
adc
int3
add
clc
popa
mov
add
lock
mov
pop
jmp
jge
incb
mov
mov
stc
push
pop
inc
fcmovnu
dec
dec
cmc
aad
jb
pushf
jp
fmull
mov
and
xlat
and
xchg
cmp
les
dec
lods
fldl
shlb
mov
push
pop
xchg
ret
arpl
addr16
aam
xor
lret
mov
add
xchg
or
outsb
aaa
sub
cltd
outsl
lret
cld
inc
out
movsl
mov
jo
int
lret
mov
xor
fisttpll
popf
hlt
into
push
sub
cli
jbe
sar
mov
cs
ljmp
mov
dec
mov
ret
dec
add
push
xor
xor
push
arpl
pop
rcl
xor
xchg
push
dec
dec
or
and
lahf
call
pop
out
subb
mov
push
shrl
pop
pop
jp
mov
repnz
mov
andb
mov
and
out
cltd
imul
fistps
xor
int
out
or
aad
add
jb
xchg
js
mov
cmp
cmp
xor
push
inc
jle
mov
mov
decl
xchg
dec
xor
mov
mov
xchg
js
sbb
cmp
and
movsl
cmc
outsl
sub
icebp
mov
fnsave
sub
addb
jne
mov
adc
bound
push
insb
rclb
frstor
pop
fnstsw
mov
lret
daa
and
mov
jecxz
fdivrs
outsb
xchg
out
push
inc
adc
mov
or
jp
loop
pusha
in
jg
pop
adc
cmpsl
jnp
loopne
stc
mov
pop
sbb
movsb
pop
push
in
sub
mov
enter
bound
cmp
testl
adc
pop
call
cmp
in
cmpsb
movsl
push
jns
inc
adc
push
aaa
popa
or
push
data16
hlt
inc
mov
rorb
out
fdiv
ret
out
pop
data16
cmp
mov
aaa
negb
pop
mov
imul
popf
sub
mov
sbb
mov
or
aaa
mov
loopne
and
mov
lahf
sahf
xchg
jecxz
sbb
push
mov
mov
test
jl
js
cmp
add
hlt
aas
stc
lods
xchg
cmpsb
je
lcall
dec
or
popa
inc
xchg
scas
add
sbb
push
jl
out
add
cmp
fidivl
aaa
cmc
sbb
and
sub
mov
mov
xor
fmull
mov
push
dec
es
push
cmc
stos
sti
cmpsl
sbb
lock
sub
sar
popa
das
pop
cmp
ja
rol
sbb
mov
adc
cmp
cltd
sub
sbb
mov
lock
iret
lock
mov
mov
sbb
sti
adc
xor
jle
repnz
loope
std
les
push
aad
jo
lea
dec
std
dec
lea
in
xor
stc
idivl
xchg
cli
icebp
popl
hlt
scas
xor
push
and
test
int
add
xlat
xor
pop
lock
decb
or
nop
push
pop
sbb
push
inc
aas
adc
xor
sbb
xor
icebp
fs
jge
sti
notl
aam
imul
lcall
cmc
push
jp
scas
inc
add
cltd
jmp
rolb
stos
pop
cs
sub
movsb
push
cmp
push
push
jns
out
cmp
inc
fmull
jp
adc
pop
jo
cmpsb
out
lock
cmc
push
psadbw
sbb
js
xor
xchg
pushf
dec
insl
pop
inc
je
sarl
push
movsl
jb
sub
jp
mov
jl
and
test
fwait
mov
pop
fadd
push
addr16
pusha
pop
push
jno
sub
aaa
in
insb
pop
dec
popfw
and
or
jp
call
cs
daa
decl
cli
mov
ret
jecxz
popa
test
mov
stc
jl
je
xchg
jne
fs
or
cli
cmp
loope
stos
mov
push
scas
xchg
sarl
mov
lret
outsb
ljmp
inc
fisubs
sbb
pop
mov
sahf
mov
rorb
cmc
xor
daa
ljmp
or
stos
add
adc
cmp
mov
mov
mov
xor
jp
aad
sub
adc
movsb
lahf
in
add
es
fst
dec
rorb
pop
nop
ss
loopne
lret
xchg
dec
lret
mov
cmp
xchg
shll
cmp
shrl
pop
and
in
stc
xlat
movsb
scas
add
mov
js
push
dec
xchg
pop
stos
mov
jb
push
iret
addl
repnz
fwait
aaa
shll
out
das
adc
in
fsubs
movsb
adc
pop
xor
inc
test
mov
pop
imul
add
int
pop
mov
adc
jge
ret
mov
dec
outsb
push
data16
fwait
addl
enter
add
in
inc
mov
jnp
xchg
mov
test
xor
in
mov
cmpsb
je
sub
stc
leave
sub
jp
push
pop
mov
arpl
dec
sbb
inc
pop
or
mov
ljmp
xlat
loopne
ja
xchg
idiv
adc
inc
cld
pop
jle
or
jmp
movsb
sub
stos
repz
push
cmc
in
inc
xor
lcall
loopne
mov
push
fdivrl
call
cmp
mov
inc
cmp
outsb
in
fimuls
sbb
fdivrp
push
inc
sub
push
addr16
les
in
lahf
imul
dec
sbb
cs
push
cwtl
pop
adc
lcall
adc
aam
into
in
jmp
in
mov
clc
inc
outsl
dec
inc
sahf
push
inc
test
xor
add
iret
hlt
dec
cmc
xor
fstpt
cld
push
mov
mov
shl
dec
cs
mov
mov
out
xor
popf
push
mov
cli
rolb
js
sbb
mov
jno
cmp
daa
lds
cmpsb
jae
iret
dec
jns
data16
push
jg
cmp
pop
mov
jecxz
lret
and
test
fdiv
jg
mov
lds
adcl
subl
xchg
icebp
xchg
dec
int3
fwait
jae
mov
jno
pop
mov
test
adc
push
xchg
sbb
insl
jmp
push
jmp
sahf
mov
mov
dec
lret
mov
das
cmp
dec
pop
mov
mov
and
scas
loope
pop
and
mov
pop
sub
sbb
popf
add
cmp
insb
mov
mov
andb
mov
iret
das
pop
rcrb
mov
out
aas
test
and
int3
push
das
stos
jbe
xor
fisttpll
pop
sbbb
or
xchg
in
adc
cli
je
mov
inc
test
push
loop
scas
jb
bound
inc
cs
jnp
je
pop
jmp
int3
xchg
mov
jno
std
inc
rcrb
gs
aas
add
in
fnsave
xchg
dec
adc
add
lock
add
sub
pusha
cmp
xchg
ret
adcl
leave
inc
adc
mov
mov
dec
xchg
xchg
cwtl
push
or
movb
sub
inc
jmp
lcall
fistpll
xchg
mov
insb
mov
lcall
sbb
fisttpll
lods
call
xor
pop
int3
hlt
stc
lea
jmp
addr16
lods
jns
cmp
testb
xchg
mov
nop
xchg
mov
cmp
dec
fldt
call
lods
shll
sub
push
pop
and
or
in
xor
outsb
sub
mov
mov
ja
les
inc
pop
or
rcll
inc
mov
or
pop
test
movsb
pop
xor
or
pop
mov
fwait
sti
pop
inc
mov
fnstcw
push
xchg
gs
mov
dec
call
insl
cmpsb
jge
fdiv
push
mov
gs
scas
div
xor
cwtl
shr
jg
xor
out
insb
inc
out
in
push
cmp
imul
outsb
push
sti
dec
imul
mov
sbb
sub
push
dec
and
and
fisubrs
inc
in
aad
repz
ret
out
inc
xchg
bound
mov
xchg
test
call
inc
aaa
jl
xchg
dec
loop
stc
xor
aas
mov
inc
mov
in
mov
mov
or
dec
das
call
jns
cltd
add
lret
js
or
adc
dec
inc
xchg
shll
icebp
mov
in
jno
xor
push
mov
sbb
lods
xchg
pusha
fs
adc
lods
jp
jns
and
rcll
stos
mov
adc
push
mov
hlt
std
push
cli
or
mov
mov
cltd
inc
push
call
call
test
fbld
push
inc
pushf
fsubl
rcl
das
scas
mov
cmp
sbb
lea
fists
fucomi
hlt
pushf
les
sbb
cmp
pop
xchg
pop
push
inc
rcrb
les
fwait
pusha
sarb
xchg
imul
repnz
sbb
mov
hlt
pop
mov
test
rcl
call
push
movsl
dec
adc
jecxz
mov
iret
aaa
add
je
add
push
stc
out
push
jg
sub
cmp
jae
cmp
mov
fld
faddl
int3
imul
xor
push
jo
imul
cmpsb
inc
in
or
movsb
push
push
aas
xchg
inc
notb
insb
push
jno
mov
add
mov
push
xor
sbb
cwtl
pop
dec
push
mov
stc
mov
in
cmp
and
popa
sbb
pushf
dec
and
stos
icebp
ret
or
mov
and
sti
push
sbb
pop
out
or
pop
push
cli
arpl
and
mov
cmpsb
je
xchg
mov
sbb
cwtl
jae
mov
inc
and
iret
shrb
mov
das
sub
push
movsl
mov
cltd
shr
adcb
sbb
lock
aas
pop
push
and
scas
insb
setb
ret
inc
lcall
pop
lods
lcall
jnp
insb
ljmp
les
inc
scas
dec
cld
lods
repnz
jns
lcall
cli
and
and
dec
jns
orl
leave
add
test
push
mov
mov
ret
nop
mov
lea
cli
xor
out
out
addr16
mov
out
sahf
xchg
xchg
push
aam
jmp
push
fstpt
xor
and
xor
xor
xchg
lea
jmp
in
push
scas
jae
in
mov
xchg
call
xlat
cmp
cmp
ret
daa
push
outsl
cmp
jbe
push
or
orl
stos
popa
iret
xchg
stc
push
or
scas
arpl
fnstsw
push
aaa
orl
fsubs
add
ss
push
ss
xchg
aam
xchg
pusha
popa
fcoms
ret
inc
lahf
mov
sub
in
sub
rcr
add
dec
movsl
test
cmpsb
push
add
andl
and
jb
and
pop
cmc
sbb
xchg
int3
jae
sbb
xor
imul
fists
pop
stos
pop
pop
aaa
sub
push
jmp
sub
jno
sub
xchg
sarb
das
movsl
push
cmp
cmp
mov
inc
lret
imul
inc
in
jnp
sti
ret
movb
faddl
out
xchg
push
mov
ret
dec
sbb
divb
lods
icebp
andl
stos
popf
xchg
mov
mov
jle
insl
sti
push
in
push
dec
mov
mov
add
cmp
or
leave
out
mov
or
and
jecxz
outsl
xor
cmp
fistps
push
lds
jne
int
sbbb
les
arpl
nop
fsubs
cld
and
in
cmp
lret
pop
es
mov
inc
adc
cmp
cmp
jl
bound
arpl
push
or
mov
fs
adc
inc
adc
adc
dec
cld
xchg
sbb
xor
out
jge
fptan
xchg
adc
xchg
mov
gs
stos
sahf
jo
xchg
in
push
ret
push
inc
fildl
adc
push
lret
stos
aas
pop
fcomps
es
data16
lfs
call
clc
leave
hlt
paddb
into
inc
scas
xor
mov
fstps
cmp
jne
enter
mov
mov
mov
xor
ret
jo
jle
jmp
cmpsb
xchg
and
fcoml
js
shlb
test
adc
cmp
stc
sbb
mov
cmc
stos
adc
mov
frndint
xor
fstps
mov
inc
int3
sar
pop
test
jle
jmp
and
pop
jle
rcrb
mov
ljmp
bound
int
xor
lret
xchg
data16
cli
mov
mov
enter
lret
popa
out
sub
enter
fwait
mov
xor
loopne
insl
jecxz
dec
addl
push
jae
sarb
mov
sub
das
je
mov
xchg
lret
cs
pop
dec
jecxz
int
pop
pop
lea
pop
jp
xor
enter
lcall
jae
fistps
inc
mov
jg
pop
cwtl
mov
lods
pusha
test
push
xor
mov
cli
ret
sbb
adc
xor
ds
stc
jae
lret
cs
imul
cmp
xchg
repnz
or
call
sbb
jl
xlat
pop
push
mov
stos
adc
sub
mov
mov
inc
xor
mov
bound
enter
mov
add
shlb
mov
inc
cwtl
cmpsb
xchg
push
das
lds
jmp
ret
add
arpl
ret
out
jnp
cmpsb
push
fists
or
cmp
mov
out
fs
cmp
std
jmp
aaa
test
out
dec
outsb
xlat
lds
adc
xchg
test
pop
lods
scas
or
mov
je
call
js
lcall
mov
pushf
cmp
and
push
mov
cwtl
mov
xchg
dec
dec
jno
test
aaa
pop
dec
mov
pop
bound
aas
xor
mov
test
xchg
es
enter
das
incl
repnz
sub
pop
lock
scas
cld
divl
ret
cmpsl
pop
inc
fistl
call
cmp
mov
in
mov
in
dec
pushf
cmp
mov
in
xchg
xchg
in
leave
insl
aam
and
mov
aaa
loopne
xlat
stc
movsl
outsl
pushf
cmpsl
jo
orl
mov
pop
cmc
mov
inc
mov
loop
xchg
imul
shrl
mov
repnz
sub
jne
xor
ret
cmp
cmpl
movsl
enter
sbb
aas
push
in
xchg
ret
pop
dec
dec
cmpsb
rorl
xchg
mov
mov
repnz
jae
cmp
xchg
out
pop
test
es
jmp
mov
adc
loopne
cwtl
add
dec
pop
bound
movsl
pop
or
fadd
jecxz
fnstsw
adc
adc
sub
adc
mov
aad
popf
push
push
pop
or
mov
push
xchg
in
fnstenv
scas
das
mov
adc
mov
inc
mov
and
int
idivl
in
inc
sub
aad
imul
ds
out
fdivrl
sub
mov
mov
mov
out
jmp
ja
jl
cwtl
mov
js
cmc
lock
xor
and
out
or
mov
cwtl
outsb
or
add
or
cs
ret
xchg
jmp
cs
inc
adc
mov
scas
push
inc
pop
add
rcrl
dec
insb
sub
pop
clc
aam
pusha
jle
lcall
cmp
dec
xchg
pop
fdivrs
mov
cmp
inc
fimuls
jecxz
leave
cmp
ss
loop
movsl
xor
enter
stc
test
jo
out
inc
jge
jo
push
mov
dec
je
jbe
imul
jns
es
clc
sbb
ret
or
mov
mov
outsb
jmp
jne
clc
iret
dec
inc
decl
es
cmp
stos
pop
xor
lods
dec
sbb
inc
pop
in
inc
cmp
push
push
xchg
push
shl
insl
inc
dec
and
xchg
sub
lret
xchg
cmp
mov
xchg
xchg
add
mov
push
dec
leave
jecxz
jle
push
mull
test
in
jne
sub
dec
mov
lret
mov
nop
data16
mov
rclb
mov
in
insl
jb
and
dec
adc
popf
sarb
mul
or
insb
push
lret
adc
cmpsb
jb
in
ret
sbb
popa
push
lods
frstor
pop
mov
inc
jl
jg
mov
lahf
stc
rclb
jae
shll
int
es
mov
lea
jns
icebp
mov
scas
dec
ljmp
icebp
adc
bound
incb
xor
lret
jl
mov
sub
pop
ss
lock
add
roll
mov
xor
inc
cwtl
ret
xor
sub
movsl
clc
out
ljmp
dec
stc
sub
mov
les
mov
shlb
dec
jno
jmp
subb
ret
xchg
mov
stc
stos
sub
test
sti
fmul
dec
std
inc
inc
das
cmp
jns
ds
mov
mov
subl
das
lods
enter
dec
jl
and
cmp
jb
and
sbb
push
jge
mov
sub
cmp
repz
jo
aaa
jo
jmp
in
dec
push
ret
icebp
fstl
decl
cwtl
fcmovu
dec
in
flds
xor
xchg
mov
push
cltd
ds
add
les
aaa
ds
push
mov
mov
mov
cmp
les
cmp
xchg
inc
loope
mov
test
cltd
cmp
es
xchg
fadds
jge
add
dec
dec
sub
sbb
add
fidivs
inc
dec
mov
bound
xchg
pusha
push
cmp
leave
pop
das
iret
adc
adc
iret
mov
pop
cmp
dec
inc
test
arpl
inc
or
jno
popf
jno
xor
inc
stos
push
adc
ret
out
inc
dec
add
pop
pop
jbe
mov
jge
shlb
pop
cmpsl
mov
inc
outsl
or
sub
scas
loop
cmp
outsb
lahf
les
aaa
push
jl
cmpsl
mov
leave
cmp
cwtl
imul
scas
fsubrl
mov
jae
outsb
and
aam
lahf
jecxz
jbe
mov
shll
cli
fsts
js
xchg
fsub
bound
push
dec
push
andl
ljmp
pop
jge
divl
mov
mov
push
sub
or
cmpl
mov
adc
jecxz
or
dec
pop
sahf
sbb
es
xor
inc
add
jb
ss
sub
adc
sahf
mov
add
or
test
stos
adc
rcrb
scas
movsb
imul
push
js
cmp
int
sbb
sbb
dec
iret
jge
es
insb
mov
mov
xor
sbb
push
jne
sub
add
sbb
xchg
ss
pop
pushf
push
subl
adc
roll
mov
or
js
cmp
sti
in
mov
jne
mov
in
imul
sub
scas
mov
inc
leave
mov
int3
ljmp
sti
dec
inc
stos
scas
add
ret
xchg
enter
push
pop
pusha
fst
pusha
sub
adc
cmpsb
sahf
ss
or
dec
xor
ja
shlb
add
adc
icebp
scas
xor
sbb
out
test
inc
iret
imul
jb
sub
sub
cmpsb
mov
les
das
mov
pop
and
lahf
ret
inc
cmpsb
in
aas
push
aas
lea
aas
sbb
insl
mov
fimuls
test
ljmp
movsb
jb
sbb
jle
push
ljmp
push
sbb
out
leave
lock
pop
sti
or
je
idivl
sbb
ret
rcl
sarl
call
imull
pop
cld
cmp
movsl
or
icebp
mov
sbb
xchg
fwait
push
loopne
jnp
fisubrs
pop
outsl
lea
or
daa
lock
pop
cltd
aam
aam
sub
and
adc
push
fmull
aaa
pop
adc
push
orl
insb
loop
jo
push
cmp
push
shl
jp
pop
or
xchg
scas
cmpsb
jmp
xchg
das
notb
sub
push
bound
je
aad
mov
mov
xchg
cmp
mov
test
mull
repz
in
push
xlat
cmp
add
std
xor
ret
dec
or
loop
mov
dec
not
in
xchg
in
xlat
outsl
xchg
sbb
std
flds
mov
scas
xchg
sub
sbb
sahf
icebp
xorl
lcall
xlat
das
out
cmpsb
out
or
stos
loop
pop
nop
push
repnz
or
jmp
add
mov
cmp
and
mov
mov
jns
dec
mov
adc
shrb
stos
inc
lea
outsl
mov
mfence
cld
jae
aad
cld
hlt
sbb
mov
mov
sbb
cwtl
data16
fisubl
push
mov
je
push
insl
mov
xchg
test
loopne
icebp
sub
out
mov
fnstsw
fbstp
int
xchg
inc
nop
mov
addb
aas
das
lret
int
dec
or
adc
rorb
outsl
cwtl
addr16
lcall
imul
mov
cs
sub
add
mov
push
mov
adcl
mov
cld
push
inc
es
inc
cwtd
nop
leave
leave
out
in
sub
lods
mov
mov
jmp
fldt
dec
out
pop
push
push
mov
cmp
cmp
pop
ficompl
mov
pop
or
out
pop
iret
mov
or
xlat
mov
jbe
push
mov
clc
int
lcall
fs
and
xlat
and
test
insb
inc
sbb
mov
nop
pop
mov
cmp
movsl
xchg
fstps
sbb
mov
xor
cmp
arpl
ljmp
sub
dec
call
insb
jae,pt
xor
aaa
es
and
pop
xchg
push
mov
sbb
cmp
fisttps
xlat
mov
mov
jmp
xor
dec
pop
idivl
lea
pop
rcl
dec
xor
lds
loope
loop
test
ror
sbb
aad
jnp
fs
out
loop
jae
les
inc
lret
push
lahf
lods
fs
push
push
jmp
push
idivl
mov
outsb
dec
mov
sbb
js
loopne
sahf
adc
lcall
xchg
ljmpw
sti
jae
jle
pop
rcl
pop
add
xor
mov
or
scas
in
push
adc
push
xchg
xchg
xchg
cmpsl
cmc
mov
out
add
mov
and
nop
das
lods
ret
push
adc
jo,pt
dec
or
outsl
fwait
or
xchg
mov
daa
ja
notl
leave
xor
ljmp
add
mov
movsl
ret
dec
loopne
mov
enter
sarb
lret
sub
popf
or
mov
mov
sub
and
sahf
pop
bound
xor
dec
mov
adc
cmpsl
sbb
insl
sbb
ja
loop
add
pop
add
shlb
add
mov
std
mov
pop
jle
in
jmp
sbbb
push
test
pop
roll
jno
arpl
enter
sti
aaa
cltd
aad
imul
push
inc
mov
sbb
ds
repz
popf
leave
out
imul
jl
mov
push
push
sahf
and
push
loopne
and
mov
lret
mov
loopne
rcrl
mov
xlat
xchg
sub
lcall
enter
ss
push
lock
xchg
add
out
inc
jnp
scas
loop
pop
xchg
loop
inc
aaa
and
push
dec
dec
sbb
sub
jmp
fcomps
pop
add
hlt
jge
cmp
divb
push
jmp
notb
xchg
imul
cmp
lds
xor
pusha
push
gs
cmp
sbb
pop
add
adc
pop
arpl
push
ret
sti
repnz
adc
xchg
es
xchg
fiadds
hlt
adc
pop
orb
cltd
fpatan
int3
jp
leave
mov
into
push
push
fisubrs
popf
aad
fsubl
test
cmpsb
and
mov
icebp
add
dec
test
cmp
pop
push
int3
js
aam
ljmp
mov
shrl
lds
and
mov
std
daa
jo
into
test
push
xchg
mov
pop
fisubrl
mov
negl
std
popf
aaa
and
add
addr16
inc
aad
xor
cmpsl
inc
adc
cmpsl
push
xor
add
jp
stos
inc
add
mov
pop
mov
je
inc
cmp
or
in
adc
arpl
insb
arpl
cmpsl
mov
xchg
cmp
sbb
adc
frndint
adc
or
sub
movsl
ss
jmp
mov
mov
dec
imul
ds
fwait
lret
jle
out
xchg
and
test
xor
jl
and
lret
push
xchg
mov
xor
insb
gs
mov
xchg
add
mov
dec
daa
xor
adcl
cmpsl
inc
enter
dec
std
pop
sbb
clc
cmpsb
cmp
das
out
stos
loope
sbb
test
xchg
in
cli
xchg
jb
stos
repnz
cld
pop
mov
mov
int
push
bnd
repz
pop
lock
lret
scas
push
pop
cmp
pushf
xchg
mov
call
jecxz
sub
movswl
xchg
and
sbb
xchg
mov
movsl
sub
add
and
mov
out
ret
test
fidivrl
adc
sti
por
insl
cmp
and
es
aad
cwtl
push
pop
jle
imul
ss
aaa
orb
xlat
popa
ret
pop
mov
andl
xchg
dec
cmp
sub
mov
mov
cli
in
inc
ja
pop
lahf
fdivl
push
popf
sbb
mov
lret
shll
or
rcr
icebp
mov
fwait
lret
push
test
mov
pop
mov
add
mov
push
lret
sub
jecxz
push
adcb
cld
call
sbb
jne
and
popa
push
and
movb
mov
jge
adc
pop
sbb
jg
push
shrl
mov
cmp
push
adc
stos
push
pop
mov
mov
push
rorb
mov
sbb
fmull
xor
ficoms
mov
jae
cmpsl
popf
or
aas
push
fwait
xchg
fucomi
lea
scas
xchg
push
or
cmc
jecxz
mov
add
cmpsl
add
mov
sbb
and
cltd
pushf
cmp
loopne
dec
mov
sub
addb
andb
mov
mov
mov
dec
xchg
and
movsb
xor
add
ret
mov
mov
mov
pop
jne
fmul
lea
mov
cmp
rcrl
jb
ja
movsl
fisttpl
pop
icebp
in
adc
arpl
and
dec
adc
test
lret
pop
pop
pop
pop
out
mov
pushf
mov
sarb
int3
std
sub
mov
pop
lcall
shrl
gs
pop
lock
loopne
sbb
pop
shrl
lock
lds
arpl
mov
mov
and
cs
jmp
popa
rclb
test
scas
jl
sub
mov
xchg
mov
push
in
sub
mov
jecxz
cld
xor
push
xchg
and
pusha
lahf
sahf
in
pop
mov
insl
inc
int
mov
jp
pop
mov
enter
data16
dec
adc
lahf
inc
mov
mov
lret
insl
shll
std
data16
std
xchg
mov
jne
sub
imul
fstps
pop
sub
fcmovnu
dec
mov
xor
popf
aad
pop
je
daa
jge
mov
in
cmp
test
pop
movsl
lret
out
out
sbb
or
mov
push
dec
adc
adc
mov
stc
scas
loope
add
or
in
xchg
addr16
rolb
cmp
sbb
outsl
mov
std
pop
mov
out
dec
xor
and
pusha
push
or
nop
into
xchg
xchg
or
and
nop
push
insb
out
addr16
aas
addr16
fisttps
or
daa
adc
mov
xchg
mov
or
ljmp
or
jmp
xchg
inc
sub
add
jle
rcrl
icebp
ror
out
idivb
out
std
out
push
or
dec
inc
push
mov
daa
dec
repnz
mov
lds
cmpsl
outsl
xor
mov
std
cli
arpl
mov
sbb
ret
jae
inc
xchg
push
shll
jns
shll
or
movsl
leave
adc
and
mov
loopne
pusha
sbb
add
add
je
dec
scas
testl
mov
ret
sub
shrb
sub
sbb
lret
or
add
pop
pop
ljmp
aad
clc
andb
xor
jle
pop
out
pop
cmp
sub
test
cli
sub
xor
mov
mov
jb
cwtl
jne
ficompl
push
lods
push
xor
jecxz
pop
int3
aam
daa
xchg
cmpsl
and
in
test
pop
jmp
sub
pop
jno
fnstcw
mov
add
xor
pop
mov
and
pop
and
cltd
iret
sbb
or
adc
insl
pop
ret
call
adc
mov
mov
pop
fistpll
push
jbe
mov
xor
xor
stos
js
shl
add
xor
add
fs
enter
push
sbbb
into
dec
jl
mov
sbbl
sti
add
add
xchg
xchg
add
imul
jmp
rol
aad
adc
mov
iret
hlt
andb
push
fcmovnbe
or
imul
data16
cmp
xchg
lea
and
add
repz
sbbb
sub
adc
add
and
pop
call
dec
out
sub
inc
push
or
mov
pop
test
cmp
xor
iret
loop
in
and
dec
movsb
into
lds
inc
xor
gs
inc
fbstp
rcr
jbe
add
packsswb
xchg
sbb
mov
icebp
push
insb
mov
test
insl
add
dec
sbb
loop
adc
inc
js
shrl
jb
cmp
add
pop
dec
enter
sti
fistps
dec
cmpsl
inc
imul
mov
push
cld
outsl
test
int3
loopne
push
clc
stos
mov
mov
bound
sbb
sub
sahf
mov
arpl
dec
lds
inc
or
popf
popa
jbe
jl
inc
iret
cmpsl
in
std
xchg
cmp
fs
test
dec
adc
in
mov
repz
pop
imul
cmp
aam
pop
pop
iret
imull
sub
jge
adcl
or
pop
xor
and
push
or
and
out
hlt
ss
test
shl
mov
push
push
ret
jnp
ret
cld
aas
pop
popa
scas
subl
jl
push
stos
jg
outsl
push
pop
xor
and
sbb
fisubl
sahf
adc
or
sub
add
mov
nop
ss
cmpsb
pop
jg
andl
repz
ficoms
popf
fs
rcl
jecxz
mov
jo
sarb
jns
hlt
and
xchg
lds
sbb
fsubs
mov
call
fsts
xchg
pop
out
insl
mov
inc
hlt
mov
sub
addr16
pop
int
cmc
inc
xchg
or
fisubs
or
loope
test
dec
iret
lods
sbb
mov
pushf
add
std
adc
lock
inc
jp
mov
dec
rcll
lock
cmpsb
lods
mov
dec
rorl
fs
xchg
mov
pop
sbb
push
sub
jae
bound
cmc
jo
mov
mov
lock
mov
outsl
add
cmp
dec
stos
push
add
loopne
stos
stos
dec
inc
jno
pop
das
cmc
mov
cwtl
mov
dec
jnp
aad
outsb
xchg
add
lods
or
mov
hlt
jne
push
aaa
repz
lock
xchg
inc
addr16
jb
into
adc
enter
rcll
divb
rcrb
pop
jns
and
push
cli
jg
or
ja
adc
dec
stos
cmp
leave
add
lret
dec
les
xchg
lret
mov
es
ja
or
pop
popa
loop
iret
out
adc
push
push
push
and
xor
loopne
cmp
mov
pop
lcall
sub
lret
or
fistpll
xchg
dec
imul
notb
mov
dec
je
push
pop
adcl
call
data16
push
in
or
out
rcl
shlb
dec
xchg
imul
mov
mov
hlt
add
jp
and
dec
or
jmp
daa
or
fidivs
dec
cld
out
mov
or
cli
adc
sbbb
ss
iret
pop
dec
lcall
dec
cwtl
mov
push
sbb
sub
int3
scas
fdivrs
ljmp
pop
sbb
sub
out
jo
dec
push
mov
jmp
sbb
mov
ret
lds
or
or
mov
sbb
add
test
js
outsl
fnstenv
sbb
fstpl
push
sub
fildl
cltd
mov
dec
stc
mov
aad
cmp
aaa
and
jmp
aas
lds
lahf
push
sbb
sbb
je
jo
in
ja
jno
jl
or
movsl
mov
jb
xchg
mov
scas
sbb
cmp
and
sub
cmp
enter
ss
ss
int3
xor
int3
jl
sub
and
sbb
imul
fs
xchg
sbb
jl
fldl
xor
cwtl
nop
push
test
les
fsubs
mov
sti
cmp
repz
popf
mov
and
pop
xor
xor
mov
adc
sbb
fbld
xchg
cmp
ret
adc
das
lret
js
jns
stos
ret
and
and
cmp
pop
push
inc
das
xlat
cmp
lret
sub
aaa
rorl
sub
repnz
idivl
sbb
inc
sub
xor
xor
aas
push
push
out
cmpsl
push
loope
adc
sbb
jae
les
out
pusha
lea
shlb
jl
dec
daa
lahf
pop
mov
xor
xchg
jmp
mov
xor
int3
pop
cmp
mov
jno
mov
rcrl
mov
ljmp
fdivrs
and
std
sub
mov
lret
sahf
jb
xlat
aad
loope
or
jo
fstl
pop
dec
adc
cmp
add
mov
add
cltd
sbb
sub
add
imul
push
popf
jb
insl
rcrb
mov
jg
push
or
addr16
mov
jnp
jnp
out
inc
cmc
push
movsl
add
aam
mov
sub
sti
cmpsl
test
adc
xlat
daa
xchg
gs
jmp
mov
test
add
pop
pop
adc
push
std
add
pop
or
sbb
push
mov
xor
inc
call
dec
and
mov
es
sbb
pop
xor
jbe
dec
dec
test
xchg
xchg
addr16
arpl
hlt
mov
push
sub
dec
andb
sub
int3
dec
loope
mov
div
cltd
test
shl
pop
xchg
popf
cs
mov
and
cmpsl
xchg
fadds
iret
add
or
rol
inc
sysexit
jns
jecxz
fmuls
adc
jae
icebp
dec
pop
enter
dec
mov
ljmp
popf
cmc
in
sbb
push
add
add
cld
mov
aad
sbb
rcr
outsl
push
stos
adc
push
pushf
inc
sbb
lahf
jno
jb
or
pop
lret
subb
sub
mov
push
sub
sbb
lahf
jae
lretw
mov
loopne
or
push
ljmp
out
shlb
sbb
adc
fdivl
push
xchg
jg
jp
or
out
lcall
cmp
loope
xchg
or
mov
es
push
les
sbb
sti
pop
das
sub
stos
mov
test
pop
adc
cmp
xchg
subl
repz
or
lock
out
jne
je
push
add
push
mov
mov
xchg
fdivs
cltd
bound
imul
shrl
inc
repnz
pop
sub
sub
mov
ja
mov
push
repz
into
ds
xchg
sub
cmp
outsb
xor
test
xlat
loop
notl
popf
stos
stos
cmp
in
fisubrs
pop
imul
es
jbe
aam
adc
sub
mov
call
in
mov
inc
adc
mov
out
fidivs
popf
popf
sub
inc
ljmp
ljmp
sahf
ljmp
push
leavew
dec
and
cmp
dec
in
cmpsl
iret
fs
aaa
leave
mov
ja
test
jbe
xchg
pushl
jg
jmp
loopne
int
mov
ss
stos
repz
dec
sub
xor
cmp
imul
pop
repnz
movsl
and
and
rcl
fidivs
or
cwtl
test
in
xor
ds
ret
rcl
rcrb
nop
fcomi
dec
fstp
push
or
xchg
popa
pop
sub
fldt
mov
jg
jle
dec
pop
out
cmp
jae
stos
add
out
pop
shrb
inc
popf
xor
stos
rclb
test
test
pop
pusha
fldt
out
sub
scas
adc
pop
movsb
cmp
inc
mov
inc
test
add
or
cs
pop
inc
mov
cltd
inc
outsb
jl
nop
jbe
pop
pop
lret
mov
repz
repnz
in
dec
sti
dec
inc
add
pxor
clc
repnz
cli
out
movsl
gs
xor
out
ret
movntps
std
cltd
xor
dec
repz
cwtl
sbb
dec
cwtl
adc
aas
int
shll
fistps
insl
lahf
sub
lods
cmc
adc
cmpsb
js
add
cltd
mov
imul
jb
arpl
test
jno
or
das
mov
fdivrl
repnz
xor
sub
jae
push
icebp
and
adc
lods
lahf
add
jns
int
leave
pop
jno
inc
mov
jl
mov
mov
sub
mov
ret
mov
int3
push
sbb
cmp
pop
mov
xchg
rol
scas
pop
push
enter
testb
jl
sub
lea
in
nop
pop
addr16
add
ret
cmpsl
adc
insl
lcall
inc
jg
push
xchg
les
movsb
test
pop
lret
lods
pop
mov
jmp
rcrb
insb
pop
rcrb
mov
push
loop
mov
stc
shll
push
sbb
jno
xor
jns
cmpb
les
xor
adc
mov
movsb
pop
cmp
movsl
lcall
cmpsl
xor
add
dec
test
outsb
pop
jmp
add
dec
lock
sbb
add
aam
outsb
aad
shlb
lea
mov
lds
int3
jnp
in
pop
xchg
xchg
add
nop
xor
data16
inc
mov
sbb
mov
push
or
aam
push
lret
pop
hlt
fisttpll
and
jmp
ss
outsb
mov
aaa
dec
loope
adc
dec
dec
add
xor
aaa
sarl
outsl
jge
nop
insl
cmc
in
inc
test
jb
xor
leave
mov
and
aam
sub
into
xchg
inc
repnz
iret
daa
bound
test
mov
in
repnz
mov
enter
jp
sub
add
pop
mov
fs
cmp
hlt
sbb
hlt
pop
outsb
cmp
xchg
add
add
outsb
xchg
sub
scas
clc
sub
popf
repz
mov
pop
add
cmp
mov
push
jmp
jnp
dec
sbb
mov
fdivs
imul
cmc
mov
mov
aaa
xchg
cs
aad
sbb
and
xorb
fadds
out
jnp
sbb
adc
jne
push
lock
das
and
add
leave
roll
mov
mov
xlat
out
push
xchg
push
out
stc
mov
mov
pop
insl
out
xor
inc
mov
jp
xchg
push
inc
fsubl
lods
shl
sarb
leave
inc
inc
pusha
filds
pop
cmovne
xchg
add
or
adc
stos
lret
inc
mov
jge
mov
leave
in
sbb
mov
lret
js
inc
pushf
inc
cs
pmulhw
mov
aas
xchg
insb
push
mov
lds
rcrl
mov
divb
dec
outsl
jge
out
aaa
inc
push
pop
movsl
adc
xchg
push
mov
and
pop
xchg
adcl
das
pop
and
ficoml
inc
or
pop
push
lods
jge
mov
negb
fsubrl
xorb
jge
and
xlat
add
xchg
mov
inc
dec
nop
push
nop
orb
movsb
test
ss
push
int
add
jno
mulb
lods
in
insl
ljmp
les
popa
xlat
out
push
add
movsl
push
xor
pop
adcb
mov
or
rolb
push
push
test
sub
jne
fisttpll
mov
shl
mov
icebp
adc
jecxz
icebp
mov
xchg
jp
js
sbb
or
in
aam
das
sahf
test
inc
sub
inc
lret
dec
or
push
jno
pushf
data16
sbb
in
push
cmpsb
xchg
jnp
or
test
or
inc
sub
popf
cld
pop
dec
jns
mov
test
xlat
dec
repnz
mov
popf
int
stc
lcall
add
or
insl
xchg
shll
mov
pop
into
mov
adc
mov
popf
lret
imul
outsl
push
mov
inc
and
dec
insb
mov
dec
sub
add
mov
dec
push
cmp
cmp
push
pop
cmp
cmp
loop
pop
loope
daa
lock
aad
mov
pop
mov
sar
mov
xor
out
mov
test
xor
aad
je
jg
mov
mov
jl
xchg
add
outsl
mov
jle
jg
mov
xchg
stc
mov
std
jg
sbb
jecxz
sbbb
cmpsb
aam
into
or
ss
or
add
imulb
jno
jb
scas
lcall
adc
repnz
jecxz
mov
cmpsb
inc
loope
pop
add
addb
lret
mov
jnp
dec
xor
fstpl
gs
sbbl
dec
outsl
xchg
jl
movsb
lahf
jo
imul
or
dec
iret
and
sbb
addl
mov
test
xchg
test
inc
dec
leave
xchg
inc
es
in
nop
mov
mov
push
in
xchg
inc
cmp
movsb
pop
xor
ja
mov
inc
lds
arpl
adc
mov
push
adc
mov
lret
push
xsaveopt
gs
sub
in
popf
cmc
adc
cwtl
loopne
in
xor
into
push
outsl
xchg
push
mov
xchg
arpl
cmpsb
pusha
std
inc
loop
mov
or
jo
movd
out
imul
js
sub
lahf
jmp
lcall
movsl
stos
push
xchg
aad
data16
jmp
lods
fimull
adc
adc
aam
mov
inc
xor
out
enter
or
xchg
dec
daa
jae
and
addr16
add
and
mov
ja
outsb
rcll
scas
orl
outsl
test
imul
pop
push
das
movsl
rorb
in
sbb
or
nop
stos
and
and
rorb
cmpsl
cmp
inc
rcrl
fnstenv
dec
sti
push
xchg
cmpsl
mov
sub
sub
sbb
jle
mov
adc
mov
test
int
pop
jmp
stos
xchg
jns
icebp
jle
mov
xchg
dec
mov
adc
movsb
jnp
loop
in
repnz
and
xor
lret
aad
jnp
dec
adc
lods
push
lods
jbe
fidivl
out
insl
das
dec
sahf
add
test
in
or
xor
jmp
pop
lods
in
mov
sarb
out
cmp
not
jmp
adc
sub
xchg
fcoms
sti
cmpsl
stos
dec
inc
push
adc
or
mov
cwtl
pusha
pop
lahf
mov
fsubrs
cs
les
pop
dec
out
dec
aam
inc
jp
lods
daa
lahf
pop
push
dec
xchg
std
imul
xchg
jns
push
sub
and
mov
inc
sbb
cmp
das
mov
lcall
js
sbb
cli
sub
mov
push
loope
push
xor
lahf
mov
mov
adc
inc
icebp
jbe
push
pop
mov
mov
push
cld
les
sub
push
fwait
mov
mov
pop
lds
rolb
and
fbld
jge
pop
cld
cmpsb
add
sbb
mov
mov
dec
cmp
xchg
cwtl
inc
xchg
faddp
mov
adc
sub
shrb
sbbb
bound
and
out
or
test
mov
sti
es
mov
inc
aad
xchg
out
or
adc
nop
adc
dec
push
outsl
cmp
test
scas
push
lahf
pop
xor
lods
push
push
push
test
pop
inc
xor
add
leave
pop
js
push
repz
pop
lods
sti
mov
sub
dec
jb
sub
xor
cmp
call
jne
insl
fnstcw
jae
fimuls
pop
ja
ret
jp
inc
xor
jo
pop
jbe
mov
ss
cmp
sbb
shll
mov
fcmovnbe
mov
enter
inc
add
mov
pop
pop
jbe
cltd
adc
lods
stos
add
pop
inc
add
push
daa
lret
daa
jge
and
leave
jmp
mov
mov
mov
or
mov
dec
xor
in
and
imul
stos
jbe
lock
mov
seta
cmp
mov
push
xchg
inc
mov
ss
nop
or
sbb
bound
in
jmp
xchg
or
inc
cld
mov
gs
lods
cmp
xchg
adc
insl
fdivs
mov
and
mov
dec
pop
xor
dec
jo
das
int
jno
xchg
dec
cmp
push
movb
jo
outsl
jl
mov
dec
inc
test
jns
push
in
mov
daa
or
shr
jae
mov
hlt
dec
or
lahf
cmp
mov
push
aad
ret
inc
mov
xor
fidivrl
call
fwait
adc
inc
into
add
ljmp
cmp
sbb
dec
insl
cs
add
into
jbe
fs
push
or
add
mull
pusha
fmul
aas
xchg
xor
mov
das
pop
rcl
lods
dec
ljmp
or
in
push
push
dec
in
mov
mov
pusha
xor
or
push
fstpl
xchg
andl
adc
adc
aam
mov
outsb
out
das
repnz
repnz
fists
jne
cmpsb
fs
outsl
mov
call
jecxz
movsb
les
aad
cltd
pop
cmpsb
xchg
loope
lret
push
imul
push
mov
loopne
nop
pusha
push
lds
fisubl
in
stos
mov
mov
xor
mov
xor
gs
out
nop
gs
mov
aam
ss
xchg
outsb
pop
popf
test
cmp
sti
add
mov
inc
mov
adc
cwtl
les
clc
test
insb
mov
fisttpll
or
int
sub
test
or
sbb
xor
addr16
pop
mov
call
xchg
pop
repnz
jns
jge
push
pop
push
out
scas
sub
push
jae
or
pop
das
inc
or
or
add
lods
mov
pop
jns
push
lahf
jno
pop
dec
cs
xchg
add
loope
arpl
push
nop
adc
dec
jp
cvtps2pi
dec
dec
and
aaa
sub
pop
xor
fs
das
ret
mulb
incb
xor
inc
cmp
inc
repz
in
inc
inc
rcrb
mov
hlt
movl
scas
pop
jle
jbe
sub
jno
cmp
movsl
gs
popa
jle
add
add
or
cmpb
aam
leave
push
popf
mov
xchg
repz
push
ds
xor
mov
scas
outsb
add
mov
xor
movsb
cltd
or
test
jbe
insb
loop
cld
inc
cmpsb
and
cmp
sbb
lcall
jg
ret
jmp
add
mov
sahf
lret
xchg
mov
mov
xor
xor
xlat
jg
sbb
insb
jmp
inc
and
daa
shlb
enter
dec
push
jae
lret
mov
ret
repz
mov
aad
jne
pop
rcrb
xor
mov
dec
cmovno
fbstp
call
jmp
movsb
sbb
pop
pushl
jne
arpl
stc
add
mov
push
mov
sub
out
lret
jno,pn
jecxz
fildl
jg
mov
pop
stc
jle
mov
loopne
std
adc
jb
idivb
xchg
fstpt
and
cmpsl
aaa
inc
mov
test
lock
or
enter
mov
int3
adc
jo
push
mov
add
adc
pushf
test
or
aam
pop
xor
imul
popl
dec
dec
fadds
adc
push
push
addl
mov
enter
pushf
rcl
leave
je
jno
pop
push
lahf
xchg
out
les
aaa
cmp
push
inc
not
out
adc
xchg
mov
and
decb
sarl
gs
int
jo
sbb
dec
imul
push
push
outsb
mov
cmp
out
jmp
es
mov
push
aad
push
inc
or
mov
and
mov
je
sub
mov
fldl
shlb
push
xor
push
or
mov
jbe
cmc
dec
mov
add
or
int
aam
sti
push
dec
sub
push
mov
xchg
jg
gs
jae
and
mov
jmp
call
ss
mov
and
push
mov
and
clc
jecxz,pt
loop
xchg
mov
mov
popf
adc
out
jne
dec
cmpb
dec
fwait
add
stos
and
jle
push
lahf
pop
imulb
adc
xchg
xorb
xor
lret
or
xor
and
mov
mov
mov
out
lahf
pop
and
shll
push
loopne
add
fistpl
test
and
out
cmp
cld
fisubrl
pop
mov
out
dec
imul
jno
sarb
test
test
push
popf
cmp
or
lods
das
jbe
inc
stos
fsubrl
or
mov
xor
inc
or
mov
jne
mov
les
jmp
sub
fwait
lock
lret
sub
fcompl
in
pop
xor
in
push
enter
js
or
scas
xchg
fs
jmp
and
shlb
stos
cld
lcall
jmp
and
mov
dec
shrb
push
xchg
scas
jo
in
add
xchg
mov
jns
push
xor
xchg
add
xchg
es
jp
push
loope
sarb
xor
xchg
pop
dec
lods
aas
sub
cld
push
cmp
es
mov
ficoml
aas
je
inc
idiv
out
loop
xor
mov
sbb
push
test
sbb
in
enter
adc
push
fidivl
test
into
dec
jno
leave
xchg
ljmp
and
xor
mov
stc
std
xlat
call
jae
cli
xchg
jle
mov
xor
int
xor
pop
cmp
adc
or
xorl
and
adc
fwait
shll
stos
add
add
gs
popa
and
and
es
jb
xadd
insl
sbb
sub
cmp
ljmp
sub
rol
pop
cmpsb
ljmp
js
stos
or
leave
xor
fstpl
cs
icebp
push
ds
nop
test
nop
mov
test
cwtl
les
lret
fwait
and
lahf
or
stos
adc
mov
mov
ds
or
jmp
shll
cmp
push
cmc
mov
jecxz
sbb
je
mov
or
xlat
mov
cmc
fistps
pop
fcmovbe
add
sbb
rolb
pop
sub
push
bound
mov
jge
add
fdiv
fisttpll
movsb
fmulp
dec
shrl
xor
aad
mov
inc
in
adc
cmc
data16
jae
pop
gs
jb
jle
packuswb
jns
clc
mov
pop
push
xchg
cmpsb
jb
cld
rcrb
xlat
pop
adc
adc
hlt
cmp
stos
insb
sbb
pusha
push
outsb
cmpsb
push
rcr
inc
pop
xchg
sub
xor
xor
jge
jo
rcrb
ja
repnz
mov
jbe
sbb
inc
aad
lret
xchg
xchg
fmul
movsl
adc
xchg
mov
adc
das
xlat
iret
enter
xchg
imul
jns
outsl
lds
pop
repz
pusha
pop
sub
mov
jns
mov
out
scas
mov
push
mov
ss
dec
push
adc
jbe
daa
mov
jns
pop
xchg
adc
shll
cmc
popa
mov
ret
testl
std
push
pop
es
mov
jmp
jo
add
lods
shl
lahf
adc
outsl
ja
sarb
cmpsl
out
cli
outsb
xchg
dec
cmp
imul
jl
ss
sbb
insb
fmull
sbbb
xchg
inc
stos
shrb
pop
out
cmc
repnz
mov
aas
iret
inc
mov
movsb
pop
xor
inc
and
add
cmp
insb
jmp
mov
cmp
and
add
mov
imul
jl
insb
insb
mov
jno
iret
pop
std
into
dec
loope
inc
xor
dec
xchg
xchg
sub
dec
cli
sub
dec
jg
dec
xlat
and
jnp
bound
mov
adc
lret
int3
mov
push
pop
loop
pushf
jns
fidivl
adc
sub
dec
lret
dec
test
mov
mov
xchg
push
rcr
xchg
dec
cmpl
outsb
popa
ret
scas
push
imul
mov
mov
pop
out
sbb
adc
xchg
pop
push
push
repnz
jo
lret
fwait
and
xchg
sbb
jb
dec
xchg
xor
aad
es
dec
add
pusha
aas
mov
mov
pushf
and
lahf
loopne
mov
jecxz
mov
addr16
enter
out
mov
cmp
sbb
out
xchg
mov
jp
xor
pushf
mov
loopne
sarb
cs
lock
cmp
aam
in
pop
orb
sar
push
aaa
lret
sarb
jo
shll
or
lahf
popa
ljmp
sub
pop
mov
mov
call
push
cmp
jle
or
mov
mov
out
sti
insb
enter
in
jnp
ret
xchg
mov
arpl
icebp
mov
cmpsl
mov
push
dec
xor
ret
out
or
enter
fcomip
cmp
mov
lcall
and
add
daa
xchg
lcall
pop
lds
ficoml
xchg
xor
das
adc
mov
cmpsb
mov
fidivl
mov
roll
jl
push
stc
popa
out
inc
lods
cs
rcrl
push
cli
int
mov
lahf
imul
push
jge
or
xlat
xorl
mov
jg
test
ret
mov
sub
jbe
stos
jno
clc
arpl
xchg
sbb
pusha
or
loope
adc
cmp
pushl
mov
adc
pop
jb
fimuls
insl
dec
jae
and
push
test
push
adc
dec
and
ret
fbstp
test
push
not
jno
add
mov
scas
mov
cmp
or
cmp
hlt
cmp
inc
out
adc
mov
std
jmp
ret
rcll
inc
mov
sahf
in
mov
aaa
jg
cmp
jbe
pop
test
in
inc
lcall
mov
pop
pop
and
popa
push
sub
pop
and
mov
int
push
mov
movsb
sti
xchg
pop
adc
sub
push
test
sbb
and
test
mov
out
sub
loope
shlb
lods
outsl
xor
mov
fwait
lds
in
sub
movsb
iret
ja
sbb
shlb
data16
pop
data16
xor
pop
outsb
out
add
mov
into
xchg
rcrl
loopne
sarl
sub
outsl
xchg
sub
xchg
and
ds
insl
mov
jae
icebp
mov
pop
fcoms
int3
cli
jmp
cli
cwtl
loop
jge
and
xchg
dec
pushf
lcall
mov
aaa
iret
mov
inc
arpl
or
sub
dec
mov
pop
mov
iret
push
andl
fcoms
das
pop
mov
mov
fdivrl
sbb
pop
jp
sub
jns
mov
shrl
sbb
cmp
in
pushf
imulb
cs
div
xchg
scas
mov
or
insb
mov
loope
je
cmp
mov
stc
push
pusha
mov
fistps
mov
es
testb
mov
dec
dec
sbb
imulb
dec
pop
mov
mov
mov
es
insl
repnz
adc
shrb
inc
je
into
fildl
outsl
jp
cmpsb
dec
adc
sti
outsl
ja
adc
ret
fwait
cmp
cmp
push
sbb
cmpsl
fnstenv
jns
inc
notl
sub
sbb
cwtl
mov
cmp
out
jmp
subl
cmpsl
inc
adcb
sub
es
mov
fists
mov
dec
xor
add
nop
pusha
push
dec
pop
push
sub
shlb
sub
mov
in
dec
or
lods
lods
adc
jmp
sahf
insb
mov
bound
inc
testb
mov
xchg
lahf
pop
int
push
jne
cmpb
push
mov
mov
enter
xor
ja
test
data16
and
ret
xchg
scas
cmp
add
cmp
pop
hlt
iret
dec
fs
mov
rcrb
and
jbe
xor
or
mov
pop
gs
stc
fnstsw
les
ret
out
imul
ret
sub
repnz
cmp
xchg
mov
in
in
pop
fdivs
in
loope
mov
xchg
pop
adc
mov
jp
bound
fisttpll
cmp
rorb
lea
jle
lret
cmc
fnstsw
outsb
mov
push
mov
shll
dec
mov
test
mov
adc
mov
pop
mov
adc
es
sbb
into
data16
out
std
xlat
push
aad
lahf
jg
and
sti
mov
and
fdivl
cmpl
sti
pop
rcll
add
int3
pusha
or
scas
aad
mov
add
cmpsb
setnp
std
sti
jl
cmc
gs
testl
dec
mov
add
mov
lea
lds
pop
mov
cmp
and
mov
fwait
iret
in
jnp
loopne
shl
or
iret
sti
xchg
jmp
leave
xchg
xchg
dec
push
pop
jae
mov
or
into
adc
mov
or
inc
push
jmp
jbe
jo
call
divps
movl
rcpps
push
out
enter
xchg
fstpl
outsb
and
aas
sbb
add
lcall
mov
adc
mov
ss
mov
pop
xor
in
lea
sub
call
mov
loope
push
pop
test
mov
xor
push
inc
cmp
jo
aam
jp
push
popf
push
movsl
pushf
test
pop
inc
lods
insb
sub
cmp
mov
mov
jecxz
out
int
movsb
out
ficomps
adc
pop
adc
and
call
sub
swapgs
lcall
fcompl
int
je
rolb
adc
mov
in
fld
orb
push
leave
pushf
faddl
mov
test
cmovl
push
mov
adc
adc
enter
jb
dec
jns
fnstcw
nop
cmc
fwait
cmp
pop
mov
stos
aad
lock
outsl
push
sbb
hlt
mov
jbe
sub
jnp
mov
aaa
lods
pop
xor
into
cmpsb
loopne
imul
pop
jbe
dec
test
jns
pop
ss
rclb
inc
mov
mov
pushf
push
mov
pop
dec
adc
test
shl
inc
push
jne
xchg
mov
pop
cmp
add
popa
fwait
cmp
aam
addl
aad
mov
repnz
inc
push
stos
or
mov
jns
mov
subb
push
push
inc
rcrl
lock
negb
sbb
sbb
lods
pop
pop
jmp
cli
mov
pop
jle
pop
pause
adc
pop
pop
lea
in
xor
mov
in
leave
mov
and
inc
inc
sbb
adc
cli
pushf
inc
dec
ficomps
xchg
iret
rcrl
sti
cmpsl
dec
push
push
out
push
bound
mov
rolb
dec
ret
xor
sub
sub
push
enter
pop
scas
sub
add
clc
cmp
xchg
sub
aam
mov
add
rorl
nop
aas
test
dec
xchg
cli
aad
mov
out
roll
push
sbbl
adc
push
clc
mov
sub
sbb
mov
in
pop
mov
imul
jb
mov
pop
std
bound
pop
rcrl
lock
push
xor
into
and
and
lds
push
lock
repz
je
sub
stos
outsb
and
lods
ja
ja
dec
sbb
adc
gs
pop
pop
lock
lock
call
mov
popl
jge
movsl
addl
cli
mov
dec
lock
pop
out
pop
xchg
insb
pop
mov
add
insl
inc
sarl
xchg
mov
test
fdivrs
in
loopne
xor
cmp
mov
data16
aaa
lock
mov
js
mov
xchg
sub
sub
push
pop
lock
mov
or
cmc
mov
inc
ffree
ja
dec
cmpsl
rorl
mov
xchg
lea
mov
pop
mov
lahf
inc
xchg
mov
and
pop
enter
ss
jle
sarb
ret
jp
xchg
jno
pop
push
or
sub
bound
mov
sub
mov
stos
jge
popf
sub
aad
jbe
mov
sbb
fsts
jge
hlt
jmp
xchg
jne
xchg
pop
into
sbb
in
iret
lret
insl
or
xchg
jnp
and
push
shlb
lods
popl
daa
push
jge
jb
pushf
loope
call
inc
stos
fsubrp
stos
ss
outsl
and
or
jbe
mov
adc
jge
mov
sub
and
push
and
test
xchg
push
mov
les
fisubrl
arpl
mov
arpl
daa
jecxz
sbb
cmp
cmp
xchg
pop
pop
data16
loop
lds
je
xchg
push
nop
sub
sbb
lock
lods
xchg
push
xor
scas
stc
into
popa
mov
push
jnp
sbbb
lock
in
cmp
pop
popa
mov
pop
cli
sub
insl
aad
ret
dec
cli
push
int
lret
loopne
repz
xchg
lds
sub
addr16
pop
mov
jl
pop
push
cmp
call
popl
adcb
inc
pop
insl
xor
jle
pop
rolb
jg
mov
cmp
sbb
movsl
jbe
data16
inc
add
adc
loop
sbb
mov
insb
dec
cmp
pushf
and
xchg
out
jl
repnz
lret
mov
das
mov
pop
je
jae
inc
xchg
lock
into
mov
and
dec
ja
mov
out
dec
mov
jecxz
jns
pop
mov
imul
cwtl
dec
mov
insl
push
cmp
jle
jns
adc
jb
fstl
xor
jns
inc
dec
aas
sahf
or
sbb
dec
cmp
leave
fucomi
aam
mov
stc
push
cmp
cwtl
stc
xor
lods
int
js
lret
or
cmp
and
gs
cmp
jp
mov
mov
aaa
cmc
and
bound
push
inc
mov
test
lods
enter
stos
cmp
xor
mov
jb
cmpsb
mov
sbb
mov
add
mov
je
or
sub
xchg
sbb
mov
fmull
cmc
jge
push
xchg
push
cwtl
inc
in
rcl
out
aas
dec
pop
jbe
xor
ljmp
rcrl
cltd
add
mov
lods
shl
cmp
jne
xor
or
stos
addr16
cmp
and
notl
ja
inc
fcmovnbe
push
dec
bound
movsb
lcall
test
call
xchg
imul
iret
jns
mov
mov
pop
mov
leave
adc
pop
inc
mov
loope
push
and
add
sbb
cmp
push
and
fisttps
cmpsb
shlb
addl
cmp
in
mov
add
adc
dec
cs
dec
adc
add
mov
test
xlat
call
test
sub
in
push
ret
add
and
lahf
xor
xchg
insl
inc
ljmp
and
sbb
jmp
inc
sti
lret
ja
xor
xchg
sub
xor
cmp
sub
testb
lahf
push
popa
xor
mov
jae
jb
mov
adc
enter
sarb
divl
in
xchg
movsb
shll
xchg
add
out
dec
fstp
fldenv
inc
mov
or
or
or
push
ja
mov
xchg
sbb
sahf
xorl
movsl
popf
push
imul
inc
mov
sbb
mov
stos
lret
or
push
jge
test
mov
aaa
movsb
dec
sub
add
push
dec
jb
cmp
cli
ss
push
lret
dec
jns
xor
faddl
adcb
add
rclb
adc
push
icebp
inc
sbb
out
xor
loope
mov
lahf
xchg
cli
clc
rorb
push
inc
cld
bound
test
sti
pop
xor
test
jo
outsb
movl
cmp
mov
push
and
je
fs
mov
cmp
addr16
sub
xorl
cmp
inc
xchg
xchg
inc
je
sub
jmp
dec
mov
ret
dec
push
xor
inc
mov
adc
cli
cmp
mov
nop
jnp
cmpsb
pop
add
cld
call
int
push
pop
in
xchg
and
or
iret
cmp
push
or
into
mov
ja
imul
inc
testb
sbb
rep
sub
clc
inc
pop
ficomps
xor
out
cs
test
faddl
mov
shl
xchg
mov
jge
repz
arpl
adc
adc
fstpt
mov
js
xchg
mov
sub
repz
pop
jbe
sbb
mov
pop
fimull
shl
and
mov
pop
imul
jns
stc
mov
mov
cs
mov
xlat
fcoml
push
sahf
bound
push
addr16
push
lret
repz
fsubr
pop
outsb
push
icebp
jl
lods
pusha
push
mov
fucomp
sarl
or
pop
repz
or
cmp
mov
jne
test
jno
jg
jns
dec
xor
and
xchg
rcl
or
loopne
dec
cld
insl
loopne
push
pushl
int3
adc
out
outsl
sub
xor
jg
int
cltd
push
shl
in
stc
jmp
dec
lock
mov
rclb
adc
shll
ja
xor
xchg
xchg
scas
stos
ja
mov
mov
es
cwtl
mov
and
inc
push
lret
fldcw
scas
addr16
jb
pop
jne
jns
pop
jle
stos
cmp
mov
scas
shll
fstpl
pop
mov
and
repz
into
fdivrl
cmp
xchg
inc
push
and
mov
add
push
bound
pop
mov
mov
mov
sub
call
xchg
inc
mov
aas
mov
or
in
or
inc
fsubrs
dec
xchg
xlat
cmp
pop
sbb
pushf
pop
hlt
inc
inc
clc
or
int
loopne
add
mov
or
into
lret
mov
cli
shrl
mov
shlb
sub
les
adc
sbb
fistl
cmp
adc
push
jno
or
clc
loop
adc
adc
cld
xor
out
mov
jge
shll
add
movsl
xchg
xor
in
loope
jp
sbb
andb
cmp
xor
cs
sahf
jae
mov
mov
fdivr
jge
pop
push
and
stos
xchg
test
jp
sarl
push
cmc
add
dec
cmp
jo
xadd
sbb
mov
subl
dec
lcall
push
or
dec
dec
fadds
negl
in
lods
leave
test
subl
sbb
mov
insl
bound
push
popf
mov
incb
das
adc
adc
iret
push
std
clc
or
cmpsb
pop
adc
or
cmpb
xor
push
adc
inc
xchg
imul
mov
out
or
aas
mov
or
iret
rorl
cmc
mov
mov
inc
pop
inc
cmp
inc
inc
fdivs
subl
pop
jo
adc
leave
lock
sbb
push
and
clc
inc
lea
jecxz
mov
sub
into
jb
nop
or
sti
xchg
pop
lcall
lahf
jo
jecxz
aam
pop
popf
rcll
fdivl
push
cmpsb
push
add
sbb
int
fisttpl
mov
sbb
or
or
mov
inc
pop
fisubrs
push
jnp
add
loopne
adcl
das
xchg
mov
jg
ret
gs
inc
aaa
adc
sbb
xchg
adc
in
out
stos
pop
jecxz
sub
cmp
push
stos
add
push
sarl
addr16
icebp
push
push
mov
mov
icebp
enter
outsl
scas
call
fucomi
cmp
data16
cwtl
inc
rolb
mov
jge
out
into
pusha
pop
adc
push
sub
cli
mov
repnz
cmp
mov
sbb
sar
jmp
jp
stc
push
mov
lea
clc
inc
aas
shrb
inc
insb
ja
sahf
mov
mov
or
dec
rorl
adc
cmpl
mov
mov
stos
mov
enter
lret
popf
jl
inc
xchg
sbb
or
push
cmpsl
sti
lahf
push
add
mov
jo
jnp
mov
frstor
sub
stc
pop
es
cli
aad
push
cs
adc
sub
cs
xchg
test
fsubrp
mov
mov
aad
mov
into
pop
cmp
jl
inc
jg
sbb
push
bound
push
ljmp
push
mov
call
sbb
outsb
mov
pop
loope
jnp
jae
iret
pop
adc
mov
fistpl
popf
xchg
xchg
sbb
or
dec
inc
incl
jns
mov
icebp
popa
xchg
lods
shlb
push
lahf
mov
lods
jo
popa
mulb
jo
mov
out
or
sbb
cmc
push
xor
and
pop
pop
mov
jmp
jl
int3
les
imul
xchg
jb
test
sub
push
mov
movsb
push
rcr
fidivs
dec
adc
lret
adc
rclb
lret
xchg
in
dec
cmpsb
mov
xchg
out
test
pop
xchg
mov
xor
adc
movsl
jbe
xchg
jecxz
jg
cmc
lret
jmp
add
lock
pop
icebp
jnp
sub
stc
rclb
js
stos
xor
push
push
xchg
jp
cltd
mov
sbb
mov
jecxz
jl
sbb
adc
jp
test
sbb
mov
jg
inc
pop
push
pop
mov
ret
ss
cld
sahf
add
dec
push
and
stos
js,pn
movsb
cmp
push
push
add
or
push
or
ficompl
nop
push
in
cmp
out
jns
sbb
mov
add
insl
test
sbb
push
clc
pop
xchg
aam
filds
movsb
lea
mov
push
adc
call
mov
mov
repz
mov
and
push
sti
cwtl
mov
jecxz
insb
repnz
jg
xchg
sbb
or
xchg
push
dec
xor
rcrb
in
or
pop
xor
sub
jge
in
fisubl
adc
cmp
fbstp
aas
mov
stc
push
cmp
iret
or
icebp
ds
push
xor
push
test
addr16
das
popf
sti
mov
cmp
mov
inc
out
inc
pop
cmpsl
sub
xchg
push
ret
in
pop
les
cmp
leave
cmpsb
jbe
xor
movsb
test
in
ljmp
sbb
popa
lahf
xorb
lret
loop
sti
les
sbb
insb
push
ret
adc
call
dec
pop
negl
mov
xor
push
sbb
mov
popf
pop
mov
inc
mov
add
jmp
jb
ficoms
imul
cltd
in
insb
mov
jle
cmp
lds
cmp
fnsave
in
mov
cmp
dec
imul
sbbb
popf
add
fs
outsb
out
and
popa
dec
jecxz
loop
add
lds
fs
stos
lcall
lock
push
adc
enter
clc
inc
cmpsl
sbb
into
or
push
pop
lret
cmp
cmp
jne,pn
loop
stc
dec
in
aaa
test
mov
notb
fs
ja
push
push
enter
repz
and
les
jmp
dec
xchg
dec
pop
push
sub
inc
movsb
sbb
jg
xchg
arpl
cmp
add
mov
cld
scas
adc
and
add
lahf
jnp
cmp
xchg
push
out
psubb
aaa
test
mov
sbb
fcmovnbe
into
cld
jmp
rdmsr
and
push
or
aaa
bound
shlb
jl
xchg
popf
add
jne
ffreep
imul
jbe
shlb
out
add
sbb
cmpsb
mov
in
lods
mov
cmp
pop
pop
lcall
scas
dec
shl
or
rol
adc
xchg
lds
adc
add
mov
xchg
adcb
cmc
lods
or
lret
jbe
inc
int
adc
test
icebp
mov
leave
push
add
jmp
mov
add
stos
xchg
xchg
or
aam
pshufw
xchg
out
xorl
dec
dec
mov
loope
out
aad
xchg
ret
jno
pop
mov
stos
std
fst
add
xchg
filds
lods
mul
add
xorps
dec
or
xchg
cmp
stos
outsl
inc
pop
movntps
test
mov
pusha
imul
jecxz
in
jb
sbb
out
int3
std
mov
sbb
outsb
sub
nop
xor
gs
add
push
into
in
lods
lahf
bound
adc
pop
xor
gs
lea
lcall
xlat
cld
ret
jno
jns
and
mov
sti
mov
jl
loop
or
inc
movsb
jp
pop
insb
mov
fidivs
outsb
aad
in
jl
cmp
movsb
pop
ljmp
push
aad
sub
push
sub
jg
mov
cmpsl
push
int3
dec
lods
insb
push
mov
sub
int
push
xchg
push
scas
addr16
sti
xor
insl
pop
sbb
icebp
or
pop
loope
cmp
lds
in
pop
dec
dec
in
cmp
gs
movsb
stos
data16
addr16
mov
lret
fwait
and
mov
xor
movsb
in
leave
mov
subl
je
int3
mov
jb
imull
push
xor
hlt
arpl
imulb
and
cmp
xor
stc
lret
mov
dec
xchg
cmp
lret
adc
hlt
xor
pop
push
pop
ljmp
repz
bnd
out
shl
and
xchg
push
cmp
add
enter
loope
loope
sbb
jno
mov
or
jns
fs
sbb
jb
pop
adc
aad
jne
or
aaa
jb
xchg
pop
push
add
add
push
mov
mov
in
pushf
mov
sbb
sub
cwtl
mov
in
xchg
inc
dec
adc
dec
push
pop
mov
out
push
out
cmp
push
out
ret
adc
cli
ficoms
cmpb
mov
aaa
rcr
add
push
jne
test
mov
popf
lret
dec
cmp
inc
jmp
mov
xor
aaa
ja
pop
fmuls
sub
ljmp
pop
stos
in
decb
pop
sti
je
cmp
sti
push
stos
push
repnz
imul
and
iret
data16
mov
fwait
ret
mov
dec
pop
cltd
inc
ja
mov
inc
xor
or
shll
xchg
push
lret
cld
or
ret
test
jno
icebp
movb
pop
adc
pop
test
push
ret
mov
sbb
dec
jno
dec
and
xchg
testl
cmc
fbstp
push
popf
test
cmp
lods
clc
int3
call
mov
push
sbb
and
cwtl
mov
xor
sbb
movsl
cwtl
pop
adc
cmp
fisubl
sub
cmp
push
mov
faddl
sarb
fs
std
cwtl
outsb
jg
insl
cmp
fwait
aas
lret
lcall
repz
subb
cs
mov
sub
cld
push
push
jle
ret
or
push
stc
push
ds
xor
gs
loopne
sub
call
xor
lea
add
inc
ss
add
in
jne
adc
jmp
js
or
pop
mov
test
fwait
mov
add
sub
lds
fwait
leave
push
hlt
lds
or
jae
add
cmp
test
lcall
sub
fs
jno
stos
outsl
dec
daa
mov
or
out
mov
sub
sahf
dec
lahf
dec
mov
loope
cmp
push
inc
cmp
jge
pushw
inc
mov
mov
pop
xchg
jp
mov
jno
mov
sub
popf
movsl
pop
int3
adc
or
leave
push
ljmp
xlat
jmp
mov
jecxz
pop
jecxz
fadds
cmp
lds
or
lock
jne
sbb
lahf
ds
xchg
cltd
test
xchg
sub
or
test
fldt
xchg
pop
jnp
iret
pop
and
pop
pop
loopne
fidivrs
and
push
add
loopne
addr16
std
push
ss
icebp
in
shll
cmp
xor
ds
ret
jge
dec
mov
test
shrl
pop
xchg
fwait
mov
ds
sarl
push
mov
leave
pop
mov
mov
xchg
imull
mov
pop
mov
cmp
mov
push
xchg
lret
cmp
in
cmp
insl
mov
pop
cmp
cwtl
sbb
int
fucomp
push
pop
cli
jb
dec
mov
mov
repnz
jg
sahf
cmpsl
jecxz,pn
cmp
das
test
and
jmp
mov
pusha
mov
inc
mov
fisttpl
movsb
inc
jp
testb
or
inc
sarl
hlt
dec
std
insb
cmp
cwtl
dec
xchg
cmp
divl
jmp
outsl
loopne
into
into
push
xor
sbb
xor
xchg
pop
pop
ret
add
mov
fisubrl
mov
lret
cmp
add
sub
lods
sahf
aaa
test
push
dec
movsb
in
mov
data16
mov
jmp
dec
adc
mov
clc
loope
cld
sbbb
sbb
adc
mov
cmpsb
push
pop
jno
movsb
mov
int
pop
sbb
fsts
sub
push
jle
jle
fidivl
inc
mov
push
iret
outsb
mov
dec
jo
add
imul
sti
pop
cmpsl
push
loop
xchg
push
jg
add
arpl
xchg
jb
leave
movsb
rolb
mov
xchg
push
inc
pop
out
jnp
clc
out
and
loopne
les
dec
cmp
shr
xor
push
stc
fimull
or
fldcw
insb
pushf
fisubs
and
jbe
rclb
adc
jmp
mov
xor
dec
call
xorb
pop
or
push
lret
push
mov
push
mov
out
mov
xchg
jo
cvtpi2ps
imul
gs
std
mov
sbb
or
push
xchg
lds
nop
and
add
jo
push
xor
mov
out
cmp
nop
test
dec
arpl
bnd
loopne
ds
or
ficomps
pop
cmp
mov
and
jb
mov
xchg
pop
mov
loope
clc
aaa
xchg
aaa
std
pop
bound
cmp
ficompl
mov
rorl
test
adc
divl
push
out
cli
xor
mov
xchg
pop
adc
mov
hlt
jnp
jae
fisubl
jmp
inc
loopne
or
testb
lcall
cwtl
xor
aas
arpl
jp
ror
cmp
fisttpll
cmc
push
insl
jecxz
inc
nop
lret
sbb
dec
inc
in
sub
flds
xor
mov
sub
adc
xchg
jg
imul
jae
sbb
adc
sbb
sub
insb
cwtl
fildl
or
gs
lds
add
sub
inc
dec
xor
sub
fnstsw
scas
xchg
out
mov
ret
mov
pop
jl
lret
push
dec
out
aaa
lcall
xor
pusha
mov
push
scas
push
dec
es
mov
adc
xor
repnz
mov
inc
cmp
imulb
pop
mov
cmp
and
repz
push
xor
stos
incb
jmp
sbb
mov
stc
lods
frstor
test
aad
cld
gs
jmp
in
fisttps
out
push
jl
pusha
cmpl
incl
jp
mov
cmp
xlat
jp
adc
fdivs
xor
sub
and
dec
jno
and
jp
ss
jle
sbb
insl
xchg
inc
arpl
minps
enter
clc
push
push
jne
xorl
inc
lock
test
add
cltd
dec
stc
xor
inc
js
scas
cltd
adc
scas
pusha
fcmovne
dec
add
sbb
mov
sbb
je
decb
add
cmp
pushf
inc
cltd
or
je
loope
dec
cmp
cmp
loopne
mov
push
xchg
aas
imul
bound
cmp
xchg
iret
int3
pop
sub
add
dec
repnz
inc
out
popf
rcrb
test
mov
add
in
push
lea
add
ds
sub
dec
out
lods
xlat
or
loope
mov
pop
jno
sbb
daa
adc
ss
push
daa
stos
out
and
out
stc
repnz
outsl
or
cmc
sbb
ljmp
inc
xchg
xchg
insb
pop
mov
mov
inc
cmp
sti
pop
movl
mov
sbb
clc
dec
mov
ss
inc
adc
ss
sub
add
scas
dec
cmp
fisttpll
mov
xchg
push
mov
loopne
add
lods
mov
xor
ljmp
dec
iret
jae
insb
mov
xchg
push
cltd
add
jge
int
xchg
pop
jne
push
xor
aad
pop
mov
pop
je
xor
insb
mov
or
pop
aaa
inc
pop
add
pop
sub
sbb
int
dec
push
inc
pop
xchg
mov
add
popa
jbe
cmc
outsl
loopne
mull
dec
stc
and
mov
rol
inc
std
das
cmp
fisubl
inc
inc
fadds
jbe
sub
clc
js
imul
bound
dec
pop
dec
mov
pop
mov
repz
add
mov
jnp
sub
mov
pop
mov
jb
inc
jno
ret
in
enter
mov
stc
mov
sar
clc
sub
push
rcll
shll
xchg
minps
xor
xor
rdtsc
loope
pop
stos
xchg
insb
clc
dec
pop
test
xchg
imul
lock
jl
dec
jecxz,pn
fsubs
sbb
mov
xchg
push
adc
dec
mov
pop
arpl
insl
lods
or
repnz
jbe
lret
or
fldt
out
mov
sub
rorb
mov
pop
je
aam
mov
dec
xor
push
pushf
and
test
shlb
negb
and
dec
loopne
xor
js
cmc
cwtl
mov
gs
aas
pop
sahf
call
xor
xor
jo
push
xchg
push
adc
sti
cwtl
fwait
adc
add
xchg
inc
fwait
imul
std
mov
out
add
mov
jae
sbb
xchg
pushf
mov
mov
push
adc
outsl
dec
clc
jns
sti
mov
push
ja
int
outsl
das
xchg
dec
pop
mov
out
mov
cmpsl
cmp
sti
repnz
notl
fdivp
cmp
push
cmp
je
cmpl
movb
push
dec
sub
enter
sahf
mov
icebp
cmp
das
mov
or
and
xchg
cmp
xor
fs
adc
push
jo
sbbb
and
lods
xor
sub
clc
cmp
lds
add
push
sub
daa
data16
push
xchg
insl
arpl
bound
pop
jnp
mov
test
mov
scas
iret
subb
pop
mov
stos
test
out
dec
dec
or
iret
cmc
sahf
xor
mov
pop
insb
dec
xchg
pop
lret
push
jecxz
ja
sbb
loop
inc
mov
inc
xchg
call
dec
mov
movsb
and
in
shrl
pop
lods
xor
add
or
dec
aam
data16
in
jb
hlt
lea
or
or
inc
jle
les
and
push
push
dec
sbb
mov
imul
js
shrl
lock
ret
sbb
pop
sahf
push
sbb
or
scas
aam
inc
jb
push
fnstenv
inc
test
xor
aaa
inc
xchg
bound
hlt
jle
imul
mov
ret
faddp
testb
stc
arpl
push
and
inc
addr16
lock
cs
pop
or
mov
xor
jnp
and
inc
repz
lret
pushf
and
pop
aad
sahf
jl
pop
jns
push
cli
cld
mov
scas
dec
sbb
xchg
loop
data16
scas
idivb
push
aaa
outsl
dec
hlt
test
sbb
pop
incl
pushf
push
arpl
aad
mov
push
mov
xor
mov
iret
xchg
sub
scas
or
dec
push
mov
mov
movsb
adc
jge
mov
imull
std
sub
jns
xor
ret
aaa
icebp
mov
xor
arpl
mov
and
rclb
int
rcr
movsb
into
add
ret
add
loopne
mov
add
xor
call
std
jl
lret
fbstp
push
test
shl
fcmovne
jge
mov
xchg
cmp
shll
gs
negb
sbb
sbb
mov
imul
adc
sbb
add
mov
push
movsb
scas
xchg
outsl
outsb
push
cli
mov
addb
sbb
hlt
out
mov
sub
std
imulb
les
movq
daa
push
mov
mulb
push
data16
mov
inc
add
movsl
popa
push
mov
mov
sub
mov
add
push
cmp
loopne
cmp
aas
lods
imul
sub
int3
insb
and
jge
sar
mov
add
popf
sbb
shr
loopne
in
das
adc
popa
mov
xchg
cltd
sahf
push
mov
inc
ja
cs
std
fs
jg
push
sbb
out
inc
sub
je,pn
cmp
stc
iret
pushf
imul
jnp
inc
mov
ds
push
dec
repnz
mov
dec
mov
imul
inc
xor
lret
in
mov
iret
push
fucomip
cmpsl
imul
push
in
xchg
cmp
mov
mov
stos
insb
lods
mov
adc
and
mov
inc
dec
xlat
call
aam
into
inc
rcrl
fildll
aaa
xchg
notb
stos
fiadds
add
inc
cs
out
push
adc
es
mov
fistpll
or
int
inc
jmp
fisubrs
setns
test
jecxz
enter
dec
cwtl
fsubs
dec
jecxz
xchg
inc
cmc
push
dec
in
stc
fs
ss
arpl
fimuls
inc
jecxz
fs
es
mov
stc
mov
ds
or
fwait
push
int3
les
iret
sahf
pop
push
push
lods
daa
mov
nop
stos
cmp
jge
dec
jo
cltd
outsb
scas
jne
and
mov
idivb
push
lret
sbb
into
jp
push
popf
mov
int3
ds
pop
jecxz
adc
adc
push
sbb
mov
js
faddl
jne
ret
fs
cmpsb
adc
icebp
inc
xchg
pop
bound
adc
fbstp
add
les
icebp
dec
jp
aaa
cwtl
xchg
sahf
filds
cmp
cltd
or
out
fld
mov
int3
sahf
adc
cli
and
out
add
rclb
shlb
dec
xlat
lods
sub
clc
psubd
dec
and
push
pop
ss
pop
adc
and
loope
adc
push
loope
inc
mov
dec
cwtl
push
pop
cwtl
incb
sub
outsb
xchg
data16
imul
cwtl
mov
call
pop
push
pop
into
in
out
or
adcl
mov
xchg
add
dec
adcl
or
sbb
dec
movsl
stos
inc
stos
jnp
jp
sub
out
cmc
push
imul
adc
jno
int3
icebp
jno
dec
dec
jge
sbb
mov
push
popf
movsb
lds
test
cmp
adcl
enter
mov
inc
jno
cmpsb
out
jl
repz
sbb
js
or
test
mov
mov
mov
fistl
mov
xchg
lea
ret
jae
bound
in
pop
icebp
mov
fwait
cmp
mov
jne
push
movsl
int
je
mov
aas
cmp
mov
pop
stos
test
aas
mov
mov
insb
inc
mov
or
clc
decl
aam
mov
rcr
imul
jne
test
out
mov
aaa
aaa
push
fsubr
jb
rolb
cmp
pop
outsl
lret
inc
fsubrl
outsl
inc
adc
leave
adc
jo
jecxz
add
sub
inc
bound
in
sub
insb
inc
notrack
jg
push
gs
inc
dec
adc
mov
dec
test
inc
mov
mov
pop
jmp
adc
push
mov
shll
mov
sub
xchg
mov
xchg
loopne
pop
daa
shr
stos
inc
mov
push
fisubs
dec
inc
fwait
lahf
adc
xor
pop
loope
popa
pop
and
shrl
faddp
dec
imul
add
jmp
es
mov
enter
scas
inc
js
loopne
mov
outsl
xor
sub
cmp
sub
stc
mov
sub
xchg
daa
fs
sti
dec
mulb
mov
jae
cltd
sbb
xchg
std
jl,pt
test
cmpsl
sbb
pop
ds
sbb
imul
lock
vpmadcswd
es
fisttpl
scas
data16
dec
adc
adc
mov
or
xchg
inc
lret
and
out
mov
push
inc
movsb
adc
ja
mov
or
mov
es
mov
jl
push
mov
cmpsb
xchg
rcrl
outsb
dec
sub
add
cld
lcall
idivb
jo
mov
sub
sbb
mov
and
dec
inc
std
addl
xchg
push
sbb
pop
jle
xchg
bound
mov
arpl
dec
mov
mov
jg
mov
and
push
jg
sbb
push
jg
jns
mov
pop
jno
loope
movsl
push
test
and
negb
dec
push
xor
add
loop
mov
add
ja
or
mov
mov
in
lret
repnz
dec
fidivrl
cli
cs
push
ljmp
cmpsb
std
or
cmp
jbe
mov
idivb
cmpsl
dec
in
gs
mov
add
push
in
ret
test
adc
xchg
or
add
js
push
loopne
outsl
aaa
mov
lahf
rclb
popf
or
fcomps
popa
hlt
xchg
repnz
cmp
jae
or
jg,pt
dec
push
popf
fnstsw
arpl
adc
aaa
jae
fistl
add
mov
xchg
pop
jnp
cmp
or
call
cmp
sbb
cmp
dec
daa
out
hlt
lods
cs
shll
xchg
dec
push
lods
inc
bound
icebp
jbe
jo
and
mov
or
vandps
cs
arpl
call
pop
jmp
sbb
sbb
in
leave
mov
leave
pop
lock
dec
mov
ret
or
jnp
pop
pop
es
or
push
add
xchg
or
push
jg
push
mov
ficompl
int
xchg
js
xchg
mov
rolb
inc
or
lods
std
leave
in
les
mov
in
pop
xchg
test
test
pop
adc
rol
insl
into
xchg
sub
mov
sbb
xchg
mov
push
ljmp
pop
and
sahf
cs
pusha
add
je
xchg
xchg
icebp
push
clc
out
aad
hlt
mov
jne
inc
mov
scas
sub
jb
int3
nop
xchg
imulb
lahf
js
sbb
int3
xor
test
mov
pushf
push
rorl
lods
out
mov
xchg
les
jb
push
jmp
adc
mov
inc
xchg
mov
sub
cmp
stos
and
dec
out
fs
sbb
jno
clc
mov
push
or
cld
mov
jns
pushf
shlb
xor
jmp
mov
pop
push
popf
cmp
adc
test
enter
call
call
jecxz
negl
ljmp
pop
dec
mov
push
xchg
sub
pop
in
arpl
fucom
shrl
push
imul
push
aad
cmpsl
das
out
sti
fnstsw
sub
cmpsl
push
inc
mov
ss
lods
mov
push
imul
mov
rcl
jp
mov
or
sub
push
mul
cmpb
fisubrs
push
ds
iret
mov
push
inc
or
out
jecxz
mov
add
push
mov
or
mov
cli
xchg
mov
call
and
int
adcl
cmp
push
jae
or
in
enter
cmc
push
ret
ss
test
lret
or
test
test
sub
sub
xchg
orb
lds
ljmp
push
fucompp
cs
clc
enter
push
sub
les
sbb
ja
push
roll
sub
jge
imul
mov
outsb
sti
pop
dec
adc
push
cltd
adc
jae
aaa
ds
pop
pop
xor
out
xchg
sbb
inc
mov
mov
out
lds
sub
jns
or
lea
inc
out
fwait
cmc
push
fimull
test
test
adc
enter
ds
mov
or
je
cmp
lods
or
dec
cmpsb
mov
pusha
adc
mov
xor
adc
rcll
fwait
dec
sbb
jg,pt
adc
jp
mov
adc
sbb
les
negb
cmc
sbb
mov
mov
mov
cmp
aad
mov
fcmovne
ljmp
test
and
ja
add
push
pop
lret
ljmp
mov
in
out
leave
stc
es
jecxz
and
cmpsb
shll
in
lock
push
shrl
push
inc
push
mov
add
jo
xchg
xlat
mov
loop
mov
push
adc
test
push
adc
xchg
loop
inc
loopne
mov
fnstenv
lret
and
enter
sub
loop
add
add
imul
xchg
sub
fidivs
mov
mov
scas
out
std
mov
jb
in
std
sub
add
popa
pusha
mov
inc
inc
pop
fmulp
xor
movsl
sbb
pop
mov
pushf
mov
les
inc
inc
and
test
inc
pop
repz
fs
cmp
push
dec
add
aam
dec
pop
push
push
xchg
and
cmc
fucomip
ja
mov
or
mov
add
repz
cmp
ss
aad
mov
ds
test
cmpsb
mov
nop
aam
test
fnsave
adc
gs
and
movb
add
in
xlat
daa
cltd
push
add
int3
xlat
fimull
cmpsl
mov
dec
pop
xor
cmc
insb
add
subl
adc
jno
daa
push
adc
sbbb
ret
fucomi
inc
fistpl
sub
mov
or
cmpsb
aaa
out
jb
mov
pop
jbe
loope
xorps
inc
stos
addr16
xchg
jp
cmp
pop
cld
int3
sahf
jecxz
and
pop
das
mov
subb
mov
outsl
scas
push
or
test
xchg
cmp
jae
imul
xchg
jecxz
cli
push
mov
ljmp
test
addr16
xor
shll
fnsave
mov
and
mov
xchg
jmp
in
add
push
scas
sbb
lret
dec
fisubs
xlat
sub
pop
in
jmp
in
and
xor
jl
push
mov
push
pop
pop
ret
nop
mov
out
sbb
xor
imul
inc
das
inc
fimuls
jecxz
pop
jle
cmc
jg
cwtl
jmp
mov
in
push
loope
fbstp
sahf
xchg
orl
lahf
dec
sub
out
std
or
xor
pop
lods
pusha
xchg
fmull
out
add
pop
and
inc
and
mov
imul
shlb
mov
cmpsl
int
sub
fildl
pop
sbb
dec
clc
movsb
fcmovb
push
or
test
shlb
jecxz
xchg
inc
sub
add
push
mov
fildl
scas
js
gs
sbb
pop
push
loopne
mov
mov
ret
sahf
lret
sub
shl
hlt
push
pop
andl
fists
aaa
and
movsl
pushf
cli
adc
pop
push
pop
repz
push
jno
movsb
cmp
out
add
imul
inc
xor
dec
cld
in
popf
iret
insl
mov
adc
jb
leave
cmp
dec
outsl
xchg
out
pop
mov
cmp
enter
mov
sub
pusha
repz
fxch
or
stos
je
sbb
shlb
notl
iret
jns
jmp
gs
cmp
mov
xchg
inc
test
imul
int3
pop
loope
subl
xchg
cmp
stos
int
out
mov
push
aas
aaa
popf
inc
dec
mov
mov
push
xchg
scas
negb
mov
push
cmpl
adc
or
inc
xchg
jl
pop
push
or
mov
shlb
pop
fistpl
xchg
mov
loope
filds
test
mov
xchg
rolb
pop
les
add
inc
jp
adc
scas
add
sbb
fwait
push
or
mov
in
in
pusha
dec
int3
fwait
js
ret
jecxz
cmp
push
adcb
enter
pop
cmc
cli
aas
cmpsl
add
mov
adc
xchg
push
hlt
xlat
xor
in
mov
pop
test
push
aaa
or
mov
push
loop
mov
mov
pop
rorl
sbb
xor
push
cmp
gs
imull
les
aam
cs
xorb
sbb
pop
aaa
insl
add
sbb
and
cmc
clc
fs
mov
fiadds
testb
mov
pop
rcl
cmpsl
mov
inc
inc
loop
fprem
fstps
das
mul
xor
xchg
xchg
outsb
xchg
dec
and
negl
push
dec
mov
adc
cwtl
dec
in
fistpll
cmp
jge
and
int3
cmpsb
push
jb
leave
lds
testb
test
lods
dec
adc
js
dec
clc
mov
ret
in
dec
clc
loope
dec
mov
fistpl
bound
xchg
ljmp
mov
cld
testb
inc
out
imul
sbb
ret
dec
or
rcrl
jne
and
or
jb
xchg
cs
call
push
insl
in
insl
mov
jmp
sub
or
bound
pop
and
inc
lahf
push
sbb
sahf
sbb
int3
in
push
mov
mov
xor
daa
add
or
push
and
pop
fwait
pop
push
movb
cli
andl
inc
lret
pop
insl
xchg
sarb
ficompl
adc
fldenv
adc
jno
mov
stc
stc
sbbb
scas
ja
mov
inc
pop
or
in
pushf
stos
test
add
stc
movl
push
data16
mov
test
xchg
arpl
sbb
or
ret
pusha
and
sub
cmc
xchg
ljmp
inc
sbb
pusha
out
push
fwait
stc
xchg
into
movsl
call
mov
sub
adc
or
rcrl
adc
pop
gs
sbbb
xchg
xlat
mov
insb
fsubl
add
sahf
jae
sub
mov
pop
fcmovnbe
test
add
and
cs
fisubrs
mov
mov
cwtl
mov
push
leave
adc
mov
loop
jl
inc
scas
xor
div
sbb
ficompl
movsl
mov
movsb
imul
xchg
push
shll
sahf
xchg
loop
test
cld
mov
nop
addr16
outsb
sbb
fxch
insl
lret
sarl
je
mov
les
cmp
fcomp
call
insl
jae
dec
sbb
mov
scas
pop
addb
icebp
imulb
lock
mov
mov
sub
leave
aaa
jg
arpl
hlt
mov
pop
fidivrs
or
mov
out
scas
dec
mov
inc
push
mov
test
xor
cmp
sti
cmp
and
dec
cld
dec
cmp
out
add
sarl
arpl
inc
fiaddl
dec
xchg
cld
stos
bound
jo
faddp
js
xchg
mov
aad
insl
mov
call
xchg
push
divb
pushl
cmp
mov
call
rcr
icebp
mov
jecxz
push
sub
mov
xchg
lcall
inc
lahf
sbb
mov
iret
pop
repnz
scas
sub
pop
pop
adc
in
push
push
sti
das
outsl
pushl
inc
test
clc
xor
push
mov
lcall
lret
push
inc
sub
cs
test
clc
je
orb
add
xchg
mov
clc
inc
jnp
insb
test
sti
xchg
ffree
cmp
stos
fidivrs
addb
mov
adc
aas
es
fiadds
shll
mov
xchg
mov
push
stos
lret
xorl
sbb
push
xchg
cmp
push
sbb
xor
insl
xchg
sbb
or
and
adc
dec
test
out
adc
fnstcw
xor
repnz
xchg
and
pop
mov
xor
gs
inc
pushf
jecxz
xchg
mov
sbb
sbb
notb
loope
in
sbb
je
pop
popa
jns
pop
mov
xchg
orl
fsubs
and
fisttps
setbe
sti
pop
in
mov
mov
pop
repnz
push
into
shll
js
and
shrl
loopne
gs
jo
pop
and
and
or
mov
icebp
push
jmp
pop
aaa
sbb
movsl
pusha
jnp
or
iret
popf
lret
push
adc
test
pop
in
daa
data16
xor
or
add
repz
punpcklwd
aas
enter
cmp
dec
sbb
inc
inc
daa
popa
jo
inc
inc
xor
mov
hlt
jb
jne
add
xchg
insb
lret
mov
jmp
adc
pushf
inc
jae
adc
jns
adc
sub
addr16
fistl
sbb
into
add
js
sub
jo
les
or
movsl
xchg
mov
outsl
imul
test
out
negb
jmp
ljmp
in
mov
xchg
aaa
test
xchg
sub
and
iret
push
push
div
outsl
or
and
xchg
push
ret
out
sbb
flds
mov
add
cs
mov
push
fldcw
adcb
scas
xchg
out
inc
sub
jo
insl
sarl
andb
loopne
popf
push
adc
jmp
mov
mov
and
xchg
outsb
add
cmp
mov
mov
mov
jns
mov
call
sti
xchg
je
add
mov
test
ficoml
in
lods
xchg
pop
inc
dec
jmp
push
cmp
les
cld
cmp
hlt
sub
xchg
push
ficomps
out
stos
adc
lods
dec
int
jp
pusha
add
and
cmp
icebp
mov
decb
mov
adc
stc
fldenv
jg
or
ficoml
xchg
std
jg
rolb
adc
shr
push
scas
dec
and
xorb
cwtl
mov
loope
les
outsl
and
es
sub
into
pop
cld
ss
mov
push
lahf
and
inc
pop
adc
cs
outsb
adc
shrl
and
outsl
repnz
sbb
mov
adc
aad
and
pop
jg
das
push
jnp
iret
loope
cmpsb
mov
mov
pusha
adc
enter
mov
int3
sbb
inc
or
xor
sub
pop
testb
ja
xchg
cmpl
cmp
pop
jns
inc
in
cmp
leave
mov
sbb
lds
push
insb
pusha
enter
stos
mov
arpl
in
mov
in
aam
fisttpl
sbb
ds
mov
jl
test
inc
add
jmp
xor
add
xchg
dec
sub
jbe
add
aam
fdiv
rcl
arpl
push
fsts
inc
data16
mov
jbe
stc
xor
jo
in
cmc
sbb
dec
push
pop
xchg
xor
add
and
pop
sub
into
out
push
mov
call
add
aas
pop
ljmp
lcall
sbb
add
mov
and
fdivrl
lods
scas
sub
leave
dec
fdivs
test
aad
dec
cmp
pop
pop
rcll
mov
add
dec
mov
push
les
jno
sub
imul
adc
pop
scas
clc
fwait
xchg
jbe
and
add
fldenv
xor
lcall
rclb
xor
in
sahf
mov
enter
addr16
popf
cmp
add
cmp
pop
adc
movsl
xchg
and
push
sub
cmp
gs
and
pop
fcomip
mov
push
out
test
loop
and
aad
call
je
sarb
pushf
sbb
and
shrl
bound
mov
dec
lret
xchg
daa
xchg
add
jnp
mov
push
cli
push
push
fdivrs
mov
add
inc
or
aad
and
xor
and
out
sar
mov
dec
cmp
mov
pushf
imul
sub
pop
popf
pop
insb
and
push
enter
pop
push
fwait
jecxz
xchg
fidivrs
addb
repnz
or
addr16
ss
xchg
ss
ljmp
and
fstpl
or
cmp
cmpsb
data16
imul
adc
out
hlt
incb
clc
rcr
mov
call
popf
arpl
and
in
sti
mov
shlb
dec
or
jp
jb
les
mov
jecxz
cmp
push
lods
push
jbe
mov
cmp
dec
iret
dec
cmc
pop
movsb
inc
cmpl
ret
pop
xchg
mov
cmpsl
jno
add
pop
iret
dec
xorb
int3
pop
je
lahf
xor
das
cli
push
in
aam
push
loope
in
out
call
jae
sbb
adc
incl
sub
sbb
or
add
mov
add
add
movsl
or
dec
std
out
test
icebp
dec
imulb
mov
ss
in
ja
aad
inc
mov
scas
jp
jns
and
loopne
movsb
jge
jo
out
mov
bound
rol
mov
roll
pop
shll
mov
fldt
push
arpl
ss
mov
push
mov
cmp
add
int
int
sbb
dec
push
sbb
test
lahf
outsb
aaa
inc
scas
xchg
fcoml
ret
in
xor
add
adc
or
fst
sbb
pop
push
aad
dec
mov
mov
loopne
mov
testl
das
ljmp
scas
or
out
fcomip
pop
aam
and
in
lcall
add
add
sbb
push
jge
mov
loop
pop
xchg
ret
cmp
leave
jmp
stc
xor
dec
lea
in
xor
and
sbb
outsl
gs
jl
movsl
cld
cmp
pushf
mov
aas
mov
iret
popf
cmpsl
repnz
fwait
dec
xor
jle
sti
test
sub
out
aas
mov
stos
pop
sub
cli
mov
sti
test
dec
out
rolb
insb
push
and
mov
stos
add
xchg
les
jmp
push
dec
jnp
mov
aas
and
fidivrs
inc
stc
lods
xchg
test
jge
in
mov
adc
stos
mov
cmpsl
mov
push
push
and
rcrb
sbb
fildl
pusha
leave
push
dec
pusha
mov
dec
pop
sub
mov
jecxz
xchg
add
add
outsl
push
aas
jle
fsts
icebp
movsb
sbb
movsb
aad
mov
jo
cmp
push
mov
xchg
stos
inc
cmp
cmp
iret
bound
adc
rcr
jl
lret
lcall
pop
push
movsl
add
into
lcall
into
leave
nop
pushf
fs
ds
xor
push
xlat
pop
sbb
or
pop
hlt
sti
sbb
jge
lret
test
pop
nop
int
lds
shrb
adc
and
loop
ffreep
sbb
repz
pop
mov
loopne
popf
xchg
dec
xor
nop
scas
loope
jmp
lock
xor
dec
popa
mov
sub
imul
clc
roll
testl
subl
lret
pop
xchg
dec
test
insl
dec
fdivl
rcl
add
filds
add
adc
pop
or
sbb
push
xchg
sub
inc
jp
mov
xor
pusha
lahf
imul
jl
adc
fcomps
sub
jne
xor
lds
push
mov
jmp
insb
and
add
loope
sub
inc
xchg
repz
add
sbb
repz
fists
out
jecxz
inc
add
jl
pop
mov
sbb
into
movups
push
sub
and
sbb
loop
pop
stos
insl
sbbb
ret
ret
hlt
dec
mov
outsl
nop
fs
inc
mov
je
insl
adc
dec
mov
into
and
fsubs
sub
lods
jle
lcall
dec
xchg
push
xchg
xlat
or
cmp
out
adc
lods
fisttpl
jbe
mov
mov
into
xchg
inc
push
mull
xchg
cmpsb
dec
shl
dec
jae
mov
mov
bound
dec
adc
outsl
xchg
add
or
arpl
inc
fwait
push
cmpsb
or
push
and
pushf
cmp
push
add
add
test
sarb
lcall
jmp
cmp
xor
inc
xor
mov
and
inc
imul
mov
rcl
mov
outsl
into
fcmovu
bound
in
or
imul
mov
inc
imul
push
add
add
cmpsl
fsubs
adc
mov
xchg
jmp
xchg
out
dec
push
movb
repz
mov
mov
add
in
inc
sbb
push
mov
jge
mov
pop
mov
arpl
lahf
adc
aas
push
inc
mov
or
addr16
sti
add
fldl
icebp
js
into
lret
popf
mov
inc
fidivl
leave
mov
imull
or
pop
mov
mov
and
fistpll
inc
mov
jns
dec
inc
pop
jecxz
mov
imul
push
mov
add
xchg
js
cltd
xorl
and
inc
add
add
add
imul
sub
inc
fildl
pop
add
shlb
and
mov
fwait
jge
push
out
sti
pop
loop
stos
push
push
je
dec
loop
mov
lret
pushf
imul
mov
pop
decl
imul
xor
into
movsb
sub
clc
adc
xchg
mov
in
dec
popf
lods
sbb
ja
jmp
hlt
cmc
xchg
fwait
lahf
aam
xchg
mov
rclb
in
and
jge
xor
bound
data16
movsl
inc
cwtl
scas
push
imul
stc
jl
cmp
jae
sbb
testb
cmc
pushf
push
inc
mov
jo
mov
inc
cmc
xchg
add
xchg
mov
std
fbld
inc
push
inc
inc
pop
movsl
xor
andl
mov
daa
or
in
and
push
into
nop
dec
popa
push
push
push
pushf
pand
xchg
sub
ret
inc
sahf
loopne
mov
pop
push
sub
lahf
dec
imul
mov
clc
arpl
out
pop
jg
fs
gs
loope
jge
dec
or
pop
stos
mov
lahf
mov
imul
aad
and
fstpl
xchg
and
mov
fcoml
add
push
insl
out
loopne
movsb
in
int3
mov
addl
lret
mov
push
test
nop
sahf
mov
cmp
cmp
or
pop
jmp
fwait
xchg
sub
adcl
add
xchg
sbb
dec
cmpsl
repz
xchg
mov
cmp
pop
aad
dec
jne
push
xor
jns
and
lods
enter
dec
lds
ljmp
ror
xor
movsl
cmpsb
dec
aad
push
es
rcl
inc
jns
movsb
jl
ss
scas
mov
dec
push
mov
ret
in
orl
and
shrl
cmc
inc
push
cmp
les
pop
jge
das
imul
cwtl
jl
jnp
cmp
in
and
adc
xchg
push
and
popa
mov
nop
jp
push
pop
fidivs
sub
inc
roll
rol
into
cmp
jl
enter
in
dec
in
push
jle
mov
or
push
jnp
push
outsl
push
jmp
test
jecxz
ss
lret
mov
push
rorl
adc
shr
cld
call
test
mov
sub
and
pop
cmp
mov
sub
mov
push
fcomp
pusha
xor
lret
test
lret
sbb
es
addb
mov
xchg
push
sbb
jae
mov
mov
mov
sub
pop
lods
movsl
cwtd
cmpsl
sbb
mov
std
add
or
push
clc
lahf
lahf
pop
sub
sbb
adc
cmp
mov
mov
outsb
mov
and
ret
mul
ljmp
sub
push
lds
ret
ret
pop
sub
cmpsb
test
loope
mov
adcb
inc
cmp
or
test
xchg
inc
lds
and
pushf
cs
jnp
sub
sbb
pop
fcmovb
sub
in
data16
mov
dec
inc
cmp
pop
cmp
mov
ret
sahf
rolb
cmp
lds
push
xchg
jae
loopne
sarb
cmpsl
call
and
mov
mov
push
stc
divb
cmp
cmp
pop
cld
mov
into
sti
xchg
inc
test
filds
pop
adcb
test
rorl
cmp
lock
out
adc
mov
jns
push
cmc
ljmp
jb
aaa
and
aas
or
inc
in
lret
xor
arpl
inc
dec
scas
sub
call
xor
lods
nop
pop
js
in
loope
xchg
mov
mov
cld
nop
aad
mov
jmp
addr16
or
gs
in
xchg
xor
sbb
ljmp
push
mov
sbb
sbb
and
lods
orb
or
jns
mov
add
test
cld
xor
sbb
aad
in
int3
push
ficomps
fadds
sbbl
mov
xor
add
sbb
and
sbb
ret
in
add
pinsrw
or
orb
das
xlat
cli
cld
fwait
out
and
and
popa
jp
cld
loop
add
roll
inc
adc
lahf
hlt
xor
pop
rorb
ja
and
jl
pop
in
cmpsb
bnd
sub
cs
jecxz
icebp
dec
push
dec
mov
loope
int
insl
out
aam
xor
in
data16
jg
in
mov
xchg
lret
push
imul
and
mov
xchg
lods
dec
push
lods
loopne
inc
scas
xchg
decl
mov
push
jne
sbb
add
inc
hlt
adc
inc
mov
pusha
div
push
test
xlat
das
lret
lods
cmp
cmp
and
and
cmc
gs
insb
js
and
inc
enter
or
jne
bound
ficomps
pop
push
and
push
mov
and
push
sarl
notl
dec
mov
out
stos
pop
movsl
and
jns
pushf
ficompl
shll
stos
xor
mov
js
fwait
jo
arpl
pop
int
add
addr16
cmp
shrb
cld
xor
stc
sbb
fstpl
sbb
jecxz
fimull
adc
into
pop
sub
push
ret
push
sub
pop
sbb
xchg
xor
leave
xchg
xor
scas
das
or
out
push
mov
sub
pop
xor
int3
lock
or
rorl
pop
xchg
fimuls
ret
ja
sub
mov
js
pop
sub
or
pop
pop
pop
xor
popf
icebp
xchg
shll
fdivrl
jns,pn
sub
xor
clc
xor
xor
call
pop
mov
fstl
pop
push
aam
shl
js
je
arpl
popa
pusha
jb
mov
lock
call
sbb
and
adc
cltd
or
shlb
fimuls
push
pushf
jp
call
xor
cltd
imul
lret
stos
rcr
pop
out
cmp
and
sbb
dec
mov
add
cs
cmpsb
push
mov
rclb
divb
sub
mov
mov
xchg
aas
jl
icebp
adc
jmp
mov
cli
out
jno
lahf
inc
jne
mov
shlb
sub
sbb
adc
sub
inc
lret
out
lret
lcall
xor
cmpsl
ja
adc
in
xor
sub
lods
dec
xchg
jne
outsb
pusha
ja
mov
xchg
mull
ljmp
cli
lret
xor
dec
push
movsb
loop
inc
mov
mov
add
fnstsw
sti
mov
xchg
xor
push
push
pop
ret
icebp
shrl
addr16
imul
rol
xchg
test
xor
ljmp
sbb
outsb
in
cmp
repz
clc
or
cmp
insb
imul
stc
sub
lcall
outsl
jno
lods
add
mulb
fldcw
gs
test
cmc
push
pushf
dec
scas
and
push
cli
mov
stos
stc
ss
jmp
test
mov
lock
das
sbb
in
add
dec
sub
pop
jnp
into
mov
cs
mov
mov
xor
xor
call
push
mov
js
out
rep
cmc
xchg
int
xchg
imul
dec
sbb
ljmp
pop
fiaddl
xor
mov
jg
add
mov
adc
dec
cltd
inc
jo
push
lcall
jae
es
or
pusha
scas
lods
and
jo
xor
xchg
leave
push
sub
cmp
loopne
or
pop
iret
jnp
stos
cmp
sbb
mov
pop
pop
scas
sub
cmp
out
or
frstor
out
std
dec
rorl
iret
movsl
aad
in
xor
jmp
fldcw
rcll
and
sbb
cmp
or
dec
xchg
cmp
jns
mov
adc
mov
sbb
sbb
dec
dec
add
pop
and
cmp
and
outsb
cld
xchg
adc
clc
push
test
scas
jge
mov
push
add
shrb
jecxz
sti
ret
mov
xchg
aaa
xchg
cmp
pop
sti
jns
int3
rcrl
xchg
lcall
cmc
sub
xor
sub
insl
fs
fistps
rcrl
or
scas
inc
xor
sbb
fidivs
or
push
stc
in
andb
popl
cmpsl
mov
nop
inc
add
inc
addb
lahf
adc
insl
pop
subb
hlt
pop
mov
xchg
cli
mov
push
add
jg
std
sahf
inc
mov
clc
fs
or
xchg
sbb
mov
test
sbbb
and
jb
mov
loopne
sub
sub
lcall
pop
movsb
test
pop
cmp
fabs
std
faddp
cmp
lods
out
rol
cmc
dec
jg
outsl
shlb
mov
cmp
xlat
pop
mov
xchg
mov
fisttpl
jge
pop
fldenv
rorb
ret
jbe
dec
push
imul
dec
hlt
insl
mov
sbb
pop
inc
test
pop
xor
fsts
cmc
dec
in
jne
or
jl
push
and
add
jb
loop
mov
xchg
or
arpl
push
push
dec
push
sbbl
mov
xor
xor
fcmovbe
ljmp
lret
sbbb
sbb
pop
popa
mov
adcb
push
adc
push
aad
pop
lods
das
inc
stc
or
jmp
mov
cmp
add
push
sbbl
cmp
orb
mov
inc
or
mov
scas
pop
xor
jmp
lods
test
jge
aad
into
sti
int
shlb
fdivs
stos
and
mov
out
cmp
and
cmpsl
repz
sbbl
lds
cli
jecxz
test
jbe
fcoml
sub
dec
inc
lods
and
lahf
sbb
das
or
int3
les
or
xor
inc
fnsave
aas
mov
imul
pop
mov
mov
mov
mov
stos
lods
loopne
adc
das
fwait
xor
xor
push
ljmp
rcrb
les
dec
notb
imul
push
gs
xchg
fisttpl
test
jecxz
adc
xor
push
leave
rorl
nop
mov
movsl
inc
popa
imul
xchg
push
mov
lods
pop
push
out
sbbl
mov
dec
mov
adc
ljmp
sbb
pop
adc
push
sbb
int3
pop
push
ret
xchg
dec
add
cmp
mov
mov
pop
in
xor
ja
fmul
hlt
ja
imul
aas
jo
pop
inc
sub
fnstsw
adc
inc
stc
cmp
sub
push
lods
mov
imul
inc
pop
imul
and
sub
jae
fxch
xchg
lods
mov
mov
pop
ret
or
adc
pop
fistps
jge
sbb
fcompl
xor
sub
lret
fists
cmp
dec
xor
push
repz
mov
mov
test
jb
sub
gs
ja
xlat
dec
outsb
mov
push
add
inc
mov
adc
lcall
dec
vaddss
out
and
push
cs
add
mov
ljmp
out
inc
add
fidivrs
or
ds
dec
or
insl
xchg
test
pop
or
mov
sahf
adc
jnp
repz
punpckhdq
fsts
jecxz
xchg
mov
mov
xor
les
icebp
repz
into
mov
arpl
popa
xchg
xchg
popf
fnstsw
xchg
dec
out
in
xchg
xor
push
cmpsl
xlat
pop
lret
js
mov
sbb
xor
fistl
push
mov
setge
test
fcompl
mov
or
pop
scas
dec
push
dec
outsb
jle
dec
movsl
roll
pop
dec
loopne
fildll
loope
ss
dec
sahf
sti
in
call
xor
push
insb
rorb
sti
cld
adc
dec
outsl
fdiv
and
pushf
stc
out
adc
sbb
mov
test
out
mov
ret
arpl
lock
or
iret
mov
and
rorl
movsl
pusha
push
mov
sub
pop
cmp
fnstenv
add
ja
fs
and
jbe
lcall
out
jbe
mov
cmp
sub
faddl
mov
inc
aad
in
cmp
outsl
add
adc
std
aad
das
push
hlt
adc
jb
popf
cwtl
out
xor
fs
add
popl
pop
cltd
stc
ret
xchg
shrb
ret
inc
notl
dec
xor
out
mov
add
in
sub
out
add
sbb
mov
sbb
lods
mov
mov
mov
rolb
mov
sub
pop
push
fstpt
aad
xchg
fldt
inc
sub
ss
xor
sub
ja
mov
into
lods
iret
leave
movsb
mov
sti
fsubs
rorl
pop
sbb
mov
dec
lea
mov
pop
jns
mov
and
insl
dec
es
jecxz
iret
sbb
lahf
pop
out
std
in
adc
rclb
pop
pop
fwait
cmp
mov
dec
testl
out
imul
neg
fiaddl
cs
loopne
mov
lret
mov
fwait
push
mov
out
in
push
mov
pop
insl
in
sti
inc
bswap
adc
inc
jbe
pop
mov
or
sbb
aad
jbe
adc
insb
mov
fisttpll
pop
mov
out
push
cmc
emms
add
xor
inc
test
mov
cmpsl
mov
into
lcall
adc
or
out
push
xor
scas
imul
mov
dec
bound
lret
inc
jnp
inc
insb
mov
dec
repnz
dec
jno
int3
jne
rcll
or
cmpsb
data16
fisttpl
add
mulb
stos
mov
in
cmpsb
fnstcw
lret
imul
or
outsb
lods
movb
nop
mov
fldenv
notb
jae
std
lods
test
jno
adc
stos
rcll
mov
cmpsl
sti
sbb
cmp
xor
jbe
repnz
icebp
jnp
xor
push
test
mov
adc
dec
movb
stos
xor
xor
jns
sbb
popa
in
out
test
mov
add
and
push
xor
leave
jmpw
xlat
dec
inc
jbe
cmc
fimuls
pop
mov
xor
test
push
mov
cmp
sbb
adc
add
arpl
fdivr
add
shrl
dec
fstpl
adc
add
cmc
out
add
int
fdecstp
jl
roll
loopne
fimull
jbe
pop
sti
ret
hlt
lods
in
xor
hlt
loopne
and
and
clc
mov
add
fidivl
mov
int3
in
pop
and
iret
sahf
sbb
cwtl
out
xor
jg
add
jecxz
popa
ljmp
je
ret
inc
dec
mov
and
clc
push
sti
cmp
fwait
scas
lds
popa
lcall
insl
clc
xchg
sbb
inc
sarb
icebp
sbb
aas
sub
cmp
cltd
push
or
lea
pop
or
jnp
les
out
xchg
hlt
hlt
sub
icebp
in
mov
dec
sbb
sbb
repnz
push
popf
aam
xchg
leave
push
mov
cmp
or
ficoms
xor
jae,pn
repz
adc
popf
mov
inc
add
pushf
or
mov
shl
lock
add
sbbb
or
lock
daa
xchg
cwtl
cmc
or
inc
add
add
fimull
lret
vcmppd
add
sub
cmpsl
call
sub
aaa
add
adc
insb
fadds
sub
or
and
shrb
mov
stc
pop
mov
and
int
mov
xchg
and
mov
and
repz
mov
pop
mov
dec
stc
scas
or
add
mov
inc
sub
mov
xchg
jo
mov
jge
cld
xchg
je
pusha
mov
popf
fisubrl
jl
inc
or
xchg
push
jne
std
inc
inc
pop
outsl
sar
xchg
xchg
cs
push
xchg
xchg
fwait
pop
jp
pop
cmpsl
xchg
push
add
cltd
mov
jp
clc
std
sub
sub
aam
or
push
mov
mov
pushf
sbb
lret
shrl
add
out
sub
nop
mov
adc
sub
push
push
stc
popa
dec
stos
rclb
mov
mov
xchg
push
mov
mov
int
xchg
ljmp
dec
xor
mov
aad
sub
mov
out
jg
jbe
mov
daa
jne
sarl
sbb
lcall
popf
jge
inc
adc
sbb
lods
and
dec
aas
mov
mov
rep
xchg
jmp
push
lds
outsb
in
or
test
in
test
or
mov
aaa
movsl
mov
mov
in
fbstp
sti
lea
stos
mov
test
adc
fs
pop
sbb
jle
push
std
mov
es
ja
cmpsb
hlt
cmpps
movsb
xor
and
std
xor
ljmp
adc
xchg
outsl
xlat
roll
ficomps
jb
dec
push
pop
inc
rcr
mov
inc
adc
cs
cmpl
bound
sbb
jb
ja
repnz
stc
mov
out
inc
loop
push
das
or
call
fs
lahf
mov
into
xor
fmuls
jl
push
and
or
leave
jne
inc
push
mov
out
sar
outsb
movsl
push
mov
jl
or
jmp
pop
xchg
sub
xor
dec
jo
je
rol
mov
loopne
or
fisubs
pop
pop
cmp
inc
addb
add
xchg
jmp
or
lret
flds
cld
repnz
mov
add
mov
fstpl
adcb
lock
cmpsb
fcmove
int
inc
fstps
bound
cmp
and
ljmp
int3
stos
sbb
xchg
test
add
add
xchg
mov
sub
mov
inc
lret
pop
cmpsb
pop
lock
popa
jmp
sub
jge
popa
sub
jns
rcr
mov
mov
les
loop
pop
lcall
cld
xchg
inc
mov
fisubrs
les
stc
push
sti
mov
mov
push
xchg
mov
mov
cmp
pusha
ds
rcrb
addr16
mov
add
cs
pop
push
inc
cmpsb
in
lock
divb
fwait
mov
sbb
jg
clc
mov
and
hlt
pop
inc
mov
mov
dec
adc
clc
xor
mov
mov
ret
or
mov
mov
std
jno
out
scas
ja
mov
push
dec
mov
lahf
test
out
aas
inc
mov
out
mov
movsl
loope
call
mov
add
xor
inc
imul
sbb
mov
andl
rcl
sub
xor
ds
jbe
mov
into
pop
fs
xlat
xchg
insl
in
cltd
cmpsb
div
sbb
imull
push
mov
call
pop
jb
push
cmp
sbb
mov
fs
adc
popf
pop
movsb
add
or
mov
jecxz
jecxz
out
leave
sub
outsl
or
push
and
dec
pop
fiadds
adcl
jp
mov
rolb
mov
mov
mov
sub
fsub
jle
in
fisubl
push
dec
jmp
pop
sti
in
fwait
mov
add
xchg
cltd
and
push
in
clc
adc
mov
jne
xchg
or
out
push
dec
insl
sbb
inc
icebp
pop
popf
in
inc
jg
fstpt
imul
adc
inc
data16
rorb
loop
mov
out
shlb
cmp
enter
add
jp
mov
jle
add
sarl
xchg
sbb
xchg
imul
sarl
pop
pop
add
in
inc
mov
or
jge
and
int3
sub
push
xor
out
aaa
pop
xchg
sbb
imul
cmpsb
jne
jp
sti
jle
or
mov
mov
fimull
cmp
mov
sti
pop
jge
mov
or
inc
cltd
sub
inc
daa
sarb
divl
subb
in
xor
cli
dec
call
neg
popa
mov
lcall
push
sub
adc
nop
cmp
mov
push
sahf
cmp
pop
idivb
jg
lock
xor
fbstp
jle
mov
sbb
push
inc
xlat
and
int3
inc
ret
std
mov
jb
scas
lea
adc
out
fs
setnp
aad
mov
pop
rcrb
aam
addb
push
push
adc
ja
insb
sub
clc
xchg
push
ffreep
xor
mov
nop
xchg
outsl
imul
data16
fistpll
add
push
dec
aam
mov
pop
adc
push
or
pop
add
iret
stc
mov
popf
push
mov
int
sti
xchg
mov
aaa
jecxz
iret
mov
std
clc
cmp
and
mov
or
fbstp
mov
dec
pop
test
add
fstl
mov
push
fs
adc
in
cmc
jge
jne
dec
jb
or
out
int
scas
xor
push
inc
setp
xchg
mov
push
ja
jbe
test
leave
outsb
into
std
add
mov
lcall
out
outsb
adc
popf
xlat
push
loop
add
ljmp
jge
fldenv
jp
pop
sbb
jp
pop
aad
out
std
in
adc
xor
imul
and
or
mov
push
mov
jb
bound
clc
push
pusha
cltd
mov
aaa
leave
ficompl
mov
sarb
in
scas
mov
dec
loope
jne
dec
jnp
pushf
insl
mov
sub
in
jge
loope
xchg
scas
call
mov
xchg
ret
sub
bound
imul
cmp
scas
fisttpll
mov
sahf
pop
xchg
sbb
push
insl
xchg
mov
icebp
jp
bound
and
sahf
xor
ds
out
push
and
cs
inc
push
ret
dec
mov
mov
int3
jg
shrl
jne
or
mov
sbb
rorl
popf
fcoms
mov
gs
xor
pop
mov
and
sub
imul
push
sub
cli
sub
xchg
test
gs
stos
and
xchg
notl
in
loope
aad
mov
dec
neg
jl
mov
int3
xchg
stos
dec
push
insl
fidivs
jae
inc
adc
sub
sbb
daa
add
idiv
push
nop
test
popf
mov
int
stc
xchg
testl
scas
xor
pop
scas
mov
mov
int
enter
and
aam
mov
shrb
idivb
insb
jmp
dec
push
sbb
std
mov
adc
adc
fists
lcall
sti
push
inc
js
sub
js
in
mov
cmpsl
ret
sahf
int
mov
fidivrs
or
xchg
jp
pop
push
push
mov
cwtl
orb
out
and
mulb
sahf
fcomps
sub
push
movsb
xorl
insb
test
int3
sub
inc
add
push
fsubrs
aas
sbb
or
cli
sbb
adc
push
shl
mov
xor
jge
rolb
mov
cmpsl
fwait
ss
push
inc
sub
sbb
imul
hlt
jp
mov
xchg
out
jl
cmp
int
daa
pusha
mov
insl
lret
shll
jno
sbb
pop
popf
int
lods
add
cmp
jecxz
ret
mov
outsl
out
repnz
repz
sub
jg
outsl
loope
push
jno
mov
or
cs
rcrl
es
mov
faddp
ret
jmp
sahf
xchg
sbb
movsl
jnp
xchg
dec
push
inc
ss
inc
sti
stos
xchg
jmp
lret
push
xchg
fmull
cld
andb
xchg
jnp
movsb
lahf
cltd
mov
gs
sbb
test
inc
lds
dec
or
dec
inc
orl
iret
mov
call
mul
or
incb
stos
repnz
out
inc
or
fimuls
popa
insl
xchg
arpl
cmp
push
sbb
movsl
outsb
mov
dec
cmp
enter
rcl
mulps
ljmp
dec
sub
popf
nop
sub
inc
xor
dec
sbb
mov
shll
mov
in
fnstenv
andl
sub
mulb
aam
dec
and
shl
inc
pop
out
sbb
add
jl
popf
push
cmp
xlat
testl
and
inc
pop
fisttpll
pushf
push
push
sbbl
sbb
aad
in
jns
mov
mov
iret
pop
test
xchg
fildll
inc
cmc
or
mov
add
movsl
sbb
movsl
nop
jecxz
ljmp
insl
add
jge
add
pop
scas
int
jecxz
jl
loop
stos
in
pushl
xchg
xor
rcr
jae
rclb
mov
mov
lea
scas
xchg
hlt
jle
cwtl
insb
sarb
fbld
push
add
ja
add
push
push
cmp
xor
loopne
std
add
repz
push
or
in
add
mov
rep
repz
movsl
mov
std
xor
test
test
add
aad
fcomip
pop
lock
ljmp
sub
sbb
mov
ss
incb
pop
es
fists
movsl
in
imul
jne
aam
int
fs
clc
sbb
inc
or
out
xchg
xchg
sbb
add
fimull
repz
jnp
adc
in
xchg
push
adc
lret
addb
mov
dec
pop
popa
into
pop
loopne
xor
or
lds
jne
cld
xor
mov
das
nop
dec
dec
cmp
pusha
stos
lods
in
xor
leave
pop
xor
jns
ror
ljmp
xbegin
ljmp
std
xchg
mov
repz
in
pop
adc
inc
inc
push
sbb
hlt
mov
cmpsb
adc
lea
fdivr
jb
lock
es
mov
inc
jle
movsl
iret
mov
xor
lds
out
mov
lahf
ficompl
repnz
lahf
pop
cmp
test
adc
add
sbb
mov
daa
scas
push
popf
mov
add
in
xor
aad
xor
mov
sub
xlat
mov
cmp
or
mov
pop
adc
adc
pop
sub
mov
js
imul
sub
mov
push
push
jnp
repz
ja
dec
push
leave
int3
fcom
inc
or
popfw
test
cmp
xchg
pop
test
adc
xchg
fldt
dec
sub
and
shll
fmuls
xlat
mov
and
xchg
nop
pushf
mov
jne
dec
and
add
fldt
imul
mov
ljmp
inc
lahf
mov
mov
jae
leave
call
in
bound
in
aaa
jg
jge
test
mov
or
adc
add
insl
add
mov
aam
lods
shll
sbb
hlt
pop
int3
aas
pushf
push
jmp
lea
loope
aas
mov
addr16
pop
sbb
jp
pop
pop
cmp
cld
lods
dec
lods
mov
aad
pop
sbb
cmp
mov
xor
orb
into
les
mov
in
jp
and
dec
or
jo
scas
mov
in
xor
mov
jo
xchg
mov
add
int
aam
push
cmpsb
adc
inc
cmp
ror
inc
mov
dec
es
mov
push
clc
bound
ss
jno
out
out
xor
mov
inc
mov
mov
les
test
and
ljmp
mov
ds
jle
xor
insb
lea
scas
sbb
inc
inc
ljmp
addr16
sub
xor
ficomps
push
and
inc
scas
mov
jbe
pop
lret
push
nop
clc
xor
cld
in
lods
test
int
lods
dec
or
jb
loopne
pop
add
mov
mov
insb
fcoml
out
adcb
fidivrl
mov
xlat
or
in
xorb
or
inc
push
mov
insl
daa
push
pop
pop
sub
into
xlat
repnz
sti
jp
mov
leave
fcoml
pop
xchg
inc
push
bound
fcoms
sti
xorl
pop
in
xchg
xchg
mov
lea
jne
xchg
xor
mov
dec
jle
rclb
and
fdivrl
fildl
dec
push
call
mov
mov
mov
add
and
mov
scas
push
and
ret
in
mov
dec
or
jge
sbb
fisubl
leave
adc
test
popf
jecxz
xchg
pusha
insb
or
dec
push
pop
jmp
mov
inc
push
xchg
mov
sbb
mov
pop
mov
mov
add
xchg
inc
lods
pop
sub
xor
xor
mov
inc
movsl
inc
aaa
je
sbb
jmp
adc
push
pusha
hlt
adc
stos
adc
xor
mov
inc
imul
scas
add
movsl
cmp
mov
pop
or
mov
jns
mov
push
mov
xlat
and
dec
cmp
lods
jg
mov
rorl
stc
jge
jmp
sbb
mov
mov
in
dec
xor
fs
pushf
add
cmp
push
and
rcrl
xchg
and
shrl
mov
test
lock
int3
andl
fwait
stc
mov
lods
jbe
sbb
push
sub
out
insb
je
mov
push
inc
xor
popa
xlat
fisubl
and
dec
lret
iret
jge
dec
pop
dec
jnp
mov
out
inc
pop
jge
jnp
imul
out
cmp
xchg
cli
or
lea
lds
cmp
stc
lock
sub
mov
add
fnsave
addr16
inc
mov
jb
out
dec
cltd
or
loope
repnz
les
jl
lock
scas
ficoms
mov
pop
xchg
dec
mov
jecxz
sti
outsb
fwait
imul
out
sahf
cmpsb
dec
jne
mov
mov
sub
out
xchg
out
jnp
rcrl
push
and
mov
push
and
xchg
incl
or
mov
ljmp
fwait
iret
fldl
iret
xchg
mov
lcall
nop
ss
scas
push
insb
jbe
mov
cmp
push
xor
iret
pop
lds
or
jp
pusha
mov
ficoms
mov
sarl
lds
int3
cmp
imul
mov
dec
mov
mov
out
lds
dec
xor
push
out
xchg
push
xor
add
imul
pop
cmp
mov
xchg
inc
add
mov
sub
jecxz
addb
imul
aaa
jo
ds
ja
ds
std
test
inc
lret
pushf
sub
mov
and
xor
pop
int
xor
jb
mov
out
cmp
jmp
jns
mov
add
ljmp
inc
xor
cwtl
jl
fisttpl
mov
jnp
fidivrs
push
mov
push
jno
xchg
lea
xor
jns
cwtl
jmpw
pop
cmp
pinsrw
leave
mov
hlt
or
call
mov
cmp
sbb
dec
nop
xchg
sbb
cmp
or
repz
out
xchg
test
aad
or
sbb
add
daa
cld
out
int
call
loop
leave
mov
mov
mov
xchg
jae
rorl
das
popa
dec
enter
loope
and
pop
cs
loope
je
pop
push
lods
mov
mov
and
cmp
push
push
xor
sub
adc
inc
push
jecxz
inc
adc
filds
pop
cltd
aas
aad
lret
push
cltd
in
pushf
or
outsb
cltd
dec
xor
push
add
cmp
adc
pop
push
hlt
xchg
jns
pop
mov
jo
jecxz
das
xor
jmp
lea
inc
imul
andl
inc
std
jo
scas
inc
ficomps
jne
xor
movsb
push
adc
sbb
adc
push
bound
into
lcall
sub
scas
cmpsl
fwait
add
enter
xchg
jae
sub
jp
clc
sub
jnp
and
mov
dec
movsb
cmc
cmc
ret
jne
and
dec
shr
sbb
pushf
jmp
adc
stos
enter
sahf
pushf
inc
ror
or
sbb
inc
or
icebp
xor
lret
xchg
mov
pushf
scas
lret
xlat
xchg
xorl
clc
or
movsb
adcl
inc
test
cltd
mov
dec
add
popf
in
push
loope
jb
cld
push
sub
shll
popa
cmp
test
popl
push
jmp
and
mov
adc
ficompl
stos
pop
push
pop
repnz
and
cs
insb
testb
push
incb
out
mov
cmpsb
mov
aad
or
mov
popf
jl
ds
pop
inc
popa
testb
jg
fwait
and
push
add
add
pop
ficomps
insl
mov
imul
insb
and
fs
or
shl
int3
loope
movsb
sub
lea
insb
xchg
jns
sbb
sub
sub
stc
gs
into
shl
cmpsb
or
and
stos
push
xchg
xchg
mov
fdivs
mov
push
test
sub
xor
push
shlb
gs
icebp
mov
push
adc
xchg
in
movsb
fstps
test
sbb
sub
fsubs
dec
or
gs
gs
std
adc
sbb
test
and
mov
sti
sbb
insb
pushf
int3
iret
xchg
test
daa
bound
mov
stc
iret
mov
or
inc
adc
inc
in
mov
cmp
fisttpll
nop
bound
xchg
jle
and
pushw
jle
popf
add
into
pop
lds
pop
out
fdivs
enter
dec
xchg
sub
and
cmpsl
cli
ja
insl
sub
pop
lret
jle
fcmovu
xchg
std
mov
cmp
ss
mov
sub
push
ds
inc
add
lds
imul
fcmovbe
mov
arpl
mov
stos
mov
into
xchg
ffree
xor
pushf
mov
cmp
fists
enter
dec
icebp
aaa
daa
rcrb
testl
gs
jecxz
sbb
and
inc
fwait
pop
addr16
test
stc
sbb
hlt
push
mov
cs
sti
cmpsb
inc
jae
orl
imul
test
cmp
jnp
lcall
mov
push
stos
push
adc
cmp
push
sub
push
test
mov
enter
bound
mov
inc
push
add
fcmovbe
xchg
cmp
aas
stos
pop
fidivs
test
scas
out
stos
push
stc
int
xchg
pop
repz
xchg
adc
les
lods
clc
je
sub
inc
xor
stc
je
cmp
add
add
mov
push
push
stc
mov
lds
cmovle
and
xchg
stc
push
pop
adcl
xchg
add
loop
adc
pop
neg
xor
push
fsubrs
int
scas
inc
dec
shll
test
test
mov
loop
test
loop
and
xchg
sbb
orb
jmp
sub
fwait
add
dec
ret
test
or
push
xchg
xor
lahf
fwait
jno
movsl
add
mov
adc
mov
xor
mov
mov
pop
out
jle
push
mov
mov
inc
mov
das
inc
dec
xchg
out
jle
jne
pop
aas
sub
test
lcall
rcrl
and
jbe
mov
jg
jnp
and
xorb
add
push
lods
in
inc
cmp
xchg
push
pop
pop
cmpsb
ljmp
mov
jmp
sbb
or
add
lcall
pop
push
cwtl
jmp
pop
or
lcall
and
iret
mov
jns
insb
ja
not
rcr
push
cli
stc
mov
mov
push
scas
test
pusha
and
adc
icebp
xchg
sahf
fldenv
fcomps
aas
mov
addl
and
pusha
cs
shlb
subb
loopne
mov
push
enter
movsl
or
xchg
in
fildl
std
aaa
lock
adc
or
xchg
aam
frstor
loop
cmp
negb
les
sbb
aad
or
cld
mov
arpl
neg
mov
into
mov
cmpsl
cmp
xchg
add
cmp
dec
imul
data16
call
sbb
push
cmp
into
rol
lods
lret
pop
jns
stos
inc
notb
ja
insb
push
and
xchg
fadd
cmp
int
shlb
and
sub
orl
adc
aaa
jmp
cmp
out
cmc
aaa
push
std
xor
in
idivl
pushl
out
push
jae
dec
inc
xchg
movsb
fwait
or
gs
fistpl
out
push
add
stos
je
sbb
sbb
and
adc
out
and
leave
add
lods
and
sahf
cli
int
push
fstpl
jecxz
and
inc
pop
dec
pop
ja
add
popf
adc
jo
jle,pn
cmp
push
pop
int3
cld
mov
and
scas
xor
jmp
adc
xchg
jecxz
push
jae
mov
ss
lret
repz
xchg
cmp
dec
mov
sub
ret
hlt
sbb
inc
mov
stos
stos
les
in
mov
inc
jne
mov
and
dec
pushf
mov
add
mov
stos
inc
adc
cmc
stos
sub
cld
xchg
sbb
xchg
icebp
jge
push
or
aad
std
movsl
jbe
arpl
jl
ret
sub
dec
idivb
jmp
das
ljmp
jno
rcrl
push
scas
je
gs
fst
jecxz
adc
adc
ds
cmp
mov
clc
rolb
cmpl
daa
in
cmpsb
add
ss
and
adc
xor
jb
cmp
repz
sbb
xor
pop
scas
dec
rcl
xchg
hlt
adc
pop
mov
mov
pop
mov
cmp
jmp
insl
enter
push
lea
nop
shll
negl
adc
and
fs
ss
mov
inc
test
mov
cmp
pushf
clc
push
hlt
xor
push
sbb
push
mov
jmp
add
and
mov
lret
pushf
mov
or
outsb
loopne
jmp
fistpll
inc
and
or
daa
sbb
rclb
or
outsl
xor
push
adc
lods
or
outsb
sub
adc
mov
sub
fnsetpm(287
and
fndisi(8087
jae
xchg
mov
popf
loop
pop
lret
les
jbe,pt
xchg
pop
das
ds
pusha
loop
es
outsb
and
jo
enter
scas
adc
and
in
inc
sub
push
inc
insl
inc
scas
icebp
int
or
dec
pushf
iret
repnz
or
in
sub
cltd
stc
mov
mov
cs
into
adc
loopne
mov
pop
push
lahf
and
aaa
xor
jmp
xchg
xchg
and
addl
dec
bsr
xchg
rcl
pushf
outsb
jnp
sub
cltd
push
xchg
notl
clc
or
xor
ret
imul
jns
adc
cs
pop
sbb
push
cmc
in
not
js
mov
lock
stos
mov
mov
push
lret
adcb
bnd
out
jnp
in
shlb
inc
mov
xchg
xor
inc
xchg
jge
std
in
push
adc
pop
in
pop
lods
push
adc
and
xchg
pop
xor
int
ret
fstps
inc
dec
mov
mov
fdivrs
cmpsb
pop
xchg
inc
jnp
stos
rcl
aas
mov
jo
pop
xchg
clc
leave
jecxz
xchg
mov
cmp
cmp
pop
scas
cwtl
and
arpl
sbb
lds
mov
mov
loop
mov
arpl
das
jnp
aaa
add
fs
pushfw
ret
repz
imul
stos
jge
shlb
jb
cmp
cmp
jmp
mov
dec
cmp
pop
stos
ds
push
sahf
and
cmp
xchg
cli
insb
cld
shlb
pop
js
fcmovne
hlt
push
xchg
lods
push
fs
cmpsb
addr16
cmp
test
out
das
add
loope
lock
and
cmp
xchg
out
lret
mov
ss
jg
movsl
rorb
push
sti
jb
pop
or
xor
ret
into
fwait
jns
adcl
xor
pop
sahf
cltd
xor
dec
cld
inc
das
rclb
in
dec
sub
stos
sub
dec
adc
push
into
aam
pop
movsl
mov
adc
inc
dec
push
xchg
pop
mov
sbb
pop
ss
ljmp
cwtl
iret
lods
jb
mov
es
insb
outsl
scas
add
insl
or
sarb
inc
aad
lds
out
pop
xchg
out
testw
insb
xchg
xchg
jne
cmc
aas
jl
std
add
loopne
fwait
rcrb
and
jbe
or
jns
xor
mov
dec
das
das
sub
mov
loopne
lcall
jp
push
ffree
mov
mov
jb
ret
dec
inc
jbe
iret
pop
lods
jnp
cmpsl
add
jecxz
in
push
xchg
push
push
adc
mov
andl
lahf
mov
cmp
in
into
mov
mov
shl
test
add
jge
jae
imul
inc
and
push
test
and
stc
in
jae
mov
out
push
rcl
mov
cmp
jnp
cltd
xor
xchg
and
pop
sub
loopne
xchg
add
sub
in
mov
nop
cs
call
int
pop
add
add
testb
jo
push
or
add
sete
lret
into
mov
cmp
hlt
xor
stc
lcall
push
fdivr
xchg
test
out
shrb
push
rcrl
in
inc
mov
pop
sbb
ret
out
ja
in
mov
dec
shlb
add
push
test
cmp
xchg
lret
les
movsl
or
bound
inc
icebp
cmp
xchg
adc
bound
jne
stc
xor
mov
faddl
cmc
repz
dec
lret
andb
loopne
mov
rol
mov
ret
dec
es
fwait
jecxz
mov
popf
adc
mov
push
divl
rolb
cmc
adc
call
movsl
outsl
stos
cmpsl
lret
mov
cmpsb
in
xchg
inc
dec
pop
scas
sbb
nop
aam
xchg
insb
loop
mov
les
addb
es
pop
xchg
add
shl
adc
in
and
mov
iret
or
inc
sub
pop
ljmp
cmpsb
stos
cwtl
jne
or
lods
jo
fucomi
outsl
sti
out
mov
or
cmp
or
call
lahf
and
pop
jle
pop
push
repnz
mov
insl
fld
pop
sbbb
cmp
cmc
fstl
sbb
lods
inc
in
js
fildl
and
test
ret
fsts
pusha
pop
jbe
dec
mov
pop
and
jmp
lret
in
mov
push
dec
push
dec
mov
cli
xchg
add
je
pushl
jmp
mov
scas
jbe
xchg
ss
dec
inc
add
cmp
mov
xor
out
sbb
mov
movsb
popa
inc
mov
mov
xor
and
inc
dec
add
xchg
mov
lods
std
rol
push
dec
mov
sbb
cmpsl
xor
dec
repz
and
mov
lods
outsl
push
cmpsb
scas
inc
push
cmc
fbld
ficomps
jno
sub
jnp
sbb
int
and
push
out
mov
jecxz
repz
or
fldl
mov
xchg
add
mov
aas
js
push
fwait
and
xor
shll
add
adc
add
out
mov
aam
jnp
mov
inc
mov
incl
stos
mov
pop
int3
adc
int
mov
xor
inc
sbb
jo
jg
negb
sbb
psrld
dec
push
cs
push
inc
mov
xchg
scas
mov
dec
jns
clc
fidivrs
pop
sbb
mov
sub
out
js
mov
or
pop
jge
outsl
pushf
nop
mov
add
stos
hlt
pop
leave
sti
lds
testl
add
sub
jo
into
shrl
aaa
sbb
sub
fnstenv
pcmpgtd
push
cmp
iret
lahf
jl
push
cmp
or
dec
fmull
loopne
jnp
xor
sub
xchg
xchg
pop
fimuls
sahf
inc
or
outsb
mov
loop
lods
pop
or
pop
push
ljmp
fidivl
mov
rcrl
cmc
das
pop
mov
adc
fbstp
std
call
lea
ret
sahf
inc
out
jge
cmp
sbb
arpl
dec
in
call
insb
ljmp
lods
adc
int
sub
lret
dec
je
insl
fldenv
ja
jbe
push
adc
xchg
call
std
xchg
push
mov
mov
in
dec
sub
xchg
sub
sbb
sbb
lahf
imulb
add
or
sub
scas
mov
sbb
fisttpll
xchg
in
stos
push
lds
cld
mov
inc
xchg
cwtl
cvtpi2ps
xchg
pop
mov
push
hlt
lds
pop
loopne
js
add
cmp
adc
into
jne
xlat
lret
test
mov
xor
and
cld
pop
inc
ret
ret
fs
jns
aas
inc
push
mov
mov
mov
call
hlt
xorb
in
pop
in
sbb
test
pushf
out
jmp
std
fisttpl
adc
pop
fisttpl
cld
mov
or
or
lods
imul
pop
adc
daa
shl
push
adc
adc
les
stos
out
push
orl
mov
add
nop
lret
fsubrs
insb
ret
fs
jb
inc
lret
cli
daa
movsl
test
int3
jnp
cmp
cmc
imul
jbe
subl
inc
push
lock
js
sbb
jnp
lret
lcall
in
mov
jmp
mov
in
dec
outsl
and
mov
and
mov
cli
and
mov
pop
int
or
inc
dec
inc
pop
cwtl
lret
jecxz
incl
mov
cmc
jb
jl
mov
iret
gs
push
and
ja
xchg
cmp
addb
adc
inc
push
movsl
divb
inc
dec
ret
frstor
aaa
jns
mov
mov
sub
fnop
negl
lret
test
arpl
ljmp
pop
ss
or
ja
test
out
mov
inc
xchg
shlb
inc
pop
inc
fwait
xor
int3
pushf
nop
subb
xchg
je
sbb
sub
inc
adc
popa
arpl
jnp
fimuls
xchg
rcll
leave
and
fstps
push
mov
pop
scas
inc
jae
nop
out
das
into
mov
aaa
dec
mov
es
cmp
mov
inc
or
add
dec
and
pop
in
daa
pop
test
nop
les
loop
aas
jns
stos
pop
negl
in
mov
loope
push
pop
sbb
les
loopne
repz
mov
xchg
je
xor
sub
jmp
xchg
mov
sbb
xchg
sbb
repnz
mov
int
jl
dec
cmpsl
sub
rcr
mov
push
test
addr16
in
mov
inc
push
dec
lea
add
roll
or
mov
sub
sar
popf
cli
mov
lret
fs
in
aaa
stc
frstor
adcb
or
lret
xlat
das
pop
or
pop
mov
leave
out
fsubrs
xchg
add
mov
hlt
add
out
dec
inc
lahf
sar
pop
lret
or
mov
sub
inc
cwtl
loop
jl
push
adc
xor
xor
aas
adc
sarl
mov
test
fstpt
sub
add
jo
add
fisttps
loope
push
cwtl
and
fisubrs
sub
pop
jns
sbb
mov
mov
fsts
sbb
cmpsl
mov
sub
xchg
sub
dec
mov
ss
scas
in
cmp
add
mov
pusha
inc
ret
xor
iret
fs
std
xlat
je
adc
inc
sub
clc
add
xchg
por
inc
push
mov
cmp
lcall
repz
ds
addr16
orps
jmp
outsb
or
xchg
cmp
cmpl
xchg
daa
lahf
sbb
repz
pop
adc
es
push
cmp
shlb
pop
outsl
add
pushf
aad
cmpsl
xor
xchg
mov
adc
mov
push
sub
dec
sbb
scas
xor
mov
sbb
mov
add
and
lods
shrb
or
addr16
in
xor
inc
mov
sbbl
sub
arpl
aas
jne
aaa
jmp
adc
arpl
jmp
mov
aam
daa
dec
mov
imul
sti
mov
sub
cltd
sub
xor
fistpl
xor
cs
lret
fstl
pop
repz
pop
xorb
out
loope
and
hlt
jecxz
pushf
push
sub
in
mov
into
cmp
popa
mov
sbb
call
sub
xor
mov
je
add
push
in
adc
inc
add
inc
fcmovne
add
insb
sub
cmp
push
lock
dec
loopne
movb
xor
loopne
push
shl
sti
sbb
xor
fchs
jae
mov
rcr
loope
sbb
mov
push
xchg
dec
ds
ret
das
push
popf
mov
xchg
mov
popa
call
subl
adc
insl
push
cltd
jno
int3
fldenv
jle
mov
insb
mov
bnd
dec
push
jne
stos
cmp
add
daa
pop
orl
dec
subb
aaa
push
ljmp
scas
cmpsl
adc
push
jge
and
xchg
out
fnstcw
pushf
push
push
dec
mulb
stc
cwtl
mov
rolb
jecxz
fdivs
jp
push
mov
or
iret
and
sbb
imul
add
cmp
mov
add
jmp
lods
leave
shl
pop
xchg
repz
mov
adc
int3
addr16
or
and
addr16
jb
stos
mov
mov
je
fiaddl
arpl
insb
les
cmpsl
jl
ret
test
ds
mov
pop
add
mov
loop
mov
leave
rcrb
push
sub
cltd
stos
cmp
mov
add
and
shll
call
adc
adc
jno
andnps
xor
jmp
push
inc
inc
dec
dec
out
addr16
xchg
dec
inc
cs
cltd
in
imul
push
loopne
outsb
push
pushf
clc
addr16
push
sub
ret
xchg
mov
adc
xor
or
cmpsl
add
jne
jbe
xor
pop
mov
add
aas
lea
dec
mov
test
xchg
add
fidivrs
mov
jle,pn
adc
push
movsl
inc
mul
ret
lods
lods
lret
iret
mov
inc
test
push
mov
ss
mov
aad
pop
cmpsb
jo
mov
push
mov
inc
mov
lret
insl
pop
xor
xchg
jg
cld
pop
mov
lock
ja
dec
aam
push
dec
test
or
lahf
in
and
adc
and
xchg
lret
ss
and
scas
mov
xchg
inc
pop
push
fldenv
rorb
insl
mov
jmp
or
test
mov
loop
push
jns
cmpsl
cmp
lret
jno
or
cltd
push
jl
add
rolb
fs
xor
pop
mov
fldenv
push
jo
pop
jns
les
int
arpl
scas
outsb
data16
adc
add
xor
test
sbb
out
insb
mov
pop
mov
scas
mov
arpl
lret
inc
fadds
cli
and
dec
mov
lcall
cmp
cmpsl
push
jne
cmp
mov
insb
adc
sub
jle
lret
add
sub
lret
andl
in
pop
xorb
push
daa
adc
ds
loope
out
lea
shr
not
or
notl
pop
sub
jo
add
in
cmp
jl
popl
notb
pop
or
cmp
test
push
mov
xchg
push
lds
dec
push
jle
xchg
fisttpll
dec
pop
hlt
fsubs
sbb
sbb
mov
notl
pop
xchg
arpl
sub
pop
sbb
rcpps
aad
xlat
aaa
sbb
sti
hlt
or
lahf
mov
addr16
inc
imull
enter
mov
js
cld
sbb
incb
filds
sub
cmpsb
pop
leave
dec
cwtl
mov
lock
jle
push
ss
or
jecxz
pop
and
jo
xchg
or
in
sbb
sbb
insb
cmpsl
out
rclb
loopne
mov
adc
stos
addr16
scas
int
rolb
or
adc
add
adc
es
arpl
push
hlt
adc
or
scas
pusha
stc
dec
aam
aam
dec
mov
hlt
sahf
cmp
lret
enter
mov
imul
mov
ret
mov
add
stc
or
sub
and
stc
mov
mov
vpsrlq
mov
jns
dec
mov
shll
mov
cli
jle
dec
gs
dec
add
pop
pop
in
lea
pop
insl
push
xlat
in
lret
hlt
mov
mov
out
mov
pop
add
push
stc
xchg
fsubs
ficompl
jo
sub
bound
loopne
pop
dec
es
jmp
xorb
mov
pop
sub
rolb
repnz
mov
adcl
pop
repz
jne
iret
jge
inc
scas
ss
jo
and
push
mov
fadds
cltd
in
shr
scas
std
fs
jno
add
cmp
inc
in
add
cmpsb
push
or
mov
mov
cmp
dec
clc
push
pop
pop
xor
sbb
push
pop
dec
mov
or
test
cmpsl
push
sub
inc
jne
das
lahf
mov
addr16
outsl
jno
ds
inc
clc
imul
call
shl
push
mov
mov
cmp
cmp
xor
jno
outsl
mov
cmp
sarl
mov
les
dec
in
daa
je
std
pop
cli
in
idivb
push
fildll
add
pop
or
cltd
jnp
std
dec
rcrl
inc
cmp
mov
fistpl
pushf
adc
fisubrs
pop
loope
cwtl
lret
adc
mov
mov
cld
out
jmp
xchg
push
stos
or
outsl
inc
and
lret
addr16
icebp
fdiv
clc
mov
es
or
add
xor
dec
out
imul
insb
dec
mov
cli
out
xchg
xlat
fists
data16
ja,pn
out
sub
dec
icebp
add
out
mov
pop
sub
je
mov
push
int
lret
add
dec
dec
shll
pop
mov
out
hlt
test
mov
lahf
negl
xchg
xor
scas
dec
orb
inc
add
ds
adcl
sahf
int
cmp
push
sub
popf
insl
jp
test
js
pop
sub
lret
rcll
call
shrl
or
xor
and
rcrb
add
je
and
loop
dec
les
movsl
popf
jbe
and
jmp
jae
mov
push
jle,pn
cmp
movsl
xor
pop
out
push
jnp
sti
pusha
push
mov
push
cmp
xchg
sahf
pop
lcall
cmpsb
sti
push
lods
out
sbb
xor
push
cmc
pop
frstor
lock
xchg
popf
dec
jge
test
mov
add
add
adc
adc
shll
adc
js
out
mov
outsl
adc
sub
ret
test
cmpsl
les
stos
sbb
jp
sub
mov
or
sarl
in
out
dec
imul
pushf
xor
xchg
xchg
push
lock
add
loopne
iret
dec
push
xchg
and
lock
pop
cmp
or
mov
in
fdivrl
into
leave
xor
daa
inc
sub
test
stc
mov
add
movsl
psubusw
rorl
je
jnp
repz
loop
cmp
dec
les
xor
insb
addr16
cwtl
out
ret
jo
addr16
xor
mov
adc
ss
cmpsb
mov
sub
repnz
dec
bound
xor
mov
adc
xchg
dec
mov
dec
fwait
jno
jnp
lahf
add
ja
fdivrp
xor
out
bound
js
jle
je,pt
fcoml
scas
cmpsl
push
xchg
or
pop
and
add
out
push
cld
sbb
lahf
movsl
push
jge
xor
ja,pt
mov
or
push
dec
add
enter
push
loop
call
sub
rolb
and
imull
fdivrl
scas
nop
lret
loopne
lret
cmp
mov
aam
fdivr
mov
xor
mov
xchg
imul
sub
mov
scas
sti
cmp
in
andb
sbbl
pop
mov
cwtl
mov
loop
mov
test
pop
xor
lret
mov
and
mov
ja
loopne
add
sub
shl
jo
das
xchg
adc
sub
jo
cltd
daa
push
movsb
mov
jge
arpl
xchg
js
sahf
push
cld
mov
xor
lret
cmp
jae
xchg
and
sub
push
mov
loop
lret
movsb
repz
xor
adc
jp
mov
xor
or
pop
insl
jp
lret
lret
jmp
cwtl
dec
scas
lock
jbe
das
jae
pop
stos
sub
gs
sarl
or
imul
mov
adc
pop
cmp
sbb
fdivrs
sbbl
inc
rcrl
lcall
das
push
std
das
jecxz
lods
xchg
dec
xor
mov
int
mov
repnz
aam
or
je
add
lret
inc
mov
and
je
mov
sbb
mov
loopne
hlt
sub
inc
stos
outsb
sarl
dec
mov
jb
push
test
adc
and
decl
in
mov
lds
test
jae
fnstcw
lretw
aad
jmp
push
xlat
sbb
sub
orb
push
lods
mov
lahf
xchg
sbb
cmp
lods
les
mov
cmp
hlt
jne
pop
push
dec
xchg
pop
add
jo
xor
or
jbe
jne
out
leave
js
fnstcw
mov
out
data16
push
clc
fcoms
aas
cs
clc
adc
scas
les
rcrb
sbb
pop
sti
mov
mov
jns
out
cmp
inc
push
test
leave
stc
call
scas
stos
int
add
loopne
in
mov
loopne
shrl
sub
xchg
and
push
or
xchg
or
mov
mov
dec
jb
scas
jbe
cltd
or
jnp
dec
ljmp
push
adc
push
not
xor
popf
dec
aaa
mov
mov
lret
daa
fildl
inc
imul
mov
pop
in
jbe
repnz
jmp
shlb
mov
xor
pop
cmp
data16
outsl
inc
rorl
leave
add
dec
inc
xor
mull
adc
fs
jp
pop
inc
push
pop
ret
fmull
test
mov
pop
adc
mov
fcoml
mov
aam
lret
jmp
in
mov
out
lods
sub
adc
mov
cmp
cs
mov
or
pop
rcrl
mov
mov
testb
lods
mov
cli
fnstcw
xor
addr16
fs
testb
into
pushf
xchg
mov
js
daa
and
pop
add
and
adc
adc
call
push
popa
lret
into
push
pop
lret
mov
loope
xor
stc
fbstp
out
adc
xchg
out
test
mov
xlat
add
pop
lcall
enter
push
fcomip
mov
xchg
xchg
das
sub
and
int3
cmp
lods
xchg
filds
cltd
andb
movsl
popa
jl
or
stc
pop
aad
insb
insb
mov
or
lret
aad
out
add
mov
imul
mov
stos
xor
inc
movsl
pushl
inc
mov
mov
lods
and
dec
std
incl
cmp
outsl
sahf
cmc
jle
xor
mov
jl
test
movsb
rcr
test
xor
daa
aas
jecxz
lret
scas
mov
les
xchg
lahf
icebp
outsl
dec
mov
sarb
xchg
mov
jle
test
das
inc
stos
mov
inc
iret
xchg
or
fstpl
add
es
mov
pop
test
lret
aad
sub
mov
or
cmpsl
in
andb
lods
into
mov
insb
xchg
cmpsb
mov
cmpsl
cmp
adc
fdivp
addl
repz
push
imul
add
int
shr
adc
shll
add
stc
sub
adc
pmuludq
ja
adc
es
call
rcll
pop
pop
xchg
mov
add
xchg
lea
push
and
xor
neg
pop
ja
pop
sub
arpl
inc
test
mov
in
jp
frstor
jnp
sahf
fwait
mull
fisttps
frstor
inc
fsubl
cltd
jle
daa
lret
inc
adc
lods
test
cli
lahf
mov
cld
out
jle
popf
mov
ljmp
roll
stc
or
adc
negl
or
mov
push
bound
jmp
xchg
les
and
ret
adc
stos
sub
jecxz
jbe
pusha
push
repz
fdivl
jl
or
dec
pop
push
fdivp
pushf
cmpsl
add
pop
mov
xorl
outsl
movsb
fidivl
xor
ja
push
dec
push
xchg
adc
inc
fsubs
int3
mov
dec
pop
inc
ds
sti
test
xor
stos
out
jnp
cmp
mulb
sub
mov
and
daa
push
repnz
filds
cmp
jno
rclb
in
xor
out
rolb
xchg
cwtl
inc
cwtl
cltd
mov
aam
mov
iret
pusha
push
hlt
inc
dec
enter
dec
dec
jp
or
sub
inc
mov
mov
insl
and
insl
dec
dec
outsl
cmp
push
sub
dec
out
addr16
and
push
push
imul
push
and
negb
sbb
mov
ss
xchg
sub
pop
add
pusha
dec
sarb
jae
dec
mov
push
popf
sahf
sbb
imul
in
push
add
and
jmp
jge
out
mov
mov
mov
dec
sahf
popf
jo
xor
in
push
arpl
cs
pop
std
inc
in
andb
insl
les
dec
das
cmpl
les
outsl
cmp
sub
dec
ja
xor
iret
xor
jne
sti
sti
pop
inc
add
stos
add
and
adc
xchg
repnz
outsb
xchg
int
mov
es
mov
cld
imul
jbe
subl
addb
sbb
add
sub
jne
push
xor
fdivs
mov
in
add
pop
pop
fdivs
adc
push
popa
mov
cmp
shr
stc
jnp
mov
pusha
sbbl
mov
xchg
cmp
mov
in
int
xchg
into
ds
inc
cmovae
mov
insl
lret
lret
xor
shr
pop
sahf
cmp
loope
icebp
sarl
aaa
sub
jbe
jg
lds
and
xor
dec
nopl
push
ljmp
sbb
scas
push
aas
arpl
dec
jl
hlt
mov
jecxz
xor
push
in
mov
and
out
mov
sub
xor
outsb
daa
xchg
sub
xchg
lret
in
xchg
and
or
dec
dec
push
xor
and
dec
imulb
outsb
or
jb
cwtl
or
push
adc
xor
jae
fisttpl
xchg
fsubrs
sub
call
imul
push
mov
inc
sub
push
movl
leave
fimuls
mov
cmp
movsb
inc
inc
lock
pop
mov
pop
push
sub
cmp
pusha
daa
pop
and
iret
pop
pop
rcrb
insl
sub
cmp
mov
scas
lea
shl
push
pop
push
lret
cmp
or
gs
orl
sbb
mov
jne
stos
dec
in
repnz
jmp
insb
frstor
shl
push
sbb
loop
mov
inc
roll
add
inc
jp
dec
fimull
imul
hlt
xchg
lock
push
sub
popa
pop
push
bound
sub
xor
add
outsl
or
push
sbb
push
daa
std
cmp
jo
movsl
adc
cld
movsb
insl
push
sbb
cmp
sbb
inc
bound
mov
xchg
outsl
lods
sbb
in
ds
jb
icebp
jbe
imul
xchg
into
cs
xorb
std
mov
and
jno
pop
ficoml
adc
jg
cmpsl
cmpsl
mov
jns
mov
in
pop
fdivl
and
pop
mov
call
outsl
mov
orb
mulb
cltd
sbb
pop
orb
jbe
repnz
pop
jnp
sbb
faddl
cmpsb
add
xchg
lret
cmp
push
mov
add
in
aad
dec
inc
mov
mov
outsl
sub
sbb
mov
sbb
pushf
sub
jo
cs
call
jge
mov
inc
loope
ds
jecxz
ds
push
jecxz
mov
pop
cmp
and
push
sahf
xchg
sarb
fnstenv
mov
ror
inc
je
mov
clc
out
pop
sti
cmp
or
outsb
out
outsb
ja
sub
jb
mov
rcr
sub
cmp
loopne
stos
aam
mov
xchg
mov
sub
dec
js
push
mov
std
sub
jns
cmp
stos
cmp
jnp
adc
mov
sbb
add
jg
outsl
pop
adc
jbe
cmp
out
or
add
dec
stos
and
scas
inc
nop
data16
jle
fisttpll
sarb
enter
xor
sub
fdivl
loop
cs
testb
mov
mov
mov
sti
test
push
shrl
pop
jp
push
mov
lea
lods
aad
test
jo
aad
in
mov
inc
nop
mov
push
das
mov
daa
sbb
negl
pushf
xchg
movsl
sbb
push
dec
mov
lcall
loopne
ret
or
stc
enter
outsb
inc
in
loopne
lret
imul
out
les
testl
stos
adc
mov
pop
or
mov
out
mov
ret
or
pop
pop
std
add
imul
loopne
outsl
repz
scas
incl
adc
mov
xchg
lea
pushl
mov
adc
aas
sub
test
pop
inc
adc
dec
push
sahf
cmc
popf
adc
dec
inc
sbb
cli
fisubs
cmp
sbb
push
inc
std
push
cmp
pop
adc
xlat
mov
xchg
mov
sub
sbb
jmp
lcall
sti
std
call
repz
pop
xor
push
xor
and
jmp
add
adcb
adc
sub
push
daa
dec
aaa
bound
stos
into
mov
or
inc
jnp
sub
rcll
imul
mov
or
nop
pop
xor
or
jge
mov
inc
add
arpl
push
sbb
incb
mov
lds
xchg
xchg
dec
sub
mov
je
cmp
gs
andb
jno
aaa
push
add
sub
ja
fidivl
popf
sub
aam
outsb
jp
fidivrs
inc
fildl
lahf
push
sbb
ja
add
pop
mov
or
insb
insl
push
xor
icebp
cmpl
lock
pop
aad
aas
outsl
mov
sbb
sbb
in
mov
pop
outsb
or
pop
dec
cmpsb
rcrl
mov
mov
mov
test
adc
scas
out
inc
mov
div
push
inc
test
outsl
sub
fwait
mov
aas
test
pop
setl
xchg
or
js
lea
aaa
mov
adc
inc
out
lea
pop
outsl
adc
push
out
dec
dec
pop
xlat
cmp
aam
inc
std
mov
xor
adc
pop
or
int3
inc
movsl
shll
sahf
outsl
sub
cmp
andl
in
lret
aaa
cmpsl
inc
adc
pusha
lods
jge
inc
aad
jle
push
and
adcb
shrb
sarb
in
insl
add
lcall
lret
mov
pop
stc
cmpb
in
xor
dec
pop
push
and
cmp
loopne
insl
das
mov
mov
sbb
dec
pushl
dec
add
sub
push
cmpb
lods
loopne
pop
outsb
repz
mov
jle
loopne
aad
mov
pop
outsl
add
add
cltd
out
cmp
cmc
out
add
jnp
filds
mov
testb
jmp
dec
jp
mov
inc
cwtl
lcall
daa
call
jo
cmc
xchg
iret
sbb
push
cld
xchg
fisubs
gs
jl
mov
push
dec
sub
int3
pushf
imul
imul
cmp
dec
int
cli
repz
inc
orb
lret
jl
stos
pop
mov
cmc
mov
ret
repz
pop
popf
xchg
rcr
insb
add
mov
out
mov
push
popa
ss
jl
jb
pop
mov
sti
loope
pop
xor
adc
arpl
inc
in
push
inc
arpl
mov
ds
mov
or
mov
or
push
pop
cwtl
pop
mov
js
pop
dec
xor
xchg
adc
add
stos
mov
ja
xchg
stos
dec
les
cmp
or
ret
leave
dec
repnz
push
cli
dec
or
sbb
add
sbb
xchg
lds
cmp
push
out
adc
lea
mov
stc
cmpsb
pushf
sbb
pop
popaw
cs
pop
inc
and
shrl
inc
pop
xor
hlt
in
data16
sbb
mov
imul
in
cwtl
jecxz
lods
imul
xlat
xchg
mov
jle
inc
sbb
jae
jae
inc
icebp
js
imul
in
inc
sbb
xchg
mov
mov
add
mov
jnp
rorb
cmp
fcmovb
loop
xchg
xchg
inc
rcrl
insl
inc
push
in
mov
jns
out
or
inc
mull
xchg
fldl
mov
es
fisttpl
adc
loopne
xchg
sbb
addb
outsl
icebp
cld
dec
dec
pop
sbb
in
adc
movl
push
add
xor
in
sbb
adcl
mov
fxch
imul
dec
fs
gs
mov
icebp
ret
mov
mov
frstor
mov
sti
das
jae
filds
jb
lods
sub
imul
in
xor
ljmp
daa
or
sti
sub
jns
mov
push
push
adc
test
inc
push
cmpsb
dec
mov
mov
incb
pusha
mov
adc
mov
mov
in
pop
cmp
aaa
sti
jbe
inc
rcrb
loop
leave
leave
or
outsb
mov
hlt
push
dec
adc
rorb
jg
outsl
xchg
icebp
frstor
addl
jnp
dec
dec
out
sub
sub
lea
or
fldenv
mov
fucomp
jno
push
ljmp
xchg
icebp
std
test
adc
jnp
jp
shr
cltd
and
jmp
sub
sub
push
nop
sub
or
lcall
loopne
sbb
add
mov
xchg
daa
mov
fidivrl
fisubrl
sub
movsw
and
popa
mov
bound
mov
xchg
shll
sbb
fistpll
mov
stc
int3
sbb
jb
and
xchg
leave
mov
jb
adc
xor
pop
mov
call
push
mov
push
jae
or
leave
push
roll
movsb
dec
mov
neg
pop
inc
into
mov
stos
sbb
icebp
jg
je
adc
bound
pop
test
iret
dec
push
gs
mov
stc
loope
jl
push
inc
jle
and
mov
push
push
and
dec
in
cltd
jb
xchg
push
xor
sub
cmp
jp
pop
sti
test
adcb
sbb
loopne
lahf
sbb
dec
mov
inc
push
push
add
shl
call
std
dec
sub
pop
andb
fs
sbb
inc
sub
push
test
fstpt
leave
sbb
cli
jl
add
xchg
dec
sahf
divps
maskmovq
testl
repnz
mov
incl
jbe
push
call
sbb
sub
sahf
mov
mov
addr16
dec
stos
pop
jns
nop
movb
aam
popa
and
es
pop
rcrl
lods
dec
and
mov
or
sub
fmull
pop
dec
pop
hlt
ficoml
cmpsb
test
inc
js
ror
jmp
xchg
daa
pop
pop
stc
cmc
lcall
fbld
pop
dec
inc
inc
cmp
jns
push
fucomp
jo
push
mov
mov
iret
and
mov
je
push
cwtl
cmp
xor
loop
adc
jmp
sbbl
flds
aas
fcoml
xor
test
pop
fcoml
jnp
inc
pop
lcall
xor
xchg
scas
repz
aas
lret
out
jg
andl
mov
ljmp
out
int
rorl
movsl
mov
xor
cmpsb
testb
fldl
xor
dec
leave
sub
add
jmp
stos
pop
pop
mov
arpl
mov
outsb
test
xchg
fldenv
in
cmpsl
dec
xor
mov
fisttpll
lods
push
adc
bound
lods
popf
das
mov
daa
shll
cli
decl
or
stc
push
push
test
pop
aam
and
lock
scas
or
in
addb
std
xor
fs
jmp
cmpsl
or
mov
das
lcall
std
jle
mov
mov
popa
cmc
push
int3
jo
bnd
cmpsb
push
xchg
or
or
lock
cs
outsl
mov
fs
loopne
clc
insb
js
fdivl
in
mov
or
inc
jl
into
cmp
movsl
call
stc
fdivrs
inc
je
dec
out
cmp
out
inc
daa
pop
lods
fistl
scas
mov
repnz
jne
scas
je
mov
cmpsl
pop
inc
lock
adc
test
idivl
xor
mov
vphaddbd
sbb
xlat
xchg
mov
jb
push
hlt
scas
push
jp
push
aam
loop
mov
jl
in
pop
inc
into
xchg
pop
cmp
or
orb
jae
jle
adc
push
dec
mov
adc
int3
add
ss
or
sbb
inc
mov
cmp
jmp
inc
mov
xchg
and
sub
jb
sub
or
and
movsb
mov
cmp
sub
or
std
cmpsb
lcall
and
dec
sbb
pop
dec
pop
cmp
sahf
loope
add
add
daa
daa
inc
mull
mov
enter
xchg
jns
xor
xchg
aam
push
push
xchg
pop
mov
mov
xchg
rcll
testl
rorl
out
xchg
dec
add
lods
push
mov
cltd
shll
sbb
fadds
adc
dec
lds
xchg
ja
dec
push
jge
add
sub
xchg
dec
and
cmp
call
pop
gs
xchg
or
adc
aam
and
push
or
shll
xchg
mov
out
test
bound
jne
mov
cld
dec
ds
mov
lret
push
shlb
sbb
xor
enter
and
mov
ds
cmp
lods
jge
pushf
decb
outsb
sub
inc
cmc
lea
ror
inc
repz
insl
loop
and
lods
jecxz
add
mov
or
aaa
jne
js
arpl
imul
push
xchg
outsb
es
sahf
js
jo
xchg
sbbl
lahf
push
push
jne
stos
repz
mov
jno
rorl
ret
push
sbb
push
and
loop
ret
dec
int
adcb
push
xorl
inc
adc
mov
pop
int3
test
mov
pop
pop
lahf
ss
mov
lock
cmp
sub
inc
mov
punpckhbw
loop
vmovaps
inc
mov
lcall
xor
cmpsb
aam
mov
pusha
mov
lret
push
sbb
mov
xchg
in
cld
fstps
inc
inc
pop
inc
mov
or
lahf
push
jno
push
std
dec
lret
and
jnp
mov
aaa
xchg
mov
scas
jle
imul
adc
inc
cmp
pop
cltd
lret
movsl
xchg
cmp
cmpsl
push
cli
push
lahf
ret
lret
mov
cmp
jnp
imul
xor
or
fstpt
lahf
inc
sahf
cltd
cld
pop
scas
xor
into
sub
xor
pop
ja
jo
je
shll
sub
sub
jb
out
cltd
sbb
xor
push
jp
or
mov
out
loopne
jge
jge
dec
xchg
adc
popf
jle
fisubrl
adc
stos
imul
ds
ret
or
out
or
int
jb
daa
outsb
aam
sub
mov
scas
and
fidivs
enter
in
cld
jne
loop
lods
xor
cld
or
ror
push
sub
jmp
scas
and
inc
in
subb
daa
nop
xor
bound
pop
sahf
sub
rorl
in
loope
push
dec
out
test
ret
xchg
and
jae
imul
cmp
mov
push
js
outsl
hlt
fcomps
jnp
adc
push
cmp
jge
xor
ret
sub
cs
pop
xor
push
into
lahf
push
cmp
xchg
mov
pop
imul
test
orb
or
sbb
mov
loopne
jae
cltd
cs
jb
call
adc
add
in
loop
add
inc
jg
and
sbb
nop
cmpsb
js
sarb
es
daa
add
scas
mov
jnp
xor
xchg
ret
out
push
dec
jbe
jbe
jg
or
and
iret
aaa
sbb
das
ss
cmp
jae
stc
pushf
fstpt
xor
jnp
mov
int
stos
pop
popf
push
iret
push
xchg
pop
outsl
or
and
pop
insl
nop
mov
je
inc
cmpl
xchg
pop
xchg
xchg
ja
lds
and
dec
inc
aas
jecxz
jns
sub
fists
push
dec
cmp
or
xchg
jo
sub
dec
loop
jl
mov
mov
insb
mov
pop
inc
push
lds
xor
xor
cmp
hlt
fwait
mov
dec
cmp
hlt
jle
and
jbe
les
jae
and
mov
push
inc
rol
adcb
dec
inc
or
out
ss
mov
ret
dec
icebp
hlt
pop
aad
push
pop
adc
mov
sub
xchg
cmp
adc
mov
fcoms
fisttpll
jbe
or
out
out
adcb
lret
cmp
js
cmp
insl
arpl
imul
adc
push
dec
sub
test
inc
int
fisttpl
in
aaa
mov
jmp
dec
adc
pop
xorl
fwait
jb
cltd
sbb
mov
sub
mov
jl
faddl
and
icebp
lods
lret
scas
frstor
adc
out
jbe
cmc
mov
loope
lods
inc
test
sbb
int
push
fisttps
pop
dec
xchg
jo
daa
dec
adc
sub
sbb
movsl
popf
inc
out
or
test
pop
lds
loopne
test
cmp
xor
hlt
inc
stc
pop
push
jl
push
cmp
test
mov
xchg
cli
xor
mov
pop
cmp
xchg
dec
popa
int
out
mov
pop
in
dec
call
sahf
insb
lods
shlb
loope
inc
sbb
jne
sbb
push
and
dec
xchg
mov
rcll
fadds
cmp
sub
mov
cmpsl
nop
cltd
stos
dec
pop
ljmp
aaa
bound
push
cmp
loop
leave
sbb
xchg
mov
sub
or
sub
push
pop
push
dec
dec
fwait
enter
jns
mov
push
jmp
pop
imul
lods
mov
sbb
aam
ljmp
lock
clc
lods
popa
jo
into
lahf
arpl
imul
dec
mov
call
and
jne
jns
leave
rcrl
add
and
and
mov
lahf
mov
adc
add
gs
bound
cmp
pop
test
sub
sbb
rorb
rcrl
aam
pop
mov
outsb
and
cltd
leave
or
lock
dec
iret
loop
stc
mov
lock
stos
aas
insl
fs
enter
sub
jae
imul
xlat
push
xchg
bound
shlb
push
dec
incl
out
stos
add
loopne
stos
aaa
xor
lock
or
or
gs
stos
pop
js
fs
push
add
popa
hlt
sti
push
inc
dec
adc
dec
shl
in
xchg
sbb
les
inc
adc
mov
iret
or
mov
cmp
xchg
push
sub
or
xchg
loop
add
bound
push
inc
xor
adc
or
test
jmp
jecxz
test
das
or
cmp
sub
jne
fnop
movsb
sbb
or
jg
xchg
or
movsl
int3
dec
loop
and
mov
hlt
pop
mov
sub
imul
push
mul
test
cmc
pop
loop
mov
repnz
es
mov
mov
cmp
shl
stc
pop
rcl
mov
ljmp
test
mov
int
leave
popf
mov
movsl
popf
add
adc
mov
pop
mov
jmp
inc
push
cmc
repz
dec
mov
ret
push
xchg
movb
cmp
lea
mov
and
push
fsts
mov
xor
or
or
inc
dec
cmp
lods
or
mov
ljmp
gs
adc
dec
les
fs
mov
loop
pop
into
inc
sbb
adc
insl
jbe
mul
add
adc
out
push
addb
sub
adc
adc
add
ucomiss
call
xor
and
or
lock
enter
in
into
out
mov
sbb
ror
mov
xchg
daa
or
insl
rcrl
mov
cmp
cs
test
cmp
mov
loope
mov
ss
insl
mov
lock
lds
sarl
scas
push
jl
pop
fs
and
mov
jns
inc
mov
sti
xchg
lcall
movb
imul
xchg
js
ret
and
shrb
in
mov
pop
and
pop
jecxz
pop
outsl
insl
sbb
adc
inc
push
test
adc
cmc
imul
es
mov
or
xor
imulb
cmp
inc
dec
sbb
rol
adc
xchg
test
xlat
ds
scas
mov
fnstsw
ret
inc
pop
cmp
pop
hlt
pop
xor
out
in
sti
adc
sarb
sub
les
jo
lret
mov
pop
mov
xchg
shlb
add
mov
ret
xchg
or
cmc
shll
jbe
xchg
sub
sbb
insl
outsb
bound
mov
sub
xor
in
pop
dec
inc
lods
dec
repnz
pop
mov
addl
pop
dec
push
ror
jns
sti
xor
xor
ja
dec
jns
mull
dec
cmp
adc
jbe
les
les
negb
mov
pop
dec
xor
adc
push
dec
jo
cmp
dec
mov
mov
xor
push
or
aaa
mov
push
cwtl
outsl
cwtl
push
clc
push
sbb
mov
xchg
cli
in
mov
mov
xchg
inc
xchg
out
cmp
dec
pop
jae
ja
ja
sbb
das
inc
mov
cmp
or
or
sbb
sub
inc
repz
mov
in
xchg
or
push
pop
add
test
in
fdivrs
add
or
int3
movsb
std
lret
cmp
cltd
fistps
mov
fs
pop
mov
adcl
cld
aad
dec
cmpsl
xchg
jl
in
and
cmp
jae
cs
fnstcw
mov
xlat
xchg
js
jg
inc
repz
std
xor
jmp
xor
je
popa
inc
call
sbbl
jg
xchg
icebp
sbb
insl
jo
cmpsl
jge
stc
movsl
mov
loope
mov
cmpsb
insb
adc
cltd
xchg
dec
outsb
xchg
cs
nop
or
int3
cli
push
xor
pop
cmc
movsl
std
mov
adc
es
loop
jb
add
jbe
fs
leave
pop
jge
cld
sbb
icebp
aam
inc
fldln2
cmp
rcrb
rclb
leave
xchg
xlat
shrb
xchg
rcrb
imull
xchg
arpl
mov
imul
pop
sbb
ljmp
and
call
adc
adc
push
cwtl
fmuls
jl
mov
inc
push
or
int3
lea
add
aas
cs
lahf
inc
adc
sahf
jp
mov
mov
enter
add
push
pop
mov
push
mov
mov
and
push
in
xor
xor
xor
notb
outsb
imul
cmpl
sarb
inc
pop
xor
and
sbb
outsb
lds
cs
xchg
mov
mov
fdivrl
push
sahf
adc
pop
mov
xchg
lods
sub
rclb
iret
sarl
mov
jnp
mov
sbb
enter
les
pop
in
jle
sub
fcoml
imul
faddl
adc
movsb
sbb
cmpl
mov
and
or
xlat
in
xor
or
psrld
cmpsb
or
xchg
cwtl
popf
sbb
xor
sar
inc
push
hlt
aaa
popa
ret
sbb
xchg
push
mov
pop
xor
lcall
mov
lock
lds
and
fildll
les
mov
push
inc
std
inc
iret
add
sti
mov
enter
cmpl
mov
loop
popf
and
and
shrb
std
push
add
mov
inc
sub
fnstsw
test
addr16
gs
div
xor
xchg
fisubrl
xchg
xor
pop
int
cmp
dec
or
xor
xchg
jbe
push
pushf
pop
sti
push
insl
sahf
std
lock
cld
xchg
mov
inc
cmp
lcall
push
cmp
jae
mov
cmp
add
mov
or
dec
push
adc
jbe
add
aam
fbld
mov
mov
push
fbld
aaa
mov
in
or
dec
sub
les
pop
or
push
addr16
inc
lock
insb
xorl
sub
mov
inc
into
and
lahf
jo
dec
testb
pop
stos
sbb
movsb
scas
and
mov
xchg
cwtl
loop
mov
data16
jns
popa
jmp
sbb
loope
dec
mov
int
inc
pop
call
add
and
movsl
cli
inc
cmp
mov
cltd
adc
filds
sbb
lret
mov
or
cmpsl
inc
push
xchg
leave
nop
daa
mov
daa
mov
or
mov
nop
outsb
dec
dec
jne
xor
out
imul
lods
dec
dec
adc
rorl
xor
cmpb
andb
cwtl
fistl
and
jg
mov
and
outsl
adc
dec
mov
xchg
inc
sub
pop
or
cmpsl
sub
cltd
gs
inc
and
std
sbbb
lea
push
pop
rdmsr
xchg
mov
push
in
inc
popf
pop
jge
and
sub
loopne
repz
pop
scas
nop
iret
shlb
xor
dec
and
adc
ret
pop
mov
insb
stos
nop
std
sub
xchg
lods
insb
jecxz
lods
or
test
jmp
imul
sbb
hlt
outsl
inc
fdivl
jb
and
sbb
mov
pop
adc
iret
mov
out
pop
push
jb
sub
sub
lods
int3
andl
std
pusha
jge
dec
arpl
movsl
addr16
aam
andl
add
sahf
xchg
jo
mov
xchg
dec
outsb
sbb
push
sub
xchg
jnp
outsl
xlat
cmp
test
lods
loope
push
jbe
nop
dec
adc
adc
inc
stos
add
mov
test
pop
std
push
repz
pop
or
mov
xchg
xor
and
icebp
cmp
lahf
testl
push
jb
mov
in
push
cs
inc
popa
lods
leave
add
clc
push
cmp
popf
jmp
adc
mov
loopne
rol
out
xchg
push
stos
imul
or
inc
leave
cmpl
jmp
call
cmp
xchg
lahf
xlat
lahf
jbe
inc
fwait
sub
iret
sti
cli
lret
popa
add
inc
lret
into
xchg
xchg
inc
lret
nop
scas
adc
loop
shll
or
jle
scas
xlat
sub
pop
xchg
sarb
sbb
es
jb
xchg
sti
xchg
dec
stos
bnd
xor
push
shrl
push
insb
movsb
jbe
xchg
enter
lock
iret
cmp
cmp
sti
adc
or
push
dec
push
cs
adc
cmpsl
ret
sub
out
sbb
into
mov
lret
daa
lcall
insl
mov
lret
cs
push
ret
add
insb
and
mov
out
mov
ror
test
fidivrl
sub
inc
pop
movzbl
sbb
lods
lcall
mov
negl
and
and
or
lock
popa
inc
cmp
add
mov
adc
dec
mov
imul
add
icebp
fwait
std
bound
outsl
push
xchg
out
push
mov
inc
ja
push
mov
jo
jbe
loope
inc
js
aaa
testb
dec
cmp
repnz
mov
fs
movsl
addb
mov
xchg
icebp
dec
or
lock
es
or
mov
lds
jae
inc
popf
sbb
dec
cmpsb
aad
cmpb
lock
or
out
push
enter
sub
mov
addl
in
mov
mov
inc
clc
ret
dec
decl
inc
jno
dec
dec
sbb
or
lods
aaa
jnp
dec
cmp
aas
mov
popf
sbb
pop
jg
or
xor
call
lret
scas
outsb
mov
pop
leave
popf
pop
fistps
or
inc
incl
movsb
movsl
leave
call
xlat
adc
jbe
pop
insl
xchg
pushfw
push
fbld
mov
popa
scas
push
adc
ret
and
dec
enter
mov
ja
inc
je
inc
pop
std
mov
ret
lahf
icebp
cwtl
xchg
mov
ja
pushf
cmp
fiaddl
pop
xor
jg
cmp
mov
add
pop
sbb
mov
movsl
cltd
mov
cmp
pop
pop
cmpsb
or
enter
mov
add
aas
mov
mov
dec
cmp
int3
jb
iret
scas
jns
mov
dec
je
sbb
es
add
or
jmp
das
xor
movsb
and
mov
push
popf
stos
insl
sti
dec
mull
lahf
pop
xchg
outsl
lds
inc
mov
fstpt
in
cmp
sub
sbb
int
cmp
repz
rcl
add
jp
call
xchg
sti
loop
cs
or
fists
lods
lcall
shrb
gs
cmpsl
xchg
xchg
add
insl
shrl
jge
xchg
sbb
insb
mov
movsl
fldl
add
push
js
mov
cs
mov
sarb
sar
loopne
push
add
pop
cmp
push
sub
push
and
adc
iret
sar
rcrb
sub
popf
fcoml
or
cmpsl
xor
xlat
fldcw
inc
mov
insl
add
mov
push
push
cwtl
add
and
sub
adc
add
shrd
out
jb
stos
cmp
ss
mov
jo
jl
push
jns
out
stos
in
mov
cs
adc
imul
pop
outsb
cmpsb
nop
icebp
aas
jo
subl
jo
mov
sbb
mov
push
andl
cmp
rorl
mov
pop
pop
xchg
pop
or
add
sarb
mov
je
ds
mov
outsb
cmp
cmpsl
in
test
jp
ret
mov
sub
xor
dec
push
inc
lods
scas
add
lahf
push
rcrl
or
in
shr
xlat
mov
and
pushf
mov
inc
test
fidivrs
pop
negl
outsb
and
adc
sbb
dec
outsb
push
lahf
ljmp
out
out
push
dec
sbb
cmc
lods
pushf
pop
mov
gs
dec
pop
mov
and
push
dec
add
xor
cmp
add
loope
out
cmc
mov
push
push
push
test
int3
andl
mov
fmull
fsub
push
stc
mov
ret
mov
xlat
sub
push
rcrl
inc
fdiv
cmp
aam
aaa
roll
lret
jno
mov
xchg
mov
jns
adc
dec
or
push
clc
dec
inc
mov
cld
mov
cltd
sarb
jb
push
sbb
jbe
imul
mov
inc
int
clc
outsl
out
test
dec
vmwrite
fcmovbe
push
pop
add
mov
sbbb
testb
ljmp
sub
pushl
inc
mov
xchg
ljmp
aas
xor
pop
movsl
mov
mov
movsb
mov
push
mov
mov
xchg
push
js
xchg
or
mov
cs
mov
and
adc
ret
inc
icebp
lods
push
cmp
mov
lods
cmpsb
mull
mov
jo
adc
outsb
pop
push
or
out
cmp
lret
mov
xchg
jno
pop
adc
enter
and
popa
mov
rcr
rclb
or
bound
pop
xor
jg
into
or
movsl
cs
movsb
jmp
dec
rcll
inc
mov
cmp
std
push
or
lods
xchg
aad
xor
pushf
add
add
test
in
mov
pusha
stc
mov
jae
nop
das
js
cmp
mov
lds
jno
xchg
xor
cmp
loop
scas
or
jp
clc
test
in
jge
mov
inc
xchg
shl
sub
pop
stos
pop
and
std
mov
jg
mov
and
scas
add
shr
movsb
pop
rolb
ss
or
aad
jle
adc
xchg
loope
enter
and
fdiv
in
xor
in
mov
notb
daa
push
test
rclb
icebp
in
jge
jmp
pop
mov
data16
lahf
adc
add
pop
mov
xor
push
and
aaa
loope
sti
add
lahf
imul
and
mov
dec
add
xor
push
aad
or
mov
xchg
add
and
js
and
in
mov
lock
outsb
bound
sub
bound
lret
push
jp
pushf
rcrl
adc
sub
xlat
and
dec
jp
out
and
addr16
test
adc
aad
push
xchg
adc
pop
das
clc
mov
shll
mov
movsb
mov
dec
sbb
call
xchg
cld
xor
inc
xor
dec
cmp
faddl
push
jecxz
push
xchg
or
sbb
pop
cwtl
sbb
aam
enter
sbb
loop
cmp
fimuls
dec
and
imul
xor
and
insl
ss
jg
out
cmpsl
shrb
sbb
pop
pop
shll
or
call
leave
in
call
mov
push
call
or
sub
cltd
fwait
push
mov
mov
dec
int
dec
jns
out
mov
sub
mov
mov
mov
push
ss
aaa
jb
or
test
cs
mov
das
sbb
fistpll
bound
icebp
add
adc
movsl
push
das
xlat
pop
sarl
mov
faddp
pop
jg
mov
scas
xchg
sbb
test
daa
and
nop
cmpsb
jmp
inc
pop
push
daa
fcmove
ret
and
orl
lea
push
add
out
push
mov
adc
mov
addr16
dec
sbb
rorb
sbb
fistpl
xchg
adc
inc
sbb
stc
cld
out
ds
lcall
loop
pusha
dec
xor
adcl
cmp
insl
push
jbe
std
lods
test
inc
adc
mov
dec
out
dec
mov
push
xchg
in
jb
lds
jg
xchg
fisttps
clc
jg
lods
mov
or
mov
sbb
pop
inc
inc
shll
dec
fdivl
dec
jb
mov
test
dec
pop
and
dec
add
sbb
cmp
xor
lods
loope
push
dec
loop
sbb
add
aas
dec
push
cmp
jb
ret
int
mov
push
dec
inc
fstl
out
push
imul
enter
sbb
aad
out
scas
and
xchg
ds
mov
jno
in
xor
in
lret
push
mov
jb
ror
cmpl
cmp
pusha
aas
mov
out
mov
mov
fwait
push
scas
std
push
mov
cld
push
xor
insl
fbld
jmp
loop
test
jmp
lret
lret
inc
enter
imul
inc
aad
mov
aas
and
and
jle,pt
xchg
mov
mov
rorl
inc
out
out
imul
stos
iret
mov
push
inc
ds
loop
sbbb
or
pop
sbb
sub
xor
stos
push
gs
stc
les
mulb
cld
clc
cwtl
lea
daa
enter
sbb
or
lods
stos
pop
cmp
in
packssdw
out
testb
and
mov
insb
jecxz
adc
mov
dec
rcll
lret
adc
lcall
jl
mov
xor
inc
inc
dec
sub
sub
jae
mov
adc
pusha
or
mov
movsb
add
iret
jne
pop
xorb
aad
pusha
pop
inc
add
inc
ja
je
dec
cli
ja
cmp
inc
xor
outsb
push
mov
xlat
jl
lret
xor
es
add
std
stc
cmc
dec
outsl
cmp
mov
mov
jne
fisubrl
outsb
push
mov
fistl
pop
sahf
dec
insb
or
out
and
inc
pop
push
stc
out
mov
mov
jecxz
mov
lock
cmp
mov
inc
jl
dec
les
lahf
sub
mov
cmp
push
inc
std
inc
mov
out
ret
dec
in
dec
jge
inc
dec
ja
xorb
add
aam
test
inc
mov
xchg
xor
iret
push
leave
inc
pop
mov
test
cmp
repnz
inc
in
jmp
scas
lea
add
int
add
mov
push
push
loop
mov
push
adcb
into
test
pop
jge
pop
sbb
xchg
loop
out
dec
mov
pop
cmp
lea
mov
mov
mov
lret
sbb
xor
cmp
outsl
sti
xor
int
pop
js
inc
mov
sahf
lret
dec
mov
cs
stos
pop
mov
pusha
je
in
mov
repnz
add
rorb
stos
mov
inc
jbe
mov
push
rcll
mov
shll
xchg
mov
push
xchg
mov
fnstsw
mov
jnp,pn
cmove
aad
mov
fsub
push
or
push
and
movl
dec
add
les
mov
lahf
bound
popf
jbe
mov
mov
jnp
push
push
lret
scas
xlat
fnstcw
xchg
leave
int3
lret
sub
xor
outsl
sarl
adc
popa
xor
outsl
and
inc
lock
pop
fstpl
mov
inc
mov
push
add
rcll
add
test
jbe
sub
cmc
aas
cld
jnp
cmp
mov
and
enter
jp
pop
loopne
fnsave
mov
testb
or
movsb
lret
mov
jae
and
add
out
or
sub
cmpsl
xor
adc
pop
pop
fnsave
loope
jmp
lods
or
loopne
xor
sarl
ret
shlb
add
dec
inc
decb
ljmp
jns
jecxz
push
push
data16
in
cmpsb
mov
std
jb
pop
jl
loope
cltd
mov
mov
and
pop
xchg
adc
aaa
push
mov
aam
pop
add
adc
pop
out
ficoms
add
fwait
rorb
pushf
add
jne
sbbb
stos
pop
cmpsb
mov
and
adc
mov
mov
jne
sub
popf
lret
inc
add
ret
cmp
es
pushl
ljmp
lock
lea
fcmovb
repz
gs
aad
movsl
dec
push
shll
sarb
aaa
fstpl
sbbb
jl
jae
and
nop
and
mov
cmc
jle
mov
pop
adcb
mov
cli
and
xor
sbb
pop
adc
dec
bswap
test
mov
xor
sti
in
jbe
jae
cmpsb
rclb
push
test
outsl
push
loop
cmp
les
pop
jo
mov
outsb
outsl
aad
mov
pop
out
cli
bswap
mov
fucomi
pop
arpl
or
and
andb
out
inc
hlt
loope
mov
fldt
shrb
into
data16
xor
sbb
arpl
jnp
loop
dec
dec
es
sti
mov
daa
ret
xchg
xchg
fisubs
sarl
sub
and
mov
hlt
jno
movsl
add
push
xchg
mov
dec
dec
mov
or
xlat
rcr
adc
inc
aam
push
pop
jge
arpl
test
mov
and
xchg
outsl
or
dec
fldt
dec
test
lahf
popf
jns
mov
pushf
cmpsl
add
xchg
push
mov
imul
out
cmc
shr
hlt
aam
pop
mov
ja
jge
cmpsl
jl
pop
outsb
iret
ret
andl
fldcw
mov
xchg
sub
ret
push
cmp
mov
ljmp
inc
lret
out
cmp
cmpsb
cmp
mov
popf
inc
jmp
push
push
sbb
mov
stos
push
mov
in
jg
mov
popa
setnp
mov
fwait
loope
sbb
xor
aaa
mov
jle
mov
mov
lea
adc
in
mov
jecxz
sub
xlat
mov
dec
sarb
subb
or
jmp
mov
cmpsl
je
sub
inc
das
je
push
pop
mov
nop
pop
mov
stos
enter
adc
add
jp
jbe
rolb
inc
lcall
and
out
jb
mov
loope
push
dec
push
ss
cwtl
add
call
xlat
cli
mov
out
fs
and
dec
rcll
fadd
cmp
out
aas
jnp
stos
ljmp
stos
outsl
cmpsl
jbe
ret
mov
add
mov
int
adc
inc
rorb
lret
cmp
mov
add
xchg
ret
testb
adcb
rorb
push
popa
out
fcoml
jne
push
testb
out
jnp
incl
out
cmc
dec
sbb
ficoml
cmpb
movsl
jge
jbe
inc
insb
jg
dec
xor
imulb
mov
lods
adc
out
cltd
cmp
jecxz
out
out
jecxz
sub
cmp
subb
push
scas
adc
inc
mov
lahf
sarl
push
inc
cmp
add
data16
dec
push
jp
rcr
shll
or
mov
mov
sub
mov
and
gs
loop
inc
sbb
xchg
test
adc
fildl
xchg
repz
arpl
outsb
push
stos
test
add
sbb
sbb
cmpsl
inc
out
and
stc
pop
xchg
lds
clc
or
out
jnp
out
aam
push
add
sahf
add
divl
jle
pop
dec
and
cld
mov
pop
jns
xchg
aad
sbb
ss
lock
add
mov
test
mov
js
pop
imul
loop
in
movsb
repz
mov
cmp
jns
ss
aam
lods
push
inc
push
and
push
jb
imul
and
addl
pop
aaa
sub
cltd
adc
push
dec
xchg
and
das
aas
repz
stc
addr16
xchg
sahf
fistps
jno
mov
int3
std
movsb
gs
dec
pop
int
icebp
dec
jne
sbb
test
pop
xchg
cmp
lret
sbb
inc
mov
sbb
dec
bnd
mov
cmp
inc
fisubrl
cmc
push
push
mov
push
jae
xchg
in
and
inc
clc
bound
sahf
pop
ret
cmp
inc
jo
inc
sahf
sub
jne
add
sbb
testl
mov
testl
mov
pop
xor
pop
stos
cltd
adc
adc
pushf
sbb
leave
int3
pop
cmp
xchg
mov
test
jae
sbb
lods
sti
push
fstpl
push
dec
pop
lods
cmp
mov
popf
mov
push
xchg
jmp
inc
divl
test
pusha
mov
pop
clc
xor
stos
imul
or
pop
stc
std
and
cmp
or
ret
inc
cmp
cmp
inc
xchg
cmpsl
outsb
and
pop
ja
ds
mov
or
pushf
ret
fistps
jno
rclb
repz
scas
in
xchg
xchg
xor
test
or
adc
inc
int
lret
stos
sti
lret
adc
movsb
test
shll
xor
push
ss
xor
cmc
adc
push
jae
rcrl
sbb
sub
int3
push
xchg
dec
test
xor
push
push
mov
pop
adc
rclb
mov
push
xchg
or
sub
iret
addr16
out
scas
loope
test
pop
mov
jmp
icebp
aad
or
xchg
fmull
mov
dec
cli
and
push
fadd
cli
ret
and
xor
dec
xchg
mov
dec
mov
cmp
lret
imul
stos
aas
les
add
add
inc
xchg
or
xor
dec
mov
ja
invd
cli
or
adc
pop
sbb
aam
dec
int
insb
fs
loope
pop
sbb
jnp
test
call
lret
jmp
add
aas
mov
jne
add
xor
mov
jne
add
pop
and
cmp
adc
enter
stos
lret
ds
mov
cmpsb
cld
pop
andb
dec
fsub
out
adc
into
mov
mov
idivl
data16
mov
xor
sub
jmp
mov
push
sub
lret
mov
xor
or
pop
xor
xor
pop
cmpsl
add
std
rcrw
mov
call
dec
sub
sbb
mov
jbe
scas
push
aam
and
dec
in
es
and
mov
inc
mov
dec
mov
int3
xchg
insl
jmp
add
roll
mov
jae
or
stos
cwtl
xchg
test
sbb
push
push
pushl
push
jge
mov
cmc
jns
arpl
leave
mov
push
adc
mov
jno
nop
inc
pop
xchg
andb
inc
pop
bound
imul
dec
cmp
inc
aas
lock
sbb
pop
mov
lret
jns
and
push
pushf
pop
push
int
ljmp
dec
mov
dec
lahf
call
daa
ret
iret
adc
adc
call
push
push
dec
mov
lods
outsl
repnz
mov
add
dec
es
lock
fs
or
xor
adc
lcall
cld
ljmp
dec
sub
cli
push
in
addr16
shlb
hlt
cs
jne
div
push
and
adc
fwait
mov
call
xchg
std
dec
fildl
xchg
mov
inc
fsub
xor
mov
xchg
jl
sbb
mov
out
mov
and
icebp
pop
mov
and
adc
push
and
add
aas
dec
cmp
sub
inc
or
cld
cmpsl
jae
es
inc
inc
sbb
rsqrtps
out
test
fs
ret
push
iret
xlat
mov
mov
gs
push
flds
inc
adcb
rcll
pop
repnz
push
lock
outsb
jae
out
mov
loop
jnp
mov
jae
xchg
push
push
pop
and
cmp
pop
fmull
stos
fstps
pop
out
popl
mov
in
jg
movsb
jg
scas
insl
cmpsb
mov
xor
outsl
pop
xchg
mov
pop
mov
cmp
fwait
jmp
lret
and
mov
dec
in
push
std
es
jo
leave
xor
and
stos
repnz
mov
cwtl
mov
sbb
test
jb
sbb
or
lea
mov
cmp
mov
loop
jg
sarb
outsl
mov
or
ja
popf
sub
pop
inc
sbb
push
aaa
rclb
pop
xor
sbbb
in
cmp
sbb
lds
ret
dec
and
mov
pop
mov
cmp
mov
xlat
repnz
inc
aaa
outsb
jnp
cwtl
gs
fyl2x
test
pop
arpl
scas
jns
scas
or
lods
mov
jno
fnstcw
cmp
jae
xchg
inc
jno
pop
xchg
pop
inc
push
jp
xchg
stos
cmpsl
push
incb
sbb
push
cmc
xorb
push
movaps
pop
pop
mov
rorb
xor
jbe
mov
movsb
dec
cli
aas
xchg
out
add
out
rolb
pusha
and
inc
imul
out
fidivrl
fsubl
xor
adc
dec
inc
aaa
leave
jnp
lock
push
mov
cltd
dec
inc
jp
das
rclb
cmp
outsb
mov
add
sti
xchg
fmul
ljmp
mov
mov
cmpsb
and
insb
scas
scas
xchg
gs
sarl
lcall
sbbb
pop
mov
or
out
mov
xchg
jecxz
sub
push
cmp
xchg
xor
repnz
pop
inc
sbb
dec
mov
scas
sub
cld
adcl
out
das
out
jbe
hlt
movsl
aad
sbb
addl
and
in
inc
and
push
fs
fidivrl
mov
fstpt
lcall
mov
arpl
pop
les
inc
and
cs
lret
cmp
mov
jae
jo
leave
in
fldl
xchg
subl
sbb
movsb
pop
xor
jmp
rcrl
push
clc
jg
cmp
jns
dec
sahf
mov
pop
pop
push
aad
push
mov
scas
test
lock
xchg
repz
int3
mov
sbb
pop
mov
pusha
mov
xorb
fwait
or
inc
adc
fsubl
jne
iret
enter
dec
bound
xor
add
cld
inc
mov
xchg
mov
popa
mov
pop
and
in
jo
jg
fisubl
cmc
je
fwait
out
mov
neg
cli
insl
sbb
out
and
sbb
inc
inc
scas
add
loopne
xchg
mov
cwtl
call
sub
loop
or
pop
ss
pusha
and
hlt
insb
fmulp
push
sarl
xor
push
push
decl
int
cmp
cmp
sahf
gs
xchg
dec
sti
mov
mov
imul
adc
sbb
and
xor
or
add
xor
mov
lock
cmp
cmpsb
outsb
cli
lahf
mov
je
push
pop
repnz
shrl
and
xchg
subb
adc
jns
inc
mov
cmc
fnstcw
mov
mov
popa
fdivrp
mov
push
inc
xchg
xchg
sub
push
lea
lret
nop
js
test
test
loopne
movsl
xchg
cwtl
movsl
push
jns
das
pushf
and
and
test
or
das
pop
mov
fstps
rcll
cmp
push
jns
lods
ret
cmp
mov
push
mov
push
cmpsb
cmpl
xchg
dec
stos
fnstenv
es
movsl
fstps
or
dec
fdiv
lahf
add
mov
addr16
test
xor
pop
mov
test
pop
dec
jmp
mov
sti
inc
dec
mov
mov
out
aam
pushf
aad
pop
data16
mov
xchg
mov
popf
mov
push
sbb
xor
and
xchg
cmp
scas
dec
es
xchg
add
add
lret
imul
arpl
xchg
inc
jbe
push
inc
cmp
jle
fsubrs
jo
inc
mov
inc
mov
xor
imul
movsb
sbb
out
addr16
inc
and
outsl
test
mov
outsb
sbb
mov
mov
std
call
scas
mov
cld
out
jmp
into
push
repz
sbb
sub
cli
stos
jg
rclb
push
in
or
aam
jbe
cmpsb
jecxz
cmpsl
scas
adc
stc
push
cmp
js
xor
stc
mov
repnz
dec
loopne
lds
dec
sub
inc
cmpsb
lahf
sbb
lods
test
shll
xchg
jle
mov
inc
lock
roll
xchg
sti
jle
xchg
lret
mov
ret
xchg
popa
pop
dec
mov
sub
fsubrl
fwait
into
out
xchg
repz
ja
aad
sub
mov
test
xchg
and
push
adc
je
sbb
ja
xchg
cmp
es
add
cmp
and
pop
cltd
cli
xor
aas
insb
sbb
aas
jmp
jmp
movups
fnsave
lods
adc
xor
inc
jp
mov
xchg
adc
lret
lea
cld
test
enter
or
push
mov
or
sbb
jne
mov
test
mov
jno
leave
lcall
dec
insb
cmp
je
fwait
inc
jle
adc
pop
int3
dec
inc
or
sti
mov
xchg
or
repnz
add
outsb
xchg
mov
into
out
sar
or
mov
mov
pop
mov
add
roll
lds
mov
jno
enter
inc
push
cs
and
insb
fsubr
pushf
pop
sbb
cli
jne
xlat
movsb
dec
test
loop
roll
or
sub
pop
mov
mov
mov
mov
inc
enter
adcl
dec
rorl
sahf
cwtl
sbb
mov
lret
jg
adc
pop
jnp
adc
cmc
adc
daa
and
and
add
jb
inc
fidivs
jbe
add
loopne
push
sbb
mov
pop
pop
mov
mov
sub
imul
xor
out
lods
shll
xchg
adc
adc
les
pusha
xchg
jo
sub
and
sahf
xor
jmp
insl
mov
pop
dec
push
scas
repz
adc
mov
xchg
and
pop
mov
je
stos
out
addr16
xchg
frstor
xchg
loope
sarb
add
dec
cmp
mov
ret
jo
add
mov
inc
cmp
loope
insl
and
outsb
call
pop
xchg
jmp
sbb
lds
jp
mov
nop
mov
push
leave
cs
mov
out
jmp
and
jmp
or
xor
pop
scas
and
daa
fsubrl
fsubl
push
push
aas
xchg
int
pop
sub
std
inc
stos
mov
sbb
xor
cmp
mov
pop
push
mov
popa
testl
mov
pusha
inc
test
lcall
sbb
lret
lcall
fstps
pop
fnstsw
adc
sbb
dec
add
xor
inc
frstor
sti
inc
jge
in
jbe
mov
shl
jmp
push
inc
jp
or
dec
or
out
ret
es
stos
add
aad
pop
lods
sub
push
cmp
fisttpll
and
push
fmull
xor
push
push
cmp
addr16
inc
bound
adc
cmp
mov
test
fcomi
lret
mov
movsl
lods
cli
mov
inc
frstor
cmp
mov
add
out
pop
mov
out
call
mov
lret
popf
mov
xor
mov
mov
fimuls
xchg
sti
fsubrp
jae
repz
daa
or
lcall
sbb
test
xchg
dec
insl
aam
inc
stos
mov
cld
fnstenv
lret
push
nop
inc
and
mov
adc
pop
bnd
cltd
or
push
inc
es
movsb
jmp
cli
in
stos
inc
pop
adc
dec
lock
incb
xchg
push
mov
ljmp
pop
pop
fdiv
aad
je
sbb
or
mov
lahf
enter
inc
aas
dec
insb
inc
jecxz
cli
aaa
mov
ja
and
ret
lret
out
ss
or
cmc
dec
bound
in
pop
xor
xchg
cmp
mov
xchg
sub
jns
mov
push
and
add
dec
scas
pop
jbe
fcompl
adc
mov
inc
jge
out
jmp
das
jns
pusha
out
into
jmp
mov
pop
mov
mov
and
inc
das
add
dec
mov
mov
imul
pop
jne
jge
cmp
xchg
jmp
xor
scas
cmpsl
imul
pushf
or
xor
sahf
arpl
insl
inc
fcoml
mov
cld
mov
pop
inc
nop
jg
imul
sub
jle
shlb
or
icebp
cld
lea
jl
insb
enter
js
fisttps
iret
dec
bound
mov
sub
and
stos
out
dec
mov
insb
mov
mov
push
add
lret
test
in
add
andl
xlat
sbbl
mov
push
jns
fcoml
mov
mov
jge
sbb
pushf
or
cmp
popa
outsl
mov
out
mov
nop
bound
jl
pop
xchg
add
mov
scas
push
ss
loop
test
daa
lcall
or
xor
and
cs
iret
push
movsl
scas
mov
sbb
and
adc
jecxz
mov
fadds
loopne
aad
mov
lahf
add
sbb
or
repnz
aas
ret
push
adc
aad
inc
sub
mull
sbb
jne
pop
push
xor
mov
mov
or
xchg
leave
mov
out
jbe
aad
add
jae
je
inc
adc
sbb
xor
cmpsl
and
test
push
stos
mov
push
jno
scas
jecxz
test
fdivs
jae
rolb
shll
mov
jp
sub
repnz
inc
and
dec
sbb
dec
inc
adc
notl
adcb
cmpsb
jmp
inc
je
pop
or
iret
mov
fidivrs
push
repnz
sbb
mov
push
jle
inc
push
lods
push
loop
adc
bnd
jge
mov
daa
xor
cmp
dec
sub
gs
in
adc
dec
push
xor
aaa
lods
jp
sbb
push
jo
xor
lfs
jle
cmp
or
ficomps
aaa
mov
data16
daa
jo
add
jecxz
es
mov
fwait
icebp
jb
decl
push
in
mov
inc
in
lods
enter
and
cld
fmulp
sub
jecxz
jmp
xchg
push
jl
cltd
movsl
jmp
adc
testb
repnz
fisubrs
pop
pop
int
jo
in
lahf
cmp
ss
sbb
outsl
cmpsl
mov
cmp
pushf
sbb
imul
fcomi
subb
dec
shr
jbe
pop
sub
ret
jne
cs
push
stc
adc
sub
mulb
jmp
roll
sub
cmp
xchg
push
mov
mov
mov
lods
and
adc
mov
test
fidivl
subb
jbe
dec
and
mov
sbb
sub
rcrb
test
xor
push
popf
int3
cmc
fdivr
adc
ret
lods
jmp
xchg
push
mov
dec
add
cmc
sbbb
adc
inc
insl
cs
cmp
cmp
push
cwtl
xchg
xor
fsubs
sub
and
outsb
jo
pop
fnstenv
sub
pop
jnp
loop
mov
pop
enter
jae
arpl
jg
xchg
cltd
sbb
ljmpw
sbb
cltd
stos
loop
cwtl
imul
jbe
mov
push
in
mov
jo
out
lds
mov
sahf
jbe
cmp
cmp
js
mov
dec
inc
nop
xchg
jge
pop
popf
jae
dec
rep
fsubrs
iret
cmc
mov
adc
leave
push
hlt
pop
add
or
xor
roll
adc
pushf
in
jge
lods
mov
cltd
rorl
mov
cmp
mov
dec
push
stos
daa
and
ja
push
xlat
cli
sti
jg
lret
push
sub
movsl
adc
leave
das
push
pop
jno
out
fstps
xor
sbb
imul
mov
and
lret
movsl
cmp
dec
pusha
adc
or
adc
sub
ret
into
cld
int3
cli
shr
dec
mov
sub
pop
test
lock
outsl
xchg
rorb
fwait
lods
xchg
aam
insl
inc
xor
mov
lock
in
mov
push
lods
test
xor
dec
imul
sub
fistpll
fcoms
das
sub
mov
iret
push
fildll
mov
ja
repnz
mov
cmc
mov
out
xchg
sub
imul
cltd
int3
ret
add
jb
inc
mov
fimull
dec
push
aad
shld
jns
or
xlat
add
jp
in
popf
pop
jo
and
jp
jbe
cmp
mov
jg
mov
fistl
and
sbb
lods
push
cmp
push
mov
imul
clc
adc
sub
xorb
sbb
fadds
cmp
mov
gs
adc
aad
dec
popa
stos
adc
ret
test
xor
insb
loopne
int
aaa
push
rclb
rclb
loopne
adc
dec
scas
sbb
inc
mov
adc
sub
xchg
mov
push
mov
mov
fwait
mov
jae
ret
rcrb
in
loope
push
mov
mov
or
mov
lods
inc
sub
jecxz
mov
pop
scas
lods
push
lods
sbb
and
cmpb
dec
add
mov
mov
mov
insl
sbb
inc
in
mov
xchg
ljmp
inc
inc
imulb
divl
jmp
cmp
lea
cmp
push
dec
sbb
sub
repnz
insl
inc
push
repz
es
pop
push
negb
pop
adc
jg
fld
xchg
das
popa
mov
sub
mov
pushf
mov
hlt
add
sbb
iret
std
sti
inc
cmp
pop
rcrl
stos
adc
cmp
inc
jmp
mov
fdivrs
sub
jno
pop
loope
dec
sahf
push
or
sub
inc
iret
jecxz
sbb
add
dec
imul
cmp
pop
mov
pop
cmp
test
dec
cmp
dec
pushf
dec
lahf
inc
adc
inc
mov
cmpsb
clc
jns
xor
loopne
push
adc
fcmovbe
xchg
sahf
imul
cmp
pop
lods
ljmp
ss
fs
push
cmp
loop
mov
outsb
sbb
jg
jmp
sub
imul
pop
push
mov
jmp
fldenv
push
daa
or
mov
pop
dec
bound
sbb
cmc
or
push
push
xchg
fisttpll
mov
rcrl
dec
mov
sbb
add
aad
push
gs
int
arpl
pop
loopne
dec
in
xor
jmp
mov
xor
jae
imul
aaa
pop
int3
shl
or
sahf
mov
add
cli
fildll
add
ret
push
aam
adc
xchg
dec
inc
movsb
mov
dec
and
inc
xor
xchg
pop
sarl
cmc
std
out
fwait
sbb
jne
push
xchg
jecxz
dec
fnstcw
adcl
mov
sub
movsl
int
xchg
sahf
pop
pop
or
cmp
mov
insb
adc
inc
leave
iret
mov
sbb
loop
lock
out
mov
push
inc
in
mov
and
inc
add
decb
push
std
lods
popf
and
push
scas
mov
dec
sub
pusha
mov
dec
out
adc
in
sbb
pop
mov
in
fisubl
fwait
in
hlt
add
leave
pop
pop
fsub
loopne
mov
daa
iret
movsl
jo
sbb
adc
adc
dec
jnp
mov
inc
push
pushf
nop
mov
jns
cmp
sub
pop
repnz
sahf
hlt
pop
outsb
in
pop
inc
mov
in
mov
imul
sti
jnp
in
jb
ja
outsl
push
mov
pop
in
hlt
fadd
mov
mov
lret
sbb
dec
in
rol
mov
mov
cld
mov
jbe
icebp
in
lret
rcll
mov
inc
jns
cmp
jge
jmp
cmp
adc
adc
xor
mov
add
aam
mov
jle
data16
or
xor
mov
inc
das
stos
xor
out
sbb
and
mov
fldenv
mov
pop
dec
cmp
lret
inc
mov
imul
sbb
push
shll
dec
test
rol
mov
ja
push
push
or
jecxz
inc
xchg
dec
ds
add
and
popa
mov
inc
add
mov
or
fdivs
adc
jl
add
adc
dec
sbbl
out
test
or
fildl
ljmp
std
or
into
pop
out
testb
mov
pop
jno
es
mov
lret
mov
pop
add
insl
push
daa
lret
mov
imul
daa
cmp
clc
dec
inc
mov
movsl
inc
lods
rcrb
insl
dec
or
inc
in
shr
or
inc
sub
bound
xlat
or
idivb
pop
mov
pop
cltd
enter
outsb
ja
loop
pushf
xor
xchg
inc
pop
in
or
mov
gs
pop
fadds
mov
mov
push
bound
lods
and
xlat
xchg
sahf
mov
and
js
cmp
cli
out
orb
xchg
loop
and
cmp
jo
in
fldcw
lret
jmp
cmp
lods
sarl
es
sbb
dec
mov
movsb
test
movsl
iret
xchg
jno
mov
cwtl
int
scas
xchg
outsb
std
mov
repz
inc
test
inc
and
insb
mov
orl
scas
loop
je
cli
shl
dec
mov
xsavec
es
scas
mov
movsl
cmp
stc
aam
mov
pop
lret
xchg
ds
jns
mov
mov
ror
jo
scas
jo
pop
or
xchg
or
inc
mov
mov
pop
adc
dec
sbb
xlat
in
cmpsb
imul
mov
sub
mov
push
bound
mov
in
int
fxch
jge
mov
lods
outsl
daa
inc
mov
test
scas
ljmp
inc
mov
push
cs
push
mov
cmp
int3
stc
lret
jmp
inc
inc
scas
xor
jbe
sub
adc
enter
lahf
std
mov
std
jp
test
xlat
jno
inc
cmp
aam
inc
call
xchg
lock
sbb
int3
jo
pop
sub
stc
stos
dec
lock
cmp
dec
icebp
test
add
cwtl
jbe
dec
in
cmp
mov
xchg
mov
push
jns
and
imul
pushf
popf
fsubrp
add
movsb
repnz
pop
cmp
sbb
insb
mov
sbb
into
dec
pushf
faddl
cwtl
mov
sbb
jno
xchg
inc
and
xchg
xor
dec
orb
lods
cmc
roll
mov
dec
push
in
js
test
xchg
dec
sbb
add
test
jecxz
jecxz
jbe
push
mov
int
pop
xor
scas
inc
test
rorl
orb
int3
push
push
and
sbb
insl
jo
mov
fcoms
mov
adc
int
popa
ljmp
popa
sub
inc
in
out
xor
jecxz
jbe
jo
lahf
pop
mov
mov
ja
pop
jne
pop
inc
addl
sub
xor
xor
pusha
mov
iret
pop
cmpsl
mov
les
mov
repnz
jbe
inc
mov
in
adc
push
fiaddl
aam
rep
pop
test
or
popa
testb
xor
leave
mov
in
sbb
fcompl
xchg
lret
in
into
sub
and
add
push
sub
je
lcall
cltd
mov
aad
loop
lods
sti
ja
mov
pop
shl
lock
sbb
test
push
dec
add
inc
cwtl
cmp
addr16
call
xchg
jp
or
sbb
arpl
ss
sub
sub
fsubrl
mov
andl
xor
jns
ljmp
add
icebp
mov
movsb
shrb
push
pop
xlat
sbb
pop
mov
test
aad
adc
nop
shl
inc
add
je
test
aam
lock
or
adc
roll
jl
lods
les
jne
enter
and
jp,pt
jno
jns
sbb
mov
push
dec
lods
aaa
and
push
into
iret
fld
push
inc
pop
sti
mov
jmp
cmpsb
cmc
xchg
push
mov
jmp
jne
jecxz
aam
aas
aaa
lock
lahf
loopne
jo
xor
xchg
add
or
cmpsb
lds
test
in
movsl
js
imul
xchg
push
xor
jbe
xor
leave
or
pop
scas
mov
push
cwtl
push
mov
jecxz
push
test
pop
xchg
cmp
pusha
stos
rcll
int
xchg
pop
push
ds
insb
adc
shrb
inc
mov
out
shlb
mov
jg
cmp
sbb
test
mul
add
and
sbb
das
mov
mov
jo
fdiv
cmp
xchg
daa
popa
and
addr16
cltd
aaa
out
pop
push
inc
mov
and
mov
jne
sub
and
pop
int
aad
inc
cld
pop
clc
xor
mov
jmp
pop
in
jge
sbb
sti
hlt
movsb
jmp
dec
xor
push
fldenv
xchg
cmp
inc
xor
adc
cmpsl
pusha
repnz
cmp
test
lea
push
popf
push
shr
push
andb
pop
cmp
sbb
roll
xlat
xor
pushf
out
outsb
out
cmpsb
es
cmp
pop
frstor
loop
sbb
jge
mov
mov
ja
or
sub
sbbb
test
inc
mov
mov
jo
sbb
out
xor
pop
inc
and
test
mov
and
xchg
stos
inc
cmpsl
imul
push
xor
jns
fsubs
pushf
lods
enter
cld
push
mov
fisubrs
pop
ss
js
pop
insl
lret
test
int3
loope
jae
jecxz
add
shll
jmp
ljmp
in
mov
lret
and
mov
pop
mov
and
jp
fcoms
jle
int3
lds
cmpsl
inc
and
aaa
fs
inc
jle
jb
aam
sub
fwait
cmc
imulb
rcrb
inc
push
inc
or
adc
cmp
inc
imul
jp
cltd
rcr
pop
pusha
pop
cmp
aam
pop
push
out
adc
hlt
pusha
lock
mov
or
mov
mov
xchg
insb
subb
mov
shll
aaa
sbb
xor
mov
jb
push
test
scas
sub
or
push
out
pop
popf
shlb
stos
xchg
orb
pop
or
adc
in
lea
push
jl
std
mov
aas
ds
loop
aad
mov
mov
adc
jo
mov
lret
daa
and
jmp
inc
mov
shll
cltd
mov
mov
stc
dec
fdivr
mov
and
inc
lahf
mov
outsl
loope
dec
jge
paddw
and
push
sarb
scas
adc
cmp
fnsave
addr16
rcr
pop
aaa
fwait
adc
lcall
adc
test
ss
adc
push
sub
sub
scas
bound
in
mov
pusha
hlt
rolb
cmp
lods
pushf
jecxz
pusha
ficompl
leave
cmp
aas
pop
jp
int3
adc
ret
mov
in
icebp
and
ds
jmp
sarb
xor
pushf
fisttps
test
or
outsb
ss
mov
int
scas
lcall
loop
int
xor
stos
mov
fxch
push
sbb
repz
and
push
add
push
xlat
lea
mov
fwait
xchg
sbb
cmp
cmp
repz
cli
cmpsl
cmpsb
movsb
addr16
xchg
mov
adc
fldl
in
ds
les
outsl
xchg
addr16
xchg
cmp
xchg
fs
insb
adc
and
insl
mov
mov
mov
movsb
rclb
lds
xorb
jge
cmc
dec
aad
xor
jnp
stc
movsb
mov
and
ficoms
mov
movsb
fs
push
sbb
sarl
sbb
icebp
adcb
shl
mov
leave
in
repz
mov
in
mov
mov
dec
mov
sub
shlb
rolb
loop
sub
in
mulb
xchg
in
inc
aam
push
xchg
sbb
xchg
mov
adcl
ficomps
push
pusha
movsb
sub
and
push
add
int3
add
push
sub
sub
mov
pop
lods
jge
test
ret
adc
mov
pop
xchg
jbe
push
fidivs
xchg
pop
insb
popa
pop
xchg
pushf
add
fxch
outsb
dec
cmp
pop
shll
aaa
lcall
ss
scas
cmp
in
out
call
or
lds
xchg
shll
popf
jbe
pop
mov
shrb
enter
jnp
sbbl
aas
jmp
jnp
scas
rcr
stc
sub
push
out
ja
shlb
test
adc
aad
in
and
or
inc
xchg
idivb
jl
sbb
xor
movaps
xorb
insl
xchg
popl
add
and
inc
cmp
test
pop
out
fs
xchg
icebp
into
mov
iret
imul
loope
and
out
adc
lahf
jb
dec
ret
lret
cli
out
cmc
sub
sahf
fwait
sbb
pop
mov
mov
out
push
xor
iret
filds
dec
sub
bound
dec
dec
xor
cli
loope
mov
adc
cmc
adc
outsl
push
fdivrp
aam
loopne
mov
cmpsl
lods
sub
xchg
xchg
sub
cmp
jp
mov
mov
mov
jbe
leave
shrb
leave
lock
sbb
stc
adc
fwait
mov
idivb
test
cmp
mov
fiadds
mov
rol
cmpsb
ss
xor
fbld
test
sub
cmpsl
daa
fidivl
dec
int
xlat
xor
int3
mov
or
idivb
add
cmp
inc
or
cli
mov
aas
or
lahf
repz
stos
or
jae
adc
mov
inc
add
imul
jecxz
clc
out
lods
movsb
test
or
mov
mov
add
and
into
les
scas
mov
add
lock
jg
inc
mov
aam
push
jg
into
jb
add
in
rorb
mov
cmp
sbb
rcll
stos
xchg
xchg
cmp
xchg
neg
out
xchg
flds
cs
loopne
push
lret
or
and
dec
sbb
adc
xchg
aam
lahf
lret
pop
jnp
lea
add
pop
xor
imul
loopne
push
icebp
push
dec
pop
ljmp
jae
mov
arpl
fwait
addr16
xchg
xor
insb
lds
inc
xchg
addr16
iret
pop
cltd
mov
ds
imul
inc
mov
xchg
and
jns
pop
cmp
mov
call
sbb
xor
xor
out
stos
sarb
inc
pusha
popa
push
cmpb
ljmp
enter
dec
cmp
sub
xor
xor
movb
push
adc
addr16
cmc
mov
mov
cmpsl
mov
ss
js
cli
and
jb
push
les
addr16
xchg
loopne
sub
lahf
pop
aaa
pushf
sahf
jne
cld
add
xorb
bound
mov
aaa
aad
cli
add
out
jecxz
push
outsl
hlt
aad
mov
lea
mov
pextrw
adc
xor
es
cld
fwait
aad
sub
shlb
cmpsb
xor
dec
test
mov
push
aaa
dec
xor
sub
fsubr
push
cmpsl
iret
and
inc
xor
add
pusha
dec
push
out
daa
mov
or
fbstp
or
jnp
pop
sbb
int
mov
jp
sub
rcr
and
jb
jnp
inc
sbb
test
jne
dec
test
add
or
pop
jg
jg
mov
dec
pop
inc
push
mov
call
adc
js
mov
lahf
addr16
lahf
push
push
jp
dec
inc
jl
orl
jbe
pushl
aad
int
out
popa
jbe
dec
std
idiv
mov
inc
out
push
xor
and
mov
dec
add
push
fcompl
xor
xorl
pop
and
push
into
xor
aas
cmp
jle
mov
pop
xchg
fincstp
js
lods
call
dec
sub
sbb
cltd
sbb
outsb
pop
test
pop
inc
add
ds
fstl
xor
int
test
cmp
mov
mov
ds
pop
lea
clc
push
xchg
push
mov
insb
push
shr
mov
scas
outsl
push
cmp
jbe
rcll
xchg
pop
das
xor
jl
jge
ljmp
out
sahf
and
pusha
clc
lret
mov
sbb
sbb
jmp
push
mov
lds
fildl
or
xchg
push
loop
jl
rcll
jge
xor
inc
pushf
inc
push
xor
repz
and
push
gs
cs
xchg
sub
int
sub
xchg
xchg
xor
pop
insl
ljmp
or
or
stos
sub
pop
cmpsb
sbb
scas
daa
push
out
pop
addr16
sahf
pop
mov
sub
xchg
testb
xor
arpl
sahf
nop
pop
push
adc
pop
js
nop
stos
mulb
jl
mov
push
les
xchg
xorl
sbb
add
ljmp
xor
rcr
pop
les
enter
jle
outsb
popf
sub
mov
mov
lods
mov
nopl
stc
cli
clc
sub
and
mov
adc
add
sub
gs
repnz
or
push
cmpsl
mov
idivb
push
iret
shrl
pop
mov
adc
fwait
xlat
movsb
ds
dec
jmp
int
xchg
scas
hlt
test
pop
and
pop
dec
out
xor
mov
jbe
mov
push
sarl
jnp
and
mov
incb
mov
or
and
daa
pop
loope
inc
test
fs
inc
loope
int3
cmpsl
push
popa
mull
xor
cmpsl
mov
jns
pusha
xor
js,pn
lahf
mov
xchg
std
xor
arpl
ss
mov
add
sahf
mov
pop
add
test
push
xchg
jae
push
pusha
orl
xor
test
mov
mov
cld
dec
lods
or
mull
jmp
jl
pop
sbb
insb
cmc
fisttps
mov
cli
pop
pop
adc
mov
ss
ret
orb
mov
fucom
or
mov
dec
repz
je
lret
fs
mov
jl
sbb
ljmp
mov
mov
push
mov
imul
cli
add
sub
bound
push
inc
popf
cmc
mov
insl
cmp
dec
and
mov
in
ret
je
nop
xor
or
jo
in
scas
xchg
lret
js
sarb
aas
call
outsl
mov
out
fs
int3
out
cmp
push
popa
mov
mov
or
sub
not
je
mov
pop
nop
add
mov
jbe
sub
and
lcall
mov
xchg
pusha
bound
cmp
mov
lret
inc
shlb
mov
nop
ds
xchg
idiv
inc
jg
xor
cld
repz
jae
pushf
loop
lret
xchg
or
mov
mov
xchg
mov
sbb
out
les
dec
mov
test
mov
test
adc
push
inc
sub
jbe
icebp
inc
vpinsrw
fimuls
xchg
test
adc
add
adc
add
outsl
and
inc
mov
pop
jo
xchg
mov
in
sub
xchg
fiadds
and
addr16
mov
xor
inc
jl
xchg
push
test
push
inc
mov
repnz
adc
cmp
adc
ljmp
out
gs
pop
in
insl
xor
cmpsl
iret
inc
into
lods
shlb
cmp
pop
and
cmp
aaa
push
add
sti
fisttpl
out
flds
push
scas
pop
mov
and
loopne
shlb
out
xor
out
inc
aas
mov
incl
adc
dec
jge
jg
jns
mov
int3
or
and
ds
and
mov
bound
cmp
sub
push
jo
or
fldcw
insl
add
lock
push
adc
cmp
xor
aad
push
fisttps
mov
lret
shlb
adc
std
inc
jle
and
pop
call
andl
aad
shlb
cmp
push
push
leave
loopne
sub
lea
cmp
int3
or
hlt
sub
jo
and
add
inc
xorb
sbb
mov
je
scas
inc
repnz
and
or
test
xchg
jecxz
or
jecxz
sub
mov
pop
jp
or
push
mov
fwait
push
ret
sub
les
rep
rcrb
addr16
push
lret
lea
jmp
sub
push
pop
push
out
dec
insb
leave
cmpsb
xor
lea
inc
in
sub
sub
dec
stos
pusha
loop
inc
pop
call
popl
inc
xor
xor
jmp
das
jmp
insb
test
sbb
and
xchg
adc
bound
scas
sub
out
cmpsb
sbb
push
lock
jno
movsb
cmpsl
cmpsb
scas
sbb
mov
loop
subb
mov
shlb
lea
push
mov
pop
lock
fs
add
inc
mov
xor
mull
test
push
fcoml
fisttpl
mov
mov
pop
or
mov
xchg
jge
add
and
out
pop
push
out
mov
push
out
cmp
sbb
addr16
test
mov
mov
jp
xchg
jl
clc
jns
lret
push
sti
gs
push
xchg
mov
in
scas
repnz
pop
lock
jmp
adc
into
xlat
sbb
fisttps
mov
je
jge
repnz
rorl
cmp
subb
repnz
aam
and
int
je
stc
cmp
addr16
pop
and
inc
addr16
sbb
sbb
xchg
xor
xchg
or
push
push
popf
mov
push
gs
mov
add
imul
mov
inc
push
push
loope
fnsave
ja,pt
sbb
push
lods
out
sub
inc
adc
aam
inc
mul
dec
sbbb
sbb
or
insl
scas
pop
mov
aam
xor
mov
subl
aad
lock
adc
mov
cmp
movsl
pop
jns
in
ds
dec
ja
out
xchg
stos
lock
daa
insl
aad
out
enter
das
and
cmp
inc
fcomps
or
pushf
popa
and
mov
pop
sub
jg
ror
xchg
lock
icebp
adc
or
push
fistl
fcmovne
mov
xchg
mov
xor
cmc
inc
sub
pusha
mov
sbb
inc
inc
sbb
push
and
xchg
xchg
ljmp
jo
dec
adc
lods
cmpsb
dec
ds
scas
xor
fnstenv
out
sub
pop
gs
mov
mov
icebp
stc
hlt
leave
es
aam
sahf
mov
adc
stos
gs
insl
inc
jecxz
pusha
fprem
ljmp
into
movsb
mov
arpl
imul
jb
ja
jns
sti
xor
lret
shlb
jmp
adc
repz
shr
shll
je
sub
jb
jl
pusha
pop
cs
enter
ljmp
pop
je
mov
cmp
cld
jo
mov
in
sub
or
es
andl
gs
aas
jl
adc
lods
cmpsl
es
test
add
pop
cli
inc
mov
inc
arpl
std
lds
cmpsl
inc
inc
andb
mov
mov
pop
int3
push
es
movsl
mov
and
sti
xchg
add
cmpsb
mov
ret
or
aam
test
push
xchg
mov
push
test
sub
pop
xlat
push
xchg
rclb
push
sub
enter
pop
int
mov
lret
testb
dec
fs
xchg
add
push
xor
fs
loope
and
fdivrl
mov
push
xchg
out
adc
sbb
or
pop
imull
loopne
mov
mov
xchg
jnp
in
sti
xor
dec
fidivs
cmp
add
xor
cmc
lea
adc
jge
movsb
add
pop
fptan
mov
je
dec
in
push
lea
ficoml
lahf
popa
cwtl
shrb
jae
pop
pop
push
pushl
jnp
aam
ud1
adc
movsl
lods
pop
pop
add
dec
dec
clc
push
or
int
movsb
bnd
cwtl
cli
inc
or
imul
shrl
adc
jle
scas
cmpl
shrl
testl
cwtl
push
push
es
add
push
mov
inc
or
inc
push
inc
or
inc
test
fdivrs
jecxz
arpl
jle
stos
lcall
mov
jp
hlt
jp
fstp
fcoms
dec
xchg
dec
jle
pop
jmp
loopne
int3
pop
gs
test
push
out
xchg
shrb
test
jmp
lahf
pop
jecxz
test
jb
pop
fisubrs
fdivl
sub
test
ss
inc
jp
imul
jge
lods
fwait
loop
ret
fcoms
imul
cli
xchg
cmp
adc
xor
cli
xchg
mov
stos
cld
ljmp
cmp
jge
jecxz
mov
notb
jmp
aad
lcall
inc
jns
int3
inc
or
addr16
sahf
jmp
je
fsubrs
mov
cmpsl
int
addr16
mov
jge
xor
push
lea
sub
aas
adc
or
xchg
je
ljmp
call
inc
push
aas
sub
ror
xor
push
mov
subl
stos
pushf
imul
mov
iret
pop
push
jns
push
lds
push
shll
fldl
sub
adc
jp
xchg
mov
aam
xchg
inc
icebp
dec
inc
mov
inc
pop
dec
fucomi
int
cmp
imul
es
xor
xchg
lea
sti
outsl
xor
jmp
enter
inc
or
out
xchg
hlt
int3
movsl
push
inc
pop
xor
xchg
cmp
sbb
add
andb
push
jecxz
pop
push
mov
bound
cs
insb
je
mov
lret
fisubrs
mov
imul
xlat
clc
ds
push
das
xor
in
push
lret
cmc
stos
push
notb
mov
in
xor
aad
push
sbb
mov
inc
scas
mov
dec
addr16
jp
pop
lods
mov
push
inc
pop
insb
mov
stc
std
test
jmp
mov
and
xorl
fdivs
pop
push
insl
cmpsl
xorl
mov
test
out
and
aad
pop
std
xchg
daa
negb
cltd
into
std
adc
and
ss
xor
jle
mov
pop
xlat
lds
inc
dec
mov
adc
xchg
in
xor
push
cmp
jns
es
movsb
jecxz
hlt
push
leave
or
fstps
dec
jl
stos
movl
xor
stos
xchg
push
lods
das
js
aas
mov
cmp
or
lods
mov
pushf
mov
push
sahf
ret
push
mov
add
xchg
fiadds
jge
ret
sbb
daa
pop
xor
clc
fucomip
jne
dec
or
push
shrb
push
pusha
into
sti
ret
ret
or
adc
cmpb
push
in
std
dec
data16
stc
lahf
jmp
xchg
cmp
rorb
inc
shll
aam
aas
xchg
stc
jmp
lret
lock
lret
or
iret
and
icebp
cmp
dec
ss
gs
loop
dec
fcomps
hlt
add
jmp
cmp
testl
sub
pop
dec
cmp
jmp
mov
sub
jb
in
push
mov
lcall
inc
and
rcl
pop
das
pop
add
popf
dec
test
push
mov
mov
push
or
jae
dec
dec
not
mov
negl
int
icebp
mov
push
fnstsw
xor
fwait
test
xchg
mov
sub
lea
sub
lcall
nop
pusha
inc
mov
je
outsl
inc
mov
loopne
xchg
lods
mov
xchg
test
loopne
lods
leave
das
jo
stos
les
dec
loop
xchg
addr16
dec
jae
xor
jle
push
fisubrl
dec
jne
ffreep
mov
rolb
xor
xor
adc
pusha
adc
xchg
pop
pop
ja
out
movsl
xchg
addr16
clc
loope
int3
inc
into
cli
out
add
pop
loop
dec
mov
jbe
fwait
and
test
mov
ret
or
push
daa
in
cmp
jle
mov
mov
hlt
cmp
add
das
sahf
lods
adc
inc
push
cmp
sub
push
push
adc
imul
cmp
mov
jns
stos
imul
rolb
xor
orb
aam
cli
insl
rorb
in
loope
jo
lock
jnp
and
xorb
cld
or
cmp
loop
and
ret
or
cs
call
cld
cmc
lds
stc
jnp
int3
loop
dec
xchg
das
sbb
ret
fnstenv
bnd
pop
das
movsb
dec
dec
jo
xchg
xor
xorl
lcall
xor
mov
fdivrl
loope
lods
out
ljmp
or
mov
out
push
jmp
adc
add
fcomp
jo
pop
inc
mov
mov
test
fidivrl
sbb
int
fisttpll
inc
movsb
mov
add
push
iret
cmp
out
xorl
mov
adc
add
mov
stos
add
lret
adc
loope
sub
or
aaa
and
mov
pusha
in
arpl
cli
or
and
sbb
cmp
inc
popa
ss
stc
ss
mov
pop
mov
test
jb
out
xchg
lcall
jno
lods
pop
xor
leave
mov
les
xchg
lret
mov
lods
push
nop
sub
push
pop
cmp
mov
mov
jmp
push
in
ja
cmp
addr16
xchg
nop
test
shrb
repz
cltd
ss
lret
rcrb
insb
aam
inc
test
cld
mov
mulb
int3
or
out
push
and
jg
or
outsb
mov
or
jle
iret
xchg
fwait
xchg
xchg
jo
hlt
inc
enter
mov
gs
or
shrl
rcl
xchg
cwtl
jg
mov
xchg
mov
sub
cmp
mov
rorl
pop
enter
loopne
jnp
sub
inc
sbb
add
testl
stos
clc
jmp
iret
sbb
dec
cmpsb
int3
mov
mov
js
aaa
jns
loop
inc
popa
ss
flds
movsl
xchg
pop
fs
cmp
xchg
mov
fwait
lods
mov
ja
aam
orb
jb
lds
das
lds
icebp
add
lea
les
jp
sbb
insl
xchg
xchg
mov
xor
push
shlb
test
dec
cmp
cmp
fists
lret
mov
dec
stc
mov
cmpsb
push
inc
out
cmp
std
imul
loop
mov
mov
sbb
adcb
stos
push
pop
call
push
fdivp
pushl
clc
or
sub
loop
xor
hlt
push
xor
jo
mov
in
and
adc
movsb
js
cld
sbb
subb
es
movb
ds
js
mov
addr16
push
test
xchg
push
jae
insl
fwait
push
addr16
mull
vcvtdq2ps
jge
cmc
adc
push
mov
iret
icebp
and
and
mov
in
fbld
pop
mov
add
adcl
movsl
loopne
sarb
nop
movsl
and
pop
frstor
or
call
movsl
cltd
jne
mov
insb
mov
sahf
lock
and
call
xor
inc
push
pop
cmpb
cmpsl
cld
jl
pop
dec
mov
pop
fucomp
dec
push
sbb
jge
push
adc
pusha
daa
push
pop
xor
bound
popf
xchg
int
sbb
mov
or
cmp
xchg
testl
hlt
decb
pop
xor
sbb
xchg
pop
push
out
sub
cmp
xorb
aas
aaa
lcall
test
pop
cwtl
int3
les
psrld
lods
inc
and
jg
bound
test
aas
adc
xchg
fldenv
mov
push
push
push
mov
bnd
in
pop
lahf
cli
movsl
mov
lret
cmp
lahf
loope
mov
in
pop
inc
in
dec
fwait
jns
lahf
or
pop
aas
adc
mov
pushl
inc
jp
aas
or
scas
push
cld
jno
fildll
and
icebp
push
hlt
sub
push
push
push
nop
lock
test
movsb
mov
sub
leave
inc
xor
data16
xor
and
sbb
fbld
add
jno
sbb
into
and
jl
rolb
and
repnz
mov
mov
mov
stos
push
cmp
xchg
mov
push
sbb
sub
inc
rolb
cmp
rcr
fldt
stos
fstpt
xchg
jge
test
fstl
rcll
stos
outsl
das
pop
mov
lcall
xchg
and
push
jae
clc
cli
add
loopne
xor
cmpsb
pop
dec
push
test
fdivr
hlt
lods
jb
mov
mov
push
and
push
pop
mov
xor
xchg
and
lret
jle
cmp
dec
les
jno
in
mov
xchg
pop
jo
out
adc
push
pop
add
push
mov
imul
xchg
popf
or
sarb
es
bound
ljmp
pop
dec
or
mov
dec
psubusb
and
in
mov
mov
jl
push
sub
add
loop
or
jne
mov
lock
jl
clc
cmp
pop
shlb
cmp
cltd
ret
imull
shlb
aas
mov
repz
lods
sti
mov
xor
mov
into
rol
pop
xlat
pop
adc
adc
in
pop
ret
repz
sbbl
lods
xor
xor
push
lods
pop
pop
in
sub
hlt
imul
loop
push
dec
mov
pushf
nop
fdivrs
xor
add
inc
cli
lock
add
inc
fdivrl
test
stos
pop
mov
jae
sbb
faddl
ss
arpl
dec
jno
mov
rdtsc
inc
ret
adc
cmp
sbb
pop
jne
jb
daa
push
adc
jge
mov
pusha
call
lods
mov
push
cltd
ret
popf
popw
gs
xlat
ss
cmp
fs
icebp
fcmovne
xchg
mov
push
pop
xchg
int
and
add
orb
push
dec
loope
xor
push
sub
push
push
lahf
sbb
or
xchg
sbb
aad
add
rcrl
xchg
pushf
jmp
push
lods
adc
insl
pop
std
mov
pop
addb
or
lods
add
pop
and
add
push
jnp
movsb
ja
jmp
pushf
mov
mov
jp
push
outsl
mov
daa
fmulp
clc
hlt
int
rol
scas
sahf
inc
loop
jp
xchg
aas
sti
movsb
pop
xor
pop
gs
jmp
movsl
and
sbb
idivb
imul
sbb
cmp
mov
repz
jo
jp
pop
movsb
mov
xchg
rcll
pop
pushf
or
stos
stos
sti
jp
in
xchg
sbb
fldl
popa
lods
cli
jge
gs
shlb
mov
jecxz
sbb
pop
pop
ja
xchg
in
testb
jle
not
push
mov
adc
mov
mov
in
out
andl
dec
or
leave
mov
lock
ljmp
jae
adc
pushf
pop
mov
xchg
sarb
lret
jns
xchg
ss
mov
testb
lods
rcrl
es
clc
andb
cmp
inc
add
in
or
fsubr
ror
fs
fs
add
andl
add
arpl
push
sbb
pop
push
xor
fsts
dec
fimull
lahf
mov
add
mov
clc
pop
test
xchg
in
gs
jp
test
outsl
mov
mov
xchg
pop
lret
enter
push
fdivl
pushw
mov
ret
rcrb
jmp
push
xor
ss
and
xor
fistpl
xor
in
cli
aam
ret
imul
filds
inc
mov
pop
inc
dec
flds
xchg
stos
stos
mov
xlat
xchg
push
or
pop
sub
or
xor
popf
xor
or
sub
jne
cmp
clc
out
shll
in
xor
xchg
aaa
xchg
cmp
jge
popf
rorl
cmc
xchg
ljmp
inc
stc
pop
mov
dec
jnp
push
insl
aaa
out
call
mov
adc
clc
push
inc
dec
jl
test
sbb
pusha
sbb
inc
insb
and
mov
mov
jns
push
jge
addr16
or
and
test
and
inc
lahf
out
subb
stos
sub
data16
imul
rorl
add
in
adc
icebp
in
leave
pop
enter
sub
arpl
jmp
data16
and
or
fcoml
aad
call
jge
sub
aaa
push
mov
stos
jbe
xchg
outsl
lahf
je
mov
and
mov
xchg
jmp
je
xor
popf
ds
and
lock
sub
add
es
movsb
or
shll
gs
es
out
sub
sahf
lret
mov
ret
aad
cmp
xor
add
jl
loopne
popa
mov
jne
nop
pop
les
pop
sub
xor
jmp
xchg
mov
pop
imul
repz
push
dec
mov
adc
ret
nop
xchg
or
and
jecxz
repnz
xorl
dec
lahf
mov
mov
xchg
imul
outsb
jns
mov
or
push
mov
lret
test
in
jnp
lret
cmpsb
sub
or
sbbl
pop
fists
dec
lcall
bound
push
cmp
sub
mov
adc
lock
sub
je
xchg
mov
and
dec
out
fldz
ror
xor
lea
pop
popf
xor
sub
lea
inc
or
clc
test
imul
outsl
sbb
je
cs
out
aam
jnp
and
ret
aas
add
xchg
int
and
add
pop
aaa
insl
scas
nop
inc
sub
sub
push
mov
insb
int
bnd
sub
cs
sbb
loope
push
dec
aam
rorb
jno
leave
sbb
fisttps
jmp
jo
pop
repz
sahf
or
cmp
imul
xlat
das
inc
jnp
dec
mov
fldt
inc
imull
gs
into
loop
jo
pop
add
lea
mov
xchg
mov
mov
mov
out
jecxz
fildl
insl
rorl
inc
dec
jge
fs
scas
adc
push
mov
pop
mov
xchg
mov
shlb
divl
daa
xchg
mov
vaddsd
adc
mov
rcl
pusha
jmp
addl
sbbb
xlat
mov
adc
adc
mov
or
push
mov
cld
std
inc
sbb
lods
negb
inc
xchg
imul
fs
dec
ss
adc
dec
popf
roll
dec
jecxz
mov
aad
mov
jl
pop
into
in
out
cmp
daa
or
loopne
fldt
sar
cmp
out
scas
pop
add
mov
stos
push
sbb
icebp
lahf
fisttpl
cmpsb
add
xchg
jne
push
or
je
xchg
adc
adcb
std
dec
adc
add
shlb
xchg
mov
lods
les
dec
roll
add
mov
lcall
sbb
jg
jo
mov
jp
or
mov
dec
jo
and
dec
or
je
add
pop
hlt
stos
lret
cltd
cs
popf
xchg
pop
xchg
xor
cmp
xor
mov
cmpsb
std
push
cmp
cld
lahf
fwait
mov
dec
stc
xchg
mov
stos
addr16
repz
in
inc
pop
adcl
daa
ss
xor
cld
aas
movsl
mov
mov
fadd
bound
insl
cmc
xor
or
add
jnp
and
dec
adc
inc
clc
inc
bound
cmp
shl
shrl
iret
xchg
mov
mov
add
mov
sub
mov
ja
in
push
sbb
xlat
dec
xchg
insb
mov
insl
sbb
jge
jnp
dec
iret
test
mov
lea
fdivr
cmp
movsl
adc
shll
lahf
sbbb
and
push
data16
stc
movsb
push
fnstcw
js
push
xchg
jo
sub
mov
sbb
andl
mov
outsl
ljmp
mov
subl
lahf
mov
cwtl
jl
jne
push
sub
push
dec
stos
clc
into
mov
mov
and
mov
in
popa
pop
adc
popf
gs
and
cmpsb
imul
adc
fisttpl
daa
mov
mov
fistl
push
dec
mov
and
pop
stos
ja
push
rcrl
dec
mov
jo
hlt
out
xor
lock
lret
mov
push
loopne
mov
mov
les
jb
pop
popa
lods
imul
bound
sbb
add
out
jge
mov
or
jp
inc
lret
dec
mov
lds
push
inc
ja
loope
cs
cmpsb
cli
test
dec
dec
adc
mov
repnz
call
shrl
cmp
cmp
insb
xchg
test
loopne
cltd
repz
push
sbb
jb
test
data16
cwtl
fs
dec
or
mov
sar
stos
es
push
fimuls
ret
and
pop
push
jb
sbb
mov
or
jecxz
jge
or
mov
and
mov
mov
fiaddl
jge
dec
dec
or
push
jno
in
cltd
adc
loope
movsb
mov
dec
das
sub
dec
adc
fldt
and
and
pop
mov
fsubrl
inc
addb
xchg
pushf
imul
sub
jno
aaa
rcll
insl
cld
add
mov
mov
inc
mov
mov
add
push
xchg
xchg
inc
xchg
mov
je
dec
cmpl
cmp
xchg
pushf
icebp
cmc
push
fdivrl
stos
xor
xchg
jne
std
cmpsb
mov
lds
pop
mov
cld
push
hlt
mov
push
sbb
fnstsw
bound
out
push
insb
inc
rorb
cld
mov
xchg
std
in
sub
dec
scas
stc
popa
mov
xor
shrl
jns
dec
xchg
jae
cmp
sti
retw
popa
je
or
insl
inc
movsl
mov
dec
or
pusha
popf
dec
lcall
jns
jne
popa
fldt
or
pop
push
push
xchg
fnstenv
rcl
aad
dec
loope
mov
mov
je
gs
push
sub
sbb
push
jno
cmp
adc
and
data16
jp
push
shrl
jmp
mov
lcall
out
fisttpll
jne
pop
adc
mov
repnz
xchg
int
fcoms
ficoml
pushl
pop
mov
rorl
pop
or
repz
outsb
fsubr
clc
mov
push
pop
cmp
lret
clc
mov
sub
jbe
mov
ljmp
xchg
add
dec
add
hlt
jg
out
pmulhw
popf
pop
sub
outsl
cmpsb
dec
add
pop
xor
imul
lds
sbb
lea
add
mov
nop
roll
enter
fcoms
cmp
fs
or
xchg
or
pop
cmp
jp
addr16
gs
pop
bound
mov
jmp
out
nop
sbb
insl
lods
lods
dec
ja
popa
adc
push
sarb
cwtl
mov
pop
push
mov
add
addr16
jb
or
push
push
inc
pop
pop
mov
sbb
and
add
push
jle
xchg
loopne
es
fisttps
js
lock
negb
push
ljmp
int3
pop
push
mov
iret
dec
pop
mov
ret
in
and
add
push
repnz
sti
addl
js
daa
mov
jecxz
jecxz
cltd
les
repz
adc
inc
mov
cmp
pop
mov
aam
in
lock
hlt
adc
movsb
or
ljmp
pusha
xchg
cld
fs
ljmp
fnsave
dec
inc
sbb
mov
sub
popa
fisubrl
cmpsl
and
imul
cmpsl
pop
movlps
push
jo
mov
iret
dec
outsb
bound
pop
push
rcr
fwait
push
es
sub
pop
aad
mov
cmpsb
jecxz
mov
daa
jnp
xchg
push
cmp
int
push
out
push
inc
pop
sbb
ficompl
dec
mov
fisttpll
jge
and
inc
aas
shll
dec
or
add
popf
dec
shll
add
ret
enter
jno
sub
or
addr16
call
sahf
fcmovbe
popf
loop
jne
sbb
es
pushf
mov
iret
imul
orb
hlt
cld
mov
pop
or
notl
cmpsb
adc
xor
mov
mov
xor
sbb
mov
rcrl
cmpsb
cmpl
cmpsl
jecxz
mov
ja
data16
mov
inc
sbb
xchg
ret
jmp
lods
jmp
stos
jecxz
jle
pop
pop
sbb
aad
into
jecxz
push
xor
daa
ja
pop
sub
adc
push
cmp
sub
loope
sbb
mov
adc
push
jnp
or
gs
dec
pop
int
add
in
push
xor
fidivs
mov
clc
jnp
push
pop
mov
scas
inc
or
and
or
fnsetpm(287
rclb
loopne
jmp
sahf
cmp
and
sbb
enter
xchg
sbb
shld
fisttpl
mov
jmp
nop
iret
cmpsb
test
scas
in
cld
fdivp
dec
push
pop
ljmp
mov
cmp
mov
mov
mov
gs
into
push
and
inc
mov
mov
sbb
jb
dec
aas
call
imul
insb
sub
mov
push
adc
loop
xor
mov
bound
frstor
sar
sbb
loope
add
add
push
lods
arpl
cs
xchg
add
xchg
or
pop
xor
mov
pop
push
dec
sub
rcl
jns
mov
insl
packssdw
or
out
and
jo
or
rcr
frstor
jne
mov
dec
push
mov
mov
hlt
fnstsw
sub
into
and
dec
xchg
jbe
call
inc
call
push
sbbl
shrl
jge
mov
mov
movsb
mov
shll
inc
sbb
mov
imul
loope
add
test
and
jl
pop
frstor
jmp
jbe
cli
out
pop
pop
pushl
rclb
out
stos
dec
push
mov
adc
mov
mov
jo
sub
sbb
adc
xchg
push
or
sub
loop
lret
fidivs
rolb
and
and
push
mov
aad
mov
adc
sarl
mov
sub
jge
rcrb
scas
xor
xchg
loope
in
or
push
pop
fwait
pop
addb
imul
and
push
les
add
sub
xchg
lock
push
mov
inc
pop
pop
jo
and
insl
loop
std
mov
xor
sbbl
dec
lods
inc
movsl
outsb
sbbl
je
in
sbb
bound
dec
or
lods
push
inc
or
mov
pusha
cs
and
jno
mov
mov
arpl
xorl
mov
dec
xchg
insl
cmp
aaa
dec
ret
jns
movzbl
fwait
mov
jae
subl
cmp
stos
dec
inc
in
jno
fistpl
lock
inc
pop
pop
mov
shlb
xor
add
push
imul
aad
push
xor
cli
ror
cmp
push
xor
mov
out
rolb
sub
sbb
or
jnp
and
in
xor
sbb
int
push
bound
js
sub
faddp
or
sbb
dec
out
fnsave
push
mov
popa
fcmovbe
push
xor
sub
shll
cmp
mov
jecxz
shrl
push
mov
aam
xchg
cmp
xchg
es
add
rcrb
js
rcll
into
pop
cmp
xchg
aad
in
lock
mov
test
mov
jbe
mov
test
scas
lds
lcall
aam
pop
rol
aam
add
fstl
fistpll
push
mov
daa
int3
mov
jae
sbb
inc
sarb
and
imul
sub
dec
scas
xor
das
xor
xchg
out
push
mov
jne
mov
insb
push
adc
inc
ds
imul
in
aaa
mov
jne
stos
cmp
fnclex
push
pop
sbb
pop
hlt
pop
and
mulb
or
dec
negl
std
les
aaa
nop
gs
mov
psrlw
pop
nop
outsb
jno
mov
adc
cmpsb
push
outsb
mov
movl
outsb
pop
sub
repz
je
push
iret
hlt
adc
sahf
dec
push
daa
jb
or
jle
sahf
xchg
or
add
lret
enter
pop
dec
repnz
bound
adc
mov
dec
mov
xchg
fsubrl
daa
cld
sub
push
pop
sub
arpl
mov
push
fsubrs
push
push
dec
mov
pop
aaa
out
sbb
lahf
repz
and
mov
push
and
cmpsl
rcr
dec
js
or
movsl
jb
das
mov
xlat
fistpl
nop
ds
lds
mov
es
sti
mov
jo
fstps
fldenv
dec
pop
push
sub
ss
adc
lret
ljmp
jle
sub
pop
cmp
dec
jl
xor
sbb
xchg
push
mov
push
xor
gs
je
fucomi
pop
or
sbb
cwtl
pop
mov
pop
je
jl
int3
xchg
testb
stos
lock
mov
jb
sti
fs
ja
das
pop
leave
xchg
clc
sbb
aaa
test
hlt
xchg
lret
jns
repnz
aam
jge
leave
insl
pop
xchg
mov
inc
hlt
stc
fldt
stos
call
ds
mov
fcmovnu
mov
xchg
shlb
push
das
and
push
xchg
sub
imul
xor
mov
pop
in
test
sbb
dec
and
mov
cmp
sub
push
cmpb
loope
fdivrp
pop
mov
mulb
mov
mov
mov
rorl
inc
mov
mov
fistpl
roll
stos
popa
xchg
or
mov
inc
and
mov
fldz
mov
push
in
into
mov
or
mov
lahf
add
pop
inc
loop
mov
xchg
outsl
cmpsl
or
sti
push
adc
mov
push
in
clc
mov
pop
mov
mov
idivb
int3
in
mov
divb
inc
mov
mov
or
arpl
sbb
lods
dec
inc
test
cmp
mov
add
pop
push
adcl
pop
cmpsl
lods
cmp
mov
dec
push
pop
outsl
pushf
subl
scas
inc
sbb
shrb
ror
or
shr
lods
dec
push
nop
rorb
jno
andl
repz
mov
cmp
mov
popf
inc
xor
xor
pop
cmp
fbstp
lods
js
clc
adc
xchg
stos
inc
push
jno
lret
jge
sahf
incl
push
test
aas
xor
loopne
fwait
sub
mov
fcomps
shlb
adc
xor
dec
fiaddl
push
lea
int3
pop
testb
ja
orb
xchg
add
arpl
sarl
dec
xor
movsb
in
insb
xlat
scas
add
nop
clc
inc
dec
je
call
sbb
ret
xor
jg
adc
jne
inc
movsb
js
xor
mov
mov
push
pmaddwd
inc
insl
xchg
xor
sbb
loop
les
push
pop
and
out
js
scas
test
jmp
loop
sub
ljmp
aaa
xchg
adc
aam
xchg
test
or
xorb
inc
imul
jns
jmp
iret
xor
icebp
test
pop
pusha
ds
mov
xor
dec
es
jmp
pushf
out
sub
in
fdivrs
loope
jb
rolb
or
mov
loop
mov
push
sub
cmp
daa
clc
sahf
dec
xor
pop
mov
adc
add
imul
xchg
in
adc
or
adc
iret
and
sbb
getsec
xchg
push
inc
sbb
cmp
push
or
and
xlat
ja
outsl
lret
leave
mov
lds
and
sub
dec
loope
rorb
add
arpl
and
les
dec
scas
cmp
shlb
movsl
push
push
aas
loopne
sbb
push
xor
pop
lret
push
fstpl
movb
ficomps
xor
out
add
cmp
popf
roll
xlat
and
add
sbb
cmp
mov
cs
jne
cwtl
dec
rclb
insb
push
xor
lds
push
idivb
pop
repz
or
or
out
mov
test
mov
mov
sti
insb
in
outsl
xor
jb
into
lds
shr
dec
and
jg
or
and
pop
mov
adc
dec
mov
sbb
adc
push
hlt
outsl
or
jns
dec
stc
push
sar
xor
mov
daa
movsb
rorb
pop
stc
faddl
call
cmp
sarl
mov
stos
enter
mov
or
dec
sub
cmp
test
adc
pop
pop
sub
in
out
and
mov
xor
shll
rclb
scas
ret
lahf
and
adc
inc
adc
divl
jno
jne
gs
arpl
pop
push
adc
jl
sbb
cmp
cmp
cmpsl
addr16
fnstcw
xor
sub
nop
adc
bound
inc
insb
pop
mov
jno
or
jl
jae
dec
or
fadd
lock
je
and
adc
punpckhdq
push
push
and
stos
je
pop
pop
inc
leave
test
clc
movsl
inc
xchg
data16
xor
xchg
cmc
jp
adc
or
test
lcall
dec
xchg
or
shrl
push
lcall
add
xchg
xor
or
xor
popa
sub
cmpsb
dec
pop
in
adc
cmp
add
pop
enter
in
hlt
pop
ret
pop
pop
xor
lea
sub
pop
jne
cld
mov
cmp
sarb
roll
lret
imul
in
aad
and
sbb
jle
dec
cmc
xlat
cltd
jne
inc
mov
arpl
push
pop
sbb
or
loop
sub
nop
sbb
pop
fwait
jbe
out
xchg
cmpsb
jnp
xchg
mov
xchg
mov
roll
stos
jns
int
test
jmp
cmp
sbb
out
callw
jb
cmp
xchg
ja
sbb
xlat
ret
ja
out
inc
jno
mov
movsl
idivb
dec
inc
in
push
data16
mov
roll
daa
sbb
divl
mov
lret
adc
inc
inc
cmc
loope
dec
test
rcl
inc
dec
cmp
mov
xor
mov
mov
loope
push
test
mov
push
lods
repnz
sbb
lods
jmp
popa
jp
in
lahf
data16
dec
jo
hlt
mov
ljmp
rep
inc
jg
cli
adc
inc
xchg
xchg
shl
inc
xchg
nop
mov
mov
mov
push
sbb
mov
movsb
cmp
fildl
lods
fimuls
fs
loop
imul
cmp
push
mov
aas
lock
cmp
fisttpl
cmp
das
out
mov
adcl
lods
cmp
pop
adc
inc
scas
aas
fnstcw
add
fisttpl
jle
jae
mov
icebp
push
data16
push
aam
rolb
mov
mov
fldenv
xchg
jle
xlat
push
hlt
fsubl
lea
fmuls
out
sbb
jp,pt
js
push
push
inc
push
inc
lret
sub
mov
movsl
push
aam
cmp
mov
xchg
imul
add
test
sbb
enter
mov
arpl
jns
dec
gs
add
int
push
ret
in
jl
shrb
aad
iret
push
movsb
outsb
enter
dec
scas
fnsave
jne
lods
leave
div
mov
in
push
int
in
mov
fcomps
popa
pop
mov
test
inc
lcall
scas
cltd
movsl
jo
int3
pusha
dec
fnstsw
mov
sub
mov
bound
xchg
sub
and
loope
popa
lea
add
jbe
jle
ss
push
fstps
jo
bound
pop
cmp
test
addr16
out
hlt
das
imul
std
push
mov
setnp
sub
mov
dec
and
lret
shlb
scas
rcll
mov
push
pop
push
pop
fdiv
lock
add
push
inc
lods
ljmp
int3
mov
test
inc
add
incb
inc
in
call
sub
or
lock
hlt
sbb
pop
push
xchg
or
movsb
xor
pop
jo
mov
jge
dec
out
into
mov
sbb
pop
inc
stos
je
sbb
sbb
mov
inc
adc
push
ja
ror
jecxz
xor
add
sbb
fistpll
xor
jne
sahf
rorb
lods
jae
scas
sub
cmp
cltd
rorb
mov
inc
mov
cmp
mov
stc
sub
nop
call
mov
xchg
cmp
add
mov
int
leave
xor
js
pop
fwait
jmp
and
psrlw
popf
or
or
icebp
mov
sbb
cmp
xor
idivl
psubb
mov
pusha
cld
and
out
imul
jmp
sarb
les
aas
je
cmp
mov
push
gs
xchg
cmp
pop
pushf
jp
or
imul
ja
xchg
inc
push
call
inc
mov
jne
dec
add
clc
mov
adc
dec
add
inc
mov
sub
push
rorb
sbb
cltd
leave
push
inc
cltd
inc
inc
jae
cmp
mov
je
add
addb
xchg
and
sub
push
mov
sub
mov
popa
push
xchg
pop
mov
adc
jmp
cmpsl
add
icebp
addb
jmp
xchg
icebp
or
inc
loopne
jge
jecxz
xchg
mov
enter
add
cmp
or
pop
cmp
pop
push
cmpb
inc
dec
out
dec
lock
stc
inc
ret
aas
inc
mov
stc
leave
cltd
push
sub
cltd
inc
mov
mov
lahf
xchg
fnstsw
mov
stos
push
mov
fsubrl
and
and
fdivr
je
popf
cmp
ja
arpl
fwait
popf
aam
adc
pop
stos
movsl
jecxz
outsl
sti
dec
shlb
aaa
xchg
mov
in
scas
jecxz
fs
pusha
dec
adc
jnp
xchg
scas
dec
std
dec
adc
test
cs
xchg
pop
aaa
out
inc
and
stos
pop
jecxz
sub
or
mov
add
push
out
lods
push
inc
imull
cmp
aaa
cmp
cmp
addr16
mov
cmp
fcmovnu
pop
pop
movsb
dec
in
lods
enter
mov
test
sbb
adc
flds
incb
mov
push
adc
test
inc
adc
test
std
js
lret
pop
js
xlat
mov
jl
into
and
xchg
frstor
and
dec
je
sub
int3
mov
and
pop
pop
jns
fs
and
pop
pop
lret
notb
sub
jge
insb
adc
jle
push
pop
mov
popa
scas
cmpl
sub
jbe
pop
cmpsb
jp
call
rcr
popa
ret
in
inc
mov
ror
mov
arpl
mov
nop
xchg
je
leave
cmp
sbb
clc
or
lock
cmpsl
xchg
lock
pop
xchg
or
push
ds
bound
and
jbe
mov
leave
mov
lods
outsl
and
mov
test
dec
arpl
test
mov
push
lods
cmp
scas
dec
dec
push
push
adc
stc
sub
sti
bound
sti
filds
sbb
cld
fiaddl
pop
mov
sbb
xchg
std
test
push
sbb
add
inc
xchg
hlt
push
push
loopne
out
loop
add
dec
sub
or
stos
out
dec
lds
inc
jg
mov
bound
popf
in
pop
in
add
jne
adc
imul
cmpl
mov
pop
or
shlb
adc
mov
jnp
and
pop
ja
in
mov
adc
mov
int3
jne
xchg
sahf
jle
in
lock
les
int3
fwait
xchg
add
cld
mov
mov
and
dec
sahf
xor
dec
mov
pop
mov
inc
scas
rcrb
lea
adc
adc
daa
push
adc
xchg
pop
andl
cmc
xchg
inc
mov
mov
fmull
into
inc
out
dec
sub
sbb
sub
js
lahf
lahf
in
xlat
jmp
jb
jmp
inc
loope
dec
xlat
cmp
clc
inc
mov
orb
pusha
fcompl
sbb
lock
in
sub
test
mov
sbb
push
popa
sbb
add
mov
aaa
inc
pop
aas
call
sub
clc
mov
inc
lcall
repz
out
dec
sti
mov
pop
inc
out
dec
mov
sbb
push
hlt
jns
stos
jne
and
mov
scas
rcl
fsubrl
adc
adc
cwtl
mov
out
xor
xor
sub
stos
jecxz
xchg
mov
and
stos
fs
scas
mov
jl
dec
repz
lret
sti
or
cmp
sub
pop
mov
mov
fcmovnbe
push
jb
dec
enter
aam
cmc
es
xchg
ret
inc
pop
mov
int
adc
mov
pushw
ror
in
pop
xor
inc
add
sub
jge
dec
fucomip
cmpsb
ret
xchg
insl
mov
lcall
mov
sti
add
add
adc
clc
xchg
les
push
xchg
adc
mov
lea
repnz
mov
or
ljmp
div
shl
adc
jge
sbb
push
int
xchg
aaa
jp
cmp
mov
mov
push
out
inc
jb
inc
mov
mov
outsl
data16
xor
adc
sbb
loope
icebp
mov
cwtl
fnstcw
pushf
orl
aam
shll
mov
cli
out
adc
and
or
push
jmp
sub
rcrl
mov
xchg
repnz
test
in
pop
cltd
or
lods
push
repnz
push
jge
aad
fs
insb
cltd
xchg
sub
jmp
ds
sub
jl
xchg
mov
ds
mov
outsb
mov
mov
lods
clc
popf
mov
and
pop
and
aam
pop
mov
mov
mov
add
std
cmp
jns
xchg
mov
jbe
jge
fsubrs
ret
repnz
mov
sub
and
xor
mov
xor
iret
adc
jmp
add
xor
inc
adc
mov
and
rclb
jmp
rcl
mov
sub
and
mov
and
in
mov
xor
pop
outsb
cmc
into
xor
sbb
into
rorl
mov
and
test
mov
or
test
jnp
insl
adc
es
mov
rclb
adc
and
movsl
sub
mov
lock
xchg
sahf
xor
out
mov
sti
fisubrl
int3
icebp
mov
ds
pop
fdivs
jg
ret
int3
js
push
addr16
or
inc
mov
mov
adc
jle
adc
shrb
cwtl
add
jae
clc
sar
inc
jns
cmc
addr16
mov
pop
sahf
adc
sbb
and
sarb
adc
cmp
aas
xchg
push
repnz
xor
jl
into
roll
in
xchg
sub
adc
fcmovne
lret
jmp
loope
mov
and
xorl
xor
fstps
fsub
sahf
pop
subl
pop
push
pop
xlat
cwtl
scas
or
insl
mov
out
dec
xlat
ss
xor
cld
fidivl
fildll
popf
pusha
push
mov
lods
jge
push
out
gs
loopne
lods
lret
add
add
mov
mov
inc
jg
ret
test
jnp
stos
popa
and
loopne
mov
mov
jmp
inc
lea
sti
jle
add
mov
icebp
ror
ja
jmp
pushf
icebp
mov
mov
fdiv
loop
push
loop
dec
and
xorl
jno
dec
sub
idiv
or
or
addr16
std
outsl
inc
sub
or
popa
movsl
sarb
loopne
mov
jmp
xchg
scas
dec
sahf
jmp
cmp
fimuls
mov
lods
push
imul
leave
cld
fistps
pushf
arpl
push
jo
xchg
or
dec
and
push
test
add
and
adc
fiaddl
cmpsb
dec
inc
das
nop
shll
cmp
lahf
lock
int3
js
sbb
aam
cmc
fs
ret
call
xchg
bnd
add
xchg
push
test
adc
imul
lods
inc
sub
cmp
arpl
jp
test
ja
push
add
insb
nop
push
inc
jmp
je
adc
inc
clc
xchg
add
js
stos
xchg
jge
push
xor
das
iret
movsb
jg
and
xchg
ficoml
adc
mov
jg
inc
push
imul
xchg
les
insl
jmp
out
xchg
mov
xchg
or
push
dec
icebp
adc
lret
and
lcall
rolb
cmp
push
loop
xor
lret
mov
into
movsb
or
mov
adc
xchg
int
pop
ds
xor
call
repz
adc
sub
fdivr
lret
push
pop
iret
fstpl
jb
mov
call
scas
lahf
add
add
fsubrl
cmp
in
mov
lcall
and
int
cmp
arpl
mov
jg
outsb
sub
scas
pop
xor
jnp
inc
out
ljmp
ja
ljmp
push
sub
decb
enter
pop
jne
inc
jecxz
jbe
xchg
mov
jle
push
rorl
ja
inc
cmpsb
mov
push
dec
and
test
add
cmp
fs
jbe
adc
add
mov
test
iret
into
cli
fxch
es
lahf
jnp
frstor
stc
outsb
in
jmp
push
mov
negl
nop
inc
call
cmpb
mov
cld
out
push
in
negb
push
cmp
sub
in
xchg
icebp
jge
fstps
inc
dec
decb
das
or
mov
jb
ret
xor
cltd
into
out
mov
les
xor
es
fwait
stos
push
xchg
and
ficompl
dec
iret
outsb
push
cmc
shlb
jle
sub
pushf
fsts
or
icebp
pop
xchg
jb
add
xchg
mov
lock
or
jmp
flds
imul
sbb
sahf
pop
add
dec
cli
cld
xchg
inc
and
jb
inc
inc
mov
aaa
sbb
test
notl
add
mov
dec
outsl
push
jno
addl
call
je
sub
out
mov
scas
push
dec
fadds
xchg
aad
xchg
arpl
loope
or
insb
movsb
cld
std
sub
xor
add
dec
pop
inc
push
aam
mov
mov
add
daa
addr16
push
test
aas
mov
es
jae
cs
jmp
inc
or
inc
inc
popf
cmp
insb
insb
outsl
testl
mov
sbb
cmp
mull
dec
xchg
in
outsl
in
iret
scas
push
int
fdivrs
in
pop
or
mov
push
fucom
dec
inc
pusha
xor
les
loope
jle
jle
mov
jmp
xchg
test
adc
pop
sub
push
insl
fidivrs
jl
jnp
fcoms
cmp
mov
out
pop
outsb
jle
ret
sbb
out
inc
inc
das
dec
cmp
mov
lea
out
mov
xor
lock
adc
xor
cwtl
js
dec
add
repnz
test
lcall
xchg
insl
cli
cs
xchg
inc
inc
sub
fisubrs
inc
xchg
movsb
insl
out
gs
loop
push
orl
neg
std
push
in
inc
les
mov
cmp
jmp
xchg
push
sub
lods
pop
daa
int
cmp
inc
fsubrs
movsl
insb
lds
in
popf
test
adc
pop
cltd
frstor
das
jl
cmc
add
fwait
cwtl
xor
cmp
fdivr
pop
repz
sbb
sub
ds
addb
std
into
mov
push
lods
sub
add
out
pop
iret
lret
mov
pop
mov
xor
sub
jle
lahf
inc
mov
and
test
loopne
mov
decl
lea
add
xor
dec
xor
out
add
imul
rol
sbb
repnz
add
fistpl
in
cmpsl
rorb
xlat
jne
ret
rorb
and
pop
push
jno
cmp
cli
cs
fisttps
mov
dec
call
sub
jbe
mov
rolb
push
fistpl
and
pop
mov
add
xlat
outsl
movsl
out
xchg
fstps
jle
aaa
into
out
lcall
and
lcall
sbb
pop
push
add
dec
cld
or
add
xchg
xchg
sahf
xor
loop
push
aam
daa
pop
push
int3
ss
and
xchg
enter
sbb
daa
int3
lret
xchg
sbb
pop
dec
inc
mov
add
mov
mov
xchg
xorl
fldcw
and
jne
repnz
cmp
jbe
or
push
pushl
xchg
cmpsb
push
data16
rol
sub
sub
pop
jg
cltd
xor
insb
leave
inc
sbb
fs
movsl
push
mov
xor
lea
jno
mov
sub
jns
std
sbb
shl
iret
js
or
push
loopne
sbb
cli
psadbw
add
xchg
mov
and
mov
jnp
push
mov
mov
scas
xchg
frstor
adcl
and
pop
mov
loope
mov
je
lahf
lahf
clc
xchg
addr16
mov
lods
push
adc
xchg
lds
adc
popa
inc
jle
mov
stc
arpl
jecxz
divb
fnsave
movsl
cmp
add
xchg
test
jmp
jge
push
jae
pop
sbb
fs
ret
add
sub
cmp
adc
lret
mov
into
test
cmp
dec
xor
fldenv
push
int
pusha
je
jle
insl
nop
sahf
nop
pop
call
and
lret
and
jp
mov
and
xor
pop
filds
outsb
mov
out
jae
jb
je
aad
movl
outsb
jge
sbb
fstpt
pop
lds
jmp
testl
lret
loop
adc
mov
nop
dec
fwait
dec
dec
push
bound
xchg
mov
or
loop
inc
mov
lret
icebp
xchg
mov
test
sub
bound
push
xor
adc
imul
outsb
inc
hlt
add
dec
jbe
das
dec
pop
loopne
or
push
cmpsb
or
jecxz
aaa
pop
mov
lock
xor
jnp
xchg
aad
lcall
xor
sub
mov
mov
xchg
jle
cli
cmp
out
xor
adc
jo
or
std
clc
shll
loopne
aaa
push
push
cmpsb
sbb
push
sbb
jge
or
xchg
int
mov
push
pop
out
cmp
lcall
mov
pushf
ret
mov
cmp
push
push
repnz
cmovae
loopne
stos
xor
fcmovu
or
pop
sbb
int
jo
push
fmull
lea
pop
ja
shrl
mov
inc
pop
jle
inc
shl
aas
xor
inc
fldt
adc
cmc
and
je
push
adc
lods
les
cmp
push
pop
jbe
fsubrl
rcrb
nop
mov
scas
loopne
sub
cmpsb
cmp
xor
mov
pusha
adcb
push
add
into
xor
jle
bound
sarb
or
test
call
or
xchg
in
push
mov
sub
push
out
inc
imul
xor
cld
adc
xchg
imul
inc
inc
cld
dec
cmp
fisubs
scas
daa
dec
xchg
or
cltd
and
or
push
or
and
movsl
ret
pushf
mov
mov
ljmp
mov
or
or
cli
loopne
xor
push
arpl
push
cmp
xor
stc
rcll
ret
pop
movsb
nop
arpl
mov
xor
inc
adc
xorl
ja
or
mov
fs
push
lret
cwtl
pop
inc
fs
sub
mov
ja
jne,pn
popf
xchg
movsl
cmp
inc
pop
cmp
add
test
and
mov
lea
mov
mov
push
sub
addl
fs
or
enter
fdivp
and
add
mov
add
or
ret
out
jo
jge
ljmp
out
push
ljmp
sbb
ja
sub
hlt
enter
sti
and
mov
stc
and
popf
les
and
xor
push
test
cli
push
fwait
add
xor
xor
pusha
imulb
dec
dec
mov
adc
inc
cmpsb
outsb
orl
dec
mov
pop
inc
inc
inc
clc
dec
cmp
jecxz
xchg
sahf
lods
push
dec
jae
mov
adc
test
test
xchg
hlt
lcall
or
loopne
and
arpl
loopne
movsb
add
or
shr
xchg
inc
and
sub
fcomi
ficoms
cmp
pusha
mov
jmp
dec
scas
loop
cmp
pop
popa
lcall
lods
js
xchg
inc
sbb
pop
inc
mov
fcoms
xchg
mov
adc
loopne
test
xchg
out
pop
mov
nop
cmp
xchg
lahf
sub
mov
push
enter
sub
sbbl
cwtl
xchg
add
cmpsl
dec
cs
and
cmpsl
pop
xor
cmp
test
movsl
or
es
mov
es
dec
and
fisubl
mov
in
or
xchg
mov
jecxz
out
lods
stc
jl
xchg
sarb
add
and
clc
mov
imul
jecxz
cwtl
pop
mov
or
push
out
repnz
mov
out
xrelease
mov
pop
xlat
jae
dec
sub
mov
mov
fstps
xchg
mov
add
sub
push
outsl
jp
or
clc
lret
xor
test
jle
dec
into
les
fisubrs
xchg
rcrb
xbegin
sahf
cmpsl
cmc
pop
in
mov
sub
adc
cli
daa
scas
xchg
mov
sbb
cwtl
mov
push
xor
sti
and
mov
cmp
push
jb
cmpsb
pop
adc
cmpsl
push
int
mov
cmp
cmp
jp
cmp
inc
mov
pop
xchg
sub
cld
stc
daa
lret
lret
loopne
cmpsb
sbb
dec
pop
iret
xor
fstpt
jne
in
sbb
add
mov
add
pushf
push
pushf
imul
mov
sarb
jno
rorl
adc
jno
lret
mov
adc
jge
aaa
sub
pop
sti
cli
xchg
add
xchg
adc
gs
jne
push
arpl
sub
and
int
and
cmc
stos
adc
mov
cltd
xchg
dec
cmp
fwait
out
lds
push
lret
sub
jno
leave
sahf
cmp
mov
out
pop
pop
push
daa
stos
call
or
adc
xchg
mov
sbb
jne
ljmp
inc
xor
popf
sub
fidivrs
mov
inc
jbe
pushf
ret
ret
mov
mov
fiaddl
loop
mov
pop
pop
fbstp
cli
sbb
or
gs
cwtl
xor
mov
adc
mov
popf
jmp
jb
mov
cwtl
adc
jp
test
dec
mov
sti
addb
jae
dec
enter
push
les
fisubrs
fstl
imul
lds
iret
jg
in
pop
sub
mov
fldt
lret
aam
dec
push
nopl
dec
aad
sub
cmp
or
pop
mov
push
mov
cli
lds
dec
pop
xlat
shrb
jecxz
sub
pop
test
pop
mov
xor
ljmp
mov
fucomip
call
jae
insl
or
lcall
clc
add
iret
call
sarl
pop
xor
test
ds
das
push
lock
inc
and
inc
leave
sub
xchg
xor
stos
sub
pop
add
mov
xorl
push
push
sub
sub
jns
or
pop
xor
push
ja
cmp
pop
mov
gs
jbe
loopne
push
addr16
pop
jbe
or
outsl
jg
jno
popl
fs
cmp
cld
nop
mov
mov
mov
cs
imul
insb
popf
sub
xchg
sbb
xchg
xchg
lcall
cmp
adc
gs
adc
repnz
and
lea
push
lock
mov
adc
arpl
sbb
fstpt
xchg
xor
inc
xor
scas
mov
decb
add
aas
sbb
and
stc
dec
sti
aas
inc
dec
andb
adc
out
aas
mov
mov
xor
and
sti
cmpsb
xor
cmpl
movsl
pop
or
and
xor
xchg
mov
cli
les
pusha
stos
mov
xor
mov
jl
sbb
or
stos
mov
sti
mov
cwtl
stos
imul
mov
imul
mov
iret
test
js
mov
xlat
mov
add
xor
lds
mov
aad
imul
sub
adc
xchg
test
fmull
mov
loopne
xchg
jae
shr
dec
jle
inc
mov
push
sbb
movsl
xor
mov
jno
nop
push
mov
jnp
pop
clc
in
aas
xor
es
cmp
xor
mov
push
xor
pop
jl
inc
or
adc
inc
jmp
mull
ss
out
in
cltd
into
shlb
jns
mov
pop
pop
mov
cmp
icebp
mov
popa
xchg
and
sbb
int3
imul
cwtl
sub
cmp
jns
inc
dec
mov
les
jb
sbb
sbb
shlb
dec
fiadds
jecxz
mov
pop
movsl
pop
mov
stc
cmp
add
mov
xchg
push
mov
cwtl
fsubrl
jp
stos
mov
dec
jnp
scas
inc
out
bswap
adc
lahf
aad
ja
push
jle
sbb
jnp
cmp
jle
movsl
lret
in
inc
lods
pushf
pushf
lods
or
ds
lcall
iret
inc
lret
cmpb
dec
fs
lcall
popf
scas
les
cmp
ret
andl
insb
call
insl
rolb
pop
out
pop
leave
popa
add
push
or
xchg
mov
xchg
xchg
lods
imul
mov
jo
loopne
jbe
inc
aas
sub
and
sbb
sahf
rorl
into
outsb
mov
test
pop
jb
or
jp
fnstenv
les
or
mov
mov
add
and
shlb
push
cmpsb
mov
xchg
mov
loopne
das
cltd
sbb
sub
xor
aaa
clc
xchg
or
fstpt
fnsave
pop
loop
shrb
lods
loope
dec
mov
fsubr
cwtl
popa
and
lahf
cmp
bound
insl
adc
movsl
or
or
mov
insb
sti
jecxz
xor
filds
pop
out
mov
fistpl
push
xor
stos
hlt
xlat
out
es
dec
jb
adc
lcall
jne
ljmp
mov
mov
pop
and
jo
mov
adc
cmpl
je
int
stc
xchg
sbb
fcmovnbe
mov
fstps
push
lahf
xchg
cwtl
jo
or
stc
push
or
loop
xor
ret
xchg
loop
xor
mov
and
iret
sbbb
in
je,pn
push
aad
adcb
jbe
sbb
dec
rcrl
aas
sbb
sarb
aaa
xor
and
pop
adc
push
shll
sbbb
push
in
or
mov
or
pop
mov
fisttpll
cmc
inc
pop
je
lret
int3
jnp
ret
xchg
insl
push
lock
jmp
lea
loop
out
xor
push
cmp
shrl
bound
ficomps
cmp
xchg
cmp
movsb
xchg
jl
inc
clc
in
mov
mov
jnp
call
pop
rorb
pop
xor
cs
insl
aam
jmp
ret
cwtl
sub
lds
daa
xchg
int
ss
mov
js
add
fstpt
inc
cmpsb
inc
scas
jp
pop
inc
cmp
or
cltd
xchg
sub
lcall
mov
les
mov
adc
imul
mov
push
and
mov
into
leave
dec
lea
push
xchg
or
outsl
roll
push
pop
mov
jle
xchg
das
cld
pop
mov
push
dec
add
push
fsubs
cmp
xchg
movsb
ljmp
add
push
arpl
adc
mov
push
ljmp
lahf
lock
cmpsb
push
arpl
insl
adc
jge
push
addr16
sub
out
xor
in
cmp
mov
jecxz
fidivrl
adc
imul
pop
jnp
ror
int
adcl
icebp
ljmp
aam
inc
sti
insb
lea
xchg
dec
aad
xchg
aam
insl
dec
enter
repz
movsb
mov
cmp
pop
sub
es
adc
dec
data16
subb
scas
ss
mov
dec
inc
test
xchg
sbb
jne
mov
sbb
sbb
mov
ret
fwait
popf
mov
icebp
jae
add
stos
test
ljmp
and
or
mov
iret
std
pop
sbb
movsl
xchg
dec
inc
in
add
sbb
shlb
cmp
fstl
aas
jns
fcompl
scas
rclb
stos
ds
imul
pop
mov
cmc
pop
adcb
jmp
adc
sub
sbb
push
xchg
jle
dec
xor
insb
rorb
or
mov
dec
jecxz
iret
lds
nop
enter
xor
ljmp
jmp
jmp
jecxz
loop
mov
jmp
jns
pop
call
fnstcw
cmc
imull
push
mov
lret
xor
mov
mov
and
fimull
and
or
cmp
loope
mov
das
lret
stos
sbb
mov
cmp
add
mov
mov
test
icebp
inc
call
jns
test
xor
popf
sub
cmpsl
in
xchg
or
dec
mov
jmp
int
mov
xor
inc
mov
daa
or
addr16
in
jle
in
xor
push
shr
jnp
int
pop
xorb
push
cmc
in
std
add
jb
sti
ja
push
call
adc
pop
data16
jmp
and
mov
cmp
mov
xchg
xlat
hlt
push
cmp
daa
xlat
scas
hlt
jp
sarl
inc
sub
bound
dec
dec
mov
push
mov
sub
jl
add
ja
xchg
das
pop
iret
pop
aam
cmpsb
inc
cmp
xchg
sub
cld
xchg
negl
pop
adc
cmp
mov
dec
movsl
pop
mov
dec
sahf
xchg
mov
std
xor
mov
mov
lret
mov
push
jp
in
bound
lods
fistl
scas
xchg
pop
notb
add
adc
rcrb
sti
std
clc
push
call
sub
imul
sbb
adc
pop
imul
filds
imul
mov
icebp
in
add
mov
icebp
xchg
loopne
push
andb
or
cli
movsl
inc
jb
repnz
shlb
mov
cs
xorl
dec
pop
xchg
es
fdivl
mov
das
mov
movsb
test
andl
dec
fcmovb
dec
mov
xchg
mov
push
mov
test
mov
outsb
rorl
repnz
out
pushf
inc
adc
jg
push
sbb
or
add
sbb
pop
popa
inc
lds
jp
jl
pop
add
or
ret
test
idivb
lret
imul
fldt
bound
decl
cmp
ror
dec
and
xchg
mov
inc
das
pop
scas
jmp
push
iret
add
mov
mov
test
cmc
es
ret
or
iret
arpl
xchg
mov
adc
or
int3
subl
jne
aad
push
scas
imul
cmp
shrl
les
movsb
sbb
push
jb
and
or
or
nop
jle
in
hlt
push
pop
jge
jge
or
imul
lcall
je
inc
sbb
mul
cld
ja
stos
movsb
add
bound
and
stos
pop
pushfw
pop
mov
test
pusha
movsb
rcl
and
divps
pop
icebp
and
dec
repz
sti
or
inc
inc
int3
nop
mov
sub
les
jge
mov
inc
dec
inc
inc
jle
fldenv
pop
bound
jp
movsl
or
xchg
xchg
mov
xchg
mov
mov
mov
pop
or
pop
jp
pop
arpl
rclb
inc
outsl
loopne
xorb
pop
shlb
cmp
fwait
daa
clc
push
fstps
ljmp
test
jne
mov
and
jnp
aam
add
add
dec
mov
test
jb
daa
imulb
xchg
mov
xlat
ret
fdivr
ja
aam
fnstsw
fdivs
or
xor
sbbb
sbb
fldpi
jg
je
loopne
pop
cmp
in
int3
sub
div
sahf
mov
mov
adc
stos
addr16
cs
or
mov
mov
leave
and
ss
mov
adc
inc
add
nop
test
dec
fldl
adcl
inc
push
mov
in
jg
mov
cmpsb
adc
scas
adc
jmp
insl
fsts
jb
cmp
cmp
inc
fincstp
dec
dec
ljmp
ss
lods
mov
cmp
mov
jno
ret
popf
jp
fnstenv
pop
cmp
jle
add
in
out
imul
and
in
rcrl
mov
sbb
jne
insb
movsl
sbb
adc
stc
imul
dec
outsb
scas
lods
loope
mov
filds
decb
dec
shrb
inc
lret
cmp
adc
subl
stc
adc
into
mov
ret
push
out
in
jp
push
pop
jbe
add
dec
mov
adc
movsb
xchg
daa
ljmp
das
sub
sbb
push
mov
sub
mov
add
test
icebp
sbb
jl
inc
pop
or
cmp
adc
mov
insl
mov
loopne
jg
xchg
ja
iret
push
lods
dec
inc
lcall
push
mov
es
je
xchg
fs
cmp
ja
outsl
jmp
cld
or
mov
mov
les
cmpsl
cli
stos
sahf
sti
and
or
clc
mov
cmp
dec
js
mov
cmpb
cmpsl
dec
out
int3
inc
push
cwtl
jle
rclb
iret
sti
decl
push
dec
icebp
inc
dec
adc
sbbb
xchg
lock
pop
movb
out
mov
adc
filds
jb
pop
xchg
jnp
sarb
iret
cwtl
out
dec
cmp
lock
lret
dec
dec
imul
jle
daa
sub
pop
dec
lods
popa
in
stc
repz
sahf
xchg
xchg
mov
push
or
xor
int3
xor
loopne
insb
sti
pop
in
or
push
push
pop
sbb
and
test
clc
int
add
lcall
push
xchg
jge
pmulhw
pop
cmp
hlt
sbb
mov
push
xor
fsubrs
imul
pop
in
sub
jp
mov
test
sub
fidivl
cli
or
xor
jmp
out
lahf
cmp
push
add
lock
clc
mov
and
mov
cmp
sub
jne
xchg
jg
fsubl
nop
push
outsb
push
scas
shll
call
sbb
cld
mov
inc
xchg
mov
or
xlat
adc
mov
pop
and
inc
repz
in
jmp
jl
sbb
sbb
sbb
rcll
cwtl
dec
sbb
inc
jo
daa
add
push
xor
imul
sub
shrl
mov
subl
pop
dec
cld
stos
xor
ljmp
int3
adc
xchg
in
data16
in
mov
xor
dec
xor
lock
adc
repz
sahf
jb
xrelease
ljmp
add
cmp
cmp
insb
test
test
dec
mov
sub
dec
into
inc
add
xor
dec
sub
mov
cmp
fsts
mov
leave
add
in
jo
daa
popa
pop
push
lret
mov
xchg
lea
popf
mov
xchg
or
pusha
daa
push
negb
hlt
pop
imul
dec
inc
push
inc
push
insb
xchg
jecxz
in
add
sub
cs
cmpsb
pop
addr16
adc
rorl
push
fsubrl
add
outsb
xchg
mov
cmp
mov
push
gs
xorb
add
negl
xchg
push
ja
test
sarb
push
call
and
jge
xor
mov
pop
in
fimuls
lods
ja
inc
int
inc
test
or
icebp
jecxz
loop
mov
cmp
movsl
jns
xchg
fdivr
push
outsl
lods
push
adc
jbe
repnz
jne
popl
jl
loopne
adc
je
out
xchg
adc
pop
and
inc
inc
cs
repnz
xlat
mov
cmp
clc
rcll
daa
inc
pusha
ds
popf
lcall
mov
mov
ficoml
aaa
int
lret
repnz
in
bound
jnp
icebp
cs
pop
push
push
out
pop
outsl
add
or
sbb
sbb
pusha
push
xor
jno
ret
movsl
mov
push
mov
xor
jp
push
loop
mov
push
dec
fcomp
mov
cmp
mov
into
sar
ficoml
ret
and
loop
call
and
push
dec
sahf
std
cmpsl
dec
mov
stc
lahf
mov
mov
iret
in
testl
ds
lcall
add
push
mov
das
jnp
inc
inc
sub
iret
out
loopne
mov
idiv
leave
popf
push
ret
mov
dec
jecxz
push
inc
lret
inc
or
add
out
mov
pop
fldl
mov
xor
fsub
dec
std
clc
push
and
iret
and
xchg
loope
xchg
fs
daa
adc
fcompl
jno
gs
ljmp
lock
mov
inc
inc
jae
repz
mov
push
push
movsl
mov
mov
push
inc
inc
aas
outsl
mov
jns
inc
inc
push
jo
aaa
cmp
out
mov
mov
ret
mov
sub
in
nop
xlat
out
ds
adc
sahf
sub
pop
lret
pushf
mov
xor
sbb
cmp
jae
out
inc
cmp
aas
into
inc
nop
push
jnp
cmpsb
cli
jne
ss
push
and
add
out
sbb
inc
mov
andl
cmp
stos
lret
int
xchg
outsb
icebp
iret
xchg
jmp
push
xchg
jp
add
cmp
nop
adc
cld
mov
dec
add
jo
pop
add
inc
jno
or
mov
cmp
mov
enter
ljmp
mov
shlb
addr16
xchg
out
push
xlat
lods
mov
jno
repz
sub
push
and
push
movsb
movb
or
mov
lods
sbb
hlt
popf
jns
dec
mov
sub
idivl
adc
mov
stc
sbb
clc
jle
cld
negl
or
mov
pushf
incl
sbb
push
jne
push
pop
movups
mov
mov
and
ja
mov
pop
pop
shlb
in
arpl
and
bound
fsubl
inc
int
mov
stos
dec
fnstcw
mov
leave
sahf
xchg
dec
shll
fcomps
or
push
jbe
pop
loope
dec
mov
mov
pop
mov
xlat
jne
and
inc
add
push
movq
inc
jl
mov
dec
scas
ror
paddq
pop
xchg
loopne
jle
or
pop
adcl
rcll
test
sub
adc
and
xlat
sbb
pop
out
nop
sbb
dec
insl
cmp
into
frstor
dec
xchg
div
push
mov
lret
cmp
ss
loopne
cltd
add
or
into
mov
pop
push
add
sub
orb
cmpsl
sbb
decb
mov
emms
push
mov
xlat
push
shrb
outsb
pop
mov
shll
cmp
mov
cmp
out
pop
fs
xor
mov
cmc
mov
jle
push
lods
and
jbe
ss
leave
inc
es
hlt
orl
mov
ret
xchg
lret
imul
aam
mov
fwait
in
sbb
aaa
lcall
fs
or
mov
in
mov
xchg
fs
inc
xchg
jg
xor
inc
test
inc
out
xchg
jae
adcl
in
and
mov
and
adc
scas
add
pop
jl
leave
outsl
cmp
jmp
lcall
sbb
mov
sti
xchg
popa
xor
push
xor
jo
fsubrl
jle
enter
sti
out
sbb
dec
mov
pop
rol
subb
lcall
sbb
adc
repz
dec
nop
pushl
inc
das
jmp
test
jne
inc
cmpsl
xchg
ja
adc
fildl
pop
dec
jle
aad
es
mov
cmc
outsb
ja
or
xchg
pop
push
cs
xchg
in
sbb
xchg
sub
add
xchg
rorl
cs
cmp
ss
mov
push
push
imul
inc
xchg
ds
and
xor
dec
and
pop
out
xchg
push
jnp,pn
outsl
aam
add
sahf
push
and
ficomps
int3
fld
dec
out
fldenv
pop
mov
fstps
in
enter
nop
dec
xchg
leave
in
imul
pop
clc
lret
dec
add
sub
mov
sub
cmp
lds
hlt
ljmp
insb
ret
fsubl
xchg
push
fwait
push
mov
mov
sti
xor
dec
lods
addr16
lcall
cmp
cltd
mov
lcall
repz
sbbl
vminps
rcrl
pop
pop
push
js
dec
test
scas
xor
push
fstp
aad
outsl
inc
inc
mov
push
lea
dec
cwtl
cmp
push
xchg
push
mov
sbb
fs
xchg
sub
aaa
mov
aam
sbb
and
shll
inc
jnp
mov
xchg
lods
repnz
jae
leave
std
mov
pop
and
outsb
dec
mov
jno
repz
icebp
add
adc
cmp
mov
push
xchg
xchg
loopne
gs
inc
add
cmp
adc
push
jg
xor
jbe
dec
jno
idivl
xchg
push
sub
adc
in
adc
cwtl
mov
pop
cmc
cmp
dec
dec
mov
std
es
dec
es
stos
push
orl
repnz
inc
push
push
push
xchg
adc
add
test
mov
adc
mov
dec
xor
sub
rcrl
dec
repnz
inc
sub
cmpsb
pop
inc
and
in
adc
mov
xor
std
aaa
int
mov
pop
jmp
lds
xor
adc
xchg
cld
fsubrp
rcll
loope
not
jle
adc
dec
sbb
out
ljmp
not
cmpsb
enter
aas
jge
stos
enter
xchg
and
push
sub
sub
shlb
mov
dec
scas
aad
fimuls
xor
pop
and
movsl
xchg
clc
test
sub
das
fs
fstp
dec
test
adc
sbbl
imul
xchg
sbb
js
sbb
and
mov
dec
call
lock
jle
mov
idivl
cs
lcall
stos
repz
cmp
cld
push
add
mov
add
jo
push
fdivrl
xchg
dec
fistpll
mov
adc
mov
push
aad
pop
sbb
je,pn
mov
dec
fwait
icebp
pop
jmp
pop
cwtl
mov
cmp
mov
dec
inc
std
sub
shlb
dec
add
sbb
mov
fstpl
mov
or
dec
cmpsl
int3
stos
rcrl
cmpb
enter
mov
sbbl
jp
fidivrl
stc
add
rcll
jmp
add
lahf
xor
orb
cmp
mov
adc
mov
insl
xchg
mov
xor
or
or
or
rorb
jno
ret
out
push
data16
in
jo
into
shlb
push
pop
push
mov
push
lock
out
repz
lods
dec
or
jge
adc
sarb
pop
andl
inc
negl
cwtl
xchg
loope
push
bound
out
stos
les
ljmp
test
sbb
adc
or
inc
aam
push
ljmp
cmpb
jb
loop
or
iret
cmp
lcall
popa
sub
cltd
scas
test
xlat
iret
scas
xchg
das
aad
jbe
dec
mov
adc
sub
push
mov
pop
jno
pmuludq
decb
test
div
xchg
mov
mov
xchg
in
dec
inc
push
fmuls
les
mov
or
lcall
ja
lods
xchg
cs
push
pop
mov
div
fwait
test
shll
inc
ficoms
xor
cmp
add
jp
cs
add
cmc
xor
push
inc
adc
popw
mov
mov
sbb
inc
mov
repnz
xchg
and
aad
loopne
pop
repz
lcall
mov
mov
jl
mov
or
sbb
xchg
mov
mov
add
in
pop
nop
test
fisubrl
xchg
or
icebp
mov
dec
cmpsb
sub
add
aas
gs
dec
jnp
js
sbb
or
or
mov
mov
inc
pop
push
mov
jmp
imul
out
adc
mov
scas
nop
out
xor
add
or
nop
jg
xor
xor
push
test
and
sbb
cwtl
or
insb
fcompl
sub
arpl
xchg
daa
fisttps
mov
dec
xor
xchg
outsl
push
shrl
mov
inc
js
in
lock
pop
cmp
adc
and
lahf
mov
add
push
xchg
std
adc
loopne
add
inc
xor
ror
push
mov
pop
mov
ljmp
test
jne
xchg
rep
push
xor
inc
mov
test
cli
push
mov
push
dec
test
in
enter
xor
and
mov
xchg
push
dec
mov
mov
std
jmp
test
ror
mov
cs
pop
sub
in
aas
fistpl
cltd
xchg
shl
cmp
out
mov
shlb
dec
jae
sbb
mov
rcrl
shll
and
and
mov
xchg
test
std
push
stc
in
jo
rorl
jg
repnz
push
rolb
jae
aas
inc
xor
outsb
jmp
lret
cwtl
dec
push
sub
sbb
mov
inc
clc
cmp
repnz
pop
jle
loope
icebp
mov
loopne
jne
and
aam
js
and
cwtl
out
pop
mov
cli
pop
test
arpl
jecxz
sub
pushf
fidivrs
pushl
adc
push
mov
jp
sbb
pop
pop
fcoms
xor
aad
mov
inc
dec
sbb
cli
adc
jno
mov
dec
pop
push
ss
cmp
loopne
jno
sbb
lret
sbb
dec
sub
sub
push
lods
cli
sbb
jo
loope
fldl
dec
mov
cwtl
pop
aaa
inc
xacquire
repz
stos
fists
gs
nop
in
pop
cs
out
mov
xor
test
xchg
push
push
sbb
shlb
push
or
mov
mov
sub
or
cmpsb
sub
push
xchg
inc
inc
out
dec
lods
and
mov
mov
pop
push
dec
lahf
cwtl
mov
lahf
push
add
div
jns
jb
hlt
call
add
shll
dec
adc
loope
rolb
sbb
xor
push
hlt
nop
loopne
jae
mov
jmp
inc
les
mov
int3
xchg
adc
dec
adc
sbb
and
shrb
sbb
mov
fildll
movsb
inc
out
lods
and
aam
call
jecxz
outsb
mov
sub
sbb
cmpb
mov
test
out
rcrb
sahf
std
pop
add
enter
cwtl
jmpw
jb
mov
inc
mov
ja
es
mov
sub
gs
jle
cs
cltd
mov
mov
sub
xor
mov
ljmp
push
and
cmp
inc
fdivrl
pop
sub
pop
bswap
add
cmc
je
mov
sbb
data16
dec
xor
aaa
add
xchg
iret
dec
iret
movsl
jb
scas
jp
cmpl
stos
in
inc
xor
rolb
cwtl
inc
nop
xchg
fld
xorl
js
rorl
movsl
out
mov
pop
inc
insl
add
cli
jl
mov
mov
xchg
movswl
xchg
into
xor
rolb
dec
mov
loop
sbb
pushf
hlt
std
jecxz
and
sub
cmp
adc
mov
and
pusha
mov
jo
push
add
cmp
and
push
cmp
push
pop
sub
or
fwait
cmpsl
lea
mov
or
lret
jecxz
out
mov
cltd
nop
add
pop
pusha
sbb
shll
iret
cli
pop
push
in
leave
lret
inc
fdivl
mov
adcl
jo
mov
sub
jb
inc
push
mov
push
das
mov
nop
push
and
push
pop
hlt
mov
enter
push
sbb
sub
or
dec
mov
push
movsl
lods
add
or
sub
xor
mov
xor
and
fstl
jle,pn
test
adc
jge
mov
and
mov
popf
sbb
ljmp
adc
cmp
jg
jmp
call
fninit
imul
sarb
jmp
lret
jmp
mov
iret
lods
pop
je
lret
pop
test
loop
test
nop
xchg
sub
call
mov
ss
mov
push
clc
or
and
cmp
xchg
jns
pop
jns,pt
sbb
cmpsb
ja
adc
and
dec
aad
jle
fsubrl
push
es
sarl
je
test
outsl
dec
xchg
pushf
loopne
push
mov
fiaddl
hlt
out
sub
cwtl
lods
into
adc
popa
popl
pop
fildll
and
inc
jl
adc
repnz
push
pushf
inc
mov
in
cmp
lret
inc
cmp
add
sub
or
cli
dec
dec
push
xor
adc
shll
dec
push
inc
mov
add
inc
shlb
loop
and
pop
mov
shlb
sbb
mov
or
fcoml
mov
rclb
sub
in
push
pop
mov
test
popa
shrb
loop
dec
imul
mov
cmp
jmp
jle
scas
cs
and
mov
push
in
and
test
mov
xchg
movsl
xchg
mov
xor
jle
sbb
mov
push
xchg
jns
jo
inc
add
arpl
icebp
adc
fisubrl
int3
push
test
fisttpll
outsl
adc
dec
pop
cmp
popf
mov
fs
test
ss
popf
and
and
pusha
inc
sahf
repnz
and
xchg
push
cmp
cmpsl
jmp
js
and
xchg
xchg
pop
arpl
or
cmpsl
test
mov
mov
mov
mov
cli
cmc
mov
xorb
or
das
sbb
sub
xor
stos
popf
scas
jp
sti
test
loopne
sub
sbbl
test
cld
add
fcmovb
stos
xor
cmp
add
in
shl
outsl
pop
std
xlat
fidivl
push
loope
mov
movsb
pop
push
dec
mov
and
xchg
fs
mov
pop
shll
mov
test
dec
sbb
sub
jno
or
mov
adcl
pop
out
push
inc
lret
mov
aas
jl
out
jns
and
cmp
bound
xor
and
imul
xlat
out
sbb
mov
lods
xor
outsb
sub
aaa
mov
pop
subl
aad
push
subl
inc
pop
cmp
mov
sbb
sbb
fisubrl
dec
cmpsl
cmp
adc
das
jno
jge
popf
or
jg
setle
mov
xchg
xor
inc
icebp
mov
jp
cmp
sub
push
mov
loope
outsl
scas
loop
insl
dec
jne
test
aas
inc
mov
mov
mov
mov
sarl
cs
inc
les
movsl
push
xchg
or
adc
gs
and
pop
inc
adc
imul
mov
ljmp
push
std
call
or
bound
adc
cwtl
lcall
in
ss
xor
inc
nop
adc
push
cmp
and
jb
sub
jmp
mov
lcall
jl
add
adc
or
mov
fldl
sbb
push
in
shr
mov
stos
repz
xor
or
lcall
call
pop
ret
fidivrs
out
divl
xor
push
adc
jmp
jb,pn
or
lretw
lcall
sub
push
data16
repnz
std
mov
xor
scas
cwtl
daa
lcall
lret
cmp
cmpsb
jns
ljmp
hlt
fwait
xor
lret
hlt
sarl
popf
mov
in
repz
dec
jnp
pushf
cli
jno
push
adc
mov
out
mov
push
ret
gs
mov
out
xor
aad
nop
and
fwait
loope
out
adc
or
lcall
fwait
dec
aaa
repnz
out
test
leave
je
xor
lahf
stc
pop
mov
cmp
and
and
xchg
fwait
rcrl
inc
push
adc
pop
stos
jg
andb
jp
popf
and
arpl
nop
jl
iret
fcoms
push
dec
jg
push
add
pop
xor
push
fdivrs
cmc
push
mov
adc
hlt
sbbb
out
sub
negl
int
push
adc
pop
jae
xor
sbb
mov
testl
out
lcall
and
das
push
xchg
aam
aas
jmp
push
xor
mov
lret
inc
pop
ror
xor
sti
ss
pushf
jb
sub
icebp
aam
outsb
or
push
je
cmp
mov
les
xchg
rorl
sbb
outsl
and
jl
lea
mov
out
pop
xchg
cmp
outsb
fsubrs
sub
fldl
stos
lret
mov
arpl
push
aam
fsubrp
lret
sarl
jg
inc
mov
rorb
bound
mov
mov
sarl
repnz
xor
mov
call
std
lods
adc
cmp
jecxz
dec
dec
push
xor
xchg
popa
icebp
jnp
loope
xchg
ds
push
jb
mov
aam
push
int3
sbb
add
inc
inc
scas
jge
pushw
sahf
aam
adcb
arpl
push
mov
or
xacquire
mov
xor
in
std
popa
fadd
rcrb
or
sbb
mov
cli
mov
push
pop
mov
mov
enter
pop
mov
aam
jg
jno
es
adc
mov
ds
push
jmp
and
inc
outsl
cld
push
pop
hlt
jmp
cmp
dec
jae
stos
cmp
mov
insl
push
mov
jo
adc
lcall
mov
jbe
rorl
mov
leave
ret
mov
subl
and
repnz
gs
or
fistpll
out
leave
add
and
sbb
ja
and
add
cmp
in
ds
fs
mov
fistl
int
dec
xor
sbb
inc
or
arpl
stos
xchg
fidivl
out
lea
out
pop
test
adc
push
stc
test
bound
dec
push
inc
jo
test
xchg
movsb
data16
pop
ret
xor
ss
push
mov
int3
sbb
adc
fs
xor
int
cmpsl
sub
fcom
cli
neg
push
inc
dec
loope
popf
mov
out
imulb
mull
lret
mov
shlb
mov
adc
out
mov
or
icebp
int
nop
es
daa
inc
ds
xchg
push
pop
pop
xor
inc
ret
fistpll
push
xor
dec
jge
inc
aaa
gs
fdivrl
sarl
addb
lahf
xor
cs
call
cmp
fnstsw
orb
pop
sbb
imul
iret
lock
pop
test
mov
mov
ret
inc
add
cld
adcb
lahf
or
mov
cld
daa
pop
repz
and
subl
cwtl
int
mov
push
adc
add
sarl
js
xor
ss
jns
into
cwtl
stc
cmpsl
xor
jmp
sbb
pushf
enter
jge
and
shl
mov
pop
xchg
mov
sub
data16
mov
das
jg
lods
stos
push
int3
stc
and
push
push
push
inc
inc
cmp
adc
movl
inc
stos
mov
mov
sub
mov
cmp
adc
cmp
adc
popl
and
scas
pop
inc
pop
pop
fisttps
mov
sarl
push
movsb
dec
inc
push
repz
xor
cmp
cmp
push
dec
xlat
fsubl
lods
mov
dec
dec
fwait
add
mov
shll
pop
out
lret
insl
out
jp
sarl
sub
mov
test
in
popf
scas
out
inc
fisttpl
push
jbe
cli
je
push
js
lods
insb
jg
jno
push
xchg
adc
cli
outsb
ljmp
popf
add
push
xchg
lcall
push
addr16
imul
shlb
push
push
pop
rcrb
xchg
ss
int
test
fdivrl
js
iret
inc
adc
lds
sbb
sahf
and
and
orl
pushf
imul
cmpsb
inc
add
mov
and
pop
outsb
test
jmp
or
aam
insl
rorl
gs
dec
cltd
fsubrl
xor
das
dec
cmp
aad
pop
hlt
js
xchg
push
popa
and
loop
mov
xor
adc
hlt
jno
inc
cmpsl
stc
and
iret
inc
mov
leave
ret
lods
mov
shll
mov
mov
jb
clc
sub
lahf
or
xchg
mov
dec
pop
inc
jp
test
lea
test
lret
xchg
imulb
and
inc
and
dec
les
arpl
seto
in
aad
cmp
in
adc
dec
mov
adc
out
insl
xor
jp
clc
clc
jnp
shll
cmp
aas
add
sbb
imul
adc
aaa
mov
or
sti
ss
or
xor
mov
mov
pop
cli
sbb
push
call
rol
mov
push
jecxz
mov
mov
out
in
jge
test
rorl
push
pop
fmul
mov
mov
int3
sub
shl
xlat
pop
test
je
push
xor
iret
ljmp
imul
dec
dec
sub
popaw
sbb
mov
push
int3
xor
xor
jo
push
push
mov
mov
and
sub
inc
sahf
testl
xchg
and
cmp
push
fdivl
jne
jl
adcb
in
pushf
and
mov
mov
call
push
add
push
pop
iret
sbb
adc
jecxz
push
jge
outsb
jmp
daa
mov
pusha
mov
xchg
movsl
push
in
sub
dec
inc
cmp
adc
or
add
mov
and
inc
lcall
arpl
sahf
aas
cmp
sbbl
fst
fcmove
cmpsl
outsl
pop
sbb
jnp
jmp
or
sub
insb
jp
xchg
shrb
add
mov
out
shrb
dec
adc
in
dec
lods
sub
shll
adc
pop
stc
das
pop
dec
mov
shl
aas
aad
je
loope
inc
aas
popf
shll
daa
imul
and
sbb
aaa
jp
fsubl
dec
push
or
push
dec
mov
iret
and
xor
repnz
mov
xor
ja
or
mov
je
dec
fldt
jns
pop
bnd
int3
fbstp
cmpsl
adc
jo
mov
lods
jge
pop
movsl
dec
cmp
es
push
mov
sahf
xorb
dec
xchg
int3
je
lea
fdivrl
xor
mov
sbb
popa
jb
adc
leave
je
push
sbb
sub
out
repz
push
ljmp
pop
pop
add
sbb
add
mov
cltd
mov
push
int
or
test
or
and
adc
adc
lea
idivb
mov
clc
lock
mov
jns
xor
and
test
or
jnp
inc
adc
or
jle
mov
mov
and
sahf
sbb
jg
jb
popa
mov
mov
stc
loopne
mov
lret
xchg
lret
and
and
loop
in
cmp
jecxz
aad
mov
xlat
fdivs
das
push
mov
int
stos
std
push
jb
ss
fidivl
and
cltd
pop
ja
cmp
hlt
xor
je
adc
mov
cmc
lds
or
cs
fisubs
cmp
iret
out
scas
mov
cmpsb
add
lods
cmpl
and
add
push
pop
ret
cmpsl
fsub
lret
and
push
nop
xchg
pop
mov
mov
push
mov
mov
pop
mov
adc
dec
mov
mov
lea
add
lock
repnz
scas
idivb
or
cmp
ja
sbb
mov
xor
cmp
faddp
dec
aaa
loope
dec
xlat
pusha
lcall
cmp
js
or
xchg
test
mov
push
cmp
pop
insl
jg
mov
mov
jnp,pt
ror
shrb
cmp
pop
movsb
xchg
mov
mov
jg
data16
dec
test
xchg
ret
movsl
imul
jo
out
loope
or
xchg
in
jecxz
test
mov
inc
inc
lcall
xchg
xchg
scas
cmpb
jp
rcrb
arpl
dec
jns
adc
sbb
mov
in
repz
fidivrs
lea
mov
aad
lods
out
inc
sub
jbe
add
inc
lods
mov
push
inc
mov
bound
cmc
ficomps
cmp
cmpsl
adc
sub
mov
mov
jne
scas
out
pop
loope
fcoms
jge
nop
addr16
mov
stos
mov
xlat
and
cmpsb
int
inc
adcl
mov
repnz
sbb
flds
mov
jmp
test
les
jle
das
add
movsl
lods
cvtpi2ps
cs
xchg
flds
enter
add
inc
stos
lcall
inc
dec
out
fwait
and
jp
sbb
inc
adc
call
push
mov
fbld
push
mov
out
aam
sub
pop
notb
lds
mov
push
test
addr16
repz
inc
cmpsb
push
outsl
leave
out
lret
sahf
sbb
das
aam
mov
or
adc
mov
pop
rcl
lret
pop
lret
jmp
mov
rcrb
in
pop
movsl
inc
insl
repz
jnp
sub
ret
mov
jmp
cmp
pop
cs
inc
testb
mov
fistps
pusha
xchg
push
stos
cli
adc
or
add
movsl
cmpsl
fisubl
mov
pop
xor
mov
into
leave
pop
scas
fcmovbe
mov
mulb
mov
fsubl
lock
mov
fwait
lds
cmp
push
xchg
cmp
scas
je
pop
jbe
into
pop
mov
jle
xor
inc
push
in
imul
rcrl
dec
xor
jb
cmc
sbb
dec
loope
test
mov
stc
xchg
cwtl
mov
push
arpl
add
pop
lcall
mov
sbb
dec
dec
mov
push
into
lods
fiaddl
inc
jns
cli
jg
add
int
push
sbb
insb
push
and
mov
sbb
sarl
gs
inc
test
pushf
add
mov
mov
test
mov
test
push
xor
insl
fwait
test
adc
jecxz
cmp
stc
cmc
movsl
sub
jb
dec
imul
mov
add
out
pusha
sahf
push
push
pop
jb
sub
aas
insb
mov
mov
adc
and
test
pop
add
mov
icebp
jns
adc
sub
xchg
adc
scas
fwait
rolb
mov
mov
data16
mov
push
or
loopne
and
test
stc
aad
mov
lcall
add
xchg
jo
lds
outsl
fwait
out
xchg
mov
add
sti
aam
cltd
jg
les
xchg
rorl
add
test
push
mov
push
inc
sar
orb
and
loope
jmp
je
inc
pushf
js
and
stc
mov
loop
jno
mov
and
and
lret
in
ljmp
and
cli
pop
mov
mov
nop
leave
push
lods
bound
test
gs
sub
cmp
std
and
test
xchg
std
sbb
out
in
and
cmp
sahf
sbb
daa
dec
cmp
mov
sarb
pop
and
xchg
cmp
into
bound
push
aam
int3
ljmp
adc
es
dec
daa
inc
xchg
dec
pusha
cltd
jae
repnz
or
lock
sbb
xchg
repnz
in
push
sbb
mov
xor
jecxz
in
mov
mov
dec
repz
cmpsb
lcall
push
pop
arpl
fmull
jmp
sub
xor
adc
stos
pop
push
dec
cmp
dec
lods
jae
scas
mov
dec
scas
dec
push
aas
or
cmp
mov
dec
gs
mov
push
bndldx
pop
xchg
cmc
gs
nop
ret
ds
mov
jl
lcall
push
and
jmp
rolb
and
into
jo
stos
call
sti
insb
add
mov
add
mov
dec
sarl
ss
sbb
mov
add
in
dec
dec
cmpsb
rcll
fists
adc
aam
dec
lret
or
sti
leave
addb
cltd
xchg
xchg
inc
dec
and
fstl
orl
pop
or
push
sbb
push
fbld
push
popl
lea
inc
jg
in
xor
leave
push
push
add
xor
cwtl
and
ss
cwtl
push
xor
iret
mov
bound
adc
icebp
jb
rorl
cmpsl
cmp
popf
call
outsl
in
inc
jmp
push
stos
out
and
daa
dec
insl
mov
mov
xor
xor
sub
pop
nop
inc
mov
cwtl
mov
adc
mov
movsl
addr16
push
cmp
mov
xor
pop
shll
jecxz
into
popf
aam
and
iret
cmp
push
aaa
test
sub
add
dec
push
lock
pop
cmp
push
loopne
xchg
and
pop
aaa
mov
pusha
mov
mov
icebp
xchg
mov
mov
pop
dec
cmp
cltd
addr16
mov
cmpsb
sbbb
test
xchg
mov
mov
int3
cmp
andb
and
ja
cld
lds
mov
xor
mov
pushf
inc
pop
mov
rdmsr
insl
dec
jle
sbb
adc
jbe
out
xor
mov
out
and
sbb
aaa
dec
ss
roll
test
pop
mov
sub
loop
fdecstp
dec
sbb
shlb
sub
fwait
jl
pop
xchg
mov
mov
inc
lret
push
in
add
inc
push
xchg
call
xchg
cmp
push
out
mov
std
loopne
mov
push
adc
sub
or
stos
cmc
repnz
or
shl
jmp
or
test
inc
push
adc
addr16
out
pop
inc
sub
cld
inc
cmp
fidivs
jne
lahf
cmove
movsb
xchg
xchg
dec
loop
mov
lds
inc
pop
scas
inc
add
inc
push
sbb
dec
fbstp
std
sub
daa
ja
mov
dec
in
dec
mov
outsl
nop
adc
jns,pn
pop
hlt
mov
ror
jns
cmpl
mov
or
nop
fwait
test
lods
mov
cmp
jb
or
push
xor
dec
in
pop
sbb
jp
jl
mov
push
into
ss
push
stos
xchg
dec
cli
pop
lret
les
jp
ret
pop
mov
rcl
lods
push
cmp
push
xchg
sub
pop
jns
rcr
ret
aas
mov
outsb
sbb
xor
movsl
add
jl
push
xchg
fnsave
and
outsb
into
sahf
and
sub
push
dec
jg
popf
pop
rcr
stos
mov
push
pushf
xchg
cmpb
and
xchg
dec
rorb
divb
add
incl
ds
stc
push
dec
std
or
dec
mov
sbb
loop
inc
xchg
mov
test
jae
push
mov
mov
ja
xor
ja
cld
push
idivb
filds
enter
pinsrw
and
pop
popf
sbb
pop
stos
inc
inc
inc
jecxz
add
pushf
adc
and
inc
pop
lea
xchg
push
loopne
mov
xchg
adc
dec
out
fistps
scas
lock
add
fisubs
popa
mov
and
sub
out
adc
add
add
jnp
mov
mov
adc
cmp
cmc
sti
mov
shl
ret
into
add
nop
lods
aad
cmp
mov
mov
dec
dec
mov
dec
repz
test
push
xchg
jne
jge
xor
nop
je
mov
sbbb
jae
loopne
sub
inc
incb
addr16
jo
xlat
and
push
daa
and
jl
movb
inc
push
lret
insl
cs
movsb
iret
and
xchg
fisubrl
test
mov
les
out
mov
rclb
xchg
sarl
imul
sub
ljmp
jg
sub
mov
sbb
icebp
add
xor
mov
sub
jno
shrb
std
shrl
mov
pop
push
sarl
cli
lret
in
dec
xor
mov
scas
mov
mov
hlt
lods
fmuls
sbb
cmp
aas
int
mov
inc
inc
cmp
lds
adc
int
das
mov
in
inc
fwait
and
iret
mov
add
jb
test
dec
sbb
xor
stc
adc
stos
jnp
inc
mov
lret
cmpl
cmp
inc
orl
jne
cmp
insb
or
inc
fwait
imul
mov
test
dec
stos
ret
hlt
pushf
xchg
mov
icebp
stc
movsb
inc
cmc
loopne
xchg
xchg
js
decb
and
push
push
in
scas
sbb
rep
cmp
fistl
mov
sbb
mov
cmpsb
xchg
pop
int
xor
xlat
cmp
sbb
test
sbb
stos
sarl
jmp
push
xor
stos
push
add
cmp
aam
jo
xor
imul
jb
popa
mov
mov
jecxz
jb
cld
xorl
xacquire
add
xchg
lahf
adc
sbb
add
loop
fsubrs
cmpsl
sbb
ljmp
mov
cmp
imul
mov
mov
push
xor
mov
ficompl
ret
imul
enter
mov
mov
add
ljmp
stos
sub
xchg
mov
mov
pusha
pop
and
test
out
cld
jo
sbbl
mov
cld
hlt
outsb
leave
cmpsl
and
in
aaa
imull
inc
sbb
xchg
or
test
inc
test
push
and
dec
xchg
or
dec
jae
in
xchg
sbb
dec
jno
lahf
push
in
mov
and
shrl
mov
imul
roll
mov
mov
int
xchg
test
cwtl
popf
loop
mov
dec
pop
add
in
fmulp
sbb
cmpl
inc
iret
iret
test
hlt
subb
jns
mov
insb
push
aas
push
rol
jle
adc
jne
push
das
jno
rorl
ret
xchg
mulb
jb
aam
inc
mov
jno
push
repz
je
insl
mov
xor
jnp
lock
mov
mov
cwtl
mov
call
mov
popa
movsb
icebp
cmp
dec
call
pop
xchg
push
fildll
pop
push
jg
add
arpl
sbb
mov
xor
mov
lock
scas
and
push
and
push
enter
daa
dec
lret
lods
and
icebp
repnz
mov
cmp
roll
loopne
aam
aam
mov
movsl
mov
sbb
cmp
lock
pop
movsb
std
jno
cmc
jbe
cmpsl
fisttps
es
fcmovnb
rcl
jns
popa
and
idivb
nop
data16
je
aam
in
frstor
jae
int
adc
mov
iret
pusha
dec
add
lcall
inc
ja
fscale
shlb
push
mov
sarb
add
test
mov
lahf
cmpsl
fwait
lock
shlb
pop
test
push
into
jno
xchg
push
dec
jne
sub
pop
adc
mov
scas
sbb
or
es
mov
and
inc
sub
push
in
out
cmp
in
mov
sti
and
add
push
jp
sbb
sub
jg
rcl
jmp
sar
mov
lods
mov
adc
pop
fwait
mov
outsb
fstpl
sub
ds
or
jg
fnstenv
test
sbb
outsb
cmc
ret
es
fcoms
push
mov
xor
js
xor
cmp
add
mov
dec
shll
aam
cmp
cs
jbe
sti
push
fmull
cmpsb
rorl
divl
mov
or
stos
nop
mov
dec
in
mov
inc
aaa
insb
inc
cmp
das
daa
fdivrs
and
mov
sbb
es
jp
push
das
out
lea
jl
pop
sub
xor
fcmovbe
pop
xchg
dec
jge
outsb
andb
roll
sbb
loop
mov
inc
inc
or
adc
and
in
mov
outsb
jno
adc
adc
imul
je
sbb
ror
push
mov
fcoml
sub
test
repz
mov
cmp
xchg
cmp
sbbb
loopne
lea
adc
cmp
mov
out
mov
fwait
movsl
jbe
fsubrl
cmp
sti
dec
je
jecxz
outsb
lea
sbb
xchg
adcb
outsb
faddl
dec
sub
lds
mov
mov
clc
mov
lea
sub
mov
sti
mov
xor
fsubs
hlt
orl
lea
lahf
dec
jo
xchg
into
dec
imulb
andl
sbb
cltd
fldenv
out
out
xchg
jl
jb
sub
test
inc
imul
push
ds
in
loopne
sti
jl,pt
pop
clc
pop
mov
repz
xor
mov
orl
adc
push
outsb
sar
push
mov
test
in
scas
lods
stos
fcmovnbe
stc
or
stos
push
arpl
cltd
jo
pusha
das
popa
sub
push
mov
cmpsl
out
nop
iret
scas
ret
push
sbb
mov
inc
addr16
ror
adc
dec
cs
out
lock
or
pop
add
stos
leave
lret
push
push
fs
xor
es
sbb
roll
out
xchg
insb
jecxz
add
sub
jns
mov
les
bnd
and
or
nop
adc
xor
sar
cmp
jle
leave
and
sub
sbb
scas
lret
xor
pop
pop
bound
sub
idiv
int3
fidivs
imul
and
ja
ljmp
mov
je
ss
mov
shll
inc
pop
fcompl
mov
lock
sub
outsl
arpl
dec
nop
pop
jne
sbb
or
add
imul
je
push
add
xorl
rol
jo
cwtl
push
fisubrs
dec
add
movsb
ja
mov
rcr
jp
cmp
mov
outsb
inc
pushw
adc
mov
jno
pop
aas
and
add
bound
daa
inc
in
pop
cmp
ja
inc
fildll
js
jl
into
test
push
inc
addr16
in
ljmp
sbb
or
cwtl
cmc
xor
xor
lahf
notb
rclb
out
gs
pusha
xchg
or
std
loope
test
outsl
notb
scas
out
xchg
jle
or
sub
repz
add
outsl
in
mov
pop
movsl
arpl
mov
jge
in
xchg
push
shl
mov
loopne
pop
dec
cmp
mov
aam
outsb
jle
push
cmpsl
cmp
inc
ja
aas
aam
pop
inc
fisubrs
popf
xchg
iret
fwait
xor
push
mov
jno
push
jge
lods
or
aad
imul
aas
mov
sbb
or
bound
cmp
inc
xor
stos
push
push
mov
movsb
lea
ficoml
hlt
cmpsl
inc
jne
rcll
lret
jmp
aaa
je,pt
xchg
fistl
cli
addr16
xlat
pushf
ds
xchg
mov
repnz
outsb
dec
mov
fwait
and
or
add
std
orl
sbb
and
sbb
mov
jbe
bound
sbb
mov
add
imul
adc
jp
nop
pop
sahf
int
jle
push
outsl
std
lret
loopne
mov
xor
mov
fildl
in
pop
xor
inc
and
test
fistps
inc
jecxz
imul
mov
jg
add
shr
push
mov
gs
cmpsb
jno
mov
jbe
mov
mov
sbb
in
push
leave
push
push
xor
mov
cmp
les
mov
mov
scas
mov
rcrl
ss
lret
pop
mov
mov
inc
mov
mov
add
fmuls
sub
inc
add
jmp
shr
mov
or
lds
jbe
gs
lea
lahf
pop
or
sub
sbb
xor
jmp
js
inc
and
mov
adc
insb
mov
add
lods
ds
inc
jo
mov
out
pop
ds
ja
orb
inc
inc
push
mov
xchg
mov
aam
xor
je
sarb
add
out
roll
jo
inc
movsl
lahf
outsb
cmp
adc
cmpsb
pop
data16
push
push
mov
sub
or
sub
pop
add
jbe
imul
ja
das
push
add
fbstp
stos
jl
push
push
push
xchg
adc
sub
mov
mov
loope
dec
lock
mov
add
inc
and
push
outsb
xchg
movsl
or
stos
lea
xor
or
adc
stos
rcr
test
dec
xchg
mov
call
adc
mov
fbld
sti
roll
lret
pop
fcoms
xchg
repnz
arpl
mov
mov
test
repnz
fildll
mov
hlt
test
mov
sti
dec
pop
scas
movzwl
inc
lahf
test
sti
loope
out
enter
jg
sbb
xchg
loope
mov
jae
in
xchg
push
lods
pop
aad
js
mov
int3
out
jecxz
sub
test
outsb
push
jno
sub
out
add
cltd
or
pop
enter
push
aad
gs
mov
outsb
repz
push
push
gs
outsb
jmp
mov
dec
xor
adc
cld
sti
aaa
mov
pop
std
sbb
enter
jp
inc
clc
inc
loope
push
inc
ss
adc
test
inc
outsb
jnp
sarl
sub
ret
daa
xlat
shll
sti
int3
les
adc
addr16
daa
mov
mov
pop
daa
push
xlat
mov
jne,pn
rclb
dec
cld
sbb
inc
pop
mov
mov
nop
mov
dec
adc
lret
xchg
aas
or
lahf
rol
sub
out
or
or
enter
js
rcl
imul
jecxz
adc
cmp
das
lret
xor
aam
pop
and
xchg
and
iret
cmp
sbb
push
pop
rcr
cmp
mov
and
sub
je
sub
sbb
fcmovu
adc
xchg
add
inc
shlb
idivl
cmpsl
mov
push
mov
mov
xchg
pop
sub
mov
add
pop
je
mov
jno
xchg
out
jo
aaa
and
aad
iret
lret
xorl
int3
test
mov
jb
mov
pop
push
cmp
loop
pop
fistpll
mov
jb
pop
not
iret
mov
add
or
lahf
std
jl
adc
adc
ss
mov
xlat
jne
mov
push
fs
add
aam
cwtl
and
loop
daa
add
sbb
xchg
mov
mov
addb
arpl
pop
dec
pop
loop
xchg
adc
inc
mov
in
out
xchg
or
jecxz
push
rorl
cmp
mov
jg
lea
aas
dec
inc
xchg
test
pop
outsl
lea
movsb
jno
inc
add
jecxz
loop
lods
jg
push
sbb
andl
inc
jp
jb
lods
adc
mov
cs
ret
mov
sub
aad
jle
jl
movsb
gs
add
lock
testl
sti
outsb
jecxz
mov
sub
or
jns
jae
dec
xlat
push
test
aaa
ret
repnz
std
les
or
sarb
sbb
push
cmc
add
loope
clc
dec
outsb
cs
jo
pop
and
push
adc
pop
push
add
fldt
mov
mov
adc
outsb
sbb
les
sub
add
pop
stos
fldcw
mov
xchg
test
or
icebp
popf
inc
or
xchg
and
dec
jle
shll
and
insb
test
xorl
push
mov
xchg
aaa
fisttpll
js
cmp
cwtl
icebp
xchg
xchg
ret
dec
outsl
mov
icebp
pushw
mov
lea
aam
xor
mov
inc
adc
pop
lcall
dec
mov
cmpsl
cli
sbb
arpl
jmp
js
jl
pop
pusha
loop
dec
sub
loopne
js
cmp
fiaddl
mov
add
inc
or
dec
jmp
jno
push
and
std
pop
xchg
mov
push
cmp
push
ds
and
dec
loope
roll
test
out
imul
mov
cld
xchg
scas
fistpll
rolb
add
jl
mov
push
fldl
xchg
mov
in
push
mov
mov
notl
in
or
enter
lds
cmp
adc
push
add
jne
sarb
bound
pop
movsb
cmp
aam
xchg
sub
mov
stos
sbb
add
inc
xchg
push
test
push
shrb
out
and
xchg
cmc
mov
xchg
inc
xchg
and
cmp
cltd
loopne
jnp
xor
adc
pop
sbb
negb
fisubrl
rorb
dec
movsb
stos
inc
shrl
push
outsl
loopne
out
cmc
dec
dec
sti
add
jo
mov
pop
inc
addr16
sbb
sbb
mov
xchg
in
add
outsb
add
fsubr
xchg
add
cmp
push
mov
push
adc
loop
mov
in
inc
cmpsl
insl
movsl
push
cli
jne
pop
cld
pop
push
mov
push
sub
aas
push
stos
jl
pop
repz
jae
loop
stos
es
adcb
cmp
sahf
cmp
cwtl
or
sub
jo
xor
repnz
ror
cmp
mov
fdivrl
insb
std
push
adcb
test
les
pushf
and
imull
repnz
cld
pushf
ss
aaa
js
fists
inc
xchg
adc
int3
adc
and
add
cmp
xchg
and
adc
pop
push
jnp
fs
adc
or
mov
pop
jmp
and
xor
pmaddwd
push
jae
mov
adc
cmpsl
or
lods
dec
hlt
push
sub
xchg
and
aaa
dec
cwtl
bound
xor
lahf
or
scas
jle
push
xchg
loop
fsubrp
pop
xchg
add
movsl
cs
mov
mov
lahf
fucomi
cltd
test
dec
cmp
stos
xchg
xor
inc
cs
andb
ficompl
pop
mov
and
pop
push
push
or
dec
ljmp
jne
faddl
rol
xchg
mov
or
fsubs
repz
mov
lea
testb
roll
push
lds
push
mov
jl
jns
xchg
sub
jnp
ss
out
inc
or
jecxz
mov
nop
xchg
aas
inc
xchg
or
pop
add
pop
in
enter
xchg
nop
shlb
pusha
inc
cmp
ss
xlat
mov
movsl
push
cld
shrb
add
add
ds
mov
mov
adc
pusha
mov
std
hlt
xorb
jp
jecxz
jecxz
jo
adc
inc
shrb
pop
inc
mov
paddusb
xchg
pop
pop
lret
out
out
insl
and
rolb
push
aas
sti
jmp
bound
mov
fbld
int3
in
adc
cld
inc
andl
pop
mov
pop
sub
cmpsb
jo
loop
in
xlat
sbb
inc
inc
adc
mov
dec
cmp
xchg
outsb
stos
dec
sbb
int
enter
lock
adc
xor
dec
sub
cmp
outsl
shll
daa
mov
cs
xchg
fwait
out
mov
fsubr
add
pop
bound
mov
push
call
pushf
or
push
mov
push
jp
cld
jne
jns
dec
xchg
test
xor
stos
nop
in
dec
stc
fists
pusha
sbb
add
cmp
inc
mov
mov
imul
push
imul
mov
sub
mov
sub
aam
scas
arpl
adc
or
lahf
jmp
or
mov
in
xor
dec
dec
aad
sbb
fwait
pop
and
push
mov
push
sti
ja
and
pop
xchg
mov
stc
mov
arpl
ret
and
lret
test
mov
sub
cmp
jmp
or
mov
repnz
push
jae
push
dec
jmp
mov
xchg
xor
push
push
lea
hlt
lds
mov
push
inc
lret
inc
xor
jne
or
xor
xchg
dec
int3
and
sbb
inc
ficoml
icebp
in
inc
mov
xchg
aaa
and
mov
jae
lcall
jle
test
inc
lahf
ja
sbb
sbb
push
ret
insb
inc
out
push
lcall
sub
inc
mov
add
cmp
jo
aad
or
aas
mov
push
jae
sahf
fucomip
daa
enter
stos
lcall
std
pushf
mov
in
mov
mov
imul
dec
dec
stc
mov
mov
sbb
cli
push
addr16
movsl
cmpsl
adc
add
fstpl
pop
insl
test
jbe
xor
mov
outsb
fisttpl
insl
sub
push
outsb
insl
mov
loope
test
mov
and
add
dec
cmpsb
jbe
adc
cmc
xor
inc
xchg
testb
fistps
ds
sbb
dec
sub
dec
xchg
mov
adcb
xchg
xlat
mov
xchg
mov
jle
arpl
inc
negb
mov
lret
add
cmp
push
mov
mov
mov
jmp
inc
imul
jo
pop
xor
xchg
pop
xchg
cwtl
outsl
mov
push
add
pop
xor
popf
push
cmpsb
cwtl
mov
push
icebp
addr16
sahf
pop
aad
and
pop
push
fadds
jg
shlb
fnstenv
pop
adc
stc
push
cwtl
fs
pushf
loopne
rolb
xor
dec
mov
pop
cmp
sahf
push
leave
xchg
test
sahf
xchg
pushl
aaa
sub
call
in
or
push
cmpsb
jne
fs
push
add
mov
dec
jae
rcrl
aas
xor
call
adc
cmp
xchg
bound
sbb
and
repz
pop
jo
data16
mov
or
enter
or
xor
dec
gs
push
mov
and
insl
jb
mov
int
pop
popa
jo
adc
xor
out
cli
jb
out
mov
sub
cwtl
xchg
stc
dec
test
imul
push
sub
jnp
xchg
inc
xchg
xchg
dec
fadds
fwait
dec
ss
pop
adc
aam
ret
subb
jns
sub
mov
mov
rolb
pusha
das
clc
mov
jb
lcall
fsubr
and
push
and
enter
hlt
mov
clc
xor
hlt
jl
dec
outsb
sarl
mov
js
pop
cmp
mov
mov
jle
xor
jo
enter
mov
stc
mov
mov
push
push
or
loop
pop
faddl
adc
mov
push
aaa
iret
imul
dec
sbb
in
dec
movsl
cmp
jo
pop
push
je
mov
test
mov
inc
sub
std
and
pop
inc
test
out
fsubr
jo
dec
dec
lret
mov
xchg
cwtl
cmpsb
mov
xchg
imul
jne
sbb
lcall
addr16
dec
push
in
ds
jbe
jns
in
dec
mov
int3
cld
mov
daa
sbbb
sahf
movsb
mov
dec
rcrb
xchg
jge
mov
mov
je
pop
xchg
cli
push
mov
dec
les
lcall
lahf
or
out
cwtl
inc
mov
loop
je
sub
iret
repnz
add
inc
test
and
cmc
push
out
cs
dec
jo
sub
shrl
outsb
jecxz
mov
in
xchg
mov
push
fsubrl
or
ret
and
sbb
push
dec
xor
dec
dec
add
or
pop
push
andl
sub
adc
je
mov
lock
fimull
jl
enter
dec
inc
mov
notb
inc
mov
ss
and
jg
in
out
sbb
cmpsb
std
lret
mov
test
cmp
out
in
jmp
adc
jmp
aaa
aaa
sub
jne
cli
outsl
and
sub
cwtl
cmp
shrl
pop
add
movsb
adc
andl
cmpsl
xchg
push
aad
pinsrw
outsb
cltd
or
pusha
mov
pop
cmp
or
mov
cmp
push
pop
mov
mov
jbe
sbb
jmp
in
fbstp
jp
push
inc
and
inc
and
cli
push
jg
sbb
jnp
dec
pop
fnstsw
in
xor
sbb
lret
and
inc
daa
js
jecxz
test
sub
jnp
dec
xchg
scas
movsl
dec
inc
fwait
movsl
addr16
shll
inc
ffree
dec
xor
cmp
and
xchg
and
into
jecxz
fisttps
test
pop
dec
adc
out
out
cmp
inc
daa
and
add
and
movsl
cltd
testl
add
repz
movsb
out
sahf
daa
sub
shrb
shrl
or
push
mov
pop
sub
inc
jg
jno
mov
outsl
int
add
hlt
push
cld
pop
loopne
imul
dec
xor
repnz
fidivs
cmp
popf
adc
in
test
addr16
push
push
ljmp
push
xor
pop
and
push
jp
div
nop
fiaddl
mov
pop
loope
push
pop
mov
sbb
mov
shll
add
test
das
mov
int3
ret
rclb
mov
icebp
fnstcw
loop
dec
fcomi
jl
icebp
movsb
cwtl
jbe
mov
in
fcoms
adc
add
arpl
cltd
sti
out
fldenv
movsl
sbb
je
orl
mov
lahf
mov
ja
scas
mov
push
xor
xlat
mov
fnstsw
jbe
lods
sub
push
ret
mov
mov
dec
xchg
bound
sbb
adc
aas
jo
push
hlt
mov
push
ja
and
stc
push
adcl
lret
push
sbb
mov
cmp
aam
incb
sub
push
jecxz
movsl
sahf
fmul
sub
inc
popf
mov
fdivl
xor
insb
fildll
rorl
cwtl
das
mov
mov
movsb
lret
jne
push
mull
rolb
push
aas
jge
jns
mov
ret
test
jp
pop
mov
jecxz
test
cmp
mov
ja
movsl
or
and
xchg
fistl
jecxz
and
test
mov
js
dec
xchg
cli
push
mov
xor
pop
call
jle
insb
pop
cmp
into
cli
mov
fldenv
cltd
mov
jp
cmp
pop
mov
mov
xor
add
popf
and
repz
std
pop
mov
push
ret
pop
insb
test
ficompl
mov
xchg
and
xor
mov
fwait
inc
iret
outsl
out
int
test
or
mov
jae
pop
mov
push
adc
mov
cmpsl
mov
adc
sarb
rol
lahf
data16
xor
loopne
cmp
xor
cmc
mov
movsl
inc
gs
jmp
into
mov
pop
push
push
popa
scas
sub
js
pop
out
cmp
lea
icebp
fstps
dec
add
sbb
xor
mov
inc
push
in
scas
inc
jno
push
sbb
inc
mov
mov
jb
lock
xchg
pop
int
popa
xchg
adc
pop
add
std
jnp
flds
mov
add
scas
sbb
adc
dec
enter
pop
loope
fdivs
ds
leave
arpl
and
xchg
push
imul
rclb
xchg
push
movsl
loopne
out
xor
adc
leave
loop
mov
mov
pushf
push
dec
xchg
sarl
mov
daa
mov
jb
fsubrs
push
imul
lahf
in
jae
xor
mov
pop
int
call
push
lea
pop
adc
jmp
xorb
mov
sbb
xchg
xchg
sbb
cvttps2dq
push
sahf
mov
adc
mov
rorb
stos
inc
xchg
insb
sbb
cmp
test
sub
mov
xchg
xchg
loop
adc
pop
adc
push
jp
add
aas
add
jge
fists
bound
push
scas
ret
inc
es
stos
sti
icebp
mov
xchg
data16
test
loope
xor
dec
ficompl
cmc
je
ss
ret
or
shlb
in
or
sub
fstpt
dec
jecxz
rcrb
rolb
pop
jnp
int
dec
jo
jne
sub
sub
cmpsl
jns
pop
add
xor
xorl
sti
inc
mov
xchg
adc
mov
in
fucomip
jmp
jns
cs
mov
mov
or
add
fimuls
and
mov
pushf
sub
or
nop
adc
jmp
movsb
mov
std
sub
lock
mov
sub
cmp
cmp
out
ror
test
leave
sub
mov
push
mov
aam
sbb
rclb
fwait
xchg
repnz
fimuls
je
jb
sbbl
inc
arpl
mov
aaa
inc
mov
dec
add
xchg
das
mov
xchg
dec
hlt
in
add
push
sub
dec
hlt
loopne
adcl
fsubl
insb
es
sub
enter
aas
mov
clc
lret
xchg
ss
cmp
sbb
xchg
loop
and
nop
mov
jb
push
push
rep
pop
outsb
pop
pusha
repz
rol
jle
xor
les
les
xor
js
lret
je
dec
mov
or
add
lahf
outsb
out
dec
inc
in
sbb
cli
xor
pop
push
ret
jl
mov
in
xchg
in
ret
mov
sub
les
jl
es
xchg
fwait
insb
push
add
mov
xorl
xor
dec
les
add
repz
mov
dec
insb
sbbl
jp
lea
and
sbb
cmp
lcall
mov
jmp
jo
test
push
xor
sub
pop
inc
mov
xor
sbb
sbb
std
pop
pop
dec
fstps
dec
imul
insl
xchg
push
imulb
mov
mov
jmp
call
xchg
cmp
divl
mov
and
pop
inc
cli
test
pusha
inc
fdivrs
xchg
xchg
fldl
scas
daa
cmpl
mov
roll
sbb
out
lods
fsubr
cmpsl
cltd
test
pop
fmuls
stos
mov
cmpsb
movb
pop
xchg
out
mov
push
dec
gs
inc
push
xor
lahf
les
sub
adc
in
outsl
xchg
mov
pusha
cmp
in
loope
push
mov
lock
mov
pop
in
xchg
xchg
repnz
movb
mov
jo
pop
jge
mov
sahf
jae
mov
adc
jmp
sbbl
mov
sub
add
sub
jecxz
sub
dec
je
jge
jge
mov
xchg
lret
lcall
outsb
hlt
pop
out
cmpb
jbe
sbb
pop
dec
sub
pop
call
loope
std
sub
add
dec
leave
or
stc
dec
addr16
add
cmc
iret
cltd
mov
ljmp
xlat
and
xor
pop
lea
xor
and
pop
mov
ret
jne
roll
test
popf
or
inc
les
mov
cmp
mov
pop
adc
aas
cltd
dec
cli
cmpl
repz
mov
cmp
inc
hlt
inc
sub
cmpsl
mov
or
mov
inc
xor
idivb
test
addl
xor
sbb
ret
lahf
divb
add
iret
pop
cmp
fnstenv
jl
clc
idiv
lea
inc
fwait
arpl
fisubrl
cmp
inc
cmp
sbb
mov
pusha
repz
xor
outsl
mov
xor
int
mov
pop
inc
lret
push
icebp
sti
lods
insb
scas
icebp
in
xchg
scas
aad
lock
out
frstor
cmpsl
and
inc
jbe
pop
mov
outsb
fs
insb
sub
mov
mov
inc
add
sbb
add
call
cs
test
out
mov
xor
ficomps
out
mov
push
lock
cmp
les
add
ret
pop
je
cld
push
mov
dec
sbb
mull
mov
cmp
imul
lds
ret
jmp
les
mov
sbb
sub
xor
cli
pushl
nop
movsb
or
jg
sbb
xor
roll
stos
mov
gs
cmpsb
lahf
inc
pop
hlt
outsb
push
pop
push
in
adc
xchg
add
stos
xchg
cli
test
sbb
cmpb
lret
scas
test
stos
jge
icebp
scas
std
push
mov
cmpb
es
testb
int
add
xor
popa
mov
mov
mov
insb
mov
fs
cmp
cmp
lahf
test
adc
jg
cmp
xchg
push
cmp
enter
jge
cmp
dec
dec
fiaddl
lods
xor
popa
es
mov
imul
and
icebp
sub
adc
jle
jg
dec
rcrb
inc
loopne
add
int3
movsb
shll
jo
cwtl
xchg
push
mov
inc
sub
stos
insl
or
popa
outsb
add
fcoml
fildl
fbstp
test
lret
cmpsl
inc
jae
fistl
adc
add
mov
xchg
icebp
mov
xor
aad
and
push
ds
lea
sub
pop
mov
jno
push
les
sub
add
insb
clc
sbb
add
dec
stos
mov
dec
das
lds
clc
imul
xchg
push
lea
es
out
jnp
aad
loopne
ja
ja
je
sarb
rolb
orl
outsb
out
dec
sbb
pop
negl
shll
in
std
test
mov
mov
jo
imul
sbbl
es
jp
in
xor
or
mov
cmp
scas
pop
sub
mov
loopne
pop
jb
cmp
leave
scas
cmpl
sub
in
ret
pop
dec
add
inc
push
cmp
lock
xchg
aaa
jnp
pop
xchg
rcr
pusha
cmpsl
std
fstl
popa
imul
lock
out
nop
es
add
test
cmpsb
sub
call
sar
sub
sbb
sahf
fcoml
sahf
and
sub
aad
xor
daa
fdivr
jg
mov
rorb
and
jb
xchg
add
xchg
or
push
xchg
push
or
adc
aad
call
or
dec
sub
clc
stc
movsl
add
sub
xchg
rcr
dec
jbe
jmp
jg
inc
into
cmp
cltd
shl
pusha
sub
psubb
fldl
xchg
fiaddl
or
pusha
int
sbb
jae
mov
imul
cmp
pop
sbb
arpl
stos
cmpb
sub
push
neg
push
in
push
js
sbb
jae
outsl
push
call
fstpl
inc
fsubr
push
sbb
mov
adc
lds
cmp
es
subl
mov
movsb
ret
or
jge
data16
es
xchg
xchg
push
fidivrl
sub
inc
jmp
and
pop
inc
stos
fcom
pop
arpl
out
push
mov
xlat
testl
movsl
adcl
popa
add
loop
test
enter
les
xor
adc
mov
inc
push
ss
outsl
jmp
fadds
inc
pop
pushf
outsl
fwait
ds
and
and
int
inc
pushf
dec
xchg
imul
loope
pushf
sub
movsb
insl
in
lahf
cltd
int
push
push
fadds
add
cwtl
push
jno
in
fdiv
and
jno
mov
iret
dec
cmp
mov
fists
sbb
adc
push
lahf
cs
jp
movsl
mov
test
dec
xchg
out
mov
mov
clc
and
adc
mov
fstl
pusha
or
es
fmul
push
cmp
push
pop
pop
daa
fistpll
clc
fimuls
xlat
aam
loopne
loopne
xor
sub
sub
jl
cmp
xchg
sub
lods
cmpsl
jne
ficoms
mov
fisttpll
loopne
push
jns
bound
dec
dec
sub
movsl
jbe
mov
pop
inc
push
push
pop
outsb
sub
mov
adcb
inc
into
fisubl
inc
stc
mov
jo
cmp
jbe
aad
mov
les
in
xor
jo
bound
mov
sbb
out
and
ja
cmp
or
pinsrw
pop
lods
mov
pop
mov
ss
loopne
jb
mov
jne
in
add
adc
or
adc
fisubl
ret
std
push
mov
push
jb
sahf
mov
sub
dec
and
xor
add
mov
dec
in
cld
mov
mov
dec
jp
xchg
sbb
inc
cmp
arpl
out
sbbb
cmpsb
ret
je
imul
xchg
aam
mov
mov
cs
dec
and
xadd
pop
fs
repz
sub
movsl
mov
xchg
mov
mov
out
inc
test
roll
push
and
cmp
sub
cltd
mov
mov
shlb
pop
xchg
ds
out
nop
scas
stos
pop
and
loop
pop
add
mov
adc
js
cmp
stos
sub
or
out
ret
add
pop
and
das
call
clc
adcl
xchg
pop
jl
shrl
jmp
cwtl
shrb
sbb
popa
xchg
sbb
cmp
push
inc
and
aad
mov
lret
fnstenv
lret
ret
jl
mov
push
jmp
cs
mov
sbb
push
ljmp
mov
add
mov
scas
and
push
mov
inc
pop
sbb
pop
or
mov
mov
mov
test
mov
xor
jbe
add
xchg
movsb
mov
lock
movsb
xchg
add
testl
addl
and
mov
cmc
scas
or
outsl
push
mov
in
pop
sbb
pop
fidivrs
push
in
inc
loopne
inc
sub
push
push
in
or
pop
or
imul
in
and
test
adc
pop
pop
dec
lret
iret
xchg
fsubr
stc
mov
incb
jb
stc
xchg
ret
shrb
lods
jg
add
mov
mov
jb
mov
pop
mov
pop
and
mov
sbb
and
in
ss
push
sub
and
fiaddl
jae
push
mov
sub
outsb
andb
cmpsl
je
jge
add
test
sar
sub
or
dec
insl
inc
cmp
jg
mov
adc
aas
in
cmp
add
push
xchg
pop
data16
inc
jle
dec
mov
loopne
loop
ds
sub
mov
push
inc
ficomps
mov
jne
pusha
jmp
pop
lea
aas
pop
sbb
push
push
xchg
push
icebp
push
or
fmull
mov
or
fnstcw
mov
inc
cs
les
inc
mov
lret
ja
and
loopne
push
xor
int3
sbb
repnz
and
loop
lods
adc
xor
clc
lret
js
lret
dec
repz
push
je
test
pop
push
jns
cmp
jns
in
arpl
pop
mov
popf
adc
inc
add
aaa
xor
and
jae
xchg
push
lods
imul
nop
mov
adc
push
jo
fiadds
ss
pop
inc
push
push
cmp
fnsave
xor
aaa
ja
sbb
mov
xor
push
xchg
mov
jmp
inc
xor
pushf
sbb
sbb
jnp
or
mov
xchg
mov
mov
and
adcb
pop
mov
in
dec
out
faddl
rcrl
pop
adc
cmpsl
mov
stos
xor
mov
jae
cwtl
sbb
call
adc
loop
out
out
fdivrl
fwait
adc
add
orb
mov
nop
pusha
mov
stos
movsl
xor
data16
mov
jns
aas
pop
and
cmpb
adc
mov
inc
in
aaa
and
sahf
push
lock
outsl
push
push
add
push
dec
icebp
into
stos
int3
ret
out
sub
lahf
push
jmp
mov
cwtl
divb
fadds
loopne
fnstenv
pop
in
cmc
lods
ret
fisubl
push
sbb
out
data16
sub
and
shlb
xor
aaa
cli
iret
adcl
sbb
jnp
sbb
lahf
fisubrl
movsl
int
jbe
movsb
xchg
ret
jmp
lret
call
cmp
repnz
lret
std
sub
pop
fwait
push
repnz
int3
testb
xor
testl
cmpsl
js
scas
sbb
je
sub
mov
je
dec
imul
cmp
test
xor
popf
inc
out
aaa
sub
sub
gs
ret
mov
enter
in
and
aaa
jp
popa
jbe
jbe
mov
add
mov
mov
iret
mov
fimull
add
or
outsb
lods
mov
fcompl
cmp
stc
mov
mov
faddp
cmp
sub
mov
int
and
mov
aam
push
lods
jl
mov
in
push
shrb
fs
or
push
mov
test
mov
bound
cs
aaa
test
sbb
stos
jnp
push
shrb
push
pop
xchg
int3
push
push
cmpsl
adc
mov
and
in
lock
mov
mov
jecxz
sbb
add
ljmp
mov
cmp
mov
pop
fs
sar
sahf
mov
sti
xor
mov
push
call
loop
sub
pop
hlt
or
adc
cmp
cmpsb
mov
cmc
mov
dec
div
mov
jp
outsl
imul
sbb
ja
or
das
or
stos
ds
mov
xchg
test
jb
and
dec
cmpsl
aam
ja
adc
das
mov
pop
addl
add
dec
cltd
add
add
negb
xchg
add
ljmp
sbbb
add
shrl
outsl
pop
dec
bound
jns
xchg
inc
cld
movsl
dec
pop
sete
xchg
mov
sbbb
cmc
movb
xor
push
xor
into
jg
mov
sub
xlat
cmpsb
filds
cli
push
inc
lock
je
subl
cmp
inc
mov
pushf
mov
loop
cmp
mov
addb
aaa
mov
adc
dec
js
lcall
dec
sbb
in
pop
sbb
jp
fdivl
pushf
dec
pop
xor
out
adc
mov
aam
ljmp
pop
pop
mov
dec
and
fisubl
xorb
roll
js
shl
mov
cmp
fisttpll
dec
lds
es
dec
and
ss
lock
cmp
ljmp
cmpl
ja
loopne
pop
hlt
and
and
popa
mov
inc
movsb
dec
xlat
scas
mov
xchg
cmp
xchg
dec
lret
insb
aad
mov
and
push
mov
xorb
pop
jo
cltd
mov
push
cwtl
pop
jge
xchg
lret
mov
jmp
and
cmp
out
pop
jne
jno
or
cmpsl
or
and
sti
je
mov
inc
enter
fstl
fst
mov
subb
mov
test
fldenv
inc
cmp
js
and
jno
orl
pop
push
das
xchg
repz
dec
popa
hlt
inc
mov
xchg
xchg
xlat
add
mov
jo
mov
or
mov
sbb
xchg
or
inc
mov
fsubrl
push
adc
xchg
mov
adc
cld
sbb
leave
push
jle
jp
repz
dec
hlt
sbb
lock
cmp
fsubrl
inc
jno
adc
inc
inc
xor
gs
stc
insl
lcall
ja
scas
cltd
mov
push
adc
in
mov
inc
sub
and
sub
lods
cld
push
test
divb
add
nop
repz
clc
or
sub
and
xchg
and
lea
call
pop
lods
mov
add
iret
scas
sub
jno
push
stc
stc
jle
jnp
nop
or
sub
es
test
mov
adc
adc
lea
sub
mov
mov
fcomps
std
fisttpl
cmp
and
mov
nop
cmp
xchg
je
int3
xchg
xlat
push
and
movsl
push
scas
or
fnstsw
sbb
movsl
mov
pop
mov
scas
sbb
xor
lods
inc
or
cltd
ret
jecxz
sbb
pop
push
ja
imul
stos
jb
push
xlat
jl
cmp
loop
loope
enter
mov
adc
pushf
or
arpl
push
and
jo
insb
ljmp
and
in
inc
pop
lock
nop
mov
es
mov
popa
in
mul
jb
testl
mov
out
pop
rorl
adc
test
leave
in
jns
mov
imul
cmpsl
out
mov
in
push
dec
push
leave
add
and
clc
out
inc
sbb
sub
cmp
lcall
xchg
xchg
pop
je
or
adc
cmp
adcb
lcall
out
fsubrl
pop
cmc
lds
js
and
inc
adc
imul
mov
out
int3
pop
sbb
or
jp
sbb
mov
fisubs
mov
add
sahf
mov
push
jmp
inc
cmp
push
dec
sbb
jle
jno
cmp
push
fsubrl
push
leave
sub
jl
jb
pop
sub
add
and
aam
adc
xchg
repnz
ret
push
and
xchg
loop
mov
enter
mov
push
fcoml
int
xchg
or
loop
xchg
pop
push
cmpsb
imul
shr
fmulp
jmp
in
add
jl
push
xchg
inc
pop
roll
and
repz
loop
or
test
adc
mull
inc
repz
fcompl
fdivrs
insb
fs
in
push
add
cs
mov
push
sub
pop
xor
dec
cmp
jne
cmp
add
add
aad
testl
in
dec
pop
sti
dec
inc
ret
sub
in
nop
jp
jmp
cwtl
in
pop
sub
jmp
decl
and
push
add
fcompl
adc
push
adc
rcr
rolb
lret
rcll
ret
push
out
pop
or
outsl
notb
inc
pusha
int3
and
ljmp
inc
pop
aam
pop
xor
adc
mov
mov
clc
xor
inc
adc
mov
outsl
ret
inc
hlt
out
jo
push
inc
aam
sbb
pop
mov
push
cmp
imul
clc
mov
jae
out
data16
rclb
movsb
insb
dec
push
imul
inc
jge
lds
jp
dec
xchg
std
xor
jne
lret
xor
or
xor
ret
xchg
cld
add
mov
stos
lock
jno
pop
psraw
dec
and
insl
iretw
pop
popf
pusha
ljmp
mov
pusha
mov
and
xchg
fildl
jbe
hlt
add
jo
adc
mov
dec
pop
out
lahf
data16
xor
movsb
mov
idivb
jl
jge
fld
fwait
std
cs
js
icebp
ljmp
xchg
pushf
cmc
cli
aas
adc
sbb
mov
lret
mov
push
int
cmp
in
xchg
aaa
addr16
in
xlat
pop
mov
ret
adcb
lret
fldl
dec
mov
rclb
repz
aad
jmp
cmpsl
ss
or
and
dec
daa
loope
jmp
aam
cmp
push
push
jl
psubusw
push
aam
mov
lcallw
ffree
mov
int3
sbb
mov
mov
dec
clc
cmpsl
out
sub
inc
and
inc
add
arpl
jne
stos
xchg
push
jne
outsb
jecxz
mov
sub
mov
icebp
xchg
movsl
ror
sub
jne
mov
inc
dec
ljmp
pop
loopne
adc
popf
or
popa
clc
notb
jmp
adc
inc
daa
add
mov
inc
cmpsl
jp
pop
inc
lret
inc
stc
push
add
adc
lods
cmp
jge
cmpsl
mov
dec
cmp
jb
notb
dec
cmp
in
inc
scas
dec
mov
inc
cmp
mov
lret
aad
pop
mov
sub
mov
dec
or
loop
push
int3
stos
jb
and
sar
call
out
sub
ja
sub
inc
mov
push
pop
in
mov
sar
out
pop
test
xor
in
fbld
push
mov
insb
sarl
and
div
ret
nop
mov
and
stos
movzbl
sarl
pop
sbb
fs
push
jae
mov
fistpl
mov
sti
pusha
mov
scas
divb
popa
outsl
add
mov
rcrl
fildll
xchg
mov
mov
outsb
mov
mov
mov
cld
xor
sub
xor
mov
xor
cld
dec
and
sbb
push
dec
sbb
push
leave
adc
mov
cmpsb
xchg
jle
cmc
sbb
jbe
jmp
mov
push
pusha
push
stc
cwtl
cmpsb
subl
mov
mov
xchg
std
mov
jo
les
js
sti
and
pushf
push
sbb
fsubrs
or
dec
jp
cmp
cwtl
or
mov
aas
int3
leave
fdivrs
adc
arpl
or
aad
add
adc
aaa
enter
cmp
push
insl
add
fwait
iret
fwait
sbb
jns
push
inc
or
negb
loopne
outsl
fisubs
nop
ret
inc
inc
fistl
out
pop
lret
popa
and
test
out
add
mov
ljmp
lods
js
repz
or
jns
mov
test
mov
bound
jmp
fwait
sub
push
adc
into
setl
fnstsw
fldenv
inc
lods
rcrl
test
xor
loop
out
bound
or
push
and
pop
andl
aas
scas
mov
mov
cltd
xor
push
jp
es
mulb
aam
insb
repnz
imul
push
aam
xchg
add
pop
adc
xor
mov
cmp
int
es
jle
pop
dec
in
test
scas
mov
in
out
add
insl
xlat
rolb
cmp
xor
cmp
dec
inc
mov
lea
inc
dec
out
cmp
dec
fyl2x
lcall
cli
jnp
ja
jmp
add
jmp
shrd
outsl
imul
dec
cs
sbb
rcrl
pusha
aad
repnz
outsb
pusha
mov
dec
lods
cmp
and
inc
dec
add
dec
cltd
icebp
addr16
adc
push
dec
mov
ljmp
push
lods
mov
fisubrl
std
adc
jp
popf
dec
sahf
dec
pusha
xchg
dec
jmp
in
pop
mov
cli
mov
int3
push
xchg
jecxz
mov
add
mov
mov
xor
loopne
xchg
inc
aad
rol
xchg
js
mov
dec
aaa
in
int3
sbb
and
pop
sbb
ss
in
mov
ret
sub
pop
outsb
pop
popl
jmp
push
in
jnp
mov
xchg
pop
ss
arpl
cmp
mov
test
outsb
jns
fmuls
sub
mov
pop
pop
xor
xchg
stc
dec
movsb
bound
pop
jle
dec
popa
lea
aam
leave
fcmovnu
push
in
outsl
push
jge
or
inc
or
mov
inc
jne
adc
insl
mov
pusha
jle
popf
dec
mov
fmulp
mov
pop
gs
pop
push
test
push
call
mov
shlb
in
pop
adc
fmuls
rorb
lahf
mov
sahf
out
pop
lahf
movsb
jae
and
adc
mov
xchg
mov
xchg
push
pushl
in
sub
mov
jns
cli
fsub
mov
fistpll
fst
dec
cwtl
dec
cmp
sbb
jmp
xchg
in
cmp
pop
iret
sub
mov
out
js
mov
inc
xchg
pop
sub
push
jno
inc
xor
cmp
mov
xor
lret
outsb
xchg
xchg
xor
add
sub
call
inc
fbld
fsubr
jmp
mov
add
pusha
cmp
mov
out
mov
hlt
pop
or
rolb
adc
jbe
rcl
dec
cltd
je
or
fstpl
and
mov
pop
mov
push
pop
dec
lods
inc
iret
js
test
inc
subl
enter
inc
fstpl
adc
adc
leave
mov
sub
aaa
adc
test
and
push
in
lods
clc
ds
mov
lahf
shlb
or
xchg
push
inc
lahf
and
dec
lcall
pop
mov
bound
or
popa
jne
ret
jecxz
mov
cmpsb
inc
and
leave
stos
push
xchg
ficomps
jecxz
adc
dec
ret
cmpsl
ja
das
adc
or
mov
es
xor
aam
scas
xor
pop
mov
mov
mov
out
adc
pop
jbe
test
jo
adc
jmp
mov
mov
adc
fs
pop
pop
movsb
imul
negl
push
dec
adc
mov
push
sbb
mov
or
fildll
sbb
cmp
and
stos
inc
mov
and
cmp
shll
dec
add
aaa
jge
sub
add
jl
hlt
xchg
hlt
into
addr16
add
inc
fdivp
arpl
dec
push
in
int3
into
shll
sbb
add
pop
je
adc
cld
outsb
add
stos
dec
jmp
and
push
push
shll
push
sbb
jnp
sti
pop
mov
cmp
jb
popf
cwtl
loope
decl
xchg
test
xor
pop
mov
mov
repz
jne
pop
cmpsl
push
mov
scas
popa
push
lret
in
and
jg
push
sbb
cmp
clc
cli
cli
or
push
cltd
cmp
dec
in
sbbl
pop
jg
mov
mov
jge
in
ja
pop
mov
xchg
out
cltd
sahf
push
popa
clc
cli
add
push
mov
jne
sbb
jns
cmc
push
daa
mov
mov
pop
dec
push
xchg
mov
jns
xor
insl
cld
sarl
xlat
movsl
mov
es
or
mov
sar
lret
push
inc
rolb
adc
jp
lcall
push
sbb
jmp
stos
xchg
add
mov
dec
gs
mov
xchg
xchg
es
sbb
fs
push
jo
movsl
sbb
int
inc
mov
inc
mov
stos
adc
fstl
adc
rcrl
out
jbe
mov
scas
movsl
xorb
movsb
xchg
cmc
pop
or
outsl
in
idivl
xchg
enter
loope
inc
comiss
add
jbe
cs
ds
mov
out
aaa
dec
or
and
jbe
mov
inc
push
xchg
add
inc
sbb
mov
in
in
stc
movsl
lds
les
int
add
roll
repnz
jmp
mov
adc
cmp
inc
dec
adc
sti
inc
ret
mov
mov
mov
jge
mov
mov
out
mov
xor
cmpsl
int3
jle
cmp
repnz
sbbb
mov
dec
mov
pusha
add
mov
cmp
lahf
aad
jno
mov
hlt
pushaw
lret
xor
xchg
sti
je
mov
neg
and
xchg
fsubl
sbb
fcmovb
lock
xor
and
jbe
orl
popa
scas
das
jge
outsl
sbb
bnd
fcoml
movsb
mov
inc
pop
or
out
std
sub
add
addb
xchg
repnz
ja
out
movsl
stos
add
popa
sbb
push
push
xor
add
shll
repnz
addr16
push
adc
pop
mov
mov
subl
movsb
xor
mov
clc
ljmp
fildll
subl
sbb
test
out
fsubrs
test
cmp
das
js
pop
sbb
pop
test
add
rcr
shr
adc
jl
mov
xor
push
cltd
xchg
jle
addb
mov
in
add
in
xor
jmp
cmpsb
int
adc
adcb
or
jb
lret
or
iret
insl
jp
and
imul
add
pushf
shlb
push
ja
movsl
or
mov
mov
cwtl
lock
and
jmp
imul
out
test
jae
dec
and
push
les
adc
sub
cmpsl
outsl
insb
ret
pushf
inc
sbb
xlat
dec
fbstp
or
sbb
inc
jae
dec
ficoms
jle
sbb
cs
push
sub
fwait
pop
or
scas
icebp
pushf
pop
cmp
inc
sbb
and
aad
sbb
pop
fidivrl
stc
push
pop
sbb
inc
pusha
adc
into
std
push
xchg
pop
mov
xchg
jecxz
jecxz
ljmp
jne
ret
into
in
or
popa
pop
loopne
sub
dec
add
adc
enter
xor
daa
loope
data16
sbb
push
jl
fdivrs
push
add
imul
mov
es
enter
adc
iret
cmp
pushl
push
adc
std
mov
out
xor
and
outsb
mov
das
loop
xor
sahf
xor
or
fbld
jmp
repnz
add
adc
mov
inc
push
adcl
dec
int
ja
movsl
mov
mov
or
lcall
jmp
aas
mov
mov
aad
stc
mov
pop
mov
mov
xchg
xor
inc
in
roll
push
jle
mov
add
mov
loop
inc
sub
popf
test
sbbl
faddl
lret
ds
int3
xlat
push
dec
and
jl
clc
movsl
dec
jle
inc
push
sbb
cs
lret
push
mov
pop
or
das
loop
js
outsb
shl
sbb
or
ss
and
movsl
cs
jmp
repnz
aam
mov
rclb
dec
lods
out
ds
add
cmpsl
and
aaa
int3
loopne
and
sub
movsl
aad
mov
mov
jbe
sub
sub
outsb
idivb
leave
mov
mov
adc
xchg
aaa
dec
out
test
dec
inc
sub
loope
pop
sbb
push
in
push
inc
stos
repnz
adc
aas
test
in
ficoml
jle
push
push
lcall
push
ret
jmp
stc
sub
add
or
dec
xchg
cld
outsl
shrb
cmpsb
pop
jg
cmp
iret
in
lahf
adc
enter
cmp
pop
inc
jmp
icebp
xchg
lret
stc
mov
inc
enter
inc
sbb
loop
sub
sbb
inc
in
inc
xor
cmp
mov
inc
stc
jb
mov
inc
jge
jb
xchg
xor
test
jns
dec
jmp
loopne
stc
nop
sbb
sub
xor
or
push
cmp
out
push
xchg
jnp
jecxz
push
xchg
pop
mov
das
stc
out
and
sbb
xchg
lret
mov
hlt
sub
dec
mov
repz
inc
mov
insb
cmp
xchg
mov
adc
sbb
inc
fnstsw
pop
jbe
adc
ficoms
xchg
pusha
mov
iret
ds
notb
push
mov
dec
iret
pop
adcl
andb
lahf
aas
xchg
cmp
enter
jmp
pop
jns
int
or
jl
jnp
repz
lods
addl
test
in
cmp
xor
jg
xor
push
addr16
pop
mov
call
xlat
int
ficoms
shr
shrb
lret
cmp
aad
and
outsw
shll
sub
mov
xchg
add
or
cmp
scas
fisttpll
push
loopne
lahf
jecxz
xchg
rcl
pop
sub
popa
jle,pn
mov
sub
mov
add
je
aam
sub
mov
in
jecxz
add
xor
push
inc
fs
cmp
sahf
mov
and
hlt
lret
or
mov
ficoml
or
pusha
mov
cs
sub
inc
jne
sbb
cwtl
mov
dec
pop
add
rcrl
push
and
in
stos
or
add
jle
mov
xor
fimull
nop
aam
mov
add
jb
pop
mov
cmc
jge
mov
mov
pop
xor
xor
sti
sub
push
adc
pop
pop
dec
int
jno
push
aas
test
gs
mov
sub
pop
and
stc
xchg
in
test
pop
mov
aam
push
mov
arpl
cmpsl
pop
orb
mov
clc
repz
sbb
xchg
jbe
aaa
xchg
sbb
es
mov
push
mov
hlt
xor
add
adc
jmp
pop
imull
inc
or
add
cmpsb
repnz
arpl
ficoml
fldt
push
adc
leave
test
mov
out
jno
and
jae
pop
pushf
je
ret
arpl
mov
and
pushf
out
cmp
nop
fdivrl
fidivrl
loopne
shrb
lods
jae
add
pop
pop
xlat
es
xor
imul
xor
sub
push
pusha
xor
fcoms
sub
push
mulb
lahf
sub
mov
cwtl
imul
pop
movsl
std
lcall
sbb
adc
fldenv
sub
iret
add
xchg
les
ja
testb
in
and
in
into
cwtl
or
std
hlt
xchg
cmp
scas
fisubrl
mov
iret
loop
or
dec
loope
adc
fisttps
ret
movsb
loop
adc
xor
push
scas
test
insl
and
pushf
out
mov
aad
xchg
test
scas
decl
push
inc
call
push
ljmp
lds
cs
pop
ja
add
mov
movsl
sbb
das
dec
mov
clc
xchg
and
out
stos
add
mov
sbb
test
clc
dec
clc
testb
repz
inc
movq
fdivrs
mov
pop
orb
mov
repnz
jg
imul
jb
aas
add
adc
outsl
addl
cmc
imul
pop
cwtl
cmp
out
push
daa
jne
outsb
cwtl
das
xor
push
cli
push
cmp
std
ds
out
fimull
cli
js
jl
xchg
inc
test
jo
outsb
sub
stos
jecxz
cmc
dec
xor
xor
and
jae
rol
xor
lret
pusha
mov
out
les
or
push
jno
pushf
mov
mov
pop
xchg
xchg
dec
sub
lock
add
pop
jg
add
xor
xchg
and
jp
out
mov
movsb
cmpsb
dec
ss
mov
lret
cmp
xchg
add
bound
mov
test
loope
leave
mov
pop
jl
fcos
cwtl
cld
and
ficoms
jb
push
insl
insl
cmpsb
xchg
mov
scas
sti
inc
pop
call
pop
xor
xchg
jp
add
sub
xchg
sub
mov
push
fbstp
jge
scas
jg
cmp
mov
sbb
gs
out
cwtl
lahf
cld
mov
cs
jnp
cmp
sbb
push
popf
and
add
xchg
aas
xchg
out
lea
inc
lahf
dec
popf
fstpt
jmp
mov
sbb
pop
fsubp
pop
mov
jnp,pn
cltd
or
out
pushf
ja
mov
lret
push
in
in
je
cmc
std
push
jnp
or
mov
sub
sub
bound
xchg
add
cwtl
mov
jns
std
inc
dec
ljmp
and
cli
pop
bound
or
test
mov
out
dec
lods
dec
dec
xlat
pop
push
push
push
loope
fs
pop
aas
jge
std
pusha
shr
cmp
fwait
mov
popa
sub
dec
data16
adc
cmc
cmp
lods
push
bnd
call
lock
pop
xchg
mov
push
push
loop
mov
roll
int
and
mov
or
cmp
mov
jno
and
lea
stc
jmp
sub
jae
fstl
or
adc
and
fcomip
cmp
scas
jns
and
iret
scas
mov
out
scas
mov
push
rcr
sbb
movsb
xor
cmp
push
mov
arpl
jbe
and
dec
and
js
push
jle
sub
cmpsb
rol
and
dec
loope
sub
xor
lods
int3
dec
jae
cmp
or
sub
inc
adc
jmp
add
jb
dec
jmp
jg
test
shll
out
pop
sub
push
cmpsb
lock
jmp
mov
push
test
loopne
scas
test
outsb
inc
xchg
shl
stc
sbb
insb
xor
cld
mov
inc
insl
scas
outsl
jge
ljmp
cs
pop
test
inc
fnstsw
push
shrb
push
dec
aas
pushf
shrb
insb
and
mov
mov
inc
int
insl
jb
int3
fmul
cld
or
push
xchg
test
jle
dec
push
inc
fstpl
fmull
adc
jbe
sub
lahf
hlt
jb
out
aaa
inc
cltd
seta
cs
je,pt
adc
inc
fwait
loopne
pop
ficoms
sub
pop
insl
mov
insb
fcmovb
sub
adc
jmp
aad
call
in
cli
cli
scas
cmpb
pop
mov
movsb
les
mov
xor
fs
pop
pop
lods
push
push
aam
add
mov
mov
mov
jb
lock
out
xchg
ret
in
jle
gs
pop
adc
inc
into
xchg
ds
in
lods
jle
data16
inc
lods
push
outsb
sar
loope
in
outsb
jbe
vsqrtsd
jg
jecxz
pop
mov
jns
push
scas
xchg
repnz
movsl
fisubl
cmp
or
into
js
sbb
mov
mov
dec
inc
mov
cmp
test
in
andl
shr
jns
adc
pop
testb
and
lea
adc
xor
xchg
outsb
outsl
in
and
sbb
stc
insl
xchg
and
fisubs
or
inc
aad
dec
xchg
mov
or
xchg
push
fimuls
xor
inc
xchg
dec
adcl
out
lock
shr
mov
dec
xchg
add
pop
add
ret
fstpl
test
jb
or
mov
cmpsb
jae
inc
xchg
out
pop
lcall
sbb
loope
pop
inc
push
aad
lock
repnz
std
sub
inc
push
pop
sahf
outsl
pop
pop
jge
in
js
jmp
jno
into
adc
adc
insb
xchg
cmpb
sbb
jmp
orb
or
in
dec
ror
sub
out
fdivs
dec
stos
insl
dec
adc
mov
pop
mov
or
adc
and
repz
sbb
cmp
push
sbb
cmpsb
repnz
mov
stc
xor
or
cltd
dec
inc
cmc
stos
push
subl
repnz
push
cmp
or
mov
push
sub
loop
jmp
push
imul
repnz
cmovns
inc
pop
fildll
lahf
push
adc
jmp
cmpsl
lcall
pop
dec
xor
jbe
push
out
outsb
fcmovu
mov
movsb
mov
jb
dec
movsl
aam
into
xor
push
or
loope
mov
sub
xlat
pop
fadd
xorl
sbb
outsl
adc
addr16
inc
ja
pusha
sub
cmpsl
stc
or
stos
mov
dec
vprotq
push
mov
jae
and
jg
out
xchg
ljmp
clc
xor
jg
mov
mov
cmp
mov
fdivl
aaa
mov
rol
inc
cmpsl
lock
sbb
in
dec
add
adc
fidivrs
push
jno
pop
cmp
sahf
rcll
cmp
sub
mov
jl
sub
cmc
js
inc
sub
shlb
sub
xor
dec
pop
imul
loope
jno
xchg
push
sbb
jae
rcr
dec
out
lret
push
mov
inc
sahf
cltd
inc
fnstsw
aad
inc
data16
push
pop
test
sahf
xor
cmc
cmp
jae
pop
lods
or
test
rolb
mov
add
les
outsb
test
mov
dec
mov
add
sahf
and
cmp
and
out
loopne
ds
aaa
icebp
xor
rcll
and
add
push
pop
inc
push
mov
jmp
sub
mov
pushw
clc
jno
add
test
dec
rclb
je
aaa
pop
mov
jge
fcoml
sub
xchg
inc
in
mov
in
jno
xor
test
loop
mov
add
mov
push
jg
xchg
pop
movsb
push
push
pop
hlt
lock
xchg
cmp
fimuls
dec
cltd
loopne
outsb
loopne
push
rolb
jo
sbb
jns
js
xchg
cmpsl
jp
xchg
lret
lcall
mov
pop
sti
mov
dec
lahf
scas
push
lahf
inc
mov
testl
lret
or
imul
fnstsw
pop
add
add
and
mov
add
in
sbb
insl
xorl
jns
out
inc
cmp
test
shll
dec
pop
pop
pop
in
push
nop
into
or
pop
xchg
bound
ja
nop
mov
xor
mov
pop
data16
jmp
mov
dec
jmp
daa
or
pop
popa
ds
js
ljmp
adc
cmp
xorl
hlt
dec
mov
sbb
js
jnp
push
mov
dec
out
shl
mov
inc
ret
sub
jnp
loope
lret
movsb
jle
enter
lret
adc
or
xchg
loopne
cld
push
shl
nop
rcr
sahf
daa
cs
push
aas
add
pop
adc
push
dec
mov
dec
lahf
mov
mov
imul
std
sarl
cbtw
cmp
dec
jmp
xchg
arpl
in
xchg
les
je
mov
jge
dec
jbe
jo
movsl
adc
mov
lods
or
insb
jp
sub
call
xchg
sbb
loop
jmp
out
mov
test
push
or
jmp
mov
fsts
mov
mov
mov
loopne
lock
xchg
bound
adc
sbb
mov
rcrb
pop
pop
ficomps
lea
jmp
clc
into
and
cmp
mov
es
pop
out
cmc
ja
scas
leave
fucomip
movsl
ja
in
pop
and
sub
mov
xor
ljmp
pop
mov
inc
xlat
and
data16
es
xor
inc
adc
sub
das
mov
pop
cmc
lahf
push
iret
in
xorb
lret
xor
imul
sub
lock
adc
test
jb
lods
push
icebp
mov
imul
mov
stos
loope
xchg
subl
out
and
jle
aaa
outsb
idivl
jl
push
fbld
mov
rolb
pop
cli
shl
and
inc
mov
push
xor
push
mov
cli
int
cmp
sbb
pop
xchg
jo
mov
inc
mulb
adc
xor
les
cmp
mov
xchg
lods
cmpsl
fbstp
enter
dec
movsl
xor
dec
and
or
and
std
cmpb
addl
fsts
jg
xor
mov
adc
jnp
jo
pop
cmp
mulb
and
fidivrl
imul
mov
hlt
out
cld
or
mov
cmp
sub
data16
jecxz
outsl
outsl
repnz
add
js
aas
xor
dec
ljmp
push
dec
and
addl
mov
stos
aaa
and
lret
lret
outsb
adc
cld
cwtl
stc
sub
jp
scas
cld
mov
jge
iret
mov
push
jle
aas
or
mov
xchg
movsb
das
mov
pop
mov
mov
bound
dec
cs
loopne
lret
roll
leave
ds
pop
xor
xor
mov
icebp
or
enter
mov
cmp
cmpl
xchg
push
mov
pop
out
cwtl
inc
inc
push
mulps
xlat
mov
mov
push
cld
fdivr
gs
flds
fldl
and
nop
test
fisubrl
popa
dec
clc
movsb
js
jno
cmpsl
xchg
outsb
dec
mov
das
xor
js
sahf
rcrb
inc
sarl
push
sbb
cmc
repnz
xor
mov
and
lea
jle
ja
sbb
out
sbb
shlb
cmp
cmp
xor
rcrb
mov
into
ret
mov
pop
and
adc
not
sbb
mov
sbb
xor
push
lahf
push
mov
stos
lds
mov
fistps
scas
mov
rol
lods
adc
ret
mov
test
push
cmpsl
ud2
or
add
jae
pop
pop
adc
movsl
lcall
pop
dec
icebp
mov
nop
cwtl
mov
cmp
jp
fnstcw
lock
and
pop
int3
add
testl
push
std
mov
and
sbb
push
adc
sub
loop
repnz
shl
xchg
iret
push
add
or
pop
insl
lods
mov
cli
lret
jle
xchg
int
enter
lods
mov
jbe
fcoms
movsb
and
leave
xor
js
scas
es
inc
ret
cmp
fstps
cmp
frstor
stc
popa
or
inc
cmp
in
push
outsb
repz
fucompp
adc
xchg
mov
push
or
dec
addb
inc
push
sub
cmp
fdivrs
cmp
and
pusha
cmc
and
mov
insl
and
xchg
hlt
inc
xorl
insl
inc
jno
imul
push
aad
mov
lahf
shl
bound
xor
mov
mov
popf
jl
bound
lahf
aad
hlt
jl
ljmp
insb
inc
aad
cld
test
push
popf
dec
push
and
fists
mov
sbb
gs
mov
inc
xor
mov
cmpsl
adcb
es
cld
cltd
mov
or
pop
add
or
or
and
cmp
xor
stc
or
pushf
mov
iret
jne
lcall
mov
mov
push
xchg
push
cltd
dec
dec
or
arpl
int
scas
jg
paddsw
popf
repnz
scas
push
aam
xchg
push
ja
scas
push
inc
or
mov
sahf
std
xchg
pop
mov
push
jb
adc
mov
xor
loope
jo
test
xchg
cmp
fdivr
mov
pushf
cs
lahf
icebp
lcall
adc
shll
add
popa
popa
insl
push
inc
out
jae
xchg
stos
mov
dec
push
mov
adc
cmpsb
jg
xor
jl,pn
test
and
push
rorl
out
cwtl
push
arpl
ja
sub
aas
test
mov
mov
cmp
cmp
fs
fstpl
cmp
pop
outsl
addr16
les
stos
clc
xchg
sub
jb
pop
repz
rcll
dec
pop
mov
cmp
into
xor
ret
inc
fucomp
inc
pop
xchg
into
mov
mov
bound
enter
arpl
mov
sti
jmp
scas
mov
sbb
jo
mov
cmp
int
pop
jae
popa
mov
push
or
not
jnp
in
dec
mov
bound
ror
outsb
aad
bound
xchg
mov
mov
es
ja
xor
icebp
ds
xchg
mov
add
mov
xor
jno
in
pop
iret
adc
jmp
je
xorl
outsb
inc
and
ds
ss
fnstsw
ret
jo
mov
xchg
rorb
sti
inc
mov
int3
movsb
test
cmpsb
adc
jbe
sar
ss
in
insb
push
std
jmp
dec
test
and
lods
mov
jmp
scas
and
repz
xchg
punpckldq
push
jl
stos
add
int3
outsb
mov
cli
std
jno
or
sbb
dec
into
mov
add
scas
shlb
bound
test
jne
int3
lods
cmp
pop
pop
test
pop
flds
mov
lods
xchg
fsubrp
cmpsb
add
cli
lret
push
jnp
mov
mov
stc
xor
xchg
xchg
sti
jne
mov
bswap
mov
pusha
or
mov
loop
hlt
in
mov
andl
inc
scas
popl
pop
insb
adc
pop
sub
movsl
aam
dec
add
mov
mov
data16
mov
cmp
popa
sub
pop
adc
enter
push
pop
cli
or
mov
pop
xchg
loopne
cs
fadds
mov
mov
xorb
add
int
pop
mov
std
add
xor
mov
pop
jge
cwtl
addb
xor
mov
mov
imul
sahf
xor
jno
mov
pop
enter
push
int3
xchg
jae
cli
xor
scas
and
lcall
call
jl
insl
mov
call
loopne
testb
ja
sbb
push
ljmp
add
cld
or
nop
mov
mov
inc
dec
arpl
movsl
aas
mov
cmpsb
lahf
and
pop
setp
clc
jge
shll
loop
xchg
mov
fcomip
jo
lods
jns
jns
cmc
push
jge
inc
push
xchg
mov
es
movsb
pushf
leave
ss
ja
mov
pop
dec
dec
icebp
push
and
into
hlt
test
gs
pop
dec
daa
sub
add
xor
pop
cmpsb
scas
dec
sbb
xchg
jae
push
mov
fiadds
stc
jl
mov
jnp
pushf
into
enter
and
in
inc
fldcw
ret
dec
jno
cmp
pop
or
call
add
pop
hlt
push
shll
add
pop
outsb
insb
hlt
lds
pop
jb
inc
rorb
mov
in
int3
pusha
xor
cltd
mov
stc
sbb
push
fwait
adc
imul
dec
cmp
xor
add
push
jbe
mov
and
or
fdiv
repz
and
fstps
push
or
sahf
add
add
inc
imul
add
push
sub
shll
add
push
adc
sbb
fs
adc
lahf
loopne
cld
rorb
sbb
mov
push
jne
dec
jmp
sahf
es
aad
jp
cmp
mov
sar
rorl
out
xchg
aaa
adc
data16
cltd
mov
loop
dec
ret
jmp
repz
xchg
jnp
and
in
cmc
cmp
sarl
jg
cmp
int3
and
jb
pop
fadds
push
cli
lods
sbb
jbe
add
pushf
or
clc
xchg
mov
enter
test
enter
imul
adc
repnz
cli
test
fmull
or
gs
fldenv
call
and
push
mov
mov
mov
or
hlt
scas
mov
cld
xchg
negl
add
mov
into
dec
sbb
mov
shlb
lods
sbb
shlb
jo
sub
orb
mov
push
mov
sti
repnz
fsts
outsb
call
push
adc
dec
dec
and
adc
daa
std
sub
popa
mov
xchg
lcall
mov
shrb
nop
jne
mov
xor
aas
jno
xchg
cmp
mov
dec
fdivr
mov
mov
sbb
cmpsl
push
sahf
jp
out
int
fldcw
orl
ljmp
xchg
xrelease
push
popa
sub
lock
sbb
sub
imul
push
cld
cmp
bound
imull
lcall
mov
notb
mov
sbb
mov
push
inc
outsl
cmp
adc
jecxz
aas
cmp
xchg
jg
sbb
insb
lahf
test
dec
inc
jge
call
add
mov
lret
push
sbb
cltd
rolb
rcr
mov
and
push
aas
sarl
sahf
sahf
jne
test
mov
inc
jb
mov
outsl
xor
fcoml
cmp
outsb
push
jp
push
cmpsl
outsb
adc
mov
jb
imul
lret
out
pop
or
lods
inc
xchg
push
mov
mov
lcall
test
fisubs
pop
inc
mov
sbb
stos
gs
loop
cmc
or
push
jp
inc
nop
neg
test
mov
cs
or
dec
inc
jmp
neg
cmp
pusha
lahf
gs
loopne
mov
out
movsl
outsb
push
or
rcrl
jno
test
add
mov
pop
inc
stos
pop
dec
cmp
jg
and
lahf
dec
sbb
xor
cmpsb
je
xchg
cli
add
cmpsl
aaa
sbb
mov
iret
insb
js
or
cmp
xchg
lods
sbb
jg
popa
or
int3
mov
mov
bound
sub
out
mov
add
sti
in
das
mov
adcl
inc
cli
sti
loope
je
ficomps
js
xchg
idiv
dec
mov
movsl
sbb
lods
int3
push
stos
cmpsb
pop
pop
dec
aaa
out
test
cli
std
add
and
push
stos
push
inc
rorb
push
push
daa
pop
mov
or
jg
std
mov
jp
out
and
xchg
lea
icebp
filds
push
lcall
fimuls
push
push
or
xchg
std
push
lcall
jg
lret
imul
jne
cld
mov
xchg
add
aas
insb
add
popa
mov
inc
fstps
imul
pop
adc
add
test
pop
mov
and
adcl
mov
cmpsb
mov
leave
add
imul
mov
or
ret
or
nop
push
jno
movsb
and
add
adc
jo
jne
sarb
jne
pop
daa
adc
xchg
test
or
push
je
xchg
movsb
lds
cmp
out
icebp
jns
cmp
jle
and
adc
pop
push
ret
pop
sbb
jno
jne
clc
cld
xchg
je
movsb
cs
repnz
and
push
jle
sbb
fsubrp
sbb
into
out
xor
lea
cmp
shl
test
or
movsl
mov
pop
out
cmc
test
stos
aaa
lret
lods
pushf
add
pop
cld
sub
mov
cmp
cmc
dec
jb
pop
ret
sbb
loope
xchg
fbstp
mov
adc
inc
lcall
stos
movsl
fisttpl
adc
sbb
adc
jae
out
cmp
add
jle
mov
xchg
arpl
cmpsl
fmuls
xlat
push
add
pop
outsb
xchg
sbb
push
outsl
pop
in
mov
and
lock
mov
fsubs
jl
mov
push
xchg
sub
mov
inc
fwait
adc
fs
mov
repz
inc
out
add
cmp
xchg
pop
mov
insl
leave
mov
inc
xchg
call
jp
or
push
test
jne
pop
arpl
inc
fcmovb
clc
mov
mov
inc
jecxz
sbb
add
sub
sahf
sbbl
aad
in
sub
xchg
lods
or
lret
mov
xchg
mov
jb
cmp
lods
jmp
sarb
jp
ficoms
sbb
imul
sub
cmp
jge
outsl
pop
pop
sbb
rolb
loope
sub
ss
iret
and
sbb
push
fs
sahf
pop
sub
sarb
jg
mov
mov
les
int3
inc
sbb
pop
fidivl
dec
lods
push
jb
inc
nop
xor
nop
cld
sub
out
imul
dec
test
sub
fistl
push
stos
sti
mov
mov
insb
cld
movsb
lds
cmc
pusha
jnp
pop
add
negl
rcr
test
pop
add
lahf
inc
lret
dec
scas
or
movsl
cmp
subb
rclb
or
xorl
adc
pop
hlt
xor
inc
mov
bound
xchg
insw
dec
lcall
jnp
cmp
div
stos
int
roll
imul
push
mov
add
cwtl
push
push
mov
shll
dec
and
mov
add
add
sbb
mov
mov
mov
inc
xor
lea
or
cltd
xor
lcall
sub
pop
ret
xchg
cmp
es
rorb
aam
push
in
rolb
mov
pop
fs
outsb
xchg
sahf
pop
add
out
int3
addr16
cmp
outsb
jb
ja
fisubrs
mov
ja
cmp
movsb
sbb
mov
or
imul
mov
jmp
jmp
adc
cmp
leave
inc
in
mov
pop
push
loope
pop
repz
clc
xchg
rcrl
loope
and
pop
mov
inc
mov
push
fwait
push
push
ficoms
push
pop
add
rclb
fs
add
sahf
pop
or
push
repz
xlat
clc
gs
xchg
nop
dec
movsb
pop
xor
sub
imul
xor
pusha
mov
sub
sbb
lahf
jl
push
iret
jp
loopne
cmp
enter
dec
cmpl
xor
jns
pop
leave
fwait
xchg
adc
pop
les
inc
sbbb
loope
mov
in
and
sbb
cli
cmpl
adc
cwtl
pop
sub
js
or
sti
jae
mov
shlb
adcb
dec
fwait
push
cmp
test
les
idivb
rorb
mull
and
std
xchg
aam
jb
lahf
sub
cmp
outsl
inc
lahf
inc
push
cmp
or
rorb
cmp
flds
mov
sbb
bound
repz
std
inc
ret
and
imul
std
mov
inc
sub
jmp
je
pop
faddp
fsubp
sub
sbb
xchg
or
aaa
daa
in
mov
xor
mov
inc
fisubs
loop
movsl
jb
push
aam
stos
pushf
not
jecxz
cmp
jo
data16
mov
stos
les
pop
add
xchg
ljmp
div
push
adc
mov
mov
cli
nop
lods
aaa
lods
aas
mov
in
test
inc
lods
std
int
aam
test
fmull
adc
fisttpll
jne
imul
ss
sti
sub
rolb
mov
ret
cltd
les
or
data16
pop
xchg
lret
sbb
rcr
xchg
mov
orl
daa
xor
loopne
fldt
je
incl
lcall
icebp
sarl
mov
dec
mov
lea
xor
dec
aas
mov
mov
jp
lret
mov
mov
out
pop
push
repz
js
sahf
cmp
jecxz
lar
pusha
dec
lret
push
push
mov
lea
mov
stos
push
std
pop
aaa
loope
or
in
add
imul
lock
sbbl
sub
shrb
xor
in
aam
daa
in
lahf
xchg
cmp
inc
add
lea
xchg
push
fdivs
inc
stc
add
out
mul
xchg
imul
pop
jmp
cmp
sbb
scas
fldt
test
cmp
sub
mov
xor
aam
call
jno
dec
repz
inc
sbb
arpl
cmp
jnp
int3
int
or
pushf
dec
jns
fildl
vpcomw
scas
mov
inc
fwait
insl
or
jmp
stos
out
mov
repz
test
loopne
sbb
iret
push
add
inc
cmp
test
lods
arpl
fucomi
je
mov
movsb
inc
mull
and
stos
test
cld
sub
in
inc
movsb
sbb
xchg
adc
jg
arpl
pop
lahf
and
mov
iret
jne
jp,pn
push
mov
sub
ljmp
dec
repz
lahf
mov
push
push
sub
addb
iret
enter
mov
ja
cwtl
lcall
push
and
mov
js
cmc
sub
cmc
fistpll
xchg
jns
pop
mov
arpl
test
inc
andl
xchg
jmp
popa
stos
aas
lds
sbb
sbb
mov
cwtl
ret
inc
xchg
pushf
xor
xchg
xchg
fxtract
out
mov
cmp
lods
xor
insl
sub
jg
and
and
jbe
jnp
roll
sub
dec
push
fcmovnbe
mov
jp
jnp
sub
fidivrl
mov
xchg
or
insl
je
xchg
jmp
adc
jnp
ss
movsb
xchg
push
mov
or
xchg
iret
rorb
mov
push
les
push
stc
ret
ds
sbb
jl
cli
xchg
jbe
sarb
enter
push
insl
inc
jmp
jle
leave
into
xor
push
insb
or
pop
aaa
xor
mov
push
dec
xor
fs
popa
aaa
dec
lcall
pop
dec
enter
imul
mov
cld
shrl
push
fcomps
and
sbb
aad
int3
int3
shll
cld
mov
movsb
mov
add
test
add
loopne
mov
movsb
je
mov
outsl
cli
mov
test
bnd
dec
fbld
nop
mov
in
sub
inc
loopne
xchg
mov
testb
push
or
movsl
shl
test
rcll
pusha
cwtl
adc
aas
adc
outsb
fs
scas
push
dec
mov
inc
or
xchg
mov
jb
xchg
add
xchg
fisttpl
add
adc
sti
int
std
xchg
xor
in
loope
arpl
inc
bound
cmp
mov
adc
lahf
mov
mov
mov
idivb
cmp
or
daa
cmp
lret
outsl
push
popf
dec
repz
mov
inc
cmpsb
xor
in
pop
jbe
call
push
and
lret
mov
pop
int
sti
inc
cmp
in
pop
movb
mov
inc
ja
sub
and
add
std
add
ds
lahf
stos
pop
dec
mov
mov
xchg
dec
imul
movsl
iret
scas
xor
dec
push
mov
arpl
adc
and
imul
lds
add
mov
insb
lahf
jl
inc
into
push
repnz
jmp
and
mov
ja
jg
or
push
xorl
ja
loopne
sbb
cmpsb
insb
inc
add
cmp
shll
rcrl
cmp
pop
rclb
or
test
clc
xlat
sub
lret
jecxz
mov
adcb
sahf
clc
cmp
pop
enter
sub
inc
adc
sbb
add
aam
xchg
cli
xchg
push
mov
sbb
call
adc
subb
sbb
ss
mov
cmp
imul
mov
jno
shll
stc
jle
or
imull
cmpsl
lret
xchg
xchg
mov
and
adc
dec
mov
push
divl
lcall
int
push
mov
pusha
xchg
std
push
rorb
mov
orb
data16
iret
mov
bound
out
add
aas
add
xor
pop
mov
pushf
push
and
outsb
mov
inc
rorl
sub
xor
pop
jecxz
cmp
fsubr
cmp
imul
jmp
andb
jle
sub
cmp
mov
inc
mov
inc
lcall
pop
push
mov
cmpsb
add
and
gs
push
bound
and
insb
sbb
aad
sbb
xor
out
mov
pop
sbb
cmpsl
push
pop
adc
scas
cmpl
mov
and
loopne
add
cmp
jecxz
jne
pop
adc
out
je
xorl
xor
xchg
mov
ja
rcrl
in
adcl
or
jmp
sarl
mov
adc
mov
mov
leave
jmp
aas
and
lahf
out
adc
push
xor
adc
mov
add
jae
mov
or
mov
adc
or
pop
bnd
adc
call
xchg
xchg
out
dec
push
pushf
cli
add
and
lea
pop
sti
xchg
lcall
ljmp
mov
sub
add
cmc
sahf
pop
jb
add
adc
xor
or
lods
mov
scas
and
ret
xor
push
dec
jge
fsubrp
clc
add
mov
inc
mov
push
fiadds
scas
jle
test
in
adc
leave
shll
cld
cltd
push
adc
add
mov
add
lcall
mov
pop
inc
cmp
mov
pop
cmp
jne
xlat
int
push
test
dec
dec
icebp
or
fs
leave
sbb
test
flds
or
insl
sahf
iret
lret
mov
cmpl
sub
filds
dec
in
int3
mov
inc
sbb
rcr
jns
dec
xchg
scas
pusha
xchg
das
repz
scas
lcall
and
lods
sbb
loop
cmp
xchg
fdivs
adc
cmp
mov
jl
sub
cmp
pop
cwtl
pushf
and
sub
add
adc
lret
clc
sbb
cmc
loope
push
shll
int3
mov
sub
or
push
stc
js
fisubs
imul
push
mov
xchg
int3
and
inc
push
push
rclb
fnstcw
shl
cmp
call
iret
pop
rcrl
into
cmpsl
push
mov
push
sbb
adc
push
mov
cmpsl
cmp
push
push
mov
lods
jno
in
and
outsl
cli
push
aas
aas
nop
inc
mov
xchg
xor
cmpsb
out
loop
imul
lahf
dec
xlat
push
push
inc
mov
push
rolb
dec
jge
jno
movsb
lea
xlat
xchg
sbb
nop
mov
cmpsl
cmp
mov
mov
pop
sbb
xor
jo
mov
movsb
mov
in
jg
insl
test
and
les
push
arpl
fsubl
nop
jnp,pn
in
pop
lahf
push
in
out
mov
imul
adc
imul
inc
sbb
cmp
fcmovu
jbe
jno
jg
leave
fimull
ret
dec
xchg
mov
lcall
or
repnz
loope
sbb
pop
rcrl
pop
sbb
cmp
pop
movsb
jecxz
push
cmpsl
outsl
mov
adc
mov
push
cmp
and
shrb
fnstsw
addr16
inc
push
std
adc
pop
insl
add
stc
test
inc
sahf
filds
insb
sbb
xchg
pop
das
pop
and
int3
fistl
pop
xchg
cmpsb
repz
or
jb
bound
push
repnz
out
hlt
es
dec
mov
les
data16
cmpsb
add
notb
add
mov
test
outsb
xchg
shr
adc
lea
aaa
and
push
in
jecxz
cli
aaa
mov
gs
mov
jmp
stc
mov
sbb
dec
shlb
lcall
js
and
and
pop
popa
popf
pop
or
mov
repnz
gs
push
and
pop
sbb
repz
push
pop
sbbb
add
push
gs
in
mov
cwtd
add
fcomi
andl
pushf
lods
icebp
mov
cmp
xorl
lcall
push
pop
push
in
sbb
sub
mov
mov
cmp
sbb
ffreep
hlt
loope
jb
mov
inc
sbb
dec
xlat
popf
pushl
cmpl
subl
cli
arpl
sahf
mov
push
xchg
mov
inc
in
shl
cmpsb
jge
cli
xchg
mov
mov
cmpsl
mov
xchg
dec
sbb
and
xchg
jnp
lds
mov
bound
arpl
int3
mov
test
pop
sub
push
xchg
outsl
cmp
fldenv
jno
imul
mov
or
push
push
inc
dec
or
fwait
out
aaa
pop
mov
adc
push
push
lret
xor
push
daa
add
push
cmc
xlat
mov
jmp
ffreep
xchg
jns
cmp
int
xchg
and
or
aaa
mov
sbb
inc
int3
mov
lcall
lock
add
adc
mov
out
scas
mov
or
jo
int3
push
js
mov
data16
int
jle
cmp
pop
cltd
mov
push
or
mov
mov
mov
movsl
or
xchg
lcall
lahf
adc
cmpsb
mov
push
shrb
movsb
push
aam
mov
addb
mov
add
iret
jne
cwtl
das
xlat
fs
inc
bound
shrb
invd
and
mov
call
push
pop
into
lds
jmp
adc
cmp
push
stos
push
imul
xchg
jns
dec
call
aad
push
mov
ljmp
mov
in
imul
mov
push
aam
sub
adc
mov
sbb
out
add
pop
or
popf
or
sbb
pop
mov
jecxz
dec
fucomip
pop
ret
xchg
in
iret
repnz
fwait
repz
addr16
xchg
ja
cmp
adc
inc
hlt
in
sbb
sbb
stos
mov
mov
mov
in
mov
movsl
lds
dec
dec
enter
lods
inc
pop
add
xchg
inc
ret
mov
mov
aas
cmp
fcmovne
pop
testb
loope
cmp
xorb
or
das
loopne
mov
xchg
movsl
mov
or
je
xchg
in
cs
int
lea
push
jmp
out
and
daa
pop
shlb
adc
cmp
pusha
repnz
dec
pop
les
mov
sub
mov
out
cmp
pop
icebp
dec
pop
push
jp
test
jle
pop
lods
in
jmp
inc
es
jno
sahf
insb
dec
sub
xor
cmpsb
push
arpl
push
mov
sbb
and
test
lock
idivl
cmp
sbb
xchg
shrl
inc
aaa
mov
inc
lahf
sbb
sub
lods
or
cmp
repz
mov
xor
push
leave
sub
jnp
outsb
in
and
leave
scas
scas
stc
cmp
mov
filds
push
nop
sub
inc
data16
fadds
sub
jnp
jne
ja
test
sub
cmp
adc
cmp
push
dec
imul
scas
aas
lea
push
dec
aad
iret
in
jle
push
and
sub
outsl
adc
imul
dec
adcl
pop
mov
mul
xor
or
push
xor
push
xor
mov
mov
fnsave
jecxz
mov
jecxz
iret
pop
gs
mov
bound
insb
sahf
pinsrw
sarl
mov
or
cmp
sub
push
shl
les
stos
fisttpll
inc
pop
inc
pusha
pop
loope
into
xchg
mov
mov
out
pop
xlat
ret
cmp
icebp
xor
add
scas
mov
icebp
stos
or
add
pop
sbb
fwait
xor
lea
addr16
lods
aad
cmc
jnp
inc
js
roll
aad
push
fistl
stc
jae
mov
cli
cltd
stc
jb
push
cli
xchg
mov
push
lcall
push
jae
lret
lcall
pusha
clc
mov
lock
cmp
sahf
adc
das
jno
sti
adc
cmpsl
jmp
xorl
loope
mov
je
aas
out
mov
xchg
sub
dec
flds
pop
nop
popa
das
mov
ret
xchg
test
adcb
push
cld
dec
mov
imul
outsb
and
mull
xor
push
cmp
out
pop
pop
test
pop
into
cltd
rcrb
insl
andb
imul
xchg
mov
add
push
mov
adc
cli
out
les
cli
sahf
popf
ret
or
sub
iret
imul
pop
bound
sub
loopne
and
jne
stos
push
mov
push
and
sub
lods
leave
sbb
push
jge
push
lahf
jae
xchg
pop
inc
int3
cmp
dec
adc
push
jge
add
jnp
sbb
and
xchg
inc
sbb
push
push
add
js
cwtl
loopne
cmp
lds
mov
mov
add
push
pop
stos
icebp
movl
mov
mov
test
push
outsb
stos
ljmp
scas
sbb
imull
int
js
gs
inc
lods
in
dec
xchg
sti
dec
scas
jae
jnp
outsb
xchg
inc
loope
or
jmp
repz
fwait
cli
mov
jae
ljmp
jns
fsubrs
push
shlb
sub
push
out
setge
shrb
jbe
push
ljmp
pop
pop
das
out
mov
ds
add
mov
push
xchg
jg
shl
lahf
xchg
mov
or
sbb
mov
mov
repnz
cmpsl
int
and
pop
add
xchg
and
icebp
jns
test
adc
pop
lahf
adc
out
add
stc
aad
int3
out
mov
scas
ljmp
fwait
es
ror
mov
dec
sarb
sbb
lret
dec
inc
mov
mov
jmp
sub
gs
gs
jne
sub
xchg
lret
ss
push
adc
xchg
push
xchg
outsl
out
call
js
push
mov
mov
das
shll
out
ss
xor
sbb
out
mov
and
cltd
enter
fisttps
inc
mov
fcmovnu
repnz
in
out
loope
mov
or
lret
outsl
lea
lds
dec
scas
jmp
addr16
mov
int
push
xchg
pushf
ret
cmp
pop
push
in
fdivrs
movd
in
mov
jp
adc
cmc
loopne
pop
mov
push
push
mov
or
mov
jae
cltd
shll
xchg
mov
int3
and
add
push
push
sbb
mov
xor
xlat
lret
dec
mov
add
sub
mov
mov
xchg
mov
inc
outsl
negb
xlat
rcrb
mov
add
in
pop
or
xchg
mov
and
dec
jbe
jb
and
cmp
popa
cwtl
test
xorb
push
call
inc
scas
cmpsl
pushf
repz
and
sub
push
push
xor
popf
shl
adc
incl
sub
cmpl
imul
scas
push
inc
dec
insl
out
ror
cs
bound
sti
pop
mov
mov
push
scas
xchg
pop
and
cs
dec
or
dec
movsb
addr16
xchg
sti
icebp
cmc
fs
js
or
mov
lahf
push
repz
lahf
xchg
jmp
sbb
xchg
outsb
jge
aaa
jl
int3
mov
mov
aam
xchg
jbe
popf
test
cmpsl
lcall
mov
lcall
jl
scas
sbb
sti
shlb
dec
mov
mov
xor
dec
es
mul
mov
pop
mov
sahf
mov
mov
jg
ficoms
xchg
ds
mov
add
idiv
por
repz
adc
mov
mov
aas
jge
scas
movsb
loopne
stos
cmp
jne
xor
dec
nop
push
and
pop
xchg
mov
inc
or
sahf
or
jbe
mov
ss
cmpsl
fs
cli
push
mov
push
pop
mov
mov
mov
loop
test
push
roll
jnp
push
dec
stos
gs
push
xchg
push
jge
fisttpll
cltd
sub
dec
and
dec
gs
mov
dec
push
dec
sbb
xchg
dec
popf
jbe
js
scas
imul
adc
xlat
ss
les
lea
shl
call
dec
fninit
mov
push
jle
and
outsl
daa
and
xor
stos
incb
and
fsts
clc
pop
jnp
int3
in
jge
jp
mov
pop
cmp
ret
icebp
dec
pop
cmc
popf
fdiv
cs
test
jo
loopne
out
shl
pop
xchg
dec
mov
call
pushf
shrb
stc
or
sub
inc
shrb
lret
mov
rolb
std
jmp
loopne
dec
push
jle
mov
fwait
mov
rol
mov
arpl
ja
push
cmc
push
ret
pop
xor
iret
lea
cmpsb
and
cmp
rclb
sub
sahf
jmp
popa
in
mov
insl
mov
in
pop
cmpsb
add
jp
jecxz
dec
xchg
add
jl
push
daa
mov
sub
inc
sti
ffreep
orl
fs
pop
mov
arpl
inc
dec
mov
or
pop
es
popf
lret
xchg
pop
xchg
cmp
jp
adc
das
lods
mov
push
jmp
lret
es
mov
loope
leave
insl
mov
mov
xor
loop
xchg
pop
stos
or
mov
popa
xor
cld
sub
insb
jae
and
xor
xor
rclb
scas
int
adc
xor
dec
sahf
out
dec
iret
jmp
mull
inc
aad
aad
gs
jecxz
and
je
add
mov
xchg
fwait
mov
add
fst
addb
inc
insl
sub
mov
je
cmp
dec
mov
repz
pusha
xlat
mov
ret
int
or
roll
cmpsl
fnstcw
jge
pop
inc
sub
dec
xor
mov
push
in
lea
mov
leave
andl
sub
fldl
pop
into
lcall
add
pop
inc
push
jne
xchg
mov
mov
sbb
cld
loopne
into
xor
into
sbb
inc
cmp
dec
xor
mov
jnp
push
push
jl
push
push
adc
shlb
mov
stc
jg
mov
push
aam
pop
int3
dec
xchg
push
outsb
adc
adc
pusha
add
pop
add
shll
and
dec
frstor
test
cmp
xor
and
mov
loopne
rorl
push
inc
pop
xchg
test
push
lcall
cwtl
lods
pusha
mov
scas
fildll
xor
and
mov
fdivrp
cmp
sbb
outsb
fdivl
dec
cmc
lds
adc
dec
rcll
push
push
dec
popa
mov
rclb
pop
push
out
shll
iret
into
adc
push
insb
ret
in
mov
popa
popa
ss
mov
test
mov
sub
cmp
decb
xor
movsl
int
dec
pop
iret
push
cmp
outsl
inc
or
aam
jbe
inc
sar
je
cmp
xchg
mov
mov
rep
xlat
xor
xchg
xor
test
in
mov
je
ds
inc
adc
sub
cmp
dec
pushf
add
lret
inc
mov
pop
ret
lret
or
cmp
mov
dec
push
and
mov
btr
fnstsw
add
in
xchg
add
arpl
push
imul
inc
cwtl
sbb
icebp
or
icebp
pusha
in
mov
scas
cmp
sahf
subb
outsb
sbb
call
out
jbe
xor
cld
movsb
fwait
inc
dec
adc
sbbb
sbb
fldcw
out
mov
out
scas
push
movsb
ret
push
jl
jg
dec
mov
cwtl
outsl
mov
daa
jg
sbb
mov
xlat
pusha
icebp
pushf
rolb
test
push
lds
sub
mov
jnp
jge
repz
rolb
push
or
sub
dec
lea
inc
sub
lods
adc
mov
dec
insl
adc
cmpsb
test
test
int
icebp
adc
in
sub
mov
inc
lcall
cmp
and
xchg
cmpsb
je
jg,pn
insb
xchg
mov
les
adcl
jl
je
push
sbb
fsubp
call
sub
mov
cmp
xchg
lcall
push
dec
add
inc
dec
sti
add
inc
es
adc
push
xor
inc
mov
iret
jae
data16
lea
cmp
add
or
sub
push
js
aas
imul
push
subb
mov
or
ljmp
mov
shl
sti
inc
or
cmpsb
mov
clc
xchg
xchg
or
rcl
and
leave
fwait
xchg
shrl
pusha
stc
popa
call
jb
pop
pop
ds
push
adc
popa
flds
mov
loopne
xchg
push
and
psubb
sbb
sahf
xor
in
jle
call
push
or
mov
mov
loope
mov
and
xchg
sbb
xor
push
testl
movsl
popa
in
xchg
imull
jmp
cli
cmc
jl
lcall
movsl
movsb
mov
or
jne
push
cli
cmpsb
sub
push
jnp
mov
mov
xor
sbb
pop
mov
std
push
imul
aam
push
ret
jbe
call
mov
bound
or
mov
and
mov
sbb
call
dec
or
push
in
imul
ds
pop
loop
cmp
sbb
jecxz
or
add
xchg
arpl
xor
jo
test
das
in
xchg
inc
lock
out
mov
insb
push
les
mov
jmp
cmpsl
jmp
daa
add
hlt
rcll
xchg
addr16
jl
out
stos
into
daa
nop
push
mov
pop
ss
jae
insl
push
and
cs
aaa
aaa
push
sbb
and
push
fists
xchg
mov
sub
pop
ret
adc
jle
xor
pop
fcmove
and
loopne
xor
jge
outsb
jge
cmc
popf
push
scas
je
xlat
sbb
ljmp
or
clc
mov
sarb
aaa
popf
inc
scas
adc
mov
mov
adc
xchg
sti
stos
xor
out
xchg
xor
xor
push
mov
stos
xor
scas
mov
inc
inc
icebp
mov
imul
dec
jecxz
or
pop
mov
mov
push
xor
subb
test
or
sub
and
bound
ret
pop
cld
nop
je
or
lods
shl
push
jle
int3
xchg
dec
mov
mov
cmp
movsb
loop
jns
jge
addb
psubw
xchg
lock
in
xor
mov
data16
add
sub
popf
test
ds
inc
jo
fisubs
xchg
mov
mov
mov
mov
fisubrl
out
jb
fnstsw
sbb
mov
lock
scas
add
xor
lods
adc
mov
push
repz
loop
jecxz
xorl
cwtl
leave
mov
imul
pop
insb
xchg
jbe
sub
pop
adc
pop
imul
sub
out
cmpb
popf
outsb
ret
aaa
push
shr
push
icebp
pop
sub
inc
mov
mov
dec
das
shlb
add
pop
dec
ds
xchg
in
aam
sub
add
jo
in
in
xor
stos
pop
lods
and
pop
adc
aaa
loope
jne
pop
dec
cmp
or
cli
xor
pop
out
jne
pop
dec
arpl
jp
push
imul
mov
stc
adc
xorb
leave
push
dec
test
lock
into
imul
pop
dec
inc
jg
push
dec
int3
addr16
aam
hlt
push
movsb
bound
das
xor
ja
adc
push
mov
mov
in
adc
pop
jns
and
test
cltd
rep
sahf
cli
sbb
push
jno
imul
std
jns
rcrl
sub
jns
sbb
jo
jns
je
add
mov
xor
fcomps
ds
imul
mov
and
push
je
xor
hlt
adc
cmc
imul
mov
adc
in
jmp
jb
std
mov
inc
xchg
push
aam
xor
pop
mov
popf
popa
lahf
and
stos
adc
sahf
jp
pop
xor
xor
pushf
pop
push
lcall
jae
add
push
sbb
das
sarl
roll
push
cmp
test
repz
outsl
jns
int3
dec
sub
jne
adc
stos
fistpl
ficoms
dec
fcmovnb
pop
xchg
js
mov
cmp
cli
mov
mov
mov
sbb
mov
jns
or
mov
add
hlt
or
fsubl
mov
dec
sub
es
scas
aaa
xor
cmp
sbb
enter
inc
std
inc
int3
not
or
pop
pop
fsts
inc
pop
repz
pop
stc
test
push
popf
lret
inc
leave
data16
mov
lds
or
movsl
jnp
ljmp
lods
sub
shrl
dec
scas
repnz
sbb
fcmovnbe
cli
xchg
sub
sub
jnp
xchg
aas
sbb
sbb
push
mov
nop
loop
cltd
int3
cmpsl
inc
jle
cltd
les
mov
sarb
push
and
dec
fisubrl
mov
cs
addr16
mov
insb
gs
mov
push
jmp
mov
dec
mov
fcomps
inc
inc
popa
lds
xchg
js
jp
pop
ror
into
or
xor
push
outsl
lcall
xchg
aas
pop
mov
mov
add
xchg
jbe
call
xchg
lods
outsb
sbb
and
je
mov
icebp
sub
mov
scas
outsl
jnp
test
sbb
xor
es
call
in
cltd
movsl
or
pop
add
cmp
xor
imul
insb
jge
mov
push
loopne
add
jbe
dec
inc
pop
pushf
sub
shlb
cmp
int3
jecxz
icebp
frstor
clc
sahf
push
inc
sub
ds
mov
inc
xlat
cmp
xchg
int
aaa
jb
ljmp
mulb
or
and
mov
xor
loope
sub
xchg
and
inc
xchg
int
xchg
out
mov
cmp
sub
daa
add
fistpll
fnstenv
add
and
popa
fistps
fnstcw
push
inc
and
in
insl
out
push
inc
scas
cmp
out
mov
nop
ret
testb
ret
mov
data16
sbb
inc
xchg
jg
aas
cwtl
insb
mov
mov
or
int
jb
faddl
ret
aas
sbb
rcll
xor
or
adc
xchg
es
test
pop
dec
push
or
insb
test
push
mov
add
sbb
mov
repnz
gs
jl
xchg
shl
cmpsb
rol
dec
jmp
and
sbb
jecxz
xorl
fucomi
test
sub
js
xor
outsl
mov
leave
inc
push
xchg
cwtl
les
shrb
mov
mov
xchg
jg
sub
push
cli
out
push
pop
sub
adc
cmp
sbb
push
ret
enter
pop
dec
cmp
inc
je
inc
sub
dec
ficomps
xchg
and
sub
pop
inc
cmp
sub
jbe
ficoml
sarl
lahf
cli
fisubrs
add
pop
mov
add
mov
daa
and
mov
lods
stc
imul
stos
std
in
fnstsw
cmp
int3
push
sub
mov
arpl
or
xor
scas
pop
daa
stos
push
push
mov
insb
scas
mov
push
into
mov
ret
and
pusha
aas
jge
pop
jo
dec
and
push
leave
sbb
movb
jb
cmpl
jp
mov
push
mov
sbb
push
clc
mov
xchg
test
inc
add
jge
sbb
stos
and
insb
xchg
rclb
lock
inc
mov
inc
add
test
movsl
loope
cmp
cmp
scas
cmp
dec
xchg
mov
jb
xor
mov
shrl
xchg
fs
dec
arpl
push
xchg
pop
imul
cmp
ss
cmp
jle
aaa
jnp
dec
push
inc
cltd
lret
iret
jbe
adc
shlb
movsl
jns
roll
movl
jns
ds
mov
pusha
pop
push
test
movsl
repz
sbb
mov
xor
je
fsubrs
xor
lcall
js
cmp
movsl
adc
cltd
jb
aaa
scas
dec
lret
pop
mov
cmp
cmp
in
shll
mov
mov
out
popf
inc
adc
cmp
and
and
push
test
or
mov
out
lock
sbbl
mov
jno
or
iret
outsl
or
pusha
ja
sbb
imul
cmp
inc
enter
add
xchg
pop
jp
cmp
js
mov
cmpsb
cmp
sbb
push
jp
hlt
jle
mov
xor
bound
dec
xor
mov
mov
inc
or
push
or
dec
xchg
sub
test
mov
aas
mov
mov
fwait
or
inc
data16
inc
jno
xchg
addr16
jo
mov
xchg
mov
imul
loope
cmp
xchg
xor
sub
sub
imul
fiaddl
add
inc
ss
push
fdivrl
fisttpll
aas
in
movsb
loopne
rolb
fisubl
clc
and
xor
mov
sbb
shrl
sbb
xchg
mov
div
loopne
or
out
push
xchg
sbbb
dec
shl
adc
cmp
xchg
int3
rcrl
mov
fwait
push
icebp
adc
dec
div
xchg
pushf
inc
aaa
cltd
mov
out
imul
out
fcmovnu
cmp
mov
xchg
and
outsb
mov
outsl
rcrb
nop
sbb
pop
xor
xor
and
add
scas
inc
outsl
insb
and
in
outsl
xchg
ds
and
insb
pusha
in
test
sub
sbb
cmp
arpl
xchg
add
xor
fsts
leave
in
add
add
mov
pushf
xchg
add
jge
lock
test
add
mov
sbb
jecxz
inc
lret
xchg
out
rorb
jb
jecxz
cmpsb
and
outsb
fistpl
in
add
sbb
sar
fsubr
mov
adc
cmpsl
adcb
lcall
out
jmp
ds
pop
push
mov
movsb
imul
out
sub
sbb
sub
and
aad
cmp
pop
out
adc
imul
xchg
pushf
leave
repz
xchg
aas
jle
push
mov
lock
insl
or
jge
imul
test
addr16
in
cmpsb
in
cmp
stos
xor
and
enterw
cmpsb
daa
jo
daa
dec
jne
ss
mov
adc
cmp
inc
daa
jl
ja
sarb
mov
inc
mov
fldt
mov
jno
and
pop
fbstp
mov
outsl
or
jp
add
test
xor
adc
sub
call
fnsave
and
inc
fs
movsl
xlat
and
movsb
mov
std
fstpl
push
aas
pop
movsb
xchg
push
shll
out
push
pusha
frstor
jno
jge
jle
test
push
orb
mov
cmp
ret
in
inc
dec
pop
iret
ja
shl
sbb
fsubrp
push
mov
inc
ja
fadds
stos
mov
adc
gs
dec
out
mov
sbb
popa
lods
fisttps
int3
pushf
into
das
and
pop
loopne
mov
insl
lods
shlb
dec
outsl
cmc
sahf
jl
ds
jg
int3
cmp
cli
rclb
ss
or
faddl
inc
mov
mov
imul
pop
ret
cmc
mov
inc
add
jmp
xor
leave
xchg
hlt
scas
test
lock
pop
inc
pop
and
js
cld
sti
jle
pop
cmp
in
shrl
sti
and
mov
dec
or
mov
lds
shlb
add
mov
dec
and
sub
and
and
sbb
bound
aas
push
and
xchg
mov
fsubrl
xchg
push
shrl
pop
movsl
xor
test
or
mov
dec
sub
cwtl
movsl
mov
jno
lahf
ja
sub
nop
adc
mov
pop
xor
fdivl
and
pop
addr16
cs
fldenv
adc
int
adc
sub
add
push
adc
test
cs
sub
dec
sbb
jle
fxch
xchg
test
push
data16
into
mov
push
mov
cmp
pop
jle
in
adc
fmulp
test
xor
in
sbb
jbe
sbb
loop
lods
adc
mov
jb
jb
sub
test
push
orl
mov
mov
pop
cmp
xor
outsb
dec
lcall
fwait
dec
mov
or
sub
addr16
cmp
test
stc
repnz
push
and
inc
data16
ret
aaa
xchg
mov
push
adc
xchg
lahf
das
xor
xchg
out
int
gs
loop
stos
fdivs
sub
shrb
mov
test
adcl
and
sbb
or
fnstcw
cmp
xchg
jecxz
mov
mov
es
mov
sbb
mov
xor
sub
sbb
clc
gs
add
inc
imul
xor
or
jge
ds
pop
sbb
jbe
inc
pusha
ja
repz
stos
cmpl
shrl
outsl
inc
popf
movsl
add
jl
sub
xchg
and
repz
cmpsb
xlat
add
jne
or
icebp
add
scas
out
bound
stos
and
and
xchg
cli
xchg
adc
lret
loope
jl
pop
insb
aaa
pop
fmul
mov
cs
jge
adc
sbb
jbe
scas
sbb
cmp
add
xchg
adc
je
sub
pushf
push
mov
test
xor
mov
cmp
notl
fldenv
mov
ds
insl
pop
or
dec
sbb
cmp
mov
dec
test
loop
dec
cli
mov
jae
sbb
adc
insl
xchg
fisubrl
imul
dec
mov
mov
inc
xchg
daa
xor
inc
jp
push
mov
bnd
mov
push
jnp
lea
into
movsl
div
adc
imull
pop
mov
jb
jge
mov
jns
sbb
mov
loopne
enter
jno
or
andl
pop
or
out
cmc
jg
pop
test
jmp
jne
and
iret
cld
fsubs
push
mov
adc
mov
aad
jae
ret
ljmp
in
cltd
addb
repz
xor
cmpsb
xchg
fcomps
sbb
push
aad
rcll
cmc
ret
xor
pop
adc
scas
andb
push
or
in
insb
jl,pn
mov
fucomip
sub
insb
sarb
std
ficompl
jns
outsb
cld
cmp
cmp
xchg
lret
xor
dec
jmp
iret
imul
dec
lret
xlat
out
cwtl
stos
inc
mov
push
movsl
dec
jecxz
cmp
pop
mov
repnz
mov
loope
mov
dec
mov
movsb
test
fldcw
push
sub
repnz
fdivrs
jae
jle
lret
push
call
imul
push
out
cwtl
jae
mov
mov
xor
scas
mov
adc
inc
jnp
insl
out
push
dec
dec
scas
xchg
xor
inc
arpl
dec
mov
and
aas
and
loop
sub
mov
idivb
lcall
lods
inc
call
pushf
adc
fldcw
sbb
fmul
popw
ret
ja
stos
cmp
push
cmp
inc
xchg
mov
test
cmp
inc
imul
ret
push
sub
jge
xchg
xor
cli
cli
rcll
cmp
pusha
jle
pusha
scas
sub
mov
mov
push
and
push
inc
and
jnp
jnp
clc
scas
popa
cltd
movsl
sub
in
lds
lret
or
mov
in
int3
stos
sub
test
cmpsb
or
sbb
push
jnp
sbb
insl
cmp
hlt
push
or
ret
mov
nop
push
or
mov
push
push
lods
jo
mov
je
jge
mov
push
mov
cli
jnp
mov
sub
push
cltd
ljmp
scas
outsl
xor
aaa
jle
jns
sbb
sub
xor
into
adc
jecxz
push
inc
and
mov
aaa
in
es
shlb
push
lcall
xchg
jecxz
sar
push
call
js
aam
xor
je
xor
sbb
fisttpll
je
pop
nop
aad
incl
cmp
movsb
fstpt
ret
and
sub
inc
add
out
adc
stos
add
fcmovnb
and
push
daa
sbb
xchg
das
test
cltd
fs
shl
sub
add
inc
imul
pop
sbb
xchg
mov
mov
outsb
push
pop
pop
mov
lods
mov
inc
in
insl
push
mov
add
inc
xchg
pop
or
jno
das
cld
dec
adc
or
testl
push
orb
and
mov
shl
sbb
fmulp
or
xor
cmp
lods
int3
xor
sub
xchg
inc
andl
xor
mov
mov
or
pop
xchg
in
jb
aam
add
and
leave
mov
cltd
insl
sbb
lods
mov
sub
arpl
clc
adc
test
ja
jl
fsubs
pop
jmp
clc
pusha
test
jns
jecxz
or
cltd
xor
and
jp
adc
in
mov
mov
and
aam
scas
cmpsb
pop
dec
cmp
xor
movsl
xchg
movsb
cmp
pop
sbb
call
test
mov
hlt
jae
clc
xchg
xchg
in
test
mov
mov
aam
lock
cmp
inc
fstl
into
fidivrs
cmpl
test
sub
or
das
int
xor
imul
imul
pop
push
jecxz
es
fmuls
outsb
dec
xor
dec
aad
lds
mov
pop
add
mov
jno
add
inc
mov
addb
adc
and
mov
mov
in
in
xor
lcall
push
negl
push
fwait
mov
mov
pop
outsl
jge
push
xchg
mov
adc
ficoml
pop
sarl
lret
xchg
dec
cmp
gs
mov
les
pop
in
movsl
test
adc
inc
dec
lock
fwait
cwtl
shl
cmp
sar
adc
mov
fucomi
adc
mov
in
imul
fistps
fsubrs
xchg
mov
xorl
aam
jle
pop
rcl
sahf
xor
lret
mov
in
jo
out
pop
scas
or
sarl
jae
pop
mov
inc
dec
sbb
push
push
fstp
shl
mov
inc
cmpsl
loop
and
or
in
out
nopl
addr16
jle
je
xchg
insb
shll
mov
test
mov
xor
add
out
add
aaa
dec
in
cli
sarl
repnz
push
cmp
mov
outsl
sub
out
out
addps
idivb
xchg
dec
movsb
sub
inc
sbb
adc
sub
inc
mov
cli
call
cld
pop
ss
shll
bound
add
shll
inc
jno
dec
test
adc
dec
rorb
ret
ret
or
xor
movsl
in
pop
or
dec
pusha
fxch
imul
pusha
mov
sub
in
mov
out
xchg
rorb
cmp
cli
xor
mov
push
push
stos
cmp
fimuls
inc
mov
add
je
stc
scas
stos
xchg
xchg
fwait
das
push
lea
cwtl
xchg
or
sbb
dec
cmp
cli
and
mov
push
cmp
push
les
sahf
loop
mov
in
lahf
outsb
jbe
jo
cmpsb
mov
jp
mov
les
add
cmp
jne
push
mov
or
xchg
dec
xchg
std
mov
sub
jne
sub
std
mov
add
ret
stos
mov
mov
out
test
jp
jb
jl
add
cmp
jbe
stos
aad
inc
incl
movl
mov
jecxz
push
negw
pop
cmpb
loopne
inc
iret
inc
push
sub
sub
cs
arpl
fwait
sbb
sub
sbb
add
sub
leave
dec
inc
mov
mov
jg
enter
iret
mov
mov
ljmp
aaa
rorb
scas
push
mov
inc
repnz
adc
out
add
push
out
pop
add
stos
cmp
pop
cs
pop
cmp
mov
mov
dec
mov
mov
test
cmp
test
inc
xchg
mov
mov
pop
cmc
loopne
mov
cmp
in
cmp
call
lcall
ret
xchg
outsl
mov
jns
cmpsl
push
xor
cld
idiv
cmp
roll
jae
xor
leave
rcll
fisubl
push
push
xor
mov
adc
push
adc
push
add
add
inc
and
subl
mov
jns
fs
push
repnz
cmpsb
and
jmp
stos
sub
sar
sub
lods
cmpsb
add
push
jb
iret
test
fistpll
es
into
ret
ret
sub
xchg
or
repz
sub
dec
test
xlat
jge
fmuls
push
das
jg
sahf
call
cmc
push
clc
sahf
ret
jbe
das
pop
inc
notl
lcall
iret
cmp
pop
add
clc
cmp
mov
inc
sub
lock
clc
xlat
pop
aad
pop
xor
pop
rcll
aam
pop
inc
sti
xchg
mov
ds
jmp
or
adc
popf
mov
xor
mov
jg
in
out
adc
popa
dec
sub
arpl
imul
sarl
dec
add
xor
cmc
push
mov
sub
mov
cli
daa
inc
gs
cltd
xor
lock
lea
pop
push
insb
loopne,pn
xchg
sub
imul
into
addr16
inc
xor
fmull
int
lret
sub
mov
dec
aas
fs
cwtl
ds
jmp
inc
mov
jb
in
inc
jb
cltd
je
lahf
rcr
aam
mov
push
push
or
xchg
push
jns
jns
enter
sub
div
dec
jge
xor
andb
es
jb
xor
scas
insb
sub
sub
pop
jmp
divl
dec
outsl
add
movsb
adc
cwtl
push
cmp
mov
jl
pop
lea
mov
loop
jbe
xorb
int
jb
push
inc
cmp
pop
sub
pop
inc
into
pop
mov
js
call
xchg
xor
sarb
mov
add
out
stos
ss
in
jecxz
add
mov
into
lods
push
decb
sbb
pop
fwait
ds
fbstp
or
xchg
pushf
push
and
imul
arpl
rcrl
in
fldl
data16
push
and
jecxz
xor
mov
push
imul
or
add
movsb
popa
fmul
mov
ficomps
hlt
mov
pop
loop
sbb
or
inc
aaa
lcall
shlb
outsl
lea
insl
outsl
add
fdivrs
dec
int3
dec
ret
xchg
mov
mov
fsub
xchg
jns
testl
push
ret
mov
rcll
xchg
enter
in
mov
cld
pop
mov
test
xlat
and
and
xor
in
out
cmpl
fwait
push
push
cmpsl
pop
popa
cs
jns
pop
push
leave
adc
lahf
shll
daa
inc
lret
loopne
aaa
out
dec
ror
cmp
mov
ss
dec
outsl
ja
xor
or
xor
in
sub
mov
fwait
popa
scas
push
into
cmpsb
icebp
mov
aas
jle
lods
dec
cmpsl
daa
push
mov
js
les
fidivrl
sbb
out
out
sbb
mov
gs
jo
push
outsl
adc
jecxz
lea
cltd
aam
or
cmc
mov
fidivs
sbb
nop
inc
fcomip
icebp
jp
shld
bound
mov
xor
adc
adc
jbe
fwait
push
push
mov
adc
mov
jp
out
xor
xor
jns
mov
out
mov
outsb
adc
inc
push
jo
lock
inc
mov
bound
jns
mov
push
mov
mov
pushf
pusha
pop
adc
xor
push
lods
pop
jp
int3
ret
cmpsl
sti
cltd
xor
adc
push
pop
mov
shl
stos
cwtl
ja
dec
or
scas
dec
and
rcr
mov
jae
pop
leave
xchg
sub
dec
push
out
test
ret
fmuls
pop
imul
test
popf
sub
out
mov
push
sbb
jns
pop
je
jns
addr16
add
mov
test
cs
and
sbb
push
mov
orl
in
and
rcrb
pusha
and
mov
and
xlat
test
add
rcrl
and
aaa
movb
jae
daa
adc
insl
cmpsl
movsb
inc
je
inc
xorb
push
push
mov
cmp
jns
jae
inc
iret
mov
jmp
xchg
jb
int3
cmpb
inc
hlt
add
call
addr16
adc
lcall
ss
mov
loope
sahf
xor
lods
dec
pop
push
rorl
pusha
dec
dec
jbe
lahf
mov
icebp
cmp
rcrl
ja
sub
daa
adc
sub
aaa
lret
cmpsb
adc
sub
shrl
adc
or
dec
rcll
stc
in
jl
shlb
out
xchg
push
out
lea
adc
out
scas
cmc
push
mov
pushf
lea
sarb
or
jo
je
mov
push
sub
rcrb
shll
xchg
je
into
mov
iret
daa
jg
loope
xchg
or
push
mov
sbb
mov
std
in
inc
test
dec
pop
add
out
and
test
sbbl
cld
test
mov
push
or
add
add
push
mov
sub
and
xor
scas
lock
dec
xchg
ljmp
addr16
sbb
js
sub
mov
and
pop
aad
mov
cmpsl
dec
push
inc
cmp
inc
jmp
addr16
mov
fmul
bound
js
pop
inc
lret
dec
repnz
lods
gs
sbb
mov
mov
andl
mov
fmuls
mov
adc
pushf
xor
cmp
daa
mov
push
mov
out
lock
rorl
in
lret
sbb
mov
ficompl
sbb
pop
mov
and
addr16
jl
or
in
jno
pop
int
mov
pop
pop
xchg
or
mov
sbb
xor
jae
movl
add
pop
add
cltd
inc
jno
fisubl
ljmp
lds
add
sub
ss
and
pushf
in
add
imul
fwait
ja
xor
cmp
nop
mov
lock
into
cwtl
mov
push
fdivrs
hlt
xor
in
mov
adc
lods
in
les
sub
popf
es
push
out
loop
inc
sbb
push
cmp
in
push
pop
jge
add
iret
and
int3
lret
fdivl
enter
xchg
outsl
jne
cld
stos
pop
daa
mov
movsl
scas
iret
mov
mov
xchg
push
fs
popf
cltd
mov
add
lcall
js
jns
lret
gs
inc
mov
sbb
das
in
xchg
mov
jbe
xchg
aas
aas
cmpsb
int
mov
stc
dec
push
std
sub
lods
xor
iret
out
mov
popf
sti
fldl
mov
lahf
enter
xchg
mov
fs
lds
xor
cmc
insb
test
sbb
les
in
and
push
fidivrl
push
sub
inc
mov
subl
scas
addr16
cmp
push
ret
movsl
ret
xor
mov
adc
into
arpl
jecxz
xchg
scas
pop
push
popf
aas
jne
xchg
lock
jl
out
xlat
cwtl
movsl
scas
xor
cmp
mov
push
mov
or
sbb
mov
cmpsb
jb
std
aaa
lret
lods
mov
and
xchg
iret
cmpsb
push
or
mov
dec
aas
bound
jl
push
das
push
mov
push
add
xor
dec
mov
mov
cmp
shl
ss
jno
out
lods
inc
cmp
push
in
or
cmpsl
push
mov
outsb
test
out
leave
orps
cmpsb
rolb
cmp
and
xchg
hlt
mov
adc
pop
cmpsb
pop
mov
out
dec
pop
sahf
aam
sub
in
pop
fcmovnb
loop
pushf
jle
dec
dec
subl
lahf
inc
jmp
mov
cli
mov
push
xor
rcll
sbb
gs
mov
pop
and
xor
jb
inc
ds
and
and
xor
jmp
pop
outsl
cltd
sub
push
and
adc
sub
pop
sbb
sbb
xor
dec
test
dec
pop
inc
xchg
cmp
inc
and
pop
cwtl
fwait
and
xchg
push
enter
jno,pt
xor
mov
push
push
mov
xchg
mov
dec
mov
or
and
xchg
mov
mov
or
call
sbb
sbb
and
hlt
fildl
xor
enter
mov
adc
fwait
cmp
lea
pop
cmp
jo
andl
cmpb
dec
movl
and
jns
out
lds
aas
repz
adc
push
and
lret
mov
stc
jg
mov
or
mov
dec
push
lahf
mov
jb
inc
dec
xor
out
test
lock
rclb
loop
es
push
out
addr16
cmp
clc
movsb
adc
and
cmpb
pop
dec
mov
dec
push
sahf
pop
stos
jle
pop
sub
dec
jae
mov
sbb
or
dec
dec
mov
xchg
in
sub
push
icebp
pop
insb
or
jecxz
or
jmp
dec
and
vmovaps
push
jno
outsl
out
push
and
and
xchg
js
imul
outsb
dec
bound
push
push
inc
test
aaa
pop
mov
inc
pusha
pop
mov
inc
dec
jmp
sub
outsl
sub
push
loop
jl
arpl
fwait
in
rorl
pusha
mov
jecxz
jl
cmp
lock
pop
push
mov
and
dec
adc
imul
outsl
sub
sahf
sub
sahf
lds
arpl
xor
sub
cmc
add
xor
inc
nop
pop
jbe
je
pop
aas
stos
push
mov
leave
ljmp
xor
stc
lea
mov
push
adc
jge
pop
add
push
mov
jp
push
in
ljmp
mov
pop
fsts
mov
push
iret
popf
cmp
mov
inc
push
xor
fwait
or
mov
fimull
jecxz
out
jl
out
mov
out
jbe
push
rcrl
dec
sbb
mov
xor
ficoml
cmp
inc
nop
loop
xchg
dec
cwtl
cltd
je
mov
push
scas
std
cmp
inc
in
pop
inc
jmp
aaa
pop
fldt
sub
shrb
push
leave
mov
xchg
push
xchg
cmp
andb
loop
es
out
out
mov
out
inc
mov
outsl
xor
imul
push
mov
decl
dec
shrl
sbb
xchg
mov
lea
push
imul
mov
and
cmp
popf
cmp
clc
add
push
pop
sti
pop
jne
inc
repz
mov
jnp
or
test
stc
aas
inc
hlt
push
sub
dec
or
lods
or
ds
pop
jbe
mov
mov
lahf
lea
lahf
dec
imul
mov
push
dec
and
shl
lret
arpl
shll
ja
ficoms
push
jle
das
push
push
fidivs
sbb
xchg
or
and
repz
fnstcw
insb
inc
jecxz
je
adc
push
jl
call
xchg
sahf
sbb
pop
enter
out
int3
mov
mov
cmpsl
cwtl
sub
in
fsubl
mov
jmp
xchg
sub
cmpb
es
in
or
movsl
lret
jnp
dec
lock
jmp
and
and
dec
arpl
inc
outsl
popf
data16
jbe
jl
xor
push
je
sbb
cmp
ret
and
fdivrl
lahf
repnz
jbe
fs
fisubrs
or
mov
rcll
andl
fmuls
and
in
adc
and
test
push
push
dec
and
in
inc
cmp
mov
cmp
test
xchg
cmpsb
dec
fwait
and
das
sub
or
mov
in
and
fistps
or
dec
movsl
cli
notl
sub
ret
loopne
ret
xchg
push
sbb
in
mov
test
jns
mov
aaa
cmp
jl
push
mov
notl
bound
adc
out
inc
insb
out
loop
xchg
xchg
sub
outsl
mov
dec
cmpsl
jbe
adc
xor
and
adc
leave
jge
jp
inc
dec
lret
call
test
lahf
fildl
arpl
sub
subl
jge
repnz
push
jae
lods
sbb
jge
xchg
aaa
subl
les
rorb
push
mov
mov
mov
cmp
mov
std
xor
shl
xor
rcl
push
daa
jecxz
mov
loope,pt
orl
sub
mov
add
pop
pop
inc
add
ret
xor
sarl
je
jne
mov
push
xchg
stc
ljmp
jnp
and
out
dec
cmp
pop
jnp
cmpsb
inc
pop
xlat
mov
sbb
inc
js
fxch
jle
inc
loope
add
fdivrl
test
jmp
jne
sti
cli
mov
sahf
jl
call
push
neg
fld
ret
adc
lock
je
cmp
shrl
pop
fsubs
loop
mov
gs
mov
xor
ja
jmp
jbe
les
ret
jae
sbbl
or
cltd
xchg
jo
negb
dec
in
pop
bsr
popa
xchg
xor
push
je
stos
mov
pop
std
push
jbe
push
out
popf
pop
pop
xorl
add
test
xchg
mov
dec
sub
std
sbb
imul
movsb
mov
cmc
hlt
push
and
or
in
inc
gs
sub
mov
repnz
xor
add
cmp
or
inc
mov
lret
out
xor
aam
xchg
mov
cld
cs
pop
pop
repnz
mov
jle
lods
push
mov
cli
or
push
lods
cmp
xor
arpl
dec
sbb
inc
cmp
dec
jmp
inc
sub
jb
adc
cmp
pop
cmpsb
inc
test
mov
push
add
es
rorl
lret
push
mov
mov
out
add
push
cmp
dec
cs
xor
hlt
fldcw
cmc
inc
js
jle
add
mov
stos
sub
push
xchg
mov
cmp
pop
jge
lea
sbb
push
adc
jns
movsl
xor
outsl
sub
inc
pop
out
jae
pop
arpl
pop
sbb
dec
cmp
cli
xchg
inc
loope
into
cmpsl
call
inc
or
call
xchg
inc
in
mov
lahf
es
jecxz
xor
xlat
and
enter
pop
push
jecxz
sbb
cli
popl
repnz
or
iret
or
dec
lods
out
mov
xor
xchg
mov
pop
sbb
stos
sbb
scas
fucomp
ret
push
jge
inc
icebp
stos
pop
rcrl
fcompl
mov
das
xchg
mov
jno
lcall
bound
add
mov
sub
clc
push
sub
lea
push
into
push
out
adc
cld
ja
and
jae
add
or
xchg
jmp
pop
popa
js
cmp
lock
iret
in
sub
jmp
icebp
xchg
lods
jb
cwtl
cwtl
push
fdivrs
inc
adc
shll
or
or
push
int
out
ss
or
push
and
rorb
subl
movsl
inc
cmp
xchg
push
lcall
stos
std
in
add
pop
movsl
push
xor
mov
adcl
pop
insl
fistl
dec
xchg
jmp
cmp
nop
cmpsl
pop
xchg
jbe
inc
mov
push
jl
hlt
push
jecxz
cld
push
ds
inc
shlb
repnz
subb
add
pop
sub
movsb
hlt
leave
outsb
in
add
mov
sub
mov
push
push
dec
outsl
pop
clc
imul
pop
xor
fdivl
push
push
fucomip
push
xchg
mov
sub
mov
mov
and
iret
pop
bound
fiadds
mov
sbb
dec
add
cld
stos
loop
sahf
jns
sbb
mov
lds
mov
push
sar
aaa
mov
cmp
and
out
and
aas
mov
cltd
repz
sbb
aam
and
test
or
jno
jge
xor
mov
fisubrs
pop
scas
mov
add
adcb
mov
xchg
popl
xor
ror
dec
cmc
out
mov
cmc
xor
jae
rcl
lret
lcall
adc
jne
jo
jbe
sub
sub
pop
pop
stos
mov
sub
movsl
sbb
fs
insb
fxtract
dec
rorb
fwait
sbb
stc
cld
pop
and
loop
lcall
rcll
out
getsec
cli
filds
aas
adc
ljmp
mov
adc
shr
mov
or
xchg
pop
ds
lods
adc
xor
or
bound
xor
cld
ds
pop
popl
xchg
push
mov
test
cmp
enter
clc
nop
mov
lcall
xor
push
cmp
push
cli
xchg
mov
pop
les
popf
lock
cmp
in
xchg
stos
cmp
pop
jbe
add
adc
mov
push
enter
arpl
mov
daa
cmp
mov
jb
lods
repz
loope
sub
xchg
dec
cltd
add
je
mov
add
sbb
sbb
lods
push
mov
sti
pop
inc
fimull
push
fiaddl
mov
imul
cld
movl
out
add
je
and
fs
imul
nop
dec
fisttpll
cmc
push
cmp
fistl
arpl
add
negb
inc
jb,pt
xchg
xor
mov
inc
pop
std
aaa
xchg
or
xor
adc
dec
jne
pop
inc
in
idiv
not
mov
jo
xchg
push
sub
and
lea
and
xchg
and
movl
test
mov
xchg
fisubl
or
add
dec
cld
orl
mov
lds
sub
rclb
ljmp
mov
shlb
in
cmc
std
cmpl
cmp
aas
pop
outsl
ja
lret
out
xchg
clc
addr16
cltd
dec
mov
orl
add
cmp
jecxz
mov
shlb
aaa
fs
adc
pusha
roll
jo
jmp
xor
jne
lea
rol
lea
mov
mov
lods
push
mov
scas
inc
cmp
mov
mov
or
cmp
lea
mov
sbb
std
cmp
dec
pop
push
in
andb
std
bound
add
push
inc
stc
icebp
dec
insb
iret
pushf
dec
mov
out
or
lods
fldcw
sbb
in
xorb
pusha
pushf
xorb
out
addl
lods
shrl
int3
call
mov
jl
shrb
xor
popf
push
jge
insl
rolb
sub
xchg
das
rolb
and
jno
adc
dec
std
nop
int3
fnclex
movsb
cwtl
pop
leave
lret
xchg
push
mov
push
and
add
stc
jbe
clc
testl
adc
aas
jp
mov
inc
pop
aas
and
pusha
aam
sub
push
in
insl
iret
inc
out
idivl
xchg
mov
sti
pop
dec
mov
imul
gs
mov
cmp
xchg
outsl
lods
pusha
adc
int3
jecxz
je
xor
out
scas
test
sub
nop
cmc
les
pop
cmpsl
xor
push
push
push
cmp
cmc
lock
inc
ret
insb
addb
ret
out
push
clc
inc
cmp
nop
fwait
adc
rorl
mov
mov
cmpsl
in
cmp
out
jne
or
es
xor
mov
in
mov
cmpsb
test
jle
mov
jo
shlb
rcr
cmp
mov
xor
sbb
gs
cli
inc
rolb
fimuls
cmp
scas
aas
test
popa
lret
fbstp
cmp
push
repz
ja
cmp
test
push
adc
pop
enter
imul
out
mov
gs
xchg
mov
shl
cmp
frstor
imull
mov
or
int3
in
adc
ret
xchg
or
dec
xchg
adc
cli
xor
into
fnstcw
xorb
sub
sub
push
mov
xor
data16
mov
and
out
and
add
inc
push
pop
inc
push
loop
mov
inc
sti
loope
popa
mov
shr
out
cmpsl
add
cld
push
movsl
divb
imul
cmp
and
mov
or
aas
clc
sbb
loope
dec
mov
subl
pop
stos
sub
adcb
int3
and
sbb
jmp
int3
or
in
jge
inc
in
fstpl
mov
nop
int3
jecxz
sub
mov
xor
pop
jnp
gs
imull
out
mov
adc
outsb
mov
pop
or
push
ret
mov
mov
jp
fisubrs
xor
adc
in
popa
sahf
jecxz
in
mov
mov
push
call
xchg
ds
std
pop
sahf
insb
mov
jmp
out
jo
inc
sub
adc
not
and
sti
sbb
mov
adc
mov
xchg
gs
lahf
mov
cmovp
lods
loope
out
lahf
pop
xchg
ja
roll
mov
xchg
xor
inc
mov
cmp
icebp
repnz
aaa
stos
push
adc
pop
iret
cmp
out
adc
cmp
mov
cs
mov
mov
in
not
inc
out
push
es
aad
repz
xchg
repz
sbb
scas
sbb
mov
pusha
gs
push
hlt
lock
addr16
push
ljmp
rol
pop
clc
mov
cli
mov
insb
push
call
mov
xchg
dec
out
inc
xor
mov
pop
fdivr
in
jg
in
js
pop
mov
mov
push
movsl
dec
std
sbb
fidivrs
xchg
sbb
xlat
push
xlat
nop
addr16
es
test
and
push
push
add
inc
aam
cmp
cmp
movsb
out
ret
sbb
ss
sbbb
cmp
sbb
jne
jb
das
jmp
mov
outsl
xor
pop
leave
std
loop
xchg
jge
or
dec
dec
jl
inc
pop
push
dec
cmp
fcomi
jae
mov
mov
push
lret
adc
lea
dec
loop
lea
sahf
or
mov
daa
or
sbb
iret
sub
repnz
push
sbb
outsl
sahf
and
lds
jg
dec
cli
cmp
cs
in
popf
jne
jns
and
xchg
cmpl
ja
sbb
sbb
cmp
sbb
xchg
das
lds
xchg
cmp
rcr
jno
cmc
adc
push
loopne
xorb
mov
add
bound
jbe
add
push
in
inc
lcall
push
xlat
out
pop
mov
push
cltd
ret
mov
lds
mov
adc
dec
sbb
mov
inc
stos
repz
lds
sub
mov
push
jl
scas
dec
inc
pop
jmp
fisttps
xchg
movsl
adc
lahf
aad
lods
sbb
out
outsb
sarl
xchg
fildl
or
xchg
pop
repz
mov
rcrb
dec
or
aaa
mov
movsl
out
xchg
test
dec
bnd
adc
add
cmp
inc
int
sbb
and
loope
mov
push
mov
out
jp
xor
cli
lret
pop
enter
lret
jnp
popf
mov
out
pop
stos
test
xchg
push
inc
test
jne
xchg
orl
nop
mov
aad
cmc
imul
xlat
fstps
pop
jns
lahf
scas
outsl
sub
add
incw
mov
jnp
inc
ja
rcrb
or
adcb
es
jbe
ficompl
mov
inc
ret
sub
dec
and
test
cmpsb
push
testl
out
lahf
fwait
pushf
xchg
mov
das
out
push
stos
arpl
jo
incb
addr16
lret
xchg
aaa
je
jb
movsb
data16
pop
mov
xchg
adc
insl
fdivrs
jle
dec
flds
and
hlt
fdivs
mov
dec
ljmp
jne
sahf
lahf
cmpsl
jae
icebp
aad
int3
xor
ret
adc
and
ja
mov
inc
add
dec
repz
sbb
and
or
mov
repz
xor
mov
jo
mov
push
sahf
xchg
fucomip
andl
xchg
pop
sbb
xor
cmp
nop
mov
jae
or
aas
add
push
scas
mov
fbstp
jmp
stos
cld
repz
data16
or
or
cs
sub
sub
adc
xchg
xchg
out
decb
mov
pop
movsl
sahf
jl
xlat
es
cmpsb
dec
aad
dec
inc
xor
out
mov
lods
sbb
xchg
popf
inc
push
xchg
jg
sub
in
leave
pop
add
lds
xchg
and
jns
mov
jae
inc
pop
fldcw
js
adc
cld
in
fsubs
pop
add
or
imul
cmp
aas
aad
pop
cmp
je
mov
ret
push
mov
mov
inc
test
daa
mov
outsb
aam
and
cmp
outsb
popf
dec
insl
xchg
or
push
xchg
pop
int3
loope
movsl
lahf
pop
rcr
stos
xor
lods
daa
mov
push
mov
jg
std
dec
xchg
pop
inc
mov
sti
sbb
dec
pslld
adc
in
call
into
jle
mov
jnp
xchg
jmp
negb
iret
mov
mov
rclb
icebp
mov
or
ds
push
jnp
mov
add
pop
pop
dec
jge
mov
adc
push
or
lret
and
mov
push
aas
das
into
in
jg
repz
stos
xorb
mov
movsl
divl
mov
inc
lods
stc
xor
push
jae
jmp
fldl
sbb
and
fwait
test
shll
bound
xchg
add
jmp
push
mov
lcall
leave
fcoml
pop
inc
aas
xchg
mov
loop
js
test
add
jle
insl
rcrl
scas
xlat
jl
push
fcompl
gs
lea
jno
cmp
jl
out
mov
push
xor
pop
sbb
addr16
mov
sub
incb
ja
out
add
enter
jp
fnstenv
roll
inc
icebp
xchg
in
das
jg
les
adc
in
or
imul
loopne
imul
fs
rcrl
mov
and
and
dec
jbe
push
cmpsl
or
sbb
mov
xlat
rorb
cmp
push
and
in
xchg
call
jb
popa
dec
mov
fsubrp
xor
lds
pop
lcall
adc
int
mov
insb
lret
loope
call
jbe
cld
adc
ud0
pop
lea
cmc
int
add
icebp
jae
mov
or
pop
push
pop
or
enter
mov
xchg
xchg
test
iret
push
stos
jne
xchg
in
mov
dec
sbb
std
xchg
pop
es
pushf
repz
xor
arpl
loope
test
pushf
addr16
mov
gs
xchg
lcall
daa
jp
fwait
or
add
inc
push
jno
mov
imul
jmp
xor
mov
xchg
das
aad
pop
jns
in
push
add
enter
and
or
inc
icebp
add
stc
icebp
sbb
mov
mov
push
out
push
cmpsl
imul
in
dec
test
mov
mov
lock
dec
adc
in
jnp
cld
and
jp
adc
sub
cmp
and
xchg
test
into
lahf
lods
test
out
shrb
sub
sahf
addr16
gs
xor
dec
in
shlb
xor
jno
orb
pop
mov
imul
das
negl
fistpll
or
lahf
xchg
sti
adc
mov
pusha
mov
stos
out
push
mov
xor
andl
push
push
cmpsb
mov
pop
out
rclb
push
in
jae
popa
fidivrs
pop
lods
aad
mov
in
sbb
ficompl
dec
mov
adc
aas
cmp
push
mov
lock
addr16
iret
mov
ljmp
jmp
jp
or
jb
jno
dec
fucomi
sbb
scas
filds
dec
in
movsl
mov
cmpsl
or
mov
xor
lret
inc
cmp
xchg
stos
mov
mov
loope
mov
int
cmc
sbb
and
pop
cs
pop
into
mov
cs
out
out
sub
fists
cwtl
leave
dec
cld
jg
adc
cmp
xor
aad
jp
notl
cwtl
loope
cmp
adc
mov
mov
fxch
xchg
and
dec
test
dec
jns
mov
dec
clc
andb
in
arpl
jge
pop
std
or
insb
or
sub
mov
mov
fists
mov
flds
mov
inc
pop
jecxz
lret
sbb
add
push
lret
and
cmpsl
imul
mov
xchg
adc
lret
mov
pop
jge
mov
incb
xor
cmpb
inc
mov
push
movsb
jl
jbe
ret
cmp
shl
repnz
imul
clc
lea
rcll
int3
outsb
leave
mov
xchg
les
lock
addb
sub
inc
or
shrb
push
lock
mov
ljmp
loop
jmp
int3
mov
sub
and
and
cmp
mov
jne
mov
insl
cmp
mov
jns
insl
imul
or
push
adc
xor
and
sub
test
adc
ficoml
repz
les
xchg
out
in
andl
add
pop
scas
int3
or
or
mov
out
and
xchg
es
cwtl
push
fs
movb
pop
pop
pushw
sbb
mov
fcoms
pop
jnp
aaa
out
add
sub
xchg
stos
add
jmp
sarb
add
inc
ss
sbb
sarb
or
cmp
aaa
fbstp
or
pop
cld
loope
int
xlat
js
fmuls
sub
outsl
adc
mov
xchg
jo
fs
call
add
fisttps
xchg
xchg
rcrb
lret
fwait
dec
xor
and
xlat
ds
mov
cmp
daa
gs
ret
cli
xchg
jp
pop
sub
mov
roll
xor
or
ja
pop
adc
loope
call
xlat
subl
pop
push
dec
pushf
enter
pop
sub
aaa
hlt
insb
fisubrs
pop
and
xchg
jle
cli
push
lahf
mov
neg
xor
pushf
imul
movsb
test
int
test
je
xor
lahf
push
jae
inc
inc
mov
inc
cmpsl
gs
mov
xor
xchg
fmuls
and
int
fstl
push
jns
mov
fldl
mov
push
push
jge
mov
movsb
jecxz
sbb
sub
inc
sahf
xchg
movsl
or
adc
adc
iret
popa
push
jp
xchg
inc
outsl
cmp
add
pop
mov
das
mov
push
mov
xchg
fcmovu
add
jmp
cmp
aad
sbb
mov
mov
hlt
shll
push
test
loop
xchg
or
xchg
ret
lahf
js
adc
add
sub
jnp
subl
std
xor
sub
outsb
inc
cmpsb
in
test
lret
test
stc
push
mov
pop
mov
xor
sbb
sbb
mov
mov
jmp
lock
xchg
icebp
sbb
movsl
xchg
jno
ret
fwait
lret
fs
mov
lahf
and
push
push
ljmp
sar
dec
aam
sahf
adc
jge
arpl
push
rcr
cld
imul
loopne
jmp
out
dec
aas
jae
out
loopne
rclb
aam
cltd
jg
repz
sti
out
jns
mov
andl
cli
test
ror
test
xorb
fisubs
jne
fcomi
jnp
mov
bound
push
xchg
inc
hlt
mov
into
clc
fs
xor
ret
sbb
add
push
fcoml
dec
mov
lret
aaa
mull
out
inc
mov
xlat
pcmpgtw
sarb
add
jne
cwtl
xor
lahf
jae
push
jp
ret
and
xchg
test
pop
inc
xchg
in
sbb
xchg
pop
push
fcompl
lret
dec
popa
mov
mov
loope
out
imul
inc
std
xchg
lret
in
dec
mov
push
sub
in
lds
jne
mov
xor
push
or
sub
push
inc
dec
je
inc
int3
in
adc
lea
mov
pop
cmove
out
fwait
and
shlb
pop
inc
sbb
fisubrl
lods
adc
push
xor
bound
pop
sub
xchg
inc
orl
xchg
jns
mov
daa
jae
loope
and
and
xchg
xor
hlt
mov
lahf
cmpsl
std
cmpsb
das
mov
fs
mov
imul
add
pop
fidivrl
push
pop
xor
inc
fptan
cmp
dec
xor
lcall
out
pop
scas
adc
xorb
xor
imul
test
aas
xor
dec
xlat
cmpsb
xor
push
push
mov
test
pop
pop
mov
jae
sbb
aas
sbb
adc
inc
or
jl
sub
sub
scas
sbb
rcr
push
out
stos
or
mov
lret
mov
popa
je
inc
test
inc
cmpsl
call
imul
adc
sbb
sti
pop
jno
arpl
ret
add
nop
lret
sbb
cmp
xchg
mov
jmp
bswap
or
dec
cmp
sbb
bound
push
cmp
adc
and
shlb
or
popf
lock
dec
adc
scas
jle
fstps
lock
adc
push
mov
insb
mov
pushf
sbb
inc
das
adc
lret
inc
mov
cmp
cmp
xor
and
and
aaa
xchg
jge
cmp
inc
ss
dec
clc
pop
roll
or
jne
pop
cmp
jns
dec
push
mov
dec
lock
jo
jne
and
cmp
aas
les
or
mov
stc
jns
out
cmp
or
mov
push
xor
mov
ds
cmc
cli
in
adc
std
sarl
mov
mov
in
int3
add
lahf
add
inc
stos
stos
sti
shlb
mov
js
sbb
or
cmpsl
lahf
or
inc
push
or
int
jge
mov
push
bound
out
mov
add
mov
adc
addl
das
cmp
fadd
push
add
add
ret
es
aaa
in
dec
orb
add
clc
add
int3
add
inc
push
jle
push
icebp
dec
add
inc
cwtl
mov
in
aam
aam
inc
sti
and
xchg
inc
andb
sub
aaa
dec
mov
xchg
fiaddl
repnz
ja
or
in
rcrl
bound
xchg
std
pop
adc
jl
repnz
push
lret
test
add
xchg
mov
push
fistpl
lods
iret
es
push
xor
gs
inc
mov
sub
mov
ret
stos
sarl
int3
test
stos
push
test
ss
pop
jbe
and
hlt
test
imul
test
pushf
movsl
xchg
fistps
add
data16
mov
cltd
jle
mov
xor
add
xchg
sub
je
xlat
lds
lds
mov
mov
shll
inc
pop
stos
ss
fsts
in
jns
mov
ds
das
repz
enter
aad
fwait
pop
pop
cs
jbe
test
test
test
mov
push
scas
push
inc
mov
test
lods
das
sub
dec
and
mov
push
arpl
pop
test
cmp
push
xlat
add
inc
ret
les
or
push
pushf
cmpsl
scas
fiadds
rcll
stos
sti
push
lret
das
in
roll
mov
ljmp
js
lds
stc
fbstp
addl
xlat
hlt
inc
cs
inc
push
ljmp
cmp
loope
or
in
xor
sub
sub
jnp
cmp
push
out
pop
aad
or
fbstp
and
inc
jae
adc
cmp
test
pop
mov
dec
mov
or
mov
dec
inc
sbb
sub
or
icebp
or
mov
inc
mov
popa
push
inc
jmp
neg
shlb
xchg
int
cmpsb
cmp
mov
xchg
xor
add
jmp
mov
clc
in
repz
jg
je
leave
sub
lahf
sahf
out
addl
mov
mov
jmp
cmp
inc
loop
mov
lds
loopne
jp
push
mov
mov
fs
pop
push
adc
inc
cmp
xchg
shl
sub
pusha
bound
imul
add
push
and
pop
pop
stos
xchg
adc
das
aaa
fbstp
aad
int
pop
jp
inc
mov
cmpsl
test
test
xor
rcrb
inc
inc
lds
cmp
lock
jmp
imul
mov
dec
sub
test
les
movsl
mov
inc
mov
rorl
push
rcrl
dec
daa
ret
gs
into
test
jns
mov
call
push
movl
je
popa
mov
xor
xchg
fisubl
cmp
lock
mov
push
cmp
dec
clc
pushf
leave
lea
push
inc
sub
arpl
cmpl
jbe
cmp
mov
test
and
jno
outsb
jne
lock
in
jge
mov
xor
mov
push
mov
adc
jnp
filds
add
test
aam
into
loopne
xchg
cmp
jge
jb
idiv
cmp
pop
cld
pop
in
mov
out
popf
push
stos
cmp
lods
and
inc
or
movsb
inc
pop
or
and
addr16
bound
sti
and
loop
pop
cmp
out
pop
mov
sbb
divl
dec
fdivrl
pop
mov
inc
fistpll
stos
sarl
push
pusha
jl
fisubs
inc
int3
xor
pop
pop
dec
lock
dec
sbb
cmp
int
push
int
add
sbb
addr16
xor
imul
aam
fcomi
sbb
mov
jecxz
leave
cwtl
shlb
cmp
iret
sahf
dec
testb
lahf
popa
dec
pop
jbe
xchg
scas
jb
hlt
fldl
mov
cmpsl
adcb
test
fsubl
push
or
enter
push
adc
adc
mov
mov
loop
mov
pop
scas
loopne
cs
sbb
push
xchg
xchg
cmpsb
jmp
int
pop
lret
loop
jmp
movsl
and
shll
ror
push
mov
mov
repz
jl
enter
test
mov
xor
push
mov
hlt
arpl
pop
push
mov
add
shlb
mov
xchg
push
push
test
pushl
xlat
lahf
mov
into
sbb
and
adc
pop
and
sbb
sub
loope
xor
push
mov
je
push
sub
or
push
and
xchg
icebp
cmp
dec
ljmp
inc
les
stos
mov
xchg
std
add
mov
xchg
cmp
adc
std
jne
jne
adc
mov
scas
repz
sbb
mov
clc
rorl
add
dec
fucomi
pop
push
xor
push
out
fisubl
sahf
int3
push
into
pop
and
pop
subb
sti
out
test
rcrl
aas
sarl
flds
pusha
scas
pop
dec
insl
xlat
fs
icebp
jp
mov
rcrl
ja
lcall
sbb
add
js
in
flds
jg
test
call
loope
pop
sub
jb
mov
popa
iret
pop
push
cmp
inc
js
fs
idivl
cmp
test
mov
add
int3
aam
sbb
idivb
push
pop
inc
nop
out
xchg
shll
mov
push
dec
or
cltd
mov
push
insl
fs
cld
or
std
or
mov
mov
ror
sbb
add
add
movsl
push
inc
inc
leave
rolb
mov
mov
popa
ss
xchg
xchg
or
cli
das
fsubr
into
mov
out
jge
in
stos
sbb
mov
shrl
dec
jae
sbb
adc
mov
mov
sub
sahf
mov
add
add
dec
xchg
and
xor
xchg
jno
inc
das
sub
and
movsl
push
pop
adc
test
xchg
mov
fists
xor
sbb
adc
and
fsqrt
je
pop
pop
mov
jb
mov
push
sub
xchg
or
es
mov
dec
mov
iret
xor
shll
push
lcall
push
or
mov
jbe
push
and
mov
and
push
push
shrb
mov
fwait
or
adc
sbbl
jecxz
cmp
mov
lret
sbb
cmpsl
inc
jne
es
icebp
stos
mov
outsb
jge
jb
mov
push
inc
jnp
or
mov
adc
mov
leave
es
or
clc
incl
push
push
cs
in
xchg
rol
loopne
enter
sbb
mov
outsb
fiadds
push
inc
and
sub
pop
mov
jle
and
nop
stos
scas
cmpsb
cmp
push
jbe
mov
sbb
add
pop
xchg
lock
add
repz
iret
sbb
mov
test
repnz
pop
add
jmp
ljmp
xchg
push
scas
decb
orb
scas
mov
call
js
cmpsb
mov
inc
arpl
inc
std
int3
mul
xchg
or
push
ret
xchg
jle
add
inc
loopne
in
pop
cmp
stc
jnp
adc
xchg
inc
jp
rdpmc
push
xchg
add
sbb
fidivl
scas
xchg
jmp
icebp
cmpsb
aad
jne
and
orb
inc
cmp
xchg
lret
fisubs
dec
mov
jnp
ret
push
loopne
leave
xor
pop
xchg
mov
stos
add
adc
xorl
inc
leave
push
xchg
insb
lret
clc
arpl
stos
push
data16
clflush
mov
icebp
pop
insb
data16
shl
js
stc
cli
push
adc
mov
add
ljmp
insb
in
dec
fisubrl
in
jmp
mov
into
push
mov
in
sbb
enter
jbe
std
mov
fnstsw
cmc
int3
jns
sub
mov
push
jb
dec
cmpsl
bound
xchg
push
jnp
cs
test
push
ds
sar
jge
out
adc
push
fstl
call
xlat
cs
rclb
sub
es
mov
pushl
dec
fsubrl
pop
decb
mov
dec
dec
adc
pop
sub
aaa
sub
cmp
pop
mov
addr16
mov
xor
pop
into
mov
xor
pusha
repnz
sub
jge
fisttpll
adcl
pop
dec
add
popf
repnz
sub
adc
sti
cmp
mov
and
sbbl
dec
mov
add
pusha
repnz
and
cwtl
mov
push
loope
shr
in
cmp
cmp
incl
mov
or
cmc
cmp
lret
arpl
enter
out
xlat
or
in
dec
cmpsb
or
mov
sti
jge
xchg
into
fstps
dec
mov
xchg
mov
sahf
or
and
das
rolb
jmp
dec
inc
stos
or
arpl
pop
mov
add
inc
push
push
inc
jno
inc
aam
icebp
orb
xor
xor
sarl
bound
mov
pusha
inc
xchg
sbb
mov
jne
jmp
mov
ficoms
xor
lods
cltd
or
js
sahf
cld
fistps
sbb
ds
and
mov
rol
test
sbbl
out
lds
aam
xor
xor
or
xor
mov
xor
push
jl
jge
rcrb
std
or
pop
and
je,pn
cld
repnz
xchg
div
enter
sti
std
adc
inc
jo
sbb
repnz
mov
sbb
out
and
out
add
scas
xchg
jno
movsb
adc
xlat
out
scas
xlat
cmpl
and
jecxz
push
cmp
mov
lock
mov
mulb
cltd
pop
loopne
fs
lret
arpl
dec
mov
in
jp
jle
outsb
add
add
pop
pop
pop
outsl
lcall
xchg
js
sbb
mov
xor
sbb
inc
push
dec
ja
hlt
in
jbe
pop
and
adc
imul
inc
test
rcr
xor
ds
cmp
sbb
inc
movsl
sbbl
outsb
jo
mov
stos
lret
and
lahf
mov
jb
insl
addl
fmull
mov
xchg
ret
and
mov
cld
cmp
and
leave
jno
out
mov
mov
lahf
rorb
jp
jmp
leave
leave
or
sbb
xlat
push
shll
jns
lds
mov
mov
outsl
mov
dec
push
mov
pop
bound
push
aam
andb
inc
mov
arpl
dec
lret
stos
orb
and
ficoml
cld
jb
jnp
mov
jbe
sub
ds
hlt
mov
cmc
loopne
ds
mov
sbb
and
je
adc
xor
icebp
mov
or
mov
sbb
adc
stc
stos
push
adc
push
inc
mov
mov
pop
out
stos
clc
loope
loopne
cmp
lock
xlat
lds
dec
lds
fimuls
jg
mov
orb
test
add
fsubp
das
cmp
loop
sbb
mov
mov
stos
ja
adc
add
jns
in
cmp
loope
push
xchg
pop
lret
rcl
jmp
cmpsb
add
inc
xchg
adc
lods
roll
inc
dec
inc
jp
mov
mov
xlat
cmpsb
mov
mov
jge
mov
cmp
sub
sahf
push
adc
push
leave
cmpsl
clc
out
push
fdivr
mov
lea
mov
loope
lds
inc
sahf
mov
mov
push
imul
je
aaa
or
movsl
push
mov
mov
xchg
push
sub
inc
scas
and
enter
sub
xchg
arpl
jg
mov
mov
inc
int
pop
jmp
mov
enter
or
into
enter
dec
cmp
insb
sbb
mov
sti
inc
mov
sub
xlat
xorl
cmp
pop
mov
mov
jl
rcl
aam
in
sbb
or
mov
scas
ror
inc
cli
hlt
stc
hlt
sbb
mov
sahf
cmp
cmp
inc
xchg
mov
test
or
out
xor
ljmp
popa
lock
call
hlt
movsb
sub
call
sub
ficomps
stos
repz
jp
addb
es
in
ljmp
sub
lock
dec
pop
fcomps
mov
jg
cmp
xor
xchg
insl
jl
pop
sbb
xor
jle
fiadds
mov
push
inc
xor
mov
sbb
adc
into
xchg
push
cmp
aad
xor
mov
mov
orb
sar
addr16
popf
std
fsubrl
sarl
pusha
stos
mov
pop
mov
imul
jb
mov
push
pop
repnz
push
cmp
jg
jne
dec
xchg
push
adc
xchg
in
xchg
cmc
ret
mov
jae
dec
pop
pop
push
lds
or
jbe
add
jns
adcb
orb
sub
aas
xchg
mov
in
pop
mov
test
std
stos
inc
mov
xor
mov
xchg
clc
mov
mov
dec
sub
ret
scas
push
fnstenv
jg
iret
pop
inc
sub
movsb
cmp
push
xchg
sub
inc
sub
cmp
adc
in
ds
cmp
push
movsb
sbb
mov
testb
adc
adc
lea
inc
insl
push
into
mov
or
add
mov
imul
int3
lcall
lret
lahf
push
sbbb
xchg
jle
mov
ss
adc
sti
xor
lgs
fucomi
loopne
add
aad
add
jp
or
jmp
xor
mov
jg
mov
jge,pt
mov
inc
cs
lods
and
add
xor
sahf
in
jb
mov
das
fcmovbe
pop
js
ljmp
dec
push
daa
cmp
loopne
outsb
aas
fisubs
in
cmp
push
loop
test
push
and
ss
fadds
xchg
mov
dec
jp
bound
xor
or
jl
lahf
scas
shrd
cmp
in
add
insl
xor
ss
jmp
sub
lea
sbb
ds
jno
cmc
popl
or
or
xchg
jecxz
mov
stc
cmpsb
std
pop
cwtl
aam
test
sbb
lods
in
movsl
insb
enter
popa
dec
dec
push
mov
cmc
mov
loope
xchg
arpl
out
mov
xchg
ljmp
inc
scas
jno
xor
xchg
inc
jg
push
push
jne
das
cmp
pop
loope
iret
push
sbb
imul
jns
inc
jmp
repz
es
jle
popf
push
bound
jecxz
iret
mov
cmpl
test
inc
ss
push
fcmovnu
out
mov
cmp
pop
rorb
test
popa
add
test
cmpsl
sub
cmp
sub
adc
cmpsl
xchg
stos
lret
jmp
imul
into
ret
add
int
adcl
adc
cmc
mov
imul
add
jo
jbe
mov
fmuls
aam
pop
mov
push
orb
dec
mov
mov
dec
into
adc
pop
sahf
ret
lds
fsubp
bound
insl
loop
or
xchg
mov
pop
fwait
sbbl
pop
and
lock
push
pop
stos
xor
sub
in
or
xor
jns
jo
ss
mov
outsl
cmp
mov
mov
mov
cmp
and
pop
cwtl
pusha
shll
sahf
sub
sbb
rorb
or
idivb
stos
jmp
or
daa
xor
mov
fwait
jne
jno
fldenv
mov
mov
fwait
data16
jle
and
loopne
xchg
or
mov
insb
loope
sub
mov
out
jnp
stos
call
inc
cmp
mulb
cmpsb
mov
leave
adc
jge
enter
js
adc
push
inc
das
rep
mov
fwait
aad
stos
jge
dec
push
mov
sub
or
callw
dec
dec
loope
out
adc
adc
in
ljmp
dec
or
push
arpl
jo
out
mov
mov
shrl
stc
mov
jle
cmp
jae
fsubrs
jle
rorb
out
outsl
outsb
inc
push
mov
mov
xlat
mov
sar
sub
inc
decb
movsl
stos
sub
aad
outsb
dec
ret
call
sub
ss
push
test
lcall
cmp
jg
mov
hlt
sub
repz
aam
or
xchg
pop
pop
inc
jb
cmpsb
int
out
add
repnz
jne
xchg
call
pop
inc
mov
fwait
repnz
scas
mov
mov
cmp
loope
jecxz
sbb
xchg
sbb
pop
ret
cmp
cmp
mov
cli
lahf
movsl
jb
aad
mov
pop
aas
mov
hlt
sar
or
cmp
stos
jo
scas
dec
jne
xor
sarb
pop
or
in
pop
sub
mov
stos
sub
fwait
loop
xor
sbb
adc
or
add
jno
mov
in
push
mov
dec
and
dec
fdivl
and
stc
fwait
sahf
outsl
leave
inc
xlat
std
cmpsl
int3
or
mov
stc
jns
jg
outsl
adc
test
xchg
dec
loop
sbb
mov
and
push
xchg
inc
pop
sbb
scas
inc
jg
add
stc
cmp
out
jnp
dec
mov
in
orb
out
popa
and
test
push
push
cmp
dec
mov
stos
les
mov
jmp
push
addr16
cmp
mov
arpl
or
out
mov
mov
lock
lcall
xor
dec
out
pop
add
push
adc
xchg
aas
pop
pop
xbegin
filds
mov
mov
aam
leave
testl
pop
add
push
leave
push
fsts
addr16
jae
test
movsb
sub
mov
pop
add
in
mov
xchg
mov
inc
ficoml
and
add
je
jne
cmp
pop
jae,pn
sbb
lods
add
outsl
inc
or
shr
mov
xchg
out
out
sub
inc
or
mov
das
jb
aaa
cmp
sub
ja
push
jl
gs
jb
jae
jno
mov
sbb
fsts
dec
dec
scas
mov
or
mov
or
xor
sub
push
insl
push
popf
xor
packuswb
mov
ds
pop
push
lea
pop
mov
sbb
xor
sub
gs
in
leave
ds
jne
fstl
lock
pop
aas
stos
sbb
xchg
mov
adc
lea
inc
add
dec
out
lcallw
decb
pusha
inc
or
test
jno
inc
rcrb
jecxz
xor
dec
inc
xorl
dec
mov
sbb
mov
cltd
int
dec
pop
pushf
pop
mov
cs
leave
jns
sub
mov
test
pushf
add
pushf
mov
movsl
pop
adc
ds
and
xchg
out
mov
jns
dec
dec
cmp
rep
push
pop
pop
xchg
lock
addl
dec
inc
ds
popf
xchg
cs
std
popf
test
mov
cmc
dec
pop
fldt
leave
mov
jbe
aaa
es
xchg
imul
sub
movsb
adc
or
pop
pusha
adc
rolb
clc
xor
nop
jg
pop
inc
insl
cmp
inc
int3
pop
gs
add
xchg
mov
adc
and
mov
movsl
or
inc
mov
mov
in
pop
xor
nop
sbb
push
stos
mov
movsl
inc
mov
fsts
jbe
mov
lcall
sub
mov
inc
sti
outsb
cs
fwait
jb
in
inc
aad
or
lds
hlt
lret
xor
jns
lahf
fwait
sub
xchg
jmp
jns
in
rcr
sbb
lcall
shrl
cmpsl
out
mov
sub
mov
mov
pushf
fistpll
cmp
push
xor
xchg
ljmp
in
pop
jo
stos
mov
test
add
out
mov
inc
fisubrs
daa
mov
shll
cmp
pop
fisubl
movsb
push
mov
std
popa
hlt
adc
pop
dec
pop
dec
push
xchg
jo
lcall
push
jb
sbb
jle
jp
rcrl
dec
lods
lods
and
pop
fcoms
ret
imulb
cs
ljmp
mov
and
or
xor
scas
xor
xor
mov
jg
out
jl
sbb
arpl
push
lock
jno
add
je
fiaddl
fnstsw
xchg
jmp
dec
jecxz
push
test
icebp
push
roll
cli
mov
icebp
sti
test
xor
loopne
and
rcrl
out
imul
enterw
inc
push
enter
pop
hlt
scas
adc
or
pop
out
dec
fisttpl
jne
test
out
loope
pop
cmpsl
filds
xor
sti
fcoml
xchg
jle
scas
inc
iret
adc
cld
jns
cltd
repz
sarl
movb
inc
std
leave
sbb
fnstsw
repz
dec
fwait
and
inc
loope
daa
pop
adc
addr16
leave
pop
push
cmovnp
bound
or
pop
int
stos
loop
test
fsubrs
int3
hlt
xor
in
insb
push
lods
mov
lcall
clc
cmp
loopne
or
adc
dec
pop
jbe
les
jbe
gs
mov
sahf
insb
xlat
pop
rcrl
arpl
out
lret
js
lea
das
clc
sar
or
xchg
mov
add
out
cmpxchg
test
xchg
outsl
jnp
dec
xchg
push
jge
movsl
scas
gs
or
and
cmp
jp
scas
fdivs
imulb
pop
test
fcmovnb
outsl
fdivp
sbb
mov
cmpb
sub
xchg
xchg
cmp
jbe
call
aas
push
push
fwait
loope
popf
cltd
in
jnp
push
xchg
cli
inc
test
sbb
fists
jmp
and
xchg
mov
call
mov
mov
dec
aaa
mov
jge
add
mov
jg
adc
inc
scas
stc
clc
sbb
stc
ljmp
cli
jne
addr16
iret
int
inc
loope
add
clc
sub
or
addb
mov
mov
add
cmp
push
xlat
inc
cld
les
int3
in
mov
loope
in
test
xor
out
iret
xchg
test
ja
bnd
idivb
sbb
f2xm1
scas
jp
mov
sub
jle
outsb
test
test
mov
fnsave
movsb
adc
out
ja
imul
inc
pop
daa
push
add
insb
imul
cmp
jnp
out
leave
pop
add
movsl
pop
sub
or
xor
xchg
call
cmp
in
sub
push
xchg
fidivrs
push
mov
xchg
out
dec
out
int
lods
ficomps
sbb
ljmp
sbbb
push
mov
sub
xchg
push
xor
das
pop
cmp
dec
cmc
clc
inc
pop
inc
int
xchg
mov
outsb
je
scas
faddl
jno
push
mov
leave
mov
out
test
cld
aad
sbb
mov
cmp
jmp
stc
adc
out
testb
lock
addb
fldt
mov
pop
add
gs
or
pop
insb
inc
lcall
pop
xchg
mov
dec
push
dec
inc
fldl
es
cwtl
adc
scas
loopne
ds
push
pop
sbb
cltd
ret
sub
icebp
ds
mov
add
and
dec
push
sarl
cmp
sar
sub
arpl
arpl
in
pop
jbe
dec
adc
mov
test
rol
or
subb
jl
push
jne
je
test
xor
cmp
test
mov
sub
cli
pop
insb
cmp
lods
mov
inc
pushl
sbb
mov
insb
gs
insl
mov
xchg
mov
arpl
adc
lds
sub
xchg
ljmp
sbb
movsl
push
lcall
xor
aad
hlt
test
pushf
out
adc
jge
dec
subb
add
ret
mov
sahf
cmp
ss
pop
xchg
sub
push
mov
cmp
test
sbb
mov
lcall
mov
add
test
add
jno
sbb
mov
imul
dec
dec
in
mov
push
cs
fidivs
add
lods
fsubl
dec
ficoml
xchg
or
into
inc
into
stos
loope
mov
push
mov
xchg
rcrl
xor
bnd
cltd
aaa
inc
xchg
fbld
loope
jle
xchg
dec
into
push
arpl
aad
mov
mov
inc
cmp
dec
fisttpll
pop
les
scas
jge
xor
lahf
sti
push
dec
push
inc
pop
sub
outsb
std
mov
cmp
inc
inc
pusha
daa
dec
jae
cs
and
out
in
xchg
mov
scas
or
and
pop
lock
and
insb
ja
dec
outsl
or
clc
mov
aad
dec
insb
std
push
dec
inc
xchg
std
test
fists
dec
mov
pop
repz
fimuls
adc
mov
pop
push
xor
movsb
jl
pop
dec
std
xchg
pop
jbe
ud2
gs
mov
stos
int3
lret
outsl
xor
repz
imul
dec
cld
lods
leave
and
in
in
ss
popa
fldl
adc
pop
mov
je
ss
movsl
pop
sub
jmp
add
mov
dec
push
in
mov
cs
inc
xchg
test
sub
sub
and
jbe
repz
stc
or
and
push
and
add
mov
pop
and
lret
push
push
mov
jg
dec
push
fcompl
push
ja
xchg
test
pop
push
dec
pop
mov
or
xlat
jle
push
pop
cmp
in
xchg
add
shll
lret
dec
fists
add
fnstsw
hlt
sub
outsb
or
push
out
lret
ja
sub
pop
fadds
in
and
ret
out
or
xchg
push
dec
sbb
cltd
sub
stc
inc
decb
sbb
outsl
jle
out
and
xor
out
inc
aam
cmp
dec
je
iret
ljmp
cmp
mov
xchg
xchg
sbb
or
mov
lds
ds
cmp
dec
push
pushf
ret
mov
popa
sbbb
xor
xchg
sub
mov
pop
popf
mov
jecxz
data16
cltd
dec
mov
sbb
or
sub
aas
pop
lods
or
out
pop
in
lcall
inc
pop
sub
fs
jae
fstp
inc
pop
iret
jecxz
jmp
sbb
outsb
adc
and
add
xor
mov
loop
add
pop
insl
in
decb
pop
jge
adc
push
xchg
dec
jmp
out
dec
movsb
outsl
mov
lods
push
mov
xchg
xor
pop
xchg
push
lea
aam
pop
shrl
mov
pop
mov
cld
fadd
add
fisttpll
imul
or
xor
fstl
mov
js
jg
inc
jp
sbbb
stc
daa
lods
jnp
mov
in
movsb
pop
and
lret
popf
or
sub
nop
adc
pop
mov
out
js
pop
mov
or
sti
and
fcmove
gs
lods
mov
jae
add
les
sub
mov
out
cmpsb
cmc
icebp
loop
xorb
and
mov
fst
sbb
pusha
push
push
pop
addr16
sbb
or
repnz
mov
mov
push
jmp
cmp
daa
out
sub
inc
xchg
jne
push
xchg
inc
pop
in
mov
aas
xchg
add
nop
out
add
xchg
or
fnstenv
add
xchg
imul
aam
test
mov
hlt
push
adc
sub
nop
push
lea
enter
mov
add
fmull
mov
outsb
mov
mov
dec
pop
ljmp
add
push
addr16
inc
jne
cmc
in
ljmp
jns
add
sub
test
icebp
sbb
sarb
cli
pop
stos
movl
mov
add
lods
xor
daa
fmulp
movsl
incl
dec
and
jo
jo
inc
push
cli
fs
ret
sub
nop
cmpsl
inc
push
and
out
sbb
arpl
cmpsl
mov
fadds
inc
and
mov
outsl
adc
jl
movsb
imulb
cmp
xor
and
push
xchg
out
mov
dec
cs
mov
popa
inc
sahf
cmp
push
adc
sti
mov
fnstcw
scas
in
mov
pop
mov
adc
movsb
ds
mov
stc
push
dec
shl
in
pop
lods
rolb
pop
rcll
js
push
incl
loope
sub
adc
push
addr16
push
das
imul
push
or
cmp
clc
cmpsl
inc
mov
out
push
xchg
leave
jo
icebp
dec
out
dec
jo
fisubrs
outsb
mov
jmp
js
movsl
pushf
mov
gs
mov
mov
jb
fcomps
add
mov
into
ds
sub
fldl
push
mov
sahf
fcmovnbe
jg
aad
push
adc
daa
sbb
in
and
sub
dec
aas
pop
dec
clc
fstpl
cmpsl
ret
and
cmpb
push
aam
mov
mov
int
jecxz
lods
out
pop
cmpsl
inc
clc
and
into
test
sub
loopne
adc
daa
cmp
bound
sti
in
dec
ja
pop
fsubrl
ss
dec
xor
mov
add
jmp
mov
out
jle
push
out
or
push
or
lcall
xlat
pop
or
mov
loop
stos
aas
pop
inc
push
outsl
cwtl
and
cmp
sbb
xchg
cmove
out
rorb
sbb
and
jle
cmp
mov
test
cmp
js
std
mov
sahf
dec
in
mov
sub
faddl
dec
jmp
andb
jle
dec
scas
add
or
es
push
add
aam
dec
inc
repz
dec
cmp
cmpl
sarb
pusha
movsl
test
or
sbb
sub
fsubrs
fimuls
fdivrs
fcomps
sbb
dec
enter
pop
movd
rep
push
and
shlb
fisubl
inc
pop
xchg
daa
lds
sar
cmpb
cmp
shlb
dec
popa
push
mov
adc
mov
xor
in
stos
or
mov
fmulp
mov
pop
je
ret
inc
loop
sti
testb
and
and
cltd
xchg
dec
add
mov
imul
xchg
lahf
pop
out
nop
dec
into
loope
cmpsb
mov
aas
or
add
loope
adc
pop
jae
add
scas
loopne
shlb
push
jge
add
adc
enter
pop
mov
cmp
stos
add
ret
adc
repz
add
push
repnz
push
lcall
and
xor
fwait
xor
popa
or
inc
std
pop
nop
cmp
xchg
repz
mov
mov
add
xchg
mov
and
push
mov
jnp
je
mov
popf
mov
ljmp
and
data16
and
or
mov
loope
cwtl
out
or
inc
pusha
lods
inc
in
adc
in
fmull
xlat
icebp
movsl
xchg
sub
dec
pop
aas
or
das
mov
fcomps
mov
rclb
adc
sbbb
or
call
cmp
inc
fwait
shlb
pop
ljmp
pusha
xor
jnp
lock
insl
mov
gs
push
and
cmpsb
xor
jp
inc
test
test
push
daa
movsl
or
sub
jo
jle
push
ret
push
fildll
outsl
neg
mov
xor
mov
xlat
jo
mov
jl
mov
in
popf
aaa
push
rol
sub
xchg
faddl
fnstenv
push
fs
call
mov
outsb
lret
cmp
mov
jbe
cmc
adc
mov
pop
cmp
mov
adc
lahf
fmul
cmp
insl
mov
mov
adc
loop
iret
shlb
mov
jne
mov
jg
incb
xchg
pop
mov
or
fldcw
xchg
cld
or
mov
pop
andb
adc
pusha
stos
jnp
cli
cmp
mov
outsl
iret
cmp
popf
ljmp
mov
or
xchg
jp
mov
push
cli
xchg
movsl
mov
and
sbb
cmp
or
add
into
hlt
push
xchg
stc
ret
int
or
into
insl
pop
xchg
inc
popa
roll
imul
or
daa
out
xor
shll
mov
xchg
push
test
add
loope
js
ret
inc
sub
sbb
sbb
xor
testb
addr16
data16
pop
fiaddl
jg
fisttpl
mov
push
add
push
fcomip
or
push
push
adc
fldcw
fwait
inc
hlt
stos
push
out
jg
mov
ret
mov
out
adc
sbb
fidivs
xlat
add
jae
pop
mov
in
inc
movsb
or
insb
les
push
pushf
pop
dec
inc
push
std
add
pop
into
lcall
inc
test
push
mov
sub
pop
add
jae
or
std
cltd
xor
or
je
fstp
mov
xchg
testl
pop
fistps
fcomp
pop
adc
cmp
jae
and
lods
pop
mov
and
pop
mov
push
fmuls
aam
flds
jp
fninit
movsb
ret
pop
cli
dec
jno
add
mov
push
mov
fildll
daa
mov
mov
mov
mov
lods
fistl
pop
in
add
cmp
mov
xchg
adc
jo
or
cwtl
loope
xchg
nop
arpl
jbe
inc
inc
push
std
mov
shll
call
fldenv
xor
ss
cld
andb
mov
pusha
jp
insl
out
jno
cld
xchg
push
sbb
in
in
aad
movsb
xchg
dec
fcmovnb
push
xchg
std
inc
scas
add
addr16
pop
jno
js
repz
sub
call
jl
pop
imul
push
insl
mov
sub
jae
loope
aam
mov
jge
mov
mov
sbb
adc
imul
push
or
sbb
pusha
daa
xchg
and
arpl
xor
dec
jmp
fwait
aad
inc
fdivrp
xchg
cmp
sbb
in
mov
sti
ds
lcall
mov
mov
dec
les
cltd
mov
cmp
fildl
mov
inc
js
mov
jecxz
loopne
fdivrl
stos
push
subb
movsb
scas
call
pop
stc
jecxz
dec
pop
decb
jecxz
outsb
push
flds
jns
sbb
sub
test
or
into
mov
push
movsl
jb
repnz
lcall
inc
stos
ss
rcll
push
xchg
pop
push
adc
imul
lcall
mov
cwtl
std
daa
or
push
ficoms
out
rolb
lar
cmpsl
mov
out
int
jge
stos
adcl
cmpsb
push
cli
or
sbb
jae
fstpl
xchg
test
scas
sub
dec
mov
into
dec
cmpsb
mov
rcrl
mov
dec
cmp
mov
cmc
sbb
jbe
jg
ja
add
in
pop
pop
cmp
xlat
mov
push
fwait
xchg
sub
loope
pop
out
jg
movsl
and
f2xm1
aaa
jae
add
jl
insb
xor
mov
xchg
jae
fdivrs
pop
loope
sbb
fnstcw
mov
xchg
imulb
push
outsl
sbb
sub
test
push
jb
int
or
inc
cmp
inc
outsl
cli
shll
mov
inc
pop
daa
bsr
les
mov
sub
pop
enter
lcall
mov
xchg
jmp
cmpb
or
mov
mov
mov
stos
mov
lock
scas
dec
add
fdivrl
xor
in
jecxz
scas
sbb
sub
movsb
mov
jo
pusha
into
int3
mov
jmp
pop
sti
adc
mov
push
jp
lret
push
insb
jg
xchg
sbb
repnz
xchg
scas
icebp
push
push
xchg
sbb
aas
adc
ss
and
scas
iret
cld
mov
outsb
popa
adc
movl
je
inc
xchg
push
sbb
pop
in
adc
xchg
rcl
jb
mov
lcall
xor
sbb
pop
mov
and
aas
scas
xchg
sbb
repz
add
enter
and
sbb
adc
rclb
std
cmc
incl
adc
sub
testl
test
fildl
sbb
and
add
ud0
rcl
jnp
fs
gs
mov
into
loop
sub
dec
cmp
xchg
aas
push
xor
jp
add
mov
loopne
pop
aam
dec
adc
lds
fimull
lret
pop
repz
add
push
aad
adc
mov
or
loop
add
je
mov
ret
test
push
sar
mov
mov
push
loope
pop
cmp
jae
out
gs
cmp
inc
xchg
aam
cmc
lods
scas
adc
scas
ds
sub
sti
cmp
mov
das
xchg
jbe
scas
inc
out
dec
repz
repz
movsl
jl
mov
push
pop
fdivr
fsubp
mov
daa
xchg
xchg
xor
out
or
es
iret
mov
mov
mov
sub
jno
sbb
pop
inc
out
fwait
iret
insb
fptan
xchg
push
mov
or
nop
sbb
dec
dec
cmp
int
mov
aam
lret
sub
ret
cmp
orl
je
or
negb
aaa
add
push
mov
into
pop
ja
divl
push
hlt
sbb
out
ficompl
cwtl
pop
mov
xchg
inc
ss
imul
addr16
enter
insl
xor
aaa
mov
inc
sbb
xor
clc
xor
cmp
ret
fsubrp
mov
stc
pop
insb
and
mov
inc
xchg
fs
xchg
std
jp
xlat
xor
les
cmc
jmp
pop
jno
stos
push
imul
movsl
mov
xor
sub
dec
imul
sub
jb
roll
mov
stos
adc
shlb
or
pop
int3
pop
cmp
adc
push
icebp
adc
xor
cmp
and
push
fdivrs
push
test
mov
dec
xor
mov
out
push
movsl
aam
repz
lahf
aaa
push
sbb
mov
ficoms
cmc
push
jge
push
xor
js
inc
mov
and
lods
stos
leave
sarl
xor
imul
lret
jbe
xor
add
sbbl
int3
adc
fistl
test
dec
leave
push
mov
xor
inc
xchg
repz
add
cmc
push
jne
or
push
xlat
testl
push
add
xchg
test
lods
dec
sbb
add
loopne
fistl
cmp
fs
xchg
pop
or
idivl
cwtl
loopne
outsb
sti
inc
and
adc
stc
aaa
ret
mov
pop
cs
xor
xor
xor
push
scas
jno
stos
or
scas
aas
xchg
dec
xor
mov
out
sbb
pusha
mov
loopne
xchg
addr16
jns
dec
cmpsb
add
and
test
aad
outsl
ret
xchg
rorl
arpl
mov
mov
sub
icebp
icebp
ret
cmpsb
popl
jp
int
xchg
fwait
iret
push
or
rcl
inc
xchg
call
sub
rcrb
or
sbb
inc
adc
lds
imul
das
shll
out
outsb
shrb
popf
ret
cmp
insb
add
in
mov
std
jmp
mov
cmp
xor
sahf
mov
je
cmp
repnz
adc
sub
inc
dec
cltd
jne
rorb
shlb
test
imul
ja
push
pop
xchg
jae
or
and
repnz
adc
movl
inc
xchg
xor
pop
ds
mov
pop
out
pop
fldenv
pop
scas
xchg
pop
push
and
sbb
adc
lods
sub
std
inc
lret
sahf
pop
stc
shrl
ss
subb
les
cld
xchg
arpl
fsubr
xchg
push
push
repz
pop
cmp
mov
add
out
sahf
push
ljmp
dec
xchg
mov
das
sbb
nop
pop
mov
dec
aaa
fimuls
mov
lods
xor
push
into
addb
cmpsl
or
sbb
gs
mov
xor
add
lods
or
mov
rol
add
aam
lahf
mov
in
inc
ror
mov
fsubrs
push
push
xchg
out
add
and
pop
lds
in
and
or
xorl
fwait
push
sub
push
push
shrl
push
test
nop
xadd
sbb
jmp
and
adc
or
cmp
xchg
call
inc
push
mov
cmpsb
jl
or
xchg
cwtl
in
es
and
inc
and
adc
pop
push
mov
add
dec
dec
out
stos
cmp
mov
mov
dec
mov
scas
xchg
jne
mov
cwtl
mov
out
jae
dec
xchg
jl
push
daa
repz
mov
mov
cltd
xchg
lods
sbb
push
xor
cmp
add
in
xchg
adc
arpl
aam
cli
addr16
cmp
inc
loope
cmp
js
ss
mov
popf
push
pop
and
ja
or
mov
lock
and
mov
xlat
pop
cwtl
add
inc
in
xchg
or
and
pop
jns
dec
repnz
push
dec
sbb
test
pushf
data16
aaa
test
cmpsb
movsb
hlt
ret
sti
jle
scas
int3
sti
sbb
pop
jl
test
rcrb
out
pop
lret
je
jg
into
fstpl
fistpll
pushf
sbb
push
dec
add
nop
mov
mov
push
mov
leave
push
das
lcall
cmpsb
bound
add
movsl
lret
stc
mov
leave
cmp
mov
cltd
xor
pushf
xlat
aas
mov
add
lea
or
lods
stc
sbb
jl
ret
dec
stc
inc
out
cmp
jg
mov
sub
push
in
sarb
or
cwtl
fistpll
push
or
xchg
out
cmpsb
cltd
dec
add
data16
es
test
lds
daa
mov
in
adc
add
sbb
idivb
js
jns
mov
filds
es
xor
sub
mov
sti
sbb
add
push
icebp
cmp
out
mov
pop
mov
xlat
jp
xor
cwtl
loopne
pop
cmp
popa
repnz
jo
nop
rcr
gs
cwtl
cmpsb
dec
in
mov
into
lret
adc
fisubl
sub
scas
mov
push
mov
pop
inc
sbb
call
cmpsl
cltd
test
repnz
mov
mov
push
fstpt
mov
daa
pop
and
icebp
cwtl
leave
sub
mov
subl
in
dec
jnp
call
inc
ret
loope
int
shlb
and
adc
mov
sahf
in
cmp
jle
xchg
mov
jnp
mov
pop
fucom
test
dec
pop
cmp
ret
xchg
and
into
jle
lea
mov
popf
mov
mov
adcb
out
jl,pn
lods
loop
aad
mov
outsl
push
push
rorb
sub
inc
enter
mov
mov
rorl
pop
in
gs
lahf
mov
push
cmp
mull
pop
mov
mov
sub
mov
bound
cltd
into
mov
pop
sbb
sarb
loop
sub
sub
lock
xchg
cli
sub
loopne
mov
add
pop
mov
les
mov
sbb
jle
cmp
lods
push
sbb
inc
adcl
pop
pop
insl
addr16
inc
pop
fiaddl
push
xlat
in
lcall
sub
pop
pushf
inc
xor
mov
call
test
fisttpl
pop
cmc
mov
xchg
jp
shll
add
mov
mov
mov
xor
daa
aad
dec
sarl
cmpl
jle
xchg
mov
sbb
int
rcll
xchg
mov
lods
enter
into
inc
in
int
xchg
jo
aaa
mov
dec
jo
mov
sub
pop
rcl
dec
hlt
aas
pop
faddl
cmp
xchg
ljmp
sbb
add
test
xchg
data16
lea
mov
into
cmpsb
rcrb
inc
push
in
addr16
jb
jo
aas
out
cmp
sbb
stc
arpl
insb
xchg
arpl
xchg
ret
ja
arpl
mov
inc
frstor
jp
xchg
call
lret
je
iret
pushf
imul
mov
push
sbb
rorl
jno
daa
psubb
sub
lea
push
test
mov
sbb
pop
push
ret
push
cmpsb
aas
imul
cs
sarb
jge
adc
mov
mov
movsl
in
or
or
add
cmp
jns
push
pop
mov
stc
xchg
aam
inc
xchg
pop
das
adc
xorl
outsl
pushf
into
orl
sahf
and
clc
outsl
push
pop
cld
mov
xchg
psubq
xor
aaa
xchg
outsb
sub
pop
pop
inc
push
sub
repz
pop
mov
sub
cmp
xlat
adc
inc
fcmovnu
ss
dec
inc
loop
xlat
mov
loop
jle
aad
test
or
mov
data16
push
sub
mov
pop
lock
cli
aaa
shlb
lods
popa
ja
divl
or
pushf
dec
jbe
dec
cmp
sub
icebp
mov
xor
sub
insb
cmp
jle
adc
shrl
mov
jecxz
jb
jl
mov
xchg
adc
adc
pusha
sbbb
and
data16
mov
xor
xchg
out
test
mov
rclb
mov
add
decl
sub
pop
xor
jno
jg
inc
faddl
fcomp
hlt
xchg
les
adcl
sub
cmp
and
and
ja
mov
cli
js
sub
jmp
lahf
inc
daa
jl
mov
mov
push
adc
cmp
jno
arpl
pop
lahf
push
ss
mov
jle
test
xchg
or
sahf
mov
ss
cmp
imul
rolb
push
xchg
mov
movsl
cmp
cwtl
mov
jbe
in
mov
inc
clc
cli
xorl
xchg
push
movsb
scas
push
ss
mov
in
push
mov
jnp
jmp
andl
adc
les
iret
movsb
hlt
pop
xor
push
movsb
insl
ds
jmp
out
lods
outsl
sub
or
pusha
or
repnz
rcrb
les
jae
lret
int
push
lea
add
fildl
pop
divb
pop
push
lock
jmp
jg
dec
ljmp
push
add
iret
rclb
scas
fdivrs
subb
ja
cs
test
jo
cmp
adc
in
xor
mov
xchg
je
cmpl
lods
lcall
test
jae
mov
fldl
jp
inc
jns
movsb
dec
and
xchg
mov
pop
push
aaa
aad
imul
push
cmp
fst
ret
or
leave
cld
push
stos
sbb
pop
test
bound
xor
cmc
inc
add
lahf
cmp
into
pusha
sub
mov
shlb
sarl
cmp
xor
add
push
mov
dec
repnz
adc
andb
jl
movsbl
dec
test
push
jg
repnz
pop
and
or
sbb
inc
push
inc
rcrl
inc
pop
push
xlat
or
sub
xchg
cmp
or
push
andb
div
xchg
add
inc
pop
jbe
dec
clc
pop
fidivl
sub
dec
int3
or
sti
ljmp
int
mov
add
pop
and
sbb
dec
jg
xchg
jbe
ja
in
call
insb
sahf
lods
mov
add
jmp
bound
mov
mov
jns
idiv
ficompl
pop
lds
ficoms
xchg
daa
iret
out
mov
jbe
aam
jmp
sbbb
test
gs
mov
cmp
out
mov
int
add
jbe
gs
inc
or
adc
push
stos
rclb
imul
adc
cmp
add
mov
ret
sbb
les
aam
rolb
lods
dec
add
and
insb
fdiv
mov
sbb
xor
fldenv
dec
add
repz
lock
pop
repz
add
mov
aaa
clc
lds
dec
sbb
sarl
pop
dec
push
lahf
mov
adc
mov
dec
sti
fists
push
jae
inc
in
leave
cmp
scas
add
mov
addb
pop
push
ss
cmc
lret
test
movsl
stos
rcrb
dec
and
sbb
jl
popa
mov
inc
dec
ljmp
orb
push
push
je
push
or
and
js
dec
inc
jmp
or
mov
pop
bnd
ret
xchg
mov
sbb
sbbb
je
and
xchg
mov
es
cli
xor
cmp
out
into
dec
and
pop
lahf
pop
inc
pop
sarb
outsl
mov
rcl
pop
inc
jno
mov
es
jae
leave
int3
xchg
adc
mov
and
es
mov
ret
cmpsl
rcl
jns
add
out
mov
int3
mov
adc
lods
push
bound
pusha
inc
dec
mov
xchg
lock
mov
push
ja
inc
mov
fstpt
and
xor
xor
mov
mov
dec
shll
popf
andb
push
stc
stos
jnp
xor
aaa
add
or
cmpsl
fsub
sbb
pop
decb
mov
imulb
push
xchg
add
aam
shl
repz
cmpsl
pop
aas
cltd
xchg
adc
fmuls
pop
mov
iret
sbb
iret
push
stos
adc
bound
or
jno
data16
cmp
sbb
jae
sbb
pushl
mov
and
jge
sbb
jne
push
or
aaa
in
cmp
adc
arpl
stc
es
rep
cmp
fdiv
pop
xchg
lcall
out
xchg
cltd
push
or
testb
inc
push
cmp
push
mov
and
sbb
pushf
jmp
fimuls
int
lret
das
jmp
lret
stos
mov
mov
ljmp
inc
mov
add
xchg
sahf
sub
inc
nop
xor
das
sbb
pop
enter
add
inc
fimull
dec
call
cli
stc
in
cmpsb
ds
jns
pop
scas
mov
shrl
inc
inc
addr16
sbb
rorb
xchg
repz
stos
ja
mov
loopne
shll
pop
clc
fnsave
mov
adc
pushf
xchg
add
jl
imul
into
pop
cli
xchg
mov
or
jnp
movaps
dec
or
jmp
adc
jmp
dec
aaa
out
or
pop
inc
xchg
into
xchg
in
dec
ret
cld
sbb
call
sub
outsl
add
out
aad
es
popf
jl
adc
btr
inc
ret
xchg
lcall
inc
jo
outsl
mov
mov
dec
inc
xor
inc
repz
movsl
pushf
push
shr
jge
push
inc
sbb
les
or
lahf
fimull
mov
inc
adc
jno
mov
inc
push
dec
push
and
or
fcmovb
sub
popa
push
movl
and
dec
stos
mov
shrl
pop
leave
lds
daa
cmp
push
addb
test
div
jg
xor
jmp
push
or
cmpsb
aad
mov
jo
and
les
pop
shrb
mov
xchg
sbb
dec
loope
xchg
les
push
pop
xor
lods
ss
dec
jbe
xor
sbb
out
dec
mov
shl
or
clc
dec
pusha
cmpb
add
mov
pop
repz
loope
jno
push
jle
jmp
scas
imul
pusha
cmpsl
test
mov
addl
jne
test
je
fistps
dec
mov
pop
addr16
push
mov
sahf
mov
and
rcrl
lock
fcmovb
inc
call
xor
jge
cmp
movsb
adc
adc
sbb
outsb
dec
movsb
je
mov
pop
and
frstor
cmc
addb
aaa
stos
test
in
sub
fstpt
pop
or
pop
inc
pop
cmp
mov
pop
lock
hlt
or
xchg
ss
ficompl
inc
iret
jns
and
sub
push
xlat
mov
fsubrs
sub
cwtl
inc
dec
jge
fsubrl
push
fidivrs
push
repz
mov
cmp
push
sub
xchg
and
cmp
jb
push
add
mov
outsl
fcoms
mov
es
ss
adc
cmc
mov
pop
mov
jl
out
scas
mov
lret
xor
or
cwtl
lcall
mov
movsb
inc
enter
xor
jne
punpckhbw
push
dec
mov
int3
insl
xor
mov
add
pop
popa
vcvttss2si
call
out
xchg
xchg
loopne
in
dec
shll
mov
dec
aam
dec
insl
stos
mov
mov
xchg
sbb
mov
jmp
add
sbb
movsb
scas
or
sub
dec
sarb
push
outsl
mov
mov
pop
cwtl
push
mov
fwait
add
xor
and
lahf
pop
add
ficoml
lcall
cli
in
xor
mov
dec
dec
sbb
ss
cmpsl
adc
in
shlb
outsb
push
test
mov
jmp
sbb
cli
mov
push
push
jo
into
ror
sub
push
add
sbb
fildl
in
add
addr16
in
lret
ljmp
iret
subb
testl
std
es
sbb
sub
add
test
jbe
jle
decb
popf
lcall
jl
dec
dec
pop
les
push
testl
test
and
dec
pop
popf
dec
scas
xchg
mov
repz
lret
loop
cmpsb
mov
enter
dec
jmp
lret
cmp
jecxz
xchg
ja
lret
adc
cwtl
and
jns
jp
pop
push
adcl
adc
loop
and
add
cmpsl
divb
pop
dec
es
mov
push
dec
out
add
inc
or
or
fisttpll
movsb
bound
nop
mov
xor
mov
lret
nop
sub
dec
testl
out
cwtl
and
fsts
xchg
out
les
movsl
dec
idivb
xchg
in
cld
mov
aam
add
out
mov
arpl
pushf
push
cmp
fldt
push
inc
adc
mov
adc
mov
sub
push
int3
and
push
lods
dec
mov
xor
lock
movsl
push
and
sbb
pop
push
inc
cmp
popa
mov
add
pushf
sub
cmp
scas
mov
jae
push
mov
cmpl
adc
iret
mov
outsb
jne
subb
dec
test
in
mov
cmp
sbb
mov
jl
mov
mov
add
popf
sub
inc
imul
lea
rclb
fidivs
scas
push
cld
jge
test
mov
pop
incl
pushf
push
aam
push
inc
negb
inc
xchg
jnp
adc
iret
shr
pop
fidivl
movsb
jp
movl
push
push
setno
hlt
sahf
fsubrl
add
push
lret
cmovne
and
addr16
push
sbb
das
test
cwtl
sbb
psllq
pop
jns
popf
cltd
push
outsb
popf
inc
xchg
mov
aam
std
and
das
cmp
add
test
ja
aaa
stc
xor
sbb
pop
add
clc
out
shrl
push
cmp
dec
test
loopne
std
mov
outsb
movb
sbb
mov
int
sahf
cmc
pop
cmp
repnz
xor
call
adc
movsb
sbb
sub
imul
fdivl
rcrl
or
lret
mov
mov
sub
or
pop
shl
pop
mov
addr16
jb
inc
es
push
aaa
or
mov
lahf
rcl
enter
inc
bnd
mov
cs
iret
inc
arpl
lret
mov
jbe
inc
ret
xchg
shll
or
fwait
dec
clc
fistl
jbe
loopne
dec
mov
cmp
and
cmpsb
movl
cli
adc
inc
flds
imul
pop
aad
sub
jb
lds
lods
adc
adc
jmp
xchg
cmp
push
pop
inc
ret
cld
je
push
test
push
nop
sti
mov
push
pop
or
cmpsb
push
sbb
push
ds
inc
sub
fmulp
jbe
sbb
jb
pop
enter
cmp
sub
push
jb
jl
xlat
leave
jmp
xor
out
outsl
out
mov
aad
popl
sahf
push
clc
cld
mov
mov
fdivs
sbb
sbb
repz
arpl
jns
push
repz
inc
or
stos
inc
dec
jne
mov
repnz
pop
loope
mov
dec
xlat
leave
in
mov
sub
test
movsl
add
testl
add
and
stos
dec
jb
aad
jo
lahf
ds
movsl
lods
imul
and
xchg
outsl
iret
in
loopne
push
sti
cmpl
inc
ret
addr16
push
dec
test
fdivl
and
shll
lcall
repz
std
add
ja
or
mov
jmp
out
xchg
pop
sub
sbbl
shll
mov
call
xchg
daa
stc
cmp
xchg
movsl
cltd
aam
dec
lcall
lret
cmp
pop
popf
incb
inc
sub
jl
iret
jmp
and
dec
popf
orb
add
cmpsb
and
pop
inc
xor
out
out
adc
sbb
ljmp
movsl
cli
movhps
jecxz
mov
sbb
or
mov
fs
or
bswap
inc
or
adc
pop
paddq
lahf
daa
push
pop
jge
loopne
shrl
push
inc
pop
push
xor
adc
jno
repz
stos
add
mov
push
pop
sub
imul
jae
test
lock
jl
fcompl
mov
push
dec
ret
pusha
lods
popa
push
fwait
cmpsl
push
pop
push
cmp
shlb
pop
pop
push
push
mov
clc
cmp
leave
mov
insl
outsl
cmc
mov
dec
ds
pop
mov
js
mov
sbb
in
xchg
mov
lret
adc
push
mov
add
jmp
or
aam
pop
mov
cmpl
push
jnp
jmp
and
insb
int
pop
mov
add
pop
ret
fwait
in
pop
mov
shrl
cltd
scas
jle
lods
pop
lret
repz
cs
out
lock
cmp
mov
fcoms
and
in
fisttpl
xchg
inc
enter
cmp
sbb
inc
flds
in
addr16
out
mov
test
pop
or
mov
jge
stc
imul
std
xor
or
scas
mov
mov
jle
aad
pushf
mov
lea
pop
addl
es
fidivs
push
ret
popf
add
add
cmp
mov
inc
int
cld
in
mov
loope
out
lahf
add
ficomps
hlt
inc
push
cmp
insb
xlat
ja
rolb
leave
lcall
mov
pop
sti
call
inc
pop
jno
sub
stos
stos
pop
cmp
mov
xor
cs
add
lret
push
mov
imul
sub
xchg
xchg
insb
adc
addr16
test
cld
cmc
shlb
stc
das
rol
lods
hlt
push
fisubrs
js
pushf
fidivrl
int
mov
cmpsb
in
cs
mov
jb
xchg
dec
mov
mov
dec
loope
xchg
sbb
out
shr
add
rcl
mov
and
sub
dec
mov
lods
jp
rclb
xchg
cmpsl
fmuls
add
xchg
xor
and
xchg
sbb
sbb
dec
add
call
jp
movsb
xor
jno
sub
mov
mov
jg
aam
xor
mov
call
xlat
mov
xchg
jno
test
imul
xchg
into
adc
pop
lock
sbb
mov
mov
int3
jae
cmp
sub
sub
dec
jmp
std
jl
sbb
dec
push
inc
push
xor
mov
jnp
addr16
and
push
xor
je
mov
ret
ret
jp
xchg
inc
and
jl
gs
rcr
sbb
jo
mov
cmp
dec
fdivrl
cmp
rorl
xor
clc
cmc
lret
lods
xor
dec
jg
push
mov
xlat
rcrb
dec
paddsb
sub
xchg
int3
mov
fwait
jo
js
cmp
mov
inc
repnz
loopne
pop
xor
mov
stos
inc
pop
dec
mov
sbb
shlb
ret
lcall
pop
adc
sub
jo
dec
and
pminub
push
sbb
lods
push
rcrb
push
addl
inc
sbb
ja
out
mov
jg
jno
ficoml
aaa
fiadds
dec
in
scas
rorl
fdivs
jbe
cmp
push
pop
ret
mov
cs
inc
add
jmp
leave
cmp
adc
dec
idivl
add
aaa
imull
xor
aas
fimuls
xchg
pop
mov
js
cs
cs
or
mov
lds
cs
cmp
xchg
push
sub
mov
ja
and
stos
out
outsb
sub
shll
add
mov
jge
daa
mov
pop
out
mov
pop
sub
cmp
cmp
mov
movsl
daa
test
jecxz
xchg
icebp
jo
lret
loop
xchg
popf
cmp
mov
shll
shrl
sub
mov
adc
sub
shll
jge
pop
aaa
cs
loop
mov
jecxz
push
js
test
shll
fsubl
enter
in
sub
nop
sub
test
mov
pop
es
pop
in
sub
jbe
mov
hlt
cmpb
loop
xchg
cmp
mov
loopne
into
adc
daa
out
cli
xor
push
sub
mov
adc
repnz
sub
sbb
cmc
icebp
push
pusha
jns
cmp
ja
jns
add
stos
daa
adc
arpl
add
pop
insl
cltd
mov
aas
enter
and
cmp
push
pop
fiadds
imul
pop
mov
add
xor
jo
aam
pop
or
icebp
jmp
mov
add
pop
adc
sbb
out
xchg
movsb
push
and
sbbl
push
cmpsw
jmp
in
xorl
push
shrb
mov
mov
repz
adc
pop
sub
dec
lret
add
xor
xor
mov
mov
pop
xchg
jmp
xchg
lahf
push
movq
add
sub
idivb
movsb
xchg
add
sbb
out
push
gs
das
sbb
adc
ret
adc
jno
mov
lods
sti
xchg
mov
and
xchg
mov
subb
fwait
sbb
pop
add
inc
dec
mov
add
xchg
add
out
rcrl
jne
xchg
addb
inc
sbb
lret
lcall
push
mov
fs
dec
push
mov
xor
xchg
mov
out
push
push
addr16
loope
xchg
xor
jb
dec
and
int
pop
sub
lret
adc
cmp
rorl
add
ret
into
mov
push
mov
fwait
in
inc
mov
iret
daa
shlb
add
push
xlat
mov
into
test
aaa
pop
std
xlat
jmp
jae
xchg
lcall
jae
cmp
idivl
cmpsl
cmp
loop
mov
daa
push
pop
or
adc
sbb
inc
xchg
gs
jmp
add
mov
fsubrl
lds
je
xchg
mov
jp
xor
pop
mov
ss
push
fsts
push
push
mov
or
inc
sub
cmpsl
imul
xchg
jbe
stos
xchg
or
das
xchg
inc
jo
sbb
jns
pop
fucomp
xchg
or
fs
cmpsl
mov
or
inc
hlt
or
test
cld
aas
data16
mov
enter
xchg
mov
int3
rol
xor
insl
dec
mov
add
push
je
mov
mov
and
loopne
outsb
xor
andb
dec
inc
inc
shlb
pop
xchg
lcall
loopne
add
sub
test
inc
jno
cmp
sub
inc
and
scas
lahf
leave
sahf
and
add
mov
lahf
sbb
dec
fnstcw
repz
sar
push
cmp
loop
aam
sbb
movsb
std
cli
mov
dec
out
mov
repnz
jns
pop
cmp
mov
divb
xor
mov
jl
or
out
in
rcrl
push
jo
pop
cmp
daa
outsb
mov
fdivrl
cmpsl
pop
fadds
push
mov
repnz
push
mov
scas
lahf
cmp
add
or
js
bound
xchg
sbb
mov
inc
mov
rclb
cmp
jle
cmc
arpl
pop
mov
sahf
cmp
xor
adc
or
arpl
jbe
icebp
sbb
push
jl
mov
ret
fdivp
out
xchg
cmpsl
lea
popf
dec
in
dec
je
xor
jge
xor
xchg
mov
mov
sbb
xor
xchg
push
mov
test
mov
sti
mov
and
repnz
inc
and
scas
imul
jne
cli
mov
mov
mov
int3
ficoms
push
loopne
inc
sub
popa
js
jp
aad
push
lahf
cmp
mov
mov
mov
dec
outsl
clc
adc
daa
arpl
mov
cmp
jae
aam
xor
repz
sbb
dec
insl
nop
ss
gs
scas
aad
mov
in
ficoml
mov
or
in
fmull
jl
nop
mov
lret
nop
int
pop
rol
cld
and
pop
xchg
dec
ss
lcall
fcoml
idivb
daa
adc
push
jae
or
xor
lock
hlt
pushf
sahf
and
imul
push
xchg
xchg
xchg
pop
sbb
fwait
iret
dec
lods
adc
je
movsb
inc
ret
fwait
test
in
data16
pop
imul
jl
test
daa
dec
int
xchg
sbb
daa
hlt
ss
gs
movsb
addr16
pushf
daa
mov
cmp
xchg
loop
lret
jnp
loopne
xor
sbb
xchg
lahf
xchg
jmp
add
xorl
hlt
scas
push
xor
arpl
dec
sahf
fwait
mov
dec
inc
xor
jnp
fst
aas
xchg
lock
jno
aad
inc
and
jp
scas
rorb
pop
popa
mov
push
std
bound
lret
jne
push
jle
pop
lahf
mov
lds
adc
stc
lret
fimull
imul
and
push
xchg
push
sti
add
sub
daa
fmuls
push
divl
es
notl
mov
les
or
jg
xor
nop
mov
dec
inc
ror
sbb
add
add
jo
mov
xchg
mov
jmp
std
jecxz
mov
bound
adc
and
or
sbb
and
mov
sbb
adc
push
xchg
cmp
fcoms
or
xlat
dec
cwtl
xor
push
jo
hlt
cmpl
pop
and
in
movsl
pop
mov
pushf
or
xchg
push
call
fstpt
or
in
imul
and
inc
cmovge
int3
test
je
repnz
dec
dec
push
or
dec
cmp
dec
ljmp
add
xchg
mov
loop
add
pushf
lret
test
lock
mov
and
xor
shrl
mov
loop
sbb
call
stos
shlb
adc
lcall
jg
inc
mov
jl
mov
push
rcr
mov
add
iret
mov
adc
pop
mov
dec
adcb
mulb
rcrl
jmp
jno
stc
jge
push
mov
aas
dec
sarb
fs
jp
shlb
daa
sar
es
lods
cmpsl
pop
inc
add
lret
std
dec
dec
negl
mov
rol
sbb
adc
shl
jnp
js
divl
sub
ret
inc
daa
jp
cld
mov
xchg
sbb
push
fldenv
and
pop
inc
mov
enter
cmp
sub
je
and
sbb
dec
xchg
mov
enter
sub
and
aad
xchg
leave
jns
mov
outsb
add
ja
add
sub
lea
xchg
lcall
ret
xor
mov
sbb
sub
mov
mov
fidivrl
loop
or
stc
sbb
cmp
loope
dec
stos
addr16
insb
ret
movsb
cs
adc
aad
adc
or
inc
cmpsb
cmp
roll
xchg
fnstcw
fwait
ds
xor
or
enter
pop
in
inc
xchg
cmp
adc
jmp
fiadds
aam
jle
sub
mov
mov
pop
cs
ds
rol
sbb
adc
cltd
sub
add
cmpsl
inc
fnstsw
dec
inc
out
add
mov
xchg
arpl
aam
cmp
imul
xchg
dec
xor
mov
and
mov
lods
mov
adcb
add
das
bound
addl
dec
inc
rcrl
stos
jnp
aaa
fbld
into
lret
pop
lods
push
inc
fistps
lahf
xlat
bound
fidivrs
xor
pop
lock
dec
xlat
sub
jp
cmp
testb
lods
int3
inc
cmpsb
sbb
mov
cmpsl
xor
mov
adc
cwtl
mov
mov
outsl
in
je
jp
arpl
sbb
hlt
push
lahf
sub
and
mov
add
dec
ret
sbb
outsl
mov
movsbl
idivl
cs
sub
loope
sahf
adc
push
pushf
jns
lock
pop
jno
stos
jae
in
mov
xlat
cs
and
cmp
mov
cmp
lahf
data16
imulb
inc
jbe
sarl
sbb
popf
les
dec
imul
addr16
xchg
cmpsl
jle
pop
popa
cwtl
das
fmul
ret
pop
mov
loop
cld
pop
adc
and
push
int3
test
xchg
adc
insb
jge
dec
out
in
movsb
mull
adc
or
push
mov
cwtl
xor
or
dec
mov
insb
sub
sbb
ljmp
dec
sub
push
cmp
fsub
jne
jbe
sbb
lods
hlt
in
rol
adc
loop
mov
pop
scas
lds
jge
jl
mov
movsl
cmpsl
mov
or
xchg
gs
outsl
xchg
inc
mov
adcb
inc
sub
pop
xchg
cld
jne
ret
icebp
ja
dec
adc
push
mov
fwait
mov
xor
fdivl
sub
and
test
divl
arpl
xchg
add
sahf
or
pop
lcall
imul
repz
and
or
and
les
jne
xchg
adc
cs
addr16
stos
inc
mov
test
loop
inc
repz
lods
jno
shrb
mov
call
arpl
jge
mov
xor
add
inc
arpl
repnz
out
dec
xor
rorb
or
jp
data16
mov
clc
lods
bound
xacquire
loop
test
loop
outsb
lds
loop
xor
fisttpll
inc
pop
push
xlat
pop
cwtl
sbb
inc
mov
or
sub
xor
stos
cmpsl
inc
cmpsl
sbb
dec
out
mov
cld
gs
iret
jno
adcb
fs
lods
pop
push
aam
jo
sbb
jmp
inc
imul
imul
jae
lcall
and
repnz
xor
push
sbb
imul
aas
mov
mov
push
jecxz
stos
fists
cmp
xor
mov
cld
jbe
or
ja
add
ja
loop
mov
mov
int
xchg
sahf
not
movsb
inc
and
ds
scas
mov
cwtl
mov
jmp
cmp
pop
jecxz
mov
push
stos
mov
pop
repnz
insb
inc
clc
jae
push
and
push
pusha
xchg
mov
sarl
or
push
lret
mov
insb
mov
push
ja
ja
or
lea
test
add
adc
sbb
push
out
xchg
mov
cmp
lcall
dec
aam
jl
lock
pop
mov
out
mov
jl
push
in
in
dec
sarl
mov
iret
test
lahf
jmp
add
jb
lahf
push
rdtsc
cwtl
ret
inc
inc
divl
sub
fisttpl
or
mov
ds
jae
fdivrs
mov
std
movsl
jbe
test
insl
daa
sbb
lcall
jns
stos
adc
incb
aam
jle
jecxz
sahf
arpl
ret
decl
mov
xor
add
mov
lods
adc
inc
subl
insl
add
es
insl
add
sub
xchg
jl
jo
lods
les
pop
nop
pop
fimuls
xor
arpl
mov
ljmp
test
cmp
sbbb
pop
leave
sarb
xchg
jo
repz
xchg
daa
and
mov
cmp
add
fs
popa
pop
sbb
test
mov
mov
mov
sub
pop
clc
ljmp
mov
pop
sbb
push
ret
sarl
fldt
es
add
cmc
es
lar
mov
lcall
cmp
in
mov
jbe
out
fs
rorl
int
and
add
add
xor
addr16
mov
repz
test
orb
dec
addl
lahf
mov
and
hlt
sub
sti
mov
pop
sbb
je
cmp
mov
enter
push
aas
and
mov
ret
adc
outsb
inc
dec
jno
sbbl
icebp
push
sub
add
clc
dec
inc
inc
xlat
icebp
aam
outsl
pop
gs
ljmp
lret
ja
add
or
adc
jle
add
nop
into
ds
mov
pushf
mull
int3
pop
adc
pop
daa
shl
mov
and
xchg
pop
popa
pop
int3
std
fdivrl
call
scas
out
and
insb
push
and
enter
ss
shll
aas
int
jge
movsl
sub
cmpsb
xor
jae
repnz
push
mov
call
fwait
mov
mov
mov
jmp
stc
sub
jae
add
ljmp
xchg
pop
je
sub
mov
enter
bound
mov
adc
and
mov
ret
rorl
mov
ds
jp
repnz
int3
add
xor
mov
cli
adc
xor
call
sti
cmp
sar
stc
stc
addr16
sbb
mov
arpl
inc
xor
dec
testb
xchg
popa
gs
mov
enter
dec
add
and
jno
into
add
data16
add
pop
inc
dec
gs
mov
fidivl
call
push
test
xor
sbb
gs
test
and
mov
jns
push
push
mov
jo
cmovne
movsl
sub
sti
cld
dec
mov
mov
mov
push
enter
mov
mov
or
jle
sbb
and
pop
xor
mov
imul
mov
dec
cwtl
sahf
add
icebp
fnsave
mov
cmp
shll
pushl
mov
xrelease
sbb
sbb
xor
lret
adc
lahf
mov
mov
dec
std
cmp
mov
fists
push
mov
pop
push
and
dec
inc
cmp
test
push
pop
sbb
or
add
test
int3
ret
ja
cli
aad
loopne
daa
popf
sbb
pusha
xchg
out
pushf
add
mov
movsl
inc
inc
dec
sti
jecxz
add
lcall
shlb
xchg
aas
outsl
cmp
cs
test
push
sahf
jle
enter
xor
mov
xchg
out
mov
xor
mov
repnz
xor
das
pop
sbbb
adc
cmc
xor
cld
jmp
sub
mov
fcom
pusha
adc
xor
iret
dec
sbb
ds
mov
add
inc
and
push
add
push
add
pop
xchg
push
imulb
aaa
fcoms
ret
mov
hlt
addr16
xor
nop
rcl
fistpll
mov
je
out
aaa
cmp
div
cmp
leave
push
cmp
leave
cmpsl
into
out
cwtl
popf
les
pop
mov
leave
sbb
mov
sub
mov
cld
pop
jo
jno
xor
fisubrl
or
test
sub
jle
pop
jnp
adc
pop
stc
cmp
mov
sub
adc
leavew
mov
jno
inc
cmp
aam
cltd
push
int3
sub
fisubrl
aaa
cmp
pushf
negl
mov
pop
ret
ret
or
and
loopne
lock
dec
ret
add
in
sub
pop
dec
in
rclb
add
xor
cs
lds
shlb
push
sarl
adc
lcall
ja
arpl
outsb
sbb
cli
test
clc
fucom
xor
in
aaa
dec
lret
notb
mov
xchg
scas
or
mov
mov
fwait
sub
mov
mov
addb
mov
cmp
push
loop
sbb
movsb
repz
ja
mov
repnz
inc
lods
mov
ret
incb
mov
push
and
adcl
jmp
out
orb
jecxz
xchg
scas
adc
mov
insl
sbb
push
fcoms
inc
inc
dec
gs
aaa
out
loop
mov
fs
icebp
sti
fwait
adc
pop
std
inc
pop
mov
gs
vmovaps
iret
lods
adc
or
enter
cmp
sbb
mov
rcl
xchg
fs
fisubl
outsb
out
sub
push
or
inc
xchg
jns
push
scas
ss
stos
test
jno
dec
inc
lahf
std
and
adc
mov
lret
shr
adc
jae
jne
mov
outsb
xchg
out
cld
cmpsb
cli
mov
mov
ljmp
or
sbb
or
cld
push
jmp
idivb
push
or
ret
daa
out
jp
iret
pop
mov
ljmp
cmp
shl
pushf
imul
cmp
pop
shrb
scas
rclb
bnd
or
jns
dec
inc
xor
push
fidivrs
mov
inc
repz
inc
mov
repnz
mul
mov
rcr
repnz
dec
shl
xlat
mov
dec
add
out
sbb
nop
cmp
and
fwait
jg
les
cmp
jl
mov
push
sbb
and
sbb
jbe
aaa
and
or
cmp
jmp
aad
sub
push
out
aam
cmp
and
pushf
cmp
cld
mov
or
loope
addr16
mov
xchg
or
push
xor
repz
pop
inc
jbe
sbb
mov
xor
cltd
jge
sahf
mov
iret
dec
sarb
pusha
jb
fwait
dec
fsubs
filds
inc
call
in
or
shlb
insl
or
das
jle
xchg
jns
js
ffree
mov
pop
push
sub
popa
cmpsl
lods
sbb
jp
dec
and
orl
jbe
movsl
mov
dec
ret
ffree
sahf
sub
cmp
jne
sbb
dec
pop
or
mov
lods
jns
push
lret
loop
shrb
and
mov
push
leave
add
push
sbb
ror
mov
cli
ljmp
arpl
popa
outsl
call
inc
pop
repz
sub
sub
xor
aad
dec
lret
xor
jb
jns
or
stos
pop
insl
sub
pop
mov
mov
pop
add
loope
and
daa
dec
in
arpl
mov
xchg
loop
scas
jbe
and
lret
popa
sub
push
fsts
xor
out
inc
leave
xchg
fildll
xor
adc
push
lods
loop
jmp
dec
push
adc
cmpsb
mov
sbb
fstpt
adc
repnz
dec
xchg
or
xor
insb
gs
adc
cmp
cmp
mov
stos
add
sub
adc
add
cld
mov
jne
scas
dec
and
push
xor
out
pop
lock
in
je
adc
stos
jp
xchg
andb
and
dec
or
repnz
std
pop
jne
jle
pusha
out
xor
mov
jle
adc
hlt
xchg
loop
ja
xchg
xlat
pop
cmc
jns
fcomip
fistpll
enter
rcrb
mov
lds
or
mov
fwait
and
int3
sub
in
addr16
jp
pop
jl
sub
mov
outsb
or
add
shr
xchg
testl
nop
xlat
and
arpl
push
mov
sub
loope
jl
push
mov
in
xchg
xor
adc
mov
mov
push
inc
jno
sbbb
dec
data16
and
rcrb
cwtl
xor
imul
loopne
popf
dec
les
jb
cmp
sti
pusha
lcall
mov
pop
mov
jmp
imull
sarl
lcall
add
lret
ds
sti
fcompl
jnp
adcb
shrb
sbb
int3
xor
rcrl
xchg
stc
mov
test
push
popa
and
ds
je
push
jge
mov
mov
es
ret
arpl
jo
inc
jecxz
pop
cmp
imul
mov
inc
mov
js
fisttps
cwtl
scas
push
mov
jge
and
push
dec
inc
lret
nop
out
push
cmpsl
in
cmp
xor
push
loope
pop
pop
mov
mov
lds
dec
xchg
mov
imul
jae
ret
adc
inc
ret
enter
sbbb
lcall
mov
fwait
sub
adc
push
sbb
push
pop
cmp
mov
dec
enter
push
addb
lret
sti
sub
out
mov
xor
sbb
out
fwait
sub
jb
pop
lahf
mov
jmp
pushf
inc
xchg
sub
pop
and
popa
cmp
xor
cmp
jmp
jp
xchg
xor
and
mov
sbb
test
adc
and
push
pop
jo
cmp
aaa
mov
add
pop
vpshlb
adc
ja
test
mov
jp
test
ja
push
jg
sub
lods
rcrl
outsb
sbb
popf
subb
sarl
xchg
xor
sub
jp
dec
fsubs
data16
sub
fcompl
lret
mov
jno
lcall
ja
pushf
leave
cmp
inc
mov
inc
iret
lock
into
outsb
mov
xorb
mov
cmp
sbb
cld
pop
ds
lods
ret
pop
push
inc
inc
les
fadd
xchg
add
idivl
xchg
mov
outsb
cs
mov
jno
std
lret
loope
out
cmp
gs
cmpsb
popa
cmp
mov
dec
sbb
xor
pop
int
test
out
sahf
icebp
xchg
es
pop
popf
repnz
out
in
xchg
bound
popf
push
mov
mov
sbb
mov
or
mov
pop
push
stos
xlat
stos
xchg
rcrl
pop
or
imul
jg
popa
cltd
dec
mov
cmp
fs
push
inc
xchg
push
cli
mov
xor
cltd
negb
mov
sahf
add
mov
sbb
pop
lahf
cmp
jo
inc
testb
frstor
jmp
out
outsl
fisubrs
cmpsb
out
xchg
push
jae
dec
push
out
mov
leave
pop
repnz
test
xor
icebp
aas
push
bound
imul
adc
shlb
rolb
fimull
or
sub
sub
test
hlt
push
mov
fcmove
push
aaa
sub
cmp
into
stc
stc
ja
das
xchg
daa
imul
inc
fwait
and
jmp
and
lcall
xchg
mov
sar
xchg
adc
jae
dec
mov
sbb
loop
adc
sbb
aam
movsl
pop
ret
mov
test
stc
hlt
sti
jle
sti
iret
ss
lods
outsb
out
inc
push
inc
and
jge
mov
lock
xchg
mov
icebp
call
pushl
mov
mov
or
scas
mov
mov
adc
mov
inc
mov
lods
gs
adc
push
xchg
mov
and
jle
adc
jp
mov
mov
sarl
ljmp
movsl
insb
mov
jle
inc
out
bnd
mov
lds
add
loop
fcmovnu
mulb
sub
mov
andb
mov
dec
int3
shrl
aaa
insb
leave
movsb
add
xor
stos
fisttps
kxorw
add
ret
shll
inc
in
rclb
sub
cltd
pop
mov
clc
imul
rcrb
xchg
or
es
xor
add
jle
jnp
popf
pop
lds
pop
shll
or
notl
out
fmuls
adc
jns
jge
mov
push
es
push
mov
jb
sub
inc
xchg
test
or
mov
mov
inc
addps
jg
stc
arpl
mov
sbb
pushf
inc
cmp
arpl
enter
movsl
ret
cli
xor
fsts
shlb
das
es
cmp
pop
push
imul
pop
repz
sub
push
popf
inc
ret
negl
xor
bound
mov
or
pop
adc
mul
outsl
loop
insl
imul
jb
jne
push
mov
into
mov
adc
leave
push
aam
arpl
cmpsl
fnstsw
sub
add
push
push
data16
fiaddl
dec
and
mov
sbb
push
or
subl
cmp
mov
cmp
adc
test
inc
clc
dec
jne
mov
push
jmp
in
jo
mov
cwtl
or
xor
daa
sbb
rcrb
sbb
cs
adc
fldt
cmp
loop
mov
repz
lods
xor
xor
rcl
sbb
aad
cwtl
neg
push
xchg
push
das
sub
and
sbb
aas
stos
mov
in
pop
pslld
repz
les
insl
cli
int3
and
imul
cltd
dec
es
adc
dec
cmp
jmp
stos
int3
clc
mov
outsl
cltd
icebp
cmp
lea
add
call
aas
xor
cwtl
mov
mov
aad
push
push
sub
les
shlb
lcall
xor
cmpsl
jae
insl
sub
fdivrl
xchg
repz
inc
xor
fdivl
add
shlb
dec
leave
jge
scas
jg
pop
loope
inc
fucomp
mov
ror
jl
dec
or
jecxz
dec
adc
sub
rcrl
test
and
mov
mov
pop
daa
out
addr16
xchg
mov
mov
mov
push
fnsave
sbbb
sbb
das
popf
ja
jg
mov
dec
in
and
in
pop
mull
add
cmp
inc
push
out
adc
in
hlt
sub
add
and
adc
push
cmp
dec
xor
loop
xor
out
adc
arpl
and
ficoms
cld
sahf
hlt
das
rclb
icebp
je
repz
add
cli
jne
pop
lods
push
les
lahf
cmp
fildl
repz
inc
push
outsl
fiadds
dec
rol
imul
sbb
jge
and
add
xchg
dec
divl
xchg
xchg
jbe
fdivs
push
mov
roll
iret
xor
xor
jnp
enter
ret
mov
mov
or
bswap
mov
xchg
dec
or
lock
dec
bound
cmp
jge
xchg
xlat
fiadds
xorl
lret
push
cmp
jns
mov
sbb
mov
dec
cs
dec
shll
jbe
arpl
aam
sub
dec
loope
cs
jecxz
pop
lret
xchg
sub
jmp
xchg
and
jns
mov
cmp
add
cli
pop
jp
or
mov
fwait
or
pop
mov
movsb
inc
aaa
inc
js
sbbb
fsts
or
add
int
mov
test
movsl
icebp
clc
push
xor
in
fwait
mov
in
cmp
lahf
adc
lds
mov
xchg
ret
inc
xor
test
js
lock
stos
push
add
ds
jae
cmp
xchg
and
mov
lock
clc
repz
xlat
leave
xchg
xchg
xchg
stos
je
adc
xchg
les
jb
xchg
test
sbb
sbb
movsl
sub
xlat
dec
jo
xlat
push
cmp
cmp
ljmp
xor
xchg
mov
xchg
jbe
addr16
js
daa
shlb
cmp
int3
daa
fisubrl
mov
adc
sbb
stos
mov
mov
stos
sub
jecxz
jp
fs
jmp
daa
pop
xor
icebp
test
into
push
jecxz
mov
mov
mov
pmaxsw
clc
adc
xlat
sbb
fistl
flds
xchg
int
xchg
xchg
xor
push
lcall
std
scas
cmp
sbb
add
and
lods
jge
xor
xor
push
rorb
iret
lods
nop
mov
mov
loop
pop
inc
mov
cmpsl
mov
aaa
xchg
xor
cmp
or
xor
icebp
dec
cmpb
loop
add
in
insb
arpl
es
push
mov
out
loopne
ja,pn
nop
sub
arpl
push
or
xchg
iret
xor
push
mov
fldcw
insb
sbb
dec
push
or
shlb
add
mov
sbb
add
ja
adc
add
sarl
cmc
inc
dec
fnstenv
or
decl
orl
xchg
xchg
jecxz
lfs
mov
faddl
sarb
testl
sbb
dec
push
ss
and
mov
xchg
push
fwait
xchg
cmp
repnz
mov
std
into
insb
push
lcall
add
inc
mov
xchg
sub
cmp
stos
dec
jmp
lahf
jecxz
push
cmp
lds
fldt
jmp
dec
mov
xor
rcrb
jle
adcl
lret
cmp
pop
loop
and
xchg
in
pop
imul
fbstp
pop
xor
mov
test
ja
in
dec
and
out
scas
and
adc
es
push
push
arpl
repz
dec
jb
xor
adc
stos
int
ss
lret
lret
mov
mov
std
lret
and
pop
pop
cmpl
test
cmp
lahf
jnp
fists
scas
mov
pusha
mov
pop
pop
fldcw
aad
ffree
add
faddl
mov
push
daa
fidivs
adc
mov
mov
out
inc
and
push
sbb
adc
cmpsl
push
sbb
mov
push
cmp
inc
add
ficomps
in
mov
mov
xchg
adc
test
inc
xor
mov
adc
stos
cmpsl
in
cmp
cmp
es
test
shl
mov
ss
inc
cmp
jne
sar
adc
push
mov
outsb
adc
nop
outsb
ljmp
pusha
sbb
add
pop
dec
sbb
in
movsl
addl
jecxz
xchg
inc
pop
rcrl
call
into
test
and
clc
sub
sub
imul
out
cmpsb
mov
out
jecxz
push
lret
adc
sbb
sub
xor
movsb
jne
xor
jge
out
xchg
ror
sbb
fstps
or
mov
jl
or
xchg
arpl
cmp
mov
and
ror
cmp
test
lds
inc
adc
lods
das
mov
enter
movsl
push
pop
push
jle
cmp
or
mov
out
dec
in
push
dec
xchg
in
stos
inc
test
lahf
in
jae
jb
sbb
jecxz
cmp
mov
into
push
int
xchg
xchg
rcll
cmp
and
inc
mov
jecxz
jmp
mov
or
and
or
lods
out
mul
jno
out
xor
sub
or
mov
sahf
cltd
inc
push
mov
inc
lret
inc
cmp
adc
sbb
pop
cmp
sbb
mov
cmp
dec
adc
jp
test
xchg
repz
nop
pop
dec
sbb
push
push
sub
push
push
jp
mov
dec
and
sub
sub
sub
jno
insl
mov
call
ret
stos
jp
push
fstl
mov
adc
mov
aas
scas
or
sbb
movsb
xchg
jbe
pop
or
or
in
xor
int
mov
mov
shrb
adc
fwait
repz
adc
data16
rolb
imul
add
cwtl
enter
fidivl
mov
outsl
xchg
movsl
xchg
mov
and
pop
and
sar
sahf
stos
fbstp
test
mov
iret
or
je
and
pop
jb
mov
cmp
outsl
out
in
xchg
and
pop
jbe
es
push
outsl
jnp
mov
bnd
nop
cld
test
ror
mov
inc
jns
vpackuswb
rol
daa
xchg
lods
out
sbb
xchg
mov
sbb
sti
adc
cli
lods
and
in
sbb
adc
idiv
mov
sub
ret
lret
mov
shll
and
outsb
xchg
pop
pop
pop
push
adc
adc
repnz
jg
fmulp
sbb
xor
sub
jecxz
mov
adc
shl
icebp
sti
push
add
repz
mov
pop
mov
mov
outsb
jne
lahf
fisubl
frstor
repz
repnz
push
push
fwait
mov
xchg
das
test
out
je
pop
add
mov
movsb
cmp
aas
popa
add
data16
or
push
jecxz
mov
arpl
into
push
sub
inc
mov
or
xlat
jne
gs
repnz
iret
push
movsb
popa
cltd
push
cmc
into
dec
fsubrl
pop
gs
les
stc
cmpsl
dec
sti
and
aas
mov
xchg
pop
cmp
jae
push
imul
xor
mov
or
mov
jns
dec
push
pop
ret
adc
lret
rorl
scas
mov
xchg
inc
aad
mov
mov
mov
or
mov
or
ljmp
icebp
add
jno
lds
add
jmp
mov
scas
sti
jmp
xor
hlt
inc
mov
in
stos
popf
je
jl
mov
arpl
rcrb
pop
lcall
and
mov
jo
aam
test
shlb
test
push
cmp
sahf
fldt
fisubrs
mov
or
xchg
dec
bnd
popa
and
xor
movsl
stos
andb
fsts
xchg
xlat
jle
and
clc
ret
fcoms
outsb
cmp
and
sbbl
cmp
test
int3
lcall
mov
mov
setle
adc
xchg
daa
adc
add
fistpll
pop
pushf
and
xchg
inc
mov
test
add
out
sbb
dec
push
arpl
mov
adc
loope
int3
in
add
or
mov
lcall
ljmp
aaa
jne
add
lea
leave
movsb
jl
scas
xlat
test
ret
and
cmp
cli
pop
jbe
outsb
fadds
adc
inc
inc
loopne
fs
pop
popf
xchg
inc
imul
pop
cmp
mov
fstl
ret
cmpsl
gs
pushf
iret
aas
test
pop
and
ss
push
in
inc
sbb
lcall
cmp
cmc
mov
mov
xor
mov
subb
mov
jns
aad
jmp
inc
inc
jne
pop
ja
shll
and
mov
add
mov
mov
test
insb
movsl
sahf
test
sbb
pop
xchg
push
push
xchg
pushl
ja
mov
or
jne
in
and
sbb
inc
lret
frstor
mov
push
mov
xlat
xor
mov
mov
movsb
pop
jae
shlb
fildll
xchg
mov
inc
out
data16
repz
arpl
sbb
stos
mov
nop
aas
insl
add
jb
pop
mov
and
test
fidivl
cltd
add
sbb
push
fwait
mov
pop
aas
add
jno
xchg
andb
mov
push
dec
jl
dec
in
inc
mov
ds
popa
pop
or
ds
test
push
testl
mov
pop
sahf
loope
fidivrs
in
inc
cmp
pop
inc
imul
std
pop
cmp
pop
adcl
push
pop
pop
cmp
divl
cmp
pop
push
fimull
test
push
js
jae
fsubs
arpl
xchg
cli
cmp
mov
push
adc
pop
notb
mov
mov
push
je
loopne
push
inc
mov
mov
lods
rol
test
out
and
cmp
lea
or
inc
jbe
mov
or
push
pop
adc
pop
shl
inc
int3
xchg
pop
add
inc
fisubrl
mov
cmpsb
je
cltd
popa
andb
fistpl
dec
cmp
rcl
dec
out
int
mov
cwtl
stos
ja
pop
lods
std
scas
imul
push
in
and
pusha
rorl
in
negb
mov
data16
jg
xor
mov
inc
fidivrl
inc
div
and
loopne
dec
rcrl
xor
pop
ss
rorl
xor
or
xchg
lahf
cld
dec
iret
or
popa
cmpsb
mov
pop
pop
sti
push
xor
in
testl
in
cmpsl
cmp
push
jp
pop
mov
mov
in
test
rcrb
ljmp
loope
int3
lret
lock
mov
mov
test
roll
popl
pop
xor
push
pushl
shrl
int
push
pop
dec
incl
pop
lock
in
mov
lcall
lds
jno
mov
stos
jae
dec
lea
int
xchg
popf
and
popf
fidivrs
mov
mov
sub
dec
and
es
aad
xorb
rcrl
ljmp
inc
je
push
sub
push
mov
ss
and
jb
loop
js
pop
dec
hlt
push
loop
add
mov
dec
adc
and
adc
pop
jno
xchg
lcall
push
stos
push
aam
nop
push
out
add
cmpsl
movsb
sub
inc
jge
sbb
adc
je
pop
les
daa
sub
pop
dec
adc
xchg
cld
rol
mov
daa
or
dec
fnsave
and
cltd
das
adc
fists
fsubl
mov
das
call
fbstp
ss
xor
decl
mulb
in
jl
push
jno
popa
sbb
decl
cld
inc
fbstp
pusha
ret
push
iret
flds
xor
filds
add
xchg
out
jl
js
insb
sub
test
inc
push
lret
popa
int3
inc
ret
xchg
lods
sbb
jno
add
or
lea
pusha
and
pop
out
stos
push
aam
scas
in
xchg
lahf
insb
xchg
pop
sub
cmp
scas
and
fsts
ret
popa
and
pop
icebp
lret
leave
lahf
aas
ljmp
mov
push
pop
out
jecxz
fmull
xchg
inc
xchg
lods
sbb
add
rol
xlat
mov
xchg
loop
inc
fsubl
cmp
xchg
ret
mov
cmp
das
push
arpl
ja
push
add
pop
and
mov
fidivrs
jg
mov
loope
add
loop
scas
ljmp
sbbb
mov
popa
pop
orl
into
jbe
xchg
sub
jecxz
stc
icebp
sub
mov
xchg
add
imul
movsb
pop
pop
mov
or
sbbb
pusha
imul
popf
jge
frstor
pop
das
xchg
popa
sub
add
xchg
cli
inc
push
pop
daa
stc
mov
int3
dec
adc
outsb
cs
test
cli
cwtl
and
sar
inc
scas
add
xor
mov
cmp
dec
repz
aaa
xorb
sub
dec
jg
inc
sbbl
movsb
push
jmp
pop
inc
mov
pop
mov
mov
cli
lcall
adc
push
dec
dec
mov
fldt
mov
hlt
out
mov
xor
mov
jno
add
enter
lods
mov
jp
test
mov
sar
fwait
xor
cmp
test
repnz
fs
aaa
lds
pop
ja
jmp
sbb
mov
std
nop
sub
fstpt
adc
fdivl
fiadds
les
inc
insl
imul
pop
jecxz
dec
je
xchg
sub
push
xchg
xor
adc
stos
mov
lcallw
adc
cmp
mov
mov
movaps
ljmp
nop
pusha
sub
ret
pop
loopnew
jnp
ds
push
lret
inc
popf
add
xchg
push
lret
xchg
mov
or
xchg
xlat
sub
outsb
test
cmpb
mov
or
mov
faddp
mov
pop
push
dec
sbb
enter
mov
in
shl
jb
test
jmp
inc
mov
add
arpl
jle
mov
pushw
pushf
inc
xchg
or
cmp
fistpll
and
xor
lea
dec
adcb
push
shlb
pushf
std
pop
int3
or
loope
dec
jnp
xor
test
scas
je
push
push
push
adc
cmp
stos
lahf
subl
js
mov
jecxz
repnz
out
rorb
mov
mov
dec
fldt
testb
xor
lds
loop
cmp
jl
ja
aas
mov
cmp
xchg
roll
sbb
inc
js
inc
inc
imul
mov
arpl
jg
sbb
shlb
das
push
dec
jno
pop
pop
sub
ret
jo
and
and
daa
push
sbb
sbb
out
movsb
xchg
loope
mov
outsb
mov
rorb
pop
out
jmp
pop
jle
add
jb
outsb
cmp
mov
xchg
pusha
inc
repz
aas
xor
mov
repnz
stos
mov
mov
jno
xchg
nop
mov
adc
mov
rcrl
ret
cmp
ds
or
inc
lret
push
push
into
scas
aam
xchg
sub
ljmp
mov
outsb
push
pop
call
in
cs
mov
pop
pop
sbb
pop
dec
scas
push
jo
aad
mov
pop
div
cmpsb
aaa
or
push
or
lods
xchg
jae
mov
pop
imul
mov
push
sbb
nop
rcrl
cli
fs
dec
mov
notw
sbb
hlt
mov
sub
or
mov
aas
sub
xchg
mov
shrl
js
pusha
dec
cmp
dec
cmp
lds
shlb
call
pop
add
xor
insl
mov
mov
inc
sub
lahf
ljmp
rolb
adc
cltd
and
push
or
pushf
cltd
fisubrs
stos
mov
sbb
in
lods
jno
push
fnsave
mov
sahf
addl
cmpsl
add
push
inc
sbb
data16
pushf
fsincos
test
push
test
adc
in
mov
push
sti
pop
scas
jle
xchg
loopne
movsl
push
in
lret
lock
outsl
hlt
cmp
sbb
test
add
data16
sub
dec
inc
mov
int
mov
add
mov
shr
icebp
aam
mov
or
mov
sti
inc
sub
mov
call
dec
push
iret
stos
dec
sbbb
jle
add
cmp
cmp
rcr
sbbb
push
into
clc
mov
cmp
adc
add
dec
addr16
and
inc
fwait
orb
mov
cmc
mov
lds
xchg
jle
cvtpi2ps
jmp
aam
lock
leave
sbb
fwait
sub
iret
lret
es
mov
cmp
clc
add
mov
rcrl
outsb
pop
dec
sbb
imul
dec
mov
loopne
jnp
mov
ret
aad
adc
mov
xor
or
stc
sti
stos
cli
inc
mov
dec
rcrb
cmpsb
daa
das
cmc
mov
sbb
jmp
je
in
lret
push
push
jmp
outsl
push
scas
lret
mov
mov
hlt
sar
rcrl
cmp
xchg
stos
cmp
add
or
das
hlt
jnp
pop
pop
jg
cmpsl
cmpsb
inc
int
ss
xchg
in
ja
stos
pop
shll
inc
imul
aas
mov
shll
ds
loopne
in
inc
push
cmp
addr16
adc
xor
cmpsl
jle
mov
cmp
mov
outsl
test
loopne
hlt
jge
xchg
xchg
lock
popf
pusha
jns
loope
stos
lret
sub
andps
jne
stos
mov
arpl
leave
dec
ja
mov
faddl
push
mov
jne
xchg
mov
xchg
mov
adc
and
adc
lret
stos
popf
dec
and
sti
xor
ja
in
and
sbb
ret
mov
ss
sbb
dec
push
add
scas
popa
fwait
cs
jnp
cmpsb
sbb
fadds
adc
fwait
subl
jmp
gs
pushf
outsb
adc
mov
pop
outsb
add
and
sbb
daa
lods
adc
push
mov
mov
in
addr16
fwait
decl
pusha
and
xchg
ret
lcall
shr
out
or
iret
enter
out
mov
loopne
sbb
xor
iret
int
fwait
rorl
add
out
mov
add
xchg
in
fcomi
fildll
push
push
insl
sbb
mov
inc
repnz
adc
xor
lfs
iret
or
popf
mov
and
add
rolb
and
cmp
rcll
shlb
fisttps
jl
dec
xchg
andl
popf
inc
push
mov
dec
push
mov
jns
mov
inc
mov
pop
jbe
and
xchg
or
mov
pushl
mov
xchg
shl
imul
insb
stc
shrb
xor
test
test
jl
and
xchg
insl
sub
cmp
call
aas
in
repz
hlt
ss
insb
outsl
inc
test
pusha
xor
xor
push
push
lea
and
jno
mov
and
ss
and
repnz
cmpsb
ds
jbe
out
inc
imull
incl
pop
inc
or
mov
inc
popa
fiaddl
sahf
outsl
rorl
orb
int
xchg
xor
sahf
adc
adc
sbb
aas
inc
mov
push
dec
mov
gs
ja
pop
and
xor
cmp
data16
cwtl
clc
dec
dec
dec
mov
scas
and
adc
adc
jbe
sti
pop
cltd
cmpsb
out
jg
test
nop
add
dec
adc
out
pop
cs
ljmp
fnstcw
mov
cmp
mov
lds
loopne
mov
out
in
fsubrp
push
adc
sub
test
dec
dec
xor
xchg
testl
add
mov
adc
lock
xchg
aad
addr16
lcall
dec
jecxz
mov
in
imul
push
adc
cmp
mov
in
repz
mov
and
xor
mov
mov
adc
push
loopne
roll
test
sbbb
jb
mov
outsl
insb
cmp
idiv
cmp
dec
in
movsb
les
jne
data16
fimuls
or
outsb
pop
jbe
sbb
dec
cmp
inc
out
mov
std
xchg
push
mov
es
or
mov
dec
jno
pushf
out
or
loopne
lock
out
les
jg
jns
pop
test
push
rcrl
lret
jbe
sub
dec
push
mov
inc
xor
ds
shll
and
pop
mov
fisubl
in
push
inc
fcomps
pop
sbb
mov
add
addr16
mov
insl
push
aam
nop
push
int3
test
jl
cmp
push
inc
imul
adc
ror
das
sbb
adc
aam
sub
clc
stos
push
enter
les
cmc
xchg
inc
cwtl
ficoms
inc
lret
add
adcb
outsb
xor
mov
inc
sahf
jecxz
jnp
iret
bound
add
clc
and
aas
xchg
adcb
jo
repnz
xchg
or
push
mov
push
xor
push
sub
cmp
idivb
sbbb
add
pop
jl
test
cs
add
mov
mov
xlat
dec
cmp
imul
push
and
dec
insl
ja
mov
insl
mov
push
adc
cmpsl
xorl
mov
nop
out
inc
cwtl
sti
out
cmc
xchg
dec
mov
xchg
ljmp
inc
fstl
adc
xchg
pop
insb
mov
inc
inc
adc
insb
adc
inc
inc
and
jecxz
inc
mov
add
lahf
nop
dec
enter
jmp
les
ror
dec
mov
xchg
pushf
inc
dec
jge
das
fdivr
mov
in
imul
jmp
inc
out
adc
inc
lcall
aam
rcrb
jp
int
inc
loop
cmc
cwtl
push
push
imul
jle
push
xor
dec
iret
push
loope
pop
adc
ds
sbb
pop
mov
popf
cli
add
and
fucomi
lret
xor
xchg
pop
push
mov
testb
outsl
sbb
and
test
add
push
xor
jge
test
mov
addr16
aam
repnz
xor
insl
icebp
mov
xchg
jmp
clc
ljmp
mov
lret
push
mov
out
inc
mov
mov
pop
add
outsb
xchg
lret
enter
in
in
xchg
orb
pop
jns
mov
sahf
movsl
dec
push
int
lcall
int
mov
subb
xchg
pusha
mov
es
imul
mov
iret
add
into
mov
pop
xor
and
in
mov
xchg
xchg
mov
cmp
fnstsw
mov
pop
xlat
cmp
pop
xchg
popf
ficompl
cmpl
add
and
push
jmp
xor
push
and
cmp
stos
jno
inc
lock
fisttps
dec
jecxz
sub
adc
movsl
mov
fdivrp
mov
mov
xor
add
fimuls
stos
mov
lods
add
xchg
jl
jg
dec
rcr
push
cmpsb
out
sbb
sbb
xchg
mov
push
cmpsl
nop
xchg
ljmp
shlb
jnp
cld
test
les
ret
cli
mov
push
mov
pop
stos
push
dec
icebp
adcb
dec
daa
fbstp
ficoml
ret
arpl
or
inc
stos
decl
scas
mov
mov
jle
cmpb
or
aad
xchg
push
loope
mov
outsl
stos
jbe
mov
pushf
es
xchg
add
sub
loopne
rorb
js
loopne
xor
insb
fcompl
xlat
xchg
cld
mov
enter
aad
and
shlw
es
aam
mov
jmp
cmp
cltd
pop
jmp
mov
sbb
sbb
mov
lods
ljmp
pop
lock
jle
or
cs
pop
or
mov
aas
in
fdivl
push
push
movsb
call
or
push
pop
insl
sbb
out
dec
mov
inc
scas
scas
inc
push
mov
add
push
mov
sub
test
in
aam
xor
and
loopne
and
popaw
fistl
fsubl
imull
mov
xor
dec
jle
leave
ljmp
add
and
divb
pop
mov
inc
and
mov
pop
out
adc
lods
insl
sbb
jae,pt
sub
mov
insb
push
jno
pushf
fsubrl
les
adc
imul
lret
insl
sbb
push
adc
mov
call
aas
mov
push
dec
je
cld
stc
inc
and
inc
add
dec
pop
shl
sbb
loop
and
pop
aad
mov
xchg
xor
push
xor
mov
mov
cwtl
call
pop
xor
or
fldt
add
jle
add
mov
mov
sarb
out
cmpb
repnz
pop
scas
test
ret
adc
or
mov
test
dec
pop
dec
das
ror
jns
iret
push
insb
and
cmc
punpckhdq
sbb
int3
adc
cmp
sbb
jns
ja
lea
imul
cmp
jnp
lods
sub
sti
xor
and
xorb
fdivrs
fwait
xor
sbb
cmpb
fdiv
sbb
sub
clc
call
mov
loope
xor
out
mov
xor
cmp
das
sub
sub
push
mov
dec
mov
push
sbb
dec
pop
mov
jns
xlat
push
cwtl
popa
jo
shlb
push
cwtl
sarb
push
push
jge
rol
ljmp
and
into
mov
ja
xor
outsb
inc
jl
out
or
stc
fwait
mov
cs
dec
inc
jb
test
inc
jo
scas
adc
imul
pushf
cli
andb
mov
ss
addb
pop
xchg
rcll
fimuls
xchg
aad
fwait
jle
stos
in
cmp
xchg
mov
sub
stc
mov
jns
rcll
psllq
xchg
push
lretw
adc
shlb
cmc
mov
lcall
aas
mov
sbb
adc
xchg
mov
out
popf
pushf
adcl
mov
outsb
loopne
pop
outsb
cld
push
mov
mov
movsl
dec
mov
cwtl
adc
push
jnp
add
pop
cmp
daa
cmp
js
hlt
cmpb
cmc
inc
pop
in
sub
in
nop
dec
sub
fisttpll
sbb
shll
xchg
dec
xor
or
outsl
add
sbb
jmp
pop
inc
push
mov
ljmpw
xor
lret
jnp
add
dec
dec
mulb
nop
clc
mov
inc
xchg
movsl
rcll
fstp
push
add
push
pop
clc
xchg
or
in
mov
pop
stos
xchg
and
scas
mov
inc
dec
sub
mov
lret
push
push
and
arpl
pop
outsl
mov
cltd
sahf
add
mov
mov
and
dec
imul
add
in
mov
adc
dec
dec
xchg
jb
push
stos
call
xor
aaa
mov
out
inc
outsl
adc
mov
push
cli
clc
xchg
rclb
lcall
stos
push
cmpb
adc
cld
sbbl
fistpll
pop
fcoms
add
pusha
imul
in
or
leave
bound
add
das
push
dec
add
pop
xchg
fwait
sbb
cmpsb
xlat
imul
je
loop
fwait
xorb
xchg
xorl
clc
les
in
sub
mov
jp
mov
mov
cli
and
push
cmp
add
into
lock
or
out
into
inc
ljmp
seto
adc
out
mov
xor
sahf
jbe
mov
inc
sub
out
add
ret
out
inc
pop
pop
incl
jbe
cmp
rclb
aam
push
dec
mov
sub
sbb
sbb
mov
mov
dec
icebp
add
out
pop
inc
pushf
cld
cmp
test
loope
mov
popf
mov
mov
jmp
mov
sbb
xor
cltd
cld
jle
out
pop
jle
mull
add
xchg
ret
or
pop
cmp
insb
faddp
andl
test
xlat
dec
mov
fstpl
nopl
arpl
push
cmp
sub
leave
js
pop
xor
enter
cmc
cmp
in
leave
sahf
mov
jb
jge
mov
push
push
outsb
xchg
mov
bound
jl
mov
daa
mov
push
add
lds
sbb
push
push
cmp
mov
hlt
xchg
inc
or
mov
mov
out
shrl
cmp
popf
in
jns
cmp
outsb
mov
popf
int
jo
sub
mov
push
loopne
lahf
sbb
loope
jnp
pop
jge
add
test
daa
mov
enter
push
adc
sbb
xchg
cltd
jne
ficoms
cmp
inc
fistps
fucomip
lock
inc
pop
dec
sbb
ja
dec
leave
mov
pop
jnp
or
add
ret
enter
or
lret
fiaddl
adc
fucomip
pop
add
insl
loop
sub
sub
mov
in
cmpb
or
dec
xchg
ja
push
lea
stos
push
std
jne
mov
fwait
push
inc
and
xor
in
sbb
xlat
sbbb
jecxz
push
dec
push
mov
mov
outsl
inc
jns
xchg
sub
mov
pusha
imul
xor
jl
aaa
icebp
jmp
lret
inc
xchg
dec
mov
shr
mov
nop
adc
iret
pop
lcall
movsb
inc
mov
mov
out
stos
mov
out
ficoml
aad
xor
add
or
rcl
shll
inc
mov
icebp
ret
sbbb
insb
sub
int3
inc
gs
dec
cmpsb
push
shrl
push
adc
push
nop
lea
lds
add
aam
xchg
test
add
jns,pt
call
xchg
add
ret
sti
and
pop
clc
mov
fdivrl
inc
mov
test
jns
mov
rcll
test
xchg
xchg
or
and
dec
push
or
adc
fsubrl
outsl
and
cmc
popf
sub
dec
cmp
push
stos
dec
mov
icebp
cld
testb
ljmp
loop
xor
fcmovbe
pop
pop
mov
sbb
sub
cmp
adc
lock
dec
das
testb
jp
mov
push
outsb
popf
pop
push
cld
sarb
jg
jle
add
mov
jns
aad
aam
adc
addl
stc
outsb
adc
fst
sub
sbb
sub
aaa
dec
sub
or
xchg
pop
enter
pop
push
adcb
bound
fnstsw
or
mov
lahf
rcl
shl
jnp
xlat
mov
push
push
add
mov
adc
cmc
jmp
dec
gs
andb
xor
or
ror
fwait
cmp
insl
dec
xor
mov
repz
inc
push
rcll
loope
mov
push
mov
hlt
fwait
and
dec
and
mov
sahf
repz
pop
ljmp
and
pushf
out
mov
dec
inc
inc
dec
repnz
dec
pushf
test
fldl
or
jge
push
sbb
xor
or
loop
loope
icebp
xor
sub
xchg
and
popa
mov
mov
fistps
shrl
push
xchg
jne
out
push
nopl
inc
or
inc
lcall
pusha
jge
lds
inc
imulb
cmp
push
dec
pop
and
in
clc
dec
mov
xlat
lea
sub
jecxz
imul
mov
sahf
aaa
fsubl
mov
imul
ss
ret
repz
popf
out
std
and
fisubl
clc
in
jecxz
xchg
ds
icebp
mov
rorl
fistpl
mov
jns
fwait
movsb
xchg
dec
pop
pop
inc
cld
or
xchg
js
and
cmp
push
pop
in
cmp
fcomps
sub
push
xor
lds
int
and
lea
inc
push
jbe
arpl
or
mov
clc
js
fs
sbb
push
mov
and
mov
or
in
out
cmc
mov
sub
push
arpl
mov
testl
cwtl
leave
xor
xchg
in
imul
adc
jmp
cli
sub
sbb
xchg
sar
mov
ret
jmp
int
movsb
cmp
fsub
add
fcoms
addr16
dec
push
inc
andl
dec
push
mov
scas
lods
pop
adc
cmp
js
std
sbb
imul
xchg
lods
push
cld
cmp
addr16
mov
pusha
sbb
add
stos
pop
cwtl
sub
rcr
dec
movsl
cmp
push
fmulp
jle
dec
xor
out
sub
adc
pop
inc
repnz
or
sub
sub
subl
adc
les
sbb
aad
sarb
cmp
cmpsb
pusha
jecxz
ljmp
adc
ret
addr16
clc
inc
lock
addb
std
mov
divl
out
into
lods
sarb
lock
jle
jne
stos
les
sarb
mov
or
xchg
xor
je
in
inc
add
push
test
xlat
jg
mov
xchg
mov
orl
xchg
outsb
insb
lret
sahf
leave
movsl
aas
xlat
cltd
add
ds
fisubs
cmp
imul
movsb
jmp
dec
pop
outsl
lock
jle
es
mov
aad
je
test
sbb
mov
lock
jns
pop
adc
imul
mov
ss
aad
repnz
fstpl
pop
shrl
mov
add
stc
dec
movsl
inc
mov
xchg
stos
cmpsb
js,pt
add
push
mov
adc
push
lahf
xchg
cmp
push
xchg
adc
add
fs
xchg
add
mov
lahf
adc
jno
mov
test
mov
add
cmp
test
pushf
add
fnsave
stc
ret
ficompl
add
fbstp
int3
jo
pop
scas
mov
mov
or
ss
pop
dec
push
stos
ret
leave
into
push
mov
fwait
sub
mov
xchg
subb
jnp
add
fwait
lock
sbb
push
sbb
xlat
push
lcall
gs
push
xchg
nop
sbb
and
pop
insl
sub
mov
in
adc
dec
mov
cmp
mov
sbbb
jnp
mov
mov
mov
add
rorb
fimull
loopne
aad
cld
mov
add
cmpsl
push
mov
inc
dec
fnstcw
sbb
inc
or
sbb
outsb
mov
loopne
dec
xor
nop
pop
push
test
mov
xchg
daa
sbb
movsl
in
xchg
das
and
aam
das
rcll
xchg
pop
mov
xchg
repz
bound
cmpsl
cmp
out
sub
lret
jb
or
adc
insb
cld
or
jge
sub
jno
ds
add
mov
in
loope
xchg
jg
mov
in
add
test
sahf
xor
rcrl
cmpsb
mov
inc
cld
rcl
sub
lods
addl
fsubrs
fistpll
and
or
push
ret
jg
and
push
shll
and
mov
and
lea
shlb
es
jbe
or
adc
or
cmpsl
bound
adc
sub
xchg
and
repnz
add
lcall
ret
hlt
cs
jns
pusha
mov
adcb
sbb
mov
or
jae
inc
push
cltd
popa
jnp
inc
stos
aaa
sbb
aam
dec
xchg
mov
pop
inc
pop
adc
jge
in
inc
loope
or
mov
frstor
cvtdq2ps
out
outsl
ds
sbb
push
daa
movsl
lds
pop
add
data16
xorb
out
call
adc
mov
pop
and
sub
and
sarb
pop
inc
mov
ja
sbb
dec
sbb
shl
inc
scas
subb
pop
out
jne
add
gs
inc
std
xor
std
insb
adc
or
decb
pusha
icebp
mov
test
loope
int
pop
cmp
sub
jle
insb
in
repz
out
shll
loop
mov
jb
push
dec
xor
fstp
ds
pop
mov
sarb
cltd
cmp
aam
xchg
adcl
hlt
push
jmp
mov
inc
and
adc
icebp
cmpsl
pusha
movsl
aam
stos
int3
xlat
arpl
addl
or
pop
pop
mov
mov
sbb
leave
int3
sahf
outsl
jnp
xchg
outsb
ret
push
mov
inc
adc
dec
fisttpll
ljmp
jl
pop
or
push
xchg
pop
sub
ror
or
mov
ja
jns
out
mov
in
and
popf
push
mov
lahf
fs
stc
mov
ss
jb
push
mov
ret
lods
push
cltd
testb
psubw
cmp
sti
sub
mov
je
mov
sbb
and
xorb
xor
add
mov
mov
push
cwtl
ds
es
sbb
push
pop
loopne
add
and
dec
insb
pop
xchg
pop
or
test
and
xor
jle
insb
repz
js
test
fiaddl
repnz
test
pop
stc
mov
repnz
out
xor
inc
fldl
jns
das
pop
xchg
jg
fldl
and
jp
mov
sub
mov
outsb
or
iret
scas
jae
shlb
and
push
sub
mov
cmp
xor
mov
pop
in
stos
add
mov
xchg
popa
sbb
xor
adc
sbb
cmp
cmpsl
jbe
push
inc
cwtl
and
je
lret
cmp
xor
sbb
mov
iret
jns
in
leave
mov
inc
enter
mov
lcall
imul
cwtl
mov
rolb
xorw
sbb
sub
mov
test
sub
add
or
aad
adc
fs
jg
daa
jge
test
das
notb
mov
popl
aam
add
xor
dec
popa
movsl
cmc
inc
xor
push
sub
enter
mov
mov
sbb
roll
test
jns
jo
popa
add
out
repnz
lahf
dec
jg
jecxz
inc
mov
xchg
hlt
outsl
clc
push
in
clc
mov
mov
aas
dec
cmpsb
in
or
push
loopne
and
mov
fldcw
addr16
in
clc
lock
lret
jl
mov
mov
lds
push
dec
dec
jns
fisttpll
mulb
mov
mov
jne
adc
or
iret
outsb
push
stos
pop
push
fstps
dec
data16
scas
or
adc
sar
decb
roll
movb
push
loopne
dec
dec
fadds
jns
pop
push
push
mov
out
and
push
lock
jno
pop
js
xchg
pop
add
or
mov
jbe
pop
cmpsl
dec
xlat
int
mov
sub
iret
inc
negb
mov
inc
lahf
jb,pn
mov
outsl
idivb
cmp
clc
adc
iret
insb
mov
dec
or
popa
push
jne
mov
popa
adc
dec
pop
pop
repnz
dec
jnp
and
and
out
cmp
and
jl
dec
ret
cld
mov
and
jno
xor
ficomps
xor
enter
sbb
int
cld
js
mov
and
clc
lcall
imul
repz
mov
jmp
mov
cmp
mov
clc
or
xchg
sbb
pop
divl
and
xor
popf
orl
fistps
mov
repz
mov
sets
jmp
and
xor
mov
sub
sahf
xchg
std
mull
in
sti
jmp
push
mov
cmp
movsb
icebp
jbe
insb
mov
hlt
xorl
fcoml
addr16
push
call
inc
mov
pusha
leave
add
fnsave
xchg
test
idivb
data16
test
adc
jg
inc
ljmp
adc
or
pop
stos
aam
repz
xchg
sub
add
mov
fnsave
adc
mov
mov
cld
mov
xchg
cmp
inc
lods
mov
mov
xchg
in
and
sub
bound
dec
std
cmp
or
dec
dec
mov
fstpl
stc
outsb
popf
or
loope
cli
mov
dec
jbe
fbld
dec
sub
call
clc
lcall
inc
inc
aaa
xchg
mov
add
jg
movsb
lods
jmp
cld
adc
out
adc
sbb
cmp
out
into
inc
cli
dec
mov
sti
inc
mov
test
arpl
ss
xor
mov
rorb
mov
dec
punpcklwd
inc
packuswb
dec
shlb
lea
sbbb
loope
push
outsb
mov
dec
push
cs
inc
aad
movsb
in
add
sbb
and
ja
enter
mov
sbb
imul
add
shll
sub
fwait
aad
mov
jecxz
push
mov
clts
xchg
and
cwtl
in
insb
mov
xchg
adc
jbe
mov
jge
test
mov
xchg
lods
dec
pop
jo
pop
or
arpl
mov
int3
hlt
sub
das
out
fldt
push
cmc
lea
jno
in
jecxz
outsb
test
xchg
shll
aas
dec
mov
dec
xor
pop
sub
pop
fdivrl
out
int3
fdivrl
mov
lcall
push
lock
sub
mov
loop
enter
test
xchg
and
lea
jp
gs
cmc
imul
arpl
sub
sbb
xchg
cmpsb
stos
adc
jbe
movsb
add
fdiv
jp
lahf
sbb
jo
pop
aas
leave
push
mov
mov
adc
out
ret
adc
jecxz
push
lock
inc
outsb
push
or
cmp
nop
test
movsb
adc
cmp
popa
and
xchg
xchg
inc
lods
cmpsl
sbb
sub
dec
pop
dec
fisubl
rorb
inc
jne
push
aas
sbb
push
mov
jo
cltd
std
mov
fptan
xchg
pusha
pop
mov
xor
dec
pop
xor
jp
sbb
and
xchg
imul
imul
fs
inc
decb
and
cmpsb
aad
fists
fs
xchg
int3
xor
stos
sub
stos
stos
inc
xchg
and
jne
xor
and
push
jl
test
and
dec
mov
mov
lock
addr16
jne
addb
in
lds
rclb
sub
out
insl
push
test
jbe
leave
jb
pop
aas
dec
mov
aad
loop
bound
or
xchg
jno
rorb
cwtl
cmp
movsb
je
test
jnp
sbb
popf
add
dec
lcall
or
pusha
ljmp
xchg
test
ret
fidivrs
pop
jb
int3
leave
testb
xor
lret
mov
pop
jp
mov
sbb
mov
out
ret
push
sub
jmp
jl
mov
clc
cli
out
mov
fwait
xor
xor
aaa
aam
push
xor
mov
mov
push
lea
push
push
ret
mov
mov
ja
aas
sbb
mov
fcmove
mov
das
mov
xor
push
int3
push
inc
add
aad
data16
dec
test
lods
jnp
jle
add
stos
xchg
ljmp
rol
cmp
fidivrs
adc
sub
fs
cmc
es
and
add
xchg
mov
int3
push
sti
jp
aas
mov
decb
push
rcr
scas
fildl
in
dec
iret
std
cltd
rorb
xchg
cltd
in
cmc
ffree
cltd
pop
adc
repnz
lods
fsubrl
pop
call
dec
inc
xchg
out
xchg
cli
daa
mov
xlat
flds
lret
test
mov
insb
push
aad
xor
cmp
xchg
add
mov
jne
in
jnp
jnp
in
jno
dec
lcall
mov
inc
jmp
icebp
mov
dec
xchg
std
xor
lahf
and
and
jne
cmpsl
mov
mov
push
jb
mov
push
fmuls
bound
dec
mov
shl
push
or
or
and
jb
or
push
or
cwtl
pop
out
addb
in
xchg
pop
mov
mov
adc
xchg
pop
jno
or
mov
sub
and
mov
or
es
mov
test
es
hlt
adc
out
nop
outsb
cmp
mov
ret
mov
popf
in
insl
arpl
ljmp
std
cmp
popa
cmp
add
push
inc
aas
jae
sbb
sbb
popf
mov
les
popf
xchg
jb
fwait
or
lea
repz
xor
out
mov
aas
fisubs
adc
adc
aad
lods
loopne
repz
cmp
pop
adc
hlt
mov
fnstcw
fcmovnb
nop
dec
out
popf
loope
and
cmpsb
aam
sub
fwait
data16
fimuls
out
dec
les
leave
pop
scas
imul
insl
call
sbb
mov
call
mov
sahf
loop
insb
dec
add
shrb
or
mov
sub
ss
cld
imul
roll
sbb
lods
mov
push
lods
push
fidivrs
jp
sub
mov
xlat
ret
jbe
fiadds
incb
test
or
xor
add
jge
aad
out
or
mov
scas
and
push
adc
push
push
push
cmpsb
push
iret
icebp
arpl
shll
xchg
lret
mov
loopne
pop
jmp
fidivrs
cmp
int3
enter
movsb
and
andb
mov
in
mov
sarl
or
inc
sar
movzwl
mov
sarb
in
add
cs
insl
push
movsl
add
adc
je
adc
aaa
xor
xchg
mov
repnz
jns
pop
cwtl
mov
in
popa
push
dec
insl
xchg
cmpl
inc
push
mov
sti
inc
cmp
repnz
movsl
mov
and
push
adc
std
les
mov
testl
cmp
push
push
inc
fimull
lock
gs
mov
push
out
or
add
dec
inc
xor
inc
cwtl
sub
pusha
inc
out
les
mov
dec
mov
mov
lock
or
arpl
pop
mov
xlat
aad
repnz
push
mov
movsb
push
mov
imul
or
andl
movsl
or
ja
notl
ss
popf
push
out
and
or
addr16
shll
push
orl
mov
mov
mov
add
push
js
lds
dec
pop
mov
xlat
push
repnz
push
push
push
stos
data16
or
pop
shll
loope
push
sarb
pop
data16
and
sbb
xchg
and
dec
scas
mov
outsl
rolb
cmp
pop
inc
pop
gs
iret
add
cmp
push
popf
je
scas
scas
repnz
stos
cmp
pusha
stos
dec
push
mov
jmp
frstor
lret
and
mov
les
rcll
and
mov
jmp
ljmp
test
jns
cmp
and
aam
fndisi(8087
and
or
or
lock
iret
mov
cld
cltd
sbb
out
xchg
adc
mov
mov
pop
jp
cmp
jmp
pusha
mov
sbb
sahf
inc
bsf
outsb
inc
sbb
push
fadd
xor
sub
bound
pop
add
push
xlat
inc
bndldx
xor
in
xchg
jp
fstpl
mov
pop
add
rep
or
mulb
repz
mov
cmc
cltd
shr
adc
dec
scas
rcrb
fcompl
inc
jmp
fcoml
jecxz
outsb
mov
ljmp
repnz
xchg
jl
ljmpw
mov
push
mov
pop
cld
inc
jne
dec
lods
hlt
dec
push
push
jge
aad
pop
negb
stos
xchg
xchg
and
add
icebp
fbstp
jne
repnz
fs
repz
lret
xor
push
jbe
sub
and
pushl
stc
xchg
adc
sbb
xchg
call
out
push
outsl
iret
jo
fstpl
jae
jecxz
cmp
sarb
mov
sub
loop
dec
push
aas
xchg
adc
idivb
insl
pop
je
addl
rep
fs
jmp
push
mov
jecxz
add
stos
cmp
mov
jmp
iret
pop
sahf
andl
call
arpl
push
mov
cltd
rorb
ds
cmpb
push
jb
icebp
das
inc
dec
cwtl
iret
and
xor
lea
ss
xor
cltd
daa
stos
sub
js
jl
in
push
mov
push
adc
xor
dec
sub
into
repz
pop
pop
rclb
inc
dec
xchg
cwtl
mov
ficoms
into
pop
stos
dec
push
push
jg
sbb
inc
lahf
jnp
and
stos
adc
mov
mov
sbb
add
mov
push
fidivl
mov
cmp
leave
mov
xor
stc
sahf
sti
imul
xor
clc
fwait
aas
fdivr
cmc
mov
insl
out
repnz
gs
jo
jb
paddw
push
jb
les
icebp
and
cld
lret
mov
andl
adc
jae
out
in
sub
dec
call
lock
push
shl
mov
lea
dec
cmp
pop
fists
ret
inc
xchg
inc
frstor
or
stos
pop
push
push
fcomi
push
outsl
push
xor
loope
sub
pop
es
add
push
sti
mov
push
pusha
add
not
pop
or
mov
or
das
sub
stos
andl
mov
sbb
push
xor
lahf
dec
sti
sub
dec
imul
push
clc
or
adc
cmp
pop
sbb
pop
ja
jecxz
aas
jno
cmp
pop
jno
mov
sub
mov
ss
fmull
push
and
sbb
or
sbb
movsb
movsb
in
mov
xor
adc
mov
repnz
in
jno
mov
pop
and
icebp
mov
aas
ljmp
dec
jg
sbb
cmpb
clc
nop
sbb
push
fsubr
lahf
mov
negl
push
push
push
movsb
push
cmp
lret
ret
mov
rcrb
jne
mov
jp
mov
or
hlt
mov
cmp
addr16
pop
pop
push
movl
sub
pavgw
add
and
mov
dec
cmc
cld
and
out
pop
daa
xchg
fisttpl
sub
dec
fadds
xchg
test
pop
cwtl
in
cmpb
sbb
lds
rol
jo
cwtl
enter
cltd
xchg
lret
ja
imul
cmpsl
and
or
push
in
lahf
sub
in
xor
cwtl
mov
hlt
pop
or
jnp
dec
adc
mov
adc
push
daa
and
cmpsb
mov
cmp
mov
mov
icebp
sti
mov
ljmp
mov
scas
dec
mov
and
and
jl
jecxz
test
adc
test
xchg
inc
cmp
xchg
lret
inc
jnp
sub
adc
inc
sti
add
or
mov
jns
mov
faddp
test
stc
mov
sub
adc
outsl
jg
ficomps
sub
mov
jecxz
pop
push
aaa
cmp
or
pop
inc
or
xchg
dec
push
fldlg2
shl
push
cmp
andb
jle
fsts
mov
jns,pn
rol
push
mov
iret
aaa
in
lret
push
arpl
in
fnsave
mov
in
sti
stos
adc
adc
pusha
push
or
push
pop
lret
xor
inc
and
clc
sar
aas
add
inc
cmp
mov
xchg
fisttps
js
mov
in
inc
adc
mov
and
enter
mov
out
out
cmp
lret
add
add
adc
mov
shll
mov
out
lock
loopne
rcl
in
mov
sbb
icebp
ss
jmpw
jbe
push
mov
jo
cmp
add
or
dec
mov
pushl
clc
mov
and
lods
dec
and
cmp
push
jle
mov
xchg
jge
out
ret
jl
xchg
mov
mov
repz
or
nop
pop
push
loopne
lea
sbb
add
mov
pop
or
mov
pop
add
and
enter
lock
fiadds
mov
jp
inc
xlat
cmc
inc
push
xor
xchg
cmpsl
and
jl
push
jne
jle
test
cwtl
enter
shrb
dec
sub
inc
cltd
gs
pop
mov
cmp
xorb
jle
and
test
mov
pop
ds
push
jnp
daa
vpsrld
gs
cmp
xchg
dec
test
movsl
jbe
fadd
push
cmc
cs
or
cld
jbe
push
add
adc
adc
mov
in
pusha
stos
fmull
xor
insb
sbb
fcmovu
in
hlt
and
inc
cli
leave
mul
insb
or
gs
adc
lods
mov
enter
adc
pop
pcmpeqd
lods
xchg
sbb
imul
fistl
les
and
cmp
out
lds
pop
pop
jmp
cltd
adc
fbld
adc
dec
sub
stc
mov
mov
mov
sub
es
xor
jno
cltd
iret
es
adc
mov
leave
aas
in
test
ret
dec
sbb
or
lods
aad
adc
xor
int3
or
mov
movsb
test
xor
fbld
in
pop
scas
xor
xor
pusha
cmpsb
push
jge
or
stos
pop
popf
inc
and
rorl
lcall
inc
xor
xchg
imul
pop
inc
lea
sbb
jmp
bound
sbb
shll
insl
adc
push
xor
popf
faddl
and
push
test
mov
dec
or
test
lods
icebp
imul
mov
test
divb
inc
fwait
dec
dec
cmp
or
gs
cmp
push
inc
int
and
pop
jp
jno
add
rcrb
movsl
push
decl
in
test
jnp
lods
addr16
sbb
cmc
test
lcall
imul
mov
inc
adc
outsb
xchg
sahf
pop
jb
data16
sbb
cmc
pushf
inc
lods
dec
xchg
inc
push
xchg
ss
pop
fsubrs
dec
fsubp
lahf
adc
cs
in
fidivl
pusha
int3
out
sbb
and
push
adc
sahf
filds
or
mov
out
dec
and
add
lea
sti
ret
imul
int3
xor
xor
orb
pop
cmp
pop
mov
cmpsl
inc
jle
mov
fmuls
jnp
fs
xor
pop
fldcw
jle
imul
mov
in
add
push
sub
stos
lret
popf
das
mov
xchg
push
mov
movsl
dec
fidivl
addr16
or
sbb
push
dec
js
xor
insl
add
push
push
mov
xchg
sbb
xor
mov
ds
jle
add
out
mov
aas
test
jae
push
push
enter
add
jae
je
adc
jno
sbb
pop
popl
xchg
sub
stc
jnp
mov
loope
movsb
pop
push
jecxz
clc
test
xor
xorb
sbb
xchg
dec
add
xchg
enter
sbb
subl
pop
fisubrl
sbb
sbb
call
loop
fmull
pop
lcall
jnp
lods
dec
jns
mov
mov
ret
int
shlb
imul
lcall
push
fdivs
scas
test
mov
xchg
cmpl
fidivs
fidivs
subl
pop
outsl
test
pushf
aaa
out
ljmp
mov
add
mov
jmp
jnp
jbe
rorl
outsb
insb
aad
cld
ljmp
adc
pushw
mov
inc
ja
dec
loope
jle
push
test
add
or
push
adc
mov
lcall
adc
in
int
movb
adc
sub
add
cwtl
mov
aaa
and
inc
mov
adc
pop
or
clc
push
cld
mov
mov
add
loopne
int
cmp
nop
je
mov
or
aad
scas
jmp
and
mov
std
sbb
das
lret
and
or
xchg
pop
pop
mov
inc
pop
sub
lret
leave
repnz
push
or
std
lahf
inc
cs
dec
fnstcw
pop
ja
mov
mov
or
cmpsl
in
into
loopne
sbb
stos
nop
shlb
stos
push
jecxz
clc
insb
push
sbb
sbb
jbe
push
insl
sbb
int3
fidivl
adc
add
mov
movsl
sub
pop
loop
icebp
cmp
pop
sbb
daa
sbb
inc
out
push
xchg
sarb
jns
ja
jae
loope
pop
jb
push
aam
cmp
dec
stos
sub
pusha
jge
leave
cmpsl
mov
mov
cmp
imul
pop
stos
lods
arpl
test
les
adc
cmpl
les
rclb
lods
mov
outsl
xlat
dec
sbb
mov
mov
push
and
inc
sbb
js
sbb
mov
jmp
pop
es
jne
scas
cmp
stc
enter
inc
lods
mov
push
inc
inc
push
pusha
ficompl
in
inc
xor
xchg
mov
xchg
andb
sub
fistpl
mov
xchg
loope
addl
pop
xchg
push
adc
aam
mov
sub
mov
dec
stos
rcrl
icebp
cmp
imulb
inc
orb
xor
push
inc
inc
inc
mov
mull
iret
pop
cs
push
sub
sti
into
xlat
pop
pop
dec
hlt
jl
xchg
sub
jns
xor
lea
bound
cli
cmp
pop
cmpsl
ret
jg
xchg
dec
aas
stos
lods
int3
jl
fcom
xor
xor
pop
mov
ja
jo
imul
les
divl
sbb
das
pop
pop
adc
push
pop
movsb
outsl
fadds
push
mov
lods
or
test
mov
inc
xchg
or
push
jmp
sub
in
xchg
and
mov
dec
not
daa
xchg
pop
xor
lcall
inc
imul
mov
lea
jl
addr16
add
dec
cwtl
adc
add
fldl
push
inc
adc
loopne
mov
mov
out
pop
mov
sbb
mov
addr16
outsb
out
push
das
mov
rcl
cmp
fimull
pop
out
push
int
loope
or
fisubrl
cmc
ret
xchg
sbb
clc
xchg
lret
jbe
push
rorb
inc
shl
sbbb
hlt
jno
rorl
xor
mov
dec
sub
out
push
insl
pop
ja
out
adc
pop
in
push
mov
xchg
mov
jne
mov
mov
mov
mov
aad
adc
adc
insb
orl
insb
fmull
and
mov
push
mov
testl
jg
dec
addr16
xor
inc
xchg
mov
int3
sarb
xchg
and
movsb
inc
pop
mov
insl
outsl
sbb
sub
fstl
add
xor
or
sahf
mov
add
sub
xchg
pop
outsl
xor
push
xlat
and
lret
nop
push
pop
movsb
inc
inc
sub
ja
inc
xchg
mov
jo
push
divb
xchg
pop
inc
sbb
je
and
inc
and
pop
idivl
rcrb
pop
dec
pop
adc
jecxz
fwait
mov
cmp
jge
mov
xchg
lcall
cmpsl
arpl
xchg
sub
mov
push
adc
test
iret
lods
push
jno
icebp
call
ret
shr
test
repnz
je
sub
and
gs
pop
pop
sbb
out
sub
hlt
repz
loop
out
xor
test
add
in
mov
in
cs
loop
insl
outsb
adc
xor
xchg
imul
push
loop
inc
cwtl
pushf
add
jl
mov
lahf
in
sbb
lret
jmp
lcall
outsb
push
sub
cmc
aad
leave
add
cmp
dec
inc
test
je
mov
push
adc
mov
out
cmp
les
repz
cmpb
push
add
mov
arpl
sbb
ret
std
sub
mov
insb
ds
lcall
aam
aas
jmp
xor
xlat
arpl
push
js
mov
xchg
pop
sub
xchg
pop
rol
clc
add
push
movsl
add
cmp
andl
shrl
lret
filds
add
andl
sbb
pop
mov
test
xchg
in
aaa
mov
mov
js
lcall
orl
or
inc
test
jle
jnp
jnp
fdiv
addb
test
or
jecxz
mov
xchg
push
outsl
mov
out
pop
ret
ds
bound
add
out
in
leave
mov
leave
scas
xchg
jne
in
jp
ret
lock
jno
xchg
or
or
scas
insb
pop
in
clc
lret
xchg
mov
lret
leave
sbbl
insl
and
mov
jns
mov
aad
repz
lcall
fldenv
rorb
dec
ja
mov
dec
insb
add
addr16
insl
insb
fcmovbe
mov
add
lcall
lret
xchg
inc
and
jae
cltd
mov
notb
cmc
push
xchg
popa
popf
in
push
int3
xchg
aad
cltd
add
je
divb
adc
addr16
fstpl
and
jae
loopne
push
aaa
xor
outsb
sub
mov
cwtl
mov
loope
mov
add
dec
cmp
xchg
out
cmp
add
stc
fldenv
mov
jns
jmp
push
push
lcall
js
sbb
adc
xor
mov
sarb
jl
ja
loop
add
or
and
xchg
js
call
rclb
test
or
adc
pop
and
fimull
pandn
lret
stos
aam
jle
or
and
out
aam
adc
mov
push
cs
dec
mov
adc
adc
inc
sub
xor
cmpsb
or
jb
cmp
mov
or
xchg
mov
das
jmp
rcll
or
jno
pop
inc
pop
cmovb
add
mov
inc
test
add
mov
xchg
test
mov
inc
test
ljmp
rcll
sub
jnp
dec
leave
movsl
cmp
loope
fldenv
jne
jb
adc
test
sub
jne
sbb
push
fldt
xor
jae
inc
mov
pop
roll
push
scas
jg
out
pop
stos
mov
ljmp
jle
shll
xchg
rcrb
mov
bound
pop
sub
pushf
loop
add
mov
rorl
lods
cmpsb
mov
pusha
dec
adc
ja
fsubr
mov
enter
outsb
jnp
sti
roll
jae
mov
movsl
inc
inc
test
arpl
loopne
cwtl
imul
xchg
inc
push
cmp
sub
push
adc
add
mov
dec
pop
cld
out
xchg
sub
jno
ficompl
cmp
aad
jge
sbb
sub
arpl
jmp
cltd
leave
xor
jne
jo
jmp
and
mov
es
push
loope
mov
sub
push
arpl
fidivrl
mov
out
fbstp
or
lret
xor
xor
test
cmp
in
pushf
mov
mov
push
bound
inc
dec
cmc
mov
push
adc
inc
shlb
in
adc
pop
push
test
cs
xor
test
add
les
pushl
push
imulb
mov
and
or
sbb
pusha
into
fs
jno
or
sahf
fisubrl
cmpsl
insb
inc
dec
mov
xor
stos
jne
pop
pop
es
xchg
add
and
pushf
test
lcall
sti
pop
shll
movsl
cmc
bound
or
mov
ret
je
pushf
loopne
jg
or
mov
sbb
lods
xor
mov
aas
lea
adcb
inc
sbb
jo
out
test
addr16
pop
stos
jo
mov
lcall
je
mov
inc
cmp
xchg
fisttpll
enter
dec
push
sub
lret
pop
pusha
mov
sub
sti
jae
outsb
xchg
mov
jmp
sbb
add
popa
mov
adc
push
sbb
xor
adc
cld
mov
movsb
or
cwtl
and
adc
mov
repnz
dec
faddl
dec
mov
in
ss
imul
sbb
inc
and
xchg
sub
inc
push
mov
xchg
lods
out
inc
adc
mov
gs
sbb
sub
mov
xchg
xchg
gs
fdivl
or
mov
add
and
lcall
cmpsb
push
aaa
xor
sbb
mov
mov
or
mov
pop
jmp
or
push
pushf
sbb
xor
mov
mov
add
adc
mov
adc
mov
xlat
add
popa
inc
inc
lock
inc
inc
xor
aad
sub
shll
add
mov
jb
inc
mov
inc
xchg
outsl
pushf
scas
out
mov
enter
call
leave
sbb
shr
fnstenv
loopne
rorb
or
lods
xchg
and
xor
out
gs
adc
loopne
pop
das
gs
icebp
xchg
cli
stc
or
push
pop
daa
pop
cmp
inc
ret
out
xor
rcll
pushf
mov
test
cmp
pop
mov
aad
ss
cs
mov
lret
aas
jecxz
out
cwtl
pop
xlat
sbb
arpl
in
mov
xchg
out
mov
xlat
stos
shrl
push
and
lea
and
sbb
and
cmp
pop
sbb
jno
add
mov
lret
addr16
xor
dec
insb
outsb
cmpsl
pop
mov
in
xchg
mov
sar
mov
mov
fwait
jnp
clc
call
gs
movsb
aam
pop
dec
stos
xor
xchg
lods
pop
mov
push
mov
test
xchg
mov
cmp
outsl
or
xorb
xor
pop
sti
and
int
es
mov
rclb
mov
or
sbb
inc
incb
into
mov
lret
pop
shl
xchg
lahf
inc
nop
repnz
xchg
mov
mov
sbb
inc
pusha
int
fistps
lock
xchg
mov
or
push
add
xchg
mov
stc
add
sub
xchg
sti
aam
or
dec
lret
cmp
inc
jge
fwait
dec
repz
mov
jecxz
inc
jmp
cld
mov
lock
insl
add
jmp
sub
mov
mov
ja
in
in
mov
call
xor
repnz
lret
pop
mov
lret
fwait
pop
frstpm(287
dec
and
xchg
add
rcrb
icebp
out
enter
in
out
and
cli
or
loop
lods
clc
std
mov
push
jo
sbb
mov
mov
sti
imul
test
outsb
mov
ss
movsl
scas
leave
add
inc
repz
lea
cmpsl
sbb
xor
jmp
fwait
xor
xchg
int
imul
ret
in
sar
fidivrl
lcall
cmp
aad
xchg
inc
test
pop
sub
insb
xchg
add
test
and
sbb
bnd
hlt
push
xchg
les
add
mov
sahf
mov
inc
insb
popa
xchg
mov
ja
sbb
and
lods
iret
insl
clc
inc
xor
fs
pop
dec
cmp
loope
lahf
xchg
or
lods
mov
jbe
movsl
lret
pop
sub
inc
push
jns
outsb
mov
xor
pop
push
push
push
ret
push
mov
jbe
mov
jns
push
ret
repnz
je
pop
out
popa
or
inc
pop
imull
push
repnz
jecxz
jno
sub
mov
add
sub
jl
cmpsb
pop
scas
jl
adc
jnp
jg
jae
or
adc
cmp
fistpll
repnz
pop
daa
mov
push
fwait
xchg
inc
sbb
cwtl
popf
inc
addr16
test
stc
add
pop
sbb
lahf
mov
sub
lods
leave
inc
and
jnp
stos
fcompl
stos
or
daa
cli
push
inc
mov
xor
push
mov
dec
xchg
sub
xor
cmc
inc
or
test
outsl
and
mov
adc
cmp
mov
jae
dec
movsl
ret
mov
dec
js
icebp
or
adc
push
mov
out
orb
movsl
xchg
jmp
insb
cltd
jns
mov
mov
out
adc
inc
add
andl
cmp
cmp
bnd
stc
pop
and
repz
movsl
shlb
loope
mov
inc
stos
mov
pop
aas
mov
xchg
or
xchg
insl
mov
fwait
mov
add
pusha
out
push
pop
loop
dec
add
sbb
adc
push
lea
test
cltd
int3
mov
pop
and
sub
into
pop
arpl
mov
sahf
adc
fists
add
notl
jo
push
in
lahf
jae
icebp
mov
and
rep
push
mov
fnstsw
sti
add
ret
or
xchg
jl
and
mov
movsl
notl
jno
out
add
dec
add
xor
and
mov
cmp
sbb
inc
mov
icebp
mov
mov
mov
add
sub
jno
in
aam
lds
mov
push
and
push
cmp
push
jns
xchg
xchg
je
jl
aas
daa
lea
xchg
lret
jne
incb
scas
inc
in
inc
js,pt
jb
cmc
mov
les
loopne
xchg
and
scas
cmpsl
cld
iret
jl
sahf
mov
xor
scas
cwtl
loope
or
mull
or
adc
or
lret
hlt
xchg
shlb
sub
push
addr16
inc
xorb
push
loopne
mov
xor
jl
dec
lret
mov
scas
xchg
js
ja
cwtl
xorl
dec
in
xor
xchg
xorl
or
xchg
popa
sub
in
int
or
mov
mov
or
call
pop
jecxz
mov
mov
inc
loop
pop
outsb
mov
inc
jge
out
sub
mov
leave
mov
adc
pop
xor
mov
lcall
adc
aaa
fwait
mov
inc
jo
sub
imul
sub
xchg
test
fadd
jp
cmp
pop
xor
sbb
mov
sbb
ljmp
mov
cmpsl
push
arpl
outsl
mov
push
arpl
out
fisttpl
or
sub
frstor
ljmp
arpl
push
sbb
jecxz
das
call
mov
jge
test
bnd
jne
scas
jle
stc
in
mov
fldcw
pushf
or
test
addr16
add
xlat
roll
fiaddl
mov
sub
faddl
shlb
loope
jle
pop
les
sti
push
sub
fcos
lea
bsf
data16
jmp
mov
pusha
stc
divb
loope
and
adc
mov
sbb
scas
mov
adc
or
and
pusha
xchg
faddp
test
ja
sbb
add
push
ret
mov
scas
cmp
mov
jnp
fs
mov
mov
jmp
jae
dec
std
cs
mov
lret
fsubrs
sarl
inc
and
cmpsb
xchg
pushf
adc
pop
push
mov
adcl
and
cmp
or
xchg
pop
leave
ror
mov
int
pop
mov
mov
lods
xchg
xchg
inc
loope
orl
add
sti
add
inc
xor
adcl
pop
sbb
enter
ljmp
add
scas
aaa
aas
sti
out
xlat
cmc
xchg
push
imul
adc
push
push
cwtl
and
mov
adc
hlt
jge
inc
comiss
test
outsb
dec
push
lods
pop
out
outsb
mov
jno
enter
pop
and
adc
js
aas
cmp
xor
and
les
jmp
out
loop
xchg
adc
xchg
pop
pop
push
inc
push
int3
out
cltd
dec
xor
imul
adc
and
dec
sub
loop
lods
pop
jl
stos
fs
loope
xor
or
jns
dec
push
cmc
mov
leave
adc
jmp
xor
call
mov
hlt
pop
pop
jecxz
lods
nop
inc
or
xorb
sub
mov
mov
sub
je
ja
outsb
dec
addr16
mov
adc
nop
cmp
inc
ficoml
or
sbb
daa
mov
les
fnstsw
ret
mov
scas
pop
movsl
push
add
mov
adc
in
popf
xor
aad
lret
mov
push
shlb
push
lods
cltd
inc
adc
fcmovnb
pushf
xchg
push
dec
jmp
ja
mov
test
cmp
sub
out
mov
jp
xchg
nop
lea
stos
xor
repnz
cmp
xor
ja
pop
jg
jb
or
push
mov
mov
lcall
pusha
cwtl
repz
lret
sbb
pop
xchg
cld
adc
mov
movsl
pop
test
adc
inc
jmp
aaa
mov
orb
mov
in
je
or
jmp
jno
fcomi
iret
xchg
call
and
jae
xchg
mov
sub
arpl
rol
mov
and
lret
push
xchg
cmpsb
jl
pop
mov
out
rorb
fnstenv
in
sbb
and
ficoml
shlb
add
xlat
sbb
idiv
in
lret
push
cld
cmp
mov
sbb
sti
add
pushf
add
sbb
cltd
cld
cmpl
pop
ret
daa
jl
sub
fs
mov
test
mov
pop
add
pop
or
enterw
in
xor
cmc
or
pop
lea
xor
lds
inc
rorb
incb
dec
pushf
inc
popf
xor
sub
scas
testl
dec
lahf
inc
dec
movsb
adcb
sub
xor
outsb
aam
inc
jp
cmc
int
mov
dec
sarl
add
jl
pop
or
mov
sub
repz
jae
in
push
jae
neg
js
sti
inc
ror
mov
dec
ret
add
sub
xchg
iret
pop
and
int3
mov
cmp
test
ss
rcrb
fsubl
jmp
dec
jb
jecxz
ds
sbb
dec
xchg
shlb
xchg
xor
fbstp
into
aas
jge
out
push
adc
mov
sahf
push
imul
mov
clc
shlb
push
mov
gs
and
ss
pop
inc
fiaddl
pop
int
push
push
push
outsl
lods
test
xor
mov
mov
lea
enter
fbld
lds
xchg
fisubs
mov
xor
pop
xor
mov
inc
mov
mov
rorb
out
mov
bound
cld
jle
or
out
stos
jge
jns
push
les
rcrb
int3
mov
insl
adc
adc
xchg
push
addl
mov
sbb
mov
xchg
ja
mov
outsb
xchg
add
sub
push
or
jnp
pop
punpckhdq
push
dec
sub
sarb
popa
nop
nop
adc
cmpsb
sahf
add
int3
add
and
xchg
xchg
add
out
idivb
sbb
inc
mov
and
pop
mov
daa
inc
sbb
adc
std
clc
push
iret
mov
repnz
cmpsl
mov
add
pop
cmp
std
mov
ds
lcall
sbb
out
ficomps
ljmp
stos
xlat
leave
rclb
pop
cmp
lds
pushf
aas
push
push
sub
iret
xor
or
push
or
xor
jle
sub
cmp
and
xchg
nop
mov
inc
int
jp
lahf
cli
mov
add
outsb
sbb
daa
loopne
loop
cmpb
xor
test
lods
ds
mov
or
pusha
movsl
mov
sbb
and
incl
pop
test
leave
xchg
je
push
mov
clc
cs
fisubrs
jl
dec
in
xchg
enter
call
cwtl
mov
pop
mov
inc
jns
shl
in
jl
inc
add
fdiv
cmp
sub
cwtl
das
xor
repz
fs
xor
movsl
jl
jle
jb
lret
dec
shrb
and
hlt
cmp
mov
mov
testb
mov
test
repz
fildll
aaa
aas
lds
dec
imul
shlb
enter
add
out
push
sbb
mov
mov
add
icebp
dec
popf
jecxz
push
dec
pop
sbb
fwait
data16
out
shrl
inc
lahf
lds
add
or
mov
sub
jecxz
pop
aas
aam
gs
jnp
jb
xlat
push
arpl
inc
mov
stc
and
loope
mov
push
push
add
add
xor
adc
mov
idiv
push
xchg
hlt
xchg
movsl
inc
inc
pop
pop
fcomi
adc
loope
pop
push
dec
push
push
es
or
and
cmpb
push
mov
sarb
nop
les
xchg
push
mov
jae
sbb
mov
pop
mov
int
sbb
fdivl
or
xor
adc
pop
sub
jne
xchg
dec
cmpsl
aaa
repz
jae
mov
insl
xchg
inc
inc
xor
clc
add
call
lahf
mov
cmp
fwait
or
inc
adc
jmp
xor
lock
jbe
hlt
jns
daa
adc
push
mov
mov
sahf
jge
add
out
repnz
lea
mov
xor
fldcw
lock
or
shl
jns
mov
cmove
mov
mov
lock
fisubs
sahf
scas
dec
dec
pop
add
mov
loop
pusha
push
aaa
loopne
jno
xchg
fdivrs
xlat
lcall
stc
mov
inc
push
js
xchg
push
jno
stc
or
insl
inc
loopne
push
and
not
jns
aam
loop
test
lahf
sahf
dec
pusha
ret
mov
cmp
js
into
out
call
jge
dec
aam
mov
js
mov
cmp
jns
push
les
in
leave
mov
inc
xlat
cltd
or
popa
mov
rcrb
cmpl
popa
ret
mov
int
stc
lret
jb
sbb
dec
inc
pop
xchg
dec
cmp
mov
ds
push
daa
xchg
pop
out
lods
mov
shrb
mov
cmpsb
sub
mov
das
clc
inc
leave
repz
adc
mov
add
shlb
xchg
aas
push
adc
push
jg
lret
cmp
add
enter
bound
mov
push
sahf
and
aaa
in
xchg
pushf
xchg
lcall
dec
test
xchg
mov
jmp
cltd
pop
mov
xor
xor
sti
js
dec
flds
add
pop
jae
jbe
roll
cld
pushf
loope
lgs
xor
aam
pop
bound
icebp
add
arpl
pop
xchg
cmp
hlt
mov
and
adc
cmp
daa
pusha
mov
mov
inc
nop
repz
or
push
jnp
fisubl
or
sub
cmp
daa
pop
div
cmpsl
cmp
pop
nop
jno
out
cmpsb
mov
xlat
loop
lret
les
xor
in
inc
mov
out
jge
incl
jo
cld
jp
les
fwait
call
mov
adc
dec
push
inc
daa
jno
pushl
sub
daa
mov
int
push
xchg
fsubr
loopne
lret
cmc
daa
push
ficomps
loop
mov
inc
or
orb
dec
stc
sbb
in
call
cmpsb
rcrl
mov
mov
repnz
mov
pop
pop
inc
mov
icebp
xchg
cld
jne
fnstsw
popf
push
stc
xor
jno
insl
imul
mov
mov
fs
clc
fidivs
call
pop
mov
add
cmpsb
cmc
sbb
lods
add
xor
jge
loopne
add
insl
pushf
jge
outsb
sub
mov
push
inc
jae
cmpl
adc
lahf
push
lret
js
movsb
sahf
test
xor
lods
cld
aaa
std
int3
aam
les
sbb
push
testl
cwtl
push
jno
sbb
leave
stos
pop
test
mov
dec
aam
lock
pop
shlb
scas
mov
or
inc
mov
xchg
xchg
repz
cltd
out
xchg
fnstsw
jl
into
jp
ret
cmp
mov
or
lret
or
push
adc
int3
mov
mov
push
mov
and
cltd
or
addb
cmp
in
push
hlt
cmpsb
ret
dec
cmp
add
sub
gs
add
pop
cli
fisttpll
fldenv
xor
dec
jle
xchg
ja
pop
int
cltd
mov
clc
or
test
sbb
lods
pop
outsb
daa
push
cs
in
add
fildl
cwtl
or
lock
adc
mov
jns
fwait
ja
jmp
add
cmp
push
repz
loopne
mov
sbb
adc
mov
aad
jae
js
jmp
cmp
scas
jb
jp
cmpsl
jne
cmpsb
fsubr
mov
rorb
adc
lods
or
out
inc
sub
mov
cmp
movsl
shl
test
mov
jb
inc
jecxz
icebp
iret
movsl
das
pop
das
sub
jns
cmpb
and
xchg
sub
outsl
pop
test
mov
adc
mov
icebp
cmp
sub
cwtl
pop
cli
lret
inc
lret
fildll
std
je
push
call
pop
push
dec
addr16
stc
sub
ret
mov
orl
mov
pop
add
into
ficoml
cltd
and
stc
pop
movsl
cmpl
add
sub
or
lds
mov
xchg
jp
mov
or
into
mov
fwait
fs
inc
mov
test
sbb
pop
adc
loope
push
aam
je
mov
sub
ljmp
adcb
and
enter
or
cmp
add
les
mov
aas
popf
jg
inc
outsb
fnstcw
sbb
clc
push
mov
test
jns
ja
lock
push
popf
dec
js
decb
ret
stos
mov
pop
fsts
mov
mov
or
cmp
sbb
adc
push
jle
iret
cmpsl
xorb
jb
cld
sub
sub
movsb
cmp
insb
xchg
mov
call
insl
push
loop
mov
xorb
stos
jne
insl
in
jb
imul
aam
leave
or
mov
lcall
adc
je
or
data16
es
or
and
mov
dec
push
je
adc
push
adc
xchg
dec
dec
je
nop
jb
mov
mov
sub
xor
push
pushf
imulb
and
mov
xchg
jo
jmp
pushf
enter
jecxz
add
xorb
loopne
cmp
sbbb
mov
mov
xorl
dec
lahf
inc
sarl
fcoml
lods
add
cli
adc
sub
out
aaa
inc
nop
loope
sub
cmp
jle
pop
ljmp
add
loopne
cli
jae
mov
add
test
inc
addr16
dec
scas
fimull
inc
loopne
cmc
mov
mov
mov
mov
add
or
mov
push
popa
es
xchg
xor
fildl
inc
cmpsb
push
lea
aad
arpl
pushf
cld
lcall
mov
lock
cs
xor
mov
lahf
lods
mov
push
aad
fidivl
subb
scas
and
dec
cld
aad
jae
jg
cmp
aas
mov
cld
test
mov
inc
sub
lods
in
xchg
add
das
cmp
pop
pushf
movsl
lahf
test
adc
ljmp
cmp
xchg
add
aad
inc
hlt
mov
fsubs
hlt
nop
gs
test
dec
sub
iret
les
loopne
xlat
or
in
in
or
test
adc
mov
mov
data16
jnp
or
cli
push
sub
cmp
je
jb
and
xor
popa
nop
jp
xor
and
dec
shrl
mov
out
lds
xor
adc
mov
loopne
int
sbb
mov
ds
sub
insb
push
les
xchg
xchg
scas
mov
push
pusha
in
jmp
clc
sti
rclb
out
xchg
std
push
pop
imul
mov
sbb
or
mov
mov
roll
and
das
mov
or
rcr
stc
xchg
pop
sub
jbe
dec
and
pop
mov
in
push
xor
mov
loope
jb
aad
cmp
pop
pop
add
mov
xchg
andl
jmp
lea
mov
scas
lcall
outsb
mov
loop
jb
fsubrs
jns
addb
in
cmp
fisubrs
rcl
es
dec
sbb
lock
jae
or
or
cld
pop
jmp
and
sarl
idivb
subb
xor
cwtl
adcb
sub
sub
enter
mul
outsl
hlt
and
jae
add
test
sub
push
fildll
dec
dec
scas
mov
lcall
mov
inc
testl
popa
aad
ret
out
mov
sub
rclb
push
addr16
fisttps
in
sub
incl
scas
sbb
sbb
movsl
jle
push
addl
sub
mov
or
inc
test
les
sbb
into
sbb
leave
mov
jae
out
mov
push
inc
mov
in
sti
stos
jmp
add
imul
sbb
out
insl
and
add
out
and
fsubrs
mov
icebp
call
mov
xor
jecxz
jbe
or
stos
divb
jmp
jp
aaa
pop
daa
sahf
mov
cmp
xchg
push
adc
mov
stos
mov
pop
inc
rorl
sbb
sbb
mov
and
xchg
fsubs
jnp
push
fcmovnb
cmp
xlat
dec
loope
sahf
insl
add
pop
dec
das
push
or
stc
rcrl
jp
pop
shll
lahf
fwait
ror
or
in
cmpsb
and
add
outsl
add
cs
pop
out
stos
fwait
popf
stc
adc
fidivs
pop
dec
xor
add
push
xchg
push
or
mov
jbe
push
repnz
imul
or
xchg
add
pusha
cli
adc
test
push
insb
dec
imul
jo
cmc
pop
fsubs
lret
movsl
fucomip
and
jle
movl
inc
pop
push
push
jl
dec
icebp
out
outsb
pop
pop
insl
dec
dec
lcall
enter
test
sbb
test
adc
mov
adc
mov
or
lahf
repz
add
movsl
xchg
or
repnz
mov
jb
std
mov
dec
popf
cwtl
mov
pop
int3
cmp
loope
int3
mov
mov
xor
cs
jle
in
and
loope
mov
pop
xor
mov
jo
jl
jbe
cmp
jnp
add
jb
scas
dec
cmp
dec
insl
ss
test
mov
sub
or
clc
dec
xchg
mov
test
mov
cltd
cmc
xchg
mov
push
pop
jb
xchg
out
jge
ss
daa
imul
jl
in
icebp
add
fcmovnu
adc
pop
leave
sub
dec
ds
fistpl
cmc
jmp
fnstsw
mov
loop
dec
add
enter
call
push
aaa
ret
sub
leave
inc
xchg
mull
xchg
ror
push
in
in
inc
mov
aam
imul
cs
sub
ja
popf
mov
std
mov
test
lcall
sbb
jno
mov
pop
xor
js
xor
sub
movsb
in
rcl
mov
scas
cmp
hlt
in
xor
jle
call
das
jnp
adc
push
xor
leave
call
lds
rorb
or
rorb
insl
or
jmp
fdivs
or
loope
lds
fcoms
dec
out
mov
mov
lret
leave
xchg
out
roll
mov
aam
sub
sub
sub
xor
mov
sbb
xchg
leave
pusha
pop
sbb
jle
inc
jne
into
mov
pop
nop
in
fcoml
out
stc
addr16
cmp
cmp
stos
shlb
mov
mov
cmpsl
mov
inc
bound
xor
sbb
mov
iret
fs
jo
stc
sarb
lock
shll
fcoms
and
ret
fwait
into
rcr
mov
jl
daa
data16
cmp
pop
std
rol
arpl
push
dec
push
clc
dec
adc
mov
xchg
pop
scas
daa
pop
inc
jns
mov
sbb
add
loop
mov
mov
sbb
pop
push
data16
cmpsb
xor
inc
mov
sbb
aaa
add
stos
pop
subl
jb
lahf
icebp
cmp
mov
rcrb
fidivl
jmp
inc
mov
push
add
arpl
mov
or
test
loope
sbb
pop
pop
push
or
pop
adc
sub
xchg
dec
mov
mul
mov
outsl
sbb
sarl
or
add
ret
pop
mov
mov
jbe
cmp
inc
xchg
sarb
fmul
les
inc
xchg
test
iret
jg
jl
sbbb
cmc
sbb
stc
pop
rcll
xchg
inc
ret
loopne
xchg
pop
call
mov
cli
jb
clc
adc
sbb
ret
lods
into
ror
xor
fbld
cmp
in
and
mov
push
cltd
in
movb
stos
lea
in
fdivr
movsl
xchg
cmp
mov
jno
rolb
mov
dec
stos
cld
mov
scas
test
cmpsb
ds
call
pop
mov
les
xchg
xchg
xchg
outsb
out
or
or
mov
pushf
xchg
add
out
push
fimuls
lds
stc
jmp
mov
pop
out
inc
pop
mov
in
mov
xor
dec
mov
sub
negl
js
test
int3
pop
lret
add
or
addr16
mov
loope
cmp
pusha
xchg
repnz
stc
into
cmp
divb
lock
ds
repz
jmp
sbb
jmp
aad
pop
mov
mov
mov
inc
jle
push
fsubp
or
test
and
inc
push
ljmp
xor
ljmp
je
cld
dec
insb
ja
mov
fisubrl
dec
lcall
or
push
dec
inc
pop
out
xor
stos
or
loop
xchg
add
shrl
lret
dec
mov
xchg
inc
adc
inc
or
jge
adc
mov
xchg
push
mov
xor
mov
xor
cmp
adc
inc
jmp
add
pop
ret
stos
in
fstps
fstp
and
dec
or
dec
scas
mov
hlt
dec
xchg
cmc
mov
shl
sbb
add
xor
aaa
mov
pop
insb
mov
enter
jmp
sbb
out
rcr
adc
and
daa
enter
inc
int
mov
and
jo
cmp
scas
stos
xor
outsb
out
push
sub
daa
aaa
fistps
outsb
jo
das
cmp
je
inc
mov
sub
pop
andw
xchg
dec
and
stos
es
add
shrb
jne
jg
mov
test
pop
xchg
add
mov
mov
aad
mov
inc
gs
jmp
out
scas
mov
out
inc
lds
mov
and
lcall
jl
mov
adc
daa
rcr
dec
mov
mov
xor
jecxz
ret
dec
iret
mov
sbb
add
scas
xchg
shll
ljmp
lock
push
nop
cwtl
push
sbb
jp
mov
in
sbb
push
pop
xchg
cmovp
add
adc
jecxz
clc
out
cmp
xor
sub
pop
sbb
sar
dec
std
insb
jl
sti
popf
adc
xchg
pop
sbb
aad
sub
push
mov
lds
add
and
push
pop
cli
cmpsl
popa
jg
loop
mov
push
fwait
ljmp
and
pop
popf
lods
or
daa
push
inc
in
cmp
jns
cltd
sbb
add
fdivrs
and
gs
fiaddl
and
ljmp
fnstenv
xchg
shr
push
outsb
ljmp
fbld
repz
pop
mov
dec
pop
or
int
xchg
xor
push
push
or
pop
xor
xor
lds
adc
jl
outsl
mov
loope
cwtl
daa
adc
xor
ljmp
ss
call
mov
movsb
in
pop
adc
mov
loope
mov
or
test
mov
cmpsl
pop
movb
sbb
repnz
inc
sarb
loop
pop
dec
push
mov
xlat
lret
push
or
fsts
out
sub
adc
xchg
pusha
inc
pop
out
cwtl
popf
call
je
xchg
int
loopne
xlat
xor
dec
dec
insl
loope
dec
icebp
lahf
sbb
in
iret
push
shlb
mov
push
cltd
rorb
jp
xchg
dec
lret
dec
insl
test
jbe
lcall
and
decb
arpl
adc
and
sbb
add
xchg
and
or
sub
sbb
or
push
fstpl
ret
decb
rcl
mov
adc
xor
push
sahf
insb
fnstenv
xor
inc
daa
sbb
add
push
aad
push
xor
in
mov
jmp
mov
mov
cmpsl
insl
cmp
rorb
or
push
in
loop
incb
lahf
addr16
dec
mov
dec
cltd
jns
jmp
dec
into
push
jae
xchg
scas
xor
cmp
fadd
iret
imul
or
popa
sbb
movsl
movsb
pusha
js
jl
adc
or
jns
add
and
cmpsl
cmc
leave
inc
call
cmp
loop
dec
stos
pop
mov
subl
jne
inc
pop
mov
std
pop
dec
aam
decb
inc
pop
lock
in
sub
shlb
jp
pop
stos
mov
sbb
aas
clc
xor
insl
popa
lods
jmp
fsub
jae
push
pushf
jl
mov
rcr
or
sbb
fsubrl
fimull
int3
xchg
mov
cmp
repnz
fwait
cmp
xchg
ret
or
arpl
shlb
pop
adc
pop
pushf
test
out
add
sbb
shlb
mov
bound
stos
inc
mov
inc
movl
lret
dec
mov
lahf
ficompl
adc
out
ret
mov
aad
inc
pop
stc
inc
xor
scas
xchg
jbe
out
bound
daa
inc
jle
push
and
sti
sub
mov
add
add
pop
mov
faddl
shrb
loope
cld
jnp
stos
into
push
xor
imul
mov
mov
lods
out
arpl
inc
fcmovnbe
bound
jp
and
and
bound
mov
xor
out
push
cmp
in
ret
iret
cli
fld
jmp
cld
daa
mov
mov
hlt
arpl
aad
mov
cld
push
add
in
loope
mov
xchg
adc
sbb
jle
or
jo
gs
stos
xchg
cmpl
jbe
sti
clc
mov
adc
adc
sub
insb
stos
xor
es
mov
pop
pop
mov
clc
in
jmp
dec
jno
sbb
add
ds
rclb
test
mov
mov
fnsave
into
gs
mov
into
lock
jmp
pop
xchg
cltd
hlt
pop
scas
jns
and
loop
imul
xor
sub
stos
arpl
into
jg
sti
add
or
lock
dec
xchg
aam
call
mov
dec
insb
test
pop
cmp
push
push
add
mov
leave
call
or
jecxz
inc
sbbl
dec
xor
into
ss
sub
fstps
push
xor
xchg
je
xchg
and
add
rolb
int
repnz
in
imul
out
dec
fnsave
push
out
push
leave
add
insl
sbb
sbb
mov
shrl
inc
fildll
arpl
cmp
mov
add
rolb
dec
adc
inc
mov
imul
xchg
andb
push
jge
mov
icebp
sbb
adc
mov
movsl
cmp
xchg
cltd
dec
sub
add
loope
rorl
cmp
pop
stos
fbld
sub
or
arpl
sub
sub
sbb
push
push
int3
clc
cmp
mov
adc
out
ret
outsl
es
test
push
sbb
shrb
mov
sub
xchg
adcl
cmp
sbb
test
add
rclb
add
pop
ret
inc
cmp
pop
daa
jb
xor
adc
aam
je
mov
int
pop
sbb
aas
jp
mov
imul
lcall
sub
out
es
jns,pn
test
sbb
icebp
jnp
cmpsb
push
sbb
inc
mov
aad
mov
into
xchg
add
aaa
cld
test
push
fmuls
add
lods
push
pop
add
mov
adc
mov
jmp
cmc
aad
push
int3
add
jae
cmp
divl
aaa
dec
jne
movsl
pop
mov
xor
es
enter
insb
out
adcl
gs
pop
sub
sub
ss
dec
inc
int3
out
in
arpl
mov
imul
mov
pop
mov
cmp
mov
push
push
sar
sub
sub
xlat
call
cmpsl
enter
pop
lret
jg
divb
xor
sub
std
jb
mov
adc
mov
leave
lcall
push
dec
test
add
pusha
testl
outsb
jp
mov
out
inc
and
or
jg
in
xor
nop
pop
or
hlt
jne
cmp
in
inc
dec
and
adc
fdivrs
mov
rorb
mov
mov
mov
inc
xor
xchg
push
insb
jb
cmp
outsl
cs
cmp
aaa
js
or
pop
sub
jmp
decl
cmp
repnz
mov
iret
insb
jl
jcxz
add
in
icebp
xchg
dec
jl
andb
sub
lret
movsl
pushf
and
inc
stc
aam
popa
mov
ficompl
scas
cmp
sbbb
aad
inc
fcoms
mov
and
pushf
cmp
rcl
cld
push
jno
les
es
xor
out
lret
push
shll
mov
adc
fildl
popa
pop
aaa
sbb
add
pop
popf
cmp
cli
ljmp
in
mul
adc
jle
lret
pop
mov
cmpsb
jae
in
mov
popa
out
outsl
add
add
cld
repnz
xchg
jne
out
int
repnz
xor
mov
jbe
pop
mov
push
dec
pop
fwait
jl
int
jb
pop
pop
mov
daa
into
add
pop
mov
mov
xchg
in
add
adc
dec
mov
inc
scas
lret
loopne
fwait
lock
test
sub
inc
push
fs
sub
sub
cmpsl
ds
inc
push
sti
mov
mov
add
sub
shll
iret
lds
jb
rcrb
xor
pop
mov
leave
cmp
mov
stc
mov
lods
pop
inc
xchg
ja
mulb
fcompl
fisubl
sbb
jne
bound
or
jbe
sahf
pop
loope
push
hlt
iret
sub
jns
orb
cmc
xor
std
call
jno
add
sub
sub
cmc
or
ss
xchg
out
ja
in
ja
mov
loopne
xchg
into
push
je
push
fiadds
mov
and
rorb
stos
out
cltd
sub
fisubs
mov
inc
sarl
sbb
mov
daa
loope
leave
mov
movsb
adc
pop
hlt
mov
lods
and
add
rcrb
and
lret
xchg
sbb
sbb
sub
sbb
xor
xor
test
pop
and
adc
pop
inc
test
fstpl
jns
mov
addr16
icebp
jmp
xor
repz
pop
mov
stos
test
xor
std
push
fisttpll
add
adc
dec
xor
mov
add
adc
loopne
mov
mov
movsb
dec
ds
jae
adc
lea
adc
push
adc
adc
js
add
hlt
call
out
popa
stc
in
int
pushf
cmpsl
pop
ljmp
jle
rcr
imul
cmp
push
insl
adc
enter
adc
adc
aaa
xchg
jae
pop
jb
icebp
pop
ret
in
cwtl
sbb
cmp
cmp
cmpl
outsl
repnz
cmc
fbstp
sbb
scas
pop
ret
push
cmpsb
cmp
jl
jl
lahf
test
daa
pop
jge
fcompl
loopne
mov
clc
cmpsl
inc
mov
cmpb
jecxz
cld
mov
xorb
lret
in
mov
sub
xchg
les
jmp
inc
mov
cld
scas
jge
scas
imul
ret
mov
out
daa
lods
xchg
xor
mov
jp
lahf
mov
jl
mov
push
out
mov
shll
pop
fucomip
daa
xchg
dec
test
cwtl
adc
adc
pop
int
orb
jmp
sub
adc
cmp
pop
repnz
add
mov
adc
and
push
dec
or
xchg
push
leave
mov
and
xor
repnz
repnz
stos
jge
push
sub
cmp
popa
fisubs
bound
and
sub
mov
mov
sbb
cmp
cwtl
popa
push
aad
cld
mov
inc
inc
xor
add
push
adc
shlb
fs
mov
cltd
xlat
imul
pop
adc
mov
aad
xchg
nop
push
or
cltd
into
and
sub
sti
shll
das
push
add
sbb
lret
lcall
sbb
mov
mov
inc
sbb
lcall
sti
pop
mov
cli
mov
int
movsb
roll
mov
mov
pushf
das
mov
dec
jno
sub
or
adc
scas
jle
shlb
jnp
or
movsb
sub
jo
test
fidivrs
int3
inc
loop
inc
inc
test
and
inc
jge
aas
jecxz
jg
rorb
sub
jae
jle
js
inc
mov
xchg
push
inc
in
add
inc
jb
lock
push
mov
pop
ja
xchg
sahf
xchg
lods
cmp
in
add
or
pop
testl
dec
dec
or
repnz
cmp
and
push
or
sbb
mov
test
sti
xor
daa
cmp
cmp
cmpl
ret
pushf
mov
imul
jecxz
dec
sub
sbb
and
cmp
mov
cwtl
inc
ret
and
inc
fwait
xchg
mov
xchg
lea
push
bound
fsubr
clc
ret
test
mov
subl
addr16
enter
inc
adc
mov
dec
clc
xlat
pusha
ds
test
mov
adc
sbb
cmpsl
cltd
or
les
aad
movl
xchg
push
insl
out
int3
adc
fcompl
clc
mov
jg
mov
mov
out
xchg
rol
cmpl
data16
test
icebp
mov
push
mov
xchg
out
pop
popw
push
sarb
call
mov
ds
jl
sub
addr16
cmp
mov
int3
call
mov
or
stc
les
inc
xor
mov
xchg
imul
fs
orb
rorb
adc
add
push
clc
cmpsb
xor
shl
ljmp
aaa
add
dec
mov
mov
mov
mov
call
pop
lret
or
pop
mov
cmc
or
mov
jl
inc
and
xchg
lds
cmpsl
and
xor
scas
push
in
xor
pushw
adc
arpl
out
fmull
dec
sarb
orb
push
push
mov
lahf
push
movsl
adc
mov
jecxz
das
push
enter
das
adcb
ret
loop
imul
jg
cld
lret
incb
sti
sarb
aaa
mov
and
push
xchg
loopne
add
xlat
mov
shr
mov
in
test
dec
jecxz
je
cmp
rolb
in
sahf
jmp
loop
movsl
fsts
pop
lods
cmp
jmp
iret
add
stos
jmp
or
pop
xchg
and
jb
cmp
in
sub
inc
into
inc
loope
stos
fnstenv
es
js
and
pop
mov
lds
dec
cmc
fisubrs
in
pop
mov
pop
sub
pop
arpl
addb
inc
test
imul
call
cmp
mov
dec
fisttpll
lea
call
add
frstor
into
mov
imul
jns
pop
push
or
jo
mov
leave
icebp
negl
test
sub
adc
andb
les
outsl
cltd
or
inc
xchg
gs
scas
xchg
sti
fiaddl
mov
ret
repnz
mov
mov
pop
adc
test
push
xor
mov
xlat
icebp
ret
push
dec
mov
push
les
dec
xchg
jmp
cmp
out
lret
sub
and
push
add
out
mov
jge
je
aas
jbe
mov
sbb
and
imul
out
mov
mov
inc
jnp
inc
mov
movsl
ficomps
xor
dec
sbb
imul
push
ds
pop
xor
bound
cmpsl
push
pushf
scas
imul
rcll
scas
push
js
test
inc
mov
jle
mov
jle
mov
xchg
test
push
mov
mov
xor
cmp
call
sub
and
call
divl
ret
mov
lea
sti
xor
leave
mov
jmp
xlat
push
sbb
fsubs
jbe
jecxz
dec
negl
pop
mov
scas
jg
xlat
mov
lret
std
daa
pop
outsb
mov
shlb
and
outsb
push
add
out
imul
push
repz
sub
sub
out
out
sbb
mov
ficompl
add
add
jecxz
mov
pushf
mov
lock
and
pop
je
test
jo
sub
shrb
and
and
fwait
mov
push
sub
int
mov
push
and
hlt
xor
gs
push
pop
daa
inc
adc
xchg
cmp
cmp
inc
jp
jl
stos
hlt
int3
sbbl
enter
jae
push
dec
or
testl
inc
movsl
dec
sbb
push
cs
ss
xor
aas
hlt
inc
mov
adc
xchg
push
cmpsl
adcl
sub
mov
adc
test
cmp
fsubrs
movsl
xchg
mov
popf
jb
jl
or
lcall
into
and
jp
sbb
movb
or
adc
idivb
cli
push
jmp
dec
mov
xlat
inc
cmc
push
mov
jle
lcall
mov
movsl
mov
jge
nop
mov
lds
add
nop
xor
add
cmp
push
mov
loopne
mov
lods
mov
mov
adc
je
out
imull
ret
push
test
in
jmp
xchg
je
rclb
sub
adcb
ret
push
stos
jp
push
or
inc
fcmovne
xor
inc
sbb
in
pop
add
test
sarb
fnstenv
pop
fidivrs
pop
xchg
sbb
aad
mov
and
mov
cmp
xor
aas
mov
loop
movsb
jnp
outsb
add
cmpsb
jl
fcomps
imul
addl
mov
mov
dec
andb
inc
ljmp
fldl
adc
or
push
and
mov
push
pusha
mov
test
les
repz
ret
sub
ja
punpckhwd
in
add
mov
cmp
jnp
pop
sbb
lret
lcall
or
sub
or
mov
cmpsl
sub
jo
icebp
sti
mov
mov
ret
scas
push
dec
mov
mov
pop
fcmovnb
sub
sub
lahf
add
mov
or
lret
inc
jne
cmp
ja
fidivrl
xchg
dec
popf
cmpsl
xor
mov
push
push
das
mov
popa
cld
ret
cld
xor
cmp
pop
push
les
movsb
ljmp
cs
lods
pop
cmp
loopne
call
lahf
stc
lahf
push
push
notl
sarl
xor
adc
pop
push
mov
ficomps
stos
jne
cld
mov
jae
jle
add
xchg
adc
and
jp
jnp
sub
jmp
stos
mov
inc
cltd
push
ret
jb
xor
pop
dec
add
xchg
inc
add
in
xlat
mov
rcrl
aas
icebp
and
out
inc
fcmovb
sub
loop
popf
cmp
mov
push
aaa
sbb
aas
filds
test
testl
xchg
add
ss
ljmp
push
mov
int3
fsubrs
pop
dec
or
sbb
mov
enter
test
in
pop
jecxz
in
and
lret
in
dec
mov
push
lcall
adc
mov
aas
loop
pop
fadds
fldt
sbb
test
xor
push
aam
push
dec
push
gs
and
fwait
into
xor
xchg
cmpsl
push
xchg
imul
adc
bound
cmp
mov
rol
add
imul
sub
shl
push
dec
or
jne
sub
jne
add
adc
ja
in
in
add
ficompl
iret
popf
je
loopne
sub
push
inc
aaa
pop
fs
rcrl
mov
xrelease
in
popf
and
jle
pop
in
add
lcall
rorb
or
loopne
mov
into
std
and
add
add
and
out
sub
nop
mov
push
iret
outsl
pop
sarl
cld
push
les
xchg
popf
adc
fsts
mov
add
movd
xchg
ds
jmp
lahf
lds
push
push
lods
push
inc
jb
lods
insb
push
cwtl
push
int3
sub
scas
mov
dec
shl
sub
subb
mov
cmc
nop
imul
mov
in
dec
xchg
pop
clc
das
jl
push
ja
cli
lods
add
fstl
adc
xchg
or
dec
xchg
or
inc
or
add
test
out
dec
pushf
mov
lods
mov
mov
pop
leave
add
pop
sbb
aad
or
lret
ret
cmpsl
sub
in
mov
je
dec
xor
je
mov
mov
mov
lds
xchg
pop
insb
add
dec
jp
enter
dec
cmp
adc
mov
rcl
and
pop
shrb
lock
jb
inc
addr16
sub
in
mov
cmp
mov
adc
ret
mov
iret
xchg
push
push
and
cmpsb
outsl
adc
test
or
orb
xchg
cli
pop
fst
or
and
daa
dec
add
adc
rorl
shlb
xchg
adc
prefetch
add
or
adc
arpl
xchg
jns
pushf
adc
nop
testb
push
jge
fprem
mov
orb
sub
fnstenv
jnp
cltd
jno
je
jp
cmpsl
pusha
pop
xchg
xchg
imul
sub
mov
mov
stos
ja
mov
fstpt
mov
pop
add
push
aas
cs
loopne
std
stos
aam
adc
iret
and
pop
clc
negb
add
scas
adcl
and
or
mov
rcrb
and
loopne
adc
and
sahf
lock
cwtl
ljmp
ljmp
aas
shlb
jl
mov
or
in
mov
or
cld
sbb
call
xor
es
sbb
mov
cmp
sub
vcmpps
aam
mov
pop
outsb
outsb
jl
aaa
sub
push
lods
pxor
insb
scas
shrl
gs
inc
bound
and
dec
enter
and
jb
lea
sub
cmp
inc
mov
push
push
xor
mov
inc
je
lret
or
or
imull
adc
add
pop
jbe
add
je
dec
ficomps
pop
add
or
xchg
xor
ljmp
pushf
add
lret
xor
js
mov
ss
add
test
mov
fwait
cmp
lds
inc
lret
lock
lods
test
xchg
mov
movsb
mov
jecxz
out
es
mov
adc
jno
mov
sti
cwtl
push
test
test
push
rolb
add
sahf
push
std
push
cmp
pop
xor
ret
adc
inc
pop
cmp
or
and
and
add
pop
popf
int3
jo
jge
mov
out
push
cmpsb
mov
pop
pop
push
sub
push
push
into
jg
push
lds
adc
lock
or
cltd
outsb
jbe
fs
stos
mov
mov
cmova
jne
push
mov
imul
cltd
out
xorb
andl
or
pop
pop
pop
ss
pop
fld
mov
inc
cmp
dec
adc
outsl
stos
lea
cs
sub
movsb
xor
or
es
inc
mov
lahf
dec
mov
push
and
or
int
data16
pushf
in
je
mov
pcmpeqw
xorl
lcall
stos
leave
lds
sub
dec
xor
jecxz
mov
push
aad
iret
inc
sbb
imul
mov
or
jg
xor
jb
push
adc
and
movsl
stos
movb
dec
jno
mov
loop
movsl
imul
add
push
mov
aad
imul
shrb
call
push
mov
mov
dec
pop
int
lock
dec
sub
adc
inc
out
pop
push
push
pop
outsb
ljmp
scas
into
fiadds
xor
dec
add
pop
mov
inc
test
mov
stos
mov
movsl
inc
jl
jp
pusha
mov
enter
fcmovne
mov
lret
lods
fs
stc
dec
xchg
hlt
in
sub
pop
jp
int3
pop
pop
jmp
adc
hlt
int
lea
jns
cmc
out
sbb
into
xchg
into
test
xlat
popf
mov
inc
insb
cmpsb
into
dec
dec
stos
lock
cmp
fcomps
fsubrs
test
push
xor
dec
aam
lret
in
xor
cwtl
test
scas
stos
jmp
int
lds
icebp
ds
ret
in
imul
and
cmp
pop
push
pop
dec
hlt
mov
jl
dec
call
and
push
jge
push
jmp
repz
imul
sub
sahf
fs
and
or
adc
test
out
adc
insb
inc
rcrl
data16
mov
xlat
jae
or
jle
mov
aas
sbb
xor
sbb
jge
sub
call
inc
in
sub
mov
jp
cmp
cmp
or
mov
jno
nop
sub
sub
xor
ljmp
ljmp
push
add
add
add
adc
pop
insl
sub
mov
call
shrl
sbb
fimull
mov
cmp
aaa
push
mov
orl
or
push
test
int
cs
jno
add
mov
shrb
ljmp
bound
ds
ret
ljmp
inc
mov
into
pop
pop
cs
ss
hlt
adc
decl
scas
adc
nop
arpl
daa
or
dec
mov
stc
adc
sub
mov
mov
dec
test
rol
mov
mov
imul
cld
push
inc
mov
out
je
out
mov
or
xchg
sbb
lock
adc
sbb
jecxz
cmp
add
nop
ret
rcl
inc
addb
sub
out
jg
pop
in
arpl
popa
mov
adcl
fidivs
movl
out
jge
dec
pop
pop
and
cwtl
push
clc
jmp
fcom
stos
push
outsb
add
jg
push
mov
arpl
xor
bnd
movaps
and
xor
enter
ss
sbb
mov
and
and
xchg
or
mov
push
inc
out
cmpsl
mov
jle
fcomps
fwait
jle
xchg
testl
pop
push
pop
shrl
stos
aas
sbb
stos
adc
mov
xchg
and
and
mov
popa
mov
inc
mov
lcall
or
xchg
imul
repnz
lea
lret
add
xchg
loopne
test
dec
cltd
in
mov
inc
inc
push
js
roll
xchg
or
xchg
mov
sbb
jns
pop
scas
mov
cmp
push
rclb
mov
cmp
mov
adc
xchg
lret
push
xor
stos
fmull
pop
sub
xchg
jle
movsb
push
fcomps
imul
jno
mov
mov
xor
push
sub
xchg
jmp
push
data16
jl
and
orb
mov
nop
aas
or
mov
add
repz
cwtl
add
push
xorl
lock
or
insb
ja
je
out
sbb
loopne
enter
cmpl
mov
outsb
ret
out
sbb
mov
fst
mov
lret
adc
mov
int
rcrb
push
push
inc
sbb
movsl
fs
scas
adc
sti
andb
test
and
sub
and
scas
xor
pusha
ljmp
in
je
ret
mov
add
int
jle
addl
mov
push
in
mov
push
push
push
sbb
icebp
pop
push
sbb
loopne
std
shl
neg
sahf
in
jns
fwait
es
rcll
shl
out
fistpll
pop
xor
and
in
xchg
and
addr16
imul
iret
fsubl
enter
xchg
sub
xor
sarl
sbb
dec
dec
and
loope
inc
pop
cwtl
mov
mov
mov
cmp
fisubl
int
imul
movsl
xchg
fadds
jmp
fs
inc
ljmp
add
addr16
jnp
sub
lds
mov
pop
jno
sbb
dec
je
ja
dec
inc
mov
call
icebp
cld
xor
aas
pop
pop
dec
imul
push
jmp
cli
lret
shll
fiadds
cmpsb
shrb
sub
mulb
loop
incl
jb
sbb
xor
out
cmp
and
adc
test
rol
sahf
mov
outsl
mov
ret
mov
xchg
mov
mov
popa
std
das
out
adc
mov
aad
cmp
data16
xor
mov
mov
mov
pop
out
and
out
xchg
dec
dec
mov
and
inc
mov
pop
ficomps
fistpll
adc
or
jbe
sti
inc
cmp
inc
lock
stos
cwtl
pop
mov
addr16
in
add
into
mull
stos
lds
les
mov
mov
insb
adc
bound
xorl
mov
sbb
dec
or
clc
and
insb
mov
ljmp
pop
dec
test
hlt
pop
shlb
out
mov
lret
fistps
mov
stos
in
lahf
cmpb
shrb
lcall
adc
sti
and
jae
scas
push
loopne
hlt
rorb
jmp
or
or
sbb
inc
push
sbb
sub
subl
data16
cmp
addr16
aas
dec
mov
sti
icebp
lock
or
adc
xchg
push
inc
pop
sbb
fs
add
cmpsl
shrl
in
out
xchg
push
xchg
std
jge
fildll
jp
daa
repnz
xchg
pop
cmc
cli
sub
popa
sub
idivb
icebp
mov
inc
pop
jb
ret
xlat
lock
aad
push
paddd
lret
rorb
jno
mov
je
dec
dec
stos
xchg
aam
mov
leave
aam
xchg
ffreep
push
lea
scas
adcl
mov
jecxz
fmuls
in
and
xchg
inc
test
and
in
arpl
sub
jb
aas
sti
loope
sbb
fsts
lds
xlat
sbb
push
ja
leave
cli
push
jmp
popa
push
xchg
fimuls
lahf
ret
and
jbe
sub
mov
push
mov
fldenv
hlt
jp
xor
cld
jg
sub
adc
or
pop
fwait
push
and
outsb
cltd
xchg
hlt
das
add
subl
pop
push
icebp
pop
dec
cmp
sbb
lahf
pop
lret
div
adc
adc
and
mov
adc
add
inc
cmp
mov
pop
aaa
adc
aad
jne
xchg
inc
sub
mov
cli
outsb
xchg
or
icebp
clc
add
das
pop
mov
and
insb
test
data16
mov
inc
xchg
adc
push
xchg
jmp
xlat
pushf
shll
pop
fimull
out
sar
push
push
jle
mov
or
jecxz
push
scas
mov
sbb
ljmp
jae
mov
sti
dec
inc
cmp
pop
hlt
push
lea
dec
mov
js
pop
jo
rcll
jge
mov
scas
lret
popa
and
pusha
clc
aaa
mov
fcomps
daa
fs
in
mov
mov
neg
pop
out
into
inc
arpl
xchg
sahf
inc
std
adc
mov
mov
sub
ret
int3
sub
incb
cltd
mov
jl
sahf
test
push
pop
int3
mov
hlt
cmp
jae
call
cmpb
mov
loopne
fisttpll
cltd
jmp
add
push
in
pop
stc
and
pop
addr16
pop
es
test
cld
cmp
std
pop
ret
push
push
and
popa
lahf
es
repnz
sub
dec
sub
addr16
imulb
shrb
and
idiv
adc
jmp
or
ss
cmp
push
cli
mov
mov
jmp
call
inc
and
popf
repnz
iret
cmc
jne
test
inc
inc
sub
les
ja
cltd
hlt
or
pop
sub
je
mov
mov
pop
loop
and
mov
inc
pop
cld
inc
or
ljmp
daa
adc
mov
and
push
out
loopne
aaa
int3
pop
pop
negl
add
mov
fisttpl
inc
dec
rclb
repnz
shl
inc
shrb
ror
pop
xchg
mov
xchg
pop
mov
mov
rcr
in
sub
mov
movsb
push
push
out
sub
inc
mov
pop
ror
insb
inc
mull
bound
mov
xchg
lock
scas
movsb
jmp
mov
inc
xchg
and
xchg
cld
push
mov
sub
shlb
pop
mov
adc
mov
xor
xchg
adc
push
das
in
pop
aad
push
cmp
hlt
shl
mov
mov
outsl
push
imul
pop
in
mov
test
and
mov
orl
lret
ljmp
mov
sbb
inc
fldt
push
in
outsl
scas
xchg
dec
push
inc
testl
adc
push
pusha
add
add
dec
pop
in
xlat
lods
add
insl
imul
stc
sbb
xchg
cmp
out
jge
scas
adc
mov
out
mov
mov
pop
lds
mov
or
test
mov
pop
outsb
lds
mov
jae
mov
repnz
cli
lods
adc
pusha
movsb
test
mov
int
ds
std
lods
mov
or
int
bound
push
nop
in
lret
add
sbb
mov
mov
mov
xor
jns
push
cmpl
dec
ss
xlat
mov
cmp
out
sub
push
cmpsl
lret
xor
dec
aas
sub
repz
mov
cmp
jns
pop
push
popl
cld
aas
fldcw
gs
sbb
lss
cmpsl
mov
aaa
cmc
js
cltd
mov
lret
imul
inc
nop
xchg
mov
leave
pushl
insb
je
sub
inc
jge
jns
and
and
and
inc
xor
fs
pop
test
pop
in
fwait
test
decl
fbld
adcb
jnp
ret
movsb
lret
or
cmpsb
push
loop
sub
enter
shlb
cmp
in
inc
mov
lcall
sub
stos
xchg
mov
pop
bound
fnstcw
mov
fisubl
js
inc
das
ja
mov
mov
mov
inc
lods
dec
gs
ja
fldcw
ret
lods
cmpsl
mov
popa
cli
push
xchg
rol
and
pop
not
mov
test
bound
mov
xorl
sar
fchs
fxch
mov
sbb
push
mov
int3
pop
into
xor
mov
sbb
out
inc
add
movsb
dec
outsb
xchg
push
mov
std
nop
jg
sbb
aas
sub
inc
enter
mov
jnp
pop
xchg
shll
notb
andb
dec
pop
push
fnstcw
sahf
rclb
sub
lret
add
and
imul
and
loop
pushf
inc
add
mov
imul
mov
or
data16
sub
scas
daa
pop
pop
push
sbbl
dec
jno
gs
fistpll
lods
pop
in
sub
int
popa
or
inc
imul
xchg
test
lock
arpl
fwait
cld
outsl
xchg
out
and
xchg
faddp
addr16
mov
rcrl
lds
xchg
out
ljmp
mov
aad
pop
add
fs
mov
xchg
cmp
daa
stos
pushl
mov
test
jmp
ss
or
popa
xchg
mov
cld
aaa
sub
mov
cmc
add
jg
fisttpl
mov
pushf
enter
and
js
pusha
movsb
and
push
imul
mov
and
loope
sti
and
hlt
movntq
or
cli
cmp
aad
test
leave
in
aas
xchg
push
in
xor
push
jle
dec
push
out
ret
mov
mov
subl
bswap
icebp
fiaddl
fbstp
pop
jle
mov
adc
push
sarl
out
cmpsl
jmp
xor
dec
in
inc
stc
pop
out
inc
stc
mov
mov
or
lds
fmuls
mov
jne
mov
je
jnp
lods
or
dec
xchg
cmp
sti
jg
jg
lods
and
into
xchg
movsb
or
movsl
bound
adc
enter
mov
aas
ss
outsb
test
or
mov
loopne
xchg
push
pusha
fiaddl
cmp
xor
adc
xlat
or
pop
into
mov
pop
mov
popa
xchg
scas
xor
lret
mov
iret
pop
mov
sahf
sbbb
scas
mov
inc
enter
and
mov
mov
mov
and
sbb
loope
inc
fisubs
xlat
aam
mov
push
je
lcall
fdivrs
and
mov
pop
mov
stos
repnz
loopne
aaa
out
push
test
lods
test
jo
mov
hlt
pop
jg
and
cmp
sbb
mov
loop
mov
xchg
hlt
sub
xlat
add
pop
iret
mov
aas
and
test
jnp
or
je
xor
daa
bound
lea
jmp
into
call
pop
xchg
xchg
popf
pop
std
sbb
hlt
lret
ds
or
mov
mov
or
fwait
adc
jecxz
jl
push
into
out
xchg
stc
mov
sub
adc
fsubrs
mov
cltd
mov
pop
mov
insb
rcrl
adc
pop
scas
pop
push
test
in
xchg
roll
out
xor
data16
stos
test
and
and
ss
aam
inc
sbbl
stos
call
sbb
outsl
das
fld
mov
jno
pcmpgtd
les
sub
das
and
scas
xchg
xchg
push
jnp
xor
scas
jb
aam
mov
mov
push
mov
sbb
lret
mulb
test
mov
fmuls
jge
in
sbb
fbld
push
sbb
lret
je
jne
lods
pop
jae
push
or
sub
mov
testb
jle
aam
sti
or
push
out
in
jbe
jne
mov
cmp
sbb
and
sbb
jne
gs
fmuls
insb
add
push
sub
addr16
clc
xchg
in
mov
add
adc
ret
popa
adc
mov
xchg
jbe
inc
ds
shl
sti
or
jl
adc
loopne
push
addb
cmpsb
in
pushf
sti
pop
xor
sbb
lock
jo
in
xchg
cmp
sbb
cmp
jbe
jbe
popa
aam
aaa
fnstsw
shr
shrl
pop
lods
lret
jno
xchg
jecxz
push
lds
cmp
push
xor
test
addr16
push
dec
add
lds
aas
mov
movsl
push
lret
icebp
sub
mov
lock
sbb
sub
daa
lea
inc
mov
inc
stos
fcmovnbe
and
mov
repz
imul
add
cmpb
xchg
sbb
xchg
inc
cmp
arpl
jbe
cs
js
shlb
xchg
movsb
rcrl
cmp
scas
dec
dec
leave
adc
pop
lock
add
fidivl
cltd
shrd
dec
xor
mov
arpl
shll
orps
mov
cmp
sub
addl
cmp
add
cmp
pop
dec
adc
sub
inc
cmpsl
mov
mov
icebp
test
or
popa
mov
push
mov
adc
jmp
int3
mov
jmp
sub
daa
leave
jmp
fildll
adc
shrb
cmpsl
and
jbe
fidivrs
shl
cmpsl
add
jmp
cmp
orl
adc
cmp
mov
and
jl
xlat
xor
pop
aas
repz
xor
shlb
cmp
push
mov
pop
or
fnstenv
hlt
aam
lock
lret
xor
js
mov
stc
cmc
push
mov
adc
mov
lods
rolb
repz
xchg
mov
dec
xor
dec
int3
adc
pop
pop
shl
arpl
fs
loop
fdivr
dec
pop
sahf
cmp
dec
mov
out
stc
jo
cmpb
dec
addb
push
clc
pop
or
jg
jle
mov
jge
pop
loope
ret
ret
popf
fnstcw
push
roll
lahf
or
ljmp
push
loopne
adc
inc
cmc
lret
pop
sbb
push
cmp
pop
jae
aam
push
cs
jns
addr16
movl
mov
cwtl
adc
clc
repz
mov
fnstsw
andb
dec
cmp
pop
lcall
push
mov
xor
dec
enter
xchg
xchg
sbb
jle
pop
sub
sbb
cwtl
icebp
clc
ljmp
in
call
fucom
cmp
inc
sbb
push
sti
add
inc
stos
push
or
push
cs
addr16
add
call
jmp
cltd
loop
lea
fisttpl
sub
mov
cmp
insb
inc
mov
rolb
jbe
insl
lea
aaa
mov
sub
mov
enter
stos
loope
fs
cmp
push
mov
ret
xchg
imul
sbb
and
or
jbe
sbb
push
dec
stos
sbb
call
dec
adcb
loopne
shll
cltd
adc
in
addr16
roll
xchg
xor
loopne
push
push
cltd
scas
loop
mov
inc
bound
repz
pop
ficoms
or
gs
push
int3
int3
inc
in
out
fbstp
daa
clc
leave
push
fcompl
pusha
fs
pop
pop
add
sti
sub
sub
inc
and
sbb
jne
shlb
in
int3
jmp
int
jecxz
cltd
fwait
inc
cmp
iret
pop
pop
xchg
push
mov
and
xchg
int3
push
faddl
mov
inc
push
pop
and
nop
scas
ficompl
lds
mov
mov
xchg
fimuls
lods
dec
or
pop
mov
sbb
data16
xor
xchg
stos
icebp
mov
mov
testb
loopne
jg
mov
inc
call
int3
fnstcw
adc
pop
mov
push
mov
mov
gs
stc
xor
in
jmp
adcl
adc
and
xchg
dec
xor
or
leave
xchg
sbbb
xchg
outsb
xor
add
mov
in
sub
mov
jo
add
test
jno
mov
xchg
mov
in
xor
mov
or
jge
sbb
jl
sbb
ds
push
cs
adc
cmc
inc
test
xchg
cs
mov
mov
es
ss
repz
mov
or
jmp
nop
push
loope
fsubrs
mov
cmp
jne
sub
cmpsl
and
pop
cmp
mov
xchg
xchg
jge
jg
jbe
jg
push
ss
sahf
xor
push
cmp
xchg
xchg
pop
std
dec
xchg
jecxz
negl
loop
shl
ret
lds
and
inc
add
mov
sbb
fs
daa
sbb
jo
mov
aaa
xchg
test
xor
out
lret
sarl
push
aas
push
xor
sbb
pop
or
jns
pusha
in
adcb
or
sbb
mov
mov
inc
or
dec
aad
xchg
outsl
in
or
scas
loope
les
cmp
popf
cmp
adc
jne
lcall
cmpsl
mov
dec
imul
or
test
mov
lds
adc
mov
mov
imul
and
lods
into
das
inc
shll
jno
pushf
dec
mov
and
pusha
stc
push
cmp
mov
cmpsb
add
or
loop
mov
adc
dec
sbb
movsl
sub
dec
xlat
in
shll
push
xor
dec
cltd
adc
es
push
mov
fldcw
cwtl
sti
stos
mov
mov
cltd
pusha
loope
and
arpl
psllq
jnp
and
cmp
fidivs
mov
aaa
pop
mov
pop
pop
je
in
ret
cmp
iret
cmp
cmp
add
mov
fsts
jns
or
push
aaa
and
pop
cmp
iret
mov
pop
sub
xchg
mov
emms
test
dec
mov
ja
mov
rcl
and
mov
sahf
add
outsb
shlb
fwait
mov
dec
out
popa
repz
sbb
rcll
mov
les
vunpckhps
mov
mov
je
jle
stos
call
xor
inc
imul
inc
mov
jp
jge
mov
fs
adc
jnp
mov
mov
add
decl
sbb
jno
jecxz
jbe
lods
imul
xchg
testl
inc
cmp
xor
out
fcmovb
divl
sub
fidivl
and
push
jo
out
in
mov
pop
jge
or
pop
hlt
test
mov
lahf
sahf
add
add
mov
pusha
outsl
in
movb
lret
adc
mov
push
daa
add
sahf
adc
mov
iret
rcrb
cmp
repz
loope
xchg
data16
fs
pop
mov
sbb
lret
scas
mov
clc
push
cmp
popa
shll
mov
xchg
shrl
sbb
fs
icebp
pop
xor
or
icebp
fs
sub
mov
cmc
mov
mov
mov
adcb
lret
out
jle
adc
push
lock
mov
subl
mov
shll
dec
inc
push
sub
jmp
push
xor
faddl
or
add
jg
dec
add
mov
cmpsb
dec
fwait
jl
ficoms
ret
and
sub
std
call
push
daa
dec
popa
pop
rorb
outsl
pop
dec
nop
lods
dec
stc
out
lods
addl
imul
sarl
ds
cmc
data16
arpl
cli
in
mov
sbb
lods
data16
sub
aas
pusha
or
or
cmpb
sub
andl
jge
loopne
mov
imul
push
push
push
cmpsb
out
lods
or
add
and
xor
xchg
cmp
fistl
mov
dec
push
lds
dec
or
js
iret
xchg
test
pop
xor
xor
adc
gs
test
test
mov
and
mov
and
push
bnd
or
je
cli
push
mov
outsl
xor
mov
addb
or
outsb
push
pop
mov
push
fcoms
xor
test
out
nop
shrb
rclb
repz
cmp
mov
mov
loope
test
xchg
jge
incb
lea
xor
dec
xchg
loope
test
xchg
fiaddl
test
jmp
xor
push
jmp
jbe
inc
test
lcall
and
daa
or
ficomps
xchg
mov
push
pop
cli
sub
loope
pop
test
loope
mov
jle
pop
push
out
cmc
jle
and
sbbl
jne
dec
nop
pop
subb
mov
dec
fcmovnb
mov
adc
fbstp
cmp
push
ja
jne
pop
inc
invd
pop
mov
imul
fs
loope
mov
fdivrl
push
sbb
adc
cmpsl
frstor
fcomi
mov
sub
add
adc
pop
cmpsl
lds
sub
test
andl
fiadds
imul
sarl
mov
shll
sarb
ljmp
ja
aad
std
test
dec
cmp
fcomi
cmc
andb
mov
repz
adc
aas
aam
xlat
imul
mov
lock
push
shlb
pop
pop
inc
pop
ja
je
cmp
jp
mov
sbb
out
shlb
test
mov
lods
or
out
jnp
cmp
shr
mov
xchg
pop
dec
add
imul
popa
fistps
icebp
out
dec
xchg
and
lcall
inc
mov
cmp
adc
push
js
aad
mov
inc
dec
outsl
rcl
mov
cmp
sbb
test
mov
xchg
rolb
out
mov
jns
fdivrs
mov
idivb
shl
or
inc
or
fdivr
or
mov
adc
icebp
or
sbbb
nop
push
scas
mov
and
jl
cmc
jbe
push
jae
mov
std
jne
jnp
notl
frstor
rcrb
add
lret
adc
push
push
out
ja
xchg
fidivs
inc
fcomps
outsl
jg
cmp
mov
pop
push
hlt
orb
mov
ljmp
and
push
daa
fucomi
hlt
adc
testb
xchg
push
or
icebp
mov
jb
sarl
jbe
pop
adc
cli
push
jno
mov
andl
push
jl
sbb
xor
dec
adc
jg
int
imulb
cmp
fsubrs
mov
leave
mov
rcrl
aas
ret
add
add
mov
test
jae
inc
mov
fildll
aad
outsl
subb
sahf
lret
xchg
sbb
xchg
and
fs
out
fdivrl
je
push
dec
mov
sub
stc
mov
roll
loope
cmpsl
aas
cmp
adc
xchg
mov
pop
pop
aas
fisttpl
int3
cmp
insb
lahf
ljmp
mov
orb
mov
fisttpll
dec
aad
iret
push
frstor
pop
cmpsb
sbb
or
pop
int
enter
cmp
inc
mov
mov
or
adc
push
pusha
loopne
mov
cwtl
das
xor
or
xor
sbb
out
pop
dec
fs
out
mov
xchg
jp
jp
xchg
dec
icebp
outsl
mov
or
mov
inc
sahf
clc
mov
test
inc
push
sti
jno
in
dec
mov
aas
arpl
fisttpll
rcr
sbb
nop
xchg
dec
iret
pushf
pusha
pop
mov
xchg
cmpsl
pop
jg
je
scas
cmp
rcrl
repz
daa
push
sarl
mov
mov
imul
lods
decl
cmp
cld
es
cs
xor
mov
in
sbb
fwait
gs
dec
inc
fwait
test
in
in
out
data16
rclb
mov
lods
jg
mov
xchg
pop
dec
push
adc
and
mov
movsb
loopne
fsubl
rcrl
insb
mov
xchg
jge
mul
popa
cli
pop
pop
sub
cmpsl
popa
out
mov
lret
push
or
insb
mov
sbb
xchg
jnp
jns
mov
sahf
dec
add
push
jl
inc
cmc
push
mov
xchg
mov
dec
div
cmp
loop
dec
test
fs
popf
fldenv
mov
adc
push
out
cmp
cmc
mov
insb
test
adc
cmp
mov
outsb
pop
dec
icebp
xor
inc
sub
mov
fcompl
int3
fs
mov
sub
jmp
mov
clc
je
inc
xor
pop
push
inc
sbb
sbb
cwtl
add
das
xchg
sbb
mov
mov
sbbb
jg
add
and
fsubrl
mov
sahf
les
sbb
and
in
sub
fwait
out
lahf
and
xchg
pop
ret
in
movsb
mov
movsl
mov
lds
mov
je
mov
sbb
fistl
xchg
adc
and
dec
add
adc
ds
jnp
add
add
xor
cs
ficoms
insl
adc
jge
or
and
lock
cmc
push
sarl
jmp
sub
insl
xor
jnp
sub
dec
dec
movsb
in
outsb
sahf
lret
dec
pop
sbb
pushf
xor
cmp
push
sbb
outsl
mov
stos
ficoml
mov
jb
and
clc
inc
mov
sub
in
clc
xor
xchg
loopne
in
jbe
or
lock
decl
push
adc
into
xor
adc
repnz
jl
rorl
pop
jl
sub
ja
std
gs
out
cmp
js
dec
cltd
dec
imulb
jmp
or
mov
push
lea
cmp
add
sahf
xor
pop
jno
push
fidivrl
adc
test
dec
stos
adc
sub
out
mov
jns
mov
or
push
insl
das
sbb
sbb
addr16
pop
loop
in
call
scas
mov
or
lret
fcompl
mov
je
pop
dec
out
sbb
push
ret
lcall
push
jle
cmp
pop
movsl
mov
and
mov
mov
inc
mov
test
insb
jecxz
test
sbb
cwtl
lds
in
pop
jmp
jae
mov
mov
xor
dec
jbe
dec
inc
imul
pop
fdivs
rcrb
xor
les
aad
jbe
and
xor
mov
xchg
push
clc
movsb
mov
loopne
push
mov
jecxz
mov
push
mov
or
daa
cmp
js
repnz
imul
mov
inc
mov
jg
out
adc
in
and
cld
in
ror
jae
xchg
add
xchg
push
and
xchg
adc
lds
ret
pusha
add
add
sbb
inc
lods
rcrl
cmp
pop
arpl
and
fmuls
cli
inc
std
ret
mov
pushf
add
cmp
bound
mov
push
cmp
adc
pop
sub
push
cmpsl
xor
dec
pop
rcll
fwait
push
mov
ljmp
pop
xchg
xlat
divl
mov
into
mov
shl
push
or
iret
in
xor
stos
mov
mov
cmp
dec
dec
xchg
ds
pop
lret
mov
fnstenv
pop
jo
fadds
cmp
ja
sbb
sti
push
enter
lret
loop
mov
xor
sub
or
rorl
fstl
add
das
divb
cmp
pop
jg
sub
enter
clc
out
ja
push
cmc
sbb
push
ficompl
xor
jb
jo
cmpsl
and
cmp
dec
rcl
sbbb
mov
push
cld
push
inc
jbe
pop
xchg
fisubrl
xor
mov
add
mov
ret
jb
or
mov
mov
dec
cmp
imul
inc
pop
sti
arpl
pushf
popa
test
mov
sbb
es
dec
or
jnp
lds
push
jg
fidivrs
xchg
mov
loopne
fnsave
fnstcw
lods
movsb
push
out
sbb
cltd
push
sbb
les
push
repz
test
dec
mov
adc
pop
int
fiaddl
popa
dec
and
sbb
shlb
jnp
outsb
f2xm1
and
sbb
fcompl
dec
jle
sarl
cmpsl
movsl
mov
inc
test
sbb
mov
jp
in
xor
add
mov
lock
sbb
and
push
cmp
adc
shl
mov
pop
sub
and
popf
es
test
mov
loop
or
stos
jmp
xor
scas
and
xor
add
xlat
xor
imul
mov
cmc
jge
loopne
jecxz
mov
ljmp
or
inc
mov
lea
rcrl
scas
xchg
inc
mov
data16
pop
xchg
out
and
ss
cmpsl
pop
inc
cmp
fimull
xchg
movsb
mov
inc
call
daa
sbb
les
dec
xchg
pusha
mov
ret
fstps
jge
jo
adc
pop
cmp
mov
outsl
sub
mov
or
jns
inc
or
ds
inc
imull
pop
in
lcall
xchg
xor
and
xor
jp,pn
sti
dec
imul
or
mov
addr16
data16
out
fdivs
adc
lds
cli
clc
dec
pop
out
jbe
fld
pusha
fdivrs
and
int3
xchg
mov
sbb
aas
stc
fnstcw
repnz
arpl
cmpsl
insb
mov
push
jne
test
hlt
mov
adc
scas
int
in
sbb
call
sub
push
sbbb
jne
dec
int3
clc
xchg
push
cli
jb
out
jns
add
and
fsub
stos
inc
add
mov
jo
stos
mov
jmp
ss
sub
mov
js
insl
jno
pop
xor
sbb
mov
test
subb
push
fs
pop
out
ds
in
xor
lods
push
xchg
aas
test
jnp
in
sbbb
ja
arpl
xchg
in
xchg
cmp
cmp
push
cli
xchg
dec
aas
lcall
fsubl
sbb
pop
xchg
rcll
mov
loopne
fcomi
jp,pn
sub
mov
sahf
jns
jae
rcrb
rorl
adc
jbe
sbb
imul
rclb
and
pop
xchg
and
or
fldl
inc
leave
lcall
dec
xor
movsl
xchg
stc
dec
lds
and
sbb
and
sbb
pop
xlat
xchg
fisubrs
adc
outsl
pop
inc
inc
daa
push
push
lods
ficoms
xchg
cli
xchg
jnp
lods
in
mov
dec
mov
sub
inc
hlt
bound
sbb
xchg
adc
rcr
push
shll
out
ljmp
dec
add
enter
or
jle
clc
arpl
lcall
pop
jg
jecxz
shll
dec
negb
and
cltd
adc
insl
push
push
imul
fcoms
mov
dec
test
jb
movsl
lahf
test
popa
les
sub
inc
cmp
in
and
mov
push
inc
inc
inc
repz
or
daa
inc
ret
pop
push
mov
scas
adc
lret
ja
dec
xchg
push
lods
or
xor
pop
xor
scas
jb
stc
inc
jb
adc
cmp
dec
push
addr16
mov
mov
das
je
cmp
icebp
repz
push
cmp
insb
jecxz
xor
inc
mov
and
sub
sub
js
outsl
add
mov
out
jae
lret
push
sahf
sarb
sub
dec
adcl
inc
fstp
push
push
sbb
pusha
addr16
bound
jg
jl
loope
and
pop
fcoml
jno
pusha
sub
int
push
scas
gs
mov
fistpll
xchg
jg
into
push
pushl
ja
or
pop
fwait
sahf
adc
fidivrs
inc
mov
movsl
dec
scas
popf
mov
jne
fbld
sub
aas
subl
or
flds
lods
fimull
add
fcoms
leave
dec
in
xchg
subb
mov
into
inc
mov
cmp
out
sbbb
sbb
xchg
mov
xor
push
addr16
jmp
inc
pop
cmpb
adc
push
xor
lods
ret
xchg
mov
jne
in
add
xor
or
cmp
fldt
pop
mov
adc
fbld
adc
les
cltd
inc
in
mov
icebp
and
mov
clc
mov
jle
popa
cs
ja
in
jecxz
sbb
cwtl
sbb
fbld
cltd
cmpsl
lock
mov
dec
movsb
cs
mov
fidivrs
jmp
not
shlb
xchg
sbb
push
sbb
dec
fstps
fstp
cltd
push
and
push
add
inc
mov
pop
push
xor
jno
outsl
mov
mov
popa
in
lahf
pushf
or
pushf
sub
lods
lahf
shlb
insb
mov
xchg
xchg
ficoml
lahf
fidivrl
movsb
fwait
sub
xchg
dec
adc
dec
mov
mov
mov
dec
mov
lock
dec
cwtl
pop
xchg
sbb
or
movsl
cli
mov
cwtl
loopne
call
mov
in
push
push
adc
mov
xchg
adc
data16
int
or
rolb
mov
adc
lret
mov
xor
mov
xorb
fsubr
lods
jle
push
pusha
mov
daa
mov
inc
fcoms
icebp
test
js
mov
bound
mov
aad
rolb
mov
repnz
xchg
inc
cmp
add
stos
cli
cmp
je
arpl
ss
out
mov
and
jl
in
cmp
lret
jns
iret
and
mov
dec
jns
jp
jno
cs
inc
inc
incb
imul
mov
dec
or
push
leave
lret
sub
jbe
rclb
cmp
stos
enter
dec
jge
data16
adc
outsl
mov
or
in
repz
and
mull
ss
addr16
out
scas
lods
loop
cmp
adc
mov
cmpsl
aad
les
mov
pop
jl,pt
sbbb
push
inc
jp
adc
push
cmp
xor
or
jb
dec
add
je
std
jmp
imul
int
cld
push
add
arpl
inc
adc
mov
mov
daa
lds
rclb
fisubl
inc
xchg
xchg
sub
lods
lar
jno
sbb
or
mov
mov
inc
in
xchg
ret
out
iret
cs
mov
lret
jo
out
scas
pusha
outsl
adc
mov
push
mov
mull
scas
pop
ds
jp
and
clc
jnp
adc
mov
das
push
sub
divb
enter
in
dec
pop
es
into
aam
cmc
pop
je
mov
movsl
mov
mov
lods
pop
cltd
jnp
fs
lret
add
add
adc
sahf
mov
dec
dec
push
jns
cmp
add
xchg
daa
lods
jo
insb
pop
inc
dec
ja
inc
mov
cmp
imul
aad
push
mov
ret
inc
das
icebp
jo
sahf
mov
ljmp
or
test
cmp
cmp
dec
push
scas
inc
jns
flds
fs
mov
shlb
xchg
adcb
adc
sti
and
dec
and
add
pop
das
scas
add
push
out
out
int
into
sub
xchg
sub
test
xor
xchg
jb
jmp
imul
pop
xchg
mov
pusha
cmp
int
sti
sbb
loop
iret
out
and
xchg
stos
das
cltd
imul
xlat
inc
pop
jmp
cmpb
sbb
aam
outsl
jmp
lea
cmp
test
movb
imul
adc
push
movsl
subb
lret
lcall
or
and
xor
and
hlt
insb
in
mov
push
aaa
xchg
loopne
pop
sti
imul
stos
js
xlat
and
into
xchg
aaa
xor
mov
aad
repnz
push
xor
test
test
add
inc
mov
test
jecxz
mov
jp
mov
mov
rclb
mov
ds
shrb
in
sub
adc
mov
and
test
pushf
fs
into
adc
cmpsl
jae
or
repnz
add
jmp
cwtl
inc
jo
rcll
test
add
xor
pop
les
xlat
inc
jmp
jns
fildl
mov
mov
or
dec
addr16
rclb
in
adc
ja
push
jge
adc
xchg
cmp
cli
inc
xlat
test
dec
sub
mov
add
mov
or
int3
aaa
enter
aaa
mov
mov
insl
dec
ja
js
push
jb
fnsave
cmp
jl
inc
cmc
push
out
fs
add
jb
imul
sbb
push
pushf
movups
aad
fcmovb
mov
daa
aas
insl
mov
fmuls
das
jg,pt
lock
scas
cli
xchg
mov
sahf
xor
push
lret
jbe
ljmp
xor
xor
lret
adc
pop
ja
jne
frstor
sub
jp
mov
pop
add
std
int
sbb
sarb
or
dec
pop
mov
adc
jno
jl
sbb
fnstsw
xchg
push
cmpsb
push
jns
in
stos
push
sbb
jnp
inc
mov
inc
mov
and
xchg
es
into
and
add
pop
fnstsw
adc
and
sti
adc
xchg
cmp
pop
jo
stos
test
add
mov
jmp
insb
mov
adc
shrl
mov
in
push
fdivr
insl
cld
and
mov
hlt
sbb
push
std
aad
xor
and
inc
adc
fidivrl
mov
fldt
scas
add
stc
out
out
jmp
je
iret
inc
pop
xor
testl
shll
neg
aas
hlt
popa
xchg
rcrb
les
push
in
mov
sbb
addl
ljmp
mov
cmpb
jb
in
fwait
movsl
or
sub
mov
push
test
inc
loop
dec
nop
mov
mov
adc
mov
add
clc
dec
push
sbb
leave
int
cmp
push
fcomi
popf
dec
and
arpl
or
les
add
push
cld
add
popf
inc
and
popa
xchg
mov
sti
push
insb
cmc
dec
sbb
sub
mov
and
fs
cmp
and
nop
lds
push
mov
lcall
adc
adc
pop
mov
mov
inc
std
adc
ret
sahf
cmp
sub
popa
add
outsb
lret
inc
enter
sbbl
mov
rorl
xchg
jbe
and
and
aad
out
daa
add
dec
mov
push
xor
xor
stos
or
enter
cmc
cwtl
add
jge
lea
movsl
test
leave
push
cli
es
lahf
inc
in
sbb
xchg
aam
pop
mov
cmpl
add
push
das
cld
shll
pushf
mov
int3
or
and
and
add
jno
jecxz
orl
aaa
imul
fwait
mov
in
arpl
outsb
mov
dec
rcrb
sbb
in
or
jmp
fistps
arpl
ja
inc
push
lret
ficoml
mov
iret
mov
call
or
mov
xor
inc
lahf
int
cmpsb
mov
in
gs
mov
mov
mov
and
and
inc
pop
mov
mov
sbb
adc
and
pop
inc
popa
pop
lock
test
mov
rcrl
lods
inc
jp
fists
loopne
xchg
pop
pop
add
shl
repz
hlt
pop
repz
out
mov
call
sub
push
mov
add
pusha
ljmp
jle
rcrl
jb
sbb
pushf
and
fwait
icebp
rorb
and
leave
jmp
push
dec
jns
sbb
xor
call
or
jmp
dec
cmp
lods
push
les
ror
lods
mov
subl
jge
mov
pop
sub
ss
mov
vmaxps
and
push
sbb
iret
jae
fucomp
mov
xorl
in
mov
cmpsl
addr16
and
sub
scas
movl
sub
nop
inc
int3
or
and
aas
dec
xchg
es
and
stos
and
inc
notl
dec
pop
sub
enter
pop
mov
cmpl
push
hlt
negl
lret
push
outsb
pop
dec
fwait
mov
jb
jl
and
popf
push
jle
aad
jno
jge
xchg
mov
sbb
mov
sbb
and
sbb
das
push
or
inc
lcall
mov
jle
dec
or
in
and
arpl
xchg
or
jg
shll
adc
push
jno
mov
mov
and
int
add
or
inc
incb
cmpsb
push
jg
sbb
out
loop
nop
sub
je
repnz
fadds
sarb
lea
pop
push
push
mov
push
cld
push
cmp
sbb
cltd
fs
rolb
aaa
pop
sub
mov
mov
rol
inc
dec
sub
sbb
push
rorl
pop
mov
adc
sub
pushf
push
sub
jmp
in
aas
inc
and
dec
repz
dec
adc
or
mov
cmp
or
stos
mov
or
das
mov
mov
xlat
mov
inc
out
mov
arpl
push
aas
jg
stos
dec
subl
add
mov
add
or
or
jae
aaa
leave
cmpsl
aas
sti
lods
mov
int3
mov
cmp
jae
xor
xchg
mov
lahf
mov
je
js
in
pop
jne
fs
or
sbb
and
imul
mov
mov
int3
stos
mov
cs
fsubl
cmc
inc
or
pushf
mov
cs
mov
fstpt
xchg
adc
or
out
dec
lret
push
sbb
and
pop
aam
adc
in
mov
sub
cmp
adc
adc
loopne
push
jns
jo
das
mov
adc
test
adc
xchg
sbb
test
je
push
jecxz
or
xchg
dec
movsb
mov
scas
sarb
in
std
test
push
adc
mov
jmp
out
jo
jmp
iret
divl
aaa
mulb
mov
imul
fidivl
jle
add
push
jp
in
loopne
push
jo
push
push
insb
dec
fwait
mov
out
sub
lock
push
adc
mov
into
fimuls
dec
mov
call
sbb
xchg
pop
mov
outsl
scas
dec
xor
sub
sub
jb
xchg
mov
sbbb
mov
loopne
sbb
lock
mov
outsb
iret
push
icebp
dec
add
xor
out
sub
rcrb
inc
pusha
sbb
push
xchg
dec
or
xchg
xchg
cmpl
jno
fcoms
int
sahf
fs
push
xor
ret
repz
iret
mov
dec
xchg
outsb
xchg
cmp
cmp
test
sub
xchg
stc
cwtl
dec
jmp
divb
popf
stos
sbb
jbe
in
inc
lea
xor
pop
add
les
xchg
shlb
out
mov
mov
add
xchg
cmpsl
mov
jp
jne
mov
call
jnp
cmp
cmc
sub
dec
xlat
int3
int
jb
jecxz
add
data16
cmp
pop
jne
popf
dec
sarl
mov
mov
xchg
pop
adc
in
iretw
add
hlt
jp
xor
xchg
icebp
sbb
sub
mov
out
mov
or
push
ror
movsb
and
loopne
insl
jmp
in
dec
hlt
js
stos
jae
movsl
cli
mov
lea
inc
pop
mov
movsb
lcall
pop
es
mov
loopne
insl
add
fiadds
enter
and
or
icebp
repnz
fbld
cmc
pop
lods
jbe
les
daa
mull
mul
push
pushf
test
rorl
je
jp
nop
fsubs
fiadds
xchg
cmpsb
popa
cs
ds
loopne
loopne
stc
jae
mov
fdivs
or
pop
mov
mov
push
aad
aas
punpckhwd
loop
cs
pop
mov
rcrb
divb
or
jle
rclb
push
sti
ret
xchg
inc
adc
mov
and
dec
sub
cmp
jno
sbb
xor
adc
sub
lock
adc
sahf
fsubr
pop
stos
mov
push
or
test
rorl
ljmp
test
nop
stos
cmpsb
pop
mov
ret
sbb
je
scas
pop
fwait
subb
push
test
in
inc
std
pop
fistps
int
cmpsl
call
xchg
ja
in
and
jne
adcb
mov
xor
adcl
jp
mov
shrl
sub
mov
pop
psubq
icebp
inc
repz
dec
sbb
jecxz
orl
mov
dec
out
stos
aaa
pop
add
dec
jae
dec
movsb
xor
inc
outsb
fildll
cmp
gs
mov
mov
xor
mov
ds
mov
pop
xor
sahf
sub
jne
testb
inc
ret
inc
filds
aas
mov
dec
pop
xchg
pushf
fnsave
fcomps
xchg
pop
lea
cmp
repnz
stc
and
mov
inc
shlb
mov
ficoms
iret
je
in
out
push
push
dec
jbe
xchg
sbb
or
rcll
in
and
add
dec
das
push
jbe
icebp
sahf
pop
jnp
outsl
and
jae
iret
in
out
jp
jns
cmpsl
mov
insl
ja
or
inc
mov
xor
and
cwtl
repnz
pop
adc
scas
orb
test
shll
stos
out
sub
sbb
dec
xchg
jmp
and
fs
imul
out
scas
outsl
xor
mov
add
icebp
arpl
or
push
jns
xchg
cld
lcall
ficompl
sahf
pop
stos
or
ds
xor
pop
cld
aad
push
mov
call
mov
test
jnp
mov
bsr
add
mov
sub
cld
sbb
adc
pop
pop
in
lods
test
adc
xlat
lea
xor
movb
aas
xor
cmp
xor
mov
adc
xlat
iret
push
pop
pop
lret
push
xchg
int3
and
fadd
test
jns
push
leave
bound
cli
dec
inc
or
sub
mov
mov
mov
in
mov
aad
push
roll
jge
stos
int3
pop
mov
mov
lcall
cld
outsb
pushf
xchg
out
lret
adcb
and
mov
ja
out
fbstp
pop
call
pop
ss
sbb
call
mov
xchg
pusha
dec
icebp
jnp
sub
jb
cld
fwait
in
mov
xor
sbb
arpl
jl
cmp
inc
hlt
push
jb
lcall
fs
lcall
incl
sti
out
stos
inc
jp
mov
pop
pop
sahf
fsubl
outsb
add
clc
les
mov
loop
and
pusha
jge
or
push
clc
outsl
add
and
outsl
jmp
inc
mov
sub
mov
xor
scas
into
jb
lds
ljmp
aaa
jne
mov
fisubl
inc
test
dec
add
insl
outsb
in
mov
test
xchg
aas
fmulp
mov
int
cwtl
push
mov
mov
aaa
pop
shrl
and
xchg
addb
cltd
outsl
push
cmpsb
mov
test
mov
sub
push
mov
pop
or
adc
xchg
fldl
sti
add
cli
jnp
adc
dec
adc
mov
fsubrs
fsts
inc
xchg
in
dec
mov
mov
fnstcw
cli
mov
mov
out
test
pop
mov
pop
cs
mov
clc
dec
orl
cmpsb
xor
mov
xchg
sub
mov
dec
xor
aad
mov
call
and
sub
je
fsubl
add
fs
jmp
movsb
pop
adc
jecxz,pn
jnp
jb
xor
sbb
lret
jle
or
shll
call
and
das
and
lret
orb
inc
ffreep
mov
loop
inc
in
dec
fadds
pop
jns
movsl
dec
or
inc
push
mov
hlt
cmp
push
mov
jae
int3
sbb
pop
out
call
sbb
mov
adcb
inc
xchg
mulb
cmp
and
jae
pop
sub
ficomps
sub
std
int3
sbb
addb
flds
repz
mov
pop
aas
push
iret
sti
add
loopne
mov
jg
into
sbb
adc
jmp
iret
jo
neg
jno
and
lret
mov
adc
cwtl
ret
cld
mov
xchg
dec
loop
std
stos
sub
xchg
in
pop
mov
fldenv
loope
imul
mov
cmpsl
cmp
pop
fucom
fs
in
add
clc
lret
xor
pop
fs
mov
jmp
add
inc
pusha
fstl
xor
sub
in
outsl
popa
rcrb
imul
sbb
and
in
leave
das
mov
loope
punpcklwd
inc
and
push
rorl
cmp
iret
imul
mov
or
xlat
inc
jl
jl
and
xchg
push
pop
loope
and
popa
mov
outsb
daa
cmp
fcom
pop
sbb
dec
pushf
pop
jae
cmc
push
sahf
aad
jno
loop
mov
fistps
test
aas
mov
test
sbb
jg
rorl
push
jge
mov
xchg
rolb
lcall
into
adc
pop
imul
adc
dec
mov
stos
test
jg
xlat
fs
xor
outsl
daa
push
lret
mov
faddl
pop
test
dec
mov
and
or
sbb
mov
inc
and
leave
rcll
pushf
push
mov
xor
adc
je
stos
mov
pop
adcb
mov
push
xor
adc
mov
add
ret
cmp
je
sbb
jle
loope
jb
outsb
pop
fsub
dec
jno
gs
mov
movsl
popf
ljmp
ror
pop
stc
add
sbb
mov
mov
pop
sub
jb
js
out
pop
xlat
sbb
aas
sbb
pusha
adc
dec
sbb
into
mov
push
int
or
mov
int
dec
push
out
inc
mov
popa
and
in
mov
adc
cmpsb
push
add
jae
outsb
gs
dec
out
jge
add
jle
roll
lds
je
sub
pop
std
mov
cmpsl
xor
jo
or
push
lcall
leave
jmp
and
aam
hlt
hlt
movsb
fdivr
in
pavgb
mov
fadd
mov
jb
pop
adc
not
cmpsb
mov
push
ret
jge
dec
das
and
or
smsw
aas
jge
jne
xor
pop
fiaddl
pop
pushf
pop
jmp
dec
jnp
inc
fs
subl
cmp
sub
ret
daa
popf
int3
dec
out
mov
jmp
sti
or
pop
cmp
fsubr
or
xchg
pop
pop
cmp
insl
inc
mov
mov
mov
push
cmp
pop
insb
ficoms
inc
enter
neg
into
xchg
sub
jae
and
fcomip
mov
dec
inc
add
mov
sub
imul
add
cwtl
scas
inc
inc
movsl
xor
ret
repnz
das
cmc
inc
ret
pushf
and
jge
fs
fcmove
push
xchg
mov
test
lahf
ja
inc
mov
xor
adc
jb
lea
lods
mov
inc
aas
stos
scas
xor
jge
in
add
outsb
arpl
fistpl
fwait
mov
arpl
mov
ret
pop
addr16
ficompl
jp
out
out
movsb
ds
jecxz
dec
sub
pop
popf
push
inc
xor
lock
call
or
lcall
jno
jno
das
std
sub
push
push
out
sub
or
pop
sbb
mov
adc
cmc
or
xchg
adc
mov
adc
xchg
test
sub
repz
push
xchg
fstp
and
les
mov
leave
cmp
push
mov
or
xor
sbb
idiv
jg
movl
jne
fimull
scas
jge
mov
and
shll
jecxz
incb
inc
sti
adc
push
filds
js
andl
nop
pop
mov
dec
sbb
cmpsb
dec
stos
fldt
jge
add
push
pusha
push
scas
mov
or
pushf
push
adc
fbstp
xor
jns
imul
es
movsb
popa
mov
fdivrl
insl
mov
testb
stc
jecxz
push
out
stos
jg
xor
rolb
stos
xor
lret
test
je
gs
fidivs
neg
jl
pushf
adc
xchg
cwtl
push
cmp
mov
insl
push
inc
aas
pop
inc
add
icebp
stos
fdivrs
mov
pop
ljmp
andb
xchg
mov
push
pop
call
add
mov
int
jp
push
bound
jns
jo
out
push
jg
stos
in
jns
xchg
xchg
ret
push
pop
pop
mov
call
add
test
aad
divl
dec
stos
jge
jle
mov
lahf
xchg
das
or
sahf
add
jno
xchg
dec
mov
test
in
mov
mov
pop
lock
pop
xchg
ret
jo
jo
or
mov
inc
dec
repz
push
jnp
lahf
xorps
lock
cmp
pusha
jge
and
jmp
and
cli
mov
pop
leave
jge
in
inc
mov
mov
mov
inc
repnz
shr
xchg
push
xlat
outsl
addl
out
inc
push
leave
mov
repnz
aad
test
addr16
shlb
rorl
push
inc
dec
dec
mov
dec
nop
ret
sub
inc
nop
mov
add
xor
sbb
gs
scas
and
push
ret
hlt
int3
in
loop
mov
cmp
xchg
mov
movsl
push
addr16
repz
test
jae
mov
sbb
xlat
daa
mov
movsb
fistpll
fcomps
sub
xor
int3
cld
pushf
daa
push
je
ljmp
adc
bound
fwait
adc
enter
jmp
jge
test
xlat
mov
dec
loope
shlb
pushf
mov
cld
add
rol
mov
lods
xor
pop
add
jmp
test
fstpl
sbb
push
jnp
mov
or
push
in
int
outsl
int3
addr16
cmp
addl
push
stc
mov
fcomp
pop
xchg
adcl
dec
xor
xchg
inc
stc
pop
sbb
push
pop
repz
xchg
jle
push
dec
mov
arpl
push
mov
nop
popa
test
ljmp
dec
repz
xchg
sahf
je
or
js
hlt
stos
xchg
xchg
and
jae
outsb
jae
sbb
dec
jne
scas
inc
mov
mov
ret
jae
das
mov
dec
push
clc
das
mov
cld
sbb
ret
add
adc
dec
add
or
mov
loop
pop
stc
les
cld
cmc
ficoml
in
int3
aam
shlb
cmp
xchg
int3
stc
pop
pushf
cmp
test
push
mov
imull
movsl
test
mov
or
aaa
out
cmp
mov
xor
mov
sbb
cmpsl
sub
iret
addr16
movsb
inc
fwait
out
mov
cmp
adc
aam
ljmp
rolb
mov
aas
jp
push
in
gs
adc
mov
mov
leave
xchg
pop
xchg
leave
jl
ret
mov
enter
lock
add
or
xor
inc
xchg
jmp
lcall
sbb
vmovd
in
mov
aam
mov
lcall
and
nop
sbb
outsl
add
adc
inc
in
cmpsl
jp
lds
movsl
fiaddl
mov
shl
xorb
cltd
and
cmp
jp
adc
insb
jp
dec
push
aas
inc
loope
mov
mov
orb
enter
xchg
lret
mov
mov
insb
xchg
arpl
mov
fisubl
xlat
or
mov
int3
nop
outsl
adc
pushf
enter
jecxz
and
push
and
fwait
push
push
ret
pop
scas
ds
insl
xchg
pop
lahf
outsl
inc
fidivl
fwait
and
ja
sub
sbb
cmp
test
sub
sub
in
dec
xchg
and
ljmp
negl
leave
cmp
out
sub
orb
push
jle
test
cli
ud1
test
mov
xchg
xchg
stc
lret
sub
push
jo
dec
lcall
or
or
pop
sbb
or
push
mov
pusha
rcll
lock
inc
adc
cmp
xchg
cmp
inc
jp
aaa
dec
inc
xor
pushf
jae
in
lahf
push
das
mov
cmp
jle
cli
addb
xor
scas
gs
les
movntq
out
movsl
rorl
int
cltd
sti
xorb
mov
jle
push
scas
push
add
ret
mov
dec
stos
addl
xorl
mov
lods
cltd
and
xchg
and
xor
xor
imul
bound
popf
cmp
dec
mov
test
push
shll
rolb
insl
cmp
or
fnstcw
insl
cmc
int
push
movsl
push
add
ss
lret
test
push
jb
pop
lock
or
add
add
cld
arpl
mov
pusha
jge
sub
sbb
ss
or
imul
push
leave
nop
stos
repnz
cmp
es
push
std
gs
cmp
jo
sbb
push
test
loop
lods
cmpsl
ret
jmp
sub
or
imul
lods
dec
inc
jl
sbb
pop
xchg
mov
fwait
jno
xchg
cs
outsb
in
mov
jge
sbb
lea
in
fiaddl
mov
lcall
jno
test
imul
cltd
divl
fsubrl
cmpsb
adc
je
fwait
cltd
icebp
test
punpckhdq
sahf
je
leave
ljmp
inc
mov
cmc
sbb
sahf
sar
lahf
pandn
rclb
inc
pop
xor
rol
adc
popf
jne
mov
mov
jb
loopne
adc
and
xchg
fsts
ds
aam
scas
test
lea
cmp
jne
mov
mov
sbb
xchg
into
inc
and
and
lock
mov
enter
lahf
xor
jmp
xchg
sbb
jne
cltd
mov
lods
add
sbb
bnd
cmp
xchg
popf
in
jnp
mov
outsl
mov
mov
jb
sub
sub
sti
and
xchg
inc
jb
push
lcall
add
and
test
icebp
loope
int3
fdivl
mov
dec
sbb
xchg
je
clc
xor
jg
jbe
push
xor
popa
ret
scas
adc
scas
inc
xchg
pop
data16
jnp
in
pop
aam
inc
or
test
mov
faddl
push
jne
iret
repnz
fcmovbe
sub
addr16
xlat
pop
cmp
mov
mov
mov
mov
test
movsl
mov
push
mov
out
mov
stos
loope
inc
jmp
xor
rolb
cmp
lods
xchg
xchg
pop
out
adc
out
outsb
jbe
pusha
call
sbb
insl
xchg
out
js
dec
stos
sbb
fdiv
mov
jbe
sbb
push
jae
in
mov
pop
vmptrld
daa
jg
xchg
or
fcomps
sbb
lret
adc
aas
jnp
mov
or
mov
mov
fisttpl
pop
mov
stc
je
jns
dec
out
cmpsb
inc
mov
lds
cmpsl
mov
cwtl
or
jl
pop
jae
loop
into
enter
xchg
call
fsubrl
cmp
pop
cli
rcl
in
in
repz
loop
leave
roll
fldcw
sub
jae
fdivrp
lea
adcl
pop
movsb
inc
add
sub
jbe
lock
or
stos
scas
pop
cmp
mov
push
sub
push
mov
cwtl
push
cmp
psubd
and
outsl
icebp
mov
ja
jb
repz
dec
out
inc
loop
inc
fs
jge
mov
js
icebp
xlat
sbbb
pop
mov
inc
cs
pop
adc
scas
dec
in
icebp
mov
xchg
leave
lea
add
cmpl
int
lret
xor
mov
sbb
adc
shlb
int3
fwait
adc
push
je
fnstenv
push
mov
int
mov
mov
incb
add
aad
mov
push
push
mov
shll
arpl
adc
mov
mov
mov
outsl
or
ds
add
sub
jp
jns
test
adc
push
test
fadd
jb
xchg
mov
mov
inc
out
xchg
or
mov
imul
add
out
jno
cmc
jle
mov
sbb
cmp
lcall
in
lock
rcrb
sub
into
shll
push
inc
stos
jae
fiadds
loope
rorl
lds
popa
jb
std
dec
lods
cmp
inc
dec
pop
repz
pusha
mov
ljmp
in
dec
lods
stos
cwtl
movsl
mov
dec
dec
mov
mov
sbbb
or
cmp
jno
push
add
or
std
sbb
jge
pop
and
jle
cmp
xchg
imul
adc
pop
ss
xchg
inc
and
movsb
jns
invd
add
mov
xchg
inc
int3
inc
out
pop
xchg
lahf
in
sub
lret
fsubs
dec
and
mov
repnz
jns
imul
aam
pop
pop
mov
sti
cld
sub
mov
fbld
aam
sbb
ja
cmp
dec
arpl
jp
andl
mov
insl
adc
dec
divb
sahf
jnp
jg
mov
test
xchg
outsb
sti
fsubrl
shlb
shlb
add
shrl
je
outsb
mov
adc
inc
sbbl
jl
xchg
je
jp
out
lret
and
adc
aad
fcompp
dec
push
mov
mov
mov
rcrb
cmc
add
mov
fcoms
pop
add
sub
sub
and
add
mov
cmpsl
mov
dec
xchg
sbb
and
cwtl
fdivrp
rorb
dec
jnp
push
mov
cmpsb
pop
pop
dec
mov
mov
add
sub
sub
psubq
sbb
mov
sti
lahf
jne
inc
or
por
cli
sti
sbb
sbb
mov
or
fsubrl
movsl
in
xor
mov
cmp
aas
xchg
dec
jmp
push
add
pusha
cli
push
cmp
mov
dec
shr
pusha
fprem1
add
rcll
mov
clc
fdivrl
add
cmp
mov
not
inc
rclb
mov
and
dec
call
pop
adc
jae
push
pmovmskb
ret
jecxz
popf
aad
cld
inc
movsl
mov
repnz
xor
dec
mov
fcompl
dec
lods
ret
mov
push
push
out
ja
dec
ljmp
shr
push
jbe
sub
pusha
imul
dec
stos
insb
cmp
mov
jb
lcall
aam
add
mov
scas
sub
fsubl
test
xor
sarl
andl
xchg
rcl
dec
inc
inc
fcmovnu
mov
pop
pop
jp
sbb
sbb
sub
add
insb
in
inc
sub
dec
stos
pop
mov
jns
pop
pop
lcall
xchg
or
scas
inc
inc
dec
inc
xor
movsb
mov
push
xchg
mov
shrb
into
aaa
mov
inc
cld
xor
and
scas
dec
pop
out
mov
or
pop
cmp
cld
mov
cmc
lret
sbb
or
add
mov
aad
dec
stc
repnz
insl
and
aam
and
icebp
inc
push
nop
loope
and
scas
cmpsb
add
or
fcmovnb
lcall
nop
lret
popa
bound
jg
int
movsl
or
mov
fs
mov
sbb
popfw
pushl
or
push
gs
in
add
mov
in
loopne
sar
js
gs
sarb
jge
daa
jl
or
inc
mov
icebp
or
xor
sti
int
and
out
loopne
lahf
add
xchg
ss
add
push
push
divb
mov
xchg
dec
mov
dec
push
mov
fisubrs
dec
lret
mov
lret
ds
or
sti
aas
push
ret
mov
mov
andb
pop
jo
cmp
cmp
jne
xchg
loope
shl
in
dec
cmp
add
or
sub
ret
inc
das
and
repnz
xor
daa
rcrb
push
daa
mov
mov
aas
xor
popf
jmp
sbb
aaa
in
imul
divl
add
lret
mov
xchg
xchg
repz
ret
push
test
xchg
sbb
bound
mov
push
push
imul
outsl
rcrl
rol
aam
and
push
repnz
sub
xor
mov
insl
movsl
lock
mov
lcall
cs
inc
mov
jb
repnz
push
push
testb
addb
push
movsl
int
pop
rolb
pop
or
es
fnstenv
rorl
sbb
fcompl
push
and
test
mov
xor
or
cltd
mov
jnp
pop
jo
out
xor
dec
out
adc
xor
mov
adc
out
out
nop
cmp
add
add
imul
outsl
jp
rolb
cli
sahf
out
mov
test
jo
mov
jbe
dec
jne
lcall
xchg
lret
mov
pop
mov
mov
sub
xchg
sbb
fwait
push
xchg
data16
movsb
test
push
dec
push
xor
or
lea
mov
mov
shll
mov
mov
xchg
in
jno
and
jge
cmp
fisubl
daa
sub
shr
orl
ret
inc
sti
push
adc
xor
jno
jns
int3
sbb
xchg
sbb
sub
cmpsl
adc
xchg
mov
or
mov
jo
adc
xor
loop
push
mov
pop
mov
or
pop
jmp
adc
fidivrs
nop
std
pop
cmpb
jnp
enter
jp
lret
fcomp
push
xchg
movsl
inc
mov
mov
out
cmp
inc
lahf
lock
pop
and
addl
mov
in
pop
xchg
add
inc
cmp
addr16
sbb
mov
mov
xchg
lock
xor
leave
add
loop
pop
jo
or
cltd
js
mov
lds
sbb
hlt
xor
add
loope
mov
jle
mov
lea
mov
test
lcall
rcr
lods
dec
movsl
mov
mov
sub
pop
bound
inc
imul
cli
addl
lods
ja
cmp
fimuls
data16
pop
aas
and
jb
pop
jb
mov
lahf
push
lods
adcb
pop
xor
and
or
xor
cli
push
xchg
jl
mulb
jmp
stos
ss
aad
imul
cld
or
sahf
mov
fmul
push
aaa
jb
cmp
pop
jb
int
jecxz
dec
arpl
xor
loope
repz
fisubs
or
sub
sub
aaa
out
out
outsl
mov
adc
push
jno
scas
aas
repnz
add
mov
addr16
out
or
repnz
jb
push
inc
test
jg
sbb
push
mov
out
out
lds
dec
imull
xchg
fcomps
adc
adc
out
pop
adc
pause
push
dec
inc
jo
gs
xchg
adc
imul
bound
push
mov
mov
fcoms
cmc
sahf
hlt
pop
mov
pop
stos
lods
xchg
sub
jb
jmp
addr16
mov
mov
sub
into
shlb
jo
arpl
call
std
and
jb
mov
cltd
sbb
lret
cwtl
push
xor
mov
cmp
cld
mov
add
mov
jbe
aad
xor
out
int
sbb
nop
loope
imul
mov
xchg
mov
or
les
shrb
test
scas
mov
cmp
call
lret
scas
or
mov
sub
pop
adc
lret
dec
shll
inc
xchg
test
cmp
mov
adc
ret
ds
shrb
pop
imul
mov
fbstp
repnz
int
or
mov
rep
cmp
mov
inc
and
jo
pop
lea
push
lahf
xor
stos
or
rcr
fcomi
test
test
call
rorl
inc
jg
test
cli
jmp
sbbl
outsb
cmp
into
xchg
out
jmp
or
inc
mov
sub
push
jp
fmulp
movsl
cwtl
sbb
dec
inc
pushf
xchg
cmp
sahf
pop
add
push
imul
outsl
sbb
lret
test
push
inc
sub
dec
out
daa
pop
sub
clc
popf
and
shlb
cwtl
jge
sub
mov
hlt
dec
jp
inc
cmp
aaa
mov
in
clc
imul
arpl
inc
cltd
test
xchg
inc
xchg
pop
pushf
stc
popa
xor
push
or
mov
lret
shrl
dec
or
jo
iret
data16
push
mov
jp
pop
les
pop
loope
sar
xchg
lock
cld
aam
add
mov
xor
sahf
sub
and
mov
inc
xchg
out
lret
test
pop
pop
or
push
sbb
sub
push
add
pop
mov
cmp
inc
mov
jb
cmpsb
inc
cmp
push
pop
pop
adc
enter
push
arpl
add
sub
push
scas
scas
lret
ss
adc
dec
jno
or
les
mov
cwtl
nop
fildl
fnsave
cmc
icebp
leave
test
ja
negl
mov
adc
mov
ljmp
fiadds
stos
fs
or
jge
adc
inc
add
je
data16
jge
jge
stos
mov
cld
js
pop
jns
pop
clc
xchg
stc
enter
mov
and
add
mov
mov
mov
mov
dec
and
jno
les
push
jg
mov
and
cli
dec
addr16
rorb
hlt
out
or
push
iret
add
sbb
shl
mov
test
cmp
add
jb
imul
outsl
inc
xchg
lret
lcall
ret
mov
outsl
pusha
sbb
dec
inc
inc
push
mov
mov
fldenv
adc
stc
dec
add
cmp
imul
fistl
xor
mov
addl
dec
xlat
je
mov
lock
jne
lock
movsl
lea
add
stc
out
lods
in
testl
lea
jp
outsb
data16
sbb
push
xchg
pushf
or
sub
cmc
adc
cltd
xchg
andl
insb
movsb
xor
and
scas
jnp
mov
fdivp
push
lret
cmp
adc
in
jnp
pop
insb
xor
adc
mov
sbb
les
cmc
jle
sahf
ret
fmuls
outsb
icebp
mov
outsl
notl
not
bound
rcrb
mov
aas
fcompl
cmp
or
and
mov
inc
inc
dec
gs
jns
dec
mov
imul
insl
lahf
pop
jno
pushf
fisubrl
sbb
std
and
push
movq
imulb
xor
add
les
jecxz
push
xchg
xchg
cmp
jl
cmp
lds
iret
pop
cmp
push
mov
leave
dec
inc
inc
xlat
xchg
xchg
xor
adc
or
or
imull
test
test
daa
mov
mov
push
aad
adc
idivb
cmp
push
ds
arpl
jnp
je
push
lcall
ss
out
xchg
idivl
or
jmp
testl
adc
xchg
xchg
ljmp
loopne
jne
xor
mov
cmp
jne
xorl
shl
in
inc
ret
cld
subb
into
or
out
imul
mov
xchg
lret
and
jnp
dec
xor
fistpl
xchg
dec
sub
lret
mov
imul
fsubl
or
or
hlt
adc
es
add
arpl
mov
repz
mov
cmp
movsb
test
or
jbe
sub
mov
fbstp
push
sbb
cmp
jecxz
inc
addr16
cmp
cmpsb
outsl
fsubl
call
xchg
sbb
xchg
addr16
jb
cmp
xchg
xchg
cs
adc
jbe
mov
daa
xor
add
pop
mov
pop
popa
roll
jmp
mov
fildl
fsts
cmp
enter
sbb
xchg
xchg
push
push
xor
orl
sub
lods
adc
jmp
inc
lret
sarl
pop
and
addr16
out
sub
push
dec
cmp
rcrl
xlat
mov
mov
cmp
mov
cltd
or
xchg
cwtl
push
xchg
pusha
shl
cld
stc
xor
popf
out
ss
lahf
dec
lcall
or
mov
loopne
mov
das
hlt
jns
sub
loopne
mov
arpl
repnz
fisubl
xor
sahf
ficoml
test
enter
inc
add
xor
sub
add
aad
cli
out
js
dec
insl
enter
shrb
jp
cmp
sbb
pop
pop
push
pop
insb
xchg
fsubr
lods
or
clc
cmp
shll
data16
and
les
xchg
sbb
jl
cmp
shl
movzbl
mov
lcall
fwait
dec
lods
push
out
xor
adc
fbstp
incl
aaa
icebp
xchg
fcom
jge
pop
gs
inc
cmp
loop
jmp
pop
ret
inc
rcrb
stos
shl
dec
and
inc
pop
dec
orl
stos
cli
dec
adc
adc
insl
inc
push
out
push
ret
lds
test
lcall
mov
outsl
cmp
stc
int
fldt
lret
and
dec
pop
sahf
push
js
adc
xchg
fs
cmpsb
pop
pop
mov
shl
mov
rol
xor
cmp
fistpll
and
insl
sarl
sub
lock
jg
and
jbe
or
movsb
jmp
xor
pop
adcl
mov
xor
cmp
ret
arpl
lock
add
repnz
push
insb
pop
in
scas
xor
fwait
push
jmp
or
enter
sbb
loope
mov
test
inc
dec
loope
xchg
leave
in
push
popa
fidivs
jle
lahf
xor
fmuls
scas
dec
sub
push
cmp
insl
mov
sarl
jmp
pop
ja
dec
mov
pop
cmpsb
sahf
jecxz
push
jne
test
movsl
in
stos
lods
outsl
mov
mov
in
sar
fcomps
out
mov
scas
decb
jns
rcrl
call
xor
stc
adc
push
jmp
sub
orb
mov
sahf
shll
test
insb
insl
and
negl
outsl
push
int3
cmpsl
inc
loope
and
or
jb
jne
sub
fs
mov
or
lock
nop
xor
xlat
cmp
pop
fs
in
dec
jo
sub
mov
js
ficoms
jo
scas
and
xor
inc
fidivrl
scas
jbe
js
out
cmp
and
pop
imul
lcall
xor
and
vcvtps2pd
enter
mov
cmpsl
jecxz
dec
in
jmp
push
adc
cmp
sbb
enter
fwait
mov
mov
dec
int
mov
lahf
pop
lds
xchg
sub
push
mov
lahf
jecxz
and
dec
rcrl
mov
lret
sub
data16
dec
jmp
adc
jns
repnz
pop
popa
cmp
add
mov
mov
jne
pushf
xchg
mov
shrb
inc
mov
fwait
stos
or
push
lea
jo
dec
pop
out
jbe
out
scas
mov
or
cmp
push
push
push
lret
popf
repnz
ss
outsl
mov
shlb
stos
insl
mov
and
mov
and
int
repz
push
test
fbstp
loop
jge
aam
push
add
add
testl
sbb
push
scas
data16
or
cmpsb
arpl
cmp
push
mov
fstl
gs
xchg
mov
pop
sub
bnd
das
sbb
push
stos
adc
cwtl
xor
cmc
outsb
stos
cmp
cltd
jae
filds
test
ret
bound
and
pusha
stos
pop
push
popa
mov
mov
xchg
daa
cld
push
in
pop
cmp
mov
dec
das
fisubrs
into
divl
cmp
pop
jno
and
pop
test
dec
popa
sub
rolb
std
cmpsl
aad
dec
mov
cmpsb
xor
jno
lds
sub
dec
ret
call
jmp
sbb
jne
cmpsl
out
mov
pushf
pusha
call
cmp
and
dec
jo
aas
lock
lahf
test
arpl
out
sahf
xorb
std
aam
imul
lods
push
imul
cmp
lods
cmp
popf
pop
cmp
mov
add
adc
pop
mov
movsb
push
pusha
cmp
fdivl
jle
add
or
pop
pop
inc
xchg
loopne
add
and
js
jo
ss
or
lock
sarb
je
sbb
xor
cmp
xchg
mov
sbb
cmpsb
fidivrl
rcll
mov
nop
inc
dec
and
sbb
sub
push
adc
jnp
adc
jge
iret
adc
rcrb
in
movsl
xchg
xor
sbb
fs
pop
int
add
cmc
mov
gs
xchg
add
lcall
fwait
shrl
out
in
lahf
insb
or
mov
mov
test
mov
sbb
cwtl
inc
mov
ret
test
cmp
or
mov
mov
fs
out
aam
pop
sbb
enter
loope
add
dec
movsb
adcb
dec
xor
cld
outsl
pop
mov
xchg
sub
hlt
inc
testl
inc
mov
dec
rorb
gs
stos
fidivl
and
fmulp
repnz
jbe
enter
in
cltd
fbstp
mov
mov
mov
clc
inc
add
ja
ja
mov
sbb
and
stos
int3
mov
and
push
mov
loope
xorb
outsl
or
rolb
jp
ficompl
aad
popf
or
pop
mov
aaa
xchg
inc
mov
out
lods
into
gs
cmp
fistl
fiadds
adc
or
repz
xlat
shlb
lds
and
lea
inc
daa
sbb
out
ds
add
add
pushl
sbb
mov
jecxz
mov
pop
out
js
les
push
sub
mov
mov
mov
aaa
jmp
xor
test
mov
ret
push
fldenv
push
arpl
push
mov
jecxz
jle
insb
lods
insb
out
mov
or
stos
out
das
mov
lods
dec
mov
sbb
add
sub
lahf
dec
stos
mov
negl
push
ja
icebp
or
int3
jle
mov
test
lock
fisubl
jp
mov
sub
repnz
stc
nop
imul
jle
add
popf
jecxz
fisubs
xchg
mov
dec
adc
dec
mov
mov
cmc
pop
lret
dec
jae
inc
dec
mov
cli
inc
xor
inc
push
xor
in
jno
and
movsb
pop
jle
sti
pop
jae
lahf
pushf
lds
cmp
xchg
push
push
add
ss
outsl
xor
nopl
cmp
xchg
inc
lret
cmp
lahf
xchg
popf
add
push
sarl
es
xor
movsb
popa
cmpsl
divb
dec
fisubl
outsb
lret
cmp
into
icebp
fnsave
and
lret
mov
adc
xchg
adc
gs
sub
sbb
insl
mov
xor
test
gs
lahf
xchg
cmp
test
loopne
add
fbld
ret
aam
pop
cld
sub
fwait
adc
jge
cmpsl
mov
xchg
cmc
add
mov
lds
pop
testb
and
mov
repz
mov
sbb
fildll
fnstcw
repz
push
xorl
imul
cltd
das
jl
pop
psubsw
adc
stos
push
cltd
dec
sbb
mov
pop
test
push
cmpb
roll
mov
ja
ss
ret
clc
imul
dec
aaa
mov
shrl
xor
sub
loopne
incl
cld
ljmp
es
jae
imul
or
adc
pop
addr16
and
jg
test
inc
test
hlt
mov
sub
fldcw
ja,pn
push
test
lea
les
out
pop
stos
pop
mov
ds
je
adc
jno
into
cmp
into
mov
pop
popa
xlat
aad
xor
cmpsb
sbb
outsb
xor
stos
andps
cwtl
les
xor
aam
loope
sub
and
fldenv
mov
mov
mov
mov
pop
neg
out
aas
cltd
into
or
sub
xor
jmp
aam
cmp
das
scas
xchg
js
cmp
pop
mov
adc
mov
sarb
push
mov
push
jge
inc
dec
imul
xor
push
enter
xchg
or
aam
ret
or
icebp
pop
lds
jb
dec
cltd
mov
hlt
or
cli
test
das
in
mov
xchg
jnp
dec
or
scas
leave
push
sub
xlat
push
rcrb
adc
enter
mov
arpl
outsl
mov
insl
inc
lds
sahf
sti
pinsrw
or
push
adc
enter
sbb
lcall
sub
mov
sub
pushl
pop
icebp
int
repz
mov
mov
push
mov
scas
popa
dec
dec
jle
cmp
mov
cmp
ds
pop
inc
jb
dec
pop
mov
lret
shlb
jbe
cli
mov
xchg
push
xchg
ficoml
loopne
xchg
arpl
insb
addr16
sub
or
scas
fadds
push
into
repnz
fwait
imulb
and
aas
push
mov
out
jo
ret
sub
in
lret
xchg
nop
sbb
xchg
xorb
pop
into
rcr
nop
scas
push
add
add
in
xor
mov
mov
test
imul
xchg
jmp
addl
mov
clc
add
cmc
xchg
jecxz
xchg
xchg
or
jne
mov
jne
insb
mov
fildll
pop
dec
stos
arpl
cmp
sub
out
push
push
mov
movsb
fcompl
bound
nopl
outsb
or
dec
iret
mov
ret
or
lahf
xor
daa
into
movsl
mov
push
push
jo
fldcw
test
push
lock
adc
insl
adc
pop
test
and
test
mov
fsts
das
test
aad
mov
or
lods
jmp
sub
adc
adc
jo
inc
jns
movsb
cmp
push
repnz
pop
and
mov
inc
push
jb
gs
sub
inc
addb
rolb
test
cmp
stc
sbb
and
loop
mov
or
mov
mov
fdivrl
mov
or
call
shlb
add
sbb
les
stos
loop
and
notb
push
repz
test
add
stos
xchg
adc
push
push
data16
movb
mov
add
lds
cld
outsl
ja
loop
mov
add
inc
xchg
and
lea
ret
rolb
pop
lret
cli
pop
jnp
repnz
aad
outsl
sbb
add
aad
push
lea
scas
popa
and
ficoms
sbb
push
adc
cmp
dec
or
inc
push
jg
rcll
adc
adc
xchg
pop
sub
addr16
std
push
or
sti
mov
and
jb
push
push
add
mov
mov
cmp
cmp
out
cmp
push
aad
sub
stos
sbb
mov
inc
xor
jae
inc
jmp
stc
sbb
and
pop
cmp
aaa
push
fstl
fcoms
lods
and
sub
and
add
push
lret
mov
jae
mov
jp
push
inc
cltd
xchg
mov
push
shll
daa
out
pop
inc
pop
xchg
mov
test
dec
je
xor
cli
bound
push
leave
jo
jl
mov
jp
cmc
movsb
or
addr16
inc
mov
pop
ret
mov
mov
jmp
or
into
adc
pop
lods
push
cltd
iret
rep
jne
jns
cmp
mov
xor
arpl
popf
insb
mov
aaa
add
pop
lcall
movb
roll
xchg
push
mov
in
cmp
cmp
jns
scas
push
in
adc
ss
in
inc
mov
mov
fnstsw
mov
imul
pusha
push
lret
mov
ja
mov
and
add
sub
add
jl
int3
fwait
sub
iret
adc
xchg
push
fldcw
push
xchg
jbe
xchg
and
sub
outsb
test
pop
push
mov
cmpl
sarb
popa
add
mov
fidivrl
in
cmpsb
outsl
jp
push
add
mov
add
arpl
out
roll
lds
jl
push
insl
sbb
orl
aad
sub
pop
sub
jmp
xor
out
inc
pop
cmp
mov
sbb
sub
sbb
insl
neg
lods
ja
lahf
mov
mov
sti
fs
mov
idiv
mov
mov
sbb
sbb
dec
mov
sub
and
or
xor
notl
icebp
push
push
inc
pop
lea
sub
xor
jbe
enter
xor
cmpb
mov
rcrb
lock
add
out
jg
push
rcrb
jp
inc
mov
xchg
pop
push
popl
and
jne
pop
mov
adc
cmp
push
push
pop
jecxz
loop
repnz
cwtl
stc
sahf
push
add
push
jecxz
or
xorb
stc
pop
lret
xchg
sahf
sbb
dec
loope
jmp
pop
insl
xchg
sbb
test
sbb
push
mov
mov
mov
lds
ret
scas
adc
dec
cld
pop
push
push
sub
and
pop
or
scas
pop
jb
notl
sub
adc
add
sbb
sub
xor
adc
outsl
mov
xchg
aas
mov
ds
mov
aam
mov
insb
xchg
sahf
mov
cs
inc
movsl
sbb
movsb
inc
jmp
adc
adc
daa
xor
xor
int3
push
aaa
and
xchg
add
mov
sbb
mov
mov
cmp
push
sbbl
pop
jmp
dec
mov
pusha
push
fstl
icebp
pop
fldt
in
push
push
xor
jmp
mov
int
xlat
fdivrp
rorb
mov
mulb
jno
xlat
xlat
sbb
ret
xchg
pusha
or
aam
jno
xor
leave
arpl
mov
xchg
cmc
cltd
and
cmp
adc
mov
bound
sub
test
scas
lea
icebp
jl
andl
cmp
jae
mov
push
clc
aaa
loope
jne
jl
cmpsl
jp
enter
pop
jmp
lock
enter
aas
ret
jle
or
addr16
adc
insl
sub
add
xor
imull
fbld
mov
rcll
mov
pop
lock
cltd
mov
xor
or
mov
js
ja
pusha
test
scas
xor
mov
inc
rolb
pop
adc
and
rclb
in
jbe
mov
pop
test
lcall
mov
das
push
mov
pop
std
pushf
addl
sbb
std
mov
stos
stc
icebp
adc
mov
push
bound
sbb
pop
stos
push
insb
je
jle
push
shrb
gs
xchg
movsb
jg
shrl
dec
add
jnp
mov
or
xlat
push
pop
sarl
je
iret
cmp
sub
loope
pop
push
popf
mov
push
aas
or
add
sarl
test
mov
jbe
pop
xchg
pop
add
roll
out
wbinvd
mov
int
pusha
mov
movsb
dec
xor
mov
sub
ds
mov
xor
into
pop
push
mov
iret
outsl
nop
xchg
imul
in
mov
loopne
out
cmp
inc
mulb
rorl
gs
repnz
dec
ss
add
xor
add
pusha
sub
and
stos
das
mov
xor
lds
loope
pop
jmp
xor
repz
sub
inc
mov
daa
fs
mov
jge
cvtdq2ps
out
movb
out
push
addr16
xchg
stos
call
je
jns
dec
or
jae
adc
loop
mov
sub
daa
add
xor
mov
mov
lahf
or
das
push
mov
sub
xchg
dec
mov
ret
cmp
repnz
push
jge
loope
push
cli
cmc
dec
sbb
push
loopne
adc
fcompl
adc
loopne
xor
insl
hlt
icebp
xor
adc
leave
insl
jnp
ss
lods
pop
leave
xor
xlat
leave
fwait
or
arpl
dec
roll
cmp
mov
fstp
cwtl
pushf
imul
enter
mov
inc
fwait
ds
int3
imul
stos
inc
outsl
leave
xchg
xchg
int3
sub
ret
out
arpl
mov
dec
xor
pop
clc
jnp
cwtl
repnz
pop
stc
inc
hlt
out
xor
inc
outsb
pop
gs
and
shlb
inc
gs
sarl
xchg
mov
test
outsl
mov
and
loope
mov
mov
cmp
das
and
out
xor
sbb
rorl
sti
das
push
mov
xchg
add
cmpl
inc
popf
lods
loopne
inc
aam
ror
cmpsl
stc
pop
loope
inc
and
lea
es
push
lret
loop
and
dec
cli
xor
movsl
mov
dec
fs
mov
lock
dec
outsb
xchg
cmp
leave
mov
mov
pushf
jb
jp
jp
in
xor
sub
push
popf
sub
cmc
bound
pop
mov
jnp
pop
sub
xchg
sti
cs
push
sbb
dec
in
mov
pop
push
shlb
lret
loopne
bound
insl
mov
or
pop
sub
and
rorb
jg
rcll
or
inc
cmp
xchg
dec
insb
cmp
cli
insb
dec
jns
jo
mov
enter
adc
ficoml
pop
das
sub
loop
aam
int3
jae
movsb
add
ja
or
adc
and
xchg
sbb
ljmp
xor
fiaddl
andb
ret
push
adc
negb
add
add
add
sbb
mov
jo
adc
or
cmpsl
sti
lea
xor
icebp
adc
xchg
sbb
test
mov
out
jl
fimull
dec
jb
pop
mov
push
cmp
mov
lahf
iret
jo
mov
and
xor
inc
imul
sbb
mov
adc
fucomip
mov
push
inc
dec
scas
cmp
cmp
sti
jo
push
movsb
adc
in
pop
popf
xchg
xchg
cmp
movsl
mov
in
and
clc
sub
add
inc
rcll
dec
xchg
mov
add
outsl
outsl
rol
adcl
adc
mov
call
fwait
clc
pop
jae
pop
leave
mov
ljmp
add
pop
subb
jmp
add
jo
imul
in
sti
daa
sub
lods
mov
mov
xor
loop
inc
int
bound
pop
xchg
loope
sbb
je
or
in
subl
inc
cld
gs
xchg
mov
outsb
mov
shll
adc
ret
aad
leave
mov
jno
scas
rorb
lahf
mov
in
ret
push
dec
lret
out
push
mov
mov
jne
mov
lods
pop
mov
mov
adc
mov
fistl
jmp
push
scas
pop
mov
mov
pop
lods
mov
mov
xlat
jo
jge
fimull
orb
push
data16
mov
adc
in
pop
dec
xor
pop
cmp
mov
cmc
sbb
push
imul
jmp
popf
movsb
inc
pop
or
into
push
stos
xchg
out
and
mov
in
loope
mov
cwtl
mov
mov
inc
inc
mov
jb
dec
aaa
je
xor
mov
ret
xchg
pushw
and
inc
sub
aam
dec
and
mov
cli
sahf
mov
icebp
xor
pop
mov
je
out
fcom
andb
ljmp
inc
inc
push
aaa
xor
int3
aam
xor
mov
mov
ret
fwait
cmpl
mov
mov
gs
mov
xchg
roll
lea
stos
lcall
push
test
mov
dec
out
or
mov
and
icebp
maxps
sub
aam
mov
sbb
cwtl
inc
mov
int3
mov
imulb
leave
sub
xor
into
cmp
dec
in
cmpsb
dec
jo
pop
sub
das
inc
and
mov
jecxz
dec
dec
shll
cmpsb
je
adc
pop
inc
sub
cmp
add
popf
ds
mov
fwait
push
scas
xor
sub
idivl
push
lods
pushf
or
lds
in
adc
cmp
sbb
push
xchg
sub
cmp
pop
sub
decb
aas
push
or
sti
push
or
adc
nop
mov
push
pop
cmp
mov
sub
sbb
xchg
mov
sub
xchg
sub
inc
push
es
jecxz
pushf
lea
adc
dec
xchg
mov
jge
fistl
stc
push
popa
cmpl
and
push
outsl
test
jg
aam
mov
sub
out
push
jbe
aaa
test
clc
and
mov
pop
inc
xchg
mov
pop
or
and
sti
or
dec
jae
add
xor
push
divl
xchg
pop
ljmp
inc
test
inc
out
in
push
insl
adc
sar
or
lret
push
idivb
cmp
cmp
xchg
jle
push
push
pop
adc
pop
push
loope
scas
xor
in
adc
les
mov
push
out
pop
testb
xor
int3
rcrl
pop
insb
lods
fldcw
lods
sbb
sbb
les
jbe
adc
mov
test
mov
scas
inc
aas
arpl
xchg
cmp
mov
daa
ds
adc
mov
dec
dec
sbb
xchg
push
dec
lret
mov
aad
in
push
xchg
jp
ss
ret
cmp
addr16
cmp
out
jae
imul
xor
dec
pop
aas
lods
imul
inc
aad
mov
adc
js
jmp
insb
mov
or
mov
cmp
push
dec
pop
sbb
scas
inc
ds
cmp
movsb
jne
inc
rolb
inc
rorl
xor
pop
adc
inc
jl
mov
push
or
xchg
pop
aad
fmull
jb
inc
xor
add
popa
mov
dec
out
div
mov
mov
pop
xor
add
mov
jbe
sbbl
inc
test
std
out
mov
inc
mov
pop
sahf
mov
dec
hlt
adc
cmpsb
and
jns
aaa
fwait
dec
jae
sbb
loop
jg
cmp
fidivrs
leave
movsb
in
cmp
int3
in
mov
cmpsl
clc
fdivrs
cmp
dec
pop
or
pop
test
jg
addr16
shr
add
jecxz
hlt
and
rsqrtps
lock
or
fimuls
mov
js
push
adc
lahf
inc
or
lods
test
mov
in
gs
dec
faddl
mov
adc
dec
lret
add
jnp
pop
test
rcrl
and
dec
pop
mov
adc
inc
das
neg
xchg
bnd
jns
ja
fwait
dec
fld
mov
ds
lret
leave
pop
pop
rep
test
movb
mov
sbb
js
and
jg
mov
add
sub
pop
fmull
dec
fbld
xor
mov
out
stc
dec
js
jb
cltd
aad
mov
test
sub
mov
pop
dec
cli
add
and
sub
push
iret
sbb
gs
outsl
sub
jecxz
pop
and
and
rcrb
inc
lahf
sub
int3
insl
dec
ret
sahf
and
jno
or
loopne
mov
xchg
arpl
xchg
jmp
jne
jmp
sub
jl
cltd
pop
cmp
dec
xchg
negb
cmp
out
fldl
pop
bound
pop
mov
jo
cmp
hlt
mov
scas
jle
inc
popa
sbb
outsb
mov
rorb
xor
xor
xor
repnz
jl
xor
xor
aas
inc
pop
inc
outsl
push
incb
xor
sbb
stos
jp
push
dec
out
mov
xor
fsubp
inc
call
xor
insl
pushf
xor
push
imul
add
add
imul
push
mov
xor
aam
int3
mov
ret
pop
sti
shrl
ficoml
jns
mov
or
xchg
or
addb
enter
cmp
sbbl
test
daa
sbb
xor
shl
inc
test
shr
out
add
loopne
adc
push
stos
mov
negl
cmp
fimull
add
outsl
sarb
daa
cmp
pop
sub
movsl
mov
cmpsb
repnz
push
cmp
out
adcb
lea
rcll
or
xor
xor
inc
xor
mov
js
pop
cmpsl
sub
xchg
mov
aaa
cmp
std
je
cltd
iret
cwtl
test
inc
je
or
stos
cld
inc
jle
sbb
mov
pop
mov
add
jo
movsl
lea
mov
jnp
pop
movsb
add
jl
mov
dec
insb
vpshab
or
sbb
test
sbb
fs
xchg
mov
into
scas
sahf
mov
ss
das
in
mulb
mov
inc
push
adc
test
clc
push
into
cmpsl
sbb
jge
cmc
mov
mov
icebp
add
xchg
mov
and
inc
loop
sub
push
sub
xchg
pop
mov
stc
cmpsl
push
xor
jp
rcrb
dec
leave
mov
dec
adc
push
mov
xchg
idivb
mov
insl
addr16
push
mov
and
xor
inc
cwtl
jne
push
cs
jnp
loopne
lea
jo,pn
jno
pop
push
xchg
or
mov
xchg
add
push
insb
push
xor
stc
lods
or
xor
push
and
mov
sbb
es
mov
pop
nop
cmpsl
lods
push
aad
ficompl
sbb
sub
sbb
mov
jmp
xchg
mov
orb
data16
popa
pop
sub
mov
mov
inc
pop
xlat
mov
or
cld
or
ret
add
mov
fldl
lahf
movsl
pop
popa
enter
jle
inc
aas
or
bound
push
aam
inc
xchg
into
fmull
pop
insb
xlat
notb
push
mov
scas
add
clc
insb
stc
mov
call
xchg
sar
js
xchg
lahf
dec
or
jae
in
aas
aaa
dec
mov
repnz
ret
jb
xchg
cmpsl
pop
xchg
std
pop
mov
fidivrl
pop
xchg
add
jae
cltd
mov
jns
push
cmp
mov
dec
sbb
push
xchg
fisttpl
mov
adc
ror
cmp
lret
adc
cld
loop
inc
adc
xchg
dec
mov
outsl
sub
fmuls
ljmp
shll
cmp
fsubrl
lahf
dec
add
xchg
fcmovne
sub
sbb
rol
pop
je
mov
js
std
mov
jnp
movsl
cmpsl
mov
hlt
push
comiss
dec
xor
xchg
sub
push
lods
je
xor
addr16
jecxz
jb
or
jno
lcall
leave
pop
ja
in
insl
sub
or
xchg
push
mov
push
cmp
sbb
inc
rolb
mov
dec
outsb
cmpsl
xchg
add
leave
mov
push
cwtl
xchg
lcall
and
sbb
lret
scas
add
push
and
loope
mov
inc
push
pop
pop
jb
pop
stos
mov
jo
dec
sbb
jno
jno
mov
pusha
cmc
out
movsl
arpl
jge
leave
pop
sub
add
mov
aaa
insb
ret
scas
imul
sbb
inc
iret
and
ss
leave
inc
stos
fisubrl
std
jg
leave
aad
jp
rcl
in
adc
ficoms
xchg
cmp
ljmp
repnz
dec
cmp
fwait
mov
xchg
in
xor
cmp
mov
push
mov
push
jns
aas
andb
ret
add
jns
lahf
mov
int
xor
mov
in
jl
mov
int
cwtl
jl
out
popa
mov
inc
mov
loopne
xchg
mov
mov
insl
repz
xor
mov
pop
xchg
decb
push
std
or
mov
leave
jl
sbbb
flds
and
xor
fldl
in
cs
outsl
test
stos
mov
dec
mov
pop
daa
je
lock
mov
fisubrs
enter
nop
ja
add
rcrl
add
pop
pop
add
loop
dec
or
fdiv
and
test
scas
imul
mov
adc
outsb
sarl
mov
jg
dec
aam
jp
into
mov
bound
xchg
dec
or
adc
dec
inc
mov
mov
pop
scas
loope
mov
add
es
push
lock
mov
sbb
jl
ss
cmpsl
sbb
jle
movsb
pop
dec
sti
adcl
mov
cmc
mov
push
gs
sarb
pop
pop
pop
inc
jle
stos
and
loope
pop
repz
and
lds
inc
ljmp
scas
daa
push
sti
fcomps
dec
stos
rep
sahf
xchg
sbb
nop
pop
push
int3
mov
sbb
adc
pop
cwtl
dec
scas
push
and
dec
mov
pop
cltd
sbb
mov
jo
inc
rcr
ss
xor
insl
sahf
inc
lcall
sbb
xchg
inc
cmp
ds
jp
mov
xchg
loop
jl
add
inc
ss
aad
movsb
gs
in
idivl
fisubs
and
jbe
pop
sub
dec
pusha
clc
cmpsl
add
xor
push
in
and
icebp
mov
rcrb
adc
adc
movsb
enter
lret
addl
cmp
in
adcl
gs
or
daa
test
jb
ret
xor
push
xor
inc
xor
test
clc
and
jnp
and
mov
jle
jbe
jg
mov
pop
xor
aad
pusha
and
xor
jae
std
mov
push
jns
add
call
mov
push
mov
sahf
jae
adc
xchg
xor
out
cltd
int
xor
adc
sub
fisubs
add
pop
mov
cmpsb
imul
jl
popf
rcr
xor
jp
out
rol
inc
mov
popa
sbb
lock
addl
adc
fimuls
jp
mov
add
sbb
cli
stos
pop
dec
cld
dec
fld
jge
mov
mov
out
pop
sbbl
rcll
sbb
mov
pop
adc
sbb
dec
pop
dec
jbe
addr16
outsl
sbb
adc
adc
cwtl
shlb
stc
mov
in
cmp
pop
and
pop
and
xchg
cmpsb
adc
or
test
lgs
push
mulb
xor
shrb
dec
adc
into
in
fs
scas
and
scas
popf
adc
sbb
popf
test
pop
sbb
sahf
les
stc
inc
pop
pop
outsb
dec
hlt
scas
fildl
loopne
or
mov
and
pop
in
add
pop
cmpsl
mov
divb
scas
and
lds
adc
ds
push
inc
pop
or
in
rclb
adc
mov
xchg
or
adc
or
jmp
or
cld
sbb
jle
cmp
inc
push
loop
sbb
shr
lods
push
movsb
sbb
popa
sti
pop
xchg
imull
call
hlt
add
mov
rcll
mov
and
mov
inc
notb
popa
les
add
lret
popf
sti
or
adc
jb
out
mov
out
movsb
stos
add
imul
addb
or
fiadds
adc
jne
lock
sahf
mov
mov
sbb
sarb
lcall
xor
add
add
aam
sub
nop
repz
lods
call
and
packssdw
or
xor
and
inc
pop
nop
lahf
fnstsw
mov
dec
das
xor
or
insl
mov
jmp
cmc
pop
stos
fneni(8087
push
jge
fldt
pop
xchg
adcl
int
mov
mov
xchg
orb
icebp
imul
push
push
roll
aas
and
popf
push
fs
lret
inc
mov
cmp
dec
imul
ficoms
mov
add
ficoms
fldl
xor
movsb
sbb
popa
sbb
jle,pt
xchg
aad
cmp
leave
sub
scas
aad
push
add
dec
sub
mov
fcoms
pop
rcr
clc
lea
inc
repnz
cmp
mov
mov
mov
inc
insl
sbbb
es
out
gs
adc
sar
subb
es
dec
ret
mov
ds
jnp
cltd
popa
xchg
addr16
cli
inc
ss
xchg
enter
adc
push
sti
mov
dec
ljmp
push
mov
nop
sbb
sbb
leave
jmp
jp
jns
jne
mov
ds
and
scas
cmp
bound
pop
mov
jno
or
jo
adc
and
dec
cmp
dec
cmp
push
icebp
sub
cwtl
out
icebp
xor
faddl
sahf
dec
insl
aaa
dec
adc
fcoml
jp
pusha
mov
rcll
xchg
push
cmc
clc
test
imul
cmc
jae
sub
in
filds
loopne
mov
dec
or
sub
adc
leave
lods
std
js
call
ds
sbb
lret
mov
mov
push
inc
jge
out
mov
cmp
mov
cltd
fildll
xchg
fbstp
sbb
push
inc
inc
in
in
icebp
inc
daa
sahf
cwtl
mov
jno
outsb
xor
call
xor
mov
jg
aas
or
mov
or
inc
mov
lret
aam
push
test
les
ret
sub
cmp
pop
xor
adc
lea
pop
and
sbb
das
mov
arpl
icebp
push
jl
push
push
outsl
das
in
in
and
clc
cmpsb
push
ds
out
mov
mov
mov
inc
loope
xchg
sahf
sbb
dec
cmp
insb
fwait
dec
mov
gs
push
lds
mov
shll
cmpsl
pusha
rol
cmp
repnz
das
inc
rcrl
xchg
jnp
pusha
or
or
pop
pop
mov
pop
mov
pop
je
xchg
addr16
sti
pop
cmp
outsb
int3
cmp
iret
dec
sub
xchg
fidivl
fildl
xchg
es
mov
adc
movsb
hlt
test
cmp
jo
xchg
call
mov
ret
jo
cmc
pop
mov
shr
jle
jmp
shrb
aam
enter
xchg
xchg
push
add
movsb
jns
lcall
das
push
lret
mov
stos
fidivl
or
add
enter
andl
xor
imul
push
or
cmpb
mov
into
and
xlat
fstpt
out
ljmp
repz
add
andb
mov
sahf
ljmp
sub
mov
pop
hlt
test
mov
or
cmpsl
push
sbb
hlt
loope
inc
inc
notl
push
pop
pop
lret
xchg
xchg
dec
jl
int3
fs
insb
rorl
cmp
inc
jmp
stos
xchg
jecxz
leave
adc
pop
sbb
dec
mov
inc
loope
test
inc
shl
rcrb
sbb
add
pusha
mov
nop
test
aad
popl
incb
push
dec
adc
sbb
dec
sub
inc
push
imul
mov
enter
dec
sub
fldl
mov
sub
clc
pop
xchg
push
out
std
dec
stos
lret
jle
cwtl
add
and
dec
jp
inc
adc
dec
pop
loopne
loopne
ljmp
inc
mov
rorl
xchg
inc
inc
sbb
lock
add
and
mov
lock
xchg
jne
insb
jge
ss
das
jge
push
xchg
fsubs
xchg
jg
fs
sbb
cmp
inc
nop
mov
xor
lock
dec
cltd
pop
dec
pusha
out
pop
pusha
mov
or
jl,pn
sbb
push
xor
scas
es
hlt
iret
fidivrl
or
in
inc
lret
pop
inc
lods
jo
xor
inc
std
fsubrl
ret
mov
inc
mov
in
xor
mov
cmpb
imul
push
fcomp
and
pusha
pop
adcl
test
pusha
lods
or
ja
stc
in
jo
push
call
inc
cli
repz
orl
adc
popf
adc
imul
mov
data16
cmc
sub
repz
outsb
pop
sub
or
mov
cmp
and
imul
in
push
orb
mov
ja
or
jmp
nop
sub
xchg
jae
cmpsl
out
mov
rol
icebp
and
mov
xlat
xor
or
xor
shll
dec
xchg
sbb
xor
inc
jmp
movd
fucomip
adc
mov
xchg
les
jae
popa
xor
pop
dec
dec
jmp
rcrl
sti
cmp
jl
icebp
mov
mov
xchg
sbbl
mov
pusha
add
push
mov
mov
sbb
repz
insb
dec
dec
lahf
leave
insl
mov
inc
xchg
arpl
arpl
cmp
sti
dec
cmp
cvttps2pi
in
sub
add
aam
mov
dec
arpl
dec
inc
lret
adc
outsl
pop
fwait
pop
mov
xor
movb
jae
mov
dec
aaa
sti
sbbb
cmc
xor
pop
cmpsl
in
lret
hlt
mov
push
and
popf
cmc
mov
pop
lea
push
pop
dec
insb
rol
jb
fisttpll
lcall
lahf
jge
xchg
nop
ljmp
addr16
jle
iret
and
es
mov
pusha
cld
movsl
jg
and
cmpsl
scas
imul
mov
mov
test
inc
pushf
sti
push
ja
jae
xor
xchg
jne
mov
sbb
mov
mov
int
nop
push
push
sbb
movsb
test
call
lcall
gs
lahf
in
or
mov
xchg
xor
mov
cwtl
loop
fsubs
xchg
sbb
cwtl
es
sahf
outsb
push
adc
fisttpll
dec
aam
fmull
fimuls
xchg
push
cmp
push
cmpsl
test
or
insb
inc
and
js
loope
ja
xor
nop
adcl
ret
add
push
out
inc
push
mov
loop
pop
in
rcl
dec
test
cmpsb
sar
push
xchg
mov
mov
inc
sti
jl
or
mov
filds
sbb
fsubs
daa
repnz
in
mov
jl
mov
jo
or
mov
rcr
flds
loope
add
sbb
cmpsl
call
ret
xchg
int
rep
popa
pop
popf
stos
add
iret
mov
push
push
lcall
jp
xor
bound
mov
adc
test
stos
mov
shrl
cmpsb
dec
outsl
inc
lods
cwtl
pop
stos
cs
xchg
inc
add
xchg
cltd
sub
sti
mov
mov
addr16
jecxz
dec
orl
psubsw
rorb
dec
pop
cwtl
lock
out
xor
mov
stos
or
mov
xchg
mov
inc
rcll
sti
insl
cmp
sbb
jle
or
push
pop
sbb
sub
or
xlat
pop
leave
sub
cmp
mov
data16
mov
sti
and
sub
inc
in
insl
ss
dec
add
xor
or
push
shlb
add
mov
mov
xor
imul
aad
xchg
mov
inc
sbb
imul
adc
in
ss
stos
sti
cmp
pop
fyl2xp1
icebp
add
add
lods
inc
dec
lock
dec
mov
push
out
push
push
cmp
sub
pop
sub
adc
and
jmp
xor
jo
or
mov
inc
add
rcrb
test
pusha
or
test
into
pop
adc
add
stc
arpl
mov
fistl
std
sub
inc
push
repnz
popa
xor
addb
sarb
in
stos
in
int
mov
rorb
jl
stos
insb
push
adc
js
pop
insl
sbb
pop
mov
pushf
jb
insb
sahf
mov
mov
pusha
rorb
lods
loopne
xchg
push
les
adc
dec
imul
sbb
add
cs
and
sbb
and
add
xor
mov
leave
push
mov
enter
clc
push
sub
sahf
sarb
in
out
imul
sub
jbe
int
ficoml
das
cmp
xlat
fs
jmp
call
lret
punpcklbw
andl
sub
je
loopne
cmc
mov
test
fdivr
push
dec
jae
shrb
test
cmp
bound
int3
daa
les
push
aam
neg
leave
out
movb
mov
cmp
xchg
mov
xor
shrl
stos
jg
out
push
aaa
out
addb
sbb
adc
add
xlat
test
mov
outsl
sub
add
aaa
push
jmp
push
inc
mov
jnp
dec
adc
and
pushf
je
pop
jge
inc
cmp
mov
jl
adc
inc
in
int
imul
adc
push
call
and
hlt
testl
stos
sbb
aas
jns
xor
testl
lods
out
inc
mov
outsl
loopne
jnp
push
xlat
mov
loopne
push
jne
repz
insl
xor
and
mov
adc
sti
sub
xchg
add
divb
jp
xor
or
dec
pop
imul
sub
mov
loope
xchg
xchg
dec
add
and
scas
repz
mov
pop
daa
sbb
lods
push
jne
popa
pop
sahf
pop
loopne
js
lahf
insl
sub
xchg
aas
arpl
test
std
sti
add
repz
mov
fistpll
sbb
test
movb
ss
xor
imul
jne
xor
adc
adc
call
fs
or
mov
mov
cmpsb
mov
push
ja
sbb
jbe
xchg
xchg
call
pop
or
leave
ja
push
jne
push
xor
push
push
ljmp
push
mov
dec
push
mov
sahf
aam
loopne
inc
push
call
push
sti
mov
ret
inc
push
push
mov
dec
pop
push
lods
push
mov
stos
push
shlb
fcmove
rorl
stos
aaa
or
push
sbb
pusha
std
insb
ror
clc
adc
and
cmpsl
frstor
insb
sub
cmpsl
cltd
andl
xchg
insl
xor
ljmp
lds
popa
pop
jle
jecxz
cmp
fmull
inc
fidivs
std
je
daa
fnstenv
mov
push
test
mov
aad
insl
jecxz
cmp
inc
jne
push
int
ds
in
outsb
je
shlb
nop
jne
mov
mov
adc
jp
mov
xchg
fwait
rorl
leave
iret
fistpll
leave
mov
mov
add
xchg
rclb
movsb
dec
add
int3
packuswb
adcl
mov
pop
test
jge
dec
cwtl
pop
xchg
mov
movsl
lret
mov
rorl
repz
mov
push
stc
inc
pop
cmpsl
dec
shl
jge
repz
xchg
pop
inc
lds
mov
sbb
gs
cmpsl
mov
mov
xlat
push
ja
or
inc
pop
sbb
std
popf
push
pop
out
inc
outsl
mov
pop
mov
mov
imul
lds
movlps
stos
add
arpl
xor
mov
sub
aam
jle
dec
leave
cmp
pop
bound
repnz
pop
lahf
sub
mov
shlb
fiadds
divb
cmp
sub
loopne
hlt
out
int3
stos
roll
mov
jns
and
movsb
dec
lret
pop
mull
adc
inc
jecxz
cwtl
enter
add
mov
push
outsb
push
cmp
nop
fldt
gs
cmp
scas
call
mov
arpl
in
insb
cmp
and
pop
and
mov
mov
inc
sub
push
mov
adc
int
icebp
int
inc
repz
push
pop
mov
std
push
pop
cmpsl
xor
ds
xchg
mov
add
lds
stos
fsubrs
and
test
add
data16
int
adc
popf
imul
jg
ret
adc
stos
call
fidivs
mov
int3
aam
dec
xchg
nop
out
jl
push
ficomps
push
cmpsl
mov
inc
add
fyl2xp1
pop
xor
insb
push
jmp
mov
imul
cmp
mov
mov
jno
dec
lahf
pop
shlb
jno
lret
jbe
fucom
je
jle,pn
dec
pop
jmp
in
sbb
pop
test
dec
test
loop
mov
call
cmp
mov
fnsave
mov
jbe
inc
push
cmc
dec
sbbl
fdivrp
arpl
sbb
ds
cwtl
adc
dec
lret
jnp
mov
dec
mov
repz
adc
out
mov
inc
mov
pop
jl
in
cmp
push
test
loop
mov
jl
imul
ret
inc
dec
int
pop
sub
data16
push
xchg
mov
jo
mov
add
jbe
enter
roll
out
leave
jno
mov
in
pop
scas
shlb
push
jae
ficoml
sub
movzwl
daa
lahf
mov
rorb
rol
aas
insb
cmpsl
test
int
jmp
aaa
hlt
xchg
inc
dec
xchg
jmp
fiaddl
jne
cmp
pop
and
adc
popa
inc
jl
xchg
jo
aad
call
jne
fidivrl
jge
inc
lea
imul
lods
cmp
int
lds
fisttpll
loop
sub
fstpt
or
adc
sub
add
push
adc
or
xchg
loope
pop
push
cs
push
mov
cmp
sarb
push
inc
cmp
into
or
push
cmc
inc
mov
ret
sbbb
pop
fimull
fwait
and
lret
push
imul
outsl
gs
pushf
int3
inc
fldt
dec
dec
xchg
inc
push
jno
xchg
dec
xchg
insb
fisubrs
pop
sysret
dec
xchg
stc
adc
outsb
arpl
shll
adc
adc
pop
ds
sub
ficoms
mov
int3
push
and
add
pop
mov
fimull
inc
out
out
gs
mul
imul
repz
es
leave
pop
fs
scas
test
fs
xchg
adc
sub
dec
ss
mov
sbb
dec
out
pop
std
jno
rcll
fmuls
iret
xor
clc
adc
lods
dec
imul
pop
dec
dec
lret
mov
adc
aaa
mov
jo
cmpsl
mov
pop
loopne
ret
inc
cmp
clc
sub
call
aas
data16
inc
inc
pop
pop
in
sub
ret
dec
or
lahf
test
test
pusha
fwait
inc
repnz
add
pusha
sbb
and
jl
sub
cmp
ljmp
je
mov
push
mov
pop
fistl
std
jbe
adc
xchg
mov
sti
fsubrp
div
mov
jecxz
cmpsb
das
adc
add
fcoms
ror
stc
inc
and
push
std
push
outsb
jmp
jbe
movsb
icebp
pushf
js
rcrb
mov
fsubs
sbb
mov
aaa
mov
xor
and
repz
loop
xchg
jp
int
out
cltd
cmp
push
rorl
mov
xor
fwait
mov
and
sbb
sbb
mov
out
adc
lret
in
push
adcb
push
loop
inc
test
jecxz
loopnew
movsb
mov
ret
xor
xor
mov
adc
mov
xor
xlat
push
negb
lock
push
pop
adc
sarl
cmp
pusha
mov
cmp
mov
mov
dec
inc
sub
imul
jle
cmp
ljmp
imulb
imul
push
pushf
mov
xchg
sub
jb
pop
and
pop
xlat
mov
icebp
and
cmp
repz
push
sbb
das
into
pushw
xchg
sbb
add
movsb
xor
imulb
js
fists
outsl
jne
sub
add
fldcw
inc
subb
add
inc
pushf
pop
dec
sbb
dec
adc
out
pop
js
lret
bound
ja
ret
mov
push
jecxz
pop
aaa
inc
xchg
mov
and
les
ss
outsb
into
and
dec
fildll
les
mov
dec
add
mov
cmpsl
inc
call
jnp
lock
pop
mov
test
sub
mov
push
jno
adcb
push
mov
out
inc
fwait
pop
push
mov
scas
cmp
sub
loopne
xor
loopne
test
jns
inc
call
adc
pop
sub
sti
lahf
pop
ds
push
xchg
fbstp
dec
stos
aad
push
xor
jl
or
add
or
out
cltd
testl
je
int3
ss
daa
popa
faddp
in
sarb
insl
lods
loope
or
sbb
loopne
jo
lret
inc
fisttpl
repnz
dec
das
cli
mov
or
sub
aaa
and
mov
push
test
cmp
inc
cld
xorb
sbb
pop
pop
test
add
sub
cmp
mov
add
dec
cmpsb
jle
push
sbb
mov
cmp
push
int
sub
inc
mov
popa
inc
addr16
adc
addr16
push
mov
add
add
sbb
fildl
rorb
or
test
lock
pop
mov
xchg
cld
xor
aas
push
test
pop
xchg
sbb
and
iret
and
mov
cmp
inc
cmp
sti
jb
subb
push
popf
mov
jp
add
das
movsl
cmp
div
adc
and
test
test
cltd
sbb
fwait
cmp
daa
mov
xchg
std
jne
mov
or
adc
cmpsb
rclb
push
and
sbb
imul
xchg
xlat
add
nop
aaa
repz
enter
outsb
adc
lods
fcomi
xor
sub
pop
pusha
lea
cltd
bound
cmpsl
cld
icebp
in
popf
push
xor
lret
sti
cmc
sub
pop
push
push
scas
fs
xlat
mov
inc
outsb
sub
fildll
add
aad
scas
popf
xchg
imul
cmpsl
push
cmp
xchg
adc
ja
sbb
jge
mov
gs
js
dec
mov
add
jb
imul
sbb
scas
das
or
pusha
hlt
arpl
fsubrs
idivl
jne
cs
cmp
es
call
test
inc
mov
adc
ja
inc
add
mov
jecxz
out
mov
insb
shrl
or
sahf
pop
dec
dec
cmp
in
adc
pop
push
mov
fs
xchg
dec
mov
repz
add
inc
dec
xchg
hlt
push
jecxz
push
jne
hlt
pop
gs
inc
adc
out
pop
dec
lock
mov
xor
pop
dec
stc
std
adc
out
and
sbb
mov
setg
insb
inc
push
clc
hlt
add
mov
and
test
add
cwtl
ljmp
jp
pusha
bound
xor
mov
repz
inc
sub
mov
cmpsl
jns
test
fmull
leave
inc
outsl
xor
movq
cli
pop
xchg
push
mov
lock
lret
push
dec
lret
ret
lea
push
cmpsb
popa
xor
dec
or
lcall
push
push
add
lret
sbb
and
in
clc
push
mov
mov
pop
aas
pop
mov
adc
dec
inc
leave
out
call
iret
gs
or
jno
stos
mov
push
add
iret
inc
xchg
std
mov
hlt
cwtl
test
fildll
bound
fs
push
imul
dec
cmp
pop
jmp
jle
sti
jle
xchg
xor
cmc
test
xchg
in
push
add
stos
push
gs
mov
gs
mov
mov
scas
cmp
adc
in
stos
imul
ljmp
jg
jp
loopne
fwait
sub
xchg
orl
push
cmp
pop
je,pn
sbb
sbb
repz
adc
movsb
out
out
inc
sbb
cmp
hlt
sub
sti
cwtl
push
jp
sub
loope
into
push
pop
mov
into
or
iret
sbb
dec
push
mov
cmp
mov
rorb
push
or
rorb
js
pop
dec
pop
jnp
or
or
ljmp
das
inc
xorl
or
and
jp
jne
sahf
test
aaa
mov
add
push
adc
push
sbb
adc
call
repz
xor
xor
sub
test
mov
pop
popf
cmp
int
mov
jae
mov
outsb
ss
lock
push
pop
pop
sar
jmp
movsb
sahf
pusha
int
test
mov
scas
and
mov
push
or
imul
or
dec
sub
sbb
testb
mov
push
ret
pop
adc
dec
into
jge
cmp
inc
xor
mov
xlat
decb
adc
sbb
ret
popf
mov
lods
pushf
xor
pop
and
mov
sub
out
mov
push
mov
lods
push
addr16
push
and
sub
add
sahf
xchg
pop
mov
das
cwtl
mov
push
sub
jnp
ss
iret
sub
and
push
int
lock
xchg
out
cli
add
cmpsb
mov
imul
sti
stos
mov
mov
ret
das
pop
cmpsb
daa
stos
in
fists
arpl
adc
push
push
adcl
cmpsb
xor
es
aaa
mov
xchg
dec
mov
push
adc
into
stos
loop
mov
mov
dec
add
popf
xchg
loope
les
push
sahf
and
pop
jb
imul
xchg
adc
insl
jp
lods
in
loop
in
xlat
das
and
lock
clc
or
mov
cwtl
mov
and
cltd
inc
out
test
mov
rcrl
mov
pop
cmp
nop
jbe
ljmp
imul
or
jecxz
sbb
insb
and
sub
pusha
rolb
jg
add
js
js
fmull
ret
or
mov
xchg
lret
mov
insb
pop
dec
add
fwait
ret
pushf
fcmovne
dec
int
jl
cmp
xor
test
and
shrl
cwtl
mov
mov
mov
or
int3
mov
adc
sahf
fcomp
mulb
shl
xor
popf
iret
mull
dec
push
add
ret
in
fstps
sbb
lret
adc
xor
enter
xlat
mov
cmp
outsb
fwait
xor
mov
pop
stos
mov
sub
stos
rcll
imul
mov
cmc
and
mov
loope
mov
xor
xor
cmp
cmp
popa
mov
mov
dec
cmc
mov
lret
push
out
imul
inc
test
push
gs
sbb
sbb
push
imul
in
xchg
test
push
scas
je
test
fadds
adc
scas
lds
or
ret
inc
jb
jae
cld
ds
fwait
leave
movsl
cmpsl
notb
pop
mov
ljmp
enter
test
mov
lret
cli
cltd
stos
sub
icebp
push
push
das
fs
std
lea
mov
and
mov
xlat
mov
cli
cwtl
add
enter
xor
scas
adc
jp
push
in
mov
add
sub
lea
sbb
push
aad
in
pop
xor
movsb
dec
push
je
movl
push
inc
test
jecxz
xor
popf
pop
ja
mov
ds
iret
mov
or
loopne
imul
jmp
int3
xor
adc
testb
movsl
inc
jns
cmp
xchg
sbb
or
push
cmpsb
sub
cmpsb
insl
test
ds
mov
je
jecxz
xlat
mov
fldenv
push
mov
popa
lock
or
ficompl
fmul
aas
xor
push
data16
movb
dec
xchg
movsb
mov
sub
lds
cmpsb
mov
pop
and
jno
imul
repz
stos
mov
mov
lret
je
ret
adc
cmp
and
xchg
js
jae
addr16
in
int
mov
xor
mov
daa
cmp
push
adc
rcl
or
sbb
lcall
clc
sahf
shll
lods
cmp
lea
pushf
mov
cmp
ds
dec
cmp
inc
mov
rclb
push
dec
mov
imul
mov
int
adc
aam
xchg
cmc
movsl
mov
xchg
cmp
adc
in
out
nop
aas
jno
sbb
stos
mov
pop
ljmp
ret
shrb
clc
adc
jecxz
loope
loopne
test
mov
mov
arpl
inc
imul
xchg
shr
aas
mov
jmp
shll
sub
in
gs
icebp
dec
faddp
test
shlb
mov
decb
mov
fnstcw
rclb
xchg
sub
ljmp
jge
cmp
int3
fmul
out
clc
and
and
or
inc
xlat
mov
jnp
call
sub
cwtl
cmp
xchg
jnp
push
xlat
gs
adc
ljmp
sbb
test
xchg
jmp
pop
je
rclb
fidivl
cwtl
int
popf
sub
jmp
popf
mov
test
mov
in
pop
xlat
dec
ljmp
mov
nop
dec
cld
add
aas
gs
or
sbb
xorb
popa
cmp
call
popf
test
jae
dec
jbe
lret
js
mov
push
pushf
aaa
sbb
xor
pop
jl
xchg
ja
and
jmp
and
rol
loope
sub
data16
ficompl
add
hlt
hlt
std
mov
xor
mov
cld
fcoms
fcomip
add
int3
xchg
adc
roll
repz
call
and
pop
add
hlt
cmp
mov
inc
mov
mov
clc
repz
ret
xchg
arpl
xchg
cmp
lock
jl
in
imul
int
das
fcom
xchg
mov
addr16
pop
mov
push
adc
inc
scas
call
hlt
mov
into
jge
cs
fisubl
jno
pop
xor
frstor
fwait
sbb
push
dec
outsl
dec
subl
pop
push
xchg
data16
jb
push
pusha
pushf
aam
shl
fildll
fldenv
dec
jl
ss
lea
xlat
inc
das
pop
popf
shlb
pop
mov
lods
push
push
in
sbb
xchg
ds
test
enter
mov
xchg
sub
cmc
push
icebp
je
ja
mov
jns
jo
sbb
xchg
sub
and
sbb
and
inc
fs
push
xlat
into
pop
sub
sub
push
daa
daa
pop
pop
out
mov
xchg
imul
fdivr
mov
add
mov
mov
ret
data16
loopne
scas
ja
jo
fstl
js
or
push
push
mov
push
add
jmp
addr16
pop
xor
and
and
cwtl
movsl
sbb
cmp
ja
rep
pushf
test
mov
inc
shr
push
push
nop
lret
xor
jge
outsl
dec
ds
test
adc
xlat
sbb
in
ficompl
adc
cwtl
dec
test
mov
push
repz
hlt
push
push
lahf
push
jo
mov
mov
mov
cmp
stc
andb
sbb
xchg
jl
test
and
adc
icebp
fisttps
aaa
inc
push
sahf
xor
scas
pop
add
cmp
lret
sbb
inc
mov
cld
shll
add
and
sbb
mov
mov
data16
inc
iret
pop
stos
mov
stos
cltd
mov
setg
arpl
aas
sbb
mov
xor
xor
std
mov
lods
mov
push
adc
xchg
cmp
add
aad
mov
imul
push
call
movsb
dec
fdivl
sahf
std
mov
xorl
pop
enter
cmp
stos
cli
test
add
call
ss
in
lcall
sbb
adc
push
xor
leave
daa
xchg
popf
mov
movsb
jns
inc
mov
adc
add
adc
xor
enter
add
pop
and
mov
xor
xchg
mov
dec
pop
xor
imul
xchg
xor
jns
dec
fsts
nop
sbb
push
cmp
movsl
cld
cmp
in
mov
adc
xchg
jge
and
ds
stos
imul
cmp
sub
cltd
scas
sbb
das
mov
mov
popf
js
jg
mov
xchg
repz
fnstenv
out
mov
xor
les
cmpsb
flds
or
lds
stos
sub
sbb
movsl
ret
jl
jae
subl
cwtl
add
push
filds
add
xchg
pop
xchg
adc
outsl
inc
cmp
mov
xor
cwtl
jnp
fsubp
pop
shll
sbb
dec
out
lcall
clc
movsb
push
push
jne
test
jbe
pop
das
adc
adcl
jbe
mov
and
popf
mov
sbb
icebp
push
xor
mov
dec
stos
push
mov
nop
adc
repnz
data16
sub
icebp
int
es
xchg
sbb
sub
pop
ficomps
mov
push
cmp
mov
mov
out
mov
dec
jae
cmp
dec
push
pop
negb
por
popf
pop
in
adc
jp
push
sete
mov
sbb
push
push
sti
cli
jb
mov
xchg
mov
mov
imul
xor
jae
mov
inc
sbb
insb
in
arpl
push
int
inc
imul
cli
orl
outsb
cwtl
sub
push
subl
dec
dec
inc
mov
enter
sbb
sbb
es
add
push
stos
lea
arpl
push
test
sbb
mov
popf
mulb
cli
rcrb
popa
mov
ds
cmp
rcrb
fistpl
in
sub
mov
cmpsb
rol
leave
xor
loop
mov
pop
ret
adc
sbb
sub
mov
or
movsl
mov
cwtl
insl
mov
out
sbb
mov
call
dec
pop
ljmp
insl
nop
add
sub
mov
movsb
push
cld
push
mov
movsb
into
ljmp
mov
in
xchg
jb
adc
push
xchg
pop
pushf
leave
jno
repnz
push
cltd
pop
mov
push
cmpsl
xor
sub
mov
cmpsb
fwait
or
cld
dec
adcl
in
pop
sarl
enter
std
pop
lods
jne
jmp
sbb
int
les
push
andb
shll
loope
jo
test
pusha
sbb
mov
subb
pop
mov
jecxz
pop
cli
xchg
enter
mov
cmp
movsb
sbb
js
adc
sub
clc
ret
sub
cli
inc
mov
mov
lret
shrl
les
lods
call
jbe
jo
pop
xchg
enter
xchg
je
inc
pop
ljmp
mov
or
leave
mov
pusha
ja
xchg
rcl
iret
jo
fsubl
pop
test
add
insb
sub
popl
ss
xor
xchg
cld
push
jecxz
int
repz
xchg
jge
fnstenv
or
mov
ja
and
jbe
movb
repnz
leave
dec
pusha
dec
mov
pop
dec
cli
repz
cltd
enter
add
or
jge
sbb
mov
cld
stos
fnsave
jecxz
imul
int
sbbl
xchg
xchg
adc
outsb
jle
daa
mov
add
outsb
mov
insb
aas
jae
inc
sbb
or
or
jecxz
add
test
cmc
je
sub
inc
lret
jecxz
popf
xchg
xor
sub
iret
addr16
add
dec
sub
cmp
ds
mov
mov
icebp
imull
ds
lea
jo
std
test
xchg
lock
icebp
aam
push
data16
out
push
scas
inc
in
int
mov
arpl
pop
inc
lret
popa
mov
pusha
cmpl
and
mov
and
jo
push
xor
cmp
nop
mov
ficomps
cld
and
push
add
setle
movaps
jmp
clc
loop
sub
push
and
sub
sub
or
sti
scas
inc
add
ss
lds
mov
popa
std
faddl
icebp
es
xlat
ja
xchg
fldl
mov
outsl
and
scas
mov
xor
pusha
push
cwtl
xchg
jo
mov
lcall
ret
sbb
std
inc
mul
fsubrs
sub
outsl
mov
rcrb
fwait
sar
test
test
cmpsl
inc
jp
aas
jne
int3
clc
insb
mov
std
movsb
lahf
test
mov
lods
lret
in
mov
and
insl
jns
dec
ljmp
xchg
shlb
ja
stc
add
adc
xchg
and
dec
es
push
aaa
fmuls
add
mov
mov
and
mov
out
adc
mov
stc
fdivl
jae
aad
loope
cmp
pop
sub
sbbb
call
cmp
imul
pusha
or
mov
ret
jo
cmpsb
mov
cmp
lods
out
or
adc
stos
dec
mov
add
das
xchg
test
push
push
cs
scas
jno
inc
nop
push
movsb
jns
mov
push
xchg
je
outsl
jne
sub
cmp
scas
fdivl
out
imulb
sub
rclb
and
jns
adc
sbb
jp
adc
push
add
add
or
xor
in
mov
pop
movsl
test
or
pop
mov
push
jle
jne
loop
and
popf
pop
mov
ljmp
mov
mov
inc
lods
dec
shlb
cmp
pop
dec
fidivs
addb
test
jbe
push
inc
dec
mov
jmp
repnz
int
mov
rol
xlat
dec
nop
pusha
sbb
add
inc
lods
xor
popa
inc
xlat
ror
mov
je
or
inc
lcall
adc
cmp
xchg
mov
xlat
mov
xor
movsb
and
sbb
jo
dec
and
dec
stos
mov
sub
lcall
insb
test
adc
add
push
mov
dec
xor
and
ja
cmp
and
jp
bound
mov
fistl
adc
mov
idivl
icebp
mov
repnz
inc
hlt
je
iret
mov
insb
adc
popa
shl
dec
pop
jmp
add
movsb
insl
jg
les
ja
sahf
sarb
fistpl
dec
ss
mov
out
mov
mov
fadds
cli
mov
inc
in
iret
or
lods
mov
and
lret
andl
imul
adc
mov
sbb
adc
mov
out
scas
mov
andb
push
sbb
ds
mov
test
push
mov
adc
dec
jle
pop
add
js
pop
cmp
arpl
mov
imull
js
rcrl
out
mov
and
pop
sub
mov
in
mov
negb
or
out
xchg
int3
sbb
pop
lds
xchg
add
mov
fsubrl
inc
pop
jg
stos
imul
sbb
dec
iret
repnz
insb
ret
imul
push
push
js
dec
scas
rcll
or
popa
dec
jmp
xchg
mov
arpl
lret
shlb
rcl
pop
inc
in
ret
inc
shll
std
in
jno
in
sbb
loopne
scas
add
pop
mov
sub
inc
stos
fistps
cmc
test
inc
sbb
fs
xchg
dec
inc
inc
leave
and
mov
jg
jge
jnp
in
dec
mov
adc
stos
lds
add
jecxz
and
xchg
mov
imul
cmp
mov
mov
push
push
dec
pop
adc
mov
lret
sub
push
dec
pop
adc
int3
aad
sub
test
push
cmp
pop
arpl
scas
add
icebp
mov
repnz
sub
inc
add
jp
xchg
add
push
mov
cmp
adc
xchg
aam
inc
dec
jbe
jmp
aas
fdivs
int3
inc
lcall
fisttps
mov
cld
stc
leave
jno
fstpl
mov
jo
dec
mov
dec
insb
or
aam
xor
cs
mov
icebp
fldcw
push
scas
andl
push
push
mov
loop
imul
or
mov
cmp
push
test
xchg
xor
addb
call
dec
sbb
sahf
sub
jnp
pushf
sbb
xor
scas
mov
lret
xchg
push
push
mov
sti
sarl
xchg
popf
adc
into
or
pop
mov
push
shl
aad
sbb
lds
icebp
pop
pop
mov
xorb
rclb
fldl
mov
mov
push
mov
repz
sbb
outsl
xchg
mov
jg
cmc
cmpsl
in
jp
call
jns
addr16
popa
cmpsl
lods
lods
loope
adc
fbstp
rol
jecxz
lods
xchg
bound
mov
lods
das
dec
xchg
loope
ret
sti
dec
stos
les
push
enter
sbb
lock
pop
cmc
adc
rorl
aaa
je
cmp
sbb
mov
xchg
leave
int
movsb
push
lock
aaa
inc
lcall
clc
add
xchg
jbe
inc
jg
scas
sahf
nop
mov
rcr
dec
adc
ret
mov
xor
cmovne
rcrl
mov
mov
in
mov
adc
loop
pop
repz
dec
lods
and
push
mov
outsb
clc
and
adc
int3
sub
add
inc
movsl
mov
bound
and
sahf
fisttpll
cmc
in
bound
pusha
sti
pop
adc
xchg
dec
mov
add
sub
out
aaa
lcall
mov
sbb
adc
mov
dec
fs
sahf
pop
xchg
icebp
movl
les
xchg
repnz
or
fldl
inc
and
mov
fcoms
subl
mov
rcl
fildll
cmp
hlt
test
xchg
mov
fisttpll
sub
or
in
cmp
sub
fisubrs
jb
movsb
jns
insb
pop
add
inc
mov
ret
or
popa
arpl
mov
int3
push
add
mov
mov
lds
fs
cmp
outsb
sahf
jb
xor
jmp
mov
cwtl
xchg
xor
es
dec
pop
pop
sbb
ret
cli
or
movsb
fisttpll
and
or
subb
icebp
ret
cld
stc
push
cld
test
ss
inc
sbb
mov
bound
pop
mov
mov
dec
or
dec
icebp
lock
ret
aas
mov
adc
inc
sbb
and
movsl
adc
divl
sbb
cmp
nop
add
popa
pop
cmpl
nop
pop
shlb
push
add
mov
cmpsl
loop
in
test
mov
fstl
adc
pop
sbb
lods
loop
out
ret
popa
pushf
dec
mov
jno
xor
push
std
leave
pop
bound
hlt
hlt
enter
inc
adc
sub
cwtl
dec
dec
dec
pop
stos
jno
lret
pop
or
xchg
sbb
fucomi
popf
fucomp
add
ds
in
push
sub
icebp
dec
inc
lock
frndint
scas
loopne
and
sbb
dec
dec
loope
hlt
mov
adc
inc
add
pop
jns
and
or
inc
sbb
out
pop
cmc
cmp
mov
and
add
pop
cmp
jns
inc
sbb
inc
sbbb
enter
mov
push
pop
fs
pop
lods
mov
and
fidivrl
int3
gs
pusha
rcl
nop
out
push
jno
pop
leave
inc
loope
scas
lock
sti
xchg
xor
cmp
iret
sbb
add
sbb
out
mov
div
call
pop
xor
aas
test
repz
or
ds
stc
rorl
mov
jle
enter
jp
inc
mov
into
into
sub
outsb
and
push
sub
mulb
sub
shll
pop
xchg
mov
ret
loope
mov
xchg
cmp
sbb
in
loopne
mov
mov
rcll
cmp
aad
outsl
mov
jg
call
out
bound
rol
out
push
add
add
ret
jg
jle
cwtl
mov
pop
ror
cmc
mov
jp
mov
lods
repnz
ret
push
dec
in
loope
cmp
sbb
cmp
pop
jmp
sbb
push
out
sub
inc
cwtl
dec
mov
sbb
pop
scas
in
dec
rolb
lods
add
push
cmp
cmp
fcoms
or
adc
imul
repz
sbb
test
inc
dec
ja
enter
inc
es
mov
or
xchg
pop
fcmovnu
scas
lods
filds
xchg
cwtl
pop
movsb
jge
xchg
jle
subl
push
xor
pusha
cwtl
mov
sbb
adc
les
mov
aad
sarl
lock
ret
dec
mov
xchg
lods
mov
ret
outsl
jo
sbb
mov
pop
xchg
in
imul
dec
adc
mov
aas
pop
movsb
mov
jne
pop
mov
out
push
xchg
pop
fistpl
jp
adc
inc
add
jns
insl
mov
lcall
movsl
dec
bound
repz
repnz
loope
cmpb
xchg
lret
sti
sbb
push
cmp
jbe
cli
movl
loopne
test
cmp
jae
push
dec
and
jg
ljmp
mov
stos
xor
cmp
sti
dec
popf
pop
idivl
cmp
loope
push
and
je
jo
insb
arpl
sub
movsb
pop
add
and
xor
cs
int3
fisttpl
push
es
ljmp
scas
jns
xchg
dec
cs
ret
insb
andb
addr16
jne
bound
les
inc
int
pop
or
dec
lods
inc
jae
fwait
pop
cmp
push
scas
inc
push
mov
clc
xor
jmp
push
into
ror
cmp
es
sbb
ficomps
les
or
int
repz
dec
pop
js
lret
test
stos
add
sbb
cmpsl
inc
lock
push
cmpsb
cmp
adc
lret
out
sub
xor
xor
jbe
adcb
test
stos
iret
pushf
xchg
dec
push
sub
movsb
jno
in
aas
sub
xchg
pushf
pop
sub
sub
cltd
xor
int
scas
leave
insb
sbb
mov
cwtl
sub
cmp
sub
rorl
and
pop
adc
gs
and
push
sub
sbb
dec
mov
ret
mov
out
jbe
xchg
mov
mov
cmp
mov
adc
jp
cli
xor
loope
mov
cmp
mov
jns
lods
jl
pop
add
shll
ret
ss
jmp
mov
or
xchg
or
outsl
addr16
out
dec
icebp
jmp
stc
movsl
lods
dec
jle
call
push
jnp
cmp
hlt
dec
or
jecxz
and
inc
pcmpgtw
xchg
incl
mov
push
jg
insl
jns
gs
xchg
xchg
frstor
repnz
mov
sbb
and
popa
lds
sub
jae
shrb
sub
dec
and
push
mov
push
dec
cmpb
mov
std
das
add
add
jge
mov
inc
inc
adc
pop
jb
ss
setne
inc
lods
mov
daa
xorb
andb
xorl
mov
xchg
or
xchg
filds
fcmovnbe
sarb
pop
xor
fcoms
cmpsl
pop
rcrl
pop
loop
sbb
inc
push
rorl
mov
subl
add
jno
xchg
sti
mov
xchg
les
bound
jg
loop
daa
call
fs
loopne
mov
push
ds
dec
ret
in
and
cmp
addl
jle
mov
fwait
jnp
push
ret
push
adc
popf
ja
sub
xor
rcrl
shr
js
repz
outsl
cmpsl
add
mov
movsl
sub
or
xlat
leave
jno
or
pop
mov
push
xchg
mov
add
hlt
int
sarl
and
jmp
mov
iret
sub
xchg
divl
push
hlt
cwtl
lea
or
ljmp
xor
les
push
shrl
jle
leave
cmp
cmp
pushf
xor
in
xor
dec
notl
cmpsl
push
mov
sbb
xchg
inc
shl
xchg
sbb
ficompl
test
lock
lods
pop
scas
ret
fstl
mov
push
xchg
push
rcrl
mov
jae
into
xchg
pop
jle
pop
add
ds
fistps
rcrl
fiaddl
pop
or
lods
stos
mov
leave
sbb
nop
cmp
lret
sarl
xor
aad
add
jmp
add
lods
and
xlat
fwait
xor
pushf
das
movl
sub
mov
subb
shll
lds
cmp
lcall
mov
lret
pop
pop
out
cmc
fidivrl
in
in
or
test
dec
mov
dec
mov
or
movsb
cwtl
inc
std
icebp
and
scas
ja
scas
in
lcall
lret
out
dec
and
outsl
mov
push
js
fisttpl
out
mov
sbb
push
dec
and
cs
jmp
add
daa
shll
leave
xchg
dec
hlt
and
shlb
arpl
cld
out
or
test
gs
mov
outsl
cs
lahf
jnp
cwtl
sub
pop
fwait
mov
movsb
and
fsub
je
out
mov
out
push
movb
roll
movsl
mov
inc
mov
cmp
adc
push
scas
cld
rclb
sub
mov
inc
inc
xor
out
push
cltd
sub
jp,pt
push
add
jne
bound
pop
daa
mov
popf
adc
stc
adc
fimuls
cmp
daa
sbb
adc
andb
jmp
popl
incb
jmp
add
arpl
ds
or
les
or
or
stos
ss
jb
pusha
sar
pop
sub
loop
fnstsw
ljmp
not
pop
lcall
sub
xor
lahf
loope
mov
sub
rorl
mov
js
jle
xor
sbb
or
adc
sub
xchg
mov
stos
mov
ret
ljmp
lahf
aaa
sub
and
jecxz
xchg
xchg
movsl
out
xchg
sbb
je
in
std
in
shl
jno
pop
push
jmp
gs
testb
pop
loope
cmpsb
wbinvd
enter
mov
xchg
sub
mov
popf
pop
mov
add
cltd
and
roll
fs
xchg
mov
aad
lock
mov
rclb
pop
lea
inc
fmuls
or
jmp
jmp
lds
jge
aam
rolb
xchg
jle
mov
pusha
mov
scas
add
mov
sbb
lahf
call
imul
dec
frstor
cmp
lock
jb
neg
or
mov
movlps
mov
cwtl
iret
or
adc
loope
mov
and
jo
fnsave
push
stos
out
or
dec
aad
std
sbb
xchg
sbb
imul
cs
push
out
inc
pop
fstps
push
mov
es
lret
scas
inc
out
mov
mov
ret
add
push
fucomp
sahf
xor
lds
jecxz
cmpsl
iret
xor
ss
addl
dec
daa
fstl
push
daa
lret
subl
mov
pop
outsl
add
rcrl
aas
dec
aas
cmpsl
dec
dec
popa
and
incb
test
int3
mov
outsb
dec
test
push
mov
push
xchg
cmpl
pop
or
movsb
test
mov
or
mov
jnp
movsl
xchg
jb
lahf
pop
pop
shr
add
mov
mov
in
push
stos
pop
inc
mov
cltd
scas
mov
hlt
sahf
decl
das
int3
data16
xor
pop
jmp
mov
out
cmp
inc
scas
aas
push
aam
mov
mov
cmp
mov
xlat
jo
jae
sti
push
xchg
pop
idivb
js
xor
pushf
test
cmc
adc
ficoml
dec
push
aad
out
cwtl
pop
and
sub
js
or
sub
shll
call
sbb
fmul
aas
leave
aas
inc
jne
adc
dec
call
pop
cmp
repz
int3
lcall
lock
jo
lret
sbb
out
sub
fistpll
mov
jg
inc
sub
aam
mov
xchg
add
mov
mov
fidivl
loope
adc
mov
mov
or
and
sahf
inc
sbb
pop
data16
sub
fstpt
add
in
mov
add
mov
mov
mov
mov
add
popf
and
arpl
xor
daa
jle
sbb
and
repnz
mov
nop
fstl
test
arpl
cmpl
mov
mov
ret
add
and
adc
out
mov
push
lock
bound
out
into
icebp
add
pusha
mov
inc
stos
lahf
shl
mov
test
rcl
cwtl
xor
ret
add
push
idiv
jecxz
das
inc
ret
mov
ret
adc
or
pop
mov
or
dec
dec
mov
and
sbb
add
adc
jb
xchg
mov
mov
mov
fcmovnb
jge
cmp
mov
adc
adc
mov
add
add
sub
sub
jo
ja
push
notl
out
mov
fmul
mov
jmp
sub
je
pop
rcll
xchg
pop
bound
outsb
jle
add
dec
out
jnp
dec
xor
jbe
jp
inc
out
cld
jecxz
in
shlb
out
pop
nop
or
xor
ret
xchg
test
pop
add
xchg
mov
imul
inc
xchg
imul
les
cltd
dec
jns
ss
or
or
js
xchg
inc
jno
pop
in
insb
mov
or
xchg
push
adc
js
imul
cwtl
xor
cli
and
inc
cmp
and
jecxz
jp
nop
and
xor
int3
shl
bound
stos
mov
popa
stos
mov
out
push
adc
loopne
and
sbb
mov
testb
rorb
lods
test
les
and
sub
push
mov
cmp
stos
jmp
andl
in
jmp
lock
in
faddl
movsb
test
xchg
sarl
pop
or
fcoml
dec
mov
mov
outsl
dec
cmp
pop
inc
fstl
mov
divb
or
aam
or
xor
rcr
fstpt
imul
insl
sbb
xchg
push
jnp
shr
addl
dec
and
roll
adc
jp
mov
repnz
mov
pop
xor
test
fmuls
daa
mov
jno
jbe
cmp
fimull
imull
add
sub
push
sub
adc
clc
jg
dec
out
lcall
xor
and
inc
pop
sub
mov
gs
cltd
aas
or
sbb
pcmpgtw
pop
add
inc
inc
testw
push
hlt
fcmovnbe
jmp
enter
xchg
fisttpl
jns
scas
xchg
fcomip
and
or
sub
fcmovne
mov
add
sti
add
or
cmp
popf
sbb
fstpl
and
ret
mov
clc
imul
mov
jecxz
sub
sbb
cmp
inc
sub
mov
loope
push
rcrb
push
repz
daa
or
jmp
ret
cmpl
aam
mov
lahf
push
sub
jns
add
mov
icebp
shrb
mov
aaa
loope
stos
loope
mov
dec
mov
test
and
add
cmp
mov
adc
shl
pop
push
or
js
jno
jo
aaa
push
add
pop
cmp
add
aad
sbb
jle
fdivrp
and
push
jns
lahf
jbe
mov
daa
xor
fmuls
sbb
xor
popl
cltd
pop
out
dec
xlat
xorl
mov
shlb
mulb
aas
cltd
inc
scas
jg
sbb
and
int
mov
xchg
dec
mov
and
cs
loop
dec
mov
mov
popa
in
es
sbb
or
cld
inc
mov
fcomps
inc
and
insb
stos
lock
sub
in
pop
repnz
cmp
inc
mov
mov
gs
cmp
mov
mov
aam
push
mov
dec
mov
sub
lock
or
xor
sub
in
push
jae
outsb
cli
test
jecxz
adc
jae
mov
cmp
rorl
xchg
inc
push
mov
les
divb
orl
add
push
movsl
lods
cmp
out
push
jl
dec
lret
mov
sbb
or
in
sub
push
jg
inc
ficoml
pop
fwait
push
cmp
lret
int
int3
mov
push
mov
sbb
lods
aam
in
dec
addl
ljmp
cmp
sbb
imul
orb
stos
push
hlt
dec
mov
shll
xor
inc
lock
cli
sar
je
dec
mov
jp
and
mov
mov
jl
and
dec
pop
jl
repnz
and
jns
push
fnsave
or
jb
and
xor
and
dec
pop
aad
dec
pop
inc
cwtl
cmp
cmpxchg
or
pop
sarb
pop
push
xchg
xchg
clc
mov
dec
jl
cmpsl
pop
sbb
andnps
enter
xchg
icebp
jle
pop
and
ljmp
xlat
lret
and
adc
jecxz
inc
clc
sbb
mov
dec
loope
aaa
mov
push
push
mov
add
or
xchg
andl
ret
insb
jae
fdiv
mov
sub
sarl
push
test
dec
pop
stos
pop
mov
rcrb
pop
xchg
jne
movsb
add
push
mov
inc
adc
fwait
sub
jg
add
adc
lret
daa
adc
rol
add
lods
in
ret
or
into
dec
pop
sti
dec
pushf
insl
popf
mov
fwait
out
outsb
scas
sub
mov
jl
xor
fbstp
cmpsl
dec
jne
stos
adc
or
movsb
sub
mov
dec
inc
mov
vcmpsd
xchg
mov
cmpsl
sti
jne
xor
mov
mov
pop
and
imul
faddl
mulb
cmc
aad
inc
sub
mov
jle
jb
or
pop
call
ror
cmp
pop
jno
inc
into
cmp
das
imul
cmpsl
rorl
and
ss
fs
sahf
mov
adcl
inc
pop
into
mov
int3
cvtps2pi
in
mov
sahf
sbb
les
and
lods
je
fstl
in
les
sbb
stc
or
ss
enter
mov
into
sbb
out
hlt
enter
cmp
movsl
or
jp
daa
push
adc
adc
pop
ret
or
je
cli
ja
mov
stc
das
lock
das
sub
inc
cld
lea
lret
pop
iret
inc
rclb
fldl
sub
lret
lcall
jns
lods
icebp
jae
mov
bound
pop
cltd
and
add
jo
pop
shrl
pop
loopne
inc
sbb
mov
loop
rolb
in
pop
push
xor
push
bound
out
mov
cmp
dec
push
aam
daa
jecxz
rcrl
xor
and
jmp
mov
add
ss
lret
jp
jle
pop
repz
into
pusha
xchg
pop
enter
inc
pop
mov
pop
mov
push
lret
pop
or
in
mov
add
push
fisubs
lcall
push
inc
or
pop
js
in
cmp
push
mov
xchg
jmp
mov
cmc
push
sub
in
outsl
bound
cmp
outsb
cmpsb
mov
insb
sbbl
xchg
adc
push
icebp
aad
cli
or
cltd
into
les
sub
sbb
cmc
testl
jle
inc
gs
mov
push
cmpsl
jecxz
adc
test
inc
lods
shrl
int
push
fimuls
test
mov
xchg
arpl
inc
iret
xor
shlb
mov
movb
cltd
neg
sub
test
push
pop
pop
pop
mov
pop
push
sbb
outsb
mov
adc
xchg
sub
push
fstl
pop
mov
mov
in
jbe
and
movsb
mov
and
dec
mov
lods
popf
sbb
lds
pushf
mov
adc
out
xor
sub
mov
enter
ret
mov
add
out
jp
and
shlb
lret
dec
div
pop
pop
inc
add
mov
push
inc
sub
aaa
repz
cs
pop
sbbb
ja
push
pop
pusha
aad
in
gs
adcb
ficomps
sarl
lods
adc
call
add
fistl
mov
pop
fldcw
adc
add
mov
mov
jp
pop
mov
int3
cwtl
push
and
jp
repz
ljmp
sbb
xor
pushf
ficoml
xchg
pop
xor
int
jl
pusha
pop
sarl
in
push
mov
push
outsb
fcompl
mov
std
xor
in
int
aad
cmp
add
bswap
adc
out
or
or
adc
sarl
nop
je
in
adc
out
out
nop
pop
or
fldpi
adc
jbe
jmp
jge
lret
lcall
mov
mov
adc
hlt
jne
ss
or
xor
fcoml
or
rcrb
adc
shlb
shl
inc
dec
pop
sbb
and
orl
cwtl
in
dec
in
cmpsl
mov
dec
int3
jmp
test
cmpsb
adc
iret
pop
sub
adc
sub
aas
lods
jmp
xchg
xchg
dec
aas
clc
xor
outsl
mov
loope
jle
test
andb
clc
imul
mov
or
adc
xor
ss
lcall
es
cmp
sub
mov
pop
jno
or
sbb
mov
push
imul
mov
mov
or
pop
add
icebp
or
jle
mov
movsb
jae
jmp
lds
xor
flds
int
mov
into
mov
test
mov
inc
fcmovu
jne
pop
jp
out
push
jmp
data16
push
xchg
adc
inc
cmp
fnstenv
fbld
jo
outsb
cmpsl
adcb
sbb
lea
bound
push
notb
xchg
push
mov
mov
lock
jb
push
pavgw
shrl
adc
outsl
mov
pop
cmpsb
add
or
cmpsl
data16
popf
xchg
arpl
aas
mov
lret
ret
std
fcom
push
leave
lock
aam
inc
jbe
pop
sbb
cmp
stc
lsl
inc
insl
ret
dec
and
xchg
or
mov
es
aam
mov
cmp
mov
pusha
sar
lret
sbb
aas
pop
test
dec
out
addl
sbb
jo
pop
sbb
stc
push
gs
push
sbb
in
aad
mov
adc
sarl
mov
cs
jno
push
iret
repnz
scas
ljmp
inc
jp
in
fsubl
fwait
loope
ja
int
pop
xchg
xor
lahf
icebp
fistpl
fistpll
dec
mov
dec
mov
inc
adc
test
les
je
sbbl
arpl
pop
scas
je
or
sub
dec
push
push
add
push
arpl
mov
mov
inc
loop
push
mov
in
in
mov
push
aam
lret
sub
jmp
push
popa
fldenv
or
in
xor
sbb
and
fwait
dec
mov
dec
mov
lds
sahf
pop
and
stos
pcmpeqd
push
pop
cmpl
push
dec
out
xor
clc
aad
mov
jnp
xor
and
ljmp
jbe
sub
dec
mov
sub
dec
add
inc
inc
jae
xor
stc
shll
fs
int
jno
sbb
sarb
xchg
push
stos
xchg
inc
jne
or
mov
push
mov
divl
mov
sub
les
pop
jb
fdivrl
mov
mov
imul
fsubr
daa
mov
stc
mov
inc
fcmove
jp
dec
xor
fnsave
in
mov
shll
inc
mulb
jno
inc
mov
stc
pop
xor
adcl
mov
insb
icebp
cmp
add
out
cld
and
fcompl
test
test
roll
into
int3
jne
dec
mov
or
mov
sub
aaa
lcall
push
imul
or
and
addr16
testb
sbb
sub
mov
mov
ror
mov
sbb
jo
jecxz
jne
roll
out
cmp
into
neg
dec
xchg
and
dec
dec
jp
addr16
ss
adc
xchg
lods
add
mov
out
int
cwtl
leave
scas
lods
out
push
in
dec
xor
xchg
inc
cmp
jl
sbb
fdiv
rcll
stc
jae
jnp
and
push
mov
mov
mov
adc
adc
inc
and
int
test
xor
fisubrs
repnz
push
fnsave
pop
shl
imulb
fiadds
pop
push
shll
sub
mov
stos
daa
jg
jmp
mov
je
mov
jle
push
icebp
fisubrs
xchg
fucomip
dec
jns
dec
imulb
adc
lock
adc
cmpsb
xchg
push
and
adc
mov
push
popa
js
push
imul
sub
adc
jle
test
jg
mov
adc
cmp
sbb
or
int3
sti
inc
shrl
into
pop
sub
insb
bound
fdivrp
or
cmp
xor
push
fcompl
mov
push
xchg
testl
mov
sub
das
cmp
mov
xor
cmp
jno
call
dec
dec
popa
aad
sub
or
cmp
fisubrl
les
xor
mov
movsb
xchg
mov
mov
mov
loopne
fldcw
sbb
mov
cmpsb
sarb
gs
int3
ret
rcrb
sbb
sub
faddp
movsl
pop
loop
imul
mov
pop
and
adc
jns
insb
out
lods
in
mov
dec
mov
das
sbb
je
lret
jne
fidivs
test
adc
add
out
mov
push
leave
cmp
mov
sbb
push
jb
cwtl
iret
enter
jbe
cmp
sub
imul
mov
rolb
push
adc
mov
adc
xchg
jmp
stos
pop
xchg
leave
ds
mov
shrb
xor
loopne
cmpsl
pop
and
xchg
mov
outsb
jp
outsb
inc
outsb
shl
fwait
jo
xchg
inc
pop
out
mov
mov
lods
popf
and
push
push
mov
mov
cmpsl
mov
or
or
inc
or
lods
loopne
in
inc
sub
inc
push
enter
not
gs
inc
add
adc
call
in
js
repnz
movsl
mov
out
sub
cmp
inc
mov
fcmove
mov
scas
lret
jg
arpl
inc
int3
js
aas
je
dec
jge
fsts
decb
and
outsb
sbb
pop
bound
cmpb
xor
cmp
lret
xchg
add
mov
enter
fptan
lods
std
cwtl
sub
and
jns
push
push
lock
stc
rclb
popf
jbe
enter
scas
inc
sub
insb
subb
fstpl
cmpsl
mov
fcmovnu
out
pop
and
popf
nop
push
fiadds
and
push
dec
dec
jge
inc
xor
ficomps
inc
jne
mov
mov
cltd
inc
xor
int
mov
iret
clc
cmp
inc
push
outsl
fsub
cld
dec
gs
data16
hlt
push
addr16
int3
nop
ss
adc
mov
aaa
repz
iret
movl
loopne
ret
inc
ret
repz
ss
cmpsb
or
rcl
adc
icebp
ja
arpl
push
mov
add
data16
insl
push
sub
jg
call
in
pop
pop
sbb
push
cs
and
int3
aas
aad
pop
sub
cmp
iret
mov
dec
inc
push
push
psubusb
inc
or
cmpl
mov
pop
mov
xchg
es
shl
insl
pusha
jno
jecxz
sbb
cmp
mov
pushf
repnz
negb
sub
loope
xchg
sub
pop
in
xor
adc
sub
adc
adc
xor
xorb
push
lahf
mulb
or
sub
or
push
ds
cmpsl
mov
shl
das
and
frstor
out
mov
movsb
into
daa
cltd
div
adc
mull
jmp
pop
shll
add
test
clc
scas
out
aas
fdivl
add
insl
bswap
stc
lret
std
in
pop
hlt
sub
jge
ss
adc
rcrl
clc
sub
dec
mov
fisubs
pop
clc
sub
mov
jge
jecxz
mov
hlt
xor
scas
enter
mov
sbb
sub
xor
ss
lds
dec
inc
fs
call
mov
out
pop
mov
mov
daa
call
js
jp
cmp
sbb
mov
jnp
test
xchg
sbb
push
mov
pop
mov
enter
jmp
enter
arpl
xor
shll
xor
mov
imul
or
in
insb
call
pop
inc
jl
xor
outsl
dec
imul
int3
arpl
jmp
fnstsw
nop
roll
das
repz
sbb
in
push
sbb
sbb
and
movsb
insl
cmp
or
sbb
aaa
xor
or
and
insb
imul
push
jne
adcl
pushf
push
lret
pop
outsl
fcmovb
repz
cmp
lcall
jb
sub
hlt
sub
pop
push
psubq
sbb
push
mov
std
movsl
mov
push
adc
xchg
iret
in
lcall
jne
mov
vpmacswd
jbe
ss
call
negb
sbb
inc
mov
push
fs
push
dec
lock
or
jle
frstor
cmp
scas
jmp
mov
push
pop
insb
or
jae
mov
xor
out
aaa
cld
cmp
sti
loop
aaa
xchg
test
push
lcall
lock
test
orb
fimull
inc
cld
scas
mov
loop
das
cmpsb
xor
stos
sbb
pop
into
and
or
pop
test
les
mov
xchg
xchg
mov
jno
and
xchg
push
sub
jecxz
push
xchg
filds
sbb
lcall
pop
ficompl
dec
cltd
cmpsl
push
paddw
jno
clc
jne
test
int
mov
adc
cmp
jle
shlb
mov
scas
inc
sti
inc
xchg
aam
orl
pop
test
scas
cmp
add
iret
rcll
int
sbb
sbb
mov
jp
lahf
jecxz
lcall
imul
leave
sub
sub
frstor
icebp
jmp
pop
sub
fisttpl
mov
es
out
cs
sub
jle
in
sub
push
mov
xchg
dec
lret
incb
jmp
cmp
xchg
inc
insl
scas
in
data16
mov
add
sub
add
mov
and
into
pop
push
mov
and
cmp
push
int
mov
adc
xor
push
jg
pushl
jne
outsl
adc
je
rclb
jb
inc
pusha
mov
outsl
mov
mov
daa
add
dec
pusha
mov
insl
sti
stc
das
jo
pop
xchg
jecxz
push
adc
lcall
decb
or
das
inc
mov
and
loope
push
mov
xchg
repz
sub
negl
ret
mov
hlt
and
push
dec
push
jmp
and
add
pop
pop
aam
gs
inc
ds
and
push
mov
insl
push
lahf
lds
push
and
push
es
test
sahf
lret
cmp
ret
jbe
addb
or
and
push
or
sub
cmpl
xchg
ret
and
xor
push
inc
scas
push
pop
and
lock
movsb
cli
lret
sub
mov
mov
or
movsb
xchg
out
out
arpl
cmp
in
ljmp
push
xor
pop
mov
mov
fs
inc
xchg
fisttpl
mov
arpl
mov
cmc
jb
inc
ss
shrl
xor
lret
xor
dec
cltd
es
cs
xchg
adc
insl
std
adc
push
sub
xor
sahf
lods
pop
mov
mov
fisubrs
out
pusha
add
popf
ja
mov
sbb
into
cmp
xlat
into
mov
cmp
cmp
mov
rolb
addr16
fisubrl
cwtl
fadds
push
sub
iret
jnp
xor
xchg
stos
mov
shll
scas
lahf
stc
sub
xchg
shlb
shl
aaa
insl
popa
jl
test
push
sahf
xchg
ficoms
cmp
cs
gs
mov
les
movsb
lock
icebp
lods
iret
cli
xor
outsb
push
subb
daa
pop
cld
out
xchg
fwait
dec
jge
xchg
popf
add
cmp
int3
push
mov
cli
ret
or
dec
xchg
xor
sbb
in
mov
subb
mov
add
and
mov
push
xor
enter
cwtl
cmp
mov
or
cwtl
jb
cmc
popa
std
sti
les
cmp
xchg
movsl
jg
jb
sbb
mov
adc
mov
xchg
dec
sub
jp
lods
movsb
std
push
fldl
ficompl
xchg
clc
jmp
aam
sub
mulb
sbb
dec
pushf
out
mov
push
sarl
ja
in
lds
xor
cwtl
pop
jge
cmc
mov
push
fisttpll
addl
popf
iret
inc
iret
ja
int
js
mov
mov
dec
push
gs
int3
mov
or
cmp
daa
mov
pop
mov
cli
mov
pop
push
lds
inc
xchg
cmp
dec
shll
mov
dec
movsl
dec
out
bound
sti
enter
jecxz
mov
shlb
add
enter
adc
out
adc
ficompl
or
jne
xlat
lahf
cmp
mov
out
or
aad
push
inc
mov
and
mov
sbb
test
mov
out
mov
push
nop
mov
jmp
aam
call
add
into
aas
pop
mov
fdivrs
addr16
mov
test
inc
inc
push
jmp
js
sti
call
push
into
je
mov
mov
adc
insl
mov
add
push
into
stos
mov
inc
imull
inc
pop
xor
pop
in
mov
out
xor
decb
cmp
dec
hlt
inc
add
mov
lea
adc
cmp
push
test
test
add
lret
lahf
cmp
cmp
daa
mov
lgs
mov
sub
mov
dec
jmp
call
in
dec
mov
mov
lea
test
call
stos
mov
rclb
xchg
fs
xchg
in
out
lods
in
aaa
out
ret
arpl
pop
mov
inc
cmpsl
and
jge
into
mov
aas
mov
push
addr16
push
sub
mov
mov
xor
idivl
lds
scas
roll
movsl
jnp
jbe
outsl
adc
pushf
ficompl
push
das
pusha
aam
imull
ss
icebp
mov
mov
sbb
dec
mov
js
mov
loope
adc
aad
test
xchg
aad
in
js
xchg
mov
cltd
mov
pop
push
iret
add
sti
popl
mov
fsubrs
dec
sbb
xchg
cmc
jno
dec
inc
or
outsb
pop
mov
pusha
ss
jle
jo
aam
xor
movsb
or
fsts
pop
vmulpd
push
fdivl
loope
stc
rcrl
loope
loop
repnz
add
cs
sti
jae
loopne
or
shll
cmp
cld
mov
shll
into
je
inc
nopl
test
adc
cmp
arpl
test
sbb
mov
test
mov
mov
mov
ds
mov
dec
and
andb
xor
loope
jne
aam
mov
sti
fcoml
pop
fs
inc
or
jl
das
fmuls
dec
xor
push
lock
into
push
cltd
mov
ljmp
jo
cmp
aad
mov
aad
pop
and
enter
clc
xor
xchg
das
popa
jae
mov
xor
pop
test
leave
ja
pop
jle
pusha
and
and
or
outsb
mov
and
adc
inc
push
add
fsubs
shlb
add
sub
sub
fsts
dec
push
fcompl
out
les
or
sahf
test
inc
or
xor
outsl
xchg
xchg
sub
and
pop
mov
push
cld
arpl
mov
sbb
add
shrb
daa
or
inc
bound
xor
xor
add
cltd
inc
sbb
mov
mov
std
imul
push
push
outsl
stos
push
jns
mov
xor
pop
in
dec
popa
insb
shl
mov
jne
xor
dec
cwtl
movsb
and
pop
and
or
fndisi(8087
and
pop
fmull
mov
xchg
loopne
cmp
mov
push
bound
bnd
xlat
insb
push
wrmsr
pop
stos
mov
jp
mov
adc
pop
fldcw
ss
cmp
add
xor
sub
into
adc
mov
cwtl
sub
jnp
pop
dec
pushf
add
cltd
outsl
imul
int
cmp
jl
sbb
mov
lahf
mov
fistps
incb
js
jmp
mov
bound
leave
fnstcw
adc
sub
adc
out
sub
lods
or
push
mov
dec
mov
in
xlat
dec
idivl
mov
fcomps
enter
pop
xchg
scas
mov
jbe
ljmp
mov
dec
cmp
mov
loopne
leave
dec
das
cmpb
rcrl
pusha
lods
xchg
test
mov
pextrw
das
sub
xchg
aas
or
mov
loope
test
jnp
jmp
sarl
xchg
clc
mov
push
ds
mov
dec
rclb
test
jge
inc
int
or
stc
aaa
inc
jbe
ss
push
xor
adc
sbb
mov
jmp
sub
jl
pop
sbb
enterw
test
push
ljmp
pop
inc
pop
cld
push
rcrb
lret
push
arpl
xor
test
xor
xchg
or
inc
test
jo
mov
jbe
lock
inc
cmpsl
sbb
or
pushf
cli
and
xchg
jg
xchg
jae
sbb
xor
lock
mov
pop
xor
cwtl
fisubrs
sti
mov
test
xor
mov
lahf
insl
int3
or
int3
call
jnp
push
xor
out
and
xchg
cli
scas
adc
sbb
dec
and
sti
out
mov
imul
jns
das
pop
in
pop
fldcw
clc
mov
rcrl
add
fistps
xchg
or
sub
inc
ret
ljmp
pop
jne
jne
dec
xchg
inc
sbb
jae
cli
lds
inc
repnz
add
jmp
sub
loope
enter
stos
xchg
mov
cmpsl
inc
sbbb
repz
xchg
in
push
loope
js
popa
fidivl
cmpb
into
dec
loop
xlat
or
test
rcl
mov
xor
inc
in
or
inc
jnp
xor
out
xlat
cmpsb
outsl
in
icebp
and
incl
divb
sub
cli
dec
stos
push
add
lock
mov
scas
lea
adc
fistpl
enter
add
mov
cmp
in
mov
xor
push
mov
aaa
xor
inc
ljmp
ljmp
lret
fldt
mov
test
xor
adcl
or
imul
stos
push
inc
es
mov
in
repz
sbbb
pop
aad
ds
ja
fistpll
mov
dec
mov
jb
mov
ja
fildl
movb
xchg
xchg
xor
push
adc
xchg
mov
outsb
sub
aaa
dec
mov
cli
push
sub
ljmp
jne
sub
jecxz
add
adc
push
inc
mov
mov
aad
ret
fisttpll
jmp
pop
std
iret
aaa
or
arpl
gs
push
push
jp
rolb
or
jmp
mov
movsb
xacquire
mov
mov
fs
loope
sti
testb
adc
mov
insb
jmp
rclb
and
ret
mov
add
add
out
adc
stos
leave
mov
dec
mov
lahf
loope
sti
into
cli
loop
push
or
dec
mov
cmp
dec
xchg
lea
pop
ss
or
test
ss
mov
repz
xchg
mov
xchg
ss
arpl
or
jnp
mov
cmpb
addr16
mov
lods
pop
pop
ss
jle
scas
sahf
negl
push
dec
dec
fistl
out
mov
pop
dec
daa
xchg
inc
inc
dec
cmc
gs
adc
popa
add
inc
jecxz
push
xchg
cmpsb
pop
mov
fdivp
sbb
ljmp
mov
xlat
popf
ljmp
movsl
xchg
stc
test
pushf
and
int3
mov
faddl
imull
pop
mov
or
pop
int3
adc
addr16
or
repnz
xor
or
push
out
ficoml
or
pop
movsl
jne
outsb
aad
movsb
jbe
lea
insl
sbb
dec
jne
fistps
pop
or
add
xchg
ret
sbb
sub
dec
mov
ja
pop
fs
jno
hlt
xchg
insl
out
or
push
xchg
dec
xor
cs
jo
rcrb
test
cmp
shrb
dec
cmp
xor
mov
iret
inc
pop
pop
jg
outsl
std
add
sub
std
testl
popf
ja
pop
add
fadd
repnz
fs
popf
sub
cmp
inc
or
inc
inc
push
jns
mov
cmp
repz
jb
mov
xor
ljmp
cmp
sub
adc
enter
xor
inc
push
dec
sarb
andb
lcall
lea
outsb
out
scas
std
mov
gs
xchg
dec
cmpsl
lret
inc
mov
cld
jg
pusha
cwtl
pop
cmpsb
xor
iret
jns
add
ret
mov
pcmpgtw
and
insl
mov
add
cmp
dec
mov
jns
stc
push
loope
sbb
pop
mov
adc
push
and
add
jle
fs
lcall
jno
dec
push
clc
popa
push
enter
ret
cmp
sbbb
mov
sbb
and
aas
jne
sbb
adc
pop
pop
dec
or
shlb
into
iret
test
lock
mov
popf
mov
pop
aaa
xchg
ret
fsubs
mov
sub
xchg
mov
mov
stos
inc
add
addr16
loop
mov
cli
clc
cmpsl
mov
subl
inc
cmpsl
mov
mov
pop
lahf
insb
cmp
aam
push
pop
and
cmc
jae
jecxz
ljmp
int
pop
jl
push
mov
fistps
cmpsb
lods
sbb
jl
inc
das
jl
int
outsl
pop
std
ret
pop
jecxz
push
dec
push
mov
or
fisubl
cli
rcr
xchg
insl
jne
push
ret
movsb
adc
dec
mov
cmpsl
arpl
pop
xor
roll
mov
xchg
into
std
push
sbb
dec
test
or
call
filds
pop
das
test
stc
mov
ds
add
inc
hlt
jp
into
push
lahf
jno
nop
mov
jge
repz
push
in
lea
sti
mov
shl
adc
es
or
jae
inc
mov
ja
btr
jns
jb
mov
stos
inc
lret
sbb
leave
test
pop
in
adc
add
test
loope
pop
dec
pusha
push
mov
lock
dec
inc
push
cld
int
jl
inc
sarl
in
sub
add
xor
mov
sti
adc
testl
std
lahf
jnp
ret
dec
mov
jno
cmp
fcompl
shlb
cwtl
iret
cmc
shl
pusha
sar
lret
lods
jl
push
mov
or
jp
xchg
dec
sarl
xlat
sbb
push
rcl
cmp
sub
mov
cmpsl
inc
outsb
mov
roll
sbb
shll
jg
testl
xchg
inc
es
pop
mov
in
jns
cmp
icebp
push
fs
dec
hlt
aad
dec
popl
aam
pop
mov
daa
xlat
imul
fs
stos
pop
dec
fstl
dec
pop
jmp
mov
inc
cmovp
push
push
fs
loop
jo
inc
fdivr
dec
inc
scas
mov
mov
push
jle
xchg
lea
popa
push
test
test
lds
pop
cs
or
or
mov
pop
mov
cmp
mov
xor
loopne
cwtl
dec
mov
jecxz
repnz
or
out
inc
dec
xchg
sahf
adc
cmpl
push
push
ljmp
and
sti
lcall
cmp
imul
add
pop
in
jle
mov
add
test
mov
dec
je
and
and
and
mov
leave
in
and
and
repz
jo
repz
rclb
xor
add
mov
push
cmp
shl
imul
xchg
inc
cld
jp
xchg
shrl
sub
ret
enter
lock
push
cmp
sub
int3
pushl
inc
push
andb
pop
dec
push
lods
jg
movb
ds
mov
sti
cmc
jg
cwtl
clts
aam
shrb
pushf
push
jb
mov
andl
mov
xchg
rcl
iret
mov
inc
mov
lret
aas
mov
and
stc
rclb
rcr
jmp
dec
push
out
lret
addr16
imul
scas
stos
fsubrs
ss
inc
rclb
xchg
and
pop
or
fwait
push
sub
stc
cmp
and
dec
leave
cmp
test
or
cltd
sub
jne
mov
mov
call
fucomip
xchg
sbb
daa
sahf
mov
add
inc
and
std
aam
inc
mov
negb
inc
pop
call
outsl
sbb
lods
mov
add
out
std
cmp
and
mov
or
insb
ret
cmp
jne
sub
rclb
pop
push
mov
iret
daa
imul
dec
xchg
bound
xor
mov
in
inc
xchg
or
cmp
adc
mov
jae
mov
mov
push
mov
sub
ljmp
test
in
dec
sarb
mov
sub
and
mov
add
mov
sbb
push
lret
inc
push
push
out
mov
incb
mov
xor
jmp
mov
out
dec
fldenv
ss
mov
out
add
mov
les
popf
rclb
enter
pusha
fwait
and
insb
outsb
js
daa
pushf
adc
push
mov
mov
ja
jg
or
inc
or
adc
mov
jg
incl
cmp
adc
pop
xchg
shll
jge
jns
in
sub
xchg
sub
jno
ja
and
xor
ss
aad
and
or
lods
add
aad
mov
shll
movsl
xor
lods
lods
cmpsb
push
sahf
and
sub
adcb
fadd
adc
adc
fmuls
out
bound
push
out
fbld
repnz
push
lea
jmp
or
sub
sti
jmp
dec
cmpsb
sub
dec
es
loopne
clc
stos
mov
sub
inc
test
stos
pop
lcall
nop
fiaddl
xor
xor
xchg
sub
rcrb
addr16
jnp
rcr
xchg
lods
jle
push
repz
jae
mov
adc
xlat
cmp
sub
and
xchg
insl
enter
push
lods
pop
iret
cmp
js
adc
cmp
jb
lret
mov
into
shll
arpl
mov
xchg
mov
pusha
xchg
sub
pop
ret
mov
repz
popf
sub
push
xchg
pop
mov
push
inc
test
loopne
dec
imul
out
mov
arpl
push
inc
outsl
loop
add
xchg
mov
adc
add
adc
adc
fiaddl
insb
sti
sbb
pop
cmp
loope
loopne
push
or
scas
mov
std
test
cmp
aas
scas
sbb
add
insl
jno
imul
popa
fcmovnb
cmp
xchg
ja
xor
xchg
movsb
and
int3
sahf
add
fcompl
sbb
push
roll
cwtl
xlat
outsl
int
ljmp
xchg
test
mov
das
add
inc
vmwrite
or
jnp
pop
mov
dec
push
addb
lock
mov
push
or
mov
inc
clc
cltd
out
popa
in
mov
sub
sub
hlt
imul
pop
in
push
or
push
adc
push
dec
ljmp
mov
in
cltd
jge
fcmovbe
rorb
cmp
dec
pusha
ljmp
sbb
mov
fsqrt
push
dec
addr16
out
mov
add
push
push
in
test
mov
xor
cmc
pop
pop
mov
pop
jbe
or
jg
jb
clc
orl
jle
rcl
clc
jmp
shlb
test
aad
xchg
push
ljmp
lods
cmp
push
rcll
scas
adcl
test
xchg
xchg
pop
aaa
push
das
cmp
mov
enter
push
sbb
push
xor
into
xchg
shlb
dec
xor
notb
sub
push
pop
into
sbb
aaa
mov
enter
or
test
repnz
mov
sbb
lcall
pusha
adc
mov
mov
nop
adc
sbb
pop
mov
lahf
pop
fldcw
xchg
imul
mov
pop
or
je
adc
and
mov
test
adc
xchg
xor
das
adcb
xor
stos
mov
add
inc
icebp
mov
in
add
int
and
cltd
imul
add
inc
shlb
fidivrs
pusha
jge
xchg
pushf
in
jg
xor
das
test
xor
xor
pop
sub
inc
and
sub
add
dec
mov
xor
adc
pop
xlat
add
lea
push
aam
hlt
je
mov
aam
out
dec
pop
stos
testb
mov
jge
pusha
push
or
cmp
in
cmp
xor
lock
repnz
pop
jo
sahf
mov
scas
pop
cmpsb
das
and
out
mov
divl
jmp
mov
lds
adc
fwait
mov
movsl
xlat
pmaxub
std
push
dec
inc
movsl
int
sbb
sub
sbb
xor
pop
mulb
mov
arpl
mov
jae
push
inc
ljmp
push
inc
xor
push
push
in
xor
aaa
es
icebp
fisubl
jnp
mov
adcb
sbb
xchg
inc
push
pop
cmpl
push
dec
sub
cmpsl
notl
add
add
ljmp
add
push
std
andl
enter
mov
lods
jae
jge
call
xchg
sbb
outsl
sbb
jb
ja
btl
add
cs
in
lahf
mov
insb
xorb
fcoml
jp
xor
stos
jge
jp
cmp
lods
push
loope
mov
bswap
or
and
pop
aam
test
mov
cmpsb
fsubrl
xchg
andb
fstpl
test
imul
jp
dec
lret
sbb
mov
outsb
scas
inc
push
cmp
in
sbb
in
sarb
lock
sub
mov
xchg
mov
add
clc
repz
add
add
lret
mov
rcrl
mov
push
lods
mov
jl
lods
inc
push
jg
ret
mov
sub
add
lahf
mov
add
pop
or
push
push
mov
lret
ja
sbb
cmpsl
andl
sahf
jge
cs
mov
add
scas
jns
add
mov
and
jae
ret
mov
jle
inc
mov
xor
pop
pop
mov
jb
in
xor
push
divl
pop
and
fldenv
xchg
xor
movsb
xchg
cmp
cmc
fistpll
loop
outsl
and
ficoms
cmp
inc
inc
xchg
ret
xchg
or
ja
dec
add
mov
std
xchg
sarl
sub
xchg
xor
jae
sbb
imul
cltd
and
andb
les
pushf
test
rolb
and
lds
push
push
mov
je
mov
mov
test
fnstcw
andb
cltd
cld
fwait
mov
ja
test
je
inc
dec
pop
aas
mov
sub
outsb
add
jne
push
dec
and
push
xlat
test
lret
mov
cmp
movl
pop
and
lahf
stos
jp
rolb
xchg
lods
push
sbb
jge
leave
dec
cli
xchg
pushf
lret
xor
loope
lock
inc
mov
xchg
scas
aaa
push
fisttpll
cmp
frstor
cmc
cmc
inc
dec
adc
push
divb
adc
stc
stos
mov
and
iret
stc
mov
subb
mov
sbb
fadds
jmp
loop
jecxz
xchg
dec
addr16
pop
cmp
leave
loopne
aam
loop
std
mov
inc
dec
xchg
mov
sar
adc
shlb
and
lods
das
leave
mov
in
in
cmp
or
inc
xor
jo
cmp
sarb
xchg
aas
sub
iret
or
mov
push
xor
pop
incb
ljmp
js
push
cmp
loope
popf
cmpsb
lcall
icebp
xchg
daa
shrb
lret
pandn
push
jne
stos
stc
dec
aam
lret
sarb
aas
add
sub
inc
inc
imull
xchg
mov
sbb
pop
mov
movsl
sub
bound
dec
rcr
lahf
cmpsb
jns
clc
pusha
push
jbe
sti
pop
push
rol
mov
adc
out
imul
lret
xchg
in
insb
sbb
cvtdq2ps
sbb
stc
sbb
jnp
push
roll
jg
jb
cmpl
pop
dec
xor
adc
dec
mov
nop
dec
sub
xor
mov
arpl
cld
pusha
sub
mov
push
rcll
aaa
dec
test
pop
rcll
lret
int
aad
jnp
inc
fs
add
push
leave
jbe
sbb
les
loopne
inc
mov
mov
sbb
jns
mov
xor
dec
xchg
xchg
cmpsb
in
rol
sub
sub
or
out
sti
test
out
cmp
dec
mov
out
adc
sbb
xchg
jmp
setl
adc
push
outsl
jb
push
adc
mov
jns
out
inc
loopne
adc
int3
sub
add
je
jmp
xchg
sbb
jle
scas
ror
xchg
or
sbb
mov
inc
lret
push
push
dec
mov
mov
sarb
arpl
mov
fs
jne
or
lcall
push
out
adc
lods
cmp
pop
cs
lret
jp
arpl
mov
out
ja
dec
jle
aaa
shlb
pop
and
push
adc
pop
inc
and
mov
in
das
ret
adc
pop
test
push
call
push
adc
inc
add
add
loope
mov
or
sbb
outsl
outsl
jb
outsl
mov
and
aaa
sbb
jno
scas
push
clc
xchg
dec
scas
xlat
cmp
and
ss
add
iret
inc
xorl
imulb
popa
sbb
adc
stos
shlb
sbb
sub
pop
into
mov
mov
imul
repz
mov
popl
mov
stc
push
mov
stc
nop
mov
xor
shlb
es
mov
or
subl
jbe
pushf
add
call
and
inc
mov
faddl
inc
mov
pop
popa
les
sbb
les
or
and
hlt
rol
nop
add
lret
mov
lret
cwtl
jp
stos
ret
leave
repnz
and
pushf
ja
in
mov
sub
lds
pop
pop
test
scas
mov
mov
es
sub
mov
call
inc
xchg
pop
inc
mov
jb
clc
or
gs
das
out
jbe
jne
hlt
js
in
imul
hlt
lret
mov
adc
je
je,pn
outsl
jb
and
jp
mov
cmp
hlt
push
push
popa
adc
out
pop
bound
aaa
sub
je
mov
or
call
gs
fbld
xchg
adc
fwait
dec
and
stos
orb
inc
out
sbb
or
jg
aam
mov
lret
jp
sahf
jae
nop
js
pop
cli
sbb
push
jge
lret
scas
push
out
or
test
call
xchg
adc
xchg
xchg
test
shlb
inc
add
adc
sahf
inc
cmpsb
out
inc
and
popf
sub
sbb
inc
int
push
loope
sbb
sub
les
rcrl
jl
dec
cmc
adc
rcll
arpl
or
sub
test
sarb
jo
lahf
pushl
jmp
lret
push
xor
sub
push
lods
sub
add
bound
popa
dec
subl
mov
adc
cmp
cmpb
add
stos
and
das
into
test
push
loop,pt
xor
cmp
loop
sbb
clc
pusha
pop
lea
out
adc
xor
in
cmpl
xor
test
outsb
aam
add
cs
mov
xor
fmul
lods
pop
or
and
stc
sbb
push
or
lods
loope
sahf
adc
iret
pop
testb
jmp
sub
inc
orl
test
adc
lret
pop
stos
ret
je
sarb
stos
jl
jns
pop
xor
mov
jle
rclb
cwtl
test
into
push
sub
icebp
or
cwtl
dec
stc
sbb
int
cmp
test
adc
insl
adc
jmp
out
repnz
cmp
pop
xchg
aaa
les
fwait
xlat
pushf
aas
pushl
pop
inc
in
cmp
pop
ret
mov
cmpsb
cmp
insl
cmp
addb
or
jecxz
and
inc
cwtl
jb
cmp
das
mov
loopne
cmpsl
adc
stos
lods
fistpll
in
aaa
ret
loopne
out
pop
add
into
mov
icebp
mov
outsl
ds
inc
cli
cmc
inc
into
fidivrs
jge
data16
movsl
push
mov
adc
adc
pop
push
and
stos
data16
and
rcll
push
or
ret
enter
mov
pushf
mov
xor
mov
sbb
cmp
insb
enter
out
mov
nop
xchg
sbb
push
in
sub
fs
pop
mov
dec
mov
in
dec
mov
add
out
pop
and
mov
hlt
pushf
add
jne
xchg
mov
dec
cmp
js
and
add
lcall
js
fs
inc
aaa
dec
jecxz
inc
cld
lret
mov
imul
pusha
cmpsb
mov
inc
sub
cmpsb
fs
enter
xor
stos
cmp
jecxz
xor
pop
sti
and
clc
jbe
sbbl
ret
ljmp
sbb
out
cmc
jmp
aaa
pushf
cmp
inc
stc
xchg
insb
imulb
outsb
and
subb
es
loope
jmp
jo
adc
mov
test
fnstcw
in
jnp
fs
fmull
out
mov
pop
imulb
sub
inc
cmp
lds
xchg
xor
mov
xchg
push
outsb
inc
orl
xchg
sub
and
orb
cli
inc
repnz
lcall
call
test
push
ja
mov
mov
add
movsb
xor
mov
sahf
cmp
push
xchg
dec
or
xchg
or
lret
ret
filds
inc
inc
mov
or
inc
or
dec
cmp
or
pop
xchg
push
xchg
mov
mov
fimuls
cmp
jl
bound
dec
add
bound
push
fwait
push
xchg
mov
lds
shr
adcl
cmp
fstps
shrb
and
jbe
jne
lcall
cmpsl
repz
pushf
sbb
filds
xor
xchg
mov
mov
pushfw
mov
mov
push
insl
into
rcrb
shll
xchg
jp
mov
in
aas
clc
out
jae
lret
lcall
es
mov
mov
xor
arpl
mov
pop
rcr
push
sti
adc
mov
mov
mov
mov
out
lahf
or
test
mov
push
mov
dec
rcr
or
add
jne
adc
push
and
mov
fbstp
call
aas
jmp
mov
xchg
mov
jl
arpl
movsl
clc
mov
xchg
and
mov
lahf
outsb
sahf
cmpsb
adc
fsubl
mov
leave
lea
jae
lods
jge
cwtl
sub
xchg
movsb
cmp
sub
xor
jno
or
lahf
mov
dec
bound
mov
add
nop
cmp
xchg
pop
jg
std
mov
sub
xchg
cmpl
lods
in
in
jo
mov
enter
xchg
fcom
cmp
aas
bound
push
fs
mov
pop
fs
add
nop
jmp
push
call
subl
lods
std
repz
int3
and
call
dec
addr16
mov
sbb
sub
xchg
clc
push
cmpsl
mov
in
mov
mov
icebp
out
jno
insl
cmp
jns
cmpsb
out
rcrb
push
movsl
pop
sbb
adc
shlb
cltd
jno
sbb
push
insl
fsubr
cmpsb
xchg
lock
aaa
shr
sub
push
adc
popf
sbb
dec
mov
dec
das
cld
hlt
sub
fmul
jb
add
je
arpl
xor
jb
sub
xchg
fstpl
xchg
push
lcall
popf
in
addr16
pop
inc
mov
xchg
push
cmp
push
insb
sbb
lock
jnp
xchg
or
enter
push
pop
cmp
sbb
xchg
test
xor
mov
popf
add
fwait
les
mov
mov
aad
inc
mov
push
sti
insl
add
aad
inc
xchg
and
push
rolb
lods
je
sub
pop
sahf
test
out
mov
fdivrl
sub
cmp
mov
imul
adcb
pop
push
mov
inc
push
cmpsb
dec
push
sub
mov
sub
pop
int3
sub
push
jmp
insb
push
cmpsl
ss
or
mov
xor
das
mov
pop
mov
in
pop
popa
mov
add
inc
es
fs
das
lahf
imul
adc
mov
lea
xchg
sbb
push
lds
test
or
loopne
fwait
jle
fs
popf
mov
int
push
inc
cmc
scas
lods
cmpsl
pop
mov
sub
pop
pop
les
cli
ja
mov
cld
clc
sti
cmpb
fidivrl
dec
fistl
xor
repnz
sbb
pop
cmc
add
adc
fadd
mov
fmull
xlat
inc
mov
stos
lock
inc
sahf
sbb
andl
dec
nop
mov
xchg
outsl
xchg
push
icebp
jbe
xchg
sub
inc
enter
lret
mov
add
push
cmpsb
pop
jle
mov
popa
fidivl
subb
dec
fdivs
jae
pop
mov
pop
or
lds
jnp
pop
xchg
lea
jb
fstps
outsb
pop
mov
bound
shrb
jmp
pop
pusha
rorl
jns
cmpsb
cmp
test
adc
xchg
push
lea
movl
mov
adc
jecxz
jns
pop
cmpl
cmpsl
jle
and
inc
mov
outsl
dec
in
jmp
xor
sbb
shrb
jmp
inc
sarb
jne
dec
scas
xchg
mov
pop
dec
iret
mov
arpl
fiadds
bound
insb
sub
testb
cmp
push
sahf
cmp
xlat
mull
sbb
lret
imul
or
orb
jnp
aas
fimull
sub
sbb
mov
push
push
and
jo
scas
push
orb
pop
mov
mov
mov
dec
sbb
or
ja
fwait
icebp
adc
fwait
iret
mov
pop
clc
xchg
mov
imul
mov
pop
push
xor
int3
subb
cmp
xchg
lds
insb
fcomps
shlb
dec
cmpsb
xor
mov
sbb
inc
adc
insb
clc
pop
inc
addl
xlat
adc
or
pop
test
inc
cmp
xor
rcll
shrb
negl
xchg
test
aad
push
inc
jecxz
xchg
or
je
out
fidivl
push
mov
or
and
push
pop
flds
pop
repz
sbb
dec
mov
xor
or
sub
stos
cmp
sbb
mov
cmp
test
sbb
arpl
push
mov
xchg
xchg
int3
shrl
xchg
ja
data16
inc
xchg
ret
leave
adc
movsb
lock
and
aad
out
sbb
adc
or
jo
ret
loopne
ss
xchg
add
jno
out
test
or
cmp
inc
mov
mull
or
push
push
cmp
fisttpl
mov
push
or
daa
cmpsl
jno
cli
daa
sub
adc
xchg
pop
mov
mov
in
pop
shll
sub
cmp
mov
imul
jbe
and
fwait
bound
rcrb
pop
hlt
cmp
adc
and
cmpsb
mov
dec
mov
mov
mov
iret
ret
adc
xchg
pop
aam
push
out
cli
and
aaa
mov
rorl
enter
fstpt
out
out
xlat
gs
add
idiv
push
adc
mov
nop
fistpl
adc
lods
adc
pop
xor
test
mov
xchg
cltd
mov
es
or
dec
leave
mov
aaa
dec
fsubrs
pop
loop
push
test
loope
mov
pop
xor
xchg
aad
mov
mov
cmp
lock
popf
sbb
cld
inc
ds
and
sub
jecxz
or
scas
rcrb
stos
loop
inc
xchg
loope
xchg
cmpsb
fidivrl
pop
icebp
insl
adc
mov
jb
insb
push
xchg
and
icebp
xchg
add
call
dec
pop
nop
clc
mov
scas
lea
imul
fdivl
rcr
dec
adc
xchg
dec
stos
sub
fs
pop
sub
xchg
inc
sarl
in
addr16
inc
or
lret
ror
dec
push
xchg
in
fsubrl
aaa
aaa
fsubrl
ret
mov
hlt
mov
rcll
mov
inc
in
xchg
mov
pop
leave
mov
inc
mov
arpl
aad
test
rcll
lcall
dec
inc
sarl
sahf
inc
jmp
mov
xor
pop
pop
dec
mov
and
dec
pop
push
sbb
js
insb
sbb
shrl
push
jo
sbb
rcrl
adc
cmp
pop
jmp
sub
aad
jns
push
lret
inc
fcmovb
ja
stc
mov
pop
cmp
fldt
mov
push
dec
mov
mov
outsl
xchg
insl
imul
cmp
sub
dec
iret
aas
and
lds
mov
dec
inc
lret
and
pop
scas
aaa
xor
adc
insb
and
ja
add
adc
sahf
inc
in
pop
inc
vmptrld
add
test
dec
xchg
sbb
jno
inc
xorb
test
shll
and
sub
scas
fmulp
shl
iret
or
ret
push
jns
adc
cmp
dec
mov
stos
add
clc
xor
ljmp
cmp
mov
ja
testb
add
into
in
imul
test
rclb
sub
std
mov
insl
roll
mov
cmpl
xor
rol
and
data16
sub
out
sbb
push
ja
ss
mov
cmp
inc
test
rcrb
es
mov
enter
push
test
adc
shl
bound
xchg
stos
xor
in
enter
or
int
ss
sub
out
inc
call
xchg
inc
ret
mov
adc
xor
mov
jns
jmp
cmp
or
jl
sbb
jecxz
cmp
jecxz
scas
ja
mov
push
cmpsl
jne
or
fisttpl
cli
mov
nop
lret
out
icebp
push
jmp
std
out
xchg
cld
aam
rcrb
mov
out
mov
scas
mov
jb
xchg
xchg
dec
insb
add
xchg
pop
mov
ret
xchg
cld
aam
enter
inc
dec
fwait
jno
cmpsl
test
xor
in
cwtl
scas
repnz
aam
push
mov
js
push
popf
ret
push
out
test
jge
dec
mov
add
rol
xchg
add
mov
outsb
or
pop
popf
fwait
les
inc
and
shrb
in
mov
testl
sub
cmp
ljmp
mov
sti
jbe
add
push
stos
jno
push
lods
push
xchg
dec
pop
ficoms
xor
pop
sub
xor
inc
in
ret
out
cmp
cmp
xchg
daa
popf
jmp
sub
push
dec
push
enter
ljmp
testb
rcrb
fldln2
lret
pop
cmp
lcall
repnz
sub
test
xor
and
das
adc
imul
shrl
pop
pop
push
out
scas
and
in
pop
js
mov
out
mov
stos
pushf
jae
mov
cmpsl
mov
inc
aad
cmpsb
popl
int
xor
xor
roll
sbb
inc
mov
test
mov
inc
and
fwait
push
push
cmp
into
inc
or
mov
mov
add
xor
cmp
cmc
and
test
mov
or
sbb
leave
jne
outsl
jg
fdivs
call
jno
adc
mov
lret
ret
lock
xchg
fst
inc
int3
pusha
je
or
and
add
sub
lret
and
pop
pop
sub
scas
ja
or
sbb
scas
loope
pushf
push
xor
mov
orl
jle
pop
repnz
sbb
jo
lret
xchg
ret
jbe
or
jl
popa
xchg
lcall
or
ret
cwtl
test
or
fucomi
mov
adc
mov
inc
popf
mov
push
xor
sbb
dec
mov
stos
jb
dec
xor
xor
adc
ja
pop
add
and
mov
pop
pop
or
jmp
jl
incb
imul
int
push
fs
and
sub
daa
dec
pusha
jg
jb
fcmovbe
ss
dec
mov
mov
insl
pop
pop
lea
cs
repz
push
movb
cmpsb
insb
daa
or
push
dec
inc
imul
cmp
nop
jl
ret
lret
imull
stc
stos
xorl
inc
and
jg
lock
cmpb
shrl
iret
cmp
jno
adcb
fwait
stos
push
push
dec
inc
lods
enter
stc
push
imul
das
dec
and
rorl
adc
mov
fs
pop
dec
div
add
sbb
int
imul
out
fidivrs
ret
ret
cli
dec
mov
sub
sbb
loop
dec
pop
jp
aaa
in
jle
jge
xor
add
xchg
divl
mov
pop
sbb
push
stc
or
push
push
mov
fistps
fisubs
xchg
aas
mov
fs
adcb
pop
testb
outsb
aaa
pop
rcl
pop
aaa
pop
lret
mov
and
jns
outsl
inc
out
imul
dec
push
push
mov
jg
and
pop
dec
into
pop
mov
mov
push
jb
add
fs
mov
lods
jbe
cmpsb
dec
cwtl
negl
adcb
cmp
das
xchg
dec
pop
mov
je
sub
rol
loopne
cltd
out
cwtl
bound
fisubs
or
and
inc
mov
cld
inc
cmpsl
es
xor
scas
addr16
dec
xor
aaa
pusha
js
and
push
add
adc
xchg
cmp
add
inc
add
adc
jge
addr16
cli
sar
scas
cmpsl
cmp
jns
pop
lock
jnp
add
leave
jbe
mov
js
cwtl
out
leave
cmp
mov
mov
scas
aad
sub
cmp
jns
in
cmpsb
pop
xor
les
xor
adc
and
jmp
nop
scas
pop
xor
enter
add
lods
sub
cmp
xchg
jne
leave
xchg
sub
jbe
loope
std
jg
sahf
xchg
jp
add
mov
cltd
and
fistpl
xchg
andl
adc
adc
inc
daa
sbb
stc
lea
popa
loope
and
push
jle
mov
test
aas
fsub
fsubs
dec
sbb
dec
adc
dec
xchg
push
ljmp
sti
dec
dec
insb
pop
and
push
mov
cmpb
cmc
wrmsr
mov
adcb
loop
adc
cmp
mov
fstl
outsl
adc
repnz
mov
sti
cmp
aad
and
outsb
fsubr
sbb
out
mov
xchg
mov
jmp
jl
xchg
xchg
repnz
xchg
or
sub
xchg
push
cmp
out
sub
idivb
xchg
mov
add
ret
ss
cmp
cld
adc
data16
mov
push
push
xor
push
dec
inc
cmp
aam
jmp
shll
dec
mov
inc
adcb
lahf
or
out
pop
mov
imul
scas
xchg
iret
ret
ss
inc
movsl
xor
scas
cmp
add
mov
dec
ljmp
popf
pop
sub
mov
mov
test
and
aad
mov
adcl
notb
stos
lds
xor
loop
xchg
in
pop
icebp
lcall
dec
cmpl
sub
subb
adc
lcall
aas
or
subl
jno
jns,pt
imul
inc
cs
sbb
mov
outsb
mov
loope
and
mov
fisubrs
sub
out
fcmove
and
addr16
jbe
jae
popa
mov
add
movsb
push
or
testb
movd
sarl
or
out
cmp
popf
ret
or
inc
add
push
fcmovu
mov
frstor
cli
push
test
daa
movsl
pop
dec
xchg
xlat
filds
fsubl
ja
mov
rcr
mov
in
jge
cmp
sbb
cmp
flds
push
enter
mov
push
jp
js
adc
mov
push
push
xor
sub
hlt
movsb
pop
lret
in
inc
jae
mov
dec
cwtl
mov
mov
xchg
out
mov
jge
popa
in
inc
pop
dec
movsl
inc
sbb
loopne
pop
mov
sub
ss
xchg
xchg
adc
jp
jg
push
and
or
scas
or
and
dec
push
xchg
out
cmp
daa
pop
cmp
aam
mov
clc
add
inc
out
sub
push
loopne
mov
dec
scas
pop
cmpsb
iret
dec
inc
dec
push
ret
scas
or
jg,pt
mov
sub
cmp
jne
xchg
push
shrl
lret
or
leave
call
fldl
cmp
adc
jns
rcl
mov
jle
daa
fst
dec
cmp
sahf
xor
jne
and
jne
pop
or
cmc
movsb
int
ror
bound
or
aam
jb
test
stos
lcall
mov
insl
cs
std
fcompl
shlb
stos
mov
inc
and
sbb
fdivs
push
cs
inc
and
jbe
sbb
push
loope
sub
mov
xchg
mov
pushf
aas
mov
pop
aas
fisubrs
xor
ret
dec
mov
sbbb
mov
into
sbb
hlt
xor
test
mulb
and
push
shlb
and
in
pop
sub
ret
fisubrs
or
push
jmp
jne
adc
mov
xor
loope
divb
pop
lret
mov
adc
cmpsb
fwait
and
fstl
push
mov
sbb
popa
sbb
sbb
cmp
sahf
cs
push
inc
xchg
mov
adc
jle
xchg
fiaddl
adc
pop
cmp
push
mov
arpl
pmaddwd
aaa
orb
stos
repnz
pop
pusha
mov
and
jne
movsb
mov
imul
xchg
subb
clc
pop
jnp
xor
aaa
shl
jge
rcll
pop
lds
bound
push
cwtl
xchg
fwait
cltd
insl
and
xor
ljmp
outsl
imul
push
in
call
orb
shl
mov
cmp
cmpsb
int3
pusha
fadds
clc
xchg
out
xchg
inc
jle
add
leave
or
xor
into
stos
or
jg
push
loope
push
jp
xor
outsl
add
and
jge
push
or
sub
int3
roll
fwait
pop
das
ficoml
dec
sbb
adc
ja
cmp
add
inc
loopne
jo
testl
and
stos
adc
push
jl
pop
inc
xchg
add
mov
fdivrl
js
jo
dec
sbb
lea
je
mov
and
push
std
lods
jne
fsubs
sub
mov
lock
insb
jo
sub
outsb
xchg
xor
insl
jb
scas
xor
iret
fistl
test
and
mov
or
xlat
cmp
popa
lods
das
fcomip
or
and
xor
gs
es
and
jae
jl
int3
fmuls
aad
lds
pop
orl
cmp
clc
scas
insb
ret
icebp
sbb
push
fidivrs
fbstp
mov
and
xchg
xchg
add
rcl
in
push
mov
outsl
enter
iret
loope
push
jmp
pop
nop
ret
ret
stc
cmpsl
mov
pop
mov
cmpsl
and
ret
pop
arpl
add
idivb
in
scas
adc
push
enter
inc
jp
fidivrs
adc
xor
test
in
cmp
mov
jg
stos
jns
mov
mov
or
in
adc
mov
push
lcall
aam
xchg
imul
and
push
sbb
in
call
fwait
dec
inc
mov
stos
pop
lret
xchg
adc
push
xchg
int3
sub
dec
mov
jnp
ljmp
pop
stos
mov
test
or
fcomps
push
dec
mov
push
or
icebp
adc
shrl
dec
imul
sahf
cmp
or
ficoml
inc
lds
pop
adc
inc
cmpsl
jae
sub
adc
les
lahf
adc
push
lock
mov
loop
mov
mov
mov
sub
std
in
int3
adc
xchg
cs
mov
decb
sub
push
sub
fistpl
subb
push
or
add
dec
aad
addr16
mov
dec
rolb
rorb
sbb
mov
xchg
rcl
clc
dec
out
mov
xor
sub
inc
popl
or
inc
add
push
sbb
push
jg
mov
aas
and
mov
lahf
fdivl
fcmovne
or
and
popf
out
adc
push
mov
pop
pushf
hlt
add
lds
loop
rcll
dec
push
mov
idiv
in
int3
pop
subl
push
sbb
cmpb
sub
dec
mov
adcb
adc
jnp
dec
jno
nop
mov
aas
into
push
push
xchg
aas
iret
inc
jb
insb
out
dec
das
fstl
rcr
lock
mul
out
adc
sti
push
jmp
pusha
push
jl
xchg
add
sbb
cli
add
je
sub
pop
bound
or
fwait
or
jle
push
sti
adc
daa
test
inc
rcrb
xchg
imul
je
rorl
add
adc
jge
daa
mov
push
out
inc
pushf
or
adc
jmp
cmovp
and
fcmovb
pop
push
add
insb
lds
push
insb
outsl
inc
mov
push
jl
inc
aam
int
mov
stos
inc
lods
adc
mov
leave
pop
bound
fsubrp
into
aam
mov
xchg
in
dec
pushf
jb
or
out
xchg
xor
hlt
add
fiaddl
adc
inc
iret
adc
cmpsb
imul
inc
call
ds
mov
lret
jecxz
and
fs
mov
cmp
push
call
out
xor
test
cs
arpl
and
cmp
leave
or
sub
bound
add
push
les
cld
and
sub
aaa
mov
movsl
push
andl
andl
movl
mov
adc
out
dec
push
pusha
adcl
jns
push
scas
pop
lock
bound
sbb
jno
subb
rorl
push
cmp
sbbb
jb
repz
adc
xchg
pop
nop
outsl
pop
mov
adc
enter
inc
test
add
add
enter
mov
mov
mov
push
cmp
add
sub
sub
sub
dec
stos
scas
add
nop
cmc
pop
sub
stc
ss
bound
xchg
adc
sub
cltd
stos
adc
pop
daa
mov
out
lock
js
cmpsb
jb
push
jns
xchg
movsl
imul
js
xchg
mov
addr16
in
jge
inc
jmp
dec
idivb
inc
add
call
out
jp
xor
mov
imul
mov
call
xchg
sbb
imul
cmpsb
jle
imul
mov
movb
sbb
jl
cltd
loopne
lds
rorl
cltd
jnp
out
inc
add
stc
inc
xor
fidivl
mov
push
cwtl
cld
mov
fstpl
mov
insb
aas
subb
add
clc
push
jmp
mov
jg
test
xchg
lcall
mov
sub
mov
rcll
inc
push
idivl
in
jbe
cmp
pop
adc
adc
cmpsb
adc
call
mov
cltd
scas
sahf
lcall
loope
out
rolb
mov
add
cmp
mov
insb
lcall
pushf
cmp
mov
rcl
mov
jae
shrl
inc
sub
outsb
rcr
xchg
jno
mov
cmc
adc
cmp
jae
mov
loop
sbb
stc
fbstp
aad
pop
orb
add
mov
int3
adc
fs
jge
inc
lcall
mov
aad
sti
in
pop
lds
mov
inc
sbb
add
cld
dec
sbb
mov
lahf
insb
or
aad
in
fildll
call
sbb
cmpsl
aam
mov
sbb
ljmp
std
xchg
rolb
repnz
inc
imul
fsts
pop
xor
loop
mov
pop
enter
mov
inc
pop
adc
int
mov
pop
mov
sbb
inc
jb
andb
inc
sub
fwait
inc
pop
jbe
sub
cmp
jns
mov
cmp
mov
pop
iret
mov
lret
push
stos
add
loop
xchg
xorl
adc
xchg
ljmp
inc
and
xor
into
in
int3
pop
add
jno
push
push
std
lods
les
jbe
xchg
mov
pop
add
mov
mov
gs
cs
adc
xchg
adc
cmp
adc
sub
push
les
xchg
or
pop
dec
jns
jmp
cmc
add
mov
cmc
push
imul
adc
mov
or
subl
imul
lods
inc
jbe
inc
js
pop
stc
xchg
repnz
add
pop
mov
or
dec
cld
loop
mov
ja
cmpsb
fdivrs
cmp
loope
xor
cltd
push
decb
sub
imul
ss
es
dec
adc
xchg
ja
xchg
std
xor
sbb
int
fadds
cld
sbb
sbb
or
xor
or
das
shlb
xchg
cmp
lods
test
arpl
bound
mov
xchg
data16
cmpsb
adc
fnstenv
bound
add
imul
bound
fcoms
and
sub
mov
push
cmp
cmp
repnz
and
jg
stos
xor
pop
lods
int3
test
pop
out
push
in
scas
out
pop
xor
push
push
pop
xchg
popf
nop
sbb
inc
adc
sbb
repz
dec
sbb
push
mov
out
mov
fsubr
or
loop
fs
aas
dec
sti
gs
pushf
roll
sbb
or
in
mov
jmp
insb
outsb
outsl
and
iret
xchg
mov
popa
lds
cmp
and
les
mov
mov
sub
or
xor
jne
xor
add
aaa
je
push
fisttps
es
aas
repnz
xor
sub
arpl
inc
fcoms
sbbl
xchg
sbb
sahf
ret
jp
loopne
mov
push
mov
mov
dec
dec
mov
loop
or
pop
idivb
or
inc
incl
sahf
sarl
outsb
pop
add
popa
mov
andb
add
call
inc
mov
xchg
jle
mov
scas
sahf
pop
xor
popf
inc
and
setae
lds
mov
popf
xchg
rorb
jg
xchg
int
inc
and
xchg
pop
dec
bound
or
pusha
or
and
test
sbb
roll
and
cmc
gs
pop
sbb
cmpsb
loopne
fdivl
shrb
mov
push
arpl
sub
jl
lods
cld
jnp
pushl
and
jns
test
cmp
jo
cwtl
sbb
sbb
or
shll
or
xor
fstp
repz
aam
outsl
push
es
dec
xlat
cmp
test
push
jp
adcb
mov
aam
sbb
inc
xchg
mov
jl
cmp
and
inc
and
lock
shlb
or
mov
test
mov
rorb
jle
pop
dec
mov
push
leave
ret
gs
adc
mov
jg
and
sbb
mov
lret
clc
jl
lret
mov
mov
jo
fmulp
repnz
sahf
lret
add
call
popa
loope
lcall
inc
cltd
xor
aas
jb
mov
or
lret
and
mov
adc
add
sub
push
out
pop
movsb
roll
addr16
mov
push
sbb
cmpsb
in
sbb
lea
test
addr16
data16
mov
mov
sub
pop
sub
dec
addb
jmp
hlt
dec
lods
push
fcompl
incl
je
bound
dec
pop
inc
sbb
jecxz
les
sbb
lock
les
push
jo
shrb
sbb
mov
pop
lret
push
xchg
xor
xchg
iret
pop
arpl
js
std
or
out
xor
rcrl
push
fwait
or
add
ljmp
add
or
sahf
xchg
and
scas
jb
scas
jbe
dec
pop
out
dec
inc
mov
mov
sahf
insb
enter
jne
test
mov
or
fdivl
adcl
jo
cli
pop
dec
pop
cmp
mov
cwtl
push
push
jb
cmp
inc
push
ffree
int
dec
pop
loop
in
mov
sbb
push
les
mov
lds
mov
xchg
mov
sahf
push
cli
sbb
imul
mov
xchg
test
rol
out
mov
sub
lds
dec
out
cmp
pushf
std
sbbl
adc
out
ds
push
call
bound
lods
push
js
mov
dec
ss
sbb
es
nop
pop
xchg
adc
adc
pushl
push
fsubl
pop
test
insl
cmp
shr
ret
push
jg
push
xor
in
sbb
pusha
cmp
stos
dec
nop
adc
pop
leave
xchg
push
js
pop
cmpsb
inc
aam
je
ds
dec
call
out
mov
or
push
cmp
rcrl
push
and
mov
insb
mov
mov
dec
mov
stos
es
adcb
int3
xchg
cs
lret
push
xchg
add
inc
push
push
out
mov
sbb
xor
in
mov
sub
xor
or
push
stos
dec
in
loope
out
insl
pop
dec
push
cs
adc
in
icebp
aaa
xlat
or
fwait
pusha
xor
jb
mov
jae
push
ficompl
sub
jne
loop
fstpl
add
xchg
mov
hlt
mov
jmp
insl
scas
push
mov
push
mov
pop
adc
xchg
mov
loope
dec
test
adc
pop
xchg
cltd
pop
sub
leave
fistps
jecxz
fptan
jbe
test
pop
mov
inc
lods
dec
xor
mov
or
pusha
push
jmp
cmp
and
sub
mov
mov
je
jns
mov
jmp
mov
lret
addr16
dec
push
jo
adc
scas
or
and
clc
loope
and
testl
stos
mov
mov
hlt
jno
dec
lea
scas
test
je
add
aad
sahf
lahf
imul
loope,pt
push
lea
dec
in
mov
cmp
shl
sbb
mov
in
sub
scas
cmpb
fstpl
or
je
mov
dec
ljmp
pop
xchg
test
adc
out
sbb
adc
fists
les
mov
fwait
mov
cmp
arpl
pushl
sbb
xchg
js
faddl
push
icebp
dec
mov
aas
ja
mov
push
xchg
lods
nop
movsb
movsl
lock
xchg
add
lods
cmp
loop
lds
cs
scas
xor
sub
dec
fs
imul
imul
shl
inc
sbb
pushf
mov
scas
mov
es
cmp
jno
add
or
shlb
dec
lret
cmp
jae
scas
and
int
inc
mov
bound
fsubrl
outsl
rcrl
or
inc
jbe
dec
inc
cmc
gs
loope
mov
data16
push
fsub
or
cmp
ret
nop
xchg
xchg
cltd
adc
mov
push
lds
mov
or
or
cmp
ret
popa
xchg
mov
add
adc
and
gs
mov
xchg
insl
gs
lds
dec
cmc
cli
outsl
push
jnp
mov
push
rolb
cs
popf
mov
aaa
lret
jns
dec
add
dec
cmc
je
imul
les
jbe
and
sbb
sti
mov
imul
scas
and
dec
mov
jg
and
mov
les
pop
icebp
imull
inc
cwtl
adc
cmpb
int
scas
mov
pop
outsb
push
or
mov
mov
mov
imul
fldenv
movsb
adc
rcrb
jecxz
xchg
jo
xchg
mov
xor
aaa
mov
mov
std
loope
push
lcall
add
push
ljmp
mov
jne
push
movsb
add
push
jbe
inc
ja
jnp
cmp
aam
push
dec
rclb
mov
gs
jne
cmc
stc
pop
divl
push
add
nop
mov
sahf
dec
sahf
sti
adc
int
rcrl
movsl
sbb
adc
sub
xchg
sbb
rcrb
sub
cmp
ljmp
pusha
movsb
loope
ret
and
add
out
xor
xor
mov
jo
lahf
push
cwtl
push
pop
push
push
or
rcl
test
or
test
ljmp
mov
sub
pusha
test
and
inc
fadds
mov
inc
insb
push
imul
nop
and
cmp
jp
inc
add
cmpsl
lahf
shrb
je
daa
in
mov
out
xchg
lods
pop
arpl
ret
cs
or
xchg
mov
out
aas
fidivs
test
pop
cmc
xchg
or
insb
push
stos
mov
stos
cmpb
hlt
mov
jle
push
push
dec
inc
mov
xchg
aaa
dec
pop
jo
inc
je
scas
int3
jl
pop
pop
sarb
pushf
lahf
insb
fsubr
in
loopne
adc
cwtl
add
enter
movsb
out
push
and
aad
lret
lea
xor
cmp
scas
add
xchg
pop
push
sbb
xchg
push
iret
mov
out
and
jmp
loope
lods
loope
adc
sub
sub
push
pushf
repnz
pop
adc
dec
js
dec
fcomi
cmpsl
stc
jmp
add
pop
and
shrl
push
inc
or
sti
sbb
lock
pushf
xor
and
insl
arpl
sub
sub
and
test
les
mov
inc
out
pop
mov
sahf
rcrb
fnsetpm(287
leave
push
lret
push
add
xchg
cmp
rcrb
jle
jae
sbb
out
xchg
loop
shlb
xor
pop
xchg
push
test
jg
jae,pt
imul
orl
dec
xor
sub
mov
inc
push
bound
sbb
cwtl
std
dec
movsl
jo
cmp
or
xchg
pop
lahf
push
mov
into
adc
pop
cmp
in
jnp
sarb
stos
xchg
dec
ja
sti
aas
movsl
push
push
mov
aam
ljmp
jnp
push
fsubrl
cmc
loop
push
lds
int
dec
aas
into
cmp
push
addr16
push
fnstenv
dec
sub
ret
fstl
repz
push
bnd
mov
out
inc
add
aaa
or
push
int
fists
inc
mov
cli
cmp
lret
push
mov
xor
dec
fldenv
add
lea
cmp
test
sbbb
and
ljmp
lret
sub
aaa
cmp
cmp
shll
fdivs
cld
daa
push
xor
sub
jl
xchg
pop
test
mov
adc
cltd
insb
and
and
loop
aas
jg
test
push
jmp
mov
sub
into
mov
push
mov
mov
cmpb
testl
xchg
imul
add
in
xchg
xchg
adc
add
push
sbb
mov
push
int3
aaa
push
jnp
fmuls
inc
jnp
rolb
popf
movsl
test
leave
test
mov
aad
daa
dec
cmp
xchg
imul
ja
cmp
ja
add
push
shlb
mov
mov
dec
rcrb
or
adc
push
shll
jmp
cmp
dec
add
dec
gs
bound
push
xor
dec
xor
pop
and
rcll
jae
pop
pop
sbb
out
clc
cli
daa
pop
aad
inc
fwait
jecxz
dec
xchg
ljmp
sub
das
push
mov
push
jb
cli
mov
and
hlt
xor
sahf
iret
ret
icebp
xchg
cwtl
jl
cmpsb
cmp
hlt
jp
add
jg
je
pusha
cmp
cmpsl
mov
add
nop
mov
xor
cmc
dec
gs
lret
xor
fdivs
dec
lods
sub
repnz
daa
aam
xchg
push
cli
fsubl
arpl
mov
and
lahf
test
outsb
lret
addr16
addr16
push
insb
in
test
fs
fsubrp
lret
mov
in
cmp
je
call
or
xchg
lret
cli
fists
xchg
outsl
jae
sbb
sub
ss
jmp
add
das
and
mov
mov
cmpsl
movsl
std
rcrl
mov
jecxz
sub
ror
out
filds
pop
dec
insb
lahf
lock
enter
add
cmp
or
data16
fmuls
ds
pop
cmp
xchg
sub
mov
sti
lds
divl
pop
mov
xlat
mov
mov
clc
jae
fistpl
leave
shll
movsb
pop
xlat
adc
mov
xor
pop
sbb
loopne
xor
push
movsl
ss
lds
or
flds
inc
mov
mov
repnz
xor
popf
xchg
ret
int3
dec
pop
lds
in
repnz
daa
mov
mov
and
cmp
in
fsubrp
das
setae
mov
cld
clc
adc
out
xchg
jle
bound
or
mov
mov
push
adc
ret
push
pop
outsl
iret
cmp
int3
cmpb
je
inc
inc
jmp
xor
add
xor
ret
sub
sub
push
mov
push
jae
cmpb
inc
pop
shll
imul
mov
jbe
int
mov
jno
inc
mov
jl
icebp
pusha
subb
cltd
sti
mov
mov
in
loopne
cmc
popa
dec
mov
mov
shrl
insb
out
nop
divl
adc
insb
mov
stc
mov
xchg
pop
test
leave
movsl
jge
jp
push
adc
cmp
sub
mov
repz
dec
xorb
into
or
inc
and
mov
adc
xchg
out
mov
in
in
mov
and
xchg
insl
int
sub
and
rclb
fisubs
shlb
pop
lret
sbb
push
ljmp
hlt
ds
fisubl
outsl
js
out
or
jns
jge
xor
push
dec
mov
adc
xchg
pop
push
add
mov
aad
mov
or
in
mov
bound
mov
and
inc
pop
jecxz
mov
inc
aad
xlat
aam
fcompl
ss
push
lahf
jl
aam
jge
mov
aad
xchg
jecxz
popa
xlat
sbb
dec
adcb
inc
lods
and
dec
mov
add
lods
repnz
fs
sbb
xchg
add
cs
cmp
and
cmp
sti
inc
dec
icebp
nop
push
les
or
push
add
out
or
xchg
xchg
and
rclb
push
ja
sbb
pusha
in
int3
inc
pop
nop
and
ja
sbb
mov
cs
xchg
and
loopne
sbb
xchg
pushf
push
cmp
push
fldt
clc
xchg
sbb
mov
mov
inc
int
fsubp
push
fldcw
addr16
push
mov
mov
pop
jns
cmpsb
jle
test
lcall
inc
ds
bswap
andl
sub
iret
adc
dec
lcall
mov
jbe
xchg
push
mov
mov
xchg
aam
bnd
mov
or
inc
cmp
jl
push
aad
push
std
fildll
cmp
stc
es
mov
lret
xchg
bound
mov
aaa
pop
and
gs
lods
rorb
xchg
lret
mov
paddsb
nop
push
and
pop
cmc
jmp
sub
lcall
jmp
xchg
add
xchg
fwait
xor
or
ss
ja
aam
int3
xor
fmul
xchg
sub
sub
aam
loope
fwait
and
mov
cmp
mov
adc
add
or
pusha
mov
xor
sarb
adc
lcall
jl
jae
adcl
mov
jbe
outsb
fisttpl
and
mov
adc
sbb
imul
cwtl
jle
pop
jnp
mov
std
dec
or
and
xlat
sbb
mov
sbb
enter
inc
popa
mov
mov
fistpll
mov
pop
ja
dec
jg
push
sbb
int3
test
xlat
rcrl
jge
pop
jae
je
inc
pop
inc
rcrb
inc
push
dec
sub
xor
sbb
pop
ljmp
push
mov
imul
jns
sub
loopne
dec
outsb
xchg
mov
ror
outsb
loope
out
xor
pop
adc
out
inc
and
pushf
mov
in
pop
inc
pop
sbb
sub
mov
or
mov
cmp
push
and
dec
cmp
movsl
lock
mov
inc
push
dec
xchg
lret
xor
and
scas
adc
cltd
jmp
sbb
sbb
je
xor
xchg
hlt
dec
push
mov
iret
push
mov
push
lock
popa
or
xchg
or
scas
lods
mov
ror
in
sbb
les
mov
mov
stos
out
inc
mov
movl
mov
arpl
jle
popa
lods
repnz
fcomip
add
sub
cmp
repz
sub
xor
hlt
pop
xor
push
dec
shrb
inc
push
jae
int3
addr16
movsl
mov
shlb
sti
scas
adc
dec
popf
in
lock
cli
inc
pop
rcll
pusha
jb
loope
test
push
mov
add
add
mov
mov
push
in
pushf
jecxz
pop
xlat
push
xchg
movsl
cmpsl
pop
mov
add
pop
rcr
movsl
add
and
popf
sti
aas
and
mov
mov
push
lret
out
outsb
dec
icebp
cld
mov
add
hlt
popa
adc
dec
push
dec
dec
jg
inc
sub
aas
or
mov
xlat
nop
repz
daa
xor
daa
mov
jge
iret
not
popf
sbb
fs
mov
sbb
repz
dec
fisubs
lcall
jno
mov
adc
add
andl
jl
sub
lea
sub
xchg
dec
add
es
fdivr
dec
push
scas
lret
imul
sub
mov
mov
out
push
shll
dec
dec
movsb
xor
lret
xor
mov
or
mov
in
mov
jns
orl
sbb
insl
repnz
push
adc
mov
jae
push
xor
stc
arpl
in
cmp
mov
mov
pop
or
add
nop
xchg
inc
mov
cmc
pop
test
cmpsl
sbb
mov
out
mov
in
negb
pop
inc
push
pop
and
cmpsl
call
mov
sbb
xchg
imul
cmp
cltd
and
or
dec
out
daa
xchg
popa
mov
mov
fidivl
in
xor
xchg
lret
and
mov
push
mov
mov
jl,pn
mov
sbb
imul
das
cli
mov
mov
fistpl
cmc
adc
dec
loop
push
out
shr
and
loope
adc
test
mov
sbb
mov
cmp
pop
sub
fsubs
mov
pop
arpl
mov
inc
insb
dec
dec
jbe
xchg
push
fwait
xchg
shl
mov
ss
mov
xchg
faddl
dec
neg
stos
les
mull
jnp
outsb
cmp
inc
jg
adc
push
push
das
push
out
ret
cmpsb
pop
xchg
push
jno
jbe
cmp
inc
dec
mov
aam
push
sub
test
loop
out
aad
test
dec
xor
js
nop
dec
aam
sar
mov
push
xchg
push
push
push
popa
mov
imul
xor
pop
or
jp
shrb
add
pop
jnp
das
fcomps
xchg
pop
sbb
sbb
test
mov
jg
data16
mov
ja
aas
mov
mull
lock
test
mov
daa
push
adc
clc
or
adc
jns
bound
iretw
mov
sbb
add
shll
dec
jge
mov
sbb
sbb
inc
and
outsl
mov
xor
and
mov
roll
mov
icebp
and
fmull
push
insl
mov
cmpsl
cmp
dec
mov
lret
jecxz
inc
jno
cmp
call
jle
pushf
pop
or
adc
repnz
data16
and
sbb
mov
push
or
xchg
jnp
stc
repnz
pop
daa
mov
add
sbb
push
jo
data16
movsb
in
pop
ja
gs
in
sub
lret
inc
call
fs
inc
and
push
mov
mov
xor
jp
push
or
mov
bound
iret
std
mov
and
ss
xor
mov
mov
das
or
mov
xor
dec
xchg
pop
jp
inc
mov
jae
insb
test
jae
imul
jne
sbb
pop
stos
xor
cmp
fimuls
outsb
xchg
sub
lods
icebp
adc
sub
in
push
fisttpll
xchg
movsl
mov
mov
popa
sti
jmp
cld
sahf
mov
mov
js
adc
jp
mov
lods
adc
mov
push
push
xor
mov
mov
addr16
mov
mov
rolb
lahf
add
pop
mov
fwait
dec
mov
subb
orl
xor
push
push
sbb
insb
into
movsl
ret
stos
in
add
mov
jno
add
inc
ds
loope
sub
into
xchg
add
fcompl
fsubl
movsl
mov
mov
mov
enter
sub
pushf
dec
sub
add
mov
rcll
lods
mov
addr16
lcall
mov
adc
mov
mov
dec
xor
pop
dec
add
testb
repz
mov
dec
andb
inc
adc
aam
and
jb
dec
sub
shlb
add
mov
dec
stos
out
addr16
ficoml
mov
sbb
push
ret
or
dec
lds
inc
enter
xlat
lret
lock
or
add
testb
lea
les
rclb
mov
jecxz
insb
arpl
xor
adc
xchg
jge
fucom
xchg
dec
out
xor
push
mov
lds
pop
cmpsb
shrl
add
xorl
imul
iret
aas
xchg
dec
inc
mov
push
adcb
mov
jp
xor
or
insl
xlat
xor
lock
inc
dec
mov
cltd
xchg
outsb
cld
lock
sub
dec
xor
sarl
outsl
out
cld
push
fcompl
mov
mov
inc
mov
testb
repnz
cmp
xchg
aas
jns
dec
push
xor
mov
js
pop
dec
cmp
test
cltd
imul
int3
add
sub
xor
adc
adc
rol
inc
jmp
insl
cmp
repnz
push
sbb
jle
mov
dec
pop
hlt
xchg
xchg
lcall
rcr
stc
ret
adc
jle
mov
mov
adc
mov
sbbl
fdivl
pop
mov
addb
adc
or
dec
inc
adc
sub
mov
push
ss
icebp
in
add
addl
cli
cmp
shlb
push
xor
pop
lcall
nop
repz
and
inc
adc
sbb
nop
xchg
push
vcmpsd
stos
sti
ds
push
dec
pushaw
cmpsl
mov
cmp
enter
push
outsb
mov
or
popa
leave
aaa
das
jp
cmpsb
fadds
not
out
push
js
mov
and
adc
add
fwait
mov
pusha
push
mov
and
push
xchg
xchg
out
rorl
mov
jbe
in
sbb
sbb
pop
push
sti
mov
rcpps
or
pop
insl
addb
dec
out
adc
jne
out
std
leave
pop
inc
stos
pop
outsb
pushf
inc
imul
mov
jno
jo
cmp
push
repz
push
rcr
out
push
mov
mov
mov
inc
jo
sub
inc
and
pop
xchg
pop
lods
mov
sbb
dec
stc
mov
ret
pop
pushf
push
and
push
jb
or
inc
std
and
sbb
nop
repz
je
sub
dec
lods
lods
fs
push
inc
xchg
cmp
and
push
pushf
rorb
fs
ljmp
hlt
mov
lea
mov
inc
xchg
test
cwtl
outsl
test
dec
mov
push
cltd
aaa
mov
and
repz
scas
dec
jbe
ficoml
sub
jge
cmp
gs
in
inc
mov
loope
xchg
and
push
aas
xor
into
stos
pop
xor
push
das
mov
cmpsb
lods
jg
cmc
lcall
mov
xor
mov
pop
pushl
mov
rclb
add
les
xor
push
mov
mov
lahf
xchg
push
int
adc
and
inc
clc
mov
xchg
or
and
mov
fdivrl
or
mov
sub
sub
xor
pop
cmp
fistpll
decb
movsb
loopne
int3
or
cmc
cmp
cmp
pop
lahf
and
leave
adc
jge
movsl
dec
add
fwait
adc
jg
cmp
mov
iret
scas
test
inc
push
push
in
and
add
adc
std
push
iret
jge
rcl
jecxz
jbe
mov
jmp
fdivl
mov
xor
mov
adc
insl
cmpsl
lret
mov
xchg
push
sbb
stos
dec
push
arpl
loope
stc
int3
dec
add
or
xchg
mov
inc
cli
mov
mov
addl
stos
lret
push
imul
cmp
mov
xchg
mov
mov
int
inc
jne
mov
mov
mov
int3
xorb
xor
adcl
fadd
arpl
rcr
out
xor
lods
daa
popa
test
insl
sbb
orl
fmull
add
dec
push
adc
sbb
fiadds
mov
mov
add
sbb
jo
add
bound
xchg
lods
sbb
mov
add
mov
pushf
or
shll
fists
clc
pop
das
mov
mov
push
dec
shll
and
mov
adc
mov
mov
jb
loop
fcomps
sbb
jbe
out
mov
and
mov
pop
mov
fwait
adc
inc
inc
cmp
insb
xchg
out
leave
xor
jns
insb
pop
rclb
xor
adc
dec
inc
scas
adc
movsb
cmp
and
adc
sub
setb
xchg
cmpsl
mov
mov
sub
scas
mov
repz
xchg
push
fists
je
movsl
sub
xchg
adc
mov
pop
arpl
inc
push
mov
sub
push
int
pop
push
lea
sub
das
adc
pop
mov
in
push
test
pop
loopne
adc
fisubs
bswap
int3
lret
nop
testl
test
dec
jmp
or
sbb
inc
xchg
push
xor
jg
dec
jmp
mov
cmpsb
mov
pop
jg
daa
dec
pop
jecxz
sub
lods
mov
shrl
in
jp
int3
cmp
cmp
outsb
mov
or
jae,pt
xchg
pop
mov
fcmovnu
leave
ja
call
rcrb
fcoms
fsts
jb
fdiv
dec
or
lods
testl
push
cmp
enter
push
or
cmp
and
and
test
in
aaa
jle
cs
insb
ja
inc
ja
dec
fwait
xchg
or
add
sub
add
or
xchg
mov
fldenv
shrl
int3
and
jmp
adc
cmp
cmovp
aad
sar
addr16
call
mov
decl
sti
add
pushf
pushf
xchg
fcmovu
jl
mov
or
sub
and
fisubrs
mov
shlb
add
sarb
mov
scas
call
cwtl
sub
xchg
and
inc
es
cmp
fnstsw
loopne
in
xor
sahf
sti
arpl
mov
mov
aas
js
mov
pop
es
in
push
fisttpll
push
pop
sub
add
cmp
mov
push
dec
mov
mov
or
addr16
mov
hlt
or
jb
push
xchg
jno
sahf
bound
xchg
sub
sti
outsb
cmp
cwtl
clc
clc
in
sbb
mov
test
pop
loopne
mov
jno
xor
data16
leave
mov
ljmp
jns
pop
mov
pop
jp
sarl
fst
mov
mov
push
test
cmpsb
adc
fucomi
test
addl
je
inc
cmc
push
push
add
sub
fwait
or
sqrtps
out
stc
mov
shrl
mov
xchg
inc
ret
fwait
vpshuflw
fmuls
in
ljmp
pop
sub
insb
sub
or
ficoms
scas
imul
nop
ficoml
and
inc
pop
jo
test
mov
ficompl
dec
jae
mov
pop
rcrb
or
push
push
fnstsw
mov
fisttps
rcrb
movsb
test
mov
test
cmp
and
fs
pop
dec
pop
stc
mov
lcall
jle
in
and
insb
cmp
repnz
inc
add
mov
pop
ja
aam
pop
xchg
aas
jbe
insl
aam
int3
enter
jae
cmpsb
loop
pushf
dec
rclb
mov
cwtl
xor
pop
cmp
jp
je
add
mov
mov
jmp
or
jg
jb
dec
jns
jae
sub
loope
in
ja
xchg
jmp
jge
push
sub
call
push
scas
lea
mov
adc
test
dec
sbb
in
stos
sub
mov
xchg
inc
mov
imul
jmp
das
add
ss
test
roll
jecxz
push
lods
cli
mov
sbb
repnz
mov
push
shl
enter
push
lods
flds
outsl
lahf
inc
dec
and
test
mov
adc
pop
or
xchg
scas
out
push
out
icebp
push
push
iret
add
add
fidivl
xor
xlat
jecxz
sub
sbb
add
inc
adc
test
jmp
out
scas
jno
rcrl
xor
mov
stos
in
sub
dec
daa
cmc
sub
addl
not
test
lods
and
dec
and
cltd
add
into
xchg
sub
adc
inc
fldl
mov
daa
stos
jmp
cmpsl
rcl
movsb
insl
idivb
adc
mov
fstl
sahf
or
rorl
lea
cli
add
xor
ds
sbb
jmp
sub
xchg
sbb
adc
jecxz
mov
inc
in
mov
jg
sub
jne
add
pop
rolb
dec
jne
sub
mov
sub
pop
jne
scas
fdivrs
push
popa
aas
xchg
xchg
lcall
jb
daa
loopne
xchg
cmc
inc
shlb
adc
sbb
inc
inc
xchg
out
adc
repz
pop
insb
xchg
push
es
mov
mov
arpl
mov
pop
arpl
scas
add
lea
push
mov
or
xor
in
xchg
pop
test
mov
push
orl
push
nop
adc
add
inc
gs
cmovl
mov
mov
test
int
out
jl
shlb
aam
fdivr
mov
push
sub
ss
loopne
subb
jecxz
rcrb
idivl
or
gs
nop
movl
int
adcb
test
loope
in
cmp
sub
jle
mov
sbb
jmp
jl
pop
pop
lods
hlt
jg
ret
sti
daa
xchg
and
nop
in
fsubrp
in
xor
xor
js
outsl
loope
or
pop
xor
ret
sub
dec
fbld
sbb
icebp
dec
fadd
push
insl
aas
insb
sarb
xchg
dec
test
scas
in
adc
xchg
push
xor
mov
ficompl
jmp
lods
scas
dec
out
jae
xchg
xor
push
dec
jp
xchg
cmpsl
xor
sub
xchg
xorb
jno
test
lods
jl
mov
int
sti
cmp
mov
sbb
lret
xor
xchg
lea
push
cwtl
js
aaa
sub
mov
xorb
push
aad
icebp
dec
xchg
mov
shlb
out
jne
cs
and
jnp
incl
mov
jmp
mov
jmp
add
jo
sbbb
xor
mov
loope
mov
sub
sahf
imul
jo
sub
pushf
std
inc
fsubrs
imul
mov
out
pusha
arpl
cmp
xor
enter
in
roll
mov
mov
dec
xchg
push
fwait
xchg
mov
aam
lcall
cmpl
inc
loopne
sti
mov
leave
hlt
pop
lret
jl
or
xor
cmp
imul
arpl
jmp
xchg
jne
and
das
pop
xor
sbb
cld
rcl
push
movsl
loop
and
pop
xor
aad
int
mov
cmp
jmp
push
dec
test
rcl
scas
lahf
imul
cmp
ljmp
mov
jb
cmpb
add
lea
lods
inc
add
jo
inc
jmp
pop
out
jle
mov
inc
cmpsl
cmpsb
push
sbb
enter
stos
int
jecxz
pop
test
imul
xchg
mov
pushf
arpl
cmp
xlat
popa
pushf
push
add
xor
xorb
adc
inc
or
cld
scas
push
idivb
jne
mov
or
pop
in
xchg
sub
sub
insb
inc
and
xchg
icebp
lods
dec
add
jle
popf
sahf
sarl
clc
aas
add
ss
in
fbstp
pop
lret
or
xor
and
rclb
lret
cwtl
cmp
or
inc
ss
ret
pop
xlat
addb
jb
rcrb
cmpsb
push
and
cmpsb
sub
test
shlb
mov
jae
push
sub
scas
inc
mov
pop
xchg
std
jno
ljmp
jle
ja
jne
loopne
lods
mov
xlat
popa
pop
negb
gs
adc
jg
add
mov
test
call
popf
sbb
ja
cmpsb
daa
cmp
jns
xor
mov
mov
dec
mov
jns
or
push
jae
jo
nop
lods
popf
imul
sub
cli
push
enter
sarl
and
mov
popa
add
mov
xchg
ljmp
daa
and
int
cld
xchg
jne
or
lcall
outsl
jns
adc
sub
push
or
sbb
mov
hlt
push
loop
sub
shlb
in
inc
fcmovu
sarl
mov
jo
ss
flds
jns
xchg
call
jno
or
test
pop
cmp
mov
je
push
stc
sbb
sbb
cli
sti
lcall
push
mov
jb
push
leave
mov
push
fdivs
sub
rcl
mov
pop
mov
addl
inc
pop
iret
lea
push
mov
sub
pushf
mov
dec
sbb
mov
movb
mov
xchg
clc
adc
add
cmp
cmpsl
mov
jae
adc
in
cmpsl
insl
sub
cmp
sbb
and
jbe
rolb
xchg
lods
jg
repz
mov
xor
in
jge
fmull
pop
rol
push
ret
sub
lret
imul
cs
aas
fcoms
pop
js
and
fstl
cli
clc
adcl
dec
imul
mov
out
ret
mov
inc
fstl
mov
cwtl
movsb
push
in
int
rcll
sub
scas
leave
jbe
pop
adc
out
adc
push
in
add
xor
push
and
jmp
mov
push
into
mov
in
jmp
scas
scas
js
push
jg
inc
mov
pop
dec
ret
jbe
scas
jne
jl
popf
popa
dec
push
int
das
rclb
loop
xchg
das
loope
pop
je
pop
add
daa
or
movsl
insl
jne
pop
pop
lcall
dec
mov
addb
cwtl
ret
mov
xchg
dec
add
dec
mov
push
negb
add
mov
pop
jbe
pushf
add
cld
and
push
ja
jecxz
loopne
adcl
cld
jge
inc
sbb
and
outsb
cs
loop
and
ljmp
pop
test
cmp
fcmovbe
lret
lretw
adc
pop
push
test
imulb
xchg
fldcw
cltd
add
cld
icebp
rcl
mov
ss
jbe
dec
imul
add
fcomps
dec
add
scas
and
sub
sbb
mov
jmp
mov
mov
and
mov
pop
dec
cmpsb
push
inc
inc
jl
rclb
xchg
mov
sbbl
mov
repz
movsl
popf
xlat
xlat
sub
inc
pop
inc
dec
insl
xor
inc
mov
cli
or
push
int3
dec
cs
xor
push
gs
aad
jle
ret
cs
mov
push
movsb
out
out
sub
movsl
cmpsl
jmp
add
mov
int
movsl
repnz
gs
dec
jbe
jp
sub
mov
mov
cwtl
scas
fists
subl
jmp
test
mov
mov
arpl
leave
mov
push
mulb
xchg
hlt
out
xchg
lret
sbb
dec
div
mov
sub
rclb
xchg
xchg
shlb
mov
push
in
nop
outsl
push
and
in
sbb
push
loopne
and
or
xchg
jno
sbb
dec
pop
mov
div
xor
pop
push
cmp
pusha
lahf
sbb
movsl
inc
lock
loope
fcmovnb
adc
mov
bound
cmpsl
cwtl
into
and
jo
leave
jne
jb
push
out
or
das
push
loope
popf
in
into
test
jg
or
pushf
cmc
xchg
xor
add
mov
lds
outsl
rcl
pop
clc
decl
pop
sbb
mov
cmp
test
movsl
mov
sbb
pop
add
push
dec
outsb
std
je
test
jl
andl
repz
jecxz
xor
lods
pop
inc
cmp
rclb
aad
mov
lds
imul
adc
jno
or
pop
sub
adc
cmpl
ret
mov
clc
in
adc
in
jg
cmpsb
cmp
imul
das
lret
jg
jb
iret
mov
mov
push
mov
mov
and
inc
jecxz
sbb
in
lock
pop
cmp
mov
mov
sti
sbb
sbb
notl
adc
pop
dec
cs
push
or
les
jae
push
mov
jo
push
jp
mov
loopne
or
mov
pop
and
scas
std
cld
push
add
mov
push
add
ljmp
jge
lahf
faddl
pop
mov
xchg
sbb
xor
push
inc
add
rcrb
push
fdivs
mov
xchg
rcll
shrl
out
add
cltd
js
jnp
pop
mov
testl
loop
jecxz
dec
shrb
push
jo
jb
lcall
mov
inc
fadds
mov
rorb
xor
arpl
pop
fwait
mov
jl
mov
jmp
cltd
jg
inc
bound
jne
cltd
stos
push
out
pop
or
pushf
btcl
mov
pop
xchg
das
push
jae
add
out
pop
push
mov
loope
out
lock
out
fs
repz
in
neg
dec
mov
lcall
sub
or
es
cmp
ds
lods
adc
push
frstor
pop
mov
sbb
push
mov
inc
push
in
xchg
pusha
mov
inc
loop
push
push
je
dec
rcrl
push
sbb
test
scas
cmp
or
xor
sbb
lods
fdivl
sub
push
in
repnz
push
test
stc
mov
lock
jne
stc
insb
and
ja
xlat
adc
push
push
lea
lret
mov
imul
fldl
and
mov
cwtl
or
lret
lret
lds
aas
inc
jbe
lods
mov
stc
or
addr16
mov
dec
mov
jl
mov
cmp
pop
clc
mov
fstl
jns
push
inc
xchg
test
test
lds
jb
outsb
xor
xchg
xchg
jge
push
mov
jo
in
roll
fcomi
sti
lods
lcall
cmp
add
sbb
mov
xor
pop
mov
lods
adc
mov
jecxz
fxch
and
outsb
daa
pop
ret
cwtl
mov
add
icebp
mov
ss
and
fsubp
stc
lret
or
stc
cwtl
cltd
xor
xor
adc
xchg
jecxz
mov
add
setns
jae
xchg
cs
imul
leave
addr16
inc
push
add
xchg
data16
idiv
outsl
adc
xchg
xorb
cmc
ret
cmp
adc
popa
xor
imul
and
js
jns
lea
cmp
inc
dec
inc
add
push
xchg
add
xchg
pop
cmp
adc
in
xorl
pop
xchg
dec
nop
mov
aas
adc
gs
push
test
mov
add
bound
sbb
pushf
pop
mov
sbb
daa
sbb
std
or
xchg
rclb
es
cmp
mov
pop
pop
gs
xchg
lret
leave
cmp
lock
ret
fisttpll
scas
inc
jns
addr16
xor
push
dec
lods
movsb
mov
sti
and
jnp
cli
call
lods
stc
out
leave
ds
aas
sub
push
xchg
adc
mov
aaa
mov
sahf
pop
es
sar
push
dec
imul
pop
jns
fwait
str
jne
inc
pusha
es
add
push
outsl
add
sub
jbe
aam
jnp
out
sti
lods
cmp
rcll
imul
mov
das
mov
fsubl
pop
das
daa
pop
shlb
xor
adc
leave
aad
int
je
jbe
adc
rol
stos
dec
nop
scas
je
jmp
out
mov
fnsave
insl
fs
ret
jle
jbe
lret
jl
add
mov
test
jge
sub
pop
mov
mov
mov
mov
sub
scas
jnp
int3
shll
insb
cld
dec
aad
mov
ss
std
mov
les
jne
mov
pop
cmova
shlb
fsubrp
jae
push
idivl
std
push
les
icebp
cwtl
fcmovnu
je
icebp
pop
and
push
mov
cs
lret
xchg
adc
daa
sti
cmpsl
shrb
in
push
push
sbb
jp
mov
loop
scas
sub
int
xchg
push
icebp
mov
int
xchg
lods
xor
es
orl
sbb
and
jb
cmpsl
scas
sbb
repnz
adc
out
mov
int
sub
cmpsl
mov
mov
mov
sar
orl
mov
mov
pusha
xor
or
or
popa
stos
daa
ljmp
or
push
and
sub
cmpsb
mov
pop
xchg
add
imulb
cmp
dec
adc
sbb
aam
mov
outsl
xlat
ljmp
sub
mov
les
xchg
cltd
push
push
xor
xchg
jge
bound
fsubp
jno
sti
add
pop
xor
cli
out
mov
inc
dec
mov
bound
xor
xchg
dec
test
sti
fwait
cmp
sub
in
test
cltd
icebp
push
jb
popf
push
shrl
jns
push
sbb
arpl
jge
adc
testb
inc
insl
daa
ja
xchg
cmpsl
add
and
jbe
sahf
jle
fsubs
inc
jns
nop
and
cs
mov
xchg
mov
pop
inc
dec
sbb
loop
pop
jnp
stc
fstpt
fstpl
js
enter
sbb
orl
pusha
aaa
push
jb
or
push
test
daa
dec
sub
cmp
adc
mov
cmc
lods
xchg
sbb
jno
notl
mov
cld
testb
dec
pop
mov
and
sbb
pusha
pop
cltd
xchg
fwait
ret
test
cltd
pop
sub
scas
fldl
aam
pop
fnsave
mov
cmpsl
dec
icebp
cltd
and
ljmp
pop
mov
rcr
sbb
call
sarl
lods
mov
add
sub
shrb
inc
xchg
cmpsl
mov
inc
ret
add
or
sub
or
inc
add
adc
test
rclb
pushf
cld
daa
xor
enter
ret
cmp
pop
or
mov
adc
ja
jne
add
or
test
dec
insb
and
push
outsb
andb
sti
cmpsl
mov
xor
jo
jp
pop
fidivrl
aaa
sti
test
sbb
cwtl
sub
cli
mov
and
sarl
push
in
inc
pop
add
movsb
inc
ja
movsb
imul
in
popf
jae
mov
xchg
mov
lahf
pop
sub
cltd
fisubs
mov
xor
daa
out
daa
cmp
xchg
nop
push
mov
fs
pop
xlat
int3
movsb
or
mov
aaa
cmp
sarl
rcrl
push
jno
cmp
inc
add
sub
jmp
jne
cmc
jge
dec
dec
push
clc
fcmovbe
and
mov
pop
push
xorl
mov
pop
xor
xchg
xchg
mov
pop
outsb
loope
push
jb
pop
imull
jecxz
repnz
cld
popa
mov
je
dec
xor
mov
aad
cmp
inc
icebp
sbb
pop
push
sub
frstor
data16
mov
push
loope
imul
sub
cltd
lret
hlt
mov
lret
dec
pop
adc
les
movsl
cmp
cwtl
inc
push
stc
cmpsl
cmpsl
loope
sahf
xchg
sbb
test
xor
sbbl
push
pop
int
sub
mov
popa
scas
pop
sbb
dec
push
pop
pop
add
aam
dec
pop
or
xlat
xchg
xchg
add
lods
out
add
push
jb
int
push
jl
faddl
dec
ss
or
jne
popf
popa
leave
popf
inc
cmp
lds
and
mov
or
inc
mov
int
scas
push
gs
mov
pop
movsb
test
sbb
out
testl
loope
or
aaa
fwait
cmpsl
mov
mov
ljmp
xor
inc
xchg
xchg
mov
mov
subl
cmp
scas
adc
jge
xchg
inc
mov
int
out
ret
sbb
pop
ss
mov
dec
cwtl
loopne
shl
pop
fcomi
cld
jbe
xchg
mov
inc
scas
and
inc
mov
mov
clc
jmp
sbb
xchg
lds
fisubl
cltd
aas
mov
test
aaa
data16
or
pop
jo
xor
aas
cmp
mov
std
jle
insb
sbb
incl
in
lcall
push
out
mov
ja
xor
bound
and
sarl
adc
leave
mov
fisttpll
in
mov
decb
cwtl
arpl
cmpsl
push
lods
test
popf
jns
rorb
mov
icebp
ja
or
sub
push
and
arpl
daa
fcompl
and
and
inc
stc
cmp
push
push
aam
sub
jne
andb
rcll
xor
pusha
in
decb
shlb
shll
stc
lea
sbb
arpl
or
mov
dec
sbb
repnz
or
mov
in
aaa
mov
sbb
shr
movsb
shlb
imulb
aam
and
mov
and
fadds
xchg
ja
xor
dec
outsb
xchg
jg
inc
adc
jp
mov
push
push
shll
repnz
mov
insl
mov
js
mov
xorl
push
fiadds
mov
mov
push
jmp
fdivl
in
lds
jae
into
insl
es
dec
add
aas
add
repnz
in
xor
push
dec
loopne
or
mov
or
ficompl
jmp
int
test
add
pop
lahf
inc
jge
aam
jns
lods
adc
xor
fwait
add
add
sbb
out
jmp
loopne
test
imul
sbb
cld
negb
ret
and
xor
push
jle
fs
scas
lds
pusha
and
pop
and
sbb
dec
push
movsl
add
sbb
rcl
mov
dec
and
enter
xchg
aas
rorl
xor
xor
dec
mov
fwait
or
cmpb
lea
leave
idivb
dec
xor
xor
jnp
js
pop
jg
cmc
js
lahf
cwtl
cmc
xor
xor
sti
sub
mov
insl
popf
out
fdivr
aaa
ljmp
das
jo
jge
ss
inc
insl
mov
cmp
in
insl
mov
das
mov
scas
and
daa
adc
sbb
mov
stos
xchg
rcrb
fs
cmpl
mov
movsl
in
aam
dec
inc
sbb
int3
dec
dec
aad
mov
jmp
scas
leave
notl
popa
mov
or
push
frndint
pusha
ret
xor
push
jp
pop
leave
hlt
pop
lret
stc
insl
mov
or
insl
inc
pop
rcll
fs
out
adc
jg
lcall
in
or
imul
sub
add
sub
cmp
pop
popa
lret
push
inc
jecxz
jmp
ret
in
arpl
xor
call
pop
xchg
lahf
test
push
sbb
sub
aam
xchg
mov
mov
lds
insb
iret
shlb
fs
or
inc
sub
in
lock
push
mov
pop
cmp
andl
in
or
mov
fbstp
dec
mov
sti
sti
or
mov
push
stos
adc
nop
jl
fmulp
mov
dec
lret
test
sbb
fbstp
dec
inc
incl
into
js
mov
jmp
dec
xlat
adc
fwait
stc
sub
scas
mov
sbb
ffree
add
sbb
xor
sub
push
test
inc
popa
push
movsl
dec
ret
idivl
adc
mov
outsb
leave
push
pop
push
lea
test
je
fucomp
imul
dec
scas
movsb
sar
pand
cld
jb
or
sub
pop
daa
push
fmulp
clc
fdivl
pop
mov
dec
enter
xor
movsb
or
jl
jo
mov
and
lods
xlat
leave
lret
pop
cmp
mov
push
mov
repnz
sbb
lahf
mov
lahf
dec
dec
adc
mov
aam
rorb
inc
inc
sub
lods
mov
imul
dec
ss
lods
mov
mov
mov
xor
push
or
add
inc
nop
pop
mov
or
jne
jae
inc
imull
enter
iret
xor
dec
pop
mov
addr16
adc
jb
xor
and
push
sti
pop
xchg
xor
imul
inc
jmp
mov
push
into
push
adc
jno
int
inc
mov
filds
movsb
mov
mov
pause
stc
mov
fmul
stos
dec
mov
stc
aaa
mov
push
shlb
je
cmp
imulb
add
insl
imul
xor
or
pop
adc
lods
insb
xchg
jp
bnd
xchg
mov
scas
mov
xor
cmpsl
mulb
loopne
testb
stos
dec
mov
lds
sub
cmp
pop
mov
jmp
and
or
sti
loope
test
add
jb
mov
xor
popa
mov
fld
inc
push
fistpll
pop
xchg
dec
int
or
inc
mov
xor
lods
mov
xor
sbb
scas
int
xchg
jns
xchg
in
and
aas
outsl
jge
daa
sub
ss
push
push
adc
pop
mul
pop
push
dec
and
adc
int
inc
push
pop
scas
push
daa
xor
and
leave
sar
aad
jno
insb
add
ss
push
pop
push
jp
and
enter
jg
ljmp
adc
pcmpeqw
popl
cmp
jge
dec
xor
cld
dec
jno
loope
cltd
sub
mov
push
jg
xchg
sar
xchg
int
lcall
clc
sbb
das
cli
les
dec
pop
data16
in
test
rorb
mov
add
sub
shlb
fs
mov
cmp
popa
inc
outsl
dec
add
adc
xchg
push
sub
and
or
mov
stos
xchg
andb
test
xchg
jo
xchg
es
les
test
nop
jmp
xchg
fildl
jecxz
popa
or
or
mov
pop
mov
repnz
hlt
add
mov
and
xor
mov
sub
mov
arpl
mov
imull
jno
sti
pop
popa
insb
sbb
ret
xchg
xchg
pushf
out
ror
push
jo
dec
loope
sub
mov
mov
out
and
scas
xor
xorb
adc
int
lahf
mov
ret
popa
push
shll
faddp
push
cmpsl
out
cmp
or
popf
int3
loop,pn
ret
push
ljmp
cmpsb
jns
xor
les
sub
mov
aad
rorl
push
std
mov
daa
repz
and
mov
add
jno
ret
testb
rcr
jl
gs
fs
jne
push
pop
push
gs
inc
cmp
mov
xorl
push
mov
push
test
sub
out
arpl
mov
cmp
jb
jae
inc
jnp
js
ficompl
jb
and
dec
pop
into
cwtl
stos
fstl
push
push
xlat
js
xor
push
insb
dec
xchg
gs
out
ret
insl
in
addr16
cmp
adc
sub
jg
inc
mov
dec
xor
ror
shl
and
inc
cmc
pop
test
sbb
push
cli
mov
adc
aaa
shrl
and
inc
add
pop
imul
out
pop
jle
movsl
clc
and
mov
push
mov
arpl
iret
adc
and
xor
lods
push
add
push
sbb
nop
addr16
mov
mov
or
inc
into
pop
dec
mov
xchg
sub
repnz
mov
mov
jp
cs
sbb
push
aas
jl
xchg
mov
or
add
popa
dec
and
lds
jns
rcrb
pushf
jnp
push
mov
xlat
std
cmp
and
pop
jne
jb
dec
into
bound
and
adc
lahf
int3
mov
sbb
std
inc
fidivrl
and
fidivs
pushf
xor
adcl
inc
mov
add
je
xlat
jo
jnp
mov
aam
sub
dec
inc
push
add
popa
pop
nop
int3
hlt
fs
fs
dec
mov
divl
mov
push
rcrl
jle
lret
cwtl
mov
push
loope
push
clc
dec
inc
cmpb
sbb
push
imul
adc
pop
and
mov
cwtl
adc
pop
mov
ss
cltd
sub
lds
out
fcomps
jmp
hlt
xchg
aas
pop
insl
push
mov
jle,pt
jp
jb
fdivrs
dec
js
in
fcmovnu
jp
cmc
jge
push
add
jle
push
ljmp
mov
mov
or
mov
or
out
sub
popaw
adc
pop
add
lahf
ds
mov
or
fwait
add
adc
in
in
ret
fwait
std
or
mov
cmc
scas
xchg
jle
nop
mov
ja
or
leave
popa
and
imulb
es
xchg
repnz
adc
ret
xor
mov
ror
jo
mov
inc
mov
adc
dec
xor
add
xchg
mov
pop
das
ljmp
rorb
jns
push
iret
sahf
sub
imul
fists
xchg
jge
mov
loop
mov
jp
inc
and
aad
mov
sbb
mov
mov
sub
dec
out
jae
sub
pop
lret
aam
sub
mov
jl
enter
xchg
fucomi
add
int3
xor
push
xchg
dec
push
aad
push
inc
rcr
push
jl
or
pop
sbb
mov
dec
jbe
mov
pop
andl
je
sbb
dec
in
xchg
lods
nop
sbb
add
add
fadds
push
hlt
push
adcl
cmpsl
cltd
jle
popa
sahf
movsl
out
xchg
outsl
xorb
inc
test
xchg
jmp
iret
insl
lods
loope
aad
xchg
mov
mov
stos
hlt
nop
negl
dec
clc
jnp
out
addl
or
adc
in
dec
and
stos
and
inc
add
cmp
movsl
out
push
icebp
mov
stc
loope
xchg
mov
stc
mov
xchg
aad
mov
insb
fwait
enter
sbb
sahf
mov
pop
in
outsl
dec
mov
fnstenv
push
outsb
aas
les
xchg
pusha
mov
jp
jns
mov
stos
jecxz
sarl
add
xchg
out
xchg
cmp
gs
and
scas
ret
adc
jl
and
es
sbb
dec
jae
je
xor
cld
jne
cmc
adc
cmp
cmp
int
or
inc
sahf
mov
ja
fwait
inc
mov
insb
cmp
loop
sbb
lahf
pop
sbb
fsubs
jmp
clc
gs
and
jno
xor
xchg
orb
or
scas
fstl
cmp
aam
sahf
lea
dec
push
and
add
jne
out
pop
push
jno
sub
shlb
mov
jnp
int3
or
inc
mov
xchg
cli
pusha
insb
push
call
in
push
sbb
xor
outsb
pop
xchg
ret
sub
xor
roll
mov
stc
mov
dec
in
mov
movsb
push
std
out
test
jbe
adc
cmp
push
loop
pop
push
fcmovnbe
mov
pop
xchg
cmc
pop
dec
mov
rcrb
dec
mov
out
outsl
cmp
out
popf
leave
add
imul
add
lret
adc
je
movsl
aad
es
or
call
dec
cmpsl
in
inc
ficoml
aaa
cmc
pop
inc
inc
mov
mov
jo
daa
lcallw
js
add
jle
mov
jmp
add
or
push
outsl
inc
ds
out
or
cmp
das
xchg
pop
in
rol
lods
or
cmp
rcrl
mov
cmp
jle
leave
js
push
xchg
insl
xlat
add
jmp
addr16
lcall
mov
inc
int
in
ret
insl
pop
out
dec
jge
xor
xchg
popf
ja
popa
pop
pop
and
in
pop
adc
fidivrl
jnp
pop
dec
jae
popf
pop
iret
and
xchg
or
mov
lret
outsb
cld
sub
fimuls
imul
cld
fisttpll
adc
mov
inc
cmovge
popa
jecxz
cmp
adcb
insl
mov
fistps
std
movsb
mov
lds
push
adc
mov
cmp
jne
xchg
push
push
rorb
pop
dec
jne
jae
jle
psubsb
in
out
inc
xor
xor
pop
push
shll
pusha
and
jmp
ret
cmp
mov
mov
jle
test
cld
pop
fwait
adc
subl
push
jge
into
ret
ret
jg
pop
scas
arpl
cmp
sbb
mov
stos
out
jecxz
jnp
lcall
add
xchg
mov
in
mov
add
icebp
jecxz
or
sbb
sbb
clc
push
mov
xchg
mov
mov
mov
cmp
xchg
adc
dec
adc
and
xchg
pop
lret
adc
je
or
xor
push
shr
or
xchg
daa
and
mov
lea
test
pop
adc
jg
push
sub
in
imull
mov
xor
xchg
push
loop
pop
xchg
js
mov
mov
ss
push
fistpll
mov
jae
xchg
inc
aas
inc
pop
cmpsb
insb
lods
out
mov
test
xchg
jp
pop
aaa
out
mov
movsb
jp
fldenv
sbb
movsb
enter
mov
sbb
into
inc
mov
xchg
arpl
rorb
shll
ljmp
dec
add
pop
mov
mov
rclb
mov
adc
or
inc
mov
int
aad
fdivp
or
ret
mov
adc
pop
ja
mov
mov
inc
inc
les
mov
repnz
lock
xchg
adc
and
push
movsl
pop
mov
dec
scas
mov
or
xchg
add
test
fs
mov
xor
or
jo
icebp
in
mov
pop
mov
inc
fldcw
mov
xor
je
lds
pop
scas
cli
mov
scas
lds
and
movsl
dec
cmpsb
jae
pop
jb
shll
pop
lcall
lods
arpl
mov
loope
push
mov
std
insl
test
and
into
lahf
jae
jno
je
push
push
fs
pop
push
mov
or
out
pusha
out
sbb
push
mov
fwait
sub
jne
arpl
mov
mov
repnz
int
fiadds
ret
js
or
push
into
push
out
xchg
addr16
test
mov
cmpsl
jns
sub
inc
pop
ret
outsl
xchg
popf
fisubs
jecxz
mov
xorl
out
loope
out
pushf
dec
subb
cwtl
cli
es
mov
xchg
xchg
iret
cli
out
mov
std
push
rclb
mov
icebp
insl
xchg
insl
gs
ret
xchg
cltd
xor
stc
lret
or
xchg
clc
mov
sbb
ljmp
or
inc
inc
rorb
fildl
in
clc
xor
inc
inc
dec
fildl
pop
and
dec
in
aas
sub
xchg
cmp
sbb
adc
or
xchg
pop
loope
clc
in
or
cli
cmp
or
xchg
or
in
mov
addr16
jo
imul
xchg
rcll
push
sub
push
inc
mov
mov
cltd
adc
push
ret
mov
pop
add
dec
outsl
pop
divl
scas
lock
inc
ja
movb
pop
fs
sbb
sahf
pop
in
fsub
std
xchg
and
pop
pop
push
scas
jno
pop
xor
add
push
lret
bound
adc
addr16
inc
outsb
pop
mov
xchg
mov
push
jecxz
push
fldl
daa
lea
dec
add
repnz
test
out
jno
jl
addl
lods
push
cmp
or
push
pushf
or
xor
lds
push
movsb
mov
xor
xchg
push
mov
mov
and
push
xchg
xor
lods
jae
popa
xchg
xchg
mov
lds
and
adcb
lahf
out
iret
in
subb
sub
movsl
and
jp
inc
inc
test
sub
popa
dec
push
mov
pop
sub
sub
lods
jecxz
mov
mov
js
pop
dec
ja
das
pop
xchg
clc
lods
jo
repz
pop
sbb
pop
sbb
pop
mov
ljmp
aas
jns
xor
mov
mov
cltd
stos
xor
imul
xchg
inc
cwtl
iret
mov
add
jge
out
dec
out
push
mov
fcomp
jle
add
ljmp
daa
jno
stos
push
mov
hlt
jecxz
xchg
mov
mov
dec
mov
insb
pop
in
aaa
fistpl
test
fcompl
mov
add
push
out
jo
adc
pop
push
mov
mov
incb
dec
xor
stos
pop
cmpsb
sbb
mov
or
add
mov
jmp
push
pushf
in
int
rcrb
mov
ret
mov
jmp
nop
dec
sub
outsl
dec
sbb
or
mov
and
push
jbe
mov
dec
stc
cmpsl
xor
or
imul
enter
fs
push
cmp
sub
adc
fistl
mov
loope
xor
pop
adc
inc
pop
pop
daa
mov
ds
bnd
ret
or
loop
sub
dec
je
rcr
mov
inc
jmp
inc
jg
dec
mov
xchg
add
xchg
mov
outsl
lea
sub
andb
pop
or
pop
pushfw
bound
sbbb
leave
aad
orb
lods
andb
fwait
cmc
mov
popf
aad
pop
add
pop
inc
xchg
jbe
dec
xorl
or
enter
adc
add
cld
push
jno
fs
aaa
pushf
jmp
mov
call
cmp
jl
je
cmc
ja
mov
clc
jecxz
sbb
sub
pop
or
add
call
jno
xlat
mov
mov
xchg
jl
jb
insl
xchg
push
dec
jmp
sti
add
stos
in
into
sahf
andb
outsl
ja
das
cmpsl
hlt
iret
imul
cwtl
aas
ret
sub
test
ljmp
xchg
test
stc
mov
xchg
mov
xchg
mov
shlb
cmp
sarl
adc
jp
or
loop
insl
rorl
adc
pop
add
pop
xchg
sbb
dec
sarl
mov
repnz
lock
outsb
sbb
test
rorl
lret
fcmove
inc
daa
pop
daa
cmp
pop
bnd
jle
adc
in
jb
xchg
ret
rclb
mov
lcall
das
jne
push
push
jns
pop
fldl
int
add
inc
jge
mov
js
es
sbb
pop
cli
sbb
push
cwtl
fst
jbe
sbb
xchg
adc
in
ret
push
fstpt
jae
ret
xor
jge
int
aas
aad
dec
pop
popf
sbb
cmpsl
test
bound
dec
inc
jmp
test
mov
push
sbb
sti
mov
adc
jp
jno
ljmp
inc
inc
ficoms
jb
clc
mov
bnd
jne
sub
fbld
sub
loopne
sbb
xchg
test
xlat
push
ret
movsl
jbe
pop
aam
inc
jb
pusha
push
dec
out
daa
and
mov
dec
sub
out
push
mov
ror
outsl
push
push
ja
push
in
sub
push
jae
lods
pop
xchg
cltd
mov
mov
dec
loop
inc
inc
movsl
mov
mov
lds
ja
int3
arpl
sub
scas
jns
jbe
sahf
lret
xlat
xchg
push
stc
or
aaa
add
cmp
test
jp
cwtl
aas
inc
sbb
push
jl
mov
and
mov
sbb
cmp
mov
pop
ja
lods
ss
adc
add
mov
xchg
cmp
push
movsb
cmp
stos
popa
push
push
ljmp
adc
lods
mov
test
mov
mov
mov
xchg
inc
shll
into
cli
lea
enter
rcll
fsubrs
mov
sbb
mov
in
insb
mov
cwtl
adc
imulb
dec
popf
mov
inc
ss
and
aam
test
shrb
adc
and
in
ss
dec
sbb
test
jns
aas
mov
pop
cmpsl
sti
push
das
scas
dec
mov
test
mov
sbb
mov
xor
shrb
mov
rcr
int
sub
clc
popf
mov
daa
test
jae
xor
es
int3
or
pop
mov
in
and
and
cmpl
rcrb
jns
insb
mov
mov
loopne
je
inc
dec
sti
nop
sbb
clc
xor
roll
fcmovnb
dec
xorl
adc
in
mov
into
icebp
dec
mov
mov
adc
hlt
xor
andl
fsubs
inc
sbb
mov
mov
bound
in
mov
stos
xchg
push
and
xor
outsl
andl
cltd
adc
sub
sbb
push
sbb
aad
push
add
bound
lahf
cmp
shll
notl
mov
adc
push
add
xor
dec
call
jbe
inc
mov
xchg
mov
adc
insb
leave
adc
or
aas
data16
and
subb
mov
or
jg
xor
xor
cmpsl
pop
jno,pt
and
subb
mov
daa
test
xor
into
xor
int3
test
or
sub
loop
sub
out
jp
jp
xchg
test
push
cmp
ljmp
in
cmpsl
jle
xchg
int3
ja
insl
push
jecxz
dec
fucom
stos
jne
aaa
adc
cmp
mov
mov
in
pusha
call
jnp
mov
sub
stos
adc
mov
dec
push
movsl
jns
mov
jo
and
daa
popa
pop
addr16
idiv
lock
jae
jbe
xor
jle
cltd
cmp
push
inc
inc
movsl
adc
add
push
movsb
sar
leave
flds
xor
cmp
push
mov
pop
mov
dec
pop
add
xor
pushf
cmpsb
or
psadbw
or
js
loope
push
pop
out
xchg
fistps
sbb
mov
aad
sbb
cld
add
add
sub
pusha
dec
sbb
dec
ret
xor
jge
inc
jo
mov
loopne
out
push
ss
jmp
mov
js
ja
lret
pop
pop
call
ret
push
lcall
mov
or
jmp
imulb
mov
push
frstor
inc
mov
sbb
punpckhdq
cmp
jle
sbb
cmp
ret
in
xor
ljmp
mov
aad
popa
pop
inc
push
iret
mov
hlt
jmp
adc
iret
xchg
jb
out
loopne
and
sbb
imul
mov
push
pop
pop
je
shrl
in
mov
shrl
xor
add
push
mov
mov
mov
push
adc
adc
push
sub
imul
mov
sbb
adc
jnp
xchg
or
cs
jmp
xorb
mov
inc
mov
outsb
dec
lahf
or
add
shll
mov
xchg
mov
adc
jae
out
je
inc
ja
leave
insb
dec
psubb
xor
aad
mov
lds
dec
into
lea
mov
sub
lods
adc
imulb
cwtl
jbe
and
out
cmp
das
ljmp
jmp
out
or
out
lcall
adc
mov
into
loopne
fsubl
push
scas
sbb
dec
xchg
mov
xlat
bound
sahf
cmp
pop
jl
movsl
movsb
insb
orb
loopne
cmp
inc
insb
dec
inc
inc
outsl
jmp
jecxz
xchg
scas
adc
int3
aam
mov
cmc
xchg
shl
sti
dec
lret
mov
pop
add
pop
rcrb
adc
cmp
sub
sahf
sbb
mov
mov
mov
std
icebp
jb
sarb
dec
jecxz
cmpsl
popf
cld
aam
jne
andb
int
and
aad
jnp
dec
rcl
sbb
sub
sbb
dec
out
dec
rorl
ret
fwait
pop
adc
xchg
mov
adc
sbb
lret
arpl
loop
push
adc
sub
nop
loopne
repnz
mov
sbb
pmuludq
xchg
jl
or
or
ljmp
add
ret
lds
roll
aam
fnstcw
lcall
mov
and
push
lock
das
cli
nop
pop
out
pusha
movsl
insl
cmp
pop
sub
mov
jge
mov
enter
push
pushf
lahf
lods
xchg
lcall
faddl
jnp
inc
fildll
mov
insb
mov
daa
xor
sub
nop
dec
or
mov
shlb
pop
js
push
mov
jae
or
xchg
xchg
ret
mov
add
push
imul
or
hlt
pop
jecxz
lahf
xor
or
push
inc
pop
dec
inc
aad
dec
movsb
xchg
icebp
shrb
out
ja
in
mov
and
add
push
cmc
hlt
out
repz
inc
inc
loopne
stc
adc
popf
xor
cmp
stc
xchg
mov
pop
aad
add
stos
bound
dec
jb
or
outsl
scas
jbe
in
in
jb
mov
jle
std
dec
sbb
mov
pop
inc
les
xchg
and
fwait
xchg
lcall
mov
jp
adc
cmp
inc
adc
lret
es
ss
data16
xchg
jb
pop
adc
stos
sub
inc
and
daa
mov
stos
cmp
and
mov
nop
add
test
mulb
cwtl
mov
xor
fcomps
or
fdivp
loop
xchg
lods
push
in
pop
mov
or
adc
sarl
xor
out
push
or
fsts
xor
or
adcl
fdivp
in
decb
push
push
addr16
adc
add
hlt
mov
pushf
lahf
xor
push
pop
mov
pop
and
jb
rorl
cltd
sbb
sarb
sbb
outsb
nop
push
push
jg
and
xchg
adc
aaa
neg
add
sbb
mov
sub
fwait
sub
scas
add
and
test
inc
mov
addb
adc
ret
insl
sahf
std
xchg
mov
int3
flds
push
test
jno
inc
mov
nop
loopnew
pushf
adcl
pushf
loopne
add
inc
fiadds
pop
imul
movsb
push
fimuls
ljmp
xchg
imul
mov
mov
jecxz
iret
scas
ret
iret
icebp
shlb
loope
fwait
int
push
jmp
es
ret
outsb
xchg
inc
mov
cmpsl
int3
mov
mov
sub
pusha
adc
pop
mov
addr16
stos
cli
jno
outsb
lret
push
push
call
xor
jle
shrb
into
sbb
cld
das
pop
pop
ret
mov
and
mov
sub
cmp
push
aaa
std
and
test
sbb
add
fsubrs
xor
cmp
inc
cs
test
push
inc
test
inc
jo
mov
inc
jae
or
jle
dec
or
aas
jae
sbb
adc
jecxz
es
pop
dec
xlat
mov
icebp
fcmovnbe
xchg
pop
cwtl
pop
gs
dec
in
in
adc
test
mov
adc
cwtl
inc
mov
and
mov
stos
push
push
push
adc
ret
sbb
test
add
mov
cmp
fildl
add
mov
and
js
repz
sahf
movlhps
push
push
into
clc
inc
xchg
cld
inc
addr16
sbb
sahf
enter
add
mov
cld
or
lret
sub
push
mov
scas
mov
pop
sbb
loopne
mov
inc
add
incb
das
sub
lods
clc
sub
add
shrl
xchg
jecxz
shlb
adc
pop
cmpsb
mov
pop
ljmp
mov
jno
inc
pop
int3
scas
xor
test
cmp
mov
sbb
shlb
stos
repz
push
and
cltd
pop
dec
shlb
adcl
loopne
pop
adc
aaa
sbb
xor
out
or
fistpll
cwtl
add
pop
dec
adc
rcll
stc
sarl
pop
jns
and
xchg
mov
nop
dec
jecxz
loop
lods
fcoml
cmp
popf
jb
arpl
scas
xchg
mov
clc
dec
xchg
xchg
ds
dec
andb
mov
sub
pushf
cltd
stos
push
ljmp
into
pop
rol
mov
daa
xor
jbe
out
push
out
loope
stc
test
push
insb
mov
mov
filds
les
cs
jg
mov
stos
and
rcr
sub
dec
mov
fucomip
mov
sbbb
js
outsb
lock
andb
jno
push
adc
pop
pop
sub
aas
repnz
sub
pavgb
in
out
arpl
pop
xchg
inc
cmp
pop
loope
add
ss
ret
pop
and
mov
add
push
inc
int3
mov
mov
add
jmp
mov
add
cmc
repnz
sub
andb
sub
lret
xchg
push
cmp
ret
inc
cli
mov
xor
popl
leave
in
mov
movsl
and
jnp
and
or
fadd
sbb
and
test
mov
xor
in
inc
icebp
shrb
bound
pop
xchg
add
and
xchg
mov
add
in
mov
ret
lock
out
sbb
dec
mov
sub
out
mov
popa
jb
jp
fisubs
push
mov
mov
loopne
jno
xchg
dec
ss
xor
inc
dec
pop
xchg
inc
push
xchg
fildll
adc
or
pop
lahf
jo
fcoms
jae
mov
jl
cltd
in
lods
xchg
jno
pop
or
add
pushf
mov
push
stc
and
xor
lret
ja
out
push
popa
xor
mov
cmc
mov
sbb
adc
mov
mov
mov
inc
pop
and
sarl
push
xchg
ficoms
push
mov
mov
mov
mov
xor
int
leave
xchg
sbb
xchg
fwait
lods
xchg
ret
ja
and
pushf
out
loop
push
adc
jmp
pop
adc
mov
jle
mov
lahf
add
push
mov
orl
xorb
xchg
mov
int3
dec
or
lret
je
adc
out
imul
leave
xor
sub
sub
orb
mov
push
cwtl
and
xor
jg
or
inc
sbb
xchg
adc
jns
popf
xchg
pop
xchg
inc
xchg
push
movsl
out
je
dec
mov
lods
sbb
inc
mov
jae
push
mov
sbb
sub
shl
dec
mov
mov
addr16
mov
jns
xchg
je
mov
mov
mov
and
push
mov
xor
pop
aaa
lcall
pusha
shlb
lret
and
and
cs
push
pushf
rcr
mov
movsl
aaa
push
adc
mov
sub
xchg
outsl
mov
nop
pop
cmp
shll
popl
jo
and
sar
lcall
and
in
jns
fsub
js
enter
mov
push
lcall
adc
fnsave
mov
push
dec
repnz
repnz
jmp
add
or
push
loop
sub
lret
outsb
shrb
sbb
xchg
mov
sbb
rorb
out
jmp
dec
lods
cltd
testl
mov
xlat
pop
xorl
lahf
ljmp
ljmp
adcb
loope
pop
pop
or
dec
jmp
mov
push
push
lahf
out
sub
push
sub
lcall
popf
ffreep
pop
mov
test
mov
lea
jne
mov
jbe
xor
int3
pop
arpl
lock
adc
mov
mulb
push
fwait
xor
mov
fdivrp
data16
jg
es
fmuls
shl
push
mov
cmpsl
cli
lock
inc
mov
mov
push
mov
jne
gs
push
jl
sub
lcall
sbb
iret
sub
lods
push
jno
xor
fs
pusha
adc
jb
fnstcw
out
jp
mov
jb
repnz
push
inc
sbb
mov
mov
lods
xor
popa
and
xchg
das
cmc
or
pop
pusha
or
nop
mov
cltd
mov
fldl
orb
adc
in
mov
fstpl
imul
push
cmp
cmp
mov
daa
and
cltd
daa
mov
out
mov
cmc
push
inc
jb
pop
cld
fstps
je
sub
imul
jns
push
imul
xor
xor
pusha
xchg
cld
cs
fistpll
ret
adc
xchg
push
fsubr
fisttpll
xor
out
jbe
push
popf
sbb
test
rol
hlt
flds
pop
pop
mov
stos
test
mov
push
sub
cmp
scas
jg
pop
std
push
lock
test
sub
repz
mov
outsl
dec
xor
out
cmpsl
repz
ljmp
adc
scas
mov
jae
fisttpll
das
scas
mov
mov
popa
sbb
shl
xchg
aad
ja
movsb
mov
clc
inc
outsb
scas
insb
nop
enter
pop
mov
shll
sbb
daa
fwait
push
or
push
ljmp
imul
pushf
sbb
in
mov
push
cld
lret
sahf
pushf
sbb
cli
rolb
pop
mov
and
push
mov
cwtl
loop
test
push
inc
decl
jecxz
pusha
mov
fiaddl
xor
idivb
inc
cli
lock
and
outsl
fdivrl
xchg
fbld
stos
clc
mov
sub
mov
mov
inc
mov
jo
pop
xor
cmp
stos
sub
mov
jbe
push
lret
mov
sti
push
mov
hlt
enter
cmp
jnp
outsl
mov
lods
in
movsl
mov
insl
jae
scas
lock
lahf
mov
cmpsl
jo
jp
movsl
out
xor
lock
cmp
and
imul
or
int
mov
lret
mov
out
js
es
adc
stos
pop
std
sbb
push
loope
mov
push
cmpsl
inc
cmpsb
stc
or
and
es
loop
xchg
fcoms
push
test
sub
sbb
fildl
xchg
sub
iret
xchg
and
sbb
lods
pop
out
mov
int
mov
cmc
idivl
pop
clc
mov
add
push
jae
jno
fs
mov
loope
jp
pop
stc
mov
and
and
out
ret
test
jl
jle
mov
jl
xor
in
dec
aas
push
outsb
rorl
lds
inc
lea
and
loop
xor
pop
sub
mov
pop
push
aam
lds
inc
test
mov
das
fcomp
xchg
fmuls
fninit
fnstenv
mov
xchg
js
in
inc
jecxz
ljmp
jno
adc
call
fwait
into
clc
int
in
dec
xchg
outsb
outsl
push
in
jge
push
movb
cmp
out
and
jns
jmp
jge
loopne
adc
adc
pop
sarl
xor
or
dec
in
fs
pop
sbb
stc
xchg
mov
dec
sub
mov
lcall
xchg
aam
rcrb
jb
push
pop
adc
xchg
xchg
out
or
push
std
mov
rcll
nop
mov
in
pushf
mov
mov
sub
push
jp
sbb
jge
mov
mov
ds
int3
sub
jecxz
xchg
inc
sub
ja
sbb
popf
jp
mov
pop
push
movsl
ret
aam
stos
xchg
pop
cld
jp
xchg
enter
inc
and
insb
repnz
or
push
xor
xchg
fldenv
dec
mov
sbb
decb
std
adc
cli
sub
int3
scas
inc
mov
jb
icebp
jle
add
adc
hlt
out
arpl
adc
jb
std
inc
cmp
mov
dec
mov
out
jp
push
daa
dec
and
jmp
cltd
xorb
inc
in
rcrl
fisubrl
pushf
out
pop
cmpsl
addr16
leave
insl
adc
out
pop
data16
frstor
and
xchg
pop
gs
xor
jg,pn
loop
cli
dec
cmpsl
xlat
jbe
jno
daa
mov
iret
pop
and
arpl
das
jae
mov
push
dec
roll
and
inc
lds
in
lods
addr16
push
sub
out
lret
add
pusha
xchg
out
push
loopne
movsl
xchg
cltd
cmp
jmp
mov
adc
inc
roll
mov
mull
cltd
push
jns
and
jp
push
push
mov
mov
std
mov
and
outsb
stos
mov
pop
adc
push
pop
lret
shrb
ret
sub
fidivl
fisubrs
out
sbb
int3
repnz
lcall
lcall
inc
pop
jae
fsubrl
or
lcall
mov
xchg
movsl
int
addr16
jne
pop
loop
rcr
test
pop
jl
add
sbb
repnz
jb
and
enter
aaa
scas
nop
inc
or
jno
and
addr16
mov
dec
and
xlat
repnz
dec
mov
fwait
popf
xchg
int
jo
stos
sbb
jecxz
stos
mov
repnz
mov
and
xor
inc
lds
fnstcw
pop
stos
inc
loopne
hlt
adc
add
add
inc
scas
imul
stos
cli
adc
test
jne
pop
out
inc
xor
or
xchg
add
pop
lahf
mov
push
jl
dec
adc
push
cltd
sbb
sub
lret
cltd
pop
fmuls
fmuls
and
xor
in
pop
mov
imul
cld
cmp
fiadds
push
cmpsb
mov
rorl
sub
cwtl
sub
loop
adc
mov
pop
jne
enter
pop
jns
xchg
push
add
pop
out
mov
jo
xchg
nop
or
pop
mov
push
sbb
or
xchg
inc
inc
insl
pop
out
pop
into
push
pop
xchg
pop
cltd
jl
iret
ljmp
or
lds
fnsave
call
fimull
gs
xchg
jp
or
xlat
pop
xor
aad
out
scas
sbb
add
int
adc
pop
adc
fldt
lcall
test
jp
ja
mov
clc
sub
int
addr16
insl
leave
clc
ret
mov
cwtl
xor
push
int3
dec
lods
out
jmp
int3
adc
cmp
push
addb
dec
test
mov
dec
call
mov
add
mov
sahf
call
cmp
call
std
pop
sub
in
pop
inc
fnstcw
sbb
int
mov
push
mov
xchg
push
cmp
cmp
testl
scas
lahf
lret
ljmp
inc
push
push
out
mov
sar
iret
xchg
dec
shrl
sbb
jl
sub
fwait
jmp
xchg
push
je
sub
call
adc
ficomps
scas
inc
adc
je
lods
push
mov
insl
dec
pop
xorl
cli
div
lret
loopne
test
xchg
fisttpl
add
jae
inc
test
pusha
lahf
hlt
dec
pop
adc
cwtl
mov
icebp
xor
adc
andb
xor
lds
ja
arpl
sbb
jge
push
mov
pop
icebp
stos
cmp
jnp
out
sub
mov
sbb
lock
or
daa
out
jecxz
lret
cmpsl
or
fcmovnbe
iret
inc
ljmp
sbb
mov
add
mov
jae
pop
jge
in
in
loope
rorb
inc
inc
push
stc
jp
mov
inc
jo
lret
and
scas
repnz
fdivrs
fcmovnb
jns
dec
das
insb
fsubp
xchg
addl
xchg
daa
xchg
and
aas
push
mov
imul
aam
or
xor
mov
lret
push
sub
mov
test
sti
idiv
loop
insl
movsb
mov
sbb
or
mov
pop
xchg
loope
xor
sub
fs
dec
dec
mov
pop
fwait
sbb
xchg
icebp
pop
lods
mov
insb
mov
pop
push
repz
push
fcmove
daa
jns
popl
mov
mov
fsubs
jno
inc
js
aaa
arpl
add
orb
xchg
or
aas
ret
cmp
outsb
jne
gs
adc
dec
sub
mov
test
dec
push
cmp
push
addb
push
inc
negl
cbtw
je
rcrl
fiadds
mov
es
cltd
and
fsub
stc
sbb
inc
inc
jp
cwtl
ret
dec
pop
ret
mov
pop
popa
inc
stos
cmp
mov
nop
pop
mov
enter
dec
lcall
dec
idivl
rorb
lcall
mov
ljmp
out
inc
push
in
mov
xchg
enter
cmpsl
push
add
inc
imul
mov
in
mov
fisubl
aad
dec
pop
dec
cmp
mov
out
xor
repz
inc
ret
cmp
outsl
add
pop
cmc
push
dec
lods
push
sbb
sub
popf
mov
adc
mov
addr16
je
inc
stos
lea
cmp
pop
lds
push
inc
sub
push
mov
adc
movsb
xor
dec
sti
add
jns
movl
sub
inc
mov
jg
xor
lcall
out
mov
ret
sbb
lods
dec
insl
xchg
sbb
bt
xchg
hlt
scas
adc
mov
mov
xchg
dec
stos
or
setl
mov
add
mov
test
xchg
xchg
jns
and
and
arpl
xchg
jnp
mov
jae
cmp
mov
fmuls
test
pop
push
repz
sbb
pop
divb
xchg
pusha
mov
add
xlat
aam
jnp
addl
push
xchg
adc
stos
sub
imul
sahf
inc
clc
dec
or
int3
or
pop
adc
mov
fiaddl
orl
clc
and
jecxz
filds
sbb
divl
rolb
in
add
in
add
sub
loop
xchg
mov
clc
repz
mov
loope
cmpsl
or
ficomps
stc
jno
add
pop
aas
test
negb
inc
sub
call
mov
xchg
imul
push
arpl
sbb
pop
hlt
jne
sub
cld
je
mov
imul
lods
mov
pushf
adc
sbb
pop
cmp
xor
hlt
and
sbb
cmpsl
mov
outsl
sub
gs
inc
pop
jb
sbb
mov
push
pop
inc
xor
or
or
in
loop
enter
adc
jl
push
imul
push
xchg
movsb
xchg
cld
sbb
lret
mov
cli
sbb
ret
jns
xor
inc
sub
xor
roll
mov
lret
mov
das
out
xchg
scas
iret
push
sub
jecxz
hlt
test
fimull
inc
pusha
repnz
jp
in
std
cmpsl
popa
sbbl
jp
inc
lods
rorb
push
pop
insl
loopne
out
add
or
mov
and
jecxz
aaa
sub
outsb
decb
mull
cmp
lret
cmpsl
adc
js
test
in
int3
adc
hlt
int
mov
insb
xchg
testl
int3
pusha
mov
roll
cmp
je
stos
repz
imull
sub
sbb
rcll
and
dec
add
pop
cli
gs
std
jp
cmpsl
mov
pusha
pop
mov
mov
sbb
dec
and
repnz
nop
mov
mov
mov
mov
mov
or
mov
xor
in
add
lods
movsl
dec
and
mov
add
xchg
addr16
jne
or
nop
ljmp
mov
fsts
data16
call
mov
pop
xchg
fstl
lea
ret
repnz
push
inc
and
push
sub
pop
icebp
sbb
dec
push
adc
mov
ss
pusha
fdivr
xor
bound
push
je
addr16
sub
xchg
pop
xchg
lret
into
ss
fmul
push
mov
mov
adc
int3
pop
inc
imul
imul
mov
mov
xchg
mov
xor
aad
sub
mov
andnps
mov
arpl
test
fidivs
inc
imul
stos
add
mov
mov
sti
enter
mov
cmp
xor
pop
hlt
les
js
aas
sub
xorl
decb
cwtl
inc
dec
lea
cmpsb
movsl
sub
test
addr16
cwtl
lds
mov
xor
xorl
xchg
mov
mov
xchg
pop
fidivrs
cli
dec
cmp
mov
jbe
pop
xlat
mov
les
pop
mov
repnz
cltd
lahf
mov
fcomp
mov
cmpsl
cwtl
pop
rcl
jnp
adc
icebp
jnp
je
out
jp
add
xchg
dec
mov
nop
jo
sub
jne
or
mov
push
sub
mov
ss
mov
inc
cmp
fidivs
inc
in
into
mov
and
ds
pusha
sbb
call
and
mov
shr
add
rorl
jo
xor
mov
push
outsl
mov
lret
je
xchg
sbb
and
jnp
outsb
mov
mov
jne
lret
sub
push
or
mov
and
or
dec
xchg
jl
mov
jge
push
daa
xor
inc
fstpt
jb
add
jmp
out
xchg
jg
dec
or
nop
lods
ja
xchg
inc
mov
lcall
cmpsb
sub
sub
outsl
addb
cmp
nop
xchg
mov
fwait
dec
push
jno
add
mov
ljmp
xor
jl
subb
mov
clc
push
in
out
xchg
ret
mov
into
xlat
rorl
add
test
pop
sub
repz
cmpsb
mov
mov
stc
mov
jae
in
push
sahf
scas
jnp
je
mov
or
stc
subb
rolb
loop
out
xor
adc
loopne
sub
add
cmpsb
pop
dec
inc
cmp
sahf
js
push
test
int3
dec
sbb
test
xchg
loopne
mov
pop
iret
push
or
mov
mov
pop
mov
mov
mov
lods
inc
movsb
in
adc
flds
ret
dec
xchg
xchg
xlat
pop
adc
mov
leave
push
cmpsl
push
popa
xchg
xorl
aam
pop
call
out
and
ss
imul
pop
or
daa
test
dec
mov
cmpsb
dec
jle
outsb
enter
sbb
test
loope
dec
adc
jo
ret
jbe
pop
clc
jmp
adc
cld
imul
push
push
jmp
gs
leave
js
or
ret
mov
aas
mov
xor
push
out
loope
mov
es
les
loop
fucom
and
mov
sbb
jae
jecxz
fstl
mov
hlt
je
decl
push
mov
insb
and
dec
dec
scas
jle
dec
push
mov
mov
data16
out
cld
mov
fadds
add
jmp
pushf
pop
jmp
outsb
orl
xor
orl
inc
sti
mov
imul
js
pop
lahf
push
cltd
fidivrs
ss
mov
adc
jg
jnp
ds
sbb
fsubrs
lds
fistl
out
int3
push
cmp
mov
mov
push
scas
rolb
fcomps
sub
inc
adc
xchg
add
push
sti
inc
dec
loope
dec
stc
push
mov
ss
ret
cli
clc
shl
out
sbb
ret
mov
mov
sbb
mov
aas
fs
mov
mov
mov
inc
lahf
xor
fnstenv
xchg
sbb
inc
addb
fistpl
test
rcrl
adc
and
notb
pusha
inc
roll
cli
cmp
rcrb
cs
xchg
adc
cs
push
aas
push
cli
into
stos
push
repz
lods
addb
xchg
out
jmp
das
cmp
xor
cmp
leave
notb
popa
ficoml
ja
fidivs
sub
cmp
mov
insl
mov
and
jbe
inc
and
pop
add
xor
mov
cmp
sti
inc
xor
mov
and
fstps
insb
pop
cld
pop
pop
pop
aam
adc
das
inc
xor
out
ja
mov
jnp
adc
xchg
adc
aaa
jge
ret
orb
and
jg
clc
adc
xchg
cltd
das
or
xchg
repnz
or
xchg
vmovaps
out
stos
and
mov
xchg
xor
push
or
xchg
push
mov
jnp
lret
aad
iret
adc
cs
sbb
rcrb
inc
mov
mov
repnz
fldcw
addr16
arpl
mov
arpl
push
sub
cmpsb
adcl
adc
jecxz
loopne
adc
xchg
mov
rclb
adc
xchg
les
sub
movsl
leave
lcall
and
aam
pop
repnz
mov
xor
mov
mov
fs
dec
inc
dec
lahf
and
cmp
popf
lcall
dec
sub
push
xor
mov
daa
pushf
mov
sti
mov
js
in
scas
xor
rcl
decb
dec
lods
int
das
push
adc
dec
add
jp
insl
in
dec
mov
gs
or
pop
sahf
mov
add
addr16
push
ret
fistpll
or
mov
inc
mov
pop
mov
mov
ret
in
fildl
adc
pop
inc
pop
sbb
ret
cltd
or
cli
xchg
push
mov
push
lahf
popa
adc
dec
inc
imul
inc
das
lock
dec
je
mov
aaa
in
fidivs
jge
jno
sub
sub
repnz
and
enter
push
mov
push
mov
in
call
mov
sub
rorb
cwtl
jo
lods
inc
inc
dec
pop
icebp
adc
or
faddl
test
pushf
push
bound
add
inc
dec
xchg
idivb
cs
add
cmpsb
popf
hlt
push
cmpsb
mov
sarb
loop
rclb
testb
repz
test
fisubrs
int3
sbb
aas
cmc
adc
and
mov
fisttpl
jb
dec
xchg
xchg
ja
mov
mov
dec
test
ret
adc
push
nop
dec
movsl
jecxz
movsb
mov
push
jnp
or
into
aam
cmp
flds
je
ljmp
mov
add
push
add
clc
pop
and
mov
addw
ret
push
inc
mov
out
pop
xchg
pop
test
sbb
mov
andb
popf
repnz
adc
dec
mov
lods
pop
sbb
lea
xchg
add
ds
jmp
in
and
stos
inc
jb
add
stc
dec
mov
shrb
sub
and
pop
mov
in
insb
push
je
ficoml
sbb
inc
dec
clc
xorl
in
xor
or
mov
shrb
sbbl
mov
cld
inc
lods
pop
mov
push
shlb
fidivrl
cmc
add
inc
lds
push
loope
pop
movsl
add
pop
imul
mov
cli
lea
mov
cmpsl
push
inc
ss
jns
test
mov
xchg
lods
and
xchg
push
jl
xchg
insb
add
push
xchg
mov
pop
out
hlt
fcmovnu
mov
cmpsb
inc
scas
mov
test
daa
xchg
cwtl
arpl
mov
test
pop
dec
mov
push
stos
fabs
decl
or
pop
mov
cmp
jo
out
es
stc
push
sarl
jns
xchg
pushf
lret
sti
xchg
sbb
jo
inc
xorl
inc
mov
push
pop
add
cmpsb
pop
lds
out
and
cs
adc
add
not
cmpsl
mov
out
dec
scas
mov
xor
mov
pop
lret
push
mov
enter
cwtl
pop
xlat
ret
scas
mov
mov
sar
add
incl
divb
lret
mov
mov
into
or
cmp
inc
pusha
pop
hlt
xchg
dec
inc
jmp
iret
cmp
cmp
mov
nop
dec
cmpsb
loopne
out
fisttps
xchg
fsub
push
jb
pop
movsb
loopne
and
bound
cmp
outsl
cwtl
scas
jle
add
sub
jnp
mov
adc
divb
mov
mov
xor
into
movsl
push
push
mov
add
sbb
enter
cmp
xchg
push
and
fdivl
adc
pop
loope
imul
pop
and
shll
ret
mov
xlat
ret
ds
dec
xchg
xchg
lds
sub
jb
mov
mov
cmp
dec
stos
clc
les
pop
mov
test
fcmovb
or
add
inc
mov
inc
and
sti
dec
mov
cmpsl
sbb
jg
leave
push
sub
mov
iret
shrl
rclb
pop
sub
pop
test
sub
movsl
test
out
test
add
xorb
add
movsl
faddl
out
inc
out
pop
sub
cmpsb
jnp
cmp
and
shrb
ljmp
pop
lcall
mov
sub
int
test
daa
aas
or
cmp
into
adc
idivb
or
dec
mov
imul
mov
mov
stc
std
movsb
sub
ret
lret
xchg
inc
mov
in
gs
xchg
mov
dec
int
test
xorb
ss
and
xchg
xchg
mov
sbb
and
or
jne
repz
cmp
adc
subl
push
mov
dec
arpl
or
mov
insb
cmc
mov
test
jl
jb
jle
push
and
cmc
scas
sbb
or
xlat
push
test
pop
sbbl
inc
or
jnp
add
or
mov
xor
xor
stos
adc
mov
mov
mov
outsl
and
mov
mov
and
push
rcrl
xchg
fwait
cmp
xchg
sbb
lods
pop
arpl
jl
cmp
add
sahf
fucomi
pop
xchg
jns
xchg
mov
inc
test
mov
cmp
es
scas
ljmp
cs
fsubs
add
aam
leave
bound
jg
cmpsl
out
and
and
sbb
add
loope
aaa
xchg
xlat
clc
outsl
scas
jmp
xchg
mov
adc
mov
inc
xchg
xor
adc
sbb
repz
inc
mov
cmpsl
sub
loop
test
int
aam
data16
scas
in
adc
and
iret
xchg
or
xchg
sahf
xchg
or
inc
fisttps
or
mov
cltd
xor
xchg
xor
ret
inc
mov
sub
xchg
mov
lret
push
mov
mov
adc
push
scas
lds
ret
rcr
shrl
das
jae
outsl
into
scas
and
mov
sub
dec
or
xchg
inc
mov
sbb
bound
rorb
imul
mov
mov
movsb
jl
push
mov
ss
add
push
mov
gs
xchg
or
sti
ss
call
pop
sbb
scas
jg
mov
xchg
lahf
or
rcrl
fwait
xchg
stos
inc
adc
inc
sbb
add
lea
fsub
repz
dec
pop
add
xor
xchg
negb
add
xor
mov
pop
mov
fnsave
cmpsb
cs
lea
insl
lea
shlb
push
push
xlat
pop
fwait
xor
pop
lahf
xor
sbb
cwtl
mov
and
pop
inc
lahf
fcomps
push
imul
cmp
ret
loopne
in
es
ss
jmp
inc
lods
xchg
ds
ret
mov
out
jle
popl
lods
push
int3
cld
push
test
leave
add
sbb
inc
lock
out
pushf
dec
sbb
mov
lret
cmp
cmp
and
fimull
xor
mov
xchg
jns
ja
lock
in
inc
xchg
subl
ljmp
test
lcall
les
mov
push
pop
adc
lret
mov
jns
jae
xchg
sbb
xchg
je
jbe
pusha
jp
jno
shlb
push
pop
jo
leave
out
mov
cmp
add
test
int3
jecxz
sub
add
fwait
mov
lods
xor
outsb
adc
test
mov
mov
dec
int3
pop
sbb
sbb
or
je
adc
bound
ror
mov
pop
fdivrs
stc
shlb
sbb
popa
cmp
fnstenv
daa
leave
daa
arpl
or
push
in
xchg
dec
dec
jb
pandn
aam
mov
fisubs
add
rorl
sub
mov
dec
je
dec
pop
inc
mov
xchg
rcr
pop
jecxz
ljmp
xchg
movsl
lret
fcmovu
jbe
push
imul
xor
xor
pop
xchg
xor
jae
or
mov
cs
dec
clc
scas
fdivl
cli
repnz
mov
xor
inc
cmp
daa
xorl
scas
jmp
repz
jecxz
jg
ljmp
out
into
mov
shr
lock
lret
xor
push
xor
fwait
bound
clc
pop
mov
sbb
pop
in
arpl
push
push
or
pop
cmpsl
ret
xorl
fdivp
mov
xorl
xchg
addr16
stc
aas
stos
cli
test
push
jge
adc
cmp
mov
mov
mov
ljmp
mov
xorb
std
xchg
repz
and
mov
pop
test
int3
push
iret
stos
ret
pop
mov
pop
addr16
mov
push
pusha
popa
outsl
es
push
clc
lcall
push
add
cmc
rol
mov
xor
std
lds
inc
or
loop
cltd
je
divb
mov
incb
mov
jno
xlat
or
mull
cltd
or
mov
or
arpl
push
jmp
lods
mov
cld
lods
testl
adcb
pop
sub
jg
xor
int3
repnz
incl
sbb
fnstcw
xor
xchg
mov
sbb
les
push
ds
in
inc
repz
pop
insl
jle
mov
test
pushf
mov
pop
pop
enter
dec
pop
push
stos
jg
mov
fsubrl
sub
pop
mov
xorb
loop
inc
xchg
or
scas
aad
mov
fs
mov
aaa
mov
outsb
outsb
jg
dec
cld
fdecstp
clc
fwait
mov
fsubs
sub
and
mov
test
leave
popa
mov
dec
shrb
test
test
jp
or
stos
addl
je
fisubrl
dec
fwait
pop
dec
inc
and
ja
sub
pop
push
jae
shlb
in
mov
or
int3
aas
dec
js
fisubrs
jne
test
mov
xchg
or
cld
jns
inc
cmp
mov
push
loope
cmpsb
sub
ljmp
scas
push
daa
jb
push
dec
and
loop
push
addr16
mov
loopne
data16
sarb
sub
call
dec
out
sbb
and
jo
dec
aad
movsl
mov
pop
fimuls
jns
xchg
in
adc
jp
mov
fsubrp
pop
insb
pop
bnd
push
jns
repz
mov
lret
lcall
mov
fwait
mov
int3
mov
pop
inc
movsb
nop
mov
push
jp
pop
jmp
inc
sahf
hlt
xlat
hlt
frstor
ret
add
repz
mov
stc
test
and
adc
clc
int3
xchg
cmp
ljmp
aaa
ljmp
loop
fcoml
notl
adc
mov
mov
test
inc
adc
mov
mov
roll
les
mov
xchg
jno
outsl
dec
sub
jae
fimull
in
repnz
repz
mov
xchg
loop
int3
lcall
dec
xor
xchg
sub
dec
pop
les
inc
repnz
test
pop
sti
nop
daa
test
js
rcrb
push
fcompl
push
xchg
pop
xchg
pushf
push
cmp
lret
mov
adc
and
inc
mov
jmp
pop
push
jecxz
insb
pop
in
icebp
xchg
xchg
repnz
clc
dec
mov
xchg
popa
sbb
push
dec
out
jmp
jo
into
xchg
xchg
inc
cmp
push
loop
push
push
stc
sub
sbb
fstpt
pushf
es
test
incl
push
xchg
subl
ret
aas
hlt
repnz
mov
in
xchg
fisubrl
mov
mov
rclb
xor
outsl
mov
sub
enter
mov
out
mov
filds
or
xchg
popa
gs
xlat
mov
inc
sub
add
jp
xchg
mov
jmp
cmp
fsubl
dec
mov
inc
pop
leave
jmp
dec
xchg
stos
aad
sarb
shl
pop
je,pn
add
jge
cmp
int3
inc
in
pusha
cltd
leave
loope
lods
push
jmp
out
daa
inc
mov
je
fistpll
inc
outsb
inc
shlb
ret
cmpsl
inc
mov
rcr
sbb
mov
add
push
icebp
repz
imul
jecxz
stc
fucomip
add
frndint
popa
inc
mov
repz
or
mov
aam
stos
jo
insb
xchg
sub
or
mov
or
leavew
mov
inc
into
cmpxchg
out
out
lret
js
mov
adc
xchg
lret
jo
leave
xor
xchg
mov
ljmp
imul
add
ljmp
mov
mov
adc
sbbb
dec
xchg
rolb
popf
addr16
aad
jp
ljmp
adc
ljmp
adc
push
filds
imul
popf
int3
cmp
dec
add
in
aad
inc
rorb
adc
mov
fstpt
std
push
rolb
addl
aas
jno
je
cmp
inc
push
lret
ficoms
add
push
mov
or
fcomps
lea
dec
dec
push
pusha
inc
das
fildl
cli
add
xor
inc
xchg
fadds
or
push
popf
inc
cmc
sub
das
inc
add
std
scas
arpl
jge
sub
aas
jmp
jmp
test
push
xor
adc
mov
inc
icebp
sbb
mov
jle
pop
cmpsb
fimuls
ret
ret
cwtl
pop
push
xor
add
pop
arpl
fwait
lret
add
push
add
sbb
pop
ljmp
leave
push
adc
jmp
mov
mov
mov
sarb
ret
in
dec
push
mov
dec
or
push
xor
lcall
test
jns
pop
mov
and
push
push
jns
push
testb
add
inc
sahf
mov
pusha
jae
jg
flds
stos
and
lock
dec
jmp
adc
into
jecxz
stos
add
pop
iret
rolb
and
inc
or
es
sub
mov
pop
sti
stc
and
das
outsb
sub
fs
jae
sbb
inc
adc
jg
sbb
cwtl
jecxz
jae
adc
loopne
stos
loop
mov
push
frstor
pop
adc
ror
push
insl
sub
cs
sahf
add
outsl
js
pop
daa
cmp
fsubrl
add
js
xlat
pop
ror
cmp
aas
imul
mov
push
sbb
shr
aad
shrl
jl
push
xchg
or
inc
sub
push
cli
mov
inc
gs
dec
fs
pop
outsl
cmp
fldt
inc
inc
mov
mov
pop
mov
mov
leave
push
cmp
adc
mov
jmp
adc
xor
test
icebp
repz
pushf
rcll
mov
scas
adcb
dec
pop
xlat
addr16
adc
or
int
mov
sub
push
push
mov
shlb
inc
fcom
sbb
fcompl
inc
mov
sbb
pop
push
scas
xor
pop
or
sbb
mov
std
adc
cmp
aas
in
out
mov
mov
push
sub
adc
push
and
add
repz
mov
pop
addl
out
into
ret
sbb
xor
add
mov
cld
xchg
jle
sarb
fstpt
inc
jne
sbb
repz
and
mov
pop
lea
inc
sub
mov
sub
or
push
jae
mov
leave
cs
sbbb
and
test
cmpb
pop
popf
cmp
dec
push
cli
jp
pop
push
xor
xor
adc
in
push
and
cmpsl
mov
out
push
sub
subl
dec
fdivrs
push
jecxz
cs
and
aad
add
stos
out
orps
sub
lock
std
mov
or
mov
add
dec
jo
enter
shrl
mov
loopne
rol
push
jp
add
mov
sub
sti
adc
aad
inc
loop
mov
mov
bound
jb
dec
popf
push
and
mov
arpl
test
addr16
add
cld
inc
sti
mov
jl
outsb
or
xchg
xchg
movsl
jmp
adc
dec
or
add
ret
movsl
and
das
into
and
dec
fwait
out
cmpsl
pop
and
std
add
inc
mov
jae
mov
inc
push
push
ds
outsl
jbe
dec
or
mov
orl
fsubr
jae
xor
xor
lock
mov
aaa
dec
xor
xor
daa
dec
push
scas
jge
dec
xchg
loope
shl
mov
sbb
js
mov
or
je
xor
aaa
test
mov
mov
movsb
aam
sarb
cs
xchg
out
jns
or
cli
mov
lahf
repnz
or
jne
mov
inc
sti
pop
iret
cmp
mov
xchg
jle
bnd
inc
adc
hlt
xchg
push
loopne
ret
in
add
mov
xchg
pushf
inc
movsl
push
jge
mov
cmpsl
out
cwtl
sbb
cs
xchg
mov
inc
rorl
mov
inc
push
test
popf
lods
js
subb
jle
mov
dec
movsb
sti
scas
or
sahf
pop
jne
mov
sbb
aaa
mov
push
xchg
movsb
rcrb
jns
sub
jno
sbb
das
mov
negl
mov
nop
nop
mov
hlt
adc
les
pop
pop
mov
add
adc
int3
mov
ret
jae
test
out
pop
jo
dec
adc
adc
ljmp
je
xlat
cmp
jno
and
xchg
push
sahf
loop
out
mov
mov
push
mov
fidivl
test
sbb
repnz
pushf
shll
popf
shll
mov
cld
lcall
push
mov
mov
jl
or
and
outsl
jne
lret
push
loope
mov
call
repnz
and
add
cmp
out
in
mov
sbb
or
aaa
jae
cmp
pop
or
inc
outsl
jecxz
pop
sbb
lahf
iret
test
bound
jge
shrb
dec
pop
rcrb
andb
xchg
xor
jle
push
pop
cmp
push
cmp
jmp
or
mov
pop
arpl
popl
cmc
mov
outsl
or
push
or
mov
cmc
adc
fwait
add
cmp
ljmp
mov
cmpsl
fmuls
jmp
cmp
insb
stos
fcoms
andb
ss
add
popa
test
mov
inc
mov
inc
pop
std
gs
ss
push
adc
ret
testb
xor
mov
and
xchg
orl
mov
in
pop
repnz
sti
imul
shlb
insl
and
jge
mov
icebp
pop
xchg
in
xchg
cmp
fsubr
xchg
xchg
sub
mov
sbb
scas
std
cmpsb
imul
mov
and
add
sub
loopne
add
sub
in
push
sub
push
clc
inc
pop
sub
dec
cmpsb
mov
mov
arpl
xor
in
stos
clc
mov
sbb
out
sbb
daa
jns
leave
iret
int
pusha
sub
jns
rcll
add
test
pop
lods
es
push
dec
int
nop
cs
repnz
adcb
cli
sbb
or
sbb
adc
dec
fisttpl
add
xor
or
cmp
dec
std
xchg
cltd
sbb
mov
and
cs
push
pop
out
push
repz
pop
fcomps
lods
dec
and
stos
cmp
and
xchg
xchg
ja
dec
inc
dec
sub
xor
fs
cmp
movsl
mov
jg
dec
jns
cmp
ja
mov
cwtl
enter
and
call
mov
aaa
and
jp
cmpsl
xlat
push
or
mov
ficoml
and
sar
inc
in
mov
lods
or
ss
stos
jp
sbb
mov
push
mov
aam
sbb
sbb
add
insb
inc
adcb
shrb
or
in
xchg
insl
sahf
je
jg
or
fst
sarl
cltd
adc
imull
shl
loope,pt
jb
aad
jg
aaa
ds
cltd
mov
sahf
lods
dec
cmp
aad
dec
add
addl
cmp
fdivl
add
mov
pop
jp
dec
cld
dec
mov
insb
xchg
push
paddsw
jb
xor
test
adc
mov
dec
sbb
mov
fwait
xorb
faddp
add
iret
xchg
push
xchg
daa
js
testl
mov
ljmp
rcrl
jle
mov
mov
mov
cld
inc
sti
fs
cmp
xor
out
ret
push
xchg
xchg
lret
pop
movsl
iret
das
in
daa
mov
adc
xlat
add
dec
scas
sbb
sbb
sub
push
sub
push
inc
xchg
lret
pusha
call
imul
mov
push
insl
imul
insb
mov
aas
sbb
sub
insl
push
sub
inc
ljmp
dec
inc
fisttpl
push
push
xor
fstl
inc
movsb
pop
add
int
cmpsb
pusha
popf
dec
push
mov
outsl
jge
jmp
adc
cmp
jbe
insb
mov
sub
jne
pop
adc
in
mov
lods
push
stos
push
repnz
pop
pop
push
arpl
outsl
imul
mov
add
and
mov
imul
cld
sub
cmp
mov
push
scas
scas
out
out
fs
sub
aas
sub
add
imul
and
aad
in
mov
inc
ficoml
stc
jae
shrl
mov
inc
or
or
jmp
adc
negb
mov
mov
mov
inc
cmc
adc
jns
add
push
loop
adc
imul
mov
push
dec
add
push
dec
xlat
push
jbe
popa
fiaddl
lea
jns
movsl
add
bound
das
fs
aad
and
insb
lods
push
scas
xor
stos
imul
outsl
subl
sbb
or
and
addr16
aaa
std
adc
lock
mov
adc
pop
jmp
push
cmp
movsb
and
lret
add
imul
ficomps
cmp
scas
cmpsb
bound
sub
sub
popf
or
jecxz,pn
clc
sub
scas
xor
in
push
mov
dec
daa
cli
sbb
cmp
lret
adc
sub
xor
js
xor
mov
dec
sub
das
jl
adc
jmp
and
mov
mov
inc
or
mov
mov
and
inc
cmp
inc
add
or
push
xchg
dec
aam
out
cmpsb
out
test
mov
and
stos
adc
scas
or
dec
cmpsb
mov
cltd
mov
ljmp
out
or
cmp
xchg
lds
and
adc
les
add
ja
outsb
sub
pop
xchg
push
pop
sbb
lds
fisttps
cmp
jno
sbb
mov
pop
movb
ljmp
mov
lods
sti
arpl
mov
push
push
sahf
push
out
sub
es
adc
mov
adc
inc
dec
mov
outsb
push
add
mov
ret
xchg
orl
movl
push
xor
adc
mov
gs
jb
xor
inc
pop
sbb
sbb
int
pop
mov
lods
mov
stos
popf
sbb
dec
mov
and
pop
mov
jmp
xchg
xchg
lcall
pushf
ljmp
sbb
pushf
loope
and
pusha
mov
iret
lods
inc
pop
pop
fldt
outsl
aad
clc
out
dec
pop
mov
push
inc
imul
ss
rclb
jg
inc
pop
push
stos
cmp
sbb
xor
xor
adc
jp
jmp
in
mov
dec
sarb
and
sahf
imul
xchg
les
xchg
scas
pop
mov
mov
inc
cli
push
ljmp
mov
into
xchg
xor
aam
cltd
mov
push
sbb
mov
loope
je
push
andb
es
aas
add
or
repnz
cmp
popf
jo
call
fisttpll
int3
hlt
sub
fstpt
andl
ljmp
pop
sub
push
push
dec
mov
loop
icebp
test
fnsave
jge
xchg
subl
mov
mov
push
neg
cld
into
imul
aad
or
mov
inc
hlt
mov
stc
sti
in
pop
into
aad
out
push
aas
sbb
xchg
jnp
int3
das
sarb
dec
in
fxch
rorb
leave
inc
sub
mov
shl
add
push
xchg
cs
jb
aas
push
inc
jg
jae
inc
test
adc
in
xchg
into
addr16
movsb
inc
sbb
mov
xor
xor
and
loop
sbb
fdivrs
out
icebp
ss
in
outsb
sbbb
scas
mov
sbb
lret
sbbb
addr16
add
pop
arpl
aaa
mov
mov
push
adc
xchg
ds
gs
sbb
inc
and
jnp
imul
outsl
test
pop
cwtl
ret
cltd
popa
iret
xchg
pop
stos
aas
push
mov
int
mov
add
sbb
xchg
mov
adc
dec
and
nop
rol
popf
push
xorl
push
jp
iret
call
inc
repz
dec
jns
xchg
jo
xchg
loopne
xlat
or
jo,pn
insb
ret
jns
add
lret
xchg
and
mov
movsb
mov
ret
xchg
test
and
mov
out
inc
ss
mov
notl
daa
xchg
xchg
movsb
xchg
cmp
rcrb
decl
mov
and
xlat
test
dec
aam
es
rolb
fiaddl
popf
xchg
adc
xor
jne
insb
popa
xchg
leave
dec
dec
or
std
insl
and
jge
adc
sbb
jnp
clc
jg
bound
push
sbb
lea
xorb
adc
cli
jle
fs
xor
jmp
xchg
and
pop
mov
add
mov
bound
pop
add
ja
cmp
mov
adc
rcrb
xchg
lods
jno
orl
ret
add
jne
fbstp
inc
shll
push
ss
loopne
push
and
out
cmp
or
sbb
xchg
pop
bound
xchg
mov
sbb
fs
xor
mov
cmp
std
lahf
xor
pop
adc
mov
adc
lcall
stc
fmull
lret
pop
fidivrl
and
cmp
lds
xchg
and
jecxz
fistpl
mov
sub
stc
and
dec
push
pop
pop
mov
subb
push
dec
pop
cmp
jge
sub
cltd
subl
xchg
dec
roll
cmp
aam
into
cmpsb
stos
cli
enter
or
fldt
push
xor
add
dec
mov
aam
jae
mov
pushf
popf
ja
data16
lcall
sbb
test
in
sub
in
mov
push
mov
xchg
pop
mov
pop
cmpsb
jbe
ljmp
in
or
xchg
push
cmp
fstpt
iret
mov
sbb
lock
mov
xor
mov
mov
push
dec
movsl
sti
mov
gs
dec
in
jo
xchg
cmp
pusha
xor
inc
xchg
loop
inc
adc
xchg
ljmp
sub
dec
push
ud2
pop
aaa
shl
dec
ljmp
inc
push
loop
fcmovnb
fidivrs
pushf
mov
repnz
data16
loop
pop
or
scas
push
jne
inc
mov
bound
imul
lods
jmp
push
xor
or
dec
and
add
xchg
les
cmpsb
shlb
xor
cmp
fisttpl
jne
sub
fwait
repnz
pop
sub
jmp
cwtl
and
add
jbe
mov
aaa
jle
mov
call
in
push
mov
push
addb
or
cli
subl
pop
in
sub
lock
int3
adc
test
jo
xlat
pop
or
mov
jns
movsl
loop
or
xor
mov
push
mov
roll
jb
dec
jbe
mov
dec
jle
outsb
addr16
inc
cltd
push
scas
sbb
fbld
jl
call
xor
dec
inc
test
pop
xchg
dec
inc
cmpsb
fmul
imul
push
pusha
je
loope
imull
jecxz
sahf
pushf
shrb
setae
shlb
insb
ficompl
mov
fs
jne
sub
popf
xorb
mov
cmc
je
mov
mov
jecxz
imul
sub
in
movb
dec
xchg
cmpsb
push
lcall
add
xchg
addr16
add
xchg
jmp
orb
mov
fidivs
decb
pop
mov
lods
or
sub
roll
cmp
adc
outsl
popf
xchg
mov
pusha
jmp
aas
fmul
ljmp
push
dec
lods
sub
pop
cmp
sbb
pop
lret
sub
pop
out
sub
cltd
mov
lds
aas
into
test
jle
ret
mov
mov
ds
xchg
cmc
fwait
inc
push
pushf
jmp
es
sbb
outsl
pop
imul
jbe
cmp
or
push
pop
cmp
jl
inc
jl
pop
jae
sti
out
repnz
loope
insl
inc
lods
jp
jecxz
sub
stos
dec
and
mov
addl
flds
push
and
jmp
ljmp
adc
cmp
sub
mov
fcompl
rcrl
cmp
jo
in
pop
push
movaps
aam
jnp
xor
cld
or
jae
outsb
or
push
ret
xchg
imul
xchg
mov
cmp
insb
add
inc
sub
sub
test
es
jne
loopne
scas
push
outsl
mov
mov
adc
icebp
push
inc
lds
adcb
pushf
roll
movsb
js
xor
mov
fidivrl
dec
push
cld
xchg
cltd
xor
mov
xor
ss
fldt
scas
cltd
lcall
ss
sarb
ret
hlt
push
mov
out
jge
cmp
out
or
cmpsl
jae
jno
cmp
mov
cmp
xor
pop
in
cmp
hlt
std
sti
call
inc
mov
nop
pop
ss
cmp
js
push
push
fnstcw
clc
xor
fcmovnu
adc
imul
xor
mov
mov
xchg
sbb
loope
and
and
loop
sbb
dec
sbb
xchg
gs
sbb
sbb
sbb
or
inc
sbb
lock
jns
mov
sti
xchg
lret
push
xchg
aam
pusha
mov
pop
in
push
jb
int3
orl
pop
sub
mov
xchg
sbb
mov
add
imul
test
add
test
nop
pushf
leave
test
fcmove
fsubs
xchg
int
shl
outsl
repz
mov
sub
sti
mov
mov
cltd
xchg
xorl
and
or
pop
imul
adc
sbb
je
test
mov
push
add
mov
enter
jbe
mov
cmpb
sub
sub
cmp
stos
xor
pop
shr
cmpsb
shlb
in
imul
jp
imul
test
mov
xchg
add
lea
mov
pop
mov
add
scas
adc
pop
pop
insb
add
mov
mov
data16
rdpmc
movsb
jecxz
ret
fstps
stos
call
add
aam
lahf
repnz
cmp
outsl
dec
scas
mov
sub
test
dec
jb
outsl
mov
xorl
pop
jno
pop
push
fs
xor
sarl
jg
push
int
adcl
xchg
cltd
cmp
xchg
xchg
and
fisubrl
or
andl
pop
dec
lock
push
or
inc
sbbb
push
dec
inc
test
mov
inc
hlt
or
dec
pop
mov
aad
cmpsb
adc
fwait
scas
out
inc
jmp
add
mov
or
jbe
outsb
inc
cs
push
push
les
popa
mov
lea
adc
xor
scas
lock
sti
fcmovne
lret
sbb
inc
pop
inc
icebp
inc
fisubrl
mov
or
jne
jbe
aaa
or
push
insb
xor
leave
aas
repz
push
ret
adc
enter
clc
lds
pop
push
mov
sbb
mov
cmp
adc
push
repz
les
out
scas
jo
ds
sub
imulb
aaa
mov
hlt
mov
dec
jp
sub
in
mov
sahf
xor
sub
mov
lahf
lcall
insl
mov
cmp
scas
jb
push
fnsave
mull
inc
loope
xor
mov
cmp
mov
push
inc
test
int
mov
jnp
js
scas
stos
pop
sbb
pop
test
sub
sbb
mov
dec
adc
imul
cmp
jmp
outsl
ret
jbe
faddl
sbb
and
xor
mov
pop
mov
int3
jmp
xor
or
outsl
ljmp
jne
add
mov
jne
repz
inc
xchg
inc
orb
and
cmpsb
popf
pop
rcr
jne
push
lock
sbb
leave
aam
decb
inc
fcomip
mov
and
mov
jns
ja
cmp
filds
push
jo
in
cs
rcr
insb
test
ss
sbb
add
mov
dec
loopne
jnp
into
inc
icebp
ss
loope
leave
sbb
push
adc
pop
loop
lret
add
in
in
add
enter
int
aaa
and
divb
jne
ljmp
add
bnd
jecxz
xor
cmp
lcall
cltd
shl
jp
sbb
outsl
in
mov
pop
popa
jp
mov
cltd
and
mov
popf
jae
leave
and
or
fstl
imul
jg
pusha
and
cli
js
jbe
mov
add
jle
roll
cmp
cltd
cmp
in
and
into
pop
pop
or
pop
jae
imul
cmp
xor
mov
nop
repnz
sub
mov
mov
cmp
inc
or
mov
adc
out
pop
mov
jne
sbb
ds
mov
mov
stc
inc
dec
bound
xor
addb
lods
push
mov
jecxz
arpl
xor
mov
xchg
sbb
or
iret
sub
fmull
sbb
dec
xlat
jmp
jl
adc
lea
fcmovnbe
invd
inc
xchg
mov
sub
add
adc
pop
mov
xlat
mov
mov
dec
lods
rolb
icebp
sub
and
cmp
mov
cmp
outsb
cmp
arpl
mov
daa
mov
xchg
scas
push
pop
shlb
pop
flds
loopne
in
pop
int
cwtl
jb
lds
adc
insb
mov
ljmp
xchg
arpl
fistpll
or
and
dec
xchg
mov
pop
mov
ds
add
pop
inc
xchg
xchg
rol
aas
cld
jg
mov
sub
shrl
adc
or
add
mov
fnsave
out
popf
test
adc
dec
xor
in
outsb
mov
or
jl
mov
repnz
test
sarl
xchg
adc
in
mov
mov
inc
add
cmp
sub
cwtl
jbe
std
les
adc
or
fs
push
subb
ljmp
xchg
addb
xorb
outsb
xlat
add
sbb
shr
jo
inc
jge
pop
shlb
push
movsl
adc
test
aam
mov
insb
xchg
add
sar
clc
lods
pop
mov
fstl
pop
push
fcoml
dec
xchg
pushf
cmp
cmpsb
test
push
jo
lock
xor
add
mov
mov
mov
loop
stos
mov
test
into
sub
add
cs
sbb
xchg
shrl
sub
mov
dec
push
lods
push
repnz
ja
xchg
data16
push
test
cmp
iret
js
push
rclb
push
add
jae
fadds
gs
mov
lods
rcrb
xchg
nop
pop
xchg
mov
inc
and
icebp
cmp
fistps
bound
iret
sbb
mov
loope
jne
or
rcl
out
adc
mul
sbb
clc
jmp
inc
sub
lods
lods
inc
mov
xor
and
lahf
dec
sub
push
je
cmp
dec
pushf
pop
or
or
sbb
dec
mov
mov
bound
push
cmp
jge
gs
fwait
dec
ret
and
mov
and
mov
jae
repz
inc
cmp
sub
hlt
sbb
mov
inc
shrl
das
jb
pop
mov
pop
test
scas
in
pop
dec
push
lcall
ret
mov
jbe
pop
outsl
arpl
bound
add
repz
aas
scas
insb
mov
mov
in
push
das
inc
mov
xor
jge
dec
clc
push
sbb
adc
jge
mov
lret
mov
mov
adc
bound
js
mov
cmp
addr16
mov
daa
xchg
pop
pop
adc
stos
adc
push
andl
jl
mov
mov
pushf
ja
jne
pop
xchg
cltd
stc
sub
cmp
ror
or
jmp
stc
cld
je
pushf
mov
pop
loopne
mov
clc
decl
ret
shlb
loopne
cmp
aam
jo
xor
push
gs
dec
cmp
sub
enter
in
pop
sarl
leave
jns
jno
adc
fwait
jb
lods
cmp
sub
stos
inc
or
ljmp
test
cmpb
into
call
xchg
sbb
stc
lea
shrl
mov
rolb
je
dec
lods
mov
sbb
movsb
fcmovb
mov
jae
pushf
add
iret
and
pusha
insb
dec
adc
or
xchg
cmc
cmp
sbb
fstps
jb
mov
sub
adc
popa
push
xchg
pop
sti
ds
test
jmp
scas
popf
sub
cwtl
addb
jle
add
adc
insb
rcr
add
popa
sar
mov
lahf
push
inc
popf
mov
and
outsl
xlat
mov
into
add
aad
outsb
pushf
push
adc
ds
xor
and
outsl
dec
iret
fs
or
nop
popf
cmc
sub
jmp
inc
rcr
xchg
clc
inc
mov
leave
jl
out
xor
repz
mov
rorb
aaa
cmp
and
cli
mov
dec
rolb
call
in
iret
xchg
add
fisttpll
and
rcl
stos
xchg
dec
xor
mov
sbb
test
mov
rorb
and
or
into
sarb
ljmp
add
cmp
cmpb
xchg
push
out
lcall
dec
sbb
lock
bound
xlat
jecxz
frstor
or
push
ja
out
jg
pop
mov
xlat
xor
mov
int
leave
adc
stos
cli
and
jecxz
dec
popf
cmovns
out
addb
jnp
dec
add
sub
mov
cmp
sbb
push
push
dec
cmpsl
jae
or
inc
pusha
xchg
mov
notb
movsl
dec
sub
sbbl
mov
adc
lahf
aaa
ljmp
int
das
negl
cmp
int
xor
jmp
adc
xor
cld
test
lds
out
pop
sub
cld
mov
popa
mov
adc
cmp
xchg
cmp
ja
fnstcw
aaa
pop
hlt
adc
and
cmp
inc
adc
clc
mov
adc
xchg
bound
xor
xchg
ja
aaa
jbe
pop
dec
mov
add
jp
xchg
xor
sub
sub
pop
sbb
jae
add
stos
xchg
jo
loope
mov
push
cmp
jno
ret
das
clc
mov
fst
pop
sub
inc
jge
aad
mov
lret
xor
rorb
cld
sbbb
mov
cmp
pop
push
enter
sbb
addr16
fdivrs
mov
mov
movsl
push
xorl
jecxz
lods
jno
pop
sub
push
jmp
je
xchg
pop
inc
sub
imul
rclb
add
out
mov
xorb
push
inc
dec
lahf
dec
iret
stos
sbb
cmp
fisubrs
push
cwtl
cmpsb
fwait
push
jns,pn
or
enter
xchg
and
neg
stc
pop
pop
or
sti
repz
push
hlt
inc
out
pushf
xchg
movsb
or
lcall
add
xor
and
mov
sti
xor
inc
stc
or
inc
mov
dec
je
imul
pop
ss
aas
sub
idivb
mov
dec
and
sbb
shl
sti
cs
adc
or
clc
jmp
je
or
and
add
add
xor
sarb
sar
sar
add
fwait
lock
mov
test
mov
xchg
dec
imul
dec
jle
in
cmpl
add
outsl
inc
iret
shlb
rcrb
inc
xchg
sahf
cs
lea
pop
lea
pop
arpl
mov
addr16
jl
sub
into
jmp
xorl
pusha
sar
xchg
mov
adc
call
cmp
jne
mov
daa
jmp
in
stos
mov
lret
leave
cltd
lods
xchg
out
push
movsl
sub
xchg
lret
mov
push
nop
and
mov
add
rol
test
jb
mov
xor
add
push
add
lahf
int3
mov
fwait
aam
iret
mov
lods
jmp
mov
repnz
imul
ret
cmp
ljmp
movb
ret
adc
cld
or
nop
rorb
cmc
cmp
ret
aas
fcoms
repnz
mov
pop
sbb
sub
lock
cltd
mov
ret
test
cwtl
mov
xchg
orl
push
lret
jbe
push
sub
ss
fwait
and
shll
push
js
rcl
inc
stos
jle
xor
push
fwait
pop
add
inc
fwait
xchg
xchg
xor
sub
push
or
sbb
enter
or
out
kmovd
ret
test
ljmp
mov
cmp
mov
fs
loope
sbb
sbb
shlb
test
call
pop
mov
adc
fsubrl
std
movsb
pop
mov
adc
and
xchg
aad
cmp
cli
notl
or
jl
adc
outsl
aad
lahf
iret
test
dec
sbb
jge
out
mov
repnz
mov
sbbl
add
int3
sub
rcrb
push
shlb
mov
dec
stc
cmp
hlt
cli
fadds
aad
xchg
add
mov
arpl
or
adc
sbbl
int
jnp
inc
xor
sub
sbb
sub
push
dec
aaa
jne
adc
mov
jne
adc
jns
lcall
repnz
mov
stos
xorl
pop
jl
popf
sbb
adc
int
insb
xlat
pop
pop
cmp
mov
push
mov
or
repnz
pusha
or
nop
clc
jnp
daa
jno
pop
dec
push
adc
sub
test
xor
mov
mov
nop
or
mov
mov
mov
sbb
sub
es
sahf
add
rcll
pop
inc
test
dec
out
cmp
mov
hlt
sbb
inc
ja
push
mov
push
mov
dec
mov
add
minps
mov
dec
fiadds
pop
or
inc
sbb
or
mov
and
or
mov
xor
ja
xor
pop
xor
out
mov
daa
xchg
mov
xor
mov
imul
or
ljmp
shlb
in
pop
xor
lods
jg
sub
int
lret
mov
jno
out
cwtl
push
orl
loope
xor
mov
insb
cld
es
dec
push
outsb
jno
sti
inc
popf
fbld
mov
adc
addr16
leave
or
jecxz
rcrl
xor
sub
adc
pusha
lds
out
test
scas
sub
jge
jmp
sbb
xor
cmp
pop
xchg
dec
add
movsb
xchg
addr16
push
xchg
dec
push
mov
gs
pop
add
add
das
jl
std
movsb
push
mov
sarb
pop
push
push
push
or
sahf
arpl
push
aad
inc
pop
aam
lods
lods
pop
outsb
cmpsb
add
and
adc
xchg
and
push
sbb
mov
xor
jle
xor
js
aas
pop
xor
cmpsl
xor
mov
inc
std
std
xchg
js
pop
int3
outsl
pushf
insb
fstpt
add
in
movzwl
test
dec
fisubrl
hlt
jbe
jmp
ja
sbb
sar
movsl
rcr
pop
lcall
pop
andb
push
lret
shrl
or
and
in
sub
xchg
inc
test
xor
add
nop
xchg
dec
xchg
lahf
sahf
aad
popa
and
shlb
mov
popa
jg
sub
in
movsb
ss
push
mov
xchg
push
jns
popf
jg
stos
in
rcr
cmp
sub
inc
push
test
arpl
loope
pop
mov
push
sub
pop
sub
fisttps
adc
xchg
mov
loop
fstl
and
test
add
pop
pop
iret
pop
data16
js
call
pop
arpl
jle
sbb
enter
push
xchg
mov
jl
pushl
xchg
outsb
hlt
cmp
adc
pop
gs
sub
add
xor
pusha
xor
lods
jnp
scas
xor
mov
lret
scas
in
shll
push
mov
dec
lock
dec
in
push
in
scas
ja
pop
dec
mov
jns
mov
scas
dec
subb
test
inc
and
or
mov
push
jb
add
into
add
jg
xor
mov
scas
mov
or
mov
outsb
or
xorl
ret
pop
les
push
lahf
lret
movsb
adc
ja
aaa
xorl
or
jg
pop
pop
divb
inc
cs
pop
es
add
jno
scas
fildl
xlat
lret
add
and
flds
mov
out
pop
sbb
or
or
cmc
sub
lret
mov
into
dec
adc
push
sub
mov
push
mov
dec
jbe
adc
sbb
fcompl
fists
cmp
imul
add
dec
clc
ja
jmp
test
loopne
in
sub
jp
sbb
inc
push
xor
sbb
stos
shl
xchg
nop
xor
shll
test
dec
sarb
in
sti
enter
aaa
adc
movsl
inc
dec
test
pop
or
push
lods
jmp
mov
negl
pusha
ljmp
push
lds
xchg
lods
ljmp
outsb
repnz
mov
ja
adc
sub
xchg
js
xor
jbe
or
cmc
es
push
and
stos
xchg
scas
cltd
mov
or
pop
ret
add
mov
jnp
stos
inc
jle
mov
sbb
adc
mov
scas
or
mov
sub
jnp
mov
out
mov
adcl
cld
xchg
xor
add
hlt
xchg
out
adc
cld
mov
or
mov
hlt
lret
cmpsb
xchg
jae
adc
inc
in
cli
xchg
insb
gs
mov
cmp
mov
shrb
lret
faddl
jmp
cmc
dec
sub
and
jmp
cmpl
mulb
or
jmp
inc
pminsw
mov
addb
movsb
pop
in
leave
mov
mov
mov
jl
ja
jno
jmp
mov
roll
movsb
mov
xor
and
xchg
mov
shrb
test
cmp
mov
movhps
mov
push
add
test
sub
les
mov
jle
xor
push
inc
inc
fld
das
dec
les
mov
pop
inc
outsb
xchg
or
mov
mov
mov
loop
cmp
jecxz
fld
xchg
stos
nop
mov
test
test
sbb
add
sub
push
fdivrl
mov
cs
mov
mov
data16
pushf
mov
inc
stos
pusha
gs
mov
cmp
inc
jb
test
sbb
ja
sbb
arpl
rorl
psadbw
loop
shr
mov
inc
and
js
ja
sbb
xchg
bound
mov
pushf
mov
mov
mov
test
mov
or
inc
xchg
es
rcll
xchg
xorb
ficompl
nop
arpl
sbb
test
mov
sbb
xor
mov
mov
add
shl
icebp
xor
stos
inc
fdiv
dec
lods
mov
push
push
push
in
leave
mov
test
cwtl
sbb
jp
fwait
mov
idivb
push
inc
adc
aaa
cmp
test
mov
cmp
xchg
in
xchg
jno
in
mov
sbb
lea
add
inc
stc
fcmovne
ret
cmp
pop
pop
scas
cmp
movsb
in
add
sub
fs
jns
loope
mov
add
aam
rorb
and
mov
inc
push
inc
ja
cmp
inc
dec
dec
sub
test
stos
idivb
movsl
adc
outsl
movsb
lods
jle
scas
in
gs
pop
pop
xor
pusha
or
xlat
fs
push
fwait
mov
push
jl
loope
sub
addl
add
mov
cmp
push
xor
dec
imulb
insb
mov
inc
push
mov
push
mov
inc
daa
fildl
aam
adc
hlt
fmull
add
push
fcompl
and
imull
adc
hlt
lahf
mov
add
push
icebp
scas
icebp
jle
cwtl
sahf
xchg
mov
jle
idivb
push
pop
add
pop
mov
fidivrl
jg
iret
enter
inc
out
adc
mov
xchg
adc
ret
inc
inc
cmp
adc
aaa
cmpsl
mov
pop
or
out
push
inc
sti
testb
add
arpl
sahf
out
cmp
sbb
inc
ds
arpl
cmpsl
std
imul
inc
pop
jo
jae
jg
inc
mov
xchg
popl
sarb
and
dec
je
sub
cmpsl
ljmp
je
popf
sub
mov
mov
and
mov
sub
add
dec
mov
xchg
arpl
cmp
dec
scas
cwtl
or
cltd
jnp
mov
dec
cli
xchg
insl
add
orl
add
test
cli
adc
xor
mov
js
enter
jns
filds
pop
xor
stos
daa
shlb
mov
cmpsl
scas
pop
and
sti
test
cli
outsb
imul
jp
fcmovnb
push
inc
inc
fildl
and
icebp
or
bound
clc
test
mov
xchg
in
in
fs
jb
lods
xor
pop
and
int3
jb
xchg
cmp
dec
test
ficoml
cltd
data16
mul
jns
xor
cmp
sbb
mov
pop
lret
or
test
push
movsl
xor
xor
push
inc
mov
pop
xor
test
in
xchg
push
cli
loopne
testl
mov
mov
xchg
sub
add
cmp
push
test
or
rclb
mov
mov
cld
in
sarb
test
xor
jno
in
jne
mov
cmp
rorl
inc
mov
add
push
and
jge
adc
and
rorb
and
fidivl
cltd
push
jns
sti
sbb
jp
flds
add
gs
mov
jle
sar
jp
jecxz
andl
outsl
pop
sbb
stos
mov
xchg
loope
jns
push
lods
outsb
lahf
dec
sbb
idivl
pop
cld
jp
cltd
icebp
sbb
addr16
out
mov
aad
mov
repnz
call
into
rcrb
dec
ret
or
mov
xor
xchg
mov
push
out
js
aas
orb
xchg
or
dec
insl
hlt
push
adc
test
mov
stos
xchg
repnz
int
pop
ljmp
addr16
dec
sub
cli
mov
pop
mov
cmp
push
or
leave
jp
lcall
int3
cld
sub
and
scas
push
fwait
mov
xor
add
sub
xchg
jns
jecxz
rclb
fsubrs
xor
outsl
test
adc
jno
in
cmp
pop
push
mov
sbbl
aam
mull
adc
lock
sub
arpl
push
push
push
js
in
xor
fwait
xchg
imul
inc
mov
movsl
repnz
cmp
jp
add
xlat
jno
int3
cmp
pop
or
xchg
mov
loope
scas
sarl
jmp
stos
mov
gs
test
sub
dec
dec
ljmp
cli
arpl
jl
popa
and
mov
jmp
inc
call
jae
adc
incb
mov
decl
stos
mov
xlat
js
mov
dec
inc
fiadds
insl
cld
xchg
cs
adc
mov
dec
mov
cmp
cmpsl
scas
mov
jno
xor
hlt
aam
push
sub
xchg
movsl
out
repnz
cmp
shrl
stos
jae
push
cmc
mov
jecxz
cmp
shll
lds
sbb
fstpl
push
and
movsb
pushf
xchg
add
inc
in
repnz
jne
mov
sti
cli
cmp
sbb
push
add
clc
jmp
enter
inc
or
sahf
movsl
inc
xor
jbe
popf
aad
iret
nop
sbb
aaa
adc
insl
push
push
inc
mov
adc
inc
or
xchg
fldt
lods
jecxz
mov
jno
fsubp
verr
pusha
fs
push
lds
xchg
xor
xor
gs
sbb
into
push
mov
subl
or
nop
xchg
rol
addb
adc
stos
hlt
cld
pop
fidivrs
dec
xchg
out
hlt
inc
inc
sti
xor
jno
add
loope
pop
dec
xchg
sbb
movsb
out
fcmovnu
cmp
into
cwtl
jle
cmp
sub
push
roll
add
xchg
sub
pop
rol
pushf
sbb
xlat
mov
shll
xor
inc
pop
imul
and
call
pop
std
rolb
movsb
popf
insl
push
sub
cmpsb
mov
psrlq
cmp
cmp
bound
xor
fsubl
jecxz
adc
adc
sbb
adc
sbb
pop
or
enter
movsl
roll
pop
mov
or
adc
dec
inc
loopne
sbb
fdivrp
iret
jg
add
jp
dec
icebp
imul
int3
lret
inc
inc
pop
pusha
push
push
pop
sbb
clc
mov
mov
adc
inc
push
xchg
mov
mov
jne
out
dec
les
jns
mov
loopne
sbb
adc
xor
lret
push
sbb
dec
roll
mov
out
mov
mov
xchg
cmpsb
adc
jns
rcr
mov
xor
imul
jbe
pop
or
arpl
mov
pop
ds
xor
sti
mov
stos
push
adc
outsb
adc
sub
xor
adc
sbb
int3
mov
sti
xchg
aaa
pop
lods
into
ret
dec
scas
aas
and
jne
out
pop
and
sbb
int3
inc
push
aad
lahf
mov
push
adc
push
aaa
cmpsl
lods
cld
nop
xchg
cmp
add
push
stc
int3
sub
inc
push
cmp
mov
shlb
repz
scas
xchg
aaa
adc
fwait
and
mov
sbb
cmp
pop
in
jb
xor
bound
movsl
int
dec
jp
add
scas
pusha
sub
and
cmp
mov
and
jmp
sub
aad
dec
lret
add
pop
sbb
xor
mov
mov
in
push
dec
or
incb
push
out
addr16
scas
push
push
repz
pop
sub
jae
sub
fisubrs
xchg
mov
bound
adc
mov
mov
pop
push
test
mov
dec
jecxz
nop
add
movsb
cli
ljmp
mov
mov
daa
mov
mov
cmc
jnp
outsl
push
dec
clc
test
sbb
lods
inc
push
scas
ss
xor
jne
xchg
rolb
xor
cltd
dec
out
stos
add
and
mov
clc
xlat
xchg
cmp
push
les
scas
cmpsl
sbb
test
fiaddl
mov
jp
xor
hlt
pop
mov
loop
push
cmp
lds
lcall
fildl
fwait
pop
push
lcall
fwait
and
subl
cs
cld
ss
pop
xor
test
xchg
sbb
mull
push
jno
xchg
lock
push
or
cmp
rclb
xor
fimull
fnsave
lock
sbb
cmp
arpl
repz
mov
lret
loope
and
repnz
sbb
mov
cmp
mov
lahf
pop
push
das
adc
stos
cmpb
xor
push
std
pop
dec
test
or
imul
xor
arpl
add
test
test
loopne
jnp
jno
dec
mov
add
aam
sub
jae
pop
and
dec
xor
mov
xchg
cmp
mov
fisttpl
add
add
cmp
jns
inc
mov
and
dec
jmp
cmp
stos
scas
test
addl
das
sbb
xor
and
xor
aas
mov
mov
dec
aam
inc
jno
push
insb
pop
ja
jo
in
cmpsb
popa
mov
mov
addr16
jl
andb
cmp
or
insl
int3
dec
mov
in
dec
in
jns
lahf
and
clc
adcl
mov
mov
sub
mov
das
cmc
ljmp
cmp
sbb
xchg
dec
dec
lods
pop
or
pop
cmpsb
lods
cmp
enter
mov
inc
in
sub
pop
pushf
jns
or
xchg
pop
dec
sbb
test
fidivl
inc
imul
sti
rcll
push
dec
in
sbb
out
lock
add
shlb
imul
inc
mov
mov
lcall
push
xorl
fs
ret
add
xchg
xchg
int
mov
add
push
push
cwtl
pop
popa
or
or
aam
lea
loope
into
cmpsl
bound
mov
std
cmp
into
xor
sbb
mov
pop
pop
jg
jp
push
dec
jge
popf
mov
stos
daa
jnp
sub
fwait
jecxz
cmpsl
jle
cs
rolb
cmc
adcl
lcall
scas
sbb
loop
scas
into
dec
pop
push
mov
push
jne
xor
cmp
mov
lret
out
ficomps
add
and
jno
arpl
in
inc
jne
xacquire
xor
in
adc
in
jno
movsb
insb
push
mov
repnz
and
or
push
sbb
pop
adc
mov
fidivrl
jbe
aad
sub
mov
lods
in
sub
cmpsb
decl
sar
add
lret
jmp
test
enter
cltd
jne
cmp
xlat
pop
sub
les
mov
nop
xor
inc
push
outsb
sbb
fcomip
jmp
jle
push
enter
pushf
xchg
lret
orl
sahf
xor
jae
inc
fistpl
psrlq
dec
mov
push
cwtl
mov
cmpb
iret
orb
pushf
sbb
js
fcmovnbe
insl
and
mov
mov
mov
inc
adcl
pop
cmp
scas
int
fcoms
hlt
or
or
lea
sub
xchg
mov
movsb
xchg
mov
inc
mov
and
jnp
pop
in
orl
lds
dec
repz
inc
loopne
into
je
mov
repz
repz
push
loopne
rcrl
fsincos
and
sub
gs
iret
xor
insl
cs
dec
xchg
mov
lahf
sahf
add
adc
pop
xlat
jge
jae
xorb
cmp
testb
into
imul
cmc
mov
dec
inc
dec
adc
imul
out
push
es
out
jle
push
int
xchg
ss
push
scas
cwtl
sbb
and
cmp
orl
sub
mov
cli
insl
cmc
pop
call
pop
pop
mulb
mov
pop
js
add
popa
sbb
cld
aas
xchg
movsl
dec
sub
jg
test
jnp
mov
stos
xchg
xor
xor
in
sbb
aaa
out
mov
xchg
mov
mov
pop
pop
inc
scas
dec
inc
mov
xchg
std
test
mov
xor
or
push
jmp
repz
or
sti
pop
sbb
je
das
js
loopne
rcrb
jno
or
aam
inc
push
in
scas
xchg
or
xchg
add
mov
sbb
movsb
sub
push
mov
jge
stc
cmpl
inc
je
out
xor
movsb
and
adc
mov
pushl
movhps
out
cmp
in
mov
pop
jns
enter
mov
popf
mov
cmc
movsl
cmpsb
out
faddl
rorl
adc
mulb
pop
dec
cmc
in
mov
mov
xor
les
call
sti
ss
push
bound
scas
mov
mov
fwait
cmp
insb
mov
mov
dec
pshufw
cmp
out
mov
les
test
or
sbb
inc
mov
push
shrb
inc
xor
inc
leave
mov
inc
movsb
inc
cmpsb
jne
cmc
mov
push
inc
pop
insl
dec
inc
and
fistpl
dec
cmp
ss
and
sahf
cmp
aam
mov
jg
jp
out
or
and
and
adc
jns
fiadds
dec
leave
pop
ret
sarl
je
loopne
pop
outsb
push
xchg
int3
add
inc
lret
movl
or
or
mov
nop
out
lahf
sub
movswl
push
xor
dec
adc
aas
fs
sbb
dec
xchg
mov
fcmovnb
fadds
jecxz
jle
lock
push
aam
repnz
cmp
mov
sbb
sub
mov
in
sbb
mov
mov
iret
sub
mov
adc
jno
test
cmp
shlb
push
hlt
lret
test
mov
out
and
xchg
mov
and
lock
and
mov
stc
div
push
or
imul
insb
loop
insl
mov
jmp
inc
dec
aas
fmull
loope
imul
adc
gs
cmp
mov
pop
mov
fnstsw
cld
inc
sbbb
lret
xchg
pop
ss
int
pop
sbb
push
jmp
mov
dec
hlt
aaa
sbb
sub
jl
fucom
mov
mov
mov
mov
xlat
imul
pop
sbb
sub
test
daa
fidivs
jnp
ss
lock
xchg
push
jne
adc
lock
jnp
mov
mov
idivl
ljmp
mov
adc
ret
push
test
fiadds
pop
les
mov
mov
mov
add
xorb
cmpsl
in
loop
mov
aam
in
inc
mov
or
repnz
movsl
cs
and
pop
div
cmp
jne
and
loop
mov
ss
xor
test
sub
sbb
mov
or
das
jo
mov
ss
jb
call
sbb
ret
adc
and
sub
shlb
mov
lods
inc
lea
lods
push
in
fcomp
adc
lods
loop
push
addr16
ljmp
sbb
fbstp
sahf
inc
fdivp
mov
mov
jno
jge
xchg
add
add
push
mov
inc
in
xchg
test
loope
xchg
aad
mov
jnp
loopne
dec
ret
xchg
stos
or
in
jne
popw
or
bound
pop
push
mov
stos
testl
fidivrl
sbb
mov
jb
push
dec
push
cmp
mov
fwait
cmp
adc
jmp
cmp
or
call
andl
or
mov
cmp
jne
xchg
aas
es
xchg
rorl
ret
fiadds
or
das
jmp
out
cmc
push
pop
adc
leave
lret
lea
jne
das
xchg
loop
fsubl
cmp
lret
fs
int
sub
or
lcall
cwtl
jmp
shrw
jo
push
jg
inc
mov
sbb
movsl
fildll
ret
cmc
mov
add
daa
inc
in
sub
push
out
aas
ja
stos
dec
and
sbb
cs
popl
imul
pop
popa
push
nop
mov
xchg
fwait
cmp
push
inc
inc
insl
insb
aam
insl
shll
push
adc
sbb
sub
pop
sbb
leave
mov
jl
mov
sbb
sbb
cmpsl
fcomps
dec
inc
jbe
xlat
sti
and
add
orl
enter
mov
test
or
sub
xor
ds
sahf
inc
out
pusha
insb
sbb
in
inc
cmpl
aad
push
pop
into
or
xchg
add
cmpsl
out
push
mov
cmpsl
clc
pop
fisubrs
sbb
int
cmp
push
scas
lea
sub
add
and
adc
mov
orb
xchg
lods
neg
imul
shlb
imul
fbld
mov
mov
mov
jae
and
idivl
xor
inc
adc
es
leave
jo
mov
loope
icebp
lods
aaa
cmp
insb
jo
pop
jg
mov
push
dec
movntq
out
mov
cmp
and
mov
or
and
cld
out
repz
push
mov
dec
pop
mov
mov
lods
outsl
jmp
mov
andb
push
push
in
mov
je
jge
stos
mov
pop
sub
pop
lds
mov
fwait
xor
and
pop
dec
jle
mov
mov
cmp
dec
sbb
pop
cmpsl
bound
pop
pop
mov
movsb
mov
scas
cmpsb
pusha
cltd
sub
jae
jo
mov
imul
push
sarl
jne
scas
jle
les
stos
sub
jge
mov
sti
xchg
popf
out
pop
cltd
in
into
add
mov
test
aas
in
insl
aad
dec
lgdtl
lea
cmp
cmp
sub
add
stos
cmpsb
leave
mov
pop
sbb
mov
stos
js
xchg
inc
mov
cmovnp
repnz
add
or
jb
arpl
adc
xchg
rcrb
pop
jnp
cmpsl
add
pop
arpl
push
add
inc
mul
sahf
inc
enter
sub
cmpsl
mov
aam
pop
fstps
cs
repz
in
int
cmpsl
jge
fwait
mov
insl
xor
mov
stos
dec
cmpsb
je
xor
inc
repz
add
pop
insl
repnz
cwtl
lods
mov
fadd
outsb
dec
pushf
notl
push
nop
loop
sbb
jnp
adc
push
lods
insb
mov
pushf
fs
mov
psubq
xchg
out
xchg
outsb
das
or
pop
cmpsb
jmp
lods
push
std
and
loope
push
lahf
jne
jle
jnp
bound
in
mov
sub
jnp
je
in
aam
mov
push
imul
sar
add
add
mov
testb
addr16
xchg
scas
or
adc
push
push
lods
mov
pusha
add
mov
cli
lds
push
push
adc
and
jo
bound
inc
jnp
out
push
daa
pushf
lea
xor
push
push
popa
and
add
ficoml
mov
cmp
cli
pusha
adc
dec
icebp
sbb
inc
inc
sub
jbe
inc
pop
repz
pusha
js
cmp
xchg
lods
shrl
fistl
lcall
mov
xchg
sti
adc
lahf
fsub
push
xchg
dec
and
lds
jl
andps
add
adc
js
sti
sbb
jl
pop
ljmp
lcall
pop
mov
cs
test
pusha
and
lods
mov
rclb
push
repz
stos
sbb
push
ret
push
push
push
pop
loopne
in
lea
adcb
inc
in
and
ja
cwtl
cmpsb
lret
add
pop
clc
xlat
je
cli
cltd
mov
push
js
add
lock
mov
out
mov
clc
cwtl
xor
lds
mov
lret
aam
cmp
stos
sahf
mov
jne
test
orb
imul
aam
bound
mov
jmp
lea
sbb
clc
mov
mov
push
adc
sbb
cmp
and
jl
fdivrs
outsb
lock
enter
push
push
dec
imul
fcoms
pop
mov
leave
xchg
dec
pusha
push
call
popf
fdiv
jmp
xor
fmull
or
xchg
in
xor
xchg
mov
mov
sub
push
mov
sub
in
mov
pop
jecxz
jge
add
xor
std
pop
xor
push
mov
shl
xchg
jge
je
aas
nop
enter
cmpsl
sub
cmp
scas
mov
int3
out
incb
xor
std
fists
mov
mov
stos
pop
inc
rcrl
aad
mov
test
lods
stos
popf
cmpsb
xchg
sub
fs
inc
out
cli
dec
filds
mov
push
push
inc
xchg
lahf
ss
mov
jbe
and
mov
lahf
popf
aas
leave
insl
mov
dec
mov
cmpsb
push
jge
cmp
jo
notl
arpl
xchg
stos
loope
mov
or
lret
fdivs
xchg
out
jp
or
dec
movsb
mov
inc
xchg
mov
popa
mov
stc
pop
add
ficoml
pop
sti
fcomi
shl
add
inc
insb
add
jmp
mov
mov
aaa
mov
pop
mov
iretw
or
or
stos
daa
cmp
mov
cmpsb
jns
aaa
jo
mov
xchg
mov
cwtl
xor
jge
scas
mov
cmp
pop
pop
stos
inc
outsl
xchg
ljmp
add
movsb
cmc
mov
fdivl
std
fistps
fcompl
mov
pop
rolb
xor
in
jg
lret
jnp
in
dec
lock
sbb
nop
xor
movsb
andl
jmp
or
leave
data16
out
push
or
mov
add
sub
mov
jle
scas
add
fimull
pop
add
jle
cmpsb
arpl
cmp
mov
out
dec
and
jo
mov
sub
dec
ss
jg
movsl
sbb
jbe
jae
jecxz
iret
sub
out
or
and
test
cltd
cli
cld
divb
enter
mov
mov
pop
cmc
fstl
jb
adc
lods
inc
enter
jecxz
xor
data16
mov
data16
cmp
push
cmp
out
aad
inc
push
fmul
mov
loope
mov
stc
jae
xor
mov
push
jecxz
jg
mov
mov
sbb
jb
andl
enter
and
test
popl
lock
push
inc
enter
pop
adc
fisubrs
es
jle
pop
iret
int3
or
insl
cli
dec
xor
or
icebp
and
fidivs
mov
lods
or
sahf
pop
inc
mov
mov
neg
or
mov
popa
fsubl
inc
dec
or
xchg
add
mov
adc
pushf
sub
sahf
cmc
xor
shrl
dec
mov
ss
adc
das
inc
pop
xor
mov
jg
fmul
cmp
dec
leave
jl
fcoms
and
cs
aas
sbb
mov
mov
inc
cld
aas
cmpsl
xor
nop
lret
popf
mov
push
adc
push
lods
jno
bound
insl
cwtl
mov
sti
and
xor
xchg
jmp
cmp
dec
or
sarl
xchg
add
add
and
sbb
stos
ret
xchg
pop
popa
sarl
aaa
lock
jb
mov
mov
mov
dec
dec
push
mov
fidivl
jg
push
fldcw
add
pop
jp
loopne
mov
test
ss
outsl
loope
jne
pop
cltd
ja
jne
fmuls
repz
nop
int
jl
pop
adc
movl
dec
out
add
add
push
adc
repnz
and
pop
movsb
in
ljmp
and
arpl
inc
xchg
loopne
iret
sbb
xchg
call
xchg
daa
adc
cmp
sarl
sarb
loope
bound
aas
es
pop
cmp
mov
add
test
mov
push
mov
push
scas
xchg
nop
inc
push
jge
das
xchg
test
mov
dec
ss
lods
mov
mov
loope
out
data16
repnz
ret
and
dec
push
fimull
nop
xchg
iret
cmp
stc
mov
jae
mov
imul
sar
test
sub
ficoms
dec
dec
jns
push
mov
dec
bnd
xor
cli
movsb
push
mov
int
push
adc
pop
aam
aas
xchg
jns
xlat
dec
inc
jmp
inc
pop
pop
aas
cmp
lret
jge
or
movsl
mov
add
push
and
sub
lahf
sbb
mov
push
out
jo
sub
sbb
rclb
lahf
adc
pop
pop
jle
fstpt
js
mov
sub
jmp
ss
mov
adc
clc
jb
mov
lret
and
mov
xchg
add
ljmp
jle
loopne
adc
xchg
mov
std
jo
sub
cwtl
cmp
xchg
test
dec
adcl
outsl
and
loop
cwtl
call
lods
adc
mov
outsb
mov
mov
xchg
rcl
cmc
jb
lahf
xchg
xchg
jge
into
sarl
xchg
call
mov
lds
jp
dec
jmp
mov
jge
ja
mov
popf
mov
or
dec
or
sbb
inc
subl
pop
jns
or
enter
inc
inc
xor
sti
out
lcall
jb
sub
jmp
sbb
xchg
jbe
test
add
xor
mov
cld
add
mov
inc
stc
mov
xchg
loopne
xorl
inc
fs
cmp
aad
jmp
mov
aad
xor
mov
mov
ja
rolb
xor
add
jo
adc
imul
in
in
test
and
lahf
push
std
mov
lret
mov
push
mov
inc
and
inc
mov
sbb
test
xlat
cmp
negb
cmp
in
test
cli
fisttpll
subb
mov
test
sub
test
stos
pop
sbb
test
cmc
add
and
sbb
test
cmp
and
cmp
imul
jle
sub
enter
lods
ja
inc
dec
fistps
jb
cs
xor
cld
in
mov
stos
add
mov
jb
jmp
cwtl
ret
in
sbb
add
out
sub
cmp
mov
inc
call
insl
jnp
ret
cmpsl
ficoml
jno
mov
cltd
mov
das
pop
xlat
jo
dec
adc
cmpsl
movd
mov
insb
cli
std
movsl
xchg
dec
stos
jne
roll
dec
or
enter
jmp
pop
jl
xlat
add
and
xchg
push
popf
int
lret
call
cwtl
je
jmp
add
add
icebp
xor
cld
or
mov
test
and
dec
das
push
mulb
adc
std
cli
jp
sub
jge
cld
or
lret
fstpl
inc
add
push
xchg
divl
push
push
clc
adc
push
push
and
flds
jle
fimuls
stc
movsl
mov
pop
std
sarl
jns
sbb
mov
test
loop
lock
xor
addr16
scas
sbb
pop
and
cwtl
xor
loope
pusha
cmp
or
js
inc
rorb
adc
sub
pop
or
lret
fwait
dec
adc
rolb
out
xchg
jle
out
int3
cmp
aaa
lea
out
pop
jmp
pop
lret
insb
jno
mov
movsl
outsl
push
lea
or
or
xchg
push
or
inc
push
mov
xchg
jge
aad
mov
xor
jns
mov
cmp
mov
jmp
or
gs
dec
fstps
les
xchg
ret
movsb
xchg
push
mov
cs
cld
aaa
or
xor
sbb
nop
sub
repnz
shl
fsubl
xor
enter
loope
and
dec
in
stos
add
mov
push
push
daa
xor
ret
cmp
cmp
mov
pop
jnp
imul
jb
and
inc
or
adc
in
out
std
cmp
jge
pop
xor
ficomps
add
jmp
xorb
jb
ja
dec
lock
xchg
dec
xor
cld
xchg
mov
adc
mov
imul
pop
sbbl
int3
leave
sbb
cmp
dec
jg
bound
fnsave
sbb
ret
scas
jae
daa
mov
scas
adc
push
push
pop
pushf
lret
adc
sub
lock
inc
push
outsb
mov
xor
and
negb
adc
insb
mov
sbb
in
std
or
sbb
fwait
jmp
das
leave
push
or
fwait
cmp
je
aaa
inc
sti
ss
stos
mov
sbb
lret
dec
push
in
dec
shll
adc
cmp
movsl
cmp
push
adc
iret
mov
xlat
andb
adc
repnz
cmpl
loop
shll
cmp
leave
aaa
hlt
push
ror
popa
sub
ficomps
outsl
out
imul
fwait
adc
adcl
insl
shrl
adc
add
or
imul
mov
push
nop
in
sub
pop
aaa
pushf
pop
mov
jmp
sub
dec
jge
lahf
fs
scas
sbbb
sub
mov
enter
lret
or
mov
repz
mov
jp
mov
pusha
inc
ficompl
adc
ficoms
test
inc
in
int3
aaa
sbb
stos
cld
add
jg
sub
ja
lcall
mov
fcmovnu
xchg
mov
or
les
cmp
xor
jns
bound
ds
sbb
mov
sub
mov
push
cmc
push
inc
test
test
pop
mov
mov
sub
xchg
loopne
pop
and
xor
mov
js
outsl
cmp
mov
pop
hlt
mov
lds
ljmp
push
cld
stos
sbb
and
cmp
xchg
dec
mov
out
pop
cmp
pop
xchg
out
ss
jge
dec
xor
mov
jmp
das
mov
sub
repz
jo
push
xorb
sbb
push
add
add
pop
and
and
imul
arpl
xor
mov
jp
adc
shr
mov
imul
cwtl
jbe
data16
imul
pop
sub
mov
inc
xchg
mov
inc
ljmp
lret
or
mov
lcall
dec
xlat
ret
cld
adc
jo
dec
stos
je
jne
jp
test
push
test
movsb
xor
enter
push
fcmovne
rcrb
cmp
lret
idivl
fdivrp
mov
add
sti
push
dec
push
jnp
cmp
imul
mov
add
stos
mov
pop
cmc
jge
sahf
mov
fcomp
or
sub
adc
cmp
repnz
mov
xor
adc
pop
cli
mov
ficomps
xchg
stos
push
in
and
cmp
sub
lret
inc
fmul
pop
popf
or
lahf
xchg
andl
in
xor
adc
mov
mov
out
lcall
lock
lret
sub
or
mov
sub
xchg
pushl
aaa
popa
leave
pushf
mov
dec
pop
cwtl
xchg
sbb
outsl
pop
push
imul
and
push
aas
rorb
sbb
dec
jb
inc
cmp
or
jmp
mov
mov
fnsave
pop
push
cmpsl
jno
into
xchg
xor
pop
in
mov
leave
xor
sub
popf
jne
in
cwtl
mov
xchg
push
and
ljmp
adcb
cmc
adc
movsl
xchg
sub
jb
ror
dec
bnd
add
jb
cmp
ja
dec
rcr
dec
xchg
xor
xor
pop
gs
xchg
loope
out
pop
jmp
xchg
ja
mov
xchg
ljmp
cmp
repnz
jl
leave
inc
lea
inc
jno
pop
cmp
lods
fwait
xor
inc
push
sub
movsb
cwtl
decl
mov
ficomps
dec
adc
into
mov
push
fildll
hlt
shrb
loope
sub
add
fsubrs
xor
and
loopne
mov
jbe
and
lods
or
outsb
ja
mov
out
sti
pop
inc
out
in
or
faddl
dec
push
mov
pop
negl
mov
dec
xchg
stc
repnz
mov
mov
xor
es
enter
imul
test
dec
lock
and
or
in
dec
outsl
test
faddl
jno
das
cs
push
cmp
and
sub
ljmp
ret
imul
xchg
cmpl
aas
shlb
jmp
cmp
cmc
jl
addr16
dec
cs
cmpsl
inc
cs
icebp
je
or
je
xlat
andl
in
mov
cmpsl
cld
shrl
xor
pusha
or
adc
es
mov
mov
ljmp
call
mov
xchg
pop
jb
mov
fs
dec
cmc
xor
scas
push
lock
loopne
sbb
fstpt
xor
mov
shlb
pop
in
add
scas
mov
stos
sbb
das
and
jge
and
ret
cwtl
xchg
in
leave
out
xlat
push
mov
pop
outsb
sbb
cmc
mov
loopne
xor
wrmsr
popf
and
aas
nop
sbb
push
inc
lods
mov
jecxz
inc
cmp
aas
rcrl
pop
mov
push
daa
xor
mov
in
xor
movsb
shl
and
push
adc
ss
mov
lods
mov
movb
jbe
call
xor
and
mul
cld
adc
pop
lret
mov
xlat
clc
mov
vunpcklps
push
insb
loopne
cmp
mov
addb
pop
mov
mov
int3
movsb
into
dec
inc
sub
cmc
jo
lods
cmpsb
stos
mov
pop
mov
dec
mov
mov
add
dec
or
push
add
insl
test
sbb
and
add
cmp
sbb
push
nop
mov
ror
orb
add
addb
dec
mov
xor
daa
scas
or
add
rorb
mov
imul
loope
xor
lcall
inc
loop
inc
in
fdiv
mov
scas
mov
imul
push
push
pop
arpl
cmpsl
sahf
xchg
adc
loope
mov
and
clc
data16
mov
mov
sbb
ret
push
addr16
and
push
jcxz
out
sbb
std
aam
jnp
icebp
pop
jge
gs
call
sti
mov
jp
jl
negb
or
xlat
push
fwait
mov
pop
mov
add
mov
repz
mov
push
imul
mov
add
add
xor
xchg
clc
sub
lret
out
arpl
popf
sahf
or
fabs
sti
jne
rolb
push
and
or
shrl
ds
and
xchg
lcall
fs
jbe
insb
icebp
dec
js
loopne
les
add
sub
dec
lret
loop
lahf
mov
pop
notl
cmp
mov
out
mov
fcompp
jmp
sbb
mov
push
mov
or
jbe
push
lock
or
jns
sub
lcall
filds
xchg
add
sbb
fmull
mov
push
add
mov
sub
sub
sbb
dec
jg
pop
inc
jmp
lahf
rcrb
xchg
sti
pop
xchg
sub
imul
fldl
mov
dec
cmpsl
mov
test
mov
loope
ss
xchg
in
adc
xor
arpl
xchg
mov
ja
adc
out
arpl
out
icebp
adc
sub
xchg
ss
sti
icebp
loope
pcmpeqd
aam
adcb
xor
dec
inc
jne
push
in
data16
cmp
sub
dec
and
dec
push
cs
inc
das
cmp
or
in
sbb
jns,pn
sub
stos
jge
js
int
je
or
loope
popa
sahf
out
dec
lods
decb
outsl
mov
shl
test
push
sbb
test
out
add
inc
fstpl
std
or
mov
jle
ja
mov
in
hlt
add
mov
sub
jmp
enter
cmp
insb
mov
fsubs
mov
sub
mov
stc
rorl
or
leave
lret
push
test
and
push
notl
xor
js
mov
mov
xchg
ret
sub
leave
pop
sbb
inc
adc
xor
sahf
mov
push
xchg
das
cli
sbb
jo
and
pop
or
cwtl
scas
xorl
rclb
out
scas
cli
mov
inc
fs
call
or
cwtl
sti
test
pushf
sarb
or
sub
push
ja
push
xor
xor
dec
ljmp
divb
dec
adc
pop
test
pop
outsl
mov
jnp
dec
pusha
iret
fimuls
out
out
je
lea
fs
mov
jle
pop
jo
fnstsw
inc
xchg
dec
jne
pop
mov
dec
push
xlat
in
sub
or
rcrb
pop
pop
stc
jecxz
and
dec
loopne
mov
push
out
imul
add
es
xchg
imul
jb
cmp
insb
xchg
push
mov
nop
cmpsb
imul
cmp
xor
jecxz
pusha
std
inc
push
mov
xchg
dec
fdivrl
lock
dec
ja
dec
jmp
push
inc
dec
push
push
iret
dec
xor
jle
enter
inc
xchg
dec
in
mov
xor
dec
scas
enter
filds
xchg
enter
stos
sti
in
adc
lret
xor
mov
std
jge
pop
sahf
mov
or
outsb
test
or
inc
js
enter
cmpsb
cmpsl
movsl
pop
push
ret
add
or
hlt
nop
pusha
adc
push
popf
xchg
push
popf
lahf
adc
sub
hlt
xchg
lods
dec
stos
xor
arpl
cmpl
dec
sub
fisttps
out
fnstsw
sub
mov
cmp
dec
dec
jg
inc
sub
or
ds
cmpsb
push
movsl
pushf
loopne
or
pop
dec
mov
sub
stos
xor
enter
xchg
cmpb
cmp
js
dec
aad
dec
mov
and
arpl
arpl
mov
int3
xchg
icebp
mov
mov
jns
sub
subb
lcall
lods
es
imul
insl
dec
jmp
mov
enter
mov
inc
jmp
imul
cltd
pop
fsubrs
insl
inc
and
dec
xchg
cli
xorb
nop
push
and
sbb
pop
scas
ds
nop
imulb
mov
loopne
popa
jo
xchg
cmp
push
xchg
sub
dec
push
rorl
pop
push
mov
int
cli
cmpsl
mov
adc
lods
scas
cmp
outsb
sub
jo
andb
inc
inc
lock
jmp
cwtl
mov
and
stc
hlt
add
mov
popa
rcrb
lods
andl
adcl
adc
fnstsw
stos
mov
test
pushf
aad
push
jne
push
jle
inc
cs
data16
mov
inc
lods
sbb
pop
mov
mov
rol
fnstenv
mov
push
test
lret
enter
xor
pop
cld
lods
addl
lds
test
aam
insb
mov
inc
adc
pop
outsb
jle
imul
push
lahf
in
shll
out
ljmp
imul
mov
inc
and
mov
rclb
pushf
xor
adc
clc
mov
loopne
ja
mov
arpl
wbinvd
in
dec
jae
lahf
std
bound
lahf
int
add
adc
pop
mov
mov
xor
adc
test
ljmp
mov
shr
aas
loopne
push
xchg
inc
push
test
das
push
cli
dec
sbbb
loope
mov
cltd
mov
inc
fsub
add
fwait
jae
push
inc
jb
dec
sub
ret
lcall
inc
pop
pushf
dec
das
and
shl
popf
mov
xchg
sbb
into
fmuls
jnp
mov
pop
pushf
xchg
sub
sahf
cwtl
jb
cmp
dec
movsb
and
mov
xchg
jbe
inc
aaa
xchg
xlat
daa
mov
dec
add
dec
jb
loop
std
shlb
xor
sub
cli
xchg
sub
scas
pop
dec
and
xchg
pop
ss
test
in
sub
or
mov
mov
lldt
psubusb
xor
test
inc
and
sarb
sarl
jp
shrl
xchg
pop
sahf
pop
bound
repz
or
pop
das
adc
mov
jb
add
xchg
pop
lret
add
dec
ljmp
pop
adc
bound
add
lock
sub
es
rcrl
jnp
popf
psllw
mov
adc
pop
or
sbb
mov
movb
leave
aam
sub
xchg
cmpsb
jle
arpl
and
jb
cmp
pushf
movsl
push
dec
popf
xchg
iret
cs
push
shlb
push
push
fisubrs
mov
mov
mov
das
xchg
dec
in
ret
in
dec
xchg
lret
push
xchg
icebp
mov
fimuls
call
xorb
testl
icebp
adc
das
mov
ficoms
jne
xchg
popa
mov
xor
sub
mov
in
rcr
xchg
loopne
pop
ljmp
sahf
arpl
cmp
cmp
out
gs
fnstenv
jp
sub
test
aam
or
add
stos
pop
dec
negb
jnp
jne
inc
sbb
cmp
daa
sub
xchg
add
clc
mov
movsb
mov
inc
dec
adc
in
mov
dec
jns
nop
mov
or
or
lret
jl
mov
das
sbb
xor
cmp
mov
outsb
dec
jo
push
xor
cmp
mov
ljmp
js
xlat
jns
test
imul
xor
jmp
in
cwtl
dec
shlb
mov
ss
jae
pop
xor
jns
mov
push
negl
dec
xchg
lods
dec
cmpsl
xchg
add
push
mov
mov
push
in
xchg
dec
fs
pop
addr16
and
jmp
jecxz
or
sub
rorb
ret
ret
ret
mov
sub
cmpsl
adc
cmpl
outsb
dec
arpl
mov
add
fcmovnbe
jbe,pn
into
negb
or
cmp
pop
xchg
notl
dec
iret
fldt
cmp
pop
repnz
adc
rclb
ja
ja
mov
ret
lcall
inc
and
lds
popf
cmp
inc
das
shll
inc
mov
jno
push
loopne
lock
push
sub
inc
clc
pop
mov
sbb
inc
pop
push
pusha
sbb
sbb
mov
push
sti
sbb
push
jge
in
xchg
adc
sub
dec
sbb
sub
xor
xor
and
ret
sub
xor
sbb
jmp
inc
xchg
adc
mov
push
mov
mov
loopne
mov
sub
cmp
sbb
push
imul
and
mov
aas
outsl
xchg
loope
ss
xor
sub
mov
xor
inc
xchg
sub
in
bound
mov
mov
mov
loopne
aam
repz
mull
mov
push
lcall
inc
push
xchg
inc
jne
xor
and
cwtl
mov
dec
imul
and
sbb
mov
sti
inc
cmp
aaa
push
pop
cmp
jmp
repnz
ret
push
pop
loop
insb
cmp
push
daa
xor
int
dec
in
movsb
arpl
jbe
lods
mov
orl
push
add
dec
shr
lret
into
push
insl
stos
lods
and
cmp
andb
sbb
aam
rcr
stos
push
ffreep
adc
arpl
add
push
mov
mov
mov
dec
or
xchg
adcb
sub
cmp
push
mov
jbe
dec
push
mov
lods
lods
dec
adc
xchg
call
or
shlb
insl
or
aad
inc
inc
jnp
iret
sbb
cmp
mov
nop
daa
xor
dec
dec
dec
scas
adcl
inc
mov
mov
xor
mov
loop
shll
push
push
repz
fcomip
sbb
pop
je
psubd
test
arpl
mov
add
push
sub
adcl
outsl
shrl
iret
iret
movsb
pop
push
shl
in
push
lds
dec
dec
sbb
sbb
dec
mov
hlt
jp
test
push
push
add
fidivs
enter
sbb
fistl
inc
push
mov
xchg
jecxz
push
subb
add
js
popf
cmc
xlat
xchg
pop
push
mov
int
inc
fs
xor
sbb
xchg
ret
or
loop
jle
sub
xchg
mov
mov
jg
jb
push
dec
jne
xchg
inc
bnd
jl
shrb
test
sbb
test
test
mov
pavgb
lcall
out
negl
cmc
loope
test
mov
negl
lcall
push
fiadds
insb
scas
adc
shlb
or
xchg
xchg
push
push
mov
sbb
cwtl
sti
sub
xchg
jbe
loopne
mov
je
cmp
push
push
cmp
sub
movsb
loopne
outsb
inc
enter
sub
gs
push
rcl
add
cltd
xchg
and
mov
xchg
sub
mov
cmp
push
ja
jbe
fnstcw
sbb
push
mov
mov
ss
notl
xor
dec
and
fldenv
and
notl
lea
xchg
pop
in
xchg
arpl
outsb
jne
js
mov
pop
adc
jno
sub
mov
mov
push
scas
out
dec
add
and
leave
jo
xchg
in
and
out
sbb
jb
xor
aas
sub
mov
cmp
or
push
insb
push
jge
xchg
inc
out
dec
lods
mov
cmpsb
or
mov
cmp
push
or
daa
add
fnstsw
and
ja
lods
mov
movb
push
mov
cmpsb
lea
pop
inc
clc
aaa
stc
arpl
and
lea
imul
idiv
push
nop
jnp
inc
mov
jbe
mov
push
cmp
sahf
mov
mov
ljmp
sbb
into
mov
jmp
incb
or
sbb
jne
popf
xchg
arpl
jbe
cmp
push
push
push
sub
sub
mov
aaa
add
push
popf
faddl
nop
jo
test
jns
movsl
mov
xor
and
mov
ret
jo
jo
dec
sub
push
xchg
out
lea
push
jns
mov
add
sbbl
dec
out
push
jl
out
les
jl
movsb
fucom
enter
pop
int3
sbb
inc
ret
mov
pop
outsl
jle
lahf
cmp
je
adc
jno
inc
pop
call
push
andl
fsubrs
dec
daa
sub
call
push
jb
test
or
push
sub
adc
rorb
hlt
push
adc
bound
sbb
push
pop
xor
lock
arpl
faddl
dec
dec
adc
pusha
mov
daa
sbb
hlt
cmp
push
call
or
aas
mov
jb
cmpl
shrl
cmpsb
fwait
popf
cmp
ljmp
xor
test
mov
nop
faddl
add
dec
xor
jmp
pop
leave
and
mov
sahf
push
sbb
xor
dec
inc
repz
addr16
push
push
icebp
call
ja
jecxz
jp
aad
cmp
cmpsl
xor
mov
jg
add
shll
xchg
xchg
mov
divb
fildll
mov
push
pop
subb
aam
and
cmp
popf
test
xchg
int3
pop
and
jae
mov
std
xor
push
sub
jnp
sbb
enter
inc
mov
push
sarl
vphaddubd
cmpsl
int
jp
es
inc
sbb
jmp
xchg
or
psubw
mov
rcrl
imul
jae
xchg
arpl
pop
pop
and
pop
ret
mov
mov
pop
mov
ret
das
lds
stos
jle
std
adc
xchg
mov
repnz
insl
fdivrl
insl
jecxz
rclb
cli
rclb
das
test
hlt
insb
jb
addl
sub
cmp
xchg
fistpl
jge
push
fcompl
stos
jge
cmp
ret
lods
test
mov
loope
sbb
ljmp
rol
test
jl
lods
push
lds
int
lds
jecxz
pop
cmp
xchg
mov
jmp
dec
aad
fcoms
icebp
jnp
pop
insb
xor
iret
push
out
cmc
sti
adc
enter
into
fstps
xor
pop
mov
dec
push
xlat
pusha
cli
test
lods
test
sbb
test
mov
test
sbb
mov
sub
pop
mov
cmp
iret
cmp
mov
xor
mov
nop
das
sarl
mov
sahf
mov
aad
out
sbb
inc
jg
dec
loop
iret
aas
mov
mov
xchg
ret
inc
mov
mov
and
inc
fsubrs
pusha
jg
and
aad
dec
xchg
out
dec
loope
imul
add
jns
add
xor
sarl
cltd
jle
mov
add
mov
rcl
push
sbb
gs
xchg
fstpl
sub
inc
int
inc
push
hlt
popa
cli
rolb
stos
fisubrs
sbb
pushf
in
pop
and
dec
int
dec
adc
cmpb
adc
jb
das
in
sbb
adc
scas
cmpb
incl
xchg
pop
mov
loop
mov
adc
in
xor
sbb
stos
clc
push
es
xor
call
mov
out
jo
ljmp
sbb
jecxz
adc
xor
aaa
test
and
inc
adc
cmp
lea
xchg
out
or
mov
iret
cmp
popf
cmp
adc
mov
jne
das
mov
inc
sub
popa
insl
pop
xchg
repnz
int3
cmpsl
mov
mov
sbb
mov
cmp
push
ja
or
jmp
test
sahf
xor
in
cmpsl
sar
fcomps
das
sbb
repz
xor
xor
sbbl
xlat
mov
or
daa
loop
sahf
push
fistpl
fstpt
fmuls
add
lds
fstl
and
outsb
add
add
add
test
mov
mov
mov
sbb
cmp
in
add
or
pop
pop
push
cmc
mov
outsb
loop
call
mov
mov
sub
icebp
cmp
les
subl
addl
xchg
mov
rcll
inc
les
mov
shr
ret
mov
xor
out
fcompl
aam
scas
xor
jnp
mov
ja
ss
cmp
or
mov
xorl
imul
mov
cmp
inc
cld
or
bound
jle
cmpsb
xchg
aaa
mov
push
in
into
aaa
inc
sbb
insl
and
std
sbb
adc
out
mov
ss
inc
insl
mov
int3
and
xchg
jno
sti
xchg
sbb
xor
sarb
ret
push
mov
pop
mov
sahf
push
xchg
in
cli
mov
int3
xchg
sarb
cs
aaa
dec
xlat
rcrb
or
push
aas
or
xchg
sbb
int
fld
sub
xchg
out
xchg
pop
pop
adc
dec
xchg
icebp
hlt
jb
mov
pop
fsubrs
mov
test
lahf
cmp
lds
andb
pusha
sub
mov
sub
rolb
jae
cltd
mov
inc
inc
cld
popa
lret
xorb
and
rdtsc
dec
xlat
and
ret
mov
outsb
imul
dec
push
mov
adc
jl
dec
adc
jle
dec
jo
loopne
mov
out
iret
fnstsw
pop
popa
push
dec
lcall
jge
xchg
xor
sti
mov
push
pop
mov
jae
add
pusha
push
xor
clc
mov
xor
jl
jge
adc
jl
mov
hlt
pop
jno
shll
cmp
out
in
out
flds
test
inc
sbb
xchg
ret
jle
out
push
enter
push
mov
add
mov
and
es
movsb
or
idiv
shll
xchg
pop
adc
movsb
xor
mov
adc
aam
xchg
rcll
scas
jg
pushf
daa
rolb
out
jmp
add
push
inc
mov
das
xchg
push
cmp
test
and
dec
lods
mov
dec
inc
add
or
pop
cmpsb
add
sti
mov
dec
js
test
mov
rcll
inc
mov
jmp
mov
mov
popa
pop
sub
xchg
std
lods
add
cltd
push
cmpsl
fwait
repz
mov
mov
shl
les
sub
imul
aad
mov
or
push
dec
out
ljmp
pop
mov
xchg
jnp
or
inc
subb
fcompl
add
fistpll
mov
mov
outsl
lods
mul
filds
xlat
subb
and
add
inc
lahf
adc
jl
fstpt
and
pop
jbe
cmp
out
subb
cwtl
mov
outsb
jb
dec
sub
mov
mov
and
rclb
push
mov
daa
nop
and
iret
and
jnp
add
cmp
push
aad
mov
fwait
lret
xchg
andl
xchg
mov
mov
add
std
loopne
out
and
popa
mov
repnz
shll
fldl
dec
rorl
xor
jae
mov
dec
mov
cmp
arpl
cmp
add
cmp
pop
or
in
push
xchg
arpl
lret
lods
inc
mov
fsubs
sub
fidivl
fxam
mov
xorl
pop
bound
push
and
or
mov
notl
lret
test
inc
or
mov
pop
mov
jo
xchg
lds
dec
fdivrl
sahf
push
call
or
add
jmp
cmp
arpl
outsb
insl
pop
into
aaa
loopne
loop
or
jnp
inc
pop
bound
test
aad
cmp
fdivrp
jne
insb
nop
sarl
popf
fistpll
cmp
and
xchg
cwtl
fcomps
ss
pop
push
jns
mov
push
mov
xlat
das
jo
mov
adc
sbb
stc
fsubs
and
mov
in
pop
lods
out
jb
stos
push
and
or
stc
rorl
add
xlat
mov
popf
sub
je
pop
idivb
loope
jo
addr16
push
rcrb
cmp
out
or
inc
sbb
adcl
aam
mov
sbb
xorl
push
jecxz
leave
mov
cwtl
popf
xchg
imul
mov
push
mov
cs
inc
adcb
pusha
imul
mov
mov
jge
and
cmp
psllq
mov
repz
jecxz
and
in
enter
push
mov
divl
sub
aaa
cmpsb
pop
pop
idivb
cmp
push
xor
sbb
mov
push
add
pop
ja
push
sahf
xor
lock
rcrb
xor
pushf
jnp
shll
fildl
push
xor
push
pop
in
int3
adc
lock
sub
lahf
std
dec
loopne
shr
cmp
int3
jge
add
js
and
push
dec
test
lock
push
stc
aad
movsl
out
cmpsl
inc
insl
inc
insl
mov
aad
insb
je
daa
mov
pop
mov
adc
adcb
insb
mov
push
pop
push
idivb
inc
cmp
lock
jg
cmp
testl
aad
lret
mov
ret
loop
adc
test
sbb
cmpsl
aas
incl
clc
sbb
xor
out
clc
inc
sbb
insl
pushf
fildl
inc
popa
pop
ret
in
gs
or
dec
pop
testl
ljmp
push
ret
xchg
loopne
xlat
setge
rcrl
cmp
hlt
adc
sub
bound
daa
sub
fmull
xor
jnp
mov
adc
ja
pushf
jl
movsb
adc
xor
cld
cmpsb
push
jg,pn
dec
pushl
sbb
jecxz
mov
and
mov
std
in
sub
mov
outsl
push
aam
sub
and
xor
insl
mov
loop
movsl
scas
push
ret
enter
jae
inc
shll
sub
das
test
fwait
es
aaa
imul
mov
add
in
pop
mov
fs
pop
add
mov
push
dec
mov
mov
jp
ljmp
not
roll
lcall
sbb
jne
fcoml
testb
incl
push
es
mov
outsl
cmp
pop
dec
rorl
movsb
add
ret
xchg
aam
ret
sub
rclb
add
sarl
andb
xchg
je
xchg
mov
pop
push
lcall
pusha
mov
mov
out
inc
mov
xchg
push
loopne
dec
or
pusha
xor
and
fs
add
mov
addr16
and
sbb
xchg
jle
popa
sbb
mov
sbb
fsubl
push
add
jns
cli
cli
dec
adc
cmpsl
xchg
cmpsl
inc
addr16
adcb
xor
fcmovu
mov
inc
dec
pop
adc
dec
jmp
clc
pop
aaa
test
and
inc
or
sbb
jns
enter
dec
xchg
jne
int
push
mov
nop
adc
fiadds
pop
outsb
jmp
mov
clc
jbe
cmp
mov
js
pop
push
call
sub
outsl
mov
scas
sub
into
sub
jbe
fildl
sub
adc
addr16
xchg
pop
cld
test
addl
test
es
test
bnd
xor
fildl
ret
rorl
xor
in
clc
adc
int3
inc
jns
stos
test
lret
jno
mov
cmpsl
lcall
sub
mov
adc
mov
outsl
ja
ljmp
or
shr
std
dec
or
push
adc
ret
mov
les
rcl
and
adc
cwtl
dec
sti
loopne
xchg
sbb
xchg
xchg
fsub
push
and
push
xchg
lds
in
push
mov
dec
jns
add
ja
cwtl
adc
loop
nop
dec
data16
sbb
aaa
adc
movsl
stos
mov
mov
out
mov
xchg
andl
add
mov
ret
and
movsl
xor
dec
and
ss
outsl
pop
mov
push
inc
das
test
dec
pushw
in
cmp
je
fadds
push
xchg
icebp
push
fdivrl
xor
push
mov
jbe
out
push
ljmp
push
and
fsubr
lcall
mov
daa
popa
mov
jl
push
addl
fs
mov
mov
into
push
lods
enter
dec
and
mov
jo
xlat
dec
sub
test
xchg
mov
stos
inc
xchg
ja
aas
jbe
dec
pop
sahf
mov
lret
and
jnp
sub
mov
push
shlb
xor
mov
jns
lock
lea
imul
inc
and
xchg
xor
mov
mov
dec
pop
sub
mov
mov
dec
push
and
push
arpl
fidivrs
mov
cmp
dec
std
cli
adc
lods
dec
ljmp
add
push
cmp
idiv
or
mov
jp
jl
enter
cmc
and
in
stc
push
lret
imul
hlt
test
adc
sahf
and
repz
xchg
inc
sahf
xchg
mov
mov
dec
adc
test
inc
call
cltd
xor
jae
xor
push
orps
clc
sysenter
push
mov
hlt
jmp
sbb
xor
rcrb
xchg
add
pushf
jb
setg
int3
push
push
popa
arpl
dec
testl
insl
add
inc
jns
pcmpgtb
fimull
nop
add
rolb
inc
aas
add
add
pop
sbb
popf
push
loop
cs
mov
bound
dec
or
mov
xchg
sub
icebp
add
cmp
ret
mov
movsl
jp
jo
sti
xchg
aaa
mov
mov
cmpl
mov
fdiv
cmpsb
dec
imul
mov
cld
or
mov
out
jnp
roll
xor
add
or
xor
out
lods
push
lea
ljmp
mov
lret
xchg
cs
xchg
test
add
mov
dec
pop
xchg
dec
out
es
repz
loopne
push
int3
es
repnz
push
lds
insl
sub
mov
loopne
mov
jg
sahf
jg
pop
sub
cld
fxch
iret
inc
in
les
inc
xchg
lahf
mov
imul
addps
std
lea
jp
push
lcall
nop
fcmovnbe
xchg
sbb
test
pusha
cltd
cli
filds
push
mov
negl
inc
jle
inc
push
subb
adc
mov
cmp
mov
cmp
push
lods
pop
or
jno
jmp
xchg
adc
rolb
lods
data16
rcll
in
in
sub
loopne
pop
fs
fwait
xchg
je
pop
nop
pop
out
sub
scas
cs
mov
das
rol
in
movl
jmp
aam
popf
mov
in
pop
push
lock
mov
divl
data16
jmp
sub
ret
mov
dec
daa
lods
or
shl
cli
fisubs
das
jne
pop
or
inc
repz
sub
cmp
out
call
loopne
mov
int3
popa
mov
xor
mov
mov
mov
mov
mov
mov
imul
jmp
or
cltd
das
repnz
jbe
into
sub
mov
lret
lcall
aad
pop
cwtl
sahf
add
and
pop
and
jp
jmp
stos
insl
jns
cli
in
enter
ficompl
insl
mov
cmc
adc
sub
push
dec
push
or
jns
ret
push
test
push
xor
jo
jmp
lods
add
leave
shll
xchg
add
pop
imul
sbb
inc
jnp
jb
jmp
out
hlt
movsl
inc
push
fcmovu
mov
push
icebp
mov
sahf
xchg
js
sbb
call
mov
insl
testl
mov
nop
insb
orb
xor
and
cwtl
out
sahf
sahf
pop
cmpsl
sub
add
enter
lret
lea
inc
pop
movsl
and
loopne
adc
sub
iret
inc
cwtl
inc
sahf
jne
sbb
pop
sbb
inc
jle
in
lahf
mov
adc
pop
insb
into
fs
ret
cmp
and
jbe
ss
or
mov
inc
mov
out
xchg
outsb
mov
pop
pcmpgtd
idivl
xor
dec
scas
inc
jb
push
xor
sbb
addl
push
sbb
pop
and
addl
lea
mov
rcl
pmaddwd
clc
test
popa
inc
lcall
lea
jbe
jno
dec
xchg
add
mov
pop
xor
sbb
and
je
jae
fistl
into
ret
push
fs
pop
insl
xchg
sbb
lcall
in
shl
insl
nop
lods
and
push
std
dec
push
loopne
push
jae
dec
cwtl
xor
mov
out
mov
mov
push
loopne
mov
cmp
cmp
ret
xor
inc
add
mov
push
lret
dec
inc
mov
jmp
cmp
arpl
icebp
shlb
ds
mov
push
xchg
lahf
cltd
loopne
orb
stos
cli
xor
jne
int
sub
out
fnstenv
adcl
pop
outsb
pop
dec
xchg
loopne
and
sbb
ss
out
and
sbb
add
pop
adc
test
inc
adc
imul
mov
and
dec
dec
cwtl
pop
arpl
jo
mov
sbb
stc
mov
mov
rol
jmp
dec
incb
mov
mov
adc
mov
xchg
loopne
insb
cs
es
push
xchg
lock
mov
pop
jns
mov
fcompl
push
jge
pop
or
fcomps
mov
cmp
fwait
dec
stos
clc
orb
cmp
cmp
test
sbb
add
imul
rorl
dec
lldt
aas
cld
jae
inc
xlat
daa
inc
push
movsl
subb
sbb
xor
test
test
xchg
mov
dec
push
jb
ds
adc
sub
ss
in
adc
push
icebp
and
xor
xlat
je
push
push
sbb
and
pop
mov
push
or
pcmpeqw
test
lods
into
sarl
inc
mov
add
movsl
push
xchg
shl
stos
out
xor
or
mov
cmc
xor
push
jge
ss
adc
sbb
mov
mov
adc
cmp
mov
fs
push
orl
fucomip
cmpsl
cmc
adc
lock
in
xor
mov
stos
add
jo
sub
ja
mov
test
insl
dec
pop
pop
por
dec
mov
and
hlt
add
mov
mov
arpl
mov
in
shr
mov
adc
movsb
push
xorps
lret
mov
pop
inc
imul
insl
mov
pusha
pop
imul
test
lret
int3
repz
xor
jmp
lcall
std
bound
add
inc
mov
jecxz
xor
call
ds
fidivs
cld
decl
cmp
fwait
aas
test
shrl
push
and
sbb
push
adc
adc
in
xchg
add
pop
js
mov
lcall
mov
ss
inc
cs
repz
mov
cs
inc
dec
xor
test
xorl
add
mov
jl
mov
scas
out
or
loop
cmp
dec
sbb
sbb
inc
xchg
jecxz
jle
outsb
push
mov
jno
sub
outsb
adc
adc
or
add
or
imull
jle
xchg
test
mov
sbb
adc
mov
xchg
fsts
rorb
test
xor
mov
inc
repz
adc
movsb
inc
cmp
mov
leave
pop
adc
insb
jo
imul
xchg
lahf
stc
test
dec
and
adc
pop
cmp
jbe
and
pop
mov
pop
loop
and
int3
std
rcl
jo
test
test
test
and
imul
pop
jbe
imul
pusha
jl
ret
lret
sbb
sbb
pop
popf
sti
push
adc
inc
cli
sub
xchg
mov
ljmp
jnp
adc
pop
in
sub
loopne
daa
ss
jo
sbb
outsb
lret
inc
out
hlt
bt
or
xor
jbe
adc
jo
or
inc
nop
adc
push
sbb
outsl
push
test
push
sti
into
scas
mov
xchg
jns,pn
jo
in
lcall
movsl
add
push
cltd
pop
out
jns
out
test
inc
mov
pop
es
movsb
into
dec
inc
lret
sub
jmp
xor
cli
lret
aam
mov
adc
into
mov
xchg
cmc
push
scas
sub
popa
outsb
loopne
mov
hlt
out
mov
jg
mov
pop
mov
mov
mov
push
test
mov
cmp
dec
sbb
jb
push
popa
mov
movsb
mov
jle
or
adc
xor
inc
movsl
aad
out
dec
xor
adc
jo
xchg
stc
jo
rcrl
loopne
pop
lea
fcmovnb
dec
xor
push
mov
jns
sarl
push
xor
sub
rcrb
adc
mov
add
clc
mov
fimull
lret
shll
push
fistpll
sub
push
push
es
call
sub
nop
jno
lds
mov
jmp
xor
cwtl
fimuls
mov
push
cmp
daa
xchg
in
loope
les
push
jmp
jg
sub
cmp
testb
test
pop
sti
push
lea
xlat
pusha
aaa
mov
push
mov
jb
rcrl
test
mov
daa
aad
mov
test
add
rolb
xchg
cmp
cld
and
xchg
cmp
adc
dec
pop
ss
cld
rorl
test
jmp
das
ret
lahf
lcall
ljmp
int
movsb
clc
loop
push
pop
rcll
cmp
jno
mov
add
jge
int
in
jb
not
fcompl
cld
pop
xchg
negl
imul
test
shlb
mov
mov
mov
xchg
and
mov
cld
xor
sub
jl
xor
mov
dec
mov
pop
aas
addr16
shll
data16
test
mov
daa
push
jns
push
jnp
xchg
scas
mov
sbb
push
insb
jne
arpl
jg
xacquire
call
mov
stos
adc
sub
sbb
lret
sub
pop
push
or
lods
inc
or
cmp
je
shll
shll
jmp
in
popf
jne
xchg
int
aaa
enter
int3
mov
out
subl
ret
repnz
cld
sub
in
mov
inc
cld
jg
test
add
fimuls
lcall
add
sub
pusha
int
mov
pushf
scas
xlat
mov
push
inc
dec
scas
mov
inc
fstps
push
and
sahf
jo
pop
xchg
inc
stos
cmp
shrb
aam
scas
cmp
aad
inc
lahf
subb
pop
imul
jecxz
xchg
in
cmp
lret
bound
shr
mov
xchg
sahf
rorl
cmc
pusha
gs
enter
mov
push
inc
or
negb
push
mov
adcb
enter
push
pop
mov
repnz
repz
xchg
jecxz
push
push
inc
ja
push
mov
add
and
pop
sub
and
fdivrl
lahf
jge
sbb
cltd
xlat
jbe
mov
xchg
sti
or
or
mov
ret
sbb
pop
sti
and
dec
test
jecxz
call
sbb
arpl
add
out
popl
lock
push
xor
sub
mov
cs
mov
cmc
lods
jns
or
inc
pop
inc
mov
movsb
pop
cmpb
ljmp
xlat
inc
pop
push
adc
cwtl
xor
mov
cmpsb
repnz
and
pop
sub
or
repz
pop
jmp
lea
xchg
xchg
insb
shr
mov
test
adc
cltd
and
and
cli
xchg
or
cmc
mov
out
pop
gs
sbb
add
dec
sub
adc
sub
insb
nop
insb
mov
popa
into
fcomi
push
pop
mov
adc
je
ret
imull
mov
enter
lcall
stc
pushl
add
mov
outsb
cmpsb
aas
stos
aad
outsl
scas
or
mov
sahf
mov
out
int3
mov
push
mov
es
fisubrl
and
or
testb
pushf
fstpl
sbbb
arpl
cmpsl
mov
xchg
jno
add
sub
xchg
outsb
cwtl
out
les
bnd
mov
insl
push
lock
and
mov
push
idivb
test
movsb
ret
jecxz
insb
push
mov
pop
fidivs
das
sbb
lret
js
outsl
mov
gs
sub
test
jp
daa
inc
mov
mov
sub
loope
dec
sub
mov
add
dec
sub
into
push
addl
insb
outsl
xor
lcall
outsl
pop
cmp
push
xchg
xor
sti
dec
sub
insb
loopne
jnp
fwait
movsb
sub
pop
nop
cmpl
xor
lods
movsl
loope
lret
jmp
or
push
cmpsb
mov
or
test
xchg
shrl
push
aam
into
scas
loop
lret
adc
lods
iret
mov
fimull
ret
inc
jge
cld
fisubs
mov
mov
repnz
pop
and
adc
loopne
sbb
jbe
sbb
nop
xchg
cmpsl
dec
scas
ljmp
mov
cmp
mov
adc
inc
leave
negb
dec
mov
push
jp
sbb
add
sahf
jle
mov
fidivl
cmp
inc
daa
push
cmp
insl
push
mov
ds
xor
shlb
jbe
jbe
push
int
push
icebp
jae
mov
repz
xchg
sub
dec
les
mov
or
outsl
fbld
das
cld
fdivrs
xor
es
nop
sub
jp
nop
imul
and
movsb
test
adc
outsb
or
mov
inc
dec
pop
or
jo
repnz
dec
sub
xchg
push
dec
push
filds
loopne
xchg
push
repnz
cmp
dec
push
and
cmp
cmpsl
push
xor
xchg
cwtl
or
sbb
xorl
cmp
or
xor
adc
inc
mov
push
and
aas
add
cs
jecxz
mov
sub
sbb
lcall
es
mov
decl
shlb
xor
aas
and
mov
shl
add
push
adc
inc
mov
test
xor
outsb
sub
out
cmp
dec
mov
xchg
call
adc
stos
mov
and
sbb
rorl
sub
push
nop
jne
imul
adc
stc
jo
xchg
rcrb
mov
xchg
mov
pop
jb
repnz
sub
cmpsb
es
pop
paddsw
nop
icebp
sub
out
mov
cmp
xchg
fmulp
pop
cs
adc
cmp
sub
mov
dec
xor
sti
dec
repz
xor
push
push
add
pop
inc
fxch
dec
into
sbb
pop
sbb
leave
xchg
cld
addr16
jb
fstpt
add
sbb
nop
adc
sbb
aam
mov
mov
test
dec
repz
iret
push
fbstp
jmp
inc
add
mov
add
dec
mov
mov
inc
xchg
notb
push
mov
std
js
ds
int
rcll
and
flds
lods
xchg
pop
out
dec
adc
call
dec
mov
sub
mov
mov
ja
cltd
jns
ret
daa
and
or
dec
insb
xchg
jnp
sub
sti
add
adc
xchg
push
or
fcomip
ret
ss
ja
xor
lahf
adc
sahf
pop
aam
pop
mov
data16
xchg
jl
xor
cltd
mov
mov
repz
push
mov
insb
mov
sub
aam
imul
pop
mov
inc
pop
les
xor
cmpsb
xchg
hlt
loope
pusha
test
sub
inc
roll
xchg
repz
stos
cmp
addl
add
std
mov
stos
mov
mov
les
inc
dec
fwait
mov
xor
rol
jno
nopl
xchg
pop
lea
fcmovu
int
adc
inc
dec
repz
aaa
ljmp
push
mov
cmp
std
pop
mov
ret
leave
sbb
xor
mov
enter
xchg
int
loop
outsl
xor
test
cltd
inc
ja
sar
xchg
seta
andb
mov
jecxz
mov
dec
jbe
movsb
les
cltd
xlat
leave
mov
add
imul
sbbb
test
in
scas
xor
imul
out
cmp
sub
jl
mov
in
push
jbe
invd
ret
gs
subl
cld
push
mov
outsb
fcomi
in
jecxz
lahf
adc
mov
sbb
push
dec
push
or
out
dec
fldcw
add
cmpsb
mov
das
nop
jmp
roll
xchg
xchg
roll
cli
mov
mov
cmc
sub
pop
clc
sbb
loopne
pop
and
pop
dec
or
pop
mov
stos
and
fld
push
ds
hlt
jb
xor
ljmp
adc
lock
adc
push
add
inc
aam
mov
or
jbe
ret
push
mov
das
jne
imul
andb
popa
jmp
inc
fldt
jnp
sub
ljmp
insb
fucomp
lods
insl
cwtl
movl
scas
fsubs
dec
xchg
pop
popa
or
dec
and
andl
jmp
xchg
jno
xchg
in
cmp
push
sbb
mov
scas
shrb
popf
dec
repz
shl
mov
and
cmp
push
les
push
sub
jle
pop
js
sar
push
jno
outsl
or
sarb
call
cmp
sbb
and
aad
push
push
iret
orb
icebp
and
and
ficompl
cwtl
pusha
call
pop
jle
pop
int
cmc
mov
mov
sub
jbe
inc
xor
adc
stos
pop
and
pop
xor
add
dec
je
adc
xor
pushf
jnp
or
mov
int
add
test
push
ja
adc
mov
xchg
aas
add
mov
rorb
out
cmp
jg
jae
or
cmp
cmpl
in
inc
shl
inc
lret
jle
fistl
test
mov
lahf
push
jo
jecxz
stos
out
xchg
pusha
xor
loopne
jbe
mov
mov
push
adcl
xor
fiadds
test
dec
ret
and
in
fucomip
loope
dec
cmp
daa
in
daa
cmpsl
sbb
gs
das
rorb
sbb
outsb
lea
into
imul
jge
cmc
dec
jb
cmpsl
dec
cmc
xor
loop
adc
icebp
out
cmp
negl
push
push
xchg
js,pt
loop
cmc
mov
cmc
mov
xchg
sub
dec
mov
xchg
cld
jo
or
or
dec
out
lds
xor
ja
fimull
jnp
rcll
pop
popa
mov
pushf
sub
or
adc
ret
pop
out
ret
xchg
jbe
push
pop
scas
or
xchg
dec
xor
lahf
sti
js
adc
adc
faddl
jmp
adc
leave
cld
lcall
pop
mov
fiadds
add
pusha
loope
inc
dec
in
cmp
fsub
push
int3
pop
rorl
mov
pop
cwtl
mov
inc
jnp
inc
mov
push
movsb
mov
test
aam
xchg
push
and
in
xlat
jmp
in
je
ficoms
addl
sub
add
out
push
push
inc
adc
mov
cmc
push
lds
add
jno
lahf
pop
inc
nop
cmpsl
add
push
lea
ljmp
pushf
push
add
shrl
push
inc
jb
adc
sahf
das
sub
ret
outsb
cmp
pop
push
mov
jmp
sub
xor
shrb
mov
mov
sahf
ficomps
pop
mov
orb
mov
lods
notl
sub
cmp
jg
repnz
xor
lods
dec
xor
xor
mov
mov
ss
mov
lea
mov
mov
xchg
pop
test
mov
and
mov
dec
arpl
sbb
fwait
jns
jmp
sbbl
inc
jo
jle
mov
sbb
jge
and
push
into
lea
arpl
mov
xor
in
cmp
and
data16
sbb
cmpsb
fmul
and
iret
mov
xor
in
outsb
insl
cli
or
adcl
lcall
fwait
lahf
aad
negl
fdivrl
or
and
stc
cli
mov
jecxz
out
fcompl
pop
xchg
sbb
add
test
stc
nop
pop
mov
je
xor
adc
xchg
ss
push
imul
push
xchg
or
push
mov
outsl
jns
xor
adc
jbe
xor
xchg
push
enter
insl
and
adc
push
fscale
stos
mov
loopne
negb
lea
jle
repz
imul
xchg
inc
stos
mov
xor
imul
bound
add
sub
test
cmp
cmpsl
loopne
cmp
dec
repz
cmp
out
and
push
xchg
xchg
mov
cmp
insl
sar
sub
ja
jno
adc
sub
pop
les
inc
insb
inc
mov
jp
xor
insl
mov
daa
dec
scas
test
ficompl
xchg
aas
cld
cmp
push
inc
movsl
aas
insb
shll
pop
fdivrl
add
divb
ljmp
mov
sbb
push
jb
test
daa
mov
jns
inc
repz
xor
or
scas
inc
mov
mov
xor
jno
sbb
cwtl
int3
ljmp
sbb
in
xlat
jl
push
repz
sarl
add
rcll
aas
sub
fucomip
or
pop
sbb
pushf
add
mov
or
sarl
idivb
andb
data16
sub
push
pop
rolb
jbe
in
sbb
imul
repz
push
pop
iret
jns
sub
sahf
dec
mov
mov
ss
mov
add
or
mov
mov
sub
mov
sub
pop
mov
jge
stos
leave
repz
inc
xchg
and
js
test
popf
insb
dec
cmp
clc
ret
jge
fisubrs
add
sbb
fidivrs
aam
mov
mov
sub
test
out
lret
push
cmpsb
pop
in
cmpsb
sarb
loopne,pn
sub
test
xchg
mov
lea
ss
outsb
dec
pop
stos
cmp
ret
int3
mov
lret
sub
inc
mov
lret
and
movsl
stos
cmpsb
mov
cli
cmp
pop
mov
pop
adc
push
test
lret
sahf
out
xchg
cltd
add
neg
mov
pop
jle
push
jnp
shl
dec
pop
jle
add
sub
xor
les
aad
sbb
lods
add
std
leave
pushf
jae
pusha
jae
imul
lahf
push
or
bound
loope
sti
sbb
jns
cmpsl
int3
ss
and
test
mov
mov
cltd
add
jge
pop
repz
and
adc
push
push
adc
fdivs
insl
enter
jge
ret
aas
cmp
imul
adc
dec
sub
add
xchg
and
jg
sub
scas
outsb
adcl
test
and
mov
js
inc
frstor
push
sub
push
mov
xchg
rcrb
mov
push
ds
cmp
xor
adc
jbe
mov
push
cmp
push
aam
push
adcb
popf
add
movsb
out
jbe
lock
add
sub
or
push
decb
fisubrl
mov
dec
push
add
dec
jl
push
decb
or
dec
in
sbb
sub
ret
cltd
lcall
xlat
faddl
sbb
add
pop
mov
das
outsb
dec
mov
js
xchg
pushl
pop
in
iret
test
push
clc
in
orb
sbb
jg
sbb
ja
ss
scas
xor
repz
mov
fimull
fcmove
mov
clc
fidivrs
ret
adc
pop
dec
mov
or
test
inc
lods
xor
dec
jno
mov
mov
dec
mov
jnp
ret
jo
loopne
insl
shll
imul
lods
pop
jne
mov
test
jecxz
push
mov
loopne
jge
adc
jne
xchg
xchg
imul
push
mov
cmp
pop
sub
cmpsb
iret
hlt
mov
push
or
pop
dec
mov
hlt
jb
in
push
dec
xlat
or
or
jne
popl
mov
jno
dec
ss
arpl
lods
xor
cmpsl
or
stos
cmp
es
in
mov
test
xchg
fadds
cmp
iret
add
adc
mov
mov
push
icebp
mov
jns
add
hlt
in
dec
mov
mov
ds
pushf
repz
jmp
xchg
fmul
mov
call
dec
push
movsb
std
and
jmp
cli
push
loopne
xlat
sbb
in
into
flds
jecxz
jb
adc
cmpsb
adc
push
test
add
mov
and
jo
pop
iret
int3
and
mov
pop
hlt
scas
ds
sahf
pop
int
ret
push
adc
test
push
mov
cmpsl
out
mov
jmp
mov
scas
push
cld
mov
adc
shll
inc
cwtl
mov
dec
mov
mov
nop
jne
jnp
addr16
mov
mov
call
movsl
outsb
into
mov
mov
jno
outsb
xor
faddl
pop
push
in
lret
or
test
rcrl
mov
xor
sbb
aas
cmpsb
pop
pop
std
sub
jns
scas
xchg
jmp
xchg
insb
xchg
xlat
imul
mov
sub
sub
shl
bound
loope
inc
or
filds
addl
addb
mov
int
lret
jns
cmp
scas
inc
inc
dec
mov
mov
decb
rcrl
inc
mov
and
loop
mov
mov
lea
xlat
sub
push
adc
mov
mov
int
xchg
in
mov
bound
movsl
mov
loope
mov
cmpsb
enter
ss
shl
pop
repnz
scas
popa
cmpsb
mov
pop
insb
bound
push
leave
pop
jb
inc
adc
mov
jne
stos
ss
aad
xchg
push
aaa
sti
xlat
xchg
fnstenv
iret
adc
jg
sti
push
ljmp
lock
add
std
mov
cmp
mov
test
push
sbb
shll
aas
jecxz
jp
lds
xorl
mov
pop
mov
into
add
lret
mov
mov
or
andl
orb
xchg
std
cmc
xor
sti
xchg
pop
pop
scas
orl
mov
pop
mov
out
hlt
inc
clc
push
loop
adc
mov
mov
mov
repz
sub
jp
or
cmp
out
bound
push
loop
xor
hlt
inc
push
dec
shrl
dec
data16
or
subb
sbbb
jecxz
movsl
mov
push
push
mov
xchg
aaa
push
dec
gs
jp
or
das
loope
std
bswap
addr16
jno
adc
mov
add
xor
sbb
lret
mov
loop
jmp
addr16
pop
mov
jno
jo
mov
lea
jecxz
push
jg
mov
or
sar
sbb
push
andl
das
xor
lea
sub
cmp
push
or
sbb
mov
test
das
pop
mov
iret
repnz
out
sar
jno
lods
pop
in
pop
ror
lret
inc
sub
pop
inc
mov
or
insb
fcmovnbe
outsl
jb
scas
jmp
js
in
cs
cmp
iret
jecxz
jo
sub
iret
mov
inc
cmc
mov
stos
in
jo
dec
jb
sub
cwtl
fs
adc
dec
nop
cmp
test
push
dec
jo
bound
clc
inc
push
and
pushf
das
mov
sahf
loopne
cwtl
loop
inc
push
xor
sbb
out
push
in
mov
mov
push
add
cmp
in
fsubl
inc
out
sub
fcoml
pop
cmpb
std
dec
into
imul
push
lods
push
mov
inc
cld
or
xchg
and
mov
stos
les
fcomps
ljmp
outsl
lea
inc
bound
fcomp
fisttps
lcall
mov
imul
jle
movb
mov
aam
cmc
fdivrs
ret
inc
mov
nop
pop
xacquire
mov
jmp
aaa
xchg
lahf
push
jo
push
lea
jg
or
pusha
gs
out
mov
ret
and
xlat
jnp
ret
mov
lds
repnz
mov
sub
mov
sub
rolb
or
call
sbb
fldl
sti
fstp
lret
cmpsl
xor
mov
and
jnp
adc
dec
mov
pop
jne
pop
mov
sub
mov
mov
jge
ds
repnz
ja
mov
mov
sbbl
nop
lea
aas
notb
in
push
pop
sbb
lcall
int3
pop
xchg
scas
and
push
cmc
and
mov
pop
addr16
pop
js
mov
xor
mov
shll
cmp
add
sbb
push
insb
cmp
sbb
add
cli
push
sub
out
cmpsl
repnz
andl
xchg
rcrb
push
fsubs
bound
adc
and
push
jnp
cwtl
push
cs
jl
aam
or
inc
dec
mov
or
bound
mov
mov
cmp
sub
or
test
sbb
flds
mov
stos
hlt
jae
xor
sbb
shl
dec
pushf
in
fistpl
dec
lock
push
jno
add
inc
rcrl
sbb
and
push
push
into
lods
dec
loop
sub
mov
sbb
test
hlt
xchg
jmp
push
cmc
sbb
rcrl
xlat
jmp
test
imul
in
cwtl
jmp
hlt
mov
pop
add
sbb
cmc
mov
shll
push
or
dec
je
mov
shll
xor
outsb
pop
stos
sbb
sarb
neg
cmp
dec
mov
inc
or
imul
cmpsl
cmp
dec
jg
adcl
enter
mov
das
inc
push
aaa
out
inc
iret
add
xchg
push
or
mov
out
push
xchg
xor
ds
sub
pushf
sar
lcall
into
arpl
and
lret
cmp
push
out
lods
add
int3
in
mov
pushf
cmp
wbinvd
jns
stos
imul
xor
test
mov
or
rorl
sbb
test
clc
bound
push
or
mov
rol
cld
xchg
sub
std
push
xor
fucom
movsl
out
out
pop
subb
push
xlat
out
cmp
cli
fdivrs
loope
inc
mov
jae
test
aaa
sbb
and
push
add
push
shl
or
mov
xchg
jae
test
mov
cwtl
push
dec
imulb
stc
loope
pop
lods
scas
xchg
in
fisubrl
jecxz
rcrb
cltd
rcr
push
mov
bt
pusha
fidivs
adc
add
int3
push
into
fs
div
jbe
cmc
lods
or
sub
inc
sbb
mov
sbb
nop
out
sub
ret
aas
dec
in
xor
testl
mov
mov
xlat
jmp
sahf
pop
cmp
mov
or
dec
cld
das
cmc
pop
into
hlt
fmull
das
inc
das
mov
fwait
and
dec
loope
mov
mov
adc
jno
aad
mov
outsl
mov
sub
pusha
popa
xchg
fidivl
ret
dec
dec
mov
pop
sbb
inc
or
mov
cs
pop
ret
outsl
je
xchg
inc
gs
fsub
call
in
pop
aaa
inc
inc
cmpsb
addl
and
ret
ds
pop
push
movswl
adc
stc
and
mov
mov
cmp
in
into
sub
or
add
out
push
mov
fisttpl
cld
fwait
xchg
jge
and
shr
arpl
aam
mov
and
fs
call
mov
push
gs
push
fadd
cmp
imul
push
shr
jns
dec
dec
pushf
xchg
pcmpgtw
aam
repnz
leave
push
mov
mov
mov
pop
bound
ss
call
call
es
jecxz
pop
jnp
add
cltd
and
sti
pop
aas
pop
mov
cltd
mov
inc
sub
scas
roll
mov
test
pop
dec
adc
stos
test
xor
push
cmpsl
jbe
mov
test
out
test
into
jl
mov
sbb
pusha
sbb
xchg
push
inc
or
arpl
mov
pop
test
jo
jno
and
pop
out
cmp
ret
ljmp
fs
mov
mov
movsb
mov
shlb
and
mov
jge
test
mov
aad
lahf
outsl
out
mov
pusha
mov
lock
sbb
movsl
nop
pop
push
jmp
imul
subb
lret
scas
je
out
icebp
fisttpll
iret
push
lahf
cld
xchg
pop
pop
push
push
pusha
test
bound
xchg
fsubrl
jl
gs
rcrb
or
fstl
in
dec
mov
pop
clc
enter
popl
push
sarb
mov
sbb
push
fs
jno
cmpsl
xlat
fisttpl
cli
mov
jp
pop
add
fsts
mov
repnz
out
xor
mov
sahf
ss
out
or
jo
or
movsl
jb
jbe
pop
inc
mov
cli
inc
inc
movb
popa
inc
and
mov
mov
xchg
or
movsl
lods
sti
dec
inc
insl
adc
jg
cmp
imul
js
mov
aas
add
aas
repnz
sahf
leave
jno
mov
cmp
dec
mov
test
ds
mov
xor
and
cpuid
out
xchg
mov
aam
and
xchg
pop
popa
dec
xor
hlt
mov
xchg
sub
sbb
mov
nop
sub
pop
jno
inc
cmp
jno
jns
out
enter
adc
sbb
repz
insl
xchg
xchg
movsl
es
sarl
push
or
jge
sub
aad
push
dec
das
outsl
out
mov
into
inc
scas
sbb
mov
pop
mov
daa
mov
leave
push
lahf
pop
push
lcall
xor
push
sub
lock
cwtl
xor
movsb
cmp
leave
jp
in
inc
sub
xor
push
and
push
test
jo
jmp
jp
inc
mov
sub
or
ljmp
sti
popf
mov
sub
shll
sub
cmp
movsb
lret
xor
pop
in
aad
add
and
inc
les
pcmpeqb
inc
adc
insl
shlb
adc
push
bound
mov
shl
sbb
lret
scas
pop
cmp
mov
adc
testb
in
and
jecxz
jo
mov
aam
xor
iret
dec
mov
cwtl
fldl
sbb
cltd
dec
add
scas
cmp
cmp
sub
loopne
cmp
xor
fwait
sbb
addr16
or
divl
add
dec
add
mov
arpl
xchg
sub
enter
mov
in
scas
inc
and
inc
xchg
sub
addl
mov
loop
pop
test
stos
scas
dec
ficoms
pop
adc
lret
xor
mov
add
into
and
out
sub
std
pop
mov
movsb
cmp
sbb
pusha
icebp
xchg
jecxz
jo
and
mov
cmp
xchg
aas
mov
movsl
jnp
pop
mov
lock
das
rol
loopne
pop
popf
shl
or
jbe
lret
iret
jg
push
sub
jge
shll
adc
xor
pop
pop
mov
ret
mov
cli
sbb
mov
fstpt
stc
push
pusha
xor
outsl
mov
insl
ret
dec
mov
jge
in
hlt
sub
jg
lahf
je
xchg
xor
int3
mov
mov
icebp
negl
packssdw
in
push
push
and
add
mov
mov
inc
mov
adc
xchg
xchg
adc
jno
lcall
mov
and
lods
pop
mov
adc
pop
cmp
testl
icebp
insb
cmpsb
or
stos
push
inc
cwtl
mov
cld
cmp
icebp
pop
cmpsl
cmp
adc
and
popf
cmp
mov
mov
mov
mov
sbb
and
fisubs
or
adc
push
test
lahf
jmp
mov
arpl
dec
ss
mov
xchg
nop
call
xchg
inc
xlat
sbbb
mov
sub
mov
lds
mov
test
dec
xor
jb
subb
dec
sbb
in
add
loopne
mov
fldt
clc
popa
mov
loopne
dec
hlt
xor
push
cmpsl
push
sub
sub
pop
pop
scas
mov
cmpsl
test
test
int3
or
xor
test
mov
arpl
mov
xor
mov
and
jg
push
test
cmpl
dec
sub
daa
fstcw
dec
jae
xor
mov
mov
add
fwait
out
jnp
jmp
sbb
dec
shrb
push
xor
leave
cmp
mov
push
sub
mov
inc
xchg
or
or
sub
mov
bound
rorl
lret
lods
in
icebp
arpl
pop
and
and
pop
mulb
sbb
lcall
dec
mov
and
mov
xchg
jge
movsl
sub
imul
ret
push
dec
scas
in
enter
jle
test
push
lock
clc
jbe
daa
xchg
inc
xlat
sbb
mov
outsl
add
and
push
mov
sub
arpl
scas
jg
lods
adc
inc
mov
push
cmp
das
cwtl
push
popa
subl
lret
and
and
adc
inc
and
mov
add
xor
mov
and
jno
fsubp
mov
mov
ret
arpl
hlt
decb
nop
lds
fstpt
dec
fidivs
mov
out
pop
je
add
adc
aaa
mov
push
sbb
pop
pop
xchg
cmpb
xchg
cmpb
int
sbb
mov
in
push
cmp
adc
jb
sti
push
fsubp
jmp
mov
stc
sbb
add
js
jle
aad
out
jae
jecxz
popf
sub
stos
je
aad
pop
imul
push
and
mov
dec
icebp
pop
mov
xor
sarl
js
mov
ret
popa
inc
dec
mov
xchg
nop
sub
jae
call
push
lcall
sbb
data16
fwait
sbb
sti
jmp
jmp
int3
pop
add
adc
xor
xchg
std
mov
lret
jp
xor
lds
mov
mov
sub
jne
sahf
inc
arpl
mov
jno
xchg
mull
pop
dec
inc
pop
out
mov
or
cwtl
ret
xor
or
push
sahf
mov
out
xor
outsb
lahf
addr16
pop
loop
xor
inc
push
out
ss
xor
or
pop
jl
test
out
seta
jne
inc
inc
or
js
mov
fwait
fwait
xchg
xor
loope
les
inc
push
dec
add
nop
mov
dec
jns
mov
stc
clc
sarl
adc
faddp
pop
aas
jg
dec
sub
dec
push
xchg
adc
pushf
mov
or
inc
and
push
lret
sbb
adc
xor
sarl
adc
push
rcrl
jae
loope
cwtl
lods
shrl
xor
push
cmpb
push
fiadds
outsl
push
cmp
loope
pop
xchg
adc
daa
lahf
pop
cmp
sub
mov
xor
daa
ret
int
repz
sbb
or
push
out
push
in
dec
inc
cmpsl
loope
adc
lods
xor
mov
shr
xchg
les
or
clc
inc
jo
aam
int3
enter
xchg
adc
dec
test
add
sbb
jo
cmc
sub
aas
mov
jecxz
out
icebp
push
insb
loop
fstps
aam
addb
and
mov
or
inc
loope
mov
popa
lret
mov
mov
push
popf
dec
inc
push
cmpsl
mov
jns
mov
hlt
loop
aad
lret
mov
or
cltd
shll
push
or
test
arpl
xchg
out
dec
or
ret
mov
cmp
or
cmp
push
mov
std
jb
push
push
jle
je
and
repz
adc
loop
icebp
xchg
jecxz
jg
aam
leave
dec
lock
push
xchg
sti
pop
mov
sti
cmp
lcall
clc
scas
add
dec
test
rcr
out
mov
or
xchg
push
cmpsb
xor
shll
push
es
lods
jae
xchg
jno
jb
movb
jno
inc
pushf
mov
divl
ss
ds
jle
mov
push
mov
sbb
dec
movsb
cmc
pop
ss
add
sub
add
scas
xchg
loop
movsb
repz
sahf
dec
cld
fwait
mov
fisttpl
jns
addr16
inc
test
pushl
loopne
sub
mov
xor
clc
scas
outsl
adc
sub
dec
repz
sbb
popf
and
cwtl
insl
iret
inc
or
bound
fbld
sbb
shl
aaa
sub
push
mov
ret
andps
adc
push
int
push
mov
lods
jnp
pop
xor
or
cmp
ss
sub
fidivl
fdivl
cmp
pop
xchg
ret
dec
call
xchg
push
test
fsubl
adc
mov
pop
cmpsl
jmp
fs
insb
dec
sbb
mov
std
mov
or
or
cmp
or
push
xor
adc
xor
adc
jae
xchg
into
arpl
sub
or
or
or
jne
add
and
inc
mov
jo
sub
insl
mov
and
push
aaa
pop
stos
xchg
jmp
jb
add
stos
jb
jne
mov
fcmovu
xor
aad
push
sbb
mov
shrl
aaa
add
cmp
sbb
sub
jo
in
lds
jecxz
inc
sbb
pop
loop
lahf
jle
pop
in
bnd
movsl
add
aam
xor
ljmp
outsl
and
movsb
arpl
pop
dec
xchg
jmp
xlat
mov
out
sbb
inc
push
mov
pushf
popa
inc
cmc
mov
or
mov
es
pushf
sub
cmp
out
out
push
xor
loop
pushf
and
mov
add
notb
xor
dec
xchg
addr16
pop
xor
test
jne
ret
out
inc
ret
leave
add
sub
inc
icebp
imul
mov
and
daa
pop
sbb
pop
pop
inc
mov
push
cmp
or
stc
dec
inc
mov
ja
cmp
jnp
dec
in
movsl
je
std
xor
mov
aas
add
pop
mov
xchg
pop
ja
pop
in
or
sbb
xchg
and
pop
push
repnz
bound
or
lock
aas
adc
das
or
pop
pushf
jl
popf
add
mov
idiv
test
pop
sbb
lahf
imul
mov
sub
and
sub
pop
cmc
std
jns
mov
xchg
cmp
sbb
mov
and
inc
sbb
test
pushw
ss
xchg
jecxz
out
int3
adc
mov
sbb
bnd
out
cmp
movsb
sbb
incl
xchg
sbb
pop
push
gs
and
enter
arpl
and
jmp
ljmp
ret
mov
and
mov
inc
jmp
xor
push
fidivrl
dec
sbb
jp
movsl
pop
push
cmp
scas
cmpsb
pop
adc
fwait
push
cmp
xchg
arpl
mov
ret
pop
or
xor
aam
mov
adc
pop
mov
cld
cmc
or
in
sahf
js
decl
call
sahf
aad
lret
test
cwtl
in
adc
pop
jbe
je
shlb
dec
inc
imul
test
out
push
cmp
std
mov
lock
mov
and
mov
loopne
fistps
dec
mov
notb
xor
imul
jp
dec
rolb
push
jmp
inc
je
pop
sbb
xor
outsb
ja
lcall
cwtl
inc
loope
mov
mov
dec
jne
dec
mov
mov
cli
roll
ret
test
lahf
lds
call
and
pushf
mov
std
mov
mov
leave
xchg
repz
mov
mov
out
orl
mov
arpl
sub
cmp
test
int3
leave
sub
cltd
pop
cmc
lret
daa
or
mov
loopne
mov
out
dec
cmp
jmp
mov
xchg
mov
xor
add
xchg
movsb
or
hlt
enter
add
or
popf
movsl
dec
cmp
repnz
inc
xchg
xchg
jnp
pop
or
jg
aaa
adc
and
pop
push
cld
inc
add
ja
sbb
jo
roll
lods
repz
ss
add
inc
les
mov
xchg
jp
repnz
push
xor
sub
mov
sbb
xchg
xchg
mov
sbb
shll
push
lock
xor
cmc
mov
pop
xchg
sub
inc
scas
mov
out
adc
jmp
shl
xchg
ljmp
enter
sahf
xchg
test
add
roll
aam
push
js
outsl
pop
jb
mov
lahf
stc
fwait
sarl
mov
ss
je
test
inc
dec
incl
jle
jg
stos
mov
cmc
fldcw
push
or
in
pop
xor
sub
or
jge
addr16
jmp
adc
inc
xchg
icebp
jb
test
xor
inc
xchg
mov
or
jne
flds
iret
mov
in
sbb
push
enter
cmpsl
iret
ljmp
pop
pop
lea
and
pop
push
mov
or
jae
xchg
push
lcall
addl
pop
xchg
inc
daa
daa
inc
and
or
shll
outsb
cmc
pusha
and
sub
loope
pop
adc
push
rcll
int
test
inc
pop
inc
movsl
iret
sbb
stos
std
xchg
adc
jo
cwtl
ja
in
mov
xor
mov
das
add
data16
nop
jmp
inc
jmp
cwtl
cmp
pop
jmp
pop
aad
xor
push
add
adcb
jle
ja
test
mov
in
push
xlat
push
sub
fwait
xchg
pusha
leave
mov
pop
xor
mov
push
cmp
test
test
ficompl
pop
std
das
mov
and
push
ss
cwtl
cmc
or
repnz
and
aad
and
pop
push
push
dec
imul
imul
outsl
dec
outsl
fiaddl
daa
cmp
mov
xor
xchg
jge
bound
or
or
dec
jecxz
push
mov
rorl
inc
jnp
fidivrl
dec
xor
mov
mov
sahf
js
imul
pushf
inc
in
mov
xor
addr16
mov
call
and
jle
mov
leave
pop
add
pop
push
lods
push
pop
out
psignb
mov
inc
lret
jno
push
dec
push
pop
cwtl
gs
and
jb
mov
inc
loopne
pop
mov
int3
int3
push
ret
adc
xchg
mov
fucomp
fadd
in
call
or
push
sub
cmpsb
loope
sub
push
fidivl
pushfw
test
push
lea
xchg
dec
mov
sub
and
pusha
insb
fdivs
clc
pop
fsub
mov
scas
xchg
stos
add
and
mov
scas
inc
jo
sbbl
cwtl
dec
xor
xchg
push
mov
outsb
jg
xchg
mov
jg
movsl
cmp
mov
inc
lahf
maxps
xor
xor
xor
mov
es
dec
mov
adc
test
in
jbe
jecxz
addb
addr16
and
jg
sar
rolb
loopne
jae
stos
and
mov
and
mov
add
dec
cmp
jle
sub
or
lods
pop
jnp
lock
adc
adc
pop
xlat
stos
cmp
dec
test
imul
jo
mov
xor
or
cwtl
loopne
push
mov
in
inc
add
cmc
dec
cld
fsubrl
insb
mov
outsb
and
sub
ficomps
or
sbb
push
push
clc
cmp
jno
push
stos
sbb
ds
inc
test
negb
mov
xorb
push
data16
pop
inc
in
lods
and
push
roll
lods
out
push
insl
mov
ror
cmpsl
pop
testb
js
or
inc
outsl
or
fwait
jne
push
pusha
imul
imul
lds
mov
cmpsl
mov
aaa
ljmp
or
cmp
lret
or
sub
stc
mov
fisttpl
ret
lods
scas
mov
xchg
into
fidivrl
push
sbb
ljmp
loope
xchg
lods
out
cwtl
ja
adc
adc
out
out
movsb
dec
pop
cmc
insb
adc
lods
jae
sbb
mov
mov
movsb
pop
pushf
jmp
or
mov
mul
fdiv
cwtl
in
pop
xor
inc
sbb
out
add
xchg
mov
sbb
scas
sbb
ret
cli
int
data16
loopne
adc
lea
sbb
aad
shlb
jg
mov
out
xchg
add
test
or
jb
mov
arpl
jmp
pop
pop
pop
lods
jbe
dec
in
clc
fimull
ret
dec
outsb
jnp
aaa
dec
xchg
dec
bound
jle
add
mov
inc
mov
add
jmp
push
add
cmc
inc
xchg
xor
insl
lcall
jbe
xchg
sub
stos
sbb
inc
dec
jl
inc
add
or
sub
lret
adc
mov
fsub
jp
cwtl
xchg
imul
mov
insl
outsb
sub
test
clc
popf
push
int
sarb
fucomp
bound
xor
flds
les
jnp
divb
pushf
jo
les
pop
call
xlat
test
inc
xorb
fisubs
mov
cmp
mov
or
sbb
adc
xor
loop
xor
ret
pop
dec
and
xor
aad
jmp
push
loopne
popf
int3
int3
jg
ret
sbb
mov
stos
mov
outsl
inc
mov
fwait
mov
dec
lret
int
insl
movsl
loopne
sbb
dec
mov
jae
movsl
and
in
jnp
mov
push
cmpsb
cmp
movsb
xor
pop
in
xchg
xchg
xor
out
ret
push
mov
nop
outsl
push
mov
cmp
cmp
jns
dec
es
das
je
cltd
mov
mov
loop
mull
js
mov
ret
pusha
add
xor
movsb
cwtl
fsubs
je
pop
mov
testl
call
es
mov
icebp
aad
adc
push
stc
jb
xlat
ret
rcrl
ja
shrb
mov
jae
inc
or
popf
jge
dec
inc
out
out
mov
or
pushf
pusha
mov
into
jns
mov
xchg
fcoml
lcall
sbb
ljmpw
pop
jle
push
jecxz
popf
outsb
pop
repnz
outsl
loopne
adc
or
sbb
jecxz
cs
ds
jmp
add
fidivrl
es
xchg
and
ljmp
dec
adcl
cmp
cli
js
fs
jge
js
adc
or
mov
push
jno
movsb
push
jb
ficoml
jnp
mov
sahf
in
in
inc
mov
mov
push
pop
mov
stos
lret
push
lcall
inc
insb
out
inc
das
add
adc
inc
add
cmpb
mov
dec
popf
xchg
jbe
imul
ret
adc
loop
sub
and
repz
xchg
dec
call
cmpsb
adc
iret
es
inc
in
outsl
jge
jge
mov
pop
push
cwtl
lds
fwait
js
fst
aas
mov
mov
xchg
sub
inc
loope
imul
mov
xor
sub
pop
xor
outsl
and
mov
subb
cli
xor
pop
sbb
mov
lret
in
fnstcw
push
sub
push
pushf
xor
inc
push
pop
push
ret
nop
movsl
dec
or
repz
push
aaa
xor
xchg
adc
incb
xlat
push
mov
cmp
and
mov
sbb
sub
xor
cmp
add
push
enter
cmp
pop
sbb
xchg
call
lods
sub
xchg
lods
xor
dec
in
es
mov
pop
mov
test
pop
push
jmp
inc
xchg
xor
push
outsl
out
pop
cmpsl
lahf
in
mov
into
xor
cs
add
aas
xor
out
dec
lret
or
in
stos
js
lahf
mov
aad
pushf
dec
jns
sbb
test
adc
sbb
shr
inc
movb
lds
sub
push
loopne
pop
pop
fsts
subl
cmp
arpl
inc
scas
cltd
shrb
cmp
pop
jne
and
mov
pop
cmp
dec
fimuls
pop
notb
dec
scas
pop
pop
shlb
inc
idiv
push
cltd
loopne
in
or
orl
mov
jmp
mov
jp
ret
outsb
iret
pop
pusha
push
dec
dec
cmc
fsubs
inc
mov
adc
sub
neg
out
test
gs
fisubrl
push
dec
mov
enter
jno
inc
lods
jg
mov
xlat
into
ss
arpl
jge
test
mov
std
jp
hlt
test
sub
cld
mov
aam
cmpsl
fsubrp
cs
lret
into
out
cmp
jl
or
rcll
inc
loope
dec
xchg
inc
add
nop
test
mov
dec
adc
gs
icebp
adc
jb
inc
lods
cltd
cmpsl
push
sbb
push
xchg
divb
cmp
push
pop
stos
int
jno
and
fsubr
and
jno
lcall
inc
lds
cmpsl
repnz
xchg
dec
inc
loopne
insb
jns
mov
les
and
hlt
pop
dec
or
test
lods
pop
dec
inc
cld
jbe
push
xor
int
out
push
xchg
jb
xchg
push
inc
jg
pop
inc
fsub
dec
xchg
mov
adc
lods
cmpsl
dec
xchg
sahf
insl
sbb
in
scas
mov
sbb
int3
mov
mov
adc
int3
push
mov
and
or
mov
test
cmp
push
adc
adc
js
or
outsl
mov
push
xchg
mov
and
mov
loope
or
mov
lea
cmp
repz
xchg
push
ljmp
rcl
xchg
push
std
push
lods
xlat
sbb
insl
orb
jno
mov
mov
scas
roll
test
sub
push
mov
faddp
loope
cmp
cld
or
mov
fsubl
in
push
cmp
iret
rol
popa
cmpsl
addb
adc
imul
out
push
gs
clc
xor
lret
ret
and
pop
push
call
dec
pusha
cs
popf
outsb
ljmp
jnp
xchg
xchg
cmp
fsubl
jbe
push
or
cmp
shl
adc
outsb
cmpsb
popf
fwait
lea
inc
notl
lret
in
test
aaa
stos
jle
das
xchg
pop
cmp
jge
ljmp
mov
inc
repz
pop
cmp
lods
cmp
aam
sbb
out
add
mov
leave
out
cmp
out
mov
in
addr16
stc
notb
mov
xchg
dec
aas
jnp
sti
and
adc
mov
inc
xor
push
stc
push
or
sbb
sub
push
xorl
dec
je
sahf
pop
add
push
or
outsl
dec
inc
stos
int
scas
pop
mov
cmpl
mov
xor
clc
xchg
stos
rcrl
loopne
and
js
aad
add
mov
dec
and
dec
cmp
pop
xor
int
aad
les
addb
lcall
xor
daa
pop
push
inc
and
mov
mov
xchg
xchg
fs
push
xchg
and
int
aad
adc
js
mov
mov
adc
call
jno
fcomps
fmul
daa
mov
sub
insl
fwait
add
or
hlt
jmp
pop
or
mov
stos
dec
pop
dec
mov
adc
xchg
jmp
xchg
lret
dec
inc
dec
sbb
arpl
scas
fidivrs
movsl
pusha
pop
ljmp
lret
cli
inc
aad
push
add
outsb
or
mul
fsubl
adc
inc
sarl
cmp
adc
xchg
fs
cmp
xlat
or
sahf
jg
xor
push
stc
dec
push
xchg
adc
dec
mov
lods
cld
cmpsb
lcall
addr16
fdivrl
push
cmp
push
push
das
movsb
push
mov
je
bound
mov
xor
lcall
pop
mov
in
cmp
stc
daa
inc
stc
cltd
mov
mov
sti
int3
push
lods
mov
subb
mov
or
fninit
je
cmp
mov
xor
push
js
int3
cltd
inc
fisubl
ret
mov
push
dec
mull
dec
mov
cmpsb
test
dec
push
fisubl
pop
push
or
cmc
insb
jne
dec
jge
sub
xor
cs
imul
xchg
mov
inc
sar
xchg
mov
orl
and
mulb
icebp
cmp
fwait
data16
jnp
jg
sarl
ds
aaa
jp
cmp
repnz
mov
incb
lret
dec
inc
cmp
cs
rorb
rep
pop
jnp
jl
mov
movsb
xchg
test
mov
daa
cmpb
gs
dec
rcrb
in
mov
jne
cltd
repz
int
add
daa
xchg
mov
dec
jl
cltd
scas
jo
or
mov
dec
mov
das
jmp
in
rcll
dec
test
into
xchg
js
push
jl
mov
sub
cmp
or
sti
jbe
sbb
xor
out
cmp
xchg
nop
loopne
mov
dec
mov
ret
fisubrl
in
iret
mov
je
pop
jno
push
dec
xchg
push
movsb
jo
xorb
mov
data16
mov
push
int3
pop
arpl
repnz
sahf
push
sub
lock
aad
fildl
imul
int3
or
inc
gs
inc
lods
push
imulb
adc
rol
mov
mov
xor
subl
jno
jmp
andb
mov
fstps
and
adc
sub
add
lahf
add
scas
and
divl
out
cmp
nop
or
leave
mov
push
movsl
xor
test
xlat
and
lods
or
cmp
add
ficompl
mov
push
mov
cmovb
pop
inc
jae
mov
leave
lods
jnp
lret
outsw
dec
iret
jmp
and
pop
cli
mov
rcrb
cmp
inc
jecxz
sub
mov
cmp
jns
mov
push
push
cmp
movsl
test
inc
xor
push
adc
push
pop
mov
adc
cmc
jns
sbb
mov
cmc
sub
mov
je
loopne
xor
lret
insb
cmp
push
je
jmp
faddl
js
push
sub
lds
pop
in
je
mov
push
pop
out
add
aaa
jecxz
das
cmc
sub
ror
int3
mov
adc
movb
adc
icebp
push
and
dec
arpl
xor
aas
adc
rorl
xchg
inc
mov
out
test
out
sub
ret
inc
dec
mov
sbb
mov
gs
sbb
enter
jg
and
add
cld
push
lcall
push
cmp
jecxz
and
mov
inc
es
sub
and
and
scas
js
inc
outsl
sub
fs
pop
xchg
rorb
bound
iret
lret
adc
aaa
and
fmulp
sahf
sahf
mov
or
cmp
dec
or
div
and
add
testl
inc
pushf
icebp
push
and
and
adc
push
push
lahf
lahf
xlat
ret
adc
push
leave
xchg
ljmp
mov
mov
pop
adc
ljmp
push
test
lea
pop
and
lods
xchg
jl
imul
mov
jmp
sub
mov
dec
fldenv
dec
xor
lahf
pusha
mov
jns
ljmp
lods
and
pop
push
cmp
loope
dec
int3
les
lods
push
test
sbb
mov
inc
xchg
xlat
stos
inc
movsb
out
lret
dec
xchg
jns
dec
push
xchg
rcll
add
das
inc
sbb
jnp
ret
fimuls
xchg
cmp
sbb
xchg
addb
fsubrl
or
inc
rcll
sahf
inc
movsb
mov
mov
sqrtps
xchg
mov
test
lret
jge
cmp
lret
jb
in
jl
stos
sahf
int3
subl
push
inc
xchg
out
adc
inc
imul
fisubrs
push
loopne
mov
outsb
sbb
push
mov
lods
cwtl
in
push
repnz
rorl
lods
inc
xchg
arpl
loopne
xchg
repnz
adc
out
xchg
cmp
jle
cmpb
mov
xchg
fcmovb
fwait
aaa
dec
popa
mov
fnstenv
aad
lcall
loopne
inc
pushf
nop
enter
jp
mov
xchg
dec
or
enter
xchg
lret
iret
cmpsb
pop
push
xlat
and
mov
dec
cld
subl
jmp
pop
mov
aad
cmp
adc
cmp
jae
sti
lret
dec
inc
not
test
mov
out
cmp
jae,pn
aam
insl
ja
scas
cltd
insb
imul
pop
loop
rorl
mov
ljmp
out
fimuls
mov
adc
sub
lret
pop
dec
subl
push
clc
xor
inc
add
sbb
jg
adc
xchg
inc
ss
mov
outsl
cmp
mov
add
je
xor
push
xchg
adc
notb
roll
lods
push
in
roll
mov
aad
pop
dec
aas
dec
in
popa
jnp
jb
jbe
fmulp
js
jg
pop
sti
adc
mov
mov
pop
xor
mov
pop
cmp
dec
outsb
outsl
xor
sbb
mov
cld
add
jnp
cs
in
fdivl
mov
pop
mov
dec
pop
or
sti
add
jns
stos
scas
mov
jge
out
sub
gs
ljmp
xchg
inc
std
push
dec
test
sbb
push
mov
xchg
cltd
popa
sub
pop
jne
cmc
push
inc
and
push
test
adc
pop
and
mov
insb
mov
enter
adc
mov
dec
push
pop
test
insb
and
inc
pop
jecxz
mov
fsubl
adc
pusha
mov
pop
in
iret
loopne
mov
insl
enter
pop
cld
sub
fistpl
push
mov
mov
loopne
sub
test
mov
out
insb
ljmp
cs
insl
or
sub
mov
mov
dec
adc
xchg
mov
movsb
pop
jbe
adc
inc
adc
pop
ror
fwait
mov
out
cmp
cmp
aas
or
mov
pop
mov
xchg
jns
and
xchg
out
mov
cltd
fsubl
mov
jnp
lcall
jnp
cwtl
daa
fsubl
push
xchg
sub
push
pushl
test
mov
or
xor
enter
aas
mov
daa
clc
and
mov
orl
aam
xor
sahf
mov
push
in
std
push
aas
test
add
out
add
popa
push
sbb
mov
or
or
cmpsb
repnz
fcmovu
fwait
jge
cmpsb
aam
fisubl
lds
aad
rcrl
sahf
in
lock
scas
aaa
out
imul
add
subl
pop
adc
lret
arpl
jmp
jmp
mov
outsb
ljmp
add
push
das
out
into
lcall
jmp
lea
data16
les
rol
add
adc
and
jp
mov
cwtl
or
mov
jns
xchg
sbb
out
push
dec
iret
xchg
or
mov
bound
dec
imul
jbe
jae
outsb
pop
jge
cmpsl
iret
data16
or
mov
imul
imul
add
lds
stos
jb
lods
xor
pop
push
das
int3
push
leave
loopne
fsubrs
pop
jbe
es
in
imul
pusha
cmpsb
and
insb
push
pop
pop
sub
jmp
jle
mov
xchg
rcrl
fwait
aaa
or
mov
jmp
xchg
or
sub
mov
mov
stos
pop
outsb
inc
mov
xor
adc
xchg
fadds
rorl
push
and
fs
fists
insl
jecxz
and
test
lods
pop
inc
lods
pop
push
mov
xchg
iret
sbb
mov
nop
mov
xlat
shll
jae
pop
push
aaa
fiaddl
push
cmp
mov
jo
lods
insl
test
dec
cmp
fs
add
or
aaa
jle
ret
mov
inc
xchg
xor
sub
cmpsb
jnp
sub
jb
in
aas
das
mov
movsb
fiaddl
and
cmp
and
popf
dec
jne
jne
or
cmp
add
inc
cmp
add
sub
addr16
loop
and
cmp
mov
stc
jns
jb
mov
jge
push
sti
jp
mov
xchg
les
jb
adc
adc
and
movsl
and
push
sub
xchg
movsl
aad
outsl
push
sbb
inc
cld
mov
xchg
mov
add
loop
es
lret
push
jl
pop
jb
inc
addr16
movsl
cmp
int3
mov
sbb
int3
outsl
sub
insl
outsb
and
lea
scas
es
ljmp
cltd
leave
jp
mov
cld
loop
int
mov
addl
sarl
bound
xor
adc
pop
lods
sar
xchg
mov
ret
xor
pop
iret
sbb
cmp
mov
daa
lock
stos
aas
cli
jno
call
negb
insb
nop
pusha
repnz
adc
jg
scas
imul
pusha
aam
cmp
pop
cmp
gs
jl
push
dec
ljmp
clc
and
jecxz
push
aas
testb
jnp
dec
jmp
mov
xchg
xor
or
sarl
test
sti
ds
and
mov
mov
out
inc
fldl
fld
sbb
mov
mov
xor
out
pop
sarb
sti
mov
leave
xchg
enter
sbb
das
inc
dec
pop
mov
stos
and
sub
sbb
in
inc
fstl
mov
out
mov
pop
mov
out
cltd
and
xor
outsb
sub
and
sub
daa
imul
cmpb
mov
in
mov
cmp
je
jecxz
sbb
cmp
pop
jns
popa
inc
mov
push
sub
jbe
mov
jmp
mov
imul
pop
jo
enter
and
fs
sub
and
xchg
addr16
scas
out
xchg
enter
dec
iret
fldl
add
dec
push
jae
sub
add
cwtl
outsb
outsb
pop
mov
dec
shr
push
xchg
push
sub
mov
dec
das
inc
sub
js
iret
mov
xchg
aam
int
and
adcl
enter
arpl
sub
or
inc
mov
cmp
data16
push
sub
fst
cmp
fisubrl
inc
adcl
inc
mov
int
push
in
ret
mov
movsl
pop
stos
dec
jb
jb
popf
bound
dec
rorb
push
sbb
in
test
shr
jns
dec
test
and
dec
adcl
aam
inc
dec
lods
cmp
inc
int3
xchg
mov
and
xsha1
cmpsb
iret
idivl
leave
pop
outsb
stos
and
mov
fwait
js
popa
mov
mov
outsl
sub
mov
add
cs
mov
stos
push
or
mov
pop
aas
fmulp
hlt
fistpl
fsubrs
loope
xchg
and
adc
xchg
les
pop
sbb
inc
adc
cmpsl
push
clc
or
mov
les
adc
pop
sub
mov
push
xchg
xchg
leave
dec
pop
popf
jns
add
adc
fs
cmp
stc
cmpsl
repnz
lock
in
xchg
outsb
mov
int
sarl
adc
jle
xchg
dec
xor
push
cs
in
sbb
push
mov
movsl
cwtl
cmp
sahf
mov
movsl
data16
inc
mov
clc
jbe
push
lea
add
stc
add
inc
dec
fsubrl
cli
add
imul
sub
adcb
add
push
pop
sar
inc
mov
popf
xchg
out
inc
das
ljmp
lds
lods
cmp
sub
jnp
jno
ret
inc
adc
xchg
jg
add
pop
sbb
lret
ljmp
mov
pop
mov
or
cmp
test
inc
js
mov
push
pop
sbb
testl
add
call
das
lret
add
ja
dec
addl
lock
daa
andl
cld
mov
push
in
outsb
jp
or
in
mov
inc
orl
out
aam
mov
xchg
sbb
loope
aam
jl
mov
scas
inc
xchg
cwtl
xor
test
hlt
arpl
outsw
jo
cwtl
call
arpl
repnz
pop
push
and
inc
arpl
inc
mov
les
lcall
pop
jge
test
mov
ret
jl
or
ficomps
mov
test
xlat
xchg
test
lea
cmp
movsl
inc
or
fwait
pop
mov
int3
pop
cmp
add
fnstsw
bound
pusha
test
push
adc
dec
sub
xor
xor
test
mov
mov
cmp
push
cmp
pop
cltd
xlat
jb
adc
jo
enter
movsl
sarb
mov
lcall
popl
xor
dec
fildll
mov
push
lds
outsl
data16
shll
lret
xchg
or
sbb
inc
and
sub
mov
std
inc
and
mov
pop
add
je
int3
stc
xorb
mov
sbb
les
mov
lods
sub
in
or
adc
out
bound
adc
mov
sbb
addr16
jne
adc
arpl
into
lods
push
int
jo
popa
pop
fwait
add
pop
jns
inc
ret
dec
add
sar
sbb
imul
lock
int3
gs
mov
jne
sub
scas
dec
mov
jecxz
dec
test
inc
inc
dec
scas
inc
xlat
mov
and
imul
jg
or
js
dec
lds
cmp
shll
int
pop
mov
fidivl
aaa
loope
jge
jp
inc
push
cs
push
jle
xchg
and
je
cmpsb
add
inc
xor
repz
fbstp
jae
xor
mov
or
movl
inc
rep
mov
or
repz
mov
pop
dec
mov
adc
into
leave
xchg
arpl
jb
mov
testb
mov
cwtl
jg
and
inc
aas
popf
icebp
pop
sbb
add
loopne
incl
shll
aaa
fistpl
push
inc
mov
nop
sbb
inc
dec
add
jb
sub
in
mov
lret
mov
sub
adc
fsubrl
pop
jmp
jb
mov
ss
insl
jg
push
cmp
pop
in
pop
or
dec
std
mov
shll
and
int3
ret
sarb
inc
add
fwait
outsb
out
std
arpl
bound
orl
je
jb
jmp
pop
outsb
gs
jbe
sub
inc
mov
test
mov
adc
pop
adc
iret
aam
push
mov
xor
sti
notb
ret
inc
stos
sub
pop
das
mov
dec
mov
dec
repnz
out
stos
push
mov
out
icebp
js
push
sbb
in
jp
mov
and
repz
call
mov
cmpsb
mov
mov
inc
adc
mov
jb
xchg
xor
rorb
cmp
pop
jbe
adc
aaa
inc
or
test
dec
scas
scas
psllw
xchg
ss
push
aas
push
sbb
push
add
add
mov
cltd
or
mov
mov
cmp
and
repnz
jmp
and
cmp
out
jp
lret
mov
lods
add
push
adc
mov
arpl
adc
movsl
mov
sbb
enter
test
insb
inc
mov
out
xchg
inc
insl
adc
pop
add
hlt
and
push
insb
hlt
out
add
mov
out
pop
imul
jae
fisubl
sbb
pop
or
test
insl
lahf
out
daa
sahf
sbb
int
sbb
xor
pop
push
push
dec
fiadds
negb
ret
sti
mov
jae
inc
and
imul
jae
mov
dec
sub
clc
adc
js
xor
bound
std
and
dec
dec
xchg
mov
jl
jbe
repnz
adc
call
popa
and
mov
jno
pushf
iret
add
cmp
addr16
dec
sub
popa
add
iret
call
mov
enter
adc
inc
fistps
arpl
lods
in
xchg
or
push
pop
mov
inc
and
jl
into
jno
jno
sbbl
sub
or
mov
adcb
stos
test
ret
into
cmp
adc
loopne
mov
xchg
les
xor
bound
imul
out
inc
je
xchg
adc
mov
jbe
mov
repnz
and
pop
sub
cwtl
add
cmpsl
aad
dec
xchg
leave
mov
cwtl
push
faddl
and
push
push
cmc
les
cmp
stc
test
dec
mov
pop
sub
mov
dec
ror
mov
cwtl
aam
mov
jg
push
sub
dec
nop
mov
movsb
mov
in
mov
test
mul
mov
call
ret
push
imul
cli
daa
rcr
adc
fnstsw
push
loopne
leave
mov
jne
cltd
faddl
divl
cltd
fs
or
stos
xor
xor
lcall
dec
and
sub
and
jae
dec
push
stc
mov
and
xor
mov
mov
mov
inc
dec
data16
and
and
incl
adc
mov
call
mov
or
sahf
pusha
adcb
fs
xor
decb
mov
lcall
inc
or
lret
pop
mov
add
insl
js
dec
xchg
dec
xchg
add
cmp
jne
jmp
mov
jne
push
add
mov
sbb
dec
xchg
push
xor
xchg
xchg
test
sbb
add
int
pop
sti
js
sub
adc
popf
lock
popa
add
mov
fildll
mov
out
gs
into
mov
fs
loopne
jns
fsubl
into
daa
repz
js
testb
inc
enter
mov
push
loope
aam
mov
adc
out
adc
mov
test
adcl
gs
add
cmp
pop
in
test
out
or
jle
jne
icebp
sub
in
sahf
lret
push
mov
lcall
sti
stc
push
xor
jo
jne
shrl
and
insb
in
sub
mov
push
or
dec
insl
mov
shrl
dec
xor
arpl
icebp
pop
or
push
push
test
out
insl
sahf
leave
mov
fwait
ss
subl
out
mov
loop
daa
jns
mov
movsl
leave
sbb
inc
outsb
cmpb
pop
cmpsl
xchg
inc
dec
mov
mov
sub
fucomi
ja
fildll
pop
jo
mov
and
or
pop
or
jg
pop
mov
pusha
inc
mov
dec
jge
sahf
xchg
mov
inc
xor
sub
sbb
cmp
mov
iret
ss
xchg
fsubrp
outsl
int3
xchg
lea
andb
push
test
les
jns
push
nop
imul
inc
or
or
jns
pushf
jecxz
jnp
sbb
ljmp
cs
adc
push
pop
ret
xor
imul
fisttps
fistpll
scas
push
pop
jp
push
pop
sub
mov
mov
adc
jle
test
pop
mov
mov
adc
mov
xchg
popf
sarb
cli
aad
rorl
mov
into
cltd
cli
cli
insb
into
pop
js
das
push
dec
call
pop
cwtl
cmp
notl
xchg
lock
les
push
pop
test
les
stos
idivl
arpl
nop
sub
lret
sub
or
je
mov
aam
imulb
mov
cli
push
roll
xchg
sbb
loopne
cmp
es
add
insb
push
xchg
or
dec
cltd
jl
xor
pushf
mov
and
lret
aaa
inc
fistl
dec
outsb
push
movsl
mov
jne
stos
fidivrl
dec
mov
loope
sbb
dec
out
xor
das
xchg
clc
in
or
fists
je
pandn
dec
jle
adc
mov
cmc
xchg
call
repz
xor
mull
mov
pop
nop
fsubrs
lock
sbbb
push
fs
fdivrp
repz
inc
add
outsb
push
xchg
push
stos
inc
cmp
push
ret
lds
or
ss
movsb
sbb
adc
push
imul
mov
icebp
ret
mov
sub
mov
cmpsb
inc
jmp
ficoml
push
sbb
scas
adc
mov
dec
call
cltd
aad
xchg
xor
ds
and
pop
sub
fistl
mov
xchg
lret
xor
rcrb
xor
ja
mov
ja
fcmovne
test
aad
sbb
lahf
testb
and
fs
cmp
add
outsb
cmp
mov
adc
adc
push
or
aam
push
insb
iret
xorb
add
arpl
cltd
ret
mov
sub
cmpsl
fdivr
cmp
data16
pop
mov
push
xchg
shll
cmpsb
inc
push
jae
idiv
aad
aad
sbb
out
test
dec
or
dec
inc
fnstcw
adc
xor
mov
mov
in
sub
sarl
sbb
in
fimull
ficompl
pop
in
fnstenv
enter
aaa
mov
lods
shlb
add
jno
adc
mov
mov
lret
jge
shll
fidivrs
insl
fnsave
out
out
stos
push
loopne
call
and
or
sarl
loopne
aad
std
sbb
pop
sbb
add
push
mov
fptan
xor
sahf
clc
add
inc
push
out
test
int3
jp
cmpsl
ss
stos
repnz
mov
cmpsb
inc
inc
cmp
pushf
xlat
hlt
push
push
and
xchg
leave
mov
loopne
loope
andb
std
repnz
inc
cmc
loopne
cmp
add
out
mov
or
add
or
pop
dec
push
pop
es
inc
inc
inc
int3
sbb
pop
and
mov
sbb
not
sbb
in
mov
inc
jae
push
jno
fdivrl
pop
pop
mov
loopne
cmp
push
mov
jbe
sbb
loop
jecxz,pn
into
nop
inc
inc
and
cmp
inc
add
out
push
dec
cmp
pop
sbb
lea
or
mov
lock
jmp
cwtl
jp
mov
std
gs
rolb
or
pusha
inc
mov
mov
mov
movb
or
ja
push
outsl
push
push
pop
xor
xlat
das
lcall
ret
into
sbb
push
adc
sub
xchg
jae
adc
or
fbld
lret
in
ja
adc
ficoml
sahf
mov
push
loop
popa
jge
rorb
mov
test
xlat
les
mov
jg
pop
cs
mov
pop
stc
pop
push
xor
cld
mov
jno
loop
pop
push
repnz
dec
xchg
mov
dec
int3
cltd
pop
mov
or
fwait
add
out
jmp
enter
sub
shl
ds
lret
xor
lea
push
push
xor
xchg
xor
mov
int3
or
stos
jl
lret
fcoms
cmpsl
outsl
jae
mull
mov
cmp
or
inc
out
aam
nop
add
pop
mov
je
push
jb
and
psubq
xchg
xchg
dec
dec
cmc
cmpsb
add
mov
xlat
push
lea
push
jmp
cld
test
nop
xor
cmpb
adc
xor
and
sub
fcomip
aas
enter
push
and
stos
pop
lret
cmp
xchg
pop
hlt
movsb
call
rorl
cmp
daa
xor
or
loope
cmp
das
sbb
ret
movsl
shlb
dec
mov
sub
rclb
inc
xchg
dec
jecxz
loop
mov
sub
addl
add
and
loope
imul
push
mov
scas
pop
jne
push
lcall
jge
and
push
and
pop
pop
dec
mov
adc
out
jns
inc
rcrb
es
call
push
inc
int
enter
jbe
das
cli
pop
sbb
or
adc
fstl
pop
mov
push
inc
cmc
imul
loope
jg
test
lret
pop
or
fadd
push
data16
in
sbb
ljmp
lds
insl
mov
fildll
xchg
fs
xor
push
addr16
and
loope
xor
sbb
cmpsb
out
jnp
adc
sub
or
jp
stos
dec
jno
outsb
xlat
in
cmp
mov
lret
out
out
jg
pop
out
sbb
mov
push
fildl
mov
jg
imul
xor
mov
dec
or
mov
xchg
push
bound
mov
aad
and
pop
lahf
cmovp
and
jo
jecxz
push
dec
jo
pop
movsl
push
or
arpl
adc
inc
jp
jne
int3
scas
adc
push
clc
icebp
mov
in
lret
movsb
in
shl
xor
xchg
cmp
je
add
cmp
dec
inc
nop
mov
ret
enter
inc
pushf
cmp
fstps
imul
lods
mov
xor
jno
dec
pop
sub
and
pop
dec
int
and
sub
out
cli
xlat
lret
inc
sub
fistpll
xchg
xor
sub
cmp
stos
in
cltd
push
push
dec
bound
test
xchg
ret
xchg
lea
movsb
inc
inc
setle
popf
or
jb
add
adc
int
daa
je
jp
mov
into
shrb
mov
mov
xor
sbb
jbe
pop
out
out
pop
jo
loopne
clc
in
and
xchg
pop
lret
xchg
in
sbb
iret
dec
aas
clc
ljmp
rol
loop
inc
add
push
jb
lods
push
dec
push
sbb
imul
gs
lods
cmp
sarb
or
adc
mov
mov
mov
jl
xchg
push
mov
inc
add
jg
xlat
leave
pop
ret
mov
int
push
mov
mov
mov
in
stos
push
pop
or
loopne
fdivr
adc
pop
mov
adc
xor
jge
roll
push
jnp
inc
mov
dec
in
shll
scas
inc
sbb
mov
out
mov
cld
xor
arpl
sbbb
pop
test
push
or
mov
inc
stos
lods
inc
push
test
add
jnp
scas
orl
inc
test
jno
push
push
ficoms
rcrl
mov
xor
test
in
jge
mov
dec
and
push
xchg
and
and
andl
mov
inc
out
mov
lret
cmpsb
adc
cmp
dec
je,pt
jae
movsb
jns
jb
jb
pop
and
mov
lcall
inc
das
insb
push
stos
cmc
pop
aad
jg
ret
in
data16
jmp
pop
in
leave
jmp
jge
idivl
into
loop
sub
lock
mov
arpl
in
fmul
xchg
imul
jb
xchg
shll
addr16
xchg
sahf
mov
xchg
jb
xor
mov
push
scas
sbb
mov
add
cltd
jg
call
ret
addb
lods
mov
jnp
or
inc
xchg
les
dec
cmpl
scas
push
xchg
inc
xchg
cli
outsb
jnp
mov
cwtl
xchg
inc
cmp
rclb
pop
inc
pop
adc
push
xchg
scas
fs
in
xchg
ficompl
mov
movsb
aaa
dec
out
cli
xor
xor
int3
push
xor
push
lock
ds
or
jne
inc
scas
sub
push
jbe
sahf
mov
ljmp
xor
cmc
cli
lahf
pushl
or
inc
xchg
mov
xchg
inc
imul
add
xor
lock
mov
pop
enter
call
cmp
rorl
dec
loop
mov
xchg
mov
emms
sub
dec
cs
adc
mov
push
cli
in
xor
dec
fildll
mov
cli
addr16
add
cwtl
je
xor
pushl
push
push
mov
xor
lret
mov
sub
or
imul
movsl
mov
pusha
and
pop
jns
jo
mov
cs
ja
popf
jge
enter
sbb
testl
outsl
leave
sub
mov
fbld
std
mov
xor
cmp
jmp
xor
add
cmp
xor
rcl
xchg
dec
xchg
pop
fidivl
cwtl
and
lahf
dec
sti
push
shll
xor
je
mov
mov
xor
pop
ss
ds
inc
std
mov
cmp
mov
mov
dec
loop
and
cmp
or
cmp
insl
or
into
in
xchg
xlat
adc
dec
add
jmp
sub
xor
sbb
imul
mov
ret
xchg
cmp
clc
sbb
pop
dec
adc
push
out
push
jp
xchg
in
ficomps
mov
lcall
add
push
sahf
xor
cmp
cmp
fdivrs
aad
mov
pop
inc
add
jl
cmp
lret
ret
sahf
add
gs
mov
out
addb
lds
fldl2e
popf
sbb
jmp
cli
or
movsl
xorl
stos
jmp
inc
icebp
mov
test
jl,pn
rcl
xchg
pop
mov
adc
mov
popf
mov
mov
jg
jg
pop
mov
pop
fcomp
repnz
gs
cmp
push
mov
cmpsb
add
cmc
mov
push
adc
cmpsb
xchg
out
jne
and
jo
shrl
rclb
mov
cmc
add
cltd
stos
jnp
adc
push
xchg
mov
push
aad
cmp
les
das
pop
fstl
and
inc
push
les
rorl
sbb
mov
push
stos
test
xchg
inc
add
test
xorl
out
popa
mov
jmp
imul
push
push
insl
inc
nop
mov
xchg
inc
cmp
out
dec
push
imul
je
fnsave
cmp
inc
fdivrs
push
call
mov
cmp
daa
cld
adc
jb
cltd
dec
push
cmp
xor
sahf
sbb
scas
cmc
popf
cmp
loopne
je
insb
cmp
or
add
hlt
das
fmul
aas
jne
iret
pop
xchg
fcomps
pop
push
mov
cmpsl
je
andb
icebp
fistpl
cmpsb
mov
dec
inc
imull
cwtl
mov
scas
adc
xchg
sub
fcomps
lret
pop
mov
test
in
gs
subl
sbb
daa
xchg
and
stc
fmul
pop
cmp
xor
and
fidivs
aaa
cwtl
js
adc
int3
int3
aam
pusha
xor
movsb
and
mov
lods
dec
stos
cmp
or
loop
test
outsl
xchg
push
mov
sti
push
in
mov
cli
jnp
dec
addr16
aam
lret
int3
in
xchg
sti
test
imul
aaa
xlat
jge
cmp
xchg
dec
sarl
and
lock
and
pop
fdivrs
mov
mov
or
in
push
adc
stos
cmp
cltd
test
and
mov
or
call
sbb
inc
test
pop
movsb
leave
out
fcoms
inc
jno
xor
xchg
rcll
pop
shll
sbb
pop
dec
bound
sbb
les
or
movsl
mov
int
adc
dec
inc
mov
jnp
mov
push
xchg
adc
lea
pusha
icebp
xchg
stos
inc
sub
das
jae
dec
or
and
mov
adc
loop
call
ret
adc
xor
lock
pop
xor
xor
dec
xchg
aas
cmp
add
mov
dec
dec
test
outsb
xchg
adc
inc
sbb
and
push
jnp
repz
inc
pop
pop
or
sbbb
mov
add
sbb
xor
pusha
jno
insb
or
sbb
hlt
leave
in
test
dec
dec
mov
cli
movsl
ja
pop
fucomip
out
data16
cmp
cmp
sub
mov
jne
imul
jnp
inc
dec
incb
cmpsb
jmp
cmp
mov
sbb
or
inc
mov
adc
dec
jb
lret
jae
cmp
in
pop
and
xchg
popf
jmp
and
js
sarl
jmp
jle
lea
outsl
fcom
sub
xchg
lcall
ja
lret
les
icebp
mov
int3
in
mov
fstl
pop
out
jmp
gs
mov
adc
and
ja
mov
jnp
arpl
fwait
inc
mov
xchg
jnp
adc
mov
iret
cmp
fnstenv
aaa
hlt
loop
and
xor
lods
sbb
xor
gs
add
in
mov
mov
bound
mov
sbb
and
pop
loopne
test
ljmp
scas
pop
movsb
scas
xchg
cmp
jno
pop
push
pusha
shl
push
stc
das
in
sbb
jae
icebp
jb
cmpsl
stos
std
xor
mov
je
sbb
outsb
add
cmpl
mov
lret
rorb
arpl
stos
pop
lea
or
rorl
xlat
pop
sbb
cmp
sbb
pop
mov
data16
repnz
jae
orb
xor
cs
fcoms
insl
cwtl
fistps
iret
hlt
clc
popa
xor
daa
orb
or
shl
dec
imul
std
cmp
ret
orl
aam
jbe
mov
adc
push
cmpsb
and
push
adc
ffree
jp
test
xor
cmp
fiadds
mov
mov
stos
mov
iret
mov
inc
popa
fucomi
int
xchg
pop
enter
adc
cmp
insl
jmp
shlb
stos
push
mov
adc
daa
xchg
adc
test
push
in
or
ret
mov
test
jmp
pop
mov
xor
aas
lahf
in
push
andl
je
std
adc
jb
lds
mov
aas
add
lods
sbb
lock
mov
mov
and
scas
cmp
push
andl
xchg
out
mov
xor
icebp
mov
xor
aam
pusha
xchg
out
rcrb
hlt
dec
add
add
sbb
or
xchg
mov
push
jns
loope
mov
mov
mov
pop
xchg
dec
cmp
icebp
or
pop
xlat
sbb
xor
cmpsb
push
sub
push
sub
mov
fiaddl
ds
inc
pop
mov
inc
jb
popf
movsb
aam
popf
cmp
aas
xor
addr16
adc
and
jo
or
test
cmp
scas
stc
lock
mov
out
or
lods
mov
lret
xchg
dec
popa
sub
imulb
cmp
push
pop
cltd
add
das
in
stos
loop
dec
fnstsw
adc
aas
xor
xchg
sub
sbb
inc
mov
jg
xor
fsts
mov
pop
rcrb
pop
out
stos
imul
int3
xchg
call
push
mov
adc
inc
into
xchg
jbe
fstl
das
push
fsubl
fs
jb
push
xor
lods
jns
sbb
mov
dec
sti
mov
jns
dec
data16
pushf
leave
and
mov
sbb
mov
sub
sub
adc
xor
movsb
lea
mov
in
push
shlb
inc
xor
mov
outsl
mov
insb
sahf
or
shr
gs
inc
jp
das
popf
cli
add
ficomps
push
gs
inc
xchg
daa
pop
sub
push
and
xorl
push
ret
in
fs
and
fadd
inc
pop
push
cmpsl
or
jno
dec
imul
test
sahf
pushl
xor
pusha
repnz
push
cmp
sbb
mov
dec
push
rolb
ret
cld
bound
mov
in
arpl
sbbb
stos
lret
or
addr16
mov
rclb
xchg
xlat
jg
mov
push
dec
mull
xchg
mov
push
dec
fs
lds
outsl
stc
imul
fimuls
or
shll
hlt
push
leave
les
inc
fwait
add
clc
push
rol
mov
shll
mov
loop
loope
mov
ja
inc
lock
sub
out
add
and
mov
inc
loope
ud1
scas
lock
adc
xchg
push
mov
lret
das
and
int3
and
scas
lods
inc
dec
in
xchg
repz
sti
loopne
loopne
pusha
in
mov
mov
sti
pushl
fcompl
aaa
in
shrl
sub
or
inc
out
sbb
mov
mov
aas
jl
subb
inc
jg
inc
xor
pop
mov
jecxz
and
add
out
ja
add
push
nop
and
mov
iret
mov
imul
jecxz
jae
push
push
out
lods
push
adc
sbb
xchg
inc
outsl
mov
ljmp
xchg
push
in
push
and
xor
jns
and
jge
gs
push
sub
pusha
in
add
notb
cmp
sbb
mov
mov
add
xchg
pusha
scas
lock
lods
push
push
int
iret
mov
or
test
mov
in
pop
push
and
mov
outsl
mov
ds
cmp
aas
cmp
repnz
sbb
inc
repnz
les
jp
and
imul
pop
sbb
std
mov
adc
jmp
outsb
jno
cmpb
aad
test
mov
fisubs
push
sub
sub
pop
lcall
fidivl
je
sbb
daa
pop
ss
jmp
xlat
test
adc
mov
ds
sub
push
mov
mov
push
adc
xlat
fwait
sbb
cmpl
push
lea
xor
inc
sub
jno
shlb
pop
push
inc
push
mov
insb
jnp
negl
inc
or
aad
inc
fldt
imul
stos
xchg
nop
dec
sub
add
insl
inc
adc
adcb
dec
dec
lahf
inc
gs
scas
sahf
lock
ss
imul
or
sbb
fndisi(8087
stos
lods
sbb
movsb
xor
stos
fsubrs
insl
fadd
loopne
xchg
mov
mov
xor
cmp
pop
jb
rcr
mov
movsl
test
jne
cmp
iret
xchg
adc
or
mov
push
sbb
add
or
inc
arpl
loopne
push
or
and
outsl
imul
imul
push
mov
lds
jae
adc
cwtl
faddl
ret
jmp
popf
lea
fildl
lcall
daa
cltd
or
fiadds
lods
sar
dec
int3
xor
sarb
jl
scas
mov
sbb
adc
xor
jp
out
pop
dec
cld
add
out
iret
dec
xchg
sbb
inc
dec
pusha
pop
lahf
bound
stos
jo
jbe
inc
xor
fwait
adc
cli
mov
rorl
loope
addr16
pop
cmp
pop
addb
mov
cmc
lret
add
fsub
inc
gs
bound
mov
inc
ret
pushf
or
dec
sub
mov
or
inc
call
cmp
cltd
test
dec
pop
loope
stc
fdivrl
xchg
in
dec
test
fdivrp
mov
push
and
sub
int3
mov
xor
fistps
stos
inc
jb
jp
lods
pop
and
pusha
mov
jmp
cmp
jae
mov
inc
jg
shr
or
mov
jmp
xchg
jno
push
add
xchg
stos
cltd
cmp
sbb
sbb
inc
push
aas
jle
test
loope
and
mov
and
push
sub
push
nop
fildl
lds
rcll
sbb
pop
mov
jns
or
pop
in
icebp
loope
mov
les
mov
mov
cltd
inc
sub
les
push
test
movsb
sub
jb
js
mov
leave
xchg
fs
sbb
push
lret
loopne
mov
fnstsw
dec
xor
jno
sub
pop
and
inc
aad
xor
pop
and
jge
add
pusha
cli
jnp
out
adc
gs
xor
and
or
add
loope
lahf
std
fistpl
shll
push
repnz
cmp
add
mov
shrb
push
sbb
shl
out
push
arpl
adc
insb
es
sub
data16
bound
loope
lods
mov
bound
ret
add
jge
or
iret
hlt
cwtl
inc
ds
push
xchg
rcrl
xchg
repnz
or
add
cmpsb
nop
stos
in
bswap
out
dec
and
xchg
pusha
test
and
pop
mov
imul
pop
das
pushf
call
adc
rolb
in
mov
dec
pop
inc
ret
dec
add
mov
out
iret
pushf
cmpsl
mov
ja
std
mull
fwait
in
sarb
in
outsb
xlat
and
cwtl
idiv
aas
mov
es
cs
xor
mov
inc
or
loop
jp
cmp
fsubrp
inc
inc
and
push
sarb
adc
mov
xor
sub
shrb
push
pop
pusha
int
push
push
outsb
movsb
pop
test
fsubl
adc
pop
jle
sub
jbe
xor
xor
ljmp
aam
jl
mov
mov
mov
test
cld
mov
cli
ja
dec
add
mov
enter
xor
loope
dec
or
xchg
dec
xchg
pop
andl
xchg
xchg
push
jp
cmp
mov
mov
sub
or
icebp
and
mov
and
dec
mov
pop
or
into
fwait
push
fwait
popa
cmp
sahf
inc
add
cmpsb
pusha
push
and
push
and
out
mov
sahf
call
jae
push
pop
cmp
insl
out
mov
dec
jns
addr16
movsl
not
cld
popa
mov
ja
xor
mov
fs
cwtl
mov
lcall
xlat
push
and
mov
push
jg
sub
leave
mov
es
jl
and
sbb
mov
jl
jg
nop
out
es
das
sahf
dec
jmp
clc
dec
movsb
pop
jl
jne
adc
aam
mov
and
push
mov
push
lret
jp
mov
xchg
or
scas
pop
test
iret
loope
aam
xchg
in
loop
pop
mov
mov
into
dec
and
das
xor
sub
out
cmp
leave
pop
int
mov
sub
xchg
xlat
sbbb
add
addb
ret
jg
mov
int3
sbb
sbb
push
sbb
ja
xchg
dec
and
or
popf
inc
sbb
rcll
lods
lods
push
fstl
xchg
lahf
lret
mov
fnstcw
cmp
and
out
xchg
test
add
lcall
sub
sub
add
dec
sahf
adc
lahf
mov
fistps
mov
mov
enter
adc
and
xchg
or
xor
test
push
movsb
stc
rolb
popa
rolb
sub
out
push
mov
xchg
jb
std
push
mov
fistpll
cmp
pop
daa
aaa
scas
mov
xor
fwait
sub
into
fdivr
arpl
out
mov
pop
and
ljmp
ja
rorb
push
sbb
mov
adc
adc
ss
cmp
pop
insb
inc
dec
shll
insb
mov
xor
fidivrl
das
and
gs
push
aam
mov
decb
xor
sub
aas
sub
inc
inc
pop
ret
in
test
mov
add
aas
fldt
out
sbb
or
mov
iret
and
je
xchg
jecxz
xor
mov
xorb
inc
shrb
inc
aad
mov
xchg
add
add
test
mov
int3
test
mov
dec
push
cmp
dec
stc
shr
nop
frstor
or
mov
jp
adc
scas
and
adc
repz
ss
mov
pop
rol
xor
sbb
gs
ss
shll
xor
aas
inc
pop
negl
xlat
rorb
add
mov
add
out
sahf
cmpsb
xchg
rorl
adc
ljmp
inc
hlt
imul
cli
roll
es
or
stc
dec
test
xor
dec
fidivrs
pop
daa
lahf
add
iret
sub
jae
push
and
xchg
mov
fstl
push
enter
mov
cld
ror
push
popa
into
scas
mov
jmp
cmp
std
mov
test
enter
push
ret
call
cltd
orb
xchg
sub
iret
mov
and
pusha
push
sbb
xchg
test
or
pop
sahf
inc
mov
and
mov
fildll
dec
push
xchg
adc
mov
dec
int
mov
mov
push
mov
outsl
cld
outsl
sbb
dec
push
sbb
enter
or
ret
jno
push
sbb
fimull
jb
les
push
xchg
sub
cld
ds
mov
mov
mov
xor
jge
vmovaps
sub
cmp
mov
lods
xchg
pop
loope
stos
jno
push
sub
test
lods
loopne
push
ret
inc
cmp
inc
push
inc
out
iret
fsubrs
inc
xlat
fs
leave
push
or
js
dec
pop
cld
mov
out
outsl
pushl
add
popa
fisttpl
push
dec
push
mov
mov
in
movl
rorl
inc
clc
mov
shlb
xchg
mov
sub
push
or
or
cmp
call
hlt
sti
mov
jb
popa
nop
inc
arpl
xor
mov
push
fmulp
bound
mov
mov
nop
scas
inc
adc
push
sub
lret
push
jp
adc
out
or
cltd
jns
mov
gs
push
ss
jbe
loope
leave
in
or
test
mov
neg
orb
xchg
xchg
inc
mov
gs
xchg
sub
frstor
xchg
in
add
ja
enter
scas
xchg
test
sbb
cmpsl
mov
in
lcall
loopnew
je
stos
pushf
add
or
sbb
adc
movsb
add
je
mov
xchg
dec
lds
movsb
inc
mov
add
push
fisubs
dec
aaa
lods
lcall
adc
out
lcall
lea
movsl
fs
cmp
or
in
mov
dec
je
adc
sbbl
pop
rcrb
mov
pop
mov
mov
pop
mov
inc
or
xor
loopne
ja
sbb
in
test
dec
dec
adc
and
mov
in
jl
fiaddl
mov
mov
lock
mov
stos
es
es
mov
jnp
leave
in
inc
les
push
ficomps
xchg
mov
lods
aad
push
pop
xchg
ficomps
orl
jns
andl
movsl
mov
je
dec
into
stc
add
test
addr16
sti
arpl
jle
xor
shll
icebp
mov
push
sbb
adc
push
dec
xchg
jmp
fsts
jg
mov
int3
push
call
fwait
clc
xor
mov
out
fcomps
test
stos
ja
fistl
pop
daa
rorl
dec
rolb
jl
scas
fsub
sbb
ljmp
dec
xchg
inc
sbbl
and
out
test
pop
mov
mov
pushf
ljmp
out
test
insb
push
xor
aam
xchg
cmp
in
fsub
sbb
add
gs
mov
mov
cs
sub
jl
fstpt
cld
lea
sbb
inc
popf
inc
pop
jmp
and
or
mov
pop
dec
arpl
loopne
inc
repz
ss
loop
xorl
fmul
sbb
mov
jecxz
jno
lods
dec
sub
fsubp
mov
pop
movsb
xchg
xor
leave
aas
mov
loop
push
movsb
insb
loope
and
xchg
or
fld
fucomp
jnp
mov
loopne
adc
push
adc
in
popa
lret
fcoml
pop
xor
fsubrs
mov
push
lods
sarb
clc
push
push
xor
mov
xchg
inc
sub
dec
xor
pop
xor
mov
xor
adc
outsb
mov
jle
pushf
mov
repnz
sti
sarb
out
cmpsb
cmp
mov
mov
fsts
adc
dec
divb
sbb
inc
mov
mov
insl
lods
sub
data16
pop
fisttps
xor
mov
pushf
mov
push
mov
xorl
cmp
push
mov
aas
or
les
push
ds
sbb
pop
ret
pop
cwtl
inc
lcall
mov
sahf
js
xchg
repz
daa
cmp
fildl
jo
add
int
sbb
das
pusha
cli
mov
adc
inc
testb
mov
add
xchg
rorl
call
push
fcmovnu
jno
es
insl
push
jbe
test
ret
cli
xor
pop
je
imul
rcrl
aaa
out
add
or
add
pop
ds
add
in
addr16
add
add
dec
pop
in
mov
and
add
fucomip
pop
js
sti
adc
movsb
xor
enter
push
xchg
jl
flds
xor
rorb
jbe
xchg
int3
cmp
hlt
and
xchg
add
fstp
pop
pop
test
insb
jge
mov
in
lods
sahf
fs
outsl
add
or
fists
or
cwtl
stc
repnz
xor
das
shr
or
push
in
jne
push
mov
xchg
out
mov
adc
add
add
sbb
pop
fwait
jecxz
out
jns
js
inc
push
divl
je
mov
out
jge
push
adc
push
test
arpl
sbb
lock
cwtl
nop
pop
push
dec
lret
adc
std
xchg
imul
mov
pop
sub
and
int3
fcomi
sub
sub
jmp
mov
testb
fnop
insl
rclb
pop
push
xchg
leave
mov
jno
js
das
push
mov
arpl
pop
xchg
cmpl
adc
stos
mov
add
pop
out
lea
loop
adc
repnz
inc
xchg
into
xchg
pushf
int
adc
inc
popa
arpl
ja
and
xchg
add
inc
repz
xor
xor
outsb
jnp
std
push
roll
jg
jae
loope
adc
in
test
jno
inc
mov
arpl
sbb
lods
rorb
aad
xchg
pop
xchg
add
imul
push
xchg
jns
or
push
test
iret
filds
dec
lret
lock
xchg
mov
dec
sub
leave
ss
and
into
cltd
rol
jecxz
into
fchs
mov
add
pop
outsl
xchg
ds
xchg
loope
xchg
mov
jp
mov
mov
push
mov
in
test
mov
xchg
mov
pop
mov
mov
pop
push
mov
push
popf
pop
cmp
add
and
cmc
sbb
inc
mov
jge
sub
adc
jl
inc
cltd
cmp
shlb
lock
rorb
adcb
movsb
sub
push
adc
leave
repnz
in
inc
or
xchg
mov
lret
rcl
xor
inc
mov
xchg
cltd
nop
gs
cli
xor
repz
imul
scas
into
push
inc
outsl
std
js
gs
nop
les
icebp
push
pop
nop
and
ret
ror
add
fmull
popf
cmc
imul
inc
vsqrtsd
jmp
mov
test
inc
inc
loop
sbb
add
or
push
aad
push
pusha
int3
ss
mov
fimuls
xchg
daa
fsubs
sub
sbbb
mov
mov
mov
cs
xchg
mov
bound
int
mov
cli
mov
lea
ds
iret
dec
fucom
push
pop
out
xor
cld
pop
out
inc
lds
and
xor
dec
jnp
scas
lods
sbb
push
xchg
mov
loop
out
test
mov
mov
push
outsl
or
outsl
inc
add
pop
movsl
imul
push
xor
dec
cmp
scas
jmp
repnz
sub
aam
xor
cmpsl
mov
push
inc
aad
cmpsb
xchg
aaa
inc
add
jns
or
push
pushf
dec
enter
jmp
inc
sub
popf
jmp
inc
or
mov
sbb
and
test
out
push
popf
xor
cmp
shll
js
fmul
lret
mov
fwait
and
ds
adc
rcrl
fldcw
mov
jbe
sub
xor
out
mov
xchg
fwait
adc
mov
mov
cmpsb
jbe
scas
aaa
xchg
push
and
pop
jne
add
inc
sub
lcall
out
fisttpll
mov
dec
inc
or
into
sub
testb
jb
loop
jne
aad
lods
insl
je
das
jns
push
mov
je
sbb
mov
jns
lock
pusha
jb
jb
call
jne
and
xchg
mov
imul
movsb
sub
cs
xchg
stos
dec
xchg
jnp
and
mov
lock
jecxz
add
fldcw
jle
test
mov
popa
mov
leave
aad
aas
lds
aam
jno
pushf
sub
cmp
nop
mov
outsb
mov
inc
in
cs
scas
daa
arpl
jg
add
mov
mov
sbb
push
rorl
mov
scas
mov
and
das
out
mov
shl
mov
xchg
mov
mov
xor
data16
pop
inc
sub
mov
sbb
dec
std
pop
sbb
out
or
cs
nop
jmp
fisubl
sub
mov
loopne
ret
lea
inc
or
cmp
dec
out
sub
adc
rcr
insl
pop
daa
pop
stos
pushf
cmp
jecxz
aam
pop
push
adc
sub
imul
xorb
stc
xchg
cmp
stc
scas
ret
aam
xchg
sbb
loopne
pop
pop
popf
cli
and
clc
add
int3
jno
jne
xchg
js
in
insb
lret
scas
xor
dec
jg
rcrb
jb
jle
cmp
and
pop
pop
jbe
sbb
pop
adc
cmp
mov
mov
sbbb
sub
fstps
jg
push
sbb
aam
add
adc
repz
test
cmpsb
ds
das
xor
divb
add
jbe
arpl
movsl
cmc
jg
and
stos
rcl
push
outsl
rcll
push
push
aad
lahf
cltd
lock
cltd
ljmp
mov
inc
push
inc
add
out
cmpb
mov
push
and
sub
mov
ljmp
ficoml
jl
jb
mov
sub
sub
stc
adc
push
cmpsl
xchg
iret
dec
mov
fsubrl
test
jecxz
mov
aam
push
xchg
movsl
xchg
mov
pop
decb
call
dec
cltd
sbb
and
out
jp
fisubs
xor
out
fidivl
mov
in
out
decl
in
push
insb
sub
jle
sub
cmp
enter
xor
cltd
insl
and
das
jmp
push
or
xor
clc
sahf
lcall
sarb
jmp
lea
pop
xchg
mov
sti
push
xlat
jb
push
mov
sub
mov
xchg
int3
push
int
repnz
or
fsts
push
mov
sub
dec
adc
jb
ret
jecxz
mov
sbb
mov
pop
pop
mov
popf
xchg
push
sub
testb
mov
stos
xor
sbb
cmp
lods
addl
jne
inc
mov
fsubs
push
mov
sbb
js
sti
xchg
mov
ss
sub
jl
mov
dec
outsb
adc
inc
inc
orl
inc
push
out
dec
mov
neg
mov
cmp
filds
jle
fisttpl
insl
in
sub
int
mov
add
je
js
test
mov
adc
jno
sub
idivb
stos
adc
mov
shrb
xlat
jp
push
xchg
lods
loope
cld
fcomps
cmpsb
hlt
push
mov
leave
mov
add
lret
in
scas
fistpl
sub
cmp
fstps
sbb
ja
mov
push
sarl
adc
ss
or
mov
mov
cmp
pop
jge
enter
dec
add
arpl
pop
xor
xor
mov
sub
dec
aad
sbb
gs
das
adc
ret
cli
cmpsb
sti
cmp
pop
inc
jbe
rorl
xchg
and
or
ror
clc
push
enter
loopne
call
movsb
sbb
push
fcmove
fsubl
ret
rorb
fwait
cmpsl
ret
ljmp
addb
lret
outsb
jle
and
ljmp
sbb
loope
mov
pop
mov
shl
pop
pop
aam
scas
cmpsb
repnz
ret
inc
out
dec
add
xor
clc
je
mov
mov
jae
int
lret
movsb
pushf
iret
xlat
popa
mov
mov
enter
sub
dec
cmc
dec
sub
es
out
sbb
mov
push
xor
dec
cmpsl
jns
out
jnp
inc
test
push
inc
dec
test
rorb
lcall
push
lea
pop
add
ds
dec
mul
push
mov
ja
outsb
sar
pushw
in
sbb
and
int
sbb
or
mov
lods
insb
adc
addr16
lea
mov
pop
sahf
adc
insb
mov
dec
cmp
and
pop
andl
or
adc
stc
sbb
lahf
or
dec
mov
mov
dec
fdivrp
dec
mov
push
cld
in
into
mov
iret
mov
insl
inc
daa
das
sub
ret
popa
push
cwtl
jmp
adc
inc
push
xchg
pushf
pop
jle
rcll
jb
shll
pop
ds
adc
loope
orb
jae
mov
and
sarb
xlat
mov
add
dec
dec
repnz
call
in
jmp
push
loopne
adc
lds
sbb
xchg
arpl
xor
out
jb
jb
push
xor
adc
ja
dec
movsl
jae
push
cld
and
shlb
leave
push
push
daa
sahf
jo
pop
and
and
lret
dec
cltd
xchg
out
aas
push
and
into
mov
jns
adc
cmpl
xchg
lret
lods
pop
loope
daa
test
mov
test
sbb
packssdw
mov
shl
bound
andl
imul
and
add
cmp
push
std
mov
mov
loope
and
jmp
dec
les
mov
xchg
movsl
sarb
stos
adc
cmpsb
in
jb
imul
call
sarl
jle
lahf
je
into
aas
and
leave
loope
mov
mov
repz
aam
js
lea
test
cmp
mov
cmpsl
imul
sub
les
pop
outsl
inc
test
in
lret
xlat
mov
lods
ret
cmp
adc
mov
or
push
mov
bound
enter
pop
mov
fstl
gs
call
repnz
adc
cs
dec
fsubr
idiv
test
mov
xor
ret
cmp
xchg
mov
mov
jg
mov
insl
pop
sarl
lods
jbe
push
fwait
adc
leave
xor
outsb
sub
stc
andb
sahf
sbb
jp
xor
pop
mov
mov
dec
js
or
popa
xchg
fimull
cs
lret
or
pop
into
loop
pop
jbe
push
xor
sub
xor
xor
lods
dec
iret
xchg
testb
test
dec
push
arpl
cmp
call
and
and
icebp
sub
loopne
sahf
sub
cmp
and
mov
stos
and
inc
ret
popl
adc
mov
lods
loopne
cli
jne
lods
js
mov
mov
xchg
clc
adc
sub
or
cmp
imul
fildl
outsb
dec
mov
outsb
push
pop
lods
loop
jmp
in
pusha
out
dec
jo
dec
out
frstor
fnstsw
ret
adc
xchg
popa
inc
mov
and
addr16
xchg
ljmp
pop
mov
leave
and
mov
scas
fwait
sub
mov
lock
pop
ret
fsts
mov
insl
fldcw
add
adc
add
inc
jge
dec
testl
aaa
in
sti
icebp
pop
lods
mov
mov
xorb
xchg
dec
lock
outsb
sbb
and
int3
inc
adc
sub
jle
adc
fwait
sub
int
ret
fsubrp
xor
cwtl
into
addr16
jne
push
fs
sbb
pop
pop
mov
dec
rsm
mov
cwtl
add
mul
daa
scas
mov
pusha
js
xchg
ljmp
push
xchg
sub
and
cmp
leave
fildl
incb
aam
stc
lahf
call
add
fcoml
mull
push
adc
dec
sub
test
cmpsl
dec
sbb
shrb
dec
mov
inc
dec
aaa
or
push
test
test
jle
iret
push
in
shl
pop
xor
push
or
stos
into
in
mov
daa
jne
push
popa
test
movl
outsl
test
inc
cmp
cmp
shl
js
sarb
add
rclb
int
clc
int
push
xor
je
mov
imul
ret
jge
leave
jmp
subb
rorb
inc
std
rcll
jecxz
mov
fdivr
and
pop
jecxz
in
cwtl
push
dec
lds
sbb
sub
pop
inc
mov
push
ljmp
inc
shlb
mov
test
es
and
add
les
jo
mov
push
jne
fmulp
fs
sbb
mov
clc
ja
scas
gs
adc
jne
out
pop
loop
das
dec
pushf
jle
and
out
add
push
mov
xor
or
sbb
enter
pop
sbb
xor
iret
or
testb
inc
fs
adc
lret
push
ja
jle
adc
mov
fadds
fwait
outsl
adc
dec
in
fcmove
pop
lock
xor
test
jmp
loop
test
test
lahf
aad
gs
push
pcmpgtb
push
sbb
jae
sub
adc
rorb
push
xor
pop
pop
into
mov
rorb
es
sbbb
mov
jecxz
mov
movsl
arpl
out
mov
sub
mov
loopne
jo
add
pop
movsl
ja
push
hlt
icebp
aam
sub
cmp
inc
jl
in
aam
movsb
enter
add
cwtl
inc
cmp
imul
repnz
push
clc
pop
or
shll
or
mov
add
push
sahf
add
mov
push
cld
fs
call
rolb
jns
rclb
repnz
fld
sub
sbb
out
call
test
mov
jns,pn
imul
and
jbe
imul
in
lahf
add
sbb
outsb
xlat
push
inc
icebp
shlb
sub
sbb
push
adc
imul
pop
mov
cmp
jp
test
nop
cltd
pop
loopne
test
repz
fstpl
sbb
add
dec
push
iret
inc
ret
gs
in
mov
popa
mov
mov
cmpl
mov
jge
jbe
adcl
dec
bound
mov
fstl
jl
sub
rcrl
xor
xlat
test
pushf
sbb
xchg
test
push
lea
aad
sub
cmc
nop
ja
in
shrl
xchg
popa
mov
repnz
ljmp
cwtl
sub
int
and
mov
rcll
mov
sub
inc
insb
dec
mov
les
inc
hlt
xor
pop
out
dec
push
mov
mov
jne
outsl
lret
and
pushf
pop
dec
mov
jb
mov
les
fsubrl
ja
out
leave
and
mov
xor
in
xor
in
leave
mov
cmpsl
mov
iret
insb
addr16
fwait
ds
mov
push
dec
mov
cmpsb
mov
fsubs
or
int
imulb
test
mov
mov
cmp
mov
dec
shrb
rcl
mov
lock
int
and
js
fnstcw
ror
lock
ret
in
repnz
xor
insb
movsl
leave
jae
cltd
cmp
fcmovbe
fs
xor
or
or
aas
les
dec
js
pop
loope
push
jns
cmp
rclb
out
das
cli
sbb
cwtl
popa
dec
adcl
pop
add
leave
mov
les
mov
xor
iret
cmc
xchg
jae
mov
je
jp
lock
jae
and
cmp
insb
inc
out
lahf
xorb
pop
sahf
aas
inc
dec
dec
jbe
mov
in
adc
lret
movsb
dec
fwait
pushf
loop
push
out
cwtl
adc
shl
mov
fldcw
inc
sbb
fs
hlt
shrl
xor
cltd
jns
mov
out
das
lret
mov
cmp
sbb
fldt
ds
pop
jl
sub
loope
sub
jbe
es
not
sarb
mov
sub
dec
inc
sbb
inc
mov
and
jns
dec
mov
adc
lods
popa
stos
cmpl
inc
jmp
mov
and
add
rcrb
call
test
nop
out
mov
push
cltd
lahf
pop
repz
xor
pop
xchg
mov
push
ss
and
dec
jge
subb
cmp
test
aaa
push
xchg
mov
lea
pop
and
ror
sub
lock
xor
pusha
inc
ja
jb
mov
and
push
sbb
and
or
or
jo
pop
idivb
xor
jg
mov
push
call
imul
sahf
cld
adc
stos
sub
fwait
enter
cmp
cmc
or
mov
push
push
pop
cmpb
vmread
dec
cmp
lcall
add
adc
add
dec
lods
es
stos
sub
imul
jne
inc
push
pop
or
sub
jnp
inc
aam
xlat
adc
mov
jno
lcall
lahf
loopne
push
cld
addr16
adc
sbb
inc
dec
ror
dec
fcmovu
jg
int3
repz
aaa
pop
xor
xchg
or
mov
ss
xor
jnp
jbe
sbb
arpl
cwtl
call
imul
cmp
ljmp
iret
lret
jno
mov
cmpsl
push
lock
mov
xchg
divl
jp
xor
and
cltd
fcomp
jge
pushf
sub
popf
call
arpl
and
sub
jne
jae
shlb
cmp
fwait
pop
mov
adc
shr
cmpsl
nop
cltd
push
js
and
mov
mov
or
loop
nop
xchg
leave
lret
lock
aad
fdivrl
sub
mov
orl
std
sbb
dec
lret
push
cmp
sbb
pop
mov
int3
jo
fs
aaa
mov
mov
outsl
icebp
cmp
in
jge
lea
mov
and
call
loope
add
mov
rolb
jge
push
js
stos
fsubp
push
cmp
mov
sahf
xor
lods
pop
cltd
mov
add
rorl
inc
jne
int
sbb
sbb
fmull
dec
cmc
add
pop
ficompl
mov
sbb
add
mov
and
test
xlat
mov
and
and
dec
shll
inc
mov
jae,pt
dec
jo
aaa
add
lods
dec
mov
sub
push
bound
test
mov
push
cmp
outsl
or
jp
stc
adc
lea
loop
jl
imul
sbb
or
pop
dec
jg
dec
es
dec
xchg
xlat
xor
dec
leave
jne
sub
add
aam
jno
inc
pop
mov
aas
pop
aas
ret
es
std
test
pop
push
jp
mov
loop
push
push
xor
adc
jecxz
inc
pushl
fcompl
imul
and
rorb
push
test
push
or
mov
popa
dec
mov
lret
arpl
jae
adc
ja
or
jp
leave
aas
insb
adc
or
push
sub
fsts
lret
sbb
lods
xor
ss
mov
mov
es
adc
pop
pop
lods
xchg
fldt
ja
rcr
mov
inc
jp
out
jle
adc
stos
dec
fdivrl
in
dec
cwtl
or
hlt
not
jmp
mov
je
imul
movsb
addr16
push
lock
outsl
mov
leave
out
mov
stos
rcll
or
rorb
pop
mov
dec
sbb
inc
out
fnstcw
adc
push
mov
cmc
lcall
mov
rcrl
mov
xor
mov
sbb
inc
jecxz
sarb
sbb
outsb
stos
movsl
push
inc
mov
stos
dec
cmpsl
jno
pop
ret
push
mov
sbb
inc
mov
rcrl
in
dec
push
rol
insb
daa
test
xor
imul
in
insb
enter
fstpl
dec
lea
push
inc
pop
and
cmp
xchg
into
sarb
mov
aaa
xlat
pop
cmc
cli
xor
lods
mov
sbb
push
dec
out
mov
or
mov
outsb
scas
push
and
js
scas
imul
cmc
mov
mov
pop
jns
rolb
or
jns
incb
xor
bound
cmp
jge
leave
movsb
mov
jl
in
daa
les
std
and
lods
push
mov
jg
and
add
cmpb
gs
mov
aas
or
aad
and
movsb
mov
inc
ss
lcall
inc
mov
lret
xor
cwtl
pop
mov
int
push
in
push
inc
mov
inc
in
aad
fs
pop
loope
aam
fldenv
fistpll
mov
leave
insb
cs
push
lahf
dec
jmp
loope
jo
mov
adc
std
xchg
filds
inc
ja
fwait
in
test
add
imul
mov
addb
jae
cmc
adc
popf
xor
ret
xor
out
pop
pop
cmp
fisttpl
loop
jmp
sbb
je
test
pop
sub
fists
inc
adc
leave
inc
cmpb
jmp
bnd
xorb
add
xchg
xor
xor
repz
xor
dec
xor
lods
dec
push
sahf
sti
push
dec
xlat
daa
adc
scas
xor
stc
xchg
imul
std
mov
scas
jge
aas
jecxz
adc
out
movsl
pop
stos
mov
mov
cmp
mov
enter
add
mov
inc
push
cmp
xor
xlat
rclb
mov
mov
push
test
test
cmpsb
lahf
jp
repnz
bound
scas
fcom
outsb
lock
fs
jge
andl
mov
pop
xchg
xor
mov
adc
icebp
mov
add
repnz
add
and
divl
imul
cmp
mov
call
push
cmc
cmpsb
stos
pop
addr16
sbb
jnp
push
push
sbb
popf
mov
xchg
mov
xor
aam
pop
int
mov
push
push
gs
push
and
jbe
rorb
mov
jne
xchg
mov
xchg
xchg
xchg
popa
xlat
sub
xchg
insb
jns
sub
lahf
pop
daa
and
dec
and
sbb
push
or
xchg
pop
cld
lods
cmpl
jmp
jp
push
jmp
es
jle
xchg
fsubrl
sub
xchg
push
outsb
adc
pop
lds
mov
ljmp
and
ljmp
jns
add
dec
and
or
pop
das
jns
sub
lret
mov
lock
and
retw
shrb
stc
mov
filds
mov
popf
push
cmp
imul
push
mov
or
addr16
pop
add
mov
arpl
mov
inc
sbb
mov
shll
es
call
inc
and
mov
shrb
lcall
xor
mov
sti
sti
cmp
inc
sub
cld
xlat
mov
xchg
shlb
mov
cmp
imul
test
mov
sti
lcall
dec
movsb
jmp
out
sbb
fdiv
pop
lret
push
xorl
and
inc
add
shl
jne
inc
add
add
xchg
int3
sbb
movsl
dec
test
roll
jb
sbbl
add
cmp
out
cmpsl
push
dec
sbb
pop
cwtl
leave
push
adc
repz
cmpb
hlt
ja
adc
rol
mov
sub
adcl
and
loop
lcall
jmp
pop
or
xchg
add
imul
fsts
js
sbb
sbb
rcr
xor
loopne
inc
mov
jno
xchg
inc
adc
jle
scas
fs
int
sbb
jbe
or
stos
add
pusha
add
jecxz
jno
rorl
lods
mov
mov
adc
add
enter
addps
lahf
aad
jecxz
icebp
mov
jno
mov
sbb
sahf
pop
add
pop
or
loop
repz
sub
mov
mov
ss
mov
repnz
cmp
rcrb
add
cli
add
je
ljmp
fisttps
testb
pop
cmp
call
rcr
imul
popf
icebp
push
test
mov
inc
lods
stos
mov
cmp
jb
and
repnz
aam
loopne
inc
adc
push
mov
std
dec
int3
add
cld
dec
imul
fs
or
repnz
sub
les
in
lock
aas
jle
inc
mov
cmp
push
sub
enter
loopne
outsb
push
sbbb
xchg
add
in
outsl
mov
mov
and
lret
adc
and
xlat
pushf
iret
pusha
inc
jecxz
push
out
inc
movsb
insb
xor
mov
xor
lea
repnz
push
sar
mov
loope
das
outsb
adc
cwtl
arpl
sar
scas
xchg
or
or
aas
pop
mov
cmp
enterw
jge
ss
mov
icebp
mov
mov
fsubs
outsl
add
and
je
fs
jbe
cmp
icebp
dec
outsb
lock
jb
cmc
fistpl
sarl
mov
mov
mov
jb
fcomi
js
loope
std
ja
pop
mov
test
xchg
js
aad
xlat
andl
enterw
xor
mov
not
add
insb
loop
mov
and
jo
test
push
call
lods
fcmovne
or
jge
movsl
test
xor
add
in
push
jp
inc
out
icebp
xor
cmpb
adc
lcall
inc
popa
xor
mov
jno
push
sbb
js
or
aaa
lcall
xor
nopl
add
addb
and
lods
aas
push
push
add
push
aam
mov
sbb
sub
dec
cli
jg
add
cmp
jmp
xchg
js
jg
shlb
push
pop
scas
imul
addr16
scas
dec
xor
jnp
mov
outsb
inc
mov
jno
stc
mov
cmpsb
dec
insl
ja
mov
sarb
test
and
push
pop
jge
sub
inc
sbb
cmc
xor
sahf
fcmovnb
xor
dec
cmpsl
pop
repnz
push
sbb
pop
adc
sub
cmpsl
daa
and
test
aas
add
nop
jecxz
inc
rcr
aaa
nop
mov
repnz
sarb
pop
mov
xchg
aad
lcall
pushf
lahf
test
call
push
jmp
xchg
push
mov
das
push
int
mov
loopne
jle
faddl
xlat
xchg
lahf
in
fcompl
fsts
fdivrs
fadd
push
jg
enter
and
dec
imul
or
rorb
rclb
popf
xchg
or
data16
inc
stc
xchg
cmpsl
xchg
or
xchg
mov
out
fsub
mov
movsb
cs
aam
add
aad
xchg
cmpsl
sahf
js
loopne
sub
fdiv
cmp
mov
mov
cmp
jnp
mov
jecxz
and
shrl
xor
rcrb
add
ret
outsl
push
je
inc
xor
adc
or
test
clc
jno
fsubrs
adc
add
jns
insl
daa
dec
cltd
or
int3
sbb
sahf
fiaddl
les
cli
mov
sbb
jns
push
pop
jae
pop
jnp
push
test
incb
pop
inc
dec
pusha
and
ret
pop
mov
mov
arpl
in
mov
pop
imul
fcomp
xor
fsubl
faddl
fdivl
mov
mov
insl
jp
cmp
mov
sti
scas
mov
daa
mov
jle
sub
shufps
xor
and
add
repnz
pop
sub
push
xor
mov
popa
icebp
xchg
xchg
fsubl
orl
sti
mov
cltd
popf
xchg
xor
inc
enter
pop
test
in
lods
jo
lret
imulb
mov
iret
aad
sarb
push
lret
adc
std
adc
ja
ja
popf
mov
ret
mov
andl
shlb
out
popa
mov
jl
add
jle
scas
lret
repz
push
dec
cmp
loop
mov
and
dec
adc
inc
inc
test
fstpt
les
fsubrs
cmpl
cmpsb
iret
push
push
rcll
int
fbstp
nop
loope
push
push
scas
jmp
xor
jle
adc
jno
int
mov
es
insl
jnp
mov
popa
xchg
pop
test
pusha
xor
xchg
mov
sahf
push
sub
inc
ljmp
add
sbb
sbb
push
fisubrl
push
popa
shrb
lods
xchg
dec
mov
stc
push
push
test
repnz
xor
mov
fcoms
out
mov
scas
adc
stos
dec
pusha
rcrl
fdivs
sbb
or
pusha
and
adc
sub
inc
cmp
notl
add
mov
loop
xchg
out
jb
imul
mov
mov
push
fnstcw
mov
insb
test
xchg
lahf
insb
in
aad
jne
cmp
sub
mov
out
aam
imul
mov
mov
in
fstl
xor
stc
out
fucomi
stc
movsl
cmp
test
sti
jg
lret
xchg
sbb
mov
pop
mov
les
add
bound
in
jb
ffree
or
pop
and
mov
out
or
cs
roll
pop
test
out
and
mov
jne
or
cs
cmp
pushf
and
movl
xorl
addr16
and
scas
dec
data16
movsl
lods
mov
cmp
xchg
mov
push
dec
push
xorl
or
pop
cmp
cltd
fbld
fisubl
dec
jg
movsl
and
sub
sbb
movsl
adc
mov
mov
cmp
inc
data16
add
popf
bound
pop
ret
mov
dec
enter
testb
mov
jg
push
add
fcomps
fbstp
sub
add
arpl
roll
dec
pop
dec
sub
imul
cld
scas
sbb
scas
mov
xchg
icebp
hlt
pop
fsubr
dec
inc
or
call
sbb
test
adc
xlat
or
push
lds
mov
loope
out
bndldx
mov
mov
sbb
jae
dec
lcall
pop
ret
jp
jnp
or
inc
shll
xchg
js
repnz
mov
sbb
or
mov
jnp
cli
add
idiv
sub
out
inc
mov
jecxz
mov
es
jmp
mov
xchg
test
je
ljmp
xchg
jp
xchg
sub
add
add
sub
sub
movsl
add
stos
popf
mov
xchg
mov
ja
xchg
stc
pop
push
xchg
data16
jbe
xchg
decl
std
or
push
lods
shll
sub
mov
pop
add
imul
pop
mov
push
mov
dec
pop
jns
clc
adcl
ja
popf
add
mov
insb
xor
cmp
jp
cmp
bnd
mov
fwait
shrl
aam
notl
mov
xorb
sbb
inc
into
sbb
xchg
lcall
push
jnp
fisttps
mov
loop
adcl
lds
popa
mov
mov
lret
pusha
adc
das
out
divl
mov
cmp
pop
xor
and
gs
lret
dec
mov
inc
ds
std
jmp
pop
xchg
fs
bound
cmpb
jp
lea
sub
cmp
jmp
xchg
inc
lret
loopne
mov
fsubrs
mov
pushl
repnz
jp
inc
fstpl
and
jl
inc
xlat
push
les
nop
push
cmp
jo
cmc
jnp
daa
mov
arpl
fidivrs
jecxz
outsw
and
insl
and
sti
pusha
sbbl
lock
pop
jae
icebp
pop
jecxz
jge
adc
stc
test
aam
int3
pop
pop
jnp
flds
push
push
je
xor
mov
xchg
push
test
jns
cmp
adc
pop
fcmovu
mov
neg
adc
repnz
jg
xor
aas
mov
in
sub
mov
lea
mov
movsb
add
call
mov
lea
xor
xor
xchg
jo
jae
test
pushf
mov
outsb
sub
adc
insb
mov
aas
imul
sarl
fldl
or
jno
push
pop
cmc
icebp
cmp
bound
data16
jo
mov
fnstsw
xchg
fs
lods
add
lret
sti
pop
mov
je
dec
ror
xor
dec
push
das
mov
or
mov
sbb
out
or
lcall
ss
mov
mov
test
stos
in
sub
lock
pop
and
aad
clc
and
shlb
xchg
test
repz
fmulp
dec
xchg
pushf
dec
cmc
and
lods
mov
xchg
movsl
and
mov
mov
jae
rolb
cli
pop
lods
pop
cmp
cli
loopew
xlat
mov
mov
xor
push
jmp
xchg
jae
inc
push
xchg
or
sarb
xor
pop
insb
in
lods
std
xlat
dec
push
in
dec
shrb
cmp
lods
dec
fidivrs
das
inc
dec
mov
jb
xor
pop
adc
mov
adcl
cmp
in
mov
sahf
adc
jns
sbb
pop
es
addr16
and
ret
mov
mov
mov
pop
iret
clc
push
jecxz
adc
lahf
jl
push
ficoml
mov
jnp
cmpsb
push
sbb
decl
sti
rcrl
xchg
loope
mov
sbb
mov
mov
jns
repz
or
std
int3
mov
jns
mov
leave
mov
xchg
mov
xor
cmp
repnz
push
in
push
insb
push
repnz
push
add
push
fldenv
push
xor
gs
push
stc
adc
jge
jae
mov
add
xchg
loope
sahf
into
mov
aas
push
pop
dec
sbb
das
cmc
lds
shlb
gs
aas
aad
dec
inc
cs
cmp
push
jno
shll
pushl
sti
sub
xchg
cmc
fwait
inc
adc
pop
inc
lcallw
add
xchg
push
mov
jmp
ja
pop
cmp
cmp
cli
jnp
mov
jb
mov
pushf
scas
or
inc
inc
xlat
dec
push
cltd
and
imul
and
or
test
push
jns
fisttps
mov
test
icebp
test
add
inc
popf
daa
leave
push
sahf
or
mov
xor
mov
mov
into
loopne
data16
push
push
test
les
aam
add
mov
fmull
pop
xor
adcb
dec
movsb
xchg
push
clc
test
mov
jl
pop
sti
clc
lock
nop
push
jecxz
xlat
pop
xchg
xchg
pop
les
inc
out
or
mov
int3
xor
xchg
clc
xchg
lea
dec
lahf
sbb
scas
adc
jnp
lods
xchg
es
ss
lahf
in
clc
test
cwtl
ljmp
or
inc
mov
jg
inc
push
jbe
out
adc
and
jns
mov
mov
jle
jp
inc
in
sub
testb
dec
lcall
test
add
cmp
in
in
sub
loopne
xor
dec
pop
ja
outsl
loopne
xchg
mov
iret
out
mov
and
xor
xchg
scas
nop
dec
int
push
pop
or
iret
imul
outsl
cld
xchg
add
test
mov
mov
mov
jmp
sbb
dec
xchg
icebp
jb
cmp
pop
xchg
mov
pop
shll
std
jl
mov
imul
jns
push
mov
and
mov
aam
std
mov
mov
adc
popf
mov
and
sti
call
push
xchg
adc
jp
adc
dec
mov
jecxz
outsb
push
aad
cltd
and
cmp
inc
div
cmc
mov
mov
out
mov
and
xor
insl
fisubrl
repnz
inc
and
outsl
add
mov
jns
pop
push
cmp
xchg
sub
stc
sbb
pop
aad
dec
lods
inc
fsubs
and
push
hlt
or
loopne
pop
inc
cmp
adc
cmc
add
xor
cmp
xor
dec
stos
inc
xchg
push
cmpb
test
fwait
mov
rcr
icebp
jb
rolb
add
in
dec
sub
pop
push
aas
sub
aad
pop
mov
cmpsb
push
dec
sub
arpl
dec
data16
out
shrb
cmc
lret
jne
or
dec
aad
mov
lods
and
jns
jno
cmp
push
mov
mov
push
mov
jle
cs
mov
ja
fsubrl
push
mov
sub
prefetch
jge
rcll
cmpsl
sahf
dec
lret
sbb
push
xor
in
stc
cmp
sbb
repz
ret
popa
mov
xchg
rorb
pop
or
mov
imulb
clc
fisubrs
sub
xchg
in
add
incl
mov
aam
push
pop
lret
mov
add
mov
pusha
mov
pop
adc
push
dec
sbb
xchg
inc
xchg
sub
adc
jg
cmpsl
dec
and
leave
bound
jecxz
mov
movsl
lret
jge
cmpsb
mov
cmp
aam
gs
cmp
push
adc
pop
lock
mov
mov
xor
and
push
lret
out
loop
adc
cmp
inc
rcll
cwtl
and
and
hlt
mov
hlt
hlt
xchg
loope
and
mov
lods
xchg
sub
xchg
mov
and
shll
test
dec
mov
jge
cmc
call
movsl
xchg
add
test
scas
out
cmpsb
ret
fs
inc
insl
sub
cmc
xor
push
sub
sub
xchg
jb
ret
aaa
cmpsl
pusha
into
cmp
dec
pop
out
out
cs
cmpsl
xor
dec
pop
insl
lret
popa
addl
xorb
pushl
xor
jb
sbb
push
xchg
rolb
and
das
je
es
jecxz
add
lahf
or
push
sarb
pop
mov
dec
pop
jns
mov
fdivrs
lret
sbb
push
popf
xor
cmp
lcall
jno
lahf
int
cmp
pusha
or
mov
and
inc
rol
lahf
scas
int3
jno
jb
pop
repnz
icebp
jl
pop
inc
mulb
pop
int
cs
outsb
jg
mov
ljmp
push
lods
or
xor
sahf
hlt
xlat
les
rcrl
dec
push
and
test
inc
dec
push
jmp
mov
jge
shll
xor
mov
pop
lea
push
cwtl
and
out
out
inc
test
and
test
mov
dec
mov
cld
mov
jecxz
jp
cmpsl
mov
cmp
fcoms
gs
jb
cmp
dec
add
and
les
inc
xchg
sub
rolb
pop
es
mov
dec
daa
enter
es
lret
fwait
in
and
ja
popf
mov
sbb
xchg
jmp
inc
mov
inc
pop
push
rclb
lea
jno
mov
es
mov
xor
push
mov
add
push
dec
dec
inc
push
cmp
mov
sub
cmpsb
adc
rcrl
idivb
fbstp
sub
shr
nop
call
xor
and
jns
cs
mov
mov
gs
jg
rol
dec
sbb
xchg
cmp
es
sahf
loop
and
ss
kmovw
pop
sbb
fstps
mov
pop
test
mov
or
mov
dec
lret
fs
pop
dec
mov
or
inc
fnstenv
call
pusha
mov
dec
mov
sti
mov
jecxz
push
dec
inc
test
test
filds
lret
xor
lods
inc
xor
pop
fsts
fadd
popa
shr
xchg
inc
bound
jle
jbe
fcoms
rcl
gs
out
repz
push
call
fisubl
mul
or
dec
push
pop
xor
dec
xchg
stc
nop
jno
or
loop
repnz
jp
dec
aam
mov
adc
pop
inc
mov
mov
movsl
cmc
or
jns
divb
fwait
mov
sbbb
fistps
pop
mov
push
sbb
mov
jge
xor
sbb
mov
js
scas
xchg
je
scas
icebp
gs
cmp
ficomps
jmp
push
xor
rcrl
mov
cmp
lods
mov
cwtl
adc
bound
rcrl
aam
arpl
or
es
adc
test
ret
inc
push
enter
or
xchg
fwait
xor
lret
mov
rcl
jl
loopne
push
sbb
push
inc
and
jbe
jmp
icebp
jae
aam
sbb
fcmovbe
aad
push
inc
aas
jge
mov
xor
in
push
repz
je
aad
jns
dec
scas
push
addb
out
test
mov
xlat
and
fsubrl
cltd
cltd
je
aad
aad
push
inc
addr16
pop
xor
adc
dec
sub
enter
push
call
shlb
inc
je
push
outsl
xorb
testl
xchg
push
or
add
mov
jnp
lea
cmpsb
movsl
shl
push
scas
dec
scas
sti
push
cmp
test
cmp
xor
pop
fnsave
stc
addr16
imul
xchg
mov
jo
mov
xchg
add
xor
cld
insl
arpl
lea
jb
push
testl
dec
mov
sub
xor
sahf
loopne
out
outsb
cmpsb
jg
fs
sbb
int3
rcrl
sbb
sbb
lret
fdivrp
mov
sti
cmp
lods
xor
popf
pop
mov
xchg
dec
or
daa
repz
fnstcw
idivl
arpl
cmp
inc
outsb
push
arpl
dec
stos
aad
mov
push
shlb
das
fcoml
mov
ds
aaa
call
inc
jg
xchg
lret
gs
pop
cwtl
rcrl
movsl
test
xlat
fwait
clc
dec
mov
cmp
nop
mov
lock
faddl
sbb
mov
push
or
inc
and
lea
repnz
mov
cltd
daa
sbb
push
mov
lods
sub
sbb
and
pop
jmp
push
inc
fnstcw
repz
loop
icebp
ficompl
xchg
mov
sahf
sub
xor
xchg
fists
push
mov
or
lahf
ret
mov
adc
stos
inc
gs
inc
ret
je
or
and
jbe
inc
fimull
enter
push
sti
pop
and
aaa
or
xchg
cs
es
cld
mov
loopne
push
or
outsl
outsl
push
adc
cs
cmpsl
int3
xchg
repnz
push
scas
xchg
movsl
sar
test
adc
mov
pop
cmp
daa
in
adc
stc
or
cld
and
aam
mov
rorb
aad
adc
xlat
out
fsubr
sub
mov
jge,pn
jbe
inc
ficoms
or
jle
aas
fcomp
repz
mov
dec
push
push
sub
xchg
push
jmp
rclb
mov
inc
xor
push
pusha
fimuls
cmp
xchg
mov
xchg
scas
jmp
add
add
inc
out
int
xor
aam
daa
popa
mov
or
push
loopne
cmp
xor
es
add
enter
push
inc
inc
inc
inc
ret
std
mov
or
jns
pop
xlat
hlt
ja
mov
inc
cli
sub
pop
xchg
in
pop
or
mov
aad
or
and
gs
movq
fstl
sbb
arpl
pop
sub
inc
clc
scas
mov
fidivrl
fistpll
push
cmp
cmp
sbb
jp
push
jp
inc
repz
in
sub
stos
push
xor
cwtl
mov
inc
mov
aaa
push
insl
orb
or
mov
jle
add
mov
stc
aaa
arpl
mov
xchg
inc
dec
or
insl
mov
adcl
je
std
aas
in
popa
repz
inc
not
paddsw
test
mov
jecxz
ja
lds
fisttps
mov
loope
aaa
cmc
aad
add
ret
pop
jne
cwtl
cmp
dec
out
je
push
pop
adc
ret
or
mov
ljmp
std
sub
xorb
outsl
add
mov
xlat
cmc
sub
add
mov
add
lret
sub
in
xor
jb
jge
lods
sub
fucomip
inc
cmp
dec
repz
cmp
ja
or
nop
xchg
push
xchg
test
mov
fsubrl
sbb
stos
out
movsl
cmp
sbb
mov
lock
push
pop
test
inc
mov
jb
jmp
adc
int
mov
adc
bound
out
sub
jns
mov
pusha
scas
loopne
pusha
lods
cld
jmp
pop
xchg
notl
fistpll
fs
mov
imul
jmp
fsubs
or
sbb
push
mov
sahf
inc
lret
jg
ljmp
in
mov
cltd
push
pop
push
and
mov
out
sarl
jno
xchg
jmp
push
in
aaa
addr16
xchg
movsb
addr16
pop
inc
jnp
push
sbb
fdivrs
insb
cltd
cli
push
loop
jae
fisubrs
xor
movsl
outsl
lock
imul
xchg
xlat
movswl
xor
mov
movsb
xor
sbb
mov
lods
fsubl
dec
outsb
mov
in
cmp
fwait
and
aas
nop
les
cmpsb
mov
pop
icebp
and
movsb
inc
pop
xor
cli
js
push
add
cmpb
xchg
adc
loop
pop
data16
fsub
data16
das
iret
sbb
out
stos
es
sarl
gs
in
inc
jnp
mov
cltd
mov
push
pop
push
pop
mov
imul
inc
sbb
or
pop
pop
shl
xor
jo
sbb
lock
jg
xchg
mov
sub
fcompl
roll
pop
xchg
in
inc
ret
test
out
clc
dec
add
inc
mov
sub
outsl
in
lahf
insb
movhps
leave
or
sbb
push
jecxz
lods
shrl
push
mov
imul
jbe
sub
cmp
inc
insl
xchg
mov
push
xchg
xchg
dec
stos
jmp
subb
lds
out
mov
xchg
ja
xchg
inc
mov
pushf
sete
js
xchg
addr16
rcr
stc
inc
xchg
add
daa
aas
loope
sti
jge
stos
pop
outsl
sub
loope
mov
test
inc
mov
xor
or
js
inc
mov
sub
ja
cmc
mov
sbb
popf
sub
ret
mov
cmp
imul
pop
mov
cmp
push
push
mov
lahf
addr16
in
push
hlt
push
insb
xor
idivl
mov
leave
mov
stos
pop
rclb
out
inc
sbbb
insb
lds
dec
push
adc
mov
test
mov
or
cmp
jle
dec
fcompl
int
cwtl
xor
sbb
xor
ror
jne
or
cmp
lods
cmpsb
mov
xor
add
es
or
pop
lcall
jbe
mov
sbb
inc
jns
sub
lret
push
sub
cmp
gs
sbb
jle
ss
adc
pop
mov
jmp
fldenv
in
lcall
or
and
mov
mov
xchg
mov
jle
int
sub
sbb
nop
xor
mov
lods
sbb
sub
mov
int
in
lahf
add
or
and
jne
pop
fdivs
dec
pushf
adc
dec
out
sbb
or
mov
mov
lods
in
mov
fwait
dec
iret
imul
inc
or
pop
test
mov
ret
mov
aad
jg
mov
sub
aaa
adc
lea
mov
lretw
push
pop
into
jmp
scas
gs
pop
out
xor
pusha
hlt
inc
xchg
fidivs
stos
adc
cltd
sbb
stc
das
adc
popa
popa
add
nop
shlb
jnp
and
mov
popa
mov
adc
pop
ja
jns
mov
xchg
hlt
orl
mov
rcrb
mov
aam
inc
outsl
out
data16
pusha
rcll
fsubrp
cmp
scas
test
or
inc
into
push
ficoms
stc
outsl
dec
outsl
xor
fs
xchg
dec
mov
inc
or
les
test
popf
xlat
cmp
ret
orl
dec
sub
iret
fildll
jg
frstor
mov
add
pop
ss
push
or
packuswb
rcll
stos
mov
and
das
fildl
dec
pop
scas
pop
fisttps
nop
add
arpl
mov
leave
mov
imul
ret
xchg
and
fs
add
fimuls
adc
shlb
insl
jp
add
ss
xor
jbe
pusha
stc
shr
cmp
jbe
jne
or
or
jmp
pop
sbb
test
push
pop
jb
popa
pop
cmp
arpl
rcll
and
or
or
gs
mov
push
pop
loope
push
dec
loope
fstpt
cmpsl
imull
shlb
push
push
lock
push
faddl
jp
sub
in
fs
ret
stc
inc
mov
mov
mov
push
jmp
push
out
cmp
and
push
add
mov
and
xor
jle
movsb
xchg
ss
fs
or
jmp
stos
das
xor
neg
and
rcl
xchg
fsubrp
mov
idivb
cmp
aam
sti
stc
aaa
mov
shlb
xor
dec
insl
loopne
cltd
jne
pop
or
xchg
cmp
xchg
dec
mov
or
jecxz
ret
mov
arpl
ficomps
flds
lret
sub
outsl
mov
add
out
jmp
or
ss
lods
inc
stos
xchg
in
xchg
in
push
gs
inc
xor
xor
mov
test
mov
pushfw
xchg
jp
mov
add
ror
pushf
xor
jno
in
pushf
push
and
cld
cmp
loope
int3
cld
ja
dec
pop
and
cs
imul
mov
sbb
fs
inc
inc
jnp
add
mov
jge
call
add
xor
popf
mov
inc
test
inc
adc
pop
and
test
shrl
lea
mov
addb
mov
mov
jne
cs
mov
pusha
loopne
cmp
inc
aad
lahf
decb
aad
xor
add
and
sub
hlt
and
lods
sbbl
ror
jbe
jno
push
dec
xchg
mov
cwtl
fnstenv
data16
in
fidivs
out
mov
sbb
pop
bound
or
mov
pop
inc
andl
js
dec
hlt
scas
push
pushl
sbb
mov
adc
jne
stos
shll
mov
stc
adc
test
bound
je
aad
push
outsb
das
jae
call
jne
out
nop
fisttpll
dec
xchg
repnz
sub
or
nop
jno
dec
insl
ds
pop
mov
xlat
fistl
imul
aad
outsl
cwtl
fwait
pop
push
cmp
and
shrl
mov
push
push
push
enter
xchg
mov
inc
mov
dec
loop
sub
adc
lahf
dec
pop
lock
and
fwait
push
or
dec
mov
jb
and
sahf
and
fcomps
stos
xor
lcall
daa
jne
loop
dec
xchg
mov
aad
xor
lahf
sbb
jb
pop
add
xlat
mov
jae
ret
xchg
pop
sub
mov
sarb
push
dec
mov
xor
dec
push
sub
std
pop
pop
add
or
sahf
mov
fnstsw
jbe
das
enter
test
sbb
pop
xchg
inc
inc
loope
add
mull
out
cmpl
pop
mov
ja
dec
push
enter
and
pop
pop
stos
call
sti
or
rclb
scas
lahf
dec
clc
test
or
inc
fucomi
not
sub
aam
js
dec
in
popf
push
lahf
loope
ret
xchg
divb
stc
pop
popa
xchg
outsl
sbb
push
pop
mov
inc
es
push
dec
add
scas
int3
jp
sbb
dec
pop
stc
adc
nop
pop
add
daa
or
inc
or
add
jle
jl
lret
cmp
stos
xorl
shl
fldenv
aad
cmp
sub
inc
iret
mov
mov
mov
adc
popa
jne
mov
push
jmp
faddl
test
add
rclb
or
test
popf
adc
mov
lahf
movsl
adc
cwtl
std
xor
add
sti
das
movl
arpl
enter
xchg
stos
iret
cwtl
in
push
repnz
lods
sbb
cmp
sahf
enter
and
lods
je
movsb
xchg
pop
mov
sbb
cmc
add
mov
outsb
pop
push
ficompl
out
jb
dec
mov
xor
or
adcl
push
mov
loope
sahf
jne
jb
pop
call
mov
sti
daa
xlat
mov
mov
xchg
fistpl
addb
in
sub
stc
xor
add
andb
mov
lret
adc
or
sub
mov
popf
out
out
fadds
pop
adc
jo
in
dec
mov
aam
jp
loop
pop
xor
js
pop
pushf
xchg
scas
sti
dec
enter
dec
pop
outsl
mov
dec
cmp
mov
das
dec
ret
push
pop
add
sti
mov
sub
pop
mov
je
xchg
mov
inc
dec
xchg
daa
jnp
dec
and
sbb
or
cmp
xor
es
cltd
dec
adc
test
cmp
ret
add
sub
or
cmpsl
cmpsl
cmp
movsb
fs
test
jmp
test
adc
cmp
mov
inc
bound
xchg
imul
jecxz
mov
loope
xchg
arpl
idivb
jne
mov
iret
mov
sbb
xchg
push
icebp
mov
xorl
repnz
or
movsb
test
mov
lcall
push
cmc
lods
js
pop
hlt
push
mov
cltd
loopne
nop
stos
sahf
adc
mov
xor
sub
outsb
cwtl
fbld
call
mov
sub
add
xchg
iret
or
sub
imul
jle
outsb
movsl
xchg
gs
lods
mov
cmp
int
sbb
scas
mov
xor
push
sub
jg
cli
xchg
cmp
sahf
mov
adc
repz
movsl
addr16
js
push
in
mov
xor
shll
mov
xchg
test
sbb
xor
mov
test
fucomip
pop
mov
dec
xchg
insl
shl
and
fsubrl
aam
pop
jo
out
iret
xor
insl
cmpsl
cmp
or
std
fildll
dec
cmpsl
push
clc
inc
movsl
fcmovne
pop
xor
lock
mov
push
cltd
rcr
mov
jae
pop
cmp
add
mov
sbb
inc
or
xor
mov
lods
daa
inc
in
or
dec
insl
mov
cmpsl
test
stos
loop
or
testl
sub
les
mov
cmpsb
cmp
rorl
xchg
popa
jecxz
imul
call
jb
and
and
jnp
sbb
test
add
movsl
popa
ja
xlat
mov
scas
fsubl
movsl
dec
mov
add
rcrl
lret
repz
lods
ljmp
aam
test
arpl
inc
mov
jae
fwait
lcall
xor
out
insl
aaa
add
xchg
xchg
mov
jl
inc
cmpsl
fimuls
mov
test
mov
pop
inc
mov
add
fists
lods
inc
xchg
push
jmp
dec
lds
or
imul
dec
sbb
xchg
xchg
popa
sbb
sub
int3
mov
jecxz
jmp
and
test
aaa
cmpsl
fwait
aam
dec
gs
out
dec
xchg
scas
das
and
xor
lods
jnp
clc
jl
or
popa
in
cmc
inc
xchg
aaa
pop
vmread
les
mov
mov
cmpsb
xor
rclb
cli
jle
in
pop
ss
jmp
or
cmp
mov
pop
sub
mov
jge
and
jmp
ljmp
sbb
out
xlat
xor
lods
pushf
aaa
sub
cmp
loop
pop
push
ljmp
scas
mov
dec
lcall
cli
push
pop
jmp
xor
bound
push
cmpsl
mov
jae
ja
xchg
cli
addl
dec
into
push
sub
push
lea
push
loope
loopne
leave
in
xchg
xor
add
or
int3
pop
pop
adc
push
pop
mov
sarb
add
push
jmp
shrb
loopne
stc
sub
ret
xorl
push
js
xchg
push
push
jnp
pushf
add
push
or
push
inc
xor
outsl
sbb
mov
out
jno
outsl
adc
lods
inc
adc
cmp
cmp
int
mov
movl
stos
into
adc
inc
cld
add
and
jns
sbb
sub
pop
xchg
inc
scas
shrb
scas
xor
stos
pop
sub
scas
popf
lret
stos
ds
push
mov
les
aam
lcall
mov
ds
mov
pop
dec
sahf
xor
pop
filds
into
enter
inc
lcall
lock
sahf
and
addr16
iret
add
push
pop
pop
xor
aam
xor
movsl
mov
jo
jmp
rorb
into
nop
notl
jne
jl
mov
les
mov
mov
sub
dec
cmpsb
movl
push
fisttps
jae
sbb
aad
pop
pop
jecxz
adc
inc
push
push
lock
xor
imul
aad
lds
jge
cmc
pop
addr16
insb
jg
mov
xor
imul
and
cmpsb
add
test
push
fsubl
into
out
in
jge
jne
daa
push
test
imul
push
daa
dec
xor
mov
rcll
add
mov
jo
mov
xor
mov
pop
hlt
sub
sub
test
mov
lock
fisubl
jns
fwait
xor
movsb
sbb
lock
adc
les
xlat
add
fwait
adc
mov
scas
cli
dec
enter
jnp
xchg
jb
ret
outsl
rorb
mov
stc
cmp
ja
sbb
cmc
xchg
or
cltd
adc
jae
jo
lcall
mov
in
repz
test
repz
xor
dec
movsb
sbb
xchg
push
mov
mov
andb
or
dec
out
sti
movsb
and
imul
dec
pop
ret
sbb
in
and
into
clc
xor
mov
jns
xor
pop
inc
mov
adc
shlb
cltd
mulb
jmp
nop
xor
mov
adc
add
iret
cmp
roll
adc
mov
push
rorb
gs
fsubr
dec
jno
xor
jle
idivb
lds
xor
pop
shlb
fadd
xchg
in
roll
cmp
aas
xchg
push
ret
subl
loop
cmp
cmp
sub
repnz
in
and
pushf
jno
push
jne
lods
pop
mov
aam
sub
lods
inc
mov
fldl
ret
jecxz
sbb
out
mov
cmpsb
mov
xor
jnp
xchg
inc
inc
test
clc
das
notl
std
lret
je
ret
addr16
mov
mov
jecxz
pop
pop
lods
jg
leave
push
inc
aaa
es
jmp
and
mov
nop
jp
pop
and
push
out
dec
mov
or
jl
cmpsl
push
int
cltd
jge
mov
iret
pop
push
je
inc
loopne
lahf
xchg
aam
call
mov
lock
vmptrst
adc
test
jns
test
out
sahf
mov
sub
lcall
aas
dec
mov
cltd
adc
adc
icebp
ret
xor
in
jmp
mov
and
pop
and
jmp
ret
fiadds
push
xchg
or
xchg
xor
mov
addr16
sarl
xlat
add
jno
push
cmpsb
sbb
mov
cmpsb
and
sbb
dec
call
popa
xor
fmuls
rcll
jnp
xor
sub
adc
outsl
sub
adc
jnp
xor
adc
cmpl
pop
cltd
mov
scas
movsb
add
stos
inc
neg
stos
xchg
cs
fwait
pop
enter
fwait
push
lret
popa
cmp
adc
mov
cmp
je
or
fs
xchg
inc
popl
or
xchg
hlt
das
add
imul
fidivs
aaa
mov
cmp
stc
sahf
inc
lods
clc
push
stos
pop
adc
imul
aas
lahf
outsb
stos
and
mov
dec
outsb
scas
insb
fs
and
xlat
stos
lret
stc
cmp
shll
pop
adc
outsb
jno
xchg
insb
pop
fisubs
out
or
mov
ja
sub
jl
mov
lea
pop
shr
shl
fnsave
lret
mov
pusha
leave
outsl
filds
fistpll
sarl
mov
idiv
jl
fdivrl
add
sbb
pop
scas
mov
arpl
cmpsl
divb
lods
out
cs
push
mov
pop
mov
pop
loop
movb
or
adc
add
addr16
cmp
ret
xchg
mov
lcall
adc
mov
mov
fldenv
leave
dec
decl
xor
lea
jge
or
xorl
mov
js
shl
test
repnz
inc
inc
ja
aad
mov
int3
fistpl
imul
sahf
js
pop
or
mov
jmp
jl
testl
fdivr
xchg
sti
xchg
adc
aad
fistps
mov
insl
divl
lds
outsl
push
push
push
or
sbb
push
test
sub
sbb
push
push
lret
sub
fcomip
mov
sar
test
inc
xor
xchg
aas
sti
cwtl
jns
sahf
dec
pop
jmp
mov
in
cwtl
ljmp
in
lret
pop
cmc
inc
lock
icebp
cmp
sub
sub
or
cmp
sbb
loope
mov
int3
add
cmp
lcall
inc
pop
or
out
adc
into
jns
movsl
or
aas
jb
mov
push
nop
pop
insl
out
jb
scas
ja
jne
movsl
dec
test
aas
ds
in
lea
or
push
aaa
mov
jo
sub
dec
fildl
jne
inc
adc
idivl
jmp
fimuls
xchg
lds
or
repz
rcrl
mov
mov
fmuls
sahf
insb
push
in
enter
mov
mov
mov
popa
rcrl
pop
in
adc
insb
cli
lea
cmp
test
mov
mov
lahf
adc
push
cld
mov
in
pop
ret
ficomps
incb
jbe
aaa
out
mov
movsb
insl
mov
std
or
adc
pop
xor
enter
sahf
cs
push
add
neg
ljmp
loopne
aad
pop
dec
and
sub
pop
add
pushf
rolb
or
mov
cmp
pop
cs
pop
lcall
rdmsr
and
mov
shll
jno
das
jl
mov
enter
inc
dec
pop
out
and
lock
sbb
jb
inc
jg
pop
addr16
js
pop
and
mov
sbb
movb
cmp
cmp
push
mov
and
lcall
in
call
or
mov
xchg
pop
iret
addr16
ss
in
mov
outsb
pop
inc
mov
popa
xchg
fs
es
sti
call
imul
out
mov
xor
aaa
repnz
cwtl
cmp
inc
inc
nop
aad
sub
loop
into
push
xchg
dec
iret
mov
pop
mov
mov
add
add
mov
add
jmp
pop
mov
push
and
in
and
and
pop
and
imul
hlt
call
jne
jb
aas
cmpsl
fstps
mov
loop
pop
xor
cmp
sbb
dec
lds
mov
mov
movsl
xlat
imulb
pop
orb
in
cltd
addr16
pop
mov
pop
mov
je
notl
mov
in
and
out
cltd
adc
sahf
lds
cmc
pop
lds
pop
sahf
outsb
notl
mov
mov
fnstenv
lret
mov
mov
inc
clc
jle
inc
mov
or
mov
shrb
addb
xor
cld
test
add
std
inc
fiaddl
scas
mov
pop
mov
push
idiv
push
mov
popa
aaa
ss
in
loop
imul
je
pop
popa
mov
xor
adc
sti
inc
ss
test
lret
scas
stos
push
cmp
mov
shll
xlat
popf
outsl
arpl
add
test
lock
aas
cmp
pop
aad
lods
sub
add
dec
data16
jge
adc
dec
push
pop
test
push
cmc
sbb
lock
mov
add
adc
adc
mov
leave
ret
push
shrl
loopne
dec
dec
mov
or
xor
and
or
in
mov
insl
leave
fwait
push
and
sub
push
ss
sbb
xor
jle
outsb
add
adc
addb
mov
lahf
and
push
inc
test
pop
loope
sub
inc
mov
mov
mov
aaa
test
sahf
xor
addr16
pop
popa
scas
sti
js
push
call
jno
pushf
inc
or
cli
clc
stos
and
outsb
adc
lcall
movsb
lahf
lret
mov
cli
cld
mov
fidivs
xor
push
add
lcall
clc
xchg
push
add
dec
aas
js
push
out
mov
pushf
sub
dec
insb
stos
cli
and
xchg
sbb
js
pushw
xchg
pop
cmp
fidivrs
iret
push
add
pop
jae
lret
push
adc
cmp
push
xlat
xor
xchg
push
xor
cltd
jle
pop
jmp
jmp
xchg
ss
inc
mov
movsb
xchg
lret
std
pop
and
mov
dec
mov
nop
cmp
rcll
sahf
jge
shr
loope
fsubrl
test
sbb
sub
xchg
push
popf
insb
fwait
xchg
adc
sbb
push
mov
fdivs
inc
arpl
inc
sub
std
subl
ja
dec
jmp
push
mov
dec
andb
loopne
sub
inc
mov
xchg
stos
pop
js
adc
das
lahf
push
cmp
sbb
or
or
cmc
cmp
add
add
aam
popa
in
add
and
sub
popf
inc
or
rclb
push
fsubl
in
cmp
out
jne
inc
inc
adc
mov
dec
sbb
jb
mov
push
or
lods
ret
and
dec
ret
stc
jecxz
mov
push
lds
pop
js
xor
pushf
fmulp
mov
xor
daa
xlat
andl
adc
mov
pop
push
adc
jno
sbb
outsb
xchg
cwtl
lds
xor
lret
test
leave
lock
or
pop
add
mov
int
leave
inc
push
push
mov
ficomps
jns
orb
sahf
push
push
push
dec
out
jne
mov
mov
push
pop
loope
iret
scas
push
cmpsb
das
xchg
ljmp
lds
push
cmp
nop
jno
sbb
sub
icebp
imul
xchg
shrb
aam
jg
push
sbb
enter
testb
cmp
orb
sub
out
test
pop
sahf
out
lods
add
ds
jb
push
repnz
mov
clc
lea
stc
mov
adc
iret
jnp
sbb
lods
jns
mov
cmpsb
push
or
lcall
dec
ret
jno
jb
insb
pop
xchg
jecxz
sub
mov
dec
inc
add
mov
rcrl
or
loope
sub
jl
jb
orl
mov
mov
sub
push
add
jmp
xchg
cmp
stos
sub
xchg
int3
mov
sub
jmp
ss
push
or
addr16
jp
inc
push
iret
dec
sbb
das
push
js
std
sbb
mov
jmp
dec
jns
stos
orb
subb
rorl
mov
mov
insb
and
xor
dec
popa
push
out
es
es
xor
mov
jl
inc
adc
inc
or
insb
scas
dec
int3
ljmp
lea
dec
mov
xor
sbb
pop
in
mov
pushf
repz
pop
jns
stos
ds
xor
movsb
push
pop
iret
push
pusha
ja
fs
sub
jmp
xchg
pop
jl
add
cmp
mov
fcomip
repz
cmpsl
pop
lret
inc
xor
loop
movsl
imul
fisubrl
lcall
mov
mov
repnz
push
pop
or
jbe
xor
or
cmp
mov
int
xor
jae
in
shll
out
mov
xchg
popf
in
rol
pop
jne
ret
mov
adcb
imul
mov
cmp
jno
imul
nop
lods
push
mov
adc
out
or
repz
sbb
cmp
enter
adc
jnp
cmp
xor
in
loope
pushf
popf
add
dec
inc
daa
jp
sub
inc
cltd
inc
cmp
inc
fistpl
stos
std
lahf
stc
aaa
arpl
xchg
sarb
insl
inc
outsl
inc
adc
bound
mov
mov
push
and
push
test
and
iret
mov
icebp
xchg
pushf
xchg
mov
sub
mov
xchg
divb
lock
pushf
pop
cmp
push
fs
daa
mov
test
das
sahf
mov
jo
lahf
cmp
push
test
lret
insl
outsb
test
subb
xchg
imul
lock
dec
movb
push
cmp
mov
or
cmpsb
mov
xchg
xor
aaa
mov
and
mov
cmp
out
rorb
mov
sbb
dec
in
imulb
out
loopne
mov
jle
or
gs
add
push
inc
mov
out
jg
mov
mov
movb
add
shlb
popa
aaa
xchg
and
shlb
jne
leave
stos
imul
cmpb
js
inc
pusha
add
cmp
sbb
daa
lods
sti
ficompl
adc
fists
in
cs
adc
test
cmp
negl
dec
xor
fidivl
dec
or
data16
push
lea
test
and
pusha
lret
and
test
xchg
and
pop
in
jbe
or
leave
sub
loopne
cmc
jno
sahf
sbb
xchg
lea
push
inc
loopne
leave
xchg
fstpt
cld
cmp
inc
nop
loopne
shl
sub
jle
jnp
out
loop
push
dec
jge
divb
jle
inc
cmp
jge
out
out
jecxz
clc
sti
js
push
cwtl
addr16
and
out
fs
push
push
sarl
mov
leave
push
inc
pop
jo
adc
cmc
mov
mov
leave
fbstp
repnz
mov
cmp
xchg
in
inc
and
jg
lahf
cli
pop
mov
dec
mov
test
lods
das
ss
popf
push
insl
mov
gs
mov
movsb
adc
shl
scas
daa
cmp
adc
cwtl
ret
mov
inc
push
inc
push
fstpl
xor
shl
inc
int
mov
in
outsb
push
aaa
rcrl
in
aad
outsb
xlat
push
cwtl
popf
push
sub
pop
hlt
es
sarb
add
in
cmp
enter
aas
xor
loopne
dec
jb
cmp
cmpsl
pushl
js
mov
and
call
adc
dec
add
rolb
push
mov
mov
popa
mov
mov
movsl
fcompl
mov
int
dec
mov
fdivrp
lret
data16
fnstenv
jl
mov
pop
push
push
mov
nop
cltd
inc
xchg
mov
out
add
pop
sbb
lcall
sbb
es
lds
sti
push
mov
xchg
dec
dec
jne
cmp
rcll
jg
outsb
sub
fsubr
pop
addb
mov
inc
add
and
leave
lods
test
add
cmpsl
xor
fstl
das
sahf
jge
mov
mov
test
mov
btr
jns
push
movsb
out
cmc
jmp
jecxz
scas
inc
iret
mov
aaa
push
mov
pop
stos
adc
lods
mov
test
dec
jg
and
inc
xlat
cmp
insl
adc
mov
shrb
mov
aas
inc
jo
out
rorb
ljmp
add
test
clc
jle
mov
sub
movsb
add
push
es
cmp
out
jl
add
rolb
out
adc
movsl
sbb
dec
cmp
push
rcl
adc
rcrb
adc
pushf
mov
scas
shl
xlat
sarl
mov
and
pop
lods
in
mov
xchg
ror
cld
sbb
or
add
pop
nop
and
cwtl
sahf
add
aam
mov
popa
dec
daa
sub
and
aaa
xchg
adc
mov
xchg
mov
xor
xchg
xchg
push
clc
popa
ljmp
jnp
adc
addr16
jbe
jns
std
ja
dec
push
mov
fldcw
pop
xchg
hlt
sub
mov
and
test
push
gs
pop
fs
xor
pop
jl
jne
data16
js
cmp
int3
popf
stos
xlat
and
ret
mov
add
pushf
inc
cmpsl
scas
outsb
sbb
test
push
or
pop
std
jge
mov
insl
in
inc
subb
outsb
and
add
xchg
jmp
dec
mov
push
repnz
xchg
or
sub
out
dec
fnstenv
aas
xchg
test
or
movsl
jg
rclb
push
stc
add
mov
shll
rcrb
mov
lahf
lret
in
cmp
mov
xor
mov
jne
scas
and
aaa
pushf
jno
repz
test
xchg
cwtl
push
adc
stos
test
ss
add
mov
xchg
cmp
aam
sub
jmp
sbb
test
push
dec
fiadds
mov
aad
cmpsb
imul
sahf
sbb
jp
fidivrl
mov
mov
ficompl
bound
cmc
jno
mov
stos
pop
push
pop
mov
outsb
es
ficompl
repz
ffreep
pop
je
cli
xor
test
and
fiaddl
lret
and
sub
mov
xchg
mov
repz
mov
cwtl
sub
xchg
mov
aas
js
ret
std
xchg
lret
sub
mov
jecxz
pop
dec
add
or
push
cld
mov
sub
mov
jecxz
add
jns
or
shl
push
mov
sbb
cmp
clc
ss
xor
pop
sub
mov
outsb
jge
pusha
fadds
jmp
jnp
add
pop
aad
sub
data16
sbb
popl
out
dec
movsl
adc
push
pop
jb
mov
insl
insl
xchg
cmc
mov
les
push
push
sbb
xchg
dec
cmp
lret
adc
add
and
loop
cmp
movsb
jb
imul
inc
outsl
sub
push
xchg
inc
push
inc
adc
sbb
sbb
sbb
xchg
gs
aad
icebp
pushf
push
jae
lods
add
or
mov
adc
inc
adc
inc
testb
dec
add
mov
mov
stos
mov
adc
mov
xchg
pop
jbe
cmpsb
sub
das
pop
mov
leave
movsl
add
inc
jle
mov
xor
int3
stc
shlb
testl
leave
or
roll
mov
cmp
fwait
xchg
pop
fwait
add
aaa
das
xchg
fidivl
hlt
sub
movsb
aas
nop
outsb
sti
mov
je
movsb
xchg
fldcw
pusha
outsl
add
rorb
movsb
and
lods
loope
dec
into
and
jle
jl
into
mov
xchg
test
push
movsb
filds
aaa
test
pop
pop
sub
and
fimull
aaa
aaa
aaa
lcall
int3
int3
sbb
popa
mov
addl
aaa
mov
shll
sbb
in
adc
inc
fwait
jg
test
pop
scas
popa
lcall
and
rcr
lock
mov
adc
imul
jbe
sub
cltd
dec
mov
dec
push
ds
sbbb
push
adc
inc
in
jbe
push
rolb
call
jle
cwtl
test
inc
js
orl
cmp
push
out
xchg
hlt
jno
loopne
movsl
ret
cmpsl
push
push
icebp
ljmp
inc
mov
mov
inc
in
mov
inc
inc
fdivrl
shll
cmpsb
mov
movsl
lods
xor
lods
push
mov
in
xor
or
sahf
sbb
adc
push
mov
ret
lret
enter
icebp
mov
arpl
pop
roll
mov
imul
or
dec
das
pcmpeqw
adc
xchg
add
test
stos
iret
imul
jge
dec
pop
sti
clc
mov
repnz
dec
mov
bound
dec
mov
stos
adcb
out
out
fdivrs
jg
add
hlt
data16
std
jae
push
mov
fsubr
jno
stc
lahf
lods
in
std
mov
xor
sub
pushf
movb
xor
fdiv
mov
xor
ja
hlt
dec
lock
sub
dec
repz
push
xchg
cmp
fwait
xor
clc
test
fstl
stos
mov
xor
adc
scas
cs
jno
pop
push
out
popa
imul
cmp
jmp
insl
and
adc
fldt
jno
scas
in
pop
and
jecxz
scas
jb
push
loop
arpl
and
mov
decb
xchg
jp
sub
in
push
ror
and
int3
or
lea
insl
dec
ss
fildl
jae
mov
mov
frstor
mov
ret
fwait
xchg
pop
cwtl
enter
pop
pop
roll
stc
imulb
mov
jp
jb
loope
dec
shlb
aas
imul
push
sub
mov
test
imul
lahf
adc
cmp
imul
pop
push
test
mov
pop
bound
popf
push
and
add
dec
fisubl
je
add
jbe
or
in
leave
sahf
cmc
mov
test
arpl
nop
lods
xorb
addr16
or
pop
cltd
jo
insb
push
lods
scas
mov
jbe
aad
inc
lret
adc
pop
mov
push
and
les
int3
cmpl
test
loope
shll
add
jbe
dec
and
or
cwtl
lea
sub
sbb
push
xor
and
adc
mov
out
dec
into
sbb
and
sahf
mov
test
push
push
nop
cltd
sub
dec
add
xchg
mov
cltd
xorb
push
mov
cmpb
in
jmp
loope
fmull
or
sub
push
adc
pop
mov
sbb
gs
in
jmp
add
hlt
jae
testb
sbb
jne
jns
adc
sbb
mov
rcrb
pop
cmpl
aaa
dec
mov
mov
mov
aaa
int3
scas
sbb
adc
and
jle
aad
fwait
or
sub
inc
mov
sbb
xlat
mov
sub
jns
clc
ds
repnz
cmpsb
xchg
mov
aas
mov
mov
js
or
cmp
fdivrs
arpl
push
jp
add
cmpsb
adc
bound
dec
sbb
lods
icebp
fisubrl
jg
sbb
sbb
addr16
bound
loope
int
pop
adc
ficoms
jno
mov
add
inc
push
scas
xchg
shr
push
or
insl
js
push
mov
push
xchg
mov
js
mov
mov
mov
ljmp
js
jb
sahf
in
xchg
or
shlb
push
push
cmpsb
repnz
or
mov
push
fldt
or
inc
add
jb
movsl
lock
fisttpl
push
xchg
and
fldenv
stos
push
or
pop
clc
ja
and
out
mov
dec
jno
mov
fisttps
das
mov
push
andl
mov
fdivrl
adc
xchg
cmp
and
cmc
adc
inc
arpl
mov
insl
xchg
imul
in
inc
jp
jmp
out
jle
mov
push
push
mov
pusha
sub
and
xchg
pop
rcll
arpl
adc
sbb
mov
movsb
and
mov
cmpsb
leave
test
clc
sahf
fucomi
sbb
adc
xchg
outsb
dec
sub
ds
pop
mov
cmp
push
jo
cs
mov
push
mov
mov
cli
inc
and
push
cwtl
adc
cld
push
pushf
xchg
jns
in
shll
jg
outsl
enter
sub
add
out
pop
xchg
cmp
std
adcl
push
daa
js
push
sub
inc
test
outsl
xchg
xchg
stos
lea
adc
xchg
aad
mov
push
ss
dec
fstpl
push
and
sti
fisubl
push
enter
or
test
push
in
xchg
push
xchg
mov
pop
aam
lods
add
xchg
ja
push
mov
mov
dec
scas
push
dec
dec
repz
adc
pop
xchg
outsb
pop
into
mov
cmp
shlb
sbb
xchg
hlt
sbb
fucom
pop
loope
mov
aad
lret
push
pop
shlb
mov
out
mov
lea
loopne
das
cltd
aaa
shrb
popa
sbb
push
idiv
in
lret
popa
out
popf
pop
xor
repnz
lret
adc
test
rclb
int
xor
cld
scas
jo
jb
pop
mov
stos
xchg
or
dec
mov
test
daa
sub
ret
pop
rcrb
fimull
or
xchg
dec
sub
vreducess
and
into
dec
pushf
pusha
sub
stos
xchg
pop
lret
flds
xlat
or
jmp
bt
popf
sub
sti
sub
xor
clc
dec
inc
cmp
std
mov
js
inc
xchg
lods
mov
or
lret
pop
rcrl
pop
push
and
inc
push
pop
push
ljmp
lahf
ror
xor
fisubl
cmp
cmpsl
in
iret
in
dec
fsts
out
jle
andb
push
into
pop
mov
lret
imul
inc
lods
out
xlat
es
adc
addr16
xor
js
out
and
xchg
mov
scas
xchg
call
pop
jp
mov
sub
push
dec
testb
es
mov
push
add
inc
sub
cmc
jmp
scas
scas
rcrb
sbb
lret
dec
inc
ja
in
jns
push
sbb
stos
sbb
sbb
inc
jne
cs
push
lea
rorl
jp
dec
shll
cmpsb
mov
sahf
or
sub
push
pop
enter
iret
lcall
testb
out
cld
mov
outsl
dec
or
test
and
ss
cmp
mov
pop
inc
cmp
pop
cmpsl
mov
in
lods
gs
sbb
pop
test
loop
jecxz
hlt
dec
in
test
and
cmp
mov
enter
or
sahf
dec
sbb
xchg
mov
push
ss
adc
push
xlat
sbb
and
push
push
xlat
mov
lret
idivl
pop
addr16
cmp
push
sub
jo
dec
or
das
cmp
daa
sbb
ljmp
aad
pop
movsb
icebp
sbb
jne
mov
pop
test
dec
add
int3
ret
cwtl
sarl
jb
push
and
gs
jl
out
and
dec
xor
pop
push
and
jo
popl
gs
mov
pop
rorb
pop
dec
dec
aad
sub
lahf
leave
imul
mov
in
add
ljmp
ljmp
call
les
int3
cld
mov
movsb
mov
sub
mov
push
jbe
pop
and
out
cmp
lods
push
sarl
jecxz
repnz
mov
repz
out
push
rorb
aaa
into
dec
add
mov
push
cli
movsl
aaa
fnstenv
lods
jl
dec
inc
and
add
xor
int
push
ret
shlb
out
es
mov
adc
jno
push
mov
jl
xchg
pop
cmpsl
adc
outsb
mov
sub
cmc
repz
test
test
shrb
cmp
iret
fstps
fiaddl
xorl
fisubrs
xorl
mov
cli
dec
and
loopne
lea
mov
inc
or
inc
arpl
daa
mov
add
pop
ficoms
mov
dec
ss
cmp
and
mov
insb
int3
test
call
pop
mov
nop
mov
cld
inc
mov
mov
mov
stos
or
dec
add
pop
in
aas
jg
sbb
jns
push
inc
push
lcall
bound
ljmp
mov
xchg
adc
mov
fcoms
aas
dec
add
mov
xchg
fbstp
mov
jnp
imul
insl
xchg
orb
add
and
cli
scas
adc
adc
lock
mov
pop
mul
movsl
dec
ret
mov
lds
cmp
sub
mov
insb
mov
test
dec
mov
sub
push
out
out
jp
pusha
and
mull
jns
inc
or
mov
xchg
jmp
lret
jle
adc
cmc
jle
cli
ja
inc
jle
outsl
sahf
inc
popf
dec
lea
mov
add
cmp
fidivs
rcrb
mov
mov
iret
icebp
jle
mulb
bnd
mov
mov
je
cltd
repz
mov
sub
data16
shlb
iret
inc
pop
and
popa
cwtl
addb
dec
ret
lods
push
insb
cltd
or
test
jg
sub
fistps
dec
xchg
loope
and
sbb
jno
cltd
sbb
outsb
xor
mov
das
mov
data16
mov
fidivrl
xchg
and
inc
cmpsb
jnp
xor
and
shrl
jmp
lds
cli
sbb
dec
fucomip
mov
iret
repnz
or
sahf
loopne
cmp
call
push
out
mov
pop
mov
pusha
fnstcw
sbb
jbe
outsb
mov
data16
add
fstl
push
je
mov
dec
cmp
add
out
dec
or
fldz
and
scas
ret
bound
inc
push
push
imul
inc
lcall
push
iret
negb
mov
or
mov
aaa
call
scas
ds
lds
jecxz
pop
dec
cmp
jp
dec
arpl
push
sub
xor
push
notb
lds
hlt
pop
jb
mov
mull
roll
jno
out
push
pop
int3
jmp
pushf
dec
mov
in
lds
jae
xchg
cmpsb
push
mov
mov
push
subl
or
cmc
push
outsb
lcall
fdivrl
add
pop
shrb
mov
sbb
push
xchg
jp
popa
fcompl
add
sub
cmpsb
xor
xchg
les
xor
rcrl
fisubs
sbb
int3
jmp
mov
daa
push
sbb
sar
push
xor
dec
fildll
inc
in
cwtl
faddl
loope
xlat
out
in
push
mov
mov
or
cmp
add
push
lret
outsb
mov
xlat
sub
or
movsb
daa
in
mov
or
ret
repz
xor
and
js
es
pop
hlt
add
fsts
dec
mov
mov
adc
add
into
pop
loope
pushw
imul
sti
mov
push
in
bound
imulb
and
pop
aam
sbb
test
sbb
out
je
es
sbb
mov
cmp
push
ret
or
xchg
into
pop
insb
mov
cmpsb
dec
fcmovnbe
test
add
mov
or
jns
inc
mov
sbb
fucomi
orb
xor
addr16
sub
cmp
rcrb
cmpl
out
adc
inc
fstps
cmp
add
xor
scas
inc
inc
arpl
push
fcomps
cmp
and
imul
cmpb
or
push
mov
scas
or
mov
dec
es
xchg
sbb
bound
imul
shl
mov
lahf
ret
aas
lods
movsl
insl
dec
lahf
pop
stc
jo
xchg
dec
dec
mov
clc
pop
adc
and
jne
inc
mov
inc
std
push
inc
or
inc
push
jp
js
loopne
dec
mov
or
bnd
fidivrl
mov
popf
fists
loope
leave
int3
push
flds
and
cltd
repz
dec
mov
ret
fldenv
push
push
movsb
mov
decb
out
cs
jl
ljmp
scas
data16
or
or
xchg
and
dec
push
pop
cmpsl
test
int
sub
out
pop
jo
xchg
out
inc
sub
stos
out
mov
adc
out
xchg
add
dec
cld
nop
icebp
jle
push
pushf
push
mov
movsl
insb
arpl
mov
pushf
fcmovbe
xor
and
fdivrs
mov
mov
xchg
outsl
jmp
int
test
inc
pop
mov
dec
and
sub
jne
push
sbb
jb
jne
test
loope
and
mov
jg
mov
es
scas
add
sti
pop
jp
cwtl
jge
out
aam
outsb
test
adc
out
imul
cmpsl
or
mov
pop
cmp
aad
jle
lods
loop
mov
push
jecxz
sbb
pop
push
jecxz
in
mov
jp
es
xchg
or
cmp
xor
bound
pushf
pop
cmc
and
mov
mov
fistpl
mov
pop
cmp
lods
mov
sahf
push
scas
xchg
lods
xchg
dec
jmp
cmc
or
pop
and
mov
js
cmp
std
mov
mov
aaa
cmpsl
xor
cs
leave
xorb
int3
lret
lods
jae
sub
jge
test
jo
jg
les
and
mov
dec
pop
inc
and
into
cli
add
dec
imul
and
sbb
and
aaa
push
out
or
jle
mov
test
loopne
and
xchg
mov
or
jle
adc
bound
popa
push
adc
add
je
xlat
or
out
xor
test
nop
sbb
pushf
dec
push
jb
popf
rol
rorl
jne
js
inc
lea
pop
and
adc
inc
movsl
and
xchg
fistpll
xor
inc
inc
lret
sub
inc
andb
dec
orl
push
mov
repz
je
push
push
mov
xchg
pop
xor
inc
mov
xchg
test
lock
pop
or
jp
fwait
push
adcl
enter
or
sbb
dec
mov
cmpsl
aas
or
push
cltd
cs
push
pop
jo
out
lods
dec
in
dec
int3
and
mov
rol
mov
popa
orb
push
dec
out
rorl
out
inc
fs
xor
mov
out
push
jecxz
outsl
enter
sub
repz
das
jmp
scas
inc
pop
jae
sub
fsub
push
xor
mov
cmpsb
mov
movsb
loop
mov
push
xchg
cmpb
test
clc
mov
add
outsl
in
lds
and
lahf
jle
cmp
incb
or
dec
mov
test
in
jnp
pop
inc
hlt
add
incl
jbe,pn
fsubrl
movsb
ss
fwait
pop
icebp
std
dec
xor
pop
pop
xor
mov
das
jbe
out
and
or
mov
xchg
sti
mov
cmp
push
push
pop
popf
in
jo
mov
movsl
mov
or
and
notl
out
xor
jge
lret
aaa
adc
call
icebp
es
test
scas
pop
sbb
jle
push
or
cmp
cmp
sbb
pop
clc
mov
jae
sbb
jnp
daa
mov
add
popf
mov
mov
sbb
les
jmp
pop
cmpsb
push
int
roll
fs
pop
pop
push
test
cmp
dec
push
mov
push
mov
cmpsl
mov
pusha
sbbl
add
cmc
jg
mov
sbb
mov
inc
shrl
pop
fistl
adc
push
inc
movsb
sub
aad
add
es
data16
jns
jge
pop
sub
dec
and
xor
jp
pop
sbb
xchg
clc
sub
push
repnz
xchg
push
jnp
xchg
in
in
push
loope
mov
test
mov
in
iret
or
mov
mov
xor
push
out
dec
test
movq
aas
sub
addr16
dec
sarb
subl
xor
jo
repz
imul
inc
sbb
pop
adc
jl
into
dec
mov
test
cmp
ja
lret
mov
jb
or
sahf
nop
arpl
ret
lods
add
or
dec
jp
sbb
inc
cmp
dec
in
mov
ds
cmpsb
sbb
stos
add
cmpsb
sysenter
out
enter
sahf
daa
fwait
and
mov
int3
test
jb
clc
and
mov
mov
mov
push
sbb
and
std
out
mov
mov
outsb
xor
xchg
ret
mov
ljmp
mov
and
and
sbb
dec
shrl
and
movsl
fidivs
cld
xlat
mov
push
push
in
pop
or
mov
push
or
mov
mov
das
je
jecxz
push
ljmp
jecxz
cs
ficoms
push
xor
push
mov
xchg
mov
jecxz
cmp
stos
leave
shll
popf
jg
imul
loope
cmp
mov
jl
subl
je
das
pop
in
mov
int3
inc
call
dec
xor
push
test
xchg
into
subb
add
mov
outsb
scas
ret
ret
ficompl
add
ds
push
inc
fisttps
inc
incb
cmpsl
pop
dec
push
sbb
dec
sar
pop
movsl
mov
mov
int
sub
cmpsb
shl
mov
pop
pop
ret
mov
jbe
lcall
movsb
hlt
jae
loop
adc
pop
ret
lods
test
inc
mov
pop
push
dec
inc
data16
push
pop
push
jnp
add
jo
lock
mov
mov
fwait
insl
lret
sub
or
xor
cltd
sbb
jmp
fstps
push
ret
test
or
out
push
in
adc
inc
push
xchg
mov
adc
loop
mov
inc
shlb
pop
aaa
aam
cmp
dec
into
pushf
xor
and
mov
inc
out
add
add
push
pop
pop
or
push
jo
dec
push
adc
popl
xchg
push
jb
loopne
add
mov
frstor
push
or
cld
pop
out
xchg
mov
jnp
cld
sbb
inc
insb
shlb
add
xchg
mov
stc
cmp
mov
lahf
pop
or
mov
jl
add
int3
push
xorl
mov
fisubrs
stc
adc
sub
dec
lret
push
xor
cmpsb
mov
rcr
jb
xchg
out
sbb
out
enter
in
popa
ss
lds
enter
jno
dec
push
ficompl
xchg
nopl
mov
and
xor
jno
lea
nop
aaa
fadds
dec
imul
nop
out
loopne
xor
fnstcw
pop
call
int3
insl
enter
inc
sbb
lahf
and
test
stc
and
mov
lods
xor
repnz
xor
insb
mov
pop
divl
and
imul
rolb
shrb
sbb
fwait
rcll
xchg
push
ljmp
enter
data16
xchg
jp
push
mov
shll
push
push
xor
sbb
notb
out
movsb
sub
cs
push
movsb
xlat
sub
mov
and
int3
out
cmpsb
push
dec
mov
jmp
xor
std
sub
imul
clc
sub
sub
mov
cld
jae
mov
mov
das
jge
movsl
push
sti
sbb
dec
dec
enter
dec
ja
in
sub
cmc
popf
dec
push
testb
loop
lods
adc
jl
out
push
xchg
int
mov
rcll
cmpsb
test
xor
in
xchg
xor
loope
push
loop
dec
dec
push
shrb
sub
push
cmp
push
int3
sub
lds
ss
mov
add
leave
pop
mov
loopne
xor
cmp
add
cwtl
test
lds
add
pop
jae
add
mov
testb
int3
mov
cld
jg
ficoms
idivl
add
fcmovnu
adc
popa
stc
sbb
imul
cmp
lret
mov
cmp
mov
ss
sub
sbb
mov
sub
or
xor
arpl
jns
repz
fsubl
jge
int3
movzbl
and
std
aam
dec
jo
test
test
inc
cmpsl
pushf
ss
inc
popf
cmpsb
call
or
rdtsc
add
jno
scas
cmpsl
push
sub
add
dec
aaa
imul
cmp
sub
lret
inc
fisttps
push
and
icebp
pop
xor
out
lcall
mov
mov
out
outsl
xchg
jmp
cmp
mov
mov
dec
sbb
popf
mov
adc
sarl
or
push
imul
push
mov
std
xor
xor
jo
lcall
push
je
adc
mov
xor
lret
dec
shl
je
int3
mov
mov
int3
lds
inc
cld
cmp
fcmove
push
dec
mov
addr16
add
pop
pop
into
pop
cli
ljmp
jne
leave
dec
test
sub
ds
in
subl
loopne
mov
sbb
sbb
lock
mov
mov
dec
or
push
test
push
sbbb
sub
xchg
jns
loop
xchg
mov
pop
or
xlat
sub
outsb
shrb
dec
pop
or
int
pop
xorl
es
stos
inc
push
out
in
int3
jns
or
gs
jne
sbb
test
cmp
int3
xchg
enter
lret
pop
das
mov
out
frstor
sub
mov
mov
test
cmp
xchg
rcl
xchg
jb
scas
push
das
or
fsin
add
test
push
in
jnp
mov
jne
rcrl
jmp
xchg
mov
ss
xchg
gs
push
jmp
mov
out
adc
imul
fadd
mov
and
or
es
jl
mov
mov
cmpsb
mov
cmp
xchg
cwtl
jecxz
xchg
adc
cmp
dec
xchg
xchg
xchg
loopne
leave
gs
sbb
sub
dec
push
std
nop
loope
or
push
add
push
cmp
pop
push
divl
or
popa
repnz
imul
adc
fiadds
rcrl
dec
into
push
adc
add
xchg
in
sarb
and
mov
out
stos
sub
out
mov
stc
nop
lret
jle
adc
stc
popa
and
sti
test
inc
hlt
mov
jg
push
cmp
dec
fs
addb
sbb
cmpsb
and
rcll
add
fidivl
icebp
and
hlt
mov
enter
xor
iret
add
test
repnz
ljmp
mov
pop
sbb
das
testb
dec
mov
loop
xor
xor
jno
mov
mov
and
insb
sbb
jnp
ret
xchg
and
outsl
dec
out
ret
iret
test
cld
lret
xchg
add
jge
dec
bound
hlt
push
adc
insb
jnp,pn
mov
xchg
dec
sahf
inc
fsubl
movsl
lret
push
jns
cli
orb
test
hlt
dec
out
mov
xor
aad
xchg
int3
rorl
mov
xor
cli
addb
mov
shlb
sub
or
ja
xchg
or
std
sbbl
jnp
call
imul
xor
cltd
pop
into
int
lds
je
fldenv
jmp
les
subl
cli
and
cmc
test
xchg
int3
ja
or
adcl
bound
rol
scas
sbb
movsl
and
inc
push
pop
jbe,pt
xor
cmp
mov
dec
mov
movsl
icebp
xor
xor
and
sub
or
dec
insl
std
aas
pushf
sub
add
das
xor
lock
and
loopne
aam
insl
sub
call
fs
inc
pop
inc
gs
out
iret
testb
idivl
cmpsb
xchg
xchg
inc
xor
mov
jle
fnsave
rorl
test
test
dec
push
call
outsb
jle
jmp
adc
addr16
cmp
dec
pop
mov
stc
out
mov
mov
pop
cmpsb
xchg
out
lods
jae
sub
add
pop
nop
jecxz
mov
fildll
into
cmp
movsb
jge
in
jecxz
mov
jmp
cld
sub
sbb
and
int3
inc
repz
cld
add
rorb
jg
sbb
sub
sahf
cld
pop
cmp
mov
dec
pop
mov
jecxz
xor
mov
jge
dec
ret
cld
cltd
stos
outsl
pusha
sbb
mov
nop
movsb
sti
jo
lea
icebp
pop
roll
lods
dec
outsl
sub
or
sbbb
lock
shl
cmpsb
push
jb
clc
cld
test
xchg
pop
test
clc
rcll
test
mov
adc
insb
out
repnz
sub
pushf
shll
roll
push
test
loopne
inc
adc
and
loope
imul
sbb
pop
pop
cld
pop
aaa
cmpsb
cmp
inc
push
jle
cmpsl
js
ss
xor
pop
aas
out
pop
jae
ljmp
sbb
jge
repz
cld
pop
xlat
sahf
sbb
js
xchg
pop
xor
or
mov
aad
inc
nop
mov
outsl
push
jb
cmp
fs
movd
or
push
call
ja
jmp
mov
or
mov
std
and
ffree
mov
stos
and
fldt
aas
mov
es
daa
xchg
fs
xor
mov
test
mov
aad
mov
repnz
and
scas
clc
jp
nop
mov
mov
xor
xlat
adc
fwait
rolb
xchg
add
out
aad
and
int
leave
pop
jecxz
fs
jp
in
jno
push
sbb
bound
mov
aaa
mov
in
out
mov
out
hlt
push
jo
pop
mov
jmp
imul
mov
cmpsl
clc
fldenv
fldt
inc
jo
cs
rolb
and
fnstenv
add
dec
push
andl
adc
shlb
cmp
push
add
pop
adc
sub
jge
lahf
out
inc
sbb
ljmp
jg
movsb
lret
scas
add
mov
arpl
test
and
inc
cli
loopne
sub
fldt
cmp
divl
mov
mov
push
lods
or
mov
rorb
cld
aam
xchg
mov
hlt
lcall
ljmp
sub
mov
mov
push
cli
cmp
jg
xor
arpl
icebp
jle
mov
lods
jnp
pop
popa
dec
lcall
sbb
xor
dec
pop
cmpsl
test
or
mov
mov
jle
lahf
and
rcr
ljmp
jle
lods
fdivrl
add
xchg
pop
out
call
rcrb
sbb
pop
mov
cmp
inc
loopne
dec
jb
out
xor
test
xchg
sub
ds
iret
mov
sub
imul
notb
icebp
and
cmp
push
testl
mov
dec
sbb
jl
mov
and
test
clc
test
push
xchg
aaa
das
mov
arpl
pop
jno
sub
jle
loopne
icebp
push
pop
shlb
popf
dec
shll
xchg
rol
xchg
xchg
in
dec
jnp
pop
outsl
aas
lds
cmp
cmpsl
out
jg
mov
fisubrs
push
sbbb
sub
out
push
xchg
fs
jb
jb
push
or
mov
mov
into
stc
popa
std
mov
push
push
mov
mov
mov
out
dec
adc
add
scas
daa
shll
or
push
mov
sub
ficoml
sub
out
or
xor
imul
dec
enter
xchg
pop
add
in
icebp
mov
jo
sahf
adc
xor
rol
arpl
push
aad
add
out
lahf
push
inc
test
push
icebp
xlat
dec
pusha
jno
fisubs
mov
xor
mov
pop
mov
jnp
repnz
fildll
lea
ss
inc
dec
stc
lea
add
adc
xchg
bndldx
les
test
xchg
imul
pop
push
ljmp
jnp
lret
xchg
inc
sub
sbb
nop
shlb
mov
jbe
loopne
add
lods
jne
gs
scas
int
into
jle
jp
mov
enter
push
xlat
and
dec
sbb
xor
insl
or
dec
mov
xor
mov
lea
es
test
sub
push
add
jmp
jecxz
or
negl
pushf
pop
fimuls
vmovdqa
cmp
stc
mov
jne
shll
mov
adc
adc
and
sti
cmp
inc
roll
clc
ja
inc
std
jnp
fldcw
mov
mov
sub
xor
repnz
scas
into
pop
inc
mov
loope
add
repz
in
cmpsb
mov
andb
leave
jb
mov
push
lahf
and
inc
call
cltd
push
out
mov
sub
adc
ljmp
mov
enter
int
jne
xor
lea
mov
dec
pop
sub
jbe
and
mov
mov
xchg
mov
pop
cmp
mov
lock
out
iret
jns
cmp
jp
dec
aas
jo
inc
insb
mov
pop
pushf
xchg
inc
into
icebp
sahf
sub
sbb
xor
daa
and
xchg
sub
in
ja
inc
stos
ret
xchg
enter
rolb
pusha
ret
std
fdivrl
sub
mov
cmc
or
js
adc
and
fistpl
clc
sti
movsl
sbb
int
movsl
sub
mov
sbb
into
mov
fcmove
cld
jnp
add
mov
mov
jmp
shlb
sahf
inc
inc
scas
stos
sti
movb
pusha
push
dec
sub
frstor
dec
lods
shll
cmp
mov
test
lock
xchg
jnp
jge
jne
mov
orl
adc
add
jl
pusha
loop
adc
out
mov
imul
scas
jae
jge
add
rcrb
clc
repz
fs
insl
js
out
inc
xchg
fisubs
scas
sbb
mov
jmp
or
lods
mov
pop
idivb
in
dec
loop
cltd
cmp
sub
sbb
adc
xchg
and
fwait
xchg
scas
in
xchg
pop
pop
in
push
es
push
pop
les
dec
scas
xchg
popf
cmp
jl
mov
sbb
jb
add
ja
lods
jecxz
rclb
in
and
mov
pop
mov
dec
fisubl
sub
pop
imul
push
mov
gs
mov
adc
xchg
subb
sti
ja
mov
mov
ja
les
out
int3
fmul
test
test
in
test
jnp
iret
add
repz
jbe
inc
mov
jge
mov
lock
cmc
pop
dec
xor
arpl
push
pop
imul
leave
lock
mov
xchg
mov
xlat
and
jbe
jae
mov
shll
mov
cld
arpl
and
es
or
push
mov
clc
lcall
and
xchg
mov
or
repnz
cmp
pmaxsw
shrl
xchg
inc
jns
sbb
push
jo
jno
scas
mov
fsts
lods
adc
xchg
pop
xlat
ror
or
jne
sub
adc
adc
sub
sub
adc
nop
mov
cmp
inc
sub
lcall
frstor
imul
ret
imul
lcall
cli
xchg
cmp
leave
pusha
loopne,pn
rol
ljmp
dec
sbb
cmp
xchg
pop
addl
xchg
int
enter
or
cs
and
pop
jp
push
pop
es
test
xlat
movsl
stos
sbb
jl
cmp
fadds
pop
sbb
mov
jb
xlat
mov
aas
nop
mov
push
lcall
rcl
mov
or
push
dec
sub
pushf
jb
loope
shl
mov
add
hlt
int3
jg
arpl
repz
dec
pop
mov
les
cmpsl
cmp
fistps
push
aam
adc
push
push
pop
push
mov
mov
and
inc
mov
and
cltd
cmp
inc
mov
dec
inc
popf
cmc
repz
call
ja
jb
mov
xor
rcll
fsts
ret
addr16
cs
cmc
pop
mov
lahf
in
xchg
xorl
pop
sbb
or
jae
icebp
and
int
call
js
xchg
xchg
fwait
pop
shlb
lods
out
bound
nop
lahf
cmp
lahf
xchg
xchg
mov
sub
mov
daa
mov
fisttpl
arpl
mov
call
cltd
setno
pop
mov
cmc
cmc
jo
or
inc
sub
cwtl
clc
inc
rclb
in
and
xor
stc
dec
push
and
xor
pop
mov
fwait
pushf
add
push
je
out
or
cwtl
pushf
dec
sub
testb
test
pop
stc
dec
movsl
pop
out
cmp
cmpsl
mov
pop
dec
mov
fucompp
mov
test
cmp
sub
push
rorl
popf
lahf
mov
dec
xor
stos
test
xchg
into
in
je
sub
mov
std
lods
adc
inc
sub
dec
adc
sub
xchg
gs
cmpsl
sahf
inc
mov
in
or
mov
imul
lods
sub
or
pop
or
pushf
xchg
sbb
pop
imul
mov
in
jo
int
pop
push
lcall
cmp
mov
imul
leave
or
dec
xor
cmp
gs
cltd
imul
int3
addl
addl
pop
outsb
popa
arpl
mov
xor
jg
sbb
dec
cmp
lds
sub
cmpsl
xchg
or
push
lahf
data16
mov
aad
cmp
stos
addb
jge
dec
mov
lods
mov
fsubrl
sub
push
nop
test
fnstsw
pop
or
aaa
cld
in
nop
mov
loopne
lret
dec
push
cmp
xchg
inc
cmp
outsl
lret
dec
pop
imul
or
inc
fdivl
cli
cmp
addr16
and
into
decl
shrb
movb
add
int3
test
shlb
cmp
xlat
mov
stos
dec
test
and
cmp
dec
insl
lret
inc
mov
mov
jecxz
sub
mov
cmp
sti
mov
xchg
dec
in
inc
adc
test
ret
mov
and
nop
pushf
dec
sbb
lret
mov
inc
and
outsb
mov
insl
mov
mov
xchg
cmpsl
xor
mov
adc
nop
jecxz
and
stos
xchg
lods
jae
sarb
fisubs
int3
cmpsl
enter
jne
cmp
fsubrl
fxch
inc
repnz
or
and
inc
sub
xor
cmp
ljmp
xorl
rclb
ret
call
leave
inc
ret
jns
adc
aam
hlt
pop
xchg
iret
push
int
sub
jnp
lcall
push
arpl
sub
sub
cli
or
cwtl
or
gs
in
inc
push
mov
push
mov
cld
dec
je
daa
scas
mov
cvttps2pi
or
imul
cltd
xchg
rcl
fstps
pop
and
push
test
flds
jmp
inc
out
pop
outsb
scas
xchg
sub
pop
sbb
pop
scas
insl
sub
adc
push
xchg
mov
dec
and
mov
inc
sbb
addr16
pop
ja
jmp
xchg
std
loopne
ss
pop
arpl
testl
stos
fmul
lret
inc
jmp
push
mov
or
fwait
pop
mov
sbb
int3
or
cwtl
mov
inc
movsl
xchg
sti
imull
mov
xchg
or
add
fsubr
add
dec
cmpsb
sbb
aam
add
and
clc
pop
lea
inc
popa
insb
xchg
in
pop
clc
aam
rorb
push
dec
mov
xchg
gs
sbb
call
cwtl
jecxz
cmpb
pop
std
sbb
ja
arpl
mov
nop
pop
push
les
sub
add
adc
movsb
pop
mov
mov
xchg
jecxz
mov
outsl
sbb
adc
sbb
and
jecxz
stc
xchg
jmp
add
xor
mov
add
dec
xchg
xchg
scas
or
jne
pop
pop
xchg
jmp
imul
popf
push
jno
mov
out
bound
sbb
or
sbb
aad
out
sbb
push
xchg
popa
push
xchg
or
lret
mov
gs
or
inc
jo
fmuls
mov
and
jne
push
out
and
xor
ds
mov
insb
mov
repz
push
push
nop
out
ds
aad
add
mov
ret
in
lock
add
orl
imul
fstl
push
pop
push
stc
rclb
xor
icebp
daa
mov
and
iret
pop
mov
rcll
pop
cmp
jge
and
pop
bound
push
pop
stos
adc
mov
imul
jne
or
lret
mov
push
dec
sub
dec
leave
jge
inc
mov
cmovne
xchg
add
test
xchg
xchg
xor
jne
sub
es
xor
xor
popf
imul
ja
mov
cs
and
lea
jmp
imul
sahf
xlat
and
inc
out
in
cwtl
fildl
dec
xor
out
mov
or
fsubrs
adc
mov
lock
or
sub
out
icebp
add
push
dec
fcomp
mov
cmp
int3
jle
movsl
ljmp
out
sahf
jno
bound
lcall
repz
xlat
sbb
push
mov
or
lea
nop
xchg
enter
fcmovu
sub
imul
das
sti
cmp
pop
sub
in
mov
aam
scas
enter
mov
push
xor
and
icebp
push
icebp
iret
scas
inc
inc
jno
jae
xor
dec
popa
jle
push
adc
in
imul
mov
popa
stc
adc
adc
push
imul
fistl
int
pop
idiv
movsb
loop
sbb
popf
test
insb
jge
inc
ficomps
xor
repnz
xchg
and
lea
and
xchg
push
sub
adc
mov
add
ljmp
cld
call
movsl
ret
into
ret
xlat
add
pop
and
nop
fnstsw
nop
cmp
test
and
insb
out
movsl
es
push
push
dec
pop
ret
cli
enter
cmp
jle
mov
cwtl
int
jne
test
bnd
push
lods
push
arpl
push
xor
mov
adc
imul
xorb
jmp
pop
jg
xchg
aam
cmp
clc
sbb
stos
in
sbb
mov
mov
fwait
pop
ficoms
lock
fs
dec
pushf
push
pop
push
pop
lret
verr
add
sub
call
add
xchg
mov
jp
inc
sarb
xor
movsb
or
cmp
cmpsl
push
nop
fsubrs
nop
loope
pop
cmpsb
sub
mov
das
fnstcw
push
dec
lds
pop
adc
enter
inc
push
outsl
jecxz
in
cwtl
insl
xor
mov
popa
stos
cmpsl
add
bound
por
scas
out
push
jno
fwait
adc
stc
out
shll
cmp
ljmp
mov
adc
jl
xor
push
mov
xchg
cmp
movsl
cmp
pop
push
scas
sub
lea
dec
ror
cmp
aad
mov
cmpsb
sti
or
pop
adc
rorl
das
mov
cmp
inc
repz
loop
add
dec
aam
shrl
xor
mov
aas
sahf
lahf
out
cmp
enter
xlat
hlt
and
mov
cltd
lahf
inc
shl
xlat
adcb
sub
fs
jns
sarb
lcall
cmp
mov
sub
add
fidivs
adc
test
jno
movsl
loope
jbe
jp
rcrb
ljmp
mov
dec
xor
mov
test
decl
scas
insl
sbb
xor
aam
ja
mov
push
js
inc
jg
xchg
or
push
sbb
jle
add
mov
xor
dec
mov
sbb
call
arpl
and
gs
mov
shlb
pop
pop
jns
test
dec
lods
ret
pop
pop
add
xor
dec
in
mov
jo
or
mov
mov
or
in
add
jge
pop
cmpsl
inc
jmp
loop
mov
push
pop
lods
rcr
negb
leave
dec
enter
xlat
ret
push
cmp
sub
shlb
les
lds
imul
mov
sub
and
test
push
ficoml
xlat
mov
dec
mov
lods
imul
pusha
mov
ret
test
jo
mov
bound
clc
inc
subb
cwtl
cwtl
sbbb
pop
enter
push
jecxz
mov
les
mov
xor
sbb
mov
add
ffree
popa
aaa
enter
scas
xchg
push
into
xchg
or
and
cmpsl
js
adc
jecxz
and
mov
popa
ficoml
push
enter
mov
into
and
add
and
mov
fisubrs
sbb
ficoms
push
sbb
lods
negl
pop
adc
jmp
mov
pop
cmpsl
xor
cmp
add
xchg
fwait
dec
push
aam
cltd
adc
push
mull
or
push
xor
fcoml
loopne
addb
fwait
adcl
push
test
enter
shl
cmp
and
loopne
es
or
pop
fdivl
sub
mov
xor
dec
mov
testb
sbb
jle
shlb
in
push
fstpt
loop,pn
push
mov
xchg
mov
cmp
pop
push
jo
or
test
lods
cmp
xchg
and
push
sbb
cmp
les
pop
push
dec
mov
fstp
jno
pop
sbb
pop
icebp
arpl
lret
insl
hlt
hlt
and
cmp
or
xchg
xor
lahf
and
mov
in
mov
jnp
dec
add
xlat
imul
insb
lahf
inc
jmp
mov
mov
mov
fdivrl
dec
jle
cmpsb
cmpsb
cwtl
and
cmp
sub
xor
dec
mov
subb
test
sub
sbb
xchg
clc
xor
pusha
mov
in
lock
push
ss
mov
and
jbe
arpl
mov
movsb
fnstenv
lret
lock
push
cmc
or
movsb
dec
dec
das
ficoml
loope
inc
sbb
jb
xchg
rcl
inc
fcomps
mov
push
pushf
dec
aam
fsubs
xchg
adc
sub
pop
mov
jle
cmc
out
ds
ja
insl
mov
aas
cmp
mov
rclb
dec
stos
aad
ds
xchg
cltd
or
lret
jmp
inc
cmp
push
call
dec
xor
divl
fs
rolb
push
mov
pusha
inc
add
daa
sbb
jl
scas
hlt
jp
inc
sti
scas
inc
pushf
ss
pop
lods
test
pop
xor
fs
mov
mov
les
jmp
sbb
and
ret
pop
inc
das
sbb
sbb
pop
sbb
stos
lods
mov
add
sub
cs
popa
aaa
popf
add
shll
sbb
adc
jbe
jecxz
hlt
insl
mov
jae
aaa
lcall
add
out
ficoml
mov
cmpsb
repnz
mov
pop
sahf
aad
inc
dec
xchg
mov
test
stc
in
sbb
or
enter
test
sbb
cmp
shlb
mov
cmp
ret
sub
and
cmpsb
out
int
sub
fnsave
or
mov
adc
clc
enter
loopne
sti
add
dec
out
loop
ret
sub
aas
rol
or
outsl
es
dec
fdivr
int3
negl
test
add
sar
mov
mov
in
lcall
mov
dec
jge
mov
iret
inc
ret
xor
mov
scas
mov
jg
cmpl
mov
or
add
xchg
mov
mov
cld
rol
ss
out
fldenv
idivb
lock
jmp
jmp
sbb
jbe
lcall
pusha
and
mov
into
lock
imul
outsb
adc
mov
or
icebp
fstpl
add
sti
arpl
sub
dec
mov
dec
mov
mov
es
and
pop
aad
push
repz
pop
add
imul
jnp
pushw
or
mov
mov
xchg
mov
jecxz
pop
cmpsb
sub
sbb
push
pop
sub
xor
push
dec
rdmsr
mov
addr16
cmp
aas
lahf
xchg
push
xor
lods
jecxz
loope
dec
dec
clc
aaa
sub
sbbl
lret
mov
cmpsb
flds
push
mov
mov
push
imul
push
popa
insb
int
xchg
push
pop
xlat
dec
sbb
push
mov
dec
lcall
mov
add
into
mov
test
xchg
jns
jl
lcall
mov
lcall
into
and
push
cmpsl
push
repnz
xchg
stc
incb
stos
aad
cmp
mov
jo
jle
js
rorb
fs
jno
ficomps
loop
rorb
scas
test
pop
mov
jo
rcrb
lods
adc
pop
push
jnp
adc
cmpsl
bound
rol
sahf
ret
in
clc
jae
rolb
mov
iret
enter
cmpsl
pop
pop
rolb
shr
in
out
mov
jmp
or
dec
imulb
roll
fmull
sbb
dec
dec
dec
mov
outsl
sub
xchg
fidivrl
or
mov
hlt
in
xor
pop
or
add
xchg
fnstsw
jl
jl
in
pop
jae,pt
pop
loopne
push
push
push
mov
addb
xchg
aad
jp
adc
mov
clc
xor
lds
pop
into
push
cmp
stos
dec
mov
das
leave
sbb
sub
xor
dec
rolb
mov
dec
and
sbb
mov
sbb
aas
loop
test
and
sub
and
push
nop
lock
fcoml
arpl
pop
rcl
gs
ljmp
and
jb
mov
int
aaa
ret
inc
sub
inc
and
sti
push
out
mov
call
push
inc
inc
mov
loope
movsl
scas
pop
insl
fisubs
pop
add
dec
cmpsb
adc
mov
add
pop
ds
push
add
shl
inc
repnz
jmp
or
adc
push
ds
mov
mov
mov
adc
mov
push
outsl
arpl
fs
jl,pt
ds
in
ljmp
lock
mov
mov
and
xor
jb
inc
dec
imul
mov
jbe
pop
inc
sub
insb
in
add
fs
push
mov
gs
or
mov
mov
lret
mov
or
rol
xchg
inc
stos
pop
leave
test
and
sub
xor
out
jne
xchg
sbb
enter
stos
cmpsb
mov
and
dec
cmp
out
nop
dec
xchg
clc
mov
jg
in
pop
sub
enter
or
add
cmp
sbb
cvtpi2ps
test
adc
jge
std
sti
dec
hlt
jne
xor
adc
xchg
inc
jae
and
das
xor
arpl
outsb
das
aad
mov
cmp
dec
push
test
cmpsl
lret
inc
into
push
cmp
mov
inc
mov
jg
in
repnz
data16
adc
loopne
mov
fsubs
mov
rol
push
testl
or
fistl
or
int3
shr
inc
dec
dec
jp
ss
into
stc
dec
pop
in
jb
xchg
cmpsb
arpl
jne
decb
enter
into
sub
xor
je
mov
pop
out
sbb
cli
mov
in
fsubs
loopne
mov
repnz
jle
in
sti
lret
mov
push
lret
push
out
pop
push
popf
ret
fyl2x
sub
dec
cltd
stos
pop
out
adc
xchg
xor
xchg
cmpsl
jmp
and
out
das
xor
xchg
fcompl
xor
imul
dec
addr16
lret
rcl
arpl
aad
in
fstpl
fiaddl
add
pushf
or
mov
data16
dec
or
add
aad
pusha
sbb
enter
mov
xor
add
sbb
jno
jae
hlt
fsubr
pop
sbb
ficoml
cmpsl
ret
sub
inc
add
lods
and
scas
xchg
sbb
mov
mov
int3
cld
jb
cmp
mov
cmpsb
sti
push
test
inc
ret
and
lcall
mov
imulb
faddl
push
or
push
mov
ss
xor
das
mov
and
or
xor
cmp
les
and
das
sbb
jmp
cld
iret
jg
push
das
xchg
push
std
push
xlat
mov
sub
insb
mov
popa
jb
lret
mov
mov
cmpsl
stos
lcall
and
fldt
leave
or
jmp
fs
xchg
inc
sub
sarl
repz
dec
mov
add
lret
rorb
cmpsl
sti
sbb
mov
mov
pop
and
inc
cli
jle
roll
pushf
jnp
addr16
add
mov
jle
pusha
icebp
jle
aad
je
jmp
xor
sbb
xchg
pop
cwtl
stos
xor
lahf
add
add
fsubrs
int3
test
push
dec
sahf
into
push
cmp
dec
shll
into
daa
jg
inc
add
es
inc
jo
and
jne
ret
jae
and
ja
dec
subl
ficomps
sbb
sub
repz
mov
cmp
xchg
push
scas
ljmp
jnp
nop
enter
dec
mov
pop
pop
adc
into
sti
push
sahf
push
push
cltd
adc
inc
cmp
mov
rcr
mov
gs
push
xor
sbb
xchg
nop
das
nop
adc
fisubrs
cmp
mov
mov
fidivrs
inc
sbb
mov
push
xchg
push
test
test
fistps
push
andl
sar
std
xor
dec
fisttps
mov
mov
fwait
or
mov
push
test
mov
and
nop
addb
add
lahf
push
mov
and
inc
adc
add
pop
popf
mov
test
xchg
jmp
cmp
in
or
arpl
inc
mov
jmp
dec
and
mov
inc
jno
add
mov
leave
pushf
loope
addr16
cwtl
fcmove
jb
jp,pt
clc
fmull
mov
fwait
cmp
lret
rorb
inc
loop
mov
sub
or
sbb
cli
pushfw
xor
orl
and
jbe
loopne
mov
mov
sti
mov
andl
adc
popa
sub
mov
cld
test
lcall
jbe
out
pop
test
ljmp
enter
andl
pop
ljmp
lea
imul
leave
test
or
jle
mov
lcall
cmp
push
xorb
scas
shrl
inc
outsb
lret
outsl
scas
cwtl
and
mov
iret
dec
jl
push
jmp
loop
nop
insb
movl
sub
or
xchg
nop
dec
insb
ficompl
or
dec
pop
xor
mov
scas
pop
jl,pt
cmp
jno
and
add
xor
daa
xchg
loope
pop
push
xchg
push
out
lods
cmp
adc
push
mov
sub
in
cmp
jae
jno
es
jno
int3
out
inc
scas
divl
orb
das
mov
nop
bound
cmp
and
pop
out
lods
xor
sub
js
pop
out
enter
jbe
jmp
fdivl
hlt
dec
xchg
cwtl
lcallw
std
push
hlt
cbtw
int3
jmp
js
stos
stc
hlt
sbb
add
fcomps
xchg
scas
dec
rclw
cltd
push
xor
ficoml
fisubrl
xor
cmpsb
lock
addr16
mov
or
add
xor
jne
movsb
push
jp
jg
and
adc
leave
cmp
subl
outsl
bound
push
cmp
cld
scas
lods
inc
cwtl
pop
sub
fsubrp
mov
jo
jmp
mov
shr
or
fcmovb
push
mov
and
jnp
lcall
bound
sub
cmpsb
xchg
jb
mov
jl
mov
movsl
mov
adc
jmp
out
imul
cmp
orb
mov
mov
mov
inc
sbb
stos
pop
jne
lock
pop
scas
sub
add
xchg
inc
out
lret
push
dec
sub
movsb
and
cmp
je
mov
dec
cmp
rorb
xor
push
ret
std
ror
repnz
cmpl
fbstp
ljmp
pop
pushl
pop
stos
outsl
sbb
gs
pushf
and
sub
mov
dec
push
test
mov
test
mov
pop
loopne
test
jns
add
push
repnz
lret
xchg
vmread
inc
sbb
stos
push
fbstp
inc
add
xchg
mov
pushf
addr16
hlt
test
add
sbb
cmp
cmp
popf
test
adc
inc
cmp
cmp
push
sti
ss
jle,pn
xchg
leave
sahf
add
sub
dec
push
mov
mov
mov
das
cmp
lds
adc
add
and
mov
add
outsl
ja
mov
push
add
xor
ja
add
inc
adc
cmp
xor
insl
std
aam
imul
and
xchg
mov
test
sub
dec
jmp
xor
imul
inc
hlt
aam
das
add
mov
ja
test
cld
shll
out
add
fists
cmp
sub
test
sbb
mov
das
sub
dec
es
lret
xor
xor
repnz
pop
mov
std
ret
inc
push
and
xlat
pushl
jl
xorl
jle
push
nop
bound
in
mov
dec
cld
inc
into
cmc
mov
mov
dec
or
pop
lods
push
pushf
test
hlt
insb
add
unpckhps
fs
rorl
fadd
pop
insl
or
int3
adc
fadd
cmp
sub
ja
inc
lock
or
fs
iret
out
push
sub
add
jp
inc
mov
adcb
aaa
mov
and
ret
ret
xchg
pop
xor
sahf
push
stos
cmc
fisubrs
test
daa
rorb
or
inc
and
cwtl
and
rcrb
and
dec
inc
xor
mov
testb
nop
sbb
in
inc
lret
cmp
in
xchg
scas
sbb
nop
xchg
rclb
mov
fs
mov
ret
sbb
xchg
sbb
xor
xchg
inc
mov
into
lcall
jge
jmp
mov
pop
adc
push
movsl
adc
scas
mov
dec
or
scas
sarl
adc
sahf
dec
addr16
aad
insl
inc
mov
fstpl
cmp
xor
add
pop
mov
jb
jle
lret
rcr
push
popf
push
out
pusha
dec
sub
in
cmp
js
out
pop
in
cmp
sbb
lock
add
xor
leave
sub
out
lcall
mov
pop
xor
sti
cmp
inc
lahf
pop
insl
mov
jbe
sub
push
xor
out
je
stos
pop
xor
mov
mov
push
movsb
lods
push
cltd
cli
sub
jnp
mov
add
adc
push
push
jecxz
fwait
outsl
dec
in
sarb
sub
inc
inc
cld
pusha
mov
jns
dec
arpl
ja
addr16
sbb
pop
cs
lods
ret
xor
jo
xor
out
xchg
dec
dec
in
xchg
fscale
lahf
sti
dec
or
aas
mov
sub
enter
mov
xchg
hlt
bound
icebp
pop
mov
loope
shrl
mov
gs
pop
cmpsb
lea
int3
std
popa
fcomp
js
gs
ret
add
addr16
test
in
mov
inc
test
clc
push
enter
bound
add
lret
lods
jae
push
std
jne
nop
jbe
or
jmp
fidivs
push
mov
jb
arpl
mov
addl
imul
testb
dec
call
subb
mov
xchg
sub
in
adc
jbe
or
adc
pop
xlat
inc
push
adc
or
data16
test
xor
iret
mov
lea
in
jle
lahf
pop
addb
and
mov
xchg
out
outsb
arpl
notl
fnsave
dec
arpl
rcrl
pop
or
cmp
cmpsl
scas
push
dec
shll
jo
jae
dec
mov
jg
loopne
mov
pop
jecxz
and
lahf
mov
jne
enter
jge
scas
jg
hlt
xchg
mov
dec
inc
ficomps
dec
xorl
frstor
fsts
add
xor
and
stc
dec
ret
pop
popl
dec
mov
xchg
test
jmp
fildl
push
mov
sbb
ds
adc
pop
push
dec
cmpl
pop
insl
adc
jno
popa
mov
iret
xchg
lahf
mov
sub
cmpsl
das
dec
ret
mov
movsb
jg
cmp
adc
push
sub
mov
ljmp
pusha
mov
mov
mov
push
out
int
xchg
lock
mov
popa
dec
push
cmp
pop
mov
imul
bswap
mov
add
inc
jp
xchg
je
loopne
loop
mov
movsb
jns
push
shlb
xchg
mov
imul
inc
sub
dec
adc
pop
sarl
pop
jo
or
hlt
add
sub
jbe
adc
push
fs
std
inc
in
push
aam
jnp
inc
mov
loope
xor
insb
ficoms
or
push
cmp
mov
nop
sbb
call
push
out
push
arpl
sar
test
jbe
xchg
in
mov
es
adc
dec
out
imul
dec
xchg
mov
hlt
mov
sub
lods
stos
jecxz
xor
lahf
lcall
push
loop
inc
push
xlat
lods
sarl
sub
mov
dec
sub
lret
inc
and
or
rorb
repnz
push
add
js
jbe
test
add
into
pop
ss
or
test
outsl
cli
sbb
ret
in
inc
pop
mov
pop
lahf
or
es
adc
xchg
arpl
cmpsb
lea
mov
sbb
dec
pop
push
notl
fcmovnu
push
mov
mov
dec
cs
add
fnstsw
pop
test
mov
in
inc
hlt
fs
or
push
arpl
inc
cmc
jmp
iret
daa
inc
outsl
sti
mov
xor
mov
inc
and
pop
mov
jns
out
jmp
mov
imul
xchg
in
adc
jb
aas
loopne
jmp
add
popa
es
mov
dec
cmpsl
mov
dec
mov
add
sbb
je
pushf
loop
push
xor
pop
adc
sbb
inc
jo
ljmp
cmpsl
adc
and
pop
into
cmp
add
lahf
inc
xchg
jo
mov
popa
call
bound
or
clc
das
add
xor
ret
dec
cmpl
int
inc
push
push
and
dec
orl
jae
xor
cwtl
sbb
push
and
lods
mov
jno
sub
popf
adc
test
xor
popf
fstp
mov
test
adc
lret
mov
jne
xchg
insl
or
out
push
hlt
bound
mov
ja
and
jmp
rcrb
mov
mov
mov
in
inc
es
xchg
fnstsw
cmp
push
repnz
jb
pushl
push
mov
pop
sub
cmp
rcll
jl
ficompl
scas
and
scas
xlat
add
ss
sbb
leave
jno
pop
pop
ljmp
jnp
xor
sub
testl
ret
daa
xor
push
add
sbb
test
mov
jno
sub
cmpsb
xchg
out
pop
add
addl
add
cld
clc
add
mov
cmp
xchg
pushw
or
push
fsubrl
pop
std
testl
adcl
clc
ds
popa
sbb
adc
cmp
inc
mov
inc
sub
stos
pop
imul
insl
scas
adc
mov
sub
dec
or
add
ljmp
roll
xor
mov
push
sbb
xchg
adc
xor
call
add
add
fcmovnbe
adc
addr16
mov
xchg
lock
fists
jae
pushf
cmp
sti
inc
mov
sub
arpl
lods
frstor
js
rcll
push
or
jns
xor
cld
sub
mov
stos
push
setge
or
lods
adc
dec
out
xlat
lahf
dec
mov
push
cltd
jne
jle
pop
imul
stos
and
fbld
testl
ret
nop
mov
aas
xor
or
jns
test
sub
or
inc
cmc
and
cmc
mov
dec
push
fwait
lods
subb
adc
ljmp
inc
push
inc
nop
je
xor
pop
in
in
cld
jnp
push
sub
loope
and
inc
int3
rcl
popa
pusha
xor
dec
test
cli
pop
imul
push
xchg
sub
mov
icebp
cs
aad
popf
insl
mov
xor
sub
jmp
std
lret
mov
cmp
xchg
jno
mov
xbegin
jle
loopne
mov
out
push
add
in
ja
adc
bound
fdiv
xchg
into
adc
std
xor
dec
inc
dec
inc
pop
pop
ss
loop
inc
inc
push
mov
fwait
sub
adc
sbb
dec
cmp
rcr
jle
jno
mov
jmp
sbb
jo
cmp
lds
iret
cmc
ror
mov
shrl
lret
xchg
sbb
mov
mov
push
add
outsb
sbb
jmp
mov
fwait
movsl
repnz
pop
repz
sub
mov
adc
popf
mov
cld
test
or
adc
ja
push
ret
jp
out
jbe
cmpb
mov
test
mov
push
or
xor
add
pop
xchg
lds
into
test
jo
lods
mov
rcrl
gs
push
in
adc
xor
cmp
das
pop
inc
test
dec
xchg
test
insl
scas
mov
cltd
push
dec
aad
or
pop
out
push
mov
clc
cwtl
dec
repz
fisttpl
mov
ficoms
mov
stos
sbb
scas
mov
negb
in
insb
movsl
mov
enter
test
sahf
jp
sbb
filds
sbb
mov
adc
stos
fdiv
sub
cmpsb
jmp
sub
mov
in
lock
in
sahf
out
adc
daa
fiadds
sbb
xchg
or
faddl
sub
movsl
shlb
push
mov
xor
fs
jbe
movsb
push
push
test
test
test
jp
sub
mov
popa
fisubs
jle
adc
cwtl
mov
sub
or
cld
adc
xchg
lods
cmp
lahf
out
addr16
adc
aaa
cmp
das
cmp
icebp
fisubs
mov
xchg
in
imul
bound
out
adcl
xchg
xchg
in
mov
sbb
jg
xchg
int
jne
not
test
fdivp
sub
fwait
mov
test
pop
jno
outsb
jno
dec
repnz
sub
xor
leave
mov
and
sbb
pop
sbb
jmp
sti
mov
add
rcrl
out
aad
pop
jnp
popa
adc
jg
gs
insl
lcall
pop
std
dec
jle
push
adc
loope
in
les
dec
testl
fadd
ret
or
iret
loope
xchg
in
int3
mov
les
sub
mov
je
jmp
push
jl
mov
mov
mov
addr16
lods
dec
gs
push
aaa
negb
adc
add
dec
es
push
jae
outsl
fidivs
jle
lret
repnz
repnz
push
sub
loope
mov
popa
test
inc
jecxz
dec
adc
mov
xor
mov
add
jb
repnz
rcll
outsb
repnz
and
dec
push
sub
add
repz
add
out
int
mov
into
lods
in
out
add
arpl
jl
and
jne
add
and
xchg
pop
cmpb
push
jmp
lods
gs
push
cltd
orb
lcall
push
add
cmp
mov
enter
pushf
rcrl
xchg
and
fisttpll
xchg
stos
lret
movsb
jae
xchg
adc
loope
in
sbb
loopne
add
xchg
mov
mov
stos
iret
daa
add
dec
pop
es
addb
frstor
inc
test
sbb
jp
pusha
jg
pop
mov
or
pop
data16
or
and
sti
and
mov
mov
ja
dec
inc
mov
xchg
xor
mov
imull
push
insl
fs
std
cs
daa
mov
fcoml
adc
mov
movsb
ja
add
out
mov
adc
and
xchg
sub
scas
jae
stc
test
sub
bound
movsb
test
push
lds
sub
adc
mov
jns
add
xchg
xchg
and
lods
cmp
sub
test
jbe
je
pushf
cmp
mov
in
fisubrl
pushf
jno
and
fs
fidivrl
iret
call
shlb
cmp
sub
aam
cwtl
adc
popf
mov
orl
mov
xchg
scas
out
push
push
or
lahf
popa
lods
test
es
sub
hlt
fisttpll
aas
mov
mov
xchg
and
push
lods
push
mov
jnp
rorl
icebp
aas
push
mov
mov
dec
cmp
mov
dec
push
mov
orl
lods
cmpsb
add
add
outsb
mov
lods
cmp
mull
fistpl
or
or
int
andb
sbb
push
ja
ss
jb
andb
nop
cmp
jns
inc
dec
js
push
aam
hlt
push
in
sti
mov
notb
cltd
cmp
push
stos
into
sbb
inc
mov
pop
mov
and
cli
jns
in
mov
loopne
je
and
int3
mov
add
in
xlat
mov
shl
sarb
lds
mov
cmp
daa
hlt
sbb
cmp
cmp
push
gs
adc
dec
xor
loope
sub
stos
icebp
cmp
mov
cwtl
test
dec
xorb
push
push
add
leave
lock
mov
rcrl
lock
popf
sub
mov
int3
cmp
sbb
ret
dec
out
iret
das
adc
fcmovu
xchg
add
or
out
lret
mov
jbe
aas
jbe
and
adcb
stos
and
adc
adc
pop
xchg
mov
call
das
lahf
cmc
mov
mov
push
jnp
add
sub
sub
scas
dec
push
stc
or
into
inc
cmp
out
jmp
xchg
mov
ficompl
icebp
outsl
lret
dec
lods
dec
fsts
lods
cmc
or
and
mov
pushf
andb
xchg
je
cs
inc
mov
and
loop
cltd
pusha
fidivrl
dec
dec
repz
cld
shll
pop
sti
lds
or
loope
mov
int3
loop
test
fmul
lret
out
push
and
faddp
filds
test
mov
lock
bound
loopne
xchg
arpl
mov
jmp
stos
in
out
movsl
lret
mov
mov
inc
loopne
or
mov
arpl
fsubrs
or
mov
add
std
push
inc
les
or
lea
test
je
pushf
jmp
or
mov
xor
jmp
in
add
sbb
hlt
mov
stos
mov
fdivl
cli
pop
icebp
fildll
lcall
pop
mov
sahf
dec
inc
sub
ja
jp
or
fimuls
dec
movsl
fildll
int
pop
mov
stos
mov
mov
imul
dec
test
xchg
cmp
ret
iret
fbstp
sub
and
in
xchg
inc
push
mov
icebp
xchg
inc
inc
or
sub
or
adc
push
cld
lods
lea
inc
incl
mov
jno
gs
addl
hlt
sub
pop
aad
jp
sub
arpl
dec
imul
movsb
cmp
adc
imul
add
cmc
clc
inc
lods
test
jge
mov
addr16
inc
inc
jb
inc
das
cmp
shrb
push
enter
push
popa
jb
mov
inc
xor
lret
pop
adc
lea
jle
test
adc
pushf
add
inc
scas
rolb
mov
or
push
mov
sub
xchg
push
mov
mov
fisttpll
int3
push
icebp
cmp
imul
or
lret
mov
mov
xor
cmp
xor
mov
lahf
mov
mov
sarl
fistpl
or
xchg
add
in
ja
sub
rorl
mov
lods
push
cmpsl
je
sub
or
scas
cmp
mov
mov
out
push
scas
xchg
or
mov
or
jg
xchg
stc
xchg
std
adc
pushf
fwait
mov
sub
test
lret
imul
pop
xchg
xor
xor
mov
mov
test
mov
inc
sub
inc
and
dec
add
aam
inc
fistl
fmuls
ljmp
or
add
out
aas
mov
and
ljmp
dec
and
fcomps
and
inc
push
jbe
mov
jge
mov
add
outsb
xor
outsb
dec
in
sub
mov
push
aaa
imul
ror
outsb
pop
xchg
jno
int
and
mov
leave
push
clc
int3
mov
gs
lock
ret
pop
adc
jno
sub
lcall
jmp
fwait
lock
mov
insb
xchg
and
mov
enter
outsl
mov
js
pop
sbb
pop
or
inc
sub
insb
fdivrl
sbb
sub
xlat
negb
xchg
xchg
std
sbb
jno
popa
inc
add
dec
in
xor
ss
mov
orb
push
push
js
aas
in
addr16
hlt
pop
lods
adc
in
push
mov
push
fdiv
xchg
and
lret
pop
popa
clc
xor
pop
adc
xchg
dec
test
stos
xchg
xorb
mov
insl
sub
out
or
mov
out
fwait
incl
imul
not
mov
pop
in
xchg
or
cmp
cltd
jg
ds
test
icebp
jmp
pop
pop
out
pushaw
mov
shrb
scas
stc
xchg
int3
aaa
enter
jno
test
cmp
testb
loope
or
xor
insl
pop
cmp
add
adcl
es
mov
mov
mov
and
lahf
shlb
mov
jl
roll
dec
int
or
mov
fwait
pop
inc
push
fnsave
sbb
cld
mov
es
movsb
subl
pusha
and
mov
mov
inc
sarb
xor
pop
mov
mov
pop
inc
rcrl
mov
or
dec
pop
inc
shl
jnp
xchg
dec
fstpl
sub
adc
dec
sbb
mov
ja
jg
push
and
and
or
push
sub
cmp
stos
scas
cmp
pop
sbb
lret
rcrl
fcmovnb
mov
lret
add
shlb
sub
push
pushf
cmp
ret
xchg
in
sub
xchg
jne
xchg
xchg
jb
rorl
pop
fnstenv
mov
loope
ja
pop
push
sub
sub
and
add
or
xchg
mov
pop
cmp
ja
push
xchg
sub
mov
repz
repnz
push
push
adc
mov
pop
pop
cwtl
sbb
add
mov
and
mov
mov
lcall
int3
push
lahf
and
push
mov
mov
sbb
dec
jne
jne
sbb
fldt
dec
bound
mov
mov
jle
pop
rorb
sti
inc
mov
cmpsl
outsl
xchg
pop
push
push
sub
cmp
push
inc
push
jmp
call
push
aaa
push
xchg
iret
gs
mov
les
jg
lret
cmp
loopne
stc
pusha
loope
outsb
mov
cmp
cmp
adcl
icebp
lods
inc
dec
aas
xchg
mov
pop
aaa
jbe
aaa
into
sbb
jb
sbb
lret
sbb
sbb
mov
loop
mov
cmp
test
insb
jno
cmp
popa
popf
in
inc
in
mov
jle
daa
sub
mov
stc
fdivs
pushf
loopne
cmp
imul
int3
ds
mov
lahf
daa
jo
xor
mov
sbb
push
movsb
cli
testl
jno
mov
xchg
sahf
das
xchg
cld
mov
mov
int
dec
mov
add
and
dec
push
and
xchg
jecxz
imul
scas
scas
mov
cltd
call
pop
jl
orl
add
mov
popa
jb
push
les
xchg
xchg
scas
outsl
or
inc
adc
std
inc
mov
xchg
and
pushf
jns
inc
dec
pop
mov
push
or
mov
sbb
and
movsl
xrelease
fidivl
loopne
cmpl
iret
sbb
or
or
adc
pop
jmp
xchg
and
xor
movsb
adc
fimuls
mov
dec
sub
popa
cs
push
sub
out
add
lea
and
inc
dec
cmp
lods
test
cmp
iret
scas
xor
sub
xchg
jg
dec
xchg
and
fiaddl
jb
mov
pop
ja
clc
lea
cmp
xchg
add
mov
xchg
int3
pop
and
jp
bound
push
das
inc
or
cmpsb
push
mov
ret
cmpsb
mov
es
sub
or
pop
mov
dec
cli
scas
adc
mov
push
push
push
xchg
mov
mov
mov
adc
fs
stos
xchg
sub
fisttpl
inc
pusha
shrl
lahf
push
mov
sbb
std
inc
mov
jmp
call
repz
cmp
lds
cmp
inc
sbb
dec
fisubs
mov
and
pop
xor
xor
dec
lea
xor
push
mov
add
pop
mov
lret
lock
out
jno
fwait
mov
lds
shrl
lcall
outsl
pop
sti
stos
fidivrs
dec
sub
data16
sub
int
pusha
push
cs
mov
sbb
or
inc
mov
mov
sbb
inc
mov
pop
outsb
adc
or
or
xchg
ljmp
xchg
adc
loopne
or
jo
test
or
adc
inc
cmc
ja
xchg
lcall
fidivs
mul
xor
xor
pop
add
jns
and
mov
hlt
bound
sarb
addr16
arpl
adc
push
push
and
movsl
or
inc
in
mov
std
sti
push
int
loop
adc
stos
rolb
sub
lods
cmp
fstp
cmp
out
paddd
dec
or
jbe
divl
repnz
adcl
mov
add
xor
cld
push
or
jo
rorb
imul
push
addr16
mov
xchg
repnz
out
sbb
aad
insb
shl
out
jne
shrb
ds
loope
dec
push
xchg
test
test
cwtl
scas
mov
fsubrp
mov
es
dec
and
or
mov
xchg
xor
cmc
repnz
fdivrl
sub
sub
sbb
jne
sub
inc
xchg
sbb
pusha
movsl
popa
mov
adc
jnp
repnz
inc
inc
xlat
out
pop
and
sti
outsb
popf
in
jge
and
push
sub
mov
xchg
mov
and
mov
fadds
cmpb
cmp
fsubr
in
popa
aaa
add
push
push
push
imul
sub
fs
push
or
mov
cmp
jmp
mov
xchg
jbe
stc
sub
cmp
xchg
mov
mov
add
dec
xchg
addb
lods
sbb
cltd
cwtl
inc
pop
scas
cmp
js
mov
movsb
jno
scas
cld
cmc
mov
lret
push
jp
jne
into
dec
out
outsb
leave
mov
dec
sbb
adc
imul
add
fcomps
jnp
xchg
jbe
ret
cmp
fldt
sbb
test
stc
ja
sub
push
testl
pop
xchg
dec
push
jg
iret
je
xchg
add
jb
pop
test
mov
loop
pop
pop
loopne
add
dec
imul
fiaddl
cltd
lds
cmp
add
daa
orb
cmc
enter
in
jmp
cld
push
cmp
aam
daa
fwait
pusha
xor
sbb
jo
xchg
cltd
adc
mov
cmp
or
xchg
sbb
mov
outsb
popf
dec
sub
pop
dec
ljmp
cmp
out
icebp
mov
push
in
mov
mov
adc
dec
pusha
and
xchg
mov
fsubp
pushf
push
popl
fisubl
shll
inc
or
xor
xchg
push
mov
rol
lods
test
bound
test
cli
sti
or
cwtl
mov
rcrb
jg
add
leave
loope
int3
dec
pop
push
stc
sahf
ja
lock
mov
outsl
mov
mov
jmp
hlt
outsl
mov
ret
add
jecxz
in
mov
test
aas
mov
dec
bound
addr16
js
mov
incl
sub
movsb
popf
cmp
nop
lea
es
std
xlat
push
in
sbb
cmp
lods
in
mov
mov
jae
push
sahf
cmp
cmp
mov
adc
es
cmpsb
out
cmp
mov
add
int3
in
mov
jecxz
push
rorl
cli
stc
inc
loope
mov
repnz
test
cmp
popf
xchg
roll
iret
jmp
pop
mov
xor
push
fsubrl
xchg
mov
jp
dec
dec
movb
adc
sub
adc
fimull
arpl
mov
sub
test
sbb
mov
out
inc
lcall
add
fadds
lock
daa
neg
inc
or
data16
xchg
adc
push
in
fimull
xor
clc
adc
inc
in
xchg
pop
inc
sbb
js
aas
adc
xchg
push
push
and
cwtl
sub
jne
outsl
andb
mov
mov
xlat
adc
dec
dec
xor
xchg
fs
push
add
adc
or
or
mov
outsl
pop
in
cmp
jnp
jp
jge
push
aad
add
xchg
sub
orb
nop
sti
sub
ficoms
mov
insb
inc
pop
inc
clc
sahf
mov
xor
push
and
cmc
jbe
jle
xor
test
repz
subb
mov
divl
jge
mov
mov
dec
pop
aam
pushf
fs
out
cmpsl
into
xchg
test
ds
jmp
scas
mov
mov
loop
jo
sti
xor
cld
jnp
test
stos
lret
jbe
mov
cli
call
xor
imul
mov
push
jl
fs
sub
pop
sahf
dec
dec
xchg
inc
sub
mov
jg
mov
pop
pop
arpl
dec
clc
popa
pop
adcl
mov
add
mov
das
xor
notl
cmp
jecxz
sti
or
loop
test
scas
std
xor
insb
mov
push
out
gs
lds
lea
adc
iret
mov
sar
mov
cld
imul
mov
mov
fldenv
lret
enter
xchg
jo
les
xlat
imul
add
push
test
out
outsl
imul
popf
inc
mov
outsb
fidivrs
shlb
pop
stc
mov
lret
das
loop
or
ss
cmp
ss
sbb
push
into
jnp
dec
xor
adc
adc
adc
cwtl
pop
and
xor
loop
sub
fmull
ret
mov
sub
mov
sbb
sub
mov
addl
xchg
jae
std
and
lock
mov
jae
and
lods
cmp
loope
lds
loop
push
sub
lret
pop
cmc
insb
test
and
andl
insb
lea
add
dec
loop
cmp
cmp
data16
icebp
repz
push
push
scas
lock
repz
jns
scas
adc
data16
loop
insl
mov
fs
xlat
and
hlt
sub
hlt
fldt
clc
push
stc
push
imul
or
push
shll
adc
xor
ja
dec
adc
mov
mov
mov
enter
lods
sbb
cmp
inc
cli
aam
jns
movsl
andl
mov
sbb
imul
pop
sub
stos
or
aad
lahf
int3
addr16
cmpl
std
adc
cmpsb
es
aaa
and
jae
sbb
xor
mov
inc
adc
push
and
dec
jae
int3
cltd
push
sub
test
ja
inc
xor
repnz
jae
mov
push
mov
pop
or
repz
repnz
push
fistpll
mov
movb
js
addr16
shl
adc
adc
test
sahf
pop
mov
jo
arpl
icebp
fcmovnb
add
dec
adc
in
pusha
jl
jmp
mov
mov
test
add
aas
and
mov
je
or
cwtl
mov
pop
aaa
jo
fadd
cs
or
or
xchg
cmp
pop
mov
stos
pop
pop
jbe
mov
mov
sbb
push
xor
movsb
mov
mov
icebp
into
jmp
sub
outsl
xchg
push
nop
addb
and
and
std
pushf
stos
sbb
sbb
lds
jl
push
pop
inc
and
mov
rorb
push
mov
je
push
mov
ja
or
fnstcw
sarl
mov
add
jbe
add
jle
cmpb
xor
fisttpll
je
or
dec
test
or
pusha
dec
pop
xlat
add
xor
dec
aaa
add
push
pop
sbb
xorl
add
jg
arpl
mov
hlt
add
mov
push
sub
test
inc
aam
sub
mov
in
xor
mov
loopne
ret
adc
mov
mov
add
xor
and
test
and
repnz
or
frstor
jne
out
pop
and
scas
inc
lods
mov
popa
cmp
stos
xchg
pop
pop
test
cmpsb
outsl
out
ja
lret
call
mov
stos
cmpb
pop
xchg
and
mov
xchg
add
nop
add
sti
cmp
les
test
fistpl
push
scas
packuswb
sahf
lds
inc
fsin
xchg
jae
xchg
std
xchg
pop
in
cltd
in
cmp
data16
fdivrs
jbe
and
shl
mov
aaa
fistpll
ret
dec
test
mov
pop
cmp
pop
dec
sub
mov
mov
stos
sbb
add
pushf
test
sbb
leave
jg
and
pop
leave
cmp
pop
cld
xlat
inc
mov
inc
inc
ss
std
dec
jecxz
inc
insl
jne
dec
inc
mov
es
cwtl
dec
loope
rcl
aad
xchg
test
push
pushf
dec
xor
hlt
in
mov
xchg
outsl
cmp
arpl
add
mov
xchg
jae
jmp
add
fsubs
out
or
fidivrl
xchg
inc
inc
inc
pop
xor
sbbl
inc
push
push
add
fdivl
pop
jne
xchg
sbb
xchg
insl
jbe
add
fistpl
jo
adc
int3
xchg
xchg
sbb
push
imul
jo
xchg
and
shrb
aad
dec
or
xor
push
push
sub
incl
sub
ljmp
pop
and
sbb
xchg
mov
sub
adc
lahf
fstl
pop
fstp
pusha
xor
add
addl
adc
push
lret
outsl
inc
inc
jns
es
xor
cs
cmpsb
aam
mov
sub
jno
sub
in
shll
mov
sbb
push
mov
sub
mov
cmpsb
sbbb
jg
fmuls
rorl
jl
push
sbb
fistpll
adc
dec
push
cmp
xchg
jnp
xor
pop
fnstcw
mov
iret
fxch
movsl
push
mov
mov
imul
popf
das
mov
mov
sbb
popa
lret
dec
jbe
into
inc
xor
push
push
inc
hlt
mov
and
mov
mov
pop
dec
mov
shll
mov
pop
dec
xchg
daa
mov
cmpsb
out
ja
cltd
jno
xchg
imull
push
ret
jg
cmpsb
es
data16
mov
leave
out
push
negb
push
push
in
mov
xchg
cmp
aaa
or
repz
mov
lock
in
adc
ss
push
lods
dec
lret
xchg
lahf
push
int
cmpsb
mov
mov
shll
ror
ss
mov
xorl
xchg
jb
jno
daa
mov
sti
jmp
movsl
hlt
mov
adc
mov
jg
add
or
loop
icebp
push
adc
sbb
cmp
aad
dec
xchg
test
inc
xchg
cmp
cld
jae
push
sbb
in
cmpsb
movsb
ljmp
and
or
push
loope
gs
cmc
lret
hlt
rolb
ljmp
clc
dec
sti
mov
es
shll
sub
je
pop
jb
clc
ja
adc
fsubs
outsb
adc
mov
cmp
lods
inc
jno
lea
dec
jno
inc
adc
pusha
push
sbb
mov
inc
mov
cmp
lahf
int3
mov
popa
pop
ljmp
mov
fs
enter
or
inc
lahf
stos
pop
xor
mov
lock
in
ds
push
pop
sbb
insl
jns
mov
testl
das
jecxz
pop
lea
push
pop
mov
ss
sub
bound
or
mov
mov
cltd
pop
sbb
adc
aaa
fldl
lea
xchg
jg
xor
leave
mov
sub
fildl
shll
and
test
std
test
mov
cli
insb
ret
mov
dec
fimuls
xchg
mov
mov
push
sub
int3
dec
xor
jmp
cltd
inc
push
lret
xchg
cmpsl
dec
adc
pop
out
inc
int
or
inc
xchg
fstps
sarl
inc
pop
shlb
push
cmp
test
cmpb
jb
js
notb
jecxz
inc
jbe
sbb
lea
mov
test
or
js
sub
or
mov
mov
notb
mov
repnz
jecxz
movsb
outsb
jnp
pop
mov
mov
jo
xor
cmp
outsb
jg
pop
out
bts
cmp
mov
mov
mov
outsb
mov
les
lods
mov
leave
jge
jp
pop
mov
lret
mov
mov
sbb
in
mov
lods
cmp
mov
div
inc
sbb
daa
xor
xchg
xchg
lcall
mov
sarl
or
js
mov
in
popa
rcl
jmp
mov
or
ds
pop
push
dec
push
stc
pusha
cmpb
xchg
xor
add
test
xor
jg
in
xchg
sbb
pop
mov
pusha
sub
dec
mov
push
sbb
imul
add
arpl
push
pop
stos
or
mov
test
fdivrp
jl
popf
repz
call
fucom
in
cld
push
jbe
adc
jecxz
sub
repz
popa
sti
and
push
jp
movswl
fwait
pshufw
ss
sbbb
jne
je
jmp
sub
or
out
and
mov
dec
sub
sahf
les
xchg
cld
dec
enter
outsb
xor
cmp
cld
cli
mov
adc
loop
lret
lahf
push
push
mov
ss
mov
dec
mov
lea
or
pop
inc
pop
jle
adc
test
outsb
lcall
cmpsb
mov
movsl
pop
cmc
sub
test
les
out
jbe
push
mov
aad
shl
add
data16
mov
stos
dec
cmp
dec
cmpsb
xchg
and
xchg
scas
outsl
sub
xor
xlat
int3
ret
mov
sub
adc
scas
add
xchg
pop
inc
rcrb
and
sub
push
aas
add
cmp
jge
dec
scas
test
push
sub
inc
adc
out
or
decb
inc
sbb
push
jg
pop
push
cmc
test
scas
cmp
mov
pushf
cld
add
mul
inc
inc
sub
insl
lock
sbb
mov
std
jbe
jmp
mov
pop
in
jge
xor
or
xchg
orb
ret
out
xor
push
je
add
dec
or
or
cmp
leave
jecxz
shll
lret
jns
jmp
into
cmp
enter
push
or
notb
xchg
mov
xchg
cmpsb
or
or
les
mov
test
bnd
xor
fisttpl
jno
add
mov
je
pop
add
fwait
pushf
ss
clc
or
ss
inc
sub
mov
iret
rorl
mov
stos
cmp
add
inc
pop
popa
roll
repz
popl
jle
xor
pop
lret
jae
sub
jge
leave
dec
xchg
cmp
idiv
and
dec
and
mov
popa
cmc
adc
mov
push
xor
imul
pop
pop
push
add
mov
lahf
subl
or
sub
inc
pop
push
dec
sahf
rcll
icebp
inc
les
out
xor
jge
pop
loopne
cmpb
cmp
mov
jns
and
mov
xchg
push
sbb
jbe
outsb
or
pop
cmc
sbb
fstpl
mov
dec
rolb
or
shlb
adc
in
aad
dec
std
mov
cmp
popa
stos
ret
mov
xchg
push
ds
adc
cmp
sahf
mov
xor
pop
test
shrb
jle
xor
mov
jb
dec
or
or
xchg
push
fs
pop
adc
lret
jo
inc
aas
test
push
mov
mov
aad
cmc
pop
jb
sbb
fstpl
cld
mov
sbb
and
xor
packssdw
inc
rorb
cmpsl
lret
outsl
test
inc
push
pusha
into
out
cli
outsb
test
adc
call
test
mov
and
ds
movsl
pop
in
aam
xchg
lock
outsb
movsb
loope
push
stos
iret
mov
dec
push
mov
stos
jmp
mov
push
push
sti
mov
mov
call
pop
imul
inc
add
xor
sarb
push
inc
or
sub
cli
insl
gs
jno
xchg
inc
or
mov
imul
out
mov
ror
data16
cwtl
adc
dec
popl
push
loopne
sub
xchg
das
cmpsl
push
popf
sub
out
pushf
cmp
xor
in
arpl
testb
push
mov
dec
repz
jb
lret
stos
sub
push
adc
movb
rcrb
cmp
jmp
sti
fninit
ljmp
fs
stos
cld
inc
push
out
cmp
loop
scas
mov
add
pop
push
xor
push
xchg
xchg
scas
cmpsb
cld
xor
cld
cltd
cmp
adc
lahf
inc
xchg
jb
das
inc
inc
xchg
mov
adc
mov
xor
daa
adc
scas
out
jp
data16
insl
jbe
inc
mov
mov
jl
jg
xchg
lret
ficoml
add
cld
imul
insb
or
inc
xchg
xor
ret
lock
sbb
das
fdivrl
clc
and
push
dec
inc
push
mov
clc
cld
mov
pop
sahf
std
out
gs
jecxz
hlt
ss
jle
pop
sbb
fmull
adc
aaa
cltd
ljmp
lret
and
jg
inc
lea
ljmp
stos
pusha
jp
pop
pop
jno
lods
fnsave
rcll
cmpb
mov
sbb
inc
jge
and
sti
push
xchg
addr16
mov
push
mov
jno
arpl
adc
jb
iret
mov
lcall
ret
cmpsb
add
mov
inc
jecxz
xchg
cmp
sbb
add
jne
leave
mov
inc
fistps
popf
call
mov
jno
jg
test
inc
cmp
mov
popf
lock
lods
adc
or
add
cwtl
jg
push
fsts
xor
dec
cmp
das
push
js
pop
pop
pushf
repz
jge
pop
cs
pop
into
mov
scas
lods
ret
sbb
enter
test
sahf
mov
xchg
fwait
mov
iret
movsb
pop
or
mov
lds
mov
xchg
es
movsb
jg
add
nop
dec
je
cmp
cltd
imul
cmp
enter
mull
mov
and
ret
push
popf
lret
or
ljmp
xchg
mov
mov
fwait
cmp
insb
mov
lds
in
loope
sahf
pop
clc
mov
inc
dec
and
push
xchg
scas
cwtl
xor
ret
dec
out
mov
add
lock
jo
cmpsl
cwtl
push
aas
adc
push
dec
imul
push
and
hlt
gs
add
or
or
mov
mov
dec
xchg
sbb
lods
xor
lods
int
test
sub
mov
dec
repnz
insl
push
xchg
xchg
push
xchg
mov
xchg
inc
push
sbb
xor
outsl
mov
outsb
mov
inc
ja
clc
push
outsl
mov
roll
sbb
test
sbb
push
and
pop
mov
push
pop
ret
cmc
test
push
mov
pop
jne
cmp
in
xchg
push
inc
adc
adc
add
lods
test
mov
sub
pop
add
fisubs
or
mov
xorl
and
pop
addl
adc
mov
imul
cld
sbb
mov
and
push
fstpt
push
jae
ret
inc
or
xchg
cmp
fidivs
mov
mov
scas
adc
xchg
xchg
xor
pusha
lds
mov
and
rolb
xorb
xchg
adc
cmpsl
mov
sub
cmc
sbb
pop
jge,pn
fisttpl
push
test
stos
clc
addr16
xor
or
sbb
in
test
sbb
cmpsb
xchg
push
push
pusha
dec
mov
std
dec
push
xor
sarb
out
stc
push
xchg
mov
or
push
pusha
out
sbb
lea
frstor
mov
icebp
aaa
push
add
popf
or
aad
repz
outsb
int3
stc
sahf
adc
mov
in
incl
jg
mov
fisttps
addr16
jge
cltd
enter
jns
xchg
popf
ss
mov
in
in
lods
sub
mov
lcall
mov
mov
xchg
inc
ss
lock
aaa
push
cmp
push
push
add
fs
pop
jmp
mov
sub
jne
cmc
pop
xor
test
fistpll
pop
mov
das
outsl
jp
sti
sub
jle
jbe
outsl
xor
int3
pushf
sbb
gs
mov
lds
cmp
pand
stc
jne
fstpl
lock
and
lods
cld
outsb
cmp
cmp
adc
pop
xorb
lret
xchg
inc
adc
stos
push
and
or
mov
es
mov
sub
push
sub
das
jp
jnp
pop
lea
daa
repz
and
and
push
mov
xchg
test
ss
xchg
pop
dec
push
lret
les
or
xchg
mov
stos
dec
xchg
loopne
mov
cmp
inc
sbb
xor
mov
sti
push
ret
dec
push
lcall
or
in
cmp
idivl
lods
test
adc
add
sbb
fwait
or
cwtl
jae
std
push
orb
cld
fcoms
cmp
mov
cmp
inc
outsb
test
adc
or
sti
mov
dec
lret
mov
push
xchg
xchg
sub
xchg
rorl
cmpsb
lods
dec
lods
push
cwtl
mov
sbb
mov
ret
hlt
stos
pop
movsl
mov
stos
subl
das
inc
and
scas
fwait
cmpxchg
lods
adc
or
sbb
xchg
je
dec
pop
and
andb
jle
inc
jge
int
xor
dec
mov
xor
mov
arpl
pop
xchg
fistl
xchg
divl
dec
add
mov
out
dec
sbb
into
scas
aad
loopne
pop
cmc
icebp
rcll
fs
and
add
lcall
test
jecxz
cld
js
jmp
mov
idiv
mov
and
insb
mov
nop
aam
inc
pop
sbb
out
rclb
aaa
xchg
xchg
out
mov
sub
or
repnz
repz
dec
and
xor
xchg
cmp
and
mov
ret
or
xor
push
sub
leave
sarb
testl
inc
test
mov
test
mov
add
cld
insl
cmc
jle
dec
adc
pop
and
dec
pop
dec
subl
push
add
cmp
mov
dec
cmpsl
andb
push
addl
and
jb
push
mov
xor
outsl
shlb
mov
popf
std
jns
xchg
push
pop
dec
aaa
mov
jmp
orl
jne
jg
push
cmp
add
adc
sar
daa
xadd
mov
sub
ret
dec
push
insb
repnz
iret
sub
stos
movsl
push
fildl
inc
inc
sbb
lea
jp
stos
ljmp
fnstenv
test
xorl
inc
lea
daa
mov
pop
loope
nop
orb
bound
test
call
mov
or
nop
sub
jecxz
fsts
push
xchg
es
push
jmp
dec
xchg
sub
push
inc
stc
xchg
fisubrl
ds
lock
les
loope
icebp
dec
ret
jnp
int
inc
mov
lret
dec
pop
pop
jmp
out
fwait
lock
sahf
adc
adc
push
xchg
fisubrs
dec
sub
movsl
sbb
lds
dec
ret
outsl
arpl
dec
insl
rorb
fdivp
jp
into
jmp
fidivs
mov
add
xchg
lahf
cmp
jl
push
jle
xchg
xor
lret
lock
xor
cmc
mov
push
movsl
pusha
int
aas
add
mov
repnz
pop
int3
adc
leave
xchg
sbb
pushf
xchg
ret
ss
mov
jge
cmp
xchg
sub
out
add
dec
push
popa
sub
or
idivl
cmpsl
mov
inc
push
mov
and
adc
test
mov
mov
roll
xlat
sar
push
fldenv
scas
push
jns
popa
clc
adc
inc
arpl
adcb
mov
push
mov
fisubrl
mov
cmp
push
divb
mov
out
and
andb
aaa
mov
dec
jecxz
pop
push
stos
xchg
out
jae
xchg
mov
jle
notb
sbb
or
das
push
cs
xchg
inc
sub
mov
jbe
ret
je
and
pop
into
aad
xor
add
xchg
repz
or
movsb
mov
dec
ljmp
ret
jl
out
sub
leave
shrl
xchg
iret
lahf
mov
fs
fbstp
add
dec
mov
mov
adc
xchg
add
inc
std
repz
pusha
js
sbbb
cmpsb
ficompl
addr16
sarl
daa
testl
popa
int3
repz
fsubp
xchg
xor
ficomps
das
push
pop
stos
cmp
jb
mov
dec
or
cmp
pop
push
ds
jg
test
test
and
cmp
adc
and
adc
fs
repnz
xchg
adc
lds
jbe
mov
pop
adc
fdivrp
icebp
mov
sbb
or
mov
jge
daa
fwait
int
pop
fdivl
into
pop
call
xor
ret
mov
jne
out
aad
fistpl
shll
imul
dec
icebp
mov
jecxz,pn
dec
xor
lahf
fildll
push
jmp
adc
insb
mov
push
mov
mov
mov
sbb
inc
add
movsb
jle
rcll
popf
das
shl
notb
mov
pushw
insb
mov
cltd
jge
pop
sbb
outsl
cli
pop
loop
addb
imul
lret
mov
push
jb
mov
icebp
sub
imul
mov
std
adc
or
pop
outsl
jae
pop
dec
clc
xchg
dec
jmp
adc
push
jo
jmp
popf
cmp
and
js
test
inc
lret
jno
fisttpl
push
or
inc
jge
imul
rorl
xchg
orb
xor
pop
jae
lcall
pop
test
leave
pop
jmp
sahf
jne
lock
insb
int3
jmp
push
mov
jb
imull
mov
sub
in
popf
push
test
outsb
and
or
pop
adc
mov
mov
xchg
dec
jecxz
or
jo
push
mov
mov
xor
int
sbb
aaa
or
push
and
aam
ljmp
push
popf
popf
addr16
jmp
mov
sti
jp
ljmp
sbb
ret
xchg
cmp
dec
adc
cltd
movsl
and
scas
cmp
sbb
jle
sbbb
pop
mov
shll
dec
fs
or
lcall
movsb
enter
scas
xchg
aad
adc
mov
test
aad
sub
das
sbb
dec
out
ror
xor
mov
fnstsw
mov
or
jbe
or
xchg
mov
rcrb
and
sbb
pop
arpl
insb
and
push
jg
rcrb
mov
mov
popl
inc
lahf
jge
xor
jns
mov
cmove
fld
cli
cwtl
cmpsl
mov
and
lods
int
mov
pop
mov
shll
push
pop
mov
jns
lods
sahf
mov
mov
fcoml
jge
dec
adc
and
push
sub
outsb
pop
jo
sbb
mov
test
sub
cld
dec
adc
inc
dec
loop
jnp
dec
movsb
inc
push
inc
push
rcll
aam
sbb
stc
popa
sar
lock
sbb
lods
mov
push
push
popa
sub
or
xchg
dec
ror
test
hlt
mov
pop
pop
pusha
and
daa
mov
or
shll
push
pop
adc
or
aam
scas
fsubl
in
outsl
lds
sbb
push
add
stos
xchg
es
jecxz
cli
rcll
cmp
and
mov
lds
and
das
xchg
call
lcall
pop
mov
sbb
mov
shll
push
pop
jno
inc
aam
pop
xor
das
add
mov
stos
xchg
fsubp
jp
add
inc
test
insb
mov
dec
fidivs
fs
xchg
mov
clc
jle
and
roll
cli
rcrl
daa
int
or
jmp
mov
sub
push
repz
mov
ficompl
cwtl
push
int3
test
mov
test
sbb
divps
pop
adc
xor
mov
cmp
fisubl
cmp
sub
or
aas
mov
stos
outsl
addl
test
mov
sbb
ja
ja
inc
lock
int3
sbb
fcompl
rorb
mov
xchg
and
push
test
adc
mov
adc
cmp
insb
out
into
clc
xchg
push
sub
fstpt
dec
rcrb
int
inc
arpl
into
clc
std
aad
mov
add
vucomiss
pop
jge
sahf
pushf
jb
fwait
out
jecxz
cmp
mov
mov
stos
xorb
dec
or
loopne
adcl
loope
and
xchg
cmp
adc
in
push
mov
push
cmpsl
xchg
add
push
push
pop
fnstenv
andl
or
and
scas
push
sbb
add
dec
or
arpl
pop
in
cmp
sub
and
xlat
int3
sub
push
cmp
and
cmp
pushf
add
mov
pushf
lods
or
cmc
or
test
mov
pop
cli
fcompl
inc
out
mov
jg
cli
xor
fisubrl
mov
jo
jo
popl
sbb
fs
mov
sbb
mov
je
and
mov
ficoms
out
cmpsl
add
lea
cmp
sbb
mov
in
cmc
add
fucomp
insb
pop
and
call
add
push
or
aam
cmp
mov
and
lods
pop
imul
loopne
lret
int3
lock
dec
test
lret
inc
mov
jne
loope
inc
insl
sbb
jno
fidivrl
dec
cltd
int3
imul
jmp
dec
loope
andb
in
xchg
fidivs
in
outsl
adc
or
lcall
sarl
cmp
xor
push
stos
xchg
push
and
test
stos
jnp
pushf
cltd
dec
fsubrs
push
inc
fs
mov
add
cmp
dec
and
ror
and
mov
test
mov
push
mov
push
cmp
mov
mov
stos
mov
inc
push
stos
or
pop
es
push
rcll
xchg
clc
subb
push
inc
jne
cli
jbe
push
xor
iret
cli
jb
icebp
inc
daa
mov
test
and
mov
fxch
fisubs
pop
in
dec
cmp
push
js
adc
sub
pop
aam
fdivl
loopne
inc
xor
lahf
jns
pop
pop
pop
add
push
mov
push
jge
or
in
clc
pop
cmp
fldcw
jmp
jae,pt
xor
loope
jg
mov
inc
daa
push
jns
jp
nop
pop
jo
fcoms
mov
jp
mov
cld
xor
inc
outsl
in
dec
roll
sbb
std
das
sbb
test
cld
pop
test
push
mov
movsl
aad
adc
ret
or
out
aas
mov
orb
cmp
and
insl
lods
or
psubw
xchg
jmp
daa
addr16
dec
jp
cmp
cld
mov
out
ffreep
add
sub
call
mov
bnd
mov
in
and
aam
gs
lret
cmovnp
sets
fnstenv
mov
sub
out
or
ror
or
js
add
fisttps
loopne
loope
or
lods
xor
pop
jmp
xorb
fcomps
cs
xlat
pop
jg
cmpsl
lea
out
out
push
mov
ret
adc
test
xlat
dec
movsb
or
dec
repz
icebp
adc
sbb
scas
cmp
outsb
dec
sub
adc
aam
cld
roll
mov
enter
imul
sub
xor
sbb
cmpsl
add
jbe
lret
dec
js
movsb
mov
out
pop
mov
dec
sahf
out
dec
dec
mov
data16
cmpl
fwait
mov
cltd
pop
outsl
and
sub
call
xchg
inc
dec
inc
inc
sub
pop
xchg
frstor
sub
xor
mov
xchg
and
lret
enter
iret
jbe
cmp
and
sti
add
mov
inc
lcall
aas
mov
sbb
fiaddl
fidivrs
sbb
fstpt
jg
sarb
test
call
mov
dec
lcall
loopne
out
fstl
sub
mov
clc
test
inc
cmp
and
push
or
sub
sub
or
popa
sti
in
sub
stos
xchg
les
jno
mov
push
push
jle
mov
lahf
iret
push
subb
insl
fndisi(8087
cmp
and
leave
hlt
fwait
test
cwtl
inc
sbb
sub
inc
aas
scas
jmp
cli
roll
inc
or
scas
sbbl
xchg
int3
icebp
sub
sbb
xlat
out
cli
subl
fisubs
stc
or
pop
dec
push
mov
cli
inc
and
dec
loopne
xchg
xchg
jne
push
or
loopne
dec
adc
pop
jg
jle
mov
inc
inc
cmp
or
adc
jae
mov
fstpl
enter
lods
loop
les
outsl
mov
ds
push
sahf
fwait
jecxz
mov
popa
mov
flds
inc
lds
jp
cmp
sbb
out
add
sar
popa
lea
push
jae
inc
out
pop
push
dec
pushf
adc
lret
loop
xchg
movsb
inc
clc
dec
cmp
adc
adc
lock
add
or
outsb
sbb
inc
mov
push
sub
and
aam
fcomps
mov
mov
pop
pop
mov
cmp
jge
add
push
int
jg
mov
outsb
mov
inc
rcrb
inc
xor
mov
enter
inc
mov
test
arpl
dec
out
sub
push
push
scas
mov
inc
cmp
rol
divl
cmp
inc
test
xchg
cmp
xor
pop
daa
icebp
loopne
ljmp
jne
jb
sbb
dec
filds
sub
add
xchg
sar
scas
xchg
cld
das
add
lds
push
xor
xor
int
pusha
in
out
neg
lods
and
stos
push
cltd
adc
pop
push
cmp
pop
cmp
sub
imul
push
imul
out
inc
mov
pop
pusha
push
fwait
mov
add
insb
cmp
xchg
lock
pop
jno
in
jno
fsubp
clc
loope
and
subl
enter
aas
jae
and
pop
mov
in
repnz
jp
mov
push
adc
movsb
fcompl
pop
jg
fidivs
sub
in
int3
sbb
dec
xchg
cmpsw
jnp
fdivrs
fwait
mov
add
leave
adc
lods
mov
outsl
imul
push
pusha
pop
decb
nop
xchg
mov
or
mov
addr16
cs
popl
push
inc
xchg
cmp
pop
into
pop
xor
jg
clc
jg
lahf
cwtl
test
testl
jo
mov
push
loopne
sub
or
movsl
ja
mov
test
icebp
andb
xchg
enter
xchg
fiaddl
mov
jle
jp
pop
mov
js
addr16
jecxz
xor
stc
hlt
out
into
dec
out
out
jno
movsb
ret
mov
cmp
mov
mov
xchg
mov
orl
mov
pop
inc
lods
add
mov
push
jmp
jl
enter
jno
pop
dec
jg
ja
int3
pop
rcr
sti
scas
sub
and
addr16
adc
shll
loope
fmuls
jb
negl
mov
jns
push
dec
mov
pop
pop
dec
shlb
out
cmp
test
xchg
arpl
das
lret
add
out
in
sti
int
mov
mov
or
push
xchg
pop
aad
or
das
ljmp
clc
in
pop
in
push
pop
add
push
cmp
mov
pusha
stos
jle
fyl2xp1
add
sub
roll
xchg
mov
ret
in
jnp
pop
in
les
cmp
inc
and
neg
loop
imul
jno
push
jle
mov
repnz
push
xchg
out
xor
repz
adc
adc
xchg
in
sub
loopne,pt
or
add
repnz
aaa
stc
mov
mov
sarl
xor
dec
popf
mov
addr16
add
pop
mov
out
loop
jnp
xchg
jg
out
dec
sbb
mov
ds
sbb
enter
outsl
pop
fdivs
repnz
push
and
or
pop
jae,pn
jnp
aas
and
arpl
loopne
mov
push
and
and
lahf
out
mulb
adc
aas
lock
mov
sti
adc
push
xor
mov
fidivs
push
mov
mov
jae
sub
or
in
fldl
cwtl
in
movsb
adc
xor
jno
cmc
xor
in
ret
lods
jecxz
inc
adc
mov
lea
jmp
adc
inc
xchg
mov
xor
mov
dec
inc
in
repnz
std
adc
jbe
xchg
pop
pushl
cltd
ret
and
push
jno
pop
adc
mov
jmp
lret
adc
mov
mov
cs
push
pop
push
shl
jmp
repz
cmpsb
mov
pop
lds
xor
dec
add
add
sub
rcrb
and
push
aam
gs
sar
mov
pop
je
or
pop
or
ret
mov
push
cltd
and
xchg
or
fcompl
sbbl
pop
pusha
or
jno
add
ret
adc
adc
or
out
movsl
pop
xchg
cmp
ss
push
out
leave
dec
stos
fs
repnz
push
dec
and
sub
cli
or
idivb
xchg
jecxz
xor
andb
push
shl
sbb
mov
enter
xchg
cmpsb
shr
lock
jae
out
and
imul
cld
out
mov
jno
test
fwait
shrl
adc
and
and
pop
cmp
cmc
loopne
jg
lret
fnclex
ds
popa
lahf
mov
bound
fmuls
jmp
xchg
adc
sbb
dec
mov
fidivrs
outsl
jo
pop
or
cmp
out
inc
mov
sbb
out
call
jle
mov
xchg
adc
fxam
pop
or
push
sbb
mov
xchg
jecxz
and
cmp
pop
sahf
mov
add
sub
mov
in
insb
cmp
adc
rcll
dec
ljmp
sbb
xor
insb
cwtl
jle
dec
iret
pop
cmp
sar
xchg
or
test
mov
jmp
add
fcmovu
js
sub
xor
inc
xchg
das
jmp
xchg
leave
jne
jne
sub
cmp
loope
mov
inc
nop
jle
jp
xchg
push
mov
iret
or
ret
jbe
out
sub
sbb
popa
lahf
out
mov
imul
imul
inc
jge
xchg
aaa
and
push
aad
jp
shll
bswap
dec
insl
sahf
adc
jns
cmp
addr16
mov
pop
imull
sbb
lock
insl
in
and
push
cmp
or
xor
pop
sbb
push
mov
in
adc
jns
mov
inc
mov
lock
cmp
xor
add
rorb
mov
adc
xchg
or
adc
imul
jmp
pop
add
push
pop
js
mov
sbb
add
ret
jae
xor
xchg
test
test
xor
arpl
xor
dec
stos
fisubs
xchg
mov
movsl
lods
dec
jno
out
divl
andl
push
pop
add
mov
shll
adc
pop
scas
sbb
pop
les
hlt
lods
or
xor
jo
xorb
inc
or
scas
shll
xchg
sti
loop
and
cld
dec
sub
mov
dec
into
push
add
pop
out
dec
testb
bt
aad
mov
or
xor
enter
push
or
movb
inc
ret
out
cmpsl
cmp
push
inc
aas
icebp
jo
icebp
test
sub
fcompl
loopne
xchg
add
push
cmp
sahf
add
jo
sbb
call
mov
adc
mov
mov
mov
cmpsb
cltd
sub
add
jle
adc
lret
or
lods
pop
pop
fcmovnu
or
mov
cmpsb
cmp
or
scas
aaa
mov
movsb
outsl
testl
mov
js
in
das
mov
or
jne
pop
sarl
and
cmp
push
lcall
iret
sbb
es
scas
mov
into
mov
sbb
adc
pop
add
xor
test
aad
insl
pop
mov
daa
dec
push
popa
jae
and
cmpsb
lods
dec
sbb
jmp
mov
cld
ss
sbb
xchg
out
ret
mov
xchg
clc
test
xchg
imul
dec
jp
ficoml
stos
jne
imul
aaa
sbb
hlt
xchg
jmp
lea
mov
out
popf
data16
cwtl
pop
andb
cmp
pop
mov
jae
cmpsl
push
int3
std
mov
pop
mov
mov
push
mov
mov
pop
sbb
mov
mov
mov
in
enter
inc
leave
fwait
ja
sub
mov
ret
sub
leave
lock
jbe
sbb
cmpb
and
repnz
or
push
je
inc
mov
mov
iret
lods
push
push
jns
adc
jge
fidivrs
enter
dec
stos
jmp
push
sti
outsb
imul
push
test
jecxz
or
jae
ret
add
andb
cld
int3
or
clc
lret
imul
lahf
pushf
lret
imul
in
inc
out
push
inc
lock
sub
cmpsl
push
sub
mov
aam
mov
mov
mov
lods
imul
xchg
and
mov
lds
dec
cld
loope
push
and
ds
dec
or
pushf
lods
pop
lcall
ja
mov
or
out
jo
cmc
push
fs
pop
dec
fnstenv
ret
xchg
fwait
jmp
and
dec
daa
data16
mov
fisttpl
lret
movsb
push
les
add
aas
lods
call
inc
andps
mov
incb
xorb
sub
pop
xchg
imul
jne
mov
fwait
clc
dec
insb
repnz
aam
fildl
jge
lcall
lods
out
push
in
inc
add
inc
ret
jle
xchg
xor
mov
fidivrl
pop
or
insb
cmc
pop
jmp
sbb
cmpsb
xor
movsl
js
mov
addr16
lds
ja
and
out
mov
loope
pushf
mov
adc
adc
aam
mov
cmpsb
imul
aad
movsb
jl
mov
xor
inc
testl
mov
jo
popa
mov
into
dec
pop
or
out
in
cmp
bnd
int
fdiv
adc
xor
gs
and
cmp
and
mov
lcall
outsl
cmp
mov
or
lea
jmp
jo
or
push
out
xor
pop
repnz
and
mov
push
inc
lea
sahf
adc
lcall
fucom
mov
dec
fdivrs
push
and
mov
scas
jecxz
push
sbb
stos
dec
and
or
pop
mov
enter
jge
sub
ljmp
std
addr16
inc
push
mov
outsb
repz
shlb
mov
inc
stos
jnp
xlat
adcb
jecxz
jecxz
sti
add
mov
subb
push
lcall
pop
pop
loopne
mov
fwait
aas
hlt
testb
mov
loop
das
cmp
loope
imul
cmpsb
add
wrmsr
xor
mov
mov
fistpll
xor
sbb
sbb
scas
inc
idiv
into
andl
in
ret
lock
adc
movsb
lods
and
cld
sub
mov
push
push
and
outsb
lahf
push
les
adc
repz
repnz
mov
pushf
notl
push
into
pop
fidivrs
test
stos
add
push
and
out
sarb
lods
push
stos
fptan
add
pop
xchg
jne
bound
test
lea
and
test
push
sbb
insl
incb
stc
pop
pop
shlb
push
adc
dec
rcr
jg
arpl
push
outsb
or
lods
es
inc
sub
jmp
movsb
cwtl
jnp
and
cld
adc
xchg
js
inc
xchg
jnp
loope
fmul
lods
xor
mov
daa
in
repz
and
lods
dec
mul
mov
mov
and
sbb
out
and
shlb
jnp
aas
cmp
xlat
cltd
jle
rclb
mov
push
jns
insl
or
sub
adc
mov
inc
push
dec
insb
gs
or
push
rcr
mov
lods
icebp
dec
in
cwtl
adc
cmp
mov
hlt
push
mov
loopne
inc
gs
xor
cli
cmovnp
jae
pop
fists
jns
sbb
mov
inc
lds
inc
das
pushf
mov
inc
adc
sub
rolb
mov
ret
xor
sbbl
int
mov
mov
jmp
xchg
popa
lret
inc
pop
mov
stos
fidivs
cmpl
jb
xchg
outsl
push
insl
xor
loopne
mov
fisttpl
jecxz
hlt
lret
das
mov
std
dec
xor
out
add
inc
call
enter
add
sarb
repz
cmpb
adc
repz
stc
pop
xor
fnstcw
xlat
sbbb
lds
fnstcw
sub
decl
push
and
test
mov
mov
mov
fsubr
jmp
xchg
sbb
mov
cmp
arpl
daa
mov
push
cmp
xor
lret
sub
rcrl
call
or
push
mov
les
xor
pop
imul
mov
outsb
int3
es
push
ds
lds
popf
repnz
popf
dec
lea
sbb
push
divb
cmc
stos
dec
cld
jl
jg
and
sbb
imul
pop
stc
sbbb
outsb
cmpl
fs
in
jmp
sbbb
sub
add
push
xchg
push
inc
adc
pushf
xor
outsb
add
jno
fwait
arpl
cmp
sahf
jg
mov
and
mov
test
loope
pop
mov
xchg
and
shll
mov
jl
sub
jo
lods
insl
pop
lcall
dec
push
pop
and
das
mov
test
rorb
mull
stc
and
dec
mov
mov
mov
jecxz
inc
cmpb
dec
pop
outsb
out
out
jnp
jg
out
fmul
pop
loop
idivl
rorl
bound
dec
mov
inc
scas
into
pop
push
adc
pop
adc
loop
stos
test
jmp
int
jecxz
ret
cmp
xchg
push
ss
push
push
fsubl
push
xor
and
lock
inc
or
cmp
sbb
and
mov
jb
push
cli
loop
adc
adc
jno
pop
loop
sub
imul
movsl
inc
sbb
add
push
icebp
fsubrl
outsl
mov
outsb
xor
push
inc
cs
pushf
xchg
aas
fcmovne
mov
xor
loop
push
ja
sub
jp
mov
mov
pop
inc
test
int3
add
andl
dec
xchg
hlt
and
mov
adc
nop
mov
jo
hlt
test
lret
jnp
mov
inc
cmc
mov
add
adc
add
test
xorb
xor
in
fdivl
xchg
movsl
cld
lret
pop
pop
orl
add
test
cmpsb
sub
jmp
stos
das
sbb
sub
pop
sbb
mov
adc
cli
sub
dec
jl
std
and
mov
mov
inc
mov
mulb
daa
mov
inc
rolb
sub
cmp
sbb
cmp
dec
mov
add
js
enter
out
push
adc
or
pop
adc
dec
dec
jle
adc
jl
push
jecxz
pop
mov
cmp
xchg
cmp
lcall
in
inc
adc
mov
mov
movsl
adc
sub
and
cmp
mov
fdivs
xor
jne
mov
cmp
das
cmp
test
push
push
mov
call
testl
lds
subb
xor
repz
iret
lahf
push
xor
lds
or
sbb
rep
ds
int3
testb
fidivs
loopne
add
and
mov
fsubp
testl
pop
decl
adc
and
jno
fdivr
fisubs
roll
mov
bound
mov
scas
sbb
inc
lea
rcll
xor
push
jmp
ja
dec
mov
nop
pushf
and
scas
inc
loope
lcall
daa
push
clc
dec
fidivs
mov
mov
aas
cmovno
mov
ror
dec
loop
fistps
push
stos
lea
andl
dec
loop
scas
int
test
orl
add
cwtl
outsb
inc
sbb
pop
aas
testb
inc
faddl
or
mov
push
dec
lods
jg
jge
decl
ja
or
stc
xor
mov
sahf
mov
add
iret
push
or
jmp
dec
jne
push
inc
push
int
bound
jbe
int
pop
add
jmp
jo
shrb
in
test
shll
adc
inc
mov
lods
rorb
mov
pusha
mov
inc
pusha
xor
push
sub
jl
jne
push
jge
loopne
inc
push
add
out
out
dec
andb
and
fldcw
loopne
add
jmp
xchg
mov
js
pushf
daa
das
shll
xor
out
and
test
into
mov
out
ret
add
pop
xchg
inc
or
das
adc
out
jae
ljmp
pop
cmc
fptan
adc
dec
int3
mov
call
sub
outsb
and
and
leave
xor
inc
push
in
jmp
adc
mov
pop
sti
or
lods
pop
aam
add
outsb
jmp
cmp
fwait
in
xchg
push
mov
push
fnstsw
inc
jecxz
inc
mov
pop
mov
test
in
push
mov
out
fwait
ret
push
loope
push
push
dec
and
bswap
mov
inc
insl
inc
ljmp
popa
js
pop
inc
adc
push
cld
jl
cs
jbe
and
loope
mov
push
leave
insb
fisttps
out
sub
cmp
dec
add
fistl
jge
cmp
lcall
stc
inc
out
divb
in
cmpsb
fiadds
outsb
aam
out
sbb
mov
in
inc
adc
cld
mov
lcall
xchg
dec
pop
aaa
or
push
mov
mov
lds
mov
inc
lods
lret
imul
push
inc
push
into
dec
in
pop
test
jbe
add
mov
jecxz
out
push
add
and
mov
pop
sbb
and
cmpsl
dec
cmp
and
xchg
push
jno
or
test
and
adc
icebp
fdivr
add
add
adc
scas
mov
sub
popa
cli
pop
lret
cmc
add
xor
sar
push
push
and
movsl
push
adc
loop
das
rcrb
shll
jp
sbb
fimull
cmpsb
gs
push
or
mov
mov
dec
cmp
sbb
sbb
cmp
leave
xchg
pop
mov
sub
rorl
fsubrp
xor
pusha
pop
inc
dec
pop
pop
je
xchg
sahf
adc
sub
fs
icebp
test
mov
hlt
adc
lret
icebp
int3
hlt
and
xor
inc
cmp
lcallw
aad
sub
dec
mov
lahf
imul
xchg
lods
scas
std
lods
fisttpll
sub
jns
adc
aaa
cmc
adc
aad
rcrl
mov
mov
movsl
ljmp
jp
add
and
nop
adc
fsubs
leave
fs
sbb
dec
pop
fs
mov
xchg
mov
add
cld
and
push
repz
movsl
xor
push
push
jg
ds
jg
test
push
mov
sub
fisttps
or
push
addb
and
xor
pop
clc
xchg
lcallw
iret
push
dec
cmpsb
repnz
mov
mov
mov
mov
push
or
outsb
mov
out
icebp
andb
and
loope
add
jo
aam
xor
mov
mov
dec
lock
push
push
dec
mov
or
imul
daa
add
cltd
daa
sub
inc
add
ret
inc
xor
popa
aam
ret
add
cli
aad
cwtl
jb,pt
xor
mov
rcll
pop
fsubrl
and
sub
loope
cmpsl
xor
inc
add
addr16
adc
mov
xorl
daa
sarl
mov
fbld
cmp
call
cld
int
mov
insl
sub
out
int
movsb
mov
push
jmp
repnz
iret
aam
rcll
outsb
shrb
jne
inc
xchg
cli
aam
inc
fldl
in
mov
or
dec
adcb
divl
popf
int
add
mov
aaa
cmp
push
sbb
jge
jae
xchg
pop
roll
pop
push
stc
js
xchg
adc
jnp
dec
movsb
cli
pop
push
mov
loopne
loopne
repz
nop
fldl
imul
ret
push
mov
cwtl
dec
sub
aam
xor
mov
lret
cltd
fldcw
push
out
dec
or
mov
fcmovnbe
aas
jecxz
xchg
aaa
mov
loopne
dec
cmp
cld
into
cmp
cmp
mov
pop
clc
jecxz
pop
out
pop
push
sub
aam
pop
lahf
cmpsl
jle
sbb
insb
lea
push
daa
in
aaa
push
in
pop
cmc
and
stos
xor
lcall
xchg
ret
sbb
push
mov
icebp
stos
mov
jmp
mov
xchg
pop
mov
inc
and
mov
or
fstl
dec
push
movsb
xchg
aam
mov
hlt
mov
mov
pushf
out
jbe
push
xchg
and
pop
xor
xchg
clc
sub
add
cwtl
out
mov
test
xor
popa
std
mov
or
and
adc
fsubl
push
and
jp
sub
xlat
out
or
mov
pop
stos
dec
divl
xor
inc
dec
push
mov
inc
jne
addr16
rcrb
push
std
jg
ficomps
jmp
pop
inc
jle
popa
cltd
jp
cmp
add
rolb
mov
fwait
and
cmpsb
sti
pop
mov
add
aas
aam
fsubrs
jp
inc
or
add
adc
jb
shrb
shrb
xchg
push
xchg
xor
or
fdivl
je
xchg
add
test
fcoms
out
mov
xchg
jno
xlat
repz
jae
cmp
pop
dec
mov
xchg
insl
dec
lods
or
jae
and
daa
mov
stos
mov
pusha
mov
das
mov
loopne
jmp
int
inc
scas
fs
scas
aaa
fs
pop
arpl
lds
lret
ljmp
out
mov
jnp
lods
dec
jp
sahf
xor
add
popa
inc
es
xchg
stos
mov
ljmp
rclb
dec
cmc
test
push
or
ret
adc
pop
jns
sub
lret
call
and
std
std
push
vmovd
pop
sub
or
out
jge
jmp
cmp
ja
lea
into
adc
cmpb
iret
push
lret
filds
test
mov
or
shll
and
divl
sub
test
je
rolb
jae
and
jp
scas
cmp
dec
out
or
xor
cmp
imul
es
outsb
dec
out
addr16
mov
pusha
ret
imul
mov
fs
dec
jmp
jne
pop
mov
xlat
push
arpl
stos
ret
xchg
enter
gs
cmc
dec
xor
push
sub
ja
cs
iret
js
and
rcrb
mov
jae
ret
push
xchg
xor
std
repz
pop
jb
add
inc
dec
pop
inc
sub
loope
scas
mov
lock
rcrb
sbb
movsb
lock
mov
clc
jmp
mov
inc
adc
dec
scas
push
aam
cwtl
jbe
cmp
test
fistl
nop
imul
out
aaa
jge
jp
and
mov
adc
pop
push
mov
or
jno
pop
fnsave
shrl
sub
out
imul
and
add
lcall
outsb
test
ret
mov
push
xchg
xor
test
jno
jmp
add
mov
pop
add
test
push
push
mov
sub
pop
ret
loopne
aas
fwait
adc
mov
push
cmp
dec
or
std
or
pop
xlat
xchg
adc
pop
xchg
andl
in
ja
sbb
out
xchg
and
mov
pop
scas
xchg
or
in
xor
test
rclb
mov
lret
fisubrl
out
xor
and
pop
jg
popa
inc
rcll
push
cltd
mov
pop
je
cs
out
and
stos
sub
jmp
ret
ffree
cmp
push
sub
inc
fs
mov
int
js
dec
shlb
mov
jns
sahf
test
cmp
mov
sbb
xor
insb
pushf
mov
push
pushf
out
cmpsb
bound
push
cmp
and
jnp
sub
dec
or
lock
adcb
adc
ds
int
pop
push
lea
ret
pop
add
xchg
inc
hlt
pushf
mov
pop
cltd
push
mov
sub
mov
xlat
sarl
jb
insl
aam
pop
inc
stc
jb
xor
lcall
aas
test
jg
ret
xor
and
xchg
jecxz
pop
cmp
mov
fisttps
ucomiss
cmp
stos
dec
cli
ljmp
ret
adc
jae
pusha
pushf
mov
dec
or
jge
notl
stos
sub
mov
jne
push
sti
jne
pop
cwtl
and
fbstp
les
sub
scas
cmp
mov
es
sti
movb
in
push
imul
cmp
in
sbb
mov
adc
lret
mov
or
daa
daa
mov
mov
stos
icebp
cmp
jge
xchg
dec
and
push
ljmp
mov
lret
and
cli
gs
mov
bound
xor
xchg
ret
xor
xchg
loop
outsb
sbb
dec
inc
fldcw
test
dec
mov
adc
fidivs
aad
rcr
gs
flds
push
int
sub
adc
xchg
sub
lret
xor
xchg
out
push
xchg
cmp
lahf
lea
psubsb
outsl
push
in
fadd
add
dec
pop
inc
cmp
outsb
jns
xchg
xchg
andb
cs
vpunpckhbw
das
out
push
pop
mov
jbe
fistpl
or
cltd
fldln2
xchg
ret
xor
add
lahf
pusha
bound
mov
jbe
push
sub
stos
xor
stos
mov
dec
shrl
cmpsl
dec
daa
jg
pop
mov
mov
loopne
mov
repnz
stos
fcmovnbe
mov
jp
mov
inc
push
jns
arpl
rorb
push
mov
cmpsb
outsl
sbb
jno
mov
and
adc
push
xor
adcl
imull
pop
pop
js
or
and
push
int
pop
shl
lret
das
and
aas
lcall
je
xchg
idivl
data16
mov
nop
divb
gs
sub
sbb
mov
xorb
jmp
or
mov
fstps
pop
or
aaa
jnp
mov
or
scas
mov
and
add
lcall
cmp
adc
cltd
add
lds
insl
xor
clc
mov
lahf
mov
lcall
test
lea
test
pop
mov
aam
xchg
mov
inc
repz
push
mov
jnp
dec
rclb
lahf
inc
pusha
pop
rclb
dec
iret
pop
mov
jg
mov
pusha
les
sbb
testb
jg
in
mov
mov
mov
enter
jecxz
mov
repz
int3
les
repz
loope
xor
ljmp
subb
cmp
out
dec
and
jg
out
and
sub
dec
push
cmp
dec
in
and
pop
xchg
inc
aas
jg
sub
dec
push
xor
mov
pushf
sub
jae
push
sbb
adc
cltd
xchg
es
std
jbe
aaa
insb
mov
mov
mov
call
jbe
inc
rcr
jge
inc
push
mov
dec
dec
pop
sbb
mov
dec
dec
sahf
out
insb
scas
mov
das
dec
in
dec
negb
xchg
clc
arpl
push
mov
pop
dec
inc
or
nop
cmp
lcall
lcall
hlt
jge
mov
aam
dec
push
adc
fwait
cmp
pop
xchg
in
or
mov
push
mov
cs
mov
popf
rcl
repz
jne
pop
loopne
int3
mov
int
mov
mov
mov
mov
push
mov
push
out
cmpsl
dec
xor
jnp
bound
xchg
adc
out
add
aam
add
sbb
sub
movsb
test
popa
xchg
add
or
add
adc
mov
ss
cmpsb
xor
xor
xor
test
cmp
push
push
lcall
xorl
mov
mov
mov
addr16
sbb
inc
push
adc
leave
mov
sub
adc
push
rcr
lock
mov
and
das
mov
in
mov
push
xor
mov
loop
jp
mov
mov
rcl
push
sarl
dec
insl
or
mov
and
stos
xor
or
les
ja
aas
mov
popa
cmp
jle
push
dec
pop
inc
pusha
lock
popf
push
loopne
inc
in
mov
pushf
out
inc
inc
bound
aam
rolb
jl
jecxz
jge
mov
jecxz
push
ja
mov
adc
lods
mov
lods
insl
ljmp
jno
js
sub
rorl
xor
in
icebp
sub
mov
loope
imul
or
jb
and
insb
arpl
mov
add
movsb
push
lds
hlt
mov
xorl
push
push
push
sbb
stos
js
jmp
cmp
inc
xchg
ficoms
insb
or
add
pusha
push
mov
sahf
cmc
fildll
jle
adc
pop
mov
push
repz
dec
out
add
cmc
cli
push
out
xor
xchg
lahf
pop
sbb
out
mov
push
and
enter
lahf
sti
xor
mov
stos
or
lods
ljmp
push
adc
lea
andl
xorl
sbb
and
xorl
sub
shlb
xor
cmp
mov
sbb
std
xchg
popa
xchg
hlt
mov
loopne
cmp
pop
mov
mov
inc
pop
pop
push
mov
sub
out
cmpsl
int3
je
inc
insl
stos
out
insl
and
fildll
lea
mov
jb
xchg
sti
xor
fwait
mov
xor
pop
loopne
mov
fsub
add
cmp
arpl
mov
cmp
repz
ds
cltd
mov
int
aam
jmp
add
jmp
mov
in
int3
xchg
sbb
cwtl
and
mov
xchg
add
sub
lock
sub
add
popa
shr
das
xchg
roll
pop
inc
add
and
dec
repz
push
xchg
jmp
sbb
lret
popa
xor
xchg
push
jmp
clc
cmc
push
out
stc
lods
pop
daa
jl
repz
in
cwtl
popa
lock
xor
mov
mov
mov
cmp
loop
insl
inc
add
sbb
loopne
jae
or
sbb
and
inc
jae
mov
movsl
popf
sbb
pop
dec
arpl
xlat
fsubr
adc
mov
insl
aad
mov
in
stc
ret
out
jg
xchg
sbb
stos
push
jg
and
pop
inc
sbb
lret
test
daa
outsl
inc
rorl
pop
push
mov
pop
jle
ficoml
or
or
insb
pminsw
scas
push
adc
push
out
lret
ret
int
add
adc
add
cmpsl
adc
push
adc
add
mov
cmp
rolb
cwtl
add
mov
stc
icebp
mov
dec
inc
and
sbb
scas
adc
mov
imulb
repz
jl
popf
arpl
test
dec
mov
xor
pop
mov
shlb
imul
stos
subps
loop
out
imul
rolb
sarb
add
push
and
mov
movb
cli
xchg
cmp
mov
xchg
xlat
neg
out
test
xlat
hlt
xchg
sti
pop
adc
sbb
sbb
xlat
jo
mov
pop
roll
mov
dec
ja
test
cli
mov
mov
es
data16
xor
push
sub
iret
rorb
movsb
or
push
js
dec
daa
negb
loop
mov
pop
mov
sub
movsl
jmp
pop
addb
test
sub
addr16
adc
cwtl
cmp
lret
mov
xchg
dec
popf
mov
sarb
roll
bound
sub
push
out
test
or
and
sbbl
shrl
int3
loopne
rorl
mov
repz
hlt
cs
inc
mov
aad
lahf
aas
ficompl
lea
outsl
jecxz
out
pop
mov
sub
mov
inc
xchg
pop
pop
adc
sub
dec
inc
cmp
mov
mov
das
and
sbbb
mov
dec
insb
into
mov
inc
gs
mov
pusha
pop
jg
push
call
add
push
and
jmp
mov
sub
sbb
js
jl
call
arpl
jl
mov
gs
stos
mov
sbb
test
cld
iret
outsl
les
add
iret
xchg
popa
lods
inc
jno
mov
jno
gs
pop
add
pop
into
mov
or
jcxz
mov
fisttpll
adc
xor
add
sub
shlb
aas
clc
lock
adc
jl
mov
aad
xorb
scas
xor
into
stc
add
imul
jbe
xchg
nop
lret
aas
push
xor
pop
push
fstl
ds
pop
cmc
imul
or
repz
repnz
lret
mov
push
sbb
pop
dec
int
cs
xchg
idivb
xchg
int
sub
ja
inc
popf
jo
cli
mov
aam
xor
xchg
inc
mov
std
scas
mov
pop
movsb
ficoms
cli
sub
or
pop
out
imull
add
mul
cmp
pusha
sub
inc
int3
call
imul
xchg
in
jle
das
push
shrb
shll
pop
icebp
popf
popf
mov
push
dec
jne
xor
or
pop
es
add
adc
jmp
xor
push
cmp
xor
outsl
inc
add
xor
xor
sarl
test
xor
cmp
xlat
jl
mov
mov
les
mov
shrl
mov
out
cmp
movsl
loop
mov
jecxz
int
test
mov
addl
pop
leave
cmp
cmp
cmp
out
clc
cli
cmc
ficoml
mov
out
mov
testl
mov
or
mov
imul
xchg
pop
pop
arpl
in
xchg
addb
les
lcallw
lock
add
or
jle
mov
cmp
fistpl
jne
and
cs
loopne
vpshufhw
xor
fwait
shlb
jl
dec
sub
mov
jp
push
testb
sarb
sbb
push
xchg
mov
xor
out
test
js
in
test
add
cmp
sub
mov
incl
push
fbstp
rcl
mov
mov
jmp
std
jg
lea
mov
into
add
scas
scas
out
out
mov
push
add
xchg
xchg
out
mov
xor
in
std
lahf
jmp
ret
icebp
xor
jp
push
and
in
cmp
add
or
mov
xchg
mov
push
mov
in
cmpsl
inc
in
add
mov
dec
add
ja
rorl
sbb
sbb
sub
mov
shlb
cmpsl
lods
dec
repz
xor
inc
out
shll
cld
pop
push
insl
sarl
adc
cmp
stos
mov
test
stos
xor
jle
cmovl
add
mov
ss
imul
lret
inc
loopne
cmp
insl
cmp
rorb
arpl
pop
rcr
sbbb
outsl
lds
lahf
jmp
sahf
cmp
push
mov
std
adc
push
and
je
stos
dec
rorl
bound
sub
sbb
iret
aas
cmpsl
xlat
repz
out
mov
int3
sub
push
cltd
mov
clc
pusha
shlb
and
dec
dec
and
ja
gs
mov
hlt
arpl
arpl
sub
scas
je
inc
fs
or
stc
fldt
aaa
daa
add
jmp
and
dec
sar
ja
mov
inc
inc
pop
nop
in
mov
mov
invd
insb
sub
leave
ja
scas
inc
mov
pop
and
in
jb
sbb
in
out
cli
test
popa
js
stos
mov
jne
adc
sub
aam
mov
inc
inc
jle
fcmovnb
inc
mov
adc
mov
push
mov
out
les
sub
js
out
xchg
push
rcrb
outsb
mov
dec
lds
ret
add
inc
dec
aad
mov
cltd
dec
aaa
scas
sbb
mov
push
add
ljmp
mov
push
add
mov
jp
dec
sub
xor
xor
outsl
mov
jecxz
movsl
dec
add
push
repz
nop
jbe
outsb
cmp
sbbl
mov
inc
loope
loop
sbb
dec
lret
dec
in
push
in
fwait
lds
xor
arpl
test
cmc
and
out
mov
push
jle
popf
or
leave
and
ret
and
into
scas
push
insl
xor
popl
jmp
inc
xchg
fnstsw
es
mov
jb
adc
out
xor
fldcw
jmp
mov
inc
and
int
int
clc
imul
and
ret
inc
push
dec
mov
push
sub
jmp
adc
aas
sbb
fldt
rorl
xchg
bnd
into
push
dec
call
repz
adc
jbe
mov
shlb
and
sbbl
cmp
pop
xor
sahf
add
std
arpl
push
fistps
pop
repnz
push
xor
jno
shll
sahf
bound
sub
sbb
insl
mov
fidivrs
sbb
cmc
ficoms
adc
pop
sub
mov
or
lods
out
push
jb
sub
lea
mov
push
mov
mov
into
imul
mov
arpl
xchg
out
jae
fadds
pop
jnp,pt
les
movsb
pop
xor
xchg
jle
out
jl
rclb
test
inc
add
popf
pop
xchg
mov
imull
loope
adc
loope
fisubrl
dec
pop
bound
je
adc
pop
inc
or
sbb
inc
mov
xor
adc
jns
mov
sbb
xchg
cs
cld
push
sbb
mov
dec
xchg
fcmovu
mov
mov
repnz
dec
and
dec
jo
mov
lea
aam
test
push
movsl
pop
jae
add
jb
dec
sbb
sbb
int
jecxz
mov
iret
inc
or
jno
mov
sbb
ss
adc
inc
xor
mov
sti
cmc
jns
xor
inc
mov
sarb
push
in
sub
daa
or
pop
pop
sub
and
mov
test
jle
cs
xor
jne
mov
mov
jmp
shrb
popa
frstor
in
and
sbb
fwait
jl
std
mov
repz
jmp
jns
push
leave
lods
paddsw
inc
mov
xchg
pop
mov
inc
addr16
stos
imul
mov
loope
out
notb
mov
xchg
imul
push
mov
sbb
ds
inc
sbb
shlb
hlt
xchg
arpl
int3
mov
test
pop
jns
jecxz
jmp
dec
js
dec
cwtl
mulb
mov
js
les
jbe
mov
mov
pop
sub
ljmp
xchg
outsb
xor
push
xchg
shlb
iret
stos
mov
subl
sub
fxch
xor
popf
in
and
fmul
int3
xor
lds
arpl
sti
rolb
sub
pop
dec
fs
or
inc
pop
or
inc
cs
xchg
jb
ja
xor
push
adc
in
cmp
mov
mov
shll
pop
imul
or
repnz
lret
fnstenv
push
loopne
dec
push
mov
cmp
mov
fcmovnu
cli
mov
ljmp
dec
aaa
nop
insb
test
mov
bound
sti
sbb
mov
mov
es
in
mov
add
jge
xchg
data16
nop
pop
hlt
cmpsl
std
out
repnz
cmp
inc
jnp
mov
bound
jno
mov
mov
aaa
outsb
cmp
je
push
mov
cmpsb
or
dec
push
ficoml
mov
stc
lea
add
das
mov
adc
push
test
cmp
aad
pop
lea
add
inc
fiadds
pop
push
bound
cmp
and
imull
stos
sub
cli
cli
xchg
xchg
into
ss
loope
sahf
push
sti
cmpsl
daa
or
enter
or
pusha
or
hlt
push
in
jecxz
shr
dec
shll
add
dec
cwtl
shrl
int3
mov
int
outsb
es
add
inc
pop
xchg
xchg
or
ret
push
fucomp
das
scas
xor
push
sbb
test
mov
mov
gs
and
pushf
mov
xchg
bound
mov
add
in
mov
jecxz
xchg
dec
les
lret
movsl
pop
mov
pop
int
jno
push
jae
into
hlt
mov
mov
aam
xchg
xchg
les
lds
jg
sub
xchg
inc
mov
insb
xchg
cmp
pop
xor
add
into
mov
dec
pop
adc
xor
shrl
pop
cmp
jb
fidivs
loopne
mov
xor
xchg
mov
hlt
inc
jbe
jo
insl
int3
insl
mov
sub
arpl
int
cmp
or
push
sti
jecxz
mov
stc
push
fists
stc
jbe
js
or
fs
jle
adc
xchg
fdivrs
xor
insb
or
adc
mov
push
or
sbb
push
jno
push
nop
ss
dec
xor
test
js
sti
cmp
mov
push
xlat
sarl
mov
or
pop
sbb
out
and
mov
fldt
mov
sarb
inc
mov
mov
xor
or
mov
adc
jbe
int
pop
dec
cmp
in
and
leave
sub
or
repnz
sub
rorl
fstl
dec
pop
aam
jb
jl
xor
cltd
xchg
sub
call
mov
ja
dec
xor
in
fisubs
adc
adc
mov
jnp
lds
les
stos
std
daa
jge
cmp
outsl
dec
mov
call
jb
loop
enter
push
or
sbb
clc
adc
repz
pop
lahf
bound
mov
dec
inc
xchg
xchg
inc
push
xor
adc
iret
push
lahf
cwtl
mov
pop
nop
xchg
xchg
mov
dec
enter
and
movntps
jle
pop
or
fmul
aaa
dec
out
pushf
jo
addr16
mov
in
mov
mov
shrb
je
aaa
or
jnp
repz
rol
sub
cwtl
push
movsb
arpl
aaa
xor
aad
push
cmc
add
xchg
daa
out
pop
jbe
arpl
arpl
jne
inc
scas
mov
repnz
and
dec
add
ror
into
cmp
xchg
mov
dec
jno
adc
mov
icebp
das
stc
cmp
push
ss
xlat
or
push
lret
cmp
imul
xchg
ret
push
dec
sbb
pop
adc
negl
push
lret
enter
sbb
pop
aaa
sbbl
dec
sti
es
or
jb
out
cmpb
mov
cmp
mov
shll
sbb
add
push
subl
or
ljmp
sub
mov
dec
mov
sbb
cmp
pop
loop
xchg
push
dec
xchg
test
out
arpl
mov
add
mov
cmpsb
std
mov
loope
jge
inc
movsb
movsl
mov
xor
cmc
jae
sub
cs
cmp
and
jns
mov
mov
add
mov
iret
push
push
push
sti
push
cltd
stos
dec
cmp
sub
mov
dec
jl
jmp
adc
and
pop
cmp
mov
cmp
subl
adc
into
aas
in
mov
xor
cli
pushf
xor
clc
bound
mov
stos
inc
mov
shr
hlt
sti
or
andb
push
mov
or
sub
scas
pop
mov
jno
jbe
xchg
movsb
movsl
or
mov
gs
mov
in
repz
daa
cmp
je
in
mov
hlt
sub
xchg
lods
pop
inc
xchg
hlt
addr16
mov
ja
arpl
jae
add
mov
inc
test
inc
mov
or
jb
sub
out
pop
addb
jo
call
mov
es
js
lahf
ds
push
int3
cmpsb
xchg
dec
or
and
adc
imul
jle
inc
or
aaa
jnp
testb
lds
out
mov
imul
insl
dec
shll
jb
movsb
and
imul
sbb
pop
jns
or
adc
mov
cmp
dec
sub
inc
and
or
mov
push
insl
or
cmpsl
std
shll
or
lahf
fsubrs
xor
imul
rclb
xor
fs
scas
mov
push
rorb
and
and
daa
mov
test
jo
aam
loop
xchg
mov
pop
mov
sub
jae
sar
rolb
cltd
cltd
adc
add
cmpsl
mov
jl
push
insl
jl
and
mov
cmpsb
sbb
pushf
mov
out
add
push
sbb
xchg
pushf
or
or
aam
stos
xchg
mov
in
loopne
jae
add
insb
cmp
aad
adcl
xchg
fsubr
int3
bound
pop
sub
push
pop
fdivp
lret
fadds
imul
sub
lcall
mov
jnp
and
inc
pop
xchg
inc
out
cwtl
or
loopne
ljmp
pop
and
xchg
js
loopne
sarl
movsb
ficoml
mov
or
stos
sbb
enter
popa
or
cmp
push
call
nop
sbbb
sbb
lods
repnz
add
mov
add
test
xor
movb
lea
in
test
leave
out
mov
jno
jae
add
dec
jle
rolb
jno
insb
je
loope
jecxz
in
movsl
jne
cli
clc
popf
pop
xchg
sub
bound
lea
faddl
inc
imulb
pop
sub
fdivs
pop
aam
enter
and
xchg
pusha
jl
add
adc
ljmp
push
aas
sti
cld
lret
addr16
xlat
scas
mov
mov
xor
mov
loop
fwait
inc
sub
mov
lea
or
sbbl
xchg
mov
mov
sbb
in
mov
test
xor
or
rcrl
shlb
stos
xor
dec
sub
sbb
movb
shrl
or
mov
leave
mov
xor
xor
js
push
ljmp
fldl
sub
lea
bound
sub
sub
mov
rcrl
cwtl
adc
push
push
xor
call
mov
loop
scas
xor
lret
push
sub
dec
cwtl
pop
loope
xor
xchg
xchg
adc
jno
pusha
icebp
nop
fwait
int3
cmp
cmp
nop
cld
lods
aad
fistpll
lret
in
inc
push
pmuludq
dec
and
adcb
push
sub
and
jbe
adc
lods
testl
in
jg
push
es
or
idiv
cld
sbb
lock
rorl
jg
test
jp
push
adc
pop
outsl
stos
int
sbb
out
and
nop
xchg
mov
aas
je
adc
scas
pop
cmp
cli
pusha
push
mov
pop
jo
inc
mov
inc
sub
call
insb
mov
jne
xor
lahf
sub
adc
nop
and
shrl
cmp
cmp
ret
sub
mov
icebp
lret
sbb
mov
lds
sbb
inc
jae
xchg
mov
addr16
xorb
bound
fisttpll
aam
xor
movsb
cwtl
rcr
aam
or
adc
cmp
pushf
lret
dec
jno
stos
andb
add
xor
dec
sbb
and
jg
jns
pop
add
sub
pop
sbb
shrb
inc
and
insl
push
or
int
push
icebp
sbb
movsl
push
xchg
into
push
leave
fcmovne
mov
std
push
mov
mov
xor
mov
data16
subb
adc
inc
push
scas
add
xchg
js
inc
popf
mov
mov
es
mov
into
scas
dec
xchg
jne
xchg
dec
adc
sti
std
push
ljmp
pop
adc
je
mov
scas
and
push
inc
add
add
mov
pop
aaa
mov
sbb
xchg
add
aaa
jnp
incb
adc
xlat
mov
dec
out
xor
xchg
cmp
insb
call
mov
inc
jae
pop
or
fbstp
in
scas
sub
shl
add
xchg
mov
adc
cmp
jae
scas
sub
xor
arpl
dec
pop
push
or
shrb
outsl
xor
sub
outsl
xor
xchg
sarl
jecxz
xchg
and
mov
mov
sti
fwait
addb
sahf
into
rcll
mov
adc
add
clc
test
hlt
cmpb
les
cwtl
ror
fcmovnbe
or
inc
jno
push
lahf
mov
xor
rcrl
cmpsb
pop
jns
sbbb
pop
sbb
lret
clc
mov
adc
xchg
inc
xchg
or
xchg
dec
xchg
scas
and
mov
adc
mov
mov
fsubl
gs
cwtl
push
and
mov
cli
in
and
xchg
xchg
push
in
hlt
mov
xlat
mov
outsl
inc
sbb
int
sub
or
jne
ds
aaa
lahf
scas
sbb
dec
cmp
cli
jno
addr16
imul
mov
pop
fmull
fistl
sub
dec
or
cmp
ret
xor
xchg
mov
das
cli
add
fs
aas
addl
sub
inc
mov
int
cmpsl
ret
mov
movsl
and
add
jg
xchg
mov
mov
jge
mov
enter
adc
xchg
xchg
cmp
mov
xchg
movsl
in
gs
std
push
or
and
xchg
stc
push
push
pop
dec
jns
jecxz
loop
push
mov
subl
lret
sbb
addl
cmpsb
aam
repnz
and
loopne
xor
test
adc
or
loope
int
test
sub
nop
jbe
and
sbb
je
jle
xchg
mov
mov
int
or
inc
imul
ljmp
dec
jmp
out
fidivs
inc
test
fwait
xorb
jl
daa
adc
and
loopne,pn
xchg
dec
pop
and
mov
xor
ss
push
dec
push
ja
test
clc
mov
jns
iret
dec
adc
jo
je
stos
js
dec
jb
lahf
mull
pop
adc
mov
pop
mov
mov
and
lea
call
ljmp
inc
push
add
scas
and
dec
rol
cmp
out
cs
mov
jne
dec
jae
outsl
ss
inc
sbbl
enter
inc
mov
call
test
test
pop
sub
aad
mov
inc
dec
sarl
fwait
xchg
into
das
xchg
pop
out
or
jbe
add
or
shrb
cmp
inc
lods
sub
lock
cli
jnp
sub
daa
xchg
cs
push
rorl
ucomiss
iret
ja
cmp
leave
push
jmp
lcall
jo
cltd
mov
xchg
jno
xchg
rorb
sub
and
test
loopne
das
mov
lahf
mov
or
inc
jp
test
test
inc
mov
frstor
out
xor
ja
xor
cmpl
lds
dec
divl
les
cmp
jle
hlt
sub
and
mov
cmc
cmp
adcb
mov
shl
xor
mov
cs
imul
out
sbb
sbb
pop
mov
outsl
xor
ret
adc
sbb
ss
shrb
adc
inc
mov
iret
cmpsb
int3
cs
mov
jmp
mov
push
shr
inc
arpl
bound
dec
lret
scas
outsb
test
dec
rolb
sub
idivl
dec
lahf
fwait
and
jmp
sbbb
sub
repz
jo
xchg
scas
dec
mov
daa
lret
add
dec
fsts
push
es
add
adc
lods
lock
xchg
add
clts
mov
push
cvtdq2ps
sbb
fwait
pop
sub
mov
lahf
jg
xor
clc
mov
and
sbb
stos
outsl
add
adc
ret
mov
daa
mov
adcb
rcr
sub
xchg
daa
cmp
or
pop
and
test
mov
loop
addr16
jno
jmp
insb
push
xor
fmuls
mov
lock
sub
in
sub
cmp
pop
xchg
add
sub
in
and
jbe
mov
dec
outsb
adc
aam
dec
adc
cmc
loop
push
outsl
mov
ficoms
inc
inc
je
psrad
fsts
out
push
aaa
xchg
mov
push
ja
cwtl
xchg
pop
pop
dec
mov
xchg
movsl
aad
xor
ja
cmp
mov
xlat
push
pop
inc
repz
adc
in
pop
sub
xor
fstl
cltd
sarb
lods
test
cltd
ret
push
pop
bound
out
and
dec
or
scas
mov
cli
or
std
mov
mov
add
push
or
mov
mov
or
mov
jmp
mov
and
pop
jns
fisttpl
icebp
test
lahf
setnp
pop
mov
jle
xchg
push
outsb
push
jnp
pop
cs
pop
leave
ds
decb
aad
jg
ret
xchg
fcoml
lret
lods
int3
icebp
jbe
cmp
jne
idivl
stos
add
aad
pop
mov
mov
aaa
orb
cmp
xchg
jbe
adc
cld
jmp
dec
arpl
outsb
bound
in
fbstp
mov
repz
out
xor
cs
mov
out
push
pop
mov
aaa
push
dec
sbb
pop
push
sub
test
aaa
jnp
aaa
xor
cmpsb
adc
pop
lcall
mov
sbb
pop
xchg
pop
out
add
xchg
jl
xor
add
push
push
adc
aaa
inc
or
test
xchg
jp
push
in
das
outsb
or
or
jo
testb
pushf
insl
inc
adc
mov
aad
jg
pop
ja
cmp
paddusw
mov
jne
popa
leave
xor
cmp
and
xchg
adc
mov
add
stos
adc
mov
daa
jmp
inc
jno
vmread
sbb
cld
mov
in
fstl
push
in
pop
adc
ds
push
xlat
iret
std
loop
jnp
xchg
pop
xlat
jo
mov
adc
popf
mov
xchg
xor
hlt
jmp
cmp
ja
stos
push
mov
or
mov
sbb
bound
insl
out
mov
lods
xchg
lahf
and
test
or
or
lahf
in
pop
loop
rolb
and
xor
cmpsb
leave
into
lret
pop
push
adc
fmul
cmp
dec
imul
inc
inc
mov
mov
inc
cmpsl
push
inc
in
jbe
push
je
decb
hlt
jge
pushf
fsubp
xor
test
pop
addr16
sub
mov
dec
dec
dec
sti
jno
int3
sti
mov
std
pusha
push
rolb
or
rclb
mov
into
xchg
shll
mov
adc
xchg
ja
pop
mov
bndstx
lods
repnz
sub
dec
stc
xchg
outsb
add
out
neg
push
icebp
pop
dec
pushl
pushf
xor
ss
jae
jecxz
xor
jnp
sub
ror
dec
lock
stos
jge
mov
xorl
and
sbb
ljmp
ds
or
inc
movsb
sub
stc
mov
test
pop
out
jmp
aad
xchg
sub
lret
scas
lcall
xchg
shll
movsl
fwait
ds
xor
cmp
or
in
inc
sahf
or
rclb
hlt
xchg
mov
fcoms
inc
push
sub
loop
sarb
ficoml
ljmp
jae
inc
outsb
xchg
xor
cmp
inc
aad
sub
inc
loop
fs
andl
jl
ss
xchg
cmp
movsb
cld
sub
aas
sub
test
xchg
in
aas
ror
faddl
dec
out
xchg
test
pop
push
fnsave
bswap
int
cmp
pop
pushf
rcrl
addl
loopne
pop
xchg
scas
ret
mov
insl
jg
mov
mov
adc
jno
inc
adc
sbb
repnz
or
mov
jb
cmp
les
push
out
sub
inc
pop
and
iret
mov
outsb
les
or
sbb
insl
call
mov
cwtl
sti
pop
mov
dec
pop
fs
repnz
mov
push
aas
pop
inc
int3
xorl
dec
popa
dec
pop
fisttpll
cmc
mov
mov
jmp
sahf
pop
rorl
loopne
enter
xchg
pop
dec
cmp
inc
mov
sub
cmp
movsb
loope
rcrl
jnp
stc
loope
imul
mov
push
loop
xchg
xlat
pop
pop
lock
jp
in
popf
je
mov
sbb
lock
mov
pop
xchg
fs
xorl
es
sub
lret
dec
dec
cmpsl
hlt
test
into
fldl
push
adc
push
iret
pop
mov
xchg
icebp
iret
pop
xchg
lock
sbb
sbb
cli
mov
aas
inc
adc
push
pushf
div
insl
pusha
packsswb
add
dec
jl
pop
cmc
in
pop
cs
ja
aam
pop
sbb
mov
out
sub
fsts
repz
lcall
nop
mov
stc
pop
xor
imul
mov
mov
and
lret
pop
mov
test
in
or
lods
pop
clc
pop
pop
xchg
ja
cmpl
pop
mov
jmp
fstps
sbb
gs
jmp
gs
add
cltd
add
pop
fsts
xchg
jp
jae
push
mov
fbld
cmp
lahf
icebp
cmp
sbb
xor
rol
and
xchg
push
inc
mov
push
lock
push
cmp
push
test
sbb
test
cld
adc
and
add
call
mov
xchg
dec
mov
add
cmc
andl
xchg
dec
dec
ljmp
arpl
bound
cmpsb
xor
adc
mov
xchg
push
xor
push
sub
flds
sub
mov
and
ret
sbb
jae
jae
lds
mov
sub
inc
jmp
sti
pop
xlat
iret
mov
fsubp
push
push
setge
mov
std
inc
mov
flds
notl
inc
mov
das
add
mov
cmp
sub
jmp
and
inc
lods
mov
sub
lock
popf
add
gs
mov
sbb
aad
push
std
add
addr16
mov
mov
data16
pop
or
in
int
xor
mov
sahf
cmpsl
and
jle
ret
in
xchg
push
or
inc
sahf
mov
cmp
mov
or
xorl
cmp
ds
es
xor
jae
out
es
in
mov
into
xlat
subb
and
insl
pop
push
aas
pusha
cmpsl
cltd
stc
nop
arpl
or
cmp
jp
xlat
daa
inc
in
test
scas
add
ds
mov
cmp
sbbl
stos
adc
inc
push
stos
cmp
or
cmc
inc
loope
movsb
push
add
add
in
and
cmp
lret
ljmp
movb
loop
popa
add
ja
dec
adc
dec
push
push
lcall
pop
data16
inc
cmpsl
aaa
jns
sub
sbb
mov
jnp
mov
push
inc
mov
inc
rclb
cs
mov
pop
add
cwtl
aad
and
mov
and
loopne
mov
sbb
scas
sbb
fsqrt
test
jg
out
outsl
icebp
lret
push
icebp
push
inc
pop
call
inc
mov
push
and
sbb
pop
aaa
lahf
add
loope
ficoms
jg
jb
sub
les
rolb
jne
adc
mov
mov
jne
stos
lahf
fcom
imul
jp
push
cmpsb
pop
enter
jnp
cmp
fisubrs
fidivrs
adc
das
pop
std
pop
dec
mov
insb
jae
jae
in
and
mull
push
add
cmpsb
loopne
int3
push
shrl
aaa
std
test
push
sbb
sub
cmpsl
cmp
and
sbb
in
mov
gs
dec
fwait
lea
or
and
adc
sub
adc
arpl
stos
xchg
rolb
or
add
jg
in
test
enter
lods
xor
xchg
xchg
es
jmp
cltd
or
dec
bound
iret
rcrb
jmp
xchg
outsb
fbstp
mov
xorl
xchg
in
xchg
add
cmp
out
lods
adcb
push
mov
cwtl
sbb
stc
ds
or
adc
mov
leave
ror
loope
movsl
insb
dec
sbb
das
and
inc
xchg
lock
cld
xor
sub
in
movsl
cmp
orb
sbb
or
lods
push
push
jg
dec
ljmp
push
inc
inc
iret
add
shlb
or
test
adc
and
mov
or
out
adc
das
mov
or
ja
jno
test
cmpsb
mov
sarl
adc
push
out
insl
push
in
pop
and
sub
push
or
push
sub
jmp
in
ds
mov
jno
cmpl
aaa
ret
push
push
into
sbb
fstpt
dec
or
clc
jbe
pop
imul
mov
in
cmp
or
jb
cltd
and
adc
xchg
pop
loope
mov
xchg
xorl
mov
out
sbb
jae
scas
bound
xchg
ret
fldt
xor
enter
ljmp
xor
add
mov
or
mov
mov
lea
popa
add
call
cmpsl
xchg
ret
call
les
and
xor
inc
xchg
ret
inc
cmp
stc
xlat
scas
pop
and
fcoml
out
sbb
scas
cmp
add
shlb
mov
dec
push
into
mov
out
imul
loop
sti
mov
nop
xor
test
pop
sub
mov
fmul
jns
xchg
cmp
push
aad
cmp
jge
jecxz
mov
xor
in
mov
pop
stos
xor
cmp
jecxz
push
sub
mov
js
bound
shlb
add
pop
incl
push
fxch
adc
mov
stos
std
jo
fsts
sub
xchg
pop
icebp
pusha
dec
or
mov
mov
cltd
mov
push
outsl
ret
jbe
lock
daa
mov
mov
cmp
imull
or
push
jg
cmc
clc
mov
jge
sahf
add
or
aaa
or
sti
mov
pop
iret
cmp
add
icebp
test
push
out
mov
dec
rorl
push
jmp
cmp
xchg
xor
pop
aam
dec
mov
push
xchg
sub
leave
fldt
es
add
mov
sti
mov
pop
mov
dec
lret
adc
mov
nop
scas
lcall
dec
cli
push
and
iret
adc
sbb
ret
inc
adc
dec
imull
inc
repz
call
pop
sub
mov
sahf
mov
fmulp
or
lods
lock
in
xchg
fsubs
jo
fidivrs
jo
mov
xchg
aas
or
mov
ret
outsl
push
mov
repz
push
gs
shl
bound
cwtl
pop
cmp
xor
xor
jbe
in
fldt
pusha
mov
bound
outsl
test
mov
mov
into
xchg
je
cltd
push
adc
arpl
sub
es
sub
loope
xor
mov
divb
xor
pop
sub
mov
insb
mov
or
jnp
inc
dec
add
aas
repz
subb
jno
movsb
xchg
test
inc
fwait
in
andb
push
mov
cmp
lods
jp
mov
sbb
inc
lods
enter
add
fildl
mov
jp
jns
and
mov
dec
outsl
mov
jbe
imul
jmp
stos
nop
jle
fidivrs
loope
stc
mov
shrl
adc
gs
xor
orb
jne
push
stc
enter
pop
jns
sbb
test
ljmp
xor
ds
jle
xor
testl
pause
int3
stos
jno
ficoms
adc
dec
dec
xchg
cmpb
adc
shll
sub
pop
pop
lock
mov
jo
and
mov
and
add
mov
jmp
int
outsb
aas
push
jle
pop
xlat
ret
loop
or
inc
lcall
aam
out
insl
mov
pop
mov
ds
stc
mov
clc
aaa
push
adc
jl
adc
lcall
shrl
imul
push
cwtl
iret
nop
dec
xchg
rcl
mov
gs
bound
jg
insl
out
xor
jl
xchg
js
sbb
mov
cmp
shll
jge
xor
xorb
mov
mov
shr
dec
xor
fmul
push
pop
add
sub
xchg
aas
xchg
sti
repz
inc
sbb
push
lea
cmpsl
nop
ret
stos
push
and
mov
addb
sub
dec
adc
push
jl
popf
jo
mov
fidivs
pop
call
fidivrs
sbb
sarl
int3
call
pusha
add
dec
sub
jge
sub
call
push
dec
push
rorl
js
imul
loopne
xor
ss
push
pop
cs
mov
jle,pn
jae
jnp
rclb
and
mov
scas
pop
hlt
xchg
mov
shlb
or
data16
adc
lock
xor
test
and
fadd
addr16
ljmp
popa
repnz
ret
adc
jne
icebp
loop
scas
adc
and
mov
mov
push
icebp
scas
outsb
and
and
int3
inc
jle
lds
dec
insb
lahf
and
pop
push
stc
cld
pop
fiaddl
sbb
push
mov
xor
scas
lretw
mov
cmp
aam
jp
ds
loopne
rcr
je
in
add
je
enter
or
sub
cmp
sbb
pop
jg
adc
mov
fisubrl
cmp
dec
jne
in
jno
sub
xchg
jle
pop
pop
les
push
sbb
cmp
sub
xchg
or
inc
mov
stos
adc
or
xchg
loope
lahf
bound
stos
dec
or
mov
pop
mov
jge
pop
leave
xchg
cld
push
mov
fwait
and
leave
xor
jne
xchg
push
fdiv
jmp
pop
imul
pop
enter
pop
rclb
add
add
and
cmp
jg
into
cltd
hlt
mov
mov
lods
adc
aam
add
out
ret
gs
inc
fsubrs
pop
sub
shll
aam
cld
das
imul
adc
pop
cmp
add
outsl
or
in
cmp
pop
mov
push
stos
out
outsb
adc
pop
mov
jle
push
cmpsb
sbb
mov
hlt
fistl
dec
dec
adc
lods
add
xchg
adc
mov
xlat
xor
les
mov
insb
inc
sbb
sub
mov
add
push
mov
ja
nop
roll
xor
mov
mov
fisubrs
mov
fsubs
lods
out
cmp
sbb
or
ja
adc
mov
cmc
cld
fdivp
mov
inc
push
nop
pop
push
insb
mov
ss
inc
dec
cwtl
jbe
fadds
stc
shrl
out
ret
loope
test
rcll
repz
inc
das
nop
jae
loope
jle
xchg
rcll
cmp
push
sub
add
adc
mov
movsl
fistpl
jmp
xchg
fdivrs
mov
ret
adc
mov
push
pop
sub
fsubrl
lahf
es
mov
cltd
xlat
push
stos
add
and
or
movsb
xlat
add
jbe
hlt
push
mov
jg
out
movsl
popa
icebp
push
mov
mov
aas
and
inc
je
sub
sub
sbb
rcrl
pop
add
or
mov
mov
imul
xchg
xor
icebp
dec
js
mov
rcl
std
nop
jecxz
jo
push
xchg
fldl
sbb
xor
rcrb
cltd
shlb
lods
mov
out
xor
and
fmuls
push
sbb
mov
rolb
inc
push
and
adc
dec
int
adc
cli
mov
and
push
mov
xchg
sbb
sub
push
std
inc
stos
setbe
int3
jae
test
insl
stc
in
sahf
out
dec
pusha
pop
add
jge
outsb
mov
pop
dec
cld
push
dec
lock
ficoms
lods
lods
loop
xchg
stos
cmp
inc
loope
loopne
xchg
mov
mov
pop
sub
dec
sub
and
dec
add
push
and
out
iret
or
imul
es
dec
mov
lahf
sti
or
mov
lods
inc
inc
mov
shl
aam
mov
jae
enter
ret
adc
insb
mov
aad
es
loopne
popl
xchg
sbb
inc
xlat
or
mov
dec
ss
test
les
lcall
test
scas
lds
and
fisubrs
mov
dec
jl
ficoml
mov
add
fidivl
xchg
push
jge
add
xchg
jno
shll
mov
loop
sub
data16
adc
pusha
out
xor
jns
mov
cmpl
movsl
mov
and
mov
or
xchg
xchg
sub
cmp
xor
push
inc
inc
push
shrb
es
pop
xchg
mov
adc
xor
repnz
out
aad
xchg
xchg
cmp
push
aas
andb
pusha
sbb
pop
cmpsl
dec
insl
adc
dec
std
jg
inc
push
sub
mov
pop
ficomps
push
adc
dec
aas
dec
xorl
shrl
pop
scas
sarb
sti
mov
insb
jb
cmpsb
imul
pop
push
sti
stos
sub
int3
add
scas
inc
dec
inc
and
add
xor
pushf
mov
decb
test
xor
scas
cmp
inc
repz
dec
cmp
repz
mov
lds
test
scas
scas
leave
jl
cwtl
pop
mov
inc
test
mov
addr16
rdmsr
mov
inc
sbb
mov
pushf
in
outsl
es
rcl
loop
arpl
cmp
push
fisubs
out
cwtl
ficoms
jns
movsl
int3
bound
lds
jbe
push
and
adc
xlat
mov
orb
lret
dec
dec
cmpsb
rcrb
xchg
popa
pop
cmp
sbb
scas
dec
push
rcrl
jmp
ja
and
lret
movb
push
sti
adc
das
iret
push
or
int
lods
pop
add
sahf
cltd
or
push
adc
push
adc
sub
mov
fisubl
cmc
outsl
dec
leave
cwtl
xchg
cmp
pop
pop
nop
aam
adc
fstpt
lods
popf
mov
sbb
rcll
cmc
fcmovnb
icebp
xchg
repz
mov
fdivr
incb
ljmp
mov
jnp
ljmp
xor
adcl
or
sbb
mov
cmp
mov
cmp
je
xchg
into
in
std
lret
or
fwait
popl
or
shrb
pop
xor
loope
inc
stos
dec
insb
movsb
xlat
xor
adc
cld
clc
dec
stos
jo
sbb
push
mov
enter
out
mov
add
lods
mov
out
add
mov
mov
jle
push
push
sub
ss
cmpsl
jne
xchg
adc
movsl
subl
xor
ja
clc
mov
aam
xchg
dec
pop
push
inc
add
inc
popf
addl
ljmp
fwait
jge
or
push
xchg
popa
push
pop
fildll
js
out
out
dec
adc
orl
cltd
sub
aad
stos
xor
xchg
decl
addl
jl
cmp
jl
and
ret
adcl
mov
mov
in
mov
fisubrl
fs
cmp
fsubrl
inc
or
mov
ds
js
rcll
inc
adc
xchg
add
pop
in
in
ret
rclb
repnz
sbbl
xchg
or
jl
jo
into
lahf
mov
cs
es
adc
adc
lcall
sti
lret
daa
xchg
movsl
fprem
fdivp
stos
sub
je
cli
imul
add
add
leave
xchg
jnp
push
pop
inc
jp,pn
test
add
and
sbbb
mov
pushf
test
mov
fidivrl
inc
push
movsb
mov
pop
dec
adc
add
sub
call
jmp
rorb
mov
inc
fwait
add
pop
mov
mov
mov
enter
cmp
pop
outsl
xchg
ljmp
push
jb
jno
rcrb
mov
xchg
pop
call
outsb
imul
inc
outsl
jae
and
jno
or
iret
sub
lds
addb
and
test
idivl
inc
pop
inc
mov
mov
adc
dec
hlt
or
fldt
enter
out
dec
mov
or
enter
shll
pop
imul
ja,pt
fildll
aad
push
jg
decl
mov
out
mov
movsl
arpl
cmp
cltd
dec
icebp
mov
inc
mov
ljmp
sbb
cmp
inc
mov
sarb
and
fisubrl
sbb
sbb
gs
stc
xlat
add
clc
fistps
les
jnp
push
test
les
rcr
out
aad
xor
mov
sbb
insb
ds
dec
test
jl
jge
aaa
push
fsub
imul
out
mov
and
adc
jle
xchg
inc
loop
pop
jmp
jb
testb
adc
scas
sbb
lret
pushf
jbe
pop
cmovno
pop
and
pop
idivb
xor
test
cmp
cwtl
cld
inc
incb
bnd
out
add
dec
fs
shll
cmp
sbb
cmp
jno
rclb
cwtl
out
repz
pushf
lcall
cmp
xor
imul
or
enter
jmp
stos
jp
push
fisttpll
push
xchg
vunpckhpd
push
das
jl
or
out
or
and
jae
dec
test
je
loopne
push
imul
fistl
and
out
xlat
rcll
mov
out
cmp
clc
jb
push
jne
adc
dec
xor
in
stc
dec
mov
aas
cmpsl
outsl
jae
loope
sub
dec
jnp
cltd
xor
mov
mov
adc
xchg
pop
in
shlb
pop
mov
push
rcrb
adc
sub
imul
ja
mov
jmp
movsl
sbb
cli
aam
mov
pop
scas
shlb
scas
orb
bnd
or
fstps
fimull
addb
call
jns
cmp
dec
lods
and
mov
cli
pop
inc
push
sub
jg
and
jno
mov
leave
lret
inc
add
rcrl
insb
sbb
test
popf
push
insl
mov
scas
sbb
jb
lods
push
dec
aad
stos
mov
pop
push
test
mov
jge
adc
or
jl
mov
mov
mov
nop
fucom
sub
ds
popa
and
and
pop
dec
ret
mov
mov
sbb
mov
cmp
push
cmpb
in
cmp
jmp
cmp
adc
andb
ret
pop
cltd
jp
dec
cmpl
xor
sbbb
lret
fs
scas
test
sbb
cltd
mov
loopne
addr16
cmp
jnp
ljmp
xor
cmp
mov
les
inc
fcmove
and
in
out
push
or
call
sbb
pop
inc
cmp
cmp
test
loope
lds
loope
loope
sbb
inc
cmc
nop
aas
nop
rorl
sahf
leave
inc
sbb
push
mov
pop
mov
dec
shrl
cmp
xchg
fiadds
pop
jecxz
movsb
pop
mov
sbb
cmp
cltd
leave
pop
mov
popa
jo
bound
icebp
cs
xor
adc
cmc
or
fst
daa
xor
cld
push
cmp
mov
scas
jns
jnp
loopne
inc
stc
xchg
mov
cmp
mov
mov
cmp
cmpsb
jnp
out
mov
imul
xor
pop
cli
mov
jmp
es
jmp
or
aas
repnz
mov
cs
sub
push
mov
push
fistps
es
push
shrl
mov
sbb
mov
scas
xchg
je
xor
outsb
sar
inc
ja
test
sahf
out
adc
push
int
ret
and
shlb
dec
repnz
push
in
jp
je
pushf
cmp
std
shrl
lods
popf
das
into
scas
push
jb
jb
push
loopne
adc
pop
loopne
dec
cmp
adc
mov
xchg
and
mov
lods
pop
add
pushf
push
mov
in
ror
sub
xchg
aam
es
iret
pop
stos
and
xor
jnp
pop
xchg
js
jmp
mov
popf
adc
xor
add
cmpsl
out
xor
push
aaa
stc
dec
out
pop
jl
xor
add
xor
add
stos
repnz
mov
dec
popf
ror
cwtl
jecxz
xor
xchg
mov
cld
and
sub
leave
dec
clc
sti
scas
push
out
jecxz
xchg
mov
dec
xchg
dec
stc
pop
fwait
add
sbb
push
inc
out
mov
loope
das
dec
mov
mov
pop
imul
push
jmp
add
push
out
push
mov
pop
aam
ja
cmp
adc
in
test
pop
lds
inc
mov
fstpl
mov
in
cwtl
stos
pop
inc
shrd
and
es
ja
push
mov
jmp
cmp
push
pusha
xchg
cmpsl
stos
lcall
pop
ds
in
ret
inc
fistpll
cmc
push
add
inc
jne
push
insl
or
lret
test
fdivl
and
dec
pop
jmp
push
mov
push
sub
and
adc
dec
xchg
add
add
xchg
ljmp
xchg
mov
mov
jl
push
mov
mov
xchg
mov
cmp
lret
es
lods
xchg
fnstsw
andl
mov
xor
rorl
pop
lods
shrl
stc
testl
pop
clc
mov
aas
jne
fwait
pop
pop
das
xchg
bound
mov
jg
stos
fwait
icebp
notb
int
lods
repnz
pushf
shll
jo
cmp
shl
test
into
ja
popf
mov
mov
adc
mov
fists
sbb
cwtl
popl
adc
jecxz
mov
mov
int
cmp
inc
andb
lahf
dec
mov
cmpb
rcrb
inc
jo
mov
sub
mov
cmp
mov
sbb
cmpl
xchg
popf
mov
into
or
xchg
test
dec
shlb
das
pop
decb
inc
call
mov
mov
and
push
mov
xchg
int
test
js
jle
pop
bound
jne
xor
ljmp
cmp
dec
pop
push
jmp
xchg
fbld
xor
and
jmp
mov
push
mov
push
out
loope
in
mov
lock
in
mov
lds
push
aaa
insl
lea
dec
mov
adc
out
pushf
xor
push
mov
lret
nop
mov
add
mov
aaa
and
sbb
mov
jnp
fidivrs
pop
int3
lea
inc
mov
lret
cmp
push
mov
nop
call
gs
iret
and
iret
popf
mov
xchg
and
pop
cmp
out
pop
and
push
sahf
xchg
int
dec
sbb
call
inc
jns
mov
mov
inc
leave
sub
movsb
dec
scas
push
or
aas
jae
and
insb
int
mov
pop
jp
adc
sbb
mov
push
iret
inc
inc
lcall
insl
inc
out
mov
and
xor
popa
dec
xor
xchg
paddusw
movsb
pushf
fcompl
stos
or
cli
mov
jge
insl
adc
xchg
xor
sti
ret
insb
push
mull
jle
test
cld
es
mov
xchg
jo
popf
inc
icebp
in
fisubs
scas
and
xor
sub
insb
es
cmp
cli
lret
mov
jne
xor
mov
dec
cmpsl
pusha
jmp
pop
mov
adc
jne
fisttpl
fisttpll
insb
cmc
mov
cmc
pop
repz
sbb
push
fucomip
loopne
ret
cmpsl
adcl
mov
sti
push
jmp
ret
movsb
loopne
xor
push
cmp
sbb
sub
js
push
push
ret
out
inc
ja
outsb
jg
int
pop
cmp
loop
push
or
ret
mov
jns
mov
push
and
pop
nop
jmp
cltd
loope
aaa
or
push
test
jg
xchg
push
pop
push
jle
imul
jbe
stos
mov
in
xor
jnp
ja
jecxz
cli
mov
push
addr16
jbe
sahf
dec
jge
out
mov
push
ss
jp
movd
and
fnsave
pop
mov
aam
sub
int3
or
int3
lods
inc
je
inc
insb
xor
push
fiaddl
jecxz
or
fstps
movsl
jae
mov
shl
je
sarl
fsubs
add
pop
adc
lods
aaa
xor
dec
sub
das
adc
jo
in
xchg
ficoms
sbb
jae
bound
test
lods
pop
fstl
shll
lcall
mov
sti
shl
mov
jb
sbb
pop
lret
mov
and
xorb
xchg
addr16
arpl
fwait
xchg
loope
mov
mov
mov
cmp
push
data16
xor
mov
data16
scas
std
movb
cmpsb
inc
mov
sbb
lret
jbe
movsb
out
lds
fidivrl
xor
mov
or
cli
testb
movl
and
out
jle
inc
rcr
push
xor
sti
sbb
pop
stos
subl
mov
insb
test
mov
jns
add
cld
mov
lss
jno
dec
inc
dec
test
inc
iret
repz
je
jnp
or
or
push
daa
cs
dec
out
dec
int
sti
push
insl
js
mov
sub
int
push
jle
jle
or
call
adc
pop
mov
and
sub
sarl
push
xor
mov
popf
addr16
scas
std
jae
sbb
daa
inc
clc
cmp
in
pop
data16
mov
and
and
adc
cmc
divb
jg
movsl
sbb
adc
lea
sub
js
shlb
fidivrs
xchg
cltd
xchg
mov
push
andb
insb
ljmp
mov
add
lods
inc
fnstenv
sbb
sbb
jnp
mov
inc
jb
add
in
jg
dec
mov
icebp
aas
call
adc
mov
add
inc
lock
setnp
jae
lods
mov
imul
cld
and
ss
inc
jle
jmp
push
add
aad
fnstsw
jecxz
jns
lret
aas
add
xchg
xor
cmpsb
test
xchg
or
lods
and
or
jecxz
pop
fcoml
push
pop
sub
maxps
test
lods
mov
negb
loop
data16
or
jle
ja
sbb
mov
xor
inc
rcll
mov
movsb
cli
mov
pop
rcl
add
and
sbb
inc
nop
in
sbb
mov
inc
and
outsb
mov
aaa
icebp
sub
cmpsl
rcl
leave
and
andl
push
sarb
push
pop
push
jle
mov
xchg
dec
in
mov
inc
pusha
lret
xchg
out
and
es
xchg
pop
or
aad
push
xchg
ja
jne
addr16
mov
insl
mov
lcall
shlb
out
mov
sub
dec
or
sbb
testl
std
nop
hlt
cmpl
into
push
push
fnstsw
pop
push
jae
lahf
or
out
out
mov
adc
movsl
lods
fisubs
shlb
aaa
cmp
in
pop
or
inc
inc
xchg
shlb
pop
mov
xchg
rcrb
fsubp
rcrb
xlat
in
js
lods
and
out
adc
pop
out
jns
stos
cmp
add
mov
adc
ficoms
ret
scas
pop
adc
sbb
sti
out
sub
push
insl
rorb
in
outsl
addl
bound
mov
imul
loope
mov
imul
pop
mov
stos
das
outsb
jns
cltd
or
std
clc
subl
xor
cltd
mulb
jle
lock
sub
xor
outsb
imul
adc
xchg
das
xchg
sbb
add
in
xor
jb
mov
repnz
jae
cli
in
inc
cmp
mov
push
pop
dec
cwtl
ret
sub
push
in
push
cmp
scas
movsl
cmp
movsl
jle
das
sahf
cmp
mov
mov
shll
lret
je
lahf
imul
cmpl
mov
inc
lahf
dec
ja
insb
mov
inc
or
xor
out
repz
hlt
test
add
repz
xchg
xchg
and
dec
in
mov
test
movsb
cli
jne
data16
in
mov
popf
test
ljmp
jo
cld
repnz
jns
std
dec
push
lock
add
mov
insb
ljmp
adc
jns
dec
pusha
movsl
inc
pop
and
in
testl
sti
stc
mov
jmp
mov
mov
test
mov
scas
inc
sub
add
jns
adc
mov
arpl
add
cmp
daa
xchg
inc
jp
mov
sub
push
orl
mov
loope
scas
pop
push
xor
jno
xlat
mov
popf
mov
sbb
cltd
sbb
repz
mull
leave
add
xor
mov
lret
jmp
rcrb
dec
sub
dec
adc
and
cmpsb
push
push
lahf
push
lods
dec
dec
jg
xlat
inc
jno
mov
mov
xchg
mov
fistl
add
test
dec
adc
adc
in
test
testb
inc
push
and
test
dec
push
xchg
push
jle
gs
or
pushf
jmp
cmp
jns
add
pop
aad
mov
rorb
xchg
jg
jne
dec
repnz
xchg
incb
hlt
inc
fsubrl
outsl
sbb
sbb
mull
jae
cmp
sahf
mov
jne
popa
aaa
xchg
subb
push
adc
mov
hlt
loopne
mov
jl
outsl
jle
fwait
aas
lods
mov
mov
mov
movsb
es
dec
dec
jle
test
or
roll
mov
sbb
out
xchg
xchg
dec
outsb
stc
jnp
inc
and
jmp
test
cmpsb
out
pop
ficomps
sub
add
arpl
xchg
xchg
bound
xor
mov
mov
pop
adc
mov
mov
jno
xchg
stc
dec
xor
dec
jno
js
add
sahf
movsl
ds
das
push
lahf
xor
daa
js
mov
aas
xchg
cmp
arpl
scas
push
dec
in
lods
lea
out
xor
notb
mov
aad
lea
push
sbb
push
test
lock
mov
hlt
jle
call
cmp
jbe
add
dec
inc
mov
hlt
xchg
or
mov
sub
sub
inc
das
push
push
or
mov
or
out
jecxz
dec
pop
jmp
std
cwtl
xor
aam
setne
aad
aad
jmp
sub
ljmp
notb
addb
xor
sarb
dec
mov
call
pop
push
xor
mov
jmp
mov
and
jno
popa
push
insb
and
push
in
jo
jb
mov
mov
fcompl
mov
test
fsts
and
jno
mov
fistpll
lods
es
cmc
dec
jnp
pop
sbb
mov
sbb
fnsave
pop
mov
mov
mov
pop
scas
aaa
mov
pusha
repz
xchg
fwait
xchg
and
inc
xor
mov
mov
add
adc
push
xchg
inc
push
xchg
int3
fs
dec
lock
loopne
pop
int
repz
cmp
fld
xchg
loope
pop
idivl
and
mov
hlt
jb
pop
push
into
dec
sub
inc
ficoml
lcall
stos
mov
int
repnz
aaa
stc
cmp
loopne
mov
push
stos
aam
jno
jg
lea
hlt
int3
pusha
push
outsb
aaa
pop
inc
xor
mov
mov
pop
jb
cmp
dec
inc
fidivrl
or
adc
mov
mov
out
mov
cmp
std
fidivrl
cmpsb
int
cmp
pop
xchg
jnp
sbb
lret
sub
iret
jbe
xchg
hlt
es
lea
cmpb
cmpsb
inc
jne
inc
mov
cmpsb
popa
push
or
negl
cwtl
aam
and
sbb
fwait
cli
add
pusha
pop
mov
push
add
into
inc
ja
push
cmp
adc
pop
mov
cmpsb
in
mov
jno
leave
pmaddwd
into
push
cmp
and
pop
scas
xlat
lret
outsl
sahf
xorl
pop
push
mov
ss
cli
xlat
sbb
outsl
push
adc
mov
stos
cltd
dec
push
pop
mov
sbb
leave
or
xchg
inc
and
cmp
xchg
scas
loopne
mov
add
cli
cmp
ds
fstp
xor
arpl
jge
xor
push
aaa
ret
push
sub
fs
out
mov
pop
inc
jle
bound
and
xchg
orb
mov
push
repz
ret
leave
inc
mov
aam
jge
int
fldt
mov
cmp
sub
ja
mov
out
insl
shl
lahf
pop
das
lahf
jecxz
mov
cmp
or
out
sub
incb
fdivl
add
or
sbb
mov
push
xchg
je
popa
lds
push
fstpl
sbb
fs
arpl
and
cmpsl
lret
jp
xchg
int
add
sbb
inc
mov
repz
mov
cmp
int
rcrl
inc
jnp
mov
and
rcrb
jb
in
jle
scas
pop
imul
xor
cwtl
test
out
inc
or
jns
sbb
xchg
cld
fildll
adc
out
mov
push
lea
shlb
dec
mov
sub
push
mov
adc
jne
test
xor
loop
and
sti
push
pop
subb
jp
jg
mov
clc
lea
out
dec
repz
outsb
add
lods
arpl
mul
push
ret
sbb
fcmovu
adc
xor
mov
cmpsl
jle
pushf
addr16
icebp
add
add
lahf
and
das
mov
std
sub
insb
inc
inc
flds
sbb
sarb
sahf
pop
pop
cmp
das
xchg
movsl
adc
dec
xchg
add
xchg
stos
jne
mov
mov
ljmp
aam
pop
jnp
ja
inc
push
mov
int3
xchg
jb
mov
inc
daa
pop
push
ss
int
and
fsubs
adc
aad
jae
insb
jg
stos
or
lcall
es
addl
daa
jb
cmp
in
or
dec
mov
sbb
mov
lahf
xor
or
lods
pop
sub
inc
pop
aad
mov
popa
es
sbb
lcall
push
xor
xor
fs
in
aad
in
shll
arpl
sub
lcall
stos
fistpll
lahf
inc
cmp
jmp
dec
push
sbb
sub
dec
leave
mov
inc
dec
add
cmp
xor
push
inc
lcall
pop
je
push
xor
mov
push
adcl
aad
add
arpl
stos
out
jae
lahf
outsb
push
xchg
daa
roll
imul
or
adc
cmp
es
mov
dec
lea
leave
dec
bsr
sub
sbb
cmc
fs
inc
fcmovnbe
or
or
loope
lahf
out
lods
out
dec
mov
leave
xor
add
pop
push
jecxz
fmull
xchg
add
xor
loop
incl
inc
lea
cli
cmpsb
mov
mov
jl
lahf
push
jb
sbb
inc
xchg
sub
jne
pop
out
insl
xchg
sbb
and
stos
pusha
sbb
mov
xchg
and
int3
arpl
or
lcall
movsl
xchg
and
jecxz
int
xor
lods
fcomp
adc
stos
xlat
sbb
insb
paddb
mov
xrelease
mov
arpl
push
in
lds
and
jne
xchg
stos
xor
mov
imulb
dec
mov
insl
sub
inc
cld
fidivl
push
or
inc
pop
out
cmp
pop
loop
or
pop
sar
pusha
fmull
insl
xchg
fsubrp
or
movsl
dec
lods
outsb
scas
int3
imul
repz
les
jecxz
add
int3
je
cmp
loopne
ss
sarl
call
sub
into
out
xchg
add
xchg
lods
aad
inc
jns
repz
lcall
sbb
xlat
int3
jmp
dec
or
repz
push
lret
les
jb
iret
daa
inc
sbbb
ljmp
fs
dec
and
popa
xor
dec
packsswb
mov
ret
jecxz
mov
cmpsb
iret
std
clc
cmp
add
subl
lret
insb
sub
movsl
push
popf
xchg
mov
and
ja
sub
sbb
push
push
test
popa
dec
and
into
jp
orl
jbe
pop
push
xchg
adc
in
fwait
jmp
mov
mov
sbb
jmp
jnp
lods
or
and
mov
nop
xor
push
lea
movsb
sub
sub
loope
xor
push
outsb
fiaddl
pop
sub
sub
mov
jp
sbb
xlat
adc
addr16
jmp
ljmp
fs
cmp
inc
test
lds
xchg
loopne
sub
cmpsl
repz
jbe
cmp
adc
xor
daa
push
pop
orl
popf
jo
pop
popf
mov
mov
icebp
mov
and
pop
movsb
movsl
mov
cs
hlt
mov
lods
inc
pop
stos
out
cmpsb
mov
bound
ret
cmc
mov
mov
mov
sub
lock
fsubl
rcrb
cmp
cmp
movsl
test
lret
pop
ja
adc
pop
sub
addb
mov
std
arpl
and
xchg
mov
scas
push
das
and
add
jl
dec
cmpsb
mull
lret
ss
mov
jecxz
stos
mov
cltd
or
repnz
inc
cmp
xchg
jbe
add
adc
xchg
inc
cmp
and
xor
pushf
das
outsl
test
je
xor
mov
cld
in
test
scas
pop
sti
and
sub
das
movsb
xor
mov
js
cmp
fildl
mov
ds
gs
pop
dec
and
mov
in
mov
pop
xlat
test
call
mov
into
push
pop
sbb
or
pushf
out
lock
pop
cmpsl
mov
sbb
push
push
adc
loopne
les
int3
and
out
inc
incb
test
mov
aas
push
mov
mov
enter
outsb
cli
push
pushf
sbb
adc
repnz
pop
pop
adcb
xor
lahf
gs
imul
or
jns
inc
stc
or
mov
xlat
fwait
pop
mov
jle
mov
or
iret
sbb
and
icebp
int
ja
cmpsl
das
stos
sahf
xchg
mov
mov
pop
shll
mov
movsb
dec
jo
imul
imul
xchg
sti
add
rorb
and
push
xchg
xchg
lds
lea
in
mov
adc
jle
jae
jp
test
addr16
add
jecxz
push
test
xchg
mov
icebp
fisttpll
js
aad
mov
mov
adc
in
push
icebp
aad
sub
cmp
add
push
out
stc
icebp
fisttps
push
mov
sbb
fisttpl
scas
xor
fs
mov
mov
sbbl
pop
sub
dec
and
arpl
adc
stc
mov
popa
insb
roll
adc
pop
icebp
je
mov
mov
sbb
add
jmp
fs
xchg
xchg
cmp
shll
dec
nop
js
popf
jmp
add
xor
mov
pop
mov
cltd
inc
push
xchg
rcr
ret
and
pop
loope
pop
pop
adc
outsl
xchg
xor
test
stc
shlb
leave
lahf
aam
shlb
loope
xor
push
les
rolb
insb
stos
sub
push
pop
ljmp
andl
mov
test
test
in
jmp
jo
pop
daa
fcomi
xlat
pop
jecxz
sub
push
sbb
mov
xor
sbb
mov
cmp
cmpsl
shlb
mov
dec
popf
fists
xchg
adc
loopne
dec
aad
xchg
inc
cmp
outsl
push
jp
sbb
mov
pusha
repz
ror
mov
push
lock
daa
and
push
xchg
enter
sahf
push
sbb
out
pushf
fnstsw
pop
push
scas
xchg
sub
in
and
test
pop
test
outsl
bsr
popf
sbbb
int3
mov
ss
ror
fwait
sbb
aaa
jmp
xchg
adc
cmp
sbb
dec
xchg
xchg
je
and
inc
popa
int
in
mov
pop
lahf
aad
jb
mov
sbb
mov
mov
rorl
add
mov
jns
jb
and
leave
andl
sub
or
sbb
gs
pushf
movsl
xor
arpl
xor
inc
pop
out
xor
push
into
loop
fisubl
aad
mov
sti
jp
test
adc
xorb
popl
add
sbb
xchg
ds
adc
leave
aaa
imul
pop
fsts
ja
lock
in
inc
pop
iret
pusha
imulb
hlt
mov
sbb
out
mov
je
ret
mov
in
pusha
ja
mov
pushf
or
sub
dec
jp
lds
out
fmul
mov
pop
scas
jecxz
rclb
cld
pop
mov
dec
sahf
add
addr16
test
xchg
pop
sbb
ja
mov
stos
sbb
rorl
and
dec
sbb
sbb
xor
sbb
sbb
es
addr16
ja
jge
pushf
ret
xchg
push
sti
sbb
popf
pop
dec
mov
mov
stos
imul
dec
ljmp
push
and
mov
mov
sbb
dec
push
subl
adc
xlat
idivl
dec
push
inc
popa
push
in
mov
push
iret
mov
incl
mov
mov
xor
lret
out
pushl
aaa
and
cmp
scas
inc
sbb
inc
sub
dec
dec
add
lods
jo
imul
xor
fiaddl
fdivl
push
jae
shlb
xchg
mov
test
mov
je
in
push
mov
mov
inc
in
cmpsb
push
xor
adc
in
icebp
and
xchg
jb
inc
dec
out
or
or
sub
adc
aam
js
mov
sub
inc
inc
bt
jne
sarb
or
xor
aas
or
inc
dec
repnz
inc
sbb
or
mulb
test
push
mov
cmp
fs
lret
cli
test
adc
loope
mov
jno
test
in
xchg
add
mov
repz
cmp
fcoml
ja
mov
lcall
pusha
aas
add
jp
push
or
les
adc
jb
jl
push
mov
ret
mov
mov
push
jmp
add
ss
cld
out
jmp
xor
xor
push
add
xchg
into
lahf
rcpps
lahf
cmp
xchg
mov
adc
pop
and
sbb
aaa
cmp
ret
pop
dec
cs
xchg
subl
cmpsb
push
test
shrl
adc
xchg
lea
mov
int3
jge
pop
pop
ret
shrl
outsl
xchg
sbb
shlb
stos
ss
jae
cmp
mov
jmp
popa
jle
scas
fdivs
pop
mov
jecxz
adc
sbb
mov
mov
cmp
sbb
push
mov
imul
div
mov
aaa
mov
add
add
add
xchg
jp
pop
rcrl
add
push
das
test
jmp
mov
into
jno
sbb
jne
sub
pop
in
hlt
repnz
pop
and
popa
xchg
icebp
mov
jmp
fsts
jae
add
mov
mov
sar
dec
xor
lcall
rclb
add
lahf
leave
fmuls
imul
cmp
or
int3
add
hlt
mov
jnp
mov
cmpl
test
in
dec
cmp
push
lods
ljmp
sub
push
out
mov
ja
lret
sbb
lea
les
mov
mov
jbe
arpl
xchg
add
leave
shlb
mov
mov
scas
xlat
scas
and
out
shlb
jl
and
mov
and
pop
inc
jb
mov
cmp
fwait
into
push
jecxz
incb
mov
aas
push
or
ljmp
es
inc
push
push
adc
xchg
scas
push
das
mov
movsb
xor
xor
sub
outsb
ljmp
mov
lret
jns
je
jae
mov
xchg
cmp
in
or
cmp
adc
into
sbb
xor
mov
inc
lods
fcoml
iret
lods
adcb
lahf
pushf
sub
jmp
adc
pop
leave
mov
das
in
mov
mov
scas
adc
xor
push
or
stos
ret
sbb
sahf
fisubrl
cmp
push
sub
and
inc
cmpb
jl
mov
xor
fwait
push
popa
and
sbb
mov
loope
sarb
push
arpl
cld
pushl
mov
xor
mov
pop
add
gs
dec
push
xor
lock
cmc
js
lahf
mov
xchg
adc
xlat
scas
fistps
inc
sbb
jecxz
jae
jnp
je
jge
add
dec
ss
icebp
sub
add
jnp
xor
mov
inc
mov
sbb
loop
sub
jne
inc
scas
jns
mov
lods
fs
mov
push
ljmp
sub
insb
fadds
lahf
inc
pop
mov
pop
inc
pop
or
pop
loopne
add
std
lods
inc
lods
mov
shr
loop
ljmp
idivl
in
bound
jno
cmpsb
pushf
jmp
push
inc
jmp
cmpsb
addr16
lea
aam
jae
cmc
pop
sub
mov
es
jo
pop
insl
sbb
or
sbb
mov
inc
mov
das
adcl
xchg
mov
fwait
adc
xchg
cwtl
cmp
push
cmp
xchg
rcr
dec
ja
es
dec
lahf
push
cmp
pop
int
inc
pop
int
nop
jg
mov
popa
jg
pop
lods
or
test
cmp
insl
jno
and
repnz
insl
xor
mov
imul
aad
pushf
popf
into
cmp
sub
jp
xchg
xor
leave
cmp
data16
or
addr16
pop
pop
jno
adc
mov
or
pop
cmpsb
in
lds
cltd
cmp
xchg
jecxz
mov
mov
lahf
push
out
movsb
pop
jno
sbbl
mov
test
test
bound
mov
daa
add
pop
testl
fidivrs
adc
in
arpl
out
arpl
mov
inc
leave
scas
or
dec
sub
inc
fiadds
mov
out
pop
mov
fst
sti
inc
dec
jns
xchg
lahf
cmp
lock
stc
xlat
sbb
and
add
fistps
test
pop
shrb
mov
test
cmpsb
sbbl
stos
dec
inc
inc
es
mov
rorl
int3
jo
pop
push
cmp
es
das
fstpt
pop
sbb
mov
test
push
pop
loopne
test
in
in
out
lods
into
std
jnp
stos
mov
mov
pop
das
or
lahf
and
or
cmp
loopne
aad
push
fmull
int
jb
cmc
pop
and
jb
push
pop
xchg
and
loopnew
cwtl
aam
ds
cmp
movsl
pop
rorb
xor
add
cmpsb
int3
stc
mov
jp
aam
push
pop
int3
in
push
cmp
jmp
add
xchg
mov
xchg
jo
insb
cmc
mov
int
inc
push
mov
call
xchg
push
jns
subb
xor
rcr
stc
adc
sti
test
adc
xchg
xor
sub
jo
aas
mov
scas
sbb
mov
sbb
cmc
roll
shlb
pop
mov
or
cmp
in
lahf
testb
loop
daa
xor
mov
scas
insb
push
xor
rorl
pop
clc
ss
xchg
in
xor
mov
jp
shrb
repz
add
mov
pmaddwd
mov
add
mov
das
jg
lods
orb
stos
frstpm(287
ss
les
rorb
mov
fincstp
xchg
cmp
jecxz
mov
push
mull
cmp
xchg
cld
nop
jno
insb
mov
add
leave
jo
daa
dec
test
shll
adc
ficomps
or
sub
pop
inc
aad
and
mov
cmc
addb
xchg
repz
mov
jno
loopne
out
das
dec
mov
mov
scas
in
out
sub
adc
xchg
addr16
pop
out
cmp
or
sub
and
pusha
stc
and
inc
mov
insb
jns
sbb
and
popa
dec
ljmp
cwtl
mov
in
and
loopne
sti
xchg
dec
fmuls
sub
xchg
xchg
inc
mov
imul
jmp
push
dec
mov
jle
inc
mov
test
pop
and
add
sbb
loope
push
aaa
adc
push
push
ds
popa
mov
lcall
sbb
adcl
ja
les
lret
rcrb
cmc
sbb
mov
adc
adc
jno
add
jl
mov
jmp
sub
pop
adcl
cmpsb
loop
loop
xor
orb
orb
fidivrl
sub
jae,pt
push
stc
xor
dec
in
xlat
test
in
jns
cmpsl
mov
mov
xchg
sbb
test
mov
mov
sub
aaa
fdivl
ja
push
sbb
bound
pop
lea
lahf
or
push
fidivrl
insl
add
icebp
jbe
inc
outsl
adc
mov
adc
loope
sub
aad
xchg
sbb
test
adc
loop
cmp
dec
aad
cwtl
call
sahf
je
cs
test
pop
xor
test
xor
insb
jmp
mov
add
mov
iret
mov
in
pop
enter
sbb
mov
movl
mov
push
dec
adc
push
ljmp
stos
lahf
cmp
add
jbe
and
xor
nop
andl
jns
out
jle
mov
out
jg
push
add
pop
xchg
cmp
inc
pop
pop
pop
pop
cmp
in
out
cmp
cmp
dec
movsl
lahf
or
mov
xchg
jno
stos
std
imul
lea
icebp
mov
addr16
arpl
sub
fsub
in
lcall
mov
inc
leave
ds
imul
mov
or
iret
sbb
push
or
xchg
out
push
mov
pop
gs
call
lahf
cld
stos
movsb
stos
pop
movsl
ret
lcall
xor
insl
ds
jne
dec
push
stos
jne
push
out
jmp
adc
js
mov
shll
mov
jmp
mov
repz
int
outsl
add
shrl
pop
jns
int
inc
cmp
and
lea
push
sbb
ja
lea
ret
mov
push
cmp
jae
jno
out
arpl
ljmp
push
cli
sub
je
ss
imul
pop
idivl
xor
fisttpl
cmpsb
lock
rolb
not
sub
movsb
mov
add
pushf
out
fstl
mov
push
mov
out
mov
test
rolb
arpl
mov
xorl
sub
mov
jne
adc
repnz
pop
mov
fwait
push
pop
jo
in
sub
sti
jns
outsl
jp
arpl
cmpsl
fisubl
test
icebp
dec
jae
scas
jno
mov
pop
jg
push
lods
lahf
or
loop
push
sbb
insl
ljmp
mov
xchg
int
sub
mov
movsl
xchg
insl
xchg
or
jge
cmpsl
pop
or
sbb
push
cmp
enter
inc
push
dec
inc
xchg
daa
mov
popa
lcall
inc
mov
aas
mov
addr16
lret
pop
fsubr
inc
sbb
fdivs
cli
or
rorb
repnz
or
pop
data16
stos
mov
lods
cmp
add
scas
pop
lods
mov
repz
xchg
add
arpl
push
jbe
push
ss
out
cmp
aad
jp
lock
jb
sti
adc
mov
xor
mov
shrl
mov
cli
stc
testb
nop
sbb
mulps
and
rol
inc
mov
es
mov
in
jae
pop
test
divb
sub
xor
imul
ret
dec
std
sarl
inc
lahf
cltd
jg
sbb
mov
jmp
loop
icebp
adc
outsb
jecxz
mov
mov
jbe
xor
mov
sar
out
jne
or
push
inc
jne
mov
cmp
jnp
mov
in
xchg
sahf
dec
jae
mov
cs
lret
inc
dec
stos
xlat
insb
int3
mov
sbb
clc
bnd
push
aam
shll
mov
adc
popf
pop
addr16
cmp
xor
loop
cld
mov
outsb
call
repz
jmp
addr16
or
mov
out
test
xor
sbb
mov
pop
imul
xor
aad
xchg
into
xor
push
js
push
fisubrl
mov
xor
add
pop
lock
test
jge
ja
sbb
into
dec
fs
mov
push
xor
call
xchg
sbb
or
lds
and
or
nop
dec
cmc
mov
mov
jns
js
and
hlt
adc
fistpll
mov
test
ret
in
aas
jae
in
or
xchg
cmc
call
and
sub
cmpsb
mov
fistpl
outsl
cmc
fwait
jne
mov
mov
xchg
lahf
pop
sbb
subl
adc
sub
pushf
push
jg
jno
push
mov
repnz
outsb
mov
xor
test
das
les
xchg
je
jno
pop
push
in
fimuls
int3
out
push
pop
pop
sbb
push
sbb
dec
jne
and
mov
pop
test
sub
pop
sub
jns
fidivrl
sbb
in
outsb
mov
ret
mov
icebp
push
mov
inc
push
out
mov
fldl
sbb
imul
pop
sub
pop
popa
stc
dec
in
pusha
out
loope
mov
sub
cmp
cmp
ficoms
scas
fadds
lret
xor
mov
xchg
xor
stc
inc
xorb
aas
adc
pop
int3
cmp
aaa
mov
push
fnop
gs
push
jmp
jmp
add
adcb
mov
adc
nop
or
sub
adc
jp
xor
mov
pop
xor
dec
das
mov
or
xchg
sbb
mov
test
cmc
inc
and
add
movsl
mov
mov
add
mov
mov
push
sub
idivb
adc
push
imul
sub
dec
dec
scas
or
pop
jg
divb
fucomp
out
push
lds
pop
lock
and
nop
lods
jmp
adc
xchg
lds
hlt
add
in
movsl
sub
push
popf
xchg
sub
aam
mov
out
inc
adc
daa
jle
sbb
int3
bound
mov
xchg
pop
aad
out
ds
movsb
cmp
mov
mov
iret
fcmovnbe
dec
mov
mov
bound
sbb
fnstcw
fwait
mov
mov
sbb
insl
pusha
jnp
xor
lret
cmp
aaa
imul
pop
movsl
jb
insl
cmp
rol
adc
cmpb
jmp
pop
sub
addr16
push
mov
xchg
dec
pop
lret
mov
add
push
pushf
subl
xchg
lret
xor
scas
jne
jo
aam
push
fbld
int
int
mov
call
in
shr
ljmp
xor
jb
mov
rorl
add
sbb
add
scas
mov
xchg
stos
jo
pop
inc
add
inc
das
sbb
outsl
ret
sbb
mov
dec
inc
aaa
push
push
cmp
xchg
xchg
or
adc
add
push
int
pushf
pop
and
pop
xchg
cs
add
popf
mov
sub
sbb
ljmp
mov
mov
mov
ficompl
movsb
fs
inc
ficoms
or
aaa
sub
push
xor
dec
rorb
outsb
in
es
pxor
repz
add
imul
rorb
sub
pop
enter
movsl
lret
out
or
les
mov
xchg
dec
stc
adc
imul
adc
pusha
mov
test
sub
repz
pop
ja
lret
fcomps
push
or
movsl
inc
cmpsl
call
in
sahf
inc
mov
mov
psignb
inc
mov
stc
mov
sahf
mov
outsb
and
lret
and
inc
fbstp
lret
mov
js
loope
cmp
repnz
jbe
cmp
mov
pop
and
push
push
aad
lahf
adc
adc
xor
in
orl
or
dec
stc
mov
inc
jg
xchg
pop
cmp
sbb
jmp
stos
out
mov
fnstenv
pop
cmpsb
xor
pushf
pop
sbb
pop
mov
scas
ds
xchg
std
test
xchg
cmp
inc
bound
jae
addr16
pop
xchg
aam
rcrb
dec
sbb
cld
or
daa
dec
addr16
shlb
andl
sub
pop
mov
add
xor
dec
ja
jno
pop
inc
xor
jmp
mov
pop
fnstsw
add
and
repz
sbb
fs
jns
adc
dec
insb
dec
lahf
out
cmp
mov
xor
cmp
xor
adc
imul
fldenv
std
pop
cmp
out
push
iret
jp
mov
mov
cmpsb
lds
cmpsl
jmp
dec
sti
cmc
sbbl
cli
xchg
cmpsl
ffreep
js
xor
ret
inc
jo
inc
mov
call
dec
jns
test
pop
add
sti
mov
adc
cmp
gs
mov
dec
cmp
call
bound
sbb
mov
and
inc
and
clc
sbb
aad
jg
ret
ljmp
inc
sbb
mov
rcll
out
lds
loope
and
xchg
fnsave
mov
push
cmpsl
insl
sub
sub
push
loopne
loopne
pop
xchg
xchg
rorl
ja
call
xor
sub
mov
xor
decb
test
out
adc
addr16
fsubrl
out
cmpsb
lret
hlt
fisubs
xchg
fsubl
scas
imull
lahf
mov
xor
push
jne
or
push
push
mov
mov
nop
push
fmuls
enter
mov
fcmovnb
out
xchg
shll
jmp
das
or
es
insb
xor
jno
push
imulb
mov
push
mov
pop
into
data16
or
mov
dec
shrl
int
lcall
in
mov
or
les
pop
outsl
mov
nop
inc
flds
adc
push
bound
aaa
stos
sub
inc
test
xchg
pop
mov
in
push
cli
jbe
in
in
mov
inc
pop
je
lcall
or
add
inc
jae
pusha
ret
jge
popf
fwait
push
popf
rolb
fs
ss
imull
or
cld
cs
jne
sbb
or
xchg
xor
or
add
out
cmp
in
xchg
loope
jo
test
sbb
mov
dec
xchg
nop
sbb
or
inc
add
xor
jno
adc
stc
mov
out
add
mov
inc
cld
mov
jo
push
ret
xchg
outsl
insl
test
sarw
xchg
mov
mov
sbb
dec
mov
out
or
aaa
mov
sahf
jge
adc
push
dec
int3
xor
in
push
repz
repz
sub
lcall
test
jbe
cld
dec
gs
cmp
dec
dec
mov
xchg
adc
fcmovu
in
add
mov
sub
pop
or
xlat
stos
mov
movsb
stos
mov
dec
pop
mov
addr16
sub
ret
test
add
sub
testl
fisubl
lcall
sub
movsb
mov
cmp
mov
inc
hlt
and
xchg
test
dec
mov
push
fisttps
mov
clc
inc
sbb
inc
popa
inc
std
fildl
ja
loop
in
popl
xor
cld
sti
imul
lock
fisubrl
stos
inc
fisubs
jo
pop
test
out
loop
arpl
pand
mov
jge
add
gs
adc
clc
les
dec
addr16
test
enter
cmp
lock
mov
pop
jbe
das
out
adc
dec
cltd
and
pusha
sub
xor
fldl
push
xchg
cmpl
imul
aam
or
jge
stos
mov
movsb
shl
sbb
jne
mov
and
or
sbb
sahf
mov
test
mov
dec
popa
fsub
ljmp
sbb
dec
or
lret
sub
cld
scas
mov
xor
inc
imul
test
cltd
inc
push
ljmp
sub
cmp
add
arpl
mov
mov
out
and
icebp
mov
push
in
mov
and
inc
cmp
pop
les
dec
add
push
mov
loop
adc
lods
add
aaa
sarl
push
mov
xorl
loopne
ss
test
stos
dec
les
and
stos
sub
mov
out
or
pop
adc
sar
inc
and
xor
xchg
ret
dec
mov
out
in
cmp
and
push
andb
out
and
das
movsl
xchg
add
aaa
push
arpl
pop
jg
arpl
and
xchg
mov
iret
dec
insl
test
lods
xchg
inc
jmp
ja
or
jae
fadds
int
mov
pop
cltd
xchg
cmp
repz
sahf
mov
lea
xchg
andl
mov
inc
push
hlt
mulb
pop
popf
sbb
or
pop
sbb
ss
std
sub
cmp
repz
cmp
ja
xchg
or
cmp
sbb
loopne
js
leave
in
gs
adc
push
stos
mov
dec
div
test
ds
cli
pop
test
push
sahf
sbb
or
push
fxch
dec
loopne
xorb
pop
add
push
cmpsl
mull
xchg
ljmp
sahf
dec
jo
mov
das
xor
mov
mov
mov
lahf
mov
stc
cwtl
cmp
inc
xor
and
scas
jnp
mov
ficoml
inc
out
mov
mov
and
mov
test
xchg
jo
xchg
jl
cs
stos
push
hlt
out
push
and
xchg
mov
leave
enter
inc
int
cmp
push
sbb
xchg
sub
xor
scas
pop
mov
jmp
int3
add
cmp
in
jg
in
ret
insb
push
clc
les
xchg
int
mov
push
in
and
rcl
mov
out
mov
shlb
mov
mov
push
rcrl
insb
pop
inc
mov
sbb
lods
test
clc
adc
mov
fcoms
inc
dec
mov
sbb
xchg
rcl
in
pop
inc
adc
inc
lcall
dec
je
push
addr16
and
stos
fldl
dec
adc
jno
pop
arpl
std
setl
loop
lea
lcall
in
fwait
imul
leave
js
sbbb
sbb
mov
xorb
push
dec
test
xlat
movsb
mov
lret
dec
sbb
int
cwtl
lret
ljmp
xor
dec
inc
das
sub
popf
jnp
fdivs
pushf
pop
push
sbb
clc
jmp
add
rolb
fnsave
add
xor
inc
popf
jecxz
jle
sbb
push
cli
push
xchg
insl
icebp
outsl
pop
jle
cmpsl
and
and
sahf
lahf
mov
ret
test
lock
aam
dec
or
xchg
push
fucom
add
outsb
cmpsl
pop
int
outsb
fsubr
andps
sbb
jecxz
xchg
xor
fidivl
daa
rolb
mov
jl
xchg
fcmovnb
mov
scas
cmp
cmp
xchg
cmp
hlt
and
out
lret
adcl
xchg
pushl
jmp
cmp
mov
in
dec
jnp
lret
addb
rolb
mov
js
xchg
cmp
pop
mov
pop
addl
push
mov
add
or
subl
xor
xor
adc
fucomip
pusha
fcmove
loopne
cmp
dec
dec
pop
fnsave
xor
movsl
pusha
outsl
outsb
rclb
lea
call
sub
js
nop
fcompl
mov
test
xchg
popf
insl
dec
ret
xchg
adc
js
and
jle
cmpsb
call
inc
insb
sub
sahf
push
in
cmpb
lret
sub
and
mov
xor
mov
fiaddl
loop
inc
faddl
xlat
mov
adc
mov
frstor
and
sbb
pusha
rcrl
lret
mov
adc
xchg
mov
mov
adc
addl
mulb
push
insl
gs
mull
shl
jp
cmp
jno
mov
xor
fmuls
aaa
sbb
inc
test
movsl
adc
and
pop
jg,pn
pushf
dec
sahf
push
test
or
mov
mov
pop
and
pushf
mov
mov
cmp
sbb
dec
push
sbb
scas
xchg
dec
movsb
push
test
or
push
loope
daa
mov
push
xchg
iret
adcl
loop
pushf
push
insl
pop
xchg
subl
addr16
repz
mov
aam
pusha
sbb
andb
shl
stos
scas
fmull
cmpsb
mov
pop
jno
cmpsl
mov
es
rclb
mov
mov
imul
adc
xchg
int
out
out
loopne
ret
jp
cmp
or
push
adcb
subl
pop
call
dec
sahf
out
push
movsb
and
ljmp
pop
mov
pop
dec
mov
pop
push
xlat
or
add
mov
ret
shl
adc
addr16
lods
pop
cmp
test
lcall
fistps
cmp
imul
shll
arpl
mov
stc
fwait
and
rep
stos
insl
push
sub
arpl
xor
lcall
and
clc
aam
push
pop
fsub
and
popa
mov
mov
xchg
dec
xlat
adc
stc
mov
cmp
das
maxps
iret
mov
sti
mov
jbe
add
and
notl
dec
psubsb
mov
mov
mov
mov
inc
test
ffree
js
adc
int3
xchg
int
xor
dec
in
dec
cld
xchg
mov
inc
dec
lods
insb
incb
sbb
lea
add
inc
test
shl
popf
mov
int3
jnp
sbb
mov
testb
jmp
cwtl
std
jle
jl
fs
popa
stos
jp
fwait
scas
dec
pop
xchg
inc
fs
iret
adc
loopne
sub
add
xor
std
aam
push
movsb
jp
test
int
add
insl
test
repz
add
add
mov
jno
or
pusha
xchg
xchg
and
push
int3
xchg
inc
cmpsl
in
and
outsb
pop
movsl
xchg
and
xchg
add
lods
icebp
push
mov
dec
daa
add
leave
lods
mov
push
mov
data16
test
bound
xor
fsts
or
inc
mov
adc
fistpll
loope
shll
jle
je
mov
cltd
in
or
scas
dec
xchg
inc
test
test
daa
push
mov
divb
xor
movsl
cli
pop
xlat
in
xchg
lods
or
mov
xor
int3
jne
push
inc
xchg
in
sub
adc
or
loope
loope
lret
cltd
xor
mov
mov
loope
insb
cmpl
ljmp
mov
or
push
inc
lret
sarl
lock
stc
ds
repz
xchg
sahf
js
xchg
test
out
imul
stos
in
sahf
sub
jge
scas
cmpsl
mov
insb
stos
jecxz
icebp
xchg
push
dec
inc
jo
lds
fisttpl
lret
daa
scas
repz
insb
pop
pop
pop
inc
or
adc
cwtl
jno
pop
lock
out
jae
arpl
push
paddusb
aas
fisubrs
adc
jg
testb
fadds
pusha
mov
mov
inc
imulb
cmp
mov
mov
jo
cwtl
cltd
push
jp
adc
in
push
push
mov
repnz
cmp
imul
fnstcw
sbb
mov
shrb
sub
cltd
je
imul
lcall
test
jecxz
aas
jg
arpl
subl
das
sub
mov
xchg
icebp
pop
push
xchg
shlb
scas
pop
and
inc
jle
scas
in
data16
repz
gs
cmp
or
mov
nop
enter
pop
sub
xchg
mov
xchg
daa
lods
mov
mov
aas
lea
pop
out
dec
and
adc
in
fistpll
adc
sbb
mov
xor
push
inc
js
xor
add
jmp
sbbb
inc
pop
xchg
pop
jge
mov
xor
aam
xchg
cld
pop
insl
cmp
sbb
push
pushf
mov
push
roll
dec
sbb
adc
xchg
dec
dec
sbb
add
hlt
push
push
ret
imul
push
mov
mov
aam
mov
and
movsl
jb
inc
lahf
in
out
sub
mov
scas
push
and
insb
jns
mov
lods
sbb
sub
sub
aas
or
lret
pop
xor
jmp
push
out
shr
call
jge
pop
pop
ss
out
pop
sarb
cld
sub
leave
out
leave
jae
or
dec
cli
jns
dec
lret
repnz
aam
inc
adc
in
sbb
clc
in
dec
aaa
roll
out
cmp
lea
bound
jl
ret
xchg
jp
lret
leave
fnstcw
iret
cmc
push
cmp
dec
xchg
mov
shl
adc
push
push
push
cld
out
leave
xor
push
loope
push
icebp
mov
inc
pusha
xor
lret
lcall
mov
inc
pop
mov
push
test
pop
lods
push
shlb
jnp
fimuls
xchg
mov
xchg
js
data16
mov
daa
mov
pop
out
and
and
inc
jge
cmp
cmpsl
in
pop
pusha
or
mov
sub
outsb
cmp
mov
dec
xor
mov
pop
sub
repz
inc
mov
mov
punpcklbw
out
rcrb
lahf
fcom
out
add
cmc
inc
cmp
push
and
popa
sbb
movsl
jbe
inc
mov
mov
pushf
mov
push
add
and
imul
aaa
cli
inc
popa
loopne
loop
or
mov
test
xchg
push
or
shl
das
inc
pop
lds
ret
adc
addr16
pusha
sbb
clc
sarb
xchg
sbb
lahf
dec
fwait
in
dec
push
rorb
jle
adc
inc
mov
lods
mov
fwait
inc
jmp
jmp
not
movl
push
or
out
inc
sub
mov
fisttpl
jg
decb
xlat
fdivr
adcb
inc
jns
stos
enter
adc
sub
ret
sub
es
into
push
sahf
leave
add
clc
pop
pop
cmp
push
pop
mov
dec
cmpsl
add
sub
outsb
insb
es
inc
cmp
into
xor
pushf
fs
mov
jnp
mov
inc
push
shl
mov
mov
sbb
cwtl
stc
fldcw
or
xchg
push
mov
leave
adc
fs
in
aas
xchg
jge
lahf
sub
dec
orl
fdivrl
jg
into
js
jle
push
mov
cmp
sahf
cmp
fmuls
rorb
das
pusha
into
add
jmp
das
xchg
subb
aas
mov
xor
int3
pushw
mov
and
mov
orb
mov
jne
and
sub
mov
or
scas
ljmp
pop
sbb
add
xchg
in
xor
int
aas
jo
push
sub
xor
js
mov
adc
cmpsb
push
dec
xchg
out
dec
add
or
ret
and
adc
fstps
xor
push
cmpb
out
iret
test
or
les
mov
cmp
add
jg
shrl
mov
lahf
dec
or
mov
mov
add
push
inc
addl
cmp
mov
dec
aam
jns
or
ds
mov
pop
dec
sarl
push
mov
and
xor
cli
fwait
mov
iret
mov
jno
ror
or
aas
aad
mov
pop
fmul
mov
lret
cwtl
dec
or
push
add
dec
sub
dec
push
mov
adc
mov
dec
push
mov
insb
test
test
dec
dec
pushf
fldenv
mov
mov
out
and
scas
clc
imul
sub
movsl
sbb
push
push
or
imul
in
dec
jge
xor
popf
loope
rcrl
pop
scas
ljmp
stos
pop
sub
jo
xor
test
mov
lock
jp,pt
ret
sub
lods
jne
pop
jns
das
push
lret
adc
dec
mov
cmp
push
pop
stc
pop
inc
cmc
push
add
dec
cmp
pop
adc
xor
jmp
fsubs
jmp
push
adc
fwait
or
stos
fld
xchg
pop
sub
out
jmp
scas
and
idiv
xor
subb
aam
push
cmp
inc
repnz
mov
xchg
insl
cmpsb
addr16
pop
add
movsb
jns
cmp
sbb
sub
out
and
ds
orl
pop
repnz
adc
add
notb
dec
and
dec
pop
movsb
jns
jno
and
mov
fnstsw
int3
mov
mov
pop
push
cmp
mov
push
pop
sbb
add
lcall
test
mov
dec
pop
adc
cmp
dec
or
sbb
cmp
lods
xor
add
out
jg
xchg
fcoml
pop
mov
pop
xchg
pop
mov
icebp
addr16
rorb
inc
push
aam
cmp
pop
and
lcall
movsb
ljmp
jns
push
mov
outsb
add
fdivrl
jbe
fistpll
mov
dec
shrb
or
data16
mov
cs
in
ja
and
sbb
mov
pop
dec
mov
jmp
xor
mov
ficomps
sbb
js
xchg
xchg
push
xor
movsb
jnp
repnz
mov
and
xchg
xor
and
test
xor
test
dec
ss
in
xchg
pop
add
jb
inc
and
aam
addr16
mov
push
ret
in
mov
cmpb
mov
cmpsl
std
xchg
cmp
dec
xor
jb
std
or
cld
movsl
pop
repnz
sub
xchg
adcl
ljmp
and
dec
pop
push
adc
push
enter
xor
popf
mov
enter
decb
cmp
ljmp
mov
insl
movsb
mov
dec
dec
or
jae
gs
or
mov
sub
das
sti
jg
jno
addb
jmp
int3
adc
fstpl
out
lods
rcll
arpl
jecxz
mov
insb
fmuls
imul
and
movsl
push
testb
xchg
pushl
pop
jae
xchg
lcall
popa
mov
push
mov
mov
and
ja
xor
push
lea
out
cmpl
mov
lea
add
repnz
jbe
mov
movl
stos
push
and
sbb
lret
dec
jp
xchg
push
outsb
subb
adc
popa
and
jbe
sbb
adc
ljmp
incl
out
push
lcall
out
pop
dec
lahf
pusha
mov
popf
jecxz
sbb
jecxz
mov
insb
pop
shll
mov
pop
push
sbb
or
jne
xchg
int
in
out
push
sbb
mov
or
inc
mov
lock
mov
inc
push
test
imulb
call
mov
outsb
cmp
lock
repz
or
sbb
scas
adc
adc
cmp
mov
mov
repnz
xor
jae
addr16
mov
loope
aaa
push
test
loop
sbb
push
cmp
test
fdivrl
mov
fsubs
jns
test
lock
sbb
das
je
pop
mov
test
stos
jmp
push
lret
fucomip
rorl
mov
ds
add
adc
adc
aam
ss
je
lds
out
jmp
imul
and
push
ret
movsl
ljmp
sub
ljmp
inc
jno
movsb
shr
dec
das
faddl
cmc
adc
sub
sbb
mov
test
lea
aas
pop
ret
jge
stos
movsl
push
add
dec
push
rorb
push
fldt
xchg
out
stos
je
mov
sbb
or
cmp
xorl
outsb
in
xchg
push
xchg
jno
scas
xor
andl
js
push
sub
xchg
shl
fmul
mov
jl
clc
hlt
mov
stc
push
push
pop
je
lock
cmp
or
push
inc
ret
imulb
adc
into
jp
les
loopne
dec
mov
movsb
xor
adc
jecxz
mov
and
pop
lret
call
bound
dec
dec
js
jg
fisubs
repnz
dec
repnz
push
daa
cltd
jno
pop
dec
sbb
pop
cmc
cmpsl
addr16
inc
scas
repnz
in
adc
sti
shrl
pop
lahf
aam
inc
mov
fadd
jg
mov
lea
add
js
pop
cmp
or
xchg
out
push
sub
fdivrs
outsl
imul
push
pop
cmp
loopne
ret
sbb
inc
lods
lock
mov
arpl
inc
in
popf
or
inc
std
shrb
add
dec
stos
inc
stos
in
sbb
dec
adc
movsl
cmpsb
sahf
xor
movsl
mov
into
je
cmp
dec
lods
prefetchwt1
mov
and
push
cltd
sub
lcall
mov
outsb
mov
dec
stc
push
lods
mov
insb
jl
ja
adc
pushf
mov
pop
add
lcall
inc
js
scas
xor
sub
lcall
jl
push
nop
ficoml
cmpsb
push
inc
inc
ja
pop
or
cmc
pop
std
xchg
pop
xor
fwait
push
inc
lcall
negb
das
aas
mov
xor
push
mov
mov
scas
jae
xor
adc
mov
xchg
mov
jmp
sub
iret
add
mov
xchg
add
popa
mov
push
mov
div
adc
arpl
imul
jl
sbb
popa
mov
test
mov
mov
cld
cli
sbb
adc
add
data16
fiaddl
push
aam
cmp
movsb
push
nop
xchg
mov
das
sbb
loope
push
inc
fisubrs
dec
inc
inc
cmp
fxch
pop
mov
xor
movsl
dec
pop
cmp
or
sbbl
movsb
pop
or
pop
leave
out
pand
or
aas
pushf
xchg
test
mov
out
or
mov
adc
lds
push
dec
hlt
lcall
xchg
xor
jae
out
and
push
inc
fs
inc
dec
test
jne
imul
std
mov
push
sub
mov
popf
movsb
fadds
or
xor
or
adc
loopne
ret
test
mov
push
cltd
inc
outsl
loopne
pop
lock
decl
ljmp
or
daa
test
inc
or
add
jmp
mov
cmp
shrl
repz
filds
adc
shl
lds
cmp
adc
leave
jge
mov
mov
xchg
lret
popa
leave
dec
out
stc
push
cwtl
cmp
loope
add
cld
les
shll
icebp
push
lea
sub
push
push
lds
mov
push
movsb
sbb
into
rolb
fbld
iret
pushf
jbe
mov
shlb
sub
hlt
orl
jl
add
cmpsb
mov
push
and
mov
or
xchg
push
cltd
loop
pop
cltd
dec
shl
imul
push
mov
loopne
xchg
popa
das
rorb
mov
inc
jb
push
imul
dec
jbe
cwtl
jmp
or
negb
push
enter
adc
pop
frstor
add
sub
stos
lahf
sbb
shlb
rclb
fistps
les
rolb
adc
push
push
or
call
xchg
mov
lcall
outsl
mov
out
mov
es
pop
insl
lods
or
push
lcall
data16
pop
xchg
add
lock
jl
push
jae
jge
lods
outsl
sbb
pop
jle
sub
bound
enter
ljmp
cmc
repz
roll
out
and
inc
cld
stos
leave
or
test
sbb
outsl
das
add
cmp
xor
aam
jae
movsl
add
aas
xor
repnz
pusha
hlt
rcrb
jne
pop
push
test
out
hlt
daa
test
sahf
fstl
out
aaa
dec
xor
jno
outsb
ret
addl
movsb
and
scas
lahf
lcall
mov
es
out
push
lods
inc
jno
mov
xchg
ja,pt
xchg
cli
xor
fistps
scas
jl
or
cmp
mov
inc
xchg
scas
jp
mov
pop
jecxz
cmp
aam
mov
ret
into
dec
and
push
fstps
dec
loop
and
inc
and
addr16
jbe
pop
call
aas
enter
cmp
sub
mov
xor
xchg
test
scas
leave
xchg
iret
fisubrs
les
enter
fnstenv
into
or
add
xor
and
pop
sub
xchg
jge
pop
xor
int3
fs
stos
test
cmc
cwtl
jg
mov
jecxz
test
mov
sahf
out
ret
pusha
stos
jle
dec
xchg
imull
decb
push
adc
fimuls
mov
pushf
jg
gs
or
pop
jb
dec
test
shlb
jp
push
daa
out
sbb
pop
jno
scas
xor
test
and
and
jne
mov
out
out
or
xor
xchg
add
js
xchg
imul
mov
jp
sub
outsl
leave
ret
mov
int3
outsb
xchg
sub
mov
lret
fnstenv
rcl
jb
pop
cmpsl
in
lods
sbb
aas
mov
mov
xchg
popf
add
repz
ror
lock
push
pop
in
jecxz
fstpt
push
xor
subl
or
test
in
sub
es
es
xchg
mov
add
pop
shll
mov
js
jne
mov
popa
pop
outsl
ret
adc
sbb
jno
pop
in
sarl
shl
inc
mov
sbb
pop
daa
xchg
jo
test
sbb
cmp
cmp
push
jno
jmp
loope
mov
sbb
mov
and
iret
hlt
sahf
loopne
and
and
fwait
push
outsb
stos
pushf
push
stos
or
sbb
mov
cmpsb
mov
ljmp
dec
cltd
out
mov
jbe
aaa
and
imul
arpl
inc
lods
leave
les
out
int
out
push
pop
xchg
sub
xchg
insl
aaa
cltd
rcll
mov
insl
push
ds
adc
lcall
mov
mov
xchg
mov
rcll
sti
cmpsl
mov
popf
in
pop
fldt
push
adc
mov
ds
inc
ret
inc
sti
stos
cs
cmpsb
outsb
popa
in
in
xchg
sbb
push
jbe
mov
rolb
and
fsubs
adc
push
or
rcrl
call
dec
loope
int3
popl
cwtl
mov
bound
ret
fwait
cltd
mov
pop
cmpsl
ss
test
int
test
cmp
pop
stc
lea
cmp
cmp
jne
stos
fstl
shlb
leave
add
stc
xor
adc
out
jle
out
insb
dec
hlt
fbstp
nop
iret
dec
sub
pop
dec
mov
jp
lahf
jmp
sbb
arpl
daa
clc
xchg
out
jge
insb
mov
add
in
mov
mov
adc
xor
lcall
out
xchg
mov
adc
je
inc
push
push
lock
mov
aad
adc
lods
test
shll
xor
lahf
sub
sarl
jns
pop
adc
inc
sbb
int
scas
jnp
jl
push
sub
or
jge
imul
out
mov
icebp
jecxz
aaa
and
and
test
push
cmp
int
inc
xor
jge
fadds
pop
roll
mov
das
imul
pop
xchg
sahf
jae
mov
iret
and
test
mov
pop
and
cmp
or
std
gs
dec
faddp
mov
cmpsb
inc
movsl
mov
movsl
lahf
inc
sub
mov
pop
cs
lret
mov
testl
lcall
or
push
mov
lods
je
cmp
inc
inc
and
mov
jmp
jns
jp
push
pop
or
nop
push
scas
fwait
inc
push
xchg
or
adc
jns
pop
adc
lea
push
popa
test
das
add
mov
mov
ds
andl
xchg
sahf
cli
out
lea
push
fistpl
or
arpl
sbb
mov
arpl
mov
loope
inc
cld
and
mov
sbbl
sub
cmpsb
sbb
jecxz
les
jl
je
outsb
loope
mov
cld
incl
xorb
out
std
lret
out
lcall
rolb
fiadds
push
fistl
data16
mov
testb
mov
sub
ds
ds
xchg
and
and
iret
xchg
sbb
sbb
ret
into
leave
aam
rclb
xchg
pop
mov
adcb
mov
enter
loope
jecxz
xchg
icebp
ficoml
jge
add
nop
mov
loope
adc
xlat
movsl
xchg
xchg
movsb
sub
call
push
jno
ret
shrb
sub
or
test
adc
les
mov
scas
popl
pusha
dec
js
loop
pop
pop
test
mov
cmpl
dec
jg
data16
divl
negb
lea
mov
add
pop
jp
adc
inc
jmp
mov
imul
ds
xor
loop
inc
jno
jmp
sbb
xor
outsb
bound
imul
jg
mov
sub
ljmp
inc
sbb
pop
push
mov
sbb
movsb
sti
pushf
js
and
mov
jae
addr16
ret
cwtl
pop
jbe
xor
sbb
or
mov
in
sbb
mov
repz
pop
push
cmpb
andb
xchg
pop
mov
hlt
mov
pop
inc
ja
dec
imul
or
or
cmp
jecxz
insl
pop
loopne
mov
call
lods
sbb
pop
leave
lds
test
mov
mov
cmp
pop
sarl
adc
sbb
sub
icebp
pushf
jns
mov
push
xor
fildl
mov
repz
dec
call
lods
dec
and
jne
faddl
inc
inc
fs
mov
leave
mov
push
pop
push
mov
add
arpl
mov
push
inc
xchg
int3
push
shrb
scas
out
or
mov
jl
jle
inc
in
movsb
and
cmp
lret
aam
rcr
iret
dec
adc
pop
gs
das
sti
rcll
lret
fidivs
test
adc
pop
xchg
sbb
cli
sub
push
or
aas
dec
push
pop
in
add
inc
adc
in
stos
repz
imul
inc
sbb
enter
movb
jns
scas
insl
or
add
and
dec
sub
imul
xor
out
pop
mov
lahf
lcall
fistpl
sub
mov
sbb
mov
lea
sarb
test
push
sub
mov
add
in
pop
push
push
cltd
loop
dec
mov
lods
je
sti
call
iret
mov
shlb
xchg
std
jne
repnz
sub
dec
or
push
std
loopne
jecxz
mov
add
xlat
add
ja
jmp
jno
jl
inc
adc
out
movsb
stc
dec
arpl
fisubl
enter
push
cld
and
xor
iret
leave
inc
cld
mov
pop
rcl
fisubrl
jmp
jp
mov
xor
ret
mov
push
aam
mov
fld
popf
mov
and
or
mov
add
sub
test
dec
cmp
rcr
add
mul
dec
pop
or
je
pop
dec
add
stos
adc
add
or
jmp
jp
push
and
mov
shrl
xlat
insb
mov
ss
aad
or
cmpsb
out
fnsave
push
push
ret
rcrb
iret
dec
fcmove
adcl
mov
pushf
sub
pop
shld
in
movsl
sub
xor
sahf
mov
shlb
andb
sbb
push
clc
stos
test
mov
mov
xchg
aam
aaa
and
cltd
xor
das
out
xchg
dec
or
sahf
imul
shlb
pop
sti
add
fisttps
sahf
sub
sub
pop
jmp
scas
mov
ss
mov
inc
inc
aad
jbe
inc
push
push
push
hlt
imul
stc
jb
inc
into
pop
mov
jno
xlat
out
dec
outsb
xor
pop
jg
xlat
inc
mov
std
mov
sbb
loope
mov
sub
adc
nop
cltd
lods
cmc
push
hlt
sarl
sub
imul
andl
out
enter
inc
and
mov
xchg
sti
sub
inc
out
mov
lret
inc
andl
pop
pusha
js
push
adc
and
mov
jecxz
inc
fisttpll
mov
pop
ja
add
mov
cmp
pushf
mov
test
or
mov
je
pop
pop
or
jne
jmp
in
mov
push
stos
loop
cld
xchg
mov
sub
rorl
in
shll
clc
sbb
fwait
lcall
mov
call
sbb
in
movlps
mov
mov
test
add
daa
xor
dec
lahf
iret
mov
faddl
xlat
push
push
xorl
subb
daa
xchg
movsb
popf
pop
add
sub
fdivs
lods
dec
incl
sbb
shll
das
xor
xchg
xchg
stos
sbb
push
popf
and
shr
int
sbb
and
jle
and
xchg
loopne
in
in
push
movsl
stc
jecxz
repnz
dec
inc
cmp
cmp
rorb
std
xor
sub
into
pop
lds
xchg
pop
mov
push
popa
fsub
pop
inc
mov
mov
mov
mull
popf
movsl
pop
cmc
jo
cmp
add
mov
mov
or
call
fidivrl
jno
popf
cmpsb
jmp
mov
lcall
addl
mov
add
lock
xchg
in
addr16
pushl
loopne
sbb
mov
insl
fnstcw
pop
in
orl
mov
pop
pop
vandnps
sub
icebp
pop
mov
xchg
mov
sub
mov
ljmp
in
push
addr16
push
leave
jmp
mov
in
push
pop
xor
pop
loopne
jne
fildll
xor
jns
jne
scas
fnsave
xor
mov
mov
fldl
jl
decb
jno
jbe
bnd
sub
mov
repnz
rorb
and
es
or
xorl
mov
dec
repnz
orb
mov
rorl
jae
mov
insb
dec
and
jae
das
in
iret
inc
ficoms
push
push
ss
std
popf
insb
sbb
pop
jo
xchg
cs
aas
cmp
mov
xchg
test
enter
push
xchg
ret
dec
sbbb
pop
or
adc
lcall
xlat
adc
pop
loope
sbb
pushf
mov
adc
rorl
test
xchg
fbld
jecxz
cmpl
and
mov
lods
cmp
rclb
pop
leave
push
mov
clc
cltd
xor
sbb
and
mov
mov
dec
test
orb
mov
inc
scas
rcrl
mov
cmpsl
push
scas
cld
add
inc
jecxz
and
cmp
xor
cmc
movsl
insl
shl
jmp
or
call
and
and
bound
rcll
dec
mov
loopne
xor
cmp
fnsave
sahf
mov
daa
xchg
sbb
orl
cmp
fsubr
push
jmp
add
hlt
mov
fnstenv
popf
jle
fimuls
or
pusha
movb
mov
pop
or
pop
iret
clc
leave
jo
push
and
mov
push
mov
neg
sub
jle
neg
fwait
dec
rolb
mov
xchg
mov
pop
movsl
and
add
fisubrs
push
cltd
cmp
jae
jo
and
loopne
test
loope
cld
xor
fwait
adc
xchg
pop
adc
mov
dec
lret
ret
mov
xor
ficompl
xorb
pop
xor
pop
cli
addr16
loop
ja
in
mov
out
xchg
jmp
inc
adc
push
scas
jg
pop
mov
pop
xlat
or
push
arpl
ret
pop
loope
or
inc
add
aad
notl
rclb
pop
movsb
rol
jne
ljmp
aas
push
in
add
inc
arpl
mov
mov
lret
imulb
lds
push
xchg
mov
shrb
in
lea
cmpsb
or
push
iret
xor
fildll
or
xchg
jae
xor
cmp
fldcw
dec
inc
pop
lea
fisubrl
or
cmpsl
fidivrs
pop
dec
mov
aaa
prefetch
sub
test
jo
jne
xor
sub
cmp
xchg
cltd
jecxz
clc
bts
and
pop
pop
xchg
std
cld
daa
mov
adc
frndint
jmp
js
mov
test
sahf
loop
mul
cmp
out
dec
jmp
xchg
xchg
push
lret
cwtl
xchg
jl
jns
push
jne
or
pop
rcll
iret
fdivrl
addr16
pop
dec
jbe
mov
das
push
icebp
adc
xor
out
push
in
das
fistpl
inc
and
pop
pop
mov
push
loope
lds
je
sbb
test
or
xchg
stc
xchg
fwait
xchg
xchg
add
int
xor
jbe
add
and
add
scas
daa
lods
lcall
xchg
std
push
ljmp
stos
rorb
sbb
cltd
inc
mov
xchg
xchg
pop
fmull
aam
pop
mov
and
push
in
or
push
bound
je
push
jbe
fstpt
std
inc
cmp
inc
sbb
insl
or
pop
test
mov
int3
push
ljmp
in
xchg
fstpl
outsl
ficoms
les
in
jmp
sub
xor
push
sub
cmp
icebp
lret
jb
xchg
cmp
popf
or
mov
ror
xchg
cmp
mov
inc
aaa
popa
push
xor
pusha
popl
xor
test
sarl
rcll
out
jne
sbb
pop
lret
xchg
rcll
and
lock
xchg
divb
scas
out
addr16
dec
adc
rorl
lea
fwait
xor
in
in
mov
mov
shrb
shlb
or
pop
and
jle
ror
fisubrl
jae
xchg
dec
jbe
pushf
outsl
popa
mov
je
and
fmulp
in
es
popa
mov
and
mov
cwtl
lock
sub
ficompl
aad
rolb
push
or
int
push
push
push
lret
orl
add
mov
stos
xlat
jg
movsl
cltd
dec
mov
aas
inc
add
sbb
or
jnp
movsb
and
std
mov
xchg
lock
popf
mov
lcall
scas
lahf
push
sbbl
leave
push
push
and
push
jne
xlat
push
and
outsl
fstl
and
lret
mov
cmp
and
and
clc
hlt
lret
shr
add
aad
test
insl
sub
xor
and
xor
mul
lds
add
bound
mov
push
jnp
andb
cld
adc
mov
mov
testb
or
sbb
mov
xor
jo
cmp
loopne
testb
lds
pop
js
insl
or
sarb
jge
jge
sbb
add
das
mov
xchg
scas
lahf
sub
shrb
sbb
leave
jmp
adc
jo
je
sbb
pop
mov
clc
mov
jns
mov
fiadds
sub
pop
enter
sbb
xor
enter
mov
mov
adc
mov
jns
or
enter
mov
icebp
je
push
cmp
xor
aas
mov
jl
mov
pushf
mov
iret
popa
add
push
ljmp
mov
xchg
lods
out
push
sarb
pushf
std
push
jle
inc
jl
repz
xor
shll
inc
ret
mov
sbb
xor
das
push
fwait
xchg
shrl
popa
sti
int3
xchg
adc
pop
sbb
cmpsb
pop
and
mov
nop
cmp
into
sub
loopne
test
in
cmp
lock
cmp
imul
clc
inc
fwait
movsl
cmpb
mov
push
sbb
pop
cmp
cld
mov
imul
out
or
xor
xor
cmp
sbb
cmp
or
xchg
imul
sub
or
movsl
fidivs
test
scas
push
ret
inc
stos
das
lods
jns
bound
clc
mov
lret
aam
shr
ret
push
std
xchg
add
pop
loope
arpl
ret
sub
push
iret
inc
outsb
addr16
push
xor
das
out
into
and
std
xchg
aaa
or
and
or
dec
jnp
adc
sti
jmp
sbb
bound
int3
sti
roll
inc
pop
push
popa
jno
pop
push
std
inc
test
xor
pop
hlt
int
inc
lahf
ror
ss
sbb
mov
sbb
imul
push
pop
insb
das
inc
and
or
jo
clc
aam
dec
outsl
dec
pop
insl
cmp
inc
cs
repz
int
aad
iret
and
aad
repz
add
dec
test
xlat
imul
mov
mov
cmp
cmp
adc
inc
push
push
or
jo
jne
jns
lret
lcall
rcr
cmp
test
and
jecxz
sahf
fists
push
xchg
out
nop
xchg
into
ljmp
mov
outsb
sbb
push
and
lret
repnz
fsts
add
dec
js
js
dec
idiv
mov
push
cmp
mov
dec
xor
dec
lea
cmp
mov
pop
lcall
add
aam
push
loope
mov
mov
push
fsubrl
out
sbb
ret
hlt
mov
pop
cmc
mov
fcompl
mov
stos
fdivl
stc
lods
lahf
mov
ds
pushf
fidivs
xchg
dec
mov
es
cwtl
push
fisubrl
test
aad
mov
rclb
pop
cmp
lods
jae
fmull
mov
and
pop
sub
xlat
adc
xchg
add
xchg
movsb
mov
push
inc
iret
insl
mov
sbb
cmp
cmp
inc
cmp
fdivs
or
ret
add
adc
jne
scas
mov
lret
mov
jge
je
lock
pop
ljmp
xchg
fdivrs
and
add
in
in
sbb
loopne
and
arpl
cmp
mov
jl
inc
lods
xchg
or
pop
lock
aad
sub
scas
les
inc
mov
push
adc
cmp
ficoml
add
mov
mov
inc
cmp
jns
adcl
dec
rclb
dec
rolb
adcb
xchg
or
or
adc
mov
movsl
sbb
fiadds
int3
nop
jne
fs
sbb
cwtl
jns
outsb
nop
mov
mov
ljmp
jp
xor
pop
jg
mov
aas
movsl
push
je
ss
pop
cmp
inc
pusha
enter
shrl
enter
sub
jns
dec
push
sar
loop
xchg
jae
xor
pushf
mov
xchg
sbb
and
cltd
xchg
cmp
xchg
lret
jl
mov
add
push
xlat
jno
inc
and
mov
dec
inc
scas
jne
xor
pusha
mov
fists
dec
adc
jbe
pop
inc
and
pusha
dec
jns
or
pop
test
cwtl
inc
xor
js
sbb
aam
mov
mov
dec
clc
cld
xchg
ja
je
ljmp
call
and
dec
insl
pop
dec
imul
pop
loopne
xor
sbb
fdivr
xor
addr16
sarl
dec
pop
xchg
lock
mov
insl
pop
adc
mov
shlb
push
mov
mov
stos
fldt
imul
enter
push
inc
rorb
dec
ja
ds
push
mov
in
test
ficoml
cmp
adc
fwait
sahf
and
enter
jb
call
std
lock
notl
outsb
cmp
roll
mov
shlb
scas
pop
and
sarb
out
push
push
sti
or
fsubs
cs
in
faddl
and
mov
jle
pop
sub
cltd
out
jb
ret
pop
mov
clc
push
pop
push
inc
and
cmp
out
jns
andb
inc
insb
sub
lds
cmp
pop
cld
ret
mov
repnz
mov
andl
scas
jle
rol
sarb
mov
dec
and
pusha
jb
loop
out
ret
mov
sub
jne
mov
mov
jl
jmp
cwtl
mov
jmp
pop
ds
sbb
inc
sub
inc
mov
xchg
or
xchg
sti
fidivs
or
mov
test
data16
insb
jmp
fldenv
cli
jb
xor
into
test
gs
mov
xor
push
xor
pop
xor
jle
jecxz
lods
xchg
dec
cwtl
xor
pop
clc
mov
leave
enter
cmp
or
call
lea
ficomps
int
popf
sbb
iret
sub
inc
scas
rcr
arpl
lret
xor
jbe
mov
mov
or
inc
pop
adc
cmp
jecxz
lcall
stos
popa
mov
repnz
xchg
inc
push
xchg
cltd
mov
loopne
addr16
bound
adc
mov
pop
lea
jo
dec
filds
sbb
push
shlb
pop
mov
rclb
inc
jb
mov
push
pop
mov
jl
mov
dec
push
sbb
xchg
mov
stos
jae
inc
sbb
cltd
push
movsl
notb
outsb
sarl
mov
adc
add
daa
cmp
dec
pushf
shrb
sahf
mov
jl
sub
js
dec
shll
jp
pop
je
xor
xchg
push
lea
push
iret
bound
mov
dec
jnp
cmp
test
sub
and
ret
adc
inc
popf
sub
add
aaa
adc
pop
lods
cmc
inc
loopne
scas
imul
or
outsl
outsb
out
pop
repz
lcall
xor
pop
fistps
jle
adc
add
iret
or
shr
movq
imul
loop
jo
std
xlat
aas
and
add
loope
out
fnstcw
insb
jle
pop
icebp
mov
pop
sub
jbe
cmc
jge
sbb
int
mulb
sub
and
lret
add
jecxz
push
ja
sahf
adc
pop
movsb
sbb
add
or
test
dec
clc
sub
shlb
mov
fdivrs
push
lock
iret
mov
mov
lret
fidivrl
sti
int3
push
dec
jle
sti
cld
dec
cmpsb
bound
xchg
ja
leave
lret
dec
in
ret
and
sub
sbb
adc
mov
mov
icebp
mov
dec
sub
push
mov
jle
jns
in
movsl
stos
hlt
insb
pusha
je
cmpsl
test
pop
enter
nop
pop
mov
int
inc
sbb
jg
lods
jns
addr16
mov
mov
and
lods
pop
push
jmp
push
pop
jp
adc
mov
ret
movsl
sub
or
outsb
js
mov
cwtl
cld
enter
mov
ficomps
or
mov
fisttpll
lock
xchg
loop
arpl
daa
scas
jnp
xor
dec
sbb
jbe
shrb
ret
ret
xchg
lea
add
jo
sbb
subl
out
or
pop
js
mov
inc
push
jge
sbb
push
jns
adc
jo
pop
jno
scas
shrb
xchg
sbb
int3
pusha
test
push
push
lods
cltd
les
adc
xchg
xlat
cmp
cmpsl
sarb
pop
dec
stc
loopne
fnstcw
cmp
loope
sbb
pop
inc
mov
add
jno
xchg
fiaddl
pop
pushf
test
xchg
pop
test
xchg
lcall
icebp
lret
push
sbb
push
imulb
in
cmp
loope
add
add
inc
data16
jne
mov
les
fisttps
fldt
push
inc
mov
push
loope
sbb
cmpsb
rol
add
jno
jle
push
aam
sbb
dec
mov
push
pop
stos
cmpl
cmc
test
sbb
fiaddl
repnz
sbb
fstpl
and
rolb
fistl
loopne
xchg
rorb
xchg
andb
add
inc
popl
cmpsl
xchg
push
std
daa
negl
cmc
cmp
xor
repz
dec
inc
mov
negl
jbe
loope,pn
mov
ss
int
xchg
jbe
xor
ret
mov
cs
cmpsb
out
lahf
outsb
xor
popf
push
jae
jne
inc
xor
sbb
pop
sbb
inc
cli
rorl
shlb
xchg
pop
or
xchg
in
sbb
out
fwait
xor
outsl
add
test
xchg
aam
mov
mov
inc
enter
ficomps
inc
aad
mov
fisubl
cmc
test
inc
icebp
nop
fwait
repz
js
cmp
push
out
sahf
adc
lods
test
mov
or
xor
xchg
adc
adc
rolb
testl
or
add
aaa
and
daa
loopne
stc
dec
dec
mov
clc
xor
push
sbb
fmul
pop
outsl
int
add
loopne
pop
adc
addb
xchg
push
and
jno
and
jle
push
adc
ffree
leave
xchg
test
mov
mov
adc
mov
loopne
mov
sub
lahf
xchg
cmpsb
and
movsl
lea
pop
mov
sti
xchg
cltd
or
rol
mov
push
les
cmpsb
js
push
ret
or
jl
jns
and
fwait
ljmp
push
jle
outsb
test
lods
sbb
sahf
push
movb
mulb
dec
cmpsl
js
dec
fldenv
sub
ja
pop
mov
out
inc
dec
add
inc
push
into
sub
rcrb
mov
ja
pop
dec
addr16
xchg
jl
test
dec
dec
push
cmpsb
mov
cli
jns
stos
and
or
push
jae
in
cmpsl
pop
lods
xlat
xlat
push
imul
rcll
pop
and
dec
rcrl
cltd
xchg
bound
fmuls
fidivrl
mov
sbb
pop
cld
inc
fimull
lock
pusha
pop
aad
shlb
cmp
aaa
pop
aam
xor
cwtl
enter
inc
dec
insl
mov
or
aam
out
loop
xor
and
ljmp
jmp
xlat
pusha
les
push
leave
sub
push
add
mov
pop
int3
lods
icebp
or
adc
add
xor
hlt
in
jg
pop
mov
jb
dec
add
dec
inc
push
push
adc
leave
fisttpl
jbe
cmp
add
repz
divl
outsb
shll
js
test
mov
test
and
pop
jo
push
and
repz
aad
adc
or
int3
xor
inc
stos
test
jbe
cmp
xchg
jb
jl
xor
dec
xor
pop
add
mov
jb
scas
imul
sub
cmp
lock
lock
nop
lds
dec
push
lods
mov
dec
cmp
pushf
inc
push
xchg
idivb
int
adc
ss
mov
leave
adc
lods
aad
cwtl
cltd
int
aaa
pop
mov
and
and
cmp
lahf
div
inc
jmp
push
decb
mov
xor
pop
insb
and
ds
and
std
jecxz
mull
fmul
es
pop
mov
scas
fcmove
push
sub
loope
adc
push
mov
dec
aas
mov
sub
call
insl
fsubl
lcall
stc
sarb
lods
xchg
cmc
imul
mov
mov
ja
mov
and
lea
mov
dec
dec
mov
test
nop
cwtl
and
out
lcall
jle
cmpb
adc
and
or
aad
add
and
jo
je
int3
lcall
loop
or
push
shl
xchg
or
test
mov
out
and
push
adc
add
add
and
sub
lea
cmp
dec
sbb
lods
pop
sbb
xor
mov
lahf
cmp
aam
imul
inc
add
int
aam
sti
cmp
lahf
inc
push
lds
adc
pop
sub
adc
leave
loopne
cld
sbb
dec
cmp
pop
fnstenv
loope
insl
jecxz
dec
xchg
movsb
out
xor
out
lds
out
add
int3
mov
mov
pushf
sbb
sub
out
add
outsb
jecxz
fdivs
cmpsb
push
xchg
dec
add
fisubs
push
sbb
add
icebp
aam
xchg
stc
outsl
sub
insl
pusha
mov
sub
jmp
dec
andb
loope
and
movsl
xor
sarb
xorl
shl
sarl
popa
lds
or
mov
dec
and
popa
dec
gs
lds
fs
mov
adc
out
mov
inc
xchg
xor
dec
test
data16
in
push
push
cmp
inc
mov
lahf
iret
sbb
repnz
pop
rol
jbe
mov
pop
jno
jno
popf
xchg
enter
xchg
addl
mov
or
and
jbe
dec
lock
mov
adc
sub
cmp
mov
loopne
stc
aam
cmpsl
sbb
jmp
popf
lds
sbb
test
push
lcall
fistpl
cld
mov
out
test
testb
movsl
mov
out
inc
int3
shll
xchg
ljmp
add
loope
aas
push
stos
jo
fnsave
lahf
mov
sub
pop
int
iret
sahf
adc
dec
rclb
jbe
imul
out
cmp
dec
jno
aas
and
pop
insb
pop
roll
cmp
js
mov
fsubs
ret
aas
mov
sub
enter
mov
add
lods
jns
or
dec
les
int3
xchg
outsb
sub
xchg
cltd
test
pop
ds
sarb
xor
mov
test
nop
test
in
rorl
cmc
and
aad
pop
pop
por
jae
lret
daa
dec
lods
scas
test
ja
in
adc
test
or
loopne
shll
mov
add
pop
js
loop
in
shlb
cmp
jg
shrb
or
pusha
mov
scas
fimull
xorl
mov
daa
push
dec
pop
add
loope
xor
sti
push
outsl
hlt
cli
jbe
sahf
mov
pop
mov
mov
xchg
and
in
lcall
push
fmuls
aaa
sarl
mov
sub
xchg
inc
mov
pop
adc
or
push
popf
pop
ror
dec
mov
out
aaa
mov
adc
or
push
fcomps
inc
cmp
lock
push
in
sub
mov
xor
adc
pop
jecxz
push
inc
adc
jge
ficoml
loop
test
or
test
sub
sahf
popa
jle
push
mov
addr16
mov
inc
push
xorl
adc
mov
jg
ficompl
or
nop
mov
dec
lret
in
push
mov
push
xor
mov
jl
sbb
xchg
test
arpl
iret
das
xchg
dec
ljmp
es
sbb
repnz
xor
pop
add
insl
out
xchg
xchg
orl
pop
pop
mov
jl
fiaddl
das
ficoml
xchg
enter
add
iret
push
mov
xchg
sbb
mov
xor
or
mov
fstl
or
mov
loopne
out
push
fwait
mov
push
enter
out
aaa
jne
mov
data16
push
outsl
ret
dec
test
es
imul
jg
or
push
dec
loop
into
dec
clc
jle
mov
and
scas
xchg
loope
cmp
or
lret
jbe
push
out
adc
xchg
shll
add
jnp
fwait
enter
fdivr
push
cs
addb
push
inc
pop
cmp
scas
adc
dec
loopne
push
adc
mov
jns
sub
leave
jbe
pusha
call
shr
sub
cwtl
sti
ffreep
sbb
xlat
repnz
lds
cmp
mov
mov
adc
xchg
inc
lds
arpl
sahf
sub
pusha
imull
lods
sub
cld
cmpsb
xchg
pop
je
pop
repz
notb
xchg
xchg
inc
in
xor
mov
push
iret
movsb
fsubrs
call
ret
repz
in
lcall
sbb
mov
xchg
cltd
xor
sbbb
fiadds
sub
cmp
hlt
daa
fdiv
xlat
pop
popf
pop
push
addl
arpl
movsb
jbe
mov
aas
inc
jmp
call
lret
data16
sbb
ja
js
inc
inc
enter
push
mov
inc
sub
das
lret
push
lds
mov
and
mov
mov
ds
or
push
push
rorl
push
fnstsw
jnp
or
ror
xchg
add
add
imul
fdivr
mov
ficoml
dec
jo
and
mov
rclb
mov
adc
pminsw
int
test
mov
push
lods
in
or
mov
out
sub
inc
mov
out
xrelease
xorl
mov
mov
xor
sar
xchg
mov
nop
int
negb
scas
xchg
adc
rcrb
jns
mov
sub
ljmp
add
lcall
outsb
loopne
xor
js
mov
jg
jno
sub
mov
dec
aaa
adc
cmp
mov
mov
add
mov
lods
lods
enter
dec
xchg
daa
jle
adc
add
mov
mov
mov
repnz
test
xchg
out
adc
nop
push
out
jne
in
and
xor
imul
hlt
rorb
mov
loope
mov
cmp
loop
pop
movsb
mov
dec
lret
jns
das
lahf
push
inc
frstor
stos
flds
pop
out
jl
mov
mov
stos
mov
ds
aas
xchg
push
lock
mov
push
stos
das
inc
scas
es
push
lods
adc
enter
mov
gs
das
andb
gs
lea
cmp
js
ret
mov
and
ja
mov
mov
cli
jg
loope
jl
stos
mov
sbb
dec
xor
inc
stc
lea
int3
jge
aam
dec
test
sti
out
pop
int
inc
mov
mov
fcmovnb
je
lahf
xchg
test
insl
push
ja
or
xchg
mov
inc
sbb
imulb
sbb
and
stc
and
aam
arpl
dec
lds
dec
xchg
and
push
cmp
ret
mov
dec
pusha
lea
mov
fidivs
jnp
mov
adc
xor
adcb
and
xchg
inc
imul
lahf
and
daa
jge
pop
aaa
loop
repz
fcoml
xor
clc
xlat
insb
xorl
jp
push
pop
pushf
or
sbb
rcll
popf
and
adc
inc
push
shrb
mov
dec
push
adc
cmp
jne
shrb
mov
jmp
lcall
scas
daa
jp
dec
stc
rcl
pop
cmp
jbe
pop
pop
ss
sahf
xchg
out
and
loopne
cltd
add
or
xor
mov
add
cmp
mov
mov
and
add
mov
or
sbb
shll
xorl
pushf
sub
sarb
add
lret
sub
in
sub
jle
jg
xchg
add
lods
test
jecxz
pop
cwtl
mov
push
push
fildll
inc
dec
sub
dec
inc
imul
inc
adc
addr16
daa
push
sub
mov
and
rcrl
movsb
jp
test
adc
or
sub
dec
ja
es
mov
inc
inc
sahf
mov
push
in
xchg
or
adc
jmp
fldcw
and
scas
cmpsb
loop
jle
movsb
mov
lods
push
imul
mov
je
pop
mov
shlb
cmp
xor
cld
push
daa
and
jge
add
cmp
dec
jne
stc
fisubl
push
aad
jecxz
outsb
or
or
dec
sahf
aaa
mov
repnz
es
xchg
jle
xchg
sarb
mov
push
lock
mov
nop
inc
inc
push
pop
std
dec
stos
adc
adc
in
jge
hlt
mov
jns
ret
inc
std
and
mov
mov
jg
rolb
ljmp
pusha
in
mov
je
andl
movsl
scas
mov
loope
xor
stos
sti
enter
xor
jo
push
or
sub
cltd
adc
pusha
adc
add
adcl
outsb
jb
push
dec
pop
inc
adc
bound
inc
lods
movsb
pop
and
push
fs
xchg
fwait
push
sbb
aaa
add
call
mov
test
push
adc
cmp
jp
mov
push
xchg
sbb
mov
cwtl
int3
push
bound
mov
cmpsl
pop
and
pushf
imul
repnz
pop
data16
dec
mov
or
fidivl
fucomp
mov
jo
movsb
jbe
imul
lret
inc
mov
mov
popa
mov
adc
rclb
fwait
adc
testl
pop
fnstcw
ffree
push
mov
ljmp
push
jl
cmp
subb
addr16
push
push
addr16
or
and
dec
adc
dec
je
pop
mov
dec
pop
pop
shlb
adc
sub
call
enter
pushf
les
mov
xor
inc
cmp
into
dec
xor
jns
inc
insl
cmp
icebp
icebp
add
cli
cltd
stos
mov
int
cmp
xchg
mov
add
sbb
lcall
cs
mov
mov
ret
mov
push
repz
cmpb
dec
xchg
pop
mov
push
aam
out
mov
sub
jb
das
movsl
stos
mov
cmp
dec
xchg
sub
add
inc
jmp
leave
dec
aas
popa
jns
cwtl
pop
fcmovb
mov
and
negb
iret
sub
test
lretw
dec
or
add
das
cmp
fdivp
fisttpl
push
stc
xchg
inc
shr
loope
out
jne
imul
adc
fldenv
adc
popf
jne
loop
ja
jnp
sbb
jl
jmp
mov
mov
inc
mov
mov
dec
les
lds
push
push
xchg
sub
and
sub
xchg
sbb
jg
xchg
xor
xor
xchg
xchg
xchg
loope
cmp
sbb
pop
mov
lock
int
or
ss
in
and
sub
jp
pop
out
in
sbb
cmp
arpl
jb
in
roll
repz
fwait
pop
movsl
sti
repnz
add
jmp
mov
add
shlb
fiaddl
push
push
lret
jnp
mov
out
or
sub
jle
sub
dec
dec
std
faddl
scas
shrl
sub
int3
cmp
xchg
pusha
in
scas
rorb
out
mov
je
lret
roll
jne
es
stos
fcomi
or
and
sahf
dec
je
sti
shlb
lret
jne
faddp
iret
je
lcall
mov
ret
pop
pop
pop
jbe
jns
fists
xor
test
jge
jbe
aam
sub
mov
push
inc
leave
outsb
test
push
bound
cwtl
jl
faddp
pop
or
add
pop
xchg
les
xchg
xchg
cmp
dec
jne
dec
stos
repz
sbbb
stc
sahf
int3
jl
sbb
adc
cwtl
mov
dec
jp
out
loopne
ret
lahf
add
push
or
enter
push
sar
pop
fwait
dec
cmp
imul
in
outsl
shrb
pop
xor
repnz
jl
jmp
mulb
cld
icebp
les
jecxz
lret
std
aas
cld
daa
sbb
mov
aaa
and
fimull
cli
mov
movsb
enter
dec
repnz
sbb
adc
in
stos
std
pmovmskb
sbb
xor
lock
push
xor
roll
rcrl
mov
pop
shl
call
mov
test
jmp
addl
mov
arpl
xlat
sbb
test
pop
andb
clc
rolb
pop
cli
and
in
cmp
dec
out
inc
sub
mov
push
or
daa
outsb
loopne
cmp
nop
xor
inc
loop
aaa
hlt
stos
jle
or
pop
pop
fdivs
clc
in
sub
jecxz
dec
imul
mov
test
jg
mov
sbbb
mov
or
arpl
push
mov
xchg
scas
insb
insb
push
aad
mov
movsl
stos
fisubrs
enter
imul
subb
mov
dec
adc
and
stos
sbb
rclb
or
loope
push
insl
cwtl
sbb
clc
lahf
or
jmp
int3
call
mov
mov
out
je
adc
inc
jb
xchg
jo
enter
adc
movsl
imul
and
lahf
stos
and
loope
shr
xor
push
jae
fildll
out
jle
bound
imul
adc
pop
dec
std
push
and
jae
push
je
or
mov
aam
adc
sub
je
cmc
push
dec
pop
adc
jne
insb
pop
out
fcoms
dec
and
lret
push
sbb
adc
aaa
int
and
movsb
js
or
or
inc
gs
sbb
into
sbb
iret
popa
mov
ret
mov
cmp
xor
jno
notb
mov
mov
push
scas
pop
mov
test
aad
imul
outsb
addr16
xchg
push
dec
push
in
out
add
pop
stos
stc
lahf
sbb
stc
mov
jmp
loop
lods
call
mov
rol
sbb
mov
xchg
mov
dec
loopne
adc
rcrl
add
push
sahf
pop
xor
loope
or
jecxz
adc
out
orb
add
movsl
push
mov
dec
sbb
cvtps2pi
cmp
jb
adc
pop
pop
xor
out
ja
jae
xor
inc
imul
sub
xor
in
icebp
test
cli
xchg
inc
xchg
fstl
js
in
std
jmp
xchg
in
push
in
aam
clc
lods
out
add
sti
ljmp
sub
mov
inc
mov
mov
mov
push
into
mov
mov
push
push
loopne
mov
pop
sub
imul
fwait
ljmp
mov
inc
sbb
xor
repz
jns
inc
icebp
dec
hlt
idiv
sbb
and
enter
out
dec
xchg
test
lret
clc
and
jbe
push
loop
jp
loop,pt
mov
pusha
sbb
scas
out
js
aas
push
push
fiadds
mov
test
push
lret
pop
movsb
ret
xor
orl
adc
lea
scas
ret
xlat
test
mov
and
mov
xchg
je
imul
mov
adc
subl
jno
aam
xchg
lret
or
shr
cld
push
adc
xchg
push
out
xor
notb
loopne
negl
mov
cmp
mov
adc
gs
mov
dec
xchg
popa
sarb
cltd
cltd
pop
daa
mov
lods
sbb
setae
jp
stos
fisttpl
or
sub
std
mov
imul
sub
fs
nop
xchg
out
fsubrl
push
sub
cmpsl
mov
jo
insb
les
jb,pn
inc
push
mov
jmp
mov
add
pop
clc
popa
add
cmp
daa
add
cmp
or
das
test
ja
out
filds
loop
sub
mov
dec
jno
call
fsubs
mov
sti
popa
lret
pop
or
push
push
das
pshufw
je
in
andl
adc
mov
jg
cwtd
fisttps
xchg
adc
mov
lret
pop
cltd
in
mov
and
lods
repz
push
testb
mov
stos
pop
add
push
mov
push
mov
add
orb
repnz
cmc
js
or
movsb
push
int
incl
incb
add
pop
fidivrl
fidivl
pop
or
mov
dec
imul
jne
outsb
dec
mov
jmp
stc
push
adc
xchg
in
in
aas
cmp
add
mov
dec
cmpsl
dec
xlat
inc
jecxz
inc
loopne
mov
or
ficompl
out
jo
test
xchg
pop
js
in
fwait
das
xchg
call
xor
push
xor
outsl
inc
scas
cmp
inc
clc
outsb
gs
mov
cmp
mov
mov
mov
and
mov
rcll
xor
testb
pushf
xor
mov
test
mulb
mov
aad
aad
pusha
test
push
lods
xchg
dec
jnp
inc
push
jns
jp
xor
cmp
iret
bound
test
int3
int
int
lret
mov
dec
loopne
inc
testl
ret
jl
fnsetpm(287
inc
lods
adc
mov
or
lret
add
or
movsb
or
movsl
cmc
ret
jg
cmpsl
and
hlt
loopne
or
cwtl
icebp
mov
stos
adc
fdivp
mov
or
mov
xchg
adc
sub
movsb
jecxz
jle
mov
or
movsl
mov
mov
xchg
and
inc
pop
jge
add
jl
and
aad
cli
fsubrl
ja
test
cld
negb
pop
mov
mov
xchg
cmp
out
sar
and
popa
popa
mov
xchg
mov
js
roll
pop
js
mov
out
sub
cmove
xchg
mov
enter
ja
pop
and
sbb
rorb
xchg
cmp
cmp
sub
movsl
ds
es
jnp
dec
mov
xchg
jo
aaa
in
imul
xchg
out
pushf
jg
push
je
xchg
and
jmp
pushf
xchg
sub
test
ret
aaa
cli
jo
ret
dec
ret
das
sbb
xor
addr16
aam
imul
xor
in
imul
mov
jmp
cmp
inc
lods
mov
cmpl
pop
cmc
repnz
mov
fildll
fnop
add
mov
xchg
sub
pop
dec
adc
lahf
clc
xchg
and
jle
dec
out
mov
aaa
pop
push
repz
or
and
xchg
scas
mov
scas
fwait
nop
dec
test
mov
and
inc
xchg
js
jp
sub
adc
cltd
fldenv
out
mov
mov
shr
mov
sbb
mov
jecxz
je
sti
or
push
add
outsl
jns
stc
cld
mul
jg
dec
data16
and
lcall
call
xor
fdivrs
mov
and
pushf
push
cmc
int
mov
sahf
cmpsl
jne
mov
gs
dec
mov
push
jb
loope
outsb
je
xor
inc
and
push
cmpsb
scas
and
or
sub
fimull
ds
push
sarl
and
sub
jl
mov
loop
ja
sbb
xchg
adc
push
jg
in
adc
push
xchg
mov
stos
mov
mov
mov
mov
sbb
jle
dec
mov
adc
or
cltd
arpl
xorb
or
push
fnstcw
ret
and
and
inc
xchg
push
into
aad
mov
cltd
sarb
je
xchg
inc
imul
fldz
sbb
xor
jae
mov
mov
sbb
pop
int3
dec
rolb
mov
rcll
out
and
stc
scas
lods
pusha
or
shrw
push
or
dec
scas
insl
xor
mov
sub
dec
mov
mov
cmpsb
das
adc
sub
xchg
sar
mov
pop
mov
insl
cmp
cltd
movb
dec
int
movsb
aam
imul
rcll
jle
hlt
mov
mov
jmp
cld
movsl
adc
icebp
not
lcall
loop
es
sbb
push
icebp
push
popf
jnp
mov
xchg
cmpsl
and
call
cmp
cmp
sbb
popf
sbb
push
in
sbb
nop
inc
out
mov
pop
std
push
int3
rcll
jecxz
push
mov
fsts
jl
mov
push
mov
popa
pop
ret
push
jae
gs
scas
xchg
pop
and
dec
add
ss
aaa
gs
mov
add
pop
push
or
int3
gs
push
lret
mov
gs
fcmovnbe
jecxz
repnz
pushf
jno
jle
ds
pop
insb
mov
fdivs
or
xchg
outsb
sbb
gs
inc
xchg
or
inc
aas
outsl
ja
mov
push
xchg
lcall
es
fdiv
stc
xchg
fisubl
mov
sub
cmp
aad
mov
stos
cltd
inc
mov
int
mov
lcall
fistpl
jno
outsl
jmp
adc
sbb
dec
sub
push
ret
mov
jmp
das
mov
ficoms
lahf
loope
movsl
mov
jne
imul
xchg
pop
pop
mov
add
xor
into
mov
and
mov
sub
push
add
mov
dec
cmp
in
dec
or
dec
push
pop
pop
xor
movsb
mov
or
sbb
int
imul
aas
movsl
jmp
subl
cmp
sub
sbb
ret
and
inc
sub
xorl
daa
rep
sbb
lret
xchg
push
mov
push
in
pop
aam
and
push
icebp
jnp
dec
js
mov
sbb
jmp
mov
jns
pop
mov
inc
or
pop
xor
pusha
cmc
cmp
popf
sti
pushf
lret
insl
jns
jmp
push
cmp
das
sar
pop
xor
jle
stos
outsl
sbb
insl
sahf
mov
or
test
fcmovne
mov
inc
ja
rorl
dec
pop
fs
icebp
fstps
and
jp
and
dec
adc
sbb
scas
and
test
out
imul
cli
add
jbe
sbb
iret
inc
xlat
mov
pop
sub
int
les
cmpsl
lcall
xchg
fsubrs
inc
jmp
xchg
stc
pop
cmp
ljmp
outsl
popa
fadds
mov
sbb
push
and
xchg
cmp
inc
lcall
mov
loope
add
jb
outsl
mov
out
and
add
mov
inc
aas
js
or
xor
xchg
inc
mov
and
inc
mov
mov
scas
add
or
pop
xchg
jge
pop
jge
test
or
test
jno
mov
dec
aam
pop
push
adc
out
in
mov
cmpsb
imul
insb
jg
inc
pop
scas
test
mov
push
push
out
mov
adc
in
inc
jo
push
sub
les
jmp
icebp
imul
fwait
pop
imul
pop
cmp
mov
shr
inc
fld
dec
cld
sub
rorb
sub
cs
xchg
cmp
jge
jp
sbb
mov
sbb
mov
mov
inc
cmp
insb
jmp
sbb
sub
lret
lds
popa
inc
in
subl
push
push
jl
cmpsl
out
lods
pop
std
mov
cld
cmp
push
popf
push
out
hlt
cmp
fs
dec
insl
daa
pushf
out
pop
sub
and
ja
insb
int
or
testb
dec
xor
and
rol
fistl
mov
and
cmp
mov
add
test
cmp
stc
xorl
test
mov
cmp
adc
hlt
aaa
loope
push
jmp
xchg
pop
lret
fwait
pop
inc
push
ds
in
push
mov
xchg
mov
push
ja
cmpsb
and
lea
lahf
xor
ja
icebp
lods
mov
jecxz
xor
push
lods
js
shl
mov
sti
adc
mov
mov
loope
jl
das
jo
cmpsb
jg
add
mov
mov
enter
pushf
js
sti
lods
in
xor
cli
lds
adc
rcrb
repnz
cmpsb
push
sub
sub
cli
aaa
fs
test
sbb
mov
or
nop
les
push
mov
xor
jp
mov
ja
icebp
loopne
adc
fdivs
xchg
mov
sub
jae
or
inc
add
jmp
ljmp
inc
mov
loop
push
mov
pop
test
cmp
pop
je
cmpsb
stos
push
xlat
orl
shll
push
repz
sub
pop
fldl
add
rcr
mov
inc
xchg
push
adc
and
and
push
jle
jae
insl
xchg
std
ficompl
movsl
jnp
mov
xchg
lea
inc
cltd
jno
test
aad
popf
lods
nop
push
insl
mov
and
je
mov
loope
inc
cld
xchg
add
insl
mov
popf
mov
loopne
adc
jb
mov
push
mov
jg
push
mov
lods
add
and
outsb
xlat
jmp
adc
mov
push
fwait
and
sub
lods
dec
fldcw
shll
push
enter
mov
pusha
call
pslld
popf
pop
xor
pop
push
fmuls
mov
test
inc
je
out
daa
int
pop
add
mov
clc
sbb
sub
and
xor
cmp
sub
fcoms
inc
out
js
cmp
fwait
shll
adc
push
out
jg
xor
jmp
imul
adc
pop
mov
loop
push
sub
cmc
sub
test
mov
jg
xor
mov
icebp
stos
in
loop
push
mov
lods
pop
cmc
sbb
ljmp
iret
hlt
push
cltd
xchg
pop
rorb
add
mov
addb
cmpsb
adc
inc
pop
addr16
out
enter
dec
add
or
push
lea
outsl
lahf
ss
sbb
call
push
bnd
shlb
iret
xor
std
cmp
shlb
cmp
mov
jg
fldt
das
fsubrs
dec
inc
test
roll
add
inc
mov
addr16
lds
mov
adc
pop
insb
leave
out
jb
and
and
out
pop
daa
ret
cli
and
or
sub
xor
out
mov
pushf
or
sbb
sbb
xchg
sub
sub
stc
or
add
fstl
hlt
inc
inc
sbb
adc
xchg
push
repz
stos
mov
mov
or
lret
add
addr16
dec
out
xor
out
js
imul
lods
jne
pop
pop
popf
fcomip
or
pushf
xchg
ret
int
xor
adcb
enter
lahf
push
fidivrl
xchg
pop
sub
xor
fistps
add
lcall
dec
clc
cmpsb
popf
stos
push
out
test
hlt
push
into
stos
icebp
call
add
and
mov
mov
jl
outsb
mov
stc
sub
sub
cld
inc
js
add
xchg
jl
icebp
sub
lret
ret
rcrb
stos
mov
fiadds
into
movsb
cltd
cmc
dec
lret
jbe
mov
sub
xor
jp
into
push
push
dec
xchg
inc
sbbl
sbb
jl
jb
fists
jl
scas
pop
mov
jle
aad
in
inc
mov
mov
es
in
add
ret
out
push
xchg
andb
and
and
and
in
lahf
jmp
and
rcll
inc
jb
pop
and
fwait
or
aam
xor
icebp
arpl
int3
cmp
rorb
ja
push
push
fnstcw
push
xchg
popf
xlat
inc
fs
mov
test
int3
enter
insb
movsl
je
adcb
push
popa
mov
daa
popa
sub
cmpsl
outsl
inc
push
mov
sbb
rorl
sub
mov
stos
out
int
mov
inc
sarb
mov
sbb
jae
push
pop
dec
pop
ficoml
dec
orl
sub
lea
cmp
lock
fs
inc
push
popl
sbb
test
sbb
xchg
mov
cmp
lcall
sbb
lods
bound
pop
mov
clc
sbb
test
nop
dec
loope
xor
jge
fstpl
cmpsb
iret
push
add
shl
dec
xlat
mov
dec
sbb
fnsave
xor
jecxz
sub
sbb
shll
lcall
or
xor
and
jmp
adc
fstl
mov
inc
stos
xchg
xor
aad
dec
xor
icebp
popa
cmp
mov
or
dec
les
in
cs
xorl
add
insl
add
sub
pop
fldl
adc
enter
movsb
incl
mov
pop
imul
das
mov
mov
mov
inc
adc
lea
divl
std
jp
jp
push
cmp
inc
fisubs
aam
out
fiaddl
mov
dec
cld
xor
mov
imul
push
fstpl
add
loop
mov
bound
jno
xchg
sub
inc
sbb
jb
xchg
enter
push
xor
mov
ds
out
cltd
fdivrl
jb
cld
cs
pop
mov
mov
adc
inc
sub
sbb
in
and
inc
lods
repnz
enter
dec
sbb
cltd
push
insl
sbb
mov
lods
pushf
unpcklps
scas
pop
lahf
pop
or
aad
sbb
pop
mov
mov
pop
nop
aam
fucomp
daa
cltd
mov
and
push
std
inc
xlat
test
pop
push
xchg
fidivrs
pop
adc
sbb
pop
xor
mov
push
test
jno
aad
cmp
push
sub
sbbb
jge
mov
jae
fildll
sbb
pop
imul
sub
sbb
pop
mov
enter
imul
adc
clc
cmp
imul
sbb
outsb
enter
std
mov
add
jno
xchg
adc
sbb
mov
adc
or
cmpsb
push
adc
cmp
shll
fwait
lea
push
and
mov
leave
or
and
test
test
add
shlb
loopne
ror
mov
mov
jb
sti
sbb
pop
lods
clc
mov
xchg
xor
or
inc
push
push
sub
xchg
icebp
loope
mulb
jns
add
bound
jecxz
insb
out
jb
adc
aaa
fmull
out
icebp
jg
xchg
pop
jge
sub
or
cmp
or
scas
sbb
in
push
ja
cld
inc
popf
popf
xchg
lret
adc
jl
jg
sbb
xchg
inc
pop
cmc
test
imul
jle
lods
pop
lahf
inc
daa
dec
sbb
int3
ljmp
push
lret
inc
pop
add
adc
sub
sub
pushf
or
test
xor
or
xor
lods
push
repnz
les
scas
push
xor
notb
popa
testb
lahf
add
lret
andl
dec
jl
mov
push
loop
mov
xchg
jns
aad
mov
je
dec
test
scas
lahf
pop
imulb
cmp
roll
pop
pop
stos
xor
mov
fisubs
sub
imull
mov
aam
mov
lock
pop
int3
jecxz
adc
test
andb
adc
jecxz
rcrb
and
loopne
push
cmp
movsb
dec
push
daa
cltd
orl
fcmove
mov
push
and
int3
inc
pop
das
div
ljmp
pushl
outsl
dec
sbb
sbb
mov
sub
dec
es
mov
inc
loopne
in
ret
cld
mov
mov
dec
mov
scas
loope
sub
das
stos
inc
daa
cmp
push
lret
and
adc
jp
pop
call
stos
mov
pop
jbe
daa
cmp
in
loop
cltd
cmp
adc
ret
out
xchg
scas
xor
push
bound
in
fld
adc
or
sub
and
out
mov
les
mov
cmc
shll
lds
mov
xor
shll
jnp
adcl
dec
insl
lcall
sar
or
mov
dec
mov
and
pop
xchg
jmp
sbb
adc
scas
aad
stc
fwait
movsb
movsl
lods
pop
inc
dec
rorb
pop
sub
pop
aam
cmp
enter
inc
sahf
sub
nop
sub
pushf
std
and
leave
inc
ds
xchg
push
fidivs
out
cltd
inc
cmp
cmc
pop
push
jne
outsl
cmc
mov
mov
xor
mov
push
imul
lods
push
cmpsb
xchg
pop
shr
jbe
adc
push
jmp
int
mov
mov
mov
mov
sub
mov
sti
pop
mov
add
stos
out
call
shl
add
aaa
adc
repz
in
and
inc
xor
add
mov
sub
lods
adc
inc
mov
repnz
cmp
rorb
push
jb
int3
xchg
scas
out
cmp
mov
push
sub
fxch
cmp
roll
dec
fidivrl
lods
int
fisubrl
push
sti
or
mov
cltd
outsb
mov
cmp
inc
xlat
in
jo
sub
mov
sbb
jo
js
pop
rcr
xchg
dec
xor
bnd
cs
and
push
and
sub
sbb
std
or
push
sub
cmpb
sub
mov
pop
sbb
push
push
cwtl
cmp
cmpsl
and
dec
repnz
ret
cmpsl
push
jl
ss
mov
int
push
out
movsb
imulb
xchg
in
pop
mov
xor
jmp
xchg
mov
push
lods
mov
jns
pusha
mov
into
sbb
dec
xchg
jmp
hlt
xchg
mov
xchg
add
sub
lock
and
push
mov
and
add
adc
jmp
lea
popa
mov
push
in
jb
cmp
sub
rclb
or
out
ljmp
push
jp
mov
aas
js
cmp
push
mov
rorb
add
or
xlat
jbe
icebp
and
aas
sbb
pop
in
aad
xchg
mov
push
or
adc
xchg
int3
clc
ds
lods
inc
fdivl
mov
cltd
dec
sbb
insb
jae
dec
jge
mov
mov
add
and
ficompl
aaa
and
fwait
dec
stos
ja
insl
push
pusha
das
sub
lcall
mov
rclb
dec
call
add
add
popf
out
pop
sbb
inc
mov
cmp
and
mov
xor
push
or
adc
dec
jb
jns
loop
xor
je
ja
sub
mov
call
lahf
jo
sbb
shl
mov
mov
xchg
in
dec
xchg
arpl
lds
xchg
mov
dec
sbb
add
shr
lods
pop
xor
out
push
mov
dec
pop
pop
gs
pop
mov
mull
data16
cltd
pop
std
mov
outsb
push
jbe
sbbl
andl
daa
lods
sub
lea
push
outsb
ljmp
mov
loop
cmp
and
jg
jecxz
inc
mov
aam
fistps
mov
sbb
mov
cmpsl
add
dec
in
in
arpl
cld
sub
mov
push
mov
aas
mov
push
adc
or
add
pop
ficoms
mov
xor
xchg
pop
jecxz
jecxz
or
fcomp
sub
inc
mov
push
out
mov
fucomi
xchg
jmp
popa
shrl
sbb
adc
in
shrl
add
dec
push
stc
add
and
ds
xchg
popf
mov
cs
push
push
mov
std
sub
inc
std
repnz
sarb
shr
pop
pop
mov
test
pop
fnstsw
cmp
push
push
and
push
inc
xchg
loopne
ja
and
jecxz
xor
cmpl
add
test
add
add
in
mov
punpcklwd
aad
fs
ret
dec
mov
lods
mov
xor
push
stos
inc
push
sub
xor
stos
mov
add
sub
xchg
outsl
adcb
fimuls
lea
pop
lea
mov
in
enter
jo
cmpsl
not
push
jnp
mov
outsl
imul
fs
jmp
xchg
jge
pushf
push
into
dec
lds
sub
mov
sarb
aam
inc
cmp
ret
sub
add
nop
xchg
daa
out
inc
sbb
ret
in
shll
cmp
add
sbb
add
fisubs
js
ss
jb
movsl
sbb
inc
dec
ja
pushf
mov
bound
and
push
les
xor
cmp
sbb
ljmp
adc
pop
jne
ja
pushl
lcall
mov
add
cmp
cmc
and
insl
mov
fstpt
sahf
in
xchg
out
push
ss
loop
fsubs
dec
inc
dec
ret
xchg
pop
xchg
in
cld
sbb
or
aas
xchg
in
adc
test
orb
in
in
cmc
ret
fld1
xchg
out
ret
pop
lret
and
dec
adc
add
call
cltd
cmp
movsl
or
and
repz
inc
or
push
cli
call
bound
ds
cmp
hlt
sbb
lods
pushf
pop
add
int3
daa
cwtl
cmp
in
icebp
test
aad
jno
addr16
cltd
js
js
call
pop
sub
pushf
and
xor
sub
xchg
xchg
cmp
xor
cltd
xor
cmc
inc
shr
rcr
push
imul
insl
call
inc
cmpsl
pop
sbb
imul
jne
aam
dec
in
das
and
inc
je
aad
addr16
popa
pop
out
mov
dec
xor
or
bound
dec
lods
mov
popa
xchg
mov
mov
repnz
or
lods
aaa
mov
and
pop
inc
gs
stos
lds
sbb
outsl
jmp
xlat
int3
and
or
in
mov
and
pop
pop
lods
xchg
cmp
pushf
popa
cs
int3
pop
mov
sahf
cmpsl
jecxz
mov
fbld
xchg
adc
cmp
cmp
repz
lods
sub
cmp
popf
pop
pop
jge
push
lret
hlt
mov
mov
fildll
jbe
outsl
inc
mov
adc
test
cmp
outsl
aaa
rolb
push
les
test
repz
leave
enter
aas
sub
mov
push
dec
adc
xor
test
dec
stc
add
inc
add
or
inc
sbb
aas
mov
dec
dec
les
in
ror
mov
clc
sub
rclb
cmp
pusha
jg
jmp
mov
fisubs
add
insb
pop
cs
mov
dec
outsl
lcall
in
cwtl
out
les
inc
cld
cli
lds
inc
pop
jge
stos
cmpsb
dec
cld
fwait
mov
sub
test
popf
loop
mov
dec
adc
fsubs
pop
loop
js
adc
shll
jbe
push
jmp
sub
dec
roll
push
jp
pusha
inc
xor
popa
adc
jnp
xor
adc
stos
jmp
call
out
out
fs
adc
lret
pop
pop
jecxz
scas
jl
push
jg
ret
inc
lcall
xchg
push
or
je
sub
add
jbe
push
jecxz
cmp
adc
mov
jns
repz
call
fadds
cmp
outsb
imul
sti
cmp
rcll
int3
inc
sub
sub
inc
movsl
jnp
cli
popa
push
add
in
and
stos
lahf
ljmp
cli
fldenv
test
das
fstpt
sub
daa
pop
iret
sub
js
mov
inc
cld
xchg
jne
jae
cmp
int
xor
lods
and
int3
out
xor
adc
cmp
imul
bound
lahf
rolb
jg
or
and
xchg
daa
sub
jno
mov
jmp
movsb
lods
pop
cmpsl
lods
stos
dec
pop
icebp
adc
push
call
subl
rol
mov
decl
sub
popa
dec
mov
test
insl
pop
push
ror
jb
dec
cli
stos
mov
loopne
cmp
bound
stc
cltd
ja
inc
aad
mov
nop
cli
mov
dec
push
adc
incl
sarb
scas
adcb
or
jbe
and
cmp
xchg
pop
outsb
xchg
sbb
pop
and
cmp
cmpsl
scas
push
pop
sbb
mov
pop
adc
testb
adc
insl
dec
fadds
test
in
inc
scas
or
insb
mov
out
push
mov
orb
jnp
movsl
mov
mov
jne
add
arpl
sub
loop
adc
xchg
dec
jg
aaa
std
add
lea
pop
or
xchg
ds
or
mov
cli
in
hlt
pop
test
out
sub
repnz
repnz
in
and
pop
cmpsl
mov
andl
mov
in
pushf
mov
pop
ljmp
pusha
nop
jo
into
jnp
mov
sarl
daa
daa
inc
add
push
cs
inc
shl
jecxz
mov
test
inc
inc
sti
mov
and
sahf
fadds
cwtl
ja
fwait
jle
jbe
insl
loope
sbb
and
int3
push
mov
das
imul
mov
push
js
dec
popf
pop
jne
insb
scas
mov
cmp
xlat
sbb
push
js
mov
stos
sti
jne
xchg
shr
std
mov
sub
mov
enter
xor
inc
lret
arpl
push
daa
sqrtps
hlt
inc
dec
add
sub
shr
jae
stos
in
test
es
shrl
leave
mov
cli
inc
loope
jmp
fsts
push
leave
mov
jp
xor
sahf
jb
shl
loop
ja
push
dec
sti
loop
pop
cmpsb
std
out
xor
jnp
stos
fwait
sbb
xchg
in
and
outsl
imul
test
data16
dec
push
in
jle
add
dec
cmp
cmp
adc
cmp
jmp
pop
sub
es
outsb
xchg
fmul
push
pusha
stc
filds
adc
adc
ja
mov
cmp
jp
test
aaa
cmp
push
cmp
pop
icebp
orb
push
inc
rcr
inc
xor
cmpsl
cmp
cs
ds
lcall
jg
imul
mov
loopne
pop
xchg
mov
hlt
shll
mov
das
stos
or
dec
jno
loope
ljmp
xchg
stc
popf
pop
add
xor
sub
ret
mov
lock
add
repz
rolb
or
xchg
cmp
jge
sarb
add
pop
xor
cs
popf
dec
sbb
pop
in
dec
pop
mov
insb
loope
fimull
imul
dec
lods
cli
test
sub
fadd
add
jb
jmp
stos
jb
lahf
fcmovb
stos
and
test
pop
out
mov
mov
jg
jnp
fbld
test
jp
dec
leave
sbb
ret
js
xor
popa
mov
jmp
in
sbb
xor
lret
jb
into
ficoms
fcompl
xor
adc
ljmp
or
jo
jl
cld
or
mov
mov
outsb
je
roll
orl
stc
in
sbb
fimull
shl
sub
mov
add
sub
movsl
adc
aam
inc
sub
jb
pop
dec
inc
insl
push
jne
dec
popf
pop
in
adc
dec
jle
push
cwtl
pop
in
fldenv
mov
mov
outsl
cmp
pop
xchg
lret
dec
dec
add
mov
pop
inc
jb
adc
jmp
sub
ds
mov
push
cmpxchg
insb
fldenv
push
mov
xchg
mov
xchg
inc
nop
fisttpll
call
mov
popf
cmpsb
or
ret
aam
xchg
add
ret
pop
ss
into
jns
popf
fs
xor
cmp
jnp
sub
iret
sub
imul
adc
outsl
dec
push
xor
or
sub
push
bound
jns
jp
les
ss
jge
add
gs
inc
cmp
push
into
mov
and
test
add
mov
and
lcall
cltd
mov
mov
out
or
mov
mov
icebp
mov
and
insb
add
ljmp
sti
test
mov
sub
lods
push
push
sub
push
mov
inc
int
sub
jp
sbb
jne
mov
xor
dec
fstl
or
cli
cmpsl
add
cwtl
movsb
jmp
ja
std
into
hlt
jnp
outsl
jle
pop
mov
ljmp
mov
mov
mov
stc
fiadds
in
mov
and
adc
dec
mov
jp
mov
mov
repnz
loop
sbb
jecxz
lret
mov
call
fsubs
jae
sbb
xor
inc
dec
or
mov
push
or
xchg
xchg
call
mov
movsl
push
ret
pop
mov
cs
or
test
push
push
pop
sbb
xchg
mov
gs
lea
mov
leave
dec
add
xchg
shll
sbb
pop
or
imul
jmp
bound
aas
mov
repnz
sti
add
stos
sbb
jg
data16
fidivrl
popw
test
lds
push
sub
nop
sub
in
mov
dec
lock
stc
in
imul
dec
xchg
adc
shll
xchg
ljmp
xchg
or
mov
mov
jo
in
loope
sub
into
add
push
test
xor
lcall
clc
pop
mov
and
xor
jb
xlat
fcmovb
int3
lock
loope
sub
mov
sub
or
ja
sub
sarl
mov
mov
divb
sar
sti
jle
pop
cmp
add
jb
lds
fnstcw
test
aaa
data16
pop
add
ror
or
std
and
and
pop
js
lea
sarb
shrb
mov
fidivl
sbbb
push
mov
jae
ljmp
push
mov
div
pop
cli
cltd
push
pop
mov
pop
jnp
mov
push
out
orl
mov
xchg
push
rorl
jg
jge
clc
pusha
push
mov
mov
xchg
pop
scas
popa
cmpsb
rcrb
mov
jge
mov
das
pop
loope
jle
int3
add
repz
lahf
mov
and
jmp
dec
shl
dec
es
icebp
icebp
imul
scas
adc
imul
test
nop
xchg
add
mov
xor
notb
stc
sub
icebp
pop
sbb
dec
movsb
mov
pop
jecxz
inc
mov
mov
out
lcall
repnz
mov
lods
es
cld
insb
pop
dec
xor
aad
pop
or
mov
in
pusha
lods
sub
sub
sub
lods
and
add
cmp
into
fbld
mov
xor
jecxz
repnz
out
jne
dec
outsl
pop
push
adc
into
sahf
inc
sub
add
sbb
push
fbld
push
jl
movsb
xor
scas
sbbb
divb
cs
push
mov
inc
mov
fucomp
into
push
fists
cmp
fmul
ficomps
and
inc
push
xchg
cld
mov
jb
lods
dec
pusha
les
test
add
fwait
scas
subb
into
add
inc
lret
cld
pop
fcomps
loop
mov
xchg
xchg
dec
xor
ds
pop
imul
aaa
and
scas
loopne
test
imul
aam
aas
shr
mov
adc
mov
rorl
jg
cmp
je
mov
lcall
shr
cmp
mov
fs
push
add
outsb
jnp
imul
cmpsl
aaa
sarb
pusha
xor
mov
jne
mov
jle
cmpsl
stos
and
mov
cmpsl
notl
inc
fsub
pop
cmpsl
xchg
sahf
nop
addr16
push
shlb
jmp
dec
out
ret
pop
pop
cmp
pop
push
cmp
inc
insl
imul
pop
mov
cmp
movsb
fcomip
shrb
out
or
ljmp
cmpsb
outsl
cli
or
icebp
dec
xor
sarb
pop
cmp
cmc
add
adc
aam
xor
xor
xchg
lcall
mov
clc
cmc
mov
sti
ljmp
sbb
xor
dec
sbb
and
and
sub
cmpsl
fldt
add
or
cmpsb
xchg
daa
cltd
sub
xchg
mov
mov
addr16
in
imul
mov
ja
dec
mov
or
push
push
loopne
out
sbb
lret
add
mov
adc
insb
push
aaa
jl
sahf
das
inc
dec
push
cmp
jg
mov
repz
or
sti
test
push
pop
mov
jnp
call
or
push
lock
inc
and
mov
sahf
push
sub
mov
cmp
fld
loope
push
dec
mov
inc
cmp
mov
jno
lcall
or
je
push
push
xchg
mov
sub
iret
dec
mov
xchg
adc
popf
xchg
movsb
xchg
paddq
arpl
pop
loope
xor
aaa
cmpsl
jbe
xorl
cmp
jg
pop
mov
jne
inc
std
jnp
dec
mov
pop
pop
test
push
xor
mov
pop
pushf
push
out
ror
in
repnz
pop
icebp
mov
mov
jae
fildll
sub
or
movsb
add
mov
mov
xor
xor
pop
push
mov
or
int
lahf
mov
jmp
or
pop
mov
jl
dec
out
pop
jmp
imul
rcrb
jnp
mov
push
inc
sub
jecxz
or
sub
lcall
dec
ss
inc
data16
mov
inc
insb
fldt
lahf
aas
aaa
xchg
cltd
loope
push
and
mov
bound
sub
out
xor
dec
outsb
mov
cmc
fwait
call
push
jg
loopne
mov
mov
and
fwait
mov
fisttps
call
xor
fidivrs
mov
xor
in
lcall
nop
ret
dec
cwtl
and
in
movsl
iret
lcall
dec
pop
dec
aas
jbe
dec
outsl
or
mov
roll
stos
jno
add
jno
dec
ds
mov
mov
les
lods
arpl
bound
inc
in
fnsave
push
ss
jb
sub
and
fstps
dec
add
jnp
cmp
pushf
push
ret
xchg
insl
mov
clc
inc
dec
jae
pop
pop
pop
ja
out
inc
mov
and
cmp
jnp
mov
psubusb
or
fbstp
jb
sbb
je
pop
push
fisubrl
pop
das
or
in
orb
jp
dec
lock
imul
mov
pusha
push
cltd
mov
addr16
sbb
imul
mov
mov
cmp
mov
aas
out
jb
addr16
enter
or
ret
mov
cmpl
xor
mov
mov
cmp
sub
jne
int
push
mov
pop
sbb
ja
inc
int
repz
push
popf
pop
jge
mov
dec
cli
dec
testl
push
xchg
adc
lahf
daa
xor
dec
arpl
scas
gs
sub
pop
add
jae
cwtl
int
movsb
out
scas
cmp
orl
movsl
inc
sbb
or
xor
notb
push
repz
sbb
cmpsb
scas
lea
pushw
or
shl
add
scas
or
bound
add
mov
outsl
mov
mov
insl
jne
inc
mov
jae
rcrl
imul
add
sub
push
or
enter
orl
addb
or
imul
xchg
popa
je
lock
or
or
pop
aam
xchg
cwtl
shlb
mov
sub
es
mov
adc
lods
fistl
mov
mov
cmp
leave
out
jae
stc
jg
daa
pop
aad
mov
mov
add
push
mov
addr16
mov
out
arpl
cmp
sbb
pop
sbb
into
pop
mov
es
pop
aas
jmp
pop
mov
popa
lret
and
jnp
cltd
aas
xchg
xchg
jle
xor
and
jp
jne
and
iret
popa
mov
push
mov
push
push
inc
push
or
daa
pop
inc
mov
into
xlat
sub
roll
sub
arpl
test
push
outsb
jge
lcall
aaa
jo
in
adc
rorl
sahf
xor
jle
cmp
sbb
cld
xchg
dec
popf
jo
sbb
xor
out
mov
or
cmp
dec
add
fiadds
pop
pushf
pop
outsl
test
test
orb
push
aad
js
je
and
ja
or
mov
xor
adc
or
pop
shl
lret
lret
cmpl
add
fnstenv
pop
ret
test
xor
mov
sub
sbb
lea
into
adc
xchg
shr
sti
mul
cmp
mov
and
fwait
sub
mov
fmul
sub
lret
repnz
sahf
adc
xchg
cmp
ret
sub
imul
inc
out
fimull
sub
adc
add
lds
xlat
mov
sub
stc
movsb
call
jmp
stos
loope
fnstsw
xchg
pop
inc
ret
xchg
loopne
insl
cmc
lcall
outsb
scas
scas
int3
ljmp
inc
test
mov
repnz
loope
pushf
inc
pop
in
xchg
xor
dec
aad
add
andb
in
js
ss
mov
xor
ja
test
cmp
xor
add
popf
mov
stos
call
test
xor
rorb
fisttpll
xor
mov
movsl
repnz
aaa
lods
jne
xchg
xadd
inc
mov
xor
xchg
into
mov
jnp
daa
loope
sti
out
data16
push
jp
cwtl
pop
je
shr
fisttps
jmp
adc
iret
jmp
icebp
inc
test
loopne
sub
inc
inc
jno
pushf
call
out
stc
jae
les
sarb
lods
lret
aas
adc
lock
cmp
test
mov
lds
adc
cmp
xor
sub
add
mov
jp
add
rcll
mov
xor
adc
insl
decl
aaa
xor
sbb
mov
outsl
cltd
cmp
cs
jne
loopne
sub
adcl
testb
xor
pushf
add
imul
fiadds
jo
je
or
xorl
aad
enter
out
xor
add
mov
cmp
mov
hlt
inc
out
scas
subl
mov
and
shll
out
pushf
inc
jg
and
loope
shr
rol
test
inc
or
jne
mov
push
adc
pop
enter
xchg
dec
ja
xor
int3
aas
mov
lea
cmp
lods
cmp
sub
fs
push
pop
test
fdiv
sub
xchg
sub
adc
or
mov
idivl
sbb
gs
daa
mov
inc
rorb
mov
mov
lock
call
pop
dec
inc
mov
cmpsl
out
sbb
or
mov
repnz
lock
imul
stos
faddl
mov
mov
add
ret
hlt
shlb
dec
push
into
push
adc
ljmp
out
outsb
aam
inc
out
xor
xrelease
movsl
adc
mov
fadds
and
pop
pop
mov
inc
shll
add
xchg
scas
loopne
add
ja
mov
cmc
stc
pop
cld
imul
push
cmp
jl
pop
mov
push
or
test
pop
xchg
sbb
xchg
sub
fists
and
pop
popf
inc
sub
rcrb
fistpll
mov
out
mov
outsl
loop
pop
movsl
xor
loopne
cmp
mov
bound
lods
ret
testl
fmull
or
mov
pushf
fs
adc
fs
clc
sub
push
inc
imul
add
push
loope
scas
push
aaa
add
mov
je
pop
mov
adc
jae
xor
scas
js
addr16
insb
pop
mov
pop
out
pmaxsw
addr16
mov
fwait
mov
cmp
xor
cmp
inc
outsb
aas
arpl
mov
or
fsubr
cmp
mov
negl
mov
lock
movsl
pop
stos
lea
mov
lds
test
pop
mov
jo
or
js
sub
clc
mov
es
ljmp
fbstp
aad
adc
jno
rcl
and
js
leave
jge
cmc
test
inc
cwtl
pop
sbb
push
jge
xor
pop
stos
leave
movsl
pop
mov
call
pushf
nop
lea
sbb
js
andb
inc
jbe
outsl
pop
outsl
es
inc
sahf
mov
loopne
ret
dec
and
in
xchg
jbe
and
es
jmp
push
shrb
xor
pushl
test
pop
inc
pop
and
adc
call
dec
inc
jle
ss
out
xchg
cltd
fldcw
xchg
sbbl
jo
push
lea
cmpsl
cmpsb
sarl
sub
xchg
vpaddq
stos
push
xchg
mov
xchg
mov
sbb
orb
inc
rorb
les
ss
adc
mov
les
inc
push
dec
mov
add
pop
lea
loope
ss
enter
xchg
mov
lea
jo
insl
or
add
lret
inc
xorb
jg
mov
push
mov
mov
mov
movsl
xor
lea
js
in
mov
filds
add
mov
mov
mov
sbb
jb
cmp
jns
sbb
pop
dec
push
iret
loope
jno
dec
sbb
fwait
adc
cli
adc
pop
ret
inc
inc
cli
xchg
mov
jns
imul
lret
mov
pop
pop
adc
out
stc
das
mov
pop
cli
aad
sahf
cmp
fistpl
test
xchg
enter
or
das
mov
sbb
cli
mov
dec
add
push
adc
jmp
daa
pop
xor
mov
mov
xchg
sbb
aad
sahf
mulb
inc
mov
incb
daa
pusha
inc
jnp
adc
out
push
push
pop
outsb
aaa
push
sbb
imul
es
xlat
clc
leave
scas
cld
xor
add
inc
inc
dec
xchg
lock
rolb
mov
aas
cmp
jle
push
into
adc
shlb
push
mov
out
int
inc
subl
js
cld
nop
loope
add
movsl
data16
cli
cmovbe
loope
sti
mov
mov
jo
cmp
subb
inc
xchg
sub
lret
mov
mov
inc
jg
decb
jae
mov
add
or
loop
aad
adc
push
aaa
sub
dec
mov
pop
or
in
cltd
into
fs
xchg
sbb
icebp
mov
pmullw
push
test
sar
pop
lahf
js
or
mov
xchg
or
jge
fistps
xor
xor
test
mov
jno
mov
dec
fcompl
jle
pop
add
or
push
aaa
push
shl
stos
and
test
push
jb
scas
inc
cmp
pop
push
in
imul
mov
es
and
inc
out
push
loope
add
jmp
hlt
nop
mov
mov
lods
loopne
int
imul
lret
sbb
sub
or
leave
ret
inc
in
xchg
inc
pop
shl
pop
lret
in
adc
jge
addb
xor
pop
mov
cmp
add
loope
outsl
dec
std
mov
cmc
mov
shl
andb
sbb
sbb
or
sbbb
adc
in
jl
xchg
mov
je
adc
pop
sub
adc
pop
xchg
mov
mov
cmp
lret
lcall
pop
jno
xor
cmpsb
mov
in
xchg
jle
and
mov
fdivr
xchg
stc
jo
lcall
cmc
js
pop
or
inc
inc
mov
dec
xor
mov
inc
aad
sub
xchg
push
lods
cli
imul
jbe
enter
or
andl
into
cmp
pop
or
loop
cmp
cmp
pop
das
orl
idivl
aad
inc
xor
addl
fldenv
lret
mov
mov
push
les
sbb
jns
mov
jo
pop
pushl
mov
jbe
test
xorb
sbb
dec
fwait
add
pusha
add
push
or
test
push
jmp
ss
pop
into
add
inc
ret
icebp
cltd
shll
push
cld
mov
repz
sbb
cmp
in
jo
mov
mov
pop
pushf
pop
inc
xorb
lock
xchg
add
lods
arpl
cmp
and
ds
xchg
or
outsl
ss
aad
sbb
push
lahf
mov
cmpsb
cltd
ss
rorb
popaw
pop
insb
nop
mov
dec
movsl
aam
subb
and
das
into
mov
sbb
adc
xchg
adc
pop
push
dec
xchg
push
jge
fcmovnbe
sub
or
xor
jno
divb
or
inc
and
scas
add
sarb
push
addr16
ja
or
repz
stc
ds
mov
sti
loop
sbb
pushf
pop
mov
push
mov
sub
push
movl
add
pop
pushf
cld
arpl
inc
repnz
test
cmp
movsb
pop
xchg
decb
and
test
mov
add
cltd
pusha
nop
shl
clc
mov
add
xor
dec
xchg
jne
sbb
adc
mov
push
sbb
insb
mov
xchg
mov
orl
dec
andb
fmulp
pop
pop
sub
iret
sub
push
inc
xor
movsb
rcll
ja
scas
and
stos
test
pop
rcr
push
mov
jnp
dec
mov
xchg
inc
lahf
negb
cld
ret
cli
pop
cli
and
bswap
mov
test
ss
mov
sbb
faddl
mov
xchg
ja
jbe
arpl
cmpsl
aam
add
aaa
lods
cmc
inc
mov
outsb
jecxz
ss
and
jae
jecxz
pop
pop
mov
push
arpl
pushf
jmp
xchg
pop
xor
lcall
scas
jg
mov
sbb
fistl
push
pop
dec
push
xor
xlat
jo
jne
cmp
or
push
xchg
xor
aaa
jl
into
adc
in
data16
and
fwait
push
cmc
push
adc
add
or
push
sub
andb
or
rolb
daa
ljmp
sub
jno
clc
in
pusha
cld
hlt
aam
jno
fs
loop
jnp
fdivrs
lret
mov
jbe
and
nop
mov
mov
fbstp
mov
popa
add
push
or
fcomps
xchg
outsb
xlat
sub
mov
dec
cmp
outsb
pop
ljmp
and
mov
xor
out
mov
xchg
cmpl
es
les
jecxz
dec
pushf
aaa
js
sub
dec
ror
dec
arpl
pop
test
sbb
cmp
es
call
push
cmp
jge
and
roll
shl
fstl
jno
and
push
mov
sbb
in
fisttpll
jne
mov
fstps
pcmpgtd
push
test
mov
jmp
pop
stc
jb
shlb
inc
inc
fnstenv
loop
adc
stos
push
inc
adc
push
pop
mov
sbb
icebp
add
mov
sbb
aas
arpl
clc
test
jns
cmc
adc
jmp
lds
arpl
xchg
xchg
stos
mov
ror
mov
push
stos
xchg
jae
stc
dec
or
test
and
push
stos
sub
mov
mov
aad
jbe
jno
adc
ret
xor
gs
aaa
scas
mov
out
push
sbb
inc
adc
inc
xchg
int
ljmp
mov
decb
pop
int
mov
lret
jl
fucomip
popf
sub
mov
lea
push
adc
mov
int3
pop
jae
sub
mov
pop
fisttpl
mov
sbb
in
scas
fidivrs
faddp
xchg
jne
xchg
arpl
dec
xchg
fistpll
jp
dec
jns
push
scas
ret
and
or
inc
mov
mov
shll
sbb
sbb
cmp
fwait
jl
cmp
xchg
std
push
gs
adc
or
insb
mulb
inc
jmp
jge
in
jns
jmp
dec
jmp
dec
popa
test
lret
mov
mov
std
mov
push
mov
lds
clc
sbb
fisttps
pusha
and
rol
out
jg
inc
sub
push
pushf
add
notl
mov
jp
call
enter
push
push
aam
push
mov
pusha
mov
mov
shrb
pop
lds
pop
inc
pop
fisubrs
add
inc
xchg
loopne
lahf
fsubs
pop
mov
fidivs
xchg
sbb
mov
sbb
mov
xchg
xchg
ja
adc
mov
dec
push
pop
jl
xor
dec
fistpl
rolb
mov
sub
mov
add
mov
mov
shlb
mov
outsb
jecxz
adc
sub
add
push
cmc
data16
int3
push
xchg
loope
out
js
lret
fisttpl
jbe
xchg
mov
inc
aad
popa
iret
out
fsubrl
repz
mov
sub
scas
jp
jp
lods
jecxz
adc
shlb
leave
popl
inc
pop
fdivp
push
into
jbe
lcall
or
test
pop
addr16
cmpsb
xor
cmp
outsb
div
dec
cwtl
mov
sub
push
cmpsl
xlat
push
pushf
lcall
in
adc
stos
sbb
movsb
mov
ss
inc
or
ljmp
aam
mov
xchg
mov
sub
sahf
sbb
pop
lods
shrl
inc
imul
mov
test
push
mov
iret
mov
rclb
movsb
dec
mov
movsb
mov
fadd
jmp
mov
aam
lea
adcb
out
sbb
inc
cmp
loope
mov
fcompl
sbb
push
inc
adc
push
pushf
add
clc
cmc
push
mov
inc
divl
mov
inc
lods
pop
pop
js
mov
cmp
cmp
orb
mov
movsl
orl
jae
lods
add
add
push
xor
lods
jecxz
add
add
add
cmp
call
cli
cmp
nop
and
shlb
cmc
mov
arpl
xchg
adc
mov
jecxz
sahf
pop
popf
fsubp
aad
fmuls
push
fisubs
push
out
ret
sub
out
dec
and
xlat
into
adc
insl
mov
es
jne
dec
push
imul
insb
test
xchg
or
add
inc
je
roll
adc
sbbl
aam
cmpsl
nop
xlat
stos
pop
loop
ret
mov
push
or
push
adc
inc
ljmp
lods
in
pop
shlb
out
and
mov
xchg
mov
sbb
jno
add
outsb
push
mov
lret
cmp
add
jmp
ss
adcb
scas
jmp
xor
in
mov
push
mov
daa
mov
mov
rcl
rolb
rcrl
test
jge
pop
and
xchg
aas
fisubrs
jmp
xchg
movsl
sub
jne
or
clc
stc
fwait
data16
mov
sbb
and
cmp
js
enter
adc
lea
mov
lods
adc
sub
sbb
aad
pop
stc
das
pop
mov
adc
xchg
xchg
dec
enter
pop
and
push
test
test
nopl
fwait
mov
mov
jo
inc
jo
sbb
ds
andb
pop
loop
inc
ja
scas
xchg
xchg
cli
jns
js
out
dec
mov
stos
dec
scas
dec
mov
cmp
clc
lahf
dec
pop
pop
fwait
xor
imul
shr
aad
push
and
jecxz
mov
and
adc
mov
push
sti
in
mov
fnstcw
aam
insl
mov
or
mov
xchg
loopne
mov
stos
cltd
shrb
jge
test
xchg
add
sub
mov
sub
inc
ds
push
add
sub
lock
lret
lcall
cmpsl
stos
pop
adc
fdivrl
add
jmp
or
lret
pop
cmpb
dec
mov
data16
and
push
rorb
pop
inc
mov
dec
mov
adc
push
pusha
mov
ja,pn
cmp
mov
movswl
mov
aaa
test
out
push
imulb
and
shl
push
ret
xchg
xor
movsb
push
in
cmpsl
cli
insb
cmp
pop
lret
das
ja
daa
daa
mov
xor
jle
xchg
fldcw
add
xchg
or
leave
push
ret
push
loope
ficomps
loopne
cltd
repnz
scas
ret
rcrl
or
aas
pop
cwtl
or
call
mov
ljmp
and
cmp
jl
sbb
sti
jno
adc
mov
cmpsl
mov
std
dec
pop
mov
or
mov
les
lea
cmp
cmp
push
mov
or
and
lds
sbbb
pop
inc
nop
fnsave
jle
and
movsb
repnz
in
mov
sub
out
shl
rcrb
inc
cmp
insb
jo
lock
sub
in
push
mov
cmp
dec
mov
lret
jno
ds
mov
decb
cmp
out
nop
pop
mov
mov
popa
dec
fisttpl
mov
xorl
bound
push
push
xchg
or
mov
dec
adc
enter
ret
lret
into
inc
sahf
add
jae
and
sub
cmp
xchg
addr16
xlat
dec
repz
xor
xchg
rcl
iret
mov
xor
or
xchg
pop
dec
stos
mov
fwait
rorl
xor
shl
and
insl
lods
stc
pop
lods
out
lods
mov
jo
or
cwtl
outsl
push
xchg
aad
popa
dec
push
ret
rolb
add
negl
cmp
call
aas
in
jbe
scas
push
pop
xor
fildl
xchg
pop
pop
shlb
daa
aam
sbb
popa
jp
pop
xor
and
sbb
mov
in
sahf
cli
xchg
popa
in
jecxz
xchg
clc
and
mov
cs
hlt
push
xchg
fistpl
out
mov
mov
jl
nop
and
jbe
int3
leave
outsb
mov
sti
mov
inc
push
jbe
dec
inc
into
daa
lods
subl
flds
mov
mov
pop
adc
push
xorb
push
in
imull
add
fldcw
ljmp
iret
cs
ret
jge
divl
pop
fisttpl
jg
mov
insl
outsl
add
add
sub
xchg
leave
loopne
mov
mov
cmp
ljmp
stos
incl
or
rclb
pop
jno
dec
out
xchg
sbb
mov
and
mov
shl
leave
mov
pop
test
aaa
movsb
push
jge
jl
mov
or
dec
inc
bnd
or
cmp
pushf
and
dec
and
pop
cmp
das
and
imul
and
stos
push
inc
push
cmp
add
xchg
mov
dec
sbb
add
dec
lods
xchg
fld
rorb
negb
aad
into
and
mov
mov
xorb
scas
sub
adc
xchg
fisubrl
ds
adc
cld
int3
outsl
pop
shl
lods
add
dec
ret
cmp
and
push
popf
and
cld
jge
sbb
popa
dec
pop
adc
outsl
cs
sbb
cmp
push
imul
cmp
mov
cmpsl
sub
repz
lods
subb
add
xchg
and
fdivs
and
xchg
nop
cmp
int
cmpsl
dec
xchg
jae
rorl
adc
sbb
push
mov
mov
shr
sbb
xor
jge
or
ja
stos
stos
mov
fsubr
or
popa
in
pop
add
jmp
jmp
sar
pop
pop
fisttpll
and
mov
addr16
xchg
stos
sub
cmc
mov
cmpsb
jl
pop
jne
mov
push
pop
jbe
push
ljmp
xor
cmp
xchg
mov
push
sub
hlt
inc
pop
out
js
pop
insb
lcall
cmpsl
and
dec
or
dec
ss
addl
sbb
cltd
xchg
xchg
data16
subb
lock
negb
jmp
mov
or
das
inc
mov
jp
sub
inc
lods
mov
mov
mov
jmp
fistps
xchg
inc
add
fwait
movsl
jg
rcll
cmovl
shlb
incl
das
jecxz
out
lcall
stc
xchg
stc
mov
mov
push
in
fisubs
adc
inc
std
loopne
jecxz
mov
loope
aad
sbb
repnz
hlt
addr16
mov
aas
mov
fldl
xlat
or
lods
sub
push
aaa
pop
push
xor
xchg
xor
imul
mov
lock
mov
push
sub
xchg
pushf
fisttpl
jb
js
dec
push
sarl
lods
push
add
pop
sub
and
sub
cmpsb
pop
addl
jge
fnsave
sub
cmpxchg
mov
sbb
stc
jge
sbb
aas
mov
push
int3
fnsave
or
daa
adc
loopne
les
data16
pushf
push
cmpsb
dec
pop
xchg
push
les
outsl
imulb
dec
jp
notl
and
and
insb
add
das
mov
or
test
pop
cmpb
xchg
jnp
test
and
loope
fidivl
sub
jnp
aaa
mov
adc
roll
clc
pop
cmp
repz
stc
dec
push
and
gs
and
cmpsb
in
dec
fistpll
mov
cmp
fucomi
lods
arpl
inc
or
cli
movsb
rcr
pop
dec
sbb
movsl
push
loop
dec
mov
addr16
imull
data16
add
lods
je
and
cmp
jbe
or
sub
xorl
adc
push
mov
out
or
lds
dec
xchg
stos
mov
sahf
imul
call
int3
sub
sahf
inc
jno
aad
jmp
and
aaa
xlat
jae
popf
data16
movb
addr16
xchg
jecxz
scas
test
mov
in
add
adc
mov
inc
lcall
lea
lcall
popa
and
mov
stos
mov
ss
test
add
hlt
dec
ss
or
xor
clc
xlat
and
jns
test
sarl
fisubrs
xor
push
mov
pop
mov
outsl
addr16
mov
dec
lret
scas
add
mov
or
dec
mov
andb
sub
adc
outsl
push
xchg
jb
push
jle
lcall
insl
scas
pusha
icebp
fimuls
and
fiadds
daa
add
clc
aaa
js
clc
dec
dec
or
mov
aad
mov
add
test
and
cmp
sti
into
andb
xor
sbb
and
test
sbb
mov
cld
mov
push
inc
leave
adc
adcb
ss
fs
jae
mov
pop
aas
add
idivb
aas
sbb
lret
out
insl
xchg
mov
xchg
jb
push
xor
and
mov
mov
cmp
mov
fucomip
cmpsl
push
pop
inc
push
jp
idiv
sti
pop
mov
xchg
ljmp
pop
lret
flds
inc
adc
pushf
bnd
fimuls
xor
inc
stos
lods
inc
jecxz
add
sbb
jmp
mov
push
inc
jecxz
push
or
push
jg
insl
ret
pop
sti
imul
mov
mov
imul
sarl
pop
mov
mov
popa
push
add
or
xchg
mov
and
jno
nop
mov
aas
dec
xlat
ds
sbb
mov
or
push
rorl
aam
or
sub
mov
sub
xchg
cli
sbbb
mov
mov
jmp
adc
sbb
push
fstpl
ja
cmpb
fs
adcb
mov
divb
out
repnz
xor
add
sbb
aas
shlb
bound
push
jbe
test
lcall
pop
pushf
iret
or
cltd
int3
mov
jmp
xorl
push
add
fidivrl
mov
popa
inc
push
test
sub
sbb
ds
pop
pop
mov
jl
adc
shl
into
and
xchg
filds
pop
sbb
adc
pop
dec
mov
rcrb
push
xor
sub
lock
sbb
outsl
jge
sbb
fs
stos
imul
in
jnp
push
mov
and
sub
or
lret
or
das
or
ss
xchg
push
out
cmp
push
nop
inc
sti
lods
pop
into
cld
enter
lcall
pusha
and
mov
popa
cltd
imul
dec
or
mov
std
mov
xchg
lods
xchg
in
lret
cmp
andl
or
xor
xchg
dec
fldenv
mov
mov
cmpsb
xor
pop
test
push
jo
jae
dec
in
in
daa
push
add
lret
jae
dec
mov
mov
jae
mov
mov
adc
aam
push
jmp
sahf
aam
add
mov
addr16
test
in
adc
mov
pop
imul
mov
push
cmpsl
mov
mov
sub
push
add
scas
dec
adc
js
xchg
int
dec
xchg
nop
call
push
sbbl
shlb
jmp
cmp
push
and
push
xchg
dec
xchg
jmp
push
jno
int3
sub
mov
mov
xchg
ds
out
sbb
jg
jne
inc
xor
loope
imul
push
scas
cmp
mov
adc
in
and
cmc
bound
loop
dec
pop
popf
push
or
cld
or
idiv
out
das
repnz
xchg
aad
pop
out
in
test
stc
inc
add
les
imul
cs
int3
fstpl
cld
lods
sti
mov
inc
add
mov
xchg
rorb
cmpsb
inc
cltd
xchg
fisttpll
nop
add
popf
hlt
dec
icebp
mov
cld
test
imul
in
jno
test
popa
push
pop
les
lret
dec
js
push
mov
test
xchg
fistl
dec
push
loopne
adc
xchg
imul
or
das
inc
mov
xor
popaw
test
or
insb
popa
push
ret
ds
test
jnp
dec
aas
fsubrl
mov
adc
jmp
push
and
jo
test
cmc
aam
xchg
scas
bound
test
test
adc
lods
sahf
sbb
dec
test
in
popa
cmp
push
sub
jbe
into
sbb
mov
daa
ffree
out
xor
stc
repz
outsl
int3
shl
fsts
mov
mov
iret
bound
add
and
add
icebp
pop
loop
iret
adc
lea
gs
pushf
mov
pop
sub
xchg
mov
adcb
sbb
cld
jne
andb
call
insl
push
fsubs
jbe
cmp
test
cs
xrelease
mov
test
lea
mov
push
int3
ja
push
or
stos
scas
fcomps
imul
sub
pop
adc
cld
shr
aad
icebp
fimuls
mov
push
shll
sub
cwtl
xchg
lcall
test
aad
imul
cmp
out
jle
push
out
xor
repz
nop
cwtl
adc
aaa
std
or
cmp
sahf
xor
clc
mov
pop
sbb
adcl
test
fsubr
xchg
inc
fmuls
xchg
add
fnstenv
scas
mov
push
lods
xchg
pop
or
jo
add
ds
std
lock
hlt
lods
stc
push
mov
xchg
mov
push
inc
sti
mov
stc
add
scas
test
push
data16
sbb
xor
or
push
in
or
sub
out
daa
push
out
scas
or
stos
or
je
orb
sub
scas
fistps
imul
mov
lea
inc
into
ja
mov
pop
shll
pop
prefetchwt1
sub
mov
push
mov
clc
pop
scas
xchg
xor
fldenv
mov
and
ss
iret
loope
outsb
test
or
mov
sahf
and
mov
add
iret
xchg
popf
jbe
dec
cmp
pop
xor
adc
adc
cmp
loopne
mov
fimuls
add
imul
xor
mov
jmp
lock
lret
push
inc
not
jno
dec
xchg
xor
adc
cltd
xorb
cld
add
jmp
xchg
aad
not
xchg
push
fsub
aas
mov
pop
fsubl
inc
xor
and
mov
fldcw
lahf
bound
cmp
or
test
imul
jnp
fs
nop
cmc
xchg
and
sub
inc
into
fisttpl
add
aaa
cwtl
dec
sub
lods
xor
pop
cmp
cmp
adc
repnz
inc
mov
int
or
xchg
and
dec
adc
mov
in
pop
adc
cld
and
ja
adc
mov
xchg
rol
push
lahf
and
jge
sarl
lock
lods
xchg
hlt
pop
mov
int
or
outsl
jb
push
pop
test
inc
hlt
in
push
push
or
or
push
push
lcall
ret
pop
icebp
aad
stos
push
ljmp
insb
dec
ss
jb
pushf
pop
das
push
stos
shrb
xor
ret
and
ds
fisttpl
sub
es
jo
push
cmp
addl
sub
push
inc
int3
add
in
ficomps
cmp
and
cli
lret
pop
imul
insb
dec
dec
sti
pop
mov
sti
mov
xchg
cld
bound
xchg
mov
jno
inc
std
stos
xchg
cmc
cmpsl
repz
fiaddl
nop
pop
mov
pop
shrb
shll
scas
adc
js
idivb
cmp
mov
in
test
pop
mov
and
adc
fwait
mov
stos
cwtl
cltd
aad
inc
outsb
fld
and
xor
jmp
add
cmc
insl
cmovae
add
lahf
aad
mov
mov
jmp
or
lods
mov
jecxz
xchg
jne
pop
sahf
loopne
push
lock
mov
hlt
unpckhps
fldl
ljmp
and
jb
enter
mov
mov
lods
test
sbb
xchg
or
adc
push
outsb
add
in
arpl
testl
xchg
mov
mov
cltd
mov
outsl
inc
xor
out
loope
add
fyl2xp1
fwait
imul
and
or
arpl
push
mov
in
inc
ds
cli
mov
fbstp
sub
cs
rcl
add
xor
in
sahf
mov
fsubs
loope
shr
sub
xchg
jb
rorl
sub
xorb
adc
push
sti
pop
push
mov
mov
jle
dec
lock
dec
xchg
mov
mov
xor
push
testb
loope
push
mov
mov
or
lock
aas
inc
jp
adc
int
loopne
gs
jg
sbbl
sti
sbb
xchg
jp
outsb
shll
es
gs
add
sahf
push
je
cmpsl
mov
push
sarb
dec
imul
shrl
inc
mov
mov
pop
ss
push
pop
xchg
xor
xor
cmpsl
jbe
inc
cmp
in
dec
test
sbb
dec
into
push
ss
xor
inc
pushf
add
dec
daa
out
mov
mov
dec
testl
jl
popa
imul
mov
mov
int
xor
ljmp
jg
mov
std
in
popa
ss
dec
push
push
add
xchg
or
pop
inc
out
lock
cmp
xchg
cli
aaa
popa
stos
mov
lds
daa
test
enter
repz
lcall
pop
insl
aam
in
mov
mov
cli
jbe
and
jno
ljmp
lret
add
fs
inc
rol
ret
sub
and
sbb
inc
push
push
gs
lock
mov
bound
lods
mov
sub
mov
fildll
stc
pop
pop
popa
and
gs
inc
mov
xor
and
in
fimuls
pop
dec
xlat
leave
je
jecxz
sti
gs
rol
out
xchg
addr16
cmpsl
icebp
cmp
ja
dec
or
fdivs
arpl
mov
jge
std
mov
rclb
sahf
into
mov
inc
movsl
add
inc
sub
sbb
aad
sarb
mov
mov
lock
add
add
sahf
ffreep
pop
fistl
movq
cli
cmc
pushf
lret
inc
loop
mov
mov
into
stc
insl
test
lods
outsb
jge
lods
and
or
push
addr16
jno
pop
fstps
jge
es
nop
ret
xchg
add
in
addr16
and
repz
std
iret
and
and
pop
sbb
test
jecxz
mov
inc
pop
dec
stc
enter
adc
mov
dec
and
jmp
orb
jmp
mov
lds
faddl
inc
mov
mov
mov
scas
mov
adc
cmp
cmp
aad
xchg
adc
push
lret
push
sti
pushf
or
pushf
ja
test
xor
xchg
jp
leave
push
lods
test
push
cmp
insb
stos
cmpsl
mov
leave
or
jl
cmpsl
pop
push
pop
and
push
lcall
imul
movsl
bound
lods
aas
inc
incl
jnp
loopne
mov
movl
imul
jmp
inc
mov
or
xor
adc
push
sbb
mov
rol
inc
out
add
push
jp
rol
xor
shll
sbb
test
jp
arpl
jecxz
xchg
xchg
push
and
nop
lret
adc
andl
mov
stos
dec
lods
cmp
sbb
push
data16
push
push
test
fistpl
cld
jo
fcmovnb
insl
inc
int3
sub
pop
sub
movsl
push
add
mov
ds
sub
jnp
and
xchg
out
imul
aad
fcoms
leave
jecxz
push
fstps
lea
mov
lods
jo
mov
push
pop
dec
jns
jmp
inc
pop
pop
push
adc
imul
push
out
test
shlb
sbb
aas
daa
std
cmpsl
mov
lods
inc
add
pop
mov
cmc
and
sbb
mov
lcall
dec
push
subl
adc
decl
push
xchg
add
in
leave
popf
and
je
inc
pop
xchg
mov
sbbb
orl
aam
cli
fwait
sub
sbb
repz
div
es
bound
xchg
push
insl
mov
push
pop
add
ljmp
mov
sbb
aas
ja
or
inc
lret
jo
mov
sub
les
loope
dec
sti
call
jo
mov
sahf
xor
outsl
mov
xchg
inc
sti
je
mov
adc
pop
jo
push
sbbb
iret
sbb
dec
ljmp
aaa
bnd
test
enter
orl
into
jae
popf
mov
sub
pop
pushf
dec
out
pop
sbb
mov
dec
inc
in
push
dec
cltd
arpl
push
and
push
lock
stos
jb
inc
ljmp
sub
lods
cmp
shlb
jp
xchg
push
and
cli
hlt
int
xor
push
pop
test
fwait
sub
fildl
pop
mov
or
xor
dec
xor
and
int
mov
popa
and
cmpsb
mov
inc
pop
testl
enter
push
sarb
icebp
sbb
sbb
nop
pop
popf
mov
mov
inc
insb
mov
in
or
outsl
sub
in
mov
sbb
int3
sbb
ljmp
sarb
add
xor
mov
sti
pop
adc
push
inc
cmp
and
mov
in
inc
ror
jp
jge
sti
jb
jb
leave
lcall
sub
or
adc
push
adc
cld
fmull
mov
addr16
pop
mov
call
lock
xchg
mov
hlt
popa
shll
xchg
push
jmp
jae
mov
test
clc
or
in
jge
int
adc
mov
fwait
pop
icebp
push
aaa
add
imul
or
mov
mov
add
aaa
xorl
int3
fidivrl
loop
or
adc
inc
cmp
mov
adc
push
repz
mov
mov
notl
sub
and
bound
push
mov
mov
cmpsl
nop
adc
js
sub
and
aas
iret
loop
mov
push
mov
sti
aaa
push
addr16
lods
popl
dec
popa
in
pop
xor
xorb
push
addl
sar
and
test
jne
loopne
test
mov
adc
adc
imull
stos
pop
fnsave
inc
mov
inc
in
jl
pop
or
ss
loop
int
ds
into
in
testb
xchg
movsl
dec
call
mov
pop
xchg
dec
sbb
jbe
aam
fdivrp
lret
push
call
fistl
popf
aad
mov
push
mov
mov
loopne
push
sub
aas
jne
lods
push
sbb
lcall
add
xor
js
out
stos
das
lods
shll
add
and
negb
out
out
jmp
ds
jle
push
or
pop
mov
mull
pop
stc
mov
add
fs
out
out
inc
and
mov
pop
cwtl
cmc
aas
mov
inc
mov
dec
ss
int3
cs
mov
test
popa
mov
incb
cld
cs
xchg
mov
mov
popf
add
push
cmp
test
ss
jl
pusha
popa
sbb
adc
mov
rcrb
leave
scas
or
cmpsb
outsl
out
pop
fnsave
dec
jmp
fnsave
insb
cmp
call
mov
mov
dec
mov
dec
cmp
adc
cmp
dec
push
insl
test
mov
sbb
mov
mov
add
or
rolb
rolb
push
mov
xor
pop
add
cli
pop
mov
out
das
sbb
iret
lds
and
jo
aad
jnp
or
xchg
pop
add
adc
xchg
sub
mov
and
mov
ret
mov
icebp
and
add
sub
cwtl
repz
xchg
dec
orb
mov
mov
leave
leave
xor
mov
shll
test
sti
cmp
xlat
mov
in
and
adc
mov
cwtl
shrl
cmp
jbe
jne
outsl
xor
jns
les
inc
leave
ss
ret
bound
call
mov
sahf
subl
lret
test
push
xor
and
dec
xor
pop
xorl
arpl
or
jbe
js
js
xor
das
jae
fstp
jp
hlt
sub
sbb
aaa
mov
cmp
inc
sarl
add
popf
pop
jns
repz
dec
loope
call
push
out
mov
movsl
call
jle
ja
movl
fwait
sbb
mulps
and
xchg
jo
outsb
call
mov
sti
or
xchg
or
subb
push
jbe
dec
xchg
pusha
les
mov
loop
pop
cmp
jnp
mov
push
mov
fisttpll
xchg
les
arpl
pop
je
inc
repz
sbb
mov
mov
cmovb
dec
mov
sahf
ljmp
lret
xchg
cmpsb
sub
mov
repnz
vsqrtpd
mov
shlb
mov
push
test
mov
and
pop
les
hlt
ss
pop
out
divb
js
sbb
dec
fcomip
xor
cmp
cltd
scas
add
adc
scas
outsb
daa
cmpb
scas
xchg
bound
push
out
das
cld
mov
pop
repz
inc
stc
pop
xor
out
mov
add
cs
sub
in
add
ljmp
cmp
movsb
xorb
sub
sbb
ljmp
in
jle
lods
sbb
push
xor
push
outsb
mov
inc
pop
insl
out
adc
jp
pop
mov
out
lret
jb
iret
mov
sarl
icebp
mov
cmp
lret
push
dec
gs
add
jge
xor
lret
jnp
pop
fiaddl
iret
dec
jmp
faddl
out
and
push
cmp
lea
mov
std
push
mov
loopne
xchg
test
lret
mov
sub
pop
dec
xchg
mov
push
xchg
insb
outsb
decl
cli
es
push
aad
ja
loop
inc
sti
sub
repnz
or
sub
pop
sbb
in
fildl
rcl
rol
pop
sbb
fcomip
pop
int3
inc
scas
mov
imul
xchg
sahf
cmc
insl
pop
gs
jp
lds
pop
nop
pop
test
cmc
push
push
push
js
sub
in
dec
sbb
cmp
adc
mov
sub
inc
mov
pop
jg
flds
mov
jge
mov
cmp
mov
mov
outsl
or
ret
add
data16
ja
jo
test
cld
inc
mov
shlb
loopne
xlat
jo
out
xor
push
fcomip
mov
and
notl
shl
adc
insl
adcl
mov
lods
ret
leave
ss
loopne
aaa
and
mov
cmp
xchg
int
mov
das
add
jmp
xor
sub
in
outsb
lock
add
xchg
test
cmp
loope
jne
shll
cmp
pop
mov
push
cld
arpl
pop
mov
divl
lock
xlat
and
lods
mov
lahf
lcall
aad
jno
stos
dec
xchg
fwait
aaa
rorb
push
insb
fadd
pop
push
mov
andl
pop
push
jge
cmp
sti
xchg
push
jno
push
movsb
das
xchg
insl
push
pop
jbe
in
jle
add
cmc
icebp
jo
push
mov
pop
mov
inc
push
and
icebp
repnz
xchg
lret
and
push
xchg
xlat
popf
in
mov
imull
in
push
js
jae
mov
out
xchg
add
xchg
jmp
ds
jno
push
sub
xor
scas
inc
mov
out
ret
push
add
xchg
sarb
pop
xor
dec
xchg
mov
sub
daa
xchg
dec
inc
pop
cmp
lret
push
aaa
mov
aam
daa
mov
cmp
loope
dec
roll
pop
inc
dec
rorl
lods
addl
gs
mov
nop
cltd
daa
mov
divl
and
xor
add
sbb
mov
andl
cmp
jo
in
push
jl
fldt
mov
cs
pminsw
pop
les
cld
add
jbe
mov
jmp
mov
fldln2
pop
gs
sbb
repnz
mov
push
pop
cmp
mov
mov
pop
push
inc
rol
data16
sti
xor
push
inc
test
jle
ljmp
adc
push
or
dec
jb
out
popa
mov
mov
lret
popa
pop
mov
xor
xor
push
xor
cltd
in
icebp
jecxz
and
jg
ja
fldl
aad
lods
xchg
adc
dec
dec
add
insl
jb
or
mov
push
cmp
and
cmp
int
pop
mov
cli
pop
push
stos
xchg
enter
mov
mov
clc
push
les
imul
xchg
fimull
hlt
mov
lret
aas
je
and
fists
mov
and
pop
lock
cmc
cmp
insb
sbb
loope
cmp
mov
fcmovnbe
and
mov
lock
fcom
dec
das
mov
add
icebp
jl
pop
push
mov
aaa
adc
xor
mov
cld
or
nop
loop
lods
divb
or
push
adc
push
sub
pop
out
fmuls
xor
cmp
fdivs
imul
lret
lea
adc
mov
push
pop
mov
xchg
repnz
add
rcpps
data16
mov
out
push
adc
lods
adc
xchg
fxtract
movaps
inc
fnsave
rcrb
insl
bound
mov
mov
iret
sbb
jnp
mov
push
pop
or
rcl
fcomps
sub
scas
cmp
fistps
push
xchg
dec
cli
push
pushl
out
je
inc
mov
mov
cmpsb
pusha
mov
std
or
mov
add
cmp
jbe
jb
jp
loope
adc
aas
shrb
shlb
mov
aad
or
dec
mov
sbb
add
mov
out
or
imul
dec
pop
into
lods
sbb
fistl
xchg
je
mov
loopne
and
jne
mov
mov
and
mov
sbb
popf
dec
or
pop
outsb
pop
call
inc
mov
dec
inc
lods
mov
inc
pop
jb
xchg
mov
in
mov
mov
dec
or
in
subb
divb
je
shl
fimull
movsb
mov
cmp
scas
adc
push
idiv
adc
sti
stc
das
push
push
mov
xchg
jecxz
lcall
stc
aam
mov
jge
scas
mov
add
inc
sbb
or
out
leave
mov
dec
test
in
and
jmp
imul
stos
lret
lods
je
push
je
mov
nop
jle
sbb
in
jno
jg
pop
push
inc
hlt
int3
pop
icebp
data16
jno
jns
xor
push
mov
inc
dec
bound
sub
repz
mov
insl
iret
pop
xlat
cmp
or
mov
popf
lahf
mov
repz
out
pop
inc
std
push
stos
aam
scas
mov
pop
out
push
jne
mov
std
xchg
emms
out
rcrl
xchg
jb
add
jl
int
jl
add
sbb
test
add
mov
jbe
leave
adc
call
and
lods
cmc
cmp
mov
push
adc
scas
rol
nop
dec
pop
fcmovu
and
add
mov
dec
data16
repnz
pop
cmpsb
aas
insl
dec
add
xchg
mov
mov
out
and
jmp
fdivrp
adc
lds
das
out
fs
rcl
fwait
lods
jne
in
xor
adc
mov
data16
dec
jnp
outsl
bound
pop
leave
dec
lcall
or
pop
or
push
lahf
jmp
in
xor
rcrb
jo
adc
jne
inc
lret
jno
pop
push
je
rorb
ret
jmp
addr16
rcll
sub
pusha
cli
sar
jo
xchg
add
repz
or
dec
lock
xchg
ja
ret
add
cmpsl
pop
jecxz
push
sub
push
sub
xor
or
cmpsb
sbb
jbe
jns
testl
lea
popf
in
scas
push
xor
dec
in
mov
stos
pop
ret
xchg
xchg
stos
and
push
jge
inc
push
lret
add
sbb
sub
cmp
stos
bound
mov
jge
cmp
mov
lret
testb
popa
lcall
inc
imul
icebp
sub
mov
in
out
hlt
pop
xor
mov
inc
or
xor
add
pop
cltd
test
cmp
inc
and
filds
and
xlat
sbb
or
mov
pusha
pop
cmp
cmp
mov
adc
or
xor
js
in
pop
add
fsub
cmpsl
das
cmp
or
test
lods
icebp
lds
adc
fsubrs
inc
pop
adc
mov
mov
inc
mul
insb
int3
movsb
sub
stos
and
test
push
shll
pop
mov
hlt
xchg
outsl
aam
sti
and
call
lods
cmp
fwait
stos
cmc
adc
fisttps
leave
xchg
es
icebp
lds
lods
adcl
mov
xor
out
cmc
movsl
ror
out
shlb
cs
in
jg
hlt
insl
movsl
or
das
jns
mov
jg
jecxz
inc
outsb
std
aaa
mov
in
test
mov
mov
loop
lds
push
lret
fsubl
test
xor
jge
push
adc
and
decb
jmp
pop
aad
jo
adc
pop
push
fsubl
sub
stos
cmp
dec
sti
and
dec
fs
jmp
push
push
mov
mov
arpl
push
jle
dec
ret
data16
jo
test
rclb
push
movsl
xor
inc
jecxz
fnstcw
in
data16
sahf
aad
mov
or
cmp
xchg
xchg
lret
push
bnd
rorb
adc
orl
fcom
test
add
mov
or
sbb
les
mov
jge
mov
sub
gs
inc
das
dec
xor
out
es
jae
aas
pop
sub
int
pop
push
daa
stos
icebp
sub
int
stos
scas
mov
add
ss
lods
in
or
xchg
les
repz
fsub
lret
repz
push
xor
cmp
push
or
cltd
jae
arpl
adc
xor
adc
dec
inc
cs
aaa
push
addb
aad
mov
mov
adc
mov
inc
mov
xchg
ljmp
adc
dec
add
or
stos
mov
jae
dec
fiadds
lods
psubusb
js
hlt
mov
cmc
jb
adc
loope
sbb
and
loopne
jg
ds
cld
stos
jmp
or
or
pop
or
jno
jbe
and
in
xchg
movsb
dec
or
addr16
sub
sarb
outsl
out
adc
xchg
ds
jns
mov
lcall
inc
fisubs
xchg
mov
add
dec
xchg
gs
fidivrl
mov
mov
sub
std
xchg
out
push
adc
xor
clc
outsl
adc
inc
xchg
and
mov
push
loopne
push
shrb
cwtl
ret
adc
and
mov
outsl
lock
add
call
sub
xlat
mov
stos
aaa
into
mov
cld
stos
arpl
pop
stos
xchg
push
adc
mov
stos
ljmp
or
aad
or
mov
xchg
and
cs
std
cmpb
insl
ja
jae
xchg
sub
dec
movl
adc
sub
adc
mov
int
mov
in
mov
xor
jne
sub
fwait
and
std
cmp
xchg
xchg
js
jp
cmp
aaa
adc
jg
mov
nop
inc
dec
xchg
sub
add
cmc
movsl
insl
cltd
ret
ret
pop
insl
dec
mov
push
aad
int3
ficomps
mov
pop
sub
jecxz
insb
xor
pop
pop
push
enter
pushf
mov
cs
or
repz
jge
xor
dec
imul
pop
repz
pop
cmovnp
push
add
cmpsb
jmp
scas
jmp
movsb
or
mov
cmpsl
cmp
mov
movsl
inc
rep
inc
ljmp
xor
jp
in
xor
negl
inc
inc
add
push
jbe
pop
cmp
xor
lret
and
lds
xchg
daa
cmp
and
push
hlt
insl
popf
xchg
lds
jmp
sub
adc
ficomps
mov
push
loope
add
jl
and
sub
xor
xor
mov
pop
mov
je
adc
mov
mov
mov
and
and
mov
lock
sarb
out
fsub
ffreep
frstor
mov
adc
enter
insb
mov
jnp
mov
ss
cmp
stos
into
mov
xchg
scas
ret
inc
scas
push
shlb
jecxz
sbb
dec
cmp
clc
pop
push
xchg
adc
adc
lock
inc
ss
adc
pop
data16
add
cmp
pushf
jne
mov
jnp
jb
adc
into
rcr
add
les
inc
and
jl
pop
bound
push
fstpl
mov
inc
pushf
ja
addl
aam
lahf
cmc
enter
mov
mov
gs
dec
pop
inc
xchg
aam
insl
push
adc
mov
fidivs
adc
nopl
js
mov
std
lahf
arpl
adc
daa
pop
adc
rcrl
mov
jo
cmp
pushf
push
adc
jge
loop
push
push
mov
adcl
push
xchg
sti
pop
stos
mov
mov
les
scas
lret
ret
arpl
aad
sti
jb
sbbl
push
xchg
pop
mov
hlt
dec
mov
inc
inc
push
jecxz
ja
jle
imul
push
jecxz
sahf
dec
add
push
ffreep
lock
mov
test
dec
into
test
repz
test
sahf
and
stos
push
cmpsl
sbb
jl
push
mov
lds
lret
into
in
and
adc
repnz
cmpsl
jne
ljmp
sub
add
test
out
mov
icebp
adc
hlt
sbbb
cmpsl
inc
jae
push
cltd
scas
or
mov
inc
pop
stc
adc
xor
ret
adc
cwtl
jg
push
imul
and
adcb
idivl
mov
jmp
inc
mov
push
movnti
push
push
mov
xchg
add
lock
vmovaps
es
add
aas
and
aam
jb
fisttpl
lock
xor
fnstcw
mov
movsb
cwtl
outsl
jp
jo
sbb
dec
jp,pt
push
add
push
nop
enter
push
fdivrl
in
and
push
roll
test
fadds
or
test
push
push
mov
fxch
lret
leave
sbb
push
jp
adc
orb
mov
movsl
mov
hlt
in
lock
mov
mov
stc
inc
mov
fldl
sub
and
jmp
lds
mov
pop
sbb
and
or
mov
jnp
jb
lret
mov
cld
js
imul
and
loopne
and
ret
xor
out
mov
hlt
stos
add
insb
mov
mov
out
jecxz
into
sub
mov
xlat
xor
adc
repnz
into
sub
call
call
test
pop
in
out
hlt
mov
mov
fnstsw
mov
or
out
mov
loop
movsb
xlat
dec
mov
jbe
orl
in
mov
dec
jo
push
aad
daa
int3
jo
pop
out
movsl
mov
cmp
sbb
or
cli
inc
ficomps
jb
jbe
push
stos
mov
fs
dec
mov
mov
daa
ljmp
mov
dec
push
push
lods
add
fld
pop
adc
mov
idivl
fbld
leave
hlt
lcall
repnz
cmc
popf
dec
fwait
jne
push
dec
pop
push
ss
dec
loopne
call
les
fldcw
dec
xor
jmp
xchg
addl
dec
loope
jge
dec
and
cmp
leave
js
insb
xchg
ljmp
dec
sbb
scas
push
mov
outsb
sbb
or
cs
cmpxchg
cltd
jge
jae
popf
mov
push
fwait
mov
test
mov
inc
add
sub
cs
jge
xchg
insl
les
or
icebp
xchg
loopne
leave
aam
push
mov
out
pop
shll
addr16
sub
pop
fucomip
and
jg
cmp
pop
cmp
cmpl
or
and
sub
sub
dec
dec
insb
aas
sbb
add
jne
push
notl
out
mul
ret
add
pop
fs
push
andl
dec
cs
jmp
xchg
mov
push
push
push
divl
mov
repz
lahf
xchg
stos
inc
ss
jp
jae
or
xchg
adc
sub
mov
add
xor
notb
negb
shl
mov
push
cmp
gs
lds
inc
ds
mov
jge
adc
sbb
fistpl
push
sub
sbb
sarl
sub
xor
inc
lcall
add
out
or
mov
insb
test
mov
mov
push
pop
inc
movsb
ds
fcomp
mov
leave
pop
cmp
xor
stos
fwait
bound
ljmp
ret
push
test
xchg
test
add
jns
or
add
xchg
adc
cmp
push
mov
nop
les
roll
jnp
pop
pop
daa
insb
and
jecxz
testl
imul
add
loop
repz
out
push
and
push
outsb
test
shlb
sbb
mov
and
inc
outsb
aam
mov
pusha
xchg
repnz
inc
mov
mov
lahf
jnp
inc
or
push
stos
jge
adc
xchg
out
mov
push
xchg
xchg
test
push
fistl
movsl
dec
mov
adcb
add
adc
xor
jne
bound
clc
or
dec
or
xchg
pop
in
test
push
arpl
pop
push
dec
inc
add
filds
cmp
mov
xor
sbb
mov
mov
jae
das
lahf
inc
fcmovb
jnp
cld
cmp
cmp
mov
mov
mov
mov
pop
and
pop
in
lds
mov
pop
or
cmp
jmp
dec
mov
fidivrs
or
lret
dec
add
aad
inc
scas
mov
lods
xchg
mov
mov
out
sub
xchg
push
adc
imul
cltd
dec
mov
shl
nop
mov
addr16
outsl
mov
sub
jb
jl
inc
cltd
or
mov
les
xor
imul
sbb
aad
jae
int3
inc
scas
cmp
sub
test
adc
sbb
aas
enter
adc
sub
push
sbb
lock
sarb
pushf
pop
cs
leave
call
hlt
adc
mov
jb
or
nop
add
fcoml
pop
test
xchg
ret
mov
fs
dec
or
nop
mov
icebp
mov
rcll
arpl
aas
dec
data16
dec
mov
xchg
or
jg
arpl
jns
aam
mov
arpl
pop
shl
mov
cmpsl
aas
fsubrl
add
clc
in
aad
jmp
xchg
inc
jmp
mov
andb
out
jb
aam
sbb
push
call
gs
movsl
into
out
mov
xchg
pop
jmp
cmp
orb
repnz
scas
lea
test
enter
xchg
notl
dec
xchg
sbb
repz
and
lock
arpl
mov
rdtsc
pop
jb
cmpsb
test
xor
inc
outsb
lahf
lret
dec
push
hlt
insl
enter
int
pop
out
call
andl
in
push
xchg
pop
cmp
negb
or
xchg
decl
xlat
xor
push
cmpsl
fdivrl
push
cmc
mov
lcall
movsl
int3
cmp
scas
xchg
daa
adc
sub
js
jl
add
pop
inc
adc
push
xchg
addr16
pop
pop
loope
mov
add
push
addl
ja
add
shll
movsb
call
shlb
shl
add
or
mov
xchg
lea
inc
sbb
sub
and
fcmovnbe
mov
fwait
adc
mov
mov
sub
imul
push
mov
test
clc
ja
test
inc
pusha
xchg
dec
mov
mov
jl
sub
into
jge
int3
cs
fstpt
imul
loope
ds
cmp
ret
dec
add
enter
jecxz
push
andl
lods
insb
in
adc
test
cmp
data16
insb
outsb
movsl
loop
das
movsl
xchg
lods
mov
in
test
fisttpl
jne
aad
pop
pop
xchg
sub
dec
nop
int3
ss
sti
xor
push
adc
shlb
sub
mov
test
loopne
sub
inc
jmp
jnp
testb
push
xlat
sbb
add
ret
inc
mov
dec
cld
outsb
sub
in
sub
in
pushf
lcall
and
lods
loop
sub
stos
outsb
shl
std
aas
mov
pop
mov
mov
mov
and
mov
xchg
loope
mov
data16
les
pop
inc
mov
scas
loope
test
dec
daa
jle
cli
lock
rorl
cmp
pop
test
int
or
mov
fistps
mov
imulb
add
xor
clc
cmc
inc
push
jno
fdivs
push
adc
pop
add
aaa
sbb
mov
shrb
mov
insl
repnz
push
rcrb
aam
rclb
sub
ret
idiv
dec
adc
imul
cmpb
jge
hlt
in
in
push
pop
cld
xor
arpl
jne
repnz
jno
sbb
push
lods
cmpsl
push
aad
add
xchg
fsubrl
mov
and
push
cmp
lods
clc
sbbl
sub
cmp
pop
inc
xor
inc
scas
loop
push
icebp
cltd
cmp
xor
adc
or
dec
test
or
dec
jno
scas
mov
fs
lds
inc
adc
addb
mov
pop
gs
inc
mov
movsl
or
out
mov
scas
cmp
loopne
out
or
in
push
cmp
xchg
mov
cld
mov
addr16
fsub
inc
decl
xor
sar
shll
mov
jo
idivl
mov
dec
outsl
jbe
push
xchg
repnz
mov
hlt
or
xchg
sbb
call
cmp
aas
nop
xchg
testl
stc
pop
test
and
ljmp
mov
push
out
outsl
pop
lret
fcomp
mov
cmpsb
out
sub
in
cmp
mov
arpl
sub
jecxz
cltd
mov
sbb
xor
xchg
out
mov
shlb
in
add
and
dec
mov
or
push
sbbb
jmp
int
stos
movsl
xor
mov
hlt
faddl
adc
lods
ret
mov
rcrl
jge
orl
sbb
jecxz
nop
xchg
popf
mov
inc
out
mov
dec
ret
inc
fwait
or
fmul
cmpsb
sbb
loop
mov
lret
mov
jo
xlat
clc
and
cmc
add
lahf
movsb
pusha
fwait
mov
cs
dec
sub
add
sbb
iret
push
pop
pop
fsubrl
loope
mov
push
or
daa
add
xchg
rcll
cmp
and
clc
jle
loope
sub
mov
push
in
dec
shl
jb
sarb
stos
add
jnp
les
cmpsb
dec
or
repz
or
or
mov
fcmovnbe
dec
lock
scas
idivb
jp
jno
lret
mov
pop
into
jo
scas
inc
cltd
add
cmp
fldt
dec
stos
adc
outsb
pushl
mov
xchg
push
loope
xchg
in
and
int3
into
daa
inc
add
sub
sub
xchg
mov
jae
shlb
sub
sbbl
xor
pop
xchg
mov
xchg
adc
push
movsl
dec
test
add
add
shll
pop
push
sub
dec
xchg
hlt
sbb
cld
adc
insl
pusha
dec
ret
test
push
pop
jo
lcall
adc
lcall
loopne
cmp
cmp
idivl
xchg
mov
and
dec
pusha
sub
xchg
idivl
rsqrtps
imul
jae
lcall
pusha
pop
adc
inc
fs
mov
push
xchg
ret
lods
mov
mov
mov
fbstp
pop
aad
inc
in
daa
dec
pop
push
and
jno
lods
cs
cmp
add
sbb
cmp
roll
adc
rorl
pandn
push
jnp
adc
push
out
lods
pop
ljmp
scas
dec
xchg
cmovbe
scas
out
ljmp
fsubrl
mov
bound
sti
out
push
mov
ret
mov
fucomi
mov
imul
xchg
std
movsl
xchg
push
outsb
imul
test
jmp
jno
inc
fcmovb
out
mov
fcmovu
ja
and
and
dec
sbb
pop
adc
jno
faddp
cmc
cwtl
cli
jns
divb
pop
loope
pop
mov
lock
lods
dec
iret
lcall
push
adc
std
adc
ficoml
mov
lds
and
push
movsl
cmp
mov
dec
inc
or
push
testl
jmp
insl
and
xchg
hlt
jl
sbb
xlat
hlt
fdiv
push
and
int
inc
mov
fsts
mov
test
sub
push
subl
insb
push
jp
lods
inc
push
push
adc
gs
mov
add
push
int3
mov
icebp
mov
dec
inc
outsb
push
push
out
push
jo
jae
lea
movb
out
lret
xchg
mov
push
fwait
movsb
scas
dec
popa
cmp
movsb
repz
mov
add
lret
fcomp
sub
cwtl
xchg
xor
sub
mov
mov
dec
outsb
push
sbb
lahf
nop
out
idiv
push
mov
cmp
fcomps
jb
mov
inc
sub
lods
sbb
mov
inc
lahf
sub
and
or
popf
adc
pop
cmp
ja
aaa
jnp
out
jp
pop
mov
sub
lea
fildll
pop
lock
sbb
inc
xchg
movsl
jb
lods
pop
xchg
mov
and
xchg
xor
adc
mov
or
loopne
and
in
js
sti
mov
scas
jecxz
cmp
push
js
xor
ja
dec
lods
xor
sub
idivl
cld
imul
push
mov
adc
add
pop
lret
dec
aam
cmp
dec
fdivrl
out
jp
dec
jmp
add
sti
add
mov
xor
pop
cmp
test
mov
mov
xchg
mov
lods
stos
push
mov
and
lock
mov
sbb
daa
clc
imul
leave
mov
mov
jb
jl
je
add
push
lods
ficomps
or
rolb
sbb
mov
out
and
shlb
dec
and
dec
out
popa
jne
cmp
adc
mov
les
ljmp
xor
lds
mov
addb
mov
fbld
mov
aaa
sub
and
adc
fsubrs
cmpsb
jmp
adc
jmp
sahf
push
adc
dec
in
sbb
test
fisttpl
loop
sti
repnz
push
pusha
and
sbb
add
lds
pusha
inc
push
push
cmpsl
dec
fidivl
repnz
push
add
jecxz
dec
ret
mov
arpl
xorb
lods
pop
pop
aam
dec
dec
int3
test
push
sub
in
das
ljmp
adc
into
mov
fnstsw
add
lret
popf
in
sahf
mov
dec
lea
xor
dec
dec
int3
gs
gs
jg
sbb
outsb
and
jne
push
sti
jo
sbb
ljmp
sahf
outsb
mov
pop
push
out
cmpsl
mov
or
es
mov
call
mov
jne
add
hlt
xchg
add
outsb
stos
adc
loop
cmp
imul
out
mov
mov
stos
adc
jne
cltd
in
mov
lods
adc
pop
or
mov
mov
fwait
sbb
dec
pop
sub
jge
push
mov
mov
incl
mov
pop
push
sub
adc
out
shll
mov
cmc
jo
jbe
or
xchg
sub
dec
loop
arpl
inc
pop
daa
lds
test
cli
fs
and
push
or
int
xor
inc
ss
jg
hlt
int
inc
and
and
or
jg
or
cmp
push
stos
xchg
popl
mov
push
mov
push
imul
divb
lret
or
movsl
inc
and
sub
inc
sarb
in
shr
loope
sub
fidivrl
dec
pop
mov
dec
cmp
fimull
add
out
push
iret
sub
jl
stos
fdivrl
fists
sub
repz
out
add
js
add
xor
jne
mov
int3
pop
out
sbb
or
add
jecxz
pop
pop
mov
pop
hlt
cli
fbstp
repnz
int
movl
xchg
or
mov
sahf
adc
sub
out
adc
fwait
mov
inc
xchg
sbb
and
jge
push
mov
lcall
sbb
jecxz
psrlw
cs
xor
xor
outsb
inc
push
push
movsl
push
sar
in
cwtl
sub
fcoms
sub
add
xchg
imul
jb
jno
jge
and
jecxz
jnp
inc
jmp
mov
inc
js
cmpsb
lods
mov
sub
sbb
rorb
jmp
mov
sub
jl
nop
mov
hlt
int3
fcoml
test
cmp
scas
mov
lcall
insl
mov
dec
sbb
push
dec
stos
aam
jg
and
jg
mov
pop
push
sub
ret
fwait
xchg
push
data16
in
ss
and
pop
lcall
aad
xor
pusha
inc
lret
dec
inc
imull
std
ret
out
ss
xchg
imul
pop
pushl
push
stos
and
mov
je
adc
push
dec
sub
lret
jne
dec
sbb
icebp
out
xchg
jmp
aam
pop
adc
shrb
mov
sarb
aas
ror
daa
dec
sub
mov
push
dec
out
jle
aam
pop
push
mov
in
stos
enter
add
pop
adc
add
ret
subb
adcl
dec
lea
rorb
jae
pop
stos
inc
fcoms
pushf
adc
xchg
sub
xor
imul
shlb
sub
adc
icebp
aam
jns
shrb
jnp
adc
addr16
inc
lods
jp
mov
sti
mov
loope
fs
mov
outsl
insl
xchg
mov
rorl
pop
and
insb
add
pop
cmpsb
iret
mov
mov
add
cld
cld
or
inc
sub
sbb
ja
jecxz
popf
jg
mov
imul
inc
mov
out
fsubs
mov
adc
rorb
mov
add
addr16
mov
mov
popa
pop
push
push
and
inc
add
xor
xchg
xchg
in
fldenv
mov
repnz
insl
stc
and
mov
jnp
mov
mov
jae
pop
add
adc
arpl
and
cmc
push
pop
dec
pop
loopne
loopne
imul
dec
cmc
gs
xor
fdivs
leave
pushf
ljmp
mov
add
mov
test
mov
out
cmp
insb
repnz
push
mov
cmpsl
add
hlt
nop
jecxz
push
out
mov
repnz
aam
cmp
xchg
mov
and
xor
sbb
mov
mov
push
and
xchg
cmp
jb
loopne
hlt
xor
clc
rorb
in
dec
aaa
fcmove
push
insl
and
fnstcw
addr16
rcl
mov
cmp
ja
popa
jecxz
dec
stc
negl
cli
sub
pop
jle
sti
sbb
nop
stos
test
test
add
mov
dec
and
push
pop
dec
push
dec
test
frstor
js
push
insb
rcrb
icebp
aad
push
cld
adc
shlb
enter
cmpsl
lahf
sub
fiaddl
sahf
orl
sbb
leave
adc
lods
ficoms
roll
mov
pop
inc
scas
xchg
push
jg
push
xchg
inc
sbb
mov
sbb
repnz
mov
rorb
fisubs
push
lret
cltd
xchg
out
mov
test
mov
lret
dec
insb
pop
push
in
jecxz
lds
outsb
jmp
aas
jle
dec
ja
mov
cmp
jmp
mov
insb
movsb
sahf
mov
xor
pusha
pop
jbe
or
fucomp
cli
rsm
lds
jmp
jge
xor
pop
xchg
lods
inc
jl
or
mov
loopne
mov
add
cmp
leave
sbb
jmp
cmp
hlt
push
xor
sub
xchg
loope
lea
pop
and
pop
mov
xchg
xchg
in
test
std
popa
loopne
popa
ljmp
and
add
xchg
bound
push
lea
leave
xor
sbb
pop
ficomps
jge
stos
mov
dec
dec
ja
out
pop
push
push
xor
cmp
das
js
ffreep
inc
sbb
push
cmp
cwtl
push
movsb
dec
dec
cwtl
stos
push
xor
inc
push
ja
aas
xor
lods
xor
out
push
fcoml
cwtl
pop
pop
xlat
fisttps
insb
push
push
jmp
test
dec
sahf
jmp
insb
iret
push
inc
sub
daa
cwtl
jmp
addb
inc
or
shrb
pop
pop
js
xchg
imul
inc
or
iret
adc
lea
sub
push
push
fsubr
xlat
and
jno
out
popf
rorb
and
add
mov
jns
xor
out
ret
in
enter
push
xlat
fisubrs
mov
call
add
int3
test
lret
inc
xor
leave
push
flds
pop
imul
dec
mov
or
jl
pop
sbb
xor
imul
stos
adc
fnsave
mov
jl
mov
and
and
xor
das
sub
mov
fnsave
mov
xor
jge
inc
bound
outsl
fdivp
pop
dec
jp
shlb
xor
xchg
rclb
repnz
gs
cmp
int3
or
or
int3
xor
adc
push
ret
and
adc
dec
lcall
iret
push
push
pop
scas
sbb
hlt
push
mov
xchg
mov
adc
out
stc
dec
enter
push
adc
aas
outsl
es
mov
adc
pop
xor
mov
adc
sbb
sub
xor
jmp
es
adc
or
sbb
ret
jecxz
push
cltd
jbe
das
or
fistl
cmp
movsl
int3
roll
cmp
sbb
into
xor
cmp
inc
mov
lahf
sbb
xchg
lahf
xor
stc
mov
fistps
out
das
dec
pop
xchg
xchg
out
popf
cmp
lahf
cli
push
jmp
or
adc
cmp
shll
lcall
pop
or
jmp
sbb
leave
sti
ljmp
jns
cld
pop
dec
sahf
pop
in
jb
fs
and
mov
sahf
jg
and
loopne
scas
mov
leave
push
ret
jge
xchg
ljmp
dec
pusha
inc
imul
sbb
in
jb
pop
or
pusha
xchg
lea
xchg
and
loope
xchg
cmp
sahf
adc
and
cltd
add
fwait
and
pushf
aam
shll
movsb
cltd
adc
jecxz
pop
ss
push
inc
test
sti
std
pop
jg
adc
cmp
adc
cld
loopne
cmp
fs
xchg
adc
rcr
lret
jp
sub
add
fstpl
mov
sub
xor
cwtl
and
inc
iret
and
scas
iret
or
cmp
cwtl
mov
or
xlat
mov
jae
cmpsl
std
push
ret
or
ss
cmp
and
or
mov
cltd
aam
dec
divl
cmc
mov
push
pop
pop
jle
repnz
dec
jb
sub
stos
mov
ret
repnz
std
fidivl
shlb
aaa
sbb
lds
and
mov
into
ja
mov
push
mov
mov
stc
inc
xchg
into
sub
or
ret
cmp
mov
push
jb
out
negl
lcall
stc
out
fimuls
pop
cmp
jnp
jge
dec
insl
mov
mov
inc
xchg
mov
outsl
push
jmp
mov
cmpsl
jo
push
sbb
lea
jg
loopne
adc
fildl
push
lods
push
lock
jl
clc
mov
jmp
mov
mov
and
addr16
out
sub
sbb
std
or
xor
int3
xchg
sub
test
push
or
push
jne
mov
jae
xor
mov
shrb
sub
ss
dec
lcall
pop
dec
repnz
push
jg
xchg
adc
sub
cltd
lahf
fwait
jmp
enter
gs
or
out
mov
dec
inc
loope
pop
pushf
mov
add
idivb
xor
mov
jl
xor
ljmp
addr16
jo
sub
mov
incl
jmp
test
outsl
aas
test
lods
sahf
cmp
daa
lds
inc
xchg
mov
mov
mov
pushf
or
pushl
fadds
ljmp
packssdw
insb
and
sahf
test
mov
sbb
ret
int3
inc
aam
dec
or
push
ret
sub
daa
xlat
lds
sbb
sub
adc
xchg
xor
mov
jnp
fsubr
scas
xor
sub
fdiv
cmp
mov
popa
cmp
lock
fsubs
mov
pop
add
adc
outsb
aas
notb
mov
insl
mov
inc
sbb
arpl
idiv
xor
mov
and
mov
inc
ljmp
and
out
adc
stc
popf
inc
add
psrad
int
call
sarb
and
pop
cmp
or
addb
mov
add
rcrl
std
fldenv
ficompl
bound
lods
movsb
test
incl
pop
pop
and
movsb
mov
xchg
sbb
sahf
mov
out
adc
fisttpl
arpl
xchg
fstpl
pop
cmpsl
out
mov
sub
mov
lcall
pop
xchg
fsts
push
leave
sbb
jnp
cmp
fbld
jae
in
aam
stos
mov
and
sub
mov
adcb
adc
adc
fisttpl
in
cli
int
clc
ss
jg
call
enter
pop
bound
xor
repz
sub
fsubrp
push
mov
lret
jmp
les
dec
mov
jmp
rcrb
roll
jg
mov
sbb
sbb
dec
scas
repnz
mov
push
mov
shl
dec
shll
repz
out
push
or
sbb
sub
pop
out
outsb
xor
outsl
lcall
jne
push
lret
mov
imul
rclb
cmp
jl
or
nop
xor
or
leave
femms
mov
int
mov
mov
sti
outsb
loope
das
stos
push
sbb
add
xlat
lret
stos
adc
stos
scas
cltd
xor
push
mov
pop
mov
add
add
cld
push
xchg
daa
ds
adc
push
jmp
xchg
or
cli
xchg
out
loopne
push
int
out
lcall
aaa
cli
jo
mov
daa
sub
mov
mov
mov
into
inc
push
cmpsb
or
in
push
repz
popa
pop
sbb
rcll
ret
push
xchg
addr16
gs
pop
fldenv
pop
repnz
nop
sbb
lock
test
call
sub
lods
mov
cli
bound
andb
adc
sarl
in
test
ja
push
jecxz
in
fcompl
cmp
loope
and
imulb
mov
pop
xor
or
bound
xchg
mov
shrl
mov
mov
mov
cmp
lds
scas
xchg
cmpsl
mov
dec
mov
push
cltd
cmpsl
xchg
or
inc
or
add
hlt
iret
iret
lock
cmpsb
fcmovne
mov
arpl
inc
sub
ds
push
out
fdivrs
repz
sub
out
push
dec
mov
cmp
mov
push
jmp
mov
cli
xor
jbe
pop
repz
jge
push
sahf
outsb
mov
push
mov
pop
mov
js
loop
repnz
push
fstp
sbb
pushf
mull
dec
cmp
int3
mov
sub
neg
in
jmp
jmp
iret
dec
pop
cs
cmp
insl
xor
pop
push
jne
xor
das
out
jecxz
xor
or
sub
andb
shlb
xor
clc
push
jbe
pushf
mov
call
jne
cld
cmp
and
mov
push
jbe
cmp
testl
pusha
jns
rcrb
push
inc
sbb
xchg
jle
dec
mov
mov
push
aaa
or
int
clc
lcall
cld
fwait
sahf
scas
jecxz
cmp
out
in
cltd
in
mov
pop
insl
and
adc
sbb
mov
cli
pop
add
movsb
pop
or
mov
jecxz
add
mov
lea
out
aaa
jae
xor
in
ds
mov
cmp
ljmp
xor
pminsw
xchg
pushf
repz
scas
inc
pop
jp
mov
mov
push
mov
push
testl
shlb
jbe
imul
outsb
je
out
lret
insb
xor
into
hlt
xchg
nop
insl
popa
pop
ret
jge
repnz
addr16
adc
ret
adc
xorb
mov
aas
iret
mov
ss
aad
sti
mov
fdivp
jns
sbb
outsb
sbb
add
mov
lods
insb
cmc
push
add
ja
out
les
dec
xchg
dec
sbb
fstpt
lods
loop
clc
xor
lahf
push
and
cmpsb
mov
cmp
in
and
das
loopne
push
or
rcr
jns
enter
movsb
push
lcall
imul
cmp
cmp
cli
ret
in
repnz
stc
or
push
pop
test
iret
and
cmp
es
insl
pusha
cmc
sub
testb
scas
shrb
or
mov
xorb
subb
xchg
adc
call
std
cmp
incl
call
ljmp
aas
lcall
or
mov
mov
cwtl
pop
inc
fsubs
je
cmp
or
stc
pop
jmp
or
pop
jne,pt
addb
es
out
xchg
jns
jp
push
jne
adc
mov
out
pusha
clc
je
mov
and
addr16
push
and
cmp
cwtl
out
es
aas
ja
jmp
sbb
outsb
ret
mov
adc
call
enter
jns
arpl
pop
dec
imul
cmp
xor
jne
push
sahf
dec
cmc
cwtl
push
xor
mov
mov
ljmp
imull
andb
ret
push
push
pop
dec
mov
mov
pop
mov
xor
test
out
sbb
dec
test
push
inc
mov
jb
nop
scas
in
mov
xchg
in
adc
mov
mov
xor
pop
in
vpsrld
push
shrb
lahf
mov
js
test
or
mov
cmpl
or
xlat
mov
mov
es
pop
jb
or
fdivl
ret
push
jns
fs
ds
test
sub
mov
lds
xchg
ret
mov
imul
dec
in
adc
add
add
in
scas
mov
outsb
jns
lock
ret
xchg
mov
jle
mov
cmp
rol
or
hlt
mov
int3
or
xor
add
movb
xchg
lahf
push
inc
repnz
mov
pop
pxor
inc
fwait
add
stc
in
add
out
in
fldt
mov
fs
xchg
lds
push
in
inc
inc
nop
push
or
sbb
popa
mov
mov
mov
push
jmp
push
ret
hlt
jg
dec
mov
orb
sbb
and
jnp
shrb
push
jecxz
sbbl
call
outsb
xor
imul
push
dec
pusha
mov
xlat
mov
das
or
push
or
xchg
mov
pop
lods
xor
ss
sub
mov
rorb
cmp
mov
inc
inc
movsl
rcrb
daa
dec
jmp
xchg
dec
psrlw
in
aam
stos
cld
xchg
mov
loopne
scas
dec
push
fs
test
in
dec
dec
or
mov
lcall
bound
pop
data16
mov
mov
cmp
add
jg
xlat
inc
cltd
fmull
int3
por
das
outsl
out
movsl
movsb
jns
out
inc
dec
jae
jmp
xor
testb
xchg
fildll
int
xchg
xor
jmp
and
sub
jns
pop
lahf
bound
adc
mov
fwait
push
lea
pusha
test
stos
aad
outsl
adc
pop
inc
insl
stc
enter
xchg
incl
push
pop
jge
dec
insl
sbb
or
push
pop
adc
stc
jae
pusha
ja
aaa
sbb
cmc
mov
sti
cli
fsubs
nop
iret
jbe
jnp
cs
pop
sbb
or
xchg
jle
mov
imul
mov
adc
int
jecxz
iret
mov
imul
sub
cmpb
cmp
or
mov
aaa
sbb
dec
pop
sub
out
inc
inc
mov
imull
stc
xchg
jle
repz
jae
inc
sub
jp
sub
repnz
sbb
jne
and
bound
jp
dec
icebp
in
gs
fs
sbb
idivb
xor
xchg
dec
dec
leave
testl
movsl
fldl
mov
or
push
scas
fsincos
xchg
insl
fwait
pop
sbb
push
or
les
sub
icebp
mov
andb
loopne
or
fistpl
rcll
aaa
xchg
lahf
scas
cmpsb
mov
push
push
stos
out
pusha
pop
out
popf
jle
jne
aaa
rorb
jle
scas
mov
push
in
dec
and
fidivs
mov
push
cmpsb
push
or
push
sarb
xlat
mov
lea
inc
adc
loope
cmp
repnz
jo
add
test
pop
push
mov
xor
sbb
adc
pop
jns
push
sbb
test
popa
xlat
jno
push
dec
dec
sub
iret
nop
mull
or
jbe
imul
mov
xchg
lret
xor
sbb
stos
in
jae
lret
adc
insl
jnp
mov
sbb
push
aas
in
stos
cmpsl
xor
rcll
clc
cld
xchg
xchg
pop
stos
push
loope
push
into
cmp
aas
cmp
mov
into
cmpb
lahf
pushf
xchg
hlt
xchg
out
cmp
and
and
out
hlt
mov
push
shlb
xor
rcrl
push
sub
es
lret
out
scas
adc
stos
sarb
xor
and
mov
dec
sbb
sbb
mov
and
popa
fldcw
push
push
scas
in
mov
int3
and
pop
xchg
add
mov
push
loope
jl
out
xchg
enter
cli
pushf
das
pop
pop
incb
rcrb
fnstenv
mov
lods
pop
test
loope
xor
mov
push
mov
and
jbe
mov
xor
add
xor
mov
sbb
push
adc
push
cld
pusha
mov
push
fistpl
push
xchg
outsb
or
lods
adcb
mov
enter
xchg
pop
jecxz
sahf
and
outsb
orb
addr16
or
mov
xchg
sahf
leave
xor
xlat
add
xchg
cwtl
popf
rcll
gs
mov
and
les
sub
sub
mov
out
adc
test
cmc
adc
jmp
mov
xlat
mov
add
inc
popf
jbe
jg
mov
test
out
ds
lods
push
shrl
les
sub
mov
mov
pop
icebp
movsl
iret
test
xor
push
xchg
addr16
pop
scas
out
rclb
in
mov
fnstsw
lahf
leave
mov
sbb
and
inc
jle
sub
gs
dec
fbstp
arpl
mov
insb
xchg
and
or
into
mov
jno
in
punpckhbw
cmp
and
adc
mov
loopne
insl
mov
mov
into
addl
pop
lahf
inc
cltd
mov
jmp
jle
cmp
and
xchg
repz
add
cmpsl
inc
std
jg
cmp
stos
sahf
adcl
mov
push
lret
and
push
les
jg
xor
rol
inc
or
push
inc
int3
stos
adc
inc
mov
in
cmpsl
mov
aam
inc
mov
aaa
je
dec
in
push
push
sbb
sbb
out
ss
lret
jg
dec
outsl
andb
inc
sub
aam
pop
jp
adc
pushf
push
jbe
jb
push
fstp
sbb
ljmp
inc
and
lods
pop
repnz
push
scas
xor
and
call
aaa
add
loop
jns
arpl
mov
mov
mov
sbb
stos
xor
stos
pop
mov
pop
jle
adc
mov
jg
or
or
mov
jns
cld
jae
xchg
ds
mov
repz
pop
adc
in
mov
inc
and
or
arpl
outsl
lds
in
frstor
push
adc
push
cmp
push
js
das
pop
fnstcw
sbb
pop
scas
scas
popa
or
mov
sub
std
and
push
cli
mov
ljmp
das
fdivrs
dec
fldenv
scas
add
icebp
ss
sub
cmp
add
ss
pop
cmp
jg
xchg
push
push
call
mov
fs
push
sbb
mov
cmp
in
inc
xchg
cmc
shlb
and
adc
outsb
cmpsb
push
and
cmp
fwait
push
ret
daa
jae
pop
out
jecxz
ret
mov
pop
call
in
pop
std
aam
les
imul
or
mov
mov
pop
sub
hlt
push
jo
dec
stos
out
lcall
dec
aaa
pop
paddb
lret
dec
sti
popf
repnz
ja
jno
or
mov
sbb
add
pop
and
or
les
push
pusha
inc
out
cmp
xchg
movsl
ret
dec
sbb
adc
sbb
in
add
int3
jle
dec
cmp
out
fwait
andb
mov
popf
mov
sahf
pushf
pop
mov
mov
cs
jnp
add
push
mov
ret
pop
out
out
insb
or
xchg
inc
add
mov
insl
mov
popf
push
mov
in
popa
xor
sub
mov
fimull
push
add
sub
das
xchg
sub
in
lret
push
push
scas
in
sub
jno
loop
int
fwait
add
and
cmp
pop
std
setge
xchg
daa
cltd
clc
lea
mov
popa
rclb
jbe
or
lds
and
sbb
xor
mov
sub
loop
sub
popf
jo
popf
cltd
xchg
iret
cmp
mov
push
cld
loopne
sub
aam
ss
stc
dec
xchg
pop
xchg
mov
mov
push
addl
push
aam
pushf
jo
lahf
xor
sbb
xchg
cmpl
xor
add
mov
sub
out
sub
mov
xor
xchg
ds
icebp
mov
push
divb
xchg
dec
dec
fidivs
nop
pop
data16
bound
adc
push
push
add
push
mov
imul
push
fwait
or
push
lea
xor
push
xchg
pop
gs
repnz
aaa
loop
or
inc
lret
and
inc
pop
fwait
arpl
or
mov
mov
jp
rorl
push
ljmp
iret
fucom
cs
mov
cli
aad
outsl
mov
dec
and
xchg
jg
push
mov
out
fstpl
add
mov
loopw
aad
xor
mov
gs
sahf
es
jecxz
push
movl
mov
das
sti
xchg
push
icebp
shrb
push
mov
cli
pop
cmp
and
in
test
int3
inc
mov
test
inc
sti
les
mov
dec
in
dec
xchg
mov
mov
loopne
sub
in
sbb
insl
push
ret
loope
jg
leave
jae
leave
inc
lcall
test
outsb
adc
test
jb
or
xlat
pop
push
mov
sbb
je
jmp
dec
icebp
shrb
dec
xor
push
insl
add
test
cs
mov
gs
jle
ljmp
inc
sub
lods
in
add
js
out
dec
cmp
lret
add
int3
pop
mov
cld
inc
inc
mov
pop
push
std
cmpsl
jle
dec
xchg
push
or
outsb
sub
invd
popa
pushf
adc
daa
mov
fwait
xchg
insl
mov
jnp
push
xor
arpl
arpl
sub
lock
lcall
ficomps
pop
inc
mov
aad
or
cmp
push
mov
out
fwait
sahf
fdivrs
inc
cwtl
sub
push
jnp
or
int3
adcl
sub
lds
in
in
adc
or
mov
cmp
jbe
dec
test
ret
ja
enter
push
aam
dec
xchg
adc
jle
test
pusha
adc
dec
xchg
xor
repnz
fucomp
outsb
lds
mov
in
cmc
pop
pop
lods
stos
cmp
sbb
dec
popf
mov
cmpsb
fdivs
mov
test
outsl
stos
xor
pop
push
pop
scas
bound
ja
cli
add
testl
popf
jmp
sahf
push
std
fidivl
mov
xchg
stos
pop
testl
jmp
ljmp
outsl
adc
jbe
pop
pop
or
xor
xchg
dec
fistpl
cmp
ficompl
lods
aas
xor
cmp
add
sub
idivb
out
push
cli
dec
push
rcrb
dec
pushf
fldl
pop
arpl
rcl
lods
pop
call
cltd
stc
test
sbb
inc
sbb
loop,pt
sarl
push
adc
and
dec
cmc
mov
popa
adc
mov
divb
xchg
stos
adcb
xor
js
mov
sti
and
mov
loop
sub
cmc
dec
fwait
mov
out
xor
pop
or
sar
cs
xlat
dec
nop
and
jno
outsb
sub
in
mov
push
pop
daa
sbb
iret
jnp
nop
pusha
mov
xchg
call
jns
call
mov
leave
sbbb
push
inc
mov
cmpsb
or
sub
notl
adc
aam
xor
jbe
mov
xchg
or
pop
js
stc
popf
insl
adc
mov
fldcw
hlt
push
mov
push
pop
pop
shlb
xor
dec
add
insb
jl
out
add
jo
push
repnz
cmp
pop
sbb
fcomp
cmp
jne
jmp
cmp
sbb
inc
mov
fnstcw
icebp
fnstenv
add
sub
pop
notb
sub
sub
add
in
jno
js
mov
lds
xor
test
fldenv
ljmp
cmp
imul
mov
ret
and
inc
push
ret
lods
inc
dec
mov
xchg
arpl
sub
add
and
mov
xchg
jg
addr16
push
imul
out
mov
mov
mov
jge
sti
mov
jmp
jl
mov
movsb
out
pop
ds
movsb
cmp
or
out
mov
add
adc
jne
push
xchg
sub
fwait
mov
jae
gs
aad
sub
xlat
daa
arpl
pop
lea
out
cmp
sbb
add
fildl
hlt
adc
fidivrl
pop
inc
jno
xchg
loop
imul
dec
and
push
inc
loope
dec
adc
push
add
inc
sbb
movsl
adc
test
add
inc
jnp
sbb
scas
out
ficoml
je
or
aaa
jmp
imul
repz
int
inc
sub
arpl
test
shlb
jae
gs
fucompp
push
cmp
adc
test
xchg
ss
call
popf
pop
clc
inc
jge
and
xchg
mov
js
int
xor
cmp
or
add
bound
mov
mov
lcall
adc
inc
popf
cmp
fs
push
mov
mov
aad
xchg
mov
cmp
stos
inc
lods
cmp
xor
orb
sub
daa
fucomi
mov
idiv
cmpsb
xor
fimull
lods
pop
pushf
xor
ret
pop
xchg
mov
hlt
cmpsb
mov
pusha
xchg
inc
das
or
incb
fadd
pop
sbb
cmp
cwtl
out
in
cmp
fisubrl
addr16
inc
iret
sar
sahf
shl
xor
xor
loopne
in
test
ror
mov
mov
rorb
pop
pop
or
add
jb
sub
dec
cmp
adc
addr16
dec
or
mov
mull
mov
lds
ret
loop
adc
inc
outsb
outsb
out
xchg
add
lea
xchg
ljmp
pop
std
xchg
aad
mov
push
mov
mov
movsl
cmp
push
pop
ljmp
fimuls
sub
cmp
cmp
mov
or
imul
stc
imulb
and
and
data16
or
pop
cmpl
sbb
and
cmp
f2xm1
jge
js
add
adc
int
xor
das
orb
add
mov
mov
push
mov
dec
add
cld
add
adc
mov
add
dec
lds
gs
cld
jno
adc
jne
bound
push
inc
push
jbe
adc
ss
xor
xchg
mov
pusha
sub
push
sub
hlt
lret
rcr
or
inc
daa
push
adc
jle
jge
or
jmp
jle
adcb
enter
lods
add
xor
mov
push
cmp
push
sub
testb
out
mov
aad
mov
ret
jb
mov
push
pop
xchg
jecxz
imulb
xor
cmpl
lds
fimuls
pop
push
mov
dec
frstor
loopne
inc
jl
sbb
scas
add
xchg
mov
fisubrs
xchg
push
ss
jmp
aaa
sbb
ds
nop
repnz
dec
mov
xchg
sub
clc
mov
push
and
add
popa
into
or
in
leave
mov
cmp
out
mov
fcoml
cltd
lock
icebp
jl
sbb
pop
into
nop
mov
sahf
pop
lds
dec
and
push
in
std
jo
je
es
add
jmp
pusha
gs
adc
out
cmp
sbb
dec
leave
gs
frstor
outsl
add
mov
aas
ficompl
movsl
xchg
mov
push
xchg
inc
push
leave
cs
subl
insl
sbb
call
popa
cltd
mov
add
fildll
idivl
mov
inc
and
scas
adc
inc
cmpb
test
ja
and
add
imul
inc
xchg
and
mov
adc
mov
ja
pop
cmp
inc
sub
dec
fnstcw
and
cwtl
pop
das
out
andl
jp
lods
pop
mov
lods
mov
pushf
rorl
mov
push
sbb
gs
in
daa
lcall
sbb
ljmp
pslld
dec
jmp
inc
mov
cmpsb
stos
mov
mov
pop
mov
outsb
ljmp
shl
movsl
add
mov
adc
idivl
in
jnp
call
loopne
jns
addr16
xlat
pop
push
or
bound
sahf
push
fisubs
mov
xchg
and
push
jecxz
int3
ja
fimuls
adc
add
push
test
test
popl
into
jbe
jg
mov
imul
aas
sbb
inc
mov
fwait
adc
mov
gs
fistpl
mov
and
pop
fidivrl
xchg
or
inc
or
dec
lahf
push
aad
cli
jno
or
mov
mov
mov
push
ficompl
outsl
addr16
adc
idivb
add
sbb
cli
and
popa
cmp
cmpsl
aad
js
icebp
mov
cmp
push
jp
jecxz
add
out
cmp
add
dec
mov
lret
adc
mov
mov
and
std
xor
test
add
cmc
jge
jae
xchg
fidivrl
mov
cmpsb
clc
icebp
test
test
das
cmpsb
cltd
jo
or
or
pop
fnstenv
xlat
gs
int
arpl
mov
push
test
mov
imul
sub
and
loop
repz
xor
jo
mov
mov
jecxz
popf
sti
mov
jnp
je
clc
inc
test
arpl
push
jno
dec
dec
lds
cs
jns
and
adc
cli
inc
dec
movsb
shr
cs
loopne
adc
ficoml
cmp
push
lret
shll
cmp
pop
fwait
add
outsl
imul
aam
lea
cmp
sbb
gs
jl
shl
and
jp
test
mov
cwtl
inc
or
ret
mov
add
mov
out
lret
test
icebp
and
pop
in
mov
lds
xor
pop
and
lcall
jmp
cli
rcll
push
insl
and
les
xchg
cmp
fisubrl
lahf
mov
mov
ror
mov
cli
dec
cmp
daa
out
xchg
addb
rol
into
inc
orb
test
mov
sbb
mov
inc
or
mov
cmp
repz
insb
sbb
jnp
sbb
rclb
xchg
loope
xor
cmp
mov
adc
movsb
jne
cmpb
aas
fisubrl
arpl
and
cltd
cmpsb
fstpt
in
les
arpl
ljmp
cmc
mov
fstl
iret
scas
aas
mov
mov
add
hlt
dec
cmpsb
cmp
divb
dec
gs
mov
rol
pop
cmpb
pop
fcmovnu
mov
cs
inc
push
gs
pushl
std
jle
incl
out
or
js
push
cld
ficompl
hlt
out
and
mov
add
dec
dec
sti
pusha
inc
repz
xor
mov
cmp
ss
in
paddsw
int
leave
xchg
push
aas
sub
pop
dec
int
mov
and
call
imul
xor
clc
cmp
clc
jno
pop
xor
sbb
sbbb
cmp
add
sti
sbbl
inc
jmp
mov
xchg
sub
inc
pusha
fbld
imulb
aas
loope
cmp
cmp
jns
jae
jmp
jl
aad
pop
lcall
sub
repz
cltd
cmp
ret
xor
fdivl
sub
aaa
arpl
sub
stos
mov
scas
bound
inc
fistpl
xchg
in
cltd
mov
test
jb
push
aas
mov
xchg
out
in
cmp
ret
jo
sbb
outsl
pusha
lret
fdivl
adc
sbb
xor
int3
pop
mov
mov
xor
and
ret
lret
int
inc
or
inc
cmp
xchg
and
gs
xor
in
test
jge
fwait
jecxz
rolb
push
in
mov
cmp
das
aaa
mov
jle
jl
pushf
sub
and
int3
mov
stos
inc
adc
arpl
js
loop
fdiv
popf
inc
daa
jl
cmc
push
pop
std
sbb
mov
cwtl
lods
enter
pop
imull
jle
pop
mov
adc
fmuls
xor
outsl
cmc
pusha
aas
stos
jmp
loope
xchg
adc
movl
les
das
push
mov
data16
push
sti
jg
jge
pop
pusha
pminub
pushf
pop
lds
or
jbe
cmp
push
push
mov
jno
cmc
mov
ja
sbb
lds
pop
xchg
or
addr16
das
test
inc
xor
fidivl
bound
or
icebp
stos
sbb
mov
xor
movsb
call
fisttps
cmp
lods
popf
jmp
xchg
fwait
or
add
shl
outsl
dec
and
imull
mov
addr16
add
pop
pop
mov
loopne
xchg
loope
shl
ljmp
mov
nop
cltd
mov
sub
loopne
imul
add
in
fcoms
enter
bound
test
aam
stos
or
gs
sahf
pop
movb
mov
push
fistpl
loopne
xor
fdivrs
inc
dec
jno
xchg
cmc
in
add
pop
push
push
aaa
cmp
mov
rcll
pop
loopne
xchg
das
mov
pushf
fcomp
push
push
fiaddl
sbb
cmp
popf
clc
xchg
jmp
adc
push
bound
jbe
hlt
jl
clc
aad
in
outsb
test
and
inc
inc
gs
imull
add
arpl
aad
push
lods
nop
xchg
mov
add
lock
loop
popf
push
and
aas
push
cmpsb
push
jp
cmp
leave
mov
pushf
shrl
push
cmpsl
cwtl
pop
push
xchg
or
push
mov
aas
and
lret
and
lock
out
or
cmp
xchg
mov
sub
daa
popa
hlt
loope
xchg
xor
adc
fsubrs
mov
mov
add
push
add
in
test
in
fmull
enter
sti
jmp
outsl
or
adc
adc
fmul
cwtl
or
push
shr
mov
push
cmp
into
cmc
dec
cmp
imul
cmpsb
cmp
test
pop
bound
push
sbb
stos
arpl
dec
cmc
push
xor
in
mov
nop
pop
fstps
ficoms
adc
add
idivb
cmp
cmp
clc
stos
add
jnp
sub
adc
jo
movsl
mov
xor
mov
clc
jne
popa
in
jbe
inc
cmp
divl
mov
cwtl
adc
int3
in
stos
fmuls
cmp
mov
dec
sbb
pop
inc
lds
pushf
int
add
orb
jnp
dec
ja
inc
rcr
jl
and
xchg
bound
pop
imul
add
aad
movsb
pop
aad
xchg
lret
out
mov
push
mov
inc
jmp
movsl
mov
and
hlt
xchg
mov
in
jne
and
or
and
mov
ds
ja
addr16
aam
cmp
xor
add
mov
mov
mov
int3
sbb
mov
xchg
test
xor
ljmp
sub
xor
sbb
mov
push
idiv
xchg
movb
pushf
dec
xchg
scas
mov
dec
jge
jnp
and
push
scas
mov
sub
and
bound
cmp
mov
inc
jge
mov
ret
sbb
jl,pn
shl
xor
outsl
rcrb
aam
insb
add
aas
cmc
aas
movsl
and
lds
push
mov
ljmp
arpl
js
stc
stc
idiv
in
int
ds
rorb
pop
inc
leave
orb
xor
out
leave
xor
jmp
lds
jno
inc
test
lret
mov
adc
xchg
sub
mov
arpl
cmpl
adc
imul
sbb
sbb
or
jb
inc
mov
jne
cwtl
push
and
pop
sub
leave
cwtl
and
shlb
sbb
or
push
ret
cmp
adc
fdivr
add
movsb
pop
js
mov
mov
add
fists
dec
lea
inc
lock
dec
lahf
and
jnp
push
jl
lock
jne
loop
and
cmp
dec
or
fnstsw
and
jns
add
xlat
sahf
push
dec
push
jo
or
push
lock
mov
in
sub
cmpsl
adcb
lahf
dec
cmp
push
pop
and
lods
aad
jnp
and
mov
and
mov
ds
movsl
inc
xchg
jne,pn
enter
cmp
push
cmp
adc
cmp
es
push
lret
inc
aam
add
repz
into
xor
out
out
pop
in
mov
sub
pop
or
mov
aam
add
imul
pop
lret
enter
xor
xor
leave
fsubrs
mov
push
test
mov
mov
inc
add
je
dec
divl
push
fs
mov
sahf
add
and
jle
fwait
sub
xorb
jmp
mov
outsl
movb
lods
cld
xchg
in
lret
lret
lock
dec
cli
icebp
outsl
xchg
fbld
adc
lret
scas
fs
add
sub
inc
xor
test
cli
push
xor
imul
dec
std
jbe
pop
push
popa
adc
aam
add
xor
mov
popf
les
pop
rcrl
cmpsb
pop
xchg
inc
push
mull
lea
xlat
imul
pusha
out
lahf
and
inc
push
andl
mov
loope
js
je
xchg
testl
sub
cmp
fiaddl
test
std
mov
xchg
mov
add
adc
stos
les
insb
mov
test
out
lahf
enter
mov
cmpsl
mov
sbb
sahf
sbb
out
mov
je
cwtl
sbb
outsl
mov
sbb
sub
cmpsb
inc
popa
push
and
or
icebp
inc
cs
or
into
xor
ljmp
repz
lock
sub
adc
mov
and
sbb
mov
dec
and
fmuls
sahf
xchg
packssdw
fistps
mov
pop
push
mov
int3
cmp
mov
scas
call
ljmp
mov
mov
movsb
sbb
ljmp
stos
mov
fidivrl
dec
lahf
or
outsl
in
scas
cmp
pusha
loop
hlt
dec
int
and
sbb
cs
cmpsb
jo
inc
ret
xchg
xchg
hlt
idivl
das
nop
es
jae
jg
sub
cmp
mov
gs
outsb
lcall
push
leave
mov
mov
ds
inc
loope
cmp
adc
mov
scas
sub
cli
cmp
jbe
xor
outsb
andb
push
xor
dec
mov
shl
test
push
sbb
add
sahf
scas
dec
sbb
mov
mov
inc
lods
push
aas
cli
push
pop
cmp
mov
mov
stos
fsts
loope
sbb
in
arpl
and
mov
fstpt
test
repz
rolb
pop
cmp
jg
or
fldt
pusha
mov
pop
jp
sahf
aam
lahf
mov
mov
sbb
nop
push
jne
mov
cmpsb
xor
mov
push
push
push
jne
mov
lods
sbb
lret
cmpsl
imul
xchg
jecxz
xchg
in
fst
and
mov
inc
js
mov
cmp
mov
inc
xor
cmp
adc
in
sub
sti
stos
sbb
adc
mov
test
stc
ds
stos
or
shrl
pop
daa
adc
inc
out
xor
dec
mov
fcoml
jmp
cmp
cli
push
out
mov
scas
xchg
insb
pop
lods
mov
push
lret
cwtl
in
outsl
inc
push
sti
xor
mov
fcomps
push
cmp
jnp
or
jg
xchg
mov
out
mov
out
push
jmp
sub
fadds
xlat
shrl
push
cmpsl
mov
outsl
fwait
jae
negl
js
out
add
jae
pop
xchg
add
dec
mov
mov
rcrl
scas
adc
and
push
cmp
inc
xor
aam
pop
xchg
fldl
test
je
mov
rcrl
add
sub
xchg
fldenv
xor
call
pop
pop
in
stc
jbe
outsb
bnd
xchg
jns
push
and
aam
loopne
and
jmp
enter
xchg
push
jae
mov
cmp
sub
out
sub
xorb
mov
jg
vfnmsub132ss
pop
push
loop
sub
mov
jmp
push
pop
xchg
scas
mov
fistps
jmp
fidivl
addr16
adc
dec
adc
dec
add
loope
clc
and
dec
xchg
lods
cmp
icebp
lods
xor
mov
or
aas
xor
push
and
sbb
cli
pusha
ds
sub
lret
aam
mov
xchg
cs
xlat
mov
xchg
cs
jp
inc
mov
mov
out
add
aas
ret
mov
repnz
fxch
mov
mov
xchg
out
jg
sbb
ja
or
repnz
outsb
push
les
scas
das
lret
or
push
add
bound
sbb
cltd
and
cmp
lahf
out
mov
cwtl
inc
push
mov
push
mov
sbb
pushl
imul
cld
iret
aas
and
aas
pop
cmp
test
lret
aaa
xchg
adc
mov
jbe
mov
cmc
add
in
dec
or
add
and
pop
lds
adc
sbb
inc
int
adcb
int3
pop
mov
cltd
jp
mov
xchg
push
pushw
jmp
lahf
mov
push
rolb
and
loopne
add
pop
or
cmpsb
leave
stos
or
pop
mov
sbb
mov
push
test
add
lds
dec
and
cli
aam
xor
addr16
lret
leave
insb
arpl
subb
int
mov
std
les
flds
push
add
cmp
cmp
adc
lcall
pop
adc
mov
mov
jl
add
xorb
and
ljmp
bound
stos
xchg
inc
jbe
xor
xchg
cltd
sub
sarb
loop
or
lret
mov
add
lret
cwtl
push
push
lods
outsb
nop
fsubl
addl
jecxz
stc
lret
imul
mov
jbe
sbb
sahf
xor
dec
ljmp
arpl
aaa
andl
sub
jg
mov
lcall
cmp
mov
cli
jecxz
fs
hlt
push
outsb
mov
mov
jne
cmp
mov
dec
jmp
testb
lock
shll
frstor
push
insb
scas
mov
lahf
jnp
jmp
jp
and
test
mov
mov
cli
jl
jo
adc
sub
outsb
xlat
loope
lea
sub
xchg
cmpsl
decb
mov
adc
loope
and
mov
push
outsl
push
lea
adc
jg
xor
mov
pop
xchg
rcrl
add
jl
mov
dec
loop
pop
push
jle
cmp
fucomi
shld
test
xor
push
or
insb
fsubrl
daa
ret
idivb
test
or
mov
stc
cmp
xchg
sbb
mov
adc
xchg
lock
jl
jne
or
sub
xlat
push
sbb
mov
test
jp
jmp
fs
scas
jo
lds
icebp
gs
mov
push
jnp
cli
dec
add
mov
pop
or
mov
ja
mov
es
mov
pop
inc
jb
inc
pop
sub
cmp
shll
xchg
popf
enter
ficoms
andb
pop
or
lcall
std
repz
mov
adc
sbb
inc
ret
add
or
andb
mov
push
jo
push
out
or
punpckhdq
inc
out
and
dec
daa
sbb
or
enter
into
insl
jl
rol
xchg
roll
adc
stos
push
mov
cmpsl
lahf
sub
mov
mov
push
fiaddl
in
and
jl
xor
fdivs
test
fs
jp
out
lods
ret
xor
das
test
int3
clc
mov
cmp
in
cmp
xor
in
cmp
dec
icebp
push
aam
sbb
jge
push
sbb
mov
or
fiadds
add
and
dec
or
and
jmp
push
popf
dec
inc
popf
add
cmc
jae
stos
dec
push
aas
test
sbb
lahf
test
jb
cmc
push
fucomp
lds
sub
adc
push
pop
xchg
push
sbb
mov
xor
addr16
js
mov
sbb
inc
add
inc
movsb
mov
imul
push
xor
mov
insb
push
adc
jp
rcll
cli
fcomip
add
in
add
cld
mov
and
pusha
sbb
sub
sbb
mov
add
mov
jmp
mov
xor
push
and
fnstsw
mov
insb
int3
bound
negl
shl
jbe
mov
cmp
into
xchg
sub
std
xchg
adc
mov
stos
lock
mov
and
insl
add
sqrtps
andl
and
stos
adc
loop
fwait
xchg
inc
outsb
mov
call
mov
shr
push
rcll
std
movl
fimull
in
mov
loopne
pop
faddl
cs
stos
mov
popw
ret
fstps
mov
daa
fldz
scas
xchg
adc
jge
clc
jb
subb
movsb
push
pop
fwait
and
mov
mov
out
popf
add
adc
fstps
movsb
cmp
ds
mov
test
and
mov
sbb
and
mov
mov
jg
sub
or
or
sbb
icebp
aad
das
xor
ljmp
enter
jl
int
sbb
add
jge
pushf
lods
lds
aaa
out
movsb
pop
and
cmc
aas
add
testl
test
clc
cs
push
subl
push
pop
mov
dec
sbbl
dec
pop
lcall
bound
pop
mov
dec
inc
int3
outsb
mov
mov
jle
iret
daa
ja
je
pop
ret
mov
adc
sub
cmpsb
fsubrs
arpl
imul
fisttpl
mov
bswap
cltd
in
ds
jno
dec
loopne
stos
xor
out
stos
xchg
les
jo
jecxz
in
adc
sub
inc
das
jg
add
and
push
pop
cmp
loope
jp
pop
inc
pusha
imul
add
icebp
daa
dec
adc
jle
pop
and
fmul
lea
fnstenv
mov
insb
daa
add
insb
dec
jnp
cmp
pop
sub
cltd
xchg
push
pop
inc
xchg
imul
imul
loope
sbb
aam
popa
pusha
pop
cmp
mov
mov
je
popf
ret
mov
aaa
bound
mov
cmpsb
andl
cli
cmp
lock
repz
mov
pop
xor
xchg
fisttpl
sbb
in
mov
fldcw
jecxz
jns
lcall
lock
out
cmp
push
pop
cmp
or
or
repnz
movsb
adc
repnz
mov
xor
hlt
clc
je
aaa
dec
test
cmp
fisttpl
data16
sahf
jne
in
test
cmp
shr
gs
mov
sti
shufps
and
push
sub
out
push
add
dec
xchg
je
mov
pop
jl
adc
or
sti
mov
das
xlat
scas
test
sbb
aam
add
pushf
shl
jecxz
sub
orl
shll
lcall
aas
or
adc
xchg
mov
dec
sbb
sti
push
pushf
stc
pop
roll
ds
xor
fwait
mov
jb
xchg
int
data16
mov
mov
shlb
stc
inc
push
std
lds
pop
mov
pop
mov
jb
and
clc
stc
notb
je
pop
mov
pop
mov
add
in
cmp
stos
fwait
sub
or
or
push
push
lea
stos
fbld
shlb
mov
cmpsl
lock
sahf
pop
jmp
shll
inc
mov
les
outsb
lea
push
xor
dec
sub
aaa
or
xlat
shr
inc
xchg
mov
fsts
test
jo
xchg
cmp
push
out
sahf
and
adc
ret
insl
ljmp
orl
lcall
pop
decb
or
shrl
dec
inc
das
out
stos
add
jbe
xorb
dec
xchg
sbb
adc
adc
mov
or
push
sbb
cmp
inc
test
sbb
mov
in
out
jno
lea
xor
fistpl
sbb
sbb
cmp
mov
pushf
cmp
mov
and
out
jle
testb
jmp
xor
mov
push
xor
sub
xchg
ja
xchg
gs
jge
out
pop
fwait
js
jge
lret
cmp
fdiv
sub
xlat
jbe
xchg
scas
xchg
jno
aam
pushf
dec
sub
push
push
add
jg
dec
dec
dec
test
sbb
jo
cmp
insl
rclb
cld
xor
cmpsl
cltd
inc
dec
fsubl
mov
fdivrs
andb
mov
clc
mov
dec
insb
pop
enter
jb
mov
aam
enter
imul
adc
subb
fiaddl
dec
fildll
into
dec
int3
inc
sbb
ja
test
or
xchg
cmp
mov
sub
lock
sbb
dec
and
mov
sarb
ja
xchg
jno
clc
hlt
cld
scas
mov
cmp
xchg
idivb
cmpsl
mov
into
in
in
add
or
or
ret
mov
mov
out
clc
in
mov
lret
cmpsb
addr16
push
pop
lahf
push
data16
fists
jns
adc
inc
or
imul
inc
test
mov
test
shll
nop
sbb
sub
lahf
call
aad
movsl
lret
or
rclb
xchg
fnstsw
aad
push
in
xor
and
pop
les
call
shl
xchg
insb
sbb
push
mov
xchg
dec
test
or
loop
fbstp
aad
ja
rclb
clc
push
les
aad
jb
es
or
xor
out
enter
inc
fs
dec
or
inc
pop
fs
push
and
fdivrl
in
jb
sbb
xchg
mov
mov
test
mov
ja
fnstsw
add
daa
or
imul
push
jp
dec
stos
mov
lea
test
sbb
cmp
clc
inc
testl
aas
pop
push
mov
jecxz
out
mov
jbe
cs
je
mov
cwtl
enter
loopne
repz
push
xchg
mov
cmc
mov
test
xorl
add
fistl
mov
sub
cs
rorb
or
mov
sbb
loope
pusha
pop
inc
dec
push
ja
pop
test
lds
arpl
into
int3
std
add
loope
cmc
or
es
mov
fdivs
pop
dec
leave
out
jae
movsb
int
inc
lcall
inc
mov
lock
mov
aas
mov
stos
ret
adc
xor
jmp
ret
in
inc
fs
in
insb
lds
jb
jb
leave
mov
int3
es
pop
lret
movsb
dec
jo
jl
or
aad
mov
neg
and
ret
jp
out
inc
stos
mov
xchg
and
pop
mov
xchg
xchg
add
addr16
inc
addb
loope
adc
xor
and
mov
out
jge
out
push
pop
orl
sti
pop
stc
push
ss
mov
jno
and
jb
and
pushl
mov
xchg
das
nop
mov
int
mov
add
nop
in
or
inc
ficoms
fstps
add
push
out
rorb
and
xchg
push
cmpsb
lcall
mov
pop
pop
sub
xor
xchg
inc
add
arpl
cmc
jecxz
jne
sub
or
inc
or
dec
das
jne
idivb
push
mov
aaa
sub
call
fisubrs
out
xchg
clc
pop
lea
pop
push
lcall
orb
lret
sbb
jp
in
add
fcompl
cmp
cmpsb
stos
orb
fs
in
pushf
sub
pushf
daa
xor
decb
xor
sbb
andb
shrb
sub
jne
inc
adc
adc
add
daa
insb
push
mov
mov
push
push
jnp
dec
or
mov
sbb
repz
push
dec
repz
int
out
add
leave
dec
lods
mov
pop
mov
jbe
ljmp
mov
lds
mov
andb
pop
mov
push
dec
aad
in
aad
lahf
aam
ds
in
nop
dec
pop
ds
mov
fisttps
pop
cltd
pop
js
push
ret
popa
mov
push
sbb
ficoms
fst
test
in
mov
cmp
stos
or
flds
nop
repnz
mov
inc
out
in
xchg
add
hlt
das
xchg
fwait
sbb
sbb
ja
xchg
call
inc
xchg
jecxz
lods
bound
adc
lea
stos
fadd
xchg
and
and
jns
popf
ror
mov
jnp
mov
call
andb
out
and
loope
scas
mov
fsts
sub
xor
xchg
mov
enter
mov
xchg
pop
inc
and
bound
repnz
filds
and
push
adc
sbb
pop
lock
mov
xchg
lea
pop
push
sub
les
mov
jb
mov
push
stos
fistl
cmp
and
push
inc
push
pusha
pop
mov
aam
ljmp
or
mov
ds
out
xchg
xchg
js
dec
dec
mov
test
loop
dec
stc
divb
dec
ror
jg
jge
cwtl
faddp
cs
xor
adc
bound
and
inc
xchg
je
dec
xor
jp
mov
cltd
mov
fdivrs
psrad
sub
xor
inc
cmpl
and
mov
fs
push
jp
pop
adc
jns
jns
inc
sti
enter
jnp
out
xor
or
aas
xor
cmc
pop
mov
clc
test
lods
repz
test
test
shrl
pop
jbe
cli
xchg
faddl
xor
push
xchg
aad
sbbl
js
data16
jno
xor
xor
sahf
cmp
aaa
js
lods
lods
mov
mov
arpl
inc
inc
rcrl
pop
cwtl
sbb
sbb
sbb
daa
lock
cmp
or
cmp
rolb
jge
and
cmp
pop
lahf
mov
pop
outsb
imul
leave
jecxz
jno
imul
loop
mov
mov
and
les
rcr
dec
pop
daa
xor
mov
mov
outsb
cwtl
add
xchg
jp
mov
stos
sbb
stos
jnp
call
sahf
push
in
adc
movsb
incb
pop
popa
lods
add
jg
add
shrd
lahf
shrb
sti
mov
or
call
popf
jmp
fsubs
mov
ss
das
scas
add
cmp
or
repnz
jno
mov
push
fcomip
sti
pop
pop
push
mov
pushf
xchg
out
mov
mov
mov
aad
jmp
xchg
adc
cmp
adc
mov
adc
or
mov
jl
or
hlt
in
inc
jae
cli
imul
mov
mov
xor
xor
mov
adc
sbb
cmp
mov
adc
sbbb
inc
inc
xchg
int3
xchg
pop
pop
ret
xchg
daa
jecxz
mov
add
and
notl
bnd
mov
xlat
xor
repnz
lods
insb
movsl
add
mov
mov
pushf
pop
jb
lods
pop
gs
in
rclb
insb
aas
insl
mov
cs
jbe
add
in
dec
or
sti
pop
add
mov
lods
ljmp
in
cmc
cmp
mov
cmp
adc
loopne
xor
sub
inc
adc
inc
mov
and
inc
sbb
jbe
jge
es
clc
xor
insl
outsl
dec
xchg
pop
xchg
push
xchg
shll
adc
fbld
and
xchg
popa
out
test
pop
mov
in
mov
sub
notl
js
imul
popa
ss
or
add
sub
add
push
adc
lock
push
mov
enter
jno
nop
push
fs
jl
or
out
int3
in
out
inc
pop
jns
pop
test
inc
fdivl
xor
mov
insl
adc
mov
adc
sarb
or
mov
xor
pusha
pop
push
dec
push
js
notb
call
xchg
hlt
iret
sbb
push
xchg
adc
data16
std
mov
jg
mov
sbb
repz
testl
push
xchg
negl
shlb
icebp
and
int3
inc
in
add
test
imul
mov
mov
add
in
call
or
dec
pmullw
jae
mov
xlat
ficomps
test
ss
mov
mov
hlt
ds
jmp
cmp
mov
mov
test
pop
jb
add
xchg
pusha
daa
gs
dec
mov
mov
in
into
imul
cmp
es
dec
jmp
sahf
js
cli
movsb
or
and
mov
cmp
dec
inc
jno
shlb
jp
and
in
aaa
addb
mov
push
adc
es
pop
das
and
mov
popa
fldcw
mov
xlat
test
mov
fstps
xor
jbe
jnp
out
xchg
xor
dec
mov
mov
scas
inc
bound
in
mov
adc
push
push
push
dec
sbb
in
mov
mov
insl
mov
push
fcompl
out
adc
lods
mov
ds
out
je
push
push
push
adc
fidivrs
push
js
imul
cwtl
pop
dec
push
movswl
in
inc
xchg
jg
jl
leave
mov
dec
or
iret
negb
sbb
clc
cs
cmp
push
out
ds
int3
mov
mov
xchg
aas
or
pop
sbb
aas
cmpsb
sbb
jae
pop
shl
fisttpl
aas
push
add
cs
arpl
bound
pop
pop
mov
inc
in
scas
popw
out
ja
mov
rolb
dec
stc
jp
dec
sub
call
inc
repz
lods
test
and
insb
aas
lcall
nop
mov
sub
sahf
mov
scas
jge
cltd
lods
mov
pop
das
lods
dec
sub
sbb
iret
in
dec
inc
pusha
mov
fdivs
cltd
xor
jnp
mov
inc
inc
les
aaa
cltd
data16
idivb
sbb
xchg
xchg
dec
ret
fsubrs
call
jae
or
sbb
push
nop
fcoms
out
xchg
mov
xchg
popl
imul
out
dec
rcll
out
loope
outsl
add
lret
cmp
pop
inc
out
mov
cmp
lods
xchg
and
sarb
insl
es
mov
ret
pop
push
sub
cmp
sbb
pop
xor
push
pop
std
fadds
sub
cwtl
cmovnp
gs
mov
repnz
sbb
inc
shlb
mov
lret
arpl
int
es
lahf
test
cmp
rcrb
cmp
fs
fildl
ret
cli
add
enter
lret
jge
mov
fists
repz
jno
loop
out
pop
dec
adcl
pop
adc
mov
test
dec
push
int3
fnstcw
cmp
pop
mov
test
aam
arpl
cmpsb
je
mov
sub
mov
add
xchg
xchg
test
inc
mov
xor
jge
imul
add
push
repz
jbe
push
rorl
pop
xchg
xchg
xor
mov
cwtl
jnp
insl
dec
jno
stos
pop
aam
push
dec
lret
rcrb
loopne
stc
adc
arpl
cmp
scas
xchg
div
loope
and
std
sarl
and
cli
adc
dec
mov
jno
dec
lock
push
movsl
xchg
jmp
xor
icebp
and
sbb
xchg
dec
out
xchg
sbb
xchg
fwait
ds
sbb
adc
subb
arpl
lahf
test
mov
lret
push
xor
mov
push
and
pop
rcrb
pop
xchg
and
out
cli
xor
or
mov
and
popa
scas
jl
insb
xchg
xchg
sub
shrb
cmp
mov
cmp
adcl
pop
cld
cmpl
adc
shlb
and
nop
push
mov
int
roll
insl
pusha
sub
adc
mov
lret
cmc
lcall
pop
cmp
stos
adcb
jle
add
sub
jno
fwait
dec
in
out
popa
lret
bound
data16
rorb
xor
repz
shrb
xor
sub
mov
pop
xchg
sbb
adc
out
movsb
stos
xchg
xor
xchg
mov
mov
sub
pop
movl
mov
gs
mov
mov
sub
jnp
jecxz
sbb
mov
dec
sub
sbb
lcall
hlt
push
xor
into
test
add
or
xchg
inc
jnp
mov
lahf
dec
inc
cmp
loop
hlt
jno
pop
int3
jmp
cmp
rorl
imul
outsl
mov
lods
pop
xor
mov
add
lds
xor
cmp
push
es
stos
in
out
test
movsl
dec
dec
popa
lods
ds
in
and
das
lret
lods
daa
aam
adc
leave
inc
sub
sub
inc
jno
shlb
imul
lock
cmc
or
add
out
lret
push
push
dec
xchg
mov
clc
inc
aas
push
jl
fdivl
inc
insb
hlt
nop
repz
mov
test
push
mov
pop
xor
dec
or
push
cmp
test
in
and
push
ret
roll
dec
imulb
dec
imul
mov
mov
ret
enter
sbb
xchg
fsubs
inc
and
sub
sub
or
ja
stos
cmc
mov
jp
xor
loop
sbb
cmp
dec
jg
fsts
xchg
push
cmpsb
mov
mov
mov
aad
aam
mov
pop
hlt
or
lods
in
lret
orb
pop
xor
call
sbb
dec
rcl
lods
notb
stos
imul
ja
push
in
sbb
ret
cmp
insl
mov
ret
pop
incl
movsl
fstpl
and
jns
xlat
fiadds
ja
jno
mov
loop
mov
rorb
and
mov
cmp
xchg
pop
jb
push
test
adc
jmp
mov
js
add
cs
std
sahf
out
cmp
aas
lret
and
and
sbb
fnsave
in
push
sti
addr16
push
push
test
das
sbb
xor
addr16
js
mov
and
outsb
pop
in
dec
pop
insb
push
push
cltd
jns
pop
jno
mov
int3
notb
jno
aam
sbb
mov
mov
mov
push
mov
sub
xchg
add
push
pop
xchg
sub
inc
cwtl
and
mov
cltd
jg
mov
iret
ss
mov
insb
loope
pop
mov
aad
or
data16
fmuls
push
dec
sub
iret
and
cltd
mov
xor
stc
frstor
out
insb
gs
repnz
pop
sub
cmpsb
cmp
push
pop
mov
jbe
and
shll
xchg
inc
insb
xlat
lea
xchg
out
jo
stc
hlt
fdivrs
mov
movsb
sbb
xor
push
arpl
pop
mov
fcomip
popa
mov
or
leave
test
testl
sbb
jb
cmp
lret
mov
shll
clc
pmaxsw
fwait
xlat
inc
push
andb
pop
adc
in
dec
xchg
pop
lret
dec
sub
sub
xor
js
pop
jbe
mov
subl
test
cmp
test
cmc
hlt
inc
std
addl
mov
adc
lret
inc
add
movsb
sbb
hlt
icebp
pop
jns
adc
sub
push
xor
in
cmp
inc
mov
lcall
jae
out
jae
and
dec
cmpsb
mov
cmp
lds
mov
pop
stos
pop
in
movsb
shrb
vmwrite
xor
mov
ficoml
push
inc
cmp
test
cmp
add
mov
dec
movsb
mov
sub
ja
lret
pusha
mov
stos
and
xor
inc
aas
or
pop
jmp
addl
ret
and
mov
je
mov
es
aaa
idivl
idivb
pop
mov
int
je
mov
pop
and
mov
push
lcall
push
fmulp
inc
or
push
jmp
push
hlt
xor
fldt
loopne
mov
sahf
and
ss
xor
not
es
push
cld
adc
mov
or
jg
cwtl
mov
fnstsw
xor
sti
sbb
into
sub
sbb
lret
ljmp
lret
cmpsb
sti
cwtl
pusha
mov
lahf
stc
sbb
int
add
mov
popa
cmpsl
aad
fdivrl
popa
repnz
int
add
repnz
add
aad
sbb
adc
push
adcb
mov
imul
adcl
adc
mov
mov
mov
or
loop
cs
sub
jecxz
mov
mov
inc
jbe
cwtl
testb
jl
insb
xor
and
test
lds
xlat
pop
gs
add
mov
jmp
xchg
insb
iret
hlt
xchg
jmp
mov
xchg
lahf
gs
xchg
dec
insb
jbe
test
inc
xchg
dec
aam
insl
push
pushf
add
mov
push
sub
imulb
hlt
push
loope
bnd
imul
cli
xchg
stos
jle
ja
mov
scas
add
sbb
mov
and
xchg
mov
sbb
mov
in
xchg
das
filds
xchg
mov
jl
into
jo
clc
inc
pushf
jb
mov
mov
mov
inc
leave
in
clc
pop
or
movsb
mov
or
jmp
mov
clc
inc
incl
loope
jle
sub
aam
aam
dec
aaa
lahf
mov
inc
lret
pop
jl
ficoms
loopne,pn
fs
mov
in
notl
adc
jle
cltd
cli
test
lea
add
and
xchg
mov
mov
bound
xlat
fidivl
cmp
mov
mov
push
xchg
push
cmp
in
xchg
nop
loop
ror
imul
insl
out
pop
fs
jmp
and
add
dec
fst
iret
add
push
outsl
fcmovu
mov
pop
int3
dec
imul
xchg
lea
lods
sub
fldt
aad
mov
or
mov
lds
mov
stos
add
pusha
cli
stos
adc
fldl
fs
in
pop
and
arpl
dec
fwait
call
adc
inc
xchg
lea
inc
mov
lahf
mov
inc
rclb
push
cltd
movsb
adc
jbe
jl
scas
mov
dec
push
jno
rcrl
mov
inc
add
out
test
loope
aad
jbe
xchg
cmp
cmp
out
popa
adc
shlb
nop
and
mov
fwait
pop
adc
mov
pop
push
sub
icebp
call
jne
loope
pop
dec
hlt
mov
mov
inc
test
push
stc
repz
add
in
popf
stc
sub
addr16
mov
and
inc
rolb
ja
sbb
sub
dec
push
push
jne
test
daa
loop
sub
rolb
jae
jo
add
andl
lahf
arpl
jnp
movsb
stos
push
decl
mov
scas
and
mov
xchg
movsl
scas
imul
rol
rorl
jb
and
jb
jp
ljmp
or
cmpsl
or
inc
push
jae
or
push
mov
test
loope
bound
fnstcw
add
enter
fisttpl
cwtl
scas
pop
mov
sub
je
cmp
mov
dec
sbb
pop
mov
and
xor
call
adc
and
mov
es
fadd
push
adc
in
and
int
lds
js
fidivs
fdivr
ds
add
jbe
inc
xor
or
ret
inc
pop
test
or
ljmp
cmpsb
cmp
xchg
xchg
rcrb
push
pop
pop
iret
test
mov
pop
cwtl
roll
enter
xor
leave
cmp
lods
cmp
jge
pop
mov
imul
ss
dec
cmp
jns
push
jbe
mov
fstps
popa
mov
push
outsl
add
dec
sub
dec
xchg
jmp
sbb
push
or
jbe
add
test
push
pop
movsb
cs
stc
jno
mov
in
dec
mov
sbb
xor
jmp
outsb
std
adc
inc
out
in
dec
mov
or
lods
sbb
sar
push
pop
push
dec
and
mov
inc
mov
mov
aam
cmp
cmpsb
xor
xchg
cld
in
cmpsb
add
call
lahf
or
imul
ja
mov
jmp
sub
add
icebp
pushw
mov
in
xchg
push
cmp
and
cmp
or
push
gs
and
mov
or
ret
add
sahf
aaa
mov
cmpsl
loopne
fisttpll
dec
gs
stos
adc
cmp
ss
repnz
nop
sahf
fiadds
xchg
pop
mov
xor
dec
pop
repnz
adc
mov
jnp
mov
les
and
sbb
cmp
repz
mov
imul
jp
jo
push
imul
and
sbb
enter
jo
aad
sub
int3
shlb
ret
add
hlt
mov
fmull
add
adc
cmpsl
subb
add
cltd
push
sub
sbb
cwtl
xchg
xchg
xchg
movsb
jl
sbb
or
mov
sbb
add
dec
xchg
lea
pop
jle
test
rorb
xchg
cmp
xchg
cmc
popf
inc
lret
push
andl
bound
popf
mov
mulb
sbb
jle
repz
mov
test
xchg
std
test
push
movsl
xchg
sub
sbb
cld
leave
mov
push
adc
movsl
adc
fstp
iret
lock
sub
loop
jo
xor
sbb
in
jbe
inc
add
out
cltd
sbb
push
dec
scas
clc
outsb
ja
xor
pop
neg
inc
into
lret
xchg
leave
inc
mov
outsb
lods
and
push
add
mov
mov
clc
fisubrs
pop
pop
mov
pop
in
stos
mulb
dec
push
push
int
std
fidivs
loope
inc
adc
jl
pop
mov
in
arpl
hlt
rcrl
cmp
nop
mov
cmc
jmp
mov
sarb
test
push
add
pop
jge
loope
les
push
dec
or
mov
mov
mov
push
or
adc
dec
mov
and
xchg
ds
andps
xor
or
loop
jge
cmp
fs
jp
fdivrs
adc
subb
mov
fldcw
xchg
pop
jo
sbb
es
lds
mov
add
aam
test
ret
xchg
xchg
imul
mov
xlat
xchg
and
jae
sub
mov
push
xor
jmp
subl
push
push
mov
shll
subb
imul
daa
sub
sub
int
in
xchg
push
test
xchg
aaa
aad
loopne
rorb
and
pop
in
std
jno
mov
xchg
dec
dec
scas
faddl
adc
sbbb
orl
fsub
xor
shlb
cmp
xchg
pop
in
pushf
scas
loop
pop
mov
xchg
sbb
bound
fsubrp
ret
insb
subl
arpl
adc
in
mov
jnp
addr16
cmp
cli
dec
xchg
out
out
or
sbb
jnp
loopne
fistps
ss
jmp
push
shrb
cmp
rorb
outsb
out
push
rcrl
sub
stc
inc
fisubrs
std
add
sti
enter
pop
and
xor
push
shll
test
mov
mov
mov
or
xor
xor
out
sarb
imul
jge
or
jle
jb
dec
jg
push
and
mov
jae
xchg
adc
pop
fisubrl
dec
cmpsb
xor
jp
std
adc
test
int3
xabort
adc
scas
popf
push
add
mov
push
loope
jl
lret
mov
cmpl
loop
fcmovu
lretw
jbe
and
insb
decb
test
das
lea
call
pushf
add
pop
push
jne
inc
dec
sub
daa
enter
mov
andb
inc
iret
movsl
sbb
jle
data16
dec
add
lcall
cmpsl
adc
orb
pop
insb
pushf
push
sub
cli
sbb
das
mov
dec
stos
and
fwait
lods
enter
movsl
pop
popf
sbb
scas
jecxz
imul
ret
cmp
push
cwtl
mov
mov
movl
mov
mov
adc
or
or
sti
rcll
mov
insb
lds
stos
or
das
push
cmp
ret
mov
inc
sbb
jp,pn
push
ja
add
sbb
xchg
jne
pop
outsl
incl
aad
mov
popa
jne
sbb
dec
test
filds
fiadds
xor
dec
pop
xchg
sub
inc
or
and
xchg
adc
js
dec
loopne
ret
push
lcall
mov
insl
addr16
mov
push
ficompl
adcb
jb
movsl
adc
cwtl
pop
inc
divb
jbe
stos
dec
pop
lock
mov
mov
pop
lea
xchg
lock
test
dec
adc
incl
inc
call
and
xor
movzwl
xor
and
movsl
in
cwtl
pop
jge
sub
xor
clc
add
add
and
xor
xor
popf
lahf
ds
fmull
inc
dec
lcall
bound
push
mov
stc
sub
sub
or
enter
subb
repnz
inc
sbb
push
cmpsb
in
sub
sbb
mov
jecxz
ficoms
pop
rcl
scas
shlb
xor
or
push
xchg
push
mov
sbb
add
shlb
or
xor
pop
aas
sub
dec
movsb
jg
xchg
mov
leave
jo
mov
sahf
negl
insb
push
in
jo
add
sub
imul
push
out
xor
xchg
insb
and
xchg
pushf
cmp
dec
jmp
mov
daa
mov
jnp
inc
adc
inc
push
rolb
lods
pop
mov
pop
pushl
pop
mov
loope
xchg
mov
xor
imul
jecxz
mov
mov
and
sbb
pop
xor
daa
shrl
jp
mov
sub
sub
pop
int
dec
lods
push
pop
sbb
mov
mov
cmp
sti
add
movsl
pop
inc
out
xor
xor
dec
ss
pop
sub
push
jge
flds
ljmp
into
gs
pop
add
es
das
out
xor
jle
repz
mulb
and
dec
inc
adc
rcrb
cmpsl
mov
inc
idivl
lock
xor
fidivrl
xor
mov
shlb
and
jg
push
rcrl
icebp
out
test
and
fmulp
shr
push
pop
mov
sar
jnp
lds
cmp
or
outsb
cmp
stc
sub
pusha
mov
and
cli
mov
cltd
fiaddl
out
or
jecxz
mov
sub
mov
out
inc
out
sub
pop
mov
lret
in
xor
jnp
xchg
fwait
cmpl
repz
mul
loope
xor
inc
pop
pop
rcrb
scas
rclb
ret
pop
test
mov
repz
outsb
imul
repz
decb
xor
adc
enter
and
pop
pushf
popa
loop
xchg
add
rcrl
sub
sub
jnp
xchg
lret
mov
add
sub
fwait
sahf
pop
jo
pop
mov
mov
dec
or
push
jb
xor
push
xchg
rcrb
stc
push
inc
mov
leave
inc
or
popf
pop
lret
jmp
pop
or
or
pop
mov
jmp
outsb
jnp
xor
push
call
mov
mov
sub
subb
ficoms
sbb
aad
outsb
aad
xor
orb
call
jae
jg
jmp
lret
jae
cmpsb
in
sbb
mov
insb
pop
in
mov
fildl
pop
jecxz
int
jb
push
mov
xchg
ds
xlat
lods
cmpl
mov
cltd
imul
adc
jle
scas
cmp
sbb
add
addr16
dec
nop
mov
sti
sbb
shl
ret
call
fs
mov
shrl
insb
xlat
std
mov
or
fstps
je
xor
xor
enter
push
push
cwtl
sar
scas
aaa
call
pop
push
rolb
push
icebp
sub
pop
jo
pop
jnp
pushf
mov
fs
xchg
ja
data16
int3
icebp
ljmp
push
xor
pop
scas
cmc
pop
lcall
cld
sub
cmc
inc
out
mov
adc
mov
rcll
cld
jne
das
in
jmp
jns
out
dec
dec
loope
fildl
outsb
sbb
test
adc
pop
in
inc
popf
mov
xchg
in
gs
add
mov
jl
and
stc
sub
cmp
push
push
push
jnp
adc
sbb
push
mov
sub
pop
addl
cmp
icebp
mov
xchg
popa
mov
cli
push
lcall
int
in
fistpl
pop
xchg
mov
jbe
mov
push
out
pop
nop
mov
sbb
mov
lahf
imul
sti
pop
push
dec
inc
mov
mov
enter
cmpsl
push
jns
adc
icebp
test
jnp
cmc
popa
push
sti
dec
cld
xchg
pop
sbb
imul
je
shlb
xchg
repz
shl
cli
inc
lcall
jb
adc
ret
jl
int
pop
es
xchg
dec
xor
movsl
or
adc
cli
scas
arpl
stc
lahf
add
mov
clc
hlt
sub
or
pushf
sbb
ss
inc
sbb
cmp
mov
out
sbb
cmc
rcr
cld
iret
xor
mov
cmpsb
rcrl
xorb
dec
insl
mov
mov
and
idivb
in
ret
iret
push
xchg
mov
push
and
outsb
xchg
pop
cmp
or
cmp
mov
shrl
pop
sahf
mov
mov
ficompl
push
mov
stc
sub
imul
mov
lds
data16
cld
loope
xor
inc
and
adc
mov
lcall
sbbb
mov
sbb
or
pop
aam
sbb
int
inc
sub
or
pop
push
ss
mov
pushf
fmuls
xchg
addr16
cmp
xchg
mov
rorb
sbb
dec
cmpsb
push
mov
in
mov
and
sbb
stc
push
cmpl
mov
movsb
fnstenv
jecxz
mov
or
inc
inc
mov
out
sbb
iret
cltd
test
lods
dec
test
add
movzbl
jp
fistpl
mov
daa
xchg
cmp
inc
pop
push
inc
js
inc
test
jns
mov
in
lods
lea
sub
rorb
jns
mov
mov
or
mov
fs
in
push
or
and
mov
shrb
fsts
cs
test
push
sbb
push
inc
lahf
setnp
mov
arpl
jne
in
test
push
jg
mov
es
movsb
inc
aad
and
subb
sbbb
call
jge
adc
ret
sbb
test
and
jecxz
insl
cmc
mov
js
in
leave
fwait
imul
fsub
push
in
out
xchg
in
into
insb
ud0
popf
inc
arpl
movsl
inc
aaa
cmpsl
aas
add
pop
stc
cmp
xor
cmp
and
daa
mov
xchg
ret
inc
popl
mov
stc
xor
outsl
les
pop
imul
fldenv
cwtl
mov
mov
jg
lds
jo,pt
jnp
popa
sub
rclb
pusha
sub
imul
stos
clc
mov
outsl
pop
lods
add
imul
fs
jnp
leave
lock
dec
lods
push
cmp
movsb
mov
negb
xchg
insb
int
jae
in
adc
imul
push
adc
jle
mov
and
adc
xchg
arpl
out
pop
mov
and
push
xchg
int
xlat
stc
imul
xorl
icebp
dec
jge
in
add
sbb
jle
cltd
in
sbb
xor
dec
lret
iret
mov
loope
test
adc
xchg
adc
aad
orl
mov
test
iret
pop
mov
xchg
xorb
inc
jbe
mov
movsb
les
cwtl
cmp
loopne
dec
mov
add
ret
ljmp
xchg
mov
fwait
xor
ret
mov
pushf
sub
aas
xchg
loopne
push
cmp
sbb
cmpsb
loop
jne
dec
in
cmp
insl
testb
sbb
leave
pop
enter
data16
pop
rclb
jp
pop
mov
mov
loope
mov
mov
or
xor
inc
jno
mov
and
inc
fsubs
std
scas
jb
fs
xor
pushf
in
push
mov
mov
sub
insl
pop
xlat
mov
xchg
xchg
add
and
test
and
adc
add
aam
lahf
insl
mov
sbb
push
in
mov
jl
or
mov
test
push
mov
adc
and
inc
cmp
and
mov
xor
xchg
ds
les
int3
fmuls
pop
inc
rorl
mov
dec
std
add
iret
or
mov
mov
in
pop
movsb
aad
dec
xor
jge
push
lret
roll
pusha
rcll
jmp
repnz
dec
jp
xchg
test
mov
adc
mov
int
xlat
orl
mov
or
cs
pusha
lods
mov
push
xchg
adc
fildl
aaa
mov
mov
in
ljmp
cmp
std
push
jb
fidivs
mov
faddl
fs
cmpsl
pusha
pusha
mov
jmp
push
pushl
fbld
mov
orb
jns
xchg
call
jle
push
cli
adc
jg
push
scas
xchg
int3
mov
sbb
push
pop
xchg
add
add
adc
xor
incb
and
scas
mov
rcrb
leave
out
sbb
mov
pop
scas
mov
arpl
inc
les
mov
dec
and
fadd
cmpsl
enter
in
gs
xor
aam
dec
inc
jecxz
mov
mov
int
push
or
movb
fistps
out
adcb
or
dec
mov
mov
lcall
push
fldcw
int
pop
mov
jno
lahf
sub
ljmp
loop
ret
inc
xchg
sbb
push
fnsave
js
sbb
daa
and
gs
xor
icebp
in
jecxz
imul
sti
cli
mov
jl
and
hlt
cli
lcall
xchg
push
push
ljmp
nop
insl
dec
ja
arpl
sub
push
jno
call
movsb
sub
xor
mov
push
lret
dec
xchg
lret
xchg
cltd
adc
test
dec
std
das
int3
pushf
fs
ja
js
int
dec
std
pop
rcrl
aaa
rcr
lahf
inc
push
push
aas
frstor
jne
shlb
mov
ret
and
xor
out
sarl
ja
aaa
xchg
or
fcomps
outsl
int3
pop
adc
sahf
js
lods
fldcw
lret
sbb
xor
test
repz
scas
cli
pop
or
mov
jmp
rolb
pop
hlt
mov
pop
xlat
xchg
and
outsl
sub
xchg
xor
shlb
daa
or
push
pop
stos
or
mov
sbb
mov
adc
cli
xchg
jbe
icebp
cmp
and
fwait
je
lea
rorb
pop
jmp
xchg
mov
jmp
fisubrs
rorb
ljmp
adc
push
cmp
mov
lahf
push
and
adc
add
xor
shll
leave
jge
les
xchg
inc
push
xor
out
and
add
das
f2xm1
test
cmp
shrb
adc
lea
inc
popa
fsub
movsl
mov
movsl
push
aam
in
jno
jl
add
push
aas
mov
ljmp
push
pusha
das
mov
xor
xor
loop
das
or
pop
xor
pushf
sbb
fdivs
out
in
xchg
dec
pop
adc
add
xchg
mov
hlt
mov
sbb
bound
aaa
loopne
loop
mov
int
xchg
fwait
add
imul
mov
leave
mov
fisttpll
ficoml
add
jecxz
icebp
mov
push
aas
cwtl
adc
jbe
pop
mov
jle
xor
int3
inc
sub
push
xor
das
icebp
xchg
arpl
or
data16
outsl
xchg
or
add
mov
cli
bound
jge
bound
sbb
jge
scas
mov
lock
mov
mov
repz
mov
dec
ljmp
jp
pop
inc
cmp
cmpsb
cmc
xor
hlt
mov
ret
les
sbb
sahf
cmp
adc
sti
xchg
jg
cmp
ret
cmp
push
lds
aas
bound
std
leave
sahf
icebp
cmp
jno
aas
cld
push
and
out
add
imul
xchg
mov
pop
inc
jb
test
and
adc
sub
fs
mov
incl
inc
and
pop
loope
in
xchg
xchg
dec
cmc
in
cmc
adc
es
adc
pop
outsl
xor
and
dec
sbb
dec
mov
inc
push
cmp
insl
or
test
insb
xlat
adc
jle
bnd
inc
rcll
jmp
or
repnz
push
mov
hlt
jl,pn
ds
adc
xchg
je
mov
inc
mov
cmc
stos
pop
jp
inc
repz
rdtsc
fisubrl
push
push
mov
xor
jnp
out
gs
sahf
ja
jg
iret
addr16
sub
mov
xchg
mov
xchg
test
pop
pop
roll
jl
push
bound
mov
dec
pushf
push
fsubrl
out
lret
xchg
cs
dec
fmuls
jb
pop
in
xchg
mov
pop
test
incl
push
repnz
loop
sbb
or
cmp
mov
and
and
pushf
sub
push
inc
and
push
pop
fbstp
mov
dec
cmp
xor
gs
xchg
cmp
pop
cmp
or
clc
dec
je
add
addb
subl
movl
add
push
and
xchg
xor
jecxz
nop
repz
sbb
cmpsb
ljmp
enter
sbb
aad
leave
jae
stos
sbb
pop
cmp
data16
stos
popl
dec
lahf
pop
xchg
xor
sub
inc
xchg
in
rcrb
inc
das
js
mov
or
push
mov
inc
mov
push
addr16
ljmp
add
or
in
dec
mov
aaa
xchg
push
xor
push
stos
roll
cmp
stos
nop
xor
xchg
xchg
aam
addb
inc
daa
insl
cmp
xchg
mov
adc
into
popf
adc
sbb
push
jecxz
repz
push
je
dec
or
push
adc
mov
and
mov
cli
push
mov
cld
gs
jbe
cli
lock
out
arpl
ljmp
xchg
push
dec
adc
lods
xor
sbb
jmp
sbb
inc
out
push
lock
push
sbb
sub
adc
pop
mov
adc
stos
xchg
adc
int
push
ja
sar
inc
fwait
dec
insl
sub
xor
lea
insl
mov
cmp
inc
jge
mov
push
ficoms
gs
outsb
arpl
cli
dec
lcall
int3
out
and
out
fxch
ret
fldcw
cmp
pop
imul
popa
loope
jnp
jp
rorb
xor
and
xlat
je
sbb
mov
fs
movsl
aaa
add
mov
fildl
xor
sub
pop
mov
jp
inc
xor
mov
adc
lods
pop
aas
movsl
hlt
hlt
mov
jmp
mov
mov
pop
hlt
xor
inc
mov
mov
aad
xchg
mov
lretw
sti
xchg
jb
or
test
and
fisubrl
sub
stos
cmp
mov
dec
jle
out
fucomp
mov
hlt
ret
fcoml
nop
add
call
push
push
rdseed
dec
jmp
js
shrb
insb
outsb
xchg
hlt
jnp
push
jl
lea
mov
jne
iret
pusha
inc
mov
pushf
mov
xor
das
xor
ret
add
inc
and
testb
movsl
sbb
incl
xor
loop
repz
mov
jge
cmc
sub
imul
mov
scas
pop
jge
mov
xor
nop
mov
xlat
jle
mov
jcxz
jp
sbb
jecxz
rcll
xor
mov
stos
xchg
cmp
clc
subb
icebp
loop
iret
push
rcr
jmp
into
out
mov
aaa
popf
xchg
inc
int
bound
pop
mov
bound
sub
and
gs
ds
loop
rcrb
pop
xor
sub
fildl
js
rorb
std
xor
and
cmp
movsb
adc
cltd
out
cmpsl
jp
stc
mov
xor
mov
ret
scas
inc
mov
enter
mov
mov
idivl
popf
or
ja
js
lret
arpl
out
inc
orb
call
inc
mov
mov
jle
adc
mov
mov
mov
data16
pop
jne
and
xchg
add
not
movsl
ss
aad
xor
dec
pop
mov
bound
les
cltd
sbb
push
orl
inc
lock
in
in
sbb
xor
pop
mov
rclb
jo
insb
pop
mulb
push
xchg
sbb
daa
mov
pop
dec
xchg
mov
xchg
or
push
int
or
stos
shrl
test
mov
fisubrl
dec
mov
imul
ljmp
mov
cltd
xchg
xor
push
loop
push
pop
jne
mov
mov
ficompl
les
jle
mov
add
mov
sub
dec
sbb
xorb
adcl
fisubl
cmp
fs
mov
icebp
xor
loope
pushf
loopne
sbb
aaa
stos
or
andb
ja
push
sub
sbb
decb
gs
jmp
cwtl
popf
adc
cmp
call
idivl
out
call
sbb
mov
push
dec
mov
shl
push
push
mov
mov
jge
xchg
mov
cmpsb
inc
push
loopne
cmp
fdivs
out
popf
repz
push
clc
repnz
xchg
xchg
insb
push
or
mov
negl
das
inc
xchg
jnp
pop
insb
imul
test
adc
dec
in
xchg
insl
enter
icebp
xlat
sub
push
in
dec
adc
lret
scas
sarb
mulb
insb
dec
fistpll
cld
push
sbb
push
popf
fwait
addr16
jnp
jns
sbb
xor
mov
cmpsb
sbbl
insl
add
add
mov
icebp
int3
pop
movsl
es
into
adcb
inc
out
mov
push
jae
lret
leave
cmpsb
sbb
lock
into
mov
movsb
fwait
invd
movsb
push
push
pusha
or
add
mov
pop
pop
jnp
pushf
movsb
sub
add
add
cmp
xchg
cwtl
push
jb
outsl
sub
fnsave
adc
imul
jl
ja
add
xor
shll
cmp
mov
pop
fucomi
fmulp
outsb
enter
and
shl
cmp
aaa
jnp
sahf
xchg
sahf
or
mov
sub
push
repnz
inc
and
adc
hlt
add
push
cmp
mov
jle
sub
cltd
push
pop
bound
into
stos
pop
hlt
pushf
lretw
dec
pop
divl
fcoml
xchg
mov
test
xchg
dec
roll
lret
push
push
mov
mov
mov
stos
jnp
arpl
cld
jne
push
loope
mov
into
mov
cmp
lock
insw
cwtl
inc
jo
in
bound
jne
scas
int
je
loop
jae
sbb
push
jmp
xor
push
je
fisttpll
pop
xor
int3
sarl
push
imul
mov
pop
inc
loop
stos
xor
mov
jecxz
imul
fs
adc
arpl
ja
xchg
into
push
in
mov
mov
hlt
lods
data16
sbb
lret
in
call
xchg
sbb
mov
or
fmuls
xchg
inc
test
nop
xor
mov
cmp
jae
jne
add
sub
adc
pop
les
or
jmp
mov
subl
cmp
adc
mov
mov
mov
or
pop
mov
movsb
fmull
cli
cltd
in
xor
pop
pop
pop
cmp
cli
pop
movsb
xlat
cwtl
jp
testl
sub
icebp
mov
sub
sbb
ret
push
mov
cltd
pushf
adc
jno
add
dec
inc
pop
shrb
into
lret
outsl
call
jnp
mov
xlat
dec
mov
mov
shll
jbe
push
jnp
shrb
pop
outsl
lods
inc
movsb
mov
pop
in
mov
push
jl
sbb
je
fdivrs
femms
jl
sub
shl
cmpsb
push
fwait
inc
out
dec
push
mov
jo
in
inc
sbbb
adc
or
outsl
jbe
cmp
movb
mov
aaa
lods
loopne
in
jno
mov
add
dec
call
jg
stc
cmp
xor
out
decb
cmp
cwtl
fsubs
gs
cmp
into
xlat
xor
mov
mov
popa
sub
arpl
push
inc
dec
gs
insb
and
fwait
inc
cmpb
pushf
adc
xor
xlat
lret
dec
cli
imul
mov
out
das
pop
mov
jmp
pop
je
repnz
sbb
pop
jg
inc
pop
push
sub
lds
mov
fldenv
sub
out
push
xor
jne
and
cmp
ljmp
mov
adc
scas
iret
or
je
ret
jns
mov
sub
mov
add
sub
pop
dec
pop
nop
pop
insb
dec
pop
lahf
movsb
movsb
aaa
xor
loop
sub
arpl
mov
stos
xchg
popf
inc
mov
xchg
mov
sub
jnp
stos
outsb
dec
ret
xor
pushf
mov
mov
xorl
ret
push
inc
int
adc
in
pushf
cld
sbb
push
xor
mov
pop
jle
push
xorl
jp
hlt
rcrb
add
in
push
sbb
fsubrs
fcmovbe
push
cmp
repz
jnp
aaa
scas
jmp
fdivs
xor
adc
push
fwait
xor
test
inc
pop
movsb
ret
lret
and
jnp
xchg
push
push
fnsave
in
push
sub
adc
cld
push
popf
das
test
cmp
in
in
hlt
cmc
test
push
je
rcrb
sbb
fdivl
or
sbb
mov
jmp
lret
mov
and
imul
sahf
jnp
push
or
nop
pop
add
add
adc
test
clc
es
or
xchg
mov
fwait
xchg
push
push
aam
push
jp
nop
mov
cmpsb
sbb
insl
imul
sub
fsubrl
xor
jne,pt
mov
cmp
out
dec
ret
mov
pop
sti
into
sbb
mov
jno
dec
jno
sub
pop
inc
pop
mov
jp
stos
dec
adc
mov
roll
out
rol
push
xor
repz
cmp
jb
sub
and
mov
lret
pop
push
iret
outsb
jo
hlt
int3
xor
mov
loope
xchg
arpl
mov
inc
lods
fldenv
nop
addl
xchg
out
dec
cmpsb
push
orb
sbb
mov
mov
std
notl
js
je
sbb
push
fdivrs
js
sbb
mov
sub
sub
out
mov
pop
pop
mov
jns
xor
cmpsl
inc
push
mov
xor
pop
lock
into
js
xor
cmpb
add
pop
fnstcw
pusha
mov
push
leave
mov
xchg
das
or
testb
jl
jp
xchg
es
rsm
push
in
call
shl
movsb
mov
mov
pop
imul
lock
cltd
push
cli
pushf
add
xlat
pop
fdivrl
pop
jl
jmp
sbb
je
sub
xchg
mov
insb
sarl
xchg
mov
test
add
scas
xor
icebp
and
sbb
sbb
andl
sub
xchg
push
inc
cmp
cmp
lahf
pushf
dec
push
jle
adc
push
aam
lea
or
pop
push
sysenter
stc
pop
sub
stos
sbbl
in
inc
cltd
push
insl
cwtl
inc
cmp
sbb
xor
fcmove
movsb
push
fcmovnu
adc
in
outsl
and
jmp
or
rcll
push
mov
inc
stc
mov
int3
mov
jo
push
sbb
add
push
out
push
fwait
or
or
push
cmp
inc
cltd
out
out
lret
sub
jmp
cmp
out
in
popa
cmp
into
pop
sbb
out
andb
into
in
je
fdivs
adc
cmp
sahf
out
sti
movsl
ret
aas
and
in
clc
push
shrb
xor
data16
lret
movsl
ret
inc
mov
xor
pop
fiadds
outsb
sbb
xchg
xor
inc
add
in
daa
stc
daa
add
add
add
mov
dec
leave
clc
cwtl
push
xchg
clc
jne
mov
and
sbb
mov
dec
xchg
xlat
in
jl
fstps
fs
sbb
add
mov
add
push
add
leave
cs
das
ds
insb
mov
fwait
mov
xchg
js
jb
lret
stc
add
and
pop
and
jmp
inc
jmp
push
mov
into
mov
push
test
lcall
bound
pop
add
sbb
mov
subl
sarb
movsl
lcall
test
jo
fistl
xor
in
mov
mov
sub
jae
in
mov
pop
imul
nop
arpl
in
shr
int
cmp
leave
ss
icebp
and
or
pop
pop
pop
sub
pushf
in
ret
push
aas
adc
mov
inc
mov
sbb
andb
repz
fisubrl
das
pusha
inc
std
lea
pop
insl
mov
inc
mov
aas
in
rcrl
cmpb
cmp
negl
sub
or
xchg
fs
lcall
cwtl
div
cltd
xlat
pusha
aad
dec
xor
les
pop
insl
mov
jg
cmpsl
add
leave
lcall
lret
test
push
loopne
mov
fwait
mov
jle
stc
pop
sbb
loopne
dec
dec
mov
jmp
loope
lods
cmpsb
mov
or
or
or
push
jb
adc
push
jnp
mov
inc
jmp
push
push
mov
inc
sbb
test
xchg
syscall
rcrb
inc
cmpsb
xor
mov
push
jns
ret
lahf
jecxz
cltd
stos
sub
pusha
pop
pop
ret
cmp
cmpsb
mov
add
sub
outsb
lods
cmp
xchg
imul
lcall
neg
xor
arpl
jmp
xor
jnp
and
xchg
mov
push
sub
mov
and
gs
aas
pop
nopl
mov
imul
dec
repnz
push
jecxz
dec
xchg
loop
xchg
je
cmp
stos
pop
mov
xchg
cmp
test
cmp
shlb
jbe
jp
push
adcl
les
icebp
inc
or
jbe
lods
daa
sub
dec
ret
jg
addb
sbbl
adcl
dec
xchg
mov
out
adc
andl
mov
adc
out
fwait
iret
dec
and
mov
fs
mov
inc
pop
lret
clc
mov
lcall
sbb
fs
out
pop
movsl
add
and
adc
cli
lahf
cmc
hlt
jno
ds
jnp
daa
and
xor
adc
pop
xor
dec
cmpb
pop
sar
and
xchg
sub
and
sbb
cmpsb
fildll
div
sub
mov
test
push
dec
mov
mov
dec
push
or
test
adc
clc
dec
fadds
je
popa
and
cwtl
aam
xor
cli
inc
xchg
movsb
int
enter
add
stc
xchg
and
cmp
sbb
xor
movsl
call
jb
lret
xor
dec
xchg
cltd
mov
aaa
les
sbb
add
sbb
sbb
dec
xor
je
jmp
test
pop
repnz
loop
ljmp
ret
add
mov
sbb
stc
daa
inc
inc
push
and
ss
dec
repz
fldl
jo
int3
adc
sbb
add
clc
aad
adc
pop
jns
sub
shlb
sub
mov
pop
mov
rorb
mov
scas
cmp
fstl
into
iret
negl
dec
cltd
insb
outsb
fstl
mov
push
pop
inc
jg
mov
insl
mov
loop
outsb
repz
es
cmp
movsb
fwait
out
int3
pop
aad
add
inc
mov
mov
mov
jne
cltd
inc
mov
pushf
inc
in
mov
cmove
jg
les
cmpl
mov
mov
add
es
dec
xlat
enter
jle
iret
cs
stos
call
jbe
cmp
push
mov
cld
sub
lds
out
clc
pop
shl
pop
outsb
ret
push
mov
les
push
jp
pop
cltd
jb
mov
ret
int3
pop
insl
rclb
sub
mov
loopne
or
mov
lcall
inc
out
out
push
movsb
subb
rolb
cmp
popf
inc
push
lret
and
dec
mul
jmp
mov
incl
pop
sbb
push
sbb
dec
xchg
jnp
sbb
add
mov
ficomps
push
push
mov
ret
test
jl
or
mov
mov
and
mov
sti
mov
push
push
test
add
inc
aad
jno
jp
addl
je
push
jbe
aas
neg
mov
outsb
das
mov
mov
ja
mov
push
aam
pop
lcall
cmp
cmc
xor
fs
mov
clc
daa
je
lahf
jbe
roll
xchg
mov
push
pusha
sub
add
jl
cmp
out
test
inc
mov
ljmp
dec
xor
xor
cwtl
pop
out
mov
push
fldl
cmp
jecxz
iret
xchg
movsl
xor
and
pushf
mov
add
arpl
andl
scas
mov
push
xchg
fwait
pop
repnz
mov
mov
das
fildll
mov
adc
add
dec
jmp
mov
dec
push
push
fsubs
jne
fwait
mov
ss
movsl
sub
lahf
scas
adc
loopne
ret
and
stos
add
push
mov
shrb
dec
aam
push
xor
in
push
xchg
mov
subb
ss
movsb
test
lcall
sahf
jecxz
xchg
outsb
adc
sbb
pop
stos
iret
jbe
inc
pop
js
adc
mov
in
cmpsb
movsb
mov
pop
aam
sbb
and
orb
cmp
inc
int
xor
add
notb
stos
push
out
xchg
pusha
cmpsb
test
push
mov
cmp
daa
scas
cmpsl
in
cmc
sbb
es
imul
aaa
mov
in
xchg
test
add
pop
fdivr
shll
es
sahf
test
lcall
sahf
sbbl
fadds
sahf
sbbb
jo
mov
dec
in
insb
addl
sti
les
add
sub
loope
insb
dec
hlt
cmp
add
pop
or
bound
xlat
pop
std
subl
mov
dec
fistl
add
add
out
cltd
dec
sub
popf
test
xlat
enter
xor
out
push
movsb
or
cmp
jb
push
sub
lcall
sub
jno
outsl
pop
movsl
inc
push
inc
or
in
pop
jbe
andb
jae
rcll
sbb
pop
xchg
fcmove
lret
mov
lods
push
and
mov
mov
outsl
dec
lds
stos
bound
mov
pop
pop
add
or
mov
jl
ficomps
dec
outsl
inc
mov
sbb
sub
popf
sbb
sub
cmp
xchg
xor
mov
cltd
mov
out
loope
xor
into
lret
int
test
mov
out
or
pop
neg
addb
jns
push
js
adc
inc
ficoml
aad
adc
filds
out
xchg
sbb
in
popw
adc
adc
imul
push
movsb
stc
mov
cmc
push
or
int
cmpsl
in
orl
int3
test
pop
in
push
and
les
aam
pop
pushf
leave
mov
out
aaa
push
rolb
lock
test
fs
adc
fcomp
outsl
addb
cs
xchg
inc
mov
xchg
into
in
push
cmp
pop
fistpll
ret
cmp
sti
test
or
dec
mov
fwait
call
lcall
fisubrs
shll
cwtl
lock
sbb
xchg
outsl
jns
aam
pop
push
out
loop
adc
in
lret
sti
push
pop
mov
fnstsw
jg
sbb
jge
int
xchg
xchg
xchg
inc
inc
aam
decb
xchg
dec
push
decb
mov
sarb
hlt
in
jno
movsb
mov
push
xor
insl
mov
xor
add
mov
or
inc
hlt
sbb
mov
pusha
inc
xchg
sbb
ficoml
hlt
adc
testl
mov
pushf
mov
cmp
jb
daa
and
scas
es
stc
sub
mov
sub
loope
sarb
in
pushf
mov
fistl
mov
and
cltd
mov
fisttpl
inc
pop
jmp
push
arpl
lret
lods
out
mov
fidivrl
pop
cltd
jbe
sbb
pop
int3
pop
lods
and
not
fdivs
out
push
pop
mov
aad
movsl
je
test
and
dec
push
das
sub
and
orl
dec
or
inc
mov
repz
or
xlat
mov
sti
mov
ret
lea
jmp
sbb
push
add
inc
adc
in
aad
ljmp
outsb
or
mov
jno
add
jg
mov
lret
mov
fcomps
andb
sub
inc
mov
cmp
and
leave
dec
scas
mov
lahf
gs
mov
or
fadd
xchg
inc
nop
in
sti
popa
mov
out
add
stos
sbb
xchg
mov
push
xor
mov
xor
and
das
insb
aam
and
shrb
push
add
ret
imul
test
shrb
jmp
loope
aaa
ret
and
add
rcrb
pushf
shlb
push
out
xor
jnp
pushf
and
cmp
mov
dec
jp
add
cs
stc
in
int
cmpsl
fnstenv
imul
leave
repz
cmpsb
out
pop
xor
mov
and
jmp
mov
fsubl
sbb
aaa
and
lock
into
jmp
add
shll
int3
inc
push
xchg
mov
scas
cmpsl
imul
loopne
pop
push
pusha
fwait
xchg
mov
stc
or
sub
sarl
add
mov
ja
xchg
add
fdivrs
popa
inc
fwait
scas
dec
lds
inc
aaa
sbb
popa
test
cltd
jno
xchg
mov
fisttpll
ss
push
xor
clc
icebp
sbb
aaa
pop
and
mov
inc
xor
cmp
push
aam
out
outsb
mov
cs
add
mov
std
jnp
stos
or
and
or
cmpsb
mov
lret
neg
sub
jae
inc
sbb
jge
outsb
jmp
mov
sub
pmaddwd
and
mov
arpl
stos
mov
lret
inc
pop
xor
xlat
out
dec
mov
push
push
sbb
add
js
lcall
or
sbb
adc
mov
movsl
into
stc
or
gs
push
imul
incb
cmpl
pop
cmpsb
mov
jns
mov
shlb
cmp
sub
mov
mov
jecxz
popf
push
in
cmp
xor
stc
inc
cmp
test
btr
out
pop
jo
push
outsb
mov
sbb
cmp
mov
fmuls
xchg
or
xor
sbb
cmp
imul
addr16
sub
test
outsb
inc
add
lds
in
adc
into
and
out
jns
mov
subl
push
push
and
fimull
push
sti
jmp
lret
add
loope
mov
outsb
or
add
or
sbb
test
jns
imul
ja
jb
fcompl
aad
jns
lahf
pushf
add
mov
fldcw
cmp
repnz
jecxz,pt
adc
xlat
dec
data16
rorl
sub
pop
mov
lahf
aad
inc
nop
repz
mov
push
mov
xchg
iret
roll
test
dec
cmp
sub
mov
jno,pt
dec
mulb
mov
ret
divb
movsb
push
sub
and
and
push
dec
dec
sti
adc
mov
inc
movsb
mov
cmp
in
lahf
sahf
jo
sbb
mov
pop
sub
gs
je
dec
cmc
add
cmp
fidivs
lret
pop
push
rolb
int
loop
jg
cmp
pop
push
cltd
movsb
inc
jns
divb
ds
mov
and
ud1
pop
daa
jno
mov
lret
jecxz
jecxz
pop
sub
outsb
repz
xor
lret
popf
sbb
repnz
sub
lahf
pop
dec
push
push
xor
or
dec
ljmp
clc
subb
cmc
mov
pop
jae
inc
add
in
ret
inc
insb
subl
inc
fucomp
inc
mov
push
fsubrs
and
icebp
out
ss
popf
arpl
stos
jmp
cmp
push
push
pusha
pop
shl
jno
cmp
lods
outsl
jp
jno
sbb
or
push
sbbb
add
and
idivl
cmpb
test
subl
jl
daa
les
loop
cmp
dec
mov
cmpsb
mov
xchg
mov
rolb
mov
ret
and
jl
mov
in
xchg
test
inc
mov
inc
sub
xor
and
or
les
orl
sbb
xor
xchg
pop
dec
pushw
out
aad
inc
sbb
xchg
jb
pop
arpl
cld
xor
adc
push
push
inc
sbb
enter
xor
inc
pusha
call
or
pop
stc
sbb
mov
mov
mov
cli
sub
iret
bnd
push
push
sahf
dec
cmpsb
sbb
mov
dec
je
into
xchg
push
mov
xchg
shlb
xor
and
pop
dec
lret
fisttpll
push
rcll
jns
xor
sbb
mov
adc
or
cmc
jae
xchg
ds
decb
pop
imul
cmp
lods
push
and
scas
aas
movntps
stc
inc
mov
dec
mov
mov
pop
dec
icebp
cmp
dec
pop
cmp
divl
cmp
pusha
pushf
push
iret
bnd
sarb
xor
push
fstp
cmp
shlb
cmpsb
xchg
sub
in
xor
aad
in
jb
in
fcompl
jb
in
mov
fcmovb
icebp
cwtl
or
gs
dec
ljmp
shr
das
push
mov
push
add
imul
addr16
cs
lcall
bound
fwait
sbb
cld
into
into
vcvttpd2dq
inc
and
loopne
stos
push
mov
repz
sbb
fs
or
push
push
dec
clc
inc
push
jmp
in
sub
jbe
cwtl
rcrl
daa
sub
mov
and
pop
jge
push
shl
mov
sbb
js
mov
je
xlat
mov
cmp
xorl
das
xor
mov
cmp
push
mov
in
hlt
mov
xchg
jb
mov
inc
inc
dec
inc
in
mov
out
inc
rcrl
mov
mov
jle,pn
fsubr
addl
into
jno
jno
in
mov
inc
push
into
stos
jns
fildll
out
insl
in
dec
int
test
lcall
sbb
cmc
arpl
xchg
dec
or
push
jb
data16
push
add
pop
cmp
or
xchg
popa
xchg
loope
inc
mov
lock
dec
dec
testl
jp
or
cmp
loope
dec
fadds
mov
into
fs
and
test
push
int
jnp
push
jl
test
lods
outsl
xor
frstor
out
rcll
pop
lcall
rol
adc
repz
pop
inc
lea
xchg
movlps
and
xchg
lret
rolb
mov
leave
mov
dec
mov
adc
fnsave
divl
dec
xchg
pop
mov
imul
pop
icebp
mov
icebp
fmuls
mov
cmc
xor
bnd
push
jge
fwait
insl
scas
mov
outsb
adc
out
xor
pop
sub
lahf
xlat
xchg
xor
test
into
jbe
loopne
push
bound
pop
pop
push
insb
cmp
cmp
xlat
loope
sub
fiaddl
xor
and
and
add
add
test
lret
ret
outsb
xchg
pop
and
popw
jnp
pop
mov
in
xor
ds
mov
pop
xchg
jmp
mov
adc
outsl
jmp
add
push
ret
mov
bound
outsb
mov
fimull
dec
inc
jns
mov
cltd
push
repnz
mov
xor
sti
ret
outsb
push
jl
dec
mov
cmp
fcomps
lds
mov
jmp
mov
and
repz
in
xchg
aam
rolb
into
push
scas
jl
sbbl
aas
push
loopne
or
push
lret
cmp
sti
stc
es
sub
inc
and
sahf
popa
jmp
jl
mov
sub
fsubrs
es
dec
push
pop
mov
push
cli
sbb
fwait
jb
nop
fs
jle
jp
push
sbb
inc
ljmp
xor
sub
pop
sub
xlat
popw
std
jnp
scas
test
push
mov
dec
shll
fistl
andb
jg
push
jmp
and
bound
jns
imul
repz
add
ja
out
mov
daa
cmp
hlt
sub
and
push
fwait
int3
push
repnz
mov
iret
imulb
sub
mov
or
mov
loope
loope
push
sbb
add
jb
or
outsl
sahf
dec
out
cmpsl
jl
push
inc
mov
push
inc
sbb
sti
dec
pop
cmp
mov
out
xor
mov
jnp
lret
lods
es
fldl
stc
lcall
jge
inc
jns
movl
imul
dec
push
mov
xor
and
xlat
cs
mov
mov
add
data16
out
jecxz
repz
mov
test
les
add
movsl
fstpt
mov
dec
push
cmc
cmpb
lods
jle
jo
and
fs
jns
inc
fadd
pop
jb
and
stos
xchg
dec
out
mov
movsb
leave
pusha
mov
sub
sbb
fidivrl
xchg
lds
mov
sar
stos
mov
mov
xchg
dec
lods
hlt
xor
pop
popa
or
pusha
and
iret
inc
lds
jge
das
inc
mov
stos
pop
leave
movsl
ret
test
push
and
adc
les
imul
jnp
popf
and
out
jo
les
stos
lock
ret
cltd
pushf
bound
or
jecxz
sub
push
jp
pop
ja
aam
push
jno
das
or
out
cmp
into
xlat
cli
mov
mov
in
rorl
push
mov
sub
inc
lods
jae
aaa
shl
leave
sbb
inc
cmp
xor
mov
mov
inc
mov
sbb
fisubs
nop
and
inc
sub
or
ljmp
mov
movsb
jmp
out
loope
add
insb
sub
std
jmp
mov
nop
pop
xchg
stos
dec
fwait
inc
adc
ss
lea
push
mov
adc
xchg
loop
adc
mov
repz
daa
fsubs
pop
lahf
or
leave
cmp
divb
mov
cltd
sub
mov
pushf
jae
fstpt
bound
aam
js
pushl
outsb
pushw
push
pop
ret
pop
adcl
xor
or
stos
xchg
bound
push
gs
cld
or
adc
shll
cmp
jne
imul
sub
push
inc
and
sub
inc
push
xchg
cltd
outsl
shr
mov
imulb
add
xchg
inc
daa
mov
fs
xor
or
divl
aad
push
mov
leave
shrb
lcall
add
movsl
push
push
in
in
movsb
push
and
mov
push
and
xchg
sbb
cmpsl
pop
push
ds
jnp
jg
adc
cmp
push
sub
int
sbb
loop
adc
cld
add
jne
dec
lahf
out
in
and
das
or
repnz
dec
stc
xor
scas
dec
roll
or
popa
add
pop
mov
repnz
xchg
out
mov
mov
mov
rclb
jmp
push
addr16
inc
or
dec
clc
add
adc
shrb
xchg
sub
adc
push
lods
or
pop
xchg
or
jno
push
ds
cmp
cmovg
jne
pop
lock
dec
das
add
ret
xor
add
roll
xor
cmp
lcall
pop
jbe
test
push
enter
push
cmp
push
stos
or
mov
aaa
mov
int
add
daa
xor
push
sub
jg
insl
sbb
add
aad
imul
mov
xor
or
js,pn
or
add
hlt
add
mov
gs
sahf
or
dec
or
push
cwtl
jae
iret
and
mov
jge
loop
push
repz
lret
daa
les
ljmp
push
adc
add
hlt
push
stos
push
dec
rcrb
fbstp
push
rorl
into
leave
jmp
pop
jb
loop
adc
pop
add
push
inc
xchg
lret
or
xchg
cmp
jnp
jo
mov
xchg
xor
test
test
pop
pop
jno
mov
or
inc
xchg
add
pop
lea
jnp
mov
mov
jmp
stos
pop
addr16
out
mov
arpl
bound
ret
and
lds
mov
xchg
dec
outsl
sbb
ja
nop
lods
dec
addr16
adc
adc
push
imul
mov
dec
jnp,pn
dec
xor
jecxz
mov
aad
loopne
nop
mov
test
fimuls
add
aas
bound
fs
fdivr
ljmp
push
and
out
and
mov
scas
pop
and
ss
and
push
lret
subb
sub
add
xor
cmp
cmc
dec
sbb
stos
lahf
ret
sub
fwait
lock
ljmp
pushf
orl
xacquire
std
inc
mov
push
dec
jmp
cltd
add
aaa
inc
bound
and
lahf
jb
push
data16
cld
mov
out
push
add
popf
sub
mov
out
pop
adc
inc
pusha
roll
pop
sub
cli
cmp
sti
pop
mov
scas
xchg
repz
xor
or
lods
adc
push
sub
test
sbb
jno
fimuls
sub
outsl
into
in
xchg
popa
sbbl
xchg
int
test
xor
lds
stos
jbe
jp
pushf
aam
jecxz
cwtl
xchg
dec
xchg
cmp
aaa
aad
fisttpl
and
js
jecxz
movsl
rcr
xor
adc
int3
mov
mov
mov
xlat
ds
jns
cltd
dec
push
frstor
mov
ja
xor
int3
cltd
xlat
andb
ret
sub
dec
icebp
inc
out
test
lds
mov
test
mov
xor
call
scas
mov
xchg
push
cmp
sub
lods
xor
ret
mov
or
out
dec
incb
subb
ret
dec
push
cld
mov
push
pusha
sbb
and
je
dec
outsb
add
push
test
das
mov
mov
adc
das
adc
fdivrl
mov
cmp
cmp
pusha
dec
inc
xchg
xchg
je
dec
enter
xchg
ja
jge
ret
movsl
aas
mov
sub
pop
push
cld
push
hlt
outsb
xchg
scas
push
push
inc
mov
inc
jp
repz
jbe
mov
iret
jno
aam
push
call
fildl
pop
sbb
push
cmp
es
mov
rorb
pop
in
push
jnp
shlb
sub
popa
std
fcomi
mov
test
inc
mov
pop
stos
mov
fwait
lret
nop
pop
cmp
xchg
pop
add
in
bound
adc
data16
pop
adc
jnp
int3
arpl
mov
fwait
mov
jl
andb
loope
movsb
push
rorb
jge
enter
addr16
mov
enter
xor
aam
mov
jp
xchg
push
jmp
push
mov
daa
mov
bound
mov
jne
xor
sarb
jg
mov
inc
scas
cmp
mov
pop
xlat
push
xchg
repz
out
ss
adcl
mov
inc
jno
add
mov
push
add
xor
and
jnp
mov
pop
pop
xchg
xchg
mov
push
scas
xchg
idiv
fchs
dec
lods
adc
xchg
mov
test
mov
daa
mov
mov
lret
mov
sbb
push
dec
loopne
sub
aas
fs
mov
loopne
xor
and
adc
daa
inc
mov
insb
inc
and
jb
inc
dec
fidivs
mov
push
js
mov
out
ret
sbb
test
xchg
call
cmpl
adc
js
jmp
xchg
daa
xchg
gs
sarb
mov
fldl
addr16
insl
aam
insb
mov
pop
mov
jo
int
repnz
pop
std
pop
cmp
scas
pop
pop
xchg
xchg
jl
fwait
inc
jecxz
cmp
sti
repz
or
data16
sub
sbb
icebp
insb
xchg
lods
or
jbe
sbb
sub
cli
mov
dec
je
push
cmp
push
add
xlat
stos
and
pop
dec
mov
mov
sbb
loopne
jbe
bound
push
xchg
outsl
hlt
addr16
cmp
xor
dec
roll
inc
push
add
and
xlat
or
fsubrl
lret
cmpxchg
bnd
ljmp
fsubl
icebp
jmp
xor
sbb
mov
xchg
fists
leave
push
pop
jge
pop
cld
loopne
push
xchg
dec
and
out
mov
mov
stc
arpl
xlat
adc
test
cmpsl
pop
adc
in
adc
in
adc
mov
add
lds
dec
lea
inc
pop
adc
cs
dec
popa
test
or
sti
sbb
fsubrs
mov
xorb
neg
push
rcl
cli
movsb
pusha
arpl
mov
mov
lods
rcr
repnz
lods
out
aaa
cs
frstor
setg
addb
jg
lret
xchg
cmp
outsb
std
xor
mov
nop
add
or
popf
loopne
in
icebp
lods
mov
adc
fwait
dec
and
fldenv
sbb
jp
sub
adc
notl
int3
mov
cld
xorl
lret
lods
mov
mov
ljmp
into
dec
mov
add
dec
hlt
adc
push
out
mov
cltd
pop
jg
or
imul
adc
stos
inc
notl
pop
inc
cmp
jns
loopne
push
mov
jg
xor
mov
les
pop
dec
arpl
push
sub
adc
push
mov
mov
add
mov
insl
xor
notl
mov
pusha
cltd
movsb
lods
and
mov
jp
adc
movsb
sbbl
lds
xor
jecxz
fbstp
cmp
loope
nop
cmpsl
xorw
insb
pop
aas
mov
insl
popf
es
cmp
xchg
test
or
dec
mov
and
jp
sti
push
mov
insl
push
mov
inc
mov
mov
repnz
cmp
dec
fsqrt
test
out
pop
mov
mov
jno
cli
andb
idiv
jle
dec
pushf
xor
aaa
ljmp
in
pushf
std
imull
xor
imul
mov
jle
pusha
cmp
aam
dec
jge
or
test
sbb
test
ljmp
clc
cli
dec
push
les
fldcw
cmp
addr16
xchg
add
stos
xchg
mov
adc
sbb
sub
mov
push
sbb
pop
pop
test
call
add
mov
stos
cs
jmp
pop
mov
mov
dec
jge
lahf
testl
mov
mov
mov
movb
jb
int3
shll
add
pop
cmp
add
dec
or
or
clc
jns
mov
jno
jo
in
add
arpl
sub
or
ror
out
mov
lcall
fmull
pop
into
lcall
popf
sub
mov
inc
in
fnsave
imul
insl
std
int
leave
cmp
or
stc
int3
in
notl
stos
sbb
inc
lds
sbb
xchg
cs
bound
and
push
jne
shr
stc
int
insb
aad
push
mov
sub
into
cs
rol
fiadds
pop
aad
and
mov
cmpsl
inc
iret
mov
jg
dec
sub
cmp
and
sub
xor
gs
adc
jle
adc
mov
mov
dec
xchg
or
ja
cltd
shll
addr16
outsb
gs
movsl
rcrb
frstor
cmp
int3
into
xchg
push
cmp
xchg
iret
inc
xchg
mov
jmp
or
and
or
jle
jecxz
fldenv
sbb
and
xor
adc
cmp
loop
mov
jo
or
daa
lea
xlat
jbe
mov
loopne
in
jns
pusha
dec
es
or
sub
and
add
xchg
fildll
repnz
pop
sub
pop
inc
mov
sbb
and
movsb
mov
sub
cltd
mov
test
call
or
mov
inc
into
imul
xchg
aam
test
sbb
call
setno
or
xor
loope
shl
fdivrs
or
xchg
lods
cwtl
lcall
sbb
cmp
cmp
xchg
rclb
ret
iret
push
sub
clc
cs
mov
repnz
es
add
out
adc
xchg
adc
inc
mov
push
jo
int3
movsb
sub
out
mov
inc
fwait
jbe
insb
rcrl
adc
das
pop
dec
stc
pop
insb
mov
sub
mov
icebp
mov
daa
sbbb
and
jo
imul
xchg
std
es
lods
insb
scas
outsb
loop
dec
and
mov
cli
xchg
dec
or
jge
sub
and
add
or
pusha
pop
inc
pusha
mov
cmp
pop
fdivr
lret
xorb
or
iret
inc
enter
aam
push
lahf
bound
repz
leave
jbe
into
pop
add
push
xor
call
add
das
mov
mov
out
int3
mov
or
call
inc
push
mov
pop
incl
outsl
out
mov
mov
sub
pop
mov
adc
mov
lock
jmp
push
out
mov
push
pusha
movsl
push
leave
dec
nop
loope
aas
adc
aaa
mov
inc
jns
xor
flds
add
rcrl
mov
sbb
mov
xchg
sbb
inc
push
cmp
jmp
cmp
mov
fs
rclb
lods
pop
mov
in
clc
or
je
andl
int
push
cmovg
xchg
push
mov
mov
pop
cmpsl
in
icebp
lock
push
sub
mov
push
xor
aad
push
xorb
pusha
inc
cmpsb
in
xchg
mov
push
jg
ror
pop
xchg
jg
mov
popf
pop
sti
jmp
imul
mov
test
dec
mov
lret
in
and
pop
xor
xchg
lahf
dec
leave
call
adc
dec
pop
pop
daa
jo
pop
pop
call
scas
push
add
lock
adc
jp
jecxz
ds
add
sti
mov
sbb
hlt
add
mov
pop
popa
in
sbb
pop
ret
jno
push
jmp
fld
mov
mov
push
shrb
add
xchg
lea
test
in
gs
and
je
scas
lods
mov
jns
repz
clc
xchg
xlat
out
mov
es
fcoms
mov
adc
pop
cli
je
pop
add
push
add
fmull
in
lods
fcmovne
dec
shll
push
ficoms
xor
jge
shll
mov
xchg
sbb
sub
stc
test
mov
xor
cli
dec
and
mov
pop
loop
jmp
lcallw
pop
nop
loope
mov
push
xchg
jg
lods
sub
cmp
hlt
adc
dec
fs
add
iret
jecxz
and
aam
add
sub
cmp
jae
jno
jne
sub
mov
gs
push
insl
and
insl
fcoml
or
les
fistpll
in
fwait
pop
or
mul
enter
xor
pop
push
pop
stc
je
xchg
jns
sahf
xor
pop
add
ret
cmc
sub
push
push
sub
inc
dec
sarb
sub
popf
push
cmp
fcomps
sbb
xchg
adc
test
stos
mov
sbb
cli
ljmp
jp
inc
push
xlat
pop
jnp
cltd
in
xchg
lods
clc
loopne
add
jle
lret
int3
mov
add
xor
mov
stos
fistpl
mov
push
inc
xchg
jmp
scas
cs
lahf
push
out
add
insl
imul
xor
xlat
jb
inc
shll
addl
out
stos
into
cmp
sbb
adc
pop
mov
pop
xor
dec
sub
in
pop
stc
jbe
movsl
add
in
fiaddl
pop
jl,pt
pop
jmp
cld
push
sub
sti
lret
xor
loopne
daa
mov
aas
test
mov
adc
divb
jae
andb
cmpsl
hlt
mov
jnp
push
ljmp
adc
shll
dec
xor
adc
sbb
inc
rcl
scas
mov
sub
fisubrl
outsl
xchg
in
adc
mov
in
daa
popa
push
lds
lds
adc
shll
addr16
sbb
xchg
adc
imul
enter
xor
das
test
lods
cmp
cmp
pop
sbb
test
sahf
imul
std
imul
dec
mov
mov
push
mov
inc
sar
add
mov
scas
outsb
int3
cmp
or
cltd
or
push
sbb
pushf
test
push
cmp
mov
popf
dec
aaa
stc
xlat
mov
mov
jne
dec
les
and
sbb
push
pop
push
rorl
push
xchg
mov
push
popf
cmp
mov
or
mov
std
push
notb
test
imul
dec
fimuls
je
xchg
fsubl
icebp
aam
test
pop
cmp
sbb
jle
adc
cmp
js
test
movsb
iret
movsb
add
ss
xchg
inc
out
push
insb
ss
xor
sbb
mov
and
es
adc
jo
push
mov
inc
daa
xor
ds
in
das
push
add
xchg
popf
add
fs
iret
scas
into
pop
iret
std
pushf
repz
stos
mov
xor
pop
pop
lock
pop
sub
add
dec
clc
inc
push
mull
out
jnp
dec
sbb
mov
xor
pop
pushf
out
dec
and
ret
pop
cmp
setle
inc
jnp
outsl
sbb
mov
ss
lcall
inc
push
xchg
aam
dec
xor
daa
and
mov
call
pop
or
scas
inc
jp
mov
sub
ds
mov
add
aad
outsb
divl
lock
xchg
icebp
js
pop
repnz
mov
jb
add
push
les
outsl
add
fcmove
mov
adc
cs
jb
insl
lods
out
add
int
dec
and
in
cmp
movsl
xchg
xor
lret
push
mov
imul
in
mov
fstpt
fs
xchg
inc
push
xchg
lcall
push
cmp
or
xor
ljmp
pop
outsb
push
jmp
sub
cld
and
arpl
dec
cltd
inc
shll
imul
adc
push
xor
inc
add
aad
pop
out
dec
push
repnz
xor
jge
divl
leave
adc
loope
int3
test
sub
cmp
cmp
sbb
fwait
or
adc
dec
pusha
shrb
test
xor
cli
scas
push
cld
rolb
int3
xlat
pop
cmp
sbb
mov
sub
or
pop
sub
rorb
mov
add
ljmp
mov
out
xacquire
cltd
cmp
mov
and
jl
push
sbb
je
or
inc
jns
xchg
xchg
mov
divb
push
in
adc
flds
fldenv
testl
pop
fisubs
adc
push
mov
inc
enter
or
shl
ret
jo
int
repnz
mov
fists
lods
push
in
add
mov
sub
add
xor
mov
jns
jecxz
jmp
or
xor
lds
mov
out
add
jns
pop
fprem1
ret
aam
mov
lods
addl
out
jb
shl
xchg
jne
outsb
lcall
add
stos
lods
enter
in
pusha
and
ljmp
jb
xor
loopne
aas
std
push
adc
lcall
aad
mov
xchg
push
popf
mov
call
add
out
ret
sub
or
mov
imul
iret
jae
push
insl
and
mov
pop
push
push
sub
lods
push
xlat
sbb
das
cs
and
inc
lods
sub
psrlw
ljmp
mov
xchg
cmp
push
add
fdivrs
sar
fwait
xlat
sbb
xor
es
mov
cs
push
stos
xchg
clc
mov
ja
xchg
dec
pop
or
mov
icebp
std
xchg
mov
sub
lods
adc
or
pop
or
mov
jne
out
jae
lahf
jl
adc
daa
outsb
or
pushf
cmp
mov
mov
inc
jne
lds
fsubr
push
ja
adc
fsts
je
adc
or
jne
hlt
lret
loope
stc
insb
cltd
fcmove
ficoml
es
push
popf
mov
lods
dec
stc
cli
cmp
cmpsl
leave
into
pop
sub
inc
cltd
test
cmp
test
popf
inc
add
pop
test
insl
mov
jns
add
dec
push
mov
aam
clc
mov
pop
mov
cld
cld
jge
scas
jg
xor
sub
test
lods
jbe
push
pusha
icebp
mov
mov
stc
leave
xchg
loop
push
cwtl
push
lret
pop
sbb
adc
pop
in
or
loopne
imul
pop
fs
mov
jno
mov
pop
push
leave
sbb
cmc
mov
ljmp
xchg
add
push
mov
jno
cmc
or
stc
in
dec
mov
test
gs
mov
in
add
stos
das
adc
dec
mov
mov
adc
jns
jmp
dec
repnz
add
fs
aam
cmp
ret
push
sub
sbb
xchg
inc
mov
add
cmc
test
cmc
xchg
in
jg
scas
pusha
es
insb
push
stos
fistps
mov
jg
jmp
mov
push
imul
xor
pop
aaa
sub
xor
repz
call
icebp
pop
jge
mov
aaa
leave
or
mov
or
and
dec
add
mov
repnz
imul
lea
lret
and
mov
push
push
mov
std
push
mov
and
pop
mov
mov
adc
sub
dec
insb
jmp
roll
xor
jge
sub
pop
mov
add
lcall
cwtl
mov
addr16
mov
in
fs
xchg
das
inc
xor
lret
call
cs
adc
cmp
lahf
pop
pop
fidivrl
aam
cmp
insb
xor
xor
scas
push
mov
scas
jo
hlt
or
imull
insw
xlat
sahf
xchg
sub
add
in
mov
addr16
pop
jle
cs
sub
ficompl
cmp
adc
int3
push
test
mov
jl
dec
lret
pop
jl
push
or
cmpsb
notl
push
lock
push
shl
imul
fidivl
cmpsb
shlw
aad
dec
sub
rcr
and
cli
call
jmp
mov
and
xchg
cmp
mov
jg
mov
lods
nop
pop
cs
cld
inc
sub
repz
inc
jnp
jecxz
jno
aaa
stos
pop
cwtl
sbb
xor
inc
js
mov
bound
rorb
push
mov
lss
aaa
nop
xchg
shrl
jle
enter
mov
sti
test
cmp
fdivrs
test
out
and
push
insl
mov
sub
add
push
int
mov
mov
or
lcall
push
sub
inc
stos
movsb
jbe
clc
or
or
add
jg
and
int3
xchg
pusha
pop
mov
xchg
cmp
aas
sbb
popf
je
xor
imul
xchg
arpl
mov
inc
inc
iret
hlt
ja
jb
ret
mov
or
pop
test
inc
arpl
gs
fcomip
xchg
add
fisttpl
inc
lret
adc
push
cld
jne
cmp
rorl
cmc
adc
push
push
mov
call
pop
and
pushf
or
add
repz
in
xchg
pop
cmp
mov
mov
lahf
cmpsl
daa
ds
ss
jo
in
shl
int
outsl
sbbl
movsb
dec
outsl
mov
xlat
push
test
icebp
pop
lods
pop
aad
popa
jl
mov
cmc
mov
mov
jae
ss
mov
sbb
fists
sub
mov
mov
test
inc
lods
mov
in
jne
add
sahf
shll
adc
or
dec
std
mov
stc
arpl
and
pusha
sbb
cmpb
movb
jp
push
sbb
xor
mov
mov
fcmovnbe
inc
sbb
rcll
sub
inc
cmp
stos
test
xor
loopne
jle
mov
shlb
cmp
ss
imul
cmpsl
fstps
xchg
lods
mov
cmp
mov
nop
pop
cmp
mov
or
ret
clc
repz
fsubrl
int
xchg
inc
loopne
pusha
pusha
clc
cmpsb
and
add
ja
in
pusha
or
leave
testl
and
bound
xor
mov
pushl
inc
aaa
push
pop
and
mov
rclb
loopne
adc
xor
sti
pop
sbb
fbld
push
nop
sbb
dec
jnp
cld
mov
xor
adc
ftst
pop
mov
subl
xchg
inc
negb
sbb
pop
pop
roll
mov
inc
sbb
dec
lods
cmp
push
mov
fyl2xp1
cmp
std
filds
popf
add
xchg
outsl
loope
push
pop
into
push
rol
ss
jb
aaa
push
fldenv
ljmp
in
scas
in
aam
in
sub
pop
jl
jno
inc
mov
cmp
scas
sahf
mov
cwtl
add
jp
cmc
jg
cmp
sbb
pop
jo
mov
fmuls
lds
xchg
mov
cmp
sbb
jno
fmuls
cmp
push
adc
test
loope
mov
loopne
inc
in
push
neg
jle
sbb
add
mov
mov
pop
aaa
sbb
sarl
mov
dec
imul
notb
shlb
jmp
sub
mov
outsb
xorb
and
sbb
mov
push
pusha
aaa
mov
divb
sub
ljmp
sbb
inc
out
cwtl
popf
sub
insb
mov
fimull
lret
jns
daa
rcrl
xchg
or
in
rorb
xchg
sbb
stos
xchg
cmc
adc
rcll
pop
leave
mov
dec
rcrl
sbb
aad
dec
add
cmp
data16
stc
add
adc
call
xchg
test
push
std
jb
mov
mov
scas
je
push
mov
icebp
ffreep
call
into
cmp
out
fwait
shrb
pop
push
adc
icebp
clc
jne
push
roll
pop
stos
repnz
lea
insl
mov
and
pop
mov
mov
cmp
ja
aas
pop
or
inc
mov
sbb
leave
cli
jbe
mov
xchg
dec
inc
xchg
not
xchg
inc
and
pop
andl
repnz
sarb
daa
push
stc
push
loop
mov
and
jge
jecxz
and
leave
and
popf
xchg
pusha
enter
movsl
pusha
sbb
dec
pushf
push
and
pop
xlat
imul
in
add
cmp
pop
mov
popf
add
in
adc
mov
sbb
xor
mov
adcb
enter
scas
loope
movsb
pop
or
mov
aas
dec
lret
cltd
shll
js
add
pop
and
repz
mov
push
push
jge
popa
mov
lock
enter
pop
jne
inc
add
dec
push
and
pop
mov
jnp
cli
outsb
in
pop
mov
adc
add
es
xchg
outsl
pop
adc
cmp
push
push
imul
in
fnstenv
add
in
out
or
mov
movsb
cld
jns
cmpsb
mov
or
push
jnp
and
dec
cwtl
jne
jae
xlat
fnstcw
sub
sahf
dec
fstl
cmp
iret
inc
stos
mov
imul
pop
cmpsl
shrl
fisubs
pop
mov
sbb
rorb
jno
mov
xchg
in
fmulp
dec
xchg
jge
cmc
movsl
cmp
add
popf
mov
fisubrs
mov
std
shrb
ss
add
xchg
mov
mov
adc
aam
in
cmc
inc
push
out
rcrl
mov
sub
fstl
shrb
repnz
pushf
out
clc
inc
imul
shl
mull
jle
jae
in
scas
sbb
mov
mov
iret
lods
fwait
dec
sub
in
sub
push
lods
mov
lcall
or
lahf
xlat
and
mov
jmp
imul
js
loop
mov
mov
xor
fistl
sti
sbb
inc
insb
loope
mov
xchg
sub
popa
mov
jno
cmc
xchg
jae
cmp
or
xchg
shr
bnd
sub
inc
mov
pop
ljmp
cmp
or
fidivs
sbb
mov
stos
nop
hlt
push
cmp
fs
adcb
mov
mov
cmp
out
adc
gs
lahf
mov
push
pop
pushf
test
inc
lock
lock
in
cmp
ss
adc
cmp
mov
push
pop
into
jl
mov
inc
popa
movsb
jns
adc
or
mov
xchg
mov
pop
push
mov
cmp
fisubrl
jle
out
outsl
das
out
mov
and
cwtl
add
lods
nop
or
mov
and
fs
cltd
mov
sbb
je
inc
fsts
rorb
mov
pusha
lods
sub
popf
lea
sub
pop
sub
leave
fcmove
mov
or
dec
aas
jnp
jns
dec
lret
ds
fstps
inc
or
cmp
push
jle
mov
stos
dec
in
mov
bound
xchg
gs
pop
push
sub
js
test
inc
stos
and
adc
pop
jmp
mov
push
adcl
fisubrs
cmp
inc
jmp
sub
pop
xor
or
push
jb
lea
push
lock
bnd
iret
outsl
insb
or
mov
jmp
loope
mov
inc
sub
clc
mov
adc
sub
push
sub
jl
aas
pop
fsubrl
inc
inc
int
mov
int
add
mov
in
cmp
or
sti
popa
popf
bound
cs
or
cmc
mov
xchg
push
clc
insb
sub
enter
mov
ss
daa
xchg
and
sbb
aam
or
jle
jp
and
mov
jno
popf
adc
xor
test
mov
adc
mov
dec
scas
sbb
fwait
lret
sub
in
xlat
sbb
fildll
pop
in
daa
pop
sub
data16
lods
sbb
mov
insl
mov
outsl
push
sbb
fstps
xchg
fmuls
aas
xchg
pop
in
jge
inc
out
lcall
xchg
lea
push
xchg
cmc
insb
or
sub
and
int
sbb
fstps
es
shlb
ja
sti
or
and
add
add
fsubrp
imul
sbb
mov
pop
inc
cmpsl
aam
cmpsl
pop
push
mov
fwait
in
push
pop
imul
mov
nop
xchg
icebp
mov
pushf
cmp
mov
les
and
mov
push
jno
in
jns
notb
std
call
push
sub
mov
sub
xchg
xchg
bound
out
ds
lcall
outsb
es
nop
lret
das
mov
xor
fisubrs
mov
xchg
fs
adc
jge
sub
rcrl
add
adc
dec
ljmp
xchg
out
enter
and
adcl
arpl
pop
shlb
aam
inc
jle
int
iret
mov
add
lahf
fsts
pop
inc
push
loop
fwait
cmc
mov
imull
std
movsl
stc
repnz
cld
sar
shrl
enter
fisttpll
xchg
cmp
dec
adc
int3
xchg
outsl
cltd
cltd
jne
insb
dec
fs
loop
rol
sub
xor
push
jmp
adcl
or
cmpsl
stos
mov
mov
stos
xchg
dec
js
mov
cmpsb
jns
cmpsl
sub
fcomp
sbb
stos
scas
jg
addr16
jno
stos
inc
xchg
mov
and
aaa
sbb
daa
repnz
dec
xchg
and
xor
inc
iret
test
mov
or
mull
mov
add
mov
repnz
fldt
std
pop
stos
out
iret
sbb
xchg
add
jecxz
arpl
clc
and
popl
dec
xlat
xchg
dec
xchg
out
jl
xchg
push
jge
test
lds
adc
push
inc
xlat
pop
call
mov
sbb
push
xchg
sbb
hlt
and
scas
mov
pop
cmp
and
sub
and
in
in
or
ret
cmpsl
outsl
loope
xlat
aas
out
mov
jge
lret
inc
mov
mov
sub
jmp
add
xchg
insb
in
cmp
pop
call
xchg
in
loop
in
add
movsl
dec
push
or
ljmp
dec
xor
lret
mov
inc
pop
mov
cs
or
aaa
cltd
iret
xlat
xlat
xor
clc
stc
push
add
jg
adc
nop
in
push
lret
dec
mov
in
push
inc
or
lds
imul
jge
xor
sub
mov
or
popf
addr16
cmp
fidivs
and
popa
jae
faddl
jae
scas
aas
loopne
mov
sub
xor
lcall
mov
insl
sbb
std
jge
mov
daa
or
test
divl
xor
add
aas
stos
data16
fcomip
lods
das
xor
or
out
movsb
push
aas
sub
bound
fwait
sbb
dec
test
pop
dec
mov
jno
lds
push
insb
inc
mov
je
push
cmp
call
aad
shll
push
outsl
adc
loopne
and
xchg
test
mov
push
xchg
faddl
and
imul
jmp
sbb
add
pop
fcomps
in
gs
mov
sub
not
dec
cmc
mov
push
mov
es
popa
and
add
into
add
into
xor
inc
cmp
js
sbb
ds
out
lret
adc
push
add
cwtl
cmp
xor
ds
inc
inc
pop
dec
mov
mov
sbb
movsb
push
jo
aaa
into
lods
fwait
push
inc
jmp
stos
aad
jne
mov
xchg
adc
pop
dec
call
mov
xor
mov
test
out
add
fcomps
dec
iret
mov
mov
mov
push
pop
mov
inc
cwtl
and
add
and
xor
scas
jns
outsl
pop
add
sub
adc
sbb
jnp
into
jl
popf
jns
push
faddl
shlb
fnstcw
sti
outsl
sub
add
mov
mov
mov
popa
into
inc
pop
pop
ret
mov
repnz
jo
push
cmp
mov
inc
jge
hlt
jmp
lcall
out
xchg
hlt
test
sbb
lds
sahf
data16
out
aad
lret
jecxz
ret
clc
out
dec
gs
ljmp
mov
sub
ljmp
fiadds
sti
shlb
stos
ljmp
mov
push
out
jb
mov
and
ficomps
jp
or
sub
stos
pop
pusha
ds
sub
es
and
mov
roll
and
cld
mov
inc
or
movsb
stc
ja
in
aad
jmp
loope
popl
popa
mov
dec
insl
fldcw
push
lahf
iret
addb
test
xchg
test
jmp
xchg
xlat
sub
xor
pop
dec
jbe
jmp
shrl
call
fnsave
push
fnsave
dec
adc
push
push
repz
pop
insb
fidivrl
mov
add
cmc
cmp
mov
jmp
andb
in
sti
mov
je
aam
mov
push
mov
out
pusha
and
xor
push
mov
dec
dec
subl
loopne
in
xor
das
jne
cmp
int
enter
stc
xor
inc
mov
and
xchg
mov
stc
nop
cmp
sbb
push
ret
lea
fdivrl
lods
aam
xchg
movsl
fidivl
xchg
leave
mov
pop
fdivl
imul
mov
cmc
jno
cmpb
push
sbb
loop
movsb
dec
inc
jmp
das
repnz
js
lret
imul
pop
fwait
cmp
pop
sub
int
cltd
mov
xchg
xchg
negb
insl
jge
xchg
jbe
fists
daa
mov
arpl
fsubs
and
dec
rcrl
jne
data16
sbb
and
adc
popa
mov
mov
dec
cli
mov
xchg
dec
jo
xor
mov
sti
sbb
inc
dec
jecxz
sub
je
cmp
mov
in
cld
out
pop
clc
push
repz
mov
lahf
xchg
mov
cmp
arpl
lret
int3
bswap
js
dec
insb
pop
div
mov
mov
and
and
cmpsl
push
pop
xor
dec
dec
sub
iret
cmp
sub
push
rcr
jb
sub
addr16
mov
and
loop
outsb
sub
movsb
push
mov
fwait
imul
mov
mov
mov
adc
in
mov
popa
cmp
je
xor
inc
les
subb
out
outsl
dec
cmpsb
leave
faddl
fistps
cmp
add
fwait
aas
cmp
sub
dec
aas
in
ljmp
repnz
xor
add
sti
lret
sbb
lcall
push
mov
popf
adc
ret
mov
xor
movb
sbbb
hlt
and
repz
xchg
ret
dec
out
mov
mov
cmovns
mov
cltd
outsl
xor
or
aas
push
mov
mov
lcall
clc
inc
sbb
mov
or
xchg
lcall
addr16
lcall
push
xlat
repnz
outsb
and
xor
cmp
mov
push
daa
sub
sub
bound
int
add
pushf
retw
pusha
sub
lea
stos
inc
mov
leave
push
dec
aas
push
popf
int3
movsb
shrl
mov
or
or
ret
inc
cs
and
lds
leave
xlat
mov
mov
push
shlb
std
ficomps
lds
lea
shlb
int
movsl
popa
out
out
lods
aas
or
push
xchg
inc
test
lret
jle
xchg
daa
xchg
cli
mov
mov
mov
mov
movsb
ljmp
and
test
lock
add
xor
cmp
push
cld
xor
jl
adc
nop
scas
imull
push
ss
popa
jnp
pusha
adc
cld
add
inc
mov
dec
push
into
data16
jno
pop
icebp
stos
iret
sbb
lea
int3
add
gs
adc
cmp
push
dec
or
mov
mov
inc
aad
test
lahf
ror
push
xchg
dec
iret
outsl
and
rcl
pop
or
mov
inc
adc
lret
sbb
xor
loop
les
adc
mov
fistpl
push
xor
popf
xchg
and
and
mov
shlb
lods
sbb
scas
mov
xchg
push
dec
xchg
or
or
cmp
mov
in
pop
cwtl
aas
or
shlb
data16
cmpb
xor
cmpsb
iret
ret
cmp
adc
dec
stc
fs
lret
mov
scas
xchg
icebp
mov
les
sahf
fwait
hlt
bnd
fsubs
shlb
mov
xchg
jo
add
mov
test
pop
dec
add
inc
jno
xchg
sbb
imul
fdivrl
xchg
lret
or
aam
shlb
hlt
sub
addr16
call
rcrb
dec
cld
ja
jnp
pop
les
inc
fdivs
clc
cwtl
fisttps
xchg
leave
pop
loop
loope
ret
xor
stos
xor
xor
sbb
pop
and
mov
movsb
out
cltd
pop
pop
inc
sbb
mov
fs
insb
andb
sub
push
mov
jmp
loope
push
imul
jmp
inc
fcomps
jmp
rol
mov
fildll
adc
popa
pusha
movsl
hlt
xor
sarb
stos
pusha
mov
mov
cld
mov
inc
pop
sub
sti
xchg
sahf
adc
xor
mov
lahf
push
iret
daa
pusha
push
call
enter
mov
dec
xchg
std
dec
rorl
dec
rorb
into
mov
pop
test
cmpb
lret
fidivrs
lret
mov
repnz
faddl
mov
test
push
clc
jg
call
and
inc
pop
inc
add
lds
jg
cmp
sub
fildl
and
mov
out
jnp
pop
cmp
shll
fdivr
mov
scas
lret
add
ficompl
sbb
popfw
jp
movb
push
ficoml
scas
ret
jp
scas
cmpsb
lret
aas
clc
adc
filds
xchg
mov
stos
xchg
sub
xchg
outsl
data16
add
shll
addr16
inc
hlt
pop
cwtl
ja
lds
pop
sub
sub
mov
jp
or
and
xchg
jg
inc
add
jg
push
xchg
and
pop
cmp
cmp
adc
cmp
int3
mov
pop
xchg
bound
fwait
rcrb
test
mov
push
xor
rcrl
pop
jae
data16
loopne
das
repnz
frstor
mov
movsb
out
push
or
ret
popa
shl
bound
adc
push
out
xchg
enter
sub
xor
mov
sub
cmp
push
fs
shl
scas
fildll
clc
addr16
pop
cmpsb
xchg
dec
clc
add
sbb
mov
dec
mov
xor
pop
fldenv
xor
lret
sti
mov
aam
mov
jbe
out
movsb
ficoml
les
inc
bnd
xchg
mov
int
inc
fwait
test
inc
push
std
adc
xchg
dec
sti
fimull
dec
call
sbb
stos
xchg
lret
subl
jae
jecxz
or
dec
mov
loope
cltd
mov
ret
push
or
mov
std
mov
mov
xchg
pop
pusha
push
sub
and
push
xchg
fisttpl
decl
mov
xlat
out
xchg
add
popa
loope
push
xor
push
ficomps
inc
negl
or
mov
and
push
arpl
cmp
sbb
out
in
xchg
aas
adc
test
xchg
mov
lea
cmpsb
lahf
movsl
mov
loop
mov
ret
frstor
rcrl
adc
mov
sub
cmp
xchg
xor
sub
cmp
jbe
xchg
mov
nop
adc
add
push
and
xchg
pop
mov
adc
popa
fsubl
mov
inc
out
or
inc
dec
cmp
out
sbb
lcall
test
andl
jbe
sbb
test
mov
rcrl
sub
cmp
xor
push
je
lock
and
adc
pop
popa
pop
loop
test
outsb
notb
xchg
fs
or
stos
aas
stos
test
cli
stos
mov
push
lret
cmp
add
insb
les
arpl
shlb
and
push
out
cmpsl
sbb
mov
stos
jne
push
add
fmuls
mov
in
mov
call
inc
xor
sbb
mov
sub
pop
push
imul
xlat
nop
lock
sub
out
jo
fwait
cwtl
mov
sbb
movsb
add
push
cwtl
aad
jmp
cmp
push
popa
cmc
jecxz
aas
xchg
or
mov
test
dec
add
fistps
sub
test
cltd
jmp
dec
loopne
xchg
pop
je
add
es
xchg
dec
mov
nop
sub
jmp
sbb
add
inc
cmp
adc
jmp
dec
sbb
insb
adc
popa
jae
setnp
lret
sub
push
sub
lahf
lahf
pusha
pop
mov
inc
pop
jecxz
sbb
push
cmp
mov
icebp
jge
aam
mov
jbe
or
mov
sbb
out
scas
ljmp
cmpsb
cmp
mov
and
jne
or
inc
repz
movsb
mov
push
bound
roll
mov
aad
pop
fwait
jmp
pushf
push
mov
jo
push
xorl
outsb
ljmp
mov
push
pop
jb
out
cmp
cmp
add
mov
std
inc
lcall
stos
jle
test
insl
mov
xor
cld
xor
roll
mov
push
cltd
pop
lahf
pop
cmc
lcall
iret
or
hlt
lahf
or
insl
jp
test
xchg
cmc
xchg
sub
mov
ret
in
aaa
ret
pop
mov
cmp
fldt
push
lea
cmp
sbb
insl
std
jg
mov
out
cmpsl
sub
stc
adc
lods
movsl
negl
and
fs
sub
cmp
push
and
xor
inc
incl
xor
mov
mov
sahf
pushf
ljmp
fst
dec
and
or
sub
xor
cmpl
lods
and
sahf
cwtl
test
test
xchg
cmc
sbb
sub
bswap
dec
shll
cwtl
iret
mov
adc
rol
imul
push
call
sbb
addr16
imul
or
xor
je
shll
rcll
xchg
nop
push
outsb
xchg
and
rorl
scas
stos
adcb
rorl
xor
testl
inc
dec
loop
fmull
dec
sub
adc
inc
pop
fdivp
or
jmp
dec
push
loopw
xor
ds
inc
xchg
in
mov
push
mov
ja
out
inc
mov
fdivs
in
pop
test
incl
sbb
fisttpll
les
and
cmc
mov
lea
inc
push
lcall
popf
dec
out
imul
dec
sti
add
mov
jb
pushf
push
add
js
or
into
jbe
pop
scas
cmc
rol
repz
sub
ljmp
subb
xor
es
loop
jecxz
cli
or
movsb
scas
cmp
and
stc
repz
xchg
icebp
jo
repnz
vmulss
sub
mov
jl
inc
orl
xor
std
xchg
leave
mov
xor
xchg
inc
addr16
mov
lcall
stos
in
add
add
xor
jb
rcll
fwait
std
dec
shlb
lahf
mov
ss
jp
das
pop
adc
in
inc
addr16
leave
int3
or
mov
pusha
dec
dec
ret
decb
mov
mov
xorl
pushf
repnz
sbb
jae
pushf
sbb
sub
adc
sbb
lret
xor
rolb
rclb
cwtl
pushf
push
jo
pop
jbe
pop
push
imul
mov
xchg
push
ljmp
add
jns
js
push
gs
js
xor
and
push
mov
hlt
mov
data16
lods
out
sbb
inc
add
and
out
pop
sbbl
jne
loopne
mov
mov
out
cmpb
lahf
ljmp
mov
mov
popl
lock
bound
mov
jg
cwtl
pop
mov
das
cmp
insb
outsb
clc
aad
add
pop
shll
inc
rcrb
sahf
cmpsb
sarb
lret
lcall
or
xor
jae
js
js
out
sub
jl
out
mov
test
and
ja
push
cmpsb
lock
push
mov
dec
outsl
xor
jne
mov
jns
orl
sbb
cmp
inc
mov
cmp
push
out
push
mov
arpl
ret
mov
jp
sbbb
sub
int3
movsb
test
or
fwait
rclb
fs
jle
test
cmpsb
popa
add
bound
lea
push
adc
cwtl
ficompl
dec
cmp
mov
xchg
cmpsb
mov
fistpl
das
cli
sbb
imul
out
dec
cltd
sti
mov
or
aas
jae
inc
out
into
add
ljmp
xchg
sbb
mov
roll
fwait
je
xchg
xchg
push
xchg
cs
loope
ficompl
repnz
clc
popf
adc
repnz
xor
pop
cltd
enter
out
push
inc
out
mov
es
push
fwait
add
fs
pop
xchg
rorb
test
adc
inc
inc
loopne
mov
cltd
jo
xchg
push
iret
add
mov
out
sbb
cmp
or
rolb
lds
mov
jo
and
sbb
sbb
popf
fiadds
and
or
pop
dec
je
pop
int
sahf
test
jae
mov
pop
mov
test
out
add
jmp
sbb
test
dec
or
pop
fists
sub
movsl
cwtl
repnz
push
and
out
mulb
xchg
dec
addb
push
push
test
inc
xor
mov
mov
scas
jecxz
lea
xlat
pop
xor
rcll
stc
ds
add
sbb
ljmp
out
mov
aad
negb
mov
mov
adc
ret
sbb
das
pop
fcompl
and
xchg
sar
xchg
mov
scas
inc
fs
es
ljmp
stos
mov
cmp
or
jmp
mov
cmp
sbb
popf
fisttps
add
loope
jno
adc
mov
test
mov
jg
jno
das
sub
jp
xchg
lret
decb
and
push
lret
loop
into
mov
dec
pop
leave
pop
sub
jl
dec
outsb
mov
push
mov
xchg
data16
pop
clc
arpl
pop
xchg
pop
in
xchg
rclb
cwtl
movsl
gs
mov
in
imul
and
push
std
std
das
sahf
mov
inc
jae
in
and
hlt
aas
lret
jmp
mov
and
rcll
pop
push
movb
iret
sbb
cmp
sbb
jb
data16
stc
and
cltd
movsl
and
mov
loop
adc
enter
jp
es
je
add
jg
or
jge
in
and
jle
in
mov
push
mov
hlt
jo
adc
sub
addr16
insl
test
lret
hlt
data16
jb
push
mov
sbb
aas
xor
sbb
cmc
jmp
bound
pop
or
popf
addr16
xchg
into
mov
jno
push
aas
in
xchg
cltd
popf
fstpl
sub
call
inc
bound
aad
sbb
int3
faddl
fnsave
xchg
scas
xchg
dec
sub
sub
sub
push
movsb
xchg
mov
mov
mov
add
xchg
ljmp
mov
mov
mov
mov
jg
stos
sub
jno
scas
stos
mov
mov
pop
jo
scas
push
adc
cmp
stos
insl
mov
jne
cld
leave
lret
in
imull
mov
sahf
es
ficoml
push
mov
mov
mov
jo
inc
add
test
popf
xchg
dec
xor
data16
push
or
nop
xor
xchg
dec
fld
imul
push
loope
mov
cmp
jae
shrl
out
pop
xchg
add
outsl
mov
pop
fwait
lret
push
xchg
jle
mov
mov
add
dec
fs
lcall
rcr
es
jge
shrl
lock
aam
mov
pop
fwait
sub
imul
mov
cld
jbe
lods
jge
jns
xor
mov
imul
dec
dec
fmuls
iret
xor
push
sbb
mov
and
popf
enter
insl
push
cwtl
das
lods
jmp
jp
lret
pop
lods
nop
cmp
lock
rcll
cli
jp
shlb
mov
lock
movsb
inc
int
jnp
fnstenv
and
and
ds
cltd
cmp
in
jns
fdiv
test
adc
leave
aaa
pop
jns
mov
pop
inc
outsl
gs
push
lret
mov
jbe
fwait
imul
das
test
jp
inc
loop
jg
xor
stos
jl
pop
jge
stos
dec
mov
jae
adc
mov
sub
imul
and
int3
test
mov
push
pushf
xchg
cmpb
pop
leave
xlat
jbe
pop
push
mov
xor
int
fcomi
lock
pushf
add
inc
insl
mov
ds
xchg
dec
or
daa
gs
fwait
dec
push
daa
xchg
push
jo
push
lret
fucomip
pop
add
jae
sbb
sbb
andb
mov
push
mov
call
in
into
lcall
pushf
aam
xchg
mov
inc
pusha
mov
inc
popa
mul
sub
cltd
sbb
dec
rcrb
rol
test
jg
sti
pop
xor
dec
jae
push
stc
xorb
dec
mov
dec
call
movsl
cli
dec
stos
nop
scas
aam
dec
xchg
lods
mov
dec
xlat
outsl
cmpsl
mov
sub
inc
xchg
mov
dec
int3
and
push
icebp
xor
ret
pop
mov
dec
inc
xchg
dec
mov
scas
pop
inc
dec
repz
pop
int3
ret
or
lcall
pop
test
or
and
lret
xor
inc
mov
sbb
icebp
das
xchg
and
add
push
jge
cmp
aaa
jl
scas
inc
in
add
andb
icebp
adc
xchg
gs
xor
cmp
push
enter
sti
testb
and
sahf
scas
je
xor
mov
pop
mov
pop
adc
sar
fnsave
dec
sub
sbb
add
xlat
pop
mul
lcall
push
push
adc
fnstenv
les
mov
sbb
sbb
mov
xor
lcall
sahf
cli
inc
xor
add
test
mov
cmpsl
sti
rol
adc
jl
mov
lret
xchg
adc
cli
orb
sub
jge
daa
mov
sub
in
or
cs
or
xor
jp
xchg
pop
mov
mov
ljmp
fldl
lock
leave
add
inc
sub
mov
push
adc
add
inc
dec
mov
jb
aas
xor
mov
add
cltd
or
mov
mov
lret
ficoms
adc
jne
add
out
dec
addr16
cmp
std
inc
mov
and
imul
xchg
lret
xor
xchg
test
insl
dec
or
add
inc
cmc
jg
dec
rolb
cmp
and
adc
fisttps
and
or
out
pop
inc
and
inc
andb
mov
push
mov
cltd
jae
cmp
notb
pusha
inc
inc
pop
cmp
push
paddusb
jnp
test
idivl
jne
pop
pop
addr16
rcrb
mov
mov
inc
jnp
clc
nop
je
arpl
cmp
fs
xlat
scas
repz
mov
aaa
mov
cmpsb
xchg
xchg
cmp
sti
mov
ljmp
sbb
int3
out
jle
js
ficomps
sub
mov
mov
sub
and
dec
and
mov
dec
push
rol
jge
fwait
jno
push
pop
cmpsb
or
sbb
dec
dec
fcomi
popa
dec
push
add
sahf
jns
adc
mov
loope
imul
push
cmpsb
adc
pop
jnp
xchg
mov
roll
xchg
dec
cmc
pop
mov
pop
stc
daa
iret
iret
call
mov
sbb
call
insl
xlat
jmp
add
xchg
xchg
daa
push
in
or
fstl
imull
loopne
mov
sub
push
mov
or
xchg
mov
movsb
push
mov
dec
sarb
retw
sub
dec
movsl
dec
fwait
stos
add
enter
and
hlt
mov
lret
xor
jge
cmpsl
jle
mov
xchg
xor
scas
outsb
mov
push
inc
aas
daa
lret
xor
xlat
xor
out
rcrl
ljmp
xchg
test
mov
jno
pusha
jg
insb
lock
mov
xchg
pop
scas
ret
sarb
pusha
adc
fmuls
xchg
inc
jno
adc
adcb
cltd
and
jns
mov
popf
xchg
xchg
leave
cld
mov
sti
mov
xchg
out
push
xchg
dec
mov
mov
push
pop
loop
inc
adcb
xchg
mov
xchg
imul
int3
out
in
aam
scas
shl
fisubrs
dec
pop
mov
negl
jbe
scas
mov
notl
mov
pop
cmpb
outsb
fadds
insb
insb
xchg
inc
jae
or
adc
gs
mov
leave
pusha
dec
inc
insb
call
mov
cmpsl
or
out
filds
xchg
les
out
xor
loopne
addl
cli
hlt
sbb
pusha
jno
fwait
daa
mov
les
add
in
int
mov
cmp
movq
xor
dec
cmp
in
dec
mov
push
insl
mov
pusha
insb
mov
push
push
push
mov
sbb
pop
pop
jae
dec
jno
and
pop
or
sbb
fnstcw
cs
or
shrl
mov
je
xor
fisttpl
mov
xchg
xor
jmp
push
rcrb
shrb
loope
mov
test
xlat
or
aas
inc
mov
sti
inc
sbb
fwait
adc
xlat
xchg
stos
xor
push
or
jp
rcrl
or
es
jmp
mov
ss
addr16
and
in
lahf
dec
mov
aad
je
adc
loopne
test
inc
jge
inc
and
adc
sub
xlat
jle
mov
insb
adc
aam
cmp
xor
repz
mov
jp
xchg
adc
loopne
xchg
in
push
pusha
sbb
inc
push
sti
pop
xchg
sub
adc
lret
std
ror
push
leave
rolb
sub
xchg
enter
mov
ds
pop
pushf
adcl
push
sbb
pushf
jnp
out
pop
cltd
cmp
adc
int
mov
cltd
stos
cmp
test
cmp
mov
mov
mov
shll
cmp
loop
aad
jae
pop
cmpsl
xor
jb
pushf
sub
push
and
xchg
call
out
inc
xorl
sub
pop
mov
mull
adc
scas
push
fnsetpm(287
sahf
aas
jae
loope
dec
lret
call
mov
movb
cld
mov
lods
sbb
mov
xsaves
mov
movsl
ljmp
scas
mull
test
ficoms
push
cmp
inc
orb
cmc
xchg
mov
adc
gs
push
lret
pextrw
inc
loopne
pop
adc
mov
pop
lds
xor
xor
jb
jnp
mov
popa
in
xchg
addr16
in
mov
inc
add
test
stos
cmp
jecxz
jecxz
jne
push
stos
mov
sub
mov
pop
xchg
dec
pop
pminub
cmp
out
jle
test
jnp
insl
xchg
sub
push
dec
inc
repz
aas
or
fldcw
das
xchg
testl
or
lea
sbb
pushf
xchg
inc
inc
lcall
lods
mov
fdivrs
mov
sbb
add
or
or
or
fsts
cmp
jns
icebp
pop
call
and
loopne
cmc
inc
mov
push
adc
movb
mov
in
clc
in
bnd
cwtl
lock
cmp
out
lock
dec
sbb
in
jg
int3
lods
push
or
hlt
pop
sahf
stos
ret
add
fisttps
xchg
cmpl
dec
adcb
scas
popa
xor
mov
or
adc
dec
xchg
and
mov
mov
movsb
cmp
cmp
imul
or
popf
enter
xor
fsub
add
or
jne
xchg
xlat
int3
nop
lds
mov
adc
inc
scas
movsb
and
adc
xchg
mov
aad
push
sub
xor
cmp
jmp
mov
pop
sub
mov
push
dec
mov
sti
mov
jo
xchg
test
and
dec
ja
xor
lock
and
xchg
les
cmpb
lcall
aam
rorl
pop
add
sbb
cld
sbb
mov
cltd
fwait
ds
jnp
dec
aaa
hlt
jmp
push
fstps
jecxz
adc
jecxz
and
jnp,pt
sbb
loope
mov
jl
push
xchg
je
jecxz
or
fimull
loope
xor
sub
out
or
dec
mov
sbb
mul
xchg
ja
xor
mov
xor
ljmp
in
mov
pop
push
insb
sbb
pushw
leave
and
mov
and
and
xchg
or
repz
push
sub
sti
shl
das
add
mov
jb
inc
scas
stc
jne
inc
push
js
sarl
in
ljmp
pop
popf
jecxz
mov
or
int3
jecxz
inc
inc
lret
es
jb
cmp
mov
dec
and
test
arpl
call
jp
adc
mov
dec
fs
sbb
inc
push
cmpsb
addr16
lcall
out
les
push
and
pop
inc
ret
inc
pop
enter
popf
scas
sub
pop
rcll
out
inc
inc
icebp
es
dec
dec
dec
cld
xor
shrb
mov
leave
ljmp
xchg
sbb
push
dec
inc
adc
arpl
enter
in
add
cmp
loop
xor
iret
aaa
xchg
and
inc
pop
rcrb
stc
dec
xchg
adc
pop
dec
sarb
mov
dec
mov
sub
aam
pop
sbb
mov
adcl
jmp
dec
test
push
mov
incl
vshufpd
xchg
in
fdivrl
mov
xchg
aam
and
cli
jbe
cmp
out
mov
pop
pop
stos
cmc
in
testb
call
loop
insl
adc
sbb
and
adc
mov
adcb
push
jnp
push
mov
add
xor
orl
fistpl
or
push
pop
movsb
dec
pushf
lods
cmp
push
jno
stos
movlps
push
cltd
xchg
jbe
pop
jl
mov
es
dec
pusha
call
adc
mov
popf
sbb
jge
cmp
cmp
sub
mov
aas
xchg
fldenv
mov
scas
xor
mov
inc
or
xor
lret
dec
test
int
sbb
or
lea
outsb
jmp
mov
sti
movsl
mov
and
dec
push
or
push
jmp
movsl
imul
xchg
sbb
push
pop
dec
dec
pop
mov
fidivrl
shlb
dec
dec
sub
sub
and
loop
inc
fsubr
subl
aaa
cld
dec
gs
pop
mov
pop
mov
dec
mov
mov
mov
jae
scas
imul
cmp
rclb
cmp
or
inc
ja
xor
xchg
cli
xchg
xor
inc
mov
jle
mov
loopne
cmp
add
loop
insb
daa
xchg
push
out
addr16
xor
add
repz
inc
jne
jg
jnp
stos
or
inc
xor
loop
lds
or
or
scas
movsb
xchg
xchg
js
and
icebp
add
push
mov
pop
dec
std
adc
xchg
mov
or
negl
and
das
sub
sub
mov
mov
and
ss
out
jmp
mov
xor
pop
scas
mov
daa
pop
mov
xchg
imul
repnz
inc
ret
push
mov
pop
scas
xchg
mov
mov
sbb
adc
inc
aad
pop
sbb
lods
mov
enter
cli
inc
scas
call
insb
and
subl
shll
mov
xchg
xchg
js
xor
stos
pop
orb
leave
shrd
pop
test
stos
pop
xchg
sbb
ret
add
add
inc
pop
lods
or
sub
and
xchg
in
or
movsl
mov
lcall
mov
movsb
push
sub
add
lcall
inc
notl
pop
lds
aas
lods
or
adcb
jb
repz
pop
sbb
rorl
lock
sub
dec
jb
cltd
add
mov
mov
push
lock
and
inc
jecxz
xor
movsb
fldl
pop
repnz
sbb
enter
movb
adc
nop
jnp
jae
dec
cmp
cmp
fisttpl
fcmovne
dec
sub
push
jecxz
stos
cmp
mov
leave
and
mov
lods
aam
in
ss
push
add
cmp
mov
movsl
imul
orl
add
mov
add
aas
mov
inc
adc
and
add
inc
cmpsb
test
cwtl
imul
dec
test
adc
cltd
xor
dec
xchg
jb
cmp
ret
push
es
mov
dec
sbb
insb
andl
je
xlat
jmp
inc
sar
jl
sbb
xchg
inc
sub
adc
std
mov
ret
fucom
sbb
push
mov
mov
lods
stos
das
popf
daa
mov
leave
cmp
loope
xorb
lods
sahf
test
cli
dec
imul
inc
xchg
inc
xbegin
stos
dec
or
inc
mov
pop
sahf
push
xchg
test
out
pop
mov
mov
fisttpll
pop
dec
aas
add
inc
xchg
lock
jo,pn
std
call
cmpsb
adc
pop
mov
dec
testb
dec
rorl
loope
call
xchg
mov
jg
jmp
mov
sahf
push
add
pop
stc
dec
sbb
test
add
or
dec
sti
push
jl
adc
je
mov
icebp
daa
jp
pop
adc
adc
dec
cli
jo
push
arpl
cmp
stos
hlt
pop
mov
or
imul
fs
push
add
scas
sahf
or
or
jmp
xor
or
inc
js
adc
push
xchg
mov
pop
sarl
scas
dec
xor
insl
je
adc
decb
and
data16
inc
add
sbb
sbb
adc
ret
cmp
fldl
adc
je
push
in
enter
inc
lret
into
shlb
arpl
leave
fsubrl
mov
pop
xlat
lods
xchg
sub
and
or
xor
cmpsb
sub
fcompl
xchg
lea
pop
sbb
adc
movhps
and
mov
cmp
sub
test
sbb
jne
scas
xor
dec
add
popf
js
aad
ret
fisubs
add
jne
cli
and
jbe
jae
pop
in
mov
lods
push
mov
inc
push
push
add
outsl
insb
push
into
xor
mov
aas
cltd
or
push
scas
mov
mov
mov
push
push
lcall
ja
sub
jg
and
xor
loop
xor
mov
pop
xchg
nop
pop
and
outsb
push
fistpll
xor
pop
or
and
cmpsb
pop
xor
sahf
add
jl
icebp
mov
sbbl
and
jecxz
or
and
jmp
notb
loop
scas
jno
loope
cs
loop
in
loope
pop
imul
mov
out
inc
dec
cmp
test
int
popa
arpl
inc
jmp
faddl
push
in
mov
sub
pop
xchg
mov
or
cld
xor
mov
int3
mov
cmc
jae
xchg
fistpll
daa
push
out
insb
xchg
push
mov
sub
inc
lcall
rolb
das
repz
mov
push
shl
pop
loop
xor
inc
inc
lcall
aad
add
cmp
mov
adc
sub
popa
mov
in
mov
sti
xchg
ljmp
lret
cmp
xlat
pop
xchg
mov
sbb
add
fdivs
fsubl
leave
jmp
out
pop
mov
or
fcomi
xchg
loop
xor
or
xchg
ret
xchg
in
adc
int3
lods
sbb
xchg
int3
out
mov
mov
test
test
jle
pop
pop
lods
ret
out
sub
mov
ret
iret
aam
cmpsb
add
cmpsb
fldenv
mov
fdivl
jnp
cmp
js
cmp
jmp
and
in
pop
imul
sbb
xchg
loope
aas
dec
in
cld
insl
push
lods
ja
jns
shlb
nop
bound
add
lock
cltd
repnz
ljmp
inc
test
in
adc
loop
cmp
pop
lea
insb
ds
sbb
cmpl
out
xchg
lock
movl
or
das
jle
jbe
lret
sbb
push
adc
adc
shrb
xchg
imul
mov
mov
scas
xlat
adc
mov
insb
leave
push
sub
xchg
test
inc
inc
loopne
mov
cmc
iret
popf
outsl
mov
sub
mov
lahf
adc
rclb
stc
inc
mov
outsl
popf
mov
jbe
test
dec
sbb
lock
clc
ror
lea
fisttpll
cmp
cmp
push
mov
mov
loop
cmpsb
dec
popf
sti
arpl
enter
imul
mov
add
sbb
mov
es
ret
pop
sbb
inc
loopne
pushf
cwtl
outsl
imul
lret
xlat
xor
push
pop
push
movsb
stc
ret
aad
ss
mov
ss
jbe
xchg
stos
or
insb
fldenv
jmp
cmp
cld
inc
and
and
xchg
fwait
decb
jns
dec
cmp
insb
inc
int3
jne
mov
lods
addb
adc
cld
out
fadds
aam
add
add
mov
sub
mov
stos
dec
mov
adc
cmpsl
and
push
scas
xlat
jecxz
inc
xor
pop
dec
dec
adc
mov
and
mull
inc
xchg
or
or
xlat
outsl
outsl
mov
mov
arpl
mov
xchg
cwtl
add
sub
lahf
dec
imul
test
ljmp
xchg
add
aaa
pushf
cltd
fst
nop
jge
test
leave
jl
inc
pop
pop
push
flds
out
cmp
in
pop
adc
add
xor
sbb
fiaddl
call
cmp
mov
iret
mov
in
jae
dec
dec
les
adc
loop
outsb
je
leave
sahf
call
push
sbb
js
mov
outsl
or
pshufw
pop
dec
mov
pop
loop
xlat
mov
push
imul
inc
incb
mov
cmp
iret
stos
data16
inc
shr
mov
faddp
push
mov
fcmovne
mov
daa
mov
jl
lcall
fsubl
cld
rorb
cmp
imul
jns
imul
fcomps
mov
popa
jnp
pop
cmp
test
in
push
imul
sahf
jnp
data16
lret
sub
adc
clc
cwtl
jnp
xlat
jno
stc
in
lods
xor
addr16
cmovo
cmp
xchg
nop
out
jmp
jle
sub
loope
pop
or
add
sub
pop
xor
inc
rcrb
mov
out
lahf
adc
adc
jmp
sahf
repnz
test
and
mov
fdivp
arpl
xor
xchg
daa
aam
nop
push
mov
adc
inc
cmpb
adc
mov
pop
fidivrs
aad
repz
inc
mov
push
aam
xor
and
pop
cwtl
enter
sub
cmp
push
push
cmp
gs
mov
bound
je
aas
mov
out
jo
pusha
in
in
cmp
fisubrs
es
push
iret
scas
dec
mov
xchg
mov
adc
sbb
jnp
sub
cli
sbb
aam
dec
xor
push
lcall
xchg
xor
test
sub
mov
mov
sbb
lret
cmp
call
fmul
pop
inc
jecxz
sub
cmp
faddl
and
or
stos
stc
or
imul
clc
addr16
jl
adc
mov
out
or
cmp
fwait
in
sub
sbb
push
jecxz
sub
daa
xchg
sub
lock
adc
int
fisttpll
std
push
mov
test
stos
xor
hlt
add
fisubrs
scas
mov
aaa
mov
nop
or
xchg
cmpsb
mov
imul
enter
push
aad
ret
adc
mov
sarb
dec
sti
inc
add
loop
push
insb
dec
stos
xchg
and
stos
lret
lock
stc
jb
je
das
sub
cli
cli
je
ss
xchg
jbe
int
add
mov
data16
cmpl
sub
dec
rcrb
xchg
out
rep
mov
rcl
fxch
fldt
sub
push
push
mov
je
xor
or
mov
mov
push
test
push
mov
ljmp
xor
rolb
jmp
and
rolb
xchg
fs
inc
and
aad
out
in
jp
mov
pop
pop
mov
jnp
lds
xchg
lret
nop
and
sub
sbb
push
pop
jl
fnstenv
fnstenv
stos
pop
mov
mov
clc
inc
xchg
cmp
in
hlt
icebp
nop
dec
xchg
cwtl
icebp
sbb
xor
dec
mov
xchg
adc
aas
lds
dec
lods
mov
das
xor
fisttpl
pop
jle
shrb
fsubl
dec
jle
in
xchg
stc
jb
mov
cld
add
aam
inc
inc
lea
lcall
fadds
adc
outsl
push
test
mov
xchg
xchg
mov
adc
or
ret
or
pop
rorl
dec
jle
in
mov
aam
sub
ret
addr16
push
add
xchg
dec
loope
sub
mov
cmc
jmp
adc
mov
call
mov
and
push
xchg
xlat
scas
pop
dec
int3
and
xchg
std
cli
jp
test
xor
data16
in
xor
push
fiadds
sarl
and
int3
leave
adc
mov
fisttpl
jo
pusha
fs
and
sbb
jno
jmp
rcll
add
in
xor
jl
push
pop
jo
adc
add
rorb
dec
and
xchg
jge
adc
pusha
adc
pop
lds
out
test
out
jmp
fldcw
stos
sbb
fsub
packuswb
movsl
jns
pop
fldenv
or
mov
pop
and
into
or
insl
lods
and
lahf
scas
imul
aam
pop
push
aas
cmpsl
dec
pop
mov
aad
imul
pop
inc
mov
notl
sahf
push
sbb
mov
in
push
push
sbb
jb
jle
sbb
mov
bound
jl
push
rorl
into
call
mov
jmp
fistpl
ret
cmpsl
xor
pop
push
sub
sbb
shll
jge
shlb
loop
gs
call
fsubr
aaa
and
out
std
mov
inc
scas
mov
mov
pop
inc
cmp
ljmp
sbb
das
cmp
and
ss
pop
dec
mov
fistpl
test
lret
cmp
mov
inc
dec
jp
cltd
imul
xor
rcr
sbb
mov
cmpsb
jmp
shrb
dec
mov
mov
push
addl
popf
mov
pop
pushf
cs
adc
mov
or
jo
push
inc
mov
mov
jg
xor
mov
inc
dec
scas
xchg
fdivl
fldcw
adc
sbb
xor
or
fwait
xor
in
jbe
loop
add
lret
mov
idivb
push
fldenv
repnz
pop
std
mov
or
jge
int
pop
push
jl
std
inc
mov
cld
rcrb
js
aaa
stc
sbb
test
dec
in
ret
shlb
or
insl
pop
mov
lahf
xchg
jno
mov
and
pop
out
call
dec
rcrl
dec
jmp
fistps
jne
sahf
add
and
inc
or
jp
mov
dec
cmp
popa
add
imul
and
les
nop
in
loope
fisubl
adc
mov
mov
mov
test
pop
jp
loope
rcl
dec
add
cmp
sbb
cld
pushf
data16
jne
push
push
or
inc
push
adcl
sbb
fisubrl
lea
dec
movsb
mov
or
mov
test
stc
sub
xor
mov
adc
lock
mov
lret
lock
int
mov
arpl
fs
fwait
shlb
scas
or
popf
inc
leave
jge
je
dec
push
shll
in
push
jp
cmpsb
fcompl
rclb
pop
hlt
or
pop
addr16
movsl
and
dec
inc
lcall
mov
and
cmp
js
xchg
sub
mov
gs
cli
jp
add
adc
xchg
stos
outsl
pop
rcrl
out
push
dec
out
pop
insl
lock
jo,pt
cmc
bnd
sub
add
push
xchg
push
inc
and
fbstp
sub
pop
add
mov
icebp
sbb
iret
cmp
in
pop
mov
idivl
pop
sub
fstl
aad
test
repnz
rolb
mov
dec
cmpsb
xchg
imul
push
inc
incb
mov
gs
inc
gs
and
xchg
stos
test
pop
filds
mov
and
out
dec
jl
dec
mov
and
fnsave
mov
and
push
push
inc
sbb
jmp
movsl
jo
mov
cmp
xchg
out
cld
inc
or
adc
clc
repnz
aaa
pop
push
inc
inc
shl
sub
outsb
aaa
sbbl
inc
loop
dec
cmp
inc
jmp
fldt
jmp
jp
push
xor
cltd
mov
rcll
jecxz
xchg
jmp
push
mov
sbb
vmread
xor
addr16
xor
and
enter
add
sub
stc
imul
jp
ljmp
inc
lds
cli
popf
out
insb
mov
shlb
leave
xchg
repnz
jno
and
mov
sbb
mov
sbb
sbb
ja
push
jns
scas
sti
cmp
std
cld
pop
fimuls
xor
js
cwtl
add
xchg
and
push
dec
lcall
or
inc
xor
dec
fldcw
cmp
loopne
push
mov
adc
loopne
rorb
jnp
xchg
push
dec
fisubs
fs
mov
loope
xchg
hlt
sbb
xor
sbb
inc
jge
pop
iret
test
xchg
cmp
cs
push
gs
mov
dec
push
xchg
int
xor
cmp
adc
shrl
inc
lcall
mov
mov
out
dec
push
addr16
xchg
cmp
sbb
jecxz
lcall
mov
in
lock
and
stos
orl
pop
bound
pop
inc
std
out
scas
inc
insb
and
xor
iret
shrl
out
mov
xchg
mov
jp
mov
jl
fsubrl
push
sub
push
fwait
or
hlt
cmp
sub
or
and
imul
aad
jge
jae
xor
push
fildll
repz
inc
lods
mov
and
movsb
aas
pop
xor
sub
cli
push
push
jl
ljmp
add
push
cmpl
sbb
add
lahf
sbb
xchg
ret
xor
pmovmskb
repnz
cmc
ret
xlat
jne
sarb
jmp
and
lds
xor
sbb
adc
push
xchg
fdiv
cs
pop
dec
mov
es
pop
push
out
mov
mov
aad
outsb
stos
mov
clc
mov
stos
push
je
jnp
cld
add
js
repnz
add
lahf
test
roll
stc
and
movsb
mov
ficomps
mov
push
fsubrl
in
adc
js
inc
mov
cwtl
repz
mov
mov
xchg
pop
lahf
jbe
jg
jns
adc
mov
dec
ret
lcall
insb
xor
pop
cltd
imul
gs
pusha
jo
inc
cmp
mul
and
test
fidivrl
call
inc
inc
pop
cld
xlat
inc
lea
jp
sbb
pop
test
aad
sbb
mov
xchg
push
cmp
pop
movb
jae
pop
cltd
xor
jmp
sub
pusha
popa
dec
fistpl
xor
leave
rcrl
mov
push
fs
or
das
push
xchg
dec
sub
hlt
lock
dec
bound
pop
lcall
pop
push
ret
mov
hlt
bound
mov
fistl
xor
in
inc
pop
movsl
mov
bound
hlt
mov
movsl
xchg
cmp
sbb
cmp
mov
xor
inc
mov
cmpsb
xchg
adc
xchg
or
lock
clc
sarl
and
popl
cmp
dec
ja
mov
mov
lret
mov
mov
xor
add
ja
xchg
sahf
cmpsb
pop
mov
into
test
add
jns
push
and
jge
imulb
mov
jle
push
out
jo
mov
sub
loopne
or
xor
add
movsb
stc
iret
sub
push
and
fnsave
aas
jp
add
mov
and
xor
or
mov
or
xor
mov
fnstenv
in
push
xor
stos
adc
fidivrl
loope
rclb
cs
loopne
add
imul
test
pop
xchg
xchg
jbe
je
xchg
lods
pop
lcall
mov
jae
cwtl
mov
adc
xchg
lock
inc
add
push
ret
push
dec
xchg
add
cmp
add
enter
std
and
lods
xchg
xchg
popf
out
hlt
pop
sahf
cmpsl
sbb
jb
sub
push
sbbl
ljmp
repnz
mov
adc
std
loopne
test
and
test
push
pop
cmp
cmp
addl
and
sub
ljmp
ficomps
stc
push
call
mov
jbe
movsl
sbb
jb
imul
into
aas
mov
xchg
adc
mov
arpl
sub
mov
inc
mov
xchg
out
jl
movsb
inc
fsts
mov
jmp
js
mov
cltd
movsl
loope
fidivs
cvtpi2ps
cld
into
sbb
aas
pop
pop
in
pop
mov
lret
adc
adc
cmp
adc
insb
mov
jmp
lahf
lds
inc
adc
in
inc
inc
loope
out
subl
inc
fwait
push
mov
dec
inc
mov
jecxz
dec
pop
outsb
roll
mov
lds
push
and
mov
mov
shrl
nop
pop
sbb
adc
and
mov
out
rcr
test
ret
or
gs
dec
cmp
cmpsl
out
rcl
add
inc
aas
das
repz
movsl
mov
pop
xchg
leave
les
push
fs
cmpsb
sbb
rcrb
addb
dec
into
idivb
cmp
sbb
scas
jl
gs
test
jle
lock
je
or
push
arpl
gs
cli
pop
xchg
out
rorb
bound
lea
imul
mov
cmp
push
rcrl
dec
sbb
icebp
and
les
adc
inc
pop
inc
fcmovnbe
mov
lods
adcb
arpl
sbb
mov
adc
mov
je
movsl
rcr
or
push
pop
lods
sbbb
mov
mov
ss
dec
aaa
sahf
pop
aad
imul
inc
sbb
mov
push
movsl
fisttpl
adc
adc
mov
mov
dec
push
xchg
sub
daa
xor
cli
lea
or
ss
inc
cmc
dec
repz
jns
jb
adc
dec
ret
and
mov
push
dec
jg
add
add
fucom
lods
xchg
mov
aad
and
insl
stos
xor
stos
hlt
repnz
jnp
pop
rcrl
inc
leave
std
fwait
sub
mov
sub
and
rolb
xorb
daa
lret
in
int
pusha
notl
dec
decl
push
jge
lods
cmp
dec
ds
sbb
inc
repnz
push
sahf
adc
mov
loope
cmpsl
xchg
jo
sysenter
sub
insb
sbb
jmp
sub
dec
cld
mov
pop
sub
push
insb
aam
daa
pusha
adc
mov
ja
popf
cli
in
mov
xor
sbb
fwait
test
cmp
mov
arpl
in
and
mov
outsl
and
inc
std
xchg
sub
cmp
adc
dec
or
pushf
ds
out
je
cmc
bound
icebp
add
xchg
les
bnd
jnp
fildl
mov
push
es
fistpl
andb
inc
dec
xor
loopne
add
sbbb
push
mov
inc
mov
dec
sub
mov
push
imul
xchg
incl
sub
mov
out
add
out
leave
imul
cwtl
pop
pushl
rcrb
or
movsb
sbb
aas
jae
and
push
das
inc
mov
rorl
insb
sbb
dec
loopne
sbb
imul
int3
in
pop
mov
sub
sbb
inc
jns
movsb
and
cmp
sahf
jecxz
pop
jecxz
shrb
leave
sar
and
stos
pop
repz
mov
enter
repnz
scas
in
mov
addr16
mov
sub
pop
xchg
push
add
pop
push
into
outsb
ficompl
scas
aad
jecxz
cmp
pushf
sub
push
test
pop
add
push
sbb
leave
test
out
int
push
pop
or
aam
jne
add
rclb
into
mov
aam
push
cli
jae
rorb
rorl
es
pop
leave
out
push
push
hlt
addl
repnz
xor
cmc
or
es
pop
mov
data16
add
mov
cmpb
mov
xor
rcpps
pusha
xchg
mov
mov
mov
mov
imull
lds
mov
cmc
movsl
mov
cs
xchg
sub
mov
push
or
sub
clc
testl
rcrl
fbld
dec
fcomp
out
pop
or
add
pop
jbe
mov
scas
rcll
clc
mov
push
out
mov
loopne
adc
mov
scas
outsb
rep
add
ror
mov
leave
adc
jo
test
call
hlt
shrl
imul
sbb
int3
leave
bound
pop
push
shlb
pop
cli
rolb
test
fisttps
sbb
adc
inc
xchg
jle
fwait
addr16
jo
shlb
pop
arpl
inc
or
ret
test
mov
push
shlb
adc
inc
xor
in
mov
pushf
lcall
shll
in
push
pop
adc
cmp
mov
sub
inc
cs
mov
inc
pop
les
xor
sbb
scas
jns
and
mov
adc
jecxz
jmp
sub
lods
std
dec
nopl
pushf
pop
negb
notl
mov
cltd
ss
jl
loop
fsubrl
repz
cmc
sub
jnp
xor
cmp
jecxz
test
ret
cli
rol
jl
xchg
and
sbb
repz
into
lods
pop
adc
sub
and
fwait
cmpl
dec
jne
push
push
dec
mov
jbe
lcall
jnp
cli
divps
sbb
pop
aas
adc
pop
xchg
mov
lods
dec
test
adc
fistps
in
cmp
mov
out
or
xor
in
mov
sbb
mov
sub
fs
nop
mov
cli
cwtl
out
stos
aam
mov
ds
sub
xchg
pop
clc
sbb
das
mov
scas
jge
inc
loop
pop
and
adc
dec
into
test
ret
pop
pop
data16
sbb
insl
enter
je
ftst
push
out
jo
mov
sti
lds
dec
imulb
stos
insl
sub
mov
pop
lahf
scas
fs
dec
sarb
icebp
scas
add
mov
addr16
fstpl
push
and
inc
int
inc
xchg
iret
push
dec
cwtl
xchg
add
mov
call
std
mov
frstor
js
outsb
push
loop
xor
fsubrl
fcompl
lret
and
pop
push
and
das
fsubr
popf
shlb
loopne
push
jae
shlb
addb
mov
lahf
iret
xchg
lods
xor
mov
and
int
stos
imul
gs
scas
cmpsb
mov
and
testl
cmp
adc
xor
jg
push
push
sbb
mov
test
test
imul
inc
fwait
push
sahf
sbbb
enter
jecxz
andl
iret
daa
fmulp
enter
fcoml
sahf
jp
jb
dec
cmpsl
jno
or
lahf
push
cmp
jmp
xlat
sub
push
aaa
push
xchg
sub
loopne
mov
adc
lods
outsb
fdivs
sub
fwait
mov
roll
popa
shll
fbld
adc
mov
cltd
rcll
jg
xchg
jns
icebp
pop
push
mov
call
mov
dec
inc
inc
xorb
ss
sub
sub
add
xchg
dec
adc
push
xlat
out
addb
mov
cld
xchg
ja
lahf
push
cwtl
pop
stos
mov
push
jo
fcomp
push
inc
outsl
in
js
xchg
pop
movb
mov
js
or
sub
lods
mov
pop
loopne
push
jo
add
cld
sbb
push
push
and
xor
mov
leave
out
repnz
rcll
enter
cmp
arpl
push
loopne
dec
adc
aad
imul
arpl
inc
push
rcll
xchg
lret
inc
sbb
out
add
repz
arpl
enter
popa
adc
test
add
imul
jae
xchg
les
pop
scas
cmpsb
push
xchg
arpl
pusha
add
or
cmp
push
in
ds
or
adc
pop
inc
mov
arpl
jbe
into
pop
cld
imul
aam
scas
repnz
repnz
and
jno
lods
mov
xor
fs
imul
stos
inc
mov
cwtl
in
adc
and
push
repz
sbb
mov
push
cmp
or
lods
xor
out
fcoml
in
mov
ljmp
or
rcrl
daa
int
pop
movsb
sbb
jecxz
test
divb
pop
or
mov
and
popf
or
xchg
in
jae
test
xchg
mov
cli
ss
sbb
clc
xchg
cmp
dec
jbe
lahf
int
decb
nop
add
inc
dec
mov
out
jnp
cmp
cmp
xlat
cmp
rcll
es
adc
xor
stos
sbb
adc
cli
mov
fistl
add
rcll
in
push
mov
iret
and
mov
cmpb
cli
std
or
fdivrp
lods
imul
add
push
pop
mov
pop
jp
inc
and
pop
scas
outsl
jae
sbb
pop
notl
sbb
mov
daa
dec
pop
lea
cmp
push
movsb
aad
out
sub
outsb
jb
insb
pop
mov
mov
pop
mov
adc
push
nop
jecxz
jns
rclb
inc
mov
neg
call
mov
add
call
xor
out
jp
sbb
xchg
notb
jb
std
inc
mov
mov
xor
out
aad
fiadds
pop
inc
cmp
dec
pop
int
stos
cmpsl
outsl
lock
fmull
ja
pop
pop
jl
fiaddl
jge
mov
out
dec
mov
xchg
jno
sub
xchg
inc
cmpl
jno
cmp
cld
es
xor
int3
pop
and
out
out
lcall
xlat
das
stc
xchg
jbe
cmp
test
fmuls
sahf
inc
in
cmovl
and
xchg
cmp
fdivrs
test
dec
ret
jne
inc
orb
cmp
xchg
or
sbb
insb
xchg
rolb
mov
jnp
rcrb
and
xor
add
jg
dec
add
ds
cmp
inc
call
mov
mov
outsl
popf
pop
enter
mov
imul
repz
add
xchg
mov
lcall
and
mov
sub
or
adcb
jno
mov
lods
fstps
xchg
lods
in
out
push
and
ret
loope
pop
rcrb
xor
cltd
mov
lods
addl
dec
fdivl
pop
lock
dec
mov
xor
sti
fstpt
inc
xor
sub
lahf
mov
mov
add
in
cld
daa
inc
ljmp
stos
out
or
pop
dec
test
or
xchg
adc
fld
dec
lret
fnstcw
adc
cmpsl
mov
out
pusha
idivb
sbb
lea
scas
std
jecxz
and
mov
in
setnp
bound
sti
fisubs
repz
mov
pusha
dec
negl
push
mov
sub
std
mov
repz
icebp
in
ret
add
mov
mov
imul
movsb
mov
insb
stc
sub
mov
sahf
andl
jle
popf
pop
push
outsb
sub
add
clc
jns
cltd
fwait
lcall
push
cmp
dec
inc
dec
test
ret
ljmp
pop
test
fidivs
ss
test
mov
arpl
sub
xor
add
push
shrb
mov
cmp
and
mov
bound
rcrl
push
sahf
leave
shll
cs
movsl
push
pshufw
in
hlt
loopne
lds
cltd
mov
push
sbb
sub
test
dec
sbb
jge
repnz
inc
mov
lcall
int
outsb
sbb
or
cli
mov
pop
leave
xorl
int3
sbb
pop
inc
cld
cld
and
cmpsl
or
testl
dec
out
pop
sub
jmp
push
jmp
pop
shll
pop
leave
call
push
sbb
jno
cmp
fisttps
insb
or
and
mov
mov
lcall
add
mov
xor
inc
cmp
xchg
sbb
lods
mov
mov
jbe,pn
in
cmpsl
shlb
shll
shll
mov
xchg
gs
test
idiv
cmc
xorl
push
sub
mov
and
repnz
loope
sub
adc
xchg
sahf
lock
dec
sbb
mov
or
push
adc
and
inc
xor
cmp
jns
gs
adc
fstl
xlat
sbb
pop
mov
sbb
push
movsl
and
xchg
int
xor
idivb
mov
je
lea
jmp
out
idivb
xchg
fidivrl
mov
test
sub
push
pop
int
fldl
cmp
jecxz
nop
mov
sub
jae
sbb
in
sbb
mov
pop
pop
fdivs
mov
push
pop
dec
xor
repz
scas
push
cmp
fs
dec
push
in
daa
rolb
andl
std
imul
xor
add
out
mov
cmp
fisubrl
mov
or
cmpsl
shll
mov
xchg
mov
imul
adc
cwtl
mov
inc
test
jp
andl
outsl
insb
xchg
and
mov
xor
insb
std
outsb
aas
popa
mov
push
pop
iret
add
xorb
jle
jmp
je
mov
pop
lds
push
cmpsl
mov
jl
ret
hlt
mov
jmp
push
dec
xchg
lods
sahf
loopne
jno
cmp
sub
xchg
jl
je,pn
popf
ffreep
stos
cmc
mov
push
ja
insl
hlt
sahf
rcl
popf
daa
movsb
fnstsw
mov
sub
lcall
aam
loopne
test
push
out
and
mov
xchg
and
pop
enter
fsubl
mov
dec
jge
sbb
mov
hlt
mov
xchg
loope
out
insb
xchg
mov
dec
sbb
andb
adc
outsb
and
pusha
cmp
in
pop
xor
mov
mov
mov
mov
loope
mov
adc
adc
mov
pusha
test
add
jg
inc
mov
push
jno
mov
pop
sbbb
dec
cmp
or
add
iret
fists
dec
addr16
push
loop
add
jb
icebp
dec
sbb
movsl
aad
int3
and
mov
es
or
add
sarb
loopne
popf
lds
xchg
xchg
sub
aad
inc
icebp
addr16
or
daa
ljmp
cmp
mov
cmp
jae
lods
push
inc
in
add
and
insl
inc
unpckhps
jmp
std
dec
call
pop
cmp
rorl
and
mov
pop
adc
xchg
and
repz
xchg
gs
dec
ret
dec
cmp
inc
or
xor
daa
rcrl
lret
orb
nop
popf
push
xchg
adc
mov
aam
test
add
adc
xchg
cmpb
orl
test
and
mov
sbb
int3
cmp
xchg
or
mov
mov
data16
pop
pop
mov
arpl
fists
mov
aas
jg
test
out
jo
loop
mov
data16
test
incl
stos
cld
lret
push
or
add
lcall
push
jno
jl
pop
shll
mov
mov
pop
das
pop
jb
loope
pop
iret
mov
repnz
or
sub
or
movsb
mov
xchg
lods
int3
push
adc
mov
sub
xlat
test
loop
dec
cmc
adc
pop
cmp
adc
push
sbb
mov
sahf
in
push
lds
or
cmp
jnp
pop
mov
sbb
xor
out
lds
in
scas
adc
and
ja
inc
or
fs
scas
mov
scas
out
inc
xor
mov
mov
xchg
loope
cld
xchg
fstl
mov
scas
es
add
dec
nop
repnz
pop
dec
xor
push
sub
clc
push
std
push
rorb
ret
lret
repz
cmc
call
sub
in
cmp
pop
in
inc
and
fidivl
call
repz
call
adc
ja
push
ret
adc
test
and
cmp
daa
int
dec
shlb
arpl
fdivrs
cld
adc
inc
and
out
dec
rcr
inc
jmp
insl
jns
faddl
jle
jmp
imul
adc
sub
roll
imul
xchg
xchg
xor
out
push
loope
imul
sbb
add
adc
cld
arpl
cmp
lods
mulb
lret
hlt
cmpsb
repz
inc
mov
or
int
adc
dec
mov
repz
push
sbb
inc
push
cmp
mov
aaa
cmp
out
mov
mov
mov
pop
add
and
inc
fs
popa
cmpsl
or
int
mov
dec
xchg
in
testl
xor
not
jmp
dec
sarl
ljmp
jbe
fcmovnb
mov
mov
les
cld
or
adc
or
push
push
and
lcall
cmc
sub
sub
arpl
mov
fucomp
stos
mov
mov
add
jecxz
or
pusha
mov
call
inc
vcvttsd2si
mov
mov
cmp
test
adc
push
dec
ds
vmovaps
pusha
fsubr
jmp
xor
ss
insl
jmp
mov
stos
adc
lcall
aad
fidivs
xor
push
in
jle
repnz
dec
jmp
add
enter
pushl
rcl
jge
jp
xchg
push
add
bswap
xor
jge
sbb
rorb
pop
pop
jle
test
sti
dec
inc
mov
stos
inc
inc
dec
mov
imul
mov
stos
sbb
fdivrp
add
mov
in
fdivs
ss
and
ficompl
inc
lret
and
mov
stc
mov
insl
cmp
stos
xchg
jo
mov
mov
int3
and
test
test
jno
sub
in
mov
hlt
bound
dec
loope
pusha
add
push
scas
repz
inc
adc
ss
ljmp
xchg
push
ljmp
sub
pop
mov
push
jne
xchg
fcmovnu
mov
mov
xchg
je,pt
cmc
mov
inc
mov
adcl
pushf
xorb
incl
aad
mov
add
sub
and
fstl
icebp
cmp
mov
xchg
push
pop
inc
or
mov
dec
enter
pop
dec
pop
cmp
and
pop
and
xchg
push
or
aad
mov
ret
jne
cwtl
and
adc
enter
pop
outsl
lods
push
mov
jb
test
jno
cwtl
push
jl
mov
aaa
pop
out
shll
rclb
cld
insl
mov
inc
scas
ret
repnz
ror
test
into
dec
xchg
stc
or
insb
jl
test
pop
cltd
or
xchg
mov
push
xchg
lock
sti
pop
leave
bound
mov
mov
sub
pop
xchg
cld
mov
jno
add
aaa
mov
push
mov
loop
mov
push
sub
cmp
insb
dec
sub
mov
orb
movsb
int3
testb
test
xor
mov
sbb
imul
clc
notb
sbb
and
rcll
pushf
add
fstpt
xor
push
sbb
addr16
out
arpl
hlt
call
mov
outsb
xchg
aad
mov
pop
add
jp
adc
rolb
bound
push
xchg
cs
rcll
jne
mov
inc
cmp
mov
addl
xor
mov
faddl
into
lret
fisttpll
leave
jmp
jns
imul
jge
arpl
xorl
sbb
les
jnp
push
or
ss
mov
mov
aam
mov
jo
jge
sahf
push
fnstsw
clc
sbb
test
insb
dec
adc
out
jge
sar
mov
cmp
adc
daa
cmp
lret
fidivrs
pusha
and
sbb
xor
imul
sti
jge
ret
jge
adc
ror
mov
mov
fwait
js
mov
xchg
jae
mov
sarl
xchg
fcmove
popf
shll
jp
pop
movsl
test
mov
fcoml
xchg
dec
or
in
test
add
in
inc
xchg
int3
push
xchg
pop
cmp
lods
mov
inc
mov
adc
sbb
mov
or
xor
add
pusha
adc
outsl
fadds
mov
aam
jge
fdivl
hlt
fwait
inc
je
push
inc
adc
loopne
nop
push
mov
xchg
xchg
xchg
leave
jge,pn
inc
lcall
std
dec
lea
cmp
sbb
mov
sub
or
sbb
fiadds
je
mov
sub
iret
pop
pop
sbb
mov
lods
lret
mov
popa
sub
ret
xchg
dec
push
sahf
cmpsl
iret
out
mov
dec
sahf
lret
bnd
xor
ds
cmp
ja
repz
mov
pushf
mov
ja
xchg
xor
and
in
xlat
add
xchg
dec
movsl
repnz
lods
popa
insb
xlat
xchg
pop
or
out
push
add
sub
test
cltd
mov
or
push
inc
push
xlat
out
mov
inc
call
in
mov
or
push
movsl
loop
loope
adc
mov
sbb
repnz
jae
out
lods
sti
sub
sarb
scas
aas
shrb
sbb
jne
push
pextrw
mov
test
xor
add
leave
insl
rol
testb
add
repz
cmp
mov
inc
jnp
or
aaa
adc
xchg
test
push
popf
cs
mov
mov
sti
mov
imul
add
jge
cmp
aaa
clc
xorl
xchg
cltd
mov
test
pop
fs
inc
dec
icebp
dec
mov
cmpsl
and
jno
cmpsb
pushf
jl
inc
dec
shlb
pop
outsb
cld
jecxz
push
cwtl
cmp
or
fwait
lcall
dec
je
test
frstpm(287
shll
ds
pusha
popa
lock
cli
mov
jnp
pusha
fnsave
in
pusha
jo
jge
loop
cli
jp
mov
sbb
dec
add
outsb
cwtl
aam
dec
inc
adc
xchg
iret
sahf
sahf
sbb
mov
popl
mov
mov
push
test
push
mov
mov
pop
lds
rcl
mov
jb
arpl
int3
mov
fsubrl
popa
add
cmp
cmp
xor
movsb
sub
adc
mov
jecxz
adc
xor
lds
adc
jl
out
inc
ret
lock
push
popa
loop
adc
jg
inc
lcall
stos
je
inc
mov
jecxz
sub
adc
into
daa
test
repz
out
lods
into
push
imul
jmp
xchg
sub
pop
jge,pt
loopne
fadd
mov
shll
inc
pop
and
jae
in
rcl
fldcw
sbb
jp
cmp
or
out
in
bound
sahf
jnp
je
mov
jge
pop
push
outsl
xor
cmpsb
sub
and
dec
test
mov
lods
push
adc
mov
xorb
xor
xchg
call
shll
popf
adcb
xor
subb
sbb
push
push
into
imul
movl
popf
fdecstp
sub
dec
mov
pop
ffree
cmpsb
ljmp
lahf
sub
cmp
pop
adc
cmp
les
dec
and
jl
push
repnz
es
lods
mov
mov
notl
addl
dec
aam
pop
inc
xchg
xor
out
push
ficompl
movsl
cld
sbb
and
jecxz
mov
mov
mov
hlt
sti
fxtract
sbb
jl
mov
inc
fisubrs
cwtl
fwait
stos
mov
xor
mov
cs
movl
shlb
pop
std
ljmp
movl
xchg
pop
sahf
notb
loopne
xchg
push
xchg
cmp
enter
mov
lods
shll
jbe
cmp
lcall
std
adc
cmp
push
jno
inc
addr16
jg
push
push
pusha
fdivl
daa
movsb
fldt
adc
xchg
xchg
lret
mov
or
push
pop
inc
lods
xchg
imul
addl
add
cmp
xchg
mov
cmp
stos
ss
mov
cmp
adc
pop
shlb
push
outsb
ficomps
ror
push
sbb
in
inc
jmp
aam
test
stos
mov
mov
iretw
mov
enter
xlat
jmp
bound
push
pusha
shll
xchg
jmp
cwtl
aas
mov
and
or
test
dec
push
je
sub
das
jecxz
pop
pushw
xor
shll
pushf
daa
dec
jp
int3
mov
sub
push
scas
repnz
or
ret
outsb
sbb
jp
je
jae
mov
and
pushf
ret
cmp
pop
sub
cmc
mov
xchg
enter
dec
push
leave
or
add
iret
inc
int3
cmp
push
xor
cmp
cmpl
pop
jno
pop
or
push
mov
dec
xchg
jbe
insb
dec
mov
cmpsb
or
mull
scas
je
in
lea
repz
ds
fsubs
lahf
lret
ja
repnz
add
imul
or
je
mov
mov
int
testb
jns
cld
xchg
inc
loopne
cmp
es
ficompl
gs
push
cwtl
add
dec
out
push
jmp
mov
inc
pop
mov
scas
je
adc
dec
adcb
xlat
pop
call
gs
or
and
out
push
sub
xor
xorl
fs
adc
ss
jmp
orl
or
adc
shlb
flds
or
mov
std
jnp
sub
dec
cmc
push
and
inc
add
mov
sbb
jg
rcll
jecxz
jle
iret
lods
stos
dec
lock
cmpsl
insb
cmp
push
xchg
negl
fwait
in
ds
sub
and
test
mov
xor
cmp
or
fs
scas
pop
add
mov
movsb
push
dec
push
mov
test
orl
cld
mov
mov
fldenv
insl
outsl
cli
mov
and
push
addr16
jbe
and
mov
lret
je
stos
mov
outsb
jp
fnstenv
out
pusha
add
clc
aad
andl
dec
adc
jmp
nop
sbb
sbb
gs
dec
mov
sbb
pop
movsl
jle
mov
adc
dec
nop
mov
aaa
push
fwait
push
int3
add
jno
xchg
jns
mov
leave
imul
inc
adc
nop
jp
lcall
mov
movsb
stc
rcll
testb
adc
loope
xlat
out
arpl
out
es
xchg
xchg
jb
ret
inc
stos
pop
scas
cs
xchg
xchg
pop
lcall
adc
adc
ret
inc
adc
add
leave
sar
mov
pop
or
mov
lahf
xorb
sub
and
cmpb
les
ds
aas
jb
xlat
sti
pop
and
inc
pop
mov
xchg
lock
xor
loope
push
loop
jmp
sarb
cmp
in
aaa
pop
out
in
out
repnz
sub
ja
mov
inc
mov
mov
in
sbb
fstl
daa
ds
jb
or
movsb
dec
aas
rcr
mov
cmp
jb
xor
add
pop
xor
dec
xor
fcoms
or
jmp
xchg
adc
push
jmp
shll
cmp
push
push
les
pop
cmpsb
xor
fistl
jmp
mov
js
aad
jmp
aad
mov
fstpt
mov
loope
jo
cmp
or
out
dec
lea
movsb
leave
bound
js
repz
pusha
lods
mov
loope
push
lods
enter
mov
push
jp
aad
inc
nop
imul
mov
sub
cmpb
mov
adc
popa
imul
xchg
push
pop
lods
xchg
daa
sub
pop
sub
fbld
jns
sarb
bound
clc
out
adc
fsubrs
mov
js
out
inc
push
mov
or
lods
sub
mov
shlb
std
or
sahf
xchg
pusha
pop
jmp
test
andb
shll
test
mov
stos
mov
or
mov
loopne
aas
mov
aaa
fmul
mov
inc
in
stos
ret
test
mov
jae
mov
sub
jle
fnstenv
mov
gs
js
stos
int
imul
jl
dec
es
inc
fisubrs
std
jmp
in
sub
popa
sub
cs
mov
out
div
xchg
sub
jno
lods
pop
aam
jecxz
movsl
iret
jecxz
mov
addr16
pop
rorl
aas
fsts
out
popf
dec
into
jmp
pop
loope
pop
dec
in
test
popa
cmp
fwait
xchg
pop
movsb
xchg
jb
xchg
push
xchg
sub
dec
aad
fwait
je
or
cwtl
cmp
loopne
sub
adc
or
rcll
inc
stos
lods
leave
data16
mov
in
mov
or
shl
or
mov
cmp
fstpt
insl
xchg
sbb
pop
adc
sahf
aam
mov
enter
dec
lahf
push
sahf
pop
movsl
test
mov
test
xor
fstpt
rcrl
std
int3
fmul
and
push
dec
dec
push
xorl
inc
inc
sbb
lret
mov
pusha
ret
aaa
or
sbb
movq
push
es
inc
inc
mov
loop
movsb
daa
jl
repz
and
das
inc
ss
mov
adc
mov
adc
and
sbb
jg
pop
jo
push
push
mov
jmp
arpl
stos
sbb
das
cmp
es
loop
insl
xor
popf
inc
push
mov
mov
imul
das
jmp
add
push
push
je
mov
jecxz
je
inc
jle
outsl
test
cmc
cmp
push
push
aad
cmp
add
test
andl
fmul
ljmp
ret
es
xchg
push
repnz
push
dec
jbe
imul
and
xchg
mov
xlat
shrl
pop
pop
sbb
pop
inc
hlt
mov
aad
add
fptan
mov
movsl
dec
add
popa
adc
lods
xor
or
test
lcall
sbb
in
pop
mov
push
rcpps
push
mov
pushf
ficoms
jmp
mov
hlt
mov
jle
lock
fsubrs
mov
lods
popa
pop
cltd
inc
sahf
insl
ja
jne
jo
ss
flds
push
dec
cmp
xchg
sti
aas
xor
cld
cli
or
pushf
dec
loopne
inc
imul
stos
fnsave
cld
jbe
push
call
xor
fdiv
add
xor
xchg
mov
rol
pop
sahf
int3
lds
pushf
adc
imul
push
cmp
mov
ljmp
xchg
fwait
mov
test
negb
popa
mov
insl
jo
iret
xor
sub
cld
cmpsl
aaa
dec
dec
in
ds
jp
and
or
lea
push
sbb
rolb
xchg
xchg
loope
scas
fstp
leave
adc
dec
cld
mov
nop
je
addl
orb
stos
mov
xchg
sub
push
repz
xchg
and
popf
jmp
push
sahf
add
mov
add
mov
mov
push
scas
push
cmovbe
loope
jecxz
sub
stc
mov
aam
sub
pop
rcrl
xor
mov
cmp
mov
jb
rclb
jle
add
orb
and
negl
ret
xor
push
test
xchg
xbegin
lcall
xchg
in
mov
fiadds
mov
icebp
shr
not
adc
sbb
pushf
sbb
dec
jbe
inc
das
mov
in
jnp
dec
xor
mov
xor
mov
push
mov
jbe
and
andl
xchg
loope
cmc
ss
pop
or
sub
push
sbb
mov
stc
cmp
lods
test
mov
std
jnp
rol
pop
insb
add
mov
mov
inc
subl
inc
xor
sub
jmp
rolb
cmpsl
cld
out
ret
pop
jl
sbb
and
cmpsb
sbb
add
les
cwtl
jb
sbbl
or
xchg
mov
repnz
hlt
fsubl
loope
xchg
push
dec
sbb
push
inc
daa
mov
adc
cld
cmpb
inc
lock
lret
push
das
jnp
repz
movsb
xchg
xor
fwait
sub
push
je
call
insl
xchg
or
jbe
syscall
add
imul
and
stos
push
push
cld
jb
xor
in
mov
ja
hlt
and
pop
pushf
sbb
outsb
push
add
dec
enter
out
pop
pop
cmp
inc
rcl
movsl
cmc
inc
aam
das
frstor
lods
pushf
ret
mov
adc
adc
mov
pop
fdivs
pop
jge
lcall
jnp
mov
jbe
rolb
add
cmp
repz
repz
jno
push
dec
mov
xlat
hlt
int3
stos
jmp
xchg
popf
jns
pop
add
into
test
jns
cs
or
scas
aad
mov
jge
add
push
leave
in
es
fwait
jecxz
bound
cmp
xchg
mov
sahf
dec
les
or
inc
ljmp
inc
adc
das
push
xor
dec
push
cs
xor
dec
or
cli
jmp
jns
sbb
lea
mov
cmc
cltd
jns
mov
cwtl
outsb
and
lahf
cmp
adc
adc
out
mov
jp
cwtl
popa
in
cmp
mov
push
dec
pop
scas
dec
pop
mov
out
sub
xor
add
insb
push
pop
scas
cmpsl
fs
and
xchg
mov
or
jns
mov
pmulhw
testl
int3
xchg
fsts
pushf
lret
and
outsb
mov
push
mov
repnz
mov
out
mov
and
outsb
push
cmp
ret
xlat
push
or
sbb
push
mov
pushf
pop
push
mov
add
mov
and
xor
negl
mov
popa
cs
inc
dec
scas
mov
out
mov
xor
pop
or
into
gs
sbb
jl
pop
push
push
add
clc
sub
test
and
push
rorb
xchg
jle
cld
mov
sbb
xor
or
push
popa
das
push
sbb
pop
in
jge
mov
nop
push
and
xchg
nop
pop
int
cmp
inc
mov
daa
sar
inc
stos
add
push
pop
cmc
cmpsb
pusha
jl
hlt
xor
gs
push
xchg
loopne
sarl
hlt
jae
mov
insb
fcoms
das
out
jns
fcomps
loopne
lds
mov
das
add
pop
pop
sbb
ja
add
mov
lods
mov
add
loope
stos
jno
adc
dec
push
add
inc
push
out
push
and
imul
pushf
adc
or
xchg
and
cmpl
mov
add
lret
scas
bound
lret
add
or
shl
dec
les
lret
sbb
lret
fnsave
ds
lcall
push
xor
pop
lea
lock
dec
adc
into
jge
and
mov
gs
les
test
outsl
cmc
add
dec
std
repz
das
ljmp
jge
dec
test
aam
sbb
test
mov
cs
cmp
mov
lea
dec
jmp
out
into
in
lea
mov
insb
inc
hlt
sar
inc
jge
mov
mov
movsb
arpl
sbb
or
dec
and
mov
pop
fldt
cmp
mov
push
pop
sti
mov
adc
aam
jne
mov
in
cmc
push
jp
and
into
test
outsl
fmull
mov
ds
cld
sarl
mov
jb
cmp
sub
sub
jno
dec
dec
inc
call
out
xor
leave
mov
xor
lds
inc
cmp
rcr
ss
xor
sub
fiaddl
xchg
incl
pcmpgtw
ret
cmc
sbb
test
test
insl
jns
mov
dec
jl
or
ret
das
push
mov
jb
dec
shrl
adc
push
sub
cmp
mov
and
incb
cmp
adc
xchg
inc
mov
fistl
insl
sbb
fsubrl
sti
aad
mov
loopne
outsl
sub
pop
or
or
cmp
xor
std
fiadds
loope
or
loope
and
jnp
dec
inc
mov
xchg
inc
mov
ljmp
mov
out
pushf
jecxz
mov
icebp
sub
lods
sub
cmp
jl
sahf
cmp
arpl
mov
fidivrl
mov
push
repnz
shrl
xor
das
sub
inc
sub
rolb
or
inc
repz
jne
gs
xlat
cli
test
sub
call
push
adc
mov
les
add
psrld
pushf
popa
jne
mov
imul
sub
xchg
mov
imul
push
arpl
das
int3
fs
loop
repz
sub
adc
adc
fld
dec
fnstcw
in
test
cmc
adc
inc
shrl
loopne
adc
or
mov
lret
or
shl
rorl
inc
xchg
mov
scas
movsl
dec
mov
iret
jle
jle
add
push
daa
sbb
adcl
pop
or
and
sub
repnz
cli
dec
xor
icebp
outsb
add
add
adc
mov
jae
shll
outsb
cltd
cld
xchg
xor
mov
lea
or
loop
insl
mov
mul
test
jg
jecxz
sbb
and
test
xlat
mov
in
add
xchg
or
mov
xor
lods
and
insb
aad
repz
mov
push
mov
cmpsl
xor
fildl
push
mov
mov
iret
mov
push
sbb
ljmp
dec
and
push
xchg
mov
add
mov
ret
dec
jle
fistps
mov
outsb
cmp
and
and
fistpll
cmp
sbb
bound
pop
push
repz
jecxz
jae
push
jg
rcrl
and
mov
or
out
jle
icebp
adc
cs
sbb
sub
leave
mov
push
fdiv
jmp
imul
mov
cmpsl
jb
in
jne
aad
lds
push
adc
inc
repz
inc
add
pop
jo
imul
out
int
or
mov
jmp
or
subl
shl
mov
push
and
jge
adc
icebp
sbb
test
enter
sbb
aam
addr16
enter
clc
mov
das
mov
into
mov
mov
or
mov
sbb
fcoml
pop
pop
popa
cmp
iret
ss
frstor
cmp
std
push
imul
adc
xchg
ret
xlat
and
test
xor
icebp
inc
inc
icebp
dec
adc
movsb
mov
je
xchg
xchg
out
shl
std
int
add
xchg
and
add
jge
or
xor
fs
outsl
test
jns
das
das
jl
out
out
add
jne
cmp
pop
ds
lcall
or
ss
mov
cmp
fsts
xor
mov
xor
or
dec
fwait
xor
push
mov
mov
std
push
sub
inc
inc
mov
jnp
push
xlat
movsb
fcmove
sub
xor
cmp
stc
fldt
hlt
pop
out
and
mov
test
dec
cmc
pop
xchg
adcb
enter
pop
sbb
ds
mov
pop
push
ljmp
dec
cs
outsb
cmp
push
xchg
fs
stos
adc
out
in
fs
insb
shl
push
ja
add
inc
inc
mov
jne
ret
pop
scas
bound
push
push
fwait
push
sti
call
movsb
lea
push
iret
inc
cmp
push
mov
and
shlb
jno
mov
inc
jae
imul
insb
cli
jno
lods
mov
sarb
pop
repnz
push
aaa
xchg
add
and
addl
and
pop
dec
clc
adc
add
xchg
ret
pop
mov
js
push
adc
jb
mov
xor
out
in
negl
push
andl
int
cmp
orb
fsubl
inc
push
xchg
lcall
scas
jno
xor
and
jno
mov
or
dec
movsl
ret
pop
cmpsb
cmp
mov
inc
jge
shl
add
dec
popf
jecxz
out
xchg
dec
mov
sbb
or
je
dec
push
lods
mov
movsb
mov
cmpsl
add
xlat
rcr
in
in
int
addr16
outsb
js
cmp
ss
jns
jecxz
mov
fisubrl
mov
xlat
push
pop
idivb
adc
fstp
subl
lods
aad
pop
adc
sbb
cmp
push
mov
push
cmp
push
adc
jl
sbb
dec
xchg
in
fisubrs
cld
fiaddl
mov
push
test
pop
jg
lds
insb
daa
inc
xchg
sbb
jge
ljmp
jmp
sub
dec
bound
or
sub
ljmp
fs
or
sbb
sbb
popf
dec
mov
out
and
inc
xor
sub
icebp
mov
pop
ljmp
push
mov
mov
addr16
mov
adc
xchg
sub
push
jecxz
popa
mov
jmp
jne
jno
mov
jp
push
dec
or
mov
into
ror
test
xchg
xchg
or
out
aas
jae
bound
push
ret
push
fistps
push
cmpsl
bound
lret
prefetcht1
pop
mov
sub
aam
push
pop
pop
cmp
push
aad
int3
movl
lds
scas
or
mov
pop
xchg
popa
jle
sbb
stos
or
adc
xchg
mov
call
dec
cmp
cmp
pushf
in
cmc
lahf
xchg
xchg
mov
push
push
add
and
pop
inc
add
mov
jns
daa
rolb
mov
adc
jmp
ret
pop
flds
xor
push
jmp
jmp
mov
test
push
xchg
mov
ja
xor
fst
xchg
movsb
push
aam
jo
loop
jns
insl
or
std
dec
cmp
ret
push
inc
sub
in
adc
pop
xchg
repz
sbb
outsl
shrl
cld
mov
mov
insl
aad
insl
test
ss
pop
scas
dec
es
mov
es
add
sbb
ja
pop
dec
and
enter
and
pop
in
fadd
jns
push
add
add
push
inc
sub
js
movsb
popa
mov
push
pop
cmp
in
int
jbe
xchg
xlat
jnp
mov
inc
iret
mov
pop
in
and
sub
inc
mov
outsl
scas
roll
jno
pusha
cmp
ret
mov
xor
jnp
or
fadds
pusha
lret
pop
iret
mov
stos
fwait
sub
push
out
insb
scas
and
push
push
cmp
mov
lea
insl
push
cld
ja
dec
fisubl
lock
in
je
into
add
sbb
cmp
out
jp
jae
std
xor
push
ljmp
adc
push
push
inc
jne
mov
mov
sbb
push
lahf
add
push
mov
sub
push
xchg
pop
jae
call
adc
add
das
and
clc
xlat
incb
in
pusha
sub
sti
inc
dec
into
jo
dec
in
xor
add
adc
jbe
js
sub
sahf
mov
push
fadd
clc
dec
mov
fisubrl
es
push
jbe
data16
push
icebp
scas
cmp
cs
rcrb
mov
mov
inc
out
dec
sub
into
inc
adc
lds
sbb
xchg
xchg
fwait
mov
roll
incl
pop
pop
mov
pop
insl
in
ss
lcall
pop
call
notb
int3
and
mov
popa
xchg
pusha
sbb
jl
out
mov
and
xchg
add
jl
sub
cs
and
aam
push
ret
pop
dec
or
fiadds
xchg
cmp
xchg
rorl
or
xchg
xchg
cmpsl
and
cvtdq2ps
das
fsubl
pop
mov
js
clc
fs
fisubs
es
or
decb
sub
sub
xchg
insl
int
movsl
jns
mov
jmp
lock
mov
rorl
push
lea
add
sub
ret
imul
cltd
rcrl
pop
lea
jmp
or
jl
lret
stos
gs
inc
sub
mov
sub
aaa
fisttps
jge
and
sbb
push
cmp
xor
subb
dec
fdivr
pop
mov
and
xchg
xchg
scas
mov
cmp
cs
cmp
aaa
xchg
mov
outsl
leave
mov
push
pop
cli
dec
lds
pushf
push
push
sbb
out
std
xchg
aas
sbb
int
test
in
fists
inc
aas
out
out
rclb
xchg
and
lods
out
dec
pop
in
xor
pop
push
mov
mov
es
jp
fmul
sub
mov
test
xchg
xor
orl
lds
mov
xchg
lock
sub
imul
pop
arpl
daa
out
xor
adc
in
int
lods
out
xchg
cmp
push
jb
xchg
jmp
push
arpl
pushl
jg
daa
stc
hlt
hlt
insb
aad
test
shlb
push
pop
cld
popl
push
mov
jg
mov
mov
jo
mov
xor
ret
lock
into
out
mov
sarb
in
fwait
pushf
mov
scas
enter
loope
or
pop
call
jmp
clc
insl
cltd
clc
shr
mov
insb
sub
sbb
cwtl
imul
push
push
das
cmp
in
addb
jne
aam
popa
push
lret
std
jb
adc
popa
stos
cmp
aam
popa
cmp
or
xor
aaa
stos
adc
jg
stc
or
pusha
scas
pop
mov
cmp
dec
and
jl
pop
ja
mov
mov
js
inc
movsl
pushf
cmpsb
mov
in
ret
stos
push
int3
mov
imul
loop
arpl
lret
xor
rol
les
mov
xor
xor
outsb
adc
sti
sub
sbb
inc
sub
shl
xlat
xchg
subb
mov
ljmp
insb
test
xchg
pop
fiaddl
xlat
push
subb
pop
insl
pushf
inc
addr16
in
dec
das
sbb
lods
mov
push
into
lahf
push
jl
push
daa
sub
dec
mov
sbb
lret
fimuls
dec
adc
adc
dec
add
xor
mov
incl
jl
popa
shrl
in
sbb
mov
nop
les
scas
dec
ljmp
cwtl
xchg
or
inc
out
sub
sbb
xor
ds
push
or
jae
movsb
mov
pop
shlb
out
mov
lahf
adc
dec
sarb
xchg
lds
xchg
loop
adc
loope
fwait
adc
sbb
sar
jmp
fiadds
inc
lahf
and
pop
fstpl
jmp
jg
cld
aam
xlat
cltd
cld
xchg
or
mov
inc
xor
pusha
sbb
lret
mov
scas
sti
mov
aad
std
lea
fstpl
shl
addr16
push
dec
into
mov
mov
call
push
adc
adc
sbb
outsb
loopne
fbstp
ds
mov
push
sbb
hlt
lret
imul
fiadds
out
pushf
stos
das
add
dec
data16
scas
fisubrs
and
dec
mull
das
test
or
jbe
dec
decb
cmpsb
ja
cmpsb
xchg
in
rcrl
mov
inc
xchg
ficompl
push
jp
popfw
stos
addl
push
ljmp
inc
cltd
lods
jnp
icebp
adc
dec
shl
mov
lret
mov
mov
push
aam
subb
dec
cmpsw
push
shl
or
sbbb
iret
mov
je
icebp
pop
add
iret
push
mov
pop
mov
and
in
cmpsb
movsl
jp
std
xchg
inc
or
push
pop
jecxz
add
add
out
and
or
loopne
push
aad
sahf
mov
inc
xchg
cmpsl
mov
jno
addr16
pusha
imul
push
aaa
or
dec
dec
jns
pop
jl
outsb
mov
rcrl
pop
in
dec
mov
inc
pop
mov
cmp
dec
and
add
jl
and
negl
cs
outsb
iret
sbb
test
cmp
pop
push
daa
jp
sub
mov
loope
loopne
fmul
pop
adc
adc
fsubrl
add
js
sub
js
mov
cmp
jmp
adc
in
jb
aas
dec
loope
js
xor
adc
test
xchg
data16
out
jne
stc
das
jne
push
jecxz
fwait
jae
pop
sbb
push
stos
mov
lds
push
pop
fsubrs
dec
pop
ja
sub
jb
stos
add
sub
lds
sbb
fidivrl
imul
sub
rcl
push
lock
lret
pop
iret
jb
and
xor
inc
and
test
pop
fcmovb
mov
popa
pop
xchg
jmp
sti
dec
ja
in
dec
push
loop
add
and
inc
das
jmp
push
xchg
xchg
pop
leave
imull
jbe
adc
aas
sarl
mov
mov
loop
movsl
out
stos
clc
insl
mov
and
add
in
lcall
imul
test
fidivrl
imul
mov
scas
and
ffreep
arpl
add
std
mov
cmp
mov
pop
cmpsb
mov
outsb
ret
adc
xchg
enter
daa
or
mov
dec
adcl
mov
jecxz
loop
ja
out
lcall
int
pop
lahf
daa
stos
sbb
mov
stos
xor
idivb
or
aad
shr
and
jno
dec
addr16
rclb
xor
rorb
cmpsl
testl
dec
inc
mov
ja
rclb
aaa
aaa
mov
and
cmp
add
push
cmp
shl
dec
dec
jne
push
push
sbb
lcall
pop
or
xlat
cli
loop
ss
push
mov
sub
rcrb
dec
adc
loopne
push
out
js
adc
fdivrl
dec
or
aam
or
outsb
testb
push
xor
mov
add
ljmp
pop
lcall
jo
dec
adc
rclw
adc
loop
das
xor
or
sbb
repz
ljmp
iret
pop
and
aam
rolb
sub
enter
nop
loop
inc
adc
add
popa
or
add
and
jbe
ss
fidivl
jae
jmp
in
xor
cmpsl
popa
or
mov
jnp
fwait
ror
mov
pop
ds
fstps
ss
ja
repnz
jae
testl
call
scas
repz
sub
popf
or
icebp
neg
push
lds
jns
push
clc
aad
cmp
aaa
lret
in
int
add
roll
fs
dec
inc
xchg
or
xchg
mov
test
lret
popa
xchg
lds
mov
jno
repnz
sub
pop
loope
push
mov
xchg
fcoms
ret
jl
cmc
not
adc
in
cli
sbb
aas
int
mov
jg
jnp
lret
pop
xor
mov
add
out
adc
adc
cmp
ret
stos
jg
fcomps
test
shll
mov
sbb
cmp
stc
pop
adc
pushf
inc
mov
inc
cmp
roll
js
pop
stos
stos
xlat
mov
aad
test
lcall
dec
jg
fwait
add
cltd
aaa
mov
loope
pop
push
daa
mov
cmp
popa
inc
enter
sti
pop
push
pop
ljmp
lods
jb
ffree
daa
mov
into
ljmp
add
add
fistl
leave
inc
and
mov
add
and
aaa
iret
push
fstpt
arpl
sbb
out
cmpsb
mov
test
pop
sub
addr16
sbb
mov
jno
xchg
mov
jmp
loopne
adc
mov
mov
push
int3
neg
xor
sahf
jmp
imul
sub
push
rorl
sub
add
add
jnp
sbb
rorl
popa
xor
test
mov
mov
pop
hlt
cmp
cmp
cltd
push
cltd
movsl
inc
xchg
sbb
inc
idivl
rcrl
cmpl
push
int3
rorl
push
mov
xchg
mov
adc
add
iret
lds
dec
mov
cmp
stc
inc
jnp
adc
mov
mov
adc
push
sub
movsb
aad
xor
jmp
push
jmp
mov
loopne
sbb
sub
sbb
push
xor
addr16
mov
lock
lock
lahf
adc
fsub
arpl
aas
popa
inc
arpl
mov
popa
movsl
xor
sub
mov
fcomps
xchg
outsb
mov
xchg
test
fdivrp
sbb
outsb
xchg
or
jb
adc
add
jne
dec
mov
adc
jae
jecxz
imul
jmp
adc
test
xor
je
bswap
push
add
cs
jg
fmul
rcrl
push
jge
fsubrs
push
sbb
int
dec
aam
bound
ljmp
fwait
push
es
addr16
mov
cmp
hlt
or
insb
imul
in
insb
hlt
mov
gs
fisubrl
and
jnp
push
scas
jecxz
cmc
ror
mov
pop
mov
xchg
fbstp
popf
rorb
sbb
ljmp
mov
dec
inc
movsl
mov
sbb
out
sbb
gs
or
dec
test
gs
int
adc
xor
fistpl
sbb
xor
inc
mov
jmp
cmp
inc
in
jecxz,pn
nop
or
mov
mov
cmpsb
cmp
adc
out
cmp
and
je
fcmovnu
subb
imul
jns
daa
pop
test
cmp
and
xorb
arpl
xchg
je
inc
xor
das
icebp
cmpsb
orl
push
mov
inc
xchg
es
std
ljmp
adc
shl
xchg
outsb
dec
pop
inc
stc
sbb
int3
sub
ljmp
test
mov
stos
loopne
outsb
jns
cli
andl
mov
pop
add
xchg
imull
cltd
push
or
repnz
ss
shlb
test
xor
add
cli
sub
cltd
mov
sub
jecxz
std
jnp
pop
pop
jo
daa
scas
test
fidivl
out
scas
int
and
stc
out
push
int
adc
cwtl
add
fwait
push
pop
mov
inc
int3
adc
push
int3
clc
mov
ret
jns
data16
inc
and
fldt
arpl
push
jns
ds
in
pop
jns
mov
and
xor
ret
xor
dec
jp
sbb
in
sbb
xor
in
fcomps
inc
test
pop
adc
xlat
lret
cmp
fistps
divl
lret
xchg
jns
popa
xor
movb
sbb
cmp
add
aaa
sub
pop
push
cmpsl
cmp
jmp
cmpsb
mov
add
lcall
push
lock
dec
cmp
jl
xchg
int
nop
jmp
pop
lock
or
aad
int3
xlat
test
ljmp
aam
scas
test
push
jno
shr
lea
imul
aaa
cmp
or
mov
pusha
hlt
jge
inc
xchg
mov
mov
mov
cmp
push
pop
mov
std
or
andb
outsl
das
add
pop
loope
jb
sub
mov
dec
sbb
mov
xchg
pop
jns
inc
dec
call
out
jne
prefetchnta
push
incb
cmc
push
cwtl
xor
imul
out
jb
inc
push
xchg
pusha
insl
jl
lds
test
jb
lret
inc
xchg
mov
cwtl
neg
sti
or
mov
outsl
ja
add
ror
xor
inc
jg
push
pop
push
mov
aas
mov
jno
jmp
dec
sbb
test
mov
pop
fs
cmp
cltd
cmp
cmp
imul
fmulp
sbb
pop
je
lods
push
iret
sahf
xchg
fs
push
add
dec
jae
loopne
lods
in
sub
xchg
icebp
mov
and
insb
add
pop
push
cmp
sarl
cwtl
adc
dec
sub
stos
mov
icebp
mov
sbb
jne
jge
and
inc
pop
push
jnp
out
dec
mov
addl
scas
xor
stc
pop
adc
cwtl
fnstsw
or
sbb
jns
scas
mov
mov
cld
push
arpl
lock
inc
xchg
inc
cmp
cmpsb
pop
mov
lcall
cwtl
je
mov
xor
push
lds
xchg
jmp
dec
es
inc
sbb
popa
pop
and
cltd
fstpl
sbb
push
xor
bound
xor
mov
jmp
dec
lds
adc
cmp
leave
cmpsb
pop
cmpl
dec
testl
sbb
movb
xchg
add
movsb
repz
sub
lea
add
cmp
sub
test
sbb
stc
icebp
xchg
mov
sti
xchg
out
movsl
pop
ljmp
dec
inc
pop
xor
mov
sbb
or
sti
cwtl
sbb
lock
aad
ret
cwtl
jbe
sbb
pusha
js
push
pop
sarb
stos
pop
cltd
sub
add
testl
enter
inc
xor
push
xchg
roll
scas
ds
lahf
mov
sbb
stos
fcom
sbb
out
out
mov
das
cmp
xor
mov
and
push
and
adc
xchg
cmp
scas
push
leave
push
arpl
mov
mov
dec
sbbb
ja
in
push
insb
adc
lods
xor
fcoms
addr16
aad
cmp
push
inc
scas
adc
ds
mov
push
in
mov
or
mov
sbb
push
pop
adc
pusha
push
cli
popf
leave
jb
cld
fcom
sub
lea
rclb
gs
mov
xor
xor
scas
test
lods
dec
rcrb
pop
push
inc
and
stos
sbb
call
pop
inc
xchg
cmp
call
lret
dec
push
xchg
mov
out
or
fisubl
jl
sahf
push
icebp
dec
mov
mov
mov
xchg
cs
leave
push
ds
pop
or
mov
xchg
insl
movsl
xchg
icebp
sbb
mov
fldl
push
movsl
jae
in
lret
mov
arpl
adc
dec
arpl
cli
xchg
sar
sub
add
test
test
in
mov
push
mov
jmp
pop
mov
inc
mov
adcl
fimuls
xor
jge
push
add
pop
adc
jecxz
fmull
mov
mov
fstps
nop
dec
loop
mov
mov
xchg
pop
lock
movsb
repnz
in
ja
mov
mov
pop
mov
js
and
inc
inc
test
mov
cmpsl
mov
inc
or
and
jle
inc
scas
jg
add
int3
movb
pushl
push
mov
inc
imul
sbb
lock
dec
mov
inc
mov
jb
or
inc
jo
lret
xchg
xor
pop
rorb
push
xchg
out
fidivrl
std
xchg
cld
ret
les
loop
xchg
adc
mov
and
sbb
cmp
imul
hlt
es
lcall
je
shr
cmp
cs
pusha
xchg
and
sub
fildl
cmpsb
sbb
rcrb
sarl
xchg
jo
pop
bound
test
jae
dec
mov
hlt
sbb
stc
incb
lods
mov
sar
pop
adc
pop
cmp
push
jbe
cli
pop
loope
mov
fs
sbb
adc
lea
hlt
movsl
push
xchg
pusha
addr16
mov
stos
lods
lock
sub
aaa
sub
push
fisubs
mov
jl
aas
mov
dec
popa
xchg
and
xchg
shl
push
into
sahf
out
sbb
add
jno
popf
icebp
leave
loopne
jbe
orb
push
rcr
aas
jnp
movsb
adc
cs
and
cmp
fstps
push
fbld
xchg
mov
fldt
mov
call
test
cld
jb
scas
and
pop
adc
outsb
xchg
push
push
xor
mov
fisubl
pop
sti
les
add
jnp
std
adc
jg
jecxz
inc
sub
lds
dec
sub
xchg
inc
jne
or
out
jmp
cmp
adc
aaa
scas
mov
jle
je
jle
orl
cmp
jl
cmpsl
mov
outsb
sbb
sub
push
lahf
bound
jmp
cmpsb
rcl
stc
inc
mov
xor
sbb
sti
mov
jns
repz
repnz
sti
roll
pop
pop
outsb
lods
xor
xor
push
jbe
aaa
sti
mov
push
mov
cmp
adc
jnp
or
ror
fiadds
jbe
xchg
lods
pushf
or
xchg
cmp
dec
je
sub
pushf
jbe
imul
out
cmp
int
es
movsb
testb
loopne
xchg
mov
out
add
add
ss
cltd
push
xchg
into
jge
sbb
mov
xor
cmc
lahf
mov
and
push
mov
int
sbb
dec
test
dec
push
dec
into
jge
movsl
lock
push
adc
daa
and
jg
stos
pushf
cltd
mov
adc
rcll
push
pop
cmp
inc
cli
stos
mov
test
scas
shll
jo,pt
repnz
out
insl
loop
repz
cmp
cmpsl
clc
xchg
push
ds
or
nop
sbb
sar
sarb
mov
icebp
sbb
cmpb
test
xor
or
pop
mov
mov
notl
and
jmp
pop
nop
iret
push
jno
addb
leave
xor
sarl
sahf
lret
sbb
and
adcb
pop
jo
inc
jb
test
adc
mov
dec
or
lods
pop
fsts
rorl
mov
inc
lock
in
inc
repnz
cmp
ficompl
jmp
scas
sub
xchg
jge
in
push
cmpsb
lods
test
f2xm1
xor
out
xchg
out
cmp
les
sbb
pop
xor
std
mov
fwait
or
into
sub
movsl
hlt
push
jge
push
das
fiadds
xor
icebp
push
and
orl
fistps
push
xchg
iret
mov
sub
ret
xlat
int
pusha
sbb
lret
xchg
inc
jp
adc
push
jnp
add
push
mov
add
mov
int3
js
out
add
adc
mov
jmp
je
xcrypt-ofb
cmpsl
sub
rorl
dec
xor
inc
pop
push
and
clc
mov
add
in
leave
cltd
iret
add
fisttpl
push
insb
sub
insb
xchg
aas
cmpb
ds
movsb
dec
inc
fists
or
roll
inc
ljmp
hlt
hlt
dec
outsb
and
and
dec
mov
jae
sub
lret
add
call
jle
aam
or
dec
aaa
aaa
outsl
jge
fnstcw
push
cmp
push
sti
out
mov
int
jecxz
sub
popa
int3
jge
clc
pop
jl
cmp
in
data16
lds
test
in
mov
aaa
pop
jl
jl
ljmp
adc
lock
lock
enter
and
sarl
addb
adc
test
cli
mov
mov
adc
xchg
into
jnp
mov
mov
inc
je
std
mov
mov
jp
adc
out
mov
nop
add
and
xor
test
xchg
out
in
outsl
xchg
cmpsb
jge
or
fimuls
fbstp
aas
sub
icebp
imul
mov
adc
out
popa
push
test
test
fwait
or
jg
or
aas
push
rcll
loopne
jb
mov
mov
icebp
aas
in
or
jnp
adc
pop
mov
mov
repnz
mov
adc
bound
inc
test
adc
out
jo
and
out
or
and
aam
fstpl
aam
add
testb
inc
push
jp
jmp
repnz
shr
inc
cmp
fstpl
je
sub
sub
icebp
jp
fstpt
lret
outsb
aad
inc
or
test
fxam
fldpi
xlat
xchg
xchg
jmp
cmp
in
test
cmp
or
mov
or
sarb
test
imul
dec
and
lcall
push
cmp
hlt
add
jmp
xchg
add
out
xlat
cmp
sbb
dec
pop
sub
sbb
shll
rcll
loop
incl
xor
in
xchg
push
fsubs
pusha
pusha
std
mov
lods
hlt
mov
mov
shrb
daa
ljmp
scas
xor
aad
sti
mov
call
add
aam
fwait
adc
push
xchg
fiadds
xor
cmc
mov
cli
iret
cmp
das
and
xor
mov
push
dec
push
pusha
inc
mov
and
xchg
push
int3
or
add
mov
mov
popa
and
fs
cmp
insl
nop
dec
daa
cmpl
jns
push
es
movsb
into
inc
sub
jae
adc
insb
and
jbe
sub
or
jb
mov
int
sub
lret
lret
loopne
push
xor
xor
stos
inc
dec
scas
icebp
scas
lahf
mov
xlat
pop
int
fsubr
adc
xor
inc
cmpsl
xchg
out
repnz
fwait
lcall
add
fsubrs
jbe
dec
cmp
and
aas
lret
pop
jmp
mov
outsb
dec
sub
pop
sub
dec
hlt
fdivrl
push
cmc
imul
mov
cwtl
adc
jae
dec
xchg
and
pop
inc
xchg
mov
jl
out
inc
shrl
les
fucomip
loopne
int3
loop
adc
daa
inc
push
fildl
pop
cmc
mov
popa
and
jge
pop
imul
out
mov
push
test
jp
out
mov
inc
mov
ss
out
fidivrl
mov
xor
arpl
mov
mov
cmp
push
add
dec
stc
inc
mov
and
bswap
push
test
out
jb
mov
pushf
xor
jle
inc
int3
clc
mov
js
movsb
gs
stos
sub
cmc
enter
adc
js
ja
adc
addb
fimuls
into
adc
mov
mov
sub
and
mov
pop
lds
inc
jno
add
xchg
mov
push
mov
jbe
cld
rcrb
das
and
movsb
cmp
es
popf
mov
lea
decb
loope
or
push
add
lea
and
cs
sbb
and
jno
mov
int3
mov
mov
fnstsw
adc
xorl
pop
fistpll
ds
test
addr16
xlat
cmp
sti
call
jl
xlat
outsb
movsb
stos
jnp
std
icebp
sbb
rolb
add
sub
mov
push
push
push
sbb
jl
mov
repz
push
xor
test
test
jne
mov
popf
sub
and
pop
sbb
jo
sbb
and
and
dec
idivb
cmp
push
mov
cmpsl
fisubl
sbb
lcall
aad
fnstenv
bound
es
popa
push
data16
ficoms
fadds
cltd
xor
repnz
sbb
loope
mov
cmp
xchg
dec
mov
push
xchg
sbb
in
jmp
clc
and
push
imul
fbstp
aam
push
sbb
stos
jnp
iret
cmc
mov
rorb
and
in
sbb
and
mov
jmp
lods
mov
xchg
lds
insb
daa
pop
scas
push
das
movsb
in
pushf
mov
push
cmp
xchg
xchg
in
jae
call
shlb
cmp
pop
dec
rorl
cmp
mov
xor
and
icebp
out
cld
aam
cmc
jo
adc
repz
mov
into
mov
or
pop
sbb
xor
pop
cmc
mov
int
xor
cmp
dec
cli
cmp
inc
es
mov
adc
jle
cmp
dec
fistps
pop
xor
mov
xchg
jno
shll
in
lods
adc
stos
sub
je
in
sub
out
into
pop
xchg
cmc
fldt
or
inc
mov
call
push
lock
push
aad
int3
out
test
testb
mov
daa
mov
addr16
push
jo
lock
lret
out
and
xchg
cmp
pop
pop
push
insb
lahf
xor
push
pushaw
movsb
mov
push
mov
mov
ja
ss
xchg
pop
je
mov
in
cltd
into
aas
out
push
stos
and
mov
push
push
add
iret
std
popf
jle
add
inc
shrb
cmp
mov
mov
sub
push
stos
loope
mov
mov
leave
jbe
call
adc
push
ja
push
mov
fiadds
xchg
xlat
repnz
shll
sbb
mov
sub
aam
mov
ret
fwait
jae
push
pop
in
clc
test
sub
in
or
push
cli
pop
jp
retw
mov
dec
in
sub
xchg
test
stc
scas
jbe
arpl
shl
xchg
sbb
loopne
sub
rolb
pushf
cmc
cmp
mov
xchg
leave
sub
sbb
dec
pop
jbe
dec
add
icebp
pop
mov
cwtl
arpl
pushf
aas
jno
mov
pop
loop
pop
ss
push
jo
jo
xchg
jo
cld
sub
outsb
mov
fdivl
push
sbb
clc
ja
in
jmp
inc
pop
int
cmp
idivb
lock
mov
or
out
xor
mov
shr
sub
dec
jne
mov
icebp
pusha
mov
cmp
jl
es
xor
jp
in
adc
pop
data16
dec
lret
dec
sub
mov
into
jae
imul
ja
add
inc
xlat
aas
aaa
addb
lods
into
sbb
xchg
fs
add
aam
cmp
pop
icebp
inc
loop
aad
pop
and
and
add
in
pop
mov
paddb
xor
and
rcll
mov
je
inc
in
mov
push
sbb
stos
subb
or
jp
data16
ja
xchg
clc
test
mov
iret
shrb
sub
dec
pop
pop
popf
mov
and
mov
push
data16
push
xor
in
adc
aaa
das
adc
mov
out
ret
pop
in
jo
hlt
pop
jl
sbb
add
xor
cmp
in
mov
jne
and
lahf
mov
aam
dec
out
inc
jge
mov
out
popa
cmp
xchg
dec
inc
pop
xlat
fidivrl
dec
xchg
sbbl
loopne
sub
push
xor
xor
or
jecxz
jns
rorl
jae
add
mov
popf
ljmp
orl
sbb
jl
lret
hlt
dec
gs
sbb
nop
nop
jns
scas
jle
inc
mov
ljmp
loope
or
and
xchg
pushf
or
mov
sub
xchg
sub
test
iret
test
xlat
out
frstor
mov
mov
iret
jns
adc
iret
fnsave
pop
iret
jbe
cld
leave
mov
loopne
fisubl
adc
cwtl
push
notl
add
mov
cmpsl
mov
inc
mov
xor
aaa
stos
and
cmp
jo
adc
mov
fsubs
sbb
cmp
xor
rcl
leave
sub
pop
push
inc
incb
push
subb
mov
jmp
outsb
xchg
out
fcompl
cmp
cmpb
aad
cmp
push
or
cmpsl
lds
mov
inc
jg,pt
jns
xorl
imul
out
or
xchg
rcrb
stos
and
cwtl
lret
iret
fimuls
loopne
adc
daa
imul
ficoml
or
pop
push
leave
sub
xor
or
es
pushf
rol
dec
addr16
push
fdivl
mov
add
push
xor
jge
in
loope
xchg
loop
add
pop
mov
dec
jno
push
icebp
nop
push
iret
lds
shl
inc
lea
out
ds
lret
es
xor
dec
add
adc
sub
aam
inc
pop
mov
mov
push
test
in
and
jmp
xchg
popf
leave
pop
movsb
mov
pop
sarl
mov
scas
cmpsl
hlt
mov
js
clc
pop
lcall
sbb
sbb
mov
push
pop
and
mov
xor
je
loopne
mov
out
scas
jnp
mov
mov
and
cmpsb
addr16
inc
push
push
jge
xchg
xchg
fiaddl
cmp
popf
out
adc
loop
or
xlat
xchg
jo
push
xor
ret
wrmsr
push
pop
insb
push
in
push
or
aam
fsubr
lcall
lds
lds
xor
cmp
test
lods
iret
movsl
das
cmp
in
push
push
lret
push
push
movsb
pop
orb
add
icebp
xchg
ljmp
xor
jbe
cld
mov
or
fsts
jle
inc
or
imul
xchg
jle
fsubs
and
in
or
mov
loop
sbb
add
mov
jmp
icebp
mov
cmp
mov
orl
lret
xlat
sbb
out
fidivrs
lods
inc
subb
cmc
inc
cltd
movsb
repz
dec
ret
cmpsl
and
mov
subl
stc
loope
popf
pop
loopne
movl
dec
pop
int
out
jb
dec
dec
mov
jae
dec
xchg
outsl
inc
dec
into
pop
xor
push
ficomps
cmp
sahf
cmpsl
pushf
cmp
aaa
add
xchg
dec
mov
lock
push
xor
jnp
ds
add
adc
xlat
mov
mov
dec
xchg
scas
enter
and
scas
adcl
mull
or
je
test
lock
out
lret
dec
js
push
dec
clc
mov
stos
clc
mov
daa
pop
loop
sbbb
dec
add
popa
cmpsl
jl
mov
movntq
pop
cli
sbb
dec
add
pop
cltd
aad
repnz
das
shrb
sub
and
bts
xchg
dec
mov
addl
outsb
repnz
dec
je
pop
int3
leave
dec
xor
xchg
mov
jecxz
add
mov
cltd
outsl
clc
dec
dec
sti
ja
mov
in
vpsrld
xor
lock
in
enter
cmp
or
sub
pop
cld
jl
lcall
pop
fwait
dec
jnp
call
add
push
adc
stc
xchg
call
pop
fucomi
inc
sti
pop
les
adc
rcrl
orl
lods
adc
stc
enter
pop
jp
sahf
push
jp
push
sub
ds
cmp
mov
sbb
jmp
sub
jae
or
jbe
push
fdiv
mov
add
insb
jae
iret
xchg
add
test
push
jbe
inc
std
cli
xchg
arpl
ret
andb
filds
jl
add
cmp
add
jns
test
mov
sub
ds
add
xor
cmp
sub
aaa
ret
cwtl
or
mov
push
mov
fucomp
leave
jbe
aaa
mov
scas
mov
shr
or
ss
xchg
clc
pop
adc
loop
arpl
sahf
lahf
pop
xor
mov
xor
fwait
dec
sub
xor
push
inc
pop
cmp
insl
imul
addr16
movsl
xor
xorb
in
add
dec
and
decl
mov
mov
jecxz
jae
pop
imul
or
sub
mov
mov
sti
mov
fstpl
stc
fucomip
sub
or
out
lcall
inc
pop
pop
push
ret
mov
ret
xor
clc
sarl
xchg
xchg
cmpsl
in
mov
pop
xchg
testl
mov
or
loop
cmp
cmp
inc
imul
fisttps
and
mull
inc
sbbl
fadds
pusha
cmp
cld
jl
mov
mov
dec
mov
mov
fld
cmp
out
xchg
int
push
dec
ljmp
jecxz
or
mov
add
mov
cmp
pushf
dec
jmp
and
sub
cmp
adc
jbe
jnp
jle
pusha
dec
enter
dec
rorl
inc
push
stos
mov
popa
test
loope
nop
scas
ret
or
sarb
jl
and
xchg
stc
add
movsl
in
rol
mov
adc
ficoms
or
in
je
pop
and
pop
sbb
bound
add
je
adc
xchg
pop
sbbl
xor
cmpsb
mov
lahf
loop
pop
mov
mov
idiv
mov
pop
pusha
xor
mov
pop
imul
mov
push
aas
or
pop
out
loope
imul
sbb
movsl
cmp
aad
int
test
inc
push
xchg
js
inc
je
cmp
mov
push
mov
adc
dec
inc
out
je
loopne
mov
mov
and
jle
shl
jno
insl
pop
xor
mov
andb
adc
mov
repnz
fists
adc
ss
stos
sbb
hlt
cld
loopne
icebp
movsl
loop
sbb
lods
hlt
ret
out
cmp
movsl
xchg
jns
xchg
inc
sub
pop
fs
sub
ret
daa
nop
inc
stos
xchg
or
cld
or
ret
cli
divb
mov
or
sub
pop
sub
popf
or
xor
movsb
or
shrb
mov
test
adc
mov
inc
pop
mov
mov
jg
lods
mov
sbb
ret
sahf
test
cmpsb
js
add
enter
mov
in
pop
mov
cld
xor
or
mov
add
sub
push
mov
dec
test
lds
mov
sbb
aaa
outsl
outsb
lea
xor
das
dec
pop
aad
mov
or
sbb
enter
or
mov
in
enter
test
inc
cwtl
lcall
or
push
int
and
cli
mov
mov
adc
jmp
int3
mov
or
repnz
mov
pop
and
lahf
inc
sub
push
push
push
mov
arpl
shrl
test
dec
cs
push
fsubrl
jno
out
push
mov
jbe
mov
outsb
or
aam
push
in
mov
mov
out
dec
mov
fisttpll
aad
mov
addr16
pop
adc
sbb
sbb
in
loopne
mov
push
lds
std
jb
je
sub
xor
sbbl
dec
sbbb
insl
mul
and
cmpsl
and
jno
inc
mov
cmp
imul
sarb
subb
aad
pop
push
xchg
lret
pop
int
rclb
xchg
mov
mov
sbb
mov
pop
pop
and
vmwrite
idivl
push
sahf
imul
or
pop
pop
push
mov
fildll
int3
mov
push
imul
mov
ss
sbb
int
repz
fs
add
cmp
mov
fsubs
cmp
dec
jmp
shlb
push
cmc
adc
mov
or
popf
pop
jge
jb
jge
pop
mov
dec
adc
add
movsb
push
ret
inc
sbb
je
into
test
xor
int
leave
pop
cmpsb
sbb
notb
call
mov
das
fwait
mov
lcall
in
xchg
cmpsl
aas
mov
lahf
cmpsb
fs
addr16
fwait
or
aam
aad
fldt
push
jnp
notb
pop
int
mov
in
mov
clc
femms
testl
lahf
lods
mov
test
fistl
xor
imul
mov
pushf
jno
pop
rcr
mov
or
scas
fsubrs
xchg
pop
mov
adc
repnz
je
outsl
pop
cmp
fiadds
sbb
mov
aad
std
cmpsb
push
dec
mov
icebp
adc
dec
insb
mov
adc
jnp
icebp
out
jb
push
jne
fwait
xchg
shl
cmp
das
sahf
push
insb
andb
mov
ffree
ret
mov
sub
arpl
call
adc
cmpsl
mov
imul
loop
and
ljmp
or
insb
fst
jl
movsl
fimuls
jecxz
mov
dec
jl
rorl
add
jo
jbe
arpl
mov
fstpl
sbb
fnstcw
pop
fisubrl
or
shll
pop
jns
scas
in
jnp
push
inc
lock
addl
fsubs
pop
xor
aaa
imul
dec
add
test
repz
ja
push
sahf
mov
andl
sbb
inc
out
test
pop
mov
scas
addr16
adc
pushf
add
sub
inc
fwait
jo
nop
inc
adc
mov
out
das
imul
jb
scas
add
inc
repnz
outsb
and
test
mov
push
addl
jle
movsl
cmc
lds
popa
rcl
add
mov
adc
outsl
push
roll
xchg
ja
fistpll
mov
clc
mov
sub
pop
pop
jno
inc
and
mov
scas
je
flds
pop
stc
outsb
outsl
mov
cwtl
xchg
lahf
jle
mov
cmpsl
inc
jg
mov
test
idiv
pop
clc
mov
xor
ljmp
or
fdivl
push
jo
xor
movsl
adc
lds
das
cmp
adc
movsb
add
add
notl
xor
sbb
movsl
shll
mov
lods
ret
hlt
rorl
fs
out
mov
loopne
dec
mov
sbb
cmp
jmp
scas
pop
mov
mov
lods
scas
pop
inc
xor
lahf
and
fwait
adc
push
icebp
ds
xchg
ffreep
adc
ljmp
mov
movsl
in
test
adc
and
pop
adc
cmpsl
mov
cmp
mov
lock
sahf
sbb
fists
fnstcw
in
mov
in
jae
int
mov
shll
test
xchg
sar
add
and
insl
stc
dec
pop
or
jno
pop
outsb
adc
out
mov
repnz
ljmp
push
jae
lods
dec
pop
popa
sbb
cli
inc
sbb
lods
loop
ja
std
mov
jnp
cld
pop
jno
out
mov
pop
xchg
pop
add
loope
jge
cmpsb
movsl
cmp
leave
aad
mov
jle
sub
xor
movsl
rcrl
aaa
xor
jno
xchg
mov
enter
jge
mov
and
push
fwait
adc
jnp
push
mov
xchg
lcall
iret
pop
adc
adc
sarb
loop
mov
jecxz
or
xlat
aaa
add
cltd
mov
out
cmc
or
add
loope
fstps
adcl
dec
out
enter
pusha
xchg
movsl
push
mov
aad
and
clc
or
movsl
icebp
decl
insb
jl
in
imul
outsb
fnsave
pushl
andl
sbb
iret
aad
insb
adc
loope
mov
lret
fisubrs
dec
shr
out
jp
cltd
cmp
aaa
lcall
repz
test
ja
push
jge
adc
nop
movsb
jbe
lea
mov
fs
rcll
pop
inc
cwtl
jp
jb
pop
mov
pop
jg
xchg
das
dec
popf
scas
dec
cmp
fstl
add
mov
cmp
out
leave
out
mov
orb
lret
mov
add
fisttpl
pop
inc
jne
dec
add
or
sarb
into
inc
dec
jp
push
loopne
dec
in
add
mov
add
xchg
aad
test
scas
push
jg
aaa
mov
push
sub
lods
fdivrl
shlb
orl
rcrb
movsl
mov
test
jno
dec
mov
cmp
gs
cld
mov
call
adc
es
stc
cmc
mov
imul
in
sbb
mov
loopne
sbb
test
sarl
scas
enter
insl
pop
aad
jecxz
mov
cltd
repz
dec
ja
cmp
jge
add
add
add
dec
out
out
ljmp
jmp
mov
clc
mov
cmpsb
sub
test
and
jecxz
popf
ljmp
push
pop
es
add
cmp
pop
pop
jg
mov
iret
shr
in
mov
lahf
push
das
lock
and
xor
daa
xchg
mov
and
adc
int3
cltd
cmp
pop
rcll
or
test
imul
jnp
jo
hlt
arpl
jg
les
mov
test
es
mov
xchg
test
ss
dec
adc
loop
addb
or
jno
leave
shlb
mov
adc
or
pop
ret
pop
lea
adc
pop
inc
pop
xchg
adc
sbb
push
mov
pop
mov
testb
imul
sbb
insl
iret
addl
mov
popf
push
xor
inc
stos
rcr
mov
push
or
sub
insl
fidivrs
sbb
out
push
pushl
cmp
insl
push
mov
in
sarb
inc
popf
pop
arpl
jmp
pop
bound
and
repz
mov
mov
aaa
bound
lret
scas
and
aaa
ds
mov
jmp
mov
mov
mov
inc
mov
pushl
icebp
pop
lea
sbb
pop
inc
sbb
xchg
imul
dec
fsubrl
xor
repnz
lds
push
xor
sbb
aad
lret
inc
nop
adc
mov
xlat
or
or
data16
rolb
mov
ret
sbb
and
fistl
lods
sub
sub
jge
xchg
jbe
push
sbb
mov
xor
shlb
jns
adcl
daa
lods
or
daa
nop
std
stos
rcrl
insl
das
pop
add
sar
add
in
repnz
cmp
pop
adc
or
test
int3
mov
or
xor
movsb
push
shrb
in
sti
sub
jne
and
xor
dec
pop
or
pop
sub
sti
std
mov
xor
mov
inc
and
push
pop
jns
ret
lea
mov
mov
daa
xor
gs
adc
jns
divl
cmpsb
push
adcl
scas
ret
jbe
je
fdivrs
imul
xchg
add
or
sbbl
aaa
adc
cmp
mov
imul
sbb
lock
xor
stc
sti
push
insl
cmpl
mov
addr16
push
push
lds
dec
add
cmpsb
movsl
jmp
jecxz
xchg
sbb
test
add
adc
jno
xlat
pusha
and
jge
imul
mov
sbb
mov
xor
je
iret
pop
cmpsl
lahf
je
stos
fdivrs
add
mul
fcoml
or
shrl
push
inc
jae
jle
or
sbb
andb
xchg
aad
mov
xchg
pusha
out
or
xchg
popf
mull
dec
mov
sbb
lahf
sub
aas
dec
mov
pop
int
fisttpl
xchg
sbbb
pop
cltd
mov
pop
cmp
or
dec
out
push
push
cmc
cltd
clc
dec
jne
mov
and
jbe
aad
cmc
sub
cld
cli
ds
and
sahf
ljmp
push
stos
sbb
dec
pop
xor
mov
orl
pop
and
xor
add
xchg
adc
rcr
pop
fldl
dec
test
cmpsb
xor
and
cmp
into
mov
dec
aam
mov
and
pop
out
shrl
jo
sub
ret
jge
popa
dec
push
jns
add
mov
dec
test
dec
inc
push
push
mulb
and
pop
inc
std
js
inc
inc
jmp
pop
shll
flds
out
push
mov
or
mov
sbb
roll
pop
pop
daa
movsl
lret
pop
xchg
or
popf
xchg
push
add
shll
and
shlb
mov
ss
jo
aaa
jp
jnp
pop
std
push
sub
mov
mov
mov
popa
xchg
adc
mov
xchg
js,pn
lock
cmp
into
dec
xlat
xchg
fs
negl
add
insb
mov
sbb
call
std
add
mov
push
sub
stc
sbb
mov
sbb
jp
fcmovbe
popf
mov
repz
add
add
dec
divl
into
data16
fwait
in
inc
addr16
dec
inc
lds
or
int
call
iret
cltd
sub
fisttps
stc
inc
out
xor
xor
mov
inc
xchg
mov
sbb
adc
sti
adc
sbb
xchg
jg
test
cmp
cmpsl
xchg
aaa
push
jp
dec
mov
leave
sub
cmp
mov
mov
loop
cwtl
dec
mov
shll
sub
aas
xchg
cs
xchg
adc
call
cmp
hlt
test
repz
sub
jmp
pop
sub
xchg
rorl
sub
ja
pop
mov
pop
imul
mov
mov
pushf
jecxz
sarb
push
push
leave
arpl
sub
data16
xchg
mov
cmc
filds
aam
sahf
in
pop
lock
mov
pushf
jg
sarb
jecxz
xor
and
fnstcw
or
sub
cs
mov
icebp
mov
jmp
pop
outsl
or
movsl
mov
shlb
cmpsl
inc
popa
pop
es
scas
xchg
and
mov
sar
sbb
push
es
sub
push
inc
nop
jmp
push
insb
rcrl
movsb
jne
imul
and
aaa
jmp
mov
fdivrs
jno
mov
repz
sbb
sub
dec
xor
inc
std
js
inc
je
cmp
test
call
cmp
mov
dec
sti
mov
ja
sbb
mov
loop
inc
sub
jl
les
aas
mov
sahf
ret
outsb
mov
jno
scas
add
dec
movl
mov
or
inc
adc
gs
aaa
jl
hlt
in
adc
repnz
mov
fcoml
mov
inc
fs
sahf
clc
inc
dec
dec
call
scas
mov
mov
jne
sbb
lock
dec
ljmp
int3
faddp
and
aas
mov
jl
pop
sahf
pop
or
push
ljmp
inc
fdivrl
mov
in
into
test
cmp
out
movsb
jle
sub
fdivrl
pop
xchg
movsb
sti
sbb
enter
sbb
push
adc
add
lods
out
fcomps
push
popa
sahf
cld
jecxz
ja
cmpb
enter
cmp
mov
daa
stos
ds
fcmovbe
out
enter
jbe
out
jmp
push
cmp
pop
rclb
mov
adc
repz
inc
or
xchg
xchg
push
cltd
mov
sbb
jne
cmp
movsl
adc
lods
aad
mov
data16
out
sub
mov
scas
ss
push
adc
pop
adc
iret
enter
dec
nop
mov
sti
mov
in
sub
push
sti
fiadds
inc
enter
icebp
mov
adc
pop
jle
push
push
shlb
add
or
or
fcomps
iret
cmp
mov
inc
add
out
pop
in
cmp
lcall
xchg
push
xor
lock
jbe
cmp
cmpl
or
mov
and
in
test
mov
dec
mov
sbb
push
fsubr
out
dec
imul
add
mov
daa
mov
xlat
xor
mov
fs
mov
repz
sarl
jge
cmp
and
inc
insb
dec
cmc
icebp
mov
in
adc
cmp
ljmp
mov
mov
cmp
ja
sub
sub
or
push
int3
test
bound
in
loopne
or
outsl
mov
or
and
scas
dec
mov
jp
and
pop
enter
test
cmp
jnp
push
adc
cmp
ljmp
cmp
lahf
push
sub
popf
mov
popf
cmpsl
and
or
pop
outsb
jnp
out
mov
and
push
orb
inc
sbb
sti
popf
pop
imul
sbb
xor
or
add
ss
mov
jb,pt
sbb
insb
xchg
adc
data16
std
jecxz
dec
cmp
test
xchg
mov
popf
ret
std
jp
mov
mov
or
movl
imulb
popa
pop
sarb
xchg
adc
popf
daa
pop
pop
fstpt
adc
popf
insl
icebp
or
cmp
cmp
in
mov
or
push
sub
in
push
add
nop
or
xchg
and
arpl
xor
aad
cmpsl
push
in
popf
xor
pop
mov
dec
and
adc
cltd
or
push
bound
and
fcomps
xor
bound
scas
out
pop
sarl
loopne
mov
xchg
xor
xchg
push
mov
xchg
or
pop
xorps
pop
pop
sbb
dec
movl
stos
mov
add
mov
add
stos
adc
xchg
pop
cltd
clc
and
push
clc
pop
pop
sbb
xor
sub
dec
cmpsl
mov
push
jl
mov
sti
add
cmp
add
xchg
pop
shll
aaa
aaa
sub
insl
dec
scas
mov
fucomp
out
and
fsubrl
pop
add
lret
jae
sbb
loop
cmpsl
pop
or
xchg
pop
pop
sub
bound
adc
or
aaa
jbe
cmp
decl
into
inc
pop
dec
mov
jb
mov
daa
mov
roll
push
dec
aam
and
mov
movsl
inc
scas
xchg
lods
aam
cmp
fmull
gs
cmpsb
movsl
inc
mov
cmp
insb
adc
clc
std
scas
subl
sbb
fistl
mov
dec
aas
jno
lcall
pop
idivb
xchg
shrl
mov
sbb
pop
sahf
fcomps
add
in
jo
ljmp
je
call
and
sub
sub
cmpsl
in
dec
into
dec
pop
cwtl
ficoml
mov
cltd
hlt
lret
mov
rorb
mov
shr
mov
dec
push
adc
cltd
or
dec
inc
mov
cwtl
test
xchg
add
sub
int
mov
sahf
adc
xlat
dec
xchg
dec
xor
scas
ss
mov
ljmp
pushf
mov
addr16
pop
mov
pop
test
sbb
pop
sti
push
aam
out
add
clc
frstor
pusha
add
outsb
shlb
fstl
cltd
sbb
icebp
jecxz
xchg
cld
pop
adc
lea
cmp
mov
int
filds
dec
popf
jns
add
test
inc
mov
jns
pop
repnz
inc
pop
xor
xchg
divb
xor
lret
mov
into
cmp
sbb
hlt
pop
add
xor
xor
jmp
insl
adc
call
dec
adc
xor
jno
hlt
mov
sahf
pop
fisttpl
xor
xor
pop
stos
mov
jp
das
xchg
adc
bound
mov
out
lret
dec
dec
inc
mov
xchg
loopne
test
cs
xor
daa
sub
jne
insb
push
cmpsb
ror
push
sarl
cwtl
sbb
push
cmpsl
fnstsw
imul
sti
pusha
sub
nop
aad
scas
mov
sbb
loope
cmp
aas
fmull
adc
cmp
stc
push
lea
pop
jns
lahf
mov
cmpsl
lret
add
or
add
enter
jg
pop
loopne
loope
aas
xchg
dec
xor
fisttpll
mov
ret
push
or
jl
mov
imul
repnz
mov
je
jg
sub
nop
outsl
aas
inc
xchg
cmc
mov
call
adc
sub
inc
stos
and
fsubrl
mov
mov
aad
push
cmp
clc
enter
cli
adcb
loop
outsl
sbb
and
mov
push
clc
mov
hlt
fidivrl
jg
mov
test
jl
loop
ljmp
and
push
gs
fidivs
and
in
insb
stos
stos
kmovb
je
cltd
inc
js
pop
dec
mov
xchg
or
lret
test
push
add
xor
jp
negl
mov
xor
mov
xchg
lea
in
jmp
scas
sti
lret
xlat
and
pusha
cmp
pop
adc
rorl
pop
inc
add
jno
jp
daa
jecxz
dec
ret
inc
jmp
rcll
dec
fwait
ja
mov
jne
fcmovnb
clc
cmpsb
rorl
push
in
jae
cmpsl
push
sub
push
adc
cmp
je
dec
xor
mov
out
inc
out
or
stos
pop
xchg
bound
xlat
xchg
hlt
jne
inc
negb
mov
decb
pushf
daa
ficoml
repnz
jle
les
push
xchg
mov
mov
cmp
jp
insb
and
mov
sbb
decb
add
or
mov
stc
lret
sub
daa
popf
nop
fidivrs
jne
jge
sub
mov
or
cld
xchg
xlat
cmp
movsl
mov
pop
mov
lods
lods
repz
iret
adc
fldt
data16
ret
add
jbe
xlat
inc
aaa
lret
loope
aad
inc
popf
dec
mov
mov
fs
mov
push
pop
scas
mov
xchg
xchg
sub
add
f2xm1
popa
gs
push
in
mov
pop
inc
fwait
sub
hlt
push
cmp
lods
aaa
es
out
push
rorl
add
sbb
xchg
cmpsl
aam
xchg
jl
mov
cmpsl
sbb
pop
mov
outsl
scas
sti
xor
jns
mov
clc
in
jb
mov
adc
vpaddb
enter
addl
jbe
sub
out
adc
test
lods
inc
dec
mov
cmp
push
jns
jno
dec
inc
cwtl
hlt
cmpsl
lret
popf
fisubrl
sub
cmpsb
arpl
orl
popf
push
cltd
xor
pop
lcall
movsb
jp
dec
clc
jae
jmp
mov
mov
out
push
dec
aad
lock
and
mov
mov
cmpb
cwtl
stos
mov
outsb
and
mov
scas
neg
arpl
divl
insb
jne
inc
fistpll
sbb
imul
idivl
push
ljmp
mov
dec
into
sarl
lret
ljmp
stos
popa
repz
adc
xchg
scas
jp
lahf
xchg
movb
xchg
call
fidivrs
adc
jg
mov
jmp
xchg
or
loope
pushf
mov
ss
jae
decl
cltd
in
adc
lahf
pop
mov
ss
xlat
jge
mov
out
jmp
or
mov
jns
adc
sbb
iret
inc
push
add
fcmovnu
inc
xor
sbb
dec
mov
pop
ds
rcrb
cmpb
test
xchg
call
popf
stos
push
xor
or
xchg
pop
cmpsb
sbb
fsts
xor
popa
in
inc
sarl
mov
push
nop
xor
in
pop
cmpsl
sbb
nop
push
scas
jge
stos
hlt
adc
mov
or
mov
mov
pusha
inc
pop
fstl
mov
mov
mov
xchg
ret
add
xor
cmp
es
ja
ret
andb
jo
insb
jle
addr16
sbb
pop
incl
or
pop
clc
and
xor
lret
and
neg
push
aam
imul
movsb
es
push
cmp
inc
aaa
mov
out
or
xchg
ffreep
mov
movsl
and
xchg
cs
mov
push
popf
jbe
pop
ja
adc
mov
rclb
lock
scas
xchg
pop
jmp
mov
mov
mov
cmp
pusha
mov
jne
imul
ret
in
jae
dec
test
mov
add
dec
adc
sub
xchg
in
pop
data16
mov
decw
dec
jecxz
push
leave
adc
xor
sbb
adc
int3
xchg
xor
mov
rcrb
popf
test
std
int3
inc
xchg
mov
sbb
inc
mov
push
sbb
xor
mov
cmpsl
mov
dec
insl
sbb
ficoml
cmp
test
cmp
vpcmpeqd
shll
or
push
out
sbb
outsb
mov
push
mov
mov
pop
psubsb
ja
je
jecxz
pushf
xchg
sub
adc
pop
xor
pxor
jmp
pop
mov
dec
js
inc
cltd
inc
ss
sub
adcl
loope
pop
pop
aam
mov
in
cli
cwtl
out
mov
pop
mov
es
sbb
adc
stc
filds
pop
sub
pop
jb
mov
in
ja
or
cld
inc
mov
int3
sbbb
fwait
in
sbb
aaa
insl
les
fcomps
push
adc
and
cmp
fldcw
jnp
or
fisubrl
or
movsl
inc
lret
pop
pop
mov
cmp
jg
ret
adc
pop
outsb
mov
mov
movsl
fbld
das
shrb
sbb
xchg
cwtl
call
pop
outsl
dec
hlt
and
dec
mov
sahf
fbld
or
xchg
mov
mov
popa
shr
dec
out
cmp
outsl
dec
popf
loope
mov
xchg
sti
dec
cmp
loopne,pt
jae
subl
pop
xor
add
mov
push
push
xchg
add
mov
adc
loopne
sub
mov
jg
inc
or
int
imul
mov
pop
arpl
push
iret
xor
fstps
jmp
pop
mov
insb
mov
lods
or
sub
dec
pop
ret
sbb
in
lahf
mov
repz
arpl
push
lahf
gs
or
push
das
mov
jbe
sbb
or
fstpl
push
jmp
out
fidivrs
inc
jp
cmp
jl
dec
or
adc
push
ret
sar
lea
mov
sub
mov
push
sarl
push
inc
lahf
jo
popf
or
mov
sub
shrb
mov
cmp
xchg
popf
inc
dec
inc
imul
aas
ret
adc
addr16
inc
xchg
xchg
xchg
dec
lahf
mov
sub
test
jns
mov
push
fildll
pushf
outsb
mov
pop
mov
call
addb
xor
pop
push
ja
jge
mov
cmpsb
arpl
jbe
jns
push
rolb
outsb
mov
cmp
sub
pop
xor
fwait
pop
mov
cmpsl
repz
mov
sar
adc
mov
sti
aas
imul
add
js
inc
call
inc
add
xor
in
popf
shll
cmp
mov
or
sahf
mov
shrl
insl
mov
mov
or
xor
cmp
ret
leave
adc
adc
lods
push
movsl
jge
dec
pop
pop
imul
lods
sub
lods
addr16
mov
addr16
pop
and
cmpb
sti
add
cmp
out
push
aad
pop
mov
iret
gs
imul
fwait
hlt
cmc
mov
arpl
mov
inc
mov
mov
loopne
dec
mov
idivb
es
loop
scas
push
aas
jp
fucomp
mov
scas
pusha
xchg
jp
cmpsl
sbb
dec
leave
out
add
fidivs
jmp
mov
jge
std
sbb
mov
or
xchg
imul
shrb
jmp
jp
mov
in
and
mov
jp
fmull
xor
push
in
mov
jo
sub
jae
push
mov
lcall
leave
xchg
aas
in
cmp
pop
and
stos
and
and
into
inc
mov
and
add
jl
mov
add
jno
pushl
adc
mov
std
sbb
loope
lock
scas
push
repz
je
jmp
push
ja
inc
scas
push
xor
cmc
sbb
sbb
outsl
mov
aad
ja
jnp
cs
jno
mov
jnp
sub
imul
subl
cmp
test
stos
adc
addr16
fsts
jl
mov
sbb
mov
and
jno
xchg
mov
jge
pop
sub
pop
loopne
xchg
addr16
lret
lahf
ror
mov
sbb
mov
enter
test
xchg
jb
dec
enter
test
imul
push
mov
sbb
imul
iret
repz
and
popa
add
mov
lods
aam
hlt
dec
xchg
jns
lret
push
rorb
pop
mov
sbb
lret
inc
out
lea
xor
ds
xchg
test
jbe
adc
sbb
pop
sbb
push
or
mov
xchg
cmp
call
out
scas
push
cltd
mov
and
popf
sete
es
je
fwait
cwtl
cmp
out
dec
xor
mov
mov
lret
test
and
and
cmp
rorl
push
sarb
scas
mov
sub
lds
and
cmp
in
jmp
clc
or
pop
lret
out
mov
out
jle
testb
cmpsb
add
sub
or
xchg
jl
mov
push
jo
daa
ret
push
test
ret
dec
cmp
mov
xchg
push
sar
fsubs
aaa
imul
pop
rcll
lahf
push
jbe
mov
leave
fsubl
cmp
pop
push
push
int
push
add
lcall
and
or
repz
call
lods
xlat
js
mov
and
sbb
mov
lds
cmpsb
push
xor
cmpsl
sbb
cld
pop
jmp
pushf
fadd
jg
push
lods
dec
xchg
inc
cmpsl
lods
dec
and
mov
pop
movsl
jmp
lea
cs
fmulp
sub
pop
mov
repnz
test
lods
ss
insb
outsl
and
shrw
cmp
leave
and
nop
jmp
mov
stc
fnsave
inc
push
in
jb
iret
fdivrl
pop
jge
cmp
int
pop
adc
xchg
popa
out
fs
js
fdiv
xchg
sahf
fisttpl
and
es
call
mov
and
mov
push
insb
jne
je
adc
aad
push
pop
cmp
lcall
xchg
sbb
outsb
sti
adc
mov
int
stos
sbbl
xlat
add
sahf
out
add
mov
mov
push
xor
jne
das
dec
dec
inc
inc
fsubl
popa
pop
mov
testl
fs
mov
int3
stc
cwtl
xchg
sbb
jns
dec
stos
mov
or
jle
adc
push
jbe
test
adc
adc
out
jmp
repnz
insl
xchg
imul
inc
cltd
mov
push
mov
into
jo
fwait
sbb
dec
insb
clc
jge,pn
xlat
xor
cmpsb
fisttpl
sub
mov
xchg
xor
leave
mov
pushl
sub
test
ror
jmp
outsb
jle
test
mov
jecxz
and
sub
jb
into
loop
jmp
int3
inc
cmp
push
jnp
test
and
and
loope
cmpsl
into
and
lcall
mov
aad
rorl
push
test
or
insb
out
or
pop
jmp
or
push
push
leave
mov
dec
jnp
sub
outsb
fsubs
and
adc
push
xchg
xor
xchg
xor
incb
jp
dec
addr16
pop
shr
in
test
pusha
adc
mov
mov
dec
cmp
pop
stc
add
fstpl
and
mov
push
cs
sub
mov
inc
imul
cmc
daa
xchg
sti
out
out
rep
imul
test
lock
fsubrs
dec
mov
mov
in
adc
leave
std
repz
add
inc
push
inc
test
lock
and
push
fidivrl
fisubs
jmp
jne
xor
ret
gs
ja
rcrb
push
jl
stos
loopne
jmp
mov
adc
sub
jge
icebp
das
cmpsb
mov
loopne
les
dec
ret
les
icebp
inc
addr16
lods
test
sub
add
es
jne
ds
jo
and
ret
push
fwait
inc
push
mov
enter
pop
sub
xor
repz
jmp
shlb
mov
sbb
aas
mov
mov
xchg
dec
mov
cli
clc
sahf
xchg
lds
sbb
lret
pop
repz
ss
dec
pop
xchg
jp
mov
jmp
cmp
aas
jbe
dec
jecxz
gs
sbb
ljmp
sub
dec
jmp
arpl
or
imul
adc
jae
lock
adc
push
jg
pushf
test
insl
push
inc
subb
scas
inc
add
sbb
push
data16
rep
cmp
dec
mov
ljmp
ficomps
imul
add
aas
daa
hlt
inc
jecxz
mov
fdivp
movsl
mov
pop
xlat
ffreep
inc
xor
and
popa
mov
jno
mov
or
cmpsl
hlt
pusha
popa
pop
push
jne
and
js
cmp
fbld
ss
and
xchg
cmp
mov
mov
mov
adc
jl
sbb
sahf
rclb
add
push
in
mov
nop
mov
cmp
xor
out
fimull
pop
jp
sbb
inc
into
cmp
or
and
cs
inc
out
pop
pop
adc
pusha
xchg
xchg
dec
mov
xchg
movsl
dec
mov
call
stos
test
leave
dec
xor
mov
repnz
jmp
insb
es
push
loop
fiaddl
ret
mov
call
or
adc
push
and
adc
sbb
jnp
lret
jl
jns
inc
dec
push
pop
jnp
lfs
mov
aaa
addb
cmp
outsl
mov
aad
xor
rcr
add
nop
lret
xchg
movsl
imulb
jg
mov
sub
lret
jae
jnp
pop
ja
dec
and
dec
jge
xor
fstps
jae
sub
push
sub
pop
mov
cmc
stc
pushw
jbe
jl
mov
pop
cmp
and
xchg
push
movsl
pop
cld
stos
sbb
jle
jge
imul
xor
stos
jbe
jnp,pn
mov
lods
push
xor
ss
jnp
lock
jno
lret
fisubrs
rcl
xchg
adc
pop
into
adc
fcom
pop
sbb
fcmovbe
xchg
lahf
mov
test
jbe
jmp
ret
movsb
inc
popa
cltd
xchg
insl
test
clc
test
jae
push
daa
in
loope
cmpsl
inc
cmc
jnp
mov
pop
gs
cmp
cmp
xchg
xchg
outsl
orb
cld
sub
test
jns
orl
xor
mov
jg
stc
lret
push
push
mov
add
mov
mov
mov
mov
push
nop
xor
cwtl
push
sbb
das
fcompl
or
test
push
mov
mov
push
call
pop
mov
popa
mov
cmp
add
in
xor
cmp
cmp
cmpsb
or
pop
aas
pop
jno
in
insl
popf
mov
ss
and
mov
inc
push
int
push
mov
dec
xchg
imul
or
cmpsb
cmp
int
mov
sbb
stos
add
je
cmp
mov
pop
lods
rorb
mov
es
rol
mov
pop
je
mov
loop
pop
lock
nop
adc
mov
scas
push
inc
pop
aam
add
iret
pmaddwd
add
movsb
scas
inc
inc
mov
mov
and
xchg
gs
xor
pop
add
pop
sub
idivl
scas
mov
inc
in
and
in
mov
sub
add
xchg
xchg
lahf
mov
rol
cmp
cltd
out
ret
sbbb
pop
sbb
imul
push
fldcw
jo
sbb
movsl
in
ret
sub
jmp
stc
test
push
xchg
jmp
sub
cwtl
dec
ffree
dec
mov
xor
or
push
sahf
cmp
jmp
cltd
mov
jg
stos
loopne
pop
fidivl
pusha
scas
sahf
push
push
andb
pop
roll
rclb
mov
addl
lds
ljmp
fdivrs
fadds
push
pop
cmp
jnp
pop
clc
movsl
pop
out
mov
fwait
jp
mov
rorl
sbb
shrb
orl
mov
lret
shlb
mov
jge
xor
arpl
or
add
dec
and
loope
mov
jne
inc
mov
out
adc
dec
jbe
add
pop
add
add
sbb
shll
in
addr16
xor
movsl
pusha
lret
xor
cs
pop
cmp
jp
orl
xchg
std
mov
daa
bound
and
cmp
xchg
pushf
and
add
pusha
sbb
aaa
xchg
iret
adc
dec
inc
pop
lods
test
mov
addb
imul
mov
push
pop
mov
mov
lret
push
pop
mov
in
jg
add
add
mov
mov
ficomps
es
repnz
dec
xchg
add
cmpsl
push
jbe
in
adc
jne
xchg
mov
js
aas
scas
mov
pop
shl
clc
test
loopne
pusha
dec
mov
cwtl
jp
adc
es
mov
loop
fwait
inc
jmp
lret
pushf
pop
mov
scas
and
push
rorl
out
stc
enter
inc
jmp
movsl
mov
test
out
and
into
mov
cmc
pop
movsl
push
fsubs
rcl
jecxz
push
fbstp
test
jge
pop
les
push
lds
das
insb
icebp
pop
inc
pop
loopne
notl
cli
lock
pop
push
pop
fs
test
jg
gs
or
inc
dec
inc
xchg
add
xchg
cmp
fsubs
pushf
insl
js
jo
enter
aad
dec
push
jbe
adc
sub
rorb
pop
out
cmp
fsub
xor
jne
push
sub
test
mov
mov
xchg
std
adc
lods
scas
scas
pop
or
push
std
cmpl
inc
push
jb
xchg
lcall
insl
mov
movsb
push
cmpsl
rcll
gs
inc
sbb
jno
sbb
jb
outsb
add
mov
cmpb
add
mov
incl
or
mov
ljmp
dec
inc
js
jns
add
or
loop
push
push
cmp
pushf
sbb
and
jecxz
sbb
andl
lcall
and
lret
movsl
scas
lods
dec
mov
rcrl
and
cmpsb
jae
hlt
aaa
leave
test
cld
xor
sbb
out
xor
test
inc
mov
cmp
sub
mov
pop
js
dec
mov
mov
fildl
ljmp
cmp
jo
and
imul
pushf
ret
cli
cs
out
mov
or
push
int3
stos
or
addr16
sahf
popa
pop
loopne
push
sbb
inc
imul
sub
inc
cmpsb
imul
lcall
inc
cmp
sub
cmc
and
sbb
cmp
dec
mov
xchg
jo
daa
pop
mov
sbb
sub
test
sbb
in
mov
repnz
stos
cmp
mov
xor
cmpb
addb
and
int3
aaa
push
adc
sub
call
add
fdiv
dec
addr16
add
push
negl
loope
dec
das
pushf
lock
jb
mov
mov
inc
push
jp
fistpl
push
sbb
stos
sub
sbb
xor
std
jb
add
cltd
pop
test
scas
sub
or
cld
lods
dec
int
jae
testw
lret
jno
and
fcom
sub
dec
outsl
movsb
jp
aaa
push
movsl
lcall
cli
fistl
test
repnz
dec
arpl
lock
test
pop
pop
xchg
pop
mov
mov
sub
stos
jb
pop
mov
ja
pop
sbb
shrl
dec
lock
xchg
inc
dec
mov
add
mov
mov
stos
and
or
xor
or
or
pop
mov
fwait
rol
xchg
ja
aaa
clc
je
mov
adc
push
xor
shr
std
dec
push
lcall
fs
cmp
sbb
xchg
inc
scas
add
adcb
xchg
stos
push
xor
lcall
int3
and
dec
sti
adc
pop
push
popf
movsb
push
sub
sub
outsl
aad
mov
xor
lcall
loope
inc
aam
mov
imul
rolb
jle
dec
mov
sub
add
iret
mov
dec
lods
mov
int
mov
leave
or
cmp
inc
adc
idiv
ret
inc
shl
pop
aaa
loop
jg
cmp
in
adc
cmc
xor
ret
cmp
pandn
xor
cmp
or
sbb
scas
mov
pushf
or
mov
and
cmp
lock
xchg
ret
in
add
cmp
scas
std
cltd
cwtl
arpl
xchg
cld
pop
movsl
jmp
mov
out
or
out
cmc
aam
shrb
ja
sbb
js
xor
aad
jns
ret
fiaddl
add
pushf
jmp
or
inc
adc
mov
shll
testb
hlt
arpl
adc
xchg
scas
mov
gs
ret
and
push
jecxz
mov
jns
mov
outsb
ret
mov
idivl
out
dec
iret
xor
inc
inc
jmp
adc
dec
cld
add
inc
push
repz
jp
in
inc
arpl
mov
outsl
aas
mov
mov
lcall
sub
xchg
jl
jmp
sbb
aaa
ret
push
pop
in
arpl
and
and
xlat
popa
outsl
daa
cli
or
pop
pop
js
mov
aad
xor
and
cmc
xchg
test
mov
or
jg
or
sbb
xchg
mov
ret
in
sbb
jb
mov
loop
lcall
jnp
stos
sti
ljmp
inc
mov
les
xor
pop
mov
je
inc
jbe
xchg
dec
gs
add
incb
pop
std
cmp
push
lahf
push
leave
xchg
cmp
and
aas
lods
and
xchg
add
sbb
and
mov
mov
mov
sub
dec
in
aad
cmp
pop
pop
push
push
enter
jmp
int
sub
test
and
or
fst
or
push
jbe
add
test
loopne
jb
in
out
mov
adc
jl
je
push
sbb
dec
loopne
push
pop
sahf
test
sbb
movsb
shlb
mov
loop
nop
add
inc
ljmp
inc
ret
jecxz
ret
out
adc
lods
mov
sub
insl
cs
je
das
loope
imul
loop
xor
cmp
xor
lds
inc
fs
push
mov
inc
popa
mov
inc
push
adc
mov
mov
test
inc
stos
jmp
bound
popf
and
out
fnsave
idiv
mov
xchg
inc
fildl
or
std
or
movsl
adc
cmpsb
mov
xor
add
push
and
cmpsl
es
ja
mov
cmpsb
pop
mov
xor
out
test
shll
imul
lret
push
loop
aaa
cmp
ret
outsl
popa
insb
xor
arpl
mov
mov
xchg
push
xchg
dec
jp
pop
sbb
mov
pop
in
sub
pop
inc
sbb
mov
ret
xor
orb
sahf
fisubs
pop
ja
sub
repz
xor
ja
cld
sahf
jle
imul
test
push
fdivs
stos
outsb
ret
fxch
popf
fs
sbb
add
notb
pushf
cmp
xlat
mov
nopl
leave
mov
ss
mov
cmp
adc
jne
mov
cmc
dec
mov
in
push
jnp
adc
dec
into
inc
test
jae
sub
mov
push
orb
fists
inc
mov
cmpsl
push
push
or
ret
mov
in
imul
and
jmp
sbb
mov
les
jmp
mov
test
clc
es
mov
testl
pop
dec
cmp
add
cmpsb
ret
push
inc
sub
dec
mov
insl
push
push
les
adc
lret
scas
sbb
repnz
sahf
mov
add
adc
shll
xor
enter
cwtl
mov
notb
jl
mov
out
aaa
cmp
xchg
je
sbb
or
jns
clc
sbb
int3
push
add
add
inc
add
aam
jmp
sbb
movsl
mov
dec
in
dec
add
jb
pop
push
in
xlat
push
adc
adc
xor
repnz
mov
mov
cltd
popa
out
repnz
out
cmpsl
imul
jg
mov
pop
jp
icebp
add
push
and
adc
in
test
inc
fnstsw
or
jmp
daa
xchg
mov
jecxz
jl
or
mov
mov
mov
add
js
push
push
fiaddl
stos
ret
jle
pusha
int
xor
into
inc
in
push
jbe
lods
pop
or
stos
jno
cmp
push
fs
pop
add
movsl
cmpsb
and
cmp
enter
repnz
cli
orb
mov
adc
clc
or
leave
imul
jl
fwait
inc
imul
dec
and
jmp
xor
pop
inc
subb
fcomp
imul
or
stc
aas
cmc
xchg
lret
push
sub
decb
inc
jne
jnp
mov
lret
rorb
jmp
add
insl
inc
push
push
xor
mov
pop
xchg
pand
jnp
jno
inc
aam
pop
gs
inc
scas
jns
sbb
pop
jmp
or
and
sbb
xchg
mov
xor
jbe
jecxz
xchg
pop
add
pop
out
mov
mov
mov
inc
dec
and
les
pop
mov
lock
les
push
add
mov
inc
filds
std
arpl
jp
je
shr
bound
test
xchg
cmp
cmc
lods
pushf
cmc
fcmovb
fists
ljmp
shrb
jne
dec
out
push
pop
gs
xlat
popf
int
mov
sarl
push
ret
xchg
push
xchg
subl
push
out
ficoms
or
inc
mov
xchg
mov
aaa
mov
and
or
shlb
xchg
subl
push
cli
mov
sbb
push
sbb
jb
sbb
add
xchg
adc
sub
mov
outsl
xchg
test
mov
les
int
movsl
xlat
push
loope
js
add
cmp
ret
sub
dec
pop
jno
sub
decb
sub
movhlps
shl
repnz
dec
imul
xlat
repnz
push
jp
push
iret
ret
fs
clc
adc
test
rdpmc
cmp
dec
jl
stos
jno
std
nop
fsubrl
pop
sbb
pop
xor
cmp
jp
mov
sub
xchg
or
jle
mov
imul
mov
dec
pop
mov
enter
fisubrs
call
cmpsl
cmpsb
mov
pop
lock
adc
xchg
cltd
pop
pop
outsl
in
nop
je
ss
xor
inc
pop
in
arpl
jns
pop
mov
outsl
call
cmpsb
loop
in
sbb
dec
pop
fistl
dec
cli
push
fsubr
sarb
fisubrl
xchg
rorb
adcl
push
jmp
mov
les
outsl
scas
xor
cmpsb
int
ja
inc
sub
test
in
jb
movsb
sbb
add
adc
shr
adc
push
and
sub
ss
mov
pushf
sbb
mov
in
sbb
popa
mov
push
aam
sub
mov
int
sub
lret
dec
in
test
inc
dec
loope
shll
or
cmovo
and
sub
lahf
xchg
arpl
xor
orb
loopne
cmpsl
and
jo
pop
call
rolb
mov
stos
adc
in
inc
pop
cmp
dec
lahf
push
lcall
inc
xchg
dec
xor
ja
and
outsl
rcrl
mov
inc
rcl
bound
mov
and
mov
vmwrite
adc
in
ret
cmp
and
jb
dec
movsb
outsl
xor
adc
std
lret
mov
mov
lea
mov
fchs
pop
fs
cmpsl
inc
xchg
mov
mov
out
aas
std
ss
popf
pop
push
enter
cld
and
rclb
shll
push
aad
mov
es
pushf
cli
mov
mov
sub
gs
loopne
ss
sbb
jge
push
jg
shll
jge
in
dec
cmc
insl
inc
mov
outsb
aaa
in
pushf
cmpsb
mov
dec
jmp
mov
pop
std
dec
incb
pop
push
adc
cld
movsb
sbb
jns
xchg
xchg
or
push
lcall
sbb
push
das
or
jb
xchg
inc
sbb
inc
adc
lods
xchg
aad
add
dec
movsl
xor
popa
ret
mov
mov
in
cld
mov
dec
cwtl
in
lcall
sub
imul
data16
iret
mov
cld
lods
mov
jae
adc
push
xchg
jns
push
fcos
add
in
push
subl
xchg
repnz
leave
lret
mov
xchg
addr16
pusha
push
mov
mov
dec
jbe
mov
mov
and
pop
fucom
mov
test
adc
adcl
adc
cmpsb
mul
lea
sti
push
fidivl
orl
shrb
movsb
popa
xchg
mov
xchg
sub
rolb
test
int
jecxz
repz
clc
or
ret
xchg
xchg
xchg
std
xchg
xchg
xchg
hlt
pop
cmpb
mov
dec
mov
flds
lods
or
mov
sbb
jns
repnz
push
aas
fidivs
sbb
lock
pop
test
xchg
out
outsl
rcrb
and
fsubrs
xor
pop
mov
daa
fsubrl
stos
lahf
or
xchg
jb
xor
movsl
jno
xchg
pop
push
cltd
scas
add
gs
pop
addr16
lock
shll
mov
lock
nop
adc
jecxz
xchg
xor
mov
aad
mov
movsb
ret
fistps
jmp
and
push
sub
adc
int
xor
push
repnz
vpinsrw
test
test
xor
mov
adc
and
inc
sbb
es
movsb
mov
pop
stos
outsl
das
pushf
jmp
loope
cli
repz
push
out
mov
clc
jmp
loop
fistl
xchg
fcoml
jo
mov
xor
xor
or
and
imul
mov
nop
pop
cwtl
or
push
jmp
jle
jp
insl
fsubl
pop
and
and
mov
jl
adc
xchg
js
mov
push
mov
adc
fists
sbb
pop
pop
out
inc
stos
lods
push
jle
dec
into
mov
lods
mov
mov
stos
jne
mov
movsb
movsl
mov
and
pop
repz
scas
or
mov
adc
insl
scas
je
adc
ja
cmpsb
pop
or
rol
push
cmc
insl
cld
ljmp
fistpl
addl
xchg
pop
add
adc
jmp
js
jmp
fsub
inc
movsl
sbb
adc
clc
scas
mov
sub
popf
jmp
sbb
mov
pop
pushf
sub
mov
or
inc
jecxz
imul
mov
ss
call
push
cli
mov
dec
int3
shlb
mov
and
cltd
scas
lods
insb
sub
add
test
leave
aaa
cmp
lret
cmp
add
nop
jp
dec
pop
xchg
je
jae
pushf
mov
outsl
and
dec
test
mov
or
dec
imul
mov
mov
xor
or
cwtl
inc
shrb
scas
je
movsb
iret
enter
mov
cs
or
sbb
jg
loope
out
push
pop
mov
data16
pop
push
test
and
lods
leave
aam
jbe
and
test
jl
push
lret
clc
xchg
ficomps
pop
xchg
rcll
rclb
icebp
and
push
call
cmp
cld
mov
sbb
pop
cltd
icebp
rorb
sbb
push
aaa
ljmp
sbb
add
add
pop
pop
nop
shlb
xchg
sub
inc
mov
sub
pop
pop
addr16
test
inc
sub
pop
dec
add
aam
adc
dec
or
test
ss
stos
lea
sub
push
jne
mov
popf
jns
add
inc
and
psubsb
cmp
loop
rolb
rcrl
push
add
mov
in
adc
nop
mov
mov
dec
arpl
cs
xor
inc
roll
add
bound
out
sub
je
sub
or
sbb
add
cwtl
dec
dec
pop
pop
pop
dec
jmp
fwait
inc
roll
enter
icebp
jbe
cld
sub
push
mov
movsl
popa
xor
negl
add
cmp
cmpsb
lock
fldt
leave
pusha
js
inc
push
scas
sbb
inc
jnp
pop
ss
mov
xchg
push
push
xor
inc
call
add
out
scas
xlat
fmull
pop
mov
arpl
pop
scas
std
int
test
mov
outsb
in
dec
pop
dec
sub
dec
jle
add
nop
int3
les
test
fwait
mov
sti
frstor
mov
sub
mov
push
add
and
int
xchg
and
mov
or
jp
inc
mov
xorl
lea
aas
es
adc
cmp
sbb
enter
mov
pop
lds
jl
jbe
lahf
xchg
mov
loop
mov
test
and
adc
loopne
lea
sub
imul
cli
pop
popf
pop
pop
dec
mov
add
mov
push
add
stos
inc
in
loope
sub
sub
daa
repnz
push
mov
mov
dec
stos
xchg
inc
and
int3
add
xor
les
rol
pusha
in
sbb
sub
test
je
in
dec
jecxz
js
sub
add
dec
addr16
mov
iret
scas
loop
daa
jae
push
lock
mov
sub
xchg
mov
incb
adc
xchg
cmp
jne
jae
and
rcr
pushf
mov
lret
jne
arpl
mov
lds
inc
int3
and
test
or
xchg
cld
xchg
movsl
fstpl
ja
cltd
xchg
int3
popa
mov
out
loope
cmpsl
cmp
addl
or
push
pop
mov
xor
xor
call
jno
dec
jbe
mov
pop
fcmove
aaa
mov
sub
mov
hlt
loop
cmp
xchg
jg
lods
pop
xchg
sbb
push
xor
movsl
in
add
and
sbb
jns
inc
push
loop
loope
mov
push
ja
mov
pop
inc
jb
cmp
mov
xor
fldl
sti
in
sub
or
stc
pop
cmp
into
popf
in
out
sbb
daa
subb
enter
cmc
pop
shlb
jns
js
adc
pop
addr16
dec
testb
je
iret
cmp
xchg
sti
je
ret
in
xchg
jp
int3
or
lds
push
outsl
in
mov
fldl
inc
cltd
pusha
push
mov
lock
incb
mov
cmp
inc
jle
push
adcb
subb
mull
insb
popa
mov
lret
int
test
stos
ja
lods
das
xor
test
lret
sbbl
popa
mov
aad
mov
pop
jg
jne
dec
push
or
sbb
or
add
outsb
xchg
pop
or
lods
sub
jb
cmpsl
or
adc
add
or
and
sbb
sarl
jg
cmpsl
cld
cltd
pop
scas
push
dec
dec
mov
gs
fldenv
sbb
or
push
int3
fidivrs
mov
sbb
adc
call
ja
in
lods
js
xchg
sahf
dec
stos
out
dec
mov
sub
sub
stos
imul
jb
xor
or
xor
jle
leave
rcll
sbb
aad
push
inc
movsl
sti
nop
xchg
imul
sub
xchg
pcmpgtd
in
les
rcrl
testb
dec
push
sti
stc
or
adc
pop
inc
mov
mov
and
outsb
imul
xor
push
mov
fwait
mov
inc
cmp
stos
je
jno
inc
mov
push
or
pusha
push
sub
insl
fadd
in
push
cmpsl
pusha
mov
mov
shll
stos
movsl
jle
out
mov
loopne
int
xchg
mov
int
je
and
into
ja
pop
testl
adc
nop
mov
repz
and
jge
shrl
sub
popf
pop
shl
jl
xchg
bnd
sbbb
es
loope
sub
push
int
xchg
stos
mov
lds
dec
test
mov
bound
sub
sub
xchg
push
cmc
mov
cmp
lahf
bswap
push
or
sbb
adc
in
call
sbb
gs
push
test
jnp
pop
sbb
repnz
mov
ret
inc
push
jne
scas
mov
mov
sub
je
fildll
repnz
test
adc
xchg
inc
push
xchg
cwtl
mov
mov
stos
cwtl
jp
xor
jnp
sahf
paddd
mov
mov
jae
push
call
xchg
sbb
leave
adc
ja
and
imul
sbb
out
mov
aam
xorl
inc
jne
mov
shl
fxch
fldenv
xchg
mov
in
xlat
push
fwait
mov
cmp
mov
movsl
loopne
bound
xchg
mov
xchg
mov
out
sub
push
push
lods
outsl
movsl
jge
and
inc
ret
push
xchg
rol
adc
adc
add
fstpt
mov
xchg
jecxz
fwait
stc
fisubl
mov
pop
addl
shr
out
xor
scas
sub
insb
pop
pop
stos
mov
addr16
stc
mov
loopne
lret
rep
xchg
jecxz
sbb
imul
jge
jae
cmpsl
out
xchg
incb
xchg
xchg
icebp
jbe
sbb
jno
push
jbe
push
or
push
inc
pusha
pop
leave
push
icebp
inc
add
andb
outsb
fistps
mov
fs
in
pop
inc
sub
mov
push
mov
pop
mov
movsb
les
aas
jg
cmp
pop
rcrl
fwait
mov
ret
or
dec
sub
pop
cmpsl
inc
push
or
jg
pop
je
adc
jbe
outsl
jbe
sti
repnz
or
inc
fdivs
jbe
xchg
rorl
mov
sahf
add
mov
jmp
jmp
lds
fsts
mov
ja
mov
dec
mov
jb
call
xor
scas
sarb
jb
add
in
sbb
fdivrp
mov
cmp
pop
adc
outsl
test
and
repz
mov
sbb
cmp
test
xlat
sbb
stc
ret
and
lret
mov
aaa
into
enter
aam
jmp
and
iret
pop
mov
add
xor
dec
fcomps
sahf
popf
out
das
mov
cmp
popf
test
loope
in
push
mov
es
aam
xchg
mov
divl
mov
std
sub
xor
dec
cmp
pop
cmpsb
jnp
jmp
mov
hlt
stos
pop
mov
xor
rol
push
sbb
pushf
arpl
loopne
adc
mov
fmulp
adc
fcoms
add
pop
rcl
dec
xor
cs
imulb
cmp
xchg
je
mov
popf
arpl
xor
lods
push
sbb
mov
ljmp
mov
mov
sub
pop
fwait
dec
mov
sbb
lock
cmp
add
sbb
mov
int
xchg
ret
mov
test
cs
popa
inc
pusha
test
shlb
fidivl
bound
pop
inc
imull
push
call
push
or
repnz
add
jnp
scas
mov
mov
movsl
inc
cmp
inc
adc
mov
ss
loop
cmc
flds
aam
pop
xor
cmp
push
in
jo
aaa
scas
sbb
mov
fs
mov
ljmp
in
jae
pop
xchg
inc
daa
pushf
or
dec
xchg
rol
test
xchg
inc
repz
add
notb
inc
push
push
movl
sub
pusha
xor
jecxz
into
xorl
scas
mov
in
lds
cmpsl
xchg
dec
mov
xchg
sub
dec
hlt
lods
in
dec
shrl
mov
sahf
mov
push
lods
insl
imul
iret
movsl
movsl
mov
in
sbb
jp
push
fwait
xor
fcompl
pop
hlt
je
sbb
rcll
sbb
fisubrs
data16
addl
cmp
test
sbb
leave
push
out
pop
daa
movsb
mov
push
sahf
movsb
shlb
outsl
jne
jo
frstor
xor
mov
movsl
fcmovnu
xchg
aad
push
ljmp
xchg
xchg
cmp
mov
jo
inc
jb
imul
dec
das
pop
mov
xor
jns
pop
lret
shlb
sarb
fldt
js
fisttps
push
mov
mulb
test
dec
aad
data16
sub
std
push
int
mov
jbe
pop
andb
fs
cmp
lea
or
inc
ret
jns
cmp
and
xchg
lahf
int3
out
ljmp
imul
sbb
add
lfs
arpl
cmp
fcompl
ljmp
jae
aam
jnp
pop
jp
movsl
xchg
fwait
and
fistl
jg
imul
stc
iret
imul
xor
daa
mov
aas
clc
and
jns
mov
scas
daa
shl
mov
mov
lock
inc
sahf
cmp
out
or
or
push
dec
xchg
mov
frstor
mov
rcrb
xchg
aaa
repnz
in
mov
xlat
cmp
push
dec
scas
in
fisttpl
mov
cli
popf
loop
repnz
and
mov
mov
pop
xor
loop
and
pop
and
loopne
jae
push
inc
inc
scas
jbe
int
imul
jo
ret
stc
mov
and
dec
outsb
loope
mov
pop
add
or
test
or
dec
and
jne
jnp
jno
les
daa
mov
jg
sub
test
das
mov
sub
aas
dec
and
mov
lret
jle
dec
and
popf
out
inc
mov
test
mov
movsl
jp
dec
out
sub
in
push
les
loop
cmp
push
mov
je
sub
in
loope
inc
xchg
cmp
mov
movsl
aaa
and
adc
sbb
adcl
jl
inc
fcoml
push
fidivrl
decb
jbe
dec
xor
sahf
pminub
mov
fistps
fcomps
icebp
push
xlat
adc
ja
xchg
inc
scas
sub
jmp
popa
clc
repz
or
sub
popa
dec
repnz
push
mov
inc
or
js
jno
iret
mov
cmpsl
push
mov
adc
xchg
push
imul
out
fwait
scas
les
ljmp
sbb
inc
imull
sub
push
imul
mov
mov
pop
or
out
mov
out
fxch
jmp
xor
pushf
cmp
adc
lods
jbe
test
jecxz
outsl
je
outsb
mov
mov
pop
adc
push
jne
and
jecxz
xor
add
jp
out
popa
mov
xor
mov
pusha
ret
mov
push
inc
add
xor
cli
leave
sti
inc
roll
push
std
push
add
and
into
mov
xor
lods
popf
push
pop
adc
fwait
movsl
mov
xor
pop
out
stc
int3
dec
mov
mov
lea
mov
lock
cltd
xchg
pop
pop
push
nop
pop
pop
out
or
xchg
mov
or
rorb
xchg
jg
add
mov
rolb
sub
mov
out
test
leave
jmp
jns
and
andl
xor
das
cli
sub
enter
cld
data16
mov
and
dec
sub
rclb
push
scas
xchg
popf
fbstp
mov
stc
aad
push
cmp
and
ret
mov
lock
stc
sbb
enter
movb
test
push
jo
lods
xor
sbbb
stos
test
dec
scas
pop
inc
mov
jmp
cli
and
icebp
cmp
dec
jb
mov
xchg
cld
push
jne
fbstp
cld
add
add
cli
ret
sti
pop
jne
nop
push
fs
into
aam
cli
addr16
outsb
xor
imul
sub
in
out
mov
xor
outsb
out
jb
lret
cld
das
push
adc
jge
jae
inc
push
push
push
sbb
andl
push
rorb
xchg
jnp
lret
sub
pop
cmp
fdivl
xor
repz
sub
insl
loopne
jle
mov
or
adc
lret
fwait
mov
inc
pop
icebp
fcmovnbe
mov
dec
in
lds
jns
inc
int
outsb
adc
mov
cmpsl
inc
dec
push
mov
in
push
mov
je
stc
adc
jno
mov
push
xchg
inc
fnstcw
inc
xor
scas
test
mov
stos
xchg
and
sbb
and
notb
push
mov
outsb
push
or
std
stos
mov
icebp
xchg
pop
je
pop
loop
ja
mov
add
loope
jo
iret
cmpsl
arpl
mov
popf
rol
mov
mov
sbb
xchg
add
pop
pop
sahf
and
jg
idivl
sbb
cmpsb
jl
xchg
cwtl
xor
jmp
push
out
test
sahf
setg
jmp
cs
cmp
mov
pop
ret
mov
mov
cmp
cli
adc
xor
hlt
push
adc
pop
pop
imul
leave
push
mov
mov
cmp
iret
movsb
faddp
lock
push
in
cs
call
shll
push
xchg
or
cmp
fidivs
and
scas
das
fdivs
jno
mov
xor
cmp
std
cmpsb
push
jnp
and
scas
push
lcall
js
adc
test
or
jo
cmpsb
lock
scas
in
add
or
push
ja
testb
pop
pop
bound
incb
push
pop
or
pop
cld
sti
cmp
sbb
in
jmp
adc
fisttps
out
jae
jg
into
lahf
inc
cmp
clc
jle
repnz
mov
or
cwtl
stc
push
xor
repnz
cs
les
nop
dec
lds
mov
xchg
aam
push
mov
mov
sti
aaa
not
ss
insb
fstl
insl
aaa
not
mov
mov
mov
sub
push
or
out
adc
jo
dec
sub
add
adc
pextrw
js
jnp
dec
add
lahf
mov
jne
push
sub
fiaddl
pop
popf
jp
inc
test
lcall
cltd
xorl
rorb
in
or
stos
loop
pop
dec
pop
bnd
pop
inc
f2xm1
icebp
sarb
mov
inc
insl
jne
rcrl
dec
mov
ret
pushf
cs
icebp
push
ljmp
ret
sub
or
jae
lea
xchg
imull
sahf
cmp
pop
jmp
outsl
xchg
xor
push
neg
mov
push
ljmp
xchg
xor
mov
xor
xlat
jp
in
jecxz
pop
mov
xchg
ds
cmp
mov
cli
jo
sahf
or
mov
rorb
xchg
jmp
xchg
ljmp
hlt
dec
outsl
inc
ljmp
enter
mov
int3
xor
pop
add
sub
jno
fstl
inc
out
movsl
dec
sar
inc
fstps
mov
mov
mov
adc
out
icebp
adc
paddq
and
lcall
pop
gs
test
and
mov
ja
mov
pop
xor
test
xlat
test
pop
mov
add
cltd
mov
int3
push
mov
mov
pusha
push
dec
pop
lea
mov
ret
lock
xlat
pop
sbb
and
fisttps
shl
xor
mov
jb,pt
cmp
add
mov
mov
mov
subl
iret
xchg
and
fcompl
push
cmc
and
imul
dec
push
loope
add
cld
xchg
cmp
jmp
repz
in
jne
lea
jg
jno
push
stc
cmp
mov
repnz
inc
je
sti
cmp
or
mov
repz
rolb
ror
cmp
sub
mov
div
pop
pop
push
mov
pop
cmp
pop
hlt
movsl
pusha
adc
rclb
insb
ficoms
or
pop
push
adc
mov
inc
sub
push
push
sbb
inc
cwtl
cs
pop
adc
cs
or
pop
mov
in
add
popf
cmp
and
sub
pushf
ss
cmpl
mov
ja
mov
das
arpl
jbe
cmp
cmp
jp
sbb
or
xchg
push
and
dec
je
int
call
fsts
xchg
es
lret
adc
aas
xor
jle
cwtl
imul
sub
push
and
xchg
push
lods
mov
stos
loop
push
loopne
inc
adc
xchg
mov
pusha
sub
jecxz
push
int3
inc
hlt
dec
xchg
call
xchg
sbb
add
inc
pop
roll
sub
and
mov
insl
imul
xchg
dec
pop
sbb
xchg
insl
inc
and
lahf
popa
int3
and
dec
mov
loopne
mov
je
data16
mov
cmp
mov
insl
les
daa
arpl
test
jno
fstpt
lods
add
insb
xlat
jb
mov
and
sbb
lock
adc
pop
jns
push
dec
adc
inc
push
pop
lret
cmpsl
lock
cmc
leave
sub
inc
sub
lahf
ljmp
je
jb
mov
arpl
pop
pusha
sti
lcall
inc
sub
sbb
add
cwtl
js
lret
and
sub
mull
dec
cwtl
lds
push
push
mov
add
je
inc
scas
stos
push
mov
dec
sar
in
push
orb
push
je
stc
sahf
and
pusha
or
cld
decl
pop
pop
inc
or
lret
dec
cld
stos
add
adc
popf
pusha
ds
inc
cwtl
mov
es
cmp
sub
faddl
jns
and
clc
xor
sbb
jg
xchg
pop
ret
dec
sbb
jns
xorl
test
out
movsb
pop
rol
mov
out
es
push
lea
adc
jp
jmp
cmp
push
jp
popf
sarl
test
fildll
mov
push
inc
data16
pop
inc
sub
sub
mov
or
pop
mov
mov
push
sub
add
mov
add
cltd
enter
add
in
fistl
sahf
scas
fucomi
push
xor
scas
adc
ret
cmp
in
bound
dec
fwait
mov
cmp
jg
mov
pusha
sbb
stos
ds
loop
mov
or
or
cmpsb
xchg
stc
ds
pop
cli
cmpsl
out
sub
mov
mov
sti
cmp
jg
ret
imul
lods
dec
cmp
icebp
push
loope
leave
jb
cmc
xlat
xor
xchg
add
cli
out
mov
xchg
dec
pop
repz
out
fidivrs
icebp
rorl
daa
or
jmp
dec
jp
fldcw
push
xor
iret
dec
fnstsw
jmp
jbe
pminub
addr16
and
icebp
stc
aam
sbb
cld
mov
pusha
and
or
pusha
dec
cmp
dec
sub
sti
xor
cmpsb
and
add
in
jp
mov
dec
je
sbb
mov
daa
ds
xor
mov
mov
dec
jp
in
jmp
or
sbb
fdivs
mov
fistpl
js
and
jp
repz
adc
inc
pop
addr16
mov
pop
add
push
shrb
dec
rcll
dec
inc
lds
push
cmp
test
lret
mov
dec
add
push
ds
push
push
sub
decb
les
push
mov
cmc
rcrl
dec
arpl
inc
adc
sub
cld
jl
mov
pop
dec
add
inc
pop
jo
jl
movsb
sti
aam
xchg
sti
shrl
or
lea
gs
inc
insl
push
neg
incl
jae
adc
ret
les
lods
iret
xchg
and
ds
bnd
es
shlb
pop
mov
gs
ljmp
jne
dec
push
xor
jge
popf
jge
sub
dec
xor
mov
xor
je
pop
imulb
xorl
and
inc
xor
cmpsb
dec
xor
cmp
movl
push
shl
bound
fstpl
and
in
iret
mov
sbb
and
bnd
push
popa
lcall
out
xlat
cmp
ds
mov
sarb
out
add
mov
insb
pop
xchg
push
cli
push
adc
hlt
cmp
idivb
or
pop
cmp
inc
mov
outsl
mov
dec
cmp
dec
loop
pop
sbb
fisttps
shlb
cltd
stos
cmp
xorb
push
jp
sbb
and
je
sbb
cmp
loopne
aam
jge
mov
xor
jnp
xor
dec
in
push
xrelease
pop
cmc
gs
lret
xchg
sbb
cmp
xor
cmp
sub
icebp
xor
fimull
fsubs
jbe
dec
sbb
int3
push
lock
mov
dec
sbb
push
mov
dec
hlt
inc
mov
in
nop
popa
cmc
jnp
push
mov
inc
pushf
aas
mov
addr16
mull
fcomp
sub
cmp
mov
lods
mov
xchg
push
ret
pop
cmp
bound
test
cs
subl
push
mov
jb
cmp
mov
jmp
or
jo
cmp
ja
loopne
lret
mov
mov
sbb
xchg
sbb
test
loope
daa
jne
push
inc
xchg
mov
adc
int3
mov
pop
imul
into
test
adc
or
subl
pop
repz
push
scas
insl
pminub
nop
mov
ja
test
mov
rolb
dec
ja
mov
xchg
ficoms
jmp
sbb
jmp
aad
ds
jle
jg
mov
aam
bound
repz
sub
xor
lcall
aaa
roll
sub
scas
inc
inc
lahf
mov
ds
shlb
jae
push
push
shrb
addr16
mov
sbb
fdivr
jnp
jmp
xchg
pop
ret
pop
iret
int
push
push
jbe
test
fdivr
jae
xchg
ret
popa
into
add
jecxz
inc
ltr
icebp
iret
pop
xor
xchg
pop
mov
inc
pushf
dec
test
inc
faddl
imulb
xchg
sub
push
adc
jmp
scas
ljmp
into
xrelease
js
mov
ret
jle
dec
mov
popf
stc
xchg
pop
ja
push
fsubl
jle
or
xchg
sbb
xchg
sbb
mov
add
pusha
fwait
sub
lds
inc
orl
mov
int3
or
mov
dec
js
cli
rcrl
xor
cmp
je
adc
jge
xchg
push
lret
cmp
aaa
add
xor
fsubrl
addl
adc
nop
dec
dec
scas
jmp
icebp
aas
test
stos
andl
push
out
ficoms
pop
out
aaa
jecxz
icebp
xchg
andb
mov
cmpsl
cmp
es
aad
jns
dec
inc
adc
ss
push
xchg
pop
mov
cmpsl
push
push
cmpsl
leave
pop
scas
push
sub
xlat
xchg
adc
lods
xlat
inc
mov
jge
xchg
pop
bound
pop
arpl
call
add
mov
rcll
imul
xlat
lods
cli
imul
sbb
xchg
jmp
xchg
sbb
inc
dec
popf
mov
jmp
push
outsb
sarl
cld
stc
mov
rcll
or
add
mov
adc
sub
insl
cmp
aaa
sar
xchg
sbb
incl
fldt
xlat
fmull
mov
cmpl
cmc
rcr
sub
dec
lds
in
sbb
mov
sbb
push
nop
sbb
insb
loopne
adc
leave
add
shl
xchg
dec
jg
mov
lret
les
sahf
and
jmp
js
inc
and
popf
imul
dec
jp
and
inc
push
lahf
mov
push
jbe
mov
lret
aas
shrl
out
sbb
hlt
shll
push
imul
aam
adc
cmp
or
sub
pop
insb
es
sbb
movsb
cwtl
add
movsl
lods
cmc
test
flds
or
mov
insb
fsubrp
ror
jmp
mov
dec
std
popf
push
movsb
loopne
mov
pop
movsb
fistl
orl
jae
jb
xchg
mov
fiadds
mov
js
pop
cmp
and
xchg
mov
shlb
mov
or
bound
mov
es
sbb
repz
mov
pop
lret
icebp
call
out
add
dec
stos
jp
andnps
shlb
cltd
js
mov
cli
mov
xorb
cmp
test
cmp
in
inc
push
and
xchg
and
mov
out
leave
test
adc
add
dec
or
cld
or
fcmovne
add
sbb
popa
imul
and
icebp
adc
jecxz
push
inc
inc
pop
lahf
das
add
inc
mov
ret
addr16
lock
xor
shlb
xorb
decb
mov
imul
sbb
addb
jae
sub
fimull
in
shr
loop
dec
push
adc
pop
ret
scas
ja
cltd
add
aas
mov
mov
fidivrl
push
cmp
mov
cmp
cmc
xchg
movsl
cmp
jle
sbb
out
push
imul
fwait
xchg
cmp
cmp
push
xchg
xor
ret
dec
xchg
popa
aaa
scas
mov
mov
dec
cmp
fdivs
out
lock
mov
cmp
or
inc
mov
pop
out
jae
sbbb
sub
add
aas
stc
sti
and
fbstp
or
mov
or
test
scas
jbe
pop
mov
icebp
add
sbb
mov
jbe
push
jmp
call
insl
add
mov
mov
aam
scas
sbb
cmp
and
fimull
test
cmp
sbb
jno
ss
stc
adc
add
enter
mov
dec
ret
sbbl
clc
or
add
pop
inc
mov
push
aam
cmp
aam
aaa
fdivl
push
jns
xlat
fists
int
fisubs
pop
pop
inc
out
push
pop
mov
test
enter
xchg
sbb
add
jo
jmp
xor
lods
adc
js
add
xor
add
dec
adc
ret
addr16
movb
out
pusha
sbb
jno
pop
sub
push
ja
and
daa
xor
fimull
loop
int
daa
inc
sbb
fdivrl
dec
pop
push
pop
jne
mov
test
push
ret
outsl
or
fbld
cltd
dec
pop
inc
pop
adc
sub
sbb
jmp
jno
xchg
pop
cmp
pop
mov
adc
jns
mov
xor
dec
sbb
std
add
aaa
nop
xchg
cwtl
jae
fs
mov
fisubl
cmpsb
mov
mov
jle
pop
lahf
out
cmp
movsl
sub
sbb
fildll
mov
jo
or
xchg
stos
sub
pushf
jo
inc
insl
in
and
in
fs
mov
adc
push
sub
mov
jl
mov
xor
mov
mov
mov
clc
iret
or
stos
mov
ljmp
mov
mov
popf
daa
and
inc
dec
dec
pop
mov
fidivrl
mov
push
rcrl
out
fxch
sbb
inc
fwait
pop
test
pusha
jg
or
cwtl
xor
cmp
ds
push
sbb
pop
ss
icebp
jg
sub
enter
mov
inc
mov
test
add
call
sub
aad
jp
sbb
cmp
push
mov
ja
dec
jecxz
adc
inc
push
cmp
inc
pop
xchg
mov
jbe
hlt
aas
cmp
mov
mov
test
pop
scas
ret
scas
push
ja
in
sahf
dec
lods
jne
add
ret
xchg
scas
fimuls
movsb
or
inc
sbb
dec
cmp
and
cmp
xchg
jp
adc
add
sar
loopne,pn
insb
shr
pusha
inc
sbb
lret
out
add
push
ds
daa
cmp
shll
lret
hlt
cwtl
cltd
mov
rcrb
dec
sbb
leave
mov
sbb
fcmovnbe
push
pop
popf
loop
pusha
ljmp
mov
std
pusha
sub
cmp
fcomi
leave
rol
add
inc
xchg
sahf
jb
int
cmp
adc
dec
push
cmp
ss
inc
or
out
sub
out
sub
adc
pop
sbb
out
out
and
adcb
push
in
in
mov
dec
xor
pop
jp
xlat
pop
lret
aaa
sbb
test
std
outsb
cmp
or
push
aas
cmpsl
pop
xor
jle
popf
mov
ljmp
xchg
mov
push
inc
pusha
xchg
mov
xor
sbb
jne
adc
sbb
arpl
loop
fistpll
mov
dec
mov
mov
pusha
orb
mov
cwtl
jb
push
inc
and
inc
mov
addr16
adc
xchg
test
and
popa
mov
jmp
cmc
jo
outsb
add
lds
or
loopne
xor
sub
xor
inc
bound
fistl
lret
movsb
sub
cmp
fucom
mov
jns
roll
push
and
sbbb
hlt
sarb
mov
mov
xchg
in
mov
jae
test
fcomps
pop
test
push
jb
ret
mov
fs
xor
mov
test
mov
push
mov
orb
out
fisubs
push
popa
out
xor
sbb
in
push
in
pop
jae
jl
popf
loop
mov
jae
ljmp
mov
sub
or
insb
daa
jnp
pushf
jbe
sub
lods
xor
jnp
call
xchg
xor
or
push
in
inc
mov
push
sahf
out
push
in
xchg
leave
pop
mov
jo
int
andb
lock
push
mov
mov
les
xchg
ret
shrb
mov
lds
aad
cmp
dec
jmp
int3
jne
push
push
add
add
xor
dec
mov
xlat
sbb
add
or
loop
mov
adc
jne
fwait
jle
mov
or
adc
das
rcll
out
loope
aas
push
fbld
out
lock
mov
sub
mov
out
das
scas
push
xchg
xor
shl
cmc
push
enter
jle
push
in
or
push
inc
fidivrl
add
jp
dec
arpl
xchg
insl
dec
push
ss
push
cwtl
rol
pop
jb
cltd
out
mov
cmp
mov
add
jno
test
mov
push
xor
inc
add
stos
test
adc
into
movsb
daa
addr16
ret
dec
add
int3
or
inc
pop
fmul
xchg
push
add
add
or
push
notb
or
mov
xor
in
or
adc
cmp
aaa
mov
xchg
sbb
adc
or
fldenv
pop
sar
xchg
and
mov
lret
orb
xchg
pop
daa
cli
dec
push
in
add
pop
cmp
pop
cli
sbb
orb
shrb
clc
xchg
cmpsl
mov
and
push
mov
jp
mulb
int3
xor
fcompl
jbe
shlb
sub
add
movlps
jbe
rcrl
xchg
shrb
xchg
leave
sbb
loop
jno
xlat
stos
pop
mov
cmp
jo
fdivrs
adc
xchg
add
inc
rol
jl
stc
xor
mov
xor
pop
inc
pop
sub
cmp
mov
test
sbb
xchg
lret
testl
add
sbb
and
fs
test
sbb
jecxz
xchg
daa
data16
ds
mov
rclb
push
push
out
jp
pop
ds
mov
lock
test
sbb
bound
and
xor
pop
scas
sahf
shll
adc
clc
dec
shrl
adc
mov
and
pop
or
std
jo
fcompl
xchg
mov
fwait
enter
push
push
popf
ret
jl
sub
cmp
fistpl
imul
andb
aas
ret
push
and
and
fmulp
mov
jno
or
orb
cmc
cmp
popa
stos
mov
add
dec
pusha
xor
add
jle
xor
fwait
out
icebp
iret
loopne
fistpll
test
pop
inc
jecxz
push
pop
jno
inc
lret
fwait
or
popa
cltd
xchg
adc
out
movb
mov
enter
inc
outsb
or
imul
lock
insb
lock
js
mov
test
in
lods
inc
and
mov
outsl
and
popf
xor
loope
aam
mov
bound
push
sub
leave
rol
clc
mov
adc
inc
fldt
mov
fisubrl
push
xchg
sbb
pop
inc
cli
xor
jae
pop
mov
push
jno
cmp
fcompl
inc
push
clc
add
push
movq
test
push
add
adc
sbb
dec
loope
dec
mov
push
and
pop
nop
loope
lock
repz
loop
mov
lock
jno
ja
ret
pop
inc
pop
sub
xchg
das
inc
popa
jnp
sbb
leave
push
and
cmp
or
out
arpl
jo
push
inc
add
gs
sti
push
lods
xor
mov
das
xor
and
push
insl
sub
push
or
in
jecxz
iret
int
jbe
fwait
push
xor
pop
jae
adc
shrl
rclb
jbe
pop
push
xor
icebp
mov
cmp
outsb
insl
add
or
mul
das
push
das
je
gs
dec
lret
add
or
or
fsubl
pop
lea
mov
mov
pop
aad
mov
dec
notb
fwait
cmp
push
popa
xlat
sbb
inc
or
xchg
movsb
or
test
dec
sub
ret
outsb
sub
iret
mov
add
sbb
or
cwtl
in
js
xor
cmpl
leave
pop
push
push
adc
lahf
cld
cmp
aas
addl
cltd
call
aam
xor
add
movsb
hlt
ret
repz
mov
adc
dec
mov
sub
dec
ljmp
xor
repz
jge
dec
fcomps
inc
in
scas
scas
push
mov
mov
std
cmc
mov
jle
jmp
mov
push
mov
dec
jns
lcall
cmp
jo
xor
inc
sahf
inc
out
ret
fs
mov
push
push
fwait
out
push
aam
je
mov
mov
leave
xor
pop
adc
gs
cmp
ss
sub
sbb
das
cmpsb
inc
inc
stc
sub
insl
sub
dec
out
and
outsb
sti
andl
mov
pop
pusha
push
mov
mov
test
jnp
mov
fimull
lahf
std
ljmp
fwait
cwtl
xor
fisubs
pop
add
les
push
pop
call
hlt
leave
inc
gs
rcrb
push
das
mov
out
popa
lods
and
push
xor
inc
test
sub
lahf
jmp
mov
mov
insl
jno
jo
dec
out
scas
dec
rcrl
sysret
cmp
test
push
lcall
and
xor
mov
ret
es
repz
add
addr16
movsl
fisubl
imul
es
ds
sbb
push
dec
xchg
or
xlat
fwait
adc
and
push
daa
and
jo
aam
and
mov
ret
cltd
icebp
sub
sbb
int
inc
mov
xchg
aam
sti
inc
pusha
xor
and
adc
xor
jp
jecxz
fs
mov
shl
andb
or
mov
data16
push
jmp
arpl
ljmp
cltd
mov
mull
fsubs
or
mov
xor
push
fstpl
or
cmpb
mov
jl
test
sub
bound
cmp
clc
sti
fidivs
iret
pop
push
daa
jae
fisttpl
push
cmp
pusha
test
insb
aaa
repnz
adc
out
int3
sbb
xor
lock
push
lds
gs
jge
clc
sbb
movsb
test
in
push
aad
cmp
shll
pop
repnz
insb
arpl
lock
fcompl
ret
repz
sbb
cmp
jge
out
sub
adc
mov
adc
outsb
test
inc
cmp
sub
addr16
enter
sbb
push
add
pop
es
imul
iret
push
inc
add
push
xchg
jns
jg
cmc
pusha
pop
cmp
cmpl
dec
mov
and
leave
inc
imul
inc
call
lret
add
adc
push
mov
adc
das
jnp
xchg
popa
out
sub
test
add
js
mov
paddq
sbb
scas
push
sbb
icebp
dec
ja
add
mov
into
das
push
stos
xor
sbb
jbe
outsb
lret
insb
cltd
xor
cmc
movl
push
sub
cmp
xor
loop
enter
dec
fistpll
rorl
dec
inc
xchg
clc
leave
rol
xchg
and
inc
mov
adc
pop
jnp
sub
push
lea
jnp
mov
lahf
cmp
sub
out
cmp
ljmp
int3
rcll
sti
outsl
cs
fnsave
enter
movsb
dec
insb
adc
fisttpll
std
orb
dec
mov
js
dec
or
jl
adc
out
ss
sub
xor
mov
sbb
popa
fnstcw
movsb
sbb
movb
sbb
jns,pn
cmp
adc
dec
cmp
mov
dec
enter
test
jno
movsb
mov
or
aad
int
or
or
jecxz
push
rorb
sub
push
cmp
imul
adc
sbb
push
daa
xor
and
and
adc
cs
and
filds
aas
adc
or
xchg
and
xchg
lret
mov
test
push
lahf
cmp
icebp
mov
sysenter
std
cmp
cmpsl
fstl
dec
xchg
mov
xchg
and
adcb
xor
push
cmpsb
fwait
sub
ljmp
mov
and
and
xor
xchg
mov
jl
jo
jl
dec
pop
pop
jae
clc
insb
arpl
adc
and
mov
add
jnp
xor
loope
notb
sbb
mov
lds
dec
rcr
add
push
dec
ss
and
xor
ror
int
jo
imul
push
jecxz
loopne
pushf
push
lds
sub
aas
pop
iret
cmp
jns
lret
mov
push
cs
lahf
es
shll
scas
dec
inc
shrb
dec
pusha
decl
dec
jb
cmpsb
xchg
sti
enter
cmp
roll
adc
mov
jmp
shr
mov
cmp
out
mov
add
mov
mov
xchg
pusha
pop
xlat
mov
movsb
cmp
xchg
mov
pop
lods
pop
sti
pop
pop
imul
das
es
add
push
and
or
sbb
inc
jmp
dec
xchg
push
mov
push
rolb
bound
dec
inc
sub
arpl
fimuls
mov
mov
out
int3
mov
jg
stos
xchg
int3
rorl
les
mov
and
outsl
ljmp
add
xor
pusha
add
and
adc
rcrb
jmp
into
xchg
add
cmp
cli
adc
loopne
aam
pop
cmpl
mov
lret
jbe
pop
scas
out
push
cmp
movsb
test
aad
ret
push
pop
inc
in
xchg
ret
orl
mov
push
jbe
outsb
call
push
xlat
push
sbb
sahf
mov
mov
xor
push
dec
jno
fstps
and
add
in
lcall
inc
mov
add
lret
hlt
xchg
inc
sub
loopne
cmp
es
cmp
pushf
jno
pop
cld
sbb
cli
mov
push
jae
mov
xchg
lods
dec
lea
clc
push
push
jnp
fadd
sub
out
maxps
arpl
lahf
and
mov
out
lods
ja
jb
mov
cmp
aas
stc
xor
fldcw
mov
stc
fdivrl
aas
insb
xor
jle
test
add
rcrb
sbb
test
loop
std
cli
call
sub
adc
mov
aas
sub
fs
adc
lcall
rolb
test
dec
pop
pushf
mov
repz
mov
add
mov
data16
out
or
adc
jne
and
pop
inc
dec
adc
cld
adc
mov
xchg
mov
push
pusha
pop
jae
in
cmp
data16
sbb
push
andl
pop
push
popf
mov
pop
cwtl
ret
ss
out
or
add
std
add
imul
push
jp
sbb
jo
mov
sub
inc
push
pushf
or
pop
outsl
inc
push
sbbl
inc
daa
iret
test
rolb
mov
cmp
jle
cs
ja
push
je
shr
jae
xor
sub
movsl
shl
jle
fsubrs
aaa
lret
sub
xchg
jae
cmp
aam
mov
sahf
lods
jae
sub
pop
enter
add
adc
and
add
outsl
lods
dec
pop
pop
dec
out
or
loop
xchg
js
inc
ljmp
loop
jnp
inc
les
mov
and
pop
xchg
aas
in
in
cli
sub
sti
pop
fidivrl
aam
push
addr16
jp
notl
jge
xchg
outsb
nop
stc
or
dec
mov
fistpll
sbb
mov
dec
push
fcoml
add
negl
jae
gs
xor
mov
test
loopne
loop
pop
xchg
adcb
xchg
orl
push
rcll
mov
push
or
fsubr
scas
pusha
mov
negl
mov
sahf
xchg
enter
cmp
xor
mov
cmp
mov
mov
pop
inc
movsb
dec
xchg
xchg
js
mov
push
cld
cmc
dec
neg
push
mov
bound
loopne
fneni(8087
lret
inc
push
and
shlb
es
dec
inc
adc
fstps
cld
in
ds
pop
jg
cli
adc
pop
mov
push
mov
mov
push
aam
mov
mov
jnp
gs
cmp
inc
push
pop
cmc
or
jge
fnstcw
movsb
ja
sbb
in
fisttpll
or
sub
push
pop
daa
push
cmp
pop
adc
push
rep
cmpsl
scas
daa
inc
mov
fsub
ja
cmp
jge
fisttps
sub
lods
sbb
jae
into
xor
jnp
ja
mov
and
cmp
fcompl
test
cmpl
push
mov
mov
and
ljmp
mov
lock
addr16
popf
iret
insb
mov
pop
inc
xlat
fs
or
or
ss
cmc
dec
gs
push
pop
ja
arpl
sub
adc
mov
pop
xor
test
jecxz
xlat
xchg
aam
sti
push
shll
fimull
push
xchg
and
in
inc
out
aaa
fdivl
sbb
cmpl
inc
push
int3
movq
imul
ds
cmp
repnz
int3
enter
adc
popf
repnz
cmp
sahf
shll
mov
fbstp
fisubs
imul
inc
inc
xchg
andps
xor
insl
or
mov
testb
out
cmp
insl
in
xchg
sbb
pop
out
jl
pop
subl
cmp
mov
std
sub
add
mov
jecxz
dec
inc
adc
int3
pop
rcll
out
xchg
lods
cmpsl
xchg
data16
call
sub
int
sub
mov
pop
roll
aam
lods
sbb
and
and
scas
stc
loope
mov
andl
add
mov
inc
push
lods
cmp
or
adc
cld
imul
imul
inc
xor
dec
in
fwait
inc
outsl
rcr
xchg
sbb
lcall
adc
inc
mov
xor
sub
mov
cwtl
dec
jge
dec
jp
push
data16
sahf
out
add
jbe
mov
or
adc
and
adc
sbb
enter
int
pop
mov
mov
push
fildl
push
gs
xlat
aam
in
lahf
mov
mov
and
daa
mov
sub
mov
push
aad
mov
lods
aas
fistpll
and
lcall
fisubrl
ret
sub
ror
or
push
fdivl
cltd
dec
dec
adc
iret
pop
dec
fisubs
stc
adc
int
xor
jmp
or
jo
jle
pop
jae
pop
xchg
ficoml
add
fcmovne
push
fisubs
test
filds
mov
insb
xchg
jge
push
mov
and
push
ret
dec
dec
outsb
push
push
add
out
push
outsl
sbb
arpl
pop
adc
mov
out
jg
stc
dec
jge
jbe
lds
dec
pop
push
movb
push
and
xor
into
insl
mov
int3
mov
ret
out
dec
shll
popa
add
xchg
incb
mov
dec
mov
inc
mov
sub
out
les
stos
mov
xor
loope
dec
push
aaa
pop
or
xor
test
sub
popl
xor
aas
lahf
add
imul
sbb
sub
aas
xchg
cmp
jns
mov
pop
leave
jno
orb
jp
sub
xor
mov
mov
push
decl
negl
js
movsl
test
xchg
pop
inc
in
adc
int
or
pushl
rorl
mov
sbb
js
sar
int3
cld
aaa
and
test
dec
clc
mov
xor
sub
ret
dec
ret
lods
jp
cmpsl
and
mov
stos
stos
jl
and
das
test
push
sahf
movsl
lahf
scas
gs
inc
jb
push
push
jno
pushf
xchg
aaa
or
push
outsl
les
lcall
mov
scas
gs
addr16
jne
pop
sahf
stc
or
lea
ficoms
push
cmpsb
addps
cmp
or
cmpsb
sub
pop
sub
sarb
fidivrl
lods
add
lahf
cmp
pop
xchg
andl
faddl
lret
mov
mov
adc
std
xor
pusha
xchg
shlb
in
sub
jbe
in
aaa
jae
mov
cld
jge
mov
pop
jg
jp
leave
xadd
insb
les
shl
sbb
cmpsb
divl
rol
add
lahf
hlt
fldcw
and
xorl
fwait
pop
adc
lods
mov
int3
jnp
xor
xchg
adc
dec
jbe
push
rol
sti
and
popf
mov
add
or
cmp
or
mov
mov
lods
in
push
jg
cmpsb
roll
mov
mov
iret
push
mov
aam
rep
sub
mov
inc
hlt
pop
and
mov
imul
push
lcall
hlt
pop
pop
xchg
ljmp
adc
xchg
mov
ds
ss
inc
jo,pn
sub
sbb
fs
mov
xchg
cmp
fcoms
ficoms
loopne
xchg
incl
jno
cs
inc
imul
jbe
add
pop
sub
cwtl
aam
repnz
mov
mov
and
notl
jle
push
das
in
xchg
adc
popf
fdivl
vorps
xchg
inc
je
xchg
mov
mov
out
adc
in
sbb
jb
add
mov
push
xchg
orl
sub
popa
xchg
mov
adc
jo
dec
je
dec
ja
cmp
out
inc
jl
add
dec
in
hlt
pop
aas
je
mov
addr16
sub
inc
repnz
inc
dec
mov
mov
push
jne
repz
mov
xchg
push
lods
les
dec
andl
xchg
mov
mov
mov
in
jg
ret
xor
ss
mov
cs
adc
jp
mov
lret
inc
xchg
daa
add
out
push
xlat
inc
arpl
addb
cmp
scas
lcall
pop
adc
add
mov
or
decb
fcmovbe
cmc
popf
push
jg
xchg
add
xor
mov
sub
sti
jo,pt
pop
out
xor
in
sub
push
gs
shl
push
mov
mov
jmp
jg
shrl
neg
pusha
xchg
mov
stos
and
adc
test
shlb
cld
mov
lock
cmp
or
mov
mov
js
loope
mov
imul
out
adc
ret
mov
fwait
pop
cmpsl
xor
into
loope
gs
sbb
xor
push
fnsave
ret
js
clc
out
inc
push
lret
outsb
movsl
pop
out
jge
xchg
stos
shlb
lahf
stos
fwait
sub
mov
test
or
adc
and
int
outsl
nop
scas
jl
xor
stc
das
inc
or
sub
xchg
and
lret
xor
shrl
js
dec
jmp
cmp
pop
dec
sbb
out
cmp
gs
pop
scas
pop
test
mov
test
aad
cs
rcll
fadd
shlb
sub
out
es
mov
pop
dec
pop
into
xchg
adc
xchg
mov
add
mov
lahf
loop
out
push
lahf
sbb
pop
or
cmp
mov
cmp
adc
loope
lahf
popf
adc
lock
clc
out
jbe
adc
inc
adc
ror
rolb
pop
dec
and
mov
sbbl
mov
cmp
int3
mov
movsb
add
mov
adc
sub
and
mov
dec
jbe
and
ret
inc
sbb
fdivrs
push
jg
jb
js
sbb
les
outsl
shlb
es
xchg
test
int3
jb
notl
xchg
fwait
es
mov
mov
mov
ss
jne
mov
dec
cmpsl
dec
bound
inc
ss
rcrb
and
and
xchg
aaa
cmpsb
push
int3
xor
inc
and
mov
rcrb
mov
dec
adc
jne
out
popf
mov
fnstenv
lahf
xor
xchg
mov
paddsw
inc
pushf
stc
pop
mov
fimull
xchg
pop
inc
call
add
mov
mov
jbe
icebp
or
cmpsl
sahf
pop
dec
push
mov
xchg
sub
mov
pusha
xor
dec
aaa
jno
push
push
loop
stos
out
pushf
push
xlat
insb
fwait
mov
fs
or
test
mov
cmp
sub
nop
cwtl
inc
movsb
push
mov
lea
int3
out
xchg
push
out
hlt
adc
push
mov
inc
mov
xchg
aas
enter
dec
std
jnp
pop
or
mov
into
push
jb
and
push
les
loopne
test
sbb
test
mov
mov
cmp
push
adcb
movsb
shl
test
popw
jg
test
fs
call
xchg
cmpsb
add
leave
jmp
sub
mov
pop
lcall
ja
lea
idivl
push
push
pop
dec
jb
mov
lock
leave
jb
add
mov
xchg
lcall
scas
data16
cmp
aas
repnz
push
iret
rolb
adc
fcoms
xchg
sub
negl
out
and
dec
mov
rcrl
push
es
into
xchg
push
mov
dec
xchg
rorb
mov
into
mov
and
adc
xor
lds
push
lahf
dec
in
aad
inc
and
jnp
mov
scas
mov
jl
xchg
jge
sbb
push
inc
push
stos
stos
pop
idivb
movsl
scas
fwait
and
test
cs
jmp
out
xor
data16
jmp
rclb
sarl
in
mov
outsl
repz
push
dec
aas
jmp
dec
ja
mov
push
xchg
mov
xor
inc
push
jo
push
call
xchg
aas
adc
mov
mov
push
lahf
imul
subl
mov
js
rolb
mov
jo
fidivrl
pushf
and
pop
jle
sbb
sub
push
or
push
int
shr
mov
dec
xor
xchg
dec
data16
ds
inc
aaa
cmpsl
xchg
mov
push
lock
int
jecxz
sub
mov
and
test
shlb
mov
orl
rorl
lock
or
push
xchg
dec
sti
ret
push
mov
cmpsb
shlb
jnp
lcall
inc
leave
jmp
negb
xchg
out
xacquire
test
xor
mov
add
std
sbb
push
aaa
clc
xor
aam
cmpsb
cmp
add
push
pusha
jno
out
jne
cwtl
or
xor
xor
add
into
pop
xor
pop
mov
dec
pop
inc
cs
mov
xor
lcall
sbb
ljmp
mov
bound
or
xor
jns
cld
ss
cli
ljmp
xchg
lahf
sbbb
or
mov
mov
imul
mov
iret
add
or
cmp
into
jp
insl
cld
fnstcw
test
jae
dec
shl
or
popa
cmc
fld
lret
cmp
sti
or
pop
jns
jno
sar
mov
into
ret
rcll
es
aad
or
movsl
lods
sbb
stc
int
sub
shll
mov
or
rorb
cwtl
stc
mov
lahf
sub
jmp
dec
pop
inc
push
ret
enter
xchg
mov
test
popf
dec
cmpsb
call
mov
and
in
xchg
je
sbb
push
xor
dec
aad
fcomps
in
lock
jge
add
out
inc
imul
mov
je
repnz
movsb
int3
popl
stos
jb
aaa
pop
add
flds
jle
lcall
mov
pop
push
popa
dec
cs
cmp
mov
in
in
sbb
dec
push
in
rcl
push
dec
insb
cltd
mov
pop
fsubs
dec
jp
push
lahf
xor
dec
flds
pusha
mov
rcr
sbb
adc
cmp
testb
pop
jno
xor
pop
mov
rcr
adc
sahf
and
add
sbb
dec
cltd
add
jle
lock
ret
xor
ficoms
and
clc
mov
mov
cmp
in
add
shl
or
xchg
cltd
pusha
leave
pushf
sub
fstpl
fstps
or
dec
lahf
subb
sbb
add
in
repz
push
ret
std
push
pop
lret
mov
cli
sbb
adc
inc
mov
int
push
jo
xchg
mov
adc
sahf
mov
test
out
shr
xor
sub
sbb
out
inc
lret
roll
repnz
and
bound
mov
loope
mov
adc
xchg
jb
nop
mov
movsb
mov
stc
shrl
movsb
mov
adc
xchg
dec
xor
jne
adc
bswap
mov
dec
mov
sbb
pop
jnp
mov
pop
ret
lret
in
push
daa
push
cltd
test
lcall
aas
fs
fmuls
xor
push
jmp
xchg
add
out
sbb
or
cmp
outsl
cmp
repz
xchg
sbb
inc
aaa
mov
dec
stc
pushl
fldt
push
out
pop
out
xchg
inc
push
clc
sahf
lock
ds
mov
or
pop
push
xor
mov
dec
mov
loop
adc
jns
out
lret
iret
jbe
mov
fildll
iret
adc
mov
pushf
mov
ss
pop
in
add
mov
stos
enter
ds
mov
imul
call
xchg
lret
mov
leave
add
aad
pop
jmp
les
dec
testb
pop
pop
add
xchg
lret
mov
pop
mov
out
push
mov
repnz
clc
fisubrl
or
mov
adc
or
lods
cmp
adcb
xchg
jno,pn
pop
inc
mov
jg
nop
sbb
xchg
xlat
sbb
cmpsb
or
out
xchg
xchg
adc
xchg
fsubrl
jmp
and
shrb
mov
cmpb
xchg
lods
jb
mov
push
cmpsl
sti
mov
out
add
add
add
addr16
jl
mov
fcomp
call
or
mov
inc
xchg
ds
inc
mov
cli
cmpsb
adc
push
and
mov
xor
rcrb
popf
loop
imul
js
push
mov
push
outsb
fsubr
pop
mov
inc
aad
xor
push
pop
cmp
mov
clc
xchg
aas
lcall
cli
push
jge
fisubl
jle
xchg
inc
cli
mov
pop
pushf
xchg
aas
push
insl
ja
rorb
sub
jg
pop
inc
cmp
cmpsl
sahf
push
cmp
loopne
dec
mov
insl
sbb
rcll
pop
js
sub
sub
bound
shll
jp
jl
notb
shll
aaa
stos
mov
lahf
stos
mov
pop
cmp
imul
lcall
jg
adc
aam
dec
pushf
dec
mov
movsl
sub
jl
push
and
cmp
dec
mov
cltd
ret
insb
cld
imul
leave
mov
out
mov
js
xlat
insl
loop
push
xor
mov
ds
xor
loop
inc
add
pop
adc
in
lods
adc
adc
dec
push
cmc
lods
sbb
stos
js
xor
test
lret
pushfw
dec
enter
mov
enter
das
add
pusha
fistps
inc
js
pop
push
add
cwtl
rolb
jmp
jge
push
sarl
mov
mov
push
cli
push
jp
xor
and
sub
aad
cli
dec
sub
inc
arpl
add
insl
and
lods
test
lods
out
loop
shrl
cmp
jmp
jb
jb
sub
dec
pop
sarb
add
xchg
add
lcall
out
sub
lods
lret
pop
fnstcw
shlb
es
dec
mov
cmp
sbb
aas
xor
adc
inc
pusha
xchg
xor
cmp
dec
lahf
mov
loop
movsb
xchg
in
fidivs
subl
jnp
and
cmp
cmc
cwtl
push
fxch
adc
sub
xchg
ret
outsl
jno
imul
pop
mov
fdivrs
push
jge
ss
cmovnp
cmpsb
inc
dec
dec
jmp
push
sub
daa
addr16
outsl
pusha
jg
dec
test
hlt
cwtl
xor
jae
dec
test
call
mov
lgdtl
or
sahf
jae
inc
or
jbe
filds
inc
add
loop
cld
aas
sbb
in
jp
xor
push
push
test
and
pop
adc
jle
lds
sub
ss
or
arpl
push
pop
jno
jg
dec
lds
clc
outsl
aaa
test
mov
pop
test
es
push
xchg
fdivr
xchg
xor
xor
lret
xchg
xlat
mov
dec
test
pop
lock
fcomip
lret
sub
sub
punpcklwd
addr16
xchg
dec
into
jbe
inc
fbld
dec
leave
cmp
jmp
sub
pop
jae
rcll
jge
aad
test
cmp
fdivrl
mov
aaa
out
or
pop
mov
loope
xchg
add
and
out
and
xlat
sub
popa
jnp
dec
mov
cmp
inc
adcb
jnp
pop
sarl
add
aad
pop
mov
lret
mov
mov
mov
sahf
lret
pop
shrl
out
pop
mov
mov
outsl
repnz
push
pop
mov
mov
movsl
or
stos
aas
jae
call
adc
pop
or
mov
negb
scas
scas
lret
dec
mov
mov
pop
inc
imul
into
push
aad
je
push
push
arpl
xor
sub
jg
gs
pop
mov
test
out
jecxz
adc
sub
fsubp
adc
push
lret
xchg
int3
push
negb
insl
popf
ret
insl
inc
lret
mov
int3
repnz
scas
orl
cmp
fdivl
aad
ficoms
sub
or
xchg
fcoml
dec
push
arpl
mov
fcoml
popa
adc
and
xor
or
out
push
cmpsl
push
pop
mov
mov
inc
jle
dec
in
sub
mov
jno
ds
xor
fcmovb
nop
lret
bound
xchg
dec
mov
xor
gs
fmul
cmpsb
jmp
jmp
out
shrb
adc
mov
xorb
rcll
and
enter
push
jnp
and
fimull
mov
repnz
ret
adc
loope
pop
outsl
movsb
dec
inc
jl
add
and
test
push
add
cmpb
insl
push
push
ret
out
jo
sbb
and
pop
push
pop
push
and
dec
pop
jl
dec
aam
cmp
mov
fstl
xchg
mov
ret
pop
mov
push
jbe
inc
sub
cltd
sub
stos
pop
xchg
outsb
jp
cmp
cmp
add
push
xchg
daa
or
fwait
shl
daa
xor
cltd
jge
loop
in
out
lock
bound
cmp
das
push
aaa
push
and
xor
xor
adc
jge
sbb
jns
jnp
lcall
mov
aam
popf
clc
lea
jge
mov
mov
xchg
xlat
js
and
pop
cmp
jne
repz
xor
arpl
shrl
sub
mov
pop
dec
pushf
movsb
xor
frstor
es
inc
cli
rorb
cmp
mov
test
add
stos
or
nop
ss
fistl
xor
inc
aas
xchg
sub
insb
cltd
inc
and
pop
stc
jmp
xchg
xor
es
lcall
adc
jl
std
mov
les
jne
test
test
subb
out
or
xchg
lds
or
push
dec
sub
iret
mov
aaa
cltd
stc
test
sbb
rcrl
ds
jmp
imul
add
xchg
cli
or
gs
push
mov
xlat
mov
enter
add
movsb
fwait
xchg
mov
xchg
xchg
dec
cmp
vmaskmovdqu
push
mov
xlat
dec
xor
sbb
sub
mov
xchg
fiaddl
cld
adc
add
xchg
scas
xchg
xor
mov
sti
pusha
inc
lds
sbb
sbb
les
xor
frstor
jg
pop
mov
xor
sbb
xchg
call
fnstenv
adc
out
mov
and
or
and
push
shlb
dec
mov
fstl
inc
fstpt
push
imul
dec
push
inc
and
inc
lahf
pop
ss
arpl
insb
aam
mov
inc
movsb
lea
jle
lret
add
gs
push
movsl
imul
fsubrl
xlat
cli
mov
fdivs
repnz
sbb
push
mov
test
lret
push
lret
addr16
fldenv
mov
lds
pop
and
xchg
pop
addr16
cs
in
pop
fldcw
mov
rorl
imul
dec
hlt
mov
sti
cmpl
and
mov
mov
lods
mov
ljmp
pop
insl
push
int3
xchg
pop
jb
imul
jb
add
push
repnz
fsubrs
xor
mov
in
inc
dec
and
mov
or
mov
and
popa
in
sbb
cmpsl
repnz
test
push
mov
mov
in
mov
sub
popa
inc
nop
insb
out
sbb
dec
xor
iret
jb
xor
push
fidivrl
xor
shlb
iret
pop
nop
push
mov
sarb
in
popa
imul
aaa
jne
test
jmp
mov
fimull
mov
cwtl
mov
jo
inc
lret
fisubrs
cmp
jo
inc
fldcw
pusha
push
or
cmp
add
cmp
sub
mov
sub
push
and
in
repz
xor
inc
insb
sti
and
movsb
dec
or
lds
inc
pop
arpl
pop
ret
fcmovbe
jl
jae
pop
enter
xchg
mov
mov
mov
inc
lcall
push
bound
xor
imul
addr16
scas
sbb
in
pop
loop
xchg
repz
sbb
dec
cwtl
out
cmpl
in
aaa
test
out
mov
cmc
pop
test
mov
insl
and
fmuls
test
or
mov
clc
sbbl
mov
sbb
inc
faddl
push
data16
xchg
sbb
mov
fs
mov
add
mov
push
add
jb
sarb
aam
lds
sahf
xchg
or
call
inc
ret
call
out
inc
clc
mov
fdivrs
nop
add
test
mov
es
ljmp
lock
into
xor
add
into
and
and
stos
inc
cltd
sub
sub
pop
mov
stc
inc
pop
lock
push
lock
cmp
cmp
sahf
inc
cs
imul
push
or
lahf
cmpsl
cld
fadd
popa
push
mov
rcrb
sarl
inc
mov
sub
add
sbb
push
pushf
and
lds
xchg
sbb
lret
ret
xchg
fsubrs
cmc
dec
pop
loop
and
mov
fidivs
cmpsl
mov
fldl
sbb
and
lret
pop
pop
mov
adc
dec
mov
mov
mov
sti
and
mov
mov
pop
shlb
jg
mov
push
mov
push
in
lcall
mov
jbe
ljmp
popa
adc
sbb
dec
lret
adc
pop
in
jl
enter
shlb
test
push
stos
mov
scas
dec
leave
push
push
mov
popf
adc
sti
jg
mov
push
out
cwtl
cmpsb
incb
shrb
pop
sub
push
mov
pop
push
insb
popf
ret
mov
ficoms
out
femms
dec
insl
mov
pop
dec
rorb
inc
das
rclb
stos
or
cmpsb
test
pop
push
lcall
das
ja
add
xchg
sbb
pop
sbb
cmp
cmpsb
mov
in
add
or
cltd
sub
aaa
icebp
inc
cmp
les
mov
pushf
aam
sub
inc
sbb
adc
inc
lcall
pop
jle
dec
mov
aaa
mov
cmpsb
lock
add
lcall
fisttpll
and
mov
lea
push
icebp
fidivrs
stos
adc
jo
std
pop
rorl
sub
mov
push
sub
sub
fistpll
add
ds
in
flds
mov
imulb
or
mov
loop
sub
add
lods
sahf
mov
sub
sahf
jno
push
pop
sub
rorb
leave
cmp
in
int3
repnz
xor
pop
mov
repz
cli
adc
test
xor
into
xor
cmp
gs
shlb
ja
xchg
cmp
dec
pop
jp
js
sbb
mov
pop
or
sbb
testl
mov
jbe
loop
repz
lods
sub
cmp
test
roll
inc
cmpb
std
stc
inc
aam
and
in
cltd
push
xor
sbb
das
push
idivl
mov
sub
adc
je
jnp
push
cmp
sbb
gs
in
fisubrl
or
sti
jno
fsubl
cli
dec
cmc
pop
aad
scas
or
lock
inc
daa
xchg
scas
lahf
and
out
or
xor
mov
testb
pop
add
in
mov
in
inc
sub
mov
call
sahf
fs
mov
and
loopne
lahf
dec
xlat
out
les
gs
popf
cmp
mov
xchg
out
mov
in
lret
sbb
mov
push
jbe
mov
cs
out
cli
push
aad
out
dec
cmc
aaa
pop
mov
fld
test
dec
cmp
push
cwtl
stc
mov
pop
push
sub
push
xlat
addr16
mov
cmp
fbstp
arpl
stos
js
jb
fcoml
fdivl
push
mov
gs
inc
mov
test
jae
sbb
loope
adc
sub
xchg
pop
cmp
pop
jne
es
xor
jae
mov
mov
and
adc
ljmp
aad
scas
loopne
adc
push
xlat
xor
jae
icebp
int3
loop
pusha
imul
jne
mov
xchg
scas
push
push
add
lahf
out
sahf
pop
sar
pop
xor
lcall
addr16
and
fdivs
ljmp
insl
mov
es
adc
pusha
inc
cmp
dec
mov
retw
adc
popa
dec
out
lahf
sub
add
rcrb
in
loopne
push
mov
add
scas
cmp
mov
dec
jecxz
repz
pushf
add
mov
aas
sub
xchg
stos
pop
je
sbb
sbb
dec
or
mov
dec
icebp
xchg
mov
mov
push
repnz
mov
stc
mov
mov
jge
lahf
jnp
mov
xor
clc
jno
dec
fstpt
adc
xchg
push
dec
rcr
add
mov
dec
jb
xchg
push
or
cmc
and
xchg
ret
repnz
stos
push
mov
addr16
push
test
mov
imul
loop
jecxz
xchg
cmp
jmp
mov
cmp
mov
les
mov
pop
stos
pop
add
loopne
mov
mov
les
inc
pop
jo
testb
pop
aam
xchg
lret
pop
pop
fisubrs
pop
xor
sub
fisubrs
js
inc
cmp
sbb
repnz
xor
cmp
ja
jg
and
mov
mov
cmc
fadds
fmull
std
gs
sub
das
jns
xchg
jbe
push
and
outsl
and
dec
mov
xorb
aas
cli
xor
mov
lea
push
stos
cltd
pop
jae
nop
xchg
pop
mov
out
or
loope
leave
and
mov
filds
insb
scas
pop
sbb
sub
imul
imul
adc
js
aad
fidivs
aam
sbb
fidivrs
popf
sti
shlb
xlat
sub
fimuls
jae
movsl
xchg
mov
fists
ljmp
insl
mov
mov
or
ret
call
daa
jae
xchg
pop
lods
xchg
pop
push
stos
xorb
ja
mov
icebp
push
adc
sub
mov
popa
aas
add
jo
add
cltd
push
cltd
insb
leave
mov
hlt
lcall
push
dec
stos
xchg
popf
cwtl
fdivrs
push
out
inc
inc
test
mov
adc
mov
iret
sbb
cmp
scas
sbb
xchg
popf
mov
leave
pop
mov
push
inc
sub
lods
dec
cmp
dec
dec
imul
div
mov
and
push
jmp
aad
xor
shrl
negl
cmp
sahf
outsl
dec
and
rcll
in
lcall
cwtl
push
xchg
fdivr
shrb
rorb
adc
and
popf
jmp
sub
dec
xchg
add
stc
aas
push
lock
sub
xor
jne
lfs
cld
pop
jb
or
sbb
push
roll
arpl
xor
fwait
cwtl
and
fcmovu
pop
sub
mov
js
sbb
mov
inc
add
dec
jb
cwtl
jo
ss
les
lds
neg
aaa
mov
aas
in
ljmp
cmp
xchg
rclb
rclb
insb
sbb
add
xor
cwtl
cmp
movsb
popf
or
stos
insb
sub
xchg
cmpsb
dec
lret
or
jbe
jg
in
and
sti
je
lds
push
pop
je
ret
popf
mov
jg
xchg
inc
xchg
dec
out
cmpsb
xor
mov
and
stos
stc
pop
push
mov
cmpsl
cmpl
jle
out
loopne
sbb
add
or
roll
add
mov
xchg
loope
lahf
icebp
js
outsl
or
divl
sub
dec
hlt
loop
outsb
cld
sbb
insl
and
xor
dec
jecxz
dec
idivl
in
mov
popf
add
sahf
sbb
int
les
cmp
mov
xchg
sub
shr
repnz
mov
lods
xchg
out
cmp
shlb
out
mov
insl
sbbl
test
insl
pop
clc
add
outsb
adc
cld
mov
mov
mov
out
decl
js
jmp
into
xchg
out
dec
fldenv
fnstcw
sub
dec
and
jae
and
outsb
sahf
out
inc
push
or
mov
pop
inc
xor
pop
popf
sar
sbb
inc
mov
scas
xor
sbb
or
pushf
adcb
subb
pushf
sbb
mov
or
outsl
lods
jge
arpl
cli
xor
inc
scas
jae
addr16
and
scas
push
pop
incl
pop
push
jmp
mov
cli
add
and
into
mov
pop
outsb
movsb
ficomps
pop
mov
cli
cs
jnp
fdivs
inc
push
fsubrl
data16
push
sub
popa
data16
mov
cmp
sbb
mull
shrb
inc
adc
xchg
mov
jnp
pop
push
loope
cld
push
fwait
mov
movsl
mov
push
inc
fisubrl
ja
and
rcrl
xchg
jecxz
daa
sub
xor
pop
cmp
shll
lods
jae
popf
in
imul
or
mov
fistps
iret
cs
ds
xor
cli
mov
inc
ficoml
fwait
push
in
pop
arpl
aaa
mov
js,pt
pushf
jae
xor
addr16
adc
adcb
cwtl
add
in
adc
sbb
cmp
inc
rcl
imull
push
ljmp
fld
imul
fistpll
push
call
pop
les
nop
lret
sbb
and
mov
add
push
lret
dec
stc
pop
mov
aaa
xchg
xchg
lahf
jb
sub
mov
inc
fildl
cmp
enter
rcrl
fiadds
outsl
pop
cmp
dec
or
stos
mov
lods
lcall
adc
inc
in
lods
jp
es
mov
imul
mov
popa
test
mov
frstor
or
sub
sbb
xchg
push
cltd
bound
inc
notl
jl
and
lods
mov
pop
xchg
fs
mov
lret
xchg
xor
in
add
sbb
repnz
pop
push
les
test
es
inc
sub
ficoms
xor
ret
ja
rolb
shl
stos
mov
cs
pop
dec
xor
movsl
sahf
add
leave
mov
or
mov
jne
dec
jecxz
js
sub
dec
adc
mov
xor
fwait
dec
andb
sub
fnstsw
stc
xchg
push
mov
xchg
adc
pop
sub
cmp
jge
ret
add
xchg
fisttpl
cmp
mov
icebp
lea
xor
mov
fwait
mov
cs
jle
mov
push
add
aaa
hlt
lods
rcll
cld
ljmp
pop
and
fisttpll
data16
repnz
dec
mov
fistpl
pop
push
push
pop
test
sbb
lret
inc
cld
jp
ret
sub
jmp
iret
mov
insb
add
es
xchg
pop
testb
rolb
out
das
xchg
movsb
lods
push
xor
or
add
ja
mov
sbb
inc
mov
mov
movsl
xor
cld
test
lds
pop
jecxz
sub
loope
loope
mov
loop
popf
push
sbb
shll
sub
daa
pop
popa
enter
and
lret
fs
add
mov
movsl
add
mov
test
push
js
gs
sub
dec
sub
jg
jae
das
cwtl
push
mov
add
push
cs
mov
push
mov
jbe
cmp
insb
ss
ret
fldt
lds
jnp
repnz
lods
sub
sbb
stos
popf
push
cmpsl
ret
stos
shlb
sbb
adc
inc
dec
or
dec
repz
dec
fstps
push
lods
and
xor
xor
pusha
loopne
dec
pop
shl
int3
jmp
dec
bnd
jnp
inc
mov
mov
inc
adc
repnz
mov
inc
pushf
or
daa
mov
in
out
add
fxch
daa
adc
xrelease
and
arpl
cmc
test
push
add
mov
aam
pusha
mov
loop
fcompl
pop
icebp
fucom
or
imul
xchg
aas
loope
or
in
pop
adc
xorb
pop
lods
add
mov
xchg
add
cmp
testb
dec
cmp
pop
jecxz
cmpsb
pop
sbb
call
es
push
push
lahf
mov
mov
test
pop
cmc
test
daa
xor
insl
fs
fwait
or
imul
int3
xor
mov
jl
clc
add
or
insl
popf
popa
ljmp
loop
les
jmp
xchg
sbb
xchg
pop
cli
inc
inc
hlt
roll
adc
popa
sbb
mov
add
and
xlat
leave
push
mov
dec
ss
or
push
cli
adc
les
pushf
and
sbb
mov
fwait
and
push
or
fildl
aam
xor
imul
cmp
dec
add
mov
ds
inc
lret
add
bts
xchg
rorl
repnz
stos
fdivs
fs
xor
roll
cmp
popa
ss
and
fmuls
clc
faddl
jmp
repnz
dec
cmc
sbb
adc
mov
xchg
dec
xor
fidivrs
sbb
mov
repnz
xlat
add
pushf
ret
shlb
lret
repz
js
lea
daa
insl
gs
pop
jecxz
mov
adc
lds
mov
cltd
daa
dec
mov
sub
stos
jns
outsl
jb
shll
mov
std
jae
push
div
cmp
cmpsl
lret
aaa
sub
ret
and
xchg
fdivr
lahf
movsb
pop
out
jnp
dec
inc
imul
fidivl
pop
sub
jecxz
out
ja
dec
mov
cmp
pop
xor
ret
jg
pop
and
test
sub
lds
push
loopne
jg
mov
mulb
je
lods
push
jecxz
xor
lods
fcompl
ret
adc
adc
aad
loope
adc
ret
pop
imul
push
cmp
adc
jl
rclb
dec
sbb
adcl
pop
stc
sbb
mov
add
add
push
jecxz
notl
jnp
inc
xlat
cld
inc
mov
dec
cmp
add
pop
sbb
pop
mov
cmp
stc
ret
lods
add
hlt
mov
fsubr
mov
adc
lahf
jne
movsl
cmpsl
sti
xchg
sbb
inc
mov
xchg
push
test
rcrl
mov
outsb
xchg
int3
out
add
fisttps
call
inc
scas
and
cwtl
adc
mov
ret
sub
test
fsubr
sub
cmp
mov
popf
movb
gs
mull
push
dec
and
mov
sub
fidivs
fs
mov
pusha
lcall
push
mov
outsl
fbstp
xor
out
pop
loopne
xor
cmp
jp
jnp
lahf
into
cwtl
lods
jmp
sub
aam
push
out
pop
js
lahf
xor
jle
cmp
adc
out
fwait
mov
cmp
sub
out
xlat
jae
outsl
inc
je
aad
sbb
xchg
insb
adc
pop
pop
xchg
push
xchg
push
jb
dec
mov
call
lcall
adc
sahf
push
cmc
and
cmp
lods
jne
shl
inc
test
push
sbb
std
mov
lahf
mov
xor
dec
fiaddl
mov
add
pusha
inc
sub
mov
cli
pop
cli
push
idiv
push
repz
mov
loop
push
out
outsl
pop
in
shll
arpl
ds
and
imul
sub
and
push
jae
dec
lret
jnp
jns
addr16
cmp
sbb
fisttpl
movsl
adc
sbb
add
rcll
call
pop
and
sub
pop
jb
or
or
mov
scas
xor
jl
mov
push
cltd
and
aad
das
orl
sarl
cmp
call
lea
cmpsl
hlt
shll
sbb
xor
jae
xor
mov
int3
fs
or
stos
mov
imul
hlt
pop
outsl
mov
sti
aam
shr
pop
inc
dec
pop
jnp
outsl
cmp
repnz
adc
cmp
sbb
xor
jmp
xchg
test
jmp
lods
dec
lods
lods
and
scas
inc
pop
mov
stos
xlat
jno
mov
iret
imul
push
jbe
xchg
push
pop
sub
gs
and
je
sub
sbb
push
sbb
sub
call
push
movsb
jmp
ss
dec
inc
test
je
lahf
pushf
sbb
ds
mov
mov
sbb
fidivrl
idiv
outsb
adcb
mov
inc
dec
xchg
xorb
mov
xchg
shlb
mov
dec
fisttps
jp
sbb
push
push
and
stos
nop
xorl
cmc
dec
repz
pop
leave
push
or
xchg
sub
mov
cmp
jmp
and
sbb
aas
call
or
jecxz
lcall
cwtl
mov
mov
lea
mov
fwait
stc
test
xlat
jp
in
sti
in
jmp
xchg
imul
dec
in
imul
stos
mov
popa
jno
mov
movsb
push
leave
iret
imul
xchg
sub
mov
mov
test
push
inc
pop
or
out
cmc
dec
arpl
mov
mov
push
sub
xchg
data16
pop
cmpsl
popf
movsb
or
mov
add
mov
inc
sbb
inc
loopne
shlb
adc
and
test
test
add
mov
cs
outsb
and
mov
xor
xor
icebp
test
cs
cmp
sbb
aam
insl
ja
out
ljmp
fcompl
fiadds
in
out
ficoms
and
pop
xchg
mov
int3
testl
jo
adc
outsl
call
rcl
daa
daa
dec
mov
imul
enter
sub
in
and
scas
pop
mov
cmpsl
xor
add
fsubr
xchg
lahf
cmp
pop
lock
jle
or
xor
mov
sahf
mov
cmpsl
jg
loop
outsb
adc
fs
inc
jmp
call
popa
dec
jnp
cmp
xor
cld
popf
push
aad
enter
push
dec
sub
imul
aam
mov
insb
es
mov
clc
mov
std
fbstp
aad
mov
xchg
icebp
cmpsl
mov
aas
sahf
jbe
and
inc
imul
fistpll
fisubs
fcomi
mov
test
push
clc
cmc
jb
mov
push
adc
out
shrl
or
xchg
xlat
stc
loop
fs
xchg
outsl
in
icebp
movsl
mov
lcall
push
inc
fdivp
sub
cmp
loop
mov
xor
adc
add
inc
mov
gs
iret
fstpl
cli
mov
push
and
mov
or
int
out
stc
inc
ljmp
or
mov
fldt
daa
xchg
xor
push
xchg
xor
dec
div
sbb
jl
sub
sub
movsl
adcl
adc
addb
sti
orl
pop
mov
fcmovu
sbb
repnz
fistpl
in
out
aas
adc
arpl
and
pop
xchg
std
lcall
lods
xchg
cmc
in
sub
std
std
movsb
inc
mov
add
xor
pop
xchg
stos
sub
adc
roll
daa
in
lds
insl
sub
lds
rcr
push
dec
loopne
inc
aad
adc
stos
sarl
arpl
repz
inc
inc
push
adc
test
jnp
out
shll
ja
mov
push
dec
pop
int3
lret
pop
pop
lret
ds
aad
aam
lds
sarb
mov
es
repz
add
repnz
testl
inc
and
dec
inc
sub
cli
jg
test
push
or
jb
push
movsb
aad
lock
sbb
xchg
mov
arpl
repz
cmp
lret
enter
daa
mov
ja
mov
testl
jle
push
xor
sub
in
scas
mov
cmp
sub
lcall
cmpsb
jl
js
pop
sub
sti
jae
sbb
mov
and
xchg
sub
mov
cld
mov
cmp
inc
pop
mov
sub
pop
pop
pop
pop
std
lds
push
inc
ret
pop
notb
fs
jge
jg
xor
add
inc
jge
std
and
int
movsl
popa
dec
jmp
push
inc
pop
jl
xorl
outsl
pushf
repnz
bnd
dec
add
xlat
adc
and
enter
adc
mov
pop
mov
push
mov
mov
sarb
dec
dec
lock
push
add
stos
xchg
movsl
daa
scas
xor
mov
xor
es
sbb
sub
jmp
sti
inc
in
mov
leave
push
sbb
add
mov
imul
push
ds
aad
incl
cwtl
mov
adc
stc
ret
mov
das
inc
mov
mov
bswap
pushf
scas
xchg
mov
rcll
insb
push
mov
loopne
inc
mov
rclb
in
adc
int3
in
arpl
lea
test
test
jge
push
mov
stos
jg
add
imul
mov
cmp
shl
mov
inc
shll
and
test
jp
pop
imul
daa
sbb
or
pop
add
xor
and
pop
jb
int3
rol
jg
push
ror
fs
je
imul
push
xchg
iret
mov
cwtl
in
sbb
pop
pop
fadd
lock
rcrb
jg
jb
mov
dec
lock
xor
into
movsb
mov
popf
and
pop
leave
dec
or
add
jno
inc
adc
or
repnz
sbb
xchg
cmp
imul
int
adc
jno
in
lahf
pop
mov
loopne
sub
aaa
adc
jle
pop
or
sbbb
fistpll
or
pop
shl
lahf
push
pop
pop
lea
in
mov
pop
xor
in
loope
push
addb
inc
out
arpl
cmc
mov
push
jmp
sub
inc
dec
fidivrl
or
mov
shll
dec
test
mov
push
lret
jmp
das
mov
and
aad
xor
loope
mov
pop
push
cli
dec
fmull
add
add
andb
pop
mov
mov
repnz
notrack
sub
push
dec
repz
fs
adc
pop
lret
mov
pop
test
fsubrl
out
sub
sahf
pushf
gs
add
test
fnstsw
and
mov
movsl
daa
jnp
lcall
and
or
jns
js
inc
enter
icebp
inc
mov
cmp
add
sub
les
xlat
repz
out
bnd
dec
inc
sub
data16
in
imul
ja
push
dec
pop
sti
mov
rcrl
jnp
jns
out
popa
jno
cmp
inc
lds
dec
sbb
dec
divb
jge
out
adc
int3
jge
push
inc
mov
xor
pop
pop
and
mov
cmp
dec
xor
cmpl
inc
mov
into
jno
int
out
movsl
pop
stc
nop
fdivrs
out
jno
gs
jg
cld
adc
pop
inc
dec
jle
nop
std
mov
mov
add
lret
jnp
push
pop
stc
cwtl
jp
clc
adc
or
dec
fcmove
shl
imul
mov
loop
insb
xchg
xchg
mov
ds
mov
add
das
out
fisubrl
fst
mov
pop
mov
in
or
push
or
and
cmp
push
dec
ds
dec
out
add
fcoms
fistpl
lea
paddb
dec
mov
mov
outsl
enter
adc
mov
mov
push
jno
cmpsb
sub
jp
push
push
xchg
int
icebp
ja
lret
mull
loope
sub
xchg
and
sbb
mov
xor
out
adc
in
push
shl
sbb
pop
inc
and
addl
popa
in
push
leave
lahf
or
dec
adc
pop
nop
jae
stos
test
pop
aad
inc
pop
rcrb
xor
push
addr16
inc
push
jp
dec
mov
inc
jns
aad
addr16
or
ljmp
push
sahf
in
cwtl
xchg
push
aas
nop
cld
movsl
push
fisttpl
inc
popf
pop
in
dec
lcall
ficoml
fcom
cmpsl
pop
push
mov
push
subl
jne
xorb
imul
mov
scas
out
notl
pop
repnz
cmp
cmp
cli
push
dec
mov
scas
dec
shll
push
add
jns
jecxz
lock
testl
ss
inc
and
arpl
fstpt
out
xchg
test
stos
mov
mov
out
xchg
pop
push
pop
scas
lods
loope
gs
mov
subl
cmp
xor
test
jl
aad
aas
sbb
cmc
imull
cmpsb
xchg
adc
add
int3
push
push
shlb
dec
loop
pop
mov
xchg
mov
inc
jae
adc
out
les
loopne
es
sbb
jl
aaa
addb
jmp
jnp
ror
aad
mov
fnstsw
shll
sbb
arpl
out
or
jmp
mov
xchg
and
ffreep
dec
orl
xchg
mov
ret
arpl
std
fsubr
ret
fmull
pop
sbb
cmpsl
dec
out
mov
mov
push
jle
jge
fidivrl
jecxz
test
std
mov
xchg
lcall
cmp
dec
cmc
sti
xchg
aad
repz
jno
test
dec
ja,pt
leave
fwait
daa
and
or
xor
jae
sub
jge
cmp
arpl
lea
ljmp
xor
pop
test
add
add
cmc
inc
orl
xchg
inc
push
outsl
into
repnz
test
fsub
and
lock
xor
push
inc
mov
mov
mov
xchg
pushf
pop
adc
movsl
push
inc
add
stos
jbe
fwait
adc
popa
mov
mov
cmova
out
mov
test
loopne
outsb
inc
lahf
add
lcall
jnp
gs
jbe
out
or
jno
outsb
iret
stos
bound
sbb
call
sahf
inc
rclb
pop
int3
gs
xchg
in
stc
and
jg
je
and
imul
testl
out
sbb
xchg
cmp
fisubl
lea
jle
push
adc
mov
bound
jg
push
mov
jmp
mov
sbb
mov
imul
cmpsb
dec
pop
adc
push
pushf
sbb
xchg
sub
and
inc
in
jns
das
arpl
adc
inc
dec
fcompl
lea
bound
enter
mov
les
jae
ljmp
xor
xchg
sub
add
ret
cwtl
pop
shll
adc
sbb
mov
sbb
cs
jmp
or
outsl
xchg
sbb
pop
inc
insb
outsb
sarl
sahf
enter
ret
pop
push
shlb
ret
aam
dec
addr16
push
add
mov
repnz
pop
dec
cmpsl
add
testl
cs
out
dec
into
imul
mov
rclb
add
jecxz
mov
ret
lahf
in
shl
push
adc
sub
hlt
mov
les
cmp
sbb
in
out
add
lret
addr16
mov
mov
push
mov
xlat
cmp
in
adc
xor
pop
pop
and
inc
cmpsl
sub
pop
pop
in
sti
in
cmp
ss
fucomip
xchg
or
test
mov
icebp
mov
ficoms
dec
pop
sub
mov
jno
mov
sub
add
ficomps
adc
insl
mov
fnstenv
pop
add
mov
ret
mov
int
add
and
jo
inc
js
movsb
loope
clc
lret
inc
bound
jl
jp
mov
or
lods
add
sbb
je
or
shl
xor
add
add
repz
sahf
popf
push
es
aad
fucomp
adc
jne
mov
mov
inc
in
ret
ret
mov
lcall
xchg
mov
mov
dec
sahf
sub
fmull
popa
sub
pop
push
outsb
cmp
adc
jmp
push
mov
pop
and
lcall
jle
sub
mov
addr16
push
pop
loopnew
popf
loopne
add
mov
cmp
mov
mov
pop
idiv
cli
sub
sbb
call
bound
dec
imul
dec
dec
imul
aaa
aad
mov
jnp,pn
mov
sbb
lods
adc
mov
inc
dec
or
and
test
scas
insb
mov
clc
xchg
mov
pop
test
jbe
rcrl
leave
sbb
inc
cld
add
xchg
enter
sbb
mov
mov
fincstp
cli
jp
mov
fimull
or
outsl
out
xchg
fmulp
adc
sub
ficomps
xchg
push
mov
xlat
mov
and
mov
mov
sbb
repz
mov
mov
adc
inc
daa
sub
enter
insl
int
mov
sub
jl
mov
dec
imulb
lcall
cmp
xchg
je
mov
rolb
mov
sbbb
mov
sub
inc
xchg
mov
push
xor
hlt
sbb
ftst
or
ds
imul
xchg
sub
dec
sub
int3
inc
into
insl
sub
xor
mov
jnp
xor
iret
dec
push
cs
sti
into
sbb
adc
mov
pop
addr16
cli
xchg
and
cwtl
push
or
mov
gs
aad
in
mov
fsubl
cmp
fnstsw
outsb
adc
dec
movsl
test
clc
int3
gs
add
push
inc
mov
xchg
leave
xor
fimull
dec
xchg
mov
cmp
mov
dec
loop
xlat
adc
arpl
and
int
movsb
call
lea
mov
mov
cmp
aam
or
lret
xchg
add
and
jle
insb
push
repnz
cs
into
and
push
push
sub
data16
rorl
xor
jb
repz
out
iret
stos
mov
sub
ret
xchg
adc
js
adc
shrl
jg
add
mov
xchg
cmp
aas
in
jno
xor
and
push
aas
pop
mov
add
pop
es
mov
gs
xor
mov
sub
xchg
sbb
xchg
mov
xchg
mov
test
je
das
push
movsb
stos
clc
pop
adc
ja,pt
fdivrl
daa
aad
pop
mov
es
push
or
jns
adc
inc
jbe
cld
jmp
push
cmpsb
outsb
jnp
cmp
sbb
xor
mov
mov
arpl
xchg
mov
pop
pop
push
rclb
stos
push
push
movsl
jnp
adc
inc
pop
mov
or
popf
and
mov
cmp
jp
imul
das
lds
pop
dec
mov
insb
enter
int3
mov
pop
ret
mov
dec
je
jb
daa
mov
clc
je
adc
push
shlb
add
pop
imul
sub
adc
in
push
sub
xchg
adc
add
rcr
cmp
jbe
xor
pop
push
cmova
addr16
push
sub
lods
sti
ss
shll
lar
mov
cmp
xchg
jns
push
test
pop
xchg
rcll
sub
in
mov
and
xchg
out
leave
push
inc
mov
lret
sbb
pop
mov
insb
lods
mov
xor
fidivrs
out
jnp
pushf
jne
adc
xchg
xchg
and
test
cltd
insb
leave
jecxz
es
int
sub
sub
out
mov
aas
shl
hlt
sbb
mov
xor
les
idivb
push
ror
ds
sub
repnz
insb
push
sbb
xchg
xchg
jbe
cld
mov
movsl
fcomip
and
mov
movb
shlb
pop
jo
mov
mov
push
repz
push
neg
stc
and
aam
nop
rcrb
cltd
in
pop
and
adc
dec
jne
adc
push
cltd
ficoml
cmp
dec
jl
out
popf
mov
ret
jns
test
lcall
push
mov
adc
jnp
faddl
call
mov
insl
dec
mov
jle
dec
notb
or
gs
aad
fsubs
sub
xor
mov
or
push
inc
loop
mov
test
mov
fs
outsb
fwait
cmpsl
push
in
mov
test
int3
int
std
adc
das
mov
pop
mov
ja
mov
sub
jns,pn
es
outsb
je
scas
bound
adc
mov
xchg
mov
sub
movsl
shr
xor
mov
cs
fdivrl
cmc
lret
sbb
sahf
inc
pop
push
lods
inc
adc
clc
in
sti
inc
cmp
or
sbb
push
sub
adcb
adc
or
ret
dec
and
addr16
imul
sbbl
inc
jnp
and
sbb
add
cltd
repz
shlb
ret
imull
out
mov
imul
sarl
lods
cmc
rclb
and
hlt
or
push
push
jne
adc
lahf
sbb
addr16
mov
cmp
mov
push
sti
lods
shrb
bnd
inc
popf
and
jne
mov
add
pushf
pop
and
inc
jl
hlt
mov
push
pop
pop
fxch
xchg
cmp
cmp
push
cmp
pop
popf
dec
sub
sbb
pop
mov
pop
add
jnp
push
in
scas
mov
fidivrs
push
mov
jmp
push
dec
mov
mov
daa
dec
out
flds
jl
mov
popa
test
outsb
ds
inc
in
stc
orb
mov
lcall
cmp
outsb
jb
and
jbe
inc
lds
ljmp
scas
insb
repz
adc
data16
jp
push
pop
xor
inc
pop
xchg
xchg
mov
mov
mov
xor
repnz
xor
cmp
lods
inc
shrl
inc
popa
into
push
sahf
push
sub
cltd
out
inc
jbe
iret
push
test
cs
daa
push
leave
jb
rcr
adc
int
xchg
push
adc
push
loop
mov
fcoms
mov
std
jo
out
jecxz
sbb
outsl
sub
push
mov
js
nop
lret
test
les
outsb
test
in
gs
dec
scas
jl
test
test
cmp
je
cltd
pop
mov
xlat
addl
test
sub
mov
aam
dec
pop
insb
adc
pinsrw
in
jne
mov
scas
and
stc
and
aam
mov
enter
push
outsb
sub
pop
push
inc
pop
dec
cmc
lahf
and
ljmp
shlb
sbb
dec
mov
lds
xchg
sub
adc
and
test
push
jge
pushf
fcomps
pop
sub
int3
lcall
clc
mov
out
mov
lods
addl
jl
mov
notl
test
inc
lahf
pushf
cmp
std
lahf
sbb
lods
icebp
hlt
stos
pop
or
inc
inc
push
movsl
push
add
ret
shlb
adc
mov
mov
int
jmp
pop
jmp
push
jo
cwtl
sbb
dec
aas
hlt
enter
scas
pop
jge
ljmp
scas
stos
add
and
or
je
pop
cli
adc
leave
push
stos
adc
jp
cld
mov
dec
shlb
je
cmp
pop
mov
ficompl
fdivr
adc
adc
push
mov
dec
fwait
dec
jle
sbb
shll
jnp
iret
xlat
xor
call
jns
ds
call
loope
loopne
out
shl
mov
into
mov
int3
dec
add
cli
sub
push
sub
fists
jge
jecxz
add
xor
sbb
cs
je
shlb
pop
bnd
mov
mov
fstl
push
addl
clc
div
adc
jb
outsb
lock
pushf
in
imulb
lds
xor
pushf
mov
mov
scas
inc
fldt
idivl
mov
push
inc
sbb
xor
pop
adc
loop
lea
mov
mov
data16
aas
xchg
and
mov
add
bnd
mov
inc
push
loop
add
ja
cmc
and
or
ss
lods
imul
fcomp
pushf
cmpsl
dec
sub
cmp
js
lret
and
out
in
out
arpl
cld
dec
shll
adc
add
fnstenv
xchg
nop
jae
call
sub
pop
imul
push
push
pop
fwait
outsb
add
lret
sbb
mov
pop
sub
mov
xchg
or
push
popa
add
xchg
mov
cmp
xor
imul
xchg
out
aad
outsb
cmp
nop
xchg
jge
lcall
jg
mov
xor
adc
cmp
mov
jl
and
sub
mov
dec
jb
mov
push
out
lea
ficoml
adc
sti
pop
adc
lods
jmp
and
sbbb
sub
das
add
inc
and
push
mov
cltd
xchg
iret
notb
pop
xorb
add
push
pop
add
add
xchg
adc
mov
mov
or
xlat
xchg
sbb
adc
inc
out
pop
jg
mov
or
in
scas
push
sub
int
int
leave
lea
mov
mov
mov
pop
sti
mov
into
sub
dec
inc
js
push
movsb
cmpsb
lock
sub
jl
dec
xchg
inc
sub
scas
das
lea
add
fnstsw
shrl
mov
xchg
les
pop
ret
lret
fwait
outsb
cmp
loope
mov
test
push
jb
pushf
ret
inc
inc
push
or
aas
push
je
sbb
mov
cmpsl
xchg
clc
xorb
shlb
and
les
pop
mov
sbb
push
lods
test
lret
inc
addr16
das
dec
jns
cmpsl
dec
loope
sbb
repnz
sub
sbb
and
jnp
out
dec
stos
int3
shrl
cmp
out
int3
jl
push
cld
lahf
inc
test
sti
dec
arpl
in
mov
sub
gs
insl
ss
repnz
iret
repnz
notl
xchg
shl
pusha
jno
add
ja
fwait
test
and
inc
ljmp
mov
xor
loope
sub
ja
stc
jecxz
push
jl
add
adc
neg
bound
and
leave
fsubr
cmp
cmpsb
gs
jno
add
xchg
and
xor
sbb
push
xor
scas
mov
popf
xor
stc
mov
pop
lea
inc
pop
fdivs
stos
aad
out
aam
lds
dec
dec
mov
insl
clc
insb
scas
sti
outsl
shr
cmp
adc
lcall
add
movsb
insl
mov
pop
push
cmp
adc
scas
in
stos
out
mov
add
insl
mov
imul
popa
aaa
mov
loope
enter
repnz
je
nop
jae
mov
cmpsl
fisubl
or
lock
das
mov
xorb
fists
imul
sbb
pop
inc
mov
cli
or
adc
sub
loop
in
jbe
ss
and
jne
mov
loop
je
out
xor
xchg
jo
mov
dec
sbb
pop
jp
or
adc
push
scas
in
cmp
cmp
pop
sub
fbld
jae
xchg
mov
pop
push
out
pop
mov
mov
or
mov
aam
jle
jmp
push
enter
push
and
sbb
mov
pop
inc
xchg
push
xor
sti
subl
and
push
pop
and
mov
jp
stos
cmc
test
repz
mov
mov
or
loopne
cmpsl
mov
es
test
aaa
mov
repnz
sub
test
sbb
sbb
fidivs
sub
loop
stos
int
pop
pop
lahf
mov
pop
jp
mov
lcall
in
sub
mov
lret
fldcw
push
and
sarl
xchg
jo
xchg
push
lock
jno
insb
sub
fwait
adc
sbb
sub
inc
nop
inc
cmp
iret
mov
push
ja
push
icebp
jae
push
push
das
xchg
aad
leave
arpl
push
jle
repz
push
sbb
xchg
push
lret
lret
mov
sbb
pop
out
push
out
mov
outsb
pushf
stc
mov
jo
lock
jnp
pusha
mov
ds
jne
jne
ja
push
popa
mov
repz
pop
push
insb
fwait
mov
cmp
lock
adc
cmc
enter
loopne
jae
arpl
cmp
pop
jl
xor
ds
pop
mov
decb
test
sub
adc
mov
sub
mov
jmp
mov
in
mov
cmp
sbb
sbb
fwait
mov
lods
lock
hlt
popa
roll
mov
cld
leave
insb
cmp
in
int
cmp
loope
adc
and
and
xchg
xor
fldenv
cmpsb
and
stos
mov
mov
std
test
adc
or
mov
dec
sub
or
test
loop
pushf
test
leave
xor
mov
testb
test
shr
inc
fldcw
fsubrl
scas
enter
jns
push
xchg
sbb
jns
lea
xlat
scas
jg
call
jp
daa
jb
sti
jmp
int
mov
cs
cltd
jae
lret
jne
roll
sub
sti
sub
mov
loope
cmp
mov
fidivrl
pop
cmc
jp
sti
or
mov
jb
popf
add
bound
cmp
dec
sub
adc
xchg
mov
pop
int3
and
pushf
dec
push
sub
pusha
cmp
and
negb
test
jns
test
dec
mov
push
and
out
push
mov
xlat
inc
idivb
mov
ja
popf
movsl
lret
push
aam
aad
sbb
test
stos
add
xchg
jecxz
add
xchg
js
add
stos
in
fs
movsb
pop
sbb
xor
dec
or
mov
jb
idivl
inc
ds
lea
nop
orl
out
loope
mov
test
adc
out
ds
cmp
cwtl
arpl
xchg
lret
adc
adc
pop
push
xlat
and
add
movsl
jae
cmpsl
pop
mov
and
sub
lock
cltd
or
repnz
scas
arpl
mov
aad
jle
dec
cld
mov
les
insl
fcmovnu
loope
mov
aaa
sti
aam
sub
fdiv
subb
mov
or
cmp
mov
popf
fdivrs
mov
loop
ljmp
in
sti
adc
mov
pop
xchg
mov
adc
jmp
mov
and
je
xorl
jns
in
push
pushf
xor
add
xlat
xor
hlt
sub
inc
js
lret
mov
dec
adc
dec
fsubrs
ret
add
jl
clc
pop
jp
fisttps
in
or
mov
aas
cs
sub
icebp
stos
cli
pop
jg
or
xchg
stos
pushf
mov
push
mov
mov
adc
lea
loopne
lret
in
scas
sbb
jb
cmpsl
xchg
sbb
cmc
movsl
sub
or
popf
loope
hlt
pop
pusha
jb
sub
pusha
dec
inc
xchg
cmp
jmp
ds
test
jp
cmp
sahf
iret
test
mov
lret
or
mov
cli
cmp
inc
inc
js
sbb
mov
into
mov
bound
out
dec
lret
xor
enter
mov
daa
mov
fdivl
int
lea
fisttpl
fld
faddl
call
xor
inc
sub
mov
xchg
dec
lods
pop
jmp
mov
lock
push
nop
std
cmp
std
ret
dec
push
movhps
lcall
mov
jmp
inc
mov
decl
and
enter
mov
and
jl
dec
xor
and
pop
dec
dec
sbbb
inc
je
ja
std
fists
cmc
addl
mov
je
popf
sbb
imul
or
cmpsb
das
adc
lock
push
outsb
mov
jbe
test
adc
mov
mov
loopne
mov
test
loopne
and
dec
cli
lock
sbb
test
lds
call
push
mov
daa
or
push
lods
mov
sbb
aaa
pushw
stos
adc
insb
xor
jmp
lahf
loop
pop
lods
and
in
push
das
pop
push
jg
mov
jae
leave
add
and
xor
or
lea
scas
insl
ret
out
js
call
movsb
fwait
cmp
dec
or
cmp
iret
sbb
iret
sub
push
je
imul
mov
add
inc
call
sti
sbb
lret
pop
dec
popl
cmpsb
mov
out
sub
pop
add
in
stos
sahf
cli
leave
and
sbb
inc
cmp
or
outsl
jbe
sbb
iret
sti
and
sti
cmpsl
sbb
pushf
roll
mov
xor
fcompl
arpl
xchg
pop
cmp
or
iret
insb
ja
pop
test
inc
push
leave
inc
jmp
fwait
popf
ljmp
mov
mov
ljmp
xor
fiaddl
enter
inc
and
jle
push
pop
mov
mov
sbb
aad
xchg
jmp
mov
xorl
jns
cmpsl
shll
push
jns
fwait
lods
in
das
sarb
loop
adc
xor
push
sahf
sbb
movlps
push
das
cmp
xchg
arpl
ljmp
ficompl
jae
dec
cwtl
and
pop
push
mov
add
and
lret
scas
dec
cli
insb
adcl
popa
es
repnz
stos
sbb
gs
cs
dec
mov
mov
jmp
pop
and
jecxz
pop
push
pushf
outsl
xchg
inc
insb
pop
inc
popa
addb
adc
pop
imul
dec
cs
int
xor
cmp
into
jne
lock
cmp
mov
aad
add
fimull
aam
push
mov
test
mov
pop
cmpsb
xorl
jg
mov
cmpsb
and
sub
adc
pop
out
inc
xlat
call
adc
shrl
mov
out
jns
repz
mov
fdiv
cltd
cltd
sbbl
movsb
out
lcall
ror
enter
lock
jb
movsb
xor
jecxz
mov
cmp
lcall
mov
sti
rorb
stos
sub
ret
insb
fs
push
dec
or
add
rcrb
enter
xchg
adc
cwtl
push
or
and
sub
jns
sbb
push
mov
ljmp
filds
dec
sti
jg
imul
pop
pop
push
mov
cmp
shl
jae
lods
lret
packssdw
mov
cmp
or
addb
xor
and
subb
mov
add
popf
test
xlat
inc
cmp
lret
or
arpl
nop
dec
sbb
add
inc
jecxz
adc
sti
aam
add
push
add
mov
adc
add
mov
mov
fdivl
mov
scas
cmc
mov
aas
inc
add
sub
mov
movsl
and
lods
mov
cld
pop
dec
mov
fdivrl
lock
and
mov
pop
pop
or
insl
lret
fldl
stos
testb
adc
divb
in
or
and
mov
icebp
mov
jno
mov
je
std
sar
dec
scas
movsb
mov
das
icebp
enter
out
lcall
ds
xorl
or
data16
jnp
loopne
add
cmp
xor
mov
inc
adc
inc
push
enter
aaa
cmp
aam
push
call
ret
inc
pop
inc
leave
aad
sub
icebp
inc
mov
rol
clc
cmp
mov
andb
in
jns
stc
movsb
repnz
sub
add
xchg
xor
mov
js
mov
lahf
dec
xor
addl
inc
push
sub
shl
jno
lock
bound
mov
imul
pop
mov
test
jecxz
fwait
push
dec
add
repz
mov
jge
mov
and
in
push
lea
repz
mov
test
xor
cmp
stos
xlat
cmp
sub
test
xor
jp
rorl
pop
and
sbb
std
lret
inc
xor
arpl
mov
bound
lock
pop
sub
cmp
add
cmpsb
fs
push
imul
cmp
mov
xor
insl
ret
ss
push
push
pushf
push
adcl
jp
jp
mov
scas
out
push
insb
xor
daa
out
imul
imul
mov
xchg
mov
mov
cmp
loopne
mov
loopne
scas
pop
add
cmp
addl
push
into
dec
stc
xor
dec
sahf
mov
psrlw
sahf
xchg
jb
push
popa
add
push
iret
testb
and
test
pop
fistpl
mov
mov
xchg
mov
aaa
sub
sahf
jecxz
xchg
outsb
ljmp
adc
repnz
and
pop
aas
lahf
ss
mov
stos
gs
incb
adc
in
adc
es
jno
iret
ss
fwait
rcll
and
push
inc
mov
pop
aad
cmp
call
nop
sahf
cmp
mov
adc
fs
inc
rcrb
xchg
nop
push
das
out
sti
mov
push
mov
xchg
push
or
addl
insl
or
push
cmp
inc
insl
inc
mov
sub
pop
scas
std
ficoml
test
leave
lret
jb
add
pop
hlt
jmp
adc
sbb
imul
mov
out
mov
mov
push
lcall
shl
sbb
jns
cmp
mov
in
shll
notb
clc
out
or
imul
mov
imul
ds
daa
nop
mov
pop
adc
mov
shlb
std
mov
and
sub
add
xchg
ds
adc
mov
int3
outsl
js
int
lcall
sbb
push
insl
pop
subl
mov
sahf
subl
or
sbb
leave
jle
pop
push
jle
adc
mov
shlb
pop
xor
in
jbe
xchg
push
add
shll
xor
ss
scas
lods
insb
cwtl
lret
pusha
fisubrl
divps
sub
inc
sbb
pop
insb
adc
push
adc
push
popa
pop
fcomip
dec
pop
push
lcall
cmpsl
pushf
fldl
push
pop
addr16
aaa
scas
pop
aad
jl
lock
lods
pop
cld
fsubl
enter
arpl
cmp
data16
mov
bound
icebp
xlat
ret
mov
pop
scas
ret
or
in
cmpsb
leave
lods
fiadds
xchg
mov
test
push
inc
cmc
sahf
pop
pop
jno
adc
mov
inc
push
les
push
or
in
jns
aas
sbb
jnp
mov
mov
pop
sub
test
jo
cmp
xchg
popf
and
or
lahf
xor
ss
cmpsb
fsubrl
aas
xor
repnz
mov
mov
shll
aam
jmp
stos
and
rolb
add
dec
ficompl
dec
jp
ret
inc
enter
neg
aas
jmp
lcall
jbe
push
aas
jbe
cltd
xchg
cmp
in
outsb
fimull
dec
pop
jp
mov
roll
fdivrs
inc
push
fisubs
xor
ja
sbb
xor
imul
sarb
mov
lds
and
aam
imul
test
mov
addr16
out
mov
push
outsb
jne
sub
mov
mov
dec
adc
jb
mov
lock
repz
movsl
cmp
cmp
inc
stos
dec
popf
cwtl
mov
add
jns
add
gs
add
adcb
cmpsb
stc
aad
cwtl
push
mov
mov
lods
push
mov
ljmp
xchg
dec
ljmp
inc
jmp
fnsave
icebp
jo
mov
mov
push
rcr
cli
dec
mov
aam
jg
daa
xor
xor
adc
enter
sbb
shr
sub
dec
out
dec
leave
inc
pop
jns
sub
sub
cltd
sub
fisubrs
and
out
push
jge
cmp
insb
pop
popf
lret
dec
cmpsl
out
movsb
push
ret
popa
and
test
out
lret
push
in
rcrb
inc
mov
fwait
pop
shlb
into
xor
dec
gs
sub
test
push
nop
fnstenv
xchg
xlat
xchg
insb
jmp
popf
insl
test
jg
stos
mov
sbb
std
fisubs
xchg
test
aas
mov
and
mov
out
mov
or
jno
jle
pop
inc
outsl
outsb
lock
push
push
pop
fdivs
jne
or
stc
or
int
rol
jg
faddl
lcall
cmp
les
mov
enter
xor
hlt
or
jo
lahf
shll
rcrl
bound
ja
and
out
arpl
test
lea
sub
ret
fcomps
jns
jo
mov
popa
incl
mov
or
pushf
es
loopne
sbb
mov
mov
adc
leave
or
push
dec
arpl
sub
mov
push
xchg
dec
and
imul
push
dec
push
aad
in
cmc
adc
pop
sti
mov
lret
mov
add
daa
add
mov
inc
dec
mov
push
movsb
xchg
cmp
icebp
icebp
inc
fs
sub
fsts
jecxz
mov
or
rorl
jb
int3
xchg
lds
and
sub
xchg
pop
xchg
sbb
in
or
neg
inc
and
cmpsl
je
sbb
mov
mov
aas
data16
insb
cltd
xor
loop
mov
push
push
push
jns
sarl
adc
dec
dec
xor
idiv
adc
popa
inc
pop
sub
jmp
stos
nop
sbb
pop
mov
outsb
icebp
rorb
out
insb
stos
rcr
or
into
add
stos
add
jb
pop
mov
test
aaa
mov
fcompl
stos
dec
and
nop
cmp
movsl
xchg
rcrb
aad
xor
shll
pop
add
adc
mov
push
jo
pop
adc
pop
sub
dec
testb
push
push
xchg
mov
addr16
pushf
notb
xor
xchg
inc
mov
outsb
or
jle
arpl
inc
lahf
shlb
push
adc
pusha
xor
sub
loope
ret
lods
xlat
rcll
fsubrl
sub
rolb
adc
cli
lds
and
mov
mov
aam
push
push
sbb
stc
insl
repnz
movsl
dec
jg
mov
mov
in
mov
aas
cmp
scas
mov
fnsave
subb
add
jbe
shl
loopne
mov
mov
push
inc
push
pusha
stc
xchg
hlt
mov
push
pop
fidivrs
shll
pop
sti
jge
mov
dec
out
adc
int
xchg
xor
add
inc
scas
adc
cmp
jae
out
adc
insb
jno
add
mov
out
in
or
cwtl
xchg
jp
icebp
or
add
add
das
push
cmp
movsb
or
inc
xchg
xchg
aas
fiadds
cmp
aam
and
movsb
cmp
add
jno
in
shll
aas
mov
jo
imul
mov
sahf
test
sbb
popa
and
jecxz
fcoms
cltd
inc
leave
jne
mov
sbb
repz
push
out
movsb
jno
xchg
sbb
jge
jl
jbe
test
xchg
push
iret
pop
das
or
jp
cmpsl
xchg
leave
cltd
lahf
pop
sub
sbb
paddsw
mov
sbbl
mov
pop
mov
lret
jge
shl
pop
inc
pop
loopne
cmp
in
stos
test
adcb
aaa
jne
xchg
cltd
fsubrs
adc
lods
es
and
clc
in
sbb
cmc
shlb
test
push
dec
dec
fistl
mov
inc
dec
mov
push
mov
lea
shll
add
adc
xchg
push
pusha
push
popf
inc
out
in
mov
jb
lds
shrl
imul
gs
jae
xchg
loopne
rolb
fs
cmp
fwait
cmp
add
test
das
jb
adc
dec
mov
sbb
mov
add
mov
lcall
mov
xchg
js
not
cmpsl
jo
pop
mov
or
sahf
test
cmpsl
push
aaa
inc
idivb
adc
xchg
sub
push
mov
pop
ja
or
test
mov
aas
pop
xor
pusha
dec
test
es
insl
in
imul
jle
push
or
in
aam
mov
inc
test
or
sub
int
or
movsl
dec
fsts
pop
pop
jns
fistl
mov
test
std
or
lcall
mov
xor
rcll
lods
dec
pop
inc
in
dec
aaa
dec
jae
sub
sbb
pop
cmpsb
xor
pop
data16
dec
pop
call
ss
pop
pop
mov
or
inc
shrl
adc
pop
loopne
xchg
std
fsubrl
mov
and
stos
sub
push
sahf
aad
or
adc
fwait
or
lock
sub
sub
mov
cltd
adc
mov
mov
dec
jns
pop
data16
movsl
insb
sub
cmp
inc
dec
push
add
lret
and
and
mov
push
cmp
adc
jge
or
adc
mov
add
das
inc
xchg
lods
outsl
mov
mov
dec
xchg
sbb
or
xor
lret
add
sarl
aaa
jmp
test
push
lcall
mov
gs
add
fdiv
outsb
aas
sub
les
adc
sar
shl
sbb
shr
je
xchg
insb
and
jle
shll
mov
lret
push
sub
xchg
xor
divl
out
mov
push
fistps
xchg
std
push
add
xorl
xor
popf
mov
ss
arpl
cmp
push
rclb
mov
mov
sub
lahf
xor
jmp
scas
icebp
sub
mov
pop
xor
out
imul
aas
pop
and
xlat
pushf
xchg
and
mov
and
jle
add
dec
push
mov
fcompl
sti
lds
jge
add
xchg
les
mov
add
sahf
and
inc
or
add
sbb
js
push
and
xchg
push
repz
fst
fisttpll
dec
testb
jne
aam
add
pop
pop
push
aad
mov
xchg
add
xor
call
xchg
mov
inc
lcall
push
pusha
fwait
jle
bound
fmull
in
mov
mov
sbb
mov
sbb
mov
daa
mov
cmp
test
push
arpl
mov
pop
mov
cmp
insb
push
fwait
sbb
popa
cld
mov
add
mov
fwait
cmp
lock
mov
inc
fstpl
sbb
push
addr16
lcall
push
mov
dec
xor
out
mov
rcrl
cli
lock
sbb
xchg
out
loopne
or
out
cmp
rorb
mov
out
jecxz
jno
or
loope
or
loope
fists
and
jge
cwtl
adc
arpl
and
jecxz
jns
and
test
pop
mov
into
daa
cmp
cli
xlat
jl
or
jo
xor
mov
arpl
in
push
sub
add
jns
push
iret
inc
xchg
mov
imul
outsb
push
dec
adcl
ret
push
sub
in
pop
jbe
push
fs
xor
jno
pushf
cs
mov
orb
or
cmc
add
mov
inc
sub
jno
add
stc
lcall
aad
gs
cmpsl
cmc
movsb
push
pop
leave
adc
out
add
movsb
ja
or
int
push
jg
clc
xor
out
jmp
mov
lret
jb
mov
mov
sbb
enter
sub
test
mov
xlat
inc
mov
sub
repnz
xor
sub
xchg
mov
mov
jns
xor
xchg
add
js
push
insl
mov
mov
mov
mov
dec
sti
daa
bound
push
fidivs
lea
cwtl
push
sbb
cs
hlt
imul
mov
mov
test
sbb
aas
mov
flds
insw
sub
fs
pop
xchg
push
mov
mov
dec
xchg
push
mov
outsb
adc
fcmovu
addl
mov
fst
mov
push
add
enter
or
lret
mov
fprem
ja
pop
pop
mov
pop
add
fistpll
mov
mov
dec
rcrb
mov
jmp
adc
xchg
les
jl
mov
mov
push
jnp
js
add
imul
xchg
pop
test
stc
or
xor
push
pop
xor
icebp
mov
stc
loope
xchg
gs
xchg
jmp
jbe
or
sbb
loope
stc
lock
push
test
divb
xchg
lea
mov
je
sub
mov
rorl
fnstenv
and
dec
pop
mov
lret
test
cmp
mov
sub
or
cmpsl
xor
or
int3
leave
rorb
add
jge
push
pop
sub
test
inc
stc
mov
loope
orl
pop
or
pop
imulb
test
gs
fdivr
fimull
leave
xlat
clc
enter
movl
pop
mov
mov
cmp
das
pop
mov
mov
loopne
sbb
ljmp
ror
sub
dec
iret
or
mov
xor
jmp
mov
dec
or
out
shrl
cs
or
loop
popf
add
or
mov
sahf
aas
scas
and
imul
jns
fsubs
imul
sbb
pushf
lods
add
rcrb
jmp
aam
idivl
mov
insb
rorl
or
push
test
pop
mov
jo
xor
lret
dec
cmp
fxch
ret
pop
mov
cmp
frstor
jp
outsb
test
mov
cwtl
add
ljmp
int3
inc
sahf
cmp
jnp
mov
jnp
shl
cmpsb
jmp
push
cltd
aad
and
popf
adc
in
lods
jb
shlb
push
cmpsb
dec
mov
jnp
in
push
push
imul
add
outsb
int3
push
adc
mov
sub
mov
inc
movsl
faddp
xorl
jbe
or
repz
push
stos
rcl
push
movsb
push
les
mov
leave
into
insl
or
push
pop
ret
sbb
and
push
das
lock
and
sbb
lock
mov
sti
adc
xor
xchg
std
ror
sub
lret
dec
popa
call
cmpsb
sub
xlat
pop
loop
pop
bound
mov
insb
repz
sbb
xchg
cmp
mov
movsb
cmpsb
out
lds
xor
mov
xor
out
hlt
sar
insb
add
pop
sbb
daa
ds
pusha
sti
inc
addr16
cwtl
in
mov
and
and
xchg
dec
cmp
pop
into
out
mov
pusha
jb
ds
xchg
nop
mov
push
cmp
sar
insl
push
insl
sti
adc
call
push
aam
lods
aad
fsubp
jl
es
cli
shrb
bnd
xor
addr16
loope
daa
lcall
int3
outsb
movl
aaa
sysexit
pop
sbb
inc
mov
fs
jl
mov
notl
outsb
lods
pop
incb
add
add
sti
mov
push
xorb
mov
xchg
lret
mov
cmp
scas
sbb
adc
je
pop
cmp
popl
mov
lret
xchg
dec
sti
jg
aaa
cli
les
ss
cmc
repnz
leave
sub
jne
inc
data16
ja
fimuls
andb
imul
fmull
shl
pusha
or
fs
mov
es
add
jmp
push
push
and
mov
stos
add
pop
and
test
or
or
cld
lea
mov
sbb
push
pop
adc
incl
jge
xchg
push
mov
inc
cld
xor
mov
pop
inc
fimull
cmpsb
lods
in
pop
push
imul
loop
or
cld
scas
xor
jbe
int
das
mov
mov
dec
test
out
dec
ret
cmp
xchg
mov
loope
repnz
and
jno
orl
adc
pop
nop
dec
inc
popf
aad
sar
stc
imul
mov
dec
xchg
xor
ds
mov
les
dec
adc
inc
add
sarb
es
add
enter
mov
mov
cmp
faddl
mov
in
push
xchg
fmuls
or
xor
mov
mov
add
dec
ss
int3
push
fadds
push
mov
dec
xchg
push
je
test
or
pushf
and
mov
push
jno
dec
setne
sbb
xchg
pop
jo
or
add
pop
mov
adc
mov
and
outsl
or
xor
mov
sbb
or
inc
mov
and
outsl
adc
push
cmp
mov
xchg
add
push
or
inc
xchg
stos
mov
imul
cld
xor
or
push
out
hlt
out
push
cld
out
cld
mov
adc
mov
stc
aad
dec
push
sub
push
lock
push
jp
in
dec
xchg
pop
das
pop
shl
mov
fisubrs
push
adc
cmp
aam
movsb
inc
arpl
scas
adc
mov
dec
add
inc
test
sbb
cmp
arpl
dec
ficompl
push
pop
xor
add
rorb
out
push
xchg
mov
and
out
push
add
jns
pop
les
add
out
out
fimuls
aam
mov
xchg
mov
or
ret
cld
mov
push
inc
mov
push
xchg
movsl
sub
in
jge
sub
not
dec
lock
mov
xor
fisubrl
jmp
sbb
mov
pusha
jne
loope
jbe
pushf
xchg
ficoml
aad
in
mov
jb
xchg
pop
out
lods
test
xchg
fsubrl
das
xchg
xlat
dec
and
add
mov
fwait
dec
rcr
adc
push
leave
popf
fisttpll
fsubl
xchg
mov
add
movsl
mov
inc
sarb
outsb
push
stc
mov
push
sub
into
mov
ds
nop
mov
les
das
cmp
sub
adc
push
sbb
std
jl
add
xor
repz
pushf
movsb
shr
stos
lret
addr16
push
cli
inc
adc
xor
and
sbb
mov
shl
and
xor
ret
xchg
daa
jbe
add
repnz
mov
out
test
xchg
xor
aaa
and
jo
pop
or
repnz
and
sbb
sti
mov
or
xchg
add
jnp
popa
sti
nop
and
cmpsb
movsl
push
pop
out
dec
sbbl
or
rcl
mov
sarl
pop
xchg
mov
out
setle
out
push
pop
cmpsb
mov
dec
loopne
hlt
xor
adc
pop
cmpl
push
add
adc
ss
xlat
jb
sbb
jmp
rcl
mov
mov
addr16
orb
jle
data16
add
fmuls
mov
fisttps
hlt
pop
mov
xchg
loope
or
sbb
lea
and
adc
inc
popf
filds
or
icebp
out
shufps
sbb
mov
mov
fucomp
adc
test
xchg
jo
movsb
das
pop
pop
or
fldt
add
push
cmpsb
enter
cmp
push
loop
sbb
mov
pop
mov
outsb
fdivrl
loope
add
pop
shlb
int
push
icebp
dec
push
mov
data16
add
div
rcrb
mov
rcll
lahf
cmp
insb
fildl
xor
lods
xor
sbbl
mov
popa
cltd
jp
sbb
fnstcw
mov
pusha
fbld
std
pop
mov
mov
call
push
hlt
aad
inc
sbb
xchg
push
mov
stos
xchg
xor
loopne
add
sub
imul
iret
mov
fs
out
mov
imul
and
outsl
mov
outsb
lret
movsl
adc
popa
pop
fidivl
mov
cmc
pmaddwd
popf
lahf
int3
inc
out
in
dec
mov
hlt
repnz
push
js
repz
inc
or
aam
iret
ds
outsb
cmp
stos
mov
adc
cmc
push
and
sbb
out
push
out
push
sahf
mov
shlb
mov
mov
jae
and
sbb
sub
mov
test
addl
mov
xchg
fdivrs
sbbb
dec
cmpl
jmp
popa
je
ret
gs
enter
sahf
add
lret
pop
addl
jge
and
mov
sub
pushf
xchg
cmp
inc
mov
xchg
xor
sbb
mov
fidivrl
mulb
fsubl
icebp
push
in
or
imul
mov
scas
les
repnz
loopne
faddl
mov
xor
inc
pop
adc
loopne
mov
inc
divb
lds
repnz
lret
push
cmp
icebp
adc
orl
cmc
push
test
add
bound
pop
or
movsb
or
inc
lods
pop
das
sub
je
es
or
push
jg
gs
roll
xchg
addl
loope
in
int
cwtl
pop
fimull
mov
sahf
xchg
sbb
es
mov
int
arpl
mov
fwait
es
js
and
movsl
mov
repz
js
xor
ret
paddb
pop
roll
mov
les
enter
ja
pop
imul
out
push
pop
sbbb
fmull
icebp
data16
mov
mov
pop
xlat
pop
xchg
pop
inc
scas
adc
dec
pop
jne
mov
jno
ja
sar
lahf
in
cmc
outsl
xor
cli
dec
and
or
push
mov
lea
inc
push
icebp
pop
out
mov
xchg
xor
orb
pop
jno
iret
add
add
lods
xchg
mov
ds
shrb
dec
mov
fbld
lods
nop
inc
data16
leave
dec
popf
cltd
pop
inc
mov
pop
outsl
loope
jle
insl
sub
fstpl
lahf
mov
add
sub
repz
cltd
mov
bound
jne
jmp
jp
out
test
adc
repz
insl
dec
idiv
xchg
lods
out
fstpl
cs
or
js
push
out
add
sub
inc
notb
lds
mov
addl
cmc
in
sbb
mov
pop
jnp
pop
push
add
movsb
cmp
inc
fwait
out
mov
es
addr16
cltd
jl
jmp
pop
inc
cmp
xchg
data16
cmc
mov
sub
in
les
jbe
sub
test
add
out
arpl
mov
ds
insl
xchg
and
mov
mov
ss
rolb
fsubp
mov
out
mov
mov
mov
dec
aad
popa
imul
pop
and
xchg
cmpsb
inc
stos
xor
mov
dec
data16
pop
sub
cmp
push
sbb
je
in
cmp
in
inc
jae
movsb
ljmp
or
add
or
stos
ss
out
inc
lahf
insb
mov
mov
in
xor
dec
jo
das
add
and
ljmp
fs
add
cwtl
in
cmc
and
push
cltd
jb
lea
xor
xchg
jno
mov
fists
push
and
mov
sbb
call
mov
mov
mov
dec
sbb
cltd
add
mov
sub
adc
pop
pop
loopne
mov
fstps
test
dec
popa
sub
jns
or
stos
adc
mov
jns
out
ret
sub
in
cli
outsl
rorb
sub
outsb
adc
mov
push
lock
orb
inc
xor
js
jl
inc
cmp
dec
xchg
rorb
ja
outsl
sub
xlat
inc
sbb
jp
arpl
jae
mov
sahf
push
mov
xchg
gs
call
adc
mov
inc
nop
adc
mov
imul
scas
insb
jp
and
xchg
out
iret
adc
jmp
push
lret
sub
loopne
push
insb
loop
cmp
icebp
pop
cmpsb
sub
in
inc
lret
pop
adc
loope
push
dec
scas
mov
int3
cmp
mov
lahf
sti
lret
test
push
in
loopne
hlt
mov
xchg
inc
xchg
adc
iret
std
pop
in
mov
repnz
int3
push
andl
iret
cmp
shl
orl
sbb
push
mov
decb
scas
mov
push
scas
fistpll
mov
aad
and
aas
test
dec
xchg
shll
jp
xchg
sub
dec
cwtl
inc
mov
jno
push
cmp
xor
jg
sahf
or
mov
push
xor
and
xchg
arpl
push
inc
adc
ja
fadd
and
out
sub
pop
cli
sub
ss
push
push
lret
aaa
pop
inc
outsb
fcmovnu
fadds
mov
dec
mov
cmpsl
and
cmp
xor
inc
add
xchg
mov
mov
cmpb
inc
push
pop
mov
xor
pop
sti
outsl
adc
push
pop
push
sarb
sahf
add
sub
mull
test
clc
popf
add
xor
pop
push
loopne
repnz
ja
xor
xorl
roll
mov
pop
addr16
lods
xchg
xchg
jl
cmp
sub
jo
stos
xor
pop
test
xor
push
mov
sub
sub
sub
xor
cmc
es
push
adc
push
fisubs
test
inc
xchg
dec
cmp
insb
in
mov
sbb
sarb
lds
adcl
cmp
hlt
mov
cmp
cmpsl
fldenv
cltd
pop
jbe
enter
sbb
cmc
std
push
dec
xchg
sub
call
xchg
punpcklwd
push
sbb
mov
jbe
pusha
and
jl
and
cltd
mov
popa
movsb
mov
pop
into
popf
lods
mov
lcall
rorl
jl
sarl
fldl
mov
xor
dec
ss
fnstsw
shrb
dec
scas
push
shll
mov
lea
sbb
ljmp
mov
pop
lahf
inc
jge
push
stos
ds
test
xchg
pop
jg
pop
and
and
imul
or
cld
cld
in
rcrl
mov
data16
lds
jnp
push
shll
xor
sub
or
les
xor
in
into
mov
lds
testl
pushf
enter
fsubrs
xchg
dec
mov
sub
jb
repnz
fistpll
add
movsb
pusha
or
push
cmp
mov
ret
leave
loop
std
cli
repnz
lods
pushf
das
cmp
xchg
jg
mov
sbb
imul
cmp
aam
cwtl
jl
mov
adc
sbb
push
mov
dec
mov
outsb
fcoml
leave
mov
jmp
leave
cmp
jmp
dec
inc
and
push
pop
and
cltd
testl
pop
inc
fisubrs
or
icebp
int
imul
in
jge
xchg
lds
outsb
insb
mov
stos
jge
jae,pt
inc
jmp
or
out
scas
sbb
fwait
adc
pop
test
pop
push
pop
add
sbb
inc
fdivrs
add
movsb
imulb
popf
pop
cmc
ret
in
push
dec
rclb
xchg
jp
les
testb
sub
mov
xchg
and
adc
lahf
lock
mov
sbb
pop
ret
inc
arpl
ja
pop
imul
xlat
xor
fs
testb
pop
and
aad
fcompl
ret
inc
fwait
leave
jmp
leave
mov
movsl
mov
jecxz
sbb
mov
imul
push
aas
push
and
stc
sub
mov
lret
adc
and
or
push
pop
cwtl
adc
leave
loopne
dec
mov
jp
mov
imul
jb
jge
push
xchg
outsb
push
xchg
jecxz
shrl
push
xor
push
sbb
ficomps
shrl
dec
inc
inc
and
es
aam
mov
jo
jns
stc
inc
mov
adc
aas
rcrl
mov
xchg
jo
mov
push
adc
pop
dec
fstl
int
lods
add
aad
in
movl
mov
push
add
adc
out
clc
outsl
pop
bound
push
pop
loop
inc
out
mov
bound
test
out
div
sahf
add
call
push
mov
jnp
push
mov
sti
mov
push
sub
shll
call
sti
fdivs
andl
xor
mov
mov
add
mov
xor
int
pop
aam
add
aas
sti
rcrb
cmp
repnz
push
mov
icebp
pop
jp
jecxz
adc
test
sub
in
sbb
pop
mov
jnp
rcr
xor
cmpsb
stos
and
cmp
lret
test
mov
pusha
add
dec
ficompl
aas
mov
push
cmpl
cmpsl
or
ret
lret
scas
jge
fwait
dec
addr16
mov
mov
push
dec
out
cmp
idivb
add
pop
dec
xchg
ret
push
popa
pop
lods
mov
ja
push
xchg
js
xor
mov
loopnew
call
adc
repz
addr16
lds
outsl
cmp
shrl
lahf
ret
cmp
push
stos
xchg
or
inc
scas
fwait
test
fwait
sub
lods
add
repz
jge
jmp
imul
mov
in
mov
ss
inc
xor
sbb
mov
mov
jno
jns
test
lret
pusha
stc
xor
xchg
into
je
mov
lds
js
adc
fwait
rorb
ret
faddl
ss
mov
pushf
mov
loopne
in
mov
xchg
xor
mov
out
cmp
fisttps
aad
and
pop
sub
es
rolb
xor
dec
adc
std
jecxz
stos
jg
dec
pop
jmp
ljmp
movsb
sub
mov
mov
jecxz
pop
cwtl
and
jg
in
pusha
dec
loopne
xor
sub
loop
mov
pop
test
cli
sbb
ljmp
jo
push
lods
pop
sub
shlb
cltd
mov
fs
outsl
xor
sub
cmpsb
test
pop
inc
fstpl
mov
cmc
das
dec
sub
lahf
cmp
fldl
repnz
push
or
es
and
cmp
jne
popf
jbe
and
lcall
mov
ss
leave
gs
fbstp
fadds
mov
scas
inc
pop
pushf
cli
or
or
and
not
ja
and
cmp
mov
xchg
adc
mov
ret
cmpsb
mov
stos
mov
sub
dec
in
add
bound
xchg
mov
in
into
cmpsl
in
rcrb
adc
cmp
stc
inc
xchg
xchg
cs
aaa
ja
cmpsb
lock
inc
add
push
arpl
hlt
fstpl
in
xchg
push
jle
xchg
popa
xchg
arpl
rcl
rcl
mov
or
inc
out
xor
fucomp
jp
xorl
adc
push
out
dec
mov
repz
jle
adc
in
aam
push
push
cmp
mov
cmp
pop
adc
in
xchg
xchg
push
jbe
xchg
pushf
subb
fistps
fadds
mov
scas
cmp
out
test
dec
xor
in
inc
cmp
out
sbb
add
fsubrs
mov
or
jnp
mov
sub
subb
and
rorb
mov
ffree
sbb
jecxz
ret
adc
or
ret
push
test
mov
mov
je
xchg
and
jmp
adc
jmp
nop
mov
sub
shrb
test
dec
mov
iret
pusha
add
add
scas
mov
dec
imul
pop
push
lods
mov
mov
or
xchg
imul
stos
shl
iret
push
fwait
and
fdivrl
movsl
in
xchg
add
dec
sbb
inc
subb
sbb
xchg
pop
scas
jbe
out
ss
jne
ret
testl
mov
sbb
stos
cli
iret
xchg
fwait
jl
push
out
rol
and
add
sar
sbb
in
daa
or
jg
xor
adc
or
push
add
mov
cmp
ret
sbb
pusha
cmp
xchg
mov
push
scas
enter
dec
mov
mov
movsl
and
jge
mov
test
push
push
loope
sbb
jae
push
enter
clc
pop
sub
out
faddl
push
inc
mov
or
icebp
xchg
fcoms
jge
test
jb
mov
dec
faddl
push
out
or
in
out
daa
xchg
xchg
inc
dec
jecxz
lea
movsb
testb
out
gs
push
and
add
subb
fwait
cmp
iretw
stos
pop
push
sbb
outsb
adc
jle
stos
push
cmpsl
inc
sbb
pop
aas
xchg
mov
cmp
clc
push
test
pop
jp
jo
jmp
out
jno
out
or
add
lds
repz
xchg
xor
movsb
jne
mov
dec
jp
sbb
xor
inc
jecxz
cmp
lods
sub
mov
push
stc
aam
sahf
into
cwtl
arpl
popa
push
pop
call
mov
push
sbb
pop
xchg
ds
inc
bound
lds
push
sbb
fs
cmpsl
rcr
lock
xchg
cmp
jne
lahf
adc
into
cmp
bound
test
and
cmc
mov
xchg
mov
or
push
or
in
popf
inc
movsb
cmp
and
inc
jp
out
repz
push
dec
pop
stos
cli
mov
sbb
loope
xorl
xor
cmpsl
notl
xor
xchg
cmp
add
add
stc
fsubs
and
test
fdivs
sub
rcll
pushf
popl
pop
and
cld
jae
rol
sbb
mov
jg
dec
pusha
pop
scas
or
shrb
std
pop
rcrb
pop
xchg
pop
flds
dec
or
mov
xor
loop
out
push
sti
xchg
pop
xchg
mov
flds
ds
add
jmp
loopne
mov
cmp
stc
mov
js
ret
inc
xor
int
or
imul
pop
cmpsl
pushf
test
stos
push
into
mov
rcrl
out
xchg
pop
add
stc
pusha
push
xchg
lods
push
lahf
sub
inc
cmp
cwtl
mov
inc
mov
mov
xchg
xchg
pop
in
out
push
sbb
and
jecxz
insl
scas
and
mov
aam
popa
fdiv
inc
sub
push
into
inc
push
bound
outsl
pop
inc
mov
sub
cltd
aad
xor
insl
or
xchg
sahf
push
jecxz
push
cmp
fdivp
adc
jne
sub
xchg
or
in
repnz
popa
sub
lea
inc
mov
xchg
push
fs
and
fistpll
insb
fists
es
les
shll
add
icebp
iret
xchg
inc
leave
mov
outsb
push
aad
mov
add
in
aad
aaa
dec
xchg
pop
and
xorl
sbb
ja
fcomip
mov
mov
push
out
outsl
xchg
mov
cs
stc
insl
cmp
loop
pop
pop
int3
cld
jge
mov
testb
test
fisubs
in
std
mov
push
xor
xlat
aas
ja
add
sub
and
xor
cmc
pop
gs
sub
or
stos
sarl
xchg
cwtl
leave
and
flds
mov
sub
scas
sbb
and
cli
jmp
mov
stos
std
pop
repz
xor
inc
xchg
roll
fmull
and
cmp
xchg
xchg
jno
and
les
jecxz
push
mov
outsb
mulb
add
lock
fcmovb
push
loope
inc
popf
ret
stos
outsl
sahf
or
and
fstps
xlat
cmp
das
jmp
gs
mov
in
in
mov
scas
jb
xchg
and
hlt
repz
xchg
xchg
jno
lcall
je
icebp
test
shlb
jmp
jo
ds
insl
inc
dec
inc
pop
and
and
inc
adc
sub
cli
xchg
cmp
scas
inc
add
xchg
imul
add
fldcw
push
push
ret
imulb
gs
orl
aad
cmp
mov
inc
fnstcw
rclb
aas
mov
lea
adc
shr
mov
fnstsw
ja
fsubrl
mov
or
pushf
and
hlt
dec
test
test
xor
cmpsl
push
je
adcl
pop
sahf
pop
mov
insl
nop
cmp
mov
movb
mov
and
fbstp
in
push
lret
add
push
movsb
lret
jl
test
fidivs
cld
xor
mov
lds
xchg
sub
incl
shlb
pop
pop
and
mov
sub
sbb
mov
movsl
xlat
repz
mov
out
outsl
cli
pop
movsb
lret
xchg
xchg
mov
clc
lret
xorl
stos
and
das
pusha
xlat
and
pushl
dec
nop
cwtl
movsb
sbb
mulb
nop
dec
sbb
mov
imul
das
push
xor
jbe
sti
ds
adc
mov
xchg
stc
imul
shlb
je
outsb
int3
call
push
out
lds
jp
jne
jns
roll
sahf
outsl
loop
movsb
add
pop
call
lock
mov
lret
sbb
mov
push
push
adc
stc
pop
fstp
jmp
loope
pop
push
push
jp
mov
sbb
xor
sub
inc
sub
mov
push
cli
adc
sbb
test
dec
cmp
test
push
fiadds
inc
cltd
push
loope
in
scas
ret
jo
jne
xchg
icebp
negl
lds
inc
das
mov
xchg
pop
mov
adc
dec
insl
test
pop
in
fcmovnb
cmp
les
pop
pop
in
or
pop
push
cmp
aaa
dec
cmp
decb
idivl
adc
mov
out
xor
mov
pop
daa
xor
xor
sti
ss
sbb
data16
or
loopne
push
sub
push
lret
and
fldt
test
cli
or
push
repz
sahf
lods
popf
pop
icebp
mov
sbbl
mov
sbb
mov
dec
sub
mov
iret
add
inc
popf
inc
pop
cld
ret
push
insl
stos
lds
xor
inc
xchg
push
aad
call
and
je
out
cmp
fwait
outsl
and
push
movsl
cmp
lret
ret
inc
mov
cmp
pop
loope
push
out
in
lret
outsl
mov
pop
and
addr16
jecxz
popa
fstpt
nop
jo
ficompl
xor
sub
iret
loope
xchg
int
xlat
ret
test
and
xchg
inc
cmp
sub
mov
int
in
lcall
bound
aam
imul
int3
dec
xchg
stc
imulb
sub
mov
or
sbb
and
add
and
popa
pop
lds
out
sub
adc
mull
mov
dec
fsubr
pop
jbe
das
and
xchg
mov
xchg
pop
xchg
mov
mov
jno
sub
ljmp
and
cmp
outsb
dec
movsl
dec
adcl
and
and
ds
mov
sbb
and
ja
in
add
test
lcall
test
pop
das
scas
xchg
shl
or
mov
bound
and
pop
xchg
js
out
int3
cmpsb
cmp
mov
mov
iret
ja
stos
xorb
addr16
mov
fidivl
gs
cmpsl
inc
shrd
sbb
repnz
iret
cmp
jnp
pop
inc
icebp
jno
inc
mov
and
je
leavew
jno
mov
nop
addr16
and
push
dec
lods
cmc
in
lock
fldt
push
movsb
test
call
inc
dec
popa
lock
pop
in
scas
arpl
xor
dec
je
lcall
mov
into
cmc
add
or
and
out
xor
mov
aam
pop
xor
add
inc
ljmp
push
ret
fsubs
mov
fsubrl
insb
icebp
xchg
outsl
add
xor
push
cmpsl
cmp
ss
rorb
sbb
popf
xchg
mov
xor
lahf
sbb
lods
or
mov
xlat
popf
or
jp
xchg
xchg
jge
pop
mov
ret
loope
sbb
push
les
xchg
mov
insb
movsb
cld
cltd
mov
and
into
fiaddl
divb
lods
dec
lcall
mov
push
pushf
and
xchg
jg
js
into
and
aas
mov
and
mov
xchg
ss
mov
adc
insb
es
clc
inc
lcall
push
mov
sub
xchg
or
adcl
mov
inc
out
sub
adc
les
fldl
into
push
jge
adc
mov
cmp
inc
nop
jmp
rclb
enter
pop
mov
inc
push
andl
mov
jno
push
or
cmp
aaa
pop
pmuludq
jg
mov
mov
mov
push
shlb
cmp
cmp
inc
leave
scas
push
lcall
sbb
test
mov
jmp
out
shll
xor
add
pop
jp
addb
lret
fcomps
jae
insl
sub
and
mov
pop
xchg
mov
xchg
ds
dec
roll
scas
movsl
xchg
pushf
into
orl
out
xor
xor
push
fstl
cmp
pop
pop
in
aaa
xor
and
adc
fnstenv
sub
and
inc
fs
mov
aas
mov
ret
adc
xchg
ss
sti
cmp
lret
iret
in
jbe
mov
sub
dec
push
pop
fdivl
loop
aaa
enter
data16
out
mov
fwait
dec
jns
and
jge
or
nop
out
cmp
pop
jmp
loopne
loop
cmp
xlat
push
xchg
or
cs
sub
mov
in
push
movsl
idivl
mov
lods
pop
pop
and
fildll
xchg
xchg
push
xlat
fwait
xchg
jmp
pushf
jmp
sub
sub
mov
mov
pop
push
xchg
enter
dec
cmc
xchg
cmpsl
mov
scas
mov
call
jg
xchg
cwtl
cmp
out
dec
xchg
xor
mov
lret
in
ljmp
push
jle
ljmp
mov
add
dec
rcrl
cld
cmp
inc
ret
popf
cltd
aaa
lret
rorb
ds
jecxz
push
mov
mov
dec
stos
xchg
jns
test
jns
out
mov
fsubr
loop
lds
jge
sti
negl
sti
repnz
mov
mov
pop
fildl
lret
cmpsl
add
mov
ja
clc
jae
xchg
jb
sub
adc
sub
sbb
xor
dec
loopne
mov
mov
sbb
int3
sbb
fldcw
mov
jne
pop
sahf
inc
rcr
cwtl
inc
sbb
lcall
sbb
push
test
aad
mov
test
inc
sbb
jmp
icebp
cmp
imul
sahf
lahf
js
inc
mov
jbe
push
xchg
jne
dec
inc
fcmovnb
xchg
fcmovb
inc
cltd
test
xchg
dec
dec
mov
cmovne
jb
push
or
lock
sub
sub
mov
inc
or
inc
test
and
test
sub
int
imul
lods
xchg
ljmp
in
cmp
fnclex
out
inc
jb
jns
jmp
mov
dec
cmpsl
stos
pop
ficoms
jae
ljmp
sbb
mov
cmpsl
xlat
xchg
jmp
push
xor
hlt
fcoml
lds
and
sub
mov
test
es
imul
pop
xor
cmp
mov
jg
mov
push
repz
inc
push
mov
xchg
mov
sarb
mov
inc
fidivl
into
outsl
sub
fiaddl
mov
pushf
mov
mov
xchg
dec
xor
jno
lret
data16
adc
stc
xchg
xchg
sub
int
jle
and
jecxz
das
leave
and
test
jb
clc
pushf
add
sub
arpl
int
dec
dec
sub
push
cs
xchg
sub
ja
mov
ret
ss
pop
aad
sub
js
add
add
addr16
les
push
testb
shl
sbb
inc
pop
dec
cld
jb
push
add
add
fwait
push
test
insb
cltd
adc
sbb
pop
sub
fwait
bound
outsb
rorl
lea
pop
int
cmp
sti
out
fisubrl
scas
xchg
mov
inc
jmp
xlat
xor
into
add
jae
xor
data16
sbb
ret
into
js
dec
cli
cmp
jl
mov
mov
icebp
popa
test
insl
loopne
and
push
mov
push
addr16
xor
rclb
xchg
inc
stos
push
mov
pop
cld
pushf
stc
loope
lret
pushf
mov
sbb
or
mov
mov
insb
inc
or
repnz
bound
cmc
xchg
xor
insb
mov
jecxz
jg
mov
pop
addr16
xor
cmp
rorb
pop
out
jle
lcall
ljmp
adc
inc
adc
iret
inc
xor
jae
jmp
out
punpckhwd
lret
pop
pushf
push
sub
cmc
jne
out
inc
movsl
mov
xor
add
lods
jns
in
movsl
ret
inc
arpl
in
sbb
stos
enter
roll
sub
jne
xchg
aad
add
pop
add
ja
cld
push
sbb
adc
in
add
and
mov
dec
jg
inc
mov
orb
add
pushf
mov
push
add
enter
sub
stos
push
or
inc
push
std
cli
pop
ja
add
and
jnp
and
decb
addr16
push
mov
enter
xchg
pop
aam
ficoml
lods
jp
cwtl
jp
rcll
pop
daa
in
in
dec
in
mov
test
fsubrl
adc
adc
cli
scas
jp
mov
test
jp
mov
mov
and
mov
sub
scas
pop
xchg
lret
addr16
inc
shlb
insb
cli
push
sub
fwait
or
lahf
xor
es
mov
add
xchg
fwait
mov
sub
insl
mov
jnp
push
or
jge
mov
data16
xchg
das
sarb
jae
fwait
call
pop
std
push
sub
or
cwtl
mov
in
push
and
mov
or
push
std
cld
push
jmp
sbb
rorl
test
and
jbe
insb
mov
jmp
pop
int3
sub
jo
jle
xchg
sub
dec
push
jnp
or
lret
xchg
ret
mov
mov
repz
jge
stos
pop
inc
mov
add
aam
iret
xor
pop
dec
mov
sti
add
push
mov
add
js
cmc
dec
fdivl
pusha
outsb
rorb
cli
inc
add
or
xor
and
pop
mov
mov
imul
out
xor
jne
fwait
lods
idivl
cs
adc
xchg
ret
push
rol
cmp
shrb
xchg
mov
inc
insb
pop
xchg
mov
rcrb
hlt
jle
push
shll
jae
daa
repnz
icebp
mov
pop
das
jl
leave
insb
enter
sbb
std
mov
inc
int
and
sahf
adc
jnp
sbb
ffreep
jb
out
dec
loopne
jecxz
xchg
push
jne
imulb
adc
jb
add
loopne
or
neg
and
and
jne
mov
mov
scas
outsb
xchg
pusha
outsb
out
mov
daa
and
cmp
xchg
js
movsl
enter
jge
stos
push
pop
mov
iret
sub
mov
inc
xchg
scas
movsl
into
scas
cwtl
lret
ljmp
cli
lock
aad
pop
test
imul
sbb
mov
jl
in
shl
les
mov
outsb
hlt
leave
call
and
or
xor
enter
or
jp
push
adc
pop
in
pop
dec
cmp
xor
and
xchg
mov
loop
daa
jl
mov
pop
sbb
ret
pop
in
pop
pop
mov
mov
shlb
sbb
das
cwtl
sub
sar
or
cs
adc
push
leave
in
cmpsl
mov
sub
and
sub
adc
fldcw
mov
and
repnz
adc
adc
mov
imul
add
xchg
sbb
xchg
lods
and
jle
add
inc
push
loop
or
ss
stc
lret
adc
lds
push
jecxz
fidivrs
mov
imul
cmc
mov
xlat
xor
xlat
call
rcl
fwait
ret
ret
jo
sti
test
fadd
dec
ljmp
movsb
jge
or
cmpsl
jne
mov
or
std
push
push
mov
scas
dec
jnp
gs
scas
mov
int3
jp
cmp
and
nop
movsb
inc
jns
adc
popa
jb
fiadds
pusha
lock
and
aas
adc
mov
incl
add
adcl
xor
and
mov
mov
loopne
mov
jbe
push
push
fsubs
inc
clc
add
cmp
adc
into
jecxz
add
jbe
inc
push
test
adc
rcll
sbb
test
rcr
dec
xchg
movsb
pop
add
mov
loope
xorl
push
cmpsb
pop
mov
mov
stc
dec
data16
sub
sti
sub
clc
adc
int
mov
jle
mov
shlb
or
xchg
mov
cmp
xor
insl
loopne,pt
sbb
movsb
out
jmp
push
jecxz
in
sahf
dec
pop
push
jo
mov
sub
add
mov
push
je
push
sti
sub
test
jmp
inc
xchg
mov
lret
dec
pop
out
hlt
and
arpl
outsl
push
arpl
fdiv
sub
xor
cmovno
lea
cld
xchg
in
pop
push
clc
push
and
push
icebp
mov
mov
repz
mov
jb
dec
add
cwtl
dec
push
std
push
cmp
mov
cmp
mov
neg
int
xchg
fs
xchg
mov
cmpsb
scas
push
add
or
jecxz
mov
mov
xchg
lahf
pop
jle
scas
mov
call
call
in
adc
mov
aas
scas
enter
cmpsb
lret
mov
push
sarb
push
pop
fs
dec
mov
adc
imul
pop
stos
add
cltd
pushf
jo
hlt
aam
inc
inc
push
ja
pop
xor
inc
pusha
repz
roll
scas
lock
enter
xor
das
sub
test
jge
mov
dec
mov
lahf
test
scas
mov
inc
mov
pushf
ljmp
push
enter
push
das
clc
dec
push
jge
push
push
cmp
inc
cltd
stos
xchg
jp
mov
out
lock
rolb
cli
inc
test
mov
lahf
shlb
leave
imul
test
int
mov
test
xor
sub
jl
cmp
mov
or
mov
add
sbb
test
testb
mov
pusha
push
ret
out
insb
mov
adc
push
loop
xchg
rcrb
pop
loope
lds
ljmp
or
movb
test
jle
ss
mov
cmpsb
fs
cmc
cmp
std
and
punpckldq
mov
es
cwtl
pop
aaa
inc
xor
popa
xlat
int3
xlat
filds
iret
sub
sub
adc
xchg
popl
xchg
push
push
push
movb
andb
jle
mov
jecxz
mov
mov
cmpb
loopne
add
leave
dec
pushf
and
jmp
popf
cmp
dec
jmp
cmp
lods
sub
lock
and
jge
or
jp
popf
stc
mov
sub
pop
inc
clc
sub
fisubrl
ret
push
divl
cmpsl
push
rcl
dec
imul
enter
das
inc
gs
pop
leave
shlb
imul
test
pop
ja
in
jne
popf
fldcw
or
sub
sbb
push
xor
std
enter
jle
sub
add
jmp
test
mov
inc
inc
jge
and
sbb
and
dec
and
sbb
and
fsubl
xchg
lret
or
test
xchg
js
int
shlb
clc
cmpsb
jmp
outsl
les
mov
jo
jecxz
lcall
test
jb
xchg
sub
movb
clc
dec
or
int3
mov
test
addr16
cwtl
jnp
adc
cmp
mov
mov
aaa
mov
adc
sub
and
inc
cmc
insb
add
push
jl
das
test
add
mov
mov
cmp
mov
sub
addr16
sub
sub
inc
mov
xor
adc
pop
and
ret
sbb
or
out
sbb
fisubrl
dec
jle
outsl
lret
cmp
lock
mov
loopne
push
insb
das
subb
aam
icebp
dec
icebp
pop
cmp
scas
lds
pop
imul
jb
mov
js
mov
pushf
cld
add
add
je
or
push
mull
xchg
dec
push
mov
or
cltd
cmp
repnz
shl
jg
rorl
shlb
jmp
out
sbb
sti
xor
push
ds
push
or
rcr
repz
inc
or
pop
sbb
sub
in
adc
ljmp
insb
mov
cmp
andb
outsl
mov
sbb
adc
scas
adc
in
imul
xchg
mov
fiadds
aad
gs
daa
pusha
mov
mov
inc
test
and
or
fs
cmp
xchg
rorl
mov
jle
jmp
dec
adc
pop
sub
jb
add
es
cmovae
and
bound
imul
jno
dec
cmp
xchg
loopne
add
insl
cmp
cmp
jle
lods
ja
fcmovbe
movsl
pop
int
mov
sub
por
add
subl
xorb
cmc
fildl
mov
rcrb
sbb
or
aas
out
dec
xor
jbe
jl
fists
adc
jo
mov
xchg
outsb
dec
sbb
movsl
out
std
fnstsw
or
xchg
mov
fadd
add
cwtl
hlt
and
aaa
jg
sub
jecxz
mov
dec
stos
mov
loope
adc
jno
arpl
adc
xchg
xor
inc
push
imul
jb
movsb
jge
pop
push
cmpsb
add
mov
out
push
ret
dec
mov
insb
mov
lret
hlt
sbbl
aas
imul
mov
mov
fadds
dec
lock
inc
or
hlt
sbb
stos
xchg
insl
popf
jne
mov
lcall
imulb
cltd
iret
pop
pop
jmp
rorl
or
xlat
in
jmp
movsl
xor
aaa
xchg
xchg
je
push
icebp
movl
cmpxchg
out
mov
cmp
sbb
or
mov
jne
sahf
in
sbb
ljmp
jo
leave
fbstp
test
push
sahf
fildl
jmp
scas
and
mov
sbb
cmp
dec
mov
in
lcall
and
add
dec
xlat
mov
cwtl
je
jno
mov
adc
mov
roll
or
cmp
sbb
das
inc
lds
and
mov
sbb
and
int3
popf
dec
sub
push
inc
ljmp
ret
cmpsl
push
pop
inc
jno
dec
inc
sbb
or
mov
das
outsl
pop
xor
jns
shlb
dec
fnsave
pop
sbb
test
jl
les
enter
iret
popl
stos
xchg
mov
test
fs
mov
and
cmp
inc
cmp
push
mov
inc
or
daa
sbb
mov
cmp
jns
ljmp
into
dec
adc
sbb
jg
xchg
outsl
dec
arpl
loop
jmp
pop
mov
sub
jb
std
or
in
andb
xor
add
int
add
outsl
fmull
lcall
movl
jae
popa
mov
icebp
pushf
inc
iret
fisubrs
xchg
pop
add
rclb
push
insb
sbb
jl,pn
sar
repz
cmc
add
out
ljmp
mov
cmp
inc
or
cwtl
aaa
adc
sbb
arpl
jae
lock
sbb
lcall
or
nop
add
push
ljmp
sub
sbb
repz
mov
and
fsubr
mov
adc
call
in
fs
jg
lods
push
inc
testl
cmp
loop
test
inc
adc
sbb
xchg
cltd
test
xchg
mov
popa
jnp
jecxz
add
xor
inc
leave
std
notb
loopne
sub
mov
test
or
out
les
lahf
or
sub
and
mov
pop
mov
movsl
test
cmp
fsubrs
dec
aam
iret
jbe
xlat
int
sbb
test
out
fimull
dec
dec
push
in
les
stc
loop
push
aas
add
push
ss
in
aas
daa
test
gs
sti
rorl
mov
scas
inc
adc
arpl
xchg
mov
dec
push
mov
push
inc
mov
cli
daa
cwtl
pop
lds
shr
push
or
mov
push
xlat
push
xor
loope
mov
clc
xchg
or
loope
mov
dec
pop
fwait
jge
and
push
test
ds
dec
mov
mov
stc
or
fiaddl
lock
rorl
jl
ljmp
je
xorb
loop
inc
ret
aad
and
push
addl
rcrb
xchg
add
daa
inc
loope
imul
jns
add
test
and
mov
out
mov
out
sub
scas
enter
rclb
mov
mov
push
repnz
iret
sub
xor
mov
dec
sub
ret
cltd
in
sar
mov
mov
out
icebp
fisubrl
jne
lods
xor
enter
dec
sti
cmp
fiaddl
xchg
ja
das
jge
loope
subl
and
es
mov
bound
inc
shld
sbb
push
in
pushf
jge
pop
or
sbb
fucomp
lret
xchg
and
push
int
lcall
add
dec
decl
push
mov
inc
or
push
subl
into
mov
mov
sub
adc
mov
and
test
hlt
test
and
in
xchg
jbe
mov
aaa
xchg
lahf
movsl
mov
ja
push
aad
cld
xchg
dec
mov
mov
inc
lods
in
or
pusha
adc
sti
out
leave
repnz
lds
fwait
xchg
scas
cmp
pop
xchg
das
stos
mov
inc
sysexit
mov
fidivrs
xor
xchg
data16
or
push
adc
shll
loope
push
xor
push
xor
pop
dec
dec
lds
inc
pop
xchg
push
or
push
fstps
mov
shrl
mov
xor
in
movsb
or
jecxz
mov
imul
xchg
leave
pop
lret
aas
dec
dec
test
das
ret
jbe
call
cmp
adc
int
and
das
cmp
ljmp
dec
fdivs
pop
test
jl
mov
or
fcomp
sarl
mov
es
mov
lods
mov
jo
mov
fdiv
push
dec
add
mov
ss
stc
pop
cld
ss
sbbl
xchg
cmp
sahf
adc
ds
test
dec
mov
std
mov
cmp
lock
mov
dec
iret
pop
cmp
mov
cltd
cmp
std
lea
xlat
fnsave
cltd
cmp
icebp
daa
pop
in
and
pop
mov
mov
into
inc
stos
out
mov
xchg
scas
or
push
xchg
or
insb
pop
mov
lock
cmc
xor
into
cs
jae
mov
ljmp
dec
lock
jecxz
push
out
loope
pop
jbe
je
mull
andb
mov
xor
cld
ficompl
sub
pop
lods
add
pusha
sub
stos
mov
pop
lahf
aaa
xchg
ret
shrb
ds
pop
test
dec
jbe
adc
sbb
pop
lods
inc
lods
in
jbe
cmpb
pop
push
test
scas
push
or
loopne
inc
jg
cmp
push
mov
adc
xlat
shlb
leave
fiaddl
mov
jp
out
pop
adc
dec
in
push
popa
cmp
jmp
xor
insl
push
pop
aaa
out
jle
xor
xor
add
repnz
adc
mov
ret
insl
xlat
sahf
xchg
mov
neg
mov
ljmp
mov
xor
push
mov
les
pmulhuw
inc
push
test
jbe
xchg
inc
adc
adc
xlat
push
mov
pop
mov
cmp
test
push
js
push
fprem
ljmp
cmc
jg
jecxz
jg
fdivs
cltd
jbe
dec
pop
or
pop
mov
dec
jo
sub
addr16
inc
clc
clc
ret
xchg
mov
jg
and
or
into
loopne
jge
dec
sub
mov
jo
mov
dec
mov
jae
dec
cmp
pop
loope
cmp
pusha
cld
cmpsb
xor
shlb
or
sbb
sub
fstl
scas
fs
or
push
jmp
push
imul
mov
sbb
sar
sub
xchg
pop
xchg
es
punpckhbw
jecxz
out
push
js
adc
sbb
push
fmul
stos
mov
pop
repnz
sbb
lcall
and
mov
xor
loope
jbe
xchg
mov
xchg
int
bnd
jae
mov
cmpsl
push
pop
jge
mov
cmp
add
push
fwait
jne
cli
fstpl
or
push
les
loopne
jno
loopne
or
xchg
gs
sti
mov
cmpsw
rcrb
mov
fisttpl
shrb
addr16
imul
ds
in
cmpsb
push
cmpsl
dec
dec
in
rorb
cld
shll
in
orl
lods
sbb
clc
fbstp
les
adc
cwtl
xchg
mov
and
fdivr
sti
cwtl
stos
divb
push
nop
xor
aas
or
xchg
and
mov
and
stos
ss
ds
adcb
pop
push
out
adc
stc
inc
or
mov
pop
data16
xlat
push
sbb
or
xor
fisttps
mov
add
incl
lret
lods
xor
cmp
inc
xchg
mov
mov
or
lret
inc
add
fadds
clc
repnz
sbb
gs
in
sbb
and
sub
frstor
xor
pop
cmp
push
std
mov
das
int3
add
out
dec
in
pop
sbb
push
mov
lret
xchg
pop
xor
add
clc
pop
jg
movsb
rol
in
push
jno
sti
cmc
inc
cmp
sbb
cltd
inc
into
push
stos
mov
divl
popf
incl
or
les
shrb
dec
movsl
aaa
fiadds
pop
cmp
subl
daa
sarb
addb
lods
jbe
iret
xchg
aas
mov
aam
out
adc
das
mov
scas
push
aam
enter
scas
add
add
adc
push
cli
or
xchg
mov
cmpsb
lret
xchg
mov
jno
and
adc
imul
pushf
adc
xchg
movsb
adc
push
sarl
mov
adc
cwtl
push
xchg
ja
sub
nop
and
xor
jmp
dec
cmp
add
push
pop
xchg
lcall
gs
mov
addr16
jns
mov
mov
lcall
jge
or
push
and
inc
lret
je
xchg
shlb
adc
enter
lret
or
out
test
into
mov
filds
ret
mov
testl
out
fldl
or
fwait
jo
idivl
cmc
insb
xor
push
es
mov
test
je
ror
sarl
je
xor
sbb
lcall
xchg
mul
lock
inc
das
mov
aas
out
add
sbb
inc
stos
inc
inc
mov
lea
rolb
jmp
movsl
add
stos
shll
imul
mov
sub
push
push
adc
jae
cs
or
mov
jno
mov
cmpb
and
mov
and
xor
aad
push
or
movntq
adc
add
fiadds
ja
xchg
testl
pushf
push
jae
imulb
sahf
lret
jnp
loop
add
xchg
scas
sahf
test
jg
pop
jmp
aad
pushl
pushf
cmpl
pusha
sbb
push
inc
and
lahf
call
adc
je
pop
sub
imul
popf
rorb
jnp
dec
push
pop
fwait
adc
cmpsb
out
loopne
out
lret
mov
leave
hlt
js
and
adc
out
xor
mov
inc
cmp
popf
test
cmp
pop
mov
in
add
movnti
mov
insl
loop
push
sub
mov
push
mov
inc
pop
pusha
pop
addb
inc
cld
cmp
subl
inc
in
fwait
pop
adc
mov
rolb
push
jle
rolb
testl
push
xor
test
cmp
sub
out
inc
xchg
fsubr
movlhps
and
in
mov
ja
push
repz
jb
push
adc
add
or
ss
add
into
add
inc
push
cmp
ljmp
pop
fimuls
clc
add
pushl
jne
cmp
pusha
in
push
pushf
fisubrl
jge
and
mov
add
repz
cld
lcall
imul
js
inc
lahf
insb
iret
fstpt
les
into
stc
pop
and
push
test
mov
cmpsl
sbbb
scas
cmp
lahf
insl
les
cld
aad
mov
push
insb
cmp
pop
int
push
cmpsl
fs
ds
negb
jb
popa
and
iret
sub
pop
aad
dec
mov
clc
or
ficoml
outsl
inc
mov
fisubrs
cmp
sbb
mov
cltd
mov
mov
cmp
aaa
aaa
push
mov
mov
push
mov
aas
add
lea
daa
addr16
lods
sbb
lahf
out
push
fdivrl
jo
es
int
in
xor
push
push
pop
loopne
sbb
inc
jge
test
mov
test
std
stos
movsl
decb
popa
fwait
cmp
sub
imulb
js
repnz
inc
data16
cli
mov
jecxz
dec
push
xchg
xor
mov
aad
jg
icebp
leave
out
rorb
adc
ret
movsl
test
adc
fildl
outsl
xchg
pushf
or
sbb
or
mov
push
popf
sbb
out
jl
dec
sbb
adc
mov
jg
pop
pop
sarl
pmulhw
xor
or
pop
inc
push
push
cmc
mov
and
and
cld
pop
stos
test
xchg
fs
stos
out
fistpl
fcoml
mov
sub
roll
and
xor
mov
xlat
into
jge
lret
and
les
push
lret
pop
lods
jmp
xlat
aas
stc
cmp
mov
inc
adc
test
lea
inc
xor
bound
jo
mov
jo
xchg
cmp
mov
add
rcll
out
cltd
leave
ss
lock
iret
out
aam
lea
adc
rolb
mov
pop
sub
dec
cld
or
jecxz
sub
sub
rcl
insb
sub
mov
cmp
xchg
jp
jo
test
adc
pop
push
das
mov
mov
jecxz
cmp
jp
mov
pop
adc
mov
scas
and
pop
insl
lods
cmp
cmp
add
or
add
xchg
cli
add
inc
mul
xchg
lcall
loopne
frstor
push
inc
add
std
mov
dec
adcl
mov
sub
fucomip
lcall
popf
inc
jnp
int
out
push
call
shlb
or
lcall
in
aad
jne
cmp
sbb
sbb
cld
in
pop
cs
push
pop
xor
imul
xchg
fistl
xchg
cmp
stos
add
jno
jge
push
in
mov
push
je
inc
fcompl
and
mov
xor
jns
mov
sub
cwtl
mov
ljmp
mov
pop
or
scas
or
adc
or
adc
fxch
xchg
mov
push
test
jo
movsb
jecxz
push
mov
inc
xchg
lret
push
idiv
push
pop
aam
dec
fwait
push
outsl
lods
dec
pop
andl
mov
lds
int
mov
inc
scas
mov
xchg
jo
fwait
out
fdiv
jle
les
inc
or
bswap
jecxz
mov
mov
out
jnp
xchg
fs
add
arpl
or
or
mov
lods
dec
shlb
jl
outsl
cld
ljmp
les
iret
sbb
mov
ret
pushf
out
fnstsw
jmp
mov
scas
cmp
cmpsl
mov
cmp
or
mov
pop
mov
push
ds
out
stos
fldcw
lret
push
idiv
loop
ficoml
or
sbb
popf
bound
arpl
inc
xchg
repnz
std
pushf
xchg
add
jb
jp
lods
fisubrl
fwait
es
dec
xchg
in
iret
insl
and
addl
jg
cld
pusha
add
lock
cmp
cmp
rcrl
jno
sbb
in
mov
lea
scas
iret
mov
xor
adc
nop
sub
and
cmp
neg
or
jae
cmp
out
clc
fists
ficompl
aaa
cmp
cmpsb
xchg
cmpsb
jb
outsb
mov
push
dec
js
push
jmp
cmp
jl
scas
and
adc
shrb
fs
xchg
push
decl
mov
sbb
xlat
mov
sti
pop
and
scas
mov
fdivr
inc
bound
dec
sbb
and
dec
cmp
test
and
push
xchg
mov
jne
mov
xchg
mov
dec
dec
pusha
mov
ss
jbe
jge
mov
mov
xor
sti
pop
and
dec
or
push
inc
repnz
add
aas
aam
add
outsb
cmp
in
xor
clc
out
dec
cmp
dec
jmp
mov
lahf
rcl
bound
fs
dec
push
cld
jecxz
sbb
mov
or
xchg
es
jl
adc
pop
push
fdivs
sbb
pop
pop
xchg
clc
cs
popf
imul
push
mov
or
push
mov
repz
inc
lret
push
push
ror
cmp
enter
xchg
mov
es
leavew
out
bound
mov
xor
popa
adc
cmpsl
inc
shll
and
mov
mov
pop
sub
daa
cmc
lahf
mov
xchg
cmc
cmp
mov
xor
xchg
pushf
lret
outsl
nop
push
subb
xchg
jmp
push
adc
fs
adc
mov
adc
out
add
decl
push
jmp
repnz
cwtl
ficoms
mov
rol
inc
lea
mov
mov
jns
movsl
fs
xchg
pop
fmulp
lds
int
sub
les
jns
jge
cmp
das
repnz
lea
jns
ret
inc
loop
xor
pop
mov
cli
pop
aas
lahf
jle
imul
cs
xchg
mov
test
rorb
les
enter
pop
std
dec
sbb
pop
xchg
cltd
xor
ret
std
cmp
xor
sbb
mov
addl
push
sarb
adc
mov
shl
sahf
lret
data16
and
aaa
arpl
jl
lods
lret
push
pop
icebp
mov
imul
fistpl
mov
icebp
insb
rcrb
stc
mov
rcll
idivl
adc
sbb
out
mov
and
mov
fs
mov
add
inc
cmp
jge
fisttpl
jo
fisubl
sub
movsb
mov
lods
ss
imul
fists
movsl
andl
enter
loopne
inc
sbb
js
adc
jmp
and
jbe
push
pop
mov
cld
xorb
psrlw
mov
rolb
popf
insl
xor
push
adc
insb
xchg
fisubs
or
pop
jp
shl
add
jnp
pop
outsb
inc
mov
adc
nop
jge
inc
xchg
jne
jmp
out
adc
push
push
dec
jbe
sub
or
mov
inc
or
mov
jecxz
adc
inc
fcmove
inc
imul
cmp
mov
sbb
add
addr16
addr16
inc
mov
xor
push
fdivl
inc
cmpsl
inc
push
mov
sbb
adc
lock
xor
cwtl
pop
out
sub
xor
jmp
lret
loopne
mov
bound
call
sub
shll
jae
imul
rcrl
jnp
mov
fdivs
adc
cmc
sbb
pushf
xchg
push
push
fisttpll
dec
loop
jp
dec
scas
out
push
xor
movsb
add
int
cli
push
ret
std
mov
cmp
inc
jo
leave
loop
mov
lods
pop
mov
insw
test
dec
inc
test
or
mov
int
arpl
sub
cmp
insl
sarb
sub
jge
je
and
add
call
addr16
stc
mov
lods
and
fs
adc
pop
xchg
insl
sarl
sbb
mov
push
std
mov
in
in
and
dec
mov
shl
divb
hlt
jbe
jecxz
fidivl
arpl
ret
cld
cli
into
arpl
mov
mul
lcall
lods
imull
sbb
jno
scas
mov
fcoml
and
ss
in
lret
fadds
sbb
imul
pop
mov
ljmp
cltd
add
push
pop
aam
stos
or
mov
ja
mov
scas
pop
data16
fisubrs
add
jl
iret
pop
movsb
jge
sub
sub
inc
xchg
dec
xchg
jnp
mull
inc
aam
scas
jmp
scas
dec
scas
repz
in
cmp
pop
sti
pop
push
adc
mov
cmpps
xor
or
mov
aad
pop
mov
insl
popa
inc
movd
fwait
xchg
ja
xchg
and
outsl
jg
fdivs
xchg
pop
mov
cli
ss
insl
fwait
lods
adc
leave
xchg
std
fdivs
dec
pop
movsb
inc
aam
mov
outsb
sti
inc
addr16
xor
jecxz
mov
rorl
mov
pop
sub
jbe
lcall
mov
out
xchg
arpl
cmc
dec
jmp
xchg
cltd
mov
mov
dec
push
cmp
pop
xor
mov
and
mov
jbe
mov
in
sbb
imul
jecxz
testb
hlt
call
push
push
adc
xor
lahf
mov
jge
jmp
iret
loopne
pop
and
incb
test
fistpll
jb
ja
mov
hlt
ss
sbbl
fsubl
mov
icebp
mov
stos
sub
and
pop
pop
lahf
mov
mov
and
and
outsb
add
sbb
mov
xlat
xor
mov
dec
out
sbb
adcb
popa
dec
aaa
lea
mov
sub
sub
les
xor
mov
inc
push
mov
xor
mov
or
or
sbb
mov
clc
fdivr
cmpsl
insl
sub
mov
cmpsl
scas
decl
scas
shl
pop
cmc
shlb
mov
push
and
ret
jno
pavgb
cmp
jnp
imulb
push
iret
jb
cmp
jnp
sarb
push
fcom
mov
pop
jmp
loopne
sbb
mov
scas
fildl
out
sbb
nop
cmp
pushf
dec
cmp
mov
and
out
mov
dec
out
aaa
lahf
push
xor
mov
or
repz
aam
shll
gs
ljmp
cmp
movsl
sub
or
jecxz
int3
rcrb
push
adc
int3
out
jo
out
daa
push
in
decb
xorb
add
lret
mov
mov
stc
pop
mov
xchg
xor
fsub
dec
out
mov
inc
lods
and
pushf
mov
sub
mov
or
push
sbb
push
cs
xchg
cli
insl
jge
in
sub
pop
mov
movl
js
pop
cwtl
fildl
dec
seta
nop
sbb
sub
aam
dec
pop
insl
inc
jg
mov
or
jecxz
mov
and
sub
xor
jbe
stc
mov
add
inc
std
push
dec
or
cmp
pop
pop
mov
jns
dec
jne
xor
cld
shlb
icebp
sub
mov
sub
mov
popa
leave
out
mov
movsb
test
jo
cmp
ljmp
cmp
scas
les
cmp
ja
fwait
sti
pop
bound
lcall
addl
xchg
jecxz
rcrl
dec
cmpsl
jo
and
stos
jge
add
xchg
rol
pop
std
int3
iret
fidivl
mov
inc
mov
out
das
jno
sub
adc
mov
ret
mov
mov
movsl
rcll
test
mov
bnd
in
mov
jmp
pop
pop
pushf
rep
sbb
inc
jns
push
adc
mov
addr16
sahf
testl
sbb
rorb
or
pop
pop
ret
loope
movl
inc
clc
decb
scas
mov
in
sbb
rcll
or
shld
mov
test
stos
mov
shl
insl
dec
rcll
xchg
addr16
loopne
xchg
inc
out
jl
sbb
pushl
int
or
push
jo
jmp
hlt
sti
sbb
push
xor
cs
and
fcoms
xchg
movsl
cwtl
push
sbb
fmuls
aad
rcrl
iretw
push
in
dec
push
xor
cwtl
test
ja
mov
sti
nop
cmp
push
mov
popa
push
adc
push
cli
fstpl
push
mov
fcmovb
add
das
popa
sahf
in
jno
jmp
mov
iret
addr16
mov
cmp
dec
inc
dec
add
xor
das
fmuls
mov
push
xchg
das
xor
andnps
nop
jl
or
pop
pop
add
and
push
lock
les
sub
pop
loopne
ljmp
scas
shll
xchg
js
rorl
cmpsb
cmp
mov
jmp
pop
and
jo
incb
mov
push
sbb
mov
xor
ds
xor
or
lret
jne
dec
ja
mov
pop
jl
scas
push
dec
sarb
ficoms
sub
jnp
ljmp
jne
push
cmpsl
mov
pop
aam
test
mov
jge
pop
orb
iret
fdivr
imul
dec
jmp
leave
dec
ljmp
mov
adc
dec
mov
pop
test
movsl
stos
outsl
cltd
pop
lods
jle
rolb
xchg
ja
and
insl
jnp
lods
insb
in
jl
incb
jmp
and
pop
mov
and
mov
cli
ret
jno
insl
or
lods
xor
movb
mov
scas
clc
outsb
adc
dec
scas
and
and
and
xor
lods
mov
in
pop
fwait
out
xlat
xor
xor
or
fsts
rcll
sub
xchg
aad
in
lahf
psubd
sbb
mov
dec
mov
lret
cltd
aad
mov
inc
add
adc
lcall
cmp
xchg
xor
int3
push
das
movsl
sahf
imul
es
dec
pop
lahf
sbb
inc
subl
push
mov
pop
sub
fdivl
xor
aaa
jle
clc
add
fldl
pushf
roll
das
insb
and
rcrl
std
scas
cmpsb
xor
cmp
pop
or
adc
aam
arpl
xchg
mov
les
pop
fwait
push
call
adc
mov
aas
mov
rep
cs
and
enter
dec
es
fldt
lcall
fsubrl
mov
pushf
push
insb
push
sbb
hlt
cmp
test
xchg
xorl
jbe
cmp
syscall
pop
cmc
add
fistps
stos
fmuls
jmp
repz
pop
sbb
inc
cmp
jo
jne
and
jne
xchg
dec
clc
jbe
dec
and
jnp
ss
push
movsl
xor
pushf
insb
adcl
jo
adc
lods
and
cmp
jns
xchg
mov
loop
bound
test
rorb
aaa
gs
ret
jg
sub
cmpsl
xchg
mov
out
cwtl
xor
cltd
push
push
test
pop
push
lcall
or
mov
mov
and
mov
push
inc
fcomps
dec
pushf
andb
push
or
xor
mov
add
push
out
andl
mov
mov
mov
mov
dec
lret
mov
push
dec
cld
sti
insl
hlt
pushf
jecxz
xchg
out
jp
subl
fwait
push
mov
pop
jno
add
push
sub
inc
loopne
popf
jmp
mov
into
es
pop
pop
jg
fwait
pop
mov
cld
nop
ret
out
cmpsb
imull
add
out
push
jecxz
dec
cmp
xor
push
mov
std
jno
shl
lret
inc
add
in
jbe
pop
sub
jg
cmpsb
or
movsl
jmp
sahf
push
je
lret
pop
testl
insl
lds
movsl
and
adc
jb
lret
mov
cmpsl
in
call
push
add
and
push
popw
fndisi(8087
xor
daa
mov
mov
ja
negl
sbb
dec
inc
inc
inc
test
push
mov
cmp
cwtl
repnz
pop
adc
cmp
xchg
fcoml
push
push
addb
insl
xchg
mov
mov
stos
jp
cli
arpl
push
aas
sar
inc
xchg
xchg
enter
push
adc
iret
arpl
xor
cs
mov
and
xlat
addr16
sbb
add
incl
dec
sub
sub
xor
adc
lret
or
cmp
mov
stc
lock
cmp
and
or
insb
adc
loope
in
pop
fisubrl
mov
daa
iret
cld
orb
push
jl
xor
dec
pop
xchg
mov
loope
movsb
sub
nop
cmc
shrl
movsl
outsl
mov
dec
icebp
mov
xchg
bound
test
pop
mov
and
fmull
call
mov
pop
jle,pt
popf
int
adc
jmp
outsb
xchg
mov
je
pop
cmp
lahf
sbb
repz
sbb
xchg
int
and
add
mov
pop
roll
fs
xor
mov
push
jp
addr16
ss
into
in
fs
push
movsb
idivl
insl
addr16
mov
sub
add
add
mov
gs
mov
das
mov
lds
pop
mov
inc
into
or
fimull
push
add
shlb
scas
test
in
jle
cltd
scas
dec
and
mov
fimull
js
inc
dec
cmp
inc
fdivr
fs
mov
in
jmp
sbb
pop
xchg
rcr
sbb
ljmp
decb
addb
xor
or
jb
push
push
dec
sarb
rcl
cmp
dec
mov
frstor
mov
and
nop
adc
xor
pop
jmp
push
fs
push
sbb
inc
add
lock
sbb
pmuludq
fsubs
cmp
xor
bound
mov
xchg
xor
and
xchg
sub
cmp
sub
and
fwait
mov
outsb
mov
mov
lea
cltd
outsb
inc
and
jb
dec
int
xor
push
push
sti
jmp
ljmp
add
bound
shll
dec
cltd
shlb
lcall
mov
add
inc
jge
movsb
sbb
xchg
outsb
fistpl
pop
xor
int
in
push
inc
pop
dec
jo
xor
lods
data16
dec
shrl
cmp
mov
movsb
xchg
pop
mov
push
and
shl
cmp
js
pushf
repz
push
lret
mov
sbb
test
adc
pop
nop
mov
loopne
leave
shll
aaa
push
pop
daa
clc
add
imul
mov
clc
inc
notl
bswap
mov
adc
dec
out
mov
out
lods
sti
cmp
sahf
insl
imul
js
pop
aad
inc
je
cs
pop
les
repnz
jmp
xchg
sti
bound
insl
ss
ljmp
jmp
pop
adc
cmp
pop
loope
lcall
sub
gs
lcall
sbb
out
mov
inc
mov
mov
pop
cmpsl
pop
xor
daa
pusha
cmp
sbb
mov
mov
adc
xchg
or
cmp
and
repz
repnz
jecxz
sub
test
adc
leave
test
push
js
outsl
stc
and
push
sbb
movsl
shlb
dec
mov
push
fdivr
or
inc
hlt
sti
xchg
loop
stc
sbb
inc
popf
lret
cmc
es
imul
out
pop
dec
test
add
inc
mov
sub
loop
cld
add
cmpsl
imul
icebp
loope
clc
mov
in
jmp
aad
aad
cmp
or
mov
mov
pop
hlt
and
sbb
adc
inc
xor
test
les
jne
push
jp
daa
push
outsb
loope
fxch
jle
fstps
dec
sahf
in
sub
push
fwait
int
pop
stos
add
dec
loop
imul
mov
inc
daa
mov
and
add
dec
cld
xchg
int
movl
cli
dec
mov
or
negb
mov
stc
jb
dec
cmp
dec
mov
lock
aad
add
ds
cmp
popf
mov
das
call
sub
jle
insl
pop
int3
adc
scas
jb
dec
xchg
cmp
xor
fnsave
imul
inc
outsb
outsl
loope
in
mov
movsl
fstps
push
cmp
push
xor
cmc
imul
fcompl
jg
pop
jp
repz
mov
pop
xchg
mov
gs
stc
leave
sbb
popa
mov
scas
repz
xor
icebp
scas
addb
shlb
xchg
xorl
in
jmp
inc
jmp
clc
jp
mov
push
dec
or
mov
mov
mov
mulb
dec
fcmovu
das
pop
mov
or
push
ljmp
jle
push
sti
ret
xor
cltd
jg
jno
jns
fwait
mov
orb
roll
or
cmc
test
mov
or
or
inc
xor
sbb
out
jnp
sbbl
mov
dec
and
outsb
and
add
xor
andl
outsb
push
cltd
cmp
xchg
std
mov
mov
jge
mov
in
xchg
jbe
mov
push
out
ds
push
push
stos
ficoms
shlb
outsl
std
clc
sti
test
sbb
jle
rorl
stc
add
rcrl
jecxz
adc
push
mov
dec
loopne
add
jae
mov
sbb
loopne
lret
cwtl
sti
call
sbb
mov
mov
roll
and
pop
mov
repz
movsb
and
add
into
shrl
ret
and
pop
loopne
xor
inc
fadds
jmp
inc
dec
adc
gs
mov
push
and
push
xor
das
mov
rolb
dec
cmpsb
divb
aad
fisttpll
jmp
add
cli
mov
inc
inc
mov
mov
call
ljmp
lahf
adc
sub
dec
or
xchg
sub
hlt
push
adc
inc
mov
mov
xchg
mov
add
lret
jae
push
insl
pop
add
cltd
lods
sub
push
mov
mov
int
iret
push
sti
int3
or
mov
out
ss
inc
insl
sbb
aam
or
mov
cmpsb
das
xchg
push
out
pop
mov
sbb
fld
loop
sub
aad
cmpsb
int
loop
push
repz
pop
mov
rcl
push
aaa
lock
dec
jns
ja
inc
test
mov
push
pop
mov
mov
adc
addl
pop
xchg
pop
mov
movsb
dec
sbb
cltd
push
or
js
stos
mov
aam
sbb
push
cmp
mov
push
mul
push
sbb
mov
add
or
cmp
setno
push
mov
jo
xchg
shrl
push
xchg
mov
jnp
lcall
clts
mov
aam
fdiv
or
xor
shr
xor
adc
mov
fildll
mov
lret
inc
inc
stos
test
sbb
add
inc
fstl
cmp
sub
sub
push
adc
outsb
push
les
mov
cmpl
jb
lds
loop
and
mov
xor
or
imul
clc
stos
jg
xor
push
ficomps
cmpsb
push
xchg
pop
sub
test
xchg
or
pusha
xor
xchg
sbbl
push
adc
inc
stc
pop
xlat
adc
pop
adc
cmp
push
popf
cmpsb
dec
cli
in
inc
jo
pop
imul
jae
mov
ss
xlat
mov
arpl
dec
cmp
push
jg
adc
fcmovbe
ret
and
shrl
sarl
sti
gs
dec
imul
je
xchg
mov
gs
cmp
cmp
xor
or
jp
out
popf
mov
inc
popa
lods
xor
mov
sbb
push
imul
jnp
pusha
mov
xchg
jbe
stos
rcrl
pop
pop
cli
push
push
sub
jg
xchg
add
mov
pop
jnp
les
and
imul
sbb
or
push
inc
jns
loop
jns
dec
inc
int3
jl
mov
iret
test
cmc
push
pop
lock
cld
sbb
clc
test
add
repnz
mov
mov
dec
and
inc
fnstsw
adc
daa
std
and
and
test
cld
adc
mov
pop
cmp
lret
or
fmull
fxch
ds
repz
mov
jb
sbb
iret
in
lret
xor
stos
imul
adc
push
sub
adc
jp
arpl
lods
xchg
aas
jecxz
loop
addr16
pop
andps
mov
add
movsl
notl
cmc
cmp
jge
lcall
in
xchg
cmpsb
sti
arpl
add
adc
fcoms
push
call
adc
mov
adc
adc
inc
mov
sbb
in
scas
mov
inc
sbb
leave
adc
ror
inc
cmp
cmp
repnz
dec
imul
jecxz
fs
sub
mul
cmp
loopne
push
cmp
cmpsl
je
pop
xor
cmp
adc
add
js
in
fdiv
cmp
xchg
repz
jg
in
xchg
ror
popf
out
jnp
orb
in
ss
scas
fs
ljmp
in
cmp
add
int
scas
mov
dec
cmp
into
ret
das
out
daa
xor
dec
fwait
sub
pop
inc
loopne
insl
in
orb
lea
into
mov
outsb
push
or
in
lods
jl
ficoml
ss
lock
fmul
xchg
or
daa
cmpsl
lcall
cmp
sub
cmp
ss
mov
pop
sub
aas
and
cli
ja
addr16
loope
outsb
inc
fistps
jl
jge
in
sti
cmpsb
inc
sbb
stos
dec
sti
mov
iret
insl
fmuls
pop
add
test
adc
scas
jns
fsubrl
dec
in
sub
push
xchg
mov
lea
iret
jne
mov
jne
iret
push
test
dec
les
mov
xor
sub
pop
adc
cmp
inc
pop
das
lahf
and
jmp
jle
mov
and
inc
mov
push
sti
mov
or
jecxz
mov
aaa
scas
jno
outsb
in
or
mov
jge
lods
mov
sbb
adc
sbb
and
jl
push
jecxz
fidivrl
push
test
lock
ss
mov
addb
add
cmp
fists
hlt
daa
ds
sub
data16
push
scas
mov
lock
push
mov
in
enter
ret
push
scas
push
jl
pop
dec
test
test
xchg
mov
subl
sub
mov
js
xlat
mov
xchg
ret
fmulp
fidivl
pop
inc
fwait
adc
out
mov
dec
mov
pushf
xchg
dec
inc
fwait
lock
xchg
cltd
xor
shrl
pop
clc
inc
fistl
lock
sbb
subl
cmp
adc
jge
hlt
imul
inc
stos
mov
mov
mov
stos
test
dec
jl
pop
es
dec
cmpsl
and
in
pop
jg
imul
mov
jmp
xor
mov
jg
jmp
ljmp
int
mov
pop
sti
int
xor
jo
jbe
ret
dec
sbb
xor
ret
xchg
add
gs
rorb
jge
out
mov
sub
int3
pop
or
dec
shl
xchg
dec
pop
mov
popa
in
repz
jle
scas
xor
ljmp
or
mov
or
nop
sarb
jg
cld
push
loop
or
test
add
or
dec
sti
xor
mov
mov
mov
jmp
push
inc
loop
sbb
je
inc
in
xchg
fwait
jb
jp
sti
std
jg
mov
sbb
fs
push
mov
sbb
imul
mov
cld
shlb
or
cltd
je
fdivrl
push
adcl
in
jno
popf
inc
test
cli
stc
daa
add
pop
adc
jbe
in
cwtl
push
aad
sbb
inc
loopne
loop
push
push
aas
frstor
pop
mov
push
push
cmpl
mov
nop
loopne
mov
int3
push
jb
lret
or
pop
jnp
pop
in
aas
jns
fwait
mov
mov
cld
hlt
ds
push
inc
in
dec
ret
jle
xchg
lock
or
fstps
push
or
test
les
in
and
adc
jle
cmp
cwtl
aad
cwtl
mov
clc
lea
mov
jnp
leave
xchg
ss
ret
add
mov
decb
mov
mov
inc
xlat
mov
sbb
enter
int
sahf
push
jle
sub
std
mov
lahf
outsb
jmp
inc
mov
mov
or
dec
fidivs
popf
mov
and
add
mov
ljmp
dec
xchg
mov
xchg
inc
pop
cmpsb
outsb
test
mov
nop
cmp
movsl
sbb
loopne
aas
add
ja
sbb
fdivl
stos
inc
jecxz
sahf
pop
cvtps2pd
mov
fldl
inc
and
stos
mov
cmp
push
iret
ret
or
js
je
andl
or
or
dec
inc
daa
popf
imul
repz
and
cs
mov
shll
or
hlt
jmp
adc
and
aaa
and
adc
sub
daa
mov
js
addr16
mov
add
or
mov
jae
push
rcr
xchg
stc
lahf
pop
jno
aas
dec
cmp
icebp
sti
and
fildll
push
fs
popa
sbb
jb
popa
mov
cmp
and
imul
repz
fst
sti
rcl
popa
ret
mov
lds
inc
lods
or
sub
mov
sub
sub
mov
mov
xlat
andb
aam
sti
mov
loope
xlat
and
mov
inc
mov
gs
or
in
sbb
cli
ret
std
je
cwtl
mov
fdivp
aam
or
xchg
pop
sub
scas
nop
pop
sub
and
pop
cmp
les
mov
js
jae
mov
xchg
and
mov
pop
pop
daa
insl
mov
cld
xchg
or
adc
pop
jb
pushf
mov
push
xchg
or
cmc
jge
sub
inc
out
inc
std
mov
push
adc
lret
pop
mov
call
call
adc
int3
mov
sahf
stos
cmp
lods
roll
pop
jecxz
movsl
ret
lock
lods
gs
scas
or
xor
aas
push
push
stos
mov
and
lahf
rcl
clc
mov
xlat
or
nop
mov
pop
dec
repnz
in
cwtl
mov
mov
loope
lods
ljmp
mov
dec
cmp
xchg
xor
mov
leave
sahf
mov
cli
clc
cs
iret
mov
insl
in
cmp
repz
ds
out
out
jecxz
addr16
mov
cmpsb
fimull
cwtl
std
out
outsl
mov
sti
out
adc
sbb
add
xor
out
dec
cmp
mov
jns
and
loop
js
mov
inc
je
repz
loope
adc
cmpsl
ret
jmp
hlt
xor
out
fwait
insb
and
lcall
outsl
pmaxsw
sbbb
push
loopne
fwait
mov
dec
cmp
jns
movsl
mov
push
sti
stos
out
xchg
add
mov
inc
push
subb
pushf
mov
ja
mov
xchg
outsl
add
int
jno
out
cmp
dec
das
arpl
hlt
mov
jecxz
loopne
sbb
pop
mov
daa
dec
jg
jb
and
or
lea
add
cwtl
fdiv
in
jns
mov
sbb
fs
scas
xor
pop
rorl
int3
aaa
and
test
arpl
jmp
mov
xor
push
or
push
pop
inc
push
decl
lods
jns
cmpb
jns
es
icebp
xor
arpl
ffreep
mov
pop
sbb
data16
mov
lahf
jae
scas
dec
int
mov
mov
lcall
cmp
dec
cld
pop
movsb
ds
push
jle
xor
jp
jnp
pop
inc
imul
fcoms
cld
jge
vcvttps2dq
pop
xor
pop
call
cli
and
into
aas
idivl
and
pop
test
xchg
xchg
push
mov
icebp
dec
mov
xchg
dec
lcall
popf
push
xor
push
lds
dec
roll
lahf
mov
inc
mov
scas
das
mov
jecxz
loope
popf
push
decb
rolb
fcompl
lcall
inc
fs
das
jg
call
or
or
shll
add
cmp
scas
pop
hlt
std
aad
shll
ja
icebp
add
outsl
ret
movsb
enter
add
dec
jo
sub
xor
idivl
xor
aad
xor
loope
cmp
fldt
dec
push
sbb
jne,pn
in
jb
sahf
sti
mov
cwtl
loop
shll
push
arpl
out
xchg
ljmp
mov
repz
stos
xor
aam
pop
jb
push
cmp
mov
jo
movsb
imul
cli
adc
out
xchg
daa
push
fcoms
or
or
sbb
cmp
adc
popa
inc
sbb
jl
jbe
cmp
mov
bound
adc
ret
cmp
repnz
sysret
adc
cmp
bnd
or
shlb
adcl
inc
jmp
push
movsb
in
loopnew
fcmove
outsl
dec
shll
or
mov
ss
adc
out
clc
adc
add
push
stos
dec
nop
mov
int3
jne
dec
sbb
sbb
mov
mov
inc
pop
jb
movb
sbb
push
ljmp
mov
das
aam
sub
dec
outsb
imul
pop
add
data16
inc
inc
test
ror
ret
pop
add
leave
leave
rcrl
xchg
fs
cwtl
push
fldt
repnz
lret
out
mov
add
stc
mov
jle
fwait
inc
mov
enter
test
lock
cmp
aas
xor
push
mov
arpl
add
adc
pop
jo
jp
fcmovbe
addr16
adc
add
divb
sbb
psrad
sar
add
push
push
ja
addr16
fs
insl
jl
inc
adc
pop
xor
hlt
call
repz
adc
add
lock
dec
fidivrl
jmp
insb
push
aad
int
inc
repz
cli
or
add
out
fistpll
push
sbb
dec
sub
push
inc
rcrl
mov
push
std
push
arpl
dec
sti
lods
jne
lea
and
or
adc
repz
mov
lods
cmc
cmp
push
es
add
mov
mov
orl
dec
aam
jno
xor
int3
out
ljmp
or
jecxz
data16
sub
add
add
test
mov
pop
inc
add
inc
aas
add
or
or
mov
jns
cld
sbb
push
idivl
xchg
pop
jp
pop
into
pop
into
or
iret
push
pop
aad
mov
inc
ss
mov
pop
data16
xor
sbb
sub
push
cmpsl
aaa
and
gs
inc
mov
xor
lds
dec
add
adc
mov
sbb
not
lods
ljmp
mov
cmp
fcomip
inc
jbe
push
popf
cli
cmp
cmc
or
lods
jno
mov
jns
insl
cmp
ret
sahf
pusha
clc
or
repnz
jecxz
cmp
popa
lods
add
outsb
dec
jb
cmpsb
mov
xchg
and
into
in
movsb
inc
jno
addr16
sub
push
xchg
cmp
adc
daa
ret
stos
mov
insb
stos
aad
ror
js
mov
ja
hlt
ljmp
pop
in
lds
into
xlat
pop
insl
adc
addr16
jg
xchg
das
sub
inc
mov
pop
xlat
stos
xor
in
and
leave
flds
cmp
inc
or
adc
mov
mov
jb
mov
in
ja
mov
orl
cmp
ja
fcomip
cwtl
jae
mov
add
loopne
push
fwait
lods
enter
xor
pop
xchg
lret
nop
add
aam
xlat
adc
jae
mov
out
test
sub
mov
xor
push
aaa
mov
dec
pop
cld
out
mov
int3
inc
mov
int3
push
push
das
mov
repz
push
fdivrs
jae
flds
dec
mov
rclb
ret
xor
mov
clc
sub
jb
or
fnstsw
sub
dec
fldenv
or
call
push
cmpsb
shr
imul
in
insl
jp
xor
pop
mov
mov
and
aas
xchg
insl
fs
mov
mov
and
adc
mov
or
fnsave
pop
int3
mov
pop
xchg
insl
and
xchg
out
movsb
mov
dec
pop
push
insl
xchg
aas
xchg
fwait
inc
int3
lods
jge
fdivs
testl
xor
scas
xchg
ljmp
insb
mov
cmp
scas
push
rcrl
mov
rorl
cmp
jno
sub
pop
dec
adc
jmp
jae
sub
mov
xor
test
dec
mov
rorl
jnp
inc
mov
push
stos
dec
cmp
stc
and
repz
sbb
call
add
fwait
mov
add
adc
fnstcw
add
or
aas
mov
repz
adc
sbb
inc
mov
rorl
je
dec
sub
fcmovnb
ret
ret
dec
repnz
push
mov
sub
push
mov
mov
sub
and
cs
jbe
rorb
mov
lcall
add
inc
sbb
test
in
popf
lcall
in
add
cld
scas
pop
push
xchg
in
ss
sub
mov
pusha
nop
mov
ds
mov
dec
mov
les
jo
push
shr
je
pop
cmp
aas
push
idiv
lret
mov
gs
and
es
rorb
lret
divl
jns
clc
mov
jl
sub
cltd
push
mov
lods
lahf
rcl
std
sub
cmpsl
mov
and
aaa
mov
dec
subb
lds
add
add
jge
in
cltd
aad
dec
repnz
int
inc
lods
mov
or
xchg
out
inc
iret
inc
cmp
cmp
xchg
in
push
add
rol
int
test
sub
or
mov
xchg
xchg
pop
std
daa
mov
pop
stc
cmp
xor
jmp
cmp
orb
push
sbb
mov
mov
cli
int
jg
iret
pop
cltd
clc
movsl
mov
mov
sub
lret
aas
jno
jne
fsubs
jo
repz
dec
popl
int
aas
pop
push
imul
popf
pop
cmc
fcompl
sti
repnz
ljmp
push
mov
arpl
mov
jne
sub
xchg
push
push
add
jmp
push
and
in
nop
sbb
icebp
std
cwtl
mov
andnps
push
jnp
in
loope
xchg
mov
xchg
clc
in
mov
fstl
or
out
add
lds
pop
mov
inc
pop
leave
test
pop
add
jo
xor
movsl
std
mov
mull
ds
scas
mov
pop
mov
xor
mov
mov
sbb
and
cmc
filds
mov
sub
mov
jbe
icebp
lock
push
mov
jp
imull
sub
popa
pop
push
cmpb
xchg
adc
xchg
imul
mov
int
fnstsw
in
test
sbb
or
fstpl
sbb
fidivs
lcall
mov
sbb
or
imul
sub
mov
cmp
mov
mov
jae
pop
cmp
movl
subl
popa
sbb
adc
call
test
arpl
push
maskmovq
ffreep
mov
adc
mov
mov
mov
mov
pushl
shl
cs
in
stos
push
lea
std
pop
add
push
mov
mov
inc
aaa
int
jl
insl
gs
dec
daa
pop
push
cmpsl
mov
cli
mov
mov
inc
sbb
fucomip
inc
movsl
imul
push
jmp
sub
mov
pop
aad
adc
mov
pop
sub
jne
test
sbb
sbb
outsl
jg
add
lea
push
cmpsl
imul
nop
out
idiv
push
jne
int
and
imul
or
enter
sub
or
dec
jp
int3
and
push
imul
and
or
test
xchg
test
scas
popf
add
cmpsb
mov
movsb
mov
jle
nop
adc
lds
mov
adc
ret
out
add
or
mov
pusha
imul
pushf
inc
push
cmpsb
loopne
addb
xchg
idivb
lods
aaa
rorb
das
mov
cs
mov
fwait
scas
jg
div
fs
and
stos
adc
scas
jbe
leave
sbb
inc
push
lahf
cli
add
mov
jns
push
dec
ret
rolb
int
pop
cwtl
test
pop
sbb
imul
sbb
testl
mov
adc
pop
add
cmp
mov
lds
push
mov
pop
scas
adc
int
jo
cmp
mov
mov
inc
das
mov
bound
adcb
mov
mov
sub
xor
inc
xor
sbb
sub
push
fstl
sbb
popa
xchg
or
adc
nop
cmp
pop
lock
sahf
inc
sar
out
out
mov
les
loopne
cmp
sbb
dec
stos
push
mov
rcrl
mov
test
mov
ret
test
ss
add
das
loope
scas
loopne
inc
imul
lds
out
outsb
mull
push
mov
hlt
mov
je
pop
sub
jecxz
cs
inc
mov
js
and
jg
loop
sbb
xchg
mov
aam
xchg
jle
insb
jb
addl
das
inc
fsts
push
adc
dec
pop
xor
cmp
add
dec
xlat
cmpsl
mov
aam
and
pop
stos
jnp
adc
push
mov
jl
jno
push
sub
mov
sub
lods
xlat
adcb
push
cmpb
call
repz
test
jnp
notb
mov
mov
sahf
mov
or
sbb
push
adcl
jge
popa
push
rcr
xchg
adc
cmpsl
xchg
icebp
pop
sbb
fstps
stos
das
add
dec
cmp
or
aam
hlt
or
dec
lcall
je
cmp
popf
nop
xor
adc
sbb
xchg
jg
cmpsb
cwtl
out
push
jg
mov
jmp
outsb
sbb
fimull
test
mov
or
jle
insb
push
faddl
or
cmp
rcrb
xor
lahf
outsl
loope
nop
aad
pop
mov
movsb
pop
out
add
cmp
ret
or
movsl
dec
pop
roll
cmpsb
mov
mov
mov
pop
pop
imul
pop
push
aaa
inc
in
sub
mov
in
mov
cmp
sub
ja
into
cmpb
mov
pcmpgtd
int
dec
or
sti
mov
jge
jge
movsb
push
inc
fs
jbe
fists
movl
fs
insb
add
and
mov
daa
iret
out
inc
or
adc
shl
dec
repz
xor
stos
das
cmp
xor
jecxz
pop
popf
je
lods
int3
scas
mov
test
jg
cli
vcvtsi2sdl
and
push
outsb
push
mov
push
pop
sbb
vpmacssdql
loope
getsec
pop
mov
icebp
jnp
xchg
dec
sbb
adc
mov
push
xor
mov
jge
lock
mov
popf
lods
int
dec
xchg
adc
or
in
inc
jne
mov
lret
xchg
mov
push
push
push
push
pop
popf
sbb
in
insb
inc
sub
ja
clc
cmp
or
mov
inc
sub
push
aam
out
push
jb
testl
mov
mov
or
roll
clc
call
mov
cs
fcmovnu
mov
push
jecxz
push
fidivrs
mov
jno
mov
sbb
mov
outsb
inc
mov
dec
push
pop
out
and
clc
adc
fcompl
fadd
jg
sarb
sarb
jno
cmpsb
add
xor
pushl
push
divb
sbb
push
jnp
pusha
cmc
xchg
pop
fdivrs
repnz
jge
xchg
push
mov
loope
sbbl
hlt
add
std
mov
mov
int
pushf
cltd
nop
jo
inc
or
popa
sarl
push
fldenv
and
stos
push
sbb
loop
stos
fdivs
iret
pop
and
dec
pop
push
pop
divl
push
test
sub
sbb
nop
fstp
mov
xor
jecxz
push
pop
jmp
mov
push
es
arpl
test
cmp
notb
adcl
add
adc
loopne
mov
xchg
popa
cmp
adc
inc
je
mov
and
insb
inc
push
clc
adc
pop
jl
mov
cmp
pop
imul
push
and
dec
icebp
sbb
arpl
inc
imul
mov
mov
adcl
push
xchg
inc
mov
jge
addr16
mov
popf
sbb
pop
enter
mov
insb
das
and
jb
xor
mov
and
xchg
repz
lds
inc
jg
cs
aad
xchg
fwait
fwait
mov
popf
mov
push
mov
push
sbb
push
cmc
in
fs
xchg
mov
insl
and
fidivrs
inc
jmp
fdivr
push
call
in
aam
leave
push
mov
xor
add
imul
in
fcompl
jo
inc
pop
dec
inc
mov
dec
repz
xor
push
and
adc
adc
and
or
and
push
lret
out
push
aad
xchg
add
xor
mov
pusha
in
arpl
out
dec
aaa
rcrb
jns
lret
adc
xor
sbb
stos
outsb
add
movsb
jne
cwtl
in
add
rorb
hlt
stos
repz
clc
push
jae
cmpb
inc
cmp
ljmp
shll
adc
gs
call
clc
mov
in
pop
ror
add
lods
in
mov
pop
jae
cmp
add
sub
mov
push
cmpsb
cmp
or
sub
mov
dec
fisubrs
adc
sbb
inc
xchg
cmp
pusha
jno
xor
repz
cmp
push
mov
shl
dec
mov
ss
out
aas
pop
xchg
xchg
loope
or
adc
sub
pop
call
pop
push
xchg
aad
add
cmc
dec
in
movsb
push
mov
sbb
mov
add
sti
int3
mov
mov
inc
dec
mov
enter
mov
and
nop
pop
mov
mull
jae
or
cmp
xlat
mov
clc
ss
inc
rcl
scas
inc
hlt
inc
test
mov
clc
and
lods
dec
aas
sub
and
outsl
add
in
mov
cmp
inc
pop
lock
addr16
outsb
ja
add
imul
mov
mov
add
dec
or
cmpsb
jg
rorl
repz
inc
or
jo
add
jmp
mov
sahf
out
pop
pop
adc
mov
mov
sbb
shll
pop
cmp
addr16
sahf
outsl
test
or
inc
cmpb
adc
inc
sub
lcall
aad
or
xor
cli
xorb
cwtl
out
jno
scas
outsb
mov
leave
xchg
mov
popf
xchg
daa
mov
aas
sbb
jmp
adcl
xor
lret
and
push
push
pop
add
xchg
dec
pushf
push
out
sbb
daa
inc
shr
sub
fstpl
mov
jge
sbb
xor
stos
lea
mov
outsl
dec
cltd
jo
data16
push
cmp
aam
fbstp
mov
push
pop
lcall
pop
mov
pop
xchg
lret
cmp
fsubr
push
pop
adc
popa
mov
leave
pop
mov
fadd
iret
adc
inc
push
ja
bound
in
adc
cld
and
xor
test
inc
sub
sub
outsl
fs
sub
mov
fiadds
add
repz
xor
xchg
jg
inc
lds
hlt
daa
ljmp
decl
pushf
sub
pop
sub
aaa
out
les
push
fisttps
ljmp
test
scas
push
xchg
test
out
push
outsl
add
jno
testl
mov
imul
das
mov
mov
pushf
push
cld
pop
inc
xchg
iret
dec
loope
push
pop
push
ljmp
ret
mov
cli
adc
hlt
addr16
mov
pop
xchg
and
mov
dec
jmp
mov
cmp
popl
popa
std
xchg
inc
mov
jmp
add
xchg
push
repnz
dec
stos
jns
mov
enter
add
rcrl
or
add
mov
jne
lret
clc
sub
in
data16
imul
scas
fnstenv
das
mov
push
stos
push
aas
fs
mov
out
mov
sahf
lods
add
fdivl
sti
neg
and
and
mov
xchg
fsubrl
cmp
mov
lret
lret
arpl
mov
mov
test
inc
mov
sbb
or
add
hlt
adcb
sub
outsb
mov
jno
mov
cld
lcall
push
mov
jno
scas
outsl
icebp
pop
ret
cmp
pop
fs
pop
jge
out
mov
outsl
stos
xchg
push
push
cmp
sub
cmp
jl
push
int
xchg
add
enter
rcll
bnd
jecxz
cmp
jb
mov
cwtl
ds
or
and
adc
push
inc
sub
add
flds
icebp
inc
shll
repnz
test
lods
xor
cmp
fsts
and
cmp
cmp
ret
nop
mov
mov
out
pop
mov
add
lea
in
adc
and
ret
pop
fsave
xlat
lock
lcall
push
icebp
cs
xor
and
xchg
adc
aam
daa
inc
xchg
popf
jmp
push
pop
arpl
outsl
add
jb
out
ficomps
lods
push
mov
mov
shrl
pop
jecxz
mov
pop
cltd
jnp
mov
shl
rclb
xor
jbe
movb
sti
fimuls
mov
push
arpl
call
mov
repnz
in
mov
sarl
mov
push
je
push
dec
and
xor
inc
das
inc
mov
enter
xchg
lds
cmpsl
addr16
jecxz
cmp
cltd
testl
rcrl
jne
jno
adc
add
push
xchg
mov
inc
fiaddl
mov
and
cs
mov
and
addr16
jno
ss
xor
jns
xor
in
xlat
and
sub
xchg
out
mov
mov
mov
xchg
push
pop
pop
lds
push
jne
adc
in
pop
sbb
xchg
ret
xlat
xlat
add
dec
cmp
mov
or
xor
or
jg
push
adc
into
jmp
sbb
sbb
stos
or
xor
sbb
cmp
test
mov
pop
rcll
ja
sbb
cmp
aaa
mov
sbb
test
dec
popf
cs
popw
call
add
rclb
in
push
sub
push
ret
daa
mov
fucomi
add
pop
loope
mov
imul
xlat
movsb
aaa
pop
daa
cmp
popf
nop
mov
inc
xchg
xchg
incb
roll
jmp
push
adc
add
dec
imul
dec
in
cmc
cmp
cmp
or
xor
inc
lds
xchg
fldenv
xchg
mov
pop
add
dec
pop
xor
push
jecxz
jae
cltd
mov
in
pop
negl
movsl
cmpsb
jo
movsl
andl
or
sbb
rcr
and
add
mov
jbe
push
pop
and
shlb
bound
imul
add
add
out
mov
ds
test
push
jno
test
in
adc
lds
into
mov
fs
jo
cltd
sub
mov
aaa
or
jnp
push
jno
nop
sbbl
cmpsw
adc
cld
shlb
bound
adc
jp
imul
into
scas
add
jno
dec
mov
ja
or
jnp
enter
pop
clc
xchg
xchg
das
jl
cmp
push
ret
push
int
lods
push
jnp
and
push
int
mov
and
jmp
sbb
mov
xchg
sar
mov
sub
pop
iret
mov
dec
jp
fstpl
jle
in
movsb
pop
push
mov
cmp
ds
xlat
mov
xchg
ds
mov
es
int
loope
add
mov
clc
cld
fistps
mov
or
stc
xchg
lds
movsb
ljmp
notb
lock
ss
mov
shlb
inc
jbe
divb
iret
sbb
outsb
outsb
loope
inc
adc
mov
ret
mov
mov
outsl
idivb
jno
das
and
lret
ss
cmpsl
ret
subb
xchg
nop
pop
loop
jno
mov
testl
cmp
mov
push
cmpsb
mov
test
jno
sbb
fimull
inc
not
imul
out
mov
jle
pop
dec
xchg
lret
inc
sbb
dec
aad
adc
lcall
jle,pn
mov
mov
jnp
adc
jg
inc
addr16
pusha
sar
xor
cmpsw
test
push
sti
adc
mov
dec
out
or
pop
xor
add
lods
scas
dec
push
mov
cmp
cli
jmp
push
sub
push
int3
in
inc
scas
out
jne
sub
mov
mov
sub
sub
mov
mov
hlt
mov
mov
jae
lahf
out
insl
scas
mov
jns
or
lds
loopne
cwtl
int
movsl
add
enter
in
insl
loope
loop
stos
pop
pushf
push
subb
icebp
test
mov
push
fsubl
cld
enter
movsb
es
stc
mov
cs
cmpsb
sti
fisttpll
or
cs
vpsubq
xor
into
cltd
pop
imul
enter
sbb
pop
sub
mov
outsl
mov
adc
push
cmp
imul
insl
mov
lock
mov
or
js
loop
xor
xchg
pop
shlb
and
jae
out
adc
in
push
int
push
mov
mov
ljmp
ja
mov
out
mov
das
inc
cmpsl
mov
and
mov
adc
cmp
int
add
cmp
pop
movsl
rcll
sarb
cs
std
sbb
pusha
dec
inc
pop
cld
shr
cli
or
sbb
dec
jbe
es
sub
cmpsb
jecxz
cmp
mov
and
pop
pop
outsb
iret
popa
faddp
ds
jecxz
sahf
sbb
mov
and
loop
sbb
in
decl
ljmp
jns,pt
jo
push
mov
pop
ret
or
xor
clc
dec
add
xor
cmp
mov
xchg
pop
sarl
fildll
lcall
stos
loopne
push
and
popa
aaa
lea
movsb
dec
mov
ret
or
mov
xchg
loope
cmpsb
movsb
loopne
sbb
xchg
int3
xor
sub
fsub
pop
pushf
loope
xor
push
shrb
lret
pop
xchg
jmp
dec
mov
mov
lcall
pushf
cmp
sub
mov
xor
iret
push
and
popf
xchg
out
test
adc
data16
dec
les
jnp
int3
shl
ficompl
mov
cmp
pop
sbb
dec
pop
mov
fnstsw
mov
dec
repnz
or
ret
in
ret
xor
adc
shrb
imul
pop
imul
pop
and
and
mov
sti
push
and
fstpl
test
mov
inc
jno
insb
push
or
jecxz
dec
add
mov
adc
fdivrl
jge
xor
in
lds
jmp
sti
mov
cltd
cmpsb
xchg
loopne
movsl
inc
or
shlb
imul
std
dec
ret
fisttps
add
in
imul
lock
push
cs
cmp
sub
sub
fadds
cmp
ror
and
mov
pop
fs
loope
push
pop
in
push
in
push
bound
xor
pop
mov
mov
adc
enter
mov
sbb
mov
lret
cld
es
fbld
lods
sub
jle
lods
pop
shrl
inc
shll
je
push
out
add
jl
idivl
jmp
shlb
inc
xor
cmp
adc
jmp
sub
scas
add
arpl
scas
lods
add
nop
sbb
push
idiv
jg
aas
push
pushf
dec
adc
inc
and
aaa
fpatan
jb
cmpsl
fists
xchg
imul
mov
inc
fimull
pop
test
pop
push
leave
mov
push
mov
pop
xor
lock
test
or
sti
loopw
push
xor
or
ss
dec
push
js
fidivl
sbb
cs
push
push
lcall
lcall
enter
mov
fs
inc
bound
jb
js
and
dec
lods
sbb
loope
int3
pusha
les
mov
enter
sahf
cltd
inc
push
push
adc
jmp
sbb
fiadds
enter
pop
dec
sbbb
pop
sub
call
lret
repz
jl
sbb
cwtl
xor
pusha
mov
fsubs
inc
insl
jp
mov
sbb
data16
cmp
in
pop
mov
les
testb
test
jbe
inc
shlb
fstps
jbe
ja
push
push
add
sub
or
ret
in
mov
push
or
lret
std
leave
sub
add
mov
int3
repz
mov
push
scas
jmp
or
sub
popf
dec
mov
sbb
aam
jne
adc
mov
xchg
mov
add
pop
in
loop
out
int3
hlt
push
cmpsb
pop
push
jae
jno
aaa
jmp
mov
jg
push
mov
add
jns
push
mov
loop
fwait
cmc
js
jmp
jbe
sub
lret
inc
xor
xorl
sbb
lcall
fisubl
aas
and
push
lods
inc
mov
xor
stos
sbb
sti
test
mov
flds
pop
sbb
fwait
in
fs
mov
xor
cmpsb
inc
xlat
nop
addr16
mov
push
push
and
fstpt
push
test
push
push
stos
or
aad
push
dec
loope
jns
mov
sbb
aaa
push
adc
sub
fwait
jg
lods
bound
adc
in
cmp
nop
lds
int3
shr
leave
imul
and
das
add
sub
xor
adc
or
or
sbbb
cmpsb
pusha
sbb
fidivrs
shl
rcrb
loop
jnp
lret
movsl
rcll
add
int
arpl
rcr
sbb
imul
ljmp
jae
rcll
adc
sbb
scas
cltd
xor
sub
rcr
scas
push
cmp
xor
and
dec
xor
ss
jecxz
jns
ds
popf
jb
push
ja
and
jl
movsb
clc
xchg
jo
sahf
fs
clc
add
clc
and
sub
cltd
fucomip
cmpsl
mov
cvtpi2ps
pcmpeqw
scas
dec
stos
mov
pop
test
gs
or
xor
dec
mov
jge
dec
es
adc
aaa
cmp
stc
push
es
pusha
fwait
mov
jmp
rol
mov
fwait
imul
insb
inc
mov
xchg
xchg
push
pop
xchg
repz
dec
xchg
push
in
jae
pop
cmp
push
mov
adc
inc
call
or
or
lods
mov
ds
lret
daa
je
jg
ret
scas
jmp
adc
pop
adc
inc
xlat
push
jns
mov
aaa
jne
sbb
popa
mov
or
dec
adc
pop
xchg
js
cwtl
xchg
mov
stos
neg
or
pop
xor
and
cmpsl
mov
pushf
fwait
push
sbb
cmp
add
imul
adc
adcb
push
jecxz
loope
or
push
mov
stos
arpl
push
ret
xchg
bswap
movsl
loope
cmp
xor
lret
lret
loope
dec
xchg
push
sub
dec
adc
shll
fldl
push
sub
rcr
push
mov
inc
and
ja
jb
scas
jecxz
shrl
cmp
repz
jae
and
cmp
mov
and
iret
push
xorl
xor
push
adc
sti
mov
jns
adc
cmp
mov
jle
mov
xchg
into
cwtl
cmpsl
leave
ret
sbb
loopne
scas
cmp
dec
push
pop
jb
int
inc
mov
test
xchg
ja
aaa
out
cwtl
mov
pop
sub
jle
push
inc
mov
ror
lret
xchg
je
pop
sbb
roll
cmp
stos
or
mov
mov
ret
or
cmpsb
test
lret
roll
fwait
stc
repz
cwtl
xor
outsb
fmuls
stos
rcll
mov
mov
adc
lret
cmp
and
and
xor
imul
adc
divb
push
enter
fwait
and
lock
lcall
insl
mov
lods
test
jns
rol
mov
lret
es
xor
lret
ret
or
or
iret
cmpsl
lea
pop
add
jo
mov
add
mov
ja
insb
into
jge
je
cwtl
jbe
aam
out
mov
or
lock
stc
or
dec
mov
gs
lds
sub
and
add
xchg
dec
push
xor
lret
push
add
imul
pop
and
xchg
and
stc
sahf
or
sbb
push
hlt
imul
sbb
xchg
adc
rclb
cmpsb
add
test
out
lcall
cmp
icebp
add
pop
cs
adc
popf
int
add
popa
into
push
test
inc
mov
mov
sbb
cmpsl
adc
aas
iret
test
test
call
push
or
xor
dec
mov
or
imul
or
xor
adc
shll
push
outsl
je
lahf
ret
inc
lods
xchg
scas
xchg
frstpm(287
shrl
sarl
adc
leave
lahf
add
leave
add
mov
fwait
push
leave
ret
or
xchg
mov
hlt
rclb
dec
cltd
push
into
int3
pop
into
sbbl
add
mov
ds
clc
imul
movsb
mov
jae
or
add
pop
and
jno
mov
loopne
cltd
cmp
mov
clc
ja
push
into
fs
push
lret
adc
data16
in
push
js
sarb
lret
int
pop
jb
lret
cvtpi2ps
inc
add
inc
sub
cmp
out
repz
and
jle
and
xchg
icebp
push
ljmp
pop
sarb
adc
orb
jl
xchg
dec
fimuls
dec
out
imul
pop
loop
cli
add
mov
cmp
dec
cmp
mov
xchg
cld
pop
in
push
dec
push
fcoml
movsl
xchg
outsl
data16
adc
mov
cltd
xabort
mov
inc
aam
das
test
mov
mov
xchg
adc
dec
imul
dec
outsl
test
mov
adc
cmp
xor
jmp
lea
pushf
inc
vpshlq
xor
cmp
jmp
cmp
sub
dec
test
arpl
popf
insl
arpl
test
imul
jbe
push
out
out
cli
fsts
es
int
loopne
out
pop
mov
push
fcmovu
xchg
popa
pop
dec
inc
xchg
out
pop
sub
aas
inc
bound
mov
aaa
nop
int
inc
stos
sbb
mov
jmp
mov
mov
mov
pop
cmpsl
and
nop
xchg
push
popa
repz
sbb
loope
test
jnp
pushf
pop
xor
test
arpl
mov
mull
xor
in
shll
sub
sbb
pop
std
push
or
xchg
outsl
inc
jo
aaa
fs
inc
mov
pop
cli
js
pop
sub
in
xchg
or
xor
lret
xchg
repz
lret
mov
out
dec
or
outsb
aam
repz
imul
jo
into
mov
mov
adc
mov
sbb
cmp
rclb
jb
push
pushf
mov
loope,pt
push
into
mov
mov
lea
fiadds
xchg
adc
pushf
repz
cmpsl
mov
xchg
pop
je
xor
andb
in
mov
sub
in
xchg
jo
loop
sub
inc
sbbl
xor
leave
jge
adc
xor
test
das
inc
inc
sub
push
sbb
push
sub
sbb
icebp
popa
and
cmpsl
ss
jecxz
cli
or
insb
push
outsl
and
rclb
push
ljmp
mov
dec
xor
sbb
add
in
mov
loope
fisttpll
mov
xor
add
ret
pop
dec
xor
jle
pushf
sbb
pop
xchg
loopne
movsb
idivl
cmpsl
xlat
cs
outsb
mov
cmpsb
das
dec
in
dec
cmp
fldenv
fsubrl
int3
mov
mov
pop
sub
add
xlat
cwtl
inc
inc
scas
cwtl
ret
mov
pop
ud2
cmp
pop
mov
movsb
movb
push
or
jne
xor
sbb
mov
mov
sub
das
shlb
inc
pop
fmulp
mov
ret
pusha
xchg
cmp
xchg
test
xor
cld
xor
add
dec
dec
sbb
cmp
fdivrl
outsb
inc
pushf
and
xchg
mov
bound
sub
lret
dec
or
pusha
xlat
add
push
jns
es
adc
hlt
mov
xor
das
pushf
add
adc
test
mov
aam
cltd
pusha
gs
xchg
dec
pop
inc
pop
iret
jbe
fsubl
pop
int3
cwtl
fs
mov
pop
inc
clc
adc
stos
lea
sub
jge
in
xchg
int
addl
out
mov
dec
call
or
pop
out
xor
sub
jne
push
pushf
xor
xchg
sbb
icebp
cmp
inc
fucomi
xor
xchg
pop
jle
aaa
stc
jg
mov
cltd
xchg
xor
cltd
shl
dec
pop
fistpl
cmp
pusha
or
pop
xorb
pop
in
pop
mov
xlat
bound
shrb
push
cs
jno
scas
mov
out
xor
aas
out
notb
scas
and
jno
jle
push
in
fs
pop
cmp
mov
out
mov
sahf
je
pop
inc
xchg
imul
imul
or
fisttpll
cmc
out
pop
sub
shlb
xchg
inc
idivb
jp
push
pushf
je
xor
mov
sbb
or
inc
jno
mov
push
les
fbld
xchg
pop
adc
iret
subb
sti
cli
ss
sahf
out
xor
je
lret
mov
fnstenv
jno
nop
xlat
adc
cmp
loop
js
jnp
stos
adc
ret
fs
pop
jmp
adc
mov
push
fsubrp
fcmovbe
cwtd
ljmp
mov
pushf
mov
mov
fmulp
cmp
popa
add
stos
movsl
ja
xchg
xchg
pusha
into
loopne
mov
adc
jmp
push
dec
xor
or
push
clc
movsb
hlt
insb
sub
aad
out
test
xlat
icebp
divb
add
push
jb
pop
test
mov
jno
inc
ja
lret
lret
popa
push
jne
adc
pop
test
and
jg
out
leave
lahf
and
cmp
pop
cld
aad
push
or
push
ficomps
inc
cwtl
inc
ds
loope
fisubrl
push
add
sti
jp
mov
or
xchg
out
dec
popf
lods
orl
in
outsl
test
inc
test
sub
sub
fnsave
inc
jg
cmpsl
and
stos
into
jbe
and
ret
lea
test
sbbl
cmc
xchg
jne
cmp
add
iret
cmc
cltd
rcrb
mov
pop
pop
clc
fstps
es
push
or
clc
insl
js
cmp
pop
pop
outsb
sub
push
ds
stos
xchg
dec
jns
jg
lcall
push
cmp
test
shll
xlat
js
or
sub
push
or
push
adc
jg
mov
popw
ret
sbbb
mov
or
test
push
cli
cmp
mov
fs
pop
lea
and
jb
ss
xchg
pusha
mov
and
shll
cli
fwait
inc
sbb
outsl
and
ss
jnp
jge
mov
mull
scas
pop
mov
iret
fdivrs
leave
add
in
and
jo
mov
aaa
scas
and
push
out
fmul
jnp
mov
fisttps
rcrl
push
xchg
cmpsb
lcall
push
sarl
and
mov
inc
lds
hlt
sub
out
lea
out
mov
adc
sub
jl
in
and
loope
out
mov
fdivl
divl
arpl
or
inc
or
add
cmp
scas
lret
adc
mov
popf
sti
xor
imul
mov
lret
cld
mov
imul
cmp
pop
push
nop
adc
and
in
pop
das
insb
or
in
lcall
loopne
dec
les
sub
push
push
in
sub
addr16
aaa
leave
gs
push
inc
cmpsb
lahf
lcall
xor
jecxz
je
roll
lock
mov
jns
int
mov
cltd
jne
xchg
xor
xorb
sub
or
pop
in
jecxz
mov
pop
push
push
addps
push
pop
scas
pop
jge
add
or
cmpb
out
push
fwait
or
iret
xor
mov
and
ss
sbb
pushf
cltd
ficoml
dec
outsb
and
inc
shrl
cmp
insl
mov
dec
push
sti
jbe
fstp
and
add
clc
mov
cmpsb
divb
mov
cmp
cwtl
sahf
jbe
stc
sub
cmp
push
mov
out
xchg
push
imul
das
and
pop
je
ljmp
push
and
and
ret
in
cmp
jne
lods
and
icebp
std
push
push
scas
sub
negl
ljmp
int3
mov
mov
push
mov
into
cmp
cmc
inc
pop
and
cmp
aam
push
xchg
jbe
push
sub
jb
imul
or
test
call
jnp
sahf
add
outsb
pop
pop
fldenv
sub
ljmp
jae
addb
cmp
or
sbb
dec
adcb
and
and
fisubl
push
xchg
ljmp
inc
sti
mov
mov
into
dec
jo
int3
lahf
or
lock
inc
push
addr16
dec
mov
or
sbb
mov
popa
test
lods
into
push
insl
cmp
pop
dec
enter
jmp
popf
jbe
xor
shrb
push
daa
cld
adc
bound
cltd
sub
and
or
fdivr
add
pushw
lcall
xor
inc
push
jl
pop
xchg
adc
mov
int
xchg
leave
xor
sbb
ss
pusha
lods
ds
mov
mov
or
mov
insl
xchg
adcl
jmp
push
loop
jae
hlt
jnp
int3
push
pop
push
loopne
inc
shrl
jno
cmp
sub
andl
ficoms
push
jno
jp
push
xor
bound
fidivrs
aam
push
mov
push
sbb
mov
sahf
pop
mov
mov
pop
sbb
mov
fldl
shrb
fsub
add
cwtl
mov
xor
ret
xlat
hlt
xor
repnz
in
es
jns
ret
addr16
pop
pop
sub
mov
and
fucomi
or
xor
outsb
loope
fdivr
jge
inc
sbb
jae
into
jge
inc
mov
sub
jmp
xorl
aaa
mov
pop
mov
push
in
xor
or
or
sbbb
bswap
mov
push
ljmp
lcall
sbb
dec
push
sarb
movsb
pop
sbb
ja
adcb
mov
add
mov
mov
jns
lahf
sbb
cmc
xchg
enter
inc
xor
out
jae
inc
sbb
dec
or
pop
adcl
cmp
mov
stos
and
bound
pop
mov
out
stos
cltd
sbb
add
or
add
in
push
aad
loope
insl
je
jmp
sbb
loop
shl
das
pop
out
rol
aaa
cmp
or
pop
aam
or
in
nop
lret
std
cmp
mov
dec
enter
std
outsb
fmul
mov
fst
popa
aam
pusha
lahf
fnstenv
imul
sub
xchg
test
imul
out
xchg
mov
jno
pusha
adc
dec
add
mov
pop
cmpsl
xor
push
rclb
notb
mov
in
cmp
pushf
and
in
dec
test
int3
popf
inc
push
hlt
pusha
pusha
push
filds
dec
scas
rcrb
sub
in
je
and
ret
cmp
mov
ret
xchg
outsl
data16
mov
hlt
push
xchg
mov
jns
dec
clc
jbe
mov
and
popa
jbe
pop
je
adc
lahf
cmp
scas
jae
adcl
movsl
dec
xorl
frstor
nop
popf
addb
or
add
inc
jge
idiv
pop
ret
or
pop
fwait
jmp
add
jno
pusha
cltd
leave
loopne
jnp
sub
clc
mov
pop
pop
mov
inc
xchg
aas
xlat
clc
fwait
xor
xchg
sub
push
or
push
out
leave
jae
add
inc
lcall
xor
push
jb
mov
pop
mov
mov
dec
clc
cmp
pop
sub
push
jb
push
mov
popf
and
rorl
add
cs
sub
jle
cs
xchg
push
bound
aad
mov
aad
jmp
sub
inc
pop
es
orl
cld
imul
outsl
mov
and
dec
movsb
xor
and
cmp
cmpsb
push
inc
lret
xchg
mov
add
inc
shr
xchg
mov
xor
shll
addr16
jmp
test
or
mov
pop
pop
or
inc
imul
jg
cmp
insl
hlt
jecxz
lods
mov
sarb
jo
push
mov
call
mov
sub
mov
pop
pop
sbb
inc
adc
rorb
clc
adc
mov
sbb
gs
mov
in
inc
lahf
lahf
mov
push
dec
outsl
fsubrs
ja
push
push
test
push
xchg
sbb
pushf
in
test
movsl
pop
aam
add
cwtl
loope
adc
pop
cs
movsl
ror
mov
xor
jle
adc
jecxz,pt
ds
cli
jns
jae
pop
popf
adc
push
adc
push
call
push
xchg
out
dec
and
sbb
movsb
xorl
or
jb
cmpb
mov
ret
scas
int3
pop
sbb
jl
aam
aaa
lods
int
xor
xor
and
or
mov
mov
ja
inc
and
fs
xor
loopne
mov
push
scas
ja
les
fidivl
cmp
jmp
mov
adc
js
mov
pusha
sbb
in
and
sbb
jle
das
data16
and
fnsave
filds
test
or
dec
push
mov
ffreep
pop
jmp
mov
repz
in
in
lcall
push
mov
push
fcoms
mov
mov
inc
inc
mov
mov
aas
xor
pop
push
mov
faddl
push
iret
ja
std
fsts
outsl
cmc
cmpsl
adc
lock
jp
fs
adc
push
jno
push
xchg
add
in
cmp
imul
push
aaa
push
pop
pop
mov
sbb
mov
popf
daa
add
jbe
dec
repnz
nop
fstps
cmp
fwait
push
xchg
mov
mov
fisubrl
fsubs
cmp
cmc
leave
addb
and
jae
jge
imul
les
adc
in
mov
es
xchg
lea
and
es
ds
or
inc
sub
test
sbb
js
cmpsb
imul
or
sub
mov
xor
test
mov
rcrb
xchg
rcll
xorl
sub
jle
inc
mov
lret
mov
gs
cmpsb
repz
jl
pushf
cmp
fwait
outsl
and
loope
cmpsl
pop
fiaddl
sbb
repnz
dec
cmpb
mov
sub
adc
stc
jnp
dec
rcrb
inc
add
data16
aad
inc
test
bnd
jle
lcall
movsl
frstor
sbbl
push
das
jecxz
ljmp
ss
fcomps
fbstp
jbe
pop
adc
jnp
lret
lret
stos
pushl
cltd
cmp
jl
loopne
mov
dec
pusha
sub
mov
and
xor
ficompl
aam
movsl
outsb
pop
insl
xor
cwtl
js
jmp
xor
scas
loop
fs
lock
xchg
out
addr16
pop
stc
lods
add
je
fdivrs
cmp
mov
js
sub
mov
push
das
mov
inc
inc
repnz
fcomp
push
jns
outsb
leave
jnp
inc
pop
xchg
movsb
jecxz
sbb
push
fwait
mov
fdiv
sahf
and
and
iret
mov
dec
xchg
or
loop
cmpsb
inc
or
inc
test
jb
out
cmp
adc
mov
sub
inc
sbb
pusha
inc
sahf
movsb
rolb
jge
ffree
nop
inc
popf
adc
cmp
gs
in
jge
xor
icebp
and
outsl
ds
xchg
ja
mov
push
mov
je
pop
mov
sub
xor
and
or
test
negb
xlat
jae
add
and
inc
in
insl
fwait
jg
shrl
push
pop
mov
iret
and
add
push
ret
rolb
pop
in
aas
sub
sti
bound
cs
jbe
sbb
pop
test
jae
jle
test
push
cmp
mov
insl
mov
dec
pushf
push
fisubl
mov
xchg
insl
or
ss
push
int3
xlat
popf
mov
jo
repz
loop
mov
cltd
jnp
cld
leave
iret
rclb
and
rorl
pop
pushf
push
movsb
push
lock
fdivl
inc
fmuls
repnz
out
xchg
sub
mov
sub
jge
repz
cmp
pop
adc
ficoml
mul
sub
out
dec
adc
inc
cmpsl
and
scas
mov
sub
xchg
pusha
movsb
scas
scas
mov
std
dec
push
leave
roll
push
cmpsb
cwtl
and
add
inc
mov
movsl
or
mov
adc
lock
mov
lods
and
pop
push
clc
pop
out
icebp
push
iret
jne
mov
in
mov
insb
pop
cmp
jno
jg
push
aaa
lods
xlat
fs
xchg
mov
and
mov
dec
pop
stc
aam
loop
scas
ja
xor
fistpl
push
dec
and
add
out
pop
hlt
movsl
sbb
xor
mov
ret
xchg
imul
shr
incl
enter
les
ffreep
and
mov
movl
inc
int
stos
sbb
pop
jp
lret
repnz
in
jg
adc
out
cmp
inc
lahf
jns
and
sbb
sub
movsb
mov
and
andb
dec
mov
push
xchg
les
mov
scas
cmc
or
pushf
dec
and
xchg
pop
outsl
out
addr16
adc
cs
fisttps
jnp
icebp
mov
js
in
popf
or
xchg
cli
nop
lods
xor
es
adc
mov
data16
mov
test
dec
fnstsw
mov
push
or
lds
jl
push
sbb
mov
icebp
inc
fistps
xchg
xor
es
cmpsb
lods
jne
scas
push
repz
pusha
iret
mov
xchg
lret
lahf
push
sarl
inc
jl
mov
int
loope
jecxz
mov
popf
daa
sbb
scas
aad
xor
mov
pop
shl
push
sbb
push
cmp
fs
jb
sub
sbb
inc
sbb
test
mov
aas
push
push
dec
mov
ljmp
mov
cmpb
push
xchg
adc
lock
mov
dec
shrl
test
sbb
mov
rcr
pop
sbb
sub
inc
aad
dec
mov
xchg
or
cld
adc
sbb
lcall
jns
xor
les
mov
es
test
int3
rorl
add
jno
insl
inc
add
cmp
jns
push
sbb
das
ljmp
in
sub
xor
fcmovu
mov
daa
ljmp
push
dec
xchg
cmp
gs
fidivrs
cld
sarb
mov
push
lock
in
cmpb
push
jbe
fwait
daa
dec
cmp
mov
sbb
lea
out
add
sub
adc
movsl
jg
mov
xchg
dec
inc
dec
shrb
jmp
inc
inc
ss
xchg
sub
lds
mov
out
adc
xorl
and
xor
mov
inc
xchg
shl
adc
pop
cs
ljmp
sbb
push
lret
inc
dec
insb
mov
adc
sbb
cmc
out
jl
ja
sbb
push
jne
test
cli
and
aad
fsubrp
out
mov
fwait
cmp
sbb
or
cmp
mov
mov
imul
fcom
xor
sub
lock
cmp
stc
pop
inc
add
test
jle
adcb
sti
loopne
cld
rcll
add
sub
cmpb
add
xor
push
in
andl
subl
dec
test
lods
flds
cmp
adc
ret
pop
mov
xchg
sub
stos
xor
or
out
xor
stc
sub
lahf
clc
data16
popa
inc
add
push
adc
dec
cmpsb
int
bound
out
ret
xlat
arpl
arpl
ja
subb
jne
sbb
js
int
dec
push
dec
aad
je
xor
jle
pop
xor
les
iret
sahf
std
scas
xor
and
sbb
jbe
or
outsb
pop
and
mov
xchg
popa
bound
xlat
outsl
or
mov
xor
cltd
push
movsb
xchg
adc
and
daa
cli
jle
push
adc
or
fiaddl
nop
ja
cmp
int3
sahf
xor
imul
xor
aam
sub
sbb
or
sub
aad
loopne
push
jp
stc
and
xor
imul
sbb
enter
inc
mov
aam
jg
imul
sbbl
enter
pop
mov
add
mov
mov
mov
mov
add
fwait
or
add
push
cmpb
push
mov
jle
test
mov
orb
dec
inc
cmpsb
fidivs
push
jb
sbb
inc
test
adc
std
inc
rorl
and
mov
mov
fwait
orl
jbe
daa
cmc
mov
jae
lods
data16
call
jle
lret
es
cmp
dec
jb
lock
and
sub
sbb
mov
mov
and
pop
imul
sbb
jmp
push
ret
ret
fisttps
dec
out
or
int3
jle
sbb
sbb
orl
cmc
insb
jmp
test
mov
jns
leave
out
loop
cwtl
shll
pop
mov
lret
push
insb
jne
mov
pop
xor
dec
jle
mov
cmpsb
repnz
enterw
xchg
out
adc
sub
xor
aas
nop
lahf
pop
or
xchg
or
push
das
push
aad
sbb
pop
or
in
scas
jge
jge
or
les
push
xor
cmpl
sbb
pop
ds
shr
push
jbe
iret
mov
mov
dec
jle
ds
fcoms
pop
or
cmc
addl
imull
nop
cmp
xorb
ja
mov
das
adc
andl
sbb
aas
sti
fistps
mov
movd
jb
pop
pop
mov
sub
mov
fimuls
lahf
lret
test
sbb
and
lds
cmp
sar
aaa
or
xlat
mov
rol
dec
or
add
mov
xor
sbb
inc
insb
sbb
mov
jae
lds
xchg
adc
add
lret
in
push
ret
es
push
movsb
xor
hlt
dec
lds
int3
push
and
or
jecxz
mov
add
adc
pop
lret
pop
lahf
adc
movsl
cli
repnz
mov
push
outsb
adc
pop
xor
dec
and
fisubrs
sbb
addb
mov
aad
inc
mov
pop
mov
cs
shl
xchg
jae
insl
popf
movsb
sar
cmpsb
mov
or
ljmp
mov
fdivs
sar
jo
fldt
cwtl
lds
ljmp
cmp
lret
enter
jmp
push
incl
and
lcall
stc
stos
ret
or
test
jle
dec
sbb
push
je
dec
sarl
daa
adc
pop
out
pop
fs
in
pop
xlat
icebp
jl
xchg
insb
push
negb
loope
mov
or
push
xchg
stc
cld
mov
sarl
push
or
dec
scas
rcl
es
adc
mov
je
dec
cli
xor
mov
push
pop
add
jp
enter
aad
cld
mov
dec
mov
das
fimuls
dec
mov
adc
cmp
xchg
xchg
loop
mov
mov
cmp
push
pushf
loopne
aam
gs
mov
sbb
leave
pop
cld
dec
add
xchg
jae
mov
inc
adc
push
sub
xlat
push
imul
pop
inc
mov
mov
and
rcrl
add
enter
sti
fstps
ss
clc
insb
jno
cmp
mov
push
lods
sub
pop
inc
push
mov
test
xor
in
nop
sbb
pop
mov
jl
test
jmp
into
adc
hlt
lahf
or
sub
fmuls
mov
loope
mov
jmp
pop
cli
add
add
pop
orl
xchg
repz
xor
push
cmc
mov
jae
ljmp
dec
testb
das
lea
js
sbb
repnz
int3
lret
xlat
movsb
jg
push
rorb
outsb
inc
ret
mov
inc
cmp
sub
in
cs
mov
sub
sub
sahf
aam
stos
nop
pop
sub
jo
shrb
pop
sbb
test
jle
cli
shrl
inc
or
scas
lahf
adc
out
mov
das
inc
pop
jae
std
mov
push
outsl
sbb
inc
adc
jne
adc
shrb
in
das
shr
pop
mov
mov
sub
xlat
sbbb
xchg
in
mov
xor
mov
push
subl
pop
pop
cmpsl
adc
scas
es
insb
test
dec
in
pop
test
imul
aad
fstps
mov
cmp
xchg
xor
jmp
mov
test
daa
ljmp
adc
pop
pop
and
sub
pusha
add
or
push
mov
outsb
xor
sbb
popa
sub
push
dec
fiadds
popa
data16
push
sub
cwtl
popa
shrl
fiaddl
jo
lahf
stc
pusha
call
mov
lock
cmp
jl
pop
subl
lds
push
sub
lods
loopne
xor
test
fistl
ds
das
add
inc
inc
sub
or
or
dec
fcoml
and
out
dec
aad
ret
mov
rcrb
std
out
jbe
das
jg
popa
pop
or
jno
and
dec
mov
sub
iret
pop
faddl
inc
out
xchg
sub
pop
test
sub
mov
pop
je
jl
xchg
aaa
fnsave
jmp
fdivs
push
push
push
stos
cmpsl
mov
mov
cmpb
mov
push
pop
sub
push
mov
xor
dec
bound
dec
adc
pop
mov
aad
and
inc
or
add
subb
mov
xlat
sbb
and
out
or
and
mov
jno
and
cmp
sbb
cmpsb
dec
pop
jge
daa
add
loope
filds
push
jae
loop
inc
cmp
out
xor
outsl
lcall
ljmp
fadd
push
cmpsb
pushf
arpl
inc
dec
popf
mov
fldln2
or
cli
cmp
push
pusha
sub
cmp
sub
jbe
shr
jne
xchg
repz
fwait
mov
daa
sbb
mov
retw
ljmp
bound
push
adc
sub
xlat
jo
mov
in
loope
cmp
repz
mov
out
sar
and
cmpsl
addr16
or
enter
out
iret
ret
dec
add
ljmp
dec
fs
mov
in
and
jnp
std
add
int
push
cmpl
das
fimull
ja
jle
insl
das
outsl
inc
inc
mov
stc
inc
movsb
data16
xor
stos
mov
mov
pushf
test
stos
xlat
cmp
cmc
dec
gs
cmpsb
xor
enter
push
xor
and
pop
pop
mov
hlt
jno
sub
ds
xchg
sbb
mov
xorl
sub
cmp
std
nop
xor
sub
xchg
adc
mov
arpl
cmp
lods
push
fnstenv
cmp
ljmp
sub
jb
mov
scas
std
int3
mov
cmp
jbe
aaa
int3
mov
aam
jne
test
repnz
mov
fdivr
testb
cli
sbb
jle
sub
dec
data16
into
into
test
jb
dec
popf
mov
inc
adc
xchg
popa
aad
jnp
jo
test
scas
out
loopne
out
xchg
daa
jbe
into
dec
test
adc
cmp
xor
sti
out
stos
adc
shrl
pop
mov
push
cmp
xchg
ja
add
nop
xlat
pushf
jnp
xchg
dec
inc
push
js
push
lret
mov
mov
outsl
cwtl
aaa
scas
add
pop
and
bound
jecxz
push
sti
loope
sub
in
mov
addr16
aaa
push
lods
mov
xor
and
mov
aam
sub
inc
fs
jno
loopne
adc
and
addb
mov
out
pop
mov
ja
je
push
push
addb
shl
lcall
les
fisubrs
sti
cmpl
push
cmp
pop
push
jns
sbb
repnz
dec
int
jmp
jo
aas
ret
subl
push
sbb
add
mov
gs
icebp
push
outsb
cmp
xor
mov
pop
sub
rcr
clc
lahf
xor
xchg
sbb
stos
xchg
or
push
imul
inc
and
jl
gs
fisttps
or
and
mov
imul
cltd
nop
iret
ds
subb
lods
subb
test
pop
sbb
and
aad
and
jne
mov
jle
repnz
loope
push
int
add
lcall
fcompl
idiv
ficoms
fwait
jmp
iret
lods
jle
pop
aas
mov
xlat
or
out
mov
lahf
fstl
sbb
lods
jb,pt
and
das
mov
enter
in
jecxz
dec
jge
push
adc
and
inc
inc
dec
mov
push
loopne
int3
mov
jge
sub
or
or
out
nop
lret
push
jl
sti
xor
aaa
popa
push
cmp
xor
ret
pusha
add
jmp
ljmp
jmp
push
aad
mov
scas
mov
aas
sub
jl
jno
shrb
mov
test
sub
dec
rcrl
lock
jle
jne
push
flds
sahf
popa
add
in
mov
leave
incl
jne
mov
rolb
mov
das
jb
loope
rcrl
in
jae
dec
jmp
add
clc
adc
push
sbb
mov
xor
dec
add
mov
test
adc
inc
xlat
lods
xchg
push
push
ret
rcrl
psrlq
popa
push
fidivrs
decl
nop
xchg
adc
aam
jle
sub
in
shlb
inc
sbb
movsb
lea
repz
push
pusha
hlt
loope
out
ds
and
sbb
lahf
xchg
data16
sub
pop
dec
iret
mov
cwtl
mov
cwtl
fisttpl
ja
and
adc
inc
test
push
adc
inc
dec
pop
popf
test
pop
fstpl
push
jns
std
mov
pusha
lods
imul
mov
xor
bound
sbb
jp
jae
fstl
ss
xchg
cmpsb
push
jle
jle
add
ss
pusha
sbb
mov
sbb
in
push
mov
cltd
push
sbbb
sbb
stos
pop
xor
xor
sbb
sub
cmp
pop
mov
ret
stc
add
add
lock
ror
loop
mov
push
dec
cmp
pop
cwtl
or
jecxz
int
add
push
mov
pop
mov
test
rorb
push
pop
das
push
cmpsl
scas
cmp
mov
pusha
cwtl
inc
or
jo
rcll
cltd
out
mov
or
dec
iret
xchg
mov
arpl
repnz
push
inc
add
jae
das
cmpb
mov
jg
push
jnp
imul
fcom
movsl
les
andl
mov
push
imulb
push
aaa
lea
inc
xor
fcmovbe
lcall
aad
adc
xchg
loopne
adc
ror
xchg
adc
cmp
add
sub
movb
xchg
andb
fnstsw
and
dec
jno
cmp
andl
out
jmp
stos
ljmp
xor
inc
cmp
orl
insl
add
repnz
out
jge
arpl
cmp
sarb
jmp
mov
sub
int
loop
pop
cltd
int
pop
test
add
int
lods
cmp
stos
pop
pop
fs
out
ds
add
lds
ljmp
shrb
add
mov
jo
mov
out
inc
std
mov
pop
rolb
and
bound
push
mov
scas
pusha
je
andl
adc
cmpsb
lea
into
mov
movl
scas
test
mov
sti
add
push
pop
mov
push
int
cmp
push
adc
jne
outsb
outsl
xor
fisttpl
cmp
pop
pop
sbb
test
cmp
lahf
pop
das
pop
mov
mov
inc
adcb
pop
add
mov
jmp
mov
xor
cmp
cmp
cmp
lods
icebp
scas
lret
cmc
mov
repz
jp
das
lock
loop
shll
sbb
fldt
sbb
mov
dec
sbb
add
dec
and
int3
sbb
es
mov
stos
les
mov
test
add
shll
fstps
sbb
jle
in
jp
lds
cltd
ret
leave
dec
shrb
or
inc
inc
inc
jnp
push
dec
add
mov
push
xchg
out
pop
mov
inc
ret
mov
mov
mov
outsl
sti
sub
cwtl
mov
lcall
push
les
outsb
popf
sbb
mov
mov
cvttps2pi
or
mov
adc
ficomps
and
jmp
neg
push
dec
cmp
xchg
aad
jmp
or
ds
andl
xchg
mov
and
jg
gs
frstor
mov
ficompl
inc
aad
rorl
pop
data16
mov
ret
jbe
jp
adc
jmp
jo
sahf
sbb
mov
inc
arpl
adc
into
outsl
es
mov
jmp
test
insl
inc
mov
std
mov
cmpsb
ret
in
addr16
lock
shlb
mov
dec
xor
pop
rorb
nop
loopne
out
cmp
enter
jmp
ss
mov
jbe
imul
mov
sti
pusha
ret
into
test
notb
lret
mov
fstpt
ss
in
lods
mov
incl
jbe
push
mov
aad
pop
push
push
mov
dec
push
inc
mov
out
lahf
mov
subb
mov
add
mov
addb
push
mov
decb
rcll
loopne
lahf
jno
xchg
mov
hlt
adc
lods
push
setns
clc
data16
push
fcmovnb
jnp
push
mov
lcall
cmpb
int
and
outsb
js
xchg
and
mov
jne
jl
mov
or
es
or
fsubrl
push
cmp
movsb
sbb
repz
aaa
push
dec
fmul
adc
cmp
aas
icebp
aas
sub
ss
push
jnp
push
xlat
inc
mov
pop
enter
lcall
lock
lret
adc
cmp
dec
sbb
js
pop
sbbb
push
movsb
pop
jl
and
mov
adc
daa
js
jl
mov
jp
ret
mull
push
pop
push
std
in
in
mov
xchg
cmc
sub
fcoml
add
or
pop
push
sub
mov
jne
fs
pusha
and
rorl
call
int3
jge
xor
mov
addps
je
iret
dec
add
mov
xor
enter
in
cltd
jp
mov
sbb
mov
cmp
int
jo
lods
lods
push
cmp
pop
jp
mov
xlat
push
test
jae
clc
fs
pop
andl
xchg
fdivs
pop
mov
mov
push
stc
dec
inc
adc
pop
enter
add
adc
mov
into
fwait
out
mov
sbb
jbe
fildll
shll
repz
shlb
imulb
pop
test
pop
ret
sub
mov
insl
inc
jg
mov
int
test
adc
imul
out
cmp
push
sbb
pop
shlb
mov
test
mov
scas
mulb
mov
fisttpll
xchg
fistpl
fsubrl
stc
xor
adc
dec
cltd
test
push
inc
rolb
bound
mov
stos
mov
pop
inc
inc
aad
mov
sub
add
je
xor
ljmp
outsb
push
inc
push
movsl
insb
pop
aad
test
ds
add
adcl
je
lahf
jbe
mov
jge
xchg
inc
aam
clc
add
ret
in
push
mov
flds
xchg
pop
cld
cmpb
push
lds
loope
mov
xor
adc
lock
dec
out
test
mov
cmp
rclb
jecxz
add
mov
dec
jbe
sbb
jle
outsl
insl
aad
stos
jnp
xchg
lods
pop
pusha
xchg
or
add
mov
int
pop
xchg
sbb
and
imul
cmp
add
or
mov
lock
test
les
add
xorw
xor
cmp
test
dec
xchg
in
lods
mov
jp
adc
and
jae
jns
adc
pop
shll
cmpsb
and
cmc
add
jmp
popf
adc
push
cmpsl
stos
add
cltd
das
push
cli
call
mov
les
xor
fnstcw
jl
test
movsb
fnstcw
inc
loope
cmp
sub
mov
mov
in
das
dec
xor
icebp
push
inc
mov
in
mov
rcrb
dec
pop
pop
mov
ja
push
jle
mov
out
sbb
popa
popf
insl
int3
rcrl
jg
stos
add
jl
lea
mov
iret
sbbl
adc
test
inc
retw
insl
cwtl
lods
xchg
out
sbb
int3
mov
je
mov
fwait
dec
shl
xchg
xor
rcrl
ja
in
arpl
adc
scas
add
ret
pusha
adc
insb
push
std
out
and
nop
pusha
gs
mov
push
andl
mov
hlt
push
mov
inc
pop
es
fwait
dec
adc
shll
aam
jo
lds
push
into
xchg
scas
fs
out
mov
into
test
lret
pushf
ss
fwait
sbb
jp
pop
adc
and
sbb
mov
rolb
subb
shll
or
lahf
push
xchg
jb
repz
subl
rep
cli
sti
popf
xor
pop
lret
mov
add
frstor
lahf
push
cmp
cmp
dec
shr
jno
subb
add
scas
mov
dec
add
mov
or
gs
jne
lahf
cltd
jno
test
andl
push
sub
mov
or
push
or
adc
xchg
lahf
and
stos
cmp
stos
pop
and
dec
add
notl
inc
dec
mov
dec
add
scas
or
leave
nop
jmp
adc
arpl
adc
add
addl
movsb
cmc
xor
dec
mov
mov
jecxz
ljmp
mov
mov
lock
daa
push
mov
xor
mov
iret
pop
add
leave
xchg
ja
lds
push
das
fmul
cmp
out
dec
dec
hlt
push
cmp
mov
testb
inc
mov
jbe
ror
stc
stos
fs
xchg
imulb
push
dec
in
dec
scas
jg
cmpsb
cs
push
cs
ja
in
mov
pop
aad
xchg
xchg
push
ficompl
cltd
or
jo
aas
pop
inc
std
movsl
and
popw
out
mov
add
mov
je
icebp
mov
rorb
push
dec
push
les
xor
pushf
mov
adc
xor
ljmp
and
es
shl
hlt
test
aaa
push
push
cmp
push
add
orb
add
test
std
push
adc
dec
ret
iret
sub
pop
push
insb
adc
jnp
mov
das
insb
aaa
into
and
ret
pusha
sbb
jbe
mov
je
test
data16
faddl
lods
push
xor
movsl
mov
cmp
test
das
movsb
aam
jbe
mov
ljmp
cmp
rcl
nop
es
adc
gs
stc
xlat
outsl
out
push
push
mov
shrb
jecxz
xor
int3
lahf
mov
dec
imul
mov
cmp
pop
andl
mov
fldenv
push
cld
cmpsb
mov
xlat
iret
xor
cltd
jecxz
add
mov
fists
and
subb
scas
shr
or
push
sub
insl
cli
fsubp
dec
testb
and
pop
ss
aaa
je
mov
sbb
cli
sbbb
add
mov
dec
xchg
adc
pop
pop
mov
mov
subl
sbb
fwait
int
dec
pop
inc
push
mov
push
mov
add
in
pop
inc
lods
insb
push
dec
cs
jno
arpl
add
enter
jmp
or
call
pop
pop
insl
mov
dec
cmc
aad
andb
cmp
insl
xchg
or
pop
incl
sub
jl
mov
mov
cmp
lds
fyl2xp1
shrb
mov
test
mov
and
jmp
jne
sbb
mov
add
mov
aas
dec
cmp
hlt
mov
inc
out
shll
inc
mov
fldenv
fldcw
sub
icebp
mov
or
cs
outsb
jp
in
mov
addb
lods
addb
cmpsl
add
aas
add
dec
stc
jl
xor
adc
mov
push
movb
mov
cld
dec
fidivs
jne
mov
ljmp
xor
cmp
sub
leave
enter
repz
fidivrl
jo
jo
adc
xchg
dec
jg
push
xor
ret
cmp
lods
into
sub
pop
pushf
xchg
jo
ljmp
pop
mov
fdivr
sbb
jo
out
movsb
jbe
jecxz
stos
sbb
in
fcmove
add
sub
lea
mov
sub
jbe
pop
xor
dec
out
cmp
xchg
sahf
movsl
pusha
jp
into
jmp
cwtl
loop
inc
mov
cld
dec
sub
dec
pop
push
repz
jns
addr16
mov
lcall
lret
sbb
lcall
insb
ljmp
dec
decl
push
and
sbb
mov
and
adc
les
push
push
xchg
cmpl
mov
mov
jne
cmc
pop
les
ljmp
fidivl
sub
ret
ficoms
lret
add
enter
jae
xor
outsb
xor
jge
lahf
pop
icebp
pop
and
dec
icebp
ja
sub
test
and
or
sbb
shr
enter
ret
shlb
into
xchg
inc
pushfw
je
xchg
mov
sbb
inc
rcll
lret
cld
mov
xchg
notl
sbb
mov
in
jbe
sar
pop
lock
cmp
adc
loopne
push
and
out
aas
add
test
mov
sbb
outsl
xor
stos
mov
rclb
jno
dec
test
and
mov
jmp
jbe
out
pop
mov
cld
ds
inc
cmpsl
test
out
add
fmul
push
add
or
cmp
xlat
and
mov
or
mov
sub
pop
fcmovb
cmp
stc
scas
mov
xor
dec
jmp
pop
shlb
les
insl
fsubrs
xor
sub
lcall
test
lods
push
lock
inc
dec
push
mov
inc
xor
nop
xor
scas
or
test
hlt
shlb
xchg
cwtl
pop
sbb
pusha
aas
icebp
test
neg
jmp
push
mov
inc
jge
pop
rcll
movaps
enter
mov
or
mov
pushf
cmp
jb
call
lock
mov
arpl
xchg
jecxz
adc
or
jge
popl
xor
pop
pop
call
jl
xchg
pcmpeqw
das
std
imul
ret
icebp
inc
xsha1
cmpsb
into
xchg
xor
js
call
add
test
repnz
daa
clc
ror
imul
insb
mov
ret
fs
enter
sub
cmp
rolb
aaa
mov
sub
mov
out
aaa
push
mov
sub
mov
lock
and
pop
mov
lcall
and
cmp
push
mov
lds
test
dec
call
nop
popa
jb
push
and
cwtl
and
sub
jecxz
out
aas
fldl
mov
adc
mov
dec
push
in
jne
sahf
idiv
and
sbb
cli
xor
jno
sub
dec
outsb
mov
push
adc
mov
dec
xchg
mov
ja
je
add
dec
jb
inc
imul
mov
xchg
daa
movsl
repnz
push
fs
mov
sahf
lock
hlt
or
xlat
and
adc
sbb
icebp
lret
pop
jle
pushf
inc
xchg
out
push
pusha
push
inc
push
cmc
xchg
pop
cmp
jne
loopne
jg
xor
in
int3
xchg
cmp
push
push
enter
adc
push
inc
repnz
sbb
in
bound
scas
mov
sbb
pushf
arpl
pop
enter
push
sbb
data16
push
movsl
fmulp
push
loopne
mov
push
inc
aaa
adc
jno
mov
in
mov
das
int
ds
bound
repz
mov
lods
imul
sbb
dec
add
popf
dec
inc
xor
jmp
mov
subl
push
inc
insb
push
in
addr16
cli
fstp
jb
sub
pop
sub
je
and
int
xor
lea
push
sahf
add
leave
shll
rorl
ljmp
pushf
cwtl
adc
sub
aad
and
mov
adc
fdivs
pop
mov
aam
sub
mov
and
push
add
pop
mov
dec
mov
dec
pop
jp
rolb
push
in
popl
mov
jge
repnz
mov
mov
loop
mov
mov
inc
jnp
fcmovu
xchg
xchg
iret
sbb
les
pop
lret
frstor
mov
push
xchg
jo
cmp
xchg
cmp
subb
in
fisubrs
add
js
iret
addb
ret
xor
lret
repz
push
dec
xchg
adc
dec
outsl
xchg
xchg
fmull
test
push
rcrl
fsubrp
sbb
imul
in
dec
add
xchg
sub
pop
push
mov
mov
insl
adc
repz
dec
add
cwtl
inc
fistps
sbb
adc
imul
stos
push
mov
movsl
pop
and
in
in
std
push
in
jne
jg
out
add
repnz
or
andl
xor
xchg
dec
fildll
dec
lods
lret
push
cli
or
rol
jae
cmpsb
test
jg
mov
jns
and
lret
out
int3
jge
push
loop
cmp
les
rclb
cmpsl
xchg
decb
sub
test
loope
add
xor
lret
mov
les
mov
js
repnz
lea
cmp
cmp
dec
test
adc
xor
das
test
adc
jbe
sbb
dec
pushf
xchg
adc
sbb
cli
push
mov
out
syscall
lds
outsl
in
scas
pushf
and
or
jge
loopne
jg
or
jecxz
rcrl
and
mov
js
dec
shlb
rcrl
jg
int3
ss
inc
stos
dec
mov
aaa
jb
cld
xchg
test
or
insb
loope
dec
sub
dec
imul
jnp
push
or
lock
mov
pop
cwtl
js
decl
out
aaa
mov
xchg
scas
les
sbb
jb
aad
pop
cmp
icebp
pop
inc
cmp
mov
xchg
sbb
mov
movsl
dec
xor
fistl
ret
in
jp
push
das
aad
das
mov
insl
cmpsl
ret
je
pushf
push
movsb
jne
int
inc
shll
xchg
lret
pushf
cs
cmp
mov
loop
mov
cmp
mov
cmc
push
popf
in
sahf
push
cmp
pop
and
enter
sbb
pushf
out
fidivl
mov
mov
pop
addb
fs
cmp
nop
add
test
cltd
std
push
stos
incl
int3
sbb
rol
xor
call
movsl
pop
jo
dec
push
in
imul
sti
out
inc
xchg
mov
sub
les
fcom
mov
outsb
sarl
jb
push
fs
xchg
aas
pop
jbe
dec
mov
add
mov
add
and
ds
pop
push
jmp
mov
cli
push
lret
movsl
xorl
jbe
or
leave
dec
lea
aad
scas
add
mov
push
movsb
mov
pop
push
sub
add
jnp
or
fstl
xchg
mov
fdivrl
xor
xor
cmpsl
aam
call
sbbl
push
mov
cmp
sarl
test
lcall
mov
outsl
lahf
cmpsb
add
mov
cld
pushf
test
jge
dec
test
subb
out
push
pushf
sub
adc
lods
mov
xchg
sti
xor
mov
xor
hlt
lods
mov
jnp
rorb
shll
inc
bnd
push
aaa
mov
mov
outsl
inc
dec
mov
push
es
xchg
jne
mov
push
push
movsb
mov
push
mov
ret
lahf
inc
or
sbb
ret
shl
pushf
hlt
out
lret
rorb
std
sbb
ja
enter
out
int3
sub
les
and
sub
aaa
pop
ror
out
mov
pop
clc
sub
mov
mov
ret
inc
outsb
xlat
sbb
adc
cmc
call
xchg
pop
stos
inc
push
pop
add
push
pop
push
test
adc
out
sti
inc
ljmp
jae
cli
bound
and
xlat
jnp
mov
cmpb
pop
xchg
xor
mov
and
sti
push
loopne
inc
push
push
roll
mov
cmp
ds
pop
xor
test
in
es
xchg
pop
sbb
dec
fbstp
sub
mov
jmp
pop
xor
arpl
adc
push
push
mov
loop
jns
inc
jnp
ret
roll
cwtl
loopne
mov
out
cld
out
pop
lock
adc
pop
pop
pminub
inc
push
jg
pop
xchg
jno
jo
cmp
cs
daa
push
mov
repnz
pop
jbe
cmp
jle
jnp
lcall
or
sarl
cli
int3
inc
cmp
aas
xor
sbb
lock
ja
xlat
and
lahf
adc
leave
lea
xchg
jb
ficomps
lcall
fidivrl
roll
sbb
pusha
pusha
add
cmp
inc
inc
aam
sbbb
jmp
cmp
sub
shll
test
data16
into
mov
mov
ds
pop
xor
push
sti
dec
mov
add
add
dec
pop
sbb
fcmovb
shr
dec
popa
jle
sub
xor
sbb
mov
icebp
je
lcall
mov
shrb
mov
xchg
std
outsb
inc
push
jnp
mov
push
lcall
and
cmp
pop
pop
sub
int3
repnz
hlt
std
mov
xchg
incl
test
sub
mov
fwait
mov
and
sbb
std
pand
or
push
inc
jg
inc
cmp
inc
mov
outsl
pop
pop
pop
mov
bound
inc
push
sub
shrl
mov
fstpt
ret
addr16
inc
shlb
sub
xor
inc
testl
int
xchg
enter
jae
sub
aam
sbb
out
sub
mov
xchg
and
lea
cwtl
mov
cmp
ja
mov
data16
adc
imul
xchg
adc
cmp
call
test
in
mov
stos
mov
jmp
mulb
cmp
cmp
sbb
mov
addl
cli
fstpt
jge
sti
pusha
lods
mov
push
push
mul
xor
cld
add
inc
je
pusha
bound
js
push
sti
es
loop
jnp
mov
mov
mov
pop
mov
jle
data16
int
mov
add
dec
jmp
dec
jecxz
repz
scas
sbb
push
mov
adc
mov
sbb
fisttpl
idivb
out
es
dec
pop
cmp
cltd
jno
mov
rclb
mov
rcll
jns
xchg
adc
lds
subb
fistps
aad
outsb
add
xchg
mov
sbb
fwait
enter
dec
add
in
rcr
sub
inc
shll
cmp
in
out
fsubl
test
add
adc
out
jo
push
arpl
cwtl
push
dec
xchg
pop
lods
mov
sub
jne
repnz
jns
push
inc
or
cmp
sbb
xchg
out
ss
pop
push
popa
pop
xlat
xchg
sbb
mov
mulw
jae
aas
popa
je
jmp
sub
inc
push
in
sub
in
or
sbb
dec
or
adc
fildl
sub
ret
fcoms
sbb
mov
push
scas
push
mov
sahf
icebp
mov
movsb
popf
outsl
dec
lods
cmp
in
push
mov
adc
popa
mov
and
fsubl
jae
movsb
cmp
imul
imulb
aad
ja
jl
imul
jmp
push
stos
push
xorl
xchg
loopne
xchg
cs
xchg
out
cmp
mov
sub
sbb
fs
or
out
jmp
xlat
ljmp
xchg
sub
or
sub
movsb
fistps
push
xchg
jne
add
and
cs
inc
mov
sbb
test
shr
push
fcmovnu
cmpsl
jnp
addr16
sahf
movsl
cmc
jnp
fwait
in
jp
mov
sahf
add
add
mov
push
cs
dec
cmpsb
ss
into
test
nop
mov
mov
add
fcmovb
add
lahf
adc
pop
stos
and
aas
fisubl
mov
lods
icebp
pop
cmp
pop
mov
cld
fnstsw
mov
fs
out
lock
xor
sbb
in
movsb
test
scas
push
pop
pop
lods
insl
loope
push
pop
push
pop
mov
xor
bound
mov
icebp
shlb
adc
pop
aam
sub
xchg
xchg
mov
mov
xchg
clc
sti
cltd
push
sub
pushl
pop
aad
test
push
push
dec
mov
pop
dec
mov
xor
dec
pusha
jp
and
fldenv
stos
xchg
sbb
pop
hlt
cmpsb
js
ss
or
negb
mov
and
xchg
shlb
fistpll
pushf
lods
mov
dec
or
ret
sub
push
out
mov
fldenv
cmp
adc
lds
in
cmp
pop
es
pop
xlat
push
stos
fdivr
icebp
xor
pop
or
nop
cmp
cltd
push
add
xor
sub
je
test
jns
gs
aas
jge
loopne
pop
xchg
mov
shll
cmpl
xor
pop
pusha
pop
cs
cmpsb
add
push
sbb
sub
cs
ret
push
jb
or
call
mov
outsl
mov
jecxz
or
xchg
sbb
repnz
dec
inc
or
jp
dec
pop
jg
mov
imul
popf
addb
jecxz
into
cmp
push
dec
mov
jo
and
cmpsl
ret
incb
jl
ret
lods
sahf
movsb
mov
nop
dec
xchg
or
cmpsl
adcb
xchg
cmovno
mov
mov
rclb
shlb
test
in
mov
dec
in
lret
lcall
iret
xor
bound
or
sub
xchg
das
pop
jns
push
mov
cmp
cmp
faddl
popf
in
dec
dec
shll
pop
jmp
insl
lret
int3
cmpsl
test
pop
jo
mov
sahf
mov
and
jg
dec
outsb
daa
inc
pop
xor
dec
clc
faddl
xor
xlat
loope
out
cmc
idivl
xlat
mov
rcll
jmp
cli
mov
mov
xchg
or
cs
mov
mov
jbe
jg
fcmovb
and
jb
push
xor
hlt
leave
mov
jo
inc
jg
ret
pop
lods
xor
shrb
pushf
pop
repz
dec
insb
imull
in
jb,pn
std
lods
inc
leave
outsl
and
mov
filds
call
into
xchg
inc
sub
cmc
int3
add
and
gs
or
sbb
xlat
mov
xlat
test
ss
xor
sbb
bound
cmp
adc
cmp
arpl
popf
stos
movsl
or
arpl
lcall
jl
mov
pop
inc
scas
neg
jb
or
mov
cmpl
add
and
dec
push
pop
mov
cmp
arpl
push
mov
sbb
push
inc
push
fs
pop
jo
loope
lret
and
nop
pop
xchg
fs
jl
mov
scas
push
jne
mov
mov
mov
imul
dec
nop
sub
mov
int
ds
add
add
cmc
js
jbe
lahf
push
shlb
pop
xor
adc
push
rol
popf
cmc
loopne
jmp
movsb
mov
test
push
jns
dec
inc
shll
jl
aad
or
ret
movl
sub
cmpsb
sbb
xchg
xchg
in
xchg
push
sub
in
imul
leave
inc
test
adc
loope
mov
jnp
add
adc
call
inc
push
mov
stos
mov
aaa
adc
fisubrl
push
inc
std
mov
pop
jp
jb
lahf
push
sarl
cmp
mov
gs
movd
sbb
adc
cmc
or
fwait
dec
cmpsb
sub
fwait
add
push
adc
in
xchg
loope
arpl
add
and
js
xchg
inc
cmpl
cmp
enter
lahf
cmp
adc
popf
jne
mov
xlat
add
inc
jl
mov
jecxz
dec
mov
jmp
popa
push
jbe
imul
loopne
lahf
sub
mov
mov
sub
aaa
inc
mov
lahf
in
inc
outsb
adc
sbb
push
or
inc
xor
mov
imul
enter
and
mov
jbe
call
push
mov
mov
adc
pop
dec
clc
sbb
sahf
mov
insb
jge
cmc
sbb
es
pop
push
adc
push
popa
dec
lock
divl
lods
jo
add
scas
jno
or
lcall
pop
push
mov
pop
fdivrs
lock
test
xchg
lods
scas
inc
test
adc
in
mov
sti
ret
rcll
xlat
cld
add
push
addr16
addr16
cld
or
lcall
lods
icebp
cmp
sub
mov
mov
mov
pop
jmp
xchg
cmpl
leave
xchg
push
push
add
pop
int
insb
add
jb
or
loope
pop
xor
idivb
mov
sti
mov
fnsave
int3
jge
lahf
inc
jbe
ss
sub
mov
outsb
inc
hlt
cmpsl
int3
mov
in
loope
mov
movsl
test
in
lods
test
mov
ljmp
add
ret
adc
pusha
push
cmp
push
jmp
div
dec
popa
jge
cmp
add
pop
and
fs
mov
mov
lea
lea
mov
or
inc
sbb
loope
pop
dec
adc
pop
call
mov
jge
test
ds
fnstenv
jge
sbb
fiadds
adc
inc
out
popa
pop
cli
fsub
daa
pop
rclb
cmpsl
and
jle
jo
outsb
xchg
jno
push
sahf
test
jg
lds
add
add
aas
je
adc
inc
aas
or
cmpsl
pushw
and
sbb
test
adc
push
push
scas
fdivp
popf
orl
or
into
mov
sub
mov
popa
je
shlb
test
dec
sbb
pop
inc
inc
pop
sub
ljmpw
sub
cwtl
iret
hlt
ret
sbb
dec
insl
sbb
mov
mov
pop
bound
nop
jmp
data16
dec
adc
xor
arpl
ret
fdivrl
fstps
mov
cmp
push
ljmp
and
jbe
or
pop
add
ret
jp
xchg
insb
push
insb
xor
cmp
adcl
ds
cmp
dec
or
arpl
or
xor
jno
scas
lret
xchg
cmpsb
pusha
jecxz
mov
xchg
push
mov
jo
push
mov
repz
add
cmpsl
xchg
cmp
xlat
jecxz
adc
jmp
outsb
xchg
hlt
test
mov
jp
push
test
in
inc
or
cmc
fcoms
and
mov
insb
push
push
stos
or
mov
call
dec
repz
xor
mov
or
jecxz
and
push
cmp
stos
cmp
adc
mov
enter
aam
mov
rcll
xchg
fistps
jg
rcl
addb
idiv
bnd
jo
lods
icebp
adc
or
mov
mov
push
bound
subl
stos
mov
enter
emms
ret
xchg
xchg
or
xor
jns
lods
lcall
pop
fidivl
imul
test
aam
shlb
cltd
cld
xor
mov
cmpsl
lods
leave
test
mov
hlt
mov
sarl
mov
stc
ds
ljmp
mov
mov
or
shr
imul
jecxz
inc
mov
and
repz
jns
mov
push
mov
sti
out
sub
rcrb
js
push
ret
hlt
mov
push
xor
mov
hlt
fs
push
and
dec
es
or
adc
ss
shl
repz
sub
mov
scas
outsb
adcl
repnz
xor
fsubs
add
aad
rolb
nop
daa
fwait
inc
enter
jnp
inc
jmp
icebp
add
cmp
push
daa
icebp
pop
xlat
mov
push
xorb
adc
fs
xchg
loopne
push
mov
mov
js
scas
out
push
jp
clc
inc
jbe
xchg
lcall
lret
and
mov
adc
jnp
cmpl
jl
and
sbb
movsb
push
or
testb
enter
cmp
jns
mov
aam
push
xchg
das
inc
leave
mov
inc
arpl
in
mov
sub
mov
or
rcrl
sbb
mov
flds
addr16
inc
sub
call
pop
push
xchg
adc
test
stc
shll
dec
add
xor
adc
jbe
into
cld
mov
xor
pop
fnsave
mov
outsl
cmp
iret
sbb
mov
pop
mov
xor
push
iret
mov
push
gs
repz
rcr
mov
daa
jmp
ljmp
dec
mull
insb
mov
pop
aaa
dec
xchg
pusha
add
scas
lods
jmp
sbb
mov
int3
icebp
incl
mov
enter
rolb
cmp
sub
shlb
mov
dec
mov
pop
mov
sbb
test
je
hlt
pop
lcall
addr16
pop
hlt
int
mov
popa
insl
hlt
cmp
int
lahf
shrb
add
int
inc
or
xchg
mov
and
xlat
cmp
loopne
push
in
mov
jmp
imul
sbb
leave
sub
ljmp
xor
popf
stos
sub
mov
into
xchg
push
pop
faddp
jne
xor
add
add
mov
adc
cld
cmp
xor
clc
aaa
mov
xchg
lods
xor
mov
xor
icebp
lea
mov
add
sbb
ret
popf
int3
cmp
mov
jge
pop
add
bound
imul
sahf
xor
movsb
add
push
cmp
xchg
aas
lret
add
scas
or
xorl
jnp
inc
pushf
or
push
pop
dec
mov
daa
sub
fcomip
and
mov
dec
sbbl
cmp
mov
ret
fiadds
pusha
dec
jmp
jl
out
inc
push
addr16
es
pop
jno
out
jge
push
inc
and
pop
mov
clc
das
gs
stc
lods
cs
mov
ds
addr16
dec
sub
fmull
in
cmp
inc
ljmp
lret
sbb
call
dec
pop
ret
dec
pop
cmp
in
mov
fildll
leave
dec
jmp
mov
inc
jp
mov
sbb
mov
testl
idivb
aas
ret
in
sub
sub
outsl
mov
aaa
sub
jg
jg
pop
adc
or
imul
pop
addl
sar
movb
lods
out
je
sbb
push
fwait
pop
jmp
movsb
xor
sbb
mov
sub
cmp
jbe,pt
and
ds
out
clc
loope
xchg
test
fisubs
sbb
jmp
loope
out
aas
popa
clc
fcoms
dec
loopne
stos
mov
dec
cmpsl
sub
xchg
es
mov
in
xchg
xor
adc
mov
cwtl
lahf
scas
dec
mov
sbb
or
and
or
xchg
mov
roll
outsl
out
div
push
push
out
fidivrl
ss
or
ret
sbb
mov
fists
mov
inc
aas
mov
and
notl
lret
mov
cmc
inc
sub
cmp
movl
inc
outsl
dec
mov
cltd
xlat
ja
jnp
nop
fstpt
leave
lods
pop
ja
mov
popf
add
sub
cltd
mov
inc
mov
repz
adc
mov
in
jmp
xor
iret
dec
pop
adc
adc
jno
dec
mov
mov
xor
dec
repnz
cmp
add
and
dec
test
push
stos
loopne
cwtl
lahf
push
inc
cmp
xchg
or
mov
sbb
mov
cmp
je
dec
in
mov
cli
or
loope
fcomi
pop
out
out
mov
jnp
xlat
or
sbb
insl
push
inc
movsb
cmp
imul
lods
repz
xchg
repnz
jnp
push
mov
fcompl
mov
or
cmp
mov
fcmovu
loope
add
stos
popf
pop
xchg
shll
out
mov
xor
mov
arpl
dec
pop
sbb
je
std
mov
nop
or
push
push
mov
outsl
cmpsl
push
adc
dec
fs
lahf
stc
xor
xor
push
in
fdivrs
dec
inc
stos
dec
or
loopne
in
hlt
xchg
call
cmp
popf
negl
pop
dec
xchg
sbb
jbe
mov
xchg
pusha
fsubs
mov
xor
jl
in
xlat
dec
lahf
mov
arpl
or
push
movsb
jl
pop
cmp
push
sub
repz
outsl
stos
sbb
loop
out
sub
jge
lahf
bound
in
decb
mov
ja
bound
lods
gs
sub
daa
inc
jo
cmp
push
push
sub
cli
fiadds
out
das
mov
inc
pop
xchg
mov
mov
dec
int
pop
sub
int
out
dec
cld
jb
popf
jp
mov
sti
shrb
lock
cmpsb
jmp
sbb
in
fs
in
fadd
pusha
or
in
test
xchg
and
pop
fsubr
jns
sbb
lahf
mov
sbb
lcall
xor
dec
and
mov
outsl
stos
or
fistpll
test
and
mov
outsb
and
scas
imul
inc
out
negb
repz
stos
mov
push
xor
cmp
mov
push
flds
les
or
xchg
inc
jmp
mov
or
adc
inc
aam
test
or
inc
shlb
xchg
int
test
ficompl
push
cmp
in
mov
jns
dec
mov
cmpsb
xor
js
sub
loop
push
pop
out
cmp
pop
sub
mov
inc
flds
mov
or
fstps
orb
daa
icebp
test
je
lret
loop
js
dec
fs
stc
imul
ffreep
dec
pop
or
pavgw
fsubrs
dec
mov
hlt
add
scas
xchg
je
addl
pop
lcall
sahf
inc
mov
pop
out
jecxz
test
fcomps
dec
xor
cltd
fucom
jae
xchg
inc
clc
or
aad
in
mov
lret
insb
aam
pop
push
arpl
pushf
icebp
mov
loopne
jbe
push
stos
cmpb
push
lret
inc
push
in
rcrl
sub
dec
pop
inc
daa
mov
sub
push
scas
mov
cwtl
pop
and
or
fisttps
or
push
and
jae
and
and
shlb
jl
es
sub
icebp
inc
ljmp
shlb
in
mov
out
sub
dec
pop
xchg
add
lcall
mov
nop
mov
jb
test
sub
xchg
cmpsb
mov
mov
jne
nop
fld
mov
lahf
mov
sbbb
popf
test
aam
mov
mov
andb
push
orb
nop
dec
js
adc
data16
inc
xor
lea
inc
sbbl
ljmp
mov
nop
push
or
fadds
jecxz
daa
dec
sarb
cmp
incb
pushf
jns
ss
sub
sbb
jp
lock
add
jge
lahf
jo
fdivs
rcl
stos
xor
mov
cmp
nop
cmp
push
xor
roll
xor
inc
scas
jle
das
pop
aam
in
pop
popa
mul
dec
sub
mov
lods
ljmp
inc
xchg
cmp
lock
dec
inc
xlat
mov
testb
push
loop
sbb
jp
jb
mov
dec
jecxz
adc
rcrl
pop
repnz
testb
and
add
aaa
cmp
mov
sub
fidivs
dec
adc
outsb
and
jp
add
fnstsw
xchg
cmc
jl
push
or
push
cmp
aam
int
rcr
frstor
clc
sub
jns
ljmp
xchg
test
ljmp
js
test
rcll
push
clc
dec
mov
mov
fisttpl
jo
lds
sbb
idivb
test
xchg
scas
xchg
outsb
cs
xchg
adc
loopne
dec
loope
jno
fsubs
add
sbb
lahf
pushf
insb
xor
cmpsl
pop
aam
inc
inc
stos
mov
mov
pop
shll
sub
in
mov
mov
cs
lods
sub
cld
fnstsw
inc
dec
mov
inc
mov
pop
jl
mov
in
xorl
sahf
pop
cmp
div
gs
sub
mov
jle
sub
ja
cmpsb
jge
or
pushf
and
cwtl
fimuls
mov
mov
or
aaa
test
mov
add
sub
pop
sub
push
mov
leavew
mov
pop
inc
cli
out
mov
insl
push
out
pop
lcall
cmp
jb
imul
outsl
and
adc
and
add
xlat
sbb
mov
and
push
movsl
into
fdivl
mov
cwtl
sbb
mov
dec
mov
aad
xchg
fbstp
mov
inc
dec
adc
mov
push
lds
adc
pop
jbe
or
test
sbb
pop
mov
inc
popf
dec
lcall
pop
repnz
mov
shrb
addb
test
cs
test
dec
push
sub
pop
mov
or
sub
insb
cmp
popa
cli
xchg
out
jmp
repz
repz
xchg
imul
les
push
test
roll
je
cmp
push
mov
sbb
dec
mov
mov
push
cmc
cmc
sub
xor
xchg
lret
shr
jp
scas
push
mulb
outsb
addb
adc
out
fdivrs
sbb
aad
dec
int3
jo
jbe
arpl
stc
sti
or
jmp
and
stc
jae
jp
imul
into
cs
std
add
or
lahf
jp
add
cmp
xchg
int3
sbb
ja
or
test
adc
pop
add
mov
cmp
sbb
jnp
sbb
cli
cmp
add
shll
dec
push
sub
das
in
cmpsb
sub
adc
push
xchg
push
mov
xchg
insb
pop
inc
dec
pop
lahf
in
loope
std
pop
adc
test
lcall
pop
sarb
out
mov
icebp
xor
push
push
ret
test
pushf
lods
cld
push
inc
in
loop
in
mov
dec
sarl
pop
or
nop
dec
arpl
push
lret
pusha
xor
sti
mov
adc
sub
xor
push
sbb
in
mov
cwtl
in
daa
dec
cli
imul
mov
mov
bound
icebp
mov
loopne
inc
fcoml
push
ret
loope
pop
adc
std
push
xchg
sbb
lods
or
jae
fistl
test
ficoms
mov
lret
movsb
or
sbb
cwtl
icebp
adcb
nop
jmp
jae
xor
xchg
insb
sbb
dec
pop
das
jp
push
jno
inc
mov
xchg
out
pusha
popa
add
or
ds
or
cli
dec
repnz
imul
or
lock
cs
jle
mov
pop
ds
lods
mov
pop
pusha
out
in
dec
push
sbb
jmp
test
imul
popa
mov
mov
ja
jno
sbb
dec
or
jmp
push
rcl
adc
mov
dec
xchg
mov
daa
pop
icebp
scas
cmp
or
enter
js
xchg
les
lods
mov
outsl
push
mov
jge
mov
push
int3
cmpsl
mov
repnz
lret
loop
ret
cmp
sti
inc
das
adc
mov
adc
loopne
pop
repnz
lahf
xor
or
adc
xchg
sbb
loope
push
inc
daa
pusha
aad
jmp
jecxz
mov
fdivrs
jecxz
stc
dec
adc
mov
push
pop
or
jns
aad
fsubr
jno
add
pop
lret
sbb
push
mov
fldt
mov
lds
out
popa
outsb
pop
mov
arpl
pop
fwait
sub
adc
outsl
cld
dec
sahf
cmpl
sub
inc
daa
ret
outsl
adc
pop
fdivrp
or
movsl
dec
aam
into
push
pop
sub
sbbb
xchg
adc
sbb
aas
mov
xchg
dec
jns
inc
cld
dec
jmp
push
les
lea
xchg
xor
lret
loope
jmp
sub
stc
repnz
aam
insb
jecxz
adc
xor
cmpsl
pop
ja
cwtl
les
mov
mov
es
bound
jns
jnp
js
out
mov
mov
cmpsb
mov
cmpsb
fs
lock
push
push
adc
push
loopne
mov
inc
xchg
xor
jge
jle
xlat
repz
or
into
out
sub
push
iret
aam
leave
inc
gs
pushf
sbb
xchg
ja
add
incb
or
mov
mov
pop
adc
push
loop
or
mov
sub
and
xor
test
mov
rcll
or
pop
jo
jg
loop
cmp
loope
aas
outsl
not
pushl
ds
leave
in
in
rorl
push
call
lret
jge
or
cmpsb
arpl
push
push
xor
shrl
or
xor
jmp
pushf
push
push
out
lret
mov
bnd
dec
fiaddl
scas
rcrl
mov
push
faddl
cmp
call
sub
jns
test
leave
out
popf
pop
fdivrl
out
outsl
stc
sub
push
xchg
or
push
in
inc
or
mov
or
ljmp
popa
mov
scas
pop
lret
adc
sahf
or
sbb
mov
in
dec
test
jo
mov
mov
pop
push
sbb
fadds
loop
das
xchg
shrb
stos
loopne
mov
sub
scas
std
pop
sbb
jae
lret
inc
mov
ja
push
pop
cmp
pusha
cmp
push
nop
sarb
sbb
addr16
xor
in
xor
loop
imul
repnz
fiaddl
fwait
inc
into
inc
jmp
mov
mov
loope
pop
xchg
fistpll
sbb
in
movsb
fldl
mov
cld
push
mov
lea
xlat
lds
mov
cmpsb
sbb
mov
fcomps
fcoml
xor
movl
scas
lods
and
dec
push
lret
and
dec
das
pop
jnp
repnz
out
mov
sub
inc
add
dec
cmp
mov
cld
push
mov
jnp
jl
out
nop
pop
sbb
subl
adc
dec
out
ljmp
insl
shrl
not
cmpsb
xor
inc
iret
sbb
xor
inc
sbb
mov
push
out
dec
jecxz
or
shlb
add
push
out
dec
sub
adc
js
xor
inc
xor
mov
xchg
std
xchg
nop
push
lock
push
rolb
xchg
scas
push
inc
mov
stos
cmp
sub
and
in
in
mov
xor
mov
xchg
cmp
mov
jae
jno
or
xchg
test
aad
imulb
cmpsb
stc
andps
cli
xchg
pop
lods
push
jmp
shrl
int
inc
mov
cs
cld
jge
dec
mov
scas
dec
mov
lret
daa
pushf
adc
imul
cwtl
ds
mov
dec
pop
jmp
jl
and
adc
in
stc
jmp
jl
cmp
cmpsb
lock
test
xchg
aad
orb
idivb
xor
jge
pop
xchg
sahf
shll
pushf
or
test
popf
das
pop
iret
dec
fsubp
cmc
mov
xor
aam
aam
mov
jae
popa
adc
adc
idivl
cmp
inc
clc
inc
call
popa
push
dec
push
repnz
nop
add
add
mov
inc
xchg
js
rclb
push
push
push
mov
dec
jae
imul
movsb
std
push
testl
jl
cwtl
mov
fucomip
imul
fs
mov
and
xchg
push
fucomi
enter
mov
inc
xchg
push
mov
inc
ret
adc
adc
iret
int3
jge
aad
fs
pop
jne
lahf
in
xor
es
mov
popa
cmc
jl
aaa
jnp
mov
push
adc
fwait
pop
enter
cmp
xchg
lret
aad
mov
xchg
or
adc
pushf
iret
test
push
addr16
int
sbb
jne
cmp
sbb
push
dec
in
cmpsb
pop
and
pusha
mov
subb
cmp
mov
xor
or
mov
int
cwtl
adc
dec
jne
outsl
pop
cmp
sub
xlat
mov
cmc
and
out
push
dec
out
xchg
jecxz
mov
xor
nop
mov
sub
xor
sahf
adc
dec
mov
lods
xchg
mov
ficompl
jae
cld
stos
gs
aad
sti
dec
cmp
out
clc
filds
dec
add
cs
jle
add
pop
push
sub
pop
jecxz
dec
mov
jle
test
push
or
xchg
dec
jecxz
imul
lods
push
xchg
repz
call
sets
mov
fildll
push
pop
cli
fcmovu
fisubl
aas
dec
jecxz
and
dec
lret
add
jmp
xchg
cli
ja
xor
fisttpll
loopne
dec
dec
dec
repz
shll
add
push
repnz
and
mov
sbb
mov
roll
ficompl
dec
in
test
out
lret
das
shrl
inc
or
adc
jno
and
das
fldt
popf
in
fcoms
fmul
out
je
je
pop
daa
aam
scas
pop
dec
int3
hlt
and
mov
repz
xor
adc
dec
aas
bnd
jb
lock
and
xchg
sti
and
mov
and
xchg
fucom
mov
inc
jmp
jbe
dec
out
clc
jge
sbb
out
cwtl
mov
push
lret
mov
rcrb
inc
pop
sub
lods
sbb
mov
test
adc
shll
push
push
sbb
insb
ret
jge
jl
insl
pop
arpl
xchg
inc
scas
cli
mov
add
lods
icebp
notb
cs
enter
lea
cwtl
jmp
or
dec
xchg
jne
and
inc
mov
pushf
hlt
fs
or
pusha
movsb
dec
scas
rcr
js
stos
lock
leave
insl
daa
cmp
inc
ret
jb
movsl
add
mov
pop
or
int
adc
inc
push
xchg
xchg
lret
lret
add
jl
sahf
out
and
lret
add
icebp
push
cs
outsl
test
and
es
and
cmp
mov
mov
loopne
dec
mov
lret
push
scas
lret
std
and
cmp
lock
ja
aas
shll
repnz
push
or
scas
outsb
sub
andl
fs
insl
ds
pop
sub
test
jmp
push
cmp
push
xor
movsl
and
aam
iret
mov
pop
jge
shll
iret
mov
push
sti
pop
adc
clc
and
jmp
shlb
hlt
arpl
hlt
pusha
sub
add
stc
scas
xchg
stos
push
xchg
jmp
mov
xchg
push
jg
sbb
nop
xor
scas
cmpsb
xchg
clc
fcmove
or
pop
pop
pushf
rcll
push
aam
or
adc
xor
shl
arpl
sub
mov
cmp
adc
das
in
xchg
mov
aaa
sahf
rorb
sub
xor
mov
sub
push
jbe
imul
mov
hlt
pop
xchg
cwtl
mov
loop
mov
shlb
int
in
enter
push
scas
push
mov
dec
je
cmp
cmp
out
jle
loop
es
mov
cltd
nop
cmp
add
inc
xorl
xchg
pushf
xor
mov
sbb
push
jnp
ret
xor
stc
leave
push
pop
adc
add
lret
mov
or
je
ds
mov
sbb
mov
xchg
jae
imul
pop
push
loopne
iret
in
stc
cmp
rcl
adc
jge
call
inc
jg
ja
iret
stos
addr16
outsb
cmp
cld
rolb
iret
jl
scas
scas
sbb
push
pop
pop
cmpsb
pop
pusha
cltd
cmc
test
push
ret
dec
jle
pop
test
push
jnp
inc
decl
out
inc
aad
pop
daa
lods
fcomp
xchg
push
lcall
xor
cmp
mov
sti
adc
fstps
pop
jnp
adc
mov
jp
jno
cmp
and
mov
or
jmp
jecxz
jmp
gs
sbb
add
rorb
dec
mov
shll
push
jle
dec
mull
aam
rclb
xchg
xchg
inc
cmp
sbb
imul
add
imul
pop
fistps
lret
stos
imul
push
incl
pop
and
icebp
mov
call
sub
mov
and
in
dec
iret
into
cld
stos
or
adc
negl
aam
mov
sbb
cmp
or
inc
xchg
push
mov
or
and
xor
xchg
into
popf
and
js
lret
popa
mov
mov
add
dec
andl
inc
dec
cmp
scas
pop
cmp
mov
push
daa
mov
mov
pushf
and
push
pusha
dec
xor
je
mov
cmp
test
scas
jg
jne
out
shl
ljmp
and
in
loop
aad
jl
test
ret
mov
xor
push
cltd
push
lods
mov
ret
lret
jb
jno
pop
mov
bound
xor
add
xor
mov
mov
out
jne
xchg
in
xchg
aad
xorb
dec
push
sub
hlt
cld
bnd
imull
inc
ljmp
jecxz
cmpb
mov
xor
xor
negl
fiadds
cmpsl
fldl
jnp
movsl
cs
mov
test
push
jmp
adc
mov
clc
xor
call
jp
adcb
js
sub
icebp
sar
mov
push
aaa
xchg
mov
repnz
sti
jge
lret
pusha
and
pop
mov
mov
and
sub
mov
inc
ljmp
call
fucomip
push
mov
sub
pop
adc
dec
das
push
insb
addr16
js
add
inc
and
fsubl
cmp
insb
or
cmp
jl
daa
pop
insl
outsb
insb
cmp
adc
adc
mov
dec
lods
mov
mov
ljmp
imul
jge
pop
test
and
cs
pop
mov
jnp
lds
push
popw
jl
jns
outsb
call
mov
fsubr
mov
js
cmp
mov
clc
decb
inc
and
jg
sbbb
cmp
sub
sbb
loope
jns
inc
push
pop
mov
fcmovbe
mov
push
or
dec
jecxz
and
push
cmpsl
addr16
add
lcall
and
push
sub
loopne
xor
fstpt
push
jne
mov
pop
ror
test
mov
lret
mov
jl
pushf
test
mov
pop
imul
xor
data16
addr16
test
mov
das
popf
adc
repz
jge
push
ret
push
cld
out
dec
cmp
mov
or
dec
sbb
inc
cwtl
cmp
fidivrl
in
push
mov
lock
fidivrl
jl
movsb
in
call
test
mov
push
into
incb
mov
int
int
andb
dec
out
out
jb
test
psubw
aas
outsl
sarb
jge
and
iret
fcomps
enter
repnz
mov
in
out
dec
mov
lahf
inc
insb
je
out
imul
add
xchg
mov
ljmp
daa
lahf
push
std
or
and
popa
inc
sub
sarl
dec
add
xchg
adc
xchg
lods
inc
sub
add
cld
adc
es
pushf
xor
gs
mov
jb
or
mov
sub
xchg
idivl
pmaxub
ret
mov
insl
ss
ret
movl
call
outsb
xor
jmp
adc
stos
shlb
aam
mov
shlb
aaa
lret
and
insb
sbb
decb
xor
xchg
cltd
xlat
jb
imul
sub
int3
adc
mov
test
mov
cmp
aam
mov
dec
xor
test
sbb
stc
jns
pop
imul
xor
xchg
pop
pop
loopne
lahf
fdivl
fdivrl
out
jmp
cwtl
fdivrl
jl
mov
cmp
ret
aam
mov
sbb
and
andb
cltd
lahf
xchg
jle
sub
and
repnz
mov
jmp
ret
fwait
push
push
lret
orb
add
fisubrl
jecxz
mov
test
fistps
fmull
nop
outsl
imul
lret
mov
lods
sbb
fdiv
mov
push
mov
scas
insl
dec
push
sub
or
and
leave
rcrb
pop
xchg
xchg
inc
cli
pop
push
dec
ss
and
mov
cmp
pusha
jl
outsl
cmp
or
or
lret
or
test
sub
outsl
je
int
into
data16
mov
jmp
sti
std
xor
and
inc
mov
sti
push
jb
mov
mov
dec
mov
mov
dec
push
xchg
lds
add
sbb
jle
jo
test
dec
pop
xchg
mov
push
aaa
jns
ss
jp
ret
mov
or
add
push
scas
jns
push
pop
or
and
mov
in
mov
mov
push
mov
sub
insb
je
cmp
pushl
push
add
jmp
in
or
xor
stc
xor
in
rep
xorb
or
repnz
mov
or
cmpsl
xchg
repz
sbb
xor
add
insl
ret
packssdw
sti
xchg
sub
and
add
sbb
out
cmp
cmp
xchg
fcomip
test
daa
fidivs
cwtl
jle
mov
ret
pusha
mov
sub
rclb
stos
mov
imul
fsubrl
add
insb
lret
pop
call
xor
mov
mov
test
inc
movsb
in
push
call
sub
adc
push
sbb
popf
fidivs
sub
push
popa
jp
jle
xor
push
mov
sahf
push
and
popa
loope
cmp
add
out
dec
and
mov
jge
aam
xor
loop
and
jp
add
mov
sbb
stos
repnz
scas
divl
jno
pop
push
mov
addr16
frstor
push
insl
inc
mov
mov
xor
sti
rcl
inc
addl
dec
xor
and
sub
or
inc
outsb
mov
loopne
js
popf
push
push
mov
insl
jl
jnp
cmpb
sub
sub
add
adc
xor
xchg
shll
popa
out
push
xchg
cmpl
xor
inc
jg
xchg
test
pop
mov
imul
sahf
mov
rcrb
call
or
mov
jae
cwtl
mov
leave
addr16
loope
mov
mov
not
and
push
jb
push
ljmp
data16
jp
inc
push
rclb
ficompl
sub
jae
mov
or
pusha
cmp
or
adc
jg
enter
in
ljmp
dec
fistpll
dec
aaa
sbb
loop
pop
xorb
cmc
xchg
sbb
push
out
push
mov
lock
dec
adc
in
into
jns
cltd
sub
sub
out
xchg
mov
or
ficompl
xor
sbb
jnp
and
fisttpl
stc
ljmp
push
outsl
movsb
notl
or
data16
cmpsb
pop
stc
jbe
mov
inc
add
push
loopne
xchg
incb
icebp
pop
popl
cmpsl
rorl
sbb
test
jl
sbb
mov
jecxz
xor
xchg
push
pop
loopne
push
and
dec
mov
andb
xchg
mov
cwtl
or
std
popf
in
insl
jg
lcall
rclb
sbb
push
xchg
pop
lods
js
sbb
fcompl
neg
xor
push
negl
ja
repz
lcall
ret
add
adc
mov
dec
bound
push
fmul
xchg
push
outsb
ret
into
sbb
and
mov
imul
xlat
loope
cmp
inc
nop
pop
cmp
sbb
push
push
mov
daa
xchg
inc
je
rcrl
stc
divl
add
jmp
scas
adc
jae
sub
push
ret
scas
pushf
jnp
in
cmp
std
cwtl
cmp
js
jecxz
xor
cli
fs
int
mov
je
scas
inc
lcall
test
mov
xorl
je
cmpb
in
add
inc
popa
or
add
scas
stos
jae
cmp
rcrb
adc
xor
jg
cmp
mov
sub
inc
mov
mov
ret
movsb
push
pop
pop
pushf
sub
inc
dec
mov
scas
push
fidivl
lock
mov
jl
lret
mov
scas
jo
mov
mov
out
push
stc
sub
mov
push
jecxz
jnp
xchg
or
fisubrl
cmp
iret
push
push
loope
and
mov
rolb
ret
xchg
lods
movsl
mov
das
in
in
cmp
pop
aad
push
nop
xchg
sbb
test
mov
bnd
sbb
push
mov
mov
cs
jne
imul
cld
push
mov
inc
cltd
std
rorl
test
push
jecxz
fbld
xorb
fiaddl
stos
push
iret
loop
push
aas
in
sahf
jo
pop
add
addb
inc
addb
adc
sbb
mov
imul
or
dec
mov
pop
test
xor
gs
sub
lahf
jg
subl
andb
repz
add
mov
mov
cmp
sti
push
fnstsw
mov
mov
fnstsw
sbb
mov
mov
sub
andb
andb
and
stos
or
popa
pushl
cld
mov
test
xor
insl
lret
adc
andl
or
notl
xchg
test
sbbb
pushf
pop
stos
mov
xlat
xor
test
inc
adc
jbe
jb
call
dec
test
stos
mov
cltd
rcll
das
pop
imul
aam
dec
out
push
add
xchg
insl
fwait
xchg
aad
jp
sub
mov
sahf
add
dec
aad
dec
rcrb
call
ret
mov
ja
sbb
adc
ss
mov
inc
cli
in
mov
aas
sbb
in
and
into
iret
xlat
mov
fcomip
xchg
shl
mov
xchg
pop
mov
dec
in
push
daa
sub
out
sbb
or
sbb
jb
pop
jp
jns
cmp
lahf
sbb
add
fcomps
mov
jns
fisubl
popa
cmpb
add
testb
addl
sub
enter
xchg
mov
xchg
sub
xchg
aaa
lret
jp
mov
andl
out
loop
xchg
and
mov
inc
outsb
mov
sub
cmp
and
xorb
mov
push
mov
sbb
faddl
push
push
cmp
xor
mov
repz
adc
mov
push
mov
ds
aaa
arpl
fisubrl
mov
xor
xchg
pop
popf
out
out
jne
adc
insb
arpl
sarb
sub
add
neg
pop
pusha
scas
fwait
sbb
testb
xchg
cwtl
or
sbb
cmc
push
mov
mov
push
adc
popf
ds
lcall
stc
enter
cmc
inc
clc
or
xchg
xor
into
and
pop
ss
fmulp
lea
mov
xor
stos
mov
inc
gs
hlt
and
in
std
push
push
mov
push
js
shll
push
jb
js
mov
fsqrt
xor
pcmpeqb
jnp
push
repnz
rorb
xchg
insb
push
sbb
inc
loopne
or
pop
jge
or
add
test
aad
bound
jbe
mov
sbb
jp
cmc
es
mov
clc
cmc
jg
push
fidivl
pop
and
fimull
repz
push
leave
fidivrs
sbbl
repnz
jp
cwtl
shr
ret
repnz
sbb
or
stos
pop
jg
cmc
cmp
test
jmp
pop
das
xchg
inc
mov
ljmp
mov
js
stc
test
cwtl
outsl
push
cltd
out
test
in
or
hlt
mov
cmc
push
xchg
mov
sbb
mov
insb
aad
sub
push
push
jge
cmova
inc
adc
divl
imul
cwtl
aas
and
push
ja
xlat
popa
leave
adc
add
pop
aaa
popf
sbb
dec
das
xor
pop
sbb
mov
mov
loopne
adc
shr
sbb
add
sarb
addr16
js
int
loopne
push
out
das
jno
idivb
push
scas
cmp
jbe
jmp
sbb
es
pop
out
sbb
setns
jae
cmc
pop
testb
dec
xor
mov
pusha
pop
pop
stc
push
cltd
jl
jle
inc
mov
or
stos
pop
and
mov
and
ljmp
mov
rclb
out
sti
fists
mov
popa
inc
mov
cmp
jnp
sbb
dec
adc
mov
and
pop
add
sub
pop
repnz
pop
ds
repnz
enter
andb
scas
jp
xchg
repnz
stos
and
jecxz
or
bnd
pop
cmpsb
sub
xchg
jmp
sub
and
lret
xchg
icebp
icebp
sub
and
cmpsl
lret
sbb
lcall
lret
adc
and
dec
lea
mov
push
test
cmp
jo
stos
out
jb
into
dec
aad
negl
bound
popa
mov
dec
int3
and
loopne,pn
fildll
xchg
push
xchg
dec
jmp
and
pop
sbb
cmc
add
decb
enter
lock
dec
pop
mov
jp
sbb
cmp
les
cwtl
xchg
aaa
shll
inc
inc
dec
nop
ret
lds
jns
cmp
lret
je
repnz
or
imul
icebp
shll
popf
loop
pop
and
pop
add
sbb
xchg
inc
cmp
orb
xlat
cwtl
mov
and
and
int3
cmp
xor
les
jmp
inc
add
jle
sbb
leave
push
push
call
inc
mov
adc
scas
jge
aam
cld
pextrw
in
sub
outsb
add
popf
push
das
jecxz
push
or
repnz
xchg
push
mov
pop
bound
or
sbb
push
xchg
push
pushf
xchg
add
dec
and
add
push
rorl
add
push
xchg
and
aam
jno
add
jmp
jle
cwtl
iret
movsb
pop
mov
sbb
aad
lcall
into
out
sti
gs
das
cmpsb
lock
lds
mov
scas
movsl
sbb
adc
jns
out
sti
mov
adc
and
cmc
ficompl
dec
rcrb
dec
mov
scas
iret
inc
jle
lds
mov
push
cwtl
iret
sub
or
pop
sub
popl
ljmp
xor
cmp
xchg
push
cmpsb
andl
aas
pop
out
or
pop
arpl
xor
adc
cmp
mov
push
out
hlt
xchg
lea
insl
lods
test
mov
add
add
inc
lahf
pop
sahf
push
push
xchg
pop
ja
jl
jle
icebp
mov
dec
mov
call
mov
ss
and
pop
es
jb
jbe
jae
push
mov
sbb
dec
push
test
int
ficompl
or
or
sub
mov
cld
sbb
add
mov
push
push
js
outsl
mov
xor
or
stos
mov
int
jno
push
inc
test
mov
faddl
stc
mov
scas
outsl
outsb
xor
mov
aam
inc
or
xor
inc
fsubl
pop
sbb
jmp
add
nop
xor
int
fiaddl
xchg
mov
mov
nop
test
aad
imul
xchg
push
add
fcoms
je
sub
sarb
call
mov
lea
ds
loope
jmp
aaa
loopne
jnp
leave
adcl
std
adc
sub
push
in
pop
xor
and
inc
push
iret
or
arpl
push
jmp
stos
mov
push
xchg
adc
jle
fs
clc
inc
lds
mov
addl
add
push
dec
test
imul
ret
cmpsb
ret
xchg
iret
cmp
sub
ss
jbe
imul
sub
pop
inc
pop
push
mov
dec
icebp
xlat
and
adc
fs
cmp
lahf
setl
sbb
fucomp
mov
fwait
dec
push
in
inc
test
aaa
clc
jp
jecxz
xor
sbb
sub
cmp
leave
inc
cmp
mov
jne
inc
shll
out
iret
sbb
cmp
call
and
inc
pop
inc
add
push
outsb
sub
aam
add
loope
aas
leave
je
enter
vmovaps
fidivl
or
fsts
mov
faddp
push
pusha
adc
ret
fildll
and
pop
mov
lret
loopne
sti
xor
jecxz
pop
lods
mov
and
loope
pusha
cmc
aad
nop
jo
adc
push
cmpsb
rolb
lods
repz
aaa
das
mov
pop
and
int3
mov
fidivrs
push
std
fs
bound
in
sub
push
push
aas
inc
cs
mov
repnz
sbb
jno
dec
aaa
xlat
add
sbb
inc
aam
data16
sub
pusha
xor
jp
pop
or
sbb
je
neg
outsb
rorl
shl
xchg
pop
and
or
stos
push
inc
outsb
push
divb
stos
lods
mov
mov
mov
push
cmp
sbb
das
mov
cmp
and
and
pop
inc
jbe
fucomip
lret
adc
popl
xchg
adc
dec
push
lgs
addr16
cmp
popl
pop
pop
insl
mov
mov
cmp
notl
js
int
out
out
clc
jns
or
mov
fistpl
pop
ljmp
hlt
rcrl
pop
mov
mov
pop
add
or
lret
aaa
jl
rcl
icebp
inc
mov
fisubrs
xor
inc
inc
pop
sbb
adc
pop
jge
lcall
mov
mov
dec
test
daa
fs
sub
sbb
aam
lret
shlb
sahf
xchg
sbb
xchg
sbb
mov
lret
mov
movsb
loop
shl
cwtl
int3
insl
sar
sarb
jb
sar
mov
jmp
cmpsb
adcl
into
dec
and
sub
ja
and
and
rcl
pcmpeqw
inc
imul
jno
lcall
lods
popf
test
shrb
les
cmpsl
push
in
jle
inc
pushf
adc
xor
add
pop
cmp
loop
adc
data16
push
jmp
fdivrs
test
rorl
cmpsl
repnz
pop
xchg
imul
sub
fisttps
sub
adc
jo
jbe
xlat
test
les
clc
outsb
adc
pop
test
and
in
mov
sahf
push
fcomp
clc
cltd
push
pop
frstor
mov
add
lds
aas
pop
sbb
cmp
adc
lret
stos
cwtl
mov
lods
dec
jae
mov
cmpsb
shrl
mov
lea
std
in
sub
jo
jle
fsubs
js
mov
shlb
push
in
and
ret
sub
outsb
jno
cwtl
push
add
mov
test
cld
movsb
pop
jne
je
adc
lds
pop
adc
pop
addb
xor
call
int
pop
push
add
aas
pop
push
pop
iret
popf
mov
jge
xchg
lahf
or
pop
mov
loopne
xchg
int3
std
dec
sbb
jbe
sub
mulb
icebp
sysenter
int3
xchg
and
push
stos
xor
push
fs
mov
imul
fstpt
out
mov
cmpb
dec
movsb
dec
out
in
jbe
int
jl
adc
rclb
xchg
setbe
aad
and
outsl
inc
cmp
iret
addb
testb
add
xor
mov
lret
pop
cmp
or
inc
stc
decb
aad
cmpsl
ret
push
cmp
rcll
insl
sub
cmpsb
mov
jl
pop
mov
adc
cli
sbb
dec
cmp
popf
or
test
adc
mov
dec
pop
nop
sahf
and
es
mov
jl
or
inc
xchg
lock
movsl
in
xor
add
test
repz
ljmp
jmp
or
push
or
fdivrs
xchg
jbe
push
and
js
fildl
cmpsb
jnp
iret
xchg
add
fidivrl
dec
lds
pop
call
mov
sbb
movsb
ficoms
xchg
jne
lea
fisubs
adc
or
jle
cld
mov
inc
cmpsb
arpl
in
imul
sbb
sub
mov
lock
xchg
test
lcall
push
or
sub
enter
jnp
fildl
add
fwait
mov
dec
xchg
inc
push
xor
enter
inc
popa
dec
sub
and
adc
and
in
inc
sub
sub
sbb
and
adc
arpl
mov
push
insl
andl
pop
sti
lcall
test
mov
sbb
ja
xorb
cmp
or
int
inc
leave
lods
and
in
test
inc
icebp
loopne
stc
sbb
dec
pushf
mov
pop
sub
aas
mov
out
fidivrs
push
fnsave
clc
std
adc
out
enter
jns
lcall
gs
mov
adc
fsubp
adc
adc
mov
cmp
cmp
jecxz
je
imul
and
fs
jge,pt
push
pop
pusha
jle
mov
mov
ljmp
call
mov
in
addl
inc
cmp
mov
popa
lret
and
call
test
addl
dec
mov
xchg
fsubrp
js
repz
adc
loop
stc
das
js
mov
loop
sbb
mov
push
shll
xor
sar
sbb
sub
sti
add
pop
mov
add
push
pop
add
adc
loope
jae
add
dec
out
lock
sbb
mov
xor
out
in
shrl
inc
mov
mov
pop
xor
mov
iret
aas
imul
stc
repz
push
mov
push
mov
lock
bound
hlt
mov
pop
int3
mov
or
sti
xchg
stc
in
lea
or
out
leave
stos
xchg
adc
or
inc
push
push
sub
das
sarb
cs
mov
fimull
cmpsb
cli
push
adc
movsb
fsubrs
in
pop
scas
stos
push
add
stc
inc
das
jbe
insl
test
xchg
push
gs
packssdw
mov
data16
dec
add
cmp
inc
mov
mov
movb
pop
fwait
dec
fnstsw
push
imul
mov
inc
xchg
ja
jl
aas
mov
lret
inc
orb
push
scas
das
jl
shlb
sti
fbld
clc
leave
testb
jecxz
das
movsb
arpl
or
clc
out
jo
sub
xchg
cmp
xor
test
addr16
iret
push
loop
test
pop
rcrb
mov
and
mov
icebp
pop
int3
lahf
add
mov
sub
scas
icebp
mov
xchg
adc
xchg
and
fs
mov
add
dec
cmp
mov
psubb
xchg
mov
aaa
int
icebp
ret
out
mov
les
pop
mov
pop
nop
sbb
xor
movsb
loop
setp
pushf
ds
mov
lret
test
lods
dec
stc
push
jge
mov
fildll
mov
fwait
pop
cmp
ss
cwtl
push
jne
cwtl
mov
xchg
loope
inc
gs
movsl
push
push
pop
sub
cmpsl
or
xor
mov
insl
adc
push
int
popa
movsl
int
sti
xorb
movsl
leave
js
xor
mov
mov
out
mov
mov
loop
stos
and
ljmp
inc
loopne
fs
out
mov
loop
add
jmp
adc
push
popf
jecxz
ret
cmpsb
pop
and
fs
insb
flds
adc
add
subb
or
and
das
pop
mov
lcall
mov
cli
in
inc
int
pop
sub
out
bound
pop
xchg
add
sbb
rcr
add
cmpb
and
mov
inc
adc
nop
mov
popf
icebp
testl
aaa
jo
add
sbb
mov
icebp
mov
bound
mov
xor
push
pusha
cli
jp
fstpl
rorb
call
ss
nop
jge
in
dec
xlat
iret
js
add
push
leave
add
xchg
sub
add
clc
in
inc
mov
dec
mov
lds
inc
sub
es
and
lret
add
pop
jne
movsb
and
outsb
cwtl
cli
iret
stos
mov
xchg
aad
std
sbb
sahf
inc
jp
push
mov
adc
pusha
lods
mov
pop
test
adc
mov
jbe
shlb
mov
pushf
pop
js
xor
insb
addr16
in
push
mov
movsb
and
push
or
sti
cld
loopne
jl
jns
aaa
shlb
push
ret
ret
fildll
fmul
mov
inc
sbb
sub
xor
inc
aaa
and
movsb
fstl
shr
add
scas
cwtl
push
sti
cmp
roll
cmc
jnp
mov
cltd
stos
sub
mov
loop
jno
mov
repnz
push
das
dec
pop
or
or
pop
mov
cmp
addb
push
pop
pop
jnp
push
mov
test
repnz
shl
fsubrl
stc
xchg
push
gs
mov
jae
cmp
xor
dec
jge
int3
dec
jns
adcl
jp
jnp
push
jp
mov
fimull
mov
mov
cmove
jl
sub
andb
lahf
in
insl
loope
mov
das
or
and
sbb
jno
sbb
jl
jns
xchg
je
daa
fiadds
mov
add
data16
push
test
roll
dec
sar
lret
stc
fstpt
push
aam
ss
mov
bound
push
and
and
ljmp
xor
mov
ret
ja
or
or
movsl
inc
push
and
adc
rcll
dec
pop
jne,pn
sbb
jecxz
cs
mov
and
dec
in
dec
or
aad
imul
aam
andl
fidivrs
mov
jne
dec
sarl
cmp
cmpsb
nop
hlt
mov
jo
inc
add
lret
inc
aas
and
mov
rol
mov
pop
mov
xchg
data16
out
push
mov
int3
sbb
repnz
or
into
fistps
jns
cmp
add
mov
inc
js
or
das
lea
add
scas
sbb
cwtl
adc
jge
pop
inc
inc
out
xor
repz
sub
mov
pop
jns
ja
popf
divb
faddl
push
je
and
test
test
leave
std
push
rorb
adc
fidivs
mov
imul
je
test
movsl
scas
loope
in
ja
jmp
xorl
mov
out
lds
jae
adc
fcomi
xlat
sahf
xchg
xchg
call
push
fstp
lock
loopne
mov
mov
arpl
add
add
mov
out
test
daa
dec
xor
outsb
adcb
mov
data16
inc
pushw
je
add
xchg
pop
xchg
jnp
mov
cmpsl
push
bound
stc
lcall
stos
sti
cli
push
shlb
jge
jb
jne
jmp
xchg
ljmp
mov
fbld
push
fs
mov
mul
mov
movsb
outsl
addr16
jp
outsl
lret
sbbl
xchg
ljmp
add
outsl
jb
lods
add
jns
add
movl
dec
jae
incb
sub
cmc
popf
les
enter
call
cmpsb
stc
push
jle
or
pop
lcall
push
push
push
adc
je
inc
jge
jge
repz
sbbl
cmp
movsl
adcb
xchg
stos
push
mov
fisubs
xor
add
jns
int
sarb
jmp
fucomip
pop
mov
stos
rorb
mov
xchg
xlat
das
xor
adc
shrl
leave
adc
aaa
pop
cmc
bound
jle
pop
sub
jp
jle
push
call
dec
movsb
loope
rsm
fidivrl
test
lods
sahf
push
mov
pop
outsb
xor
and
testl
mov
sbb
xchg
shlb
test
cld
int
faddl
jecxz
test
cmp
cld
push
cmp
pop
int3
dec
dec
test
xchg
xchg
cltd
out
adc
mov
gs
ss
int
cmpsl
test
pusha
repnz
jmp
aam
mov
mov
call
ljmp
mov
movsl
sub
sub
movsl
mov
scas
hlt
dec
hlt
push
insl
testb
imull
sub
mov
std
fildll
roll
jle
dec
in
repnz
xor
xor
ljmp
mov
cmpsl
loope
cli
cmp
test
js
cld
xchg
mov
js
jb
pop
xchg
add
nop
daa
mov
jae
test
xlat
or
scas
sbb
into
or
xchg
inc
fcoms
mov
push
or
fdivl
cmp
lods
push
hlt
and
or
dec
adc
test
pusha
mov
shll
jo
push
push
lds
into
aas
leave
mov
dec
int
sbb
xor
frstor
mov
rol
iret
xchg
pop
sub
mov
bswap
pop
add
frstor
jnp
jmp
fidivrl
mov
jg
outsb
cmp
mov
mov
push
jnp
rorb
or
sahf
mov
cld
loope
inc
xchg
push
cmp
or
xor
xchg
sbb
psubusw
jae
lahf
scas
add
out
ja
repz
push
mov
lds
in
aam
leave
test
or
dec
call
push
mov
xor
out
stos
movsb
stos
xlat
jo
mov
test
sbb
hlt
sub
test
add
xchg
lahf
mov
pop
mov
cmp
addr16
in
nop
pop
repz
pop
cmp
jmp
mov
adc
mov
and
dec
xchg
xchg
mov
jge
adc
cmp
shl
popa
push
mov
mov
popa
lods
cwtl
sbb
cmp
push
ds
in
aaa
pushf
adc
aas
fwait
sub
imul
fsubl
mov
popf
cmp
push
in
je
mov
out
mov
jo
sub
mov
push
xor
and
repz
cmpsb
je
in
pop
rorb
pop
ljmp
imul
mov
cmpsl
fisubl
mov
lods
dec
xor
sub
push
loope
lods
ret
adc
subb
cmpsb
mov
fistpll
xchg
xchg
xor
cs
mov
and
les
xchg
jmp
loopne
sbb
jge
xchg
lea
int
outsl
mov
jg
sbb
pop
pop
xchg
repz
cmpsb
mov
xor
adc
or
clc
scas
adc
shll
inc
add
fnstcw
and
sbb
mov
push
or
test
pop
sbb
jo
lods
add
xor
insb
xor
out
ljmp
push
nop
push
cltd
xor
mov
add
mov
sub
daa
stos
adc
pop
rcl
scas
adc
popa
xchg
add
push
outsl
fnstsw
data16
int3
lahf
sbb
and
icebp
inc
decb
jae
pop
sub
insb
cmp
xchg
pop
loopne
scas
mov
es
mov
mov
inc
mov
into
jmp
pop
js
and
jl
loope
in
pushf
xchg
pop
push
test
aad
movsl
dec
sahf
scas
fistpll
or
pusha
pusha
cmp
mov
jo
inc
aas
jle
adc
xchg
xor
leave
pusha
pop
stos
xor
or
jbe
cmp
mov
inc
fistl
outsl
fisubs
and
mov
iret
in
jnp
jb
inc
lcall
fwait
bound
xchg
aad
loope
lds
pop
jp
in
pop
cmp
pusha
push
cmp
loopne
pop
xchg
mov
push
push
xlat
movsl
movsb
sarl
xchg
mov
mov
push
inc
aaa
fimuls
cmp
int3
pop
ljmp
push
xchg
sub
mov
outsl
jae
mov
inc
divl
and
mov
sub
dec
lcall
adc
cltd
testl
xor
and
lods
aam
outsb
aad
sbb
mov
mov
pop
sbb
push
add
fdivp
lock
sbb
xor
mov
fists
fs
movl
sbb
iret
in
lods
bound
lea
mov
adc
mov
dec
cmp
dec
mov
dec
into
or
mov
push
add
add
repz
lock
pop
loope
enter
mov
out
shrl
lret
scas
shll
shl
xchg
leave
mov
push
push
xchg
jecxz
pop
lret
ja
outsb
push
in
jg
add
or
mov
jb
cmp
mov
push
push
mov
in
in
cmp
cmpsl
es
pop
dec
xchg
and
les
inc
movsl
mov
mov
std
ds
rorl
jae
mov
lret
dec
fimuls
push
je
mov
ret
xchg
les
jmp
scas
add
push
fiaddl
addl
clc
inc
jno
call
and
dec
jmp
scas
cwtl
sbb
dec
lds
outsb
add
dec
pusha
dec
mov
jl
mov
sub
jl
sub
or
aaa
test
js
out
fldl
push
aam
or
imul
hlt
or
mov
xor
push
cltd
add
xor
adc
lods
adc
pop
and
xlat
mov
lods
jge
sbb
shr
aaa
nop
outsl
in
sarl
das
shrl
mov
repz
cmp
dec
stc
divl
lret
add
pop
push
int3
lds
mov
push
xchg
das
out
push
aaa
pop
ljmp
push
jne
mov
lods
inc
aam
push
out
adc
sbb
sbb
mov
aas
push
mov
cmp
sub
add
cli
enter
dec
add
mov
bound
test
inc
imul
pop
cli
popf
fwait
sahf
mull
add
or
pop
daa
inc
jae
sub
fs
inc
mov
cmp
in
xchg
adc
add
scas
mov
dec
pusha
jnp
cltd
xchg
ja
add
fwait
xor
jle
jns
test
lret
ret
dec
out
out
std
inc
push
fxch
movsl
test
jnp
sahf
push
shll
add
push
xchg
inc
cld
repnz
lcall
ret
sti
dec
pop
and
jle
iret
int3
lock
push
sbb
cmp
fidivl
imul
jecxz
push
xchg
call
push
divb
xchg
pop
jp
insb
push
push
mov
das
js
push
fsubrs
cmp
or
adc
cmp
insb
pop
sbb
es
xor
inc
xlat
out
xor
fdivrs
repz
pop
shrb
insl
add
fisubrl
into
test
ret
pusha
and
andb
jg
fnstcw
mov
pop
insl
rorl
out
call
add
push
pushf
sub
mov
xor
push
push
sub
push
andb
inc
dec
cmpsb
fsubrs
push
mov
lahf
jle
fwait
adc
jne
pop
xchg
and
jns
or
xor
in
xor
and
xchg
sahf
cmp
test
das
dec
jns
inc
jae
mov
fisubl
mov
sbb
pop
jae
test
subl
xor
mov
comiss
xchg
mov
daa
sarb
ja
jp
lods
jno
mov
jle
mov
into
les
mov
int
jnp
repnz
loop
push
adc
adc
pop
pop
inc
mov
lret
dec
sbb
les
dec
mov
adc
cmp
sub
lahf
jo
jne
icebp
pop
pop
push
mov
nop
cmp
popf
push
test
sahf
int
sti
arpl
xchg
push
add
inc
cs
jb
out
pop
mov
push
stos
push
sbb
or
push
xorb
and
data16
jns
ss
sbb
jl
rcrb
stos
test
push
mov
jbe
scas
es
stos
sbb
lds
out
xlat
push
mov
jp
sub
push
dec
mov
add
push
mov
jo
lock
addl
repnz
jno
sbb
xchg
sbb
add
dec
mov
jge
xchg
dec
jae
in
xor
dec
or
jecxz
adc
rclb
lahf
int3
mov
inc
and
inc
popf
sbb
xchg
pop
in
pop
mov
in
pop
popf
shll
mov
addr16
adc
add
and
out
pop
imul
lods
fwait
in
dec
xlat
jne
mov
jp
push
sub
push
xchg
sub
cmp
mov
movsb
push
addr16
mov
das
insl
ds
imul
lock
mov
out
je
movsb
or
mov
dec
adc
ss
ja
or
pop
mov
adc
xlat
lds
fwait
sub
popa
lds
jmp
pushf
or
jge
push
loopne
sbbl
fwait
and
out
push
icebp
sbb
in
mov
jmp
mov
push
fwait
dec
imul
mov
inc
sub
push
or
ret
or
popa
jecxz
mov
neg
js
lcall
insl
jae
add
dec
imul
dec
pop
pop
ss
cmpsl
fisttps
in
pushf
inc
cltd
adc
jmp
insb
andl
movsb
mov
iret
mov
sbb
hlt
sbb
sbb
pusha
in
ds
fisubrs
cmc
fidivs
cmc
or
pop
icebp
stos
or
sahf
out
test
cli
lea
popa
mov
aas
pop
adc
jge
mov
loop
fnstcw
ljmp
pop
sub
call
xchg
leave
clc
dec
cmp
jb
dec
add
js
add
test
sub
sub
xchg
fbld
or
lcall
jae
not
inc
inc
or
lods
sub
sub
arpl
or
inc
scas
fcmovb
stc
mov
int
dec
push
cld
and
test
sub
es
sbb
xchg
lea
in
cmp
mov
test
or
dec
pop
and
sar
outsl
pop
popf
sbb
subl
fisubrs
or
add
cmp
push
xchg
mov
cmp
mov
inc
mov
pop
mov
ljmp
jb
or
sbb
in
add
or
push
stos
loop
dec
popf
mov
pop
push
jecxz
test
cmc
add
mov
adc
ljmp
jmp
adc
arpl
adc
icebp
stc
pop
inc
or
sbb
fisttpl
pushf
jne
mov
addr16
shlb
push
adc
inc
xor
pop
ss
and
repz
cmp
pop
iret
adc
mov
cmp
jecxz
outsb
inc
out
cwtl
add
push
xor
in
cmpsl
push
cmp
mov
adc
pop
jo
leave
fs
in
es
mov
test
sub
arpl
and
pop
jne
sbb
cmc
sbb
sahf
lcall
in
jmp
xchg
roll
ja
push
or
xor
adc
pop
inc
mov
xor
clc
sbb
js
aam
in
test
and
jg
xchg
ja
enter
inc
pushf
sub
cli
fcoms
mov
or
and
sbb
ss
hlt
into
sub
pop
in
movsb
subl
push
cmp
ja
ret
sbb
mov
sti
sahf
sub
sub
xor
loop
sub
pop
jecxz
dec
lea
cmp
loope
inc
enter
and
or
out
xchg
jne
mov
fsubrs
cwtl
icebp
in
daa
push
mov
sub
lcall
bound
jmp
daa
cmp
mov
rorl
mov
push
jmp
jno
jl
or
sub
sarb
pop
pop
jno
mov
mov
cwtl
adc
pop
mov
mov
and
inc
fnstcw
insl
divl
or
add
stos
ljmp
jae
movsb
fdivrs
iret
add
mov
aad
addr16
dec
fdivl
fimuls
loop
and
sbb
cmp
xchg
sbb
icebp
pop
std
xchg
adc
add
push
loop
dec
push
jle
push
push
mov
xchg
adc
jno
inc
aas
inc
mov
mov
and
mov
aaa
lods
mov
popa
sub
out
pop
stos
stc
adc
pop
cmp
sbbl
inc
cli
aad
call
mov
dec
jns
out
jo
mov
fildl
or
or
les
xchg
jl
int3
inc
pop
int3
jmp
decl
push
add
cmp
sub
in
jle
dec
pop
push
and
and
scas
loope
das
xchg
cmp
push
lret
pop
aas
and
pop
loope
sub
into
mov
mov
push
data16
pop
leave
cmp
jle
jecxz
and
nopl
daa
sahf
xorb
inc
mov
push
aas
jecxz
or
in
and
in
mov
jle
popa
pop
es
inc
lret
shrb
loope
test
push
test
das
es
pcmpeqd
and
in
xchg
push
leave
arpl
scas
push
mov
push
lock
data16
jo
cmp
cmp
fldenv
fcmovbe
mov
lock
dec
rcrb
fs
lock
cli
sub
cmp
out
mov
les
ret
mov
xor
mov
nop
sarl
jp
mov
fnstenv
pushf
in
xchg
pop
mov
rcll
cmpsl
adc
mov
rcrb
fcmovnb
out
xor
dec
sbb
imul
mov
fwait
and
cmp
mov
xor
mov
fistl
in
dec
xchg
in
mov
or
mov
in
pop
xchg
xchg
and
movsb
jae
insl
mov
xchg
jle
push
xchg
mov
cmp
call
sub
shll
mov
enter
and
in
mov
inc
scas
jo
leave
addr16
ds
xchg
test
pushf
xor
stos
aaa
lods
xor
or
jae
add
cmp
fprem
fwait
xchg
mov
add
jle
jb
jnp
rorb
and
adc
cmp
ret
mov
outsb
and
sub
ficoms
sub
sbb
push
sub
xchg
add
jmp
add
jns
pop
dec
add
sub
dec
pop
pcmpgtd
mov
sbb
add
leave
sbb
shlb
add
stos
addr16
fdivr
pushf
add
sbb
cmp
sbb
bound
jecxz
test
inc
mov
stos
sub
pop
pop
push
es
enter
std
cmp
notb
add
aas
fisubl
pushf
cmp
mov
test
int3
cmp
in
jge
fiadds
lcall
push
mov
ret
es
jnp
mov
mov
test
mov
movsl
dec
and
xchg
insb
shll
dec
push
test
jo
and
loop
add
lahf
repnz
pushf
cmpl
pop
pusha
arpl
out
xchg
fdivp
cltd
ret
or
sub
xlat
sub
dec
and
aam
outsl
cmpsl
or
mov
inc
xor
inc
addl
jle
push
out
fisttpll
aad
jo
xchg
sbb
xchg
cld
lcall
fadd
and
rorb
ss
sub
shlb
lea
push
mov
mov
stc
cmp
ret
sarl
pop
lcall
popf
inc
cmpsb
es
mov
pop
adc
inc
push
in
push
fnstenv
push
insb
js
sub
jp
cwtl
test
int3
dec
or
jo
or
ret
and
popf
ret
mov
test
loop
outsb
lock
and
lock
inc
jo
shr
or
push
and
lret
xor
lret
dec
xorl
xor
out
dec
sbb
lods
push
es
bound
rolb
es
dec
mov
in
pop
in
push
mov
cwtl
xor
pop
sub
pop
into
rcll
rorl
cli
dec
jae
mov
dec
mov
push
subl
cmp
sub
inc
dec
mov
dec
lcall
pop
lea
rcrl
test
mov
push
xchg
jle
xor
or
lahf
push
jmp
xchg
pop
inc
jge
pop
mov
loope
or
mov
call
xor
dec
adc
push
movsl
jl
pop
jns
push
loope
pop
cltd
js
shl
sahf
shrl
push
or
jmp
stc
test
and
or
add
insl
loop
std
in
fldenv
clc
test
les
adcl
testl
jg
ds
outsb
das
xchg
lret
aas
daa
mov
test
lahf
inc
mov
test
or
xor
loopne
aad
int3
cltd
xchg
loopne
lcall
lods
inc
mov
push
repz
stc
sbb
je
mov
mov
hlt
adc
int3
cmc
lods
cmpsb
dec
arpl
sti
lcall
add
xchg
sub
fcmovnb
test
dec
pusha
ljmp
xor
push
in
cmc
inc
mov
and
insl
add
mov
jecxz
inc
leave
push
push
pop
test
mov
pop
and
cmpsb
sbb
ficomps
mov
pop
mov
fcmovb
adc
and
std
pop
mov
mov
out
outsl
addb
push
inc
cmpl
cvtpi2ps
je
xlat
sahf
mov
pop
jl
or
jae
inc
imul
xor
sbb
int
mov
repnz
adc
sbb
aam
sbb
cmc
mov
inc
into
xlat
les
outsb
cmp
or
mov
popf
push
mov
push
clc
lods
shll
jb
mov
xchg
xchg
out
les
xor
test
dec
and
lds
scas
mov
xor
ljmp
outsl
or
sbb
fisubrl
or
popa
test
cmc
gs
inc
sbb
jmp
adc
shrl
in
jp
inc
mov
outsb
mov
sti
rorb
dec
push
sub
sub
ja
cmp
sarb
ret
inc
pusha
xor
popa
outsb
mov
cli
cltd
fs
idivb
adc
popf
push
pop
sbb
aaa
test
call
sbb
cmp
sbb
gs
jmp
ret
mov
mov
xor
scas
dec
stc
inc
or
and
xchg
fwait
inc
xor
pop
jb
or
js
test
pop
lret
jecxz
subb
jp
sbb
into
mov
dec
dec
add
inc
adc
inc
xor
in
es
cmpsb
ret
xor
pop
sub
inc
add
add
dec
jle
mov
pop
gs
cmp
push
sbb
stos
jge
push
or
iret
sbb
jge
and
pop
push
out
xor
jg
push
test
bound
int
pop
insl
ja
int
in
dec
pop
pushf
xchg
and
jg
sahf
mov
ret
outsb
mov
insl
rcll
lea
pop
push
push
pop
aas
mov
int3
rcrl
add
jbe
xlat
add
lods
inc
inc
cs
adcl
mov
add
sbb
or
insl
sbb
stc
lcall
pop
insl
or
rorl
loop
dec
lcall
or
repz
scas
out
xchg
in
mov
xor
ds
lock
scas
sbb
nop
and
mov
adc
inc
mov
int
sahf
je
clc
cmp
scas
jg
push
pop
std
dec
mov
dec
mov
xchg
insl
dec
push
jmp
js
out
or
sbb
pop
cmpsl
dec
icebp
cltd
push
mov
outsl
popf
mov
inc
xor
add
sbb
mov
fadd
and
and
cld
mov
inc
lcall
sub
pop
mov
xor
sbb
cmpsl
adc
jne
jl
push
sbb
lahf
fwait
cmp
cmp
ret
sbb
shlb
mov
aaa
add
in
decl
push
inc
sbb
adc
lret
cmp
aas
inc
or
leave
test
pop
add
push
std
call
jmp
aas
notl
xor
or
sub
aas
inc
jns
lock
mov
shr
hlt
sub
push
sbb
bound
out
push
das
add
outsl
mov
lea
popf
pop
mov
jo
pop
shlb
xchg
sub
loope
std
aaa
sbb
je
mov
cs
fs
test
in
shll
outsb
sbb
add
js
mov
mov
cli
iret
popa
sub
push
sbb
aam
xchg
mov
mov
xor
push
add
je
push
es
data16
jle
xorl
rcr
add
in
rcrl
cmpsb
in
cmpsl
and
pop
movsl
repz
dec
outsb
pop
lds
add
pop
gs
fsts
mov
repnz
test
in
or
lcall
ljmp
xchg
test
inc
add
jle
rcrl
stos
xchg
xchg
in
xchg
pop
push
bt
push
xor
pop
cmp
pop
fs
repz
and
fs
outsb
test
jb
clc
es
jb
gs
aas
mov
jae
cmpsb
push
negl
mov
adc
pop
inc
push
adc
sahf
sti
fbld
push
xor
testb
orl
pop
inc
ret
cmp
jo
lods
xchg
inc
pop
sarb
iret
in
stos
popf
aam
adc
inc
pop
call
xchg
fmull
xchg
and
sub
sarb
mov
xor
hlt
lods
divl
jmp
fcoms
mov
ljmp
incl
or
adc
mov
pop
push
pop
lods
imul
out
bound
daa
in
sar
fstpl
sub
ds
aas
cmpsb
push
xor
mov
xor
fdivr
mov
sub
jbe
mov
fptan
sbb
loope
cmpb
orb
mov
ret
sub
mov
loopne
or
xchg
pop
mov
and
fisttps
in
sarb
push
mov
or
cmpsb
mov
pusha
or
ret
mov
nop
xor
mov
mov
jne
sbb
jge,pn
inc
pushf
mov
dec
inc
mov
repz
sti
inc
or
stos
shlb
jecxz
leave
push
lahf
data16
cwtl
cs
shlb
xchg
mov
inc
sub
arpl
inc
pushf
xchg
in
and
stc
rolb
cmp
lret
movsl
push
repnz
push
or
cli
stos
test
push
stos
jecxz
daa
mov
sbb
aas
push
and
in
push
movsb
in
pop
jns
sti
push
xor
pop
adc
pop
aam
int3
pop
cmc
xchg
sbb
inc
xchg
test
add
push
add
aam
dec
pop
mov
push
pop
and
push
mov
cs
test
int
aas
sbb
aad
jnp
int3
ss
and
jnp
mov
fdivs
sbb
outsl
outsl
cmpsl
jne
int3
and
loopne
or
lret
mov
mov
sbb
inc
in
sbb
cmp
gs
mov
inc
push
cmp
jbe
into
sub
xor
nop
fadd
push
sbb
add
stos
in
rolb
xchg
lahf
inc
scas
mov
inc
lret
xor
cmp
mov
fcompl
add
pushf
shll
cmpl
mov
pushf
pusha
incl
sti
jp
push
insl
cmp
or
imul
jecxz
mov
and
mov
and
loop
mov
push
push
inc
cmc
loop
push
mov
jp
and
dec
xchg
movsb
icebp
xlat
dec
cmp
add
roll
xchg
arpl
dec
mov
gs
mov
inc
fistpll
jnp
mov
jg
xchg
push
dec
xor
jl
push
mov
inc
xchg
sbb
addr16
iret
lods
loope
icebp
repnz
and
pushf
imulb
adc
cmp
pop
enter
loope
lea
add
mov
loopne
pop
testl
out
and
jno
hlt
in
sub
out
in
cwtl
jno
lahf
psrlw
popl
jbe
ljmp
popl
aaa
adc
mov
mov
pop
or
mov
out
cmp
add
sbb
test
in
fs
nop
pop
fwait
lock
jp
enter
adc
push
shr
stc
divl
mov
in
dec
mov
flds
incl
xchg
cmpsl
repnz
jno
push
push
lods
mov
cmp
sub
pop
loope
xor
test
inc
std
divb
ret
xchg
lcall
pop
rcll
push
jne
rcrb
push
sub
ss
in
cmpsl
sub
add
cmp
adc
cltd
jbe
sub
adc
mov
pusha
jbe
add
leave
cmp
jb
mov
sbb
adc
dec
push
scas
pop
adc
lcall
movsb
rol
call
push
xlat
xor
jg
jle
sbb
cwtl
push
dec
pop
addb
and
shlb
inc
mov
cmc
pushf
inc
lret
push
in
jmp
movsl
adc
jnp
xchg
mov
outsl
mov
cmp
stos
out
out
sub
jmp
xor
dec
repz
push
cld
in
icebp
push
aaa
repz
inc
lock
jb
ret
mov
test
loop
negb
cmpsl
xor
push
je
and
out
movsl
xor
notb
pop
jp
cmc
mov
push
mov
gs
scas
loope
adc
jg
and
daa
jb
jle
pop
std
mov
add
ljmp
testl
mov
jg
stos
adc
and
adc
ja
mov
dec
xchg
fstps
cmp
add
bound
lds
push
or
int3
push
pusha
xchg
pop
loopne
mov
push
jmp
in
adc
mov
stos
loopne
enter
dec
and
ret
cwtl
fimuls
jp
xor
jp
test
icebp
mov
lcall
or
lea
mov
push
add
lods
sbb
js
lock
leave
inc
addl
cmpsl
jge
ljmp
ljmp
sub
outsl
ficoms
xor
in
repnz
dec
test
push
pushf
enter
mov
pop
push
push
adc
clc
das
pop
pop
xchg
mov
das
pop
stc
stc
xor
leave
pusha
enter
add
jp
mov
mov
xor
mov
outsl
out
adc
pop
adc
inc
xor
or
outsl
push
push
js
xchg
gs
and
pushf
inc
shlb
out
and
fs
insb
mov
add
fcmovb
fistl
push
sbb
popa
cmp
mov
cwtl
mov
bound
fisubs
dec
xchg
jecxz
push
pop
or
xchg
nop
filds
mov
push
mov
and
int3
sbb
mov
test
xor
mov
dec
xchg
push
mov
jnp
mov
into
dec
pop
or
cs
sub
mov
adc
pmaddwd
fisttps
push
outsb
addr16
es
aam
pop
inc
nop
loop
fsts
ss
inc
mov
into
add
adc
mov
jae
ret
push
inc
ss
fdiv
xor
out
shl
push
jbe
cmp
pop
sub
push
lock
sub
mov
cmpl
add
sbb
push
cwtl
enter
icebp
mov
sub
inc
inc
lret
ret
test
pop
fwait
jae
aaa
xlat
sub
rcrb
and
enter
lret
fiadds
cmpsl
mov
cmpl
outsl
shl
mov
out
sub
mov
pop
leave
sbb
adc
sub
mov
ljmp
sahf
ret
cwtl
mov
fistpl
jae
mov
mov
hlt
pop
pusha
test
andl
adc
cmp
xor
pop
push
mov
mov
mov
popf
inc
mov
sbb
push
loope
fstp
add
lcall
popa
int
popa
adc
test
mov
mov
inc
cmp
cltd
call
cmp
sub
mov
hlt
fidivrs
jl
cmpsl
movsl
mov
pusha
pop
dec
sbb
cmpsl
mov
dec
ret
ror
and
inc
cmp
dec
loope
lock
iret
cmp
mov
scas
push
fbld
fists
xor
push
xchg
pop
push
fmul
jp
nop
dec
lret
sarl
and
pop
jne
es
xchg
xchg
inc
push
push
loop
addb
test
add
fldl
subb
pop
popa
fsts
arpl
jbe
test
jle
test
popa
adc
pop
inc
invd
push
dec
ss
sbb
or
mov
out
popf
push
pusha
lds
xchg
leave
in
in
inc
enter
ret
add
jecxz
setb
cmp
push
movsl
cmp
das
lahf
add
in
idivb
mov
sbb
leave
iret
pop
jbe
xor
bnd
sub
jno,pn
mov
nop
adc
mov
and
xchg
mov
popa
push
scas
insl
mov
rep
ja
xor
ret
int3
and
push
add
pop
leave
jo
lods
out
adc
mov
orb
cmp
jp
ss
xor
stos
icebp
push
dec
or
dec
jae
adc
insl
push
add
call
dec
and
push
or
aam
imul
pop
adc
jb
dec
push
and
in
push
push
push
aaa
jecxz
xchg
fcoml
imul
insb
lds
pushf
bound
out
cmp
outsl
add
sbb
sahf
bound
xchg
cwtl
inc
out
pop
push
sub
ret
test
icebp
in
add
popa
adc
pop
inc
jne
lods
push
scas
int
jno
inc
cltd
add
jnp
sub
js
subb
into
aaa
xlat
xchg
daa
mov
sbb
and
std
mov
jl
je
adc
ss
jp
mov
xor
call
and
fmull
xor
inc
imul
mov
jmp
stc
sub
push
xchg
adc
dec
loop
jb
ret
subl
ds
and
inc
cmc
jo
jno
inc
jl
pop
jbe
pop
adc
xchg
stc
dec
stos
hlt
mov
sub
movsb
arpl
pop
push
xor
mov
mov
push
movsb
mov
roll
mov
jl
mov
pop
addr16
pop
xchg
push
sub
stos
sub
pushl
xor
cwtl
dec
iret
add
loope
adc
cmp
outsl
jp
push
les
jp
push
ss
jns
mov
mov
cmp
and
fstl
pop
mov
jb
or
jae
inc
not
jl
lods
push
mov
ljmp
adc
xchg
cmp
lahf
call
loopne
mov
cwtl
shll
mov
ljmp
pop
cmp
push
jmp
hlt
jb
add
add
jbe
pusha
stos
stos
push
es
clflush
mov
cmc
pop
inc
jle
aad
xchg
add
daa
push
jge
in
lret
std
int
xor
pop
mov
pop
cmp
or
push
jno
and
sub
adc
arpl
cmpsb
sbb
mov
xchg
dec
mov
lods
dec
xor
xor
orb
push
test
fstl
jno
mov
cli
jl
pop
push
add
adcb
insl
ljmp
fsubrl
insb
out
mov
rolb
add
xor
dec
movsl
stos
sbb
xchg
aaa
sbb
les
out
stos
cmpb
sub
mov
fdivrp
imul
dec
pop
cltd
inc
xor
and
adc
mov
mov
dec
popl
jno
dec
clc
mov
push
push
sub
sub
xchg
push
incb
mov
dec
in
xchg
gs
push
icebp
or
cmp
xchg
movsb
ret
inc
nop
sti
iret
and
mov
callw
imul
jo
scas
mov
add
arpl
pop
pop
sub
pop
xchg
stc
test
out
fnstcw
or
lds
adcb
pushf
out
mov
adc
adc
sbb
je
scas
cs
jne
int3
enter
dec
int3
adcb
jo
pop
push
jno
push
inc
add
pop
lcall
cs
and
lea
fidivs
movb
lods
sbb
cld
bound
push
mov
jecxz
fisubs
iret
mov
lcall
push
fwait
aam
lahf
test
enter
int
insb
popf
push
sbb
mov
add
inc
inc
sbb
test
adc
push
mov
xor
adc
sub
lods
adc
mov
xchg
sbb
jle
pop
inc
cmp
add
mov
jp
adc
fdivrs
add
pop
test
lcall
outsl
loop
inc
adc
cmpsb
imul
sbb
cltd
clc
inc
jg
inc
scas
fmull
loope
leave
dec
cltd
sbb
pop
movsl
cld
mov
mov
mov
pushf
mov
or
and
outsb
mov
pusha
into
add
push
pusha
sub
sbbb
adc
cmp
mov
imul
or
imul
ror
test
pusha
push
js
pop
lahf
cmp
das
mov
std
decb
sub
lods
or
cmp
mov
sbb
sbb
into
pop
pop
push
nop
mov
ja
enter
aaa
and
jne
lock
mov
mov
fcoms
dec
sbb
push
out
mov
lahf
mov
lcall
push
movsb
sarl
int3
popf
or
test
iret
aam
stos
in
std
mov
imul
push
push
xlat
icebp
int
xchg
rclb
xchg
adc
mov
pop
xchg
ret
or
add
and
add
mov
es
inc
add
jge
and
and
stos
xor
inc
xor
rol
xor
xchg
pop
inc
and
insb
mov
sub
pinsrw
lods
sub
jb
push
popf
dec
fs
mov
outsb
hlt
pop
adc
enter
lock
fxch
jl
fs
pop
gs
xorl
adc
mov
sbb
es
jnp
pop
addb
inc
push
out
push
mov
rcrb
lea
cmc
arpl
lret
sete
lahf
lret
icebp
pop
cmpsl
xor
nop
mov
sbb
add
mov
and
cwtl
daa
mov
inc
mov
cli
jns
cmp
dec
sub
shll
daa
js
je
or
adc
movsb
pop
test
push
mov
xor
daa
jmp
out
mov
bound
icebp
stc
push
loop
pop
inc
and
jne
pop
mov
jmp
cmp
aas
cmpsl
icebp
aaa
mov
imulb
adc
jbe
inc
mov
pop
ds
cli
mov
rorl
cmp
fsts
push
add
insb
mov
jg
jle
adc
sbb
jmp
repz
mov
lea
pop
roll
negl
rcrb
sbb
mov
loope
clc
pop
sbb
jp
add
cwtl
inc
lods
in
mov
into
or
test
stc
add
stos
imul
mov
cs
sbb
lea
mov
dec
arpl
xchg
cmpsb
das
nop
hlt
cs
add
jecxz
jae
out
popf
lds
mov
mov
xlat
loop
add
out
xor
rcll
arpl
sbbb
leave
js
hlt
scas
dec
mov
cmp
inc
push
mov
xlat
cltd
xlat
cli
push
cmp
shll
push
xchg
inc
stc
push
pop
repz
ret
loop
inc
jns
shlb
cmp
and
cmpsb
imul
fstpl
sub
adc
mov
clc
mov
mov
fidivs
in
and
das
mov
ds
mov
sub
cmp
cmp
les
dec
jns
push
lcall
shlb
ja
inc
inc
out
cmpsb
hlt
push
cmc
jbe
sbb
mov
pop
xchg
repz
adc
stos
jbe
push
pop
sbb
jne
int3
add
pop
mov
push
inc
lcall
dec
mov
pop
fistpl
add
cli
sbb
adc
lea
fisttpl
or
push
jb
addr16
lods
iret
inc
mov
jmp
in
push
sbb
pop
inc
fnstenv
xchg
pop
cwtl
dec
adc
popf
call
ret
mov
cmp
bswap
ss
fsubrp
xor
insb
mov
sbb
cltd
fldt
mov
ror
sbb
jmp
xor
push
out
jg
sub
and
sub
jb
and
xor
lock
roll
inc
nop
or
cmpsb
pop
sbb
mov
pop
les
jo
lcall
pop
imul
imul
sub
clc
mulb
mov
imul
sub
movsb
lcall
xor
jecxz
lret
loop
cmpsl
aaa
pop
dec
inc
mov
popf
pop
xchg
push
jne
push
ss
fwait
cwtl
fadd
xchg
sub
sub
dec
adc
imul
mov
mov
mov
adc
test
push
mov
fpatan
sbb
call
xchg
jnp
mov
and
mov
std
xchg
enter
mov
insl
xlat
push
out
adc
mov
sbb
push
lods
sub
jecxz
cmpsb
rcrb
sub
test
pop
fwait
jmp
ss
fsubs
bound
scas
fadds
pusha
xchg
shrl
push
arpl
sti
test
xchg
loopne
in
stos
rcr
pop
cmp
ds
xor
out
xor
enter
push
ficomps
dec
xacquire
lea
cmp
and
dec
xor
stos
es
xchg
push
ret
sub
mov
adc
stos
inc
push
in
xor
fbstp
lret
adc
or
mov
pop
icebp
subl
mov
pop
add
pop
fldenv
adc
jge
mov
sub
cmp
pop
lcall
fdivs
cwtl
test
mov
mov
in
and
cltd
adc
leave
xchg
repz
mov
lret
pop
jge
or
jmp
lock
pop
sbb
loop
icebp
pop
out
jno
call
addb
mov
sub
xor
pop
push
xchg
out
push
mov
pop
andl
dec
sub
inc
mov
jecxz
outsb
into
jmp
jmp
std
fcomi
insl
add
lahf
adc
jecxz
movsl
mov
cltd
loopne
fstps
jns
testl
sarl
cmovl
std
popa
popf
stos
jl
mov
cs
jo
push
mov
mov
jbe
mov
xchg
ret
lret
pop
xchg
mov
or
leave
mov
cmp
sub
sbb
xchg
int
leave
fimuls
dec
ret
fcomps
mov
xor
cmp
push
mov
push
repnz
inc
fsubrl
add
jge
popf
jp
call
imul
xchg
and
hlt
fwait
mov
jbe
pop
xchg
or
sbb
cmp
ss
jns
sbb
mov
jo
adc
dec
subl
movsl
sbb
cmp
aam
ffreep
test
jae
cwtl
cmp
mov
fwait
mov
or
repz
test
mov
into
addr16
add
add
fidivrs
andl
sbb
xchg
stc
rcrl
out
js
pop
outsl
inc
mov
scas
jbe
test
leave
out
adc
jl
pop
andb
sub
mov
dec
aad
xchg
xorl
mov
mov
dec
out
fists
dec
pop
dec
pop
dec
jae
enter
and
sbb
pop
xchg
movb
push
clc
dec
ret
mov
movsb
or
mov
cmp
cli
data16
and
push
into
fnstsw
xor
cli
add
out
repnz
or
icebp
mov
icebp
inc
push
out
adcb
push
movsb
add
sbb
shrl
shlb
mov
xlat
adc
in
sarl
sar
lock
int3
aam
pop
push
sarb
push
fldl
adc
mov
push
imul
hlt
add
and
mov
int
stos
lock
or
xor
jnp
push
xchg
js
insl
mov
sahf
pop
mov
add
mov
lcall
sti
out
adc
pop
pop
arpl
xchg
cmp
dec
push
xchg
mov
mov
dec
pop
loopne
sbb
sbb
aas
out
adc
add
mov
sub
hlt
inc
push
mov
loop
popf
cmp
insb
push
inc
jp
or
bound
push
dec
and
std
leave
mov
mov
daa
add
push
xchg
add
adc
jo
or
sahf
movsb
das
clc
movsb
sub
pop
and
cmp
cltd
lods
ret
mov
xor
cmc
adc
jne
pusha
lret
dec
dec
imul
or
jl
clc
xchg
add
das
pop
pop
test
stc
pop
xor
jg
mov
popa
adcl
cmpsb
mov
mov
cs
mov
mov
jmp
popa
jl
jbe
or
adc
mov
or
cwtl
lea
adc
lods
jno
div
in
fcomps
lgs
sahf
mov
dec
mov
shll
mov
adc
imul
aaa
andl
in
xlat
repz
jns
negb
xchg
push
mov
cmp
loope
pop
push
mov
loopne
jo
ss
lret
push
xor
xchg
push
aad
jnp
cld
fwait
pop
into
or
or
cmpb
push
pop
push
mov
dec
inc
adc
sbb
ret
scas
out
xor
stos
dec
xor
mov
outsl
pop
sub
hlt
fwait
sub
enter
test
loope
push
inc
nop
adc
rcll
call
inc
test
fistpl
xchg
sub
ja
pushf
sbb
xchg
fildl
movsl
pushf
ds
shrb
jbe
sbb
cmc
icebp
mov
xchg
sub
mov
sub
xchg
inc
inc
cmp
mov
orb
or
mov
stos
lret
sbb
push
or
inc
adc
sbb
loop
bswap
push
mov
cltd
xchg
push
nop
xor
aaa
mov
lahf
shlb
cwtl
das
or
ljmp
stos
or
aam
ret
div
test
outsl
pop
adcb
call
fsub
xchg
mov
mov
hlt
mov
lahf
push
push
sbbl
in
ds
xlat
inc
popl
fldcw
les
outsb
movsb
xchg
in
je
lahf
into
xlat
sub
lahf
mov
lcall
pop
movsl
jns
mov
mov
add
jle
sbb
jge
lahf
out
mov
lods
mov
or
out
aam
test
adc
movsl
jmp
iret
sbb
pop
cs
sahf
xchg
lods
or
lock
in
adc
jge
or
imul
je
das
sub
fxch
icebp
and
mov
mov
jne
and
fistl
sbb
mov
push
xor
ljmp
or
rclb
mov
push
dec
cwtl
push
adc
jno
dec
adc
test
outsl
xchg
int
arpl
mov
and
sub
inc
sahf
gs
lock
loopne
int3
das
popf
dec
enter
xchg
rcr
cld
sti
std
cmp
aam
inc
pop
dec
pop
shll
lock
mov
bound
mov
stc
lret
mov
stc
and
je
inc
pop
adc
inc
out
add
neg
jns
pushf
js
ret
push
clc
mov
jmp
xchg
mov
sbb
sbb
movsb
insb
mov
rol
test
inc
mov
jmp
pop
int3
push
pop
inc
cwtl
std
aad
cmpsb
frstor
pop
insl
mov
adc
or
mov
bnd
test
lahf
enter
pop
mov
pop
repnz
cltd
invlpg
mov
inc
jmp
mov
dec
add
popf
fistpl
test
mov
shrl
repnz
or
jns
call
push
inc
data16
jp
popf
ret
xchg
outsl
enter
out
adc
aam
loopne
shlb
cmp
mov
pop
mov
leave
mov
fidivs
jp
push
bound
dec
lods
or
push
lret
das
in
enter
lods
sbb
aas
stos
dec
repnz
pushf
pop
mov
call
mov
icebp
push
outsl
addb
or
fwait
xchg
addr16
cmp
adc
or
add
sbb
and
push
add
test
pop
add
jp
rcrl
adc
xor
sub
imul
mov
mov
cltd
ss
jne
nop
cmp
cmp
fldt
stos
pop
dec
mov
or
outsb
sbb
loope
sbb
sub
mov
xor
cld
daa
int3
or
sbb
push
repz
insl
push
add
and
pop
jl
popa
sub
movsb
mov
in
push
rcl
aam
aaa
dec
lret
jo
enter
or
add
lea
xor
fadd
divb
mov
les
or
mov
mov
inc
rcrl
dec
clc
inc
imul
xor
add
inc
add
cmp
mov
es
cs
sub
xchg
xor
sbb
sub
mov
sahf
mov
dec
push
mov
insl
xchg
insl
out
or
stos
out
call
sub
rcrl
rcrb
jo
dec
mov
xchg
cmpsl
jns
jb
sarb
shl
and
lahf
pop
out
mov
xchg
pusha
shrb
sbb
aas
adc
and
xor
pop
iret
pop
icebp
mov
pop
sub
inc
sub
jbe
cs
int
lods
testb
lret
dec
mov
add
aad
mov
adc
pop
dec
test
icebp
pop
loop
dec
push
xor
dec
dec
dec
sub
mov
push
mov
inc
loopne
xchg
and
fimull
arpl
stos
icebp
xchg
shlb
jge
push
mov
pop
cld
sbb
xchg
jnp
andb
adc
ret
xchg
jge
add
jg
mov
test
jmp
mov
testl
inc
stos
mov
jne
scas
fcompl
cmpsl
inc
sahf
xor
cmp
mov
or
xchg
xchg
lret
pop
inc
adc
notb
push
rcrl
out
mov
ret
ficompl
std
add
xor
fidivs
mov
es
pusha
mov
pop
cmpsb
and
xchg
pop
mov
cmpsb
pop
mull
sub
fsub
push
sub
clc
mov
insb
data16
push
lret
xchg
push
fwait
test
pop
es
ss
in
xorb
mov
fwait
adcb
push
sbb
cmp
incl
mov
je
movsl
and
push
imul
xchg
or
inc
pop
sbb
stos
pushf
xchg
cmp
add
nop
enter
push
dec
jnp
ret
jl
movsb
mov
sbb
jecxz
stos
mov
jmp
mov
pop
jae
adc
in
cmp
mov
or
insb
sbb
adc
add
mov
test
mov
cmp
jle
fistpll
mov
imul
frstor
mov
sub
popf
push
mov
or
pop
mov
in
push
adc
je
sub
dec
add
notb
sahf
adc
lret
cltd
jae
mov
or
push
xchg
test
sbb
out
aam
mov
cs
xchg
ss
mov
cmp
std
jbe
cmp
pop
ficomps
test
mov
mov
in
mov
cmpsl
repnz
jae
push
xchg
popf
outsl
shrl
mov
insb
sub
sbb
rorl
mov
stos
addr16
inc
and
lods
mov
mov
test
push
daa
add
inc
adcl
mov
xor
mov
jmp
aam
mov
inc
mov
dec
out
int
lock
repnz
dec
lcall
cli
mov
sub
dec
jle
out
mov
jp
lea
fnstsw
dec
pop
xchg
mov
lret
mov
leave
dec
movsb
jno
test
lret
mov
xchg
dec
jmp
add
mov
inc
cltd
xor
mov
orb
jnp
dec
test
lret
mov
mov
rorl
mov
out
push
out
shll
icebp
or
or
mov
pop
pop
lods
les
adc
sub
pop
shl
xor
out
addb
mov
inc
adcl
ret
negb
pushf
fidivs
cmp
adc
out
jle
sbb
sub
and
pop
mov
inc
popf
pop
pop
cmpsl
scas
ret
xorb
push
loope
jl
jle
mov
pushf
movsb
cmc
mov
arpl
repnz
cmp
test
pop
xorb
popf
sub
or
out
mov
mov
aam
push
jb
add
cmp
rcrb
jg
xor
and
bound
mov
lahf
xor
std
cmc
nop
movsl
cwtl
lret
lret
lret
jae
cmpl
jo
data16
mov
sub
ret
mov
imul
nop
adc
inc
xor
sbb
jb
insb
sbb
out
testb
cmp
imul
std
sub
bound
mov
jl
sbb
repnz
stc
stos
mov
jge
lahf
repz
dec
mov
mov
addr16
sub
fs
pop
pusha
add
outsl
jle
icebp
cltd
mov
mov
imull
clc
repz
or
inc
js
and
jmp
lods
mov
jno
adcl
mov
mov
pop
push
xor
pop
cmp
xor
mov
rolb
or
xchg
cmpsb
inc
shrl
pop
push
and
or
je
push
xchg
lcall
out
loopne
mov
push
mov
testl
fcoms
nop
jmp
out
push
inc
movsl
xor
mov
xor
push
jmp
incb
dec
out
bound
xchg
mov
rorb
lods
sub
incl
sbb
dec
rcrb
mov
cmp
xor
icebp
int3
fs
push
jns
add
fisubs
das
cmpsl
loop
mov
out
fwait
inc
addr16
jnp
inc
sub
pop
out
movntq
out
test
aas
mov
mov
push
out
int3
inc
lea
add
cmp
pop
sti
enter
stc
aaa
pop
mov
sti
fldenv
pop
jecxz
movsb
pop
fnstcw
cli
xor
lcall
or
pop
mov
stos
dec
fmul
sahf
ffreep
fldt
out
ret
rorl
xchg
das
ja
or
or
xor
iret
cmp
pushf
jge
add
in
inc
mov
cli
cltd
sbb
js
arpl
aad
outsl
stos
aam
scas
sbb
repnz
jle
xchg
push
add
mov
jb
xor
push
icebp
cmp
rcrb
out
out
pop
push
call
mov
mov
cmp
push
subl
iret
mov
xor
xchg
fisttpl
insb
fstps
add
test
and
inc
into
pusha
push
xchg
mov
movsb
mov
push
sti
and
hlt
shl
jg
lcall
icebp
push
cmpsb
ljmp
mov
push
or
or
mov
jb
fnstenv
or
iret
sahf
sbb
fsubl
mov
or
and
push
sbb
addl
emms
adc
ljmp
stos
mov
test
xchg
hlt
mov
in
lock
stos
pusha
divl
xorb
movsl
push
adc
movsl
cwtl
jnp
push
mov
xor
fldt
xchg
jno
mov
or
xchg
lcall
adc
sub
lods
mov
mov
xchg
das
daa
scas
sub
sbb
inc
shrb
lods
sub
dec
sbb
xchg
cwtl
sub
stos
imul
push
push
nop
sti
inc
call
xchg
test
mov
shl
lock
cwtl
dec
cmp
and
cmc
loope
loopne
xor
mov
pop
lds
inc
pop
in
inc
aad
dec
imul
cli
adc
vandpd
jp
insb
xchg
mov
lcall
xchg
sbb
or
repz
out
sahf
push
adc
adc
and
movsb
mov
mov
ds
push
sbb
jle
lret
sti
fnstenv
mov
sbb
test
addr16
sti
inc
imul
fwait
cs
jg
std
and
dec
and
pop
inc
mov
xor
lods
add
js
out
xchg
shl
inc
in
pushf
cwtl
jmp
outsb
adcb
xchg
lea
sysret
repnz
fsts
lret
mov
fs
ret
aam
adc
push
mov
cmp
ret
sbb
mov
mov
cwtl
daa
jne
movsb
jl
pop
pop
lret
push
mov
shll
dec
adc
sarb
hlt
test
sub
lahf
add
dec
aad
adc
mov
out
push
xor
sub
leave
pop
mov
shrb
mov
loop
or
lods
push
adc
push
rcr
test
test
insb
xchg
ret
loopne
shll
out
cmpsl
icebp
stos
sbb
andl
shll
xor
js
jnp
ror
xor
cs
mov
jle
pop
pop
xor
out
ja
and
lds
pop
xor
rcll
push
stos
in
sbb
sbb
cmp
lret
xchg
adc
out
xchg
jno
gs
std
out
rdmsr
pop
jnp
add
shll
subb
mov
push
or
mov
or
ret
rorl
sub
lds
rclb
jne
inc
sahf
mov
shll
mov
add
push
dec
inc
mov
inc
add
pop
jnp
and
pop
sub
iret
pop
mov
test
arpl
aas
xchg
pop
mov
cmp
in
test
push
mov
xchg
jbe
inc
mov
mov
jp
js
lds
mov
leave
or
mov
mov
test
movsl
push
loope
aas
and
orb
cmpsl
or
les
mov
shll
testb
fwait
push
inc
outsb
push
out
lock
jmp
enter
ss
aam
int
sbb
dec
jbe
push
insb
cmp
and
inc
jmp
dec
xchg
daa
push
es
add
pop
mov
loop
stos
cmp
jnp
aad
jae
sub
pop
sarb
sbb
test
sub
sub
int3
fildl
arpl
cwtl
add
add
loopne
ja
in
push
lea
add
popa
inc
add
cmpsl
in
mov
mov
mov
push
xchg
test
shl
xor
imul
movsl
scas
lea
cli
push
aas
stos
pop
cwtl
ret
aas
xchg
push
push
test
xchg
fst
insl
hlt
notb
aaa
mov
push
call
imul
stos
push
inc
xor
daa
xlat
sub
mov
out
fs
mov
cmpsl
inc
dec
movsl
cmc
and
jl
jnp
push
jns
stos
jg
mov
xchg
movsb
sub
adc
dec
inc
testb
test
or
sub
test
pop
push
push
and
xor
sbbl
in
loope
adc
jp
sbb
cmc
or
ljmp
and
addl
daa
mov
pop
negl
movsl
sub
sub
push
push
mov
mov
inc
mov
mov
add
adc
xchg
int
inc
fwait
stos
xchg
cs
shlb
fists
inc
mov
fstl
stos
and
jns
fcom
push
adc
cmp
in
outsl
adc
enter
ja
outsl
flds
mov
imulb
shlb
ret
rcr
and
xchg
test
or
lret
jge
push
pop
dec
enter
divl
mov
fdivr
dec
repnz
ds
orb
mov
mov
sub
fimull
xor
ret
insl
nop
std
mov
int3
fisttpll
adc
xor
dec
adc
pop
sbb
in
or
xor
ljmp
das
mov
adc
xor
dec
push
push
or
jae
ljmp
fwait
push
sbb
mov
dec
and
add
daa
jo
ja
and
mov
cmp
mov
data16
mov
test
in
or
xor
test
jg
fcmovnu
in
pop
dec
dec
fstpl
sub
ret
test
or
mov
imul
jl
ss
leave
loop
or
inc
mov
fsubs
icebp
cs
and
and
xchg
dec
sbb
lahf
ss
in
or
testl
jns
cmpsb
push
repnz
aad
mov
int3
pop
dec
enter
aad
cld
xor
mov
and
inc
add
daa
push
sbb
mov
inc
jg
adcl
fistl
jns
mov
dec
and
mov
dec
inc
pop
inc
sahf
push
push
jge
mov
dec
xor
pop
cltd
push
fdivs
inc
xchg
mov
in
out
les
mov
xor
or
cld
mov
mov
jp
cmpb
push
dec
mov
and
cmp
lea
cmp
dec
fwait
pop
adc
dec
in
les
dec
sbbb
push
jmp
lahf
lahf
sbb
xlat
lds
mov
shrl
add
sbb
sub
cld
pop
mov
mov
loopne
std
cmp
insb
adc
sar
adc
rcr
sub
ret
cmp
mov
test
mov
bound
pop
imul
addr16
cld
jmp
data16
test
nop
aad
shrl
add
pop
loope
jbe
in
jns
and
int
rorb
test
dec
xchg
and
and
jmp
pop
pop
daa
xor
bound
jb
pop
mov
testl
dec
rclb
inc
rorl
mov
mov
fiaddl
xchg
cmp
mov
sahf
mov
cmpsb
xor
sbb
mov
mov
jo
fwait
jecxz
and
sub
rcll
jmp
js
sahf
jo
stos
and
test
movsl
pop
div
jne
mov
addl
stc
outsl
das
dec
push
outsb
es
std
inc
subb
imul
and
xchg
fwait
or
jp
cmpl
xor
fcoms
add
clc
lret
pushf
sbb
push
inc
pop
ret
gs
xchg
out
and
bound
outsb
mov
sbb
xor
sar
xchg
cmp
data16
arpl
add
gs
fisttpl
dec
loope
scas
and
scas
mov
and
push
gs
xor
jbe
mov
mov
stos
jbe
push
test
ss
adc
xchg
lret
stc
mov
push
in
jmp
hlt
repz
mov
dec
cmp
and
inc
xlat
sub
in
xor
inc
pop
dec
push
sbb
dec
xor
iret
mov
dec
pop
mov
xchg
push
mov
xchg
jo
xor
mov
mov
or
mov
repnz
in
notl
lret
test
jne
outsb
xchg
pop
mov
sbb
test
xchg
and
shlb
mov
sbb
jbe
lcall
hlt
or
aas
cmc
jmp
or
repnz
insl
jno
jge
xchg
xlat
inc
push
xor
push
lahf
mov
hlt
push
rorl
and
roll
or
idiv
dec
mov
mov
out
in
xor
scas
adc
jle
in
cmp
aas
jnp
repz
mov
jmp
or
push
fiaddl
pusha
subl
mov
or
adc
mov
pop
inc
outsb
dec
jns
dec
push
adc
subb
addl
pop
std
icebp
mov
movsl
add
xchg
je
mov
pop
cmpsb
lcall
add
orl
mov
mov
inc
cld
fxam
jbe
and
cmpsb
xor
mov
imul
int3
push
jno
loopne
sub
jno
outsl
shrl
mov
push
cmp
sbb
std
xor
xchg
xchg
dec
out
loope
mov
sti
pop
cmp
fisubl
xchg
or
out
rorb
xor
clc
insb
data16
das
sub
xchg
lcall
cs
jae
push
inc
adc
sti
ror
sbb
stos
xor
mov
pop
adc
adc
push
shl
xor
pop
inc
dec
xchg
jne
jge
sbb
inc
inc
cwtl
mov
fidivrs
lds
call
mov
std
sub
sub
sar
rcll
inc
ds
xchg
insb
sbb
inc
push
push
inc
cmpsl
push
sbb
ret
sbb
xchg
lret
dec
jae
mov
push
mov
test
mov
notb
iret
jp
pusha
loope
enter
scas
div
test
jne
or
sub
sti
lcall
sub
aam
aad
lcall
mov
dec
mov
lea
xchg
cltd
std
and
iret
loop
lret
inc
xor
xchg
dec
adc
movb
leave
mov
loop
adc
sbbb
fsubrl
push
adc
dec
loop
mov
sub
xchg
mov
sub
dec
leave
cli
int3
jo
xchg
test
bound
lret
sarl
in
insb
lea
pop
sbb
cmp
outsl
test
jnp
or
jo
pusha
sbb
fisubrs
jmp
xchg
xchg
mov
js
aaa
push
leave
leave
mov
mov
aaa
in
xor
xor
call
push
jae
or
lea
pop
push
adc
test
xlat
cs
adc
or
jo
ss
sub
mov
mov
adc
or
insl
xlat
cmp
loop
cwtl
and
push
cli
or
xchg
add
pop
icebp
test
dec
push
and
add
xchg
repz
pop
sbb
pop
test
mov
inc
jecxz
push
xor
inc
lret
xor
int3
stos
xchg
mov
fcmovnb
aam
pusha
cs
call
cltd
mov
jle
out
aam
out
pop
outsb
ficoms
outsb
in
jo
leave
hlt
es
fsubr
cwtl
sub
mov
mov
es
test
sub
scas
dec
out
sub
enter
and
mov
cmp
iret
fidivs
repnz
loop
sbb
push
test
aam
jae
std
pop
inc
out
xor
inc
addr16
jae
mov
sub
in
mov
push
rcll
aaa
shrl
cmp
sub
mov
push
and
scas
shl
push
xchg
add
add
adc
push
jno
or
jae
mov
inc
das
loopne
loop
cwtl
fdivrl
and
xor
jg
scas
cmp
imul
sub
inc
dec
ror
sarl
stos
and
popf
mov
aas
out
daa
dec
sbb
xchg
fnstsw
ja
xlat
mov
or
out
sbb
mov
aaa
icebp
xchg
fwait
movsb
xor
imul
out
repnz
shrl
push
sahf
xor
xor
sbb
andb
mov
mov
leave
out
mov
sub
ja
mov
cmp
in
push
sbb
into
aad
mov
nop
pop
dec
sub
insl
sbb
or
stos
in
fsubrs
add
mov
fs
xchg
cld
or
mov
cmp
movsl
lock
cs
add
test
cmpsl
sbb
push
inc
stos
in
lret
xchg
movsl
and
cmc
pop
pop
mov
jnp
sbb
add
popa
adc
mov
sbb
jbe
push
xlat
sbb
leave
adc
mov
in
scas
lret
cmp
inc
in
xchg
push
jbe
and
movsb
pop
dec
in
pop
call
fnsave
mov
push
push
xor
scas
jmp
arpl
cmp
icebp
mov
or
out
mov
dec
mov
in
push
xor
into
js
jbe
nop
ljmp
push
in
psubsb
adc
add
sahf
pushf
pop
adc
push
mov
stos
xor
imul
mov
sti
jnp
push
mov
adc
lea
scas
inc
bound
jb
xor
pop
mov
leave
loopne
loopne
loopne
and
ss
add
out
sub
sbb
add
aam
xchg
mov
xchg
cmpsl
gs
sub
das
and
hlt
sti
jge
xchg
dec
or
daa
lods
testl
pop
int
xchg
sub
fadds
push
push
outsb
aad
sbb
sbb
out
jo
mov
cli
jmp
sbb
push
ljmp
mov
mov
jne
into
push
repz
fisubrl
fsubr
dec
orb
mov
int
enter
cmpl
idiv
or
lds
int
fwait
mov
cmp
lahf
adc
cmc
push
pop
or
add
leave
or
dec
mov
popa
lcall
inc
dec
sub
fwait
out
jbe
or
add
xchg
and
adcb
mov
sub
cmpsb
and
por
jecxz
cltd
out
xchg
ret
or
movb
xchg
repz
pop
jbe
sbb
in
es
xor
out
or
lret
lods
sahf
ficoms
jg
ds
lahf
adc
mov
push
lods
push
sbb
dec
lahf
stc
pop
dec
andl
fdivrs
hlt
dec
test
notb
icebp
add
out
adc
rcrb
xchg
ds
es
jmp
mov
mov
mov
arpl
cld
add
xorb
dec
gs
into
mov
fdivrs
sbb
jge
dec
icebp
sub
loopne
pop
xor
lret
shlb
jp
cmp
insl
lret
cld
sbb
xor
dec
push
add
nop
int
rcrb
sti
dec
sub
dec
lret
cmp
sahf
push
cmp
outsb
jns
and
add
int3
nop
rclb
pop
out
ret
mov
imul
mov
jmp
xchg
aas
push
sbb
pop
sub
das
pop
pushf
push
sbb
or
pop
pop
in
sub
and
cmp
sbb
cwtl
inc
mov
pop
movsl
and
mov
outsl
ds
mov
cld
cli
fsubrl
xchg
inc
adc
xchg
lea
das
jae
adc
sbb
or
sahf
mov
push
and
jge
xor
in
in
arpl
push
lods
mov
or
addr16
xchg
inc
mov
ficoms
jnp
les
mov
mov
and
fistpll
add
mov
jo
pop
fdivrs
cmp
dec
cli
mov
lret
aaa
push
stos
jo
loope
loopne
repnz
dec
push
call
dec
rolb
push
pop
cmp
hlt
xchg
in
bound
jns
ds
push
ret
sub
jne
nop
jecxz
repnz
sbb
mov
adc
notb
jecxz
rcrb
pusha
pop
pop
add
insb
and
mov
stos
inc
adc
inc
jp
filds
in
jnp
pop
cmp
insb
bound
clc
xchg
xlat
xchg
cmp
jecxz
imul
jns
jg
outsb
sub
pop
jno
daa
mov
addr16
or
test
add
push
sar
into
jae
dec
fimuls
pop
xchg
add
add
rolb
arpl
push
mov
fisttpll
out
dec
and
pop
int3
add
or
jbe
adc
cmpsl
jnp
cmp
pushf
out
push
insl
out
rcll
xchg
jns
ret
popf
insb
jle
pop
aad
xchg
jns
and
jae
xor
fstpt
mov
mov
adc
lock
repz
jle
movsb
test
loopne
inc
dec
lret
test
push
stc
add
test
imul
ds
imul
mov
push
mov
push
sbb
xchg
dec
mull
fcomps
push
faddl
stos
or
out
add
xor
data16
inc
insl
xchg
xchg
inc
imul
inc
pop
shlb
loope
pop
stc
cmp
jae
addr16
xor
lret
int
jmp
push
out
cmp
mov
inc
shr
dec
in
orb
pusha
shlb
mov
mov
in
sahf
in
mov
sbb
jb
cmp
addb
xor
xchg
fisttpl
dec
inc
int
lods
outsb
loope
or
xchg
xor
data16
arpl
iret
iret
or
inc
stos
sub
dec
ja
push
fstpl
sub
sbb
or
incl
sub
push
pop
not
cmp
jb
fsubrl
adc
nop
cmp
mov
xor
mov
sub
adc
inc
xor
in
dec
roll
fs
fadd
cmp
data16
add
jns
scas
sbb
sahf
xchg
sub
jnp
push
lcall
sbb
sbb
int
jb
pinsrw
pop
or
fdivs
repz
cmpl
dec
iret
movsl
icebp
cmpsb
out
out
push
daa
into
adc
mov
call
pop
xchg
sub
lock
adc
xchg
pop
dec
repnz
movb
pop
sbb
sub
adc
push
sti
rcrl
ja
jbe
and
repnz
jo
idiv
bound
je
in
dec
xchg
insl
xchg
enter
push
push
lds
mov
loopne
iret
cmp
addr16
repz
pop
jp
fwait
adc
and
xchg
add
in
xchg
imul
xchg
and
mov
xchg
jb
fisttps
icebp
inc
push
xchg
mov
mov
dec
add
mov
adc
cmp
mov
cli
in
add
jo
flds
sub
xor
subb
or
movsl
xchg
cwtl
inc
sarl
pop
xchg
add
aaa
adc
or
push
out
cmpsb
pushf
out
in
pop
outsb
xor
mov
mov
xorl
mov
aas
add
mov
les
in
sbb
add
mov
mov
mov
add
xchg
movsl
stos
xor
mov
testw
inc
pop
popa
mov
mov
add
ror
icebp
stos
ja
sub
adc
jo
nop
shrl
es
cmp
fsubr
jbe
subl
sub
filds
leave
jno
xchg
add
adc
push
lock
scas
mov
fdivl
jg
xor
test
inc
cmc
dec
mov
popf
push
xor
pusha
int
mov
xor
mull
adc
shrb
out
sti
sarb
jp
aas
mov
cmp
stc
pop
adc
dec
lock
aam
into
stos
test
mov
adc
sub
inc
jns
xchg
hlt
std
int
mov
cmp
testl
ret
fimuls
sub
mov
cmp
out
int
rcll
inc
subl
test
cld
push
ss
orb
inc
test
xor
inc
pushf
xchg
aas
lds
int3
jle,pt
outsl
push
and
lret
or
or
scas
movsb
mov
mov
pop
pop
xor
xor
add
mov
mov
xchg
nop
int3
jbe
rcrl
inc
xchg
clc
dec
pop
mov
clc
pop
sbb
sub
sbb
dec
popa
mov
insl
in
daa
fnstsw
inc
mov
addr16
shlb
fidivrs
adc
xchg
jle
pop
int3
or
into
mov
push
jbe
xchg
adc
roll
adc
cmp
pop
cmpl
fisttps
pop
dec
sahf
sti
xor
sahf
adc
push
ret
repz
xor
cmp
std
push
movb
popa
add
in
int
outsl
lahf
mov
cmp
in
jmp
mov
leave
mov
pop
je
pop
je
movsl
mov
je
and
mov
insb
jmp
scas
adc
push
pop
js
pop
les
insb
movsb
jbe
jle
scas
xchg
mov
push
jl
jle
xchg
lds
scas
add
push
cmp
inc
je
leave
imul
stc
aad
cwtl
ror
fdivrs
adc
pop
mov
push
inc
jl
outsl
push
f2xm1
xor
push
lahf
dec
in
jmp
or
cmp
mov
lcall
rorl
je
xchg
cld
int3
or
mov
fsubs
pop
mov
daa
loopne
push
mov
shlb
testl
sti
in
push
mov
cmp
cs
and
es
pop
xor
mov
ds
dec
cmp
dec
mov
ja
imul
mov
mov
imul
xor
int
inc
xchg
and
pop
aad
jge
loop
int
sub
xlat
ficoms
dec
pop
xor
cmp
jge
sti
xchg
xchg
or
aad
es
pop
ljmp
and
loopne
push
lret
sbb
cmpsb
or
cmpsb
adc
jge
sbb
jo
jae
mov
roll
lcall
shlb
out
shlb
cltd
jno
mov
inc
clc
xor
adc
jbe
xchg
in
mov
out
lret
out
and
push
pop
lret
xchg
add
inc
clc
sahf
inc
jne
mov
push
mov
int
jecxz
shlb
in
cld
sahf
dec
mov
mov
ljmp
adc
aas
ja
rcll
sar
leave
rep
inc
jbe
cmp
adc
mov
ror
dec
push
mov
out
dec
test
ret
cli
fisubrs
push
sbb
fdivp
pop
mov
or
loope
and
dec
fisubs
xor
ja
jb
ss
arpl
push
sub
pop
inc
lods
xchg
cvttps2pi
fucompp
or
popa
cmp
and
dec
inc
push
mov
sbb
xchg
roll
sub
xor
lcall
repz
ret
mov
nop
dec
xchg
je
cwtl
mov
data16
clc
aas
xor
xlat
mov
fs
mov
sub
dec
xor
xchg
push
cwtl
cmp
scas
inc
jle
xor
push
lods
fdivr
fadds
in
pop
pushf
adc
data16
dec
xchg
xchg
out
in
leave
dec
shl
push
pop
scas
sbb
cmp
mov
imul
lea
loopne
and
inc
or
gs
push
std
cwtl
or
dec
sbb
jb
inc
mov
lods
push
mov
popa
or
fmuls
dec
xchg
outsb
pushf
lcall
push
aas
roll
xchg
in
and
ds
inc
rcll
mov
ficompl
pusha
imul
mov
mov
movsl
xchg
mov
cmp
jg
lret
imul
mov
xchg
jbe
int
js
inc
and
xor
movsl
fcmovnbe
or
push
call
inc
orb
push
add
scas
push
ss
call
inc
orb
sub
insb
mov
pop
js
loopne
mov
jp
adc
test
es
cmp
mov
pop
test
popa
pop
jae
jg
mov
sahf
je
jo
mov
test
fstpt
and
rol
leave
inc
jl
lods
ja
adc
mov
aas
mov
and
jnp
sbb
and
mov
iret
xchg
inc
shl
bound
sbb
fistpl
shlb
add
xor
push
xor
inc
mov
lcall
push
mov
sti
gs
and
sbb
sbb
pushf
xor
cmp
pop
lea
pop
xlat
jb
push
adc
inc
sahf
xor
pop
sub
std
push
inc
mov
mov
lcall
pop
and
rorl
rol
es
or
or
cwtl
cli
and
lret
cmp
out
jno
add
or
jns
xchg
push
mov
cmpb
pop
sbb
dec
inc
lds
je
jl
xchg
dec
mov
ss
mov
push
or
loop
subb
cli
rorb
insl
clc
push
into
daa
pop
in
cmp
sub
call
xor
cld
inc
scas
add
loope
ficoml
inc
cmp
inc
adc
fistpl
testb
xchg
mov
shlb
popa
pop
inc
inc
rol
or
cs
push
insb
loop
lods
sub
repz
icebp
shr
cmc
adc
testl
mov
xchg
sub
mov
mov
add
fbld
je
addb
ret
les
add
movb
adc
inc
aaa
add
pushf
inc
jae
jmp
shll
andb
adc
push
add
pop
or
iret
sti
cmc
jo
add
je
in
mov
inc
in
idiv
cli
les
arpl
lods
popa
mov
repnz
std
inc
push
icebp
popa
xor
cmp
sub
popa
push
pop
popa
test
mov
out
cmp
jbe
dec
and
js
cmp
imul
add
mov
cmpsl
iret
push
orl
call
sbb
sbb
fcom
push
xor
jo
int3
in
mov
add
add
mov
stc
out
sbb
cltd
test
sbb
add
les
test
jl
or
cs
aad
cmp
xor
mov
ja
mov
jbe
jbe
xor
out
dec
cmpsl
sub
cmpsl
int3
sbb
xchg
sub
mov
stos
sub
xor
mov
sbb
out
push
imul
inc
push
add
outsl
jbe
pushf
mov
loopne
mov
pop
jo
xchg
ljmp
out
push
push
cmpsb
sbb
addr16
shr
test
cmp
jbe
xchg
or
jns
aas
xchg
pop
rorl
movsl
cmp
lods
loope
je
pusha
mov
insl
xor
push
lahf
jle
imulb
push
stc
cmp
repz
sub
cmpsl
pushl
and
into
ret
jmp
adc
mov
aad
pop
mov
shrb
mov
pop
shlb
add
mov
movsb
mov
cmp
inc
stos
dec
xchg
clc
sub
loop
ret
dec
and
xchg
pop
cltd
iret
and
aas
ljmp
mov
xor
outsb
mov
pop
loope
movsl
mov
mov
cmc
adc
xorb
push
pushf
popf
push
or
fcompl
vmread
scas
les
incl
or
fcmovne
xor
inc
hlt
or
out
adc
leave
mov
cmp
clc
test
pushf
adc
scas
fwait
into
jae
push
ret
leave
out
pop
mov
adc
jl
mov
mov
jo
js
jge
inc
roll
push
add
loopne
in
mov
cmp
sub
in
lds
shl
das
mov
in
cmc
cli
xlat
xchg
xor
inc
pusha
cli
push
mov
out
test
ja
inc
lahf
push
loope
and
rcll
daa
inc
scas
aaa
sbbl
cmpsb
or
enter
jge
ja
sbb
notb
lods
in
and
sarl
rorb
out
inc
test
jne
jge
jno
mov
sub
aad
call
cld
xor
outsb
cmp
inc
adc
icebp
jns
cltd
out
lods
push
dec
adc
repz
xlat
imul
sub
cmp
jecxz
scas
xchg
mov
fwait
mov
mov
xchg
sbb
repnz
adc
fsubs
xchg
cmpsb
or
pusha
in
dec
imulb
xor
pop
xchg
pop
movsl
cmpsb
add
pop
mov
ja
mov
jnp
xchg
or
imul
adc
push
or
xlat
popf
mov
loopne
sbb
ljmp
mov
mov
jb
and
test
les
push
lahf
daa
cmp
and
divb
pop
xor
inc
mov
push
pop
call
int
mov
mov
adc
xor
rcrb
ds
sbb
xorl
fidivrs
in
lods
cmpsb
push
jecxz
icebp
and
inc
mov
inc
lods
sub
inc
int
jg
jecxz
movsb
push
repz
nop
lods
sbb
or
and
mov
adc
xchg
mov
jle
pop
dec
pop
push
orb
dec
stos
mov
jns
and
stc
mov
sub
cmc
lea
lds
cmpsb
in
repz
js
and
aas
or
leave
pushf
test
xor
pop
rcrb
sbbl
and
dec
or
mov
mov
dec
jo
insb
mov
jbe
add
cmp
repnz
sarl
fxch
dec
push
hlt
pop
insb
sti
mov
jbe
pop
mov
js
repnz
rcrl
push
xchg
push
mov
mov
dec
fisubs
jns
mov
mov
ret
addr16
repnz
or
jl
iret
adc
loope
rcrl
xchg
mov
or
mov
loopne
sbb
mul
jge
movntps
fadds
inc
hlt
and
sti
dec
xor
pop
push
or
outsl
popa
hlt
cmp
cltd
aam
je
or
ja
setl
les
cmp
and
mov
movb
push
pushf
inc
movsl
xor
pop
cmpsl
jns
and
mov
push
into
jmp
cmp
loopne
mov
mov
inc
fldl
xchg
jg
jp
cs
in
cmp
cmc
pop
mov
mov
insl
xchg
fwait
push
jmp
inc
push
in
push
outsb
mov
or
sbb
mov
xchg
dec
jno
dec
stc
jb
mov
dec
cmp
cli
leave
jle
adcb
dec
dec
pop
loopne
sbb
mov
and
icebp
inc
ret
mov
test
sub
jne
test
push
nop
ret
sub
xor
jno
mov
cmp
sub
in
mov
or
pop
xor
mov
or
in
jg
push
in
adc
ljmp
outsb
xchg
mov
outsb
xor
sbb
notl
clc
mov
icebp
out
mov
sahf
movsb
sub
mov
fisubrs
mov
fstpt
jae
mov
in
pop
cmp
aaa
xor
jb
movsl
out
mov
mov
jb
pop
movsl
frstor
je
stos
push
fimull
and
or
pop
push
out
dec
xchg
cmp
adc
pop
jmp
and
cltd
inc
lret
shlb
fcoml
cmp
add
mull
sbb
lods
test
movsl
sub
into
add
add
pop
sbbl
xchg
ds
and
mov
scas
mov
cmpsl
and
outsb
sub
mov
in
dec
mov
enter
dec
mov
mov
pusha
nop
sub
lret
cmp
mov
pop
xchg
mov
into
xor
cmp
xchg
xlat
int
inc
ds
addr16
fucomp
or
cwtl
push
pop
in
cmpsl
adc
xchg
test
fs
push
sbb
hlt
lea
lds
pop
sub
sub
ret
add
jmp
mov
fnsave
xor
lods
je
adc
xor
popf
push
mov
or
test
pop
pop
sub
inc
push
dec
pop
into
mov
out
addb
fcmovb
negb
xor
stos
outsl
push
xor
push
and
dec
out
sub
pop
popa
dec
mov
push
imul
inc
scas
fwait
movsb
jg
pop
xlat
repz
testb
shll
lret
xlat
ss
mov
add
push
gs
int3
jmp
adc
sti
ds
mov
lcall
and
aas
lret
insb
sti
mov
cwtl
sub
cwtl
and
ss
push
cmp
push
mov
xor
mov
orb
xchg
loop
int
mov
dec
insl
movsb
jnp
int
xchg
lods
sbb
stc
rol
and
dec
xor
mov
jg
cmp
imul
clc
inc
out
lods
mov
add
cmpsb
push
pop
ja
sbb
pop
dec
cmpb
mov
repnz
fldt
mov
and
push
in
mov
stos
shlb
pop
pushf
dec
jno
es
pop
lcall
jg
push
adc
cmp
xchg
dec
jp
imul
mov
movsb
pushf
sub
cmc
pop
mov
shr
sahf
inc
lret
push
stos
dec
jnp
aaa
or
clc
xchg
imul
dec
hlt
cmpsb
ret
pop
add
or
dec
pop
pop
mov
sti
push
std
ret
or
mov
xlat
xchg
add
mov
xor
inc
rorl
xchg
jns
aam
js
imul
or
inc
inc
mov
mov
ss
fstpl
cmpsl
push
sub
call
push
inc
add
or
icebp
jae
push
xor
xor
and
xor
imul
jge
adc
mov
push
mov
xchg
insl
push
stos
aaa
imul
push
fadd
mov
loop
xor
mov
cmp
and
push
sbbl
fbstp
sub
fcomps
aas
stc
mov
sub
loop
movsb
mov
in
std
in
rcrl
icebp
fwait
jge
jne
es
and
jp
pusha
pop
mov
xor
daa
sub
inc
and
push
iret
and
push
ds
imul
rcrb
xchg
lock
adcl
mov
push
fmull
fadds
jecxz
dec
test
push
loop
stos
mov
mov
mov
sub
pop
sahf
hlt
popf
mov
add
imul
mov
jo
stc
sub
js
fisttpl
dec
adc
and
lahf
sub
mov
mov
inc
xor
xchg
call
push
push
sbb
mov
shlb
insb
pop
cltd
push
fs
mov
jl
jmp
adcl
lds
mov
gs
jg
adc
mov
icebp
jo
pop
call
cmp
add
outsw
call
stos
scas
mov
loop
jb
inc
or
ret
sahf
loopne
jmp
movl
or
nop
xor
int3
test
jb
mov
andnps
push
stc
orb
push
push
push
ja
sti
addl
xchg
and
loope
test
in
xor
fnstsw
mov
add
es
ljmp
imul
es
mov
daa
lods
xchg
push
pop
sbb
imul
fstps
and
cmp
xchg
add
fs
sub
stos
mov
cltd
lret
gs
and
xchg
dec
addb
jo
fmuls
lods
pop
dec
dec
and
xchg
adc
in
lods
mov
inc
cmp
mov
inc
mov
iret
aaa
cmp
lcallw
js
les
dec
mov
shl
jae
fnstcw
in
stos
fdivrs
imul
and
push
mov
xchg
xchg
sbb
mov
xor
and
pop
pop
ret
adc
cwtl
int3
inc
ds
mov
push
and
sbb
scas
je
jl
fwait
jle
mov
int
stos
add
aaa
dec
aad
sub
adc
enter
cmpsl
dec
clc
lahf
cmpsb
loopne
sbb
pushl
and
pop
xchg
dec
daa
push
add
fldln2
mov
sub
pushf
xorl
xchg
cmp
xchg
outsb
xchg
xor
je
xchg
push
ret
cwtl
or
testl
cmpsl
daa
iret
adc
xor
xor
je
jns
cmp
leave
stc
dec
inc
lcall
inc
mov
test
fstl
scas
aam
xchg
aaa
mov
sahf
shlb
sbb
add
mov
adc
cld
xlat
mov
iret
push
fbstp
pop
iret
xchg
push
pop
repz
movsl
pusha
xor
add
outsb
inc
movsl
push
xor
mov
lock
arpl
and
cmpsb
sub
mov
dec
js
bound
pop
call
out
out
ss
sbb
inc
mov
lods
out
jae
cmp
int
arpl
fldt
dec
add
jns
sti
jmp
aas
mov
les
out
mov
and
sbb
mov
push
jne
xlat
jbe
xor
fs
and
ljmp
add
fcoms
xchg
mov
repnz
pop
mov
ds
push
aas
cwtl
inc
cmpsl
pop
rorb
loope
pop
dec
aam
les
jno
scas
cmp
push
mov
insb
scas
sub
pop
rcll
add
test
aas
inc
and
into
and
fwait
adc
call
stos
fbstp
or
mov
loop
and
cmc
mov
mov
sub
ss
fcompl
pop
sbb
fcoml
push
inc
mov
lret
sbb
cmp
test
xor
and
out
xchg
jmp
mov
stos
push
pop
gs
cld
leave
cwtl
inc
shrb
add
nop
dec
sbb
mov
lcall
mov
jecxz
jmp
js
add
or
push
inc
addr16
mov
into
jne
inc
pop
sti
pop
mov
les
pop
pop
adc
dec
lret
or
pop
dec
in
incl
js
fwait
mov
or
lret
lods
jle
loop
xor
test
push
vmulps
xor
push
repz
fisttpl
ficomps
inc
fisttpll
cmp
movsb
repnz
adc
fucomp
sbb
and
jl
dec
outsl
cltd
mov
push
push
aas
jl
mov
inc
rcll
sbb
lds
jg
outsb
mov
nop
jmp
scas
xor
dec
or
push
subb
pop
and
cmpsb
mov
lods
add
dec
cs
sbbl
stos
pxor
jo
fdivs
mov
sub
mulb
repz
sbb
fmuls
jns
lock
or
iret
stos
xor
inc
push
adc
rcrl
jno
in
sub
popa
icebp
sbb
test
dec
inc
cli
and
test
and
pop
in
mov
sbb
adc
jmp
sahf
andl
inc
jbe
xor
mov
sbb
test
adc
pop
popa
jge
inc
jne
xor
fmull
js
mov
les
xor
mov
mov
cmp
sub
cmpl
adc
and
and
xchg
mov
shlb
sar
xchg
into
mov
push
mov
shlb
jns
fwait
mov
out
jecxz
pop
roll
jne
xor
jno
je
mov
and
pop
loope
jmp
dec
and
rorb
shll
mov
mov
and
daa
push
mov
mov
xor
and
std
jns
fs
jl
jb
add
fsts
daa
scas
or
sbb
inc
mov
pusha
jb
mov
inc
push
xor
aaa
or
jle
jae
iret
icebp
subl
xlat
test
movsl
xchg
jg
xchg
ds
shll
lahf
rcll
lcall
push
jg
mov
cli
xchg
sub
add
adc
data16
mov
std
and
mov
xbegin
xor
xor
or
rolb
lret
rorb
sbb
sarb
fstpl
inc
movsl
cmp
jae
inc
aaa
xlat
clc
sub
js
pop
cli
mov
imul
insb
add
stc
xchg
mov
nop
adc
mov
in
mov
insb
movsl
mov
dec
pop
push
pop
pop
fwait
dec
adcl
and
movntq
out
jg
adc
xor
int3
lahf
mov
inc
adc
in
mov
fsubrl
or
movsl
inc
lcall
jg
nop
insl
jo
mov
leave
hlt
xchg
add
sti
xchg
jne
out
or
pushf
mov
inc
cmp
mov
or
sub
mov
sahf
cmp
test
xor
ljmp
fistpll
push
fs
or
pop
inc
fstpl
iret
and
cmp
pop
and
ret
mov
mov
ds
and
push
and
insl
fwait
or
inc
inc
jnp
dec
rcll
mov
pop
ds
xchg
push
push
shr
xchg
push
addr16
ja
cmpb
pusha
fstpt
cli
es
into
pop
jae
cwtl
xchg
in
xlat
mov
pushf
fmulp
inc
mov
rcrl
cmp
xor
rorb
xchg
mov
inc
rclb
inc
or
fcomi
aaa
xor
stc
cmp
add
mov
movsl
adc
push
js
out
outsl
adc
and
mov
insl
mov
cltd
pop
aaa
mov
xchg
dec
xlat
and
pop
stos
nop
mov
ss
out
push
aaa
es
sbb
cmp
jo
mov
jbe
adc
popf
ja
cmp
lods
into
sbb
testb
loopne
cli
lahf
sbbb
and
lea
push
outsl
or
pop
std
cltd
out
mov
lods
mov
aam
and
sarb
push
pop
outsl
or
dec
hlt
xor
adc
push
mov
jno
ljmp
jo
push
or
das
or
inc
shrl
lock
lock
mov
push
out
mov
test
icebp
stos
bound
popf
jne
cmp
cmp
xor
dec
xchg
sub
or
xchg
inc
cmc
adc
jae
dec
icebp
sub
imul
sti
add
mov
pop
cmp
je
add
jl
movsb
xchg
loop
or
out
cmpsb
mov
xchg
sbb
cltd
jge
outsl
es
mov
jne
sbb
dec
dec
sub
dec
pop
ljmp
aam
jnp
xor
push
movl
sbb
lahf
bound
mov
xchg
lret
shlb
add
push
mov
xchg
inc
int3
mov
xlat
fwait
pop
inc
fmul
jp
push
aas
jmp
ret
int3
dec
andb
gs
stc
ret
jp
fcompl
addr16
add
clc
ret
mov
ds
shll
loope
outsl
fst
pop
adcb
rcrl
fisubl
push
add
xlat
adc
or
fs
mov
aad
neg
fcoms
push
fisubs
sub
repnz
stos
aad
stos
xchg
add
jbe
jb
mov
xor
cmp
mov
adcb
sbb
jbe
aam
xlat
popf
fsts
rcl
or
jecxz
outsl
int3
jno
and
nop
lock
lods
imul
popf
jnp
and
test
aad
lea
pop
dec
mov
outsb
adcl
shr
inc
negl
sbb
jmp
arpl
jbe
int
adc
sub
sbb
inc
jg
shl
movsl
adc
int3
and
xor
push
lods
xchg
arpl
pop
jbe
mov
aas
jge
dec
sub
sbb
jne
jne
aad
inc
or
ljmp
fwait
repnz
mov
mov
lods
mov
addl
hlt
aaa
jg
test
fdivr
push
into
into
lods
or
es
xchg
test
nop
in
push
cmp
mov
cmovae
cld
fidivl
orb
cmc
sti
or
and
push
jecxz
rdtsc
push
dec
out
aaa
mov
fstpt
sbb
mov
pop
out
xchg
mov
nop
or
pop
insb
dec
xor
cmp
mov
jle
loopne
ja
dec
sahf
and
js
mov
je
fstl
gs
cmp
stc
in
ret
int
or
rol
or
movsb
and
mov
mov
outsl
cmp
inc
fstpt
jp
inc
push
sub
imul
sbb
or
lcall
pop
inc
js
test
jmp
fildl
inc
cld
adc
push
sti
cmp
test
insl
fisubl
aaa
jo
sbb
loope
add
imul
pop
loope
test
inc
push
add
mov
mov
popf
outsl
cmp
mov
dec
xor
jne
mov
cmp
xchg
mov
xchg
mov
or
jmp
aam
push
enter
addr16
stc
pusha
outsl
mov
or
and
xor
push
das
ss
jb
adc
popf
adc
sub
cmp
inc
mov
dec
test
xchg
inc
stos
mov
jecxz
push
cmp
mov
mov
xchg
clc
sarb
or
push
fcmove
cltd
cmp
and
xor
insb
dec
cmp
mov
ja
pop
ja
jb
out
xchg
lcall
mov
aam
dec
add
stc
inc
cmpl
cmpsl
xchg
pop
inc
leave
aaa
or
push
mov
mov
pop
ret
mov
sbb
sbb
add
jmp
fs
loop
push
inc
stos
dec
test
inc
mov
push
inc
es
adc
repz
or
js
xchg
insl
lcall
mov
push
cwtl
jge
fidivs
or
popa
movsl
sub
add
lds
xchg
lcall
push
sahf
pushf
inc
and
fldt
xor
in
into
jmp
int
aas
loop
gs
lock
js
int3
mov
dec
popf
lods
movsl
sbb
outsb
inc
stc
pop
mov
sbb
aas
enter
and
dec
xchg
popf
xchg
mov
pshufw
popf
sbbl
mov
aad
loop
loopne
std
or
sub
sub
mov
jb
aas
or
mov
aam
mov
pop
dec
imul
cmpsb
adc
in
xor
and
cwtl
outsl
shll
sub
xchg
nop
pop
dec
sub
mov
into
mov
push
filds
ret
in
pushf
xchg
mov
jno
stos
test
mov
pop
dec
push
cmc
cmovg
jmp
outsl
call
jno
pop
hlt
inc
shlb
mov
das
lock
dec
out
sbb
mov
xchg
jle
mov
pusha
cltd
ret
sub
insb
inc
inc
push
jb
pop
jne
adcb
addr16
cmpsl
adc
cmpsb
xor
inc
sub
cs
push
xor
jp
pop
aam
arpl
mov
xchg
pusha
inc
mov
inc
or
dec
incl
mov
cmp
iret
mov
aaa
test
imul
insl
cmpsl
mov
sub
pop
xchg
dec
hlt
lret
mov
cs
rcr
std
mov
cmp
pop
js
push
mov
push
mov
jle
mov
adc
shrl
jae
lods
movsb
ds
aam
daa
data16
imul
add
dec
jo
pop
mov
dec
mov
cmp
std
inc
ja
adc
push
dec
pop
les
adc
ret
push
push
or
outsl
adc
sbb
xchg
and
pop
nop
testl
es
scas
int3
jp
lcall
out
imull
aam
xor
or
and
movsl
decb
sbb
jne
lret
and
and
lds
mov
or
cmpb
adc
sub
addr16
out
in
int3
xchg
dec
jae
or
push
adc
add
jmp
xor
mov
pop
xorb
inc
repz
dec
adc
imul
out
xchg
mov
push
dec
test
out
scas
xchg
and
test
ret
xchg
sub
popa
jecxz
popa
repnz
out
mov
fldenv
out
and
insb
sub
add
push
test
fisubl
gs
inc
outsb
insl
movsl
jge
pop
pop
or
sub
ret
jmp
int
scas
xor
dec
nop
lcall
dec
cltd
hlt
or
add
or
rcl
test
cmp
inc
xor
push
int3
int3
adc
repz
xchg
das
xchg
icebp
sbb
mov
nop
sar
inc
mov
sub
fidivrl
jp
repz
rcrl
jle
xor
lea
xchg
or
popf
ret
int
ds
daa
push
in
addb
mov
sbb
jle
mov
mov
cltd
hlt
mov
inc
jmp
adcl
jno
andb
pushf
or
repnz
or
inc
add
hlt
fcoms
or
or
jl
fildl
popa
push
mov
jno
rorb
pop
call
jae
dec
cmp
adc
aad
inc
mov
mov
adcb
sbb
dec
mov
in
push
sub
push
or
and
push
jo
ja
mov
or
lea
sub
mov
adc
es
call
stos
cmp
sti
in
lods
mov
insb
xor
mov
shll
adc
cmpsl
loope
shl
pop
test
adcl
cld
cmc
xor
lods
xchg
push
jge
and
shrl
and
pop
xchg
pushl
lahf
xchg
and
xor
std
push
cmp
in
aas
and
repnz
or
xchg
andl
add
jl
movsb
cmpsl
lret
leave
cwtl
lods
scas
inc
jo
mov
or
mov
fdivrs
dec
gs
dec
mov
adc
dec
jae
ret
lahf
inc
ljmp
xchg
outsl
fisttpll
mov
pop
pop
mov
call
xchg
jno
mov
nop
jnp
imul
stos
add
addr16
adc
shlb
pop
push
push
ljmp
cld
mov
jo
xor
mov
push
leave
push
mov
stos
arpl
mov
aad
aad
xorl
sub
xchg
je
sub
daa
mov
cmp
sbb
xchg
pop
mov
call
mov
stc
fisttpl
sub
call
adc
mov
xchg
popf
rcrl
add
call
jmp
sahf
leave
mov
cmp
popf
cld
xor
orl
cmp
and
mov
jnp
cltd
call
mov
movsb
dec
sub
xor
lcall
inc
imul
adc
shl
sub
fidivrl
into
fistl
decb
and
xchg
push
stos
sub
loopne
and
repnz
outsb
xor
or
lock
and
cmc
or
add
popf
and
lods
push
fsubs
scas
mov
adc
insl
mov
mov
in
repz
mov
mov
add
mov
popf
js
mov
loope
and
enter
inc
jae
sbb
mov
outsl
out
fsubp
dec
out
div
in
in
mov
pop
jg
sub
mov
outsl
mov
add
jg
cmp
mov
dec
push
mov
or
pop
ja
daa
dec
dec
fdiv
imul
insl
sub
sbb
mov
sub
lret
xlat
lret
mov
push
les
addr16
mov
lcall
and
xor
fisttpll
xchg
push
and
outsl
adc
shlb
adc
sbb
sbb
pop
pop
mov
inc
in
or
lret
lcall
std
xor
dec
imul
add
pop
dec
negl
sub
adc
ja
clc
push
and
sarb
cli
push
adc
pop
ja
fcmovne
mov
cli
es
inc
movsb
lcall
je
jl
xor
jno
and
sub
rolb
mov
dec
xchg
xor
and
push
sub
push
lret
popa
xchg
bound
and
add
inc
arpl
push
pop
inc
mulb
jge
es
sub
xor
shrb
add
or
jno
push
into
push
mov
arpl
fisubs
rcrb
adc
jmp
pop
dec
adc
push
loope
mov
enter
mov
cmp
pop
in
sub
jae
lds
add
xchg
mov
sub
scas
dec
push
movsb
cmp
leave
je
nop
pop
dec
jmp
mov
push
mov
inc
sbb
inc
leave
cli
icebp
mov
inc
xor
jmp
aaa
lret
cwtl
xchg
inc
adc
adcb
pop
repz
lret
push
push
xchg
inc
add
and
lods
add
cmp
into
mov
push
hlt
stos
and
xor
inc
cmp
dec
popa
jle
inc
sbb
pop
rorb
data16
addr16
dec
sbb
das
stc
jmp
pop
ret
mov
pop
cmpsl
stc
lock
xor
pop
insl
mov
push
mov
push
iret
push
xchg
dec
inc
jb
mov
popf
dec
shr
aam
or
cmpsl
icebp
cwtl
dec
adc
fwait
iret
movsb
fdivl
push
jbe
mov
adc
loop
adc
jmp
bound
xchg
lods
dec
jnp
lcall
inc
stos
dec
adc
icebp
sub
xor
aam
mov
dec
xchg
pop
xorl
mov
mov
imul
out
enter
or
sub
aaa
fstpt
jmp
inc
jmp
add
add
cs
shlb
out
loope
mov
push
jb
inc
test
jne
mov
test
xor
call
xchg
in
es
sub
adc
or
daa
sub
lret
out
loopne
mov
fdivl
mov
arpl
mov
jmp
test
imul
movsb
jno
jmp
in
orl
mov
and
jnp
lret
ljmp
cltd
push
lret
add
rcr
jne
xchg
sub
push
das
dec
nop
and
call
repz
lods
cmp
repnz
fstl
insl
mov
push
xchg
mov
mov
loopne
shl
jg
pop
adc
arpl
sti
xor
lret
push
jmp
xchg
mov
dec
xor
mov
ja
xlat
and
xor
inc
in
das
cmc
arpl
fisubrs
sbb
int
shll
popa
and
stos
das
inc
adcb
mov
stos
out
push
pop
sub
pushf
adc
pop
lea
xor
mov
sub
jns
cli
mov
xor
shll
pusha
mov
cld
lret
and
jbe
or
pop
inc
test
mov
ja
aas
ss
daa
push
push
push
fcmovnbe
xor
aad
lret
popf
cmpsb
leave
sub
inc
mov
cmp
shlb
push
inc
into
inc
jno
push
into
jmp
mov
jmp
test
idivb
add
fadds
mov
dec
xchg
out
in
js
xchg
dec
test
ljmp
stos
fxch
pusha
adc
or
mov
repz
scas
or
pushf
fmuls
jns
xor
sub
jnp
test
or
push
inc
sbbl
daa
and
and
push
shl
xor
loope
mov
imul
xchg
clc
popa
gs
into
loope
imul
mov
cli
sbb
pop
push
aaa
sbb
frstor
and
push
add
pushf
dec
mov
hlt
int3
fstps
and
adc
iret
bound
ret
xor
sahf
ss
stc
loop
lahf
imul
sbb
jb
rcrl
in
cmpl
push
xchg
sub
out
cmp
div
movsl
je
pop
sbb
lods
mov
test
bound
inc
or
or
in
push
mov
popa
popa
mov
lock
es
pop
push
sar
push
cmp
movsb
push
sarb
mov
fs
stos
imul
sarb
dec
subl
inc
and
push
xlat
adc
mov
xchg
mov
cld
sahf
cwtl
jnp
shlb
lock
shl
stos
push
mov
and
adc
inc
out
jns
inc
mov
rolb
pop
sahf
out
ja
push
sub
arpl
daa
adc
aam
cmpsl
testb
push
imul
call
jae
sbb
pop
shlb
mov
pop
pop
insl
hlt
in
dec
push
and
jo
xchg
mov
xor
sbb
inc
push
and
in
in
sub
nop
mov
scas
loopne
lods
call
push
push
je
out
ror
out
adc
mov
xchg
mov
pop
pop
sub
int3
push
xchg
push
xchg
ds
imul
lea
sbb
hlt
outsb
xchg
push
aad
dec
int
sti
jns
mov
xchg
and
in
subl
call
inc
in
ret
ds
popa
cltd
test
fdivrs
mov
pop
das
aad
mov
xchg
es
into
push
dec
xchg
jmp
push
push
icebp
stos
pop
daa
shrl
movaps
movsl
push
cmpsl
dec
mov
sbb
in
sahf
mov
jmp
lock
loop
popa
pop
mov
out
sbb
xchg
insl
lahf
mov
dec
fcoms
pusha
xchg
dec
out
add
xchg
call
lods
push
jecxz
rcrl
mov
mov
in
test
add
cmp
adc
jns
ss
push
cwtl
icebp
mov
fstps
outsb
pop
iret
sub
les
fwait
mov
or
sbb
xor
and
or
sbb
pop
cmp
js
or
scas
das
leave
in
out
mov
ds
imul
mov
jmp
leave
out
adc
out
cld
push
pop
cwtl
mov
pop
scas
pop
test
push
aad
sbb
and
dec
mov
xchg
into
lcall
ja
inc
xchg
and
dec
sbbb
push
pushf
les
sbb
dec
push
push
mov
adc
sub
xchg
js
das
pop
test
and
cmc
inc
adc
jecxz
xchg
shlb
jnp
aas
popf
mov
add
fdivs
add
mov
add
or
and
dec
cmpsb
imul
sub
sub
adc
cmp
and
fiadds
dec
or
mov
jnp
movl
in
std
in
out
inc
xor
data16
out
imul
inc
and
and
int3
callw
daa
ja
fucomi
gs
mov
xlat
lods
pop
test
push
fs
lods
jge
mov
pop
repnz
push
inc
sahf
add
dec
js
outsb
push
std
mov
pop
inc
jbe
mov
add
xor
mov
cs
addr16
cltd
pop
push
int3
faddl
xchg
imul
icebp
push
sub
sar
icebp
and
sub
bound
push
xchg
in
test
and
xor
ficomps
xor
jne
sub
loopne
inc
inc
pop
inc
jno
sub
dec
jnp
jecxz
jnp
or
inc
adc
cmp
out
outsb
outsb
movsl
dec
shl
pop
sub
mov
fmull
and
mov
fbld
lret
and
xor
aaa
les
mov
sar
mov
lea
and
jle
jecxz
lods
xor
aam
fstpt
mov
jo
or
and
fbld
popf
icebp
sub
cmp
addb
in
lods
push
pop
lock
fcmovne
push
orl
cmp
mov
call
repz
lods
rorl
and
mov
fsubrp
adc
and
or
arpl
sbb
es
jnp,pt
and
in
xchg
cmpb
adc
addl
jl
push
test
lcall
push
testl
mov
shl
test
adc
mov
fadds
push
mov
mov
inc
push
lret
dec
add
je
xor
into
bnd
mov
stc
push
ds
dec
mov
movsl
sub
sbb
ljmp
bound
sbb
insb
lcall
mov
mov
int3
cmc
xchg
je
push
jmp
fildl
sahf
jae
test
bndstx
outsl
iret
sub
insl
push
or
adc
jo
cmc
and
mov
push
fmuls
ret
ja
sti
sub
push
iret
mov
mov
sbb
test
and
into
mov
test
movb
cwtl
jnp
sub
sbb
es
pop
pop
lret
push
fistps
and
cld
xor
ljmp
insl
push
hlt
aas
and
rolb
mov
or
int
dec
in
sub
dec
mov
jnp
rorb
mov
mov
ljmp
xchg
insb
fldl
std
std
push
movsb
jl
notl
dec
xchg
add
add
vhsubpd
es
es
pop
and
xchg
or
mov
out
orl
loopne
fcomps
into
cmpsb
mov
cmpsb
add
add
test
xor
fadds
lock
adc
push
stos
outsl
xor
sub
xchg
xchg
mov
rcrb
push
push
inc
xchg
out
xlat
popa
mov
pop
dec
or
push
jle
jo
mov
insl
push
mov
je
sub
xor
hlt
loopne
repz
cmp
int
mov
mov
filds
es
xor
inc
repnz
push
or
lret
repz
cli
dec
insb
add
repz
pusha
mov
outsb
or
mull
js
pop
pop
xchg
ds
mov
test
fbld
les
mov
aam
xor
fld
sbbb
sub
jo
mov
in
nop
sub
adc
hlt
cmc
dec
lock
xor
clc
push
ficomps
sub
jge
push
xor
push
test
test
insb
pusha
movsb
lds
push
outsl
out
in
arpl
xor
orb
jns
jp
pop
in
xor
adc
or
lds
fs
cli
and
stc
int
and
add
call
movsl
fisttps
push
insl
cmpsl
cmp
add
mov
arpl
lock
mov
or
fs
add
xchg
popa
mov
bound
adc
mov
mov
mov
scas
daa
sbb
scas
mov
and
lcall
clc
xchg
inc
jns
pusha
sub
push
and
stc
jae
xchg
and
movsl
aad
mov
js
add
ss
scas
inc
loope
mov
mov
jns
int3
or
adc
sbb
insb
inc
sbb
xor
xor
xor
add
out
dec
jecxz
stc
and
xchg
movsl
push
pop
cwtl
lea
pusha
pop
pop
outsb
rcl
cltd
cmp
xor
lret
jg
sti
fiadds
imul
das
jmp
mov
push
and
gs
loop
inc
pusha
or
dec
es
pop
inc
outsl
rcrl
or
sbb
lock
rorl
push
movsb
lret
lret
pop
push
outsl
dec
scas
pop
jle
test
pop
adc
sub
or
adc
xor
pxor
aas
fnstcw
out
loope
xchg
bound
pop
adc
jge
insl
mov
jp
pop
dec
in
or
xor
push
mov
mov
xchg
loopne
sbb
adc
cmp
or
outsl
movb
ror
push
and
fldcw
mov
hlt
sbb
mov
cmpsl
lods
ret
out
jp
sub
lahf
divb
stos
sub
and
and
lret
movq
in
pop
pop
int
mov
sub
push
test
sub
pushf
into
je
imul
loop
push
or
in
or
shl
ret
sub
lock
mov
push
rcr
insl
add
push
xchg
mov
and
sbbb
adc
pop
xlat
jnp
fldcw
sbb
mov
push
inc
jae
movsl
pop
nop
int
bound
daa
jmp
outsl
aaa
sbb
outsl
push
adc
mov
mov
cmpsl
out
push
sub
jge
dec
rcrb
es
inc
les
in
movsl
xor
lret
or
inc
inc
cmpl
mov
clc
fs
sbb
xchg
in
push
inc
mov
xor
xor
mov
scas
pop
stc
cmp
nop
cmovge
cmp
pop
inc
scas
jecxz
in
dec
loope
popa
sub
dec
mov
adc
rorb
push
leave
xor
sub
dec
leave
dec
mov
std
xor
sub
jg
insl
push
ljmp
cmpsl
jbe
sub
decl
xchg
sbb
push
je
cli
call
icebp
andl
and
xchg
mov
rorl
fwait
and
pop
or
loope
cs
mov
fs
cs
add
adc
mov
xor
fcompl
push
xchg
push
add
pop
cmp
cli
lret
sbb
ret
mov
add
adc
cwtl
mov
push
mov
in
inc
fs
inc
cmp
divb
hlt
lds
jae
outsb
sub
xchg
out
rcrl
jge
add
pop
ljmp
popf
loop
test
out
sarb
into
mov
push
lahf
or
sub
mov
stos
sbb
roll
and
mov
inc
call
addl
mov
lods
push
pop
les
jp
or
mov
incb
adc
insl
out
iret
sar
pop
outsb
dec
insb
dec
push
pop
vdivsd
push
ret
xor
nop
out
push
popa
mov
fldcw
mov
push
insl
addr16
push
cwtl
cmpsl
pop
add
hlt
jmp
and
aad
xchg
std
mov
stos
mov
adc
std
add
fs
outsl
inc
pop
mov
ret
and
xchg
cmp
mov
mov
divl
jbe
xor
mov
jg
push
movsl
jo
push
or
sub
push
nop
pop
push
inc
lcall
inc
dec
lea
push
xchg
dec
jne
cmp
jle
jns
jmp
push
sar
jne
es
pop
ds
xchg
daa
mov
cmpsl
or
and
addr16
in
stos
repnz
repnz
cmp
dec
repz
adcl
out
and
jno
stos
mov
aad
cmp
daa
scas
ds
repz
push
cld
cmpsb
xorl
rorb
adc
jo
jbe
faddl
fmul
sub
adc
inc
push
push
cmp
daa
outsl
sub
cmp
mov
aam
inc
jp
daa
xchg
add
clc
xchg
imul
cld
push
mov
mov
movsl
lcall
sti
mov
aad
test
cmp
arpl
sti
pop
cli
jg
imul
out
dec
mov
ret
dec
xor
pop
sbb
push
add
sub
call
lahf
and
jle
mov
popa
clc
mov
pop
push
add
loopne
lret
dec
fisttps
enter
jo
js
flds
scas
repnz
test
in
fistps
inc
imul
out
fwait
lahf
cli
arpl
pop
test
repnz
lret
repnz
loop
add
fucomi
imul
adc
mov
dec
les
mov
cs
mov
in
sbb
and
push
fstps
popa
mov
cld
xchg
xor
jmp
enter
and
in
data16
fisttps
dec
cmp
and
mov
mov
inc
push
sub
pop
or
and
and
ret
imul
xchg
imul
cmp
mov
inc
sub
push
cli
or
jmp
adcl
pop
icebp
sub
popa
cmp
test
and
ss
arpl
outsl
je
test
mov
or
out
sub
jo
inc
in
outsl
cmp
cmp
cltd
add
ret
mov
into
fists
jecxz
xor
xchg
sbb
mov
lcall
mov
pop
lcall
sbb
stos
pop
negb
imul
fxch
das
movsb
mov
xlat
rcrl
dec
mov
push
jae
or
xor
dec
add
lock
dec
sub
push
push
nop
push
cmp
sarb
jbe
jmp
pop
jbe
mov
cwtl
arpl
mov
mov
lods
cmp
pop
lahf
in
mov
mov
cmpsl
or
add
sub
outsb
adc
dec
jmp
add
mov
movsb
push
sub
call
dec
hlt
loopne
inc
orb
daa
mov
out
mov
cmpsl
int
sub
mov
je
insl
fsts
mov
fisubrs
clc
add
rclb
jecxz
test
cmpsl
cmp
js
insb
add
jmp
ds
in
lods
xchg
les
arpl
ret
push
loopne
scas
int3
je
movsb
sub
add
add
push
daa
jbe
outsb
movsl
enter
mov
push
sub
bswap
push
jne
lods
lea
jnp
imul
ss
mov
lock
jl
add
pop
pop
jno
ljmp
push
cs
inc
aaa
and
xor
mov
lret
movsb
push
enter
pushf
enter
sbb
aam
iret
rorb
bound
push
ret
mov
dec
xor
mov
pushf
inc
in
sub
cmpl
sub
data16
mov
lods
push
aaa
sub
jecxz
roll
add
inc
repz
shrb
dec
scas
aad
ljmp
insl
and
sbb
pushf
rorb
es
mov
add
dec
out
cmp
lcall
rcrl
ja
orb
and
push
imul
lret
xchg
daa
insb
jb
iret
push
sahf
cld
push
ficoml
xlat
loope
mov
mov
lret
push
or
jo
inc
das
jno
mov
push
idivb
or
push
mov
repnz
sub
jmp
xor
jbe
pop
add
ret
sub
sbb
inc
dec
cmp
into
cmp
jo
dec
test
cmc
jb
and
lds
outsl
bound
dec
loop
mov
sbb
xchg
cmp
inc
push
ss
cs
fists
xchg
mov
pushf
add
jb
call
ret
popa
mov
sbb
leave
enter
outsb
push
lret
mov
dec
push
cmp
inc
cwtl
stc
iret
cmp
mov
or
leave
in
dec
fdivp
adc
mov
and
pop
mov
add
mov
rol
repnz
add
dec
jecxz
mul
mov
xor
lock
jne
sbb
scas
inc
dec
dec
js
sbb
dec
scas
idivb
jecxz
cmp
cwtl
push
cmp
loopne
or
rolb
push
test
adc
and
pop
shlb
pop
add
or
pop
sub
inc
fidivl
shll
push
cs
outsl
xorb
out
xchg
ljmp
imul
ret
dec
xor
push
mov
sbb
jmp
xchg
mov
cmpsl
add
and
and
cmp
mov
out
std
adc
or
dec
push
aad
pop
xchg
mov
mov
xchg
ret
or
hlt
mov
addr16
adc
test
sarb
adcb
loope
aam
filds
test
mov
adc
pop
push
dec
mov
mov
jo
dec
das
lock
or
test
cmc
std
add
xchg
xchg
ljmp
sbb
cs
lahf
cmp
adc
sbb
sub
add
adc
mov
jl
lcall
int3
jg
pusha
fdivrl
mov
xchg
icebp
push
mov
push
pusha
xor
xchg
insl
pop
dec
jns
mov
pop
jo
es
cmp
shl
mov
pusha
ljmp
xlat
mov
shlb
add
mov
scas
int
xchg
ds
cmc
cmp
jp
lock
pop
sbb
fcomp
jmp
icebp
push
js
mov
push
add
out
ret
imul
in
inc
int3
pop
dec
and
scas
xchg
mov
adc
fistpll
mov
cmp
leave
pop
dec
xchg
aad
jo
mov
jge
xchg
test
movsb
and
inc
popf
add
mov
ds
jns
pushf
mov
lock
xorl
mul
xchg
clc
sbb
je
in
in
mov
mov
daa
inc
cmp
sti
push
mov
mov
repnz
test
xchg
adc
jmp
push
mov
icebp
mov
push
out
jae
or
frstor
jmp
test
mov
xchg
push
test
dec
addb
xor
mov
xlat
xor
dec
fadd
repz
repz
frstor
out
and
test
sahf
push
push
andl
popa
test
jae
outsb
xchg
gs
mov
add
movsb
out
cli
add
sarl
push
dec
bound
stos
cld
push
xlat
sub
push
addr16
adc
cmp
push
and
lods
fmul
adc
add
jo
fisubrl
jno
lods
movsb
stos
push
mov
in
push
gs
enter
push
dec
adc
add
movsl
pop
push
jns
pop
dec
mov
push
mov
pop
jno
dec
xchg
push
into
or
mov
lcall
int3
popf
mov
es
jge
pop
xor
jg
mov
jb
aaa
push
ficompl
push
push
fsub
cwtl
or
repz
cmp
in
inc
in
pop
push
xor
test
mov
mov
cltd
mov
and
decl
icebp
push
xor
adc
push
out
push
adc
mov
add
test
loopne
ss
jle
mov
sub
xchg
nop
movb
ret
push
in
add
dec
cmp
lds
push
dec
add
sbb
mov
mov
imull
cltd
fisubrs
cmp
jecxz
aam
mov
arpl
shll
testl
cltd
lds
lahf
cs
adc
out
mov
dec
push
out
mov
mov
cltd
inc
sub
push
dec
cs
xchg
sbb
jp
add
jge
lret
dec
xorl
lret
inc
test
jo
int3
or
loop
imul
mov
imul
das
push
xchg
pop
inc
out
ljmp
push
es
lods
adc
ret
iret
jge
dec
or
xchg
fisubs
cs
cmc
push
andb
dec
xchg
jle
mov
mov
xchg
cli
xchg
xchg
decl
data16
punpckhbw
roll
fwait
test
mov
into
loopne
add
mov
cmp
inc
cmpsb
jmp
push
mov
push
xlat
push
pop
mov
jmp
fbld
imul
push
xor
rclb
push
ss
pop
or
gs
add
out
ljmp
cmp
push
scas
dec
mov
fcomps
push
adc
xor
pop
scas
xchg
or
ret
xor
std
adc
lret
jae
or
test
sub
xor
cltd
rclb
mov
inc
aam
cmp
int3
sti
adc
cmpsb
pushf
jecxz
dec
xchg
shr
repnz
test
dec
push
pop
fsubs
ret
les
in
ss
or
inc
aas
lock
xchg
add
sarl
lock
mov
mov
pop
add
inc
lret
fmul
fisttpl
movsl
stc
pop
add
inc
xor
cmp
inc
mov
out
cmp
mov
loope
int
shl
inc
out
lcall
inc
xchg
pop
or
push
mov
adc
jge
popl
or
mov
out
lds
push
outsl
mov
inc
add
pop
pusha
cwtl
idivb
adcl
push
dec
out
mov
filds
cld
popf
mov
push
xchg
mov
mov
mov
xor
rorb
popa
lods
stos
out
bound
xchg
dec
mov
rep
adc
cmp
rcl
mov
popa
fstpt
xchg
int
aad
xor
jp
mov
and
test
push
mov
jns
dec
jne
andl
test
and
std
test
and
xor
inc
pop
xchg
pop
test
mov
lea
cwtl
sahf
sub
and
dec
sub
inc
mov
xchg
xor
ret
out
mov
xor
popf
scas
xorl
ret
insl
sbb
cmpsl
in
inc
pop
dec
mov
mov
outsb
mov
jecxz
sub
outsb
ds
push
int
loope
push
icebp
cmpsb
divb
lods
push
push
pop
insl
xchg
popf
test
xor
scas
inc
mov
rcr
mov
xor
dec
xchg
inc
xor
mov
or
mov
mov
push
outsl
out
mov
sub
fcomp
jae
movsl
push
jmp
mov
mov
movsb
imul
xchg
mov
mov
xadd
adc
nop
mulb
mov
das
fbstp
dec
mov
daa
les
adc
mov
xchg
out
push
sarl
push
repnz
jne
inc
fnstcw
jg
inc
stc
rclb
xchg
mov
rcrb
daa
mov
test
and
push
inc
rcl
dec
test
out
rolb
jnp
cmpsb
and
push
jmp
ret
cmp
fndisi(8087
push
ss
lock
xchg
shr
xchg
pop
dec
dec
imul
jnp
adc
loopne
cmpsl
mov
pop
and
inc
addl
jne
inc
jbe
adc
and
push
fdiv
not
mov
movsb
jle
mov
cmp
hlt
sub
fnstsw
js
aad
mov
out
pusha
into
pop
fst
imul
mov
inc
mov
cmc
pop
hlt
in
or
decb
and
popa
shr
jmp
cmpsb
dec
shrl
cld
dec
mov
adc
push
xlat
imul
lcall
popf
rclb
hlt
inc
icebp
gs
test
test
lods
push
add
mov
and
push
test
test
add
adc
sbb
sti
xor
pop
aas
lods
lds
cmc
dec
mov
shrb
ret
fwait
call
daa
mov
int3
addr16
imul
cmp
mov
repnz
clc
mov
mov
fdivrs
and
shl
sbb
lds
test
shrb
jmp
jb
sbb
and
cmp
cmc
ja
pop
test
or
in
fs
mov
xchg
outsw
xchg
stc
pop
pop
mov
outsl
add
stos
mov
bound
ret
adc
xchg
outsl
dec
ret
push
enter
add
shrb
sahf
repnz
sub
call
test
leave
fisubrs
mov
ss
out
sbb
repz
sbb
xchg
sahf
dec
and
push
addb
mov
ds
rclb
stos
mov
popf
clc
jnp
pop
sbb
cmp
mov
jo
lea
cmp
dec
dec
mov
rorb
inc
pop
cmp
in
sub
int
jge
dec
dec
rcrl
pop
push
cmpl
xchg
stos
pop
fs
add
fs
jbe
jecxz
clc
add
jmp
sub
jl
xchg
mov
cld
xchg
ja
and
aad
mov
xor
scas
mov
lods
lds
and
or
outsb
lret
sbb
mov
jge
sahf
jns
pop
jo
shlb
test
test
leave
int3
ds
das
loop
mov
lcall
subb
dec
idivb
or
xchg
fcmovb
cs
xchg
pop
or
mov
push
andnps
out
jecxz
jbe
repnz
inc
sub
dec
dec
lahf
mov
loopne
dec
mov
dec
out
lods
inc
mov
pop
nop
inc
add
lcall
and
jb
or
addr16
andnps
roll
push
and
std
lods
movsl
cmp
cmp
sub
out
mov
jl
pop
dec
sbb
cmpsl
sbb
popa
and
sbbb
mov
or
sbbl
xlat
xchg
std
cmpl
jmp
testb
nop
pop
in
adc
cmpsl
test
sbb
clc
sub
mov
pop
or
lds
pop
aaa
dec
scas
es
out
add
daa
jge
cmp
push
cmp
dec
xor
and
cs
fs
jmp
movsb
lock
ret
inc
mov
add
in
into
aam
je
mov
mov
push
xchg
xlat
loopne
pop
sbb
inc
fwait
call
mov
roll
xchg
sub
lret
mov
and
incb
mull
int3
shlb
mov
into
in
cmp
adc
mov
ss
mov
negb
pop
int
arpl
cmp
cmpsb
adc
jle
push
sahf
pop
jg
stos
xchg
dec
xchg
mov
and
mov
jbe
xchg
jae
scas
pop
dec
jnp
andb
insb
jns
cmp
lods
or
dec
push
lret
shll
mov
adc
rol
xchg
mov
mov
dec
ret
and
inc
mov
push
xchg
mov
movsb
loopne
enter
in
push
mov
cmp
push
faddl
cmpsb
jbe
push
add
insb
cmp
jo
and
mov
jge,pn
jb
sbb
xor
mov
dec
in
adc
cmp
inc
cmp
xor
push
jno
lret
outsb
repz
mov
mov
xchg
inc
gs
cmp
mov
fdivrl
dec
mov
outsl
subb
aam
cmc
daa
lods
jns
xchg
pop
test
or
cli
sub
dec
sahf
mov
dec
cmc
adc
jns
bound
imul
cmp
sub
cli
dec
mov
inc
sbb
cmpsl
or
mov
in
out
popf
std
sub
jae
movsb
push
fucomp
mov
rolb
repz
hlt
cmpsb
inc
inc
mov
into
mov
ds
xchg
inc
hlt
cli
xchg
push
fsubs
adcb
into
sti
lock
dec
xchg
xchg
and
cli
add
inc
rorl
fdivrs
aam
dec
mov
sub
mov
loope
mov
mov
mov
push
lret
jg
push
pusha
mov
xchg
sbb
dec
add
and
rcll
clc
or
notb
push
out
scas
or
or
fsubrl
pop
insb
mov
popf
mov
fnstenv
mov
fmulp
sbb
pushf
inc
das
adc
test
jb
fisubrs
repnz
inc
push
push
push
cwtl
cmp
mov
jmp
jbe
push
jo
mov
les
mov
lods
in
pop
mov
stos
mov
push
jle
push
cmpsb
dec
lahf
cltd
dec
data16
iret
mov
adc
in
add
dec
jno
sqrtps
or
cmp
cmc
fwait
es
lods
je
jmp
loop
cwtl
jo
jg
das
add
adc
mov
lcall
xchg
cli
cwtl
inc
loop
mov
popf
jns
or
int3
data16
pop
sub
stos
sbb
and
fsub
lahf
pop
int3
push
xchg
nop
sub
or
and
test
lret
scas
jb
xchg
cs
les
sahf
pushf
addb
test
scas
mov
and
sbb
lods
adcl
xchg
fcompl
jbe
mov
addl
das
xor
int3
inc
xchg
mov
dec
jo
je
out
in
shrd
xchg
jae
pop
data16
cmp
ljmp
mov
pushf
loope
xchg
popf
nop
inc
xchg
addb
xor
nop
xchg
jg
sub
lds
stos
repnz
xor
push
jle
ljmp
mov
loopne
adc
adc
cmp
out
daa
stos
mov
outsb
and
or
aas
lock
xor
jo
clc
mov
lcall
cmp
ja
xchg
sbb
in
test
cltd
outsl
leave
loope
ret
pop
scas
jmp
jne
movsb
cmp
lret
out
and
jg
scas
bound
or
cld
lock
leave
or
scas
adc
cmpsl
push
adc
mov
add
dec
addr16
loope
jg
add
cmp
std
lock
push
cmpsb
cmp
sbb
test
loopne
pusha
jl
aad
inc
insb
add
lret
jae
stc
aaa
iret
pop
pop
insl
fsub
mov
inc
cld
jns
adc
testb
js
xor
ds
sbb
test
dec
sahf
xor
call
je
jb
xor
sbb
inc
insb
leave
dec
xor
stc
ss
ds
inc
fmuls
push
push
leave
xor
clc
ds
lods
int
xchg
icebp
sbb
les
lods
xor
out
sbb
push
js
mov
sub
stos
dec
stos
mov
cmp
xor
mov
cwtl
adc
inc
xchg
dec
frstor
faddl
mov
xchg
push
and
mov
pop
mov
movups
adc
into
lds
adc
and
inc
iret
push
mov
out
dec
sti
hlt
sub
sbb
mov
repz
outsb
add
subb
xchg
aaa
lret
aas
call
leave
pop
sbb
add
push
and
jl
mov
dec
shl
push
jno
rcl
ret
fcoms
mov
jae
pop
ds
in
pop
aas
mov
pop
icebp
mov
pop
incl
aas
lods
shrb
dec
testl
in
mov
addr16
pop
movsl
sub
repnz
inc
lea
icebp
sbb
jg
sbb
adc
xor
pop
mov
push
cmpsl
sbb
sbb
mov
divl
xchg
fldcw
sbb
sub
out
dec
addr16
dec
mov
imul
mov
hlt
add
jle
mov
fsubr
and
add
sub
in
add
arpl
jae
movsl
jle
dec
std
xlat
mov
cltd
out
aam
jecxz
cmpsl
rcrb
jo
push
hlt
and
aam
push
add
js
jp
enter
inc
add
mov
into
mov
je
aad
rclb
scas
outsb
jmp
movsb
jnp
out
es
jmp
cs
mov
dec
xchg
cmc
dec
lret
jne
das
mov
pop
das
mov
dec
test
shlb
out
mov
push
pushf
int3
in
lock
xor
mov
arpl
push
neg
xor
or
stos
fisttps
push
movsl
sahf
out
xchg
fidivs
sbb
mov
push
mov
rcrb
cmpsl
add
lea
rorl
fcmovnu
inc
mov
adc
mov
xchg
and
mov
stos
inc
xchg
mov
enter
fiaddl
xchg
push
adc
add
inc
outsb
pushf
loop
inc
stc
adc
outsl
inc
fucom
icebp
jns
out
adc
into
mov
mov
subb
ret
add
lcall
ret
inc
int3
outsl
outsl
repz
mov
lds
pop
lods
notb
popa
icebp
lret
lds
push
pop
push
sbb
mov
imul
xorl
mov
nop
loope
xor
pop
push
data16
pop
inc
sub
xchg
call
das
pusha
pop
es
pop
arpl
mov
dec
lea
subl
push
arpl
fisttpl
or
push
pop
fmuls
lahf
dec
mov
scas
inc
xchg
and
mov
cmpsl
push
ret
sti
sbb
dec
adc
xchg
cld
dec
subl
adc
jno
je
pop
test
sbb
ss
lds
imul
mov
cmp
jecxz
repnz
fiadds
psubw
pop
lock
sbb
mov
and
xchg
mov
leave
clc
or
cmp
mov
inc
es
and
adc
mov
pop
inc
cmc
xchg
pop
pop
icebp
ljmp
les
mov
mov
test
rcr
lods
jge
jne
repnz
and
cltd
and
add
cwtl
mov
rcrl
jns
outsl
or
and
mov
int3
add
outsl
test
pop
inc
ss
hlt
dec
inc
imul
loopne
push
push
fisubrl
mov
xor
cmp
test
arpl
cmp
dec
mov
std
cmp
jnp
cmpsb
pop
adc
mov
sub
shrb
dec
fisttps
or
outsb
cmpl
lret
sub
mov
sbb
and
js
rcll
outsl
sbb
or
push
hlt
int
adc
call
fwait
movsl
lds
sahf
repnz
shrl
stos
jns
and
ja
data16
push
xchg
cltd
pop
inc
enter
aam
sub
jns
adc
es
shlb
lea
sub
jg
mov
cli
adc
cmp
xor
push
cmp
and
outsb
pop
bound
leave
fmuls
in
jne
scas
aad
lcall
mov
roll
das
lret
rcll
or
jp
in
add
and
clc
ss
pushf
stos
scas
sub
mov
lds
outsl
scas
jbe
scas
push
mov
sub
inc
pushf
jae
lahf
pop
mov
mov
pop
sub
push
das
or
fsubrs
xor
pop
into
lcall
lcall
mov
push
iret
aad
leave
and
std
jge
cs
sbb
mov
mov
out
xchg
sub
mov
andl
push
jl
push
loopne
add
mov
cmc
mov
outsl
gs
mov
inc
ja
pop
dec
lock
addr16
aad
out
sbb
pop
pop
pop
aas
ljmp
fxtract
popf
inc
pop
or
aam
icebp
into
pop
dec
dec
mov
xor
nop
inc
scas
fs
aam
cmc
lahf
mov
andb
out
in
loopne
fs
loopne
or
mov
or
pop
cltd
fiaddl
sarb
test
stos
mov
imul
adc
xchg
stos
mov
push
popf
dec
loope
mov
and
pop
mov
sbb
jle
mov
mul
inc
inc
lcall
jne
xchg
push
pop
add
mov
jmp
sarb
mov
xchg
repz
dec
xor
push
mov
mov
push
icebp
popf
loop
cld
or
bnd
and
dec
ljmp
pop
aas
adcb
es
iret
push
sbb
or
mov
fists
je
sbb
sub
btrl
je
jae
hlt
push
mov
cs
data16
or
loop
sahf
icebp
push
int3
fwait
stos
xchg
insb
aaa
jp
loop
inc
add
ss
imul
cwtl
xchg
popf
inc
adc
pop
jmp
adc
inc
lds
jl
adc
cmp
and
mov
mov
cmp
push
test
sub
jge
xchg
into
pop
aam
dec
and
fistpl
mov
in
adc
sbb
cld
fsub
cld
mov
dec
or
test
xchg
or
dec
test
pop
pop
push
shl
movsw
cld
mov
fsubp
repnz
sbb
inc
dec
jmp
mov
jnp
mov
add
cmp
mov
fcoms
call
ds
int3
push
cmp
pushf
and
cmpsl
shrl
inc
and
add
dec
and
mov
push
xor
fwait
cmp
adc
jno
add
push
xor
cmpsl
mull
xor
in
pop
lea
mov
nop
lock
sbb
scas
shrb
sub
or
add
lea
je
sub
jmp
les
gs
mov
add
sbb
push
add
sub
into
sahf
mov
in
jp
hlt
mov
jb
jge
adc
push
fistpl
inc
lcall
sub
rolb
icebp
insb
movsb
cmpsw
adc
dec
or
mov
shlb
jo
cmp
jg
adc
lcall
mov
inc
jle
dec
jae
pop
or
sub
gs
gs
test
or
jg
loopne
sub
movsl
mov
movsb
or
aam
adcl
push
dec
js
lds
xchg
les
and
dec
loop
fyl2x
mov
lahf
in
test
aad
push
mov
test
inc
adc
and
adc
xor
jle
push
add
aad
icebp
test
ror
add
mov
add
mov
shrb
inc
sbb
loopne
in
push
sbb
addl
cmp
jle
icebp
and
adc
lret
stos
loopne
pop
and
test
cmp
pop
shlb
nop
add
inc
or
mov
push
jne
jmp
ret
stc
and
pop
cmpsb
jb
mov
lret
das
or
outsb
out
mov
sbb
test
insl
sub
mov
shrl
adc
dec
pop
jae
push
pop
jae
cmpsb
jno
add
dec
jne
pop
mov
dec
cmpb
or
lret
cld
fisubrs
flds
pop
jl
lods
dec
ljmp
addr16
outsl
push
inc
and
xchg
mov
aas
xchg
rorl
xchg
lods
push
bound
rorb
push
mov
push
jmp
rorb
pop
int3
stos
std
mov
lods
jo
das
pop
mov
ljmp
icebp
out
pop
cli
mov
mov
push
fildll
arpl
xor
mov
in
or
test
mov
lds
aam
push
mov
movsb
mov
push
sti
mov
bound
popf
imul
sub
pop
sub
cmpsb
mov
and
out
xchg
xor
in
faddl
int3
sbb
std
js
rcr
jns
dec
cwtl
rorl
into
cltd
aad
adc
and
into
in
add
stos
push
stos
inc
hlt
iret
cwtl
push
pushf
cmp
int
adc
sub
add
push
xor
add
aad
fs
pop
shll
jg
fbstp
out
dec
adc
inc
outsb
ficoml
ljmp
faddl
inc
fcmovnb
cmp
xchg
aas
subb
adc
and
inc
add
int3
aaa
push
imulb
dec
pop
movsb
imul
lret
sbb
mov
cmpsl
lret
jno
inc
insb
push
add
ret
es
aaa
rol
testl
js
xor
ret
mov
or
adc
inc
aas
movsl
repnz
sbb
loop
cwtl
sub
cld
or
outsl
mov
or
test
fucomip
push
movsl
sahf
xor
aas
mov
xchg
push
jl
and
pop
mov
lds
lret
add
push
adc
mov
add
push
movsl
xchg
gs
fldt
bnd
or
mov
movsl
rcr
jns
add
fcoms
loopne
in
mov
dec
xor
pop
cmp
popa
xchg
inc
insl
sbb
cmc
mov
or
rcll
fs
xchg
test
push
push
ds
xor
fistl
shll
int
or
out
cmp
push
cmc
add
push
and
xchg
dec
in
jb
adc
pop
or
insb
mov
stos
xor
test
idivl
xchg
lcall
mov
mov
cmp
lcall
mov
rclb
jge
ret
adc
pop
xlat
or
stos
out
cli
xchg
or
mov
das
add
pop
xchg
xor
aas
cmp
adc
sub
dec
loop
in
or
dec
push
js
popf
add
and
jns
inc
test
add
push
mov
mov
cmpsb
iret
push
lock
sbb
mov
ret
dec
xor
icebp
mov
jg
lods
mov
iret
jecxz
or
push
imul
enter
aam
xchg
repz
aad
ret
jmp
aaa
fildll
push
icebp
push
loop
imul
or
out
loopne
add
xchg
add
cmp
jbe
sbb
pop
dec
shrl
inc
cmpsl
fwait
outsb
roll
adc
subl
sbb
cltd
sub
popa
mov
xchg
and
fisttpll
xor
or
inc
adc
inc
out
lcall
inc
jg
cwtl
mov
dec
enter
cmp
adc
loope
lret
movsl
leave
push
fsubrl
inc
out
insl
pop
repnz
sbb
mov
jb
pop
xor
repz
and
and
in
sbbb
in
xor
mov
add
out
dec
add
cmp
mov
repz
cli
fs
and
xorl
pop
das
iret
ja
ja,pt
adc
sbb
xchg
dec
jg
ja
ret
mov
sbb
and
cmp
push
addr16
sbb
jbe
fsts
pusha
xor
je
ret
icebp
xor
jp
lds
xchg
pop
cmpsb
push
or
outsl
xor
mov
cs
bound
inc
xor
cltd
jl
cmp
icebp
xlat
or
xchg
sbb
mov
mov
inc
imul
movsb
push
bound
pushf
sbbb
rclb
mov
out
inc
pop
push
add
lret
leave
bound
stos
mov
pop
cld
xchg
and
xor
mov
cmp
add
outsb
mov
inc
add
aam
pushf
dec
adc
movsb
xor
das
cmp
xchg
xor
aaa
mov
sbb
push
adc
ljmp
icebp
pop
jbe
out
test
test
cmp
fistps
jb
addb
std
xchg
xchg
por
andl
or
and
jne
xor
mov
adc
mov
mov
ds
shll
gs
lods
mov
sub
cmpsl
ja
add
xchg
jecxz
xchg
mov
ret
or
mov
pop
mov
adc
loopne
popa
mov
add
aas
jb
pop
rcl
lods
mov
push
inc
pop
add
inc
xchg
sub
or
int3
fcmovnb
dec
out
loopne
cmp
cltd
cmpsb
decl
shr
in
mov
icebp
movsl
mov
int
mov
mov
mov
sbb
pop
cmp
dec
js
mov
dec
or
cld
mov
add
push
ds
dec
pushf
fwait
adc
nop
mov
push
or
or
ss
adc
xor
mov
outsb
adc
fneni(8087
clc
jnp
xchg
ljmp
addr16
movsl
lret
lahf
pop
daa
rcrl
xchg
inc
nop
lret
inc
cld
ja
add
movsl
mov
mov
stc
sub
sbb
movsb
sub
mov
sbb
mov
les
add
mov
add
pop
pop
lcall
inc
fimull
outsb
ds
mov
jnp
nop
jae
fbstp
mov
popf
mov
xor
lods
loope
pop
sbb
icebp
arpl
dec
dec
outsl
cmp
pop
cmpsb
call
test
sub
mov
insb
mov
cmpsl
push
mov
lea
xchg
adc
loope
sub
push
rolb
mov
popf
pop
sbbb
xchg
adcb
dec
push
xor
sarb
inc
out
jecxz
pusha
pusha
jl
aam
jle
lea
in
int
sbb
loopne
push
test
mov
mov
addr16
das
test
mov
shll
mov
mov
ret
jo
mov
xchg
and
fmuls
mov
adc
or
stos
pop
fistpl
push
add
lock
mov
pop
out
or
cli
xor
push
imul
sub
dec
mov
or
dec
cli
add
mov
sbb
dec
mov
mov
and
out
aad
push
int3
popa
adc
mov
lods
test
inc
ret
out
cmp
test
mov
push
jle
jl
and
xchg
aaa
into
jmp
cmp
mov
data16
andl
inc
jne
and
pop
gs
gs
cmp
loope
cltd
fmuls
xchg
pop
adc
mov
or
add
jae
xor
sbb
lret
xchg
push
mov
jl
out
mov
xchg
cltd
test
push
jb
xor
fcomps
testb
xlat
popa
mov
test
push
ret
in
pop
push
test
mov
jg
xor
aam
inc
ret
pop
xchg
dec
js
add
jg
xor
or
xchg
adc
out
enter
leave
add
and
in
dec
mov
mov
xchg
sbb
loopne
fdivrs
mov
mov
bound
loop
out
pminsw
xchg
aas
leave
xchg
mov
xchg
xchg
loope
in
mov
sbb
sbb
cmpsl
mov
mov
xchg
cwtl
sub
sbb
ret
jnp
inc
ljmp
add
jmp
ljmp
add
into
mov
mov
jg
mov
xchg
push
ret
test
adc
mov
inc
dec
mov
pusha
add
mov
adc
das
es
jg
cmpsb
insl
dec
sbb
lods
icebp
dec
cmp
dec
jo
test
pop
lock
orl
or
cmpsb
lods
dec
sarl
bnd
ja
or
cltd
pushf
outsl
lock
shrb
lods
mov
xorb
jnp
enter
add
scas
stos
mov
rcll
lret
jne
shrb
sbb
fidivl
ja
imulb
test
outsb
lret
pop
in
inc
popa
pop
nop
test
scas
sti
in
mov
lods
frstor
jecxz
or
insl
push
sub
call
das
lods
adc
faddl
sbb
pop
fcomi
pop
or
pop
sub
cwtl
rorl
insl
sbb
and
cmp
jmp
cmp
adc
shlb
divb
outsl
xchg
mov
inc
push
pop
ljmp
or
inc
addr16
leave
subl
push
jl
movsl
mov
and
xlat
sbb
jmp
ds
mov
inc
fcmovnbe
jne
dec
inc
sub
mov
mov
fiadds
iret
cmpsl
mov
push
cmp
idiv
ss
test
or
jns
shr
xchg
pop
xchg
pop
sbbb
movsl
dec
insl
mov
mov
mov
xchg
popa
pop
fcomps
jl
push
cmc
movsl
out
out
insl
xchg
cltd
pop
cs
fwait
mov
push
scas
xchg
jo
dec
fldt
cld
daa
movsl
jmp
cli
ja
cmp
jne
pop
dec
in
sub
mov
push
lret
push
push
push
in
daa
popf
jne
dec
mov
sbb
call
pushf
jae
push
push
mov
jecxz
adc
push
movsb
out
ja
inc
push
pusha
mov
jl
sub
inc
xchg
fcoms
lea
iret
ja
cmp
mov
lahf
rcll
shl
shlb
xacquire
add
xchg
xor
sbb
cmp
popf
outsb
pop
pop
outsb
inc
sahf
test
adc
cmp
clc
dec
lea
shlb
cmp
and
int
in
mov
orb
mov
test
add
jecxz
cmpl
hlt
mov
mov
cli
sbb
xchg
lret
pop
rorb
addr16
data16
pop
lods
sahf
push
or
inc
mov
pop
add
pop
sbb
xchg
shlb
jne
ret
aaa
js
mov
and
cmp
subl
sbb
stc
das
nop
xchg
mov
xlat
xchg
stos
jge
push
lods
nop
cld
mov
cmpsb
pop
ror
test
pop
or
and
mov
fimuls
outsb
icebp
cmp
pop
mov
aad
mov
sub
frstor
out
pop
cmpb
or
xchg
pop
xor
arpl
xor
in
stos
test
push
test
adc
cmc
test
xchg
jnp
xor
mov
das
outsl
push
xor
int3
sub
cld
pop
inc
xor
jp
lds
mov
jne
pushf
test
mov
adc
jno
repnz
jb
cmpsb
lock
dec
push
call
dec
fdiv
sahf
roll
xchg
sarl
dec
addr16
jno
repnz
scas
adc
add
and
jo
loopne
fadds
outsb
loope
ja
stc
xor
pop
aam
stc
inc
push
sbbb
pop
mov
jo
mov
mov
or
loopne
mov
ret
shrl
lahf
and
mov
xchg
push
out
xchg
nop
call
clc
std
cmp
xor
bound
inc
mov
imull
or
out
add
or
pop
fldl2e
outsl
push
xchg
fistps
mov
test
lods
shl
mov
cmp
xor
test
mov
or
les
fstpl
ret
or
mov
rcrb
mov
pop
aas
hlt
mov
pop
jg
sub
aam
jbe
iret
iret
mov
call
outsl
enter
int3
popf
push
sub
mov
mov
enter
mov
jno
repnz
mov
push
sub
addl
leave
push
hlt
mov
mov
and
ja
mov
ret
dec
add
test
stos
lahf
dec
sbb
cmp
sarb
sar
sub
in
int
mov
cmpsl
jo
push
call
mov
arpl
arpl
lahf
mov
movsl
xcrypt-cfb
cmpsl
loop
loop
jp
mov
mov
lcall
lret
mov
insb
lea
adc
js
pop
sub
xchg
and
cs
fwait
pop
or
addl
sub
lods
jnp
sbb
ja
xchg
test
pop
test
test
lahf
pop
xor
clc
test
add
fmull
xchg
or
xorl
mov
jg
jne
sub
hlt
adc
push
ret
xor
or
and
jo
or
xor
adc
mov
xchg
repz
pop
sub
fisubrl
adcb
inc
cli
out
cmpsl
fsubrs
loopne
push
push
loope
xor
and
jbe
xor
cmp
imul
clc
ret
aam
inc
fldl
fwait
push
outsb
mov
dec
xchg
popf
mov
add
cs
push
sub
fstpt
ret
add
daa
and
into
ret
xor
sbb
lods
out
mov
and
leave
pandn
and
test
mov
cmc
sub
in
adc
cmpsl
and
push
insb
iret
movsl
cmpsb
mov
dec
leave
lds
pushf
pop
pusha
xor
bound
push
jo
out
insl
mov
arpl
push
out
rclb
jnp
insb
into
iret
out
ss
add
into
enter
ljmp
aas
jne
dec
xor
jmp
adc
les
push
mov
push
rcl
lret
js
push
mov
dec
ret
mov
mov
pop
inc
pop
adc
mov
mov
xchg
adc
aaa
jmp
push
push
pop
or
repnz
ss
arpl
cmp
mov
repnz
in
pop
mov
aam
subl
clc
sub
jp
int
and
mov
xor
xor
insl
adc
cmp
push
mov
rolb
jmp
sbb
mov
add
mov
mov
addr16
or
decl
dec
imul
xor
movsb
outsl
dec
test
sbb
pop
sahf
cmpsl
inc
push
push
add
jnp
nopl
out
leave
xchg
cmpb
mov
movb
jmp
cltd
adc
pop
aam
jo
pop
mov
cmp
test
ret
mov
lock
cmova
xchg
outsb
push
pop
fstpt
add
sbb
mov
cwtl
xchg
pop
or
pusha
sarl
aam
cmc
cmp
pop
mov
or
mov
je
pop
jmp
movsb
sub
jns
dec
incb
and
dec
popa
xor
jle
test
sbb
jb
mov
mov
pop
movsb
or
sbb
bnd
mov
dec
inc
xor
xchg
adc
arpl
int3
inc
pop
test
jo
insb
mov
das
rcrb
and
adc
and
jmp
outsl
push
dec
inc
insl
into
in
idivb
xor
dec
cwtl
sbb
pop
hlt
pop
pop
dec
ret
mov
fwait
paddusb
push
jo
shlb
popa
notl
jne
mov
fnstsw
in
cmc
xor
int3
inc
inc
push
dec
mov
bound
sub
jb
sub
cmp
lea
push
cmp
sarl
insb
inc
fchs
bound
rsqrtps
les
pushf
lcall
std
cmc
jmp
outsb
inc
stos
adc
popa
insl
subb
xchg
or
xchg
arpl
mov
mov
push
pop
xor
pop
push
adc
adc
sbb
dec
mov
dec
xchg
les
ja
lret
lret
pop
xor
ljmp
popf
aam
lret
jae
jl
stos
shl
dec
or
loope
push
pop
out
inc
xchg
mov
sahf
inc
inc
mov
aam
fdivr
cmpsl
stos
movsb
or
and
jge
jecxz
in
repz
or
dec
push
add
jle
pop
stos
pop
cmp
test
rcr
mov
pop
ret
in
fmuls
test
pop
jle
and
mov
inc
sbb
or
adc
orb
inc
push
in
sbb
daa
xchg
ffree
and
mov
xor
jbe
cmp
cltd
scas
addr16
lods
pushf
mov
les
cmp
ret
xchg
sbb
dec
dec
inc
stos
daa
lahf
jmp
fcoms
add
jle
addl
sub
nop
jb
stos
pop
mov
xchg
mov
add
inc
mov
push
aaa
testb
sbbb
mov
flds
mov
stos
cmc
outsb
stc
fsts
mov
scas
adc
sti
repz
mov
pop
popa
mov
and
xor
sbb
stc
and
mov
xor
sub
sbb
or
inc
in
mov
fucomp
lods
repz
popf
int
sti
jae
lret
in
jnp
add
xchg
jae
inc
jle
pushf
cmp
cli
scas
hlt
pop
lock
sahf
in
pop
sub
int
mov
push
adc
mov
rolb
repnz
push
mov
loop
rcl
ja
cltd
les
add
out
lcall
call
dec
add
arpl
test
inc
stos
lds
inc
and
cmp
xchg
ficomps
mov
mov
in
dec
mov
mov
sub
inc
mov
sbb
add
das
nop
cli
scas
rclb
into
or
xchg
and
or
icebp
pop
sub
push
pop
sub
xchg
scas
hlt
push
xchg
iret
fldt
and
mov
xchg
cvtps2pd
pop
xchg
or
sbb
pop
sbb
je
dec
sbb
clc
sbb
or
xchg
bound
push
pop
dec
fxch
dec
ljmp
xor
or
xor
pop
jl
insb
xchg
bound
xchg
idivb
ds
pop
pop
mov
rol
mov
scas
out
jge
in
test
sahf
data16
jl
rol
jbe
adc
ja
pop
lods
mov
jbe
xor
push
and
std
iretw
jge
arpl
mov
ficoms
int3
dec
repnz
inc
loope
adc
leave
or
cmp
xlat
out
add
push
inc
push
mov
push
mov
adc
mov
gs
lahf
icebp
push
fisubs
shlb
inc
dec
mov
pop
pop
js
inc
outsl
pop
mov
pop
out
sub
xchg
arpl
out
dec
repz
mov
add
test
out
mov
or
xchg
dec
mov
ss
loop
mov
adc
xor
pop
push
or
or
pop
add
fsubrp
jns
shlb
adc
mov
jno
or
imul
repnz
lret
or
cmp
stc
ret
push
xchg
jle
daa
jb
mov
sub
xor
repnz
lods
cld
push
cmp
stc
sub
cli
sub
mulb
mov
lock
rcrb
jge
dec
adcb
je
lahf
mov
pop
mov
fwait
push
jns
xchg
stos
cmpsb
fisubs
clc
xchg
mov
fisubrs
push
pop
dec
test
repnz
xlat
and
xor
mov
or
adc
scas
in
xchg
ja
sbb
lods
pusha
pop
xchg
lret
daa
xchg
adc
test
out
xor
jmp
mov
dec
imul
jnp
lret
test
push
test
sbb
jmp
lods
cmp
faddp
pop
and
cmp
push
inc
in
lahf
test
inc
and
mov
jb
js
xchg
out
div
shrl
add
adc
out
xchg
sarl
inc
imul
outsl
fs
movb
fstpl
xchg
jne
xor
roll
leave
roll
nop
loopne
push
je
nop
addr16
testl
dec
push
jno
and
mov
ss
jmp
jbe
sbbl
ss
push
shlb
hlt
daa
or
sbbb
push
hlt
add
jo
push
shl
pop
adc
dec
test
adc
rorb
jle
sbb
sbb
dec
mov
outsb
std
pop
or
movl
lcall
pushf
ja
out
and
and
sarl
dec
les
insl
repnz
adc
mov
xor
push
aad
jmp
scas
sahf
mov
lcall
mov
stos
mov
push
insb
sarb
stos
jb
mov
lahf
mulb
lock
add
sub
mov
jmp
cmp
mov
cmp
push
roll
add
in
out
sub
dec
cmpsb
stc
sbb
cli
and
repz
loope
jo
sbb
rorl
push
dec
mov
dec
add
in
xchg
lcall
sub
xchg
loope
aam
insb
cmp
add
mov
mov
pushf
insb
xor
ret
lds
xor
mov
push
xchg
xchg
repz
leave
enter
sub
lods
adc
jmp
push
fwait
inc
jae
jns
imul
cmp
or
push
outsb
loopne
mov
jns
inc
and
mov
xor
pushf
pop
mov
xor
repz
xchg
stos
mov
test
imul
adc
out
sub
scas
iret
stc
call
shll
je
cmp
sahf
and
mov
mov
or
sahf
push
inc
fstps
sub
inc
out
stos
cmp
dec
loop
mov
sub
repz
pop
jge
or
jne
data16
dec
pop
xor
inc
stos
sti
pop
mov
lret
lret
rcll
bound
adc
pop
imul
sti
sub
das
xor
push
mov
movd
rolb
lahf
jbe
stos
jne
imul
dec
shrb
ja
sbb
fldcw
cltd
jmp
imul
stos
mov
mov
xchg
inc
or
pop
fisubrl
je
mov
int
pop
cmpsb
mov
and
std
add
shll
mov
sahf
sub
sbb
into
add
lahf
jo
iret
in
insl
mov
jno
jle
dec
sub
popa
xor
dec
sub
rol
push
push
add
xchg
in
test
fcoml
xor
xor
pop
xor
int
pop
enter
push
adc
sbb
cld
sbb
inc
clc
xlat
jne
fistps
pop
xchg
push
outsl
xor
cmpsl
jl
shlb
cs
mov
mov
sub
mov
out
or
lea
call
cmp
push
ds
loope
mov
jb,pn
lods
lahf
inc
and
sub
push
loopne
dec
cmp
fildl
loopne
inc
pop
mov
pop
pop
es
mov
push
push
test
lret
aad
xchg
push
push
cmp
sbb
jo
ljmp
mov
xchg
hlt
mov
pop
cmpl
sbb
stc
jo
mov
pop
mov
xchg
mov
mov
ret
fimull
dec
mov
jmp
fisubrs
pop
nop
sub
lcall
data16
push
mov
dec
imul
scas
into
jno
je
mov
adc
repz
cmpsb
subl
push
lock
mov
inc
xchg
int3
mov
xor
cltd
addr16
adc
lds
ljmp
inc
push
xchg
cltd
orl
pop
pusha
scas
scas
inc
inc
lcall
cwtl
push
xchg
aam
dec
sub
jne,pn
adc
push
in
les
inc
aam
call
jl
cmpsl
jnp
cmpsl
subl
outsl
xor
jae
adc
sbb
pop
dec
jecxz
pop
xchg
popa
stos
xchg
js
fists
out
jns
es
fstl
xor
inc
push
fs
push
out
stos
dec
and
push
stos
aad
std
xchg
inc
mov
lahf
cmp
stos
mov
sub
sti
sbb
enter
pop
and
and
pop
jnp
sbb
push
jo
roll
dec
scas
or
pop
ficoml
push
les
pop
je
push
dec
sbb
andb
test
mov
icebp
sub
jg
sbb
sbb
jp
movsl
push
les
arpl
push
sti
fsubrp
mov
sub
out
test
in
sbb
imul
rcll
pop
rcrb
or
xchg
or
xchg
pop
imul
inc
mov
fucomp
sahf
sbb
mov
js
std
sarb
jl
adc
subl
jecxz
loop
mov
lcall
dec
mov
dec
or
jns
inc
push
or
out
mov
sti
fwait
xorl
aaa
rorb
imul
lds
ret
xor
jle
jecxz
xchg
and
in
mov
clc
jge
scas
jmp
jns
mov
or
rcrb
data16
repnz
jl
add
inc
jge
cmp
adc
dec
fs
push
push
cmp
or
cmpsb
inc
lret
das
xor
jp
sub
lock
xlat
adc
xor
or
push
cmp
cwtl
push
fcomps
pusha
cld
inc
sarb
outsb
or
xchg
sahf
mov
shrb
xchg
ret
jne
or
dec
insb
adc
xchg
nop
mov
jbe
push
add
and
rolb
mov
pop
sbb
cmp
out
or
stos
sbb
and
lods
cmpsl
iret
popf
jbe
push
vandps
jb
jle
mov
xor
cmc
mov
jmp
js
pop
add
scas
leave
pop
sahf
push
sbb
mov
aad
stc
not
mov
adc
push
outsb
cmp
shlb
push
icebp
jb
xor
cmp
jp
icebp
add
test
pop
cmpsl
hlt
popa
add
dec
mov
mov
xlat
jp
scas
mov
mov
sbb
fwait
xchg
inc
cmp
and
mov
fldl
adc
movsl
lods
inc
sub
pushf
sar
jp
bound
sbb
cmpsb
pushf
and
sub
and
mov
pop
testl
sbb
int3
mov
cwtl
fucomip
adc
xchg
mov
push
jae
and
test
xor
cs
jb
movsl
mov
stos
push
mov
mov
rorl
cmp
mov
dec
xchg
outsb
shlb
push
mov
out
movsb
push
cmp
xor
cmp
dec
ret
rcl
push
xor
dec
inc
andb
repnz
pop
pop
push
or
mov
bound
pop
inc
sahf
aaa
push
cmp
in
out
push
xchg
mov
push
in
cld
scas
sbb
mov
push
js
jle
pusha
loope
out
shl
jne
cmpsl
pop
push
sub
pop
lds
out
inc
test
sub
add
loop
pop
sbb
lds
arpl
push
loope
orb
xchg
sti
stos
mov
inc
xor
inc
pop
sti
cli
push
mov
icebp
adc
adc
aas
fisubrl
fwait
xchg
inc
je
cmp
int
mov
lcall
cmpsl
jecxz
mov
cmc
fstl
xchg
add
cmp
stos
mul
js
outsl
ret
xchg
les
dec
or
lods
mov
in
into
stos
push
popa
xchg
mov
jns
out
mov
je
enter
dec
int
pop
pop
js
push
mov
fmuls
sub
xor
ss
cltd
outsl
out
jle
mov
inc
imul
lock
sahf
clc
lea
mov
push
xlat
mov
loope
shl
jo
pop
fwait
push
hlt
push
shl
aaa
add
arpl
add
jne
cmp
test
jmp
dec
sub
in
rcll
sub
push
push
mov
stos
mov
jae
roll
inc
inc
lret
sub
lods
fucom
sub
or
cs
mov
mov
pop
dec
stos
push
outsl
cmp
or
cmp
popa
in
cmp
scas
decb
movsl
dec
or
sub
or
lcall
bound
pop
xchg
jecxz
cld
add
lcall
jo
xor
jecxz
out
nop
jmp
fs
rcll
jns
pop
scas
pop
out
mov
clc
lea
push
add
cmpsl
cmpsb
adc
mov
sbb
or
add
in
or
jbe
cmp
and
adc
or
stc
aas
and
jae
cs
loop
clc
insl
sub
sub
cld
xor
pop
push
sbb
nop
mov
js
lea
dec
jle
out
pop
es
neg
leave
out
sbb
mov
adc
mov
test
aas
push
cmpl
sti
jns
enter
cs
and
inc
shrl
mov
mov
fadd
mov
mov
cs
xchg
adc
inc
nop
dec
mov
shll
pop
orb
push
das
pusha
gs
xchg
and
pop
add
sub
pop
stos
add
fistl
fiadds
mov
enter
data16
and
mov
test
cltd
mov
iret
insb
test
or
push
jne
push
cs
and
mov
push
lret
adc
outsb
xor
insl
and
insb
rcl
into
mov
mov
test
sti
aaa
push
xor
or
adc
mov
outsl
mov
mov
scas
outsb
sub
ret
rclb
out
pop
add
ja
jecxz
push
and
ja
fstl
jg
ss
mov
leave
jbe
in
sbb
xlat
cmp
mov
movsl
icebp
sub
dec
insb
orl
or
in
movsb
repz
cmp
clc
jne
aad
cltd
cs
insl
or
js
mov
fwait
lods
xchg
mov
xchg
inc
lahf
mov
aam
xchg
ljmp
ljmp
sahf
pushl
aad
test
xchg
xor
stos
imul
xlat
out
out
test
iret
ret
addr16
and
sbb
gs
out
inc
jle
xor
inc
std
in
dec
jo
inc
and
movsb
xchg
or
popa
jne
repnz
jnp
lds
ret
inc
jo
xchg
popl
test
pop
jo
ja
mov
push
bound
xlat
ret
mov
jns
test
mov
mov
aaa
mov
ljmp
orl
sbb
cmpsl
es
cmc
pop
and
xchg
push
fxch
in
mov
xor
and
das
cs
rcrb
dec
rorb
fistps
pop
ret
sub
add
call
push
jns
ja
sbb
mov
iret
cli
dec
xchg
mov
ret
gs
push
cwtl
jl
sub
pop
hlt
lcall
cmp
rcll
adcb
das
sbb
or
adc
dec
outsl
push
insl
bound
jl
jae
xchg
jno
enter
sbb
sahf
push
mov
xchg
mov
cmpsl
fstl
lret
dec
in
or
js
jecxz
imul
sbb
icebp
add
sub
dec
mov
fmul
ljmp
mov
add
xchg
fsubs
dec
rorl
in
daa
aas
adc
bound
scas
mov
mov
loop
testl
mov
pop
jbe
cmp
push
pusha
jno
mov
shll
lods
movsl
jl
stos
xchg
push
mov
push
mov
inc
sub
xchg
pop
stos
dec
test
fbld
xchg
xchg
sarb
and
adc
pop
test
enter
sub
stc
in
add
cwtl
hlt
and
adc
xchg
cmp
jno
es
pop
xor
fcmovnb
and
dec
pop
push
movsb
ljmp
fwait
lahf
mov
shlb
xor
lods
xlat
mov
lahf
gs
adc
and
inc
jae
mov
test
scas
ret
mov
mov
sub
sbb
scas
jmp
pop
or
mov
out
sub
and
test
dec
in
into
dec
jae
mov
stos
push
jbe
into
and
scas
imul
push
fildll
pop
xchg
shrl
sub
fstpl
std
inc
sub
pop
mov
lods
jmp
xchg
jmp
inc
sub
sub
leave
push
out
in
lret
imulb
jo
mov
push
inc
or
cmp
pop
xchg
jo
divl
or
divb
jne
jecxz
xchg
jmp
sarb
sbb
stc
cmp
xchg
and
add
cmp
mov
jne
test
mov
or
mov
repz
jno
jp
add
mov
imul
push
xor
icebp
in
mov
orb
pop
leave
rcr
sbb
cmp
int
sbbl
sbb
push
mov
stc
sub
xchg
outsl
sub
mov
dec
clc
or
gs
sbb
mov
jl,pt
pop
lret
sbb
adc
jecxz
sahf
xor
jmp
fsubrs
adc
inc
rorb
sti
inc
out
and
inc
pop
xlat
xlat
sub
sbb
or
push
sbb
je
jae
hlt
pusha
fcoms
outsl
cld
stos
in
fwait
insb
mov
sub
test
inc
out
in
and
sahf
adc
ss
testl
out
lcall
adc
int
push
add
and
test
iret
jo
cltd
outsl
lods
repnz
ret
ss
mov
in
mov
mov
jnp
popa
push
adc
pop
sbb
sahf
add
or
outsb
jmp
xor
mov
std
sbb
cmp
aas
pop
scas
notb
out
sbb
aam
pop
inc
jge
inc
std
sahf
fdivr
mov
pop
cwtl
mov
insb
lahf
xchg
sub
scas
gs
dec
popa
out
out
scas
lret
outsb
pop
ljmp
and
rol
jbe
jg
int3
sub
add
jno
ja
sbb
dec
addl
mov
nop
popf
or
jae
mov
mov
add
jle
adc
inc
dec
es
cmp
mov
das
sahf
icebp
cs
aas
lret
sbb
movsl
mov
or
or
scas
lods
push
push
ss
ret
adc
std
dec
cld
fwait
dec
icebp
inc
inc
out
sarl
fwait
mov
inc
sarb
pop
repz
or
xchg
cld
and
sarb
test
js
rcrl
sub
mov
mov
inc
out
and
jbe
pop
aaa
jge
shlb
test
gs
dec
sub
lret
ja
mov
mov
sbb
mov
out
insl
insb
mov
sti
movsb
xorl
dec
repz
pop
sbb
arpl
test
adc
cmpsl
and
loope
pusha
in
mov
xchg
mov
cmp
scas
mov
push
inc
lea
push
movl
mov
push
pop
lods
inc
pop
inc
adc
fimull
sub
push
push
jb
sub
or
adc
fisttpll
cltd
les
ret
into
je
sub
dec
xor
add
jp
lods
fadd
std
mov
int3
xchg
je
jecxz
adcb
cwtl
pop
lcall
jp
mov
jle
outsb
mov
hlt
inc
xchg
insl
rclb
lods
rorb
push
ds
add
or
int
xchg
mov
subl
adc
jp
fdiv
sbb
dec
xchg
lcall
push
or
loop
and
and
mov
dec
mov
jp
dec
lods
push
mov
sbb
test
jecxz
lahf
lret
and
push
jp
inc
jle
scas
js
sub
jbe
testb
inc
push
out
mov
cmp
add
push
fstps
xchg
xchg
adc
gs
cmp
inc
push
or
push
push
ss
push
shrb
adc
inc
cmp
cs
fwait
inc
aad
pop
inc
iret
sub
lock
mov
cs
js
daa
xchg
jno
push
call
scas
mov
shll
ret
shrl
outsb
hlt
push
pop
loop
gs
push
and
adc
mov
iret
inc
fistl
inc
cli
adcb
dec
add
nop
mov
fldenv
aas
jbe
dec
lds
adc
shll
fadds
pop
loope
leave
sub
or
or
aaa
cs
mov
out
cmc
or
xor
cmpsb
or
cwtl
addl
dec
fs
and
mull
das
orl
sub
xchg
pop
xchg
mov
jns
cmpsb
sbb
lds
in
leave
cltd
inc
sbb
xchg
pop
mov
adc
mov
or
loopne
push
pop
sub
popa
mov
mov
push
push
cwtl
movsb
cmp
dec
xchg
or
inc
sbbl
cmovb
lret
stc
mov
sub
cmpsl
loope
divl
ljmp
ret
jbe
dec
divb
adc
leave
lret
arpl
xor
mov
or
xchg
in
mov
int
jo
pop
mov
es
test
inc
out
sbb
out
aad
cmc
loope
in
pop
pop
movsl
les
inc
xor
adc
hlt
sbb
lods
inc
mov
loope
test
pusha
into
push
scas
mov
pop
decl
popf
test
xor
push
mov
jl
or
movsl
pop
fwait
adc
dec
sub
xor
or
jbe
cmpsl
sub
popf
shlb
inc
jg
fldenv
test
aas
aad
shl
loop
mov
jge
jmp
mov
add
fsubrs
push
sti
loopne
es
movsb
xchg
pop
fldenv
mov
and
sub
mov
stos
pop
loop
loop
pop
in
push
imul
jle
cmp
test
jmp
mov
std
and
loope
push
movsl
mov
lods
mov
jl
shrb
adc
adc
sti
lock
out
inc
push
inc
dec
in
fwait
fwait
icebp
subb
push
dec
out
pop
subl
cmp
insl
cwtl
mov
jns
cmp
adc
pusha
push
cmp
lea
ffree
jp
cmp
inc
xchg
ljmp
xchg
loope
nop
xchg
xor
push
jo
popl
dec
int3
inc
mov
out
out
inc
js
std
mov
pop
add
mov
inc
mov
and
cltd
xlat
fcmovne
insb
cmp
test
add
inc
adc
xor
std
cmp
xor
add
inc
or
mov
xchg
in
and
pop
xchg
data16
outsb
in
repnz
xor
movsl
pop
divl
cmp
data16
dec
jmp
inc
dec
ja
rcrl
ds
xor
mov
push
or
jg
add
mov
cmpsl
mov
xor
faddl
mov
mov
mov
in
jb
mov
jg
sbb
mov
fdivrl
jno
sahf
scas
ljmp
jle
sbb
cli
out
stos
push
adcl
loop
in
bound
jne
in
cmp
aad
popa
add
popa
mov
pop
fldenv
stc
pop
fcomps
cmp
bound
add
xchg
lret
repz
or
fcoms
cmpsb
mov
test
fwait
mov
dec
movsb
pmaddwd
mov
pop
aad
movsl
rcrl
sub
cmp
arpl
clc
push
add
jbe
pop
in
xor
dec
mov
sub
jae
pushf
xchg
mov
xchg
imul
aas
jp
or
scas
jmp
stc
jge
or
dec
sbb
lock
push
in
jge
cmp
mov
incl
dec
fcmovu
fs
mov
cs
adc
push
movsb
je
mov
gs
or
sub
mov
mov
mov
roll
pop
mov
mov
and
pop
mov
adc
cmp
mov
sbb
inc
loope
cmp
lahf
xchg
cs
dec
shll
popa
mov
push
sbb
push
sub
jge
mov
adc
xchg
jne
lods
jno
add
in
aaa
pop
enter
sub
out
pop
pop
fwait
sbb
shlb
clc
cmp
aas
into
sbb
sub
out
mov
ret
push
loopne
outsb
jl
add
in
aas
aas
test
or
push
clc
imull
sahf
dec
sbb
jno
push
or
push
mov
mov
scas
xlat
mov
hlt
cmpsb
inc
int3
sub
imul
jecxz
ret
pop
pop
ror
pushf
in
sub
and
lods
xorb
icebp
push
add
sbb
mov
inc
hlt
ljmp
int
push
sbb
pusha
cs
dec
lahf
push
roll
daa
mov
jae
ret
mov
or
pop
imul
push
in
and
xchg
mov
data16
sbb
or
or
fs
inc
adc
or
rolb
in
xlat
or
outsb
iret
jbe
push
jo
dec
or
lret
mov
xor
cli
cmp
adc
in
jmp
loop
push
add
push
ja
sbbb
lret
ljmp
pop
out
and
lahf
mov
shlb
jne
ss
jbe
and
cs
int
dec
xchg
sub
fs
push
jg
mov
cmpsb
ljmp
mov
insl
dec
int
in
adc
test
icebp
dec
push
push
sbb
mov
aad
aas
in
lea
sbb
roll
dec
scas
gs
cmp
xor
jle
mov
inc
insb
dec
mov
pop
cltd
mov
mov
xor
mov
cmpl
jnp
adc
push
sbb
pop
cmp
and
lret
xchg
fcomps
and
bound
jecxz
orb
sub
and
sub
andl
lahf
mov
adc
movsl
hlt
mov
xchg
dec
enter
outsl
cmpl
lods
in
xor
jnp
push
mov
mov
adc
into
cmpsl
jl
in
add
push
mov
fldcw
pop
mov
bound
mov
test
mov
mov
jae
addl
fcomps
add
push
mov
cli
sbb
add
mov
inc
sub
mov
pop
xlat
pop
mov
cmpsl
in
jmp
rolb
loope
inc
dec
jge
pop
feni(8087
inc
daa
fimull
imul
je
movsl
aas
daa
scas
cmp
inc
pop
mov
aam
sbb
fadds
mov
enter
adc
aas
test
iret
jae
iret
fsub
xlat
cs
aam
xchg
adc
fstl
lret
fcmovbe
push
mov
cwtl
inc
pop
xor
aam
rorb
jnp
jmp
cmp
or
mov
adc
cltd
xchg
or
lds
and
sets
test
mov
mov
jg,pt
and
adc
hlt
lret
add
out
or
fsubrl
sbb
lcall
sub
inc
cmc
or
data16
shll
arpl
push
icebp
mov
push
pop
push
push
lea
inc
sub
addr16
in
mov
mov
mov
pusha
sti
movsl
push
daa
and
or
pusha
xor
mov
jp
clc
das
outsl
inc
scas
cmpl
jb
lcall
add
das
icebp
rolb
mov
mov
mov
out
ja
stc
jg
and
cmp
push
enter
pop
iret
sbb
aam
jae
dec
fistl
xchg
dec
cmpsb
test
orl
sbb
jnp
dec
insl
test
imul
aaa
bound
fildll
cmp
dec
fiaddl
xor
loop
mov
and
stos
jl
imul
jle
or
inc
mov
cmp
and
ds
dec
pop
pop
and
mov
ljmp
xor
or
jo
jbe
pop
out
imul
cmp
test
lahf
test
cltd
addb
ficoml
dec
jbe
inc
jne
add
jo
cwtl
pushf
frstor
mov
vmread
std
test
and
or
jns
pop
pop
or
cli
popa
jmp
jns
or
or
cmpsl
mov
xor
jb
dec
or
xchg
inc
test
xor
adc
das
lea
outsb
aad
bound
syscall
dec
arpl
cmp
sbb
dec
es
aaa
jnp
nop
pop
mov
xchg
inc
mov
in
add
in
adc
push
mov
jl
aad
inc
cmp
add
pop
push
dec
out
pop
cmp
bound
div
clc
imul
lock
dec
jecxz
movsb
cmp
repnz
add
adc
add
and
out
test
lret
scas
pop
mov
or
inc
mov
xchg
jl
lahf
lret
adc
sub
cmp
jbe
pop
dec
nop
push
nop
adc
mov
cwtl
pusha
jmp
mov
inc
bound
jg,pt
into
and
bound
test
dec
add
push
lea
mov
xchg
cmp
aas
adc
inc
push
aaa
mov
push
push
orl
push
outsl
les
pop
pop
out
xor
jbe
add
pop
or
mov
test
pushf
mov
cltd
xlat
pop
add
pavgw
cmpsb
insl
ds
pop
stc
cmp
test
loopne
ret
lret
sbb
dec
xor
jb
imul
mov
ret
inc
lret
inc
jge
cmc
push
sub
push
mov
cmpsl
mov
fnstsw
or
std
and
mov
cmp
imul
inc
sahf
loope
movsb
xlat
test
aas
pop
sbb
jg
out
cwtl
rol
push
adc
popf
push
inc
add
int3
sbb
fstps
inc
mov
sbb
leave
loopne
movsb
xor
mov
pushf
adc
cmp
cwtl
cmp
mov
cmp
mov
inc
adc
xchg
xor
scas
data16
icebp
je
aas
mov
and
push
fldl
decl
cmp
out
mov
mov
lea
inc
jle
pop
cmovnp
sbb
aaa
aaa
cmpsl
bound
push
push
cmp
sub
jge
add
lret
or
int
aam
outsl
push
sbb
push
cmpsl
ds
jno
sub
mov
decl
pop
mov
xor
arpl
jmp
cs
dec
sbb
idivb
inc
ret
pop
push
sbb
dec
lods
or
xor
mov
lcall
pop
mov
dec
mov
insl
mov
mov
mov
sub
mov
and
pop
push
or
mov
aam
mov
adc
scas
dec
cmpl
mov
mov
loopne
pop
push
cmp
push
push
or
mov
mov
and
xchg
mov
mov
inc
pop
inc
lahf
inc
cli
in
movsb
pop
inc
nop
pop
adc
lret
rcl
test
outsb
subb
stos
cmc
out
fldt
jbe
subl
orb
stos
lcall
sbb
sbb
mov
xor
push
or
lods
sub
lods
add
and
xor
jae
test
jg
loope
bound
sub
jl
mov
imul
or
dec
loopne
adc
lods
cmp
loop
fldenv
mov
sub
out
mov
inc
jmp
out
js
ljmp
sbb
mov
loope
enter
and
sbb
cli
aam
xchg
cmp
jne
xchg
or
mov
iret
inc
icebp
out
lods
imul
mov
push
push
es
ja
and
push
and
push
adc
add
and
stos
dec
adc
int
in
leave
xchg
cld
xor
sbb
enter
int
mov
getsec
fistl
dec
sbb
arpl
add
mov
movb
dec
jb
mov
out
or
and
inc
outsb
or
lahf
xchg
sub
iret
ficoml
cmpsl
scas
in
pushf
mov
lods
cwtl
mov
icebp
out
test
les
insb
jp
ljmp
mov
sti
in
and
adc
icebp
mov
dec
clc
test
fsts
rcl
push
add
fisttpl
decb
mov
push
test
pop
nop
dec
sub
push
popf
sbb
sahf
inc
lahf
inc
nop
arpl
fnstsw
aas
daa
outsb
and
fisubl
xchg
in
decl
mov
popf
push
scas
aad
lcall
inc
repnz
adc
add
rcrb
push
pushf
test
cmp
out
pushl
fcmovnbe
inc
rcrb
push
icebp
stc
loope
dec
shrb
adcb
fsubs
xorl
mov
push
das
out
fstps
js
iret
push
sarl
xchg
ja
das
and
std
and
sbb
add
lahf
insb
push
stos
outsl
test
inc
rorb
rcrl
sub
rcl
pop
jmp
test
fwait
jle
jle
jae
outsl
lret
popa
and
sub
repz
das
std
jbe
inc
roll
int3
pop
popf
add
lods
or
rorb
cmp
push
pop
jmp
jno
testl
and
push
repnz
mov
push
sbb
xor
lods
xlat
orl
in
push
mov
lahf
ds
dec
daa
movsb
fadds
repz
mov
ljmp
pop
jae
loopne
out
cmc
inc
shlb
push
push
mov
pushf
and
loop
dec
into
mov
lods
xchg
jns
mov
inc
cs
xor
cmp
and
gs
pop
jb
ljmp
cwtl
pop
dec
jg
not
jnp
pop
fs
scas
mov
mov
stos
sbb
mov
fucomip
pop
inc
in
sub
lods
dec
and
cmp
xchg
adc
mov
pop
pop
pushf
aaa
mov
movsl
and
push
mov
nop
push
cld
adc
cld
jmp
cli
js
je
fstps
pop
cmp
cltd
dec
popa
inc
cmp
ja
aad
movsl
inc
xchg
ss
call
test
and
pop
insl
sub
repnz
das
popa
push
sbb
and
sti
lds
sbb
call
inc
jp
dec
cmp
pop
movsl
xchg
fwait
pop
imul
jo
mov
dec
movsl
xor
and
mov
leave
add
ret
xor
adc
and
pop
out
xchg
fnsave
idiv
fsubs
test
jnp
jae
fcmovnb
lret
jmp
and
dec
out
adc
shl
cmp
sbb
push
cmp
iret
cmpsl
adc
aam
pop
jmp
bswap
aam
xor
addl
scas
call
popa
mov
mov
lret
xchg
xchg
fldl
int3
mov
inc
mov
ss
shlb
cmp
repz
mov
xchg
sub
mov
push
adc
cmp
inc
fsts
add
xchg
cmp
xchg
mov
cwtl
movsb
sub
lahf
repz
fsub
incl
cld
fcoms
test
stos
sbb
out
ficomps
incb
in
bound
int
int3
sbb
loop
inc
inc
daa
mov
adc
arpl
or
or
dec
scas
je
inc
sub
push
inc
movsb
dec
push
mov
inc
data16
pop
cmpsb
push
test
in
adc
in
push
iret
pop
clc
pop
or
fs
and
cmc
add
dec
sbb
inc
or
push
insb
or
js
mov
leave
cmp
push
cltd
dec
daa
mov
ds
xlat
outsb
pusha
inc
and
loopne
add
call
push
mov
cmp
and
mov
les
in
add
pop
jle
test
lahf
ja
jecxz
inc
movsb
fiadds
xchg
or
and
push
add
ret
sub
repnz
out
xchg
lahf
mov
mov
ja
pop
or
test
lcall
xor
or
imul
push
pusha
sub
sub
mov
mov
adc
cli
pop
lret
add
mov
fs
inc
or
lds
jge
popf
or
pop
dec
sub
nop
lods
xor
imulb
loop
lds
jb
adc
adc
mov
cmpsl
out
aam
adc
cs
or
test
mov
sub
out
mov
adc
inc
sub
jmp
and
lock
mov
movsb
int3
xor
inc
jne
dec
fs
shll
jge
test
divl
lea
adc
add
pop
pop
cmpsl
mov
xor
cmpsb
jno
inc
fs
nop
popf
cmp
push
ds
jbe
mov
mov
adc
push
mov
or
bound
adc
jae
cmp
adc
outsl
mov
and
dec
jno
add
lods
or
fwait
inc
push
pop
cwtl
data16
jge
cmp
data16
divl
lods
sbb
insb
sub
and
fisttpll
mov
repz
push
test
or
sbb
mov
popa
lret
mov
clc
jmp
aam
xor
shlb
add
in
mov
sbb
cmp
jne
shll
ds
enter
jbe
inc
es
sub
pusha
in
mov
mov
adc
testl
xchg
mov
xor
stos
add
adc
xlat
xchg
inc
jae
mov
push
jnp
inc
push
mov
cmpsb
jo
test
adc
fsubrl
mov
mov
add
addr16
jle
xlat
sbb
xor
movsb
pop
repnz
stos
pop
lret
call
mov
call
jp
nop
fs
mov
jge
icebp
gs
xchg
adc
add
negl
jo
cmp
cmp
push
jnp
cmp
popa
adc
lahf
lods
hlt
xchg
pop
mov
punpckldq
lods
out
stos
in
xlat
mov
cmpsb
push
mov
in
jne
es
fstl
jl
sbb
adc
xor
int
jns
data16
cmovno
ret
mov
sbb
int
loopne
add
addr16
or
stos
and
dec
rolb
dec
roll
push
stc
in
into
in
lahf
or
pop
js
jno
mov
sbb
gs
inc
fildll
mov
mov
outsl
lds
movsl
mov
sbb
decl
jne
fcomip
lcall
adc
mov
or
je
popa
xor
ja
pushf
out
mov
in
cmp
movsb
scas
sub
insb
mov
sbb
pusha
xor
mov
repnz
add
pop
mov
rol
and
fdivp
cmp
cmp
lods
adc
cwtl
inc
push
add
stos
xchg
xchg
testl
pusha
rep
mov
out
out
addr16
cld
mov
push
icebp
jae
stos
dec
popf
loope
pop
adc
pop
jmp
test
scas
mov
cmp
or
mov
ss
xor
jg
pop
dec
xchg
dec
testb
inc
xchg
or
pop
cmpsb
dec
outsb
mov
sub
jnp
out
xchg
mov
jl
push
insl
fwait
jno
mov
pop
lods
adc
test
and
mov
cmp
scas
jge
push
inc
sahf
mov
repnz
movsl
jl
imul
fisubl
push
out
or
cwtl
mov
mov
fld
adc
pop
add
aam
lret
xor
cmpsb
push
scas
sbb
shll
cmpsl
bound
mov
mov
cmpsl
dec
inc
cs
inc
fwait
cmpsl
cmp
outsb
push
mov
xchg
xchg
mov
test
xor
cld
push
or
jmp
ret
daa
hlt
dec
sbb
imul
mov
mov
pop
mov
mov
push
movsb
push
enter
adc
aas
inc
xchg
cli
sbb
imul
and
and
pusha
js
cltd
adc
push
xchg
addr16
movsb
out
aam
jb
cmpsb
push
or
mov
mov
fwait
fwait
adc
sbb
dec
push
jmp
int3
das
sbb
push
popa
mov
jg
or
xor
cs
sub
mov
pop
sti
jmp
mov
xor
adc
out
shlb
mov
jns
cwtl
ljmp
mov
mov
xchg
jb
test
icebp
sbb
jg
nop
sbb
cs
fcmove
iret
xchg
outsb
out
lretw
ds
adc
stc
insb
aad
sub
cmpsb
or
scas
jl
out
icebp
int
cmpb
jle
mov
jmp
pop
sbb
imul
insb
inc
bound
popa
or
add
ficoms
or
jg
adc
push
jns
push
xor
es
cmp
in
aad
into
mov
push
lret
jp
xchg
rcr
xchg
mov
rcrb
in
inc
enter
mov
lcall
test
in
mov
aam
mov
push
loope
jb
cmp
enter
repz
xchg
inc
or
fmul
sub
cwtl
imulb
mov
test
dec
mov
xchg
push
rcl
pop
gs
int3
pushf
das
aad
jns
dec
xchg
mov
or
int3
inc
clc
vpmovzxbw
inc
jg
inc
dec
stos
stos
push
int3
push
aad
inc
mov
ljmp
xchg
stc
sub
fistps
or
jbe
add
into
addr16
mov
adc
push
mov
sbb
dec
lods
test
mov
mov
stc
cs
xchg
pop
adc
inc
mov
push
mov
pusha
xorl
fsub
enter
push
stc
jae
cmpsb
mov
adc
addr16
add
fidivrl
out
loop
mov
xor
insl
push
inc
push
mov
pop
bound
popf
mov
sti
div
dec
jnp
rclb
call
rcl
cmp
mov
icebp
dec
dec
call
add
jle
adc
hlt
jle
push
fwait
push
jecxz
sub
xchg
rclb
fmulp
lock
mov
xchg
xor
push
jne
aaa
push
sahf
pop
jns
or
jne
mov
aas
xabort
add
insl
sbb
mov
mov
cmp
cli
inc
insl
in
sub
stos
xor
test
pop
or
push
dec
cmp
in
sbb
cmp
add
in
outsb
mov
scas
bound
mov
jne
mov
sbb
dec
mov
push
lret
fldt
fsubl
dec
lea
ss
jg
sbb
cmc
ljmp
loop
add
imul
adc
mov
adc
pop
push
xchg
movsl
mov
add
cmpsb
mov
xchg
test
sub
mov
add
push
hlt
leave
mov
or
mov
cmp
insb
lods
push
or
jne
or
add
sbb
in
xor
stos
out
add
push
mov
mov
rorw
xchg
jp
inc
adcl
xchg
push
jmp
xchg
enter
mov
mov
xlat
xlat
mov
arpl
out
popa
testl
aad
push
es
jp
insl
loop
movsb
scas
lret
jecxz
pop
icebp
mov
mov
pusha
loope
mov
add
lahf
pop
js
aad
xchg
fistl
dec
jae
lcall
xor
js
in
cmpsl
pop
arpl
test
shlb
xor
lahf
sbbl
dec
xchg
in
dec
mov
sub
mov
sub
movsl
jp
in
sbb
mov
int
xor
jge
xchg
fcoms
mov
jae
bound
fmul
es
hlt
das
inc
jge
pusha
and
jmp
lea
mov
aad
das
xor
mov
cmp
sbb
mov
fnstenv
jae
lret
sahf
dec
scas
lret
mov
push
ja
dec
xor
test
push
stos
and
sub
sahf
pop
dec
pop
push
xchg
xor
lods
push
mov
dec
adc
arpl
call
and
cli
add
sub
xor
dec
cmp
mov
and
loop
sar
test
mov
or
stos
inc
jne
into
psrld
add
repz
mov
mov
jp
lds
aaa
arpl
sub
pusha
sbb
mov
xor
in
xchg
addr16
jle
pop
loopne
push
in
leave
pop
dec
out
xchg
lret
repnz
or
cmpl
jecxz
xchg
call
mov
in
imul
cmp
dec
stos
push
or
jmp
cmpsb
test
mov
xlat
pusha
stos
adc
call
adc
insb
les
mov
mov
es
fnstcw
sahf
repz
mov
sub
iret
adc
aam
xor
push
loope
call
pop
jecxz
je
push
sbb
sahf
sbb
jno
xchg
mov
inc
fildll
pop
xchg
rorb
outsl
ljmp
jae
push
in
mov
jbe
xchg
push
cmpsb
push
mov
idivl
fadds
mov
pop
add
ret
sub
pop
lods
push
fldcw
insl
cmp
add
and
call
push
cltd
jne
xchg
ficomps
mov
jmp
push
dec
mov
sub
dec
arpl
dec
jge
or
inc
jae
imul
push
mov
mov
imul
insb
fwait
or
and
mov
sti
mov
jle
dec
mov
ret
stos
sahf
scas
lret
push
adc
dec
movsb
sub
adc
mov
push
cmp
xor
pusha
xchg
imul
pop
sbb
addr16
jne
xor
mov
inc
std
mov
or
or
mov
xchg
pmuludq
movsb
stos
and
and
lea
dec
xchg
adc
out
mov
clc
push
cmp
int
ss
sub
test
fsubl
cwtl
in
imul
mov
lods
lahf
add
int
cli
push
int
icebp
jle
repz
add
mov
cwtl
dec
das
ja
and
sub
jmp
iret
xchg
sub
mov
pusha
in
sub
inc
add
mov
mov
stos
inc
sub
cs
je
fstps
cltd
adc
scas
add
xor
ja
movsl
adc
test
adc
push
fdivrs
loopne
sub
je
add
shll
add
or
out
adc
and
mov
data16
jnp
in
pop
loop
xchg
test
mov
pop
iret
lret
or
sbb
or
pop
das
xor
sbb
int
mov
ja
out
mov
dec
bound
or
test
lret
adc
insl
inc
mov
jg
frstor
dec
jne
mov
mov
cmp
mov
jo
iret
clc
and
and
bound
movsb
out
enter
or
out
add
sub
jmp
std
pusha
adc
push
pop
xchg
mov
data16
ja
jns
movsb
push
out
mov
push
mov
mov
add
mov
cmp
addr16
nop
stc
mov
adc
out
inc
push
mov
in
scas
add
pop
jb
scas
xchg
adc
xor
cmp
dec
idiv
ds
cmp
sub
or
and
or
sub
shr
xchg
call
fisubs
mov
lcall
xor
cmp
dec
adc
loop
and
sub
mov
or
aaa
jns
std
sarl
dec
mov
test
das
jne
push
mov
xchg
sahf
rcrb
test
scas
xchg
icebp
push
pop
jo
inc
cwtl
sbb
sub
out
aas
or
repz
in
push
jecxz
sahf
jp
mov
cltd
push
inc
and
stc
or
shrb
nop
ds
jns
test
xchg
fsubs
testb
fidivl
insl
lods
lds
pop
insb
out
mov
add
insl
nop
dec
lea
mov
stc
xor
iret
inc
inc
mov
xchg
mov
sbb
pop
scas
and
xchg
add
jo
stos
sar
xor
mov
movsl
jmp
push
inc
push
cmp
adc
aam
mov
ljmp
mov
pop
faddp
mov
lds
push
ljmp
std
mov
or
or
mov
std
xchg
bound
mov
mov
pushf
inc
xchg
sbb
addr16
jecxz
pusha
push
cs
nop
out
cmpsb
jb
mov
pop
jge
into
sub
push
cltd
aad
cld
and
xchg
rorl
mov
fcompl
lods
pusha
xchg
cmp
imull
add
lds
mov
loopne
dec
lods
ljmp
lahf
inc
shlb
dec
mov
cmp
cmp
out
pop
jae
sar
std
xor
stos
inc
inc
jge
repnz
xchg
mov
sub
imul
pop
inc
and
mov
cwtl
jg
pop
cmp
icebp
mov
sbb
adc
cmpsb
dec
sahf
testb
jg
cmp
stc
imull
push
outsl
xlat
pop
or
insb
mov
and
pop
iret
inc
xchg
inc
lods
fcompl
test
dec
jg
jo
in
insl
xor
push
mov
cld
je
negb
cli
popl
aaa
xor
mov
mov
or
mov
mov
jmp
push
insl
mulb
and
mov
push
lea
iret
push
xchg
insb
nop
sub
jmp
out
jae
sti
or
pop
or
in
add
and
cmp
les
repnz
sbb
nop
sub
and
lds
fisubrl
mov
adc
cltd
mov
test
inc
mov
pop
add
das
pop
repz
push
aas
outsl
test
sub
lds
aaa
mov
xor
xor
mov
xor
mov
dec
int3
xlat
daa
scas
xor
sbb
cmpsb
mov
lods
jp
dec
dec
and
aam
jecxz
mov
cmp
gs
jns
cmp
shr
ftst
or
das
xchg
rcrb
cs
push
imul
test
add
in
inc
dec
mov
je
pushf
xchg
popf
je
mov
sub
push
xlat
mov
rcrl
lods
mov
repz
jne
incl
ss
sub
nop
jl
dec
cmp
pop
cltd
inc
pop
stos
daa
in
pop
sub
dec
cltd
test
push
push
std
mov
jnp
seto
ljmp
mov
cmpsb
xor
sbb
js
mov
repnz
xlat
push
xorb
mov
aas
mov
jno
jns
aaa
lahf
adc
insb
ret
sub
sbb
sbb
mov
lods
cmpb
xor
sarb
out
sbb
popf
dec
push
dec
push
sahf
imul
push
pop
mov
add
and
nop
mov
dec
jb
adc
leave
add
push
sub
sbb
lods
test
outsb
rorl
and
mov
imul
or
mov
mov
cmp
mov
mov
jge
in
xor
imul
sbb
test
in
dec
leave
clc
andps
popf
leave
push
popa
xchg
mov
insb
jb
pop
outsl
mov
das
iret
dec
and
push
addr16
dec
pop
imul
dec
out
xor
push
inc
sub
or
mov
fsubrl
jl
or
xor
sbb
or
shl
pop
lds
jmp
adc
mov
and
jl
lret
adc
jge
sbb
dec
pop
das
aas
mov
jae
rcl
add
sub
lcall
ret
xchg
jno
inc
fstpt
test
das
jo
cmpsl
xor
inc
mov
aas
push
cltd
cmp
and
vmovlps
mov
ret
subl
data16
lahf
push
mov
and
lock
repz
dec
sbb
or
dec
popf
jnp
loop
test
dec
imul
pop
jae
xor
push
sbb
xchg
loop
ds
repnz
in
adc
sub
cs
xchg
jmp
lock
ljmp
popf
dec
jbe
and
pop
movsl
and
sbb
inc
mov
ror
mov
xchg
and
xor
push
inc
sbb
adc
lods
stc
int3
sbb
lods
fldt
fistpl
push
lods
clc
mov
repnz
xchg
pop
mov
and
jl
jecxz
cmc
call
xchg
lahf
scas
daa
es
or
xchg
pop
mov
hlt
dec
mov
lods
insl
aas
sti
pop
sbb
xchg
dec
adc
pop
sub
aam
ds
cli
inc
std
jne
xchg
or
lods
cmc
adc
pop
jb
sub
out
pop
dec
mov
dec
or
jecxz
dec
sti
in
mov
and
daa
fldz
jmp
icebp
imulb
lods
mov
mov
adc
sub
adc
mov
push
mov
xchg
sbb
loop
lea
mov
stos
data16
inc
test
loope
cmpsb
cmc
mov
push
dec
and
cmp
adc
out
sbb
daa
or
ds
jo
fstl
stos
mov
js
or
movsl
pop
lds
lock
xchg
popa
sub
cmc
pop
xor
xor
push
scas
pop
push
xor
out
xchg
out
pop
jnp
push
jmp
fs
out
testl
fmuls
sub
cwtl
leave
mov
cmc
jl
nop
mov
in
mov
xchg
outsl
jmp
cmp
jl
imul
xor
add
push
fsubl
test
adc
mov
into
xor
movsb
stos
fmulp
clc
pop
mov
add
iret
jp
in
pop
cmp
cmp
sarl
lods
push
dec
mov
push
test
push
jg
cmp
cmpsb
xlat
orb
inc
sbb
pop
out
cmp
orb
mov
into
push
aas
jmp
push
and
cmpsb
jo
test
filds
aad
jbe
std
dec
les
xchg
jb
inc
cs
push
leave
ljmp
adc
repnz
ret
sbb
pop
dec
popa
push
negb
sahf
popa
aaa
mov
inc
stos
push
mov
mov
inc
imulb
and
xchg
lcall
aam
sub
xchg
xor
lds
movsl
mov
xchg
or
mov
lret
je
out
test
jp
mov
data16
pushf
jle
mov
lcall
inc
int3
inc
push
mov
jp
aam
lds
arpl
aas
cmpl
mov
mov
test
out
and
sub
xor
push
pop
mov
data16
gs
jns
push
test
mov
and
aas
sahf
movsl
sbb
mov
cmp
adc
test
insl
xchg
sbbb
aam
js
lds
leave
xlat
rcl
xor
sub
lods
ja
test
push
clc
cmp
loop
inc
je
ja
cmp
cwtl
cmp
nop
mov
clc
adc
mov
push
sub
xor
pop
pop
decb
in
cli
inc
mov
mov
push
insb
bound
sub
cmp
jb
pop
mov
add
fstps
mulb
repnz
add
aaa
loopne
cmc
fdivs
inc
push
xchg
daa
ret
xchg
sbb
xchg
imul
lea
sub
inc
rclb
cmp
mov
out
data16
sub
in
dec
or
or
testb
xchg
mov
or
scas
rclb
jecxz
or
ret
cmp
int
mov
outsl
int3
popf
inc
jmp
das
push
sub
and
cltd
popl
sub
push
insl
imul
repz
pop
mov
dec
adc
das
aam
das
test
mov
in
std
inc
leave
jmp
or
mul
mov
pop
add
jge
arpl
or
stos
imul
mov
push
jmp
aam
stos
xchg
push
repz
cmp
js
int3
lcall
dec
data16
mov
mov
push
das
jg
add
lods
or
iret
popa
sub
and
push
lea
mov
das
jg
int3
or
sub
rclb
sahf
xchg
xor
mov
in
push
add
out
mov
shrb
adc
rcr
ret
in
int
push
outsl
cmc
cld
mov
clc
mov
adc
adc
adc
fabs
cmp
cs
pop
stc
and
pop
rclb
sahf
sub
or
ja
cld
mov
xchg
es
adc
daa
jle
sbb
sub
loopne
imul
push
imul
xlat
stos
pop
add
stos
push
pop
mov
mov
cs
lea
les
and
in
xchg
cmp
dec
test
stos
jp
add
dec
push
bound
xrelease
mov
fidivl
mov
pusha
icebp
xor
sbb
in
insb
cmpsb
pushf
sbb
icebp
sub
xchg
sti
xchg
fsubrp
xor
cltd
or
js
and
pop
push
xchg
mov
fldenv
sbb
xchg
cmp
movsb
out
cmp
int
repnz
jl
inc
jge
fdivl
sbb
loop
sub
movsl
or
mov
test
sbb
out
test
scas
adc
aaa
aad
add
ja
mov
icebp
xlat
aaa
xlat
addr16
insb
jp
and
mov
inc
xchg
push
dec
inc
mov
inc
and
pop
adc
sub
jle
mov
or
aam
inc
adc
iret
cmpsb
add
fsts
jle,pt
pop
ret
mov
sbb
lds
movsl
or
push
shrl
xchg
push
clc
fdivs
aas
aas
sub
add
into
loopne
mov
add
daa
sub
mov
jns
imul
jae
add
imul
pop
pop
daa
add
mov
cmp
rclb
popf
push
daa
test
xchg
stc
daa
inc
shrb
jg
or
mov
gs
out
ss
adc
aaa
test
test
or
mov
sub
or
mov
push
cli
inc
sbb
movsl
adc
or
adc
pop
push
fsubrl
cmp
xlat
mov
js
and
mov
mov
roll
xchg
dec
icebp
lret
jne
lds
adc
insb
mov
in
push
push
mov
lods
aaa
sub
aas
ja
push
lock
jnp
enter
cmpsl
xchg
pusha
mov
adc
xchg
out
push
xchg
es
rol
mov
in
in
inc
mov
mov
cld
rcl
cmp
mov
xchg
cmp
lret
sbb
repnz
into
jae
arpl
fdivrs
pop
testl
jl
push
mov
aad
ret
add
adc
dec
jg
or
insb
mov
outsl
sub
int
js
arpl
mov
jge
or
mov
popf
push
inc
enter
jmp
mov
sbb
mov
mov
push
mov
jb
jmp
or
scas
mov
rolb
sub
outsl
out
sbbl
xchg
or
push
sti
test
sti
lahf
sub
cmp
mov
mov
rcl
lret
out
xor
mov
push
dec
cltd
inc
outsl
xor
mov
cmp
js
stos
xor
and
cmpl
and
insl
rcrl
pop
dec
scas
push
test
or
add
jne
mov
add
out
pop
dec
fnstenv
les
mov
call
mov
loopne
in
bound
push
mov
fcmovu
pop
cli
or
add
xchg
jo
icebp
xchg
xchg
pop
and
mov
cmp
add
xorb
imul
or
movsb
or
xor
cli
push
imul
ds
lods
sub
sub
jl
hlt
jns
frstor
lret
adc
lock
bound
aaa
mov
cltd
adc
pop
or
cli
repnz
js
jb
jo
cmp
leave
jne
or
xor
not
or
jl
push
push
xchg
andl
int3
xchg
bswap
pop
repz
push
ret
push
mov
pop
insl
roll
adc
mov
je
out
jae
mov
into
dec
adc
fisubrs
lahf
adc
add
mov
inc
xchg
xor
in
mov
enter
xor
mov
ret
and
out
into
iret
xor
out
pop
pop
fadds
push
dec
nop
push
pop
dec
inc
and
sub
dec
les
das
xchg
out
mov
dec
insb
aad
push
jmp
pop
lahf
mov
repnz
mov
mov
out
xchg
enter
inc
cmp
xchg
movsl
int
xor
fwait
ror
data16
arpl
decl
in
xchg
add
xchg
push
ss
or
mov
mov
sbb
roll
out
adc
lahf
push
sub
sbb
cmp
push
pop
stos
pop
lods
mov
ja
push
cmpsb
pop
cmp
fcoml
jmp
bound
cmpsb
sub
out
int
add
imul
cltd
pop
cmp
push
shll
fs
lea
pop
xlat
cmp
jno
cmpsb
cmpsl
inc
mov
test
mov
into
in
lods
out
jne
pusha
cld
mov
lods
fildll
loope
add
mov
insl
fs
cli
roll
push
mov
incb
cmp
idivb
xor
add
stc
rcll
imul
lea
rcll
out
sub
adc
subl
xchg
mov
adc
pop
mov
jnp
cmpsb
xchg
inc
inc
mov
inc
pop
cmp
mov
jp
fmul
or
enter
mov
push
push
daa
add
pop
fs
jecxz
mov
sub
add
insl
mov
pop
xchg
dec
lahf
jecxz
jge
adc
mov
arpl
cmpl
fwait
mov
cmp
xchg
out
pop
cltd
jecxz
lods
xchg
nop
push
xchg
ret
outsl
cmp
cld
dec
sub
in
sub
push
mov
bound
pcmpeqw
mov
adc
mov
insb
inc
loop
xor
mov
enter
cwtl
pop
outsb
or
push
inc
cli
sbb
lock
outsl
jge
scas
mov
lcall
jge
push
fwait
push
fninit
mov
lret
xchg
test
jb
ret
push
add
subb
xor
adc
inc
imul
fstps
jo
push
inc
loopne,pt
mov
out
les
jb
sbb
lea
mov
push
or
test
sub
outsl
filds
xchg
pop
xchg
mov
stos
aaa
mov
jbe
subl
test
mov
mov
pusha
loope
add
addr16
inc
fs
data16
pop
push
xchg
push
inc
xor
adc
xor
in
pop
out
mov
add
enter
pop
data16
stos
ret
xor
inc
pop
jmp
ljmp
xchg
std
mov
ljmp
xchg
fwait
jmp
add
xor
in
pop
fnstsw
jae
aas
pop
push
roll
cwtl
hlt
icebp
loopne
int3
cmp
ja
sarb
jl
roll
pop
mov
sub
andl
imul
pusha
and
hlt
and
mov
ret
inc
xchg
lods
and
xchg
cmp
fists
stc
sbb
add
xchg
ss
sub
xor
pop
clc
push
inc
sahf
stc
int
inc
repz
aaa
mov
clc
xor
or
pop
mov
insl
pop
xor
shlb
dec
in
pop
cli
dec
lahf
aam
imul
xor
pop
faddl
jno
aas
outsl
jbe
das
inc
dec
fdivr
bound
add
lock
outsb
add
iret
js
lret
dec
add
fcompl
sti
repnz
test
lock
add
xor
pusha
test
push
or
sbb
inc
mov
test
rcl
xorl
and
clc
es
dec
idiv
fisubrs
testl
adc
xor
mov
mov
adc
dec
xchg
and
addl
fistpl
cmpsl
les
sbb
hlt
ljmp
ret
out
jno
outsb
testl
aas
push
jnp
cld
repz
and
xor
test
cmp
ret
lock
pop
mov
adc
and
dec
mov
clc
xlat
pop
scas
pop
mov
sub
and
sub
cltd
jp
inc
xorb
repz
into
push
and
fcoms
xor
push
adc
loop
insb
xor
icebp
stos
lea
fstpt
inc
jo
into
dec
out
jbe
jl
adc
aam
lret
jne
mov
push
test
sbb
andb
js
shll
inc
out
outsb
daa
dec
sub
jp
addr16
iret
mov
xchg
ret
sti
push
pushf
pop
dec
pop
test
ja
lds
jge
mov
aas
sbb
rorl
sarb
push
cmp
push
test
jmp
pop
int3
out
lods
sbb
dec
dec
je
push
mov
loope
push
cli
sbb
xchg
cld
xchg
outsl
cmp
fwait
movsb
xor
jmp
xor
sub
pushf
jae
ret
std
shl
and
jg
pop
int3
inc
cld
inc
mov
test
adc
mov
insl
andl
stos
lds
out
ljmp
stos
les
xchg
in
xchg
pop
dec
mov
push
clc
cltd
jge
cmc
pop
ss
das
stc
mov
imul
lds
mov
inc
mov
pushf
jle
mov
push
sti
loop
mov
fiadds
out
jb
cmp
pop
popf
pop
inc
sub
xchg
mov
mov
or
or
lock
jo
orl
dec
xor
das
es
inc
movsb
fisubrl
insl
aad
xor
xor
mov
lea
hlt
mov
xor
pushf
js
and
xchg
adc
mov
iret
fisubrs
jo
mov
pop
push
push
mov
or
cs
mov
lcall
xchg
jge
dec
sub
cmp
lds
orl
addr16
stos
and
testb
mov
add
dec
sbb
add
xchg
fcompl
push
int
pop
shlb
sbb
fildll
inc
mov
push
gs
xchg
fistpl
cli
cmpsb
jg
repz
mov
je
push
dec
lea
call
mov
aaa
arpl
mov
addr16
in
pop
nop
lret
fistps
sub
fcmovne
shl
jp
out
test
lock
inc
xor
jno
mov
sbb
or
das
pop
repz
cltd
movsl
xchg
add
add
out
fisubrl
push
pop
jb
and
lock
cmpsl
add
xor
scas
mov
bound
or
sysexit
cs
cmpsb
aaa
add
pop
jg
int
cmp
jnp
push
out
leave
jl
push
inc
pushf
rclb
insl
enter
mov
lds
cld
andb
in
sbbb
std
lahf
fs
testb
sbb
jmp
fistl
xlat
fisttps
fsubrs
iret
les
cmp
repz
mov
cld
ret
push
jne
sbb
movsb
inc
mov
or
imul
jno
out
ljmp
cmpsb
inc
ljmp
stos
insl
repnz
int3
sub
push
ds
xor
mov
imul
mov
lock
pop
jmp
mov
cmc
and
aad
movsl
dec
daa
repz
adc
lds
ds
pop
mov
scas
into
mov
sbb
mov
xor
mov
push
incl
adcb
xchg
add
cmp
in
mov
gs
arpl
fnstsw
and
fiaddl
ss
icebp
mov
aad
dec
and
test
inc
setg
inc
mov
cli
cmp
push
in
dec
adc
stc
scas
sub
ret
cwtl
ss
cmpsb
std
pushf
jle
loop
sbb
or
xchg
ja
mov
mov
outsb
test
lods
xchg
xor
cmp
and
int
ljmp
cmp
movsb
lods
xor
mov
cli
mov
mov
xchg
push
push
insb
cmpl
mov
in
ljmp
xchg
jae
mov
sti
cmc
adc
fists
sbb
pushf
aam
xchg
cmp
and
xchg
stc
pop
sub
adc
test
mov
std
jge
xor
add
out
fnstcw
pusha
into
add
xor
enter
xchg
dec
arpl
cltd
mov
sti
pop
xchg
xchg
and
sub
pop
xor
mov
call
stc
imul
ss
xchg
jg
xor
imulb
add
inc
data16
pop
cmp
icebp
insl
sub
jp
jp
fistpll
rorb
mov
mov
test
inc
addr16
fs
sbb
cmp
lcall
stos
sbb
xor
jge
stos
jmp
mov
mov
fwait
lcall
sub
sub
mov
enter
xchg
lret
adc
dec
sbb
mov
sbb
movsb
add
rcll
lds
mov
arpl
jge
clc
out
idiv
mov
dec
jmp
pop
enter
sub
adc
cmp
inc
mov
cld
xchg
pop
xchg
add
xchg
hlt
mov
jge
jle
and
or
rclb
inc
js
test
push
repnz
xchg
xlat
outsl
pop
test
dec
push
fs
mov
hlt
in
lcall
sbb
dec
xor
cmc
rcll
pop
pop
push
xor
cmp
inc
aas
cmc
leave
inc
sbb
mov
cmpsb
dec
test
pop
ja
adc
lock
negb
pushf
dec
lds
pop
inc
pop
mov
std
cmpsl
pop
push
or
cmp
stos
pop
icebp
or
ret
push
into
jp
cld
add
jo
fcmovnbe
add
or
mov
mov
xchg
test
loopne
insl
in
xchg
cwtl
jmp
pop
enterw
mov
push
mov
stos
adc
test
divl
xchg
mov
dec
fucomip
shrl
int3
xchg
les
mov
mov
inc
dec
dec
jl
cltd
push
test
enter
cli
sbb
jle
stos
idivb
add
xor
or
and
cmpsl
out
pop
adc
dec
cli
ret
mov
cmc
xchg
sbb
jle
cmp
pop
loopne
outsl
lds
in
mov
out
andl
inc
loop
dec
xchg
sub
inc
arpl
int3
test
das
inc
ljmp
popa
aas
pusha
imul
add
dec
and
int3
add
sub
inc
cli
xchg
cmp
je
subb
push
adc
or
sbb
loope
loop
lret
cmp
push
mov
out
jle
mov
adc
xor
filds
jp
insl
sahf
dec
ds
mov
or
jmp
cmpsb
xchg
push
test
out
loop
and
ljmp
sahf
dec
cs
int3
sub
fcmovu
dec
push
xorb
icebp
loop
inc
les
mov
iret
push
lds
popa
lret
sbb
movsw
mov
pop
mov
outsl
lock
jns
into
shl
and
ds
daa
jle
xor
jge
scas
cltd
push
mov
mov
add
fsub
cmp
pop
and
dec
xchg
in
jecxz
cmp
xor
jle
push
lods
push
test
inc
and
mov
int
rcr
imul
aam
testb
sub
or
lret
into
out
out
dec
mov
or
add
fsubs
mov
int3
fldt
lds
pop
testb
dec
movl
shll
sbb
shll
mov
mov
and
addr16
aas
cmp
outsb
xchg
fimuls
sub
pop
xchg
sub
outsb
pop
xchg
mov
add
pop
das
and
mov
mov
insl
in
mov
insb
pushf
enter
jmp
add
pop
inc
pop
lock
out
adc
mov
mov
popf
sti
stc
pusha
icebp
mov
sbb
mov
in
mov
lahf
mov
popw
stc
pop
jno
sub
or
mov
xchg
xlat
xor
sub
dec
insb
ret
lock
lret
lods
push
xchg
dec
sbb
lret
sub
fs
mov
jae
pushl
jmp
lea
add
pusha
jmp
ljmp
mov
es
fsubrl
jg
lea
fs
inc
inc
fwait
test
mov
mov
rol
addl
mov
repnz
push
test
lds
pushf
insb
subl
repz
cmpsl
subb
loope
cld
cmp
hlt
gs
iret
aaa
rclb
mov
dec
fcoms
jmp
repnz
mov
mov
ficomps
jbe
sahf
xchg
imul
icebp
les
js
fcom
rorb
mov
js
testl
cmovbe
mov
dec
movsl
xor
nop
out
mov
push
mov
cwtl
scas
pop
out
push
pop
adc
cmp
mov
or
inc
cmpsb
int3
xchg
jmp
int3
clc
mov
in
insl
sbb
les
jecxz
lret
enter
xor
idivl
mov
jle
add
and
pop
rcrl
xchg
ret
loope
xor
testb
mov
lret
push
repz
inc
fnstsw
insl
mov
fs
jmp
push
into
push
jno
inc
cmp
mov
arpl
out
mov
and
xlat
ret
cs
mov
lahf
jmp
fcomps
ret
mov
clc
xchg
push
pop
mov
lcall
mov
insb
test
mov
jae
aas
test
cmc
hlt
out
in
mov
out
fwait
pop
out
mov
fstl
pop
int3
in
or
ret
loope
mov
das
leave
jp
mov
addl
mov
jmp
push
movhlps
sahf
ss
push
mov
mov
mov
sbb
add
jbe
sbb
lds
stos
xchg
and
call
adc
pusha
and
or
in
scas
sbb
pushf
mov
mov
mov
fstpl
int
xchg
insb
test
fbld
xor
dec
cwtl
rolb
jge
lahf
lock
inc
bound
push
mov
fnsave
vshufps
cmp
cmpl
xor
cwtl
jbe
push
and
dec
push
xchg
dec
sub
jnp
out
jp
cmp
ret
icebp
scas
out
repnz
scas
pop
pop
and
out
mov
xchg
sahf
cmp
aam
cmpsb
push
iret
add
jle
notl
cmpb
addr16
sahf
stos
xchg
lods
pusha
xchg
or
fcmovb
add
aad
dec
pushf
xchg
repz
scas
sub
hlt
mov
addl
and
clc
sbb
cs
add
js
imul
dec
shl
jg
xor
push
inc
mov
dec
in
test
bound
mov
sar
in
pop
dec
in
inc
test
push
mov
mov
push
roll
test
sub
cli
sbb
cmpl
shlb
cmp
icebp
stos
shl
fistps
out
inc
jb
jo
ja
flds
fdivl
push
shrb
pop
idivl
test
jg
pop
ret
in
ds
rol
mov
jmp
push
loope
cmc
xlat
out
insl
and
cmp
cmp
shr
cmp
xchg
push
roll
mov
sub
mov
mov
cmpsl
pop
iret
lcall
add
mov
pop
inc
repz
dec
inc
jmp
mov
or
stc
dec
mov
rcrb
push
mov
xlat
cmpl
inc
test
sub
sbb
pop
mov
pushf
movsb
sbb
adc
cmp
dec
hlt
mov
arpl
daa
mov
mov
inc
sti
and
and
adc
je
insl
dec
inc
jbe
sbb
cmp
and
stos
jno
icebp
cmp
mov
scas
stc
adc
popf
pop
pop
sbb
jp
sub
fnstcw
andl
enter
xor
mov
test
mov
seto
add
ja
mov
icebp
jle
lret
push
testl
pop
pop
rcrb
xor
push
movsb
inc
dec
fsubrs
or
aas
cmp
hlt
mov
or
jne
jl
out
das
mov
inc
jns
push
mov
gs
lock
arpl
fbld
repnz
push
jl
push
test
push
or
mov
loope
push
pushl
xor
xchg
icebp
xchg
add
imul
or
jmp
and
xorb
fdivl
rorb
aas
xor
mov
mov
ret
inc
dec
js
pop
mov
stos
inc
pop
mov
sarb
rcrb
lods
mov
adc
mov
or
inc
cmp
popa
xchg
test
mov
fldl
rorb
push
loop
ret
movsb
rclb
jge
imul
add
out
jns
mov
test
fcoml
mov
cmp
popf
dec
addr16
pushf
sahf
pop
lret
rorb
notl
mov
out
sbb
mov
inc
cmc
sub
jl
sub
inc
stos
popf
imul
unpcklps
int3
dec
aaa
daa
inc
cmp
ss
das
and
int3
repnz
dec
data16
daa
gs
or
jno
dec
inc
out
mov
xchg
mov
aaa
stc
pand
dec
jg
xor
daa
fiaddl
xor
icebp
mov
and
cmp
sub
stos
ss
and
cmc
cwtl
ja
push
pop
out
mov
and
mov
jge
data16
inc
and
or
aas
push
and
push
popa
cld
aas
pop
mov
into
int3
inc
mov
and
lcall
cli
rol
and
hlt
or
pop
nop
into
pop
movsl
or
pop
inc
pop
add
jge
or
dec
sub
lock
push
push
insl
adc
add
adc
xor
jno
aas
js
mov
cwtl
inc
xor
xchg
rorb
or
mov
mov
push
lea
or
mov
cmp
imul
fimuls
mov
jns
xor
sbb
push
test
in
mov
lods
pop
imul
in
sbb
xchg
leave
leave
divl
mov
cmpsb
cli
pop
mov
lret
sub
sub
add
xchg
out
test
jle
fwait
pop
pop
adc
pop
inc
xchg
cwtl
mov
imul
icebp
dec
shll
int3
cwtl
sub
xor
add
push
xor
outsb
or
nop
sar
mov
inc
jbe
es
in
daa
lods
sub
js
inc
sbb
lods
xchg
cmp
movsl
add
fdivrs
push
add
xor
or
imul
outsl
push
cmc
aam
inc
mov
xor
dec
add
mov
pop
lahf
inc
or
inc
iret
out
cmpl
dec
add
aas
rcll
pop
add
out
dec
mov
xlat
sub
and
dec
std
cmp
mov
push
sub
cmp
xchg
inc
imul
iret
ja
jge
leave
mov
cmpsb
lea
jmp
out
imul
mov
push
das
jns
std
ljmp
xchg
call
ret
mov
jge
fisttpl
lret
jp
pushf
lret
xor
scas
mov
or
sub
sbb
gs
xor
xchg
jmp
inc
dec
mov
mov
addb
pushf
stos
mov
jmp
dec
sbb
cmpsb
add
cs
inc
js
movb
insb
dec
dec
and
mov
mov
scas
enter
sbb
jle
cld
pop
das
sbb
cmp
clc
cs
sub
or
jnp
inc
hlt
test
hlt
push
addr16
or
cwtl
adc
out
pop
add
mov
popf
aas
test
rcll
iret
xlat
cmp
loop
out
lahf
daa
adc
out
cmp
mov
testl
movb
xchg
int3
imul
add
mov
mov
xor
inc
cltd
and
mov
adc
sbb
xchg
arpl
mov
add
adc
pop
mov
mov
mov
les
shrb
mov
mov
stos
add
filds
push
xor
or
adc
shlb
adc
shll
in
adc
lock
adc
int3
mov
cltd
xlat
ret
pusha
mov
in
xchg
dec
insl
jno
add
pop
sub
push
sti
stos
jecxz
xor
sub
xchg
adc
jp
adcl
mov
outsb
mov
push
push
cld
jns
lods
push
in
mov
xlat
fiaddl
or
stos
mov
out
jne
jge
sub
clc
hlt
cmp
sub
dec
mov
cmpsl
jle
pop
test
mov
xor
ljmp
sbb
and
stos
pop
leave
push
jbe
pop
mov
mov
xchg
pop
rclb
dec
out
lods
sarb
and
lahf
outsb
sti
fisubl
fcmovnu
cmp
faddl
lret
nop
jns
aaa
and
mov
pop
xor
sub
cmpsl
inc
jns
jns
push
and
ja
int
pop
movsb
push
mov
or
mov
test
cltd
inc
jbe
jecxz
sbb
fwait
aas
lret
cmp
shl
jmp
insl
shll
and
leave
jg
inc
je
sarl
add
dec
lahf
pop
pop
insb
ja
gs
xchg
pop
and
inc
and
ds
arpl
pop
sbb
fidivs
xor
outsb
pop
sbb
mov
rorb
into
or
lahf
or
popf
mov
inc
mov
outsb
mov
loopne
mov
arpl
icebp
int3
pop
je
pop
sarb
insb
mov
fdivr
fwait
scas
mov
or
jbe
imul
test
jns
xchg
test
sbb
gs
xor
in
fidivl
mov
lods
call
addr16
xor
sbb
imul
mov
mov
and
sbb
shr
aas
or
ds
pop
enter
cwtl
popf
adc
gs
inc
inc
or
lds
mov
icebp
fld
test
imul
pop
cmc
aaa
shr
pusha
cmp
sbbl
mov
sbb
xor
call
cmp
push
outsb
adc
pop
pop
mov
insl
fwait
inc
xor
xor
jbe
sti
adc
adc
pop
addb
dec
mov
out
mov
rolb
in
jge
jb
sbb
mov
cmpsl
fstpt
cmp
aam
adc
pop
imul
mulb
jge
fidivl
mov
daa
movsl
stc
imul
mov
adc
je
mov
fiaddl
jns,pt
jo
sub
outsl
iret
jecxz
push
arpl
test
mov
sti
dec
scas
pop
mov
mov
popf
cmp
push
cli
rol
cli
jmp
or
hlt
xchg
sbb
je
jnp
aad
cmpsl
pop
mull
ds
cmpb
mov
loopne
cmp
xor
cmp
xchg
icebp
das
xchg
inc
jp
dec
xchg
add
sub
xor
out
out
push
jp
insl
xchg
cli
inc
cmp
pushf
xor
aas
cmpl
mov
cmc
dec
dec
mov
idivl
or
pop
xor
insl
push
sbb
rcl
mov
lds
test
xchg
std
add
cmp
xchg
fs
cmp
lahf
enter
and
cs
mov
pop
sub
lods
jmp
fwait
stos
pop
pusha
dec
roll
cld
xor
pop
sub
scas
sub
adc
outsl
dec
adc
pop
stos
fbld
icebp
mov
and
push
pop
sbb
add
mov
cltd
nop
fcmovne
scas
leave
mov
mov
in
push
jne
add
fistps
jo
mov
in
jo
sub
sbb
into
fisttps
xchg
sub
add
leave
cwtl
imul
enter
out
pop
xchg
lret
xor
pusha
dec
lods
cmc
addr16
pop
cld
orb
xor
aas
test
sub
or
or
fldenv
adc
pop
insb
dec
mov
int
xchg
push
mov
cmp
mov
loope
mov
dec
xor
pop
add
sbb
xchg
or
cmp
jl
mov
mov
add
ss
mov
movsb
mov
pop
popf
push
mov
imull
mov
push
adc
pop
shrb
sbb
dec
pop
xor
jne
xchg
subl
jne
pop
mov
cmp
ds
jge
sbb
push
jae
inc
jp
add
pop
rcrl
pushl
add
movsb
adc
inc
repz
push
les
pushf
jno
lret
sub
call
pop
push
into
mov
cmp
sub
enter
mov
cmp
ljmp
mov
dec
and
and
cmc
jno
repz
lods
sub
cmp
push
daa
xchg
mov
inc
sbb
sbb
jns
rorl
sub
mov
movsb
int
push
inc
imul
cmp
xchg
dec
inc
je
dec
aas
jnp
mov
ret
push
stos
arpl
popa
rcrl
cmp
xor
aad
mov
xor
imul
lods
in
add
push
popf
daa
stos
dec
mov
adc
sub
add
bound
pop
pop
das
aas
dec
dec
daa
jb
mov
iret
adc
push
add
add
gs
sub
push
insb
loopne
cs
mov
and
lret
repz
not
add
jno
mov
dec
pop
dec
les
fmuls
mov
ret
lret
test
repz
cmp
sbb
xlat
lds
cmpsb
daa
test
leave
je
pusha
inc
sbb
push
mov
out
pop
push
add
lret
mov
test
pop
push
out
testb
es
jl
je
dec
mov
mov
sbb
std
lcall
roll
mov
pushf
stc
and
xchg
rcrl
jmp
sub
loopne
cmp
mov
lret
inc
int3
add
mov
repz
repz
add
pop
call
cmp
dec
jae
jns
or
clc
aaa
push
mov
xchg
pop
addb
imul
dec
mov
mov
cmpsl
es
xor
test
jle
repnz
push
jne
addr16
pop
xor
jo
aam
sbb
push
mov
addb
mov
sbb
jge
add
into
sbb
loope
push
pop
mov
adc
cld
dec
xchg
push
insl
outsb
mov
mov
cmpsl
mov
or
and
sahf
mov
inc
xor
scas
imul
fwait
lea
cmpsl
jae
mov
lds
xchg
push
out
jno
mov
lods
pop
loop
pop
mov
mov
mov
mov
js
aad
nop
loopne
inc
out
outsl
xchg
push
dec
adc
lcall
mov
das
xor
iret
scas
pop
dec
jl
lret
xor
arpl
and
lahf
dec
push
adc
lcall
adc
dec
sub
mov
and
cwtl
shr
lahf
mov
xor
ds
inc
ret
and
outsb
adc
ss
xchg
insb
mov
pop
imul
and
or
jbe
lret
in
and
leave
push
stos
ss
lods
andl
insb
scas
fsts
add
iret
inc
aad
orl
stc
ja
push
push
mov
xchg
inc
fcomps
stc
out
aaa
ja
test
push
xchg
jbe
lahf
les
xor
lea
nop
cmpsl
repnz
xor
decb
std
sbb
jmp
aas
jne
and
fsubs
pop
jp
xchg
jp
dec
sti
or
add
xlat
pop
mov
popa
push
mov
ret
mov
xor
xchg
adc
mov
or
sbb
or
mov
cmp
push
insb
adc
dec
leave
xlat
loopne
mov
cmp
mov
aad
rorl
cli
mov
ds
xchg
stos
aaa
mov
or
mov
bound
adc
jp
test
rcrb
and
mov
dec
xchg
out
sbb
inc
xor
mov
jecxz
test
mov
mov
mov
fwait
cmp
push
orb
bound
cmp
out
mov
jne
mov
or
xor
and
mov
xchg
int3
cmp
mov
mov
fisttpll
adc
xlat
mov
sbb
imul
insb
fs
cmp
sbb
jmp
outsb
jecxz
into
push
fwait
lret
cmpsb
andl
mov
movsb
and
sub
lods
into
test
addr16
in
in
shlb
jl
push
adc
ret
mov
xchg
jne
je
js
testl
aas
xor
scas
gs
jb
out
aas
in
jae
cmp
inc
adc
cmpsb
bound
in
ljmp
inc
jl
xchg
and
or
testb
push
outsl
pop
daa
and
adc
mov
pop
pop
cs
sti
sub
lahf
je
push
faddp
mov
lret
lods
insl
inc
jne
add
les
sti
adc
cmp
rclb
insl
xchg
pop
cwtl
daa
aas
cmp
sti
cmpb
das
mov
cmp
scas
shlb
mov
jmp
sub
int3
mov
sti
popf
lock
xchg
lcall
push
aam
or
sbb
jmp
dec
push
movsl
pop
out
out
pop
scas
push
gs
aas
cmpb
andl
dec
add
dec
xlat
xchg
add
iret
pop
test
xchg
pop
lock
bnd
adc
sbb
push
xor
or
lds
das
outsb
dec
cmp
xor
mov
cmp
pop
call
inc
push
call
adc
add
test
sub
inc
aad
and
int
sub
ds
mov
fbstp
std
cmc
mov
and
or
push
fists
fsubr
ret
xor
xor
mov
sti
push
sbb
pop
stos
dec
pushf
lret
ds
vcmppd
lcall
and
push
mov
negl
lods
add
mov
mov
mov
out
inc
mov
scas
rol
inc
push
fwait
cwtl
in
adc
lods
xchg
push
xor
or
add
jmp
mov
and
add
mov
in
dec
test
pop
test
aaa
jp
int
loop
xchg
dec
imul
cmp
push
ror
out
lret
test
inc
fisttps
adc
jno,pt
notb
mov
mov
xchg
jns
sub
sbbb
sbb
imul
mov
jmp
and
into
test
pop
pop
jmp
in
rcll
pop
adc
adc
loopne
in
add
jbe
add
insl
add
xor
mov
push
mov
mov
pop
stos
add
bound
mov
idivl
inc
fcomps
jmp
jl
fmul
aas
inc
test
pop
xchg
pop
lds
ret
fldcw
scas
mov
imul
push
xlat
mov
loop
scas
xor
sti
xor
fimull
fidivrl
pop
adc
pop
js
data16
mov
in
adc
movsb
sub
inc
cli
outsb
call
clc
in
loop
pusha
jge
mov
xchg
push
scas
cs
push
jecxz
sbb
pop
pusha
xor
xchg
dec
stc
addr16
in
jb
rorb
fs
test
outsl
pop
aaa
sbb
cmp
dec
jne
in
jmp
ja
mov
leave
popf
div
bound
mov
and
cs
aaa
xchg
mov
and
lock
inc
nop
filds
stos
clc
mov
stos
not
scas
add
mov
jl
daa
xchg
inc
pop
push
loope
in
hlt
int
daa
mov
movb
call
loopne
in
xchg
ret
pushl
pop
mov
loop
and
lret
add
std
icebp
mov
sti
mov
leave
mov
jge
adc
inc
fidivrl
sti
insb
mov
leave
add
xchg
fistpll
lods
sub
fsubl
rcrl
mov
scas
xchg
push
mov
repnz
int
xchg
jbe
pop
mov
aad
inc
pop
pop
adc
mov
jne
xchg
out
nop
ret
pop
rolb
fidivrs
ret
mov
movsb
inc
pop
outsl
pop
cmpsl
mov
outsl
cmp
jl
mov
and
and
mov
into
sbbb
jl
inc
pop
xor
insl
mov
rcl
fstpt
ja
ja
jge
int
xchg
rcrl
jge
add
mov
call
loopne
mov
sbb
mov
stc
daa
les
xchg
push
jb
pushf
push
cmp
jmp
adc
add
mov
lret
xchg
enter
out
adc
mov
jb
xchg
jns
stc
fsubrl
ja
loope
loope
cli
fstl
jnp
xchg
in
popf
push
lahf
imul
push
jns
lahf
sbb
aas
jnp
jae
lahf
mov
insl
test
sbb
rolb
loope
inc
push
mov
mov
push
jnp
icebp
and
rolb
test
fwait
push
daa
adc
outsb
xor
push
addl
cmp
shl
aam
mov
xchg
mov
aas
jb
cli
scas
fimull
lods
rcll
lods
mov
aas
out
or
fdivl
cltd
dec
sahf
mov
iret
sub
mov
lods
outsb
out
sti
mov
out
pop
mov
lods
mov
in
jo
or
dec
rorb
mov
xchg
or
xor
dec
sub
fimull
xchg
inc
dec
pop
fisubrs
mov
pop
idivl
jle
test
lea
pop
sbb
mov
push
mov
lret
dec
and
pop
clc
sahf
in
movsb
cmp
push
shrl
ljmp
cmp
pop
xor
es
jmp
inc
jmp
push
push
out
or
lret
or
clc
adc
xorb
add
cmp
or
sbb
icebp
and
lret
push
jbe
test
mov
and
xor
pop
sub
movsb
push
pop
or
mov
aaa
stos
cmpsl
iret
mov
mov
jne
mov
loop
les
movsl
inc
data16
add
loopne
ficoms
jle
enter
or
jle
lock
test
in
or
and
lahf
xor
js
dec
pop
cmpsl
sbb
dec
mov
fildl
fidivrl
jl
insb
int3
jbe
inc
push
mov
pusha
and
incb
ret
lds
xor
lods
out
lret
inc
out
popa
and
pop
mov
mov
rcl
mov
cmpb
push
and
flds
into
lds
and
rolb
push
imul
adc
xor
sbb
and
loop
scas
sbb
and
push
push
cli
iret
lahf
pop
push
mov
std
gs
cmp
sub
scas
das
dec
push
lods
inc
test
mov
stc
out
add
scas
push
dec
push
stc
push
pushf
cltd
cltd
mov
xchg
aaa
shrb
out
mov
xchg
rclb
fbld
jbe
shlb
adc
lds
cmp
testl
adcl
adc
imul
divb
icebp
cmp
push
lcall
xor
mov
xchg
aad
adc
cmovae
sub
mov
push
out
and
cltd
cmp
push
movsl
cli
ret
movsl
lods
mov
loop
xchg
xlat
shl
cs
enter
orl
xor
mov
add
loop
jnp
js
je
fisttpl
push
push
out
and
loop
lret
adcb
aam
mov
or
jg
cmp
or
out
negl
mov
push
dec
orb
ja
xchg
scas
popa
sub
mov
pop
dec
and
add
icebp
xchg
lret
dec
fs
popa
push
fistpll
adc
mov
mov
mov
sbb
repnz
sbb
and
fistl
roll
adcl
xchg
inc
je
ret
inc
adc
push
xchg
adc
rcrl
jo
push
inc
js
xor
jl
mov
in
in
test
test
mov
loope
out
popa
mov
int3
testb
mov
popf
pop
mov
in
push
xchg
sahf
ljmp
sub
insb
addl
xor
ret
fildll
fnstcw
out
pushf
mov
or
or
mov
dec
inc
push
xorb
jmp
lret
ret
fldenv
adc
or
mov
loop
in
call
js
pop
loop
and
in
sbb
mov
pop
add
in
out
push
aaa
add
sub
sarl
or
cwtl
dec
push
test
jg
inc
mov
ret
or
sub
hlt
push
mov
mov
adc
int
xchg
cmp
lcall
dec
js
fwait
cmpsl
xor
inc
pop
pop
cs
cmpb
test
test
mov
pop
cld
fisubrl
dec
push
cld
fs
jecxz
jns
int
adc
sub
loope
add
xchg
xor
imul
dec
xchg
xor
popf
cmpsl
sub
pop
insb
scas
jmp
jp
mov
mov
fwait
sbb
int
mov
push
dec
jnp
push
mov
mov
mov
repnz
insb
call
add
mov
clc
inc
scas
out
jg
shll
cmp
jmp
jbe
xchg
xor
jae
and
enter
call
xor
pop
dec
push
pop
and
cwtl
dec
xchg
out
scas
cli
gs
call
pop
out
jecxz
clc
rcr
inc
and
jne
pop
ds
aaa
int3
pop
push
int3
inc
xchg
jbe
adc
xchg
push
sub
pop
mov
rorl
pop
or
popa
fidivrl
cmp
clc
shl
jo
add
imul
xchg
mov
repnz
xorb
mov
mov
std
sbb
cmp
cld
push
jg
push
sbb
into
mov
mov
pusha
nop
fistpl
je
sbb
repz
cld
out
mov
mov
enter
adc
mov
fdivr
cmpl
fdivs
movsb
out
push
xor
sbb
pop
cmp
incl
insl
cmp
sbb
ss
into
jle
out
rcll
mov
mov
mov
loopne
loope
xchg
or
cmp
mov
xchg
sbb
out
jl
movsb
mov
sti
call
inc
sbb
fs
inc
push
je
loopne
push
mov
fsts
xor
cmp
push
xchg
test
sub
cmovns
push
cmp
das
push
mov
movl
sub
lahf
sti
notl
adc
dec
jbe
add
lahf
push
int3
in
and
push
xchg
test
inc
ds
lock
cmp
cmpl
addr16
sbb
add
dec
pop
cltd
dec
push
in
xor
aas
mov
popf
inc
sahf
push
clc
fcmove
xchg
aam
cld
xlat
es
jne
and
xor
clc
lods
es
lea
and
pop
clc
pop
sbb
inc
imull
adc
fadds
mov
sub
stos
mov
fldcw
mov
dec
fcmovnbe
cmpsb
stc
push
cltd
jecxz
cli
pop
jp
hlt
stos
das
cmc
stos
jns
sub
push
mov
push
add
jne
rcrl
out
fxch
or
scas
mov
jno
lret
or
fs
pop
jmp
cmpsb
sbb
std
mov
idivl
push
mov
dec
int3
fadd
jmp
push
xchg
push
rorl
cltd
push
repnz
ret
ret
cwtl
jbe
lcall
adc
ficoml
mov
jno
les
aas
push
jo
bound
std
idivl
xchg
filds
dec
fcmovu
lret
mov
or
xor
lods
jbe
ss
testl
inc
sbb
dec
add
push
lock
inc
xlat
aad
pop
jno
inc
cmpsl
mov
movsl
shl
pop
mov
jb
adc
add
das
hlt
fs
mov
test
cs
ljmp
and
int
outsl
loope
jle
pop
lcall
cmpsb
mov
das
and
imul
js
mov
fiadds
adc
cli
jnp
sbb
push
jp
mov
xchg
pop
mov
xor
mov
mov
js
call
insb
sbb
push
lock
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
cld
jg
pop
adc
ret
sti
push
sub
mov
xchg
arpl
test
das
out
xor
add
lea
xorb
mov
pop
in
out
sbb
rcrl
mov
repz
test
jge
add
mov
loope
pop
pop
shl
xor
insb
mov
pop
frstor
into
mov
faddp
lods
stc
fstps
sub
cwtl
inc
out
push
xor
push
es
insb
popf
push
xchg
fxam
jbe
lret
and
pop
fisttpll
push
pop
xor
pop
cmp
jno
adc
stos
iret
iret
xlat
adc
stc
das
pusha
mov
or
jg
notb
xchg
xchg
iret
mov
and
inc
nop
lret
sub
xchg
push
xlat
push
cmp
subl
mov
dec
mov
outsb
push
arpl
daa
jmp
cli
jae
or
push
test
cmpb
repnz
xchg
cmpsl
mov
es
int3
sarl
or
pop
and
or
xchg
mov
mov
xchg
fisttps
imul
adc
stos
jne
cwtl
imul
push
lret
orl
lock
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
int3
movsb
mov
add
mov
