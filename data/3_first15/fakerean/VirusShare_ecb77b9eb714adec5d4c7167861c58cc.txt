sbb
add
xor
add
dec
lock
sub
xchg
cwtl
inc
lahf
stc
scas
movsl
xchg
cmp
add
mov
or
imull
rorb
lods
inc
pop
cmp
std
aam
sub
pop
cmc
sub
push
testb
jle
xchg
insb
jns
jo
mov
or
pushf
insb
pop
mov
in
sub
clc
jp
xchg
sti
and
out
rolb
loope
push
xchg
js
lods
dec
movsl
inc
push
cld
jbe
popf
or
mov
loop
adc
out
cmp
cwtl
dec
pop
sub
mov
pop
outsl
xchg
mov
fwait
add
lods
fdivrs
and
les
inc
adc
pop
push
dec
in
add
mov
jmp
ret
loop
icebp
cmp
mov
loopne
cld
sub
pushf
push
pop
sub
dec
es
pop
inc
mov
fcom
pop
popa
jmp
ret
mov
add
mov
cs
inc
ljmp
adc
lret
arpl
stc
addr16
xchg
out
call
xchg
mov
xor
mov
or
pop
aam
xchg
and
sbb
fisubrl
add
popa
and
or
or
loope
test
adc
mov
out
outsl
push
or
pusha
pop
xchg
mov
mov
imul
jle
push
inc
fstl
sbb
cld
add
mov
stos
ja
mov
arpl
inc
xor
mov
xor
call
ret
je
cmp
stc
push
sahf
in
popa
movsl
cmpsl
pop
pop
cld
push
xor
testb
scas
std
jo
aad
pop
adc
cli
notl
sub
or
in
jg
das
dec
inc
push
mov
pushf
mov
xchg
mov
cmp
sbb
pushf
jae
push
mov
loop
inc
xchg
xor
sahf
mov
push
cmp
stc
stos
shrl
outsb
cs
sub
xchg
ja
ret
adc
sbb
mov
mov
mov
lret
push
or
cmc
or
adc
loope
xchg
push
pop
sarb
mov
les
or
xchg
ret
mov
fdivs
inc
mov
sub
in
jnp
test
insb
data16
cmpsl
sub
movsb
popf
sbb
pusha
pop
cmp
sbbb
mov
xchg
js
mov
int
lods
add
ret
mov
xor
in
aaa
mov
es
shl
inc
xlat
add
in
mov
movsl
cmp
xor
into
out
mov
pop
pop
jmp
and
aaa
mov
adc
inc
aam
out
push
pop
stc
orl
mov
push
mov
addr16
lea
call
mov
pop
hlt
and
mov
push
addr16
jecxz
xor
addr16
call
add
and
dec
imul
xchg
pop
mov
nop
sub
sbb
mov
stc
xchg
add
scas
in
movsl
sub
shlb
dec
jl
sub
xor
mov
add
cltd
push
cmp
faddl
pcmpeqw
jge
pop
bound
jg
inc
movsb
cltd
mov
fsub
or
or
push
mov
test
sbb
push
icebp
mov
xchg
stos
pop
sbb
push
test
nop
lahf
xor
lock
aas
fisubrl
mov
mov
dec
cmp
sbbl
jbe
inc
icebp
xchg
sbb
pop
es
mov
or
inc
xor
mov
imul
imul
outsl
enter
sbb
mov
xchg
xor
add
xchg
sbb
scas
jns
das
icebp
pop
xorb
daa
mov
jg
jnp
jbe
fidivs
mov
dec
inc
std
clc
adc
inc
ret
ret
jno
mov
stc
daa
sub
iret
dec
mov
test
ffreep
adcl
lds
stos
sub
test
mov
dec
insb
or
int3
addr16
mov
fcompl
xchg
sub
sti
pop
pop
xlat
pop
ljmp
in
inc
jne
push
incb
mov
jo
xor
inc
ret
loope
cld
add
mov
add
jge
xchg
rorb
adc
push
into
test
mov
mov
cmc
lods
call
testl
call
sub
adc
stc
pop
aam
add
pop
mov
ret
jns
daa
pop
cmp
inc
jns
push
cmp
icebp
sti
jb
mov
or
xchg
mov
pusha
cmpb
imul
mov
jl
mov
lahf
addr16
mov
mov
sti
outsb
xchg
fadds
in
sub
not
stos
sub
iret
jne
mov
movsb
jp
neg
lahf
mov
inc
repz
lcall
int
lods
mov
aas
movsb
mov
mov
sbb
jo
add
lret
adc
pop
fdivrl
push
dec
out
mov
imul
ret
repz
push
pop
xor
mov
xor
popa
test
pop
ret
stos
jo
divb
ss
mov
int3
xchg
xor
jns
xor
mov
inc
and
xchg
loope
clc
dec
xor
fwait
fwait
test
push
jmp
xor
mov
add
sti
pop
ss
push
push
mov
out
inc
adc
rorb
sub
popa
cmp
push
fstps
sbb
cmp
ret
icebp
mov
dec
xchg
aaa
or
mov
mov
test
je
sub
das
enter
mov
sti
cli
das
jecxz
dec
aaa
in
pop
mov
sub
out
dec
aas
lcall
pushl
jp
push
mov
sub
hlt
push
dec
into
push
dec
add
and
mov
or
loope
lahf
push
mov
in
int
add
sbbl
jecxz
dec
scas
jl
arpl
sbbb
jae
push
inc
lea
mov
out
push
inc
add
pop
mov
fisttpll
data16
jb
sub
in
xchg
xchg
outsb
pop
inc
or
aas
lods
loopne
in
arpl
cs
outsl
popf
aad
gs
xchg
fstpl
cs
lret
lock
cltd
pop
cmp
call
enter
add
jne
mov
mov
aam
cwtl
fidivrs
sbb
call
or
mov
jno
xor
data16
loop
test
sub
es
shll
sahf
gs
pop
xchg
jl
rcr
lock
aad
mov
fdivrl
les
jge
jmp
dec
not
fisttpl
xor
test
movsb
dec
sub
mov
imul
xor
dec
push
pop
cmp
adc
gs
movsb
imul
pop
sbb
call
xchg
sahf
xor
nop
aas
lcall
inc
pop
xchg
lock
xchg
pop
leave
mov
decl
cmp
xorb
xchg
mov
push
test
cwtl
std
filds
sbb
pop
inc
adcb
in
icebp
inc
test
jb
jmp
mov
cmp
cld
in
movsl
jnp
in
push
add
and
ja
insb
mov
pop
jo
out
fs
mov
gs
cmp
out
repz
pop
inc
pop
outsb
or
dec
stc
stos
lock
mov
add
inc
dec
aas
nop
mov
and
lea
lds
sbb
sbb
lods
sarl
fnstsw
lods
sbb
mov
mov
pushf
lock
aam
xchg
ja
shrb
push
cmpsb
test
push
mov
jecxz
mov
test
mov
movsl
mov
fucom
dec
xchg
push
adc
dec
inc
mov
cmc
icebp
lock
xchg
xchg
fxch
sub
roll
cmp
push
lea
and
jmp
aaa
in
jno
popa
test
movsb
shr
stos
push
xor
mov
jge
jne
loopne
das
int
xchg
pop
cld
pop
sbb
mov
sub
xor
mov
test
push
out
int3
loop
mov
adc
js
ret
imul
dec
arpl
pop
stc
testl
cs
repnz
push
test
sbb
mov
daa
cld
sbb
cltd
sahf
pop
je
out
pushf
mov
rcrb
ret
mov
add
mov
insb
pop
mov
aaa
rolb
xor
ljmp
pusha
xor
jle
cmp
mov
cli
jp
sahf
lea
jbe
dec
jmp
jp
push
mov
cmp
sub
mov
add
mov
jns
lods
jle
lea
push
gs
std
add
lahf
out
sbb
xchg
adc
sahf
cmp
inc
roll
jp
into
mov
movsb
xchg
sbb
or
inc
sub
mov
pusha
push
shrb
mov
pop
hlt
lods
out
xor
push
inc
adc
lahf
cmp
dec
mov
dec
jp
bound
xchg
inc
push
jge
xorb
inc
cmp
rcrl
fldl
call
mov
fdivl
push
cmp
push
pop
sub
mov
mov
and
inc
mov
out
push
fildl
mov
inc
nop
sbb
outsb
pop
ljmp
clc
iret
cmp
lea
lods
and
lahf
inc
mov
pop
cld
test
push
mov
out
push
rolb
xlat
add
pop
out
mov
movsl
fs
cmp
mov
dec
pushf
xor
push
and
mov
sbb
mov
mov
inc
mov
lods
jb
fsubrl
sbb
imul
xor
mull
pop
sbb
loopne
popf
mov
rorl
fstp
imul
sub
fsubrl
mov
dec
in
rcrb
fcoms
mov
xchg
sarl
js
xchg
pushf
mov
aad
ss
cmp
bound
nop
and
lahf
inc
pop
loope
shlb
push
mov
inc
dec
mov
repz
pusha
jns
add
dec
push
aas
sub
cmp
push
lret
push
test
mov
dec
aam
dec
aam
xor
add
or
clc
gs
xchg
aam
mov
dec
add
cld
and
xchg
sbbl
cltd
mov
popa
out
cs
or
pop
je
xor
xor
adc
sub
js
mov
mov
mov
add
pushf
inc
bound
nop
ljmp
sahf
xchg
xor
out
xchg
cltd
cmp
lahf
ja
sbb
jle
sub
dec
or
inc
push
scas
adc
jmp
rorl
sub
int
fadd
xchg
call
xor
dec
and
and
sbb
sub
es
popf
aaa
in
sub
adc
stos
dec
fsubr
enter
clc
xchg
insl
xorl
xor
imul
lret
push
push
or
leave
and
cmp
ret
jno
rclb
xchg
je
sub
xchg
dec
dec
pop
push
int
outsb
pushf
arpl
lods
jae
hlt
lret
lods
sahf
push
outsb
inc
jbe
cmc
cmp
fimuls
iret
lds
insb
cld
js
cli
stc
pusha
pop
pusha
sti
fs
cmpsl
test
in
cmc
inc
lret
sub
movsl
dec
stos
sahf
mov
mov
and
lret
lcall
or
mov
mov
dec
and
in
out
ljmp
icebp
xchg
mov
loopne
int3
sbb
pop
sub
xchg
lock
imul
popf
jb
ror
sbb
sti
or
out
mov
fsubp
movsb
cwtl
push
ficomps
dec
loopne
test
and
jecxz
dec
rcll
xchg
jb
addb
in
int
sbb
cld
inc
lods
adc
mulb
jae
add
pop
mov
inc
sbb
and
insl
insl
pop
sub
cmpsb
mov
or
clc
out
mov
fisttps
fstpt
imul
fildl
add
or
mov
adc
or
or
in
and
insb
testl
inc
nop
movsl
cmp
aas
xor
call
pushf
dec
jns
lods
arpl
dec
mov
mov
and
xchg
pusha
or
pop
or
sar
imul
movsl
imul
mov
iret
andb
test
inc
jbe
sbb
bnd
sbb
sbbl
push
push
sarl
ss
adc
mov
lcall
mov
shll
jae
fdivr
icebp
fiaddl
popa
sbb
dec
push
fistps
loope
mov
ficoml
mov
sti
dec
int3
scas
outsl
jmp
leave
sub
xchg
pop
dec
lods
jg
je
inc
pop
movsb
mov
xchg
mov
xor
push
fs
xor
loope
or
cld
cmp
mov
sahf
outsb
add
mov
cmp
push
ljmp
insl
sub
out
push
sahf
aam
inc
cmp
dec
sarl
stos
sub
mov
stos
cli
add
push
call
pop
sub
xor
cmc
mov
nop
lret
popf
loop
fsubrp
mov
mov
scas
push
ret
xchg
in
out
cmpsb
adc
imul
mov
imul
mov
and
int3
loopne
lock
pop
mov
sub
cli
mov
xchg
or
sub
inc
mov
xchg
cmp
aam
pop
pop
jge
jmp
mov
inc
sub
mov
out
inc
gs
imul
hlt
lret
jno
imul
jae
insl
xor
mov
outsb
dec
adc
sbb
shl
and
pop
add
cmpsl
adc
lds
mov
push
repnz
js
pop
or
and
lods
ljmp
in
push
fnstsw
sub
lods
adc
xchg
lock
int
xchg
jne
inc
push
movsl
xor
mov
inc
daa
aaa
imul
pmaxsw
scas
aad
adc
xor
fcmovb
fists
jb
xchg
pop
xchg
or
imul
fcomps
cmc
lret
push
stos
mov
push
lods
push
pushf
and
inc
dec
jo
jnp
scas
jl
fmull
xor
je
lds
mov
dec
xchg
jge
sbb
lds
xor
or
xchg
mov
ljmp
movsb
dec
pop
adc
fstl
inc
aad
push
roll
or
ja
and
cwtl
ror
enter
jnp
push
imul
pusha
sti
pop
test
inc
in
inc
in
sbb
adc
pop
pop
jle
cmp
cmp
cmpb
fs
shll
dec
adc
mov
les
adc
fs
mov
xchg
outsl
dec
xchg
movsl
pop
nop
aad
push
cmp
xor
sub
push
xchg
or
or
pop
mov
imul
addr16
cli
cmp
push
int3
mov
xchg
add
fxch
mov
mov
lock
sbb
jbe
push
push
pop
push
pushf
cmpsl
leave
aaa
fidivrl
ret
out
or
je
pusha
data16
and
repnz
das
mov
test
mov
insl
adc
pop
sbb
ret
and
fnsave
jb
movsb
repz
push
movsb
arpl
xchg
int3
and
mov
xchg
xorl
and
shrb
dec
pop
clc
adc
decl
pop
adc
test
jo
adc
loop
sub
mov
mov
xor
cli
add
movlps
xorl
lret
movsb
cli
mov
dec
cmpsb
pop
push
xor
sti
mov
push
imul
scas
pushl
xor
enter
jmp
out
hlt
mov
out
test
cld
sub
outsb
mov
lahf
or
ljmp
cli
ret
mov
xor
jne
int3
shr
mov
sbb
ficoms
popf
fildll
sub
push
insl
clc
jmp
fnstcw
arpl
out
cmp
fidivs
cmp
das
sub
ja
or
xchg
les
and
dec
add
mov
js
aaa
fsubl
cmp
lret
and
push
mov
add
adc
pop
push
add
xor
out
mov
test
add
sub
pop
pop
push
out
sub
icebp
cmc
ret
jmp
push
mov
xchg
cwtl
andb
lods
xchg
mov
cmp
rorb
sub
mov
or
pop
movsb
mov
mov
xlat
dec
testb
push
mov
sub
xchg
sub
sub
pop
in
lret
adc
aam
lds
jne
das
sub
mov
repz
out
dec
sahf
rep
cmpsl
imul
int3
mov
mov
push
xchg
loopne
sbb
test
jl
xor
imul
lret
xor
out
mov
cltd
ret
xchg
icebp
out
daa
xchg
es
test
jge
nop
popf
shll
push
mov
sub
add
outsb
in
movsb
ds
and
push
push
pop
aaa
leave
add
enter
out
pop
cmp
cmp
shl
sub
and
xchg
push
inc
sbb
xchg
cwtl
or
ja
mov
jge
js
orl
test
and
jle
push
adc
jne
mov
jo
or
xchg
inc
xorb
push
cli
adc
add
and
cmc
pop
cs
mov
dec
fisubrs
cmp
mov
test
and
cwtl
mov
mov
xor
fiadds
mov
jo
and
fimull
dec
mov
jg
movsl
das
in
mov
push
sub
faddl
cmpsl
xor
adc
jmp
mov
adc
add
daa
mov
inc
jle
cmp
js
cltd
xchg
cmp
movsl
cld
scas
test
dec
sbb
cli
or
add
mov
out
in
mov
lock
jnp
sbb
cld
out
hlt
or
sarl
lret
and
out
xor
mov
int
test
and
jnp
ljmp
outsb
pop
daa
rolb
movb
mov
clc
sub
arpl
sbb
mov
jns
invd
or
popa
jl
daa
les
je
inc
lret
cmp
dec
daa
mov
cmpsl
popa
lods
jl
sbb
scas
int
arpl
notb
jle
fwait
fwait
leave
repz
dec
test
ds
pop
pop
jecxz
cmc
cld
movsb
int
pop
into
test
inc
mov
popf
mov
shl
dec
inc
aad
xchg
jge
stos
xchg
movsb
mov
dec
dec
mov
js
cli
mov
gs
roll
add
cmpsb
jns
push
mov
push
jge
scas
test
iret
test
in
xorb
push
scas
popf
loope
pop
push
mov
movsl
push
fidivrl
jne
bound
idiv
iret
dec
mov
inc
xchg
repz
pop
int
xchg
ret
fistl
or
movsb
jle
fistps
loop
scas
xor
repz
cs
dec
imul
mov
hlt
cli
iret
test
shll
add
pop
dec
loope
insl
and
xlat
mov
mov
aas
test
mov
popf
xchg
lea
push
loop
ljmp
inc
inc
cmp
stos
mov
xchg
jl
lock
push
lcall
jb
push
mov
and
push
and
mov
cmp
repz
daa
cbtw
sbb
and
clc
mov
jp
pop
add
adc
xchg
hlt
ret
mov
and
pop
fisttpll
popa
lea
loop
mov
scas
xor
mov
sbb
mov
mov
out
pushf
imul
inc
push
loop
dec
jae
aam
xchg
jle
pusha
cmpsl
sub
gs
push
call
cwtl
xlat
add
or
jecxz
in
mov
xchg
push
repnz
repz
mov
cmovo
pop
push
enter
nop
loopw
cltd
sub
mov
or
imul
sbb
mov
jo
sbbl
stos
mov
lods
push
addb
test
fimuls
aaa
dec
dec
mov
mov
cmp
vfpclasssd
xchg
shlb
daa
pop
and
aad
lret
inc
mov
fcom
in
jne
add
call
in
jl
jae
mov
xchg
lods
movl
inc
mov
add
mov
cmpsb
adc
lahf
and
stos
cmp
in
xlat
enter
addr16
pop
xor
xchg
mov
add
xchg
mov
xor
jbe
mov
xchg
mov
call
sbb
test
and
pop
sbb
lds
hlt
and
mov
lods
jp
jns
xor
inc
aas
adc
incl
fcomp
loope
and
mov
in
jmp
jl
mov
jg
loop
push
lods
int3
jecxz
jle
faddl
shrl
fwait
add
shl
daa
sahf
xor
fwait
sub
mov
push
jp
push
rolb
xlat
es
bound
push
ret
in
stos
push
das
mov
sub
sbb
movsb
push
cltd
xchg
pop
int
fwait
fwait
test
lods
xor
inc
sub
adcl
mov
jno
aaa
sar
add
add
int
fxch
sub
cmp
mov
out
jne
dec
ljmp
xor
data16
mov
xor
push
or
lret
fmulp
and
lods
sub
mov
and
jnp
mov
cmp
jecxz
pop
ss
xchg
dec
push
mov
pop
daa
xchg
out
pop
add
push
gs
cmp
ret
cmp
jbe
in
xchg
lods
pop
mov
ficomps
pop
push
lds
mov
sub
add
hlt
fsts
cli
xchg
push
cmp
fnstcw
fcmovnu
jne
out
adc
popa
dec
xchg
mov
int3
pop
xchg
sbb
je
mov
test
or
mov
popa
add
dec
out
add
xor
int
loop
inc
aam
mov
jbe
jp
ror
leave
mov
int
xchg
xor
in
mov
lcall
imul
and
cld
sbb
loopne
scas
les
neg
or
cmpl
dec
sbb
xchg
cwtl
push
push
dec
mov
or
mov
or
out
ffree
out
clc
inc
jb
loopne
outsl
pop
mov
xchg
imul
or
lock
xchg
jne
cli
icebp
xor
dec
pop
push
shll
mov
cwtl
dec
mov
sbb
fisttpl
xor
mov
popf
push
cmp
or
pushl
loope
fwait
std
test
pop
push
sbb
dec
cli
push
js
insb
lods
out
xchg
rorl
leave
and
mov
dec
jo
sbb
mov
cltd
pop
ret
in
jmp
sub
test
adc
mov
shrb
imul
repnz
add
and
xchg
test
mov
mov
jno
out
jnp
insl
roll
sbb
idivl
xor
and
aad
cmp
pusha
xchg
sbb
jne
mov
addb
jecxz
sbb
jl
mov
mov
or
aam
cmpsl
ret
or
sbb
ret
out
and
aaa
mov
push
mov
push
rcrb
jb
add
orl
mov
hlt
mov
mov
xchg
shll
insb
sbb
mov
shl
in
lock
mov
pop
lcall
jbe
xchg
daa
push
cmp
mov
sbb
mov
aam
jp
repz
ljmp
das
std
jl
lods
ds
adc
sub
int
popf
mov
iret
imulb
lret
daa
push
push
mov
dec
or
dec
outsl
add
aaa
stc
add
inc
mov
sbbl
jne
push
inc
fimuls
rorl
fldcw
jbe
jb
scas
mov
stc
jae
sub
dec
push
jmp
push
or
add
inc
pop
cmc
inc
mov
lahf
push
test
and
xor
sbb
lods
call
lock
adcl
xor
fisttps
imul
aaa
xchg
add
fxch
les
and
xlat
dec
xchg
lcall
movsl
adc
push
pop
shlb
sub
in
outsb
sbb
push
aas
call
subps
mov
mov
rcr
xor
ret
mov
or
getsec
or
in
ret
out
pop
push
or
mov
jg
mov
mov
adc
cmp
jge
cwtl
je
test
cmp
fldt
sbb
inc
mov
dec
jns
sti
mov
mov
sub
aam
xor
mov
cs
add
cmc
shlb
lahf
push
xchg
sub
dec
cmpsl
adc
aaa
int3
aaa
pop
std
data16
out
adc
clc
xchg
lods
jg
cmp
lock
nop
repz
cmpsb
cli
jmp
adc
lea
add
jle
mov
push
scas
rcl
insl
dec
push
mov
xor
sub
adc
in
sub
cs
lds
insl
mov
dec
test
cmp
fists
loopne
es
call
mov
dec
add
fmul
es
ljmp
dec
sbbl
insb
inc
inc
jo
bound
push
cmp
cmp
call
cwtl
sub
loopne
pop
std
jbe
xchg
push
lods
and
ljmp
movsb
jmp
test
shlb
jne
call
dec
inc
dec
mov
or
out
inc
sub
adc
std
dec
insl
push
cmp
mov
mov
shrl
arpl
dec
aas
cmp
sub
add
mov
add
movb
enter
cmp
rolb
das
rclb
mov
pop
jp
pop
and
jnp
push
clc
cmp
cmp
movsb
cmp
xchg
mov
mov
or
jne
push
cmp
call
dec
and
mov
jbe
fsts
cwtl
hlt
dec
jle
seta
std
adc
and
loopne
mov
sti
jno
cld
imul
add
xor
nop
pop
mov
xor
fildll
bnd
mov
and
mov
pop
inc
adc
lock
sub
pop
jb
pop
rcr
shll
aaa
sub
arpl
ret
sahf
das
ss
aaa
add
or
shl
bound
fsubs
mov
out
add
and
test
repnz
add
mov
sbb
mulb
mov
loopne
lahf
sahf
popf
mov
and
sub
lds
jno
mov
mov
xchg
rcrb
cli
outsb
lock
iret
mov
imul
repnz
add
pop
cld
pop
or
and
mov
xchg
test
mulb
or
fs
cmpb
sub
push
xor
cmp
sbb
add
add
popa
push
lds
dec
movsl
into
into
push
cwtl
add
or
adc
xor
insl
cltd
in
adc
stos
mov
adc
mov
cmp
xchg
pop
test
push
sti
push
imul
je
sbb
int
cs
jecxz
mov
cmc
push
add
or
add
pop
loope
out
dec
fwait
mov
pop
sbb
out
leave
xchg
in
lret
xor
pop
pushl
les
stos
inc
push
jmp
out
mov
popa
mov
flds
sub
cmp
je
sub
lea
pop
ret
popa
or
out
in
ret
daa
cmc
pop
outsb
sub
dec
test
sbbl
cs
sti
push
inc
mov
shlb
imull
lret
add
cld
fdivr
inc
fildll
ja
xor
data16
push
clc
scas
mov
xchg
les
addb
std
into
mov
xor
mov
jbe
lods
bound
cwtl
pop
or
ss
les
jns
xor
fstpl
xor
mov
cmp
stos
jns
mov
mov
adc
jmp
pop
xor
movsb
or
cmp
adc
add
es
add
mov
sub
sarb
mov
push
sub
les
neg
push
jmp
xlat
orl
xor
pop
sbbb
push
mov
lcall
scas
inc
out
jo
scas
leave
add
cmpsl
push
jg
or
fstpl
rcrl
adc
mov
cmpsl
ds
loope,pn
jg
sub
in
push
popf
dec
jle
addr16
mov
fsts
or
jle
mov
inc
int3
xor
clc
sarw
loope
and
sarl
pop
jnp
push
pop
filds
aas
lret
lock
cmpsl
aam
testl
push
mov
stc
enter
fmuls
addr16
fcmovnbe
pop
xor
lahf
xchg
pop
xchg
movsb
xchg
out
shlb
adc
filds
shll
imul
int3
cmp
pop
outsb
add
sub
andl
mov
inc
dec
ss
ja
xor
ljmp
fimull
xor
push
cs
lods
pop
cld
imul
push
lock
sub
mov
cmpsb
inc
imul
xchg
push
inc
pushf
data16
pop
lret
pop
outsb
mov
xor
cltd
insl
ds
sar
test
jle
mov
xchg
xor
add
mov
pop
in
leave
int3
incb
mov
push
movsb
xchg
push
stos
mov
aad
push
add
stos
mov
or
orl
sub
movsl
in
jnp
das
jmp
insb
lock
dec
sub
int3
sbb
pop
cmp
repnz
loopne
pop
cs
je
into
insl
lahf
gs
lods
pop
stos
adc
add
imul
pop
into
mov
shll
mov
lds
sub
inc
fsubrs
je
mov
cmpsb
out
ror
sub
add
imul
sbb
fnstenv
int3
pop
xor
jp
stos
mov
inc
sti
ret
stos
ja
sub
sahf
sub
pop
ja
stc
push
cli
add
movsl
mov
repz
clc
sahf
sahf
in
cmp
mov
mov
test
pop
shll
call
push
sub
sahf
rcr
cld
pop
icebp
lea
adc
xchg
stos
push
scas
push
dec
popf
outsb
xor
cmpsb
mov
cwtl
jne
pop
icebp
sbb
movsl
mov
cwtl
mov
mov
jle
cwtl
sub
sub
orb
push
outsl
bnd
dec
loop
popw
das
and
inc
jae
xor
add
xor
add
dec
cmpsl
sub
idivl
xor
lods
push
sbb
outsb
ret
mov
bound
sub
pop
jecxz
inc
or
pop
sub
pop
jmp
js
mov
push
inc
xchg
pop
lea
movsl
call
push
imul
push
into
sti
dec
add
leave
push
add
hlt
mov
lods
aas
or
divl
das
add
hlt
or
in
mov
or
idivb
test
dec
icebp
scas
jle
push
jbe
fwait
cmp
in
xchg
aas
xchg
pop
adc
rorb
xchg
test
xchg
leave
lret
out
lcall
fdivrs
mov
pop
icebp
or
or
xchg
loope
xlat
orb
cmpsb
xlat
dec
or
iret
lret
lret
push
lods
mov
into
pop
cmc
jb
stos
hlt
fidivl
loop
and
lcall
sbb
mov
cmp
add
push
or
xchg
enter
add
stos
sbb
inc
adc
pop
and
mov
idiv
push
fidivrl
cmc
pop
aaa
cld
outsb
jmp
test
xchg
jnp
repz
xor
push
mov
jb
adc
outsl
out
mov
mov
push
push
lods
dec
rcr
jmp
fdivr
and
ljmp
cmp
mov
cld
ljmp
push
mov
mov
jno
fsubl
pushf
push
imul
sbb
add
lds
adc
push
jnp
jge
ret
in
and
and
enter
test
out
push
jle
int
mov
mov
xchg
xor
into
repnz
adc
push
inc
push
scas
stos
xchg
jae
loopne
dec
in
out
lds
add
cli
jno
or
ljmp
lds
jne
adc
adc
jge
int3
repz
fwait
inc
jb
imul
out
test
movsb
ja
jbe
or
cwtl
gs
addr16
pop
movsl
add
or
rcll
and
mov
fnstsw
testb
mov
mov
inc
xor
pop
xor
andb
sahf
rclb
in
pop
fsts
fildll
std
xchg
rcrl
push
stc
aaa
test
dec
mov
sahf
imul
sbb
js
cmpsl
scas
pop
xchg
js
add
push
xchg
iret
ret
subl
dec
inc
scas
out
std
out
out
mov
inc
push
dec
pop
xor
xchg
xor
add
das
call
lcall
mov
adc
xor
insl
mov
call
and
test
rcrl
fistps
xor
cmpsl
pop
xchg
popf
cmpb
enter
pop
lock
pusha
testb
insl
pushf
mov
mov
lods
sbb
or
adc
rolb
lea
lcall
movsl
inc
imul
fwait
mov
push
scas
sub
adc
cmp
pop
pop
sbb
push
loop
jmp
fidivs
jle
pop
fadds
sarb
pop
push
mov
jle
jg
sbb
cli
lahf
mov
mov
jns
shlb
mov
pop
pop
test
sbb
sahf
popf
in
bound
es
and
pop
lahf
or
pop
das
leave
outsl
xor
mov
sarl
sub
pop
push
test
or
inc
ljmp
pop
mov
pop
add
and
test
push
lahf
lea
pusha
hlt
fwait
mov
add
imul
cld
mov
jb
inc
and
shll
inc
xor
loope
cmp
cwtl
sub
mov
sbb
in
call
and
ret
stc
gs
pop
cmc
test
clc
inc
mov
ds
ljmp
mov
mov
shrb
in
or
jl
push
fimull
push
push
arpl
jno
mov
jp
repnz
jle
cmp
xor
clc
mov
sbb
cmp
lds
pop
mov
dec
jns
dec
out
xchg
in
inc
jns
sub
sbb
sub
cli
sbb
je
movsb
fnsave
ds
sbb
icebp
fdivrl
inc
shlb
push
lods
out
mov
pop
pop
fwait
jl
xorl
fadd
jnp
fs
out
add
xchg
cmp
lods
ss
xor
sti
addb
mov
mov
scas
mov
or
or
pop
roll
mov
jne
mov
adc
add
push
addr16
jns
jecxz
dec
movsb
lret
lock
out
mov
in
sbbb
shll
xchg
dec
add
sbbb
add
jmp
jbe
add
cmp
mov
xor
mov
dec
iret
add
inc
repz
roll
push
ffreep
pop
dec
inc
inc
xchg
imul
dec
repz
push
push
dec
out
lock
enter
mov
add
sub
inc
cli
dec
loopne
adc
add
pop
dec
cld
sbb
adc
in
fadds
mov
fsub
jo
mov
mov
stos
enter
jge
jge
mov
cmp
push
mov
testl
cmp
pop
sub
sbb
out
push
outsl
dec
cmpsb
clc
inc
cmp
aas
pop
insb
mov
dec
inc
or
jb
shl
mov
movsb
or
push
adc
xor
jns
mov
out
jae
dec
xor
push
sarl
leave
in
inc
sub
or
outsb
inc
decl
mov
mov
ffree
clc
inc
rolb
loopnew
sub
bound
mov
scas
in
insl
lcall
es
push
pop
mov
dec
dec
jmp
sahf
push
push
jecxz
je
mov
xchg
out
jp
jno
jbe
pop
jle
sbb
pop
rorb
push
mov
int
jb
sbb
popf
scas
bound
outsb
inc
rorb
out
inc
out
xor
pop
adc
lock
subl
scas
ss
pop
and
pop
cwtl
arpl
ficompl
cmp
push
lret
add
aas
inc
jmp
inc
pop
out
jae
lods
out
xor
test
test
pop
in
pop
repnz
inc
cmp
dec
orl
inc
adc
icebp
mov
cwtl
jnp
and
add
aam
pop
push
leave
or
jp
std
outsb
jbe
cmpsl
xor
jl
xor
adc
sub
dec
test
sub
dec
popa
add
or
aam
call
addr16
dec
lds
lret
rol
clc
aad
insl
lcall
mov
xchg
std
pop
ficompl
sbb
in
fmull
or
loopne
or
add
xor
pop
cltd
or
lods
mov
das
sub
popf
outsb
mov
pop
mov
adc
stc
and
in
jns
jmp
les
cmpsb
xor
or
push
dec
insl
lds
movsb
mov
fisttps
cmpsb
jno
sarb
mov
iret
jge
js
ret
push
mov
mov
pop
icebp
mov
mov
push
std
cli
movsl
pop
inc
jne
mov
stc
sub
ss
push
add
or
sahf
jno
mov
mov
mov
mov
cmp
push
push
scas
pusha
jle
jb
xor
in
xchg
ret
xchg
jmp
aas
subl
pusha
daa
mov
sbb
mov
push
mov
subl
ret
mov
sub
into
retw
xor
aad
or
leave
cmc
xor
lea
jns
inc
xor
icebp
sub
es
xchg
xchg
std
jo
daa
loop
adc
insb
mov
outsl
sub
push
loope
out
mov
xor
dec
in
repnz
and
xor
icebp
jmp
push
pop
loop
or
into
sbb
inc
xchg
lret
movsl
push
cs
pop
ret
popa
lret
sbb
dec
xchg
cltd
push
scas
fnsave
and
inc
ror
ret
fidivrs
dec
cmp
repnz
mov
repz
outsl
and
add
sbb
push
xchg
je
cmp
xlat
lret
dec
cmpsl
jmp
arpl
mov
xlat
repz
jmp
test
jge
mov
push
pushf
repnz
sub
push
int3
or
jge
pop
and
xchg
lahf
aad
test
cmc
das
cwtl
bound
aaa
or
mov
shrl
test
pushf
aas
jmp
mov
lods
gs
pop
imul
test
push
repz
lcall
push
xorl
mov
inc
sarl
stos
int3
sub
lret
outsl
jg
in
cmp
stc
sti
or
rol
insl
sub
add
sbb
mov
xchg
cltd
subb
scas
insl
dec
leave
pop
cmp
xchg
popf
jecxz
and
idivb
rcll
pushf
mov
scas
aaa
shrl
sbb
rcrb
addl
and
lret
push
sbb
mov
aad
add
cmpsb
jl
sub
outsb
dec
cmp
sub
or
out
sbb
xchg
in
mov
addr16
leave
and
add
call
sub
and
cmc
aaa
push
adc
sub
and
jl
sub
test
in
pop
push
push
into
in
xor
push
push
rcrl
mov
mov
negb
aaa
das
push
pop
cli
stos
or
stos
xor
xor
jbe
insb
jb
test
mov
push
dec
mov
add
dec
jne
popf
das
or
push
and
fildl
push
rep
push
fwait
and
pop
and
sub
inc
testb
lods
pop
adc
jg
rcll
cmpsl
mov
shrb
iret
jb
frstor
xlat
bound
mov
lret
stc
jle
pop
inc
mov
sub
add
dec
xor
call
pop
jp
lret
cmpsb
imulb
dec
fbstp
mov
mov
inc
pop
aaa
orl
out
lods
sbb
add
sbb
call
sbb
push
jo
mov
pushf
das
loopne
loope
nop
ja
js
push
xchg
xor
hlt
ds
sbb
aam
pop
inc
jl
xchg
and
cld
xchg
adc
add
sub
aad
ds
dec
inc
in
xchg
mov
or
or
or
stos
add
icebp
adc
roll
and
mov
icebp
scas
add
adc
xchg
push
ds
inc
mov
ds
cmp
mov
aam
mov
loope
push
lods
out
aad
dec
sbb
pop
adc
popf
xorl
adcb
pop
mov
loope
jmp
je
scas
je
pop
out
jmp
bound
aaa
jge
sbb
mov
jg
pop
xor
or
xchg
lods
ret
or
mov
subl
pop
xchg
inc
push
shll
mov
push
out
mov
mov
jnp
pop
rclb
daa
shrl
or
daa
adc
stos
cmpsl
nop
lret
repnz
test
in
mulb
add
jae
sbb
lock
dec
gs
ja
cmp
test
loope
mov
cmp
cmp
mov
aam
sarl
lcall
or
xor
nop
test
test
decb
jle
xchg
out
xchg
inc
mov
or
aas
enter
and
loop
stos
adc
dec
inc
fistpl
mov
sbb
dec
push
lods
rclb
test
clc
push
jns
int3
xchg
push
and
ds
outsb
aaa
decb
lret
cmc
les
ja
sbb
test
and
outsb
cli
xor
fcomps
adc
in
in
fdivrl
adc
adc
test
loopne
sbb
dec
mov
sbb
data16
push
add
add
inc
movsb
adc
adc
sub
jns
sti
inc
sbb
jae
fstpt
ret
shll
insl
jge
mov
cmovno
repnz
bswap
in
imul
jnp
js
gs
jne
imul
adc
jb
pop
push
insb
cmp
dec
sbb
pop
testb
imul
xchg
push
not
jno
pop
push
in
adc
fucom
jmp
and
sub
out
sbb
sbb
pop
aas
dec
insb
pop
setns
add
dec
pop
or
aas
cwtl
mov
ja
jmp
add
in
inc
cmp
xlat
and
push
mov
fdivl
xchg
jae
add
lods
xor
push
mulb
xchg
mov
lds
cld
jo
sbb
xor
or
lea
lds
jns
or
je
fndisi(8087
mov
into
out
fstpl
push
push
push
mov
int3
pop
test
in
sub
mov
dec
dec
mov
fdiv
dec
test
cmp
dec
fisttps
insb
xlat
mov
adc
test
mov
outsl
stos
push
aas
cld
xchg
ftst
inc
icebp
and
push
popf
push
iret
mov
push
adc
pop
push
cmpsb
fwait
popf
cmp
inc
cmp
ffreep
rol
adc
and
inc
xchg
popf
cmpl
xor
arpl
pop
icebp
inc
or
mov
xchg
lret
aaa
shl
sbb
mov
xchg
test
es
push
dec
ret
sub
xor
out
sbb
xchg
mov
repnz
mov
or
fsin
mov
sti
xor
inc
lds
push
das
sbb
loopne
out
into
xor
xor
push
dec
js
adc
adc
jno
sbb
mov
jae
dec
mov
cmp
push
faddl
bound
push
sub
sub
mov
sub
pop
jbe
mov
jmp
pop
outsb
nopl
mov
sub
xchg
push
sbb
cmpl
loop
dec
and
sti
scas
jecxz
pop
sbb
repz
insb
pusha
daa
stc
jns
mov
sbb
push
js
jo
and
ljmp
mov
push
lret
jle
inc
int3
loopne
aaa
icebp
nop
rcrl
adc
movsb
cltd
jecxz
xchg
lods
sbb
inc
add
cmpb
cmp
into
ljmp
testl
jnp
mov
pop
xlat
add
add
sbb
or
add
cmp
pop
jg
outsl
imul
orl
negl
fnstsw
loopne
sub
cmp
repz
jp
lds
push
lds
sbb
lcall
xchg
psubsw
in
pushf
mov
pop
lret
int
addl
enter
inc
fldenv
push
orl
imul
or
inc
lods
and
jmp
xchg
pop
loope
data16
mov
popa
lcall
cltd
or
int3
aad
mov
xchg
mov
inc
leave
add
les
out
mov
dec
jnp
jno
adc
mov
xor
dec
push
jg
pop
loope
ss
push
jge
std
mov
jle
imul
ds
out
mov
out
movsb
lds
mov
adc
lret
in
cmp
pop
xchg
daa
ss
inc
mov
cmp
mov
mov
repz
mov
outsl
ja
xchg
sub
xchg
push
cmpsb
pushw
mov
push
das
loop
xchg
mull
gs
mov
cmc
inc
mov
dec
repz
fisubrs
xchg
sbb
outsb
lods
jge
inc
or
insb
sub
add
mov
insb
mov
cmp
inc
enter
xchg
imul
inc
hlt
fstpt
mov
testb
jge
lret
into
mov
cli
gs
loope
lods
lds
in
xchg
mov
jge
dec
mov
mov
jno
pop
jns
mov
loopne
mov
sti
int
fs
movsbl
test
insl
imul
aas
and
lds
and
inc
add
mov
inc
pop
mov
xchg
mov
sbb
adc
das
movsb
loop
in
popl
mov
daa
lret
cmpsb
jecxz
out
dec
icebp
jle
jb
sub
cmp
add
int
pop
cltd
and
mov
xchg
sbb
aad
cmp
stos
dec
les
inc
or
pushf
jb
dec
xchg
and
shr
outsl
in
xchg
mov
shll
adc
add
aaa
sub
jno
mov
shll
movsl
and
hlt
adc
stos
lods
test
fs
mov
out
or
sbb
xchg
jo
ret
sahf
mov
stos
xchg
add
fs
mov
lsl
out
call
cmp
orl
hlt
xor
push
int
push
into
lcall
adc
fnstsw
daa
arpl
jnp
jbe
mov
test
mov
aad
orb
jmp
sub
pusha
imul
into
jne
xor
adc
sbb
pop
or
outsl
xor
push
leave
lock
mov
and
jns
xor
sub
imul
adc
mov
dec
imul
or
or
add
xor
xor
jnp
jae
pop
push
xchg
dec
push
add
cmp
repnz
jmp
sbbb
outsb
das
test
xchg
int
arpl
adc
pop
mov
movsb
xor
mov
lret
push
cwtl
test
sub
scas
jg
cwtl
jno
cmpsl
pop
daa
dec
out
int
jge
add
adc
mov
sbb
mov
gs
popa
pop
aad
xorb
jb
and
mov
pop
cmpsl
mov
popf
sbb
mov
xchg
or
cmp
lret
addr16
adc
mov
sbb
add
mov
sbb
pop
mov
pop
in
test
bound
and
adc
lahf
loope
dec
ds
scas
xor
pop
sarb
aad
stc
xchg
lret
jmp
rcl
sub
dec
daa
cmpl
pop
jecxz
push
jp
adc
push
fadds
adcl
cli
push
add
mov
out
fldenv
insl
loop
ret
xor
js
stc
int
and
inc
push
sbb
outsl
popa
add
or
pusha
dec
pop
ljmp
jmp
sub
adc
jae
rcr
dec
or
repz
xchg
pop
sahf
repz
jle
push
xchg
jmp
add
sbbb
add
or
sbb
test
outsl
hlt
test
popa
inc
jo
lret
xor
xor
rorl
fdivrs
add
loopne
inc
jb
mov
cmp
add
int
daa
mov
xchg
sbb
mov
outsb
inc
xor
stos
inc
mov
subb
jmp
fsts
rcl
ret
push
sbb
fmuls
adc
push
jo
xor
or
mov
sub
cmpsb
mov
mov
jmp
xchg
roll
add
pop
cwtl
jne
cmc
sub
dec
movsl
and
xor
dec
dec
cmp
sbb
enter
lcall
mov
jmp
int
subb
gs
push
xchg
pop
daa
or
rcrb
xor
pop
dec
dec
out
mov
fdivrl
aaa
and
dec
fildll
fbld
outsb
cld
pop
jmp
pop
pop
sub
mov
gs
sbb
fists
enter
out
notb
outsl
adc
cmp
mov
fbstp
fisubrl
pop
adc
lods
cmpsb
push
sbb
add
bound
fmul
pop
rcrl
pop
ss
xchg
loop
mov
pusha
loopne
dec
add
out
xorb
cmp
xor
call
mov
sub
scas
mov
xchg
adc
iret
in
test
popf
push
xchg
enter
lret
jae
adc
push
fwait
or
cmp
and
add
imul
data16
push
dec
cmc
mov
jge
add
div
dec
sbb
lcall
adcl
lods
jb
cmpsb
or
push
sbb
mulb
dec
mov
xlat
dec
shl
xorl
dec
inc
test
sub
test
and
into
mov
xor
sbb
mov
data16
push
loope
dec
lahf
hlt
inc
jecxz
jno
out
in
sbb
aam
ret
ret
xchg
inc
es
shl
out
pop
mov
mov
sbb
or
fcomps
fsubrs
xchg
cwtl
test
mov
mov
xchg
and
inc
xchg
mov
roll
pop
lock
in
inc
scas
push
xchg
jl
pop
sbb
jp
orl
or
add
mov
lahf
pop
mov
and
dec
sub
push
and
sub
mov
sbb
mov
push
mov
sbb
stos
cmpsb
cmpb
in
mov
cmp
sbb
jnp
pop
mov
subl
popa
or
inc
mov
sbb
mov
imul
loop
stos
loope
mov
out
jno
cmpsl
or
xor
nop
js
out
shll
cmp
test
jge
daa
jno
mov
push
jns
add
jns
sbb
push
inc
mov
mov
fs
cmpsl
or
loop
jl
pop
mov
popa
cli
rorl
mov
xchg
pop
inc
cmpsl
imul
xchg
push
gs
mov
inc
std
lret
mov
mov
stos
imul
jo
and
cmp
out
cmc
inc
sub
pushl
and
bound
insb
inc
xor
pop
movsb
sbb
cmc
mov
jl
mov
mov
sub
sbb
add
daa
test
rorl
mov
ja
adcb
fstps
fsts
test
xchg
adc
bound
mov
dec
outsb
push
int
pop
in
std
adc
into
arpl
mov
loope
inc
inc
pushf
fldl
pop
imull
pusha
adc
push
leave
aad
fiadds
mul
sub
cltd
sub
imul
lods
int
pushl
arpl
sbb
test
inc
in
or
sbb
mov
dec
jne
add
bound
lods
xchg
movsb
sbb
or
mov
add
in
xlat
scas
sarl
mov
fstps
sbb
xor
int
pop
andl
lret
jno
pop
and
icebp
out
xchg
orl
lcall
lock
xor
or
lea
dec
add
loop
dec
add
sahf
mov
movsb
pop
test
pop
cmpsb
lods
lcall
in
mov
add
mov
sub
jge
outsl
sub
jle
aad
js
and
jg
nop
repz
imul
adc
mov
sub
loope
decb
mov
les
jmp
mov
test
cli
sahf
xchg
dec
xchg
lods
loopne
hlt
rorl
out
cmp
icebp
dec
xchg
mov
insl
xor
cmp
mov
inc
jg
pusha
stc
pop
sbb
dec
pushl
dec
jp
faddl
inc
clc
mov
mov
test
mov
mov
and
ret
add
movsb
mov
mov
jg
cmpsl
and
shll
stos
mov
outsb
push
or
in
dec
std
mov
aaa
cmp
lock
dec
pop
mov
mov
xor
pop
mov
mov
xor
ja
fwait
jle
lds
fdivs
loope
add
nop
adc
mov
shl
jns
adc
jb
lods
lret
je
dec
pop
testb
add
clc
and
and
mov
movsl
gs
int3
lods
loopne
fmulp
and
negb
jle
pop
mov
mov
lret
daa
ljmp
shll
jle
shll
cmp
sub
cmp
mov
sub
int
dec
pop
adcl
fists
fisubrs
jp
xor
sub
mov
pop
xor
xor
mov
hlt
shr
mov
sbb
jp
push
cli
inc
inc
xchg
fucom
dec
jo
lahf
loop
sbb
pop
or
jmp
xlat
call
pop
inc
mov
leave
scas
das
jno
ss
cmp
sahf
jne
loope
inc
lcall
fcmovne
or
mov
push
adc
jb
notl
xor
filds
pop
rorl
add
insb
fisttpll
mov
loope
sbb
and
pusha
mov
notb
arpl
or
insl
fxch
fbstp
ret
std
fmuls
addr16
fstpl
scas
xor
loop
push
adc
loope
mov
inc
adc
in
out
sub
pop
movsb
fdivs
inc
and
sub
cld
cmp
jb
and
hlt
and
mov
xchg
sbb
aam
fcmove
scas
adc
mov
aaa
mov
add
mov
ss
dec
adc
shrl
sbb
sbb
push
fneni(8087
in
in
push
xor
inc
dec
xor
inc
inc
mov
and
adc
ficoml
jge
inc
sti
lahf
ret
rclb
jno
pop
stos
daa
cmp
es
je
xchg
faddp
jo
out
aam
call
cld
dec
lock
jl
dec
push
pop
xchg
mov
push
scas
subl
sbb
inc
aam
scas
cli
pop
fildl
hlt
mov
hlt
inc
insb
sub
lahf
roll
ja
xchg
inc
rcll
jbe
pop
mov
adc
movsl
pop
mov
cmp
xor
std
mov
das
bndldx
lods
jg
not
movsb
sahf
int
jb
mov
add
xlat
sar
push
inc
cltd
movl
addr16
fiadds
mov
pop
rcll
jne
test
sub
imul
jmp
mov
lret
pushf
pop
ret
loopne
mov
xor
test
mov
adc
popf
push
sbb
andb
pop
test
lret
jo
adc
pop
test
inc
xlat
movl
fdivl
pop
pop
ja
mov
negb
or
mov
mov
insb
hlt
push
mov
pop
fbld
push
inc
outsl
rclb
cltd
fmulp
out
mov
lods
sub
ret
cmp
test
inc
jl
enter
inc
pop
daa
mov
sub
loopne
pop
popa
int
cwtl
mov
fs
xor
ret
daa
push
inc
sbb
sub
sub
test
pop
or
add
jns
fcomip
mov
mov
outsb
int3
out
mov
jle
inc
mov
shl
bound
scas
push
mov
mov
int3
movsb
pop
test
popf
movsb
test
fsubs
add
cltd
shlb
cmpsb
xor
or
and
pop
and
or
adc
cmpb
outsb
in
insl
out
addr16
clc
ss
or
xor
fiadds
movsb
sub
gs
add
mov
mov
dec
jp
iret
mov
sub
arpl
dec
adc
cmp
add
xor
out
or
adc
cmc
xor
and
int
mov
imul
lcall
testb
repnz
not
mov
xor
xchg
pop
sub
cli
add
std
imul
jne
mov
lock
and
or
cmc
jge
mul
out
adc
inc
cs
sbb
mov
arpl
in
push
jns
mov
pop
scas
xchg
mov
lods
cmp
je
jp
and
sti
jle
nop
jg
push
add
popf
sbb
dec
pop
std
jno
fnstsw
in
xor
adc
sbb
adc
xor
fs
jecxz
sbb
xchg
sub
xchg
cwtl
mov
pushf
insl
cmc
movsb
cmp
shlb
imull
add
mov
jne
push
mull
call
out
or
jle
rcl
clc
loop
adc
out
or
outsb
and
xlat
or
sbb
test
cmpl
pop
shlb
mov
push
sub
jne
fsubl
or
sbb
popf
cli
mov
lods
insb
into
movsl
subb
fs
sub
mov
cld
push
and
rolb
mov
push
and
push
dec
enter
push
out
dec
push
xor
scas
adc
push
xchg
popa
ret
sub
xor
sub
cltd
incl
pop
mov
sub
rcrl
add
mov
aad
dec
mov
inc
sub
rolb
pusha
bound
inc
dec
jo
jae
les
push
adc
cmc
in
roll
dec
and
pop
pushf
pop
cmpsb
decb
push
andl
testl
cmp
inc
jmp
ds
ja
mulb
popf
test
ret
sub
or
pop
pop
cmp
call
inc
sub
push
xchg
cmp
push
mov
push
bound
scas
jae
pop
mov
inc
lret
shrb
dec
leave
and
test
mov
cmp
stos
mov
push
adc
cmpsl
sti
lods
filds
rcrl
out
mov
cwtl
xlat
xor
frstor
adc
je
daa
pop
push
mov
mov
cmp
popa
mov
ret
jno
shll
pop
jne
sbb
xchg
ret
out
push
sbb
mov
mov
inc
pop
add
lret
jb
lods
ds
cwtl
sbb
movsb
push
dec
sub
and
xchg
mov
mov
rcl
aaa
jae
sbb
stc
mov
dec
nop
in
les
pop
in
in
loope
out
jne
movsl
out
rcr
iret
lea
mov
cmp
pop
hlt
fxtract
jp
jb
cmpsl
xor
aad
mov
jo
dec
aaa
test
int
stos
sahf
cmp
gs
inc
iret
mov
jo
push
jbe
push
hlt
js
loopne
repz
jnp
lds
outsb
mov
add
out
jmp
dec
imul
stos
add
xor
fsubl
pop
movsb
mov
pop
scas
jns
sbb
push
pop
cmp
in
mov
mov
sbb
in
add
ss
and
fisubrl
popf
daa
mov
cmpsl
shl
scas
loope
mov
xchg
add
out
push
imul
xchg
lcall
lret
ljmp
inc
insl
cmpsb
in
add
add
fimuls
movq
mov
test
inc
adc
push
jle
xor
in
pop
cwtl
push
pop
scas
mov
scas
ljmp
dec
mov
xor
sub
mov
int
add
sbb
ret
sbb
in
xor
and
or
repnz
cmc
idivb
popf
sarb
sahf
jbe
sub
fisubl
lret
add
fcom
jbe
fisubrl
sub
adc
dec
jmp
mov
repnz
lahf
jb
js
inc
push
addr16
loopne
mov
das
bound
mov
xchg
test
in
mov
mov
fcomps
sahf
incb
cld
out
cmp
int
mov
add
xchg
and
sbb
adc
in
lock
scas
mov
rcrl
ficompl
fcompl
and
dec
mov
sub
push
scas
and
jo
in
add
sub
stos
aaa
pop
pop
push
xorl
mov
jnp
adc
or
insb
cmpb
scas
fsub
movsb
pop
es
mov
out
out
leave
ficoml
insl
adc
int
arpl
imul
fwait
inc
jne
xchg
add
push
xor
out
sbb
mov
enter
adc
and
stc
cmp
sbb
add
pushf
cli
in
aaa
loopne
jp
sub
adc
lret
xorb
jg
mov
and
or
dec
insl
sbb
xchg
or
push
cmp
and
lock
mov
xchg
icebp
jae
nop
inc
sbb
repnz
xchg
cmpl
movsb
stos
shlb
adc
push
lds
ret
mov
das
mov
or
ror
lock
imul
add
lahf
and
inc
and
cs
sarl
push
mov
inc
push
or
pop
imul
call
popf
sub
sub
push
sub
mov
adc
scas
pop
push
sub
or
stos
ret
int3
movsb
testl
popfw
ficoms
and
fstpl
mov
xor
pop
cmp
into
jnp
or
push
add
mov
lods
xchg
test
jo
test
sti
call
sub
mov
enter
stos
shll
negb
mulb
push
or
subb
loope
loope
mov
pop
lcall
jmp
mov
pop
jg
icebp
xchg
push
adc
in
inc
clc
pop
mov
pop
mov
call
jmp
aas
mov
shll
inc
pop
daa
lds
aam
sub
stos
pusha
jbe
jno
outsb
ret
imulb
orl
cmpsl
jb
rcl
inc
push
shrl
popf
mov
dec
rorb
cmp
add
mov
std
push
sub
andl
sub
arpl
xchg
out
mov
cli
jo
pop
and
inc
pop
cltd
xor
cmp
lods
cmp
sub
dec
push
notl
pop
ljmp
rorl
leave
jb
push
push
popf
popa
stc
outsl
mov
jne
ffree
cli
push
mov
ss
or
in
insl
jmp
and
jmp
cmpsb
pop
fnstsw
add
stos
or
cwtl
jnp
cwtl
aad
sti
cli
push
imul
push
mov
mov
jb
jg
pop
mov
mov
stc
sub
jl
sbb
mov
inc
addr16
cs
loop
dec
in
test
clc
mov
push
popw
int
xchg
mov
nop
imul
sub
andl
test
outsb
repnz
popa
std
pop
add
loope
mov
xchg
fucomp
xor
push
pop
inc
push
gs
inc
fsts
mov
jecxz
loope
fdiv
pop
inc
and
xchg
cld
adc
pop
sarb
inc
lds
push
mov
dec
ja
ret
std
repnz
xor
mov
inc
fldl
inc
ds
xor
test
aas
mov
lock
push
mov
mov
mov
ret
repnz
adc
out
repnz
add
pop
pop
jmp
and
pusha
mov
sub
push
es
daa
adc
xchg
mov
sbbl
mov
aad
add
rolb
add
adc
test
inc
cmc
sub
outsl
add
xchg
push
jbe
or
jmp
mov
pop
in
test
pop
cwtl
insb
int
scas
inc
cltd
std
xchg
test
push
fucom
in
cmp
movsb
mov
movsl
add
xchg
mov
jge
not
dec
inc
xchg
push
xor
cmp
xor
mov
ja
les
ret
dec
repz
movsb
orb
loopne
mov
push
mov
jae
stos
pop
ljmp
push
lock
cmp
sub
test
xor
icebp
cmc
mov
xchg
jb
xchg
aam
and
sub
das
into
sbb
adc
andb
outsb
add
pop
lcall
js
push
popa
je
mov
fnstcw
fldl
stos
mov
imul
shll
push
xchg
mov
push
mov
jecxz
mov
adc
in
xchg
imul
xchg
inc
loop
sbb
das
mov
leave
adc
mov
jnp
and
mov
xchg
adc
and
jne
xor
mov
jns
cmp
xchg
xor
xor
pop
shlb
add
and
inc
dec
ret
pushf
sub
dec
loopne
push
dec
cmp
int
push
sub
pop
icebp
dec
les
pop
adc
cltd
push
add
popa
negl
hlt
stos
lcall
fiaddl
into
dec
mov
repnz
pop
adc
leave
cli
add
shll
mov
or
fldt
out
mov
mov
jae
jle
lods
jg
mov
stos
sahf
xor
xchg
push
lea
stos
aam
mov
and
jmp
push
pusha
orl
int3
int3
push
sub
fiaddl
inc
cmpsb
and
jae
fcomps
sbb
push
in
sarb
push
fs
negl
and
mov
cmp
cmp
int
jbe
mov
dec
push
mov
je
mov
cmp
mov
lods
push
cmpsw
icebp
hlt
sbb
mov
jge
lock
jl
jmp
enter
pop
cmpsl
sbb
mov
jg
es
jmp
adc
push
insl
loop
dec
fidivrl
xor
sub
repz
or
out
mov
mov
stos
xchg
push
pushf
cwtl
xlat
cltd
ljmp
jb,pn
mov
cld
int
push
fidivl
pop
in
or
sbb
popa
push
jg
shrb
jb
aam
ficoml
jne
sbb
sub
xlat
sub
out
popf
jne
sub
jle
aaa
add
jns
icebp
or
ss
out
scas
or
and
bound
into
and
ds
fstl
gs
jae
test
and
mov
dec
in
ss
leave
into
sub
inc
jmp
push
push
sub
out
outsb
je
data16
add
adc
out
stos
jno
mov
mov
mov
jle
mov
xchg
fldl
xchg
arpl
fcoms
or
pop
xor
sbb
scas
sub
lds
push
push
mov
push
pop
test
call
sbb
cmp
clc
ja
jmp
mov
icebp
push
mov
out
leave
mov
jns
adc
xchg
arpl
hlt
xchg
test
xchg
fstpt
jae
cmp
shl
aad
inc
adc
ret
cmpsb
outsb
orb
push
sbb
add
setp
testb
aam
scas
sbb
cmp
rcll
ret
orl
fadds
jne
hlt
xor
push
stc
dec
mov
and
lods
xchg
cwtl
imul
mov
lret
pop
cs
sti
mov
xchg
scas
cwtl
sahf
inc
dec
jnp
add
xchg
mov
adc
xor
add
and
outsl
sub
sub
jmp
or
jge
dec
ds
fsubrl
icebp
cmpl
or
out
xlat
xor
jmp
pusha
scas
pushf
pushf
push
pop
lds
sub
pop
fdivr
iret
xor
sahf
orl
jae
les
fs
bnd
aas
jp
jg
xor
inc
cmp
mov
and
mov
add
xchg
sub
fildl
inc
mov
mov
movsl
inc
jecxz
jbe
test
add
xchg
xchg
lcall
aam
dec
iret
fdivrl
mov
add
push
and
popl
jle
jp
xchg
out
mov
inc
xor
inc
jmp
mov
mov
test
arpl
testb
and
xor
aam
dec
pusha
movsb
out
test
or
and
mov
jo
push
jo
jle
mov
mov
push
das
inc
sub
lcall
out
mov
cld
fsubrl
push
nop
pop
adc
clc
fwait
pop
lds
roll
sbb
jmp
push
xor
push
outsl
cltd
cmpsl
mov
mov
jle
mov
lds
mov
mulb
rcr
outsl
out
dec
mov
js
mov
mov
mov
cmpsb
push
mov
ret
es
ret
jne
xchg
inc
movsb
mov
jb
out
addb
sbb
jge
xchg
sub
add
xchg
rclb
pop
repnz
adc
mov
sahf
jle
popa
shl
push
sub
iret
dec
iret
or
push
fwait
push
sahf
das
dec
andl
cmc
fisttps
fisttpl
insl
lret
fs
stc
or
push
and
jns
pop
lcall
mov
js
int
pop
inc
sub
pop
and
mov
shl
xchg
sbb
mov
insb
xor
jb
add
push
xchg
mov
jmpw
insl
mov
add
and
xchg
push
lods
cmpb
shrd
mov
hlt
xchg
jp
aad
sub
pop
fnsave
xor
add
pushf
es
mov
pushf
pusha
xchg
andl
out
add
das
or
inc
cmpsb
inc
dec
and
xor
pop
pop
xor
or
xor
scas
js
or
pop
fldenv
xchg
push
or
sub
jecxz
sub
aas
push
in
lock
mov
pop
stos
push
repz
cmp
je
sbb
cli
add
add
push
inc
out
fimuls
cltd
jg
pop
lret
jecxz
push
sbb
int3
insl
xchg
push
jg
mov
addb
cmpsb
outsb
jmp
popa
mov
mov
cmp
add
push
lcall
xchg
aad
xchg
aad
lret
in
xor
leave
jmp
sub
in
sbb
mov
mov
xchg
xor
cli
ja
lds
jns
mov
sarl
pop
mov
addr16
adc
jno
pop
loopne
jg
aad
ja
cmp
mov
sub
mov
ljmp
int3
dec
test
dec
les
mov
addr16
pop
sbb
mov
jo
ljmp
aam
dec
negl
push
rorl
cmc
stc
push
lahf
andb
into
bound
stos
or
sub
leave
adc
cmp
or
iret
add
lds
push
pop
push
pushf
xchg
mov
jmp
inc
fsts
shll
repz
insb
mov
in
lahf
jp
stos
je
lods
std
stc
shlb
repz
push
xchg
jge
xor
das
sbb
cwtl
mov
sub
jecxz
cmp
mov
jbe
in
repz
cs
lahf
or
pop
push
dec
xchg
pop
jb
xchg
mov
and
mov
lahf
aas
fcomps
lods
rcrb
push
pop
push
icebp
cld
sahf
jo
jmp
adc
adc
sub
aam
fcomps
push
es
leave
cmpsb
js
sbb
push
inc
mov
fwait
xchg
cmpsl
icebp
push
inc
xchg
int3
das
fisubrl
data16
test
or
jb
in
dec
lcall
xchg
add
push
mov
dec
add
cmpsb
outsl
jg
lea
es
add
pop
cmpl
fdivl
scas
jbe
jecxz
es
cmc
loope
in
aad
mov
inc
lds
popa
inc
xor
pop
ja
cltd
and
xor
inc
jge
cmc
mov
inc
and
hlt
mov
mov
jne
pop
jle
sub
or
mov
adc
movsb
mov
mov
xor
and
popf
movsb
lods
scas
inc
add
xchg
leave
ss
fs
call
push
inc
dec
dec
call
movsb
test
adc
adc
cld
xor
mov
sub
cmp
popa
fcompl
subb
icebp
addr16
sbbb
push
mov
int3
push
sbb
mov
pop
lds
push
int
cmpsl
sub
push
into
scas
fdivrs
popf
sbb
adc
pop
loope
push
mov
or
pop
jmp
xchg
xchg
mov
cld
stc
rol
dec
out
jo
movsl
mov
sbb
add
sbb
aad
rolb
pop
sbb
loopne
mov
cmovle
pusha
cmp
pop
into
mov
dec
push
sbb
out
bound
leave
addl
test
and
sub
or
jg
xchg
dec
popf
pop
push
pop
jo
sub
cmpsb
pop
xor
jmp
fidivl
aad
xchg
and
adc
fbld
xchg
or
sti
shll
test
cmpl
and
mov
inc
and
sub
adc
ds
mov
fsts
cltd
cmp
inc
out
and
loope
mov
pop
mov
pop
inc
lcall
js
jns
out
call
push
mov
cs
imul
sbb
pushf
inc
pcmpeqb
mov
addr16
test
lods
data16
loop
pop
or
or
subl
mov
dec
mov
jne
sub
sbb
xorl
adc
aaa
rorb
lds
xor
mov
inc
add
jmp
mov
pop
test
add
ret
dec
repz
sub
into
cmpsb
sbb
push
mov
lods
scas
push
jno
push
movl
push
mov
ret
pop
pop
sbb
inc
mov
add
or
push
std
push
jb
jno
push
in
mov
gs
push
sbb
aas
mov
mov
adc
dec
mov
mov
push
rol
in
int3
leave
test
sub
das
or
aas
fists
xlat
or
cmpsl
push
jle
mov
xchg
sub
cmp
fwait
data16
imulb
lock
mov
test
mov
xchg
aas
mov
mov
mov
cmp
dec
je
testb
decb
jnp
in
mov
insb
out
or
popf
in
pop
mov
ljmp
inc
sub
push
movsb
push
scas
pop
or
adc
pop
mov
repnz
mov
lret
jbe
xor
fistpll
std
jg
cmp
mov
push
mov
xchg
repz
or
fistpll
fs
int
mov
sub
push
sub
mov
cmp
adc
jge
or
and
popf
push
adc
jp
and
inc
movsl
lods
daa
divb
jg
shl
inc
js
inc
test
btsl
lds
sub
and
imul
xor
jecxz
or
lods
inc
dec
fistl
repnz
testl
mov
mov
shr
lds
sbb
dec
je
lret
cmp
xchg
sub
idivb
sbb
cmp
and
or
inc
jle
adc
enter
loopne
insl
imul
cli
leave
out
or
add
insl
xor
test
orb
xor
jge
add
lock
mov
push
xorl
cli
xchg
loopne
push
push
mov
push
inc
fistl
sub
cmpsb
inc
and
repnz
popf
inc
leave
push
add
pop
push
push
or
jp
xchg
ret
xor
or
ljmp
shrl
lods
jno
rep
pop
cld
aas
rclb
dec
and
or
mov
add
rol
into
cmpsl
je
jmp
xchg
pop
outsb
mov
or
dec
sub
aam
fisubl
aad
fwait
cltd
jae
add
pop
stos
or
sub
mov
pushf
bnd
ds
sbb
loope
add
add
push
mov
sahf
pop
mov
lock
xor
sbb
sbb
mov
push
or
push
jns
cmp
cmc
leave
icebp
clc
popf
cmpsl
xchg
loope
sti
and
mov
xchg
popf
dec
sbb
or
sarb
popf
mov
lret
pop
popf
bound
fidivs
scas
out
stos
mov
ret
inc
mov
pushf
pop
push
popl
loope
pop
cmp
dec
adc
ret
sbb
inc
sub
outsb
shlb
pop
mov
and
aaa
movsl
inc
shlb
sub
lods
mov
or
rcrl
push
shll
sbb
or
inc
mov
sahf
aad
pop
mov
push
sbb
cs
repz
adc
mov
clc
orl
mov
sarl
sbb
les
movsb
aaa
sbb
insl
stos
rcrl
int
ret
add
lock
lahf
jns
pop
mov
popa
bound
adc
jne
cmc
out
bound
test
mov
pop
pushf
cmp
mov
pop
sbb
aas
push
iret
dec
xchg
sbb
inc
push
xchg
xchg
aam
imul
jae
mov
shlb
jmp
cmpsb
stc
sti
jmp
cmpl
dec
xchg
or
or
test
xor
iret
jo
movsb
mov
mov
nop
ljmpw
mul
dec
sarb
jno
xchg
inc
inc
pushf
dec
faddl
push
jno
xchg
clc
cwtl
pop
cs
jno
dec
xlat
cmpsl
push
jg
pop
xor
inc
cmp
movsl
mov
mov
loope
imulb
test
sti
push
fidivrl
inc
sbb
mov
or
adc
or
lret
and
push
inc
adc
rorb
xchg
nop
mov
popa
jecxz
je
leave
lret
dec
mov
dec
mov
push
xchg
sti
cmpsb
xchg
das
or
clc
add
gs
insl
inc
repz
mov
adc
lahf
xchg
and
dec
aad
and
fcomps
and
pop
pop
lods
push
loop
pop
xlat
popa
dec
loope
xchg
leave
sahf
sub
or
out
lcall
and
pop
test
jae
jne
push
add
fadds
push
pop
clc
xchg
ret
and
add
popa
out
mov
xchg
add
das
icebp
pop
das
cmpsb
and
xchg
fwait
xchg
and
xchg
rorb
jne
cmp
sahf
xchg
jp
xchg
iret
in
mov
inc
cmp
sub
adcb
xor
mov
fcmovbe
pop
mov
ret
inc
pushf
int3
in
dec
or
dec
or
and
push
dec
sub
or
jg
rcrb
mov
ret
jecxz
fistpl
lds
cmc
mov
into
loop
mov
imul
xchg
and
testl
push
add
fcoml
sahf
xorb
lods
or
lds
add
jecxz
pop
mov
add
add
xor
lret
push
cli
hlt
test
mov
dec
cs
mov
rolb
dec
xor
mov
lds
jbe
jbe
lcall
fabs
imulb
xchg
out
dec
xchg
fwait
cmpsb
and
mov
sub
aad
std
adc
and
cmp
iret
inc
aas
xor
cmp
cwtl
sqrtps
mov
data16
inc
jl
iret
enter
mov
add
mov
jp
adc
cmp
add
pop
jle
movsl
push
or
and
xor
pop
je
mov
jno
jge
cmp
pop
out
pop
jle
adc
xor
les
insl
dec
jnp
movhps
and
xorb
icebp
cmp
and
jns
outsb
jno
and
cld
loop
jns
mov
xchg
bound
movsb
test
decb
out
jle
push
hlt
xchg
mov
dec
jmp
daa
pop
dec
enter
enter
hlt
repnz
mov
test
and
jge
xor
add
inc
or
adc
mov
cmp
adc
inc
jae
push
xchg
inc
xchg
mov
push
sarl
rorb
scas
rep
jb
inc
adcb
jb
mov
cmp
repz
lret
stc
shlb
mov
dec
xchg
ss
mov
pop
rol
addl
dec
or
adc
push
lret
sahf
push
mov
dec
popf
hlt
lret
cmp
xlat
in
jnp
fwait
movsb
jmp
sarl
add
xlat
sbb
push
icebp
in
xor
clc
fisttpll
out
out
mov
cli
cltd
jg
shlb
cmc
pop
cmp
pop
ds
add
mov
nop
fs
inc
outsb
cmp
nop
push
rorl
test
jno
cs
push
sub
sbb
push
insb
mov
cld
push
mov
or
cltd
cmp
mov
lods
and
push
inc
aaa
outsl
inc
enter
push
stos
imul
jg
cwtl
dec
cmpsb
sahf
xor
pop
xor
jae
add
dec
or
xchg
int
mov
push
daa
hlt
mov
dec
jge
adc
push
pop
xchg
fistl
pop
lahf
pushf
das
push
pusha
lahf
fisubl
je
pop
mov
push
fldenv
icebp
hlt
push
into
mov
mul
cs
stos
es
aad
cltd
push
in
bound
mov
sub
icebp
adc
jns
lock
sbb
shlb
xor
xor
les
dec
push
mov
rcrb
push
add
add
out
push
xor
cs
dec
addb
cmpsb
adc
jmp
xchg
mov
ret
rolb
jg,pn
push
inc
or
push
out
in
aam
inc
in
rolb
cltd
mov
adc
sahf
or
pop
and
jno
call
test
cs
dec
push
sbbl
call
sti
add
outsb
sti
or
nop
into
or
adc
mov
inc
clc
popf
out
cmp
add
and
shl
mov
insl
or
scas
cmpsl
mov
xchg
adc
cmp
js
add
cwtl
mov
lods
sbb
sti
or
insb
push
xor
pop
ja
and
jmp
cmp
clc
xor
pop
mov
cltd
scas
xchg
pop
bnd
mov
pop
negl
mov
push
imul
addr16
push
cwtl
insb
push
incl
dec
pusha
pusha
fwait
or
insl
lds
call
adcl
push
xchg
dec
push
sahf
stc
jg
lret
in
pop
cmp
shlb
arpl
pop
dec
lods
stos
adc
test
loopne
add
xchg
test
aas
or
cmp
movsl
dec
xchg
int3
enter
sbbl
add
adc
pop
xchg
or
pop
adc
in
mull
dec
cmp
ret
jmp
popa
add
pushf
scas
lock
mov
and
imul
jle
loopne
and
lock
jbe
mov
jbe
loopne
and
daa
cmp
rorl
pop
xor
mov
jmp
aam
inc
adc
imull
sbb
lahf
hlt
push
les
loop
arpl
jecxz
xchg
test
push
adc
lock
cmp
jmp
fwait
inc
subl
xor
ljmp
jns
xor
push
mul
or
add
mov
ja
je
cld
ds
pop
mov
add
mov
loope
mov
xchg
jnp
mov
sub
jge
mov
jle
es
mull
call
pop
jnp
jmp
mov
cmovae
mov
cli
mov
jg
mov
es
test
popf
adc
push
add
push
xchg
lea
arpl
and
cmp
frstor
push
lahf
xor
popa
and
lods
iret
jge
xchg
addr16
ja
pushf
adc
xchg
data16
mov
xchg
xchg
popa
adc
mov
jle
aam
lret
stos
dec
sub
mov
jecxz
mov
or
cld
pop
in
jl
popf
jb
ja
test
or
pop
or
cmp
fdivrs
bound
nop
adc
mov
aaa
xor
fbstp
mov
ret
popa
cwtl
cmp
aam
nop
ljmp
mov
add
aaa
or
or
sbb
mov
adc
nop
cs
sbb
bound
fsubrl
fs
jno
mov
jo
push
and
jmp
mov
out
ffreep
jnp
icebp
repnz
std
add
subl
adc
add
and
xchg
push
xor
xchg
hlt
ret
xor
dec
sahf
arpl
sbb
pop
push
es
rcr
xor
mov
fistpl
sub
and
ficoms
and
out
sbb
cmp
stos
lret
int3
dec
je
xchg
pop
mov
xchg
lods
lds
mov
jp
mull
mov
flds
cwtl
push
addr16
xchg
jae
mov
rcrb
mov
std
jle
push
mov
in
cli
jp
jns
fildl
jnp
test
mov
lods
adc
outsl
rolb
adc
mov
shr
testb
push
aam
adc
push
mov
inc
mov
das
lea
popf
or
int3
mov
lock
push
mov
jns
cmp
mov
sub
out
clc
fcomps
fucomip
xchg
xchg
push
cmp
and
into
cmpsb
cmp
jge
fsubrl
aam
aas
mov
jnp
push
roll
je
pop
cmp
dec
adc
aas
dec
ds
stos
dec
pop
xlat
data16
xor
xchg
jmp
cmpsb
add
mov
and
popa
repz
sbb
cmp
push
cmp
sbb
icebp
mov
movsb
dec
cmp
movsb
popf
cli
cwtl
jle
mov
mov
jno
test
pop
jnp
push
popl
and
add
daa
clc
dec
iret
test
popf
fnstcw
mov
adc
pop
and
jno
xchg
dec
mov
test
or
aad
push
out
cmpsb
xor
lret
sub
pop
push
jns
out
pop
mov
dec
fiaddl
and
mov
mov
bound
insl
pop
ss
dec
inc
jge
or
xchg
add
sahf
add
mulb
insl
push
or
inc
xor
ror
xchg
cmp
outsl
in
repz
repnz
outsl
push
iret
cwtl
mov
popf
addr16
push
ffreep
pop
out
ja
xchg
lds
dec
jo
cltd
movsb
imul
sub
scas
mov
mov
popa
sbb
mov
into
scas
hlt
out
jle
je
pop
loope
sbb
fldcw
dec
jl
dec
add
xchg
mov
mov
dec
jo
mov
lahf
pop
jecxz
mov
xor
stc
add
or
in
mov
aad
mov
push
fcomps
test
inc
xchg
in
faddp
inc
aam
lods
adc
jge
test
ds
jbe
scas
popa
sbb
mov
mov
mov
popf
sub
out
cmc
mov
sbb
sbb
add
hlt
jg
sahf
test
outsl
inc
ret
sbb
xor
sbb
popa
pop
xor
sub
les
movsb
cltd
movsl
push
test
popa
daa
mov
inc
mov
jmp
xlat
cmp
stos
dec
lds
inc
std
stos
cwtl
insl
push
dec
mov
sahf
out
mov
cmp
popa
addl
adc
mov
mov
test
mov
sub
lret
or
leave
mov
iret
cmp
inc
inc
sti
and
inc
mov
cmp
dec
sub
mov
mov
push
dec
and
pop
cmp
pop
dec
lret
mov
sbb
loope
xchg
jae
cmp
cld
xor
dec
lods
mov
fwait
popf
jnp
sbbb
insl
pop
xchg
cmp
jg
jne
xchg
push
sarb
dec
dec
mov
push
gs
lods
out
jo
mov
xchg
sub
ds
pop
addr16
lret
sbb
imul
xor
stc
add
or
ljmp
sbb
aaa
and
shll
sub
jge
rorl
loop
jle
mov
push
fisubl
inc
std
div
or
cmp
jne
sub
inc
outsl
add
out
imul
or
js
cmp
sbb
adc
loopne
push
or
sub
jnp
gs
or
mov
ljmp
add
cmp
in
test
int
lods
aam
xchg
test
dec
roll
ret
mov
push
fcomps
pop
adc
stos
pop
daa
loop
les
pusha
aad
jl
pop
sahf
lea
mov
incl
fbld
loopne
mov
sbb
push
cmc
ficomps
push
push
and
xor
mov
xor
out
inc
shll
cmpsl
xchg
rclb
push
fiaddl
pop
test
lret
outsb
xor
fwait
ror
mov
imul
mov
lock
cmp
ds
mov
jo
jge
cli
loopne
jle
lret
aas
push
adc
mov
ja
mov
fs
shr
xchg
inc
int
and
pop
les
and
cli
mov
in
sub
and
in
data16
inc
jbe
je
sbb
daa
jl
int
sbb
xor
outsl
enter
add
outsb
fmull
mov
xchg
push
sub
ror
aam
pop
movsb
or
repz
jb
lods
xchg
fnstcw
xchg
cltd
andl
cli
into
das
enter
cmp
icebp
jns
xchg
call
insb
push
jae
jl
es
insl
adc
cld
jp
imul
xchg
dec
cmp
adc
shl
mov
int
push
loop
jle
push
andl
js
xchg
pop
daa
loopne
es
arpl
mov
es
mov
xlat
mov
mov
sub
push
xor
icebp
dec
jg
lcall
sbb
daa
dec
xor
adc
mov
xorb
pop
gs
mov
dec
pop
int3
mov
jo
add
sub
into
fistl
mov
adc
and
into
push
test
aaa
mov
repnz
xchg
dec
lahf
dec
addl
sub
pop
outsb
in
out
repz
xchg
ljmp
addr16
mov
sbb
mov
and
mov
sub
aaa
xor
add
adc
ud1
addb
add
or
jle
xchg
push
ja
ss
scas
loopne
mov
rclb
jmp
mov
mov
cmp
scas
movsl
pop
scas
cmp
push
movzbl
inc
xor
xchg
mov
lods
lods
or
fisttps
xor
aas
sbb
xchg
pusha
inc
out
insb
fnsave
jbe
cmc
out
mov
js
ljmp
fadds
cld
push
pusha
and
roll
inc
aam
sub
loopne
jp
mov
mov
or
push
in
jg
and
push
dec
inc
inc
imul
ja
pusha
mov
mov
and
inc
fmul
loop
push
cmc
inc
out
test
mov
std
cmp
fisttpl
call
pusha
inc
negb
mov
aad
jbe
dec
add
mov
adc
cwtl
fs
rorb
mov
dec
cmp
roll
js
xchg
and
push
cwtl
push
jo
push
dec
xor
push
stos
adc
jb
add
jmp
popa
lret
xchg
outsl
adc
fdivrl
std
pusha
mov
xor
xchg
xor
cld
jns
fdivr
insb
push
mov
pusha
lcall
stos
pop
sarb
sub
imul
shrl
mov
or
outsb
adc
mov
jg
xlat
std
out
dec
sub
dec
xor
adc
filds
xchg
cltd
jne
fwait
jae
mov
ljmp
push
shlb
xchg
fcomip
xchg
lods
adc
int3
xor
mov
and
xchg
testb
xor
enter
xor
hlt
mov
ret
inc
repz
testb
jo
mov
mov
or
and
data16
out
outsl
jb
in
hlt
add
sub
adc
mov
out
popa
cli
stos
test
xor
ficompl
sub
cmc
fdivrl
repnz
add
mov
pop
std
movsb
aad
add
pop
hlt
dec
dec
adc
adc
flds
inc
imul
cmp
inc
enter
mov
xlat
movsb
adcl
push
inc
fstl
in
fmuls
loope
dec
cmp
and
orl
outsl
xorl
ljmp
icebp
jmp
jle
push
adc
inc
div
outsb
mov
inc
lahf
aas
push
clc
and
xor
fstp
dec
add
orl
dec
cmpsl
hlt
cmpsb
dec
outsb
popa
sub
or
arpl
repnz
insb
jp
out
movsb
xchg
pop
push
mov
imul
mov
dec
xchg
out
ljmp
clc
xchg
jl
lahf
lret
xchg
addr16
pop
sbb
push
cmc
push
mov
in
imul
xchg
mov
mov
push
subl
outsl
popf
imul
jmp
cs
pop
xor
adc
and
cwtl
pop
rol
fistl
mov
lahf
clc
and
fwait
mov
aam
jae
xor
enter
mov
jnp
ljmp
lds
mov
je
ret
xor
lea
add
mov
pop
jge
add
dec
pop
out
stos
mov
mov
mov
pusha
sarl
stos
data16
adc
and
daa
dec
loopne
pushf
adc
lret
loope
sub
adcl
jecxz
pop
cmpsb
push
pop
xor
loopne
sbb
cltd
pop
mov
dec
ret
inc
jle
sahf
movsl
das
fdivs
dec
jg
jmp
addr16
push
lods
inc
ljmp
call
sbb
clc
pop
out
adc
mov
jle
inc
adc
inc
loope
daa
ficompl
int
dec
xchg
cmp
mov
mov
repnz
sar
lds
rorl
std
out
iret
outsl
loop
loope
sbb
out
scas
loop
addr16
je
push
in
and
mov
push
or
jmp
dec
pushl
and
dec
cmpl
loopne
push
fistpll
add
push
jl
pop
addr16
add
cmpsb
add
xor
outsl
sbb
or
loop
mov
inc
mov
add
aad
test
push
jge
adc
dec
nop
mov
out
mov
pushf
ja
arpl
cmp
add
xlat
push
js
xor
sub
lods
push
mov
sbb
xor
add
fcompl
cwtl
lock
cmp
jle
es
push
mov
xchg
sbb
in
sbb
jbe
jnp
pop
test
xchg
jns
jbe
inc
pop
loopne
inc
leave
fnstenv
mov
or
int
or
push
insl
test
add
jne
fwait
js
dec
pop
sub
imulb
xor
cmp
mov
ljmp
es
xor
ss
mov
loop
or
cmp
stos
cmp
xchg
push
stos
adc
sbb
adc
xor
mov
jmp
sub
cmp
sub
ret
dec
xor
sbb
mov
test
jns
sti
push
call
or
sub
cltd
add
shlb
je
sti
repnz
incl
mov
jge
push
inc
fsubrs
xchg
inc
dec
jbe
mov
clc
movsb
fisttpll
push
push
decb
cmp
imul
scas
fldt
hlt
xlat
cmp
movsl
jns
sub
scas
scas
test
out
add
nop
mov
xchg
out
cmpsb
mov
insb
cmp
pcmpeqw
sti
sahf
mov
push
add
push
mov
in
push
shll
cs
hlt
push
mov
or
and
js
inc
dec
mov
mov
mov
or
nop
pop
mov
xlat
sbb
pop
pop
pusha
in
jecxz
lds
mov
call
cmp
mov
adc
xor
stos
ss
sub
lret
pop
or
je
xor
insl
pop
sub
adc
mov
push
push
xor
std
lods
jbe
movsl
cwtl
int
dec
mov
add
call
call
call
dec
mov
mov
ds
inc
pop
xchg
inc
adc
sub
dec
jno
icebp
pop
sbb
jb
or
push
mov
sbb
test
je
jmp
stos
sub
jecxz
pop
nop
lahf
cltd
popa
stc
jl
gs
aaa
cmpsl
push
jmp
jns
les
adc
push
aas
dec
icebp
testb
sbb
xchg
mov
mov
daa
push
insl
ja
cmp
xor
das
faddl
adc
rcrb
outsl
iret
mov
clc
xchg
bound
push
mov
xchg
xchg
jne
ljmp
xchg
divb
sbb
jl
dec
xor
loopne
inc
and
mov
jg
enter
adc
inc
je
push
in
sub
push
insb
jecxz
xchg
sahf
das
sbb
test
pop
push
gs
stos
lret
rolb
dec
or
push
pxor
ret
mov
cmpl
popf
xchg
hlt
sbb
mov
push
xor
xor
push
sub
insl
sarb
pop
pusha
jns
mov
clc
lods
idivl
loop
int3
lods
mov
or
and
or
rorb
xchg
adc
iret
jb
push
push
inc
mov
cmpsb
call
dec
sarl
mov
std
add
push
in
out
xchg
aad
xor
mov
add
ss
ss
mov
inc
or
loope
outsl
pop
cmp
dec
leave
nop
jns
or
mov
pop
sbb
ficomps
pop
mov
fwait
mov
xchg
jne
loopne
push
xchg
out
clc
or
test
jno
fadd
aam
xorl
stos
loope
pop
std
sub
cld
sub
adc
stos
adc
movsb
dec
jmp
js
aas
mov
pop
notb
jecxz
sbbb
in
iret
xchg
sub
mov
aam
pop
loop
mov
lret
sti
mov
dec
or
pop
shlb
cmp
push
xor
push
lods
jno
push
or
out
jg
hlt
je
fistpll
jae
dec
cmpsl
mov
sahf
pop
sbb
gs
dec
pop
push
test
lods
fstp
adc
sti
or
fmuls
repz
adc
movsb
add
or
adc
xchg
test
scas
fisttpl
xchg
sti
mov
jg
jb
and
cmp
push
lcall
in
jg
mov
push
cmp
mov
or
out
and
loop
push
pusha
xchg
adc
jmp
add
gs
push
cli
cli
cmpsl
das
adc
push
loope
mov
enter
fidivl
mov
popa
add
cmc
out
adc
and
mov
adc
leave
fisttpl
orb
jecxz
push
repz
pop
xchg
shll
stos
aas
fistps
pop
shll
mov
and
add
xor
cmp
mov
stos
push
repnz
daa
in
and
dec
ficompl
ret
loop
fidivl
movsl
imul
mov
and
insb
fistps
out
test
jecxz
cwtl
mov
lods
mov
push
cmp
adc
icebp
push
jmp
sbb
pop
and
mov
push
dec
inc
pop
pop
adc
cli
scas
add
xchg
sbb
adc
adc
cwtl
out
dec
ja
xor
add
push
ret
out
imul
pop
mov
jnp
and
mull
loopne
out
xchg
or
xor
pop
adc
or
mov
sbb
aas
and
call
neg
jo
sahf
jno
mov
insb
mov
or
pop
test
jne
or
in
inc
mov
xchg
mov
add
xchg
stc
mov
das
cwtl
dec
pop
add
jmp
xor
mov
add
and
mov
adc
ds
push
pushf
shrb
clc
cmp
cmp
xor
xor
sub
outsb
test
pop
or
aaa
or
mov
nop
stos
jb
sbb
cmp
mov
pop
bnd
les
aaa
out
scas
inc
pop
push
popf
pop
shlb
add
lret
push
mov
pop
jne
inc
int3
ret
or
inc
call
out
bound
rcr
mov
mov
or
and
icebp
das
lock
out
add
mov
xchg
cli
mov
mov
adc
je
sub
push
mov
xchg
mov
inc
pop
lods
jnp
imul
pop
pushf
out
lret
push
dec
push
sbb
icebp
mov
sub
sbb
addb
ret
mov
add
mov
pop
nop
pop
push
inc
test
xlat
clc
divb
add
mov
adc
inc
mov
stos
ret
xchg
into
js
fisubl
into
jb
dec
jns
in
pusha
shl
sbb
jmp
push
xchg
xchg
mov
and
xor
in
fiadds
sahf
addr16
jnp
xor
mov
pushf
mov
shl
enter
mov
das
cltd
push
cmpsl
rorb
add
jecxz
or
jle
xchg
dec
mov
out
movsb
data16
bound
dec
mov
sub
popa
ret
xchg
jo
dec
enter
in
xchg
push
stc
cmp
js
mov
es
push
fbstp
adc
sub
mov
push
incl
dec
cmp
fcmovnbe
je
imul
popa
mov
enter
fwait
add
scas
shrb
stc
jecxz
sub
lea
pop
test
jne
xor
mov
add
aas
into
mov
repz
add
mov
mov
mov
mov
iret
notl
dec
pop
pop
les
jecxz
mov
pop
pop
mov
sub
lods
cmpsl
mov
pop
leave
dec
clc
aas
cltd
icebp
popl
fildll
sub
mov
sub
mov
dec
test
xchg
data16
and
xlat
sub
push
mov
into
push
stc
dec
push
leave
enter
fcomps
lods
jl
dec
pop
and
jne
les
inc
ljmp
ss
stos
lods
cltd
icebp
dec
int3
pop
cwtl
movsl
icebp
dec
loopne
xchg
ss
push
sbb
xchg
push
fldt
dec
clc
leave
push
pop
mov
inc
cwtl
repz
mov
inc
fstpt
ja
addr16
loope
int
int
mov
mov
add
into
or
jne
adc
push
das
ret
aaa
add
fcmovnb
in
dec
jge
pushf
das
add
mov
gs
jbe
xchg
rorb
pop
cli
imul
push
sbb
sbb
add
xor
pushf
pop
cwtl
bound
fists
fbld
mov
inc
adc
dec
mov
add
inc
popf
add
jb
lret
clc
fbstp
inc
inc
push
ret
jnp
push
jno
push
xor
mov
mov
mov
or
push
sub
repz
xchg
or
sbb
ret
mov
call
hlt
adc
cmpsb
and
and
repz
inc
push
outsb
jae
or
shrl
pop
shrb
jmp
jne
jno
jp
pushf
fs
ja
sub
sub
jp
idivb
xchg
shr
mov
push
dec
fdivrl
xor
icebp
in
roll
xor
xor
insl
sar
sbb
pusha
stos
sub
js
inc
mov
fcmovbe
cmp
mov
icebp
xor
adc
sbb
xchg
pop
add
fbstp
sub
jne
into
icebp
cwtl
movsbl
lds
js
mov
and
pop
mov
inc
mov
ds
mov
or
sub
cwtl
jb
jnp
pop
aaa
jnp
jmp
sbb
or
sti
add
pusha
rclb
lods
lcall
push
rorb
aas
lock
or
mov
rcrb
push
pop
or
jo
and
rcl
adc
stos
jecxz
out
in
in
addr16
add
sub
test
fsubr
bsr
jae
dec
inc
push
sub
ljmp
rorl
xor
mov
dec
xor
test
fidivrs
pop
adc
cli
andl
mov
xchg
mulb
into
mov
mov
shr
sbb
push
sub
in
in
and
fisubrl
adc
daa
call
repnz
cmpsb
mov
int
sbb
shrb
mov
cmp
push
cmpsb
dec
fmull
pop
out
mov
mov
int3
aas
fidivl
add
xchg
loop
stos
fsubrl
mov
xlat
sbb
dec
cltd
roll
mov
loop
xor
rcl
push
and
cld
jns
cmpsl
jmp
and
lahf
sbb
mov
icebp
inc
adc
mov
adc
xor
pop
sbb
dec
push
jmp
push
inc
mov
punpckhwd
sub
jbe
xor
ss
call
inc
das
xor
add
shlb
shr
pop
add
xchg
xchg
ret
je
cmp
adc
dec
xchg
or
and
lret
push
sub
cli
push
jp
inc
mov
imul
fisttpl
mov
addr16
aad
jl
popf
in
xlat
mov
xchg
xchg
cmp
or
sbb
arpl
imul
imul
cmpsl
lock
stc
xchg
or
ret
je
lock
add
pop
adc
pop
lret
data16
lret
ficompl
xor
cld
in
jb
dec
cvtps2pd
jo
lds
sarb
in
aam
push
mov
push
out
or
add
sbb
dec
mov
jge
dec
je,pn
sub
loopne
push
lret
mov
mov
jl
sub
inc
mov
ljmp
cs
repnz
sub
in
pop
pop
inc
in
cmp
aam
cmp
pop
loopne
aad
scas
aaa
inc
xor
fs
mov
xchg
fwait
push
mov
imul
jecxz
xor
inc
mov
dec
aam
popf
add
movsb
xor
das
dec
fs
jp
mov
stos
pop
mov
rolb
outsb
sbb
cmp
nop
scas
mov
notl
sbb
cmpsl
ret
mov
jo
xor
dec
int3
dec
add
outsb
cmp
in
dec
lahf
popf
ljmp
cmp
jb
test
js
mov
std
fcomip
mov
loop
je
bound
adc
jg
bound
test
rcll
ljmp
divb
push
sbb
push
jmp
sbb
ljmp
add
pop
dec
test
shlb
je
mov
jmp
int3
stos
stos
or
cltd
inc
mov
sbb
mov
sbb
push
pusha
mov
adc
sub
or
cwtl
mov
inc
cmp
push
imul
xchg
jns
arpl
pop
adc
cmpsb
in
or
ss
push
jnp
movsb
ljmp
dec
dec
mov
push
inc
lahf
push
mov
mov
mov
push
sub
aam
push
sbb
cmp
cmpsl
aam
roll
mov
fisttps
jbe
dec
ss
adc
icebp
das
pusha
dec
fnsave
insb
xor
pop
mov
xor
cmpsb
jg
push
stos
shl
andb
out
sub
mov
jl
pop
or
jne
sub
fstl
or
orl
pop
fisttpl
lcall
mov
jnp
and
scas
sahf
dec
das
push
lods
je
jge
cmpsb
inc
or
adc
pushf
cwtl
divl
adc
cmp
xchg
jecxz
mov
sbb
je
dec
leave
push
or
fldenv
jae
sbb
jle
xchg
ds
xor
rcrl
push
pop
sbbb
xor
jo
or
js
pushf
pop
fisttps
js
lods
les
fists
outsl
daa
sarb
lcall
add
jl
bound
fwait
or
or
mov
dec
inc
nop
iret
sar
and
pop
fcoms
mov
mov
adc
scas
jl
enter
shl
sbb
sub
dec
pop
aad
push
scas
ja
sarl
push
add
mov
jnp
int3
in
repz
mov
sub
insb
outsb
js
adc
test
rorl
stos
push
shll
mov
arpl
loop
mov
nop
test
movsl
or
push
push
cmc
vcvtps2pd
cmp
ret
mov
jbe
cltd
test
cli
mov
jecxz
adc
cs
push
mov
cltd
insl
add
jnp
mov
dec
inc
and
jno
shrl
push
or
mov
test
inc
pop
mov
subb
mov
cmpl
shr
aaa
xlat
dec
pop
cmp
adc
sub
xor
xchg
dec
jae
add
pop
lods
sub
dec
mov
mov
adc
mov
add
data16
movsl
ja
mov
movsl
add
icebp
push
dec
lods
pusha
push
mov
cmp
xor
and
mov
sbb
cltd
xchg
jne
jbe
ljmp
in
call
into
pop
add
cmp
pop
sbbb
inc
or
push
gs
loopne
inc
cmc
loop
fcomps
repnz
add
push
or
and
xor
mov
xchg
sub
inc
fldl
fs
and
cmpsl
xchg
or
pop
loop
dec
div
mov
jbe
cmpsl
adc
enter
mov
push
aad
adc
push
imul
inc
fld
fdivrs
enter
pop
mov
push
nop
jno
inc
mov
adc
mov
mov
mov
adc
xor
sti
cmp
jmp
mov
dec
cmp
shll
inc
fwait
rcll
js
daa
jmp
stc
pop
sub
xor
adc
mov
int3
movsb
into
mov
or
and
sub
or
sbb
mov
addr16
and
pushf
and
dec
or
push
mov
cmpl
mov
push
sub
mov
bound
mov
test
pop
push
shlb
stc
sbb
inc
out
push
aas
dec
xor
fcmovnu
pusha
lcall
repnz
mov
pushl
int
cwtl
ljmp
call
or
mov
mov
aaa
lahf
jmp
dec
outsl
jne
lds
sbb
leave
ja
xchg
shrl
out
xor
jle
and
mov
aad
fs
clc
sub
push
jbe
in
cmpsb
sahf
xor
out
shl
adc
add
test
jae
mov
mov
sbb
out
lret
sub
fsubr
data16
or
je
mov
test
dec
cld
bsf
shlb
xor
mov
sub
fstps
cmp
movl
insb
sbb
into
inc
rcrl
iret
iret
adc
fsubl
adc
bound
scas
and
jns
outsl
add
jecxz
imul
std
push
bound
and
sti
std
aas
lret
mov
xor
out
hlt
scas
movsl
dec
jo
xchg
pop
aad
pop
mov
cld
jp
out
pop
add
push
jo
mov
cmp
ret
inc
sahf
sub
dec
adc
popa
dec
sub
mov
cmp
jnp
in
pusha
jbe
mov
mov
icebp
inc
sub
jb
jae
test
call
orb
or
pop
sub
dec
ficompl
mov
xor
or
xchg
or
shlb
pop
out
pushf
test
fs
jbe
push
jb
sbb
cmpsl
jns
in
arpl
mov
aam
sbb
mov
mov
xorb
or
lahf
or
push
lods
xchg
mov
cli
addr16
lds
push
lcall
adcl
cli
pusha
dec
sbb
popf
aas
dec
divb
inc
push
xorl
int3
push
loope
clc
fisttps
and
xor
dec
mov
jbe
cs
pop
jae
and
xor
mov
add
psubsw
mov
lea
or
lret
xor
stos
mov
dec
mov
idivl
je
jb
hlt
mov
or
cmp
mov
lahf
mov
dec
or
mov
sahf
test
xor
mov
jb
mov
xchg
out
mov
scas
gs
adc
and
repz
imul
jmp
push
adc
js
in
and
mov
pop
fwait
pop
mov
scas
sub
sarl
jnp
jge
mov
push
add
cmp
xchg
clc
adc
fidivl
cmp
inc
mov
lea
js
add
fidivrs
push
sub
pop
jge
sbb
inc
inc
rcrb
inc
xor
xchg
mov
test
push
add
arpl
out
in
push
icebp
icebp
jnp
jbe
mov
stos
dec
imul
pop
imul
aaa
shll
fsubs
fildll
outsb
dec
nop
push
add
push
jbe
popf
cmp
ret
negb
mov
pop
mov
and
mov
add
cmpb
cwtl
icebp
xor
xchg
cmc
push
shll
and
mov
pop
push
xchg
arpl
lahf
mov
ret
mov
pop
scas
es
fdiv
out
mov
xchg
js
call
pop
fistpll
cs
or
xchg
pusha
sub
daa
and
push
pop
xchg
in
stos
xorb
push
stc
and
dec
push
inc
pop
xor
sbb
inc
stos
mov
xchg
cltd
out
loopne
jne
inc
bound
adc
dec
ffreep
rcr
mulb
cmp
lret
mulb
aas
push
bound
cmpsb
outsb
aas
inc
xor
imul
inc
lea
jbe
jecxz
inc
fbstp
dec
sub
mov
iret
dec
pusha
mov
in
fdivr
mov
mov
loope
call
cld
dec
into
enter
jle
push
sbb
sbb
push
ret
jnp,pn
pushf
push
push
cwtl
movl
sbb
mov
bound
fmuls
xorb
pop
cmp
sub
push
aam
dec
sahf
mov
inc
leave
stos
jb
mov
and
push
movsb
mov
add
and
cltd
scas
movsw
xchg
imul
popl
lahf
inc
inc
adc
add
xchg
es
fidivrl
pop
shl
repz
aad
jae
sub
inc
jle
push
stos
pop
pop
repz
push
inc
mov
mov
pop
mov
shll
addr16
test
ss
test
arpl
jbe
decb
sub
mov
inc
xlat
or
or
jae
mov
pop
rolb
mov
or
imul
lcall
add
add
or
sbb
nop
mov
or
dec
dec
sbb
idivb
std
enter
es
jecxz
aam
push
mov
fistpll
and
scas
bound
jo
jnp
pop
sub
decl
ds
xchg
pop
mov
enter
or
add
sub
inc
jl
push
in
lods
and
lock
pushf
lcall
int3
sarl
pop
popa
test
pop
mov
cmp
cwtl
imul
push
mov
sbb
push
mov
pop
xchg
rorl
lods
outsb
cmp
fbld
sbb
xor
jbe
dec
xchg
mov
jecxz
scas
xor
jo
clc
sti
addl
cmp
dec
stc
mov
out
jmp
and
std
iret
dec
push
mov
xchg
daa
or
filds
cmp
lret
lcall
jno
mov
and
shr
mov
notb
pop
jns
fisttpl
stc
bnd
cmp
and
mov
jmp
dec
je
push
popw
pop
jmpw
hlt
cmpsl
outsb
adc
mulb
div
sbb
repz
loopne
mov
jle
imul
adc
xchg
fsubr
xchg
pop
rcll
xlat
ret
sbb
add
rcr
das
sahf
shll
and
and
mov
gs
jns
sub
testb
data16
in
xchg
cs
outsl
jle
dec
sbb
pusha
or
xchg
pop
outsb
cmc
dec
pop
outsb
adc
dec
mov
inc
add
arpl
xchg
dec
arpl
add
out
add
mov
in
pop
mov
cwtl
xor
xchg
adc
fwait
add
and
loope
mov
pop
xchg
xlat
imul
test
inc
cwtl
int
mov
fmull
mulb
pop
in
in
adc
dec
iret
jecxz
pop
mov
sub
dec
push
aad
add
call
rcl
push
xor
psadbw
xorl
bound
xor
xchg
sub
ja
jbe
insb
leave
add
push
and
stc
or
mov
mov
pop
xchg
jb
mov
cltd
rcll
cmp
loopne
jp
pop
into
sub
sbb
in
aad
jg
out
dec
adc
in
jl
dec
dec
mov
std
test
mov
push
pop
inc
cmp
rcrb
push
add
adc
stos
in
pop
out
sbbb
mov
ret
outsb
lret
dec
xor
cmp
adc
out
js
fidivl
mov
out
push
aam
pop
clc
out
add
xchg
ljmp
movb
addr16
int3
jg
ja
fbld
mov
std
arpl
sti
cmp
mov
pop
cmp
mov
or
pushf
stos
cwtl
in
sub
xchg
aam
pop
mov
adc
and
dec
xchg
or
mov
and
jecxz
loopne
xchg
lods
sub
sub
sar
inc
xchg
dec
or
push
gs
jmp
fistps
ror
xchg
test
enter
mov
and
mov
jbe
movsl
test
stos
loope
inc
clc
adc
insl
cltd
call
int3
repz
jmp
clc
out
fistl
jmp
jmp
mov
fisttpl
sub
cltd
sbbb
cs
in
mov
xlat
pop
cmc
cmc
mov
ja
push
add
iret
cmpsl
icebp
rorl
shll
movsb
jno
es
inc
adc
adc
add
dec
xor
push
adc
rcrl
xor
aam
sahf
clc
sub
call
cltd
sub
push
jge
jnp
cmpsl
jge
sbb
popf
ret
pop
add
insl
xchg
pushf
xchg
popa
adc
cmpsw
ljmp
pop
sub
mov
mov
mov
xchg
jb
sbb
cmpb
aas
adc
ljmp
mov
xor
and
stos
xor
jno
mov
lcall
out
js
and
inc
fwait
xor
lods
inc
sahf
mov
icebp
fistpll
fstps
pop
cmc
mov
sarl
pop
je
cmp
jge
pop
iret
jns
data16
fmull
mov
push
jnp
into
pop
ret
in
fdivrs
jl
or
push
dec
inc
lds
sbb
shl
cmpsb
xchg
nop
inc
sbb
cmp
out
aam
cmp
add
call
inc
ret
mov
test
aas
mov
ljmp
icebp
call
lahf
popf
jg
jmp
fs
insl
in
dec
fstps
or
sbb
jp
cmp
scas
test
push
shll
ficomps
push
mov
cmp
adc
fisubl
std
lret
sahf
or
rcrb
sub
pop
adc
leave
lock
cmc
cmp
cli
ljmp
out
xor
add
into
ret
mov
icebp
xor
sahf
fwait
dec
test
lods
push
sub
sub
xchg
movsb
jns
cli
xchg
mul
lock
int
jb
outsl
mov
inc
xchg
xchg
sarl
sbb
rorb
push
ret
in
mov
aaa
mov
adc
or
insb
je
cmp
cmp
pop
mov
pop
pusha
mov
idivb
cmp
lret
rorl
adc
push
dec
loope
das
mov
sahf
sbb
jecxz
adc
pop
cltd
sbb
pop
cmp
loop
into
sub
push
in
fsub
fs
mov
pop
pop
jb
or
sub
add
popf
sbb
mov
mov
mov
and
fmull
xchg
test
out
shlb
fidivrl
int
lock
lock
int
fwait
mov
pop
movsb
cmp
icebp
dec
data16
jo
cmpsb
sub
scas
mov
xchg
pop
cmp
addr16
lds
nop
cmp
fistps
addr16
jl
and
jne
aad
fisttpll
dec
dec
adc
mov
push
ja
pop
div
filds
xor
outsl
inc
les
subl
sti
xchg
adc
lock
out
push
sarb
daa
push
fdivr
lahf
sub
pop
sbb
xchg
jl
or
add
add
mov
cwtl
int
inc
jno
icebp
pop
adc
cmp
sbb
adc
cmp
sarb
sti
stos
repnz
ss
xor
jae
ds
or
aas
fmull
xor
imul
data16
dec
out
out
xchg
xchg
push
mov
pop
out
jb
xor
lock
sbb
push
cmpsb
mov
invd
jbe
adc
jne
in
jl
mov
cld
stos
scas
jae
sub
cbtw
xor
loop
push
in
enter
call
scas
mov
cmp
sub
pop
hlt
out
pop
adc
in
push
adc
fadds
pop
add
fidivrs
cbtw
cmp
shll
jae
sub
inc
adc
xor
lahf
seta
das
dec
imul
fwait
stos
in
int3
adc
pop
test
lahf
and
jb
push
lret
mov
shl
outsl
lahf
cmp
push
scas
inc
roll
cltd
xor
push
iret
shlb
outsl
fbld
pop
aad
insl
ja
add
push
mov
push
jo
push
sbbl
push
fistpll
xor
pop
movsl
mov
inc
lcall
and
fiadds
jmp
xchg
lods
mov
adc
add
into
js
xchg
out
push
mov
add
orb
es
sti
out
cmpsb
popf
test
push
pusha
or
sub
cmp
clc
ja
xor
out
in
jno
frstor
movsb
pop
pop
pop
imul
mov
or
addr16
mov
adc
orb
orb
jno
sub
mov
jne
dec
cmp
dec
inc
rcrb
jb
ljmp
mov
mov
mov
or
sbb
pop
xlat
int
jl,pn
adcl
or
xor
cmp
push
imul
or
cmp
cmpsb
ss
push
scas
pop
push
cmp
mov
addr16
cmpl
stos
aam
int3
cmp
mov
pop
mov
insb
pop
ret
xor
mov
scas
dec
push
jbe
ret
adc
dec
jnp
imul
adc
sbb
inc
jno
sti
lods
dec
aad
das
dec
push
fs
in
bound
adc
jbe
add
arpl
orb
sarl
roll
movsb
outsb
adcb
mov
divb
jne
pop
lret
jbe
push
sbb
aad
xchg
in
lock
jns
daa
insb
test
mov
jnp
insl
jle
mov
or
dec
push
sbb
mov
pop
test
outsl
pop
lds
roll
in
or
add
push
cli
ret
mov
pop
mov
inc
ret
aam
inc
xor
cmpb
icebp
test
sbb
out
iret
js
aas
fiaddl
stos
mov
insb
jmp
push
jmp
lods
sub
add
in
push
xor
mov
sub
movsb
fistps
mov
jno
pop
lea
subb
cmp
je
shlb
cld
pusha
adc
dec
cs
and
jecxz
mov
sbb
mov
push
push
daa
dec
aad
adc
mov
jmp
cmp
je
cmp
or
dec
and
sbb
xor
mov
xchg
setp
mov
xor
div
inc
xchg
cmp
jp
sub
popa
and
enter
mov
loopne
jge
cmp
test
jge
idivb
pop
sub
adc
pop
and
jmp
insb
clc
iret
mov
push
int
mov
xor
lds
mov
push
popa
daa
mov
push
add
mov
sub
ljmp
in
scas
sbb
mov
loop
push
subl
xchg
fs
adc
nop
mov
jl
popa
jmp
inc
lock
popf
es
mov
andl
cmpsb
daa
fucomip
jecxz
cmp
jnp
outsl
bnd
lret
dec
cld
mov
mov
cmp
out
pop
mov
cmp
orb
jne
pop
inc
jle
in
push
out
repz
ret
pop
sbb
hlt
pusha
inc
repz
cltd
mov
xor
fnstsw
add
out
int
scas
inc
push
push
mov
leave
xchg
iret
sbb
sub
movsl
cmp
xor
dec
ss
clc
add
push
orl
mov
add
jle
mov
js
xor
cmp
inc
jl
jo
or
mov
adc
adc
outsb
jb
adc
dec
cmp
or
leave
inc
mov
inc
imul
pop
jp
js
sbb
sub
push
ja
xchg
mov
inc
shll
or
mov
sarb
call
shl
mov
js
fistps
adc
aaa
imul
push
cli
and
xchg
xor
mov
lea
adc
fimull
push
sbb
fs
mov
out
shll
inc
inc
movsl
lods
or
lcall
cmpsl
inc
data16
sub
pop
xchg
xor
pop
popf
leave
seto
cmp
adc
xchg
lea
rcrb
repnz
mov
cmp
sub
cs
xchg
lfs
out
sub
xchg
aas
dec
mov
pop
shufps
outsl
xlat
xor
jo
push
in
xor
cmp
mov
icebp
fistpl
fs
andl
push
mov
lahf
or
mov
mov
rcll
mov
popa
adc
test
arpl
sahf
add
mov
xchg
jno
test
xor
xchg
push
mov
push
add
popa
dec
cmp
test
dec
pop
out
inc
jbe
inc
jmp
add
aas
sbb
repnz
rclb
and
or
pop
test
jnp
mov
outsb
mov
cltd
jns
xor
sahf
push
xchg
clc
jecxz
aaa
jno
dec
or
loopne
jle
cli
hlt
fucomi
sbb
scas
push
ja
rcr
push
mov
mov
outsb
xchg
test
dec
xor
add
sbb
add
enter
adc
lods
mov
push
and
jle
jne
dec
mov
lahf
mov
jno
mov
fists
daa
shll
sub
leave
sbb
enter
adc
inc
repnz
test
test
fcomi
lcall
or
push
jo
inc
es
sub
xchg
daa
dec
mov
cmpsl
or
mov
fucom
test
mov
int
mov
stc
xor
popf
add
je
xchg
ret
fisttpll
mov
or
pushf
rcll
mov
pusha
sub
mov
sbb
sti
outsl
mov
scas
lds
adc
mov
jge
mov
jbe
push
add
fs
xchg
fistpll
sub
stos
cld
hlt
or
out
test
dec
sbb
dec
js
mov
mov
or
cwtl
xor
or
mov
push
rcll
aad
shr
inc
shrl
mov
jae
fneni(8087
dec
dec
movsl
stc
ret
push
pop
fwait
pop
xor
and
add
and
pusha
jle
mov
or
xchg
hlt
mov
in
aam
add
pop
ss
mov
pop
inc
dec
vpcmpeqw
fdivrl
inc
pop
sti
mov
cmp
lcall
loopne
aad
jbe
cmp
adc
cwtl
stos
repz
push
pop
sbb
pusha
cmp
or
aaa
jno
dec
inc
xchg
mov
cmpl
ja
push
shl
cltd
shll
orb
scas
adc
int3
fsubrs
loope
mov
popa
sbb
cmp
and
push
test
inc
enter
push
clc
and
dec
push
insb
aas
lods
sub
pop
cltd
lods
std
rorb
jl
stc
jmp
sbb
imul
arpl
mov
test
aas
test
push
and
enter
in
popa
xchg
push
fistl
in
outsb
mov
sbb
les
jl
pop
sub
push
mov
fisttps
pop
aaa
sti
sub
pop
or
mov
pop
inc
fstps
push
inc
add
inc
dec
stc
push
ret
jae
add
in
dec
into
cmpsb
jne
mov
out
fcompl
mov
push
mov
adc
add
cmp
mov
sbb
mov
xor
xor
and
daa
inc
testl
fdivl
idivb
pop
inc
jb
push
pop
out
jl
push
dec
popf
dec
outsl
pop
jg
and
pop
xor
mov
shrb
inc
push
in
lds
repz
stos
mov
adc
jne
inc
psrld
mov
jg
xchg
test
pop
and
dec
and
cmc
jecxz
jnp
sub
enter
xorb
cmp
imul
sub
sbb
ds
cmc
in
sub
jns
arpl
fcoms
cmc
add
icebp
or
jl
mov
js
movsb
mov
sub
in
lods
sbb
and
inc
ret
sub
lock
stos
repz
cld
lret
and
add
in
std
pop
scas
dec
mov
or
mov
xor
dec
aad
loopne
shr
cmpsl
cmc
imul
mov
xchg
adc
ds
or
cwtl
int3
shl
jno
scas
or
mov
lahf
mov
xor
and
rcll
das
pop
add
mov
call
std
lods
xchg
movsb
out
mov
pop
add
cmpl
xchg
cmovae
xor
sahf
or
leave
push
add
incb
scas
dec
xchg
ja
cmp
inc
loopne
arpl
enter
or
push
loop
mov
out
rcll
std
mov
int3
arpl
ja
inc
loop
mov
mov
pop
test
jmp
lcall
outsl
sbb
clc
ja
pusha
mov
sbb
fmuls
xchg
xor
ss
xchg
xlat
rcl
insb
add
movsl
mov
jg
icebp
cmpsl
push
out
movsl
mov
pusha
inc
xchg
push
jmp
mov
add
cld
sar
mov
ret
call
nop
push
lds
bnd
test
es
pop
ret
aad
lret
cmp
insb
aas
scas
push
or
mov
jecxz
hlt
movsb
and
addl
pop
pmulhw
loopne
adc
xor
sbb
jmp
jno
push
sbbb
les
sbb
and
cmp
or
in
sbbb
cmp
imul
xchg
jbe
sub
inc
clc
nop
jno
mov
ja
dec
dec
das
push
or
out
test
dec
mov
push
inc
lret
cmc
mov
fxch
push
out
mov
ror
mov
stc
push
cmpb
lods
sub
inc
daa
stos
sbb
pop
into
insl
xchg
stos
jecxz
cmp
out
lods
push
jb
lahf
xor
insb
or
fistps
gs
insb
out
dec
ret
lods
fsubs
in
inc
sub
adc
pop
add
adcb
mov
aas
stos
fldl2e
cmp
jecxz
or
push
push
notrack
repnz
mov
sub
ss
mov
cmp
mov
xchg
and
push
sub
dec
loopne
sahf
sahf
or
cmpsb
cmpsb
sbb
push
lods
push
or
imul
pop
mov
mov
xor
adc
push
bound
cmpsl
mov
mov
movsl
dec
shll
mov
int
push
outsl
mov
outsb
lret
lcall
add
mov
mov
adcb
cmp
aas
ds
or
mov
jp
cmp
xor
addr16
pop
test
and
mov
jmp
out
or
cld
sbb
rcll
mov
mov
sub
rclb
cmp
rcll
mulb
or
push
sbb
jmp
mov
insb
cwtl
and
or
cmpsl
adcl
pop
add
push
adc
sbb
sahf
subb
or
daa
cmc
popf
jbe
xor
xor
lcall
inc
or
pop
bound
jecxz
cld
ja
inc
jg
lahf
popf
enter
fisubl
lea
inc
mov
hlt
and
xchg
mov
add
mov
cmpsl
das
sub
popa
pop
movsl
and
mov
cs
cmp
in
push
js
xchg
cwtl
pop
mov
int
dec
int3
je
jnp,pt
dec
or
sub
or
popa
rolb
inc
shrl
outsl
jp
adc
stos
xor
push
movsl
xor
movsl
inc
stos
lret
jb
push
pop
frstor
sub
or
add
sbb
lahf
add
icebp
movsb
test
stc
or
xchg
adc
or
push
or
nop
ja
dec
addl
mov
xor
cwtl
es
je
pop
addb
fucomip
xlat
imul
punpcklbw
pop
idivb
mov
out
pop
xchg
push
mov
or
fnstenv
push
ret
bnd
xchg
jge
mov
inc
sub
gs
and
push
xlat
xchg
dec
xchg
insb
jne
out
dec
mov
rcr
iret
lret
lret
jle
arpl
jae
mov
sbb
shll
mov
sub
in
lock
fnstenv
push
add
testl
mov
inc
jle
sbb
fdivrp
bound
orl
xor
and
pop
shrl
mov
and
mov
jno
lret
addr16
adc
xor
sahf
jmp
sti
fidivs
xchg
and
aam
or
sub
and
jns
xchg
dec
inc
pop
jmp
jbe
mov
outsb
adc
and
cwtl
push
push
mov
pop
stc
inc
inc
or
popa
xchg
adc
jle
mov
add
adc
jg
mov
add
and
cmp
shrb
dec
cld
test
adc
out
jle
pop
xor
ret
xchg
inc
inc
iret
dec
ficompl
scas
stos
ret
push
xchg
add
aaa
das
test
pushf
iret
fst
ret
sub
pop
push
pusha
loope
jge
fisubl
and
mov
push
sbb
rol
sbb
mov
push
push
push
rolb
clc
ret
push
xor
rcl
push
and
mov
xchg
inc
insl
lcall
mov
clc
adc
lods
adc
xchg
sub
and
and
xchg
sub
mov
jecxz
movsl
rorb
rclb
pop
or
inc
dec
js
cld
repnz
scas
imul
icebp
cmpsl
in
fbstp
xchg
push
sbb
adc
push
mov
sub
xchg
jmp
arpl
sub
and
jno
jns
push
jl
xor
inc
stos
push
out
jb
lret
lahf
in
mov
fbstp
fsubrl
sbb
mov
xor
ret
xchg
sbb
loopne
jl
jbe
push
pop
push
sbb
pop
dec
pop
dec
push
int
dec
lcall
cmp
mov
pop
vmovhpd
hlt
ror
sub
fcomps
mov
bound
loopne
out
pop
lea
push
cltd
dec
sub
mov
jge
ror
mov
push
or
push
movsb
shlb
scas
loopne
movsl
out
push
xchg
xchg
out
adc
jecxz
testb
inc
popa
out
jne
mov
jns
pop
insb
sub
xor
repz
mov
lea
das
insb
adcl
daa
outsl
lock
xor
jne
clc
and
int
cmp
mov
lret
loop
sbb
mov
and
roll
dec
add
and
adc
add
or
jge
out
scas
xchg
rcll
inc
and
test
dec
xchg
lea
sbb
repz
mov
xchg
es
xchg
adc
jae
fs
cmc
testl
and
imul
mov
xchg
dec
lret
loope
daa
jge
inc
and
out
arpl
xor
push
push
insb
outsl
dec
ror
out
xor
call
pop
sub
and
pushf
adcb
adc
fidivrl
add
and
cmp
push
imul
js
mov
and
mov
ret
movsl
mov
sub
mov
inc
daa
and
rol
lcall
or
push
sub
inc
mov
inc
dec
dec
jle
pushf
popf
sub
lods
stos
hlt
push
lret
sub
or
enter
test
sbb
xchg
xchg
jmp
subb
sub
jb
inc
ret
cmpsb
pop
arpl
popf
shll
mov
dec
pushf
cmp
pop
and
mov
push
imul
nop
cld
in
imul
sub
sbb
pop
or
out
loop
ret
xchg
ljmp
ret
push
into
fidivs
lcall
jmp
mov
cmp
movsb
pop
or
in
inc
imul
das
dec
jno
or
sahf
subl
mov
cltd
jbe
sbb
into
fldt
or
dec
pop
sbb
inc
sbb
xchg
bsr
or
int
xchg
aaa
dec
inc
and
cltd
fcmove
mov
orb
xchg
mov
adc
shl
daa
leave
cmp
fmull
jbe
inc
fmuls
pop
mov
push
aas
data16
cli
lret
in
xchg
test
cld
adc
out
jb
cmc
mov
xchg
adc
adc
xchg
jb
mov
pushf
add
inc
sub
cld
int3
inc
mov
ret
cs
xorb
mov
jo
mov
orl
add
mov
xchg
jns
shrb
test
aad
ret
mov
fs
mov
test
mov
outsb
cmp
lods
adc
xchg
cli
push
mov
sbb
enter
cld
push
add
fcmove
jno
addl
dec
int3
fiadds
icebp
les
xchg
cmp
mov
push
dec
jo
movsb
lcall
cmpsl
repz
mov
xchg
add
sub
push
mov
nop
jle
jmp
addr16
into
cmp
xchg
leave
and
dec
jne
ret
jg
adcb
cmp
popa
ss
mov
and
cmp
leave
adc
call
outsl
shlb
fcoml
dec
in
mov
mov
adc
xor
ret
fdivrs
cmc
lahf
ljmp
shll
int3
cmc
lea
dec
mov
adc
into
adc
pusha
dec
or
mov
mov
pop
addb
lahf
in
gs
sub
loopne
jae
pop
arpl
addr16
roll
gs
cmc
push
movsl
ret
repnz
sub
xchg
lret
xchg
pop
nop
iret
mov
scas
add
mov
add
shrb
or
add
nop
jns
popf
adc
and
or
sbb
data16
add
inc
push
insl
ja
fwait
ds
aas
xchg
xor
les
and
xlat
or
test
adc
push
inc
gs
push
stos
fmull
lahf
arpl
pop
pop
jnp
jns
popf
movsb
mov
add
push
outsl
adc
cmp
test
les
std
xchg
push
jmp
cwtl
adc
pusha
cmc
xlat
hlt
insb
sbb
mov
jbe
push
xchg
in
roll
dec
jno
fsubr
mov
xor
int3
stos
sbbl
adc
mov
cmp
lods
arpl
push
rclb
jnp
mov
fsts
mov
inc
jl
mov
cld
fnstenv
popf
adc
pop
lahf
das
sub
out
mov
pushf
je
addr16
xchg
ja
ret
les
adcl
and
out
shl
sbb
sub
in
sbb
xor
add
push
mov
cmp
and
xchg
xchg
sub
jno,pn
mov
loopne
mov
rcrb
shrl
mov
add
addr16
mov
pop
movsb
mov
movsl
rclb
sub
sub
arpl
in
push
icebp
in
push
into
repz
loope
in
sbbl
or
push
popa
jno
outsb
dec
out
test
or
pop
fcmovnb
lock
int
add
testb
test
scas
pop
adc
out
mov
shrl
xchg
leave
sub
and
or
or
cmpsb
hlt
jmp
orl
cwtl
inc
inc
mov
hlt
mov
outsl
int3
push
cltd
shr
int
or
mov
xor
je
icebp
dec
lods
xor
and
into
xor
lcall
pop
imul
mov
leave
pop
pushf
ficomps
imul
xchg
mov
push
dec
or
sbb
jno
mov
nop
addb
xor
mov
cmc
xor
push
pushf
sahf
ret
mov
lds
xor
insl
out
imul
xlat
scas
jge
xor
stc
pop
and
cmp
in
enter
in
push
adc
lret
mov
cmp
xchg
ss
pop
jbe
mov
cmpsl
out
and
add
sarb
leave
push
sub
out
pusha
scas
mov
enter
cmp
mov
xor
sar
xchg
addr16
loop
leave
mov
pop
push
lret
cltd
xchg
mov
or
inc
cmc
and
outsb
xchg
and
adcb
inc
xchg
pcmpgtb
call
jp
and
aaa
test
scas
outsb
inc
gs
outsb
xchg
xchg
cmpsl
fs
mov
mov
jp
mov
aas
pop
aad
push
stos
add
loop,pn
pop
fs
pop
xlat
and
dec
cmp
repz
mov
pop
lds
jge
popl
aas
popf
popa
fsubrp
push
fdivrl
pop
jo
adcb
movlps
or
pop
bound
lods
mov
mov
mov
sbb
dec
pushl
dec
jecxz
mov
cmpb
and
jns
gs
cmp
rorb
and
and
decl
aas
loopne
sbb
jge
adc
inc
xchg
in
mov
or
or
cwtl
add
add
adc
xchg
adc
dec
fucom
adc
mov
push
cmp
sbb
ret
push
das
scas
mov
add
adc
inc
pushf
pop
into
mov
sbb
int
push
mov
add
les
sahf
lahf
ret
mov
and
std
mov
xor
out
lods
int3
test
out
arpl
xchg
jl
mov
inc
ljmp
ja
push
call
dec
mov
add
bound
and
inc
out
in
dec
push
mov
es
and
sub
cmp
mov
into
jge
cwtl
mov
push
sti
call
test
mov
mov
sub
sarl
push
js
and
xlat
fs
mov
pop
inc
rep
adc
sti
int3
xorps
daa
sub
adc
popf
movsb
fldt
lock
jne
dec
sub
and
aas
std
dec
push
insb
adc
add
arpl
sbb
jne
pop
add
cmp
pop
cmpb
inc
fdivl
mov
dec
push
mov
or
fmull
add
pop
fstps
call
clc
call
add
rcrb
int
in
lds
lock
pop
fincstp
pop
jnp
inc
add
sub
dec
mov
xchg
aad
out
adc
imul
mov
lea
sub
ss
lret
adc
adc
xlat
dec
mov
xchg
aas
jmp
jle
sbb
adc
out
leave
mov
xor
out
fldenv
lret
stos
test
test
cmp
mov
loop
subl
mov
leave
push
jle
mov
aas
movsl
add
stc
leave
jns
xchg
mov
test
scas
sbb
mov
mov
lds
mov
repz
out
ret
sahf
sub
mov
adc
nop
stos
nop
push
inc
in
mov
add
sarl
mov
bnd
mov
jbe
mov
in
mov
jl
ja
popa
addr16
fdivrs
xchg
and
add
shlb
cmp
mov
xchg
pusha
fs
sbb
sarl
cli
xorb
xchg
sbb
push
xchg
add
hlt
pop
mov
adc
adc
jg
xchg
xlat
jb
or
jae
into
in
adc
xchg
and
fisttps
mov
cmc
pop
std
jne
xlat
cld
push
lock
mov
add
aas
outsl
pop
std
xor
aad
xlat
pop
test
pop
xchg
cmpsl
movsb
push
enter
movsb
adcb
bound
xchg
js
ret
mov
mov
xorl
icebp
push
loopne
mov
xchg
or
icebp
iret
sub
icebp
imul
mov
add
int3
and
nop
sub
jb
je
pop
pop
test
out
in
out
ljmp
cmpsl
insb
jecxz
movsb
outsb
data16
pop
mov
lahf
sahf
lea
pop
out
shrl
pop
mov
and
inc
push
movsb
sahf
mov
lock
push
xchg
jbe
and
aas
fwait
jne
dec
dec
imul
aad
shlb
jo
hlt
pop
mov
adc
in
cld
inc
push
pop
cltd
mov
rcr
xor
orl
fdivr
xlat
imul
jae
stos
cmp
dec
out
push
or
xor
ja
adc
cmp
push
sub
dec
adc
dec
pop
popa
stc
outsl
mov
pop
out
loop
xor
jecxz
popa
inc
shlb
repnz
xchg
pop
xchg
sbb
scas
xchg
gs
push
scas
bound
mov
jp
mov
inc
lcall
cmp
pushf
inc
popf
sbb
xchg
and
dec
jl
shrb
sti
sub
jl
in
jge
testl
jno
shll
jb
xor
notl
pop
pop
inc
test
and
or
lds
aam
add
test
sbb
aas
mov
out
adc
inc
add
and
push
push
jo
mov
fidivrl
rcll
mov
movsl
push
adc
mov
imul
repz
push
mov
jl
push
mov
fs
lahf
fildll
fldenv
fs
add
dec
out
sbb
loop
push
and
ss
xchg
rcr
pop
or
dec
xchg
xchg
dec
pop
imul
mov
out
push
leave
jb
cwtl
mov
es
add
mov
imul
pusha
push
out
mov
or
enter
ljmp
mov
inc
popa
mov
test
cmp
or
negl
xchg
adc
enter
push
push
inc
xor
jecxz
mov
add
cwtl
daa
sub
add
pushf
push
test
nop
sbb
test
push
hlt
std
mov
dec
lods
fists
or
neg
jge
ja
cmpsl
incb
xchg
mov
rolb
pop
jae
aad
jge
dec
fs
fisttpll
in
arpl
inc
mov
lahf
adc
sub
lock
cmp
pop
adc
call
bound
dec
out
mov
lahf
xchg
insl
movsb
fstpl
jo,pn
pop
inc
jecxz
inc
or
push
inc
xchg
sbb
add
gs
dec
call
clc
lds
pop
jmp
jnp
rcrb
addr16
orb
je
sub
scas
push
fmuls
sub
push
jae
mov
test
add
ds
sbb
push
clc
mov
cmp
addr16
rorl
sbb
in
mov
dec
lock
shrb
or
ss
stos
out
popf
addr16
imul
mov
mov
mov
fxch
popf
push
scas
loopne
mov
xchg
or
mov
rorb
ret
adc
pusha
mov
xchg
xlat
sub
jecxz
pop
pop
pop
aam
pop
inc
or
sub
mov
ret
adc
lods
adcb
push
mov
jae
popa
add
shll
mov
and
imul
xchg
sub
filds
adc
out
pop
ljmp
call
push
loop
fwait
sbb
stos
or
shll
fdivr
and
mov
push
aad
lahf
lods
in
incb
cwtl
mov
in
cld
xchg
sbb
mulb
dec
in
push
sahf
sub
mov
jo
outsl
aad
addr16
loopne
aam
xor
xchg
imul
push
or
mov
mov
sbb
mov
pop
fwait
popf
test
int
adc
data16
dec
fs
adc
cmp
and
fwait
ret
call
arpl
pop
ficoml
mov
cmpsl
int
scas
hlt
imul
popf
inc
int
pushf
sarl
adc
mov
orl
popf
fdivr
dec
test
mov
dec
ds
xchg
icebp
loopne
ss
cmp
sub
dec
enter
sub
mov
pop
or
mov
daa
jge
mov
popa
scas
dec
cmpsl
ljmp
shll
les
jae
mov
mov
xor
clc
fucomi
push
rcl
pop
mov
inc
dec
movsb
push
orb
add
sbb
xchg
cltd
push
jecxz
in
cld
mov
in
cwtl
mov
fsubl
mov
mov
cltd
andl
xor
push
xchg
mov
add
and
cmpb
nop
shlb
push
sub
add
in
mov
inc
fbstp
shlb
fwait
cmpsb
fs
mov
adc
ss
mov
shll
cmc
xchg
pop
andb
int
iret
mov
lds
mov
imul
xor
aaa
pause
mov
add
jle
dec
insb
cwtl
out
cltd
fistpll
mov
popa
cli
scas
outsl
jno
sub
dec
in
aaa
dec
stos
insl
std
push
dec
ret
add
data16
out
jg
xchg
and
mov
inc
xor
cmc
and
das
shrd
cmp
and
cltd
sbb
mov
sub
jmp
sub
pop
xchg
mov
and
pop
test
mov
mov
inc
pop
in
push
scas
fwait
mov
dec
xor
xchg
rclb
out
cmp
or
jae
popf
stos
push
adc
cmp
orl
jns
add
add
adc
xchg
cli
sub
sub
int
fstps
pop
icebp
pusha
cmp
std
sbbb
clc
loopne
stos
cmovs
aaa
adc
mov
gs
fidivrs
dec
cmp
jle
js
pop
mov
dec
addl
xchg
mov
insl
xor
aaa
repnz
jo
repz
insl
fldenv
in
dec
sub
adc
sub
aas
sub
push
jge
xchg
jb
cmp
jg
mov
out
pop
out
lret
jae
daa
dec
popf
and
xchg
arpl
push
xchg
lea
mov
or
stos
data16
sub
repnz
cmp
inc
clc
push
push
mov
jl
imul
mov
or
iret
jp
cmp
orl
inc
loopne
jb
inc
jno
or
pop
mov
push
pop
js
cmpl
fcoml
xor
loope
sbb
push
and
enter
pop
fstpt
outsl
insb
push
cmp
xchg
pop
dec
push
sub
dec
ja
sbb
sbb
and
mov
jmp
dec
lahf
nop
xor
in
scas
jle
sub
or
dec
or
cmp
jno
je
add
and
das
aaa
mov
inc
cwtl
inc
sub
push
in
mov
mov
adc
add
mov
sub
xor
cmpsb
ret
in
popa
xchg
jbe
popa
std
in
jb
push
inc
jnp
dec
clc
add
incl
mov
mov
ret
pop
sbb
and
xchg
xlat
add
out
add
or
dec
lret
jmp
je
pusha
lea
insb
add
testb
pop
test
or
pop
sbb
cmc
lods
jb
xchg
cs
rclb
dec
sub
xorl
jo
pop
mov
ss
and
enter
lock
xor
out
xchg
and
idivb
scas
xor
xchg
stos
push
in
aaa
or
sarl
xchg
data16
fidivl
and
fsts
out
jb
jg
loopne
pop
inc
lret
inc
ficoms
call
popa
lcall
xchg
fstpt
stos
xor
aam
int3
and
fbstp
ss
adc
lods
sbb
inc
test
mull
int3
pushf
adc
popf
push
insb
xchg
insb
push
inc
lds
cs
pop
dec
std
cmc
aas
lret
sub
inc
es
mov
push
daa
daa
sub
jge
pop
test
push
in
mov
mov
jmp
scas
pop
rolb
std
or
and
xor
cld
inc
xor
in
inc
test
fnstenv
movl
add
mov
hlt
jp
arpl
cwtl
mov
jnp
mov
jo
sub
push
test
add
pushl
in
lods
cmp
xchg
imul
xchg
orb
inc
sarb
fstpt
pop
mov
in
jae
jl
adc
adc
push
std
mov
mov
cs
mov
pop
imul
test
hlt
das
aaa
cmp
les
ds
pop
push
xchg
test
pusha
sbb
pcmpeqb
lret
push
addr16
mov
call
hlt
daa
mov
std
lock
sub
cld
jl
cmpsl
gs
test
jmp
mov
xchg
sbb
xor
inc
push
rcl
in
push
sbb
cmp
mov
mov
lods
cmpl
ret
clc
or
xor
push
and
sbb
push
cli
adc
jbe
inc
xlat
mov
sbb
sbb
push
popf
cli
mov
sbb
mov
jge
xor
mov
sub
outsl
sub
sbb
stos
mov
fildll
in
sub
xor
es
fstpt
insl
fadd
inc
push
xchg
and
xor
xchg
push
je
addr16
outsb
jb
jae
and
dec
pop
xor
lret
mov
rol
dec
aas
mov
mov
test
push
xor
cmc
sbb
ret
and
mov
jnp
jp
cmp
push
or
mov
mov
sbb
sar
pushf
in
popa
mov
in
or
lahf
push
and
jmp
jmp
inc
mov
or
mov
test
mov
dec
inc
loop
mov
jmp
pop
jmp
mov
or
pop
mov
cmp
xor
sub
repz
cli
xor
daa
xor
fidivrs
jmp
dec
cli
mov
stos
hlt
pop
sarl
loope
xchg
js
ret
adc
pop
mov
xchg
push
xchg
scas
sbb
fdivp
xchg
push
mul
scas
in
mov
sahf
dec
or
pushf
repnz
movsb
test
lods
jp
pushf
mov
sbb
inc
add
sbb
pop
push
push
mov
enter
addr16
mov
mov
jmp
mov
sti
fs
mov
insl
xor
std
mov
inc
xchg
scas
fbld
jle
cli
fs
mov
cltd
and
push
jmp
mov
into
lcall
cltd
cmp
mov
mov
push
sbb
push
inc
jmp
sub
pop
push
es
cmp
push
out
loop
incb
xchg
gs
dec
jae
outsl
aam
repnz
pop
sub
mov
pop
push
xchg
ret
push
mov
inc
movsl
jae
sbb
xchg
popf
sub
aam
rcr
push
add
add
add
fistl
and
data16
and
jbe
data16
mov
das
leave
mov
push
or
mov
in
dec
in
inc
frstor
icebp
popf
xor
inc
mov
mov
test
push
pop
fsubrl
ss
loopne
rolb
sti
add
adc
loopne
ljmp
sub
cmc
xchg
xor
pop
xchg
mov
and
inc
mov
aad
mov
test
das
mov
das
mov
in
push
loope
or
fistps
push
pop
and
and
clc
dec
dec
mov
dec
jo
xchg
cmp
sar
add
mov
pop
cs
sbb
adc
jmp
imul
fnstsw
insl
dec
dec
insl
push
sub
out
fs
lock
and
roll
mov
sbb
in
mov
test
cmpsl
mov
adc
cmp
inc
cmp
mov
xchg
push
push
or
aad
and
adc
ret
shl
notb
mov
aaa
stos
decb
cli
adc
xchg
sub
jb
ss
adc
loop
test
frstor
fmuls
add
push
sub
ss
pop
loopne
les
jmp
mov
ljmp
movsb
mov
mov
lds
inc
cltd
push
das
mov
push
call
arpl
adc
add
push
fnstsw
popa
inc
orl
out
vrsqrtss
cmpsl
test
and
jne
loop
sbb
push
add
add
jmp
test
cmp
loopne
pop
shll
or
mov
and
jno
clc
idivl
jge
nop
dec
mov
sbb
mov
push
in
inc
dec
je
inc
mov
ja
in
mov
pop
mov
movsl
inc
arpl
subb
movsb
es
pop
push
push
push
stos
xor
xor
and
mov
dec
insb
cs
mov
arpl
and
repnz
pusha
or
fs
cmp
mov
fbstp
xor
in
mov
ljmp
subb
push
addr16
push
sub
popa
xchg
je
pop
lcall
jnp
cmp
pop
movsl
or
orb
push
adc
mov
test
or
jne
mov
outsl
popf
add
xor
in
add
mov
and
shll
pop
pop
jmp
sbb
stos
popf
cmp
cmp
xchg
cmpsb
push
mov
jbe
in
mov
pop
inc
xor
xchg
fmul
mov
shr
iret
dec
jnp
cli
xchg
cli
xor
decb
dec
pushf
es
call
pop
fstps
les
arpl
xchg
pusha
dec
bound
mov
adc
cmp
adc
adcl
hlt
and
dec
addr16
xchg
test
sub
hlt
jnp
shl
jp
dec
sub
adc
jne
out
xor
sub
mov
aas
out
rol
inc
pop
xor
cmp
aaa
lock
push
lods
push
lret
mov
adc
jp
sbb
test
lods
incl
outsb
mov
lods
fisttps
dec
inc
popf
adcb
push
push
jmp
fnstcw
idiv
outsb
xchg
mov
cmpsb
je
mov
rcrb
sub
pop
push
add
sub
aaa
shrb
or
and
adc
js
push
pop
push
daa
adc
sub
gs
or
dec
fmul
lahf
std
outsb
rorl
je
mov
or
stc
push
dec
pop
loopne
fs
lock
pop
test
in
mov
arpl
repz
in
jb
cmpsl
cs
fisubrl
dec
adcb
mov
push
cmpsl
movsw
pushf
pop
push
fs
jp
jmp
mov
into
mov
shll
repz
xor
lcall
jns
xorl
adc
sahf
adc
repnz
outsl
cli
xor
call
lods
jns
add
xchg
dec
imul
movsb
movsb
hlt
jl,pt
dec
push
sbb
add
mov
mov
pop
out
shll
rcrl
cmpsb
push
scas
stc
inc
in
cwtl
push
xchg
outsl
negl
insb
test
test
gs
repz
sbb
mov
mov
sub
std
and
push
push
cmpsl
xchg
push
push
cmp
rdmsr
fsubs
lea
aas
inc
or
cmpb
mov
dec
loop
arpl
mov
sahf
in
inc
push
mov
push
and
push
mov
mov
cmp
push
jg
lret
mov
push
es
sub
fdivl
cmpsl
je
pop
push
sub
test
jg
gs
cmpl
mov
test
xor
andb
xchg
cli
fdivrs
xor
xchg
and
pop
push
frstor
out
push
mov
mov
cmp
sarl
fsub
mov
cmc
gs
xchg
outsb
push
dec
leave
mov
jo
call
mov
rorb
mov
or
inc
add
xchg
test
pop
ret
cli
sbb
xor
jge
inc
mov
aaa
sti
scas
mov
ficompl
cmp
std
popa
xchg
jno
lret
sub
mov
jecxz
fdivrs
xlat
adc
adc
fstl
stos
loope
mov
fdivr
xor
pusha
xchg
clc
cli
jbe
insb
nop
lock
enter
add
or
mov
mov
jo
dec
in
xchg
xchg
rorb
cmp
pop
inc
sub
js
add
sub
lret
push
mov
sub
mov
adc
xchg
lock
xor
data16
push
xor
stos
out
cmp
inc
jecxz
inc
xor
scas
bound
mov
push
test
out
loop
adc
gs
stc
shll
sub
loopne
sbb
or
inc
push
adc
popl
mov
out
sub
inc
mov
addb
mov
adc
jecxz
sub
mov
add
cmp
xor
shrl
or
gs
cmp
lea
pushf
clc
in
push
jnp
lock
fidivrs
mov
or
inc
inc
popf
nop
inc
jne
cmp
testl
stos
lcall
adc
push
sbb
inc
in
xchg
pop
push
sti
aas
sbb
mov
rcll
mov
mov
add
popl
leave
test
mov
stos
add
repnz
xor
push
inc
das
std
imul
sub
in
ljmp
movsb
lods
in
jl
pop
nop
xchg
push
lds
xchg
inc
pop
inc
jl
cmp
push
popf
je
xor
or
es
add
ret
dec
adc
imul
fwait
jbe
sbb
pop
cltd
sub
pop
pop
jns
lcall
or
aad
fucomp
jg
gs
fcoml
xchg
mov
xor
mov
daa
and
es
cltd
sarb
fildll
out
jb
dec
gs
mov
mov
movsl
lock
andl
rolb
mov
mov
jo
scas
inc
push
aam
lcall
dec
aad
test
xor
jnp
push
mov
pop
jo
lcall
pop
fcoml
ret
push
faddl
xor
ja
mov
imul
fwait
xor
jbe
fmuls
push
cmp
das
icebp
pop
fsubrs
xchg
xor
lret
mov
add
jne
out
test
push
mov
mov
xor
fcompl
jae
push
xchg
ljmp
ja
jl
sbb
xorl
cs
mov
sbb
dec
sarl
in
fmul
in
pop
movsl
push
neg
dec
pushf
bswap
cmp
je
out
dec
dec
pop
fmull
cltd
mov
mov
test
jg
sbb
sub
sbb
jo
jmp
insb
popa
push
repnz
xchg
ret
pop
pushf
lahf
cld
sub
jg
xchg
aas
mov
insl
cmp
or
iret
mov
mov
jp
cltd
jne
loope
pusha
cli
jp
adc
fldenv
jae
out
sahf
add
js
cs
dec
mov
loop
mov
push
data16
std
sbb
pusha
mov
aas
popa
adc
pop
fbstp
push
mov
pushf
adc
ficoml
cmp
test
or
fwait
test
loope
jge
mov
ljmp
push
outsl
lods
dec
pop
jp
push
pop
or
outsl
pop
test
push
call
pop
xlat
ret
mov
pop
popa
sahf
out
inc
fs
jnp
hlt
addl
es
bound
ss
shl
sub
divl
call
jae
or
lahf
rorb
popf
ret
add
jne
lods
fmulp
mov
iret
imul
mov
mov
insb
sbb
fnstcw
fisubrl
out
jno
cld
sub
inc
lret
and
xchg
mov
push
jge
pop
popf
xchg
stos
jmp
xchg
test
push
adc
pop
mov
rcrb
jge
in
loop
pop
movb
lret
dec
dec
cmc
mov
jns
or
cmp
mov
push
mov
int
cli
fdivs
mov
mov
cltd
js
cmc
push
iret
fwait
jle
jo
lret
and
sbb
push
sbb
add
mov
inc
cmpsl
cmpl
mov
inc
cltd
or
hlt
add
stos
and
leave
loope
punpckhwd
scas
push
mov
out
aaa
sub
jl
clc
xchg
dec
and
pop
ss
ja
out
xchg
fildll
push
cmp
sbbl
insb
hlt
mov
cmp
and
cmp
dec
movsl
xchg
cmpsb
out
jp
pop
push
pushf
push
lret
jle
adc
xchg
xor
insb
fistpl
imul
cld
mov
sti
mov
jns
xchg
or
mov
rcrl
adc
jnp
loop
loope
hlt
jno
cld
mov
mov
dec
adc
arpl
add
xchg
aaa
ss
negb
jl,pt
shlb
cmpsb
fsubr
push
jl
jle
cmpsb
cmpsl
lea
dec
stos
adc
jo
lods
aas
sbb
xchg
mov
mov
popf
add
cmpsl
add
mov
mov
sub
stos
in
inc
pusha
stos
mov
and
fnstsw
mov
push
add
sub
and
push
sub
gs
xchg
pop
enter
push
jge
sub
add
lds
cmpsl
popa
add
dec
mov
pop
pop
sub
rcrb
loop
cltd
mov
dec
cwtl
stos
jno,pt
jp
popa
cmp
mov
and
add
ficoms
mov
push
pop
sbbb
adc
ret
ss
imul
cmp
mov
sbb
rolb
negb
testl
mov
push
movl
push
push
xchg
cmp
fst
popa
pop
lea
stc
imul
xor
sub
sbb
popf
xchg
out
testb
lods
push
and
xchg
mov
xchg
mov
nop
cmp
rep
dec
xlat
inc
mov
push
adc
cwtl
xchg
lods
in
dec
add
icebp
inc
xor
xchg
jo
dec
lds
ljmpw
and
das
pop
xchg
inc
jns
adc
mov
outsl
nop
pushf
mov
xchg
jns
lods
lcall
outsl
pop
insb
xchg
jmp
test
sub
fcomi
add
or
js
inc
movsl
into
dec
or
jbe
push
es
inc
jne
rolb
add
mov
xchg
push
cltd
outsb
add
mov
adc
inc
push
dec
mov
repnz
push
ja
lcall
xchg
aad
pop
das
mov
xchg
mov
push
dec
mov
add
test
inc
xor
shrl
test
jp
in
negb
ds
mov
out
test
mov
test
mov
dec
adc
in
and
sub
jmp
mov
sub
outsl
xor
sub
cmp
sbb
adc
mov
aad
js
jmp
pop
movsl
ds
repnz
test
int3
jp
cmp
icebp
and
and
pusha
lahf
in
inc
cmp
dec
adc
mov
mov
fnstcw
push
scas
ret
daa
ljmp
les
enter
add
sbb
jae
nop
xlat
xor
pop
mov
sub
push
insb
pop
ljmp
jmp
cmp
in
cmc
xor
pushf
lret
sub
pop
pop
insl
rdpmc
push
inc
and
fmul
pop
push
enter
enter
add
scas
mov
jne
mov
dec
cmp
mov
mov
rcrb
sub
xor
cmp
jbe
push
mov
sub
sub
fcomi
movsl
enter
jp
cmp
inc
movsb
mov
xor
cmpsb
movsb
mov
orb
adc
loopne
in
fnstcw
add
mov
stos
cmp
mov
cmp
mov
add
icebp
icebp
ja
pop
dec
add
mov
js
pusha
cmp
inc
daa
cmovg
fidivl
ret
ja
aas
or
push
gs
xchg
rolb
lretw
scas
or
xor
pop
fnstenv
data16
loop
and
pop
testb
and
sbb
mov
xchg
mov
js
mov
push
loopne
out
test
out
faddp
iret
inc
aas
cmp
paddq
inc
and
jb
cmp
pushf
cld
arpl
cld
pop
push
in
sub
cli
aas
fldt
test
ret
test
adc
out
mov
outsb
jmp
jmp
loop
pop
sub
notl
call
mov
mov
sub
sbbl
in
pop
pushf
pusha
xchg
add
mov
cwtl
jle
and
and
shlb
shll
es
xchg
mov
fdiv
addps
xor
ja
cmp
fcmovbe
jl
jg
pop
sbbl
repnz
ss
fstpt
dec
loope
aam
add
sbb
or
test
fsubl
pop
ss
cmpsb
mov
add
mov
inc
sbb
or
outsl
cs
test
adc
outsl
mov
movsl
repnz
out
xor
pop
inc
inc
sbb
mov
xchg
repnz
nop
or
sbb
orl
int
dec
dec
cmpsb
mov
imul
jle
and
sti
dec
fistpll
and
pusha
or
scas
adc
imul
dec
or
icebp
mov
subl
xchg
data16
sub
je
inc
aaa
sub
roll
jp
int3
pop
push
xchg
jbe
lods
fs
mov
fwait
popf
add
icebp
inc
lret
xlat
jbe
into
sbb
sub
cli
mov
pop
cmpb
mov
insl
and
and
and
cmp
mov
jno
or
lods
sub
xchg
dec
or
int
shll
pop
xlat
leave
jb
gs
loopne
inc
pusha
sub
ss
mov
rclb
add
mov
addl
mov
push
cmp
in
dec
mov
pop
xchg
in
push
lods
mov
pop
addr16
test
aaa
jle
ret
add
out
subb
popa
pop
fstl
or
cmpb
lock
in
stc
and
int
jg
jg
in
xchg
push
mov
mov
push
les
outsb
std
jnp
xchg
lret
test
pop
cld
add
dec
jle
sbbl
rep
pop
dec
pop
imul
mov
sbb
lock
rep
mov
inc
xchg
mov
pop
lea
xor
inc
pop
cmp
cmp
aam
sub
jne
adc
pop
jg
and
jmp
stos
arpl
pop
test
lods
push
jecxz
mov
adc
or
sub
mov
pusha
jmp
mov
scas
xor
not
sbb
xchg
cmp
jl
rorb
out
xor
in
imul
cltd
enter
xchg
in
sbb
adc
cmp
divl
lea
adc
ja
insb
pop
push
jnp
out
insb
insb
aaa
mov
rorb
xchg
xchg
lods
aaa
test
mov
flds
aas
adc
int3
or
arpl
mov
aad
xbegin
rclb
xchg
lret
imul
cld
cmp
test
pop
jp
xchg
fucomi
rcrl
outsb
pop
or
sbb
rorl
sub
xchg
lds
xlat
mov
loopne
sub
xor
add
sbb
fadd
lcall
daa
xor
mov
test
and
rclb
lret
fiaddl
push
movsl
jb
mov
or
fldcw
sub
mov
mov
adc
icebp
and
cmp
negb
mov
icebp
xor
out
push
xlat
dec
sbb
je
sub
subb
mov
sub
mov
ds
lock
ret
lods
sbb
test
jbe
or
flds
adc
mov
fwait
inc
mov
int3
mov
push
in
cmpsl
pop
jle
pop
and
enter
pop
mov
mov
cmp
fidivrs
dec
push
mov
std
jle
sbb
mov
push
mov
inc
lret
int
dec
out
push
push
dec
ss
test
frstor
adc
pushf
and
in
shll
fdivl
mov
data16
inc
fmulp
and
xchg
mov
cs
in
xchg
mov
popa
jb
sbb
fnstcw
out
daa
push
push
cwtl
repnz
jmp
int
push
pop
adc
adc
sbb
inc
in
adc
xchg
mov
push
mov
dec
fdivs
pop
mov
lret
xchg
push
mov
jmp
xchg
xor
mov
mov
fstps
mov
add
jb
sub
dec
dec
push
shr
sub
popf
cmp
dec
push
mov
ljmp
jecxz
stc
loope
imul
out
adc
pop
pop
cs
mov
xchg
ret
dec
daa
cli
and
pushf
in
mov
insb
xor
fistpll
mov
and
push
mov
imul
or
cmpsl
call
inc
inc
mov
mov
mov
not
cmc
cmc
aas
mov
xor
or
int3
popa
cmp
cmp
arpl
insb
jl
xlat
cwtl
loopne
and
rclb
xchg
jns
test
dec
xlat
sub
repz
ss
std
xor
jno
ja
stos
and
cmp
andl
popf
mov
mov
insb
xchg
sbb
fsubs
mov
add
out
jge
cltd
mov
js
out
push
cld
cmp
clc
frstor
out
cmp
inc
pop
push
pushf
outsb
mov
push
push
paddusw
and
in
jp
out
xor
pop
push
aam
sbb
inc
in
mov
lret
push
mov
fdivrl
push
jnp
test
repnz
ljmp
sbb
scas
clc
mov
jne
test
mov
lret
repnz
jns
push
jne
inc
shrl
dec
sbb
push
cmp
inc
jge
cli
or
mov
or
mov
pop
test
int
push
cs
push
mov
pop
imul
movsb
cmp
mov
stc
jecxz
and
scas
rcl
add
mov
pop
pusha
mov
fcmovnb
inc
cmp
dec
xchg
dec
or
pop
mov
jnp
ret
push
xor
add
inc
dec
int
sub
inc
pop
call
repz
imul
push
jne
movsl
cwtl
ss
jo
mov
adc
push
stos
pop
gs
pop
xchg
sbb
jl
dec
push
pop
sbb
jg
lea
jne
xor
cmp
cmp
insl
xchg
filds
mov
xor
test
test
fdivs
idivl
roll
fld
rclb
lfs
pusha
inc
adc
push
adc
push
cwtl
pusha
or
push
or
mov
inc
xor
mov
dec
push
dec
aas
outsl
or
and
fcomps
mov
jbe
add
jb
js
xchg
clc
cmpsb
fildl
loopne
inc
add
pop
lret
js
xor
and
push
mov
xor
mov
lods
inc
data16
jns,pn
jmp
push
fildl
jg
stos
xchg
jge
inc
inc
lret
mov
mov
lods
test
pop
imul
sbb
push
pop
jo
dec
sti
pusha
xchg
sbb
sahf
add
dec
and
add
sbb
dec
cmpsl
push
mov
insb
and
inc
jecxz
bound
negl
sub
decb
cltd
rcl
into
and
sub
test
sub
sbb
xor
push
pop
jmp
sbb
mov
imul
leave
cmpsb
sbb
ficompl
cs
adc
call
push
int3
fadd
fidivl
dec
adc
ljmp
scas
test
mov
setg
arpl
insb
adc
fstl
daa
pusha
ret
pop
xorps
je
inc
pop
push
inc
dec
cs
movl
movlps
int
insb
push
fidivl
xorl
addl
xor
sbbb
pop
jmp
cwtl
push
add
repz
jecxz
inc
pop
es
mov
push
data16
sub
repz
sub
cmp
or
xchg
mov
nop
shll
testl
cmp
les
loopne
cltd
cmpsl
clc
push
cmpsb
cmc
cmp
jb
test
mov
movb
or
fisubrs
sbb
xlat
adc
ss
out
or
outsb
mov
ljmp
mov
sub
shlb
cmp
or
and
fwait
cmpl
sbb
xchg
cwtl
mov
les
xor
adcl
sub
pop
jl
mov
add
cld
mov
and
lret
xchg
pop
push
jg
notb
mov
insl
int
sub
push
mov
push
mov
insl
inc
dec
out
jg
dec
push
adc
and
sbbl
lret
adcb
jp
or
ljmp
push
rolb
test
jmp
lea
mov
and
loop
fldcw
pop
inc
sbb
into
test
push
sbb
fstpt
cmp
jno
mov
and
jnp
xchg
icebp
add
imul
movsl
rep
or
xor
push
dec
subl
sub
push
or
call
jae
rcll
adcb
lds
adc
mov
repnz
dec
dec
mov
loope
aas
call
xchg
in
or
jne
pop
dec
inc
in
push
jbe
movsb
xchg
sti
js
sbb
insb
cld
dec
mov
xor
or
and
lahf
adc
jmp
cmpsl
mov
scas
mov
xor
mov
sbb
out
subps
fcomi
cmp
push
fsubs
xchg
lret
sub
mov
icebp
or
add
daa
mov
outsb
jae
mov
push
aaa
stc
ret
jmp
jbe
std
cli
shll
sbb
mov
aam
xchg
dec
sub
sahf
leave
and
fsubr
addr16
in
popa
jp
add
sub
loop
sbb
pop
add
mov
idiv
in
out
sbb
pop
jnp
fidivrl
mov
mov
nop
push
fadds
inc
mov
loop
jl
rclb
sub
popf
stos
das
add
xor
mov
les
fiadds
movsb
xchg
in
add
sbb
xor
dec
scas
mov
jb
xor
cld
mov
hlt
and
fwait
mov
add
mov
popf
gs
push
les
add
lcall
mov
and
sub
mov
int3
sub
pop
mov
adc
pop
and
iret
test
lods
cmpsb
ret
test
rcl
aas
or
pusha
mov
sbb
inc
xchg
add
loop
dec
or
fwait
sub
push
xor
loop
shll
jno
mov
and
rcll
dec
cltd
mov
fisubrl
xchg
push
decl
dec
lds
adc
pusha
hlt
mov
mov
jae
cltd
shl
shll
fistpll
mov
cli
incb
mov
mov
repnz
shll
inc
les
shrl
outsb
in
lds
movsb
lret
rorb
nop
push
cmp
pop
and
adc
adc
imul
jnp
cmp
fs
scas
loope
mov
cmpsb
jns
ja
mov
xor
dec
int
aaa
mov
adc
or
cmp
scas
pmullw
mulb
mov
jo
xor
dec
insl
leave
dec
adc
in
fdiv
fwait
jae
aam
mov
sbb
push
cmp
cwtl
sub
fcmovnbe
inc
in
std
mov
mov
mov
loopne
test
push
push
cwtl
lahf
sbb
sub
or
xor
xor
ret
cwtl
out
ss
push
add
movsb
pop
pushf
inc
lret
hlt
pop
cld
mov
xacquire
pop
add
imul
jne
sbb
jb
cmp
jae
aaa
int
xchg
dec
inc
mov
cli
les
jle
cmc
push
push
leave
insl
shll
daa
stos
sbb
mov
in
add
test
fdivs
inc
cmc
popf
cmp
cmpsb
jg
adc
cltd
out
cwtl
cmp
pop
imul
and
mov
push
push
xor
je
cmpsl
jg
call
ljmp
push
fwait
mov
adc
mov
pushf
lahf
sbb
in
clc
fs
jmp
cltd
mov
ds
gs
fucom
hlt
inc
sbb
mov
sbb
adc
rcl
add
mov
out
aaa
loope
stos
aas
cmp
xor
shrl
insl
push
push
mov
in
or
inc
push
jg
ds
jge
jecxz
aas
mov
mov
mov
and
xchg
cmp
mov
xlat
mov
jae
lcall
mov
push
arpl
jb
clc
cmpsb
fwait
fwait
popa
inc
lret
cmp
in
inc
jmp
jnp
sub
ds
lods
repz
cmp
stos
xchg
jge
sbb
repnz
test
lods
mov
xchg
xchg
mov
xor
stos
mov
xor
add
adc
add
mov
popa
dec
shll
dec
add
push
adc
dec
cltd
repnz
clc
mov
divl
dec
sub
fs
fwait
sbb
dec
pop
dec
and
lock
pop
pop
insb
and
jno
inc
xchg
jle
mov
cmp
xchg
dec
outsb
int
cmp
lea
filds
mov
icebp
jle
ds
sbbb
pop
sbb
inc
cmpsl
mov
push
xchg
jp
pop
int3
into
and
sub
lock
mov
ss
sub
push
sarb
je
popf
sbb
into
in
test
iret
sarl
insb
aam
test
js
pusha
adcl
pop
popa
push
xor
sti
outsl
fadd
stc
mov
sbb
mov
jecxz
mov
sbb
adc
rcl
out
mov
pop
mov
enter
popa
lods
repnz
jb
pop
icebp
lods
sub
push
aam
and
popa
push
inc
icebp
jns
sbb
or
mov
xchg
sarl
sub
loope
jae
shll
lret
sub
in
or
mov
push
cmp
adc
sti
add
mov
idivl
in
gs
mov
mov
nop
call
test
push
xchg
jns
adc
pop
cwtl
in
cs
insb
inc
fdivl
pop
adc
hlt
aas
mov
jne
push
jl
or
ret
mov
test
add
jg
mov
mov
jmp
jecxz
das
test
rcrb
push
insl
ficompl
stos
mov
xchg
sub
sar
pop
and
fsubrs
cmp
cmpsl
mov
cli
paddq
fisubs
les
out
repnz
xchg
or
mov
mov
push
ret
xchg
int
js
sti
cmp
sbb
jb
fsubr
inc
int
fisttpl
test
mov
mov
dec
popf
mov
add
ljmp
mov
outsb
pop
aam
cli
fstpl
insl
clc
mov
cmp
jle
mov
add
add
loope
and
push
mov
lret
add
test
sbb
in
sbb
imul
inc
out
sbb
call
mov
imul
cli
and
cltd
es
ret
xor
pop
sarb
sbb
mov
mov
adc
fs
movsl
or
arpl
gs
jecxz
in
popf
push
mov
imul
addr16
dec
fisttps
cmp
test
dec
test
mov
push
mov
mov
pop
gs
xchg
repz
outsl
lods
push
aad
cmp
mov
out
push
dec
js
inc
jne
pusha
addl
mov
insl
out
jne
sbb
lods
push
fsubs
sub
sbb
push
ret
inc
fs
mov
lahf
in
popf
movsb
fstl
xlat
icebp
xchg
stc
adc
xlat
inc
pop
sub
xor
hlt
push
pop
push
sub
in
xor
jecxz
popa
inc
xchg
mov
in
in
adc
aaa
mov
pop
inc
push
mov
mov
push
pop
fisubl
popl
xor
jb
stos
bound
ret
push
in
sub
fmuls
xchg
imul
arpl
jp
lods
fstpl
repz
fnsave
dec
pop
fbstp
mov
mov
lds
js
add
mov
pusha
xchg
or
push
jecxz
or
shll
in
testb
adc
rcrb
mov
and
loop
int
insl
or
in
push
sbb
jo
cmpsb
stos
popa
out
add
mov
push
jle
or
divl
pop
adc
js
ja
and
mull
repz
sbb
cmpsl
ret
loopne
daa
mov
xor
out
mov
mov
test
pop
xchg
std
dec
xor
mov
dec
cmc
daa
clc
cli
sub
in
mov
scas
and
cs
and
pop
sbb
lock
mov
xor
jmp
imull
loopne
pop
fsubrs
int
push
xor
dec
pop
mov
fsub
loope
or
enter
stos
fmuls
xor
pop
aad
push
sbb
jae
icebp
cmp
or
mov
int
jae
gs
hlt
pop
leave
inc
sbbb
add
or
fcompl
clc
dec
lock
xchg
pop
cltd
fisubrl
scas
pop
call
cmp
nop
cmp
mov
bound
rorb
shrb
sbb
fld1
cmp
int3
rsqrtps
movsb
filds
out
pop
adcl
xchg
imul
or
sbb
mov
add
sub
lods
lahf
daa
adc
cmp
xchg
addr16
repnz
scas
lret
mov
loope
shrl
rclb
fisubrl
es
movsb
js
jg
inc
mov
aas
ficompl
idivl
adc
pop
sbb
add
mov
outsl
data16
cs
xor
jge
andb
dec
push
inc
es
push
add
ss
and
es
adc
jecxz
mov
icebp
fdivrl
pusha
nop
stos
cmpsl
cmc
std
sub
add
dec
sbb
sahf
sbb
addr16
pop
inc
mov
fcmovbe
nop
mov
fimuls
adcb
aaa
pop
mov
adc
gs
out
xor
pushf
in
pop
dec
xchg
aaa
stos
inc
mov
sti
xor
cmp
and
adc
adc
gs
sub
adc
shrb
fiaddl
shl
fistpl
jl
mov
sbb
or
mov
bound
add
jmp
repz
cwtl
imulb
xchg
scas
nop
lock
and
pop
test
mov
outsb
aad
lcall
xor
sbb
lock
jle
mov
add
vrcpps
cmp
sub
adc
push
xlat
mov
ljmp
xor
outsb
lcall
jmp
xchg
xchg
cmp
push
es
out
pop
sti
jns
ss
gs
js
push
inc
mov
dec
and
ljmp
inc
dec
movsl
rol
pop
jmp
pop
test
outsl
jnp
sarl
sub
mov
in
ljmp
inc
dec
lahf
mov
push
mov
add
lret
push
mov
cmpb
sub
je
sub
mov
and
cmc
in
jno
jno
cld
cmp
js
out
push
pushf
popf
out
xchg
inc
rcrl
imul
dec
cmp
lcall
loopne
ret
cmp
mov
push
and
pop
jo
sub
movsl
or
scas
push
jae
andl
sbbb
imul
popf
dec
jb
xchg
pop
adc
enter
in
shrl
inc
dec
xchg
ret
push
out
xor
repnz
cmp
dec
stos
cs
outsl
std
jb
imul
int
gs
sub
test
xor
int
adc
rol
out
lea
inc
mov
dec
dec
loopne
lret
xor
imul
stc
mov
sti
cli
adc
nop
or
mov
mov
dec
out
test
lahf
xchg
pop
cmp
mov
mov
dec
jbe
push
add
cmpl
icebp
push
jae
jno
test
xor
dec
jmp
repz
sbb
mov
in
mov
stos
pushf
aaa
or
mov
mov
popf
xchg
xor
jp
and
jo
or
mov
push
xor
lods
sbbl
stos
sub
sahf
adc
push
jecxz
les
mov
jmp
scas
sbb
cltd
mov
or
mov
adc
fcoml
xchg
fnsave
int
popf
dec
mov
inc
and
xchg
sbb
xchg
btr
imul
fidivrs
aam
std
mov
dec
and
movsb
je
sub
cmp
and
jecxz
call
mov
lret
lods
out
sub
or
adc
in
pop
lret
inc
dec
sbb
bound
or
in
loope
inc
mov
inc
pop
or
lahf
insl
imul
repz
fisttps
stc
inc
pop
jp
lock
xorl
arpl
sbb
cmc
mov
adc
std
sti
fsubs
xor
lret
mov
xchg
jmp
add
mov
rcrl
jmp
ds
mov
or
mov
test
fmul
mov
jae
cmc
add
shrb
hlt
hlt
push
or
in
xchg
and
and
sub
test
dec
pop
ljmp
push
pop
mov
jg
add
sti
xchg
sub
clc
push
test
ss
iret
cmp
cmc
loop
roll
push
enter
rcll
insl
ror
test
jle
mov
jns
mov
or
movsb
outsl
nop
mov
loope
add
xor
push
sub
cmc
stos
push
movsb
testb
cmc
add
jge
popf
or
or
test
loope
lahf
sahf
addr16
pop
nop
imul
push
mov
sub
loope
mov
push
les
out
movsb
mov
movsb
pop
fsubrs
ds
mov
loop
in
icebp
add
out
nop
sub
in
shrb
pusha
inc
push
jmp
mov
push
arpl
movsl
cmp
and
xlat
ret
xchg
scas
mov
or
in
insb
test
into
xor
mov
adc
andb
sub
aad
or
jge
sub
sbb
xchg
je
jecxz
dec
lds
push
pop
adc
cli
std
inc
jno
mov
dec
fidivs
dec
lcall
insb
jb
sarl
jne
aas
pop
dec
imul
and
fcompl
sti
mov
fs
add
mov
adc
push
bound
push
push
std
dec
jbe
cmp
sub
mov
cmp
push
popf
add
or
lret
out
in
addb
sbb
push
or
jecxz
ja
pop
xchg
popf
test
inc
les
into
sbb
scas
xchg
mov
sbb
jmp
lea
stos
jne
mov
negb
ljmp
mov
cmovbe
push
sub
or
lret
pusha
fmull
and
test
push
mov
aad
es
arpl
bound
movsl
test
lods
ret
adc
js
nop
xor
or
pop
data16
push
mov
lock
mov
lea
and
addr16
pop
jnp
aas
sti
orl
jbe
jbe
xor
ss
push
dec
or
fnstsw
rcl
jnp
mov
loop
or
pop
mov
adc
outsb
lods
mov
subb
push
jp
sbb
loopne
inc
andl
ljmp
leave
rolb
es
bound
stos
cmc
and
std
jg
outsl
xchg
pop
icebp
jnp
ret
sbb
pop
push
lods
lods
insl
imul
jno
pop
dec
sub
sbb
hlt
ljmp
cmp
je
push
add
xchg
and
adc
std
popa
movsb
mov
sbb
mov
jmp
data16
stos
cmp
mov
ret
sub
insb
scas
cmpsb
iret
push
mov
insb
push
arpl
sbb
xor
adc
mov
movb
stos
sti
andl
frstor
orl
fwait
mov
pushf
xchg
dec
outsl
or
jge
lds
addl
daa
out
mov
xchg
jns
aaa
and
insl
inc
cmp
fs
lods
and
adc
mov
pop
pop
adc
cmp
scas
insb
mov
jae
scas
mov
jmp
and
sbb
ret
enter
test
lods
cltd
shll
xlat
hlt
sub
jl
rol
adc
mov
iret
mov
sub
jle
nop
popf
cmp
lret
negb
jae
adcb
jge
xchg
mov
dec
fdivs
imull
cli
lahf
xchg
push
mov
push
push
mov
push
cltd
loopne
pop
out
push
mov
mov
mov
mov
cmp
andb
stc
xchg
cmpsb
fwait
je
jecxz
faddl
jg
les
loopne
push
add
lcall
imul
sbb
mov
inc
addr16
jae
cli
sub
rorl
xchg
fistpl
movsl
stos
mov
jb
mov
xchg
jmp
jb
insb
test
sarl
jbe
out
popf
cmp
pop
cld
jns
sahf
adc
cli
arpl
mov
imul
cwtl
outsl
or
mov
pop
scas
push
adc
pushf
int
mov
inc
adcb
sub
or
mov
adc
xchg
sbb
add
inc
js
jmp
out
scas
iret
je
and
xor
fs
and
cmp
cmpb
mov
inc
mov
fsubs
ja
xor
out
xchg
out
les
insl
sub
xor
pushl
mov
jle
inc
int3
fs
addr16
mov
mov
push
out
mov
in
aad
sti
fstps
lock
mov
push
or
push
or
subl
jecxz
cmpsb
out
or
out
mov
jne
cmp
rolb
ds
cmp
mov
jnp
aad
xlat
mov
enter
test
cmp
push
jmp
pushf
stos
cmp
mov
add
push
add
adc
cld
fldenv
sahf
mov
mov
jno
nop
or
mov
out
or
dec
dec
push
dec
adc
mov
out
cmp
and
cmc
pop
push
fdivrp
jg
repz
dec
cli
dec
in
vmwrite
int
test
jo
and
nop
cltd
xchg
xchg
mov
inc
cmpl
mov
movsl
nop
jns
push
ss
jno
fnstenv
xlat
xor
std
xorl
jmp
aaa
pusha
test
jmp
sbb
popa
push
xchg
jge
jbe
push
inc
call
les
loope
pop
ds
into
or
mov
dec
and
pop
std
imul
gs
push
xchg
xor
rorl
movsb
fsubrl
mov
daa
add
push
test
mov
ja
inc
mov
push
dec
or
rcrl
cmp
xchg
or
fwait
inc
mov
push
pop
jmp
int3
push
cltd
pushf
ljmp
pop
outsl
mov
xchg
rcrl
xor
adc
fdivl
into
mov
insb
scas
int3
push
cmpsl
pop
out
xor
cli
pop
enter
pushf
vmovdqu
fsubrs
lret
ror
pop
scas
push
adc
adc
inc
mov
cli
cmp
push
pop
pop
loop
mov
mov
data16
and
imul
mov
cmp
adc
mov
jl
dec
repz
movsl
dec
xchg
xlat
add
sbb
daa
lret
inc
xchg
or
repz
sahf
fisubrl
aam
adc
loopne
pop
or
xchg
dec
imul
mov
jns
lret
xchg
notb
pop
xor
punpckldq
lock
std
mov
cmp
les
test
ss
frstor
jne
stos
rcrl
ret
aad
test
fs
dec
mov
test
loop
mov
repz
hlt
or
push
mov
or
lretw
repnz
fldenv
sarl
jecxz
les
cmp
jl
lods
aam
adc
js
fnstcw
cmp
cmp
into
rcrb
pop
and
adc
addr16
dec
jne
push
xor
cmp
push
sar
xor
dec
lea
fs
cltd
pop
xchg
andb
inc
and
movsb
insl
mov
inc
mov
pop
adc
mov
gs
test
inc
xor
sti
in
std
pop
mov
jo
rclb
aad
cmpsb
adc
pop
or
aad
shr
fcmovnb
adc
add
aad
pushf
pop
out
mov
mov
add
pusha
pop
jae
imul
int
xchg
aad
cmp
push
loopne
jecxz
ljmp
ss
popl
cmp
adc
mov
lea
loop
test
pop
pop
sub
add
test
dec
sub
es
shll
mov
cmovnp
loope
jo
xchg
leave
inc
mov
mov
dec
addl
mov
stc
cmovb
test
dec
cmpsb
push
push
fldenv
dec
xor
aam
sti
cmp
jle
ss
pop
lds
mov
xchg
sub
cmc
ljmp
sbb
xchg
data16
mov
das
jge
adc
lds
mov
and
adc
or
and
xor
adcb
rcll
std
cmc
jmp
adc
mov
lds
out
jp
mov
dec
dec
loope
repnz
int3
bt
mov
lret
in
sahf
daa
xchg
icebp
xchg
mov
inc
push
divb
mov
dec
mov
jg
ss
xchg
push
mov
push
dec
in
push
inc
mov
in
out
pusha
inc
je
dec
jae
in
xchg
je
cmp
mov
in
popa
sub
jle
adc
jle
adc
jb
xchg
sub
aad
push
add
repz
sub
or
int3
in
cmp
and
mov
add
add
add
push
add
xchg
ficompl
pop
xor
lock
aas
adc
dec
dec
push
movsl
push
pusha
out
cmp
fists
jns
sbb
stc
lea
mov
out
enter
in
lock
addr16
sub
out
jg
dec
lret
xchg
sbb
cmp
xchg
hlt
movsb
cmp
lods
push
cmp
sub
push
loopne
into
jne
dec
lds
or
pop
stos
sbb
ljmp
cli
testb
mov
loopne
adc
repz
das
mov
icebp
jle
pusha
iret
sub
and
in
ror
and
lods
out
shll
mov
sbb
in
sub
push
enter
xor
adc
xchg
stc
mov
rol
jns
xorl
insl
int
fcmove
scas
inc
sub
pop
int3
or
aas
dec
ljmpw
iret
xchg
aas
sbb
out
push
dec
out
pop
jo
inc
jns
nop
mov
mov
dec
mov
aad
daa
mov
adc
mov
dec
inc
adc
pusha
adc
dec
mov
push
push
cmp
shlb
out
cli
stc
mov
test
xor
inc
std
arpl
mov
outsb
adc
lea
ss
scas
dec
push
in
call
xor
jae
mov
dec
xchg
add
jl
sbb
jo
xor
or
mov
dec
scas
xor
jmp
roll
xchg
push
and
mov
aad
adc
jb
xchg
xchg
mov
dec
sub
jo
dec
or
push
xor
jl
idivb
sub
clc
sub
or
dec
ds
lea
lret
lahf
incb
in
push
jmp
mov
testb
cmc
ret
push
mov
or
mov
sub
push
fidivl
out
dec
pop
jp
push
cmp
fcmovb
les
jnp
rclb
shl
dec
mov
inc
cli
jno
cmp
addb
pop
mov
outsl
cmc
cmc
push
push
adc
popf
add
jns
mov
and
mov
jne
mov
cmp
push
add
fnstcw
loop
std
dec
pop
mov
mul
dec
inc
xchg
in
and
cltd
mov
inc
inc
xchg
mov
sub
push
not
in
xchg
jno
jg
jnp
jl
push
scas
add
cltd
sbb
mov
das
popf
xchg
dec
mov
ret
out
sub
inc
push
es
push
lods
imul
nop
push
pop
xchg
push
test
adc
mov
lods
psubd
sti
push
int3
jg
sub
push
outsb
jl
aad
add
mov
jg
or
jne
xor
push
xchg
mov
inc
bound
dec
push
and
mov
ja
push
dec
aas
xchg
cmp
sub
and
cmp
and
jo
mov
xchg
rolb
xorl
jmp
mov
je
mov
add
mov
xchg
or
pop
cmp
sbb
loope
sub
mov
xchg
jecxz
imul
mov
pop
xor
xor
pop
cmp
push
add
dec
rorb
push
in
pop
fisttpl
dec
sub
pop
mov
cmp
sbb
pop
popa
fisttpl
push
push
lret
aam
mov
push
xor
movsl
mov
inc
xchg
push
jb
cmc
dec
xchg
test
add
sbb
lret
xor
xor
or
inc
adc
dec
or
adc
incl
xlat
add
xchg
sbb
inc
xchg
add
out
dec
insl
jmp
insl
jb
hlt
cmp
loope,pt
lahf
test
iret
out
push
pusha
arpl
cmpsb
repnz
divl
jno
popf
repnz
test
mov
xchg
adc
jb
jae
outsb
mov
mov
dec
int3
push
jnp
pushf
or
sbb
fdivl
cmc
dec
dec
subb
sbb
cmp
rcll
jge
mov
pop
fisubrl
mov
in
jp
idiv
dec
adc
fwait
rol
fdiv
int3
test
lret
lods
movsl
jle
shrb
adc
outsb
in
ret
push
ljmp
popa
jp
leave
pop
jae
lcall
mov
add
pslld
test
mov
xchg
pop
sub
pop
in
xor
int3
maskmovq
idivl
imul
fldcw
push
inc
imul
or
loopne
in
mov
adcl
scas
mov
int
lret
add
ds
pop
and
jle
sbb
aas
test
enter
pushf
call
xor
mov
push
leave
lcall
fnstsw
movnti
fisttps
add
bound
pop
xchg
cmp
scas
mov
les
rcrb
and
orb
push
subl
push
ljmp
loop
mov
lods
repnz
and
xchg
cmpsb
push
movl
fs
test
or
loop
push
gs
mov
pop
or
rorb
xchg
sub
xchg
insb
clc
cmpsb
pop
jnp
fwait
jmp
pop
inc
je
push
out
in
in
imul
jns
push
je
or
fdivr
jle
sbb
mov
push
lods
lds
mov
cmp
or
in
das
test
and
sub
lock
jle
dec
popf
outsb
or
sbb
cld
loop
xchg
push
hlt
lahf
clc
aam
xchg
sbbl
and
adc
mov
stos
jo
dec
xlat
sahf
push
mov
mov
add
imul
stos
inc
nopl
sub
test
fidivs
mov
es
add
addr16
and
jbe
lret
scas
mov
pop
lea
mov
mov
orb
jne
inc
cmp
adc
cmp
push
add
ret
and
stos
mov
idivb
aam
push
loope
dec
push
jbe
sbb
dec
aad
insb
int
or
loope
mov
scas
mov
cmp
sbb
dec
inc
jg
mov
and
xchg
or
movsl
jb
push
popf
mov
jmp
jge
in
outsl
das
sub
dec
popf
adc
add
flds
jge
and
mov
xchg
push
sub
gs
mov
mov
mov
lods
inc
ret
mov
xchg
daa
adcb
cmpsb
iret
xorl
mov
jno
mov
sub
adc
dec
es
ficoms
in
xor
int
in
jnp
lea
sub
je
jp
jnp
lret
mov
push
pop
roll
mov
xor
push
inc
cmpsl
mov
test
mov
enter
stos
dec
pushf
pusha
icebp
popf
daa
scas
xor
mov
je
in
jge
ds
repz
mov
mov
sub
mov
dec
jo
roll
mov
data16
pop
adc
pop
sbb
cli
push
dec
pcmpeqw
adc
jno
fiadds
jae
sub
push
xchg
or
inc
daa
ja
mov
dec
jb
sbb
sarb
cltd
lret
imulb
out
outsb
mov
mov
cs
adc
push
pop
fisubl
pop
mov
cmp
cmp
test
jbe
mov
lahf
fsub
jecxz
inc
loop
adc
addb
and
std
xchg
into
pop
sbb
dec
ficoml
fcoml
lcall
jbe
or
or
dec
or
cmpsl
imul
fmul
enter
push
daa
sbb
add
pop
sub
sbb
mov
xchg
test
ds
jmp
sbb
movsl
fwait
leave
mov
sub
push
jb
into
or
sub
ret
repnz
filds
enter
add
add
data16
scas
cltd
pop
out
clc
out
sbb
pop
insl
in
mov
ficoml
pop
inc
out
xor
cwtl
mov
aam
and
imul
sti
out
jmp
jbe
iret
mov
jp
dec
jl
cmp
push
pop
movsb
push
xor
fdiv
add
mov
imul
mov
adc
popa
push
push
fsub
rorl
inc
add
test
jns
ljmp
scas
xor
loopne
mov
sbb
push
sub
pop
fsub
jns
call
inc
jp
js
xchg
jns
fdivrl
push
push
inc
and
xor
push
sbb
cs
pop
jne
bound
sbb
into
insl
xor
add
loop
xor
mov
or
adc
fisubs
lock
and
rcrl
rorl
push
pusha
js
loop
imul
loop
jg
mov
js
add
inc
cmpsl
stos
test
xchg
cmc
sub
and
out
cmpsl
pop
push
mov
dec
sbb
dec
add
cmp
sub
add
hlt
mov
outsl
mov
ljmp
sti
add
mov
mov
jnp
mov
std
xor
sbb
test
insb
loope
mov
int3
scas
fcoml
notb
inc
sbb
xchg
adc
cwtl
lds
fs
sub
push
mov
sub
jp
loope
xor
int3
pop
dec
pop
fdivrs
inc
mov
sbb
dec
xchg
iret
out
stc
sarb
cmc
test
int3
jl
dec
outsb
out
mov
lock
lea
insb
rsm
pop
mov
sub
movsb
xchg
push
or
icebp
xor
add
aaa
push
or
in
scas
xchg
sahf
fdivrs
rclb
sbb
sub
les
add
or
loop
repnz
mov
mov
loope
adc
mov
xchg
inc
fmull
mov
pop
or
xlat
inc
aam
push
pop
lods
icebp
sbb
mov
cmp
imul
push
icebp
mov
pop
and
and
lea
leave
lahf
add
jl
inc
or
fimuls
call
pushf
mov
arpl
fldt
jcxz
cmpsb
fcompl
loop
inc
pop
pusha
imulb
movsb
cmp
push
rorb
je
sub
negl
jbe
int
inc
xchg
imul
ficoml
pusha
pop
add
dec
jg
dec
into
les
mov
fiaddl
lds
lret
mov
pop
scas
rorb
loop
and
xchg
sub
push
xor
cld
xchg
pop
lods
xlat
nop
add
test
xor
loop
push
adc
inc
leave
sti
in
out
cld
push
xlat
clc
or
pop
pop
cmp
adcl
cmc
xchg
mov
fbstp
lds
mov
push
xchg
pop
hlt
dec
jmp
xor
or
cmc
movsb
xchg
fisttpl
fstpt
lds
cltd
mov
gs
inc
sbb
and
mov
es
inc
dec
ret
xor
xchg
sub
stc
dec
mov
xchg
jno
mov
sbb
stc
sbb
adc
add
pop
jo
push
mov
ret
lret
fcoml
or
sub
lods
lret
pop
loopne
xlat
enter
pop
aaa
in
es
jmp
ret
das
xchg
out
aas
and
rcl
ljmp
xchg
int
xor
jp
call
in
int
mov
ret
enter
cli
test
or
dec
sub
xchg
fwait
pop
cli
bound
enter
mov
dec
mov
add
mov
or
xor
enter
mov
ja
mov
lods
cmp
scas
loop
out
lea
loop
pop
xchg
sti
pop
in
test
ret
xchg
sub
push
imul
xor
or
mov
data16
or
lds
mov
cmp
mov
shll
jge
lret
stc
xchg
mov
cwtl
jle
push
push
int
jb
repnz
je
pop
cltd
cmp
adc
pop
sahf
stos
or
addb
stos
mov
fdivrs
test
sub
push
rclb
xchg
lret
out
sub
add
sbb
repz
inc
cld
pop
movsl
push
sub
jl
negl
xchg
into
aad
mov
xchg
scas
xchg
out
pop
cwtl
jne
inc
sub
mov
leave
dec
stos
in
inc
adc
adc
and
rclb
pop
xchg
divb
sub
stc
add
add
in
outsl
or
test
cmp
insl
pop
daa
fistps
sub
scas
fcomps
call
in
fs
or
mov
mov
mov
cmp
cmpsb
jbe
mov
jne
sbb
jb
mov
inc
and
xchg
mov
dec
ret
jp
mov
inc
jo
sahf
mov
scas
mov
divl
lods
mov
push
cli
mov
arpl
add
push
pusha
nop
dec
iret
clc
cmp
ss
mov
sub
jnp
mov
push
adc
adcb
pop
xchg
push
cmp
sub
mov
xchg
add
or
jb
jecxz
pop
pop
xlat
pop
ja
pop
dec
clc
or
fcmovnu
fs
xor
popf
pusha
cmpsl
pop
sbbb
sahf
aam
push
into
jl
pop
outsb
add
pusha
mov
sarb
lock
test
xlat
jbe
je
addr16
mov
push
les
or
fs
outsl
shl
mov
and
mov
pop
out
sub
rolb
jecxz
push
add
fwait
xchg
jg
lahf
mov
dec
ss
and
cmpsl
xor
push
mov
xchg
cmp
jge
mulb
pushf
adc
push
lods
jle
in
cltd
dec
add
sbb
and
cwtl
repz
ficompl
adc
inc
test
xchg
in
insl
lods
int
sarl
in
cmp
fwait
inc
test
sub
test
pop
cmp
loopne
movl
xchg
jns
jge
push
test
adc
in
jmp
insb
fcomi
and
push
or
cmp
push
pop
inc
xor
into
add
sub
lds
fsubr
inc
stos
adc
js
jmp
add
pop
push
loope
cltd
mov
jno
es
adc
sub
sti
inc
inc
sbb
in
scas
leave
push
fimull
daa
lock
outsb
jp
mov
add
jl
dec
aad
mov
push
xchg
pusha
lret
outsb
outsl
mov
clc
ds
jbe
mov
imulb
shl
push
std
lods
popf
scas
xor
xor
dec
adc
and
xchg
roll
shll
and
out
bound
dec
pop
inc
adcl
fwait
xor
jmp
add
mov
sub
sub
and
inc
cltd
fnstcw
lahf
neg
adc
jmp
jb
movsb
sahf
and
mov
push
js
xor
jge
mov
sub
ret
lods
out
pop
mov
adc
mov
sbb
sub
mov
stos
bound
fildll
imul
xchg
push
jae
push
mov
stos
pop
dec
cmp
sbb
and
or
inc
movsl
push
jge
push
test
loop
cmp
xchg
repnz
pop
pop
add
mov
imul
test
mov
xor
and
loopne
sbbb
sub
rcr
int3
sti
pop
mov
ljmp
inc
mov
and
or
pushf
pusha
inc
push
sub
popa
arpl
jg
and
dec
cmp
orb
ljmp
push
fucomp
xor
dec
mov
inc
ss
ret
mov
lea
or
mov
movsl
pop
mov
pusha
inc
ds
rorl
test
mov
cmp
cmp
rolb
pop
or
adc
inc
les
pop
idivb
loopne
mov
enter
loope
fs
shr
cmp
icebp
flds
stc
mov
lods
outsl
dec
add
lods
xchg
pop
imul
sbb
add
ljmp
std
lock
adc
out
hlt
mov
insl
scas
adc
hlt
es
outsb
ss
lret
pop
arpl
pushf
and
add
mov
andb
fstpl
mov
dec
in
push
push
in
sbb
orb
mov
insl
jnp
push
outsb
shlb
sti
fucomi
sub
mov
outsb
inc
ja
mov
xor
push
dec
add
je
jbe
sbb
mov
xchg
enter
push
adc
cs
clc
mov
add
into
mov
imul
mov
adc
cmpsl
jns
jb
xchg
inc
dec
adc
mov
push
shl
xor
scas
cmp
and
hlt
paddusw
inc
push
push
mov
jle
fs
pop
call
push
mov
jns
push
pop
iret
add
es
and
xchg
lea
push
xor
std
ja
sub
fstl
shr
rorb
sbb
add
lret
dec
shll
lods
jbe
mov
or
je
mov
xchg
stos
and
and
lods
insb
jns
dec
mov
aas
push
cld
insl
xor
sub
push
xor
sub
hlt
movsb
xor
jge
mov
cmp
sti
sarl
sbb
ja
cmp
add
mov
mov
in
mov
pop
add
sub
test
outsl
je
lea
mov
sub
mov
cmp
and
jnp
cmpsl
mov
mov
fldl
add
fadds
mov
cmp
jo
jl
mov
pop
js
xchg
test
mov
push
mov
ljmp
mov
jmp
xor
jo
aaa
jo
faddl
gs
into
mov
out
ror
movl
xchg
lcall
jno
pop
mov
loopne
pop
popf
sbb
xchg
or
rol
adc
sub
push
lods
std
dec
sub
cmpsl
xlat
out
jo
xchg
out
das
pop
push
push
lods
fwait
and
add
xor
inc
es
push
imul
call
dec
pop
int
fs
xlat
jp
xor
stos
cmp
add
mov
mov
or
mov
cmpsl
lret
jno
je
push
add
test
pop
enter
mov
adc
push
jmp
xorl
sbb
fwait
cltd
jmp
test
aas
add
adc
or
pop
add
push
sub
sub
sbb
fidivrs
xchg
icebp
or
cld
outsl
pop
push
aaa
lea
lret
rcl
mov
ds
xor
rclb
and
xchg
mov
push
pop
mov
pop
xor
inc
cmpl
mov
xchg
push
lods
pop
dec
adc
rorb
jne
hlt
adc
test
mov
ljmp
or
loop
and
fstl
dec
add
stos
push
test
aad
or
in
push
incb
dec
sub
ss
xor
repz
fcom
push
cmp
leave
push
call
repnz
loop
int
outsl
cmp
xchg
or
push
xchg
out
test
xchg
or
aaa
and
cli
sbb
jnp
cmp
aad
ss
js
out
xchg
inc
aaa
bound
mov
lea
xor
iret
test
gs
cmp
lods
xchg
orb
mov
ja
imul
push
pushf
add
push
int
push
loopne
outsl
psllw
das
sub
push
movsl
xchg
movb
mov
push
jne
aaa
cmpsl
dec
pop
mov
and
int
nop
lds
imul
inc
mov
jle
orb
mov
jne
mov
loopne
arpl
ja
sti
cwtl
and
mov
loop
pusha
rolb
into
out
mov
xor
fisttps
aas
call
insl
add
mov
inc
insb
mov
mov
test
xor
aad
add
pop
dec
insb
jno
lret
sti
pop
cmp
daa
mov
mov
xor
and
outsb
subb
out
add
lret
js
jbe
insb
mov
inc
xchg
inc
adc
nop
mov
ss
sbb
iret
ljmp
xlat
scas
pop
lahf
xor
sub
int
inc
and
cli
dec
pop
outsl
jecxz
xor
and
out
pop
rcrl
loope
cmp
lds
pop
es
add
leave
add
aam
push
sbb
sub
outsb
sub
imul
inc
in
int
pushf
cmp
push
mov
lret
dec
push
out
sti
out
jnp
pop
not
push
cvtps2pi
icebp
add
adcl
inc
rorb
pop
dec
incl
push
xlat
in
jno
popf
pop
scas
out
lock
push
rcrl
inc
lods
rol
pop
mov
sbb
jle
jecxz
movsl
negb
push
mov
test
jnp
or
lock
bound
notb
arpl
push
in
mov
aas
fisttps
into
andl
outsb
and
mov
push
push
sub
pushf
out
and
out
sarl
mov
adc
xchg
or
adc
sub
push
loop
push
loope
ja
or
movsl
insl
jne
imul
dec
mov
sbb
push
cld
inc
adc
ja
xor
leave
jp
stc
mov
mull
sti
add
jno
mov
pop
sahf
js
ja
push
or
pop
and
pop
jne
jae
out
jle
and
out
int3
pop
cmp
je
in
dec
ja
ja
xor
movsb
cmp
adc
jp
jb
sbb
imul
xchg
sub
or
pop
and
ljmp
cld
je
push
mov
js
sbb
add
out
xor
shl
adc
sahf
dec
stos
jg
test
aad
fdivl
push
loope
andl
jp
cmpb
notl
repnz
mull
daa
fsts
mov
test
jne
fnstsw
in
add
xchg
cmp
xchg
xchg
pop
inc
test
dec
gs
int
into
mov
sub
mov
out
jb
test
jno
int
or
push
subl
shlb
in
imul
popf
sub
jne
jge
leave
bound
jge
xlat
adc
push
cmp
push
stc
aas
inc
xor
jb
and
jno
stc
addl
lods
xchg
dec
pop
jo
push
sbb
stos
sti
sbbl
mov
call
fisubl
add
inc
xchg
adcl
stos
pop
push
scas
adc
out
repz
test
jns
int3
or
or
add
shlb
inc
bound
test
adc
adc
popf
mov
cmp
lahf
aad
jo
test
insb
pop
popa
and
mov
loopne
and
lcall
lahf
xor
jecxz
and
xchg
decl
dec
lret
cld
inc
jnp
das
xor
daa
pop
xchg
pop
adc
cmp
jno
xor
les
jo
push
pop
mov
dec
aaa
mov
outsl
ret
pusha
push
xor
pop
call
xor
imul
sub
cmp
iret
gs
lahf
dec
mov
ja
or
dec
cld
push
push
xor
mov
or
cmp
mov
cmpsb
mov
sbb
xor
sbb
lds
and
cmp
shl
jge
add
and
jnp
xor
enter
loope
int3
out
adc
xor
xor
repz
or
clc
push
ret
sbb
inc
ror
je
dec
call
fmull
pop
and
int
cmc
xor
imul
or
adcb
gs
push
addb
mov
inc
cld
int
sbb
inc
movsb
push
sub
mov
out
fwait
cmp
push
push
test
stos
out
lret
incl
shll
pop
sub
aaa
shll
aaa
cmpl
loop
mov
cs
dec
xor
sub
add
sbb
mov
and
cltd
cmc
iret
sbb
stos
dec
decb
pop
idivb
sub
dec
xchg
pop
loop
and
dec
arpl
sahf
std
xor
fwait
out
push
sbb
mov
cwtl
push
mov
lahf
mov
and
das
xchg
mov
adc
dec
cli
filds
mov
push
loope
inc
sbb
push
mov
shlb
dec
pushf
xchg
sarb
push
add
cmpsl
sbb
jnp
and
and
daa
mov
pushf
jge
xchg
mov
fistpll
addr16
sbb
mov
cmp
jge
jae
mov
loopne
push
fcompl
aaa
gs
push
aas
ret
cmp
pop
jl
fisubrs
pop
sbbl
dec
test
mov
stc
es
idivl
inc
jae
call
call
jno
pop
or
repnz
xor
out
jl
test
adc
xor
push
sub
jne
xor
rcl
mov
pop
cmp
mov
cmp
scas
lods
test
or
inc
jecxz
mov
jnp
push
sub
daa
ss
dec
fdivrs
dec
imul
setb
jne
mov
cs
std
adc
inc
fcmove
aaa
pop
cmp
cltd
lods
pop
lcall
mov
scas
pop
dec
sbb
jb
pushf
xchg
sbb
icebp
out
les
push
ror
lahf
cmp
or
out
test
jmp
mov
jne
mov
mov
jecxz
pushl
lds
pushf
pusha
insl
push
dec
test
xor
repz
xchg
mov
adc
test
or
adc
rcr
daa
sbb
lret
stos
out
sbb
push
pushl
cltd
pop
fs
pop
dec
add
mov
cs
dec
movsb
cmc
cltd
cs
lret
sub
pop
movsb
mov
int
fmul
hlt
shl
add
call
adc
mov
adc
add
sub
jno
mov
cli
mov
xchg
mov
jne
aas
cmp
cld
cmp
cmp
cmpsb
inc
in
inc
insl
dec
gs
jle
mov
pop
inc
ret
cli
xchg
cs
mov
dec
jecxz
jnp,pn
es
add
daa
xor
jae
test
nop
je
lcall
pop
int3
jnp
push
adc
dec
out
dec
lock
or
bound
inc
inc
adc
sbbl
mov
cld
cmp
jne
xor
insl
mov
mov
lret
loopne
push
inc
jne
into
sbb
sbb
ret
jg
repnz
cmp
mov
mov
and
pop
pop
adc
cmc
cmpsl
das
push
jge
testl
test
jmp
jns
pop
shrl
testl
adc
sbb
push
jae
clc
idivb
mov
or
call
cs
fwait
ljmp
push
outsb
in
int
insl
dec
pop
xchg
xchg
cwtl
fwait
repnz
dec
pop
mov
addb
sub
shlb
sub
jne
pushf
icebp
and
daa
inc
jae
push
xchg
pop
stos
ret
or
in
lods
rclb
mov
sbb
inc
sbb
push
mov
insb
ljmp
or
fidivl
xor
call
fwait
dec
mov
adc
cmp
aam
mov
mov
jge
dec
adc
ds
inc
jg
pusha
inc
push
lcall
or
xchg
push
stos
ret
gs
cmp
sbb
xchg
cmp
iret
sub
xchg
mov
jp
subl
in
mov
sbb
push
jmp
dec
sub
ljmp
jp
lods
pop
xor
pop
lcall
testl
lods
inc
std
xchg
dec
pop
add
pop
pop
and
mov
or
movsl
cwtl
out
js
lret
imul
sub
lods
mov
xorb
popf
add
roll
pop
add
pop
je
sub
repnz
pop
int3
int
add
sbb
jmp
sbb
xor
dec
aam
dec
push
push
nop
fldenv
loope
stos
mov
adc
sbb
sub
testb
jle
in
outsb
aaa
xchg
cmp
das
gs
dec
movsl
arpl
and
jle
push
inc
push
addr16
and
mov
repz
mov
dec
loope
mov
lret
xchg
jmp
flds
sub
hlt
lods
xchg
pop
xlat
mov
jno
mov
push
push
ret
lock
or
out
icebp
pop
pop
mov
or
sbb
add
and
pop
inc
pop
out
stos
in
lods
shlb
int
mov
mov
mov
lods
jno
or
pop
dec
shlb
sub
pop
mov
xor
int3
mov
sarb
cmp
pop
shr
insb
mov
mov
adc
scas
xchg
xor
or
lahf
out
fildll
push
loopne
aas
hlt
jmp
add
inc
jle
imul
mov
test
enter
mov
sub
mov
push
mov
push
adc
in
lea
mov
daa
cmp
es
sbb
aas
daa
andb
pop
scas
dec
inc
inc
sbb
test
stc
jg
jecxz
pushf
jbe
lock
test
and
and
xor
pop
adc
xchg
sarl
pop
lahf
andb
mov
imul
fidivl
sbb
mov
sbb
pop
cwtl
and
mov
xor
ret
mov
fs
cmp
pusha
lds
test
loop
dec
xor
dec
dec
outsb
adc
push
andl
out
push
in
stos
lods
lahf
push
pusha
outsl
in
jle
js
dec
inc
loope
dec
jge
scas
pop
insl
pushf
fidivrs
jmp
inc
lret
shll
jne
dec
or
add
lret
cmp
aas
pop
mov
mov
and
sub
mov
cltd
cmpl
mov
test
or
fidivl
mov
ret
ret
push
pop
or
popf
xorl
xlat
ficomps
jmp
test
cmc
xchg
cmp
xchg
xchg
addr16
jp
push
icebp
stc
jmp
adc
ljmp
and
jo
xchg
sub
loop
cmp
sbb
cwtl
inc
push
cmp
mov
out
xchg
cltd
js
popa
imul
dec
scas
jne
pushf
mov
pop
and
std
insl
repz
call
stos
icebp
aam
test
rolb
loopne
hlt
jmp
or
jno
jmp
cmpsl
mov
mov
xchg
mov
mov
mov
movb
imul
sub
outsl
or
paddb
inc
sub
loop
test
mov
inc
iret
aas
and
push
inc
jnp
lock
outsl
xchg
pop
inc
mov
cmp
pop
xor
in
loope
fists
and
inc
mov
pusha
cs
dec
outsl
mov
jp
test
push
loop
shll
jno
pop
dec
dec
mov
fs
stos
dec
fnsave
in
loope
cs
lea
inc
arpl
jno
cmp
inc
mov
pop
xchg
inc
dec
pop
stos
jecxz
test
test
cmp
mov
rclb
jb
mov
push
or
dec
lret
lods
mov
mov
push
adc
jne
pop
arpl
or
dec
mov
mov
or
jns
or
inc
fbstp
std
cs
dec
dec
adc
cmp
mov
jno
cmp
leave
test
jno
ljmp
out
dec
popf
sub
dec
int3
inc
fwait
rolb
or
fmulp
jmp
pop
fwait
push
in
sarb
pop
lahf
scas
shl
jno
rcl
xchg
mov
mov
mov
jns
fimuls
cltd
loopne
sub
sub
aaa
sub
lcall
loopne
jno
mov
dec
mov
cltd
notb
mov
aad
or
insb
cltd
arpl
sahf
idivb
push
gs
mov
and
push
pop
sub
lret
or
ljmp
rcll
loopne
or
push
in
in
inc
enter
test
pop
rorb
cmpsb
mov
cmpsb
mov
jae
inc
mov
jmp
inc
add
js
dec
jo
adc
outsb
or
hlt
fwait
loopne
push
jnp
jne
xor
ljmp
daa
nop
cmp
test
fadd
pop
pop
or
sub
mov
xchg
adc
push
xor
pop
cmc
push
fcmove
bound
sbb
rcrb
repnz
cmp
nop
xchg
and
xor
lret
push
aas
cmp
imul
ret
add
add
adc
js
pusha
push
mov
pushf
lds
push
xchg
push
cld
les
jne
stc
xchg
add
std
pop
movb
sbb
fldcw
cmpl
loop
in
dec
cltd
loop
mov
push
dec
push
sarl
and
lret
mov
cmp
mov
sbb
test
xor
xlat
aaa
mov
xchg
shr
push
jnp
xchg
subl
and
aas
out
scas
dec
push
popf
cli
inc
adc
rorl
mov
mov
outsb
cmpsb
push
jbe
bound
xchg
nop
mov
subl
and
aad
mov
out
sti
in
sbb
mov
xor
stos
loopnew
xchg
push
ss
xchg
sarl
daa
mov
inc
and
int
sbb
or
aas
fisttps
dec
push
mov
push
in
jecxz
add
xchg
enter
movsl
jno
sub
push
cmp
dec
lahf
ret
mov
dec
arpl
inc
xchg
shlb
mov
inc
inc
xchg
daa
sbb
fnstsw
cmpb
aaa
in
jle
inc
cmp
cmp
scas
mov
add
nop
sarl
test
pop
mov
lea
xor
js
mov
pop
mov
or
push
mov
sub
mov
fs
decl
bound
sub
test
imul
aas
pop
mov
fiaddl
xor
adcb
stos
popf
mov
push
xchg
sbb
add
inc
push
pop
enter
sbb
js
fidivrl
insl
dec
sbb
test
jge
dec
inc
jg
sbb
pushl
pusha
addl
jp
xchg
sub
dec
push
daa
test
cmpsl
inc
inc
and
dec
push
clc
inc
add
push
adc
les
push
outsl
xchg
ret
jecxz
out
and
sbb
rorb
lock
jo
sub
iret
sbb
adc
adc
loop
push
icebp
jo
aam
push
add
sbb
mov
adc
jmp
fwait
sub
pop
mov
mov
addr16
stos
loop
pop
jecxz
and
test
adcl
rorl
dec
jecxz
xor
pop
jle
bswap
xor
mov
repnz
inc
lret
ret
dec
mov
stos
cld
mov
and
out
pop
sub
xchg
jle
adc
rorl
jno
add
sub
daa
cwtl
adc
inc
loopne
in
int3
mov
dec
mov
xorb
pop
js
sub
xor
sub
push
xchg
jecxz
xchg
repz
cwtl
xchg
sbb
dec
lret
add
jno
sbb
rclb
xchg
dec
stc
std
push
stos
cltd
jno
pop
adc
jl
pusha
push
push
or
hlt
mov
daa
sbb
arpl
sahf
out
js
mov
add
inc
xchg
add
xchg
or
test
xor
dec
lock
cmpsb
rorl
fwait
iret
cmpsl
jecxz
sahf
jb
jo
roll
pop
into
mov
xor
dec
mov
repnz
xchg
gs
or
data16
jg
or
icebp
xor
dec
ficompl
ljmp
mov
inc
data16
xor
sbb
push
cmp
mov
bound
mov
in
jns
stc
loope
pop
jge
fsubrs
jp
daa
or
js,pt
shlb
mov
mov
pop
xchg
add
pop
repz
out
loop
xor
cmc
jo
lock
cmp
ss
push
fnsave
out
data16
mov
lahf
sub
lds
cs
in
pop
sub
inc
mov
cwtl
or
mov
xorb
pop
fisubrl
int
outsb
aad
mov
mov
and
stos
dec
leave
push
sbb
fxch
dec
std
dec
in
cmp
push
out
mov
fistpll
rcrb
std
int
leave
add
test
hlt
frstor
and
arpl
lret
jmp
iret
push
pop
jno
push
push
sbb
or
lea
push
insl
dec
or
out
jnp
movsl
xor
dec
or
in
xchg
sbb
rorb
scas
xchg
and
cmp
adc
in
pop
sahf
scas
or
sbb
dec
dec
fldcw
test
divl
arpl
pop
repz
or
ds
cmp
test
push
mov
ss
icebp
xor
ja
mov
inc
sub
fld
sbb
test
and
pusha
popf
sbb
push
and
hlt
or
jle
mov
and
adc
push
shrl
shr
lret
sbb
mov
sbb
jle
fstpt
sub
pop
hlt
notl
adc
and
inc
jecxz
cmp
xchg
leave
aaa
inc
inc
jo
aaa
cwtl
test
mov
ret
mov
iret
sub
cmp
call
mov
xchg
ljmp
cli
sbb
enter
nop
fdiv
test
adc
sbb
sub
int3
jp
fisttpl
inc
lods
adc
jns
sbb
push
les
jl
out
mov
es
sti
and
inc
fsubrl
loope
add
sub
xor
pop
jne
pop
xchg
into
and
jae
jnp
or
sub
xchg
jbe
xchg
aaa
dec
cmc
or
dec
cmp
nop
sbb
loope
js
mov
mov
push
data16
shr
push
addb
pusha
pop
inc
in
jbe
jp
mov
movsl
mov
scas
and
sub
pop
pop
mov
enter
sbb
mov
mov
mov
push
scas
and
insl
test
dec
pop
pop
out
push
sbb
sbb
outsb
dec
cmp
jno
push
inc
inc
add
inc
cmc
stos
add
sbb
filds
divb
aad
xchg
aas
mov
cltd
mov
push
repz
pop
arpl
shl
pop
sbb
pushl
add
mov
mov
in
and
dec
and
rclb
inc
lock
outsb
sub
xor
pop
mov
and
aam
adc
mov
sbb
scas
std
cmp
or
inc
xchg
outsb
mov
std
aas
fcompl
add
aaa
cmpsl
lret
mov
fdivs
mov
or
test
fldenv
xchg
jle
xchg
stos
cmp
clc
aaa
xchg
mov
in
jnp
dec
xchg
jle
jbe
es
sbb
addr16
dec
dec
stos
mov
hlt
int3
mov
lods
dec
push
jg
aas
pop
push
lret
pop
jb
cld
idivb
in
dec
mov
jecxz
data16
jg
jmp
clc
lods
mov
cmp
or
lds
or
loop
jmp
jg
test
or
push
and
add
inc
xchg
sbb
jmp
scas
xchg
clc
cmp
test
adc
sbbb
jecxz
lret
pusha
fdiv
push
les
inc
insl
mov
mov
les
xchg
add
stc
lret
mov
aad
jo
inc
push
pop
das
test
ljmp
push
pop
vpsubsw
hlt
das
fstps
cli
lret
out
enter
aam
lea
pminsw
mov
xchg
repz
inc
lret
pop
xchg
pop
addr16
sub
aam
jp
stc
or
cmp
mov
push
pop
sarl
and
std
add
mov
jae
adc
imul
aam
imul
fs
sbb
lods
mov
fcom
daa
js
pop
pusha
cmp
shlb
je
fsubl
shll
lods
and
push
mov
mov
jb
in
cmpsl
pop
push
out
and
into
dec
fistl
test
jmp
add
dec
mov
sub
pusha
xchg
pushf
push
push
pop
adc
je
scas
xor
fdivl
inc
insl
repnz
mov
jo
jns
ss
rorl
push
loop
xor
jb
mov
and
sbb
pop
lds
nop
nop
pop
inc
adc
xlat
jl
clc
xchg
xor
push
les
adc
daa
lcall
xchg
push
push
push
call
cmp
sarb
ret
scas
imul
insl
push
pop
pushf
add
lea
jns
cmc
cmpsl
and
outsl
jl
cmpb
bound
dec
xchg
test
push
add
insl
cmpsl
fistps
jmp
jmp
xchg
and
mov
jl
dec
and
insl
ficomps
shll
xor
inc
mov
pushf
cld
adc
rorb
jmp
rcrb
cld
xchg
repnz
lcall
push
movl
mov
dec
fwait
aaa
bound
mov
dec
pop
pop
or
jne
inc
push
xchg
add
xor
mov
and
ljmp
xor
in
leave
insl
push
lods
mov
and
mov
jle
push
aaa
xor
or
call
add
add
scas
repnz
inc
ss
push
add
pop
xor
in
cmc
mov
mov
dec
mov
inc
pop
lods
aam
cmp
push
andl
xchg
mov
sbbb
scas
push
sti
jp
mov
repz
lock
mov
mov
fbld
imul
nop
imul
jno
adc
push
pop
jmp
dec
adc
pop
repnz
int3
shlb
xor
pop
or
dec
scas
dec
mov
push
push
outsl
clc
jno
pop
mov
push
push
mov
xor
sub
inc
dec
cmp
sub
push
in
shl
mov
in
or
leave
pop
xor
mov
sbbb
dec
push
aas
pop
mov
xchg
arpl
jmp
testb
pop
mov
push
jl
popf
mov
and
ror
add
mov
add
testb
push
mov
sbb
in
jnp
mov
test
mov
mov
outsl
int3
dec
dec
mov
mov
xchg
mov
xor
xchg
mov
into
in
mov
and
in
pushf
or
cwtl
int
faddl
xchg
dec
fdivrl
and
ret
test
imul
pop
gs
push
xlat
jne
adc
cmp
test
pop
xchg
sbb
and
dec
xlat
add
faddl
cmp
dec
inc
adc
fstl
fisubrl
and
xchg
dec
mov
dec
in
cltd
jl
repnz
jmp
outsb
call
pop
mov
lds
xchg
mov
loop
iret
jae
fstl
sbb
pushf
xchg
lret
stc
mov
lahf
cmp
push
cli
pop
idivl
shlb
dec
lret
adc
popa
add
imul
into
test
cmc
inc
jo
scas
out
sub
inc
push
pop
movsl
ret
xlat
out
shlb
enter
sbb
inc
repz
pop
insl
push
icebp
mov
sbb
push
pop
std
lcall
pop
movsl
fwait
mov
ret
leave
xor
adc
dec
push
das
popa
mov
add
mov
nop
dec
ss
mov
sbb
sbb
fistps
cwtl
pop
inc
cmp
mov
xlat
andb
push
or
xor
aaa
rolb
in
inc
sub
loopne
jl
leave
inc
jp
sub
sbb
out
ret
mov
sbb
push
int
arpl
in
adc
mov
inc
loopne
add
popa
insb
jmp
fcmovnbe
daa
rcll
out
mov
nop
xchg
int
addl
imul
jmp
sti
xchg
jmp
loopne
loop
fcomi
movsl
adc
fnstcw
shrl
and
mov
jle
movb
dec
pusha
cmp
xor
adcl
cmc
add
adc
idivl
mov
mov
lahf
push
hlt
cs
pop
jne
mov
aas
xchg
lock
in
jo
out
cmp
in
gs
mov
adc
mov
jae
and
lods
xlat
scas
test
out
scas
xchg
jle
lret
inc
jo
leave
push
hlt
pop
movsb
inc
popf
es
stos
leave
and
inc
movsl
push
adc
jo
jo
and
fwait
xor
push
cmp
subl
data16
dec
popf
sub
not
lods
pop
adc
mov
aam
sbb
adc
cli
jne
xchg
loop
sub
push
imul
sbb
sub
decl
mov
adc
dec
sub
mov
and
fmul
cltd
jno
test
xor
mov
test
emms
or
mov
aaa
sbb
and
es
and
shlb
cmc
addb
pop
jbe
mov
call
add
push
jg
scas
cltd
cmpsl
jns
xor
jnp
jle
pop
dec
test
jns
jbe
pop
push
push
jle
push
lcall
adc
cwtl
dec
outsb
pop
lds
jae
pop
insb
mov
xchg
aad
int3
push
rcrl
jecxz
das
movsl
xor
push
inc
arpl
lds
or
lods
lret
in
out
xchg
hlt
inc
out
cwtl
mov
pop
pop
cmpl
loopne
int3
cmp
jle
xor
fwait
xor
nop
inc
cmp
leave
xor
mov
es
mov
loope
ret
dec
inc
xchg
les
and
cwtl
daa
jae
pusha
xchg
pop
dec
fwait
adc
mov
mov
lret
lcall
xchg
adc
adc
pusha
inc
sub
sub
push
and
add
mov
mov
mov
xor
scas
sub
push
add
loopne
inc
insb
and
jl
fsubl
decb
movsb
cmpb
adc
or
sub
fdivl
inc
mov
push
jbe
ficomps
push
cmp
movsb
fmul
mov
push
dec
mov
cmpl
scas
scas
push
fdivrs
repz
mov
adc
mov
les
sbb
stc
ret
mov
cmp
out
lcall
mov
sub
pusha
xchg
mov
push
cwtl
jno
out
sti
test
xchg
and
imul
xchg
testl
jmp
jle
das
stos
inc
in
pop
sbb
fcoms
imul
xchg
outsl
push
sbb
mov
testl
dec
sahf
mov
jg
dec
loop
cmp
mov
xchg
mov
es
int3
sbbl
ja
scas
add
je
jb
mov
pop
mov
aaa
nop
aas
repz
mov
pop
fs
cmc
add
and
sub
inc
dec
rsqrtps
mov
cmp
sbb
sbb
int3
movsb
loop
mov
xchg
sbb
lods
lea
mov
imul
cs
sbb
leave
dec
and
push
xor
lret
mov
ja
sbb
sbb
aaa
xchg
xchg
bound
fisttps
jle
dec
and
dec
rorb
xor
inc
adcb
imul
xor
mov
mov
adc
notb
mov
in
rcll
imul
sbbb
inc
popf
pop
cmpl
int
jbe
outsl
scas
mov
xchg
je
std
adc
push
xchg
pop
add
mov
xchg
icebp
xchg
jg
in
shrb
mov
lods
call
mov
inc
stos
push
fcoms
scas
add
sbb
sbb
mov
insl
adc
jecxz
push
mov
arpl
bound
test
pop
bound
xchg
testb
sub
push
jo
push
clc
xchg
lret
enter
inc
or
add
adc
test
aas
gs
out
das
or
sbb
cli
ljmp
sub
adc
std
fstpl
jo
pop
in
mov
jb
mov
jbe
fs
add
dec
or
adc
out
pop
mov
xchg
packssdw
test
dec
mov
mov
movsl
inc
cmp
mov
icebp
mov
test
enter
sbb
clc
mov
lea
adc
push
cli
sbb
sbbl
cmc
notb
shrb
aas
ds
sti
jnp
fisubl
mov
outsl
sbb
cltd
push
test
jb
mov
push
loopne
jge
repz
xor
mov
out
insl
sub
enter
jecxz
or
cmp
mov
adc
leave
xchg
divl
jno
mov
mov
int
out
les
mov
jae
cmp
faddl
dec
stc
jg
popf
aas
jecxz
movsb
sub
mov
push
mov
dec
sbb
imul
aas
inc
sahf
out
dec
imul
or
arpl
loop
nop
outsb
dec
sahf
dec
ljmp
clc
inc
or
mov
loope
popf
lds
data16
mov
lahf
cmp
mov
pop
push
in
jne
and
mov
repnz
jns
or
ror
sbb
fsubrp
popf
paddsb
inc
xor
mov
iret
addr16
lds
jecxz
lds
push
dec
cmpsl
out
out
insb
xor
les
push
pushf
cmp
mov
sahf
sub
std
loop
lods
add
sub
sub
fucomip
push
pusha
adc
fnstenv
xchg
ja
ficoml
jl
test
imull
adc
mov
inc
dec
push
cmp
mov
fstps
ret
pop
xchg
add
cmp
int
scas
lea
and
imul
out
lds
dec
mov
lret
repnz
out
inc
aad
push
push
icebp
push
sub
cld
or
and
jle
into
jle
mov
bound
dec
mov
icebp
add
jge
adc
cs
nop
adcb
mov
stc
jmp
sbb
scas
mov
push
pop
shlb
dec
fimull
sub
mov
cld
adc
mov
sub
int3
inc
je
pop
mov
pushf
push
sarb
push
inc
jg
inc
call
sbb
sub
push
and
test
pop
pop
dec
sbb
cltd
dec
jmp
addl
mov
mov
aaa
push
ja
sbb
jmp
xchg
mov
mov
out
icebp
test
mov
jo
loopne
shl
jo
jmp
sahf
into
jb
dec
sbb
inc
adc
out
or
mov
pop
mov
mov
mov
xor
jae
stos
cmp
rcll
bound
iret
pop
popw
sarb
mov
jg
xchg
mov
inc
adc
ja
cli
mov
pop
mov
push
jp
ja
and
cmp
push
xlat
insl
rcll
leave
jmp
and
aam
push
aam
xchg
sbb
dec
pop
xchg
add
xchg
xor
mov
into
or
outsl
es
aad
outsb
sahf
inc
les
imul
fists
jne
imul
or
gs
pushf
sbb
sbb
and
out
popf
mov
inc
popa
pop
cmp
iret
cmp
dec
push
and
or
dec
xor
xor
mov
dec
repnz
stc
add
inc
stc
inc
xchg
fsubl
or
nop
jecxz
fidivl
scas
jnp
loope
lcall
inc
pop
pop
sub
adc
not
popf
cmp
arpl
jns
mov
sub
adcb
fidivrl
cmpsb
inc
push
jle
sbb
add
sbb
pop
pusha
cld
clc
mov
test
loop
jp
cltd
xor
lea
jo
sub
inc
popa
mov
addr16
mov
xor
mov
lret
mov
sbbl
pop
mov
ljmp
mov
jge
fisttps
mov
mov
adc
ret
sub
or
addl
jnp
jp
pop
scas
xor
inc
or
fwait
push
out
pop
sti
out
jnp
popf
mov
test
enter
sarb
or
mov
mov
or
xor
dec
and
fbstp
out
pop
ss
xchg
sub
cmp
pop
and
cmp
dec
pop
mov
sub
jnp
jl
aam
push
mov
xlat
jle
cmp
pop
lret
jecxz
sbb
les
loop
dec
fistpll
xor
out
push
pop
fbstp
or
jne
leave
mov
xlat
jmp
mov
rcrl
popf
addr16
xchg
cmc
jb
jbe
lret
rcl
fistps
imul
push
lods
sub
nop
mov
jo
inc
ja
imul
enter
rcrl
aad
int
adc
rclb
xor
dec
and
test
enter
js
stos
cmc
das
fimuls
xchg
testl
int3
stc
enter
pushf
xchg
inc
lahf
push
aad
mov
stos
sbbb
out
mov
subb
iret
jnp
lock
lods
test
pop
sub
daa
iret
add
inc
popf
fbstp
lcall
out
loopne
aas
push
js
arpl
cmp
lea
pop
pop
leave
xor
mov
rcr
shrl
js
pop
push
add
and
pop
lcall
jne
insb
sub
fiadds
dec
sbb
adc
aaa
inc
xor
test
lret
js
test
mov
push
inc
or
mov
arpl
dec
decb
adc
dec
and
or
dec
add
loope
insl
push
inc
jno
pushf
jg
rcr
xor
ret
sub
inc
push
mov
or
and
or
pop
imul
das
xor
stos
ret
xchg
add
and
jns
sub
imul
gs
jbe
negb
push
fnstenv
ret
or
push
lahf
stc
fxtract
xor
ret
loopne
ror
mov
test
dec
dec
xor
sub
adc
add
adc
insl
int3
xchg
pop
mov
jo
pop
or
sub
mov
push
dec
outsl
xor
rcll
xchg
cmp
cld
popf
mov
sub
inc
and
or
and
icebp
cmp
inc
sub
mov
iret
mov
inc
mov
push
xchg
or
dec
dec
pop
push
lret
addl
test
cmp
popa
scas
xchg
mov
sub
push
rclb
push
and
mov
or
dec
inc
in
jg
cmpl
cmp
sahf
movl
dec
js
into
pop
cli
fistpl
mov
xor
lcall
lcall
in
and
mov
cmp
sahf
cwtl
sahf
jecxz
pop
es
dec
insl
pushf
add
xchg
pop
xchg
shlb
mov
aas
cmpsb
lods
mov
push
mov
xchg
pop
jle
sti
mov
dec
xor
incl
fnstenv
cmp
fnstcw
shrb
testl
mov
std
inc
lret
inc
xchg
inc
xor
mov
jae
lods
add
jbe
out
xchg
cli
stos
ss
add
and
ja
dec
test
mov
imul
mov
popf
or
popa
and
sub
testl
xchg
push
repz
inc
testl
cmp
mov
jle
fs
insl
jbe
sahf
xchg
mov
sub
mov
int
xor
movhps
lds
mov
sbb
leave
adc
dec
pop
mov
dec
cmp
sbb
push
test
push
or
in
mov
mov
or
fadd
pop
inc
jae
push
cmp
rcr
out
inc
cmpsl
imul
gs
push
cmp
imul
mov
outsl
test
sbb
dec
shlb
mov
push
pop
inc
and
jb
mov
and
bound
cmp
xchg
cmp
pop
sti
scas
mov
mov
jo
dec
cmc
xor
rcll
fidivrs
cli
mov
out
js
dec
xlat
test
sbb
add
call
push
shl
xor
xor
mov
mov
sarl
xor
mov
loope
ror
bound
xor
out
or
popf
fildll
sub
out
fdivs
lahf
mov
sub
addr16
cmp
dec
int
mov
arpl
test
dec
sub
dec
lcall
popa
stc
aam
mov
mov
imul
lds
test
cwtl
push
add
fnop
stos
dec
push
cmp
in
fmull
mov
and
rorb
jno
insl
repz
sbb
icebp
ret
outsb
mov
sbb
jmp
jl
inc
push
mov
int
jne
dec
sub
cld
js
fcmovne
mov
mov
mov
mov
lret
xor
rcl
and
stos
jns
mov
nop
push
iret
sub
push
out
pushl
stos
sbb
adc
mov
lods
pop
sar
ret
jle
inc
hlt
bound
mov
in
outsl
jle
xor
push
mov
ret
testb
push
push
or
lods
clc
pop
call
or
sub
mov
les
pop
sbb
add
data16
cltd
pop
loope
out
mov
aad
rcr
push
push
es
push
or
fsts
dec
pusha
lahf
sbb
mov
pop
xchg
les
sbb
mov
int
loop
xchg
roll
jle
jl
lds
dec
ficompl
imul
loope
rcrb
inc
mulb
in
hlt
xor
cmp
add
sub
mov
call
pop
mov
or
mov
in
in
out
mov
mov
ds
xchg
xchg
shl
mov
outsb
mov
inc
sahf
xor
roll
mov
iret
cmc
pop
mov
mov
jle
scas
repnz
cld
sub
pushf
xchg
lret
push
push
inc
jle
xchg
sub
xor
lret
inc
mulb
fisttpl
xchg
adc
cmovg
inc
sbbb
and
les
out
xchg
imul
sub
lea
xor
xor
fucomip
add
ficoml
pop
dec
cmp
and
xor
xchg
rcr
inc
insl
mov
out
and
cmp
mov
out
xchg
inc
jg
jae
inc
mov
loop
sahf
clc
push
adc
jmp
and
push
or
or
popf
adc
lahf
ret
cmp
push
nop
mov
ljmp
in
aad
imul
sub
cmp
push
jo
stos
add
xor
or
xchg
out
mov
ret
inc
pop
mov
in
pop
sarl
inc
xchg
in
filds
mov
aas
ljmp
mov
mov
ret
aas
sub
adc
or
int
push
add
fs
jo
xor
and
scas
movl
mov
inc
push
pop
add
push
pop
mov
dec
inc
int3
loopne
mov
lds
cmp
adc
or
movsl
jmp
int3
lods
and
mov
cli
push
arpl
fwait
push
sub
lret
dec
mov
jp
into
ja
clc
cs
push
loope
inc
enter
in
inc
adc
mov
ss
cs
inc
movsl
out
xchg
scas
cmpsb
fcmovbe
cld
arpl
in
or
cld
cltd
jp
push
jmp
sahf
or
lret
mov
out
fiadds
push
aam
shll
mov
mov
mov
in
push
push
iret
adcl
add
mov
sub
jne
mov
xchg
leave
and
push
lret
cli
imul
cli
sbb
push
mov
mov
add
mov
ljmp
xlat
pop
mov
xor
out
and
lds
jge
insb
xchg
inc
adc
jecxz
adc
repnz
xchg
pop
into
call
mov
outsb
mov
imul
mov
xor
in
fdivs
sbb
fildll
lret
or
ja
sahf
xchg
fdivr
test
movsb
sti
mov
push
aas
push
and
movsl
cmpsl
outsb
jmp
int3
loopne
dec
mov
inc
arpl
fisttpl
xchg
push
mov
push
fwait
mov
fstl
xorl
sbb
xor
mov
orb
xor
cltd
xchg
jge
mov
icebp
stos
repnz
les
fidivs
pop
in
js
pop
std
sbb
imul
inc
inc
fs
and
dec
aaa
or
and
xchg
daa
dec
nop
push
lcall
inc
xchg
adc
cmp
hlt
bound
adc
push
cmp
in
fdivs
les
pop
jb
xchg
fdivl
outsl
xchg
and
sbb
mov
push
cmp
jae
and
ret
addr16
movsb
shlb
pop
lea
aad
push
jl
addr16
lods
cmp
outsl
inc
leave
cmc
shrb
sub
insb
cld
and
outsl
rorl
sahf
fucomip
jae
les
call
shrl
push
std
xchg
sub
je
mov
call
hlt
repnz
in
xchg
pop
mov
lcall
ljmp
fcoml
dec
sub
dec
lcall
mov
out
cwtl
jp
pop
loope
leave
push
stc
cmp
mov
in
clc
push
aas
and
aaa
xorb
ror
pop
stos
adc
mov
pop
or
ss
roll
cmpsb
in
je
dec
jo
je
sti
mov
das
push
push
cmp
cmpsb
sbb
push
sysenter
fcmovnbe
lea
test
int
pusha
inc
and
push
xchg
neg
dec
pop
add
xor
or
mov
lods
jecxz
arpl
jo
in
inc
sub
out
jmp
cmp
pop
out
pusha
push
repnz
ret
popf
lock
push
lret
add
and
inc
mov
lahf
and
imul
add
int
orl
mov
stc
lea
imul
inc
xchg
andb
jp
lds
mov
push
and
lods
cmp
das
movsl
add
ja
jno
mov
sahf
xchg
cmpsl
dec
fcomps
add
inc
in
int
mov
xlat
jmp
push
fisubrl
jno
dec
adc
mov
call
lock
and
test
mov
dec
xlat
outsl
leave
in
mov
sahf
mov
xchg
jb
inc
push
fisubrs
sbb
testb
mov
insb
lods
les
sub
jmp
jecxz
sub
mov
fwait
sub
shlb
test
int
sub
ja
mov
mov
bound
data16
pop
mov
jle
jbe
cmp
push
jbe
nop
ret
push
mov
cmpsl
addb
out
mov
and
aas
mov
ds
push
dec
jp
clc
xchg
dec
xchg
sub
xor
into
cltd
xchg
xor
icebp
xchg
cli
mov
sbb
mov
inc
or
inc
xchg
aaa
faddp
decl
pusha
dec
test
jbe
daa
pop
int3
dec
xchg
add
test
lock
or
out
gs
mov
mov
mov
sub
xchg
nop
mov
sbb
dec
popf
stc
pop
mov
xchg
pop
and
mov
rcll
ret
fucom
std
insl
mov
in
jl
dec
push
xor
jno
ffreep
nop
pop
stos
jo
cmp
adc
hlt
mov
jnp
js
pop
push
ss
popa
add
insb
mov
lds
and
in
imul
cwtl
loope
sbb
add
sahf
fs
cmp
or
jne
or
aad
enter
aam
mov
push
jne
adc
sbb
pop
jno
xchg
mov
lea
fs
add
and
xor
jne
mov
out
cmp
and
subb
ss
enter
imul
lret
push
clc
mov
incb
or
add
repz
sub
insl
lea
push
sub
mov
cmpsb
ss
ja
in
scas
daa
das
adcl
inc
cs
arpl
imul
jbe
sbb
in
mov
lret
dec
sub
subl
jecxz
mov
sub
mov
mov
push
rcl
cld
mov
mov
and
jle
add
inc
fistpl
sbb
inc
fisubrl
call
fsubrs
sti
int
cwtl
mov
test
in
mov
sbb
cmp
les
aam
ja
mov
jecxz
dec
mov
cmp
pop
or
in
into
aam
xor
fidivrl
xor
mov
imul
aad
gs
aad
lcall
pop
scas
xchg
xchg
cmp
mov
out
xchg
sbb
mov
adc
outsb
lahf
addr16
fcomip
inc
adc
xchg
sub
sub
adc
aad
aaa
push
mov
jo
and
add
inc
adc
arpl
add
jmp
xchg
loop
inc
out
aaa
lahf
stos
adc
arpl
sahf
cwtl
cmp
or
dec
add
xlat
push
inc
popa
hlt
nop
mov
fmul
xor
xchg
cmpsl
insb
orl
fbstp
pop
fstps
inc
ljmp
mov
popf
nop
pushf
icebp
cwtl
outsb
stc
fnstsw
shll
inc
lret
mov
sub
hlt
adc
lods
dec
mov
adc
js
rcrb
mov
mov
sub
testb
push
aas
je
shll
subl
mov
movsb
inc
dec
push
mov
fsts
pop
lcall
push
ds
movsb
pop
nop
pop
jbe
and
stos
in
movsl
cmp
inc
mov
mov
and
mov
fisubrl
sub
push
sub
xchg
std
fildl
cmp
movsb
and
js
ljmp
inc
fwait
mov
testb
lods
int3
and
aad
xor
push
pusha
stos
inc
repnz
sub
fdiv
mov
push
adc
jbe
inc
rcl
cli
jae
dec
fidivl
jbe
sub
mov
cmp
jo
ret
push
xchg
rorb
cmp
jae
iret
int
or
stos
in
adc
ljmp
idivl
sbb
push
mov
mov
insb
lret
scas
mov
repz
fidivs
mov
xorb
fiaddl
pop
loop
cmp
push
push
push
push
cwtl
pop
clc
pushl
xchg
add
ror
cmp
push
lret
add
jnp
sti
outsl
inc
pusha
adc
dec
in
inc
xlat
pusha
xchg
sbb
sub
mov
cmc
scas
mov
shrl
jl
mov
pop
jge
sbb
in
jle
sahf
mov
fidivs
xor
int3
scas
xor
mov
cmp
test
outsl
loop
pop
jb
push
dec
xor
hlt
insb
xorb
jp
scas
pop
cmp
pop
sub
push
repz
lock
lret
inc
or
mov
into
mov
fnstcw
test
pop
dec
aas
mov
ret
push
push
scas
imul
add
test
mov
or
cs
mov
sbb
gs
addb
inc
inc
lret
ret
push
repz
lods
dec
in
filds
xchg
mov
mov
subl
gs
mov
xchg
or
pop
jae
mov
pop
cmpsl
mov
out
xor
ret
fmul
stos
frstor
out
fsubrl
cltd
imul
iret
jno
dec
or
sbb
sub
dec
dec
js
jbe
in
mov
and
and
push
add
mov
pop
add
and
push
push
mov
mov
sbb
sbb
dec
mov
cmpsb
mov
adc
movsl
sub
call
add
inc
pop
mov
mov
jo
push
or
stos
jbe
sub
dec
cmp
rcrl
repz
sub
fisubl
jge
jl
sub
pop
cwtl
fistpl
inc
cmc
in
mov
scas
fsub
xchg
addr16
ds
in
lcall
sub
out
shrl
and
or
cs
xchg
in
std
lea
sbb
shl
or
pop
fldcw
loopne
dec
mov
insl
test
sbb
ss
fdivrp
aas
out
in
mov
je
out
cwtl
ret
inc
movups
add
daa
jl
insb
inc
adc
imul
ljmp
stc
ret
loopne
dec
stos
adc
xor
push
mov
popa
lods
sbb
inc
or
dec
mov
gs
mov
sbb
test
mov
pop
repz
xor
divl
sbb
loope
test
jbe,pt
xchg
test
xchg
mov
and
pop
repnz
lea
lods
inc
add
xchg
push
mov
mov
cmp
insl
call
aam
loop
add
inc
out
cli
inc
mov
inc
push
xor
cmpsb
test
out
xchg
xor
popa
dec
fisubrl
jns
imul
lea
xchg
sti
dec
imul
inc
xor
into
std
dec
in
inc
cmpsb
fs
sbb
pop
mov
loope
mov
in
adc
jbe
mov
stos
movsb
cmp
cwtl
add
fisttps
pop
push
lds
mov
sub
sbb
daa
xchg
js
mov
xchg
orl
fidivl
push
xor
and
movsl
cmp
jo
inc
xorb
ds
and
pop
sbb
sub
imul
shrb
addb
mov
mov
imull
lahf
in
orb
outsl
nop
outsl
cli
jmp
es
orb
cld
adc
mov
mov
adc
xor
pop
test
loopne
les
mov
loop
sub
cmpsl
cmp
ja
movsb
filds
mov
outsb
and
jle
push
mov
lret
scas
cwtl
fwait
jecxz
push
inc
movsl
sub
pop
jl
mov
outsb
push
fincstp
mov
aas
push
push
adc
sti
mov
cmp
fnstsw
dec
addr16
dec
ret
fisubl
sbb
aas
mov
push
rorl
lcall
call
lcall
or
outsb
ds
fistl
mov
cs
lock
lcall
or
ret
pushf
add
add
push
sub
les
mov
jecxz
inc
sub
pop
imul
push
xchg
xor
iret
fimull
sahf
fldl
out
cmp
sbb
sub
aas
fstps
loop
mov
dec
enter
xchg
loope
mov
dec
loop
adc
sbb
pop
jbe
and
mov
inc
cmp
mov
das
inc
ret
aad
es
mov
push
adc
sti
outsb
sub
pop
test
call
cmpsl
cmp
je
or
lods
pop
dec
sbb
pushf
jle
sarl
jge
cmp
xor
sbb
aas
daa
push
xlat
push
int3
repnz
int3
push
dec
sub
lea
jns
xchg
jg
test
add
lcall
ljmp
in
add
pop
hlt
dec
bound
mov
sbb
inc
mov
ljmp
fwait
out
jns
sti
mov
scas
out
out
cli
inc
xchg
sbb
ficoms
pushf
cmp
pop
test
mov
cmp
and
xlat
jge
sbb
adc
loope
mov
or
imul
xchg
ljmp
gs
movsl
aas
ret
outsl
sbb
imul
outsb
loope
cmpsb
pop
push
xchg
enter
add
lret
mov
mov
aas
and
fdivrp
in
mov
or
push
mov
cmp
mov
bound
test
push
inc
mov
xchg
pop
push
mov
push
xor
lret
mov
cli
movsl
jle
scas
pushl
data16
adc
mov
sbb
mov
leave
and
xchg
dec
das
mov
xchg
jmp
or
cmp
xchg
add
and
sbb
testb
adc
xchg
es
xor
fs
jg
xchg
addr16
fstps
push
sub
add
lea
push
scas
idivl
jno
mov
cld
pop
sub
mov
loop
jnp
pop
inc
and
or
stc
arpl
enter
ja
fldenv
jmp
add
cltd
lret
inc
sub
roll
adc
sub
mov
loopne
negb
jae
call
lcall
dec
xchg
jns
pushf
or
es
cmp
inc
incb
mov
shrl
dec
or
mov
arpl
adc
mov
scas
jbe
leave
outsb
or
inc
inc
repnz
mov
leave
arpl
lahf
loope
jbe
or
or
pop
add
xor
out
xor
add
aas
cmpsb
mov
js
dec
add
mov
fcmove
arpl
mov
and
inc
fmul
pop
and
dec
fnstcw
les
and
mov
sarb
push
lods
imul
out
mov
sub
fsubrl
jbe
inc
int
lds
cmp
xchg
lahf
pop
jbe
aad
inc
mov
fidivs
cwtl
jecxz
cmp
cltd
in
in
push
jl
add
pop
loopne
mov
jecxz
adc
sbb
dec
pop
sti
dec
sub
rcl
xor
test
mov
subb
test
mov
mov
insl
mov
fisubs
cltd
lcall
sub
loopne
mov
xor
mov
add
pop
or
or
push
sub
cs
ret
and
ss
cmc
pop
and
imul
mov
push
stos
ret
fstp
jns
cli
push
pop
test
testl
add
cmpsb
cmp
imul
mov
and
lods
push
or
add
lea
jecxz
cmpsl
lea
dec
cmc
nop
movsl
cmpsb
iret
push
mov
out
fadds
adc
ja
push
xchg
or
xchg
fsubr
aam
xchg
or
stc
jae
in
mov
jbe
mov
mov
xlat
push
adc
mov
and
je
dec
mov
mov
dec
push
jge
pop
outsl
dec
sti
cs
sbb
insb
popf
sub
mov
dec
inc
pop
clc
xchg
fistpl
push
sbb
fmull
aad
movsb
push
pop
xor
pop
dec
pop
cld
lret
fistl
and
mov
hlt
pop
pop
xorb
xchg
mov
pusha
test
dec
daa
loop
es
add
sbb
cmp
pop
inc
rol
push
fcomps
cmc
in
movsb
ja
add
push
pushf
jle
push
fdivrs
sbbl
out
pop
scas
ss
stos
dec
lds
cmpsl
jle
sbb
je
xchg
movl
pop
pop
cmp
stos
jae
div
sub
fs
add
popf
shll
jge
test
mov
sbb
push
in
or
gs
loopne
enter
mov
sbb
mov
sub
pop
lret
insb
cmp
sbb
std
jb
ja
out
cmpsl
push
lock
adc
in
ret
fs
lahf
pop
repnz
sub
adc
iret
out
fldenv
shll
in
and
pushf
dec
aas
inc
jae
test
popa
pop
add
xor
lock
dec
xor
loop
sub
xchg
outsl
dec
ja
sub
test
pop
in
or
mov
stc
jnp
push
mov
add
sbb
fsubr
or
test
fldl
sar
and
or
pop
sahf
jnp
cmp
mov
add
jp
fcompl
fisttpl
shrb
fldenv
jl
xchg
idivl
sahf
imul
pop
push
lods
jge
push
mov
mov
dec
test
rcrl
cmc
lret
mov
repz
imul
arpl
sbb
or
inc
xchg
das
out
xor
popf
add
adc
mov
jbe
and
and
adc
lds
enter
inc
iret
pop
loopne
xor
jmp
int
sbb
call
or
and
xchg
js
shll
inc
das
xor
and
repnz
pop
mov
rcll
sbb
jp
cmc
and
pop
pop
push
dec
inc
in
sti
push
jbe
mov
push
and
sbb
aaa
push
cmp
or
nop
es
mov
aaa
fidivs
outsb
andl
xchg
sbbl
add
cltd
aad
loope
subb
or
lea
inc
lret
mov
mov
das
out
jbe
dec
int
rcrl
xlat
test
adc
cwtl
std
add
popf
fistps
cmp
xchg
mov
adcb
andl
xor
mov
mov
add
mov
jae
mov
jmp
icebp
ja
dec
cmp
xor
and
lret
movsl
cmc
icebp
jbe
pop
xchg
push
mov
popf
mov
pop
lods
pop
ss
mov
mov
fwait
push
jle
pop
and
fldenv
ror
jg
ja
lahf
gs
dec
ret
xor
sub
cltd
add
add
pusha
ret
cmp
adc
fidivrs
popa
mov
dec
mov
rcr
xor
mov
sahf
lret
mov
jge
xlat
jb
push
ud2
andl
sub
stos
pushf
inc
inc
jne
mov
shlb
adc
jne
xor
or
clc
mov
subb
scas
rclw
mov
es
fwait
imul
xchg
nop
jp
push
pop
sarl
xchg
cs
pop
js
bound
ss
inc
add
or
data16
push
push
mov
and
movsb
jo
mov
dec
ret
jo
sub
xor
sub
sub
sbb
sbb
cltd
mov
pop
insb
cli
and
pop
add
inc
mov
mov
mov
repnz
or
pushl
dec
leave
push
sub
lcall
sti
inc
in
mov
ja
popf
inc
dec
adc
add
pushf
adc
popf
scas
mov
dec
sub
and
jle,pn
popa
push
xchg
pushw
imul
mov
cltd
mov
shlb
add
and
xor
adc
mov
push
mov
inc
sbb
mov
lods
mov
inc
push
jmp
adc
mov
jmp
movsl
testb
fucomp
sbb
push
mov
pushf
cwtl
mov
xor
hlt
gs
jmp
dec
cmp
into
pop
and
clc
lahf
mov
xor
jl
cld
xchg
in
or
loop
lret
jp
outsb
inc
aam
adc
dec
add
shr
imul
cmp
xchg
sub
adc
sbb
mov
add
cwtl
popf
inc
jb
movsb
mov
lret
inc
sub
or
std
loopne
push
inc
cli
add
sub
popw
xlat
mov
or
ja
cmpl
int3
push
lcall
dec
repz
fmuls
rcl
repnz
cmc
push
mov
xor
and
enter
loop
jns
gs
inc
subl
jp
and
push
jge
jge
push
add
sbb
pusha
out
iret
add
xchg
notb
aad
mov
outsl
adcb
sub
push
lods
dec
and
mov
lods
ret
pop
jo
int
out
or
adc
mov
data16
std
mov
ss
loopne
sub
mov
push
or
adcl
insl
xchg
jb
inc
pusha
mov
dec
fcmovb
pop
divb
sub
popa
ljmp
dec
mov
rcll
es
rcrl
pop
adc
loopew
mov
faddl
xor
push
sub
mov
adc
in
ds
cwtl
adc
ja
inc
inc
mov
xchg
inc
fdivrl
enter
mov
out
add
ret
mov
jmp
movsl
inc
or
jmp
sahf
lods
cmp
adc
fstpl
sahf
add
push
test
and
fs
or
push
aam
data16
xor
pop
mov
ret
rolb
jb
pop
sub
pop
xchg
iret
cwtl
mov
insl
icebp
or
imul
push
loopne
daa
xor
mov
push
xor
leave
mov
movsb
movsb
sti
push
jp
dec
daa
mov
aad
fwait
lock
gs
jge,pt
dec
xchg
xchg
push
mov
dec
aam
arpl
cmp
mov
cmpsb
jb
sti
push
pop
subl
mov
jnp
subb
test
in
xchg
adc
shr
xor
xchg
mov
push
in
repz
push
add
push
inc
in
xchg
loopne
cmpl
inc
in
scas
in
inc
loope
mov
dec
push
inc
leave
cmp
xor
faddp
outsl
push
push
inc
cs
dec
add
xchg
ret
jmp
mov
sbb
fwait
lcall
inc
lea
sbb
sbb
pushf
cmp
sahf
iret
inc
pop
xchg
cmp
pop
add
pop
mov
or
aaa
or
frstor
ficompl
negl
xor
mov
mov
cmpsl
rorl
sti
sbb
inc
jp
push
rcrb
push
aas
and
and
imul
scas
pushf
cvtps2pd
faddl
in
add
pop
jge
stos
push
pop
mov
xorl
cltd
add
inc
mov
xor
imul
jnp
aas
loopne
sarl
dec
popf
xchg
dec
mov
popf
push
popf
mov
add
cwtl
inc
cmp
inc
and
dec
jp
mov
cmpsb
fnsave
cmp
push
cmpsb
inc
mov
ds
sub
pop
pop
aad
mov
mov
mov
aam
jle
in
mov
imul
test
loope
xor
aad
flds
cli
mov
and
dec
mov
fisttps
addr16
lods
stos
xchg
adc
sarb
test
ss
in
jge
cmpsl
enter
into
pop
clc
sbbl
xchg
jb
mov
out
or
xchg
mov
push
push
pop
cltd
xor
cmpsb
mov
pushf
aaa
inc
and
pop
or
or
cld
lock
xor
jmp
rolb
sbb
daa
add
xchg
dec
clc
nop
arpl
mov
and
iret
cwtl
sbb
mov
mov
scas
push
jne
xchg
jecxz
xchg
movsb
aas
xchg
push
shl
xor
inc
lds
adc
mov
in
stc
test
inc
push
xor
mov
repz
lahf
ja
test
sub
stos
dec
movsl
mov
rcll
xor
lcall
or
pop
add
add
popf
sub
out
mov
ud1
mov
xchg
dec
dec
push
lea
mov
xlat
rcll
popf
xchg
mov
aas
imul
mov
ja
push
adcb
enter
in
ljmp
les
cmpsl
dec
push
andb
pop
inc
shlb
mov
aas
push
ds
mov
call
jae
jmp
aam
pop
hlt
fs
ret
pop
adc
inc
ror
pop
or
jle
rorl
arpl
add
daa
xlat
lods
sub
adc
scas
sbb
cmp
ja
movsb
xor
cmp
imul
pop
out
jns
stc
js
push
pop
and
enter
outsl
xor
and
jmp
in
fidivl
js
aam
rdmsr
mov
push
mov
lahf
lods
push
push
mov
adcb
je
dec
jns
mov
mov
das
cmp
test
scas
int3
loopne
movsl
aam
movsl
xchg
sub
dec
mov
stos
out
sbb
fisttpll
add
adc
enter
or
cmp
inc
sbb
pop
sbb
fstps
cmc
jg
push
icebp
or
jp
pop
inc
mov
fnstsw
orl
fnstsw
mov
push
mov
movsb
cltd
dec
jo
lret
gs
outsl
dec
fs
call
loope
ja
inc
ret
and
xor
push
jne
sbb
loop
outsb
pop
jnp
mov
jp
int
sbb
xor
fwait
xchg
push
sti
lods
sbb
mov
add
adc
ja
std
hlt
ret
xchg
aam
mov
pop
fdivrp
outsb
scas
cmp
cmp
test
push
addr16
loope
test
in
xor
popa
jnp
ds
test
adc
adc
aam
mov
in
cmpsl
jge
int
fnstenv
fsts
push
loope
xor
ficoms
data16
icebp
cli
jnp
pusha
pushf
mov
sbb
mov
sub
inc
decb
out
and
sbb
xchg
pop
sub
add
insb
inc
push
clc
out
push
lock
inc
pop
aam
mov
push
inc
stc
mov
js
sub
rcll
es
insb
cmp
or
cltd
out
jae
fiadds
jmp
test
mov
cmp
inc
in
pop
mov
movsb
or
cltd
pop
fsubs
xchg
lcall
pop
xchg
push
fnstcw
or
jno
sarl
xor
xor
out
adc
xchg
mov
jl
fnstcw
xor
xchg
lahf
push
mov
mov
fsubrp
lock
cwtl
insb
cld
cwtl
mov
adc
pop
lcall
pop
repnz
imul
pop
add
dec
stos
and
jne
pushf
loope
dec
lret
mov
lret
cmp
clc
out
xchg
add
or
shl
jae
shr
stos
ljmp
push
scas
pop
mov
sbb
mov
xor
repnz
nop
mov
adc
pop
fistpll
dec
imul
sbbb
or
jns
repnz
push
xor
das
subb
jb
mov
mov
das
lret
ret
cs
cli
add
vsubps
hlt
imul
jb
ljmp
pop
sub
mov
scas
cltd
ret
sub
jne
push
in
loop
and
outsb
push
lret
cltd
idiv
ret
out
pusha
arpl
xor
arpl
mov
int3
sbb
enter
sub
imul
push
imul
aaa
iret
hlt
rsm
or
enter
adc
test
cmp
repz
mov
das
jae,pt
sub
or
sbb
test
sub
scas
sbb
jge
sub
js
int
mov
or
mov
addr16
mov
stos
insb
shlb
ljmp
fwait
mov
dec
hlt
or
cltd
sub
jle
or
push
push
pop
xchg
pusha
cmpsl
push
ret
loop
mov
je
negl
dec
pop
cmpsl
ss
mov
in
loopne
adc
nop
sti
cld
hlt
push
mov
das
or
js
dec
enter
and
cmp
gs
les
mov
jmp
sub
scas
hlt
aas
dec
loop
stc
adc
push
sbb
adc
fistpl
mov
jnp
aad
mov
outsb
xor
ds
fsubrl
pop
pop
xor
pop
adc
cmpsl
or
fildl
test
jmp
jmp
aas
add
movsl
je
inc
arpl
mov
xchg
imul
mov
out
jns
push
jbe
cmp
push
mov
add
imul
shll
jmp
das
jp
dec
sti
mov
jg
cli
inc
cmpsl
or
leave
pop
xchg
rcrl
adc
call
xchg
push
pop
push
cmp
adc
push
jmp
push
test
xor
mov
pop
es
fs
push
adc
push
sbb
int3
xor
popl
stos
push
fdivl
scas
mov
adc
xchg
and
pop
push
rcrb
movsl
mov
mov
pop
test
pop
dec
sbb
fidivrs
inc
xorb
push
fldt
push
xor
ficoms
fnstcw
sbb
jle
or
adc
nop
popf
faddp
arpl
daa
jns
dec
ljmpw
dec
jp
xchg
mov
loopne
adc
mov
ja
mov
adc
fdivrs
sbb
pop
dec
mov
mov
mov
std
dec
jg
in
cmpsb
push
insl
cld
xor
or
cmp
repz
jns
test
rorl
and
push
add
xlat
add
fbstp
mov
sub
frstor
add
test
daa
or
call
rol
pop
or
test
sub
pop
repz
orl
repz
adc
fcmovne
push
insl
or
lea
mov
xchg
pop
add
jo
ret
gs
out
cli
jnp
or
mov
dec
pop
sbb
arpl
lret
xor
shll
test
subb
adc
stos
mov
adc
sbb
movl
nop
sahf
cmp
cmc
cmc
mov
xchg
add
fmull
and
fidivl
adc
out
mov
fistl
fidivl
shlb
cmp
je
out
dec
pop
out
mov
lods
jnp
and
popf
jne
stc
adc
pop
stc
sar
gs
jns
lret
sub
lahf
jl
push
rcr
push
insl
inc
in
clc
pop
sbb
mov
push
dec
lock
aam
aaa
sbb
shl
mov
fldl
jp
cli
jecxz
cmp
sbb
push
ret
xchg
imul
adc
mov
loop
and
jle
daa
mov
jecxz
sub
sub
jp
mov
or
mov
ljmp
fxch
jo
xchg
inc
insb
add
xlat
mov
pusha
test
std
repnz
sub
push
mov
daa
cmp
inc
inc
imul
in
xchg
xchg
dec
loope
add
ret
in
int
add
mov
out
inc
inc
jle
xchg
scas
mov
cs
mov
ss
add
inc
popf
push
outsb
aaa
sub
das
cli
jbe
aam
lret
cld
test
adc
dec
outsl
xchg
xchg
jno
movsb
mov
ds
bound
and
cli
jno
loop
pop
loopne
add
sbb
inc
mov
out
adc
xchg
les
lcall
out
xchg
adc
or
outsl
lcall
push
ljmp
test
aaa
in
sbb
imul
shl
imul
arpl
stos
mov
fsubl
inc
mov
add
paddsb
lret
add
cs
mov
jp
add
seto
pushf
sbb
sub
ljmp
sub
xor
les
cltd
jp
fiaddl
dec
adc
hlt
pop
aaa
and
sti
loope
mov
mov
addr16
push
pop
push
pop
nop
nop
stc
and
mov
mov
rcl
push
xor
repnz
mov
dec
jl
mov
sarl
jnp
push
add
das
movsl
ret
cs
add
inc
movsl
mov
mov
mov
or
cmp
mov
pop
imull
aam
inc
shlb
jne
jge
push
lret
cmpsl
and
imul
movsb
imul
push
sub
and
popf
xchg
xchg
loope
or
insl
outsb
aam
insb
lods
fdivr
xor
pop
adc
shl
mov
mov
cmp
jmp
jns
jae
add
xchg
outsb
loope
jecxz
push
xor
aad
inc
int
dec
fcomps
daa
push
leave
bound
mov
dec
movsb
outsl
aam
push
sub
daa
jecxz
int3
xchg
into
push
lret
insb
push
xlat
push
aad
push
mov
push
add
adc
mov
or
fstpt
xor
stos
nop
sbb
dec
das
and
mov
mov
cmc
xchg
or
pop
xor
xor
mov
out
dec
pop
popl
xor
and
out
popf
pop
sahf
push
js
int
movl
push
mov
sarb
adc
shll
push
sub
push
inc
stc
fsts
movsl
sbb
clc
rclb
jns
xchg
pop
add
aam
xchg
outsl
nop
ret
icebp
lods
fdivrs
fsubr
movsl
and
scas
jge
inc
push
sub
add
push
pushl
out
lahf
or
cmp
mov
and
leave
add
jl
add
fucomip
jmp
fisttps
sub
rcrl
test
insb
loop
push
decl
jno
push
mov
sub
inc
xor
pusha
int
adc
aam
sub
aaa
lret
push
push
stc
aad
inc
or
push
pop
and
mov
ja
dec
mov
aam
hlt
stos
imul
fcmovbe
std
pop
sbb
jne
pop
push
das
sbb
lcall
repz
popf
ret
jae
mov
pop
push
sub
adc
cwtl
ret
imull
movsb
mov
adcb
mov
icebp
stos
push
inc
mov
or
jge
pushf
mul
test
sbb
cmp
push
imul
push
jnp
cmp
fdiv
adc
xor
jne
ja
sub
lds
data16
or
ss
inc
es
xchg
add
pop
out
pop
cmpsb
pop
je
daa
idiv
push
or
lcall
std
scas
addr16
inc
mov
fcoms
negb
mov
pop
push
pop
imul
stos
sub
mov
cmp
or
mov
mov
dec
jg
mov
adc
jg
pop
push
out
adc
xor
aaa
sbb
mov
bound
lret
lahf
ljmp
xor
dec
test
fmul
push
repz
movsb
pop
ficoml
outsl
jmp
dec
push
subb
jae
sbb
mov
leave
call
add
inc
leave
sbb
or
pop
jae
insl
sub
js
dec
aam
pop
adc
push
jns
ret
out
leave
stos
sub
or
shlb
repz
lea
les
rcrb
jl
cmpsl
jmp
scas
xor
mov
jb
lds
jmp
mov
hlt
popf
lcall
ret
bound
lock
insl
add
test
add
nop
ss
lcall
std
outsb
adc
inc
pop
lea
cmpsl
imul
call
adc
shll
scas
std
push
call
out
or
test
adc
cli
xchg
mov
push
jne
loopne
push
in
and
xor
cwtl
dec
cmp
and
cli
jp
inc
mov
xchg
xor
loope
push
jb
mov
sahf
dec
xchg
lods
scas
enter
scas
mov
lcall
mov
cmp
in
fidivrs
sub
xor
insl
push
loope
push
push
xor
fildll
das
lods
mov
xlat
rcrb
insl
mov
test
jl
pushf
mov
loope
mov
imul
test
xor
or
dec
bound
xor
inc
jmp
adc
aas
outsb
imul
mov
repnz
test
xchg
pushl
clc
subps
lock
out
cmpsb
xor
mov
mov
daa
fwait
mov
pop
in
xchg
add
xor
sub
push
mov
sbb
mov
sub
int3
adc
rcll
push
dec
movsl
xor
push
and
cmp
mov
dec
les
stc
add
mov
aad
enter
sub
xchg
mov
jne
sbb
or
repnz
iret
pop
push
rol
aam
ret
push
jle
xor
popa
loope
push
pop
pop
cs
sahf
push
daa
xor
in
push
dec
inc
gs
sbb
pop
or
xor
outsb
sbbl
and
outsl
inc
cmpsl
fistl
mov
jnp
jg
insl
outsl
test
push
int
xor
rolb
mov
fwait
sub
pop
repnz
pop
dec
push
jns
sbb
mov
mov
xor
mov
popa
cmp
ret
lea
inc
loope
jno
pop
fucomp
pop
xlat
inc
adc
cmc
or
add
jns
cmp
sbb
inc
xor
adc
push
decl
jbe
das
imul
cmp
push
outsl
mov
and
das
xchg
sbb
and
pop
cld
inc
jae
xor
arpl
push
jae
jns
pusha
mov
jl
mov
lret
insb
add
jmp
add
out
test
mov
xor
or
cmp
sub
xchg
jg
ja
mov
je
and
cwtl
pop
pop
es
sti
pop
daa
pop
mov
sbb
lahf
jo
sbb
pop
and
sub
mov
or
shlb
pop
pop
sti
sub
cmpsb
cld
mov
subb
loop
inc
stos
xchg
fcmovb
fisubrl
outsl
dec
mov
cmp
mov
cmc
cmpsb
ficomps
sahf
testl
xor
and
jbe
or
arpl
mov
sub
lret
in
pop
lock
lret
adc
jle
mov
inc
inc
sub
fdivrs
push
cmp
xchg
inc
sbb
sbb
divb
ss
push
jg
adc
push
aas
or
jb
pop
jge
inc
loope
in
push
fsubr
jmp
jb
ret
imull
jno
ljmp
jae
stos
cmc
mov
sbb
test
add
cmp
mov
push
fsubp
push
sbb
mov
movsb
cmpsb
pusha
pop
insl
mov
xor
dec
inc
ja
mov
sbb
jmp
ss
jo
mov
mov
ja
jb
and
and
jo
pop
lds
inc
imul
enter
xchg
sub
out
mov
dec
addr16
je
sbb
mov
mov
addb
nop
loopne
push
ror
dec
cmp
mov
dec
or
mov
mov
lcall
push
xor
fnstenv
jo
jne
and
xchg
fcomps
mov
sub
lret
outsl
cmp
mov
push
or
dec
imul
fists
adc
icebp
lods
jns
dec
adc
sbb
inc
push
or
pop
or
sahf
ret
fwait
loopne
xor
lcall
cmp
pop
popf
pop
push
sti
mov
mov
xchg
les
insb
test
and
int
dec
mov
push
outsl
fdivl
call
ret
or
imul
sub
mov
fnstenv
lods
pop
int3
jmp
aad
push
out
mov
insb
cmp
push
outsl
or
les
xchg
pop
xor
jne
mov
movl
jge
fxch
push
cwtl
inc
call
push
pop
arpl
mov
movsl
aad
jmp
jo
xlat
sbb
pop
pop
jl
push
jmp
push
push
adc
rcrl
adc
mov
dec
fbstp
xchg
inc
cmc
stos
lock
jmp
int3
pop
fs
mov
mov
pop
mov
push
xor
sbb
inc
fisubs
cmpl
lret
or
lahf
mov
ljmp
arpl
cltd
push
cs
lods
ss
push
ret
bound
sbb
int
mov
das
push
cmp
ror
and
ret
add
mov
into
mov
imull
addb
jle
mull
xchg
cmpsb
jno
xchg
add
inc
cmp
es
xor
inc
or
rorb
inc
shl
mov
mov
mov
adc
test
shll
or
jge
xor
sahf
mov
dec
fs
jo
popa
mov
icebp
repz
push
xor
xor
and
sub
mov
test
xchg
movsl
cmc
lcall
push
popa
loopne
div
pop
push
outsb
iret
movsb
fidivrs
jne
and
bound
inc
xchg
movsb
aas
js
fisttpl
fdivs
xor
push
cmp
cmp
sahf
loope
pop
or
js
fstpt
stc
out
pop
inc
outsb
cmp
dec
xchg
aas
adc
jge
loop
arpl
fldcw
scas
sub
mov
es
out
mov
call
aas
jno
es
imul
jb
inc
daa
xchg
ss
dec
cwtl
pusha
jbe
adc
int
adc
sbb
xlat
pop
xor
and
mov
cs
enter
push
push
call
in
in
jo
inc
sar
pop
pop
jle
gs
das
movsl
sub
int
sbb
or
sbb
in
cmpsb
inc
out
mov
fisttps
jne
inc
cmp
cli
ficoml
pop
fbstp
cmpl
add
in
cmp
mov
aas
or
popf
jnp
icebp
lock
jbe
push
dec
dec
inc
add
loopne
and
xchg
add
and
mov
add
push
into
mov
mov
xor
push
gs
stos
adc
dec
das
sub
fsubrl
sbb
shlb
sub
and
mov
xchg
mov
push
mov
xlat
push
pop
imul
sarb
dec
jbe
test
pop
subb
xchg
sbb
mov
jmp
hlt
lds
fsubr
cmp
arpl
mov
outsl
leave
inc
sarl
xchg
mov
jo
enter
dec
mov
push
mov
sub
mov
lods
jle
mov
outsl
xchg
arpl
cmpb
dec
fsubr
in
cmp
insb
adc
popf
outsb
into
std
and
dec
cmp
jb
into
push
xchg
cli
push
in
adc
sbb
stc
cmp
sar
adc
cmp
pop
jb
mov
mov
inc
mov
test
popf
fwait
loopne
add
jns
cwtl
mov
mov
aaa
xchg
jp
push
ficompl
xor
fstl
repz
xchg
rcll
nop
mov
jno
imul
adc
sub
cmpl
push
out
jnp
negl
std
sub
sahf
jbe
add
cmp
fwait
cmpsl
cmc
cmp
sbb
das
lds
es
cwtl
out
je
outsl
mov
cltd
and
push
pop
inc
add
in
cmp
int3
lock
push
stc
sbb
stos
int3
ja
aas
shll
push
enter
cmp
sbb
ret
or
push
mov
int3
push
ljmp
stc
sahf
loopne
ficoml
xorl
jb
and
xchg
inc
mov
bound
js
notl
inc
js
push
ja
cmpsb
movsl
jle
andb
aad
stc
fstpl
mov
push
subl
mov
popa
lea
sub
dec
sub
or
adc
sbb
xchg
dec
push
orb
jge
movsl
ficoml
js
mov
add
loope
add
test
es
pop
or
mov
sbb
pop
mov
mov
push
test
mov
fcomp
sbb
jmp
jne
mov
jbe
int3
sub
sbb
and
mov
push
mov
and
ret
cmp
mov
push
icebp
dec
int3
orb
adc
push
mov
scas
gs
jae
mov
and
mov
repz
hlt
jp
cmp
rorl
push
out
movsl
sbb
subb
out
push
pop
adcl
fwait
mov
out
cli
jmp
andl
pop
jecxz
push
inc
lret
add
mov
sub
mov
or
iret
out
mov
jp
sbb
arpl
xor
stc
adc
cwtl
add
hlt
xchg
cmp
xor
das
add
les
xchg
sbb
mov
cmpsl
mov
and
pop
mov
push
icebp
sub
inc
jb
lea
movsl
popf
loop
cmp
xchg
mov
test
aam
mov
jae
rcrb
add
jno
into
dec
jl
aas
cli
pop
call
push
movl
fldenv
movsb
mov
aad
cli
fistpl
xorl
pop
pop
pop
add
or
movsb
fadds
and
jns
hlt
xchg
jno
outsl
jecxz
inc
jecxz
lcall
insb
movsb
mov
lcall
lock
inc
mov
sbbb
loope
lret
jbe,pt
push
clc
mov
addb
push
insb
test
fs
cmp
mov
iret
les
sbbb
cmpsl
pop
outsl
sbb
movsl
mov
mov
adc
in
jge
stos
lahf
movl
xchg
sbb
jns
out
mov
jbe
enter
mul
pushf
test
clc
mov
mov
test
push
enter
lahf
add
jecxz
rolb
fimull
movsb
or
adc
out
adc
dec
fs
test
lock
cli
lret
dec
mov
sub
movq
cli
push
in
jnp
inc
sbb
jae
jns
rolb
jnp
imul
data16
scas
mov
in
fsubrp
in
push
mov
popa
push
inc
mov
push
shl
test
mov
bound
jo
mov
popf
cmp
call
movsb
nop
mov
cmpsb
cmp
xlat
or
test
push
sbbb
mov
ret
mov
inc
fs
enter
xor
inc
in
push
aas
xchg
or
shrb
dec
sbb
cmp
mov
inc
inc
shll
movsl
sbb
scas
imul
cmpsb
test
js
cmp
je
shlb
sti
iret
je
iret
out
push
push
scas
rclb
outsl
das
or
xor
fsub
jno
lahf
pop
stos
push
ss
lods
mov
mov
subl
dec
mov
aam
call
add
cmpsb
sbb
adc
aaa
or
xchg
add
js
sbb
outsb
and
rorb
fisubrl
jmp
enter
outsl
in
leave
gs
mov
test
jb
sbb
jno
dec
adc
in
out
push
int3
mov
sbb
mov
shlb
push
mov
dec
mov
sub
mov
mov
clc
add
repnz
mov
stc
aad
repz
add
es
jo
cmp
dec
dec
jp
iret
push
loopne
push
adc
lret
fstpt
push
xor
add
sub
mov
lds
mov
or
enter
shll
mov
push
lock
jecxz
stos
dec
in
mov
clc
lcall
jg
aaa
cmpsb
xchg
pushf
and
push
and
dec
clc
mov
fildll
cmp
jb
pop
cmp
shlb
gs
icebp
inc
js
add
push
icebp
push
ss
mov
mov
mov
cmpsb
cmp
stos
pop
std
mull
insl
insb
dec
test
sbb
addr16
pop
mov
fs
adc
pop
pop
lret
pop
fidivs
insb
or
jecxz
dec
sub
mov
js
mov
mov
pusha
jno
push
dec
xchg
iret
mov
jne
or
gs
testb
mov
and
repz
mov
in
jl
lea
xor
dec
dec
scas
mov
push
mov
push
mov
addr16
dec
out
aad
or
imul
mov
and
jne
bound
push
movsl
fildl
xchg
pop
adc
mov
adc
fimuls
jmp
sbb
cli
dec
jbe
xchg
sub
shll
add
push
stos
ss
pop
dec
mov
andb
je
jne
popa
xor
insl
scas
out
fsubl
cwtl
and
xchg
scas
xchg
in
lahf
movsb
mov
ss
mov
pop
lock
push
jl
sbb
stos
cmp
js
aam
scas
cli
bound
adc
mov
mov
ja
push
xchg
cmp
lods
loop
shll
outsb
lods
and
ret
ss
xchg
out
repz
sti
repnz
gs
jno
les
enter
xor
shlb
orl
mov
pop
pop
test
insb
sub
fiadds
push
cmpsb
aaa
fdivs
lret
scas
cmp
xor
lcall
ss
das
pop
dec
sahf
test
bound
push
inc
lds
push
sbb
push
lods
xor
in
lret
dec
das
cmp
in
mov
xchg
jb
cwtl
jg
rcrb
jecxz
inc
hlt
sahf
sbb
lock
lea
mov
add
mov
lcall
inc
add
xchg
fst
out
shl
mov
add
sub
hlt
loope
dec
jge,pt
ljmp
loop
fbld
leave
lock
push
insl
daa
add
lods
loop
fcomi
insb
dec
jg
test
repz
jle
imull
movsl
xchg
and
fstpt
out
rclb
loop
loopne
ss
movq
mov
sbbb
in
aaa
jnp
and
bound
fsubrs
and
and
cmpsl
in
lods
pop
jmp
xor
cmp
fisubrs
test
arpl
popf
inc
sub
and
imul
aas
xor
ficompl
in
lret
andl
mov
test
rsm
mov
shl
clc
or
jns
sbb
sub
dec
mov
scas
mov
inc
mov
add
inc
clc
adc
jbe
push
cld
lods
mov
mov
or
xchg
mov
mov
in
je
dec
adc
enter
push
inc
fnstcw
aas
add
int3
out
push
addr16
adc
xor
repz
lods
clc
dec
jnp
xchg
call
sbb
and
loop
dec
sahf
mov
jo
outsb
in
ffree
xchg
jbe
cld
das
les
sub
imul
dec
cmpb
fdivrl
lds
push
mov
loope
stos
mov
shlb
xchg
push
push
add
ret
dec
dec
xlat
fldcw
cltd
mov
loope
ss
clc
jl
dec
jg
or
dec
fnstcw
movsb
mov
fidivrl
out
push
dec
dec
in
sarb
js
addb
aad
rorb
jmp
jl
lar
push
cmp
lret
jle
ret
bound
aad
jne
jecxz
adc
mov
push
mov
pop
sub
cwtl
test
outsl
les
test
xchg
aas
mov
mov
rcrl
or
loop
cs
mov
movsl
sbb
sbb
jmp
mov
adc
dec
dec
pop
mov
mov
enter
pop
mov
in
push
or
shll
mov
push
mov
orb
mov
adc
and
aas
call
cmpsl
pop
mov
jg
push
push
lods
pop
cmp
push
and
js
adc
clc
mov
loop
aam
shll
ret
lods
push
dec
aaa
sbb
or
pushf
ds
mov
int3
sbb
ret
jno
es
push
cmp
in
dec
out
in
inc
stc
mov
test
pop
dec
xchg
mov
mov
sahf
cltd
and
inc
jle
stos
sarl
clc
xchg
add
pop
cs
imul
imul
or
rcl
mov
repnz
ja
dec
sub
sub
mov
cmp
xchg
mov
pop
rcll
out
xchg
out
push
xchg
xchg
hlt
pop
loop
adc
xlat
stos
jne
xchg
stc
popa
add
test
daa
cli
jnp
mov
sbb
pushl
scas
out
adc
adc
and
sub
into
es
adc
mov
sbb
aas
lock
or
and
icebp
jle
or
push
push
repz
ror
aam
and
xchg
xor
lret
fbstp
psraw
ljmp
cmp
sub
mov
sbb
pusha
or
jbe
sub
xchg
sbb
sub
loop
aad
lock
jno
xor
dec
inc
repz
mov
dec
mov
test
mov
scas
cmp
push
push
and
clc
cwtl
rcll
outsb
in
js
xchg
shll
fs
adc
in
daa
fidivrl
lods
or
les
cmc
clc
lret
mov
add
aas
cli
inc
stos
cmp
pop
mov
mov
cltd
inc
jle
sub
cmp
jmp
mov
in
push
mov
mov
outsl
repnz
push
ret
gs
adc
adc
push
push
jmp
xorb
stos
inc
jmp
xchg
push
test
daa
sub
rorl
or
mov
cmpsl
test
inc
cmp
cmp
sbb
inc
cmp
hlt
fldt
mov
xor
lret
jl
cmp
jg
lcall
or
mov
push
lock
stc
jl
push
lret
cmp
dec
jmp
jle
psubb
ljmp
std
mov
cmp
push
xor
fiadds
sub
rol
imul
mov
pop
popf
inc
xchg
cmp
ljmp
scas
pop
xor
rol
lahf
push
jnp
sub
popa
ret
pop
sbb
adc
mov
add
sbb
xor
pop
mov
pop
shrl
inc
xchg
jge
fisttpl
or
shll
cmp
or
mov
js
xchg
mov
mov
mov
mov
sub
cmp
xor
cli
fwait
ljmp
lods
popa
jbe
out
in
pop
scas
decb
in
lret
mov
mov
inc
sti
mov
repz
jnp
repnz
pop
xchg
shr
shll
push
ljmp
xchg
in
fsubp
fsubl
bound
lods
popa
stc
loopne
ljmp
cmpsb
cmp
shlb
xchg
dec
inc
push
adc
jp
mov
cltd
insl
push
lcall
test
daa
test
outsl
enter
sub
je
inc
push
daa
sbb
jb
inc
cmpsl
mov
cmp
push
iret
jo
inc
mov
gs
icebp
jge
mov
popf
xchg
insl
int3
cmp
pushf
xchg
mov
push
pop
push
push
mov
loope
ret
int3
and
out
add
sarl
pop
shrb
pusha
xor
jno
cmp
faddl
jmp
popa
pop
add
sbb
cmpsb
cwtl
loope
pop
push
orb
scas
cmp
movsl
das
sub
mov
outsl
dec
dec
test
leave
jl
and
pop
cltd
sarl
pop
out
repz
lea
inc
insl
cli
vxorps
inc
push
scas
je
imul
fnstenv
dec
mov
pop
mov
xchg
add
adc
inc
and
ss
leave
outsb
mov
push
call
daa
sub
jb
andb
ret
push
inc
or
lds
popa
pushl
jae
pushf
mov
cmp
adc
and
and
inc
repz
cmp
fwait
je
enter
loop
leave
lea
mov
faddl
emms
jns
out
out
aaa
adc
xchg
push
ret
mov
lods
call
lret
jp
addr16
shr
or
inc
sbb
stos
push
rol
push
mov
sarb
push
lret
sub
mulb
movsb
cmp
cli
mov
push
jno
sti
cmp
dec
dec
pop
in
sub
addb
mov
outsb
adc
pusha
rcrb
ror
bound
mov
fnstcw
add
pop
lret
iret
into
or
lcall
sub
sahf
ret
sbb
cmp
adc
and
mov
fisttps
outsl
push
jae
mov
sbb
lods
push
sti
add
mov
mov
icebp
int
or
scas
cltd
pop
jns
push
insl
or
xlat
add
and
out
lret
outsb
mov
jb
fdivrp
cmpsb
cmpsb
sbb
test
xor
sbb
mov
rcrb
xchg
jecxz
andl
cmp
ss
xchg
push
push
xor
xor
dec
lret
and
mov
cmp
pop
movq
inc
pop
and
stos
test
lea
sti
adc
jae
int
xchg
mov
movsb
sub
jno
add
xchg
lea
dec
ficoml
push
mov
and
xchg
sbb
lret
push
pop
fs
and
push
cs
adc
dec
cmp
sbb
and
int3
xchg
adc
cmp
xchg
jge
dec
test
ljmp
xor
sbb
or
clc
push
dec
test
pop
push
jbe
mov
push
adc
and
push
jle
or
jecxz
scas
sarb
loopne
mov
pop
lret
les
int
cmpsl
pusha
fists
cmp
or
outsb
pop
dec
iret
addb
and
adc
ljmp
in
mov
scas
jle
les
jecxz
xorb
pop
sbb
movsl
test
mov
and
inc
out
cmp
call
mov
fiaddl
stc
aam
cmp
lock
inc
jnp
pop
mov
push
xor
mov
add
gs
addr16
test
in
daa
mov
sub
fcompl
xchg
add
lds
nop
sahf
mov
mov
mov
sub
sti
dec
popa
stc
xor
lods
arpl
js
sbb
sarl
sub
pop
std
adc
pop
fists
ficompl
mov
mov
outsb
fsubs
adc
sti
xchg
je
add
fcoml
imul
mov
aaa
fwait
inc
jno
imul
popa
add
inc
dec
sub
enter
sbb
xor
add
push
or
cmpsb
and
fwait
jle
ds
ret
lahf
cmpsb
push
data16
and
out
xchg
mov
pop
repz
mov
mov
jno
int
cmpsb
add
push
cmp
cs
add
out
mov
inc
jg
sub
daa
dec
test
gs
mov
not
inc
js
cs
pop
imul
pop
rcll
pop
test
dec
lahf
add
clc
inc
pop
dec
push
les
ret
icebp
shlb
or
or
fwait
arpl
shl
jecxz
lret
pusha
addr16
mov
ds
add
rcr
icebp
das
mov
sub
and
lret
out
out
sbb
in
add
cmp
mov
sbbb
js
inc
add
clc
in
jmp
adc
pushf
sub
mov
loopne
ret
push
pop
cmpsl
clc
adc
je
add
pop
cmp
inc
int
addb
into
popa
and
and
cmp
jle
filds
add
or
mov
xlat
lds
cmc
jnp
dec
push
loopne
imul
sti
aaa
and
mov
iret
subb
mov
jno
shll
jle
pop
loope
sbb
cmp
pop
sub
test
jmp
lods
cmp
xchg
adc
mov
mov
hlt
pop
or
jl
or
mov
aad
mov
jae
pop
dec
mov
leave
je
xchg
icebp
xor
xor
dec
pop
xchg
scas
mov
mov
mov
adc
clc
xchg
mov
mov
mov
jno
xchg
int3
cmpsb
mov
pop
lds
sbb
lods
aas
push
bound
into
pop
es
es
jmp
imul
in
inc
sbb
std
insb
sub
dec
lock
xlat
ljmp
rorl
ja
insb
in
push
sub
dec
sarl
inc
shr
xchg
inc
xchg
cmpsb
push
add
in
xorb
sbb
xor
pop
repz
mov
cmp
daa
cmp
ret
add
adc
jle
jecxz
push
cli
push
insb
mov
push
jnp
jmp
int
ficoml
and
aam
add
dec
pop
aam
fisubrl
xor
jmp
xchg
cmpsl
lahf
mov
pusha
out
jae
pop
mov
push
add
hlt
mov
into
sub
lds
sub
xchg
test
fisubl
push
pop
push
cmpsb
ljmp
or
data16
dec
xor
test
add
dec
or
push
pop
arpl
insl
mov
or
jne
inc
pop
add
mov
in
jnp
jae
xchg
addr16
pop
leave
test
mov
inc
cmc
push
icebp
jae
outsb
aad
and
sahf
jb
mov
and
xor
fldl
mov
scas
xchg
pop
push
mov
mov
xchg
aas
test
mov
mov
cmp
dec
push
fistpll
dec
push
xchg
je
mov
xchg
pop
add
lret
xchg
inc
or
push
ret
lods
xlat
dec
bound
cmpsl
xchg
push
add
sbb
xor
push
xchg
mov
aas
jb
mov
push
bound
repz
xor
mov
add
jge
sub
mov
fs
in
and
les
mov
mov
aaa
mov
sub
push
xchg
cmpsb
rcrl
rorb
call
pop
in
push
or
repz
dec
adc
out
mov
outsl
pop
add
movsb
jle
and
arpl
jno
addb
and
xchg
push
jp
push
cmp
mov
or
stos
movsb
cld
add
nop
lcall
adc
jae
fdivl
call
insl
sti
mov
xchg
jg
call
jmp
jne
stos
fld
jae
push
idiv
mov
clc
inc
sub
fstl
dec
lea
ret
inc
xchg
xchg
gs
faddl
mov
jle
js
in
or
mov
xchg
jns
mov
pop
xor
nop
lods
stos
mov
sbb
popf
les
cmp
mov
pop
cld
data16
arpl
push
xor
mov
mov
sub
dec
and
hlt
push
jns
aam
xchg
jge
mov
cld
mov
adc
out
pusha
fdivl
or
icebp
shrl
in
fsubr
dec
xchg
fisubl
test
fimuls
push
pop
sbb
pusha
stos
dec
sub
jne
pop
inc
jns
int
sub
pop
sub
add
push
add
pop
mov
fcompl
mov
gs
jecxz
dec
sbbl
rorb
subl
jbe
jne
xchg
mov
inc
mov
stos
jno
loop
cli
mov
popa
imul
xchg
jecxz
insl
mov
jns
jns
xor
xor
push
xlat
inc
sbb
push
or
dec
and
mov
adc
scas
outsb
jae
int
xor
movsb
inc
fisttpl
push
loope
jmp
dec
dec
mov
mov
push
fmuls
xchg
fldl
push
mov
in
ret
xchg
lock
and
aas
push
inc
and
repz
movsl
adc
arpl
dec
adc
sbb
mov
push
sub
push
inc
daa
cmp
and
in
push
fs
xorb
pop
adc
adc
shl
push
pop
mov
pop
sti
cwtl
dec
pop
fwait
repnz
stc
sub
in
data16
push
xchg
sub
leave
xchg
repz
cmc
adc
inc
mov
shll
stos
mov
daa
ljmp
clc
sbb
nop
dec
cmp
lret
xchg
xchg
pop
fildl
fiadds
orl
push
push
push
dec
loope
inc
mov
xor
mov
or
sbb
les
stos
dec
or
popf
xorb
or
or
xchg
mov
push
fadds
in
mov
ret
inc
js
jno
insb
xor
bswap
xor
je
pop
mov
es
mov
incb
shl
mov
jb
movsb
inc
jg
int3
push
divl
fmuls
mov
sti
pop
cmpsl
cmp
es
arpl
sub
mov
repz
adc
xchg
pop
outsl
clc
mov
adc
jbe
jge
jp
mov
jb
in
fisubrs
cmp
adc
cli
outsb
jb
aaa
mov
sub
sbb
push
mov
adcb
loopne
mov
mov
les
rclb
in
adc
call
sbb
imul
imul
cltd
in
test
and
out
cmp
testb
fstps
mov
out
cmc
sbb
inc
jb
cltd
push
xor
scas
jae
push
ffreep
cmpsl
cwtl
dec
inc
cmp
shlb
popf
mov
jns
sahf
sub
add
adc
jne
shll
std
inc
adc
insb
loope
iret
mov
out
insb
xor
jno
sub
scas
jp
xor
jae
test
push
movsb
push
add
cmp
aaa
daa
dec
int
inc
sbb
lods
ljmp
dec
das
iret
jns
pop
ret
mov
push
pusha
inc
mov
cmc
int
das
aaa
cmp
mov
pop
rolb
scas
les
cmpl
jl
mov
out
inc
int
lret
sub
adc
mov
and
out
pop
sbb
mov
pop
push
xorl
jmp
push
inc
lret
out
mov
sub
and
xlat
negb
lret
mulb
into
xchg
sar
insl
popa
dec
add
fstl
push
add
addl
cs
sub
rcrb
int3
jb
out
or
cmpsl
stc
pop
dec
inc
pop
lret
add
shl
out
mov
ret
aad
mov
je
jns
adc
fucomp
xor
sub
bound
xchg
jo
cmp
pop
pushf
roll
push
pop
dec
in
sub
push
aam
push
inc
xchg
clc
lds
scas
push
push
cwtl
sbb
addl
and
xlat
sub
mov
mov
mov
ret
fstpt
leave
test
flds
push
dec
jne
ljmp
lret
mov
xlat
je
ljmp
aaa
aas
lret
cmc
jl,pt
xor
sti
adc
out
lods
out
movsb
leave
or
cli
xor
lock
jb
sti
jb
sbb
iret
add
sbb
int3
jp
mov
data16
ja
mov
jp
scas
xchg
gs
into
in
xor
in
mov
push
dec
mov
fnsave
cmpl
jno
cmp
adc
call
int3
or
sub
ret
jne
add
sbb
into
fnsave
sub
cmpsl
iret
lock
adc
jg
jmp
je
cmpsb
push
movsb
dec
xor
mov
loope
call
push
mull
insb
pop
pop
mov
outsl
in
outsl
xor
cmp
and
xor
inc
addr16
xor
sbb
call
cld
and
mov
pop
scas
cmc
outsb
in
push
mov
jne
sti
cmp
cli
std
dec
fidivrs
ljmp
loope
cmp
imul
out
stos
sub
shl
call
jno
lock
push
cmc
cmp
loopne
lds
repz
lahf
or
sahf
repz
mulb
mov
dec
pop
pop
sub
mov
imul
cmp
push
lret
shrd
or
out
loop
movsb
in
mov
and
arpl
mov
xchg
xor
aad
test
into
xchg
movsb
aaa
xor
ja
pop
xchg
mov
mov
jnp
fstpt
out
daa
rcrb
sahf
mov
xlat
and
ljmp
jb
lods
jns
or
movsl
xor
mov
iret
xor
out
icebp
xchg
xor
lret
inc
fisttps
dec
sub
sbb
inc
push
enter
inc
push
leave
jecxz
jb
pop
shr
xchg
loop
cs
xchg
lahf
xor
das
jo
inc
les
pusha
test
lahf
cld
sbb
out
add
cmp
inc
je
xchg
xor
cmp
xor
mov
adc
cmc
lret
dec
mov
xlat
rcr
pop
das
ds
ja
aas
mov
xchg
idiv
and
adc
xchg
jo
and
push
push
out
push
lret
push
jns
dec
pop
fstl
aad
loopne
popf
insb
cmpsl
lret
lods
cmpsl
ret
test
cmpsl
cmpb
push
inc
mov
adc
sahf
imul
and
int
xchg
and
adc
ror
das
xchg
mov
enter
das
enter
xchg
subb
cmpsl
ret
sbb
js
insb
cwtl
xlat
int3
inc
add
adc
sbb
mov
inc
ret
sub
movsl
cli
adc
xchg
sub
xchg
cmc
insl
fsub
gs
popl
outsl
mov
sbb
mov
xor
movl
jg
movsl
pop
dec
mov
cltd
fxch
insb
inc
nop
divb
and
in
das
fcomps
pop
sub
mov
test
aam
and
popa
loopne
test
std
fs
push
pop
pop
jp
lahf
xor
sub
std
adc
cmp
mov
ret
lock
mov
out
imul
std
mov
jne
jle
pusha
sbb
push
jecxz
mov
push
daa
nop
mov
flds
pop
test
push
sub
pop
inc
dec
pop
jae
pop
mov
mov
mov
enter
mov
aaa
stos
xchg
mov
daa
popa
cmp
aad
clc
aaa
add
outsl
push
in
cmp
jg
push
pusha
out
test
cwtl
movsl
xorb
mov
mov
mov
cmp
lret
mov
loop
mov
ds
push
je
stos
popf
jge
es
outsb
scas
mov
mov
shlb
int
insb
lds
repnz
movsl
pslld
cli
pop
xor
mov
xor
xor
int3
fimuls
lret
or
add
jnp
arpl
xorb
lret
jo
aam
push
testb
dec
sbb
in
inc
push
shll
ja
cld
ret
lret
aaa
bound
nop
cs
js
cmpsl
cli
filds
add
pop
bound
or
lcall
loopne
jo,pt
repz
std
pop
pop
jbe
push
out
repz
stos
cmp
pop
cltd
dec
pop
pop
mov
sbb
call
scas
stos
ret
aam
dec
and
mov
mov
xor
cmpsb
mov
jne
stc
scas
dec
nop
cmp
mov
push
daa
dec
lock
inc
add
pop
lahf
add
sub
adc
and
mov
mov
sbb
test
cmpsb
mull
add
aad
arpl
outsb
jae
sub
or
push
outsl
mov
xchg
adc
inc
add
sbb
imul
push
dec
hlt
inc
add
add
mov
push
out
or
mov
arpl
mov
jbe
or
out
sub
dec
push
in
and
int
in
mov
xlat
clc
xchg
sbb
frstor
xor
in
adcb
sbb
or
pop
ss
mov
sbb
mov
addb
in
jno
call
cmp
dec
clc
jg
hlt
mov
add
je
sahf
pop
ja
mov
out
scas
out
insl
mov
lods
mov
int
push
popf
adc
inc
adc
inc
sbbb
testl
das
std
push
cmpsb
nop
jle
enter
adc
mov
mov
and
cmc
push
scas
into
and
sub
push
cmpsl
and
mov
into
fldenv
push
in
jo
push
fs
mov
les
lds
dec
enter
sub
lods
jl
sahf
xchg
or
outsl
icebp
mov
lret
rcrb
xchg
js
xchg
sub
stc
enter
fistpll
testb
fld1
lock
ss
mov
rcrb
pop
cwtl
aam
mov
or
jo
cmp
out
xchg
inc
scas
lock
lcall
and
cli
icebp
mov
pop
mov
mov
pusha
push
repz
xchg
out
push
dec
adc
js
ret
push
sahf
addl
rol
push
mov
cmp
fstl
pop
repnz
push
xor
lods
out
pop
hlt
enter
jae
mov
pushf
arpl
into
rorb
ljmp
cs
icebp
mov
test
inc
dec
dec
jbe
aaa
fimull
mov
imul
and
cmp
popa
jp
xchg
inc
cmp
out
or
mov
fistpll
cmpsl
sbb
cld
popa
cmp
inc
pop
icebp
push
jecxz
subl
lods
clc
inc
mov
in
jecxz
xchg
mov
push
cwtl
add
and
stos
dec
hlt
xor
jmp
add
insl
jbe
jns
je
es
cli
mov
mov
sub
repz
inc
mov
mov
jne
pop
dec
sub
ficompl
dec
fistpl
clc
frstor
dec
std
scas
mov
or
enter
adc
lcall
sub
leave
or
add
xchg
lret
xor
jl
mov
sahf
fwait
inc
or
xchg
inc
xchg
pop
inc
jb
inc
iret
test
fnstcw
pop
and
subb
xchg
arpl
adc
add
cmpsb
xchg
fmuls
fnsave
xchg
nop
add
mov
out
ja
enter
and
mov
out
push
sbb
push
sbb
inc
pop
xor
ja
xchg
mov
mov
mov
imul
movsb
scas
add
mov
cmc
insb
jns
fcoml
xor
pop
outsl
dec
cwtl
inc
shlb
mov
mov
push
sub
xor
out
lods
dec
lcallw
add
ror
or
lods
cmp
mov
out
cmp
jg
cli
pop
or
dec
in
bnd
fs
enter
sub
sbb
mov
jbe
sub
out
outsb
xchg
dec
and
fwait
clc
push
fs
cmpsl
xchg
fadds
xor
pop
dec
pusha
inc
jmp
and
out
dec
out
dec
out
sub
mov
inc
mov
rorl
into
or
jmp
and
mov
cmc
sbbb
mov
fsts
xor
mov
inc
mov
cmp
pop
ds
add
outsl
divb
iret
popa
gs
and
cmp
fildl
push
pop
mov
fs
jge
shrb
icebp
push
mov
inc
test
or
mov
pop
sbb
cmpsb
lret
inc
fwait
cmpl
xchg
std
sub
cmp
icebp
add
ss
xor
sbb
and
xchg
bound
inc
dec
scas
je
xor
test
sbb
pop
xchg
test
shrl
inc
bound
inc
orb
rcrb
int
fnsave
aad
fidivrs
xchg
mov
or
test
ss
std
fs
adc
hlt
dec
jle
push
or
imul
mov
push
mov
adc
pop
call
or
dec
outsb
and
imull
sub
mov
out
pop
dec
out
sub
popa
cmp
jb
ret
mov
mov
and
les
fcompl
inc
std
mov
jle
in
xchg
mov
adc
lods
shrb
jbe
mov
scas
int
pushf
cmc
orb
lods
out
lret
add
xor
cltd
icebp
imul
sbb
stc
inc
movsb
dec
push
xchg
loop
mov
test
arpl
ficoms
jns
in
aam
push
imul
shll
arpl
dec
add
addr16
loope
xor
das
mov
push
call
rcl
xchg
incb
xchg
outsb
insb
call
stos
and
sbb
mov
xchg
push
xchg
push
enter
pop
mov
push
scas
sub
popa
fisubs
pop
jp
les
outsb
inc
mov
cmp
xchg
pop
in
pop
out
sub
mov
cwtl
in
loope
mov
cmpsb
dec
pop
sub
popf
in
jo
add
sbb
lods
dec
cwtl
or
in
clc
add
enter
ficoml
pop
cmp
out
xor
faddp
pop
or
xchg
add
mov
int
or
and
jecxz
cs
sub
loopne
pusha
mov
and
nop
addr16
scas
in
test
fidivl
cmpb
mov
pop
pop
sarb
rol
movsl
pop
jl
push
fwait
jmp
dec
mov
ljmp
arpl
repnz
push
aam
movsl
inc
std
fistps
jp
ficoms
data16
adc
std
adc
mov
js
or
pop
mov
es
pop
sbb
cld
inc
sti
add
outsb
loopne
inc
cwtl
push
orb
mov
jmp
jl
or
jmp
sbb
mov
jge
inc
movsl
add
rorl
dec
pushf
arpl
in
das
push
lods
rol
rorb
xchg
in
pop
in
ret
das
shl
pop
dec
cmp
push
imul
add
push
ja
std
cmp
mov
mov
jl
sub
pushfw
or
fistl
add
add
cmp
cltd
cld
push
pop
cmp
fsubl
adc
adc
sub
dec
cmp
int3
sarl
pop
cli
cmovno
or
mov
add
hlt
aam
test
clc
push
xchg
insb
iret
loope
mov
xlat
scas
loopne
sub
out
dec
adc
pop
mov
scas
loope
popf
dec
or
dec
or
imul
push
fwait
xchg
test
movsb
or
add
mov
sub
subl
push
adc
jns
scas
ret
enter
std
lods
xchg
inc
push
xor
in
mov
movsl
loop
sbb
dec
orb
imul
cltd
pusha
xor
xor
les
and
push
shl
fiaddl
ss
and
js
adc
fnsave
test
dec
add
xchg
mov
sti
xchg
push
mov
je
cmpl
jnp
loopne
ret
mov
mov
push
mov
call
add
aas
jl
jo
stc
and
push
sbb
sub
iret
scas
jns
xor
ret
cmpsb
orb
jns
mov
test
cs
std
xlat
sub
in
lods
cmp
fwait
push
rcll
out
in
ficompl
or
cmp
ljmp
xchg
sub
push
sti
push
fsubr
xchg
inc
iret
xor
rcr
jb
ds
movl
bound
fiadds
test
pop
stc
call
into
insl
add
dec
imul
push
pop
clc
rol
insl
push
cwtl
mov
ret
pusha
push
in
push
cmpsb
pop
fiadds
fwait
mov
fldt
pop
cmp
jl
mov
int3
fmul
adc
inc
ljmp
mov
sbb
cmc
dec
das
imul
movsb
xor
xchg
enter
cld
loope
mov
ds
push
inc
sub
imul
jae
mov
mov
loope
leave
jae
dec
sbb
lcall
test
inc
ret
std
sbb
pop
and
sbb
int
or
je
ljmp
mov
xchg
pop
cmc
inc
ficoms
int3
repz
pop
fbld
mov
jne
and
jge
pop
mov
aas
popa
in
push
xchg
gs
call
inc
sbb
iret
in
in
in
push
mov
ret
dec
xor
arpl
pop
adc
test
cmpsb
aam
pop
fadd
rorb
insb
fildl
xor
jno
dec
loop
pop
dec
push
movb
outsb
push
cmp
aas
xchg
mov
das
mov
nop
mov
or
mov
mov
lret
aad
xchg
nop
cmpsl
aaa
outsb
and
notl
gs
icebp
jne
xchg
lds
mov
add
mov
mov
sahf
movsl
movsl
mov
mov
orb
rcrl
push
mov
adc
int
sti
push
bound
cld
jge
xchg
loope
push
lret
roll
rorl
xor
pop
xchg
data16
aaa
icebp
in
in
dec
adc
scas
fldt
mov
rcr
addr16
push
add
jp
push
push
movsb
mov
and
sbb
xor
xor
dec
movsb
mov
mov
scas
push
jmp
sub
or
add
xchg
cmp
ja
sbb
int3
mov
or
xchg
xor
xchg
pop
push
lcall
pushf
adc
add
pusha
out
cld
push
mov
xchg
mov
mov
push
jae
in
inc
pop
out
mov
fstl
fdivs
fdivl
mov
jl
cmp
fstpt
ja
xchg
adc
cmp
and
mov
mov
push
int
inc
repz
add
mov
in
jnp
dec
fldt
cmc
out
in
pop
mov
xor
lea
pop
cli
add
jle
mov
mov
mov
add
out
enter
fwait
ds
imul
cmp
dec
adcl
dec
jb
negb
popf
add
outsb
repz
and
jb
xor
or
pop
jbe
push
mov
xchg
push
inc
push
xor
insb
push
jno
jp
xchg
lods
imulb
xchg
icebp
dec
pushf
pop
sub
lahf
adc
scas
inc
sub
lds
out
sub
sbb
mov
and
repz
pop
add
pop
loopne
sub
sti
fs
xchg
lds
or
ficomps
adc
outsl
das
insl
pusha
jnp
pop
sub
mov
ds
popf
mov
movsl
call
push
xor
xor
and
sub
sub
shll
push
lock
in
xor
sbb
movsb
pop
aas
lret
jae
stc
fsubl
xor
cld
mov
lret
add
inc
repz
aas
icebp
les
mov
cltd
popa
jmp
push
repz
dec
hlt
cmc
punpcklwd
fs
sub
sbb
push
dec
mov
adc
mov
andb
push
aaa
add
inc
cmp
adc
call
nop
or
lock
inc
xor
andl
sub
orl
push
jnp
jecxz
push
xchg
adc
test
inc
fwait
sub
add
lret
cltd
out
xchg
scas
mov
or
xor
push
lds
outsl
arpl
push
mov
das
add
inc
stos
in
dec
mov
add
ret
jmp
test
out
cmpsb
xchg
cmp
ja
repnz
inc
int3
shll
jnp
push
jbe
or
pop
mov
push
mov
call
pusha
sbb
inc
jl
mov
shrl
jbe
push
daa
sub
jno
addb
rolb
negb
frstor
jo
and
sti
inc
or
and
fsub
lcall
out
sbb
sub
ja
mov
mov
cmpsl
in
stos
add
add
jae
stos
push
pusha
inc
sbb
mov
cwtl
ret
mov
pop
icebp
adc
les
xor
in
js
jnp
push
repnz
pop
jmp
movsl
fucomi
xor
add
fcomps
sbb
xor
out
xor
test
jno
movsl
jb
int3
xchg
cs
pop
pusha
jb
mov
push
mov
jle
push
jo
xor
fwait
aas
das
push
and
mov
ds
movsl
jns
cmp
nop
pop
xor
mov
jge
aad
shr
push
scas
sahf
push
jl
xor
or
inc
add
test
test
out
push
jae
sub
pop
rcr
arpl
mov
adc
ret
push
pushl
jge
nop
ret
repz
fnstenv
xor
mov
mov
cwtl
push
mov
outsb
mov
insl
push
stos
dec
or
popa
xchg
imul
shll
out
and
dec
ljmp
lret
and
cmp
cld
xchg
jle
lret
mov
subb
xchg
push
sub
lock
sub
push
das
nop
push
sbbb
rol
add
or
adc
inc
leave
or
sub
daa
push
push
add
mov
rcll
adc
lds
mov
in
int
jge
dec
bswap
and
xor
icebp
lds
enter
jbe
test
jbe
jne
faddp
push
jmp
ret
jg
mov
push
out
sub
ss
jb
hlt
pop
adc
mov
adc
scas
stos
lds
and
pop
add
mov
fldl
shll
js
xchg
rcrb
addr16
dec
xor
pop
scas
addr16
pop
add
pop
lret
data16
jbe
mov
inc
xlat
fsubs
push
push
stos
push
ds
aam
mov
xor
inc
sahf
jbe
fsubs
pop
rolb
inc
adc
ficoms
mov
sub
test
push
les
test
out
mov
push
das
cmp
inc
and
cmpsl
pop
fwait
mov
test
lahf
sub
fildl
xchg
xchg
push
xchg
push
movsb
test
xlat
je
push
icebp
pop
adc
pop
adcb
shl
pusha
mov
roll
fucomip
test
push
xchg
add
cmpsl
xor
cmp
lods
popf
sti
mov
aam
jnp
sti
hlt
test
pop
or
imul
xor
jp
dec
mov
add
pop
lret
pop
and
lods
or
popa
ret
dec
push
cmp
inc
stos
mov
hlt
cmc
dec
pop
mov
insl
std
or
sbb
fidivrl
test
lret
aad
bound
adc
push
push
pop
jnp
and
jnp
fsubrl
and
dec
mov
dec
les
out
mov
repz
xor
pop
or
fidivs
notl
aaa
enter
lcall
lret
ljmp
repnz
inc
das
das
scas
sbb
push
rorb
or
scas
adc
lods
lret
es
into
sbb
push
cli
scas
insl
scas
les
test
shl
push
sbbl
out
ret
push
push
inc
add
clc
and
mov
jbe
aam
adc
sbb
les
jge
dec
sahf
push
daa
xor
cld
jno
sub
xchg
movsl
mov
outsl
sbb
stos
lods
test
repz
shr
stos
push
popf
negl
icebp
dec
sub
das
fwait
mov
inc
fs
mov
inc
mov
mov
les
mov
xchg
fsubrs
add
rcrl
ss
aaa
dec
sub
lret
pushf
lods
in
ja
inc
dec
subl
push
aam
test
lock
mov
lcall
ds
loope
and
dec
xchg
and
in
lahf
fcmovne
addr16
fs
mov
adc
xchg
loope
pop
mov
ret
xchg
fstps
inc
incb
popa
mov
test
nop
jno
pop
addr16
or
mov
push
jle
mov
cltd
rep
xchg
sahf
mov
cmp
addb
jge
push
stos
aad
push
dec
out
jnp
test
int
add
cmp
inc
push
push
scas
jno
filds
popf
jp
push
popa
mov
fisubrl
test
js
leave
mov
faddl
dec
mov
xchg
mov
cmp
aaa
data16
mov
es
mov
mov
push
outsl
jnp
lock
xor
mov
loop
adc
adc
ds
or
cmp
js
sub
push
aas
ljmp
std
dec
dec
adc
arpl
rorb
sbb
ljmp
add
push
mov
sub
fbld
je
dec
mov
loop
push
pushl
mov
mov
jnp
add
aam
mov
dec
sbbb
lcall
and
sub
push
bnd
and
xor
bound
cmp
add
or
js
push
mov
lock
mov
push
aaa
mov
aam
pushf
mov
cmp
jg
int
inc
jo
jns
stos
movsl
push
lock
lods
pushf
inc
lea
push
repz
nop
push
push
int
mov
inc
data16
lock
mov
inc
aad
dec
mov
push
sbb
or
fildl
sbb
jle
stc
roll
out
lret
mov
jmp
cmpl
push
push
or
int3
jnp
sbb
pop
gs
jmp
in
inc
xchg
pop
popa
xchg
cmpsl
mov
mov
cmc
jmp
std
incb
sbbl
lods
addl
mov
add
jo
xchg
test
data16
cmpsl
inc
sbb
jbe
in
push
leave
aad
rcrl
inc
inc
push
rclb
fwait
sub
mov
lss
cli
mulb
fistps
xchg
lret
ror
dec
pushf
xchg
imul
mov
aam
out
xor
int
stos
dec
loope
cmc
stos
and
std
pop
pop
testb
std
mov
jbe
sahf
loope
dec
mov
repnz
rolb
mov
test
stc
sbb
push
mov
jb
mov
mov
fwait
jae
ja
jae
cmp
lds
dec
fwait
ds
push
push
jmp
pop
or
shll
jnp
scas
xorl
scas
movb
xor
fmuls
lret
mov
scas
ret
dec
jg
movsb
test
jl
roll
sbb
std
andb
daa
mov
scas
xor
xor
jge
jmp
or
loope
cmpsb
sbbl
mov
or
in
jns
jl
add
mov
sub
pop
in
sbb
out
adc
push
sub
lods
add
mov
imul
out
push
sarl
add
xchg
mov
std
push
sub
outsb
inc
dec
add
or
mov
add
dec
inc
sbb
add
mov
in
push
gs
pop
fistps
loopne
ficoms
jbe
outsl
pop
and
movsb
jecxz
cltd
or
mov
cmp
mov
jo
int
movsl
mov
test
jno
pop
out
mov
ja
leave
pop
cs
inc
loop
and
adc
adc
xchg
loope
jle
mov
mov
jmp
jns
adc
arpl
or
cwtl
jns
adc
and
or
lock
mov
mov
mov
inc
popl
mov
cmc
jp
arpl
pop
adc
or
xchg
pushl
js
push
lret
jge
aaa
inc
scas
nopl
sub
in
mov
mov
and
mov
sti
push
enter
repz
inc
es
inc
fistps
mov
push
lcall
xor
push
addps
add
aaa
sub
popa
int3
inc
push
push
push
das
add
mov
imul
bnd
mov
jae
loope
cmp
adcl
pushf
outsl
xchg
lods
stos
sub
in
psrlw
jne
jo
and
sbb
sbb
lret
pop
and
push
mov
jns
and
or
bound
or
test
adc
sub
or
dec
stos
rcrl
pop
add
mov
mov
dec
inc
add
ret
cmc
ljmp
mov
xchg
xor
adc
sub
lret
lret
mov
loope
mov
loopne
fstps
fisubs
xchg
mov
ja
lds
iret
fstl
gs
mov
in
pusha
movl
pop
shlb
sub
shlb
sub
shlb
or
pop
ljmp
out
jno
test
int3
adcb
sbb
cmp
adc
test
dec
fwait
mov
repz
pop
push
sahf
incb
dec
sub
std
adc
ret
icebp
mov
stos
sahf
fwait
rorl
xchg
call
insl
mov
mov
into
inc
adc
pop
push
push
cld
jne
les
push
sbbb
push
mov
aad
sbb
adcb
aam
lcall
movsl
push
ret
sbb
mov
adc
mov
xchg
aam
ss
adc
or
loopne
popf
push
mov
shl
mov
cmp
jb
scas
pop
or
xchg
bound
jb
push
add
mov
mov
xor
outsb
xchg
mov
sahf
mov
jae
mov
pop
jb
mull
xchg
sub
pushf
dec
adc
push
test
mov
and
out
jle
sub
xchg
dec
out
mov
mov
pop
mov
mov
fsub
jecxz
test
mov
hlt
jne
mov
testb
mov
or
ret
pop
cmp
and
xor
aas
mov
or
xchg
add
pusha
ss
fisubrs
clc
ret
and
js
or
sub
fsubs
add
add
in
lahf
xlat
in
jl
ds
sahf
scas
mov
sti
out
sbb
fidivl
lock
call
repnz
jnp
gs
push
mov
ret
movsb
push
lcall
les
sub
out
xchg
repz
scas
rorb
push
push
sbb
inc
dec
jnp
mov
jns
lret
push
movsb
sub
notl
or
inc
push
lds
je
mov
mov
insl
dec
loopne
xchg
add
mov
sbb
loopne
lea
popf
rorl
imul
inc
addr16
adc
mov
test
mov
out
mov
push
xchg
fs
xor
scas
shlb
lret
mov
mov
mov
sub
mov
pusha
rcrb
scas
pop
cmc
in
mov
aas
jmp
and
ss
pusha
mov
mov
jbe
sbb
mov
rcll
pusha
rorl
sti
pop
xlat
in
mov
xor
ljmp
jnp
cmp
cmp
jbe
pop
cmc
sub
sahf
cltd
test
daa
out
and
mov
xchg
pop
push
cld
jl
aam
inc
push
adc
shrb
fcomps
add
pop
aam
xchg
loopne
lods
and
mov
xor
loop
and
mov
mull
mov
sub
or
dec
cmp
inc
cmp
loop
jns
mov
iret
cltd
add
or
fisttpl
mov
cwtl
mov
mov
inc
test
cmc
repz
dec
pushl
inc
sub
xor
inc
ror
or
and
pop
adcb
mov
mov
movsl
shrb
pop
sbb
push
dec
shlb
mov
outsl
lea
inc
test
push
inc
jl
pop
adc
sub
in
sbb
sarb
inc
cmpsb
mov
aas
cmp
adc
repnz
inc
mov
aas
ret
cmp
shll
push
test
rcll
loope
cmp
out
adc
mov
or
pushf
fisttpl
cmpsl
insb
pop
cmp
jo
inc
cmpl
sub
cs
cmpsl
xchg
insl
inc
bound
mov
dec
dec
scas
inc
jno
imul
insl
out
lcall
imul
adc
shll
mov
scas
je
pop
mov
rcrb
repz
sub
subb
mov
jno
loope
aaa
ljmp
jecxz
std
and
das
jle
std
mov
add
xor
in
outsl
fadds
ds
mov
jo
mov
dec
scas
es
stos
cltd
mov
sub
js
faddl
outsl
sub
vunpcklps
repz
or
xchg
repz
iret
jae
xor
xchg
sbb
pop
cmp
imul
xor
dec
lods
add
shl
pop
int
and
push
cmp
hlt
cmpsl
inc
jl
jno
push
cli
call
sub
bound
repz
in
xchg
add
stc
jmp
xchg
cmp
repz
mov
call
sti
dec
enter
inc
and
imul
pop
in
movsl
divl
mov
push
pop
into
jno
lcall
hlt
sbb
mov
lahf
nop
add
or
xor
cli
cmp
movsl
imul
pop
jb
ss
scas
ljmp
lahf
fmuls
nop
mov
or
jle
cmp
out
mov
xabort
inc
xchg
jl
push
jecxz
sub
jl
cmp
push
mov
adc
cld
push
repz
pushf
fs
mov
inc
rol
sbb
or
dec
dec
and
cmp
jbe
into
sub
in
xchg
jno
bound
and
push
pop
jnp
and
sti
mov
jp
adc
jge
sbb
out
fwait
add
cli
mov
push
or
f2xm1
sbb
icebp
pop
daa
outsl
subb
clc
movsb
add
mov
ss
push
sbb
adc
or
mov
test
dec
mov
pop
adc
mov
ds
jge
cmp
add
cmp
mov
cmc
push
insb
ret
xchg
shll
mov
mov
xor
xor
ss
xor
adc
cmc
lret
std
dec
mov
movsb
xlat
in
mov
mov
int3
aad
sub
inc
adc
lods
sahf
outsb
sbb
cs
int3
adc
xor
dec
mov
cltd
adc
and
xor
adc
ret
lret
out
gs
push
or
outsb
xchg
jge
mov
out
sbb
imul
jae
popf
or
pop
jg
ds
lods
push
sbb
sbb
push
xor
pop
lock
jp
and
movntq
jae
pop
adc
mov
mov
scas
cmp
cmp
inc
aas
dec
mov
mov
xor
mov
les
jne
mov
or
pop
push
ret
push
cld
out
daa
mov
iret
fidivs
das
sbb
inc
stc
push
cli
sbb
add
push
dec
dec
dec
inc
xchg
cld
cmp
pop
loopne
int
or
xor
xchg
icebp
fwait
loopne
jg
xchg
push
mov
jge
aaa
fucom
adc
stc
aaa
lret
in
movsb
data16
mov
out
add
scas
popa
fucomi
aad
adc
cli
shlb
lcall
fidivrs
insl
aaa
movsl
in
stos
mov
rcrl
daa
jae
and
ror
sbb
mov
lds
push
les
loopne
fwait
mov
mov
pop
aam
in
testl
aas
mov
mov
jp
pusha
push
adc
and
jbe
jno
pusha
test
test
cmp
lods
fsubrs
movl
aas
or
adc
xlat
xchg
xor
dec
mov
pop
xor
inc
xchg
idivb
dec
or
mov
xor
fldcw
add
loopne
loope
mov
jge
add
jecxz
cmp
ja
or
jp
call
inc
push
popa
les
sub
lret
mov
jmp
xor
je
push
inc
mov
inc
into
fwait
cmp
loope
xlat
loope
xor
ret
and
loope
fsubrs
sub
xchg
jnp
push
inc
jno
jmp
lahf
dec
cwtl
pop
mov
mov
scas
mov
xchg
mov
leave
mov
push
inc
arpl
test
call
popf
mov
mov
std
jne
in
imul
mov
mov
stos
adc
pop
lods
popf
jge
shr
test
jo
bnd
fidivs
mov
or
sbb
mov
mov
orb
addl
sbb
sub
lret
ds
sbb
lcall
push
sbb
stos
cmpl
mov
lahf
clc
mov
xchg
loopne
jo
adc
dec
inc
jns
sbb
rclb
test
pusha
sar
daa
cmp
inc
lock
mov
call
push
pop
inc
loope
mov
mov
iret
js
scas
pusha
cmc
cld
push
cli
inc
stos
sub
rorb
jbe
dec
aam
lods
fnstsw
pop
jl
pop
test
and
out
sub
cmpsb
enter
mov
jp
int
les
scas
push
mov
push
aas
loopne
mov
mov
pushf
xchg
xchg
ja
mov
pop
mov
pop
sbbl
test
je
xchg
mov
addb
fcom
out
mov
add
cmpsl
fs
out
jmp
aaa
jge
gs
mov
test
and
iret
cli
cltd
ret
jmp
stos
or
fldl
inc
dec
push
pop
pop
fildll
popf
lret
jmp
cmp
inc
lcall
add
cmp
xchg
pop
nop
xor
xor
enter
mov
out
xchg
gs
int
fsubs
pop
push
dec
orb
clc
pop
and
repnz
jmp
cli
or
loop
mov
outsl
scas
jmp
ficomps
or
scas
int3
pop
dec
cmc
fisttpll
jbe
inc
mov
pop
int
and
pop
lock
loopne
and
push
addr16
leave
jle
in
cmp
mov
adc
and
inc
push
lods
or
inc
je
insb
fiadds
pushf
adc
push
xchg
rdpmc
xor
jle
and
or
insl
cmc
push
xchg
add
and
mov
add
int
icebp
xchg
lods
test
adc
aas
adc
mov
mov
lret
fdivrs
jns
push
daa
and
adc
sub
loope
repz
insl
test
xchg
mov
fisttpl
test
cmpsb
dec
dec
jmp
mov
sub
xchg
sbb
cmp
adc
in
sbb
mov
mov
in
in
testl
test
xchg
cwtl
shll
and
hlt
jns
bnd
out
das
jl
movb
sbb
push
dec
push
mov
test
rcrb
pop
test
repz
and
xor
lods
dec
call
outsl
bound
stc
mov
movsb
xor
inc
rcll
dec
sbb
cli
jns
in
popf
ficomps
fwait
xchg
dec
xchg
pop
dec
repz
leave
inc
xor
bt
cmpb
fs
popa
inc
mov
mov
adc
nop
fisubrl
pop
push
lods
ds
mov
jle
fwait
mov
xchg
mov
pushw
cmp
mov
daa
sub
ss
add
cmpb
adc
lea
cmp
dec
inc
idivb
add
inc
subb
mov
mov
imul
nop
sahf
xchg
add
mov
jg
adc
aad
rep
repnz
add
divb
push
mov
test
test
pop
xchg
clc
mov
push
add
xor
imul
divl
mov
insl
shr
es
in
mov
fmulp
lds
xorb
sti
jb
repnz
adc
cld
fnstcw
push
or
cmp
shl
je
fidivrs
cld
lds
mov
lea
jno
mov
dec
mov
pop
in
das
imul
ja
scas
xchg
outsb
int
or
adc
lret
in
jmp
mov
sbb
jb
adc
popf
aaa
sbb
test
repz
ss
roll
rolb
mov
mov
stc
fwait
rdrand
stc
ds
jnp
pushf
dec
mov
fisubs
sbbb
fwait
js
sbb
inc
mov
sbb
and
lret
nop
ds
cltd
lock
xor
pusha
adc
arpl
jecxz
out
in
push
rcll
add
sbb
mov
les
cld
adc
test
sub
subb
out
inc
insb
adc
and
xor
cmp
sbb
or
xchg
ficompl
shll
sub
cmc
pop
outsb
mov
pop
stos
test
daa
sbb
sti
les
test
repz
and
sbb
nop
cmp
cmpsb
xlat
test
cld
aaa
push
add
mov
js
outsb
dec
sub
cmp
pop
stc
or
or
nop
jo
xor
jge
or
mov
mov
lods
in
sbb
push
imul
dec
mull
and
adc
mov
enter
add
int3
stos
cmpsb
divl
sbb
sbb
mov
add
jl
cmpl
mov
mov
cmp
add
dec
xchg
cmp
popf
in
pop
ja
pop
testl
ljmp
dec
enter
sub
xor
outsb
cmp
mov
push
repz
jg
movl
jb
out
ret
sbb
pop
mov
or
adc
sbb
push
test
inc
out
pop
les
sub
mov
mov
pop
or
fbstp
add
enter
jbe
jmp
call
push
push
fistps
mov
dec
or
xchg
sti
fbld
fbld
add
push
mov
add
fldcw
push
shrl
cld
mov
fimuls
jns
push
adc
pop
test
testb
clc
in
sub
lds
cmp
sarb
xchg
and
loopne
test
in
jb
scas
xlat
sbb
jnp
sbb
fisubrs
ret
sahf
cs
inc
add
jns
xchg
mov
in
sbb
leave
sub
dec
ljmp
gs
jp
xlat
xchg
add
dec
xor
pop
mov
xchg
nop
or
or
das
mov
cltd
push
dec
fisubrl
out
fcmovnbe
sub
jb
jmp
sub
adc
dec
mov
mov
add
pusha
clc
scas
fs
mov
mov
neg
aaa
mov
out
rol
lds
into
lds
call
cmp
jecxz
movsl
test
push
lods
jp
aad
cli
adc
fs
outsl
dec
mov
cmp
push
xor
push
xchg
aad
and
jb
movsb
fnstenv
imul
ja
xor
adc
push
or
jp
jns
subl
lret
mov
stc
xor
fcomps
or
adc
std
cmp
jge
lock
sbbl
pop
imul
stc
cli
imulb
lret
xchg
jno
in
orl
outsl
int
lahf
jecxz
mov
and
loop
daa
in
scas
adc
mov
loope
cmp
and
cmp
adc
andb
mov
fldt
mov
pop
pop
mov
scas
mov
adc
xor
adcl
fdivl
mov
notl
mov
cmp
lret
insb
or
out
imul
repz
push
jae
sbb
mov
ret
xor
nop
jl
sub
cmp
or
pop
sbb
daa
jno
cmpsl
sub
mov
enter
xchg
stos
mov
inc
push
jle
repnz
and
and
mov
shr
jl
and
cmp
shl
pop
ss
sbb
int3
mov
dec
mov
and
and
push
ja
stos
adc
sbbb
mov
sti
ds
pop
xchg
in
push
jnp
push
add
fisubs
shll
ja
aad
nop
js
gs
dec
push
add
nop
insb
inc
cmp
pop
pushf
sbb
push
sbb
sahf
pushf
mov
andb
addb
push
ret
frstor
dec
xor
xchg
sbb
mov
pop
ret
jo
fcmovne
cmpb
add
leave
mov
jns
push
cmp
xchg
xor
je
jle
out
clc
mov
xchg
gs
jge
inc
sbb
jo
out
rol
mov
mov
pop
sub
jp
sbb
pop
aad
pop
iret
jmp
out
cmpsl
adc
xor
cmp
sbb
push
pop
cmp
cmp
push
frstor
out
jb
jo
dec
imul
dec
insb
dec
mulb
fidivl
dec
lahf
les
mov
int3
cli
test
mov
movsb
pop
outsl
loope
outsb
xchg
test
xor
jmp
sahf
or
jae
mov
and
insb
sbb
xchg
mov
out
jbe
xchg
les
rorl
int3
inc
loopne
pop
dec
out
mov
loope
stos
mov
test
cwtl
xor
daa
aas
sbb
jmp
inc
dec
pop
ficoml
or
cltd
inc
jmp
jnp
inc
loop
sahf
aam
jecxz
pop
push
adc
das
or
not
cmp
xlat
imul
mov
jo
mov
mov
in
out
xorb
sbb
cld
xor
test
mov
pop
inc
xor
outsb
push
aam
adc
pop
int
xchg
sbb
pushf
out
adc
xorl
mov
and
dec
jle
xchg
lret
xchg
jno
fisttps
lahf
mov
aad
dec
and
in
outsl
push
or
lahf
adc
jl
sub
pop
adc
xchg
ret
push
dec
jecxz
mov
or
dec
pop
mov
dec
cmc
mov
mov
and
aam
lock
and
les
test
adcl
fdivs
shrl
idivb
mov
or
and
add
pop
dec
imul
jb
inc
scas
iret
sbb
aam
outsb
xlat
into
daa
ljmp
pusha
mov
aam
insb
or
aas
sbb
push
in
xor
enter
dec
jecxz
rcl
int
mov
jg
aam
into
aam
test
imul
jns
cli
and
xchg
jecxz
icebp
inc
jns
push
scas
paddusw
arpl
push
lock
pop
push
mov
adcb
inc
dec
aam
push
popf
jp
jle
rol
movsb
jg
es
scas
push
and
pop
mov
push
inc
and
arpl
adc
pop
mov
ss
push
cmp
scas
inc
or
mov
mov
jae
sub
pop
imul
mov
push
aam
mov
and
movsb
out
push
pop
push
test
xlat
in
lds
push
or
sbb
mov
movsb
pop
sbb
bound
dec
xlat
mov
pushf
push
xchg
sub
adc
and
xor
incb
ljmp
test
insb
sub
leave
or
enter
cwtl
or
ds
ja
jbe
push
test
ljmp
out
cli
sub
fadds
mov
mov
xchg
jle
insb
orb
fbstp
jne
xchg
lock
out
sahf
adc
ret
mov
stos
pop
push
sbb
xchg
inc
shl
push
xchg
jg
loope
or
jnp
icebp
lret
clc
pop
into
mov
into
fidivrl
push
or
mov
sbb
xlat
ror
orb
push
inc
in
daa
inc
fldl
sti
push
push
and
jae
stos
outsb
scas
or
test
add
cltd
adc
sub
sub
sti
aas
inc
sub
rcrb
cmpsb
in
xor
adc
push
xlat
fnsave
fistps
mov
inc
jle
aaa
lods
pop
loopne
jmp
scas
mov
shlb
fiadds
je
cld
aas
shlb
adc
hlt
fldcw
dec
and
sub
sbb
daa
adc
push
adc
add
sub
mov
jb
lock
aas
add
ret
and
leave
and
push
nop
sbb
out
cld
dec
mov
sti
sti
dec
stos
imul
mov
lahf
inc
jo
mov
push
enter
xor
test
push
push
adc
dec
aaa
push
bnd
repnz
pop
pop
ffreep
test
dec
or
jmp
fwait
pop
push
sbb
lahf
sub
lods
imul
push
outsb
mov
je
xor
daa
mov
insl
fs
mov
mov
inc
push
pop
ja
movsb
lret
xchg
sub
fldl
outsl
std
and
idivl
adc
and
es
vaddsd
and
adc
sbb
jae
pop
mov
in
or
lea
sub
in
xor
jp
pop
jb
jmp
adc
scas
pop
hlt
mov
push
cmp
insl
dec
leave
dec
popa
lahf
and
inc
adc
adcl
rcl
das
aas
test
add
jmp
movb
xor
mov
xchg
sbb
and
gs
mov
ret
xchg
fstpl
pop
and
insl
dec
xchg
pop
faddl
cs
xor
loopne
mov
enter
pop
pop
xor
or
mov
sbb
sub
xchg
mov
xchg
mov
lret
push
adc
cmp
and
aas
icebp
add
pusha
dec
sahf
mov
adc
mov
inc
loopne
jle
xlat
push
xor
mov
iret
imul
mov
pop
cmp
into
adc
pop
and
mov
mov
sahf
ffree
dec
pop
pop
imul
dec
inc
cli
inc
mov
rorl
sahf
sbb
nop
or
adc
sarl
pop
in
add
aam
and
dec
data16
or
push
push
add
pop
arpl
outsb
pop
mov
enter
test
push
ljmp
outsl
pop
cmp
in
call
cwtl
nop
jns
fwait
xchg
xor
lret
loop
add
jns
fistpl
xor
cmp
insl
test
mov
mov
loop
mov
aaa
xchg
mov
xchg
pop
sahf
mov
fdivl
push
jmp
subl
push
fistps
push
xchg
sahf
mov
pop
dec
je
lds
push
mov
and
xor
popf
out
ret
xor
outsb
in
push
ds
jae
pop
test
adc
loop
push
arpl
pop
jns
pop
ret
fs
outsb
jmp
mov
inc
mov
iret
mov
lock
cmc
cmpsl
mov
mov
into
test
iret
fisubs
sub
fistpl
pop
xor
pop
stos
push
add
xor
cwtl
xchg
jbe
pop
cmp
in
scas
test
movsb
inc
imul
xchg
sub
cmc
add
xor
inc
lret
jle
adc
clc
xlat
dec
xor
adc
mov
outsl
push
adc
cmp
xor
dec
and
or
mov
mov
xor
and
add
mov
add
test
add
cmpsb
inc
aaa
icebp
mov
and
pusha
imul
sbb
cmp
jmp
shl
xchg
jne
mov
mov
lret
mov
cmp
loop
mov
das
cs
dec
dec
mov
jg
or
dec
or
js
mov
aas
mov
loopne
es
mov
xchg
cwtl
adc
mov
in
dec
imul
dec
imul
or
mov
inc
out
push
pop
jle
aas
out
adc
loope
mov
push
adcl
pop
movsl
inc
aas
jno
adc
imul
lds
aas
dec
xor
dec
fstps
leave
inc
cmc
adc
or
negl
aam
shrb
jno
mov
mov
mov
mov
out
adc
mov
dec
scas
jbe
jge
xor
stc
jnp
push
push
jnp
loop
push
or
cld
and
add
scas
mov
mov
in
mov
jb
lcall
insb
inc
xor
lret
movsb
jle
imul
mov
stos
out
hlt
dec
pop
aad
jl
out
test
ret
xlat
push
fldl
pop
pop
movsb
fsubrp
cmpsl
out
jle
neg
pop
push
mov
jne
pop
add
pop
and
lret
mov
in
push
icebp
xchg
lock
aas
dec
loopne
sbb
dec
sub
xor
rcrb
mov
jmp
pop
sub
xchg
jnp
rep
ret
repnz
pusha
cmp
ret
push
push
mov
gs
sub
dec
repnz
mov
xchg
pop
lret
xlat
ret
inc
pop
stc
push
jns
loope
xor
or
stc
fildl
rclb
scas
gs
sub
push
push
inc
mov
rorb
mov
iret
dec
cmp
int3
push
test
data16
lds
sbb
out
mov
push
mov
and
or
fidivrs
sbb
aas
cmc
push
mov
insb
xchg
rcll
loop
jge
push
cmpsl
iret
xchg
adc
push
aam
outsw
push
mov
out
add
imul
or
xor
out
imul
mov
lods
fcmovnu
xchg
aad
mov
lods
jmp
sarb
sbb
fs
or
insl
sbb
and
adc
dec
ljmp
outsl
inc
bound
dec
pop
out
jnp
ds
ret
xor
add
add
xchg
jnp
arpl
sbb
xor
aad
mov
xor
sbb
inc
mov
lcall
and
repz
cli
jge
sub
andb
mov
jg
daa
or
push
xor
ret
push
pop
adc
imul
push
mov
popf
jecxz
mov
rol
iret
xchg
jmp
lock
lds
mov
imul
fdivr
xchg
xlat
lret
movsb
sahf
and
das
test
test
inc
mov
repz
mov
mov
addr16
pop
rolb
xchg
xchg
mov
das
lds
lea
shr
and
push
inc
pop
mov
mov
jmp
sub
xchg
inc
and
mov
sahf
in
pop
cmp
imul
or
dec
ljmp
imul
adc
daa
cld
subl
std
lds
jbe
xchg
cs
repz
sbb
push
addr16
jbe
movb
les
popa
xor
mov
lret
mov
add
and
pop
ja
idiv
mov
lahf
push
and
aas
add
cltd
mov
add
or
xor
mov
fidivrl
pop
mov
mov
nop
stc
rorl
enter
aam
jmp
lret
lret
xor
inc
cmp
es
enter
jae
out
push
leave
mov
cltd
and
in
sub
or
push
cmp
inc
nop
enter
or
cmp
lahf
inc
fsubr
leave
push
jge
inc
fsubrl
jo
rclb
add
divb
ret
lret
mov
add
stos
neg
or
or
clc
inc
pop
mov
jb
inc
inc
mov
enter
cltd
xchg
pop
and
pop
cmp
dec
aam
cmpb
data16
test
pop
mov
pushf
aaa
adc
sbb
and
mov
fnstsw
imul
bswap
sub
fldt
jb
sahf
xchg
lock
rorl
adc
or
or
sub
fadds
push
add
cmp
insb
and
icebp
cmp
jno
lea
sub
jb
dec
push
ds
dec
fistps
sahf
inc
leave
scas
dec
or
les
or
stc
leave
clc
xchg
loop
imul
cmp
repnz
sbb
shll
push
movsb
pop
or
push
bound
pop
jae
fimull
aad
xchg
test
mov
hlt
lds
push
mov
mov
push
and
in
pop
fisttpll
pop
add
inc
xor
adcl
dec
leave
cmp
loop
jmp
movsl
es
mov
ljmp
aam
dec
decl
mov
lret
leave
subl
ficompl
lret
jo
jae
cmc
and
cltd
xlat
pushl
fldenv
cmp
sbb
in
jbe
sub
sub
ja
add
mov
jae
popa
pushf
out
adcl
or
jb
mov
subl
mov
aad
rcl
sbb
ljmp
push
ja
out
dec
iret
in
pushf
fcom
xchg
mov
mov
mov
push
icebp
fxch
sahf
mov
cmc
fistpll
out
shl
sbb
adc
push
xor
imul
aaa
daa
popf
faddl
lods
test
loop
xchg
mov
fcmovbe
cmc
xchg
fs
das
sbb
arpl
lods
push
shll
xchg
rolb
add
subl
int
add
cmpb
cmp
sub
stc
bound
sbb
xchg
mov
pop
bound
pop
cmp
out
mov
mov
push
rcrl
in
fisubrl
das
xchg
pop
pop
js
clc
lea
cmc
std
int
inc
jp
lods
loopne
jo
test
bnd
lret
sub
xchg
leave
aas
inc
jge
shlb
or
ss
add
jge
pop
mov
push
push
fcoms
jge
add
test
cwtl
ss
loopw
mov
insl
arpl
popa
cmc
add
inc
cwtl
nop
nop
orl
ss
ja
jnp
inc
adc
loop
out
sub
hlt
jno
std
scas
lods
inc
add
sub
push
sub
lret
xor
lcall
aas
xor
inc
mov
lret
in
repnz
in
or
cld
mov
mov
mov
icebp
imul
mov
daa
nop
push
jp
loope
stc
out
mov
mov
repnz
sahf
andb
jecxz
jmp
pusha
add
rclb
ds
mov
fsubl
dec
and
xor
aas
xor
outsl
pop
sahf
loopne
int
add
dec
pop
cwtl
mov
jae
mulb
adc
test
mov
push
ds
dec
out
sub
fs
lret
xor
sbb
nop
pop
xor
leave
cmpsb
shrl
enter
dec
sub
mov
adc
fsubl
incb
mov
outsb
cmpsl
cmp
mov
insb
dec
and
orb
jp
nop
movsl
xchg
lods
movsbl
aaa
stos
int3
cmpsl
or
push
out
jbe
ret
adc
repnz
push
mov
out
jno
mov
push
mov
jg
flds
xchg
mov
pop
vprotb
jns
pop
mov
aaa
andl
add
add
mov
mov
ret
sarb
xlat
push
pop
dec
pop
xchg
xchg
jne
push
push
insb
mov
xchg
xor
int
cmp
xor
sbb
arpl
push
add
shrb
inc
jb
sbb
xor
dec
lods
aam
mov
sub
mov
add
mov
and
sub
sbb
dec
push
cwtl
pop
push
mov
orb
pop
insl
scas
lahf
xlat
add
pusha
filds
mov
adc
fisubs
stos
or
jns
in
and
outsl
lea
adc
xchg
and
cmp
and
sbb
add
scas
jp
xor
mov
jo
xchg
inc
loop
in
sbbl
fistl
not
orl
mov
sbb
fst
shr
inc
cmp
ffree
in
out
inc
xchg
enter
hlt
pop
xchg
sub
lds
call
out
xchg
adc
push
shll
movntq
loope
aaa
mov
dec
mov
imul
out
nop
sub
add
std
cltd
shrb
and
lret
shll
out
cmp
mov
shl
fnsave
into
mov
shr
rclb
imul
stc
jecxz
inc
push
inc
mov
inc
mov
and
ljmp
xchg
sbb
push
sbb
mov
fwait
mov
cs
or
xor
stos
jl
mov
add
cli
push
jb
sub
sarb
outsb
or
dec
adc
sar
arpl
hlt
out
push
jmp
and
scas
out
in
aaa
scas
sbb
lock
test
testl
insl
mov
lea
xchg
or
ljmp
jge
xor
cwtl
xchg
addl
or
mov
mov
into
icebp
pop
push
insl
test
dec
or
jae
sbb
add
mov
dec
mov
test
adc
mov
in
add
test
sub
mov
imul
popf
fildl
outsb
das
mov
mov
add
push
push
cwtl
lret
or
dec
or
int
adc
jle
lock
sub
addr16
repnz
jb
sub
pshufw
outsl
add
mov
fldcw
sub
dec
or
push
mov
clc
mov
adc
mov
xchg
dec
jae
xlat
jae
add
les
rcl
movsb
or
call
xchg
push
and
push
fldcw
mov
push
jl
div
push
xchg
js
inc
filds
idivb
test
cwtl
cmc
cltd
cmp
imul
fisttpll
in
andb
push
mov
cmc
fldt
in
mov
adc
repnz
addr16
jae
or
sbb
ds
and
xor
sbb
aad
outsb
adc
lea
iret
cmpsl
xor
lretw
subl
adcb
xchg
mov
xlat
pop
dec
popl
mov
lretw
testl
lahf
sarb
mov
imul
dec
xchg
hlt
sub
inc
cltd
mov
add
and
jmp
xchg
add
jp
filds
cmp
popf
testl
mov
dec
jns
inc
xchg
lock
in
adc
jle
lret
ficoml
mov
dec
scas
mov
out
stos
mov
add
sti
and
fwait
inc
aam
sahf
push
hlt
add
popf
adc
iret
lcall
and
xchg
dec
imul
scas
fisttps
rcl
or
add
lds
sbb
inc
movsb
inc
aam
pop
and
lods
pop
arpl
pop
mov
mov
dec
dec
sub
lods
lds
pushf
sub
ss
test
add
lret
ret
add
inc
les
ret
in
loopne
nop
xor
test
and
and
xchg
into
xchg
stos
test
add
inc
aam
pop
lods
in
inc
nop
inc
leave
jno
cmc
imul
sub
mov
or
nop
movsb
push
cmpsl
fs
dec
test
xor
inc
aas
out
push
mov
lods
das
into
sub
das
lods
inc
and
lods
fwait
rclb
xor
movsb
sbbb
lds
dec
jae
lret
icebp
in
pop
imul
cmp
pop
ror
cmp
mov
mov
dec
sub
mov
rcr
cmpsl
out
sub
mov
call
push
mov
test
lahf
in
mov
push
inc
jae
lret
ret
mov
xchg
cmpsl
cvtdq2ps
in
sbb
in
sbb
adc
pusha
lret
xlat
push
dec
iret
call
lcall
andl
push
in
out
lods
mov
push
adc
subb
std
add
mov
sub
call
dec
int3
jne
mov
cmp
fstpt
jns
sub
xlat
pop
lock
mov
shrb
push
lods
jp
out
stc
aad
inc
push
or
ljmp
out
andl
lret
adc
add
ret
aad
push
pop
pop
fstl
pop
aaa
mov
loopne
inc
pop
ljmp
outsl
add
mov
shl
add
test
fisttps
flds
xchg
shr
cmc
jmp
dec
cmp
push
xor
stc
xchg
mov
cmp
sub
mov
loopne
ss
lock
xor
sub
mov
and
mov
adc
fs
clc
test
push
lods
jo
xor
jne
out
fsubs
loopne
push
jnp
ja
loop
test
mov
imul
insl
hlt
movsb
andb
xchg
mov
xchg
insb
scas
add
mov
push
push
sbb
dec
cmpsl
and
flds
mov
test
dec
xor
cltd
test
jmp
jle
inc
and
pop
cmc
mov
dec
adc
sub
and
adc
sti
xchg
pusha
or
fdivrs
xor
roll
mov
loop
and
mov
pop
ds
cmpsb
jp
sbb
pusha
das
xor
push
into
inc
cmp
mov
push
pop
shlw
jnp
jne
shll
pusha
repz
and
dec
inc
insl
xor
cltd
cld
les
jb
pop
stc
imul
cmp
imul
mov
imul
sbb
push
cmp
xchg
lret
sub
inc
jo
inc
iret
outsb
cmc
dec
mul
popa
xor
es
jnp
push
sbb
outsb
jp
subl
ret
cwtl
test
shlb
mov
pop
and
xor
mov
sub
mov
inc
mov
mov
sbb
mov
lret
ss
hlt
leave
and
and
or
xchg
outsb
daa
pop
push
dec
sub
xor
lret
jecxz
jae
fs
test
mov
shl
out
lock
lret
shll
push
push
xor
test
adc
inc
cmp
in
popf
or
mov
mov
aad
cmp
push
sar
adc
icebp
inc
ret
pop
loopne
std
fidivl
mov
data16
icebp
mov
pop
fisttpl
sbb
outsl
roll
lods
enter
nop
inc
push
mov
insb
imul
xchg
pusha
out
pop
out
flds
inc
dec
movsl
push
cmp
inc
stos
dec
adc
mov
cwtl
cli
in
mov
addb
cmp
sbb
mov
xor
or
push
insb
loop
xchg
mov
push
loopne
aad
and
mov
pop
popf
clc
cmp
out
cmpb
lods
jg
and
lcall
orb
push
xor
mov
cmpsl
es
mov
jle
es
dec
mov
iret
arpl
pop
and
mov
std
jae
pop
in
gs
pop
xchg
mov
test
sub
sbb
ss
daa
add
int
mov
loope
cs
cld
and
inc
cmp
call
js
or
rclb
cmp
sub
test
bound
mov
cmpsl
or
mov
or
jae
cld
in
jno
popa
sbb
or
or
inc
fidivrl
fucomi
push
cmpsl
lods
jnp
clc
inc
mov
dec
ja
in
mov
sar
fstpt
add
mov
inc
pop
xor
and
mov
bnd
jle
out
subb
ffreep
cmpb
cmc
mov
inc
cmpsl
movsb
adc
in
lds
or
inc
xchg
dec
pop
int
stc
lods
pop
ss
inc
mov
pop
mov
shlb
mov
lahf
iret
rcl
xchg
out
out
cmpsb
pusha
push
shlb
cli
int3
mov
push
stos
push
out
insl
cli
and
adc
xchg
lahf
in
lea
jno
ss
push
cmp
cwtl
mov
imul
add
or
adc
pop
xor
jo
movsl
push
lds
fldt
mov
pop
rcrl
outsl
mov
mov
or
cmc
out
pop
jp
cli
lret
clc
incl
movsb
stos
and
repz
mov
lahf
popa
out
adc
int3
cs
cmp
cmpsb
dec
mov
int
xchg
jne
repnz
shr
add
push
mov
fsubl
add
dec
and
mov
stc
jno
add
mov
push
mov
mov
adc
sub
sbb
jb
loope
pop
jle
aad
mov
add
add
lods
or
fadd
sub
push
sbb
and
mov
shrl
add
cwtl
sbb
int3
xchg
aas
dec
dec
ss
pop
mov
pop
adc
push
ret
and
sub
int
scas
adc
lds
mov
xor
aad
movlps
jb
pusha
push
rcrl
out
inc
jbe
imul
xchg
outsl
inc
sbb
cmp
pop
ret
mov
call
outsl
xor
jg
mov
jne
in
filds
addb
jge
mov
int3
jg
push
fdivl
and
xorl
or
mov
mov
stos
mov
add
sbb
lret
jae
mov
hlt
jp
inc
shll
pushf
push
subl
aam
in
pop
cli
cmp
mov
sahf
pop
mov
and
cli
es
int
rorb
push
cs
xchg
loopne
ficompl
lahf
and
bound
dec
push
in
not
dec
inc
iret
xchg
push
test
es
pop
push
bound
lahf
mov
test
cmpl
mov
adc
shrb
inc
pop
dec
pop
into
outsl
mov
cld
dec
xchg
cmpsl
add
ja
mov
test
push
inc
sub
mov
loop
jge
mov
lret
push
adc
push
xchg
mov
inc
mov
mov
icebp
loop
jle
sub
sarl
lret
cmp
inc
lock
adc
xchg
pop
mov
int
movl
ret
push
clc
pop
scas
and
insb
xchg
sub
scas
cwtl
jae
xchg
jne
pop
pop
pop
ffree
hlt
add
and
sub
pop
lock
or
repnz
push
dec
sbb
sub
cmpsb
imul
cs
pusha
pushf
cmp
fcompl
arpl
push
jno
dec
stos
adc
inc
xchg
insl
ffreep
xchg
test
push
cs
dec
fstpt
cmp
ljmp
or
sbb
xchg
jle
shlb
scas
jmp
data16
lods
sub
jne
jbe
icebp
cmc
lock
inc
pop
out
mov
outsb
andb
fnsave
repnz
mov
cmpsl
cmp
and
call
push
xchg
mov
dec
xor
int
dec
pop
xor
dec
int
pop
es
push
dec
adc
loop
js
gs
in
outsb
and
xchg
pop
sahf
nopl
or
mov
mov
push
fs
adc
scas
xlat
movsl
mov
cltd
mov
mov
test
fiaddl
adc
clc
sub
andl
loopne
inc
insb
stos
cmp
fwait
shrl
loope
in
dec
xchg
and
pop
in
fnstcw
pop
push
mov
sahf
adc
pop
lahf
clc
inc
and
add
jl
xor
fiaddl
xor
xchg
lods
and
lea
data16
mov
sahf
sbb
outsb
add
sbb
sbb
push
jle
jo
mov
inc
sub
cli
andl
ds
xor
es
xor
sbb
movsl
xchg
pop
stc
push
pop
push
lret
les
add
mov
xor
inc
sbbb
shlb
div
nop
mov
fucomip
dec
add
sbb
mov
shr
sbb
popf
fdecstp
xchg
pop
sub
mov
sub
call
or
and
ret
fs
sbb
adc
pushf
push
pop
add
add
mov
movsl
push
jnp
int
loopne
cli
cld
mov
and
lods
pop
pop
out
push
mov
jbe
inc
fcoms
je
pop
sbb
dec
movsl
ljmp
decl
ret
decb
or
lock
into
mov
scas
lahf
lods
dec
jg
repnz
sub
addl
loop
ds
jnp
xor
pop
test
loopne
dec
sti
scas
xchg
into
push
pop
das
adc
and
xchg
push
lods
add
aas
adc
push
and
jo
sbbl
and
mov
dec
lahf
xchg
sub
jns
add
scas
lock
cwtl
inc
mov
mov
mov
out
xor
lods
loop
add
pushf
jo
jbe
xchg
xor
leave
push
lcall
push
cmpsl
test
pop
das
lahf
inc
icebp
fiadds
push
add
push
jp
pop
mov
add
arpl
insl
fstpl
ds
scas
push
popf
inc
scas
xchg
pusha
push
xorb
fsubs
fcoml
push
stos
pop
xchg
inc
outsl
ret
mov
popa
xor
rcl
cmp
add
cmc
or
lods
test
dec
in
sub
pop
cwtl
lods
adc
cmp
ds
mov
mov
dec
and
jle
iret
lods
ljmp
pop
or
out
in
nop
inc
adc
ljmp
outsb
sbb
jnp
and
xlat
cmp
lods
aad
into
mov
sbb
inc
pushf
and
testl
mov
mov
je
rorb
or
nop
imul
push
inc
out
lods
sbb
jbe
pop
stos
cmp
adc
bound
xor
or
xchg
lret
mov
sbb
inc
pop
popa
xlat
jbe
mov
test
std
jae
insb
aad
xchg
bound
cld
imul
mov
daa
popf
cmp
dec
sbbb
in
mov
pusha
das
popf
mov
mov
fbstp
aam
fwait
sbb
mov
push
xor
pushf
fildl
jle
mov
stc
int3
push
or
std
fbstp
dec
mov
push
dec
push
xor
mov
cmpsb
fistl
xchg
inc
jb
test
push
addr16
outsb
pop
mov
aam
xor
xchg
jo
add
stos
enter
adc
xor
addr16
lods
and
fsubl
and
adc
fwait
movsl
adc
cwtl
cmc
cltd
and
push
js
dec
push
pop
push
icebp
in
lds
mov
pop
push
inc
test
pop
cmp
pop
mov
jae
mov
fmull
stos
jne
fwait
sbb
das
sub
or
add
mov
arpl
popf
shr
sub
sahf
std
insl
stc
adc
repnz
or
pusha
add
and
and
lret
cmp
cmp
push
in
sahf
mov
stos
jo
xchg
cmp
fdivrs
call
ficoml
mov
cmp
xor
ljmp
fld
inc
ficomps
pop
outsb
cmp
popf
in
cmp
aad
mov
movsb
fwait
add
dec
or
icebp
fwait
js
insb
ret
std
inc
push
stos
out
scas
in
add
int3
sti
popf
push
sbb
add
mov
rolb
lods
cmc
aam
cmp
andl
test
test
adc
push
inc
sub
shll
adc
lock
hlt
out
arpl
in
dec
xorb
enter
jne
mov
lcall
push
in
ljmp
lcall
jmp
lahf
adc
mov
mov
insl
bound
push
cmpsb
lahf
pushf
mull
aas
imul
fxch
dec
subb
mov
int
adcb
and
mov
and
stos
pop
inc
pop
and
mov
popa
push
ret
paddsw
xchg
data16
es
inc
pop
xchg
jle
adc
je
or
mov
mov
lret
test
fidivrs
popa
jg
cmpsl
call
clc
push
fs
cli
in
lcallw
xlat
pop
xchg
arpl
pop
imul
xor
or
fnstenv
adc
stos
pop
adc
adc
out
in
jp
lret
and
bound
cmp
inc
push
mov
out
fildl
cs
stos
ja
pop
cmp
dec
xor
cmpsl
cs
mov
mov
lods
jge
xchg
sub
loopne
push
cmp
adcb
outsb
add
add
push
call
cmp
popa
lret
outsl
jbe
repnz
lods
shrl
shlb
leave
sbb
cmpsb
push
mov
popf
cmp
fildll
int
lahf
cs
add
adc
repz
leave
and
dec
mov
sub
popf
pop
pop
repz
mov
jbe
scas
pop
push
vpunpckhwd
mov
lds
out
add
arpl
fsubl
lret
fs
mov
lcall
sarb
roll
cli
ror
mov
push
leave
cmp
fcompl
rcrl
cmc
adc
fldlg2
cmp
pop
push
ss
sbb
gs
pop
repnz
push
mov
xchg
pop
sbb
idivl
cmp
and
mov
out
inc
mov
mov
xchg
and
add
test
aaa
jl
mov
jmp
push
ret
sahf
sbbl
and
fldcw
cli
sbb
mov
inc
xchg
repnz
popa
push
push
stos
add
fildll
pop
into
and
addr16
push
stos
stc
popf
movsb
std
dec
jno
shlb
add
cmpsl
add
enter
aam
hlt
adc
push
out
sbb
jnp
lret
clc
dec
mov
in
mov
or
sub
out
add
popf
orl
mov
pop
fldt
mov
mov
fs
sahf
std
fcompl
cmpl
mov
subb
jle
stos
mov
lea
add
lcall
add
inc
jp
sub
add
pusha
inc
xchg
or
adc
nop
jp
imul
fadd
jmp
adc
push
cmp
jmp
mov
pop
enter
adc
cmp
sbb
idivb
sub
mov
inc
sti
pop
and
loopne
jo
sub
xor
aas
nop
pusha
cltd
jns
loopne
js
dec
outsb
cmp
dec
or
sbb
mov
clc
and
into
rorb
jns
mov
into
lahf
sub
call
push
inc
dec
std
shlb
imul
jne
andl
or
stos
sti
les
or
gs
xchg
xor
cmp
repz
jne
jl
adc
and
inc
popf
leave
xchg
xchg
cli
xor
lahf
xor
nop
push
sbb
loope
cli
adc
ret
sbb
xchg
movsb
sbb
dec
jae
and
ficoms
jle
decb
fstpl
shl
loope
push
jle
add
pop
jo
enter
push
out
cmpsl
ja
jl
mov
jp
je
adcl
arpl
cmpsl
cmpsl
cmpsb
or
in
popl
dec
loop
jbe
mov
repz
daa
lock
enter
lret
xor
mov
or
jne
test
jbe
sub
aam
mov
pop
filds
pop
xor
dec
daa
push
cli
mov
aam
sarl
or
adc
push
arpl
mov
nop
inc
xlat
and
out
dec
js
xchg
pop
stos
out
scas
insb
lahf
inc
mov
dec
in
cltd
and
push
pop
cmp
test
in
sahf
jl
mov
add
sub
add
movsb
dec
outsl
enter
aad
mov
clc
into
mov
adc
jb
ss
or
mov
daa
jns
mov
fwait
bnd
mov
ja
or
lahf
pop
repz
stos
mov
gs
sbb
out
loopne
loopne
mov
jno
outsl
jle
fs
adc
or
push
xchg
popa
lock
stos
aam
adc
inc
adc
push
stos
incl
dec
pop
mov
fildll
pop
lret
dec
notl
push
jecxz
cltd
push
mov
stc
inc
movsb
xchg
xor
pop
popf
sub
cli
or
mov
xchg
add
xor
sbb
ljmp
sbb
cmp
sub
cmp
mov
jbe
inc
loope
test
out
and
dec
bound
fbstp
shl
push
pop
inc
fdivs
or
mov
sub
cmp
lods
aam
dec
mov
int3
insb
clc
sub
dec
cs
roll
push
sbb
pop
mov
test
call
movsb
fwait
dec
sbb
movsl
cmpl
push
and
adc
push
out
imul
xor
fstpl
adc
aas
fisttpll
or
outsb
cmp
or
repnz
es
inc
cltd
stc
test
stos
jp
pop
push
xchg
dec
jae
jae
cwtl
mov
fsubl
jg
jo
push
lret
nop
imull
lock
sub
mov
faddl
je
ret
xchg
test
sahf
xor
es
pop
jns
es
mov
orl
mov
dec
dec
adc
push
pusha
or
pop
das
loop
mov
out
dec
mov
and
push
out
mov
je
and
rorb
shrb
add
pop
sub
cmpsb
inc
imul
pop
bound
sbb
sub
je
jge
xchg
mov
dec
fstpt
out
fdivrs
sbb
xor
mov
loope
mov
iret
pop
add
jo
adcb
int3
push
xchg
sbb
xchg
ja
shlb
cmp
push
lds
repz
jmp
jl
mov
int3
jl
in
adc
das
dec
les
adc
jnp
test
arpl
sbb
mov
dec
jle
aad
pop
sbb
xor
mov
pop
dec
push
mov
sar
and
push
mov
cmp
pop
fists
cmp
xchg
rol
pshufw
sti
mov
xor
xor
stos
cmp
jae
push
push
cs
sbb
cs
frstor
fcoml
or
imull
inc
dec
cltd
rorl
fwait
mov
stos
movsl
jb
mov
insl
mov
inc
cmc
xchg
xchg
in
gs
xor
pusha
push
xchg
out
pop
repz
xchg
pop
push
adc
cmpsl
cmp
inc
test
stos
cmc
ret
sbb
add
lahf
in
lahf
sub
xchg
and
fnstsw
les
push
andl
inc
loopne
mov
or
ljmp
movsb
movsl
mov
imul
push
pop
cmc
fiaddl
fsubp
pop
adc
orl
sub
out
ret
xor
subb
mov
inc
sub
rcll
js
mov
imul
mov
hlt
or
jecxz
xchg
nop
enter
jecxz
mov
test
xchg
xchg
addb
sub
pop
xchg
push
cli
mov
repnz
and
test
pusha
ret
cwtl
pop
cld
test
dec
aas
mov
decb
cmp
sub
sbb
bound
aam
rcrl
scas
cmpsl
mov
push
mov
test
nop
fstpl
pop
loopne
pop
scas
mov
jb
xchg
ret
lods
ret
sub
test
push
stos
jl
jge
jbe
aam
jae
adc
decl
fs
call
adc
mov
idiv
push
testl
add
sar
adc
push
mov
test
pop
jnp
jbe
jmp
and
lods
aaa
repnz
jecxz
rolb
xchg
pop
sub
sub
sub
cmpsl
pusha
adc
inc
in
mov
gs
mov
or
sub
es
cwtl
or
mov
lea
scas
xchg
leave
and
push
xchg
jnp
scas
push
lods
dec
xchg
push
lahf
pushf
and
mov
push
ljmp
popf
xchg
out
ret
sti
stos
test
mov
fwait
add
adc
pop
cmp
or
mov
lret
mov
cmc
shrl
jge
int3
jecxz
push
scas
cmp
xchg
daa
add
jle
lcall
jns
std
push
push
jbe
sbb
arpl
pop
adc
adc
mov
cltd
loop
mov
cmp
cwtl
push
bound
cmc
mov
xchg
aad
mov
cli
pop
add
stc
inc
and
dec
ret
icebp
push
fisubrl
xchg
es
adc
ss
push
loope
xchg
fsubr
cli
ds
xchg
adc
mov
lds
sti
in
ror
outsb
rolb
and
cmp
add
cld
pop
mov
sbb
jl
xchg
mov
lret
push
jnp
scas
insb
push
inc
mov
xor
lds
xchg
loopne
mov
sbb
jmp
out
jns
pusha
fidivrs
pop
dec
je
adc
andl
fistps
jbe
cmp
jno
shrb
lret
sub
in
aas
or
jnp
cmp
jecxz
jns
jg
sub
adc
xor
vmwrite
popf
mov
test
push
cmp
loopne
mov
leave
ja
sub
js
jbe
aas
les
jge
adc
mov
mov
mov
xchg
or
pop
mov
scas
pushf
int
insl
lahf
mov
jo
jl
push
call
mov
sub
pop
sti
movsl
jecxz
divl
shlb
push
test
ja
mov
jb
stos
and
lahf
insl
enter
inc
mov
sbb
xlat
popa
mov
mov
mov
xor
push
out
mov
loopne
test
addr16
mov
int3
and
jns,pn
stos
mov
in
cmp
xchg
pop
leave
cmp
push
gs
mov
or
in
repz
sub
inc
add
push
fimuls
mov
mov
mov
ror
adc
test
inc
repnz
mov
scas
test
lea
push
xchg
mov
mov
jp
pop
cmp
repz
push
mov
pop
jmp
mov
pop
jp
push
outsl
sub
mov
mov
inc
adc
xchg
mov
mov
jmp
add
xchg
out
jo
jmp
lret
aad
mov
imul
push
ja
adc
add
mov
js
add
jo
mov
sub
push
insl
cs
std
or
fcmovnbe
jnp
xchg
xor
jl
pop
out
ljmp
pop
xchg
adc
mov
sbbb
mov
cli
mov
sbb
xor
enter
push
pop
ds
insl
enter
push
aas
pop
pop
adc
stos
xchg
xchg
cli
dec
lds
sbb
repz
call
sub
add
cmp
mov
movsl
push
jmp
je
dec
out
mov
push
and
adc
push
scas
dec
into
inc
sbb
ss
popa
in
adc
pushf
or
fsubs
stc
jb
into
inc
sahf
loop
mov
pop
cld
shl
repz
cmpsl
std
pop
push
sub
mov
xor
pop
shr
fdivrp
adc
and
mov
jno
stos
outsl
insl
fs
imul
inc
movsl
add
jmp
mov
inc
sti
in
popa
ret
or
or
mov
add
push
movsl
adc
fisubrs
ret
cmp
fldt
sbbl
cmc
add
pop
xchg
in
mov
mov
dec
ja
mov
insl
ret
outsb
pop
inc
inc
incl
mov
mov
xor
test
test
outsl
or
push
inc
jg
add
adcb
int3
les
les
jnp
mov
jl
movsl
push
movsb
rolb
cld
lock
lret
lahf
insb
sti
in
sbb
icebp
jmp
out
lahf
mov
fstp
mov
mov
add
std
sahf
xchg
push
fwait
jo
sar
es
mov
sub
cmc
sahf
out
adc
inc
push
lret
pop
cmp
jg
in
xor
hlt
lcall
popa
jl
dec
inc
sarb
enter
pop
xor
ljmp
adc
mov
les
lcall
ljmp
int
push
les
and
sbb
jo
das
sub
cmp
jnp
push
into
icebp
orb
inc
aad
inc
jmp
fstpl
sub
fisubl
pop
mov
test
mov
adc
pop
movsl
int3
sub
cli
adc
mov
cli
mov
and
rcrb
in
scas
xchg
loopne
shlb
adc
adc
loope
dec
mov
andb
mov
adc
cwtd
ljmp
pop
sbb
push
hlt
jo
push
pop
gs
jbe
sub
cmp
outsl
clc
fldcw
mov
in
sbb
or
out
loopne
orb
mov
jle
out
add
cmpsb
pop
ret
jp
push
and
push
mov
mov
sahf
cmp
adc
sarl
aaa
push
sub
xchg
cmp
jbe
lcall
inc
dec
dec
rclb
inc
test
and
jmp
mov
pushf
add
push
dec
jmp
cmc
dec
sub
js
popf
add
movsb
sbb
pop
dec
js
push
or
mov
int3
ss
scas
sbb
cmp
sbb
sbb
xor
shlb
pop
rdmsr
or
cli
out
inc
lret
loop
push
jmp
sbb
bound
push
mov
sub
cmc
dec
push
adc
das
mov
xchg
xchg
and
mov
mov
cmp
shrl
and
sub
mov
dec
xchg
sti
cmpb
mov
mov
divb
and
jmp
mov
outsl
shrl
jmp
inc
and
and
inc
int
test
add
sub
or
push
loope
fistps
int3
shrl
sub
push
movsb
sub
xchg
inc
add
addr16
es
test
mov
pop
pop
adc
sub
rorl
jl
mov
jp
jb
mov
xchg
xchg
and
je
lods
jl
xchg
and
or
sub
cli
outsb
xchg
cmpsb
jne
testl
loop
xchg
mov
push
inc
add
jecxz
repz
sahf
inc
pop
je
adcl
pop
inc
aad
xchg
push
sbb
enter
fcomps
imul
jl
es
sbbl
hlt
push
sub
mov
jp
jns
or
cli
adc
fldenv
mov
outsb
xchg
int
pop
gs
aam
or
xchg
push
pop
jmp
adc
andb
mov
pop
sti
popf
push
jnp
and
sbb
jno
jb
sub
test
shlb
jg
cli
jecxz
insl
fcoms
and
aaa
adc
sbb
pop
pusha
mov
stos
jle
lds
cmpsb
cmp
dec
ds
push
sub
js
mov
cmp
aaa
sahf
lea
dec
inc
sbb
jne
sbb
mov
cmp
adc
icebp
jno
and
inc
push
lods
mov
mov
jo
cmp
push
cmp
repnz
jg
xor
pop
push
push
shrb
pop
sub
lfs
xor
inc
mov
or
xor
test
cmpsb
xor
sbbl
lret
cmc
jo
bound
jae
jle
test
dec
dec
out
loopne
mov
fildl
add
cli
sar
mov
jp
xor
in
mov
mov
push
cmp
in
lock
dec
aad
xchg
xchg
mov
out
jne
push
fsub
shl
pop
jae
repz
in
add
push
mov
push
in
shll
sarl
mov
loope
inc
push
je
aam
mov
pop
outsl
jl
mov
cmc
out
mov
add
insb
mov
jmp
lret
fistpl
scas
xor
cmpsl
push
inc
sti
inc
out
or
icebp
ds
cmp
jno
and
add
jp
push
cmpsb
cmc
push
int
clc
jmp
adc
mov
jg
jmp
jg
adc
stc
out
notb
les
es
sub
mov
in
arpl
pop
aas
xlat
clc
inc
fs
xor
cmc
mov
inc
hlt
pusha
notl
or
cmp
outsb
push
loop
mov
stos
mov
rclb
push
fstpt
stos
pop
push
mov
mov
jg
dec
cmp
mov
ds
sbb
or
dec
jne
xor
pop
xchg
rclb
mov
sbb
adc
jne
sbb
xchg
sub
cmp
ret
cmpl
xchg
inc
jbe
scas
rorl
shl
jno
cmp
push
or
das
lcall
cmpsl
push
enter
ret
insl
jnp
hlt
cltd
pop
int
nopl
fstl
cli
lods
mov
in
push
dec
imul
sub
fucomp
inc
and
jns
push
lret
ret
sahf
mov
push
imul
lret
arpl
ja
divl
adc
inc
xor
repz
xchg
pop
mov
hlt
ds
enter
cmpsl
sbb
test
sahf
arpl
rcl
jecxz
fcmovnb
jne
pop
mov
les
mov
xlat
push
pusha
jno
nop
mov
js
push
dec
pop
or
mov
fisubrs
movsb
sbb
sbb
dec
fiadds
push
scas
mov
xchg
sub
pop
andb
cli
mov
jp
inc
nop
mov
or
mov
sub
shl
dec
aas
pop
cmp
push
clc
jmp
cmp
enter
push
mov
cmp
adc
addr16
mov
je
add
adc
sar
std
mov
fdivrp
jp
jnp
mov
push
sahf
aad
push
jmp
jmp
mov
push
movsb
cltd
je
jno
cmp
in
push
push
call
mov
popf
fwait
aas
mov
insl
xchg
pop
mov
cltd
aad
sbb
lcall
inc
jb
jp
inc
hlt
dec
add
leave
cmp
call
repz
pop
push
sub
cmp
fnclex
das
jmp
jns
loopne
xchg
leave
mov
mov
fadds
mov
push
mov
xchg
cltd
mov
enter
push
out
es
xor
loope
in
fsubl
add
out
cmp
out
cmp
fwait
push
pushf
call
push
mov
adc
lcall
cmpsb
mov
int3
stc
mov
cmpl
mov
and
push
push
sub
add
std
sub
in
jne
xor
mov
addr16
sti
jnp
mov
mov
clc
push
add
jae
mov
mov
inc
inc
dec
mov
pop
adc
sti
subl
push
jns
les
aam
loope
sub
repnz
mov
out
adc
arpl
mov
mov
decl
in
aaa
lds
insb
jle
sub
repnz
nop
out
jae
icebp
lret
add
add
in
sbbb
fs
mov
pop
sub
inc
jno
inc
rorl
mov
add
test
icebp
mov
jmp
and
sbb
sbb
fs
bnd
push
cltd
in
add
cwtl
jmp
sti
jbe
test
or
dec
fisubl
xchg
inc
push
fsubs
outsl
mov
hlt
inc
mov
pushf
movsl
mov
jle
std
push
cli
inc
ret
mov
arpl
xor
aaa
rolb
int
mov
or
jg
pop
sub
adc
movb
xor
in
lds
and
jge
inc
cli
insl
xor
repz
int
push
pop
out
lods
les
jmp
fwait
jmp
mov
fnsave
repnz
push
shll
int
gs
pusha
roll
call
pop
pop
mov
mov
clc
jl
inc
mov
jno
aaa
sti
sub
imul
loope
in
xchg
faddp
jmp
sarl
and
mov
test
and
mov
imull
ror
call
mov
fsubl
jecxz
sarb
pop
jbe
cmp
scas
fadds
ds
jmp
cld
pop
xor
call
jg
lock
mov
inc
int
out
fs
aad
bound
roll
sbb
out
rorl
inc
xor
push
mov
int3
mov
and
jge
xlat
and
xor
psubq
push
jl
mov
jle
mov
inc
mov
xor
mov
sub
xchg
mov
xlat
cs
push
sbb
loope
or
cmp
cmpsl
sub
dec
iret
in
jns
mov
jae
sub
sub
inc
fidivl
rorl
mov
jle
and
nop
pop
lods
rol
mov
xor
sahf
aaa
enter
adc
adc
movsl
or
pop
aas
or
les
mov
jbe
dec
jl
xchg
fwait
dec
mov
std
push
enter
aas
pop
popa
sbb
cmpsb
imul
bound
jg
das
out
add
jecxz
stos
pop
mov
mov
jg
js
in
xchg
pop
inc
stc
jg
cmp
xor
int3
push
iret
dec
dec
jl
or
outsb
imul
jno
jns
es
fcomps
sarb
fildl
cmp
sbb
inc
in
inc
rorb
and
or
push
dec
jns
xor
inc
sti
subps
mov
iret
stc
repnz
aas
lret
dec
jns
cmpsl
jle
jns
adc
call
test
lods
inc
xor
xor
push
mov
test
addr16
leave
xor
xchg
push
sbb
fnstsw
mov
pop
fld
xor
xor
or
imul
mov
fsts
lock
cwtl
in
mov
out
in
adc
xchg
inc
adc
or
sbb
jbe
test
xor
mov
lock
popa
enter
jno
mov
testl
jae
mov
push
or
fidivrs
je
push
mov
add
add
movsb
mov
ret
out
cld
mul
into
inc
mov
inc
jp
push
xadd
mov
std
xorb
rcrl
and
push
jnp
lods
add
test
icebp
andb
hlt
scas
lea
popf
orb
mov
cmp
inc
and
dec
sub
dec
and
fnstsw
iret
xchg
cli
into
out
push
andb
xchg
inc
out
mov
sbb
es
pop
add
jae
jnp
jge
out
hlt
sub
push
sbb
push
sub
ja
jge
insl
movsb
pop
imul
jg
jb,pn
sbb
jae
sbb
roll
push
xor
aam
cld
js
xor
call
inc
ficompl
leave
cld
inc
pop
mov
dec
inc
movsb
out
push
mov
mov
in
lcall
push
ds
mov
jno
push
lods
daa
iret
jnp
dec
cmp
dec
sub
aad
cmp
cmp
fstpl
mov
rorl
jns
daa
lret
jecxz
cmp
cmpsl
outsl
xchg
sub
cld
mov
pop
dec
inc
aam
test
pushf
sti
dec
adc
and
cld
mov
mov
cmp
mov
das
pop
cwtl
std
inc
xchg
gs
popa
inc
out
ss
push
pushf
mov
xor
or
std
mov
bound
jle
andb
mov
dec
insw
iret
aaa
in
xor
repz
insb
mov
iret
cmp
cs
arpl
xor
loopne
push
mov
cmp
out
mov
or
in
sbb
lcall
out
lds
cltd
fstps
jp
test
decl
mov
data16
shll
aaa
sbb
mov
or
push
xchg
roll
lret
adc
ljmp
les
add
jle
adcl
cmc
out
mov
pop
cld
and
ret
pushf
test
leave
out
hlt
and
and
dec
mov
push
dec
pop
inc
or
call
mov
popaw
ret
dec
cmp
adcl
jno
fcoms
xchg
sbb
aas
aas
jge
push
sbbb
cmc
xor
mov
loopne
sahf
flds
mov
push
or
sbb
stc
stc
lcall
iret
mov
adcl
xchg
jecxz
lods
jge
aas
outsl
push
mov
test
or
fs
mov
fistps
ret
xchg
and
xor
out
ds
jg
cmp
orl
into
xchg
stos
cmp
ja
mov
sub
pop
out
push
negl
test
andl
adc
adc
mov
mov
outsb
loop
adc
in
daa
cmc
push
int
mov
out
or
loope
sti
test
insb
add
jp
in
sbb
jns
xchg
out
xchg
js
jmp
rclb
fdivrs
movsl
clc
fstpl
jp
lret
pop
in
stc
les
test
jmp
pop
imul
cmp
sbb
pusha
sub
inc
jp
or
jnp
bound
es
sub
adcb
cmp
lret
push
cmpsl
xchg
dec
ja
inc
dec
add
pushf
or
out
test
jle
push
and
mov
iret
or
das
rcr
mov
push
leave
mov
int3
test
sub
movsl
pop
enter
cmp
mov
pop
xchg
mov
enter
add
add
and
xor
ficoms
fldt
stos
ficompl
jne
insb
mov
sub
daa
pop
ds
cli
out
mov
outsb
lcall
adc
and
push
dec
imul
dec
mov
pop
sub
mov
add
mov
cli
sbb
and
fdivs
in
xchg
mov
frstor
je
jno
lret
push
add
pop
iret
aam
xor
sti
testb
ficompl
lahf
adc
imul
std
xor
xor
aas
test
mov
adc
inc
add
gs
divl
enter
or
dec
xor
mov
mov
push
pusha
aam
into
xor
in
pusha
inc
sub
loope
out
enter
scas
xchg
pop
xor
pop
lcall
adc
inc
call
dec
xchg
pop
jle
mov
in
fdivrl
sbb
in
jmp
mov
faddl
xor
cwtl
pop
jp
mov
mov
aad
mov
mov
xchg
leave
xchg
jg
sbb
cmp
sbbl
imul
jo
loopne
cwtl
ja
rcll
sub
push
add
rcrl
cmc
mulb
fcomps
xchg
popf
adc
jae
pushf
inc
jnp
adc
push
mov
jp
test
inc
and
call
idivl
dec
in
inc
xlat
mov
call
adc
pop
mov
push
inc
jg
adc
outsb
adc
jmp
pop
xor
mov
xchg
sti
shll
sub
mov
dec
ret
sbb
stos
movsl
pop
rcrb
jecxz
dec
gs
subb
lock
shrb
inc
ds
mov
pop
stos
mov
loop
inc
aad
fistps
in
or
imull
cmp
push
in
fisubrl
cmp
jmp
stos
mov
iret
test
gs
fimull
cs
ja
in
repz
pop
cmpsb
outsl
xor
inc
mov
lret
sbb
xor
add
cs
pop
or
mov
daa
cmp
leave
mov
inc
sub
arpl
mov
out
rorb
imul
lret
fstps
dec
cmpsb
inc
dec
adc
ss
cmpsb
fbld
out
sarb
sti
and
jb
ds
repz
ficompl
lret
dec
test
pop
mov
loopne
shrb
pop
push
repnz
dec
adc
std
jnp
repnz
outsb
xor
std
test
push
into
cmp
and
dec
cmp
mov
jg
and
push
dec
divl
mov
sub
mov
dec
or
out
pop
inc
sbb
pop
es
mov
sbb
enter
mov
pop
jmp
mull
push
and
mov
mov
jne
jae
loopne
inc
mov
xchg
in
mov
call
mov
ucomiss
std
push
xor
arpl
xchg
jne
jae
lea
int
add
push
popf
mov
fsubs
neg
cld
out
mov
ja
dec
sbb
mov
sbb
or
shrb
test
scas
and
push
icebp
pop
xor
cli
ss
lds
cmpsl
test
xchg
dec
rcl
fsub
inc
ret
push
or
mov
rorb
call
push
lahf
aaa
pusha
add
and
or
inc
jns
pop
and
jo
push
loop
rolb
add
pusha
xchg
sub
xchg
sbb
adc
sub
inc
jne
xchg
push
incl
push
mov
aad
dec
adc
mov
dec
mov
mov
pop
pop
lea
pusha
xchg
jne
mov
stc
pop
das
xor
daa
in
sub
fidivrl
andl
lret
xchg
scas
fadds
push
mov
sti
push
jmp
mov
sar
cmp
jp
test
xchg
xchg
xchg
dec
mov
sbb
xchg
xor
lahf
mov
ljmp
xchg
push
gs
add
gs
insl
adcl
add
mov
sub
lods
xchg
out
lods
cli
pop
jo
adc
push
or
nop
dec
or
xchg
sbb
adc
lea
je
mov
lock
loopne
pop
jge
push
mov
fwait
mov
inc
nop
aad
adc
cmp
mov
test
jp
jecxz
xor
pop
in
pop
mov
xor
icebp
push
pushf
sarl
mov
xlat
clc
orl
cs
loope
test
clc
xor
movl
xlat
jmp
xor
imul
sahf
nop
mov
int
xchg
xor
popa
or
adc
jecxz
fildl
dec
inc
jg
pop
cmp
out
add
inc
pop
aaa
push
sbb
mov
fildll
and
lods
lds
je
xchg
les
cld
lahf
cmp
push
pop
scas
add
enter
and
push
pop
or
jecxz
and
imul
jb
jne
jge
pop
xor
fcompl
sbb
inc
mov
arpl
push
mov
lods
xchg
xor
mov
in
call
xchg
jae
inc
in
and
sbb
lret
inc
push
out
lcall
sub
pop
outsl
jbe
dec
xor
and
sti
fcomps
xchg
lret
dec
je
ljmp
xor
lret
inc
cmp
lcall
mov
jmp
mov
jp
sbb
movsb
and
dec
fldt
cmpsl
sti
add
mov
push
jbe
inc
xchg
ret
jb
pop
hlt
xchg
xor
in
je
les
fwait
in
jmp
movsb
jae
addr16
or
xlat
movsb
insl
sub
add
sbb
repnz
mov
jne
ret
repnz
lret
xchg
cmc
cmp
push
mov
in
push
out
xchg
popa
decb
mov
ljmp
dec
fdivs
dec
cmp
in
mov
dec
cmc
cltd
dec
pop
jne
aas
pop
pop
mov
mov
fs
and
push
adc
sti
push
add
hlt
lods
adc
popf
cwtl
inc
scas
sti
stc
lds
or
or
and
pop
pusha
pop
and
data16
pop
xchg
rclb
out
popa
add
insl
lods
dec
repz
mov
das
mov
punpckhwd
and
sub
pop
and
xchg
cmp
jns
int
mov
dec
sub
push
daa
arpl
fistpl
and
inc
inc
stc
outsb
pop
out
inc
push
sbb
mov
pop
add
pop
test
add
pop
sub
cmc
inc
aad
mov
xchg
jmp
insl
fxch
outsb
mov
test
cld
pop
mov
fsts
cwtl
outsb
and
inc
dec
lds
inc
sub
inc
adc
ljmp
testb
repnz
mov
out
lcall
scas
call
repz
loopne
rcrl
cmp
cwtl
or
or
jge
mov
add
scas
dec
fcoms
repz
add
aas
and
scas
push
pop
cmp
mov
xor
push
pop
insl
shlb
adc
push
add
fildl
mov
stos
xchg
xlat
loop
dec
fidivl
cmp
out
fstl
dec
cli
std
mov
aad
das
jl
loope
pop
xlat
out
sub
ljmp
rcrb
lret
adc
call
cmpsl
jbe
sub
insb
pop
ret
push
fcoml
pop
mov
pusha
sbb
lods
xor
cpuid
xor
aam
push
push
insb
jg
sbb
push
pushf
in
rorl
xor
movl
lds
pushf
or
test
and
cwtl
mov
or
loope
popf
out
sub
xlat
add
scas
jg
rcl
xor
int
jmp
rcrl
shll
cwtl
es
inc
push
arpl
dec
lret
and
jecxz
sbb
pop
and
pop
jge
testb
add
dec
jns
add
in
xor
inc
mov
jl
test
pop
add
and
fldl
test
pop
aas
insb
lds
into
pop
clc
cmpsb
test
popl
das
out
pop
loope
pop
sub
fs
dec
cmp
mov
pop
lock
dec
test
fsubrl
lods
add
out
dec
adc
rcl
mov
xchg
fcmovnu
xchg
mov
xchg
popl
out
jg
adc
xor
sahf
push
out
das
movsb
ret
adc
inc
jge
xchg
pop
add
xchg
rorl
mov
daa
lock
mov
pop
fmul
mov
add
jp
mov
xlat
outsb
xor
sub
lods
cmp
data16
inc
mov
test
xlat
xchg
mov
or
fcomip
push
clc
cmp
mov
push
pop
pop
jae
int
icebp
push
out
dec
popa
jecxz
push
xor
lret
in
in
rorl
jle
xchg
inc
shlb
or
popf
stos
cli
mov
pop
in
jo
jmp
jbe
dec
in
xchg
into
lds
mov
fdivp
jnp
mov
mov
icebp
test
stc
adc
pushf
jno
shlb
into
insl
add
or
pusha
xlat
pop
in
jo
out
dec
jns
lahf
pushf
pop
idiv
sbb
in
mov
mov
clc
lret
pushf
call
dec
in
ret
push
cwtl
push
or
cmpl
jns
and
data16
adc
push
lods
loopne
andl
leave
fcomp
sub
mov
or
shll
rcr
mov
fisttpll
call
adc
inc
mov
sbb
pop
gs
push
insl
mov
rolb
ret
popf
daa
shl
mov
shrl
sub
insb
pushf
dec
pop
dec
push
ds
das
dec
rol
xor
xor
lret
inc
inc
xor
jmp
rcl
sub
push
out
cmp
loopne
out
inc
pop
iret
and
push
mov
sarb
jno
sub
push
enter
lds
ss
jb
push
lcall
jg
mov
xchg
cs
in
mov
add
outsl
stos
inc
std
out
adc
pop
cmp
pusha
push
or
rorl
dec
lds
mov
mov
fmuls
ljmp
xor
dec
fdivrl
pop
mov
ret
cmp
adc
fsubl
fildll
mov
rclb
call
sub
xor
sub
sahf
pop
shll
xor
stc
arpl
jno
imul
or
pop
xchg
mov
in
cld
icebp
xchg
scas
xchg
ljmp
add
out
std
ljmp
ljmp
sbb
mov
lea
bswap
ja
negb
lcall
vmread
lods
jb
mov
pop
addl
mov
jno
test
jmp
ds
js
dec
in
out
xor
mov
lods
push
in
and
out
push
andb
adc
lret
ret
popf
jns
sbb
mov
jp
shll
push
test
jne
mov
inc
xor
xlat
xchg
lods
in
sbb
aam
into
insl
add
sti
lock
pop
and
or
imul
pop
mov
hlt
jnp
push
pop
pushf
fwait
or
sub
pusha
mov
push
xchg
xor
out
mov
xor
mov
sub
aam
sbb
subl
xor
cmpb
into
dec
ss
jo
lods
cwtl
nop
sbb
pop
test
and
pop
ror
lret
out
les
shrl
ret
jl
fdivs
popa
mov
stos
lods
pop
pop
mov
pop
into
orl
in
gs
cmpsb
out
leave
inc
int
inc
xor
loope
and
push
mov
cmp
adc
in
movsb
fdivrs
mov
dec
cmp
ss
mov
pushf
pop
orb
xchg
mov
shll
push
lcall
aas
mov
dec
sbbb
dec
mov
dec
jle
push
inc
dec
lock
sbb
pop
int
and
pop
lret
cmpsl
dec
or
or
ljmp
rcll
ss
push
bound
test
mov
cli
push
cmp
xor
sahf
adcl
inc
cmp
int3
loopne
lcall
out
push
cwtl
xor
mov
subb
cmp
jp
push
or
jecxz
adc
in
sub
test
push
out
shl
and
test
enter
jae
in
jle
addr16
test
sbb
dec
or
mov
cmpl
jns
mov
arpl
push
sbb
icebp
aam
dec
sbb
or
scas
out
sbb
mull
ret
ss
sarb
cmpsb
jno
inc
jnp
and
add
lock
int
cli
mov
mov
gs
xchg
out
hlt
cmp
fs
shlb
outsl
cmc
jnp
jl
out
mov
sub
pusha
cltd
loopne
mov
test
out
shrb
dec
pop
int3
inc
fs
sub
mov
sahf
rcr
pop
es
xchg
nop
js
sbb
movsb
inc
bound
cmp
xchg
inc
subb
test
inc
xchg
xchg
les
sbb
dec
std
out
fsts
ss
add
popa
fdivl
jp
xor
ds
stos
outsb
in
ljmp
add
push
fildll
inc
stc
adc
sti
or
push
sbb
les
mov
cld
xchg
out
adc
add
cltd
imul
test
cmp
and
mov
pop
pop
pop
inc
sub
inc
cmp
xchg
pop
jb
add
clc
or
scas
sbbl
inc
xchg
inc
and
div
outsl
mov
mov
pop
adc
pop
idiv
cmp
jmp
aaa
cmp
mov
pusha
jl
fwait
in
jge
pop
jnp
bt
and
and
push
cwtl
out
ss
push
iret
sbb
pushf
leave
adc
push
ret
push
xor
adc
xchg
stos
xor
dec
cmp
outsl
mov
inc
jp
sbb
fidivl
jnp
mov
pop
cmc
jae
outsl
push
lcall
idiv
fldcw
mov
gs
xor
sbb
sbb
xchg
xor
arpl
dec
daa
jo
loopne
arpl
aas
mov
popf
ljmp
jo
jnp
add
mov
cwtl
sub
push
jp
popf
pop
cmpsl
pop
and
in
cs
cld
xlat
fnstenv
je
test
sbb
xchg
repz
or
pop
push
xor
mov
je
mov
scas
lods
in
push
adc
xor
lds
lret
jp
xchg
fstps
push
push
dec
mov
data16
adcl
jbe
in
popa
pop
push
bnd
inc
rorb
fadds
xchg
jmp
xor
sbb
lea
sbb
mov
ds
dec
add
mov
mulb
push
hlt
fimull
mov
push
add
incl
dec
mov
test
mov
sbb
ds
icebp
xchg
pop
mov
mov
or
jecxz
push
ja
out
inc
fisttps
and
mov
es
lret
addr16
inc
aam
mov
jbe
xor
cmp
cs
loopne
clc
enter
pop
sbb
dec
cmp
xchg
jne
mov
sub
aam
lods
lcall
jle
jns
mov
sbbb
repnz
or
or
mov
sub
and
aad
adc
loopne
ret
ret
mov
xchg
jmp
adc
pop
int
cltd
jns
lock
jne
fisubl
push
lret
cli
xor
mov
xchg
divl
jecxz
xor
push
dec
daa
fildll
xchg
fsub
js
dec
cmpb
frstor
xchg
cs
pop
mov
cmp
les
aas
xor
cmp
mov
mov
sbb
out
jo
jg
fabs
js
inc
sti
ds
test
insl
lcall
insl
pop
mov
sbb
aam
call
ficompl
and
xchg
shll
xchg
js
test
stos
sub
sti
pop
and
mov
fadds
cmp
dec
les
mov
mov
lds
ret
ret
sti
ret
sub
adc
sbb
les
fstp
out
sahf
imul
push
push
imul
pop
ret
sub
out
xor
push
push
es
push
bound
lea
mov
in
das
and
cmp
das
xorb
jge
gs
in
orl
dec
nop
in
ret
sbb
ret
adc
mulb
cmp
dec
mov
xchg
out
push
int3
add
mov
fwait
pop
ds
lahf
sub
or
daa
in
or
data16
sbb
mov
add
add
sub
insb
lods
or
pop
mov
enter
rorb
rcll
enter
mov
je
inc
lds
out
out
lret
jg
xchg
push
insl
push
xor
push
rclb
mov
insl
push
daa
pop
pop
leave
movsb
clc
push
dec
jmp
jo
push
stos
ret
mov
sub
jp
lea
sahf
mov
add
jl
out
jmp
dec
outsb
psraw
test
sbb
and
pushl
pop
adc
shr
es
adc
fs
xchg
or
fisubrs
sbb
movsl
into
push
loop
lcall
lock
in
xchg
in
cld
push
inc
sbb
pop
lea
mov
mov
mov
jb
inc
dec
int3
mov
jb
pop
sbb
or
jl
or
xor
rclb
clc
xchg
add
mov
sbb
push
aas
push
pop
icebp
sub
mov
mov
test
pop
sbb
icebp
add
movsl
ja
aam
repnz
xor
sub
loopne
jle
scas
mov
ret
fbstp
pushf
aad
xchg
push
pushf
push
iret
mov
sbb
and
dec
test
xchg
jns
inc
push
js
pop
dec
in
fwait
xor
movsb
movsl
lret
adc
ds
cmp
push
sub
scas
das
sbbb
pop
adc
loop
pop
cmp
pop
pop
dec
jecxz
clts
insb
mov
lcall
cwtl
orb
pushf
or
leave
clc
ret
pusha
add
call
dec
bound
xlat
sbb
shlb
lods
iret
xor
shll
xor
int3
lock
mov
jle
cmc
jge
mov
out
mov
or
inc
in
adc
xchg
lods
stos
sbb
fnstcw
das
add
sbbl
addl
inc
hlt
out
data16
test
push
pop
or
push
mov
push
or
fs
cmc
jmp
popf
xor
fnstsw
cmpb
je
pop
adc
xchg
cltd
sub
pinsrw
packssdw
lds
stos
adc
adc
mov
and
or
xchg
call
movb
sbb
and
push
xchg
or
hlt
cmp
js
push
stos
je
push
cwtl
outsb
stc
lods
push
mov
je
mov
inc
pop
adc
loope
stos
aas
daa
push
stos
mov
stos
push
cmp
scas
dec
lods
adc
pusha
rclb
push
mov
int3
scas
mov
cmp
ljmp
or
stos
xchg
mov
mov
jnp
jbe
imul
mov
mov
inc
add
mov
xor
xchg
push
shrl
loopne
arpl
rol
cmp
aad
push
xchg
data16
mov
movsl
sti
add
dec
inc
xor
jns
negb
cld
test
rclb
or
imul
test
cmp
dec
inc
mov
mull
xchg
add
cmpsl
stc
rorl
scas
lcall
pop
pop
pop
cmp
cltd
mov
ret
push
adc
aas
in
or
jae
or
xor
fs
and
xor
push
jecxz
inc
cmp
sub
pop
add
mov
mull
sub
xchg
fldt
sbb
shrb
cmp
xor
xchg
xchg
pop
popf
pop
shll
fistl
jns
inc
push
out
imul
std
hlt
push
outsl
sbb
sub
mov
and
lds
pop
xor
mov
iret
mov
inc
jbe
imul
shll
mov
add
inc
shrl
jne
jge
stc
js
xchg
aaa
lds
jb
push
sub
xchg
daa
rcl
add
call
je
pop
outsb
jne
sub
xchg
xor
cmc
sbb
inc
mov
testl
cmp
mov
push
mov
jbe
cmpsl
xor
cmp
daa
push
jo
sbb
add
cli
adc
push
cmp
dec
sbb
call
xchg
fdivrs
out
xchg
nop
push
out
mov
push
scas
and
jns
or
dec
mov
fists
pusha
dec
in
mov
sbb
xchg
and
and
out
dec
cmpsl
cmp
xchg
sbb
or
dec
dec
or
cmp
lret
cli
push
popa
sbb
inc
adc
push
data16
pop
mov
shr
xor
sub
dec
imull
pop
mov
sti
or
cmp
mov
pop
mov
je
inc
stos
scas
push
ss
icebp
test
in
out
push
loop
jg
es
gs
leave
inc
mov
stos
pushf
pop
fistpl
xchg
out
dec
js
push
push
sub
xor
mov
repz
push
cmp
subl
test
jg
mov
dec
pop
not
mov
xor
xor
mov
adc
sbb
mov
test
push
sub
pop
xor
dec
inc
jns
in
je
mov
ret
mul
nop
rcll
outsb
out
xchg
pop
pop
int3
inc
adc
mov
sbb
out
scas
add
pop
add
adcl
in
int
jb
aad
test
mov
dec
adc
push
xor
movsb
xchg
mov
fadd
in
sbb
into
push
xchg
lock
adc
mov
add
into
xor
xor
pop
xchg
add
jmp
popf
rolb
sub
mov
cmp
imul
rclb
iret
or
push
and
jge
xchg
xor
jbe
cs
imulb
cmp
dec
dec
jo
cmpsl
fwait
pop
dec
frstor
nop
inc
hlt
sar
scas
dec
lahf
stos
in
jo
nop
hlt
xlat
push
arpl
adc
mov
aaa
mov
sahf
stc
mov
clc
cmpsl
push
leave
lcall
dec
add
and
movb
xchg
cmpsb
cmp
inc
repz
out
out
mov
pop
lahf
repz
pop
nop
mov
nop
cmp
mov
mov
pop
repz
pop
xor
mov
jb
push
jne
adc
dec
outsl
fnsave
ljmp
lret
push
xor
movsb
mov
ror
sub
sbb
mov
fistpl
sub
test
add
cmp
jae
jmp
or
mov
in
or
fldl
cmp
aas
fldcw
ja
lods
mov
lods
inc
mov
mov
lea
or
leave
repz
rcll
aad
pop
xorl
cmp
pop
xor
pop
jecxz
ljmp
leave
in
stos
adc
push
cmp
fidivs
push
mov
push
mov
sbb
dec
add
mov
xlat
dec
sub
cltd
sub
or
inc
popf
push
rcll
lock
push
sbb
rorb
inc
push
ja
cltd
mov
sub
in
or
daa
pop
xor
lret
ret
lds
xchg
xchg
adc
adc
xchg
pop
sub
pop
loope
rolb
int3
xchg
stc
into
jo
add
loop
ds
pop
inc
pop
cld
fs
mov
test
xor
xlat
push
test
and
jae
inc
and
xor
jl
into
incl
ficomps
jmp
or
mov
rcr
xor
icebp
fmul
add
ret
cmp
pop
pop
lret
stos
cmp
test
dec
sarl
mov
bound
faddl
push
mov
ret
pop
sbb
cmp
ljmp
stos
inc
pop
mov
shll
pushl
in
sti
xchg
aas
rorl
jecxz
subb
xor
or
icebp
fdiv
dec
gs
add
mov
xchg
mov
rcll
test
sbb
je
push
sbb
dec
mov
mov
decl
into
mov
iret
pop
call
or
cltd
mov
rcrl
leave
into
bound
jmp
addr16
push
cmpsl
lret
movsl
aad
xchg
fdivrl
sub
push
sahf
or
stc
int
mov
mov
and
mov
fimull
dec
mov
loope
push
jne
movsl
out
dec
scas
andl
mov
into
mov
rcrb
cmpsb
clc
mov
decb
mov
push
mov
out
stos
in
jmp
dec
mov
push
imul
jle
icebp
int
mov
mov
sbb
cwtl
insl
call
push
popf
pop
aam
test
mov
push
mov
dec
and
ljmp
push
rclb
xchg
mov
push
pop
add
and
push
imul
mov
loop
xlat
add
in
inc
mov
mov
int3
call
hlt
in
shlb
add
adc
lret
ja
int3
cmp
mov
and
inc
pop
xchg
pusha
mov
add
xchg
xchg
sbb
dec
push
ss
fisubrl
push
cmpsb
mov
push
out
call
aas
loopne
push
in
add
and
mov
fs
in
test
mov
mov
js
or
sub
or
sarl
push
adc
popa
xor
mov
pop
mov
imul
jge
jae
mov
mov
sub
sbb
rcl
pop
or
rolb
mov
fadds
jno
pop
insl
cld
add
push
pop
mov
addr16
push
clc
cwtl
sahf
pop
jg
or
dec
mov
cmp
xor
movsb
ret
aaa
popf
inc
hlt
or
and
mov
xchg
sbb
js
test
rolb
int3
out
lcall
mov
sbb
push
push
dec
out
mov
test
jg
testb
cld
icebp
enter
dec
jno
andb
sahf
dec
das
dec
inc
jle
sahf
push
iret
ret
sub
jp
testl
neg
pop
ret
lods
in
adc
cli
setp
push
mov
inc
push
shrb
dec
mov
in
mov
repz
daa
push
dec
in
out
lock
ret
movsl
ljmp
orb
popf
and
das
rolb
ljmp
fidivrs
ja
mov
in
cli
dec
mov
out
dec
and
fldt
and
ds
lret
inc
test
and
mov
loop
and
jbe
push
mov
jle
dec
xorb
adc
inc
scas
adc
cld
je
pop
jo
mov
popa
inc
or
fisubrl
sub
fiadds
popa
mov
pop
cmp
call
xchg
mov
rclb
jecxz
adc
leave
pusha
clc
push
push
and
push
sub
test
cmp
cli
cmc
xor
std
hlt
insb
ret
lret
call
adcl
add
pop
mov
lock
and
sub
inc
cld
pop
jb
loopne
aaa
pushf
and
mov
sub
push
and
daa
lcall
fisttpl
mul
int3
cli
jnp
cmp
adc
aam
push
mov
cmp
jp
pop
popf
cwtl
push
xchg
inc
ss
jmp
adc
jmp
out
mov
cmp
add
sub
shl
pop
dec
rolb
pop
es
gs
movsl
mov
divb
add
dec
shlb
fildll
dec
add
mov
sub
ss
and
pop
dec
sahf
sbb
xor
lods
inc
mov
fidivl
mov
mov
gs
aas
pop
push
jae
push
xchg
or
outsb
sub
out
sub
leave
xchg
mov
jge
pop
imul
lods
mov
and
mov
sub
pop
fsubrs
stc
dec
xchg
cltd
orb
mov
rolb
aaa
addr16
lods
rcrb
mov
pop
les
xor
rclb
jne
adc
mov
mov
repnz
xlat
imul
mov
or
ficoml
inc
mov
insl
add
pop
pop
jmp
int3
jl
mov
xor
mov
xchg
out
leave
xchg
outsb
aad
fmul
ficompl
add
push
jne
add
xlat
or
and
xor
sbb
sahf
ja
jb
or
sub
shl
sbb
pop
sub
xchg
movsl
jmp
movsl
test
insb
scas
xor
pop
push
outsb
mov
arpl
cld
jmp
jae
dec
lds
fldt
push
cwtl
xchg
xorl
cwtl
fildll
fisttpl
pop
aaa
int3
stc
sti
mov
ficomps
ret
or
and
pop
inc
popf
in
and
ret
inc
arpl
into
xchg
push
mov
adc
sbbb
and
and
cmp
repz
imul
mov
stos
sbb
jnp
xor
inc
jb
xchg
aaa
pop
jbe
loopne
out
mov
inc
adc
and
fcmove
cwtl
add
iret
inc
jle
dec
insb
inc
jmp
popa
dec
test
mov
fcomps
rolb
adc
pushl
sub
add
mov
jecxz
in
sub
jmp
sub
cmpsb
jae
cmp
jle
xor
jmp
fwait
iret
cmp
mov
jp
mov
and
enter
addr16
inc
and
mov
sti
and
out
cmp
mov
mov
xchg
sub
and
pop
adcl
or
movsb
orb
adc
rcrb
mov
add
xchg
sub
imul
enter
adc
dec
decl
pop
push
int3
cmp
or
popf
xor
push
fdiv
ficoms
aas
mov
push
shlb
and
std
mov
call
mov
cli
add
in
jo
add
insl
adc
stos
inc
mov
aam
sbb
mov
add
in
pop
sbb
dec
sub
std
icebp
add
stos
push
imul
xchg
insb
jnp
add
and
test
sarl
add
imul
jae
insl
mov
or
cmp
sbb
or
loope
and
lcall
or
mov
aaa
mov
cmc
jmp
sti
cltd
sbb
xor
push
jo
lds
shll
subl
mov
pop
iret
and
jae
xchg
jae
adc
jb
xchg
imul
pop
xchg
subl
int3
mov
fxch
pop
sub
and
aaa
pusha
stc
mov
lahf
cld
ljmp
lret
lahf
mov
inc
mov
loopne
and
and
and
pushf
pop
lret
pop
xor
mov
mov
cs
and
int3
push
fwait
icebp
add
data16
inc
pop
cwtl
lahf
std
pop
jo
imul
or
xlat
dec
cmpsl
data16
test
sbbl
mov
xlat
nop
nop
sub
fldcw
ret
mov
js
loope
mov
push
mov
jecxz
mov
dec
xchg
jo
cld
es
and
pop
dec
clc
jmp
js
imul
or
rcll
fldl
add
imul
jo
into
adc
test
out
test
imull
ljmp
sub
loope
inc
out
cmc
mov
mov
sbb
pop
mov
repnz
cmpsl
xchg
jnp
out
out
arpl
mov
les
aad
lret
pop
outsb
jp
mov
nop
mov
dec
push
pop
pop
dec
fldl
cld
pop
aaa
mov
enter
push
adc
cmc
icebp
dec
cmp
sahf
rorb
xchg
cmpl
pop
lods
sub
shll
inc
jmp
jne
inc
sbb
aam
pop
xor
rorl
sub
xchg
daa
mov
pushf
je
sbb
push
lea
add
pop
and
pop
jno
lea
cmp
lcall
xchg
lds
out
push
push
divb
dec
push
jge
push
movsb
in
pusha
adc
jge
test
repz
sbb
push
in
jo
clc
mov
pop
or
push
xchg
push
xor
and
outsl
insl
ljmp
inc
cmpsb
inc
mov
movsb
in
adc
out
fildl
sbb
jnp
push
test
xor
icebp
pop
mov
adc
sbb
call
add
adc
or
out
mov
dec
outsl
dec
movsb
mov
add
jo
mov
adc
ret
loopne
mov
push
jge
inc
out
movsl
mov
cmp
mov
pop
adcb
fs
divl
cvtps2pi
sbb
mov
repz
mov
ret
out
xchg
cwtl
gs
sub
push
cmpsl
in
xchg
or
and
mov
outsl
jl
cmp
xchg
ljmp
stc
ss
jle
nop
jnp
out
scas
outsb
inc
stos
data16
push
js
mov
or
fists
aad
into
cmpsl
mov
mov
pop
in
scas
popf
jp
mov
ret
mov
das
loope
pushf
add
cmpb
lock
mov
add
das
mov
xor
mov
sbb
sarl
jmp
mov
movsl
and
mov
jbe
fsub
cmpsb
and
push
xor
lds
repz
es
and
popf
ret
out
pop
xchg
xor
sarl
pop
dec
adc
insl
inc
mov
sbb
lcall
jmp
ds
cmp
aad
cmp
and
or
xchg
loopne
mov
xchg
dec
inc
out
movsl
cmp
bnd
push
addr16
mov
loop
movsl
xchg
movsl
test
xor
jg
adc
repz
and
test
pop
pop
lods
cmp
enter
arpl
stos
aas
xor
and
and
pop
jb
vpand
iret
pop
cmp
pause
fbld
sub
int3
and
mov
stos
mov
jnp
fisttps
dec
ret
add
sar
jle
shrl
push
jno
movsl
imul
dec
js
data16
stc
enter
mov
and
out
inc
scas
rcrl
xchg
arpl
iret
out
or
or
cltd
cmc
mov
and
imull
sub
dec
out
cmpsl
ds
mov
ss
mov
inc
or
loop
shrb
or
mov
popf
lret
sbb
adc
add
mov
or
iret
and
mov
pop
cmpl
cmp
jmp
jb
ja
lahf
xor
mov
dec
add
pop
lea
ds
xchg
mov
ud0
call
mov
pop
push
aas
adc
dec
lock
inc
leave
dec
pop
cli
pop
mov
or
xchg
rorb
aam
iret
push
call
sub
insl
xchg
pushf
test
cld
pop
mov
popa
out
int3
sbb
jecxz
fiadds
sub
mov
lea
roll
icebp
js
mulb
mov
jae
adc
icebp
icebp
or
in
icebp
lret
sahf
cmpsb
adc
push
testb
mov
pop
inc
rorl
ret
mov
adc
push
in
dec
test
in
mov
in
sarl
mov
insl
adc
add
jne
mov
push
cmp
push
or
pop
rol
fidivrs
sbb
mov
dec
mov
xchg
cmc
in
cmc
out
pop
lock
mov
iret
and
clc
aam
jecxz
xor
call
pop
lods
or
loope
nop
xor
sbb
xor
adc
pushf
int3
dec
inc
ret
cs
adc
stos
stos
xchg
mov
ret
test
dec
movsl
add
sub
lret
inc
ror
xchg
leave
push
arpl
test
adc
jne
sub
stc
sti
icebp
sub
rcrl
jl
jae
fsubrl
xor
adc
adc
pop
cmpsl
push
pop
mov
xor
mov
ljmp
dec
sbb
sbb
jbe
sub
or
push
stos
pushl
clc
or
xor
fs
movsl
test
mov
dec
loop
cmp
mov
movsl
jl
aad
lds
xor
mov
jne
add
xchg
dec
lcall
xchg
subl
loopne
and
cld
jbe
scas
push
jl
sbb
xchg
adcl
idivb
sub
outsb
xor
xchg
fiaddl
add
cld
lahf
or
cmp
pop
rcrb
pop
jne
push
jno
cmp
xchg
enter
je
ret
mov
xchg
rorl
xor
adc
push
fdivl
xchg
fdivs
pop
jg
into
pop
mov
cli
aad
sarb
subb
rol
sub
and
sbb
lock
mov
xchg
push
and
stos
pop
or
fs
jo
int3
int
sub
pop
into
xlat
jno
mov
sub
enter
mov
pop
inc
cmp
sub
jne
int3
mov
xor
push
push
jg
in
les
out
jmp
pop
loopne
jno
ss
push
jl
movsb
cmp
mov
mov
mov
imul
out
das
xlat
xchg
pushf
mov
xor
js
adc
popa
jnp
fmull
or
pop
mov
rorl
mov
inc
aaa
inc
clc
dec
push
xor
mov
cltd
mov
mov
nop
daa
enter
repnz
pop
js
xor
addr16
sub
jne
sub
mov
dec
add
mov
ret
fidivrl
xchg
xchg
push
cmpb
shll
and
stos
or
popa
popa
mull
lds
imul
push
xchg
gs
scas
inc
mov
jle
push
xor
lret
fucom
xchg
dec
lcall
sbb
xchg
add
out
dec
jns
je,pt
mov
call
push
adc
jp
mov
add
mov
xchg
inc
sub
mov
lahf
inc
mov
cmp
add
push
mov
xchg
adc
jne
mov
orb
mov
xchg
jp
icebp
add
cmpsb
push
inc
sarl
mov
neg
movsb
sub
jnp
addl
int
adc
lods
test
mov
out
xchg
mov
sub
or
pop
sub
sbb
push
aaa
adc
ss
imul
sub
xchg
xchg
push
ljmp
xor
sub
push
stos
test
lock
pop
dec
rol
sahf
inc
scas
lret
push
aam
xor
ja
sbb
cwtl
lret
mov
mov
fistpll
mull
sbb
mov
mov
mov
add
aas
pop
push
pop
xor
xor
lock
stc
mov
adc
mov
xor
inc
mov
repz
addr16
pop
sahf
roll
cwtl
fcom
mov
out
sti
jo
mov
pop
add
clc
xor
loopne
mov
mov
mov
pop
pushl
pop
push
stos
adc
leavew
loop
sub
daa
cmpsb
int
hlt
dec
cmp
lret
int3
sti
testl
cmp
mov
sbb
shlb
xor
lock
insl
fwait
pop
std
int3
test
popa
sbb
bound
js
dec
je
push
pop
lahf
add
les
push
xor
mov
popf
stos
je
xchg
push
dec
jmp
scas
jmp
dec
adc
cmp
lods
in
fsubl
mov
inc
dec
shrb
inc
mov
push
mov
xor
fidivs
xchg
inc
imul
mov
sahf
ret
cmp
aam
aas
add
push
mov
mov
xchg
add
mov
jb
addr16
adcl
push
xchg
cmp
add
fwait
scas
lds
jns
pop
xchg
jp
fisttpl
mov
and
pop
add
or
jle
das
inc
jne
jbe
lock
jbe
fnop
sbb
xchg
rcrb
push
sbb
fldt
sbb
call
push
adc
xchg
mov
data16
pop
jl
pop
mov
xor
cmovle
std
aas
imul
adc
sahf
loope
fs
xchg
dec
fadds
rol
popa
arpl
pop
popa
adc
shrl
inc
add
stos
or
pop
and
push
js
mov
mov
or
in
jecxz
xchg
pop
in
cwtl
add
push
scas
dec
lahf
inc
inc
setno
jecxz
jge
adc
lret
sahf
clc
xlat
cmp
movw
sbb
les
sbb
dec
cmp
ffreep
mov
mov
adc
xchg
sub
jno
sbb
xor
lcall
in
cltd
mov
in
in
or
pop
or
iret
fidivrl
sahf
jmp
loope
sbbl
addr16
jg
mov
imul
mov
pop
fcoms
pop
adc
cs
pop
loop
or
mov
adc
dec
mov
push
icebp
xchg
lahf
aam
lea
mov
dec
pop
arpl
loope
je
mov
divb
mov
xchg
in
push
pop
sub
pop
sub
lds
push
out
mov
mov
mov
int3
sbb
gs
ud0
divb
cmp
adc
ds
inc
dec
lods
daa
adc
cld
in
enter
sbb
dec
lret
adc
mov
jmp
sbb
das
jle
shlb
scas
cs
gs
aad
xor
mov
ljmp
xchg
cmp
pop
sahf
shrl
cmpsl
andb
jg
jno
shlb
hlt
and
adc
lods
jp
ret
and
xchg
inc
sbb
popa
mov
das
push
fwait
cmp
je
lret
clc
cmc
ds
and
loop
rcr
lock
xchg
sub
mov
sysret
mov
rolb
andl
cmp
fistl
sbb
sub
dec
mov
pop
sbb
mov
dec
pop
and
notl
shrb
push
sahf
jle
lods
ret
aaa
pop
out
adc
in
mov
mov
data16
inc
dec
or
cli
rcrl
ljmp
dec
dec
adc
cmp
outsb
inc
push
negl
xchg
sahf
xchg
push
and
adc
pop
adc
lods
ljmp
inc
fs
mov
hlt
push
mov
jge
insl
sub
movl
cli
push
pop
test
std
test
xchg
jle
ljmp
xlat
or
or
sbb
push
clc
or
mov
lcall
adc
xchg
push
mov
fwait
mov
cmp
cmp
pop
and
pop
out
roll
jo
xor
testl
lds
fs
xor
push
arpl
add
jge
dec
push
daa
pushf
rcr
and
sbb
stc
clc
mov
xchg
push
push
xor
insb
push
push
adc
jne
jge
jmp
aaa
dec
movsl
jno
rorl
push
cld
ret
push
xchg
fdivs
inc
pop
jecxz
bound
xchg
and
cltd
std
lret
xor
fsts
js
sti
push
pop
and
movsb
insb
dec
in
pop
cmp
or
repnz
ret
leave
dec
or
clc
aaa
lret
inc
int3
and
jae
aad
xchg
out
lahf
cmc
notl
insl
aas
fimuls
pop
and
sahf
add
in
mov
fisttps
dec
xchg
jo
pop
pusha
out
push
xlat
mov
or
inc
and
bound
push
stos
inc
mov
ret
push
hlt
rcll
mov
ret
xor
mov
push
mov
sarl
imul
add
xchg
fidivl
lds
push
leave
cli
xor
pop
test
lock
lea
ds
xchg
mov
aam
push
in
cltd
mov
and
push
adc
pusha
add
shr
mov
add
icebp
insl
sub
je
int
push
mov
dec
mov
xor
sbb
push
lahf
push
inc
mov
imul
mov
bound
dec
fcomip
jl
dec
mov
imulb
insb
out
xor
add
or
mov
mov
or
jecxz
mov
and
test
sarl
es
adc
or
pop
repz
push
lock
aaa
lea
and
or
jno
stc
xor
pop
jmp
xchg
fstps
mov
popa
jbe
into
pop
jcxz
aas
cmpsb
out
sub
cmpsb
call
sub
add
mov
sarb
popa
mov
test
or
sub
adc
jnp
or
jno
je
insl
jno
inc
inc
sub
inc
sbb
insb
mov
stc
fcmovnbe
xor
imul
fadds
sbb
jnp
stos
and
lcall
fstpl
hlt
pop
xor
out
imul
cltd
loopne
dec
xor
fwait
std
arpl
imul
lret
cmpl
test
aaa
stos
in
rorb
repz
fildll
mov
dec
imul
mov
jmp
es
or
adc
xor
sahf
icebp
jp
mov
inc
shl
inc
stc
xchg
mov
test
cli
mov
divb
jne
jmp
sbb
mov
ljmp
mov
mov
add
dec
and
dec
xor
dec
dec
cmpsl
in
aas
or
push
add
js
insb
jae
push
daa
mov
jg
mov
jmp
xchg
sbb
out
mov
insb
testl
lock
loope
cmp
or
sub
dec
jmp
ss
test
jae
dec
xor
mov
pop
sub
rcrb
mov
jbe
jne
js
jae
sub
repz
fidivl
lds
mov
stc
sub
jbe
xchg
sub
jecxz
scas
mov
cmp
sub
or
mov
inc
pop
sub
lcall
push
adc
push
stc
arpl
ja
scas
sbb
mov
repz
test
ja
aad
nop
mov
pop
in
aaa
sub
jns
inc
cmp
sti
lods
daa
insl
jmp
inc
xor
inc
in
xor
aaa
int3
aad
adc
stos
sub
shlb
xchg
jp
into
mov
and
cmp
jns
fwait
jae
repz
cmp
and
into
test
dec
leave
xchg
xor
cmpsl
mov
ss
out
mov
and
push
mov
jno
rclb
rorl
xor
cmpsl
lods
ljmp
or
shrl
jecxz
cmp
cmpsb
cmp
inc
jo
shlb
roll
ret
xchg
push
rolb
aaa
adc
ret
adc
adcl
cmpsb
push
or
inc
jecxz
mov
leave
mov
jbe
or
shlb
stos
pop
inc
nop
inc
mov
mov
xor
in
add
dec
mov
dec
lods
js
bound
mov
clc
inc
inc
xchg
xor
inc
jge
mov
xchg
mov
mov
std
mov
lds
es
daa
add
mov
cmp
or
mov
ss
pop
inc
loop
add
aas
mov
repnz
fistpll
lods
gs
fsubs
and
or
push
adc
cmp
cmp
shl
pop
dec
neg
sbb
lcall
mov
ja
jge
icebp
scas
fistl
add
or
jae
dec
jg
xchg
dec
adc
push
addr16
mov
dec
mov
push
add
popa
lods
add
and
push
mov
iret
pop
fwait
mov
ret
aam
jmp
std
cmp
mov
push
scas
jmp
jmp
test
xorb
jb
cmp
pop
scas
mov
xchg
sub
and
inc
jmp
lds
inc
sbbl
jg
test
cmp
pop
push
mov
xorl
clc
add
fdivs
insl
std
das
adc
hlt
cltd
mov
push
push
push
arpl
jg
imul
mov
lret
scas
add
pop
xchg
jb
add
fcomp
mov
mov
jb
and
incl
in
mov
in
xor
xchg
test
lds
cmp
pop
xchg
jmp
pop
sub
mov
jl
adc
stos
jne
cmc
push
popf
ss
jb
pop
jmp
in
jbe
bound
aas
sbb
dec
cmp
or
push
inc
std
mov
add
mov
sbbl
pop
pop
fidivrs
fwait
lods
pop
sbb
fsubr
mov
inc
or
pop
cltd
sub
fadds
in
ret
cmp
sbb
int
xor
push
or
inc
xor
cmp
fldl
sbb
pop
pop
adc
nop
lret
cs
call
mov
int
push
mov
cmpb
cmp
cmp
in
call
mov
inc
jge
or
jp
idiv
test
jnp
xchg
cwtl
cmp
rol
fildl
out
gs
lds
pop
movsl
imul
mov
pop
and
test
xchg
xor
lods
lea
ds
pusha
jbe
pop
fisttpl
lods
stc
xchg
sbb
or
iret
shrl
jne
daa
cs
jge
cmpb
dec
out
xor
mov
dec
xor
lcall
popf
fistpl
arpl
jnp
mov
loopne
mov
xor
mov
shll
scas
and
xchg
cmp
mov
dec
fsubrs
jbe
cmp
ds
jbe
inc
xchg
loop
xlat
fidivrl
out
aad
in
add
dec
ret
sbb
push
xor
sub
xlat
xchg
negb
adc
dec
sbb
mov
clc
into
in
pop
cmc
adc
pop
push
std
mov
cltd
outsl
xchg
ret
push
nop
movsb
pop
sbb
mov
jns
push
js
jnp
xchg
aas
mov
pop
lods
scas
inc
cmp
repnz
clc
inc
pop
inc
xchg
aam
pop
ret
inc
imul
add
pop
cmpsl
lods
inc
stc
adc
in
or
subl
push
bnd
pop
mov
and
inc
sub
fdiv
or
cmp
icebp
adc
push
fldcw
and
or
loope
das
xlat
leave
cltd
jae
adc
adc
stos
repnz
imul
or
loope
mov
jb
aas
push
rcl
add
stos
inc
mov
icebp
cmc
fsubs
pop
xchg
xchg
fsubr
test
je
in
mov
aaa
add
or
inc
and
jmp
lahf
push
push
cmp
sbbl
xchg
movsl
mov
icebp
push
push
ror
lock
jbe
sub
sbb
outsl
stc
popf
jns
xchg
hlt
add
lcall
xor
scas
in
aaa
and
lcall
andb
in
and
adc
adc
xchg
nop
mov
dec
inc
sub
repz
dec
icebp
mov
or
sbb
add
lret
push
andl
mov
movsb
push
sbb
sbb
repz
lahf
decb
add
outsb
lahf
mov
pop
pop
pusha
call
mov
push
xorl
xor
repnz
imul
sub
in
scas
in
imul
pop
dec
fists
ljmp
loop
lret
cltd
and
pop
aas
inc
fisubrs
fwait
push
jmp
jnp
inc
add
aaa
push
mov
jp
ljmp
adc
inc
fsubl
mov
push
shll
inc
mov
sub
add
sub
mov
xchg
jae
je
lahf
loope
jb
mov
shlb
insl
mov
inc
jns
inc
ja
cmp
stos
cmpsb
hlt
push
mov
je
aas
sub
jae
mov
in
sub
pop
xor
inc
inc
or
push
mov
enter
shrl
jmp
sub
add
rdmsr
sub
enter
adcl
mov
or
mov
cmp
inc
pop
sbb
mov
in
mov
add
in
lret
and
aas
aad
jg
push
arpl
out
dec
psllw
pop
data16
sti
icebp
in
repz
iret
repz
jo
in
inc
sbb
rcrl
fsincos
jae
pop
push
test
cld
mov
test
out
push
pop
jae
lea
or
mov
mov
sbb
movsl
test
push
enter
sub
or
test
jg
rorb
sub
xlat
jno
int3
iret
shrb
adc
gs
push
jp
inc
mov
iret
popa
pop
mov
test
jecxz
mov
in
pop
out
repz
xchg
bound
mov
sbb
jae
push
fdiv
jmp
icebp
add
loop
out
fnstenv
sar
shrb
loope
push
fwait
rorl
fcomps
push
jg
roll
mov
jns
cld
jae
dec
mov
fmul
movb
lock
cli
cltd
dec
push
dec
mov
cmp
xor
lahf
loop
subw
out
pop
mov
xor
shll
lock
arpl
insl
cmp
mov
mov
aas
nop
ljmp
add
mov
push
xor
lea
icebp
jg
dec
aam
push
xor
mov
fcmovu
mov
out
ss
ljmp
ficoms
insw
sbb
pop
adc
mov
add
fcomip
add
cmp
mov
ret
jmp
cmc
push
insl
mov
sbb
aad
or
and
lods
xchg
fdivrs
enter
push
mov
clc
popa
out
les
xchg
pop
pop
sbb
mov
mov
xlat
cmpsb
dec
fists
call
call
repz
icebp
adc
sbb
cltd
in
sbb
add
jo
dec
out
xchg
es
inc
mov
cmp
jnp
pop
rclb
ja
dec
rolb
sub
xor
sub
cmp
sbb
inc
sbb
fbld
stos
mov
mov
mov
pop
adc
cwtl
fidivs
jne
hlt
or
sbb
jo
scas
jae
jle
and
arpl
jne
mov
sbb
inc
sub
cmpb
insb
test
ret
popf
mov
pop
inc
andl
jnp
push
fdivp
mov
inc
mov
mov
sbb
repnz
mov
cmp
push
sbb
or
mov
cmpsb
fcmovbe
sub
sbb
test
inc
ja
repz
test
movsb
aad
mul
das
mov
in
dec
cmpsb
outsl
pop
movsl
fisubrs
mov
enter
jae
mov
ds
or
sub
mov
out
push
sbb
dec
cltd
xorl
xor
mov
pop
std
and
movb
pop
cmp
orl
cmp
mov
repnz
mov
arpl
add
adc
scas
loopne
sub
cmp
movsb
jecxz
mov
js
mov
insb
mov
out
xor
inc
mov
pop
popf
popa
mov
xor
pminsw
repnz
orl
push
fsub
stos
and
mov
push
inc
mov
adc
mov
shlb
or
mov
rorb
dec
jnp
and
fs
rol
jb
dec
out
push
jns
mov
mov
jo
sub
bsf
je
and
adc
lock
inc
mov
testl
pop
outsl
out
sub
cmpsl
lds
shlb
inc
xchg
xlat
sbb
inc
gs
fs
clc
push
add
mov
mov
dec
pop
fmuls
call
add
mov
and
jmp
mov
in
mov
pop
cmp
sti
dec
add
or
adcb
push
or
add
das
dec
pop
or
loope
popa
mov
inc
push
pop
and
leave
xchg
pop
mov
test
push
mov
mov
xchg
inc
pop
outsb
mov
fimuls
test
cli
inc
push
xor
jae
pop
or
ja
out
imul
cmp
sbb
pushf
jae
mov
xor
movsl
jmp
cmp
jecxz
imul
push
pop
adc
xchg
shl
push
int3
xchg
adc
inc
fnstenv
mov
lahf
mov
inc
cltd
xlat
mov
dec
adc
cwtl
push
stos
bts
cwtl
ret
aam
fbstp
sahf
clc
out
addr16
mov
add
jne
test
inc
or
mov
nop
mov
das
lea
sbb
aam
add
int
int
cmpsb
xor
mov
adc
add
lods
decb
cmp
daa
hlt
mov
and
push
jmp
sbb
pop
stos
push
cmpsb
xor
jecxz
pop
fdivl
inc
dec
ljmp
lahf
mov
pop
jo
or
movsl
mulb
push
dec
int
add
dec
cld
dec
pusha
cmc
adc
cmp
pop
sbb
mov
mov
xchg
imul
or
inc
xchg
aad
ficompl
sahf
mov
pop
bound
mov
icebp
sbb
in
cmp
ja
mov
nop
hlt
push
ss
imul
mov
cld
or
add
push
pop
data16
mov
jmp
pop
ret
and
push
mov
int3
movsl
testb
loop
aas
cmp
ja
cmp
out
jb
insl
sub
addl
mov
daa
and
fstsw
or
xlat
in
int
test
jb
or
xchg
sub
push
movsb
and
mov
or
bound
stos
aas
jp
jbe
pop
mov
out
sarl
push
or
aaa
xlat
ficoml
movsl
lock
cli
cmp
les
xlat
in
jnp
xchg
inc
lahf
dec
popa
inc
mov
fcomip
cmpl
loope
jae
incb
dec
adc
push
outsb
pmaddwd
call
out
imul
mov
mov
lods
push
jne
xor
into
cld
push
movsl
aas
sub
scas
daa
addr16
andps
lret
aaa
mov
std
inc
jge
mov
stos
arpl
pop
fcoml
sbb
int3
popa
mov
mov
mov
das
sbb
inc
jo
cmc
or
push
insl
out
and
push
dec
sub
mov
add
shlb
jnp
add
iret
roll
call
movsl
fwait
scas
push
pop
hlt
adc
pop
subb
test
bound
and
stos
cmp
fcom
imul
repz
ljmp
repz
rcr
das
movsb
dec
es
ret
add
std
fwait
sbb
test
jbe
mov
leave
cmc
lret
inc
nopl
imul
jl
or
mov
std
aaa
push
push
pop
and
push
movb
notb
dec
dec
mov
jae
and
scas
lods
xor
fs
popf
negb
push
xor
adc
mov
out
pop
and
or
xchg
mov
xchg
jb
shlb
sbb
xor
xlat
imulb
sbb
sub
mov
inc
idivb
ret
inc
repnz
jecxz
push
add
or
xchg
test
ret
fs
jb
loope
divl
add
add
pushl
or
stos
cld
lret
into
gs
push
outsl
sbb
in
push
or
in
add
sub
jnp
mov
cli
je
inc
and
jbe
mov
sbbl
repnz
pop
es
pop
push
ret
sub
sbb
dec
xor
xor
in
fimuls
fiaddl
icebp
idiv
jp
mov
fwait
cwtl
mov
xchg
jb
dec
xchg
enter
sub
lret
pop
mov
inc
and
jecxz
sbb
push
inc
jno
in
xchg
push
stos
rcll
pushf
pop
mov
test
xchg
pop
and
and
rorl
pop
pop
aaa
mov
decb
cmp
lret
orl
or
and
int3
mov
or
shrl
pop
mov
sbb
dec
mov
and
test
sub
inc
push
in
test
mov
pop
xorl
aaa
cmpsb
les
mov
cmc
push
insl
loope
jmp
aad
push
pushf
testb
push
or
cmp
cmpsl
push
add
xchg
push
repz
jl
mov
jl
cltd
arpl
pop
jae
dec
cmp
push
int
lea
cmp
jmp
push
out
cmc
push
sti
popa
in
mov
iret
nop
pop
cmc
int3
out
fwait
pushf
dec
xor
add
mov
bound
int
inc
loopne
out
scas
in
fidivrl
lock
movsb
dec
mov
lcall
pop
push
dec
mov
xchg
out
test
fldenv
icebp
adc
and
sub
mov
fsubrs
pop
mov
addr16
adc
dec
jecxz
add
lods
loop
mov
pop
push
repz
and
orb
cmp
mov
ds
int
cli
push
movb
fwait
or
cmp
sbb
pop
bound
fisttpl
in
jo
lods
rcrb
test
cmp
pop
cs
jae
repnz
adc
es
cld
pop
fs
repnz
sub
hlt
mov
sub
fdivl
cmp
mov
loopne
bound
push
lahf
or
xchg
jp
jnp
xchg
ss
lahf
push
hlt
pop
or
sbb
aaa
aad
lea
dec
mov
jno
rcrb
test
data16
cmp
mov
inc
stc
mov
out
mov
fists
add
jle
mov
mov
sub
mov
inc
negl
mov
stos
push
sahf
jge
subl
xor
leave
inc
fisubrl
bound
cmpsb
sub
cmc
or
fnsave
sbb
fidivrl
lahf
dec
nopl
jge
flds
xchg
lods
rorl
jp
hlt
push
jno
loope
add
cmpsb
or
jae
inc
ljmp
dec
in
push
mov
mov
sub
lds
cmpsb
push
pop
mov
mov
cmp
movsl
inc
and
sbb
jne
and
cs
cmp
mov
adc
fnstsw
insb
mov
out
repz
dec
sub
bnd
sub
dec
mov
gs
mov
nop
and
pop
dec
adc
pop
jbe
and
outsl
lods
pushf
or
add
into
jbe
cmpb
aam
sub
insl
sbb
adc
dec
out
inc
imul
inc
cld
lretw
sbb
xchg
sbb
into
inc
push
out
push
lods
mov
push
ret
insb
pop
adc
or
repnz
pop
mov
add
std
cmp
jmp
add
push
sub
sbb
lds
xor
dec
and
pop
cltd
add
jb
or
cld
push
dec
out
loope
int3
jnp
pop
xchg
jge
call
lahf
cltd
cmpsl
mov
loopne
xchg
mov
xor
ja
lahf
mov
xchg
push
add
enter
lods
inc
icebp
pop
or
inc
and
cld
jp
shll
pop
cmp
movsb
mov
bnd
pop
cli
jecxz
dec
add
and
mov
push
mov
cmp
repz
in
pop
add
ret
sub
stc
push
mov
mov
push
test
je
inc
std
or
movsl
in
inc
dec
test
mov
xchg
xor
inc
ss
int3
mov
imul
iret
ljmp
out
mov
loope
or
dec
push
std
imulb
xchg
sub
fwait
jp
movsb
insl
imul
jns
inc
inc
push
pop
hlt
sbb
adc
xchg
lahf
clc
movsl
mov
adc
rorl
add
inc
pop
gs
loopne
mov
clc
push
sbb
fs
add
mov
and
push
pop
dec
imul
pop
xchg
mov
mov
aam
out
lea
jmp
fldcw
jecxz
pop
push
enter
je
ret
in
mov
nop
orl
stc
pop
in
xchg
pushl
mov
dec
mov
fbld
or
pop
imul
add
and
int3
pop
mov
adc
push
loopne
arpl
loopne
sbb
fimuls
fnstcw
in
push
dec
out
fbstp
mov
sbb
outsb
testl
pop
mov
in
aas
xor
mov
mov
imul
mov
bound
jle
sbb
xor
int
lcall
and
xchg
frstor
and
mov
cmp
cwtl
daa
movsb
jbe
icebp
sarl
jnp
in
stos
movl
ret
cmpsl
ljmp
lods
mov
imul
cmp
jo
jl
js
inc
sbbl
jmp
push
loope
or
push
jno
pop
add
cmc
stos
gs
mov
push
lcall
test
sbb
jno
into
andb
js
jns
ficoml
sbb
push
out
sub
and
fwait
mov
xchg
lods
pop
lret
add
add
jnp
xchg
xchg
cmp
adc
movb
add
xor
je
jmp
pop
out
xchg
inc
fisubrs
dec
dec
or
sti
mov
mov
mov
jne
daa
inc
nop
or
mov
aas
cltd
jecxz
cld
mov
or
cmp
popf
rcr
sahf
inc
inc
sub
lahf
movsb
fbstp
ret
enter
push
dec
dec
dec
retw
mov
shrb
test
pop
sbb
mov
and
and
jge
mov
inc
inc
addr16
add
incl
add
mov
jo
nop
push
xor
scas
cmp
or
jbe
test
call
sbb
xchg
cltd
add
lock
ljmp
outsb
call
push
jg
push
xor
lahf
loopne
mov
leave
fldenv
push
ss
clc
jno
out
pop
ds
stc
mov
rcll
pop
adc
ja
pushf
stos
lret
adc
aam
lods
ja
push
lods
xchg
incl
dec
xor
dec
imul
or
ss
add
aam
pusha
xchg
cmp
fistpll
jl
inc
mov
aaa
bound
mov
aaa
outsb
jmp
add
adc
lret
sub
mov
push
jne
dec
lock
fimuls
inc
call
mull
lcall
push
xor
adc
adc
leave
loop
sbb
dec
add
jno
or
fidivs
adc
popa
insl
sbb
mov
xchg
xorb
scas
xchg
fbstp
mov
sub
jecxz
or
addr16
lods
outsl
xchg
push
sub
jle
xchg
push
mov
jns
pushf
mov
mov
cmc
xchg
fcompl
notl
sbb
repnz
mov
test
mov
movsl
enter
push
pop
inc
and
dec
sbb
adc
data16
pop
leave
cmpsb
jmp
cmp
pusha
and
into
xchg
push
xchg
in
jge
cmpl
test
lds
aas
cmp
cmp
mov
sti
dec
cmp
xor
push
jbe
jp
jb
ljmp
jl
cmc
aaa
mov
push
push
jmp
add
nop
adc
sbb
inc
mov
pop
mov
inc
sub
imul
outsb
jge
dec
aad
pop
imul
push
sub
xor
cld
inc
add
lcall
test
les
mov
imul
cmp
outsl
mov
movsb
push
pop
in
aad
and
les
cmp
rorb
jne
dec
mov
mov
cwtl
xchg
adc
sub
mov
fsubs
ret
xor
sub
add
xchg
push
loope
adc
mov
lret
jne
iret
add
inc
or
fdivrl
je
imul
sbb
das
xor
popf
iret
adc
sarl
hlt
mov
or
mov
mov
les
jb
scas
or
dec
lret
mov
stos
mov
sub
jb
jno
pop
cmp
and
imul
xor
rcll
sbb
cwtl
js
jmp
or
xorl
jge
in
icebp
add
push
mov
fnsave
and
pop
lret
adc
cltd
arpl
mov
or
into
add
inc
fmull
jo
xchg
mov
rorl
mov
addr16
addb
scas
push
stos
cmovs
mov
in
xor
jmp
aaa
sbb
adc
ds
dec
cmp
mov
cwtl
push
cltd
sbb
mov
or
mov
insl
dec
dec
loope
imul
jne
ljmp
cmp
or
ja
pop
ja
pop
xor
sbb
sbb
xor
adc
test
sub
orb
dec
cmp
sub
mov
push
push
xorb
push
data16
and
and
repnz
sbb
outsl
jae
ljmp
inc
mov
out
xchg
xchg
insb
lret
idivb
xor
push
mov
mov
jge
add
mov
lds
pushl
out
dec
pusha
inc
dec
dec
push
into
xchg
jne
je
jmp
fnstcw
jno
sti
xchg
adcb
cmp
push
and
push
mov
icebp
xor
jns
or
insb
xchg
mov
bound
loop
add
and
adc
mov
out
inc
testl
adc
addr16
ds
sub
loopne
pop
les
fstpl
ds
mov
push
mov
imul
lds
cmp
jmp
xor
lret
lock
mov
jns
stc
jl
nop
imul
jb
dec
sbbb
jecxz
lret
xchg
xlat
xchg
jg
mov
xor
inc
test
add
aas
mov
jns
mov
call
dec
sub
cmp
and
js
sti
enter
inc
mov
lods
mov
cli
mov
cmp
xchg
push
add
fbld
sub
dec
push
ret
sbb
and
out
xchg
test
lods
data16
dec
insb
jo
je
insl
add
push
xor
add
push
mov
aam
arpl
mov
in
add
adc
shl
mov
testb
mov
inc
inc
add
or
pop
xor
jne
xchg
jbe
inc
pop
scas
lods
jno
pop
mov
push
cmp
xchg
outsl
enter
and
sbb
out
lcall
xchg
hlt
enter
int3
push
adc
loop
aam
cs
jge
adc
xchg
mov
mov
test
and
xchg
cltd
addr16
xor
popf
push
call
aas
icebp
adc
adc
cmpsb
stos
xor
and
shll
sub
mov
lock
push
or
subb
cmp
sahf
or
bound
ret
mov
cmpsb
xlat
sub
or
or
or
or
ljmp
sbb
aad
and
ljmp
cmp
mov
lahf
pop
mov
xor
les
fildl
jl
imul
cmp
cmp
ret
mov
int3
xchg
adc
mov
cmp
or
std
mov
and
movsl
lds
pop
mov
dec
jg
jne
pop
bound
bound
je
hlt
divb
loopew
pop
jo
pop
push
loop
sbb
sbb
adc
jb
add
mov
ja
repz
movsb
flds
sub
push
cli
clc
pusha
aad
jbe
nop
pop
mov
bound
inc
mov
sahf
daa
mov
rcrb
pushf
out
out
sti
jle
pop
sub
cmp
mov
pusha
pushf
cmpsb
or
mov
push
jge
popa
or
test
loopne
cwtl
hlt
gs
inc
sbb
stos
loope
cmp
push
int3
mov
sub
lea
mov
sarl
clc
inc
fnstenv
insb
stc
and
insl
cli
adc
mov
add
inc
xor
arpl
sbb
aaa
add
bound
push
rcll
out
add
ds
cmpsb
mov
aaa
ja
push
lahf
daa
sar
mov
xchg
mov
ljmp
dec
or
sbb
and
sub
scas
addr16
ret
mov
pop
push
inc
mov
sbbb
out
xor
rolb
pop
push
jl
addl
loop
cltd
fistps
xchg
cmp
enter
fmul
repz
sbb
adcb
call
sub
push
loopne
xchg
dec
xchg
or
shr
inc
push
iret
add
lahf
int3
xchg
xchg
pop
outsl
xlat
sbbl
jge
sbb
daa
repnz
cld
popa
ret
mov
cli
or
mov
sbb
lods
in
or
mov
out
dec
inc
mov
dec
or
test
sub
out
jns
lret
mov
leave
xchg
std
pop
push
sbb
sub
pusha
push
dec
pusha
xor
cmp
fidivrs
int
cmp
rol
aas
sti
enter
shr
sbb
cmpsl
lret
or
sbb
insb
mov
in
fs
popl
call
rol
push
add
sbb
btr
mov
mov
mov
jl
data16
sub
movsb
mov
inc
inc
add
lahf
ja
inc
lcall
lds
xlat
mov
pop
xor
insl
add
sbb
incl
movsb
movsb
lea
jo
imul
cmp
xor
test
cwtl
in
dec
xlat
aad
and
sbb
cmp
nop
repz
insl
push
jae
sub
in
ljmp
mov
daa
in
repz
lods
sbb
out
repz
or
sbb
or
imul
push
jmp
mov
pop
loopne
xchg
push
cmc
jle
mov
out
jp
ss
jmp
push
sub
cmpsl
mov
js
sub
mov
mov
outsb
faddl
scas
adc
push
mov
pop
xlat
mov
xchg
imul
mov
inc
adc
jmp
sti
dec
adc
sqrtps
jmp
fwait
imul
mov
ja
inc
dec
and
mov
test
xchg
jecxz
out
pop
or
jmp
insl
lret
mov
xchg
mov
pop
fsubl
xor
ror
inc
jle
xor
cmp
leave
cmp
andl
add
mov
or
pushf
mov
jmp
faddl
test
leave
xchg
and
test
mov
shrl
jno
fcmovnu
nop
enter
add
mov
imul
xchg
test
sub
mov
mov
mov
push
cmpsl
fiadds
cmp
sub
or
addl
mov
sub
test
popa
fisttpl
lret
lahf
mov
pushl
xchg
mov
mov
dec
dec
pop
push
mov
xor
or
lea
jmp
insl
hlt
into
jp
add
movq
jmp
scas
push
cmp
clc
mov
mov
push
loopne
push
mov
notl
mul
and
mov
shrl
push
mov
mov
shl
addr16
movsl
xor
push
inc
out
les
and
pop
mov
fiadds
sbbb
ljmp
fnsave
jle
jge,pt
inc
and
or
add
les
add
mov
xor
addb
addr16
mov
sbb
scas
lcall
jp
loopne
pop
push
cwtl
push
enter
inc
sahf
xchg
shll
mov
jmp
xchg
mov
sahf
add
add
xchg
mov
movsb
cmpsb
sub
or
mov
in
repnz
pop
pop
sbbl
push
loop
inc
int
pop
inc
js
scas
cwtl
fwait
fwait
mov
push
movsl
and
cmpb
popf
mov
xorl
scas
mov
or
imul
dec
jecxz
adc
dec
sub
ja
inc
inc
pop
popa
dec
inc
jnp
mov
inc
pop
cmp
inc
out
push
insl
int3
decb
icebp
dec
or
add
pop
mov
jle
adc
xchg
push
xchg
faddl
sarl
imul
dec
inc
mov
push
add
pop
loope
clc
jmp
xor
test
adc
aad
mov
insl
das
xlat
movsl
lock
jbe
insl
lods
mov
mov
cmp
jmp
push
repz
cmp
fnstcw
adc
xchg
and
sub
outsb
jnp
mov
inc
inc
in
mov
cli
adc
lods
mov
sub
mov
test
rorl
sti
loopne
rcrb
lods
inc
inc
fwait
and
iret
test
adc
add
movsl
jnp
jbe
ret
lcall
mov
inc
or
mov
cld
out
sbb
out
fildl
jns
and
xchg
inc
je
call
les
jo
imul
std
push
cmp
dec
fwait
lea
pop
push
cmp
hlt
fsubl
incl
mov
adc
pop
repz
loope
lds
imul
xchg
xchg
cmp
cld
rcr
into
xor
das
lahf
mov
test
xchg
dec
cld
inc
sbb
or
inc
inc
ljmp
cmp
push
cld
out
outsb
and
sbb
mov
les
push
mov
pop
cmp
inc
jb
test
add
sub
cmc
scas
roll
test
jl
out
in
mov
hlt
mov
push
jmp
cmc
pop
iret
test
cs
or
loop
mov
dec
popa
in
mov
sbb
mov
ret
test
or
icebp
jnp
sbb
aam
jp
out
in
andb
mov
in
scas
insl
inc
jl
ss
mov
xchg
dec
mov
into
sahf
lret
enter
push
mov
clc
add
xor
std
sbb
inc
push
cltd
lods
loope
adc
xchg
dec
cmc
sahf
lods
pushl
and
jae
cmp
push
push
int
ficomps
outsl
mov
or
fdivrl
js
call
es
roll
out
dec
cmp
shlb
or
fidivrl
or
mov
mov
inc
popf
adc
fnstsw
push
mov
pop
sbb
cld
xor
xor
imul
sbb
push
into
aaa
sar
out
sqrtps
jae
or
adc
shlb
or
mov
hlt
lret
sbbb
dec
fdivs
dec
ja
push
fidivs
popa
andl
mov
sbb
xchg
mov
or
inc
repz
pop
mov
mov
adc
imul
imul
scas
fstps
das
dec
xchg
pop
cwtl
imul
repz
aad
shr
sarl
sub
jge
jmp
sbb
stc
enter
je
les
and
dec
sub
pop
mov
test
popa
int
mov
enter
pop
cwtl
loopne
hlt
mov
leave
rolb
fidivs
xor
pop
test
adc
and
or
mov
in
mov
outsl
mov
pop
dec
xor
sbb
mov
mov
mov
dec
jbe
pop
push
repz
je
and
ds
xchg
pop
and
push
bound
pop
push
ret
stc
xor
shrb
out
ret
or
sbb
xchg
push
mov
and
add
add
jp
jbe
lret
mov
ss
xchg
adc
ljmp
ror
mov
lods
cmp
gs
out
dec
in
cmpsb
fistps
js
and
xchg
imul
iret
mov
and
add
clc
push
outsb
jecxz
arpl
dec
sub
pop
or
stc
sbb
mov
jecxz
sti
leave
popf
test
cwtl
or
mov
pop
iret
iret
mov
outsb
fiaddl
and
pop
test
pop
nop
inc
adc
inc
and
cli
pop
adc
or
xor
sub
ret
subl
or
dec
pop
pop
jne
fs
rclb
ret
dec
out
pushf
out
jo
pop
mov
iret
shrl
fwait
lret
xchg
cmp
cmp
mov
xchg
cmp
scas
jge
dec
test
mov
loope
sahf
sti
inc
mov
lret
lret
inc
add
pusha
sbb
push
pop
xor
popf
fldl
pusha
xchg
pop
cmp
dec
mov
std
adc
cmp
lods
nop
pop
subb
ljmp
push
aas
push
cli
xchg
inc
dec
adc
xor
add
aaa
add
imul
jae
fstpl
pop
push
cwtl
or
roll
aad
inc
xchg
test
or
push
mov
aad
cmpsb
add
insl
cmp
push
mov
cli
or
pop
flds
movsb
pop
mov
roll
lock
fcoml
imul
pop
aas
lret
mov
hlt
mov
test
mov
xor
xchg
inc
sarl
in
insl
mov
cmp
xor
and
inc
test
insb
sbb
and
jo
sti
test
bound
mov
push
push
fcmovnu
jns
push
dec
shrb
xchg
push
push
fdiv
stos
jmp
mov
stos
test
shl
mov
dec
and
add
sbb
test
mov
xorl
in
pop
pop
aaa
jecxz
in
repz
dec
adc
je
add
pusha
dec
adc
fldl
cld
push
push
lods
dec
lock
mov
lock
xor
mov
sub
inc
jae
cltd
push
rclb
cld
out
or
mov
mov
lock
addb
sub
cld
cmc
dec
das
add
or
sbb
insb
push
out
stos
cltd
inc
testl
push
xor
cmpsl
xor
mov
pop
jo
mov
xchg
lods
incl
xchg
and
xor
fsub
lods
inc
jae
and
or
and
jae
divl
push
mov
dec
push
lahf
xor
inc
xor
xor
jnp,pt
pusha
lret
xor
sub
xchg
out
aas
xchg
shrl
jle
push
loope
xchg
scas
push
cwtl
popf
dec
mov
pop
in
jo
mov
mov
and
add
icebp
stos
push
jo
jne
sbb
dec
mov
adc
cmpsb
movsl
les
ja
cmp
repz
dec
int
push
mov
daa
xchg
or
negl
imul
rorb
push
lret
adc
xchg
scas
mov
mov
dec
xlat
imul
push
mov
cmpsl
das
jl
xor
jmp
inc
nop
pop
mov
rorl
hlt
jae
subb
lock
dec
clc
adc
or
pop
addr16
push
inc
cs
data16
pusha
test
jge
sbb
cmpsl
cwtl
clc
popa
cwtl
adc
lcall
and
or
cltd
and
lock
inc
test
enter
inc
shll
add
jb
push
lahf
add
fwait
dec
xchg
out
movsb
ret
adcl
mov
out
movl
loope
xor
lods
test
cli
popf
xchg
test
das
lret
sbbb
fiaddl
lret
in
inc
mov
jns
fcoms
inc
and
cmp
mov
out
adc
enter
pop
pop
popa
insb
sub
lods
pop
fmulp
add
pop
fisubrl
leave
add
dec
mov
ret
adc
or
xlat
sbb
hlt
add
in
shll
adcl
ds
xchg
mov
fs
inc
lret
push
xlat
xor
or
mov
inc
sub
aam
add
jge
call
dec
lahf
add
dec
clc
fstl
shl
orb
iret
sti
inc
lret
pop
repnz
adc
dec
mov
leave
rcll
inc
mov
mov
pusha
sbb
jns
adc
les
lret
lahf
sub
jmp
add
mov
out
inc
shr
cmc
jge
cmp
sbb
dec
roll
out
es
testb
mov
cmc
out
inc
push
gs
inc
pop
rcll
cmp
and
fisubl
loopne
repz
inc
scas
xor
pop
sbb
daa
out
mov
pushf
cmp
and
push
cmp
mov
xchg
inc
das
sti
inc
mov
push
in
sarb
pop
jo
out
mov
or
mov
lret
test
inc
sub
ficomps
pusha
dec
fimuls
dec
popa
aad
les
fcompl
jl
pop
xor
nop
jmp
inc
jecxz
sbb
push
in
loopne
test
cmp
scas
push
test
lret
daa
sbb
ja
cmc
leave
insb
movsb
lret
arpl
outsb
jnp
push
adc
out
mov
sbb
js
cld
sub
pop
bound
les
inc
push
jne
pusha
xor
loopne
jmp
jg
fstpl
mov
push
jmp
xchg
in
adc
iret
push
xor
int3
dec
fsubr
loope
xchg
jne
imul
mov
lods
or
cmp
outsl
mov
mov
sub
fimull
or
push
scas
xchg
and
fs
stos
jle
pusha
stos
je
mov
lock
clc
icebp
jae
inc
gs
pop
push
jnp
jle
ds
out
out
and
cmc
stos
cmp
push
mov
data16
aam
jle
sub
and
sub
jmp
jne
lods
inc
sbb
mov
xchg
in
clc
sti
jne
mov
in
cmp
int3
cs
mov
sbb
rcrl
das
in
dec
mov
pop
and
ss
ret
enter
retw
inc
pop
data16
and
jbe
pop
push
add
cmc
xor
jb
dec
cmpsb
mov
repz
mov
pop
arpl
cmpsb
das
xor
arpl
sbb
lret
pop
xchg
ljmp
lock
xchg
pop
xchg
xor
push
aad
jbe
push
xchg
nop
fadds
ds
mov
pop
dec
pushf
add
enter
pop
dec
push
lock
add
in
pop
sbbl
and
stos
fcmove
mov
dec
push
mov
cs
repnz
jns
sub
aaa
inc
scas
out
add
popf
mov
and
pop
and
shrb
mov
and
popa
xchg
scas
mov
xor
jo
std
sbb
xchg
cmp
jle
pop
push
mov
push
mov
mov
ja
pop
mov
repnz
add
bound
adc
mov
jle
repnz
insl
inc
add
shrb
mov
out
mov
adc
imul
cmp
jge
jmp
fistpl
mov
ret
std
push
or
or
jbe
ret
jns
xchg
pop
lock
mov
gs
lcall
adc
pop
pop
inc
dec
push
out
mov
lea
dec
jnp
loope
jg
popl
addb
aaa
in
mov
push
subl
mov
add
iret
push
sub
idivl
sbb
mov
fmulp
pop
lret
bswap
sahf
inc
clc
jns
mov
das
fcoms
or
inc
popf
pop
fsubr
popa
ror
cmpsb
outsb
mov
xor
mov
mov
jo
inc
cmp
mov
mov
push
and
cmp
sub
jo
pop
ret
das
jmp
test
sub
mov
fstpt
add
and
out
or
daa
sub
insb
mov
dec
fstl
mov
nop
fmul
jmp
xor
pusha
jae
jmp
mov
add
add
sbb
ljmp
xchg
loope
dec
les
imul
add
outsl
daa
xchg
mov
xadd
and
sbb
and
call
or
imul
cmc
mov
pop
addr16
push
mov
aad
mov
cmpsl
cmp
ds
lahf
paddw
xchg
push
mov
xchg
pusha
ljmp
bound
sti
filds
clc
je
push
jns
call
mov
and
std
and
out
inc
ds
je
fiaddl
stos
cmc
add
add
cmp
adc
gs
add
testl
jb
mov
sub
aaa
adc
je
cltd
lcall
pop
mov
cmp
mov
pop
cmp
daa
mov
in
jecxz
insl
adc
and
std
sbb
test
pop
in
movb
push
sub
mov
sub
pop
aas
out
ss
test
and
jecxz
roll
lods
and
xor
pop
push
inc
and
movsl
ljmp
loop
bound
pop
sub
adc
test
cmc
xchg
std
push
cmp
call
mov
loope
sub
and
aam
mov
addr16
pusha
jnp
dec
inc
in
add
dec
dec
push
insl
push
and
jg
cli
jo
popf
jmp
sbb
fwait
aaa
and
add
pop
and
call
popf
add
adc
hlt
loope
adc
insb
add
dec
fwait
and
mov
mov
insl
outsl
xor
adc
jge
hlt
mov
addb
adc
dec
lahf
fisubrl
loop
add
mov
cmc
sbb
inc
adc
push
stc
cmp
fldcw
push
xchg
and
lods
inc
inc
andb
das
add
mov
cmp
mov
stos
xchg
call
mov
sub
fs
repz
sahf
adc
enter
or
in
adc
push
inc
stc
pop
stos
cltd
push
fcmove
or
outsl
jbe
je
jb
pusha
lret
jl
repnz
xor
and
hlt
push
int3
and
lret
push
out
mov
cli
jbe
or
mov
push
scas
xor
mov
sub
cmp
mov
notl
test
or
mov
fdivs
rorl
cmp
adc
loopne
adc
divb
and
lret
xor
loop
jne
in
repnz
or
jb
inc
sbb
cli
xchg
outsb
test
xlat
sub
sbb
aam
and
popa
shlb
push
imul
dec
ds
pop
mov
dec
test
adc
xor
push
jecxz
cmpsb
aas
pop
dec
push
mov
mov
cmp
stos
dec
sbb
shll
sbb
mov
dec
dec
roll
gs
adc
mov
imul
fisttpll
jo
push
nop
mov
cmp
mov
and
aad
pop
push
xor
push
push
jns
jmp
or
lock
rcr
dec
je
mov
mov
lcall
mov
orl
xchg
hlt
mov
pop
push
dec
enter
fsubrs
dec
mov
mov
and
jecxz
add
or
clc
js
jecxz
imul
or
push
pop
inc
mov
cmp
push
sbb
cmpsl
push
fs
push
adc
add
dec
mov
dec
cwtl
idivl
in
fsubl
jne
mov
or
adc
mov
fcoms
mov
in
out
scas
or
cmpsl
jecxz
fbld
push
aad
insl
or
dec
or
xlat
mov
leave
pop
out
in
xor
imul
mov
movsb
xor
push
cvtps2pd
xchg
scas
repz
aaa
dec
scas
jle
lds
sbb
repz
ja
and
jecxz
imul
xor
inc
push
shrl
repz
or
push
cli
mov
es
inc
incl
movsl
mov
xchg
mov
pop
shll
jo
icebp
popf
inc
cmpsl
hlt
fcomip
inc
sahf
sub
pop
sbbb
out
loope
xor
cwtl
push
mov
fldt
jmp
dec
dec
push
nop
push
int
and
stos
mov
jecxz
sahf
imul
data16
inc
xchg
xchg
out
sbb
es
sub
js
jb
ljmpw
add
push
sbb
mov
and
mov
shll
mov
into
testb
cld
jp
ljmp
jge
leave
sub
dec
xor
cli
sub
and
cmpsb
sti
mov
punpckhdq
call
fbld
xchg
xchg
sbb
ss
sbb
rorb
movsl
inc
pusha
cmpsl
push
add
jp
inc
push
clc
pushf
add
or
jb
jno
insl
enter
andb
xor
xchg
xor
arpl
scas
mov
mov
lds
push
repz
int
jnp
push
gs
jg
mov
push
mov
xor
jle
bound
and
neg
mov
or
outsl
cltd
das
outsb
aam
pop
nop
filds
add
sub
data16
data16
in
cli
add
fldt
call
fistpl
lods
cmpsl
mov
mov
jecxz
push
ret
lea
in
scas
lret
or
mov
inc
loop
outsl
cmpsl
cli
mov
xor
adc
shll
pop
mov
subb
fmul
xchg
adc
call
mov
lods
lea
test
sub
lock
cmp
ret
test
icebp
popf
sbb
cmc
jno
xchg
cmp
bound
sub
mov
dec
cmpsb
pop
jno
ss
out
jo
xchg
add
pop
dec
jge
mov
dec
or
mov
cmc
insb
jmp
pop
les
int
test
push
inc
push
or
lods
adc
fildl
and
cmp
inc
sbb
jmp
ret
enter
inc
insb
xlat
pop
add
cmp
fs
out
jae
dec
mov
or
sbb
or
inc
mov
pushf
sub
jae
testl
mov
sbb
ret
jle
repz
sub
adc
inc
add
dec
adcb
lock
lods
mov
or
gs
movsl
lahf
shr
int3
mov
jecxz
je
sub
rorb
dec
lret
int3
push
movsb
fdivl
jne
es
push
xor
sbb
xchg
js
or
sbb
xchg
dec
jbe
ret
push
push
out
or
out
stos
jge
lret
mov
pmulhuw
or
inc
pusha
ljmp
push
and
and
dec
or
xor
add
cmp
sti
leave
mulb
wbinvd
sub
in
lret
orb
sub
jno
adc
push
popf
pop
mov
dec
addb
sbb
or
pop
dec
and
jmp
addb
adc
adc
xor
xorl
out
popa
test
xchg
mov
les
scas
dec
in
hlt
fldl
test
mov
push
jg
sub
in
cmp
std
cmpsb
jne
pusha
lahf
lcall
pusha
das
shrl
sbb
mov
pop
and
mov
add
inc
loop
mov
push
pop
mov
mov
and
insl
mov
mov
in
sahf
mov
iret
inc
mov
xchg
xchg
fs
mov
ljmp
jne
push
pop
mov
jns
mov
push
push
jns
jecxz
and
jbe
pop
add
xchg
subb
xor
lds
cmp
test
pop
clc
and
mov
sub
in
pop
fs
xchg
jne
lds
nop
pop
loopne
cmp
ror
pop
insl
sarb
fcmovbe
jne
pop
popa
clc
shll
jb
push
mov
adcb
mov
fdivrl
xor
lock
xor
xor
or
into
dec
scas
sbb
adc
insb
sub
xchg
push
fwait
outsb
jno
pop
stos
lret
in
lcall
leave
ret
repnz
xchg
pop
jno
pop
mov
fadds
xor
sti
pop
cmc
jns
mov
dec
sahf
pop
xchg
js
scas
outsl
loop
jno
inc
je
dec
out
jne
xor
nop
outsl
adcl
or
shlb
scas
jmp
dec
adcb
mov
adc
loope
sbb
mov
pop
ret
or
push
je
or
mov
mov
in
push
xchg
icebp
dec
sbb
lret
jnp
mov
movsb
fnstsw
cmc
rep
xchg
pop
call
pop
inc
cld
roll
pop
jge
add
mov
mov
insb
fabs
and
adc
push
jns
leave
mov
cmpsl
mov
loopne
fsubl
push
loopne
imull
in
jno
xchg
je
cmpsb
and
xor
xlat
or
es
loop
cmc
lcall
xchg
jns
sbb
xor
cmp
icebp
xor
clc
jg
mov
sub
sub
xchg
mov
test
cli
nop
test
pop
arpl
cmp
sub
scas
lds
inc
cmp
sbb
pop
mov
inc
xchg
scas
std
jecxz
mov
stc
lcall
addl
loope
mov
xchg
imul
call
adc
test
rclb
enter
cld
jb
scas
cmp
jo
inc
mov
mov
and
pop
xor
cli
stos
add
or
ljmp
fsubr
out
mov
jns
adc
cmpsl
pop
cld
inc
cmp
mov
mov
xor
sub
push
xor
jnp
push
push
cltd
dec
jb
and
fwait
xchg
ljmp
mov
and
addr16
nop
js
cmp
sbb
cld
call
mov
cwtl
out
ja
xor
jne
dec
push
cld
add
in
mov
jbe
imul
xchg
mov
loopne
sub
in
xor
cltd
addb
and
stos
add
mov
mov
jbe
xchg
mov
sbb
js
test
js
in
cmpb
or
dec
xchg
xlat
cmp
mov
aam
mov
xchg
jno
cmpsb
dec
jecxz
jmp
cli
inc
lods
or
sub
sahf
aaa
inc
jbe
and
int
dec
mov
push
in
dec
into
inc
xchg
mov
and
jl
cmp
xchg
add
jns
fsubrs
aas
xchg
lcall
dec
mov
iret
dec
push
pop
mov
fisubrs
pop
xor
lea
loopne
push
cmpsb
fwait
push
inc
mov
mov
outsl
ss
xchg
xchg
hlt
out
cmp
sub
dec
mov
fldenv
aad
add
fdivrs
add
inc
repnz
in
ror
mov
xor
jbe
xchg
shll
frstor
jo
mov
fdivs
clc
data16
movsb
add
push
in
ljmp
inc
jg
or
pop
or
popf
movsb
pop
sti
fbstp
push
mov
mov
inc
dec
mov
stc
in
hlt
mov
cmpsb
pop
push
ret
js
inc
or
mov
cmp
push
sbb
stc
push
mov
pusha
mov
mov
inc
push
mov
lds
mov
ret
and
mov
add
mov
lea
adc
cwtl
mov
adc
jle
push
add
out
mov
ja
cmc
loopne
jmp
fidivrs
jl,pn
ret
xor
iret
in
iret
addr16
fstl
hlt
cmp
das
push
sbb
mov
pop
inc
sahf
mov
cmp
sub
dec
xchg
pop
mov
xchg
fldl
imul
push
or
mov
repz
hlt
jg
jge
mov
and
repnz
adc
sbb
cmp
adc
lea
lahf
mov
dec
push
xor
jmp
cmc
mov
mov
adc
mov
sbb
sti
add
push
fildl
adc
or
xor
lret
stc
lcall
add
arpl
push
rcll
into
subb
ja
and
xchg
subb
push
fcompl
add
and
add
push
clc
fistl
add
cmp
vpackuswb
aad
sub
jecxz
popf
scas
aas
pop
insl
add
lcall
push
push
mov
cs
pop
stos
jne
rclb
jnp
inc
insl
dec
je
int
std
into
repz
mov
and
add
popa
sahf
or
xchg
mov
rcll
fildl
cmp
test
cli
popa
mov
lods
stos
inc
sub
outsl
dec
daa
flds
and
xchg
test
out
mov
test
fstl
popa
sub
jmp
enter
mov
in
mov
daa
repnz
push
xchg
xchg
call
ja
mov
popa
cmp
xchg
jl
fwait
test
jecxz
ljmp
xlat
mov
mov
bound
rcll
inc
mov
lock
mov
jno
mov
jl
sub
test
push
aaa
or
out
enter
subb
cmp
xchg
imul
fcmove
sbb
sbb
mov
mov
scas
lahf
out
gs
xchg
cmp
xor
sub
mov
pop
jns
das
ss
sahf
repnz
shl
sbb
pop
flds
fistpl
loop
cs
movsb
fdivrp
xchg
xchg
dec
popa
jae
in
and
fidivs
cmp
popa
cs
out
repnz
aas
inc
xor
les
sub
inc
or
mov
ret
dec
jns
stos
push
popf
ja
cmp
xlat
push
mov
mov
xchg
dec
jb
jmp
xchg
mov
jp
inc
adc
pop
lret
dec
jo
xor
add
inc
push
sub
jg
mov
push
orb
call
jb
pop
daa
and
scas
jmp
pop
or
mov
inc
out
pop
roll
xor
lods
aas
fcmovne
jns
int3
pop
stos
sub
or
add
das
adc
xor
je
jns
pop
imul
std
mov
call
cmp
bound
mov
leave
pop
test
pop
retw
test
pop
xor
or
xchg
mov
cmp
push
test
xchg
adc
sbb
jne
aad
test
pop
mov
jmp
jle
cmc
lahf
xchg
cld
cli
inc
filds
cs
lock
lock
pop
push
je
je
dec
jbe
add
les
jmp
test
push
dec
cli
dec
jmp
push
add
mov
xchg
lea
mov
lcall
mov
hlt
add
lods
push
pushf
hlt
mov
jle
int3
pop
insl
cmp
sub
mov
mov
mov
jo
sbb
add
lea
mov
das
data16
jl
idivl
ljmp
ds
leave
or
sti
xor
dec
adc
outsb
mov
lods
dec
outsb
pop
jne
dec
cmp
test
push
and
dec
dec
clc
cmpsl
nop
jb
push
enter
adc
adc
add
dec
sahf
or
je
outsb
adc
xlat
xor
rcr
or
push
sbb
xchg
cld
fisubl
ds
icebp
lock
in
or
inc
sbb
out
adc
and
subb
orb
sarb
lret
mov
in
and
pop
enter
adc
frstor
aam
fimull
jp
inc
jns
push
in
insb
nop
push
adc
out
pop
jb
fs
daa
fcoms
stos
dec
adc
cmp
pop
adc
push
adc
and
inc
in
in
roll
push
pop
cmp
sbb
lret
inc
syscall
push
clc
movsb
mov
bnd
imul
dec
add
mov
fs
movsl
stos
dec
fs
insl
lods
mov
xchg
and
lods
push
ret
mov
clc
popf
add
in
xor
je
stos
lods
cwtl
adcb
das
push
aaa
jne
mov
div
mov
push
out
adc
and
sbb
insb
pop
and
jnp
push
cmpsl
scas
push
dec
cld
fadd
adc
ficoml
ret
pop
push
cmp
into
ss
cmp
into
inc
inc
shlb
adc
xchg
pop
fstpt
mov
mov
sub
mov
sub
andb
jbe
fstpt
ss
mov
imul
push
jae
cmp
jge
int3
lds
scas
stos
sbb
inc
sub
mov
fildl
in
mov
ss
push
add
std
mov
mov
lcall
lds
adc
inc
jp
cmp
cmp
pop
imull
jecxz,pn
testb
sahf
clc
inc
xchg
add
adc
scas
push
push
and
xchg
imul
or
cmpsl
adc
sub
push
out
fs
inc
in
inc
xchg
push
xchg
pop
mov
stos
push
aaa
fprem1
inc
outsb
adc
pop
std
sbb
add
mov
nop
movsl
enter
mov
mov
xor
sbb
sar
push
jmp
add
inc
jp
lcall
leave
pop
outsb
out
add
mov
outsl
mov
jg
fcom
push
mov
hlt
fidivs
int
jge
test
add
cmpsl
dec
cs
sbb
mov
popa
sbb
pop
jo
stc
aaa
mov
inc
cli
dec
inc
fs
mov
out
xchg
add
push
sahf
adc
xor
ret
and
add
js
mov
das
mov
mov
and
push
dec
cmpsl
or
lock
lahf
jg
jns
sub
std
jge
mov
scas
mov
clc
test
dec
js
pop
jno
mov
fimull
daa
jnp
insl
scas
lret
ja
mov
add
push
mov
sub
jno
pop
mov
pop
sahf
fistl
add
xor
pop
mov
jns
fcompp
in
into
pop
jns
hlt
mov
lahf
jl
xchg
rcrb
js
sub
jns
pop
repnz
fwait
inc
bound
jno
mov
js
mov
rcl
pop
mov
mov
add
adc
xchg
inc
jl
aas
add
pop
ret
shl
mov
inc
popa
dec
ljmp
in
jne
mov
fdivl
and
adc
fs
mov
cmpsl
sahf
call
add
xchg
sbb
rcrl
dec
out
or
cmp
push
add
push
and
jmp
mov
inc
icebp
cli
fcoml
vpmacswd
fs
fcoml
loop
xor
cmp
fs
mov
loope
orb
jb
or
adc
xor
rcl
lea
fmull
sbb
inc
lret
mov
into
ret
popf
int3
xchg
push
sbb
pop
xchg
das
cmc
stos
and
mov
inc
movsl
bswap
mov
cmp
inc
ljmp
dec
adc
and
fcmovbe
les
cpuid
inc
xchg
cld
insl
jl
fidivs
int3
outsb
cmp
pop
out
sub
pusha
ljmp
loope
jnp
inc
jecxz
mov
cmp
pop
andb
stc
ficoml
mov
je
pop
mov
movsl
lea
pop
mov
sbb
sbb
scas
stos
shrl
xor
sbb
push
out
in
xchg
int
fs
into
xchg
mov
iret
not
mov
inc
lds
dec
aam
mov
cmp
cmp
fistl
or
ret
pop
in
imul
insl
dec
lds
daa
pop
stc
add
push
add
shlb
sti
outsb
cmpsl
test
sub
dec
jae
js
lds
sarl
mov
shl
sbb
imul
jno
stos
ss
in
inc
test
cmp
adc
into
xchg
and
mov
cmc
test
jl
popa
out
scas
test
leave
adc
fnstcw
in
push
les
push
in
pop
cmp
je
inc
cmpb
aad
pop
xchg
mov
hlt
scas
or
int
addr16
rol
movsl
sbb
cmp
lretw
ret
xor
jno
subb
out
scas
je
loope
sbb
addr16
je
inc
into
cmc
xchg
fldcw
popa
fidivrl
push
aam
in
mov
in
fistl
adc
add
and
dec
std
lds
rcll
fbld
push
inc
cmpsb
iret
pop
dec
ficoms
jle
mov
cmp
push
jg
jmp
and
mov
pop
jo
push
aam
xlat
xchg
test
cmp
cmp
jae
xchg
adc
pop
cli
cmpsl
daa
push
xchg
jl
mov
idivl
add
mov
test
adc
pop
fucomp
jno
fmull
int3
lods
cmpsb
cld
es
inc
jns
sub
stos
push
shlb
sbbl
les
dec
aaa
dec
adcb
cli
arpl
mov
jle
lcall
or
in
sti
lret
sbb
adc
cmpsl
sub
int3
sbb
xor
dec
insb
fwait
jb
test
imul
clc
fsubrl
in
push
xchg
mov
inc
scas
or
fwait
sbb
sbb
xchg
jg
out
dec
insl
pop
or
into
add
sub
push
mov
mov
pushf
push
fstpt
push
imul
pop
cltd
pop
fldt
sarl
aas
mov
mov
lcall
loopne
scas
and
mov
mov
stos
out
mov
std
mov
lcall
mov
sub
mov
pop
movsb
push
push
ds
ret
push
xor
and
xchg
in
adc
dec
repnz
out
sarb
ret
xor
sbb
imull
adc
sbb
gs
ja
xor
mov
outsb
sub
les
shl
shrl
xchg
sub
iret
sbb
lods
aam
addl
dec
daa
negl
int
and
mov
shrb
mov
aaa
sbbl
mov
dec
and
jb
or
mov
sbb
adc
or
inc
mov
pop
nop
sarl
or
dec
mov
xchg
inc
js
inc
rcrb
call
or
je
sub
std
loope
jl
mov
js
icebp
scas
cli
sahf
mov
jmp
jnp
cmpsb
stos
mov
cmp
jns
dec
ds
dec
call
repz
xor
dec
mov
cmp
pop
arpl
das
in
push
popf
xorb
xchg
sub
pusha
cltd
aaa
icebp
movsb
cmp
mov
mov
add
adc
mov
jb
add
mov
pop
mov
mov
push
and
add
shll
imul
fdivl
dec
xchg
lret
pop
insb
ds
in
enter
xchg
xchg
mov
cwtl
sub
psrad
inc
xor
adc
fildl
psrad
into
dec
xchg
and
outsl
lea
push
loop
inc
pop
lods
adc
jg
dec
ret
mov
mov
pop
cmpsb
cli
popa
test
jno
pop
inc
or
and
inc
adc
mov
in
adc
mov
cs
test
mov
mov
sub
pop
fwait
or
jnp
cli
xchg
adc
repz
sub
mov
pop
cs
out
adc
mov
inc
loop
xchg
scas
je
call
inc
lret
sti
repnz
outsb
je
lret
pop
add
mov
adc
xchg
dec
sub
xlat
std
inc
shrb
enter
outsb
jne
cld
push
das
inc
sub
repnz
inc
test
pop
add
and
mov
xchg
ds
scas
mov
jl
in
subl
cltd
mov
fcoms
xchg
add
mov
shrb
sbb
arpl
cli
stc
vandnpd
hlt
aad
movsl
xchg
cwtl
push
or
and
repz
jae
lcall
mov
fucom
hlt
imul
loop
lock
add
pop
call
cmp
xchg
push
scas
mov
mov
mov
and
pop
cld
inc
loop
repnz
adc
sub
cmpsl
pop
pop
jbe
sub
or
jp
push
or
mov
xchg
shlb
cwtl
pop
push
push
dec
push
jg
addr16
sub
cmpsl
nop
negl
pop
xor
jmp
enter
rcrb
mov
out
pop
jl
test
shll
cmp
cltd
sub
cwtl
shlb
in
stos
xchg
daa
ljmp
xchg
jg
cmp
call
pop
inc
dec
and
cmp
jl
add
jle
pushf
rcr
imul
in
dec
push
fistl
xor
sub
ret
dec
push
push
add
mov
cwtl
aaa
mov
aad
or
mov
dec
or
inc
sbb
lods
cmp
adc
hlt
out
cs
enter
idiv
bnd
xchg
mov
add
cmp
fcmovu
inc
lods
lahf
push
repnz
stos
add
push
fnstcw
out
mov
outsl
pop
cmpsb
jg
and
sub
jb
jae,pn
cld
dec
jb
pop
sbb
aad
in
jo
mov
push
fsubs
sub
mov
jl
and
fadd
jmp
pop
scas
les
imul
lods
mov
inc
dec
jp
je
mul
ljmp
outsb
inc
aad
pusha
lahf
test
ja
mov
jge
xchg
stc
adc
cwtl
mov
stos
inc
xor
pop
mov
jne
dec
lret
pushf
pop
scas
mov
pop
lods
or
jecxz
push
sbb
push
mov
call
mov
or
push
push
mov
add
or
mulb
jo
mov
pop
xor
fs
push
int
xchg
pop
fsubs
cmp
sbb
push
push
scas
jmp
std
jecxz
cmpb
insl
inc
fnstcw
mov
sub
pop
lea
pop
jecxz
mov
mov
mov
sbb
push
repz
ror
jg
ret
jmp
and
divl
mov
cmp
test
pop
push
add
inc
repz
cmp
pop
dec
loope
xchg
mov
call
xchg
xchg
xlat
ret
dec
das
out
or
rolb
sbb
or
xor
sub
inc
push
push
cmp
int3
test
call
movsb
mov
cmp
fmull
outsb
lahf
int
enter
xor
popa
mov
in
jl
test
fldenv
hlt
or
stc
outsl
push
jo
fmuls
mov
sub
mov
fs
xor
paddsb
mov
xchg
push
jp
lods
sarb
mov
stos
sbb
mov
dec
popf
xchg
dec
leave
xor
clc
or
imul
dec
sbbb
sub
mov
lahf
les
sarb
cmp
lds
out
xchg
push
ficoms
xchg
lds
outsb
jo
rorl
sub
mov
aaa
jge
xchg
and
push
push
push
push
negb
out
lahf
cmp
insb
out
ja
pop
push
ljmp
ficomps
xchg
in
xor
imul
out
cmp
lea
push
jp
lock
cmp
pushf
sub
mov
dec
dec
and
mov
mov
xchg
add
and
inc
addr16
insb
jl
dec
rcrb
imul
push
add
push
sahf
or
pop
fimuls
or
push
bound
mov
les
pop
mov
inc
mov
add
lcall
nop
xchg
jnp
lods
in
jl
fwait
cmpsl
xor
lds
ficompl
out
and
lahf
or
sbb
arpl
push
cli
inc
stos
or
dec
mov
scas
fldl
jae
or
pop
xchg
xchg
and
jns
cmp
popa
fimuls
sub
roll
pop
ret
icebp
es
inc
cmp
iret
ljmp
cmp
push
jmp
insl
push
dec
aad
push
mov
mov
xchg
jb
pop
sub
add
fwait
xor
xchg
cwtl
xchg
pop
enter
fsubrs
shll
vcvtps2pd
pop
repz
pop
stos
xchg
or
push
ss
adc
or
adc
rcrb
out
xchg
fidivs
pop
std
rcl
or
mov
in
jp
sti
loop
jl
repnz
dec
outsl
sbb
or
dec
mov
mov
std
sbb
iret
fisttps
adc
arpl
push
xchg
cmp
mov
daa
mov
mov
xchg
in
decb
inc
lods
call
cltd
inc
bound
add
dec
test
sbb
mov
repnz
call
stos
pushf
ret
mov
mov
cmp
icebp
sub
ljmp
mov
mov
pop
jne
stos
js
jnp,pt
and
or
xor
sbb
push
lahf
pop
cld
push
jne
popa
pop
mov
in
pop
push
sub
jns
out
cmp
cs
sarl
insb
mov
adc
jle
dec
hlt
push
or
jnp
dec
pop
sub
pop
in
repnz
rorb
jecxz
sarl
repnz
and
ret
inc
pop
jae
jmp
inc
inc
jae
mov
add
fidivl
jns
arpl
push
into
inc
cmpsl
int3
mov
xor
data16
push
ja
push
xchg
push
addr16
push
insl
fsubl
test
test
gs
sub
mov
xchg
xchg
mov
fisttpll
jns
mov
outsl
loope
cmp
and
adc
es
out
out
outsl
push
movsb
shlb
or
lds
pop
push
jp
cmp
call
fcompl
addr16
ret
lret
inc
or
aas
pop
pop
mov
pop
cmp
xchg
push
loopne
das
mov
shlb
xor
jb
xchg
mov
pop
mov
std
mov
xchg
add
dec
call
jmp
lods
loopne
mov
cli
pop
mov
faddl
imul
jecxz
cmp
push
adc
fisubl
sub
lea
scas
push
lret
mov
or
bound
pop
out
mov
dec
imul
mov
mov
mov
addl
xchg
adc
bound
subl
mov
sbb
movlps
lcall
mov
add
push
mov
rclb
push
aaa
inc
into
push
sub
mov
enter
dec
sub
sub
testl
and
in
adcb
xlat
cmc
sbb
movb
addl
inc
adc
jge
pushw
imul
fistpll
popf
push
les
pop
mov
dec
add
cmpsb
lds
test
pop
scas
jbe
das
test
dec
push
add
arpl
in
jne
jge
mov
popf
inc
dec
fbld
outsb
and
movsb
loopne
jmp
xlat
inc
jno
pop
gs
mov
mov
mov
enter
xor
in
sahf
cmp
je
and
in
pop
fwait
sub
rcrl
cmp
fsub
dec
xor
and
popf
adc
nop
sub
jmp
push
dec
cmp
and
pop
ja
rolb
cmp
pop
sub
xor
inc
notb
sti
out
outsb
cli
dec
cmp
add
or
iret
in
testb
xchg
outsl
add
test
mov
lea
jnp
loop
xchg
mov
or
xor
out
fmull
notb
xlat
adc
xchg
add
out
mov
pop
andb
mov
mov
push
rol
fstps
shlb
mov
sbbb
pop
mov
push
mov
jno
mov
xchg
popf
scas
adc
fucomi
aam
out
xchg
inc
pop
out
clc
pop
ljmp
jae
sbb
lret
inc
pop
enter
adc
clc
sub
inc
fadds
enter
xor
inc
jmp
ss
es
jno
mov
arpl
mov
push
xor
and
mov
popf
sub
jnp
flds
stc
sbb
cld
in
cmc
pop
push
out
jnp
xor
shll
cmp
icebp
sbb
lds
and
movsb
stos
loopne
jns
fbstp
pop
jecxz
jmp
cmpsb
aam
dec
jne
xor
ja
jmp
and
xor
scas
imul
sahf
push
ss
out
xchg
mov
jecxz
inc
repz
notl
add
mov
loope
cmpsb
testl
cmp
fidivrl
add
pusha
loop
jb
imul
shl
pop
xchg
inc
inc
cld
test
lret
daa
popa
popa
push
mov
dec
dec
bound
fadds
jnp
and
stos
mov
xchg
mov
cmc
jge
int
dec
int3
aaa
sub
xchg
daa
dec
push
adc
dec
xor
or
sti
or
repnz
or
add
orb
pop
cwtl
shlb
jbe
adc
pop
cmpsb
sbb
add
test
and
adcl
inc
test
loope
aas
es
outsb
cmp
mov
jmp
or
sub
in
mov
sbb
mov
mov
xchg
loop
inc
sarl
pushf
or
fstpt
push
pop
ljmp
lcall
repnz
push
ljmp
inc
enter
loopne
lea
ficoml
fisttpl
cld
or
cmpsb
sbb
stc
mov
sub
loop
imul
fnstsw
pop
cmp
into
or
and
sahf
mov
sbb
pop
sbb
lret
icebp
repnz
sbb
pop
jbe,pt
push
pop
sub
hlt
daa
iret
ljmp
mov
jb
int3
sbbl
dec
mov
cmp
adc
inc
xor
cwtl
ss
sahf
adc
out
sbb
std
das
xchg
push
imul
mov
inc
loopne
rcll
test
sub
aam
xor
lret
sbb
arpl
leave
sbb
xchg
cmc
outsb
lods
xchg
sub
mov
out
lds
xchg
sbb
iret
sbb
je
sub
popa
sbb
xor
jl
ljmp
shll
add
pop
cmpsb
cmp
cmc
pop
inc
insb
and
mov
leave
and
insl
mov
pop
popa
enter
mov
add
nop
loopne
dec
push
nop
sub
aaa
dec
pop
gs
push
sub
mov
mov
mov
mov
addr16
push
dec
daa
or
test
iret
adc
daa
data16
push
mov
and
pop
ss
iret
jbe
daa
sahf
add
mov
xor
inc
jnp
imul
fsubrl
push
and
pop
out
enter
or
cmp
in
bound
sbb
mov
push
cmpsl
jl
test
adc
inc
loop
adc
stos
bound
ljmp
pop
dec
jecxz
jno
popf
cwtl
dec
iret
das
and
das
out
imul
mov
sbb
lret
les
sbb
mov
xorb
adc
call
sbb
pop
inc
cmc
dec
jno
and
xlat
int
nop
js
push
inc
popl
cltd
push
hlt
cmp
push
cmpsb
idivb
pusha
ret
aam
rolb
xor
ljmp
lods
aad
int
inc
cmp
stc
mov
sti
inc
aaa
xchg
aas
rcll
push
ss
data16
mov
xlat
aam
jns
jne
lret
lret
mov
pusha
inc
popf
push
xor
add
jmp
pop
data16
and
xlat
push
in
jno
jbe
dec
mov
repnz
or
aad
xlat
outsb
outsl
sbb
xchg
adc
stos
in
insb
dec
fdiv
popa
mov
jmp
push
pop
mov
ret
lret
jb
out
jle
scas
cltd
sbb
ss
add
xchg
pop
out
dec
bswap
mov
lock
xchg
lahf
daa
sarb
inc
loopne
mov
mov
imul
lods
aaa
hlt
shll
add
inc
sub
cmpw
xor
sbb
jp
jge
xchg
jmp
push
outsb
mov
xchg
loop
int3
mov
icebp
daa
and
fnstcw
xor
ljmp
mov
mov
cwtl
cmc
jne
sub
pop
jno
mov
and
test
mov
xchg
call
push
sbb
jp
xor
dec
clts
stos
jns
adc
dec
push
xchg
mov
imul
sub
popf
push
mov
inc
jge
pop
pop
fdivr
lahf
daa
aas
int3
arpl
aas
jecxz
push
cli
adc
cmp
decl
iret
dec
movsl
mov
inc
pop
divb
js
jbe
pop
out
inc
pop
lcall
les
adc
mov
andb
inc
push
mov
push
les
mov
sbb
icebp
sbb
sbbb
repz
and
jl
adc
fs
or
xor
push
xchg
and
mov
out
rcrl
movsl
addb
fbstp
cmp
dec
dec
dec
adc
sti
mov
mov
test
push
mov
ss
pop
rol
fists
xchg
or
leave
xchg
dec
inc
aad
add
leave
stc
popf
cltd
xchg
cmpsb
testl
mov
sbb
stos
jae
addr16
and
fldt
push
sti
pop
pop
pop
jge
sub
mov
and
test
outsl
cltd
pop
ss
push
je
dec
pop
cld
or
pop
lret
push
push
test
jle
lcall
ljmp
mov
negl
jae
or
test
out
test
std
popf
push
cmpsl
cld
mov
mov
test
or
shl
lahf
in
mov
mov
fwait
shr
mov
adc
jb
cmp
imul
mov
push
es
andb
adc
push
lock
popf
push
stos
test
xchg
js
stos
mov
aam
ljmp
add
cmp
push
adc
bound
popf
sub
mov
shrl
cmpb
iret
cld
stc
movsb
xchg
mov
mov
or
adc
pop
and
mov
adc
mov
mov
jg
xor
xor
jae
aaa
cli
sub
or
push
inc
jp
jb
inc
fcompl
push
pop
sbbl
jl
fdivrs
mov
out
inc
enter
gs
adc
pop
ljmp
sar
clc
mov
lods
push
push
xor
mov
cmpsb
in
inc
dec
dec
dec
push
mov
outsb
imull
jb
sub
push
into
mov
xlat
mov
ljmp
sbb
loop
lret
cmp
xchg
je
pushl
mov
sub
iret
pop
inc
mov
call
es
pop
or
jo
dec
movsb
lea
das
popf
jmp
repz
or
lret
add
imul
mov
popf
push
aas
add
imul
fdivrl
cmp
scas
xchg
sbb
cmpsl
jnp
cmp
mov
xchg
sahf
xor
popa
add
aam
mov
jmp
push
scas
addr16
gs
xchg
add
mov
sub
mov
mov
fimull
jmp
sbb
sbb
mov
lods
pop
and
mov
sub
jne
out
adc
fsubrl
jle
aad
pop
std
pop
sbb
cmp
push
shll
in
xchg
cmc
xchg
hlt
std
fidivrl
ja
pop
pop
rol
fstp
fucomip
lldt
sbb
popa
or
je
ds
scas
adc
mov
mov
pop
dec
lock
fucomp
xchg
scas
lahf
sub
dec
inc
fidivl
fcmovu
mov
daa
adc
mov
inc
int3
pop
enter
loop
in
mov
mov
add
mov
int
cmc
fsubr
mov
stc
cmpsb
dec
xor
in
sahf
inc
dec
mov
mov
call
adc
lret
hlt
popa
jbe
scas
jecxz
nop
sbb
cld
jns
leave
sti
out
scas
xor
repnz
add
adc
xor
jle
and
add
fs
sahf
lcall
dec
sbb
int3
xchg
mov
in
inc
xor
insb
xchg
mov
pop
fs
push
lret
stc
pop
clc
fsubl
imul
iret
xchg
inc
xchg
jae
jl
mov
pop
xor
in
cmp
and
lahf
jp
mov
std
daa
and
xchg
cwtl
and
cwtl
adc
jne
pop
mov
int3
dec
xchg
lock
fwait
sti
sub
outsb
mov
hlt
outsl
data16
xor
cmp
and
add
aad
js
jmp
pop
popa
testb
aaa
repz
xor
xor
inc
and
aas
lock
testb
xchg
sub
xlat
cld
inc
fldl
mov
stc
xchg
gs
pop
xchg
and
rorl
stos
pop
add
jnp
test
orl
outsb
ss
jb
cs
jnp
xor
pop
pop
dec
inc
popf
jae
xchg
or
cli
mov
or
adc
es
inc
bound
inc
jo
lcall
int3
mov
lret
mulb
clc
shlb
sysret
std
repnz
jg
adc
faddl
and
cmp
mov
inc
sarl
push
mov
cmp
mov
mov
mov
cld
test
push
xor
in
shll
and
fisttps
fsubs
xchg
jns
lahf
addr16
nop
pushl
enter
in
lret
das
or
lret
dec
pop
subb
mov
cmp
sbb
enter
xlat
and
popf
and
aaa
xor
sahf
fiadds
xor
popa
out
fcmovbe
add
dec
hlt
mov
and
push
dec
push
or
jge
jne
push
dec
xor
rorb
ficompl
cmp
sbb
iret
cmp
inc
aam
xor
adc
idivb
sub
jno
xchg
push
repz
mov
imul
aad
mov
jo
dec
jne
lea
ret
jbe
xchg
and
jp
loope,pt
mov
xchg
jg
jge
dec
mov
imul
test
divb
scas
ljmp
and
dec
xlat
push
sbb
sahf
xlat
xchg
or
ficomps
pop
push
sti
mov
sti
adc
test
xor
aam
out
cltd
jmp
sarl
and
jb
inc
jb
push
add
aam
out
cmpsl
push
xor
negl
movsl
jnp
push
cmp
daa
ret
mov
subb
mov
repnz
sub
je
adc
xorl
jb
cmp
popf
data16
loop
or
rcll
scas
xor
loop
jns
aad
mov
mov
lea
test
sub
mov
cwtl
cmp
popa
mov
bnd
jo
imul
out
adc
in
dec
test
ret
adc
pop
mov
loopne
push
mov
jp
mov
adc
pop
movsb
sub
mov
xchg
repz
push
js
into
sbb
mov
imul
scas
ds
adc
lret
enter
jl
pop
jo
mov
frstor
push
aaa
or
out
xchg
cmp
jg
push
leave
shrl
mov
cmp
les
insb
loop
iret
orb
xor
inc
stos
inc
cmp
mov
ja
pop
pop
daa
les
mov
lahf
and
sub
pop
and
jns
push
js
out
push
fimull
movsb
adc
push
fs
data16
sub
sbb
outsb
fisttpl
je
mov
cld
mov
rol
je
add
test
mov
xchg
mov
xchg
aad
icebp
lcall
mov
mov
jb
xor
cmp
xchg
lds
add
sti
adcb
test
test
xor
sbb
movsb
or
bound
inc
int
es
dec
sub
dec
outsl
dec
cmp
inc
iret
frstor
hlt
setg
or
movsl
fdiv
xor
mov
scas
lds
aam
jbe
lret
icebp
push
fnstenv
jnp,pt
cld
arpl
inc
dec
xchg
pop
adc
dec
pop
insl
sub
sbb
inc
jg
cmovs
leave
inc
xchg
pop
bound
movsb
pop
lods
xchg
nop
jp
shrl
push
movsb
or
movsb
loop
pusha
pop
subb
pop
popf
mov
push
cmp
sbb
je
ret
sub
lock
push
in
addr16
cmp
pop
mov
or
in
pop
and
inc
lds
jmp
inc
mov
mov
scas
dec
xor
sub
add
mov
pop
inc
adc
stos
cltd
xchg
rcrb
cmp
sahf
jge
hlt
sbb
jns
aad
and
sub
fimuls
xlat
das
mov
test
fsubrs
xchg
and
sub
mov
add
push
aad
mov
int
dec
in
in
iret
jp
lahf
push
rolb
iret
jl
cmp
repz
iret
jge
jb
sarl
mov
jmp
int
push
sbb
repnz
leave
adc
and
sub
sbbl
int
cs
mov
leave
daa
push
dec
inc
les
push
in
and
adc
jo
jb
sub
or
pop
shll
sbbb
push
jae
cs
push
sbbl
inc
repz
test
sbb
je
xlat
cmpsl
int3
es
test
outsb
dec
mov
xchg
and
shl
outsl
cmp
and
adc
cmp
cli
test
mov
xchg
adc
in
fcmovnu
xor
add
push
setp
push
andb
inc
mov
mov
ror
test
cmp
jb
xchg
jno
mov
pop
xor
shl
ljmp
call
pop
pop
es
ds
jp
cs
pop
loopne
xchg
fdivr
and
fisubs
lea
jg
fsub
sub
pop
sbb
pop
lods
aam
mov
add
push
and
icebp
pushf
cmp
repnz
jno
sub
out
mov
mov
pusha
ret
jg
sub
sarb
lods
test
rolb
xchg
pop
clc
mov
mov
dec
pop
test
nop
xchg
or
mov
iret
push
setne
and
mov
add
mov
daa
outsl
stos
jp
push
lods
sbb
push
repz
and
in
and
cmpsl
xchg
add
xorb
aas
lcall
sub
cwtl
xchg
repnz
sarl
xor
fs
mov
imul
loope
cmp
outsl
mov
ss
loope
gs
bound
leave
test
sbb
adc
lods
jns
js
push
pop
jb
mov
int3
inc
addl
call
loope
subl
ljmp
ret
out
xchg
aam
loope
xlat
in
or
mov
jbe
fnstcw
push
add
xchg
cvttps2pi
mov
or
add
imul
testl
jno
cmc
ret
jae
xor
ljmp
ret
loopne
and
xor
sub
push
inc
jo
je
jp
sbb
sub
mov
jge
cmp
out
mov
test
mov
and
lea
and
fldl
xor
shrl
mov
pop
sahf
insl
push
out
mov
jbe
popa
mov
jle
ret
xor
popa
out
push
push
mov
sub
push
int3
popa
add
aas
test
sub
shll
adc
dec
fdivrs
frstor
adc
lock
loop
dec
scas
subb
mov
sub
inc
stc
mov
push
jne
sbb
fimull
fwait
mov
outsl
loopne
out
adc
adc
outsb
xchg
adc
in
pushf
mov
idivl
sbb
mov
int
pop
inc
mov
cmc
cmc
adc
in
mov
pop
jne
addl
cmp
jp
jp
lret
push
loop
ljmp
out
repnz
stc
push
imulb
lods
pop
pop
scas
jp
xchg
jmp
daa
mov
mov
shll
mov
sbb
out
outsb
mov
or
pop
stc
inc
adc
gs
or
int
out
mov
xor
test
inc
sbb
cs
sub
add
decl
adc
xor
sahf
popa
dec
test
push
test
jg
pusha
aaa
outsl
mov
in
cmpsb
jmp
mov
pop
mov
test
mov
mov
test
lret
sbb
ss
mov
mov
pop
insb
iret
mov
inc
lock
sbb
pop
inc
rcll
lahf
adc
jecxz
scas
fwait
lods
scas
dec
aas
mov
lcall
add
lock
rcll
lds
jnp
je
cs
lds
cmpsb
add
xchg
js
pop
add
mov
out
out
fs
faddl
xor
push
in
out
cmp
cmp
pusha
stos
dec
pop
adc
dec
pop
icebp
mov
lret
sub
jo
mov
aam
aaa
filds
dec
or
push
push
lods
mov
or
jmp
cmp
and
cwtl
dec
rcrb
push
mov
or
add
push
repnz
jae
ret
sub
push
imul
cmp
mov
ss
das
fwait
les
enter
cmpl
push
mov
lcall
sahf
ja
pop
cltd
inc
or
or
lods
cmp
push
mov
xchg
fcompl
sti
mov
popl
mov
jg
xchg
loopne
dec
xchg
push
push
dec
add
sbb
das
faddl
popf
cs
iret
fwait
mov
nop
ret
pop
sub
iret
jmp
ret
in
cmp
enter
insb
dec
mul
cmp
stos
mov
adc
mov
idivl
cmp
adc
roll
jns
pop
cmp
scas
popa
cli
pop
out
push
in
pop
sahf
in
mull
les
push
mov
pop
push
pop
or
adc
leave
sbb
sub
adc
add
hlt
sub
or
mov
int3
cmc
loop
inc
fwait
jbe
mov
das
popf
xchg
or
lret
push
push
dec
fidivrl
cmp
aad
repnz
mov
pop
mov
dec
inc
xor
xlat
dec
lret
inc
js
jecxz
or
jbe
dec
out
pushf
gs
in
pop
pop
add
and
cwtl
inc
enter
jne
jbe
xor
les
lods
addr16
cld
cmp
negl
outsl
or
out
jns
or
int3
xchg
xorl
aaa
or
loop
push
stos
aad
jnp
loopne
in
mov
lret
test
mov
jns
mov
or
out
jns
lods
mov
imul
push
lea
mov
mov
leave
jns
sbb
cld
movsl
gs
cld
ss
mov
and
mov
adc
addl
push
add
and
call
adc
adc
int3
mov
jno
cmp
mov
fsubrl
mov
dec
mov
scas
aad
das
dec
push
repz
pop
cmp
gs
sub
lret
cmpsb
mov
das
jecxz
xchg
push
rcr
inc
mov
popf
clc
mov
lds
lea
inc
cmpsb
mov
push
xor
mov
and
push
and
sub
int
push
das
mov
arpl
push
sti
lock
sub
decb
pop
dec
pop
pop
test
sti
xchg
cmc
xchg
mov
push
xor
adc
loop
insb
cwtl
pushf
and
jge
mov
shll
inc
adcb
sarl
lahf
nop
mov
push
addr16
negb
sub
cli
sbb
add
xchg
or
dec
mov
push
dec
adc
xchg
in
lods
jge
stos
or
call
mov
jnp
pushf
punpcklwd
sbb
push
loop
test
stos
and
loopne
pop
jns
sbbl
xor
mov
jmp
push
sub
mov
cmp
sti
mov
cmp
and
add
outsb
or
sahf
or
mov
mov
jecxz
or
push
push
stos
leave
addr16
pusha
add
loopne
out
mov
call
lret
mov
add
and
cli
rcll
add
jae
push
inc
icebp
jmp
adc
jb
and
aaa
sti
xor
popf
into
into
sub
jle
jb
xor
stos
pop
rcrl
mov
sbb
and
loopne
out
push
mov
xchg
inc
and
sbbb
push
les
lods
push
adc
add
fwait
rorb
fwait
insl
xchg
notb
and
lods
mov
xlat
fstl
into
jecxz
je
aaa
mov
lcall
inc
mov
add
sti
inc
sub
daa
xor
popa
cmp
sub
push
rorb
add
inc
into
sahf
xchg
dec
jp
aaa
insl
xchg
mov
imul
push
xchg
mov
test
pop
stc
jo
cltd
cmpsl
shlb
adcl
test
paddsb
je
lods
sti
mov
pop
fistpl
adc
sbb
mov
daa
test
xor
push
cmp
int3
lds
xchg
inc
scas
movsl
lret
fsubl
sub
fiaddl
addr16
stc
fcmovnb
cwtl
ss
mov
push
in
out
mov
test
shlb
inc
outsb
cs
andb
ljmp
or
jne
sbb
sarl
push
cmpsb
and
insl
dec
imul
dec
dec
jp
movsb
pop
out
fbld
loop
adc
repnz
lods
mov
cmc
out
or
lods
adc
dec
xor
jne
or
or
fwait
add
pop
xchg
or
stc
cmp
neg
std
pop
scas
and
push
icebp
and
xchg
adc
or
jno
push
shll
mov
pop
js
mov
cs
stos
imul
mov
dec
ficomps
mov
insb
fisttpll
adc
sahf
test
bound
cli
mov
test
test
fsub
fcmovne
cwtl
mov
jo
and
ds
cmpsb
mov
out
mov
jle
cmp
lcall
imul
insb
repz
outsl
aam
mov
dec
icebp
mov
arpl
in
ss
pop
push
mov
or
xchg
inc
sahf
xchg
jo
es
pop
out
sbb
cltd
jo
pop
test
std
pop
call
add
jmp
jg
in
pop
jae
adc
stos
sub
push
push
test
lock
les
xor
aaa
mulb
mov
shl
sub
movsl
cltd
ret
or
jmp
fsubrl
enter
mov
jmp
jns
or
test
dec
aam
jp
loope
cmpsb
sbb
movsl
test
icebp
out
loop
xchg
movb
xor
and
mov
mov
loope
out
inc
mov
mov
xchg
sub
and
jo
push
mov
iret
jo
push
outsb
pop
rolb
and
mov
xchg
pop
mov
outsl
daa
stc
xor
stc
jmp
repnz
xor
faddl
sbb
sbb
mov
iret
xor
cwtl
push
mov
push
mov
lds
push
mov
push
sub
loopne
les
in
fcomps
call
adc
mov
sbbl
or
in
daa
sub
pop
inc
dec
mov
add
adc
pusha
add
push
sbb
scas
jbe
jge
sub
jl
xchg
sbb
xchg
fcoml
inc
in
shrl
mov
add
inc
cmp
ja
shl
or
cmp
sahf
stc
inc
out
push
lock
push
sbb
imul
popa
imul
out
mov
pop
loop
lret
aam
in
lret
cmpb
pop
mov
cmp
inc
xchg
stos
sub
fwait
or
stos
pop
adc
xor
or
cli
push
int3
xchg
inc
mov
sti
adc
divb
jl
dec
mov
mov
or
mov
bound
negl
insl
jns
and
add
ret
hlt
sbb
sbb
dec
or
push
daa
pushf
dec
lds
pop
cmp
pop
push
push
sbbl
movsb
scas
xor
std
xor
out
adc
sub
pop
jb
sbb
inc
iret
xchg
loop
in
push
les
cs
rcrb
pop
xchg
xor
movsl
xchg
pop
push
xorb
xor
jbe
sbb
xor
das
movsl
fucomp
pop
out
fsubs
aad
popf
in
shlb
xchg
out
add
mov
jecxz
jo
xor
and
add
std
push
mov
out
dec
cmp
insb
add
leave
mov
loope
or
lret
daa
lcall
pop
inc
nop
sbb
das
imul
mov
mov
insl
push
jo
sti
xor
sub
fcompl
repnz
xor
cmp
and
dec
cmp
push
fisubl
push
stos
jge
xlat
out
sub
std
out
push
mov
pop
ds
pop
inc
dec
push
ss
adc
pop
cli
clc
or
dec
fistl
dec
jne
xor
ljmp
push
add
out
pop
lods
out
jp
nop
pop
xor
cmp
push
mov
fwait
popf
xacquire
push
inc
lea
lds
pop
sub
pop
shl
divl
cmpsl
cmp
inc
ljmp
xchg
shll
cmpsb
jge
mov
lahf
pop
cmc
jmp
or
repz
push
shll
push
add
xchg
push
aad
loope
mov
add
sub
ret
das
icebp
lret
nop
push
loop
cmc
xlat
hlt
jp
out
xlat
vpsubusb
add
pop
sub
dec
jle
push
inc
inc
popf
or
cmpsl
repz
pusha
add
mov
dec
scas
pusha
sub
ja
cmp
data16
jle
jmp
mov
jae
int
xchg
or
cld
fcomi
rcr
sbb
jge
ljmp
fnstsw
clc
mov
cmpsl
mov
push
push
scas
mov
mov
arpl
mov
cmp
xchg
push
mov
insb
sbb
and
cld
sti
mov
rcr
jl
aad
inc
cmp
call
or
mov
insl
sub
mov
xchg
stos
mov
out
pop
pop
add
fisubrl
mov
loop
hlt
or
popa
or
pop
push
sarb
lcall
enter
cwtl
mov
fbstp
out
sub
inc
push
cwtl
dec
pushf
ret
mov
xchg
aad
sub
mov
lods
mov
movsb
loopne
ljmp
sbb
std
lea
add
lds
in
sbb
fs
sub
clc
sahf
push
es
xor
pusha
test
lods
pop
pushf
fwait
popa
popa
xor
mov
mov
les
pop
mov
int3
clc
inc
leave
add
inc
cmp
xor
insl
pop
les
dec
rcl
inc
and
mov
enter
in
mov
jl
cmp
das
dec
sub
mov
pushf
call
std
fwait
adc
xor
daa
sbb
xchg
mov
jg
mov
or
lahf
lret
and
or
ljmp
in
orb
mov
push
std
cwtl
sti
lock
fisubs
xor
andl
push
pop
cmp
push
dec
sbb
sbb
jno
push
dec
mov
pushf
sbb
jae
or
mov
ljmp
aas
stc
sti
jp
adc
add
sti
dec
jl
push
das
cmp
push
sbb
dec
sub
outsl
sub
jmp
addr16
pop
mov
ljmp
ja
mov
add
jbe
mov
daa
rcl
add
test
push
outsb
js
test
lahf
mov
lret
in
call
sub
in
in
add
jno
sub
in
mov
pop
adc
les
xchg
repz
cltd
inc
xlat
sti
push
repnz
inc
fnsave
dec
dec
cmp
dec
movb
inc
sbb
idivl
push
or
faddl
mov
sahf
or
mov
jns
rolb
and
popf
ret
je
xchg
movsb
scas
push
or
mov
mov
mov
xor
mov
repnz
or
aas
imul
jnp
movsb
shrl
lock
mov
ljmp
in
jp
ret
std
push
inc
mov
je
pop
cmpsl
xchg
and
not
repz
pop
inc
xorb
cmp
mov
cwtl
pop
movsl
mov
sub
sbb
mov
xlat
fadd
aaa
icebp
ss
sbb
dec
pop
insl
leave
sub
jecxz
adc
xor
xchg
or
andl
ja
fucomi
and
into
out
add
mov
cmp
std
lcall
rcr
add
sub
out
sbb
cmc
xor
push
xchg
mov
jge
mov
int
cli
loop
std
movsl
inc
bound
jmp
dec
test
adc
shrb
jnp
out
jo
int3
push
sub
xor
lahf
bnd
lods
sub
xor
fildll
shrl
xor
cmp
cmpsl
icebp
hlt
pusha
mov
cmp
sti
add
sbbl
xchg
cld
testl
mov
mov
inc
sub
adc
enter
dec
push
gs
insl
push
sbb
xchg
xor
inc
add
xchg
cld
testb
or
aad
int3
mov
mov
std
popf
decb
xchg
add
int
mov
shll
inc
inc
sbb
rsm
pop
lret
and
xchg
jge
test
mov
add
fdivrs
pushaw
inc
xchg
add
movsb
cmpsl
pop
jmp
pop
push
jns
ss
jae
jl
ficompl
into
cmp
adc
push
scas
repnz
rcr
or
mov
inc
cmp
inc
loopne
lods
loopne
mov
fcompl
int3
pop
push
sahf
adc
insb
cmp
notb
adc
fldt
inc
call
mov
or
js
stc
aad
stos
xchg
cwtl
popf
or
out
les
adc
int3
rdtsc
mov
imul
gs
sbb
in
jbe
adc
mov
mov
mov
mov
dec
hlt
add
mov
imul
sbb
icebp
daa
pop
mov
push
shl
mov
pop
jbe
or
lahf
xchg
fsubrl
push
int3
imul
adc
cs
test
shll
mov
mov
fsub
pop
inc
es
roll
mov
jmp
in
imul
cmp
add
jnp
mov
push
add
mov
sub
adc
pusha
xor
movsb
les
outsb
cwtl
xchg
outsl
sar
dec
pop
jo
sahf
mov
leave
and
mov
pop
idivb
rcrl
or
in
jo
adc
pop
pop
push
and
cmp
ret
mov
xor
test
or
push
leave
push
pop
inc
fs
xchg
mov
pop
push
fwait
pop
ret
dec
pusha
xor
mov
aas
adc
daa
pop
lret
cmc
adc
gs
aaa
fidivrs
test
ljmp
mov
jb
add
rclb
bound
inc
popa
mov
sub
andl
popf
and
cwtl
or
sahf
jmp
xchg
jno
repnz
sbb
gs
sbb
pop
out
jmp
sbb
movsl
mov
cltd
push
and
pop
lods
mov
stc
and
lds
adc
jl
les
push
pop
dec
mov
adc
inc
lods
jp
pop
mov
xor
mov
sbb
ret
aad
int
std
fidivl
sbb
ret
mov
inc
cmp
les
push
out
and
loop
add
imull
pop
xor
lods
pop
pop
popa
in
cmc
sbb
inc
scas
outsl
aam
fidivrs
cltd
lret
jnp
mov
imul
mov
repnz
mov
xlat
nop
push
sti
jns
je
adc
sub
lods
call
jne
cld
xadd
sbb
cmp
and
inc
dec
data16
push
sbb
dec
mov
incl
xor
test
mov
adc
ljmp
cmp
adcl
stc
pusha
fldcw
aas
adc
add
cmp
nop
inc
mov
adc
imul
sti
xlat
xor
xchg
clc
js
mov
jge
jne
lea
shl
mov
icebp
popa
shlb
push
enter
movsl
out
popl
jnp
arpl
mov
or
test
inc
cmp
rolb
push
mov
cmp
out
je
mov
aaa
xchg
jo
jae
test
xor
popf
and
jne
lds
jmp
dec
jns
push
add
stc
aad
test
pop
and
iret
mov
cmp
inc
mov
adc
jl
ljmp
add
flds
mov
dec
test
dec
loop
or
dec
hlt
jl
cltd
push
inc
cli
lods
popa
jns
adc
jbe
cmp
sbb
int
mov
pushf
sub
bound
fisubs
mov
test
sub
cwtl
out
ja
sub
repnz
xor
bound
jnp
rclb
shlb
aas
sar
andb
and
xor
rcrb
mov
push
loopnew
pop
inc
mov
xchg
sub
int3
in
xor
lahf
jmp
mov
testl
cmp
xlat
in
shlb
push
xchg
pop
and
cmpsb
pusha
movsl
stos
dec
ss
inc
sub
pop
push
sub
add
arpl
mov
in
roll
cwtl
mov
repnz
mov
cmp
mov
dec
or
mov
test
dec
stos
mov
or
int3
and
pop
mov
inc
add
shll
int3
rclb
xchg
fmuls
adc
or
shlb
jmp
scas
and
mov
enter
xor
mov
xchg
mov
outsl
loopne
fisttpl
inc
xor
mov
repnz
add
jle
push
push
dec
imul
pop
stos
dec
loopne
inc
cmpsl
sti
out
jo
ss
pop
jbe
mov
mov
push
jl
jno
call
scas
and
dec
je
flds
lret
push
out
dec
fcomip
popf
cs
mov
jno
test
stos
xchg
mov
mov
lods
lret
mov
das
cmp
sub
in
adc
mov
mov
adc
sbb
push
jge
sbb
rolb
out
mov
mov
pusha
rcr
pop
jmp
lea
and
rcrb
in
push
xchg
sbb
popa
jecxz
adc
push
les
or
mov
ljmp
push
iret
or
jns
or
stc
pushf
fidivs
lret
push
into
sbb
xor
sub
cmp
cmp
pushf
cmpsb
ficoms
push
mov
cmp
in
les
clc
xor
dec
sbb
pop
aad
cli
pop
lcall
outsb
cmp
sbb
xlat
and
push
lds
movsl
shlb
fs
aaa
and
fstl
rorb
mov
jno
pop
lret
pop
cmp
mov
sbb
int
shr
lahf
mov
inc
push
adc
outsl
jmp
or
cs
add
movsl
mov
inc
mov
stos
inc
adcl
mov
bt
xchg
lods
push
loop
xchg
push
adc
push
imul
rorl
push
and
jl
cld
fcoms
ss
jb
mov
xchg
repz
insl
popa
sti
sbb
lret
repnz
movsl
stc
inc
mov
xlat
loopne
and
call
inc
sarl
and
lods
xchg
jno
sarl
leave
outsb
pop
out
popa
mov
nop
repnz
jl
testb
add
pop
lods
and
sub
ret
pop
xchg
movsb
shlb
in
mov
xchg
pop
fldenv
and
and
negl
daa
addr16
mov
jp
mov
mov
mov
pushf
movsl
es
pop
mov
movd
cli
outsb
out
cmpsb
addr16
cli
and
sbb
or
push
leave
daa
dec
pop
cmpsl
insl
sub
lods
push
cmp
inc
or
or
jecxz
mov
xchg
js
outsb
sbb
and
lods
cs
xchg
jge
xor
ljmp
jns
sbb
ficoms
rol
aad
pop
or
jge
iret
jg
mov
dec
and
xor
mov
mov
int3
sbb
test
mov
out
dec
pop
test
push
mov
lods
xchg
fimuls
sub
cli
scas
pop
fidivs
aas
add
sub
idivl
pusha
pop
add
nop
cmpl
std
push
adc
clc
mov
sbb
addr16
test
inc
in
lcall
sub
out
add
inc
out
test
std
jmp
mov
pop
or
jae
adc
nop
cmpsl
or
adc
das
sbb
push
aaa
cmp
sbb
or
pop
mov
movsl
popf
je
fidivrl
jno
fs
rcrb
jl
ljmp
mov
pusha
inc
xchg
enter
and
movsb
push
fisubl
mov
dec
xchg
cmpsb
into
sub
cmpsb
ss
pop
mov
fildl
cli
pop
pop
cwtl
int3
add
ret
cmp
not
mov
inc
popf
xor
repnz
test
inc
push
pop
ss
jne
cmp
add
popa
andl
sti
cs
and
xchg
push
insb
cmp
lea
cli
enter
insl
into
sbb
dec
imul
xor
ficoml
scas
arpl
ljmp
and
cmpsb
cmp
push
adc
push
loop
cltd
leave
push
xchg
cmpsb
insl
jno
adc
xchg
pop
mov
into
in
lcall
mov
test
testl
xor
xor
loope
or
xchg
icebp
inc
rcl
out
scas
outsb
fnsave
aas
mov
push
mov
test
jmp
sbbb
cmp
push
out
dec
pop
ret
movzbl
pop
mov
dec
or
cmp
fadd
sub
and
lret
cli
arpl
pop
enter
xabort
pop
popf
dec
cmp
gs
mov
cs
xor
sub
enter
lret
lret
pushf
sub
pop
dec
dec
cmpsl
stos
cld
ja
mov
or
ret
mov
adc
sbb
stos
lcall
or
int3
lock
xor
xchg
jae
lret
adc
scas
push
mov
xchg
sub
jecxz
inc
mov
sub
jne
push
add
mov
cmp
sarb
pop
loope
aaa
mov
jl
outsl
dec
popa
test
mov
scas
test
push
push
clc
add
ffree
jmp
mull
sbb
ret
pop
andl
imul
xchg
mov
cmovae
cli
shl
push
xor
dec
push
dec
sbb
jne
das
popf
mov
outsb
mov
mov
js
roll
and
mov
xor
mov
pop
push
popf
pop
icebp
xor
in
jno
lret
adc
out
adc
mov
sbb
or
js
jne
out
rcl
pop
popf
lahf
imul
mov
ljmp
inc
test
mov
out
aad
in
iret
in
push
mov
cmpsb
pop
mov
adc
jp
lods
mov
mov
dec
gs
sbb
fisubs
popl
adc
push
inc
fimuls
bound
out
xchg
sbb
das
xor
xor
or
aam
fs
cltd
nop
imul
cmp
push
cmc
pop
or
push
inc
inc
sub
cs
out
jmp
sbb
inc
rclb
pop
loop
aas
sahf
scas
inc
jo
push
add
popa
sbb
or
das
lcall
lods
bound
hlt
lret
or
add
xor
xor
or
xchg
stc
adc
test
xor
mov
aaa
xor
outsb
cli
xor
jg
sbb
cmp
sti
sbbl
jns
pushf
push
xor
into
ficoml
add
push
sub
std
xchg
dec
inc
pushf
xchg
je
cld
shl
in
dec
mov
rol
xchg
ds
stos
add
xchg
cmc
mov
clc
push
imul
test
les
inc
cmp
inc
enter
std
call
mov
and
and
movsl
cs
dec
les
mov
mov
sti
jnp
sub
push
jl
sub
loopne
les
mov
negl
sbb
icebp
in
xchg
jbe
frstor
and
dec
jmp
loop
into
sbb
jle
gs
pop
xlat
loope
push
inc
cmp
nop
push
lahf
imull
aad
gs
lcall
sub
cwtl
je
mov
jecxz
lds
js
mov
iret
loop
mov
ds
push
lcall
test
add
les
or
dec
aaa
divl
mov
lcall
cs
dec
xchg
or
xchg
inc
sbb
and
jp
sti
sbb
cwtl
pop
and
movsl
xor
xor
mov
and
jb
adc
fmuls
shr
mov
leave
jl
xor
xor
xchg
xorb
repz
jae
divl
lahf
xor
test
popf
or
in
aad
fwait
add
jmp
mov
sbb
insl
xchg
outsb
fdivs
dec
aas
or
outsl
mov
xchg
dec
add
mov
outsl
aaa
int
push
lret
xchg
jnp
shr
int
aaa
and
pop
int3
cmp
mov
lds
cltd
nop
scas
pusha
sbb
data16
clc
fdivs
lea
add
lds
pop
add
mov
dec
fcmovnu
and
adc
sub
pop
adc
mov
or
xchg
adc
in
pusha
inc
inc
cmc
pushf
hlt
xchg
je
aas
mov
lahf
sub
sub
hlt
scas
mov
jne
xchg
faddl
cld
inc
adc
int
xchg
out
dec
outsb
or
and
int3
adc
dec
shlb
lods
cmp
pop
inc
popf
sub
cmp
sub
js
mov
add
ret
outsl
and
cmp
jecxz
sub
sbb
lahf
and
rolb
pop
xchg
lret
movsl
sub
mov
stc
or
jp
mov
xlat
std
push
scas
lea
mov
out
scas
push
iret
or
inc
hlt
imul
das
pop
adc
pop
cld
cmc
pop
movsl
movl
repnz
sbb
aas
mov
jbe
push
stos
inc
push
sub
les
xor
adc
cmp
rclb
jb
and
test
outsl
fdivrs
dec
sahf
lea
jl
lods
mov
sbbb
lock
fimull
xchg
daa
lcall
xor
sub
jge
movsl
adc
jg
adc
sub
sbb
into
aaa
jmp
pop
and
fwait
xor
push
shrl
pop
mov
xor
orb
pop
int3
xlat
js
es
mov
mov
fisubs
dec
stc
pop
sbb
xchg
jge
arpl
fldenv
or
inc
add
sub
loop
mov
mov
scas
xchg
xor
movsb
test
push
xor
loope
movsb
lea
or
add
addr16
lahf
sbb
mov
imul
add
sbb
xor
push
push
xchg
in
sub
mov
pop
rep
popf
inc
push
int3
xor
shl
clc
sti
jo
sti
and
clc
add
insl
clc
insb
mov
addr16
in
dec
test
out
fidivl
push
dec
or
xor
call
push
out
ffreep
mov
xor
sub
sub
cs
mov
mov
and
pop
movsb
imul
out
jle
pop
sub
inc
ds
lcall
fdivp
mov
ljmp
outsb
jmp
adc
pop
xchg
xor
imul
inc
xor
shll
adc
mov
jns
add
mov
mov
mov
or
pop
and
cltd
mov
mov
push
sahf
ljmp
aaa
cmpl
dec
xchg
dec
sub
lret
lret
add
ret
loope
scas
mov
xor
and
dec
pop
push
shr
and
and
pop
sbb
fimull
mov
xchg
lods
push
and
mov
mov
stos
dec
inc
mov
in
lock
enter
jg
sbb
pusha
push
fmulp
addr16
jo
lahf
cmp
mov
sub
dec
lcall
dec
jp
pop
pop
stc
pop
loopne
aad
and
inc
and
test
ret
into
push
aaa
xchg
add
jno
out
xorl
clc
out
jbe
inc
sbb
inc
movsl
fs
popf
lods
ret
xor
insl
ret
inc
push
into
or
adc
in
adcl
dec
mov
call
hlt
xchg
mov
aam
jecxz
in
adc
outsl
cmp
mov
fs
push
mov
sbb
mov
mov
mov
xchg
popf
sbb
lcall
outsb
in
sub
jns,pt
push
jne
data16
dec
dec
movsl
xchg
dec
xchg
sub
push
into
mov
rcrl
arpl
sti
push
enter
push
cmc
xchg
rcrb
mov
pushf
lahf
pushf
adc
mov
outsl
adc
jg
push
dec
stos
clc
or
jp
dec
cmp
pop
rcr
rolb
jno
mov
int3
jns
sbb
outsl
and
cwtl
mov
icebp
xchg
jge
repz
int3
sub
lods
ret
les
aas
mov
pushl
push
in
mov
scas
push
fisttpl
lock
sti
ja
xchg
pop
cmpsb
xor
mov
stos
loopne
push
or
mov
mov
inc
sbb
xchg
cmc
sbb
adc
add
adc
xor
cli
nop
iret
sahf
mov
lea
xlat
xchg
sbb
mov
test
subb
or
push
in
push
adc
outsl
test
adcl
mull
sbb
add
cmc
or
sub
shrb
insb
je
mov
pop
fwait
leave
iret
es
test
lods
push
push
pop
pop
cmc
cmp
cmp
in
push
movsl
inc
fcmovnu
imul
pop
pop
xchg
pop
cmpsl
cld
jo
add
in
outsl
or
mov
popa
jl
xchg
push
movsl
push
adc
and
add
test
lahf
mov
out
push
sahf
pop
lock
xchg
int
pop
mov
test
fisttpll
in
je
lret
lcall
fcoms
mov
push
cmp
jl
jg
or
cmpsl
in
movsl
fimuls
jb
ja
lret
shrl
pushf
jns
lods
das
pop
pop
clc
insb
adc
lahf
test
xchg
addr16
call
mov
arpl
and
imul
xchg
pop
loope
dec
call
jge
fisubrs
popa
inc
jp
imul
pop
into
and
fwait
push
xor
inc
mov
pop
push
and
nop
ficoml
jne
mov
test
sub
fcomp
dec
lret
or
mov
xchg
jae
outsb
xchg
hlt
or
lods
jmp
mov
lret
xchg
mov
cmp
push
leave
jo
in
adc
test
loope
adc
mov
jge
and
cmp
das
stc
cmp
lock
out
hlt
dec
leave
and
add
xor
ljmp
lahf
and
scas
test
mov
push
or
adc
movsl
rorl
pop
jo
xorl
xchg
lret
aad
fldt
cli
or
jmp
addb
stc
call
dec
rcrl
filds
and
mov
cmp
popa
xchg
xchg
dec
mov
shl
rorb
add
mov
mov
sub
fmul
push
in
xor
xchg
outsl
andl
cwtl
mull
mov
pop
lret
outsl
sub
repnz
xor
xchg
sub
aas
outsl
je
push
pop
cmp
cmp
pop
mov
push
dec
sbb
imul
iret
inc
mov
pop
xchg
cltd
repz
inc
pop
inc
sub
inc
outsb
jb
popf
ja
xchg
inc
imul
mov
push
loopne
mov
cmp
jbe
push
cmovo
pop
jle
jbe
pop
nop
adc
jecxz
xchg
xor
imul
mov
leave
sbb
outsl
jnp
fmuls
xchg
adc
push
bound
mov
repz
adc
and
cmpsb
hlt
adc
ljmp
inc
push
xor
inc
cs
dec
dec
push
dec
data16
sub
into
leave
push
ja
dec
dec
add
fidivs
insb
popa
les
fisubrs
add
test
pusha
sahf
pop
movl
xchg
mov
mov
mov
mov
insb
sti
test
popf
in
fistl
mov
cltd
out
mov
pop
hlt
adc
cs
adc
push
sub
sarl
xchg
test
push
mov
sub
sub
sub
fisubl
dec
out
add
push
fldt
xor
xor
push
jnp
sub
jp
sahf
nop
in
mov
sbb
clc
dec
sbb
mov
adc
xor
pavgw
mov
push
invd
push
inc
push
pop
ss
push
inc
cld
enter
in
adcb
in
adc
iret
in
pop
cmp
mov
mov
in
sbbl
dec
mov
and
push
mov
mov
adc
ret
lcall
inc
push
call
ss
mov
pusha
add
xor
rorl
movb
flds
sub
fs
and
rclb
sbb
leave
mov
xchg
daa
out
dec
jbe
sbb
fldl
cs
lock
out
dec
lahf
shrl
add
xor
jmp
sub
jns
in
movsb
cmp
cmp
ret
cmp
stos
dec
push
jl
or
push
outsb
and
xchg
pop
pop
repz
mov
std
pop
shll
sahf
mov
icebp
mov
mov
pop
jnp
aam
adc
insl
xchg
test
push
xor
int3
cmp
dec
add
and
mov
ljmp
loop
frstor
sbbl
mov
add
cmpsb
pop
mov
jns
rorw
mov
pop
movl
dec
adc
lock
sub
popf
mov
movsb
push
popf
fs
outsl
test
sbb
cmp
insl
cmp
into
jns
lds
adc
mov
pushf
loope
aad
xchg
mov
dec
xchg
std
add
xchg
sti
xor
inc
mov
xor
test
fmul
sbb
xchg
lods
adc
int3
push
ja
nop
dec
repz
out
jecxz
cmp
out
adc
fdivrl
jle
pop
fldl
push
dec
scas
rorb
inc
or
adc
mov
jle
and
add
adc
aam
or
clc
fnsave
mov
shrb
add
add
sbb
test
das
lds
in
jecxz
mov
xor
push
sbbb
jae
mov
loopne
into
lret
mov
sub
sarl
out
test
in
dec
scas
testl
insl
push
jg
and
ja
jp
sbb
pop
push
lcall
adc
les
pop
xchg
rcrl
jle
outsb
fwait
push
test
inc
test
sbb
xchg
cltd
ret
sbb
mov
xchg
push
mov
mov
pop
out
out
adc
je
lret
push
cmpsl
enter
push
push
add
outsb
inc
xor
leave
test
cld
les
aas
mov
xlat
pslld
sbb
sub
jp
xlat
xchg
lahf
mov
movsb
out
mov
jns
lret
jno
and
jle
jnp
es
dec
jmp
push
add
cmp
sbb
dec
jp
popa
sbb
mov
scas
cli
in
xor
stos
rolb
mov
inc
inc
pop
inc
sbbb
xor
test
out
mov
inc
and
jns
jmp
lcall
dec
mov
enter
mov
inc
pop
push
jno
popa
xchg
dec
xor
adc
daa
push
sbb
pop
jle
je
or
fisubl
dec
add
aad
je
fwait
shlb
pop
leave
mov
dec
sti
rcr
lret
xchg
in
insb
rclb
lods
jle
and
cmp
inc
push
mov
test
xchg
push
shrl
shl
jle
jl
mov
or
add
rol
inc
jbe
push
mov
jno
or
icebp
scas
ja
subb
pop
das
fsubl
les
popa
cli
jne
arpl
sbb
pop
cmp
pop
cmpl
inc
lcall
xorb
sub
cmp
jnp
test
sub
dec
cmc
movsb
cmpsb
cmp
mov
rcl
ret
jnp
push
cmp
xchg
push
popa
dec
imul
jno
inc
imul
pop
nop
lock
mov
je
or
push
cmp
imul
sbb
pop
scas
cs
jbe
cmpsb
xchg
test
push
iret
daa
pusha
in
lods
fs
outsb
inc
fimuls
shl
inc
call
cmp
in
inc
xor
repnz
pop
sub
push
loope
add
add
cmp
pop
push
adc
ljmp
out
lret
stos
out
jns
sbb
push
inc
idivb
enter
lahf
add
stos
outsb
or
push
lret
scas
hlt
out
outsl
dec
dec
je
stos
into
sub
pop
loopne
lcall
pop
ljmp
imulb
test
sbb
mov
test
cld
jl
test
fistps
mov
ja
pop
addl
aaa
jle
sbb
jno
adcl
mov
mov
mov
or
shlb
cmp
or
jb
push
dec
fildl
rclb
nop
mov
movsl
xchg
nop
clc
jmp
clc
aam
sub
jno
insb
je
imul
push
cwtl
int
jle
addr16
in
in
jg
mov
fldcw
ljmp
cmp
and
push
sbb
and
movsl
xor
sahf
movsl
push
xchg
iret
jmp
out
ss
out
pop
mov
pop
sub
cmpsb
popa
daa
dec
push
jno
adc
push
out
jg
repz
sti
mov
add
push
pop
sbb
movb
dec
addb
in
push
in
mov
in
inc
pop
sbb
ss
cli
jge
jbe
inc
xor
into
pusha
xchg
push
mov
rcr
dec
push
enter
insb
xchg
lret
cld
xor
ss
xchg
loopne
wbinvd
in
addr16
jno
mov
nop
cmp
or
xor
addl
out
jmp
insb
mov
imul
stc
lods
aam
call
cmpsb
notl
dec
or
sbb
out
sub
inc
adc
clc
dec
mov
cmpsl
cld
rorl
cmc
sub
mov
cmpsl
stos
pop
mov
scas
lods
outsb
jmp
es
or
pop
jns
gs
sahf
adc
scas
lock
and
fs
add
lods
clc
mov
ficoms
fcompp
push
lahf
adc
add
ret
adc
sub
push
imul
or
in
cmp
lret
sar
mov
sub
jae
or
mov
jo
rcr
imulb
sbbl
stos
add
pop
push
jb
xchg
aam
push
cmp
mov
jb
jo
je
aaa
iret
cli
pop
pop
into
pushf
in
fs
inc
mov
test
mov
xlat
je
jno
inc
xchg
jg
sub
std
ret
fucomi
xor
in
fdiv
and
sti
or
cmp
mov
sbb
and
jnp
icebp
mov
and
or
iret
imulb
push
mov
iret
mov
push
mov
hlt
jmp
ss
repnz
xchg
sub
aaa
and
int3
pop
mov
sub
sub
in
xchg
fdivrp
push
rcll
out
pop
insl
pop
dec
mov
adc
dec
lcall
nop
mov
and
clc
sub
lahf
insb
shlb
mov
sbb
sbb
jbe
cs
int
and
adc
stc
pop
gs
test
scas
cltd
add
shll
jno
dec
dec
jl
adc
iret
pop
or
mov
daa
jnp
or
test
loope
int
and
insl
cmpl
cmp
xor
notb
inc
data16
sbbl
inc
mov
data16
mov
lret
and
aam
jp
les
push
daa
pop
push
mov
sub
pop
in
inc
push
mov
xor
cmp
jmp
cmp
je
das
add
mov
clc
jge
push
fldcw
or
mov
mov
imul
sti
sbb
repz
lret
fwait
mov
jle
sbb
jno
sbb
xor
dec
jno
in
mov
mov
mov
and
sbb
cmp
dec
adc
shll
ret
adc
cmpsl
and
clc
roll
mov
add
cli
xchg
jecxz
adc
push
addr16
icebp
lcall
std
mov
pop
add
xchg
test
stos
or
gs
lcall
dec
and
iret
and
push
enter
mov
push
mov
cli
daa
jl
in
pop
lds
adc
sbb
fmulp
inc
test
stos
fdiv
sub
mov
pop
jns
icebp
lea
in
push
scas
cwtl
pop
cmpsl
mov
xchg
icebp
cltd
inc
rorl
xchg
dec
mov
xor
div
jnp
popf
sub
dec
xchg
std
lret
jge
scas
dec
out
xchg
rorb
or
jb
xor
ds
test
sub
xchg
insb
imul
ljmp
dec
mov
push
sbb
xor
jbe
push
ficomps
jmp
fsubr
xlat
jbe
jne
xor
sub
divl
pop
addr16
adc
or
scas
fstps
aam
pop
jl
lds
xchg
or
aam
add
fneni(8087
push
jg
adcl
fiadds
sub
cs
xor
mov
add
pop
and
out
or
je
pop
sbb
mov
adc
push
aam
mov
lcall
bnd
fnsave
rol
fwait
inc
addr16
xadd
jnp
outsb
pop
cltd
cmpsl
dec
loop
jp
mov
mov
xchg
testl
jno
sub
jge
mov
fucomip
mov
in
sbb
cmp
iret
pushf
mov
inc
mov
lret
fnstcw
in
fnstcw
sub
in
add
sahf
rorb
mul
aas
mov
dec
or
and
dec
lock
sahf
mov
jle
push
and
arpl
dec
shll
pop
add
jnp
fsubs
sbb
cmp
add
add
mov
clc
inc
jne
bound
jnp
repz
enter
loopne
sahf
sti
adc
stos
ss
add
out
data16
rorl
stos
push
loopne
and
int3
xchg
call
sbb
add
xor
xchg
out
cmp
sar
lock
daa
mov
cltd
jb
pushf
ljmp
outsl
imul
hlt
jmp
inc
mov
test
sbb
lods
repz
mov
shr
add
and
sbb
stos
sarb
test
sbbl
and
fs
dec
lods
imul
lahf
cld
cmpl
test
out
push
cmc
insb
xchg
push
inc
dec
repz
das
pop
push
jo
test
lock
test
out
arpl
int3
mov
lods
pop
sub
adc
jl
fsubrs
notb
inc
test
jae
mov
ds
in
or
gs
push
stos
dec
xor
cmpl
test
sbb
cmc
lods
jmp
shll
ss
push
mov
insl
stos
fidivs
lcallw
mov
lea
jg
lods
mov
cmp
adc
int
arpl
add
mov
inc
bound
ss
dec
imul
repz
push
pusha
cmp
daa
mov
xchg
gs
jle
je
xchg
jecxz
in
test
xchg
fsubl
pop
pop
push
clc
xchg
jae
cmp
and
inc
sahf
arpl
cs
mov
ja
adc
pop
push
push
ja
cs
add
mov
inc
testl
add
repnz
pop
push
ss
push
ret
push
addl
mov
in
aad
pop
out
mov
inc
gs
nop
outsb
and
cmp
bound
cs
idivl
sti
sarb
mov
or
inc
jmp
dec
imul
jmp
mov
fs
lods
popf
int3
jle
and
int
enter
cmp
popa
cs
add
in
pop
jb
cmp
jge
push
inc
xchg
mov
lods
xchg
pop
mov
lods
stos
and
subl
mov
into
mov
sarb
js
roll
insl
inc
lahf
or
outsb
movswl
xorb
rcrb
dec
icebp
jmp
mov
add
mov
dec
jle
jmp
xor
call
jmp
imul
fs
lret
push
and
xchg
cli
mov
xor
adc
jnp
sub
std
cltd
outsb
mov
jp
aam
and
in
mov
loop
xchg
sub
cmc
lods
fnstenv
push
mov
jp
mov
mov
mov
xchg
lret
pop
push
push
std
and
stos
pop
dec
fisubs
lcall
mov
addr16
aas
fldl
push
cmpsl
ret
mov
fsubrl
mov
mov
shlb
stos
sbb
xchg
mov
pusha
gs
les
push
pop
jne
inc
pop
fbstp
or
cmpsl
fs
push
loope
movsl
hlt
pop
jbe
data16
enter
jg
scas
xor
sbb
inc
adc
sbb
or
inc
mov
shrb
or
cmp
nop
xchg
movsl
add
mov
mov
mov
dec
and
rcrb
nop
rorl
in
addr16
test
mov
jns
xchg
pop
repnz
pop
push
in
mov
sub
inc
les
mov
xchg
jecxz
fsubrl
adc
and
xor
and
add
arpl
ret
inc
push
out
adc
pop
insb
pop
xor
push
dec
jl
outsl
push
dec
shrl
ret
sbbl
push
imul
das
mov
mov
fst
pop
push
jl
popa
or
jb
or
aas
mov
lock
push
cmp
add
push
popf
sar
lret
lret
pop
bound
adc
pop
dec
mov
sub
fsts
addl
sbb
inc
aaa
out
lods
pushf
pop
andl
adc
xchg
mov
inc
addr16
mov
test
sbb
sub
test
fmul
ljmp
xor
dec
mov
shl
xchg
cmp
fistpll
lods
es
jl
and
mov
and
nop
aaa
out
imul
insb
xchg
loop
adc
out
addr16
sbb
adcl
push
pop
mov
xchg
fdivrl
or
inc
push
xchg
xchg
jle
fisubrs
es
out
loopne
jnp
out
clc
mov
stc
bound
imul
inc
and
jg
mov
push
not
cld
mov
sarl
lea
mov
iret
and
mov
push
lods
pop
fcmovnbe
sbb
sub
shl
jne
popf
aad
inc
ret
rcrl
stos
mov
sbbb
daa
fs
iret
mov
mov
out
leave
or
adc
pop
xor
scas
xor
inc
dec
mov
gs
loope
fidivrl
not
mov
cs
pushl
idivb
divl
push
cmp
aas
out
inc
popa
sbb
xchg
pop
pop
outsl
add
cltd
xchg
sarb
shlb
in
ret
je
lods
mov
pushf
jnp
xor
inc
dec
aaa
mov
adc
dec
mov
cmp
sbb
sub
and
sti
push
jae
sarl
lds
inc
decb
scas
adc
mov
dec
hlt
cmp
jne
inc
mov
dec
push
cmpl
sbb
jae
xor
cmp
jmp
jns
stos
lahf
sbb
lds
rcl
fwait
arpl
ret
mov
xchg
cs
dec
out
mov
mov
clc
andb
dec
and
pop
imul
mov
in
lock
xchg
mov
gs
in
data16
pop
push
mov
add
scas
fidivl
sub
shrb
sub
pop
and
cmp
rcrb
dec
xchg
int3
sbb
mov
xchg
push
pop
fs
push
ss
inc
sarl
or
idivl
and
xchg
lret
shlb
out
test
popa
push
sbb
adc
lods
fisubl
fcompl
dec
loop
call
jp
jae
and
and
cs
xor
dec
sub
enter
or
lcall
repz
data16
add
mov
jb
loop
stos
in
jl
mull
insl
sbb
xor
lcall
mov
test
ljmp
dec
popf
and
loopne
add
imul
or
dec
mov
pop
inc
xchg
xchg
sub
xchg
jp
push
dec
xchg
mov
jae
into
mov
lahf
xchg
jl
cmc
inc
ficomps
jl
jg
cmp
test
mov
je
push
flds
pop
negl
jge
xor
or
sbb
incl
out
enter
inc
inc
in
stos
scas
mov
adc
int3
adc
mov
jmp
push
shrb
pop
repz
cmp
or
adc
add
loop
jg
cmpb
movsl
js
push
ljmp
add
dec
mov
inc
xchg
lods
dec
and
in
lret
fsubrs
mov
rolb
mov
test
xor
mov
iret
repz
pop
or
cmp
push
dec
aad
mov
gs
pop
stos
negb
pusha
lods
pop
aas
pop
mov
imul
notl
mov
imul
jg
loopne
dec
pop
mov
and
push
pop
cld
testl
cmp
stos
stos
pop
bnd
outsl
push
and
es
rcrb
adc
hlt
xor
inc
fs
add
mov
call
mov
xchg
fwait
jp
push
outsl
lret
push
aaa
stos
rol
pop
frstor
enter
and
gs
jecxz
mov
sti
pusha
inc
lcall
sbb
mov
imul
das
add
mov
ljmp
fcompl
jo
jmp
jbe
push
leave
sbb
xchg
inc
ret
testb
jo
test
add
pop
inc
ds
mov
xchg
jmp
dec
cmp
jbe
sbb
adc
pop
cmpsb
sbb
fmull
add
mov
aam
mov
mov
sbb
jl
pop
or
cmp
cmp
push
inc
jbe
jl
xor
ljmp
addr16
jg
ds
jl
mov
inc
loopne
lods
jge
mov
lock
nop
add
fadd
rorl
das
dec
pop
push
addr16
loope
pop
mov
jnp
inc
cmc
ds
call
psubq
mov
ds
hlt
iret
mov
xchg
bound
jb
lret
add
out
sub
arpl
push
sub
pop
inc
adc
jbe
push
in
out
inc
push
push
ja
adc
jmp
packuswb
fwait
lea
stos
popa
pop
in
lea
lahf
lret
push
jmp
inc
in
inc
xchg
push
faddl
fisttps
mov
jbe
fwait
ret
and
cmp
in
pop
pusha
mov
lods
mov
pop
xor
xchg
cmpsb
daa
or
cmp
movsl
lcall
xor
lods
dec
cmp
insl
jne
mov
aam
push
mov
imul
out
std
gs
sub
mov
jecxz
fisubrs
out
inc
xchg
inc
pop
dec
aam
add
dec
cmp
sbb
push
clc
adcb
loop
dec
lret
lret
cli
rep
mul
pop
cltd
lds
cmc
pusha
test
ljmp
pop
and
and
shlb
push
gs
dec
sub
int3
mov
or
insl
push
cs
push
or
cltd
imul
pop
mov
insb
mov
clc
mov
lock
sbb
push
mov
stc
fnsave
test
pop
xor
and
clc
fisttpll
pop
lahf
lods
cmp
mov
xchg
jae
xchg
insl
jno
outsl
cmpsl
dec
mov
mov
or
push
jnp
popf
jo
mov
jno
call
add
movsb
ss
inc
or
mov
cld
xchg
out
inc
lock
dec
outsb
decb
jp
out
cmpsb
pop
xlat
and
pop
shl
test
movsb
push
push
fbld
adc
rorl
jns
inc
cmpsb
cwtl
jae
std
jb
ss
jg
cmp
nop
insb
cli
notb
pop
sbb
pop
das
dec
jbe
push
fisubrs
push
xchg
and
negl
inc
or
mov
jg
mov
out
mov
jmp
xor
imul
push
std
inc
dec
cmpsl
shlb
punpckhdq
adc
pop
inc
mov
scas
mov
cmc
rcrl
scas
sub
pop
pop
sbb
fmul
or
mov
int
cmp
sbb
scas
mov
test
jecxz
fs
test
fbld
in
mov
paddusb
jnp
fiadds
mov
bound
and
mov
push
push
cld
cltd
lret
mov
inc
insl
int3
divb
cltd
ja
call
dec
jo
mov
pop
or
pop
lret
cmp
and
shl
shlb
dec
cs
or
push
and
mov
mov
pusha
sbb
xorl
out
fldenv
add
popa
mov
and
inc
lods
adc
rcr
lods
in
rolb
or
and
fwait
add
fisubrs
pop
movsb
mov
sub
and
repz
mov
mov
fsubrl
ret
mov
inc
aas
sub
mov
cld
les
mov
loop
movl
mov
les
imul
lret
push
mov
or
and
fldt
add
and
imul
pop
push
fmulp
sti
outsl
repnz
lcall
and
scas
sarb
lods
jl
or
jne
inc
movsl
adc
adc
in
xchg
jecxz
out
mov
mov
pushl
in
pusha
lods
push
sub
jae
lea
leave
or
xchg
inc
ja,pn
cmpsl
add
cmp
inc
dec
sub
lret
inc
and
cmp
sub
and
cs
mov
push
jno
mov
cli
dec
xor
sub
or
adc
mov
movsl
out
mov
add
addr16
push
jp
xor
je
pop
out
movsb
movsl
pop
pusha
stos
inc
aad
orl
jb
xchg
into
pop
lods
push
pop
aam
cmp
cld
in
mov
sub
mov
daa
rcl
inc
pop
adc
dec
test
jp
add
das
mov
popf
add
incl
push
aam
stos
scas
in
adc
xchg
pop
roll
jmp
bound
cmp
pop
stc
inc
jbe
test
dec
add
imul
jle
xchg
inc
enter
inc
sub
or
pop
inc
push
cmpsb
sbb
pop
mov
add
or
movsb
cmp
pop
add
ljmp
icebp
xlat
push
push
xlat
mov
mov
fcomi
jecxz
outsb
shrl
fbld
mov
mov
pop
or
push
std
fidivs
xchg
pop
cmp
arpl
rol
inc
jae
fistpl
sub
push
jmp
cmp
or
xor
push
sbb
imul
and
or
fistpll
push
ret
hlt
mov
mov
cli
or
pop
scas
push
lods
xor
lcall
mov
adc
movsb
xor
sbb
xor
add
jl
push
mov
push
nop
mov
push
loopne
hlt
loop
adcb
dec
jbe
dec
cmp
lds
cmp
pop
pop
add
ljmp
aas
fdivl
sbb
cmp
dec
std
adc
subl
xor
stos
or
cmp
adc
inc
mov
fdiv
sbb
jge
mov
jmp
addr16
push
enter
push
retw
das
neg
mov
repnz
pusha
nop
jae
mov
add
adc
pop
push
push
mov
cvtps2pd
mov
rcrb
or
inc
out
hlt
test
sbb
sti
sti
out
pop
sbb
sti
or
or
or
xor
jp
popf
idiv
add
jne
lcall
push
aad
push
sbb
mov
lret
mov
in
cli
div
repnz
dec
jmp
push
add
mov
inc
mov
push
fmul
sbb
or
outsb
rorl
add
push
add
mov
movsl
sarl
inc
dec
cmpsl
push
ss
push
sbb
sahf
insb
push
dec
idivb
sbb
push
icebp
or
sbb
and
cmp
lahf
mulb
or
in
gs
cmp
pushf
leave
xor
js
jne
loope
cmp
adc
jne
outsl
mov
adc
add
xchg
push
or
add
xchg
inc
pop
mov
jne
cmpsl
neg
adc
sub
mov
repnz
nop
pop
shlb
repnz
sub
je
dec
sbb
mov
cmpsb
cmp
xorl
push
pop
fcompl
xor
mov
pop
mov
shrb
lahf
inc
mov
sbb
insl
jp
jmp
inc
fwait
pusha
xor
cmp
mov
jmp
stos
mov
cmpsl
xchg
inc
dec
sarb
repnz
jecxz
sbb
inc
mov
cmp
leave
jg,pt
outsb
dec
cld
pushf
in
push
adc
mov
cld
sub
scas
lcall
insb
jnp
les
in
xor
push
jb
mov
adc
xlat
imul
xor
sbb
push
mov
mov
add
pop
cwtl
pop
rcll
mov
jg
dec
fnsave
mov
sahf
scas
sub
dec
nop
adc
mov
bound
or
sahf
cmpsl
push
popa
les
fsubrl
adc
mov
inc
mov
pop
sbb
ss
lret
adc
sbb
pop
sub
mov
lret
pop
xchg
pusha
lahf
std
ljmp
and
adc
push
repnz
or
mov
push
mov
pop
outsb
loopne
je
mov
sub
std
les
aaa
call
xchg
mov
jmp
cltd
lds
pop
and
std
jge
popa
mov
jmp
pop
adc
jmp
fmuls
sbb
mov
movsl
mov
insl
ljmp
nop
mov
mov
pop
stos
sub
xchg
mov
pop
and
xchg
cmp
inc
or
scas
arpl
xchg
pop
pop
aad
cwtl
in
mov
or
in
xchg
insb
sbb
jno
pop
outsb
rclb
lret
dec
movsl
xor
adc
xchg
or
les
repz
aam
push
xor
push
lods
mov
mov
cmpsb
or
scas
or
ret
xor
sub
xor
adc
cmp
push
pop
xchg
lret
sub
test
adc
fstps
push
sbb
push
xchg
cmp
jmp
cld
xor
mov
jecxz
jge
push
imul
std
dec
jge
sbb
add
xchg
jmp
dec
lea
sub
adc
stc
push
dec
negb
bound
movsl
add
fnsave
dec
in
pop
push
test
jge
pop
sub
bound
daa
sub
repz
jmp
and
insl
push
mov
mov
arpl
adc
sbb
loop
stc
in
jne
mov
inc
pop
idivl
add
adc
aas
in
aas
jns
sub
jns
cmp
addr16
mov
gs
add
inc
or
pop
xchg
jmp
std
pop
push
rcrb
dec
dec
sub
pop
pop
push
scas
int
nop
mov
xor
mov
popaw
into
rol
xchg
cmp
sahf
inc
pushl
push
xor
or
stos
mov
lahf
xor
xchg
pop
cmpsl
mov
dec
scas
out
jne
in
adc
lock
hlt
mov
cmp
mov
icebp
test
add
sub
jnp
ret
fnstenv
inc
hlt
adc
imul
push
scas
lcall
stc
fnstenv
push
cmpb
fdivrs
cmpsl
dec
dec
mov
push
repz
fxch
inc
inc
in
lcall
sbb
push
lcall
insl
in
xchg
dec
clc
ds
push
xor
mov
add
xor
add
jae
mov
sbb
pop
insb
xchg
and
out
dec
shlb
pushf
clc
xor
push
sbb
push
out
pusha
cmp
push
cmc
sbb
sarl
idivl
xchg
rorl
jle
pop
xor
test
sbb
xchg
nop
cmp
pop
in
push
bound
add
or
fs
fldcw
dec
ret
rcr
or
popa
stos
ljmp
sbb
mov
out
cli
cltd
jmp
add
jns
mov
fldt
cmp
pop
dec
jmp
fdivl
iret
mov
ret
jbe
into
mov
or
mov
sahf
mov
mov
mov
bound
shl
popf
and
movsl
movsb
movsl
cltd
lahf
out
sarb
xchg
jbe
mov
pusha
jno
icebp
mov
mov
adc
ret
jno
adcl
sbb
jno
push
sub
xchg
push
enter
jbe
mov
adc
push
jl
fcomps
aad
mov
sub
mov
push
dec
stos
push
inc
in
mov
mov
ds
dec
fcom
inc
andb
fs
pushf
movsb
call
push
mov
and
stc
idivb
xor
jnp
cli
sbb
dec
mov
lret
cmp
ret
loope
mov
loop
jmp
mov
cwtl
fisubl
or
mov
push
dec
pushf
cmp
pop
movsb
sub
cmp
movsl
pop
fbstp
cmp
push
sub
shlb
mov
test
mull
inc
sub
jge
xor
fdivp
popf
pop
in
cld
nop
and
add
fwait
jo
ret
dec
stos
repz
sbb
bound
jp
sbb
and
sarl
dec
movsl
je
mov
outsb
add
jnp
stos
adc
dec
rclb
push
or
add
xor
sub
pop
flds
shlb
mov
pushf
icebp
xchg
mov
mov
dec
cmc
jbe
cltd
or
xchg
jg
jne
push
xchg
cmp
sub
sub
push
jno
lcall
out
sub
movsb
push
and
dec
xor
mov
adc
cmp
test
and
mov
and
dec
dec
popl
xchg
cmpsl
pop
push
mov
out
sbb
testl
push
sub
pop
and
or
dec
scas
imulb
rcll
into
adc
add
inc
das
scas
mov
out
aas
cmpsb
rcll
andl
sbb
cltd
jmp
mov
dec
adc
cmp
cwtl
cmp
in
mov
jl
cmp
jmp
in
ficoms
push
push
je
orl
mov
push
cmp
mov
rdpmc
call
mov
mov
je
dec
jle
lret
cli
pop
xlat
js
xor
mov
jg
xlat
jb
shlb
loope
push
inc
not
imul
pop
dec
pop
das
out
push
fsubl
add
mov
cmpsb
mov
xor
insb
jl
inc
out
fistpl
mov
repz
dec
adc
pop
mov
popa
orl
add
aam
mov
push
adc
das
das
adc
jnp
jmp
imul
mov
or
inc
mov
inc
incb
dec
mov
clc
dec
adcl
jg
push
ss
outsl
sbb
popa
sub
pop
mov
or
jne
sub
xchg
dec
fwait
stos
xor
pop
add
bound
pop
lea
pop
add
jnp
jnp
add
inc
dec
outsb
fbld
stc
mov
sbb
movsb
adc
out
in
xor
push
cmp
push
scas
popf
xor
push
jae
std
repnz
ret
jl
push
movsl
push
std
and
in
mov
xor
icebp
arpl
jge
inc
sbb
into
push
fcmovnbe
mov
xchg
addr16
and
push
jae
dec
fwait
add
inc
stos
lcall
decb
xchg
mov
lcall
mov
lods
push
ficomps
mov
dec
imul
mov
jle
pop
loopne
imul
lret
mov
repz
jg
pop
ret
inc
adc
scas
jne
xchg
add
mov
lahf
sti
imul
sub
xor
mov
fsub
std
jecxz
mov
jmp
cmc
jns
sbb
lea
rorl
andb
popf
cmp
subl
inc
loop
and
pop
mov
mov
aas
bound
inc
pushf
pop
out
out
xor
idivl
stos
mov
sub
addr16
sub
pop
dec
pusha
sbb
push
mov
pop
cmp
in
cmp
sbb
roll
xor
and
orb
or
jb
pop
dec
mov
pop
and
mov
aad
insb
jb
dec
lahf
jle
push
jge
mov
lret
and
stos
pop
je
or
jno
adc
push
push
loop
arpl
mov
in
aad
sbb
or
mov
out
sub
out
jnp
add
inc
leave
std
xlat
fcompl
popf
adc
les
pusha
xchg
mov
jae
movsb
dec
pop
cld
std
lcall
sbb
dec
enter
in
xchg
and
aad
inc
or
ffree
popf
aaa
mov
lcall
iret
repz
xlat
cwtl
push
in
push
pop
push
jno
cmpsb
cmp
and
jae
add
xchg
fwait
or
sub
pop
adc
or
loop
push
ss
mov
dec
shrb
inc
sbb
push
es
inc
imul
std
inc
icebp
push
clc
inc
jo
add
cmp
xchg
jno
cmpsb
mov
mov
dec
mov
xor
inc
outsl
jecxz
xlat
bound
ret
shll
mov
inc
pop
test
fistpll
les
rol
fwait
sub
les
jecxz
scas
mov
or
loopne
and
push
sbb
out
rcll
xor
push
mov
xchg
cmp
dec
das
hlt
and
inc
stos
pushf
sar
push
pushf
push
jecxz
es
or
and
jns
or
jae
sub
mov
shrb
cmpsb
arpl
xlat
int3
push
jmp
cmp
cs
cmp
push
arpl
daa
loop
js
js
mov
push
xchg
ds
jle
lea
and
add
mov
push
test
and
pop
pop
add
sub
and
lock
xlat
das
dec
fildl
mov
scas
add
in
xchg
icebp
cmpsl
in
pop
les
lahf
scas
sahf
sub
inc
call
imul
das
lods
orb
outsb
dec
js
outsb
xorb
in
imul
das
stos
xor
jne
pop
pushl
cmp
push
fst
fcomps
cmp
daa
xor
inc
xorl
lods
icebp
cmp
xor
loope
movsl
sub
dec
mov
nop
fucomp
inc
dec
add
mov
lahf
fnstenv
lock
cmp
subb
ss
pusha
jg
cmc
lcall
add
cld
out
lds
into
jb
cmpsb
stos
scas
fidivrl
and
mov
data16
jp
faddl
cmp
aad
mov
xchg
jge
pop
pop
das
popf
jnp
les
sarb
push
ljmp
movsb
lret
inc
and
hlt
jecxz
pop
inc
and
enter
addb
push
mov
nop
jl
dec
mov
add
imul
icebp
lds
xor
out
in
add
xchg
xchg
subb
sbb
sbb
or
in
jge
add
dec
repz
sbb
gs
mov
ja
jmp
test
push
lods
or
xlat
mov
daa
insl
xchg
xchg
push
test
repnz
fldl
push
lds
sbb
mov
mov
insb
into
ficompl
call
and
pop
fcoms
sbb
lock
jg
lods
adc
xchg
push
shlb
sub
pop
test
dec
mov
rcl
xor
push
dec
jne
lock
orl
sti
push
test
add
scas
les
aaa
or
in
add
leave
gs
ljmp
lock
cld
xor
xchg
or
jle
and
push
push
pop
in
xor
repnz
jg
adc
xchg
loopne
xor
inc
pop
or
or
xchg
ja
mov
out
push
sub
repz
je
or
and
sub
out
shlb
dec
jl
cmp
fstpl
mov
jp
jae
cltd
fsubrs
xchg
cmovle
mov
inc
test
imul
stos
call
outsb
les
xor
je
pop
inc
jg
add
mov
jp
sub
das
in
push
outsl
jo
ret
sub
int3
aam
loopne
daa
pop
lcall
mov
dec
scas
or
inc
scas
lods
mov
pop
cltd
and
jg
mov
mov
leave
adc
lods
dec
mov
and
xchg
cmc
andnps
mov
fwait
jmp
xor
rcl
jge
movaps
jbe
in
cmc
std
jb
mov
cltd
adc
xlat
into
je
lods
insl
leave
dec
scas
andb
outsb
cmp
in
test
dec
xor
jne
sbb
imul
outsb
movl
cmpl
mov
push
lds
dec
outsl
pop
cmp
fnstenv
cmp
push
push
mov
pop
lea
jbe
push
ret
cltd
aad
cli
js
lds
cmpl
xchg
or
test
mov
pop
cmp
cld
adc
js
jne
sbb
mov
out
test
mov
pop
repnz
inc
cmp
pop
fadds
mov
ljmp
push
clc
iret
aaa
shlb
pop
push
mov
mov
cmp
data16
or
fisubs
into
inc
aaa
cwtl
stos
jl
scas
add
inc
and
xor
mov
fsubs
outsb
bound
movsb
jp
ror
pop
inc
pushf
pop
rcrb
adc
sub
push
lds
xlat
jnp
push
inc
xchg
jmp
jb
jo
das
jnp
push
daa
mov
lcall
add
mov
jnp
rep
movsb
idivb
lods
test
scas
in
push
and
xlat
stc
sbb
mov
sub
cmc
lea
out
into
in
ret
out
in
sub
inc
aam
stos
add
cli
imul
int3
mov
movsb
das
popa
push
outsb
and
xchg
repz
add
rcrb
divl
mov
fwait
movsl
lds
std
xchg
loope
loopne
xchg
ss
arpl
call
aaa
mov
pop
sbb
cmp
xchg
mov
mov
jle
xchg
and
cs
xchg
les
push
movsl
fdivrs
cli
stc
pop
shll
cld
lret
jns
das
shlb
xor
adc
xchg
not
xchg
mov
or
inc
mov
ss
into
jle
jg
inc
fiadds
cmpsl
loopne
jge
xchg
xor
xchg
xchg
dec
in
xor
orb
inc
pop
fs
loop
pop
xchg
jmp
mov
roll
lret
out
xchg
fsub
mov
sub
sub
ljmp
in
addr16
inc
xchg
xchg
dec
mov
push
rcl
out
mov
lret
fs
mov
test
push
dec
outsl
or
cmp
je
fcomi
popa
fadd
jge
dec
or
scas
sub
pop
icebp
fs
jmp
cmpsb
call
aaa
add
dec
push
adc
stos
mov
insl
push
icebp
fdivrp
and
and
xchg
lods
fs
push
addr16
pusha
mov
les
mov
xchg
xchg
sahf
outsl
popf
pop
inc
sub
cmp
imul
scas
das
and
repz
inc
negb
gs
in
sahf
fsubrs
inc
pushf
fbstp
adc
int
add
or
scas
push
adc
add
cmp
movsb
test
push
ss
aam
mov
jp
xor
mov
testl
sub
cli
mov
sub
into
ret
and
pop
xchg
push
mov
sub
outsl
cmpsl
daa
xchg
xchg
test
leave
xor
sbbl
and
sub
dec
outsl
shll
dec
ja
push
in
mov
sti
xlat
jb
dec
in
dec
pushf
adc
dec
mov
imull
je
pop
nop
mov
mov
jge
pop
xor
mov
pop
mov
aad
lea
out
inc
pusha
pop
jno
cs
mov
rorl
shll
lea
mov
ds
pop
addr16
stos
xchg
jl
test
mov
addb
or
incl
xchg
cmp
cmp
xchg
arpl
jno
mov
test
movsb
mov
pop
ss
iret
cmc
js
mov
addl
int3
cs
lret
xchg
pop
or
loopne
test
mov
dec
jno
mov
stos
ja
stos
rorb
enter
fcmovb
xor
dec
cmp
jecxz
dec
cs
aas
xchg
xchg
repz
sbb
imul
adc
sbb
add
cmp
fcmovbe
adc
cmp
icebp
sbb
jge
cmp
sti
xor
jne
inc
fists
loope
or
pusha
mov
fcmovne
xor
jo
xchg
inc
xchg
mov
inc
movsl
xlat
push
ret
pop
jae
cld
nop
arpl
xchg
push
push
or
mov
fprem1
shl
inc
jb
cli
push
shlb
inc
xchg
imul
sub
mov
idivb
cs
mov
lock
and
xchg
mov
std
fldt
xchg
iret
mov
mov
push
jns
dec
add
call
enter
psubd
cld
addr16
into
cli
ret
push
int
xchg
imul
xor
mov
xabort
aas
push
and
cmp
inc
cmc
xor
push
repz
dec
xor
in
mov
cli
sub
in
mov
and
push
test
std
inc
mov
sbb
addr16
es
sbb
stos
push
push
push
ret
or
mov
push
add
push
rclb
fsubl
addb
out
and
add
call
test
shl
dec
fs
icebp
incb
popf
and
mov
pop
xchg
cmp
fsubs
data16
jle
pop
inc
movsl
std
ljmp
jnp
incl
push
jl
add
ljmp
cmp
idivb
xchg
ss
subb
xchg
stos
dec
ja
dec
xor
test
in
leave
mov
jmp
push
xor
out
hlt
scas
push
out
pop
sbb
mov
pop
mov
movb
cmp
mov
xor
cmp
fdiv
insl
divb
hlt
mov
pop
or
sub
in
mov
call
and
cmovnp
stc
pop
push
ja
dec
nop
mov
pop
roll
loop
js
rcr
dec
or
jp
dec
hlt
jae
jb
xchg
iret
dec
fimuls
pop
mov
div
and
pop
adc
enter
mov
xchg
shlb
cmpl
inc
jbe
adcb
fs
stc
aad
lods
or
aad
mov
sub
or
test
stos
mov
dec
sub
pushf
sub
pop
scas
dec
insb
jmp
mov
andl
inc
push
addr16
sbb
pushf
daa
jae
loope
in
js
mov
inc
pop
adc
and
sti
inc
sbb
add
std
insb
mov
sub
xor
fwait
add
mov
sbb
mov
mov
outsb
cmpsb
je
xor
sbb
or
mov
lahf
ljmp
sbb
cmp
mov
and
pop
add
mov
xlat
push
mov
pop
sbb
enter
in
push
dec
daa
inc
rcr
aas
sub
fldt
loop
jno
sbb
mov
dec
cmp
mov
push
leave
cs
stos
ljmp
mov
cmp
int3
movsb
movsl
aam
sbb
popa
inc
push
xchg
jge
decl
push
sub
push
sub
and
xlat
mov
testb
out
repnz
push
inc
mov
pop
aas
dec
sbb
push
sar
loopne
ja
mov
sub
push
mov
movsb
pop
jl
jmp
adc
sbb
stos
sbb
out
adc
push
jne
push
lret
ret
cli
push
adc
inc
xor
mov
scas
cmpsl
mov
push
adc
inc
pop
jecxz
xor
xchg
int
ret
pop
pop
shrb
mov
and
jmp
ret
std
dec
clc
sbb
mov
dec
cmp
pusha
xor
push
xchg
push
mov
mov
xchg
push
push
xchg
adc
repz
ret
mov
bound
xorb
jmp
enter
adc
addr16
mov
stc
jp
addr16
scas
outsb
xchg
cmpl
pop
add
pop
fwait
add
jns
ljmp
jns
divb
dec
insb
cltd
mov
xchg
push
and
scas
jo
adc
iret
out
mov
or
fidivl
inc
fisubrl
cmpsb
jo
add
mov
inc
xchg
or
adc
sbb
shrl
dec
cwtl
fnstenv
mov
fcomi
nop
sahf
ljmp
lret
adc
pop
push
lret
jecxz
test
sub
mov
sub
test
xor
mov
mov
pop
mov
scas
test
and
lret
dec
add
bound
jmp
std
jae
out
shll
dec
pushf
dec
into
insl
mov
roll
pop
ss
add
aad
int
cmp
imul
je
lcall
adc
es
jns
inc
xor
addl
std
sbb
mov
fists
cltd
or
popa
fsubrs
imul
cmp
xchg
test
add
dec
in
dec
cli
or
xor
cmp
das
xor
lods
mov
push
in
mov
jp
or
test
jge
in
std
mov
xchg
loope
sbb
cmc
mov
pop
mov
mov
or
push
push
mov
add
xor
pop
movsl
clc
pop
jecxz
out
cltd
lock
inc
pop
and
cmp
cmp
and
out
test
fmul
pusha
rclb
mov
arpl
push
mov
mov
lds
cmp
leave
ss
ficomps
lea
push
popf
out
xor
loop
xor
add
inc
jg
ljmp
ja
fstpl
aad
xchg
and
jbe
dec
pop
std
out
mulb
inc
hlt
lcall
int3
push
dec
xorl
mov
adc
fistps
push
jg
inc
jmp
jbe
pop
lock
stos
hlt
cmpsl
das
and
outsb
xchg
fistps
xchg
or
dec
fwait
popa
inc
push
or
sub
adc
icebp
mov
mov
dec
and
mov
adc
sub
les
arpl
outsb
lods
arpl
or
stos
mov
mov
fcomi
jle
ja
sbb
shrl
jge
pop
jmp
out
cmp
and
sbb
scas
stos
and
and
jg
daa
sbb
lds
or
or
dec
ret
and
mov
loopne
lods
xor
adc
gs
mov
jnp
ret
push
cmpsl
mov
ror
dec
push
xor
mov
sub
popf
aaa
sub
arpl
xor
mov
sub
mov
rolw
add
sbb
popf
fldenv
ret
sub
mov
jg
mov
icebp
inc
mov
xor
xor
sbb
in
dec
push
cmp
mov
push
mov
sub
fldl
sbb
jns
hlt
adc
mov
and
aaa
cwtl
mov
pop
sub
nop
mov
sub
jecxz
idiv
sbb
jnp
fbstp
cmpsl
shll
test
adc
sbb
adc
imul
jge
dec
dec
es
das
cmc
jno
and
xchg
mov
cmp
xchg
mov
mov
push
jbe
stc
stc
or
jae
push
popa
mov
xor
lcall
addr16
xchg
adc
aaa
gs
dec
adc
sarb
mov
mov
mov
insl
ja
out
cmc
inc
cmp
lds
push
ds
fs
xchg
incb
mov
mov
stos
dec
xlat
jmp
lock
ret
mov
mulb
mov
and
sti
insl
cmp
adc
xchg
sbb
xor
shl
arpl
xchg
das
andb
ret
inc
xchg
sub
adcl
inc
cltd
sarb
in
mov
adc
dec
cld
push
fwait
mov
sahf
adc
fdivrs
test
sbb
leave
sub
test
xor
js
iret
mov
mov
dec
jecxz
imul
jl
notb
lret
movsb
repnz
pop
popa
in
imul
in
pop
movsb
cltd
and
inc
orb
dec
cmp
dec
icebp
rcll
pop
cmp
sbb
sub
repz
les
jno
shlb
std
cli
ret
add
xor
inc
bsr
inc
xchg
adc
test
mov
rolb
test
push
inc
cmp
testl
inc
mov
adc
je
stos
and
das
or
push
sahf
cmpsl
push
shrl
les
ja
add
lods
fcomp
enter
xchg
cmp
stos
sub
cli
jns
test
sbb
xlat
cli
fndisi(8087
call
divb
jg
xchg
pop
jp
adc
test
dec
mov
or
cmp
mov
mov
mov
pop
cwtl
lret
lds
das
sbb
mov
popa
cmpsl
push
sar
loop
std
xchg
push
sub
and
push
shlb
icebp
inc
xor
or
push
rcll
insb
or
cs
xchg
dec
js
cmp
pop
sub
sub
mov
addl
sbb
mov
lods
or
dec
mov
cld
out
cmp
add
and
ret
divl
int3
aas
push
mov
insb
pop
dec
jne
cmp
jecxz
dec
fstl
lds
dec
push
test
sti
insb
imul
mov
in
hlt
add
scas
pop
sbb
orb
ljmp
fidivl
xchg
xchg
stos
cmpsl
iret
lcall
dec
mov
test
sbb
scas
sbb
dec
adc
sbb
test
test
scas
and
sti
push
cmp
or
push
addb
inc
lock
mov
fldcw
mov
out
imul
loope
cmp
xor
sub
sbb
xor
sbb
out
xchg
aaa
mov
scas
jnp
aaa
addr16
leave
insb
mov
negb
movsl
test
clc
push
addb
outsb
mov
cmp
std
enter
clc
ret
pop
lcall
mov
mov
je
add
or
and
dec
ja
rcrl
std
xlat
test
add
mov
and
int3
int3
sbb
loop
inc
ds
mov
mov
out
mov
movsb
sahf
fdivr
in
jl
in
xchg
addl
shll
jmp
dec
or
cmp
lret
jg
cwtl
jo
xor
or
pcmpgtd
jmp
jnp
cmp
xchg
xlat
mov
out
lods
jmp
call
inc
push
fwait
dec
into
sub
and
mov
pop
add
outsb
lock
cmp
xor
outsb
lea
push
inc
in
pop
cli
shrb
ret
pop
mov
pushf
lret
push
mov
popf
loop
add
pop
loop
iret
lret
jl
into
cli
and
mov
es
outsl
data16
push
aas
xchg
lret
stos
incb
mov
sub
es
out
jb
mov
sarl
inc
and
mov
cmp
sahf
push
cmp
mov
clc
out
pmaxub
clc
push
out
xor
cmp
inc
ja
rorb
sbb
loopne
inc
js
rol
loop
adc
push
adc
dec
cmp
jae
mov
mov
xchg
cmp
fisttpl
mov
adc
xor
std
aas
stos
push
inc
push
xchg
push
fsubl
sub
mov
jg
out
dec
or
or
cwtl
adc
mov
cli
mov
push
cld
xor
push
cli
xchg
dec
jmp
pop
cmp
lea
popa
das
ret
daa
jns
and
mov
insl
push
add
add
imul
loope
and
ljmp
sbb
xor
jae
in
cmp
rclb
mov
lcall
sysenter
cmc
xchg
mov
movsl
mov
inc
dec
dec
out
sahf
mov
xor
dec
xor
aam
xchg
mov
jl
pop
xor
test
imul
aam
enter
xchg
pop
js
add
lret
sbb
xchg
and
sti
pop
sbb
sbb
icebp
pop
leave
pop
push
mov
sar
add
xor
je
cmp
push
into
int3
cmp
push
and
pop
mov
jae
xor
xchg
add
fnstcw
jnp
mov
lcall
lahf
mov
repnz
dec
xor
inc
push
int3
movsb
lods
pop
ret
out
ds
andl
pop
das
mov
xchg
xor
popf
mov
pop
push
dec
fstl
adc
aam
ljmp
xchg
adc
xor
movsb
dec
mov
add
pushf
mov
call
or
sarl
cmpsl
pushf
mov
and
iret
movsb
rcrb
mov
inc
fcoml
jmp
arpl
divl
mov
pop
cmp
outsl
loop
inc
xchg
insb
dec
xchg
push
push
sub
pop
test
cwtl
lods
daa
out
popf
arpl
mov
inc
mov
fs
jne
pop
call
jbe
sub
jle
jb
movsb
cltd
mov
outsl
fisttpll
dec
add
ss
adc
aas
leave
xor
sub
test
std
popa
ret
dec
sub
test
imul
jl
push
dec
pop
divl
jp
out
loope
jno
cmpsb
inc
jle
pop
std
xchg
mov
cmc
mov
jno
push
sbbb
dec
neg
mov
ljmp
jnp
scas
adcl
xor
pop
xor
fdivrs
or
ret
mov
mov
je
pop
add
shr
and
imul
xor
test
adc
icebp
pop
dec
dec
xor
inc
repz
bound
jle
cwtl
mov
mov
fisubrl
xor
out
or
inc
int3
inc
cmc
arpl
subb
pop
lea
dec
icebp
adc
cmp
mov
sbb
mov
inc
sub
cli
out
pushf
sti
pop
fistl
fs
xor
mov
fwait
cmpsb
in
jbe
jne
cmp
scas
jns
push
rol
stos
push
daa
xor
in
cmp
mov
daa
arpl
mov
dec
movsb
or
scas
ss
cmp
cs
mov
es
imul
fbld
icebp
mov
aas
fdivrs
inc
xchg
mov
out
ret
or
or
pop
aaa
dec
add
shl
or
adc
ljmp
dec
shrl
inc
adc
sub
mov
push
or
xchg
std
aas
sbb
mov
mov
adc
aam
cs
push
push
jae
add
and
loopne
fwait
sub
mov
mov
xchg
das
test
lods
push
vxorps
xor
lds
jmp
push
shld
add
xchg
pop
sub
xlat
xchg
loop
aas
mov
mov
je
mov
sub
xor
js
sbb
pop
pop
mov
mov
rcll
cvtpi2ps
dec
cwtl
xchg
das
pop
cmp
fbld
inc
hlt
adc
test
lahf
mov
or
push
mov
and
fwait
and
xlat
das
in
ds
ficoms
mov
adc
add
mov
mov
or
loope
int3
sub
aaa
or
filds
lods
test
push
and
xchg
mov
imul
repz
xchg
inc
mov
lret
daa
int
xchg
push
test
xor
adc
or
test
jle
and
sar
sbb
js
adc
adc
push
pop
xchg
test
stos
in
cmc
stos
mov
mov
lock
aam
push
mov
cmp
gs
stos
sbb
scas
insb
cmp
das
fimull
incl
dec
jp
fimull
and
sbb
adc
ret
adc
lahf
cltd
push
pop
sbb
test
mov
sbb
icebp
mov
test
filds
cmp
sub
in
mov
lcall
xchg
push
jne
or
xchg
jbe
fadd
mov
lock
out
pop
mov
mov
rclb
cs
sub
xchg
repnz
int3
xchg
sbb
ljmp
repz
mov
repz
sbb
inc
push
aad
cmp
cwtl
mov
ja
ja
rep
dec
ret
ret
mov
and
inc
inc
enter
ja
or
daa
mov
lret
hlt
enter
cmc
arpl
push
mov
test
test
or
xchg
imul
nop
and
loop,pt
or
or
sarb
sti
leave
jl
and
cmpsl
test
mov
pop
cwtl
adc
stos
sbb
lahf
jns
iret
mov
pop
push
repz
bound
push
dec
fwait
loopne
daa
or
fldt
mov
and
xchg
dec
add
call
aas
add
lret
ficoml
inc
and
mov
mov
movsb
js
dec
nop
lret
lock
mov
jb
daa
insb
int
adc
xchg
pop
xor
js
add
je
add
shrb
adc
cmp
jle
push
mov
or
stc
push
adc
imulb
jmp
mov
adc
or
jle
int
xlat
mov
mov
pop
lea
xlat
pop
xor
sbb
mov
test
adc
mov
push
push
cmp
mov
mov
iret
cmp
iret
and
sbb
ds
xchg
add
outsb
addr16
sub
mov
ljmp
lret
cwtl
movsl
cmpsl
lods
inc
movlhps
js
xchg
add
or
jge
sub
movsl
sti
jno
push
pop
pop
and
mov
mov
scas
push
push
or
lock
daa
inc
mov
pop
pop
dec
repnz
cmp
je
sub
adc
sti
fsts
outsb
mov
sbb
gs
mov
adc
fidivrl
in
sub
loopne
jo
repnz
sbb
leave
pusha
pop
loopne
lret
dec
push
pop
rcr
pop
mov
aam
mov
ja
nop
outsl
sub
scas
js
xor
divl
xor
push
test
shll
in
xchg
sbb
je
les
inc
mov
shlb
pusha
adcb
es
repz
jno
pop
sbbb
ret
cli
fidivrl
dec
sbb
out
lods
insl
das
popa
cmpl
push
arpl
dec
movsl
sbb
jbe
insl
add
sub
or
int3
push
and
mov
mov
aam
rcl
pushf
ss
out
and
mov
inc
in
idivl
call
mov
ret
cld
cmp
icebp
leave
and
int3
movsl
pop
enter
xor
dec
enter
insl
pop
fbld
addl
mov
xchg
xlat
and
sub
into
out
in
mov
loopne
es
dec
pop
and
pop
xlat
loope
inc
into
scas
aaa
xchg
push
call
mov
cmp
repnz
pusha
mov
mov
inc
push
imul
sahf
daa
cltd
push
and
or
fnsave
cmp
add
lcall
mov
mov
scas
sarb
imul
ds
or
or
sbb
pushf
hlt
jo
sbbb
mov
clc
jae
xor
neg
rolb
nop
pop
mov
fnstsw
fimull
es
inc
je
xchg
jbe
xchg
pop
sub
jmp
cld
xchg
cmpsw
push
testb
push
adc
jae
enter
pop
pop
popf
aam
push
push
jne
into
movsl
filds
jb
out
push
push
sub
mov
mov
lds
jp
subb
sahf
jge
dec
divb
pop
mov
sarl
xchg
fcoms
dec
push
repnz
scas
sbb
daa
pushf
mov
test
xchg
xchg
lds
mov
mov
lea
dec
jecxz
sub
pop
xlat
adc
imul
mov
jno
js
dec
mov
xor
inc
dec
adc
and
enter
dec
inc
scas
daa
lcall
fwait
adc
sbb
lea
mov
mov
movsl
movsb
mov
xchg
pop
push
add
xchg
call
mov
dec
cld
mov
ljmp
ret
mov
adc
icebp
sbb
mov
movsl
lds
sub
leave
je
lods
jge
add
sub
dec
gs
add
jg
or
lret
mov
cwtl
dec
movsb
cmp
xchg
das
adc
ret
jle
sub
lods
xor
jmp
mov
xlat
leave
in
dec
cmp
pop
pop
test
fistpll
xchg
outsl
pop
std
test
cld
mov
inc
mov
add
and
mov
leave
mov
jge
and
push
divl
dec
jge
ds
mov
ss
jb
jmp
push
shlb
out
test
mov
inc
insl
mov
sbb
aad
xor
add
dec
xor
mov
stos
loope
push
dec
jmp
xchg
icebp
popa
in
lret
or
sarb
into
jmp
lock
testl
rep
pop
mulb
adc
xor
into
fcomps
sub
push
xchg
push
dec
xor
ds
loop
dec
popf
jecxz
shll
push
jo
movsl
fists
fimull
movhps
ret
fdivl
mov
sub
lahf
bound
fdivrl
ficoml
stos
ret
push
in
sbb
xchg
out
ds
mov
jle
fldl
mov
push
js
loope
push
or
inc
daa
loope
and
popa
aam
cmpsl
inc
jp
frndint
pop
cmp
mov
or
gs
popa
xor
mov
mov
dec
or
cmp
lds
push
xchg
mov
adc
xchg
adc
out
mov
mov
lret
lret
roll
aaa
push
push
mov
daa
test
adc
sbb
mov
mov
mov
xor
adc
xchg
shl
mov
xchg
push
mov
ds
je
jno
push
fstps
push
or
rcll
addr16
xchg
mov
fsubrl
loop
cmc
sbb
out
jl
xlat
pop
jmp
aad
dec
dec
std
push
test
cmpsb
inc
pop
push
pop
cmp
js
and
push
xor
dec
mov
mov
mov
loope
nop
jno
jns
xor
cmp
fisttpl
out
mov
je
ds
cltd
outsl
ror
fnsave
incb
push
int3
sub
push
shll
pop
sub
rcr
xor
mov
push
inc
clc
subb
stc
xchg
fisubl
pop
adc
xor
or
nop
loope
outsb
lcall
inc
negl
xor
push
inc
fiadds
scas
mov
outsl
xchg
leave
jno
adc
cmp
popa
mov
inc
sahf
and
mov
inc
dec
or
add
fimull
jne
mov
xor
sub
lcall
jns
cmove
roll
mov
nop
inc
inc
push
ret
xchg
mov
fucomp
sbb
and
mov
out
bound
lret
jecxz
pop
mov
mov
mov
mov
mov
mov
pop
ficomps
mov
xchg
or
add
cli
adc
mov
inc
imull
stc
push
lahf
jo
jnp
jp
nop
popa
add
sbb
rolb
inc
lea
dec
add
out
jp
shrl
pop
adc
lret
jb
or
lret
faddl
shll
add
sub
mov
push
aam
sub
int
aam
out
es
lea
ss
jb
dec
aad
xadd
stc
add
jnp
sbb
loopne
scas
int
dec
out
iret
icebp
das
or
mov
xchg
testl
lret
js
test
adc
lds
mov
call
mov
mov
mov
mov
stos
and
pop
inc
adc
cmp
jge
fstl
out
xor
lods
sbb
fwait
outsb
movsb
arpl
push
xchg
add
scas
movsb
loop
enter
cs
insl
mov
cmpb
pop
aad
movsl
cmc
push
mov
adc
out
dec
mov
and
bound
cmpsb
bound
enter
ljmp
ljmp
adc
enter
lcall
aam
mov
add
rcrl
jg
push
inc
jb
mov
mov
mov
fnstenv
dec
les
lret
adcl
setnp
in
mov
sahf
subl
xchg
adc
jne
fdivs
mov
inc
ljmp
shl
test
sbb
push
imul
pop
lods
loope
inc
fldl
data16
rorl
ds
ret
jno
pop
inc
int
mov
stos
adc
negb
add
dec
cmc
mov
fmul
lods
dec
scas
xchg
repz
lods
dec
testl
bound
cmp
sbb
pop
mov
push
sahf
pop
test
add
repnz
dec
addr16
aad
negl
loope
jne
and
sub
ret
ror
xchg
jl
sbb
cmp
xchg
mov
push
hlt
jg
std
rcrl
subb
filds
ficompl
imul
jbe
nop
dec
stos
push
add
nop
fs
adc
and
sub
xchg
push
sub
mov
int3
mov
jle
insb
dec
int3
daa
mov
inc
and
dec
sbb
dec
add
shrl
xor
or
icebp
test
mov
je
push
pop
test
ja
iret
fs
lret
mov
inc
push
jmp
orb
stc
mov
ss
mov
and
cld
cmp
cmc
jo
jo
or
xor
std
or
jae
aaa
call
movsb
lret
inc
pop
loopne
test
push
adc
stc
cld
das
add
cli
and
ret
push
jp
jo
xchg
push
dec
int
enter
ficoml
insb
sti
hlt
test
sbb
jge
pop
adc
cmp
add
pusha
lret
loopne
enter
sub
out
rcrb
das
cmc
out
add
int3
push
inc
add
repnz
sub
aam
dec
fiaddl
xor
dec
or
mov
scas
dec
adc
insl
and
nop
jns
jmp
test
xor
stos
sbb
push
or
add
adc
pop
cmp
pop
jle
cltd
ficompl
adc
sahf
outsb
lahf
cmp
pushf
pop
xor
imul
iret
and
scas
add
fnsave
les
jge
loop
mov
push
imul
fisttpl
cltd
mov
mov
popl
add
cmp
or
and
mov
jb
sbb
arpl
out
in
mov
adc
push
pop
sbb
enter
sub
push
das
cwtl
xchg
mov
pop
and
mov
andl
ds
aad
push
mov
push
mov
lods
mov
rcrb
push
or
pushf
adc
xor
mov
sub
mov
js
ror
ja
daa
cmp
jns
in
in
mov
repnz
outsb
adc
popf
idivl
lret
popf
cmp
pop
lahf
jmp
sbb
mov
pop
outsl
cli
sbb
jb
mov
sbb
dec
test
or
mov
jns
jne
push
addb
pop
shl
loop
ret
push
adc
or
push
add
cs
add
in
ja
cmp
xchg
mov
xor
xchg
add
out
in
push
or
shll
sahf
sub
sbb
mov
scas
dec
pop
push
dec
xchg
filds
inc
lods
frstor
repnz
fiadds
sbb
out
cld
es
inc
mov
jmp
lea
mov
xor
push
loope
sbb
adcb
test
outsb
movlps
xorl
lret
cmpb
ret
mov
movsb
pusha
addr16
sahf
push
mov
nop
xor
push
sbbl
xor
into
fidivs
pusha
fidivrs
hlt
xchg
cmpsl
xchg
jl
jge
outsl
add
outsl
adc
sahf
cmp
ljmp
xchg
cs
mov
lcall
add
ret
push
push
adc
fnstcw
popa
dec
xor
sbb
mov
mov
nop
jb
push
jmp
xor
dec
cmp
or
idivl
mov
add
insl
add
fildll
xor
jb
daa
xchg
mov
xlat
cmp
test
push
loop
orl
jp
xchg
clc
xlat
iret
mov
inc
dec
std
dec
aas
pop
subb
push
xchg
psadbw
fdiv
jns
arpl
outsb
inc
fistl
add
push
aam
test
mov
dec
push
insl
jmp
xchg
xchg
aad
movsl
cmpsl
add
gs
gs
rorb
movb
lret
mov
movsl
push
or
pop
inc
or
and
pop
xchg
pop
dec
pop
jmp
push
rcrb
cli
xor
rclb
mov
movsl
push
js
mov
xor
adc
sbb
rolb
add
mov
es
insb
in
mov
add
fisttps
xchg
imul
outsl
jne
out
mov
cmc
pop
dec
roll
cs
or
jmp
sbb
sbb
mov
or
cmc
std
jnp
push
pop
push
pop
lea
pop
stos
inc
inc
fnsave
fiaddl
test
inc
xchg
insl
icebp
sbb
mov
ficompl
enter
lahf
adc
les
mov
inc
dec
xor
sub
sbb
lret
jo
adcl
xchg
jo
repnz
dec
out
jle
and
push
pop
push
lds
adc
mov
ja
fadd
das
sbb
sbb
mov
mov
xchg
fistpll
add
dec
mov
decb
jecxz
rol
insb
and
jb
repnz
mov
xchg
or
mov
pop
sub
xchg
mov
popa
push
sub
daa
mov
and
ret
test
sti
or
mov
jbe
mov
pushf
push
or
jo
clc
mov
xor
loope
rcrb
pop
sbb
scas
inc
cwtl
mov
adc
or
notl
imull
jle
push
mov
loop
lods
lods
iret
fiaddl
dec
mov
imul
fst
jge
dec
push
push
lds
ss
vpcomuw
cmp
pop
pop
xchg
inc
add
inc
fcomi
repz
daa
cwtl
les
xor
pop
sbb
shlb
stos
xor
aaa
in
lock
adc
fldt
push
loopne
and
test
movsl
mov
inc
inc
pop
push
rcrl
std
xor
pop
inc
push
mov
das
xlat
pop
mov
add
and
movsl
sahf
sbb
or
test
mov
xchg
inc
sbb
in
mov
les
out
or
pop
dec
int3
aaa
mov
loop
adc
and
int
test
out
cwtl
ljmp
mov
xchg
jge
mov
test
or
aam
xor
dec
movsl
clc
loopne
lahf
insb
xor
dec
fwait
xchg
xchg
scas
pop
pop
addr16
daa
mov
dec
int
jge
xchg
cmc
stos
pop
sbb
fsubrl
mov
shll
add
test
sub
sbb
data16
xorb
daa
pop
jge
ja
lahf
dec
mov
js
jnp
out
jecxz
sahf
repnz
test
or
je
adc
mov
icebp
pop
aas
jo
mov
arpl
inc
pop
add
into
sbb
ret
add
shl
pop
inc
jecxz
lods
push
dec
push
jo
xchg
jne
subps
mov
or
in
iret
sub
mov
xchg
outsb
imulb
mov
cld
lcall
push
fcmovne
stos
or
xor
loope
cld
xchg
lock
jg
mov
clc
es
mov
fs
add
mov
or
push
sub
fcoml
jae
jae
imul
scas
cmp
pushf
sbb
push
lcall
adc
jl
sbb
and
pop
cwtl
clc
insb
mov
dec
jl
fildl
mov
jmp
call
xor
arpl
frstor
insb
cld
pop
dec
decl
jl
add
pop
xor
sub
pop
je
mov
mov
call
inc
jns
notb
in
inc
rclb
fisttps
dec
jl
inc
mov
jmp
cmpsb
das
stos
gs
aam
mov
fdivl
sub
add
xchg
jmp
pop
inc
ja
sub
in
xor
call
leave
xchg
and
mov
xchg
dec
cmpsl
jo
bound
pop
jo
push
adc
jo
subb
mov
mov
rcrb
dec
sahf
std
outsb
sbb
dec
adc
pop
inc
sub
hlt
inc
xchg
mov
outsl
push
arpl
add
test
insl
loope
pusha
mov
push
and
jg
push
dec
or
inc
incl
sub
out
xchg
pop
xchg
xchg
push
rcrl
push
cmp
mov
jl
sbb
dec
test
jge
fstl
add
pop
cmpsb
call
inc
dec
push
and
cmc
loope
xchg
pop
cmp
iret
dec
pop
pop
jge,pt
sar
cmpsl
jo
jb
ljmp
push
jnp
in
mov
adc
mov
pusha
mov
fbld
sbb
arpl
rcrl
inc
mov
jle
sarl
adc
jg
pop
inc
lcall
and
cli
jo
xchg
push
dec
mov
inc
push
js
repz
inc
sub
sub
cmc
add
cmpsb
hlt
in
es
loope
sub
sub
mov
rclb
cmpsb
leave
sbb
jle
imul
arpl
push
push
cwtl
les
push
adc
mov
inc
sub
or
cld
mov
lret
jg
xchg
mov
mov
pop
bound
pop
pop
inc
sarl
scas
lock
xor
rcrb
pop
or
dec
pop
xchg
shrb
loopne
dec
cmp
cmp
jne
mov
cmp
mov
lock
jmp
hlt
into
imul
adc
mov
adc
loop
pop
dec
decl
xor
incl
repnz
push
sbb
mov
and
cltd
sbbl
in
jecxz
fildl
add
imull
jl
arpl
mov
pop
clc
xor
adc
and
insl
sub
push
adc
aaa
into
test
sbb
push
mov
movsl
in
out
lret
cmpsl
sub
mov
mov
lcall
je
lds
or
andl
ds
push
jmp
test
mov
or
inc
inc
cli
mov
cmp
mov
call
adc
add
mov
push
xor
mov
xor
pusha
mov
xchg
lods
aaa
sbb
stos
int
cwtl
sbb
loop
movsl
push
out
xchg
xor
sarl
mov
gs
jae
aaa
outsl
jp
cmp
clc
bound
sub
fnsave
stos
into
xor
xacquire
jecxz
jmp
jmp
inc
gs
mov
fbstp
bound
pop
adc
dec
stos
jne
insl
es
add
enter
push
mov
mov
push
in
lahf
xchg
dec
xor
mov
jl
sar
in
sahf
int3
fstl
push
fwait
xchg
iret
inc
mov
and
xchg
dec
call
pop
lret
sbb
push
jnp
sub
aas
dec
xor
int3
test
sbb
mov
jl
sub
adc
or
mov
lock
pop
dec
cld
jge
xchg
mov
and
mov
popa
fwait
or
pop
test
jae
lcall
out
xchg
ret
shrb
cltd
add
mov
jne
ret
fists
call
add
scas
mov
test
mov
out
pushf
xchg
add
ljmp
or
icebp
icebp
mov
jge
jmp
jp
cmp
mov
filds
into
pusha
pop
mov
cmp
outsb
dec
or
and
mov
or
sub
das
xchg
xchg
stos
xlat
aas
pusha
cmp
xchg
cmp
jbe
pop
push
jecxz
popl
sbb
fwait
inc
gs
mov
orl
cltd
dec
pop
mov
mov
rcr
jne
mov
pop
jg
sbb
jbe
push
mov
ss
add
sub
inc
out
sub
pop
cmp
shlb
jge
push
mov
cmp
mov
mov
jae
jns
hlt
das
test
and
into
dec
data16
fwait
inc
shlb
pushf
jno
pop
jg
and
popa
dec
jl
mov
arpl
int3
loope
inc
inc
xor
js
inc
dec
jbe
mov
push
into
mov
fsubrs
adc
pop
aam
xor
ljmp
cmp
ja
cmpsl
ret
xchg
mov
lahf
xchg
mov
call
mov
xchg
rolb
inc
movsb
lret
and
dec
push
scas
loopne
pop
push
sbb
mov
jae
jp
vpmulhuw
adc
mull
cmp
test
popf
jb
iret
out
es
cltd
cmpsl
inc
sahf
add
aas
pop
mov
mov
and
jns
jb
cmp
xchg
mov
pop
idiv
jbe
sbb
mov
aad
sbb
cli
fimuls
lahf
sbb
sbb
fsubr
mov
jle
addb
mov
test
mov
cs
in
jns
xor
dec
xchg
sbb
pushf
xlat
or
daa
fildl
mov
add
fbstp
jmp
sahf
and
jl
mov
xchg
and
jle
push
clc
mov
int3
adc
mov
add
xlat
and
movsl
mov
dec
orb
dec
cmp
fmul
aam
inc
mov
aad
rcll
paddw
and
stos
lret
bound
and
pop
dec
xchg
sarl
push
push
rol
inc
cmpsb
sahf
pushf
push
in
scas
cmp
push
lock
adc
in
cmp
xor
push
sub
scas
adc
and
or
pop
fcomip
movl
dec
xchg
cwtl
stc
jmp
sub
ja
pop
mov
xor
arpl
insb
mov
mov
xchg
orb
mov
jne
cmp
dec
push
mov
jnp
mov
in
add
jae
pop
insl
sbb
dec
cmc
insl
add
decl
dec
cld
xor
leave
stc
cmp
mov
in
adcl
pop
pop
push
icebp
xor
cmp
or
fwait
shrb
mov
cmpsb
outsb
lea
les
jmp
stc
imul
imul
mov
dec
inc
arpl
cli
nop
push
add
cltd
aas
mov
push
mov
pop
stos
push
jne
or
mov
push
mov
jne
lds
add
loop
add
or
cmpsb
mov
mov
mov
mov
adc
mov
movsl
jg
pop
xor
pop
nop
ss
dec
cmp
push
xchg
in
lret
jnp
gs
sti
bound
test
xchg
in
daa
imul
mov
unpcklps
or
test
inc
inc
push
test
xlat
shll
fstcw
xchg
or
add
adc
lods
fmull
popa
pusha
repz
cmpsl
movsb
xchg
dec
sub
inc
add
test
stos
repnz
popa
push
pop
js
insb
pop
lea
adc
dec
pop
xchg
dec
adc
jbe
movsb
adc
test
cmpl
cmp
push
cwtl
and
ljmp
and
ja
rcrb
inc
pushf
arpl
xorb
cmp
mov
ret
subl
mov
mov
mov
shl
xlat
inc
mov
lods
sbb
dec
clc
mov
aam
push
aad
fs
sub
stos
fimull
ficompl
cmc
xchg
dec
xor
jl
xchg
mov
lods
leave
fstpl
out
add
add
cltd
loope
push
loopne
xor
and
lea
jne
mov
mov
push
xchg
pop
sub
inc
jno
and
ss
jle
addr16
daa
dec
mov
int3
push
fldenv
and
mov
jmp
stos
repnz
std
cmpsb
hlt
adc
pop
cmpsl
cmp
imul
mov
pop
inc
loopne
push
mov
mov
cmp
xorps
mov
stc
adc
add
cltd
cmpsb
push
adc
dec
popa
ret
imul
psadbw
inc
icebp
lea
rorb
adc
stc
jl
repz
addb
jg
mov
adc
loopne
xchg
mov
push
and
mov
sbb
cmp
pushw
or
in
mov
cmpsl
mov
rcrl
and
sub
out
inc
aas
loope
xor
xor
ja
mov
scas
xor
xchg
cmp
jle
cwtl
addr16
xor
je
fbstp
jg
adc
or
divl
pop
jecxz
in
push
push
push
xchg
sub
pop
pushl
inc
jo
aad
iret
inc
push
dec
or
icebp
leave
jb
ret
mov
dec
xor
xchg
scas
ret
ret
sbb
repnz
mov
pop
xor
push
in
std
pop
fwait
scas
in
and
mov
popa
or
or
bound
js
sub
dec
pop
call
inc
jmp
or
pop
dec
push
loopne
and
lahf
rcr
jne
push
int
xchg
xor
insb
movl
dec
mov
movsb
pushf
mov
scas
fnsave
push
or
mov
xchg
hlt
sbb
outsb
jmp
lods
aaa
lods
mov
lds
outsl
adc
pop
mov
inc
std
pop
popa
xchg
inc
sbb
out
push
jne
or
xor
pop
lret
jge
cld
xchg
push
push
mov
cwtl
mov
inc
pop
pop
mov
movsb
outsl
and
dec
mov
push
or
fwait
test
mov
mov
cmp
cmp
jecxz
imul
cmp
jb
mov
cld
popf
inc
push
test
popf
sbb
adc
outsb
sbb
jmp
push
jp
sbb
sub
fildll
add
fidivrl
cs
mov
popa
out
das
and
ret
loopne
xchg
mov
fstp
pop
sub
mov
jb
push
jb
enter
imul
and
push
fwait
and
cmp
pop
sub
sbb
inc
mov
mov
and
jns
lret
loop
push
and
out
popa
repz
sub
insl
aam
jle
or
pop
or
sbb
jl
push
jo
jne
inc
icebp
scas
push
xchg
stc
adc
les
mov
inc
inc
xor
push
mov
pop
stc
push
ffreep
fmull
mov
add
sbb
pop
push
pop
xor
sub
outsb
fdiv
fsts
fldl
add
push
cltd
xor
lret
mov
push
stos
scas
xor
sub
dec
mov
or
scas
mov
test
adc
add
xchg
shll
push
js
xchg
aaa
cmp
scas
adc
int
dec
insl
mov
add
aam
addl
jmp
push
push
faddl
and
scas
fwait
push
aad
mov
scas
sbb
test
sbb
vmwrite
sub
dec
mov
ss
into
enter
adc
mov
xchg
stos
mov
stc
fldenv
and
imul
fdivl
stos
xorl
nop
push
adc
es
add
sahf
enter
rorb
insb
mov
fcoms
push
sbb
inc
cmpl
sbb
subl
push
popa
xchg
es
iret
sbbl
aaa
bound
adc
in
inc
inc
movsl
sbb
hlt
out
push
xchg
cmp
cmp
sbb
add
inc
lahf
jb
mov
dec
imul
mov
pop
mov
popf
jp
or
pop
cmpsb
dec
mov
jae
subl
pop
addr16
sarl
cmpl
jnp
jmp
jo
ret
push
mov
out
mov
out
or
test
push
gs
push
mov
loop
and
mov
and
pop
fildl
adc
enter
test
enter
mov
mov
jg
sub
in
xor
add
cmp
dec
or
out
in
dec
test
lret
xor
fsubrp
add
mov
scas
mov
test
pop
push
mov
movsl
mov
addb
sbb
jnp
scas
xchg
push
insl
inc
cmp
xchg
int3
xor
add
or
lahf
enter
pop
scas
sbb
iret
mov
mov
push
loop
jmp
cmp
dec
jno
aaa
sahf
inc
jp
or
je
adcl
cmp
pop
xchg
cmpsl
std
push
lcall
es
mov
dec
std
cmc
push
loope
cmc
jmp
cld
imul
out
jl
sarb
pop
neg
fidivl
mov
leave
mov
lods
or
dec
test
mov
cmp
jecxz
add
hlt
pop
rcrl
cmp
push
push
out
push
sbbb
lahf
lret
mov
cmp
cmp
roll
scas
cli
mov
jbe
lcall
fs
adcb
fucomi
loop
jns
dec
sti
fiaddl
les
dec
mov
cmp
inc
sub
aas
dec
jae
shll
dec
sti
pop
push
dec
cltd
add
cmp
sub
popa
xchg
sub
adc
sti
mov
and
xor
adc
sub
shll
addb
loopne
daa
push
clc
xor
xor
mov
shll
push
push
mov
enter
jmp
jecxz
xchg
aaa
lods
imul
pop
test
push
xor
sub
popf
ret
push
or
jg
imul
stc
jno
xchg
push
push
xlat
es
adc
loope
leave
push
decb
mov
push
mov
fcom
xchg
rorb
inc
lods
int3
lcall
insl
push
sub
and
and
add
lock
sub
dec
mov
rolb
xchg
stos
loope
cmp
push
in
xor
mov
mov
clc
imul
mov
inc
or
xchg
pop
mov
xchg
lcall
iret
lahf
xchg
and
cmc
ret
pop
pushf
mov
xchg
out
mulb
xchg
inc
cltd
add
out
push
iret
fsub
xchg
cmp
loope
rolb
loopne
in
andb
sbb
out
out
jmp
dec
arpl
mov
jecxz
dec
xor
sbb
fmul
enter
stc
cwtl
and
push
jmp
out
fmull
cmovnp
out
mov
mov
mov
mov
lret
nop
data16
test
repz
push
mov
sub
inc
sbb
mov
cs
xchg
mov
mov
xor
jo
sbb
filds
call
outsb
js
mov
aas
add
fsubl
sbb
pushf
xchg
cmp
lds
das
adc
jno
xor
push
xchg
out
imul
dec
loopew
out
popa
mov
xlat
sub
fnstcw
cmp
dec
sub
insb
and
push
cli
xchg
pop
or
lret
pusha
mov
test
push
imul
cmp
popl
sub
out
adc
gs
sbb
insb
fstps
pop
lahf
stc
scas
out
sub
dec
sbb
jno
ret
cld
mov
fidivs
inc
adc
xchg
inc
insb
sub
cli
shl
mov
ret
adc
repnz
inc
aad
push
aad
insb
push
or
aas
gs
push
xchg
stos
sbbb
sub
out
movsb
inc
stos
sub
decl
inc
std
imul
pop
ja
lahf
mov
shll
mov
mov
dec
scas
push
loope
fcmovbe
xchg
jae
adc
cmp
jb
or
dec
idivb
insl
ja
add
insl
mov
stos
xlat
cld
mov
lahf
lock
sbbl
hlt
mulb
mov
mov
decb
pop
inc
ret
and
dec
outsl
imul
push
sahf
int
mov
push
outsl
mov
or
inc
cmpsb
sarb
fcom
mov
mov
pop
cli
fwait
ud2
add
test
push
adc
add
lret
les
or
jbe
je
and
loopne
adc
daa
push
push
add
sub
pop
cmp
lds
push
pop
jge
mov
xor
jb
jmp
inc
test
xchg
pop
inc
jo
push
imul
aas
aaa
jae
add
cs
or
pop
into
pusha
stos
push
mov
aaa
mov
pshufw
dec
push
mov
push
test
xor
daa
pop
ficomps
fildl
adc
scas
add
fnstcw
sub
dec
dec
and
int
dec
mov
es
mov
xsaveopt
jge
xchg
adc
adc
inc
scas
fldl
cmp
in
inc
int
xor
pusha
rcrl
mov
cmpsb
icebp
lea
cmpl
fnstenv
xchg
xchg
repz
mov
faddl
cwtl
cli
sub
ret
leave
loop
lock
adc
in
jg
cs
int
les
andw
je
inc
popf
or
pmuludq
sbbl
mull
lock
loope
cwtl
movsb
add
in
and
lods
inc
test
inc
pop
adc
xor
in
paddw
xorb
and
sbb
pop
mov
ljmp
nop
mov
mov
push
repz
lahf
pop
movsb
fs
shlb
xchg
xchg
adc
das
jno
cld
xor
scas
mov
mov
bnd
lcall
aad
cmp
fdivrp
mov
mov
mov
cmp
lahf
add
adc
jnp
dec
nop
fisubrs
inc
sahf
icebp
jmp
imull
stc
clc
xor
ja
push
aas
imul
sbb
aas
test
shl
fidivrs
rcrb
push
and
fs
add
add
or
in
push
pop
and
push
aad
adc
loopne
ja
dec
add
mov
cmpsl
out
fldcw
fidivs
loop
js
push
xchg
xchg
pop
inc
mov
lcall
or
xor
or
xchg
jno
aaa
xor
rclb
or
enter
add
add
sbb
mov
ret
cmpsb
adc
je
test
dec
test
fisubs
dec
push
ret
sub
push
insb
movsb
add
adc
xor
jge
out
pop
lods
xchg
push
dec
inc
lock
test
push
push
xlat
movsb
lods
fmuls
hlt
and
push
dec
ljmp
loop
pop
and
pop
cltd
dec
movsl
pushf
or
test
fidivs
cmpb
add
adc
out
test
clc
xor
jp
fcoms
ja
test
inc
xchg
stos
lea
mov
lods
in
inc
lock
and
fildll
xchg
adc
push
xchg
rclb
xchg
sbb
cmp
lea
cmc
shlb
imul
push
cmc
or
orb
pushf
and
mov
arpl
sub
or
add
subps
inc
push
out
mov
pushf
lret
fadds
scas
das
or
sbb
int3
mov
incl
das
int3
and
out
data16
cmp
xchg
cmp
push
loopne
or
push
add
lea
sbb
xor
mov
push
adc
mov
add
or
in
mov
xchg
push
adc
sub
in
mov
sub
adc
pop
push
mov
mov
mov
insb
pop
jb
adcb
dec
ret
inc
cmp
das
sbb
pop
push
enter
push
mov
movsb
in
and
sub
sbb
out
cs
clc
ja
into
sub
scas
mov
add
sbb
jne
and
scas
or
mov
les
jnp
xor
stc
aas
lret
or
dec
add
mov
jg
jl
mov
xchg
sbb
xor
xchg
pop
dec
cltd
lods
and
dec
push
fdivrp
jnp
js
jbe
repz
jns
sbb
lods
pop
pop
mov
das
aaa
jg
mov
fwait
push
or
mov
or
pusha
xchg
repz
mov
repz
aad
push
aas
loopne
sarl
cmpsb
jbe
xor
icebp
cmp
jnp
dec
es
xchg
jge
mov
dec
loopne
pop
popf
cmpb
jno
pop
xchg
jmp
sbb
push
sub
mov
addl
mov
out
addr16
inc
push
adc
popf
push
int
addl
sub
and
in
mov
je
addl
stc
sub
lods
dec
dec
mov
shrb
dec
sarb
jbe
pop
or
sbb
cmp
inc
in
fimuls
pop
fbstp
xchg
std
xor
rcll
pop
push
adc
frstor
cmpsl
dec
test
and
and
sbb
aam
xor
lock
pop
mov
push
dec
fwait
xchg
or
mov
popf
sbb
inc
sbb
out
push
mov
pop
sbb
jb
cmpsb
adc
imul
insl
outsl
fisubrs
fwait
in
andl
frstor
add
enter
ret
mov
repnz
xchg
scas
hlt
inc
add
sbbb
add
mov
dec
into
xor
pop
out
jmp
xor
into
jne
push
add
ljmp
add
pushf
cmp
andl
xor
inc
or
hlt
ds
xor
cmp
inc
lret
sbb
imul
dec
outsb
cltd
pop
repnz
fmull
jge
shll
pop
aam
mov
ds
jp
sarl
dec
push
pop
cmp
pop
or
mov
dec
or
cmp
sbbb
jle
dec
and
out
fildll
cmp
clc
pop
pop
cmp
inc
adc
sbb
pop
push
pusha
add
sbb
gs
cld
sbb
dec
int3
aas
test
add
lods
insl
jns
sbb
fiadds
mov
mov
hlt
outsb
push
pop
out
leave
add
loope
aad
imul
imul
or
adc
fadd
mov
push
or
sub
pusha
je
dec
aad
jecxz
fcom
add
cmpb
outsb
fimull
sbb
inc
insb
testl
inc
xchg
push
mov
insl
xor
push
jbe
push
sbb
sbb
jecxz
inc
fwait
jle
adc
mov
lods
cmpsb
push
push
mov
fisubrl
and
inc
cmc
dec
iret
sub
in
pop
sub
dec
cmp
mov
jg
scas
mov
jp
adc
sbb
or
push
rclb
outsb
adcb
imul
mov
dec
xchg
dec
sbb
scas
mov
test
jb
sbb
or
and
lcall
aam
stos
xchg
mov
or
decl
xchg
int3
mov
lods
addr16
mov
aad
imul
cmp
pop
rcl
adc
mov
test
mov
iret
jbe
cmpb
popf
lock
lahf
pop
inc
outsl
and
dec
cmpsb
lods
rcl
fucomp
in
ljmp
pop
or
cld
adc
push
sbb
mov
jbe
jb
lret
les
fiaddl
lods
pop
mov
scas
test
lret
push
jmp
xor
aam
jl
sub
jno
dec
les
cmpsl
test
decl
sub
mov
js
and
test
fs
or
jle
sbb
sbb
xchg
xchg
xor
daa
push
jns
xchg
stos
gs
cld
mov
push
fistpll
insl
movsb
dec
mov
pop
mov
call
push
jns
rclb
pop
xor
cmp
jo
test
popf
repz
and
bound
jb
fiaddl
mov
pushf
out
data16
mov
int
cmp
cmp
mov
adc
test
out
fildll
xor
cmp
cmpb
lcall
sti
es
hlt
mov
pop
cmpsl
out
ss
pop
and
pushf
pop
faddp
rorl
movsl
incb
ljmp
lds
or
xor
sti
sub
inc
and
xchg
out
outsb
scas
sti
int
lea
outsb
mov
and
sahf
std
test
push
ret
sarl
and
je
fcmovnbe
inc
jl
hlt
jne
and
ss
pop
dec
pop
cld
mov
lds
hlt
sub
push
sbbl
push
or
xchg
pop
dec
dec
test
mov
fistps
mov
xorb
test
push
imul
test
int
cmp
out
ds
mov
xor
mov
cwtl
pop
fdivl
inc
shlb
cmp
data16
std
cmp
mov
sub
call
push
sbb
pop
fcoms
out
imul
xorl
aad
movsl
nop
push
mov
cs
aas
cmpsb
es
negl
pop
mov
bswap
in
sbb
add
push
mov
add
jg
mov
fldenv
cmpsl
sub
mov
jecxz
aad
rolb
fsts
dec
ret
dec
xchg
leave
loopne
jg
dec
mov
aaa
sub
out
cmp
mov
test
xchg
mov
xchg
scas
lock
mov
iret
cmc
add
xchg
mov
jb
mov
out
loope
out
mov
inc
int
ss
sbb
push
popf
call
jmp
mov
rorb
xchg
mov
out
ljmp
arpl
push
rorl
sub
push
jl
mov
imul
sbb
hlt
test
ljmp
ror
pop
inc
pusha
mov
cmpb
lea
cmp
inc
dec
jecxz
ljmp
popa
andb
push
jno
xchg
mov
inc
xchg
insb
aam
popa
mov
imul
push
push
cli
in
scas
movsl
dec
into
and
push
int3
cmpsb
adc
jo
jp
mov
push
push
sbb
add
in
mov
loopne
jmp
fcmovnb
lods
jl
aam
leave
sbb
stc
popa
mov
ficoms
push
inc
in
sub
adc
jge
jo
sbb
aam
mov
or
shr
or
add
sbb
push
int
add
lods
orl
jmp
jge
jo
fwait
mov
or
test
pop
mov
jne
dec
out
es
stos
add
pop
daa
shlb
mov
lcall
dec
stc
call
xchg
aad
xchg
leave
sbb
insb
insb
xchg
jg
aas
pop
jo
out
lcall
out
pop
mov
cmp
adc
into
loop
int3
sbb
dec
and
ret
or
loope
pop
pop
sti
popf
pushw
fwait
repnz
sarl
stos
mov
addl
icebp
sub
testb
mov
ret
add
outsl
ficoms
scas
in
pop
push
lds
insl
es
stos
push
mov
dec
mov
add
pushl
scas
or
dec
dec
fcom
addr16
addb
xchg
push
fwait
pop
ljmp
bound
cmp
inc
pop
xor
cmpsb
js
leave
push
push
and
adc
std
mov
pop
push
pop
add
mov
lret
in
push
dec
jne
sub
ja
aaa
fmuls
cmpsl
inc
lods
into
xchg
arpl
lret
mov
push
push
inc
or
sbb
xor
lret
xor
add
mull
mov
test
dec
add
aad
andb
daa
stos
int
sub
fidivrs
cmc
cld
daa
xor
push
cltd
xchg
and
mov
hlt
add
and
ret
jl
mov
in
inc
rorl
ret
cmpsl
out
and
xchg
pop
sbb
or
push
in
scas
cmp
loopne
sub
and
cmp
and
shl
rcrb
mov
fsubp
mov
add
jne
xorl
xchg
jae
lret
xor
push
out
xchg
div
enter
xorl
cmp
jno
fistps
pop
inc
pop
and
movsb
gs
dec
cltd
inc
xchg
sub
dec
push
cmp
loop
nop
and
aam
aam
or
xor
lahf
stc
ja
pop
xchg
jae
scas
outsl
xor
aad
add
sbb
add
add
xor
loopne
data16
mov
and
and
lret
xor
out
sub
and
call
enter
scas
loopne
xchg
daa
fcos
pop
fisubs
dec
stos
fsts
negl
or
sub
dec
gs
or
mov
test
xchg
pop
fsubrl
lods
outsl
adc
fs
inc
mov
pop
and
mov
or
adc
xor
mov
or
mov
mov
dec
push
or
jno
and
inc
jmp
push
jl
jnp
fdivs
push
js
loop
fwait
movsb
dec
int
lcall
push
pop
negl
or
repnz
xchg
push
stc
or
xor
mov
cmp
push
jle
mov
inc
dec
loop
jl
mov
mov
or
scas
jecxz
arpl
leave
sbb
outsl
adc
add
fwait
xor
in
mov
jge
jbe
bound
xor
dec
data16
jo
fdivl
scas
inc
jle
imul
or
sub
dec
jne
xor
xor
jo
mov
add
mov
std
jle
pusha
fisubrs
lods
add
mov
rcrb
add
stos
lds
shll
ss
mov
inc
pmaxub
mov
pop
adc
cli
fmull
or
add
pop
push
inc
sbb
movsl
push
es
and
aaa
adc
fisttpl
cmpsb
loop
jl
adc
mov
int
cmp
sub
sbb
fs
add
pop
pop
or
xor
bound
jl
and
cmp
fcoms
test
in
sbb
dec
xor
lods
mov
mov
push
push
adcb
dec
sbb
roll
js
pushf
or
iret
jno
aaa
xchg
ret
jge
mov
into
add
lcall
xor
dec
repz
jl
dec
dec
dec
stc
add
push
aaa
sti
outsl
testl
enter
dec
addl
ret
lret
pop
mov
dec
push
pop
or
in
inc
scas
ljmp
out
sbbl
mov
in
test
mov
sbb
adc
xor
mov
pop
inc
mov
daa
loope
mov
cmp
push
and
jnp
into
xchg
imul
pusha
or
pop
lods
add
fmul
or
ret
mov
mov
mov
ss
insl
sysenter
xor
pop
xchg
stos
or
shl
or
rcll
sub
xor
and
fsub
sti
inc
sbb
pop
sarl
arpl
fidivs
lret
inc
mov
jnp
xor
enter
dec
fs
repnz
xor
inc
fmuls
sub
inc
int3
movsb
ss
lahf
testl
add
xor
jge
icebp
in
or
add
int3
inc
sarl
sub
in
gs
add
call
imul
outsl
pop
nop
mov
cwtl
xchg
mov
das
mov
add
add
sub
or
ret
push
mov
jmp
in
jo
ds
pop
sub
shll
fcoms
nop
sbb
clc
cltd
adc
mov
ds
cmp
mov
dec
or
into
dec
push
shll
ds
pop
push
notb
test
hlt
sti
int
dec
lcall
outsb
mov
sbb
mov
sbb
daa
rorb
rorb
cwtl
and
inc
int
cld
inc
add
jg
mov
jne
jbe
and
mov
mov
into
xchg
cmpsl
pop
sahf
push
jbe
aam
jle
adc
das
out
xchg
fprem
lods
mov
ljmp
or
pop
xchg
pop
ret
xchg
shl
lods
jnp
dec
je
or
fcompl
jg
cmc
push
imul
stos
xchg
fistps
gs
mov
pop
imul
sti
push
pop
adc
push
jae
aas
fisttpl
cwtl
mov
jp
adc
jp
xor
mov
insb
pop
jae
mov
mov
rsm
mov
cmpsb
mov
xchg
push
aas
cmp
jbe
clc
pop
mov
cmp
scas
stos
mov
mov
stos
xor
jae
outsl
lds
inc
jl
nop
mov
and
sub
adc
add
decl
lret
mov
cli
ss
aad
jno
mov
xlat
out
jp
add
push
cmovnp
sbb
jmp
xlat
mov
test
cmp
add
or
cwtl
xlat
mov
dec
xlat
insl
push
stos
fbstp
adc
icebp
enter
adc
push
mulb
fcmovbe
xor
mov
sbb
clc
adc
dec
mov
or
mov
cmpsl
iret
mov
pop
pop
stos
out
loopne
pop
je
mov
cmp
xchg
mov
lret
or
cmp
add
ljmp
push
stos
ja
sbbb
in
test
lock
fdivrl
sub
jae
push
lods
fidivl
pop
xchg
or
aam
jo
and
imul
or
icebp
xchg
or
mov
dec
push
mov
push
ja
incl
dec
insb
push
lds
cwtl
xrstors
dec
dec
in
fstpt
insb
pop
lahf
loopne
mov
test
pushf
pop
das
lods
jbe
xchg
jne
mov
adc
mov
aaa
add
ror
xchg
ret
jg
or
lret
arpl
push
out
push
or
and
push
mov
add
sub
arpl
pop
rcrb
mov
dec
dec
add
pop
and
push
out
pop
adc
pop
mov
cmpsb
daa
jge
fwait
test
sbb
test
stos
cld
inc
pop
add
push
adc
mov
sub
repnz
rorl
out
in
enter
sti
sub
mov
or
push
nop
pop
rcrl
cmp
cmp
fists
mov
and
dec
xchg
dec
mov
jo
arpl
inc
xor
mov
and
imul
test
sub
shll
rcll
cmp
jo
enter
or
xchg
xor
outsl
mov
imul
or
sbb
inc
and
push
movsb
nop
lret
sub
add
pushf
push
push
xchg
adc
mov
cltd
xor
xchg
rcll
sub
gs
xchg
stos
stos
dec
push
pop
rcll
dec
pop
xor
lret
jg
sub
mov
js
push
ret
push
sub
shll
pop
repnz
divb
repnz
mov
das
jbe
sbb
shll
push
imul
ss
aaa
jae
cli
aas
push
push
iret
in
or
lea
inc
imul
jno
cld
sub
inc
adc
loopne
add
insb
aas
mov
mov
mov
outsb
adc
test
jbe
bound
jmp
push
pop
in
das
fcomp
inc
dec
sub
mov
jp
xor
xchg
mov
xchg
sbb
or
lahf
test
mov
shlb
xor
lods
add
cmpsl
jl
cmpsb
push
dec
push
fsubrp
cmp
mov
xchg
test
aad
jo
rcrb
stc
jae
sub
inc
out
mov
xchg
sbbl
icebp
add
xchg
sahf
mov
mov
mov
mov
push
push
pop
pop
loop
push
or
mov
nop
sarl
mov
and
test
mull
popa
pop
add
movsl
into
mov
dec
push
xchg
mov
popf
sub
push
xor
mov
mov
cmp
jl
pushf
cmpsl
enter
insl
inc
icebp
mov
inc
sarb
out
adc
xchg
inc
sub
lcall
insb
cmp
xor
jbe
inc
fcmovnu
popf
jge
fstl
dec
push
sbb
arpl
ret
and
or
rolb
inc
cli
cmp
insb
shrl
jb
or
stc
sbb
adc
mov
popa
in
hlt
bound
add
lods
lcall
aaa
nop
rcrl
jns
adc
mov
push
in
sbb
test
cld
push
fwait
add
lahf
pop
outsl
push
lock
ss
insb
sbb
lcall
add
add
pop
nop
fisubrs
sub
flds
mov
inc
jae
fcomip
arpl
inc
aad
lahf
xchg
dec
jo
jg
and
lock
xchg
lcall
ret
lret
fsubl
add
fsubrl
pusha
out
jbe
xlat
xchg
dec
sbb
outsl
rorb
mov
lahf
add
imul
adc
xchg
adc
in
shll
xchg
dec
popa
loop
xchg
jmp
xlat
lods
xchg
movsb
movsl
xor
adc
or
pop
xor
add
jne
jnp
dec
jmp
pop
inc
movsl
inc
push
cmp
mov
fistpll
push
mov
push
cmp
andl
and
cmp
in
lea
jecxz
jmp
notl
dec
lea
fwait
rcll
loopne
dec
adc
test
cld
jo
ljmp
add
and
add
fbstp
fmuls
sbb
sbb
mov
sbbl
jae
mov
xchg
mov
cmc
pop
mov
mov
pusha
aas
mov
out
das
push
fs
or
push
cmp
psrlq
xchg
cmpsl
pop
cmp
rcrb
mov
push
xor
pop
mov
je
jnp
sahf
pop
push
lods
ret
ss
ljmp
nop
add
sbb
pop
or
cmpsb
scas
adc
sub
sarb
mov
lods
add
add
pop
mov
cmpsl
dec
sti
mov
addl
jge
bound
adc
xor
iret
jo
or
movsb
xor
add
rorl
sbb
in
pop
jne
std
mov
xor
shl
jmp
push
or
ret
pop
cld
shrl
xchg
repnz
jmp
sbb
cltd
loope
adc
cmc
mov
and
adc
sbb
shlb
or
out
nop
adc
push
arpl
clc
sub
int3
jnp
xor
add
push
or
adc
ds
enter
sub
ret
movb
or
outsl
adc
mov
lret
pop
mov
dec
mov
fisubl
daa
jbe
adc
mov
sbb
jmp
jp
or
data16
add
jmp
or
sub
mov
into
lcall
pop
test
icebp
out
aas
cmc
std
jge
add
sbb
sahf
rorb
jp
lods
aam
pop
add
div
call
and
popa
and
mov
in
call
mov
flds
and
adc
pop
inc
push
cmp
and
mov
dec
lret
sbb
addl
lods
push
xlat
notb
ljmp
and
xor
clc
lds
orb
or
cltd
lret
xchg
xchg
push
cmp
int
jmp
sub
int
ret
dec
or
push
loopne
adc
stos
adc
dec
fistl
jecxz
inc
dec
cmp
xor
das
rclb
xchg
add
fcoml
das
jmp
xor
test
shll
push
and
mov
and
mov
fucom
cmp
mov
scas
adc
fiadds
and
cmp
icebp
out
mov
cli
xor
push
xor
mov
stc
pop
sbb
mov
sub
jnp
cmpsb
repz
jbe
sahf
jge
insb
jg
inc
and
fldenv
popf
out
mov
mov
mov
jo
dec
dec
pop
mov
mov
and
jg
pop
das
insb
inc
lock
xor
shrl
lret
jnp
adc
enter
push
sti
sub
in
sti
mov
sbb
jnp
pushf
jns
pop
clc
test
cmc
out
jne
stos
insb
clc
add
mov
das
xor
pusha
int
in
iret
mov
adc
adcb
inc
rcrb
mov
stos
sbb
rcll
loopne
divl
ret
push
stc
out
jge
push
in
xor
pop
xor
pop
lcall
jo
cld
jae
push
pop
push
mov
lret
jl
lods
adc
xchg
pop
dec
mov
cld
int3
jno
mov
cmpsb
push
setge
stos
int
pusha
jnp
mov
sbb
test
mov
mov
xchg
or
jge
push
dec
sbb
shl
inc
cwtl
jb
xchg
mov
scas
lret
addl
fbstp
mov
clc
pop
mov
ljmp
jmp
js
mov
adc
in
pop
push
mov
sub
or
js
xor
xchg
cmp
stc
inc
xchg
mov
faddl
sub
fisttps
test
mov
inc
arpl
out
bound
imul
xlat
iret
sarl
sti
clc
mov
int
ljmp
lahf
lock
lods
jmp
cmpb
std
adc
add
ljmp
shrl
push
jge
in
jns
rclb
push
lock
inc
pop
repnz
xor
int3
mov
xor
sub
jg
lcall
cmc
int3
stc
test
lea
sub
xchg
call
cmpsl
push
sub
fs
sbb
and
pop
addb
add
lret
addr16
sub
pop
jg
xchg
xorl
cld
xor
jp
and
daa
pop
xor
shrb
mov
ja
mov
mov
stos
jnp
sahf
movsl
xor
push
xchg
jg
stc
loope
xor
xor
jg
in
std
orb
repz
jne
out
sbb
and
sahf
orb
xchg
sbb
push
push
jmp
pop
push
and
xlat
cmc
mov
lds
and
popf
jmp
in
push
scas
stc
add
add
outsb
mov
add
xchg
xor
call
mov
sbb
inc
movsb
xchg
aaa
xchg
sbb
mov
outsb
popf
sahf
mov
and
je
xor
or
adc
sahf
shlb
adc
xor
int
test
jb
pop
sub
loop
mov
shl
dec
int
mov
mov
movsb
mul
cmc
mov
mov
jmp
stos
loopne
mov
mov
mov
and
out
repnz
xor
rcrl
cmp
std
hlt
bnd
stos
loope
negl
jbe
mov
nop
or
mov
sbb
dec
sti
ret
xchg
int
cmc
sbb
push
xchg
and
dec
movsb
ret
and
and
lods
sub
pushf
cmp
dec
jb
push
mov
enter
pusha
insl
sbb
adc
and
ljmp
movsl
pop
int
pop
jle
mov
movsl
popa
cli
push
mov
dec
jmp
imul
push
push
stos
fxch
mov
push
mov
mov
pop
mov
cmp
or
sub
test
pop
hlt
lds
dec
adc
push
jnp
inc
cmp
xlat
mov
test
inc
and
insl
loope
mov
mov
repnz
mov
push
outsl
test
in
scas
mov
sahf
pop
or
and
and
sbb
pop
test
push
popf
push
arpl
cld
mov
cli
test
xchg
in
add
ficoms
sar
dec
cmp
in
add
bound
andl
adc
jno
rolb
xor
xor
sbb
sub
dec
xor
adc
cmp
les
adc
sub
cltd
mov
sub
mov
cs
aam
cmc
inc
inc
xchg
fs
rol
aaa
xor
imul
add
lcall
shrb
cmpsb
call
or
fisubrs
cmc
mov
lcall
mov
inc
sbb
icebp
jmp
lret
test
cmp
int
xlat
std
add
mov
insl
arpl
mov
cmc
mov
subl
push
mov
jp
push
rdtsc
iret
ret
push
dec
cmp
sahf
call
cmp
cmc
cmc
cs
test
xchg
mov
and
lock
pop
das
pop
lret
push
int3
push
mov
pop
in
bnd
jge
test
add
add
loop
sbbb
aas
nop
xlat
scas
test
aad
in
fimull
mov
aam
adc
fwait
jbe
add
nop
scas
mov
call
inc
imul
adc
pop
imul
mov
xchg
jl
xchg
jo
icebp
adc
sub
mov
test
adc
lds
push
cmp
sub
jge
sub
std
adc
push
loope
daa
out
cltd
mov
xchg
pop
cmp
in
daa
fidivs
jnp
mov
loop
mov
jge
dec
pop
pop
lret
lret
add
pop
sub
inc
or
cli
and
add
insl
test
addr16
push
out
add
lds
push
scas
adc
xor
lahf
mov
insl
fisubrl
lock
dec
adc
je
dec
mov
cmc
insl
pop
xor
aas
js
stos
scas
sub
xor
sahf
mov
or
push
icebp
sub
jb
in
in
ds
stos
pop
iret
ficomps
ss
aas
inc
xor
jmp
lret
lock
push
push
bound
dec
ficomps
lahf
test
subb
arpl
adc
and
jae
in
jns
inc
inc
aaa
cmp
hlt
sub
xchg
ret
jecxz
xor
inc
xchg
test
sbb
fiaddl
dec
mov
and
pop
push
dec
cmpsl
es
call
or
lret
jg
mov
pop
push
daa
rcrl
mov
fwait
jb
cs
enter
mov
aam
ljmp
jmp
das
or
jo
insl
ss
test
jno
mov
andb
lods
or
cmp
loope
in
mov
in
repz
mov
cltd
sti
xchg
adc
into
fbstp
add
xlat
sub
test
iret
int3
sub
mov
xor
icebp
cwtl
scas
adc
mov
pop
out
orl
xchg
test
pop
pop
insb
mov
xchg
pop
xchg
test
xor
movsl
ja
repz
popa
iret
mov
sub
sub
inc
loop
test
jg
mov
mov
or
jle
fsubp
jmp
pop
test
add
addl
mov
insl
out
mov
adc
xchg
xor
in
push
outsl
or
sbb
sbb
inc
adc
cmp
stos
gs
xchg
mov
jns
mov
push
mov
jge
sbb
stc
cmpsl
fwait
test
pusha
pop
loop
sub
bound
cltd
push
sbb
loope
xchg
sub
xchg
addl
sbb
push
fs
cld
push
mov
inc
fs
mov
out
sbb
and
sbb
inc
fcoml
xor
mov
insl
mov
pop
dec
cli
cld
enter
movsb
jnp
mov
cld
aaa
mov
repnz
inc
in
out
inc
adc
dec
hlt
jb
jo
nop
xor
cmp
fisttps
push
inc
xor
pop
cmpl
negb
test
mov
jge
bound
imul
cmp
push
idivl
push
mov
popf
and
pop
stos
insl
push
mov
cmp
mov
and
push
rcll
mov
sub
and
add
das
sti
xchg
sbb
xor
hlt
xchg
sub
les
sahf
sub
inc
aas
bound
xchg
cmpl
mov
pop
mov
fstps
cmp
int3
jle
sbb
pop
lods
test
add
push
push
scas
data16
hlt
in
xor
scas
mov
test
push
push
les
or
pop
sbb
pop
pop
in
mov
or
add
pushf
sbb
ljmp
int
das
fucompp
sub
cld
sbb
lea
mov
sub
popf
xchg
daa
mov
cmpsl
jns
inc
sub
and
cwtl
shl
dec
cmp
xchg
pushl
push
cli
jo
movsb
xchg
dec
adcb
sti
aaa
xor
sbb
pop
int
outsl
mov
sub
sub
dec
ljmp
push
in
xchg
out
mov
lea
mov
movsl
das
xor
dec
dec
filds
fistpl
jne
push
lret
sbb
cmpsb
pop
into
push
js
rorl
inc
mov
inc
adc
or
xchg
or
ds
mov
int3
sbb
out
pop
xchg
repz
cmp
vrcpps
daa
stc
or
push
stc
mov
insb
mov
pushf
insl
pop
pop
scas
jo
jg
jp
and
push
add
fistpl
mov
mov
push
jb
test
out
jnp
fidivs
fdivr
xlat
pushf
inc
adc
mov
insl
cwtl
scas
in
stc
lods
sbb
in
jae
xchg
pop
inc
xor
add
pop
mov
insl
push
daa
movsb
or
add
xor
jae
mov
inc
sub
push
push
mov
jns
inc
cli
movsb
mov
lahf
xchg
sub
mov
stos
sub
scas
out
outsb
fstps
inc
xlat
xchg
mov
out
cmp
push
jo
mov
sbb
mov
or
xor
pop
divl
xor
jnp
xor
aas
add
xchg
pop
push
sbb
cld
aaa
push
jmp
fsts
pop
sub
and
mov
or
add
push
or
adc
dec
rolb
test
mov
mov
xchg
mov
sub
andl
pop
pushf
or
inc
enter
mov
adc
jns
sbb
pushf
testb
lea
fwait
xchg
inc
into
loop
push
xlat
sbb
and
sbb
cs
lea
push
hlt
mov
xor
sub
pop
out
rorl
sbb
out
lods
lds
inc
mov
xchg
mov
mov
or
or
shlb
movsb
imul
out
enter
inc
into
std
mov
es
gs
mov
xor
imul
aas
dec
fcomp
pop
add
movsl
dec
add
in
push
jge
xchg
pop
mov
xchg
push
or
ret
jo
pop
mov
pusha
add
pop
lcall
sub
fimuls
iret
mov
movsb
cmp
lret
inc
pop
add
or
push
dec
rolb
imul
adc
iret
inc
fwait
jmp
xchg
mov
push
adc
sub
je
aas
xchg
or
mov
addr16
insl
cmpsb
leave
sbb
mov
fcomp
in
movsb
sarl
push
mov
cli
lds
mov
push
mov
mov
mov
and
sub
mov
or
rorl
sub
dec
or
mov
lds
inc
dec
pop
in
mov
mov
add
mov
orl
aas
jl
sub
dec
mov
xor
imul
aam
mov
clc
jbe
cmp
push
mov
in
mov
jmp
test
adc
dec
fdivl
nop
push
jae
push
inc
test
iret
loop
sub
jmp
pop
fldt
rcll
enter
filds
dec
push
jbe
inc
xor
cs
inc
jb
jns
add
loop
jnp
imul
jne
pop
mov
insl
adc
cmp
and
orl
in
or
push
push
inc
jp
popf
sub
rclb
sahf
int3
mov
pop
cwtl
shrl
sbb
push
add
push
mov
rclb
xchg
cmp
mov
jp
or
scas
adc
ret
pop
jl
das
fstpl
orl
aad
adc
cmp
leave
test
loopne
add
clc
loopne
lods
rolb
cmpsb
cli
sbb
cs
les
and
cli
out
xlat
sub
sbb
adc
sahf
jno
pop
mov
fsubs
inc
in
dec
aam
out
ret
or
iret
mov
in
cmp
aam
mov
add
lods
cli
cli
mov
fsubrs
adc
mov
loop
aas
into
adc
inc
xchg
adc
sbb
fcos
push
mov
dec
mov
xorb
and
xorb
clc
mov
mov
jb
testl
into
mov
push
stos
imul
inc
orl
adcl
mov
mov
je
dec
cmp
lds
add
cwtl
aas
add
outsb
into
push
lea
cmp
lret
mov
inc
ret
adc
scas
repnz
sub
xlat
pop
fadds
push
push
idiv
cs
push
inc
fsts
pusha
not
mov
or
scas
push
mov
cmp
call
or
xor
hlt
push
scas
sbb
fsubl
aaa
insl
add
outsl
js
inc
imul
aas
inc
shrl
dec
es
jno
insl
jle
xor
jno
dec
inc
adc
fwait
popa
bound
adc
jae
or
repz
mov
inc
repz
outsb
pop
push
pop
loope
push
dec
push
push
sarb
and
push
ljmp
into
pusha
into
cli
sbb
movsb
addl
push
jecxz
cmp
sahf
loope
test
cmp
jl
push
jg
test
aam
ret
dec
mov
scas
sarb
in
cld
or
in
shlb
mov
outsl
pop
cmpb
jmp
sbb
mov
clc
mov
das
nop
rorl
cmpsb
adc
imul
std
push
and
enter
cmc
pop
jno
outsl
loop
jno
xchg
stos
add
subb
std
shl
movsl
and
sbb
jno
xor
adc
nop
xor
push
xchg
dec
inc
icebp
ljmp
adc
outsl
xchg
iret
lahf
ficompl
subb
rcrl
mov
jne
jg
rorl
out
jo
jns
std
sub
mov
sbb
rclb
mov
jbe
push
fisttpll
push
stc
mov
pop
ja
sbb
sti
push
mull
fsub
out
aaa
mov
inc
jmp
xrelease
stos
jecxz
jno
inc
imul
push
rol
pusha
adc
scas
sbbl
or
ss
pushf
xchg
push
mov
addr16
or
aam
xlat
mov
mov
jecxz
mov
dec
add
mov
divb
mov
cmc
xchg
xchg
pop
mov
pop
mov
insb
xlat
xorl
hlt
xchg
mov
fisubs
in
cmpsl
fldt
cmp
sub
inc
mov
add
ljmp
mov
and
mov
xchg
jbe
adc
subb
imulb
insb
jns
iret
fistps
add
xor
dec
fwait
dec
int3
in
xchg
inc
cmp
fcoms
or
dec
pop
mov
insb
ret
loope
sub
cmc
xor
fistl
testb
jle
inc
xor
rcrl
shrb
dec
and
xor
jg
std
adc
xor
add
fisubrs
push
xor
loop
scas
call
sbbb
in
and
mov
stos
mov
mov
int
testl
frstor
out
shrb
or
fildl
movsb
aam
imul
dec
pop
mov
cmp
push
outsb
inc
out
sbb
push
fwait
cltd
xchg
andl
idivl
sti
cmpsb
mov
jae
sub
ds
pusha
xor
scas
or
fldl
adc
xchg
fstps
and
dec
out
cwtl
cmc
mov
mov
cmp
divps
xchg
mov
aaa
xchg
xor
mov
fistpll
mov
mov
xchg
or
xlat
push
push
dec
sahf
mov
dec
scas
cmp
pop
sbb
inc
je
adc
cwtl
gs
sub
pop
test
mov
enter
or
cmp
jle
cmc
jecxz
and
movsl
cwtl
pop
psubd
outsl
jmp
imul
dec
repnz
out
mov
js
adc
sub
and
adc
cmp
call
hlt
pushf
mov
pop
xchg
pop
les
pop
pop
push
stos
dec
add
or
mov
mov
dec
push
dec
jo
cmpsl
das
push
jb
and
sub
repz
push
xlat
cld
dec
mov
lds
mov
mov
pop
pop
and
jp
xchg
fwait
sub
outsb
jno
push
mov
imul
fwait
cmp
push
test
dec
mov
or
add
iret
loopne
sub
mov
jecxz
xorb
or
pop
loop
roll
mov
sbb
inc
mov
bound
test
mov
push
pop
cmp
xor
sub
xchg
push
or
scas
imul
shrb
jae
sahf
nop
dec
push
mov
xor
push
aam
fwait
xor
ja
mov
mov
rcll
daa
cli
lret
mov
popa
sahf
scas
jmp
imul
xchg
xchg
push
test
adc
imul
rclb
add
ljmp
insl
jns
xor
and
lds
push
xchg
inc
and
jnp
mov
cmp
aad
mov
adc
inc
jmp
cmp
add
orl
mov
cmp
mov
dec
dec
sti
push
leave
mov
mov
xchg
mov
les
push
dec
inc
hlt
or
mov
aad
mov
adc
js
pop
push
adc
push
adc
leave
loope
xchg
cs
jno
popf
mov
and
loop
inc
lret
sarb
mov
xchg
pop
hlt
or
mov
outsl
cs
movsb
dec
and
imul
adc
cmp
sti
mov
pop
or
fidivl
data16
jg
inc
and
pop
repz
mov
stos
push
add
mov
push
nop
mov
jmp
insl
fs
imul
xlat
adcb
cmpsl
or
sbb
push
push
and
jge
dec
clc
negb
push
push
lret
pop
lods
daa
pop
mov
cli
jo
mov
pop
push
add
or
mov
aad
and
mov
fists
repz
imul
xchg
out
arpl
clc
call
jg
or
push
popa
cmp
jb
lds
sahf
pop
mov
or
sbb
inc
or
arpl
push
jo
jle
or
scas
mov
stos
loopne
in
popf
in
xchg
push
sbbl
pop
sub
pop
orl
adc
repnz
ljmp
xchg
inc
popa
punpckhwd
call
and
xor
pop
aas
sub
decl
out
sub
leave
loopne
inc
sub
jp
shlb
aad
jne
lea
icebp
leave
add
xorl
rcrl
and
xorl
mov
mov
jmp
inc
dec
sti
lahf
jne
pop
push
cmpsb
loop
or
dec
std
sbb
mov
dec
mov
jecxz
xor
hlt
jns
mov
ficompl
imul
cwtl
push
out
pop
mov
rolb
sbb
movsb
das
jg
inc
xchg
sbb
std
or
cltd
movsl
in
mov
repz
and
repnz
rorb
jmp
fwait
aam
in
pop
ja
jge
movsb
rcr
pop
xchg
mov
dec
daa
int
repnz
leave
das
dec
push
mul
scas
mov
xor
mov
leave
shll
roll
sbbb
aas
jns
and
push
xchg
cmp
jge
jge
jne
cltd
ds
jbe
push
imul
jmp
xchg
add
shll
mov
mov
mov
int3
fwait
dec
mov
fimull
addr16
cmpl
in
jo
jno
or
pop
pop
mov
dec
xchg
push
cltd
and
jmp
movsb
fwait
xor
jb
adc
add
out
sbb
inc
cmp
out
sub
xor
test
ja
loopne
lret
repnz
xor
je
cmp
adc
adc
loope
jb
movsl
sub
bound
loope
stos
dec
stos
or
add
lods
dec
lahf
add
dec
jb
push
adc
std
push
pop
lea
or
sub
jecxz
scas
push
mov
ret
push
sbb
mov
aad
xlat
sub
mov
lods
cltd
mov
insl
sub
push
xchg
mov
or
shlb
mov
mov
jp
daa
push
push
cmpsb
aad
and
in
jno
push
sbb
popf
ss
push
imul
ud2
push
ja
repnz
jbe
sti
mov
fisubs
in
mov
enter
cmc
cmpl
imul
adc
jae
roll
and
and
push
mov
inc
insl
roll
mov
inc
pusha
sub
sbb
jl
in
jbe
and
insb
fbstp
les
dec
aaa
loope
sub
cli
or
ds
fimull
or
test
or
add
mov
mov
ljmp
mov
push
dec
add
xchg
jmp
push
test
mov
pop
push
or
xchg
in
aam
adc
jl
and
cmp
mov
and
fadds
rol
ljmpw
lods
cmpsb
and
cs
mov
or
inc
out
jl
aad
fidivrs
int3
inc
mov
lods
popa
push
shrl
jle
pop
loopne
sahf
fmuls
push
data16
rorb
mov
call
das
lret
divb
add
inc
loopne
ljmp
push
pop
xchg
jbe
lods
xor
unpcklps
xchg
stos
sbb
lcall
das
pop
in
xchg
and
mov
mov
inc
push
push
lret
jp
nop
mov
daa
push
movsb
add
xchg
cmp
and
in
xchg
stc
push
jecxz
cmp
mov
sub
clc
cmc
sbb
and
leave
movsb
dec
cmc
sbb
rorl
popf
shrl
and
sahf
push
subl
mov
xchg
add
sbb
mov
pop
mov
mov
shrl
enter
mov
por
ds
jae
mov
stc
jmp
jbe
mov
inc
mov
mov
cltd
das
imul
dec
sub
aaa
cwtl
sbb
mov
inc
jnp
xor
icebp
not
cmpsl
lock
xchg
gs
adc
adc
cmp
push
cmp
and
sbb
in
outsl
mov
iret
pop
aam
pop
pushf
leave
xchg
in
jg
gs
out
pop
stc
xchg
or
push
outsb
ja
mov
mov
mov
lahf
jbe
xchg
fimull
outsb
add
movsb
jbe
adc
mov
sbb
test
mov
adcl
sti
dec
mov
mov
jae
addb
adc
icebp
pop
inc
arpl
jae
enter
call
mov
adc
fstl
or
movb
ss
adc
jo
cmp
movsb
lahf
sbb
cmpsl
pop
jbe
inc
cmpsb
jnp
dec
icebp
addr16
lret
cltd
mov
pop
adc
and
mov
jb
jb
sbb
and
fstl
cmpsl
cmc
xchg
shlb
ret
jae
adc
aas
orl
jle
jp
adc
mov
sbb
dec
repnz
lcall
js
outsb
mov
or
loope
lods
ss
pop
or
jecxz
mov
bound
mov
fiaddl
jp
sub
add
lcall
xchg
adc
in
adc
jle
ljmp
mov
hlt
add
push
jae
lods
pop
insb
lock
jnp
push
aaa
or
in
imul
push
imulb
rolb
lret
dec
xchg
addr16
stos
or
add
push
loope
mov
inc
push
ret
mov
xchg
repnz
pushl
repnz
loop
pop
jae
inc
jmp
mov
cs
paddsw
push
push
xchg
push
cmpsb
repz
xor
call
das
dec
jl
test
lods
add
js
pop
pop
inc
cmp
push
jns
fmull
dec
jo
je
add
pop
sub
decb
inc
add
add
ja
loope
sbb
inc
dec
jnp
mov
sbb
lea
mov
and
sub
cmp
dec
push
inc
icebp
rorl
add
subl
call
mov
add
icebp
adc
pop
loope
xchg
push
popf
push
push
or
xchg
cltd
loope
sahf
lock
dec
pop
scas
mov
mov
push
cmpsb
jb
movsl
popa
movsl
push
mov
pop
repz
in
inc
fisttpll
push
jl
sbb
sbb
ss
and
test
xchg
out
loopne
jmp
loop
subl
jp
mov
in
jle
gs
cmpsb
and
out
mov
xchg
mov
sar
push
jo
aad
outsb
nop
mov
mov
iret
popa
adc
push
push
pop
push
mov
jns
enter
and
push
mov
fchs
mov
out
jae
dec
push
push
mov
fcomps
js
mov
mov
pusha
fistpll
fstp
or
inc
sti
sbb
add
jg
mov
mov
and
adc
jl
clc
pop
repz
xchg
xor
test
into
xchg
aam
push
adc
int
stos
push
bound
jnp
inc
mov
mov
aad
push
fsts
pusha
into
cmpsb
fnstenv
lahf
sbb
roll
mov
popa
repz
cmpsb
nop
pop
fisubs
mov
mov
jb
or
in
mov
imul
mov
test
cmp
ret
push
jae
push
add
divb
mov
xor
test
pushf
ror
push
jl
pop
sub
jp
jge
mov
pop
mov
movsb
xor
clc
mov
mov
cmp
xchg
je
pop
rcrb
aad
leave
leave
and
enter
out
sbbb
sbbl
mov
sbb
push
mov
orb
push
cltd
dec
mov
dec
lret
in
pushf
adc
ret
jbe
or
xor
inc
lds
mov
add
mull
jmp
ljmp
in
jle
mov
xchg
mov
test
and
cmpsl
cmp
jnp
cmp
mov
insl
dec
pop
out
inc
mov
sbb
or
sbb
aam
jno
repz
rorl
xor
pop
jmp
pop
jb
mov
pop
and
lock
push
jecxz
fimull
movsb
inc
orb
adc
dec
insb
mov
mov
cmp
sbb
testl
in
enter
push
jae
pop
cmp
pusha
mov
cltd
jg
aam
pop
push
nop
xrelease
subb
mov
mov
mov
int3
and
adc
scas
cmp
or
js
lahf
pop
adc
sub
jge
push
mov
in
sbb
pop
sub
dec
inc
adc
jp
mov
scas
fmulp
jne
aam
pop
xor
push
in
ficompl
lahf
cmp
jns
sbb
adc
std
inc
imull
sbb
add
mov
jmp
cltd
xchg
mov
in
mov
sub
pop
mov
xchg
mov
imul
ja
cs
mov
push
enter
adc
fs
dec
inc
aas
jne
sarb
test
xor
int
add
push
in
xchg
sbb
repnz
mov
mov
cwtl
cltd
adc
xchg
inc
dec
mov
mov
adc
sbb
xor
cli
adc
and
popf
mov
adc
push
xchg
jns
mov
aas
xorl
lcall
pop
xlat
ljmp
xor
xor
inc
jbe
scas
xchg
inc
stos
pop
stos
cli
test
sbb
sbb
in
and
out
pop
or
sbb
fcompl
jmp
mov
cld
cwtl
or
mov
ficoml
cmc
pop
and
adc
daa
out
int
les
pusha
jg
xor
or
mov
test
xlat
dec
push
jb
loop
adc
mov
jne
das
jp
mov
int
inc
pop
scas
gs
in
cmp
sbb
jno
outsl
ret
clc
mov
stos
shl
fildll
ds
nop
fnsave
test
xchg
enter
frstor
pop
push
push
push
mov
test
pop
leave
pop
and
or
add
xor
cmp
lods
sub
add
stc
rcr
mov
scas
xchg
adc
in
and
sbb
shrl
push
dec
lret
aam
cmp
adc
mov
mov
movsb
bound
xchg
sbb
xchg
hlt
fucomi
jns
xlat
sub
xchg
fistpl
pop
pop
sub
jp
movsl
faddp
xchg
pop
getsec
cli
sub
sub
or
and
sbb
call
int
mov
xchg
mov
sub
repnz
xor
jecxz
test
jns
or
pop
jae
imul
adc
int
popf
sub
cmp
fcomip
inc
test
sub
in
cwtl
leave
pop
mov
adc
test
push
xchg
pop
fwait
idivb
cwtl
repnz
shrb
mov
out
xchg
mov
test
fisttps
dec
sbb
push
notb
dec
arpl
movsl
mov
xor
leave
mov
outsl
les
or
mov
jg
pop
cmp
mov
mov
test
cmp
mov
xchg
fst
dec
mov
add
lock
jb
popf
mov
xlat
mov
dec
xor
push
sbb
mov
mov
fsub
in
daa
and
in
ret
repnz
sub
xchg
sti
lcall
cmp
in
mov
int3
cmp
ss
es
mov
adc
repz
lcall
scas
int3
bound
es
cmpsl
mov
lahf
sub
sub
xchg
mov
lret
daa
adcb
adc
dec
mov
fucom
dec
xchg
push
xchg
test
and
or
scas
inc
aad
loop
or
push
fimull
add
mov
mov
insl
inc
rorb
xor
adc
jle
push
loope
push
add
mov
fildl
mov
sahf
adc
test
frstor
pop
in
xchg
sub
or
mov
xor
push
adc
cmp
shl
jl
lods
cwtl
add
aad
lret
cmp
mov
fstps
pop
inc
ds
jmp
xchg
xlat
loopne
adc
loope
push
dec
mov
mov
enter
cmp
jecxz
or
jge
les
shlb
mov
stos
jg
mov
les
pop
inc
and
in
add
imul
add
pop
jb
cmp
sahf
push
mov
sbb
xchg
and
sbb
das
jmp
ss
clc
fisttps
dec
push
shrl
cli
xor
adc
repnz
das
ss
inc
jecxz
loop
cmpsb
orl
arpl
xchg
and
pop
sub
das
icebp
adc
rcr
xor
call
mov
pop
stos
enter
dec
cmp
cmc
add
loopne
test
mov
rcr
mov
sti
fcoml
pushf
loop
cmpsb
loope
test
cmp
stos
sarb
addr16
cld
punpckhbw
mov
outsb
push
fcompl
sbb
jnp
mov
in
sub
pop
or
in
pop
xchg
mov
lahf
incl
inc
iret
push
ret
fcoms
inc
mov
clc
les
mov
push
pop
mov
push
push
dec
outsl
fwait
dec
add
leave
or
lcall
fiadds
lret
jb
mov
ja
dec
or
or
insb
fsubl
fisubl
dec
ret
sub
aaa
and
loope
add
ret
xor
push
push
adc
repnz
mov
jmp
aaa
inc
cmp
cld
sub
fstl
jl
fisubs
pop
pop
jle
test
inc
mov
inc
xchg
or
inc
push
insb
int
xchg
cmp
jle
xlat
popa
mov
sub
in
aad
outsl
sbb
int
ss
loop
rclb
push
ret
repnz
or
pop
xchg
xchg
pop
sarl
call
das
dec
addr16
cmp
mov
mov
subl
arpl
xorl
jle
stos
mov
mov
adc
sbb
insl
jae
cmpsl
jno
fldcw
and
inc
push
mov
cmp
mov
mov
mov
sub
icebp
sbb
test
insb
inc
out
jge
and
enter
pop
mov
jno
mov
or
mov
shlb
scas
jne
jae
out
lods
push
xchg
test
cli
push
mov
sub
out
xor
iret
mov
add
cld
xchg
sbb
pop
pop
xor
pop
shrl
mov
hlt
mov
push
cwtl
setb
rolb
jno
push
jno
fists
add
pop
mov
aam
inc
lret
fstpl
or
push
imul
push
mov
sbb
das
dec
stos
xchg
ret
insl
repnz
fdivp
sbb
mov
sti
cwtl
xor
mov
insb
mov
fists
movsb
mov
loope
mov
outsl
repnz
push
subb
pop
jo
pop
cld
push
cmc
adc
jae
xchg
loop,pn
out
adc
jo
jns
mov
jne
pop
shrl
movsl
test
jl
ja
inc
mov
movsb
mov
push
das
mov
div
inc
repz
xor
and
xchg
cmp
push
sar
icebp
aaa
xchg
jno
or
pusha
orl
push
jb
je
mov
pop
inc
cmc
in
push
pop
or
mov
frstor
sbb
movsl
outsb
cld
mov
mov
sub
arpl
insl
sbb
dec
out
mov
cmp
xor
cmp
jbe
mov
loope
ret
fimuls
repnz
push
orl
inc
dec
popf
mov
insb
aas
lret
sub
mov
sbb
addb
push
add
mov
xchg
js
in
imul
push
test
mov
aad
mov
outsl
fimuls
movsb
div
popa
and
outsb
add
clc
popf
outsb
ss
jmp
shl
inc
movsb
cltd
jno
out
stos
mov
inc
popa
out
push
xor
sahf
das
xor
push
dec
cltd
movzwl
ds
out
or
add
or
std
imul
sbb
sbbb
fldcw
mov
sbb
pop
or
push
xor
mov
fucomi
dec
out
repnz
pop
lea
push
mov
cmp
mov
xor
sar
pop
shl
xchg
imull
or
incl
inc
sbb
adc
out
aad
aad
pop
push
add
test
fdivs
int
lcall
jmp
lahf
sbb
cmp
cmp
fwait
loop
xor
mov
scas
xchg
jno
sbb
scas
scas
sbb
or
nop
jno
xchg
inc
xor
jmp
sub
cmc
or
cmp
arpl
cmp
sbb
dec
movsl
mov
popf
lret
imul
aas
mov
and
int
es
inc
mov
roll
dec
lcall
mov
lret
scas
pop
or
and
cmpsl
xchg
jmp
das
jmp
int3
pop
mov
cmp
and
pop
cmp
in
lods
roll
xor
cmpsb
je
loopne
mov
pop
popa
mov
sub
xor
add
test
lret
jb
das
ret
shlb
cmp
sbb
sbb
push
out
pop
xchg
cmp
xchg
stc
scas
repz
lret
in
jge
leave
xlat
orl
movsl
inc
ret
push
push
cmp
hlt
inc
pop
ja
xor
addl
xchg
xorl
sbb
in
xor
or
jge
inc
jle
mov
lds
mov
xchg
xchg
sub
mov
lret
cli
jp
mov
mov
fs
aam
sahf
jo
mov
f2xm1
inc
add
cld
xor
pop
jge
jg
test
in
push
or
rcl
addb
mov
cli
sub
lock
leave
sbb
ljmp
mov
imul
test
mov
fisubrl
or
mov
or
pop
sub
lods
iret
popa
mov
movsl
scas
lret
mov
mov
aad
or
mov
sub
cmp
sbb
mov
inc
mov
push
rdmsr
and
inc
xchg
hlt
or
orl
push
mov
js
push
jae,pn
gs
mov
lds
mov
xchg
aaa
fsubrs
mov
jmp
outsl
fsubs
sub
popa
mov
clc
add
or
test
mov
mov
adcl
fsubs
mov
jno
and
and
insb
stos
ss
or
cltd
cmp
jae
sbb
repnz
jle
sbb
mov
into
repz
jl
in
push
hlt
stos
mov
aam
mov
pop
into
leave
xorl
adc
leave
popa
push
das
fwait
mov
mov
jecxz
pop
mov
inc
out
fxch
push
aaa
fsts
mov
cmpl
push
enter
sbb
les
nop
repnz
sbb
test
cli
sub
push
and
pop
mov
or
xchg
orb
das
sub
lods
mov
adcl
or
inc
lahf
cli
mov
mov
push
enter
inc
fisubs
ret
inc
jb
xchg
mov
xor
jecxz
adc
loopne
adc
jge
and
lret
sarl
out
ret
hlt
xchg
xchg
dec
das
mov
mov
xlat
out
orl
idivb
sub
push
mov
sti
cwtl
dec
inc
cwtl
push
mov
jecxz
inc
rolb
mov
xlat
insl
xchg
push
pop
fidivs
shrb
adc
out
popa
stos
movsl
sub
je
fs
jbe
call
xor
xchg
in
cmp
lret
test
stos
in
add
cmp
push
movsl
or
inc
mov
adc
push
aas
xchg
or
addr16
movsl
in
les
inc
sub
dec
gs
in
push
or
aam
adc
in
pop
fcomip
lods
loope
loop
decl
inc
test
jbe
jle
mul
stos
loopne
jge
out
lahf
pop
sub
jge
jmp
leave
je
and
mov
mov
jmp
subl
popf
inc
enter
adc
xor
sub
cmpsb
stos
fs
and
push
lcall
shll
jecxz
push
sbb
push
inc
repnz
int3
mov
jbe
lock
imul
pop
test
mov
inc
and
es
outsb
minps
jns
mov
cmp
clc
cmp
stos
das
lods
mov
ret
mov
testl
jl
add
cmp
jg
in
mov
in
mov
xlat
ds
outsb
jns
push
pop
mov
lock
in
out
in
fistps
mov
cmp
mov
aam
cmp
lret
lods
and
sbb
clc
adc
dec
inc
aad
ror
shlb
lods
orb
repnz
cs
xor
lahf
addb
mov
pusha
sbb
jle
es
incb
sub
shll
push
inc
fldt
xchg
dec
rol
popa
jg
mov
dec
dec
out
pop
and
fisttpl
inc
xor
arpl
int
xchg
adc
push
adc
push
ficoms
test
ds
addr16
adc
btc
insb
cli
pop
push
cmp
call
in
arpl
or
iret
inc
pop
sbbb
inc
nop
shll
mov
pop
int
inc
mov
adc
rol
mov
cmpsb
pop
xchg
mov
jns
pop
sbb
in
jno
stos
repz
lea
outsb
shlb
sbb
mov
clc
and
es
push
add
inc
push
out
movsl
jg
sub
add
pop
jae
fmull
in
stos
sbb
mull
ret
lret
xor
int3
xchg
pop
push
inc
sahf
out
popa
add
popl
sti
fiadds
sub
inc
mov
fwait
or
mov
jl
mov
shll
jbe
out
sub
and
ds
dec
jp
roll
clc
in
xchg
inc
ljmp
xlat
push
test
mov
xchg
repnz
daa
iret
push
xor
dec
jg
dec
add
mov
test
addr16
or
loop
xor
ds
out
xchg
mov
cmc
mov
mov
shl
movsb
jo
fildl
push
popf
fiaddl
subl
or
mov
aam
test
mov
fsts
pop
jp
mov
and
adc
cmp
xchg
dec
or
push
out
nop
mov
lcall
mov
inc
lock
xor
lcall
pusha
arpl
ja
mov
cmp
call
sub
cltd
push
cli
enter
mov
daa
mov
dec
ss
cmpsl
mov
daa
popa
xchg
jmp
pushf
sbb
ffreep
loopne
movsb
imul
call
mov
roll
inc
inc
out
sbb
sbb
dec
lahf
push
fisubl
push
mov
int
and
xor
sub
addr16
mov
dec
push
mov
outsl
mov
add
mov
test
pop
dec
or
nop
fwait
add
adc
das
sub
pop
lcallw
pop
cmp
inc
sub
cmc
ret
inc
cwtl
push
mov
xor
aas
das
sbb
push
mov
mov
and
sbb
and
jge
and
outsl
sub
jns
test
imul
mov
sbb
xchg
pusha
movsb
mov
mov
pusha
enter
ja
jo
outsb
xor
add
movsb
test
and
mov
out
push
adc
sti
dec
test
shr
stos
inc
repz
mov
enter
and
dec
push
loope
in
je
mov
inc
ja
out
sarl
inc
cltd
in
cwtl
add
add
inc
push
stc
outsb
fildl
lahf
sub
sub
mov
cmp
fildll
or
dec
sub
data16
cld
mov
mov
into
and
ja
test
adc
ja
out
sahf
sbb
test
push
dec
iret
pop
inc
jae
arpl
andb
push
ds
hlt
sbb
out
sahf
das
rorb
scas
pop
push
ja
inc
ja
pop
ja
movsl
xor
pushf
push
push
xchg
in
pop
dec
pop
lock
cmp
cli
sbb
push
orl
jp
xchg
adc
test
inc
and
hlt
push
jp
pop
mov
inc
aas
push
sbb
lahf
les
dec
aad
mov
jl
daa
aad
or
inc
mov
sbb
lret
fwait
ljmp
mov
scas
inc
mov
icebp
add
push
cmp
lcall
shlb
out
loope
pop
imul
shlb
mov
rol
shr
movsl
pop
mov
jno
dec
push
fmuls
and
pop
dec
scas
and
je
ja
int
in
cmc
inc
repnz
push
leave
add
fxtract
lock
cmp
sbbb
or
sti
fildll
aas
jmp
sbb
and
cltd
imul
call
pop
repnz
pop
xchg
lahf
mov
out
pop
out
ret
inc
pop
xchg
jg
dec
sbb
cmp
mov
aas
jnp
lret
lock
add
sub
and
cld
mov
xor
mov
adc
fists
adc
mov
push
mov
notl
sub
xor
dec
loopne
mov
in
pop
mov
xchg
rdmsr
push
pop
adc
mov
sbb
imul
or
testb
and
adc
mov
out
push
int3
ljmp
fxtract
ret
push
aas
fwait
sbb
lods
imul
cmc
and
dec
mov
sbb
fsub
xor
adc
fisttps
shl
inc
stos
ss
mov
stos
faddp
cmp
mov
scas
out
push
pop
in
shr
jnp
xor
nop
sbb
daa
cwtl
xor
imul
sub
mov
adc
jno
out
in
ret
adc
xor
ret
jnp
insl
stos
and
mov
fisubrl
sti
in
inc
mov
lret
loop
jo
mov
aaa
mov
sahf
enter
mov
lea
jecxz
lods
mov
push
stos
sbb
outsb
lods
pop
jno
inc
lret
stos
and
mov
mov
fisubrl
add
test
mov
lds
cwtl
lret
inc
and
jmp
repz
add
fmull
ret
das
sti
sar
loop
dec
test
cmp
mov
mov
bound
dec
mov
push
pop
fcomps
xor
inc
add
out
mov
and
push
je
mov
push
inc
push
sbb
lds
nop
cmp
and
mov
xchg
cmc
pop
adc
js
mov
pop
mov
xchg
adc
inc
dec
stos
jmp
hlt
imul
cltd
pop
mov
outsb
pop
adc
and
dec
mov
cld
aas
addb
add
pop
mov
and
dec
push
les
dec
aad
mov
xchg
cld
push
in
shll
mov
addr16
jge
push
mov
add
mov
hlt
gs
inc
sbb
adc
mov
and
fnstsw
test
arpl
into
cmpsl
sahf
push
add
xchg
les
xor
in
ljmp
ret
aaa
jge
fsubs
inc
push
fstpt
das
xchg
jbe
or
js
fwait
inc
je
int3
xor
jbe
pop
dec
insl
cmc
cs
nop
ds
mov
sahf
xor
lret
add
push
push
mov
and
push
mov
lods
out
lret
ret
ret
cmp
add
insw
aad
shll
cmp
or
push
fwait
mov
dec
inc
or
lret
jecxz
out
cwtl
ror
mov
imul
fldt
add
or
add
sbbl
inc
sbb
outsl
mov
lds
mov
lahf
hlt
jp
addr16
int
std
inc
xorb
out
jo
bound
cmc
out
andb
or
je
pop
hlt
sub
iret
fisttpl
inc
leave
add
mov
pop
jbe
inc
xchg
push
jg
push
icebp
cli
jb
push
xchg
insb
mov
cwtl
nop
inc
fcoml
sahf
fnstenv
shl
xor
push
loope
push
pop
pop
xchg
imul
cmp
push
leave
ss
mov
dec
jg
out
mov
mov
adc
adc
in
das
jg
xchg
jae
xchg
inc
xchg
inc
inc
les
and
push
push
cmp
mov
mov
sti
dec
das
xlat
jnp
pop
aam
leave
jg
add
sar
hlt
loope
dec
in
push
jg
add
loopne
sarl
dec
std
or
push
mov
inc
push
addb
xchg
fstps
scas
or
sub
lahf
call
loope
mov
push
and
cli
shrb
or
cmpsb
arpl
dec
addl
ja
mov
mov
fimuls
jb
lods
cmp
and
jge
out
adc
inc
or
scas
or
int3
pop
mov
mov
mov
xor
xor
lea
adc
mov
mov
mov
sub
xor
push
mov
imul
into
sbb
xchg
ret
and
sub
clc
push
push
mov
rcrb
aaa
into
arpl
mov
sub
insb
add
out
sahf
xlat
fisubs
into
xchg
bound
inc
dec
adc
hlt
orb
cli
mov
in
pop
sub
xor
dec
psllw
cmc
and
mov
mov
xchg
xchg
dec
mov
ficomps
cmpsb
and
je
sarb
fst
in
icebp
js
cmp
mov
test
cld
jbe
push
fsubp
imul
push
push
cwtl
cmpb
outsb
movsl
mov
testl
jns
fimull
fisubl
loope
lds
mov
xchg
std
popa
aas
mov
add
jno
addr16
sbb
inc
sub
cmc
jb
aad
xchg
jge
fisubrl
cwtl
xor
jns
loopne
xor
xor
mov
jge
dec
add
dec
js
into
add
sbb
jo
mov
mov
add
pop
push
rol
push
pop
test
ret
aad
repz
mov
outsb
icebp
clc
mov
sbb
or
pop
icebp
adc
andb
xlat
mov
cmp
adc
iret
jno
or
out
mov
ja
lahf
mov
pop
adc
imul
sbb
daa
popa
adc
ds
xchg
loope
mov
popf
pop
in
xchg
fcomi
push
jo
pop
cmpsb
adc
inc
inc
sub
in
test
dec
xchg
rcll
pop
cmp
mov
or
test
push
mov
sbb
lods
iret
fdivrl
cmp
ret
mov
enter
ret
jg
mov
sbb
jbe
enter
and
sbb
inc
shlb
inc
lret
mov
push
or
out
lods
jp
xchg
xchg
xor
lcall
xor
and
jnp
movsb
scas
push
xlat
push
sub
dec
cmp
pop
push
leave
jne
push
pop
pop
call
repz
push
push
in
jle
mov
and
cmpsl
into
cmp
or
int
in
push
lods
push
jl
or
in
push
jl
and
out
push
mov
std
inc
scas
sbb
or
lahf
pusha
adc
ja
ljmp
aam
mov
in
dec
adc
adc
cmp
dec
mov
std
pop
mov
add
sub
out
cld
xor
jb
mov
push
cmp
jmp
lds
dec
mov
inc
push
dec
and
out
call
mov
sub
cli
sti
pop
sub
loope
in
mov
in
lret
adc
xor
jmp
xor
mov
pop
push
fmulp
xchg
pop
loop
lret
scas
adc
call
xor
xchg
popa
cmp
or
mov
scas
pop
mov
or
jl
and
scas
xchg
jecxz
sub
and
push
aam
sbbb
loope
daa
push
sbb
mov
lret
mov
push
pop
jnp
faddp
adc
mov
mov
dec
adc
add
push
out
dec
cmc
push
mov
mov
or
stos
aam
pop
shlb
pop
xchg
or
pop
or
test
xor
imul
xchg
lahf
fisttpl
arpl
rcrb
enter
dec
shll
bound
mov
les
mov
jp
mov
fsubrs
push
mov
cmpsl
mov
xchg
push
inc
lods
jno
ret
and
mov
daa
cmp
cmp
cmp
push
cmp
add
jl
ret
or
inc
pop
test
jge
lds
jge,pn
in
dec
jecxz
mov
roll
push
mov
rcrl
lods
add
push
dec
push
int
out
cmc
adcb
add
enter
outsb
out
jnp
cmp
or
inc
ss
movsb
test
aam
mov
dec
mov
jle
add
cmp
push
adc
mov
in
ret
lods
mov
cmc
lret
adc
dec
push
jl
jecxz
popa
ja
or
pop
and
lea
loopne
adc
aad
divl
outsl
adc
xchg
cmc
in
jmp
push
ss
dec
jbe
jl
mov
rcr
lret
inc
in
ficoml
mov
vcmpss
lea
jb
xchg
mov
das
les
int3
das
mov
jb
ds
fisttpl
gs
lret
lods
popf
xchg
adc
mov
push
mov
stc
mov
pusha
push
sbb
sahf
cltd
jp
icebp
or
fsub
inc
add
or
sbb
popf
iret
jp
neg
sub
jo
mov
test
loop
xchg
inc
pusha
jne
jle
icebp
and
xor
fs
test
pop
cld
cmc
pusha
pop
fs
xor
push
popa
pop
sti
jns
fdiv
mov
pusha
sbb
or
or
scas
data16
mov
ret
stos
xor
lret
mov
sub
and
cmpl
aad
cmp
sbb
cltd
inc
ds
pop
mov
je
dec
fcomps
mov
mov
andnps
bound
lds
daa
jnp
nop
test
pusha
inc
mov
mov
sbb
inc
int
dec
adc
idivb
sbb
add
xchg
dec
or
test
cmpsb
add
movsl
ret
lods
adc
xor
jb
lret
inc
xchg
insb
lcall
divl
jmp
jb
xchg
and
jge
rcl
out
sub
loope
and
jne
shrb
sbb
xchg
sbb
xchg
xlat
inc
gs
cwtl
popf
mov
dec
test
and
pop
adc
hlt
dec
pop
xor
mov
pop
cmc
add
out
pop
sbb
sbb
or
das
hlt
mov
dec
mov
add
mov
sub
fdivrs
js
dec
mov
sbb
push
mov
lahf
xor
add
or
sar
add
cltd
stos
pusha
lret
setne
testb
cmp
sbb
or
cmp
outsb
pop
adc
cli
adc
stos
jl
in
sahf
call
ja
pop
mov
mov
mov
mov
fsubs
pop
imul
xchg
mov
xor
mov
fildl
jmp
leave
int
fs
stc
mov
movsl
jl
test
icebp
or
gs
sbb
jl
cld
jbe
and
jo
adc
imull
jg
mov
cmpsb
int3
mov
pushf
and
push
xor
push
sub
and
stos
or
add
stos
loopne
push
arpl
in
and
mov
add
pop
jbe
int
hlt
lea
lea
js
lret
fmull
fcomi
add
stos
add
pop
out
cmp
test
mov
mov
push
mov
cmp
jae
mov
ljmp
arpl
shrb
mov
lcall
cwtl
fisttpl
adc
jmp
or
fnstcw
inc
imul
or
mov
xchg
pavgw
fs
movsl
and
outsl
adc
js
rcrb
sub
or
pushl
pop
push
cmp
xor
mov
or
inc
aad
call
add
fisubrl
sahf
xchg
daa
rorb
inc
mov
imul
adc
mov
lret
and
in
jge
dec
cmpsl
insb
imul
pop
adc
mov
rcl
inc
pop
inc
imul
test
pusha
icebp
mov
adc
sub
push
sarb
adc
pop
inc
imul
insb
lods
cmp
popl
jns
repnz
adc
mov
jmp
sub
and
adc
jg
jmp
adc
fnsave
jne
cmp
lret
push
inc
test
insb
mov
aas
sub
pop
push
int3
or
sahf
in
notb
push
sub
fs
dec
ror
fstl
jmp
xor
ds
inc
sahf
mov
jl
pop
les
fstps
sub
dec
pop
pop
hlt
mov
lods
and
mov
fwait
adc
and
ret
sbb
sbb
dec
loope
jmp
cltd
and
jne
outsl
or
jbe
dec
mov
sbb
idivb
test
fimuls
push
sub
outsl
cmp
lahf
inc
insb
xor
jecxz
jg
dec
shl
adc
cmp
test
adc
jmp
sbb
xchg
lods
cli
lcall
jle
cs
scas
in
outsl
ret
cmpl
iret
pop
sahf
jnp
xchg
jmp
or
ds
sti
pop
add
les
aas
lea
and
dec
div
sbb
mov
push
jno
icebp
mov
or
and
mov
jno
ror
fdivrl
cmp
stos
jnp
lods
js
ficoms
stos
inc
psubusb
aaa
and
dec
xor
mov
xor
mov
dec
sub
adc
iret
xchg
mov
add
pop
mov
lds
or
aaa
fisubs
out
inc
jp
ret
push
cmpl
mov
mov
mov
aad
loope
xor
shll
add
mov
movsb
mov
mov
sub
cmp
mov
mov
jnp
adc
in
cmp
jg
data16
jge
cs
cmpl
sub
addr16
sub
fcoml
sbb
idiv
cmp
in
repnz
lret
inc
cmp
icebp
pop
fisttpll
xchg
xchg
sub
and
outsb
pop
fdivl
push
iret
pop
xchg
mov
and
pop
call
cltd
and
icebp
xor
scas
jo
push
or
and
test
js
add
ss
xor
jmp
mov
mov
in
jne
aas
push
or
pusha
test
aas
sbb
xchg
fisubrl
jnp
dec
xor
mov
mov
or
jb
repz
movsl
fwait
int3
mov
push
lods
pop
stc
cltd
loopne
inc
sbb
or
ret
fmull
outsl
mov
xor
popa
inc
scas
pop
mov
cmp
push
mov
cmp
mov
mov
iret
aad
sub
mov
scas
add
rcrb
movsl
mull
dec
aad
or
int3
cmp
test
sub
int
scas
cmp
fisttpl
and
stos
or
shrl
fwait
mov
fmulp
movsb
cmp
addr16
mov
imul
cmp
inc
cli
push
inc
inc
sbb
and
xchg
mov
inc
aas
and
loopne
lcall
pop
push
cmp
xchg
xor
xchg
push
lods
cmp
mov
sahf
push
sbb
fs
test
push
push
pop
loopne
xchg
sarb
sub
iret
ret
xlat
adc
push
jnp
push
outsb
cmp
fistl
sbb
mov
mov
imul
pop
shrl
inc
xor
pop
pushf
inc
mov
mov
adc
xchg
int
sti
push
pop
add
mov
push
mov
sbb
std
push
mov
adc
jb
clc
mov
iret
lret
fs
or
sti
jno
nop
stc
add
lahf
jb
enter
sbb
inc
fistps
push
imul
xor
adc
imul
mov
and
adc
rcll
sbb
fcmovb
push
sahf
push
shll
push
xchg
push
dec
pop
jae
xchg
push
adc
mov
loop
lcall
aad
dec
push
mov
stos
fnclex
xor
mov
push
cld
cmp
out
xor
imul
pop
lds
lret
push
lret
push
test
shll
xor
imul
pop
test
xchg
jae
loop
imul
test
jae
sbb
subb
or
sbb
test
or
pushf
xlat
jnp
or
divb
mov
cwtl
gs
leave
xor
and
xor
in
movsl
adc
mov
popa
or
lods
xor
pop
test
pop
jmp
in
pop
jno
push
and
mov
fsubp
lret
cwtl
arpl
push
mov
push
or
aas
dec
mov
repnz
jle
sbbb
inc
sub
in
dec
out
ds
maskmovq
aad
dec
loop
hlt
jl
push
fstpt
arpl
int
sub
mov
xchg
mov
pop
pop
mov
lods
les
or
arpl
xchg
lock
mov
sbb
sub
clc
iret
push
and
mov
xor
fmuls
negb
out
cmp
mov
mov
sar
outsl
mov
pusha
outsl
in
mov
nop
cmpsb
aas
stos
leave
and
inc
sahf
cmpsb
xlat
pop
pop
lret
sub
xchg
imul
xchg
add
pop
and
lock
inc
daa
push
jo
les
cmp
add
push
jge
repz
sub
jmp
popf
icebp
fwait
and
in
adc
adc
sbb
jae
and
push
mov
mov
add
rolb
inc
cwtl
add
ljmp
dec
out
push
push
popf
lock
adc
ret
cmp
pop
mov
push
icebp
add
dec
lock
jge
cmc
pop
lahf
mov
push
clc
lds
mov
push
arpl
aaa
call
mov
aaa
jb
sub
call
out
xchg
loope
xor
rcrb
cltd
ljmp
or
imul
fldt
fwait
sub
cmp
ss
mov
mov
adc
aaa
and
mov
mov
adc
dec
push
iret
mov
fdivr
mov
jmp
and
shlb
dec
and
pop
js
mov
mov
pushf
jno
dec
lcall
push
andb
lock
pop
dec
hlt
jmp
test
sbb
or
mov
push
pop
push
push
ror
std
hlt
lds
test
test
mov
pop
leave
stc
mov
repnz
mov
xor
xor
ljmp
xchg
fisttpl
cli
adc
inc
pop
insl
xchg
cmp
fwait
sub
adc
call
bound
xchg
cmp
int3
arpl
cmp
enter
imul
addr16
rol
pop
es
and
lret
and
shlb
sbb
mov
imul
mov
lea
cmp
sbb
mov
sub
jle
add
clc
into
into
dec
adc
outsb
fdivrs
or
das
jle
aaa
scas
inc
push
inc
pop
mov
cmp
add
pop
loop
sahf
push
mov
pop
and
adc
sbb
sbb
ret
add
mov
rolb
and
lods
fadds
andl
mov
and
int
xor
inc
test
mov
dec
adc
xchg
insb
mov
test
sub
out
js
mov
jp
push
xchg
xlat
std
scas
data16
adc
xchg
shlb
and
and
mov
test
stos
push
loop
xchg
out
idiv
or
mov
punpckhdq
iret
pop
dec
lahf
sub
aad
cmc
into
lret
data16
adc
jl
push
loop
loop
pop
sarl
xchg
jecxz
inc
sbb
push
arpl
mov
sbb
rorb
hlt
fbstp
sbbl
outsl
int3
aad
mov
xchg
push
and
sbb
sub
mov
jne
sarl
adc
push
mov
or
fst
ret
bnd
cmpsl
push
jecxz
dec
cmp
cmp
xchg
and
jl
iret
and
nop
clc
mov
sub
inc
dec
xor
push
xor
push
outsb
pop
insl
into
xor
jp
pop
lret
ret
inc
repz
xor
pop
mov
adc
rcrb
sbb
test
cwtl
dec
sti
imul
and
fldl
out
jg
inc
inc
and
testb
cs
fnstenv
add
push
mov
lods
inc
mov
loopne
sbb
pop
aas
insb
inc
inc
xchg
cltd
sbb
movsl
ret
fnstsw
ss
sub
loopne
cmp
add
mov
divb
ret
push
xorl
jno
jb
sub
xchg
aaa
xchg
pop
sahf
subl
pop
cmp
rorl
flds
mov
imul
pop
hlt
mov
mov
jne
std
loopne
xchg
push
cs
cmc
cld
fstps
js
lret
loop
mov
jnp
lret
add
xchg
jns
sbb
cmp
int
push
je
pop
push
std
cli
jmp
and
inc
arpl
lahf
mov
push
adc
pop
mov
push
adc
aam
sti
cmc
mov
sbb
add
add
imul
jecxz
les
adc
fistpll
lods
je
sahf
sbb
fistpl
fwait
jne
mov
pop
push
in
pop
push
lock
jo
sbb
clc
jmp
pusha
clc
xchg
call
jns
andb
dec
sub
jne
mov
pop
mov
mov
mov
in
cli
negl
rorl
andl
movb
inc
ljmp
jbe
enter
subl
test
xchg
inc
inc
into
nop
sahf
xchg
rcll
lret
mov
outsl
testl
cmp
loopne
lods
adc
inc
test
mov
fmuls
cld
or
push
push
or
cli
test
push
ds
adcl
xor
xchg
xchg
stc
pushf
mulb
xchg
popf
test
inc
adc
dec
adc
add
lret
mov
cli
out
adc
scas
movsl
sahf
sub
push
mov
mov
aaa
int
jge
jle
jmp
in
cmp
adc
inc
fiadds
rcrl
sub
out
mov
fdivrl
mov
xchg
mov
dec
lods
aam
or
loopne
sbb
fs
jns
je
mov
pop
and
cwtl
push
or
ljmp
sbb
jmp
int3
push
arpl
shr
fisttpll
jne
lahf
or
shlb
cmpsb
out
inc
movaps
xor
outsl
aam
and
xchg
push
inc
cmp
jo
push
mov
pop
sub
lods
push
call
aam
lds
outsl
push
and
mov
std
leave
xor
cmp
and
pop
cmp
xchg
inc
mov
mov
sbb
in
pop
mov
sbb
mov
jp
xchg
sub
neg
fistpll
mov
stos
test
and
push
mov
cmp
lods
mov
add
mov
mov
jb
jmp
cmp
pop
mov
or
std
aad
in
fdiv
std
imul
aad
insb
ljmp
inc
scas
xchg
cmp
cmp
idivl
retw
ret
and
inc
or
enter
add
ret
and
sti
mov
pop
movsb
rcl
add
add
cmp
sbbl
inc
add
pop
sub
je
rclb
push
insb
add
mov
cltd
jno
fdivr
jae,pt
xchg
inc
in
xchg
ret
inc
adc
jns
pop
xor
jg
int
sub
mov
outsl
pslld
mov
mov
adcb
daa
mov
fsubr
fxch
lds
pop
and
cmp
mov
mov
dec
jecxz
jecxz
dec
ss
lods
xchg
out
push
fnsave
xchg
sbbl
add
in
cmp
mov
sti
dec
pop
lods
loope
xlat
in
xchg
arpl
dec
sbb
jl
std
cmp
movb
push
imul
sbb
push
push
inc
jmp
out
dec
out
mov
call
addr16
inc
aas
das
dec
mov
stc
add
addr16
add
arpl
mov
sbbl
cld
rcl
mov
lods
cltd
cmp
xchg
aaa
pop
pushf
aas
sub
push
scas
int3
mov
loopne
out
and
adcb
faddl
cltd
xchg
js
xchg
add
and
push
push
mov
push
cmc
or
testb
std
sahf
movl
sbb
data16
push
push
cmp
mov
lds
or
jp
mov
cwtl
lods
lret
add
pop
and
stc
add
xor
cmp
mov
inc
sbb
cmp
add
mov
sbb
jae
aas
sarl
les
shrl
shlb
popf
fldenv
cmp
sub
ret
repz
mov
push
dec
xchg
addr16
dec
ss
push
mov
pop
xor
loop
test
stos
mov
push
iret
sbb
insl
or
dec
pop
sub
cmp
fcomps
enter
cmp
mov
xor
lret
or
out
orb
ljmp
lea
jne
pop
mov
out
and
sub
xchg
mov
leave
iret
and
rcll
pop
mov
les
fwait
mov
lods
testb
inc
add
shll
cmp
jge
push
pop
mov
xchg
fstps
pop
out
xor
fstpl
xor
hlt
and
adc
stos
cmpsl
pushf
and
push
jb
test
scas
push
xlat
pop
mov
in
dec
or
divb
sub
add
aas
notb
dec
jl
push
mov
popa
pop
mov
scas
test
dec
jle
inc
mov
mov
xor
imul
or
imul
push
in
cltd
cmp
mov
aaa
pop
mov
mov
stc
push
mov
mov
adc
jmp
scas
imul
adc
cmpsb
xor
push
popf
jmp
jl
addl
leave
mov
push
push
mov
mov
or
pop
cmp
in
imul
jecxz
pop
dec
xor
xchg
mov
and
mov
push
sub
lahf
xor
mov
sub
mov
outsl
cmp
rorl
js
imul
adc
jae
xor
pop
es
rcr
lret
jnp
jne
out
imul
ljmp
loope
sti
fiadds
shr
lods
lds
in
arpl
or
push
mov
je
mov
insb
mov
int3
jmp
sahf
imul
pop
mov
cwtl
lods
cmp
repnz
ret
jmp
mov
mov
lret
daa
add
push
xor
mov
jae
dec
cli
stos
pop
xchg
and
jmp
cmc
lret
mov
stc
cmpsl
xchg
pop
addr16
loop
out
rcll
ss
fcoms
js
pushf
repz
cmc
mov
pop
stos
xor
mov
fcomi
push
ret
mov
out
outsl
mov
push
xchg
pop
jl
decb
fisubl
ds
jp
jns
jns
dec
orl
call
xor
cmp
pop
cmp
adc
mov
adc
push
pop
nop
ljmp
int3
adc
dec
push
sarl
in
mov
or
inc
jns
test
pop
das
popf
shrl
xchg
sar
sub
xchg
scas
fdiv
jge
lods
dec
xor
cmp
cmp
loopne
jl
pop
adc
jp
fnstcw
push
mov
imul
jb
or
xor
xchg
in
mov
out
aas
sarl
jmp
in
loope
jge
shrl
in
cwtl
pop
mov
aas
filds
jle
mov
and
push
leave
pop
xor
out
sub
sub
jbe
je
or
xor
mov
decl
mov
dec
popf
jnp
or
inc
xor
leave
insb
push
jno
repz
lahf
repnz
pop
xor
shll
mov
testl
dec
push
push
ret
xor
aas
mov
nop
adc
loope
sbb
lods
imul
sub
lret
rolb
lods
push
and
es
les
test
pop
adc
pop
ss
dec
shr
data16
sti
pop
imul
addr16
leave
or
pushf
add
test
test
push
and
enter
popf
pop
jecxz
jns
adc
xor
pop
pop
outsb
xchg
ret
cmp
inc
sbb
push
pop
stc
stc
xchg
test
sbb
mov
dec
xchg
lock
pop
mov
jp
icebp
ret
mov
daa
stc
add
dec
xchg
sub
push
inc
dec
sub
sub
add
popa
daa
fdiv
adc
into
xchg
mov
sbb
popf
dec
enter
lds
sub
cli
cmp
dec
push
push
xor
jb
inc
cmc
cmp
inc
sti
mov
mov
mov
sti
or
fcoms
mov
mov
popf
push
jo
scas
xor
push
lahf
pushl
std
jl
in
dec
lds
fs
hlt
cmc
dec
jp
inc
adc
mov
addr16
add
inc
scas
out
fcompl
dec
fsubrl
push
inc
or
cmpsl
jge
fiadds
mov
popf
push
movsl
mov
movsl
add
mov
imul
jns
sbb
adc
and
jp
jge
imul
push
mov
adcb
mov
data16
mov
test
mov
sbbb
loope
sbb
arpl
mov
into
lcall
mov
jo
jae
sbb
and
ja
cltd
mov
xor
push
mov
pop
cmpsl
cmp
sbbl
xor
inc
cs
xchg
push
adc
cmp
and
adc
fstpt
ja
mov
push
scas
idiv
mov
fisubs
orb
xor
dec
jns
rcrl
jno
iret
sarl
jns
int3
xor
je
or
lods
data16
mov
repnz
and
pop
mov
mov
mov
cmp
mov
and
pop
mov
stc
jle
pop
arpl
jl
lock
add
adc
xor
dec
mov
ret
insl
mov
stc
pop
xchg
inc
mov
xchg
mov
mov
or
fwait
cld
scas
cltd
out
cmp
loop
mov
bound
mov
pusha
push
adc
leave
test
insb
outsl
mov
push
in
pop
lods
mov
xor
mov
mov
sbb
mov
xlat
bnd
sbb
jno
add
sbb
out
jg
jmp
sbbl
and
push
xor
push
aaa
xchg
push
test
push
or
mov
xor
sub
pop
sahf
lods
daa
jl
mov
pop
sbb
aam
lock
lcall
nop
aad
fcom
popa
out
jmp
call
add
cld
call
push
xchg
int3
push
pop
inc
pop
jmp
pop
inc
cmp
addr16
push
mov
jl
xor
pushf
pop
mov
clc
aas
xchg
dec
xchg
lods
loop
mov
xchg
push
stos
fcmovnbe
andl
sub
notl
repz
dec
jbe
icebp
sub
popf
pop
pusha
mulb
pop
sub
js
repnz
push
jl
mov
add
fimuls
mov
icebp
fwait
cmp
das
pushf
pushf
xor
pop
push
aam
fbstp
sysexit
cmp
aaa
cmp
cmp
mov
sub
iret
push
scas
add
int3
pop
aad
inc
call
pop
mov
add
in
clc
push
adc
sbb
add
xchg
and
cmc
sbb
testb
ds
add
pop
and
leave
fisubrl
mov
cmp
or
inc
shlb
xchg
pcmpgtw
xor
in
faddl
test
fs
pop
movsl
sub
mov
test
cmp
push
leave
pop
inc
shrb
stc
movsl
xchg
daa
and
sbb
jae
loopne
rorb
fidivl
iret
adc
repz
frstor
xor
test
or
dec
test
pop
sbb
nop
test
mov
xor
lret
aaa
pop
push
iret
aas
stc
push
loopne
in
mov
push
push
xor
daa
push
add
adc
mov
das
loopne
cmp
loop
dec
sub
lds
xlat
mov
in
iret
push
mov
insb
dec
add
std
mov
adc
mov
cmpsl
inc
adc
mov
add
aad
dec
stc
loop
push
and
sub
push
das
jns
call
popf
and
jp
int
push
cmp
pop
movsl
mov
mov
dec
addr16
jb
iret
into
nop
mov
fucomip
mov
pop
mov
lock
mov
dec
insl
jecxz
scas
jg
fldl
inc
cwtl
jns
cwtl
add
cmp
jmp
xor
orb
jnp
jg
in
adc
shl
or
ret
aad
mov
and
in
mov
xlat
out
mov
mov
dec
jecxz
jl
das
cmp
xchg
add
addr16
cmp
mov
and
sbb
jbe
mov
fdivs
mov
stc
rorb
sub
stc
xorl
stos
jbe
sahf
mov
push
scas
in
mov
in
popa
loop
testl
test
sbb
cli
fwait
cmp
pusha
or
mov
or
pop
xchg
mov
out
sbb
lcall
push
pop
jne
cmp
add
pop
inc
imul
push
fmull
xlat
data16
movsb
pop
cld
lds
das
xchg
mov
sar
pushf
cli
clc
out
popf
sub
xchg
inc
mov
sub
inc
stos
or
push
movsb
mov
jbe
inc
push
insb
test
jo
js
adc
inc
test
sbb
adc
xlat
mov
shlb
in
jle
gs
movl
enter
out
pop
addr16
movsl
notl
repz
mov
dec
push
pop
add
dec
cmp
push
fcoml
inc
scas
test
cltd
aad
push
cmpsl
xor
call
jecxz
cmp
cmp
cmp
dec
pusha
and
dec
int
inc
int
sbb
insb
jbe
pop
stc
aas
lods
mov
jns
or
adcl
and
adc
scas
dec
add
xchg
push
mov
imul
loop
rclb
inc
lcall
or
outsb
mov
mov
push
in
mov
cmp
aas
lods
sub
sub
or
jne
jae
push
dec
mov
sub
test
sub
lds
mov
pop
frstor
pop
movsb
mov
sub
pop
ds
add
test
lahf
push
ds
or
shrl
push
dec
es
sub
bswap
fs
xor
dec
ret
xchg
aam
scas
daa
push
mov
out
scas
fildl
and
in
mov
push
orb
cltd
adc
rol
jp
in
in
repz
xor
negb
pop
and
std
out
movhps
mov
enter
xchg
sarb
and
inc
loop
jns
mov
hlt
jns
fcompp
jnp
loopne
je
sbbb
xchg
in
jb
inc
dec
add
fwait
inc
jmp
imul
iret
stos
mov
fistps
sbb
or
adc
or
xlat
mov
push
fwait
lcall
sahf
or
push
or
sbb
mov
push
push
pop
mov
sub
aam
cmpsb
jmp
ret
cmc
stc
fildll
or
lahf
mov
dec
xchg
ljmp
mov
aas
data16
sub
test
dec
dec
fwait
gs
jecxz
arpl
jbe
and
sub
popa
and
jmp
ficoml
ret
lea
movsb
fldl2t
and
popf
jno
repz
sbb
popa
jb
mov
scas
push
out
rorl
aad
mov
mov
push
push
jne
sub
mov
adc
imul
repz
mov
inc
pop
dec
aas
dec
vmulps
cmp
das
daa
or
cli
pop
aam
jecxz
xor
rorb
lock
ret
mov
xchg
xor
add
sub
aaa
into
ret
jle
sbb
pushf
ss
sub
pushf
and
ja
jge
jbe
inc
fwait
jl
mov
ret
inc
nop
mov
loope
dec
scas
xchg
xchg
push
pushf
arpl
gs
pop
cmp
pop
les
mov
xchg
into
jge
leave
inc
insb
out
out
imul
dec
add
movb
xchg
pop
sbb
fs
hlt
pop
xchg
ds
subb
mov
inc
mov
xor
cmp
sbb
lods
push
add
ja
insb
ret
mov
repnz
test
sub
call
push
stos
mov
pop
in
dec
or
dec
pop
call
mov
pusha
jp
lea
lea
or
adc
push
out
sbb
loopne
adc
xchg
xchg
out
mov
pop
sarl
ret
enter
mov
imul
pop
dec
imul
sti
cmc
push
divb
mov
imul
and
mov
mov
aam
xchg
aas
sbb
dec
into
cmp
push
cwtl
lret
popf
shrl
mov
dec
adc
adcb
mov
loopne
jne
call
mov
xchg
push
mov
push
dec
cmp
ud2
xchg
cmpsl
aad
sub
pop
lahf
mov
mov
sbb
pop
xor
and
imul
repnz
add
pop
leave
mov
rorl
mov
clc
add
cmpsl
dec
dec
mov
pop
fsubrl
rcl
and
addr16
dec
jg
inc
push
insb
xchg
mov
daa
lahf
bound
icebp
scas
dec
jns
je
fcoms
fisttps
outsl
out
mov
ja
dec
push
sarl
dec
ret
jle
bound
popa
push
out
mov
push
mov
das
or
idivl
or
adc
leave
in
push
pop
repnz
sbb
or
pop
pop
xchg
movsl
loopne
jo,pn
loope
or
pop
pop
pop
mov
dec
push
cli
xor
rcll
jp
test
mov
mov
push
cmp
xchg
test
imul
cmpsb
add
add
andl
push
cmc
out
sahf
jo
mov
push
popf
inc
push
jmp
and
or
jg
adc
test
jp
mov
imul
dec
repnz
xor
sarb
sbb
dec
mov
aaa
mov
jnp
loop
mov
push
xchg
loopne
sbb
test
cmp
ss
outsl
stos
add
fildll
jle
scas
testb
cld
fistpll
or
push
test
aad
push
adc
hlt
ret
subb
xchg
mov
jmp
cmp
inc
cs
mov
mov
mov
add
mov
mov
lods
jp
mov
sbb
xchg
sub
mov
push
addr16
fmull
sub
inc
in
rolb
and
ja
int
and
cs
pop
arpl
xchg
mov
mov
test
scas
push
mov
dec
pop
adc
xchg
and
pop
cmp
jb
adc
pop
pop
add
dec
sbb
les
mov
cmpsb
fcoms
cld
pop
push
popf
cmpsl
xchg
xchg
outsl
cmpsb
test
loop
adc
pop
mov
scas
repz
or
adc
inc
and
xchg
rorl
outsb
mov
mov
les
sbb
cmp
inc
dec
sti
daa
ss
inc
lock
lock
rcrb
mov
mov
sbb
dec
adc
mov
insl
xchg
aam
and
test
stc
test
pushf
mov
adc
add
lret
xchg
xchg
cmp
dec
xlat
jle
jb
jl
insl
xchg
test
push
lret
orb
cmpsl
push
sahf
test
in
sahf
jns
js
stc
aad
jmp
lea
and
push
nop
push
pop
sub
xor
testl
mov
xchg
fwait
rolb
fbld
outsb
xchg
mov
in
aam
imull
pop
in
mov
les
pop
pop
scas
xorl
add
xchg
or
pop
clc
data16
daa
ja
mov
xor
cli
shlb
jb,pn
mov
mov
jl
inc
outsl
out
mov
push
addr16
xlat
inc
iret
jle
jbe
shl
xchg
outsb
aam
xor
in
divb
mov
dec
cmp
dec
mov
mov
or
cld
les
movsl
add
out
dec
jg
cs
cli
mov
shrb
mov
adc
mov
xchg
push
cmpsl
das
sub
lcall
push
xor
out
dec
mov
push
jnp
mov
mov
dec
in
mov
add
clc
xchg
test
inc
jo
mov
adc
mov
sbb
ret
xor
mov
xchg
xchg
add
call
xlat
and
cwtl
repnz
mov
inc
es
addr16
dec
jb
in
jp
jmp
popf
scas
int3
stc
fildl
xor
sbb
jmp
out
std
mov
mov
mov
add
into
sbb
or
and
sub
in
ret
push
lret
jb
into
pop
sahf
and
sub
mov
fists
cmc
xchg
cmpsb
mov
push
sub
mov
adc
jae
imul
mov
gs
pop
adc
cmp
dec
mov
pop
or
push
jmp
cmpsb
sbb
adc
mov
adc
sub
sbb
test
dec
lret
inc
addr16
and
fmull
or
and
xchg
push
jo
lock
jno
ljmp
pusha
out
add
lcall
sub
sarb
or
nop
pop
xor
out
lods
out
out
and
insb
dec
inc
adc
push
fisubrs
lret
and
xor
xchg
clc
cmpsb
out
push
cli
mov
jno
xorb
cmp
push
mov
cld
sbb
out
mov
rcll
mov
loopne
adc
insb
mov
xor
sbb
xor
xorb
inc
ss
jae
mov
and
sub
pop
test
aaa
push
clc
pop
xchg
out
stos
xor
lods
leave
cmp
xor
shlb
jmp
add
and
mov
jge
mov
data16
test
jae
adc
ss
adc
aad
std
bound
fsub
mov
icebp
adc
sahf
icebp
fdivs
lds
jg
xchg
outsb
mov
cs
sti
es
dec
lcall
and
and
mov
sbb
int
hlt
mov
fdivr
dec
xchg
sub
shrb
jnp
sub
sub
xchg
jle
fld
fstpl
dec
jae
imul
test
or
lods
sub
repnz
xor
inc
pop
out
addr16
lock
cltd
fstps
mov
xlat
xchg
dec
lock
jp
mov
enter
and
jge
lock
push
fiaddl
cmp
cld
pop
pop
int
js
cmp
cmp
and
xchg
ljmp
je
rclb
mov
or
ficompl
or
icebp
loopne
jns
mul
cltd
icebp
test
xchg
ss
pop
int
add
scas
or
out
sub
cld
mov
adc
shlb
pop
andl
mov
movsb
inc
adc
pusha
ret
or
jmp
fmull
in
xchg
push
jp
pop
xor
adc
cmpsl
jo
mov
inc
mov
out
mov
or
icebp
mov
cltd
js
mov
cmp
adc
movl
insl
xchg
xchg
negb
dec
or
in
xor
lahf
inc
add
fidivrs
lds
jle
adc
or
mov
addr16
or
add
push
xchg
aas
fnstsw
cmp
push
aaa
xchg
icebp
bound
jp
rorb
add
gs
mov
rolb
dec
data16
fisttpl
das
inc
mov
sbb
pop
popa
movsl
or
inc
xchg
jmp
add
in
int3
lea
clc
ret
lahf
clc
adc
sub
cmp
jle
popf
cmp
push
or
mov
jnp
lods
in
fistpll
fs
ret
imulb
pushf
bound
push
stc
xor
sbb
popa
add
push
or
push
adc
cmp
and
stos
lds
xor
outsb
mov
push
stos
pop
sbb
popa
and
dec
jno
cmp
mulb
mov
mov
inc
xchg
scas
xchg
enter
dec
dec
mov
inc
bound
inc
mov
adc
dec
clc
mov
inc
mov
movsl
repnz
mov
xor
xchg
xchg
xor
dec
or
jg
cmp
or
or
pushf
mov
addr16
rcr
out
test
cltd
mov
xchg
ja
xor
cmp
mov
and
addr16
inc
add
cld
add
insl
sub
fidivrs
cwtl
cltd
push
xchg
push
out
push
or
mov
pop
ja
or
push
cmpsl
add
push
mov
and
add
pop
xor
scas
insl
inc
inc
push
iret
mov
test
add
adc
mov
mov
inc
push
inc
jns
cltd
movsb
cs
sbb
jns
push
add
ja
jnp
mov
xchg
add
gs
lret
mov
out
les
mov
out
xchg
ss
add
das
xlat
mov
repnz
imul
in
outsl
or
cmp
inc
movb
inc
lret
out
add
in
mov
xor
dec
fnstsw
aam
dec
pop
add
rolb
into
dec
aaa
hlt
arpl
test
lret
leave
push
push
sbb
jo
lret
lods
out
fidivrs
insb
xor
push
roll
shl
jge
add
or
xchg
test
jmp
dec
mov
jmp
lods
aad
fimull
jmp
add
dec
shlb
cmc
inc
xchg
fnstsw
arpl
cwtl
inc
std
mov
sahf
mov
dec
add
in
xchg
adc
test
inc
nop
or
les
dec
jg
cmp
ret
cmp
lods
xor
out
gs
push
or
insl
popa
ficoml
mov
sbb
daa
mov
ret
inc
int3
push
movsl
xor
je
insb
add
sbb
push
test
inc
bnd
xorb
pop
scas
lret
and
test
cwtl
push
pop
inc
jecxz
ja
inc
sbbl
fcmovne
inc
cmp
sarb
sub
outsl
enter
std
test
inc
lods
outsb
cmp
in
or
mov
mov
lea
jns
push
jmp
cltd
stc
test
inc
std
sbb
pop
or
mov
lods
xchg
repz
js
adcb
test
flds
roll
test
mov
es
fiadds
int3
inc
push
mov
in
das
das
stos
je
xchg
jle
clc
insb
shl
test
jge
fsub
shll
xor
mov
push
testb
fsubr
add
enter
mov
sub
dec
add
not
and
cmp
add
out
or
adc
push
in
hlt
lea
push
and
out
or
or
push
xor
sub
fcomp
sbb
mov
and
adc
lret
fsubr
cmp
aad
sbbl
sarl
sbb
pop
mov
insl
stos
std
xchg
das
xchg
rclb
jnp
pop
xor
imul
xor
andl
enter
fwait
xchg
jno
cltd
jle
mov
or
iret
cmc
and
jl
roll
data16
imul
cmp
shrb
sub
push
sub
fadd
push
std
in
or
jl
cmp
addr16
mov
mov
or
aas
push
cmp
es
add
lcall
jecxz
mov
repnz
mov
jo
popa
xor
js
sarl
lods
pushl
sub
pusha
ret
movsb
xchg
or
mov
imul
push
lods
mov
nop
imul
loope
outsl
sub
cmp
inc
stos
xor
jmp
xor
lods
push
add
mov
push
push
js
ret
cmp
dec
into
sub
inc
imul
cmpsb
adc
out
jne
xor
pop
in
dec
and
or
cmp
xchg
inc
adc
dec
fdivrs
insb
in
pop
inc
cmpsl
jge
ljmp
xor
sbb
ret
imul
jmp
mov
jb
scas
jnp
add
add
lcall
add
and
fs
ds
push
or
push
nop
fmuls
into
mov
call
cld
push
adc
pop
lock
xor
pop
jl
sti
pop
pop
inc
ss
push
shr
mov
xchg
fwait
push
nop
xchg
jo
mov
mov
movsb
jns
sub
xchg
xor
aad
jns
jbe
dec
or
in
mov
push
and
pop
out
aad
inc
test
out
iret
add
insl
jge
mov
jno
cmp
sub
xchg
fimuls
xor
repnz
insb
mov
mov
push
out
push
pop
test
stos
push
pop
inc
lock
popa
lea
icebp
clc
lods
ret
jne
arpl
fs
mov
jmp
shll
fwait
xchg
imul
cmpsb
dec
ss
pop
mov
insl
fisttpl
mov
divl
aaa
std
rorl
imul
outsl
and
ret
mov
icebp
push
sarl
push
jb
movsb
mov
lods
test
xchg
mov
add
xchg
in
test
inc
test
roll
jbe
in
push
lods
fwait
pop
fsubrp
dec
adc
and
imul
les
outsl
mov
jl
and
bound
pop
fstpt
ds
sahf
cld
ja
adc
repz
cli
popa
stos
inc
insb
dec
lock
lcall
movsl
out
sti
jae
scas
repnz
pop
test
aad
imul
jo
dec
cmp
mov
mov
fisttpl
daa
jnp
push
adcl
mov
add
mov
mov
sub
test
and
mov
adc
mov
sub
or
jbe
dec
scas
cli
xor
inc
xor
jp
enter
jae
ret
pop
sbb
push
push
jl
popa
mov
mov
rcrl
unpckhps
cmpsb
dec
mov
ja,pn
or
ret
sahf
ljmp
test
shrl
fadds
mov
negl
lret
adc
cs
pushf
fs
mov
mov
xor
xorb
addb
mov
sub
insl
enter
jns
xchg
shlb
cmp
pop
xchg
icebp
add
andl
adc
cmp
inc
jl
xchg
and
ror
test
cmpsl
push
sub
andb
or
pop
push
andb
out
mov
mov
add
repnz
pop
adc
shll
insb
leave
pop
fbstp
or
jle
lret
pop
fdivrs
xor
adc
aas
push
cmp
lods
hlt
xlat
cmpsb
sub
das
lret
test
pusha
dec
mov
mov
lcall
sub
iret
fmul
pop
lret
xor
dec
adc
ficompl
lods
xor
lcall
dec
fwait
jg
adc
mov
int
divl
jnp
cs
insl
cmp
and
mov
push
pop
pop
fildl
ljmp
pop
inc
add
pop
mov
cs
and
testl
and
aaa
arpl
out
imul
insl
add
cld
es
mov
mov
pop
mov
mov
dec
jno
pop
sub
data16
dec
push
mov
jae
mov
addw
hlt
fisubrl
aaa
push
adc
insl
jns
and
cltd
xor
out
dec
xchg
push
mov
push
das
les
fisubs
sbb
sub
xchg
shrl
bound
mov
fnstcw
clc
jg
js
repz
bound
movsl
data16
cmp
shrb
push
test
cwtl
mov
mov
cmp
mov
xchg
lods
jo
cmp
adc
inc
sbb
sar
push
and
inc
sub
addr16
mov
sbb
pop
pop
xchg
mov
das
inc
ds
xchg
pop
aaa
lahf
lret
test
mov
loope
push
mov
xor
xchg
adc
sbb
xchg
sti
sti
cwtl
addr16
sbb
mov
jg
sub
ss
mov
out
mov
mov
stos
insb
mov
pop
xchg
mov
dec
imul
aas
jo
sub
or
rorb
arpl
jecxz
test
xor
add
sbb
ret
add
test
inc
sub
insb
jo
push
icebp
icebp
leave
adc
leave
xchg
mov
pop
dec
pusha
lea
lods
test
jnp
ljmp
call
or
ja
pop
mov
xchg
in
incb
add
dec
jbe
push
dec
xor
jmp
xor
add
adc
les
mov
in
push
pushf
call
test
mov
jp
in
or
hlt
dec
sbb
mov
int
or
jns
inc
addr16
xor
testb
adc
popa
lret
add
in
xchg
xchg
push
jmp
pop
loopne
rorb
test
fcomps
in
cmp
pop
adc
push
jno
push
mov
cmpb
in
hlt
adc
xor
repz
and
and
cltd
push
outsb
xchg
jnp
fldl
insb
lds
gs
dec
pop
mov
xchg
mov
test
in
sub
xchg
inc
cs
and
push
cld
call
inc
aas
xchg
inc
adc
mov
fmull
pop
cld
dec
sti
fdivs
fisttps
and
hlt
repz
dec
sbb
mov
lods
repnz
repnz
and
nop
mov
dec
sarl
nop
pusha
shlb
jecxz
adc
pop
test
mov
test
push
dec
idivl
mov
or
and
push
out
inc
fwait
mov
add
imul
xchg
test
jo
fwait
pop
test
mov
outsb
fildl
or
cli
imul
mov
mov
mov
leave
sub
inc
mov
push
sbb
sti
adc
jo
lahf
and
mov
lods
push
adc
stc
rcrb
push
pushf
out
lea
push
xchg
test
add
divps
dec
test
mov
rorl
or
or
adc
mov
and
popf
shlb
enter
js
je
enter
adc
data16
je
push
jns
stos
jns
shrb
xchg
sub
xor
cwtl
in
js
add
add
xor
sbb
popl
sbb
out
rcr
xchg
stos
mov
sub
mov
xor
mull
aaa
add
mov
out
ljmp
inc
imul
pusha
mov
inc
in
stc
cmp
cmpsl
push
cmpsb
mov
in
sbb
movl
xchg
pop
outsb
dec
pop
in
sub
mov
fabs
fisubl
sub
test
subb
or
xchg
shl
inc
dec
in
mov
imul
negl
imul
lock
jmp
pop
pop
in
aaa
or
mov
or
mov
sahf
add
arpl
inc
or
in
scas
popf
dec
in
adc
scas
mov
stos
adc
ret
add
mov
inc
xor
jmp
mov
fnstenv
jo
test
xchg
sub
mull
addl
or
outsb
rol
xor
fidivl
jecxz
fwait
sub
push
enter
repnz
dec
inc
mov
add
fmulp
fbld
pop
mov
es
inc
and
mov
xor
push
jecxz
popa
imul
icebp
stc
add
int3
mov
lahf
imul
cmpsb
dec
jl
sub
aad
aaa
shlb
pop
mov
stos
popl
dec
mov
in
fmull
push
xchg
mov
xchg
push
into
les
outsb
shrl
inc
loop
aas
lret
jb
ss
lods
mov
stos
adc
push
pop
sub
sub
movl
aam
lcall
stc
push
aas
inc
mov
gs
mov
pop
je
mov
out
std
pop
and
xchg
aaa
xchg
cltd
cmpsl
push
aam
ljmp
dec
xor
cwtl
test
mov
es
shlb
jmp
les
dec
xchg
cmp
pushf
mov
sub
mov
inc
loopne
mov
dec
xchg
andl
pop
or
add
adc
loopne
mov
sub
mov
in
cmp
orb
jmp
aas
call
push
push
stos
sub
mov
fs
std
scas
xchg
aad
stos
test
insb
dec
loopne
xor
xor
mov
mov
cmovb
mov
mov
int3
sbbl
mov
dec
jle
and
xchg
cli
mov
mov
insl
cmp
repz
ja
xchg
lods
aad
jo
sbb
jbe
push
lret
jmp
jns
lret
and
lcall
dec
xor
push
shl
and
leave
add
sahf
inc
testl
mov
push
and
mov
lods
fisttps
jle
test
ljmp
lds
mov
jae
inc
cmp
inc
enter
insb
fistpl
jbe
lret
mov
stc
out
cld
cmp
add
mov
nop
jae
icebp
jg
cmp
arpl
enter
lret
ljmp
js
das
xor
pop
xlat
sbb
and
scas
iret
sbb
xchg
bound
sbb
fs
lret
in
out
cmc
into
aaa
pushf
std
pop
clc
mov
cmp
mov
sti
jne
sub
add
cmp
hlt
mov
lcall
dec
or
in
clc
pushf
rolb
enter
or
out
test
xchg
ds
jge
arpl
add
movsl
adc
xor
lock
cmc
push
int3
clc
push
popl
ss
sub
cld
mov
idiv
std
jbe
les
pop
lahf
jo
movsb
in
aas
cmpsl
mov
outsb
mov
cwtl
cmp
jp
lea
or
repnz
adc
xchg
push
pop
mov
pop
hlt
lods
push
adc
addr16
aam
sbb
jl
fistpll
mov
mov
test
out
dec
inc
mov
aad
xor
arpl
lret
stos
push
cmp
lcall
and
push
add
lcall
mov
add
inc
and
ljmp
pop
sbb
sbb
and
adc
cmpsl
sub
dec
enter
adc
mov
push
and
cwtl
loop
jmp
popa
addr16
sub
shll
mov
ljmp
sub
out
fdivs
movsb
mov
shrl
stos
adc
mov
and
lcall
addr16
pop
movl
add
into
mov
xor
and
mov
push
fldt
sti
jo
fisttpll
into
xlat
adcl
outsb
iret
inc
stc
insl
jns
lods
in
pop
push
or
or
rcrl
adc
in
js
mov
js
fwait
stos
push
cmp
in
and
cld
or
pop
jae
xor
aaa
das
out
cmpsb
jno
lea
fistpl
in
add
bound
xchg
bound
in
mov
dec
jge
repnz
mov
and
mov
pop
sbb
mov
out
mov
loope
add
xchg
jb
pop
cwtl
hlt
pop
sub
pop
fidivrs
mov
inc
mov
sahf
imul
xchg
inc
outsb
add
fisttpll
push
mov
in
outsb
xchg
outsb
sahf
lret
and
push
test
mov
mov
in
or
inc
push
scas
ljmp
or
dec
loop
sbb
ljmp
push
addr16
mov
cmp
cmp
sahf
cli
or
cmp
add
inc
pop
cmp
icebp
push
enter
imul
cmp
insl
pop
fdivrl
jle
stos
dec
insb
push
fildl
jg
popf
out
insl
iret
repz
cmp
outsl
lahf
iret
or
mov
cmp
std
enter
mov
mov
xchg
push
in
xchg
out
mov
mov
arpl
lds
jge
and
mov
mov
int
lock
xor
mov
ret
jae
and
shlb
repz
jne
insl
inc
jmp
leave
pop
adc
mov
cmp
xchg
lods
sbb
int3
push
adc
mov
shrl
mov
mov
adc
and
inc
push
rcll
mov
stos
push
inc
jne
xchg
in
outsb
loope
lret
call
in
decl
outsb
test
inc
daa
mov
loop
shll
shll
orb
push
movsb
dec
pop
cmp
adc
scas
jmp
dec
lods
arpl
addr16
add
push
scas
lds
xor
call
lret
pop
xchg
je
or
jecxz
or
inc
movsl
inc
push
jle,pn
push
pop
fildl
add
jmp
ret
ret
jl
xor
sahf
insb
xor
scas
jb
mov
das
xchg
mov
mov
cs
cmp
jbe
xchg
and
imul
pop
push
dec
movsl
repnz
inc
lds
rorl
inc
or
inc
lds
push
sbb
test
xor
and
sub
mov
or
inc
push
push
mov
imulb
pop
cli
outsl
les
leave
es
in
cmp
mov
mov
lock
dec
pop
push
leave
scas
cld
xchg
xchg
stos
lods
andb
fistpll
fisttps
repz
repnz
adc
nop
cmp
pop
dec
cmp
and
xor
lock
cltd
in
xor
iret
int3
xchg
js
repz
add
adc
and
aas
sbb
push
loope
les
dec
sbb
push
sub
or
movsb
in
fs
or
imul
add
jle
fdivl
sbb
pop
jno
pop
sub
inc
jg
movsb
cmp
aaa
fldcw
fmulp
sbb
or
fs
out
and
mov
outsb
arpl
adc
clc
jbe
mov
vaddss
sbb
sub
cmp
cmp
dec
shlb
push
mov
inc
test
cmp
gs
fisubs
adc
popa
mov
jo
inc
cld
aas
bound
xlat
jge
mov
ss
xchg
je
cmc
mov
in
xchg
testb
enter
add
or
popf
imul
int
mov
stc
idivb
fdivr
mov
cli
mov
scas
outsl
enter
in
ret
inc
aam
inc
outsb
xor
cmp
mov
lahf
repnz
outsl
jl
mov
dec
jmp
mov
mov
outsl
in
rcrb
inc
sar
pop
subl
add
lahf
jb
mov
hlt
addr16
in
xor
das
mov
xor
fcompl
dec
jmp
cmpsl
js
xor
jb
shlb
or
xor
mov
mov
xchg
sbb
out
test
fbstp
ss
jo
or
std
pop
mov
clc
adc
fists
nop
add
push
jmp
imul
push
shrl
mov
mov
cli
push
es
or
ds
aam
sub
cli
stos
jge
ret
mov
fwait
daa
push
xchg
mov
pop
js
nop
jne
xor
test
loope
mov
dec
iret
pop
inc
jge
push
addl
add
addr16
xor
push
add
sti
fs
mov
insl
jo
jb
pusha
mov
adc
addb
dec
cmp
mov
and
jle
xchg
test
push
xor
subl
jo
lahf
cwtl
lret
adc
loopne
inc
adc
mov
outsl
into
xlat
int3
outsl
pop
test
mov
loopne
gs
mov
loop
insl
mov
loop
into
jl
lods
nop
sbb
mov
jbe
test
loope
out
adc
dec
rcrb
popa
jno
dec
cli
nop
cmp
mov
loope
into
divb
xor
cld
mov
pop
enter
cmp
leave
adc
dec
mov
jg
mov
test
pop
into
fisubrs
pushw
cs
mov
sub
jnp
pop
cmc
xchg
stc
xor
stos
mov
shlb
lret
movsb
mov
sbb
jecxz
test
mov
stos
add
push
xor
popa
sbb
or
pop
inc
cmp
stos
sub
pop
adc
scas
jnp
mov
lock
std
scas
outsl
stos
aad
and
stos
js
das
pop
scas
stos
sbb
mov
cmp
shll
sub
push
lahf
cmp
mov
stc
xlat
out
mov
lret
ret
es
stos
xor
or
insb
movsl
xchg
leave
or
inc
mov
jmp
mov
pop
std
sub
movsl
xor
movsl
mov
mov
cmpsb
dec
out
sub
into
pop
outsl
loopne
inc
stos
iret
pop
in
jnp
movsb
cltd
mov
xlat
mov
sbb
sahf
ret
pop
xorps
pop
sbb
insl
add
and
or
pop
jmp
or
and
mov
push
add
repnz
fwait
adcl
push
push
mov
add
mov
int
push
and
fdiv
stc
out
jne
cmp
ds
addr16
cwtl
pusha
xchg
dec
std
scas
xlat
add
pop
stos
insl
push
xorb
mov
adc
idivl
loope
pusha
fistpll
mov
push
sti
and
xchg
cmpsb
and
ja
frstor
imul
insb
mov
lods
jmp
das
movsb
popl
mov
jbe
mov
popf
sub
sub
outsl
fwait
ret
stc
loope
inc
adc
xchg
xor
pop
sub
int
stc
arpl
std
pushf
lds
push
jp
dec
or
mov
cmpb
dec
xchg
inc
rol
scas
std
cmc
cmp
aad
bound
cmp
nop
xchg
xchg
fxch
cmp
cld
sbb
ljmp
insl
arpl
je
add
jge
cmp
xchg
jns
pop
adc
shll
std
adc
enter
push
inc
ret
in
test
and
aad
and
xchg
repz
and
mov
jnp
push
fstl
jb
leave
shrl
push
daa
jnp
je
dec
mov
jb
lock
inc
dec
rcll
lods
add
in
mov
sub
test
test
sahf
pop
mov
fnsave
sbb
inc
sahf
pop
adc
mov
jnp
lods
fistl
sar
fiaddl
mov
mov
ds
sahf
dec
ljmp
ficompl
out
in
mov
test
fistpl
lea
fcomp
mov
in
sub
enter
stos
lret
lret
mulb
cmpsl
popf
adc
push
jmp
cmp
xchg
cmp
out
les
cmp
dec
imulb
ror
push
mov
xlat
or
lahf
xchg
psubsb
test
mov
stos
imul
fwait
jns
sbb
jnp
jg
inc
and
jo
sahf
decl
mov
je
sahf
lret
lock
adc
data16
loope
pop
std
jns
mov
add
scas
js
mov
or
imul
mov
dec
inc
repnz
das
cld
jae
xor
stos
int
fsubrs
clc
xor
out
cld
sahf
push
hlt
add
mov
jne
test
jns
add
wbinvd
daa
outsl
xor
cli
jo
and
jp
pop
xor
test
pop
outsl
inc
ret
sbb
addr16
add
pop
fmuls
mov
inc
push
add
sti
or
bound
add
rcrl
xor
mov
mov
and
sar
insb
negl
cmp
add
dec
scas
adc
cmp
popf
adc
ret
scas
or
or
sbbl
lret
jle
cmp
mov
pop
nop
adc
add
dec
or
into
icebp
insl
mov
push
insb
ficomps
in
mov
stos
jb
xor
in
rcrl
aam
rcrl
mov
jo
mov
bnd
mov
enter
xchg
mov
jge
push
add
push
add
jbe
xor
dec
lahf
test
rorb
subb
push
iret
repz
ret
xor
xor
cmp
aam
jne
popf
addb
insb
scas
outsb
and
jns
push
add
in
and
cltd
and
pop
fcmove
jecxz
int
mov
leave
push
push
roll
aas
inc
xor
roll
xchg
jne
jl
sbb
xchg
js
rcrl
inc
cmp
call
jecxz
fisubs
push
cmpsb
call
fs
in
sbb
cmp
in
inc
std
vcmpsd
and
cmpsl
and
cmp
adc
das
cmpsl
cmpb
pusha
cltd
adc
pusha
das
mov
xchg
std
inc
mov
pop
lea
sbb
shrl
mov
xchg
jns
scas
stos
push
lods
imul
hlt
jae
es
xchg
sub
fucomp
pop
inc
gs
and
sbb
aaa
aad
mov
mov
int3
enter
xor
js
stos
jg
mov
fsubs
ja
mov
out
sub
jg
or
sub
xlat
out
dec
adc
ror
jbe
mov
pushf
fidivrs
dec
cmpsb
arpl
xchg
mov
iret
scas
hlt
add
sarb
clc
aad
xchg
mov
mov
jmp
fsubrl
push
mov
and
ja
in
sub
mov
dec
dec
sub
sbb
adc
push
pop
jbe
sbb
rcrl
enter
pop
pop
test
mov
ss
adc
fwait
mov
fdivrl
hlt
pop
and
jnp
iret
test
testb
inc
or
add
inc
add
or
sub
cmp
rorl
sub
icebp
repnz
outsl
lret
mov
xchg
pop
or
imul
dec
test
popa
adc
cld
ja
push
shlb
jno
sub
push
cmp
inc
rorb
fists
fcomps
pop
sbb
cmc
stc
jnp
mov
add
dec
shlb
sbb
xor
jmp
aad
in
test
popf
push
filds
pop
int3
out
dec
jmp
aas
nop
insb
xor
sub
leave
or
lcall
in
pop
ror
lods
adc
jb
int3
aaa
xchg
sbb
xor
pusha
jg
es
cmpb
imul
dec
scas
fbld
sub
dec
mov
mov
pop
sbb
cwtl
and
mov
stos
cwtl
mov
enter
xchg
mov
pop
pop
rorb
cmp
xor
ret
out
mov
fucomi
jle
sbb
cs
jae
sbb
push
cltd
pop
fwait
jmp
iret
sbb
push
lods
and
xchg
cmp
mov
cs
movsb
push
mov
in
pop
inc
push
lcall
fmull
fiaddl
sub
mov
int3
xchg
pop
and
add
cld
push
push
es
adc
arpl
sbb
pop
pop
or
call
mov
or
xor
mov
mov
fisubs
insb
or
mov
dec
jae
ljmp
sub
cmc
test
xchg
mov
addl
xor
ss
scas
cmp
adc
xchg
popf
cltd
pop
add
jle
fcom
mov
sub
das
pop
das
es
or
sub
aas
push
pop
repnz
cmp
dec
sub
jge
bswap
repnz
adc
pusha
test
nop
enter
ficomps
mov
pop
sbb
jge
test
in
xor
ficomps
mov
adc
push
pop
or
stos
inc
cltd
ret
xor
mov
out
mov
insb
out
and
adc
clc
aad
rep
inc
or
mov
into
sar
int3
popw
sub
mov
or
popf
mov
xor
sub
pusha
sbb
lea
xor
imul
fimuls
mov
jo
into
sbb
mov
outsb
pop
mov
pop
and
xchg
nop
loop
in
cmp
dec
or
jno
xor
nop
into
xchg
imul
stos
mov
loope
adc
inc
pushf
rcll
movb
sub
daa
or
inc
ret
subl
push
mov
cwtl
fxch
outsl
adc
icebp
and
sti
rcr
ficompl
out
dec
outsl
dec
adc
std
out
icebp
mov
fcoms
cld
cmp
mov
cmp
enter
lea
xchg
sub
mov
inc
sbb
pushf
test
xchg
jmp
and
shll
mov
adc
rolb
inc
pop
nop
movsb
shrl
daa
test
out
mov
push
xchg
push
push
sarl
push
push
int3
cmp
sbb
popf
rcll
dec
jno
out
inc
test
andb
les
xchg
rep
mov
xchg
jbe
icebp
xor
push
popa
push
in
push
repnz
add
aas
mov
adc
cmc
push
nop
lds
jne
jmp
sub
pop
inc
cmc
sbb
sub
cmp
cmp
push
and
insb
loop
test
call
mov
cltd
test
mov
pop
rcll
push
test
add
cmc
sbb
push
cli
lret
or
hlt
or
cmp
or
mov
or
dec
aaa
les
mov
mov
dec
xchg
aam
dec
movsl
movsb
mov
int
mov
dec
sbb
imull
cmp
shlb
push
lock
lods
sahf
test
stc
int3
insl
insb
and
dec
xchg
test
out
ds
popa
loopne
add
mov
adc
inc
out
cmp
push
stc
inc
or
sub
loop
xchg
mull
mov
aaa
pusha
or
shll
cltd
mov
mov
shlb
mov
xor
cmp
cmc
add
in
pop
fstpt
std
xor
xchg
pop
jnp
add
gs
fiadds
lea
mov
hlt
lods
imul
cmp
jbe
and
test
je
push
sub
push
aaa
faddp
xchg
push
xlat
out
or
hlt
xchg
and
loopne
lds
and
jge
cmp
sbb
push
xchg
adc
into
push
sbb
adc
dec
je
mov
gs
mov
popa
out
hlt
xchg
mov
xchg
xchg
mov
sarb
in
cmp
fldcw
imul
mov
xor
adc
movsb
sbb
jmp
push
xchg
xor
fldenv
mov
inc
mov
add
mov
push
leave
iret
mov
push
adc
je
out
movsl
fsubl
dec
fsubs
mov
jmp
fidivs
icebp
addr16
imul
inc
test
sbb
adc
jnp
jb
lds
lea
inc
test
adc
xchg
pop
lea
mov
xchg
mov
lcall
xchg
fldcw
in
nop
jne
sahf
xchg
iret
scas
idivl
push
ss
adc
in
lret
push
inc
mov
scas
cmc
xor
jns
pusha
sbb
jno
push
push
aam
call
lcall
or
lcall
popf
jae
push
dec
sbb
movsb
ss
aaa
iret
pop
cltd
mov
jge
ficoml
push
fistl
out
mov
pop
cmp
dec
xor
fs
xchg
pop
leave
icebp
mov
pop
mov
mov
aam
out
adc
leave
dec
mov
mov
jo
stc
cmovge
jae
fists
xchg
push
inc
fiadds
test
mov
mov
adcb
in
push
stos
sbb
pushf
sbb
mov
inc
adc
test
cltd
cmp
xchg
dec
int3
cmp
cmpsb
add
out
pusha
insb
push
lret
mov
andb
add
inc
cmpsw
clc
inc
sub
and
cmpsb
rcrl
jns
sub
xor
repnz
andl
loop
cmpsl
mov
jmp
and
shlb
adc
fs
lea
in
outsl
add
xchg
mov
xchg
pop
movsb
into
std
scas
push
pop
lret
cmp
in
aam
sub
mov
pop
and
sahf
dec
mov
and
adc
dec
stc
cli
xor
jb
stc
xchg
je
jne
cmp
fadd
or
cmp
or
int3
cmp
mov
lahf
and
orb
insb
and
int
mov
push
pop
cs
xor
js
xor
jae
mov
mov
popa
scas
xor
jo
data16
add
stos
push
loopne
scas
cwtl
pop
mov
fsts
mov
xlat
and
test
xlat
adc
adc
or
xchg
test
je
ljmp
lock
mov
jbe
add
ds
jmp
mov
mov
jb
jno
movsb
xorb
test
pop
jb
jo
dec
enter
cmp
sahf
jno
add
push
jg
stc
push
ss
and
les
js
mov
aad
cltd
jmp
sub
in
fidivs
mov
call
pop
mov
jne
ljmp
sub
push
add
jbe
cmpsl
movsl
lds
les
sarl
xor
mov
std
sbb
jo
add
ljmp
push
sub
lods
jae
jae
push
cltd
xchg
or
icebp
outsl
test
inc
pop
xchg
mov
xchg
adc
mov
int
imul
push
js
xchg
out
dec
pop
notl
mov
or
imul
dec
test
mov
test
xchg
sbb
dec
out
and
scas
inc
xor
in
iret
cmpsb
and
je
insl
popa
ret
lret
cld
inc
pop
fcomi
xchg
inc
push
add
fs
sbb
xchg
loopne
imul
mov
sti
push
jg
lret
aas
jno
fwait
mov
ret
sub
xchg
out
fs
cmpsl
andb
xchg
sbb
cmpsl
ja
aaa
sahf
shll
gs
inc
hlt
jg
dec
int3
rorb
lret
leave
scas
xchg
xlat
jmp
sahf
imul
jno
inc
out
mov
jl
cld
mov
dec
shll
lcall
fimuls
push
cmp
movsl
push
lea
xor
fxch
xchg
and
nop
test
inc
aaa
pushf
int
push
push
ljmp
sub
fdivp
and
or
inc
int3
lahf
adc
js
cmp
movsb
and
icebp
inc
and
dec
sub
fs
shl
out
pop
mov
outsb
pushf
inc
add
fs
xor
jmp
xlat
mov
dec
mov
insl
sbb
das
scas
sbb
cmpsb
jp
jns
and
rolb
addr16
jecxz
ds
pop
mov
jae
rorl
cmc
fadds
data16
mov
mov
aam
vxorpd
jle
int
rorl
dec
rolb
mov
or
aas
dec
adc
pop
mov
dec
dec
xor
xchg
lahf
mov
adc
push
jg
dec
rcrl
out
das
loope
mov
jmp
jl
insb
fnsave
dec
repz
decl
xchg
add
or
sub
shlb
xchg
enter
das
push
cs
mov
add
je
dec
in
or
es
imul
push
int
sahf
hlt
sub
pop
or
fcompl
call
xchg
inc
fnstcw
inc
push
cmpsb
dec
les
test
adc
dec
mov
mov
cmp
gs
mov
xchg
jno
bound
mov
jmp
inc
push
inc
je
push
xchg
out
add
cltd
mov
or
outsb
push
sbb
out
lods
mov
inc
mov
inc
setnp
icebp
mov
daa
das
ret
je
sub
push
cmpsb
jmp
push
fbstp
xor
push
or
arpl
loop
xchg
mov
out
push
or
ljmp
div
in
push
call
xor
cmp
stc
cs
pop
cmp
adc
std
and
fisttpll
inc
ret
add
xor
ret
fldz
sbb
pop
mov
hlt
aad
repnz
outsl
imul
cmp
pushf
imul
inc
lcall
jbe
dec
in
cmp
sbb
popa
xchg
pop
cmp
mov
das
pusha
mov
stos
add
sbb
out
and
adc
imul
shlb
push
adc
les
sub
lahf
mov
push
pop
add
sbbb
divb
and
xor
jns
adc
adc
aad
jecxz
xchg
out
rclb
cmc
orb
mov
inc
jno,pt
inc
iret
push
cmp
inc
add
jns
pusha
fldt
fmuls
cmpsl
jo
out
inc
xlat
adc
shll
imulb
dec
fldcw
daa
rcrl
insb
mov
mov
test
popf
dec
lock
mov
mov
adc
cmp
sbb
push
dec
mov
lock
pop
adcl
xor
inc
in
sub
inc
push
add
dec
inc
lahf
lcall
dec
in
stos
js
pusha
idiv
jo
cwtl
pop
es
and
insb
jb
scas
cmp
or
into
jnp
cmp
addl
pushf
jb
aam
mov
rcrl
cmp
jl
das
sub
jb
daa
pop
ljmp
pop
jno
sbb
xchg
pop
push
add
push
push
push
xchg
xchg
sbb
cmp
ljmp
pop
mov
loope
movsb
mov
jle
jecxz
push
ret
adc
fimull
jge
or
pop
xchg
aam
fidivrl
jg
test
orl
or
cmp
int
sahf
sub
or
arpl
mov
pop
dec
shlb
mov
bound
jns
jne
ss
into
push
pop
mov
outsl
push
pop
outsb
xchg
jg
sub
xor
xchg
xor
jge
iret
mov
dec
fstps
push
xor
mov
adc
sbb
ja
lock
imul
jp
dec
cltd
jl
es
add
gs
adc
stos
es
loope
xchg
xorb
jecxz
xor
insl
fs
or
lds
cli
mov
std
popa
cmc
xlat
sbb
rcrl
cmp
xchg
push
jmp
lret
mov
and
adcl
int
xor
jnp
adc
sbb
push
ljmp
cmp
push
pop
out
xchg
jmp
mov
cmp
pop
test
adc
in
inc
mov
aad
movsb
fs
rorb
cmpsb
pop
add
ret
cwtl
mov
jnp
lcall
sub
pop
push
mov
and
stos
in
or
into
mov
pop
outsb
adc
inc
ret
dec
aas
sarl
adc
push
icebp
aaa
pop
xchg
jge
mov
cmpsl
fiaddl
test
scas
sbb
push
mov
add
mov
xor
jb
add
cmp
sahf
stos
and
mov
adcb
ljmp
inc
ja
mull
push
mov
mov
das
jg
pop
adc
push
cmpb
cmp
and
insb
lcall
out
inc
std
jp
pusha
pop
jno
adc
data16
pop
push
mov
mov
mov
push
das
or
addr16
add
imul
pop
sti
loope
adc
dec
xchg
cmpsb
adc
sub
add
xchg
lcall
and
add
inc
mov
sub
in
pop
jmp
cmpsl
cmc
and
push
mov
test
mov
and
mov
or
test
jp
push
leave
jecxz
je
sub
add
sti
out
jmp
pop
stos
call
xchg
sahf
adc
cmp
popa
aad
clc
sub
adc
int3
test
ret
dec
mov
cmc
cmp
std
movsb
or
jg
popa
out
dec
push
mov
add
inc
iret
inc
mov
xchg
mov
test
nop
jl
int3
icebp
aad
js
or
arpl
in
shll
or
sahf
fsub
push
and
mov
rolb
and
jp
dec
pushf
mov
xchg
notb
sub
cmpsl
jl
jle
aam
jp
fwait
test
ss
sub
scas
mov
mov
jmp
sub
out
add
cwtl
adc
or
sbb
stos
mov
mov
mov
imul
jno
push
mov
sbb
call
sub
push
sbb
fidivl
add
scas
shll
sahf
push
shlb
cmp
push
test
jb
jge
sub
adc
bound
in
ffreep
icebp
test
cld
xor
frndint
sti
ret
dec
mov
push
or
mov
xchg
addr16
cwtl
loopne
sahf
sbb
xor
inc
dec
movsl
dec
mov
pop
inc
stos
mov
in
mov
add
ret
add
in
fnstsw
rcrl
sub
js
xor
push
sub
jb
push
outsb
fdivs
cmp
cmpsb
mov
xchg
ss
jo
mov
test
repnz
addr16
mov
arpl
insl
stos
mov
mov
mov
or
or
clc
xchg
cmp
roll
lcall
pushf
pop
inc
pop
xchg
push
stos
mov
dec
clc
test
test
test
nop
sti
jb
and
mov
scas
push
jne
xor
pop
add
cwtl
test
repnz
lea
outsl
and
out
mov
add
add
insl
mov
addr16
insl
cli
sub
pop
test
xor
mov
mov
add
sub
mov
popf
inc
jns
leave
call
dec
xor
inc
ficomps
clc
out
inc
fdivrp
xchg
or
out
jbe
xchg
and
dec
mov
mov
jns
test
pop
mov
dec
lds
cli
es
mov
push
jo
add
sub
pop
idiv
or
push
rclb
jge,pn
js
add
pusha
or
aas
mov
mov
imul
addl
mov
fimull
cmp
push
jnp
mov
sahf
mov
pop
push
cli
inc
fsub
pop
dec
mov
lret
sub
out
ljmp
shll
cmp
adc
xlat
mov
push
sbb
clc
lcall
mov
and
xchg
or
push
mov
clc
jg
je
jae
adc
or
jne
in
call
movb
int
inc
or
mov
push
sarb
test
nop
sbb
push
out
stos
aam
js
sub
mov
cmpb
mov
adc
out
pop
test
stos
mov
push
sti
ja
pop
adc
pop
cmp
stos
ds
push
mov
sbb
or
aam
lock
inc
cld
leave
and
lock
jp
not
rcll
xchg
push
mov
jmp
push
cmp
mov
shrl
popa
jo
repnz
aas
pop
fimull
xchg
sbb
lret
pxor
out
xchg
sarb
xor
jbe
mov
add
xchg
jae
dec
gs
push
mov
xchg
push
sub
and
lahf
loop
xor
inc
pushf
inc
js
or
sub
repz
je
sbb
push
xor
and
les
or
ss
mov
out
sbb
jae
pop
out
cmp
shrl
hlt
test
icebp
jnp
out
daa
mov
jns
sub
mov
xor
inc
mov
inc
add
xchg
scas
daa
cltd
scas
fldcw
outsb
push
ret
repnz
arpl
neg
inc
lcall
scas
xchg
cmp
fucomi
cmp
sub
jns
inc
std
sbb
adc
les
cld
popf
cmpsb
test
aam
mov
jecxz
add
ja
add
mov
insl
and
flds
push
and
mov
jmp
inc
xchg
call
int3
in
inc
movsb
sub
popf
movsl
mov
test
mov
push
sbb
ret
test
push
shrl
insb
icebp
popa
push
stos
out
push
push
in
fldcw
scas
and
mov
pop
add
ud2
xor
sbb
dec
mov
mov
stc
mov
inc
xchg
push
outsl
gs
sbb
jecxz
xor
faddl
dec
mov
cld
jne
jmp
fcmovu
std
cld
in
shll
ud1
dec
inc
xchg
iret
arpl
js
mov
sti
pop
es
lea
inc
xchg
inc
into
jge
pop
cmp
mov
lahf
lds
push
fwait
mov
or
xchg
and
xchg
pop
fisttpll
jne
adc
ds
ss
data16
lock
or
inc
insb
push
lea
jl
sbb
ss
mov
sti
mov
out
inc
sti
xchg
sub
stc
dec
xor
cmp
jg
hlt
inc
xorl
ret
loop
sbb
xchg
aam
std
and
je
sbb
ret
jnp
mov
xlat
xor
adc
ja
xor
in
gs
bound
idivl
dec
cli
sub
ljmp
in
testb
mov
xchg
sbb
fcmovnb
test
mov
cwtl
test
mov
adc
push
jnp
and
repz
daa
test
mov
dec
das
scas
loop
add
xchg
dec
sahf
inc
scas
mov
js
jb
inc
push
call
xor
xor
pop
std
adc
dec
test
sub
sbb
add
or
adc
scas
mov
sub
testb
mov
mov
xchg
push
jbe
mov
mov
adc
rorl
adc
and
pusha
inc
xor
mov
sarb
adc
mov
scas
pusha
xor
pop
in
leave
imul
dec
jnp
int3
in
leave
xor
cmpsl
sbb
pop
loopne
sahf
test
shr
jle
addr16
and
scas
aad
mov
mov
fisubrs
out
les
fcompl
add
mov
hlt
inc
sbb
pop
dec
cltd
lcall
sbb
inc
ret
adc
bound
add
aaa
cmp
mov
xor
adc
push
addr16
scas
push
sbb
push
jecxz
jns
sub
dec
fisttpll
aad
or
les
sbb
xor
jbe
cltd
fdivl
jbe
mov
into
sub
mov
mov
sub
pop
dec
leave
sti
test
or
lods
add
sbb
mov
jmp
fsts
mov
jge
sbb
mov
add
adc
out
ljmp
repnz
es
mov
imul
fcmovu
inc
xor
or
mov
stos
test
les
test
adc
sbb
js
outsl
rclb
sub
push
mov
hlt
ss
fnsave
inc
and
mov
mov
pop
jmp
push
inc
jle
loope
mov
cmp
inc
loop
mov
aaa
mov
mov
inc
enter
sarb
mov
jmp
lods
add
cli
or
test
ret
int
xchg
push
sbb
outsl
fwait
push
sar
int
add
arpl
or
test
or
push
jo
gs
repz
or
into
jae
dec
fcoml
inc
bound
sbb
clc
and
or
jae
pop
pop
ss
and
pop
mov
pop
mov
cwtl
inc
into
sub
mov
psrlw
clc
jno
fwait
push
xchg
rorb
or
pusha
dec
fwait
xchg
pop
pop
push
lds
push
or
lds
cmp
ja
daa
dec
xor
sbb
aam
push
movsl
sbb
insl
ficoms
les
pushf
bound
test
sbb
rcll
pusha
jns
cmpsl
fdivrs
popa
ss
cmp
jno
cli
jbe
cli
popa
xor
add
pusha
cmp
xchg
insl
outsl
push
lret
daa
mov
sub
movsb
fs
mov
add
sub
add
cmpsb
cmp
pusha
dec
popf
and
notb
lret
pop
mov
int
bound
inc
sbb
dec
mov
xchg
lds
sbb
fwait
cmp
jno
icebp
fwait
and
push
jmp
jg
repnz
xor
push
fdivrp
sub
xor
or
jns
jno
jmp
nop
mov
and
into
mov
add
pop
jg
je
mov
pop
xchg
mov
fistpl
mov
and
jb
mov
inc
in
mov
mov
pop
sub
lahf
jne
inc
xor
pop
mov
stc
ret
out
and
movsb
adcl
fildl
aad
cmp
in
and
nop
inc
lret
out
call
sbb
repz
cmp
movsb
js
stc
sub
notb
mov
cbtw
imul
std
movsb
mov
loope
hlt
xchg
xor
mov
add
out
adc
mov
fidivrs
push
xor
mov
in
mov
pop
leave
mov
scas
xor
jno
inc
lcall
clc
sbb
mov
adc
scas
in
dec
sbb
or
mov
js
hlt
push
push
in
ret
daa
icebp
dec
mov
mov
dec
lret
add
jns
sbb
sbb
pop
in
cmc
or
ret
cltd
cltd
sti
push
aaa
xchg
mov
repz
cld
mov
iret
add
or
pop
push
int3
scas
popa
cmp
rcrl
inc
pusha
lret
scas
std
hlt
or
mov
sarl
inc
lret
lcall
jp
cltd
cmp
or
aas
dec
and
int3
lods
jo
arpl
sub
popa
insb
lock
lock
inc
xchg
mov
fwait
out
repz
fwait
test
inc
pop
dec
mov
movsb
jp
sub
cs
dec
imul
pop
dec
lds
mov
xchg
mov
jge
mov
jecxz
insb
xorl
inc
pop
cmp
xchg
out
pop
orb
iret
lret
cs
adc
mov
or
call
sub
int
ljmp
push
push
popf
dec
int
je
push
das
rolb
mov
cmc
push
mov
dec
xor
add
and
idiv
test
ret
push
aam
dec
inc
cmpsl
rorl
subb
dec
pop
es
scas
cmc
loope
inc
pop
aam
xorb
mov
fadds
andl
out
mov
sub
lea
pop
or
jl
idivl
push
mov
and
ljmp
aam
repz
das
cmp
lret
inc
je
jns
mov
js
adc
cmp
lahf
sbb
sbb
push
mov
out
add
mov
loope
jmp
hlt
and
test
sbb
popa
stos
in
xor
or
in
test
loop
das
sub
fldcw
cmp
test
mov
mov
insl
test
jo
popf
xchg
cmp
dec
add
clc
add
movsl
adc
pushf
add
or
mov
rcr
loop
lcall
mov
je
xor
dec
adc
cmp
adcl
push
jle
add
mov
or
jb
nop
jno
ficoms
mov
pusha
mov
push
or
pop
mov
test
mov
adc
jp
lcall
imul
xchg
push
daa
lcall
fstps
push
sbb
push
repnz
adc
jge
into
imul
mov
pop
mov
test
add
dec
js
fdiv
imul
outsl
daa
dec
lahf
push
jns
push
loopne
sub
add
test
into
jbe
add
sti
cs
dec
jb
sar
xor
rcr
mov
test
adc
sub
dec
ljmp
repnz
scas
sbbl
cmp
push
pop
in
scas
cmp
sub
jge
jno
orl
jno
add
repz
sbb
xchg
out
mov
xchg
sbb
jns
xor
adc
lock
loopne
push
add
outsl
faddl
std
push
test
incb
pushf
xchg
in
in
cmp
add
and
cld
mov
cs
incb
pop
and
xchg
dec
outsb
inc
imul
xchg
in
std
addr16
popf
stos
call
pop
test
cs
movsl
cmp
or
mov
loopne
push
in
in
adc
shll
push
dec
loope
pop
fbstp
subb
loop
cmp
cmp
push
mov
xor
fs
xor
daa
sbb
call
add
pop
sub
cld
xor
sbb
push
and
jmp
push
rcrb
bts
sbb
or
scas
inc
cs
mov
aas
ret
jae
push
jge
mov
aam
enter
mov
push
and
call
jb
push
mov
and
push
mov
push
mov
fstpt
sub
adc
cltd
pop
inc
mov
adc
mov
call
xchg
outsb
mov
pop
or
dec
test
cli
imul
jmp
sub
adc
sub
sti
subl
push
clc
add
add
push
inc
test
xchg
loopne
int
sbb
or
cmc
push
mov
pushf
arpl
jp
testl
lret
jae
test
in
jbe
push
jns
mov
subl
popa
cmpsb
dec
push
insb
mov
sbb
icebp
inc
dec
xchg
pop
adc
push
mov
and
inc
dec
mov
call
xchg
jmp
mov
sbb
pop
dec
mov
lods
pop
addl
xor
stos
data16
push
fadd
in
movsbl
inc
data16
aaa
push
stc
mov
rorl
mov
lock
cs
aam
out
dec
ror
outsl
shll
sub
fistps
cmp
and
out
cmp
hlt
cli
popa
or
push
pop
das
hlt
add
add
mov
repz
loopne
clc
inc
pushw
xor
inc
arpl
mov
shll
popf
mov
mov
int3
bound
shll
push
sbb
xchg
test
lcall
mov
or
jmp
cmc
imul
roll
jecxz
ret
mov
cmpxchg
es
push
xchg
mov
test
jg
les
scas
xor
aaa
xor
mov
lods
xchg
dec
sar
shl
sbb
and
hlt
pop
mov
pop
stos
mov
adc
push
mov
outsb
adc
jle
inc
and
xchg
xor
subb
xchg
imul
mov
out
mov
jae
xor
jbe
cmp
iret
mov
sbb
sbb
outsl
sbb
push
das
sub
scas
xor
negb
mov
xchg
xchg
add
test
adc
mov
mov
jg
stos
pop
cmc
fs
mov
stos
jge
or
push
aaa
inc
out
testl
xor
lds
call
flds
mov
enter
mov
cltd
clc
fdivs
cwtl
iret
inc
mov
cmp
andl
jg
rolb
imul
jmp
cmpl
fcomps
cmp
pop
or
adc
les
xor
dec
and
cmpsb
lds
hlt
inc
cmc
stos
out
jnp
out
jae
mov
testl
ja
cwtl
test
sub
sbb
addr16
jmp
xchg
or
loope
int3
xor
or
mov
pop
pop
lea
and
and
ret
cltd
scas
mov
add
adc
adc
mov
and
pop
jecxz
pop
enter
stc
fnstcw
out
insb
insb
dec
nop
addr16
movsl
pop
sbb
es
rclw
stos
aad
leave
jb
sbb
rcll
add
mov
insb
sub
mov
outsb
and
nop
push
xor
xlat
pop
dec
jns
in
in
mov
push
mov
fidivl
and
push
xor
cmp
adc
lcall
rolb
inc
cltd
jge
movsl
insl
repnz
xorb
loopne
pop
mov
mov
pop
nop
jg
fs
inc
mov
test
inc
jmp
lea
sbb
cmp
xor
jo
sbb
mov
dec
sbb
mov
aam
out
ret
daa
jne
hlt
cmp
pop
lcall
sti
sub
icebp
out
xchg
test
insl
pusha
cli
sub
in
mov
mov
add
add
fwait
mov
call
pop
pop
and
mov
call
fs
test
cli
or
and
sub
mov
or
mov
nop
orl
pop
push
ja
add
shrb
mov
inc
enter
ljmp
mov
retw
loopne
das
mov
mov
test
das
or
popf
add
inc
movd
mov
sub
jne
movsl
push
jns
das
cmp
call
insl
lahf
pop
test
aam
stos
jl
xchg
lock
xor
and
adc
aad
popa
mov
jns
insb
pop
add
sub
pop
push
inc
nop
pop
jl
das
imul
xor
and
je
repnz
out
pop
pop
cld
inc
sbb
xchg
iret
stos
iret
push
inc
cmp
das
mov
pop
adc
fistpl
pushf
dec
cs
xchg
sti
hlt
or
hlt
int3
jl
xor
add
push
xor
pushf
sub
dec
xor
insb
test
sti
dec
inc
jge
pop
mov
pop
push
loope
dec
ficoml
cmpb
or
lods
fidivrl
dec
fcmovu
push
sbb
mov
les
or
dec
loopne
add
jmp
cs
popa
sub
mov
mov
or
pushf
inc
jbe
ret
ds
mov
mov
mov
stos
ss
ds
les
push
inc
inc
mov
mov
jnp
sbb
pushf
scas
scas
cwtl
aas
ss
cltd
push
lea
xor
pop
and
adc
mov
out
enter
push
mov
in
add
push
es
cmp
push
inc
sti
je
mov
mov
jae
pushf
fs
mov
cmpsl
call
lods
outsl
shlb
jmp
imul
cmpsb
adc
pop
in
add
enter
orl
sti
int3
fistl
sbb
dec
ds
pop
int
inc
fsubr
es
cmpsb
sbb
faddl
mov
into
pusha
imulb
push
test
sar
cmp
repz
movsl
push
clc
aad
pop
sbb
jno
push
into
push
or
adc
sarl
push
pop
nop
aaa
clc
inc
je,pt
into
call
jne
push
dec
mov
addl
or
add
aas
jg
mov
in
repz
pop
xchg
inc
divb
loope
arpl
xlat
pop
adc
add
stos
pop
pop
cmp
jno
leave
icebp
push
jb
mov
in
adc
cli
andb
cmp
lahf
xor
adc
nop
rorl
ds
enter
nop
arpl
sbb
jp
imulb
mov
pop
add
es
xchg
sub
adc
jo
pop
sub
lahf
arpl
cmp
mov
int3
test
jge
or
jp
fimuls
or
shll
ds
mov
incl
push
jbe
mov
add
clc
push
sbb
push
pushf
arpl
test
push
add
inc
mov
aam
mov
ds
aas
mov
mov
fisttps
sbb
pop
adc
cs
stc
adc
sub
bound
adc
push
imul
mov
movsb
stos
stos
outsb
int3
push
cli
fistpll
shlb
adc
xor
pop
mov
lahf
inc
pop
insb
or
hlt
jl
popf
inc
push
lock
notb
mov
lret
lds
fistpll
stos
pop
add
stos
xor
and
mov
jg
stos
pop
or
xchg
mov
mov
enter
lcall
rolb
stos
ja
in
popf
sarb
push
mov
jnp
loopne
inc
jmp
push
popf
test
shll
andl
fsts
je
leave
dec
push
push
lcall
pop
dec
testl
sarb
pop
gs
inc
push
xchg
sahf
push
sub
mov
cmp
fisttps
inc
test
sbb
add
push
and
in
icebp
loope
sti
xchg
call
cmp
lret
push
leave
or
sbb
flds
cmp
sbb
flds
cmc
packssdw
add
or
cwtl
sub
shrl
jp
mull
cmp
loope
inc
jo
pop
bound
dec
pop
adc
lret
xor
adc
push
js
adc
mov
das
ffreep
jb
call
in
iret
pop
popf
in
mov
xlat
lret
mov
nop
inc
or
jo
xor
jo
push
int3
cli
mov
mov
enter
imul
dec
sbb
popf
insl
push
scas
xchg
loopne
pop
lcall
mov
cmp
lock
outsb
xor
sub
lcall
mov
out
jb
dec
out
jge
imull
jl
mov
aas
jne
sub
dec
lea
test
xor
jnp
xchg
pop
sbb
pop
inc
jnp
mov
inc
nop
hlt
jbe
lods
or
adc
adc
mul
daa
adc
adc
dec
lds
in
jle
xor
inc
imul
push
and
lret
loop
out
repz
pop
cwtl
cwtl
or
stc
cmp
jne
scas
xlat
cwtl
mov
add
push
push
dec
pop
jp
lret
cmp
cmp
dec
pop
cld
and
push
mov
push
data16
roll
jo
loop
jp
or
inc
dec
ds
sbbb
pop
scas
fmull
gs
int
pop
xchg
loop
cmpsb
into
cs
ds
cmp
dec
inc
lahf
inc
js
pop
add
pop
or
jecxz
dec
out
xor
add
sbb
lret
adc
xlat
mov
popf
inc
mov
lret
or
jl
cmp
cltd
jns
jge
data16
inc
and
and
adc
xor
popa
mov
popa
jmp
inc
and
xchg
inc
insl
mov
repnz
inc
add
and
mov
test
shrb
cli
fs
or
pushf
jg
xlat
and
xor
sahf
pop
stc
mov
inc
mov
imul
mov
mov
push
push
cs
insb
outsb
pop
mov
in
call
mov
push
test
sbb
in
movsb
cmpsl
fistpl
sub
test
inc
inc
fistpl
shl
xor
xchg
mov
popl
int3
loopne
or
movsl
mov
movl
int
into
sbb
adc
pop
ja
jg
stos
dec
scas
fldpi
push
je
cmpsb
lds
sub
test
pop
mov
pusha
hlt
push
xchg
inc
fbstp
sbb
cmp
test
inc
sub
int3
fcoms
lock
lret
jnp
les
xor
sbb
jne
add
inc
sbb
int
push
ljmp
mov
repz
cwtl
xchg
fisubs
out
mov
mov
xchg
iret
add
cmp
inc
jno
es
int3
je
jo
addr16
jmp
jmp
xchg
lret
mov
rep
jmp
pop
arpl
push
cs
inc
sahf
cmp
adc
sbb
pop
ss
sbb
or
jmp
ja
cwtl
xchg
rol
mov
ja
subl
dec
mov
cltd
inc
cmpb
xchg
xchg
mov
mov
ljmp
fldl
mov
sbb
sbb
pop
lea
or
nop
and
jle
dec
xor
push
pop
push
test
dec
sbb
mov
js
inc
mov
mov
testl
pop
sub
jno
iret
add
jne
cmpsb
mov
cmp
xchg
xor
std
mov
xchg
or
xchg
lea
roll
loope
sbb
movsb
and
outsl
xlat
outsb
push
stos
popa
sahf
scas
jbe
mov
or
repnz
scas
jle
adc
imulb
insb
mov
lods
xchg
jb
dec
adc
cwtl
jnp
ret
addr16
mov
testb
mov
and
adc
hlt
pop
mov
lock
xchg
aam
push
imulb
or
jo
pop
and
jns
dec
clc
test
stc
push
mov
and
scas
js
std
insb
jg
mov
jmp
scas
sbb
rorl
fnsave
pop
pushf
xor
adcl
mov
push
mov
lcall
xor
fscale
adc
mov
push
out
mov
dec
jecxz
fdivrl
je
hlt
fistps
inc
fildll
mov
inc
jp
xchg
iret
xlat
rcr
xor
inc
xchg
pop
fmuls
jb
add
jp
mov
mov
pop
push
ljmp
pop
add
adc
jl
dec
jb
push
xchg
fimull
push
movsl
and
cmpsb
cmp
scas
pop
mov
lds
pop
in
xchg
aad
push
test
lds
sub
js
outsb
out
icebp
cld
adc
or
push
push
pusha
inc
or
sub
jbe
inc
or
std
push
push
ficompl
in
pop
sub
adc
sub
jge
add
popf
sti
push
imul
lcall
aam
fcmovbe
or
inc
fisubs
iret
dec
and
jg
push
push
add
add
loop
daa
in
cmp
je
mov
sbb
insb
in
movl
cltd
pop
push
stos
mov
outsb
adc
lcall
jl
stos
in
jmp
test
xchg
fst
mov
xor
or
les
gs
shll
out
add
push
shll
xor
jge
loope
test
xor
mov
imul
fnsave
sub
aad
out
push
arpl
movsb
out
xor
dec
cmp
fs
cmp
and
jp
arpl
jle
lret
xchg
push
or
pcmpeqw
mov
iret
xor
xchg
in
ds
pop
push
sbb
jecxz
lea
notl
and
push
add
fs
insl
or
fistpl
cmp
hlt
add
xor
ds
sub
sub
add
rorl
dec
xchg
mov
mov
or
imulb
gs
xchg
outsb
movsl
adc
ror
pusha
xchg
add
gs
out
jg
jbe
lods
pop
and
fcomps
movsb
or
insl
das
std
nop
cltd
dec
mov
lahf
mov
cmpsb
add
test
js
jns
mov
sar
pop
hlt
pop
outsb
rcrl
xor
sbb
ds
mov
les
aad
jecxz
xchg
cmp
and
lock
mov
pop
add
mov
inc
sbb
into
mov
mov
adc
shlb
xor
repnz
cmpsl
test
mov
adc
rcll
dec
cmp
cmc
fisubrs
fstpl
and
arpl
shll
jnp
cs
pop
dec
dec
adc
and
dec
fwait
shrl
daa
lods
mov
xor
insl
xchg
nop
pop
mov
scas
movsb
jbe
sbb
enter
or
std
negb
mov
pusha
push
fldcw
push
xchg
ret
lock
pop
test
add
jns
fs
or
js
push
adc
sbb
arpl
pop
int
loope
cs
loopne
and
lret
adc
movsb
jmp
pop
ja
inc
test
stos
jl
mov
mov
pop
mov
mov
mov
sti
in
sbb
sbb
cmp
les
int3
or
and
fistl
cmp
inc
popf
adcb
adc
test
add
dec
adcb
pop
mov
addl
push
adc
pusha
daa
movsl
shl
inc
frstor
loopne
sub
jg
stc
push
cmp
ljmp
mov
int
push
lret
xchg
or
pusha
inc
out
shrl
data16
faddl
in
cmp
ja
adc
adc
int
stos
fisubrs
sub
add
lahf
mov
into
push
dec
das
or
in
out
xor
movsl
sbb
and
mov
cwtl
sub
inc
cmp
add
fsubs
dec
scas
xor
arpl
mov
mov
add
cmpsb
aad
inc
xor
insb
push
dec
bound
dec
or
aam
aas
xchg
test
imul
jg
adc
cmp
sub
mov
aad
loopne
and
jno
push
xor
mov
cmp
fsincos
push
mov
cmpsb
inc
lds
ljmp
jno
ss
test
pop
xor
cmp
adc
xor
sbb
test
in
pop
mov
and
jmp
cmp
repnz
imul
sti
data16
push
negl
ror
push
jne
shrl
mov
fs
dec
in
jle
jmp
and
lcall
pushf
movb
dec
mov
movsl
cmpsb
pop
pop
popl
test
adc
clc
push
pop
jo
gs
into
int
push
addr16
cmpsb
js
mov
callw
rep
fwait
dec
push
jo
lds
pop
dec
sub
icebp
inc
jae
push
imul
cld
dec
cltd
fldl
mov
stc
ljmp
cs
cmpsb
fsubrs
ficoml
or
ficoms
stos
pusha
jecxz
dec
sbb
das
xchg
sbb
mov
xor
pop
push
xchg
outsl
or
scas
push
loope
je
mov
dec
mov
xchg
push
dec
and
push
dec
stos
push
aas
jl
rcll
pop
cmpsb
hlt
lret
jg
gs
dec
inc
sub
jo
inc
nop
cltd
stos
inc
xchg
jge
pop
sbb
ljmp
adc
mov
shrl
pop
test
mov
inc
ja
mov
cs
sbb
dec
out
bound
rorl
sbb
loopne
adcl
cli
sbb
cs
xchg
push
or
dec
add
inc
mov
test
pusha
out
cmpsl
sub
fwait
movb
add
mov
sbb
stos
dec
test
xchg
cmp
push
push
stos
scas
add
xchg
addr16
jge
pop
fstpl
in
adc
arpl
cmp
xchg
xor
pop
cmp
pushl
push
mov
ret
into
lea
push
ret
xor
mov
int
nop
and
inc
notl
push
mov
aam
es
xchg
inc
punpckldq
call
aas
dec
inc
xor
pop
jle
nop
inc
sub
into
loop
dec
cmpsl
dec
popf
sub
xchg
adc
pop
pop
test
cli
jl
lahf
idivb
xchg
xchg
push
xor
mov
out
addr16
ja
xchg
test
jge
mov
daa
mov
push
fcmovne
mov
inc
sub
lods
aam
xchg
lcall
loop
divb
pop
iret
cmpsl
mov
idiv
sbb
stc
mov
jb
arpl
int3
mov
es
stc
int3
cmp
subl
dec
or
data16
push
or
mov
popa
push
ret
or
ficompl
cmp
xchg
push
test
pop
jp
adcl
add
call
and
pop
cmp
pop
adc
dec
test
jle
adc
lods
push
aaa
xchg
scas
jns
adc
adc
or
add
xchg
push
movsb
jmp
jo
jp
jne
push
sbb
inc
cmpsb
mov
jmp
cmp
into
adc
orl
adc
jmp
dec
xor
and
cmc
scas
push
imul
mov
fildl
cmp
sub
xchg
jnp
adc
movsl
mov
mov
ret
xlat
push
cmp
adc
xor
cld
sbb
filds
and
cmp
int
adc
cmp
adc
or
jg
lods
xchg
mov
jecxz
sub
rorb
hlt
data16
sbb
sub
push
movsb
lret
aaa
andb
add
cmp
xlat
or
pop
or
in
xchg
or
xchg
lret
jp
pop
pop
ret
adc
fiadds
cwtl
daa
ret
dec
fwait
aas
fdivr
and
and
ds
out
loopne
in
in
sahf
or
lock
add
test
inc
dec
xlat
sarb
in
ret
dec
sub
pushf
test
jnp
je
dec
rolb
lods
in
mov
or
push
fisubrl
out
mov
icebp
fisubl
inc
cmc
lahf
jl
jbe
xor
call
cltd
dec
bound
inc
mov
ror
pop
ss
mov
clc
jmp
jnp
mov
jnp
mov
in
pop
lock
and
mov
push
push
inc
cmpsl
sub
cmp
pusha
mov
sbb
and
pop
or
adc
cmp
sbb
mov
rcr
scas
push
sub
xchg
ret
pop
lret
jle
xchg
cli
fmull
ret
daa
cltd
enter
mov
pop
rolb
test
jge
imul
fstpt
in
mov
cmc
pushf
pop
idivl
jmp
jb
pop
inc
ret
fisttpl
shlb
pop
pop
dec
sbb
cmp
clc
adc
stos
add
pop
add
inc
mov
in
mov
pop
fcompl
into
push
xchg
push
or
adc
nop
lret
adc
jnp
adc
sub
inc
outsb
nop
aam
out
push
mov
shr
pop
mov
pop
xchg
cmp
lds
scas
imul
push
dec
stc
lcall
xchg
rorl
mov
mov
mov
pushf
push
arpl
cmovo
add
xchg
dec
jo
jge
rcll
js
ja
push
popf
xchg
fisubl
pop
adc
data16
nop
mov
or
or
and
out
mov
cwtl
dec
test
dec
sub
out
das
sub
leave
into
cmpsl
pop
je
into
aaa
rclb
repnz
pop
cmp
movsl
popf
dec
sbb
adc
xchg
cmc
lock
push
lcall
xchg
das
pop
sub
sub
push
mov
mov
mov
jge
gs
push
add
dec
mov
iret
push
inc
jns
fldcw
ficomps
inc
or
sbb
repz
mov
mov
pop
sbbb
lods
sarb
dec
cmp
loopne
mov
aam
clc
jp
mov
pop
add
dec
jle
iret
in
cmp
divl
divl
mov
and
jb
pop
push
dec
mov
rcl
push
dec
in
pushf
sub
or
pop
mov
or
adcl
imul
dec
stos
into
xorl
les
mov
mov
and
cltd
mov
out
das
jecxz
hlt
sahf
mov
push
data16
ja
mov
dec
xchg
xlat
mov
jns
inc
aam
leave
jl
cmp
sbb
mov
xchg
lds
call
cltd
ljmp
out
divl
movsl
xchg
aam
jne
adc
movsb
js
xor
out
cmpsl
stos
or
fnop
and
sbb
aaa
mov
mov
popa
mov
test
push
ds
jne
mov
and
lock
aad
mov
and
cmp
out
push
pop
bound
in
mov
xchg
rol
jmp
inc
decb
or
jg
mov
in
addr16
jb
aam
push
int
mov
aad
pushf
cmp
mov
fimuls
cmpsb
push
test
pop
and
push
aaa
ljmp
pop
and
xchg
fdivrs
jbe
rcrb
mov
inc
adc
cli
clc
inc
cmpsl
addr16
in
inc
cmp
sub
dec
pushf
or
imul
xlat
cli
shlb
pushl
xlat
hlt
cltd
ss
pop
int3
std
test
xlat
xchg
into
xor
stc
mov
lods
neg
inc
lcall
aaa
inc
xor
dec
xchg
mov
or
dec
jne
sbb
fwait
shlb
insl
loope
sub
jb
xchg
rcl
xchg
lahf
fs
xorl
push
ljmp
mov
rcll
mov
add
cwtl
mov
cmp
jne
lcall
pop
insb
or
or
in
xchg
in
bnd
out
clc
insl
and
jecxz
jmp
mov
xchg
xor
dec
add
mov
repz
sbb
aad
add
sbb
lret
mov
jns
shlb
xor
divb
jmp
sti
push
leave
mov
imul
mov
pop
cmp
int
and
aaa
inc
jne
dec
mov
subl
mov
inc
icebp
sbb
push
pop
rol
mov
call
cmp
cmp
jnp
push
jmp
mov
inc
in
or
and
mov
clc
ds
popa
into
outsl
outsb
jno
mov
in
pop
xor
call
dec
sub
jmp
mov
cmp
or
sahf
and
std
sbb
fdivp
notb
rcrb
pop
pop
jb
je
push
aam
adc
pop
xor
cld
cmp
mov
daa
roll
xchg
push
push
pop
mov
inc
pop
movsl
mov
rcrb
popf
call
adc
push
in
adc
enter
mov
jns
outsl
sahf
fcomp
ljmp
jb
add
fwait
inc
out
sbb
fstl
sub
mov
pop
cwtl
sub
pop
jne
add
dec
mov
jbe
xor
mov
sub
out
dec
sub
sub
jg
jmp
lods
add
jmp
mov
mov
cmp
loop
out
cmp
or
dec
cmpl
mov
lret
inc
pop
or
imul
push
adc
cmp
xchg
lock
xor
mov
add
mov
jb
in
jo
adc
test
cmp
ret
ja
incb
or
emms
aad
andb
cmp
test
cli
in
in
xchg
or
add
mov
xchg
inc
jmp
push
push
sarl
push
test
mov
or
shll
scas
dec
dec
sbb
xchg
lret
cmpsb
lahf
lret
mov
mov
cmp
or
jmp
sub
mov
add
enter
out
iret
lahf
xor
sti
pop
sub
add
xchg
mov
xchg
insl
pop
cli
cmp
fnstsw
xchg
ja
ja
outsb
sub
imul
cmpsb
xor
mov
cmc
es
ja
daa
mov
mov
repz
mov
and
or
adc
bound
mov
cmc
xchg
xchg
movsb
dec
ret
mov
ljmp
pop
mov
inc
cmp
dec
pushf
movsl
call
in
ljmp
rolb
popa
adc
cmpsb
mov
mov
cmpb
xor
mov
aam
mov
jne
pop
add
stos
outsb
jne
mov
mov
xorl
dec
mov
test
xchg
add
xor
dec
sbb
mov
pop
push
pop
or
xor
jae
xchg
jge,pt
les
add
sbb
in
mov
sub
adc
pop
jnp
ret
push
push
cwtl
in
cmc
iret
sub
jmp
repz
mov
mov
std
mov
popa
stc
sub
dec
aad
movsb
sbb
jl
lods
loope
pop
dec
xor
or
hlt
add
xchg
jmp
loopw
inc
jo
int
mov
imul
jle
add
fadds
and
sbb
inc
test
xchg
mov
not
push
cs
leave
inc
mov
das
test
push
mov
imul
iret
inc
xchg
jbe
xor
xor
push
cltd
lahf
inc
xlat
cmp
in
cltd
movsl
and
aad
lock
in
ja
cmp
jne
ja
js
jmp
cmp
outsl
xchg
sbb
jae
fdivs
pop
scas
pop
lea
imul
cmp
mov
clc
xorb
xor
mov
mov
sub
hlt
adc
gs
test
xchg
xchg
mov
jl
dec
iret
lea
push
ficoml
sub
cmc
cmpsb
mov
sub
test
dec
test
clc
jo
stc
jl
push
aaa
sahf
leave
cmp
or
fnstsw
jg
jnp
jne
xchg
negl
mov
out
jne
mov
dec
inc
cmp
xchg
inc
push
aas
shl
cmp
xchg
loop
jg
test
in
fwait
mov
push
es
ret
xor
mov
pop
cmpsb
cwtl
mov
repnz
inc
cmpsl
shll
lea
mov
faddl
out
nop
or
clc
clc
inc
lret
test
xchg
in
mov
lcall
cmp
enter
mov
shlb
or
mov
dec
clc
mov
pop
add
adc
xor
pop
rcl
leave
roll
arpl
push
and
test
rcrl
pop
mov
mov
outsl
or
cmp
repz
nop
pushf
adc
inc
cmp
and
nop
adc
jns
aad
iret
test
or
shlb
fisttps
loope
or
mulb
add
mov
fists
shlb
fisubl
movsl
inc
not
ja
scas
jne
mov
ret
adc
cs
and
mov
loope
cli
out
add
loop
ret
push
or
mov
dec
push
jg
mov
cmpsb
jbe
and
adc
iret
mov
mov
push
lods
popa
cmpb
pop
fucomi
and
mov
sbb
cmp
sub
jecxz
xchg
or
aaa
insb
rcrb
xchg
ds
xchg
imul
xchg
imul
mov
or
cmp
iret
ds
jp
sub
mov
in
lds
adc
sub
jle
pop
aas
addl
sub
xlat
adc
scas
xchg
lock
xor
dec
insl
rorl
or
push
fldenv
and
jbe
divl
mov
imul
or
mov
sub
lods
cltd
jns
sub
push
xor
mov
sti
pop
imul
inc
in
inc
ja
lods
and
push
in
xor
adc
sub
push
jg
sarl
dec
mov
fidivrl
xchg
aas
pop
mov
sbb
cli
push
testb
pusha
cwtl
insl
iret
rcrb
dec
fdivl
ret
mov
out
js
aam
add
ret
arpl
pushf
inc
leave
mov
push
in
je
out
testl
mov
push
call
std
fisubrl
cmp
pop
mov
shrb
rclb
cmc
shll
es
lahf
sbbb
xor
adc
divl
mov
adc
stos
adc
sbb
lret
adc
out
and
inc
dec
pop
push
mov
fnsave
xchg
push
paddsb
clc
inc
push
and
mov
pop
imul
ljmp
mov
xor
pop
out
push
inc
into
leave
adc
scas
ret
inc
cmp
call
jmp
fnsave
mov
movsb
mov
mov
mov
daa
xchg
roll
cmc
test
pusha
add
shlb
cmp
or
lods
jp
aad
cmp
mov
lods
pop
pop
sbb
dec
mov
scas
adc
ljmp
shlb
sbb
divl
mov
pop
xor
jbe
call
popf
xchg
push
sbb
mov
xchg
lods
cmp
sub
adc
daa
push
call
sti
mov
iret
xchg
out
popf
sub
inc
jmp
lahf
sbb
xor
imul
xchg
popa
das
and
jbe
nop
mov
cli
push
testb
std
cli
shlb
int
movsb
mov
xchg
push
inc
and
in
xchg
mov
scas
adc
clc
cvtps2pi
adc
jmp
int
inc
adc
sbbb
xchg
sub
mov
cmpsl
sbb
addr16
xchg
sub
cltd
gs
lret
aam
lahf
lock
dec
jle
xchg
xchg
pop
out
jno
xchg
inc
dec
test
dec
subl
sbb
js
gs
dec
cmp
loope
rorl
mov
and
data16
cmpsl
cmp
mov
loop
dec
pushf
mov
fucomp
push
int
imul
jns
or
mov
in
testb
push
rol
push
in
popa
sbb
dec
in
push
jae
iret
ret
or
xor
jb
push
lods
shl
es
add
stc
loop
jecxz
mov
into
mov
cmp
jae
jge
dec
lea
mov
cs
loopne
xchg
cmp
mov
loope
inc
sbb
xor
add
pushf
and
add
scas
xchg
sub
cwtl
pop
mov
xor
sub
shll
mov
or
inc
addb
movb
aas
jno,pn
cmc
or
lcall
xchg
jecxz
jne
popa
cmp
lds
mov
outsb
lds
jne
jb
shlb
loope
fwait
and
push
ret
pop
mov
or
js
xchg
nop
cmp
aaa
add
mov
cmp
sbb
adc
sti
out
pop
movsl
shrl
addl
repnz
dec
inc
insb
and
insl
notb
mov
add
rclb
movsb
popa
mov
add
mov
push
and
push
push
les
stos
cli
jo
mov
or
jmp
xor
dec
push
inc
mov
inc
mov
mov
inc
mul
fsubs
add
and
jmp
push
mov
cmp
xchg
xchg
mov
xchg
add
mov
call
xor
sbb
push
clc
leave
jo
mov
dec
jb
lahf
push
mov
xchg
dec
pop
cmp
sbb
mov
cltd
add
mov
mov
sub
xchg
imul
ja
std
lock
jo
fsubrs
repz
adc
mov
cmc
jnp
inc
aaa
leave
adc
movsl
sbb
aas
xor
js
shlb
lods
and
cmp
std
aas
loop
leave
testl
mov
and
cmp
out
nop
sbb
sub
xchg
mov
out
fisubl
cld
lock
or
call
inc
loopne
divl
movl
data16
mov
push
cmc
mov
mul
mov
stos
mov
xor
push
pop
xchg
aam
cmp
xchg
jge
mov
jmp
and
into
and
inc
cmp
mov
stc
inc
adc
data16
push
test
nop
xlat
dec
nop
cltd
sbb
sub
lahf
ficoml
outsl
subb
inc
sub
cmp
xchg
xor
cmp
or
popf
lea
inc
push
loope
inc
adc
jns
dec
lds
rolb
imul
jb
cld
xchg
mov
int3
push
pop
or
test
test
push
cld
and
addr16
dec
icebp
test
cmp
sbb
imul
mov
mov
mov
sub
xchg
xor
mov
pop
cmp
pop
repz
xor
ja
ficoml
push
ret
out
dec
sbb
xor
sub
dec
lods
sub
imul
movsl
mov
fwait
push
je
inc
dec
pushf
sbb
lret
cld
sar
les
loopne
adc
leave
rolb
push
xchg
cmp
shrl
lret
repz
scas
pushf
cwtl
scas
push
inc
mov
test
iret
imul
xchg
xor
cmp
inc
pusha
lret
and
dec
cs
ljmp
test
sub
inc
lods
cmp
mov
das
cmpsl
gs
mov
mov
lcall
mov
adc
je
ret
adc
subb
sub
aaa
sarb
aaa
int
jo
adc
pop
cmc
pop
xchg
xchg
outsb
gs
fidivs
or
movsl
mov
inc
push
dec
mov
test
pop
cmpsb
inc
mov
dec
imul
popa
xor
mov
mov
ja
xor
ret
jecxz
gs
cmp
add
aaa
rcrb
scas
push
xor
mov
cmp
stc
pop
xchg
adc
mov
in
stos
pop
dec
xchg
lea
dec
shlb
cltd
in
sbb
push
clc
shrb
test
cmp
addr16
cltd
imul
add
ficompl
lret
mov
add
and
push
frndint
cmpl
xorl
rorl
inc
push
mov
cltd
or
pop
add
adc
flds
ja,pt
xchg
fsubrl
je
cmpsl
out
mov
inc
shll
adc
jg
adc
xchg
int3
jb
cmpsb
mov
sar
pop
loop
sbb
dec
pop
pop
push
jns
inc
int
sub
stc
add
std
jo
lods
iret
jbe
pop
inc
pop
mov
inc
xchg
lahf
fsts
mov
cmpsb
dec
mov
and
stos
cmp
mov
push
push
icebp
sbb
or
icebp
pop
addr16
mov
dec
mov
lods
pop
lret
cmpsb
sub
repnz
fsubrs
imul
add
out
xlat
std
mov
push
mov
xchg
pop
iret
scas
xchg
cwtl
sbb
jno
mov
mov
jmp
jecxz
xchg
mov
cs
sarb
mov
out
mov
sub
mov
cmp
pusha
and
aas
adc
mov
scas
aas
iret
insl
cwtl
in
clc
mov
pop
pop
mov
xchg
out
out
inc
je
shl
sar
cmc
jg
jle
ss
test
iret
jbe
imulb
movsb
jno
push
in
shlb
pop
inc
push
fidivs
popf
xchg
loopne
push
or
adc
stos
enter
aaa
pop
dec
ljmp
fistl
int3
sbb
mov
iret
outsb
xlat
lods
mov
jno
mov
mov
jl
xor
mov
xchg
out
and
shr
outsl
mov
inc
jns
push
push
pushf
cmp
movsb
or
sbb
movl
sbb
push
mov
outsl
dec
repnz
xchg
mov
mov
gs
mov
xchg
test
xlat
popa
jge
dec
cmp
lds
enter
jp
mov
cwtl
int
insl
inc
out
dec
ss
jbe
mov
mov
xchg
cmp
cmp
xchg
xor
push
adc
cmp
repz
mov
sarl
loop
int
fsubrp
dec
call
mov
cmp
pop
mov
jecxz
jbe
xorl
cmpl
iret
sbb
adc
push
cmpb
test
int3
sti
sti
sbb
repnz
xchg
cld
rcll
out
and
mov
adc
dec
xor
adc
ret
int3
es
xor
cmpsl
pop
stc
aam
cmp
xor
lds
arpl
into
sub
call
push
jae
sbb
or
and
fisttpll
fmuls
insb
inc
pop
xchg
dec
into
push
loopne
pminub
dec
mov
rolb
jae
add
orb
sbb
jl
pop
cltd
fnstsw
jne
cmp
inc
pusha
in
mov
lahf
lahf
xchg
sbb
loope
mov
nop
shrb
adc
jnp
xor
adc
gs
mov
xor
push
notb
pop
mov
aas
fiadds
js
sub
sbb
movl
and
dec
add
add
pop
and
lret
sahf
inc
jno
sub
movsl
add
dec
les
push
mov
xor
sbb
in
out
sub
call
push
sub
ficoml
pop
adc
jle
mov
shll
test
test
pushf
fisttpl
fdivrl
mov
popa
cmp
jp
dec
cli
inc
sub
push
mov
xchg
mov
into
sbbl
aad
jno
out
jnp
addr16
out
stc
mov
test
push
and
xor
mov
mov
jp
jae
out
sub
es
push
push
notl
test
sbb
push
jne
jb
fidivs
push
loope
fbstp
jae
shl
jno
push
lahf
and
mov
shrb
dec
ret
es
lock
and
adc
cmc
arpl
jnp
mov
xor
cmpl
inc
xchg
push
push
inc
stos
push
mov
mov
pop
pop
inc
dec
fmull
ja
jg
fsub
or
popf
dec
and
shrl
pushf
add
inc
loope
subb
fcoms
test
sub
mov
sti
xor
stos
inc
scas
push
and
cld
test
in
xchg
fstps
sahf
add
lods
pop
push
pop
xor
mov
imul
mov
ret
inc
gs
lret
insl
push
and
xor
lods
std
out
or
cwtl
mov
inc
push
enter
loop
add
fdiv
enter
repz
pop
lods
loop
push
add
cmp
jge
insl
lret
xchg
mov
jno
pop
in
cld
rcrb
xor
sahf
adc
sbb
or
or
mov
and
daa
lea
xchg
shlb
lods
lret
repz
imul
lcall
jg
in
cmpsl
mov
aas
ja
scas
lret
andl
sti
fabs
and
mov
add
adc
jl
sub
aam
divl
sub
addl
add
test
lret
repz
sbb
mov
repnz
sub
sub
cmpsb
mov
and
jae
icebp
fisttpll
in
fsts
jne
ret
xor
outsb
aaa
mov
dec
adc
inc
push
ds
xchg
pop
movsb
cli
mov
mov
sbb
xor
popa
jp
aam
fdiv
mov
xchg
mov
inc
aam
inc
loope
xchg
or
test
mov
mov
push
and
mov
or
outsl
scas
mov
mov
jle
jns
leave
pop
mov
scas
xchg
sbb
sub
sbb
jge
std
pop
xchg
and
and
sti
xchg
sub
ljmp
stc
inc
push
and
out
or
repz
xor
mov
loope
out
push
ss
add
add
lds
xchg
and
adc
xchg
sbb
std
mov
rcr
pop
sahf
pop
jb
ja
sub
or
das
fwait
data16
xlat
sub
xchg
in
mov
adc
leave
mov
cmc
and
lds
mov
gs
xor
jg
jnp
bound
mov
jl
cmp
fidivl
scas
scas
inc
loop
gs
xor
mov
lods
or
test
aad
push
add
loop
imul
mov
test
popa
push
ds
mov
dec
adc
shlb
inc
aaa
pop
sbb
std
xor
push
lret
xchg
xor
data16
pusha
pop
mov
pop
insl
sub
lods
jb
fsts
xor
cltd
mov
dec
orl
je
jp
shr
insb
mov
mov
ljmp
jae
outsb
ret
mov
rorb
inc
loop
cltd
xor
imulb
jg
test
cmpsb
mov
jbe
hlt
push
adc
adc
mov
stos
add
int3
sbb
xchg
fs
jle
mov
fistl
rol
in
andb
dec
push
add
and
mov
cmp
mov
jmp
pushl
add
pop
js
mov
xchg
data16
pop
pop
pop
subl
lea
popa
sbb
inc
sbb
dec
in
dec
test
rclb
push
and
pop
push
jle
inc
xor
rcrb
sub
aam
mov
inc
adc
mov
cli
mov
loopne
lods
push
push
int
popf
push
out
jnp
pop
jno
or
test
pop
adc
xchg
sub
cmpsl
and
test
push
sbbb
inc
push
xchg
xor
cmp
call
stos
cli
ss
sahf
push
mov
or
xor
fwait
inc
lods
test
push
ljmp
roll
cmc
aaa
scas
mov
and
push
sbb
pop
addr16
xchg
lcall
outsb
and
imul
or
mov
ljmp
cltd
mov
pop
sub
sub
loopne
xchg
add
lods
inc
idivl
inc
cmp
lret
andb
pop
hlt
sbb
push
hlt
lret
aad
and
xchg
xlat
in
ret
mov
dec
lds
jmp
fisubl
xchg
popa
jp
mov
sub
daa
lcall
xchg
test
sahf
mov
faddl
mov
mov
clc
jbe
xchg
insl
dec
and
mov
mov
jle
stos
mov
mov
insl
shlb
shll
rcrl
test
daa
push
ret
add
cli
add
cmp
lret
pop
push
ljmp
sbb
mov
ds
lret
gs
int3
jo
cli
mov
insb
repnz
mov
rclb
shl
xchg
stos
and
mov
jmp
xchg
dec
sbb
aam
sub
scas
lahf
insl
fwait
ljmp
cmp
pop
cld
notl
shrb
in
push
test
push
push
and
pop
xchg
ror
adcb
movsb
sbb
push
fwait
stos
xor
testb
imul
test
cmpl
int
inc
popa
ljmp
xchg
mov
mov
imul
jp
daa
or
test
and
bound
or
in
enter
in
mov
pusha
jge
mov
and
adc
xor
fucom
sahf
inc
aaa
daa
xor
push
fucomip
mov
cli
and
jnp
cmp
or
push
push
and
add
imulb
enter
sbb
shlb
sbbb
jo
imul
add
nop
mov
xlat
add
dec
in
mov
push
push
jb
pop
and
sbb
outsl
in
inc
pop
cli
fwait
dec
and
add
sbb
outsb
adc
je
pop
cwtl
dec
lea
inc
jo
jmp
mov
jg
dec
jmp
jp
add
cmp
imul
insb
bound
mov
leave
pusha
inc
fisubrs
outsl
shrl
xor
cmp
xchg
into
adc
popl
dec
sbb
jmp
push
push
popf
in
xor
jl
mov
out
push
rclb
icebp
mov
addr16
inc
adc
dec
xor
mov
mov
cmc
mov
mov
repz
sub
outsl
mov
pop
cmc
cmp
sarl
mov
cmp
loope
in
ss
dec
mov
fidivrs
cmc
add
fidivs
test
pop
mov
pop
arpl
or
repz
inc
and
push
cwtl
int
hlt
mov
or
or
jns
outsl
gs
mov
dec
sbb
scas
lcall
lea
xchg
push
orb
adc
rolb
fdivp
or
xor
inc
sbb
jo
int3
add
rol
inc
mov
or
stos
dec
aaa
mov
adc
sub
fistps
enter
mov
cmpb
jle
sub
daa
or
pop
adc
jb
jae
rol
pop
xor
lock
cmp
dec
push
movsb
mov
push
rcl
sub
push
push
call
adc
mov
dec
and
pop
cmpsl
mov
int3
fidivs
jne
stos
jge
mov
pusha
fiaddl
adc
push
add
les
xor
or
pop
xor
jo
shl
pop
mov
jl
loopne
dec
xchg
into
cmp
idiv
xor
dec
sub
or
sbb
xchg
sub
stc
push
push
jg
lea
addr16
mov
push
dec
push
and
sub
jmp
xchg
xor
sbb
pop
pop
push
inc
test
mov
repz
adc
sub
mov
mov
add
xadd
loopne
movsl
int
jle
push
out
cmpsb
mov
xchg
cmp
adc
frndint
addr16
div
inc
fsubp
add
push
bound
add
dec
add
pop
addr16
lods
mov
inc
ror
adc
mov
add
data16
ret
mov
mov
movsl
xchg
mov
pop
cmp
and
mov
mov
cmc
loopne
movsb
sub
nop
cmp
mov
adc
rcl
mov
arpl
push
mov
pop
cs
mov
xchg
sarl
jns
imul
sbb
imul
add
sub
adc
scas
out
mov
fs
push
adc
scas
fcoml
xchg
adc
cltd
fidivs
xor
adc
jl
pushf
dec
popa
dec
rcrl
push
and
enter
dec
sub
and
cltd
popf
leave
push
xor
add
or
rolb
jl
enter
or
and
ret
jle
mov
addl
in
das
push
mov
mov
dec
movsl
push
cmpsb
and
add
pop
in
pop
lea
inc
xchg
xchg
cmp
pop
mov
test
lcall
fnstcw
repnz
movsb
pop
fcoml
in
mov
jnp
mov
sbb
in
sub
das
pop
repnz
push
inc
mov
fcomps
clc
or
mov
addb
sbb
popa
cltd
cwtl
inc
jnp
or
inc
pop
xor
std
hlt
loope
cltd
lret
rorb
fnstcw
add
dec
mov
into
lods
mov
dec
adc
iret
sub
out
je
aad
sti
into
jae
xchg
adc
and
test
sub
mov
enter
sub
js
push
mov
imul
xchg
or
sti
fadds
in
jecxz
cmpsb
gs
pop
sbb
dec
dec
adc
rcr
in
push
xor
inc
and
inc
jbe
pop
clc
cmc
les
dec
mov
rcl
stos
cmp
aaa
mov
mov
xchg
jo
mov
xorl
subl
cmp
inc
test
lcall
movsb
mov
mov
ds
push
cs
push
dec
scas
sub
sbb
fcom
push
jno
and
rorl
fnstenv
shr
mov
sbb
out
mov
push
xchg
mov
pop
mov
and
sarb
xlat
xchg
xchg
push
repnz
mov
dec
xchg
xchg
inc
in
gs
dec
xor
ss
mov
push
pop
scas
mov
mov
out
daa
addr16
movsb
push
unpckhps
leave
aas
sub
movsb
pop
inc
hlt
xchg
nop
xchg
add
dec
add
push
in
xor
mov
mov
adc
movsl
mov
call
jbe
pop
mov
or
dec
ret
fnstsw
push
jnp
adc
mov
pop
xor
cmpsb
push
int3
flds
push
sub
sub
dec
pop
aaa
xor
outsl
mov
js
rorb
dec
jmp
loop
dec
movsb
jp
aam
inc
mov
or
iret
sbbb
mov
iret
add
jb
stc
pusha
inc
fistpl
ds
sbb
dec
and
push
or
repz
sbb
fsubl
mov
dec
mov
in
mov
add
rclb
lock
push
idiv
test
pop
xchg
push
out
mov
mov
daa
push
jbe
add
xor
mov
mov
jmp
scas
lcall
fcomi
and
lds
push
lret
jge
sbb
xchg
xor
int
mov
mov
fbstp
or
addr16
xor
mov
popa
push
xchg
sub
mov
addb
adc
xchg
push
iret
mov
cmp
clc
mov
aas
adc
insb
cmp
dec
insb
jg
pop
mov
xor
clc
leave
pop
dec
sti
ljmp
aas
shl
mov
xor
stos
jle
out
jmp
mov
mov
mov
dec
jge
pop
jae
js
test
mov
enter
into
leave
fs
dec
mov
addr16
sbb
cmp
cmp
stos
cmp
push
data16
jl
sbb
fsubs
bswap
mov
cld
out
lahf
js
cmpl
aas
loop
jns
sub
das
fstpl
test
push
push
and
push
cmp
dec
mov
daa
jmp
andl
into
sahf
pop
jmp
shlb
and
pop
cwtl
dec
mov
pushf
mov
inc
push
nop
outsb
jnp
adc
repz
push
imul
scas
or
les
call
scas
mov
stos
aad
mov
cmp
add
jecxz
pushf
or
jno
inc
dec
push
dec
inc
dec
fistpl
pushf
mov
fstpl
push
scas
stos
movsb
leave
sbb
divl
jg
insl
push
lock
push
mov
add
sub
xor
lcall
sub
xchg
push
push
push
xchg
jne
lcall
push
inc
sarl
fldcw
jnp
fsubs
clc
or
subb
cmp
pop
hlt
in
dec
and
xchg
mov
insb
push
push
xor
pop
inc
aas
rcrl
dec
mov
ja
jle
hlt
in
dec
mov
lods
cmpsb
push
fidivs
das
icebp
jmp
jg
rol
adcl
or
mov
lods
test
ret
push
jg
insb
inc
pushf
mov
inc
adc
sahf
test
push
nop
fldcw
push
subb
mov
fistl
test
push
addr16
inc
mov
ss
pop
shlb
ss
pop
rclb
in
addb
in
inc
sbb
std
sbb
jmp
mov
xorb
cli
cmpsl
out
push
js
sbb
sbb
in
mov
movsl
inc
sub
rorb
adc
into
shrb
push
inc
sub
sub
inc
xchg
mov
xchg
push
divb
jno
mov
movsb
ja
push
icebp
xchg
notb
pop
in
inc
gs
adc
mov
shr
shrl
inc
xchg
negb
clc
mov
xor
mov
xor
push
and
mov
rorb
pop
sbb
in
iret
sbb
and
stos
icebp
das
mov
aad
add
push
mov
es
add
clc
adc
cmp
xor
ret
sbb
pusha
and
dec
sub
fdivrs
imul
mov
inc
mov
cwtl
insb
clc
or
mov
sbb
fisttpll
lods
add
inc
aam
outsb
leave
sarb
push
xchg
inc
loopne
inc
mov
test
push
push
lds
sarl
mov
in
mov
push
insb
sti
lock
xchg
mov
lcall
dec
mov
jno
mov
cmp
loop
add
dec
mov
lret
daa
push
sarb
sub
ja
cmp
or
cmpsb
sbb
jbe
mov
je
push
rolb
lahf
fcompl
jecxz
cli
push
pop
mov
jg
sarb
sub
aaa
les
sub
ficompl
lods
addr16
push
loop
inc
sbb
sahf
les
sti
arpl
repz
inc
mov
cmpsb
lret
pushl
xchg
pusha
icebp
cmpsl
push
jmp
pusha
shll
inc
cld
sbb
outsb
in
inc
out
add
mov
add
and
sub
out
popa
adc
push
mov
fcmovbe
mov
and
inc
xchg
xchg
call
push
jge
pop
xchg
icebp
insb
clc
fdivrl
mov
lret
sbb
adc
pop
mov
lret
clc
xorl
cmp
mov
enter
cmpsl
sbb
mov
mov
pop
out
or
sbb
xchg
ficoml
and
dec
push
dec
popa
daa
cmp
and
mov
dec
push
jp
sub
pop
pop
pop
leave
sarb
push
into
scas
fstpl
pop
call
dec
icebp
loopne
jp
jmp
leave
je
cmp
mov
sbb
cli
mov
mov
loopne
test
aad
scas
rol
xor
mov
into
jecxz
fst
push
mov
jns
or
fisubs
and
jecxz
stos
movsl
lcall
sub
je
cs
push
ljmp
or
into
mov
mov
pop
cmp
loopne
xorl
data16
xor
mov
xlat
push
popa
xchg
jb
mov
sbb
sub
cli
lahf
xchg
adc
push
jnp
sub
jp
outsl
and
sbb
dec
push
pop
mov
not
mov
push
sub
mov
sbb
or
push
in
push
hlt
testb
rorl
ja
js
add
pop
xchg
or
fadd
in
fcomi
scas
addl
add
pop
push
mov
pop
push
lds
push
lcall
inc
push
into
mov
pop
mov
and
nop
cld
cmp
sti
cwtl
rcll
imul
jle
popf
mov
aaa
mov
push
pop
mov
add
push
mov
scas
mov
jno
les
cmc
mov
jno
mov
shll
mov
rcr
testl
jl
shrl
add
jmp
sbb
push
push
ret
sbb
lcall
jmp
add
ds
mov
daa
dec
jnp
pop
ss
and
add
cmpsb
and
dec
or
mov
sarb
add
cmpsb
push
push
sbb
inc
sbb
mov
xchg
fwait
ds
mov
jnp
hlt
test
cmp
xchg
std
mov
insl
jecxz
imul
call
leave
out
aas
je
and
pop
enter
rclb
add
adc
test
pop
push
push
xchg
in
cmpsl
testb
adc
mov
cs
or
dec
test
push
pushf
insb
repnz
sub
lock
sbb
pop
addr16
push
pop
mov
fildl
popf
cli
mov
sbb
adc
mov
out
dec
xlat
add
cld
call
popf
mov
dec
ss
xchg
mul
pop
or
filds
mov
sahf
cmpsb
cltd
inc
rcr
test
add
ror
std
in
outsl
xor
ficoml
repnz
xor
jp
push
daa
in
ret
fsubrs
xor
gs
pushl
adc
add
sbb
imul
mov
cmp
xchg
dec
ds
in
cmp
data16
xor
decl
cmp
xchg
xchg
adc
unpcklps
test
mov
fisttps
xchg
test
leave
fcomip
std
es
and
popf
dec
mov
lods
std
mov
sub
scas
ret
pop
mov
lea
mov
faddl
xchg
test
imul
rorl
aad
aam
sti
mov
push
add
mov
xchg
inc
ficoms
push
ljmp
adc
push
and
test
jnp
shrb
xor
in
fnstcw
push
push
and
cli
cmpsl
or
pop
imull
or
adc
pop
and
sbb
dec
mov
sbb
dec
dec
mov
scas
mov
or
mov
push
repz
lods
dec
lds
sbb
cmp
sbb
and
mov
mov
add
lea
mov
jne
sbb
fildll
arpl
lds
push
cwtl
scas
jo
mov
sub
cmp
call
adc
ljmp
mov
jo
fcmovnu
cmp
in
ljmp
call
jle
jg
les
fisttps
jg
into
movsb
pop
jb
and
jne
jge
xlat
imul
ret
xchg
fsubr
xor
jno
mov
cmp
in
xchg
jmp
adc
shrl
add
in
call
and
push
ret
adc
push
dec
mov
sbb
pop
push
test
inc
lea
bound
add
jmp
xchg
mov
pop
and
in
xor
or
mov
in
jae
ja
lods
push
scas
push
mov
xchg
sbb
jne
push
pop
mov
add
push
cmc
clc
sbb
or
add
insb
xor
add
add
out
test
shll
or
test
lods
test
adc
xchg
insl
jbe
push
xchg
inc
or
xor
mov
jge
sti
sub
adc
cmpb
jbe
idivl
jo
sub
shll
cmp
lock
fcompl
push
push
sahf
xor
push
fucomip
xchg
jnp
shlb
xchg
mov
xlat
hlt
xchg
std
push
sti
lds
xchg
idivb
fcoms
idivb
mov
loope
add
xchg
mov
les
cmp
out
add
sbb
and
cltd
jns
insl
aaa
movb
dec
mov
stos
xlat
stos
imul
loopne
mov
test
out
lock
sbb
adc
pop
mov
std
addr16
jae
arpl
fldcw
mov
test
es
sarl
push
xchg
into
push
mov
ss
cltd
push
sub
mov
adc
out
push
mov
leave
sbb
mov
push
inc
into
adc
daa
cmp
js
sub
and
sub
ficoml
and
fstps
inc
mov
mov
movsb
and
jmp
out
jle
jl
std
ret
and
popf
dec
lret
das
insb
fldt
test
sub
sub
gs
lds
jo
scas
jne
ja
dec
xorb
pminsw
cmpsb
sti
in
xor
sub
js
ficompl
cmp
lea
add
cmp
and
xchg
ds
push
mov
inc
mov
fstpl
pop
pushf
gs
incl
idiv
mov
push
lret
add
ds
lods
jmp
xchg
mov
mov
pop
fists
cli
sarb
popa
xor
add
addr16
pop
sub
lods
and
dec
roll
lods
lea
pop
xchg
cmc
into
xor
pusha
inc
jns
fdiv
ja
mov
mov
insb
ljmp
icebp
outsb
mov
jbe
sub
inc
sub
mov
add
xchg
cmp
outsb
sub
test
inc
pop
test
ljmp
cmc
pop
in
shr
scas
fcomp
dec
cmpsb
cmp
push
movsl
cwtl
test
mov
mov
ret
cmpb
test
lcall
sub
arpl
dec
xchg
cltd
inc
arpl
pop
in
ret
and
lret
jns
and
adc
and
sub
xor
orb
inc
mov
cmp
and
jns
pop
cmp
call
add
test
arpl
int3
hlt
xchg
dec
call
iret
popa
ss
out
push
mov
push
enter
jae
mov
jnp
xor
cwtl
and
jae
std
sbb
lahf
sub
or
inc
cwtl
sbb
jno
push
scas
imul
cmpsl
roll
inc
cmp
jg
es
out
aas
xchg
sub
mov
add
mov
test
dec
inc
inc
imul
xor
pop
inc
or
jo
jecxz
jl
pop
push
sub
shll
pop
pusha
jae
fs
or
mov
mov
std
jae
sbb
cmp
fcmove
sahf
or
popf
push
inc
and
or
push
mov
jns
mov
mov
sbb
enter
enter
call
push
rcl
push
or
mov
mull
mov
bound
stc
pop
jnp
int
loop
adc
outsb
and
xor
fyl2xp1
std
jle
fistl
ret
push
ds
lahf
lahf
out
lahf
push
adc
ss
in
fmul
cmc
sarb
mov
mov
sbb
pop
push
push
dec
add
push
cltd
sub
pop
sti
inc
fs
ret
mov
inc
into
jecxz
out
sbb
arpl
shll
in
test
cmp
and
cmc
outsb
or
roll
in
out
scas
and
mov
popf
dec
fcom
sbb
pop
insb
lock
gs
inc
push
xor
xor
arpl
inc
cmp
popf
std
or
inc
sub
fwait
xchg
fs
add
in
repnz
jbe
sub
mov
add
pop
mov
cwtl
loope
fs
les
jne
enter
jb
cmp
xor
pusha
xor
scas
inc
rclb
loope
fwait
jg
mov
int
xor
jo
movsl
xor
xorb
pop
add
xorl
sarl
lods
and
lahf
mov
cmp
ss
add
xchg
jno
push
mov
insb
out
imul
sub
imul
and
dec
fbld
daa
add
mov
mov
pop
pusha
pop
pop
insl
jno
sar
mov
mov
sub
jno
mov
sbb
mov
mov
xchg
mov
shll
pop
das
scas
out
sarb
jp
rol
rolb
hlt
sbb
pop
mov
xchg
mov
dec
pop
or
sbb
dec
add
pop
insl
dec
adc
xchg
sub
cltd
int3
scas
mov
in
push
pop
push
add
or
iret
test
das
aaa
push
push
popa
or
stc
test
ret
pop
dec
addl
std
push
into
add
jl
pop
adc
call
popf
push
xchg
mov
adc
loopne
xchg
popa
and
mov
sub
pop
xor
outsl
jns
test
pop
icebp
ja
fimull
push
testl
push
xchg
push
cmp
rsm
dec
pop
stc
sub
sahf
imul
xor
dec
cwtl
mov
jno
std
jge
jle
aas
jne
stos
cmc
int3
mov
push
jmp
or
mov
lret
or
and
testb
cli
sbb
lock
movsl
push
shlb
popa
xor
into
outsl
or
push
mov
stc
adcb
mov
imul
or
imul
adc
scas
xor
cmp
sbb
pop
xchg
xor
push
inc
cmp
dec
and
stos
and
repz
test
adc
pmaxsw
je
lock
repz
adc
popf
popf
mov
xchg
sub
and
imul
dec
fidivrl
push
mov
mov
lods
jmp
out
mov
negb
xor
movsb
movsl
pop
or
pop
adc
lods
mov
popf
pop
pop
gs
inc
js
pop
inc
aaa
sub
xchg
dec
dec
jbe
int3
movsb
and
inc
inc
sub
repnz
data16
mull
arpl
jecxz
push
jg
aad
mov
test
jp
mov
sub
mov
stc
aam
test
mov
jae
addr16
int3
inc
aaa
outsl
test
lret
gs
adc
adc
jmp
mov
jb
loope
sub
jg
mul
jl
sub
mov
mov
pushf
adc
ret
jns
mov
pushl
pop
out
fsubl
and
sub
inc
jge
inc
mov
addr16
mov
in
or
stc
xorl
xor
test
inc
jecxz
jg
adc
sbbl
jno
mov
xor
dec
fildll
das
inc
fs
fs
outsl
jl
mov
jl
lods
repz
ljmp
pop
pop
pop
push
repz
outsl
jg
push
in
hlt
fwait
jae
push
jae
lods
jl
pop
mov
lahf
push
push
push
mov
nop
or
jecxz
inc
and
push
dec
and
les
pop
mov
pop
xlat
roll
push
xor
je
inc
stc
inc
js
xor
lods
mov
leave
push
shl
lds
lds
ljmp
sub
xchg
mov
sub
in
jp
push
jle,pn
shll
mov
mov
repz
int
add
call
push
push
ret
lahf
in
dec
adc
mov
repnz
int3
cmp
xchg
leave
dec
push
jmp
stc
leave
jne
fsubs
mov
jne
xor
xchg
ds
add
int3
or
test
and
mov
loop
xor
jo
inc
push
sub
shlb
int
and
push
jb
cld
lcall
inc
dec
stos
pop
push
jae
gs
mov
adc
imul
xor
push
xchg
xor
imul
cli
xchg
push
xor
or
mov
frstor
rolb
icebp
adc
mov
pusha
jg
inc
iret
mov
loopne
int3
add
adc
xor
lds
daa
inc
or
dec
fdivrl
lods
dec
fsubrl
stos
lea
or
mov
rcl
repz
loope
and
pop
jecxz
jae
dec
sub
icebp
mov
jg
shll
pop
roll
push
mov
scas
ds
xor
add
xchg
in
test
bound
mov
mov
jl
xor
sub
ja
rolb
and
jns
loopne
int
pushf
fbstp
cwtl
jne
mov
xor
and
lods
pop
push
nop
sub
inc
test
icebp
in
cmpl
sub
mov
adc
rcll
xor
pop
push
imul
jecxz
repz
cmc
pushf
sbb
xchg
mov
loopne
sbb
sub
mov
or
inc
int3
popa
and
sub
fimull
mov
or
into
mov
or
js
jns
int3
sbb
sahf
xchg
in
pop
lods
rorb
pop
fmull
int
pop
xchg
lahf
sbb
pop
movsl
cmp
adc
push
adc
inc
mov
out
xor
jle
mov
fs
jmp
sbb
aam
sahf
push
decl
scas
pop
mov
clc
push
add
nop
inc
push
mov
add
jne
adc
push
ds
sub
lcall
repnz
mov
jns
pop
scas
in
mov
mov
xchg
dec
mov
fldl
mov
cmpsl
mov
pop
mov
mov
mov
and
and
mov
sbb
jnp
mov
adcl
cmpsb
jno
add
pop
cs
pop
mov
xor
jmp
inc
add
hlt
cmpsb
lea
in
sbb
aad
lcall
mov
inc
gs
xchg
lahf
mov
push
aas
hlt
andl
dec
sarl
lret
daa
mov
xor
pop
arpl
cs
or
and
xchg
stc
bound
les
lahf
mov
mov
jae
loopne
sub
xchg
mov
jmp
cld
push
xor
inc
or
fyl2xp1
add
pop
add
add
xorb
ret
inc
mov
lret
repz
out
repnz
sbb
sbb
sarb
loopne
sub
jle
mov
mov
cmp
xchg
bound
inc
std
mov
mov
and
and
ret
xor
mov
jnp
cmpsl
leave
leave
jno
mov
or
lods
ss
sahf
into
or
xchg
sub
xchg
and
hlt
stos
mov
sbb
pop
pop
gs
fcoms
mov
daa
add
rcrl
sti
fcomp
lds
je
fsin
sub
fs
cmpsb
pop
adc
xor
mov
or
shrl
mov
pop
in
add
xchg
cmc
inc
xchg
leave
push
imul
stc
xchg
es
int3
in
imul
jne
leave
xchg
das
mov
adc
fidivs
xor
js
and
push
cmp
fcoms
clc
or
xchg
inc
mov
test
nop
mov
test
lock
lods
mov
out
push
mov
pop
shrl
mov
lds
adc
shll
movsl
inc
mov
imul
cmp
ja
cltd
int
out
adc
adc
imul
mov
fisttpl
arpl
js
xor
andb
gs
scas
gs
pop
jp
and
jbe
mov
push
in
insb
arpl
xchg
push
shll
and
cld
sbb
test
pusha
pop
test
ret
sbb
out
or
mov
jge
fcoml
push
xor
movsb
push
push
xor
or
mov
mov
mov
fucomip
fidivrl
push
data16
or
sub
push
sahf
outsb
ret
pop
fwait
subl
adc
jne
push
jp
bound
push
adc
jg
aad
sub
cwtl
bound
push
jl
fnstcw
inc
mov
mov
or
cmp
or
nop
insl
pop
repnz
je
inc
je
xor
lahf
and
add
gs
loop
loop
cmp
or
adc
frstor
mov
cltd
pusha
stos
sti
lcall
inc
jg
inc
daa
mov
jl
in
xlat
shll
jle
add
outsl
cmp
pop
mov
mov
cmp
ss
insb
andl
loopne
mov
add
imul
fnstenv
jmp
gs
mov
gs
pop
sub
pop
sbb
lock
cmp
sti
test
lcall
jnp
je
es
sahf
and
mov
sbb
push
popa
sub
bound
fucomp
xchg
mov
test
cmp
call
mov
test
repnz
adcb
jb
sbbb
mov
jo
jb
sbb
adc
adc
xchg
sbbl
imul
add
inc
add
int3
mov
into
arpl
cmp
lock
cmp
loope
movsl
imul
xchg
jmp
adc
and
pop
and
cmpsl
imul
pop
jns
pop
insl
shl
and
ljmp
mov
lods
dec
dec
fidivrs
test
sbb
push
adc
jbe
cmpsl
xor
arpl
fidivl
mov
mov
sub
dec
jns
pop
dec
lret
sub
test
and
push
ficompl
inc
cwtl
xchg
es
add
dec
and
xlat
xor
dec
fisubrs
or
xchg
xor
mov
adc
test
adc
jmp
ret
push
sbb
jp
adc
cmp
out
jbe
sbbb
jge
sbb
int3
scas
outsb
rorl
clc
sbbb
scas
sahf
testb
push
pushf
jecxz
enter
xchg
aas
mov
mov
fldt
mov
lret
adcl
xor
cmc
mov
and
sbb
or
inc
mov
test
movsb
repnz
mov
inc
sarb
fs
mov
xchg
test
dec
loopne
test
sub
cli
jnp
jge
xor
popa
mov
pop
popa
xchg
shll
xlat
sti
or
inc
jns
pop
out
adc
inc
in
scas
jge
sbb
fsub
sub
mov
adc
mov
push
jp
fmul
in
out
mov
lahf
mov
dec
jmp
addr16
dec
in
mov
scas
insl
mov
stos
test
aam
xchg
int3
fistpl
test
push
arpl
mov
insb
nop
shll
sub
sub
out
fcomps
push
mov
outsb
xlat
jp
iret
cwtl
in
add
loopne
insl
or
in
daa
movl
mov
inc
mov
mov
popf
push
jle
dec
sti
sbb
jp
mov
dec
xor
shrl
jp
inc
sahf
dec
and
out
sub
mov
stc
xor
dec
cmp
mov
push
adc
fwait
out
aas
std
movsb
les
push
fiadds
lods
pop
repz
mov
inc
mov
inc
sub
cmc
jno
mov
popf
loop
lods
xor
push
pop
dec
rclb
push
sar
loope
xor
clc
cmpsl
mov
aam
jecxz
sub
add
cld
jmp
or
xor
incl
lods
stos
pusha
mov
push
mov
adc
in
xchg
ret
push
icebp
pusha
inc
add
leave
fs
loope
mov
clc
adc
stos
clc
mov
insl
mov
cmpsl
jb
mov
aam
es
and
pop
aad
inc
rcrb
cmpsl
out
aas
inc
add
inc
xor
xlat
fstp
jmp
inc
mov
lret
or
outsb
fcoms
mov
flds
inc
dec
insl
data16
adc
std
movsb
sbb
mov
mov
lret
push
loope
lahf
push
inc
cwtl
mov
ret
nop
lea
adc
jnp
cld
js
aad
sarl
pop
xlat
lock
push
or
xchg
out
orl
movsl
cwtl
into
arpl
cwtl
ret
jle
pushf
aaa
mov
mov
int3
xchg
adc
mov
xchg
jne
sbb
jno
jl
outsb
xlat
nop
in
push
xchg
loop
mov
bound
xor
xchg
jl
sub
jmp
inc
fwait
divb
or
fsts
and
push
imul
mov
ja
lret
xor
cmpl
push
fisubl
lcall
lods
xchg
test
jno
addr16
pop
mov
cli
lret
pop
pop
xchg
repnz
arpl
xchg
aam
dec
sbb
jno
sub
dec
into
sub
lods
int
inc
dec
push
jmp
and
mov
sbb
lds
pop
test
fiaddl
sbb
ja
mov
sbb
or
mov
sahf
pop
add
fs
ficoml
out
jnp
sub
mov
out
xchg
mov
repnz
testb
inc
fadds
jnp
and
push
fpatan
mov
lea
pop
or
jg
mov
pushfw
icebp
dec
in
add
jne
push
adc
mov
mov
jmp
mov
push
lods
js
or
cmp
jl
or
push
mov
in
xchg
popa
out
xor
jp
inc
js
out
fisubl
insb
pop
loopne
xlat
js
mov
ss
pop
subl
dec
ret
xor
dec
jge
cmpl
imul
mov
jl
mov
incl
jmp
or
sbb
pop
inc
je
sahf
enter
mov
lahf
xchg
pop
adc
or
std
push
nop
pop
xor
mov
dec
sti
jmp
pop
mov
repnz
icebp
fdivrs
push
pop
sbb
jecxz
repnz
insl
out
and
out
push
dec
fisttpl
int3
out
out
dec
ja
fsubrl
enter
fwait
mov
pop
aas
mov
and
subl
cli
paddw
lea
out
in
and
mov
sbb
push
out
call
sbb
mov
push
rolb
and
sahf
sarl
sbb
cmp
ss
mov
mov
or
xchg
gs
cltd
les
or
pop
pop
push
dec
cltd
imul
add
jle
jo
pushf
adc
adc
push
and
xchg
stc
mov
imul
adc
shlb
shlb
daa
inc
add
sub
mov
fstl
pop
dec
stos
mov
jle
fistpll
xor
js
mov
inc
adc
xchg
cmovae
lea
adc
fists
sbb
mov
xchg
xchg
add
ficoms
rorl
out
es
mov
lahf
adc
lcall
jge
cmp
adc
and
xor
sahf
leave
dec
sbb
mov
hlt
ret
fistpl
fcmovnb
sub
mov
rcrl
test
ret
outsl
enter
dec
mov
cli
pop
mov
mov
xor
imul
sbb
cli
and
stos
add
cmp
sub
xor
cmp
inc
add
pop
leave
mov
repz
pop
ficomps
mov
jae
roll
mov
push
fcompl
sbbb
add
in
xchg
je
pop
ja
sarb
or
lcall
out
out
add
test
scas
push
mov
subb
outsl
add
ret
sub
outsl
incb
or
int3
arpl
scas
sub
adc
sub
jle
fcoml
fbstp
sar
cld
and
push
pop
cmc
fs
dec
outsb
in
jns
cmpb
mov
iret
pop
in
add
out
push
push
lds
lds
mov
out
sub
dec
push
or
dec
lods
jae
xchg
insb
insl
ljmp
out
dec
add
pop
repz
cmc
pop
fsubrl
inc
sbb
loopne
pop
xor
lahf
jge
mov
idivl
insl
xchg
out
mov
sub
sub
xor
mov
or
pop
cmp
jl
test
mov
insb
add
and
sarl
xor
je
or
push
dec
sub
xor
cmpl
mov
adc
xor
add
stos
clc
decl
cmpsl
cmc
loopne
pushf
aas
xchg
add
sub
push
xor
sub
subl
mov
dec
pop
outsl
repz
cld
cmp
add
mov
cld
add
inc
outsb
push
xorl
pop
adc
inc
dec
popf
das
nop
out
cs
or
push
testb
repnz
das
pop
in
xchg
clc
cltd
je
in
std
js
fstl
clc
je
test
pop
pop
pushf
adc
xor
cltd
sbb
popa
scas
imull
loope
jno
test
in
mov
inc
pop
sarl
xchg
cs
cld
mov
sbb
sub
dec
stos
mov
cmp
cwtl
ret
mov
das
ss
push
mov
xchg
rorb
addb
fwait
push
or
cltd
inc
adc
xor
mov
mov
adc
jge
or
ja
cmpsb
inc
adc
mov
cmp
fidivl
cmp
aad
cmp
jo
xor
adc
adc
mov
mov
ja
pop
icebp
outsb
call
popa
xor
cmp
xchg
mov
fstpl
mov
sbb
stos
jmp
shrb
mov
stc
outsb
add
repnz
pusha
add
cld
push
inc
popf
sti
jle
int3
push
push
dec
arpl
inc
lock
mov
xor
push
or
imul
leave
fs
xchg
dec
dec
mov
push
addb
mov
mov
adcb
mov
jecxz
mov
pop
mov
out
movsl
cmp
pop
loopne
test
inc
jbe
out
lret
fmuls
sbb
mov
xchg
xchg
fidivrl
inc
xchg
mov
xor
sbb
mov
ja
into
cmp
loop
lock
pop
movsb
jecxz
iret
mov
pop
pop
mov
int
pop
test
mov
mov
mov
and
shrl
jb
ljmp
outsb
cld
pop
fdivs
ljmp
lahf
add
cmp
hlt
out
fiaddl
adc
sub
inc
and
adc
sub
fadds
out
adc
add
scas
and
sarb
cwtl
inc
rcrl
lods
fdivs
sti
fistps
xor
int3
sbb
mov
sub
loope
xor
xchg
or
dec
in
cltd
lahf
inc
inc
sub
xchg
sub
ds
shlb
dec
lds
fsts
popa
call
ljmpw
pop
sub
outsb
add
jo,pt
xor
cmpsb
jbe
repnz
jno
mov
mov
shlb
jo
adc
push
dec
inc
sub
push
out
setae
shl
mov
divb
scas
inc
sub
sbb
idivb
lahf
push
out
pushf
pusha
mov
mov
dec
add
jecxz
and
jmp
test
loope
pop
fcoml
mov
movsl
fbld
mov
rcr
cmp
pop
xchg
xchg
ss
push
lcall
dec
jbe
bound
sti
sahf
xor
shlb
cmp
arpl
adc
mov
lea
dec
arpl
push
mov
mov
pop
cmpsl
sub
repz
dec
imul
or
popa
mov
scas
or
xor
lea
xchg
sbb
xor
mov
adc
add
and
push
inc
cltd
lea
ss
and
or
cltd
ret
inc
inc
sub
sbb
sti
nop
pop
addr16
xchg
push
fistps
scas
stos
sbb
ja
pop
mov
adc
or
adc
test
notl
mov
loop
ds
sbb
push
popa
cltd
nop
add
xchg
cmp
frstor
cmp
daa
jge
mov
pop
arpl
sbb
cltd
inc
sbb
xchg
popa
or
push
aam
gs
shl
loope
mov
push
or
dec
cs
and
js
mov
mov
push
fcmovnu
xchg
mov
adc
and
xor
pop
addr16
push
dec
rorl
aam
ret
stos
bound
or
adc
inc
shll
push
xlat
pop
shlb
dec
mov
dec
fcoml
pop
jo
std
inc
xlat
fmuls
adc
pop
inc
shll
fwait
inc
sti
xchg
mov
sub
cmp
lds
int3
lret
lods
pop
jne
inc
mov
je
cmp
cmp
jge
adc
xor
or
inc
or
jle
inc
jg
push
mov
cmp
jmp
push
popa
movsl
and
jle
ds
mulb
adc
sub
faddl
inc
adc
inc
call
aaa
test
or
mov
adc
mov
dec
sbb
ss
std
push
dec
mov
inc
sub
dec
jmp
fwait
pop
dec
ljmp
adc
xchg
xchg
in
xor
mov
xor
stc
ds
jp
jne
dec
lock
insb
cmpsl
arpl
movaps
push
jge
lods
test
pop
in
xlat
pop
loope
rorb
jecxz
rcrl
ficompl
pop
push
or
mov
sti
nop
mov
push
sub
sbb
leave
or
cli
stc
pop
or
out
fistpl
pusha
or
bound
mov
jns
push
mov
add
icebp
orb
dec
pop
dec
movb
sub
outsl
xchg
jmp
out
mov
lret
outsb
lret
leave
and
pop
add
sbb
xchg
sbb
dec
adc
cwtl
popf
insl
enter
mov
stos
inc
ja
addl
test
push
pop
and
in
dec
add
aam
and
jne
mov
sub
das
adc
jp
arpl
push
xchg
mov
jne
outsb
inc
inc
or
xchg
mov
dec
inc
pop
loope
xchg
idivb
incb
mov
inc
lret
jecxz
lcall
pop
and
rcll
roll
add
int3
or
stc
nop
dec
jo
mov
adcb
mov
pop
add
pusha
jno
in
aaa
iret
mov
push
outsl
xchg
jne
and
sarb
daa
mov
fistpl
sbb
mov
test
cltd
sub
mov
inc
inc
jne
xchg
lods
test
insb
les
lret
bound
fiadds
jge
mov
ja
lds
sub
pop
mov
andl
out
in
xchg
jle
mov
jbe
dec
push
cwtl
adc
stos
sub
dec
dec
cmp
inc
push
in
adc
mov
mov
and
loope
fs
repz
roll
sarl
jno
pushf
in
stc
int
pop
push
jno
lods
lea
cmc
aas
mov
les
add
sti
cmp
adc
mull
roll
mov
loope
movsb
adc
aad
test
pushf
out
mov
and
mov
imul
lods
dec
inc
pusha
jl
out
sarl
cmc
cli
pop
les
loopne
cwtl
imul
push
iret
sbb
stos
push
cmp
in
imul
loope
jmp
int3
jp
outsb
ret
add
push
inc
enter
sbb
rolb
sub
jb
popa
clc
jb
jmp
sub
movsb
sbb
imul
test
cltd
mov
dec
popa
repnz
jbe
lods
jl
bnd
mov
add
cmp
and
pop
inc
int
fisubrl
push
cs
insb
imul
out
arpl
pop
cmp
lea
push
or
inc
jnp
jbe
adc
mov
shlb
xchg
imul
shll
aad
in
aaa
test
inc
mov
or
pop
sub
push
mov
aam
mov
and
out
out
std
mov
or
lods
repz
xchg
cmpsb
ds
dec
mov
fwait
lock
xlat
orl
mov
mulb
xchg
dec
scas
les
aas
dec
bnd
sbb
xchg
sti
and
jp
lods
addr16
mov
jg
shr
les
cmpsl
add
mull
lahf
inc
test
push
push
in
aaa
and
sub
mov
cmp
divl
sub
inc
mov
xor
cwtl
fdivrs
cmpsl
dec
jno
push
push
sbb
xlat
mov
mov
test
fsubrs
fs
and
ror
mov
and
clc
std
jne
pop
sbb
mov
ret
xchg
out
pop
lds
addr16
push
add
adc
imul
test
in
pop
sbb
les
sub
fnstsw
jmp
scas
and
mov
cmp
sub
sub
inc
out
pop
adc
mov
cs
aaa
sbb
roll
cmp
loopw
mov
vpaddsb
imul
iret
stos
mov
rcrl
or
xor
lock
jo
jns
mov
adc
dec
and
jecxz
and
mov
rcrb
enter
xchg
mov
ret
mov
sbb
pop
adc
shll
rol
or
push
lcall
rorl
cmpsl
aad
or
roll
xlat
and
ss
hlt
std
xor
mov
jb
vptestnmw
add
jmp
lret
xchg
mov
rorl
mov
movsb
aad
pop
mov
movsl
dec
sub
cs
mov
cli
je
pop
inc
fmuls
shrb
stos
add
les
dec
into
pushfw
aad
fwait
and
sahf
lds
add
xchg
enter
sbb
and
outsb
sti
inc
xor
xchg
loop
add
pop
leave
lods
mov
cwtl
adc
cmp
jns
es
in
mov
xor
xchg
xchg
xchg
mov
or
aas
stc
es
dec
clc
and
add
xchg
fiaddl
mov
pop
mov
push
cmpsl
cmp
ss
mov
jnp
out
int
mov
out
dec
xchg
fcom
mov
push
std
call
cmp
out
test
inc
lods
mov
pop
stc
out
xchg
and
lds
mov
shll
lods
pop
out
adc
pusha
int3
testb
lret
and
cmp
pop
inc
daa
in
mov
cmp
out
test
mov
lods
inc
movsb
mov
cmpl
push
lock
lods
xchg
push
dec
imul
mov
pop
mov
push
pop
arpl
mov
hlt
icebp
or
push
iret
xor
push
jae
xor
ja
xchg
stos
aad
cmp
or
outsl
test
jnp
cli
das
mov
jp
cmp
mov
xorb
dec
arpl
popf
xlat
xchg
aam
mov
cs
or
out
adc
fwait
xchg
jno
movsl
jl
imul
subb
mov
sub
dec
icebp
or
lret
or
cld
arpl
in
inc
out
cmpsl
imul
mov
test
pop
and
scas
repnz
cwtl
cs
int3
ret
or
in
xchg
insb
insl
mov
or
call
cmpsb
push
cmpb
outsb
cwtl
adc
dec
push
cmp
dec
mov
ljmp
scas
xchg
aaa
in
adcl
mov
cmpsl
jae
and
fmull
cld
inc
cltd
push
imul
sbb
xchg
cmc
sbb
or
or
xlat
sahf
push
cs
mov
lock
or
or
push
jae
cli
clc
scas
rorl
gs
ja
popa
add
mov
cmp
mov
aad
daa
cmpb
jno
cmp
sub
pop
mov
stos
arpl
lret
cmc
mov
sbb
jo
out
mov
sbb
outsb
xor
sbb
pusha
pushf
outsl
xlat
inc
ret
xchg
push
cli
lea
pop
out
cmp
and
jmp
push
stc
mov
enter
pop
cmp
sbb
or
sub
inc
adc
sbb
ror
jmp
inc
pop
addb
push
dec
pop
mov
imul
dec
xor
push
adc
xchg
xor
mov
in
rol
arpl
adc
es
outsl
adc
cmp
mov
push
cmp
lret
enter
mov
pop
and
add
rep
clc
or
mov
mov
imul
cli
sbb
es
cli
sbb
dec
nop
and
jle
mov
hlt
nop
jb
leave
adc
and
ret
daa
mov
sarb
xor
mov
fs
ret
leave
mov
jbe
push
sbb
mov
outsl
xchg
xchg
sbb
lret
cmp
mov
ret
mov
pop
dec
xchg
adc
push
jmp
push
xchg
in
lret
int3
in
add
int3
push
mov
lods
ds
inc
aas
daa
xchg
dec
sub
shlb
mov
mov
sbb
rclb
scas
inc
fmul
lds
adc
pop
lret
int3
mov
adc
jl
inc
mov
js
movsb
out
xchg
rolb
or
jge
aas
jnp,pn
sahf
xor
xchg
inc
and
xor
das
je
mov
and
je
pop
into
rcrb
add
mov
lock
sahf
dec
cs
jp
mov
int3
cli
lret
adc
sub
aam
cli
in
add
rorb
fildll
pop
aam
repnz
outsb
aaa
std
mov
xchg
cs
adc
pushf
xchg
lds
mov
popf
pop
xchg
ja
cmp
imul
mov
pmulhuw
xchg
mov
daa
xchg
push
ja
roll
and
inc
mov
mov
sbb
sbb
fstps
or
fdivrl
mov
push
pop
paddd
pop
test
xlat
mov
xchg
and
test
fistl
cmp
mov
ret
jl
xor
int3
cmpb
xor
clc
jecxz
add
loop
or
popf
movhps
sbb
jo
mov
and
dec
inc
dec
mov
cmp
sbb
xor
xor
mov
inc
lret
test
push
dec
aad
mov
stos
repz
int3
push
je
outsl
fcomps
pop
loope
sub
push
mov
aaa
mov
js
enter
loope
fidivl
test
subb
xchg
pop
cmc
movsb
pop
mov
dec
sub
jae
nop
jne
mov
enter
pop
lds
pop
sub
adc
ljmp
addr16
testl
xchg
arpl
push
ret
jg
pop
imul
sbb
lret
inc
pushl
scas
mov
mov
shr
jnp
mov
xor
gs
dec
cwtl
jge
mov
add
jmp
sbb
inc
cli
sub
mov
movsb
rcrl
cmc
fistl
xchg
sti
das
or
mov
cmp
imul
mov
scas
adc
push
imul
add
sub
out
lock
lcall
repz
frstor
imul
arpl
inc
pop
rcl
push
aam
adc
cmpsb
push
add
sub
test
xor
dec
fnstenv
cmc
xchg
pavgw
mov
movsb
jge
jmp
xchg
mov
xor
les
les
repz
rcll
mov
add
popf
popf
or
insb
push
in
iret
test
xor
dec
sahf
ljmp
and
in
outsb
les
sub
movsb
clc
pushf
rclb
cmp
xchg
inc
movsb
stos
pop
push
daa
inc
mov
inc
pop
pop
adc
push
xchg
cmp
cmp
xchg
sub
test
dec
xchg
add
sbb
clc
enter
jno
pusha
shl
mov
loop
in
dec
test
and
adc
popf
mov
inc
push
loope
xor
test
push
fdivp
or
nop
lret
mov
jbe
adc
dec
mov
icebp
mov
inc
adc
lds
push
outsb
aad
adc
ja,pn
imul
inc
pop
ja
and
xchg
push
and
bndstx
test
pop
nop
fidivrs
mov
sbb
add
jae
cltd
lds
sti
hlt
hlt
add
rcrb
sub
loopne
ja
test
sub
mov
sub
shrl
in
int3
push
mov
sbb
or
pop
inc
orb
mov
push
sub
push
insl
pop
sbb
jbe
and
xor
and
inc
sbb
lcall
cltd
pop
or
mov
cmpsb
rolb
data16
call
fidivl
jge
imul
mov
stc
inc
dec
mov
sub
lea
xor
push
add
cmp
cld
or
push
add
jmp
notl
push
ja
dec
imul
push
dec
ds
and
jns
mov
or
aaa
ja
sbb
clc
ss
loopne
or
in
std
ret
adc
mov
or
adc
sub
xlat
add
gs
shl
aam
stos
ret
int
mov
lds
mov
rcll
jg
sbb
pop
mov
inc
test
pusha
clc
mov
scas
mov
movsl
call
loopne
rolb
enter
cmp
stos
fdivs
jo
test
cli
push
jo
stc
lea
and
fs
mov
hlt
jne
cltd
sub
imul
adc
mov
clc
jmp
es
sub
sbb
ret
xchg
scas
aas
inc
lea
adc
add
mov
out
pminsw
shrl
pop
fnsave
xor
das
repz
decb
in
mov
nop
fscale
mov
or
pop
mov
int
int
add
lods
dec
subl
xchg
cs
aad
div
jle
jmp
xlat
push
add
fadds
cmp
add
adcb
xor
xchg
jle
das
mov
sub
sub
outsb
mov
popf
cld
xchg
in
sbbl
and
pop
jp
add
inc
xor
ljmp
push
adc
mov
push
push
push
adc
loopne
or
jnp
nop
loopne
cmp
shlb
out
leave
mov
add
jecxz
daa
std
in
inc
push
mov
mov
movsl
adc
lret
dec
sbb
repz
in
xchg
mov
add
mov
cmpsb
cs
pushf
push
and
cmc
xor
push
aad
sbb
mov
and
or
outsl
imul
aas
adcb
mov
das
mov
push
addr16
hlt
mov
arpl
add
xchg
xor
add
pop
lock
mov
push
mov
mov
inc
fwait
push
mov
mov
aas
mov
or
pop
mov
cmpb
scas
inc
fisubl
xor
or
push
jns
xor
aas
test
and
sub
adc
adc
adc
xchg
mov
cld
dec
in
push
sbb
inc
arpl
mov
xorb
les
mov
pop
add
add
push
push
popf
mov
pop
mov
xchg
mov
int3
dec
xchg
cld
mov
daa
or
inc
movsl
cmp
inc
jecxz
jbe
fldt
xchg
mov
mov
sub
arpl
fdivp
sbb
pop
popf
mov
mov
mov
stc
cmpsl
cmpsb
shlb
add
adc
lcall
das
add
decl
mov
pop
cmp
shrl
adc
cmc
pop
imul
jmp
sbb
push
mov
aam
arpl
jno
jmp
sub
lahf
adc
pop
xchg
xor
call
inc
add
movsb
xor
imul
testb
mull
es
dec
dec
push
and
jmp
icebp
mov
cli
aas
or
ss
mov
xchg
cltd
aaa
cltd
mov
nop
mov
mov
flds
inc
cmc
int
loope
mov
or
jo
jb
bound
dec
loop
jge
arpl
aaa
not
push
push
test
mov
test
xchg
push
and
and
cltd
imul
pop
cmp
push
addl
popf
fdiv
cmpsb
jge
ljmp
mov
sbb
scas
push
or
jbe
dec
and
andb
in
jns
inc
cltd
fwait
pop
add
add
cli
cmpsl
sub
jnp
mov
adc
ret
pop
ret
or
pop
cs
in
and
adc
adc
mov
pop
add
inc
dec
mov
sbb
pop
mov
push
jb
add
jmp
push
shll
pusha
or
nop
push
dec
mov
inc
test
inc
sbb
in
cmp
mov
hlt
clc
ja
or
mov
fistpl
add
sti
les
mov
mov
int
or
movsb
pop
out
jbe
dec
lcall
cwtl
data16
lea
jbe
xchg
cmp
hlt
pop
mov
push
fidivrs
mov
aam
bound
lock
fistps
cmp
inc
pusha
nop
in
sbb
lock
ds
jl
mov
xchg
xor
mov
jge
jbe
cmpsl
cmp
sbb
dec
les
pop
mov
je
mov
push
ret
dec
inc
sbb
aaa
es
pop
int3
inc
insb
int3
inc
sbb
jecxz
mov
push
sub
rcl
loope
cmpsl
push
test
dec
mov
loopne
sbb
ret
add
cmp
vpmulhw
lds
jbe
imul
xor
addr16
movsl
push
and
icebp
push
dec
push
les
sbb
cli
sahf
add
mov
test
mov
jmp
stos
dec
mov
xor
xchg
lods
lret
ds
add
pop
ficomps
xor
icebp
xchg
inc
cmpsl
insb
fstps
mov
xchg
push
xor
mov
mov
lock
movsb
jo
xchg
stos
fimull
lahf
movsb
push
xchg
or
arpl
bound
scas
dec
fisubrl
pop
popl
mov
mov
push
outsl
mov
mov
pop
xchg
js
js
add
jbe
loope
fucomp
jnp
inc
test
icebp
ret
out
sub
mov
out
test
aas
dec
rcrb
jnp
xor
into
ret
mov
pop
fsubs
pop
jp
ja
daa
mov
mov
enter
pusha
cld
push
pop
ja
jl
xor
dec
shll
in
push
addr16
pushl
mov
mov
mov
sbb
loop
cld
les
shrb
arpl
pop
inc
add
flds
in
sub
adc
mov
and
std
jmp
xchg
sbb
adc
sub
inc
push
push
fldcw
mov
xor
inc
test
sbb
insb
insb
leave
sbb
es
mov
arpl
xchg
lods
xor
mov
scas
pop
mov
decl
out
xchg
bound
lcall
sub
loop
add
aas
adc
movsl
fadds
cmc
push
cmp
push
jno
and
inc
lahf
mov
rclb
in
rolb
or
push
adc
insb
lea
push
mov
jmp
out
fdivrs
mov
add
ret
inc
fwait
sub
pop
mov
imul
test
test
daa
jno
jae
add
mov
push
fcomip
mov
mov
test
adc
cmp
jecxz
sbb
jle
pop
xchg
cld
sbb
cmc
add
fcomip
js
addr16
add
inc
lock
sub
push
jmp
push
xor
frstor
adc
jl
rorl
ret
push
ret
insl
jbe
pop
cmp
loope
jmp
lcall
jmp
loopne
sub
inc
or
xchg
sbb
or
hlt
cmp
cmp
push
bound
xor
sub
cmp
jo
hlt
push
insb
mov
push
clc
dec
test
je
bound
decl
leave
cli
jae
mov
pop
mov
imul
push
rcl
es
mov
pop
in
gs
mov
push
repnz
xchg
add
push
cs
fdivrl
xchg
cltd
aam
test
mov
dec
push
mov
in
or
push
dec
test
rclb
adc
xor
std
mov
pop
lcall
xchg
fxch
xchg
adc
and
fwait
jae
fwait
pop
add
add
sbb
loop
daa
call
jbe
lret
sbb
popf
repnz
daa
in
test
int3
mov
outsl
inc
dec
xlat
es
push
inc
xchg
mov
xor
leave
stos
in
jno
mov
xor
mov
das
repz
mov
loope
in
xor
inc
add
mov
imul
subb
stos
sub
icebp
sti
adc
jecxz
xchg
xlat
pop
lea
mov
or
fwait
and
mov
shl
jne
fld
in
js
repz
loopne
insl
movsb
or
xlat
popf
push
cmp
bound
shlb
int
mov
lds
scas
test
adc
xchg
mov
cltd
cmc
dec
sbb
cs
aas
loopne
push
and
or
dec
jg
mov
cmp
xlat
addr16
mov
jbe
push
inc
jecxz
sub
pop
sti
jne
xchg
fs
inc
cs
xchg
xlat
jae
sub
ss
jbe
mov
mov
pop
int3
xchg
lea
push
out
mov
and
pop
call
add
jne
movsb
sub
dec
fcmovbe
or
loop
push
mov
fcmovu
insb
daa
jecxz
test
movsl
imul
add
cmp
xor
pusha
dec
dec
repz
sbb
fldcw
jp
sub
out
or
test
lods
mov
and
test
bound
mov
jg
test
fsubs
loop
test
fs
fmulp
in
popf
jmp
mov
adc
sbb
popf
aas
pusha
xchg
sbb
call
fldl
mov
shll
gs
repz
data16
mov
aad
pop
sub
outsl
lahf
popa
mov
push
stos
dec
mov
repnz
in
fs
fwait
add
xor
and
int
cli
in
xor
fldl
adc
divb
sahf
out
test
sbb
xor
repz
adc
std
pop
fstpl
subb
adcb
add
or
loope
icebp
jbe
push
mov
cltd
add
enter
fstpt
lock
adc
sub
mov
scas
hlt
int
clc
push
insb
mov
mov
fidivrs
lret
mov
pop
mov
mov
mov
sbb
push
cmp
xchg
out
inc
nop
xchg
mov
in
lock
or
inc
daa
mov
mov
or
es
imul
adc
daa
adc
mov
out
xchg
fisubrl
xor
ja
jbe
nop
mov
ds
sarl
icebp
or
add
jmp
mov
push
jge
fwait
and
add
in
jmp
jge
xor
pop
cltd
aam
jb
mov
pop
mov
mov
mov
sbb
cmpsl
fcoms
fcmovbe
lea
ljmp
aad
enter
test
mov
repz
and
ljmp
xor
mov
invd
add
flds
out
push
or
int3
xchg
push
mov
loopne
pop
add
stos
push
add
sbb
mov
out
sub
inc
iret
or
ficomps
dec
mov
cltd
aas
xor
and
popa
sbb
inc
sub
es
or
rorb
sbb
fstl
daa
lods
mov
sahf
pop
std
push
jo
sub
cmp
xchg
inc
ret
or
push
aas
sbb
inc
cmc
add
test
out
lods
push
notl
test
xchg
test
jecxz
imul
mov
leave
iret
sub
fmull
arpl
and
shlb
jo
fucomi
cmpsb
in
addr16
sbb
in
push
leave
mov
mov
rclb
dec
les
push
jae
inc
outsl
push
imul
jo
imul
arpl
mov
outsl
dec
enter
inc
push
leave
pop
jmp
adc
arpl
xchg
add
xchg
fdivrl
mov
push
mov
pop
and
enter
xchg
or
mov
xor
dec
int3
jbe
fwait
jp
xchg
jnp
push
out
mov
mov
mov
mov
cltd
dec
jle
sub
out
sub
sbb
cmc
adc
mov
cmp
sub
mov
inc
mov
shrl
cmp
xor
push
loop
xchg
call
les
aaa
xchg
or
pop
and
je
bound
in
add
icebp
xchg
sarb
sahf
mov
subb
mulb
inc
icebp
shlb
shl
xchg
imul
push
pusha
dec
loopne
loopne
nop
popa
cmp
dec
shl
subl
ficompl
xor
mov
jle
cmc
lods
bound
pop
jbe
adc
sub
ss
mov
popa
dec
stc
jmp
xlat
add
dec
test
rolb
cmpsb
leave
out
xor
mov
mov
ds
adc
shll
test
in
pop
lret
fidivrs
cs
jnp
cli
push
loop
dec
inc
scas
adc
fisubrl
lods
jns
addr16
mov
cmp
stc
pop
test
sbb
dec
hlt
std
xor
loopne
and
cmc
out
insb
vpaddsb
xor
les
loop
das
lcall
js
inc
movsl
jns
mov
outsb
add
test
nop
xor
sbb
or
jae
xor
mov
fsubs
sbbb
sbb
pop
mov
lods
mov
int3
fistpl
iret
fsubrs
jae
lret
ds
imul
loop
test
ret
lret
jbe
stc
pop
pop
dec
rorb
adc
push
mov
jp
in
fs
adc
je
push
movsl
lock
int3
das
and
sarl
push
mov
xor
movsb
pop
mov
rolb
jmp
xor
and
dec
push
iret
add
mov
call
add
testb
mov
nop
pop
scas
and
pop
imul
xor
dec
daa
sar
es
cmp
add
rcrb
lahf
adc
dec
fistpll
or
dec
fistpll
clc
xchg
push
call
ds
mull
pop
pop
loop
or
ds
jnp
stos
dec
mov
aad
stc
jae
mov
int
lock
mov
iret
xor
cwtl
mov
fcomp
loop
je
inc
and
jbe
dec
and
fldt
pop
out
mov
cli
int
and
out
mov
fwait
lret
xor
daa
add
lock
leave
dec
nop
xor
test
stos
dec
dec
scas
test
push
or
push
ret
mov
or
imul
in
movl
push
js
mov
aad
scas
cmp
scas
aam
cmp
dec
loope
loopne
inc
mov
dec
scas
mov
dec
lock
adc
mov
mov
rep
into
test
jnp
shl
ret
fwait
push
dec
sbb
push
out
adc
pop
sbb
ja
movsb
fwait
ds
sbb
pushf
subb
jbe
subl
jae
addb
lret
scas
and
mov
dec
jge
loopne
scas
jl
sub
mov
lahf
mov
imul
jge
cld
adc
jo
scas
lret
test
mov
sbb
cwtl
mov
dec
inc
jl
push
call
shll
ja
mov
and
les
cmpsl
cmp
xor
lahf
hlt
sub
in
dec
jns
mov
scas
xor
jae
jo
jnp
xor
inc
push
push
ljmp
bound
and
cmpsb
sbb
and
pop
push
in
aas
adc
or
loopne
pop
test
lahf
sub
dec
mov
pop
mov
inc
test
xchg
mov
lret
fs
fyl2x
inc
in
dec
adc
in
add
shl
idivl
iret
inc
es
int3
fbstp
inc
mov
out
lods
lret
popf
cmc
dec
mov
loope
scas
rorl
push
add
insl
pop
dec
adc
or
fstps
xchg
pop
dec
inc
cld
and
imul
movsb
popa
and
push
pop
jge
ret
inc
add
rcll
push
stos
push
addr16
inc
aad
mov
movsb
movsl
add
or
mov
mov
movsb
mov
xor
cmpsl
xor
cmpsb
xor
lret
icebp
scas
dec
movb
push
jae
sbb
jmp
movl
mov
cwtl
sar
and
iret
or
rcrl
gs
adc
jns
cs
xchg
xor
idivb
pop
ret
push
repnz
pushf
cmp
push
mov
daa
les
push
jbe
push
insb
mov
sub
rcrl
pop
outsb
mov
std
cmp
loope
mov
xor
sbb
shl
sub
outsb
xor
popf
add
js
xchg
push
sbb
adc
jns
inc
mov
das
imul
ret
push
movsb
dec
sub
cmp
fs
push
popa
outsb
pushf
mov
js
mov
rcrl
mov
cmp
inc
adc
mov
ficompl
pop
pop
in
je
aas
lcall
jno
je
sti
push
nop
xor
xor
ficoms
sub
cmp
dec
iret
xor
inc
inc
push
rorl
loope
aas
xor
push
sbb
push
repz
xor
push
cltd
xchg
shrb
or
xchg
mov
cmp
mov
push
clc
sbb
push
or
cmp
push
out
incl
mov
clc
stos
call
shl
jnp
jae
fwait
dec
rorl
rclb
lods
dec
fdivl
mov
or
jl
jmp
cmc
imul
push
sbb
push
testb
jne
xor
clc
sti
aaa
jnp
push
iret
sti
rclb
sub
rorl
xchg
leavew
ret
lods
push
mov
test
inc
jns
mov
or
sbb
in
add
je
dec
or
loope
jne
cmp
pop
mov
shrb
mov
rcll
leave
popl
or
mov
mov
sub
sub
stos
pop
mov
cmpsl
aas
inc
inc
or
nop
sbb
add
fisttpl
aaa
pop
enter
xchg
out
cs
xchg
fldcw
sbb
sub
push
lcall
mov
std
test
push
movsl
xchg
push
into
jno
adc
lcall
xchg
dec
pop
mov
stos
and
push
fsts
fiaddl
adc
sbb
shr
movsl
rcl
mov
push
bound
enter
movsl
setl
pusha
lret
xchg
xchg
popl
sub
in
lret
lds
in
inc
paddd
mov
push
xchg
rcrl
push
cmp
outsb
das
or
inc
pop
icebp
imul
and
test
xchg
icebp
mov
fcompl
popf
or
mov
out
pop
icebp
pop
movsl
ret
and
outsl
sahf
dec
cmp
push
jecxz
and
push
mov
lahf
mov
dec
sbb
adc
jns
inc
mov
or
jle
lods
add
push
push
inc
and
push
out
mov
popf
or
into
cmpsb
mov
push
loope
fsqrt
mov
push
jne
jmp
pop
pop
je
jb
sbb
js
dec
mov
hlt
mov
add
shll
pop
jg
sub
xor
gs
mov
dec
es
insl
xor
jp
scas
out
loope
shll
mov
cli
in
xchg
repz
mov
adc
pushf
sbb
pushf
les
sarl
jge
out
push
aas
inc
ljmp
stos
push
pop
inc
mov
or
adc
insb
dec
repnz
pop
jle
lcall
cltd
cmp
inc
dec
out
stos
xchg
jge
sub
repnz
iret
mov
xchg
outsl
clc
loope
hlt
mov
popa
sub
adc
jecxz
pop
jmp
fdiv
mov
xor
sbb
lret
ljmp
pushf
push
and
jp
lods
pop
gs
iret
add
or
cli
add
jnp
inc
call
into
inc
and
in
andb
cld
xchg
dec
cmpb
fdivrl
and
ret
aas
mov
lods
cmc
cmpsb
je
mov
je
das
pop
sbb
movsl
aad
sub
in
sbb
insl
add
or
add
popa
push
test
dec
js
mov
push
fiaddl
movsb
xchg
mov
aad
mov
cs
or
aad
je
xchg
dec
dec
and
fisubrs
test
sbb
int
mov
pop
stos
popa
cmp
stc
outsl
jmp
inc
xchg
gs
ss
pop
xchg
js
jl
or
inc
shlb
mov
data16
adc
push
or
pushw
out
loopne
xchg
ror
shlb
push
loope
mov
stc
jecxz
jge
or
mov
sub
dec
outsb
mov
fs
insb
imul
inc
mov
cmp
adc
jne
xchg
aaa
fisubrl
mov
loope
loopne
jno
data16
adc
or
dec
add
push
popa
push
stos
mov
xor
mov
aam
repnz
sub
push
sbb
cwtl
push
pop
push
add
or
out
jl
mov
jae
or
adc
lods
sub
ficoml
sarl
rcll
scas
fs
xor
jp
in
sub
cmp
dec
jmp
cltd
sbb
imul
push
adc
cli
scas
sbbl
mov
insl
sbb
push
sub
sti
mov
addl
mov
adc
lods
jo
xchg
insl
pop
fists
dec
add
xchg
push
adc
insl
fcoms
and
rclb
lds
jp
bound
sub
mov
hlt
aad
in
ja
das
cmp
testl
cmp
je
mov
sti
cli
adc
xchg
xor
clc
popf
fbld
cwtl
add
and
testb
or
mov
xchg
inc
inc
pop
or
dec
push
sbb
push
and
jnp
imul
or
andb
and
das
jmp
cltd
cmpsl
movsl
jg
into
or
and
sbb
xor
divl
add
mov
mov
jl
pop
xchg
loope
and
inc
outsl
pusha
jg
js
cmp
xchg
add
inc
cmp
xor
fwait
shrl
jnp
mov
mov
push
inc
inc
pop
or
dec
rclb
and
mov
lcall
arpl
lret
cmpsl
or
jl
adc
mov
sti
in
cmpl
mov
mov
xor
ret
sub
pop
inc
popf
in
pushf
lea
or
jns
shl
mov
ljmp
ret
cltd
xor
inc
sub
sbb
cmp
or
jne
pop
cmp
jo
sbb
repnz
popl
xor
pop
push
mov
push
xlat
dec
cmp
rorl
sbb
sub
mov
sahf
lods
adc
mov
sub
test
in
into
out
icebp
inc
fnstcw
pop
push
jmp
in
jbe
xor
loope
imul
pusha
clc
aam
stos
pop
pop
movsl
adc
adc
addr16
cmp
leave
or
imul
mov
pop
mov
inc
jmp
scas
xor
sub
nop
cs
test
xor
cmpsb
les
lahf
pop
daa
repnz
out
pop
fildll
sub
adc
iret
popf
inc
rorl
out
pop
mov
imul
and
je
mov
add
andl
mov
xor
jnp
fnstenv
ja
cmp
jno
pop
jb
push
cmp
orb
dec
mov
rcrb
arpl
xchg
jmp
adc
ja
cmc
xor
or
shrl
cmp
test
push
dec
iret
push
adc
out
adc
test
int3
jb
inc
push
or
in
jnp
jae
xlat
lret
hlt
ljmp
sub
cwtl
push
or
add
ret
jns
pop
jns
xor
fisttps
test
fisubs
notb
mov
sbb
fisttpll
insb
jo
jl
sub
out
jg
push
std
dec
popf
dec
dec
push
hlt
mov
imul
imul
sbb
xor
dec
sti
push
push
cmp
lods
dec
shll
add
xchg
xchg
xor
sbb
sbb
adc
push
out
aaa
inc
in
aam
mov
std
fists
fdivrs
mov
test
sbb
insl
or
jp
movsb
andb
pop
jno
mov
pushf
leave
ja
les
push
addr16
mov
inc
int
scas
int3
in
xchg
push
adc
test
pop
jmp
in
mov
or
mov
data16
xor
pop
int3
mov
xchg
movsl
push
sti
add
ret
add
aaa
shrb
xor
mov
pusha
popf
ja
adc
xchg
lea
mov
loop
bound
stos
ljmp
or
leave
out
cmp
call
push
sbb
les
dec
mov
pcmpeqb
daa
das
into
sub
dec
cmpsb
adc
rcrb
dec
in
les
jbe
andb
rorl
sbb
fdivrs
outsl
mov
dec
inc
sub
int3
cmpsl
mov
jmp
mov
or
or
cmp
mov
dec
in
mov
jmp
dec
shlb
xchg
mov
inc
sub
movsl
jnp
jnp
repnz
cli
jo
mov
fs
cmp
pop
rorl
or
mov
inc
rorb
and
xchg
mov
movsb
cmp
pop
fdivs
adc
dec
popf
repz
xchg
stc
jno
push
fidivs
push
or
fnsave
xchg
and
aaa
cmp
in
jae
adc
neg
lahf
push
push
je
mov
aam
xchg
cmp
dec
jo
dec
ds
lods
cld
pop
dec
out
inc
dec
sbb
enter
int3
push
movsl
jle
sub
cwtl
sahf
add
enter
mov
pop
xor
scas
mov
push
add
sbb
rcrl
xchg
popa
arpl
dec
mov
cmc
push
scas
movsb
sbb
cmp
insb
outsb
pop
cmpsb
cmp
imul
mov
movsl
clc
dec
rolb
or
jp
sti
cmp
loop
sahf
sbb
scas
jb
aam
push
pop
mov
push
fcomp
ljmp
adc
cltd
cmc
dec
js
cmp
add
pusha
jns
mov
sbb
jno
inc
mov
mov
call
cmp
mov
pop
inc
leave
fdivrl
pop
aad
sub
jo
jno
mov
push
push
sbb
sub
fcmove
sbb
jb
or
addr16
pop
mov
inc
and
add
jp
fldl
or
or
sbb
into
pop
fxch
xchg
sahf
in
pop
mov
js
add
push
mov
fstpl
push
lods
adc
sbb
test
test
cmc
cmpsb
pop
push
jecxz
xchg
mov
mov
in
push
fs
fdivs
jo
sbb
xchg
mov
cmc
or
pop
dec
or
das
enter
cmc
xchg
xchg
popf
adc
add
mov
stos
xchg
aad
add
ja
in
sbb
sub
imul
pop
cmp
dec
or
lret
or
das
fcoml
pop
sub
cmc
dec
xchg
pop
sub
lcall
hlt
xchg
v4fnmaddps
cmpsl
cwtl
andl
push
call
pop
mov
int3
dec
push
fdivr
sub
pop
mov
insl
xor
aas
addr16
loope
insb
adc
or
xor
ret
loope
jo
rcl
or
add
pop
push
das
mov
pop
stc
mov
mov
pusha
jecxz
cs
xor
pop
loopne
sbb
loope
negb
mov
lcall
imul
or
inc
xchg
push
shll
cltd
out
mov
xor
cmp
add
or
sub
test
fistpll
sub
xor
popa
add
cmp
lea
call
lcall
rcrl
leave
inc
adc
jl
dec
xchg
cwtl
das
sbb
xchg
xor
test
pop
decl
sub
dec
outsl
jb
mov
cli
mulb
cs
stos
in
insb
movaps
sbb
loopne
std
nop
sub
in
mov
sbb
scas
jae
test
jl
clc
jne
jb
jl
push
adc
jp
jle
mov
repnz
mov
or
into
aaa
mov
jbe
adc
or
mov
dec
test
cmpsl
dec
fdivr
sbbb
push
cmp
repz
scas
mov
pop
xchg
jne
std
mov
sub
push
loopne
pop
and
cmp
lahf
pop
aas
in
dec
sub
sub
roll
mov
inc
jecxz
inc
jle
push
fmuls
jb
outsl
daa
dec
pop
jmp
or
push
mov
xor
loopne
sbb
aaa
sbb
stos
insb
lds
add
mov
push
clc
ljmp
or
sbb
popf
les
mov
xor
and
cmp
aad
fstpl
jno
xorl
jne
jne
mov
fldt
mov
lcall
in
inc
shlb
and
pop
pop
cmp
and
xor
aad
or
jmp
jp
add
xor
sbb
jmp
icebp
icebp
mov
push
jg
push
dec
cli
adc
push
xor
jbe
dec
mov
xchg
imul
jmp
mov
dec
add
mov
inc
mov
xchg
mov
test
lea
arpl
jae
jge
push
inc
xchg
outsl
call
ss
stos
xor
into
mov
fucomi
lret
or
pop
fs
mov
insl
push
mov
dec
sti
lds
rcrl
gs
aam
aaa
or
mov
ljmp
lods
add
lds
and
sbb
stc
inc
es
sbb
push
xchg
mov
imul
jge
pushf
mov
ljmp
push
and
dec
or
xor
mov
mov
cmp
jbe
mov
mov
xor
push
and
sarb
or
scas
jo
mov
pop
jmp
sbb
addr16
loop
jne
mov
xchg
nop
imul
dec
fdivs
stc
outsb
pop
stos
int3
hlt
and
lods
addl
mov
outsl
insl
mov
es
jmp
dec
mov
lds
stos
mov
ret
pop
and
fdivl
dec
repz
popa
lahf
jp
mov
cmp
or
jae
jb
flds
into
sub
out
bound
sti
jmp
lea
pop
pusha
add
ds
and
aaa
adcl
or
shll
xchg
or
test
outsb
xchg
jp
push
fistps
lret
insl
cmp
fiadds
add
lods
cmp
stos
es
arpl
ror
xchg
xchg
das
orb
pop
pushf
adc
mov
call
dec
cmp
pop
pop
xlat
push
mov
lea
xor
sub
stos
pop
popa
testl
pop
loopne
mov
sbb
repnz
push
js
sti
aam
aaa
push
pop
lock
jne
ja
add
lds
insb
mov
cmp
aam
mov
aas
mov
xchg
or
jle
push
jo
lret
test
outsl
dec
mov
fdivrs
scas
xlat
push
lods
mov
or
jne
inc
fistl
mov
fsubl
adcl
movsl
stos
fistpll
push
add
jo
or
add
aad
jo
dec
mov
bound
jle
sub
inc
bound
push
pop
jne
add
outsl
mov
xor
mov
sbb
ds
mov
dec
add
jno
xor
repz
push
imul
iret
xchg
jb
jb
mov
push
xchg
test
dec
sbb
push
and
mov
shll
inc
sbb
cmc
and
test
push
cmpsl
push
add
insl
dec
push
enter
loopne
xchg
shrb
aad
cmpsb
mov
iret
movsl
mov
inc
dec
adcb
add
or
popa
jb
mov
rcl
cmp
xor
dec
orb
xor
xchg
hlt
adc
xorb
cmp
loope
inc
push
ljmp
scas
and
sbb
cmp
jg
xor
xor
push
daa
sub
lcall
test
addr16
rcrl
fstpl
movsb
mov
mov
adc
mov
jne
xor
int
and
movsb
imull
ljmp
sbb
xchg
and
jl
jb
rcll
or
sbb
lock
pop
mov
inc
daa
mov
mov
push
imul
int
fisttps
inc
lods
out
jae
inc
cmc
mov
out
es
popa
add
or
stos
decl
inc
popf
std
loope
or
mov
in
jge
imul
je
pop
mov
cmpsl
mov
imul
xor
test
pop
out
cwtl
cmp
stc
fptan
fistpl
xchg
fisttpll
aas
lahf
sub
out
sbb
mov
or
sbb
sti
loopne
cmpl
sub
aam
mov
sbb
sarb
sbb
dec
std
inc
adcl
das
cld
mov
int
mov
ret
arpl
cmc
lods
cltd
mov
icebp
aad
mov
jmp
mov
dec
dec
rcll
sahf
scas
pop
insb
push
mov
push
inc
shlb
test
movzwl
mov
mov
outsl
cmc
leave
push
mov
dec
ficompl
jg
add
adc
fstps
test
lock
movzwl
xchg
cmp
loope
lcall
dec
outsl
pop
cwtl
movsb
mov
aaa
call
add
cmp
mov
push
insb
das
out
adc
fs
test
ret
cmp
push
cmp
mov
push
xor
push
xchg
leave
loopne
movsb
fnstcw
push
int
jnp
adc
pop
pusha
out
cmpl
lds
push
lds
lock
dec
pop
add
cmp
stc
gs
push
movsb
sti
mov
mov
lcall
push
mov
dec
push
cltd
icebp
jmp
aam
mov
repz
mov
jmp
push
pop
jnp
xor
stos
mov
setg
cmpsl
imul
dec
cmp
dec
scas
and
jno
mov
lret
adc
sub
rorl
aas
fldl
push
mov
push
scas
pop
test
cmp
dec
mov
push
jle
push
xrelease
mov
leave
in
and
aad
push
test
mov
roll
mov
movsl
push
sub
cmpsb
xchg
les
imul
std
cmc
xchg
ret
dec
stc
dec
in
jp
jle
outsl
jp
add
xor
add
mov
sbb
scas
imul
sti
cmpsb
jno
dec
add
sub
xor
sub
adc
cmp
ret
push
repnz
push
mov
lahf
loop
sbb
ja
sbb
and
or
mov
out
in
je
cwtl
mov
sbb
mov
mov
push
test
and
jo
imul
test
xor
ds
in
repz
ror
cmp
adc
ljmp
fucomip
sub
jmp
push
adc
push
and
sub
xor
or
mov
and
push
loopne
push
ja
pop
or
cmp
rorl
imul
add
mov
or
dec
enter
mov
in
sub
sbb
push
mov
std
sbb
inc
ljmp
sbb
adc
adc
pop
pop
call
test
pop
ret
mov
mov
and
xchg
or
add
push
push
insb
inc
mov
adc
dec
shll
movb
adc
pop
cmp
push
movl
inc
pop
rcrb
outsl
cs
cmp
scas
fsub
push
mov
and
repz
xor
pushf
pop
jns
mov
pop
cmpsb
sub
in
loope
icebp
mov
xor
fs
xlat
dec
pop
setae
lds
or
lcall
cltd
adc
cmpsl
pusha
dec
mov
push
in
loopne
out
rolb
jo
cli
xchg
xor
mov
xchg
cmpsb
outsl
fstpl
test
lahf
mov
aas
mov
inc
mov
stos
fadd
ficoms
data16
cmp
mov
call
xlat
jae
mov
bound
sub
push
sbb
lahf
mov
push
js
inc
sti
jle,pn
inc
in
pop
orl
push
add
stc
in
mov
ret
rol
add
sub
mov
mov
sbb
push
daa
inc
cld
out
sub
orl
add
in
adcb
mov
in
mov
aam
pop
sub
push
out
pop
adc
push
loop
jnp
and
push
adc
sub
xchg
mov
pop
xchg
pop
mov
daa
movsl
add
xchg
or
mov
insb
xchg
adc
mov
lahf
scas
pop
orb
cmp
inc
mov
jb
mov
sbb
mov
mov
dec
push
cld
fwait
push
push
cmp
xchg
daa
jle
dec
xor
cli
jne
int
dec
lea
insl
scas
cmp
and
push
pop
and
decl
cmc
insb
cmpsb
xor
into
push
cmc
xchg
jecxz
sbb
mov
testl
fldenv
push
fsubr
inc
loope
cmp
sub
and
insl
cmpsl
pop
xchg
xchg
and
xchg
lds
mov
lods
data16
xchg
pop
inc
push
mov
jp
and
jge
iret
ljmp
mov
ds
and
js
xchg
sbb
lds
leave
and
mov
jo
adc
push
and
loope
mov
out
jb
dec
dec
mov
aad
cld
mov
mov
sbb
mov
mov
xchg
pop
test
into
stc
out
les
faddl
xchg
rorl
xchg
pop
ficompl
loope
push
xchg
shrb
rolb
loop
fsubrs
pushf
in
bound
insl
cmp
jecxz
pcmpeqd
repz
xchg
xorl
in
sarb
adc
push
adc
lret
mov
cs
mov
sub
jge
or
inc
mov
xor
inc
out
outsl
mov
add
jecxz
push
ljmp
test
jnp
loop
fistl
sub
mov
leave
xchg
jg
testl
into
lret
popa
mov
jne
outsb
repz
call
pop
loop
fistpll
adc
dec
scas
rclb
into
mov
aad
xor
sbbb
mov
out
cmp
add
popa
xor
cli
loopne
or
fdivl
sti
xchg
in
xchg
xchg
jb
movsl
cmc
push
xor
xchg
xchg
xlat
lock
add
push
aaa
popa
xor
ficoms
jp
push
insb
push
cmp
mov
mov
push
fwait
lock
es
out
and
pop
adc
sbb
lds
adc
lods
out
mov
mov
cmp
aaa
in
mov
adc
add
shr
jg
jae
adc
ret
repnz
adc
movsb
xor
add
sub
sub
xchg
or
sti
lret
cmp
fwait
mov
ds
jno
pop
xchg
shlb
sti
fcompp
cmpsl
sbb
dec
fnstenv
dec
cmpsb
cli
stos
fnstenv
pop
mov
push
gs
mul
push
pop
cmp
repnz
inc
jae
dec
push
mov
push
test
aad
xor
into
jge
das
jecxz
ss
adc
popf
dec
mov
repz
sbbb
and
in
mov
and
lcall
stos
or
dec
mov
ljmp
int
inc
movsb
in
add
and
popa
xchg
inc
sti
sub
mov
ja
push
dec
mov
icebp
sub
push
in
ds
lock
mov
aaa
lahf
mov
xlat
push
sub
pusha
sub
sub
or
mov
xor
add
pop
mov
pop
push
push
or
das
das
push
fsts
shll
in
cmpsb
pop
dec
pop
jmp
add
lods
ret
push
or
fistl
sbb
adc
pop
push
in
cmpsl
rolb
inc
cmp
repnz
jae
jle
imul
push
cmp
scas
cmp
jb
sub
jns
mov
push
loopne
mov
push
jns
test
out
jb
nop
lods
sbb
int3
push
jge
inc
addl
not
push
cmp
sbb
arpl
xor
dec
clc
outsl
and
shlb
arpl
lret
inc
addl
inc
inc
dec
sub
call
mov
dec
cmp
fmull
pop
mov
sub
faddl
daa
pushf
addr16
mov
outsl
jo
xchg
cmpsl
int3
ret
test
xchg
adc
sahf
xor
fmull
andl
scas
dec
add
cmc
push
add
pushf
icebp
pop
bound
int
test
mov
push
mov
jnp
mov
push
out
dec
cmp
std
call
loope
xorl
stos
jbe
mov
hlt
jl
jns
ljmp
in
cmp
out
test
gs
sub
and
out
mov
mov
out
dec
fstps
je
push
adc
adcb
sub
or
fcom
cwtl
not
mov
inc
adc
pop
xor
jmp
xchg
pushf
mov
cmpl
fs
hlt
inc
out
mov
pusha
roll
aad
jmp
loop
xchg
loopne
jo
ja
jne
adc
popa
scas
push
loopne
jmp
imul
pop
in
filds
pushf
sti
xor
movsl
rorb
test
push
and
push
cwtl
inc
mov
fistpl
fs
dec
or
inc
montmul
cmpsb
add
sub
aad
ret
jle
std
inc
xlat
xchg
mov
pop
cmp
push
add
add
es
xor
cmp
outsb
push
xor
jmp
mov
or
adc
js
pop
shll
imul
inc
sbb
push
es
ror
mov
fdivr
jns
push
xchg
add
fdiv
movsb
sub
inc
xor
push
adc
sbb
adc
mov
int
xchg
imull
xchg
je
sar
ljmp
inc
test
int
lcall
pushf
and
scas
roll
addr16
sub
adc
mov
insb
movb
cmc
push
div
jno
xor
pop
push
mov
in
sub
mov
mov
and
add
inc
jle
push
push
push
int
mov
add
lods
mov
sub
jbe
out
jno
sahf
inc
pop
jnp
mov
xchg
inc
pop
ds
or
test
and
push
in
jb
cmpl
outsb
jae
sub
fwait
lahf
sahf
shl
mov
repz
scas
jno
test
out
jno
push
rcr
and
pusha
mov
jmp
jecxz
jge
add
dec
sbb
out
clc
sbb
mov
mov
in
in
clc
mov
into
ficompl
jno
mov
cmp
xor
add
scas
mov
shr
xchg
push
adc
jp
cmp
lods
jbe
lcall
xor
dec
mov
test
push
test
lock
std
sbb
jle
cs
cwtl
ss
sub
imul
repz
rcr
cmp
fstpt
ljmp
fwait
mov
scas
daa
lock
out
adc
adc
fistpll
mov
aaa
xor
push
or
sub
pop
scas
mov
push
out
push
out
aas
es
adc
inc
stc
les
xor
sub
out
mov
in
jo
cli
pop
jnp
stos
push
loope
cmpsb
lods
repz
daa
enter
jno
ret
adc
xchg
fldl2e
sub
sbb
inc
ret
ret
sbb
push
pop
mov
lods
xchg
inc
push
notl
cmp
push
cmp
push
mov
add
test
iret
out
push
call
ret
dec
in
mov
aas
test
gs
imul
cltd
pop
rcl
test
inc
pop
or
out
pop
pusha
pop
bound
pop
out
lret
inc
call
mov
sub
push
inc
je
mov
push
jne
ss
pop
cltd
mov
xchg
aas
ds
stos
aaa
jp
cmp
sub
nop
in
mov
mov
lods
xor
sbb
xor
lret
mov
dec
outsl
jge
xchg
pop
xor
mov
es
push
mov
and
cli
fbld
and
push
mov
jp
push
test
stos
push
mov
cmpsb
add
and
or
aas
or
cli
movsl
cld
mov
pushf
cmp
js
in
sti
or
xor
addr16
divl
or
imul
dec
cmpsb
ret
pop
into
mov
mull
lods
jge
mov
xchg
pop
scas
sub
test
clc
les
jno
mov
sub
push
mov
cmp
fiaddl
xchg
cmp
repz
xchg
fwait
pop
call
aad
ja
outsb
inc
mov
cmp
hlt
icebp
mov
cld
and
and
jmp
mov
push
jp
sbb
fisttpl
out
cmp
dec
mov
dec
ja
push
jnp
test
xchg
xchg
and
out
movsb
fmull
pusha
adc
fstpl
cmp
xor
das
or
lcall
icebp
testl
cli
jo
addb
pop
sub
lcall
sub
movsl
cmp
fldcw
cli
fsts
or
mov
cmp
lods
cmp
ret
test
cmp
je
push
mov
inc
nop
jmp
movsl
push
dec
push
iret
sub
mov
ret
jno
ljmp
or
inc
aas
decl
inc
sahf
jo
mov
mov
sahf
pusha
loopnew
leave
adc
mov
inc
pop
mov
and
andb
mov
ja
pop
adc
fwait
in
jae
mov
fists
fwait
or
jg
outsb
push
or
jo
bound
loop
ss
cmpsb
mov
out
push
lahf
mov
loop
cmp
popa
xor
dec
sbb
pop
je
movsb
cmp
ficompl
push
jns
mov
pop
rcll
cmp
lret
outsb
and
push
push
push
cmpsb
mov
jns,pn
mov
sbb
ret
fbstp
addr16
stos
jecxz
gs
repnz
arpl
loope
and
mov
mov
jg
es
sbb
jmp
arpl
sub
mov
fs
mov
pop
jp
adc
sbbb
cmpsl
in
dec
mov
test
sub
repnz
sbb
sti
push
subl
pusha
cwtl
sub
pop
and
xor
add
aaa
mov
jecxz
dec
lea
int3
pop
sub
dec
ljmp
and
out
rcrl
pop
inc
scas
xlat
sbb
es
sub
inc
std
in
xchg
fcoml
push
sbb
inc
rorl
je
cmp
outsb
xor
ret
cmp
fisttpll
loope
mov
loop
sub
loop
or
dec
lds
into
test
gs
xor
cli
push
and
jb
arpl
das
push
mov
and
jl
cmp
stc
cwtl
sub
inc
outsb
popf
fmuls
scas
sti
add
jl
or
xchg
add
mov
xchg
es
jl
cs
push
nop
or
pushf
loop
movsb
and
jge
ret
hlt
cli
push
xlat
popa
dec
cltd
jecxz
imul
dec
out
es
pop
lds
add
dec
popa
fwait
sar
aaa
out
and
or
call
pusha
add
or
sub
scas
adc
enter
add
ss
fldcw
ficoml
pushf
lahf
add
cmp
mov
sub
push
adc
popa
ja
imul
lret
js
shlb
xchg
shr
inc
pop
jb
dec
bnd
fisubl
mov
into
cmpsl
jecxz
fsubrl
xchg
fdivs
movsl
pop
add
sbb
repnz
push
fstps
cmp
mov
cmp
stc
jae
jae
popa
pop
or
pop
loopne
xlat
sti
inc
stos
xor
push
vpshufhw
js
fdivrs
xchg
call
cltd
fstpt
sbbb
mov
and
jl
outsl
in
pop
out
jmp
adc
mov
and
add
sbb
or
pop
push
add
insl
lret
cmpsl
push
cmp
shl
rcll
gs
std
xlat
in
and
dec
jnp
cli
inc
test
hlt
fwait
mov
in
adcb
imul
fmull
mov
jge
xor
in
hlt
aad
xor
adc
lea
xor
scas
loopne
nop
add
jbe
fwait
inc
cmp
or
cli
jle
inc
sub
jnp
imul
adc
sti
xchg
xor
cld
mov
insb
mov
fcmovne
jg
push
xchg
xchg
mov
shl
test
in
movsb
dec
mov
xor
aam
in
push
in
pop
sub
imul
fwait
outsb
pop
lret
push
adc
jnp
subl
and
xchg
adcb
roll
inc
leave
mov
negb
push
or
fidivrs
mov
cmpsb
mov
dec
sbb
jno
loop
sahf
xor
into
fs
jmp
inc
imul
mov
rcr
xchg
sbb
jp
mov
rcrl
das
outsl
ret
fidivrs
xlat
adc
cmpsb
adc
enter
jno
test
addr16
or
push
popf
out
xchg
mov
cmp
leave
sti
add
inc
aam
sub
lods
aas
outsb
repnz
jmp
xor
mov
imul
out
mov
inc
jecxz
cwtl
jecxz
inc
push
lea
jmp
in
mov
repz
and
mov
mov
ret
push
xchg
or
int3
xor
fwait
clc
pop
sbb
jmp
sub
mov
push
pusha
mov
cmp
xchg
and
jp
push
sarl
daa
rcrl
inc
push
push
enter
dec
call
lret
mov
pop
xchg
xchg
mov
inc
or
repz
push
or
fists
popa
rcrl
mov
imul
mov
sub
inc
out
add
xor
xchg
jnp
lods
mov
sub
out
pop
ja
loopne
testl
mov
stos
in
xor
jp
cmp
sub
gs
jo
pusha
xchg
cwtl
push
jle
cmpsb
js
xchg
sbb
loop
add
cmp
adc
dec
lahf
cwtl
pop
push
lahf
xor
test
loope
nop
jo
ds
or
rorb
cmpsb
adc
push
js
dec
sahf
je
jo
inc
filds
push
ss
pop
ds
loopne
xchg
jbe
lds
xchg
ficoml
pop
ret
mov
or
pop
mov
bound
add
inc
cmp
popf
dec
sbb
sub
inc
aas
mov
add
cmpsb
mov
mov
jns
insl
dec
popf
fnop
cmp
lods
rcl
lret
cmp
enter
mov
pop
push
fs
lahf
js
sbb
cwtl
cld
into
fisttpll
xor
pushf
add
cwtl
fsubrs
mov
mov
inc
cltd
outsb
mov
mov
aad
out
testl
filds
mov
cmp
out
push
in
inc
push
sub
jbe
fmul
rclb
scas
scas
xor
test
into
mov
lret
incl
sysenter
and
aad
dec
out
loop
push
push
inc
sbb
and
mov
or
call
out
jl
inc
outsl
or
cltd
jle
lret
loopne
popf
and
enter
std
pushf
ss
cmc
je
ficompl
push
jg
enter
sbb
inc
idivl
mov
mov
and
mov
out
inc
push
and
orb
push
pop
mov
sub
out
push
stos
push
push
cmp
and
jmp
loop
jno
jg
outsb
lret
jg
test
rcrb
jle
movsl
int
lods
ss
out
jl
mov
mov
ja
cmp
pusha
dec
iret
xor
hlt
push
mov
sahf
call
adc
sbb
movsl
fcoml
xlat
dec
pop
clc
ss
repnz
inc
addr16
into
push
test
shrb
adc
test
jbe
addr16
mov
lea
inc
dec
movsl
add
sbb
cmp
sbb
and
clc
pop
inc
lea
lods
pushf
in
imul
stc
into
ja
pop
test
roll
iret
mov
jno
sbb
push
test
cmp
xchg
dec
dec
push
outsl
inc
jge
sti
jmp
mov
ret
jl
jg
insl
outsl
nop
test
ja
and
pop
adc
mov
add
scas
push
push
push
xchg
leave
push
lods
xchg
sub
ljmp
pop
divl
imul
divl
dec
mov
inc
hlt
lods
in
push
xchg
inc
out
jnp
stos
and
jle
sub
mov
rol
jle
add
shrl
jne
sbb
insb
shl
xchg
sbb
shrl
jecxz
push
test
mov
sub
ret
ret
cli
sub
jp
pop
mov
dec
dec
adc
sarl
in
dec
insb
jb
adc
mov
call
nop
adc
mov
dec
rcrl
cmp
xchg
dec
mov
xchg
iret
and
sub
aam
outsb
mov
xchg
dec
sti
fs
popf
in
fadd
pusha
xchg
incl
fsub
or
call
xchg
and
leave
mov
inc
rorw
negb
dec
pop
push
out
in
ja
push
fwait
sub
loopne
gs
mov
popf
cmpsb
aad
sub
jp
std
pop
aad
aaa
jne
add
shrl
ret
jnp
scas
mov
lret
loope
dec
cmp
test
jno
loope
loopne
and
in
push
adc
std
push
outsb
popf
js
cli
rcrl
jge
insl
loopne
adc
mov
das
and
loopne
push
cmp
lcall
mov
xor
lds
add
iret
mov
loop
flds
jecxz
jp
mov
int3
jae
je
inc
adc
xchg
push
cmpsl
xchg
or
inc
xchg
dec
add
dec
movsl
cmpsb
push
pop
je
and
jmp
cmp
loope
sti
cli
mov
leave
insb
jl
dec
pop
sbb
push
jecxz
icebp
fisubrl
jno
fldenv
inc
sbb
dec
data16
sbb
lahf
jb
and
sbb
pusha
xchg
pop
je
mov
cs
rcl
push
shlb
mov
mov
fwait
or
or
push
adc
mov
mov
cld
push
sub
shrb
stos
nop
enter
push
js
and
hlt
loope
cs
test
leave
je
sti
adc
sbbl
sbb
mov
cwtl
mov
scas
rcll
xor
lret
or
notb
js
jae
lods
arpl
sbb
inc
xchg
sbb
push
dec
dec
bound
mov
pop
inc
push
push
cwtl
out
inc
test
ret
ss
mov
mov
out
bound
int
insl
mov
xchg
xchg
sub
fcoms
leave
jge
scas
pop
or
lahf
jecxz
xchg
rcll
jns
stc
pop
xor
popa
insl
jecxz
dec
sbb
xlat
sbb
lds
lock
shlb
push
lods
in
lock
pop
lret
dec
les
jmp
ret
loope
pop
je
into
xor
stos
sbbb
jae
or
movsl
fsubs
cmpsl
push
push
sti
xchg
addr16
int3
jne
and
nop
mov
daa
sub
lcall
pop
mov
les
stc
ficoml
push
popf
loopne
jmp
mov
inc
inc
add
sahf
ja
lret
jnp
jmp
lods
or
gs
pop
dec
inc
pop
lcall
jge
sbb
gs
mov
or
repz
push
ret
pushf
movsw
bound
test
cli
movsl
cmpsb
or
jecxz
ss
and
cmc
leave
aaa
jnp
xor
icebp
mov
cmc
sbb
movsl
data16
push
imul
sbb
test
out
inc
lds
xchg
lods
and
jo
imul
mov
add
xchg
inc
jmp
pop
push
cmp
frstor
inc
nop
mov
in
out
stos
xor
mov
orb
pop
mov
cld
nop
adc
inc
mov
or
sbb
pop
jae
rol
adcb
mov
loopne
mov
or
jmp
jno
das
pop
ljmp
adc
leave
or
repz
jno
sbb
cmp
dec
inc
imul
adc
add
shll
ds
jecxz
faddl
sbb
inc
das
pop
jmp
in
movsb
call
sub
push
mov
pop
or
sub
lcall
adc
jmp
and
ret
mov
arpl
pop
and
adc
inc
sub
pop
push
leave
sub
lahf
sbb
lods
ret
movsb
jl
lock
call
dec
mov
xchg
lret
mov
xor
outsl
push
test
cmp
jl
mov
push
mov
lahf
ds
dec
mov
push
ret
js
and
cwtl
dec
jb
sbb
js
lds
movl
loop
repz
push
dec
cltd
pop
leave
or
je
sbb
sbb
lods
inc
dec
jl
xchg
mov
inc
pop
jl
xor
pop
les
sbb
adc
add
pop
xchg
inc
adc
xor
add
scas
rclb
add
mov
pusha
mov
and
mov
clc
fxch
jb
mov
push
aam
inc
pop
inc
lds
cmpsb
sbb
sti
xor
je
cmp
enter
loop
test
or
jl
dec
inc
jmp
add
imulb
or
mov
test
xchg
adcl
lahf
loope
add
je
adc
and
cli
dec
pop
repz
stos
pop
add
aaa
xchg
in
in
lods
inc
push
loop
pop
jle
xchg
scas
xchg
cmp
or
in
icebp
mov
stos
int
in
insl
lods
adc
dec
push
inc
jns
sbb
cmpsl
jl
shl
mov
das
fnstsw
popa
push
mov
scas
loop
vorps
jnp
sbb
push
mov
mov
ret
xchg
cmp
int3
sbb
movsl
sarb
and
imul
inc
gs
sbb
sbbl
int3
je
aam
gs
dec
ficompl
dec
jns
ja
cld
add
icebp
add
les
mov
mov
stc
adc
outsl
xor
adc
loop
push
add
lret
or
mov
subb
mov
pusha
xchg
pop
cmc
and
enter
dec
and
jno
and
jnp
lret
push
adc
leave
clc
ds
es
into
inc
push
nop
xor
pushf
scas
xorb
es
add
imul
nop
shl
rcl
jle
ljmp
fwait
inc
cmp
fdivl
pop
pop
dec
dec
icebp
lock
jecxz
in
ljmp
adc
call
lea
insb
cmpsb
cmp
sbb
arpl
test
jp
popl
xchg
jno
mov
inc
pop
dec
stos
xor
loopne
add
push
repz
mov
jnp
sub
and
ljmp
imul
insl
js
int
cmpb
mov
lea
gs
push
out
imul
rcrb
xchg
scas
cmpsb
sub
ja
sbb
popa
movsb
ss
sbb
push
xor
push
jae
hlt
sti
push
pushf
add
pop
dec
xor
mov
push
lret
cmp
and
stos
and
adc
out
dec
jae
sbb
ret
les
xor
rorl
stos
hlt
mov
arpl
adc
fsts
aas
inc
jp
scas
das
push
ss
in
adc
fbstp
xlat
jne
push
lahf
dec
lret
adc
cmpsb
jecxz
adc
je
push
shlb
dec
int3
shll
in
adc
sbb
cmp
mov
in
xorb
xchg
repz
add
mov
mov
dec
jg
cld
dec
call
adc
adc
clc
out
fxtract
jmp
jecxz
inc
or
cmpsl
xor
pop
shlb
adc
pop
lods
pop
inc
or
xchg
sahf
pop
cmp
mov
sub
jo
sahf
cmc
in
nop
andl
sbb
test
sbb
jmp
fldl
stos
dec
sub
stos
cld
clc
outsb
test
pop
mov
pusha
pop
lods
loopne
insb
cmc
sbb
push
dec
arpl
push
data16
add
cwtl
shr
ror
fwait
and
decb
aam
test
and
inc
ret
add
add
sbb
sbb
jae
ret
lret
lret
and
adc
jne
test
inc
xor
shrl
add
outsb
arpl
imul
mov
dec
out
xchg
or
push
cmpsl
aaa
rcll
sahf
loopne
lcall
enter
sbb
test
xor
mov
add
lock
fcoms
mov
test
in
xchg
test
or
fs
mov
stc
leave
jl
inc
push
sbb
xchg
cmc
adc
push
test
js
shr
jo
rol
push
out
push
add
jnp
mov
sbb
mov
pop
cwtl
pushf
aam
mov
aas
sub
jb
mov
add
js
ficompl
ss
xor
push
lods
inc
jo
xchg
out
fwait
inc
add
test
xchg
pushf
pop
push
cld
movsw
jae
sub
out
es
xchg
outsb
bswap
test
and
shlb
fldenv
mov
cmp
jns
nop
adc
add
pusha
cmp
push
fs
aad
rcrl
cmp
push
shl
and
jmp
push
into
mov
sub
dec
ljmp
xor
call
stos
jo
xchg
vmovhps
lods
stc
sbb
add
and
pop
pop
xor
jae
mov
pop
push
mov
repz
sahf
dec
mov
jae
rolb
les
test
stos
cmp
push
pop
lahf
cmp
mov
in
inc
jnp
adc
nop
push
int3
adc
rorb
cmp
pop
xchg
jns
cmp
rcrb
arpl
pop
ljmp
imul
mov
inc
push
xchg
pop
xlat
stc
mov
test
cmpsb
mov
out
lea
mov
rcrb
iret
rcl
dec
call
sub
pop
ds
aaa
adc
enter
jbe
dec
js
mov
push
pop
and
lock
adc
push
dec
outsl
cmp
dec
xchg
stc
cmp
jae
sahf
and
call
sahf
ja
pop
cmp
iret
jmp
push
ficoml
outsb
pop
and
and
cmp
inc
jg
addr16
ljmp
mov
add
lods
xchg
lret
outsb
das
and
leave
lret
jae
popf
inc
aas
mov
cmp
outsb
mov
lahf
xchg
in
fcompl
pushf
push
shlb
cmpsl
or
xchg
std
xor
dec
push
or
outsl
pop
or
loopne
jl
sub
mov
out
pop
sbbl
adc
push
insl
sbb
mov
mov
nop
les
lcall
jp
sbb
jecxz
lds
test
shlb
ret
cmp
pop
pop
lea
xor
cmc
sbb
push
inc
jne
popl
mov
shlb
loope
sub
dec
daa
ljmp
aam
cmp
es
pop
xor
cmp
arpl
and
xchg
in
push
sbb
movsb
sub
inc
lea
fldenv
inc
gs
inc
xlat
cmc
push
testb
jns
lods
mov
ds
movsl
icebp
imul
cmp
lods
jnp
fistps
scas
xchg
cli
aaa
mov
and
adc
lahf
sbb
add
subb
pop
or
xor
or
jmp
and
sbbl
and
dec
clc
inc
fiadds
pop
nop
jbe
add
and
arpl
dec
lahf
push
pushf
mov
setne
sti
fmul
aad
lds
or
mov
mov
jno
lret
ds
lods
pushl
jno
adc
sbb
fdivs
cmpsb
push
insl
push
lret
test
call
cmp
push
mov
cmp
xor
mov
sbb
shl
loopne
leave
or
jle
add
and
push
ret
aam
xor
pop
mov
fs
push
es
xchg
int
and
mov
inc
movsb
mov
test
pop
ret
cmp
lahf
jge
xchg
icebp
mov
push
sahf
insl
inc
or
addl
xchg
dec
shll
loop
or
dec
pop
out
ss
xor
hlt
inc
call
jno
and
fisubrs
jno
decb
out
cmp
mov
mov
imul
adc
je
ror
mov
xchg
adc
pop
inc
mov
sbb
mov
aad
dec
and
and
cld
push
jno
aam
loopnew
cmp
sub
cltd
mov
sub
std
fiaddl
insl
push
imul
test
orb
lahf
sahf
mov
rcrl
mov
push
dec
dec
repnz
adc
mov
ja
insl
add
fdivs
adc
mov
xor
mov
lea
and
inc
out
hlt
add
movb
pop
mov
out
jle
inc
fistps
ss
mov
hlt
push
sbb
push
cmp
loop
or
insb
mov
shlb
ljmp
inc
push
push
roll
das
test
push
insb
nop
and
sahf
adc
mov
mov
and
add
lods
sbb
push
mov
fbstp
icebp
sub
iret
xchg
add
icebp
xor
loope
mov
mov
sbb
inc
clc
testl
and
ds
sbb
add
outsb
push
mov
popa
cltd
push
stos
jg
mov
sbb
inc
sar
mov
aam
or
inc
cmp
ret
mov
sub
push
xchg
jnp
mov
cwtl
test
inc
dec
dec
xchg
jno
jno
sub
dec
xor
mov
jb
jae
mov
lock
stos
out
mov
shlb
clc
mov
daa
and
cmp
out
lret
pop
jae
sub
insl
and
out
add
loope
stos
cld
dec
push
gs
repnz
jo
cmp
std
dec
pop
lods
pop
sti
add
cmc
ds
and
and
jl
adc
movsl
push
hlt
fisubrl
xor
aam
pop
mov
in
ret
adc
add
and
adc
pop
div
cli
lods
lea
bound
rorb
sbb
pop
insb
lret
movsb
leave
add
daa
xlat
stos
ret
mov
cmp
outsb
jo
out
insb
jge
jmp
push
inc
mov
or
iret
ret
cltd
xor
sbb
movsb
push
icebp
push
mov
sub
cmp
adcb
mov
out
enter
push
inc
into
stc
jae
pop
leave
sbb
mov
cmpsl
xchg
xchg
mov
ret
and
lcall
stos
fsubr
and
mov
int3
adc
mov
pop
int
jge
add
arpl
imul
adc
popa
mov
mov
insb
fdivrl
fidivrs
sbb
pop
lods
daa
pop
shlb
pop
push
ds
push
pushf
loop
ret
out
pop
cmpsb
in
movsl
push
lds
cmpsl
or
testl
ss
lcall
mov
xchg
lock
pop
xchg
out
outsb
rcrb
dec
jg
mov
xor
enter
xchg
push
inc
stos
cwtl
sub
adc
push
push
cmpb
mov
div
xor
adc
cmc
mov
jl
xchg
pop
pop
mov
out
sti
xor
jmp
adcl
mov
jns
loop
shlb
aaa
jno
cmp
aaa
adc
adc
nop
or
int
inc
mov
rolb
fwait
in
jne
jmp
pusha
sarb
lcall
test
out
mov
cmp
push
push
push
ret
mov
dec
mov
xor
scas
jae
into
push
cmp
hlt
cltd
jmp
clc
movsb
cmp
not
or
push
cmp
outsb
sbbb
movsb
inc
pop
xor
cmpb
leave
ss
inc
mov
jbe
dec
lds
mov
jne
cwtl
inc
daa
mov
jecxz
mov
dec
dec
inc
std
jmp
and
scas
sub
mov
mov
je
pop
rcll
push
xchg
dec
xor
push
jns
cld
xor
lods
bound
adcl
in
enter
notl
aas
dec
sbb
sub
aad
pop
jnp
pop
jmp
jno
lret
int
out
rcll
xlat
pushf
xlat
lret
fucomp
mov
dec
iret
sub
jp
cli
das
push
cmp
rolb
cmpsl
sub
insl
adc
ss
leave
lret
mov
pop
inc
shlb
inc
imul
movsl
inc
insb
bound
dec
inc
bound
push
pop
imul
jbe
in
mov
out
in
pop
sbb
lock
xor
popf
mov
add
pop
das
lret
rcrb
xchg
xor
mov
clc
daa
scas
pop
rolb
ljmp
mov
movsb
in
outsb
push
sub
out
mov
jne
pop
mov
leave
sbb
jnp
movzwl
aaa
das
xlat
lahf
jne
in
and
pop
jl
inc
inc
iret
sub
xchg
lea
clc
aad
out
mov
adc
adc
decl
leave
ds
jbe
add
roll
jno
js
jnp
push
jno
ja
sbb
fwait
in
sbb
adc
orb
adc
stos
out
inc
xchg
lods
into
xchg
xchg
fwait
arpl
sub
popf
sub
or
mov
leave
sub
mov
rol
arpl
adc
inc
in
mov
lret
popf
push
out
jle
push
push
cmp
lods
scas
int
mov
fisubrs
loope
mov
loopne
int3
ficomps
cs
fstp
or
and
jle
das
mov
loop
jno
pop
jnp
je
insl
mov
sbb
das
sbb
out
inc
adc
xorps
mov
push
or
cli
sarb
shl
testl
mov
fwait
outsb
dec
sahf
inc
ljmp
out
pop
add
dec
imul
stos
jg
add
xor
pop
and
pop
xchg
rcll
mov
mov
sub
test
add
call
xchg
or
pop
ja
and
repnz
cmp
xor
bound
into
xchg
out
mov
fcomp
sbb
fisubl
bnd
sti
data16
cli
fdivs
push
sbb
jecxz
test
aaa
mov
fndisi(8087
arpl
loop
arpl
xchg
inc
in
enter
dec
ja
cs
adc
call
aaa
xchg
xchg
adc
subb
ret
nop
xchg
dec
outsl
or
iret
ja
sti
inc
adcl
lcall
or
fildl
ret
add
call
inc
cwtl
cmp
mov
sub
mov
test
aaa
aam
bound
cmp
sbb
in
data16
outsb
and
jmp
aas
fildll
out
mov
push
cld
dec
mov
nop
inc
shll
popa
and
xor
push
xor
pusha
stc
dec
mov
adc
dec
sbb
in
mov
insb
and
je
in
mov
into
lea
inc
xor
jae
push
xorl
lods
popa
pop
sbb
cli
test
inc
leave
cmpl
arpl
in
cmp
push
add
movsb
out
mov
int3
dec
and
inc
push
stc
iret
inc
cld
dec
lods
mov
pop
sbb
jns
mov
xorb
inc
neg
fwait
pop
adc
enter
ret
fs
pop
aad
sub
sarb
dec
mov
stos
mov
push
sub
dec
fisubrs
mov
scas
mov
movsl
lds
movsl
mov
sbb
ljmp
dec
mov
push
cwtl
int
sub
out
sarl
test
mov
add
ss
outsb
idivb
call
aam
aam
pushf
add
cmc
outsl
cmpsl
xchg
jno
jns
int
jae
xor
dec
xor
inc
pop
stc
mov
push
insb
rep
js
test
fmul
into
push
xor
jnp
adc
je
jb
js
scas
test
movsl
fsubrs
pop
fnstcw
mov
dec
mov
mov
adc
push
dec
cltd
lock
xor
add
ficomps
mov
mov
mov
addr16
loop
cmpl
push
jae
mov
sbb
mov
cmpsb
sub
jge
lret
xor
dec
jno
jae
xor
sbb
aas
gs
stos
shrl
es
hlt
xor
and
push
rcll
or
jno
fs
cmp
jle
and
pop
fdivrs
test
imul
leave
ficomps
scas
popf
les
dec
idivl
mov
sarb
jno
xorb
mov
cmc
mov
xor
pop
pop
sub
out
hlt
repz
xor
jecxz
scas
adc
ficoms
ret
mov
repnz
jb
iret
mov
push
ja
push
out
cwtl
push
sub
inc
fidivrl
decl
es
push
lcall
add
mov
inc
inc
lahf
and
fisttpl
jae
xchg
cmp
repnz
xchg
push
bound
adc
dec
sub
sti
test
movsl
mov
subb
mov
ja
repnz
sub
sarb
leave
pop
rorb
insb
adc
adc
cmp
testl
rcll
rol
inc
push
scas
mov
inc
xor
cld
pop
adc
in
je
push
cld
jno
jmp
lahf
xchg
cmp
push
dec
sub
sarb
jns
clc
add
jle
ret
adc
dec
in
mov
pop
hlt
push
ret
mov
dec
repnz
sub
add
test
sub
jmp
iret
xchg
imul
mov
pop
jl
lcall
xor
addr16
lahf
push
or
push
mov
push
fdivrs
cs
sbb
dec
inc
fcoms
xchg
repz
mov
xchg
jle
xor
addl
test
mov
loope
dec
mov
sub
notl
xor
cmpsl
jbe
adc
push
or
jmp
push
insb
imull
popa
lds
and
mov
lods
jnp
push
xchg
or
add
addl
test
mov
lea
hlt
adc
out
enter
and
int
mov
add
jo
mov
sub
insl
xchg
stos
hlt
int
dec
xchg
enter
shrb
jge
push
cli
sbb
lcall
repz
dec
jecxz
mov
jo
sub
int
pop
sub
sbb
mov
cmp
cmp
mov
mov
and
cwtl
jbe
mov
fldl
fwait
xchg
xchg
scas
mov
xchg
push
or
mov
push
push
mov
lock
data16
sub
adc
in
push
js
in
je
fildll
in
lret
adc
mov
adc
sti
clc
int
loope
inc
test
and
das
repz
adc
enter
insb
cmpsl
mov
ds
mov
mov
loop
add
fsubrp
inc
in
mov
jecxz
mov
outsb
lds
push
stos
loopne
xchg
dec
cmp
xor
popl
mov
and
inc
or
jle
mov
lret
jle
cmc
jae
arpl
xchg
insb
adc
jecxz
push
cmp
fdiv
je
push
ret
xor
insl
sti
mov
sarb
fimull
fldl
push
aam
pop
xor
xor
loopne
push
mov
std
inc
pop
in
inc
cltd
test
nop
fwait
leave
mov
rcrb
mov
push
test
xor
ret
int
and
lret
push
stos
fiadds
rcl
leave
cmpl
cli
int
lret
out
xor
ja
inc
mov
inc
loopne
mov
lds
adc
lret
xchg
int3
std
lret
mov
or
cmp
xchg
xchg
xchg
out
xchg
xor
xchg
jg
pusha
ffree
push
or
cmc
cmp
je
imul
test
adc
in
in
mov
shrb
mov
push
push
fsub
pop
or
fpatan
imul
add
jp
in
cmp
repz
fucom
lea
xchg
test
fcompl
push
dec
nop
xchg
jae
test
inc
pop
inc
and
arpl
push
or
je
inc
cltd
mov
out
pusha
movsb
pop
shrl
xchg
in
jns
adc
std
push
mov
add
xor
out
lea
and
or
aaa
repz
orps
xchg
mov
cmp
pop
sbb
jmp
cld
shl
stos
jnp
pop
stos
pop
fldt
mov
dec
mov
outsb
aaa
pop
lods
les
cld
jge
mov
inc
jl
cmp
loope
mov
push
arpl
stos
mov
add
pop
test
xchg
xchg
mov
sub
lahf
pop
popf
mov
xor
xchg
test
mov
fisttpl
shlb
in
jge
shl
hlt
sti
shr
pop
xchg
shlb
and
xlat
into
xchg
stos
push
jecxz
aas
dec
sub
and
pop
push
sbb
lock
stos
dec
push
inc
inc
bound
xchg
stos
lock
mov
dec
fdivrl
cmc
into
jo
pop
pop
rorb
ja
xor
cmp
add
pop
sbb
shl
xor
sbb
outsb
mov
inc
mov
pop
mov
out
mov
les
imul
pop
xchg
mov
rcrl
push
stos
mov
data16
into
mov
jle
add
adc
lods
dec
pusha
fs
popf
mov
ret
stos
sarb
ds
xchg
ret
mov
pusha
stos
mov
pop
cmp
jnp
xchg
push
adc
js
and
push
lahf
stos
repz
xchg
aas
sbb
push
inc
add
fdivl
add
movsl
adc
jg
pop
dec
pop
out
loop
nop
imul
xchg
sub
jp
cmp
mulb
mov
adc
ljmp
or
hlt
jno,pt
repnz
imul
push
mov
inc
movsl
inc
dec
mov
pop
push
je
stos
stc
into
rcrl
int
pop
xchg
sti
cli
pop
cmp
adc
call
int3
jne
test
cli
push
add
outsl
pop
fcoml
pop
mov
divb
pop
loop
clc
inc
xor
push
addr16
cmp
movsb
cwtl
or
xchg
icebp
xor
sub
mov
je
sub
inc
hlt
das
cmp
mov
call
mov
popa
pop
andl
sub
das
adc
inc
xchg
faddl
test
sub
repnz
jne
lret
pop
cmp
or
mov
mov
push
jmp
test
add
fsubrl
adc
aaa
lret
fistpl
lods
pop
sub
out
repnz
sbb
cmpl
test
dec
cmp
inc
dec
mov
sbb
push
push
cmc
dec
rcrb
mov
jo
sub
ret
hlt
pop
xchg
cmovnp
cmpb
test
mov
adc
sbbb
mov
xchg
movsb
repz
mov
or
lock
sbb
stos
add
mov
xchg
xchg
std
and
xor
outsb
sahf
sub
es
adc
js
pop
sarl
fbld
loopne
cmp
aas
mov
push
mov
icebp
popa
js
mov
push
xor
sbb
pop
mov
fwait
pop
subb
and
lods
out
sbb
jle
fisubrl
mov
stos
or
xlat
insb
iret
test
sbb
push
scas
fwait
pop
mov
or
pop
lret
cmp
dec
jns
arpl
bound
lods
nop
push
les
cwtl
or
mov
push
scas
mov
sub
mov
jne
fstps
jnp
insb
ja
or
sbb
mov
clc
sar
xchg
cwtl
test
sub
mov
sub
push
xor
pusha
xor
mov
fisubrs
or
jge
fidivl
aaa
adc
lods
lods
pop
xchg
xor
subb
mov
and
popa
mov
push
in
pop
mov
sub
sub
sub
mov
loop
fwait
mov
lahf
cmp
or
pop
dec
aas
jg
lret
jne
lahf
inc
xchg
mov
pop
fisttpl
pop
adcb
sub
fldl
xchg
dec
xor
loope
shlb
xchg
dec
mov
fcmovnbe
ljmp
mov
xchg
cld
xchg
fwait
xor
mov
jbe,pt
dec
mov
sub
sub
sar
inc
pop
ret
test
shll
jne
cmp
stos
addb
stos
add
iret
adc
inc
adc
mov
pop
outsl
pusha
lahf
pushf
mov
pop
bound
push
fs
inc
jnp
add
iret
or
les
adc
imul
outsl
adc
sbb
dec
mov
decl
fiadds
push
hlt
inc
bound
negl
lahf
out
gs
int
loopne
or
mov
daa
insb
mov
lods
cmp
test
inc
cmp
sub
dec
aam
push
mov
fdivl
pop
ret
loope
sbb
sub
xchg
hlt
push
enter
dec
add
lret
jp
jp
int
mov
sbb
jg
clc
xor
inc
hlt
jge
cmp
jb
pop
pop
dec
sbbl
jmp
fidivl
movsb
inc
or
adc
inc
and
adc
dec
mov
and
mov
mov
and
lods
leave
xchg
in
pop
pop
jb
cmp
and
mov
lahf
push
pop
aaa
stc
test
pushf
jg
push
in
popf
jge
sti
or
dec
push
imul
mov
mov
sti
mov
stos
fadds
jge
sub
adc
gs
pop
imul
xor
xchg
insb
aaa
cwtl
jo,pt
das
push
jle
sbb
jge
sarl
cltd
dec
cmp
dec
add
jnp
mov
addr16
out
addb
cmp
je
inc
and
xlat
insl
daa
add
gs
adc
loopnew
push
in
stc
arpl
mov
push
xor
mov
test
mov
cmp
shlb
mov
push
jmp
push
pusha
pop
mov
ret
cmpsb
loopne
push
pop
fwait
push
and
push
xlat
and
dec
adc
lods
mov
imul
cld
pop
adc
adc
insb
jecxz
decb
sub
jne
push
mov
loop
cmp
push
xchg
fsubs
cmc
mov
pusha
bound
add
cmp
and
popl
inc
pusha
adc
nop
push
pop
mov
popa
lds
repnz
insl
out
push
movsl
les
sub
sahf
call
std
add
push
cmc
mov
iret
mov
xchg
gs
cs
and
adc
sbb
mov
test
nop
push
roll
lods
outsl
sub
xchg
or
mov
loope
out
movsb
sbb
cli
or
inc
pop
add
xchg
adc
dec
daa
pop
clc
notb
mov
and
or
enter
adc
mov
loop
outsl
mov
cmp
jecxz
jae
jne
mov
jb
fld
mov
cmp
leave
pop
stos
or
popa
push
cmpsb
push
lea
cwtl
mov
adc
into
push
repz
dec
in
push
sub
loope
or
test
scas
push
mov
mov
lds
add
dec
gs
inc
cmpsl
outsl
inc
pop
pop
xor
lcall
out
jne
scas
sbb
xor
ret
add
push
pushf
mov
and
jne
xchg
lret
and
lcall
or
fistpll
mov
mov
pop
inc
mulb
adc
loopne
cmpsb
fbld
mov
sub
cmc
mov
pop
nop
xchg
gs
xor
jno
fsts
sbb
insl
mov
lcall
std
pop
mov
add
pop
xor
adc
and
mov
loop
sub
aad
testl
mov
jno
les
fistpl
fistpll
add
jbe
call
test
ror
flds
jns
jbe
pop
dec
push
cmp
xor
push
inc
cmp
jo
lret
outsb
xchg
push
outsl
insl
sahf
arpl
add
mov
mov
das
push
ret
xchg
sahf
sub
sbb
ds
mov
fs
cli
mov
lret
fnsave
pop
hlt
or
jbe
les
dec
sbb
mov
mov
cmpsl
ja
sbb
scas
xchg
iret
xchg
daa
jecxz
stos
jecxz
adc
dec
movsb
dec
and
iret
mov
fisubs
cmp
loop
rol
sub
lahf
popl
dec
das
jp
mov
das
into
dec
jl
scas
jg
mov
andl
repz
ss
pop
mov
fbld
mov
mov
push
out
or
pop
shlb
mov
mov
js
mov
movsl
push
mull
jl
icebp
lcall
xor
jnp
outsl
jne
and
lods
data16
pushf
and
popf
xchg
push
out
pusha
das
mov
sahf
cld
and
sbb
icebp
addr16
mov
push
clc
insl
testl
in
push
jns
gs
cmp
loope
lcall
and
test
xlat
xor
idivb
data16
sub
fisttpll
clc
pop
push
pop
addr16
cltd
dec
outsb
arpl
xchg
or
adc
xchg
js
or
int
mov
push
sti
or
out
dec
cld
pop
out
cmp
mov
mov
cltd
dec
loopne
push
dec
lods
sbb
sub
fstl
fisttpl
xchg
popf
scas
xor
ja
mov
xorb
pop
add
rcll
aas
popf
in
fnstenv
idivl
or
ja
movsb
lods
jnp
imul
add
out
mov
inc
iret
lret
xor
leave
or
cltd
xor
xchg
movsb
cmp
inc
ret
fnstsw
dec
sti
cmp
scas
mov
mov
fs
sub
outsl
cmpsl
push
aas
lods
push
ret
hlt
bound
inc
insl
xor
mov
insb
addb
sub
test
adc
scas
push
sub
rorb
mov
xor
repnz
cmp
roll
jp
sbb
mov
mov
fnsave
adc
jo
lcall
inc
push
mov
lcall
iret
cmp
xchg
mov
incl
imul
push
clc
loop
dec
cwtl
ss
push
mov
inc
test
shll
jnp
mov
ret
dec
xchg
loop
mov
cmp
or
xor
in
push
add
arpl
jl
lods
aas
into
jnp
dec
fidivl
xchg
push
scas
xchg
clc
add
hlt
mov
lcall
fildll
jns
or
sbb
stc
xlat
call
arpl
repnz
scas
mov
add
notb
js
mov
pop
fdivrl
add
test
adc
or
movsl
dec
adc
push
pushf
xor
outsb
movsb
sbb
arpl
incb
loope
test
mov
dec
or
inc
lahf
aaa
jnp
push
rolb
scas
mov
pusha
sub
cltd
add
fadds
iret
cmpsl
test
or
adc
add
jl
pop
xchg
mov
rcl
push
adc
or
xor
rol
sub
cltd
or
clc
xlat
pop
ret
add
insl
mov
push
cmpsb
not
pop
mov
push
mov
inc
icebp
xor
jp
in
jb
mov
jecxz
and
hlt
fdivs
push
enterw
shrl
jg
js
sbb
mov
mov
popa
cmp
adc
lds
hlt
divb
mov
sbb
xchg
lret
andl
mov
shl
dec
hlt
test
ficompl
jle
sti
push
push
nop
xchg
sub
sbb
rclb
jp
mov
xchg
ret
sub
and
xchg
sub
xor
jb
and
push
adcl
cmpsl
popf
mov
popf
mov
and
mov
repz
popa
lods
in
mov
pop
int3
add
xchg
repz
push
imull
imul
mov
dec
sahf
mov
loop
insl
xor
iret
orb
or
mov
cmp
mov
pop
dec
test
push
mov
scas
jae
jb
lock
adc
pop
pop
push
xchg
sbb
shrl
pushl
mov
jbe
dec
sub
jne
mov
loope
fcomps
push
es
mov
and
mov
shl
repz
mov
std
sbb
jb
mov
sbb
cmp
dec
aad
clc
test
ds
push
inc
mov
sbb
cmp
imul
mov
enter
lds
sbb
imul
sub
imul
pop
inc
adc
shlb
jmp
sbb
xor
in
xor
xchg
xchg
pop
lret
sub
pop
js
add
ljmp
inc
std
inc
aaa
jno
das
add
cwtl
mov
in
or
aad
fistpll
adc
cld
stos
fidivrs
outsl
pop
and
enter
and
push
adcb
push
nop
cmp
mov
testl
mov
popa
jo
aam
inc
sub
and
dec
jae
roll
push
jge
dec
aaa
fcoms
addb
pop
fiaddl
fidivrs
pushf
cld
jne
sub
imul
inc
js
orb
test
lea
clc
sub
pop
icebp
std
js
cmp
ljmp
les
jl
dec
xor
add
xchg
pop
addl
add
and
fmulp
rorb
popf
fstps
daa
leave
push
mov
and
popa
jae
or
mov
dec
int3
cmp
cltd
sbb
xor
scas
jbe
das
cmp
idiv
movsb
mov
iret
and
aas
sbb
cmp
mov
cmp
adc
sub
or
adc
sub
iret
stos
cmp
ds
jecxz
mov
movb
cmpsb
sbb
cmp
dec
pop
mov
xchg
clc
nop
pop
imul
insb
mov
pop
pushf
negb
test
dec
stos
xchg
roll
mov
xor
shll
cmpsl
pop
inc
sbb
adc
unpckhps
stc
pop
mov
repnz
or
loopne
leave
push
jp
dec
leave
xor
dec
mov
xor
dec
push
stc
xchg
inc
scas
shl
out
mov
mov
mov
or
jge
clc
xor
mov
or
das
cmpsl
addb
and
push
fwait
jno
push
mov
test
or
subb
std
sahf
outsl
mov
cmp
in
jmp
fsubl
call
and
jge,pn
pop
popf
or
xchg
jne
lcall
hlt
out
sub
les
stc
pop
jne
adc
add
add
inc
in
ficompl
push
mov
xor
xchg
lahf
sbb
mov
rorb
dec
push
cli
dec
add
inc
or
aaa
jb
fwait
imul
enter
fnstsw
cmp
decb
das
fimull
sti
jge
add
lods
in
add
lock
xchg
sahf
cltd
cmc
push
push
jno
inc
cmc
push
xchg
cmp
dec
jle
jl
mov
in
sbb
into
ss
pop
jmp
sti
shrb
jmp
test
icebp
cli
je
call
mov
sbb
in
shrb
add
sti
jb
stos
icebp
xchg
xor
inc
mov
xchg
xchg
sbbb
and
shlb
pop
xor
push
dec
cli
pusha
lret
mov
mov
mov
cmp
pushf
cmp
or
orl
pop
pop
sahf
stc
adc
xchg
outsl
rolb
push
pop
in
aas
xchg
mov
xor
push
es
jp
sub
pop
js
imul
cmp
adc
dec
xlat
sub
xor
xor
fistps
mov
iret
cld
sbbb
xor
and
rcrl
mov
cmpsb
and
pop
mov
pop
in
jne
push
push
sub
hlt
movsb
fwait
xor
sahf
jne
mov
mov
fstpt
jp
and
jg
fistps
mov
lret
mov
ljmp
cmp
inc
scas
jle
aam
xchg
jb
les
push
push
and
and
imul
iret
or
and
shll
cmc
jg
insl
xchg
js
mov
lea
lods
adc
mov
mov
jno
pushf
adcl
lea
inc
scas
ds
adc
lods
dec
test
mov
sub
dec
pushf
pop
dec
add
pop
test
and
ficompl
sbbl
mov
es
sub
push
or
clc
sub
fwait
pcmpeqb
jnp
mov
and
pushf
negb
cmp
ret
and
dec
out
pop
ja
mov
das
sbb
fdivrp
pop
mov
rcll
mov
mov
pop
je
inc
inc
das
movsl
out
dec
mov
es
inc
push
out
xchg
out
mov
dec
stc
mov
negb
ss
negb
mov
sti
xor
cmp
loop
add
jmp
or
clc
and
pop
js
cwtl
into
lock
sbb
dec
sbb
and
mov
test
push
fists
xchg
les
inc
mov
dec
sbb
mov
or
outsl
stc
mov
lds
fyl2x
mov
pop
ljmp
push
xchg
sub
pop
stc
cmpsb
out
push
stos
mov
adc
add
inc
adc
cmp
mov
jb
xor
mull
rcll
sbb
mov
idivb
scas
pop
xor
cmp
jmp
lret
nop
dec
push
or
cmp
lds
int
shll
jnp
ljmp
mov
js
or
mov
outsb
adc
in
or
jge
sub
jecxz
fiadds
push
mov
mov
push
shll
out
sbb
test
add
mov
xchg
jnp
or
xchg
jge
shrl
repz
sub
xor
mov
mov
inc
inc
or
jmp
fisttpl
jge
shll
mov
or
fcomps
mov
shll
mov
push
xor
pop
xor
cmpsb
fwait
push
mov
movsb
lahf
mov
ret
jmp
out
lods
test
iret
aad
les
shlb
and
icebp
clc
sub
push
sbb
xor
repz
push
push
fildl
xchg
mov
jb
fbstp
push
mov
add
jno
add
jo
dec
add
xchg
loope
jmp
jne
xor
out
in
rcl
dec
sahf
inc
ss
inc
dec
pop
shrl
shrl
cmp
mov
test
loop
push
cmovp
dec
or
out
outsl
push
int3
insb
cmp
and
gs
push
cli
test
clc
out
xchg
es
daa
scas
and
push
and
sbb
ret
push
popa
jge
movsb
lcall
push
push
int
jbe
enter
add
adc
lcall
clc
jns
jmp
and
insb
ds
push
sbb
mov
popa
fbld
jae
mov
insl
adc
leave
mov
jge
imul
repnz
pop
cmc
aad
xchg
gs
dec
lods
adc
dec
dec
icebp
movsb
in
test
mov
les
add
cmp
imul
jecxz
mov
inc
sahf
inc
dec
mov
pop
int
shl
sub
test
add
daa
jae
mov
xchg
loope
sub
addb
xor
inc
ret
repz
fiadds
xlat
ror
push
adc
shrb
aas
push
and
push
outsb
jno
fcmovnu
outsb
nop
jecxz
xchg
in
sub
add
jl
ljmp
pop
ret
lahf
notb
mov
pop
push
adcb
sub
arpl
adc
dec
inc
push
pusha
loopne
test
pop
stc
je
dec
arpl
jmp
xchg
lods
push
push
inc
popf
out
or
cmp
in
push
scas
jle
push
mov
mov
loop
loopne
push
push
dec
sub
repz
out
je
stc
lods
pop
or
adc
and
dec
fmuls
push
push
adc
repz
bnd
push
sar
and
xchg
xlat
bound
or
aad
xor
jns,pn
mov
jno
fbld
mov
clc
out
test
sub
add
imul
mov
xchg
pop
inc
jecxz
and
dec
jp
mov
push
insb
sub
dec
gs
sbb
push
and
xchg
xor
mov
cmp
mov
test
dec
roll
or
sbb
cltd
dec
unpcklps
rorl
rcl
mov
insl
sar
cmp
jns,pn
or
mov
jge
mov
xor
dec
cmp
mov
jg
pop
fmull
notw
ret
sbb
jae
pop
cmp
push
mov
movsl
iret
les
idivb
mov
fmull
insl
fs
ds
cmp
ret
scas
jb
pusha
mov
pop
push
xor
testl
std
pop
pushf
popf
or
adc
push
ja
out
jns
and
jbe
sub
and
jbe
negb
cld
jns
fimuls
sbb
ret
divl
mov
jg
repz
dec
sbb
cmp
les
mov
mov
int3
scas
add
push
addps
push
inc
pop
fwait
ss
imul
mov
mov
mov
icebp
mov
jno
cwtl
imul
cmpsl
mov
iret
sti
lahf
adc
xor
fisubrs
mov
sbb
sbb
dec
je
jb
sub
sub
mov
mov
mov
jne
lcall
jge
mov
stos
cld
sahf
arpl
xchg
data16
lods
mov
mov
fucomi
adcb
and
sarb
and
test
xchg
enter
call
xor
adc
and
adc
jp
add
xorb
xchg
pop
push
pop
lea
mov
and
pop
decb
sbb
lods
arpl
rcr
sub
pop
pop
hlt
sub
xchg
repnz
mov
push
cmp
pop
out
int3
push
dec
movsl
inc
cmc
sbb
or
pop
pushl
pop
mov
pop
xchg
mov
dec
mov
sbb
mov
xor
pop
jb
in
sbb
add
dec
pop
or
and
jge
adc
push
repnz
movsl
cli
cli
jmp
mov
sub
fwait
adc
add
pop
adc
push
loop
cmp
xor
mov
je
std
loope
leave
repnz
in
xor
js
dec
and
scas
add
scas
leave
inc
xor
aaa
popa
sbb
inc
xor
sub
gs
out
push
jae
mov
out
popa
pusha
mov
dec
push
imul
mov
int
scas
add
fdiv
mov
int
push
cld
sbb
in
jne
sbbb
add
pop
jno
lods
adc
ds
cmpsb
cwtl
pop
inc
mov
push
and
xor
mov
jns
clc
call
scas
inc
das
dec
loopne
fadds
iret
jb
mov
mov
mov
js
movsb
fwait
inc
mov
mov
fcompl
lods
leave
lds
inc
lcall
xchg
mov
inc
push
iret
and
dec
sub
lods
popa
and
js
pop
xor
push
cmp
lods
dec
inc
mov
ljmp
icebp
mov
jmp
push
scas
scas
sub
imul
mov
xchg
fstpt
jge
jge
addr16
inc
lds
mov
sub
add
jg
pop
mov
jg
das
iret
cs
push
aas
mov
sub
addr16
push
inc
mov
insl
insb
cmp
cmp
cmpsb
insl
cs
adc
scas
sub
adcb
in
sti
lea
mov
call
test
dec
test
dec
aaa
adc
add
leave
add
out
sbb
dec
test
push
outsb
fistpl
mov
addr16
sub
sbb
push
sbb
mov
mov
aad
call
mov
or
dec
clc
mov
xor
sub
dec
xchg
fwait
xor
sub
dec
les
scas
cld
adc
iret
leave
sub
sarb
cmp
aad
sbb
cmp
cli
loop
jo
movsl
in
lods
rcr
xchg
clc
inc
gs
cmp
mov
mov
mov
popl
leave
push
icebp
mov
sub
pop
dec
lahf
add
push
je,pn
mov
add
stc
mov
add
rorl
jg
fistps
cmc
sbb
push
out
mov
adc
xchg
dec
insl
cmp
addr16
adc
notb
inc
jecxz
lock
out
clc
sub
pop
or
repz
add
negl
shrl
mov
ljmp
ds
shrl
int3
insb
sti
cmp
xchg
repz
leave
fdivs
push
add
rsm
shrb
sarl
out
cwtl
adc
mov
cltd
out
hlt
pushf
outsb
int3
push
adc
das
mov
sub
mov
mov
dec
loop
mov
adcl
aaa
aas
or
push
jne
push
ss
cmp
lds
aad
sub
sbb
lds
repnz
mov
xor
movsb
sbb
adc
mov
mov
push
mov
xlat
sbb
lret
mov
test
jbe
mov
xchg
mov
outsb
pop
and
mov
push
fistl
cmp
dec
data16
xchg
mov
push
and
jmp
dec
cmp
packuswb
dec
outsl
fsubrs
sbb
ljmp
imul
je
mov
and
xchg
adc
xor
sar
ret
dec
es
push
push
push
push
cltd
mov
into
imul
dec
lret
je
jmp
aas
arpl
lret
inc
inc
push
lods
jnp
push
adc
sbb
mov
ljmp
pusha
stos
pop
pop
mov
cmc
mov
stc
cli
cwtl
push
or
roll
cwtl
sub
pushf
enter
xchg
push
scas
aaa
add
loopne
out
pop
push
inc
dec
adc
sbb
inc
lods
inc
fmull
mov
mov
subb
gs
mov
imul
mov
int
test
sub
and
mov
cmpsb
addr16
inc
test
sub
mov
ret
pushf
dec
xchg
mov
or
cltd
cmp
mov
sti
cmc
mov
jae
adc
sbb
cmp
arpl
rorb
sub
leave
cmp
ret
mov
test
cltd
int3
sub
and
add
je
dec
fistl
aaa
sbb
cmpsb
jecxz
in
stc
out
xchg
clc
dec
fwait
in
aam
mov
jns,pn
jp
repz
add
hlt
dec
xor
push
mov
jmp
aam
fwait
icebp
pop
mov
clc
cwtl
push
fidivrs
sub
rol
mov
jg
outsl
jecxz
call
adc
mov
jge
test
outsl
dec
in
lods
and
push
sub
lcall
or
das
pop
clc
and
sti
xor
fnsave
sbb
pop
xchg
les
push
adc
mov
dec
add
jg
sbb
mov
dec
or
aaa
mov
es
jp
sub
ret
addr16
shll
adc
shlb
push
in
xlat
cmpb
lds
xchg
and
in
sbb
js
fcmovnbe
xor
pop
push
sar
cs
cmpsb
xor
fisttpll
mov
call
out
roll
inc
mov
push
sbb
mov
loope
push
adc
mov
cmp
or
pusha
pop
jmp
mov
fnstenv
sub
fsubrs
adc
push
push
jb
adc
rcrl
add
test
fwait
shll
mov
dec
pop
push
mov
pop
js
int3
inc
mov
xchg
mov
or
xor
xchg
les
push
jbe
lock
xor
adc
les
cmp
iret
sbb
pop
int
and
inc
addr16
jmp
push
dec
mov
push
and
aad
cmp
jp
ficomps
xchg
jmp
in
add
pop
jb
sub
ljmp
mov
pop
cmpsl
dec
sub
test
cmp
iret
test
jb
sbb
fwait
add
leave
pmullw
mov
cmp
shl
js
add
cmp
fucomi
and
push
or
loop
inc
jne
pushf
mov
xchg
or
in
addr16
fildl
test
out
mov
arpl
mov
clc
gs
sub
pushf
pop
mov
stos
pop
xorb
rclb
clc
adc
rclb
into
cmpsl
cmp
pop
clc
dec
lcall
jmp
mov
sti
inc
dec
sbb
test
dec
jno
arpl
pop
cmpsl
cmc
inc
cli
sti
out
outsl
add
cmp
sbb
arpl
jl
fisubrs
jecxz
hlt
and
xor
dec
icebp
adc
test
cmpsb
insl
add
lods
cmp
xchg
push
imul
adc
dec
jbe
test
jnp
enter
loope
mul
in
shlb
mov
or
cmp
add
stos
jbe
lds
mov
push
lahf
cmpsb
mov
in
mov
loopne
xchg
jne
mov
dec
icebp
jg
add
push
test
sbb
adc
inc
xchg
xor
fcompl
aaa
imul
push
ja
fimuls
scas
je
mov
mov
enter
clc
cmp
sahf
fisttpll
shlb
mov
add
push
mov
lcall
or
dec
mov
shll
leave
fstp
fnstcw
ss
dec
movsl
lea
inc
xchg
add
cmp
mov
pop
out
cmp
test
adc
add
fwait
and
sbb
add
sub
lea
arpl
stos
aaa
adc
lods
push
jmp
pusha
orl
jbe
sbb
mov
mov
scas
pop
push
mov
sar
lods
mov
leave
cmp
lds
ss
xchg
sysenter
and
adc
xor
test
sahf
icebp
icebp
popf
and
das
insb
push
push
rclb
jl
sbb
cmp
xorl
fsubp
fdivrs
mov
ret
cmp
pusha
dec
pop
iret
out
xor
sub
cmpsl
sti
movsl
and
cs
lods
loopne
add
mov
sub
aad
fs
cmpb
jge
sarl
dec
testb
inc
xor
repnz
out
cmpsb
fldcw
inc
sbb
push
test
divb
stc
arpl
mov
xor
xor
xchg
mov
mov
decl
stos
and
fwait
int3
xchg
jle
movsl
lcall
fwait
sbb
andb
push
movsb
jmp
xchg
inc
xchg
pop
dec
xor
insl
cmpl
jb
jae
cmp
dec
andl
or
loopne
mov
aaa
int
popa
xorb
xchg
aas
sti
pop
push
test
test
pop
xchg
imul
push
pop
jecxz
jae
inc
dec
cwtl
sarl
popf
in
inc
lret
inc
fidivrl
aam
dec
inc
jb
cmp
call
or
pop
and
xchg
pop
xlat
in
or
arpl
jmp
mov
push
sbb
loopne
out
icebp
jno
mov
add
dec
ret
and
add
mov
imul
daa
out
dec
jno
lea
mov
inc
imul
in
mov
in
addb
call
lods
andl
ret
ror
pop
popf
sbb
mov
dec
or
mov
cltd
mov
rorl
nop
sub
mov
add
inc
mov
imull
movsl
pop
shll
sbb
iret
insb
pop
stc
pop
ret
pop
jg
fstpl
int
mov
add
movsl
pop
popf
or
push
stos
or
aad
das
mov
into
and
mov
mov
push
add
adcb
sub
test
imul
sbb
mov
cmp
and
xchg
mov
mov
lcall
int3
dec
xchg
xchg
push
shrb
cltd
cltd
mov
cmp
xor
push
xor
jl
adc
dec
loope
jle
shll
cmc
stos
sarl
fcomp
stos
inc
or
mov
push
rorl
cs
ret
into
sahf
test
movsb
scas
adc
adc
dec
test
std
mul
pusha
mov
mov
cld
xchg
add
jne
xchg
popa
inc
fwait
out
addb
mov
outsb
imul
data16
push
xchg
mov
push
es
xor
repz
or
mov
xchg
cmp
jo
inc
mov
decb
mov
lcall
mov
inc
out
into
xorl
arpl
mov
xchg
dec
int3
mov
gs
and
push
fstl
jns
sub
mov
repnz
es
dec
mov
jnp
xor
movsb
push
iret
enter
repz
xchg
andl
mov
outsl
je
test
movsb
pop
jp
les
or
dec
jge
in
or
insl
push
adc
mov
sbb
jmp
push
jmp
stc
inc
je
dec
adc
cltd
push
ds
outsb
stc
nop
into
push
je
insl
es
push
fnsave
mov
pop
in
popf
hlt
lret
jmp
and
sbb
hlt
cmpl
jno
insb
adc
jmp
mov
aas
sub
xor
ret
xchg
test
sub
cwtl
sub
rorb
mov
dec
cs
in
push
hlt
cmp
xchg
mov
ss
mov
fwait
push
scas
test
pop
xchg
addr16
or
sbb
into
js
jp
push
jmp
fimuls
pusha
lods
inc
adc
inc
push
jmp
inc
cli
js
push
and
dec
cmp
mov
repz
imul
dec
sbb
pop
fcoms
aad
jbe
lods
cwtl
es
cs
sbb
cmpsb
bound
adc
mov
cmp
xchg
xchg
pop
in
xchg
gs
add
inc
hlt
cld
add
jle
gs
sub
shr
mov
ljmp
in
out
js
xor
cmp
mov
jo
stos
push
scas
aad
sbb
xor
lods
or
cmpl
add
xchg
xchg
fwait
iret
sti
cmp
insb
jge
in
cli
dec
push
pop
push
push
jb
add
iret
aad
movl
dec
or
fs
and
sbb
sbb
mov
push
xor
addr16
test
stos
xchg
mov
out
addl
mov
add
push
daa
scas
in
inc
lock
ljmp
cmpsl
lahf
out
pop
in
das
sbb
jno
in
in
or
iret
loope
add
add
lahf
rcr
nop
das
jbe,pt
ds
leave
adc
dec
xor
aam
jmp
movsl
addb
dec
dec
adc
in
adc
repz
lahf
inc
lock
fs
xchg
jge
aas
icebp
incl
test
dec
das
xlat
xchg
stc
iret
jb
pushf
xor
adc
std
xchg
pop
lods
jbe
rcll
std
mov
xlat
push
xchg
push
sbb
mov
stos
dec
mov
cmp
int
xor
jg
fstp
fucomip
mov
mov
test
out
shll
ret
and
les
lds
out
data16
mov
aas
mov
pusha
sahf
add
mov
int
pushf
push
push
sarl
repz
mov
push
pop
hlt
lcall
and
mov
cmpsl
call
jbe
adc
sbb
int
js
pop
stc
popf
insb
loope
ss
cwtl
and
scas
insb
cmpb
push
push
xor
and
test
mov
fwait
cli
ficomps
leave
adc
inc
or
inc
pop
dec
and
dec
hlt
adc
mov
out
cmp
sti
out
or
sbb
es
sub
pusha
push
je
add
sbb
andb
in
gs
pop
xor
pop
pop
cmpsb
or
stc
mov
jb
inc
aam
add
cwtl
aas
mov
sbb
fdiv
xchg
repnz
add
rolb
sbbb
or
lcall
sbb
inc
mov
push
mov
lret
ror
fs
xor
addl
or
shll
dec
cmpsl
xor
cmp
iret
jnp
dec
mov
sub
push
in
mov
and
aas
fwait
int3
dec
iret
popa
jmp
jo
mov
mov
add
loop
mov
je
sub
xor
cmpsl
inc
push
popf
push
mov
cltd
fmuls
lahf
sahf
fld
loope,pt
out
jl
or
in
icebp
jmp
mov
mov
mov
lret
sahf
mov
add
imul
in
add
aas
mov
scas
sbb
push
cmp
fmulp
icebp
jns
iret
fnstcw
repz
cmc
mov
fidivs
xor
insb
mov
fnstcw
call
test
es
and
fsubs
mov
inc
inc
cwtl
dec
test
movsb
ds
inc
mov
mov
mov
ja
es
jp
rcr
jle
xchg
or
jecxz
sbb
test
mov
mov
clc
mov
cmpsl
fnstenv
jl
pop
mov
scas
js
cmc
andb
das
push
adc
xchg
dec
mov
daa
inc
dec
lock
mov
shr
lret
jle
sbb
cmp
inc
lret
das
std
out
fs
nop
sbb
sbb
ljmp
dec
iret
rcrb
inc
lods
outsl
pushf
inc
ds
push
mov
mov
mov
pop
mov
mov
testb
cmp
aas
pop
fiadds
add
push
js
push
fisubrs
and
arpl
add
xchg
cmp
ficoml
mov
mov
mov
movsl
stos
dec
xchg
into
cli
nop
out
push
sub
inc
pop
xchg
pop
stc
cmp
stos
sysenter
into
mov
fdivs
and
jnp
mov
add
fsubl
lret
adc
gs
ds
addb
fmull
nop
push
mov
jp,pt
mov
int3
xor
jno
jns
mov
sub
in
aam
sbb
xchg
jb
call
mov
xlat
mov
test
xchg
fsts
scas
inc
aam
mov
push
xchg
pop
xchg
jl
test
in
mov
movsl
jns
ja
inc
mov
loop
shl
leave
add
roll
nop
dec
test
loopne
mov
shr
cli
and
divb
jmp
test
dec
subb
jo
push
mov
ljmp
xor
push
loopne
imull
mov
cmc
arpl
fidivl
push
fisubs
jp
xor
mov
js
fidivrs
rcr
mov
xor
cltd
lock
sub
dec
jnp
repz
push
sbb
out
aad
mov
and
pop
sbb
mov
sbb
mov
popf
testl
sub
ds
mov
popa
outsl
aas
adc
mov
mov
mov
pop
lods
inc
or
jl
mov
arpl
jnp
mov
mov
mov
jne
cltd
inc
mov
icebp
or
sarb
mov
add
cli
pop
int
insl
icebp
mov
and
mov
sar
push
dec
cwtl
or
dec
jno
cmp
sbb
push
scas
xchg
sub
sbb
scas
fldt
adcb
cmp
mov
jne
adc
and
push
subl
dec
xor
hlt
mov
pop
mov
rcrb
fidivrl
pop
add
inc
sub
into
inc
jo
inc
aam
jne
sub
cmp
test
test
adc
push
shlb
loop
clc
add
and
dec
daa
enter
test
xchg
cli
sub
and
dec
sub
popl
push
loopne
jmp
mov
sbb
mov
push
cs
mov
xor
ja
lods
dec
inc
jmp
add
sub
sbb
cmp
les
rorl
cmpsb
mov
leave
or
dec
push
das
adc
int3
outsl
ficoml
mov
movsb
out
cmpsb
push
enter
fldt
adc
test
sbb
loopne
dec
mov
inc
cmp
adc
in
or
rclb
lcall
js
lret
ja
push
xor
add
fisttps
jmp
mov
cmp
or
pusha
mov
push
pop
dec
fwait
jns
ret
je
imull
mov
in
ror
xchg
add
jb
test
pop
iret
mov
push
sti
cs
test
add
dec
mov
jle
xchg
mov
and
fisttpll
xchg
pop
push
fcmovbe
sbb
fsqrt
inc
mov
pop
push
ljmp
stos
fldt
cmp
cwtl
cmp
adcl
mov
mov
adc
gs
sti
fcmovnbe
dec
movsl
inc
in
outsl
out
mov
mov
xchg
pop
pop
in
in
out
cltd
inc
cli
sub
subl
lcall
inc
fsubr
mov
imul
mov
loope
adc
add
lahf
pushf
adc
push
insl
stc
filds
jl
lret
mov
scas
arpl
adc
sub
sbb
xor
pushf
xorl
pop
inc
outsl
iret
ds
dec
pop
aam
cmp
insb
movb
sti
aam
ljmp
mov
sbb
ljmp
icebp
lds
pushf
jmp
ficomps
fists
loopne
enter
lahf
scas
in
jge
loopne
in
outsb
mov
mov
dec
lret
flds
shlb
cmc
lcall
ds
or
shll
fidivrl
scas
jge
insb
mov
pop
in
add
test
into
out
inc
cwtl
aam
xchg
mov
cmpsl
mov
lret
or
out
js
jmp
xor
inc
sbb
pop
loopne
jl
movsw
xchg
xor
and
xchg
mov
test
push
icebp
repnz
daa
push
imul
sub
test
mov
inc
dec
je
jo,pn
xchg
test
cmc
pop
negl
add
out
pop
aad
mov
dec
les
jp
lock
lock
push
cmp
mov
xchg
push
rep
sbb
inc
out
icebp
rcrb
cmpsl
test
cs
test
scas
ret
imul
sbb
repz
mov
out
pop
and
iret
mov
repz
shrl
movsl
out
jbe
mov
inc
mov
shl
stc
pop
pop
cs
hlt
add
sub
dec
dec
test
test
scas
imul
xor
repz
rcl
insl
sub
pop
sbb
mov
ljmp
cli
mov
xor
pop
add
insb
movsb
jae
mov
std
loope
xchg
test
fistpl
jge
push
jle
push
sbb
and
lea
test
es
push
dec
xchg
push
or
hlt
sub
aad
outsl
mov
lahf
mov
sarl
inc
je
and
mov
and
jno
jns
and
test
inc
in
jnp
mov
xchg
nop
or
pop
pop
jp
sbb
xor
sahf
sub
push
aas
in
adc
mov
shl
pop
mov
mov
cltd
adc
sti
xchg
ds
or
sbb
ja
pop
cltd
loop
mov
xlat
stos
push
and
lcall
xchg
pop
sbb
enter
and
aaa
xor
add
sbb
es
add
and
rolb
push
jb
mov
xchg
add
in
push
push
test
inc
xor
iret
es
out
sbbb
and
jg
adc
fcomps
jno
rcr
mov
mov
mov
push
sub
sbb
mov
add
add
sbb
or
movsl
dec
adc
pusha
lods
cli
lahf
movsb
inc
hlt
insb
outsb
xchg
cmp
es
cltd
jp
jb
aaa
or
sbb
fidivl
lret
jecxz
adc
out
mov
inc
and
cwtl
stos
inc
fisubrs
cltd
xchg
fldenv
mov
sub
add
and
sbb
jle
or
xchg
mov
ss
es
adc
test
or
and
imul
fcmovnbe
xchg
insb
out
adc
pop
test
push
push
mov
js
jb
enter
test
scas
out
push
xor
mov
add
icebp
sub
loopne
in
out
add
push
outsb
xchg
popa
or
test
aaa
mov
cmp
xor
iret
add
pusha
test
add
aam
or
icebp
gs
dec
mov
jb
iret
cltd
ja
push
insl
push
and
xor
add
loope
dec
inc
adc
cmc
lahf
push
inc
push
add
popl
fists
add
inc
jb
xchg
das
jmp
inc
sbb
push
cwtl
movsl
negl
movsb
shlb
jg
pop
movsl
stos
cmp
adc
push
das
cltd
outsb
add
outsb
adc
outsl
add
fdivrs
cmc
sub
and
mov
cltd
push
icebp
pop
ja
adc
mov
sub
rdpmc
xor
outsl
mov
mov
test
dec
out
sahf
out
pop
aaa
jo
ljmpw
aaa
or
xchg
rcll
testb
in
mov
pop
and
fcoms
fs
xchg
loop
mov
and
jecxz
mov
xor
scas
inc
xor
int
int
stos
das
ret
hlt
imul
jge
push
inc
sbb
sar
mov
jbe
movq
mov
das
sarb
int
fmuls
sub
push
pushf
outsb
xor
int
add
xchg
ss
pop
sbbb
out
mov
push
icebp
loop
mov
orb
mov
or
jae
pop
je
sbb
push
in
rol
add
and
push
std
mov
xor
in
push
jecxz
decl
std
inc
cmpb
and
ljmp
add
jp
dec
sti
push
inc
and
pop
popa
sbb
dec
insb
xchg
dec
inc
and
rolb
push
movsb
adc
sub
xchg
cwtl
sub
push
imul
cld
push
loope
nop
mov
test
inc
dec
or
jg
popa
adc
aas
inc
and
xor
cmp
and
pop
arpl
insb
mov
dec
shll
and
or
adc
std
mov
xchg
push
enter
adc
xchg
dec
pop
in
repnz
or
lock
data16
push
jb
movsb
sub
xorl
into
lock
lret
out
jge
sar
jmp
add
lcall
shr
add
jno
outsb
and
cmp
mov
mov
mov
popa
hlt
cmp
lods
cld
dec
mov
insl
call
lock
arpl
sbb
jae
push
and
push
into
dec
clc
in
cmpl
lcall
aas
in
dec
adc
andl
pop
stos
sub
lahf
idivl
pushf
imul
jne
jecxz
mov
fwait
pop
cmp
push
sbb
dec
orl
mov
movsl
pop
mov
repz
les
je
add
jecxz,pt
or
pop
adc
push
mov
ds
negb
shlb
hlt
push
adc
sbb
mov
cmc
pop
cmp
push
cld
sahf
pop
mov
mov
testl
mov
mov
js
sbb
cmpsl
pop
mov
mov
or
aam
mov
jmp
dec
rcr
jns
mov
rclb
insb
jo
test
cmp
outsb
adc
xchg
sar
ds
enter
xor
cli
cs
push
rcrl
xchg
call
fisubrs
leave
jle
mov
call
fsts
ret
addr16
cmp
scas
adc
fsubr
mov
and
and
daa
lcall
cmp
push
sbb
cltd
jecxz
loopne
aam
imul
pushf
repz
ja
lret
icebp
fidivrs
fldcw
xchg
mov
push
push
out
push
sbb
jnp
cmp
or
and
xlat
adc
adc
pop
scas
insl
cwtl
ret
mov
rorl
xchg
inc
sbb
insl
je
xor
inc
int3
daa
add
jge
inc
lret
stc
loope
fbld
add
push
push
andb
lods
sar
sub
mov
push
jmp
sbbl
xchg
add
xor
pop
push
pop
sub
cli
dec
xchg
enter
sub
ja
leave
or
jle,pn
xchg
xor
nop
loope
inc
or
pop
push
lret
mov
gs
aam
out
xor
push
imul
jmp
sbb
fiadds
or
xor
in
push
mov
push
inc
push
xor
cltd
or
xor
mov
dec
or
rcr
cmp
mov
shr
into
jno
sbb
mov
daa
addb
xchg
inc
add
lahf
sbb
test
imul
jo
shlb
and
mov
stos
jne
scas
insb
ret
inc
pushf
fcompl
sti
xchg
xor
pop
xor
push
adcb
adc
test
pusha
pop
sbb
stos
mov
stc
movsl
sbb
and
xchg
dec
aaa
inc
nop
jno
xor
mov
mov
dec
repnz
jno
cmp
orl
arpl
cld
repnz
mov
and
xlat
popf
or
inc
jns
lret
outsl
cmp
mov
ljmp
nop
mov
stos
iret
fistps
xor
inc
lea
test
xchg
popf
lahf
dec
popa
or
sub
mov
pop
cmc
sub
in
inc
adc
rolb
fwait
lods
sar
mov
push
call
mov
xchg
into
scas
in
jo
push
das
xchg
and
inc
jbe
and
lret
imul
mov
test
dec
loop
sub
mov
push
inc
cltd
or
sub
aam
jb
jle
jge
inc
inc
loope
mov
adc
xchg
cmp
adc
sbb
cld
js
mov
or
pop
push
pop
inc
xchg
mov
imul
sbb
es
mov
shrb
sahf
dec
push
xchg
mov
cmp
fcompl
cmp
lahf
dec
insl
loope
iret
mov
cmp
mov
mov
push
int3
mov
ja
shlb
inc
shll
aam
out
pop
jg
add
dec
clc
add
jne
lret
mov
mov
mov
jnp
popf
xchg
push
pop
or
stc
or
pop
call
pop
or
jge,pt
or
fisubl
or
std
xchg
sub
mov
jge
push
add
mov
ret
xor
sub
popl
and
xchg
call
lret
cltd
xchg
add
pop
out
fst
push
mov
mov
test
mov
push
and
push
jns
data16
loopne
jmp
pop
push
sbbb
xlat
repnz
mov
lods
aad
scas
dec
jecxz
scas
cmpb
inc
mov
mov
outsb
scas
pop
mov
stos
mov
xchg
in
xchg
leave
lods
xor
mov
pop
adc
mov
rcrl
ds
pop
xchg
test
xchg
out
aas
xchg
pushf
pop
aad
das
mov
jle
insl
ret
lcall
adc
nop
gs
cmc
cmpsb
inc
push
push
iret
push
movsb
push
dec
shl
push
adc
xor
out
scas
add
ja
pop
loopne
xchg
and
pop
jno
divb
xchg
test
and
sbb
popa
jno
pop
mov
jmp
fisubs
ja
loope
int
iret
clc
ljmp
cmc
cmp
or
or
out
int
insb
shll
jp
dec
mov
scas
jns
loopne
in
lock
pop
fsubrs
lahf
push
les
mov
jp
fisttpl
cld
push
sbb
rcrl
imul
aaa
fmuls
rcrl
fldenv
pop
cli
mov
and
pop
aaa
adc
jge
ficompl
int
add
cltd
mov
inc
gs
arpl
mov
mov
loope
clc
pop
mov
or
push
cld
pop
ret
mov
jle
pop
das
jno
mov
sbb
xor
inc
xchg
xor
es
shrl
ljmp
mov
inc
in
inc
rclb
xor
outsb
shrd
mov
cmp
jle
stc
push
test
cmp
or
ret
add
jmp
dec
filds
subb
sub
mov
movl
pop
sub
fs
xor
mov
stc
stos
xor
repz
outsl
shr
jge
inc
mov
xchg
lret
cmpsl
test
mov
pop
ss
data16
push
inc
mov
imul
cmp
cmp
lods
in
sbb
jae
sbb
xchg
enter
adc
mov
rcr
jg
out
push
mov
dec
pop
lods
fwait
mov
push
rol
sbb
pop
enter
insl
or
dec
jno
inc
mov
mov
jbe
jp
js
repnz
inc
loope
mov
ret
inc
enter
push
mov
and
xor
aas
pop
mov
cld
mov
xchg
inc
inc
xor
jl
loope
mov
pop
mov
jbe
call
xchg
mov
xlat
push
cli
mov
jne
jo
cld
test
leave
mov
pop
std
mov
and
xlat
dec
xor
loopne
test
mov
jl
loope
dec
stc
cmp
mov
cs
cwtl
cmp
hlt
mov
mov
test
das
bound
out
xchg
bound
aaa
jmp
sbb
jns
out
mov
or
leave
sbb
sub
cli
xchg
jno
cli
fwait
adc
std
mov
les
mov
or
test
insb
push
sub
pop
out
hlt
loope
shlb
sahf
xor
cmpsl
out
aad
inc
icebp
ror
inc
dec
popa
std
sarb
push
inc
jle
cmp
andb
adc
pop
addl
jno
sbb
and
icebp
sub
dec
ret
and
mov
leave
push
jne
mov
cmpsl
lcall
push
push
mov
insl
mov
adc
cmp
push
ss
addr16
cmp
aad
jp
out
pusha
xchg
ja
fstl
mov
ret
test
adc
pop
adc
test
hlt
subl
and
cmp
sub
sub
ja
cltd
iret
outsl
push
push
jb
push
and
popf
push
rol
call
mov
es
pop
push
iret
and
sahf
inc
loop
gs
repz
jmp
jnp
cmp
inc
mov
daa
push
in
icebp
pop
cli
xor
test
stc
push
into
mov
pop
ret
mov
and
xchg
fwait
mov
lcall
xor
xchg
inc
lods
out
iret
out
out
shrb
pusha
sub
pop
push
outsl
aaa
dec
jecxz
lahf
out
scas
das
fadd
mov
mov
dec
imul
js
sahf
ffreep
mov
push
and
push
lods
lock
inc
push
scas
mov
fwait
dec
inc
rol
nop
inc
dec
sbb
mov
sub
fisubl
cmp
xchg
xchg
pop
xor
add
popf
sbb
stc
fldenv
insb
inc
cwtl
mov
rcr
notb
pop
inc
cli
or
repz
xchg
lods
inc
in
mov
sub
lcall
pmovmskb
decl
push
roll
stos
dec
mov
pop
push
lds
pop
inc
lds
ja
push
test
fstps
push
fnstsw
and
xchg
out
aam
jle
fwait
dec
add
addr16
outsl
adc
jo
fdivs
sub
pop
insb
adc
xor
lods
rclb
loop
enter
addr16
in
pop
inc
call
cmc
imul
popf
pop
inc
inc
jmp
int
pop
cmp
stos
pop
push
adc
loop
sbb
icebp
cmp
sbb
jle
shrb
inc
inc
jg
ljmp
sbb
cmp
stos
xor
sub
push
cld
add
inc
test
fstpl
and
lahf
mov
sub
test
push
repnz
imul
add
ret
fisttps
inc
cmp
mov
mov
sarb
xchg
jge
testb
fldcw
lcall
bnd
inc
cmp
cltd
dec
xor
mov
sti
fidivrl
ret
cli
hlt
and
mov
xor
dec
cltd
xbegin
out
push
test
pop
int
mov
mov
test
mov
repnz
hlt
jp
xlat
dec
cmp
adc
cmpsb
pmullw
xchg
outsl
push
mull
inc
cltd
mov
stos
mov
add
mov
in
mov
push
adc
cmp
int3
mov
adc
mov
sbb
in
sti
scas
loopne
inc
mov
add
push
mov
dec
lret
stc
inc
adc
xchg
dec
in
fstpt
and
aad
fists
sub
js
lea
testl
fstpt
dec
bound
fimuls
pop
inc
out
aaa
add
jl
ret
test
lret
push
and
mov
inc
dec
mov
dec
jbe
jbe
push
dec
mov
insl
mov
out
std
add
in
xchg
sbb
cmp
out
js
test
jecxz
scas
xlat
sub
cmp
inc
ret
in
or
ja
cltd
xchg
xchg
andl
jb
in
push
mov
add
jge
lcall
add
sbb
rcrl
loope
int
mov
cld
iret
jle
pop
inc
and
insl
cmpsl
ljmp
jecxz
shrl
add
cmpsl
adc
arpl
int3
sarb
jnp
or
cmp
das
into
mov
xchg
shl
icebp
mov
pop
cmp
hlt
pusha
andb
mov
mov
repnz
inc
lods
shl
dec
fwait
loope
test
mov
pushf
xor
enter
ss
mov
cmp
dec
idivl
sbb
dec
push
push
and
lret
lock
test
mov
cmp
and
sahf
popa
sbb
popa
adc
jl
jne
das
xchg
popa
ja
xchg
lods
xchg
sub
or
popf
fisttps
test
jmp
outsl
or
jb
mov
jns
push
das
sahf
xchg
loope
in
movsb
and
pusha
add
jno
or
ljmp
xlat
dec
dec
sub
sub
fcomp
cmpsb
cmpsb
pop
mov
sahf
outsl
push
or
cmp
sub
outsb
and
das
hlt
pop
inc
mov
jmp
out
lret
adc
sub
pop
test
add
dec
jg
xor
mov
xor
xchg
outsb
pop
je
cmpsl
rorb
mov
rcll
mov
pop
xor
and
loope
mov
lock
adc
and
repnz
dec
sbb
or
stos
repz
xor
outsb
rcrl
inc
cwtl
jg
adc
out
je
ss
pop
mov
jns
aam
imul
jl
mov
das
xor
mov
add
outsb
or
les
push
cmp
mov
mov
push
xchg
pop
ficomps
push
push
cltd
and
inc
mov
sbb
jp
dec
aad
sbb
push
jg
adc
cwtl
testl
or
pop
aaa
ljmp
push
lods
or
ret
mov
fdivrs
aaa
mov
nop
test
adc
repz
push
lods
jnp
popa
push
cmp
mov
add
fldl
addr16
push
leave
rclb
jg
pop
in
jno
add
pop
frstor
popf
notl
mov
mov
jae
dec
daa
adc
fldl
cmp
stos
hlt
jne
mov
pop
insl
xchg
xor
sbb
loop
sub
push
and
shlb
inc
xchg
gs
cmpsb
fstps
xor
xchg
sub
iret
xlat
ret
fcmovu
loop
pop
add
je
push
push
xor
xor
cmp
lret
xor
lcall
push
pop
js
sahf
and
mov
das
cltd
push
adc
loop
mov
mov
leave
pop
rorl
mov
aas
fst
and
xor
out
std
push
jb
push
xchg
int
movsb
dec
repnz
dec
movq
push
xchg
push
pushf
adc
push
sbb
in
aas
lahf
and
and
fsubrl
out
enter
cli
idiv
clc
in
js
icebp
in
mov
jmp
test
mov
hlt
mov
pop
add
xlat
shlb
pushf
clc
out
lret
dec
movsb
nop
xchg
ljmp
repz
lcall
lret
out
add
xchg
movb
or
and
loop
repnz
push
jne
sbb
ja
cltd
mov
cmp
repnz
insl
push
repz
mov
inc
aad
pop
xor
jns
xor
adc
pop
fs
push
jp
add
sub
cmp
inc
insl
adc
aaa
filds
mov
xchg
add
xchg
cmp
addr16
cmp
jg
out
movsl
loop
xor
mov
mov
cmc
dec
add
int3
cmc
xor
mov
adc
out
inc
sarb
pop
std
mov
mov
ss
push
incb
pop
stc
xor
lret
mov
pop
sub
into
add
lods
mov
clc
pusha
iret
int
jns
stos
lcall
or
adc
jecxz
les
dec
sbb
pusha
jl
pushf
xchg
jecxz
mov
in
in
xor
test
push
xchg
in
cmp
mull
or
sub
mull
outsl
cmc
inc
sarl
fimull
addr16
push
xor
mov
arpl
jnp
out
mov
nop
fdivr
jle
and
xchg
leave
movl
push
out
xorb
loop
hlt
aaa
mov
adc
ficoml
push
mov
sub
xchg
loope
sbb
icebp
rcrl
pushf
inc
sbb
xor
ret
ret
or
movb
adc
shrl
add
dec
cmp
pop
push
shl
add
push
push
pop
inc
lret
xor
xchg
loope
xchg
or
stos
bound
sbb
sbb
mov
fs
stos
sub
lcall
cmpb
iret
fucomp
daa
popa
jg
dec
dec
sub
addr16
cwtl
mov
cmp
test
pop
sub
sar
lahf
cmpsb
lock
mov
mov
lahf
xor
jnp
out
fdivrl
mov
sti
pop
jnp
sti
stos
or
sbb
je
inc
fildl
rorb
jmp
jmp
dec
pop
push
xor
std
jmp
iret
insl
push
xchg
push
sbb
test
mov
pop
loope
cld
hlt
and
cltd
and
mov
cld
sub
xor
aaa
cmpsl
push
into
mov
cmc
shrb
dec
sub
sub
enter
cmp
popf
sbb
push
subl
loop
sub
sbb
movsb
mov
ss
cmp
shrb
pop
jge
jbe
int3
inc
pop
das
mov
jg
mov
jge
push
and
sti
addb
aaa
mov
test
ja
int
shrl
mov
inc
das
subl
mov
scas
mov
dec
pop
push
repz
push
xchg
leave
jbe
push
pop
ret
testl
or
std
mov
movsl
mov
popf
and
ss
sbb
ss
mov
pop
dec
push
ret
mov
mov
jmp
lods
add
arpl
jbe
aas
aam
test
mov
out
mov
jecxz
add
test
mov
dec
adc
in
mov
outsb
and
add
cmpsl
cmp
cs
mov
pushf
jae
cmp
rcrl
testl
inc
pop
loope
les
jbe
fsub
leave
adc
push
sub
sub
fcoms
test
sbb
cli
repnz
or
pusha
je
cmp
mov
dec
bound
xlat
sbb
or
out
jnp
pop
fmull
adcl
cmp
add
dec
and
in
test
pop
sub
jbe
mov
jo
outsb
out
sub
std
push
dec
ds
ss
mov
cmpsb
sub
mov
dec
jmp
xlat
int
fidivrs
aas
int3
lret
xchg
popf
and
sbb
lods
add
xchg
data16
stc
in
arpl
inc
sub
sbb
xorb
add
movsl
inc
ljmp
push
pop
ljmp
subb
fwait
sbb
or
mov
pop
rcrl
xor
xchg
xchg
int
in
outsl
int3
movsb
lods
pop
inc
or
aas
fisttps
stos
sub
add
xor
movsb
arpl
push
dec
jp
cmp
das
and
push
mov
jo
ss
scas
push
repz
mov
sub
test
in
repz
loopne
xlat
int3
adc
xor
decb
push
fidivl
inc
adc
repz
jp
pop
xor
pop
xchg
mov
pop
shlb
into
call
je
lods
nop
loopne
out
mov
shlb
mov
jb
cmp
pushf
push
adc
nop
pusha
and
shrb
jge
dec
sbb
dec
push
arpl
inc
enter
loop
in
xor
mov
add
pop
cmpsl
mov
scas
sbb
aam
mov
pop
and
sahf
inc
xor
movsb
mov
stos
shr
mov
outsb
inc
in
push
insb
ficoml
stc
addr16
aas
nop
xor
xor
dec
lock
cmpsl
sahf
mov
sub
mov
sub
scas
inc
adc
sub
inc
or
xor
inc
mov
xor
inc
mov
push
addr16
xchg
stc
popf
daa
push
fwait
cltd
mov
pop
vpsrlq
lds
and
adc
addr16
das
sbb
push
sbb
loopne
ja
jl
sahf
jnp
xlat
dec
push
clc
sub
cld
push
outsl
and
xor
lock
and
lcall
into
jbe
inc
push
cmp
pop
jae
arpl
in
add
shl
cmp
arpl
jb
sbb
inc
fmuls
jge
adc
jle
or
push
xchg
loope
sub
jecxz
cld
out
adcb
je
pop
push
jp
push
jle
out
fnstsw
mov
jae
imul
xchg
gs
mov
jae
mov
pop
dec
lea
jae
enter
ja
xor
adc
out
xlat
icebp
int
sub
int3
xchg
cmp
cmpsl
inc
inc
sbb
fsts
incb
gs
ljmp
das
pushw
or
push
mov
mov
insl
dec
push
xor
pop
jb
call
lcall
mov
mov
sub
fsubr
lock
jecxz
add
and
xchg
scas
bound
imul
int3
lahf
cs
xchg
ljmp
sub
movsl
add
lods
dec
ja
xor
add
jle
call
in
and
jmp
into
xor
cmp
int
outsb
aaa
xchg
jno
push
scas
and
xchg
mov
outsb
xlat
call
push
or
mov
push
push
xor
ljmp
sahf
sub
sub
shll
inc
mov
ss
ss
push
stc
pusha
jae
jmp
or
cld
xor
aad
outsl
pop
test
or
test
xlat
jae
inc
mov
insl
fchs
jp
ljmp
pop
mov
ljmp
aas
add
lock
pop
add
pusha
int
loope
mov
or
adc
cmpsl
pusha
jecxz
call
or
arpl
sbb
adc
mov
xor
cmp
push
repz
popa
lret
pop
adc
mov
pop
sub
push
call
adc
das
and
mov
push
xor
inc
adc
adc
add
mov
stc
rdmsr
mov
pop
stos
jg
xor
fldl
add
push
inc
loope
clc
xor
jl
out
push
aaa
mov
or
clc
inc
negb
aas
enter
add
popf
fcomps
mov
xor
ljmp
mov
dec
or
clc
test
cmp
sbb
popa
test
or
mov
dec
repnz
aam
leave
movsb
ljmp
xchg
movl
lret
stos
jp
aaa
ud0
push
cmpsb
or
fidivs
push
aaa
daa
add
mov
nop
pop
add
in
dec
mov
arpl
mov
jo
addr16
lret
push
je
stc
pushf
cli
ss
sub
loope
faddl
sbb
in
out
adc
and
std
cmp
jge
lret
in
xchg
outsb
adc
xor
pop
push
enter
nop
pop
xor
add
mov
fucompp
popa
lahf
std
and
sbb
add
push
sbb
jno
and
and
insb
add
cwtl
enter
dec
jne
fsubrl
sar
adc
movsl
in
jns
xchg
xchg
insl
xchg
xchg
mov
or
jge
ret
int
fsub
jl
arpl
push
mov
xor
fmull
popf
test
js
cmpsl
inc
cwtl
outsl
and
fistl
shlb
sub
cmp
std
mov
out
sub
mov
fcompl
cli
xor
xor
test
movsb
out
jnp
mov
pushf
sbb
pop
mov
mov
cwtl
mov
push
inc
in
or
dec
mov
into
and
ja
cmp
pop
ljmp
cmp
pop
add
lods
dec
dec
out
cs
and
xchg
xorl
sub
fistpl
repnz
in
daa
cmp
or
ret
dec
jno
or
inc
inc
push
pop
push
aad
xchg
addr16
cmp
push
and
nop
cmp
cwtl
push
add
mov
fdivl
ds
xor
mov
jo
jnp
les
jns
test
fsubr
lods
or
imul
mull
lcall
sbb
lret
jecxz
sarl
movb
jb
cmp
and
mov
rol
pop
movsl
fistps
pushf
push
push
push
pusha
push
sbb
dec
mov
jp
adc
jmp
push
lcall
das
fs
jge
int3
push
dec
jl
add
aas
stos
test
cmp
sbb
jmp
pop
dec
fwait
loopne
sub
push
sub
mov
rep
pop
out
and
xchg
xor
push
or
int
mov
lret
push
or
imul
fsubl
sbb
jmp
dec
jp
jae
jno
ret
cmpsl
andb
stc
mov
out
gs
mov
rcrb
jl
push
mov
fiaddl
in
sbb
movsl
mov
hlt
inc
or
je
icebp
jle
jge
fisubrl
fbstp
pushf
loope
fs
mov
xor
push
hlt
cmpl
imull
pop
mov
into
je
adc
into
xor
divl
gs
pop
daa
bound
sub
push
xchg
test
or
dec
pop
or
rclb
dec
push
mov
fdecstp
xchg
push
pop
lcall
push
xchg
sbb
xlat
ret
dec
mov
mov
or
in
test
push
hlt
leave
into
dec
pop
push
xor
andl
ds
out
mov
pop
leave
push
ret
mov
adc
push
test
test
pop
lahf
push
or
mov
fiadds
imul
xor
les
xchg
add
adc
push
cmp
lret
hlt
ds
and
or
add
les
and
inc
insb
aad
sti
xor
arpl
add
push
filds
js
dec
loop
cmp
pop
cmp
testb
sar
out
mov
pop
testb
stos
xor
pop
cmp
out
mov
add
rcrb
sarb
es
mov
or
sbb
in
into
pop
pop
jbe
ret
xor
stos
sub
mov
jmp
adc
pop
shr
lret
clc
mov
lods
adc
roll
mov
dec
xchg
lret
outsl
inc
xchg
pop
or
sub
lret
xor
mov
or
fadds
push
pop
mov
push
aaa
repnz
cmpsb
ss
mov
xchg
push
mov
sbb
sbbl
push
icebp
cmpsl
rcll
das
and
sub
idivl
repnz
mov
sbb
fwait
xchg
and
cli
mov
sub
ja
xor
loope
pop
ss
inc
xchg
int3
mov
inc
scas
int
imul
je
or
sub
es
or
lds
pushf
fidivrs
lods
push
push
jne
and
lea
sub
out
sahf
sbb
cmc
sbb
jbe
nop
pop
push
add
and
jecxz
sbb
ficoms
mov
xor
jmp
fs
out
mov
inc
fstpl
je
das
subb
movsb
insb
stc
cmp
lret
cli
ret
pop
orb
sub
push
test
xor
adc
mov
int
cmp
clc
sub
mov
popf
ds
and
mov
cmp
rclb
inc
jge
fcoms
inc
pop
pop
inc
jl
mov
fcmovne
sti
mov
dec
or
xor
and
shlb
ret
jno
xchg
insb
cmp
addr16
sbb
mov
pop
jle
fisubrl
adcb
sbb
push
loopne
std
mov
decl
sti
test
and
int
jae
out
fsubl
mov
loope
and
mov
fs
cmp
xchg
ss
push
push
lcall
mov
subb
sbb
push
aam
jnp
fwait
cmp
push
daa
xchg
or
or
and
xorl
pop
cs
jae
or
dec
insb
loope
into
lods
cmp
dec
fbstp
or
or
push
push
push
or
push
sbb
sub
push
imul
fildl
add
xor
or
imul
cs
add
enter
jmp
push
pop
sbb
inc
xchg
mov
sahf
push
xor
inc
cmp
pop
das
test
xor
sub
or
jae
scas
cmp
pop
clc
mov
xor
cmc
aaa
pushf
pop
arpl
sbb
dec
mov
movsb
ret
je
push
xchg
cmpsl
pop
shlb
test
inc
ds
inc
dec
xchg
lds
xchg
add
les
ja
movsl
dec
add
dec
ja
cmp
and
mov
fwait
fwait
int3
and
cmp
cltd
insb
pop
adc
xchg
dec
insb
xchg
testb
push
or
mov
pop
out
xchg
lcall
das
jbe
roll
jae
shll
lods
arpl
icebp
dec
mov
adc
lds
push
call
lock
les
jnp
jns
cli
push
cmp
fistl
and
hlt
arpl
popf
pop
sub
fsubs
clc
xchg
jae
push
jns
and
sub
cmp
loope
xchg
jecxz
xchg
mov
xor
icebp
push
pop
pop
sbb
dec
cld
test
loope
hlt
mov
push
xlat
mov
imul
loop
mov
or
test
or
cmpsb
adc
inc
pop
outsb
int
xor
and
arpl
mov
mov
push
dec
xchg
xor
push
ret
sub
xchg
sub
ret
mov
out
test
rol
ds
mov
repnz
xor
dec
jnp
dec
xor
xchg
jg
mov
jp
push
cmpb
out
nop
lret
jb
mov
mov
sub
xchg
xchg
shrl
bound
cmp
andb
popf
mov
add
ds
pop
inc
pop
fnclex
pop
ret
or
repz
cld
repnz
push
jp
lahf
jmp
sbb
mov
scas
stc
mov
mov
in
sbbl
roll
pop
mov
lahf
cmp
jne
inc
loop
outsl
rcl
test
aas
js
inc
sarb
in
pop
aad
sbb
test
xchg
aad
xor
sub
loope
jno
icebp
out
push
int
jb
dec
and
fldcw
call
dec
imul
xor
mov
std
xchg
sbb
mov
sti
xor
pop
cltd
fsub
orb
inc
mov
and
std
mov
ret
push
jg
ds
rorl
jecxz
arpl
sbb
dec
repnz
xor
je
and
push
bound
mov
repz
andb
je
mov
cmpsb
dec
fs
fbstp
pusha
subl
push
jg
out
movsb
jmp
fs
xchg
les
or
icebp
das
sub
pop
popf
decl
int
sbb
and
in
mov
and
scas
pop
les
jge
daa
mov
dec
mov
daa
push
pop
jle
pop
jp
mov
pop
stos
mov
mov
pop
mov
movsl
loopne
sbb
mov
testb
xlat
sahf
shlb
push
data16
mov
add
mov
shrl
or
into
neg
sbb
stos
lret
sbb
out
int3
fnsave
xchg
ficoml
mov
pusha
jb
cmp
mov
mov
push
lods
fs
int3
pop
ds
mov
xchg
jo
rcrb
mov
test
push
daa
push
faddl
mov
adc
frstor
lods
jl
fsubrl
leave
add
insl
stos
lods
insl
push
movsl
mov
or
mov
and
mov
or
mov
pop
pop
xchg
mov
daa
ds
jns
and
inc
adc
or
xor
inc
mov
repnz
xchg
stos
movsl
push
adc
cli
lea
out
and
daa
ljmp
add
mov
fildll
out
ud0
jl
push
cs
pop
inc
in
push
add
stos
push
fildl
or
mov
fidivrl
lret
cmp
push
lds
or
push
and
inc
data16
lret
std
xchg
jg
jl
stc
add
pop
repz
aam
jp
scas
mov
pusha
shlb
test
jecxz
aas
aad
dec
add
test
and
cs
pusha
loope
rcrl
xchg
dec
push
push
mov
mov
adcb
jnp
test
or
mov
movsl
clc
iret
pusha
cmp
push
push
mov
xor
ficoml
mov
cmpsb
movsb
adc
cli
nop
insb
adcb
iret
and
arpl
dec
xchg
arpl
ds
scas
sbb
fwait
stos
shlb
ss
sbb
sbb
xor
fwait
and
mov
ret
in
xchg
add
ret
dec
mov
dec
incb
xchg
cmp
or
sar
dec
jnp
in
fs
mov
test
add
xchg
mov
mov
cmp
lcall
iret
jne
fadds
inc
std
xor
scas
daa
lods
xlat
xchg
xlat
std
shll
or
push
std
push
arpl
stmxcsr
mov
outsl
mov
mov
xor
ret
aaa
daa
jecxz
rcll
adc
mov
or
stos
push
inc
mull
divl
sub
iret
imul
pop
fwait
out
clc
fs
je
adc
movl
sub
jl
adc
sahf
jl
call
push
xor
inc
mov
call
xchg
jle
xchg
sub
pop
jg
cld
cmpsl
cmp
jp
jp
insb
repz
shll
pusha
cmp
mov
cs
xchg
cwtl
jne
push
aaa
outsb
sbb
repz
bound
cld
cwtl
testl
test
cmc
inc
or
inc
add
cmpsl
adc
cli
out
lret
testb
cmp
mov
push
xor
nop
mov
mov
js
icebp
mov
xorl
out
out
jle
lods
cmp
pop
arpl
in
mov
frstor
pop
push
sub
repz
jns
push
popa
cs
and
in
cmc
cmp
mov
rolb
lea
push
pop
xor
ss
arpl
lahf
mov
xorl
scas
inc
pop
push
insb
out
xchg
addr16
jbe
sub
push
pop
mov
xchg
sub
outsb
sub
repz
push
movsl
mov
add
lock
xor
arpl
inc
repnz
gs
adc
cld
mov
xchg
dec
xchg
lcall
add
adc
pop
cmpsl
out
jae
sbb
cmp
and
adc
pop
dec
hlt
aam
mov
push
push
repz
shrl
inc
pushf
lods
pushf
add
jno
xchg
shll
popf
insb
imul
out
and
lea
fisttps
enter
mov
and
mov
jl
cmpsl
mov
jg
push
dec
hlt
jae
inc
add
sbb
dec
cmpsb
setle
sub
outsb
test
mov
sub
inc
or
in
aad
sbb
filds
pop
stos
mov
push
fidivs
push
fisttpll
push
mov
push
call
les
frstor
inc
cmp
ret
or
and
xchg
dec
lds
pop
dec
aad
mov
sub
mov
mov
jg
jbe
mov
xlat
cmp
daa
xchg
pusha
shlb
cmp
cmpsl
inc
push
cmpsb
enter
pushl
enter
and
sahf
xlat
mov
cltd
mov
std
mov
mov
pop
lahf
sbb
daa
sbb
dec
mov
jo
paddusb
and
xchg
or
ret
lock
sbb
xchg
stos
xor
jecxz
push
jmp
add
inc
dec
sbb
imul
inc
inc
push
mov
stos
dec
add
lock
insb
add
sub
into
int
hlt
ret
mov
mov
int
pop
adc
leave
in
cmpl
push
fadd
lahf
push
loope
push
imul
popa
fs
je
iret
push
and
in
dec
mov
jmp
and
imul
mov
std
movsb
call
sbb
cmpsl
jo
loope
filds
int
cs
inc
lret
pop
inc
xchg
loop
sub
lret
mov
shl
inc
xor
xchg
or
bound
test
cmp
imul
and
outsl
pop
or
sti
mov
pop
cld
push
cmc
mov
outsb
pop
lds
pop
and
lea
ret
aad
insl
adc
xchg
andl
lret
outsb
pop
add
and
pop
pusha
lret
jns
inc
pusha
cli
mov
jb
sahf
addl
lret
push
test
testb
lock
jg
lahf
test
or
or
rcrl
cmp
mov
push
add
cmc
and
dec
lcall
enter
mov
xor
loope
sub
adc
and
mov
sub
mov
ret
aas
jl
ljmp
inc
push
jb
lret
pop
lea
ja
pushf
pushf
call
gs
xor
xchg
mov
push
std
mov
les
enter
push
xor
popf
inc
mov
pop
dec
popa
std
out
fnstsw
mov
cmp
pop
sbb
in
jmp
mov
cmp
in
inc
push
inc
sti
test
aas
insl
int3
push
dec
xchg
sub
jge
sarl
dec
iret
xchg
or
cmp
movsb
push
ds
popf
cwtl
dec
in
mov
lahf
mov
add
imul
add
mov
xor
sub
cs
mov
test
pop
mov
sub
fstpt
xchg
mov
inc
cs
in
bound
dec
bound
push
in
jnp
adc
push
fcoms
push
mov
outsl
gs
mov
sarb
fmul
push
test
and
icebp
aad
out
imul
xchg
push
inc
ds
js
leave
mov
push
movsl
inc
push
ret
xchg
dec
js
arpl
rcl
pop
pop
mov
repnz
add
mov
icebp
in
add
pop
mov
fwait
mov
lods
mov
push
fstl
out
dec
sub
mov
adc
iret
enter
xchg
mov
notl
lcall
sbb
adc
sub
shlb
xchg
imul
mov
insb
pop
ret
data16
inc
add
ficomps
sub
pop
dec
pop
mov
add
roll
nop
adc
jp
jb
xor
daa
imul
cmpsl
mov
rorb
outsl
add
sbb
xor
cmp
lock
fisttps
ljmp
mov
aaa
or
fiadds
sub
mov
addr16
inc
dec
das
sbb
cld
sub
adc
xchg
nop
xchg
xchg
xor
jle
enter
pop
inc
pop
pop
rorl
out
dec
fnstenv
jno
iret
adc
or
loopne
shr
jle
in
repnz
pop
or
jl
push
and
and
cltd
or
xchg
roll
daa
push
jge
sub
cmp
out
jnp
sub
mulb
rcll
lcall
imul
loop
inc
jmp
xor
inc
cltd
data16
scas
xor
out
push
cmp
or
cmpsl
jbe
sub
pop
xor
jecxz
pop
sbb
push
in
sti
push
mov
sub
lock
outsb
repnz
add
or
ret
jmp
movsl
add
sbb
ss
mov
add
jns
sbb
imull
jge
loop
dec
int
sar
out
push
les
loopne
dec
cmp
inc
dec
pop
mov
fimuls
xchg
mov
push
push
aas
and
sbb
in
out
loopne
lret
lock
or
or
js
jnp
in
iret
sbb
stc
aam
and
out
pushf
mov
fists
outsl
add
in
and
mov
mov
movsl
shll
jne
xchg
movsb
mov
lret
cmpb
cmp
in
pop
pop
repnz
out
pushf
mull
addb
mov
lret
xor
insb
add
jnp
mov
data16
or
or
push
add
lods
dec
cmp
in
and
fbstp
mov
sub
stos
pop
mov
xchg
sbb
or
mov
dec
dec
lret
ret
and
sbb
int
xchg
push
insl
cmc
into
lods
xchg
clc
or
add
pop
push
lret
mov
mov
in
orl
inc
dec
or
shl
stc
add
ror
ret
mov
out
dec
scas
jo
xchg
fst
jbe
xchg
sbb
add
cwtl
jle
cmp
push
das
push
fcmovnu
inc
and
jle
jecxz
inc
fs
repnz
mov
int3
pop
push
add
clc
fldenv
clc
pop
aad
or
mov
add
mov
add
shrl
sti
pop
sbb
jnp
mov
xchg
push
push
pushf
shll
mov
push
push
or
cmp
ret
popa
push
clc
push
mov
iret
xchg
adc
ds
out
and
jmp
adc
lods
cmp
sahf
or
mov
cltd
shll
and
jl
aaa
ljmp
leave
bound
aas
pop
cld
sti
dec
push
jae
mov
xchg
inc
dec
rolb
and
movsl
add
cmp
ss
ds
push
ret
jae
inc
in
xor
push
push
rcl
sti
lret
cmp
jmp
push
sbb
sub
cwtl
imul
push
inc
pop
mov
pop
push
neg
pop
pop
pop
cltd
ficoml
xchg
call
mov
jbe
push
cmc
pop
dec
ljmp
add
mov
inc
les
js
stos
jle
dec
mov
mov
cmc
add
cmp
pushf
mulb
nop
minps
aaa
inc
insl
out
add
xchg
cmp
fsub
insb
call
fistl
inc
add
sub
mov
jl
mov
mov
inc
sbb
shr
sbb
jl
cmp
outsb
mov
cli
xchg
mov
aaa
je
ret
scas
inc
sbb
cli
pushf
cmp
add
mov
or
push
test
mov
mov
arpl
inc
and
cmp
stos
gs
mov
pop
imul
mov
jle
xor
or
out
mov
sub
mov
fisubrl
adc
cmp
add
ja
add
push
test
cld
popf
ss
dec
test
outsb
int
popf
push
iret
mov
push
xor
rcll
sub
out
mov
lds
cmc
sbb
adc
push
gs
fwait
jno
sub
neg
sarb
in
adc
lods
stos
adc
pop
lret
push
cmc
cmp
xchg
mov
cmpsl
fsubrl
jl
mov
test
dec
dec
lock
movsb
pop
push
cmpsl
cmpb
pop
in
ja
mov
sbb
add
pop
jp
cmp
or
ds
pop
outsl
pop
xchg
mov
dec
mov
push
mov
add
sub
test
repnz
lret
sbb
test
push
jo
pop
ja
test
insl
mov
inc
mov
imull
sub
into
mov
push
fidivrs
jmp
sub
or
pop
in
jo
pop
mov
adc
ret
and
jb
xorl
push
push
divb
stos
jne
pusha
loopne
pop
push
nop
faddl
push
mov
push
loope
jmp
sbb
sbb
and
jecxz
jle
daa
orb
or
or
inc
loope
ret
subl
xchg
gs
outsb
jbe
insb
dec
movq
pop
loopne
push
je
arpl
je
pushf
xchg
inc
imul
pop
sarl
push
js
xlat
pop
sub
xchg
insb
out
aas
jl
sbb
dec
mov
into
dec
push
mov
nop
sarb
jmp
sbb
mov
adc
mov
dec
call
mov
lcall
cld
test
fisubrl
aad
mov
pop
cmpsb
cld
shll
frstpm(287
test
adc
dec
xchg
shlb
rolb
hlt
sub
in
cli
lods
inc
sub
sub
pop
fstpl
cmpsl
rcr
cltd
cmpsb
mov
sub
mov
inc
push
sahf
inc
scas
in
mov
js
sbb
ret
mov
fists
mov
ss
or
sbb
stc
adc
mov
sbb
jnp,pn
mov
cmc
pop
jbe
sub
sti
les
cmp
bound
xchg
xor
scas
sbb
lret
arpl
scas
lea
dec
push
mov
xchg
insb
sbb
pop
stc
inc
sub
and
icebp
pop
push
das
pushf
ret
inc
or
ss
xchg
cmp
push
inc
sub
aaa
sub
dec
adc
and
aas
push
stos
and
jecxz
bound
clc
sub
jb
lea
imul
dec
pusha
ficoms
cltd
mov
cmp
jne
aas
jle
pop
sub
mov
pop
xchg
je
popf
pushf
mov
jge
int3
movsl
mulb
mov
sub
add
fcoml
jg
out
push
adc
mov
shlb
dec
rcrl
mov
inc
add
mov
sub
xchg
or
imul
xchg
jl
jge
pop
stos
rcrb
push
cmc
xor
dec
mov
hlt
and
repnz
imul
pop
mov
and
sti
inc
std
mov
mov
jl
xchg
movsb
xchg
mov
sahf
pop
and
call
ds
xlat
cmp
movsb
push
sub
push
or
mov
subl
adc
outsb
movsl
push
out
mov
jl
cmp
cmp
pop
jne
pop
clc
fisubrs
outsb
cltd
mov
outsb
cmp
ret
dec
movsl
sbb
jb
pop
rorb
xchg
pop
mov
ret
dec
popa
hlt
xchg
jecxz
negl
mov
xchg
vrsqrtps
ljmp
mov
mov
gs
mov
xchg
push
pop
seta
outsl
repz
ror
mov
les
xor
lret
push
in
xchg
pop
subl
jo
cli
in
mov
dec
div
mov
les
xor
push
dec
vfnmsub213pd
jl
stc
sbb
push
mov
in
push
fld
push
test
int
cld
in
mov
lahf
dec
push
mov
out
or
incb
loopne
imul
es
xlat
outsl
mov
cmp
repz
add
bound
xor
mov
in
xlat
repz
jo
imul
sub
cmp
ret
es
enter
aad
cli
sub
fisubrl
clc
call
jecxz
aam
in
xor
lods
add
add
push
pop
pop
shll
xchg
jae
mov
mov
ret
add
loop
outsb
test
lcall
jge
arpl
mov
and
and
das
out
adc
testb
sbb
xchg
das
mov
cmp
dec
nop
imul
cld
sahf
aam
inc
stos
jle
movsb
push
std
test
sub
stos
shr
push
jo
out
std
shrb
or
cs
xlat
lds
pop
rcrb
mov
jns
xchg
and
aad
jbe
xlat
mov
lcall
lea
mov
aas
sbb
lret
aad
fists
popf
loop
jae
jbe
mov
xchg
mov
xchg
jns
cmp
mov
insl
adc
scas
jne
xlat
add
mov
mov
mov
sub
fisttps
lahf
mov
nop
sahf
jp
inc
mull
movsl
dec
clc
into
jge
addr16
push
sbb
pop
movsl
mov
cmp
std
dec
hlt
shlb
dec
icebp
jl
push
shll
xorb
dec
shlb
mov
ret
rcrl
or
xchg
pushf
inc
out
test
adc
dec
xchg
loope
aam
add
add
sub
mov
loope
push
pop
sbb
aaa
dec
mov
cmp
xchg
xor
sti
xchg
mov
das
push
into
jbe
scas
sbb
lret
test
iret
adc
pop
inc
mov
xchg
push
je
mov
cwtl
mov
lock
cmpsl
mov
ret
aad
mov
shl
push
loopne
push
mov
dec
push
adc
and
or
cli
lea
xchg
ss
add
adc
fstps
hlt
repz
cmp
dec
jmp
sub
mov
lahf
push
and
testb
inc
mov
nop
dec
inc
adc
rcl
cltd
test
movhps
insb
push
fldcw
pop
mov
iret
add
mulps
outsb
out
cli
jb
fists
lods
cmpsb
popa
and
out
out
scas
pop
add
add
inc
push
stos
test
rorb
cs
jns
jbe
xlat
stc
xor
aas
mov
mov
push
jg
outsl
fs
xorb
xor
dec
lods
cli
xchg
loop
xchg
dec
sti
rolb
lcall
cmp
xor
xchg
ljmp
jb
cltd
aam
stos
stc
xor
sub
pop
mov
into
push
pop
mov
jge
ja
dec
and
out
dec
sub
roll
jl
add
cld
lods
cmp
in
xchg
push
adc
mov
jle
mov
jle
xchg
enter
mov
lcall
or
dec
and
inc
add
cmpsl
mov
pop
pusha
ror
aas
in
xlat
out
nop
dec
fs
mov
push
out
cmp
cmp
ffreep
xor
lcall
and
cltd
push
outsl
xchg
jb
dec
pop
orb
stc
lds
lret
scas
xor
dec
mov
insl
aaa
inc
lea
fisttpl
pushf
inc
add
lods
in
sub
loope
aaa
and
dec
out
mul
xchg
jne
inc
out
loopne
pop
xor
ja
sbb
shll
inc
xchg
outsl
add
mov
sti
pop
fchs
push
jae
pushf
jle
mov
pop
test
pop
push
incl
arpl
std
mov
adc
sbb
loopne
dec
cmpsb
sahf
subl
pop
cmp
sahf
out
sub
cwtl
in
xchg
cmpsb
mov
mov
sbb
and
out
test
jo
mov
lret
jecxz
gs
insb
rcrl
int3
loop
cmp
and
pop
sbb
popf
cmp
mov
sub
repz
jns
mov
cmp
xorb
jb
xorl
xchg
push
mov
lahf
sub
in
rcrb
jbe
loop
rorl
popf
and
and
cmpsb
aam
lods
mov
push
shl
cmp
sub
add
jle
nop
pause
int
and
mov
shlb
jecxz
movsb
ja
or
cmp
mov
sbb
nop
adc
and
movsb
adc
xchg
xor
lock
push
xchg
push
insl
jns
sbb
rclb
pop
xchg
ljmp
cld
sarl
insl
fadds
adc
lock
loopne
mov
bound
popa
push
jl
dec
test
jb
push
xor
add
inc
cmpsb
inc
cmp
xchg
les
mov
mov
xor
dec
aam
cmpsb
test
dec
subb
or
int3
lods
sbb
out
test
inc
jne
jnp
push
xchg
add
sub
fbld
xchg
int3
out
mov
jne
pop
test
stc
xchg
fsubrs
sub
push
pop
int3
mov
jno
mov
mov
cld
add
shr
lods
pop
sbb
push
sbb
mov
std
xchg
int
or
pusha
bound
dec
pusha
sub
mov
fdivr
inc
mov
and
xor
sahf
es
xlat
mov
or
add
mov
xchg
fdiv
cmp
dec
adc
testb
cwtl
shl
push
cwtl
cld
cltd
popa
pop
movsl
adc
inc
xchg
lods
adcb
pop
stc
pop
cs
js
int
fmuls
or
adc
pushf
inc
jne
jae
jbe
cld
je
nop
cmp
or
arpl
mov
stos
icebp
in
stc
mov
int3
sbb
or
pop
subl
add
outsl
dec
cmp
mov
sti
or
incl
clc
lds
pushf
and
fisubrs
xchg
adcl
and
hlt
lods
fmuls
lds
lret
insb
testl
xchg
or
test
in
dec
pop
or
add
adcl
lods
sbb
lret
push
subl
femms
push
sub
cmpsl
insl
or
sub
andb
or
data16
jg
xchg
or
xor
mov
shll
mov
and
cmp
pop
cmp
popa
jg
scas
movl
inc
addl
sub
repnz
jbe
xor
lcall
aaa
sbb
ljmp
int3
sbb
loopne
lods
jl
inc
sbb
shl
andb
mov
es
int
jg
out
or
push
fisubrl
scas
lahf
or
mov
scas
daa
xor
decl
xchg
ss
jae
add
mov
and
scas
arpl
loopne
pop
stos
xchg
jl
jbe
mov
mov
and
push
or
data16
frstor
sbb
mov
inc
adc
fiaddl
nopl
cmp
inc
in
and
iret
out
insb
roll
insb
loopne
prefetch
push
cwtl
outsl
cli
sbb
aaa
loop
jmp
std
sub
xchg
stos
ss
cwtl
aaa
mov
mov
dec
or
aad
adc
bound
lret
sahf
pop
xchg
mov
dec
mov
clc
aad
aam
addl
movsb
mov
add
fstpt
clc
jl
mov
push
sbb
mov
lods
out
xor
ljmp
inc
mov
cmpsl
adc
or
orb
adc
xchg
sub
outsl
addr16
cmpsl
xchg
scas
add
push
in
push
or
xchg
in
xor
call
insl
cmpsb
inc
stos
add
dec
enter
loope
sahf
insl
test
mov
jp
imull
inc
mov
sbb
dec
jbe
xchg
insb
cmp
cltd
loopne
or
je
loopne
dec
sti
mov
popf
xchg
sub
lahf
add
in
pop
mov
aas
inc
cmpl
mov
jnp
ja
cld
push
fidivrs
dec
inc
add
and
mov
cmpsb
movsl
mov
jnp
dec
imul
xor
ljmp
jg
dec
jp
or
push
mov
iret
mov
adc
dec
xlat
in
mov
sub
sub
mov
mov
pop
imul
popf
and
dec
in
xlat
addr16
out
sbb
fmul
cmp
sbb
aas
mov
test
push
or
inc
push
dec
push
cmp
or
sti
add
mov
cld
push
adc
xchg
xor
jmp
in
dec
popf
jge
jge
pop
and
loope
ds
jo
movsb
pushf
stc
lock
pop
fs
std
add
aaa
mov
push
or
and
std
aaa
jl
cs
pusha
int
mov
jmp
cmp
out
pop
jmp
push
inc
popa
ljmp
push
ss
andb
xor
iret
js
bound
pop
int
and
fidivs
aas
push
xchg
xchg
add
jne
dec
inc
movsb
sub
ss
hlt
add
lret
mov
ret
xor
sbb
xchg
in
inc
vunpcklps
dec
xchg
adc
outsl
dec
insb
or
cmpb
out
insl
jecxz
popa
cld
hlt
leave
jl
imul
imul
pop
out
inc
xchg
pusha
mov
icebp
inc
iret
adc
mov
push
add
push
aaa
fcoms
imul
xor
mov
inc
test
mov
mov
subb
jo
inc
and
stos
jle
or
hlt
mov
jecxz
push
psadbw
jl
hlt
cmp
push
movsb
push
jg
push
add
inc
dec
rorl
sub
daa
cmp
mov
inc
mov
lods
cmp
push
inc
sub
mov
or
jg
and
xchg
in
fnsave
lods
icebp
outsl
lods
call
and
dec
iret
inc
fcom
int
xor
in
loope
sbb
adc
fwait
and
dec
xchg
add
test
stc
inc
pcmpgtw
jg
cli
dec
popf
adc
push
adc
fldenv
push
aas
push
push
mov
jecxz
cmp
pop
cmp
pop
orl
push
popa
out
sbb
shrl
subb
dec
push
xchg
xchg
repz
pop
pop
push
pop
sub
in
shr
dec
cld
repz
mov
fs
cltd
test
pop
jle
mov
loopne
std
jne
cltd
in
adc
fs
lahf
xchg
into
add
lods
cmp
xor
push
jmp
adc
idivb
sub
mov
mov
xor
addl
jmp
fimuls
scas
mov
or
push
adc
adc
shlb
mov
add
mov
sbb
fcmovu
adc
mov
fdivrp
mov
mov
shll
or
push
mov
or
leave
jae
mov
xchg
sbb
inc
xor
out
pop
jp
rclb
shll
jecxz
xchg
rcr
ljmp
popf
jo
repz
cwtl
dec
rorb
jns
push
stc
pop
out
insl
cs
push
test
cmc
es
add
loopne
push
scas
jp
lds
adc
mov
stos
and
js
cwtl
jmp
sub
dec
dec
addr16
mov
sarl
cmp
xchg
xchg
or
daa
int
fdivrl
xchg
fmulp
jle
add
push
icebp
dec
lcall
jb
mov
sbb
push
and
imul
dec
leave
fwait
add
and
cmpsl
xor
sub
in
jmp
popf
inc
jp
adc
mov
mov
outsb
mov
sub
jnp
dec
scas
ss
add
push
and
pop
and
jge
xchg
testl
mov
ja
and
loope
mov
xor
push
xor
into
out
stos
cmp
std
gs
sbb
idivl
mov
sbb
jne
fcomp
xor
dec
cmp
jne
sbb
and
pop
push
gs
lret
pop
mov
loope
push
pusha
movsb
dec
aaa
pusha
mov
and
dec
enter
adc
cmp
movsl
cld
jecxz
scas
ss
rcrb
cmp
rcrl
xchg
ficoms
cmp
ss
pop
mov
pop
jmp
pop
mov
fcmovnbe
pushf
dec
cmc
push
je
out
test
jg
dec
adcb
adc
mov
loopne
dec
sbb
sub
fiadds
inc
xor
call
pop
add
sub
rolb
popl
xchg
or
sahf
mov
sbb
pop
sbb
jecxz
sahf
push
mov
and
nop
fsubs
lcall
ds
push
push
push
ds
xchg
adc
addb
and
ret
cmpsl
mov
and
dec
lret
jne
test
inc
hlt
cmc
test
mov
mov
cmpsl
rclb
shll
sahf
test
push
cmp
sbb
jb
sub
loope
out
dec
adc
push
ds
sti
push
or
mov
cli
cmp
out
int
xchg
insl
mov
pop
sahf
fucomi
test
add
mov
jne
xlat
orb
lret
ror
daa
sbbb
test
xchg
push
add
ja
fdivrl
fwait
mov
fiaddl
and
fstl
dec
frndint
inc
mov
mov
sub
jnp
jge
es
xchg
cwtl
fists
pusha
mov
insb
dec
add
sbb
test
xor
jo
stos
fcomip
cmp
jecxz
pop
and
xchg
mov
mov
cmp
mov
ds
mov
sti
std
shlb
xchg
jmp
or
inc
pop
add
out
out
clc
jp
aas
jne
jnp
out
fildll
cltd
stc
sbb
pop
sbb
dec
pop
stc
xor
mov
or
pop
out
sbb
es
jle
xchg
pop
jge
mov
mov
mov
pop
jp
cwtl
je
dec
mov
loop
nop
pop
test
pop
push
cmp
cmp
nop
and
repz
dec
mov
outsb
popf
lods
or
leave
adc
add
rolb
pop
daa
push
xor
dec
jl
mov
inc
sbb
cld
scas
lret
sub
lods
push
fsubs
sub
cmpsl
jns
out
subb
sbb
xor
dec
loope
scas
outsl
mov
and
add
mov
movsb
fmull
cmc
imul
pop
je
push
std
push
fs
stos
pop
jbe
dec
mov
insl
inc
mov
popf
or
mov
jge
imulb
adc
arpl
and
test
push
adc
dec
fwait
cli
cmovg
gs
int
pop
in
xorl
cmp
sub
xlat
pop
movsl
sbb
int
push
and
lcall
leave
sbb
dec
cmp
mov
jae
sarl
cltd
mov
mov
hlt
mov
add
mov
inc
pop
insl
jae
add
js
decl
in
daa
into
xchg
popa
lock
cmp
fiadds
inc
lret
cmp
sub
mov
sbb
pop
xchg
ds
sahf
lods
push
mov
sbb
clc
add
mov
and
shlb
aaa
jne
lcall
push
insl
insb
push
push
sti
inc
es
rcrb
not
lret
mov
xor
popf
pusha
xchg
mov
out
inc
ljmp
jmp
dec
inc
loop
in
in
ds
movsb
mov
jne
mov
and
adc
or
lret
ret
imul
push
daa
stc
add
adc
js
js
adc
or
sub
outsl
add
lret
arpl
mov
pop
sahf
dec
mov
push
adc
aad
sub
or
ror
mov
test
aaa
ret
and
dec
jnp
cvtps2pd
mov
ljmp
or
lcall
adc
dec
inc
cmp
mov
test
stos
sbbl
jb
pushf
lcall
in
inc
lds
jne
xor
movsl
push
push
lahf
xor
rcrb
jae
cmc
xchg
psubw
mov
pop
mov
jmp
dec
inc
ficoms
sahf
jns
sbb
and
call
xchg
mov
ljmp
in
xchg
sub
cmp
inc
xchg
idivl
inc
sub
jns
popa
sub
lret
movsb
mov
sbb
aad
ret
ljmp
dec
lods
stos
xor
mov
adc
fdivr
shlb
stos
cmpsl
ljmp
in
fistl
pop
insb
pop
xchg
ret
es
xor
lea
mov
cmc
pusha
sub
mov
das
jb
popf
add
outsb
lds
repz
mov
jbe
das
add
xchg
push
push
adc
and
ret
xchg
sbb
mov
pop
ljmp
out
das
iret
inc
stos
in
ja
movsl
push
pop
insl
test
add
sub
test
mov
push
sbb
cmpsb
inc
cmc
pusha
push
add
xchg
mov
mov
das
leave
loopne
movsl
xor
dec
sbbl
jl
xchg
ljmp
jmp
insb
aam
xchg
test
notl
pushf
dec
in
xchg
outsb
lret
mov
bound
jp
stc
push
pop
push
pop
sbb
dec
cs
fs
dec
sbb
cwtl
es
je
ja
adc
int
imul
aas
or
ret
mov
mov
dec
add
js
mov
xor
aad
into
jo
xor
aaa
dec
mov
fsubr
outsb
das
jmp
test
dec
sbb
iret
mov
xchg
fldenv
pop
insb
out
jb
mov
stc
push
jecxz
xchg
jge
arpl
pop
outsl
adc
je
cmp
stc
and
mov
dec
mov
int3
test
data16
add
and
mov
xchg
adc
aam
jmp
stos
mov
mov
lret
lods
inc
ss
push
mov
mov
in
mov
shl
and
inc
loop
lock
xor
push
cmc
jnp
outsb
sub
and
jne
push
push
es
movsl
xchg
loop
xor
call
clc
rcrl
push
sbb
and
cwtl
hlt
xor
fs
scas
test
lods
ss
popf
cli
gs
dec
xchg
pop
mov
push
bound
daa
adc
jge
pop
jp
cltd
mov
xor
mov
gs
xchg
mov
aas
js
lret
sahf
xchg
cmp
mov
sbb
int3
adcl
pop
cwtl
mov
stos
ljmp
cld
jl
shl
movsb
lahf
dec
push
mov
stc
xorb
mov
jl
rcrl
in
dec
mov
inc
jl
xchg
pop
out
push
repz
into
add
popl
fs
mov
sub
lock
cmp
mov
subb
mov
pop
cmpsl
push
pop
mov
push
xor
sbb
xchg
lret
mov
sub
cli
mov
add
inc
xchg
sbb
inc
shrl
repnz
xor
lahf
or
cmp
mov
int
sub
pushf
push
rcl
leave
lahf
lret
xchg
int3
dec
test
int3
inc
imul
sti
and
jg
outsb
cmp
xchg
dec
xor
xor
rolb
fwait
cmp
add
repnz
or
les
mov
mov
jbe
mov
popa
or
jne
in
js
mov
mov
xor
in
push
lret
or
add
or
sahf
inc
sub
gs
adc
dec
sub
mov
fnstenv
daa
mov
pop
push
rcl
sub
adc
daa
gs
mov
inc
scas
ss
in
xor
repz
jbe
out
adc
and
adc
das
jns
mov
lcall
icebp
lds
scas
mov
fldenv
ja
fimull
sub
addr16
inc
outsb
into
int3
popf
mov
mov
dec
dec
sarl
or
and
and
adc
mov
icebp
or
popa
pop
sahf
clc
cli
ja
cmp
and
pop
int3
pusha
lahf
cmp
pop
push
sbb
mov
outsl
mov
xchg
ja
testl
cmc
imul
inc
cmp
adc
add
jnp
out
icebp
or
cmpsl
pushf
loope
add
lret
imul
int3
adc
les
mov
jmp
push
jb
add
push
mov
subb
jo
push
mov
andb
dec
xor
in
or
out
jne
xor
lret
mov
or
mov
pop
mov
scas
jo
mov
mov
fstp
lods
out
mov
push
mov
in
mov
mov
dec
lret
pop
lods
stc
add
je
orl
push
sub
adc
cmp
mov
xchg
ror
pop
push
cmp
push
add
out
and
adcl
ret
ret
scas
jns
mov
push
and
dec
fs
stc
or
fwait
aaa
sbb
jb
add
or
push
push
std
icebp
stos
dec
or
shlb
sahf
fmull
lcall
pop
inc
cmp
xor
xchg
jmp
das
cmp
es
dec
in
enter
adc
push
imul
std
add
mov
test
or
or
ret
lret
jecxz
insb
mov
jecxz
aaa
inc
xchg
mov
mov
fdivrl
popf
jge
sub
loop
jmp
cli
cwtl
pop
gs
bound
fldl
and
lods
and
dec
adc
ret
imul
fsubr
jecxz
rorl
test
adc
mov
js
or
push
jge
xchg
rolb
test
fdivrl
sbb
fisubrl
pop
xlat
dec
jnp
int3
stos
cmp
call
call
js
testl
mov
js
int3
out
data16
fdivrl
paddsb
subl
and
and
test
add
xchg
inc
xor
sti
mov
inc
or
and
jmp
mov
xchg
mov
cmpsb
int
pop
pop
neg
stc
and
in
test
dec
shlb
sub
sbb
dec
mov
ret
jecxz
idivl
or
xchg
ss
aas
repz
lcall
push
xor
inc
mov
mov
bound
add
pop
ret
and
popa
adc
out
ret
outsl
shll
sbb
movsb
addr16
test
ja
dec
pop
lods
pusha
hlt
push
not
adc
cmp
aas
and
pop
sbb
mov
mov
loope
xchg
out
or
mov
mov
xor
jae
lcall
out
cmovp
mov
and
xor
mul
cmp
and
mov
divl
jae
mov
stc
outsb
js
in
mull
sbb
adc
outsb
add
sbb
or
xchg
xchg
loope
fidivl
jmp
pop
inc
out
out
inc
jne
pushf
inc
push
pop
xchg
cmp
xlat
push
sti
jge
push
lds
pop
push
add
ja
scas
mov
outsl
pop
add
adc
add
or
dec
movl
pop
in
sub
and
mov
xchg
call
daa
movsb
jecxz
and
loop
push
mov
cmp
sub
sbb
cmp
ss
je
cmpsb
mov
mov
je
into
imul
popa
push
rclb
add
rorb
add
push
test
ret
push
cmp
cmc
inc
cli
mov
and
stos
std
stc
mov
sub
pusha
mov
jmp
xchg
lods
xchg
or
je
push
dec
pop
mov
pop
cmc
cs
lods
push
jmp
jl
hlt
inc
push
cmp
xorl
loop
mov
pop
leave
ret
cmpl
fmul
das
cmpsl
or
mov
mov
inc
mov
lods
in
pop
outsb
cmpsb
fisubrs
or
aam
sbb
test
popa
xchg
jecxz
xor
shlb
jge
jp
jle
test
fnstcw
loop
scas
psignb
out
mov
int
mov
mov
je
cmp
out
jp
sub
xchg
lahf
popf
jo
int
adc
lret
jo
or
cli
movq
cmp
test
fldenv
shll
cli
mov
les
push
inc
into
cmp
mov
adc
ret
fidivrl
or
fistpll
leave
es
cltd
outsb
cmpsl
pop
das
rcrl
push
inc
pop
pop
fs
ds
aaa
and
mov
sbb
mov
add
push
dec
add
push
xchg
test
ja
cltd
in
in
cld
imul
ja
incl
push
out
in
sbb
adc
ret
or
cmp
xchg
mov
cmpsl
push
inc
jnp
mov
mov
adc
leave
sub
cld
sbb
rorl
mov
push
add
push
loop
lds
ljmp
push
push
jmp
adc
mov
mov
fdivrs
andb
rcrl
ljmp
daa
in
sbb
movsl
in
mov
jbe
inc
imul
dec
pop
cmp
ds
adc
inc
mov
dec
int3
test
sub
por
adc
inc
xor
push
loope
ja
mov
mov
movsb
mov
dec
insl
mov
test
popf
xchg
sub
sahf
mov
xor
cwtl
cltd
pop
inc
dec
dec
lahf
bound
sub
push
dec
mov
ds
mov
fistps
cmp
les
std
lret
cld
pcmpgtb
xor
mov
jge
or
sub
mov
ss
pop
mov
shr
mov
jg
or
or
mov
xchg
sbb
inc
push
sbb
sub
pushfw
cli
test
cltd
cmp
dec
in
dec
ret
popf
xlat
fs
repnz
dec
out
ret
or
pop
and
fildll
sti
leave
jno
cltd
movsb
sub
inc
inc
and
mov
cwtl
mov
mov
idiv
cmp
mov
dec
outsl
stos
pop
pop
adc
cmp
popf
pop
aad
pop
imul
subl
out
pop
in
fidivrl
loopne
insb
xor
int3
sbb
mov
push
out
xor
out
jp
icebp
data16
sbb
mov
mov
mov
push
push
mov
outsl
lcall
stc
jecxz
mov
cmp
jl
jne
mov
cli
mov
push
pushf
loope
push
pop
or
mov
sub
add
popa
adcb
testl
fidivrl
mov
negl
or
aam
cmp
dec
adc
inc
sub
repz
push
rcrl
sahf
dec
pop
js
mov
pop
inc
sbb
sub
pop
stc
mov
sbb
xlat
cltd
dec
movsl
xor
mov
scas
sbb
jnp
inc
inc
mov
pop
xor
addl
sub
and
or
xlat
push
cmp
icebp
sarb
and
dec
push
inc
fidivrs
cmp
out
sub
push
lods
lods
or
subl
mov
sub
mov
es
data16
adc
movsl
jbe
push
xor
call
mov
call
xchg
data16
mov
push
loopne
ljmp
sub
or
rorb
out
rcrl
cmpsl
sub
jg
mov
ljmp
xor
popa
dec
fdivl
xchg
ja
out
xchg
or
xor
iret
mov
data16
sbb
pusha
sbb
sbb
sub
les
pop
flds
lret
mov
sbb
push
rol
repz
sti
sarl
in
mov
ljmp
incl
clc
cmp
jecxz
cltd
jge
fadd
inc
std
inc
dec
inc
aad
in
jmp
cltd
jb
pop
aas
mov
xchg
dec
xchg
lcall
mov
jae
fcomi
out
sub
push
sbb
je
and
sti
cmp
rorl
and
lret
dec
fcomps
push
scas
ret
push
mov
shrl
cmpsb
lcall
in
jne
adc
pop
je
dec
inc
push
xchg
sti
mov
cmp
fdivrl
stc
sub
js
fs
mul
dec
xchg
insl
mov
inc
adc
stc
mov
or
and
mov
movsb
mov
jb
sub
incl
je
out
hlt
add
mov
pop
sbb
xchg
push
jae
or
insb
into
pop
aas
in
xor
ret
addl
insb
mov
xchg
xchg
and
cmp
rcr
fadds
pop
or
push
lahf
decl
jg
popa
pop
dec
cmp
jne
mov
gs
ljmp
cmp
aad
lret
repz
sub
push
gs
sbb
inc
sub
mov
scas
pop
test
mov
stc
xchg
rcrl
adc
or
pop
mov
repnz
lods
stos
add
ret
adc
out
lret
fucomi
aaa
addr16
sbb
into
lret
xor
mov
cmp
jp
mov
sbb
mov
mov
in
mov
adcb
sbb
sbb
push
jge
js
jne
outsl
sub
vandnpd
cmp
xchg
movsb
push
push
fstps
xor
xchg
imul
or
or
add
xchg
jbe
push
mull
push
data16
test
pop
cli
stos
adc
pop
mov
out
push
dec
sub
loope
sub
cld
fnstsw
jle
xchg
cmp
lahf
stc
inc
mov
fisttpl
sub
mov
mov
mov
xchg
sbbb
xor
xor
sahf
jne
fnsave
popf
js
icebp
and
adc
mov
xor
xor
call
lods
sub
int
xchg
pusha
andb
adc
cld
pop
cmpsl
xchg
cmpb
cli
jns
imul
pushf
push
cld
jmp
add
mov
sti
mov
psubsb
ds
outsl
cmp
xor
jo
lcall
repz
inc
icebp
mov
push
lods
pop
mov
inc
mov
mov
mov
nop
fidivs
pop
bound
xor
test
ret
in
bnd
les
shlb
inc
adc
cli
mov
aam
idivl
cmp
roll
dec
iret
aas
fcompl
pop
cld
mov
push
jno
stc
lret
xor
xchg
enter
inc
lahf
adc
shl
fdivrl
or
movntps
out
fs
add
mov
ljmp
rcrb
adc
hlt
add
xchg
movsl
sbb
cmp
xor
xlat
cltd
inc
jmp
adc
ss
add
push
xor
lret
jecxz
mov
into
cltd
sbb
jmp
cmp
popf
or
fs
loop
rol
cmc
std
cltd
add
fs
rcll
out
inc
sbb
jge
fiaddl
xchg
mov
fdivrs
notl
xor
fwait
mov
add
push
xor
add
stos
push
in
cmp
mull
mov
aad
loope
add
inc
inc
cmpsl
adc
mov
popf
icebp
fcomi
js
xor
xchg
insb
adc
inc
add
pxor
pop
sbb
pop
mov
xor
out
cli
mov
push
xor
pop
sub
sbb
xchg
shlb
add
xor
dec
dec
ljmp
fbstp
fwait
sub
daa
test
imul
or
adc
inc
jne
ds
lret
push
mov
movsb
loopne
mov
sbb
sub
es
test
sbb
adc
mov
test
jmp
sub
mov
cs
das
in
imul
fcoml
fstpl
mov
repnz
ja
add
ret
inc
or
adc
inc
and
mov
roll
cmp
inc
jae
lea
dec
cwtl
int3
hlt
xor
aam
pop
xor
mov
stos
mov
out
call
xchg
inc
shlb
pop
pop
hlt
sbbb
cs
repz
xor
dec
pop
es
pop
testl
inc
data16
lods
xor
pop
adc
test
pop
adc
inc
filds
cld
fstpt
and
call
jae
aaa
lods
sahf
mov
or
shl
and
popa
adc
leave
clc
mov
and
lea
xor
iret
lods
loop
pushf
xor
aam
repz
sub
mov
loope
xor
dec
out
lods
repz
xor
loopne
dec
call
or
cltd
mov
fstpt
dec
pop
in
subb
and
loop
test
aad
push
pop
rcll
or
test
mov
xor
add
fisttpl
int3
dec
hlt
lds
sbb
shr
scas
push
sarb
fidivrs
pop
sub
xor
jae
out
std
imul
push
xchg
test
mov
sbb
stos
sbb
mov
sbb
xchg
xchg
sbb
lods
mov
enter
sbb
lret
fisttpll
xchg
stos
lahf
pop
gs
push
cmc
and
xor
loope
and
in
jns
sbb
adc
lea
scas
popf
nop
push
int3
int3
push
xchg
mov
int
pop
movb
sub
mov
push
popa
icebp
mov
int3
dec
pop
sub
lods
std
sbb
out
sarl
push
out
push
ror
repz
adc
cmp
insb
or
or
xchg
fadd
lods
je
out
in
xlat
xor
daa
push
cmp
sbb
inc
jmp
lcall
add
adc
xchg
push
loopne
mov
in
pop
adc
mov
or
jle
mov
mov
mov
inc
mov
lods
rolb
ljmp
jne
lret
mov
dec
repnz
rcrl
dec
mov
aam
pop
dec
test
xorl
outsb
pusha
aaa
sbb
xor
movl
inc
add
pop
mov
test
xor
push
mov
mov
pop
and
js
sbb
and
fimull
jnp
bound
stc
ror
mov
dec
add
cmp
inc
shl
sub
dec
cmpsl
clc
mov
sbb
jo
pushl
adc
bound
das
jecxz
and
out
mov
repnz
inc
adc
ja
xchg
pop
add
inc
mov
mov
adc
and
into
bound
lret
mov
ljmp
popl
mov
mov
jg
addl
loopne
loop
dec
cmp
test
mov
mov
rcrl
mov
dec
mov
adc
push
cmp
xchg
jo
push
mov
xor
test
fs
push
pushf
subb
dec
enter
scas
aaa
jmp
push
and
pop
lcall
out
push
inc
xchg
nop
mov
fcmovnb
push
and
jle
stos
nop
adc
js
movsb
jbe
subb
outsb
arpl
popf
mov
pop
sbb
js
jge
dec
out
icebp
and
dec
xor
arpl
popa
mov
lahf
cld
mov
lret
sbb
mov
cs
inc
aam
mov
sub
js
xchg
ds
or
push
push
xchg
xor
sbbb
pop
jae
push
adc
push
push
xor
imul
push
pop
sub
pop
mov
pop
int3
sbb
sub
mov
inc
cmp
sub
push
nop
out
jle
or
jb
pop
mov
xchg
ja
loope
test
mov
enter
mov
pop
cmp
xor
lea
sub
stos
cmp
insl
xor
inc
mov
pop
fimull
xchg
jo
pop
adc
xor
adc
out
lahf
inc
mov
xor
xchg
test
push
sub
out
jne
out
sub
fisttps
stos
mov
insl
mov
cmp
jns
inc
mov
insl
cld
mov
add
adc
addr16
test
cld
inc
cld
mov
bound
in
shrl
out
shlb
pop
xchg
aad
rcrb
stc
out
adc
or
push
gs
pop
mov
push
fcomps
cltd
mov
xor
sub
dec
inc
jmp
rclb
pop
sub
pop
rcll
ret
xchg
insb
mov
shl
mov
inc
call
int
sbb
mov
inc
shll
xor
jno
mov
inc
cmpsb
sub
pop
dec
pop
pop
sarb
pop
jae
adc
jecxz
pusha
push
and
add
je
stc
xor
add
popa
inc
adc
inc
mul
add
adc
pop
sub
cmpsb
pop
ret
jle
or
push
arpl
push
and
out
cld
stos
std
adc
sub
orl
in
pop
cmp
jb
fbstp
ja
arpl
jne
push
jecxz
out
cld
inc
lahf
outsb
lcall
addr16
dec
inc
pusha
jge
adc
sbb
std
jbe
pop
je
popf
mov
hlt
sbb
mov
movsl
outsl
enter
ss
pop
cmc
jbe
icebp
shll
mov
dec
mov
and
add
mov
hlt
inc
add
imul
rcr
mov
cmp
sub
mov
movsl
and
std
and
ret
movsb
jae
aaa
sbb
xchg
mov
dec
sbb
enter
push
cmpsb
out
ds
xor
push
sbb
mov
orb
or
adc
and
push
jecxz
rol
jbe
cmpsl
cwtl
adc
insl
aaa
sub
jbe
inc
adc
test
cvtdq2ps
outsb
or
push
mov
gs
out
mov
inc
add
jno
cmp
aas
insl
mov
mov
lock
adc
xor
ret
or
xchg
stos
add
cmp
lahf
sbb
daa
xchg
sbb
xchg
outsl
mov
sub
mov
lea
sub
ss
jo
xchg
in
jle
sub
pop
leave
mov
jmp
lock
cld
pop
adc
or
inc
adc
aas
fldenv
fists
iret
aaa
dec
stos
enter
data16
popf
mov
fadds
iret
push
movsb
sahf
adc
add
aas
lret
lock
and
push
addr16
fbstp
shlb
pop
or
popa
push
push
pusha
nop
loopne
xor
xchg
test
mov
cmc
push
fistpll
scas
std
fadd
fsub
dec
test
sahf
lret
adc
out
adc
xorl
push
cwtl
jae
push
and
adc
lahf
fcmovbe
xchg
out
bound
mov
add
or
adc
mov
lret
add
int
xchg
fxch
jns
in
lock
inc
push
aam
scas
pop
sub
jns
cld
push
fisttpl
in
arpl
mov
sub
mov
imul
es
rorb
xor
in
loop
stos
cmpsl
mov
pop
pusha
jmp
pusha
ret
mov
fwait
js
sarb
ja
or
mov
int
add
add
xorb
adc
mov
and
je
outsb
imul
mov
xchg
adc
sbb
ljmp
insb
dec
pop
cmpsb
sub
adc
mov
adc
sub
pop
mov
subl
mov
or
adc
lods
pop
push
mov
lock
dec
jo
int3
shl
push
or
stc
mov
leave
lret
cmp
mov
sub
jp
jmp
test
inc
fstp
test
lahf
xchg
push
sti
aad
pop
xorl
repnz
mov
repnz
push
stc
cmp
in
cld
sets
sbb
pop
push
rcll
fisttpl
test
jne
repnz
mov
jecxz
mov
in
sub
and
mov
daa
insb
xorl
jecxz
pop
daa
pop
adc
xchg
sbb
jb
mov
jl
outsl
ds
sub
orb
loop
test
dec
aad
fiaddl
mov
inc
out
test
pop
imul
ficompl
mov
cmp
subb
adc
stos
rcll
xchg
fcoml
mov
adc
mulb
cmp
dec
mov
dec
shll
rcrb
daa
xchg
imul
mov
lea
cmp
out
sbb
jo
test
imul
adc
mov
mov
ret
enter
mov
or
dec
jecxz
idiv
clc
ss
rclb
and
xchg
lods
dec
xchg
cmp
inc
jle
pop
fdivr
les
mov
pop
mov
out
pop
adc
inc
sub
outsb
sub
enter
jne
push
pop
push
cmp
ret
and
popa
xchg
dec
push
push
xchg
fistps
out
xchg
dec
add
stc
jecxz
lods
push
and
dec
imul
pop
out
daa
inc
movsl
scas
inc
je
pop
mov
das
test
enter
cld
pushf
mov
insb
mov
lea
clc
jle
cmp
inc
popa
popf
xchg
mov
jge
clc
sub
and
leave
push
bound
shrl
sub
or
es
shrl
xor
ret
andb
jecxz
lret
sbb
loope,pt
pop
xchg
jae
outsl
mov
cwtl
ds
push
sbb
icebp
push
cltd
xchg
cmp
popa
sbb
iret
xor
cmpl
outsl
jns
movsb
lret
mov
shrb
add
inc
outsl
xchg
das
inc
mov
scas
jecxz
in
scas
pop
mov
int3
test
insl
ds
jge
sbb
inc
pop
call
call
mov
sub
aas
pop
pushf
stc
pop
dec
or
mov
int
inc
loopne
mov
pop
mov
in
daa
fnsave
rorb
lret
jb
not
flds
enter
je
pop
sbb
dec
add
and
loop
jl
sbb
in
adc
mov
cmp
movb
xchg
push
popf
inc
testl
jle
repnz
xlat
addr16
or
mov
or
fidivs
mov
in
sbb
inc
aam
push
loope
xchg
cmc
test
ss
rcrl
push
cs
shl
mov
ret
ret
js
jno
jge
or
cltd
fiadds
xor
mov
popf
jbe
roll
push
push
cmp
aad
sbb
addr16
jbe
movsb
fnstenv
sbb
jle
lcall
cld
or
xor
popa
xor
jae
mov
cli
mov
negb
mov
inc
hlt
inc
loope
std
push
jae,pn
rcrb
mov
mov
mov
mov
jo
dec
insb
scas
mov
sbb
sti
adc
insl
ja
sub
icebp
pop
pop
clc
mov
test
jmp
cmpsl
pop
lea
jmp
inc
pusha
add
adc
test
in
adc
popf
flds
adcl
cmp
or
adcb
push
or
adc
adc
fsubs
clc
rcll
bound
add
jnp
aad
into
jle
test
mov
cmc
shl
mov
push
dec
enter
fsubr
inc
je
imul
call
jae
pop
cmp
pop
daa
and
movsb
xor
add
add
mull
data16
push
push
xchg
int
stos
clc
xor
sub
fdivrl
and
and
cmp
test
fnstcw
mov
jg
daa
out
push
jge
xchg
outsb
rep
out
sbb
mov
or
add
popf
push
stc
jo
fsubl
das
out
outsl
gs
inc
adc
lds
fsubs
push
xlat
add
out
xchg
mov
mov
and
or
jge
rcrl
into
insl
xchg
cmp
les
mov
mov
fwait
xor
and
test
lods
pop
mov
lea
enter
call
push
mov
push
fnstcw
mov
frstor
inc
mov
movsb
adc
pop
repz
stos
loop
sar
mov
jp
outsl
leave
hlt
fucomip
lock
add
cmpb
movsb
xor
out
rcrl
push
mov
cmp
test
push
shll
ret
sub
lods
mov
cmp
inc
mov
insl
pop
push
add
mov
jg
adc
push
cs
test
dec
loopne
mov
stos
iret
je
mov
mov
jnp
clc
adc
mov
xchg
or
sbb
int
mov
rcll
icebp
or
xchg
jne
xchg
add
aas
mov
pop
cmp
aas
out
cmp
sub
sbb
addr16
inc
lahf
xchg
xor
mov
cld
sbb
add
icebp
pop
scas
mov
xchg
ds
jns
iret
lods
out
imul
jno
dec
sub
jmp
data16
cmp
xchg
mov
sub
into
xchg
icebp
jl
sbb
stc
pop
inc
cmc
fs
push
sub
pop
push
ret
call
sub
out
jg
rolb
sub
aas
movsb
sub
pop
les
test
jns
sbb
fnstsw
cmp
sbb
adc
imul
sbb
adc
je
mov
mov
mov
ss
push
pop
insl
or
ss
jmp
mov
iret
jg
xor
sbb
or
mov
lds
test
add
pop
jmp
popa
aas
and
loop
into
popf
in
xor
sub
push
sbb
in
pop
mov
xor
inc
push
sahf
decb
mov
bound
ficoml
decb
pusha
repnz
jle
enter
loop
sub
shll
in
ror
scas
dec
iret
ret
lret
push
incb
insb
cmp
dec
aad
hlt
sub
jae
xor
xor
push
push
fimuls
insl
or
rolb
mov
dec
das
loope
push
xor
pop
aam
addr16
push
sub
das
jl
jne
push
fnsave
es
inc
pop
sub
icebp
xor
loope
pop
stos
adc
add
mov
and
push
sbb
fstpt
lods
inc
cli
xchg
incl
xor
push
mov
imul
push
mov
sbb
hlt
mov
mov
xchg
out
xchg
out
ds
in
or
push
cmp
sub
sbb
mov
mov
popf
pop
mov
mov
movsb
ret
jo
lahf
enter
shlb
dec
sub
pop
adc
sbb
hlt
fwait
int
sti
xchg
mov
icebp
push
cmp
test
nop
add
pusha
lcall
xor
mov
clc
fisubrl
xor
xchg
xchg
lods
pop
rcll
lea
sbb
xchg
sub
stc
test
clc
xchg
ret
xor
jb
pop
arpl
sbb
das
jle
inc
push
into
push
pop
dec
gs
dec
in
jae
cmc
push
mov
xor
xchg
sub
jnp
push
push
in
jle
imul
out
xor
repnz
pop
xor
mov
ret
dec
sub
sbb
cmp
inc
aas
out
sub
add
push
sbb
mov
xor
xchg
mov
popf
lret
sti
and
rorl
sub
test
xchg
push
add
mov
push
sbb
inc
pop
movsb
push
dec
sub
jne
test
in
cmc
les
lret
insl
inc
inc
cmc
pop
add
cwtl
adc
push
ret
inc
fisttpl
xor
jmp
mov
adc
iret
clc
scas
subb
mov
in
pop
enter
mov
mov
test
daa
mov
adc
and
mov
and
fisubs
iret
mov
mov
std
imul
mov
cmp
xorb
mov
cmpsl
inc
add
add
mov
cmpsl
and
pusha
clc
popa
and
sbb
push
sahf
dec
or
hlt
push
sbb
sbb
dec
mov
lea
repnz
ret
push
push
or
jne
or
xchg
fistl
mov
inc
hlt
filds
fimuls
inc
les
xor
ret
ljmp
dec
icebp
mov
hlt
dec
mov
mov
scas
mov
jbe
xlat
stos
cwtl
pop
xor
push
andb
fcomi
mov
mov
push
push
aam
dec
scas
ret
fidivs
jg
inc
jnp
cmp
mov
rorl
popa
xchg
leave
pop
adc
cmp
rclb
mov
inc
mov
mov
bound
and
cmpsl
movsl
mov
scas
pushf
jecxz
mov
fiadds
nop
out
or
iret
shr
pop
popf
and
xor
loope
xchg
negb
push
imul
jp
push
fiaddl
and
lods
popf
xor
sbb
daa
lods
icebp
xchg
adc
fwait
mov
mov
pop
ret
xor
pop
jge
popf
push
ds
mov
loope
add
inc
andl
add
popa
or
das
cmc
add
pop
cmpsb
pop
inc
popf
adc
and
ljmp
ss
outsb
jg
mov
mov
xchg
sub
hlt
cmp
xchg
add
inc
and
push
fistpll
pop
out
scas
fdivr
adc
xor
push
inc
sbb
into
dec
push
popf
cwtl
mov
out
test
jbe
inc
or
mov
out
xchg
ret
or
dec
in
pop
loopne
aas
add
mov
notl
or
or
cmc
pop
add
push
mov
stos
rclb
xor
insb
jno
cmp
jo
adc
imul
out
or
mov
sbb
mov
jae
sub
or
lret
push
cmp
adc
mov
in
sbb
push
lahf
loop
and
push
cmpl
and
mov
inc
cmp
inc
xchg
or
lea
jecxz
mov
or
adc
or
add
push
loopne
push
cmpsb
sahf
xchg
xor
aaa
or
sbb
daa
add
xlat
mov
push
std
mov
sub
sar
push
adc
sub
leave
dec
add
dec
pop
adc
push
dec
fsubl
inc
pusha
addr16
sarl
xchg
out
cwtl
inc
jno
das
xchg
dec
lock
pop
iret
lods
adc
jl
int3
mov
mov
xchg
and
pop
fdivr
cmp
mov
mov
and
add
cwtl
in
int3
jl
ds
sub
aad
push
mov
mov
ret
sti
sub
aaa
jg
inc
push
xor
mov
imul
bound
fistpl
and
ja
repz
xor
movb
mov
testl
push
xor
mov
insb
pop
dec
in
mov
mov
sbb
faddl
cld
roll
pop
test
ret
mov
fldt
ret
inc
dec
mov
push
rcr
xorl
pop
mov
jle
cmp
lods
dec
mov
outsb
bound
mov
or
sti
inc
insb
and
lcall
inc
test
into
mov
pop
iret
inc
mov
pop
pop
fiadds
sbb
sbb
push
jo
in
stos
or
sbb
jns
inc
jo
loopne
push
add
lahf
insl
movsl
add
lret
daa
sbb
dec
mov
or
xor
mov
push
mov
iret
sarl
dec
int
xlat
fwait
insb
dec
mov
xorl
jo
repnz
mov
mov
or
mov
push
loopne
fidivrs
cmp
addl
in
shrl
sbb
inc
jae
in
and
mul
in
jns
pop
fisubrs
adc
push
cltd
push
xor
nop
cmp
and
call
imul
dec
xor
lcall
adc
pop
leave
mov
add
dec
mov
dec
add
je
mov
pop
clc
push
nop
add
je
iret
lahf
adc
jnp
mov
cmp
repnz
je
lahf
out
and
mov
mov
mov
fmull
in
inc
popf
jbe
fmuls
ficompl
cmp
popa
nop
mov
popa
clc
sahf
cltd
sarb
lods
je
into
pop
jle
cmp
push
fsubrs
adc
sub
dec
mov
movb
clc
scas
xchg
movsb
push
stos
mov
js
f2xm1
rclb
cmp
ret
dec
cs
les
bound
jns
out
iret
daa
pop
and
int3
lcall
jbe
xor
jl
push
fldl
cmp
cmpsl
cmp
dec
fisubrl
sub
jg
cld
mov
enter
int3
movsb
fcmovne
dec
cs
sbb
add
cs
adc
jge
jne
loope
sub
test
inc
adc
cmpb
arpl
jecxz
mov
into
cli
sub
adc
sub
stos
sti
cmp
cwtl
dec
cmc
inc
cmp
sbb
cld
data16
dec
in
pop
xchg
in
push
in
pop
pop
inc
pop
insl
inc
adc
popa
jnp
or
cmc
jmp
push
xchg
mov
mov
xchg
std
and
jnp
jge
test
shll
xchg
jno
shll
daa
jp
jb
ljmp
pop
dec
idiv
sub
shll
shr
fiaddl
popf
adc
add
mov
hlt
cmpsl
clc
in
mov
lock
or
iret
pop
int3
dec
mov
adc
cld
pop
sbb
and
push
sub
unpcklps
stos
mov
xchg
jbe
les
aaa
xchg
xor
jecxz
pop
sbb
stc
xchg
jg
aaa
mov
jne
in
cmp
xchg
xchg
pop
loope
into
loope
test
xlat
inc
enter
push
stc
jge
imul
cld
sbb
mov
or
into
add
mov
add
jg
out
push
das
sub
dec
sahf
dec
scas
insb
pop
mov
testl
loopne
lahf
add
dec
sub
jl
inc
inc
fidivs
cmc
imul
jns,pn
pop
add
sti
pushf
loopne,pt
ss
sahf
xchg
inc
dec
in
fdivl
cmp
mov
xchg
loopne
mov
xor
loopne
fmuls
test
push
and
sub
sub
jne
dec
jmp
mov
adc
push
js
push
mov
jns
into
cmc
sub
or
cltd
out
mov
jbe
push
jmp
movsl
orb
inc
gs
add
pusha
mov
pop
fwait
sbb
jae
dec
notl
mov
fists
push
aad
adc
mov
xor
js
sbb
incb
loopne
loopne
adcb
addr16
xchg
out
xor
inc
sbb
xor
das
sub
sbb
cmpsl
in
push
aas
or
enter
mov
adc
fidivs
cs
aam
dec
mov
js
cwtl
insb
push
fimuls
enter
add
pop
mov
cmp
xchg
cmp
int
push
xor
push
addr16
iret
divb
adc
mov
push
xor
clc
je
jmp
out
jp
xor
cli
jo
cmp
dec
stos
add
push
jo
mov
stos
insb
xchg
push
fisubrl
jmp
bound
addr16
jbe
popa
lahf
pop
jg
pop
jecxz
mov
and
ljmp
mov
out
pop
pop
iret
or
seta
repnz
mov
push
dec
jmp
xchg
repz
mulb
fs
loop
stos
and
stos
bound
pusha
aad
loope
mov
add
es
dec
adc
sti
adc
aam
jb
fmul
stos
aas
sbb
ret
das
imul
cwtl
mov
add
fisubl
lret
push
jae
fisttps
xor
jmp
test
inc
add
sub
fucom
jg
push
rorb
mov
dec
xor
int3
enter
pop
cmc
test
imul
xchg
add
cltd
push
iret
sub
add
lahf
cmpsb
fiaddl
fiadds
adc
test
lcall
cmpsb
sbb
mov
push
sbb
sub
push
ds
mov
push
pop
in
and
jnp
push
fiadds
inc
pushl
cmpb
aas
ja
adc
in
rcll
cmp
jmp
pop
jmp
arpl
icebp
lcall
insb
int3
iret
xchg
adc
jbe
loope
lea
js
leave
xor
xlat
xchg
rcl
in
pop
mov
aad
jmp
add
sbb
jne
jo
test
xor
js
lcall
push
std
fadd
mov
fldl
and
dec
addr16
inc
and
and
pop
sahf
xchg
iret
pop
sti
sub
mov
mov
cmp
adc
push
push
sub
xchg
mov
das
adc
cmpsl
cmc
je
stos
push
outsb
mov
mov
lods
pushf
pop
add
or
and
mov
lahf
fstl
xor
test
fmul
call
adc
aaa
sub
lock
sbb
mov
sbb
cs
cwtl
mov
inc
out
jecxz
into
enter
sbb
call
dec
add
std
mov
les
pop
xorb
jmp
mov
sbb
imull
and
ds
idivb
sub
mov
movsb
mov
mov
dec
pop
neg
ret
jo
cld
dec
lock
outsb
in
dec
cmpsl
ficoms
aad
push
mov
les
shr
xchg
clc
std
sbb
push
cmp
cmpsl
mov
xor
push
out
fdivrl
xor
cli
dec
hlt
push
mov
lods
aaa
push
shl
or
dec
and
dec
cltd
test
into
inc
and
push
and
hlt
jmp
cmp
lods
adc
cmpsb
add
inc
std
fiaddl
pop
mov
inc
loope
mov
aam
mov
into
sub
andb
lock
cmp
sub
jecxz
cmp
sub
adc
cltd
addb
jle
popa
push
xchg
ret
mov
js
push
mov
loop
add
inc
xchg
dec
fstpl
outsl
outsl
dec
mov
cwtl
loopne
jae
xchg
into
test
imul
lods
insl
test
jg
sahf
sub
jge
das
sub
iret
stos
fsubr
imulb
xchg
fsubr
and
in
jle
insb
and
jg
pop
and
sti
inc
stos
jno
pop
push
inc
scas
adc
xchg
rcr
push
push
loopne
shr
sbb
aaa
fs
fisttps
pop
jnp
fdivrl
and
cmp
cmp
mov
rclb
in
fdivl
loopne
out
ja
push
push
out
jno
sbb
mov
ret
in
icebp
push
insl
and
dec
hlt
jb
dec
add
mov
rcrl
push
push
ja
add
test
lods
dec
jbe
lods
mov
mov
pop
jno
mov
jle
add
cmpsl
mov
nop
daa
inc
adc
out
mov
ja
outsb
cmp
sub
pushl
decl
mov
mov
xchg
or
mov
test
sub
xchg
call
jo
les
in
pushf
jmp
mov
or
cli
iret
movsl
lcall
lret
cmp
popl
push
aad
dec
dec
push
add
out
add
sub
arpl
jmp
jb
popf
fisubs
adc
inc
jb
cmpsl
add
int
lahf
pop
xor
aas
lret
bound
movsb
insb
ljmp
rorb
gs
pop
mov
adc
or
fs
cli
sbb
rcrb
mov
cmp
push
jmp
stos
loop
iret
jg
repz
je
gs
lock
inc
mov
lcall
jle
cld
out
pop
pop
mov
adc
jno
mov
icebp
add
pop
fcoms
in
dec
test
cwtl
dec
add
jmp
insl
xlat
cmp
scas
les
add
mov
inc
gs
inc
out
push
iret
sub
xor
je
add
popf
insl
mov
adc
hlt
in
and
jecxz
scas
movq
cmpsl
mov
adc
aam
int3
xchg
sarb
xchg
aad
jle
clc
test
and
jmp
out
into
adc
sbb
jne
mov
xcrypt-cfb
cmpsl
es
or
cmp
xchg
sub
in
or
sti
in
mov
sbb
pop
sahf
lods
rorl
push
fisttps
adc
cmp
lahf
mov
cmp
nop
xor
leave
ficoml
push
mov
sti
lock
push
aaa
mov
fs
dec
in
xor
shlb
add
addr16
adc
test
loop
jns
iret
and
loopne
mov
sbb
scas
sbb
sbbb
sti
or
adc
adc
cmp
aaa
enter
push
out
les
mov
and
push
in
dec
inc
mov
fnstsw
sbb
imul
mov
dec
int
ret
mov
jmp
js
or
pop
xorl
lahf
add
cmp
xchg
stos
gs
dec
cli
shlb
cmpsb
xchg
push
add
add
mov
stos
sbb
sub
out
ret
dec
cmp
test
lret
mov
pop
sub
lret
or
cs
outsl
js
xchg
movsl
jb
add
call
stos
sub
cltd
fildl
jg
pop
lret
push
out
pop
out
and
cs
cmp
jae
adc
js
lret
mov
lods
and
cmp
lea
call
xchg
mov
cmp
cmp
jb
mov
and
sbb
test
f2xm1
pop
pop
mov
mov
sarl
add
and
adc
xorb
in
loop
ss
dec
call
imul
or
dec
adc
jb
adc
add
movsb
xor
mov
xchg
fs
jmp
push
and
adc
pop
lret
int3
xchg
jle
aad
and
mov
mov
cwtl
cmp
test
xchg
stos
mov
mov
jnp
ljmp
pushf
push
mov
xor
das
xchg
adc
rcl
repnz
xor
bound
mov
popa
xchg
mov
inc
mov
cmpsb
or
fsub
jp
shlb
dec
cli
xor
aas
neg
outsl
cmc
adcl
pop
add
sbb
cmpsb
stc
add
pop
jp
mov
mov
mov
cld
fwait
js,pt
stos
int
shlb
xchg
jmp
in
pop
lods
lret
out
insb
pop
pop
lea
jo
js
setno
popa
dec
adc
xchg
or
rorl
push
push
arpl
sub
cltd
mov
mov
paddd
sub
inc
mov
leave
fcmovnbe
jne
dec
scas
or
sahf
in
test
sbb
push
and
daa
insb
dec
ret
and
cmc
mov
mov
xchg
pop
lahf
fiadds
mov
cmp
xor
pop
xor
adc
daa
idivb
popf
xor
and
ror
sub
scas
pusha
add
push
cwtl
je
ret
aaa
sub
scas
sbb
vpcmpeqb
mov
mov
roll
mov
sbb
mov
push
arpl
pop
pop
sub
pop
out
fisubrl
push
mov
popa
sbb
insb
mov
adc
mov
add
pop
mov
cmp
scas
bound
sarb
dec
pop
rcll
nop
lahf
int3
push
mov
inc
in
fdivs
push
jg
rcrb
cmp
dec
and
aam
adc
add
inc
daa
inc
test
dec
mov
test
mov
jp
pop
pop
shl
xchg
jb
lds
sbb
jp
fadd
sub
ss
rclb
cmp
int
lahf
cmpb
inc
push
sub
cmc
inc
sbb
mov
add
pop
mov
aaa
sub
test
mov
rcrb
lds
mov
aam
cli
dec
pusha
ljmp
icebp
xchg
and
andl
aam
adc
jge
push
nop
or
dec
jp
xchg
mov
sub
sbb
icebp
popl
ds
in
and
lcall
mov
je
subb
and
jecxz
sbb
repz
lods
inc
int
push
fsts
stc
pop
stc
mov
mov
mov
xchg
mov
jmp
pop
addr16
adc
iret
adc
lods
jg
jnp
mov
aam
outsb
iret
lea
outsl
push
imulb
inc
out
shlb
add
jno
jmp
pop
ret
dec
loop
cmp
les
dec
cmp
pop
sub
adc
xchg
jge
xor
subb
xchg
pop
xchg
int
lahf
sbb
sbb
xchg
popf
xor
add
imull
fildll
mov
add
sahf
sub
int
xor
xchg
xchg
xchg
fidivl
inc
sub
je
adc
cwtl
imull
cwtl
or
shll
mov
jne
jns
sarl
pop
call
mov
xchg
cmp
imul
int
fs
push
sbb
stos
sarl
aam
mov
inc
test
addr16
xchg
push
imull
mov
push
pusha
ds
popa
jae
es
mov
cmp
pop
jae
mov
not
or
movl
lock
xor
ljmp
cmp
mov
fiaddl
xchg
xchg
fmull
mov
jmp
jb
sarl
sub
lods
call
xorb
pop
cmp
hlt
cmp
enter
xor
inc
mov
addl
adc
inc
xor
lods
cmpsb
xchg
in
ud0
insb
rorb
pop
out
add
rcrb
std
mov
enter
inc
push
out
dec
lcall
scas
dec
xchg
int
std
sbb
inc
sub
and
push
jge
xor
sahf
xor
xchg
repz
sbb
aad
mov
pop
int3
iret
push
cmp
jmp
or
lea
shr
sti
ss
jb
add
add
sahf
and
jno
leave
push
aaa
pop
sub
repz
sub
aam
adc
pusha
adc
leave
mov
cwtl
aaa
cmpb
lret
icebp
pop
push
movsl
jmp
call
out
and
dec
mov
sub
in
lock
sbb
mov
fstl
cwtl
add
xor
xchg
jb
in
pop
mov
ss
jns
mov
test
xchg
dec
inc
pushf
cmpsb
sbb
pop
rcrl
stc
in
lock
jmp
push
pushf
cmp
incb
xchg
xor
jg
sub
mov
add
out
stos
jle
push
add
bound
sub
xor
xor
sub
push
sbb
and
repnz
mov
push
out
pop
dec
iret
in
add
data16
stos
adc
mov
push
aas
adc
lret
hlt
rol
and
rol
movsl
adc
mov
dec
jmp
cmp
inc
pop
popf
mov
aam
int
imul
mov
mov
jns
xlat
mov
das
adc
jnp
adc
enter
mov
cld
adc
mov
or
sbb
inc
cli
sbb
or
dec
xor
les
sbb
ja
xorl
adc
fwait
dec
mov
jb
js
lcall
cmp
sbb
cli
fcmovbe
sub
sbb
mov
dec
mov
jb
shl
imul
push
adc
pop
aad
mov
in
mov
fwait
daa
xor
cmpb
popa
push
andl
enter
jle
lock
jne
cltd
push
outsb
jl
in
adc
outsl
sbb
sbb
jno
mov
push
sbb
repnz
outsb
aas
cmpsb
adc
and
sbb
outsb
mov
test
dec
repz
xchg
lcall
adc
push
mov
je
dec
mov
xor
je
inc
xchg
jle
repnz
adc
jno
and
pusha
sbb
insl
int3
push
loop
cwtl
jp
jb
sti
aad
xlat
lret
test
daa
aam
xchg
add
or
pop
mov
mov
add
outsb
mov
rcrl
test
xchg
bound
inc
sub
jmp
cwtl
cmp
dec
xorb
negb
cmc
push
xchg
jg
fwait
jmp
je
mov
shlb
mov
xchg
and
dec
mov
sub
push
add
xchg
xchg
mov
ret
pop
outsb
test
imul
aad
addb
jmp
gs
repnz
into
jno
add
push
or
or
mov
les
adc
push
and
clc
push
lock
mov
addl
fnstsw
cmp
shlb
out
cwtl
ret
stc
adcb
stos
movsl
stc
out
mov
insb
push
sti
shl
cmpsb
dec
movsb
pop
xchg
sbb
dec
hlt
sub
sbb
test
cmp
mov
adc
int3
xchg
add
shrb
pop
pop
inc
fsubp
xchg
add
jne
leave
sbb
leave
pop
repz
divb
stos
jg
cld
fidivrl
adc
or
inc
sub
faddl
cmp
popf
and
mov
dec
push
mov
popa
sbb
fcomps
ret
cmpsl
lods
and
lods
imul
jbe
addr16
rcrb
into
push
in
push
repnz
cmp
sbb
cmp
sbb
cmp
aaa
cltd
mov
clc
pop
mov
sub
lret
and
fldcw
data16
sub
sarl
into
xor
jge
test
ffreep
loope
clc
mov
andb
arpl
pop
int3
dec
insb
ss
ds
iret
call
in
sbb
movsl
pop
jae
call
mov
cmp
outsl
out
lret
cmp
inc
mov
jp
cmp
inc
aas
into
add
addl
adcl
iret
pop
adc
fs
scas
inc
pop
hlt
pop
jno
xchg
dec
outsb
enter
xchg
push
xor
and
pop
push
mov
xor
das
jne
push
xchg
jecxz
sub
xor
push
jns
xor
fnstenv
xor
bound
js
ficoml
xchg
lcall
sahf
fidivl
mov
mov
jno
mov
inc
mov
movsl
repz
mov
stc
cmp
pop
xchg
adc
mov
imul
adc
sub
pop
stc
mov
dec
xchg
pop
xor
pop
or
movsb
push
mov
ljmp
cmpsb
out
push
cmp
pop
cmp
in
mov
xchg
sub
jbe
cli
pop
cmp
and
test
mov
sahf
out
cmp
mov
pop
das
fisttpl
push
dec
inc
mov
pushf
cmp
jnp
or
push
and
js
or
mov
sar
addl
xchg
or
addb
sbb
mov
into
sbb
nop
xchg
push
add
sub
inc
addl
stos
xchg
pop
xor
fnsave
push
jne
xchg
orl
adc
test
cmpsl
jp
fstps
pop
ror
test
dec
fistps
and
jmp
daa
data16
test
adc
mov
jbe
mov
or
push
mov
call
push
push
testl
fcomps
fmul
cld
mov
dec
sbb
xchg
dec
pop
add
jno
fwait
or
add
xchg
push
arpl
sti
push
push
enter
xchg
mov
int
cmp
mov
cmpsb
outsb
outsb
push
jno
jno
sbb
push
fisubrs
insl
les
enter
mov
mov
jb
push
mov
nop
cli
in
mov
push
nop
sbb
loop
inc
mov
repz
sbbb
pushf
xchg
ljmp
fnstcw
xchg
fwait
jo
mov
push
mov
xchg
and
mov
pop
call
or
and
rcrl
push
xor
sub
jno
or
mov
imul
je
in
push
jbe
and
sbb
or
xchg
sbb
push
pop
xchg
and
cs
pop
dec
pop
push
loop
add
sbb
and
jge
push
in
pop
jp
out
test
in
loope
adc
pushf
ds
dec
fidivrl
mov
mov
sbb
shrb
pop
sbb
out
and
jge
adc
iret
in
popf
adc
out
mov
jmp
fbstp
popa
xlat
pop
out
dec
in
test
or
out
push
test
adc
shlb
jmp
loop
sbb
jl
out
jns
mov
test
maskmovq
imull
sbb
xor
in
sbb
ffree
mov
lods
fs
cmp
push
testl
sahf
mov
stc
filds
insl
leave
pop
pusha
xor
fstpl
push
xchg
sarl
aam
rcl
aas
lds
jnp
pop
push
jp
testl
xchg
das
in
cli
mov
pop
es
ret
pop
ret
out
push
dec
mov
xchg
pop
lods
fbld
mov
adc
dec
mov
jne
shlb
mov
iret
mov
std
sbb
sub
in
xor
addl
inc
jp
sbb
sub
pop
mov
jbe
outsb
cmc
in
das
addb
xchg
popf
adc
push
xchg
cltd
cvtps2pd
inc
pop
jge
lcall
and
and
cmpsb
dec
xor
push
cwtl
mov
and
pop
add
mov
jno
add
cmp
push
clc
adc
inc
out
loope
and
adc
and
or
jp
xchg
dec
mov
movsb
pop
push
fbld
push
sbb
pusha
push
inc
sbb
test
dec
lea
dec
cmp
pop
nop
push
mov
inc
mov
cltd
inc
inc
into
fisttpl
ds
and
subb
xor
sub
and
and
cwtl
cli
jmp
jecxz
mov
xchg
jmp
jg
mov
hlt
xor
imul
and
push
clc
aad
push
cmp
pop
sti
pop
or
pusha
jne
adc
pushf
sbb
sub
jge
std
push
nop
and
mov
xor
cmc
sub
arpl
nop
push
shrb
incl
sarb
mov
cli
mov
nop
xor
cmp
xor
jb
sbb
repnz
leave
lods
or
jg
mov
rcll
add
outsl
scas
adcl
jecxz
das
jnp
aad
sub
sub
repz
lret
xchg
adc
jg
outsl
pop
loope
pop
arpl
ret
ret
js
cmc
test
divl
cmp
nop
dec
sub
inc
int3
pop
lock
out
inc
jg
hlt
sbb
cltd
rcrl
stos
cmpsl
dec
jl
xchg
lock
mov
scas
xchg
dec
pop
ss
call
jnp
pop
mov
bnd
ds
cmp
push
sbb
or
push
sub
dec
lret
shld
and
dec
movsb
js
mov
es
cwtl
mov
inc
dec
std
push
mov
sbb
imul
add
rorl
xor
rolb
push
hlt
mov
jp
jb
popa
jge
movsb
aad
jmp
in
lods
cmp
hlt
fidivl
or
xchg
pop
inc
push
or
lcall
xchg
ret
movsl
sub
insb
daa
adc
cmp
sbb
pop
sub
mov
punpcklbw
imul
add
rcrl
cmp
cltd
imull
inc
push
xchg
jp
xor
mov
lods
popa
pop
lret
jno
pop
sbb
dec
movsl
mov
cmp
cmp
mov
cltd
icebp
cmp
sti
adc
leave
mov
add
or
call
rorb
test
jo
rclb
arpl
lcall
mov
mov
lret
out
imul
add
jns
add
mov
push
negb
add
outsb
xchg
int3
movsb
push
test
xlat
add
mov
aam
mov
cltd
nop
lock
xor
xchg
sbb
loopne
and
add
adc
inc
in
mov
out
and
addr16
push
in
add
and
xor
fnstsw
adc
cmp
jnp
xchg
pop
mov
bound
or
stos
inc
adc
mov
sbb
and
bound
lds
out
or
adc
or
lcall
or
lahf
sbb
pcmpeqw
lcall
jge
push
fnstsw
addr16
rorb
stos
sub
adc
cwtl
lret
adc
sti
test
mov
mov
cmc
mov
push
stc
adc
sub
mov
in
ret
sub
mov
shr
imul
andb
push
mov
inc
lcall
sub
enter
std
sub
mov
mov
mov
loope
pavgw
sub
mov
push
lock
jne
xor
enter
xchg
mov
stos
pushf
je
adc
std
dec
pop
aam
sub
aad
int3
sub
add
call
jge
pop
arpl
jns
dec
sbb
cmc
stos
push
push
inc
rcrl
sbb
in
mov
dec
in
mov
in
test
cmc
xchg
leave
into
dec
pop
inc
sbb
pushf
shlb
cmp
fxtract
sti
fwait
jb
jge
int3
mov
jg
enter
into
add
in
out
push
in
divb
in
je
xchg
fldl
mov
fiaddl
gs
pop
dec
mov
inc
loope
movsl
outsb
icebp
stc
and
and
cli
cli
adc
lahf
cltd
mov
outsl
sbb
sbb
push
pop
mov
insl
sub
les
pop
cmp
xor
lds
arpl
shll
and
pop
les
insl
mov
ds
mov
int
notl
shlb
nop
cmp
ss
xchg
out
add
mov
xchg
lret
lret
xor
sahf
pop
fistpll
aas
mov
and
aas
aad
arpl
sbb
stos
test
aaa
in
mov
push
test
jae
out
xor
shr
push
shll
xor
mov
fwait
sbb
cmp
pop
adc
mov
repnz
cmpsb
xchg
lods
or
les
mov
add
xor
jo
popa
push
pusha
mov
in
inc
cmc
pop
test
jno
mov
lock
insb
subl
jo
pop
sub
es
loope
xchg
ja
bound
sbb
addr16
xchg
sub
dec
into
js
jnp
sub
hlt
fistps
pop
fwait
jecxz
je
shlb
add
lret
jbe
cmpsb
xlat
inc
int3
fmull
cmp
xor
adc
adc
or
mov
add
in
xor
cmp
test
mov
cmc
out
pop
pop
mov
cmp
ljmp
xchg
inc
into
leave
and
fdivrp
mov
iret
lock
imul
mov
mov
sub
or
fdivrl
push
sbb
mov
jl
loope
test
ficoml
outsb
int3
js
cmpsb
stos
jbe
mov
dec
or
lock
fmul
add
xor
std
jnp
add
dec
pop
adc
jp
and
repnz
dec
addr16
xor
xor
add
lods
les
lea
push
sub
xor
add
icebp
rorb
push
dec
lret
or
push
adc
push
std
mov
in
cmp
dec
frstor
aad
dec
and
mov
xchg
xchg
fdivp
pop
data16
cli
outsl
push
adc
fidivrl
jg
cli
sti
mov
sub
push
xchg
inc
lods
in
sub
cmp
das
jne
divb
sarb
or
xchg
xchg
mov
mov
lahf
mov
test
push
lahf
mov
adc
jbe
imul
cwtl
sbb
aam
test
aam
mov
xor
adc
cwtl
stc
xchg
mulb
test
les
mov
xchg
cmp
xor
add
jg
das
xlat
mov
jo
out
mov
cmp
clc
pop
push
in
mov
cmpsl
mov
jne
sti
sub
hlt
jl
aaa
jns
xchg
insl
xlat
repz
lea
fists
push
xor
out
xor
add
scas
scas
test
or
in
js
in
jno
decl
repz
or
xchg
int3
cmc
xor
mov
loope
dec
movsb
pop
cmp
mov
jl
in
hlt
inc
sti
inc
add
cmp
pushf
sub
loopne
fildll
scas
mov
call
xor
mov
cmp
jne
inc
mov
add
jmp
sub
mov
insl
pop
pushf
iret
mov
shll
sbb
pushf
cmp
test
inc
sbb
lds
cmp
test
cmc
mov
jb
add
int3
sbb
mov
dec
testl
fsubs
inc
js
jge
mov
jb
filds
ja
dec
sbbl
notl
rcll
mov
cld
xlat
adc
incl
daa
jno
and
mov
jp
je
lock
push
ds
pusha
jge
add
dec
cmp
call
push
pusha
icebp
movsb
fstpl
fdivs
shlb
xchg
orb
ljmp
pop
sub
das
scas
mov
mov
out
pop
lock
xchg
jae
lock
jae
test
fs
inc
nop
cmpsl
pop
add
mov
lds
scas
outsb
pop
xor
fwait
cmp
pop
mov
fdivl
out
ds
das
sbbb
scas
outsl
shrl
adcl
shrb
lahf
in
sub
cmp
add
mov
cld
rcr
cmpsb
adc
clc
ret
xor
fs
or
sub
push
add
jne
test
add
ret
outsb
xchg
jmp
push
fld
xor
dec
fdivrl
mov
and
jmp
add
push
cmp
sbb
cmp
jge
add
mov
sub
and
inc
mov
pop
lods
xchg
aad
or
jnp
add
fcoms
sbb
jge
out
sub
aad
jnp
pusha
push
add
sbb
xchg
sub
int
mov
push
jo
sub
adc
sti
push
and
subl
stc
mov
pop
out
leave
jl
outsl
out
lds
ds
or
ret
ljmp
pop
cs
xor
jle
cmp
in
pop
cmpl
fs
xchg
out
ljmp
lret
jmp
int
dec
cmc
inc
aad
sub
adc
inc
loopne
push
lods
jecxz
outsb
int
inc
aas
repz
dec
xor
inc
rclb
cmpl
ret
pop
imul
push
xchg
or
mov
es
imul
roll
outsl
and
mov
in
dec
ret
arpl
loopne
inc
cli
push
mov
push
dec
mov
ficompl
pop
loopne
sbb
fistl
sub
outsl
movsb
rcll
xor
lret
out
push
lret
mov
xchg
aad
xor
fisubrl
outsb
mov
and
popf
xchg
js
sbb
jecxz
push
push
xlat
lods
imul
mov
gs
jmp
jl
sahf
push
pop
bound
cmpsb
ficompl
es
push
dec
dec
cmp
ja
call
push
mov
and
out
movsl
mov
pop
movsl
mov
inc
pop
test
imulb
fimuls
add
xchg
inc
add
inc
mov
push
xchg
cmp
xlat
xchg
stos
ljmp
aam
xor
into
mov
push
dec
and
hlt
jmp
pop
add
xchg
mov
test
sbb
fsubrl
xchg
lods
cld
ret
shll
cli
in
sbb
cmp
inc
ja
fiaddl
in
cmpsb
testl
cli
pmaxsw
mov
cs
xor
decb
outsl
xor
aam
lret
or
cmp
jo
movsl
fimuls
hlt
test
mov
ret
jbe
fisttpll
push
jecxz
sub
push
sbb
shlb
imul
gs
or
test
xchg
jbe
inc
mov
out
daa
mov
xor
jb
aas
mov
rclb
pop
in
jmp
mov
cmp
mov
jne
push
bound
fbld
mov
ret
repnz
inc
aaa
mov
inc
xchg
cltd
lock
xchg
int
add
mov
sub
dec
stc
mov
dec
orb
pop
les
dec
scas
inc
pop
cmpsb
cld
shll
aam
push
scas
aaa
nop
jecxz
sbb
inc
pop
and
jne
shrl
jo
adc
pop
and
scas
inc
adc
add
push
lcall
push
pop
movsl
iret
lods
iret
mov
movsl
dec
fwait
aam
xchg
fildll
or
mov
jae
inc
and
shrl
push
inc
or
stos
dec
repnz
cmp
loop
into
pop
icebp
add
divb
jge
enter
cld
pop
pop
dec
sub
ljmp
xchg
lock
inc
cmp
add
lds
pop
cmp
adc
push
cvtps2pi
dec
mov
sub
arpl
fadds
mov
adc
out
or
popa
mov
sti
stc
xor
repz
aad
ds
xchg
add
iret
mov
ds
sahf
adc
mov
iret
fwait
pop
movsl
pop
sub
cmp
or
add
movsl
repnz
fsubrl
sbb
movsb
sub
mov
cli
aam
xchg
popf
sahf
dec
xlat
shrb
pushl
std
addb
jp
call
or
fsts
sub
mov
push
ss
push
pop
xor
ja
jne
mov
outsl
ret
movsl
rcll
sub
or
or
sbb
mov
cmp
outsl
addb
enter
loop
push
push
mov
mov
jne
out
pop
test
inc
popa
pop
and
lods
outsl
mov
aaa
jne
xor
addr16
or
xchg
or
or
lds
test
and
mov
test
jb
xacquire
imul
push
fnsave
add
xor
add
dec
rorb
ss
mov
inc
test
inc
mov
inc
inc
ja
adcb
test
dec
subb
fdivr
lods
repnz
mov
jecxz
subb
bound
sarl
cmc
dec
xchg
jl
and
sbb
xchg
movsl
mov
mov
push
mov
ret
gs
sub
pop
sahf
je
xor
iret
mov
inc
push
test
mov
test
pop
pop
jl
adc
sbb
in
lods
jmp
vhsubpd
mov
std
pop
dec
jae
idiv
ja
pop
sub
lock
jecxz
push
cmp
mov
scas
loope
mov
outsl
sub
fsubrs
fsubr
arpl
xor
jmp
int
xchg
pop
aam
gs
pop
mov
enter
fadd
jns
sub
mov
xor
dec
aaa
cmc
xchg
outsl
addr16
add
xchg
jmp
divb
jno
add
cmpsb
adc
sub
cmp
addl
inc
aad
cmp
mov
jle
imul
dec
xorb
pop
in
imul
inc
dec
lea
dec
fcom
loope
std
inc
mov
push
mov
rcrl
dec
mov
je
notl
inc
jae
mov
cld
mov
pushf
sub
rolb
cmp
or
add
push
push
mov
mov
xchg
test
sbb
adc
dec
mov
bound
lea
aad
data16
adc
ret
inc
iret
pusha
xor
inc
rcl
cmp
scas
test
push
mov
outsl
sarb
push
test
jp
repnz
lods
rorb
mov
sbb
lcall
scas
xabort
push
mov
lock
mov
and
push
stos
or
sbb
loop
int
shlb
rorb
cmp
out
sbb
mov
es
fwait
cltd
lahf
dec
cmp
jae
cmpsl
mov
sub
out
xchg
test
xchg
addr16
ss
jp
push
sbb
adc
fstps
sti
out
push
xor
js
sahf
xchg
inc
jg
pusha
xchg
adc
push
lahf
xchg
and
mov
xor
jecxz
xor
add
xor
imull
dec
jae
jb
daa
gs
lock
sbb
stos
nop
adc
xor
nop
insl
lret
and
inc
add
fcomps
into
outsb
jge
or
stc
ret
add
mov
and
inc
push
std
sbb
dec
push
pop
add
push
je
or
clc
jecxz
loope
je
xor
jb
sub
loop
push
push
sub
aam
jo
divb
cmp
sub
mov
push
or
xchg
add
inc
js
clc
cmp
cmp
imul
cmpsl
gs
jb
adc
inc
cmp
js
aam
xchg
sub
push
inc
imul
inc
adc
cmp
in
mov
jp
sahf
fmul
xor
add
addr16
pop
or
cmp
ja
lods
pop
push
sub
fsubl
mov
je
inc
fdivrs
mov
scas
imul
mov
popl
mov
test
dec
or
push
jge
mov
ud2
movsl
push
push
scas
inc
pop
xorb
outsl
fsubr
test
xor
mov
add
mov
lret
jbe
lret
adc
ror
sbb
push
xchg
mov
xor
ljmp
nop
verw
rorb
jmp
pop
ficompl
cmc
rol
xor
pop
lretw
mov
sahf
xchg
or
js
dec
cld
loopne
sti
pop
js
cwtl
pop
fst
cmp
sti
sbb
dec
mov
repz
insb
and
cld
xor
pop
movsb
cmp
xor
test
rorb
push
lret
ja
lock
nop
mov
int
mov
repz
xchg
xor
push
pusha
lock
pop
cmp
adc
imul
mov
push
mov
jne
aaa
es
ficoms
inc
xor
shl
and
push
jecxz
cs
adc
inc
fcoml
lea
push
add
push
fwait
jnp
push
sub
jns
lahf
into
repz
rol
push
xchg
jb
xchg
pushf
ds
rclb
out
cmp
sbb
or
inc
mov
int
icebp
fidivrl
push
imul
sub
jp
push
mov
insb
mov
scas
fidivs
jge
cltd
cmp
jecxz
mov
mov
les
imul
repz
push
js
iret
inc
pop
sub
cmpsl
rclb
lods
lcall
and
mov
xchg
or
andl
mov
cmp
aad
mov
mov
negb
divl
addr16
outsl
mov
xor
mov
rol
cmp
sbb
inc
sub
lock
pop
or
fcomps
sub
or
daa
jle
dec
fldenv
mov
pushf
or
std
mov
out
mov
rclb
loopne
mov
rcrl
adc
jg
sbb
sub
mov
push
and
pop
stos
ret
push
inc
mov
lds
push
jns
gs
mov
sbb
mov
es
xchg
xchg
sub
test
add
mov
mov
or
lcall
ljmp
cmp
inc
jmp
cwtl
pop
stc
roll
pop
fcmovbe
imul
loope
inc
lret
mov
out
push
out
xlat
mov
xchg
jno
xchg
cmp
push
das
cmpsb
bound
dec
sbb
xchg
sbb
xor
add
std
sbb
mov
sub
and
ret
ret
lock
push
mov
insl
int3
xor
pushf
xchg
or
movsb
xor
out
ja
scas
repnz
mov
stos
std
dec
data16
incb
or
add
mov
mov
lods
outsb
dec
sbb
cmp
fsubrl
aad
stos
mov
adc
sub
sti
sub
test
cmpsl
sub
out
icebp
and
mov
popa
jnp
mov
lods
xchg
pusha
mov
cmp
add
xor
ss
push
bound
mov
int
jb
inc
cmp
lret
push
xor
fsubs
call
sahf
add
sub
lret
inc
faddl
dec
flds
incb
cmp
pop
jmp
out
cs
fmuls
inc
mov
lods
movsl
cmp
stos
jo
mov
hlt
mov
adc
jns
xlat
mov
jae
mov
jns
addr16
xor
jno
add
jbe
ds
jl
jne
test
in
cltd
out
sbb
mov
test
push
lret
inc
in
or
inc
data16
xor
stos
mov
push
jmp
repz
push
sti
cmp
cltd
js
jp
cmp
dec
shrl
and
les
dec
inc
lcall
jns
jns
aad
and
fisubs
cmp
jg
stos
imul
daa
xchg
lcall
push
out
and
scas
aas
mov
scas
push
inc
lods
mov
jp
sahf
iret
and
xchg
xchg
ss
iret
mov
inc
cmp
sbbb
fwait
int3
jmp
push
lcall
push
xchg
push
push
cmpsl
dec
add
sbbl
cmp
xchg
nop
movsl
popf
sbb
mov
cmc
sbb
loopne
sar
sbb
movsb
into
arpl
out
adc
notb
sub
jmp
adc
cmp
pusha
cmp
jecxz
js
sub
aaa
out
lret
pushf
stos
push
scas
pop
lea
xchg
mov
movsl
arpl
xor
loope
fldt
push
mov
add
push
call
xchg
push
mov
in
fsubrs
nop
and
into
xlat
dec
xchg
es
cmpsl
enter
jno
sbb
xchg
add
js
cmp
icebp
sub
or
ss
in
aam
pop
sbb
jecxz
clc
lods
movsl
imul
and
shll
testb
mov
mov
aam
mov
js,pn
push
inc
add
push
ljmp
or
dec
arpl
inc
xchg
mov
pusha
shr
scas
jge
adc
push
inc
push
xchg
popf
or
mov
xchg
outsb
repz
xor
imul
out
pop
lahf
lds
cmp
addr16
std
bound
arpl
sub
aam
dec
dec
aas
in
sbb
ljmp
jmp
adc
mov
fs
jnp
mov
dec
loopne
lret
push
andl
cmpxchg
mov
pop
mov
sub
mov
out
fidivrs
jp
sub
mov
adc
scas
scas
mov
out
mov
jbe
mov
sarl
es
lcall
mov
mov
mov
xorb
pop
jbe
insl
pop
insl
ss
pusha
loop
insl
imul
xchg
scas
movsb
jg
push
mov
lret
repz
add
jae
pop
pop
dec
outsl
sub
and
imul
aas
sarb
stc
cmp
sarl
in
or
outsl
fdivs
lret
mov
stos
dec
das
pop
add
ljmp
testb
jp
out
dec
scas
ljmp
int
repnz
stc
cwtl
xchg
or
popf
int3
iret
pusha
mov
add
xchg
icebp
dec
mov
and
sub
decb
dec
flds
jg
dec
sub
mov
add
aaa
fimull
fsubp
lods
or
dec
mov
mov
jge
push
jp
sub
outsl
enter
pop
sub
movsb
call
mov
pop
and
data16
out
xor
xlat
andl
sub
clc
push
insl
psrlw
mov
push
sub
int3
xchg
mov
sbb
rolb
jg
pop
inc
xor
rcrb
clc
popa
jne
cmpsb
lds
arpl
jmp
cs
add
mov
addl
scas
sub
fmuls
dec
push
push
dec
xor
push
pop
sub
push
sbb
iret
inc
loope
push
push
repnz
jg
inc
daa
and
sbb
sub
push
das
test
mov
and
jecxz
pop
fwait
nop
fwait
int
or
stc
fs
sub
mov
lcall
and
jbe
lods
pop
lret
push
xchg
sti
jbe
fimuls
fwait
xor
push
add
fidivrs
dec
mov
mov
adc
pusha
add
xorb
ret
ljmp
push
cs
mov
mov
mov
inc
cmc
imul
add
jge
movsb
cmp
dec
push
andb
stos
arpl
shll
push
xchg
mov
sti
cmp
pop
push
mov
cmpl
xchg
pop
iret
mov
add
xor
xor
mov
loopne
mov
pop
arpl
jp
idivl
cwtl
mov
xorl
in
addb
pop
repz
loopne
mov
xor
push
nop
das
jns
call
hlt
pop
stc
dec
xor
das
mov
lcall
popf
hlt
pop
mov
and
dec
push
aad
imul
mov
lret
dec
insl
ret
add
mov
fsubr
xchg
inc
js
out
jl
mov
lea
mov
std
shrl
clc
jl
cmp
in
sarb
fidivrs
outsl
sub
mov
cmc
loopne
cmp
cmc
loop
mov
jmp
xchg
sbb
outsl
movsb
dec
addr16
repz
and
push
dec
dec
sub
xchg
scas
fs
add
push
shll
aaa
jo
mov
push
pop
inc
xor
xchg
cmp
daa
ja
pushl
frndint
or
loopne
bound
mov
push
push
call
ret
jge
push
je
cmc
aas
fistpll
sub
or
std
rcrl
cmp
or
adc
inc
rcrl
fwait
push
mov
or
loop
lea
ljmp
loop
jnp
test
in
outsl
fldcw
or
pop
pushf
cmp
inc
lret
add
cmc
sbb
out
xor
cs
outsl
fstps
push
adc
outsb
test
jne
inc
testb
int3
add
in
cmp
ja
xchg
adc
mov
push
inc
fs
fs
clc
mov
jno
xor
push
cmc
jg
pushf
dec
cmpsl
mov
adc
enter
sahf
dec
icebp
pop
or
ds
idiv
jbe
add
mov
xor
add
add
pop
out
ss
mov
pop
pop
mov
add
mov
cmp
cmp
xor
jbe
pop
roll
roll
add
lds
push
sti
cmpl
loop
fiadds
rclb
js
aas
lds
aad
mov
pop
sbb
sub
pop
and
pop
cltd
out
inc
sub
clc
mov
lock
aaa
add
lods
loope
xchg
subb
mov
jne
fucomi
pushf
xor
lcall
push
outsb
stos
jo,pn
jbe
and
xchg
lea
sub
xor
mov
mov
mov
dec
mov
dec
int
lret
adc
mov
xor
push
sub
or
sub
dec
repnz
loope
dec
xor
ljmp
pop
adc
pop
aam
ljmp
jmp
inc
cmp
in
insl
fdivs
leave
mov
pusha
cld
cmc
or
push
mov
out
push
mov
pop
xchg
sub
sti
cmpsb
cwtl
xchg
jmp
test
sbb
mov
pop
xorl
cs
inc
push
rclb
pmulhuw
push
cld
fucom
add
into
cli
addr16
mov
or
sbb
inc
cmp
mov
movsb
lods
dec
cmc
sub
pop
or
pop
cmp
iret
mov
add
mov
imul
push
wbinvd
cli
and
sub
add
addr16
aam
cmp
daa
jns
push
daa
sub
dec
jb
lock
sbb
sbb
das
jae
pop
fwait
xlat
lods
jbe
xchg
lea
jo
mov
push
and
xchg
ss
sub
mov
sub
cltd
push
mov
mov
sub
ret
inc
xchg
mov
xchg
mov
mov
mov
sbb
lods
mov
rcrb
fadd
or
or
jl
cltd
push
inc
cltd
dec
mov
rorb
rcrl
push
sbb
fdivrp
or
fisubl
hlt
adc
adc
sub
or
iret
pop
test
dec
and
bound
inc
mov
sub
lahf
sti
popf
les
orb
dec
mov
cli
or
ljmp
push
fs
stc
jb
sbb
in
mov
or
push
pop
pop
cmpsl
inc
outsb
adc
in
add
mov
inc
shll
nop
adc
out
inc
mov
push
dec
bound
gs
add
mov
cmpsl
and
mov
sbb
cmp
out
fistpl
ss
dec
cmp
mov
std
fdivs
arpl
fucom
shl
int3
mov
xlat
rcr
dec
je
cltd
outsl
je
aad
sahf
cmp
jae
push
outsl
shl
fyl2x
leave
andl
push
pop
int
xor
mov
mov
pop
adc
and
inc
dec
cltd
inc
inc
out
xchg
sub
enter
push
addr16
fisttpll
push
retw
pushf
out
scas
rcll
cmp
mov
adc
in
or
fiaddl
stos
jg
lret
arpl
xchg
popa
movsb
jge
mov
or
iret
fsubrs
lcall
or
cmp
test
add
xchg
or
sbb
xor
inc
repz
pop
mov
cmp
push
xor
orl
mov
pop
and
sub
int3
out
rolb
cmpsl
psrlw
cmpb
jl
pop
cmpsl
sbb
movsl
hlt
jnp
add
addr16
push
sub
sti
pop
push
xchg
gs
jo
ret
inc
or
and
stos
or
add
rcrl
dec
es
sbb
xor
pushf
sbb
fiadds
in
and
add
sbb
pop
push
pop
imul
mov
add
out
xchg
pop
adc
and
test
pushf
cmpsb
in
scas
inc
pop
xor
pop
gs
rol
es
mov
jle
xchg
lea
sti
jbe
jns
push
test
sub
mov
test
sbb
mov
jecxz
xor
add
pop
xchg
cltd
fistpl
stc
test
push
stos
cli
sub
insl
sti
gs
pop
mov
dec
sub
movsb
sub
cli
dec
cmp
repz
in
fcoms
push
and
scas
xor
aam
je
ret
or
mov
push
cmp
pop
xor
push
loop
sbbl
inc
fidivrl
pop
arpl
ja
subl
pop
mov
pusha
jmp
fstl
in
neg
lcall
push
cmp
ret
jne
shl
call
xor
sbb
call
pop
push
imul
fistpll
lahf
test
repz
xchg
xor
cmp
jg
dec
jno
dec
xorb
push
fdiv
lahf
shll
jne
jo
lds
sbbl
xor
loop
enter
fmull
adc
dec
mov
lcall
out
add
xor
adc
and
scas
lret
and
pop
fwait
adc
lea
or
mov
fsubl
es
dec
cltd
xor
push
cmp
mov
aaa
mov
adc
pop
decb
iret
inc
out
pusha
sub
xbegin
sbb
daa
jle
ds
cltd
mov
push
lods
adc
rcll
std
pop
testl
jge
lret
or
movsb
xorl
dec
pop
fists
nop
call
inc
jno
mov
lahf
dec
dec
cld
push
ljmp
cmovs
push
push
inc
lds
or
sbb
mov
adc
inc
jl
mov
mov
or
mov
xchg
in
mov
shrl
lods
jmp
pop
push
jb
sti
jge
push
ffree
pop
repz
fimull
mov
jecxz
or
cli
inc
pop
dec
jmp
sub
mov
aas
andl
xchg
das
nop
roll
xlat
jae
hlt
cmc
lods
mov
cmp
ficomps
mov
mov
out
cmp
subl
outsl
das
cs
pop
pop
xor
jbe
inc
iret
sbb
insl
jmp
inc
movsb
aad
fwait
mov
popa
int
xchg
call
mov
bound
rolb
dec
lods
add
and
or
push
test
bound
fdivrl
xchg
mov
xor
push
cmp
leave
dec
jnp
adc
sahf
sbb
sti
sub
cmp
stc
mov
sub
sbb
mov
xchg
lahf
negb
sub
imulb
mov
int3
out
or
aad
lds
cmp
add
sbb
subl
imul
lock
pusha
loope
mov
shrl
imul
xchg
push
or
mov
sbb
gs
mov
sbb
std
movsb
aad
loope
push
xchg
movsb
jle
sarl
mov
push
icebp
jecxz
jmp
scas
movsl
fcomps
scas
cmp
and
inc
mov
pop
sub
les
jge
jne
daa
ds
fs
cmpsl
mov
jne
or
mov
call
adc
popa
test
and
bound
rcrb
sub
shl
jmp
loop
xor
jg
lods
sahf
mov
jge
shrl
mov
and
clc
loopne
xchg
enter
pushf
lods
pop
or
lret
adc
cld
or
jnp
or
orl
fidivrs
push
push
push
shr
hlt
xor
xchg
imul
into
and
clc
in
out
notl
mov
or
sub
out
pop
sub
dec
mov
push
cmp
leave
lods
mov
loop
inc
and
call
and
outsb
test
out
pushf
stos
and
sbb
fidivl
ljmp
cmp
lds
das
pop
pop
xor
inc
pop
cmp
xor
jno
mov
out
dec
adc
push
hlt
sub
inc
into
cmova
ds
jb
pop
pop
jp
pop
or
in
js
fidivrs
lret
cmp
popa
pushl
enter
inc
les
adc
dec
and
cmp
cmp
pop
xchg
rcl
or
jb
jns
mov
mov
cmpsl
lock
out
jne
imulb
cmpl
orl
pop
pop
mov
add
mov
sbb
int
ret
jae
ret
test
ret
pop
inc
mov
clc
dec
xchg
pop
addr16
dec
ficompl
aas
or
mov
adc
xchg
fdivl
push
adc
gs
add
add
mov
push
outsb
mov
inc
and
cmp
jmp
pop
or
pop
aam
sarb
mov
cmpsl
adc
pop
inc
cmp
mov
cmpsl
mov
hlt
inc
nop
mov
icebp
jp
outsb
jl
ljmp
mov
imul
sub
jl
pop
or
sbb
std
cmpsb
jecxz
or
daa
pop
xchg
icebp
daa
jmp
dec
push
and
dec
xlat
adc
inc
fdiv
out
cld
cmp
adc
in
orb
mov
icebp
push
imul
mov
mov
shrb
xchg
arpl
repz
aas
pop
cld
sub
mov
push
cmp
pop
mov
sbb
pop
bnd
jb
lea
push
leave
mov
imul
inc
pop
push
jmp
inc
pop
ljmp
cmp
pop
xchg
out
cwtl
push
pop
and
inc
inc
ljmp
adc
daa
cld
dec
push
mov
imul
adc
or
xchg
and
test
cmp
cmpsl
sbb
pop
rorl
testb
mov
pop
ss
leave
pop
shrb
clc
mov
mov
cld
mov
divb
shrb
arpl
es
push
jo
mov
cmp
fs
pop
mov
add
or
xchg
dec
sub
xchg
inc
in
cltd
and
popf
adc
ss
and
inc
pop
nop
shrb
xor
pop
popf
push
jbe
ljmp
inc
jbe
jbe
repz
pop
shl
mov
adc
xor
js
sub
jp
nop
xor
add
mov
loope
iret
mov
adc
push
fs
pop
movsb
mov
out
shlb
dec
mov
xchg
ret
lods
cs
shlb
popa
lcall
sbb
sbb
add
mov
ja
cmc
outsl
std
movsb
jae
inc
and
xchg
stc
enter
insb
pop
cli
cltd
mov
push
dec
mov
subl
shlb
dec
xchg
add
xchg
xor
stc
mov
insl
adcb
mov
mov
push
xchg
jmp
lods
add
outsb
jb
or
imul
sub
cmpsl
stc
mov
cmpsl
add
mov
sub
cmp
inc
lds
aas
enter
cli
inc
call
xchg
das
movsb
push
sti
je
cmc
shll
jp
inc
inc
inc
adc
test
or
adc
shrb
cli
cltd
loope
jl
push
xchg
call
push
push
dec
int
in
pop
cltd
ret
lcall
scas
js
scas
cld
scas
subl
jbe
jmp
sub
pop
or
cwtl
sub
mov
loope
pusha
dec
lahf
adc
leave
dec
add
es
lret
aam
leave
lods
mov
leave
mov
nop
push
outsl
inc
and
and
enter
enter
inc
inc
out
les
stc
mov
or
and
data16
dec
lahf
xlat
in
sahf
or
fmulp
sti
adc
mov
cmp
fmuls
sub
xchg
push
mov
inc
fisttpl
pop
out
inc
fwait
fs
xor
and
xor
ret
push
mov
sahf
jno
and
in
mov
mov
outsl
cltd
mov
sub
bnd
sub
jnp
or
jb
out
sub
cmc
and
setno
lret
loopne
and
aam
scas
sub
rorb
stos
lahf
movsl
mov
push
scas
push
push
outsl
stc
clc
mul
pop
xor
inc
cmp
sub
sbb
dec
mov
mov
sub
in
push
mov
bound
clc
xor
jecxz
psubq
leave
insl
repnz
mov
cli
add
cmp
xlat
push
and
int3
fisttps
adcb
dec
add
les
outsb
in
jp
mov
mov
ss
ret
ret
push
fadd
bound
popf
xchg
pop
xchg
into
cmpsl
outsl
in
cmp
test
mov
je
sub
mov
mov
push
cltd
fadd
dec
sete
clc
dec
hlt
orl
or
call
fxch
and
and
jmp
sbb
cwtl
fidivl
mov
stos
scas
sahf
cmp
add
push
and
mulb
lds
leave
pop
adc
push
daa
and
xor
movsb
cmpb
nop
cwtl
loope
js
sbb
add
push
pop
jl
ljmp
aaa
pushf
xchg
ljmp
and
pop
and
or
xor
fsubl
testl
pop
xor
inc
mov
out
popa
pop
inc
jae
shr
rcrb
iret
mov
jb
loope
adc
test
cld
insl
xchg
sub
dec
insl
xor
sub
dec
push
add
mov
sbb
cltd
sbbl
mov
scas
inc
push
aam
sbb
mov
xchg
hlt
outsl
ss
orb
pop
incb
out
mov
adc
mov
scas
popa
sarl
sbb
ficoml
mov
jns
jle
ja
sub
repnz
xchg
mov
jge
jno
inc
test
ss
or
sub
mov
or
jo
mov
push
gs
push
add
mov
je
imul
pop
aam
outsb
push
js
addr16
pop
sub
xchg
arpl
jo
fs
sbb
mov
sbb
dec
sub
fists
xchg
movsb
out
hlt
sahf
notb
pop
mov
sbb
sbb
push
stc
pop
das
ret
lcall
mov
mov
dec
jecxz
mov
and
add
inc
adc
mov
shrb
shll
or
pusha
jbe
mov
ja
jmp
insb
or
jmp
enter
cmp
roll
cmpl
lret
cs
fwait
xor
testb
popa
fdivs
push
add
xor
insl
cmp
xchg
mov
push
jge
in
dec
stos
test
pop
aaa
mov
pop
popf
and
inc
inc
push
jne
or
insb
cld
mov
pop
pop
push
dec
inc
push
stos
pushf
ficoml
push
aam
subl
stos
gs
mov
push
out
icebp
rcrl
jp
xor
adcl
cmp
sbb
fimull
pop
aas
inc
xor
fisubrs
and
jl
dec
pop
fldenv
mov
pop
divl
aaa
dec
shlb
fnstcw
sub
roll
sub
sti
ja
or
and
push
loopne
call
sub
mov
mov
mov
dec
test
and
add
sub
sbb
sbb
fwait
dec
inc
jae
jle
in
into
push
imul
push
dec
fmul
jp
mov
jg
mov
insl
mov
mov
out
lcall
sub
in
int
out
je
into
push
int3
mov
xor
mov
lods
gs
in
test
dec
cmpl
push
adc
push
out
shll
rolb
mov
push
push
inc
sub
add
xchg
rorl
cmpsl
cmc
pop
loope
fisubl
adc
cmp
in
movb
in
inc
enter
jbe
xchg
mov
fwait
adc
adc
jno
cmp
xor
cmpsl
cs
ja
cwtl
sbb
mov
lcall
cli
sbb
push
or
cli
and
inc
lret
add
and
iret
mov
gs
push
cli
push
jmp
cmp
lods
cs
popa
nop
sub
pop
out
stos
pushf
arpl
or
cmp
mov
cmp
sub
not
push
in
jbe
fmull
jno
add
in
rorl
mov
xor
sbb
insl
fdiv
adc
xchg
arpl
imull
stos
mov
outsb
pop
ja
sti
insl
xchg
ret
cs
cmc
mov
testb
sbb
add
xchg
cmc
jnp
fucomi
jne
sub
xchg
jns
cwtl
sub
int
cmpb
fbstp
cmp
pop
jl
cmpsl
daa
out
popa
dec
int3
inc
cmp
add
xchg
jecxz
mov
lds
sub
jae
mov
test
xchg
call
pop
mov
add
out
les
cli
scas
pop
push
mov
add
arpl
jb
dec
fistpl
jmp
rorb
out
xchg
cmpsb
inc
shr
xorl
call
inc
mov
dec
imul
cmp
push
cmp
dec
jecxz
pop
mov
mov
push
push
mov
mov
add
rorl
enter
cwtl
loopne
jne
mov
push
dec
dec
daa
cmp
jg
sahf
xor
cmp
inc
pop
mov
inc
push
inc
jnp
stc
mov
pop
add
aaa
fcoms
aas
dec
inc
xor
push
jnp
mov
push
mov
addr16
lret
xchg
lods
movsl
push
out
arpl
int3
mov
cmp
mov
add
test
rcll
inc
inc
in
sbb
in
pop
xchg
cld
or
pop
xor
mov
das
xchg
adc
xchg
cld
add
std
fists
sbb
stc
js
adc
lret
mov
jmp
add
pop
pop
mov
jmp
int3
je
pop
mov
movsl
fwait
call
xor
cli
pop
test
cwtl
iret
and
xorl
sbbb
add
rcl
push
xor
mov
sahf
xor
gs
arpl
sarl
daa
out
js
xor
cld
cmpsl
cli
nop
push
cmp
push
hlt
push
loope
addr16
int
in
push
sbb
lock
mov
pop
add
cmpsl
bnd
mov
or
cli
pop
imul
push
adc
inc
popf
xor
mov
out
jne
sbb
mov
repz
dec
pop
andb
sub
mov
scas
xchg
jl
inc
jle
enter
shrb
rcrl
aaa
jo
insb
xor
test
pop
or
push
mov
loope
pop
imul
rcr
pop
pop
lock
pop
mov
stos
add
push
jbe,pn
push
in
and
lods
adc
xor
sub
imul
mov
adc
sbb
bound
dec
jbe
js
inc
adc
ds
lods
mov
sbb
out
js
mov
xor
sub
jne
sbb
jne
scas
les
mov
add
push
iret
test
rcrb
repnz
enter
or
mov
shrb
lea
mov
inc
std
mov
xor
dec
call
mulb
inc
sahf
in
push
nop
pop
dec
jmp
mov
inc
mov
pop
rorl
mov
nop
das
inc
xor
xchg
add
sbb
test
pop
lods
push
inc
out
mov
stos
xchg
jo
adc
jno
pop
pop
and
mov
popf
bound
xchg
add
push
pop
shll
or
dec
mov
das
inc
loopne
repz
xchg
imul
dec
cmp
test
rcl
xor
popf
and
fcomip
arpl
stos
loopne
mov
jb
pusha
aam
loope
insb
jp
loope
and
adc
adc
inc
gs
jne
insl
lahf
popa
bound
xor
mov
ja
mov
mov
adc
mov
arpl
outsb
movsl
inc
pop
adc
dec
jge
sbb
test
sbb
out
arpl
test
and
cmp
sub
jnp
mov
fcmovnbe
cwtl
arpl
cs
inc
mov
xor
in
pop
repz
xchg
ja
aas
and
daa
cmp
sbb
les
xchg
clc
adc
and
imul
data16
push
dec
inc
push
push
cmp
cs
adc
pop
sub
dec
push
notl
js
dec
loopne
test
outsb
xor
adc
push
inc
mov
cli
push
cmp
add
cmpsl
dec
jmp
enter
mov
shr
jno
es
loope
adc
cmpb
orb
pop
add
xor
add
lcall
cmpb
jg
inc
jle
arpl
xor
cmc
cmp
mov
neg
dec
cmpsb
ja
out
xor
or
aaa
leave
mov
pop
fisttps
xchg
cmp
xlat
insl
jmp
and
fdivl
mov
push
inc
test
pop
divl
incl
push
out
loopne
xchg
adc
insb
mov
call
movsb
loop
mov
dec
or
add
iret
or
and
outsb
or
in
je
mov
pusha
cs
push
ror
andb
mov
lcall
mov
in
lock
int
icebp
hlt
mov
cwtl
jbe
push
ret
pop
xchg
adc
mov
divb
cmp
cmpsl
iret
or
ss
jns
in
mov
insl
and
inc
push
push
xchg
or
cmpsb
out
dec
test
cmpsb
pop
add
sbb
or
inc
in
imul
in
sub
add
jnp
mov
aas
cmp
arpl
filds
cmp
cmp
fdivs
xchg
push
test
loope
sub
jmp
sub
sbb
or
adc
rcll
mull
data16
mov
pop
fisubl
cmpb
aam
pop
hlt
shl
xchg
mov
xchg
inc
push
xchg
pop
xchg
push
and
cmp
jo
pop
jbe
fstpt
jp
cmpsb
outsl
clc
les
mov
push
cmp
pushf
xor
test
mov
stos
push
scas
hlt
xor
pandn
jmp
outsb
push
pop
ret
xchg
push
repnz
in
popa
leave
cmp
lea
and
mov
sti
push
scas
iret
insb
mov
xchg
sbb
sti
xchg
push
push
dec
icebp
adc
mov
movsb
ja
pop
ret
pop
int
mov
and
pop
out
in
outsb
ficompl
sarb
cmp
xor
imul
mov
out
int3
lods
jae
push
jle
ret
or
ljmp
arpl
and
and
inc
mov
inc
xor
cmp
xor
mov
jge
mov
mov
push
aam
lods
xor
mov
push
jmp
mov
pusha
sbb
aad
and
adcb
fcomi
leave
jno
movsb
push
leave
dec
enter
shl
cmp
aas
jmp
or
es
sub
sbb
fldcw
cmp
les
arpl
jne
add
xchg
or
add
mov
jp
mov
xor
das
std
es
std
scas
sub
mov
mov
xchg
jb
call
test
stc
test
pushf
sbb
adcl
inc
jle
repz
fmull
in
rolb
cmpsl
xor
mov
aad
popa
hlt
bound
inc
stos
push
fcoms
inc
mov
cmp
push
push
test
sarl
cld
aam
mov
pop
lret
ja
sbb
popa
xchg
mov
fisubrs
adc
lahf
adc
rcll
ds
push
fmull
scas
fstpt
mov
iret
fcompl
xor
jo
std
ljmp
lea
mov
mov
and
add
dec
leave
mov
test
mov
add
in
cmc
test
inc
dec
into
sahf
jns
add
js
adc
popa
dec
inc
cmp
mov
sub
sub
mov
jge
push
repnz
pop
popf
sbb
sarb
cmp
push
testb
or
pop
jb
mov
push
fs
mov
sub
mov
push
rcrb
push
aad
mov
or
push
mov
jne
adc
inc
std
jnp
popa
fidivrs
andb
mov
je
push
gs
rcrl
filds
out
sarb
mov
cli
mov
fsubrs
in
mov
sahf
dec
mov
fwait
mov
mov
out
mov
or
xchg
add
sub
icebp
sbb
push
and
test
lods
rcrl
xor
fnstsw
mov
fisubrs
lods
push
test
movsb
fwait
sbb
int3
aad
aas
and
cmpsb
mov
pop
cmc
or
outsb
push
sub
jmp
jl
js
popf
xchg
xchg
lret
or
xchg
mov
fidivrs
lret
and
into
jecxz
pop
cld
push
aaa
lcall
lea
ret
xorb
lods
pop
xor
jb
les
mov
addr16
dec
mov
shlb
out
xor
pop
imul
jmp
gs
dec
push
jno
dec
jae
and
sahf
dec
mov
or
inc
das
push
dec
sbb
sbb
jno
cltd
push
ljmp
jl
sbb
add
addr16
jl
mov
in
fwait
popa
in
jne
dec
je
shrl
fcoms
pop
jecxz
test
into
xor
iret
stc
push
js
sub
or
ret
xchg
cli
mov
into
cld
mov
stos
push
rolb
and
adc
push
orb
jne
inc
addl
xlat
std
push
mov
mov
add
xor
movsl
imul
jl
fdivrl
xor
insl
xchg
xchg
and
fwait
push
push
pop
lret
ss
pop
aam
test
sbb
and
outsb
rorl
andl
sbb
cmp
andl
in
lods
test
aas
and
fistps
dec
loope
inc
iret
outsb
movsb
xchg
mov
in
fnstsw
std
pop
dec
lahf
scas
mov
mov
aas
ret
fs
xchg
or
mov
inc
imul
fs
lahf
jl
aam
mov
loopne
mov
xor
test
int3
jbe
pop
out
xchg
in
sbb
push
dec
or
and
ja
enter
jne
pushf
cld
and
sub
inc
lret
rclb
fwait
lret
in
mov
pmuludq
cltd
sti
mov
pop
lods
xchg
pop
and
pop
inc
int
cmpsl
inc
notb
out
out
dec
or
fsts
iret
adc
mov
mov
xchg
inc
subb
in
mul
xchg
mov
stos
pop
out
jmp
mov
popa
sub
push
repnz
je
cmp
data16
call
xchg
popf
pop
idivl
or
fnstsw
rcr
scas
adc
push
into
pop
xchg
sti
fwait
cmc
pop
add
or
mov
or
xor
adc
cs
popa
out
sbb
xchg
adc
std
addb
movsl
popf
adc
ss
push
xchg
xor
out
aad
repz
fwait
loopne
cmp
dec
sub
pop
negb
fcmove
add
lahf
mov
enter
scas
xor
jno
and
or
repnz
mov
push
cli
fwait
push
mov
mov
push
fisttps
mov
mov
push
dec
jmp
inc
inc
mov
lret
inc
jb
add
sbb
inc
aad
jg
push
ja
cmpsb
mov
lock
pusha
js
in
jb
orl
xchg
cs
sahf
mov
ret
sub
mov
fs
inc
rol
push
enter
xchg
cmc
pop
cmpl
push
adc
ljmp
gs
popa
insl
cmpb
pop
mov
pop
bound
inc
cmp
cmp
adc
sbb
shlb
fisubl
push
sahf
cld
push
cmp
add
inc
bound
jecxz
sub
les
xor
insl
ret
adc
mov
xchg
add
sbb
cmp
sub
add
sub
cs
mov
add
icebp
xor
push
cmp
popf
jns
mov
jl
pop
pop
das
clc
adc
sbb
cmp
jecxz
std
cmp
lret
cmp
inc
lahf
ds
rcrl
dec
mov
cltd
shll
dec
mov
and
dec
xlat
pop
scas
xchg
inc
cmp
lcall
lret
dec
xlat
sub
test
pop
pop
ds
arpl
lods
shll
ja
jge
lds
rorl
mov
add
mov
xchg
xchg
fsubrl
rclb
repz
push
jae
test
add
sub
sbb
imul
xor
mov
add
xor
cmpsb
addr16
sub
jo
xchg
in
add
out
mov
mov
test
jmp
add
sub
mov
imul
daa
jle
mov
jmp
cmp
cs
or
cmp
mov
and
and
mov
ss
mov
cmp
dec
jb
fsubs
sub
scas
ret
popf
pop
sbbb
ss
jb
mov
cld
and
ja
or
test
ficompl
adc
mov
add
imull
ret
mov
dec
stos
add
cmp
cmp
out
out
lret
mov
es
test
sub
outsl
in
xchg
cltd
mov
enter
popf
xorb
inc
cltd
adc
add
cmp
push
cmpsl
rol
loope
in
push
adc
clc
cmp
subb
pop
pop
outsl
outsb
push
pop
inc
adc
les
dec
lgs
sbb
arpl
jp
ret
test
and
neg
mov
rorb
nop
dec
inc
and
in
addps
mov
and
ret
ss
mulb
sbb
pop
loop
mov
movsl
int
add
mov
test
gs
ret
jmp
sub
rolb
jo
popf
ret
inc
loope
xor
push
jp
mov
mov
mov
ja
lock
add
out
clc
mov
test
mov
sub
dec
xchg
push
pushf
loop
ret
ret
or
int
or
jmp
sbb
and
cmp
jb
ret
jnp
cmp
into
dec
push
dec
lcall
lods
cmp
fs
pushf
addr16
xor
cmpsb
inc
aad
push
filds
cmp
xchg
jbe
loopne
scas
ret
push
wrmsr
jo
incl
movsl
xor
cmpsb
or
ss
mov
int
das
pop
aas
jae
es
sub
jg
fwait
and
movsl
cmpsl
push
adc
stos
das
mov
loope
inc
mov
jb
stos
movsl
aam
xchg
jnp
in
pusha
mov
push
jo
lea
popf
push
mov
push
mov
jo
xor
or
lods
lds
mov
imull
out
mov
mov
cmp
inc
xor
std
scas
rcr
sbb
repz
dec
pusha
aas
jl
jmp
xchg
fs
and
push
test
mov
daa
jb
sbb
and
xchg
sbb
ret
inc
and
and
sbb
sbb
ret
or
pop
or
inc
cli
aas
xchg
bound
push
into
push
gs
enter
test
mov
cmpsb
adc
mov
sub
out
xchg
xchg
movsb
in
cmp
clc
xor
push
cltd
cmp
imulb
stos
loope
dec
cli
mov
push
cmp
movsl
test
xor
in
rcrl
sbb
pop
rorb
inc
orb
jno
cmp
mov
and
inc
shrl
gs
scas
shrb
add
mov
dec
repnz
add
mov
mov
repnz
mov
out
mov
xchg
adc
dec
fwait
push
mov
push
pushfw
adc
push
leave
sbbb
push
aam
or
push
pop
cwtl
pop
hlt
push
movsb
aad
xchg
movl
dec
ret
mov
inc
cmp
or
jbe
das
subl
fucom
mov
repz
mov
xchg
jecxz
add
pop
out
shlb
mov
pop
mov
cs
mov
inc
mov
mulb
fisttpll
mov
or
ret
leave
subb
cltd
lock
xchg
inc
aas
inc
lahf
push
insl
jae
xor
stos
dec
jns
sbb
aas
push
mov
adc
out
out
cs
inc
jecxz
call
enter
lret
push
or
mov
and
cmc
xchg
ffreep
sub
pop
int
jmp
xchg
mov
mov
add
or
mov
repnz
sub
adc
out
into
pop
pop
mov
jns
or
sti
or
mov
out
movsb
push
test
jge
ret
aaa
inc
cltd
xchg
mov
add
or
popa
sbb
adc
mov
cltd
lods
in
popl
js
dec
jmp
mov
inc
inc
pop
aad
sub
dec
cltd
sbb
xor
mov
es
addr16
daa
in
test
pushf
and
and
out
shll
insb
popf
and
xchg
lret
jo
xor
js
shlb
jno
push
pop
lcall
add
xchg
aam
xchg
repnz
mov
xor
dec
sahf
ds
mov
enter
jnp
sbb
outsb
sbb
or
filds
inc
add
mov
push
lahf
inc
out
dec
xchg
add
arpl
cltd
movsb
ja
jp
pop
test
sbb
push
clc
in
pop
imul
test
add
call
icebp
lahf
add
push
mov
sub
pop
popf
or
stos
xor
sti
movsb
cmp
in
inc
pop
ja
movsl
stos
sbb
addr16
pop
dec
push
movsb
ja
or
xor
mov
xor
cmpsl
add
dec
out
push
cld
mov
dec
clc
test
dec
andl
gs
add
notl
daa
ret
sti
jno
loopne
leave
mov
ret
and
mov
in
xlat
out
pusha
out
mov
mov
push
adc
test
jmp
test
pop
dec
mov
mov
testl
jnp
orb
faddl
mov
or
sti
cmc
ja
jns
mov
ss
add
push
xchg
aaa
int3
cltd
scas
mov
sbb
aad
or
dec
pop
mov
dec
xacquire
sub
pusha
aad
ret
divb
in
jecxz
cmp
test
or
je
and
cs
jno
in
out
in
js
mov
nop
ss
lret
andl
push
xchg
lret
addr16
mov
push
cmp
inc
ds
mov
sub
pushf
add
call
xor
repz
and
mov
cmp
insl
jmp
sbb
pop
and
mov
add
repz
pushf
xchg
mov
jecxz
sbb
mov
imul
icebp
sub
jo
pop
jae
dec
dec
loope
es
inc
fimull
out
mov
repnz
dec
sti
push
cmp
pop
pop
fsubrs
ficompl
ljmp
mov
adc
insl
call
push
mov
sti
mov
movsl
pop
addb
inc
add
jne
insl
sub
outsl
into
arpl
lods
aad
ror
aas
add
popa
mov
push
cmpsl
ljmp
adc
popa
loope
push
dec
jle
lock
and
mov
pop
mov
xchg
mov
cltd
test
cmp
mov
in
ret
loop
in
rorl
inc
pop
or
aaa
mull
js
inc
mov
inc
cmpsl
push
enter
testl
fldenv
sahf
add
sub
inc
cmpsb
shl
add
xor
or
out
xor
test
xchg
stos
test
fstpt
or
mov
das
fadd
scas
mov
mov
or
ficoms
fcoms
movsl
scas
je
mov
pop
pop
mov
lods
jae
std
ds
sbb
mov
cmp
fadds
xor
pop
mov
jge
nop
test
nop
xor
test
push
push
cltd
andb
push
push
push
stc
pushl
dec
in
push
adc
inc
and
jp,pn
test
test
cmovno
icebp
shl
push
insb
pop
arpl
mov
mov
sub
xchg
repz
sub
lods
inc
mov
out
inc
test
xor
mov
inc
cltd
mov
jns
add
outsb
divb
pop
adcb
push
sbb
imul
jnp
sub
cld
or
sti
mov
enter
jle
lahf
jae
xchg
adc
icebp
adc
pop
push
out
or
movsb
sub
mov
outsb
push
mov
cmp
jno
pop
dec
add
ja
xor
pop
xchg
pop
sub
inc
pop
stos
enter
jns
jmp
fimull
and
lea
mov
dec
or
rcrb
hlt
or
dec
shlb
int3
jbe
lds
cmp
stos
imul
sbb
repnz
cmp
hlt
xchg
shl
push
cwtl
jae
sarb
fists
lea
cmp
mov
sbb
cmc
or
sbb
mov
out
or
leave
pop
cmp
leave
shll
push
fs
lock
out
cltd
xor
out
stos
dec
pop
lahf
or
aas
test
dec
jle
push
jge
pop
repnz
cmpsl
push
nop
lret
imul
daa
cmp
lods
dec
xor
aaa
lods
jl
xchg
rcll
mov
shll
dec
or
aas
and
out
inc
aad
in
xchg
into
into
mov
jno
xor
xchg
sbb
inc
shl
loope
lret
pop
dec
inc
mov
out
mov
mov
push
and
shll
lcall
les
xcrypt-ofb
cmpsl
test
add
dec
clc
push
mov
xor
sbb
adc
fnstenv
decb
arpl
inc
movsb
ljmp
lea
mov
ljmp
jo
ja
inc
xchg
adc
loop
xchg
push
paddd
mov
mov
jmp
icebp
mov
fcmovnu
mov
mov
xchg
jnp
mov
lods
ja
cmp
push
aad
inc
sbb
fbld
mov
addr16
xchg
ds
xor
inc
sub
sbb
jecxz
cs
jmp
cltd
or
rcrb
dec
mov
xchg
sti
into
sbbl
rcll
movsb
add
mov
xchg
sti
cmpsl
popa
jg
loope
xchg
sti
push
xlat
adc
mov
and
push
mov
push
lock
dec
fstpt
lcall
mov
add
add
jmp
push
roll
push
xchg
sti
mov
pop
add
mov
sbb
mov
or
jae
jle
test
pop
int3
sbb
mov
adc
test
in
pop
ljmp
mov
into
xchg
push
pop
xchg
scas
mov
add
mov
loopne
dec
push
aaa
mov
lods
imul
mov
insl
in
dec
cmpsb
out
cmp
mov
xchg
cwtl
stos
cmpsb
xlat
stc
test
cmp
push
adc
ret
xor
cmp
jns
mov
loope
sahf
rcr
lea
aad
inc
and
test
in
xor
test
xchg
int
rorb
cmpb
cwtl
cmp
in
addr16
std
xchg
call
loop
inc
je
aad
xlat
movsl
add
add
or
cli
sbbl
popf
cmpsl
scas
jg
divl
enter
inc
out
mov
outsb
les
rep
sub
mov
cwtl
and
aaa
js
aas
mov
push
inc
jg
jo
dec
or
adc
rcrb
xor
sub
jno
pop
and
movhps
loopne
cmp
sub
cwtl
mov
in
negb
inc
and
mov
dec
fidivrl
pop
mov
lock
hlt
icebp
mov
ficompl
scas
adc
bound
iret
mov
out
cmp
test
outsl
xor
imul
idiv
call
cmp
fcoml
out
popl
mov
or
idivl
fs
repz
aam
scas
jecxz
jbe
xchg
jle
fsubp
lods
int3
stc
jb
outsb
mov
cmpb
je
ror
fnsave
call
jge
sbb
imul
pop
gs
mov
bound
push
and
or
push
pop
cmpsb
mov
sbb
xor
adc
out
mov
xchg
pop
and
add
lret
in
dec
or
icebp
add
xchg
repnz
bound
pop
mov
fimuls
jno
push
fs
bsr
shl
pop
fistl
push
das
dec
pop
jp
mov
mov
mov
stos
adc
movsl
or
leave
outsl
mov
jp
lods
add
push
filds
mov
es
cmp
dec
mov
cmp
arpl
pop
pop
idivb
xchg
lret
xor
jp
fldt
pop
and
dec
mov
xchg
cs
int3
or
fildl
ds
adc
out
fimull
push
int3
pop
pop
pop
cwtl
and
sub
loope
mov
add
sbbl
ret
sub
jo
mov
test
mov
lds
test
adc
test
push
fwait
push
ds
lcall
and
clc
mov
or
movsb
xchg
test
jbe
xlat
push
lock
popa
popa
push
out
sub
popa
std
pusha
cltd
pop
inc
xor
jmp
xchg
daa
loope
push
push
mov
fwait
std
std
mov
mov
pop
ds
addr16
in
cld
and
fnstsw
addr16
inc
popa
adc
jbe
out
and
pop
sub
xchg
lret
arpl
das
pushf
xchg
push
sub
xchg
or
jecxz
shlb
xchg
cmp
shlb
ja
dec
or
mov
mov
enter
jecxz
sub
leave
aas
adc
adc
mov
lcall
lret
sbbl
pop
inc
cmpsb
pop
fcmovnb
cmp
push
push
inc
and
pop
mov
push
push
das
and
shl
dec
inc
add
in
fisttpll
sub
sub
inc
mov
xchg
mov
cmp
aas
sbb
jecxz
dec
push
add
push
ficompl
sub
mov
cs
xorl
arpl
fildll
sbbb
jg
sbb
out
repz
xlat
fsts
sbb
pop
lea
cltd
pop
test
xchg
mov
add
xchg
aas
xlat
mov
call
fs
adc
adc
jns
rcll
test
jecxz
cld
push
in
cmpsl
adc
push
and
and
mov
mov
repz
or
xchg
icebp
and
dec
inc
out
andl
jo
outsl
into
scas
xchg
in
pushf
dec
push
insl
xor
inc
cwtl
pusha
lods
shlb
push
arpl
loopne
push
enter
dec
xchg
lcall
or
dec
cmpsl
int
inc
inc
cmpsb
dec
sbb
bound
add
shll
lahf
sub
or
lea
outsl
mov
hlt
movsb
xchg
sub
sbbl
sbb
ss
pop
pop
jmp
cld
icebp
mov
xchg
mov
or
inc
in
xchg
push
xor
shl
out
xchg
and
scas
inc
dec
dec
pushf
in
movsb
out
xor
je
ss
pop
insl
push
cmp
push
inc
mov
xor
addr16
or
xor
xor
icebp
sub
sbb
and
jl
lods
push
int
movb
xchg
pop
dec
jmp
push
sarl
xorb
addr16
icebp
aam
inc
cli
je
sahf
inc
popa
or
lret
cmc
pop
fstpl
inc
dec
push
and
mov
cmp
scas
dec
in
push
aas
sbb
dec
dec
outsl
fwait
push
int
mov
jmp
push
cli
inc
and
add
ja
add
pop
push
lret
int
xor
add
push
pop
mov
adc
mov
add
dec
add
jno
cli
aam
bound
sahf
ret
shl
jne
xchg
popf
jge
in
call
jo
movsb
xor
and
pop
xlat
scas
xor
imul
cmc
sarl
sub
pushf
inc
adc
push
push
mov
popf
popa
pop
jecxz
mov
stos
or
int3
cmc
int3
jno
test
xor
test
iret
xlat
mov
add
or
movsl
cmovo
jns
add
loop
cli
ja
cmpl
lret
enter
addr16
inc
out
fidivrs
aam
add
jmp
or
sub
mov
outsb
or
aam
cmp
fldenv
jne
nop
cmc
hlt
dec
add
shrb
rcll
push
ret
insl
sti
lahf
mov
mov
mov
in
adc
mov
and
inc
mov
add
jmp
sub
xor
loope
das
pop
xchg
adc
pop
loopne
cmp
push
loopne
je
cmp
jecxz
scas
xor
push
and
sub
mov
push
inc
out
pop
mov
xchg
mov
lods
mov
mov
add
es
out
and
pop
dec
xchg
or
inc
cmpb
mov
fcompl
sub
outsl
iret
cmp
pop
jbe
xlat
xor
inc
repz
and
mov
fdiv
push
xchg
pop
sub
ja
jns
inc
push
adc
mov
mov
out
mov
inc
jle
cmpsl
leave
or
sahf
dec
inc
xchg
cwtl
mov
and
jb
test
sub
and
cmp
enter
jo
inc
push
sarb
fdivrl
sub
add
ret
es
adc
add
pop
gs
sbb
and
in
aas
xchg
xorb
xor
pusha
jge
pop
lods
aaa
cltd
movl
imul
clc
and
mov
jge
jg
xchg
xchg
inc
and
shlb
imul
xlat
mov
mov
adc
xchg
or
int
popf
popa
dec
sbb
out
pop
jl
in
jo
ficomps
mov
leave
dec
pop
stc
pop
outsb
call
and
xorl
sub
sar
popa
and
jbe
pusha
loopne
xlat
sbb
jnp
loope
std
jbe
fmuls
lock
jg
push
loope
cli
push
pop
jp
add
test
jg
jne
cmpsb
jge
outsb
push
push
rcr
aaa
clc
sti
xlat
out
lock
xchg
cmp
fists
cmp
mov
xor
pusha
xor
lret
ret
ret
negb
cmpsl
adc
mov
das
adc
dec
das
inc
push
xlat
mov
adc
cmp
mov
nop
jmp
lea
mov
mov
push
mov
pop
test
mov
scas
push
addr16
popf
ss
pusha
insl
lods
push
inc
jnp
jbe
repz
push
test
jne
pop
xor
insl
mov
xchg
adc
cmpsl
push
mov
jb
lock
and
inc
fs
jg
jno
push
pop
roll
pop
inc
jnp
mov
mov
lcall
mov
and
mov
stos
subb
xor
push
mov
lock
in
ljmp
push
push
and
push
fwait
cmpsb
or
iret
lcall
sub
clc
icebp
mov
scas
insb
je
mov
stc
pop
repnz
scas
cmp
lret
stc
popl
mov
std
dec
sub
ret
pop
rcrb
cmp
rclb
ret
loopne
imul
mov
fstpl
lods
out
pop
das
mov
insb
dec
decl
popf
int3
and
and
pop
imul
dec
aad
fsubrp
repnz
cmp
pop
shr
out
roll
test
and
int3
pop
fmuls
mov
xor
inc
mov
sbb
stos
std
push
fs
cs
mov
ficompl
push
xor
jb
sub
sbb
jae
repnz
stc
jne
ss
arpl
push
lock
sti
dec
push
inc
inc
adc
dec
lret
pop
xor
movsl
mov
out
ds
dec
and
or
jnp
sbb
inc
les
push
cmp
lret
mull
insb
pop
test
sbb
sbb
int3
cmp
mov
lret
adc
mov
xchg
sub
cmp
add
shll
mov
cmp
hlt
mov
push
push
mov
sbb
stos
mov
mov
mov
sub
rol
ficomps
fcomps
mov
repz
fidivrs
into
adcl
lock
adc
lcall
repnz
add
adc
dec
xchg
jl
mov
mov
gs
xor
mov
xor
push
in
aas
imul
out
notb
inc
jmp
addb
mov
sti
lret
popf
je
jmp
sub
loop
mov
cs
sub
stos
cmp
cs
jo
dec
pop
scas
pushf
mov
fbld
cmp
ds
je
icebp
pop
mov
out
clc
mov
ret
aas
adc
sub
push
lret
sbb
jge
pop
or
movsb
jmp
rcrb
xor
out
mov
xor
pop
mov
repz
cmp
mov
jecxz
add
jnp
jns
lret
xchg
pushf
sbb
dec
les
mov
popa
and
mov
sbb
shlb
bound
mov
js
ja
xchg
xchg
jo
jnp
pop
cmp
testb
sahf
rorl
xlat
xor
lret
mov
in
add
pop
pop
test
jne
test
add
fwait
push
add
std
mov
lds
js
rolb
dec
mov
cltd
fs
add
cmp
inc
shll
or
or
cmp
hlt
or
imul
mov
testb
sbb
sbb
lds
pop
pop
shlb
in
sbb
fidivrs
pop
cmp
jl
inc
lods
les
cmp
xchg
sarb
fistps
lods
lret
and
and
dec
lcall
mov
xchg
clc
jne
or
pop
test
aam
sub
das
inc
in
popf
in
andl
pop
filds
pop
ja
and
fcmovu
add
dec
add
leave
sbb
adc
xchg
push
bound
jecxz
sbb
in
stos
xchg
jg
mov
test
adc
sbb
and
test
xor
mov
or
arpl
push
incl
mov
and
gs
jb
lods
or
sbb
call
pop
dec
dec
jle
jae
cltd
leave
xchg
jb
or
and
in
xchg
jo
mov
cs
xchg
xchg
int3
sbb
je
sub
sbb
adc
lret
dec
mov
mov
lods
mov
shll
jp
cltd
fwait
push
mov
jge
xchg
enter
mov
insl
cmp
arpl
addr16
xchg
jbe
popf
fiadds
xor
sbb
xor
popf
mov
hlt
fists
out
push
in
fisttpll
mov
xchg
mov
aas
fldenv
pop
sbb
xor
cmpsl
fxch
loope
sbb
lea
bound
xor
dec
adc
call
cmp
mov
cwtl
mov
stos
lcall
repnz
cwtl
mov
mov
add
mov
into
mov
es
push
in
test
stos
mov
into
push
addr16
push
loop
cmp
jge
vpaddsb
pop
jne
jbe
add
js
popf
sbb
ja
sbb
fucomip
je
enter
pusha
cwtl
sbb
mov
call
iret
jbe
ja
and
test
fs
insl
es
cmp
incl
data16
lea
inc
mov
and
mov
xor
out
movsl
or
sarl
dec
adc
cltd
cmpsb
enter
fisttps
sbb
ret
addr16
add
into
rcl
test
in
xor
xor
loopne
mov
out
mov
sti
mov
sub
mov
outsl
or
into
xchg
sub
fwait
iret
lock
jmp
xor
cmpsl
aam
dec
in
arpl
sbb
push
mov
lods
gs
push
popf
inc
adc
xor
mov
push
mov
test
mov
mov
push
inc
lret
mov
xor
ret
pop
and
lcall
stos
adc
jnp
outsl
lock
push
arpl
sti
lds
data16
pop
push
push
inc
loop
pop
and
fdivl
imul
mov
mov
outsb
lret
stos
test
loope
ret
sbb
cwtl
pop
fiadds
jmp
xchg
add
mov
inc
xor
movsb
xorb
jno
sbb
nop
push
dec
mov
mov
push
imul
xorl
adc
dec
imul
pop
jle
popa
cs
cmp
mov
mov
sbb
or
add
push
inc
mov
ljmp
cmc
jns
dec
mov
mov
stc
insl
stos
aad
mov
js
inc
arpl
mov
push
mov
push
push
stos
pusha
sarb
sbb
testb
into
inc
sub
ja
xor
xchg
inc
dec
or
mov
add
sbb
shl
jae
fcoms
sbb
xchg
fdivrp
and
and
fsubs
scas
outsb
or
test
out
lock
push
pop
adc
repz
or
jo
pop
adc
and
cltd
adc
aas
mov
in
outsb
in
xchg
jl
rcrb
flds
jp
iret
mov
fs
pop
arpl
fstps
cmp
lret
xchg
outsl
jecxz
xor
hlt
dec
movl
loopne
cmp
mov
jnp
push
mov
pop
xor
cmp
ja
mov
pop
int3
dec
inc
xchg
icebp
xchg
movb
mov
out
enter
adc
insb
in
xchg
shr
outsl
loopne
scas
xor
pop
test
sub
bound
in
cmp
adc
test
pop
xchg
test
out
aas
cmp
jb
fs
shl
jno
mov
test
mov
xor
fdivrs
or
mov
push
fldl
outsl
lods
push
insb
add
xor
inc
leave
jno
sahf
and
imul
mov
outsl
dec
cmp
fsubl
ja
cmp
mov
sub
icebp
sub
and
movsl
sub
scas
mov
adc
inc
adc
subl
xor
sarl
mov
mov
popf
adc
scas
into
aad
xchg
mov
jno
xchg
jne
add
jne
rcrb
push
aam
test
stos
push
add
add
pop
js
or
adc
lcall
adc
jg
pop
and
push
sub
mov
js
dec
mov
push
xchg
data16
mov
cs
or
pop
insb
cmc
scas
movsl
jno
and
icebp
mov
inc
ret
clc
xchg
sbb
popf
inc
add
sub
stos
out
ljmp
and
inc
push
lock
nop
aaa
ret
add
jae
insb
cmpsb
rol
ja
add
daa
out
push
jbe
and
ret
cmp
test
dec
fadd
mov
xchg
jns
jmp
or
dec
cmp
fstps
xor
jp
sti
nop
popf
popf
clc
inc
pop
ret
xchg
iret
inc
sub
add
xor
pushf
imul
test
or
lret
mov
inc
call
imul
inc
push
xor
aaa
push
mov
leave
sbb
clc
sarb
jb
mov
pop
cs
jmp
sub
xor
fstpl
adc
mov
je
cmpsb
mov
ja
loope
or
mov
outsl
inc
sub
cmc
xchg
mov
loope
dec
mov
imul
lods
xchg
sub
je
cmc
stc
dec
icebp
mov
jecxz
popa
repnz
jecxz
shll
clc
insb
jge
jae,pt
add
test
sub
fldenv
in
xchg
pop
mov
fnsave
aaa
sub
adc
out
test
pop
inc
xchg
add
xchg
dec
xchg
stc
xchg
and
mov
sarb
hlt
mov
sbb
pop
push
rcrb
in
out
scas
add
cmp
xchg
fptan
scas
inc
scas
jne
cmp
fisubrs
sbb
jp
into
mov
xlat
jp
insb
jb
jle
dec
and
sbb
ret
xor
add
lcall
ret
mov
xor
add
test
leave
xchg
sarb
sti
mov
insb
pop
sar
mov
jecxz
dec
mov
and
shll
adcl
push
dec
lds
push
add
jmp
xchg
pop
pop
sbb
push
mov
mov
push
adc
stc
push
jmp
shlb
jae
and
std
sbb
lahf
loope
sar
pop
lea
test
lods
fstl
orl
jle
mov
mov
cli
test
lds
aad
loop
mov
jp
push
std
notb
push
or
in
and
push
gs
cli
sbb
cli
imul
mov
mov
mov
repnz
lret
mov
cmp
mov
jo
fistl
inc
popf
mov
push
aas
das
pop
mov
and
fstp
imull
cmpsb
movsl
sub
add
add
pop
out
mov
pop
not
das
out
shr
or
lods
fistpll
push
pusha
sbb
cmc
stc
rcr
dec
jno
push
insb
lcall
push
xchg
adc
mov
lahf
jne
insb
add
aad
in
dec
or
fwait
stos
loop
cwtl
jecxz
test
pushf
jnp
cmpsb
std
std
adc
push
scas
push
test
pop
shrb
sub
dec
into
add
cmp
repz
dec
repnz
xchg
lahf
pop
cmp
incb
pop
pop
push
aas
inc
ljmp
adc
mov
popa
out
cmp
stc
lods
mov
xor
rolb
in
adc
adc
addr16
fstps
dec
dec
mov
mov
std
xcrypt-cfb
cmpsl
mov
sub
test
mov
lock
mov
and
push
cmpsb
xor
xor
push
jmp
mov
mov
std
into
push
nop
mov
lods
repnz
inc
dec
mov
mov
out
pop
lock
and
mov
sbb
mov
xor
lock
sbb
push
mov
test
jns
mov
push
pop
insb
add
loopne
xlat
lea
cmp
les
add
fsts
into
xchg
mov
and
lock
mov
pusha
fidivs
into
cmpsl
inc
mov
mov
jg
fidivrl
mov
imulb
es
cwtl
data16
pop
mov
cmp
sub
and
push
scas
cld
add
or
dec
rorb
fcoml
stos
movsl
jg
cmp
sub
cmp
arpl
pop
pop
lahf
pop
sub
nop
outsl
inc
dec
repz
ds
xor
mov
mov
sub
out
ret
xchg
adc
dec
dec
pop
movsl
out
out
pop
pop
inc
mov
out
push
in
jnp
sbb
add
adc
fstpl
push
push
repnz
xchg
cmp
dec
pop
jle
sub
aaa
mov
lock
insb
or
stc
aaa
fcmovu
popa
movsb
mov
outsl
shrb
inc
cmp
scas
hlt
dec
je
xor
and
xchg
rorb
push
repnz
pop
and
xchg
push
pusha
cmp
lods
xor
pop
mov
push
jnp
in
add
or
push
jmp
sbb
stc
pop
add
movsl
aaa
out
or
jne
or
cld
sub
push
lea
enter
movsb
mov
mov
insl
cmpsb
add
dec
std
pop
rcr
call
mov
push
sar
or
lea
in
sub
inc
nop
in
jae
leave
sidtl
fwait
add
int3
sbb
adc
mov
fnstenv
mov
inc
movsb
lea
insl
dec
popa
insl
aaa
add
popa
fsubrl
daa
sbb
movsb
jl
mov
sarb
and
ret
xor
shr
mov
jne
test
mov
inc
xor
sbb
inc
dec
out
cmp
orb
sbb
add
sbb
repnz
jle,pn
mov
mov
sbb
push
add
inc
jno
insb
sti
xor
sub
push
stos
ror
sarb
insl
and
in
repnz
idivl
xchg
pop
pop
mov
push
in
mov
outsb
sub
xchg
and
testb
insb
lea
insb
sti
push
jne
jne
push
leave
gs
out
les
enter
inc
jl
xchg
mov
pop
imul
cmp
push
fsubs
cmc
cld
inc
fildll
push
pop
mov
jne
or
and
mov
dec
mov
dec
push
int
ss
lret
flds
call
add
out
jns
mov
mov
push
aad
js
iret
mov
pop
xor
ret
xchg
cmpsl
hlt
addr16
bound
sbb
dec
iret
imul
xchg
sbb
mov
push
daa
insl
mov
xchg
mov
nop
shll
sti
dec
inc
sarl
xor
cltd
outsl
mov
add
push
mov
push
sub
pop
out
ja
mov
or
push
jmp
mov
scas
scas
jmp
cwtl
stos
addl
outsl
add
movsb
sub
push
adc
adc
xor
les
xchg
in
out
out
sbb
hlt
and
pusha
sbb
lea
out
mov
mov
and
out
fdivrs
inc
add
insl
pusha
add
mov
imul
pop
sbb
mov
idiv
mov
jne
pop
js
dec
push
mov
pop
sub
mov
lock
or
cmp
or
jo
out
or
daa
and
push
das
xor
popf
aad
imul
and
test
aad
les
shl
push
add
push
pop
pop
and
push
mov
in
mov
xchg
push
cmp
ss
inc
sbb
int
mov
or
and
mov
lock
imul
movsb
pop
lret
add
pushf
mov
insl
xor
movsw
sbb
add
loope
mov
xor
adc
sbb
ljmp
aaa
sub
push
nop
add
les
xchg
pop
daa
cld
in
test
int3
daa
sub
push
test
mov
cmpsl
mov
incb
mov
pushf
push
xchg
je
imul
push
popf
outsb
js
jmp
stc
test
add
jg
sub
xchg
pop
cmpsb
test
adc
add
shrl
and
adc
jl
imul
insl
jno
adc
cmp
popa
cmp
mov
xor
je
inc
jmp
adc
pop
add
js
adc
add
sub
repz
and
pop
repnz
das
sbb
mov
stc
movb
inc
adc
mov
mov
dec
add
xor
les
mov
sar
in
mov
lods
je
ficoms
sti
mov
into
pusha
xchg
call
mov
daa
out
xchg
jnp
fistpll
sub
pop
loope
add
and
cmpsl
or
mov
notl
loope
xchg
daa
fldenv
sub
push
aam
push
das
sbb
popf
xchg
jno
out
dec
lds
lahf
lea
pop
adc
jge
test
mov
add
ljmp
jbe
cmpsb
mov
sbb
imul
fsubrs
add
adc
or
adc
fidivs
mov
jnp
mov
cmp
push
popf
sub
loop
pop
pop
movsl
mov
adc
mov
or
pop
mov
add
int3
sbbb
push
dec
mov
imul
jmp
dec
add
and
push
mov
xor
cmc
fdivl
jecxz
leave
divl
jmp
adc
add
in
pop
xor
loop
mov
data16
jo
mov
std
cli
pushf
pop
xchg
dec
insl
cmp
bound
iret
adc
aas
out
in
lcall
or
imul
pusha
push
repnz
fadd
jle
pop
push
jl
mov
inc
and
sub
cld
jne
pop
adc
jge
testb
adc
push
in
cmp
pusha
out
repnz
faddl
ss
mov
cmpsl
pushf
mov
mov
xor
xor
pop
movsl
int3
loop
fmul
pop
jl
xchg
loopne
mov
mov
push
fwait
or
or
imul
ror
dec
mov
rcr
mov
lcall
xchg
jnp
add
fstl
enter
loop
sub
rcrb
jns
dec
push
dec
sbb
int3
test
dec
fistpll
jl
sbb
mov
scas
sbb
scas
jmp
ds
xor
inc
sbb
ljmp
shl
rorl
faddl
jbe
cmp
repnz
sbb
nop
cltd
xorb
cltd
push
gs
cmp
ficompl
rcll
mov
adc
and
push
sub
cmc
fldt
ljmp
sbb
push
ret
jae
mov
xor
sbb
sahf
stos
lock
push
cmc
divl
xchg
std
mov
test
std
jle
mov
sub
push
pusha
push
jae
xchg
cmpsl
pop
aas
mov
mov
or
fwait
imul
stos
inc
add
push
mov
jne
in
dec
fwait
jp
aad
dec
cmp
push
xchg
sbb
in
push
lods
jle
xchg
stos
or
cmc
mov
or
dec
lret
dec
or
xor
adc
xchg
movsb
std
arpl
outsb
test
stos
jae
call
pop
dec
xor
push
mov
movsb
shlb
inc
ret
jecxz
in
cwtl
aaa
ljmp
in
sbb
lcall
mov
jb
shrl
push
out
and
aas
push
or
loope
testb
es
mov
or
dec
fwait
ljmp
cmpsb
mov
push
jno
push
sbb
js
add
insb
cmpsl
jecxz
push
pop
or
int3
lret
push
scas
pop
cmp
dec
jbe
imul
mov
xchg
cmc
shl
ss
andl
fcompl
push
lock
cmc
shrb
push
pop
mov
movsb
xchg
stos
jmp
fs
std
xor
rclb
mov
fmulp
and
lret
out
gs
test
loope
fbstp
js
mov
sub
xor
mov
push
sub
and
ljmp
mov
or
cld
jne
xchg
mov
ficoml
jg
dec
cmp
push
lcall
cmp
and
bound
xchg
aad
xor
sti
int3
and
jmp
cld
add
test
lds
lods
idivb
sti
sbb
jno
jbe
jne
dec
out
testl
mov
mov
test
cmpsb
add
js
jg
dec
push
mov
cmp
ljmp
jb
loopne
xor
and
dec
inc
dec
pushf
push
stc
cmp
jno
jmp
mov
jbe
xchg
cli
fidivl
push
lods
cmpsb
cmc
push
jl
inc
xchg
jnp
fdivr
repnz
stos
mov
test
jg
dec
arpl
lret
cmp
add
movsl
mov
or
adc
out
fwait
jmp
mov
xorl
mov
adc
mov
pop
shr
int
lahf
or
dec
add
mov
hlt
clc
outsl
or
inc
inc
push
mov
push
jbe
lret
inc
sbb
or
fstpl
mov
jo
cwtl
sbb
cmp
pop
ds
shr
imul
orl
sti
iret
ficoml
and
jl
inc
dec
inc
adc
sub
xchg
cwtl
mov
or
lods
out
sbb
insl
push
stc
std
aaa
fstpl
imul
dec
mov
cmpsl
ret
adc
sti
iret
jl
outsl
mov
dec
and
dec
and
pop
push
imul
mov
sti
fs
dec
cmp
and
pop
cmp
push
loop
out
sub
xlat
xchg
mov
test
mov
cld
push
push
imul
mov
out
insb
rclb
push
mov
outsb
push
in
test
addw
subb
pop
rcrb
das
sbb
jns
pop
cmp
sub
or
sub
gs
js
sti
xorl
push
cld
negl
scas
adc
cmp
cmp
add
cwtl
xchg
xlat
jb
inc
stc
ror
in
in
mov
das
ret
or
hlt
leave
cmp
fs
imul
push
dec
and
adc
call
iret
sub
push
add
push
add
mov
es
sbbb
dec
pop
xchg
nop
shlb
xchg
mov
mov
div
inc
pop
xchg
dec
jns
int3
addr16
push
mov
sub
push
ror
mov
push
add
lcall
repnz
add
pop
mov
mov
in
dec
pop
test
push
sbb
pop
xor
add
mov
orb
xor
pop
scas
idivl
mull
mov
shl
dec
pop
data16
repz
cld
add
addr16
mov
jbe
jbe
xchg
cwtl
mov
call
int3
xor
pop
jl
pop
lods
out
loope
xchg
lahf
mov
das
aam
int
jl
pusha
cli
ja
paddw
mov
mov
subl
rcrl
lods
ss
xor
push
add
inc
das
add
jnp
xor
adc
stc
and
leave
das
sbb
cmp
cli
fisubrl
popf
xor
enter
cs
and
mov
test
ljmp
insl
push
jbe
mov
sub
mov
add
leave
out
inc
sahf
xchg
adc
xorl
add
inc
mov
and
mov
pop
pop
pop
ss
insb
es
fbld
pushf
mov
into
cmp
test
cmp
mov
imul
pushf
or
pushl
xchg
push
mov
cmp
in
pop
pushf
int3
mov
push
shrl
add
add
xchg
xor
push
imulb
jno
sbb
filds
or
inc
icebp
into
xlat
sub
and
mov
fsubrl
mov
add
mov
fdivrp
cmpsl
shll
adc
or
ret
in
mov
sbb
adc
xchg
push
cltd
dec
push
and
or
loope
add
inc
fsubl
popf
dec
xchg
inc
inc
rcll
imul
jge
sahf
loopne
lods
mov
dec
gs
fwait
int
stos
sub
outsl
movsl
xchg
rcll
push
sbb
adc
sahf
mov
push
lods
cltd
mov
test
fadds
aaa
outsl
add
xor
cmc
pushf
call
jg
pop
jae
cmpsl
ret
mov
xlat
test
jnp
clc
out
push
cmp
notl
in
add
sahf
cmc
mov
ret
pop
push
cmp
inc
fisubl
mov
out
bound
xchg
insb
lock
jb
out
lock
outsl
sub
pop
xchg
jae
xchg
ficoml
pop
xchg
fwait
sbb
insl
add
or
ja
fdivr
lods
dec
pop
stos
adc
cwtl
mov
mov
sbb
mov
inc
dec
xor
stos
nop
mov
cwtl
xor
mov
dec
and
fdivrl
call
outsl
or
rcrb
mov
mov
xchg
jae
mov
add
jge
push
stos
lahf
jmp
rcrl
mov
inc
jb
sbb
sbb
rcll
out
lea
or
hlt
mov
dec
insb
std
sbb
loope
push
fsubrs
movsl
and
adc
icebp
sub
sbb
cltd
stos
clc
jg
pop
pushf
push
and
bound
not
mov
cmp
js
pop
cmp
push
adc
fwait
mov
das
xchg
mov
clc
aam
or
cld
lds
xor
loope
or
sbbl
fistpll
lods
fptan
and
fs
cmp
lods
test
pop
jbe
lea
test
ret
pop
in
inc
mov
into
mov
and
inc
imul
add
sub
icebp
daa
fcmovnb
les
sarb
hlt
pop
pop
mov
pop
scas
cmp
xor
push
xchg
mov
inc
jb
fmulp
addr16
or
adc
mov
and
pop
xchg
div
push
out
in
mov
ret
shll
outsb
jge
insb
cmpb
xchg
fidivl
mov
xor
fsubrl
push
std
or
out
testb
pop
movsl
and
jl
xor
cld
dec
in
push
mov
hlt
mov
dec
nop
pushl
xor
mov
sbb
cltd
cmp
sbb
mov
xor
xchg
addr16
fs
int
and
lds
fucom
imul
push
out
imul
push
xor
sub
xchg
jne
loopne
stos
or
mov
popf
je
inc
or
inc
movsb
icebp
cmp
imul
addl
or
enter
call
xor
lds
jae
dec
jo
xor
add
push
mov
ds
xor
imulb
int
push
mov
pop
or
fdivrs
stos
jb
scas
shrl
adc
lret
mov
clc
sub
push
mov
push
cmp
sahf
fld
jb
loope
aad
lret
pop
xchg
hlt
jbe
inc
js
cs
mov
mov
cmovp
ja
loope,pt
pop
inc
push
add
addl
add
in
inc
imul
sbb
xchg
cmp
xor
mov
adc
adc
dec
cli
push
cld
into
pusha
aad
fmull
jecxz
push
adc
xlat
dec
push
mov
cvtdq2ps
mov
lds
cmpsb
mov
std
add
arpl
mov
add
sub
jo
subb
cmp
imul
call
inc
push
pop
ret
adc
cld
lock
dec
mov
enter
inc
inc
aam
movsl
es
mov
insb
frstor
mov
dec
adc
sbb
testl
sub
fildl
insl
fstpl
sub
leave
push
repnz
out
mov
fwait
jmp
cmp
outsl
push
cmp
cld
ret
iret
loop
pop
xchg
out
ja
or
call
push
xor
push
xor
test
mov
js
dec
xchg
daa
sub
push
xor
test
ret
ljmp
cltd
aad
sbb
fnsave
add
lahf
jg
enter
inc
inc
pushf
mov
imull
mov
pop
xor
testl
test
bound
push
xor
test
dec
xor
mov
stos
paddw
sarb
fucomi
push
pushl
pop
xor
les
adc
adc
push
daa
decb
mov
dec
mov
in
int
adc
pop
imul
mov
lds
out
mov
xor
cmp
imul
mov
pushf
xchg
popl
fxch
ficomps
cmpsb
xor
mov
ret
gs
fdivl
and
jecxz
insl
xor
xchg
arpl
sub
sbb
jno
arpl
roll
fdivrs
mov
sbb
xor
stos
out
mov
outsb
scas
fidivl
outsl
or
movsl
cwtl
leave
subb
imul
pop
cmp
sub
xchg
mov
repz
push
push
dec
lods
mov
mov
cmp
andb
std
mov
mov
and
xlat
test
mov
in
imul
rclb
in
push
iret
sub
mov
das
add
in
iret
daa
cmpsb
in
xor
out
outsb
hlt
shlb
cmpsl
cli
sbb
in
lods
loopne
movsb
jge
subl
sbb
add
lea
jecxz
cmc
les
ret
inc
jle
sbb
cmp
lds
imul
imul
fsubrs
inc
inc
fsubs
and
out
hlt
mov
pop
fildl
xchg
mov
adc
cmpsl
push
push
iret
cmpsb
sub
cltd
cli
lods
je
dec
pop
and
fisubs
or
adc
sbb
xchg
adc
sub
inc
pusha
stos
imul
repz
dec
xchg
sbb
lea
cmpsl
push
xchg
mov
addr16
movsl
mov
and
jecxz
pop
cmp
pop
jae
jb
push
xchg
mov
shll
ss
mov
cmp
cmp
testl
mov
mov
stos
sbb
imul
loopne
icebp
or
lock
push
pop
fisttpll
sub
mov
sub
movb
clc
outsl
or
stos
aaa
cs
add
mov
ja
sti
aas
push
cmpb
and
movsl
clc
dec
adc
add
cmp
and
fcmovb
cmp
push
xchg
jbe
addr16
sub
mov
rep
jecxz
cltd
push
cmp
push
pop
sarb
arpl
in
cmc
test
es
into
fisubl
aam
or
dec
lods
push
enter
cmp
jg
or
stc
test
mov
sahf
pop
insb
sbb
mov
gs
stos
jle
lea
imul
lahf
mov
mov
lods
addr16
mov
imul
mov
lret
movups
jns
es
cltd
arpl
loopne
pop
pop
and
jmp
ds
lret
mov
aad
jno
rcll
out
repz
or
xchg
inc
xlat
mov
out
xor
xchg
ret
push
in
orb
int3
xchg
lcall
xchg
int3
add
sub
iret
dec
mov
daa
sub
sub
outsl
mov
mov
sbb
or
fsubr
mov
pop
xchg
mov
inc
mov
out
daa
push
add
add
js,pn
das
loopne
std
clc
dec
inc
mov
jmp
sti
andb
or
dec
jae
fistl
or
dec
icebp
jae
outsl
pop
add
sbb
les
out
lcall
and
rolb
or
inc
and
pop
cmpsl
bound
icebp
mov
mov
sbb
lcall
aad
mov
lds
xor
mov
in
sbbb
jnp
pop
sub
shrl
dec
xchg
aam
mov
cmp
daa
inc
sub
icebp
cmpsb
or
xlat
bound
sub
arpl
jle
inc
sti
cwtl
int3
bnd
cmpsl
lock
jecxz
mov
in
mov
ror
inc
icebp
aam
into
and
test
xchg
aas
inc
cmp
in
inc
scas
insb
dec
xchg
sbb
lds
loope
mov
shl
das
pop
data16
dec
lea
pop
ljmp
mov
mov
ret
sub
shlb
lahf
pop
stos
cmp
inc
roll
add
loopne
adc
sub
enter
dec
push
fcoms
outsb
loope
dec
mov
mov
or
repz
xor
imul
dec
sub
cli
int
jmp
push
adc
scas
sbb
push
in
clc
mov
jb
inc
adcb
ds
mov
lods
cli
mov
lahf
inc
mov
push
jle
mov
pop
mov
imul
jne
mov
adc
mov
cmp
fwait
and
rcrl
dec
sub
mov
popa
inc
jno
scas
mov
sub
enter
iret
cmp
and
jmp
mov
push
dec
sbb
cmp
sub
leave
mov
addr16
fdivrl
mov
lock
push
add
push
out
xchg
xor
cmp
cmc
xchg
arpl
lods
jmp
ja
xor
popa
xchg
leave
push
pop
in
jne
xor
lods
or
lahf
cltd
insl
or
sbb
inc
mov
adc
icebp
push
in
daa
adc
xchg
daa
sub
cmc
adc
xchg
stos
xor
aas
adc
cmpsl
xor
mov
cmc
adc
insb
mov
mov
in
inc
ljmp
mov
popf
mov
mov
pop
aas
push
add
push
insb
sti
inc
mov
lods
cli
mov
or
jmp
jmp
mov
adc
xor
imul
xlat
negb
inc
mov
insl
out
jge
inc
loope
pop
movsl
adcl
mov
dec
cwtl
lahf
inc
test
sub
out
fstpt
jg,pn
pop
out
add
jns
cmp
jne
movsl
jne
es
jg
mov
out
out
jne
fmuls
mov
inc
sub
sub
shl
inc
out
ficoms
rcrl
push
sbb
dec
sbb
leave
mov
add
fisubrl
out
leave
in
jne
imul
aam
icebp
push
sbb
into
hlt
aad
enter
mov
out
fcomps
add
mov
scas
push
hlt
pop
xor
mov
hlt
pop
repz
push
fimuls
inc
mov
and
mov
fsubs
mov
dec
dec
lret
clc
jns
adc
xchg
jecxz
rcrb
pop
btc
or
data16
ret
mov
fucomip
scas
pop
insb
xlat
sbb
sbb
icebp
or
fistpll
or
lcall
inc
mov
jp
sbb
adc
jmp
loope
xor
or
cmpsl
cmp
leave
push
inc
pusha
repz
mov
aad
push
scas
imul
aaa
jno
aam
or
mov
jae
adc
xor
inc
or
fs
nopl
fcom
mov
or
add
aaa
test
aam
add
dec
rcll
shlb
fbstp
xchg
pop
xchg
mov
insb
insb
jne
jle
movsl
sbb
lret
lcall
push
inc
mov
aas
jne
mov
fidivrl
pop
js
pop
or
pop
out
xchg
bound
ret
notl
pop
and
dec
jbe
sbb
pop
mov
mov
out
xlat
mov
test
sbb
mov
dec
sbb
int
push
cmp
icebp
adc
mov
jo
inc
mov
aaa
sti
mov
jns
pop
mov
inc
xchg
xchg
mov
dec
aam
mov
std
lods
es
xchg
cmp
mov
mov
sub
xchg
shlb
fs
xchg
std
mov
out
imul
dec
test
mulb
rcrl
push
dec
pop
notb
pushf
addl
pop
mov
clc
ljmp
push
pop
inc
mov
sbb
pop
push
xorb
dec
scas
stos
jp
out
jg
xlat
inc
mov
xor
xchg
pop
push
inc
cmpsl
hlt
mov
movsl
pop
add
mov
xchg
and
andl
and
inc
cmp
xlat
sarl
shrb
dec
add
adc
andl
mov
and
out
sbb
pop
mov
add
test
repnz
add
sub
add
cld
dec
xchg
mov
lock
jbe
or
fcomps
mov
test
dec
mov
xchg
lea
hlt
cwtl
xchg
fldenv
pop
add
dec
mov
mov
push
mov
mov
jecxz
and
push
jnp
xchg
daa
popl
es
cmp
mov
push
pop
sub
push
mov
mov
arpl
outsl
aam
leave
xchg
add
sti
cs
aad
pop
adc
rcll
data16
sub
jne
ss
test
xchg
bsr
adcb
sub
ret
inc
lret
dec
mov
daa
fnstcw
inc
inc
divb
xor
jp
test
test
fs
jae
movsl
push
and
xchg
add
sub
push
cs
je
aad
insl
jp
iret
ja
xor
adc
sub
mov
mov
sub
jae
add
and
dec
test
mov
jno
jne
call
add
pop
push
sub
dec
xor
ljmp
pop
dec
adc
jmp
out
mov
stos
sbb
pop
mov
lock
pop
sub
and
sbb
into
xorl
in
adc
hlt
mov
les
scas
sbb
adcl
push
sarl
lds
lcall
xchg
adcb
movsb
mov
xchg
xlat
cmp
pop
mov
loopne
adcl
mov
jg
sarb
popa
loopne
ljmp
mov
daa
fiaddl
in
ljmp
push
push
mov
xchg
jno
inc
mov
repnz
insl
adc
cmc
push
inc
adc
movsb
sub
imul
fwait
mov
inc
adc
inc
pop
insb
inc
jp
lods
lret
xchg
sbb
mov
cld
data16
mov
jbe
int
std
xlat
cmc
std
rep
enter
pushl
push
pushf
lea
les
ljmp
or
testl
push
sti
jb
cmc
xchg
fidivrs
aas
cmp
data16
scas
sarb
jl
mov
xchg
sahf
push
pusha
repz
aad
scas
pop
cmove
leave
and
stos
ja
or
aas
pop
xchg
lods
lahf
xor
xlat
stos
sbb
mov
lods
repz
outsb
push
sbb
cwtl
inc
out
push
pop
test
cli
add
mov
sbb
or
aaa
loope
push
cwtd
arpl
dec
std
and
out
push
mov
adc
pop
fst
clc
jno
push
mov
sbb
divb
sub
mov
orl
adc
and
jo
in
mov
jmp
outsl
cmp
dec
mov
fcoml
fidivrl
jne
outsl
lahf
rolb
sub
outsb
xchg
mov
std
jne
fstl
inc
sbb
xchg
das
fld
dec
testb
mov
loope
stos
jns
jnp
outsb
testl
mov
int3
addr16
sti
test
sub
mov
fadd
push
cld
insb
add
add
pop
push
cltd
inc
or
stc
adc
and
mov
jnp
jle
mov
mov
cmp
pop
cmc
loopne
lret
fildl
xor
mov
aaa
in
test
pop
and
inc
daa
lahf
ret
inc
sbb
orb
notl
in
sbbl
or
mov
mov
fisttpl
mov
adc
mov
xchg
fnsave
in
jbe
or
and
mov
dec
popf
ds
mov
sub
ja
sar
int
jge
dec
mov
stc
lret
in
ja
pop
ss
push
cmp
inc
outsb
in
loop
repnz
mov
in
mov
lret
scas
or
clc
stos
xor
jnp
jge
and
cmp
jecxz
sahf
dec
cmp
andb
mov
in
sbb
dec
mov
fistps
movsl
repz
adc
lret
cmp
adc
fildll
and
mov
jo
shrl
imul
aas
pop
dec
insb
cmp
sub
cmpsl
lea
loopne
sti
cmp
sahf
mov
add
push
push
cmp
in
inc
aas
arpl
jae
ret
sti
movsl
jo
sub
push
pop
in
hlt
mov
sbb
in
lret
std
mov
adcl
out
outsl
add
icebp
sahf
xchg
or
scas
jle
int
cmp
adc
and
mov
dec
into
nopl
add
stos
add
xor
and
inc
mov
mov
jne
jae
out
pop
push
cs
adc
cmp
jmp
out
cmp
lret
call
add
and
mov
stos
adc
mov
sbb
mov
aad
test
xchg
push
xchg
mov
daa
xor
outsl
loope
adc
cwtl
cmp
shlb
and
out
mov
inc
movsl
bound
cmpsb
fs
mov
addb
lods
and
ret
aaa
and
lock
pop
push
popf
sub
loopne
jle
adc
push
lds
dec
sbb
aaa
arpl
mov
cwtl
aas
adc
js
and
dec
sub
fistps
popa
pop
insb
fldcw
cmpsl
outsl
xor
or
ret
push
in
push
inc
mov
xor
mov
shl
xchg
push
clc
xor
jnp
mov
lret
or
sarl
nop
push
mov
cmp
and
dec
movsb
and
inc
sti
fimuls
lahf
imull
inc
pop
pop
out
shl
jle
pop
add
xchg
mov
test
sub
dec
cmp
in
loopne
test
push
xchg
inc
push
adcl
imul
push
sub
add
jb
fnsave
fwait
aaa
add
mov
fcoml
jmp
movsb
cmc
stos
sbb
mov
sbb
lcall
cmp
or
mov
in
test
stos
pop
inc
push
sub
ja
mov
adc
mov
cmp
popf
mov
xchg
mov
push
push
lea
repnz
int3
out
ds
pop
ljmp
mov
clc
mov
cmp
sti
adc
cmp
bound
mov
je
lods
xchg
push
test
push
loop
fnsave
dec
dec
mov
cli
mov
aas
jg
icebp
mov
cmpsb
ljmp
sti
sub
fwait
call
mov
pop
mov
xor
fiaddl
mov
mov
sahf
test
lahf
mov
jge
pop
xchg
add
jl
push
dec
test
lret
fmull
cmp
pop
iret
xchg
push
mov
in
lock
xchg
cmp
push
stc
aad
sub
ret
inc
mov
sbb
scas
mov
dec
mov
xchg
sub
bound
push
adcb
call
jae
daa
shll
lea
xchg
pop
in
adc
mov
mov
insb
std
jge
mov
pop
fcmovnbe
xor
negb
push
iret
lahf
adc
inc
adc
adc
outsl
mov
rclb
and
addr16
and
or
dec
inc
popl
lods
pop
push
dec
cld
push
dec
stos
pop
mov
push
push
cmp
outsb
loopne
and
or
fwait
rorl
lcall
adc
sarb
and
or
mov
inc
dec
data16
xchg
sarb
mov
xor
add
xchg
or
push
xchg
dec
stos
aad
mov
sub
aad
cli
ffree
push
mov
ds
xchg
push
sahf
sub
jmp
shlb
jbe
lret
mov
das
xor
scas
sub
jo
inc
or
add
ja
fstl
cld
int
inc
adc
incl
je
dec
mov
cmp
inc
push
xchg
inc
icebp
mov
lods
push
aam
cltd
add
pop
popf
pop
enter
cmc
int
test
rorb
shl
es
repnz
mov
repnz
out
add
ret
xchg
andl
rcrb
sub
shl
pop
and
inc
fs
mov
das
popa
push
inc
cmpsb
shll
xor
xchg
std
stos
cltd
inc
xchg
js
negb
and
cltd
sti
frstor
inc
jae
mov
mov
push
sub
push
mov
push
dec
sub
xor
and
outsb
push
loop
inc
loop
pop
add
cli
ja
dec
xchg
sub
mov
inc
fwait
out
pop
or
jl
fisubs
andl
add
test
sbb
jl
push
repnz
sub
aas
lcall
and
and
pop
bound
pop
pop
rcl
or
push
xchg
in
pop
fadd
in
xor
cmp
leave
dec
stos
orb
mov
xorb
in
cmc
imul
jno
lods
loopne
jo
dec
cmp
push
dec
dec
mov
xlat
fldcw
or
mov
add
push
dec
loope
cmp
jno
call
pop
stc
pop
pop
or
in
mov
or
cmpsl
icebp
or
jge
pop
inc
and
popl
xchg
jo
fwait
outsl
sub
xchg
dec
test
jle
pop
dec
std
stos
mov
lret
xor
ljmp
pop
xchg
cmpsb
push
popa
in
push
cmp
addb
add
mov
mov
xor
std
xchg
sbb
lret
test
addr16
shrl
add
mov
lods
cltd
add
push
or
sbb
jno
hlt
mov
jne
data16
leave
dec
jp
ret
and
out
vcomiss
push
repnz
xor
mov
jg
jmp
xorps
ret
int
push
stos
ds
test
dec
enter
or
xchg
xor
xor
subb
scas
xchg
rcrb
mov
hlt
add
pop
mov
imul
int
test
add
lods
add
inc
xlat
mov
mov
call
repnz
testb
sub
xor
fldl
mov
out
dec
or
jnp
push
xor
sub
es
cmp
arpl
push
sub
aam
add
lahf
pop
jbe
mov
inc
sti
inc
aad
je
pop
xor
enter
push
lret
push
lcall
lds
ret
add
popf
and
pop
or
push
xor
ret
or
xchg
shll
movsb
mov
dec
shrl
lea
test
add
popf
clc
adc
sarl
dec
jg
enter
in
fcomps
mov
outsb
test
popf
loopne
loope
dec
push
jle
nop
movsl
jb
mov
lret
xchg
mov
add
or
mov
cmp
notb
mov
sbb
jge
setbe
jb
frstor
nop
int3
das
cmp
lods
outsb
and
xor
sub
sbb
xchg
adc
add
pop
mov
int
je
cmp
or
lock
sub
sbb
adc
aam
and
mov
rolb
je
sti
clc
ljmp
inc
fdivrl
fst
xchg
jl
add
popf
inc
mov
mov
push
jge
push
cwtl
mov
out
jmp
out
cmp
mov
push
loopne
inc
leave
dec
out
subl
rcrb
out
jecxz
nop
mov
cmp
pop
dec
pusha
data16
scas
and
push
pop
aam
push
test
pop
cltd
iret
sbb
push
lods
andb
sbb
lock
lahf
insl
mov
jg
fs
sbb
fadd
jp
lret
stos
in
push
rcll
mov
pushf
sbb
movsl
movsb
cmp
and
in
mov
aaa
loop
push
xchg
xor
push
jmp
jl
push
stos
push
mov
cwtl
xchg
fcoms
ret
bsf
jp
jbe
xor
xchg
fucomip
sti
js
in
adcb
cmp
nop
pop
fs
faddp
fsubs
sub
push
loop
push
jmp
lods
lods
push
sub
mov
test
ljmp
notl
inc
xorb
clc
push
and
inc
push
test
iret
andb
sub
adc
scas
ret
mov
movsb
jmp
adc
loop
dec
sbb
loopne
jns
and
mov
fildll
dec
lods
mov
xchg
js
xchg
fcomi
outsb
in
test
mov
jg
jl
and
js
cmp
cmpsb
mov
push
fsubrl
add
adcb
movsl
shll
inc
add
cmp
cmp
add
mov
mov
push
fildll
and
in
stos
icebp
lods
lahf
adc
push
ret
inc
shlb
push
cs
jmp
imul
pop
add
rcll
jmp
in
aam
dec
shlb
shl
xlat
sub
adc
or
lds
adc
sbb
adc
mov
pop
mov
rclb
sbb
aam
mov
cmpsb
pop
subb
jle
xchg
int3
pop
or
sub
shll
xor
or
in
lahf
pop
add
jge
mov
data16
cld
jecxz
push
dec
inc
mov
fmull
mov
jp
xor
lea
adc
dec
movsb
loopne
imul
es
sub
into
dec
sahf
fstps
sti
pop
or
pop
pop
outsb
ret
pop
fstpl
fildll
sub
mov
in
push
decb
inc
insl
jecxz
call
mov
cmc
cmp
mov
sub
mov
cld
pop
outsb
fldcw
aas
xor
sub
mov
cmp
movsl
fwait
out
fistl
dec
push
jbe
test
in
sbb
and
icebp
push
icebp
xchg
cmp
clc
sbb
jnp
pop
inc
push
jmp
xchg
push
nop
fldenv
push
adc
int3
sbb
mov
xorl
mov
lds
mov
jbe
loope
or
fists
push
ja
jmp
push
mov
loop
in
mov
int
push
je
into
ja
insl
es
cmp
fs
or
lahf
sub
pop
bound
or
xchg
hlt
jg
pop
cmpsl
push
ret
xchg
ret
add
out
loop
sbb
mov
popf
subl
clc
imul
syscall
and
aam
add
push
dec
lds
add
iret
pop
mov
adc
cmp
jge
push
out
loop
and
stos
das
xchg
adc
fadds
jbe
push
repnz
popa
lods
dec
int
mov
push
daa
in
out
sub
ret
mov
and
sbb
adc
cwtl
pusha
pop
outsl
inc
push
lcall
loopne
dec
fst
jno
push
and
mov
cmp
adc
fwait
call
jbe
push
jb
mov
fmuls
aam
sub
lret
test
pop
ficompl
dec
imul
push
mov
loop
in
in
cmp
mov
lahf
cld
inc
insb
jne
cmp
scas
cmp
or
stos
mov
psubd
nop
rorl
gs
push
xchg
fisubl
adc
or
fwait
jecxz
stos
mov
cmp
adc
xor
adc
cmc
mov
loopne
loopne
out
aaa
stos
lea
fldt
fists
sbb
pop
inc
pop
loope
sbb
xchg
lret
das
ss
loopne
inc
and
in
loopne
cmp
fldt
out
out
cs
fsubs
sub
jne
leave
sub
push
inc
pusha
es
mov
pop
dec
push
movsl
pop
iret
shrb
shlb
sub
aad
ret
call
push
pop
sbb
and
mov
je
in
cmpsl
cmp
add
test
cli
popf
test
pop
lds
dec
pop
jbe
adc
loop
push
add
mov
nop
lahf
add
jecxz
inc
daa
popf
mov
adc
lahf
push
aam
xchg
xchg
test
adc
add
cs
mov
add
jge
lods
std
cmp
dec
lods
ret
sbb
addr16
mov
dec
lret
pop
inc
stc
fyl2xp1
leave
jns
shr
cltd
and
xor
xor
xlat
xor
cmp
dec
mov
movsl
fstps
fildll
call
mov
cmpl
aad
int
push
inc
dec
aad
mov
jo
xchg
les
rorb
hlt
aad
inc
pop
lods
xchg
xor
cmc
push
add
pusha
cmc
inc
inc
ljmp
cmp
jne
pop
inc
nop
sbb
sarl
inc
cmp
xchg
and
pop
into
inc
and
imul
push
cltd
mov
fwait
jmp
push
mov
pop
sub
loope
or
scas
cmp
mulb
jl
push
shrl
pop
jo
pop
movq
jbe
je
cmp
movsb
in
cltd
sti
and
lcall
insl
aam
pusha
sub
icebp
clc
jp
jge
test
adc
jg
in
icebp
sbb
or
dec
push
dec
stc
sub
fisttpl
dec
pop
push
dec
fimull
aas
lret
pop
lods
rcr
sbb
jno
loop
inc
mov
cmp
in
inc
rclb
mov
push
nop
jbe
orb
or
mov
lods
or
out
mov
sub
test
or
push
data16
adc
jb
fs
mov
or
cli
cmp
sub
jns
shlb
and
dec
pop
sub
pmulhw
insl
jmp
fcoml
adc
push
xlat
mov
add
ljmp
inc
fidivrs
lret
push
scas
jmp
rorl
es
int
mov
sub
adc
stos
adc
jp
rcrl
inc
arpl
push
mov
nop
and
outsl
stos
pop
shrb
mov
xor
ss
stc
lea
sub
daa
mov
pop
add
mov
add
imul
lods
movups
mov
mov
and
loopne
dec
nop
les
loopne
iret
pop
outsl
add
pop
pop
addb
cmpps
and
iret
shlb
mov
negl
adc
rol
or
xchg
add
test
xor
add
or
mov
mov
or
or
xchg
in
js
shlb
sti
push
push
movb
or
lahf
pop
stos
test
adc
add
pop
repnz
xchg
pop
pop
cmp
mov
icebp
lahf
fiadds
mov
adc
pop
push
inc
inc
mov
jecxz
rcrb
cmp
jle
adc
cmc
xor
sub
aad
mov
mov
popa
push
loop
imul
pop
sub
rorb
or
hlt
xchg
movsl
xchg
movl
jns
call
icebp
or
jecxz
jecxz
mov
sbbl
xor
in
and
dec
mov
xor
ljmp
mov
push
mov
xchg
xchg
push
aam
andb
add
cmp
daa
les
cmpsb
and
ss
mov
jb
out
xchg
insb
sti
fsubl
sahf
cmp
mov
xchg
mov
cmpl
stos
jns
cli
fsubrs
arpl
sti
ret
out
int
sub
nop
pop
aam
repnz
aam
std
mov
rcr
adc
pop
sub
adc
sub
aaa
push
mov
jle
gs
scas
das
icebp
rcrl
clc
addr16
inc
dec
jnp
mov
mov
push
mov
movsb
xor
sub
xchg
jns
lods
or
jle
divl
rol
xchg
jno
repz
cmc
mov
add
add
sbb
jo
movsb
icebp
or
iret
stc
fwait
imul
sub
rcrl
je
outsb
dec
lods
mov
imul
leave
mov
notl
cmp
fnsave
aam
adc
adc
pop
daa
sub
push
fldenv
xchg
xor
sub
sub
stos
and
lock
pop
out
inc
push
iret
cld
scas
xchg
and
push
adc
push
push
mov
mov
mov
mov
pop
pop
or
xor
push
xchg
mov
loopne
adc
push
jae
cmpsb
out
mov
pop
xor
outsl
push
jo
xchg
call
add
outsb
call
mov
mov
sahf
daa
ja
lea
adc
cmc
cltd
lds
cmpsb
fidivs
jge
fnstenv
adc
inc
push
dec
mov
mov
add
mul
cmpsb
jnp
shlb
jno
jl
cmpsb
jns
jmp
push
int3
adc
inc
data16
lds
cmp
xchg
mov
das
test
xchg
addl
pop
xchg
inc
jns
xchg
mov
lret
insl
rolb
in
mov
sub
add
add
outsl
inc
js
inc
loop
sub
xor
xchg
jbe
repz
or
pop
jns
out
iret
sahf
jb
stc
in
loope
mov
clc
jecxz
shr
or
shll
scas
fisttpl
push
jl
fadd
xchg
jnp
fsts
movlps
pop
int
jmp
jbe
test
mov
lds
int3
lahf
aad
pop
xchg
mov
in
pop
cmp
or
inc
lahf
fidivl
xchg
mov
lods
xchg
jbe
add
push
cs
out
sub
dec
jp
push
and
xchg
cltd
cld
js
sub
imul
mov
sar
cld
push
jns
jmp
aad
ja
mov
pop
cmpl
idivb
stos
adc
ret
in
adc
mulb
stos
mov
fs
stos
sbb
sub
call
std
push
inc
and
xchg
icebp
das
imul
movsl
aas
add
xor
sbb
imul
cwtl
cs
add
add
sbb
andb
rcl
lea
jno
jg
dec
sub
fucomip
add
and
lods
cld
mov
pop
xchg
cmpsl
or
push
pop
ffree
aad
lock
push
fldcw
arpl
data16
xchg
mov
dec
adc
xlat
add
pop
popa
clc
dec
int
push
or
fcompl
pushf
jle
scas
test
xor
in
jecxz
icebp
add
rolb
lods
arpl
mov
test
push
push
outsb
fdivrs
cmc
adc
push
shlb
mov
xchg
data16
hlt
nop
inc
stc
cmpsb
punpcklbw
fs
mov
push
pushf
pop
dec
adc
psadbw
inc
push
fiaddl
fisttpl
jae
mov
int
xchg
daa
pusha
test
jbe
xor
mov
mov
sbb
ljmp
push
lret
lret
xchg
popa
mov
xor
jl
cltd
movsl
adc
and
cmp
test
mov
fstpt
pusha
and
test
xlat
lret
out
stos
mov
into
psubb
cmp
mov
lock
and
cwtl
rcll
cmp
mov
push
fucom
test
mov
pop
mov
jmp
std
sbb
mov
enter
xchg
in
loop
mov
imul
cmp
insl
lret
push
mov
jno
les
shrb
push
dec
sti
add
jecxz
add
pop
out
out
sub
movsl
and
dec
cltd
and
inc
sbb
or
and
dec
push
lock
ja
xor
xchg
adc
shll
mov
addr16
pushf
jge
mov
push
push
push
xorb
push
cmp
es
pop
jle
mov
or
sub
pop
cmc
dec
xlat
xlat
bound
jb
dec
add
leave
pushf
mov
mov
jo
data16
xchg
adc
and
shll
sbb
les
pushf
hlt
stc
int
imul
pop
mov
jb
fs
jmp
jno
xlat
cmc
or
sub
cmpsl
or
or
xlat
rorb
mov
jo
lcall
push
sbb
repz
jmp
test
repnz
push
ljmp
movsb
mov
loopne
xor
movsl
sbb
xor
fidivl
push
push
cmc
aaa
mov
sbb
push
pop
jl
sub
sti
push
imul
cmp
pop
inc
leave
cld
lahf
ss
cmc
mov
push
adc
imulb
xchg
sub
loop
fdivrl
mov
cmc
rcrb
mov
dec
roll
pop
adc
ficoms
xor
sbb
mov
add
movsl
loope
xor
pop
push
sub
sbb
dec
mov
add
test
iret
lds
and
cmp
push
cmp
cmp
mov
or
pop
lahf
inc
rorb
loope
in
jb
sub
sar
loopne
sti
jno
inc
daa
xchg
push
push
xor
add
adc
or
mov
jp
jno
cmpsb
in
ss
sti
stos
test
adc
sbb
das
jmp
insb
mov
dec
dec
cmp
jmp
mov
cs
add
or
ret
lods
mov
stos
push
push
pop
lcall
imul
mov
jb
dec
xor
xor
test
loop
aaa
cmp
movsb
popa
xchg
or
push
mov
inc
test
ss
pop
dec
lret
fs
adc
imul
xchg
outsl
or
aas
jle
fisubs
mov
sbb
xlat
shll
andl
cs
sbb
fnstcw
adc
mov
xchg
fcomps
cmp
jle
add
pop
push
cmp
daa
int3
scas
pop
fs
lret
and
icebp
pop
pop
xor
xlat
sbb
jno
inc
cmpsl
adc
adc
out
mov
bound
xchg
dec
jns
xchg
cmp
jp
sub
inc
sbb
test
cmpsb
fists
mov
cmp
mov
out
lcall
ret
pop
or
inc
sti
jle
jmp
pop
push
cmp
imul
xor
mov
xor
test
cmp
push
mov
aaa
and
fucompp
jns
mov
test
clc
jl
mov
xchg
push
inc
inc
and
or
inc
push
cmp
jp
lret
dec
mov
and
lods
cltd
ffreep
negb
xchg
and
xchg
xchg
push
mov
sbb
sub
mov
xor
lea
lea
adc
xor
fs
fsts
xchg
sahf
or
out
pop
imul
mulb
pop
ss
imulb
imul
enter
xor
lcall
lret
fildl
negb
xor
jl
or
push
add
cltd
push
and
icebp
lods
sbb
stos
and
cmpb
mov
loope
imull
push
gs
aas
cmc
sub
movsl
lahf
es
xor
inc
jg
add
adc
loop
fwait
arpl
sbb
nop
fsubr
outsl
cs
out
and
xlat
movsl
cmpsb
jnp
jo
and
add
pusha
xchg
add
dec
sub
and
cmpsl
pop
call
xchg
pop
add
xorps
mov
clc
xchg
enter
inc
stc
xor
jge
nop
push
jg
lock
mov
sub
test
scas
paddq
dec
cltd
sbbl
sbb
pop
iret
loop
pop
add
and
and
adc
jno
leave
nop
inc
xor
mov
push
pop
add
shrb
sbb
add
jnp
cmp
push
stos
cmp
fwait
mov
repz
push
sahf
and
xor
cmc
stc
jne
push
pop
ljmp
and
push
cmpsl
pop
adc
les
test
mov
push
mov
sub
int3
sub
mov
dec
jle
fisubrl
out
pushf
adc
push
jae
push
pop
addr16
push
aas
lock
jmp
sahf
mov
sbb
shr
adc
add
mov
and
jno
push
mov
clc
cmpsb
fistps
adc
dec
in
int
inc
outsb
xchg
call
gs
mov
adcb
dec
sbb
fcompl
sarl
pop
fbld
cmp
jge
sbb
dec
sbb
out
cmp
cwtl
add
int
sbb
aam
jo
sbb
cwtl
in
aas
fucomip
jl
mov
ss
dec
jmp
psubq
jbe
lock
call
sub
push
push
sub
pusha
dec
pop
adc
mov
bound
mov
inc
push
cli
test
xor
clc
push
test
push
lods
mov
out
iret
imulb
aaa
pop
cltd
movsl
test
cmp
mov
enter
jg
or
mov
cmpsb
outsb
push
cmp
xor
popa
je
push
xor
dec
out
mov
scas
cmp
mov
int
scas
out
mov
fcomps
inc
add
xor
int3
push
mov
add
ret
das
pusha
mov
pop
mov
outsl
jns
pop
lret
faddl
fildll
adc
sub
xor
push
push
xchg
xor
adc
dec
pop
ljmp
fiadds
stos
cmp
les
mov
sub
cmp
sub
xchg
testl
xchg
addb
push
idivb
out
jne
leave
rcll
addb
lods
repnz
jge
add
lds
xor
lods
icebp
cmpsb
add
aas
movsb
xchg
nop
sub
arpl
xchg
dec
movsl
psubsw
aam
ret
pop
lock
fidivrs
popf
sub
xor
cld
aaa
bnd
aas
push
arpl
out
and
mov
push
jge
pop
add
sti
cmp
shlb
mov
xor
xchg
xchg
daa
push
xor
cmp
xchg
jae
jnp
int3
and
mov
and
sbb
adc
hlt
jecxz
sub
addl
call
rorb
xchg
pop
jl
es
pop
rdmsr
out
cwtl
jge
ret
fs
fldcw
sub
lret
mov
stos
xor
mov
or
iret
mov
xor
test
mov
xlat
shrl
addl
sub
add
repnz
push
mov
push
or
ljmp
mov
stc
leave
jbe
les
push
xchg
and
clc
test
test
fs
mov
popa
das
mov
cwtl
shl
insb
stos
mov
inc
in
push
jne
addps
adc
inc
mov
mov
add
out
sbb
ja
mov
aas
mov
fs
outsb
jno
dec
jne
movsb
lahf
out
pop
dec
and
xor
stos
inc
cmp
out
dec
imul
and
mov
rcr
xchg
sbb
push
cwtl
sbb
cld
sti
inc
imul
std
mov
cmpsl
out
shll
sti
mov
int
dec
cmpsb
xchg
add
xor
mov
jl
icebp
add
fisubl
and
sub
out
lds
sbb
pop
or
not
mov
push
add
fs
adc
lea
and
dec
sub
push
mov
inc
dec
in
loopne
test
fistps
cltd
jbe
xchg
jbe
out
inc
std
imul
xor
adc
or
mov
in
aaa
rclb
mov
dec
into
inc
or
xchg
cmp
push
loope
test
mov
and
shll
mov
psubsw
neg
jbe
mov
gs
and
mul
hlt
cwtl
iret
imul
loope
shlb
loopne
test
push
mov
mov
popf
sub
lret
xor
jmp
sbb
lods
jle
int3
sbb
pop
and
js
adcl
sbb
js
in
xchg
daa
or
sbb
pop
sbb
lea
jle
sub
jp
dec
or
insb
cli
hlt
mov
mov
rcrl
std
xor
push
or
jo
lods
and
mov
fdivl
adc
jle
data16
jnp
sbb
mov
cmpsl
push
fimuls
inc
shrb
mov
les
or
mov
aam
jne
sbb
jle
test
inc
out
sub
cld
out
pop
mov
add
adc
dec
fnstcw
stc
sahf
in
mov
sub
ficoml
out
xlat
out
fs
pusha
jl
lret
lds
filds
fdivl
pop
shlb
sbb
icebp
pop
push
ja
lret
push
sti
inc
sbb
addr16
lea
sbb
mov
push
jne
cwtl
in
fwait
cmpl
sbb
insb
jne
lock
mov
outsl
in
test
clc
ret
or
hlt
mov
jle
or
in
jl
outsl
sbb
mov
pusha
lods
jo
mov
dec
lret
dec
add
adc
pop
xchg
cmp
push
jne
dec
xchg
repz
lock
jmp
lods
and
jle
xchg
xlat
push
lods
fadds
mov
inc
jns
mov
jne
sbb
test
inc
cmpsb
into
je
jae,pt
xchg
pusha
ja
cmp
aaa
les
into
lcall
adc
mov
add
fs
clc
pop
bound
fmul
jecxz
cmp
pusha
cs
mov
jns
rcll
addr16
mov
es
inc
out
cltd
cli
inc
mov
and
xchg
xchg
inc
cs
lret
fsubrs
call
out
sub
jne
xor
sub
data16
mov
pop
push
test
dec
and
imull
inc
repnz
mov
pop
adc
out
mov
orl
int3
stos
js
push
lock
jae
aam
decb
ret
push
xchg
stc
call
or
cmp
inc
mov
mov
stos
jg
mov
jns
call
loop
in
mov
jns
push
cmp
aad
xchg
movsb
lods
mov
out
jp
cld
lret
lock
jb
sar
subl
xor
mov
add
sub
mov
outsl
ret
lock
loop
mov
shr
add
movsb
in
mov
hlt
imul
pop
jo
jae,pn
mov
adc
jg
xchg
cmp
mov
stc
push
jmp
sbb
int3
jl
dec
mov
jge
out
loope
cmp
sbb
xchg
xor
jge
sbb
push
xor
adc
mov
adc
dec
xchg
int3
adc
data16
pop
andb
pop
lock
mov
cmpsl
mov
pop
dec
rcrl
or
out
inc
mov
mov
fistpll
les
test
and
nop
xlat
call
xchg
dec
and
jmp
xchg
es
push
jb
add
push
push
or
scas
das
sbb
adc
cmc
mov
cs
and
test
mov
push
mov
jecxz
lds
sbb
ljmp
push
mov
test
rclb
dec
dec
loopne
push
mov
pop
mov
jnp
sti
xchg
outsl
pop
pop
push
test
adc
lock
add
pop
dec
dec
add
xchg
stos
mov
jb
cmp
sbbl
push
jno
jne
mov
sti
dec
sbb
mov
aas
jecxz
pop
call
stos
addr16
in
dec
stos
xchg
xor
adc
xor
sbb
shrl
xchg
lds
addr16
mov
push
in
push
je
aaa
push
dec
mov
insb
add
int
fnstsw
mov
adcb
sbb
push
adc
movsl
out
inc
jecxz
nop
mov
repnz
popf
outsl
pop
cltd
outsl
les
in
mov
stc
or
xor
into
cmpl
lds
jns
inc
jno
push
rorb
mov
add
and
dec
push
aam
sub
sahf
and
nop
inc
xor
push
jb
add
pop
loopne
mov
pop
dec
xor
fisttps
sbb
gs
add
mov
jb
xchg
ljmp
pop
lods
mov
std
mov
in
or
cmp
popa
arpl
sbb
in
adc
out
xor
mov
sbb
sub
lret
imull
and
iret
lock
pop
or
push
incl
insb
and
ja
mov
ret
cmc
insb
jl
lret
mov
mov
cmpsl
mov
mov
hlt
or
lods
cwtl
jp
stos
mov
fistl
pop
ret
dec
or
popa
mov
popa
icebp
fisttpll
mov
insl
loop
fsubr
jnp
mov
mov
and
and
mov
pop
sub
fsub
dec
popa
sub
aaa
inc
sub
and
dec
sbb
in
aas
mov
orl
out
data16
cltd
cli
imul
fsubrl
sub
repz
pop
and
pop
sub
jl
rcl
push
inc
call
mov
insl
add
fwait
addr16
sbb
xchg
jle
mov
js
in
mov
mov
dec
insl
mov
sub
pop
std
jle
and
es
jl
sbb
mov
xchg
mov
xor
daa
sub
mov
fidivrl
or
pop
inc
das
pop
pop
mov
aam
jp
add
cli
leave
lea
sbb
pop
addr16
jl
repz
xchg
mov
sub
data16
sub
loop
into
xor
or
in
sti
sti
add
push
push
aas
jnp
lock
sub
and
fistpl
cmp
addr16
fnstcw
stc
pop
and
imul
inc
and
dec
xchg
mov
jmp
inc
jnp
push
test
push
or
cmc
mov
dec
or
test
stc
jnp
fdivs
aaa
or
mov
adc
jl
inc
xor
cmp
mov
out
roll
pusha
popa
scas
int
bndldx
adc
or
out
jp
sbb
and
xor
lods
ret
cmp
pusha
out
adc
push
dec
add
ljmp
insb
dec
lret
leave
sbb
cmpsb
xadd
push
ss
push
sbb
pop
pushf
xchg
shll
pop
dec
pushl
in
pop
icebp
insb
mov
mov
ljmp
outsl
lret
cmp
cmp
mov
dec
dec
adc
adc
imul
inc
adc
jp
lods
jle
sbb
cmp
inc
iret
enter
mov
mov
ret
inc
stos
in
xor
sbb
mov
cmp
stos
mov
cmpsl
xor
std
dec
mov
mov
mov
xchg
xchg
pop
icebp
std
xchg
rorl
and
arpl
rcl
add
mov
jns
test
lret
adc
jns
sub
lea
psadbw
adc
rorl
xor
rorb
ret
in
rcr
cs
sbb
xchg
pop
mov
data16
lods
push
pusha
pop
fwait
jb
jmp
jl,pn
hlt
add
outsl
roll
repnz
fimull
adc
imul
les
jp
sub
stc
or
cltd
inc
or
mov
lcall
lea
enter
das
push
test
inc
push
sub
je
fnsave
jge
pop
bound
mov
cltd
insl
je
sbb
xor
shll
cwtl
jmp
aad
xor
push
cmp
mov
imul
push
leave
movb
add
adc
insb
cmp
mov
add
test
ds
sub
mov
mov
and
jp
inc
rorb
insl
inc
or
dec
std
jge
push
sbb
pop
xchg
into
jns
ljmp
lret
ds
add
cs
pop
insb
jns
outsl
fbld
pusha
iret
js
pop
or
ljmp
pop
cli
out
inc
cmpsb
jle
push
ja
pop
cmc
lcall
pop
repnz
cmc
das
dec
xorl
roll
mov
sbb
out
add
pop
fstl
pop
das
stc
or
xchg
push
popf
xor
dec
insb
sub
in
pop
sti
pop
pop
fisubrs
push
jge
test
pop
push
xchg
dec
in
scas
xor
cwtl
add
int
addr16
push
add
mov
sub
mov
mov
leave
dec
insl
lahf
stc
test
mov
pop
and
push
adc
mov
pop
sarb
push
fmulp
mov
or
push
mov
cwtl
mov
xor
int
jns
mov
in
jle
xor
mov
and
pop
add
add
es
jns
xchg
aaa
adc
xchg
icebp
push
daa
stc
inc
adc
ret
lods
frstor
xchg
sti
loopne
lret
stos
jmp
mov
mulb
insl
insb
sub
ret
mov
mov
orb
add
into
pop
int3
cmp
xchg
xor
loopne
test
in
inc
lds
lea
and
dec
lahf
or
imull
inc
cmp
mov
divb
repnz
mov
insb
decb
stc
push
mov
pop
push
and
fsubl
pushf
lods
xorl
sub
sbb
adc
jecxz
adc
lods
pushf
or
popf
orl
inc
mov
add
and
ljmp
arpl
fists
jge
lret
push
insb
inc
icebp
mov
dec
xchg
pushf
xchg
xchg
scas
or
inc
sub
jp
dec
xchg
xchg
push
ret
out
mov
test
cld
les
repz
mov
add
mov
pop
lahf
xor
jg
pop
mov
mov
push
sbb
aam
stos
jns
fcmove
enter
into
orl
repz
jg
mov
rcrl
fs
xchg
loop
bound
dec
sbb
shlb
ljmp
push
or
mov
aam
sahf
pop
outsb
stos
shlb
ret
jmp
imul
xor
sar
jae
mov
mov
dec
lret
das
add
test
dec
xchg
pop
notb
imul
xchg
push
mov
adc
iret
adc
loopne
add
lcall
inc
push
test
les
adc
hlt
xorb
std
clc
pop
repnz
movsl
out
cmpsb
inc
ljmp
push
jne
loop
fbstp
cli
xchg
jne
daa
or
arpl
lret
movsb
push
sti
inc
js
in
inc
ret
mov
rcll
sbb
rorl
jmp
sub
pop
fmuls
mov
lret
lahf
push
jge
aam
movsb
mov
mov
pushf
out
in
jne
xor
sbb
icebp
adc
ret
mov
repz
outsb
push
popl
mov
lods
movsb
out
jns
push
mov
mov
ljmp
movsb
mov
cltd
cmp
add
ljmp
daa
mov
movsl
mov
js
fidivl
stc
or
mov
lock
daa
repnz
movsl
and
mov
or
and
add
cmp
scas
aaa
push
mov
mov
test
addl
cmp
sbb
out
std
sub
dec
adc
stc
popa
mov
repz
repz
cmc
inc
xlat
jg
add
pop
outsb
cli
dec
xlat
mov
in
pushf
adc
pop
ret
cltd
jb
sbb
jne
adc
orb
movsb
insl
insl
and
aad
loopne
cmc
cmp
and
fwait
pop
push
dec
inc
mov
xchg
pushf
sti
cmp
dec
inc
out
repz
adc
sbb
cmc
fists
movlps
mov
lock
fadds
add
adc
popa
adcb
movsl
movsl
push
or
xchg
sbb
scas
or
rcr
ja
sbbb
je
dec
in
jns
push
out
dec
syscall
enter
mov
sbb
cmp
inc
xor
and
into
inc
fistl
or
mov
imul
inc
jle
sbb
sub
jmp
sahf
inc
xor
pop
add
fidivrl
xlat
push
adc
arpl
leave
jbe
sbb
jl
pop
mov
sbb
bound
pop
loope
into
clc
clc
pushf
jp
leave
xor
dec
mov
lret
cld
test
pushf
mov
and
pop
arpl
inc
out
fnstcw
dec
jl
xor
out
pushf
pop
in
xor
push
mov
push
cmpb
xchg
cltd
pushl
inc
mov
outsb
mov
int3
mov
repz
mov
aad
ljmp
mov
inc
shl
fsub
mul
insl
add
sbb
dec
mov
mov
adc
bound
scas
inc
insl
xchg
jnp
aad
or
js
sbb
cwtl
add
arpl
mov
pop
int
push
jns
mov
pop
iret
outsl
pop
idivl
push
add
ret
cmp
or
mov
cltd
aad
cmp
jp
jge
inc
aad
pop
inc
test
lock
jnp
repz
or
pop
and
sbb
jae
pop
daa
adc
mov
sub
fadd
push
add
push
icebp
push
pop
xchg
xchg
imul
jo
mov
in
imul
mov
out
fnstenv
xchg
xlat
inc
dec
sub
jg
cmpsl
test
cld
mov
xor
mov
pop
xchg
xchg
xchg
testb
dec
lock
push
fmull
insb
stc
push
cmp
jns
jl
fmul
mov
movsb
outsl
xchg
shl
and
int
pop
cmp
dec
add
es
popf
mov
xor
dec
repnz
mov
fwait
imul
and
pop
mov
loope
xchg
inc
add
fstp
xchg
sbb
fildl
gs
pop
rcrl
dec
popa
cmc
inc
push
mov
fsubrs
fsubl
imul
daa
enter
mov
pushf
xchg
push
enter
idivb
push
data16
jg
mov
push
aaa
and
mov
aad
mov
repnz
int
mov
mov
push
jg
sbb
scas
mov
das
fiadds
inc
or
testl
jmp
inc
pop
fbstp
fmull
int
addb
ficoms
std
out
xor
mov
repnz
rol
jp
nop
dec
push
lret
jnp
bound
in
adc
cmp
xchg
xor
insl
adc
fstps
dec
and
push
ret
nop
cmp
popa
sub
jle
insl
nop
out
in
insb
das
cmc
cmpsb
lret
and
adc
sub
mov
dec
sti
inc
push
mov
sarl
pusha
xor
movsl
test
fxam
dec
add
add
mov
sub
adc
cli
movsb
mov
scas
sub
leave
cmp
xchg
xchg
mov
sbb
or
mov
and
sub
lea
cld
mov
lock
mov
pop
movsb
pop
ss
mov
rcrb
mov
add
pop
inc
mov
push
in
xchg
scas
repnz
lahf
outsb
aaa
push
sub
push
mov
and
subl
xchg
enter
pop
jb
jb
in
into
sar
fcmovne
arpl
leave
adc
sbb
ret
cld
rol
out
ret
push
lea
push
or
into
cltd
sub
stos
dec
orb
mov
jae
mov
jns
push
xor
add
jge
pop
cltd
imulb
psadbw
and
ljmp
xchg
add
jbe
dec
sbb
jecxz
cmpsb
fadds
push
cmp
adc
mov
lea
test
dec
data16
mov
inc
mov
sahf
negb
cmp
inc
stc
lahf
push
stos
aaa
cmp
shlb
mov
dec
dec
stos
or
or
sbb
out
out
mov
push
and
add
insl
mov
inc
imul
mov
dec
pusha
fdiv
mov
mov
sti
aam
arpl
lcall
pop
pop
push
inc
mov
call
xchg
cli
mov
mov
pop
sti
fld
xlat
out
gs
popf
adc
repz
inc
or
mov
sub
add
mov
xor
push
sbb
dec
call
sbbl
cli
pop
sbb
sbb
or
push
xchg
shll
rcrl
mov
pop
loopne
sub
mov
leave
scas
fdiv
pop
insb
ss
movsb
mov
jmp
aas
test
cmp
fucomip
cs
ljmp
dec
mov
mov
fs
icebp
dec
pop
lea
fdivs
out
dec
mov
outsw
mov
inc
into
out
xchg
push
sub
xchg
sub
adc
sbb
popa
inc
and
pop
push
int
fmull
sahf
sub
lock
or
pop
fs
xor
push
lds
push
jl
mov
push
mov
xchg
xchg
call
xchg
mov
out
jge
in
xor
outsb
mov
mov
repnz
out
xchg
mov
xchg
ja
mov
xchg
push
dec
sbb
xchg
jo
rcrl
pop
fcomp
dec
add
repz
rclb
aad
sub
movl
sbb
add
ss
test
sti
incb
in
mov
icebp
out
in
xor
loop
mov
fucomi
into
xchg
int3
adc
pop
and
mov
ret
inc
popa
addr16
mov
repnz
fldl2t
mov
jbe
repz
frstor
jmp
testb
loop
inc
in
sub
repz
mov
jnp
push
in
enter
pusha
xchg
mov
sub
dec
jo
fwait
bound
test
orl
or
or
repnz
ret
std
sub
add
sub
je
iret
movsb
jge
sti
sub
inc
rcrl
mov
mov
xor
movsb
bound
int
mov
js
xor
roll
movsl
jecxz
shrl
lods
stos
jl,pt
imul
sub
adc
cmp
sub
cmp
cli
popf
and
dec
mov
ficoml
push
jp
fucom
pusha
scas
inc
push
ss
lret
add
add
and
call
sbb
nop
or
mov
cmp
mov
imul
xor
sbb
loopne
test
lahf
fisubs
pop
sbb
popf
fistps
add
xchg
dec
xchg
je
sbb
push
pop
les
lret
movsb
dec
or
jecxz
sbb
div
dec
imul
add
int
lret
xchg
insb
mov
jnp
in
xor
test
mov
push
fdivrp
sahf
fidivrl
idiv
aam
push
repz
or
fisubl
push
popa
scas
sti
mov
push
add
or
lods
sbb
enter
jmp
xor
mov
xor
test
add
sbb
loopne
subb
mov
jle
mov
js
loopne
or
jg
fmuls
push
aam
sbb
stos
mov
adc
mov
inc
dec
mov
rclb
jne
mov
cmp
push
mov
addr16
scas
enter
pushf
mov
add
add
arpl
mov
push
test
cmpb
repz
xor
shlb
dec
cs
fistpl
xchg
mov
push
push
fnclex
mov
sub
xchg
arpl
out
outsl
std
roll
xchg
je
leave
ret
fmuls
les
adc
add
ja
out
mov
in
adc
cmp
push
in
adc
push
and
dec
fs
pop
mov
push
or
lods
cmpb
aas
xchg
xor
pop
outsl
mov
or
push
xchg
adc
inc
in
aam
push
jp
ret
js
or
push
dec
hlt
sub
scas
outsb
mov
mov
imul
in
jge
push
inc
jae
sarl
movsl
lret
xchg
jle
pop
jne
movsl
mov
in
jnp
inc
call
jg
sbb
fstl
and
je
faddl
add
xor
lret
push
es
scas
cwtl
mov
pop
adc
xchg
je
and
xchg
mov
es
and
aad
fistl
pop
dec
sbb
shr
fnstsw
xchg
sub
jl
in
mov
stos
test
jge
xchg
iret
in
fbld
xor
xchg
mov
add
cmp
xor
xchg
jle
xchg
sub
fnsave
inc
sbb
push
sub
in
out
sbb
stos
out
push
mov
mov
out
mulb
scas
cli
mov
out
xchg
iret
push
jae
mov
mov
in
mov
pushf
test
cmp
mov
push
inc
dec
inc
mov
lcall
xchg
mov
mov
pop
push
and
push
inc
jnp
adcb
cmp
pop
push
mov
stos
repnz
dec
xor
sub
or
sahf
xchg
rcrl
lock
test
pop
lret
arpl
lcall
data16
cmp
pop
mov
mov
pop
imulb
mov
jmp
add
mov
subl
pop
imul
mov
dec
in
cmp
inc
mov
xlat
outsl
sub
cmc
test
nop
loope
ss
xchg
incl
fisubl
inc
divb
out
andb
pop
sub
or
dec
mov
add
pop
loope
lods
push
push
xchg
pop
aam
aas
pop
pop
clc
and
cmc
inc
sahf
adc
lock
xor
add
add
jbe
bound
iret
aam
mov
mov
roll
dec
pop
mov
out
jbe
mov
jne
inc
out
xor
stos
dec
push
mov
dec
int3
insl
jae
enter
fildll
jnp
sbb
cmp
jae
mov
inc
popf
in
cmc
loopne
xor
cmc
pushf
jbe
jge
sub
mov
shlb
loopne
xor
in
and
loop
inc
clc
cld
ret
cmp
loopne
xchg
into
push
test
pop
mov
or
mov
fcomp
clc
or
push
ds
into
mov
scas
jbe
addr16
push
or
into
je
pop
xchg
lea
call
pop
pop
enter
scas
aam
lods
mov
dec
mov
push
testl
and
insl
out
sbb
xor
in
cmp
pop
push
jl
cltd
inc
ficoml
out
push
test
iret
fs
pop
pop
xchg
sub
jle
je
ret
mov
ss
rcll
call
nop
mov
add
mov
shr
sub
repnz
aas
jp
repnz
lods
out
ja
lahf
mov
dec
aad
into
and
test
orb
sbb
lea
sbb
sahf
mov
add
in
pusha
jo
data16
xchg
push
bound
imul
jb
pop
leave
pop
mov
mov
shlb
sub
sbb
std
imul
mov
sbb
push
or
repnz
xor
scas
pop
cli
mov
sub
cmpl
outsb
add
out
ss
xor
fcoms
and
pusha
movsl
rcl
jne
adc
es
js
cmpsl
sub
cld
mov
mov
fsubl
dec
leave
add
jne
mov
jne
mov
cmp
cmpsl
mov
cmpsl
adc
sub
dec
loop
insl
ds
mov
dec
jbe
fadds
cmp
sarb
dec
fists
fwait
cs
cmp
xor
scas
xchg
xlat
movsb
loop
rclb
aaa
pushf
pop
xchg
test
mov
rolb
sti
inc
stc
mov
cltd
push
xlat
lods
lret
loop
pusha
xchg
out
fiadds
push
adcb
dec
fdivrp
insb
sbb
inc
sub
push
mov
or
lret
es
gs
int
and
iret
dec
dec
pop
dec
or
fwait
iret
xlat
pop
jbe
ds
int
repz
enter
test
mov
ljmp
push
lds
mov
inc
dec
jl
out
xchg
rcll
xlat
and
inc
or
scas
mov
sbb
into
inc
lret
xchg
cmp
shlb
ds
gs
adcb
out
mov
pop
cs
push
pop
pop
outsl
mov
xlat
sbb
cmp
and
push
dec
xor
inc
pop
push
sub
sbb
push
std
std
ja
add
popf
xlat
call
push
leave
pushf
mov
dec
stos
ret
in
pop
xor
xchg
fstl
std
cld
testl
mov
nop
xchg
jp
fcmovbe
fadds
cmp
cmp
dec
inc
xor
jmp
sti
pop
sarl
in
pop
cmp
iret
xchg
or
cmc
adc
test
inc
push
lods
adc
cmp
add
inc
fcomi
add
dec
lcall
mov
or
pushl
mov
xchg
cmp
push
sarb
jae
pusha
mov
inc
lret
mov
les
mov
jb
aad
lods
jp
in
jmp
push
jns
lea
push
int3
pop
cmpsb
inc
fimuls
out
fldenv
stos
pop
movb
std
arpl
sti
push
stc
ljmp
mov
pop
cmp
and
aaa
test
aad
cld
sub
pop
xchg
ret
test
dec
adc
and
mov
mov
cmc
cs
cmp
adc
mov
ds
mov
mov
int
aas
sbb
cmp
cwtl
dec
push
pop
mov
sub
test
sub
dec
cmp
sub
mov
popf
adc
add
pop
mov
inc
xchg
lds
xchg
lret
les
add
imul
cwtl
testl
std
fildll
imul
sub
add
jle
pop
icebp
adc
ljmp
jae
inc
mov
mov
fisubrs
loopne
sbb
test
imul
arpl
outsl
fiaddl
cmpsb
loop
jle
xor
xor
or
push
rcll
mov
in
les
cwtd
cmpsb
das
push
pop
cmp
movsl
cs
lods
inc
mov
pop
sub
push
andb
cmc
or
jmp
pop
je
pop
test
daa
dec
and
cmpsb
mov
jecxz
cltd
sbb
lock
xchg
or
push
xchg
push
fildll
and
pop
push
into
jge
iret
test
mov
dec
stos
or
cltd
je,pt
mov
pop
std
mov
cmp
or
sub
mov
test
lea
mov
into
out
sub
push
imul
jb
enter
pushf
xor
xor
daa
lret
cmp
push
outsl
lds
pop
enter
or
mov
pop
out
cmpsb
pop
xor
push
rorb
sub
mov
dec
push
push
imul
test
icebp
test
mov
adc
cld
jb
mov
imul
rclb
jmp
test
cmp
int3
mov
lcall
icebp
stos
std
or
mov
mov
std
shlb
jecxz
dec
lea
stos
sarl
mov
xor
jecxz
cmp
push
popf
loope
or
push
push
hlt
fld
cmc
inc
cmc
push
push
cltd
sub
loope
dec
ljmp
mov
and
out
dec
movups
lods
lret
mov
add
cwtl
pop
gs
add
flds
dec
outsl
xchg
das
add
pushf
shlb
ljmp
inc
dec
stos
scas
in
js
in
jnp
incl
test
imull
xorl
idivl
pop
pop
mov
je
mov
pop
push
testl
mov
jg
lds
pop
clc
fst
xor
lahf
xor
adc
add
mov
or
dec
and
mov
jmp
call
cmp
push
lds
dec
mov
fsubrp
hlt
in
inc
fs
xor
sub
lock
jb
sub
sbb
roll
scas
push
jo
and
adc
out
popa
mov
add
aaa
outsl
gs
inc
data16
lcall
fnstcw
jne
sti
std
dec
mov
jae
dec
jmp
sub
lahf
ja
cmp
cltd
mov
mov
mov
fistpl
add
jnp
mov
cwtl
pop
inc
add
aaa
sbb
or
cli
or
add
mov
mov
cld
cmp
ljmp
sub
ret
fisubs
outsb
xchg
pop
jmp
rcl
jge
icebp
cmp
loope
pop
sub
hlt
out
hlt
sbb
stos
jns
xchg
pop
xchg
enter
pushf
hlt
ljmp
cmp
scas
stc
lahf
inc
jg
rcll
add
lods
bnd
addb
pop
inc
rorb
mov
mov
adc
insb
popa
sti
addr16
and
add
adc
loop
es
push
push
mov
dec
mov
and
pop
test
mov
pop
mov
ss
imul
jne
push
mov
and
xchg
fadds
popf
xor
movsl
xorb
imul
sbb
ja
xchg
and
js
data16
je
lock
cwtl
xchg
push
dec
loop
scas
fcmovbe
lcall
push
push
or
dec
or
mov
mov
imul
inc
push
sbb
leave
dec
sub
iret
inc
cmp
xchg
aad
adc
add
fdivr
icebp
shl
adc
push
scas
xor
cmp
in
ja
enter
ret
jmp
push
dec
jns
out
adc
fwait
or
adc
aam
les
mov
sbb
adc
insb
jnp
jns
movsl
cltd
sahf
mov
xorl
adc
repz
adc
lock
inc
insb
cmc
jl
scas
inc
lea
inc
getsec
cmpsb
inc
pusha
sti
add
sbb
scas
loop
in
in
pop
outsl
aad
inc
jp
movl
pop
rolb
aaa
roll
out
mov
or
mov
mov
int
sbb
push
xor
fidivrs
inc
jnp
mov
in
add
xchg
dec
into
imul
stos
rorb
pop
push
nop
fnsave
sub
push
or
sarl
repz
lahf
and
inc
sbbb
int3
jge
sbb
and
sub
lahf
dec
mov
mov
pushf
dec
ret
je
insl
ja
insb
push
hlt
or
adc
sahf
mull
in
je
jne
add
subl
in
lret
stos
ss
or
jge
adc
and
xchg
jle
pop
fstpt
aad
out
sub
xchg
cmp
loop
je
sbb
lock
in
sub
pop
les
mov
xchg
imul
adc
jecxz
push
mov
stos
jne
mov
cmpl
sub
fistpll
push
data16
push
mov
lret
xchg
stos
dec
xor
lock
dec
jnp
inc
sbb
pop
ret
and
jle
cmp
orl
mov
push
pop
dec
fstpl
rol
dec
shlb
in
lods
mov
es
mov
adc
cli
mov
fdivrs
popa
cmp
sbb
data16
inc
jmp
sub
repnz
stos
rcrb
adc
adc
pop
dec
mov
jb
loope
hlt
dec
sub
mov
pop
aaa
in
in
outsb
lahf
insl
iret
add
sub
pusha
scas
xor
adc
mov
ucomiss
in
addr16
xor
std
jl
mov
xchg
sub
in
mov
addl
mov
lret
leave
ret
cmp
outsb
popa
sbb
ss
pop
adc
adc
mov
cmp
pop
mov
push
sbb
movsb
jge
ja
idivb
out
pop
lods
insl
gs
pusha
pusha
mov
lret
lock
fsubrs
gs
mov
cmpsb
push
jnp
sbb
cmp
int
jbe
sub
mov
and
xor
shll
fisubrl
adc
sbb
and
idivl
inc
mov
push
hlt
push
inc
xor
adc
out
scas
inc
mov
test
mov
fs
push
aad
rclb
xchg
sub
add
jg
fnstsw
addr16
fstl
and
xor
jp
push
or
add
repz
in
xchg
add
xlat
outsl
cmp
mov
jno
ret
and
mov
xchg
ret
or
sub
mov
xchg
popa
push
mov
lods
pop
xchg
mov
xchg
pop
mov
add
fdivrs
xchg
or
mov
push
xor
je
jne
jne
repnz
insl
hlt
dec
jno
cld
lret
mov
mov
xchg
pop
and
push
mov
fwait
test
in
mov
inc
cmp
add
loopne
mov
in
cmp
push
pop
fwait
dec
adc
fiadds
fidivs
ficoms
ja
xor
int3
clc
adc
enter
pop
outsl
aad
das
int3
int
pop
push
shl
aam
adc
scas
dec
clc
ljmp
adcb
ror
pop
test
je
pusha
addb
dec
and
jno
ret
inc
das
push
sub
arpl
fcomps
flds
shl
push
jecxz
into
data16
repnz
aad
mov
ss
xor
xor
push
add
jne
ja
add
mov
sbb
mov
push
std
xchg
fldl
push
cmp
jge
cmp
xchg
in
outsb
cmp
push
xchg
fisttpl
test
imul
out
out
leave
ljmp
insb
rolb
es
xchg
movsb
pushaw
mov
iret
mov
xchg
pop
fnop
rorl
and
mov
out
lods
jge
repz
inc
inc
dec
je
add
or
cmp
jb
lret
jae
aam
pusha
cmp
jnp
enter
mov
sub
push
or
or
movsb
xor
dec
scas
dec
mov
int
jmp
add
test
in
push
or
andl
sahf
addr16
jg
out
sbb
jo
ljmp
mov
cmpsl
xchg
das
sub
pushf
dec
out
mov
pop
dec
lret
sub
mov
push
dec
insl
test
lods
pop
mov
loope
pop
push
sub
js
mov
sub
sbb
in
cs
ret
jge
call
pop
push
shll
test
mov
inc
imul
lods
rorl
xchg
jle
cmpsl
sbbb
sbb
ret
sti
xor
fimuls
push
stc
sub
or
pop
push
aam
sbb
cmp
les
cwtl
test
xchg
push
mov
out
mov
and
pop
in
shr
jmp
sub
cwtl
js
dec
fwait
mov
fnstenv
inc
jmp
scas
push
mov
fistl
mov
pop
dec
sbb
xchg
pop
out
or
push
mov
push
sbb
in
scas
jns
cmp
pop
aaa
pop
add
shll
sarb
sbb
mov
add
or
ret
push
loope
adc
mov
cld
jmp
push
cmp
xor
roll
xchg
nop
cwtl
cwtl
or
xor
loopne
repz
in
test
jb
addr16
test
adc
mov
xchg
add
jae
imulb
stos
sahf
pop
sub
add
xchg
mov
imul
adc
lcall
das
push
inc
mov
adc
clc
add
int3
push
mov
in
loopne
dec
fucom
mov
inc
cmp
lahf
sub
aaa
mov
out
pop
pop
push
mov
loope
pop
inc
xor
jecxz
or
insb
icebp
popa
xor
lods
clc
mov
arpl
sbb
mov
and
ss
into
sub
cmp
sti
cld
loope
push
gs
push
jnp
cs
leave
and
loop
mov
std
xor
scas
xor
loope
test
ja
stos
fsub
fiadds
ror
dec
cwtl
xor
pop
call
scas
inc
pop
ret
negl
imul
adc
lods
sbbb
mov
or
cmp
arpl
xchg
cs
fcmovnu
add
lea
std
mov
nop
push
repnz
add
xchg
sbb
jge
cmp
ret
inc
mov
cmpsl
pushf
sub
xchg
jl
xor
add
sub
sub
mov
cmp
cltd
repnz
mov
jb
mov
cli
jno
cmc
push
jl
outsb
insb
dec
xor
adc
movsb
xchg
popf
and
shl
mov
fstsw
lcall
inc
inc
adc
jge
aas
mov
scas
rolb
popf
sarl
mov
dec
cltd
das
adc
mov
shlb
mov
fiadds
jp
push
andb
cwtl
push
xor
jecxz
mov
sbb
out
jge
pushf
clc
out
dec
stos
sbb
popf
cmp
push
negb
cs
push
ficoml
jbe
mov
mov
pop
adc
jmp
mov
cmpsb
stos
jno
mov
cld
fdivl
cli
jne
test
shrl
aad
shlb
or
lock
fwait
push
outsb
orl
imul
pop
jnp
sahf
push
jmp
and
fists
subl
xlat
jle
mov
pusha
add
dec
push
not
cld
negl
lods
sub
hlt
mov
sub
fnstenv
movb
test
in
les
inc
or
fistl
xor
fimuls
push
jno
ja
mov
xlat
mov
cwtl
dec
mov
jl
enter
push
pop
push
sbb
mov
mov
mov
mov
adc
sbb
call
and
xchg
lcall
mulb
aad
push
jb
inc
cmp
in
rolb
cmp
mov
inc
or
jae
xchg
jo
jg
insl
mov
rorb
pop
repnz
cmp
mov
aam
stos
call
in
xor
lds
mov
xor
pop
push
movsb
push
pop
jmp
outsl
jg
test
inc
xchg
xchg
fnsave
inc
roll
movsl
cmp
ds
sbb
pop
pop
push
test
adc
jecxz
pop
and
pop
lods
pop
mov
xchg
xor
mov
dec
and
add
dec
sub
scas
xchg
stos
mov
mov
lods
xor
sti
ds
add
push
stc
sub
cmp
xor
jle
or
add
aad
shlb
inc
jp
mov
fisttpll
add
aas
es
and
adc
lods
cmpb
xor
test
dec
adc
inc
jp
jo
mov
inc
lret
test
inc
mov
pop
cmp
js
push
jae
pop
mov
nop
sub
enter
fisttpll
and
sbb
adc
jmp
jg
mov
cmc
adc
in
pop
lods
xor
leave
fldenv
jp
mov
loopne
pushf
fists
xor
mov
and
lcall
repz
inc
and
cmp
in
mov
push
ds
aas
in
xor
test
push
lods
sub
xchg
and
fisttpl
enter
pop
pop
dec
pop
sbbl
ret
outsl
scas
adc
or
int
mov
daa
aaa
add
fnstsw
adc
adc
sub
cmp
mov
xchg
xchg
dec
cmpsl
cmpsb
cmpsl
push
movsb
xor
fcos
imul
pushf
mov
in
aas
sbb
push
sbb
and
int
add
mov
pushf
cwtl
or
push
ljmp
imul
mov
push
in
outsb
negb
pop
jns
adc
fsubl
out
in
mov
jae,pn
fmull
inc
lcall
inc
cwtl
mov
idivb
sbb
push
push
cmp
pop
xor
xchg
scas
inc
lock
stos
mov
dec
sub
inc
mov
mov
push
adc
repnz
cmp
jecxz
sub
add
add
fsubrs
jae
cmp
mov
xor
adc
and
ret
inc
sarl
lret
pop
fdivs
push
in
cmp
testb
xchg
sub
add
test
cmp
std
ror
insb
push
inc
fsubrl
rcr
cmp
mov
mov
sub
xchg
aaa
xorl
in
lods
rorb
push
push
int3
and
jp
mov
dec
cmovnp
mov
mov
push
pop
cmc
pop
xchg
hlt
fwait
mov
dec
lret
sbb
pop
mov
imul
in
insl
adc
lds
inc
imul
adcb
cli
mov
inc
push
push
push
dec
lret
dec
lret
js
jbe
shlb
pop
jg
dec
pop
mov
mov
pop
movsl
mov
inc
mov
gs
jnp
inc
ss
imul
rclb
pop
pop
mov
fsubs
sbb
add
xor
into
stos
mov
pop
mov
dec
dec
mov
pop
ds
push
xchg
ret
jnp
fcomip
lea
and
inc
mov
sub
pop
lds
mov
xchg
mov
stc
pop
inc
stc
cmp
shlb
xlat
adc
xchg
jp
or
xlat
pop
lcall
and
push
push
push
sub
push
rorb
scas
out
outsb
ljmp
shrb
sbb
dec
enter
sbb
lret
and
sub
dec
lret
mov
push
int
cs
aas
in
sub
shlb
iret
xchg
lods
cmp
test
push
xor
mov
or
add
inc
inc
sub
outsl
into
test
mov
outsb
repnz
daa
xchg
sbb
inc
push
cltd
jns
xchg
jge
out
jb
sub
ror
filds
ds
mov
aas
mov
inc
out
mull
dec
insl
in
fwait
xchg
cld
or
mov
and
cmp
dec
fs
inc
fldcw
mov
jp
dec
dec
insb
dec
adc
arpl
in
in
xchg
fimuls
jnp
sti
icebp
pop
flds
mov
popa
sub
sub
jne
mov
lret
mov
sub
ss
movb
add
scas
mov
mov
repz
push
je
adc
js
xlat
call
stc
dec
inc
in
or
out
fwait
or
xor
test
jne
mov
cmp
rclb
dec
sub
pop
sarb
pop
sbb
pop
sbb
or
fnstsw
jae
add
mov
aam
or
ficomps
pop
xchg
les
jle
fidivrs
cld
cltd
push
gs
or
in
push
push
ficoml
incl
mov
cwtl
mov
xchg
jb
add
and
pushf
int
or
adc
shlb
pop
add
pop
inc
insb
insl
push
cmp
adc
cli
mov
jmp
jb
xchg
xor
push
inc
test
flds
xchg
mov
imul
aam
lahf
call
xor
scas
in
jns
push
or
inc
cmp
add
pop
sub
or
dec
aas
mov
ljmp
xchg
sbb
mov
into
cli
pop
pop
pop
das
out
jnp
mov
sti
test
mov
test
sarl
int3
jns
insl
xchg
scas
xor
out
repnz
in
cld
ss
int3
mov
cmpsl
out
test
fwait
lods
mov
cmp
outsb
aaa
xor
dec
sbb
mov
repz
les
cmp
mov
cltd
ret
std
fisubl
scas
call
imul
push
and
mov
push
clc
cs
adc
fldcw
rcrb
push
out
aad
pop
test
iret
mov
into
les
cmp
or
jbe
pop
xor
cmc
mov
inc
lahf
pop
cmp
das
mov
jb
lret
aad
popf
addr16
push
jmp
cmpsb
xchg
imul
inc
je
inc
mov
je
mov
inc
nop
sub
je
test
inc
fldl
cltd
sub
out
ss
xchg
mov
pushl
add
and
addr16
pusha
repz
fsubr
orl
xlat
xchg
imul
mov
movsb
adc
or
push
shr
mov
push
cmc
pusha
jno
fisubrl
adc
cmpsl
test
adc
in
stos
fidivrs
stc
test
dec
xor
add
pop
adc
mov
sahf
cmp
dec
or
subl
jae
add
add
int
adcb
sti
cmpl
outsl
stos
pop
cmpb
gs
sbb
leave
pop
pop
idivb
push
mov
mov
or
or
sub
lods
movsl
in
fnsave
outsl
scas
sub
stos
adc
adc
jg
sub
test
outsb
cld
or
out
xchg
out
mov
adc
ds
push
daa
mov
sbb
pushl
loope
aam
pop
and
fld
dec
aaa
jle
test
cli
sub
xor
inc
pop
imulb
jmp
sahf
xchg
push
hlt
aas
int
sub
pop
mov
sub
mov
push
pop
cmp
mov
addb
xchg
jb
pop
xor
sbbb
mov
jnp
insl
inc
dec
aaa
add
sahf
fsts
in
cmp
mov
mov
adc
movl
jbe
aad
cmpsb
cltd
jb
js
test
cmpsl
mov
pushf
or
pop
lcall
sbb
lods
rcr
sbb
mov
mov
add
mov
in
ja
inc
enter
cwtl
mov
cmpsl
out
jcxz,pn
jnp
fimuls
bound
xrelease
test
lock
adc
push
cli
pop
pop
imul
mov
lret
jmp
and
dec
nop
xchg
sarl
ljmp
add
xorl
fdivs
cmp
cmp
imull
leave
adc
ljmp
cltd
fcoms
fwait
jno,pn
stos
cmp
ror
jge
ja
inc
push
inc
and
push
xchg
jo
lea
dec
dec
inc
aaa
dec
jo
xchg
inc
divb
outsl
push
add
je
cmp
repnz
lret
lods
test
lea
sub
bound
mov
insb
iret
xor
in
test
mov
je
mov
imulb
aam
repnz
insl
cmp
in
push
pop
dec
fistps
bound
add
and
xor
ja
cli
dec
mov
xor
mov
sub
iret
in
sarb
mov
loop
cltd
xchg
out
or
push
insb
push
ret
jbe
jmp
jle
mov
xchg
dec
inc
jge
xchg
pop
imul
fs
fisttps
decb
fs
insb
insb
sub
test
and
popf
add
cmp
clc
mov
xchg
adc
lea
mov
adc
jne
mov
stc
leave
dec
push
lds
loope
ret
mov
movsl
leave
mov
mov
or
cmp
push
cmpb
jb
and
push
mov
pop
jg
shl
cmp
shrl
fldt
pop
pop
or
pop
sub
leave
mov
scas
mov
xchg
jns
int3
push
and
dec
fistps
jo
add
addl
fst
xor
cmpsl
dec
jbe
pop
aam
lret
cmp
aad
sbb
stc
xbegin
in
cmp
scas
push
out
add
cmp
xchg
fld
mov
cwtl
call
mov
in
mov
jbe,pt
push
aaa
rclb
lock
cmp
mov
jbe
scas
enter
jns
es
ss
mull
sbbw
jne
add
adc
outsb
mov
pop
jl
subb
sbb
cmc
or
mov
cs
xchg
lock
int3
cwtl
pop
ljmp
xlat
fdivrs
or
or
jg
xor
or
add
adc
mov
inc
mov
sbb
push
outsl
add
and
sub
sub
jecxz
jp
jo
cmp
out
bound
jle
popf
xor
int
cmp
jp
mov
push
xor
subl
fwait
xor
inc
jbe
movsb
mov
add
mov
bnd
jl
mov
dec
pop
pop
loop
mov
loop
mov
jb
pop
das
hlt
sub
pop
push
jl
addl
lcall
and
sbb
sub
add
or
test
xchg
add
add
outsb
push
jmp
jns
jmp
aaa
jno
inc
sub
mov
insl
sbb
out
or
movsl
cltd
imul
mov
mov
ffree
lods
aas
in
lcall
fs
lds
add
fwait
pop
inc
rclb
int3
inc
jge
pop
daa
push
negl
testb
mov
lods
or
mov
mov
lods
add
fwait
or
into
sub
out
lret
jecxz
add
flds
mov
mov
je
sub
cmp
mov
cmp
xor
mov
outsl
mov
sub
scas
fcomps
or
mov
cltd
jecxz
pushf
add
pop
mov
adc
jmp
test
fwait
pop
ja
cld
test
mov
xlat
inc
push
ficoml
lea
les
mov
bound
or
sub
movsb
add
icebp
cmp
loopne
xchg
shlb
js
dec
iret
push
or
call
cltd
add
xor
inc
sub
cltd
mov
sarb
cmp
pop
ss
xchg
fdivl
and
mulb
jl
movl
cmp
jle
outsb
lret
leave
push
dec
add
pop
rcrb
fwait
hlt
add
sahf
inc
shlb
xchg
xchg
lret
call
xchg
adc
dec
push
sahf
xor
dec
imul
sti
shlb
mov
or
push
xor
aas
add
xchg
scas
outsb
sbb
int3
cmc
aam
cli
add
ret
das
fisttpl
daa
icebp
jne
imul
lock
movsl
mov
std
scas
cmc
jle
mov
mov
loopne
loopne
bound
cs
cmpsb
push
mov
aad
adc
ds
int
cltd
int3
fists
sub
pop
and
fildll
pcmpeqd
daa
in
loope
rclb
mov
inc
xchg
jmp
inc
mov
jno
jl
or
mov
mov
push
or
mov
sbb
or
mov
repnz
cs
mov
push
mov
out
enter
mov
mov
pop
fcomps
push
andb
pop
in
mov
insl
push
pop
mov
adc
or
sub
xchg
lock
out
fs
or
xor
push
leave
jg
insb
cmp
sbb
imul
pop
mov
xlat
movsl
test
or
push
insb
push
mov
nop
daa
adc
adc
aaa
pop
xlat
aaa
cmc
xchg
cmp
pop
fisttps
aas
lods
cltd
mov
sbb
xchg
pop
notb
clc
idivb
lods
mov
jg
sub
lods
sub
and
aam
jle
movsl
inc
fdivs
subb
and
stos
xlat
aam
out
mov
mov
insb
inc
mov
mov
std
mov
mov
sub
sbb
mov
scas
aas
lods
jae
adc
xor
in
dec
pop
sub
sahf
push
aad
mov
in
cmc
jp
test
adc
xor
xchg
push
bound
insl
orl
jb
ds
les
pop
gs
scas
clc
mov
and
movsb
out
decl
lods
loop
mov
fdivl
je
out
inc
daa
data16
and
orl
mov
jae
shl
sti
pop
push
insl
sbb
lret
pop
mov
mov
ljmp
repnz
loope
adc
cmp
pop
into
push
push
jge
sub
adc
mov
mov
stc
faddl
cmp
jne
mov
mov
mov
xchg
call
mov
cmp
cwtl
dec
pop
jnp
sbb
lret
mov
std
dec
nop
inc
jle
xor
mov
insl
push
and
lcall
hlt
int3
mov
test
aad
cmp
cmp
sbb
push
dec
mov
xor
movsb
enter
inc
xor
mov
lock
lds
dec
or
push
loopne
jecxz
cmc
test
mov
and
cs
xchg
fsubp
add
mov
cld
arpl
cmp
test
jg
mov
inc
and
aad
or
and
arpl
fstp
xorb
and
inc
mov
push
adc
sbb
mov
movsb
pushf
das
lock
ss
push
cmp
call
mov
xor
shlb
in
pop
add
aaa
push
fisttpl
out
push
pushf
jno
int
addb
xchg
xchg
add
mov
jno
sbb
call
mov
jb
clc
or
movsl
aaa
inc
loopne
in
sbb
xor
roll
dec
dec
aaa
jbe
sub
fs
push
jbe
add
out
in
mov
cmp
aad
pop
stc
push
xor
sbb
rorl
aad
cmpsb
mov
rolb
cwtl
into
pop
sub
push
pop
test
ret
xor
mov
aam
cmp
push
sub
lret
adc
xchg
dec
cmc
jl
repz
jae
sbb
pop
jbe
fcmovne
fdivp
enter
in
test
adc
enter
and
mov
fadd
xor
pop
cltd
jle
fstpt
int
sub
fisubrs
jl
push
mov
outsl
or
ljmp
shr
stc
test
cmpsl
outsb
js
jle
add
loop
loop
stc
mov
aad
data16
jne
cmpsb
in
pop
test
repz
cwtl
enter
inc
loopne
ret
push
pop
lahf
and
test
lret
or
cltd
pop
add
pusha
pop
or
iret
fcoms
in
pop
push
mov
sbb
outsb
jo
pop
cmp
pop
jnp
adc
aam
push
add
cld
dec
icebp
mov
add
or
add
insb
or
addr16
lea
jge
sub
aas
xchg
and
mov
mov
enter
clc
mov
and
movsb
les
fwait
gs
mov
xor
jae
testl
mov
push
fidivs
ret
fiaddl
mov
lcall
jmp
sbb
and
mov
aad
jg
xor
adc
fdivrs
adc
push
out
fs
out
pop
enter
xor
jle
fnstcw
dec
mov
jno
xchg
xchg
scas
fcoms
or
fsubrs
out
push
jecxz
mov
jge
in
ljmp
cmp
push
pop
aaa
addr16
aas
inc
stos
scas
add
xor
pop
pop
loopne
mov
add
std
jge
cmpsb
out
loopne
mov
and
test
int3
and
ret
mov
mov
sahf
pop
pop
mov
mov
fnstenv
fsubs
scas
xchg
mov
andl
or
idivb
sar
aam
cmp
hlt
in
push
jg
or
lahf
jg
pop
lcall
or
test
test
inc
aad
loope
adc
push
loope
mov
push
push
bound
jp
jle
jb
pop
add
orb
or
leave
aaa
xor
and
add
aam
push
add
aas
gs
in
movsl
mov
das
xchg
jmp
pop
cli
or
loopne
sub
jle
or
data16
xor
ds
mov
adc
ljmp
mov
mov
fildl
jo
xchg
push
clc
fldt
push
leave
xchg
stc
std
inc
loope
dec
int3
mov
push
lods
inc
xchg
imul
test
or
sbb
xor
mov
mulb
adc
loop
adc
aam
daa
test
sub
mov
jmp
adcb
cmp
addl
mov
xchg
dec
cmp
sub
mov
clc
or
mov
add
jo
int
int3
dec
test
cmpsl
add
mov
mov
fdivrl
sbb
cmp
and
adcb
lcall
inc
in
xchg
daa
lock
mov
jl
lods
imul
jge
add
or
and
rcl
std
movsb
sub
pusha
fsubl
loop
in
fnstenv
repz
xchg
fstpl
mov
dec
das
lea
stc
shll
jae
movb
jno
jb
mov
nop
rcl
cmp
sahf
adc
xor
lret
xchg
mov
cmp
frstor
cwtl
and
insb
jnp
test
xchg
push
jns
and
dec
mov
pop
shll
sub
add
mov
jp
dec
sbbl
mov
outsl
dec
adc
jecxz
test
cs
insb
imul
mov
mov
hlt
subb
mov
rcrb
or
cmp
add
jb
xchg
xor
jo
movsb
sub
lea
outsb
dec
cmpl
jnp
lds
aas
pusha
inc
inc
add
mov
mov
in
int3
jns
insb
push
ja
mov
sti
gs
das
in
sub
sbb
lds
and
popa
dec
cmp
sub
push
das
pop
cmp
xor
stos
mov
loope
xor
movsl
stos
decb
sub
dec
outsl
inc
out
sbb
ljmp
stos
cmpsb
ret
cmp
adc
cld
xor
out
mov
scas
or
stos
fstps
pop
test
pop
inc
add
lds
and
mov
add
popf
les
in
xchg
add
and
push
adc
lds
int3
cmp
xor
mov
call
nop
insb
repz
lds
jno
imul
pushf
jbe
mov
cmp
cltd
cmc
lock
jle
fsubrs
jns
jbe
jl
scas
je
in
shlb
sbb
and
mov
and
sub
aas
mov
push
sbbl
inc
lods
rclb
pusha
nop
pop
in
in
mov
scas
mov
out
icebp
hlt
lods
add
enter
popf
shll
rcll
dec
jl
cmp
jl
lock
ficompl
mov
stos
repz
bound
inc
push
mov
jp
mov
adc
mov
addr16
sbb
pop
ljmp
mov
ret
cmp
fucomip
outsl
or
jp
xor
add
add
adc
lods
sub
or
rcrb
test
inc
mov
jnp
push
mov
shl
dec
xchg
in
mov
test
mov
mov
out
jae
int3
sbbl
inc
enter
gs
dec
test
pop
xchg
xor
jecxz
mov
lock
inc
ja
adcb
out
inc
cmp
std
mov
inc
imul
hlt
xchg
cmp
and
lcall
inc
mov
gs
xlat
xlat
xchg
add
shrb
pop
cld
stc
dec
xchg
movsl
add
loope
inc
push
mulb
lods
inc
mov
ds
or
es
xor
insb
and
jl
ljmp
jno
aas
adc
mov
mov
aad
arpl
lret
int3
mov
cltd
lahf
adc
inc
mov
inc
inc
push
xlat
mov
inc
shlw
loope
addr16
sbb
or
in
cmp
in
fisubrl
in
mov
jge
repnz
sub
test
sbb
pop
std
xor
scas
lods
cs
xchg
adc
js
xor
xchg
xor
shl
cs
andb
insl
cmp
icebp
or
cmp
lcall
mov
sub
data16
aas
or
lds
push
inc
lcall
aad
or
pop
xor
inc
pop
nop
dec
inc
xchg
sbb
dec
lahf
mov
mov
js
lcall
mov
inc
loope
lret
or
jle
jb
sub
or
out
dec
push
mov
jno
testb
pop
mov
pop
adc
movsb
mov
iret
lock
and
in
adcl
xor
pop
test
sub
mov
cmp
add
das
sub
xor
sub
arpl
shrb
iret
jmp
xor
cmp
ja
jmp
push
test
cmp
cmp
adc
xchg
clc
data16
inc
sahf
cli
add
pop
sbb
rcll
or
push
lock
mov
push
or
imul
rcr
pop
addr16
and
adc
mov
inc
test
loop
dec
xchg
mov
jbe
fists
inc
adc
pop
inc
out
sbb
sarb
jl
mov
testb
negl
adc
mov
and
xor
cltd
sti
push
xor
es
or
cwtl
int3
push
mov
nop
dec
mov
xchg
pop
bound
push
pop
sti
adc
rcrb
das
rcrl
fstpt
xchg
pop
mov
mov
fs
add
lods
xor
dec
aaa
xchg
rorb
mov
ja
xor
std
inc
test
push
xchg
pop
repz
push
stc
and
xchg
xchg
icebp
stos
lret
sub
loope
loope
sub
mov
push
imul
or
adc
lods
lods
mov
jne
cmpps
push
cmp
imul
mov
xor
push
cwtl
and
out
lret
xor
cwtl
sbb
cmc
jo
pop
xor
adc
mov
sahf
insb
in
xor
stos
adc
dec
orb
and
xorb
shr
outsb
scas
jae
jmp
jne
adc
adc
cmpsl
sub
call
leave
lret
and
js
jno
dec
loopne
ret
push
fadds
ss
call
dec
jecxz
xchg
mov
fdivrs
lock
inc
les
xor
cmp
and
mov
pusha
jp
mov
inc
xor
ja
xor
or
dec
inc
dec
mov
movsl
out
repz
mov
xor
outsl
cmp
jne
testb
xchg
jnp
cmp
xchg
movsb
repnz
adc
mov
rorl
bound
ds
mov
pop
fiaddl
test
push
push
sbb
xchg
adc
mov
scas
mov
jmp
lea
jge
mov
adc
adc
int
imul
insb
xor
int3
rcll
lret
add
mov
loopne
mov
movsl
inc
mov
out
iret
lds
push
call
imul
cwtl
or
insb
fs
addb
pop
addb
mov
adc
xchg
in
aam
mov
aam
test
scas
dec
pop
pusha
adc
lods
mov
aas
repnz
test
cmp
icebp
enter
loop
dec
jnp
iret
popf
or
andl
sub
in
movb
repnz
mov
test
mov
shlb
cmpsl
sub
lds
orl
mov
xor
and
cmp
outsl
ljmp
add
or
arpl
shlb
adc
imul
outsb
mov
fisubrl
insl
gs
insl
mov
xchg
mov
add
ss
mov
stc
push
mov
xchg
xchg
cltd
jp
and
xchg
mov
mov
mov
movsl
or
lds
pop
jns
scas
mov
pusha
fcmovne
xchg
pusha
fwait
and
or
sbb
aam
mov
lea
jp
pop
dec
orb
repnz
cld
lret
xchg
add
inc
mov
les
scas
outsl
lahf
test
in
or
adc
fldt
cmp
pop
rol
add
rcrl
jle
aas
or
mov
mov
or
pop
or
inc
fsubp
test
cmp
bound
xor
push
add
test
mov
scas
jnp
ret
fstl
push
push
setl
gs
xchg
shll
out
ss
or
popa
enter
push
mov
cmpsl
pop
or
lock
cwtl
mov
ss
movsl
imul
pushf
pop
out
cs
xor
or
jle
movsl
mov
scas
pushf
and
push
subl
dec
adc
cmp
lea
scas
pop
and
mov
dec
outsl
repnz
mov
cld
push
and
lcall
movsb
outsl
inc
sbb
shrb
orl
fcmovne
add
subl
and
rcrl
or
jo
int
cmpsl
xor
and
test
test
add
lods
mov
xor
xor
sub
and
or
mov
int3
dec
dec
sbb
mov
imul
and
icebp
movq
repnz
gs
das
push
push
sub
int3
addr16
or
outsb
outsl
cwtl
pop
mov
lods
and
aaa
pop
cmc
or
jecxz
cmp
divb
or
jmp
fimull
fisubrs
sub
ljmp
add
cmp
pop
pop
std
jmp
fsubl
xchg
push
dec
jge
mov
cs
das
mov
pusha
mov
jmp
mov
cmpsb
ss
ret
mov
test
mov
fs
push
and
jge
push
bound
xor
adc
jnp
dec
xor
add
out
dec
in
imul
shll
or
mov
add
shrl
adc
adc
push
outsb
xor
bound
cmp
fs
aad
pop
mov
enter
sahf
insl
ret
pusha
pop
jle
xchg
in
mov
or
sbb
and
lds
pop
js
mov
imulb
imul
iret
pop
loopne
sbb
pop
mov
mov
and
sub
sub
ja
scas
mov
out
xlat
addr16
fst
xor
mov
bound
pop
stos
out
jmp
popa
pushf
fdivs
mov
call
aad
imul
pop
xchg
dec
sbb
push
je
les
mov
jnp
data16
sub
mov
adc
shll
push
jmp
and
sti
inc
cld
sub
sbb
and
fst
test
xchg
add
hlt
mov
xchg
sbbl
mov
shl
mov
andb
fisubs
inc
cmp
iret
mov
testl
pop
jl
enter
int
pop
stc
pop
aam
jmp
xadd
add
or
and
ret
pop
xchg
stc
push
add
inc
push
push
imul
pop
inc
jecxz
mov
and
push
in
xlat
pusha
dec
scas
iret
fidivl
jno
jl
ss
jge
cwtl
fwait
jge
push
pop
fisubrs
testb
hlt
dec
and
dec
mov
ficomps
adcb
jecxz
ds
mov
in
or
mov
push
fcmovu
jns
jbe
fisttpll
inc
hlt
and
clc
lods
jmp
xchg
adc
mov
cmp
nop
push
mov
dec
jecxz
sub
xchg
cmp
mov
iret
shrb
int3
rolb
push
lret
shll
test
rcll
sub
xor
inc
pop
jge
jp
ret
push
dec
in
xchg
cmp
movsl
fxch
mov
jcxz
test
jmp
int
xor
and
and
lock
mov
add
xor
icebp
cmp
mov
lret
jmp
sbb
jp
imul
movsl
icebp
inc
ror
pop
mov
outsl
adc
aas
jge
or
lods
scas
cmpsb
popf
andl
ljmp
or
pop
sub
lock
dec
push
inc
je
push
insb
pusha
test
mov
int
push
inc
pop
je
inc
iret
and
gs
cmp
mov
mov
rcl
sbb
lahf
rcll
scas
push
sbb
shr
push
inc
rcll
xor
inc
lret
mov
scas
fwait
sahf
les
cwtl
dec
incl
aas
in
test
outsl
mov
stos
mov
fistl
lret
data16
std
pop
mov
fisubrs
adc
xchg
adc
mov
xchg
cmp
jl
arpl
pop
inc
mov
sub
repnz
add
aam
aam
jns
push
addr16
or
rcrb
or
in
push
lea
arpl
xchg
test
or
mov
repnz
xor
sub
dec
mov
cmp
add
in
ret
jnp
dec
data16
cwtl
add
fcoms
sbb
pop
xchg
inc
sbbl
call
adc
xor
inc
in
scas
push
ljmp
mov
xlat
neg
xor
retw
stos
xlat
jmp
or
pop
inc
fs
lds
xlat
fisubrl
push
fsubs
out
pop
jnp
and
inc
fnstcw
das
mov
lods
mov
leave
pop
mov
leave
addr16
dec
jbe
ret
into
xchg
push
sbbb
adc
std
outsl
cld
stos
sbb
les
mov
ds
pusha
aas
nop
aas
stos
fldt
prefetchnta
add
aad
xchg
xor
cwtl
fildl
push
adc
js
jne
out
mov
dec
bound
xchg
pop
sub
adc
xchg
cmp
mov
imul
es
lcall
ficompl
loop
js
push
pusha
outsb
or
into
lret
popf
and
out
in
lods
sahf
daa
lods
aas
add
loop
lea
decb
dec
inc
je
lret
lcall
inc
ljmp
rorb
pop
stos
or
lret
jle
adc
stos
rorl
or
arpl
mov
jmp
sbbb
adc
jo
cmp
inc
leave
sub
jno
dec
add
xchg
addb
stc
repnz
enter
popf
inc
jo
repnz
mov
imul
xchg
sbb
movsl
nop
push
push
xlat
sahf
iret
das
loopne
shr
dec
aaa
mov
rcl
or
cwtl
dec
ficoml
es
aaa
into
push
sub
dec
sbb
sub
insb
adc
push
fwait
and
dec
ja
cmc
and
mov
xchg
xlat
stos
push
inc
add
xorl
mov
mov
enter
xchg
or
mov
mov
out
push
cmp
lahf
or
fisttpll
adc
mov
lret
notl
ret
out
stos
inc
jno
pop
bound
scas
mov
fcom
push
mov
pop
mov
in
pop
test
push
scas
cmp
or
inc
cmp
das
sub
sub
mov
lret
jbe
mov
mov
fadd
stc
out
in
mov
xchg
push
xchg
gs
enter
pop
cmp
in
inc
mov
sbb
negb
mov
rcrl
pusha
insb
push
shl
rcrl
pop
jbe
fstps
jbe
adc
jp
mov
addl
mov
popf
cmp
dec
xor
repz
test
xor
dec
pop
shrb
divl
insb
adc
loop
je
stc
sbb
xor
daa
lds
int
mov
mov
push
pop
div
daa
ss
pop
xor
fnstcw
adc
iret
test
jge
lcall
pop
cltd
test
cmpsl
ja
mov
sbb
das
insl
roll
int3
lea
ja
inc
xor
test
xchg
leave
addb
inc
mov
jmp
push
or
je
jno
test
leave
push
inc
into
scas
cmpsl
pushf
int
sbb
or
or
pop
in
out
mov
mov
test
cmpsl
push
xor
mov
adc
mov
or
test
or
rclb
cwtl
rcrl
and
out
mov
jle
ret
sub
dec
fsubrp
jb
lea
das
cs
stc
loopne
icebp
or
es
pop
out
loop
sbb
mov
xor
xchg
mov
or
pop
mov
in
pop
sub
int
mov
into
das
rcrl
mov
mov
lds
stos
pop
cwtl
inc
roll
jns
adc
sbb
stos
jge
cwtl
cltd
pushf
pop
int
cmc
pop
test
test
mov
iret
in
jbe
test
call
add
push
xlat
push
in
jge
iret
mov
xchg
mov
lret
adc
sub
pop
dec
sbbb
xor
lods
out
and
popf
inc
and
je
push
adc
xchg
out
pop
outsl
test
sub
push
or
fwait
aam
fsubrl
xchg
dec
or
and
mov
push
jo
pop
das
cmp
mov
inc
adc
mov
cmp
push
sbb
inc
or
pop
xchg
pop
add
loope
in
lahf
clc
adc
inc
sbb
ret
in
sub
xchg
das
add
rcl
jo
and
push
iret
fsubrs
bound
adc
gs
mov
es
clc
js
push
lds
jp
or
es
adc
cmp
fidivrl
pushf
cmp
mov
add
pop
mov
scas
loope
pop
lds
js
sub
fdivs
ja
es
aad
mov
in
das
mov
fisttpll
or
in
in
gs
in
push
cmp
inc
jle
arpl
mov
push
addb
loopne
movsb
jo
stos
lock
ds
inc
pop
mov
mov
sahf
in
mov
popf
or
in
fisubrs
mov
pop
sub
pop
jnp
aam
xor
fists
push
stos
and
dec
xchg
and
rorb
fs
push
int3
ret
repz
icebp
ficomps
pusha
pop
and
add
movsl
add
orb
fisubrs
popa
adc
je
idivb
loopne
mov
pusha
cmc
or
mov
imulb
add
bound
push
jge
loopne
cmp
mov
sbb
test
loope
mov
inc
pop
xchg
mov
pop
adc
lds
mov
gs
mov
lods
into
cmc
pop
and
xchg
imul
mov
and
mov
nop
lds
pop
pop
ds
daa
mov
mov
adc
cltd
mov
sub
push
and
aas
imul
aad
les
int
ss
push
dec
test
cli
iret
dec
adc
lcall
dec
cmp
push
push
das
incl
lods
xchg
scas
jbe
sub
movl
fs
mov
out
pushf
jmp
in
or
cmpsl
cltd
mov
jns
rcrl
or
adc
mov
jbe
loope
addr16
pop
iret
sbb
insb
ds
movb
insb
idivb
adc
pop
and
leave
out
pushf
pop
imul
arpl
mov
mov
mov
test
scas
bound
xchg
pop
mov
push
cmpl
lret
aas
mov
shll
test
sub
out
pop
popa
ficompl
clc
fsubr
daa
shll
loope
out
or
jmp
xor
popf
inc
dec
clc
push
jnp
or
or
cmpsb
dec
adcb
pop
jb
adc
outsb
in
aas
inc
jge
sub
inc
in
cs
test
xor
jle
test
sti
inc
mov
loope
aas
loopne
inc
aas
sahf
ljmp
fst
icebp
adc
cs
jle
inc
sbb
xor
popf
mov
xchg
mov
insl
or
push
js
aam
jge
in
push
das
call
pop
ret
ret
sbb
push
testb
scas
dec
push
jl
pop
mov
cmpsb
pop
inc
sbbl
jmp
mov
dec
adc
xchg
adc
mov
clc
jns
mov
mov
jo
dec
xor
mov
stos
mov
test
mov
bswap
gs
sahf
xchg
or
pushf
jae
ret
xchg
adc
movsb
stos
add
mull
cmp
dec
in
or
ret
popf
inc
xorl
hlt
pop
xchg
push
mov
jmp
pop
or
add
pushf
adc
mov
or
mov
mov
pop
repz
out
repz
adc
stc
inc
fmuls
pop
movsl
inc
mov
into
imul
xchg
rorl
sbb
hlt
jmp
cwtl
fistpl
or
into
test
push
outsl
test
je
test
xlat
inc
mov
inc
call
or
mov
pop
or
and
cld
pusha
movsb
rcrw
popf
fcomi
fstl
jge
mov
mull
cmp
sarl
xor
jo
inc
filds
mov
xchg
mov
jbe
shrb
fidivl
fs
lret
mov
and
inc
dec
adc
jmp
nop
lods
pop
movsl
pop
shlb
lods
mov
mov
inc
addr16
lds
xchg
cmpl
iret
xchg
test
call
push
jb
clc
push
mov
call
xor
in
lods
and
xor
cmp
pop
dec
cwtl
int
push
jno
insb
sub
scas
xor
push
clc
sub
pop
mov
lret
jge
inc
in
repnz
test
dec
pop
loop
fdecstp
and
mov
imul
jl
jmp
test
mov
dec
adc
jl
cmp
jecxz
adc
fstl
popf
jo
stos
xchg
or
insb
aam
inc
clc
imulb
cli
in
sbb
xor
ljmp
mov
and
or
push
psubq
test
cmpsb
hlt
js
ret
fildl
rcr
inc
cmp
outsl
mov
sub
xchg
xchg
int
mov
pop
ja
out
cmp
outsl
jl
jmp
pushl
outsb
lock
mov
sbb
loopne
pusha
ss
lahf
push
lods
mov
and
inc
bound
dec
mov
pop
leave
test
fsts
adc
jge
call
push
icebp
repz
std
xor
ja
outsb
mov
fdivrp
mov
mov
push
in
mov
mov
lret
insb
bound
jbe
and
leave
lcall
enter
or
rorl
mov
test
pop
xor
mov
ficompl
lea
xor
pop
fwait
cltd
int
add
cmp
or
and
stos
xchg
mov
dec
das
pushf
aam
mov
frndint
mov
fcmovne
ljmp
sub
mov
xor
xor
dec
sub
xor
insl
mov
leave
push
xchg
lcall
mov
cld
in
dec
push
jmp
pop
lahf
cmp
and
int3
push
fwait
push
push
inc
mov
lcall
sub
stos
mov
movsb
pusha
sbb
cmpsb
pop
cli
or
loope
je
movsl
hlt
inc
hlt
or
js
mov
add
pop
aam
cld
aas
insb
and
jmp
aas
push
pusha
jle
mov
lret
xor
adc
out
sub
mov
mov
jecxz
mov
testb
inc
pop
sub
add
dec
and
adc
mov
fwait
sbb
mov
pop
sub
and
xchg
in
or
pop
cs
lahf
fiaddl
fists
mov
test
xchg
test
or
out
hlt
xor
lds
mov
add
mov
mov
pusha
fldcw
jg
call
scas
jne
in
mov
mov
lret
cmpsb
mov
outsb
repnz
das
pusha
pushf
pop
data16
inc
icebp
jp
gs
popf
pop
inc
sahf
and
sahf
xchg
sub
mov
repnz
mov
call
mov
or
in
jbe
mov
mov
push
pop
or
std
jne
add
lods
xchg
inc
cmpsb
push
and
mov
mov
int3
adc
dec
xchg
xor
sbb
jp
jae
jle
lahf
xlat
push
insb
out
fsubp
pop
adc
sub
bound
pop
adc
adc
lcall
push
aas
test
mov
iret
push
push
fsubs
xchg
repnz
lock
jnp
js
popa
or
mov
inc
lret
popa
sub
or
jns
ljmp
ret
mov
or
jl
jle
mov
insb
inc
or
and
into
mov
dec
sti
dec
mov
cltd
sbb
mov
fisubl
outsl
adc
mov
adc
adcb
sub
and
xchg
adc
aam
test
sbb
add
das
mov
add
or
add
cs
sub
fistps
mov
inc
dec
lea
sbb
or
bnd
movsb
xchg
inc
repz
add
pop
imul
repz
fstl
inc
test
sub
push
in
jmp
hlt
cld
and
jl
std
fstpt
add
subb
ret
fistpll
add
sub
loopne
fistps
cs
jl
lea
mov
rorl
lret
pop
add
mov
xchg
outsb
or
or
test
hlt
jmp
pop
enter
mov
loop
add
sbb
fisttps
iret
rolb
clc
sbb
sbb
mov
sarl
push
in
push
sbb
add
imul
add
std
popf
mov
sbb
pop
push
cmp
or
je
lcall
lret
pop
dec
mov
mov
cs
and
xchg
pop
insl
xchg
imul
fidivs
cli
out
mov
ret
lds
fs
mov
cmpl
mov
lret
cmp
jbe
rcl
clc
add
rorl
fimuls
cmp
cmp
aam
outsb
sarl
jae
sbbl
sbb
lret
jo
in
pop
test
xor
testl
mov
shr
ds
mov
sbb
rcll
mov
dec
cmp
push
jns
push
out
mov
inc
cmp
pop
push
push
stos
push
or
enter
push
outsl
icebp
fldl
jp
test
xchg
or
pop
add
cli
push
mov
nop
iret
cmp
cltd
dec
js
mov
aas
sub
clc
leave
test
das
aad
or
mov
in
xchg
mov
and
mov
outsl
iret
lods
lcall
adc
pop
popa
lods
bound
inc
daa
add
fsubrp
xorl
add
mov
pushf
fs
sub
adc
push
xchg
jno
test
sub
int3
nop
pop
push
mov
mov
js
mov
jmp
in
mov
push
aam
xlat
jge
mov
xchg
enter
mov
cmp
xchg
mov
xor
xchg
imul
call
inc
into
mov
xchg
cmc
mov
movsl
jae
push
popf
outsb
mov
loope
sub
rolb
sub
sub
lret
xchg
dec
sub
pusha
pop
dec
cltd
xchg
sbb
les
fistpl
popf
cmp
lret
xchg
xchg
pop
add
cmc
loope
loop
mov
dec
jne
xor
nop
imul
mov
sbb
les
fcomi
sub
das
js
xor
xchg
sub
and
movsb
inc
jns
cmc
ds
xchg
sub
test
cltd
stos
les
xchg
fldcw
decl
subb
aas
pop
leave
testb
or
inc
push
in
iret
and
scas
repnz
iret
daa
cmc
arpl
cli
pop
push
push
push
push
lcall
das
jo
push
mov
aad
and
mov
xlat
jbe
lds
mov
clc
lea
jmp
xor
xchg
jmp
mov
fistpl
stos
pop
push
imul
mov
or
mov
mov
pop
mov
or
push
in
or
in
inc
loop
jmp
jnp
imul
je
outsb
divb
dec
rorb
xchg
pop
jl
insl
and
outsb
cmc
insl
clc
push
mov
jmp
aaa
shrb
cmpsl
fidivrs
movsl
jbe
imul
or
cmp
mov
pop
in
arpl
or
dec
mov
and
pop
insl
jmp
ficoms
xchg
adc
dec
push
pusha
pop
clc
movsl
in
pop
jecxz
mov
mov
and
mov
sahf
imul
jl
lods
cs
push
test
inc
je
or
adcl
sub
negb
insl
jnp
inc
ja
push
push
int
fcoms
in
loope
add
rcrl
or
lahf
bswap
xchg
lods
and
or
adc
push
mov
pop
es
bound
jl
ret
aam
enter
jne
das
mov
mov
add
out
aas
mov
sbb
mov
mov
lds
xchg
ret
ret
lcall
rcl
mov
sub
or
and
sahf
cltd
jns
cmpsb
ret
loop
or
es
sbb
ja
call
lahf
imul
dec
dec
je
loop
repnz
push
into
mov
mov
negb
xchg
out
outsl
pushf
pop
cltd
cmp
sbb
andl
imul
pop
std
push
dec
or
pop
push
add
ret
mov
lods
outsb
sbb
and
mov
fsubp
pop
into
loope
pmaxub
push
sbb
leave
bnd
or
xchg
pop
jl
mov
loope
std
int
mov
and
dec
xchg
adc
jmp
pop
das
mov
mov
mov
or
jp
mov
adc
xchg
frstor
push
pop
arpl
pop
gs
imul
lret
sbb
jl
sti
mov
insl
loopne
cmc
fcoml
fs
ficomps
test
ret
out
cmpsb
jl
adcl
pop
popf
testb
int3
ficompl
inc
fcompl
loope
int
jecxz
loop
aad
inc
insb
mov
jae
xchg
loopne
cmpsb
mov
inc
sbb
fs
or
stc
or
ja
jae
mov
and
inc
rcrb
and
hlt
nop
pop
mov
inc
pop
movb
aas
push
sahf
push
lods
sbb
into
jb
loope
push
or
pop
mov
outsb
xor
xchg
adc
jno
lods
icebp
cmpsl
or
das
stos
sub
fisubs
jg
pop
test
and
push
push
daa
sbb
dec
mov
in
mov
jmp
pop
push
test
adc
xor
push
or
ficoms
inc
adcb
inc
mov
imul
or
es
adc
filds
aaa
mov
lods
mov
pop
pop
mov
lcall
call
sbb
orb
and
adc
xchg
clc
shlb
imul
out
pop
jb
data16
in
mov
dec
mov
dec
cmpsl
xlat
jge
dec
jno
arpl
test
outsb
lcall
test
cwtl
mov
dec
push
push
mov
fwait
test
sahf
sbb
outsb
fstpl
mov
into
mulb
ds
sbb
xor
das
mov
notb
jo
cmove
jmp
int
cmp
cmp
push
fucom
add
ja
jns
dec
fdivs
std
push
movsb
fsubl
enter
test
lret
jnp
mov
sbbl
cwtl
xor
xor
sbb
lcall
testb
add
daa
in
movsl
loop
test
in
mov
negb
dec
insl
adc
jmp
dec
and
pushf
ficoms
leave
test
cmp
jns
cmp
cmpsb
mov
lret
repnz
push
jp
cmp
pop
jp
jnp
jmp
push
lock
pop
add
mov
inc
or
xrelease
ss
mov
ret
xchg
adc
daa
add
sbb
pop
or
jno
cmp
and
sahf
in
mov
cltd
stc
mov
or
enter
test
divb
mov
jne
or
repz
lods
adc
xchg
jg
jmp
xor
sub
xchg
jbe
or
pop
movsl
fs
mov
lret
pop
xor
fadd
test
imul
pop
mov
test
add
outsb
jge
pop
subl
jno
loop
sub
inc
je
imul
repz
popa
and
or
lea
icebp
inc
mov
sub
je
popa
outsb
pop
out
shlb
inc
popf
imul
mov
pop
cwtl
dec
jne
repz
test
and
xchg
push
in
lret
or
cmpb
rol
fs
pop
adc
xchg
mov
clc
mov
in
xchg
std
in
jbe
in
subl
xor
sbb
movsl
adc
mov
sbbl
mov
cmp
in
mul
inc
mov
rorb
jb
dec
shr
aas
cmp
dec
or
adc
sub
and
loop
dec
mov
mov
push
jge
sbb
pop
jg
ds
rcrl
inc
std
xor
subl
adc
or
insb
jno
pop
jmp
sbb
int3
dec
fbstp
mov
jp
mov
outsb
and
inc
jbe
outsb
mov
or
adc
les
dec
mov
sbb
cmp
and
jbe
or
push
shrl
or
pop
or
mov
cmp
jnp
into
fsub
pop
or
shll
mov
sbb
or
xchg
js
cmp
stos
cmp
lret
imul
push
fnstsw
adc
mov
push
mov
push
pop
fs
and
pop
into
andb
loopne
in
iret
insl
xor
insl
iret
pop
jne
adc
jo
sbb
add
mov
cli
pop
in
out
jno
sbb
fbstp
out
scas
es
jl
icebp
or
int3
push
ret
lods
sbb
push
stos
inc
in
jp
jne
cmpsl
and
mov
or
mov
cmp
cs
or
fnstcw
in
setae
push
test
clc
pop
jnp
popf
cs
adc
inc
ret
popa
sbb
sbb
dec
pop
test
lahf
ret
mov
movsb
cmp
lret
and
sub
ret
es
sub
sbb
outsb
mov
outsb
stos
jecxz
cmpsl
cmp
xor
mov
stc
js
or
or
cmpsb
xchg
pop
popf
cmp
aad
jno
aas
jp
fidivs
in
test
sub
dec
shrb
lcall
push
pop
inc
in
sbb
mov
xlat
lock
addr16
sub
xchg
inc
out
pop
jo
pop
inc
ret
and
jg
xor
es
xchg
or
mov
mov
sub
fwait
and
lcall
test
add
mov
repnz
les
jl
cld
sbb
loop
in
scas
int3
push
loope
push
push
or
out
mov
incb
cmp
es
push
and
dec
sahf
push
jbe
or
fwait
dec
or
aad
and
xor
add
std
mov
scas
shrb
icebp
inc
lret
fcomi
jge
lds
mov
add
push
jnp
outsl
sub
cmp
jns
inc
mov
test
pop
nop
push
cmp
mov
or
and
ljmp
and
mov
aam
repnz
cmp
xor
insl
and
inc
pop
das
xor
push
in
negb
in
inc
xor
dec
push
mov
fprem1
add
jge
pop
icebp
cld
add
inc
mov
pop
xchg
enter
js
data16
push
out
jns
cs
dec
data16
adc
xor
add
mov
loop
and
cmpsb
and
rorl
outsl
loop
push
idiv
add
imul
iret
inc
incb
mov
xchg
int3
fiaddl
das
lret
push
sbb
add
dec
xchg
in
in
mov
jne
lret
stc
lret
pushf
push
sbb
or
lret
ret
mov
push
ljmp
push
push
loope
sbbl
push
add
in
push
mov
test
xlat
aas
test
ljmp
push
push
inc
jl
aaa
or
mov
pop
jae
roll
push
mov
aad
add
or
add
adc
adc
ret
stc
pop
xor
mov
fldcw
add
jl
inc
push
fstpt
sub
fcmovb
cld
je
pushf
xchg
pop
inc
and
sub
pusha
inc
jne
in
inc
hlt
mov
pop
lret
sub
daa
push
dec
push
enter
neg
loopne
mov
add
mov
jne
jbe
dec
rol
push
fucompp
pop
dec
mov
dec
ret
xchg
cmp
fs
cmp
imul
xchg
sbb
or
fsts
inc
and
pop
cmpsl
sub
scas
test
mov
into
subl
dec
mov
push
repnz
pop
adc
xchg
mov
pop
sub
jecxz
mov
and
adc
aad
and
subl
out
inc
orb
jmp
pop
mov
mov
sub
dec
mov
or
test
int
push
cmpsb
adc
adc
dec
js
mov
setle
push
js
fidivrl
sbb
fnstsw
outsb
dec
fimull
inc
lret
lcall
aas
push
stc
pop
push
out
jno
add
fs
push
xor
dec
loope
fs
faddl
mov
or
push
in
xor
pusha
and
imul
mov
data16
mov
inc
xchg
out
dec
cmp
and
cmpsb
mov
fstpl
idivb
sbb
pavgb
popa
sub
data16
and
loop
dec
lds
out
je
movsb
aaa
ljmp
ficoms
push
jae
out
loopne
add
cld
shlb
addr16
popa
pop
sub
enter
push
movsb
lods
jmp
cmpsl
mov
xchg
pop
repnz
sbbb
and
test
push
jl
dec
sbb
add
lock
inc
ficompl
push
xor
mov
pop
and
test
pop
xor
mov
movsl
and
adcb
fdivr
dec
xchg
addr16
xchg
mov
xlat
add
cmp
imul
sahf
sbb
add
push
xchg
sti
inc
dec
lods
outsb
mov
test
mov
or
scas
mov
repnz
and
insb
add
sbb
xchg
icebp
das
cmp
and
mov
or
xchg
push
pop
aam
out
mov
popf
repnz
insb
popa
sbb
xor
inc
shrb
xchg
mov
mov
int3
cmp
lcall
outsl
or
loope
daa
sub
int
jmp
jecxz
cmp
push
inc
hlt
push
xlat
dec
stos
lret
pop
aas
loop
testb
or
mov
dec
fisubs
orb
push
shl
ret
popa
push
jmp
addw
mov
lret
xor
icebp
dec
push
movsl
push
ret
enter
pop
pop
xchg
jp
jl
mov
inc
mov
outsl
and
push
lret
int3
dec
loop
dec
sbb
gs
cwtl
jp
pop
xor
cmpsl
fists
inc
cld
pop
das
imul
std
mov
sub
sbb
arpl
and
inc
lret
jbe
in
jns
mov
std
adc
pop
fisttpll
pop
fnstenv
or
push
test
ret
fwait
sbb
cmp
cmp
loop
pop
xlat
call
xchg
daa
sbb
xchg
sub
sbb
inc
ss
mov
inc
pushf
push
mov
push
add
inc
inc
pop
inc
mov
notl
mov
out
lret
popa
sbb
jle
push
mov
mov
addb
cmp
sub
adc
adc
mov
fs
js
or
rorl
sbb
ret
in
xchg
mov
push
and
jl
cmp
push
adc
loope
and
into
dec
in
ficoms
test
sub
fdivl
pop
rep
stos
sbb
cmp
mov
xchg
pop
or
in
add
fbld
mov
jb
popa
xor
daa
es
sahf
enter
jno
adc
jmp
mov
add
sub
into
leave
fs
imul
pop
lahf
sub
lock
mov
adc
pop
jp
dec
sbb
jmp
popf
cwtl
aam
pop
out
or
push
nop
popf
xor
dec
movsb
loope
jbe
inc
add
pop
cltd
cmp
rolb
icebp
push
dec
jp
lods
ss
negb
dec
push
jb
test
xor
loope
lods
test
mov
sbb
leave
dec
dec
inc
inc
aad
out
clc
movsb
mov
inc
lock
lock
jno
push
ror
cwtl
add
and
hlt
pop
push
inc
push
lcall
mov
or
jae
adc
jb
and
or
addr16
mov
fnstcw
fsubrs
loope
subl
add
sub
scas
leave
dec
stos
arpl
popa
xor
cld
fbld
mov
adc
test
lods
xchg
dec
inc
dec
jge
inc
mov
lcall
mov
int
and
cli
mov
sbb
and
sub
or
pop
enter
mov
and
insl
adc
adcb
sbb
inc
push
aas
and
push
jns
jne
outsl
mov
xchg
adc
in
sbb
push
push
out
std
dec
andl
sub
imul
inc
sub
mov
inc
sub
xor
push
cld
fwait
jne
pop
mov
shl
sbb
rorb
adc
arpl
aad
fsubrs
scas
or
hlt
xchg
repz
cld
addr16
xor
jg
mov
shll
daa
rcrb
dec
mov
jbe
mov
std
and
pusha
iret
jle
test
mov
shll
add
das
cmp
sbb
ret
jae
push
adc
cmp
push
scas
popf
jnp
ds
int3
and
in
test
pushf
push
addr16
mov
hlt
rorb
xor
loope
cs
lods
pop
lahf
js
popf
sahf
in
outsl
sub
inc
jnp
lea
jne
dec
ljmp
pop
push
mov
push
pop
jns
mov
js
sub
jmp
xchg
jae
inc
pushf
add
sahf
pop
dec
or
aad
insb
mov
out
xor
inc
fwait
xchg
js
stos
or
mov
adc
imul
dec
cmp
cmp
push
mov
cmp
push
mov
sub
cwtl
int3
pop
xor
and
imul
es
mov
pop
movsl
pop
or
dec
jae
mov
negb
xchg
data16
jmp
inc
cmpsl
cmp
aad
int3
pop
cmp
xchg
sub
shl
sub
repnz
fldl
mov
and
loope
gs
out
addl
xor
cmc
fs
cmc
add
aas
mov
fadd
jl
sbb
sub
jnp
outsl
int3
into
call
scas
lret
stos
or
cmpsl
inc
les
push
push
pop
push
dec
push
add
dec
test
xor
jp
mov
add
sub
add
cmc
mov
add
inc
sub
adc
xchg
push
dec
inc
pop
adc
aad
into
jge
or
jg
fstl
lock
mov
mov
imul
sub
negl
inc
sti
and
loopne
iret
jb
sbb
mov
enter
lahf
jne,pn
popf
pop
inc
mov
dec
push
outsb
cmc
cltd
das
xor
cmc
mov
adc
pop
sbb
cmp
test
xor
xchg
jns
xchg
cli
shlb
inc
js
xlat
mov
popf
mov
mov
adc
push
pushf
mov
xchg
add
rcrb
jmp
add
pop
imul
lds
add
push
addb
cmpsb
ss
inc
dec
cmp
sbb
negl
icebp
lods
adc
faddl
inc
push
or
sbb
dec
rcll
sub
mov
mov
xchg
daa
push
lret
dec
cmp
push
dec
dec
jmp
add
movsl
pushf
mov
adc
jnp
jno
aas
mov
out
imul
dec
mov
aaa
xor
push
repz
out
sbb
sbb
dec
test
fsubrl
insb
mov
add
xchg
imul
in
push
mov
lds
mov
outsl
fbld
ror
xchg
outsl
fs
mov
pop
push
and
sahf
and
ret
mov
or
cmp
adc
sbb
loop
loopne
paddd
adc
mov
sbb
daa
mov
fdivl
ret
jb
adc
jle
arpl
lret
mov
out
dec
xor
sbb
mov
pop
insl
mov
clc
lock
repz
mov
xchg
int3
xchg
jecxz
addr16
es
mov
mov
inc
pop
xchg
mov
adc
push
stc
add
pop
jae
cs
add
dec
into
loop
xchg
jmp
nop
mov
or
xchg
jl
int
jg
lods
and
adc
dec
jne
icebp
dec
in
loope
mov
mov
js
sahf
in
dec
lret
cli
xchg
xchg
subb
mov
cmpsl
fdivs
add
es
mov
mov
sub
and
xor
popa
or
add
das
wbinvd
clc
cmp
scas
xchg
std
int3
lods
xorb
popa
push
icebp
insl
cmp
aaa
push
mov
xchg
les
jl
sti
test
xor
outsl
jne
xchg
push
out
cmpsb
test
icebp
loop
sahf
sub
stos
jp
dec
or
call
push
lock
jp
leave
mov
mov
mov
and
mov
pushf
and
cltd
loope
add
pop
mov
lea
mov
push
mov
js
bound
mov
mov
mov
xor
ljmp
jl
and
mov
rorl
pop
test
into
loop
lret
cld
js
ret
je
or
jmp
mov
mov
arpl
or
jns
dec
and
pop
sbb
ja
adc
or
jge
hlt
and
jecxz
cmc
scas
mov
dec
sbb
sbb
or
rolb
jecxz
lret
jmp
adc
sbb
repnz
adc
lret
mov
dec
ret
push
ja
mov
imul
mov
jb
mov
ljmp
aad
xchg
aad
into
fwait
cmp
xlat
push
outsl
add
xchg
loop
ror
dec
outsb
pop
lds
out
jl
cmp
mov
sbb
mov
push
mov
out
inc
sbb
std
xchg
fdivs
test
and
negl
xor
orl
inc
xchg
sbb
inc
pop
fildll
setle
lock
sbb
xchg
andb
and
stos
sarb
shll
outsl
cmpsl
aad
jne
ja
jg
cltd
outsl
mov
addl
push
xor
mov
sbb
imul
cmp
fdivs
and
mov
shl
popf
inc
adc
jno
jo
test
and
or
xchg
flds
dec
cmp
outsb
push
mov
cmpsl
jno
fimull
cmc
inc
push
adc
sub
aas
push
push
fmuls
insl
mov
mov
outsl
add
stos
mov
lods
xor
popa
inc
mov
inc
push
push
pusha
mov
mov
adc
ret
cwtl
sbb
dec
or
aam
stc
pop
jne
leave
xorl
cmp
xchg
sub
cmp
inc
push
jmp
ja
in
out
xchg
inc
movsb
outsl
sub
mov
add
jno
mov
mov
les
mov
sub
fs
and
sub
cmp
xchg
or
mov
or
rclb
out
gs
adc
inc
in
jns
cmp
stos
add
iret
mov
mov
and
inc
sbb
sbb
shll
stos
cmp
dec
in
push
add
insb
dec
stc
push
mov
int3
lret
adc
pop
xlat
pop
and
sbb
sbb
je
pop
sub
xor
std
jge
pop
pop
ret
lcall
fimuls
mov
sahf
inc
sub
adc
inc
repz
ja
mov
lock
adc
sbb
pop
or
push
imul
xchg
repnz
add
mov
inc
fwait
mov
sti
or
dec
push
inc
clc
push
push
jmp
or
aam
jecxz
ds
pop
and
addr16
mov
pop
adc
imul
pusha
mov
rcrl
cmovno
dec
repnz
stc
dec
loope
xor
fnstenv
mov
out
fisttps
test
jmp
pop
sbb
mov
mov
inc
cltd
test
pop
sbb
jg
or
sub
push
popf
add
sbb
sarb
sub
sbb
movntps
cmpl
mov
mov
push
rolb
std
fisttpl
or
sub
in
xchg
div
ljmp
andb
fdivrl
jecxz
push
or
adc
xorl
sti
dec
sub
enter
pop
loop
stos
gs
xchg
xchg
inc
pusha
lods
mov
and
cmp
or
sub
jecxz
adc
pop
push
push
pop
lods
add
jnp
je
sub
push
sub
jmp
and
cli
inc
push
jbe
out
mov
jne
dec
outsl
scas
sbb
jmp
xor
inc
imul
inc
and
mov
jg
shlb
sbb
xorl
sub
scas
ljmp
imul
and
inc
and
arpl
push
enter
xor
out
test
bound
and
xchg
push
push
and
sub
mov
mov
jge
mov
nop
les
push
aas
pop
insl
lock
xor
adc
fisubs
mov
fucomip
cmp
scas
iret
or
jno
hlt
sub
ds
int
test
rcrl
mov
push
lret
repnz
aas
int
fstpt
mov
xchg
lret
push
sahf
pop
xor
stos
pop
xchg
add
ja
in
xlat
fisubrl
mov
in
test
jp
movsl
jecxz
xchg
sbb
dec
xchg
popl
jle
data16
pusha
jmp
popf
cs
pop
fwait
xor
cmpsl
movsl
dec
pop
dec
cmp
test
notl
roll
mov
int3
repnz
test
aam
lods
adcl
and
popf
popa
sbb
loope
dec
and
cmp
pop
scas
mov
jl
scas
sti
xchg
outsl
adc
icebp
fbld
jmp
xorl
pop
aam
outsl
stos
idivb
xchg
stos
ja
add
dec
pop
xlat
std
pop
jg
out
push
lea
mov
nop
jg
cld
out
sbb
mov
aad
mov
popa
dec
lods
inc
mov
mov
in
popa
adc
movsb
int3
call
ret
jecxz
shl
lret
xor
clc
or
mov
xchg
jb
sub
mov
out
je
mov
fiaddl
mov
and
rol
aam
inc
push
cmp
pushf
movsb
out
dec
or
jl
xchg
and
or
mov
adc
inc
stc
jmp
outsb
dec
add
push
push
xorl
incb
add
cmp
jg
je
or
sar
mov
nop
push
roll
aaa
and
pop
sti
fs
mov
sbbl
jmp
fimuls
jge
mov
dec
cmp
mov
jno
mov
dec
cmp
sub
test
push
add
xchg
lea
or
push
or
out
adc
ja
jnp
sub
sbb
push
aaa
fldln2
imul
mov
rorl
out
sub
fdivrl
loope
fcoms
je
jne
or
add
adc
mov
or
std
lds
ret
mov
and
pusha
int
add
rcrb
pop
push
pop
inc
arpl
stos
lret
test
test
outsl
lret
push
cmp
nop
and
notb
sub
out
push
jae
mov
mov
lahf
adc
mov
data16
push
cmpsl
push
xchg
xor
aad
jp
and
cwtl
mov
cmp
scas
and
xchg
decb
cmp
xor
xor
fs
adc
scas
rclb
inc
xor
cs
cli
cltd
insb
outsb
into
outsl
fisubrl
mov
and
push
push
xor
stos
stc
push
cs
rcrl
movsb
dec
ds
push
add
push
pop
jbe
mov
nop
aas
rol
inc
lds
shll
jle
jae
movsb
xchg
data16
test
shlb
xor
gs
and
ja
mov
icebp
sar
dec
or
cld
inc
pop
outsb
outsb
pop
in
push
ds
movsl
or
cltd
test
cmp
and
adc
rclb
mov
les
in
add
ljmp
pop
xchg
aas
sar
adc
cmp
clc
mov
das
mov
pop
out
lahf
mov
adc
jp
loopne
out
adc
repz
mov
pop
pop
pop
loope
andl
cmp
push
mov
push
inc
dec
xchg
pop
mov
aad
lds
mov
mov
mov
push
adc
sub
lea
out
fxtract
stos
jmp
fisttps
out
subl
adc
dec
dec
lret
inc
es
in
pop
mov
shl
rorb
mov
testl
and
lahf
sub
outsl
mov
pop
adc
call
lock
jmp
int
insl
fs
les
shll
aad
fdivs
lods
push
outsl
popl
aad
pushf
mov
cmp
inc
cmpsb
in
mov
mov
out
jnp
sbb
int3
shlb
xchg
push
dec
testl
cwtl
mov
dec
push
mov
adc
jl
cmp
dec
and
repz
mov
cmpsl
xchg
nop
xchg
mov
or
push
icebp
sbb
inc
out
xchg
sub
fabs
mov
jp
or
sub
mov
fsubrl
mov
in
mov
jge
add
pop
inc
mov
or
sub
cmp
push
lret
rdmsr
add
jge
xor
imul
cltd
movsl
lret
xor
and
insb
aaa
ret
sarl
pop
enter
imul
sub
mov
xor
stos
call
lods
imul
push
outsl
xor
pusha
addl
mov
fstpt
adc
sub
jnp
xor
fwait
icebp
add
and
xlat
ds
frstor
movsb
ss
sub
mov
xor
stc
and
push
data16
ja
add
mov
jge
loope
pop
jnp
cmp
lds
add
and
out
outsb
sub
xorl
and
xlat
push
or
jae
mov
add
pop
jle
cmp
add
stos
cli
pop
sub
cld
jp
int3
jle
mov
jge
popa
outsb
sub
outsl
rorb
pop
lahf
imul
repnz
popf
or
push
jmp
call
jns
dec
stc
adc
jge
pop
fistl
aaa
xor
xor
ss
aas
jg
cmpsb
imul
aaa
hlt
xchg
xchg
loopne
test
inc
or
jbe
mov
xor
call
dec
mov
fsubl
and
mov
sbb
lods
aas
and
out
add
nop
jo
xchg
jmp
and
add
jae
sub
cmpsl
loop
pop
and
mov
outsb
and
mov
sbb
pop
push
ret
call
imul
adc
pusha
mov
mov
xchg
and
das
push
movsl
enter
sbb
js
ds
rcll
test
sbb
inc
pop
jge
lret
loope
sti
insb
lea
jnp
jns
add
jnp
jle
mov
aas
adc
popf
rcrb
or
call
fs
das
test
lock
mov
inc
mov
add
jecxz
sti
cmp
gs
stos
sbb
mov
ret
movsl
std
push
xchg
dec
jb
dec
mov
popf
sti
clc
js
or
rol
mov
cs
cmp
mov
testl
leave
ja
sbb
callw
push
mov
leave
xor
pop
add
pusha
or
aaa
aaa
mov
xchg
scas
cmpsl
push
sub
and
cs
inc
xor
pushf
jecxz
mov
outsl
inc
adc
ret
out
jb
movsb
test
imul
or
pop
fnstcw
mov
cli
push
int
mov
cmpsb
xor
in
or
xchg
insb
mov
je
mov
ret
pop
cli
into
sarl
jns
and
jb
fnstenv
and
sbb
and
jmp
adc
pop
mov
jg
ret
or
mov
pop
out
xchg
aaa
xchg
push
cmp
jne
dec
cmpsb
jne
cmp
rcll
mov
lahf
inc
popa
std
daa
and
rcl
call
jle
jl
fcmovu
repz
mov
arpl
rolb
test
ljmp
outsl
or
out
mov
mov
dec
mov
sbb
mov
cltd
sbb
int
xor
add
jb
call
sahf
jmp
dec
cs
fidivrs
xchg
pop
subl
add
cli
cmp
pusha
mov
lahf
ret
mov
int3
push
inc
mov
dec
lods
sbb
sbb
and
stc
aaa
fdivrl
inc
xchg
fsubs
mov
mul
mov
out
xchg
ds
jbe
pop
scas
leave
mov
mov
repz
sbb
insb
mov
push
out
cmp
out
push
rorl
lcall
mov
pop
das
and
add
adc
and
or
jmp
inc
mov
sbb
out
rorl
fstps
xchg
mov
ret
mov
cld
cmp
ds
out
dec
repz
and
and
cld
stc
jnp
ss
push
aas
clc
jae
sbb
sbb
mov
cmp
adc
push
ljmp
test
jmp
rol
jecxz
nop
cwtl
cmp
xchg
sbb
push
inc
fistpll
pop
outsb
jb
jnp
and
mov
test
inc
adc
popa
push
mov
ds
ficoml
mov
ss
cmpsb
jmp
lea
mov
sub
inc
mov
add
push
push
decl
or
pusha
pop
testl
std
mov
int
sarl
pop
stos
cmp
loopne
jp
mov
pusha
sbb
imul
in
mov
jno
int3
xor
je
inc
addr16
lods
push
add
dec
and
jecxz
add
adc
ds
pop
or
mov
adc
push
and
push
ret
fisubs
inc
dec
sub
push
jge
mov
mov
jnp
push
aaa
movsb
pop
pop
xchg
inc
sub
pop
mov
mov
pop
mov
mov
jecxz
call
mov
pushf
out
dec
sbb
test
dec
mov
inc
inc
and
mov
ds
sar
fucom
adc
jae
cmpsl
add
sub
push
rorl
cli
push
iret
jl
adc
cmp
adc
arpl
movsl
dec
push
out
insl
testb
cmp
jp
inc
das
xchg
or
lods
fmull
out
stos
ss
in
jg
sub
mov
pop
ret
xchg
lcall
dec
mov
dec
les
aam
add
in
shlb
and
cmp
das
addr16
sub
fists
call
lds
fcompl
fldenv
cli
sarl
jns
rol
insl
mov
xor
int
jg
inc
dec
mov
mov
xchg
gs
mov
es
pushf
sbb
mov
cmpb
das
pushf
mov
insb
sarl
sar
fidivs
xor
cltd
ret
out
int3
ds
stc
dec
xorl
adc
pop
cmp
fs
fldt
mov
fiadds
stos
call
add
mov
popa
das
add
sti
cmpsb
rorl
lret
lds
repz
cli
pop
notb
adc
jp
xlat
mov
test
jl
adc
jo
inc
inc
xchg
in
cmp
lods
enter
ds
mov
lahf
jnp
cmpb
push
pop
cs
sahf
add
cmpsb
cmp
mov
test
mov
push
out
dec
xchg
fildl
jb
icebp
pop
sub
sub
scas
insb
gs
mov
inc
das
scas
jp
xchg
sbb
mov
iret
push
cwtl
mov
mov
sahf
repnz
repnz
orb
popa
aad
outsb
test
pusha
sub
pop
outsl
outsl
les
jecxz
popf
adc
mov
and
in
or
aad
inc
add
and
pushf
xchg
jecxz
sub
pop
mov
mov
dec
cmp
fwait
jbe
fbstp
fwait
mov
adc
aaa
and
lods
ja
xor
icebp
mov
adc
mov
cmp
xchg
test
dec
add
lcall
stos
pop
gs
push
insl
call
sbbl
lahf
shl
mov
inc
mov
push
cmp
notb
ljmp
ret
inc
cmp
xchg
adc
jo
ret
dec
add
lods
sbb
enter
xor
inc
les
sbb
mov
push
lods
movl
push
lods
imull
imul
xorl
pop
js
cld
adc
scas
sbb
jg
popf
arpl
xor
xchg
sti
cmp
int3
orb
lods
arpl
movsl
jnp
and
fisttpll
xchg
mov
push
sahf
cwtl
ret
sub
push
cmp
loope
cmp
push
popa
scas
test
jmp
jo
mov
lds
jb
ret
insl
push
fstpt
lds
nopl
negl
mov
add
mov
jbe
mov
fwait
and
cmpsb
sbb
xchg
cmp
cmc
mov
adc
xchg
sbb
sbb
rep
loope
imul
sbb
add
cli
add
pop
inc
mov
push
sub
mov
mov
ds
push
lcall
ds
cld
scas
aas
pop
jae
lret
out
xor
xor
pop
lods
pushf
add
push
jnp
loopne
mov
xchg
jecxz
in
in
jl
or
push
push
jmp
push
pop
cmp
pop
int
or
jecxz
lahf
xchg
inc
repnz
mov
jg
int3
or
sbb
mov
cmp
mov
lds
sbb
out
sub
imul
out
rcll
fsubl
mov
mov
mov
fidivrl
outsb
test
fs
xacquire
mov
dec
clc
outsl
cmpsl
ljmp
push
inc
or
cmpsl
dec
add
inc
lea
jle
addr16
pusha
popf
mov
dec
test
test
mov
push
xor
cmpsl
or
cmp
inc
dec
jne
sbb
pop
cli
inc
pop
lds
adc
icebp
fcom
jp
lcall
lea
repz
push
loop
sbb
mov
int
push
leave
out
push
dec
xlat
dec
call
dec
push
scas
imul
imul
cmp
ficomps
jb
das
dec
jp
aas
push
cs
aaa
rcr
inc
fdiv
aas
mov
in
insb
xchg
scas
test
or
xchg
dec
pushf
push
movsb
cmp
xchg
mov
mov
add
cmp
leave
adc
xchg
cmp
adc
pushf
iret
jno
jae
imul
insb
push
jmp
adc
popa
jecxz
cmp
sub
in
inc
clc
mov
hlt
enter
cmpsb
stc
daa
mov
in
fdivrs
repz
stos
mov
mov
sub
mov
ss
mov
push
popl
mov
mov
dec
or
add
jo
sbb
addr16
jge
or
in
decl
xchg
lret
imul
cltd
sbb
cmp
jnp
orl
sub
mov
xchg
fwait
dec
adc
mov
shrb
mov
fcom
fisttpl
mull
pop
fidivs
pushf
cmp
xchg
hlt
ljmp
and
cld
mov
jno
ds
arpl
ds
jne
loopne
cwtl
adc
inc
mov
rcl
popf
fistl
cli
fimuls
push
fwait
mov
add
adc
test
frstor
icebp
rcl
xchg
ja
adc
adc
popa
push
mov
cmp
adc
mov
cli
mov
push
sti
imul
mov
and
fadd
in
jne
xchg
pop
inc
es
push
nop
jo
ds
mov
out
mov
or
subb
and
vpsraw
sub
ficompl
mov
push
mov
dec
int3
push
jle
test
lods
dec
mov
push
push
fimull
jb
adc
inc
inc
in
adc
cmp
jl
mov
mov
and
mov
and
stc
negb
subb
jbe
clc
jmp
jmp
pop
imul
jo
jae
sbb
loope
mov
adc
jmp
sub
pop
loope
ret
int3
rdmsr
sti
jne
cmovns
int3
ljmp
jno
mov
and
xchg
hlt
and
or
inc
push
les
test
rcrb
cltd
jmp
dec
fcomps
jmp
and
les
movsb
cli
inc
fimuls
inc
repnz
out
jnp
sti
shrb
stos
imul
adc
mov
pop
fsts
add
pop
out
jo
mov
lods
add
roll
in
je
int3
or
inc
xchg
cltd
mov
sbb
jl
dec
mov
repnz
cmp
mov
sub
pop
push
popf
jle
or
dec
das
xor
pushf
adc
ffreep
insl
mov
lret
xchg
xchg
std
push
movsb
mov
sub
xchg
pop
int
pushl
jno
cmc
ficompl
sub
cmpsb
or
fsubs
lcall
pushf
pop
xorb
ficoml
sti
out
dec
push
adc
cmp
xor
aad
mov
dec
cmp
cmp
ds
dec
pop
negl
out
add
mov
inc
push
cmpsb
in
outsb
dec
mov
push
daa
sub
ja
mov
cltd
and
push
daa
push
lods
mov
sub
cli
lcall
insl
fdivp
sub
insb
lds
nop
arpl
ds
xchg
outsb
aas
mov
pop
or
hlt
shll
pop
stc
scas
scas
mov
xchg
lods
into
loope
cmpb
fwait
add
pop
or
push
mov
xlat
loope
mov
sub
fsubrs
jb
mov
loope
or
add
adc
jmp
es
add
mull
sbb
xor
lds
ficoml
movsl
dec
testb
aad
arpl
loop
dec
xor
gs
out
or
mov
cs
xchg
popf
loopne
mov
pop
pop
int
mov
push
lea
sub
mov
iret
fildll
fisttps
cmp
mov
adc
rcl
cli
mov
mov
mov
jb
xchg
ret
and
xchg
repnz
inc
sbb
cltd
pop
incl
imul
xor
inc
test
mov
shl
sbb
stos
jns
out
hlt
mov
mov
inc
xchg
push
cmp
ds
fsub
or
cwtl
push
into
outsl
roll
sub
push
loopne
jae
scas
shll
js
in
mov
cmp
daa
aaa
sbb
mov
sahf
inc
pop
jge
or
mov
ret
out
test
dec
fbld
mov
mov
inc
jecxz
and
icebp
cmpsb
movsb
ds
sti
mov
add
addr16
enter
inc
sbb
push
hlt
dec
dec
xchg
gs
fisttpll
jmp
add
or
popa
fstpl
push
leave
mov
jnp
stc
jo
mov
sbb
mov
and
gs
add
dec
cmpb
push
scas
pop
sbb
int3
rorb
out
test
sbb
lret
sub
push
mov
cmc
push
sahf
arpl
fiaddl
test
cmp
add
and
and
leave
mov
inc
push
sub
xor
test
insl
and
test
pop
xchg
les
xchg
lds
popa
pop
adc
out
mov
cmpsl
movsl
jl
mov
adc
mov
mov
cs
popa
insb
mov
insl
ffreep
lds
adc
repnz
loop
push
lods
jle
test
stc
push
jmp
std
mov
les
and
dec
rorb
fisttps
out
cmpsb
and
xor
inc
dec
jae
es
jp,pt
mov
ss
xchg
and
sub
add
jb
jle
or
dec
jb
xor
mov
loop
rcll
and
jne
push
hlt
mov
jno
mov
mov
mov
stos
fisubrl
mov
push
inc
mov
ror
pop
cmpsb
cs
loope
pusha
fisubrl
xor
xorl
leave
add
or
rorl
mov
or
out
addr16
in
inc
push
pop
jae
inc
clc
pop
stc
dec
dec
or
push
pop
xorb
pop
test
or
add
xor
and
aad
popa
insl
and
pop
jae
adc
dec
das
fisubrs
mov
mov
lahf
cs
pop
lret
xor
push
mov
shrl
pop
into
outsl
in
push
inc
or
outsl
lods
and
jne
cltd
icebp
jl
sbb
es
jns
fcmovbe
lods
mov
xchg
mov
xchg
or
sti
divl
repnz
jo
or
loopne
paddw
mov
mov
popl
push
adc
adc
scas
push
sub
or
pop
sub
fdivp
insb
mov
in
cmp
jno
popf
btr
cmpl
ror
mov
clc
out
push
sbb
cmp
or
pop
into
mov
mov
adc
outsb
movsl
cli
cmp
stc
pop
daa
sbb
movsl
test
pop
adc
cli
stos
fisubrs
subb
adc
cmp
sub
repz
fidivl
sub
loopne
sbb
cmp
jbe
mov
into
popf
adc
push
xchg
in
or
xor
mov
inc
adc
jno
push
fwait
pusha
jge
outsl
or
jae
jge
daa
xchg
lods
cmc
in
movl
push
xchg
inc
dec
das
fildl
sahf
ljmp
imul
lahf
jne
push
outsl
bound
loop
jg
mov
cld
insl
cmc
push
test
jbe
loope
xchg
fdivrl
push
sbb
insb
pop
mov
lahf
les
movsb
stos
sub
and
es
scas
lret
mov
jg
lock
jns
pop
sahf
mov
repnz
ret
inc
mov
jp
push
xchg
stos
cmpb
cltd
lret
out
js
inc
pop
sbb
jmp
fstpl
and
mov
push
cmp
out
daa
rcrl
incl
ljmp
mov
mov
push
xor
jecxz
mov
rolb
pavgb
sub
lahf
rorb
push
in
sahf
insb
out
cmp
xlat
mov
ret
popf
inc
pop
sarb
sbb
sbb
mov
lahf
cltd
aad
pop
mov
shl
aad
push
dec
sub
orb
and
adc
pusha
cmp
xlat
adc
adc
and
adc
sbb
mov
das
or
lea
lret
xchg
add
mov
js
lret
lods
mov
cmc
cmp
imul
out
int3
add
dec
pop
stos
or
nop
push
mov
and
pop
popa
xor
popf
lods
pop
loop
pop
loope
mov
test
dec
out
mov
dec
lods
push
hlt
lock
xlat
xor
je
sbb
lds
and
inc
pop
outsl
aad
or
lret
push
cmp
dec
lret
iret
aaa
test
mov
dec
repz
nop
pusha
xchg
hlt
popf
das
lea
mov
insl
xchg
gs
ja
jle
inc
push
sahf
ss
stos
xchg
ds
xor
and
repnz
ja
in
mov
es
pop
push
jg
lea
cmp
dec
sbb
jecxz
outsb
mov
pop
in
sbb
xchg
cmc
add
cli
mov
or
adcb
cmp
je
ret
ror
addr16
mov
fdivs
xchg
or
sahf
pop
cmpsl
int3
test
enter
mov
in
dec
and
in
aas
and
test
push
lcall
push
push
outsb
or
mov
push
add
mov
les
or
fsubl
mov
xchg
outsl
inc
and
aad
pop
xor
insb
fcomip
push
idiv
or
and
imul
sub
es
outsb
mov
jmp
popa
mov
divb
movsl
mov
mov
rorl
fucom
pop
nop
popf
xchg
test
in
nop
in
cmp
idivb
jl
mov
inc
push
idivb
rcrl
pop
fisttpl
fiaddl
js
jle
push
sbb
pop
jb
lahf
fucomip
or
inc
sub
jge
and
outsl
mov
je
stos
mov
inc
adc
test
cmp
imul
xor
pushf
mov
dec
in
mov
push
mov
push
sub
and
sub
sub
cmp
cmp
jo
cld
sbb
sub
frstor
std
shll
cmp
insb
test
in
jbe
or
testl
leave
rolb
mov
jne
or
inc
dec
clc
repz
add
mov
sub
test
dec
popa
rcrl
jmp
pop
in
xchg
push
mov
stc
lret
xor
xor
and
loope
dec
dec
daa
cmp
adc
sbb
xor
or
push
rol
test
push
loop
xlat
adc
fisttpl
pushf
add
insb
or
cmp
das
pminub
sub
dec
inc
sbbl
nop
inc
fsub
ror
mov
mov
mov
push
gs
fcmovb
xor
insb
scas
sbb
or
insl
sbb
sub
jmp
dec
xchg
add
mov
add
sub
cmp
movsl
into
test
movsl
pop
sbb
movsb
mov
mov
cmp
das
adc
repz
adc
idivb
lahf
add
fisubrl
jnp
jle
fisttps
leave
lret
sbb
das
out
mov
icebp
ss
testl
in
xchg
push
xor
fidivrl
lahf
mov
sbbb
fimull
cmpsb
leave
push
mov
push
add
stc
mov
stos
lret
adc
jmp
and
mov
and
add
push
ss
sub
test
mov
add
push
pop
or
inc
add
or
leave
aad
pushl
jne
call
daa
mov
out
inc
shll
cmp
imul
push
scas
loop
xor
cltd
mov
out
xchg
test
shlb
les
out
jl
inc
cmpsl
fucomi
xor
xlat
mov
adc
lea
push
lea
pop
mov
popf
and
sub
xor
lcall
cmp
jmp
loop
popa
rcr
push
add
inc
lods
jnp
and
enter
into
mov
dec
stos
mov
adc
mov
int
cmpsb
sahf
cmp
or
inc
mov
out
pop
push
scas
jnp
mov
in
add
mov
mov
sbb
xor
fcomp
fnsave
lahf
xor
inc
movsl
push
cmp
xchg
sbb
js
aas
popf
adc
inc
cmp
push
mov
mov
mov
pop
or
shll
cltd
test
adc
sub
fidivrl
mov
inc
cmp
push
in
add
adc
adc
dec
je
sarb
mov
fsubl
mov
aas
ljmp
movsl
hlt
jmp
sub
in
test
sbb
xchg
pop
pop
shll
fwait
mov
clc
xchg
std
test
jp
in
xchg
sub
jge
cmp
enter
sub
sbb
pop
shr
jo
add
xchg
cs
and
push
mov
nop
xor
pop
imul
jg
jb
cmpsb
mov
lret
mov
daa
or
xchg
pop
gs
and
jmp
xchg
cmp
inc
push
and
pusha
movl
xor
insb
mov
jno
xor
les
test
cmpsl
das
notb
pop
mov
add
mov
fsubp
int
inc
cmc
lds
cltd
xor
or
inc
daa
push
sbb
mov
ljmp
daa
jbe
movsl
cltd
sub
gs
fimuls
xor
inc
xlat
xor
or
loope
mov
ja
xchg
pop
jl
cmp
js
xchg
adc
rolb
cmc
dec
repz
add
push
in
imul
vmovhps
and
shlb
or
mov
add
lret
popa
cmpsl
pop
pop
test
inc
mov
xor
lods
inc
iret
adc
mov
pop
pop
shlb
cltd
loopne
jle
adc
inc
clc
mov
leave
add
pushf
mov
xor
lea
gs
inc
inc
and
rcl
je
popf
fadds
loope
jo
xchg
xor
mov
push
stc
cmp
std
test
mov
fcoml
xor
sub
scas
ljmp
or
int
mov
adc
decb
loopne
nop
ror
push
lret
popf
stos
cltd
cmc
mov
pop
push
out
jbe
pop
mov
cmpsl
mov
les
or
xchg
mov
mov
cs
jg
or
jmp
jecxz
mov
out
or
cmp
or
fldcw
push
xchg
stc
gs
adc
test
adc
push
dec
sbb
jle
xchg
jbe
add
pop
aad
xchg
add
cwtl
cli
mov
aas
inc
or
sub
inc
add
lahf
sub
pop
sub
inc
daa
in
ficomps
mov
cltd
mov
push
xor
insb
cmc
rol
das
dec
in
icebp
lea
test
out
jmp
dec
jno
xchg
xor
mov
adc
loopne
push
xor
neg
mov
jbe
jbe
cld
dec
ja
fimuls
and
dec
imul
orb
test
mov
pop
enter
dec
mov
inc
mov
cli
xchg
popa
mov
dec
into
pop
lock
inc
imul
dec
into
lea
test
xchg
or
mov
adc
lret
scas
inc
es
fidivrl
aam
nop
pop
das
out
stos
inc
xlat
in
es
insl
xchg
add
jb
inc
nop
pop
sbb
ljmp
push
mov
jg
les
cld
mov
mov
mov
inc
mov
aas
cmpsl
addb
mov
push
add
and
pop
lods
insb
or
mov
xchg
sbb
xchg
test
inc
insl
dec
or
les
cwtl
xchg
inc
jecxz
ret
push
mov
rcl
data16
and
push
in
pop
jle
fistpll
test
xchg
roll
arpl
aaa
mov
and
shl
bound
push
mov
sub
push
pop
adcl
jecxz
inc
push
movsb
std
repz
es
aaa
mov
or
pop
dec
mov
adc
iret
aam
or
in
pop
loope
xchg
out
gs
cmp
add
in
stos
pop
xchg
ja
xchg
mulb
in
mov
stos
mov
mov
jecxz
fscale
sbb
shlb
out
out
outsb
cmp
ret
sub
pop
push
push
insb
bound
and
inc
fists
xor
fisttpl
ficoms
xchg
scas
popf
or
cmpsl
pop
pop
leave
stc
pop
les
test
data16
fdivs
xor
cmp
xor
lods
out
xchg
adc
add
mov
testb
movsl
or
mov
aas
cmpb
int
lcall
jno
rcll
sbb
jmp
or
or
cmc
xchg
fsubrs
das
cli
arpl
dec
mov
ds
cmp
fisubrs
data16
cmpsb
shrl
movb
rorb
push
mov
das
dec
stos
pop
mov
xor
pop
sub
pop
loopne
push
jae
sub
es
mov
adc
inc
notl
idivb
inc
in
das
and
mov
push
and
stos
out
popa
into
xor
stos
adc
or
or
jbe
jmp
inc
jbe
mov
push
pop
sub
dec
sbb
mov
and
std
stc
jl
bt
xor
adc
je
ja
aam
das
jbe
fcompl
dec
push
imul
jnp
mov
lock
loop
pop
xor
xchg
or
mov
lret
cmpsb
and
mov
sbb
out
cli
xor
jl
pop
xchg
cmp
fdivs
fbld
lret
add
mov
pop
ror
dec
add
xchg
cmp
rol
and
cmp
or
push
jmp
cmp
mov
pop
adc
push
pop
fnstsw
fdivr
inc
insl
cmp
mov
add
in
mov
js
dec
popf
pushf
cmp
or
lea
inc
xchg
stos
lds
dec
iret
int3
movsl
and
in
cwtl
mov
push
hlt
js
mov
nop
repz
jecxz
and
stc
pop
sbb
test
jle
mov
push
mov
jnp
mov
aaa
cli
pusha
adc
in
sbb
lods
push
adc
jp
mov
adc
outsl
cmc
imul
pop
xor
mov
push
nop
mov
jmp
ds
xchg
out
fbld
dec
and
sub
xor
fcompl
pop
lahf
or
cmp
mov
mov
xor
scas
inc
push
jo
stc
jmp
mov
fimull
pop
xchg
mov
jno
inc
adc
cs
inc
mov
push
xor
lret
into
fisttps
xor
pusha
mov
adc
mov
pop
hlt
and
mov
cmp
sub
sbb
mov
cmp
mov
and
mov
jo
cmpsb
cmpsb
shrb
gs
rorb
aam
cld
rolb
and
test
dec
pop
das
xor
sub
mov
cltd
insb
insb
pop
inc
jns
sub
test
addr16
sub
jno
or
jecxz
jae
mov
fmulp
sub
fwait
push
mov
and
jbe
dec
sbb
lds
scas
stc
mov
ja
repz
ret
xor
std
iret
mov
cmp
std
push
imul
or
scas
mov
inc
add
je
pop
dec
dec
sub
adc
es
inc
out
cmp
xrelease
je
insl
das
push
mov
xor
test
jg
lock
imul
cmpsl
std
push
loop
xchg
sbb
xchg
jl
inc
nop
and
or
or
imul
xchg
adc
call
std
xor
mov
mov
push
mov
lods
imul
iret
push
addw
loope
int
dec
xor
jle
adc
adc
shlb
fistps
stc
sub
adc
sub
int
inc
dec
pop
mov
sub
dec
mov
inc
dec
sub
dec
test
jge
idivb
mov
and
clc
cmp
cmc
std
out
sub
add
aas
add
jb
adc
popf
push
pushf
mov
sbb
push
dec
outsb
or
mov
pusha
cmp
adc
pop
daa
mov
lds
sarb
loopne
cmp
pushf
out
xchg
popf
cwtl
sub
inc
jl
sbb
lret
fmull
sbb
mov
aaa
das
push
jns
xor
dec
inc
and
or
dec
andl
and
gs
repz
ficompl
or
test
dec
fcompl
sub
sbb
je
or
loope
dec
call
add
mov
ja
adc
pushf
cmp
testb
dec
sbb
push
push
divl
push
jne
lods
sbb
jne
add
lcall
lods
dec
mov
dec
mov
cltd
das
sub
cmc
inc
testb
pop
sub
loope
in
fildll
jns
or
stos
scas
imul
sbb
mov
out
cmp
pop
not
sbb
leave
fcomp
shrb
hlt
in
xchg
xchg
cld
decl
scas
jg
add
lahf
push
into
dec
jecxz
fs
mov
pushf
test
test
push
mov
dec
sub
pop
testb
lahf
ja
sub
sbbb
bound
jo
pop
sarl
dec
movsl
test
fisubrl
out
xchg
sub
fwait
or
popf
cwtl
outsl
rolb
push
pop
outsb
mov
xchg
leave
int
les
mov
js
mov
xorb
xchg
push
fldl
dec
test
sub
scas
cwtl
je
fiaddl
ds
lahf
mov
aas
fisubs
sbb
mov
rcr
scas
in
fcmovnu
push
and
and
and
into
mov
mov
xor
and
jbe
cmpsl
cmpsl
ret
jle
mov
cmp
dec
pop
cli
jbe
add
fsubrl
iret
xchg
setae
fisubl
push
sbb
das
xchg
mov
cltd
push
and
into
or
mov
adc
jo
pushf
stc
push
fcomp
jns
inc
test
pop
sahf
je
push
clc
mov
icebp
and
push
jle
das
out
mov
push
mov
xchg
movsl
sbb
mov
add
push
pop
jge
add
pop
inc
fimull
std
jl
mov
dec
in
pop
push
sbb
mov
test
jl
push
jne
ret
adc
icebp
inc
cmp
cmp
mov
ficoms
fildl
inc
adc
es
xor
xchg
aad
xchg
xchg
dec
int
lds
inc
fisubrl
and
pop
aaa
adc
add
xchg
pop
jle
ret
lcall
xchg
je
ja
push
or
sbb
in
sbb
mov
mov
pop
xchg
inc
pop
loopne
sub
nop
lds
in
pop
mov
mov
and
cmc
stos
jp
jmp
jle
mov
xchg
cmp
nop
jp
sbbb
xor
iret
xchg
out
mov
pushf
xchg
test
dec
jns
sbb
fwait
xchg
or
shll
sub
mov
ja
js
sbb
test
andb
outsl
aas
jl
xchg
push
lahf
xchg
sub
adc
xor
inc
nop
jbe
enter
mov
pop
out
hlt
jl
dec
xchg
xchg
ss
cwtl
jl
jmp
pop
outsl
rsm
jg
jge
outsb
mov
push
ss
push
bound
mov
dec
mov
xchg
sbb
decl
sbbb
pushf
lret
cs
fs
adc
aam
inc
loop
stc
mov
arpl
jmp
outsb
stos
repz
leave
out
jnp
fstps
adc
inc
cltd
dec
xor
sar
jno
fstps
icebp
int
mov
jp
mov
xor
out
sahf
icebp
cmp
xchg
pop
xchg
mov
cmp
int
xlat
jnp
and
inc
sbb
push
and
push
mov
daa
test
push
add
mov
cmp
gs
adc
test
mov
in
daa
into
pop
enter
adcl
movsl
and
daa
inc
fildl
sub
ljmp
sbb
fistpl
inc
shrb
repz
dec
pop
push
cmc
popf
push
je
roll
out
insl
loop
or
add
and
stos
push
jp
popa
inc
mov
dec
imul
jne
pop
jnp
mov
aam
push
jo
add
push
pop
in
out
mov
and
lds
cmp
in
pushf
cmc
inc
pop
adcl
pop
push
outsl
fidivl
daa
adc
push
nop
mov
shll
cmp
lahf
add
mov
fmull
in
fimuls
pop
pushf
bound
mov
loope
mov
rol
sahf
or
popf
xchg
xor
cmp
aam
scas
add
sarl
sub
andb
dec
sti
std
ret
inc
fsubr
enter
fcompl
imull
cmc
lret
xlat
fst
nop
jns
push
call
jo
movsb
xchg
mov
leave
add
push
pusha
cmp
cmp
sub
outsb
mov
cmc
pushf
lock
xor
ss
xlat
loopne
iret
shl
inc
rol
leave
push
add
mov
mov
in
out
xchg
cmp
or
test
cmp
dec
cmpsb
mov
insb
or
insl
addr16
xchg
mov
aad
pop
das
pop
add
jg
fldt
ljmp
dec
cld
aaa
enter
cmp
xchg
and
das
movsb
shlb
fdivrs
jp
je
rcll
xchg
cmpb
lea
and
gs
jmp
movb
insb
dec
mov
mov
nop
jae
pusha
aaa
xchg
mov
sbb
das
cmp
pop
gs
adc
imulb
lea
lods
ljmp
cmc
cmc
sbb
xchg
sub
fnsave
call
pop
in
adc
cwtl
dec
fdivrl
int
lods
xor
add
scas
xchg
pop
call
jge
lock
xchg
sbb
jbe
add
cmp
stc
mov
repz
das
pop
and
dec
pop
mov
ds
cwtl
xchg
push
cmp
leave
sub
cltd
pushl
pop
stos
dec
mov
sbb
xchg
pop
xchg
pusha
in
js
fstl
mov
cmp
addb
stos
or
test
mov
dec
aaa
pop
lcall
mov
xchg
mov
int
push
insb
fwait
popa
inc
imul
add
adc
vdivpd
push
xor
dec
lret
nop
xchg
pushf
aas
test
pop
cmp
push
fisubl
jmp
insb
loope
lods
mov
add
xor
jg
test
xlat
adc
jo
gs
mov
shrl
xchg
mov
push
popa
or
aad
divl
jecxz
add
aam
lea
mov
into
sbbb
pop
imul
stc
out
mov
mov
jnp
mov
mov
popf
xchg
mov
jp
pusha
pop
adc
popa
push
mov
jmp
fidivl
push
movntps
fs
cld
outsl
hlt
sbb
mov
add
pop
lock
adc
jmp
sub
mov
adcb
jbe
outsb
push
cmp
loopne
dec
into
mov
out
jl
repz
pop
dec
icebp
dec
lahf
or
outsl
cld
add
loope
sub
dec
push
xor
jp
jns
pusha
movsb
lcall
lret
and
loop
imul
xchg
ss
adc
or
xor
sahf
mov
xchg
jbe
push
pop
rol
lcall
ljmp
lahf
in
xor
fisttps
outsb
jae
inc
cmpsl
pop
and
test
mov
bound
sbb
movsb
fwait
mov
push
pop
inc
pop
sbbl
mov
outsb
int3
outsb
adc
scas
and
and
scas
iret
dec
mov
loope
fabs
xor
lock
and
pop
jecxz
or
cmp
cmpsb
lods
pop
xchg
xor
xchg
sbb
fisttpl
shlb
pop
addb
jnp
ficomps
mov
xor
xchg
adc
loop
pop
adc
in
dec
repnz
cmpsl
mov
jbe
in
xor
shll
pusha
dec
aad
cmpsb
xchg
jnp
mov
stc
jo
pop
stos
xchg
les
aam
push
mov
sub
pop
xor
inc
mov
fistl
push
jmp
das
popf
sub
jmp
mov
pop
lods
faddl
adc
roll
lret
push
popf
xchg
testl
in
lock
push
jns
dec
incb
lret
cs
cld
clc
and
incb
xchg
pop
push
in
pop
cmpsb
mov
loopne
pop
pop
mov
pop
and
sbb
popf
or
aaa
pushf
mov
jmp
popa
pushl
cwtl
xchg
or
cmp
imul
aaa
sbb
ss
add
inc
jecxz
int
insb
insb
rclb
in
dec
repnz
popa
push
fwait
sbb
int
sbb
aas
in
xor
cmpl
arpl
sbb
pop
sub
xor
cmpsl
dec
cltd
pusha
sti
mov
and
les
nop
lods
test
stc
sbb
adc
loope
pinsrw
inc
mov
fucomp
add
jecxz
addb
push
fs
dec
xchg
repz
sbbb
stos
nop
mov
mov
push
or
fcomps
lock
rol
stos
push
rcrl
fdivrl
ret
in
je
iret
mov
and
cwtl
lods
lea
cmp
out
mov
mov
imul
mov
and
fdivrl
push
loope
popa
mov
mov
dec
jo
add
mov
cltd
gs
decb
mov
outsb
nop
lods
jb
inc
mov
in
mov
aaa
lds
sbb
xor
push
xchg
std
xchg
xor
inc
aam
mov
dec
mov
mov
cmp
dec
inc
mov
add
lret
inc
dec
nop
xchg
sbb
das
cwtl
mov
mov
xor
add
lea
jl
out
push
imul
stos
mov
in
jl
stc
insb
loopne
sub
inc
loope
iret
insl
insl
outsl
movsb
inc
out
xor
inc
rcrb
test
pushf
mov
dec
mov
ret
decb
and
in
adc
test
loopne
ss
adc
add
inc
addb
mov
dec
cmp
push
stc
call
add
mov
mov
mov
ret
cltd
popf
inc
sub
and
mov
mulb
sar
pushf
fsubrs
in
fcoml
mov
out
mov
inc
mov
fidivrl
and
cmpsl
fst
inc
push
out
pop
jle
add
pop
mov
insl
fistl
neg
mov
xor
sti
lret
inc
outsl
scas
sti
inc
leave
outsl
das
mov
lock
push
cmp
data16
pusha
leave
jmp
adc
int
xchg
dec
dec
and
ss
mov
jmp
aam
ljmp
addr16
imul
mov
rcll
xlat
dec
or
stos
jecxz
xchg
orl
xor
das
hlt
mov
scas
cld
mov
std
lcall
pop
fs
adc
hlt
inc
push
hlt
iret
push
inc
inc
fcmovb
dec
push
ss
xchg
jmp
inc
test
inc
sbb
out
push
pop
cmp
xor
add
sbb
inc
sbb
mov
and
cltd
mov
shl
ret
or
lods
test
dec
pop
pop
lods
cwtl
mov
jae
cli
outsl
dec
loop
jbe
int3
dec
popa
adc
lret
jg
cli
or
scas
into
je
dec
or
or
mov
and
and
mov
es
lcall
sub
xor
mov
lcall
stos
mov
adc
fs
adc
jb
into
lea
and
mov
cmp
pop
mov
and
sbb
call
aad
test
test
testb
repnz
inc
pop
pop
dec
int3
push
sbb
dec
pop
test
cwtl
push
not
pop
pushf
inc
outsl
jne
xchg
cltd
mov
mov
dec
jg
iret
fbstp
fildll
and
cltd
push
lcall
aas
jp
adcl
sub
mov
mov
mov
out
push
sub
xchg
hlt
sub
or
mov
add
mov
lods
pop
pop
test
push
jmp
add
lcall
push
inc
push
imul
and
cmp
mov
xorl
sti
or
mov
and
sub
nop
aaa
das
mov
push
mov
mov
push
jecxz
adc
xlat
jge
push
movsl
dec
adc
jbe
jbe
sbb
scas
loopne
in
push
jne
imulb
repz
imul
inc
iret
rcrb
mov
sub
inc
xchg
sbb
not
xorl
pop
test
gs
icebp
sbb
arpl
cmp
mov
inc
daa
push
popf
mov
pop
and
imul
mov
fcmovnu
and
mov
test
sarl
inc
subb
fnstsw
aam
and
movq
inc
lea
cmp
je
shrb
pop
dec
add
repz
adc
mov
pop
lock
mov
mov
fxch
movsl
lea
insl
sbb
pushf
mov
shll
push
icebp
aas
pop
pop
cld
clts
je
cwtl
in
jns
inc
imul
std
pop
std
mov
sahf
in
mov
jg
jmp
sar
xchg
and
loope
cmp
xor
sub
sbb
xchg
jno
dec
adc
rcrb
mov
add
stos
mov
hlt
jne
std
add
mov
daa
adcl
adc
std
jne
int
xchg
pop
mov
in
jns
or
outsb
orb
out
xchg
push
xchg
daa
cmpl
or
lods
cltd
std
in
test
test
imul
lret
aam
fcoml
push
cmpsl
sub
lods
push
shrb
xor
push
jl
sbb
lar
xlat
ljmp
xor
dec
jne
jbe
cli
add
mov
mov
lahf
push
daa
out
inc
adc
push
push
push
into
sub
jmp
les
push
insl
xchg
xor
sti
js
loop
pop
xchg
into
sbb
cmp
xor
aas
jne
pop
std
icebp
mov
mov
push
scas
push
push
inc
pop
cmpsb
xchg
shrb
cld
ficomps
adc
pop
lds
fsubs
mov
shlb
leave
insb
mov
xor
push
popa
xor
in
cmp
gs
push
iret
and
fcom
xor
and
mov
ja
mov
out
jns
xchg
sbb
xchg
lds
xchg
add
pop
sub
mov
pop
jl
mov
fisubrs
xor
mov
ja
jbe
mov
xor
out
or
fdivrs
mov
jge
pop
repz
mov
push
nop
dec
insl
xchg
adc
mov
push
push
repz
cmp
sub
jmp
cmp
hlt
jmp
movsl
push
jle
sbb
cmp
cltd
cmc
mov
jae
dec
shl
imul
ljmp
add
sbb
js
cmp
outsl
movsb
ljmp
movb
push
fdivl
div
xchg
xchg
mov
add
cmp
xchg
cs
test
andb
push
cli
jne
negl
imul
mov
add
into
add
repz
xor
jge
lcall
sub
and
scas
cmp
add
repnz
pop
data16
sub
adc
cmp
xor
adc
int3
in
mov
lahf
jae
sub
adc
lods
std
xor
idivb
sub
into
movsb
dec
arpl
sbb
daa
sub
lods
call
xor
push
es
repnz
xor
in
lcall
xchg
sub
adc
in
xor
sub
fldenv
adc
push
daa
nop
imul
subl
faddl
add
icebp
ds
fs
popa
cld
mov
jp
push
add
mov
pop
adc
mov
inc
cmpb
add
lock
mov
arpl
out
xor
push
cmc
negl
enter
test
mov
fcmovnu
cld
sbb
rol
fcomps
shll
scas
fbstp
dec
mov
test
xlat
dec
and
mov
sub
je
pop
bound
test
cmpsl
xchg
xchg
mov
push
lret
mov
std
xor
push
cmp
pop
clc
jns
inc
test
or
sbb
sub
push
sbb
es
lods
bound
add
pop
and
sub
push
aas
fldcw
sti
mov
js
int3
lcall
and
inc
jno
pop
repnz
in
cmp
mov
cs
xor
in
outsb
inc
jle
push
stos
xor
or
or
cld
jecxz
inc
out
sub
xlat
adc
insb
sbb
xchg
addw
push
cltd
lahf
sbb
cld
fstpl
ss
pop
jo
icebp
cs
mov
cli
push
adc
mov
jb
lock
push
or
and
lahf
cltd
push
das
cmc
mov
ret
std
adc
mov
cmpsl
xor
ret
xchg
push
and
xor
sbb
lret
std
jno
lods
nop
dec
ds
sub
xor
push
inc
push
adc
stos
insb
cmp
rclb
xor
shr
dec
cwtl
push
pop
lcall
into
push
cwtl
add
jecxz
mov
mov
jg
aad
loopne
add
jnp
insb
gs
xchg
jb
inc
pop
leave
or
ret
mov
inc
lcall
je
roll
es
xchg
xor
pop
inc
lods
popf
xchg
and
test
mov
hlt
mov
dec
roll
xchg
dec
das
mov
aam
jnp,pt
icebp
rcr
pop
and
aaa
es
les
jae
mov
movsb
das
dec
test
dec
pop
sub
shlb
cmp
and
je
jle
jg
push
inc
dec
add
xchg
dec
add
lret
add
mov
push
push
pop
test
sbb
cmc
arpl
inc
add
arpl
repnz
mov
in
adc
jle
ds
fcompl
outsb
mov
imul
push
cmp
mull
dec
pop
add
data16
sahf
movsb
lret
into
dec
stc
arpl
adc
repz
stos
add
ja
dec
sub
cmpsl
das
adc
mov
inc
cmc
lcall
fs
in
jl
push
stos
dec
jb
sarb
add
arpl
je
ret
icebp
clc
add
and
sbb
mov
xorl
mov
jno
pop
out
test
loop
cmp
mov
addr16
lods
push
sbb
pop
in
rcll
mov
push
xor
ficoml
mov
dec
xor
or
pusha
cmp
test
roll
cld
test
test
sti
jmp
rcrl
ss
mov
fs
fiaddl
jp
aam
roll
in
and
sub
inc
push
sarl
mov
test
sbb
xor
out
mov
cmpb
jbe
mov
fistpll
pop
push
jne
jns
cmp
dec
cmp
and
pop
mov
sarb
dec
push
push
mov
push
fstl
insl
dec
inc
jmp
sub
fwait
cmpsb
and
mov
int
xchg
or
mov
pop
out
cmp
es
fwait
cmpsb
ja
mov
mov
cmp
data16
int
hlt
sub
cmp
pop
mov
mov
into
nop
out
push
inc
out
mov
lds
adc
add
out
mov
and
data16
push
popa
dec
out
je
cltd
in
xchg
in
in
out
lahf
jnp
mov
sbb
adc
sub
fstl
gs
dec
or
add
jl
fwait
pop
mov
inc
pushl
dec
mov
push
sbbl
pop
out
and
jae
je
loopne
mov
mov
inc
enter
sbb
outsb
push
les
mov
ret
outsl
fidivrs
jl
cmc
imul
pop
sti
fldcw
and
push
cmc
fs
fistps
loop
mov
xchg
aaa
imul
xchg
or
les
jns
aad
rorl
in
mov
mov
xor
dec
push
push
pop
loop
pop
jae
inc
cld
jo
adc
loopne
pop
pop
and
ret
xor
bound
jbe
jno
insl
cmpsl
xor
jl
pop
mov
sbb
sub
cltd
xchg
pop
cwtl
rcrl
pop
push
and
loopne
adc
ljmp
repnz
mov
mov
pop
negl
pop
cmp
test
sub
ja
aas
lock
push
fisttpll
iret
mov
arpl
mov
cli
adc
xchg
mov
imul
lock
and
fsubrp
and
mov
xor
or
dec
das
int3
jb
xor
inc
pop
dec
int3
sub
cmp
jno
mov
sbb
add
sub
outsl
insl
scas
gs
stos
sbb
stc
push
xchg
lea
xor
popf
pop
xor
mov
pop
shlb
icebp
push
pop
imulb
movsb
ljmp
repz
or
xchg
jge
and
push
mov
inc
pop
adc
lret
pop
push
cmp
sbb
into
loopne
ret
sbb
add
jg
dec
and
popa
stos
int
jge
pop
aas
jne
fcmovu
jbe
adc
in
mov
mov
sbb
mov
insb
mov
inc
cli
rcll
dec
movb
testl
andl
testl
jmp
sub
pop
dec
gs
fiaddl
mov
or
aam
inc
lahf
mov
jle
leave
mov
faddl
jno
jle
add
mov
push
mov
repnz
lock
dec
cmpsb
and
pop
je
pop
push
std
dec
push
jmp
mov
xlat
mov
xchg
in
xchg
or
popf
lods
in
xor
fs
fwait
mov
sahf
movsl
enter
icebp
rdpmc
jge,pn
jg
mov
rcll
scas
lock
test
fdivrp
enter
imul
add
dec
sar
mov
das
and
mov
out
sbb
xor
xchg
push
xchg
mov
lret
xchg
jno
sub
je
dec
dec
dec
into
push
sbb
add
cmp
push
lods
jl
push
jnp
scas
inc
lret
pop
push
outsl
mov
sbb
sub
adc
xor
jp
ja
cmp
orl
cltd
jbe
mov
push
mov
out
shrb
xlat
ja
lahf
push
and
add
adc
mov
insl
jp
push
dec
pextrw
push
xlat
scas
push
add
xchg
pop
xor
mov
in
cwtl
cli
loop
and
sbb
popfw
jl
stc
clc
mov
pop
push
lods
das
bound
in
jno
repnz
jne
jb
mov
jnp
popf
sbb
test
cmpsl
enter
fldcw
cmp
movsb
mov
rol
std
jnp
in
jmp
pusha
cmp
push
sub
and
pop
jmp
cmp
clc
das
repnz
jb
into
push
test
leave
jnp
mov
fwait
data16
adc
jnp
mov
gs
dec
fcmovnb
and
adc
lods
adc
push
call
pop
fwait
cli
xchg
neg
jle
mov
in
push
mov
negb
xchg
and
mov
push
ljmp
push
mov
jno
scas
dec
cli
or
mov
add
mov
or
stos
sar
leave
hlt
lahf
decb
sub
adc
repz
sbb
sarl
and
iret
jb
into
sub
cmc
mov
ljmp
movl
xlat
ja
xlat
mov
stos
ret
inc
mov
jo
inc
test
xchg
inc
push
xor
lret
add
mov
xor
icebp
push
mov
push
cltd
ljmp
repnz
test
dec
mov
sbb
jno
sti
shlb
or
dec
and
cltd
cli
les
insl
jge
sbb
movl
push
aad
mov
or
push
inc
cs
jmp
rorl
mov
jne
sub
mov
das
push
cwtl
mov
cmp
pop
mov
dec
daa
out
jp
cmpsb
jb
adc
repz
mov
pop
cmp
mov
insl
or
ss
in
inc
or
clc
pop
cmp
enter
test
ds
xchg
push
loope
negb
fistpl
and
adcl
cmc
jbe
jle
mov
lock
dec
cld
cmc
dec
movsl
mov
int
andl
sub
mov
or
icebp
mov
aam
shlb
in
call
xor
jmp
sahf
sbb
jecxz
fidivrl
pop
sbb
movl
push
or
shr
and
ret
and
inc
popl
cmp
out
adc
jnp
push
stos
add
mov
push
xchg
in
adc
mov
imul
or
mov
addr16
jo
lret
fmuls
mov
inc
xchg
and
mov
jg
imul
out
sbb
cmpsb
adcb
sbbl
mov
cmp
inc
jne
sbb
add
pop
notl
mov
or
rclb
inc
sbb
mov
and
push
mov
nop
fcmovb
sbb
or
in
adc
pop
fs
lea
sub
lret
popa
scas
lretw
out
or
mov
cmp
add
out
xchg
ret
insl
mov
insb
push
adc
dec
les
pop
mov
mov
mov
or
jnp
lret
insb
add
imul
jbe
pop
les
insl
xchg
aam
inc
int3
mov
push
xchg
cmp
sub
mov
mov
jle,pt
mov
lds
ret
popa
cld
push
aam
xchg
xchg
jae
mov
mov
nop
pusha
sti
test
xlat
scas
pop
fdiv
sub
cmc
mov
or
mov
stos
mov
push
mov
xchg
shll
aaa
inc
aad
mov
cltd
pop
mov
sbb
aaa
ss
mov
in
movsl
adc
jmp
mov
aaa
add
and
mov
mov
jle
sub
adc
stos
lods
mov
cs
fcomip
push
push
inc
pop
cli
cmp
add
out
lock
push
mov
imul
push
jae
mov
inc
fcomi
dec
es
adc
or
les
adc
xchg
lods
pop
add
sub
xchg
js
jae
data16
mov
les
test
jbe
test
insb
mov
xchg
dec
inc
adc
and
sub
mov
shrb
data16
cmp
cmp
inc
push
inc
jbe
inc
fisubl
movsb
jo
push
push
and
jg
int3
lds
and
jne
adc
mov
and
sbb
mov
lcall
xlat
repz
negb
xchg
xor
movsl
jns
jge
and
pop
sbb
sub
ds
and
sub
cli
and
pop
das
or
dec
xorl
mov
rcrb
pop
add
dec
dec
in
cmp
stos
inc
add
rol
rcrl
pop
jbe
adcb
sub
jp
ljmp
sar
add
push
movsb
js
les
sub
sub
js
stos
jle
or
xchg
cmp
mov
mov
fsubrs
mov
xchg
jl
test
fildll
in
into
pop
cltd
inc
lea
push
pop
push
mov
cmp
cmpb
xorl
jb
test
gs
lret
cmp
push
pusha
mov
iret
lods
mov
mov
pop
ja
mov
flds
lret
out
xlat
repz
mov
xlat
adc
pop
inc
sbb
xor
test
gs
mov
inc
xor
pop
or
pop
sbb
jmp
xor
push
cmpl
add
fsubp
ror
pop
cli
mov
cmp
cwtl
mov
fnstenv
push
in
ret
or
popl
or
cwtl
arpl
ror
movsl
aad
xchg
clc
sub
pop
insb
aaa
push
dec
sarl
imul
adcl
mov
mov
cmp
pop
pusha
mov
or
fidivrl
push
cmp
jmp
jecxz
jle
cltd
adc
dec
stc
repz
xchg
scas
xor
add
sbbb
rorb
out
dec
xlat
adc
mov
loop
xor
cmp
scas
add
jnp
jnp
push
push
xchg
sub
icebp
repnz
dec
cld
jmp
nop
cmc
fmuls
dec
and
loop
cmp
dec
dec
pop
inc
or
repz
lcall
pop
rolb
faddp
add
leave
es
cltd
jo
es
inc
xchg
rolb
loop
fwait
negl
add
dec
xor
cmp
inc
sub
xchg
leave
sbbl
mov
jne
shl
aam
dec
popa
stos
call
jns
jno
call
mov
incl
xchg
xchg
inc
clc
movsb
pop
xor
filds
jmp
mov
fstps
out
fcompl
mov
jmp
sbb
es
shlb
dec
mov
cmc
fucom
sar
push
xor
lret
movsb
mov
lods
lea
jl
inc
sub
dec
mov
imul
sahf
int
dec
mov
xor
movsb
punpcklbw
int
ret
stc
add
mov
sub
pop
fidivl
nop
rcl
cltd
sub
push
lods
cltd
mov
xchg
and
pop
lock
or
lods
lock
xchg
xor
fs
add
xor
dec
mov
sbb
mov
negb
imul
mov
addr16
stos
inc
mov
std
push
xchg
loop
and
cmp
sbb
or
stos
je
dec
sbb
or
ret
lcall
das
aam
or
insl
cmp
and
bound
dec
lea
jl
cmpsl
and
daa
inc
mov
imull
fstpl
les
outsl
xchg
aad
std
sbb
and
lahf
cwtl
push
adc
scas
xor
sub
cmp
push
push
negb
stc
jle
jnp
outsl
scas
mov
pop
stos
add
mull
aad
and
or
mov
pop
repnz
sarb
sahf
xor
pop
add
pop
sub
clc
push
fcompl
cld
dec
sbb
scas
jne
ret
mov
sbb
pop
mov
fs
movsb
cmpsb
ja
into
push
stc
xor
mov
test
xor
test
jl
xor
aad
xor
and
mov
out
xchg
sub
loop
push
xchg
sbb
jmp
adc
das
test
cmp
push
out
cmc
imul
xchg
mov
xor
fbld
mov
add
cmp
xchg
sub
stc
je
pop
or
cwtl
stos
cld
jp
adc
pop
adc
cltd
adc
pop
mov
ds
out
xor
das
mov
loope
jp
loope
dec
cmp
ret
mov
cmc
dec
in
or
lret
xchg
cltd
push
xor
mov
jo
insb
cmp
orps
inc
push
mov
xor
and
icebp
in
and
jnp
cmp
sarl
stc
int3
cmp
lds
mov
ja
repz
or
out
inc
xor
das
insb
imull
cmp
dec
cmp
xchg
push
mov
rorb
jo
jmp
push
mov
adc
daa
mov
jno
pop
push
dec
jecxz
outsl
cltd
adc
dec
and
fsubr
or
int3
imul
rclb
movsl
enter
sbb
popf
mov
and
movsl
jge
mov
xor
jb
or
push
data16
mov
popa
jns
cmpsb
push
insl
jno
scas
popf
ljmp
outsb
inc
hlt
int3
mov
divl
icebp
mov
out
fwait
xchg
lock
stos
jne
ss
ret
aaa
clc
arpl
jb
and
leave
inc
fmulp
test
jp
lea
fimull
lcall
mov
rorb
loopne
repz
jae
ret
cmp
mov
adcl
pusha
fsubl
js
pop
into
ret
fdivs
sbbb
jne
inc
and
rclb
mov
dec
pop
stc
jnp
cwtl
sbb
xchg
loopne
mov
xlat
push
push
popf
js
adc
imul
xor
popa
fisubs
push
xor
cmp
cmp
dec
pop
and
pushl
sub
mov
in
jb
and
sarl
and
lcall
xor
jne
inc
les
sub
xor
or
pop
int
push
push
dec
imul
lcall
sbb
ficomps
fiaddl
cltd
mov
mov
lods
js
fisttpll
cmpsb
shl
shlb
sub
mov
push
inc
jg
sahf
stc
jb
jp
and
lahf
pop
push
inc
arpl
fistpl
dec
xor
cmp
call
sub
mov
jl
xor
aas
cmp
lods
notl
cld
jmp
xor
push
daa
and
andl
rcll
push
movsl
cmp
cli
fstl
pushf
in
adc
mov
loope
dec
cmpsb
jecxz
mov
outsb
mov
jb
xor
in
imul
mov
pop
dec
sub
xchg
shl
cmpsb
cmp
xor
iret
xchg
or
adc
jl
imul
mov
sbb
data16
sbb
dec
mov
insl
jnp
or
adc
cmp
fs
sbb
hlt
ds
scas
jb
sbb
jns
repnz
add
or
stos
or
dec
or
or
xchg
arpl
push
or
std
or
mov
movsl
aad
insb
pop
xchg
lds
or
add
mov
adc
cwtl
mov
push
mov
cmc
popf
rorb
adc
mov
xchg
ja
and
xchg
int3
mov
fisubs
test
test
mov
push
mov
flds
xchg
pop
mov
arpl
pop
inc
xor
js
fwait
push
add
addr16
pop
aaa
ljmp
sbb
dec
xchg
stos
sbb
cli
rcll
insl
mov
nop
xchg
xchg
dec
xor
clc
jno
sub
scas
lahf
int
outsb
cltd
and
xchg
sahf
inc
sub
or
mov
cmp
jmp
cli
inc
inc
cmp
add
xchg
push
int3
sbb
cmp
xchg
dec
mov
pop
fsubp
aas
add
pop
imul
lods
jge
mov
out
fmul
lock
jne
jp
test
movl
sbb
icebp
out
jg
mov
mov
inc
mov
repz
test
sbb
adc
in
sar
lcall
popa
cmc
int
shll
mov
sbb
out
dec
and
inc
mov
test
pushf
pop
lds
jns
inc
xor
insl
push
mov
jno
xchg
mov
out
or
and
ror
mov
fbstp
inc
or
mov
aad
out
mov
xchg
push
mov
movsb
mov
pop
pop
stos
ficompl
test
jno
mov
test
in
xor
into
call
imul
cmp
clc
push
sti
call
inc
test
pop
pop
stc
in
stos
jecxz
jne
out
subb
gs
push
shr
mov
scas
out
sti
stos
sub
fcomip
adc
mov
loop
pop
push
outsb
xchg
in
test
xor
or
pop
push
mov
lock
cmp
data16
mov
sub
cmp
imul
mov
push
cmp
inc
sahf
inc
ret
sub
sub
sbb
ds
jmp
fidivrl
cmp
sbb
lds
sahf
js
xchg
movsl
fisubrl
movb
adc
stos
xchg
push
jbe
cmc
icebp
repnz
scas
imulb
ficoms
xor
imul
push
lock
in
pop
popa
sub
into
ja
xor
lea
mov
mov
shrb
or
mov
mov
les
dec
loop
scas
push
je
push
out
inc
xor
push
inc
mov
mov
fisttpl
sub
ljmp
add
cmp
faddl
aas
xor
dec
in
sub
xchg
stc
fistl
mov
rcl
jmp
push
adc
sub
nop
xchg
xor
cli
rcr
in
dec
dec
or
int3
int
mov
shr
push
or
in
push
add
loop
cmp
sbb
mov
pop
sub
call
je
push
push
fcoms
lods
xor
pop
loop
jne
cmpsl
push
mov
xor
das
xor
scas
enter
xchg
add
lods
and
xchg
popf
xchg
mov
dec
loopne
push
insb
mov
fmulp
mov
cld
outsb
mov
lock
cltd
add
cld
rcr
inc
in
fnstcw
aam
mov
mov
sahf
mov
or
mov
cli
out
pop
test
shrl
test
movsl
mov
cmpsl
mov
out
jp
test
inc
sbb
xor
mov
subb
mov
xor
cwtl
pop
mov
rcrb
in
cmp
jecxz
adc
imul
mov
int3
or
lock
insb
fisubs
cmp
daa
leave
ret
mov
icebp
push
ljmp
inc
mov
xchg
ja
jae
cmovge
dec
xor
push
lock
push
aad
mov
nop
mov
push
xchg
int3
xchg
fildll
cmp
mov
push
shll
fisttpll
push
add
in
sub
jg
aad
iret
call
and
lret
in
cmp
sub
xchg
in
clc
aad
sub
dec
add
xor
push
xor
push
dec
jle
pop
pop
jge
sub
push
sbb
add
adc
cmp
dec
dec
lcall
test
cs
dec
add
test
shll
inc
out
int
xor
pop
xor
xor
jne
test
in
push
shll
je
mov
add
xchg
mov
and
fcmovb
repnz
in
pop
imul
xor
sbb
scas
je
testl
mov
inc
cmpsb
lahf
mov
outsb
cli
dec
jmp
lcall
cmpsb
mov
nop
push
rorb
test
cs
pop
je
xor
mov
dec
fisubrs
repz
jg
je
xchg
je
sbb
sub
mov
in
or
push
push
mov
in
lcall
pop
popa
dec
js
fs
xor
cmp
pop
cltd
ret
inc
daa
jmp
ret
inc
lock
mov
arpl
lods
shr
sbb
test
and
outsl
mov
lods
inc
fcoml
inc
dec
sbb
cmp
lea
lret
out
xchg
push
mov
data16
out
mov
lret
rcll
jno
lret
andb
sub
xor
adc
pusha
rcr
adc
mov
mov
cmp
mov
leave
ljmp
cmpsb
aaa
rcrb
pop
pushl
out
xchg
jp
js
lods
jae
mov
mov
jns
mov
lcall
testl
pop
xchg
push
pop
jmp
aad
push
in
sub
pop
add
sub
divb
pop
push
cmc
es
add
jae
jl
xlat
pop
mov
mov
xchg
popf
in
out
push
add
pop
sub
inc
sub
stos
jg
xor
insl
pop
fisttpll
add
inc
inc
movsb
repz
fldcw
mov
repnz
jne
outsl
js
push
sbb
mov
push
push
lret
sub
mov
xchg
xchg
fidivs
mov
inc
add
lret
dec
int
mov
aam
xchg
jbe
fwait
adc
mov
jo
aas
js
lods
popa
dec
adc
filds
xchg
leave
pop
dec
dec
int
dec
xorl
jbe
mov
mov
js
jmp
adc
das
cld
in
jnp
pop
mov
dec
dec
push
and
outsb
cmp
pop
sahf
mov
jge
daa
inc
pop
dec
adc
test
ljmp
add
push
out
aam
aad
ret
cld
mov
insb
jae
enter
dec
fdivs
and
clc
cld
jmp
mov
cmpsl
jnp
xor
pop
pop
pop
insb
xchg
xor
movsb
pop
movsl
loop
iret
dec
outsb
enter
je
xchg
xchg
sub
pop
sbb
lock
cmp
shrl
pop
int3
das
mov
sti
xchg
in
push
jmp
pop
daa
mov
fsubrl
xor
in
in
sub
mov
dec
add
iret
mov
out
jae
stos
mov
pop
pop
sbb
fcomi
subb
ss
test
lret
xor
movsl
lahf
sarl
leave
push
negl
addr16
dec
jmp
lret
push
mov
sbb
push
cmpsl
call
pop
mov
int
pop
inc
out
stc
popf
test
xor
mov
idivl
mov
lahf
movsb
fxch
in
ds
shrl
lods
add
sahf
in
in
je
sbb
jmp
push
mov
fistpll
popa
and
adc
xchg
dec
inc
aad
adc
cltd
cmpsl
cmp
sbb
adc
mov
cli
aas
xor
jnp
sbb
icebp
add
sbb
scas
sbb
mov
push
decl
das
push
jg
push
outsl
push
sbb
and
cld
mov
std
jg
mov
test
or
xchg
adc
inc
jge
fcoms
adc
push
sbb
pop
pop
push
lret
mov
push
sbb
fs
mov
cmp
jae
mov
scas
lds
push
adc
andb
stos
jbe
add
loop
addl
mov
jmp
xchg
inc
hlt
or
lock
pop
xchg
scas
aaa
jae
mov
pop
adc
iret
outsb
ljmp
fsub
sub
inc
mov
mull
fnstsw
jge
out
jge
addr16
jno
pop
pop
sbb
pop
dec
push
nop
jmp
mov
mov
movsb
fisttps
push
arpl
push
cltd
mov
mov
cmp
mov
fisttps
out
xchg
insb
cs
and
mov
cmpb
insl
sbb
int
arpl
inc
push
mov
int3
dec
adc
fsubr
adc
insb
test
and
mov
setb
js
cmpsl
and
xor
sub
push
scas
mov
adc
xor
inc
cmp
je
in
sub
addr16
and
jno
push
test
out
hlt
jae
jg
sub
test
fcomp
xor
fldt
movsb
ja
cmc
out
xchg
or
ret
out
fs
jg
rcr
cwtl
rcrl
push
ret
aam
retw
xchg
sbb
mov
sub
scas
scas
cmpsb
pusha
mov
adc
jmp
xchg
imul
jmp
mov
add
pop
add
jae
xor
js
pop
rcll
inc
cmpsb
je
out
mov
int
push
lds
mov
xchg
jecxz
fmul
dec
sbbb
xor
dec
jno
adc
test
data16
fxch
sub
aam
jp
dec
sbb
ja
pop
sub
ffree
mov
fs
push
jg
in
iret
add
call
inc
inc
adc
xchg
pop
inc
test
cmp
cmp
jne
sub
dec
or
pop
shlb
jl
test
movsl
cmp
push
lcall
inc
jae
mov
xchg
pop
xchg
sbb
lods
mov
push
incl
dec
js
push
sti
int
xchg
mov
push
mov
ret
pop
and
pop
bound
ss
mov
sahf
dec
shlb
xor
ret
fstl
es
mov
sub
popa
std
sub
or
mov
mov
stc
mov
inc
mov
or
mov
and
adc
push
subb
add
pop
sub
add
mov
mov
sub
loop
or
pushf
cmpsb
scas
jns
mov
divl
and
sbb
sub
cmp
fwait
jl
xorl
jnp
loopne
push
and
into
sbb
lods
dec
std
add
dec
xchg
mov
lods
out
out
mov
mov
adc
sbb
fidivs
pop
lds
pushf
sub
add
mov
mov
xor
xchg
mov
and
in
insb
mov
fnsave
and
daa
pushf
pop
cmp
adc
pusha
imul
dec
lea
inc
stos
mov
dec
lahf
out
movsl
or
dec
ror
fidivs
adc
xor
inc
xchg
push
gs
pusha
lds
mov
dec
jae
fmull
mov
push
or
das
or
out
js
push
pop
int
mov
inc
ret
arpl
mov
and
shlb
xlat
dec
xor
adc
mov
lcall
ja
fbstp
or
int
out
pushf
scas
add
mov
ret
insl
das
push
dec
test
movsb
jo
out
adc
jmp
in
push
mov
dec
push
insl
shl
daa
inc
stos
mov
test
aas
in
addr16
call
fiaddl
imul
mov
popf
mov
mov
add
mov
push
dec
movsl
push
and
inc
sahf
push
sbb
or
movsb
pushf
or
add
mov
js
pop
or
stos
xor
and
rclb
dec
movsl
inc
xchg
mov
xchg
outsl
daa
mov
lret
jo
call
lods
dec
cmc
jbe
mov
pop
bound
and
sbb
std
cmp
dec
cmp
fs
sub
and
filds
loopne
jg
cmpsl
lea
mov
insl
adc
bound
bound
and
mov
fildl
inc
lock
sub
stos
or
fmull
das
pop
pop
fnstcw
jnp
sub
adc
andb
dec
push
fs
cwtl
test
dec
add
mov
mov
xchg
xor
pushf
sti
xchg
fdivrs
roll
sbb
push
pop
cmpsb
and
aad
call
loope
rcrl
loopne
cmp
or
sarl
lret
mov
pop
sahf
sarb
adc
test
inc
pop
bound
dec
pop
lock
nop
pop
jb
cli
mov
fpatan
adc
mov
sti
mov
cmp
repnz
gs
add
inc
cmp
push
pushf
mov
xchg
or
push
xchg
or
inc
imul
dec
xchg
stos
arpl
xor
jg
outsl
lret
push
lods
clc
test
cmp
mov
mov
sarb
ret
bound
pop
inc
and
in
stos
and
pop
popa
lea
icebp
sbb
xor
sbbl
cld
fidivrs
xor
pop
aas
fistl
cmp
sti
or
ja
repz
mov
fs
inc
push
sbb
push
dec
xchg
jg
in
loop
dec
scas
push
ja
dec
mov
aas
sub
imul
push
sti
les
loopne
mov
loop
out
sub
inc
sahf
in
std
cmp
jmp
sub
mov
mov
ret
xchg
out
lock
push
push
mov
xchg
push
mov
or
jge
hlt
mov
mov
add
jbe
cmc
add
adc
int
stc
mov
inc
xchg
or
movsb
jae
xchg
mov
into
repz
out
cmp
pop
sub
call
int
ljmp
dec
outsl
call
xor
in
inc
es
adc
inc
lods
push
push
out
jbe
rolb
or
pop
pop
mov
mov
sahf
int3
cmp
lcall
test
xor
mov
mov
cmp
pop
cmp
mov
das
out
push
sbb
hlt
outsl
rorb
xchg
addr16
es
ret
nop
cmc
out
mov
pushf
call
fdivrs
push
adc
call
daa
dec
call
les
push
xorl
daa
pop
adc
nop
cmpsl
pop
call
js
testl
aam
cltd
xorb
and
cwtl
xlat
lods
adc
addr16
and
jge
push
in
xor
pop
and
fcompp
setae
int3
xchg
mov
fcmovnu
jp
out
xchg
shrb
jecxz
out
lahf
sti
sub
out
in
mov
cli
mov
cmpsb
lahf
adc
or
inc
push
fistpl
les
add
fdivrp
push
outsb
mov
xchg
push
leave
mov
jg
push
inc
adc
cli
mov
add
pop
mov
cmp
inc
hlt
sbb
ljmp
into
inc
fwait
nop
out
push
pop
mov
jmp
jns
jge
lret
movsl
shlb
push
sub
dec
cmp
int
data16
xor
xchg
enter
xor
push
or
insl
inc
icebp
sbb
mov
inc
jecxz
pop
mov
jo
or
testb
lcall
add
mov
aas
cmpsb
jns
xor
xor
fisubl
push
adc
movsl
scas
and
push
sub
fmul
stc
and
xor
rclb
mov
and
jbe
pop
lods
xchg
push
adc
push
addr16
sub
push
sbb
clc
ret
or
das
mov
imul
sbb
jns
rol
out
sub
jle
dec
pop
lods
adc
xchg
jo,pt
mov
pop
loopne
lods
je
add
adc
cmc
in
inc
and
xchg
sub
dec
add
test
arpl
sbb
mov
cmp
xchg
jge
add
pop
sbb
cltd
in
clc
sub
or
add
xor
test
push
stos
xor
nop
aas
mov
mov
and
mov
and
jno
pop
inc
sub
and
cwtl
inc
sub
in
and
incl
dec
inc
mov
scas
pop
loop
ds
aam
sbbl
rcl
jl
out
pop
mov
fs
and
mov
adc
ret
dec
enter
inc
cmp
mov
pop
out
out
cli
es
mov
outsb
cmc
mov
push
jbe
add
xchg
jb
pop
leave
sub
test
xchg
subb
add
sub
imul
ljmp
out
mov
movsb
daa
std
cmp
cmpsb
jle
out
test
xlat
sub
sub
cmp
inc
rcrb
sub
pop
jecxz
cmp
cmp
mov
fs
xchg
sub
jmp
fdivrs
dec
cmp
xor
adc
pop
mov
loopne
jb
or
daa
das
sub
sub
lea
aad
fwait
mov
loop
lret
pusha
pop
add
aaa
lds
sbb
inc
adc
jne
shl
add
xchg
push
outsl
fsubrp
testl
xchg
xor
xchg
and
gs
mov
mov
and
jecxz
insl
jnp
xor
xor
js
or
loope
repz
loopne
inc
shrl
lods
inc
add
rol
loop
nop
sti
cmp
inc
adc
xlat
icebp
xor
jp
out
xchg
ficompl
dec
mov
daa
xor
je
repnz
sub
imul
mov
push
outsl
dec
sub
jne
imul
lds
and
ss
addr16
add
push
xchg
pop
inc
pop
cs
lods
lret
xor
stos
mov
test
cli
test
adc
sbb
outsl
aaa
jns
mov
jge
jg
inc
lds
repnz
push
aas
sti
in
or
pop
jl
mov
cmc
scas
addr16
inc
pop
or
mull
cmpsb
jge
lahf
add
movsl
loope
jo
adc
fisubrl
mov
push
inc
inc
call
popf
jl
mov
xlat
pop
pop
jl
sub
jo
out
pop
or
mov
xchg
xchg
push
mov
lcall
sbb
mov
stos
fsubrl
cmp
clc
pop
sub
xor
or
test
push
loop
lock
pop
dec
lahf
lds
in
add
ja,pn
sub
imul
test
and
mov
insl
stos
dec
sub
push
movsl
or
and
xor
jno
leave
and
pop
dec
mov
inc
pop
fcompl
mov
sbbb
das
and
cmpsl
aad
aaa
jecxz
enter
jle
scas
outsb
sbb
pop
fisttpll
push
lea
pop
shrl
inc
rcll
jo
push
test
push
add
xor
push
in
sahf
adc
leave
ds
add
outsb
subb
into
dec
in
or
scas
in
cmp
jb
out
mov
mov
sub
adc
or
adc
icebp
adc
ja
add
loope
pusha
hlt
mov
xchg
fsubs
fldt
fiaddl
jnp
adc
add
ja
bswap
imul
call
xor
adc
pusha
stos
dec
int
fstpl
adc
mov
add
inc
out
cmpb
mov
mov
mov
movsb
ficompl
rol
push
es
rcrb
loop
data16
mov
jns
mov
cltd
mov
push
and
fidivl
push
xchg
bound
mov
test
mov
enter
or
rolb
icebp
push
dec
push
movsl
pop
jno
hlt
mov
and
pop
jp
mov
xchg
pop
je
push
xchg
sub
movsl
or
mov
loopne
sar
push
xchg
test
adcb
jnp
mov
insl
ret
ret
jecxz
ja
fisubrs
and
jg
lret
sub
pop
pop
aaa
lahf
shl
jo
sarl
xchg
sbb
stos
jo
inc
add
mov
add
mov
test
pop
push
adc
sahf
aad
leave
fwait
and
push
cmp
add
cld
rcl
jmp
xor
mov
jae
out
dec
jecxz
adc
ljmp
scas
add
push
cli
das
xchg
js
popa
mov
mov
ja
test
bound
mov
repz
mov
scas
loop
stc
inc
push
stc
xchg
fistpll
ret
aas
mov
jmp
das
push
fwait
into
inc
xlat
xor
leave
je
cmp
repnz
add
fisttpl
and
in
leave
xor
mov
cmovp
add
cmp
xor
cmpsl
not
mov
push
fstl
push
adc
jge
repnz
fcmovb
mov
xchg
icebp
mov
sub
stos
call
mov
mov
sub
bound
cwtl
nop
xchg
or
and
xchg
es
sub
push
mov
popf
and
loopne
mov
xchg
sbb
push
xchg
cmp
cmp
loope
outsb
outsb
adc
es
adc
mov
scas
mov
and
pusha
punpckldq
xor
std
repnz
shrl
push
sahf
push
cld
dec
std
sub
mov
sub
xchg
rcrl
cmp
les
movsl
pop
and
jne
or
mov
jns
push
or
insb
cmp
iret
inc
adc
clc
and
aaa
jmp
and
xlat
sbb
cmpl
dec
ss
jp
inc
aam
add
mov
dec
je
xchg
filds
lds
push
imul
icebp
cwtl
js
mov
pop
mov
adc
scas
fdiv
ret
addr16
sbb
and
mov
inc
pusha
icebp
or
fs
lahf
pop
xchg
add
pop
int3
pop
pusha
pushf
imul
enter
test
mov
xchg
add
sbb
imul
sarl
pop
mov
push
pop
enter
pop
mov
shll
lret
das
sub
xor
insb
shlb
adc
imul
add
dec
pop
divb
mov
mov
jg
pop
push
push
adc
jl
insb
jb
jmp
dec
lahf
xchg
and
out
in
das
inc
cld
mov
mov
std
loop
jmp
cli
xchg
sbb
loop
xchg
jae
pop
xlat
xchg
or
mov
pop
jecxz
push
int
xor
push
or
iret
andb
imul
pop
dec
in
jae
pop
in
insb
push
shll
push
push
push
test
push
cltd
fwait
mov
adc
cmpl
sbb
into
cli
pop
lret
xrelease
xchg
mov
fstpt
and
fisttps
xor
mov
popf
sbb
push
loope
fucompp
dec
push
les
adc
lods
lret
sbb
in
mov
sarb
fxch
jp
cmp
push
test
repz
loope
aam
aas
aaa
into
jg
adc
mov
lock
lahf
dec
insb
movaps
mov
std
lahf
sbb
sahf
popf
fstp
inc
cltd
adc
in
ret
inc
ds
inc
xchg
xchg
repnz
and
pop
or
scas
test
into
cmpsb
divb
xor
hlt
cmp
jmp
cld
stc
test
test
jne
mov
push
push
mov
push
push
aad
mov
stos
mov
ror
fstpl
fldt
pop
jnp
add
xor
jnp
dec
inc
sbb
loop
sti
mov
imul
iret
leave
imul
bound
mov
scas
fists
sub
inc
les
inc
jns
adcb
and
fisubl
mov
ljmp
rolb
sbb
adc
lods
lret
or
push
cmp
loopne
or
idiv
call
incb
mov
inc
jnp
gs
rclb
fcomp
xchg
loopne
test
pop
pop
sahf
mov
iret
call
fdivl
or
sbbl
push
lods
ret
inc
push
shll
dec
mov
int
jne
inc
ljmp
and
mov
cmpsb
xchg
xor
movsb
xchg
cli
es
inc
and
cmc
divl
cmpsb
leave
repnz
mov
push
js
xor
int
icebp
jno
lret
shll
and
ja
popf
aad
mov
xor
icebp
out
popf
jb
clc
pop
and
arpl
lahf
xor
aad
xchg
fisubs
pop
mov
adc
xchg
lahf
mov
inc
cmp
pop
imul
loop
inc
push
sub
jp
mov
push
lcall
jb
pop
iret
push
dec
xor
sarl
jl
movb
in
lret
daa
insb
mov
sti
pop
pop
xor
fcmovbe
or
cmp
mov
hlt
push
adc
lds
dec
mov
call
mov
cmp
mov
dec
shrb
fnstcw
mov
incb
cltd
loope
ss
push
fsubl
add
inc
leave
andl
jb
add
jmp
inc
sti
mov
pop
add
mov
jbe
cli
dec
xchg
fmull
test
test
mov
dec
jno
sbb
cmp
sub
xchg
stc
xchg
push
fisubrs
pop
inc
xchg
addr16
pop
mov
mov
pop
sub
adcb
lods
out
popf
push
jl
mov
or
inc
nop
jecxz
cli
mov
icebp
int3
stos
mov
sbb
jge
ret
jecxz
addr16
and
and
ds
adc
fdivs
imul
sub
fmull
xchg
cli
stos
call
adc
fdivl
push
xchg
fmuls
aam
in
jbe
jecxz
pop
ret
jne
push
ja
push
outsb
ret
xor
dec
xchg
imul
or
push
hlt
js
pop
dec
insb
push
mov
sub
dec
or
stos
inc
cwtl
and
mov
not
push
int3
ret
js
cmpsl
dec
mov
jns
jmp
subps
mov
jle
dec
cld
sbb
mov
jp
mov
xchg
push
xor
cmc
orb
pusha
push
xor
and
loope
mov
daa
xchg
or
pop
psubd
cmp
ss
pop
cmp
pop
mov
in
or
sbbl
out
mov
pushw
test
xchg
lahf
and
lret
sub
and
shr
add
andb
dec
adc
jg
xchg
add
imul
in
dec
or
and
jno
jae
push
jo
sub
vpackssdw
lods
sub
shrl
test
push
les
in
pop
cmpsl
data16
aas
imul
mov
into
sarb
je
xchg
std
cmpsl
movl
sti
test
int
xchg
sbb
jmp
add
mov
sahf
mov
fbld
sub
adcb
movsl
ljmp
mov
repz
sbb
ds
test
or
mov
adc
sahf
mov
mov
jmp
shll
lds
cmp
push
shr
sub
incl
inc
out
in
lret
push
leave
rcrl
mov
cmp
mov
and
cli
aam
adc
iret
cli
ret
mov
movsl
jecxz
test
insb
fucom
push
shrb
xlat
push
push
popf
mov
lret
xchg
pusha
fbstp
push
es
jbe
and
icebp
repz
pop
jno
lods
shrl
shrl
xchg
mov
lret
or
mov
pop
insl
ja
repnz
and
xchg
cmp
int3
lea
xlat
cmp
or
loope
fsubl
jns
xchg
pushf
test
clc
pop
xchg
fmuls
jle
mov
dec
add
jbe
ret
push
xor
jmp
sub
shrl
fs
jo
xor
and
adc
insb
mov
cltd
pop
loope
add
push
enter
xchg
ja
lcall
push
ja
inc
cmp
cwtl
fidivl
mov
mov
xchg
mov
or
hlt
xchg
popl
pop
mov
test
ljmp
shr
mov
in
call
es
push
fadds
iret
add
filds
mov
std
xor
mov
idivb
push
inc
scas
mov
push
cmc
and
push
in
mov
aas
mov
pop
stos
push
and
sahf
sub
fwait
fwait
pushl
sbbl
test
faddp
xchg
lcall
bound
fucom
cmp
pop
aas
int
xchg
shlb
add
cltd
inc
pusha
xor
das
inc
add
cli
fwait
loope
stc
cmp
leave
mov
mov
mov
add
sub
out
pop
sbb
sub
stos
fsubr
mov
jl
fcmovbe
sbb
dec
movsb
add
jecxz
js
outsb
jl
es
movsb
fldl
mov
mov
outsb
fs
adc
jae
cmp
pop
scas
jnp
mov
lods
mov
lret
dec
sub
daa
in
jae
xchg
arpl
repnz
imul
outsb
pop
push
mov
roll
ret
xor
cwtl
stc
int3
outsb
jmp
icebp
mov
adc
repnz
fwait
inc
shl
dec
ret
ficoml
int
push
or
ljmp
int
repz
stc
adc
xchg
cmp
xchg
sub
cmp
sbb
sbb
xor
jl
or
leave
sub
pushf
sbb
cmp
and
lret
mov
jbe
mov
jnp
loop
jge,pt
cwtl
push
es
mov
loopne
ret
cs
mov
add
sarl
nop
sahf
call
add
cmp
daa
shll
mov
and
pop
xchg
dec
pop
bound
xor
daa
mov
in
outsl
mov
popf
ds
dec
sbb
rcr
add
sahf
or
ret
xchg
jns
mov
arpl
push
or
xchg
adc
daa
add
lcall
pop
jge
mov
xlat
mov
sub
jg
mov
push
test
out
jmp
shll
push
xchg
mov
aad
jle
add
sub
inc
daa
adc
or
gs
in
dec
adc
pop
stc
jae
lret
in
ficoml
stos
aam
mov
pop
test
push
xor
sbb
or
jbe
mov
xor
sub
cmc
cltd
pop
cltd
bound
jg
push
pop
in
aas
pop
push
loop
mov
xor
lods
push
sub
mov
into
jmp
inc
xchg
outsl
sub
arpl
scas
out
jp
pop
test
hlt
mov
testb
cld
data16
adc
dec
dec
lahf
ds
es
mov
inc
jb
dec
xchg
or
inc
sub
addl
aaa
orb
stos
iret
ds
adc
in
popf
movsl
jne
mov
outsl
pusha
mov
test
fsubrl
adc
dec
dec
les
rclb
cld
out
lods
fs
stc
inc
pop
sbb
xor
out
icebp
scas
orl
xor
dec
push
mov
mov
xor
push
jmp
daa
pop
mov
ja
imul
ficomps
clc
sub
lea
shlb
inc
fs
shll
jns
xor
enter
sahf
lret
jle
pop
cmp
je
test
sbb
xchg
decl
fcomp
mov
jb
jge
xchg
adc
cli
or
push
sub
mov
inc
loop
mov
int3
mov
outsb
xchg
inc
fbld
sti
cld
stc
ljmp
daa
add
dec
sbb
fbstp
push
adc
xor
insb
movsl
xchg
mov
iret
pusha
jle
aaa
mov
stos
lret
inc
ret
shrl
in
mov
lods
jmp
rcr
sub
stc
dec
adc
into
mov
out
leave
inc
repz
sub
ds
add
sub
add
call
outsl
xchg
mov
pushf
ficompl
mov
sub
popf
std
jmp
dec
jg
clc
adc
mov
pop
pushf
mov
xorl
xchg
pop
adc
popa
push
push
rcrl
dec
dec
imul
and
test
lods
pop
sub
scas
dec
in
sahf
ljmp
jle
mov
out
shl
icebp
xchg
sti
fstps
lret
inc
pusha
jge
xchg
les
addl
loop
mov
jo
aaa
lea
dec
inc
xchg
dec
pop
dec
add
xor
fistps
sahf
out
cmp
rolb
fdiv
adc
mov
mov
test
cmp
and
repz
xor
das
notb
rcll
fists
mov
ss
pushf
fsubrp
sub
faddl
ja
daa
fcoml
lcall
pop
mov
xchg
int
mov
add
or
cmp
xor
and
push
sbb
aas
shll
add
sbb
jbe
mov
jecxz
inc
lret
push
enter
pop
mov
insb
ljmp
cld
and
out
jle
sbb
fiadds
nop
rcrl
sub
mov
fbstp
je
pop
divb
xchg
cltd
dec
push
xlat
stos
dec
notb
pop
sub
adc
movsl
or
jecxz
adc
xor
push
lods
add
pop
subl
xchg
popa
stc
sbb
das
and
out
sarl
push
into
test
push
or
mov
lods
push
mov
and
xchg
fisubl
push
mov
add
and
fdivrl
inc
push
jp
mov
in
cmp
fistps
outsb
sbb
push
roll
add
inc
clc
or
push
bound
sub
std
lahf
cmpsb
aam
aaa
jmp
push
mov
aas
int
and
xor
jl
popa
fiaddl
js
push
sub
xor
sbb
jp
push
inc
adc
lcall
jge
pop
sub
stc
lods
pop
dec
push
or
cmp
call
push
jb
jecxz
mov
in
mov
loope
mov
fisttpll
test
lds
or
sbb
adc
idivb
sbb
data16
outsl
mov
jmp
xor
dec
adc
mov
push
lock
jno
out
repnz
lret
cli
aad
mov
pop
outsb
data16
mov
negb
mov
cmpsl
mov
mov
call
and
imul
ror
and
mov
js
mov
pusha
pop
clc
xchg
pop
xor
jae
repnz
adcb
jo
lock
or
pushf
jg
inc
mov
sub
xchg
lods
mov
movsb
jbe
in
jge
pop
outsl
test
xchg
dec
cmp
mov
or
cmp
jbe
ret
popl
in
sub
jae
test
push
ss
xlat
testb
xchg
xchg
or
sub
sbb
lock
call
icebp
push
call
xchg
xchg
in
pop
ret
jle
cld
push
inc
pushf
sarl
loope
cmpsb
test
sub
out
cmpl
out
sti
imul
mov
in
add
and
scas
addr16
sbb
add
pop
and
mov
push
inc
adc
out
mov
lea
fwait
lods
lret
jge
mov
sahf
lods
int
and
dec
jae
pop
xchg
mov
aam
sub
out
lahf
xor
clc
xlat
xchg
dec
hlt
shr
pushl
mov
mov
popf
lret
xor
dec
mov
and
dec
aas
jle
mov
pop
jle
mov
dec
rep
push
fdivl
mov
fs
pop
sub
adc
xchg
add
mov
shlb
ret
enter
dec
and
inc
push
leave
sbb
push
add
push
cltd
dec
aas
xchg
xchg
jmp
imul
ret
xor
mov
js
test
data16
hlt
push
fidivs
jno
lock
stos
bound
dec
mov
mov
es
xchg
repz
bound
push
lcall
cmp
das
mov
and
dec
ret
out
aas
pop
test
cmc
mov
mov
pop
fdivrs
xor
int3
jge
arpl
into
pop
out
jp
push
adc
xor
jmp
dec
push
insl
hlt
adc
cmp
test
stos
mov
ja
and
scas
in
pop
into
mov
inc
cmpsw
idivl
xor
data16
mov
pop
outsl
mov
mov
sbb
adc
stos
jle
mov
cli
lret
fmull
jo
scas
and
int
xor
shrb
cli
and
inc
push
outsl
bound
xchg
jge
dec
pop
pop
mov
mov
pop
pop
pop
mov
xchg
cmp
adc
test
dec
push
push
mov
jns
jne
data16
pop
pop
pop
push
insb
stos
rorb
arpl
stos
jne
negb
sarb
dec
in
into
movsl
jl
mov
or
jae
into
xchg
xchg
arpl
xchg
incb
in
in
xchg
scas
or
nop
adc
jl
xorb
stos
aad
and
cmpsb
fistpl
mov
sub
iret
imul
outsl
loop
mov
frndint
lock
sub
mov
jmp
addr16
xor
movsb
cmp
push
mov
dec
and
rorl
fbstp
and
sub
xchg
add
or
test
test
xchg
add
jns
jmp
adc
cmp
addr16
push
out
mov
js
aaa
xlat
stc
pop
dec
mov
pop
add
pop
popf
adc
hlt
jle
xchg
es
fsubl
movsb
cmp
cs
sbbl
lock
mov
fwait
les
add
add
and
insb
mov
aas
ja
repnz
fstpl
cmp
fs
hlt
xchg
mov
mov
jg
pop
push
shll
pop
sub
je
xchg
sub
sbb
push
cmp
xchg
cmp
mov
je
mov
popa
mov
pop
roll
mov
aas
sbb
mov
or
inc
xchg
adc
or
or
fisttps
sbb
lods
push
push
add
cmp
dec
pop
mov
add
sahf
mov
icebp
lret
out
push
shll
pop
loopne
mov
cltd
xchg
and
imul
push
jg
bnd
hlt
shll
insl
in
mov
jp
idivl
pop
dec
rol
adc
and
dec
leave
cmpsl
filds
ficoml
enter
fnsave
push
jo
inc
fbstp
call
cltd
sub
xchg
push
inc
xorl
fmull
sbb
sub
lcall
xor
add
addr16
lods
leave
aam
sub
out
sahf
repz
jne
or
test
cmp
pop
stos
fadds
pusha
inc
data16
lret
add
mov
sarb
lds
push
addr16
dec
add
xorl
and
xchg
cmp
popf
aaa
mov
insb
mov
cmpsb
cmp
pushf
cltd
push
sbb
cld
mov
aas
pop
mov
jno
mov
fisubs
mov
cli
jne
cmp
push
mov
stos
cltd
fidivl
rcrl
cld
push
out
fdivs
shlb
xlat
pushf
fsubp
lock
outsl
adc
pop
jnp,pt
jge
loope
out
cmp
lea
jecxz
test
scas
mov
pop
shlb
jg
int
jae
push
cmpsl
or
in
xchg
inc
out
ja
pop
and
and
addr16
repz
fisubs
push
push
imul
and
jge
push
rol
out
cmpsl
mov
shufps
cs
mov
push
sbb
xlat
mov
mov
test
pop
xor
ljmp
jge
test
int3
lock
jmp
out
sti
cmc
jne
push
stos
jl
stos
dec
jge
mov
pop
cmpsl
cwtl
push
cmp
add
push
insl
clc
sbb
fs
fildll
dec
jp
out
ljmp
cmp
jge
testl
adc
es
lds
leave
mov
adc
mov
dec
jl
dec
xor
xor
inc
jmp
mov
sub
stos
pop
or
adc
cli
mov
xlat
cltd
mov
push
jecxz
add
cmpb
lcall
jns
mov
stos
dec
fisubrl
iret
xchg
xor
adc
aad
and
jge
jecxz
add
cltd
movsl
or
cmp
mov
lock
popf
mov
cmp
aaa
dec
push
loopne
test
pop
pushf
jge
fs
scas
dec
pop
pop
roll
aaa
in
cmp
pushl
mov
in
pop
push
lahf
jno
jae
mov
je
insl
jp
cli
sarl
inc
inc
test
addr16
out
cmp
sbb
cli
cmc
cmp
add
add
mov
arpl
sbb
into
xchg
jb
in
pop
mov
gs
daa
add
scas
add
call
aam
enter
fwait
push
lea
dec
dec
ljmp
adc
mov
int
jge
out
daa
sbb
cmp
fbstp
loopne
fisttps
arpl
mov
xlat
rcl
popa
mov
out
and
dec
cwtl
vxorps
push
fwait
mov
push
dec
arpl
mov
imul
dec
iret
xor
insb
mov
pop
std
mov
push
pop
notb
push
jns
leave
imulb
insl
mov
sub
push
sbbb
movsb
out
dec
loope
jmp
lcall
jae
xchg
cmp
ret
into
out
popf
and
lods
or
daa
sbb
and
dec
push
push
add
leave
mov
sub
pop
test
jp
sbb
das
insb
cmp
cmp
out
iret
pop
mov
cmpsl
scas
or
mov
mov
push
in
cmp
or
imul
dec
sbb
adcb
jb
sub
add
cmpsb
adc
jae
loop
out
int3
in
cmpsb
fwait
addr16
hlt
mov
loope
jle
test
sbb
push
cli
mov
fs
jne
jbe
das
mov
mov
in
add
cmp
mov
arpl
push
in
pop
cmp
inc
div
pop
add
jge
out
imul
mov
xlat
shlb
mov
ret
dec
arpl
dec
jns
adc
jne
cmpsb
sbb
push
mov
jle
pop
test
xor
push
dec
test
mov
adc
je
jb
pop
mov
test
ds
icebp
xchg
push
je
loope
push
xchg
add
or
cld
in
or
cmpsb
in
rcrb
mov
jg
repz
fnstsw
xlat
jecxz
mov
filds
stos
dec
mov
and
mov
xchg
hlt
sub
mov
outsl
and
arpl
mov
sbb
or
mov
dec
or
mov
jecxz
xchg
daa
cld
lods
jmp
xchg
mov
pop
xchg
int
sub
rcr
outsl
mov
test
in
sbb
pop
sti
adc
push
test
imul
adc
sub
mov
notl
mov
xor
daa
stos
je
imul
mov
add
mov
js
mov
xorl
inc
jo
loope
sub
fmuls
add
cmp
sub
or
mov
jnp
aaa
and
leave
xor
scas
jg
and
mov
lods
cmp
inc
jl
jbe
xchg
pop
ja
add
scas
or
cld
out
rcl
cmpsb
fcoms
inc
ret
andl
aaa
xorl
lock
popl
push
mov
cli
jae
mov
push
rcrb
nop
mov
push
pop
jbe
hlt
sub
jne
sub
pop
sbb
rol
mov
xchg
lods
fists
cmp
insl
dec
push
bound
cmp
mov
pop
and
rorb
xchg
mov
mov
addb
rcl
popa
ret
jno
or
in
dec
xchg
ja
out
pushf
icebp
xchg
cmpsl
or
clc
out
shl
repz
jecxz
ret
xchg
mov
aam
jno
sbb
lret
mov
pop
fisubl
test
popa
cmpsl
mov
pop
push
cmova
inc
push
aaa
xor
mov
push
out
mov
inc
movsl
aas
inc
ds
pop
mov
inc
les
jl
inc
jnp
xchg
inc
hlt
cmpsb
jnp
dec
leave
je
ret
int3
in
add
lock
xchg
mov
fbld
ret
xchg
and
cmp
xchg
ret
enter
jmp
sbb
js
mov
icebp
add
cmc
in
aad
inc
pop
push
aad
pop
pushf
and
push
pop
push
mov
add
cmp
mov
subb
add
jbe
and
rolb
pop
fwait
cmp
lock
testl
lock
and
cmp
xor
movsl
push
in
cmc
sub
mov
jecxz
sub
sbb
jle
mov
jmp
pop
rcrl
ljmp
push
call
push
jno
xor
mov
mov
inc
or
inc
sub
push
scas
idiv
or
call
mov
sti
cmp
pop
and
mov
icebp
xchg
dec
js
pop
insb
lods
xor
dec
push
shrb
inc
movsb
push
jmp
mov
fcoms
jno
jnp
dec
inc
insl
or
add
outsb
addr16
cmp
daa
mov
cmp
iret
and
imul
mov
adc
movsb
cmp
pusha
cmp
frstor
xor
out
shlb
lods
adc
mov
cmpsb
mov
or
out
xchg
fists
sbb
pop
xchg
cmpsb
insb
sbb
mov
pop
pop
push
push
rcr
shll
mov
repz
pop
mov
ds
lret
pop
jle
bound
pop
add
lock
fnstsw
sarl
lcall
or
cmpl
pop
ljmp
add
mov
pop
lret
sbb
or
aas
loope
add
fimuls
stos
inc
and
push
in
jecxz
inc
lock
jg
mov
call
mov
cmc
mov
mov
cmp
test
test
fisubl
push
aaa
jg
mov
jb
jle
cwtl
add
imul
cmpsb
jp
xchg
addr16
sarl
loope
jno
ret
lods
sub
int3
outsb
fbstp
hlt
pop
xchg
in
dec
mov
push
fimuls
cmc
dec
fistl
fsubrp
pop
repnz
jge
rol
cmpsl
jmp
mov
xchg
mov
cld
ret
dec
ja
or
mov
stos
jl
adc
arpl
xor
mov
or
ffreep
push
stos
mov
push
ljmp
inc
sbb
and
test
in
gs
pusha
std
arpl
cmp
pop
adc
mov
and
fisubrl
dec
jl
xchg
mov
xchg
adc
dec
mov
lret
cmp
dec
fstpt
jle
pusha
mull
sarb
fldenv
shll
sub
fisttps
jns
sub
jb
adc
idiv
shlb
xchg
push
in
jge
mov
movsl
rcll
out
loop
cli
cli
pop
shlb
mov
xchg
loopne
pusha
jae
xchg
mov
sbb
xor
dec
int3
jae
mov
mov
xchg
cmpsb
mov
ds
ljmp
rcrb
cwtl
sub
xchg
mov
in
repnz
mov
sahf
xor
pusha
xchg
shlb
xchg
or
sub
lods
hlt
pusha
jo
sub
iret
and
push
out
fildll
sbb
insl
outsl
lret
aas
stc
xor
movsl
pop
add
mulb
cmp
dec
adc
jg
adc
mov
cmpsb
mov
push
test
sub
scas
push
pop
fdivrl
pop
js
add
int
popa
pop
mov
push
leave
xchg
fdiv
mov
cmp
rcll
push
std
cmp
inc
ja
pop
test
add
std
cwtl
mov
int
outsl
xchg
ret
and
insb
xchg
arpl
jno
cmp
add
stos
sub
xchg
test
pop
push
mov
popf
test
out
jle
xor
xlat
or
aad
xchg
xchg
or
mov
std
push
loope
jmp
test
xchg
xchg
sbb
mov
cmp
xchg
repnz
pop
rcr
in
xor
lea
arpl
dec
sti
out
inc
lds
dec
js
stc
fildl
xchg
popf
outsb
loopne
into
test
push
hlt
outsb
pop
es
add
rdpmc
add
in
lret
sub
ljmp
inc
jbe
test
outsb
or
jp
pop
pop
stc
and
test
jle
sub
in
loope
cwtl
cli
cmp
insb
mov
test
cmc
mov
push
jge
mov
inc
push
nop
mov
loopne
xor
mov
cli
dec
bound
adcl
clc
fwait
mov
jnp
xlat
pop
lods
xlat
pop
xor
pop
les
lret
xchg
push
jno
fcmove
imul
stos
xchg
es
xchg
cld
pop
mov
dec
ret
cs
movsl
mov
scas
add
insl
std
pop
cmp
xor
dec
dec
scas
cmpsb
jg
xor
mov
cli
pop
mov
movsb
aas
arpl
and
xchg
decl
pop
cwtl
stc
or
mov
mov
add
shll
adc
int3
mov
xor
nop
dec
or
int3
enter
rol
out
dec
test
inc
add
cmp
xor
sbb
clc
adc
jo
jmp
daa
dec
pop
inc
push
lods
outsl
jo
std
stos
cmpsl
add
mov
ja
mov
scas
js
inc
cmp
ret
push
xor
notl
mov
push
in
dec
jmp
enter
jmp
dec
jp
dec
movl
sti
adc
add
aas
in
inc
cld
mov
inc
push
imul
ret
nop
sbb
daa
push
jg
mov
fcos
jae
mov
stc
fists
fwait
sbb
fistpl
or
shrb
inc
mov
aas
ljmp
inc
mov
mov
ljmp
sbb
mov
mov
dec
jl
dec
arpl
icebp
adc
or
jns
stos
call
xchg
pop
enter
xchg
pop
repnz
jb,pt
inc
sbb
mov
pusha
mov
or
dec
xchg
xorb
sbbl
mov
mov
mov
ljmp
in
or
push
push
cltd
mov
jge
push
inc
lds
mov
jg,pt
jne
xchg
pop
push
aam
mov
pop
add
push
lcall
xorw
jg
subl
or
repnz
movsl
insl
fsubs
clc
aaa
pop
pop
cltd
inc
loopne
xchg
xchg
adc
ret
imul
sub
ss
stos
in
in
push
leave
outsb
cs
mov
outsb
dec
mov
out
jl
inc
jmp
and
faddl
mov
cmpl
iret
clc
push
cmc
outsl
test
and
popa
outsl
pop
lock
push
pop
in
adc
jecxz
enter
loopne
fwait
and
cli
movsb
xchg
or
add
repnz
bound
add
sar
loop
pop
fs
ret
add
ret
dec
data16
pushf
enter
into
inc
cmp
out
sbb
dec
call
pop
add
roll
in
jno
or
xor
xor
loop
dec
js
mov
adc
scas
inc
ret
xchg
jp
sti
adc
or
pop
add
jbe
push
lea
insb
xor
push
pop
aas
test
cmp
jae
sahf
lods
ljmp
movsb
lret
sub
pop
xor
add
filds
addr16
test
push
dec
popf
push
push
and
cmp
inc
sub
cmp
into
mov
shll
clc
test
and
sete
jmp
pop
pushf
jmp
leave
out
push
adc
in
xor
xchg
iret
push
int3
lods
fisttpll
ds
aam
sahf
sahf
xor
flds
ja,pn
sub
dec
aaa
jbe
fcmovbe
mov
cmp
jno
inc
enter
jmp
jno
divl
push
cmp
stc
add
or
xor
lods
shr
sahf
imul
adc
call
mov
push
sbb
or
push
jecxz
jno
js
popa
nop
add
pop
scas
cld
mov
sub
inc
ljmp
pop
jp
or
or
push
and
iret
add
cs
xor
mov
imul
shrl
sbb
push
cltd
jg
xlat
and
mov
fstpl
or
adc
push
addps
and
add
out
arpl
fsubrs
shrl
sub
arpl
es
sub
jp
or
gs
and
in
jb
mov
icebp
shrb
pop
fldcw
decl
movaps
mov
pop
fdivrp
out
mov
call
insb
sbb
test
dec
cmp
lods
or
test
jle
insl
dec
add
sbb
daa
adc
jb
add
scas
add
insl
fdiv
pop
insb
int3
lcall
xchg
enter
jl
mov
mov
mov
sbb
mov
xchg
repz
pop
imul
aam
mov
jmp
mov
inc
xor
and
mov
jnp
and
subl
mov
adc
pop
inc
sbb
mov
xlat
mov
arpl
rclb
push
mov
push
push
xorb
or
imul
mov
push
cmp
inc
jns
loopne
scas
push
jmp
leave
pop
push
mov
imulb
xlat
data16
fnsave
inc
jp
and
and
inc
popa
xchg
in
sbb
rol
stc
cmp
push
fsubrp
pop
mul
test
xchg
cmp
cs
pop
pusha
push
cltd
aas
add
std
xchg
jne
pop
inc
add
pop
stos
mov
mov
xchg
lock
sub
and
scas
sbb
jo
xor
pop
dec
cwtl
int
adc
pop
xchg
cmpl
bound
add
lret
das
mov
or
in
jns
sbb
ljmp
rcll
xor
sbb
out
rcll
mov
push
pop
jne
cmp
fcoms
xchg
xchg
cmp
sti
fdiv
fisubrs
or
mov
jo
call
mov
fmuls
or
sub
xor
pop
imul
jp
xor
inc
dec
xor
cmp
test
sub
push
ds
iret
sbb
call
addps
imul
test
pop
push
jb
mov
push
fbstp
lret
lcall
xchg
mov
test
out
movsb
incb
sub
lock
jl
pop
sub
inc
push
rclb
push
sub
dec
int
mov
or
fmuls
fists
leave
lock
in
lea
push
adc
ret
sbb
pop
imull
stos
out
enter
sbb
subb
popf
enter
fdivp
pushf
sub
inc
sbb
push
push
mov
loop
jecxz
cli
pop
sbb
out
and
and
jne
es
loopne
mov
lods
jns
test
sbb
jno
mov
mov
xor
push
movsb
in
sub
xor
orb
daa
stos
addr16
xchg
js
jae
orps
mov
mov
test
jb
add
pop
pop
repz
sarb
es
stc
cmp
cmp
xor
dec
or
out
push
cs
jle
test
adc
shl
loope
cmpl
jnp
push
lret
aas
and
gs
mov
lock
cltd
pop
or
inc
jnp
jbe
xchg
lods
sbb
cmpsl
xor
imul
xor
aaa
push
stc
cmp
nop
je
repnz
jg
inc
add
push
imul
out
push
jg
mov
loope
arpl
push
lods
xor
jg
xchg
mov
push
rcrb
lcall
jns
sub
mov
lret
icebp
push
cmpsl
xchg
lods
daa
mov
stos
mov
popf
aam
pop
daa
das
int
shl
pop
rcrl
xchg
adc
test
mov
cli
adc
loopne
cmp
pushf
cs
scas
leave
rolb
sub
sbb
push
test
mov
out
lret
mov
shll
and
xor
jecxz
mov
cli
adc
mov
push
fstps
inc
sbb
pop
pop
test
scas
shl
pop
ljmp
pushf
sti
sbb
int
and
out
jne
das
sub
jo
xchg
inc
cmc
pop
fcompl
je
test
xchg
negl
dec
jb
cmp
xchg
push
or
pop
or
ja
jae
cmpsl
xchg
loopne
xchg
or
lock
leave
add
jge
pop
add
mov
adc
xchg
pop
xchg
pop
pusha
and
mov
jmp
or
mov
jp
or
adc
sub
stos
dec
arpl
rcl
aad
into
pusha
jg
mov
in
jmp
pop
pop
cmp
pop
out
push
cmp
dec
or
xor
and
jb
dec
sbb
repz
sbbl
cmpsb
loop
sbb
shll
adc
xorb
mov
xorb
and
xchg
bswap
mov
jg
pushf
xchg
dec
sti
mov
pop
xor
test
leave
mov
sbb
xor
jno
popf
xor
adc
mov
das
in
adc
mov
imul
cmp
idivb
cmp
xorb
lds
or
addr16
inc
jne
inc
inc
sbb
cmp
inc
sbb
lahf
sbb
mov
mov
or
mov
jbe
cmp
ret
push
dec
call
inc
mov
lds
add
jae
xor
loope
add
xchg
repnz
into
lea
fxch
sub
jmp
push
scas
cmp
adc
loop
push
push
mov
icebp
pop
add
xchg
in
mov
out
xor
in
mov
or
or
inc
add
data16
sbb
mov
test
scas
stos
scas
mov
daa
out
jae
movsb
mov
xor
cli
add
cmp
or
xchg
adc
jl
or
je
ret
add
icebp
sub
xchg
sbb
cmp
jmp
push
inc
sub
dec
fcom
ja
sbb
mov
in
pop
fisubs
dec
cmp
mov
into
mov
push
js
repnz
or
push
adc
popf
fbstp
clc
push
or
and
pop
cmp
jae
test
xor
je
jo
xchg
pushf
into
in
cs
iret
push
pushf
cwtl
pop
add
enter
cld
xchg
add
rclb
push
sbb
gs
popa
imul
mov
pushf
rcr
dec
ljmp
fs
jmp
scas
dec
push
popf
mov
jge
sbb
or
cmp
xchg
inc
sbb
jns
and
mov
push
adc
mov
fcomp
enter
push
mov
fwait
inc
or
jl
inc
cmp
pusha
jge
fidivrs
int
mov
push
adc
rcl
and
stc
imul
icebp
cmp
call
inc
out
pop
ja
xor
dec
jl
clc
jmp
dec
dec
xchg
add
scas
push
cwtl
mov
clc
xchg
int3
adc
ds
xor
cmp
movsb
dec
out
fdivrp
repz
aad
sub
jmp
xchg
and
jne
jg
lock
push
sbb
loopne
dec
xor
jl
paddusb
insl
repz
enter
cmc
cmp
gs
pop
inc
repnz
mov
mov
int
jns
imul
jnp
int
pop
fcoml
sbb
mov
arpl
imul
pop
push
ret
fwait
jle
jne
repz
test
jnp
inc
inc
adc
or
gs
jns
out
repz
andl
repnz
inc
aas
jle
jl
cmpb
push
fidivrs
rcl
mov
push
ucomiss
dec
outsb
mov
jo
mov
jnp
mov
push
pop
gs
pop
rcrb
sub
sub
sub
test
popa
loop
mov
lret
add
add
aaa
dec
int3
stc
xor
outsb
mov
pop
in
aas
dec
or
loope
js
push
xor
inc
inc
cmc
push
movsl
xchg
xchg
cmp
sbb
in
push
fists
mov
in
sbb
push
test
mov
sbb
dec
jg
das
insl
pop
outsb
lret
aam
xchg
jmp
pop
out
mov
dec
xchg
dec
mov
movsb
rcrl
ss
fsubs
das
cwtl
aad
inc
mov
stc
dec
push
dec
scas
filds
cmp
mov
imul
lock
xor
fcmovne
add
jb
movsb
add
int
rcrb
mov
add
dec
iret
cmp
scas
dec
xchg
jp
movsl
pop
mov
sbbb
sbb
mov
out
jns
sbb
push
add
jmp
xchg
mov
fwait
mov
fxtract
imul
orb
orl
fists
ret
ss
mov
les
cmp
bound
cs
flds
adc
nop
andl
sub
adc
mov
out
je
nop
loopne
cld
sti
nop
das
push
sti
xchg
enter
aam
jae
mov
outsl
lcall
rorb
xlat
fimull
ret
add
lea
aad
cli
inc
mov
inc
jmp
sbb
ds
jno
outsl
inc
test
pop
insb
xor
or
xchg
das
lods
in
sbb
outsl
xchg
loopne
inc
xchg
loope
out
enter
xchg
xor
sbb
movsb
inc
mov
mov
out
and
sub
ficomps
push
jns
fidivrs
add
in
popf
push
mov
aad
imul
das
popf
stos
sti
aaa
mov
xchg
into
scas
dec
mov
vcvtsi2ss
bound
lret
adc
adc
pop
mov
add
lods
imul
jmp
dec
divl
jne
mov
adc
and
add
aas
pop
xchg
add
mov
lods
in
les
test
and
push
jnp
adc
clc
jns
scas
lock
imul
cli
cmpsl
mov
popa
adc
scas
add
and
cwtl
flds
nop
mov
fwait
rcl
add
xor
insb
in
leave
mov
sbb
arpl
pop
mov
scas
push
or
and
in
and
outsl
inc
mov
sub
and
cs
pop
xor
pop
dec
push
sbb
call
xchg
aaa
test
xchg
dec
outsb
mov
mov
and
cwtl
dec
add
push
fisubrl
inc
sbb
adc
or
mov
mov
xchg
dec
and
movb
adc
xchg
dec
sbb
jg
scas
aaa
cmp
lahf
or
sub
or
or
je
push
test
and
push
stos
mov
push
pusha
loope
mov
xor
icebp
lods
adc
cmpb
mov
leave
lcall
fnsave
mov
dec
and
mov
mov
repnz
in
xchg
pop
jecxz
cwtl
loop
add
int
push
sbb
sub
jmp
scas
ss
jbe
xor
sti
dec
and
mov
sbb
jns
add
andl
enter
xor
adc
mov
pop
je
outsl
push
sbb
ret
add
scas
cltd
push
call
xchg
inc
fisubrs
dec
loop
sbb
dec
mov
cs
mov
in
and
iret
inc
push
fstpt
aad
mov
lret
cmpsb
movsb
jmp
cmp
loopne
add
sahf
add
fcompl
inc
lcall
test
jns
jge
scas
or
insl
out
pop
adc
push
aam
cld
mov
add
mov
dec
ja
imul
loop
jo
addr16
xchg
mov
aaa
lahf
js
xchg
jp
call
and
push
daa
xor
stos
je
negb
or
mov
jo
mov
in
mov
lods
sub
xor
incb
adc
subl
gs
loop
inc
cmp
push
shll
add
lea
pop
or
push
fdivrs
cli
dec
inc
jmp
jno
out
aas
inc
sbb
test
cmp
fs
fisttpl
cmpsb
in
and
test
jne
sub
loopne
sbb
sub
sub
popf
out
mov
fildl
pop
repz
cld
fdivrs
mov
dec
mov
enter
js
dec
sbb
mov
jns
xchg
pop
sbb
fs
test
sbb
adc
rcrl
add
cli
dec
cmpsb
cwtl
fdiv
sub
jecxz
mov
repnz
or
mov
add
popf
xor
in
test
orl
sub
xchg
push
sub
mov
out
outsl
lods
inc
sbb
cmp
ret
outsl
mov
ror
stos
repnz
and
jg
inc
aaa
sub
das
addr16
inc
repnz
mov
add
adc
mov
les
push
dec
jl
xor
inc
jb
out
push
add
mov
jae
jae
or
in
aaa
and
jae
jo
loop
mov
push
or
jns
xchg
out
repz
mov
xor
hlt
leave
fwait
jno
jo
movl
and
mov
loope,pn
xor
sbb
icebp
std
push
dec
das
mov
sub
outsl
orl
inc
movsl
pop
aas
cmp
ja
adc
jno
mov
mov
xlat
lds
rorl
mov
adc
movsl
mov
push
pop
jge
nop
sbb
outsb
scas
subb
dec
xchg
bound
roll
dec
in
das
ds
je
xor
aaa
and
or
sbb
das
repz
cs
cmp
xor
imul
ret
jge
arpl
dec
push
xchg
cltd
mov
inc
in
jae
out
jbe
mov
out
mov
mov
out
mov
movsl
jns
pop
and
jo
add
rorl
fsubr
test
sahf
jecxz
andl
leave
dec
and
insl
ljmp
mov
xor
or
loop
out
loop
fsubrs
push
lret
je
and
inc
push
ss
ficompl
push
jbe
push
mov
fwait
adc
pop
fs
sbb
loop
pusha
ss
fwait
and
or
sub
call
cmpb
mov
test
hlt
ss
pop
int
and
in
cmp
mov
in
pop
clc
jle
xchg
ret
cli
mov
shll
in
jno
cmp
pop
or
jecxz
fidivrs
inc
and
xor
les
std
pop
movsb
cmpsl
scas
or
pop
imul
loopne
fnsave
mov
mov
add
add
push
out
pop
push
pop
lock
mov
push
mov
cs
push
std
and
out
jb
push
adc
push
rolb
sbb
push
mov
sub
outsb
xor
enter
xor
pop
mov
push
sub
xor
scas
jno
mov
pop
hlt
inc
popa
dec
fimuls
loop
paddb
jno
fldenv
bound
shll
mov
push
cmc
dec
popa
iret
int3
adc
loope
out
adc
mov
cmpsb
lds
sti
mov
sub
and
xchg
into
mov
and
add
xor
lock
test
testl
bound
and
xchg
mov
je
lods
add
ljmp
repnz
adc
rcrl
sbb
rclb
xchg
inc
popf
add
adcb
test
adc
xor
push
mov
mov
inc
ret
dec
inc
push
inc
xor
dec
fwait
ljmp
sbb
daa
ljmp
loope
les
xchg
fbstp
inc
sbb
mov
jns
inc
sub
xchg
bound
jno
pop
add
inc
notb
icebp
jmp
das
call
jno
xchg
xlat
mov
xchg
xor
jmp
cmp
pop
stos
test
sub
mov
jno
shll
popl
cwtl
inc
lsl
imul
push
orb
pop
mov
or
test
jnp
lcall
fists
in
dec
mov
ss
xlat
ret
pop
out
bound
movsb
jnp
test
jo
negb
fisttps
xchg
leave
jb
scas
pop
stc
fldl
aad
pop
xchg
pop
jo
flds
ret
dec
cmp
into
or
xchg
icebp
cld
jmp
sub
fdivs
in
or
js
adc
xchg
lret
mov
repnz
aad
loopne
jmp
jl
shlb
push
loopne
sti
das
mov
pop
fists
add
gs
fstps
repnz
rorl
mov
inc
iret
int3
mov
or
icebp
mov
lcall
fisubrs
orb
sbb
scas
repnz
add
ret
jbe
popf
or
push
push
js
inc
jns
mov
add
in
pop
push
insl
movl
ret
inc
mov
jecxz
push
cwtl
std
stos
jnp
rclb
vmovaps
mov
pop
xchg
jo
pop
xlat
push
jb
iret
loop
sub
popa
cld
in
loopne
xchg
adc
into
pop
push
cmc
xor
push
adc
sbb
or
stos
sub
aas
arpl
pop
sahf
in
shlb
push
adc
push
adc
xor
mov
lea
insl
std
inc
inc
je
mov
mov
dec
sbb
arpl
cs
dec
jae
aad
iret
cld
mov
mov
mov
orb
ret
pop
test
mov
enter
cmp
jmp
xchg
jle
scas
lods
cmp
or
dec
push
push
adc
cmpsl
test
and
pop
cmpl
fsubrl
sub
shrb
lds
jg
and
ficoms
push
mov
shll
mov
sahf
shr
xchg
rcl
jle
mov
loope
xlat
sub
insb
xchg
imul
jno
das
xlat
loope
fistl
imul
fbld
sti
mov
push
push
inc
mov
leave
movb
out
test
loopne
jmp
sub
sbb
mov
aaa
andb
add
jnp
xor
xchg
movsb
mov
xchg
sub
and
jle
mov
jb
sarb
sbb
stos
adc
and
imull
jns
xor
repnz
cs
add
rol
in
sbb
xor
jle
mov
sahf
mov
push
test
mov
inc
cmpsl
mov
in
push
insl
cmp
arpl
push
test
lret
ficompl
cmp
aad
out
loop
xor
and
push
int
bound
mov
sti
sub
movsb
jne
cld
adc
adc
mov
and
cld
loop
add
aad
mov
pop
ds
divb
dec
in
mov
cmc
add
cltd
add
xchg
rcrb
fidivs
hlt
sbb
in
aaa
sub
hlt
mov
repz
xor
test
dec
std
sub
cwtl
loopne
push
sub
inc
rcr
cmc
xchg
in
jnp
mov
cmp
test
out
sbb
or
ret
das
mov
sub
mov
insl
xchg
push
pop
orl
fucomi
mov
dec
pop
jns
push
push
imul
xlat
leave
in
loopne
movl
shrl
mov
pushf
in
push
sahf
enter
jecxz
mov
mov
bnd
incb
jne
jp
sub
mov
test
sarb
adc
push
mov
pop
and
ret
jp
pop
movsl
nop
mov
dec
es
imul
or
dec
sti
and
mov
pop
jno
push
adc
mov
inc
mov
xor
xchg
sub
stos
cwtl
call
xor
inc
neg
xchg
sub
pop
push
movsl
jnp
pop
jne
cmp
cmp
mov
mov
jns
or
inc
insl
int3
sbb
jg
ljmp
mov
xchg
andl
sub
sahf
leave
ret
icebp
daa
pop
js
scas
movb
xor
push
loope
push
in
sub
insl
sbb
jns
push
cmpsb
adcl
add
mov
cltd
pushf
notb
jnp
loopne
rorl
lar
fistl
lret
xchg
test
mov
mov
mov
roll
and
mov
mov
and
dec
xchg
lods
ljmp
out
dec
mov
cmp
mov
sbb
add
test
inc
clc
lods
shll
les
sbb
xchg
lock
scas
fwait
dec
jp
inc
or
push
dec
mov
mov
cmp
mov
mov
int
call
shlb
hlt
scas
test
or
pushf
mov
mov
jl
lcall
cwtl
mov
adcb
pop
aas
outsl
call
jbe
xchg
pushf
lods
add
cmp
mov
aas
aaa
lahf
push
mov
repz
outsl
mov
dec
mov
push
shrb
pop
icebp
aad
lret
sub
in
out
pop
cs
and
mov
cmp
popf
shrl
dec
out
push
or
iret
insb
dec
insb
insl
popf
mov
inc
push
ret
xchg
addr16
loopne
mov
sbb
loope
nop
pop
out
xchg
mov
repnz
push
push
mov
inc
pop
sahf
es
arpl
sbb
mov
add
scas
nop
lods
popl
inc
inc
or
stos
test
mov
aaa
rorl
insb
pop
nop
in
outsl
sub
popa
mov
dec
sub
pop
lret
mov
and
pop
mov
mov
aaa
adc
mov
ja
subb
cmp
inc
loop
push
jmp
into
and
subl
gs
cltd
pop
in
cwtl
rclb
test
mov
mov
mov
xor
xchg
imul
xor
sub
cld
xlat
xor
pop
push
mov
fistpl
push
aaa
pop
imull
cli
popf
mov
sub
out
ss
fdivrl
jecxz
add
insl
push
lret
ja
and
out
add
out
jnp
add
cmp
scas
adc
and
sbb
in
inc
loop
out
jp
inc
xor
or
inc
enter
cmp
jns
aaa
lret
xor
or
and
and
fucom
adc
and
and
adc
pop
aaa
test
movsb
shlb
sbb
out
into
stc
push
pop
mov
mov
ljmp
bound
dec
test
cmp
in
imul
dec
dec
and
sub
fistps
je
pop
jp
lea
aas
mov
loope
add
insl
in
cwtl
stc
cmp
inc
add
dec
mov
nop
xor
in
cwtl
je
add
insl
dec
test
sbb
out
iret
mov
in
xor
inc
sbb
and
dec
nop
daa
ljmp
and
adc
push
cli
inc
aad
loope
int3
xchg
mov
sbb
or
mov
arpl
adc
push
int3
adcl
in
andb
sub
lret
int3
adc
dec
daa
lcall
out
lea
jmp
std
xchg
subl
mov
rcrl
or
sub
mov
jmp
push
cmp
push
aam
cli
jnp
imul
pop
adc
out
and
rorb
sbb
xchg
popf
sub
jne
test
dec
xor
mov
cmp
jmp
fnstsw
add
aam
js
aam
jle
jnp
inc
outsb
sahf
xchg
je
icebp
push
push
pop
jge
mov
out
adc
scas
iret
adc
jp
push
mov
ja
std
mov
fadds
pushf
in
out
mov
inc
mov
sub
adc
xchg
cmp
mov
stos
and
testl
mov
cmp
fs
ret
call
jns
mov
hlt
add
sub
outsb
iret
subl
pop
lea
jg
mov
xchg
sarb
sbb
adc
sbb
cmpsb
add
int3
xor
iret
clc
push
cmp
ror
es
pop
stos
sub
dec
add
xor
mov
das
int3
and
adc
in
stos
int
inc
inc
xor
icebp
aaa
lret
test
adc
cld
sti
lahf
xlat
sbb
repnz
inc
fstp
cltd
lea
jmp
pop
lret
mov
das
ss
add
cltd
mov
inc
scas
insl
add
insb
rcl
and
imulb
sub
sub
jp
or
leave
and
add
out
pop
aas
push
xchg
jno
mov
sub
std
lcall
ficoms
aad
push
push
fldenv
fsubrl
sbb
cmp
divb
shlb
lods
jo
sbb
sbb
push
mov
jp
loopne
jle
mov
mov
rol
loope
ds
out
xchg
loope
jp
sahf
add
mov
out
jne
outsl
or
jmp
mov
int3
dec
mov
add
rorb
sbb
daa
xchg
call
adc
stos
push
rcrl
sub
mov
mov
ds
cmp
add
iret
mov
mov
adc
int3
mov
jb
cli
mov
lahf
fadd
xlat
cmp
into
les
pop
adc
push
jns
xor
push
aad
fxch
rolb
cmpsl
pop
out
sub
call
pop
call
gs
mov
sbb
jb
xor
jmp
or
xlat
pop
jae
cmp
and
xchg
out
jg
lock
repnz
adc
fiadds
jecxz
pop
scas
or
in
mov
rcrl
lods
imul
dec
enter
hlt
adc
adc
or
xor
jnp
xor
jo
movaps
push
or
push
cmp
in
or
inc
xor
les
xor
dec
pusha
adc
in
jae
or
xor
test
lock
testb
push
dec
aaa
push
mov
xor
outsb
sub
sarl
push
push
movsb
jae
jge
lods
inc
mov
sbb
movsb
add
mov
clc
loope
arpl
mov
add
inc
movsb
jmp
and
gs
movsl
jmp
adc
icebp
in
xor
fcomps
dec
into
inc
mov
es
add
iret
std
dec
mov
xchg
gs
outsb
scas
push
and
inc
in
arpl
js
sbb
or
dec
cmc
mov
jmp
and
mov
jmp
cmp
sub
fsubs
cmp
mov
dec
ja
jb
outsb
fadd
xchg
aas
jp
xor
std
out
lock
mov
test
lock
xchg
aad
out
xchg
jmp
out
fnsave
pop
inc
lds
and
inc
pop
test
cmpsb
lds
push
cmp
insb
and
mov
inc
add
add
add
xchg
std
xchg
stos
mov
ret
arpl
xor
dec
mov
jns
insb
push
mov
ja
cmc
fcomps
out
repnz
out
std
hlt
repnz
or
cmp
cld
mov
pop
dec
pop
scas
daa
jne
int3
ret
daa
inc
int
out
mov
rcll
pop
pusha
aam
add
ss
ds
popf
xor
dec
arpl
jne
test
sub
or
push
mov
lcall
scas
mov
mov
test
lcall
into
frstor
adc
dec
int3
shrl
mov
lcall
addb
jge
jbe
dec
rolb
addr16
jb
inc
in
jmp
adc
test
jp
addr16
dec
and
test
imul
adc
and
or
mov
fisubl
mov
xchg
pop
xlat
aad
movsb
mov
dec
mov
mov
lods
leave
or
adc
dec
cmpsl
sub
jle
xor
outsl
stos
rcr
in
mov
mov
mov
fmuls
push
or
inc
inc
pop
fnstenv
xor
push
sbb
mov
pop
cwtl
pusha
ds
push
out
xchg
in
lods
jge
xchg
pop
cmp
jns
fucom
jne
mov
in
inc
out
fmull
imul
movsb
dec
sbb
sbb
pop
lahf
js
xor
out
pop
sub
cmc
leave
lret
dec
out
adc
sub
pop
rol
cmpsb
lahf
xchg
cld
stos
jecxz
cs
jge
std
imul
pop
pushf
dec
mov
pop
or
into
das
daa
call
mulb
lea
dec
cmp
shll
sarl
pop
mov
ret
ja
mov
testb
stc
mov
icebp
jb
cmpsb
jge
test
stos
mov
inc
mov
ss
call
sbb
dec
popf
mov
adc
jp
cmp
or
notl
insl
xlat
inc
pop
xor
icebp
mov
repnz
sub
lret
imulb
pop
or
mov
pop
stos
sbb
ret
xlat
mov
ja
push
mov
and
out
push
cmpb
jg
movsb
adc
daa
cmp
xchg
insb
push
out
or
mov
mov
xchg
jbe
add
or
aad
mov
out
add
arpl
mov
int
jo
jecxz
xor
scas
mov
arpl
xchg
mov
pop
flds
adc
inc
and
and
mov
ljmp
pop
jge
loope
jle
inc
das
cmp
jmp
shlb
scas
rcll
sti
mov
xchg
pop
push
arpl
addr16
jo
jl
push
push
cmc
pop
int
push
mov
mov
loopne
xchg
mov
test
xor
and
cmpsl
aaa
mov
dec
in
sub
pop
cmp
aaa
pushf
mov
iret
scas
and
jno
cmp
sbb
scas
mov
daa
xor
adc
lods
rcll
aad
push
inc
sbb
or
xchg
push
sub
xor
sahf
sbb
push
ljmp
pop
repnz
test
das
jge
insb
fnstcw
sub
lods
pusha
sub
clc
inc
cmc
jp
add
int3
lock
cli
sbb
les
lret
out
pusha
lds
dec
sbb
add
mov
mov
push
fdivrl
cmpsb
pop
xchg
xchg
pop
mov
cmp
sub
mov
xchg
sbb
cmc
add
mov
adc
mov
sti
xchg
cmc
fbstp
adc
dec
and
and
int3
sub
dec
jbe
adc
int3
js
ret
outsb
out
sahf
sbb
int3
cli
sbb
sub
sub
jne
ret
nopl
or
sub
pushf
fldl
dec
cmp
stos
push
pop
jno
inc
sti
jb
xchg
mov
jnp
lods
mov
jne
mov
test
jnp
es
pop
or
mov
pop
push
pop
xor
mov
push
or
test
shlb
xor
or
dec
out
cli
rcrl
push
adc
push
jne
xchg
pop
fwait
jnp
push
push
jmp
add
pop
fcoms
das
shl
rdmsr
cmp
inc
cld
in
subb
repnz
fisttps
mov
sbb
cmpsl
dec
lahf
and
mov
add
sahf
insl
out
orb
push
int
jg
xchg
jb
andb
push
mov
pop
jae
int3
xchg
pop
enter
lret
dec
dec
or
subl
push
xor
xchg
pop
mov
rclb
add
xor
mov
push
int3
pop
add
dec
pusha
mov
pop
xchg
out
or
xchg
clc
cmp
and
and
ret
jo
divl
aam
daa
cmp
rorl
call
scas
jmp
mov
mov
rcrb
or
mov
xor
xchg
inc
pop
mov
push
mov
leave
stc
inc
fs
bound
out
lret
sbb
dec
cli
push
clc
ficoml
cmp
fisubl
and
inc
cmp
scas
cld
push
sbb
pop
and
jb
loope
divb
pop
jl
sub
sbb
cmp
jbe
pop
fsubs
inc
loop
mov
mov
out
mov
pop
iret
int
into
push
sbb
arpl
divb
jmp
xor
shrl
jns
pusha
aas
xchg
lock
cmp
jns
inc
jmp
scas
clc
mov
sbb
jge
mov
shl
mov
jg
cmpsb
je
dec
std
xchg
cltd
daa
ret
je
push
pop
scas
addr16
imul
imul
cs
push
inc
cld
fstl
xchg
or
push
repz
aaa
insb
push
or
fisttpl
or
outsb
ljmp
jne
mov
or
jge
rcr
adc
add
push
sub
jmp
inc
xor
add
sbb
imul
mov
leave
mov
mov
dec
cmpsl
ss
notb
mov
bound
cmp
mov
add
push
mov
add
or
xor
addr16
cmc
add
jp
cmp
mov
clc
and
sbb
push
sbb
push
cmp
cmp
cmp
cld
xor
sahf
lahf
push
cli
jl
hlt
cs
test
xor
sub
sarl
push
xchg
loope
ret
arpl
fs
das
push
iret
mov
outsl
pop
inc
push
jp
mov
xlat
in
mov
pop
lret
and
shll
les
cmpsl
movsb
ret
jle
xor
bound
xchg
fstpl
jp
test
ds
jno
mov
sbbl
xor
lcall
push
cli
xor
iret
sub
inc
aam
push
mov
jo
das
inc
mov
int
xor
out
push
dec
inc
adc
xchg
adc
sbb
inc
mov
cmpsl
outsl
mov
and
xor
add
cmp
jl
jp
shrb
les
mov
mov
mov
xor
mov
pushf
lahf
dec
lret
pop
rorl
es
sub
pop
out
cmc
or
cmp
arpl
sub
mov
jle
bound
scas
dec
popf
mov
das
and
xor
sbb
adc
jnp
or
lock
pop
aad
lahf
sbb
inc
aam
push
add
and
lea
inc
jg,pn
cs
cli
xchg
xchg
sbb
xchg
fistpll
adc
jp
mov
dec
test
push
test
mov
cmp
mov
stc
mov
add
mov
in
add
bound
cmc
sbb
out
push
fimull
outsb
and
cld
pop
das
movsl
mov
add
loop
scas
hlt
les
fisubl
dec
jl
inc
icebp
mov
cmp
ret
push
mov
aad
test
add
jne
jb
test
jmp
sub
test
pop
outsb
das
xchg
testl
adc
cli
xchg
cmp
aas
into
and
mov
push
adc
daa
cmp
mov
or
sub
mov
movsl
cmp
fmuls
push
mov
push
mov
aam
lds
fnstenv
jne
stos
fldenv
pop
pop
xchg
test
idivb
adc
lea
lods
push
xrstors
jmp
push
mov
aas
sub
push
sbb
in
movsb
insl
adc
loope
inc
pop
ds
or
dec
pop
pop
out
xor
test
and
popl
pushf
xchg
inc
loopne
je
dec
aaa
push
out
std
movsb
les
inc
and
lock
je
int
popf
stos
aam
xchg
jnp
dec
inc
or
sbb
xor
mov
and
pop
cmc
jns
arpl
scas
cmpsb
sbb
shll
cmp
lret
xchg
sti
add
out
int
int3
mov
in
scas
mov
dec
sub
stc
cmp
arpl
mov
ss
fimuls
pop
sarb
cltd
loop
and
pop
mov
loop
cs
and
loopne
cwtl
ljmp
call
fst
xchg
shrb
lods
loop
std
rorl
out
lea
sbb
inc
mov
loop
ja
cmp
stos
adc
sub
adc
in
xchg
jle
leave
dec
bound
cmc
mov
jno
aad
movsl
mov
adc
mov
cmp
and
inc
ret
les
jg
rorl
enter
insl
scas
shl
sub
jp
scas
inc
xchg
adc
lock
push
std
mov
movb
cmc
jnp
xchg
add
adc
fsubrs
mov
popl
adc
sahf
xlat
cmp
xchg
add
lahf
pop
insb
xor
js
inc
cli
push
lds
mov
imul
pushf
cmp
int
jle
lock
rclb
add
pop
scas
cmpsl
dec
enter
dec
sti
mov
rcr
sub
aaa
ja
mov
mov
out
dec
shrb
loopne
add
jge
int
mov
jle
push
xchg
test
enter
shl
stc
cld
pop
lods
daa
add
push
dec
sub
push
jg
andl
pop
cwtl
icebp
movsl
xchg
out
test
aas
add
lcall
inc
lret
sbb
push
jp
push
add
gs
les
imul
push
or
test
push
cwtl
jmpw
repnz
stc
sub
test
ret
mov
ffree
fbstp
mov
data16
mov
je
icebp
cmp
stos
sub
dec
push
rcr
lds
cmp
lret
stos
adc
js
adcl
lret
cmp
out
xor
repnz
jbe
hlt
adc
add
cmp
sbb
or
xor
stc
pushf
inc
mov
stos
pcmpgtw
fcompl
adc
lds
sub
cli
enter
pop
jae
movsb
mov
mov
std
ret
pop
addr16
pop
cmpsb
addb
call
ljmp
xor
dec
imul
or
outsb
push
dec
jmp
sbb
jno
pop
loop
aad
pop
sbb
hlt
xchg
pop
jg
rorl
cmp
xchg
in
sbb
push
int3
push
sbb
iret
rcrl
xchg
inc
xor
jg
xchg
daa
or
sub
xchg
dec
inc
jle
add
jo
fs
add
xor
mov
lret
repnz
and
lock
cltd
push
dec
xchg
in
dec
aaa
in
adc
clc
pop
sbb
fwait
lcall
icebp
add
jnp
pop
jns
push
or
add
xor
and
adc
mov
cltd
scas
shll
sbb
jbe
sbb
shrb
mov
pushf
mov
lock
push
mov
pop
push
jmp
data16
mov
mov
int
dec
loope
inc
mov
xor
mov
inc
lret
mov
test
scas
and
test
fsubrs
push
sbb
or
cmp
ret
inc
sub
jp
das
addr16
filds
out
mov
test
cmc
pop
adc
pop
mov
dec
fimuls
ffreep
int
repz
mov
xchg
fcmovnb
or
sub
sbb
pop
or
aad
pop
mulb
stos
movb
fisubrs
loope
mov
jl
or
mov
pop
pop
dec
imul
or
mov
xchg
sahf
jbe
adc
add
fisubl
sar
jns
xor
outsb
sbbb
test
movsb
adc
inc
mov
or
cmp
dec
call
out
dec
adc
into
orl
adc
xlat
mov
enter
jb
add
icebp
xlat
ret
inc
ret
mov
mov
rcl
mov
loopne
inc
in
idivl
ret
clc
ja
negb
sub
jb
jg
cs
pop
out
push
cmpsb
pop
call
jp
and
jl
std
outsb
scas
lret
std
or
xchg
mov
mov
jae
or
insl
inc
or
int
mov
repnz
mov
push
shll
push
mov
jo
rcrl
cld
jno
outsl
mov
in
ljmp
das
mov
pop
xorl
decb
in
iret
nop
push
outsb
movsb
dec
cmp
movsb
mov
mov
lcall
sub
push
ljmp
or
test
mov
cli
test
test
adc
fwait
xchg
pop
stc
mov
mov
sub
arpl
pop
mov
jecxz
test
and
leave
lock
loope
dec
xor
xor
rcrl
and
add
jns
call
mov
scas
lahf
movl
mov
lock
popf
jb
push
mov
icebp
int
rorl
sub
mov
mov
nop
lods
xchg
into
lahf
out
sbb
jecxz
xor
nop
arpl
fistpll
lock
mov
xorb
xlat
cmp
sbb
les
arpl
xor
mov
pop
and
sbb
rcrl
xor
push
mov
pop
inc
rcrb
cmp
xorb
fdivs
decb
in
iret
rorl
inc
inc
fcoms
iret
iret
pusha
rcrb
or
and
mov
sbb
dec
push
ja
xchg
xchg
out
adc
sbb
jecxz
sbb
jle
aaa
pop
xor
xor
ljmp
sarl
dec
push
jo
pushf
push
imul
sti
arpl
lret
enter
mov
jge
mov
pop
cwtl
mov
lret
sub
jnp
dec
icebp
lret
sbb
test
xor
outsb
aaa
stc
dec
inc
shl
aas
cmp
mov
orl
cmp
xor
mulb
pop
or
sbb
mov
xor
test
outsl
int
movb
test
cld
lds
dec
xchg
sub
push
into
ret
mov
jg
shrb
cmp
call
dec
sub
ret
std
mov
mov
sbb
sub
lock
ficompl
adcl
pop
js
mov
push
adc
push
pop
dec
and
mov
aaa
sbb
jns
add
popf
test
scas
sbb
es
jmp
xlat
mov
adc
inc
test
jo
or
adc
jbe
sub
rcl
pop
xor
xlat
mov
mov
test
pop
pop
pop
outsl
fists
inc
mov
and
inc
repz
imul
and
movsb
mov
popl
clc
inc
sub
cli
fcomps
movsl
cmp
jp
lods
nop
subb
cmp
shll
lea
mov
insb
push
xor
mov
jmp
fsubrs
mov
daa
mov
jg
inc
add
jnp
cld
sub
les
cld
cs
ja
xchg
or
mov
loop
mov
jl
dec
jmp
ljmp
sbb
mov
adc
repz
mov
loop
fistl
push
repnz
cmpsb
inc
clc
xor
imul
ret
pcmpgtw
lods
movsb
jg
fbld
jnp
cmp
aaa
mov
adc
xchg
mov
cwtl
loop
mov
mov
cmpsb
mov
je
jl
push
cltd
dec
or
and
f2xm1
fildl
and
rolb
imul
push
shrb
call
or
mov
cmp
daa
mov
daa
in
or
inc
nop
pop
aam
mov
lcall
insb
aad
jb
gs
sub
sbb
lret
cli
cmpsl
pop
pop
gs
stos
bound
mov
jmp
jmp
adc
es
mov
mov
mov
mov
pop
rclb
mov
jge
ret
sbbl
push
in
inc
in
cmp
mov
inc
adc
or
add
mov
mov
xor
enter
fildll
inc
push
xchg
pop
shl
adc
adc
mov
fisubs
mov
test
jo
sbb
dec
leave
push
xchg
scas
cmp
js
arpl
inc
je
sbb
aam
push
dec
hlt
faddl
mov
in
mov
mov
lods
mulb
lret
adc
cs
stos
jno
std
push
pusha
in
stos
pmaxub
xchg
mov
sbb
daa
cmc
push
repz
jae
add
push
insb
out
pop
lds
add
sbb
and
loopne
jns
mov
xor
popf
ror
or
xchg
nop
jb
sub
or
mov
insb
daa
sti
xlat
sub
jnp
cmpsb
jl
js
insb
ljmp
rcrl
add
adc
gs
and
addr16
cltd
sub
lds
and
rcr
cmp
cmp
push
and
mov
and
in
aam
xchg
cs
push
inc
mov
in
sub
psllq
ss
cmp
pop
rcrb
jp
bound
and
push
sti
sbb
push
mov
lock
add
push
hlt
cmpsb
jg
jae
add
and
shll
aas
int
es
sbb
std
xchg
cmpsb
cmpsb
push
xchg
sbb
dec
adc
js
push
dec
dec
xor
add
cli
or
insb
stc
inc
or
mov
mov
jns
jb
les
jecxz
mov
out
inc
xchg
xor
or
sbb
rorb
mov
pusha
sub
inc
push
add
and
push
ror
jecxz
inc
and
pop
push
test
mov
sub
or
dec
xchg
das
mov
mov
mov
mov
in
call
cmpsb
jl
cmp
pushf
adc
mov
pop
test
leave
pop
bnd
push
adc
insb
mov
sub
pop
icebp
cmpsl
push
popl
fcoml
repz
aas
insb
cmp
ja
xor
aam
arpl
pop
out
test
xchg
and
ss
dec
pop
mov
sbb
clc
adc
fldcw
addr16
aad
sbb
test
and
cmp
mov
cld
ss
sbb
lods
stc
ljmp
pop
rcl
out
adc
out
xor
out
andl
xor
ficomps
shrl
fwait
xchg
lock
jbe
add
repnz
test
push
xchg
sbbl
into
clc
jb
xor
js
dec
insb
sub
mov
mov
add
or
xor
call
inc
fs
pop
fdivl
inc
inc
enter
mov
imul
push
xchg
jl
scas
rcr
cmp
dec
jecxz
aaa
mov
and
in
xor
adc
adcl
push
xchg
enter
outsl
adc
rcr
jecxz
inc
or
mov
stc
or
aad
dec
jne
out
stos
sbb
and
sub
mov
aaa
lods
mov
sbb
and
repz
jl
xor
pop
push
loop
arpl
xchg
cs
lcall
fdivr
cmovge
mulb
loope
dec
cmp
lods
lahf
in
into
sbb
in
sub
gs
jbe
mov
xchg
xchg
hlt
lfs
fwait
dec
push
cmp
sbbl
movl
sub
in
or
mov
mov
add
fisubs
jb
push
sub
outsl
xor
loop
shr
mov
or
dec
mov
adc
mov
and
adc
mov
xchg
sahf
scas
or
dec
incb
cmp
addr16
pop
addr16
mov
inc
mov
add
pushf
dec
sbbl
nop
mov
adc
or
and
dec
mov
into
sbb
mov
push
les
mov
imull
rorl
xlat
mov
call
lock
je
pop
sbb
popa
xor
pusha
sbb
mov
je
mov
mov
mov
rorb
dec
out
mov
or
std
stos
cmp
adc
mulb
jb
and
int3
ds
adc
leave
push
jle
aaa
scas
sti
in
rolb
test
out
or
stc
xchg
pop
test
pop
jle
lods
shll
sbb
sti
mov
or
repnz
stc
shll
aad
xchg
push
mov
sub
leave
cmp
mov
mov
dec
push
hlt
mov
xor
cmc
push
loope
jmp
repnz
jp
stc
sbb
pop
push
adc
iret
gs
sarl
mov
mull
dec
fwait
aas
sbb
mov
add
sar
in
aam
jmp
sub
pop
in
inc
stos
icebp
fsubrl
scas
push
outsb
jl
scas
mov
insb
and
mov
pop
pop
loope
inc
jecxz
aad
jmp
sub
mov
es
or
stos
scas
lock
jbe
sbb
cmp
idivl
add
call
jb
sarb
sub
dec
adc
cmc
test
push
xchg
cmp
or
imul
gs
pop
jle
add
in
inc
lea
aad
icebp
loope
or
aaa
mov
mov
mov
movsb
pushf
and
jbe
test
out
push
mov
loopne
cmp
xor
test
jb
and
aaa
ljmp
bound
dec
jnp
dec
pop
jne
ss
push
and
mov
inc
leave
sbb
mov
mov
xchg
aam
pop
cli
xor
iret
inc
testb
hlt
xchg
xchg
or
in
fists
xchg
add
pop
xchg
loopne
cmp
lods
outsb
xchg
or
fistpll
out
inc
cld
pop
test
sub
sub
jp
in
mov
roll
adcl
and
xchg
sub
addl
sub
jnp
sbb
ss
mov
xor
pop
test
push
add
insl
pop
mov
mov
and
jo
rcr
ss
adc
push
push
xor
pusha
push
cwtl
addr16
ljmp
rol
mov
lcall
dec
insb
movsb
out
pushf
push
mov
gs
mov
jne
shrb
jb
cmp
int
push
sbb
dec
movb
cmp
xor
insb
into
in
sbb
jae
sub
xchg
scas
loopne
cld
jmp
pop
jge
lds
mov
jae
sbb
or
rorb
add
cmpsb
sbb
sub
scas
xchg
fcmovu
mov
lea
and
inc
negl
push
dec
je
xor
mov
daa
prefetch
movl
sbb
out
mov
jmp
pop
popa
je
je
sbbb
or
stos
mov
cwtl
dec
or
ljmp
cmp
and
xlat
xchg
adc
jns,pt
loopne
xchg
mov
repnz
mul
push
jns
out
jb
cmpsb
adc
ret
add
clc
sti
or
jecxz
adc
stos
sub
pop
add
xor
mov
notl
xchg
ja
roll
xchg
jnp
mov
push
pop
int
xor
rcr
stos
scas
xor
es
fwait
cld
pop
rolb
lock
insl
cmp
stc
bound
jae
insl
jns
int3
cli
movsb
aad
insl
sub
enter
xchg
fdivl
pushf
sub
fwait
aad
jle
out
addl
or
call
mov
gs
jle
subb
xchg
push
jl
sbb
lcall
dec
lds
pop
or
std
jp
jne
adc
push
and
nop
inc
push
dec
daa
fcmovu
add
insl
mov
aaa
jg
lahf
inc
movsl
idivb
mov
mov
gs
sahf
xor
push
fists
cmp
popf
stc
adc
cs
cmp
and
jmp
xchg
js
stos
enter
out
mov
xor
subb
jecxz
in
loopne
mov
dec
nop
mov
adc
sbb
pop
pop
popa
pop
and
jbe
lret
dec
ret
push
sbb
xor
pop
inc
xchg
xor
pusha
rorl
pusha
jge
xchg
bound
fildl
or
xchg
insl
push
inc
loope
and
lcall
lret
inc
dec
inc
rcr
add
and
lcall
mov
push
mov
mov
lret
sbb
xorb
xchg
cmp
cltd
mov
leave
mov
mov
pop
cltd
fstl
mov
out
mov
adc
cmp
pop
xchg
cmpsb
add
xor
sub
ficoms
adc
subl
sub
imul
inc
clc
in
mov
notl
jbe
cmpsl
jge
stos
loop
add
sbb
enter
scas
js
sub
rol
movsl
and
and
dec
push
xor
movsb
push
into
in
adc
or
loop
xor
jecxz
jo
dec
cmp
add
lock
sbb
cmpsl
or
movsl
pushf
cmp
pushf
mov
shrl
icebp
jl
or
jl
adc
out
mov
pushl
adc
xchg
insl
test
int3
jmp
and
pop
mov
shll
dec
mov
dec
xchg
adc
cmc
gs
sbb
lods
sub
aam
out
xor
fs
test
mov
inc
mov
aas
adc
outsl
pop
popf
xchg
ret
push
lea
sub
mov
xor
pushl
and
sub
enter
andb
xchg
mov
cmp
mov
jno
sub
test
cmc
jne
test
pop
jo
out
xchg
mov
sbb
ret
xor
cwtl
mov
insb
push
imul
repz
xor
or
push
daa
movsb
jecxz
sbb
imul
ret
mov
addr16
push
xchg
pop
rcr
add
daa
sub
sub
aam
and
fmulp
cmp
xor
insl
shr
sbb
sub
stos
mov
lcall
movsl
sbb
pop
mov
lret
inc
adc
push
adc
adc
movsl
mov
fiaddl
mov
or
and
aad
push
arpl
stc
sub
movsb
sub
pop
jns
popaw
insb
mov
rorl
pop
push
cmp
ss
sahf
int3
cmp
in
aad
filds
fcom
pop
ljmp
jbe
push
jmp
mov
xor
xor
bound
lods
mov
fnstenv
or
jge
mov
dec
pop
pop
scas
jg
mov
sub
adc
pop
pusha
movsb
sti
lods
jecxz
push
inc
rolb
scas
dec
std
adc
mov
popa
mov
mov
cmc
out
xchg
lcall
call
sarl
or
cli
fistl
ret
pop
cld
inc
imul
movsl
shl
mov
add
cli
int
mov
and
aad
sbb
int
movsb
sti
add
sbbb
movsl
orl
loope
add
add
in
or
push
lcall
test
jl
fstl
mov
outsl
ret
dec
fldt
push
sbb
and
push
fidivrs
dec
fimuls
iret
inc
das
cli
cmp
sbb
jl
lods
sbbb
pop
popa
lock
test
aam
aas
pushf
xor
dec
jo
in
xor
adc
xor
int
fcmovnbe
and
add
xor
sbb
cmp
jl
scas
lods
mov
sti
cmp
jne
mov
pop
out
push
call
xor
pop
jle
lods
push
js
xor
loope
pop
mov
cmc
xlat
bswap
xchg
hlt
jns
or
dec
xor
adc
loop
imul
adc
mov
jno,pn
mov
dec
xor
out
push
repnz
ret
jl
mov
movsl
push
mov
and
mov
cld
jge
fmuls
or
imul
and
push
mulb
das
enter
movsb
push
repnz
scas
pop
daa
fbstp
icebp
push
cmp
cli
jb
push
inc
adc
loop
stc
add
sarl
jnp
xchg
loopne
mov
push
xchg
add
jno
mov
xchg
outsb
loope
xchg
pop
sbb
and
jecxz
dec
data16
fiaddl
mov
addr16
movsb
leave
out
mov
dec
sub
inc
and
add
jle
iret
testl
cmp
xchg
lahf
add
shrl
inc
lcall
ret
aas
mov
mov
jmp
dec
popa
mov
shlb
cmpsl
add
mov
xchg
push
or
out
jecxz
jle
pushf
addr16
push
push
jmp
and
imul
mov
push
lret
inc
push
pop
push
push
adc
lret
pop
popf
jb
xchg
xchg
out
cmpsb
xchg
pop
rcr
imul
stos
push
add
cli
pop
divl
loopne
mov
in
je
cli
jns
nop
leave
jns
rclb
lock
shlb
inc
lds
scas
dec
in
cmp
inc
imul
mov
addl
test
pop
pop
lea
jno
ret
test
push
sbb
stos
int
jl
outsl
lea
ret
jno
xchg
mov
mov
movsl
cmp
add
push
jmp
in
dec
dec
add
in
dec
rcrl
and
cmp
pop
mov
cmpsl
iret
mov
add
lcall
xchg
adc
push
adc
test
ja
push
push
in
pop
sbb
daa
iret
imul
xchg
jmp
lods
jbe
jns
jns
scas
cwtl
sub
movsl
cmpsl
scas
sub
sub
sahf
sub
ja
sub
repz
into
and
sahf
outsb
inc
cmp
addb
jg
sbb
push
cmc
loopne
jmp
and
fs
not
push
inc
in
mov
mov
pusha
cmp
sub
and
and
dec
and
mov
sahf
fbld
cli
sarb
stc
sbb
mov
test
and
mov
jo
jno
sbb
popa
jmp
scas
scas
lret
out
dec
and
sub
das
call
pop
lahf
insb
xchg
pop
out
pop
pop
xchg
dec
sbb
dec
rcr
or
insb
inc
mov
adc
dec
push
test
sahf
pop
popf
rorl
outsb
mov
mov
xchg
pop
loope
leave
out
enter
sub
jnp
imul
fldcw
jbe
lds
cmp
cmpsl
or
arpl
jmp
ja
jno
pop
sbb
movsb
leave
dec
lret
xor
lcall
mov
mov
scas
fsts
lret
testb
xor
dec
push
inc
adc
cmpsl
adc
adc
in
addr16
pop
pusha
fcmovnbe
into
outsb
and
and
scas
sbb
aad
push
frstor
out
and
mov
mov
adc
cmpsl
jno
jl
rorb
call
push
test
arpl
dec
jno
fcoml
dec
and
call
leave
and
cmp
adc
and
pop
cmc
jle
adc
cltd
push
or
jecxz
adc
testb
jmp
movsb
inc
xor
adc
ja
inc
mov
fldl
adc
imul
popf
stos
cmp
or
scas
sub
lahf
dec
loop
arpl
pop
ljmp
jp
cmp
inc
mov
in
fldpi
imul
gs
mov
and
std
ljmp
cwtl
push
or
pusha
cli
push
pop
movb
sub
dec
and
inc
jle
dec
clc
repnz
or
test
ret
ss
cli
mov
pop
sbb
cmp
cmp
push
jno
pop
sbb
xorl
pushf
movsl
mov
aaa
test
sarl
mov
int
mov
loope
fldt
lret
dec
add
leave
outsb
inc
lahf
test
outsb
insb
fstps
out
rcr
out
xchg
push
adc
aad
sub
js
add
pop
xchg
pop
fldcw
fs
jbe
cs
shll
xchg
hlt
repnz
sbb
sub
push
lahf
dec
inc
div
insb
int
out
jmp
movl
leave
pop
cld
outsb
cwtl
mov
adc
shll
subb
test
ja
xchg
pusha
popa
cmp
ljmp
xor
and
ja
sbb
lods
repz
jp
cmp
xor
lods
push
mov
out
inc
fists
out
adc
jae
pop
out
mov
cmpsb
or
je
loopne
mov
add
cli
mov
fs
insb
dec
mov
pop
jle
jecxz
pop
rorb
loopne
mov
sub
aam
and
or
xor
popa
andb
pop
pop
js
sub
and
incl
jo
les
aas
outsb
pop
cmp
lock
fildl
or
push
cmpsb
lods
mov
mov
neg
mov
rorl
sub
sub
and
mov
dec
enter
fwait
sarb
jg
and
mov
lahf
jns
dec
sub
mov
ret
ss
lock
test
stc
pop
mov
insl
test
xchg
in
xchg
inc
sub
lret
adc
rclb
push
mov
hlt
cmpsb
aas
cmpsb
mov
and
shr
cmc
pop
fwait
push
ds
jmp
in
and
fwait
cmp
jle
fldt
daa
cmc
sub
mov
mov
sub
cmp
daa
lods
dec
das
adc
ror
sbb
out
xchg
sahf
roll
lret
testl
movsl
lret
in
inc
mov
xchg
loope
pop
in
push
mov
lods
fdivl
aaa
dec
add
dec
or
dec
inc
mov
stc
daa
mov
push
out
aad
ret
ds
pop
xchg
int
cmp
mov
jo
movsb
mov
ficoml
mov
aas
pop
jo
inc
dec
movsl
sub
inc
out
and
mov
shl
sbb
shl
lret
jl
ret
jnp
mov
gs
loop
xor
ret
sar
push
sbbl
rcrb
mov
lret
fwait
jmp
push
orl
aaa
fmul
loopne
pop
test
aaa
jae
sub
xor
jae
mov
add
imul
rcr
imul
lods
popa
fistpll
and
xor
sti
lret
jp
jle
ja
test
inc
jge
jp
adc
test
adc
mov
imul
cmp
pushl
cmp
or
sahf
jo
dec
idivl
aam
jmp
jecxz
sub
inc
addl
add
inc
orl
data16
rcrl
inc
or
jle
clc
mov
iret
xchg
aaa
inc
inc
inc
ret
ret
std
scas
pop
pop
jne
pop
test
in
adc
jnp
xchg
movsb
in
daa
or
mov
mov
ja
dec
mov
lea
mov
es
test
push
sbb
mov
pop
xchg
sbb
inc
nop
loop
fidivl
jecxz
test
cld
xchg
out
jnp
stc
fnstenv
xchg
add
xchg
outsb
push
sbb
ja
xchg
xlat
jmp
in
inc
je
mov
mov
pop
add
lcall
jo
push
and
xchg
popa
lods
inc
ss
xchg
xor
mov
aad
push
adc
mov
cmp
out
xor
loopne
push
xchg
mov
jle
or
xchg
ja
roll
popa
mov
mov
hlt
pop
in
inc
imul
jp
cmp
or
and
add
jecxz
pop
cmc
xor
add
cld
stos
cmp
getsec
add
add
push
paddb
sub
cmpsb
pop
xor
ja
cmpsl
mov
mov
mov
loope
mov
outsb
data16
or
sbb
or
mov
adc
sub
outsl
xor
cmp
mov
push
popl
and
in
and
shlb
or
movsb
rcrl
arpl
imul
adc
pop
lret
das
cmc
add
rclb
stc
shrb
insb
das
ds
push
hlt
mov
popf
jl
push
ret
add
scas
add
push
mov
push
or
dec
inc
sub
adcb
ret
movsb
mov
xchg
enter
add
loope
inc
mov
push
repnz
adc
mov
stos
push
mov
cli
int3
mov
test
cmp
push
pop
aaa
jae
arpl
xor
dec
jmp
cmpsl
fwait
push
iret
hlt
lods
in
lret
mov
gs
dec
jecxz
nop
or
xor
int
lahf
jnp
fwait
out
js
push
loop,pn
fimull
inc
ficomps
push
test
gs
es
sub
daa
add
dec
xor
xor
sbb
stos
push
shll
into
notb
jo
cmp
dec
lds
pop
data16
jae
adc
sub
movsl
in
push
push
xsha1
cmpsb
int
dec
pop
int
push
xchg
aad
dec
xorb
fdiv
insl
sbb
pop
scas
cmpl
sti
test
inc
scas
xlat
pop
inc
pushf
leave
pop
jae
push
sbb
cmpb
movsl
mov
addr16
ja
dec
and
jmp
les
popf
jmp
mov
or
scas
push
jns
dec
sbb
cmpsl
das
lret
push
or
jle
in
xlat
jno
sbb
mov
or
dec
xchg
sub
xchg
adc
jo
arpl
jbe
outsl
out
cmpsb
enter
dec
xor
jmp
mov
test
lds
cmp
addr16
int
pop
aaa
fsubr
cmp
mov
adc
imul
ficompl
pop
les
xor
cmc
mov
sub
xchg
and
sub
mov
pop
pop
fnstsw
sub
ret
rorl
push
das
jns
fsts
cmp
sahf
iret
jecxz
cmp
xor
jge
fs
pop
inc
xchg
call
sbb
ret
pop
mov
pusha
pop
fwait
pop
rorb
aaa
pop
cmp
ror
mov
cmp
xchg
xor
ja
adc
pop
cmp
stos
adc
add
imul
mov
mov
jno
addr16
inc
out
mov
push
xchg
lahf
movsl
out
stos
js
pop
bound
push
insb
insb
js
test
fdivrl
mov
inc
inc
adc
pop
or
lock
add
fists
jbe
gs
adc
aam
outsl
add
out
jl
xor
xchg
cld
mov
jl,pn
mov
push
add
stos
mov
xor
add
xor
xchg
sahf
pop
sarb
jle
and
mov
or
es
mov
mov
inc
sub
ja
cmc
jmp
lcall
dec
cmp
xor
shlb
sub
leave
mov
enter
add
fimuls
or
mov
xorb
out
adc
cli
jo
or
pop
sahf
outsb
mov
stc
in
cmpb
repnz
int
or
inc
loope
fistl
adc
stos
dec
jp
or
sarb
cmpb
adc
xor
enter
mov
ja
popf
popf
xlat
lock
pop
cwtl
jle
mov
sti
stos
mov
jmp
stos
push
jmp
inc
ljmp
or
xlat
lock
fucomp
adc
sbb
mov
push
imul
pop
filds
and
mov
push
out
sub
xchg
cmpsl
dec
mov
out
xor
mov
jmp
sbb
cmp
fldt
roll
push
loop
push
bound
push
repnz
cld
mov
mov
sub
inc
movsl
ret
int
fisubs
mov
pop
mov
sub
mov
jno
inc
lods
push
push
shlb
xor
mov
in
sub
rol
iret
or
jg
test
loope
repz
pop
mov
inc
notl
pop
inc
ja
pop
loopne
sbb
adcb
sbb
aam
or
imul
mov
pavgb
and
xchg
ja
push
adc
je
cmc
pop
mov
mov
xchg
pop
push
pop
test
movsl
lods
stc
shrl
rorl
jle
add
fwait
sub
or
mov
into
out
mov
xchg
xor
mov
xor
xchg
cmp
jmp
repnz
cmpsb
repnz
xor
cli
psubq
ja
push
and
xchg
cmp
sbb
lods
in
out
fimull
inc
push
add
mov
arpl
push
mov
rcrl
insb
pushf
jg
aad
xchg
mov
pushf
data16
mov
push
enter
sbb
cmpsl
push
push
pop
stos
lcall
mov
jp
xchg
divl
push
in
dec
enter
xchg
jnp
nop
dec
adc
inc
or
or
mov
mov
dec
sbb
or
pop
shll
mov
pop
mov
mov
sti
lret
push
popf
pop
ds
dec
pop
es
add
sbb
std
push
int3
movb
ret
jo
pop
insb
push
or
test
push
fisttps
sub
adc
ljmp
mov
fistpll
bound
int3
push
cli
sub
mov
js
or
arpl
sub
xchg
jnp
and
xchg
or
int
or
idivl
and
inc
dec
jmp
mov
dec
lea
mov
aas
cmp
push
jne
inc
icebp
cs
into
and
cli
fildll
pusha
mov
ficoml
pop
xor
jle
movsl
sbb
mov
push
es
ja
adc
cmp
xchg
je
cmp
xchg
pop
and
push
loopne
pop
pop
jl
pushf
cltd
fstps
lock
sbb
lock
mov
stos
add
push
jne
insb
add
push
addl
xchg
loopne
call
sbb
call
lret
cmp
push
pop
mov
call
xchg
test
stc
ljmp
pop
mov
xchg
xlat
push
les
inc
repnz
mov
xchg
insl
pop
or
ss
xor
imul
icebp
movb
clc
nop
mov
and
jno
sub
bound
shll
cmp
movsl
in
jns
icebp
stos
jne
ret
jle
pop
repz
dec
lret
cltd
hlt
pop
scas
clc
sti
cmc
push
repnz
lahf
lret
xchg
imul
sti
ljmp
and
push
jg
adc
sti
call
xor
jns
scas
mov
lret
push
movsb
xor
in
out
rcr
rcr
or
outsb
out
jl
fidivl
fistpl
mov
xchg
sbb
sbb
jp
mov
ljmp
xchg
movsl
mov
stos
jmp
icebp
add
cmc
jns
xchg
clc
out
movsb
xlat
pop
lcall
mov
hlt
xor
in
lods
pop
inc
pop
mov
dec
jae
adc
mov
pushf
pop
or
pop
cmp
inc
push
lock
push
pop
mov
sbb
sbbb
daa
int
mov
bswap
pop
dec
sbb
shr
jmp
jno
data16
in
sarb
loop
cwtl
cwtl
mov
out
popf
jmp
in
xchg
add
int3
std
push
xlat
fnsetpm(287
xor
lock
cmpsb
cli
bound
loopne
in
je
popa
mov
imul
sub
xchg
int3
inc
xor
int
mov
cmpsb
dec
pop
imul
iret
popa
cli
je
out
iret
loop
scas
rcll
ret
sbb
mov
cltd
xor
jle
stos
icebp
sub
lock
mov
mov
jo
adc
mov
cmpsl
nop
xor
pop
dec
dec
imul
sbb
mov
push
imul
xor
xor
and
push
das
dec
ret
lret
push
or
daa
mov
lock
sbb
mov
aad
std
xor
stos
addl
das
inc
aad
das
mov
mov
stos
push
into
fs
fldcw
cmpsb
ljmp
push
je
cmpxchg8b
lret
outsl
pop
jmp
cmc
popf
gs
imul
mov
clc
push
rorb
pop
lret
inc
sbb
mov
std
leave
inc
dec
ficoml
jae
pop
int3
and
lcall
test
pop
inc
sub
mov
push
inc
std
inc
gs
ja
and
cmp
mov
push
add
mov
ficomps
cwtl
scas
mov
adc
pop
push
arpl
adc
push
je
cwtl
gs
push
jmp
fcomp
je
mov
inc
mov
aam
mov
lea
jbe
imul
insb
rcll
mov
daa
addr16
test
mov
and
pop
lods
push
sbb
mov
mov
jmp
pop
das
cmpl
ds
je
add
roll
xchg
dec
mov
adc
data16
ret
lods
std
mov
ret
bound
fs
das
mov
dec
inc
mov
movsl
mov
mov
int3
xor
mov
movsl
pop
das
lcall
cs
loope
add
dec
ds
xchg
push
adc
mov
bswap
cmpsl
ret
loop
sti
xor
push
icebp
mov
jb
je
dec
loope
bound
mov
push
in
dec
outsl
inc
cltd
mov
jmp
mov
xchg
cmp
mov
inc
sbb
adc
aam
stos
mov
leave
insb
fucomi
js
daa
jecxz
aaa
test
in
mov
mov
xchg
ret
jae
in
jp
leave
dec
popa
popa
decl
sbb
adc
jecxz
lret
sub
xor
sbb
mov
enter
stc
scas
or
or
mov
cltd
hlt
movsb
in
jg
lods
add
scas
in
pop
jecxz
xchg
pop
iret
mov
mov
ljmp
push
cmpsb
mov
popf
cmp
mov
jb
adc
fsubl
shr
cli
cmp
dec
cmc
cmp
sahf
ja
add
test
cmc
fisttps
push
xor
adc
jo
xchg
jmp
into
xchg
call
fnstcw
imul
movsl
mov
fisubrl
mov
xchg
pop
aaa
adc
out
rorb
push
and
mov
cmpsl
lret
scas
sub
dec
nop
inc
mov
jle,pn
pop
sahf
mov
test
xchg
mov
shlb
cmp
jmp
std
fst
xor
cs
outsl
pop
or
adc
outsl
out
sahf
jl
pop
enter
test
pop
fs
ficompl
fldcw
pushf
jns
js
sbb
mov
and
dec
mov
mov
mov
jbe
fwait
rorb
push
std
fwait
movsl
and
cmp
ja
push
int3
sbb
hlt
mov
push
and
ja
nop
stc
lret
fprem1
les
ljmp
jle
aad
or
push
cld
ficompl
or
movsl
mov
push
jg
inc
scas
jbe
cld
shl
imul
sbb
in
or
fcoms
mov
cmp
sub
rorb
jecxz
xchg
in
into
mov
movsb
jle
inc
clc
jge
jle
adc
jno
out
mov
pop
out
jbe
and
movsl
insl
sub
adc
push
pop
push
sub
add
add
loop
xor
mov
insl
inc
sti
mov
cwtl
roll
sub
inc
push
push
fwait
mov
push
mov
rcrb
out
mov
lret
in
call
stos
and
das
adc
xchg
cmp
out
and
jl
sbb
jno
mov
adc
fstl
aam
inc
and
call
adc
fs
xor
mov
in
ljmp
idivl
mov
aaa
into
pushf
jle
adc
push
shl
add
orb
and
pop
es
pop
out
scas
inc
adc
mov
ror
in
pop
lea
adc
aad
jl
sub
sbb
outsl
daa
or
js
fmuls
cmc
fwait
test
sbbl
test
cwtl
jmp
add
ljmp
outsl
out
ror
scas
push
fnstsw
mov
in
adc
cmp
pop
int3
sub
shl
daa
add
or
bnd
repnz
push
das
cmc
test
mov
imul
js
push
fbld
mov
loope
enter
pop
sbb
mov
dec
mov
xchg
into
xorl
pop
xchg
cmp
cltd
xor
in
ljmp
in
dec
imul
xlat
push
lds
add
outsl
lods
sub
push
test
pop
int3
movsl
xlat
sbb
or
les
push
xlat
out
bound
cltd
scas
gs
cmpsb
popa
imul
into
push
xlat
sbb
inc
clc
jg
push
test
pop
jb
xor
sbbb
jle
jns
aaa
mov
test
or
add
dec
ficomps
lret
xor
enter
clc
fisubrl
in
mov
sub
scas
cmc
inc
mov
and
and
test
pop
nop
addb
mov
daa
or
push
out
push
das
adc
jo
pop
cs
mov
xchg
mov
fistpl
mov
xchg
mov
sbb
sbb
das
dec
mov
and
aad
repz
stc
aas
jecxz
cmp
decl
out
jle,pn
bound
jmp
fisubrs
jecxz
cmp
inc
cmp
or
xor
push
cmp
jl
jne
out
mov
ret
ret
divb
or
out
xor
xchg
pusha
lods
inc
std
add
insb
push
pop
fisubrs
dec
sbb
adc
sub
push
cmpsb
pop
sahf
sarl
cmp
clc
shlb
lea
mov
pop
sub
outsl
stc
pop
bound
sub
movsl
add
out
test
sbb
xor
int
or
loopne
popa
aas
testl
jle
pop
adc
push
pop
or
or
and
cltd
or
fwait
sub
sbb
out
xor
scas
xchg
jmp
rcl
sub
dec
jge
add
sub
sub
jnp
je
push
adc
push
dec
jle
pcmpeqb
jo
adc
fwait
cli
cmp
decl
cmc
loopne
mov
sub
cmp
lret
in
jmp
push
aad
push
or
xlat
stos
sub
js
cmp
cmp
xchg
pop
mov
push
jl
fistps
repz
dec
jp
fisttps
cmc
dec
xor
into
mov
lcall
int3
mov
sub
inc
dec
push
cmpsb
or
dec
xchg
cld
dec
jp
daa
inc
xor
fbstp
in
test
push
or
xlat
roll
out
adc
cmp
push
cmp
xchg
jmp
pop
test
adc
in
fnstenv
pushf
loope
pop
inc
or
push
cs
xor
inc
imull
ja
jno
stos
mov
push
push
inc
lock
add
dec
pop
fwait
in
cmc
es
sub
mov
hlt
push
or
in
ljmp
lds
sarl
das
dec
jp
mov
xlat
pop
ljmp
les
push
mov
xor
push
jmp
or
inc
pop
das
fimuls
xchg
test
jo
pop
rorb
mov
das
cmp
seta
dec
xchg
xchg
mov
sbb
orl
add
jmp
xor
lods
je
pop
or
clc
and
mov
pop
adc
pop
jmp
lods
test
leave
test
outsb
test
das
inc
shlb
enter
push
xchg
xorb
cmp
jne
adc
cmp
xor
mov
ja
add
shl
sub
aaa
out
dec
mov
xchg
inc
mov
shll
arpl
pop
sub
test
cmp
or
pop
pop
out
orb
cld
pop
push
lock
stos
cld
and
jnp
fcmovne
leave
mov
add
and
and
lahf
lds
test
cmc
and
arpl
inc
mov
sbb
iret
and
add
or
pop
adc
in
jno
or
mov
arpl
out
pop
or
notl
outsb
mov
lcall
out
movsb
aam
xchg
mov
loope
adc
add
pop
pop
repz
std
rolb
jae
popf
xchg
arpl
mov
sub
ja
push
lret
lret
adc
mov
pop
xchg
divl
cmp
lock
adc
adc
or
push
divl
jmp
or
sbb
fdivp
filds
sbb
cmp
cmp
xor
mov
mov
popa
addr16
movsl
pushf
xor
mov
xor
adc
adc
mov
mov
sti
loopne
xchg
stos
faddl
add
nop
jmp
in
cmpsb
cmp
imul
lahf
add
lret
jo
pop
jnp
sbb
jnp
adc
test
cmp
inc
xor
lods
push
or
jge
gs
push
lcall
repz
call
push
xchg
xor
les
or
xor
lret
push
stos
arpl
addl
sub
mov
scas
jnp
mov
mov
and
aad
or
out
mov
push
fdivrs
fldenv
lcall
testl
stos
push
xor
lret
and
jl
jge
inc
repnz
mov
jnp
mov
das
out
push
idiv
test
test
adc
cs
and
jae
sbb
test
insl
mov
sub
sub
fbstp
push
test
fnstcw
imul
dec
bound
adc
lds
rcll
dec
and
stos
add
cwtd
icebp
xchg
pop
dec
mov
mov
mov
fadds
je
add
out
sbb
aas
xor
inc
out
inc
lods
adc
xchg
sbb
jecxz
loop
shl
int
push
fwait
ljmp
dec
or
rcrb
adc
loope
fiadds
mov
fstps
pop
xchg
cmp
addr16
ret
pop
adcb
add
loope
add
inc
mov
ret
idiv
iret
adc
enter
mov
or
mov
iret
add
cmp
sub
lret
jg
pop
pop
ja
mov
rcrb
imul
pop
or
es
sub
jb
mov
outsl
fdivs
outsl
scas
sub
lods
xchg
push
fsubl
imul
ret
test
call
scas
pop
fbstp
in
ror
lods
inc
mulb
andb
mov
decl
out
mov
dec
push
cmp
xchg
decb
loopne
or
push
mov
xlat
dec
sarl
test
pop
pusha
sti
cld
xor
fdivs
fsubs
adc
jl
call
popa
das
mov
mov
aam
sub
add
jecxz
int
cmp
cli
test
xor
icebp
cmp
test
les
ja
pusha
mov
movsb
jg
push
pop
pop
clc
mov
dec
stc
cmp
adc
push
int3
jp
add
test
scas
das
push
int
jns
mov
insb
ffree
fcoml
mov
ds
sub
sub
mov
sub
aaa
clc
inc
mov
inc
add
pop
fistps
loopne
dec
shlb
push
cli
adcl
pop
push
cs
xchg
test
sbb
lret
push
fiaddl
test
push
sbb
imul
or
push
mull
loop
movsb
test
sub
cwtl
lcall
pop
inc
jmp
pop
and
psrlq
add
dec
nop
dec
dec
js
xchg
test
add
adc
stos
in
js
mov
lods
and
or
and
in
jns
aas
dec
push
cld
sar
cltd
mov
or
std
stc
pop
lcall
popa
jae
sbb
or
xor
imul
scas
jmp
pop
dec
int3
add
fsts
loop
call
xlat
jge
imul
xor
rorl
sub
sub
dec
call
aam
out
dec
sbb
sub
mov
fdivr
ret
inc
lret
mov
xchg
loop
add
daa
inc
inc
mov
push
in
pop
ffree
test
and
mov
out
loopne
push
inc
inc
jnp
and
sub
ror
lods
cmp
push
adc
cmpsl
adc
sub
sub
gs
mov
push
cmc
and
cli
jp
aaa
jo
in
addr16
dec
jmp
jnp
arpl
and
in
mov
mul
outsl
lret
and
sbb
mov
lds
cmp
or
dec
jno
cmp
and
adc
repz
adc
jbe
or
sub
pop
lock
lock
pop
jg
xor
push
pop
rorl
pop
mov
mov
lods
test
repz
pop
cmpsl
dec
adc
jne
cmp
cmpsl
sbb
sub
sbb
xor
enter
int
notb
add
xchg
xorb
int3
data16
sar
push
fnstenv
sahf
leave
xchg
sbb
inc
pop
pop
mov
in
pop
xchg
pop
cwtl
xor
and
sub
out
or
cmp
pop
push
mov
inc
xchg
loop
in
insl
xor
mov
and
jmp
jo
dec
cmc
scas
mov
cmpl
dec
cld
xlat
xchg
pop
fidivrl
ljmp
mov
adc
cltd
push
repz
xlat
push
add
inc
lods
aad
and
sahf
leave
xchg
frstor
jge
scas
imul
fisubrl
faddp
fstps
sbb
into
imul
push
fst
xchg
loope
scas
mov
cmp
mov
cltd
mov
call
ret
dec
fnstsw
rolb
push
add
sub
daa
sub
xor
dec
repnz
outsb
cltd
outsb
jbe
loope
jecxz
xchg
xor
xor
cld
mov
mov
xchg
mov
in
idivl
mov
sbbb
add
mov
in
je
out
repz
rep
dec
jae
shll
sbb
lock
enter
mov
inc
int3
scas
movsb
mov
clc
dec
bnd
lods
fmull
lret
int3
xor
sarl
sub
adc
inc
jl
xor
mov
lea
insb
and
fcoml
mov
adc
fucomi
loope
popl
test
xor
loope
pop
or
ret
xchg
mov
mov
ja
loope
sti
ja
xchg
daa
adc
sub
adc
lods
call
add
stc
xchg
lea
jbe
bound
xchg
leave
scas
fwait
test
xor
icebp
push
flds
jo
stos
sub
ja
push
jno
iret
imul
push
add
lret
insb
jo
aam
outsl
cmp
hlt
int3
fmuls
cmpsl
adc
scas
sub
adc
jne,pn
adc
cmpsb
jo
xchg
or
inc
or
pop
int
lret
cld
out
test
sub
mov
push
pop
mov
sbb
mov
aaa
out
lods
dec
jle
mov
sub
cs
out
es
add
pop
sbb
pushf
lcall
insb
pop
cmc
shlb
lods
shrb
adc
push
in
push
push
aam
in
xor
arpl
ss
ljmp
jp
out
ja
in
sub
adc
xor
rorl
or
xchg
test
add
popf
sbb
sbb
xor
xlat
pop
push
xchg
scas
xor
shrb
sub
adc
pop
ljmp
jg
mov
inc
das
ficoml
push
popa
mov
subb
loope
out
push
out
and
lret
divl
adc
jg
xchg
adc
adc
and
lds
sbb
inc
out
insb
shrb
dec
aam
and
pop
push
fildll
nop
add
sub
pop
outsl
pop
rclb
cmpsl
adc
xchg
xlat
sar
sub
loope
xchg
pop
jae
int
sub
xchg
test
ljmp
clc
orb
and
or
mov
incb
ss
out
pop
testb
arpl
sbb
sub
daa
xchg
movsl
jb
add
pushf
lods
sub
shlb
push
push
cltd
fdivrl
iret
mov
ss
and
pop
or
sub
repz
lea
pop
push
repz
mov
inc
inc
xor
jno
pop
push
inc
mov
adc
aam
dec
dec
jp
push
cmp
push
cltd
sbbl
push
lds
lds
add
sbb
xlat
ret
gs
rorl
sub
mov
add
jbe
and
pop
scas
call
mov
daa
loopne
mov
sub
fcmovu
ljmp
mov
ljmp
sbb
and
je
sarl
inc
je
cmp
jne
xor
push
mov
adc
bnd
stos
in
xchg
xlat
aad
sbb
daa
test
sbb
adc
adc
mov
mov
cld
or
aad
push
jp
jge
mov
iret
shll
xor
ja
mov
inc
scas
mov
sti
jo
push
jle
add
cmc
xor
les
gs
sbb
cs
jmp
fisubs
hlt
xor
in
pop
inc
bound
or
lods
outsl
scas
loope
jb
push
cmp
adc
pop
je
ret
mov
andl
inc
or
mov
pop
jp
add
or
sbb
mov
inc
nop
ds
cmpsl
dec
push
lods
imul
push
sbb
fdivrl
iret
cmp
dec
into
repnz
pop
jge
mov
and
gs
pop
mov
adc
jns
push
jp
shlb
out
pushf
xlat
add
mov
ja
and
mov
sti
mov
sarl
or
pop
scas
dec
or
imul
mov
jp
or
sbb
cmp
push
lret
push
push
cmp
stc
xchg
add
cwtl
fstpt
mov
push
movsb
insl
xchg
test
ror
xor
jno
jne
dec
hlt
inc
pop
shll
popf
cwtd
pusha
or
out
add
jmp
push
aad
js
dec
cmpsb
sti
mov
xor
mov
jb
andb
ret
sbb
push
lret
and
sbb
mov
lret
push
ficomps
loope
jle
movsb
or
movsl
jnp
jbe
enter
minps
xor
fildll
mov
loop
adc
movsb
std
cs
cltd
adc
cs
dec
sbb
hlt
mov
shl
dec
ss
pop
push
pop
pusha
push
test
adc
imul
mov
or
in
std
xor
push
bound
fisttpll
inc
sub
sbb
adc
sbb
xchg
std
je
sti
stos
rcrl
inc
rorl
sub
cmc
pop
cmp
int
mov
mov
push
bound
mov
inc
aas
xchg
adc
in
mov
jne
jmp
adc
xchg
adc
sarb
mov
sbb
or
lret
jge
sub
lahf
and
add
adc
cli
inc
inc
ficoml
fst
and
dec
adc
mov
or
mov
xchg
or
sub
push
inc
mov
mov
stos
imul
or
mov
cmp
imul
sub
mov
hlt
sub
pop
ljmp
lcall
popl
jb
lret
jmp
pop
sub
xor
xchg
dec
add
lock
jmp
rorl
adc
imull
mov
aam
jae
mul
and
sbb
add
push
jne
adc
sbb
pop
fsubs
cmp
psubw
pop
jmp
pop
xchg
xor
call
loop
mov
sbb
daa
cmpsl
mov
fcompl
pop
sbb
mov
leave
or
data16
jbe
mov
fs
lret
inc
and
pop
aaa
pop
loopne
fldenv
lea
inc
and
jne
pop
or
sbb
inc
push
xorl
es
mov
fwait
ds
into
xchg
mov
and
outsb
jecxz
push
jns
mov
xchg
mov
loopne
push
jne
dec
mov
add
stos
les
cli
xor
lods
jmp
push
add
mov
pop
pop
cmp
dec
imul
stc
lock
jo
aaa
add
lds
mov
test
into
cwtl
ficoml
scas
xchg
push
popa
lods
or
xchg
sahf
test
push
fmulp
out
pushw
insl
sbb
dec
sbb
adc
adc
dec
addr16
movsl
adc
mov
aam
cmp
mov
repnz
pop
mov
xchg
stos
aas
std
repz
push
frndint
mov
rcrb
jl
cmp
fistpll
out
sbb
incb
sub
push
imul
adc
repnz
stos
add
or
sbb
mov
jno
js
pop
loope
idivl
repnz
sub
stos
sbb
ljmp
add
cwtl
dec
adc
sbb
lock
shll
mov
mov
sbb
out
pop
sub
and
frstor
sub
in
mov
xchg
sub
lret
lds
or
cmpsb
pop
shrl
mov
lods
into
nop
mov
xchg
cmc
mov
mov
mov
adc
inc
cltd
and
sbb
pop
jns
cmp
dec
jl
mov
fnstenv
sti
scas
mov
scas
in
pop
xchg
sar
jg
out
xor
es
in
bound
jl
out
loopne
lahf
data16
lock
cmp
mov
mov
mov
hlt
cmp
stos
btsl
sbb
loopne
inc
and
leave
or
fcmovne
sarl
aaa
arpl
in
stos
cmp
lock
push
repz
call
cmp
sahf
mov
orb
pop
cmp
popf
fisubrs
sbb
mov
lea
or
cmc
xchg
rcll
add
push
lea
nop
insl
adcl
rolb
add
fsubr
sbb
xor
pusha
fisttpll
or
pop
aam
or
sub
inc
mov
std
adc
shl
mov
add
rcrl
lea
dec
je
inc
mov
test
in
test
dec
cld
stos
adc
enter
push
jmp
inc
stos
data16
ret
and
sahf
sahf
out
inc
jmp
nop
ss
jg
out
cld
and
aam
adc
push
or
outsl
xchg
int3
cmc
mov
cld
lret
mov
xchg
stos
mov
push
jmp
fwait
pop
mov
cmpsb
jb
add
cli
jns
loopne
add
sahf
push
cs
and
sub
stc
popf
enter
sbbl
xchg
push
jg
cmc
jl
jge
jp
jns
in
cmp
sbb
pop
js
pushf
mov
and
shll
mov
cmp
cltd
sbb
pop
fmuls
xchg
sbb
jg
imul
push
dec
xlat
lods
inc
pop
add
into
xor
mov
int
add
xchg
xor
mov
cld
inc
sbb
pushf
sub
inc
mov
sub
adcb
jae
pop
push
mov
das
sbb
add
lret
sub
cmp
jecxz
mov
sti
std
lret
xchg
dec
test
and
pop
fs
mov
sbb
fisttpl
xor
mov
ret
icebp
inc
xchg
push
in
ljmp
adc
and
mov
dec
push
push
jle
or
mov
sar
nop
nop
cmpsb
adc
sbb
xor
add
sahf
fmull
dec
lods
mov
and
sahf
xor
mov
sub
cltd
jno
cmpsb
dec
lea
js
cmp
push
inc
insb
or
xor
cltd
cmc
pusha
icebp
mov
into
int3
inc
mov
int3
xorb
xchg
sbb
clc
bts
inc
mov
inc
addsd
dec
movsl
ljmp
push
cmp
xchg
fimull
xchg
and
mov
fcmovnb
sbbb
out
adc
pop
nop
sti
fnstcw
mov
out
out
loope
mov
lods
shl
insl
pop
sub
stc
sbbl
jmp
jecxz
xor
test
out
stc
push
sbb
push
mov
loop
add
in
inc
movswl
cmp
decl
loop
inc
inc
movsb
dec
xor
inc
scas
enter
fwait
jo
adc
arpl
pop
xor
xorl
push
mov
adc
sub
test
and
ljmp
xchg
dec
add
ror
les
insl
jg
fs
jl
sbbl
xorb
sahf
xchg
push
sbb
xor
popf
ror
adc
cs
fucomp
sub
mov
xor
and
ja
sbb
pop
xor
sub
fwait
mov
or
jnp
movsl
imul
xchg
sub
dec
mov
aas
inc
pop
ffreep
loopne
out
sub
sahf
pop
cld
es
lds
sub
mov
inc
sahf
mov
sbb
popa
sbb
and
xchg
mov
les
ja
dec
in
xor
lods
into
mov
pop
jno
pop
adc
fnstenv
gs
outsl
test
das
adc
xchg
mov
xchg
cmpsl
popa
test
xchg
mov
xchg
adc
je
ja
jo
xchg
sbb
aaa
aaa
cmp
mov
xchg
cmc
cltd
push
sub
cwtl
push
mov
push
pushf
ds
push
push
pop
in
cmp
cwtl
fidivrl
xor
jl
lods
push
inc
add
and
sbb
mov
mov
inc
jmp
sub
and
gs
jge
dec
jg
push
pop
cld
sbb
add
xchg
or
test
cmpsb
in
addr16
cmpsb
rcrl
xor
mov
and
mov
lock
outsl
mov
aas
adcl
lock
popl
lret
subl
mov
lcall
cmp
push
out
mov
iret
sarl
push
xor
cmp
add
sub
xor
mov
shll
stc
add
mov
das
data16
insb
jnp
push
xor
ret
jg
cmp
jecxz
call
std
xor
fistpl
sub
out
xchg
jno
add
mov
inc
mov
add
imul
fisttps
add
cmpsl
gs
imul
fsubrs
xchg
cmp
jbe
insb
fucomi
push
xchg
inc
dec
xor
aas
stos
inc
cs
lods
shlb
mov
dec
jmp
scas
and
and
or
out
dec
repnz
fwait
xor
sbb
lahf
add
inc
or
enter
loope
out
leavew
stc
jnp
jnp
lcall
cmova
in
sub
and
inc
mov
xchg
jae
dec
inc
sub
jno
push
xor
pop
cmp
add
cltd
int
pop
sub
cmpsl
icebp
hlt
sbb
fs
movb
or
jge
into
dec
movsl
mov
mov
movsb
pop
popf
repz
mov
aad
faddl
adc
mov
sti
lret
pop
and
iret
in
jl
xchg
cmpsb
mov
loope
mov
roll
lods
mov
sbb
lock
js
insb
imul
xchg
dec
cvttps2pi
or
and
int3
adc
and
ds
and
out
or
or
iret
and
stos
cmp
subb
aaa
lret
hlt
imul
sub
bound
jae
or
add
cltd
in
rolb
je
add
cmpsb
imul
sbb
jne
push
xor
sub
mov
pop
pop
sbb
push
push
pop
inc
xor
repnz
aad
repnz
add
push
sub
sahf
dec
and
adc
adc
out
pop
repz
ficompl
xchg
mov
jg
dec
mov
mov
mov
sbb
sbb
jmp
pop
ja
inc
icebp
jmp
aaa
test
sbb
fisubrs
out
nop
sbb
hlt
inc
in
add
pop
add
repnz
sbb
sub
cmpsl
fistl
cmpsb
mov
les
mov
adc
leave
cmp
cwtl
mov
push
sub
callw
lret
jns
sub
rorl
mov
int3
dec
push
enter
lds
jmp
and
popf
ss
loop
mov
into
dec
jecxz
inc
les
push
testl
cmp
push
iret
push
inc
xchg
and
idivb
cli
stc
lods
cmc
push
inc
pcmpeqb
sahf
mov
lods
dec
cmp
rcrb
iret
jbe
or
out
jno
push
inc
sub
cli
pop
lock
in
cmp
jg
dec
popa
pop
out
add
rcrl
sbb
shll
shlb
jne
inc
int3
mov
jns
and
dec
cmp
xchg
rcl
adc
fsubr
mov
mov
cmp
mov
push
rcr
insl
mov
add
cltd
add
call
pop
inc
xchg
xor
scas
pop
add
cmp
xor
push
loop
scas
int3
push
adc
sbb
repnz
push
or
sbb
sub
insb
xor
inc
nop
pop
in
fstps
mov
mov
adc
lock
push
popa
icebp
xor
inc
xchg
int
xchg
out
push
incl
lea
pop
dec
cmp
in
out
xor
repz
xor
shl
sbb
loope
mov
mov
mov
jl
or
mov
test
lea
in
jne
dec
std
loop
xor
ret
in
sbb
and
xchg
or
shrb
test
out
xor
mov
fcoms
decl
dec
jbe
shll
mov
nop
je
pop
jge
arpl
inc
xor
mov
pop
fldenv
loop
xchg
add
adc
jns
add
xchg
mov
push
xor
arpl
loopne
outsb
ja
mov
popf
xchg
lea
add
pushf
mull
test
sub
out
lods
xchg
test
sbb
mov
and
adc
sub
dec
sub
into
mov
pop
shl
or
mov
cmc
sbb
inc
and
mov
xchg
cs
push
sub
stos
jae
adc
or
push
mul
pop
into
in
jmp
add
data16
movsb
sub
jmp
movl
mov
xlat
fsubrs
pop
ds
sar
pop
jno
push
xorb
scas
jecxz
pop
mov
repz
clc
push
sub
adc
ffree
push
adc
into
cmp
fisubl
sub
hlt
push
inc
jae
outsl
loope
fdivr
outsl
xchg
test
mov
cs
filds
push
gs
sub
fimull
mov
stos
pushf
lret
or
lea
fldcw
mov
push
xor
adc
adc
jl
jp
outsb
fdiv
mov
mov
fs
arpl
imul
lods
lods
jns
adc
jge
push
xor
adc
pop
in
fistps
and
shlb
bound
mov
into
dec
ss
mov
lds
dec
cmp
aaa
mov
mov
outsb
fs
push
enter
fcos
pop
es
ror
cmp
xchg
xorb
push
and
sbb
mov
mov
jns
fxch
les
xchg
push
push
sub
push
ds
sub
dec
ds
cmp
repnz
pop
outsl
pop
jmp
leave
or
dec
cltd
divb
pop
aad
mov
loopne
int
jno
xor
es
call
insl
mov
adc
or
pop
daa
dec
out
sub
and
inc
test
data16
test
es
add
repnz
adc
sbb
pop
mov
sbb
pop
repz
ficompl
push
sti
clc
and
imul
push
and
mov
sbb
lods
loopne
fisubrl
inc
adc
add
xor
out
in
push
jb
adc
fucomp
imul
out
push
dec
ret
push
int
xchg
fimull
pop
add
lcall
sbb
cmpsb
dec
jno
stc
rolb
clc
sbbl
mov
adc
out
outsl
sbb
cltd
mov
js
outsb
call
xorl
mov
adc
lcall
pop
cmp
out
pusha
cmp
cld
movsb
or
pushf
jb
jbe
xlat
mov
roll
inc
inc
mov
arpl
aas
adc
inc
rol
scas
shlb
and
outsl
loope
les
bswap
pop
mov
xchg
in
jle
mov
adcb
aaa
xchg
out
in
jae
lods
or
adc
addr16
jne
inc
dec
lret
mov
mov
pop
rolb
cmp
enter
push
xor
dec
in
cmp
out
ljmp
aam
xchg
cmc
addl
pop
hlt
inc
out
jnp
sti
stc
cmp
pop
fisttpl
bound
and
jp
push
adc
sbb
mov
fcomp
xchg
sbb
mov
sub
push
aas
mov
mov
cmpb
lods
out
ljmp
sbb
cmp
pop
inc
jnp
or
or
xchg
pop
js
mov
sub
pop
ljmp
xor
jae
add
xchg
pop
mov
sbb
stos
jo
and
ret
add
mov
pop
jg
pop
mov
rcrb
jge
sbb
push
sbb
sbb
rcrb
adc
inc
inc
arpl
in
adc
add
test
cmpsl
inc
adc
ret
cmc
pusha
les
in
push
sbb
mov
cmp
out
andb
mov
frstor
into
stc
xchg
ja
xchg
mov
jae
insl
mov
and
in
les
shll
lea
lods
xchg
mov
lret
test
cmp
and
in
ficomps
test
pop
out
sbb
xor
leave
int
jge
push
xor
ja
outsl
stc
idivb
push
lahf
adc
adc
jl
mov
sahf
dec
cmp
adc
cmp
inc
cs
jecxz
dec
rclb
dec
mov
xchg
adc
mov
aaa
adc
pop
test
aad
mov
mov
imul
add
inc
sbb
mov
scas
push
or
iret
jbe
out
fisubs
push
into
jo
es
and
inc
int
mov
xchg
and
or
fbld
or
jb
mov
cmp
call
cmp
push
adc
push
fwait
cmp
mov
xchg
bound
push
es
or
push
shl
inc
xchg
push
in
push
push
and
outsb
aaa
sub
imul
dec
mov
push
repnz
ret
repnz
add
add
pop
and
aaa
and
out
rcrl
stc
xlat
sbb
popa
cli
dec
or
pop
adc
call
fcmovnb
mov
add
pop
mov
test
rolb
fbld
int3
out
mov
mov
inc
cmp
mov
add
pop
adc
pop
sub
xor
mov
sbb
cwtl
inc
inc
ds
inc
xchg
in
shrl
daa
adc
nop
repnz
xchg
ficomps
sbb
mov
fistl
cld
enter
xor
enter
out
push
sub
hlt
cmp
jmp
dec
sbb
and
cmp
or
lods
mov
mov
push
add
jl
rorl
mov
fcomps
ss
add
out
cmp
cld
aas
call
int
imul
inc
cld
jmp
jbe
cs
xchg
jb
dec
out
xchg
mov
cli
leave
and
and
das
out
jp
int3
bound
xor
xchg
test
out
mov
and
mov
inc
xor
fdivp
push
push
int
adc
gs
cmc
repz
icebp
adc
sbb
mov
andl
inc
outsb
repz
and
cld
loop,pt
xchg
and
xor
sub
cwtl
lret
cmp
rorb
push
xchg
insb
stos
and
sub
test
sarb
push
push
lcall
int3
subb
sub
fcoml
lods
lods
pop
stc
inc
out
adc
shrl
push
add
mov
mov
and
inc
fs
add
lret
jmp
jge
andb
add
addr16
stos
sahf
shr
mov
movsb
fdivrl
dec
pop
inc
cltd
pop
pop
push
adc
outsb
stc
or
ljmp
cmp
adc
sub
inc
mov
xchg
jno
or
mov
lods
jmp
push
xchg
decl
cmp
sub
cmpsb
jecxz
add
sti
push
imul
push
icebp
aad
xchg
stos
js
out
mov
add
mov
jmp
push
int
mov
xor
jns
cmp
lcall
mov
pop
lds
inc
int
inc
push
xchg
frstor
call
or
daa
out
aad
fnstsw
outsb
scas
shlb
pop
ror
cmpsl
adc
bound
int3
test
inc
xchg
sti
iret
jle
cmp
test
mov
xor
pop
dec
xchg
cmp
fwait
dec
inc
sub
mov
stc
add
mov
pop
cmp
shll
jp
in
rcrb
inc
sbb
mov
jnp
push
xor
push
mov
xchg
push
movb
scas
inc
std
lret
mov
stos
mov
rclb
dec
and
xor
orl
ds
imul
sahf
iret
ret
das
sbb
es
mov
cmp
insl
mov
mov
jmp
sub
add
inc
jne
jae
xchg
jecxz
pushf
xchg
in
sahf
mov
sbb
iret
jecxz
mov
dec
das
sub
xor
or
test
mov
sub
push
iret
pop
add
mov
sbb
push
lock
lods
sub
cwtl
inc
sarb
xor
adc
or
mov
in
add
and
push
jge
xor
ret
cli
push
lea
scas
test
jg
push
cli
in
int3
ljmp
ss
push
pop
adc
pop
psubb
dec
lret
xchg
mov
and
bound
cmpsb
loopne
lahf
push
out
jmpw
mov
imul
clc
dec
jecxz
sbb
and
nop
or
pop
int3
bound
cmp
aad
xchg
jne
les
add
je
sub
sub
shrb
xor
mov
loopne
add
sbb
rclb
sub
xor
ss
and
inc
and
pop
out
mov
push
dec
inc
mov
mov
sub
xlat
and
jb
pop
add
adc
add
aam
mov
mov
jnp
lahf
xchg
and
push
mov
push
outsb
mov
push
xchg
pop
imul
push
scas
ljmp
scas
in
push
imul
mov
mov
jo
and
and
orl
int3
mov
xchg
mov
adc
cmp
jmp
jecxz
nop
mov
scas
adc
mov
jae
stos
sarl
mov
jl
add
sub
sub
push
add
or
xchg
xor
xor
data16
addr16
pop
pop
test
jl,pt
sbb
imul
jo
and
mov
movsl
jae
jp
lock
mov
sarl
into
test
dec
in
or
dec
cmp
or
add
aas
cmp
nop
jns
xor
xchg
adc
out
out
jp
outsl
push
dec
clc
insl
add
lcall
dec
jae
xchg
clc
dec
pop
mov
je
xchg
push
sahf
fmull
mov
adc
mov
jp
movsl
inc
data16
add
into
fisttpl
adc
repnz
movsl
loop
andl
inc
lcall
dec
lahf
push
inc
sti
inc
xchg
je
insl
nop
fwait
mov
mov
sarb
cmc
shrl
inc
xor
cmpsl
sti
push
mov
mov
xor
mov
insb
into
adc
call
test
faddl
dec
adc
cmp
lds
fcomps
sub
jo
or
sti
sub
hlt
out
add
mov
sub
pop
movsl
fidivl
cmp
pusha
xchg
sbb
mov
add
ljmp
add
mov
in
mov
dec
push
cwtl
stos
add
fidivs
adc
jbe
push
stos
test
or
int3
mov
mov
mov
and
loop
jecxz
test
dec
aad
xchg
push
stc
fs
aad
sti
xchg
shr
push
jecxz
cld
and
dec
movsb
dec
cmp
dec
out
out
aad
icebp
mov
aaa
add
flds
push
mov
xor
cltd
fistps
add
pop
je
insb
ds
int
stos
popa
dec
sti
mov
popf
adc
cmpsb
push
leave
sub
push
xor
andl
fnstcw
and
push
xor
std
out
inc
xchg
rcrl
jmp
sub
or
or
fsqrt
mov
and
adc
pop
fwait
adc
cmp
stos
or
mov
lea
fistpl
adc
xchg
and
jge
faddp
jns
in
ja
stos
push
out
pop
sti
adc
jns
nop
cmpsb
xor
fs
std
dec
stos
aad
cmp
lea
xchg
push
pop
jne
and
pop
jmp
cmp
mov
push
outsb
mov
inc
call
cwtl
xor
sbb
mov
or
mov
push
shl
je
imul
out
push
adc
push
out
mov
ret
lods
add
jmp
lods
and
push
jecxz
out
mov
ds
insl
mov
orb
into
add
jmp
xchg
rcr
loopne
mov
mov
push
xor
fwait
daa
sti
sbb
adc
mov
inc
sbb
pop
lcall
xor
rcrl
xchg
bound
test
and
push
mov
push
sbb
js
dec
out
cmc
lods
loopne
pushf
dec
mov
sub
lcall
mov
inc
inc
pushf
sub
cwtl
shl
xor
lahf
into
daa
cmp
cmpsb
movsb
jecxz
mov
rcrl
or
test
xchg
mul
mov
or
in
ficoms
loopne
mov
adc
out
fimuls
mov
jnp
loopne
bound
loope
sub
or
pusha
dec
in
jmp
mov
or
into
pop
push
ret
inc
add
dec
lods
sub
rcrb
pop
add
push
jmp
adc
fsts
test
lds
mov
out
jo
add
adc
jmp
int
pop
fs
dec
or
push
inc
ds
sbb
dec
pop
dec
mov
dec
jg
fbstp
mov
inc
dec
sub
fcmovbe
mov
and
adc
iret
js
xchg
mov
pop
mov
xchg
jmp
push
in
fs
sbb
outsl
sbb
adc
mov
push
lods
add
cmp
int
hlt
sub
shlb
mov
mov
sbb
les
into
scas
mov
mov
or
mov
mov
ja
jno
inc
xor
jnp
fisubrl
fld
xor
test
lock
sub
in
nop
aas
faddp
fnsave
mov
push
adc
and
pop
add
sbb
cmp
pop
sahf
hlt
jae
lahf
xorl
xor
cmp
mov
iret
mov
ds
ja
popf
mov
mov
bound
pop
mov
lea
lret
sub
out
out
xchg
inc
lods
clc
das
stc
inc
bnd
sub
mov
add
mov
adcl
das
out
subl
repz
lea
pop
mov
lock
mov
inc
loopne
push
xchg
sbb
and
jge
xchg
or
inc
push
mov
addr16
lods
stc
pslld
cwtl
addr16
cmp
xchg
jno
mov
inc
xchg
stc
mov
and
adc
dec
or
sub
xchg
mov
cmpb
lds
mov
cmp
fidivs
aam
pop
add
mov
and
jl
aaa
mov
dec
jae
pop
add
inc
das
sub
jo
inc
jp
pop
jle
mov
lcall
xlat
out
jno
sbb
lock
clc
inc
repnz
dec
imul
outsb
shlb
push
out
pushf
rorl
add
in
or
pop
mov
lret
or
push
arpl
in
cltd
das
push
int3
ja
fs
and
repnz
daa
outsb
pop
mov
cmp
xor
xchg
icebp
add
clc
sub
adc
xor
leave
sub
les
xchg
ret
push
or
sub
sbb
dec
jg
insl
shll
stc
mov
clc
imul
jl
push
sbb
fadds
enter
lret
mov
and
inc
sbb
sahf
iret
cwtl
sub
lret
adc
mov
jne
mov
loop
clc
jne
fadd
mov
sysexit
xchg
imul
dec
lcall
inc
in
por
jl
insl
xchg
pop
cmpsl
gs
dec
lea
inc
filds
jle
and
fldenv
movsb
mov
mov
scas
jns
mov
sahf
push
sub
arpl
xor
outsl
dec
inc
sbb
xor
aaa
nop
fists
out
lock
arpl
adc
lods
cmp
gs
push
psubsw
movsl
jo
jp
in
mov
mov
test
cmp
mov
or
hlt
add
sbbl
int
push
leave
aas
adc
mov
inc
adcb
lods
aas
xor
psubw
xchg
aas
js
cmp
or
outsb
and
out
mov
fcmovne
mov
mov
test
sahf
into
mov
xchg
dec
aam
es
in
arpl
dec
movsb
ficompl
add
jae
cmpsb
loope
shlb
loop
dec
in
cwtl
xchg
jo
pop
cmp
xor
sub
cmp
xchg
pop
push
jb
rcll
jne
fmul
mov
push
loop
inc
cmp
popf
pop
and
rcrl
mov
pop
mov
mov
scas
arpl
sub
sub
sbbb
push
mov
sub
jns
pop
cmp
jnp
out
jg
xchg
jg
addb
ss
xchg
mov
in
sbbb
test
idiv
hlt
fimuls
movsb
mov
das
dec
and
or
je
das
fnstenv
rcll
shrl
push
add
out
or
and
addr16
fwait
jnp
lcall
jno
jp
test
stos
push
stos
xchg
loope
ja
mov
mov
jg
andl
mov
add
test
in
mov
data16
mov
cmp
dec
mov
push
jns
out
lret
lea
lock
add
shlb
lret
data16
sub
pop
jl
out
push
jmp
push
outsl
outsl
cmp
mov
movsl
adc
add
lods
jecxz
addl
cmp
push
xchg
leave
addr16
add
jecxz
les
xlat
jge
daa
xchg
into
mov
sub
push
in
mov
fstp
cmc
decb
ret
pop
mov
xchg
test
jne
les
sub
adc
and
xor
pop
fnstenv
les
ljmp
and
mov
add
xchg
les
and
cmp
cmc
sbb
mov
push
adc
push
xchg
ret
pop
mov
and
rorb
insb
cltd
hlt
jl
jae
vucomiss
fmulp
push
js
nop
in
addl
lcall
push
movsl
mov
aam
dec
push
push
adc
xchg
hlt
adc
imull
mov
or
cmc
dec
test
ficoms
pushl
adc
cmpsl
nop
and
shl
mov
jb
dec
pop
pushf
roll
mov
leave
cmp
mov
pop
push
xor
dec
pop
js
xchg
dec
and
dec
inc
jbe
jno
ljmp
or
lret
outsb
enter
lea
and
sbb
sbb
push
sub
addr16
pop
inc
adc
sbb
addr16
imul
sbb
mulb
push
movsl
push
out
xor
int
fdivr
xchg
push
mov
dec
pop
inc
add
rorb
sbb
xor
push
testl
jbe
xlat
and
lock
add
test
or
jne
lcall
and
adc
scas
outsb
out
outsb
repz
jmp
mov
arpl
bound
xchg
ja
loop
sbb
add
push
aad
aad
addr16
in
add
es
xchg
aas
rdpmc
movsb
push
or
add
sub
push
sub
mov
jno
add
sub
loope
mov
sti
inc
rolb
xor
clc
sbb
cmp
or
lret
add
cs
lods
movl
bound
inc
jb
sahf
int3
xchg
gs
lods
cmp
sub
xchg
fdivr
dec
or
cmc
ss
adc
cmp
adc
sti
popa
adc
add
add
psubusb
out
mov
pop
sbb
in
xchg
cmp
inc
pop
xchg
mov
pop
sarb
bound
jne
pop
add
adc
push
jno
xchg
xchg
push
out
lods
imul
pop
cmp
sti
add
xchg
clc
pop
xchg
add
lea
xchg
adc
push
adc
pop
stos
dec
jg
jecxz
pop
xor
inc
sub
enter
and
push
sub
xchg
popa
jecxz
bound
dec
stc
mov
out
add
test
lcall
xchg
cld
shll
ja
or
and
push
jle
loopne
enter
or
sub
xchg
daa
insl
cmpsb
fnsave
xor
dec
loopne
or
stc
sub
mov
lock
or
ret
loop
xchg
push
aaa
mov
mov
inc
mov
push
addb
sti
adc
xor
scas
jge
imul
cmp
pop
push
mov
outsl
xchg
adc
int
scas
fsubl
test
pop
lret
mov
cld
dec
repz
jmp
mov
icebp
cli
lahf
pusha
into
movsb
pop
clc
jbe
pop
lea
fldt
ljmp
xor
fdivrl
or
mov
daa
iret
inc
iret
and
in
sahf
dec
xor
xchg
shl
dec
paddusw
pop
cmpsb
push
sbb
loopne
sbb
insl
imul
arpl
std
add
lret
das
xor
jno
push
gs
popl
mov
pop
xchg
fldt
dec
adc
mov
dec
pop
mov
sbb
insb
add
mov
mov
dec
shr
adcl
popa
pop
mov
sbb
cmp
mov
in
fiadds
cld
cmpsb
sbb
inc
cmp
cwtl
nop
mov
addr16
sbb
pop
xchg
cli
neg
xlat
scas
xor
adc
add
into
jmp
or
sbb
dec
sar
repnz
jle
adc
mov
or
mov
inc
test
pop
pop
mov
mov
loop
roll
sbb
sub
mov
push
scas
mov
sub
push
sarl
add
xchg
mov
cmp
sti
adc
push
loop
dec
leave
jmp
repnz
imul
fstl
cli
aam
cmp
pop
jae
mov
in
push
dec
mov
inc
popa
or
dec
cmc
push
pop
xlat
cmp
push
hlt
pop
push
cli
scas
mov
jl
data16
rclb
push
push
adc
icebp
gs
aam
cwtl
mov
pop
cwtl
roll
or
inc
jg
out
ja
in
jae
in
mov
sub
mov
sub
popf
fisubs
nop
add
enter
mov
ret
in
sub
sbb
in
je
or
jl
imul
lea
jnp
dec
ljmp
in
sub
jb
repz
cmp
xchg
inc
fbstp
cmp
mov
test
jge
adc
rcrl
ss
popf
adc
sti
ja
adc
jno
hlt
xor
imul
out
mov
pop
repz
push
inc
and
sti
cmpb
xchg
and
loopne
xchg
in
xchg
xor
sti
scas
jge
lahf
xchg
fadd
add
je
fmuls
shrl
pop
add
push
mov
mull
into
push
mov
add
add
push
and
mov
fstl
out
arpl
push
pusha
cli
ljmp
add
icebp
sahf
adc
dec
pavgb
and
mov
adc
dec
mov
mov
je
scas
leave
mov
adc
lods
mov
cld
not
dec
xor
cs
lret
mov
sbb
adcl
pushf
xchg
les
jecxz
das
pop
stos
mov
mov
repnz
fwait
fs
sbb
or
and
loop
jns
mov
mov
mov
int3
aam
negb
pusha
mov
xchg
fisubrl
in
push
ret
fdivs
clc
stos
pushf
pop
jno
popa
pushf
inc
and
ss
jnp
mov
adc
rol
aas
aas
push
adc
loope
mov
add
add
inc
pop
push
xor
fwait
int
sub
sti
xor
xorb
sub
repz
inc
mov
das
mov
pushf
aas
or
or
or
xchg
push
in
pop
pushl
mov
out
fisubs
inc
inc
shlb
fs
add
or
push
std
mov
sbb
cmp
scas
aas
push
addr16
sub
add
mov
ds
clc
mov
push
mov
fcmovb
mov
pop
adcl
movsb
int3
inc
xor
sub
inc
mov
out
xlat
aaa
inc
mov
fistpl
jecxz
out
jne
sbb
pop
lahf
in
adc
adcb
xor
out
bound
addl
cmpb
sub
mov
arpl
pop
outsb
in
mov
rol
sbbl
popf
push
es
insl
mov
andl
adc
cmp
setge
mov
loope
mov
jle
sub
xchg
scas
insl
bound
jg
adc
mov
out
mov
cmpsl
mov
dec
addr16
idivb
sbb
xchg
jbe
xchg
cmp
jp
and
das
fstps
insl
fldcw
or
pusha
mov
push
shll
pop
mov
inc
push
shrl
cmp
sub
call
add
cmpsl
lds
andb
push
movsl
test
stos
xchg
rorl
push
add
out
inc
or
in
mov
add
loope
mov
pop
and
mov
mov
scas
loopne
jge
xor
ljmp
or
dec
mov
xchg
inc
sti
movsl
cmp
icebp
divl
adc
and
imul
lret
jne
xchg
jmp
cmp
repnz
xor
or
sahf
loop
imul
cmp
jmp
lahf
fs
adc
cmp
mov
ljmp
lahf
xchg
push
insl
cmp
iret
and
imul
cmpb
pusha
xor
clc
xchg
popa
dec
es
mov
iret
lods
xor
ss
aas
or
loop
fucomp
pop
int3
jle
inc
and
jp
sub
mov
push
sub
jp
cwtl
mov
xlat
mov
push
lea
repz
fdivl
cmpl
lcall
stos
jne
cmpb
out
repnz
es
and
add
inc
mov
aas
jb
repnz
into
fcomps
fmuls
es
inc
arpl
add
adc
jp
enter
fs
in
lahf
pop
aam
es
cli
fwait
aam
sub
or
mov
dec
inc
in
push
in
lods
xor
test
sbb
call
in
jae
shl
inc
inc
mov
fwait
mov
add
add
add
sahf
xchg
ljmp
cmpsb
loop
test
es
bound
pusha
mov
xchg
cmp
mov
pop
nop
mov
mov
cwtl
aam
jge
fcmovnb
repz
stos
xchg
xchg
in
lods
outsl
mov
lods
mov
aas
lods
rol
cltd
xor
xchg
jecxz
push
mov
mov
mov
dec
pop
scas
loop
jp
addl
xor
jle
inc
les
xor
int
das
inc
jae
pushl
jb
repz
stc
jmp
pop
mov
push
cltd
int3
add
push
sub
or
and
in
add
adc
jecxz
fsubs
xor
jecxz
shll
lahf
push
es
arpl
jecxz
aam
ret
jo
sub
sub
fucom
mov
outsb
jae
push
jl
fsts
adc
cmpsb
in
cmp
outsl
movsl
imulb
jecxz
lret
jbe
mov
mov
dec
out
bnd
das
dec
stc
mov
pop
add
and
mov
sbb
add
pusha
sbb
mov
jle
xor
mov
push
xor
scas
mov
adc
and
ja
je
push
movsl
push
sbb
xchg
mov
bound
pop
sbb
daa
in
lret
add
fidivs
push
iret
inc
sbb
rol
popf
lods
push
loopne
lcall
pop
pusha
jbe,pt
adc
lret
stos
and
insb
xchg
xor
sub
mov
setle
and
or
sub
and
clc
push
test
scas
and
in
scas
pop
repz
lahf
and
inc
in
mov
inc
push
pushf
imul
sbb
movsb
xchg
jge
sub
shlb
ss
stos
xor
repnz
jp
test
jp
out
setle
mov
gs
mov
jo
data16
sub
adc
aas
jb
jmp
ds
inc
ja
sbb
rcrl
push
out
movsb
rcrb
jns
fwait
jmp
xchg
mov
sbb
sub
fstp
leave
ljmp
sub
cmc
insl
sub
sub
popa
jg
mov
pcmpeqw
adc
jle
nop
pusha
enter
fcoms
repnz
sub
push
xchg
fisubrl
inc
aaa
test
divb
scas
hlt
in
sahf
dec
js
nop
pop
push
movsl
out
lcall
sbb
sti
or
xchg
call
dec
scas
ss
jecxz
fnstcw
in
into
imul
lock
pop
xor
pop
fcomi
cmp
xchg
mov
outsl
mov
sub
divl
mov
subl
jno
or
mov
xchg
lock
pusha
cmc
cmp
fldt
jnp
loope
add
or
adc
pop
cmp
ss
mov
leave
dec
scas
add
neg
ds
negb
mov
jmp
pop
aas
rorl
and
into
mov
and
mov
sbb
insl
int3
mov
mov
in
cmpsl
aad
ds
lds
pusha
xchg
dec
pusha
adc
ret
test
adc
mov
enter
ds
addl
daa
push
std
jae
das
aaa
sahf
cmp
lret
adc
push
mov
jmp
dec
cmpsl
lcall
push
inc
test
cli
push
xor
jecxz
fwait
sub
les
or
mov
jmp
add
mov
or
cmpsl
mov
mov
out
rclb
mov
lods
lret
into
movl
inc
jle
and
inc
mov
mov
mov
jbe
mov
dec
lods
daa
iret
push
outsl
pop
js
insb
rolb
jnp
ficoms
xchg
push
sub
cmc
push
ret
hlt
outsl
jg
push
movsl
mov
jmp
out
pop
xchg
cs
pop
mov
lds
dec
sub
pop
push
data16
test
add
testl
adc
leave
xchg
xor
loopne
and
push
dec
push
dec
pop
push
sbb
rcrl
mov
xor
mov
or
aad
mov
jp
add
jmp
lea
insl
lcall
hlt
xchg
test
insb
inc
int
mov
jns
in
inc
jno
cltd
das
mov
mov
dec
sub
sbb
cs
mov
pop
insb
and
mov
stos
cmpsl
inc
add
mov
in
fmuls
adc
loope
sbb
lahf
in
icebp
xchg
mov
xchg
push
xchg
or
enter
lock
ljmp
mov
mov
cs
rcr
jecxz
fs
das
imul
repnz
cs
sub
fidivs
fldenv
js
jp
mov
add
mov
rcll
xchg
cmp
inc
divb
ja
repnz
jl
outsb
sub
mov
bound
cmpl
stos
dec
movsl
repz
sahf
sbb
sbb
xchg
and
sub
pop
popa
dec
cmp
mov
pop
jmp
inc
and
sub
lahf
sbb
repnz
xchg
push
adc
movsl
popf
push
call
out
loop
icebp
rcr
popa
sti
jg
pop
sub
jo
push
or
inc
or
push
dec
inc
inc
push
adc
xor
mov
sti
lock
dec
dec
pop
mov
fcoms
jae
push
sbb
jb
fiaddl
pop
and
fs
mov
lock
mov
push
adcl
mov
loop
push
sub
pop
mov
sarl
es
xor
push
jns
out
das
sbb
loope
rcr
jge
in
imul
fstpl
xchg
aam
and
xchg
repz
in
ljmp
lods
jns
mov
orb
cmpsl
popa
jns
dec
xor
divb
push
sbb
pushf
hlt
pop
ja
or
outsb
push
push
inc
xor
push
aaa
pop
xor
cwtl
adc
gs
cmpsb
xchg
lds
in
cli
mov
or
hlt
mov
fcmovu
sbb
cld
adc
aad
cmpsb
outsb
or
xor
ss
xchg
adc
mov
push
dec
shlb
stos
cmpsb
or
sahf
jae
pop
mov
lcall
push
xchg
outsb
cmp
outsb
mov
mov
mov
jno
popf
mov
push
leave
stc
enter
fs
and
aaa
xlat
and
je
mulb
xor
adc
jae
fidivrs
jp
jle
imul
xor
sahf
es
fwait
add
punpckhdq
fisubrs
int3
bound
js
aas
jns
fs
sub
sub
sbb
or
mov
xchg
push
sbb
add
clc
pop
ror
push
and
adc
xor
jg
xchg
cmp
mov
dec
mov
add
repz
jno
sub
icebp
push
mov
loop
lret
aam
insb
divl
xchg
icebp
ljmp
out
xor
mov
cmp
mulb
and
gs
cmpsb
in
adc
shrl
jge
adc
mov
int3
int
and
out
outsb
cmp
leave
mov
shrl
pop
ds
mov
icebp
jge
popf
ds
or
mov
pop
jno
addl
push
stc
xor
pop
ljmp
std
popf
fisttps
imul
mov
daa
std
lods
mov
adc
xchg
negl
popl
out
aad
iret
xor
or
lret
sbb
sti
and
iret
pop
and
push
lea
adc
gs
in
push
sbb
in
fldt
cld
insl
adc
mov
push
cmpsb
enter
dec
iret
scas
add
sbbb
sahf
add
test
insl
fsts
or
push
movb
xor
ficoms
sbb
pop
lock
mov
mov
shrl
aaa
stmxcsr
stos
add
and
mov
mov
push
sub
js
popa
mov
xlat
in
mov
or
insl
dec
mov
mov
das
mov
enter
jmp
into
ret
out
push
or
and
adc
mov
xchg
cmp
cli
popa
or
pusha
sub
out
pushf
sbb
push
jb
insb
dec
sbb
adcb
mov
arpl
xor
outsb
mov
add
jg
loop
loopne
jl
jl
xchg
pop
cmc
mov
ret
mov
and
mov
mov
loope
sbb
sbb
dec
sub
mov
cmpsl
sarl
sub
sbb
add
outsb
jo
push
xor
cmpsb
enter
mov
loop
aas
pop
jge
sbb
insb
push
aas
adc
jbe
pop
out
cmp
sub
xor
jp
fcos
xchg
mov
ja
divb
roll
xor
pop
lock
push
dec
jns
push
fildl
lea
call
push
xchg
ja
in
fst
push
cmp
mov
enter
pop
fs
cltd
les
jg
jbe
push
std
or
or
std
loopne
fildll
inc
roll
subb
scas
adc
repz
popf
xor
rol
pop
dec
xor
pop
jne
and
pop
shl
inc
cmpsl
or
imul
jle
add
or
out
gs
dec
sti
mov
adc
push
iret
jge
or
jl
mov
leave
mov
repnz
iret
xorb
imul
add
sti
aas
add
adc
fldenv
leave
cmc
adc
mov
push
xchg
out
data16
push
or
add
cld
cltd
pop
jp
mov
repnz
xchg
xchg
sbb
imul
push
leave
dec
aad
mov
pushl
xor
mov
dec
sahf
dec
in
sbb
add
jmp
test
mov
loope
sarb
ljmp
push
jo
sbb
sbb
add
adc
iret
fcoms
fs
push
das
mov
push
mov
test
push
in
insl
adc
mov
rcrl
dec
int
pop
push
sti
pop
xor
add
call
pop
or
movsb
pop
pop
arpl
xorl
outsl
mov
gs
fstpl
mov
shl
and
fisttpll
rcrl
sahf
push
mov
and
mov
in
push
adc
sahf
jp
jmp
mov
xchg
mov
cs
fs
jmp
insb
out
mov
test
mov
adcl
and
cmp
jg
mov
xor
and
enter
shr
lcall
ja
push
jp
mov
xchg
sbb
shlb
insb
push
push
pop
rolb
test
sub
imul
ret
or
ss
mov
add
bound
sbb
xchg
lock
dec
sahf
cwtl
addr16
daa
add
mov
sub
int3
mov
mov
sub
shr
imul
pushf
jne
mov
loop
inc
cs
and
rcl
fadd
data16
ds
jbe
stos
jp
sbb
fcmovne
push
sbb
lret
xor
out
jle
fsub
xor
out
das
scas
clc
xor
pop
not
dec
notl
mov
shrb
xor
mov
push
sbb
sbb
mov
or
fnstsw
rorl
lods
xchg
mov
nop
scas
sub
adc
cwtl
and
ja
mov
xchg
pushl
push
sbb
shl
pop
shll
imul
js
push
leave
fs
sahf
cwtl
enter
ljmp
lea
jne
aam
pushf
mov
inc
xchg
jbe
addr16
cmp
subl
adc
das
or
adc
ret
test
xlat
sbb
dec
or
out
pop
out
xor
xchg
je
fldl
movsb
pop
in
mov
out
ret
js
cmp
out
fsts
in
and
icebp
les
push
jns
ja
inc
std
pop
mov
cwtl
mov
dec
jne
sbb
jge
mov
cmp
jmp
fbstp
addr16
pop
testl
or
or
loope
xchg
mov
and
pop
mov
int3
push
outsb
sahf
repz
or
add
and
jb
cmp
js
into
aaa
lret
call
cmp
dec
lods
lock
pusha
add
orb
adc
das
test
scas
inc
pop
jb
rorb
orl
popf
xlat
lea
push
sub
fdivr
push
cmp
imul
clc
fldcw
mov
push
xchg
push
sub
cmp
je
cmp
dec
je
mov
ds
insl
rol
mov
adc
push
mov
wrmsr
mov
stc
pop
mov
in
adc
mov
lcall
cmp
pop
in
int3
inc
and
push
xor
sbb
in
das
add
neg
jno
pop
jp
pminub
inc
sub
movsb
xchg
or
cmpsb
cmp
fstl
daa
sbb
sti
jb
and
rolw
fidivl
das
cmp
xchg
xor
sbb
aad
mulb
fdivl
es
dec
mov
fnsave
cmpsl
jl
jmp
xchg
or
ds
mov
add
mov
daa
pop
xor
pop
loopne
xor
xchg
cmp
sub
pop
ret
out
in
orb
lahf
pop
xchg
outsl
divb
jb
shlb
mov
dec
and
push
mov
add
rclb
cltd
sub
jnp
fmull
mov
movl
bnd
cmp
loop
mov
mov
sub
push
sahf
mov
cld
or
xlat
jp
inc
mov
pop
add
adc
mov
push
imul
or
ss
movsl
popa
jge
scas
pushf
xlat
jl
scas
loope
sahf
or
jb
sub
or
das
mov
inc
insb
sub
push
stos
push
mov
xchg
push
lods
test
setl
lods
mov
sub
mov
shll
loopne
mov
fwait
dec
and
sbb
sahf
inc
jge
das
jecxz
std
aas
stos
cltd
mov
mov
aas
cli
cmp
adc
sub
push
inc
lods
lret
mov
out
adc
push
adc
outsb
sbb
ja
cmc
sbb
inc
sub
mov
ret
sub
push
out
out
xor
mov
adc
loope
mov
push
imulb
into
test
rcl
inc
nop
fucomi
ljmp
push
incb
sub
or
adc
test
jnp
mov
cld
inc
mov
loop
iret
adc
mov
cli
pop
out
aas
add
leave
sub
mov
mov
movsb
mov
rcrl
adc
cld
insl
lods
jl
jl
inc
mov
cmp
and
lahf
mov
aas
xchg
push
loopne
pushf
push
fsubs
sub
jno
lret
sbb
mov
cs
repz
inc
jo
fnsave
aad
add
pop
insb
test
scas
jge
mov
add
sahf
mov
mov
adc
adc
push
enter
adc
mov
mov
sbb
jne
lods
mov
shrb
add
dec
adc
xchg
fwait
or
jo
add
and
stos
jno
outsl
repz
sbb
out
leave
cmpsl
jg
push
xor
stc
lret
ret
adc
pop
jle
std
movsl
insb
add
and
add
aam
push
mov
out
jle
jmp
mov
inc
xchg
hlt
xchg
in
call
push
sbb
mov
iret
adc
iret
lds
push
mov
stos
sahf
divl
test
ds
insb
cmp
pop
in
push
xor
mov
loopne
inc
add
mov
cmc
push
mov
jae
cmc
and
orl
sub
loopne
mov
or
push
dec
call
push
call
xchg
mov
lods
jns
dec
jns
xchg
test
mov
push
testl
sbb
cmpsb
push
imul
push
xor
push
mov
mov
je
xor
and
add
mov
in
roll
add
jge
pop
sub
icebp
lds
mov
js
roll
xchg
bnd
stc
cmpb
inc
inc
repnz
adc
inc
sub
and
dec
sub
mov
inc
dec
ja
and
out
sbbl
aas
mov
xorb
sbb
mov
mov
mov
sub
xchg
push
xchg
sbb
or
pop
mov
pop
fcomps
cltd
dec
fs
xchg
mov
xor
adc
mov
mov
sbb
push
add
xchg
or
cmc
jmp
pusha
fwait
sbb
push
xchg
add
mov
orb
mov
mov
pop
pop
push
pop
jmp
pop
sub
and
or
daa
sub
sub
xor
mov
sbb
out
xchg
in
pop
fs
jp
mov
push
shlb
mov
xchg
sub
movsl
aas
mov
xor
cmpsl
mov
mov
test
cs
ds
aas
out
mov
ffreep
xchg
insb
or
sbb
out
fmuls
push
sti
sbb
and
stos
pop
xlat
lret
dec
cwtl
test
mov
fisubrl
xchg
xor
cmp
push
int3
xchg
mov
lods
jmp
hlt
leave
cmp
jno
xor
add
aad
testb
and
xor
xchg
fcoms
loope
lret
xchg
ds
out
mov
xor
xchg
jmp
xchg
loop
xchg
fstl
es
ljmp
lods
dec
add
gs
cmpsl
sahf
and
and
addr16
jmp
in
xor
idivb
cmpsl
mov
shll
mulb
out
gs
pop
add
icebp
and
insb
xor
xchg
xchg
inc
mov
sbb
out
hlt
adc
jae
lds
daa
mov
lahf
jp
testl
dec
arpl
add
cmp
lods
lock
test
into
and
test
leave
and
mov
data16
mov
insb
jns
cld
mov
cld
call
test
add
ja
jle
lahf
out
cltd
mov
cld
dec
push
ficomps
xchg
shrl
clc
cli
loop
imul
adc
outsl
imul
jb
xor
fwait
leave
in
sub
mov
mov
and
sub
out
movsl
push
jb
add
inc
adc
jae
jle
aad
sbb
sub
notl
mov
adc
out
jbe
fmul
ja
ficoml
xchg
in
push
jbe
lock
test
sbb
pop
add
ds
mov
pop
sub
mov
notb
adc
push
mov
popf
add
push
cmp
sbb
test
push
mulb
xchg
mov
xchg
push
mov
loope
dec
lods
xchg
and
mov
pop
xor
into
xor
mov
mull
push
int
bound
xor
cmp
dec
jb
mov
sti
enter
mov
mov
push
sbb
icebp
sub
sub
xlat
into
jmp
inc
jp
sbb
imul
ret
jo
mov
sub
adc
jecxz
push
cmp
push
cmpsb
ret
lods
ja
add
cmpsb
cs
cmp
adc
repz
jne
icebp
lea
push
sbb
and
sub
xor
dec
push
insl
xchg
dec
clc
push
into
xchg
adc
cli
inc
cmpb
cmc
les
mov
movsl
aaa
shrl
push
test
js
lret
in
popa
and
jge
mov
lea
cmp
sbb
mov
mov
int
push
inc
cwtl
sub
insb
insb
lret
xor
push
sbb
repnz
test
mov
lea
adc
mov
xor
jns
and
push
sbb
insl
or
cmp
pop
push
push
fs
daa
nop
into
inc
stos
xchg
das
dec
aad
xchg
aam
aam
lods
sub
out
xlat
std
test
les
into
call
adc
out
ljmp
icebp
loop
or
pop
int
xchg
aad
out
mov
add
orb
pop
jnp
je
call
shlb
sub
push
loopne
adc
push
sahf
aaa
lret
xchg
lret
fldcw
cwtl
mov
jae
sbb
mov
fnstsw
std
push
push
xor
mov
sarb
ret
or
mov
push
loop
loope
add
lret
jo
jg
jae
movsb
sbb
test
xchg
pop
ja
cltd
enter
adc
cwtl
add
push
add
jno
and
sbbb
repnz
mov
fistpll
insl
push
add
cs
dec
inc
scas
stos
pusha
mulb
jl
lods
cmp
fs
jmp
jge
loope
in
add
ljmp
out
lret
mov
pop
fisubs
ss
jne,pn
cmpsb
mov
push
inc
lea
aaa
jg
add
leave
mov
xchg
add
lcall
ja
push
jno
adc
lock
xor
xor
add
cmp
jp
push
push
out
or
cmc
aam
mov
jae
rcrb
aad
adc
pop
scas
outsl
push
add
subl
test
scas
sub
mov
fdivrs
mov
mov
aaa
xor
inc
inc
in
mov
adc
pop
adc
cmc
hlt
sti
daa
sub
pop
test
xchg
add
pusha
loop
jns
clc
pushl
jecxz
ja
fcoms
jb
and
mov
add
sbbl
sub
push
sub
imul
lret
dec
jl
mov
mov
movsl
fists
mov
lods
mov
cltd
mov
imul
jo
cli
or
push
xor
cmp
cmp
push
mov
fildl
jge
mov
or
mov
dec
pop
pop
nop
push
cmp
and
lock
and
stos
out
shr
cmpsl
mov
in
fcoms
inc
shll
cmpb
ljmp
lock
add
xor
std
lret
mov
xchg
xchg
outsl
jbe
pop
mov
mov
mov
sbb
mov
jmp
test
cwtl
and
xchg
mov
enter
xchg
push
mov
add
cmpsb
adcb
cmpsl
in
dec
push
shrl
dec
and
ds
pop
mov
sub
jmp
cmp
jnp
sub
mov
je
test
adc
jmp
lcall
sub
mov
add
xor
aaa
mov
mov
cwtl
cmc
inc
testl
sahf
fsts
xlat
xchg
sub
pop
or
push
lcall
hlt
jge
push
call
xor
or
repnz
mov
out
insl
push
enter
cmpsl
mov
popa
test
bound
push
adc
xchg
outsl
inc
iret
push
pop
adc
mov
cmp
ds
lret
cmpb
inc
stos
add
xchg
enter
push
cli
inc
imul
je
mov
flds
mov
dec
lods
add
jb
sar
in
sbbb
add
push
ljmp
dec
sti
ja
dec
sahf
or
inc
js
sub
inc
cltd
sbb
cmp
test
add
push
and
jl
outsl
inc
xor
in
cwtl
mov
lods
jno
ret
dec
xchg
mov
sub
mov
sub
mov
push
cmpl
mov
imul
add
inc
mov
push
loopne
cld
jae
stos
data16
daa
jp
outsb
test
push
scas
mov
jp
shrb
sarl
pop
inc
xor
test
out
or
in
and
mov
sub
ror
adc
inc
fsubrs
pop
cli
push
mov
jg
mov
jmp
arpl
sarb
mov
fiadds
mov
mov
push
mov
nop
lcall
and
mov
or
and
cwtl
fnstsw
mov
imul
cmpsl
push
loope
aaa
sub
push
orl
pusha
scas
xchg
decl
fisubl
pop
ror
mov
data16
mov
lret
sti
scas
inc
in
out
add
nop
jmp
cmpsb
fnsave
push
movsl
sub
pop
imul
clc
cmp
leave
std
dec
rorb
mov
in
or
adc
inc
into
push
fwait
in
adc
imul
mov
inc
pop
in
cwtl
stos
jp
push
mov
xchg
mov
adc
mov
xor
repz
xchg
push
cwtl
push
xor
mov
mov
test
adc
insl
jne
sbb
int
rcrl
xchg
jg
insb
sbb
fnclex
repz
xor
data16
ja
xchg
mov
test
xlat
lods
pop
push
insb
int3
je
pop
sub
xor
dec
xchg
sbb
push
imul
add
mov
mov
cmp
in
mov
and
ds
dec
jp
sarb
and
loopne
xchg
rcll
pop
out
jl
push
into
in
mov
test
dec
xchg
add
aam
aaa
dec
div
mov
adc
out
sbb
mov
lods
dec
cmp
jae
and
lret
or
iret
js
jne
inc
pop
fnstcw
cmpb
xchg
adc
stos
ss
icebp
xchg
mov
imul
or
xor
jne
jae
stos
or
xchg
scas
or
pusha
cmpb
orb
sbb
fmulp
pop
popa
leave
popa
iret
icebp
call
push
scas
outsb
enter
mov
add
dec
and
loopne
fs
vmaxps
neg
scas
mov
pop
or
out
pop
sbb
mov
cmpsl
push
mov
dec
nop
jnp
dec
fcoml
mov
and
push
ljmp
cmp
in
jl
push
in
pop
outsl
push
jmp
push
shll
jmp
imul
aas
xchg
fiaddl
dec
and
or
sbb
sbb
lods
pop
rorl
sub
cmp
jbe
sub
jnp
sub
add
cmpsb
mov
fisubrs
xchg
mov
inc
es
mov
out
fs
sub
addr16
mov
pop
rcrb
mov
fisubl
clc
inc
pop
sub
mov
ja
fiadds
mov
cmp
mov
out
sub
add
icebp
add
pusha
lahf
sub
cmp
mov
jmp
push
jbe
lods
adcb
in
jns
jns
loop
pop
or
dec
pop
subb
add
mov
cli
cmc
sub
dec
cmpsl
cmpsb
loop
dec
shll
mov
mov
add
dec
fmul
outsl
loope
or
pushf
ret
fidivrs
jbe
cmp
inc
sbbb
aam
int3
jl
jbe
cld
mov
fwait
adc
mov
sbb
dec
sub
dec
out
sub
push
lds
loope
mov
xor
scas
imul
jae
out
movb
mov
jmp
shrl
popa
clc
pusha
pushf
fucom
lahf
outsb
adc
cmpsl
adc
jae
sti
add
inc
les
repnz
mov
jle
mov
jb
adc
sbb
mov
adc
stos
loope
in
mov
xchg
jbe
inc
insl
xor
addr16
je
push
sbb
mov
adc
jl
pop
daa
adc
enter
das
and
sbb
repnz
lret
lret
mov
test
xor
sbb
sbb
imul
and
repz
xchg
mov
cmp
adc
or
mov
in
and
and
push
push
data16
sbb
stc
push
cltd
xor
daa
fadds
mov
adcb
testb
leave
mov
dec
cwtl
add
fistpll
inc
gs
daa
mov
je
outsl
fnstcw
mov
cmc
cmp
push
fcmove
pop
stos
mov
cmp
mov
popa
lods
pop
pop
mov
lds
adc
cwtl
les
jle
inc
test
xor
es
mov
adcl
idivl
gs
or
dec
adcl
lods
mov
jle
hlt
xchg
sbb
cmc
push
aaa
push
out
test
mov
jmp
lcall
es
notl
inc
shl
pop
and
add
sti
pop
stos
jae
sub
lods
jns
sbb
jge
shr
lcall
test
ret
jle
and
dec
or
outsl
dec
movsb
inc
mul
in
xor
add
xchg
out
adc
mov
inc
xchg
cmpsb
cmp
mov
sbb
jno
int3
test
and
sub
imul
and
sti
mov
sub
cmp
sub
inc
into
lret
cmp
pop
in
inc
jmp
out
inc
nop
mov
in
xor
jb
or
fistps
sub
and
sub
popa
addl
out
xchg
test
sti
popa
std
or
sub
movsl
mov
inc
mov
loop
insb
xor
push
lock
jecxz
mov
popa
pop
xchg
nop
jp
movsl
loop
dec
xchg
aad
cmpsl
stos
cmp
out
iret
add
sahf
jno
pop
dec
mov
pop
xchg
cltd
shll
movsb
cmp
into
dec
repnz
sti
mov
int
stc
ss
fldl
mov
sbb
loopne
fsubrp
repnz
mov
lret
fnstenv
lahf
cmp
adc
mov
ja
xor
gs
sbb
ss
stos
mov
mov
fst
fistpll
xor
leave
rorl
push
mov
mov
cmp
out
sub
dec
xor
iret
aas
mov
stos
dec
inc
ljmp
daa
push
in
scas
out
jnp
push
sub
sub
cmp
sbb
repz
dec
mov
sbb
std
add
inc
lea
out
fwait
rclb
lods
call
dec
adc
jo
xchg
add
jne
push
pop
gs
lret
xchg
fpatan
mov
fstpt
jecxz
int3
nop
sbb
aas
incl
insl
ficoml
jecxz
push
ljmp
lods
loope
mov
push
in
inc
scas
popa
jae
stc
hlt
cmpsl
call
out
testl
ss
std
sbb
jmp
push
sub
int
cltd
js
das
sahf
insb
nop
mov
lods
jp
inc
xor
push
dec
lret
xlat
aam
test
call
mov
movsl
sbb
push
xchg
rcll
jmp
aad
xlat
mov
xchg
push
and
fidivl
or
ds
std
xor
dec
ljmp
cmc
pop
pop
outsb
lret
shr
js
cmpsb
jg
xchg
sbb
inc
pop
adc
adc
mov
or
pop
or
pop
adc
cmp
xor
sbb
jecxz
call
xchg
xor
pop
and
pop
adc
sbb
mov
xchg
sub
cmp
sub
rorl
inc
jg
movsl
in
inc
jmp
js
daa
out
mov
pop
xor
and
pop
sub
and
inc
insl
mov
mov
inc
mov
xorl
add
sub
rolb
fwait
cmpsl
mov
loope
lea
push
jns
xchg
and
fsubs
movsl
sub
dec
push
cltd
or
dec
ret
nopl
cwtl
lcall
mov
es
les
cmp
mov
xor
fwait
dec
sbb
dec
ljmp
jge
fcoms
clc
sahf
push
mov
push
push
pop
movsl
out
insl
fstpl
daa
fnstenv
ret
mov
mov
je
into
pop
je
push
or
aad
les
dec
sti
push
jae
pop
aas
dec
mov
jns
mov
leave
test
loop
sub
subb
ffree
push
mov
dec
imul
jge
xor
add
rclb
imul
stos
and
outsb
mov
mov
arpl
in
movsl
ljmp
dec
jge
cltd
lea
push
jge
cmp
mov
xchg
inc
fdivrs
jb
loop
jne
pop
pop
adc
pop
dec
pop
sbb
repz
cmp
sbb
mov
sti
xor
loope
cmp
sbb
mov
cmp
std
je
jne
mov
lods
mov
sub
adc
add
in
mov
sbb
xchg
jnp
adc
negb
sbb
and
fiadds
insl
mov
pop
cmc
xchg
jbe
mov
jle
jns
mov
sbb
xchg
mov
ret
sub
cmpl
inc
cli
lock
nop
mov
int
and
xchg
scas
xchg
ret
sub
push
xchg
gs
movsl
mov
dec
jno
arpl
aam
mov
jnp
cli
jne
inc
ss
sub
jmp
xchg
stc
std
leave
inc
movsl
cmp
pop
sbb
fildl
mov
in
adc
nop
jl
shll
adc
arpl
aam
jnp
xchg
mov
testb
mov
gs
iret
push
movsl
jg
or
rorb
clc
jl
add
scas
mov
mov
mov
js
shrl
sbb
sbb
jecxz
sahf
ss
ja
xchg
rcrb
cmp
outsb
mov
mov
xchg
add
push
sub
jecxz
imul
push
scas
and
dec
adc
rcrl
stos
mov
pop
mov
dec
es
mov
push
or
sub
mov
std
jbe
fldl
cmp
addb
push
lock
and
mov
ret
and
fmull
hlt
sub
lahf
inc
pop
xchg
add
or
insl
sbb
movsl
jne
data16
sub
lahf
xor
ret
lcall
in
mov
xlat
stc
cs
rorb
int3
sub
or
cltd
pop
imul
sub
jmp
sbb
inc
mov
ss
clc
arpl
jnp
adc
add
mov
sahf
push
ds
push
or
repnz
mov
jb
pop
push
xchg
lea
insl
push
xor
dec
mov
insl
cmp
jmp
ret
in
aam
out
aas
test
fnsave
lret
mov
test
orb
inc
imul
sbb
mov
sahf
out
mov
or
clc
push
xor
xchg
or
dec
cli
out
or
fwait
iret
push
and
data16
rclb
and
push
dec
lods
xor
pop
pusha
mov
add
shll
push
push
pop
mov
loop
orb
or
inc
mov
int
cli
mov
xlat
enter
and
adc
dec
repnz
shl
pusha
popf
ja
int
popa
dec
fstpl
jle
jle
out
lods
fwait
testl
lds
cmpsb
cmp
out
jb
jno
sbb
jmp
cmpsl
push
call
movsl
mov
cwtl
nop
mov
ja
xchg
sahf
mulb
fwait
jg
in
es
or
dec
fdivr
mov
and
sbb
xchg
je
jge
and
insl
std
cmpl
lret
push
mov
insl
pop
jle
push
push
cs
lcall
shll
lods
inc
push
push
fs
ljmp
cmp
test
mov
xorb
add
push
inc
fst
imul
push
in
idivl
mov
mov
stc
out
daa
sub
add
and
xor
sbb
sbb
push
push
aam
imul
add
loope
xchg
popf
fadds
push
lods
adc
pushf
lock
mov
sub
fiadds
je
or
add
fisubs
adc
push
notb
fs
ficoms
out
sbb
scas
imul
cmpsb
mov
cmp
dec
test
stos
jns
push
fidivl
cld
jne
add
pop
dec
popf
cmpl
pop
popa
pop
andl
xchg
dec
jne
sbb
add
mov
data16
imul
adc
push
test
xchg
stc
int3
sar
push
cwtl
imul
push
fstpl
test
popf
cwtl
push
pop
fistps
sbb
jmp
popa
cltd
add
push
in
xchg
inc
push
mov
data16
cmp
push
adc
mov
stc
mov
sub
mov
data16
mov
add
fnsave
add
iret
inc
add
cmp
xor
mov
xchg
inc
lods
mov
cmp
mov
fmul
cli
cltd
pop
cli
push
push
xchg
add
mov
loop
inc
mov
xchg
and
and
and
pop
into
adcb
rclb
push
cmp
imul
mov
pushf
lods
dec
je
jb
xchg
ret
push
pop
sbb
xchg
jl
pop
pop
mov
ja
icebp
popf
push
jp
cs
pop
adc
das
cmp
xchg
ljmp
imul
int
int
xchg
sar
xlat
movsl
outsb
mov
dec
jno
push
xor
rolb
and
mov
add
jmp
mov
bound
xlat
mov
xchg
adc
test
out
cmp
cmp
fwait
sahf
repz
pop
lds
lock
repz
xchg
sbb
xchg
xor
test
adc
sbb
mov
jge
sbb
adc
adc
call
enter
lret
pop
add
jle
stos
movsl
inc
xor
fucomip
lcall
jecxz
nop
jecxz
mov
scas
test
pop
jle
mov
cs
add
pop
mov
jnp
outsl
mov
pop
addb
enter
jo
inc
cwtl
push
mov
push
test
fsts
es
cmp
shll
mov
repz
dec
sbb
mov
push
icebp
push
adc
xor
and
bound
cld
test
lret
in
addr16
notb
pop
fs
push
sbb
fstpl
xor
pop
notb
mov
or
inc
ja
sub
and
inc
pop
xchg
mov
jecxz
inc
fcompl
sub
cmpsl
sti
lret
and
jg
rol
stos
movsl
insl
fs
hlt
mov
push
jecxz
fisttps
cwtl
test
push
lods
push
inc
xchg
inc
jge
subb
sub
cwtl
dec
cmp
or
mulb
cmpsb
aas
xor
sbb
jbe
xorl
out
adc
fldcw
push
push
decb
movsl
sub
jnp
rorb
push
fldcw
cmpsl
cmp
dec
mov
sbb
xor
fisttpl
insl
sub
dec
inc
mov
cmpsb
push
pop
sub
test
mov
stos
dec
cli
jns
lret
mov
lret
gs
negl
and
jle
jo
fdivp
adc
sbb
push
push
cmp
and
dec
dec
push
test
xor
in
push
fldt
aas
ljmp
mov
sub
cs
sbb
mov
cmp
add
mov
adc
testb
decl
mov
addr16
mov
insb
push
sbb
mov
adc
inc
mov
outsb
iret
stos
inc
mov
dec
sarb
repnz
dec
xor
adc
sub
dec
add
jb
sub
xchg
xchg
and
pop
push
shrl
cmpl
xchg
pop
inc
sahf
jae
test
iret
in
jae
mov
je
rcll
push
cmpsb
dec
jge
std
mov
inc
in
cld
fsubl
cmp
movl
int
pop
out
adc
add
test
fwait
into
cli
xchg
gs
aas
push
ret
arpl
push
sub
into
pop
rol
aad
adc
neg
adc
pop
lea
xor
adcb
mov
lahf
jae
adc
js
mov
dec
cwtl
xchg
push
xchg
notb
cld
out
scas
mov
stc
pop
jbe
push
lods
out
inc
push
arpl
pop
mov
sbb
dec
test
sub
mov
mov
pushfw
pop
scas
data16
or
and
adc
outsl
int3
jecxz
dec
popf
xor
xor
jge
or
inc
and
ficoml
pop
pop
in
mov
sub
mov
in
cmpsb
push
fstps
and
cli
push
les
xor
dec
jae
jb
dec
inc
sub
add
jle
arpl
fistl
fiaddl
mov
jno
xorl
adc
movsb
adc
xchg
jb
popf
into
inc
adc
data16
push
sub
pop
jb
fisubrl
pop
mov
adc
dec
mov
mov
inc
test
push
mov
stos
mov
dec
xlat
popa
xorb
cmp
lret
test
pop
iret
push
ror
repz
and
out
inc
push
js
imul
stc
push
and
inc
dec
sbb
loop
and
push
jl
sub
xor
xor
pop
pop
cs
fcmovbe
divb
in
clc
shlb
xchg
popa
dec
aam
aas
aad
xchg
and
and
loope
mov
mov
push
sahf
jnp
js
in
popf
into
ljmp
mov
loopne
ffree
fisubrs
mov
push
mov
jp
test
mov
scas
mov
lods
popf
sub
and
dec
mov
aam
xor
jbe
bound
popf
ret
xchg
test
out
insb
push
subl
jge
mov
ret
dec
stos
in
push
inc
rcrb
pop
das
test
push
adc
and
gs
mov
xor
aam
or
repnz
xchg
test
ret
shrl
sub
push
mov
mov
push
add
outsl
hlt
mov
iret
jle,pn
ja
adc
dec
jp
or
ss
mov
iret
adc
mov
push
out
push
xchg
cmp
xchg
mov
jmp
ret
cmp
popl
and
cmp
push
jno
andl
cmc
cltd
pop
dec
cmpb
rorl
pop
add
cwtl
fs
lahf
mov
push
ret
sbb
repz
mov
jmp
adc
cwtl
mov
cmpsb
add
in
or
scas
sbb
jecxz
ret
push
push
jecxz
ja
pavgw
mov
roll
jg
aam
mov
xchg
mov
pop
inc
fcomi
gs
out
adc
jmp
pslld
test
aas
mov
shrl
mov
xchg
xor
stc
xor
gs
xor
aam
rorb
adcl
imul
test
sti
aad
add
add
loope
fcmovnbe
cmp
fimull
mov
mov
stos
pop
and
sub
mov
fstps
pop
xchg
dec
in
adc
test
ror
sub
in
or
lahf
les
imul
std
mov
fldl
and
sti
repz
adcl
pop
push
or
fisttpll
add
fists
dec
jo
dec
adc
add
popa
shlb
cmpsb
movsb
cs
pop
push
jno
mov
sub
arpl
push
gs
add
mov
adc
cmpsb
push
out
cmp
mov
sbb
add
adc
fwait
xchg
adcl
jne
sbb
test
gs
out
sub
add
repz
pop
fdivl
jae
dec
xchg
inc
mov
and
inc
popa
adc
subl
sub
ds
daa
ret
cmp
subb
jmp
sbb
addr16
mov
jl
jb
lods
bnd
mov
popf
fidivrl
icebp
cmpsl
dec
cli
cwtl
fiadds
jae
les
add
out
inc
xor
out
popf
lret
ds
cli
dec
push
xor
int3
popf
push
iret
xchg
mov
loop
insl
and
push
fdivl
aam
sbb
gs
fdivrs
mov
pop
aam
dec
xor
stc
cmc
outsl
push
fnstsw
adc
int
xchg
nop
cmp
push
loopne
jp
jns
dec
int
stos
jo
push
aam
les
jg
push
out
rcrl
cmp
in
cmp
inc
push
dec
imul
int
fcmovnb
movsb
adc
sbbl
push
dec
fcmovnb
leave
sbb
cmp
mov
jae
scas
pop
iret
fstpt
idiv
stos
shlb
xor
fucomip
add
jge
xchg
lret
pop
outsb
push
inc
jg
push
sbb
pop
inc
mov
ret
or
cwtl
pushf
mov
inc
outsl
mov
mov
sub
jb
insl
sub
ficoml
aam
repnz
int
mov
addr16
je
cmp
xchg
inc
lods
jecxz
mov
aas
cmpsl
mov
cs
imul
hlt
idivl
loopne
xchg
adc
mov
xlat
mov
cmp
pop
pushf
bswap
lods
jae
ljmp
sahf
sub
pusha
pop
sbb
pop
dec
sub
je
call
pushf
mov
jmp
cmp
push
add
dec
nop
insb
popa
stos
xchg
pop
cli
loope
mov
test
stc
cmp
mov
sub
dec
insl
push
dec
inc
mov
popf
and
add
mov
cwtl
in
mov
js
mov
cmp
shrb
sub
call
push
insl
js
pushf
mov
mov
rcrl
mov
int
out
in
push
mov
dec
sahf
jns
xchg
adc
scas
or
xor
mov
stos
jno
jecxz
mov
xchg
push
dec
das
sbb
cmp
xchg
xchg
jecxz
outsl
xor
arpl
lcall
ret
sbb
bound
sub
mov
inc
inc
test
push
outsl
pop
aam
ljmp
mov
add
add
push
sub
mov
loope
jb
stos
int
ja
outsb
jne
jnp
or
stos
ret
add
jle
xor
jge
xor
cli
stos
sbb
icebp
and
in
sub
stc
mov
sub
inc
jecxz
std
call
cld
cmp
xchg
sbb
or
jo
xor
pusha
stos
push
data16
xchg
jnp
in
popf
and
sahf
cmpsl
sbb
dec
jg
push
mov
sub
sub
push
xlat
sub
aas
push
sbb
sub
in
cmc
inc
shrl
xor
or
pusha
pop
add
test
out
mov
iret
or
sub
adc
pop
add
arpl
push
xor
outsb
xor
add
mov
ja
cmp
add
lods
arpl
and
outsl
xchg
dec
cld
loop
out
xlat
shlb
jb
xchg
fwait
ret
adc
aas
xor
rclb
sti
xor
fwait
inc
xchg
and
sub
xor
stos
xor
in
int3
scas
pop
fbld
sub
xchg
cmp
and
adc
jg
bswap
xchg
mov
push
push
cmp
js
inc
call
fstpt
mov
mov
shrb
repnz
in
add
or
mov
pop
adc
jecxz
dec
sub
add
jnp
inc
inc
cmp
dec
adc
pop
jecxz
mov
or
dec
mov
xchg
or
fidivs
pop
sub
mov
mov
rcl
mov
ss
sbb
fstl
fsubl
sbb
sbb
jecxz
mov
ficomps
shl
std
jae
xchg
mov
stc
fildll
pop
mov
sahf
mov
ja
mov
and
and
sahf
cmp
pop
ja
cmc
cld
push
mov
repnz
hlt
dec
cmpb
out
pop
in
xchg
les
cmp
enter
cltd
add
inc
xchg
popf
push
inc
mov
aas
icebp
es
into
imul
js
stc
mov
jl
or
push
fwait
jae
loope
xchg
data16
adc
les
enter
shrb
xchg
xchg
and
and
xor
insl
scas
and
lret
xor
push
lret
out
in
loop
icebp
mulb
je
pop
in
sar
sarl
mov
adc
ljmp
psrlq
and
jg
adc
inc
cmc
sbb
sahf
loopne
jns
hlt
and
pop
in
hlt
adc
stos
pop
mov
xorb
push
push
popa
inc
lahf
test
lcall
and
xchg
xor
xor
mov
sbbb
sahf
xchg
and
mov
add
add
cltd
cmpsl
in
dec
rcl
jb
leave
hlt
pop
out
stos
mov
and
fmull
cmp
bound
cld
leave
or
in
insb
and
sub
aas
jne
xchg
and
lretw
nop
clc
movsb
in
pop
or
cli
mov
xchg
dec
xor
test
inc
scas
loop
inc
insl
mov
adc
sbb
inc
shl
stc
push
fstpl
push
and
ret
mov
push
and
pop
pop
push
add
mov
pop
sub
mov
bound
imul
or
xor
ja
movsl
es
inc
cmp
xor
push
pop
and
arpl
mov
aaa
xor
add
mov
mov
pusha
cmpb
pop
pop
sub
jecxz
mov
test
lods
nop
xor
addr16
mov
rcrb
dec
inc
movsb
xor
fwait
adc
dec
gs
ret
adc
aad
adc
loopne
ja
mov
lret
dec
jl
xor
pop
dec
rcrl
or
adc
push
sbb
daa
je
mov
int3
fmull
jb
inc
push
mull
ucomiss
imul
mov
addr16
gs
jbe
mov
stos
mov
and
movb
pop
sbb
pop
into
leave
push
int
or
lfs
outsb
mov
sub
xor
pop
sbb
sbb
bound
sub
and
xchg
scas
fidivrl
xor
rorb
jg
xchg
sbb
pop
pop
adc
enter
div
and
repz
out
mov
stos
shlb
mov
cwtl
pop
loope
and
or
push
shll
aas
sbb
enter
mov
mov
sar
daa
push
cwtl
sub
xor
lret
cli
movsb
xchg
loope
jno
cpuid
inc
mov
aad
repz
pushf
dec
cli
sub
bound
sbb
cmp
mov
and
inc
outsl
push
ds
adc
adc
mov
out
or
adc
xor
or
cld
in
pushf
xor
mov
xchg
pop
loop
inc
je
sbb
push
adc
roll
insl
iret
jb
push
mov
cmp
mov
orl
jmp
outsl
aad
scas
adc
push
lock
pop
outsl
pop
jmp
jne
sub
sbb
mov
aad
jecxz
or
inc
jae
mov
adc
lock
mov
push
fdivl
cs
xor
adc
out
adc
aam
fmul
push
add
testl
in
mov
pop
xchg
movsb
xor
leave
jecxz
mov
add
test
pop
sbb
cltd
mov
rorl
test
adc
fists
je
pop
sti
dec
in
aaa
loope
sbb
vmulps
jbe
jno
push
lret
sahf
lret
cmp
pop
ss
icebp
xchg
test
mov
out
sbb
mov
mov
lods
aad
jle
stos
mov
popa
je
xor
mov
mov
mov
nop
adc
sub
pusha
rcl
cld
xchg
sarl
ljmp
js
jne
inc
out
mov
lret
scas
lcall
jmp
sub
pop
sbb
xor
and
arpl
lods
jne
fiaddl
vcvttss2si
in
sub
hlt
push
push
pop
mov
idiv
sub
add
popa
inc
insb
sbb
jecxz
jns
dec
mov
inc
test
cld
std
dec
fildl
dec
dec
or
jg
xchg
mov
and
sti
ja
xchg
ds
or
loop
arpl
add
fst
jbe
xor
pop
movsb
fcoml
incl
stos
arpl
jmp
dec
hlt
es
in
mov
cmp
push
inc
out
lret
jno
sub
rcrb
pop
clc
scas
pop
jno
ljmp
ds
sbb
into
sahf
push
push
shlb
sub
mov
add
shrl
and
stc
jb
fcoml
testl
cmp
mov
cwtl
adc
dec
shl
mov
and
lcall
cmpsb
das
fadd
mov
jae
mov
loop
out
dec
add
mov
mov
adc
outsl
mov
and
and
push
clc
xchg
lret
mov
xchg
clc
lds
adc
into
sbb
mov
call
push
push
inc
xor
repz
xor
arpl
repnz
mov
test
pop
jg
cmpsb
sbb
mov
and
test
mov
add
sub
sub
mov
and
inc
pop
out
cmpsb
sbb
add
inc
xchg
mov
push
das
lods
and
insb
jno
out
inc
mov
movb
scas
adc
mov
inc
fildl
aas
dec
fnstenv
and
data16
add
jge
inc
stos
ds
test
into
push
scas
sub
dec
jmp
lea
mov
push
call
cs
push
arpl
xor
out
mov
xchg
xchg
fidivrl
ljmp
std
mov
enter
add
dec
or
call
iret
flds
jg
cmp
xor
rcl
outsl
dec
in
test
jg
insb
cmp
push
clc
sub
sub
cmpsl
lods
or
add
hlt
push
out
cmpsl
stos
in
imul
xchg
aam
and
jno
mov
inc
sbb
es
mov
inc
insl
nop
mov
cmp
ret
ljmp
test
xchg
mov
aad
sub
movl
scas
test
fwait
std
cmp
js
addr16
data16
adc
jecxz
or
push
in
addb
adc
xor
lods
add
mov
mov
xor
lcall
jle
or
jle
xor
scas
jbe
adc
push
pop
fistl
sub
dec
inc
dec
mov
adc
data16
inc
xchg
push
je
mov
jp
mov
orl
xchg
and
xor
test
inc
scas
test
adc
fsubrl
and
insl
xor
stos
cltd
pop
ss
iret
push
outsb
sahf
xor
verw
mov
xor
or
jnp
cmpsl
or
aad
cmp
sub
sbb
pop
jns
jle
sub
stc
push
push
ret
mov
fidivrs
lods
in
sahf
pushf
inc
jo
in
dec
out
dec
inc
test
mov
mov
xchg
std
pop
fildl
inc
es
push
jo
scas
sub
cmp
es
shrb
xor
jnp
sub
pop
or
rcl
mov
scas
in
ds
cwtl
ret
cltd
ret
push
xchg
imul
pop
out
out
sahf
test
mov
addr16
iret
loope
into
cmp
jns
mov
xor
add
rorb
or
cmpsl
pushf
in
xor
add
jecxz
ljmp
push
sbbl
sbb
out
les
or
push
imul
test
push
cmp
shl
push
jbe
or
stos
cmpsl
addr16
test
pop
add
cmp
cli
cli
iret
or
add
aad
lcall
lahf
movsl
pop
adc
lret
sub
xchg
in
ja
xor
and
les
setl
nop
addr16
das
mov
cwtl
or
sarb
push
cld
fdivl
fcmovbe
nop
negb
adc
movsl
xchg
cmc
jno
fidivrs
pop
xor
pop
fnstcw
sbb
sti
je
or
ret
push
out
pop
outsl
xorb
mov
gs
fwait
data16
sub
sbb
sub
dec
stc
push
push
insb
sub
push
jae
das
or
int3
insb
lock
xor
das
mov
cwtl
ret
or
fsts
sahf
mov
fisttps
lods
and
mov
lock
mov
pop
mov
shrl
shll
out
jp
pop
push
nop
mov
aad
inc
out
stos
xor
loopne
inc
repnz
sub
sti
jmp
mov
xchg
sbb
aas
repz
fadds
mov
outsb
subb
push
icebp
in
fldenv
fistpll
or
inc
sub
sbb
mov
dec
imul
fdivrl
sub
cltd
cli
sub
mov
push
jbe
shl
pop
mov
clc
loopne
jno
mov
dec
mov
es
dec
rcrb
jb
xor
in
sub
idiv
sbb
xchg
clc
lcall
push
orb
fs
in
xor
in
xor
sub
push
hlt
inc
cwtl
mov
call
outsb
jae
hlt
stos
aam
ja
mov
lahf
enter
cmp
movsb
jle
loopne
in
mov
xor
add
sbb
movsb
sbb
inc
divb
daa
pop
test
cmp
mov
or
inc
and
xchg
jb
sbb
pop
dec
cmp
or
gs
add
das
daa
add
push
pop
shlb
out
mov
lcall
call
jmp
adc
sub
add
cmpb
sbb
les
xor
ljmp
push
aas
xor
iret
aad
aaa
cmp
lret
lcall
xchg
mov
clc
xchg
push
and
dec
inc
pop
repz
jecxz
jo
and
imul
pop
sub
mov
cmc
and
int
and
shl
jbe
xor
js
xchg
jl
inc
add
inc
int3
xchg
cmp
inc
pop
jle
loopne
push
repz
sbb
in
stos
cld
or
outsl
repz
fld
and
xorl
sub
pop
shlb
dec
nop
inc
shlb
jb
hlt
lcall
mov
dec
dec
loope
imul
push
push
loop
pop
xor
mov
jb
mov
clc
cmp
ljmp
add
jno
and
mov
insb
mov
sbb
mov
loopne
enter
cmc
sub
push
aas
movl
je
subb
into
lret
loopne
xor
mov
mov
popl
or
aas
pop
sub
popf
mov
fsubrl
pop
xor
stos
sti
out
cmp
cmp
mov
andl
imul
pusha
imul
sbb
data16
sbb
sbb
cmp
mov
jg
xchg
pop
pop
out
mov
mov
xchg
sarl
mov
push
iret
mov
pop
mov
sbb
add
popf
lcall
dec
dec
sbb
mov
push
add
sub
test
add
enter
repz
pop
iret
dec
add
notb
fsubrs
sub
mov
loope
push
hlt
movsb
sbb
pop
push
inc
clc
mulb
addr16
jmp
leave
and
into
scas
add
lahf
popa
out
scas
inc
or
pop
pop
jb
faddl
lds
inc
mov
mov
pop
mov
std
mov
mov
lahf
fisubs
imul
jnp
je
daa
int3
jle
scas
lock
jb
jg
add
test
cmp
stos
je
cmp
mov
push
mov
out
insl
leave
cmpsl
loope
adc
mov
fcmovnu
test
mov
outsl
popa
incb
jg
sub
lret
or
dec
mov
xor
jl
jnp
jmp
xchg
mov
lds
shrb
xchg
sub
in
mov
fst
push
jns
out
fstpl
jecxz
repnz
xlat
xor
out
jg
inc
popf
pop
lret
test
mov
push
pop
aam
xchg
xor
push
sbb
rcl
icebp
imul
inc
inc
xchg
jle
insb
lret
sbb
mov
sub
frstor
fiaddl
outsl
or
mov
sub
sbb
ja
mov
leave
popf
test
movsb
loop
xchg
inc
sarl
jbe
cld
rcl
dec
push
ljmp
sarb
xchg
mov
cmpl
imull
ljmp
add
xor
adc
nop
sub
cltd
inc
xchg
or
xchg
xchg
pop
pop
test
icebp
sbb
push
cwtl
fildll
pop
in
xchg
ljmp
inc
cmc
xor
sbb
xor
test
loope
mov
js
adc
inc
lods
or
aaa
outsl
mov
mov
pop
fistpl
or
sbb
sub
jge
xlat
mov
out
push
hlt
adcb
fbstp
divb
xchg
adc
shl
sbb
sti
dec
sub
xchg
ja
cltd
xchg
stos
imul
addr16
and
or
lret
dec
cwtl
jno
cmp
mov
daa
push
cmp
dec
pop
movsl
sub
add
hlt
out
and
add
mov
aas
add
out
pop
or
or
jne
fistps
fst
je
cltd
fbld
cmp
sub
push
out
sbbl
jbe
xor
sub
repz
sub
xor
fbstp
stos
cmp
xor
fsubs
jae
inc
and
adc
addl
add
iret
fsubrl
lcall
insl
lock
add
jle
mov
sahf
bound
and
jp
ds
jo
dec
jl
mov
mov
aaa
pop
repnz
jmp
mov
out
xlat
or
xor
mov
inc
movsb
int
xor
adc
daa
out
loope
push
xor
sbb
xchg
and
push
stc
call
cmc
lock
mov
pop
push
ficoml
dec
int
add
add
or
clc
sbb
push
sbb
or
mov
das
xor
cmp
adc
cmp
out
jecxz
lret
mov
repz
in
dec
pop
aam
cmpsb
mov
add
int
mov
enter
in
sarb
xor
ja
jge
mov
jb
add
addl
in
inc
sarb
lahf
mov
sti
mov
sbb
or
sbb
sbb
jecxz
add
cmpsb
scas
les
insl
mov
fidivl
lret
mov
inc
inc
popa
cmp
leave
pop
cwtl
popa
sub
add
push
test
out
mov
or
repz
movsl
inc
xor
inc
add
xor
in
test
pop
int
mov
jecxz
mov
ljmp
lds
int
adc
pop
jle
orl
cmp
mov
jae
push
and
adc
imul
push
imul
call
jle
dec
pop
stc
je
jbe
inc
jnp
js
aad
popa
insb
cmp
sub
insl
les
in
call
fcompl
adc
mov
sbb
dec
or
popa
jae
pop
adc
lcall
cmpsl
call
sar
mov
and
mov
add
sarl
inc
fxch
in
push
mov
out
in
mov
test
sub
subb
push
in
jle
rclb
or
lret
lods
pop
push
scas
ror
cmpsb
mov
sti
inc
lret
mov
pusha
imul
cs
mov
in
bound
ret
cmpsl
xchg
or
push
sub
mov
mov
push
mov
jae
xchg
cs
mov
test
mov
out
leave
push
aaa
cmp
sub
cmp
mov
sub
pop
sub
shlb
loope
pop
rorl
mov
mov
adc
and
ljmp
add
xchg
pop
dec
cmp
jle
mov
pop
and
fisubs
lahf
fistps
mov
and
cmc
ljmp
in
hlt
jnp
xor
sub
mov
pushw
ret
cmp
dec
mov
subb
mov
lahf
mov
test
gs
gs
cmp
movsl
outsl
push
ljmp
lret
xor
es
xor
push
fiadds
mov
decl
aaa
cs
xchg
sub
outsl
jns
jns
loop
inc
xor
push
xchg
lret
inc
ret
outsl
adc
inc
mov
fistl
aas
les
andl
testb
lahf
dec
sarb
scas
sub
sub
in
jae
sub
sub
xchg
out
sub
scas
fdivrs
int3
lods
xchg
inc
cmp
fwait
pushf
in
cmc
jbe
inc
sub
push
out
imul
dec
jp
cmp
insb
jle
jne
rolb
mov
test
movsb
fwait
lcall
push
jae
fdivrp
mov
fldenv
sti
pop
mov
movsb
mov
pop
insb
push
sbb
test
fwait
adcl
cmp
mov
cmp
adc
fnstcw
mov
sbb
insb
aam
pop
mov
add
push
jle
cmp
lods
pusha
aad
mov
into
push
mov
test
xchg
inc
insb
dec
add
callw
push
js
fistl
sti
push
jnp
xchg
add
push
dec
sub
and
push
jb
pop
daa
or
or
ret
push
out
push
fxch
cmp
out
mov
dec
fistl
hlt
and
jge
push
cli
sti
cmc
sub
or
xchg
in
lret
rcrb
in
jg
insb
jb
inc
mov
stc
pop
push
jne
pop
icebp
or
insb
or
lds
xchg
addl
adc
out
adc
push
stos
arpl
sbb
aas
cmpsl
dec
jl
adc
cmpl
adc
outsb
cmc
aad
mov
movsb
push
mov
pop
ds
repnz
cli
sub
xchg
or
ret
mov
inc
lods
loopne
loope
jo
push
cli
mov
sub
xor
mov
add
push
out
sub
mov
incb
jae
mov
or
hlt
insl
mov
lcall
mov
clc
incb
jne
mov
das
cmp
add
sahf
outsb
add
push
stc
cmpb
lahf
pusha
inc
inc
mov
push
fimull
jmp
dec
call
test
jp
inc
push
jecxz
cmp
jbe
je
mov
jl
gs
jl
and
push
mov
leave
fcomp
and
jne
xchg
cmpsb
imul
and
addr16
jns
fwait
xchg
xchg
mov
fstl
mov
lods
add
lcall
leave
lds
lock
data16
cmpsl
jl
dec
das
add
pop
out
in
aam
jo
movsl
and
mov
data16
out
xlat
jb
jmp
int3
push
inc
movsl
sub
in
outsb
dec
cmpl
inc
mov
pop
jg
sbb
dec
das
mov
xchg
jnp
dec
in
daa
loopne
dec
and
mov
stc
sbb
push
mov
or
mov
enter
cmp
std
enter
iret
insl
xchg
dec
fwait
outsb
outsb
in
mov
dec
insb
pop
push
out
fidivs
xor
mov
js
sahf
ljmp
lea
add
push
mov
scas
add
jge
je
xor
in
mov
and
sub
pop
pcmpgtw
call
out
dec
or
cmpsl
stc
xchg
cmpsb
pop
xchg
aad
idivl
cmpsb
clc
push
scas
inc
push
fiadds
shl
mov
mov
sub
inc
mov
arpl
or
xor
cmp
mov
addl
push
sub
push
or
pop
aaa
cmpsb
insb
mov
call
inc
sti
pop
hlt
mov
lods
and
movsl
dec
ss
fcompl
jg
popa
pop
sub
enter
loope
cmp
pop
stos
push
es
mov
addr16
dec
int3
adc
xorl
popf
jmp
mov
rcl
push
jge
jecxz
mov
cmpsb
in
movsl
or
inc
mov
stos
mov
in
mov
shll
jnp
add
xor
loopne
xor
cltd
or
add
push
push
fstps
scas
outsl
pushl
cmp
adc
les
jo
mov
xchg
dec
fdivs
mov
insl
clc
ret
or
xchg
sub
rolb
adc
ror
xchg
lods
pop
push
std
push
repz
outsb
jns
lea
in
dec
pop
xor
fsubrs
jle
push
into
lock
push
adc
pop
lcall
mov
mov
cmpsl
pushf
cmp
popa
ljmp
fwait
leave
sbb
jmp
dec
aad
push
lods
in
addr16
sub
mov
in
mov
lcall
les
aaa
popa
or
jmp
jl
jae
cld
add
pop
cmp
fisubs
xchg
test
out
push
xchg
lahf
ret
in
mov
pop
and
pop
rcrb
sub
or
aam
scas
pop
out
jmp
add
inc
jne
and
faddl
dec
add
jne
inc
aaa
std
or
cli
dec
fcoms
jle
or
cmp
shll
pushf
in
and
lcall
and
inc
and
ljmp
cmc
test
jns
out
sbb
bound
inc
cmp
and
dec
shlb
jmp
pop
mov
lock
insl
test
pop
push
add
jno
cmpsb
inc
sbb
loope
mov
sti
nop
jmp
sub
jmp
or
lret
mov
iret
insb
or
mov
dec
push
bound
mov
cmp
xor
insl
mov
xchg
fadd
lcall
inc
xchg
or
aad
rcll
inc
mov
xchg
fisubrl
out
jmp
inc
push
and
jg
sahf
test
push
pop
test
xor
out
fidivrl
xchg
add
pop
mov
jle
hlt
xlat
mov
push
mov
js
std
popa
les
loop
sbb
test
sub
push
jg
mov
aad
xor
fs
dec
cwtl
push
mov
pop
mov
xchg
or
jecxz
cmpl
lods
jg
arpl
movsl
shrl
xchg
jg
mov
inc
push
pop
adc
icebp
mov
les
fwait
xchg
cwtl
sub
gs
int
fisttpll
dec
out
or
mov
sub
call
push
jnp,pt
mov
sbb
jp
flds
outsl
mov
mov
jo
mov
fsubr
cld
xchg
xchg
std
add
dec
jae
sbb
lods
arpl
aaa
sub
xchg
adc
or
insb
add
xor
jecxz
int3
out
fsub
jnp
mov
fs
rorb
test
scas
ret
daa
xor
ljmp
aaa
push
jns
int3
jl
lahf
cmp
lcall
jle
inc
lea
idiv
dec
cmc
xchg
iret
push
clc
movsl
cmpsb
jbe
ret
sahf
orl
pop
ss
sti
fnsave
out
cs
int
inc
lods
jmp
pop
and
or
es
mov
add
mov
repnz
lds
xor
and
xchg
out
mov
sarb
add
xor
repnz
jb
leave
inc
fisttpl
inc
aas
jne
andl
pop
mov
jecxz
mov
mov
repz
fmull
mov
jecxz
inc
repz
sbb
es
and
popf
test
call
mov
cmp
orl
in
imul
push
jne
mov
fs
pop
daa
add
shlb
fwait
inc
pop
pop
not
dec
loopne
sbb
icebp
cmp
push
pop
fcmovnbe
dec
aas
add
and
stos
hlt
jp
ja
adc
xor
jmp
fldcw
jb
mov
add
sahf
sbb
adc
dec
fdivr
mov
cmp
jo
xor
js
jo
fildl
add
and
test
xor
enter
cmpsl
mov
add
insl
ss
mov
xchg
in
sbb
jno
test
out
mov
loop
dec
mov
int
adc
mov
mov
mov
scas
cld
outsl
xchg
popf
inc
aad
aad
in
xor
push
in
cmp
cld
inc
sti
ret
add
test
mov
sahf
stos
aam
repz
add
out
test
mov
push
add
test
je
jmp
add
add
lret
rorb
test
xchg
popa
pop
fstl
mov
xchg
outsb
les
lret
and
and
and
mov
push
mov
and
clc
jne
sub
arpl
lahf
mov
sahf
sub
xorb
or
or
cltd
xchg
xchg
sbb
pop
pushl
dec
sahf
jno
xchg
imul
rorb
shrl
call
push
or
xor
out
xor
and
sbb
test
addr16
fildll
jnp
and
jb
sbb
call
pop
les
dec
sahf
cs
ret
mov
push
sub
dec
adc
sbb
icebp
movsl
jnp
sub
movb
jo
test
fbstp
sub
and
pushf
mov
ret
test
lahf
mov
sahf
inc
in
dec
rcll
mov
pop
mov
add
fisubs
lret
aam
into
roll
xor
cmc
mov
or
adc
push
mov
cwtl
jle
jns
jne
rorb
jle
mov
sub
mov
jnp
jno
cmp
mov
ds
inc
mov
push
stc
sub
je
mov
sbb
mul
loop
fcoml
divl
xor
hlt
xor
test
or
comiss
pop
push
outsb
and
cltd
mov
mov
lahf
in
pop
pmaxub
dec
push
cmp
and
hlt
adcl
mov
jnp
sbb
and
cmp
jle
sbb
insb
xor
ss
adc
sti
sub
arpl
jne
and
push
xor
push
cmp
sarb
idivl
and
scas
shlb
fisubrl
push
sub
test
jb
add
mov
mov
popf
or
inc
push
jae
jl
dec
pop
call
xchg
sbb
push
loop
outsb
adc
jp
pop
clc
jle
popf
mov
int3
mov
popl
dec
push
in
loope
mov
adc
fwait
loope
cs
jp
shl
add
idivb
dec
cmpsl
dec
mov
ljmp
xchg
adc
xchg
fadds
dec
mov
and
pop
movsb
and
cli
rcrb
out
jle
dec
icebp
movsb
xor
pop
repnz
lds
cli
pop
mov
shrb
adc
push
mov
imul
jnp
arpl
ja
add
inc
mov
inc
push
popa
pushf
jo
mov
test
in
inc
inc
das
push
add
xor
mov
fbld
sbb
cmpsl
lods
iret
xor
iret
out
in
push
nop
mov
data16
push
xlat
pushw
call
xlat
push
jl
add
btc
pop
call
out
lea
xchg
fsubrs
popa
enter
insl
leave
mov
insb
or
adc
fmul
cs
lock
subl
sub
inc
cmpsb
jno
inc
neg
xor
xor
mov
int
adc
sbb
sbb
push
lret
cmp
cmp
cwtl
fmuls
dec
shrb
inc
xchg
and
andb
add
xchg
lcall
jnp
inc
xchg
cs
fcomps
xchg
or
pop
std
xchg
call
add
push
pushf
loop
add
inc
sbb
stc
mov
dec
fwait
movsb
jae
test
fcompl
imulb
mov
adc
xor
sub
cmp
fisubrl
mov
sbbl
jmp
aad
cmp
jecxz
ret
sbb
dec
pushf
pushf
add
int
stc
pop
scas
xlat
inc
hlt
stos
insl
xor
lods
out
xchg
dec
mov
push
icebp
pop
mov
outsl
daa
pushf
mov
jo
int
fisttpl
int
sub
mov
mov
inc
aad
test
mov
or
push
xor
jbe
push
push
sub
xchg
and
daa
aad
lcall
std
ret
aas
xchg
ss
xchg
enter
std
push
push
push
xchg
insl
xchg
hlt
repnz
jmp
dec
xor
shrb
lock
bound
std
jo
cmp
fistps
dec
rolb
and
int3
adc
or
addl
repnz
lock
aaa
xchg
popa
mov
fldcw
jbe
iret
jmp
xor
aad
iret
mov
idivl
jecxz
scas
gs
lods
lret
int
or
jbe
fldl
xchg
ret
mov
mov
test
in
mov
add
inc
mov
push
or
jbe
sub
dec
subl
mov
or
sub
mov
fwait
lret
rcl
in
push
das
fbstp
sub
loope
cmp
mov
push
mov
mov
and
inc
push
movsl
nop
cmp
mov
push
fwait
inc
mov
xchg
jg
xchg
mov
out
jmp
or
xchg
xchg
sub
cmp
inc
xchg
rolb
into
roll
lcall
and
cltd
icebp
ret
pop
dec
cmc
mov
xchg
notl
outsb
fiadds
sbb
add
cmc
mov
cmp
xchg
gs
es
or
daa
lods
jno
repz
push
jnp
push
cmc
add
mov
pusha
roll
pop
jae
in
outsb
jnp
xor
add
movsl
sub
jle
cmp
mov
das
sub
aas
sub
mulb
leave
xor
mov
sub
adc
adc
mov
mov
cmp
inc
mov
mov
push
and
into
outsl
outsb
inc
shrl
jo
scas
xchg
movsl
addl
mov
mov
adc
orl
je
mov
jmp
cmpsb
mov
out
test
sub
rorl
inc
nop
into
aaa
pushf
loop
mov
add
jp
dec
push
push
mov
pop
cmp
out
sub
mov
shrb
fcoms
pop
dec
dec
dec
cli
rcrl
inc
ret
lcall
or
sahf
in
clc
ja
nop
es
jno
adc
repz
mov
iret
add
mov
test
lock
mov
dec
daa
push
test
roll
xchg
xadd
orl
clc
sbb
imul
int
popf
mull
sub
loopne
pop
dec
in
iret
sbb
lock
aad
push
sbb
inc
inc
cwtl
out
adc
or
xor
insl
inc
push
pop
push
inc
in
xor
push
xor
push
loop
mov
cltd
sahf
or
or
imul
xor
and
jnp
xlat
cmpsb
push
out
call
push
fstpt
int
cld
in
ss
stc
push
mov
dec
xchg
mov
xchg
or
or
and
jns
and
ficompl
stos
cli
mov
xchg
jmp
mov
imul
pop
jne
outsl
mov
xlat
lock
imull
add
mov
mov
fwait
call
outsl
loope
mov
aam
push
xchg
les
lds
mov
out
mov
xchg
push
or
bound
dec
xor
lea
or
test
nop
mov
lods
inc
sbb
xchg
xchg
and
stos
mov
cli
rorl
cmp
sub
lea
sbb
and
sub
xor
push
fldenv
ja
sbb
aaa
push
movq
inc
imul
mov
mov
orb
xor
lret
and
pop
pop
sub
mov
lock
lds
lea
xor
pop
sbb
and
idiv
mov
aam
or
xchg
xchg
test
ror
or
outsl
sub
leave
ret
dec
cmp
pop
mov
or
ret
sbbl
cld
lahf
addb
add
mov
mov
jno
sub
sub
in
inc
scas
cmp
ljmp
iret
push
rcrb
sti
push
nop
push
pop
popf
stc
jge
mov
sub
out
jne
int
cmp
loop
jmp
add
call
jo
jmp
mov
xchg
icebp
cmc
fisubl
inc
push
test
push
sub
repz
std
int3
xor
cld
add
jno
mov
or
inc
es
jmp
jmp
inc
pop
std
mov
mov
dec
shr
in
loop
push
mov
imul
sbb
xor
or
imul
cli
add
pop
dec
inc
xchg
dec
fsts
sbb
mov
in
call
mov
clc
lahf
shll
push
repz
jg
and
inc
mov
std
jbe
cmp
cmc
mov
jg
cmp
clc
adc
lahf
xchg
shlb
cmc
mov
ljmp
sbb
mov
jno
lcall
cmpsl
shlb
lods
or
aas
stos
dec
sub
dec
add
shlb
jns
inc
jmp
xchg
leave
orb
mov
xchg
cmc
and
mov
push
xor
jl
divl
jge
mov
into
push
inc
cmp
mov
jno
gs
testb
imul
mov
nop
fnsave
inc
dec
loopne
cs
stos
xchg
test
mov
jmp
jbe
je
xor
cmpsl
dec
dec
lds
mov
mov
in
pop
test
rcll
dec
jbe
jg
pop
xchg
arpl
xchg
jb
add
popa
mov
pop
dec
sbb
inc
push
in
push
pusha
cwtl
dec
cmpsl
enter
push
xchg
imul
push
cmp
sbb
push
subb
lret
aad
or
outsb
sbb
or
or
mov
mov
mov
in
push
aad
outsl
pop
mov
fnsave
sbb
lret
sub
jle
cli
pushf
out
jge
subb
daa
push
cmp
and
sbb
out
rolb
mov
push
and
mov
xlat
int3
mov
stos
stos
xchg
arpl
in
pop
test
add
cmovle
adc
mov
xlat
fisttps
jbe
cli
insl
xlat
push
mov
ss
call
fucomp
jbe
sub
and
ret
ret
adc
scas
mov
sti
cld
aam
ljmp
cmp
dec
sbb
clc
xchg
mov
xor
imul
shll
push
lahf
mov
imul
and
outsb
sbb
dec
adc
inc
pop
xchg
mov
rclb
inc
and
pop
mov
add
adc
cmp
fwait
push
mov
rcl
add
mov
push
outsb
shlb
je
mov
out
test
test
push
jecxz
mov
aas
mov
jl
or
and
cmp
jle
jb
mov
push
mov
movsb
xor
pop
or
add
scas
pop
mov
imul
jmp
and
idiv
push
pop
arpl
jecxz
or
xchg
out
test
inc
mov
pusha
adc
jno
add
pusha
and
loop
or
xchg
push
loop
inc
cltd
mov
mov
icebp
or
clc
xor
mov
clc
daa
dec
adc
es
inc
in
fs
hlt
cwtl
fisubs
in
aad
rcrb
cmp
push
jnp
ror
inc
insb
loop
outsl
inc
mov
sbb
cmp
push
hlt
daa
jmp
xchg
mov
lret
cmp
out
or
repnz
roll
out
mov
and
jo
push
pop
push
int3
mov
test
sbb
ret
pop
fdivl
push
pusha
imul
mov
sub
push
out
cmova
mov
sbb
sbb
xchg
mov
cwtl
jb
dec
and
outsl
jbe
jbe
cmp
ret
fisttpl
mov
mov
dec
and
jno
add
cs
push
ret
lret
test
test
jne
push
pop
dec
orl
pop
sbb
nop
imul
lret
bound
xor
jnp
sbb
push
lods
leave
mov
add
es
add
cmp
dec
sub
shlb
add
mov
adc
dec
mov
jg
mov
movsb
mov
dec
pop
cmp
fs
adc
rcl
fsubrp
add
dec
or
and
xlat
stc
testb
mov
data16
xchg
or
mov
mov
in
inc
shrb
or
addr16
scas
add
dec
pop
inc
add
or
mov
bound
pop
fildll
xor
xor
hlt
in
adc
xchg
pop
shll
int
sub
jae
push
aaa
ss
mov
xor
xchg
push
inc
call
or
popa
sbb
cmp
or
jg
dec
pop
mov
and
imul
xor
push
imul
filds
mov
add
or
push
push
push
nop
mov
sbb
add
adc
pop
xlat
cmp
popf
jns
das
icebp
sbb
insl
pop
mov
push
inc
fisubs
sarb
mov
inc
fwait
dec
inc
out
inc
jge
je
pop
or
aas
lahf
lods
sbbl
dec
clc
cwtl
das
test
pop
sbb
lret
iret
mov
ud0
or
ja
loop
jle
adc
je
fldl
mov
popa
inc
add
rorl
add
rcll
insb
insl
sub
adc
in
iret
adc
or
xchg
stos
cmp
ss
mov
mov
movb
xchg
mov
and
stos
mov
movsb
pop
mov
xchg
push
mov
inc
mov
sbb
jb
scas
cli
jge
pusha
cmp
clc
inc
adc
mov
ljmp
mov
test
enter
cmp
lcall
scas
pop
inc
mov
mov
xchg
xorps
dec
icebp
add
sbbb
mov
in
imul
push
fbstp
sbb
jg
vandnps
into
mov
loop
inc
in
cmp
sahf
sti
sarb
mulb
pushf
shlb
cmpsb
ja
pop
xchg
jl
loop
mov
loop
mov
xor
or
dec
cmpsb
sti
idivl
ljmp
cmp
cmp
les
pop
and
add
adc
adc
icebp
xor
les
jne
mov
je
push
jecxz
mov
cld
rolb
lods
push
lea
adc
pop
sub
imul
push
cld
jle
jnp
pop
xchg
leave
sbb
rcll
push
mov
and
orl
mov
jmp
cltd
jne
sub
std
sysexit
push
stos
in
jb
jmp
sti
inc
ret
push
xlat
push
cs
insb
sub
shll
jnp
inc
cmp
xchg
cltd
insl
xor
adc
xorb
mov
inc
adc
lret
xor
mov
dec
ljmp
aam
jne
cmp
push
xor
mov
add
stos
xorl
mov
outsl
jecxz
sub
es
insb
mov
sub
lods
orl
pop
sbb
sub
cli
push
std
dec
jne
mov
push
push
and
pop
sbb
mov
lods
push
mov
xchg
fildl
and
cmp
adc
pop
jg
xchg
lcall
sahf
or
jl
lahf
repnz
mov
das
mov
data16
mov
xchg
xor
or
sbb
push
adc
in
jmp
in
scas
into
cs
inc
xchg
push
or
add
add
fstl
gs
pop
repnz
push
movsb
jecxz
and
jl
mov
ss
sbb
cmp
gs
and
add
cld
and
dec
mov
mulb
dec
or
sbb
psrad
aas
icebp
iret
cmp
inc
mov
push
and
dec
rcl
mov
insb
and
or
mov
fsubs
xchg
adc
shll
jmp
shll
and
push
push
subl
inc
gs
lret
dec
aaa
leave
push
dec
jae
dec
enter
out
cmp
pop
push
or
pop
adc
data16
xchg
ret
push
sbb
lods
sbbl
add
cs
rcll
fisttpll
adc
mov
sbb
dec
xchg
in
cmp
dec
cmp
and
pop
jmp
xor
arpl
lods
mov
int3
xchg
xlat
movsl
mov
aaa
aad
movsb
mov
je
sub
popl
or
push
jnp
in
subl
mov
addr16
mov
push
test
cmp
pop
dec
and
cmpsl
cmc
mov
mov
les
and
sar
mov
xchg
or
int3
inc
sarb
pusha
sti
add
fidivrl
out
ljmp
pop
mov
push
mov
ficoms
or
mov
rcll
movsl
shl
and
or
jecxz
fs
adcl
mov
mov
inc
cmp
sbb
mov
mov
push
lods
mov
call
pop
rol
xchg
xor
push
out
arpl
cmpb
inc
add
movsb
nop
fstl
cmp
and
dec
data16
cli
inc
repz
movsl
push
call
sub
imul
mov
mov
mov
mov
jp
mov
mov
xchg
inc
jp
adc
cmp
pushl
push
push
lahf
gs
leave
inc
cltd
xchg
inc
int
aad
add
mov
jbe
stc
cli
cwtl
push
test
ss
adc
mov
outsb
add
hlt
or
xorb
out
jne
jo
sub
xchg
imul
add
pop
dec
lods
insb
sar
xor
sbb
clc
sahf
mov
sbb
jo
stos
xchg
cmp
bound
mov
mov
fbstp
or
push
clc
leave
ljmp
pop
fldcw
sub
into
scas
push
call
push
add
insb
push
insl
shll
jne
fstpt
or
or
sub
scas
iret
mov
lods
dec
pop
pop
jo
ljmp
xchg
popa
nop
xlat
roll
pop
push
xchg
ss
pop
xchg
subl
imul
add
and
jecxz
xchg
adc
lds
pop
fidivrs
xchg
faddl
cli
data16
and
jge
ljmp
mov
lods
aas
dec
std
clc
mov
add
movsl
mov
into
aas
fnstcw
xor
mov
mov
leave
scas
mov
jnp
out
jne
and
push
jg
mov
incb
movl
into
xlat
pop
je
sbb
lock
ret
in
cmc
or
push
aam
push
insb
and
add
sub
mov
sub
jl
mov
xor
and
push
add
xor
xchg
jno
int3
jbe
outsb
mov
pop
leave
xchg
xabort
xchg
nop
hlt
cmp
jg
sbb
cmp
mov
xchg
punpckldq
push
repz
dec
sub
test
jo
inc
mov
je
cli
daa
repnz
roll
sbb
cmp
clc
or
rorb
fcomps
sahf
rorb
sub
and
rcrl
imul
push
mov
cmp
js
mov
pop
js
and
arpl
jns
mov
mov
push
pop
aas
daa
sub
cltd
cmp
mov
loop
pop
mov
or
cmc
mov
adc
std
hlt
and
movsl
xchg
jo
xchg
into
cvtpi2ps
add
in
fsts
fildl
adc
xchg
dec
push
test
lahf
clc
insb
or
sbb
push
jns
rcl
repz
nop
mov
xchg
mov
js
in
inc
xor
dec
movsl
dec
mov
cwtl
lods
bound
mov
insl
jmp
mov
jno
or
jl
xchg
or
add
add
inc
mull
aaa
ss
jp
inc
adc
lds
ret
lret
jo
fadds
cmp
inc
popf
scas
pusha
pushf
sbb
out
lods
repnz
push
cmp
or
mov
scas
fldcw
dec
mov
movl
xchg
add
adc
test
in
add
sbb
es
jae
mov
xchg
movsl
sbb
inc
and
shll
jne
mov
fwait
shr
lcall
pop
xor
ret
outsb
xchg
mov
mov
mov
ljmp
add
jmp
movsl
and
ret
gs
loope
jb
outsb
cltd
pop
or
cmp
adc
stos
push
adc
jge
jno
cwtl
mul
mov
xlat
aaa
push
inc
and
pop
je
addr16
dec
or
pushf
inc
mov
filds
std
push
insb
loopne
sahf
pop
push
inc
push
dec
xor
cmpsl
mov
nop
cs
out
push
and
repz
js
leave
mov
scas
lds
adc
or
pusha
dec
movsl
cmp
mov
cs
les
add
cmpsb
mov
sub
fucompp
pop
or
sbb
test
push
xor
jne
jbe
push
sbb
jo
sbb
or
cs
std
shl
push
add
loop
insl
clc
pop
xchg
sbb
imul
sahf
mov
inc
pop
or
pop
add
push
je
hlt
inc
in
mov
xchg
popf
dec
jle
ds
out
js
ds
sbb
dec
imul
test
sub
dec
inc
imul
sbb
movsl
fs
sbb
cmpsb
mov
mov
movsb
add
adc
adc
cmpb
mov
mov
rolb
inc
add
inc
lock
arpl
popf
loop
mov
inc
scas
mov
outsl
punpcklbw
popf
aam
mov
outsb
mov
jg
es
sub
or
repz
jmp
adc
imul
fwait
adc
mov
pop
cmp
cmpsl
jnp
scas
rol
and
or
fdivs
dec
idivl
fisubl
and
je
mov
shl
arpl
mov
lcall
hlt
xchg
or
mov
adc
fsubrs
sub
xchg
push
inc
int
mov
jg
fsubrs
and
hlt
mov
mov
xorb
in
push
push
cmp
cmp
push
sub
hlt
repnz
jne
lods
inc
ret
jae
daa
shlb
pop
cwtl
bound
inc
lahf
or
pop
fnstsw
and
cs
mov
jle,pt
bound
push
and
out
sbb
push
mov
shll
inc
hlt
mov
rol
stos
adc
cli
cmp
rorl
sbb
orl
or
loope
jae
mov
inc
xorl
sarb
or
xchg
iret
mov
xor
xor
adc
divb
cmp
adc
ficomps
xchg
scas
mov
sbb
outsb
cmp
in
sbbb
stc
in
stc
xor
outsb
dec
pop
js
mov
cmp
int
sahf
sarl
mov
in
or
dec
scas
loopne
mov
dec
mov
adc
pop
stc
jo
iret
cmp
mov
fisttps
scas
xor
fs
mov
inc
addr16
sub
shll
aas
stos
lret
outsb
in
cld
sbb
shrd
stc
clc
insb
cltd
cmp
add
cmp
mov
fisttpll
jbe
fwait
push
imul
pop
mov
in
pop
dec
repz
lret
cld
push
mov
sti
int
leave
cmpsb
mov
fwait
sbb
loope
jae
sti
sti
mov
mov
xchg
loope
push
inc
lods
xchg
ja
addr16
scas
jno
andb
ret
cltd
inc
pop
pop
sub
inc
mov
nop
mov
push
mov
dec
pop
cmp
cli
jl
insb
add
push
sahf
dec
in
mov
cwtl
xor
ret
or
adc
jl
sbb
sub
scas
clc
sub
mov
ror
jne
sub
jl
cmpsb
fsubs
jg
das
sub
in
shll
je
jns
adc
les
push
xchg
push
lods
loop
hlt
cltd
jno
lods
xor
pop
jmp
out
shrb
jmp
add
bound
imulb
add
iret
cmp
imul
mov
lret
pop
adcb
adc
and
fdivrl
fnstenv
lahf
fs
outsl
pusha
xchg
sub
scas
adc
iret
inc
cmp
or
add
cli
xchg
sub
mov
test
aaa
mov
les
cwtl
xchg
dec
ljmp
fsubrl
pop
mov
pusha
xor
inc
lods
out
jb
fisttpl
xchg
ficompl
rolb
lods
push
sbb
insl
push
in
jno
nop
pop
fdivp
mov
add
in
outsl
mov
jmp
pop
jmp
sbb
stos
icebp
das
mov
into
lds
xchg
mov
mov
enter
pop
sbb
imul
xor
cld
mov
out
mov
xchg
icebp
jge
or
lock
outsl
stc
mov
imul
sbb
mov
orl
jg
dec
adc
into
mov
mov
dec
jbe
cmpsb
enter
jns
insl
cmp
cmp
pop
ja
repnz
inc
mov
fwait
movsl
dec
and
mov
xor
or
sbb
lret
add
call
pushf
into
and
mov
push
adc
cmp
mov
loope
cli
pop
clc
stos
es
xor
sbb
adc
lret
into
xchg
push
xor
ja
pop
fildl
roll
out
pop
dec
fwait
push
or
push
aad
cmp
push
sbb
rcll
shlb
vsqrtss
lahf
jmp
dec
mov
adc
mov
add
xor
cmp
gs
push
stos
bound
je
insl
add
jns
aam
ret
je
push
ljmp
pusha
dec
nop
xor
les
lcall
pop
push
pushf
and
xor
adc
mov
mov
pop
dec
shlb
inc
pop
lods
aaa
repnz
add
add
in
mov
leave
add
jb
push
std
pusha
int3
mov
dec
scas
dec
pop
mov
xor
push
push
cmpsb
cs
repz
add
cwtl
leave
ja
inc
pop
inc
into
xor
jno
add
ljmp
pushf
addr16
subl
sub
add
outsl
outsl
mov
fnstenv
and
pop
cli
out
mov
sub
pusha
sti
add
adc
mov
insl
shrl
mov
js
inc
mov
scas
push
inc
mov
xor
mov
movsb
mov
mov
movsb
lcall
lahf
mov
xchg
pop
aas
mov
inc
sub
les
xchg
xor
incb
inc
jg
rcrl
std
or
jl
lahf
fnsave
popf
aad
sbb
sub
jg
pop
jnp
xchg
lcall
sub
sub
mov
sti
mov
and
jns
shrl
dec
mov
add
in
ss
adc
lds
pop
jge
sub
call
push
sbb
and
mov
mov
sub
lods
mov
xchg
ds
and
cs
cmp
pop
mov
out
fs
jbe
and
je
outsb
cmp
ficoml
sub
sbb
pop
sub
cld
ret
pop
cmp
pop
daa
fnsave
sbb
cmpsb
xchg
push
lea
fisubs
insb
roll
push
cmpsl
mov
fdivs
xchg
add
add
outsl
or
inc
subl
hlt
aas
push
push
cmp
pop
xor
stos
add
sbbb
inc
adc
push
sub
pop
movsl
movsb
cltd
dec
ret
jne
fdivs
pop
leave
lds
sub
mov
decl
enter
xchg
xchg
shr
push
push
xor
xchg
loope
mov
cmpsb
push
pop
cmc
arpl
lret
insl
sbb
or
sbb
aas
call
iret
xor
ror
xor
jae
stos
push
ret
loop
outsl
icebp
mov
jmp
loop
mov
mov
call
test
push
mov
or
test
mov
inc
lahf
int
aas
cmp
dec
cmc
push
xchg
daa
ret
fbstp
or
sbb
cltd
arpl
pushf
les
jns
mov
dec
jne
pop
out
leave
sub
pop
scas
dec
test
xchg
sbb
sahf
sub
mov
mov
nop
decl
and
mov
pop
add
jle
lea
xor
and
repnz
orl
add
cmpsl
dec
sahf
push
incb
jp
stc
inc
mov
xor
fwait
stc
int3
sub
aad
mov
cmp
mov
lods
lret
aad
or
dec
ja
mov
fstl
cmpsb
xor
int3
or
and
into
add
xor
jge
ret
cmp
and
push
inc
pop
mov
dec
mov
adc
mov
mov
arpl
jns
mov
add
push
stos
xor
push
jae
push
ret
sub
and
and
iret
dec
push
sbb
mov
jmp
imul
in
mov
xor
sub
push
cltd
and
into
shrl
out
pop
jb
sbb
cmp
sbb
jbe
popa
inc
xlat
jnp
into
ret
dec
daa
push
cs
sub
lret
xor
test
fdivl
mov
push
lret
jmp
xchg
test
cmp
rcrb
outsb
cs
ds
add
mov
andl
pop
or
pop
insb
lret
add
cmp
add
std
test
pushf
xor
out
jo
jae
and
cltd
cwtl
and
or
and
pop
movsl
mov
xchg
imul
cld
mov
loope
push
hlt
mov
dec
arpl
jo
adc
lods
aam
fiaddl
jl
pushf
jmp
push
mov
xchg
inc
test
pop
mov
pop
aam
pop
adc
xor
insb
mov
sti
ss
cli
mov
pop
aas
cld
xchg
xadd
jo
jle
and
push
xchg
loop
cmp
mov
mov
add
and
in
lret
xor
sbb
sbb
cs
jecxz
inc
cmpsl
push
out
fisubs
lods
std
mov
popf
jge
sbb
loope
jmp
lds
in
arpl
xchg
mov
xchg
jmp
mov
les
jns
sub
adc
push
arpl
cmp
test
pop
and
test
lcall
jb
jmp
dec
shr
ljmp
pop
push
addr16
push
daa
subb
sub
or
sub
mov
or
fadds
lock
in
pop
sub
aad
xchg
es
push
mov
mov
cmp
pop
jle
lea
orb
mov
out
push
clc
push
pop
jecxz
cwtl
jbe
adc
jp
fs
test
pop
rcpps
pop
int
test
ja
and
lock
hlt
rorl
jmp
popa
dec
lods
jae
push
dec
mov
adc
xor
mov
loop
mov
cmp
sub
cmpsb
pusha
jb
lcall
pop
jge
push
popa
out
stos
xchg
adc
fbld
daa
dec
push
mov
fisttpll
cmp
repz
shlb
jo
xchg
mov
dec
xor
aad
jmp
mov
sub
dec
xchg
add
icebp
xchg
or
incl
mov
xchg
push
mov
leave
jae
popl
out
popa
sbb
jno
cs
mov
scas
cltd
mov
ret
sti
jbe
mov
dec
sub
arpl
iret
jmp
xor
mov
dec
int3
sti
movsl
push
jo
lock
or
rol
jge
cmp
pop
arpl
cmpl
push
sbb
inc
shlb
clc
mov
jne
outsb
cmpsl
les
push
addr16
js
cmpsb
xor
mov
movaps
insb
cmpl
roll
and
test
cmp
test
jl
dec
shrl
push
aad
lcall
xor
fwait
inc
fidivrl
push
xchg
xchg
fisubrs
adc
je
test
xchg
cmpsl
sub
cvtpi2ps
mov
push
fwait
mov
cmp
push
mov
xchg
stos
lods
push
fs
xchg
cmpsl
mov
imul
hlt
enter
call
dec
test
jno
sbb
push
mov
push
inc
lods
pusha
xor
cmp
stos
add
inc
xchg
int
dec
push
aam
pop
es
jbe
jge
and
mov
pop
iret
aas
jne
mov
mov
push
mov
jmp
cwtl
rolb
fadds
mov
inc
dec
mov
frstor
js
bound
andl
mov
loop
test
scas
mov
jp
lahf
push
sbb
push
in
jg
mov
out
mov
push
push
xor
dec
imul
push
int
mov
dec
lods
icebp
cmp
fisubrs
dec
adcl
mov
fstpt
sbb
or
aaa
add
mov
dec
or
push
punpckldq
notl
test
cmp
lods
fisubrl
fcomps
stos
shl
inc
lcall
imul
pop
dec
or
outsb
mov
mov
mul
push
mov
mov
sub
loope
in
das
pop
les
pop
popf
cmp
imul
in
xchg
jg
mov
call
and
lret
sbb
int3
inc
and
mov
jns
fstl
adc
ja
adc
cld
xchg
pop
notl
and
inc
add
jno
fildl
lods
call
and
and
add
popa
xchg
das
adcl
add
insb
out
inc
aaa
rorl
mul
and
out
xchg
das
or
fstpl
js
cmp
add
xchg
jg
push
scas
dec
in
inc
pop
jp
jo
inc
push
xor
mov
xchg
mov
bound
mov
and
and
dec
sub
out
lret
int
mov
hlt
sub
test
lea
adc
and
push
ljmp
icebp
ja
icebp
mov
push
mov
or
js
inc
stos
fisubrl
pop
in
jmp
rorl
jns
test
push
filds
push
sub
jge
mov
lret
sbbb
mov
call
push
pop
sti
fwait
shr
fs
lock
clc
jbe
outsl
addr16
jno
mov
mov
bound
jns
movsb
and
outsl
jmp
cli
lds
cmpsl
into
gs
push
cli
mov
jge
or
or
jae
sbb
icebp
loope
test
jne
jo
push
ljmp
cmpl
mov
or
add
and
push
add
dec
cmp
sub
push
jecxz
test
test
inc
inc
out
mov
sub
lock
adc
divb
jp
outsl
cmp
cli
arpl
sbb
jl
mov
or
js
xchg
pop
neg
push
sub
call
push
mov
popa
inc
dec
outsb
or
dec
int3
mov
push
repnz
jae
aam
fistl
or
jecxz
or
loop
enter
sti
mov
pop
jle
in
cli
rcrb
adc
mov
jp
xchg
fucomip
add
out
lahf
lcall
xlat
inc
inc
sbb
mov
add
and
sbb
cwtl
test
cmc
sbb
push
jecxz
add
int3
mov
cmp
push
sbb
movsb
adc
fidivs
add
fsubrs
jecxz
hlt
or
pop
data16
gs
in
sbb
lret
insl
or
jle
fisubs
dec
ja
das
imul
push
aad
dec
es
imul
push
cltd
ja
mov
out
or
mov
lret
mov
mov
daa
xchg
mov
xchg
sarb
cltd
ss
pop
push
call
jp
jp
dec
mov
int3
es
pop
sbb
loop
punpckhwd
inc
push
dec
add
push
dec
jl
int3
cmpsl
xchg
fcoms
movsb
inc
mov
xchg
scas
sarb
call
mov
push
mov
rorb
push
int
mov
outsl
pop
xor
mov
pusha
outsb
inc
out
pop
sub
inc
jno
stos
lds
mov
out
imul
lds
xor
xor
push
jmp
pop
mov
sub
mov
sub
cmp
bound
shll
incb
inc
mov
jbe
pushf
arpl
push
push
out
addr16
pop
and
popf
into
inc
das
inc
outsb
aaa
mov
xor
and
jo
pop
xchg
mov
shrl
lock
into
fimuls
add
mov
xchg
jg
mov
inc
dec
or
sbb
call
mov
jp
mov
sub
push
lds
adc
lea
jmp
sub
xchg
xor
and
loop
mov
dec
xchg
jae
and
inc
mulb
out
test
test
pusha
jl
pop
mov
mov
imul
cmp
mov
push
and
jne
pop
xchg
loop
out
notb
repnz
cmp
ret
xor
push
fyl2x
rorl
lret
jb
or
push
imul
push
fcoms
cmp
repnz
fnsave
mov
loope
lods
pushaw
push
repnz
stc
push
mov
push
mov
imul
push
mov
sub
sti
pop
mov
movsb
adc
jl
das
mov
test
divl
fcmovnbe
stos
or
mov
lahf
add
cmpsl
arpl
push
dec
dec
aaa
fistps
cmp
sub
loop
add
adc
incl
jle
or
add
mov
cld
cli
out
lods
pop
pop
cmpsl
out
dec
in
and
repnz
daa
push
insl
fsubs
fstl
and
mov
xchg
mov
and
loopne
test
sub
fs
stos
mov
jmp
fcoml
test
insl
push
xor
imul
pop
mov
mov
and
push
shl
mov
xchg
nop
push
xor
das
jge
aaa
das
in
imul
jno
dec
rorl
outsl
gs
dec
rep
daa
add
lahf
cwtl
jns
pop
xchg
jp
push
xchg
jle
loopne
and
dec
jl
mov
repz
adc
outsl
ja
mov
rcll
dec
mov
push
mov
aaa
xchg
push
xchg
jbe
hlt
je
push
cmp
inc
imul
inc
sub
lret
jno
and
mov
push
cmp
jno
divb
lea
aad
xlat
lea
mov
hlt
cld
xor
push
jbe
popa
mov
jb
adc
xlat
and
fmull
ret
sar
je,pt
insb
mov
push
sub
mov
jno
and
nop
push
inc
arpl
or
das
add
dec
inc
xlat
icebp
push
mov
cmp
add
mov
popa
inc
lods
mov
imulb
lea
enter
sbb
jmp
lds
cltd
jmp
idiv
cmp
fldl
dec
mov
inc
insb
cwtd
xor
lods
iret
test
out
lcall
cmp
imul
jge
sbb
sbb
pop
sub
loop
and
jne
in
dec
addr16
lea
inc
sbb
xor
or
popf
mov
mov
add
pop
mov
and
es
sti
cltd
insb
xchg
mov
mov
push
mulb
outsl
add
pop
outsb
mov
scas
and
pop
imul
adc
sub
pop
push
dec
xor
movsb
loope
mov
jno
sbb
add
test
mov
jnp
pushl
rorl
xchg
jecxz
push
inc
pop
inc
jp
popa
test
outsb
xchg
xchg
push
jae
mov
aaa
test
andb
or
jle
lcall
mov
js
add
das
push
xchg
mov
jp
mov
xchg
ljmp
popa
jecxz
adc
out
das
icebp
cmp
aad
mov
lret
mov
jp
andl
sub
fwait
add
fsubp
add
xchg
xor
jb
jns
aas
lahf
mov
sub
ficompl
inc
idivb
fcmovbe
sub
and
lods
push
push
mov
stc
adc
std
xchg
gs
addr16
aas
xchg
testb
sarb
ds
rolb
pop
repz
stos
inc
mov
cmp
pop
and
pop
sahf
sbb
jecxz
cwtl
insb
sbb
adc
bound
or
jg
mov
inc
pop
pusha
ljmp
bound
stos
pop
data16
clc
shl
push
in
std
mov
dec
out
xchg
cmc
push
jo
mov
adc
jbe
jno
movsb
popa
mov
inc
repnz
es
sahf
xchg
lret
push
and
dec
mov
mov
out
subl
mov
mov
dec
xorl
pop
js
lcall
pop
mov
fwait
movsl
outsb
dec
cmp
sahf
into
jge
imul
movsl
popf
sbb
mov
xor
jnp
jle
jb
cmp
push
pop
gs
xchg
push
push
add
stos
aas
xor
fmull
mov
mov
lods
jae
mov
nop
sub
or
pop
ja
push
hlt
movsl
or
adc
mov
xor
loope
outsb
dec
and
mov
mov
push
dec
xor
into
ret
add
adc
xlat
dec
jecxz
sub
jbe
jmp
xor
dec
dec
xchg
xor
test
mov
xor
xchg
stos
mov
stos
outsb
lock
mov
jl
fldl
xlat
or
xor
pop
daa
dec
outsl
in
and
mov
fdivrs
mov
faddl
push
pop
fimuls
inc
lock
scas
popa
dec
mov
lahf
callw
cli
stc
cmp
push
adc
das
inc
mov
xchg
das
lock
add
out
lods
pop
lea
repz
xor
mov
push
mov
imul
loopne,pt
jp
ss
das
int3
or
push
or
aam
je
ja
and
imul
or
jnp
adc
push
movsl
jmp
jge
fiaddl
xchg
icebp
jle
sbb
xor
and
or
and
arpl
mov
pop
sub
push
dec
cwtl
outsl
cmc
dec
dec
push
pop
add
xor
cmp
mov
repnz
pusha
movsl
fldl
cmpsb
ror
out
pop
lret
in
mov
sub
outsl
mov
cwtl
xor
xchg
aas
jg
fcoms
add
rep
sbb
dec
cmp
imul
cmc
push
pop
enter
sti
mov
iret
xchg
insl
add
shrb
mov
xchg
ja
call
lret
lret
sbb
cmp
fadds
cmpb
mov
adc
arpl
inc
popa
sbb
mov
in
orl
into
lahf
push
add
jp
xor
shl
pop
je
movsl
mov
scas
xchg
and
cli
cmp
dec
int3
movl
add
sbb
lods
cmp
test
sbb
pop
lock
and
and
pop
jge
fadd
aad
cmp
pop
shl
popf
iret
cmc
push
test
or
int
push
xchg
push
outsb
jns
out
rolb
js
pop
je
sbb
xor
push
aas
stos
dec
mov
in
mov
jo
jnp
in
xchg
imul
outsb
testb
push
adc
jno
sub
inc
cmpsl
mov
xor
popf
xor
pop
dec
negb
and
jns
cltd
sbb
ret
or
mov
xchg
jns
out
shlb
cld
mov
call
pusha
push
dec
and
movb
rcrl
shr
or
test
and
adc
bound
jp
xchg
les
xchg
lahf
jge
mov
in
or
inc
setg
xlat
jns
imul
mov
sbb
pushf
gs
or
int
das
pop
test
outsl
jmp
shll
push
jne
inc
stos
int
inc
push
push
cltd
push
mov
shll
adc
das
mov
xchg
sub
xor
mov
jmp
outsl
pop
scas
lret
pop
loopne
mov
aaa
inc
dec
jb
cmp
mov
fistl
fcomps
push
sahf
jg
xchg
jns
movsl
and
mov
jmp
cltd
push
out
imul
outsb
lcall
test
dec
mov
and
dec
sub
pop
shlb
pop
push
jle
mov
jle
pop
cwtl
jns
sub
lahf
loop
or
aam
dec
mov
int
popf
fsubrl
push
xor
xchg
fiadds
cli
std
pop
das
push
cmpb
jnp
xchg
inc
in
jmp
out
mov
fsubl
out
adc
push
push
pop
jp
mov
mov
xor
iret
mov
mov
xor
jnp
dec
mov
test
ljmp
xor
xor
push
scas
sahf
shlb
sbb
nop
es
test
out
testb
cltd
xor
push
dec
pushf
jecxz
call
dec
icebp
repnz
pop
scas
and
or
mov
mov
shr
roll
dec
and
int3
jmp
xor
or
or
xchg
jb
mov
les
stc
adc
mov
das
adcl
popa
mov
pusha
jecxz
in
adc
aas
xchg
cli
or
aas
mov
pushf
cmp
fistpl
data16
cs
loopne
scas
mov
sub
lea
xchg
das
xor
enter
pop
mov
movl
psubw
mov
daa
push
sbb
ds
lcall
xor
bound
div
cli
cmp
in
push
sub
in
xor
std
sti
mov
push
or
mov
mov
aas
mov
sub
jle
pop
sbb
xrelease
inc
push
mov
cmp
enter
push
loope
pop
pop
sub
sbb
dec
push
in
test
rorb
lods
mov
jp
mov
and
gs
ljmp
inc
jle
add
mov
jb
test
imul
xor
testl
std
xorl
in
movsb
mov
pushf
jp
popa
sbb
insb
cmp
mov
mov
mov
jecxz
flds
fiaddl
push
lret
jge
enter
ljmp
inc
mov
nop
lea
adc
mov
out
arpl
mov
loop
jnp
lock
lahf
stos
lock
loop
fildll
int3
mov
pop
add
fidivs
mov
adc
int
push
sbb
pop
sbb
or
sub
pop
lret
push
leave
loopne
cmp
mov
jnp
mov
int
jl
mov
shlb
jns
adc
mov
bound
jecxz
sbb
hlt
fsubs
inc
or
in
ret
sbb
add
mov
inc
xchg
fbld
push
js
xor
mov
sti
les
mov
data16
repz
icebp
mov
cmc
popa
inc
shlb
rcl
xchg
push
push
dec
cld
ja
mov
mov
nop
adc
push
ret
pop
push
rol
pavgb
push
xchg
inc
add
pop
add
mov
mov
test
inc
cmp
or
add
jb
fwait
shr
out
je
pop
and
inc
dec
sbb
int
mov
xor
jne
or
jb
pop
jne
femms
xchg
call
cmc
inc
or
lcall
daa
push
jp
mov
fcoms
push
dec
lock
fcmove
xorb
sarb
icebp
loop
arpl
iret
add
xchg
das
cmp
mov
lds
jae
jg
rcll
ss
jmp
lahf
xchg
ja
je
pop
push
loop
xlat
insb
aam
inc
stos
xchg
mov
adc
xchg
je
pop
or
lcall
outsb
ret
fsubrl
lock
xor
pop
push
in
ja
imul
test
ret
mov
adc
sbb
pop
loop
push
and
mov
arpl
sti
cmp
mov
roll
test
sahf
fnstsw
pop
outsl
dec
imul
mov
jne
adc
ret
lods
inc
ds
and
mov
xchg
sbb
subl
test
mov
in
loope
push
cmp
dec
sbb
push
mov
daa
test
xchg
pop
cmp
dec
mov
xchg
stos
aaa
loop
mov
je
rorl
fucomip
xchg
addr16
xchg
test
push
insl
dec
mov
addb
adc
xchg
and
test
stos
ret
push
scas
sub
je
inc
inc
out
pop
and
adc
aam
push
data16
hlt
roll
push
sub
xor
push
mov
imul
mov
mov
cmp
push
in
add
adc
cmc
int
das
ret
sub
in
popf
fs
std
fisttpl
push
or
loope
das
cmp
pop
cwtl
outsl
popa
lcall
or
add
sbb
leave
ljmp
clc
cmpsl
hlt
mov
sbb
bnd
sar
cli
scas
dec
fbstp
out
jb
lahf
jb
movsl
jge
ret
xchg
repnz
sub
jo
jne
dec
xor
bound
pop
lea
sbb
jae
test
cmc
aad
pop
mov
add
sub
gs
mov
loop
jmp
inc
ds
rorl
xchg
mov
push
ds
in
add
inc
xchg
pushf
pop
xchg
insb
test
rcrl
repnz
std
jo
shr
pop
jmp
xlat
inc
or
jle
xlat
loopne
mov
out
cmp
sub
mov
ja
adc
pop
into
shrl
sbb
pop
scas
leave
lock
clc
lock
jge
adc
imul
cltd
mov
xor
inc
icebp
into
movsb
addr16
gs
cltd
xor
sahf
out
mov
mov
or
xchg
mov
and
sub
push
insb
aaa
sbb
push
loop
cmp
xchg
mov
mov
add
or
inc
pop
push
xlat
aam
test
test
int3
push
pushf
and
ret
inc
mov
mov
cmp
repz
in
mov
repnz
sahf
adc
cmp
ret
insl
popa
lea
jae
lods
sti
jecxz
ret
sbb
inc
push
mov
loop
jne
push
mov
inc
das
outsl
xor
jp
sub
or
xlat
inc
xchg
mov
xchg
jge
jmp
jae
popf
cld
ja
ja
cwtl
cmp
lcall
dec
lods
xchg
sbb
inc
enter
and
in
dec
dec
lds
out
sbb
int3
mov
inc
fwait
push
mov
cmc
cmp
inc
mov
jp
jg
int3
in
push
sub
jns
mov
cwtl
and
pusha
adc
sbb
jbe
aam
into
push
xlat
jl
inc
push
rclb
mov
icebp
mov
fistpll
es
jno
pop
ja
xchg
mov
pop
mov
adc
cld
gs
or
pop
pop
outsl
stos
insb
mov
cmp
jge
push
lods
jp
inc
rorb
sbb
scas
repnz
mov
pop
pop
dec
test
je
test
push
movsl
pop
jmp
sti
jmp
dec
add
jae
xchg
pop
adc
mov
aam
add
mov
mov
cmp
jbe
push
out
mov
inc
aam
push
fistl
ficoms
mov
les
pop
movsb
inc
pop
push
lret
inc
stos
enter
stc
xor
imul
test
push
cld
xchg
push
mov
adc
jnp
xchg
pop
inc
sub
sub
jne
inc
push
and
adc
xchg
popf
stos
mov
xchg
mov
ret
adc
clc
inc
pop
dec
mov
sti
pop
xor
pop
loope
mov
jmp
lock
sub
mov
in
and
shl
clc
push
jae
popl
adc
lahf
int3
fsubrl
pop
or
pop
fisttps
push
ret
mov
sbb
jge
inc
mov
pop
js
mov
or
xor
push
or
xchg
int
jg
xor
outsb
jnp
dec
shlb
jge
dec
mov
lahf
lods
push
or
mulb
lcall
push
or
push
dec
mov
and
mov
inc
loop
iret
out
inc
adc
xor
dec
sub
outsb
call
js
xchg
xlat
inc
add
clc
sub
mov
fwait
jge
mov
and
dec
xchg
aas
mov
sub
xchg
fucomip
shr
cmp
pop
test
stos
insl
rcrb
dec
loope
pop
or
mov
cmpsl
repz
jnp
jnp
and
mov
adc
fisttps
dec
jne
sti
jl
jnp
fsubr
aaa
push
pop
shlb
test
jb
push
xlat
mov
outsl
fcom
mov
outsb
lret
or
pop
cmp
sarb
fdivp
aam
pusha
out
or
pop
jnp
shrl
jb
movsb
scas
rorl
test
xor
xchg
or
int3
loop
and
sbb
jno
out
sub
shll
lahf
fs
ja
stos
sub
iret
out
xor
lds
rolb
mov
sbb
daa
cmc
add
xlat
out
or
or
mov
clc
mov
icebp
push
in
cmp
fs
rcrl
jmp
cmp
xchg
sbbl
adc
or
and
xor
add
push
jmp
imul
stos
leave
sahf
inc
pop
and
pushf
stos
fwait
loop
push
mov
dec
rolb
or
fimull
xor
jl
xorl
mov
mov
mov
cmp
lret
mov
inc
jecxz
cli
pop
pop
sbb
mov
push
push
out
fbld
sub
orl
pop
jecxz
mov
xor
movsb
add
daa
es
add
pusha
jmp
jnp
imul
cmpsl
negb
cmp
jmp
bound
push
and
rclb
pop
push
inc
fimuls
cld
xchg
sbb
add
imul
adc
shll
mov
inc
data16
loopne
push
inc
jo
sbb
mov
in
int3
sarl
jb
add
adc
dec
dec
pop
inc
pop
insb
cmpb
dec
in
insl
sbb
adc
repz
dec
jecxz
fwait
mov
cld
addl
pop
repnz
jmp
shlb
xchg
lahf
cmp
mov
mov
mov
add
js
dec
xchg
push
push
push
sbb
nop
xchg
push
adcb
insl
sbb
insb
or
jb
xor
mov
mov
sub
ds
fsubrl
push
mov
das
test
jae
movsl
xor
dec
jge
and
clc
mov
fdiv
mov
loop
jmp
fdivl
or
inc
repnz
jl
leave
cs
addr16
call
test
insl
fcmovu
dec
dec
gs
adcb
nop
test
mov
mov
scas
outsl
adc
dec
mov
test
test
and
add
insl
daa
out
sbb
ret
mov
and
lock
or
les
loopne
pop
mov
adc
rcr
fists
pop
in
cwtl
jg
sbb
pop
xor
loope
outsl
pop
mov
mov
out
popf
jns
fdiv
xor
filds
aam
es
fdiv
dec
xor
mov
out
or
mov
imul
sti
push
jp
xor
leave
pop
movsb
push
popf
sub
bound
fidivrs
stc
adc
repnz
cmc
ficompl
das
negl
andl
in
fdivl
arpl
mov
mov
jae
ss
xor
ficoml
or
jns
in
sahf
outsb
add
popa
jae
push
repnz
cmp
and
pop
jo
inc
out
mov
mov
jbe
or
ja
into
jbe
xlat
push
dec
out
sub
and
mov
les
lods
and
das
mov
add
fcmovbe
or
mov
test
jge
out
jno
dec
or
mov
les
fnstsw
mov
mov
sub
cmpsl
enter
vsubps
popf
pusha
fisttpll
ja
mov
mov
adc
mov
addb
mov
and
pop
pusha
pop
xchg
repz
idiv
cmp
clc
mov
pop
ds
and
out
xchg
mov
mov
sub
xor
or
fildl
jno
imul
and
lret
cwtl
sbbl
dec
imul
inc
lahf
jns
nop
cwtl
rclb
jp
or
dec
sti
pop
xchg
add
enter
nop
jg
adc
xchg
sahf
xor
std
sbb
scas
into
cmp
and
ret
cltd
pop
repz
adc
mov
jns
cmpsl
daa
rcl
or
xchg
pusha
dec
mov
aam
lahf
cltd
sub
addr16
sbb
jg
mov
movsb
gs
cmpsl
adc
rorb
push
fnstcw
fs
mul
mov
inc
or
lock
lods
shl
out
pop
es
and
cmpsb
xchg
xchg
lret
push
and
jns
negl
std
sub
out
adc
icebp
fucomp
mov
enter
dec
and
sbb
jno
xchg
jno
cltd
cmpsb
push
push
mov
repz
mov
jge
xchg
jp
push
test
pop
lods
cmpsb
mov
pop
bnd
push
adc
jl
fistpl
js,pn
xlat
dec
sub
adc
inc
xor
xchg
rcll
and
inc
nop
xchg
add
adc
jnp
mov
mov
pop
enter
xchg
push
aas
test
inc
mov
dec
int
mov
ret
or
and
dec
xchg
sahf
mov
aam
or
inc
xchg
jb
fnsave
movsb
sbb
xchg
in
out
sbb
mov
ja
loop
ds
lret
sbb
int3
addr16
hlt
call
sub
mov
push
comiss
cmp
ljmp
fcomp
dec
ljmp
sahf
mov
jbe
xor
fnstsw
ss
lock
int3
lods
fs
mov
lret
xor
push
out
or
scas
js
imul
lods
fcompl
cwtl
lods
mov
xchg
fstl
lcall
inc
sub
notb
arpl
lcallw
in
mov
das
adc
inc
movsb
mov
sub
xchg
jp
pusha
int3
cltd
xchg
push
dec
xchg
jo
mov
aas
add
sub
cmp
mov
mov
xor
dec
mov
xchg
push
add
jne
setnp
std
pop
enter
test
add
into
scas
fldcw
pop
push
lret
mov
ja
daa
push
pop
jae
subb
sub
fwait
pop
mov
pop
lods
jo
jns
add
push
dec
jp
andl
lods
fbstp
adc
stc
sub
xchg
fildl
xor
test
pop
hlt
cmc
mov
and
and
lret
cmpb
les
xchg
cld
stos
out
cmc
mov
jns
aad
push
cmc
pop
ficoms
cli
outsl
fdivrs
push
scas
push
ss
imul
mov
dec
fisubrs
fnstcw
jp
lret
inc
inc
aaa
xchg
imul
dec
fldl
cmp
cmp
cmc
outsl
mov
mov
scas
stc
pop
ljmp
mov
push
js
xor
ss
mov
mov
repz
dec
pop
fs
cmp
mov
cli
cmpsl
mov
or
pop
and
cmc
pop
lret
mov
imul
ret
adc
sbbl
hlt
pop
stc
and
mov
jno
adc
dec
pop
push
icebp
mov
xchg
repnz
shl
test
mov
dec
dec
xchg
pop
cmp
test
icebp
nop
mov
les
lret
fnsave
mov
sbb
sub
mov
adc
pop
pushf
push
call
fnstsw
adc
fisttps
mov
push
adc
in
dec
dec
mov
cmp
lahf
test
cmp
inc
mov
adc
mov
mov
jp
fadd
xor
and
mov
rcl
add
or
push
xor
aad
or
jo
sbb
test
mov
shl
clc
add
add
nop
sbb
inc
pop
cmp
adcl
mov
cmovge
push
lds
push
pop
iret
jns
or
mov
sub
xchg
fcoms
test
ss
mov
clc
int3
sub
cmpsl
push
out
mov
and
hlt
push
test
nop
es
add
add
xor
negl
mov
pop
pop
stc
add
push
or
jb
lods
sub
add
pop
mov
mov
arpl
xchg
icebp
test
xor
arpl
test
test
push
fidivrs
bound
cmpsb
dec
xor
mov
mov
outsl
test
int
cld
fidivrl
cmp
and
or
jno
add
jae
xchg
imull
ss
adc
jp
in
xchg
jno
inc
cmp
pop
ret
xchg
nop
int3
pop
les
mov
sbb
in
out
jnp
and
pop
inc
gs
sbb
push
adc
jp
stos
dec
inc
push
cwtl
pop
pushl
loopne
dec
mov
imul
xor
dec
out
out
lret
stos
out
xchg
in
pop
xor
adc
pop
or
ss
xchg
jb
stc
push
addb
in
xor
or
insb
push
ljmp
mov
xchg
or
cld
add
xchg
std
cmc
push
jecxz
mov
sub
aaa
push
cmc
dec
mov
push
int3
cmp
xorb
push
ret
jl
push
or
cmc
lret
push
mov
lds
jp
or
test
pop
dec
daa
dec
icebp
jnp
cmp
arpl
xor
mov
pop
ret
lret
popa
std
push
push
rolb
or
loope
stos
adc
mov
cmp
fistps
dec
jecxz
lcall
mov
cmpsl
pop
jg
inc
data16
into
pop
mov
rorb
jno
mov
insl
push
inc
outsb
jmp
xchg
push
jecxz
inc
mov
jno
push
or
jnp
fstps
adc
std
xchg
sbb
jns
mov
loop
dec
mov
test
daa
cmp
in
psubsw
fnsave
fimull
jmp
pop
repz
insb
adc
and
dec
sub
sti
movsl
dec
sub
lahf
dec
pop
int
mov
push
jle
mov
loope
sbb
or
jbe
jmp
jl
push
pop
sbbb
sti
test
into
das
addb
jle
xor
xor
mov
push
cmc
shrb
push
jl
sti
leave
lods
mov
in
xor
xor
push
push
xor
cmp
add
leave
mov
enter
cmp
mov
mov
movsl
daa
inc
bound
test
int
xor
fnstenv
jne
cmp
xchg
xchg
aaa
mov
pop
pop
xor
sahf
inc
add
sub
lret
cmp
ret
repnz
sbb
add
inc
mov
mov
int3
mov
lret
xlat
nop
sbb
mov
lret
cmc
and
push
jo
pop
sbb
xor
subl
mov
stc
sbb
mov
inc
jbe
mov
jb
add
and
mov
loopne
mov
push
ret
cli
cmp
cmp
and
movsl
loopne
pop
int3
call
repnz
xchg
rolb
pop
inc
repnz
mov
pusha
imul
mov
stc
add
mov
dec
mov
test
ret
fwait
xor
pop
dec
rcrl
int
movsl
pushf
arpl
ja
xchg
push
movsb
fstpl
add
pusha
daa
ret
leave
filds
imul
pop
iret
in
mov
cmp
cmp
dec
sub
dec
outsb
rcrl
jg
les
mov
ret
push
cmp
xchg
stc
xor
jns
sbb
push
dec
sysexit
xchg
cmp
fcomps
out
sub
cmp
cld
jp
xlat
ret
orl
cld
xor
add
ja
test
ret
add
inc
jne
xchg
push
sahf
shlb
push
fsubr
dec
outsl
imul
insl
xchg
imul
jmp
xor
bswap
sahf
jne
pop
push
pop
cmp
lret
cmp
aad
push
aas
mov
mov
add
mov
jns
es
and
cmc
push
xchg
aam
movsl
ljmp
gs
mov
popf
add
xchg
xor
je
cmpsb
cmp
jmp
imul
mov
dec
or
ja
jmp
cmp
lock
push
cmp
sub
call
add
loope
pop
push
shll
xor
popa
adc
stos
pop
xor
sbb
pushf
sarl
scas
pop
add
xchg
mov
xchg
push
or
add
lods
mov
mov
jge
jo
add
lea
shlb
jmp
fisttpll
sarb
inc
jmp
or
nop
xchg
adc
dec
js
scas
sbbb
inc
cmpsb
mov
mov
and
aam
jae
dec
dec
jne
push
push
outsb
sub
ret
jb
and
pop
out
push
in
xchg
xchg
fsubrs
in
nop
repz
cli
outsl
xchg
and
push
fdivr
aad
xchg
jns
push
sub
scas
or
dec
fisttpl
xor
jb
or
mov
or
ret
jne
mov
xchg
xchg
pop
cmp
ret
insb
jge
cltd
out
rcll
mov
xor
sahf
xor
mov
push
and
xchg
mov
loope
push
cltd
mov
dec
sti
pop
sbb
daa
xchg
sbb
jmp
xchg
in
in
jno
fmuls
fildll
xor
push
out
inc
pushf
xor
and
xor
scas
lahf
and
int
push
and
fdivl
scas
jnp
dec
clc
mov
pop
in
andl
insb
flds
jle
addr16
daa
dec
imul
pop
xchg
aaa
cmp
ret
aaa
pop
test
cmp
aad
xchg
mov
out
cmp
ds
and
cli
sbb
add
mov
outsl
cli
out
cmpsl
clc
mov
or
clc
dec
cmpb
cli
cmp
hlt
xchg
test
popa
es
adcb
iret
jb
lret
mov
ja
mov
or
aad
xchg
mov
ss
xor
fistps
inc
decb
add
fists
dec
sub
jmp
cld
xchg
insl
int
pop
mov
jmp
adc
movsb
test
cmc
pop
pop
inc
pop
dec
sub
rcr
insb
outsl
out
and
adc
or
dec
pop
add
test
and
addl
sti
xor
out
push
adc
cmp
test
rclb
lahf
xchg
iret
stos
mull
mov
dec
notb
inc
xchg
add
xchg
sahf
imul
insl
and
inc
mov
ss
clc
mov
mov
movsl
cmc
mov
jp
jge
sbb
loop
lods
jo
add
movsb
lcall
ret
push
xchg
mov
mov
stos
cmpsl
dec
out
adc
gs
sub
sbb
adc
gs
jae
adc
mov
lret
fistps
or
pop
rolb
jns
into
dec
js
xchg
sbb
push
lds
jbe
fwait
mov
cmp
cmpsl
das
mov
mov
adc
xchg
shll
xchg
insb
cmp
shll
test
pop
cwtl
lea
lcall
mov
in
jns
add
add
rorl
lret
inc
in
push
orb
stos
mov
sbb
fidivl
dec
jae
xchg
push
sub
ret
sbb
pop
ficompl
cld
pop
scas
lock
out
loopne
sbbb
mov
push
mov
adc
enter
push
push
lahf
dec
xchg
nop
and
lret
sub
incb
jne
xlat
pushf
and
sub
ljmp
out
out
aad
movsl
arpl
pop
cmp
push
sub
dec
push
aaa
ss
jno
mov
std
cmc
and
push
lods
mov
or
rcl
stos
lods
jno
sub
mov
pop
stc
cltd
inc
and
sbb
fsubr
fnstsw
std
xor
push
inc
outsl
jmp
inc
xor
sbb
sub
push
mov
sub
push
aaa
jbe
jb
cmp
mov
push
test
xor
and
hlt
nop
lea
ret
inc
push
idiv
cmc
insl
jns
push
in
sbb
inc
mov
add
cld
andb
xchg
addr16
adc
push
inc
or
inc
ds
mov
mov
push
cwtl
jmp
push
pop
add
dec
ss
sub
outsl
popf
js
in
xchg
mov
or
imull
outsl
cmp
mov
mov
sbb
fs
arpl
or
sahf
add
xor
ljmp
or
popf
das
aas
out
stos
fsubrs
xor
iret
mov
cmp
mov
mov
jno
sub
test
clc
jmp
or
inc
pushf
scas
mov
mov
sub
xlat
stc
sarl
sbb
jno
nop
pop
adc
aas
subb
or
dec
pop
imul
push
mov
pop
jl
mov
fstpt
int
inc
roll
xor
inc
loopne
and
dec
ret
lock
mov
or
mov
mov
aad
aas
sbb
cmp
or
in
imul
and
adc
aam
jne
lock
das
negb
dec
dec
negb
xchg
xor
sbb
outsb
outsb
stos
cmpsb
in
lret
jle
scas
into
jp
jo
dec
aaa
bound
xor
mov
pop
adc
jns
sub
xor
pop
ljmp
push
mov
dec
push
fdiv
mov
inc
inc
dec
xchg
sub
stos
mov
and
mov
and
jnp
fstps
sbb
mov
repz
mov
inc
xchg
test
daa
stc
xchg
cmpsb
sbb
or
add
dec
jnp
cmpsl
add
pushf
test
fildll
popf
cli
adc
stos
pop
pop
stc
les
or
and
test
push
in
mull
push
int
dec
js
add
jnp
popa
outsl
sub
loopne
in
loope
in
or
mov
repnz
dec
loop
mov
ret
sti
pop
lret
fsubrs
fsubr
push
sbb
addr16
scas
mov
sub
cmp
inc
push
push
inc
loope
push
push
xchg
cli
xchg
jg
xchg
lods
sub
mov
lret
push
imul
imul
arpl
dec
sub
test
mov
sbb
leave
sbb
jecxz
inc
test
mov
leave
xor
cmp
into
in
cmc
adc
pushf
dec
clc
hlt
jbe
ffree
jae
dec
mov
pop
iret
outsl
ret
call
xor
jae
mov
add
mov
lret
lods
inc
loope
cmp
fidivs
sbbl
lcall
cmpsl
test
add
adc
cmpsb
ja
adc
add
arpl
inc
xchg
sbb
js
popa
xor
lods
sti
insl
scas
lahf
inc
jb
sbb
scas
sub
sbb
scas
iret
mov
and
add
cmp
call
lods
arpl
xchg
jnp
push
aas
xchg
inc
push
inc
inc
jmp
jmp
add
mov
enterw
and
mov
or
popf
stos
inc
push
lret
jle
jmp
mov
jb
xor
mov
lods
test
stos
test
test
data16
adc
and
add
ret
in
in
inc
stos
mov
fimuls
lahf
add
ds
or
push
xor
mov
shlb
sarb
jecxz
aad
cmp
bound
or
pop
pop
sub
out
push
imul
andb
clc
js
push
push
pop
mov
ret
mov
les
and
andl
notb
leave
pop
jle
in
cmp
lods
mov
in
sub
cld
rcrl
subb
jo
jbe
inc
bound
push
data16
jl
sti
aam
cmp
jl
icebp
je
sarl
inc
scas
out
insl
ficoml
test
mov
sbb
xor
push
xlat
sti
jecxz
sub
mov
daa
dec
inc
adc
add
dec
pop
jo
movsl
pop
mov
cmc
jns
lods
loope
add
fnsave
push
add
adc
mov
adc
fcmovb
dec
add
aad
rorl
stos
and
or
leave
testl
add
cmp
add
sbb
and
mov
std
add
movups
mov
jmp
jns
lahf
jg
bound
imul
mov
repnz
lock
cmpsb
fldl
mov
call
adc
dec
and
pop
add
or
pop
inc
cmpsb
pop
mov
push
fucomp
divb
sub
repz
iret
and
in
fcoml
and
xor
push
push
lods
pop
fldl
jmp
addr16
mulb
dec
dec
pop
xor
xor
or
mov
or
mov
clc
and
daa
ds
push
sti
aam
xchg
push
xchg
rolb
sub
xor
pop
adc
sti
int3
cmp
pushf
ficomps
cli
imul
jle
adc
add
sbb
mov
out
mov
and
cmp
lahf
inc
scas
mov
mov
push
sub
xlat
gs
mov
arpl
arpl
lods
jge
arpl
popa
pop
push
push
add
xchg
insb
add
add
cmp
es
push
or
jmp
mul
out
js,pt
fsubrs
push
mov
sub
push
pop
adc
fnsave
call
add
push
leave
sub
and
jg
dec
test
loopne
adc
ss
xchg
and
repnz
imul
mov
rcrl
dec
or
sbb
sbb
fcmovnb
and
inc
loop
and
sub
pop
add
shlb
adc
push
dec
sbb
enter
ja
push
mov
lret
mov
dec
pop
fwait
lcall
js
cmp
add
mov
enter
add
add
mov
xchg
adc
iret
rcr
inc
les
adc
xor
jno
jne
adc
sub
outsb
mov
pop
mov
jge
xchg
jmp
subl
iret
mov
and
call
cmp
ss
sub
sar
pop
push
ret
lock
dec
je
jmp
xchg
jecxz
in
jle
int3
xorb
orb
gs
arpl
mov
fsubrs
mov
or
outsl
test
and
push
pop
push
out
test
ja
or
pop
mov
daa
pop
mov
stos
mov
xchg
jecxz
shrb
push
jl
pusha
out
mov
mov
ljmp
jle
or
arpl
mov
cs
addb
out
icebp
add
xor
add
out
in
pop
sbb
push
mov
mov
jb
jne
sub
cmpsl
push
popa
in
mov
push
addb
dec
je
lods
in
inc
lahf
jo
into
mov
cltd
sbb
dec
pop
push
stos
adc
sub
mov
pop
mov
sbb
dec
lds
xchg
push
push
lods
mov
pusha
sbb
in
adc
loopne
add
rdpmc
mov
into
movsl
inc
push
xor
adc
add
mov
cli
sub
loope
inc
cli
xlat
sub
test
mov
popa
jno
jl
in
dec
push
out
out
insl
enter
fdivs
cmp
ljmp
pop
aam
sub
outsl
dec
adc
repnz
xorl
adc
negb
shrd
cmpsb
mov
mov
jns
fadds
iret
sahf
stc
fsubrs
ljmp
jno
push
out
push
iret
mov
adc
jecxz
std
cmp
cltd
div
push
jnp
andl
push
dec
movsb
notl
cmp
scas
std
xor
or
clc
dec
xchg
clc
xor
stc
call
or
xchg
sbb
dec
pop
add
pop
sub
xchg
mov
in
notb
jo
push
aas
addb
mov
sbb
dec
xchg
loopne
out
cmp
xchg
sub
mull
mov
pop
repnz
mov
adc
mov
xor
add
xchg
push
fnstenv
bnd
ret
lcall
aad
or
arpl
jo
outsb
int
imul
sbb
gs
sti
add
mov
daa
inc
sbb
test
jno
sbb
mov
jl
call
adc
add
push
test
pop
je
pop
cmp
out
lret
cld
loopne
cmp
sbb
fldenv
imul
mov
arpl
pop
es
push
fistps
lock
pushf
push
cmpsb
repnz
sbb
adc
jbe
add
lock
inc
push
fsubl
out
movd
pop
pop
xchg
dec
pusha
inc
push
xchg
fnsave
or
cwtl
or
fwait
pop
outsb
dec
and
aam
push
addb
stc
in
mov
add
xchg
dec
xchg
aas
into
or
inc
mov
es
sub
inc
cli
testl
pop
lahf
add
xchg
jmp
cmp
sub
out
cmp
pushl
jge
mov
fcompl
sti
cmpsl
loope
fcompl
jge
adc
jbe
jb
shrl
push
je
mov
dec
cs
stos
addr16
es
lds
push
push
into
add
mov
xchg
lock
or
jp
enter
addl
clc
pop
or
std
lods
iret
pop
into
stos
or
cli
stos
sbb
sbb
cmpsl
cmp
lcall
jmp
mov
xchg
mov
scas
cmpsb
mov
iret
inc
jl
outsb
add
call
or
mov
je
js
loopne
inc
movsl
stc
mov
push
std
pusha
repnz
pop
ljmp
push
or
fwait
mov
adc
xchg
inc
mulb
insb
jmp
lret
insl
test
loope
cmc
xchg
lret
sbb
popf
add
cwtl
xchg
test
xchg
insl
outsb
sub
pop
rcl
in
iret
push
loopne
pop
ja
or
insl
mov
in
lcall
popf
scas
add
ja
out
mov
lock
arpl
pop
sbb
arpl
add
or
int
and
push
xlat
daa
dec
getsec
xchg
cmp
add
pop
inc
cmp
sbbl
bnd
cmp
cmpsl
xchg
cmpsl
les
rcr
lds
jo
add
inc
cli
mov
roll
lock
test
mov
ds
jecxz
push
mov
mov
xchg
mov
ficoms
ret
ja
dec
jnp
inc
xchg
mov
jmpw
mov
or
push
inc
ljmp
dec
pop
iret
popf
pop
xlat
dec
test
push
dec
cmovp
je
sub
fucom
mov
lret
pop
scas
xlat
icebp
cmc
mov
clc
or
rorl
imul
xchg
jge
aad
ss
test
and
xor
and
movsb
dec
jb
inc
js
inc
mov
in
push
dec
fptan
add
cmp
dec
mov
orl
sbb
mov
rcrl
imul
repz
stos
ss
in
jo
mov
je
mov
in
mov
in
jle
outsl
mov
addl
lods
pop
xor
xchg
mov
insb
call
adc
aam
pop
jge
sub
ljmp
lock
mov
dec
bound
sub
fwait
mov
repz
inc
jno
jo
mov
cmp
iret
push
repz
lea
push
inc
scas
pop
sub
cs
movaps
shr
stc
mov
cld
or
sbb
dec
inc
lea
jnp
shll
shll
stos
or
insb
sbb
mov
mov
lock
jg
push
pop
and
mov
insb
into
xchg
ret
push
pushf
dec
push
pop
enter
xchg
xchg
imul
push
sub
pop
mov
dec
shll
mov
enter
decb
pop
xchg
sub
push
sub
std
mov
add
dec
sbb
jns
repz
sahf
daa
xchg
cltd
add
jmp
out
xor
out
add
adc
cmp
mov
fdivr
xor
dec
xor
out
sbb
int
cld
out
ret
dec
cld
sahf
push
sub
sbb
cmpsl
fisttpll
xorb
scas
pop
mov
or
decb
loop
sub
mov
sbb
jp
loopne
jecxz
out
mov
sbb
sub
bound
and
cmp
xor
and
pop
rolb
adc
mov
dec
subl
hlt
pop
sub
jle
cltd
fstpl
aaa
jle
mov
movsb
pop
xchg
jbe
data16
ja
inc
addr16
pushf
inc
cs
jb
iret
out
repz
arpl
xor
dec
jle
jne
sbb
hlt
or
push
mov
mov
loop
pop
in
bound
xor
inc
fcmovnu
fists
push
mov
add
clc
xchg
movsb
push
adc
lods
mull
stos
mov
int
add
dec
push
pop
fwait
add
arpl
dec
push
enter
test
jb
pop
jno
cmp
rcll
mov
jecxz
in
jo
dec
out
es
ficoms
sbb
add
cmp
sbb
rcll
fwait
pushf
loope
cmp
out
arpl
outsl
fstp
adc
adc
insb
call
aaa
xchg
pop
stc
popl
mov
and
outsb
mov
cltd
in
xchg
jns
jge
out
movsb
jbe
jno
out
mov
pop
adc
mov
mov
cmp
pushf
mov
movsl
out
out
add
fadds
es
mov
sub
js
mov
call
mov
mov
cmpsl
xor
push
shll
cmpsl
mov
or
pop
sbb
decb
mov
cs
loope
sub
cld
push
out
mov
insb
mov
sbb
mov
dec
mov
mov
adc
je
push
mov
inc
xchg
bound
xchg
stc
pop
xor
js
push
and
sti
js
ja
xchg
sbb
dec
mov
lock
into
test
cmovle
aas
test
test
sub
xor
ds
pop
xor
ret
jne
test
inc
sbb
add
jb
dec
adc
cltd
xchg
fistpll
mov
aam
jae
adc
xchg
lcall
sarl
or
cs
jne
sbb
cmp
lcall
mov
mov
pop
loopne
dec
jl
aad
ficompl
push
add
jne
ret
cmp
jae
ja
pop
or
jge
int
addr16
fcmovb
push
mov
jo
test
mov
mov
lret
mov
test
push
lods
aad
sbb
fs
stos
cmp
dec
sbb
add
test
dec
ficompl
dec
btr
mov
inc
repnz
lahf
push
stc
mov
bound
inc
adcb
and
mov
and
insb
jbe
jne
addr16
call
addr16
fcomp
mull
xchg
cmpl
test
in
pop
hlt
loop
xlat
sbb
dec
bound
fldenv
cli
or
adc
stos
mov
push
adc
push
push
sahf
ret
movsl
enter
fxtract
mov
addb
mov
jl
pop
hlt
lcall
pop
sub
test
inc
ds
cld
mov
jne
out
dec
aaa
jecxz
and
mov
jl
sub
shll
divb
pop
pop
cmc
movsb
rclb
aaa
andl
adc
fwait
js
pop
call
adc
adc
aas
flds
or
sti
sbb
or
jp
les
pop
in
leave
mov
aad
mov
fs
xchg
mov
sbb
pop
xor
test
lds
jae
mov
xchg
push
lcall
iret
xor
xchg
inc
scas
adc
xor
mov
inc
mov
repz
push
push
cmp
stos
xchg
int
adc
pushl
jmp
loope
add
in
insb
push
sbb
gs
xor
hlt
stos
cmp
xchg
inc
into
push
int3
jae
or
sub
out
fistps
out
inc
mov
cmpsb
icebp
xchg
adc
fbld
in
push
into
stc
lods
sbb
or
pop
scas
aas
cmpb
adc
ja
sbb
ja
cmpsb
add
or
cmp
shll
pushf
leave
push
aas
or
adc
adc
sbb
lds
clc
dec
cmp
out
and
stc
test
dec
in
das
mov
loopne
jg
hlt
shlb
inc
ret
sbb
dec
cmp
sub
pop
xor
mov
jae
stos
push
nop
stc
inc
out
inc
data16
fdivl
rorl
jp
popa
in
inc
imul
mov
jl
in
pop
inc
or
mov
push
sub
out
outsl
push
aas
outsl
rclb
sbb
push
ret
sbb
push
in
xchg
push
pop
jo
arpl
mov
jp
xor
sbb
sti
mov
pop
mov
mov
xchg
pop
add
in
inc
lahf
das
xor
mov
rorb
in
out
add
arpl
mov
test
mov
test
les
mov
lret
movsb
pushf
test
out
mov
xchg
push
inc
sub
cmp
cmp
or
sub
in
das
ja
jne
and
shlb
jl
pop
or
dec
nop
jnp
icebp
negb
mov
das
jnp
sbb
outsl
xchg
loope
insb
nop
aaa
lret
pop
enter
sbb
or
shrl
fadds
xchg
pop
xor
icebp
push
and
and
lods
test
mov
dec
add
xchg
loope
in
jge
add
fisttpll
out
jle
dec
nop
xchg
mov
out
push
sub
rol
out
test
mov
adc
nop
jne
outsb
es
cmpsb
popl
mov
out
shll
test
cmpl
int
pop
jno
jnp
in
adc
xchg
mov
mov
pop
push
in
push
and
ljmp
mov
cwtl
xor
mov
iret
fistpll
xchg
test
out
rcl
xor
negb
push
and
movsl
movb
add
adc
out
aad
xchg
inc
pusha
xor
add
call
mov
enter
sub
sbbl
ret
push
sub
out
sub
add
cwtl
dec
and
and
pop
add
fiadds
sub
nop
jne
aam
gs
jo
pop
and
xchg
cli
test
in
and
or
add
lds
adcl
mov
mov
adc
pop
aaa
dec
sub
sub
lock
mov
es
and
cmp
rcll
scas
stos
jo
mov
mov
xchg
jle
xchg
std
inc
popf
mov
mov
jg
repnz
inc
mov
call
and
or
cli
sub
mov
call
dec
ljmp
jecxz
xchg
je
add
push
fistl
add
dec
mov
sub
push
ficompl
adc
mov
ret
mov
mov
mov
jae
sbb
loope
mov
mov
fldl2e
fs
add
or
test
mov
xchg
mov
jae
jno
nop
outsb
push
ja
mov
sub
push
sahf
jns
push
pop
xor
loopne
pop
jb
int3
xchg
push
dec
jecxz
cwtl
jp
pop
adc
ja
test
jp
dec
mov
adc
fistpll
fcmovnu
push
daa
repz
sbb
in
xor
mov
push
movsl
outsl
cli
out
aas
cmp
push
inc
dec
cmp
idiv
aam
jmp
sub
xor
sbb
ja
push
sub
out
sub
adc
ss
mov
addr16
fs
lret
stos
mov
addr16
fcoml
mov
fcomi
je
arpl
dec
stc
pushf
xchg
sbb
or
mov
add
adc
inc
sahf
jl
inc
out
xchg
and
fisubrl
push
mov
faddp
xchg
inc
cmpsl
ja
mov
loope
or
mov
out
push
adc
push
cmp
dec
push
sub
dec
daa
sti
push
xor
nop
pop
mov
daa
adc
in
lds
repnz
jecxz
scas
pop
pop
xchg
fldenv
loopne
popa
jns
popa
cmp
xchg
jo
dec
int
push
iret
rolb
aad
mov
pop
sbb
push
push
xchg
and
inc
pop
jnp
push
jb
inc
cmp
push
dec
adc
add
mov
pop
push
insb
sub
fnstenv
jmp
jns
sbb
pop
xchg
imul
jmp
pop
cmp
or
mov
mov
orl
inc
push
inc
rcll
lret
mov
sub
add
int3
pop
fwait
dec
lahf
jns
dec
pop
pop
add
stos
and
pusha
xor
clc
ja
add
test
or
jnp
mov
sbb
es
sub
mov
jo
jp
ljmp
dec
add
mov
push
repz
pusha
test
jmp
insb
pop
movsl
dec
shl
ja
add
ljmp
repz
pop
mov
jecxz
stos
test
out
mov
enter
mov
mov
mov
fsub
add
mov
sbb
cmp
stc
je
aas
mov
inc
addl
jp
push
pop
in
mov
xor
sbb
pop
ret
mov
icebp
pop
mov
and
mov
out
sub
push
push
and
adc
mov
inc
jo
data16
movsb
ja
loopne
loop
scas
call
mov
cmp
xor
sub
mov
inc
add
outsb
xchg
hlt
sbb
push
sbb
lret
adc
repz
add
pop
dec
jg
lahf
shlb
mov
repz
inc
ret
loopne
mov
mov
ss
sub
movsb
mov
dec
aam
mov
xor
movsl
movsb
subl
add
clc
xor
mov
jno
ja
inc
test
cmp
aad
add
fcomps
mov
adc
mov
enter
shlb
or
dec
jg
stc
shrl
adc
stos
ret
mov
adc
mov
or
fstl
sbb
xor
pop
push
movsb
mov
dec
mov
clc
cwtl
lret
mov
or
or
outsl
in
jl
lret
sub
cmp
or
test
jl
and
lods
ds
gs
out
int3
xor
xchg
mov
out
inc
and
add
pop
mov
lds
adc
test
test
outsl
push
out
into
mov
xor
std
cmp
cld
test
data16
sbb
push
push
cmp
imul
aam
dec
sub
fcmovnb
and
cltd
call
and
sbb
mov
push
xor
adc
sub
aas
xor
sbb
xchg
jl
cmp
dec
enter
cmp
mov
cmp
fisttpl
and
fidivrl
adc
out
pusha
pusha
cld
sti
and
push
daa
cmpsl
or
sbb
sub
test
call
push
mov
pop
mov
dec
push
inc
pop
arpl
and
std
cmc
jg
cmp
mov
add
scas
in
inc
push
or
rclb
xor
add
popa
jnp
ss
pop
xchg
mov
xor
in
lcall
pop
js
and
xor
adc
test
jb
sub
sub
cs
mov
push
ds
cld
jle
js
push
pop
insb
inc
mov
cs
sbb
sub
testl
div
out
push
jmp
sbb
xor
and
shlb
test
mov
jg
push
xchg
jmp
xchg
and
and
outsb
xor
adc
cmp
test
out
lea
aam
out
inc
dec
adc
mov
mov
push
ret
fsubrl
les
mov
insl
fdivr
push
into
ss
sub
add
and
mov
push
les
movsb
ljmp
fcom
dec
test
loopne
mov
fnsave
xchg
gs
push
unpckhps
scas
pop
push
mov
test
xchg
sub
mov
repnz
mov
subb
mov
sbb
arpl
fs
dec
jo
popf
sub
loope
sti
jne
mov
addb
push
jg
or
xchg
xor
inc
sti
jle
xchg
xor
xor
fdivs
sbb
es
pusha
mov
iret
mov
mov
lahf
xchg
movb
aas
pop
sub
flds
dec
iret
out
ljmp
test
fidivl
pop
inc
addl
mov
sbb
push
in
leave
cmp
scas
popf
bnd
sub
dec
sbb
jecxz
ja
add
lds
repz
sub
ret
ja
outsb
imul
push
je
jb
dec
pop
cmpsl
push
cmpsl
cmc
jmp
sbb
lds
icebp
cli
or
mov
inc
arpl
adc
cli
fcmovnb
mov
adc
cwtl
xchg
push
loop
push
fwait
pop
xchg
pop
or
xchg
sub
in
xor
xor
adc
lock
mov
xchg
mov
dec
aad
movsl
ja,pn
mov
repz
sbb
fld1
jmp
dec
push
fcomp
pop
js
out
mov
lea
or
sti
mov
inc
xor
mov
sbb
add
xchg
arpl
ljmp
pop
mov
and
sbb
lret
mov
icebp
mov
cmp
leave
jg
fcompl
sub
aam
cmc
mov
dec
leave
dec
jne
and
cmp
cmc
jbe
jbe
mov
jmp
sbb
hlt
lcall
xor
das
jo
cmp
lahf
push
cwtl
ds
mov
mov
mov
dec
rcl
inc
ret
mov
je
pusha
jo
mov
mov
imul
push
fwait
ds
popa
repz
cmp
jae
fnstcw
cltd
bound
icebp
dec
push
fwait
xor
rorb
ss
mov
daa
lret
fcoml
mov
push
cmp
cmp
or
xchg
outsb
and
jp
subb
loopne
cs
daa
pop
arpl
mov
pop
dec
or
es
jmp
xchg
jbe
popf
js
stos
push
jb
adc
inc
push
test
cli
add
shl
adc
xchg
mov
dec
arpl
ljmp
mov
adc
pop
pop
pop
test
sub
push
push
cli
push
adc
enter
xor
xor
insl
cmp
out
mov
loopne
ret
xor
or
inc
icebp
pop
int
push
out
and
and
mov
cmp
pop
jmp
dec
aas
dec
cmp
iret
pushf
sub
ror
sbb
pop
cs
add
movsb
push
xchg
add
dec
ss
mov
mov
testl
push
mov
inc
hlt
push
in
add
frstor
cli
and
stos
fwait
imul
ja
mov
push
call
add
jo
pop
add
jno
idivl
cmp
lods
sub
adc
mov
stos
cmpsl
ds
lock
inc
xchg
fisttpll
fisubrl
cmovns
cmp
xchg
xor
pop
sbb
jecxz
cmp
pop
pop
shrb
rcll
sahf
add
mov
ds
xchg
sub
les
push
stos
rcl
add
mov
stc
mov
cmpsl
sahf
stos
dec
jg
ss
lods
mov
popf
test
push
inc
jl
ss
or
test
jnp
jmp
mov
lcall
mov
xor
and
outsl
jo
jno
sti
sbb
clc
int
inc
iret
mov
jmp
mov
arpl
loopne
pop
sub
xchg
int3
ror
jmp
cmp
stc
mov
mov
cltd
std
jo
sbb
repz
sbb
aam
inc
jae
pop
sbb
mov
xor
adc
inc
dec
inc
sub
xchg
bound
stos
addr16
mov
and
push
push
loope
mov
dec
addr16
int
insb
mov
dec
rcr
pop
and
lret
or
fiaddl
fs
subl
mov
push
add
lcall
and
cmp
cmp
insb
jle
xchg
ss
and
inc
cmp
adc
arpl
rclb
iret
mov
add
jmp
fcoml
adc
and
push
aaa
add
arpl
stc
rorb
jns
mov
sbb
dec
test
or
push
pop
dec
push
fsubl
lock
stc
inc
cmp
xor
mov
mov
xchg
hlt
adc
push
mov
or
addr16
adc
lret
adc
sahf
add
add
push
inc
mov
push
imul
dec
fstl
mov
or
lods
push
aam
push
das
imul
pop
gs
cld
enter
adc
shlb
and
push
xor
dec
data16
cmc
shr
jge
sbb
mov
dec
push
jg
push
sub
repnz
clc
jae
push
loop
sbb
decb
subl
aas
addl
rclb
cmp
hlt
inc
jg
cld
mov
dec
rcrb
xchg
push
shll
jne
test
into
inc
test
add
gs
cmc
or
scas
out
xchg
out
negl
ror
xor
adc
jns
lods
sub
stos
ret
fdivr
cli
xlat
jmp
sbb
js
das
pop
adc
aaa
mov
jns
push
mov
pop
lods
hlt
dec
es
insl
scas
popa
adc
imul
das
lcall
lea
insl
loop
repnz
lcall
stos
mov
into
daa
or
aas
out
jl
movsb
rorb
xchg
fstpt
pop
out
xchg
dec
mov
mov
lahf
jg
mov
mov
pop
push
xchg
xor
jp
aad
xor
fnstenv
mov
repnz
ror
sar
ss
out
ljmp
std
dec
lods
dec
cmp
std
in
jl
stc
fildl
inc
or
jbe
pop
nop
mov
inc
and
cltd
int
dec
push
or
mov
push
fwait
sub
fucomip
mov
nop
leave
push
das
insl
insl
in
fs
clc
lods
outsb
adc
notl
mov
outsl
lret
jle
sbb
sar
aad
cmp
push
cmp
daa
mov
test
cli
cmp
rcrl
inc
pusha
sahf
and
loope
decb
pop
mov
iret
mov
lods
adc
xor
or
mov
jg
mov
movsb
pushf
xlat
mov
push
or
adc
cmp
push
adc
cs
mov
push
sub
mov
mov
push
iret
ss
les
cwtl
int
jl
rcr
xchg
mov
sbb
mov
test
cmp
pop
out
sub
cmove
ljmp
es
ds
push
inc
push
jge
out
add
iret
pop
sbb
adc
mov
out
xchg
xchg
sub
aaa
jo
mov
pop
mov
aam
inc
xor
jge
inc
gs
sbb
jnp
enter
call
sbb
iret
rcll
cmc
pop
sahf
in
xchg
dec
in
adc
repz
adc
jne
push
jne
adc
jnp
out
xor
mov
les
rclb
in
sub
mov
push
xchg
xor
cltd
xor
popf
mov
push
xor
fucom
aad
adc
aaa
cmp
dec
jg
adc
iret
add
das
aad
pop
pop
clc
xchg
and
pop
mov
std
cmp
pop
clc
hlt
and
push
xchg
and
xchg
dec
mov
je
dec
sbb
xchg
lds
pop
dec
cmc
test
push
fistpl
jg
dec
xchg
sub
dec
adc
sbb
jmp
push
imul
sub
add
lds
ss
jmp
cmp
mov
pop
cmp
ja
mov
andl
in
fistl
mov
into
push
hlt
popf
jmp
jmp
dec
ret
mov
std
or
jp
push
aam
cmp
and
das
jo
lods
in
or
cwtl
jle
int
in
popl
clc
cld
test
arpl
inc
lea
aaa
sti
mov
pusha
scas
repz
xor
jecxz
sub
inc
fimuls
lcall
dec
dec
insb
add
pusha
add
adc
add
push
inc
loope
mov
fwait
inc
inc
nop
xor
mov
mov
pop
fs
mov
mov
arpl
mov
cmp
xchg
into
jmp
sbb
nop
sbb
jle
and
cld
adc
subl
int3
imul
push
cltd
cmp
out
inc
out
mov
push
inc
icebp
movsb
dec
jnp
test
inc
ja
addl
and
cmc
jo
repnz
sub
push
cld
mov
jnp
pop
or
test
aas
fsubs
pop
mov
fwait
pop
rorb
lahf
inc
js
test
in
push
movsb
jmp
leave
push
xchg
cli
enter
inc
xchg
test
add
cmp
icebp
push
xor
dec
mov
sub
popf
mov
or
jnp
clc
ja
push
outsb
hlt
out
cmp
and
pop
cmpl
jne
sub
sbb
cwtl
mov
test
mov
stc
mov
push
push
aam
pushf
pop
mov
loope
add
scas
lock
stos
aas
lds
xor
aad
int3
jae
cmpsb
and
dec
or
popl
sub
ret
aam
out
addr16
lretw
enter
push
loope
xor
andl
xor
xor
inc
pop
jl
aam
adc
and
jbe
jae
cmpsl
movl
xchg
pop
jp
cwtl
pop
xchg
movsl
or
out
dec
lret
xor
pop
cmpsl
outsl
je
inc
ds
pop
push
ss
cmp
movsl
stos
mov
and
xor
fwait
mov
cmp
and
push
jmp
es
les
arpl
ss
loop
hlt
iret
insb
pop
mov
jb
jge
or
jnp
dec
pop
mov
popa
jae
and
adc
xchg
inc
subb
orl
lcall
pop
cmp
sbb
lret
data16
xor
mov
xor
adc
pop
cli
jle
mov
leave
xlat
mov
cmp
sarb
aas
cltd
or
insb
mov
cmpsl
addr16
ss
mov
sbbl
loopne
lahf
mov
shlb
or
insb
lods
stos
pop
mov
xchg
cmc
cmpsl
jle
dec
mul
jmp
cmpsb
push
push
adc
dec
arpl
jb
movb
and
aam
xor
xor
adc
sbb
sub
cmp
inc
xor
scas
cmp
je
mov
pop
xor
not
pop
insl
mov
jne
lcall
or
sub
test
daa
mov
xor
push
lcall
jbe
mov
cmp
adc
loopne
sub
xchg
xchg
sub
outsl
jle
xor
insl
mov
cmp
cmp
xchg
sub
ljmp
pushf
adc
test
ja
adc
repz
or
fildl
in
roll
xchg
mov
mov
add
inc
in
aam
pop
push
int
jno
sbb
repz
movnti
cmpsb
cmp
mov
push
cmpsb
xor
sbb
into
pusha
rcl
std
jno
add
mov
mov
xlat
popa
jge
int3
jg,pn
xchg
push
fsubs
mov
clc
mov
xor
adc
cmpsb
ds
lock
inc
insb
cmp
mov
out
aam
mov
jmp
and
push
loop
jg
mov
fcoml
fwait
mov
cwtl
enter
push
jle
jecxz
pusha
int3
mov
dec
int
ds
jl
xor
test
cmp
cmpsl
xchg
inc
adc
enter
adc
and
or
jnp
stos
pop
cmp
in
out
iret
mov
sub
dec
in
rcll
int3
sti
xchg
popa
or
xorl
movsl
pop
mov
mov
adc
mov
sbb
mov
lcall
jge
int
fidivrl
dec
rol
fbstp
sub
sti
test
jp
std
push
loop
int3
mov
or
jbe
sbb
adc
cld
cli
out
cmp
xor
cmpsb
imull
ret
test
ret
fldt
push
sbb
inc
inc
mov
cli
xchg
sahf
adc
jne
jg
repz
pand
hlt
push
iret
mov
push
mov
hlt
loopne
xchg
mov
es
or
sub
adc
nop
test
push
add
sbb
popa
subb
aam
adc
push
loope
jecxz
mov
mov
mov
inc
push
cmc
cmpsb
andb
cwtl
es
jnp
xchg
add
lock
push
inc
data16
xchg
cli
adc
mov
pop
add
shll
pop
jnp
mov
push
xchg
and
mov
mov
xor
xchg
insb
push
scas
out
jmp
adc
out
add
mov
mov
mov
jae
jmp
arpl
adc
dec
gs
imul
scas
std
lret
add
icebp
icebp
jo
jo
scas
in
add
sub
in
mov
fcoms
add
loope
and
mov
mull
xor
imul
cmc
mov
inc
mov
repnz
stos
cmpsb
loopne
push
iret
mov
inc
or
mov
sarl
out
mov
push
dec
in
in
aaa
mov
out
ljmp
testb
dec
jo
xor
das
lds
cmp
es
push
or
cmp
push
and
dec
cmpsl
push
adc
outsb
rorb
adc
out
inc
mov
sbb
lods
jae
popf
mov
cmc
dec
sub
outsl
push
sbb
xchg
xchg
les
lods
inc
insl
mov
cmp
xor
xor
imul
or
jmp
mov
sub
filds
mov
adcl
xor
mov
pop
and
loop
xor
test
mov
cwtl
jbe
movsb
icebp
lret
mov
outsl
xchg
movsl
std
pop
xor
cltd
push
jno
mov
out
cmpsb
jge
mov
jg
or
pop
cmpsl
cmp
push
mov
adc
mov
mov
ror
cmp
pop
jno
mov
in
push
dec
jecxz
pop
inc
jb
sarl
xor
leave
lret
fstl
in
xchg
dec
fisubrs
jbe
out
and
pmuludq
dec
shll
cmp
push
add
xor
stos
test
mov
mov
orw
xor
jle
cltd
push
sub
inc
sbb
pop
sub
fldenv
xchg
sub
jge
dec
jge
xorl
mov
pop
out
dec
mov
and
mov
faddl
or
roll
adc
cmpb
jge
push
mov
dec
jg
ljmp
sub
lods
mov
scas
ret
movsb
lea
sub
mov
cld
movsl
pop
cmp
aaa
push
xor
cltd
movsl
dec
daa
in
shrl
mov
es
xlat
xchg
dec
add
nop
cs
call
push
mov
int
cli
dec
out
lods
cmp
clc
adc
enter
cmp
shll
imul
mov
sbb
cmpl
jecxz
cmp
in
sub
das
dec
lock
shll
sbb
stc
mov
ss
aad
cmp
mov
xor
shll
lahf
shl
outsb
outsl
mov
sbbl
inc
leave
mov
and
enter
lods
jns
xchg
sub
dec
xor
mov
push
mov
fcomp
cmp
and
scas
jecxz
out
cmpsl
cmp
pop
iret
push
push
and
mov
jmp
dec
add
xchg
stos
mov
fimuls
push
push
mov
aas
pop
mov
mov
xchg
mov
sub
and
call
mov
and
mov
test
push
cli
cmp
js
xchg
clc
aam
std
jg
adc
iret
pop
mov
inc
mov
mov
in
xchg
pusha
sbb
ja
iret
jp
adc
dec
lahf
sub
lcall
test
test
sbb
xchg
lea
mov
sbb
jmp
xchg
imul
enter
loop
ja
pop
fldcw
sbb
xchg
das
xchg
outsl
or
mov
stc
lods
test
stos
lods
add
rcll
fcoml
fs
and
dec
loope
xchg
xchg
add
sti
rclb
mov
add
loop
lret
jmp
dec
gs
jae
or
inc
cli
adc
fdivrs
test
js
sub
and
mov
shl
lock
popf
xchg
cmp
pop
imul
mov
jge
sub
xlat
fwait
lret
das
test
test
into
out
les
icebp
mov
xchg
sti
lds
jno
fnsave
fscale
faddl
sub
push
adc
jle
nop
xchg
push
arpl
xchg
mov
jnp
ss
mov
xchg
inc
adc
aaa
sbb
jle
cmp
xchg
and
shll
sub
xchg
scas
xchg
adc
hlt
pop
xor
or
mov
loop
fwait
inc
or
mov
jo
jno
sbb
jg
mov
and
out
mov
imul
adc
lock
inc
rorb
mov
or
pop
clc
sub
push
mov
cmp
and
xchg
mov
iret
push
add
test
test
and
lcall
adc
adc
lock
ds
xor
insb
add
in
jp
jl
ja
aam
pushf
mov
jne
adc
stos
aad
fsub
out
data16
divl
push
loope
scas
outsl
es
aad
call
je
pop
sbb
sbb
inc
dec
pop
cli
inc
addr16
add
out
pop
test
arpl
cmp
les
ss
or
cmp
dec
jb
jge
push
lea
xor
fcmovu
ss
cmpsb
pop
inc
pop
cltd
lds
call
xor
out
icebp
inc
pop
inc
jae
ret
cmp
insl
repz
xorb
nop
jge
imulb
inc
fisubl
and
xor
js
sub
call
jmp
sbb
movsb
lret
dec
inc
enter
fwait
movsb
sub
xor
pop
xchg
dec
and
xlat
or
setnp
xchg
xchg
test
or
add
scas
in
lret
fwait
pop
movb
and
cltd
rolb
sbb
daa
dec
and
cmp
inc
dec
ljmp
or
lret
inc
cmp
cwtl
xor
add
pop
lock
jmp
test
push
push
ja
mov
add
sbb
sbb
test
fs
das
lea
sbb
lods
dec
push
mov
lahf
ss
inc
pmuludq
jmp
jmp
lods
mov
jae
fsts
faddl
jp
xchg
inc
mov
out
fadd
fistl
fs
lea
inc
fdivrl
add
and
and
loop
testb
cmp
cmp
mov
xor
mov
enter
push
sbb
aas
mov
and
xchg
lahf
ljmp
pop
les
aam
int3
inc
xchg
popf
and
in
or
mov
out
int
pop
adc
call
cmp
clc
mov
adc
jmp
dec
xor
test
cmpsb
add
orb
test
fstpl
adc
sahf
subl
and
mov
sbb
jo
xor
add
les
shrb
std
and
adc
pop
insl
mov
xor
inc
xor
iret
sarb
gs
divb
or
push
push
mov
and
adcb
ljmp
idivl
nop
add
in
jp
addr16
pop
lcall
push
adc
dec
fcomps
call
les
es
lock
mov
mov
fsubrp
xchg
in
xchg
and
mov
fld
lds
addl
xor
in
add
adc
mov
lret
xchg
add
sbb
in
cmp
jns
sub
fdivrl
mov
jae
dec
xor
mov
jge
das
xor
mov
sub
cmc
ret
pop
fwait
mov
icebp
jbe
jge
inc
jg
lcall
mov
push
mov
dec
and
xchg
loopne
scas
jno
sbb
or
wrmsr
repnz
ljmp
xchg
lods
sbbl
adc
filds
jno
jae
into
sbb
xor
mov
arpl
out
inc
sti
ja
inc
cmp
mov
cmpsl
jb
clc
push
xlat
std
cmpsl
or
mov
and
ljmp
mov
daa
add
and
or
push
cmc
sbb
and
stos
popl
or
sbb
push
idiv
add
lret
shrl
daa
imul
outsl
sbb
add
adc
sti
nop
shr
inc
int
dec
pop
sub
xor
mov
arpl
adc
sbb
aas
jno
sahf
insl
popf
addb
mov
or
das
pushf
xor
push
xor
pop
fnstenv
popl
stos
fs
or
call
in
cli
xor
int3
ljmp
std
roll
xor
rclb
dec
fidivl
push
imul
idivb
pop
pop
addr16
pushl
mov
inc
cli
mov
js
sarl
imul
sub
roll
loop
xchg
aaa
sti
in
lock
jge
jmp
in
dec
ja
xlat
fsubl
lret
pop
daa
xor
test
pop
jmp
test
jp
cli
and
dec
adc
push
adc
out
test
out
outsb
mov
push
inc
add
cmp
ljmp
cltd
mov
cmp
lods
push
pop
insl
dec
push
dec
lret
int
mov
negl
test
rorb
xor
fadd
mov
or
xchg
fcmovnu
push
ficompl
sub
aad
dec
lcall
shrl
adc
inc
js
bound
shll
mov
mov
icebp
push
es
fucomi
inc
xor
arpl
add
adc
add
and
jge
cmc
jbe
cwtl
sbb
popa
dec
dec
dec
or
push
ja
mov
jns
iret
jb
lea
cli
push
xor
jo
cmp
and
mov
dec
mov
dec
pop
pop
dec
jbe
sub
push
mov
popaw
lds
cmp
fmuls
fstl
adc
mov
out
popf
mov
fcmovbe
inc
or
in
jmp
pop
addr16
loop
in
popa
into
and
je
lods
rcrl
outsl
mov
lods
cs
ss
outsb
inc
rorl
dec
dec
mov
jbe
adcb
or
jne,pt
and
gs
and
push
mov
push
aas
movsl
scas
out
sbb
xlat
stc
test
and
ror
dec
cmpsl
es
xor
inc
sbb
push
sbb
int
lret
mov
jbe
fbstp
sub
cmp
mov
flds
mov
outsb
fisttps
cwtl
jg
xor
and
outsb
outsl
aaa
jg
cld
outsb
jo
test
pop
lcall
jg
je
jnp
cmc
cmp
mov
inc
jnp
in
xlat
movsl
paddq
rcll
dec
pop
out
pop
xor
push
popl
and
jbe
xchg
inc
jnp
lds
daa
orl
add
xchg
ja
orb
clc
scas
jo,pn
in
cmp
rcrl
inc
loope
push
mov
out
pop
cmp
dec
leave
mov
pop
push
push
mov
jmp
jo
icebp
lret
dec
xor
push
or
test
out
rorl
int3
inc
xor
mov
std
ja
cmp
mov
push
in
shr
cld
aaa
mov
and
mulb
movsb
cwtl
testl
adc
dec
push
xchg
cmp
shll
pop
and
repz
cs
add
jno
cltd
push
mov
fwait
inc
jge
and
popf
jecxz
or
mov
les
aas
jge
push
iret
leave
push
cli
mov
or
mov
fadds
dec
adc
dec
out
idivl
int
aam
inc
fs
lret
jne
sti
sub
cwtl
add
sbb
int
rcrl
mov
inc
mov
xchg
xor
add
into
and
sarl
push
or
sbb
sbb
ret
pop
or
add
mov
jmp
inc
je
jg
mov
aaa
jecxz
outsb
cli
std
jne
add
jge
cld
jg
int
je
std
sub
out
jbe
inc
or
pop
lahf
lods
aaa
lock
fisubrs
aad
jo
popa
adc
mov
lahf
cmc
rcr
pop
pop
push
jo
mov
in
and
sbb
rcrl
or
jge
add
lods
sbb
sub
popf
les
jmp
aam
daa
in
inc
dec
xchg
dec
pushf
fidivs
sub
outsb
push
jg
sub
add
mov
mov
cmpsl
pop
pushf
adc
or
adc
cltd
fistl
in
dec
leave
pop
cmp
inc
dec
fcoms
jo
arpl
push
sbb
xor
aas
xchg
cmpsl
jmp
jnp
add
loopne
sbb
push
xchg
in
insb
xchg
xor
roll
inc
and
mov
stos
cmp
adc
or
and
sbb
adcl
xchg
iret
inc
jnp
xchg
repz
adc
push
mov
sub
dec
lods
xchg
pop
rolb
mov
xor
jne
push
test
or
push
sbb
das
cmpsl
gs
gs
movsb
cmc
outsl
gs
imul
dec
adc
fucomi
stos
jl
push
roll
push
in
cmpsb
rcll
xor
std
imul
xchg
pushf
cltd
orb
rol
rcr
inc
jge
fsubs
out
sbbl
or
cmpsl
mov
sbb
in
lods
lret
or
cmc
ljmp
ret
cmp
insl
aam
outsb
popf
and
lret
test
push
sub
leave
mov
or
mov
inc
sbb
mov
xchg
push
xchg
cmp
movsb
test
pop
jge
arpl
inc
inc
and
pop
lods
jne
data16
frstor
loop
stos
js
int
leave
scas
lea
inc
js
cmpsb
mov
push
mov
sbb
dec
add
ror
dec
sub
jl
je
in
fs
ja
in
push
mov
adc
inc
mov
movl
inc
dec
fnstsw
sub
sbb
fisubs
ret
insb
sbb
mov
mov
xor
daa
outsb
in
and
sbb
push
jbe
fucom
cmp
mov
and
mov
xchg
mov
shlb
mulb
push
xchg
mov
push
lcall
fimuls
test
in
sbbb
dec
push
stc
ja
and
bound
sarl
mov
loope
rolb
shl
add
movsb
je
xor
mov
stos
add
shrl
mov
jp
lret
cmpsb
sbb
jo
mov
mov
sbb
adc
std
test
shll
xchg
pop
neg
pushf
lea
cmpsl
aam
mov
shll
inc
ret
icebp
jge
jns
xor
int3
jo
push
mov
test
push
lret
jle
pop
popf
pop
jg
pop
pop
lcall
adc
adc
movsb
sub
or
vmulss
or
inc
xchg
jnp
std
out
or
std
addb
push
fwait
xchg
lock
mov
add
cwtl
shll
test
mov
cmp
ss
iret
insl
stos
icebp
test
xchg
mov
loop
inc
inc
xor
pop
popa
xchg
xor
sbb
jne
push
sub
adc
shlb
or
or
adc
or
push
inc
mov
push
loopne
ja
nop
dec
adc
notb
gs
sub
pop
cmpsb
mov
jmp
jae
aam
add
add
xor
ret
cmp
push
and
std
fsubs
push
jne
fnsave
nop
iret
callw
add
xchg
adc
scas
lcall
sbb
icebp
pop
add
inc
repnz
cmp
sbb
js
out
mov
hlt
fwait
lret
sbbb
or
mov
push
test
mov
or
jge
pop
ljmp
dec
cmp
iret
fisttps
movsl
int
shlb
sub
sbb
sub
add
inc
inc
cmp
push
mov
jp
cld
push
sub
cmp
loope
xchg
fldenv
jl
mov
fwait
loope,pt
in
inc
mov
mov
test
adc
jbe
xchg
shrb
ret
mov
ret
in
or
add
shll
pop
es
mov
scas
push
inc
fwait
dec
xor
int
pop
cmp
dec
fdivr
je
lds
jne
push
int
jp
movsb
or
aaa
out
outsb
push
popa
and
xor
mov
js
sti
adc
adcb
sarb
incl
xchg
pop
sub
in
cmp
or
xchg
loop
sbb
pusha
lcall
add
sub
adc
dec
lock
int3
sar
mov
sbb
jmp
and
cwtl
sahf
pop
inc
imul
in
push
mov
data16
fs
mov
cmp
sbb
mov
xchg
and
dec
mov
mov
and
inc
lret
lods
xor
jae
sbb
sub
loopne
and
fcmovnb
mov
adc
and
fsub
cwtl
jae
inc
ret
or
bound
outsl
inc
lret
sbb
jle
repz
push
stos
imul
mov
xchg
mov
cmp
sub
inc
popa
movsb
in
fdivrl
aaa
mov
push
xchg
jmp
out
pop
test
or
xor
push
fsubs
aaa
cmp
lret
shlb
cs
push
por
pop
xor
sbb
adc
mov
mov
dec
or
add
scas
lahf
mov
xchg
mov
add
out
sbb
imul
fistpll
sub
inc
mov
or
inc
and
out
and
mov
jge
daa
mov
xor
in
call
jne
in
sbb
pop
push
incl
enter
cmp
or
pop
bound
xchg
mov
push
je
imul
xchg
lcall
jmp
mov
lock
xor
lods
jp
call
ret
jecxz
push
mov
pop
lock
and
mov
inc
adc
into
sub
jmp
mov
push
aas
cmp
mov
or
jl
cmp
add
popf
fnstenv
mov
add
inc
push
push
xchg
xchg
cmp
xor
jno
cmp
iret
out
sub
mov
subb
cmpsb
hlt
xchg
sbb
push
gs
stos
test
pop
cld
sti
es
lds
lds
mov
cltd
mov
lods
dec
inc
or
add
sub
lret
xchg
movsb
mov
into
lcall
imul
jmp
dec
xchg
push
adc
sub
sub
test
push
push
in
notl
lahf
imul
cmpsl
mov
gs
ror
jnp
ficompl
lock
sub
nop
icebp
mov
sbb
aad
fbstp
pop
xor
mov
cmc
dec
sbb
adc
xlat
aaa
test
rep
roll
std
sub
or
dec
imul
jbe
rcrl
rolb
and
pop
pop
mov
mov
cmp
push
out
adc
cmp
std
icebp
hlt
xchg
lea
imul
cmp
inc
inc
outsl
push
inc
fimull
cmp
bound
ja
mov
addb
sbb
loope
ret
adc
fistl
push
insl
xor
pusha
jp
mov
sub
outsb
jg
mov
pop
push
shrl
lock
add
aam
fs
out
xor
loope
push
scas
fdivs
xor
add
push
cmpsb
pop
jno
mov
stc
jle
sub
xorb
jge
cmp
dec
jl
rcll
popa
jl
popf
mov
adc
xor
jo
sbb
mov
push
add
inc
inc
daa
xchg
bound
lods
jmp
inc
mov
mov
shlb
sub
pop
roll
cmp
dec
leave
inc
lods
loopne
or
sub
jb
jge
aas
hlt
in
and
add
push
push
aad
call
jbe
adc
sbb
leave
sub
and
in
fistps
mov
xchg
fcoml
negb
lea
dec
inc
cltd
ss
addr16
scas
aad
scas
sub
xchg
gs
cmpsl
pop
cmp
stos
jge
cld
cli
stc
inc
jo
loopne
xchg
push
xchg
xor
repnz
outsl
or
loope
in
jno
jl
mov
mov
adc
jnp
leave
aad
add
cmpsl
mov
xchg
outsb
cmp
inc
cmpsl
xor
pop
inc
orb
adc
jb
mov
adc
jns
mov
xor
cs
and
jmp
pop
jge
sbb
imul
cmp
jl
push
cs
cmp
jl
movsb
dec
pop
xchg
inc
lret
std
outsb
out
xchg
cmp
mov
ficomps
sbb
call
out
dec
add
aaa
sbb
pushf
dec
scas
lods
xor
pop
adc
and
jecxz
int
cmp
xchg
mov
jae
divb
add
int
repz
jbe
in
fnstenv
lcall
mov
in
jmp
mov
add
jg
out
lret
inc
mov
inc
sahf
subl
inc
roll
pop
sbb
stc
jge
jne
lock
dec
mov
pop
mov
loope
shll
cmp
ja
pop
out
dec
pusha
fistpll
dec
out
jno
xlat
dec
mov
lcall
leave
es
adc
xchg
cmpl
pop
pop
or
sbb
loop
cmp
fs
cmp
or
lock
sar
lds
lea
xor
push
pop
add
cmp
adc
aaa
jecxz
cmp
mov
fistpll
push
pushf
add
cmp
popa
mov
mov
inc
adc
adc
and
sbb
jge
aas
jns
fstpl
mov
sbb
cmp
insb
cli
push
mov
xor
out
sbb
jne
jge
push
sbb
leave
sbbl
imul
and
orb
jmp
mov
jmp
sbb
repnz
movsl
adc
xor
js
cs
mov
xchg
mov
xor
lretw
sbb
jnp
jno
rorl
es
xchg
aam
pushf
push
loop
adc
adc
xor
lret
xchg
or
addr16
cmp
push
lahf
out
xor
fmull
push
fsubl
ret
pop
in
pop
mov
adc
pop
sbb
ds
adc
push
sub
cs
in
xor
int3
cmp
cmpsb
cld
dec
add
stos
movsb
in
pslld
cmpsl
stc
mov
dec
ret
movb
ss
pop
test
xorb
fbstp
mov
jmp
jge
mov
mov
loopne
sbb
seto
cmpsl
test
bound
push
jp
jns
mov
movb
movsl
pop
pop
fidivrs
scas
cmp
rcrl
scas
mov
adc
scas
jo
in
daa
in
ss
fidivs
test
jns
ljmp
pop
shlb
sti
inc
dec
push
push
or
jns
dec
xor
jecxz
push
or
cmp
pusha
test
int3
rcrb
push
dec
and
adc
pop
pusha
push
pop
mov
jno
xor
and
scas
ret
stos
pop
ljmp
sbb
testl
fs
pop
addb
lcall
pop
sbb
xchg
push
insl
and
hlt
sub
outsl
xor
mov
sub
sub
or
xchg
popa
stos
xchg
dec
rdtsc
or
js
dec
fcomps
imul
mov
push
dec
push
lret
push
orb
andl
jo
cmp
adc
dec
push
test
adc
insl
cmp
mov
xor
rcl
hlt
lret
arpl
shl
jns
cltd
mov
popa
fsub
addl
mov
out
and
pop
push
adc
pop
adc
jne
xor
push
ss
cmp
das
lock
fmuls
cmp
mov
stc
outsb
jg
in
cld
xchg
xchg
fldl
fidivrs
out
mov
mov
ds
mov
add
push
jnp
cwtl
jl
out
or
inc
cmp
out
adc
int
sbb
cmp
xchg
das
leave
es
clc
jne
add
xor
lods
test
stos
lds
jge
lret
pusha
orb
imul
mov
fiaddl
sahf
jo
popa
sub
ret
call
jbe
out
pop
das
test
sbb
inc
push
xchg
cmp
movsl
push
add
icebp
in
mov
xchg
popa
xchg
imul
dec
insb
jno
shll
mull
scas
adc
ds
out
push
pushf
pushf
dec
pop
mov
pop
jp
mov
pop
and
mov
bound
push
cmpsb
xor
fstpt
mov
jnp
adc
inc
fwait
and
cs
lret
stos
mov
lahf
js
loop
jae
lock
mov
sarl
jno
inc
lret
dec
shrb
test
imul
inc
popf
ret
cld
xor
push
lds
mov
neg
jbe
jne
test
mov
push
mov
movsb
jecxz
ret
loopne
adc
insl
fildl
xchg
call
or
dec
mov
adc
mov
leave
div
xlat
rorl
mov
jle
sarb
in
arpl
stos
fstps
cmp
lahf
or
jne
mov
movsb
jns
push
dec
ficoml
repz
and
pop
ficoms
mov
shr
and
subl
popa
aas
mov
lret
std
xchg
aaa
pop
xor
ret
jle
and
inc
repz
mov
cmpsl
popf
sarb
inc
push
xchg
pushf
fbld
inc
sub
cltd
cmpsl
fninit
jmp
in
xchg
into
ds
xchg
loopne
jns
push
jnp
inc
dec
mov
or
dec
lds
cmp
call
lds
dec
or
xchg
ret
pop
pop
xor
out
repnz
cmpb
xor
aas
aas
fsubr
clc
test
das
lds
sub
outsl
jl
push
sbb
in
add
repz
mov
outsb
in
movb
fcompl
fwait
clc
into
loop
rorl
pushf
mov
incl
xor
lods
jmp
sbb
call
dec
inc
fwait
mov
imul
mov
sbbl
sbb
sub
lahf
or
into
cmpsb
adcl
fwait
cmc
mov
shl
loope
adcb
add
sahf
loop
dec
leave
ss
jg
lods
in
cmp
adc
leave
mov
xchg
es
cli
lahf
sub
mov
leave
jae
pop
outsl
xchg
mov
mov
xor
inc
or
in
push
pop
scas
in
fsubrl
mov
out
push
and
fiadds
nop
jmp
ficoml
test
and
sahf
out
jp
xor
imul
std
loopne
inc
into
jge
or
or
fisubl
ljmp
add
mov
mov
je
sub
popf
cltd
imul
test
pop
in
fbld
popf
cwtl
adc
lret
or
arpl
test
jb
inc
sub
pop
repnz
std
sbbb
jp
sbb
aas
or
shlb
out
xor
mov
add
mov
cmp
push
xor
sarb
jns
pop
inc
adc
xlat
sahf
jb
repnz
mov
lahf
cli
or
mov
stc
pop
lret
js
addr16
in
fwait
pop
pop
test
stos
inc
aas
mov
sub
add
lcall
cmpsl
rcll
adc
popl
notl
jecxz
mov
pusha
mov
sti
std
pushf
fadds
xchg
dec
rorb
cs
add
daa
test
jg
and
pop
mov
outsl
cmp
and
jmp
mov
jl
sub
movntq
neg
mov
mov
std
pop
push
cltd
js
xor
mov
fisubl
adc
mov
int3
test
pop
add
sahf
inc
dec
rcll
pop
mov
mov
insb
lcall
xor
dec
lret
pushf
scas
pop
sbb
lcall
push
repnz
mov
cmp
mov
sub
fstp
dec
imul
jae
mov
rol
bound
push
aam
xor
adc
outsl
mov
scas
jl
inc
mov
pop
cmp
cld
mov
je
adc
jno,pn
xchg
sbb
ret
push
ret
inc
rcl
test
mov
mov
mov
out
xchg
push
push
and
in
sbb
mov
je
vpunpcklqdq
jns
lret
push
bound
addr16
insl
fs
xor
sub
inc
lcall
sub
fisubrl
lret
rorl
sub
add
scas
cmp
cmp
xchg
mov
enter
jp
and
ror
mov
cmp
scas
push
imulb
xchg
pop
xchg
xchg
insb
shlb
sub
sbb
jnp
pushf
mov
scas
pop
inc
xchg
or
lret
js
mov
jge
sub
bnd
rol
cld
shlb
outsl
dec
or
icebp
aad
std
xchg
sub
cwtl
loope
stc
testb
jmp
inc
int3
je
fimuls
out
shll
loopne
shrb
lds
push
mov
and
cmp
and
xlat
xchg
mov
push
enter
cmp
fisttps
outsl
mov
xchg
inc
add
or
sub
mov
xchg
nop
inc
pop
xchg
adc
sbb
and
test
aas
frstor
fisttpl
mulb
insl
xchg
and
mov
cmpsb
js
mov
out
daa
or
shll
jle
inc
pop
or
push
sbb
cltd
movsb
push
or
push
imul
loope
in
mov
gs
pop
dec
jne
std
mov
call
push
mov
or
mov
movsl
sub
fmuls
pop
xor
and
jle
dec
das
inc
rcr
sbb
lods
push
xor
or
outsb
aas
dec
mov
popf
push
lea
stos
adc
rcrb
loopne
cmpsb
enter
xor
dec
inc
imull
int
xor
daa
in
outsb
inc
jne
mov
aad
pop
mov
mov
enter
lock
cmp
inc
push
aam
jg
repz
pop
push
adc
cmc
ljmp
das
sbb
sbb
cwtl
jmp
fdivp
xchg
fldenv
movsb
mov
cmp
add
aas
sub
jmp
mov
add
cld
or
adc
cld
dec
jno
jnp
mov
or
popf
mov
adc
shl
mov
add
inc
ret
dec
rolb
add
and
or
mov
dec
gs
sti
daa
adc
psllw
xchg
ja
das
cli
test
mov
and
add
lds
xchg
mov
mov
sahf
inc
mov
lods
mov
ss
xor
int3
inc
iret
inc
fidivl
adc
add
mov
sub
fisttpl
mov
or
mov
addr16
ljmp
pop
hlt
sub
pop
les
leave
push
push
add
sub
push
push
or
je
push
fbstp
cmp
jae
orl
lds
lcall
xorb
mov
insl
mov
dec
scas
mov
loope
inc
test
xchg
sub
mov
xchg
mov
leave
or
into
pusha
xor
pop
add
dec
jle
outsl
pop
jne
mov
mov
or
adc
mulb
jg
cmc
je
fmuls
lock
add
dec
pushf
imulb
cmp
repz
cmp
mov
outsb
mov
shl
xchg
jg
dec
push
sub
aaa
andl
xor
mov
pop
lcall
push
and
std
xor
lahf
push
cwtl
push
sarl
mov
lds
jns
and
addr16
sti
and
xchg
lds
mov
sti
imul
push
gs
pop
loope
xchg
cmp
shlb
push
cmc
mov
mov
loop
in
mov
in
sub
popa
add
flds
fdivs
iret
pop
sbb
add
jecxz
add
mov
mov
lods
aam
cmp
out
push
daa
push
mov
or
ret
cmp
test
mov
stc
mov
movsb
lret
or
icebp
pop
xor
je
daa
cli
mull
push
pop
cltd
push
sbb
mov
jo
mov
aad
call
xor
loop
sub
aas
stos
add
out
test
mov
and
imul
jns
add
scas
ss
cmp
out
push
jo
shlb
sbb
inc
daa
inc
clc
adc
inc
sahf
pop
ja
aas
out
rorb
hlt
repz
adc
lock
or
rclb
xor
xchg
adc
orl
testb
and
scas
out
and
pop
xchg
mov
pause
adc
orl
loopne
xchg
dec
aaa
das
ds
mov
xor
cwtl
xchg
cmp
and
cmp
inc
mov
push
or
out
sbb
ljmp
enter
and
mov
enter
loop
add
mov
cld
dec
xor
mov
jle
fdivrs
sub
sbb
fcoms
mov
bound
and
jb
ficompl
fsubrl
adc
in
fldl
xchg
pop
into
cmp
pause
sub
cs
cmc
dec
cmp
inc
inc
or
jne
dec
pop
dec
adc
xchg
hlt
sbb
bound
pusha
cwtl
shrl
jecxz
jl
adc
and
lods
pop
or
push
mov
popa
jno
or
dec
cs
cmpsb
stos
push
cmp
mov
jo
rclb
das
fnstenv
push
push
dec
xor
punpckhwd
out
jb
stos
imul
xchg
shrl
leave
int3
mov
in
push
rcrl
iret
jg
push
push
mov
sub
cmpsb
sbb
mov
mov
push
push
xor
sbb
sbb
mov
pop
lods
fwait
jl
dec
fwait
sbb
inc
enter
lods
scas
adc
adc
pop
inc
dec
xor
xlat
ret
xchg
mov
xchg
xor
xchg
cmp
sti
jle
dec
pop
cmpsb
dec
dec
cmp
enter
push
stos
mov
add
subb
shr
sbb
xchg
stc
push
daa
push
outsl
add
pop
insw
in
mov
int
push
lods
xchg
or
dec
stos
aam
shlb
aam
and
sub
jge
inc
push
in
orb
imul
xor
fimull
xchg
out
mov
xchg
jne
cmovb
ret
sub
xor
ds
mov
inc
test
lret
loop
push
dec
sub
dec
mov
test
jnp
hlt
cmpsb
cmp
ss
jnp
aas
std
call
dec
and
lcall
repz
push
or
iret
dec
cmpsb
mov
adc
out
mov
fwait
int3
sbb
mov
shll
pop
insb
pop
pop
or
cmp
popf
es
push
and
sahf
insb
mov
roll
or
lods
jle
out
gs
pushf
cmp
dec
in
insb
mov
ret
jmp
in
rol
mov
push
inc
int3
in
lgs
ret
iret
fstp
dec
pop
call
aam
push
sti
dec
mov
cltd
push
xchg
pop
mov
movsl
push
imul
ljmp
cmp
mov
cmp
push
sbb
or
rol
call
sbb
push
scas
dec
scas
jbe
in
outsb
push
arpl
cmp
fcoml
pop
inc
pop
xchg
jbe
inc
cmc
lock
jl
rolb
push
lcall
sti
xlat
push
jge
xor
data16
pop
or
in
mov
aam
repnz
jp
std
cmc
adc
cld
inc
mov
lods
xor
pushf
pop
outsb
sbb
jns
push
dec
test
cmp
xchg
lea
rcll
pop
aad
jmp
xchg
int
scas
movsb
mov
mov
push
fisttpl
jo
push
cli
ja
jmp
cmp
add
ret
lods
loopne
sub
mov
aaa
rcl
cmpsl
imul
das
sub
dec
or
aad
bound
jp
pop
into
mov
fdiv
or
popf
push
dec
fdiv
adc
in
idivb
pop
out
jbe
cmc
xchg
sbb
pusha
aas
or
pop
fidivrl
enter
jnp
icebp
mov
mov
loop
cmp
clc
push
dec
jecxz
into
aas
lret
cmpsl
imul
xor
jnp
ja
xchg
test
aad
je
mov
dec
fildl
and
cwtl
test
lods
adc
inc
sti
or
test
push
mov
adc
mov
stos
dec
test
cmp
shll
testl
cltd
dec
dec
scas
enter
lcall
in
sbb
cld
daa
lret
cmpsb
ds
ds
in
lcall
adc
dec
sub
lret
stos
jle
subl
adc
int
sub
inc
pop
stos
mov
sbb
stc
add
popf
sahf
inc
adc
arpl
cmpsb
test
andl
fimull
das
jg
cmp
mov
cwtl
sbb
mov
insl
out
pop
or
jmp
neg
imul
push
ja
fdivrl
icebp
pushf
mov
xor
sti
push
or
shlb
sub
sub
notb
rclb
sbb
sbb
bound
nop
subb
adc
lahf
arpl
xor
scas
int
or
xchg
ror
mov
cltd
xchg
fs
ret
xchg
es
fbstp
mov
pop
shlb
xor
test
test
fisttps
and
inc
pop
push
mov
ficoml
insl
stos
imul
xchg
cmp
inc
aad
jne
int
mov
jb
cmpsb
inc
pushl
and
xchg
cmp
lock
out
std
jl
es
jecxz
cmpb
jmp
mov
fwait
push
adc
lret
adc
shrl
adc
aas
cmp
iret
daa
dec
sbb
cltd
dec
js
cmp
in
sbb
pop
das
cli
pop
cmp
mov
sbb
pop
xor
nop
mov
call
jg
andl
dec
mov
add
sub
sub
test
dec
mov
jg
pop
cli
leave
testl
pop
cmpsb
dec
cmp
lock
push
push
repz
out
mov
xchg
jmp
out
lahf
lds
ss
jnp
jg
mov
jl
sbb
es
push
push
iret
pop
je
movb
insb
out
fbld
mov
dec
cmp
xchg
in
mov
jb
std
inc
popf
mov
arpl
mov
or
xchg
das
scas
sbb
mov
ret
rorl
sbbl
shrb
addl
enter
sar
pop
push
cmp
fsubrl
ss
arpl
das
mov
sbb
inc
loop
mov
pop
push
sub
inc
jno
aam
insb
dec
loope
and
pushf
daa
iret
jnp
inc
mov
shrl
bswap
pop
inc
pop
lret
pop
xchg
push
xor
cmp
cltd
addr16
out
sbb
sbb
out
xor
adc
dec
sti
mov
add
adc
xchg
mov
add
mov
dec
mov
pop
aas
dec
shlb
mov
jns
mov
stos
stc
pop
add
cld
mov
mov
push
pop
shr
cmp
pop
fisttps
xlat
push
adc
add
bound
stos
aaa
mov
lcall
sbb
sub
mov
inc
jns
nop
sti
sbb
ljmp
jo
and
and
adc
pop
std
add
out
mov
dec
mov
repz
xchg
cmpb
negl
add
xor
movsl
adc
orb
mov
push
js
sti
xchg
adc
push
xchg
addr16
sub
push
je
sahf
pop
inc
and
pop
cli
inc
or
xlat
dec
jp
outsl
sub
xor
sahf
add
dec
dec
cmpsl
das
or
cmp
jmp
push
out
sbb
bound
nop
pop
pop
dec
outsb
ss
jo
ret
imul
mov
imul
cmp
lret
sbb
inc
imul
stos
dec
loopne
mov
daa
jl
and
jo
jmp
sub
cmp
dec
int
mov
test
or
call
lods
mov
mov
push
insb
sub
in
sbb
les
cld
sarb
xor
xchg
xchg
dec
imul
nop
iret
mov
xor
loope
xchg
and
je
hlt
push
push
pop
movsb
gs
sub
scas
in
pusha
out
cmpl
int
jne
cmc
icebp
popa
outsb
inc
jp
orl
push
lods
rcll
pop
or
rorb
push
cmpsl
jg
sbb
addr16
lea
add
mov
mov
cmp
in
das
mov
sbb
icebp
mov
cld
or
jecxz
jg
mov
xchg
mov
subb
lcall
xor
fsubrl
sub
fdivs
add
pop
push
xchg
sub
sub
clc
push
loop
mov
addr16
daa
mov
fcoms
loop
sbb
insb
dec
adc
aad
push
and
sub
or
mov
and
imul
lahf
lods
scas
jp
pop
test
adc
mov
scas
and
jnp
jno
pop
push
sbb
pop
add
loop
bound
pop
xchg
dec
mov
mov
clc
shlb
adc
mov
mov
pop
cwtl
repz
pop
mov
ds
cli
jo
xchg
lret
mov
ja
int3
sub
add
xchg
leave
lahf
pop
in
ds
icebp
repnz
sub
dec
mov
jp
inc
jecxz
pop
aas
pop
lods
enter
movsbl
inc
jae
rcrb
inc
leave
sub
xor
clc
cmc
xchg
ret
out
es
and
mov
imul
or
cwtl
fst
hlt
testl
mov
adc
push
adc
inc
data16
jge
push
es
clc
fbstp
aas
in
insb
test
fcmove
cltd
jbe
out
lcall
mov
mov
mov
rcrl
imull
jmp
int
loop
rclb
xchg
lods
and
jae
int3
sub
add
xor
cmp
push
sub
or
sbb
inc
mov
xchg
or
xchg
in
jg
push
pop
cmpsl
pushf
jo
ljmp
int
imul
mov
xchg
cltd
shll
fimull
pop
cmp
or
jl
rcl
lods
and
push
data16
cmp
out
mov
inc
xor
mov
shlb
xlat
into
cltd
sub
fwait
push
cvtpi2ps
mov
sub
xchg
sub
aam
jecxz
aam
inc
pop
cli
popf
adc
and
mov
lds
out
iret
adc
adc
pop
dec
nop
xlat
sti
das
jge
push
cmp
push
js
cmp
inc
cli
aas
mov
push
or
aas
and
aad
icebp
push
mov
cltd
icebp
mov
dec
ljmp
sub
adcb
sbb
mov
dec
mov
mov
xchg
adc
mov
pop
or
outsb
cmp
mov
mov
stos
sub
add
add
push
cld
mov
nop
xchg
xor
adc
cmp
xchg
ret
cmpsl
xchg
fldenv
leave
movsb
mov
mov
mov
loopne
xor
or
and
je
cmp
dec
sbb
mov
push
aas
adcb
gs
xchg
js
xor
mov
sbbl
xchg
gs
adc
xchg
mov
mov
push
sub
add
outsb
cmpsl
lds
add
xor
push
insl
test
jno
into
icebp
scas
jge
fwait
lahf
xchg
or
and
lods
adc
add
fisttpl
jbe
popf
enter
in
jge
mov
inc
insl
xor
sbb
add
cmp
out
xchg
sbb
push
lret
rcrb
outsl
push
shr
dec
dec
idivb
add
adc
sub
or
cs
push
imul
dec
loopne
or
inc
xchg
xor
jb
cld
push
loop
les
popf
popf
pop
aaa
dec
or
mov
add
pop
insl
sub
test
sub
mov
stos
jg
fstpl
cmpsl
out
cmp
movb
inc
pusha
inc
mov
jnp
repz
leave
lcall
data16
pop
cld
sahf
in
scas
or
and
out
sub
ds
in
xchg
sbb
fisttpll
test
out
loop
jns
xlat
xorl
mov
xchg
and
add
arpl
mov
jle
addr16
pop
imul
mov
pop
pop
mov
inc
mov
outsl
lods
mov
sbb
cltd
loope
add
inc
mov
dec
push
xchg
push
imul
push
add
inc
aas
jmp
jl
insb
add
fdivp
cmp
ds
mov
jo
push
fnstsw
xchg
roll
xor
hlt
test
popa
cmpsb
stos
sti
xchg
cmp
enter
dec
xor
out
mov
xchg
icebp
dec
nop
mov
mov
pop
pop
lret
addb
fstl
in
push
adc
fidivrs
outsl
les
or
inc
xchg
dec
scas
push
mov
movups
daa
aaa
sbb
js
add
cmp
pusha
mov
mov
lods
nop
ss
ret
dec
cmp
pop
sub
or
aas
cmp
mov
jle
inc
cmp
cs
jl
lds
ret
push
jne
push
bnd
repnz
in
ficoml
testl
push
sti
aas
or
dec
xor
pushf
outsb
gs
lcall
pop
pop
xorl
xchg
mov
pushf
sbb
sti
xchg
sub
sbb
mov
lea
inc
add
inc
mov
inc
hlt
sub
mov
out
mov
cmp
mov
sti
inc
jmp
cmpsl
fisttpl
ret
xchg
xorb
adc
jg
mov
mov
mov
std
scas
iret
mov
clc
cmpsl
adc
jp
jbe
call
mov
and
and
jmp
adc
in
pop
fldt
daa
sbb
outsl
adc
stos
pusha
sti
arpl
arpl
fists
xchg
test
sub
fcoms
jp
push
sub
pop
add
decb
mov
imul
jp
adc
test
cld
pushf
shll
insl
cmp
sbb
lea
sub
ret
jbe
jne
dec
pop
pop
mov
cmp
fucom
xor
cmc
popf
ljmp
xlat
xor
sbb
jmp
push
jge
xchg
ds
loopne
lret
imul
adc
out
mov
jge
cltd
or
shll
jge
jb
xchg
or
mov
inc
pop
pop
fwait
cmpsl
stc
xchg
and
stos
out
and
sbb
inc
insb
jp
jae
mull
mov
repnz
cmp
or
mov
mov
fcompl
and
fisttpl
ja
sahf
push
insb
cmp
filds
shr
add
dec
imul
pop
iret
push
mov
cltd
pop
addr16
adc
and
mov
sbb
add
jp
addl
fidivl
dec
push
mov
xchg
adc
aam
add
sbb
div
and
ljmp
sub
outsl
mov
mov
sub
je
jl
pop
and
jbe
pusha
sub
nop
ds
bound
and
push
or
xor
pop
cmpsb
add
ljmp
mov
push
jmp
jns
jno
mov
out
aad
cmpb
mov
gs
jns
mov
dec
jl
out
int3
bound
sub
jmp
loopne
and
loope
jo
stc
in
mov
mov
push
std
stos
and
xchg
nop
test
mov
movsb
aam
int
jno
push
or
outsl
rcll
pop
bound
aas
lcall
mov
adc
mov
mov
pop
icebp
outsl
mov
xchg
mov
push
addr16
mov
mov
out
mov
xchg
mov
in
mov
add
or
sti
cld
mov
hlt
insb
mov
mov
out
mov
pusha
fadds
jbe
enter
cs
addl
pop
pop
int3
inc
movsl
sub
pushf
add
add
push
aad
ficoml
test
or
mov
repz
mov
push
cmp
cmp
jne
mov
mov
cmpb
fiadds
jg
test
dec
dec
frstor
ljmp
sub
add
jl
fisttps
xchg
aam
pop
loop
adcb
push
rorl
pop
pop
clc
repz
mov
enter
push
and
pop
xlat
ds
pop
jl
and
push
sbb
adc
sub
jae
iret
or
cmc
pop
mov
mov
gs
inc
cmc
dec
daa
into
inc
xchg
mov
jle
iret
add
pop
in
stc
cmp
adc
out
xor
add
xor
jmp
mov
or
jge
rcr
das
mulb
ret
push
push
cs
sarb
cmp
int
mov
sbb
push
push
fcompl
adc
loope
xor
dec
cwtl
in
add
fnstenv
cwtl
jnp
andl
cmp
roll
xor
inc
and
push
xchg
clc
pop
outsl
mov
sub
xchg
inc
xchg
mov
inc
xor
and
aas
and
push
add
mov
adc
cli
adc
outsb
sbb
or
not
or
jno
testb
sbb
cmpsl
cmp
mov
xchg
mov
or
pop
inc
cmpsb
push
sbb
cld
pop
jbe
xchg
int3
mov
and
and
faddl
inc
int
push
mov
outsl
sub
shll
cwtl
daa
ret
sar
movsl
scas
ret
adc
arpl
insl
test
push
call
or
aad
mulb
cmp
rolb
mov
add
pop
data16
or
jae
jnp
jae
mov
jb
push
lcall
add
adc
fdivrl
lods
mov
testb
into
mov
outsb
mov
insb
mov
inc
call
dec
repnz
out
jmp
mov
in
cs
rclb
push
inc
sarl
xchg
push
or
enter
and
mov
push
pop
adc
in
inc
dec
inc
xor
xlat
in
dec
dec
bound
idivl
std
and
sbb
ret
punpckhbw
add
mov
lods
fisubrl
pop
gs
stos
int
mov
fistps
mov
pop
xchg
cmp
test
lret
xchg
xchg
add
adc
cltd
push
xor
adc
mov
pop
insb
jns
adc
xchg
rol
shrb
fdivl
in
push
mov
inc
lret
in
repz
mov
sbb
cwtl
movq
les
cmp
lds
xor
push
aad
and
or
cmp
push
jns
movsl
dec
jo
inc
loope
test
lret
cli
mov
hlt
adc
pop
push
push
xor
mov
mov
jle
xor
imul
je
push
into
sub
push
lock
icebp
scas
pusha
lods
shr
cmp
sti
sbb
jno
dec
mov
pop
out
or
jecxz
or
es
inc
push
test
jecxz
jmp
loop
adc
mov
mov
jne
sub
hlt
inc
aam
cltd
lds
cmp
cli
mov
nop
shl
or
mov
test
jecxz
xor
dec
and
push
or
jge
idivb
data16
and
hlt
xchg
ds
aaa
insb
ljmp
int
lcall
scas
das
out
mov
push
sbb
xor
xchg
pushf
cmp
lret
add
ret
xor
arpl
cmpsb
ss
loop
cli
ds
loope
push
cmp
mov
mov
lahf
dec
and
les
repnz
inc
fdivrp
inc
ret
and
lret
fs
mov
mov
xor
out
sbb
into
mov
push
frstor
xchg
pop
jb
test
pop
mov
jl
sub
and
andl
jae
jle
std
sbb
cltd
inc
jg
mov
fs
clc
xor
insl
pop
ljmp
jp
push
pop
jecxz
jmp
repnz
sti
xorb
cmpsl
inc
push
xor
es
lods
lods
sub
inc
push
bnd
add
bound
arpl
mov
scas
test
rclb
lcall
out
pop
inc
addr16
jo
loop
xchg
clc
insb
dec
xlat
repnz
inc
adc
add
push
fldl
sar
xor
je
push
sbb
pop
mov
rorb
cmpsl
aas
sbb
mov
xor
popf
shll
addr16
pop
cmpl
push
add
fsubrs
add
push
aas
mov
xor
fbstp
xchg
push
fdivl
mov
dec
xlat
cld
or
js
fdivl
cmp
loop
test
mov
aas
add
adc
mov
scas
cld
in
cmp
rcll
and
in
xchg
in
and
cltd
push
mov
test
cs
add
imul
jg
jo
int3
ljmp
inc
lea
lcall
enter
xor
jp
cmp
imul
mov
jp
es
stos
movsl
adc
popa
adc
dec
cmp
popf
sbb
stos
jae
enter
int3
notl
push
lret
stos
xor
call
xchg
std
in
sbb
mov
jno
mov
sbb
adc
les
and
sbb
mov
xchg
sbb
test
inc
and
pop
popf
stc
mov
les
cltd
push
xchg
and
loop
and
roll
pop
lcall
sub
and
xor
mov
xor
mov
push
inc
mov
mov
or
test
jno
dec
add
push
ret
sub
mov
jecxz
add
bound
shr
inc
mov
sub
aas
adc
test
and
add
dec
mov
push
and
xchg
popf
in
sub
js
movsl
push
pop
pusha
sub
adc
add
mov
cwtl
sti
mov
cmc
sti
les
dec
cmp
pusha
inc
lods
repnz
lret
xor
mov
sub
mov
mov
push
or
insl
int
mov
in
push
lcall
xchg
pusha
jo
push
cltd
mov
fidivl
jecxz
mov
arpl
scas
lret
cltd
cmp
leave
aaa
jle
jge
dec
jne
adc
mov
test
fcmovnbe
call
xor
cld
les
scas
jg
mov
sbb
shr
mov
sbb
xchg
ss
popa
hlt
mov
pop
inc
push
mov
jge
xchg
enter
xlat
mov
xlat
inc
icebp
inc
frstor
dec
scas
fsubr
jo
pushf
ss
loopne
xlat
dec
movsb
mov
mov
stos
push
jge
jmp
sbb
shll
jns
lret
scas
mov
adc
push
movsl
movb
pop
xor
hlt
mov
cmp
pusha
adc
sub
push
out
orl
movsl
adc
mov
push
cmpsl
or
lock
sub
insl
mov
pop
inc
rclb
out
jb
test
mov
lea
jne
arpl
xor
hlt
push
sub
ret
sbb
push
out
dec
divb
in
cwtl
xchg
out
int3
jbe
cmpsb
fnstcw
cld
fsts
rorl
je
lods
rcr
addr16
or
jecxz
inc
mov
push
dec
or
sahf
sub
mov
mov
movsl
jmp
and
inc
lds
ss
dec
inc
cltd
addr16
es
fbstp
mov
stos
jb
das
test
jns
in
sub
xor
add
mov
lock
xchg
je
movsl
inc
add
inc
xchg
repz
jmp
js
xor
sti
sbb
pop
scas
push
cmpsl
xchg
xchg
js
mov
lock
faddp
gs
out
vpxor
mov
push
inc
jae
or
jg
pop
add
push
rcr
aam
and
and
cmp
sbb
notl
xchg
in
faddl
movsb
cli
push
push
stos
dec
and
sahf
push
ss
aaa
inc
cli
mov
jmp
std
jp
imul
in
seta
xor
and
xchg
cmp
sbb
out
dec
xchg
in
nop
sbb
cwtl
into
sbb
inc
pusha
andb
std
test
cmpsb
scas
push
bswap
xchg
adc
pop
cmpsl
aad
push
fiadds
dec
inc
inc
cwtl
sub
xor
lods
outsl
jb
dec
test
dec
xchg
in
mov
push
cltd
adc
clc
push
lret
scas
cmpb
mov
popf
int3
cld
cltd
repz
adcl
andl
mov
fidivrs
imul
pop
aam
xchg
sub
outsb
and
shl
push
jecxz
add
fidivrl
cmp
mov
and
js
xor
jo
xchg
inc
insb
sub
cmc
hlt
inc
xor
inc
mov
leave
pop
mulb
dec
mov
xchg
push
sarb
pop
inc
out
mov
mov
dec
lahf
rclb
adc
jo
cmp
rcll
mov
arpl
mov
mov
jge
adc
sbb
clc
push
repz
loopne
das
or
inc
sub
movsb
and
icebp
nop
andl
jl
mov
jae
cmp
movsl
js
scas
mov
dec
inc
icebp
mov
or
call
shl
das
inc
movsl
and
dec
jb
add
repz
rol
mov
mov
sbb
lods
lea
mov
xchg
into
xor
pop
and
xlat
or
mov
pop
mov
pop
fisubl
xchg
lock
subb
in
insb
and
add
shlb
nop
out
pusha
inc
push
and
mov
lret
pop
sti
push
in
xchg
jecxz
add
push
lods
sbb
pop
push
fsubrs
push
imul
xchg
rcll
sub
add
cli
daa
out
cli
ret
aad
sti
lret
dec
stos
or
popa
in
xor
in
ficomps
rclb
add
in
inc
push
adc
sbb
fisubrs
testb
pop
mov
and
je
jne
sahf
pushf
ds
stos
and
stc
jno
mov
mov
movsl
xlat
test
pop
inc
jnp
fnsave
int
loopne
enter
stos
or
cmpsl
push
sti
and
popf
movsl
push
jnp
imul
jecxz
pop
jne
sub
daa
lret
lods
je
mov
loop
rclb
push
mov
xchg
sub
mov
sarb
js
test
mov
enter
pop
dec
shll
fldcw
or
and
or
out
shll
mov
loopne
mov
pushf
xchg
pop
mov
xchg
inc
outsl
inc
neg
push
stc
jp
insl
inc
and
inc
xor
fidivrl
jno
pusha
mov
xor
loope
jge
and
cmc
insb
xlat
outsl
xchg
push
sub
pop
mov
pop
leave
out
cwtl
stos
out
imul
cmp
mov
je
add
jecxz
mov
add
call
and
xchg
dec
aad
mov
andb
popa
push
inc
lods
in
js
fs
or
icebp
lods
or
and
dec
cld
pop
insl
mov
and
scas
jmp
movsl
mov
add
dec
arpl
mov
inc
and
inc
mov
add
adcl
add
inc
mov
repnz
fsubrs
jno
out
lahf
subl
or
repz
loop
out
xorl
jge
inc
push
cmp
addr16
add
sarb
subl
xchg
push
mov
sbb
cmp
inc
add
mov
rorl
sub
xlat
fdivl
cmp
cld
stc
jg
inc
scas
or
dec
push
hlt
imul
pop
stos
inc
jg
xchg
pop
andb
into
jno
push
aas
mov
movsl
iret
jne
cli
push
arpl
sbb
nop
xor
add
lea
adc
dec
mov
jge
ds
test
popa
add
sub
jae
inc
sbb
mov
mov
popf
fsub
lahf
enter
mov
xchg
dec
aas
mov
iret
nop
sbb
cmp
imul
jmp
cld
je
popa
mov
sbb
xor
add
pop
xor
sub
jb
pop
adc
rol
hlt
dec
dec
out
or
sub
loope
arpl
das
add
push
jg
stc
sbbb
mov
xor
dec
and
push
mov
inc
xchg
xor
add
pop
sub
and
adc
or
out
int3
or
sub
lds
push
xor
repnz
stc
lock
xchg
daa
aad
fcmovbe
or
jne
outsl
iret
jl
jle
mov
push
or
or
pop
and
xchg
stos
je
xor
xchg
jp
imul
shrl
dec
inc
fidivl
dec
mov
iret
mov
das
sahf
adc
jp
loopne
pop
lcall
lds
orl
lods
jg
mulps
mov
rcl
mov
or
and
es
jl
sarb
cmpsl
mov
xchg
ljmp
and
pop
xchg
pop
xor
xor
mov
pop
bound
xorl
ror
push
outsl
pop
out
push
out
arpl
bswap
xor
jbe
nop
fnstcw
pop
push
sbb
stc
sub
cs
or
xchg
inc
mov
fsubrs
and
jbe
xchg
push
pop
addr16
mov
sbb
out
jecxz
sbb
jmp
and
push
push
jb
cli
jns
sub
push
lret
out
dec
adc
mov
jl
mov
outsl
and
push
jne
push
fisttpl
cld
mov
sub
lock
adc
imul
das
dec
cmp
or
ss
pop
adc
int
sub
fcomps
ret
es
cmp
pop
enter
inc
cmp
mov
addr16
out
shll
lea
push
pop
adc
lods
out
adc
inc
pusha
sub
jge
and
icebp
test
pop
mov
dec
cs
jno
loope
dec
cmp
mov
pop
sub
lret
in
fxch
or
and
fbld
sub
adc
add
mov
in
fs
test
nop
xlat
jg
incl
and
mov
xor
jg
adc
dec
sbb
xchg
mov
inc
xor
and
xor
fmulp
in
subl
addr16
inc
out
cmp
aad
dec
sub
cmpsb
addb
lds
mov
push
add
dec
cmp
iret
outsl
mov
adc
out
aaa
xor
cmp
sahf
pop
jp
inc
xchg
test
adc
xor
aad
or
push
movsl
fsubrl
jcxz
and
in
dec
divl
dec
sub
ljmp
aam
sahf
dec
iret
xchg
sbb
mov
daa
lret
imul
lcallw
cmpb
rcrl
mov
add
xchg
mov
inc
push
outsb
insl
test
cmc
jp
cmp
push
adc
jne
and
enter
ret
pop
ljmp
out
aam
adc
mov
icebp
mov
mov
sbb
push
push
sbb
jno
popf
cmpsb
ret
mov
ljmp
or
jmp
add
or
lock
test
daa
sbb
jmp
dec
adc
jo
mov
cmpsb
jne
pop
xchg
scas
imul
inc
push
or
mov
pop
repnz
adc
lret
bound
je
int
pop
outsl
mov
bound
fistps
and
mov
cmp
xchg
push
das
or
lahf
hlt
mov
xchg
ret
out
jae
adc
and
clc
jmp
push
push
addr16
cmp
cmp
ds
insl
pushf
xchg
sbb
mov
shrb
pop
mov
iret
or
lock
jo
mov
xlat
add
ss
jo
daa
test
mov
mov
mov
data16
mov
clc
cmpsl
adc
dec
xchg
or
xchg
repnz
jne
mov
and
cli
ja
cld
push
sbb
mov
xchg
movsl
push
loopne
loopne
mov
neg
push
clc
mov
cmc
fstps
xchg
lcall
lods
dec
mov
mov
push
mov
jo
cltd
xchg
add
lods
fstps
xchg
sbb
call
in
adc
push
in
add
sub
icebp
stos
rclb
mov
pushf
jns
push
lock
in
mov
sahf
jne
test
cmpsb
xor
mulb
xchg
into
cs
or
jno
sbb
call
inc
sub
adcb
mov
jle
lcall
sarl
dec
sub
shll
push
ret
mov
ret
imul
shrb
aaa
gs
movsl
pushaw
push
pop
add
pop
push
xlat
xlat
xor
daa
pop
mov
mov
dec
sahf
andb
xor
sbb
push
lret
lret
pop
lcall
adc
inc
testl
push
jnp
rcrb
mov
mov
mov
rolb
mov
sub
fidivs
pushf
add
divl
jno
mov
mov
push
mov
adc
call
xchg
push
mov
lock
pop
lahf
mov
out
outsb
in
aad
dec
xor
adc
cmp
out
adcb
lea
aad
fdivr
xchg
outsl
dec
fs
xor
imul
scas
scas
idivb
dec
les
push
imul
xor
mov
in
mov
push
test
inc
jbe
aas
cli
ss
shlb
inc
push
stos
jl
and
mov
lcall
jbe
fmull
cltd
lahf
insb
shll
or
call
xchg
lret
push
lods
fwait
lcall
fnstenv
adc
cmp
xor
aam
lods
addr16
sub
inc
les
inc
jmp
cmpsl
mov
scas
xor
ret
test
popf
scas
shlb
and
adc
push
and
clc
xchg
popf
add
ja
bound
pusha
hlt
push
sub
out
out
push
test
push
jns
add
push
xchg
hlt
pop
bound
ja
dec
jp
pop
jno
je
cmp
cmp
jae
in
test
sub
rcrb
jge
jg
ficoml
cli
or
out
int3
scas
mov
mov
stos
repz
or
pop
jmp
sub
ljmp
inc
iret
je
jmp
repz
popa
les
jae
bound
mov
push
scas
icebp
dec
add
cmp
sarb
aas
lret
jmp
push
mov
mov
aas
mov
jb
push
pop
or
fistl
cmp
xchg
push
mov
push
xchg
and
sbb
loopne
bound
loop
test
out
inc
dec
mov
dec
negb
xchg
push
pop
fwait
or
mov
mov
lret
push
inc
in
push
into
cmp
xor
mov
add
jnp
inc
jmp
loope
std
in
mov
les
or
in
out
test
in
dec
adc
push
cmpsb
push
cmpsl
mov
test
add
xlat
dec
jbe
pop
bound
dec
gs
in
sub
dec
or
mov
push
cmp
and
fwait
xor
xchg
dec
jle
xchg
or
std
out
fstpl
in
aas
pop
jmp
xor
xor
out
imul
subb
lds
and
jne
cmpsl
daa
sahf
iret
pop
in
daa
sbbl
fwait
dec
inc
leave
inc
in
mov
into
lcall
clc
sub
inc
sbb
stc
call
push
xchg
out
mov
popf
jbe
inc
roll
inc
push
add
inc
bound
or
shlb
in
push
call
rcrl
rorl
rol
lds
jg
fwait
add
xchg
sbb
mov
rolb
xchg
dec
cwtl
mov
fucomp
in
mov
mov
pop
xchg
mov
pop
cltd
push
test
sbb
dec
popf
cmp
fisttpll
push
test
push
mov
mov
xchg
pop
xchg
test
or
fwait
punpcklwd
fldl
dec
push
xor
dec
pop
adc
in
outsb
fimuls
aaa
adc
lods
dec
movsl
cld
repnz
jbe
adc
jg
push
pop
mov
fwait
dec
push
and
fsubrl
xor
stos
pop
loope
dec
sub
pop
dec
and
arpl
daa
daa
or
into
xor
xchg
or
pop
jge
adc
imul
rol
jle
das
mov
shlb
sub
jne
mov
xor
cmp
sbb
xchg
int
cltd
test
xor
int
sub
mov
ret
leave
adc
add
mov
inc
mov
cmpsb
test
xor
push
xchg
loope
jnp
fdivp
cmp
aaa
xchg
std
or
jg
push
xchg
mov
les
adc
leave
mov
add
out
and
hlt
inc
sti
sub
or
jnp
js
out
out
mov
mov
add
inc
leave
adc
push
mov
add
xchg
and
cmp
fsubl
inc
out
add
xchg
jmp
add
xchg
popa
xor
rcl
pop
pop
xor
xor
jns
sarb
dec
sub
jbe
sub
mov
sbb
popw
sbb
lods
test
push
shlb
inc
sarl
sub
dec
andb
aad
and
test
mov
ficoms
call
jnp
adc
jmp
add
or
in
mov
repz
mov
ffree
scas
outsl
in
jno
or
xchg
mov
into
xchg
sbb
lea
mov
scas
fadd
jb
psrlw
dec
repz
mov
gs
inc
mov
nop
sbb
ds
inc
aas
push
stos
sub
fnstenv
dec
movsl
xor
insl
or
js
cmpsl
mov
scas
add
xlat
xchg
popf
xor
stc
pop
fcompl
or
arpl
mov
mov
inc
add
imul
dec
je
insb
out
ret
push
in
lock
js
lcall
push
divl
or
pop
mov
daa
iret
xchg
sub
test
imul
into
stos
push
and
xchg
lahf
cltd
add
add
scas
xchg
dec
xor
test
insb
mov
jo
mov
push
or
aas
das
fsubrs
pop
daa
testb
mov
outsl
shrl
lds
push
js
inc
or
sub
push
dec
and
xlat
outsl
stos
scas
adc
sub
add
jnp
ffree
mov
inc
loopne
or
leave
orl
daa
neg
and
pop
xchg
xor
or
in
xor
out
pop
mov
jle
stos
mov
std
cmp
pop
jmp
clc
call
cltd
mov
stc
scas
mov
or
cmp
mov
lahf
negb
fldcw
jb
scas
nop
push
lds
mov
test
lods
mov
sub
imul
mov
mov
xor
sub
xchg
xchg
push
rolb
pushf
cmp
loop
adc
mov
fwait
and
outsb
jmp
in
imul
hlt
ja
mov
mov
sbb
jne
push
iret
pop
enter
outsb
fmul
mov
movsl
xor
pop
fmulp
rcrl
test
mov
and
mov
sahf
or
repnz
dec
inc
std
shl
lds
mov
ljmp
popa
nop
push
pushf
scas
push
in
xlat
les
push
enter
jbe
or
je
lcall
xchg
jle
pop
mov
iret
loopne
inc
mov
inc
sub
dec
cmpsb
lahf
shll
xchg
movsl
push
cmp
dec
movsb
out
mov
out
dec
cmpsb
dec
cmpl
push
sbb
mov
out
mov
mov
xor
sub
test
push
add
xorb
ret
adc
pop
mov
jg
subl
ja
push
adc
push
jbe
out
aad
mov
cwtl
test
jp
adc
dec
pop
mov
icebp
add
sub
rcll
fsubrl
das
mov
sub
cs
call
rcl
adc
je
iret
int
insb
fs
into
push
mov
jle
cmpsl
pop
or
sub
addr16
jg
inc
mov
dec
dec
mov
aam
inc
ffree
in
in
lcall
std
push
add
roll
imul
adc
call
out
jle
push
mov
imul
call
testb
test
inc
lret
xchg
xchg
fstl
lods
shr
fbstp
addr16
or
insb
mov
and
cld
das
dec
mov
cmp
push
mov
xchg
les
clc
lds
xchg
inc
sbb
lcall
jmp
call
mov
sbb
jle
adc
cmpb
in
movq
addr16
inc
push
or
push
into
xor
or
inc
daa
lds
out
in
jp
ja
mulb
stc
cmc
xchg
rorb
push
xor
mov
enter
test
push
mov
sub
lahf
or
ss
stc
sub
or
dec
lock
sub
push
cmp
jns
adc
das
negb
adc
push
push
mov
cli
mov
or
jl
jp
xor
insl
or
popf
cmpl
mov
imull
test
fidivrs
outsl
cwtl
sub
f2xm1
push
push
andb
xchg
or
jnp
stos
pop
popa
sahf
jg
mov
mov
dec
xchg
ljmp
inc
fsubl
xchg
shll
adc
popa
lock
mov
aam
sbb
gs
movsl
push
shll
inc
flds
cmp
test
iret
jecxz
mov
push
sbb
mov
movsl
push
in
test
nop
pusha
inc
push
xchg
mov
sbb
inc
aaa
mov
cmp
push
jno
fidivs
jae
dec
jne
ljmp
cmp
cmc
or
pop
mov
cltd
mov
out
cmp
sbb
and
sub
mov
aaa
out
mov
ret
push
inc
push
pop
ja
mull
loope
push
rcrl
dec
lret
mov
out
add
xchg
jno
cmpb
pop
in
pop
ljmp
and
test
xor
daa
push
test
cmc
filds
sbb
push
mov
test
sub
and
pushf
push
push
xchg
scas
fcmovne
sbbl
les
xor
mov
outsb
xor
sahf
mov
adc
test
cld
mov
daa
imul
test
xor
faddl
inc
sbb
jecxz
xor
iret
and
in
movsl
mov
sub
hlt
fldl
test
dec
aas
sub
cmpsb
andb
test
dec
loop
mov
cwtl
xchg
mov
mov
jmp
or
cmpb
push
imul
out
ja
int3
lock
sub
xor
xchg
lret
pop
jp
inc
or
rcrb
jmp
xlat
fiadds
cli
or
insl
adc
pop
lret
repnz
sub
mov
sbbb
shl
adc
cmp
add
mov
clc
scas
jmp
add
out
and
push
repz
jle
shr
adcb
xchg
mov
out
push
and
dec
mov
cwtl
push
jmp
xchg
sbb
dec
sub
mov
fwait
and
mov
mov
jp
hlt
adcl
mov
orl
mov
xor
cmpsl
andb
stos
pop
pop
jp
pop
cmp
aam
mov
int
incl
dec
pop
or
adc
xchg
cmp
mov
cli
dec
xor
and
stos
mov
add
xchg
setne
lds
addr16
ss
in
mov
push
rol
adc
sbb
sti
aaa
jne
js
mov
dec
pop
stc
mov
xchg
lret
cltd
jno
movsl
pop
scas
cmp
scas
lcall
and
incb
pop
inc
adc
xor
jp
jg
adc
pop
xor
adc
xor
sbb
int
jnp
cmp
jmp
or
cltd
mov
mov
ret
in
mov
xchg
imul
pop
pop
test
push
dec
and
and
pop
push
outsb
pop
fildl
mov
fmul
dec
jmp
jb
xorb
outsl
test
and
mov
out
jne
mov
xlat
adc
das
xor
inc
sbb
xlat
sub
push
imul
mov
pop
mov
dec
and
mov
push
push
mov
testb
fisttpl
fidivs
movsb
into
mov
shl
pop
decl
xor
or
loopne
mov
mov
out
xchg
addr16
stc
in
scas
jmp
cli
mov
push
xchg
ds
mov
mov
inc
fstl
ds
loop
ds
dec
mov
mov
addb
repnz
lret
cmc
adc
repnz
in
jae
push
or
sub
xor
push
scas
mov
cmp
fxtract
fisubrs
adc
out
daa
dec
push
int
dec
subb
repnz
and
arpl
insb
add
popf
cmpl
fnstsw
int
cmpl
call
cmp
icebp
xchg
mov
orl
and
xor
xchg
sbb
in
push
xchg
outsl
loop
dec
cmp
inc
push
fnstenv
fcomip
or
insb
test
dec
inc
adcl
or
sbb
and
mulb
cld
test
push
pop
jecxz
in
in
xor
lcall
cmp
data16
outsl
cld
and
movsl
add
mov
in
lods
dec
lods
outsl
add
sahf
fstpl
js
movsl
ljmp
imul
inc
das
cs
aam
push
pop
mov
lock
in
insl
ret
xor
fisubl
jnp
adc
and
cmp
popf
mov
shlb
sbb
fsts
repnz
jns
jae
loop
xchg
int
sbb
cwtl
mov
sti
cmpsb
test
les
pop
dec
push
pop
sbb
or
push
int3
lcall
and
lods
inc
push
fistpl
cmp
xor
out
xchg
adc
add
xchg
ljmp
ret
pop
fdivl
jns
or
mov
mov
std
pop
or
mov
lret
in
cmpsb
jmp
fcompl
mov
subb
aaa
push
mov
popf
cmp
iret
outsl
adc
adc
insl
aam
xor
xchg
shl
popl
dec
aaa
arpl
cmpsb
cs
mov
icebp
call
hlt
popf
js
fisubrs
push
mov
push
mov
es
jo
stos
daa
daa
les
mov
sbb
mov
mov
fstpt
mov
ret
xchg
cmpsb
mov
add
xor
mov
push
xorl
cmp
std
cmp
sbb
addb
dec
and
mov
mov
mov
rcrl
pop
in
jb
mov
dec
enter
jle
xchg
mov
fdivs
movsb
mov
test
fsubs
pusha
push
pushf
adc
xchg
out
mov
in
inc
xor
jnp
push
aaa
out
jb
jmp
imull
cltd
pop
shrl
jle,pn
das
fisttps
or
div
jmp
lret
inc
dec
add
test
cltd
iret
sub
loop
mov
pop
add
and
popa
or
xor
rcr
push
lret
mov
adc
call
fmuls
stos
lock
pop
stos
or
out
adc
pop
xchg
lods
cmc
imul
add
hlt
out
sub
mov
jne
mov
into
lods
movsb
mov
and
jge
iret
and
or
insb
and
adc
pop
xor
out
push
cld
pusha
jle
xlat
mov
clc
mov
sbb
out
cmpsb
dec
and
xlat
xor
mov
mov
push
push
iret
cmp
sti
repnz
in
das
fldl
fcmovu
arpl
xor
inc
call
xor
cwtl
out
rol
test
cmp
ret
imul
test
in
cltd
push
push
mov
add
xorb
cmp
sbb
in
das
js
mov
inc
test
sbb
int3
cmpsb
pop
mov
cmpsb
inc
sub
xchg
icebp
add
dec
adc
or
and
mov
nop
sub
das
repz
imul
hlt
and
and
xor
test
loop
in
adc
mov
shll
inc
mov
mov
dec
xor
cmp
pop
xchg
mov
jmp
inc
sub
sbb
adc
das
adc
je
cmp
xchg
repz
jae
sub
jns
icebp
pop
add
cmp
sub
adc
push
jo
mov
js
inc
add
adc
sbb
cmp
jecxz
cmc
js
cmp
cli
test
pusha
cmp
aam
stos
inc
add
stc
xchg
push
iret
sbb
aaa
mov
loope
inc
dec
jae
xor
pop
shlb
dec
push
aad
dec
mov
sub
nop
add
cmpsb
sti
das
sbb
mov
cmc
iret
mov
cwtl
lock
pop
into
sub
imul
outsb
int3
cmp
dec
stos
aam
xor
jg
mov
mov
dec
stc
jns
sub
data16
xchg
jno
cmpsl
pop
daa
scas
xor
jg
mov
xor
loop,pn
mov
lret
pusha
fcmovnu
repz
inc
das
xchg
ljmp
sbb
dec
rcr
adc
dec
push
sub
scas
repz
dec
mov
dec
shlb
sbb
in
dec
sub
ret
jp
mov
mov
pop
cmp
negl
add
and
pop
lahf
adcb
stc
jns
fwait
add
add
add
adc
outsl
and
imul
gs
xchg
dec
jne
out
inc
add
mov
daa
cmpsb
jns
mov
iret
push
jns
pop
xchg
or
or
add
sbb
inc
mov
jle
mov
dec
or
sbb
and
xchg
outsl
push
cmp
lods
cs
shlb
cmp
xchg
sbb
aam
xor
andl
xchg
cmc
aam
sarb
pop
std
mov
xchg
test
or
jl
cli
and
ja
pusha
sbb
ja
ljmp
sbb
mov
xor
add
shl
xchg
cmp
daa
inc
inc
imul
cmp
scas
xchg
jecxz
outsb
sub
mov
cmp
mov
ficomps
cmc
xor
jne
push
cmc
push
mov
mov
jo
lret
test
push
in
jne
repz
test
divb
pop
mov
ja
jb
lret
dec
dec
adc
clc
sub
add
add
pop
pop
push
insl
inc
xor
jb
stos
daa
cmpsl
out
jecxz
mov
adc
test
clc
push
add
and
lods
scas
call
and
cli
inc
xor
aas
mov
scas
push
in
daa
push
imul
fimuls
int
dec
push
loop
sub
jl
sub
lahf
enter
dec
xchg
pop
fisubl
mov
sub
xor
ret
mov
rorb
subb
loop
mov
mov
aad
cwtl
lahf
idivb
lea
sbb
popa
movsl
lods
orb
cmpsl
sub
imul
movsl
jnp
std
cmp
mov
sahf
out
fidivrl
xor
xchg
and
out
in
pop
xor
sahf
les
call
and
cmc
shlb
enter
rolb
mov
inc
pusha
aam
sub
shrl
push
add
lret
sahf
out
lock
ficompl
jmp
or
clc
adc
lret
cli
inc
lods
inc
iret
cmp
jae
lock
jno
fidivrs
xchg
int3
mov
jnp
loopne,pn
jmp
or
jno
and
xor
or
pop
cwtl
lret
adc
and
xchg
push
test
test
out
jl
or
test
and
scas
fsub
xchg
dec
mov
dec
stc
pusha
sub
xchg
ud1
int3
and
jb
out
popa
insl
pop
inc
testb
mov
jmp
lret
stos
jo
pushf
aas
dec
movsb
fisttps
xchg
xchg
xchg
mov
fst
and
stc
adc
test
iret
jb
pop
loop
call
movsl
leave
lock
or
xor
mov
call
aam
popa
cmp
dec
lds
inc
jge
push
mov
adc
xchg
xor
imul
dec
out
sbb
and
pop
mov
pop
ret
sbb
pop
sub
icebp
or
add
inc
xchg
jle
iret
dec
lods
es
lods
dec
inc
jp
loop
shr
jmp
insl
cmp
test
ret
sbb
aaa
les
insb
das
movsb
cld
push
mov
and
fxch
in
divb
jns
dec
bound
and
and
push
aad
xchg
movb
sbb
add
or
jb
cmpsb
inc
sub
pop
sub
imul
imul
jecxz
aas
xchg
fwait
or
xor
mov
in
dec
in
push
repnz
push
lea
push
xchg
cmp
pop
out
shl
mov
sbb
mov
jmp
adc
ret
icebp
xchg
sub
pop
pop
in
adc
stos
pop
lods
fcomp
xchg
pop
in
pusha
out
cmp
push
xchg
push
jle
mov
jge
aad
add
arpl
loopne
stos
xchg
xchg
les
xchg
std
ficompl
stc
cltd
inc
jae
jnp
and
push
cmp
adc
mov
jl
insb
pushf
test
stos
jge
ja
mov
bound
negb
int3
stc
insb
mov
sbb
lea
push
push
sbb
mov
inc
pop
inc
push
xor
pop
cld
scas
inc
xor
ljmp
and
dec
out
loopne
adcb
lea
addb
arpl
jb
roll
sub
sub
jp
and
pop
mov
pusha
iret
cmp
dec
push
mov
les
frndint
shlb
insb
adc
pop
out
subb
mov
pop
inc
cmp
es
popa
nop
jmp
mov
stc
or
or
cs
xor
mov
jno
movsl
std
fst
lods
cmp
push
mul
push
add
mov
rcl
out
out
push
jne
shl
xchg
push
fisttpl
test
in
movsb
inc
dec
mov
or
push
push
push
adc
xchg
and
mov
fwait
adc
mov
jbe
add
mov
fs
stos
or
mov
jmp
pop
dec
pop
add
push
mov
int
testl
lcall
stc
dec
in
cmp
xor
jmp
sub
sbb
sub
sbb
neg
xchg
aad
xchg
adc
testl
stc
in
dec
xor
loop
lods
inc
cmpsl
dec
addl
mov
mov
shlb
mov
push
adc
pop
mov
test
add
adc
fmul
sub
xchg
and
sub
sub
outsb
cwtl
test
inc
mov
xor
inc
adc
xor
mov
mov
out
mov
xchg
xchg
scas
xor
push
or
repz
push
test
and
mov
pop
inc
les
dec
add
xchg
fwait
pop
mov
pop
push
iret
addb
lea
hlt
arpl
iret
adc
and
adc
cmp
inc
lea
std
or
iret
xor
movsb
call
dec
mov
dec
sub
inc
lods
ljmp
push
shlb
popa
or
hlt
pusha
aam
sbb
jle
add
push
pusha
inc
add
mov
adc
cmp
pop
mov
jmp
test
jg
inc
test
sub
jg
stos
dec
push
pop
push
aam
lea
test
aad
mov
jbe
ljmp
lea
add
cmp
jg
lds
test
ret
sarl
mov
aad
fs
mov
inc
push
mov
xchg
fcomi
inc
adc
pop
add
ret
call
sti
xchg
inc
sbb
out
imul
push
push
into
lret
pop
cwtl
sbb
mov
mov
add
out
sbb
xchg
test
mov
inc
arpl
sub
jl
cmc
sbb
lret
inc
pop
sbbl
mov
pop
and
push
sahf
cmp
jmp
repnz
out
rcrb
cmp
aas
je
dec
iret
arpl
fmul
dec
es
mov
mov
popl
mov
cld
notb
dec
int3
adc
mov
lods
scas
jne
jmp
mov
loopne
pop
popf
xlat
xor
call
mov
jmp
popa
mov
idivb
in
scas
pop
cmpsb
sub
in
pop
fwait
nop
sbb
xchg
mov
loope
jbe
pop
mov
xchg
loop
xor
test
push
dec
adc
mov
mov
inc
out
cvtdq2ps
sti
pop
lcall
sbb
jae
nop
mov
pop
dec
popa
adcb
outsb
popf
mov
sbb
ret
les
xchg
inc
out
push
outsb
mov
enter
in
ljmp
das
cmp
lds
aam
rorb
xor
daa
and
xchg
push
dec
fcmove
push
push
sbb
stc
fildl
pushf
dec
and
mov
and
cli
xlat
push
in
xchg
cli
insb
clc
pop
mov
mov
sbb
cmp
mov
xlat
ret
sub
out
xlat
push
sti
add
lahf
sti
rol
loop
xor
rcrl
fdivp
mov
xchg
mov
test
cmp
push
xchg
fs
test
cwtl
jae
int
dec
mov
push
inc
std
testl
idiv
loop
push
push
rep
fwait
pop
imul
insb
jl
cmp
cmpsb
push
scas
pushf
repz
cltd
fnstcw
loope
mov
movsb
pop
push
fsubrs
push
jl
into
mov
iret
push
loopne
and
cmpsl
filds
push
pop
ret
jmp
inc
dec
std
mov
inc
xchg
fimull
aam
das
insl
outsb
pop
lea
dec
xor
std
clc
mov
cld
or
outsl
out
daa
cmp
sub
ret
xor
adc
in
mov
outsl
scas
dec
dec
imul
test
aam
js
xchg
cmp
stos
shlb
xor
or
shlb
xor
jl
daa
sub
jno
mov
repz
dec
add
push
arpl
jmp
dec
rcrl
xor
push
dec
jbe
cmp
jmp
into
popa
fnsave
sarl
popf
in
jge
test
fwait
inc
shlb
ss
inc
jg
mov
cmpl
cmp
dec
test
mov
aam
arpl
cmp
add
jnp
or
fiaddl
mov
cmp
not
sbb
loopne
clc
jmp
or
push
das
insb
sti
mov
in
cmpsl
popf
or
aam
xchg
xor
cmp
push
xor
jmp
or
jo
arpl
nop
sub
daa
lret
ret
pop
xchg
and
fnstcw
push
lods
mov
mov
fiadds
cmp
test
stos
fwait
mov
out
cmp
loope
cmp
out
leave
lcall
xchg
push
lods
mov
loop
and
mov
push
addl
sub
aas
daa
sbb
pop
jne
cmp
call
jae
mov
adc
push
add
imul
add
xchg
inc
icebp
movsb
add
lods
fstl
jp
jle
xchg
icebp
mov
mov
in
insb
cmp
gs
jb
ret
int3
sbb
cld
nop
sub
mov
sbb
pop
lea
sub
rcrb
pop
sbb
sub
cmp
jp
pop
rcll
mov
jp
lret
fs
cmc
ja
add
mov
and
pop
pusha
mov
out
shlb
stc
lcall
bound
hlt
pop
loope
loopne
mov
xor
pusha
jge
shrb
push
mov
xchg
rcl
gs
push
ljmp
inc
jmp
sub
sahf
daa
xor
lcall
push
fisubs
sub
ds
xchg
xchg
sbb
cmp
xchg
negb
cltd
or
sbb
das
pop
or
or
loope
and
imul
out
or
add
adc
sub
and
pusha
cmp
and
mov
rorb
movsl
scas
jge
xor
xchg
nop
pop
in
push
int
sub
and
add
jb
ds
aas
pop
fs
mov
mov
in
aaa
loope
das
sbb
nop
and
arpl
sbb
adc
xchg
xor
mov
cmp
inc
aam
cli
repnz
cmp
out
mov
cmp
fsubrs
add
sub
xchg
jne
add
push
sahf
pop
mov
ret
jg
dec
test
add
mov
movsl
loope
mov
cmpsl
or
pop
mov
sbb
push
repnz
pop
add
jo
fpatan
repnz
lds
fsubl
adc
fmull
xor
or
push
adc
dec
mov
test
push
aas
add
les
mov
scas
in
dec
jmp
push
pop
gs
pop
mov
jl
int3
adc
or
sbb
lret
sbb
jmp
ss
add
stc
mov
xchg
stc
push
cmp
push
or
mov
jg
jecxz
insl
mov
cmp
test
icebp
xchg
cmpsb
add
leave
pushf
out
cmp
xor
mov
movl
or
bound
movsl
adc
lods
jmp
mov
test
jo
pop
sub
sbb
shrl
enter
incl
mov
mov
aaa
push
ljmp
lahf
mov
lahf
sahf
js
push
pop
ja
stos
movsb
cli
inc
adc
pop
mov
inc
ret
lods
sbb
out
push
fs
ret
sbb
xlat
aaa
icebp
sbb
cmp
push
pop
mov
and
sub
pop
imul
cmp
inc
outsb
fsubrs
outsl
loope
mov
adc
ss
clc
mov
iret
imul
adc
ljmp
push
dec
dec
in
scas
shrb
xchg
mov
popf
xorl
sbb
rcll
pusha
sub
sbb
push
insb
pop
push
scas
pop
and
or
pop
mov
popa
cmp
fnstcw
icebp
js
pop
xchg
sbb
jp
andl
inc
jns
lahf
jle
hlt
cli
js
pop
adc
js
xor
popa
or
xor
pop
push
mov
add
not
add
xor
scas
mov
imul
stc
addr16
jns
sub
xor
and
mov
dec
imul
jg
insl
push
lds
in
hlt
lds
testb
adc
aaa
fmulp
shr
xchg
mov
or
mov
fimuls
ds
xchg
push
mov
cltd
cltd
psraw
dec
icebp
sub
pop
addr16
lahf
xchg
jae
loope
jl
adc
fistl
cmp
and
and
mov
cmp
pop
aas
cmp
adc
loop
cltd
fcmovbe
movsb
sbb
repz
jmp
mov
test
insb
movsb
stc
adc
pusha
xor
scas
jp
xlat
mov
pop
mov
in
ljmp
cmpsl
pop
int3
mov
mov
mov
nop
adc
mov
cmpl
shrb
lret
jno
stos
or
es
pop
or
sbb
cmp
push
add
loop
fidivrl
jne
xchg
out
enter
lret
or
scas
jge
jb
dec
ds
jb
dec
mov
mov
sarl
sahf
ds
movsl
pop
ja
inc
push
inc
adc
testb
std
lds
push
or
mov
mov
ficoml
loop
test
push
mov
inc
fisttpll
fimuls
cmp
mov
xchg
cltd
sbb
mov
fadds
mov
out
stos
jge
mov
mov
push
in
jp
jecxz
xchg
xor
adc
sub
cmp
xchg
bnd
ds
adc
or
call
clc
add
jmp
mov
loop
je
sbb
cltd
out
pop
pop
xchg
push
mov
push
and
adc
les
je
int
mov
jb
mov
loope
sbb
pusha
inc
sbb
into
outsb
jl
jmp
stc
push
insb
pop
push
pop
fidivs
mov
in
pushf
rcrl
inc
ja
mov
dec
sti
sarb
pop
pop
idiv
or
rcrl
adc
push
xor
adc
add
lahf
arpl
loope
loopne
push
dec
mov
sbb
in
pusha
aaa
cmp
mov
mov
scas
jo
lods
and
mov
pop
data16
int3
xor
push
sub
test
push
and
cld
fcmovnu
add
test
ret
test
and
sbb
sub
dec
divl
mov
xchg
jecxz
fisubl
rcr
adc
popf
push
rcl
xlat
sbb
or
pop
aad
xor
push
pop
out
insl
sti
pop
adc
inc
jp
lcall
in
test
xchg
les
sarl
loop
repnz
sbb
decb
pop
pushf
test
sbb
aaa
mov
popf
rcrl
xor
shr
sahf
lcall
push
jno
xor
inc
mov
lret
xchg
in
or
sbb
fcomp
in
push
daa
sub
je
xor
dec
lcall
mov
and
ja
jns
sti
jp
adc
mov
mov
cwtl
lret
pop
sbb
dec
out
lahf
fadds
imul
mov
cmp
loop
sub
mov
aaa
stos
inc
mov
pop
sti
rol
cld
or
mov
adc
fstps
sbb
sarl
add
sti
iret
pop
ror
or
jne
mov
or
sarl
mov
fdivrp
push
int3
out
aaa
icebp
adc
push
add
sbb
jae
cmp
or
xor
sub
adc
int3
sub
mov
in
and
fisubrl
jmp
rclb
popf
mov
cwtl
out
pusha
push
mov
clc
push
xor
lret
jno
pop
lret
imul
rorl
and
shrd
mov
lock
sub
mov
xchg
jbe
dec
mov
popa
add
xchg
lock
jo
mov
push
xorb
pop
into
mov
std
xchg
jge
cmp
fdivr
adc
pop
sub
push
movsl
cs
fstpl
cmpsb
cmp
push
sub
ljmp
xchg
cmpsb
insb
jbe
mov
dec
xor
or
adc
mov
pop
jmp
mov
mov
xchg
jne
sbb
pushf
jo
scas
std
sarl
push
mov
jmp
pusha
in
sahf
inc
push
xchg
jecxz
and
leave
adc
adc
mov
sub
cwtl
js
push
shlb
or
sarl
lea
jbe
fisttpll
mov
paddusw
push
stc
adc
pusha
and
lahf
stos
jnp
jno
js
fcoml
data16
sub
cli
test
js
in
xlat
mov
push
sub
sub
push
xor
scas
sbb
aam
jne
pop
pushf
inc
jae
fstl
cmp
outsb
adc
xchg
inc
jg
sbb
mov
or
xor
ficoml
outsb
sub
aas
pop
popf
aad
mov
jg
test
cwtl
and
adc
pop
in
mov
sub
shl
or
mov
nop
push
sub
test
loopne
xchg
sbb
scas
and
and
into
adc
ret
in
xor
or
in
jle
xor
sbb
lcall
fwait
inc
inc
int3
push
outsb
test
repz
lea
adc
cmp
jg
mov
or
incb
jno
fadds
jmp
inc
pop
mov
add
or
cmp
pop
or
xor
hlt
cmp
hlt
call
enter
inc
mov
xor
inc
sar
adc
cwtl
and
mov
dec
jnp
shll
and
arpl
lret
mov
test
insl
ret
pop
ret
lcall
sahf
out
mov
addl
ljmp
dec
pop
push
ljmp
shr
mov
pusha
jmp
dec
push
jp
int3
ret
push
out
adc
loopne
xlat
shr
add
aaa
arpl
aas
cmc
sbb
mov
and
outsl
xchg
push
xchg
out
jl
aam
xchg
shlb
or
daa
out
inc
addl
jmp
sbb
js
in
add
xor
dec
inc
mov
or
add
jg
mov
jg
outsl
cmp
in
and
rorl
cmpsl
or
test
imul
sbb
cmp
ss
jle
sub
cmp
or
into
nop
cmp
or
fidivs
daa
pop
out
and
and
add
stos
add
cmovb
jno
js
dec
test
imul
or
mov
rorb
xchg
icebp
ljmp
cli
dec
repz
xor
inc
sub
cld
sub
dec
or
lahf
mov
jae
jo
lds
jmp
mov
xchg
rorl
fs
push
add
sub
loopne
out
and
push
pop
js
adc
add
inc
jne
dec
mov
out
xor
sbb
xchg
aaa
xor
push
test
xor
fdiv
enter
loop
sti
inc
dec
and
add
cmpsl
cli
jmp
cmp
pop
outsl
cmp
mov
test
js
in
lret
scas
cmp
xor
fsubrp
inc
pop
aad
pop
and
push
push
movsl
iret
imul
adc
cmp
dec
in
pop
push
push
push
mov
clc
call
loopne
add
mov
lret
stc
fiadds
aam
inc
jns
pop
pop
leave
xchg
test
pop
out
mov
sub
mov
sbb
pop
pop
inc
loopne
mov
adc
stc
dec
iret
iret
mov
icebp
xor
mov
or
ds
jne
jp
add
xor
jg
sbb
push
mov
es
xchg
jne
je
xor
cmpsb
iret
cmp
push
out
xchg
sarb
fwait
mov
push
leave
repz
xchg
imul
pushf
mov
push
dec
sub
sbb
dec
mov
hlt
mov
mov
and
sbb
mov
and
mov
pop
cmp
push
loopne
bound
jmp
iret
mov
mov
sbb
call
fwait
mov
sbb
clc
jb
dec
mov
xor
popa
mov
popa
mov
clc
insl
pop
xchg
jo
ret
and
scas
mov
push
sub
xchg
repz
mov
push
pop
jns
imul
cmp
or
shr
mov
fstpt
test
pushf
popf
dec
cmc
adc
lret
dec
mov
add
jp
call
arpl
sub
scas
lret
pusha
or
movsb
adc
xor
sub
aas
xchg
jo
stc
ja
or
and
cmp
out
cmpsl
icebp
and
jmp
lds
pop
sbb
dec
push
loop
jg
in
jecxz
fwait
xor
sysret
cmp
xor
test
test
and
leave
adc
insl
out
ja
fwait
ss
and
aaa
lock
mov
dec
inc
jb
addb
adc
iret
cmp
stc
push
fldt
das
int
jmp
push
cmp
add
cli
movsb
sbb
sbb
ret
xchg
push
sbb
jb
fwait
pusha
adc
rcr
jne
int
cli
leave
and
and
push
push
and
xor
ja
mov
ds
aam
pop
dec
cmc
adc
inc
outsl
jns
cwtl
hlt
cmp
out
cwtl
and
std
push
daa
push
bound
mov
in
xchg
mov
iret
and
sub
fstl
dec
push
mov
cli
or
add
stos
jns
lea
mov
int
in
mov
repz
mov
mov
das
scas
popf
lcall
icebp
mov
xchg
dec
mov
loop
inc
outsb
fs
or
pop
mov
lcall
daa
aaa
pushf
mov
les
xor
xchg
push
data16
pop
outsl
out
mov
stos
lds
sarl
shr
test
mov
inc
in
fildll
in
dec
popa
shll
stc
pop
inc
jbe
cmp
xor
fnstcw
inc
dec
fisubl
ret
jle
lret
and
popa
mov
xor
jne
movsl
cli
xor
xchg
sbb
jbe
dec
loope
leave
push
in
sbb
repnz
popa
pop
popf
lods
lahf
pop
call
or
repz
data16
adc
pop
lahf
cli
imul
insl
movsb
ret
sub
test
aaa
fsts
sbb
sbbl
rcrb
shlb
je
ficoml
stos
cwtl
sub
jne
sbb
ret
aad
in
or
sahf
mov
sbb
add
sbb
lds
stc
ljmp
repz
sub
aam
push
add
cmp
iret
jl
cmpsb
in
xchg
push
gs
insl
cwtl
lock
cli
arpl
inc
mov
lcall
xor
filds
mov
scas
xchg
fbstp
mov
sub
cs
dec
ja
adc
iret
rorl
xor
out
mov
push
pop
fsubrl
test
mov
mov
pop
add
cmpb
jnp
sub
out
and
lock
push
imul
loope
mov
cmp
or
into
aaa
and
and
and
jecxz
and
daa
cmp
scas
add
call
pop
pop
in
mov
fsubr
adc
or
sub
jnp
and
sbbl
or
add
jbe
enter
imul
outsb
pop
ficoml
in
sbb
mov
sbb
dec
mov
gs
aad
pop
adc
jle
jbe
add
push
mov
je
xchg
add
jbe
subl
add
jne
mov
jmp
push
mov
push
idivl
inc
pop
out
test
bound
jmp
leave
mov
outsb
loopne
or
je
push
jbe
push
or
ja
divb
fistl
rol
xchg
repnz
inc
jne
adc
ss
adc
sahf
rcll
mov
repnz
push
sbb
hlt
lahf
dec
frstor
jmp
repz
cld
sub
add
xchg
ds
sub
test
add
aad
push
xor
imull
cld
xor
dec
aam
inc
cmpsl
xor
pop
jnp
mov
aam
or
lret
shl
insb
cwtl
push
jnp
mov
scas
jle
hlt
push
std
movb
iret
jbe
lcall
ficoml
dec
dec
mov
xor
test
sub
jle
sbb
adc
mov
sarl
xchg
ret
sbb
jb
mov
ret
cltd
push
clc
push
push
or
daa
push
mov
push
or
push
push
mov
insb
adc
xor
out
dec
jl
roll
xor
mov
lahf
bound
aam
gs
loop
xor
leave
lods
int3
jmp
lcall
loope
push
aaa
and
jo
sbb
cwtl
push
enter
test
repz
mov
stos
pop
movb
and
xlat
lcall
jne
outsb
jns
mov
pop
test
pop
and
mov
inc
or
and
adc
xor
push
mov
push
jnp
add
mov
push
and
pop
sbb
sbb
les
aam
js
imul
shlb
test
pop
dec
mov
jge
leave
aad
pop
push
add
out
rcrl
stos
adc
push
pusha
xchg
loope
lea
mov
push
adc
push
add
push
iret
xchg
mov
pop
mov
ficomps
leave
sub
push
add
fld
dec
cmp
enter
es
fidivl
cltd
jecxz
popa
andb
inc
mov
icebp
jne
imul
ret
fbstp
xchg
int
cmp
movsb
sub
mov
shl
insl
mov
mov
data16
lret
fidivrl
xchg
es
or
or
jge
jl
scas
in
pop
sbb
enter
ja
push
dec
fsubs
arpl
sti
dec
std
testl
lea
mov
mov
pop
fcomps
jg
xchg
jmp
pop
adc
push
fisttps
cmp
mov
push
cmpsl
mov
xchg
sbb
filds
icebp
push
stos
mov
pushf
cmp
dec
cmp
out
inc
pop
enter
inc
or
cmc
sub
cmpsl
or
outsb
adc
adc
test
clc
outsb
lea
incb
mov
mov
adc
sub
inc
mov
aaa
call
sbb
repnz
sub
shl
nop
loop
mov
mov
mov
sub
adc
je
push
mov
inc
sub
loope
fidivs
push
xor
xchg
rcrb
xchg
xlat
inc
inc
pop
jo
pop
add
aad
dec
jl
adc
dec
cmp
gs
xchg
jns
xchg
mov
push
aad
sub
mov
cmpsl
mov
hlt
and
push
inc
cmpsl
cmp
lcall
push
aam
pop
dec
mov
fbstp
mov
xor
aam
popa
mov
jne
repnz
mov
adc
or
jno
dec
nop
mov
mulb
xchg
mov
adc
dec
xchg
in
ja
cmp
stos
push
imul
pop
testb
push
aam
push
jmp
mov
xchg
movsb
std
int
pop
adc
jg
pop
gs
mov
fs
and
scas
daa
xlat
xchg
push
inc
repz
xchg
adc
sub
push
and
mov
imul
add
je
push
xchg
in
jg
scas
gs
insb
imulb
mov
movsl
test
std
dec
add
jns
lcall
jb
sub
push
push
sbb
ficompl
jo
xchg
scas
xchg
add
lret
add
pop
push
fisubrl
rolb
mov
into
popf
mov
cwtl
sahf
mov
loope
rolb
test
fisubl
sbb
cmpsb
mov
sub
inc
cmpsl
js
das
mov
ljmp
jns
iret
clc
fldt
out
int3
les
hlt
jmp
or
jnp
xor
sub
and
pop
repz
mov
rorl
mov
jae
jl
mov
push
add
ret
and
sti
push
mov
inc
call
fcomps
adcb
cmpsl
xor
jne
lock
jo
ja
fwait
push
pop
and
pop
fisttpll
push
or
inc
into
pop
repz
sbb
fimull
add
adc
aaa
push
lds
ja
ljmp
adc
ret
mov
test
jg
xlat
je
xor
in
sti
mov
jb,pn
div
add
out
xchg
test
pusha
ret
pop
push
test
push
sbb
mov
test
add
pop
add
stos
scas
push
movl
test
aam
add
dec
scas
or
push
dec
dec
movl
xchg
call
test
add
mov
add
mov
xor
jg
push
inc
inc
loopne
lods
sarl
cmp
popa
mov
adc
inc
push
xchg
jne
jle
cmpsb
mov
jle
popf
or
add
xchg
repz
sti
mov
sbb
insb
pop
xorl
mov
addr16
lods
jo
and
aam
popa
fstpl
popa
dec
leave
pushf
push
mov
into
dec
loop
dec
or
dec
cwtl
pop
adc
add
lcall
xchg
push
imul
pop
shrl
aad
lahf
ja
xlat
push
xor
imul
cmpsb
movsb
add
gs
adc
rcll
fiaddl
lods
test
mov
add
fs
hlt
pusha
pop
pop
pop
xor
leave
mov
jmp
mov
xor
inc
movsb
int
or
dec
icebp
and
or
jle
ret
int3
shrl
in
repnz
dec
scas
jae
aaa
int
out
clc
jge
add
movsb
pop
and
out
adc
sbb
push
mov
jmp
mov
jg
int
lcall
in
scas
out
mov
gs
dec
pop
dec
push
andl
imull
iret
jp
test
int
jno
stc
insl
in
inc
push
dec
cmp
fdivs
subb
out
cltd
pop
ret
or
test
mov
imul
inc
test
push
jecxz
faddl
mov
and
std
bnd
and
pop
and
xchg
scas
sbb
cmp
mov
ds
aam
ret
inc
add
cmp
add
cmpsb
mov
test
movb
addr16
push
xchg
or
push
add
rcr
and
xor
adc
aas
lods
es
outsb
nop
xor
push
loop
lahf
addr16
push
push
mov
fldenv
rcll
jnp
dec
inc
xchg
ret
pop
aas
scas
dec
stos
mov
js
mov
push
daa
test
jecxz
xlat
jl
cmpsl
ficomps
jbe
iret
ja
and
cmpsl
insb
std
xor
fcomps
push
les
movsl
cmpsb
cmpl
dec
leave
shrb
clc
scas
jmp
and
das
mov
push
daa
xchg
xorb
ficoms
js
xchg
cld
in
jecxz
mov
push
stos
fidivrs
div
jmp
pop
lods
mov
or
mov
dec
mov
sub
and
dec
add
cmp
sbb
pop
mov
lds
mov
mov
push
into
movsb
movsb
cmpsl
lahf
in
orb
nop
mov
xor
add
xchg
sti
adc
inc
out
dec
sbb
inc
in
and
scas
dec
enter
js
pop
push
mov
add
dec
scas
xlat
test
test
lods
xor
int
shrb
and
jne
cltd
mov
dec
out
mov
cmp
js
rolb
lcall
stos
sbb
adc
cmp
cmpsb
adc
iret
fcmovne
push
push
adc
mov
clc
sahf
jne
pop
aas
sti
pusha
out
cmpsb
pop
jbe
je
mov
ret
shlb
add
out
adc
cltd
xchg
add
fsts
xchg
test
push
cbtw
cmpsb
cli
cmp
sbb
les
xchg
jo
cmpl
mov
sub
push
rcll
jno
es
sbb
mov
gs
mov
dec
xor
fdivs
pop
xor
cld
sarl
or
aad
sbb
pop
xor
in
adc
push
sti
bound
adc
test
mov
jbe
sbb
add
inc
xchg
mov
test
cmp
loop
lea
pop
stos
dec
push
or
repnz
idivl
jnp
iret
int3
xor
rcrb
inc
gs
add
repnz
or
icebp
aad
out
sarl
outsl
push
rcrb
out
push
push
xor
movsl
lods
and
outsb
add
jbe
out
xchg
adc
sub
push
neg
sub
js
push
in
sti
dec
jae
scas
outsl
test
inc
loopne
int
jnp
push
push
push
sub
and
xor
subb
mov
and
cltd
into
test
sub
mov
xchg
jno
enter
in
cs
ret
and
rorl
sub
and
ljmp
push
xor
cmpsl
cmp
repnz
call
imul
js
and
jns
mov
out
ss
insb
push
or
inc
cmp
mov
mov
cpuid
ds
ds
pop
lods
mov
pop
scas
cmpsb
adc
adc
mov
aaa
aad
cltd
sbbb
bound
aad
lea
sbb
jns
sub
mov
pop
stc
test
mov
repnz
add
cmp
pop
inc
add
mov
rcrl
adc
ljmp
stos
in
xor
cmpsb
test
add
movsl
pop
idiv
sbb
add
loopne
inc
jnp
hlt
pop
dec
sbb
daa
lods
fstpt
mov
add
jno
push
into
ds
xchg
aaa
mov
aas
cli
sub
shll
add
sar
and
jo
push
sbb
pusha
pop
fldcw
loop
bnd
ret
and
push
inc
call
xor
pop
sbb
and
xchg
ljmp
xchg
adc
fwait
jg
insb
cmp
daa
cmp
and
jmp
movsb
icebp
cs
inc
push
movsb
fdiv
sti
loopne
fcompp
and
jle
sbb
lcall
add
pop
push
pop
and
fcmovb
jmp
dec
mov
data16
xor
lods
scas
shl
fiadds
in
fstpl
mov
add
sbb
pop
or
push
dec
mov
shrl
stc
loop
xchg
lock
ja
fincstp
insb
adc
imul
repnz
pop
ds
and
cmp
inc
out
addb
jno
rolb
jne
pop
sub
adc
stos
movsb
iret
jge
dec
sub
std
hlt
insl
xor
pushf
lds
test
sbb
pop
mov
stos
leave
jb
fadds
pop
and
cld
in
std
fwait
adc
stc
sub
in
test
pushf
adc
ljmp
cmpsb
xchg
pushf
pop
adc
fstl
inc
jns
sub
outsb
in
dec
adc
jmp
push
int3
push
pop
mov
test
arpl
out
pop
or
jmp
cmp
js
push
mov
imul
xor
sbb
movsb
jb
fucom
mov
and
pop
inc
aas
sub
fmul
cli
out
sahf
dec
fimuls
arpl
pop
pop
push
push
mov
ret
push
movsb
mov
out
in
push
mov
loop
mov
aad
mov
mov
int
sbb
dec
sub
sti
pop
not
rcr
subl
std
hlt
or
xchg
test
xor
push
ss
in
popf
xor
pop
mov
xchg
cld
jle
popf
mov
mov
lahf
rcll
push
dec
and
test
push
dec
pop
loope
insl
rorl
push
and
push
dec
std
mov
jo
enter
jmp
or
outsl
loopne
in
iret
adc
pop
inc
std
push
push
inc
inc
mov
or
in
inc
and
push
adc
push
in
inc
cltd
inc
lods
mov
push
xorl
dec
int
add
rcll
and
xchg
inc
dec
rorl
cli
xchg
or
les
xor
add
push
and
daa
push
dec
das
cmpsb
iret
fildll
dec
data16
sti
add
dec
adc
insl
sub
test
xor
pushf
incb
and
inc
jnp
stos
sub
cmp
orb
negl
in
xor
repnz
jl
popf
xlat
mov
loope
mov
inc
arpl
pop
push
icebp
lods
mov
ret
mov
mov
rcrl
add
inc
je
test
mov
mov
scas
cmp
sbb
lods
std
mov
clc
lahf
bound
mov
jg
pop
call
adc
stos
cmpsb
ljmp
iret
repnz
or
mull
aaa
clc
mov
loop
and
fld
ror
mov
push
push
xor
jge
xchg
std
int3
mov
insb
sbb
pop
arpl
ret
hlt
arpl
mov
and
ljmp
int3
mov
lods
aaa
addr16
ficoml
or
enter
mov
jo
push
pop
mov
ret
push
scas
mov
outsl
imul
xchg
jp
xchg
inc
mov
sub
add
sbb
inc
xchg
andl
mov
mov
mov
data16
pop
rol
mull
pusha
adc
in
or
lds
adc
and
pop
adc
cltd
ja
imul
dec
int3
lret
push
xorl
fwait
daa
mov
jbe
lock
lahf
loopne
je
mov
sti
jae
lods
hlt
jbe
arpl
stc
mov
notl
mov
cmpl
test
xchg
int
popf
mov
xor
jl
and
pusha
mov
fistpll
ja
push
sub
dec
call
js
add
out
iret
jnp
sub
pop
sbb
xchg
adc
mov
mov
xchg
fsubs
jl
adc
sub
mov
out
mov
in
mov
repnz
repnz
aaa
dec
orb
cmp
jae
mov
add
push
or
out
and
push
call
cmp
lret
pop
mov
out
iret
xchg
xchg
lods
fdivr
pop
mov
stos
ss
clc
addr16
jp
inc
sbb
loopne
jg
and
int3
sahf
jb
out
subb
lcall
rolb
mov
sub
cmpsl
fnstsw
cmp
xlat
cmp
lods
or
xchg
scas
pop
andl
cmp
data16
iret
cmp
cwtl
dec
and
push
cld
stos
jne
push
xchg
dec
mov
jmp
test
cmpsl
push
sbb
xor
out
mov
push
cs
mov
imul
cli
push
sub
xchg
inc
xchg
std
adc
pop
sbb
insb
in
insl
movsb
mov
mov
pop
xchg
jle
mov
pop
sbb
mov
in
std
or
cmp
ja
dec
aaa
adcl
sbb
outsl
or
and
outsb
jno
addr16
xchg
xor
rcr
movsl
mov
push
loopne
push
leave
xchg
addr16
xor
adc
xor
out
jbe
std
in
pop
dec
sub
daa
cltd
jecxz
lods
sub
cld
outsl
subb
push
mov
lret
test
mov
repz
dec
loopne
push
rorb
mov
jmp
mov
adc
cmc
pop
adc
adc
aam
mov
inc
mov
mov
minps
enter
pushf
mov
sub
jb
call
pop
inc
inc
lcall
mov
mov
pop
lret
dec
jp
je
mov
hlt
lcall
mov
xor
sarl
cltd
xor
data16
inc
test
cmp
jge
outsl
cld
xchg
adc
mov
iret
scas
jp
sahf
sub
idiv
inc
pop
jne
mov
pop
inc
and
sbb
mulb
and
cmc
lcall
in
lods
loopne
mov
mov
daa
sahf
imul
movsl
jg
pushf
daa
test
jbe
xchg
divl
lahf
addr16
inc
cmp
cmp
mov
movsl
jae
jnp
and
push
aas
pop
adc
hlt
dec
cmp
loopne
loopne
adcb
adc
pop
inc
adc
jns
sbb
and
das
or
pop
push
mov
jb
jne
shll
fnstsw
mulb
aad
fdivr
xor
xchg
sbbl
scas
ss
pop
test
negl
shl
mov
adc
adc
pusha
and
jmp
dec
mov
rcrb
mov
loop
js
mov
mov
xchg
mov
in
in
shlb
outsb
mov
push
jo,pt
jg
fisttps
shrl
mov
add
and
aad
stos
cmp
loop
pop
xchg
subl
dec
push
add
test
movsb
jle
fistl
dec
out
sub
je
outsb
sub
mov
iret
imul
mov
imulb
ja
int3
xor
popf
cmc
mov
or
push
mov
les
pop
mov
lea
cltd
or
pop
push
dec
inc
xor
cmp
pop
in
in
xchg
adc
dec
stos
testl
or
rorb
fistpll
add
mov
pop
cmpl
stc
jno
pop
ss
dec
insb
and
adc
cmp
mov
inc
inc
adc
dec
jo
bnd
divb
sub
or
mov
in
and
pop
sub
sbb
xor
stos
jb
testb
sbb
and
gs
add
adc
pop
adc
and
adc
or
fidivrl
ret
fiadds
out
cltd
mov
inc
xchg
dec
xchg
in
in
aad
xchg
mov
xor
es
sbb
nop
ds
push
aas
sbb
pusha
inc
aaa
lods
out
fnstenv
add
mov
jl
xchg
adc
pop
out
adcb
mov
add
xorb
dec
xchg
pop
sbb
jns
pop
enter
pop
sbb
loopne
dec
cmp
mov
sbb
aam
or
clc
in
xchg
enter
mov
cmp
pop
fisttps
xor
outsl
adc
and
mov
cmpsl
sahf
rol
mov
push
call
outsb
cmp
sub
testl
aad
cmpsl
outsl
push
insb
insl
mov
jnp
mov
mov
jmp
adc
pcmpgtb
testl
mov
push
or
movsb
mov
stc
xor
pop
sub
push
aas
xor
sbb
xchg
jns
and
add
repnz
and
mov
out
pop
test
and
pusha
mov
clc
sahf
mov
mov
jecxz
fldt
rorl
testb
scas
loope
push
mov
lcall
into
inc
sbb
cmp
mov
pop
pop
cmp
outsl
pop
add
mov
push
sub
jl
fidivrl
mov
push
repnz
ds
test
add
push
fwait
test
push
ljmp
inc
push
xchg
cmp
push
bound
fcoms
out
jle
lock
xor
push
aaa
pushf
divl
das
es
jae
push
sub
jmp
xchg
xlat
int3
mov
sahf
mov
outsl
mov
bound
into
pushf
fdivrs
fs
jnp
mov
inc
mov
sub
jnp
rcrl
mov
jmp
mov
dec
mov
shll
cmp
in
lret
fadd
mov
out
mov
lds
mov
xlat
imul
icebp
imul
rcr
adc
add
outsl
jnp
lods
pop
and
pop
and
xchg
pop
out
out
cli
sbb
fstl
cld
inc
in
xchg
jmp
in
or
nop
and
les
adcb
outsl
sarb
in
mov
aas
xor
xchg
jne
mov
cmc
push
or
jbe
icebp
scas
push
jne
push
push
sub
pusha
in
jecxz
lds
rcll
test
adc
pop
out
shll
stc
pop
mov
adc
arpl
mov
negb
sub
xchg
or
and
shlb
dec
out
xchg
test
jbe
scas
xlat
jge
repz
jl
pop
sub
dec
xor
subb
sub
stos
or
or
pop
cmpsb
xchg
jge
sub
add
orb
mov
mov
mov
sub
rcll
dec
and
add
mov
shll
cmpsb
sub
stos
mov
jp,pt
daa
dec
in
jmp
daa
loope
cwtl
push
js
and
std
ret
les
xor
add
pusha
xchg
xor
lcall
sbb
or
loopne
or
imul
filds
push
stos
push
iret
jle
xor
enter
repz
xchg
sub
incb
adc
insl
aam
loop
les
gs
or
jb
pop
adc
into
imul
cmp
or
and
dec
inc
sub
dec
popf
scas
out
loop
xchg
cli
pushf
int
cmpsl
cmpl
imul
test
sti
mov
xor
dec
stos
pop
xchg
push
andl
jge
mov
sub
xor
jg
mov
dec
hlt
mov
push
or
dec
adc
jno
filds
ljmp
inc
cmp
xchg
and
imul
int3
pop
imul
xchg
cmp
and
push
les
mov
mov
jmp
and
ljmp
hlt
cs
pop
xor
mov
pop
or
adc
xor
pop
out
adc
test
sbb
aad
je
pop
loopne
cmp
pop
bound
adc
imul
xor
jmp
pop
cmpsb
loop
insl
popa
cmp
mov
loopne
lock
mov
xrstors
push
xchg
imul
inc
cmc
aaa
sub
data16
adc
icebp
subl
push
and
adc
inc
xor
loope
xchg
fstpt
sub
cmp
jge
adc
jbe
stos
fs
daa
xchg
out
dec
popl
movsl
xchg
mov
push
cmp
imulb
push
mov
es
jle
mov
ffreep
xchg
adc
jge
sbb
add
imul
ljmp
enter
jp
shlb
lahf
cmpsl
call
rcl
push
bound
mov
enter
pop
push
push
jl
mov
cli
dec
mov
pop
rorb
xchg
push
mov
leave
ret
addr16
mov
iret
cmpsb
xor
ret
in
in
lcall
xor
lret
push
fwait
sti
jmp
pop
lods
pushf
or
sbb
icebp
adc
hlt
sbb
mov
js
cmpsb
jno
xchg
inc
fistpll
mov
lea
insb
xor
dec
loop
jp
je
test
jmp
mov
mov
jmp
mov
dec
ja
cld
mov
dec
ret
pop
xchg
mov
daa
sbb
repnz
pop
push
and
les
add
les
dec
inc
xor
cmpsl
aad
and
test
orb
push
cmc
cmp
call
mov
fwait
rcll
cmp
outsb
jae
pop
add
das
push
xchg
and
jl
and
dec
mov
jo
lock
xor
aad
cltd
or
in
jns
daa
xor
push
pop
adc
jb
loope
jge
cmp
jbe
jg
mov
push
and
mov
push
stos
jns
xor
and
test
fiaddl
out
dec
shll
push
rolb
je
jg
popf
leave
aaa
dec
enter
pop
cmpsl
adc
sbb
add
stos
sub
pusha
popf
push
les
int
mov
lock
and
dec
aad
outsb
stos
in
stc
andb
cmp
xor
add
pop
mov
inc
push
cmp
xchg
fucom
nop
cmc
movsl
jno
inc
pop
pop
repz
out
pop
pop
jno
es
mov
sbb
repnz
or
cld
stc
aaa
test
adc
jg
mov
cmp
push
add
push
push
loop
cs
ja
and
lahf
je
dec
pop
xor
addr16
aas
add
gs
mov
fisttpl
insb
sar
adc
xlat
rorl
jge
lahf
xchg
ds
clc
xchg
jp
imul
scas
push
and
jne
lret
and
dec
cld
cmpsb
out
nop
hlt
or
test
jmp
clc
jne
xlat
push
add
cmp
div
push
mov
in
push
fcomps
xor
jne
mov
mov
lods
jle
shlb
mov
and
sbb
movsb
fstps
jge
xor
cmp
fwait
testb
mov
sub
maxps
sbb
xor
mov
add
orb
jmp
shl
mov
sub
xchg
data16
push
divl
insb
filds
cmpsl
mov
xchg
mov
pop
orb
stos
stc
adc
push
pop
inc
aad
and
aas
std
adc
push
sbb
outsb
mov
out
pop
pop
jno
pop
or
test
pop
int
and
pushf
shlb
pushf
pop
cmp
test
jle
sub
adc
pop
mov
jg
and
mov
push
xchg
jle
or
sbb
lret
push
arpl
lahf
addr16
xchg
xor
mov
xor
sub
pusha
push
mov
push
aaa
fisubrl
call
sub
adc
js
or
add
dec
shlb
test
ljmp
mov
and
ljmp
xchg
jb
and
lahf
stos
int
cmp
mov
stos
sbb
lods
mov
jb
into
imul
jbe
adc
mov
inc
sbb
sbb
mov
push
cwtl
xchg
arpl
gs
lods
jmp
pop
cs
jo
cmp
and
lods
test
stos
mov
arpl
xchg
or
and
and
mov
push
mov
addl
and
andb
adc
xor
sub
mov
or
fnstcw
inc
sbbb
stos
lods
scas
jno
js
mov
mov
insl
scas
call
xchg
push
clc
mov
in
repnz
mov
jp
bnd
ljmp
fcoml
in
inc
mov
lods
shll
pop
outsb
data16
std
outsb
dec
mov
xor
push
jne
mov
les
mov
daa
push
test
push
je
sbb
ret
sbb
sub
jns
xor
cltd
movsb
inc
lea
fs
lret
or
mov
lods
sub
fsubrl
addr16
mov
mov
xor
rclb
inc
mov
das
arpl
lods
out
clc
js
pop
add
leave
or
mov
mov
mov
or
test
daa
fldl
aaa
sbb
loopne
cmp
sbb
jg
dec
shrb
sbb
aas
addl
cmp
and
add
sub
inc
push
pop
lret
nop
xor
out
sarb
fadds
stos
jns
int
out
mov
mov
dec
push
mov
cmc
lock
out
cltd
cmpsb
mov
add
and
fsubs
faddl
out
inc
lcall
inc
ja
cmp
inc
call
es
push
imulb
movsb
push
fwait
sbb
adc
push
push
lret
dec
lds
not
outsb
stos
in
fbstp
aas
repnz
std
dec
xchg
lret
hlt
xor
mov
enter
scas
rcrb
sbb
mov
mov
mov
cs
data16
dec
mov
xchg
bnd
mov
scas
sub
out
cmp
lds
mov
cmp
imul
aaa
jb
mov
cmp
mov
cmp
jns
jae
add
jecxz
std
cs
mov
std
fwait
inc
daa
int3
jbe
call
pop
cmp
out
insl
inc
sbb
mov
ret
jge
addb
jae
lods
push
xorb
repz
dec
ds
movsb
pop
lret
subl
mov
adc
add
lods
rol
jecxz
movsl
mov
dec
gs
ficompl
cmp
sub
in
xchg
push
ds
cmp
andl
out
mov
inc
adc
fimuls
push
insl
mov
mov
push
lret
and
std
or
mov
fnstcw
and
or
ljmp
movsb
cld
rep
cmpsb
repz
test
mov
push
adc
sub
and
jnp
push
out
xor
ljmp
icebp
adc
aam
pop
cmp
and
insb
inc
out
and
sbb
pop
add
or
jae
xor
inc
push
idivl
inc
mov
mov
mov
subb
jmp
dec
insl
cmpsb
dec
jbe
sub
mov
push
adc
rol
sahf
mov
jl
sub
mov
adc
xchg
scas
rdtsc
sub
add
add
jle
orb
outsl
xchg
cmp
out
test
or
pop
int3
lock
mov
imul
icebp
jecxz
sub
mov
fwait
pop
aam
fsubl
mov
or
push
sbb
and
addl
out
cmp
sbb
aas
mov
std
leave
int3
sbb
add
push
data16
lcall
ds
xchg
scas
push
test
pushf
push
test
cmc
mov
jecxz
fistps
xor
sbb
cld
mov
aam
aam
push
cs
cmp
pop
jl
in
sete
stos
popa
push
mov
sbb
push
nop
and
push
loope
xchg
lcall
in
scas
nop
mov
lret
add
sbb
jl
sub
mov
sbb
adc
cmc
int3
add
jl
in
lea
push
into
cmp
sahf
cmp
fidivrs
dec
pop
fwait
jl
xor
dec
inc
clc
popf
push
aaa
loopne
pextrw
movsb
test
push
in
bnd
gs
inc
xchg
cmp
or
ret
jae
ss
jns
test
loop
punpckhwd
testb
cmp
clc
in
js
ret
pop
fdivp
jb
inc
and
mov
jp
leave
fstpl
adc
filds
sub
arpl
in
iret
lods
inc
inc
inc
mov
bound
xchg
mov
ret
js
in
and
loopne
stc
cli
imul
in
cmp
mov
aam
pop
lock
xchg
pop
pop
cmp
jb
ret
in
sub
fldenv
add
out
in
push
sub
xchg
push
cmpsl
fcmovu
std
or
int
stos
mov
cmc
mov
or
mov
push
pushl
into
mov
xor
stc
jo
add
imul
cmp
hlt
in
sahf
insl
mov
data16
cmpsb
outsb
aad
mov
add
dec
sbb
into
int3
cmc
out
lret
pop
push
mov
pop
xchg
out
add
out
sbb
jbe
mov
mov
out
jns
and
leave
push
and
push
jg
xor
movsb
nop
mov
inc
push
enter
stos
bound
jnp
or
imul
fucom
lds
or
cmpsb
outsb
push
or
cs
cmp
into
scas
loop
das
mov
dec
mov
sbb
movsb
pushf
adc
or
dec
vaddsubpd
movb
jno
bound
pop
aas
ret
pop
push
data16
xorb
nop
mov
jge
ljmp
aaa
cmpsl
jmp
imul
dec
out
mov
jne
mov
push
sub
mov
sbb
dec
clc
pop
shll
outsb
mov
push
push
outsb
mov
filds
icebp
xchg
shl
aam
arpl
mov
mov
fldt
lds
add
lret
adc
sar
pop
clc
mov
pop
cli
lods
in
pusha
add
repz
fcom
push
push
mov
fldenv
jae
cmp
cs
jne
adc
pop
mov
xchg
push
or
mov
loope
inc
add
in
movsb
dec
pop
sahf
xor
and
in
cmp
sbb
jne
dec
mov
dec
les
addr16
and
movsl
sbb
leave
pop
add
mov
in
test
jmp
dec
pop
addl
movsl
negl
sub
adc
mov
push
adc
pop
and
jae
adc
jb
clc
mov
out
imul
jmp
cmp
lea
jmp
jo
sbb
gs
and
inc
int3
add
sub
fdivl
fxch
mov
push
shrb
mov
test
lock
xchg
mov
mov
fidivrs
jnp
or
out
jns,pt
jnp
adc
sub
dec
test
or
xor
nop
add
jbe
and
test
pop
xchg
jp
adcb
clc
sub
rcl
rcrl
mov
movsb
sar
divb
cmpsl
xchg
jp
inc
repnz
mov
mov
sub
enter
xor
mov
mov
inc
je
jo
lret
jmp
inc
fs
out
addl
in
mov
je
mov
into
xor
aas
jg
or
stc
xor
pop
das
sti
xor
mov
pop
pushf
test
mov
pop
mov
xchg
adc
ret
or
or
scas
stos
pop
mov
sti
or
xor
push
push
lds
xor
sbb
popf
dec
inc
insb
fcmovnb
sbb
dec
pop
xchg
scas
imul
out
adc
jl
outsb
add
xchg
jecxz
out
adc
jecxz
loope
cmp
cmc
fnstenv
fsubl
xchg
rorl
xor
pop
pop
inc
mov
movsl
push
adc
cmp
and
pushf
adc
lcall
sub
mov
shlb
sbb
push
fadd
xor
xor
mov
imul
pop
push
jmp
cs
pop
inc
xlat
cmpsb
popa
in
adcb
xchg
repnz
mov
fnstcw
test
movsb
sbb
jg
add
sub
pop
xlat
mov
insl
or
adc
jecxz
enter
ljmp
gs
fildll
dec
jecxz
cmc
bound
inc
mov
inc
cmp
mov
imul
ja
fsubs
sub
cmp
sub
scas
sarb
cli
mov
lret
and
addr16
cld
jg
dec
cmp
jnp
pusha
jae
dec
repnz
inc
pop
dec
cmpsb
mov
pop
push
inc
pop
push
loop
sbb
loope
aam
idivl
loop
cmpsl
cmp
adc
clc
in
jns
cld
mov
sarl
sub
jg
jmp
push
in
in
pop
mov
push
das
xchg
mov
in
sbb
repnz
xlat
mov
das
and
dec
das
inc
ret
into
std
lock
das
rclb
lret
mov
xor
adc
sub
xor
xor
mov
xor
xor
or
icebp
jo
nop
mov
scas
sti
sti
sub
cmp
sub
pop
push
push
mov
out
fnstenv
jo
dec
incb
add
ret
std
cli
xor
sub
dec
mov
insl
sub
sub
sub
sub
int
adc
aaa
out
cmp
ret
pop
das
outsl
mov
ret
xchg
xor
xchg
adc
adc
jmp
out
out
pop
xchg
stc
fxch
add
inc
sub
cs
outsl
pushf
cltd
mov
testb
outsl
pop
pop
subl
push
pop
ret
sbb
dec
in
dec
push
mov
mov
fbld
push
in
push
ret
push
mov
and
adc
pop
xchg
lods
in
jb
cs
pop
mov
push
xor
fimull
out
adc
ds
scas
lods
mov
jae
cmp
cmp
cmp
sub
sbb
fists
pop
stos
xchg
and
jecxz
jo
push
and
test
lahf
cmpsb
dec
jg
adc
inc
aad
insl
test
es
jmp
add
movsb
xchg
repz
in
jb
test
jecxz
pushf
jae
mov
popa
cld
sbb
cmp
int3
dec
js
push
je
sahf
xor
cmp
pop
pop
imul
inc
mov
leave
mov
push
xchg
imul
inc
xchg
lods
add
pushf
or
mov
clc
inc
hlt
test
inc
shll
std
dec
and
jecxz
push
adc
push
cmpsb
inc
or
inc
inc
imul
imul
repz
inc
sub
jmp
push
divl
sbb
pop
and
insw
adc
and
stos
mov
outsb
or
inc
subb
cmp
sti
dec
sub
inc
mov
stos
pop
xchg
movsb
inc
adc
lds
xor
dec
ret
outsl
add
stc
int3
ljmp
jbe
pop
aaa
mov
mov
lahf
clc
outsl
and
stos
dec
fwait
stos
jle
inc
shrl
cmc
mov
int
pop
jl
imul
inc
sbb
and
jmp
sahf
xor
dec
mov
inc
cli
xor
cmpsl
push
test
fs
push
notl
pop
mov
fadds
or
dec
cmp
pop
das
adc
and
adc
push
shlb
cmpsl
add
and
lea
std
les
inc
or
fnstsw
arpl
gs
arpl
dec
push
ds
data16
daa
pop
sub
imul
fld
xchg
popf
dec
mov
and
lret
mov
les
sarb
ja
pop
pushf
or
adc
lahf
push
loope
aas
lahf
fcom
sub
int3
aaa
xchg
mov
add
sahf
imul
out
cmc
das
xlat
sbb
mov
cmp
test
icebp
ljmp
sbb
jns
ret
xchg
outsb
jle
jp
jge
xchg
sbb
add
sbb
ret
and
ret
out
or
mov
pop
insb
out
jle
fisubrs
or
mov
xor
cltd
push
cmp
xchg
xor
test
pop
xchg
push
insb
shrb
lock
mov
cmpl
or
cld
xchg
test
iret
cli
std
icebp
sti
push
jbe
add
sub
sahf
adc
int3
and
in
ljmp
jne
and
dec
push
cmpsl
shlb
insb
sub
loopne
mov
pop
call
cmpsb
nop
push
ds
sub
dec
in
xchg
inc
out
test
std
rdpmc
aam
mov
xchg
mov
xchg
adc
pop
repz
lcall
and
cmp
loope
addr16
aas
mov
test
xchg
xor
cmc
push
and
scas
addr16
and
pop
xchg
mov
pop
jbe
ja
aam
mov
lret
out
sahf
push
xor
mov
and
cmp
icebp
jmp
or
xchg
dec
es
dec
cmp
lds
divl
orb
aad
rcr
rolb
mov
popa
sahf
dec
add
pushf
lret
push
and
sbb
fwait
lock
adc
bndstx
loop
sub
adc
sbb
mov
test
mov
xor
pusha
push
mov
xorl
pop
dec
mov
fidivrl
xchg
push
aas
sub
xchg
stos
pop
jno
dec
cmp
mov
push
in
inc
xor
enter
out
and
pushf
push
out
xchg
or
cmpsb
repz
dec
sub
lods
in
and
push
inc
sti
adcb
jmp
push
scas
in
push
cmp
orl
sarb
test
icebp
sti
sub
jl
add
je
inc
add
xchg
and
mov
mov
out
outsl
push
fdivrs
xchg
xchg
mov
lea
decl
repz
aam
add
cmp
xchg
and
xchg
jae
add
in
js
ret
insl
fdivrp
aaa
push
fnsave
ja
pop
adcb
sub
dec
adc
fwait
loopne
lock
xor
sti
jl
out
xor
test
sahf
rolb
ss
or
push
xchg
sarb
fiadds
cld
or
inc
bound
mov
dec
mov
test
jnp
dec
aas
jnp
jp
cli
int3
arpl
mov
js
inc
pushf
dec
sarb
js
or
mov
jne
jb
outsl
inc
push
lahf
cmp
roll
lahf
inc
xchg
dec
fcmovbe
add
and
jmp
jg
out
xor
sarl
pop
adc
push
dec
shrb
dec
fisubrl
add
cmp
jbe
xor
inc
mov
sub
out
lds
lods
inc
mov
add
and
pop
and
dec
pop
push
adc
fdivs
das
aad
mov
pop
shl
dec
push
pop
ja
jp
dec
fistpl
mov
adc
or
cmp
cs
inc
or
pusha
push
xchg
push
inc
ror
stos
ret
pop
inc
add
aam
aam
ret
lea
pop
sbb
arpl
push
mov
and
fwait
rorl
and
jl
jge
adc
push
xor
inc
push
popw
cli
push
pop
loopne
mov
pop
and
mov
test
mov
test
repnz
push
jne
into
mov
lods
pop
xchg
test
mov
stos
loope
dec
xchg
lret
fsubs
sbb
mov
insl
pop
fildl
into
jne
pushaw
xchg
adc
das
or
push
aas
mov
div
xchg
mov
xlat
push
xor
jmp
add
loope
lods
cmpsl
test
pop
or
cmp
outsl
adc
int3
and
mov
test
add
cwtl
into
rorb
pop
inc
icebp
loop
test
mov
imul
xchg
pop
clc
pushf
mov
push
js
sbb
dec
mov
mov
push
pop
push
imul
mov
mov
rclb
popa
movsl
imul
test
push
dec
lcall
add
lea
cs
push
push
inc
adc
inc
rcll
outsb
setnp
outsl
outsl
shll
push
mov
hlt
je
sbb
and
sbb
stos
add
das
in
dec
sbb
lods
ret
adc
rcr
pushf
inc
sub
lret
jg
xchg
xchg
call
jp
rorl
lret
and
fdivl
cmp
fs
fwait
popfw
adc
pop
xor
jmp
shlb
notl
xlat
ret
adc
and
and
push
out
dec
subb
outsl
insb
aam
lods
add
dec
inc
fmuls
xor
push
ret
mov
test
push
mov
dec
imul
inc
addr16
jl
mov
mov
push
popf
stos
xchg
xchg
mov
popl
mov
mov
std
xor
sti
scas
pop
insl
add
mov
cmp
add
fnstcw
fwait
dec
aas
cmpsb
mov
ror
add
pop
and
insb
out
fs
inc
in
jle
mov
jl
add
fidivs
ret
jmp
cmpl
fnstcw
mov
addb
fcompl
mov
in
fcoml
mov
pop
fsts
scas
ret
test
lret
dec
daa
lret
mov
pop
cwtl
cwtl
mov
push
pop
mov
movsb
or
jne
add
inc
ss
sub
movsl
dec
into
xor
scas
sbb
pop
jge
out
popa
xchg
dec
push
pop
add
inc
inc
jno
dec
inc
xor
dec
bound
lcall
insl
jno
pop
fdivr
out
pop
mov
adc
add
out
rcll
mov
aas
sbb
push
imul
push
xor
push
add
movsl
add
or
and
ffreep
jge
fimull
cwtl
cmp
outsl
es
xchg
mov
inc
mov
call
aaa
jl
lcall
aad
mov
mov
lock
push
arpl
dec
xor
pushf
mov
gs
mov
mov
inc
sub
mov
pop
pop
scas
fwait
jo
adc
xor
test
jnp
cmp
test
test
dec
push
xchg
mov
xchg
ret
xor
adc
xchg
nop
ret
sarl
dec
mov
inc
cwtl
jecxz
or
lcall
push
add
sbb
and
in
ja
popf
rcll
cmpsl
addr16
inc
mov
fs
sahf
jnp
sarl
jp
xchg
inc
and
cmp
and
push
test
bound
push
sbb
pop
cwtl
or
sahf
mov
mov
mov
fbld
xor
insl
push
xchg
sbb
imul
and
dec
jecxz
cmp
jnp
add
mov
jno
in
mov
adc
insl
inc
add
out
imul
adc
and
xchg
lods
or
std
jns
sub
cmpsb
pop
cmp
push
lods
pop
dec
mov
add
mov
and
or
cld
push
fmuls
xorb
mov
bound
fs
les
popa
movsb
jbe
adc
es
push
leave
mov
neg
push
jl
add
in
dec
adc
rorb
mov
push
stc
icebp
movsb
add
adc
and
push
xchg
xchg
sti
cwtl
lret
add
stc
repz
stos
jnp
dec
mov
xorl
bound
adc
inc
imul
xor
inc
in
cmpsb
sub
test
test
push
imul
sbb
ret
pop
add
adc
out
aam
rolb
mov
sub
xor
pop
pop
in
cmp
decl
push
repz
mov
push
inc
lock
in
nopl
sbb
sub
adc
testl
mov
rcrl
or
fstpt
adc
lcall
xchg
mov
push
cmpsb
jns
dec
push
sub
dec
dec
add
lds
inc
xor
jae
icebp
clc
add
add
nop
nop
cld
out
movb
rol
mov
or
in
rolb
and
ss
fwait
insb
ja
sub
fsubs
push
iret
cmpsb
mov
jg
pop
mov
mov
sahf
push
pop
lds
mov
xor
ret
inc
mov
add
call
jg
push
or
sbb
mov
cltd
shrb
sti
mov
outsb
fsubrl
pop
sbb
jg
es
cmp
cmp
pop
lods
shlb
scas
leave
push
pushf
mov
outsl
jne
mov
pop
lcall
pop
push
xlat
ret
inc
cmp
mov
shll
xor
insl
mov
out
pop
cmc
adc
and
hlt
adc
in
fs
push
xorb
jb
cmp
xchg
sub
ljmp
push
cmp
cmp
popf
pop
lahf
test
arpl
xchg
imul
push
pusha
pop
in
adc
clc
push
pop
fldl
pushw
popa
push
or
inc
jmp
imul
push
ffree
fisttpl
aaa
scas
pop
mov
popa
cmpsl
sub
arpl
cmpsl
jl
and
dec
in
arpl
inc
jne
imul
pop
cld
mov
inc
jo
stc
stos
scas
adc
push
int
inc
es
xor
xchg
filds
fs
pop
jl
dec
mov
and
fmull
mov
jl
out
cwtl
sbb
test
rol
push
stos
sub
xor
rcll
jae
ficompl
jbe
adc
pop
aaa
aaa
fidivrs
out
in
bnd
and
cmp
push
mov
and
cltd
push
rcl
fbld
shlb
and
jle
out
popa
dec
jo
sbb
test
pop
into
in
push
add
jb
test
mov
fs
and
clc
in
mull
imul
sbb
cmc
xor
loopne
push
inc
into
cmpsl
sub
leave
out
push
mov
lret
icebp
shr
xchg
mov
cltd
xchg
push
inc
cmc
cmpsb
shl
test
dec
mov
clc
mov
lret
dec
cmp
test
ret
les
mov
cmpsl
or
mov
cltd
jbe
test
cmp
sub
in
aam
xchg
inc
std
inc
and
xchg
push
push
cltd
lahf
push
pop
xchg
outsb
popl
jns
mov
pop
and
out
adc
cs
stos
test
insb
adc
lret
adc
daa
imul
mov
sub
mov
fwait
sbb
fneni(8087
icebp
mov
xchg
jl
and
mov
push
pop
out
es
sbb
lcall
outsl
mov
std
inc
xchg
fisubrs
outsl
mov
xchg
mov
mov
aas
jns
cmpsb
xor
insb
pushf
cmp
mov
repnz
ljmp
dec
stc
test
dec
sbbl
fstps
mov
cmp
adc
push
xchg
lea
scas
daa
mov
mov
ljmp
arpl
jne
ljmp
rclb
adc
pop
lret
je
xchg
xor
enter
andb
jl
ret
loope
adcl
dec
sub
addb
arpl
dec
addr16
pop
jbe
std
jae
and
xor
pushf
cmp
mov
mov
lock
jge
pop
sbb
adc
inc
sbbb
pop
xchg
cmpsl
leave
and
inc
dec
and
cmpsl
lods
out
inc
out
dec
jns
bound
inc
dec
jae
adc
add
mov
mov
or
inc
cmp
and
imul
pop
pusha
mov
inc
push
cmp
cmpsl
ret
nop
loope
and
hlt
outsb
mov
sarb
ds
test
add
cmp
rorb
cltd
repz
outsl
addb
mov
inc
or
sub
push
dec
jle
ret
dec
mov
outsl
cmp
lcall
xchg
sti
int
sub
pop
fldenv
sub
push
add
mov
cmp
and
or
pop
sarb
xor
mov
mov
sahf
in
lds
ja
cs
push
sahf
popa
stos
mov
mov
mov
movsb
adc
jmp
aad
add
sahf
out
xchg
fmull
cmp
ja
mov
mov
dec
cld
mov
in
into
mov
in
ret
or
insb
dec
inc
pop
aaa
lcall
out
popa
shlb
jmp
jg
add
lahf
inc
or
addr16
call
mov
sub
std
sbb
stc
popf
andb
popf
dec
out
sub
faddl
andl
xor
ljmp
outsl
mov
icebp
pop
aad
push
test
mov
jo
insl
push
add
add
cmpsl
jns
mov
mov
cmc
sbb
movsb
inc
jno
jne
fnstenv
stc
lds
cs
mov
mov
cmc
mov
jge
lret
fcomi
dec
inc
and
icebp
and
in
xchg
xorl
mov
ds
stc
jg
lock
add
loop
enter
icebp
add
addr16
sbb
loop
cmpsb
sbb
testb
push
sbb
jbe
and
data16
mov
rcr
push
mov
jb
scas
cmpsl
add
push
jbe
lcall
out
push
fbld
rorb
xchg
xor
mov
in
dec
leave
cmp
rorl
xor
xor
add
mov
lods
stos
xchg
cmp
mov
sub
jo
and
jp
pop
testl
jmp
aam
xchg
cmc
loop
scas
aaa
add
cmpsb
mov
mov
mov
out
in
test
cmp
and
cmp
fmuls
loop
and
shlb
std
pop
push
cmpsb
sbb
xchg
insw
mov
leave
jecxz
iret
pop
ss
bound
cmp
sti
xchg
ficompl
js
iret
cltd
inc
xchg
stc
add
inc
xchg
arpl
hlt
sbb
aad
lock
push
adc
xchg
push
les
adc
lds
testl
decb
orl
testb
stos
xorb
lea
or
fsubs
jecxz
aaa
ret
lretw
jns
xor
inc
xchg
sbb
pop
lahf
out
scas
inc
dec
iret
mov
sub
push
mov
in
cwtl
leave
push
mov
pop
scas
jle
sbb
sti
pop
mov
inc
enter
cmp
out
xchg
xlat
or
jae
sub
mov
add
dec
mov
pop
sub
sbb
pop
jns
dec
decb
enter
repnz
xchg
out
xor
aad
and
fnstsw
jg
aas
push
test
push
bound
push
fnstenv
les
or
mov
sbb
fidivl
std
andb
jmp
dec
inc
mov
stc
jno
das
inc
mov
mov
insb
or
neg
data16
pop
stc
pop
repnz
xor
xchg
popa
icebp
into
int3
pop
xor
jae
and
movsl
lcall
push
roll
iret
test
push
scas
or
mov
es
or
loop
pop
cmp
arpl
scas
les
mov
xchg
mov
mov
add
sub
dec
dec
ret
pop
fs
mov
stc
add
jne
push
adc
mov
push
or
sbb
mov
mov
jbe
cmp
push
and
sub
out
mov
ljmp
cmp
cld
call
sbb
and
in
mov
xchg
push
jae
add
mov
pop
popf
and
adc
xchg
cmp
pusha
dec
icebp
lock
iret
inc
in
mov
or
cmp
cld
fsts
scas
xor
movsb
inc
in
pop
dec
mov
outsb
out
fstps
jge
adc
insb
iret
adc
ss
or
daa
pop
mov
in
pop
xchg
push
xchg
daa
mov
push
lods
add
mov
jecxz
jg
cmp
or
shrb
cmc
adc
dec
adc
xor
call
sub
push
lret
sbb
les
outsb
lahf
jns
xor
fldenv
xchg
shl
mov
les
and
hlt
add
and
jne
fwait
pop
enter
dec
lcall
out
test
ds
jmp
fnstenv
sub
xor
inc
rclb
inc
das
push
sub
push
test
cld
or
sbb
pop
gs
movsb
sbb
hlt
int3
sar
mov
inc
bound
lcall
outsb
jae
inc
orb
xorl
sbb
mov
insl
jns
int
pop
pop
and
fs
testb
and
aaa
aas
dec
jo
jae
ja
and
mov
inc
cmpsl
test
repnz
ret
and
push
push
adc
ret
lds
add
test
test
add
jb
inc
mov
aad
add
xchg
in
mov
fndisi(8087
cmpsb
enter
stc
fnstsw
lahf
or
sti
ds
or
lods
push
testl
cld
sub
push
pop
les
cmp
push
fsubrp
mov
aaa
fcomps
pop
mov
and
pop
push
sub
lds
xchg
mov
pop
pusha
pusha
or
subl
mov
fs
shrb
daa
xor
popf
xor
pop
lahf
xor
fsubrs
lods
jno
lcall
add
pop
jb
mov
sub
je
inc
repnz
addr16
and
push
imul
into
shlb
mov
mov
lds
movsl
mov
inc
jnp
inc
push
jge
lret
ffree
arpl
pop
add
movsb
adc
popf
test
data16
leave
xor
inc
sbb
adc
sub
jle
jno
icebp
arpl
sub
mov
adc
stc
rclb
fisubrl
into
je
xchg
in
into
outsl
lcall
and
push
mov
mov
clc
push
les
das
adc
imul
cmpsb
cmp
xchg
mov
mov
sub
loop
bndldx
add
mov
popf
lock
in
loope
mov
jmp
out
shll
repz
and
cld
call
pop
mov
insl
add
js
jle
add
or
push
fidivl
sub
cs
push
repnz
fldt
test
outsl
jg
icebp
loope
fnstcw
jge
dec
pop
push
in
dec
mov
out
addr16
mov
pop
mov
cmp
xor
add
fcmovnu
outsl
icebp
movl
jp
stos
pusha
cmp
clc
adc
fdivl
or
cmp
inc
jo
fsubs
mov
jns
or
stos
sub
sbb
inc
jno
int3
sbb
repnz
aas
sub
jle
in
cmp
and
pop
sti
aas
mov
inc
or
sub
mov
shlb
mov
sahf
scas
and
push
test
pushf
jnp
lds
xor
inc
xchg
adc
xchg
sub
std
jg
mov
pusha
mov
xchg
sbb
xor
sbb
mov
cmp
lds
sub
imul
dec
andl
movsb
fs
aas
xchg
adc
mov
mov
or
sahf
rcll
dec
sbb
mov
shll
js
shl
xchg
cmc
cmp
popa
push
lret
dec
lret
or
or
jbe
cli
xorb
pushf
lret
out
lods
mov
xor
das
push
push
pop
sbb
jle
mov
repz
xlat
add
jle
push
xchg
push
pop
mov
cwtl
jae
xor
test
and
jmp
push
add
sub
call
test
mov
ds
or
mov
sti
sub
xchg
xor
and
bound
xchg
sti
daa
mov
mov
pop
js
adc
mov
pop
movsl
add
push
mov
shll
imul
fldt
les
mov
andl
or
inc
enter
fisubrl
mov
pop
lret
test
mov
lahf
xor
jb
js
les
mov
mov
fsts
stc
daa
sub
arpl
rcrb
mov
cld
pop
fnstsw
sub
gs
cmp
aad
jecxz
aad
push
jno
or
xor
cmp
ja
adc
test
outsl
leave
fld
sbb
je
dec
inc
out
into
in
in
out
stc
push
in
cs
pusha
xlat
bound
out
jns
std
orl
pop
mov
movsb
mov
mov
or
int3
xor
cmp
mov
iret
push
clc
nop
and
dec
add
stos
into
push
fcomip
out
subl
or
dec
loop
adc
sbb
cmpsb
add
fdiv
mov
dec
cld
push
loope
aam
or
mov
adc
pop
addr16
sbb
adc
movsb
xor
and
inc
insl
arpl
scas
add
adc
daa
push
lea
cld
sub
jl
add
xor
cltd
in
addl
dec
or
repnz
lock
iret
mov
dec
iret
jecxz
out
mov
dec
push
jge
mov
inc
inc
inc
mov
xchg
pop
mov
cmp
adc
bound
add
in
fldt
sub
dec
and
fs
inc
lahf
cwtl
jg
mov
jmp
lahf
mov
mov
out
call
cmp
xchg
popl
add
stos
lret
cmc
xorl
and
addr16
lcall
shll
mov
dec
je
ss
xchg
jno
push
xchg
push
and
bound
daa
adc
popl
push
cmp
outsl
pop
stc
and
lods
mov
cltd
mov
cltd
shr
and
jmp
push
fdivrs
int3
fbstp
out
and
dec
mov
or
dec
xchg
sbb
push
stc
inc
push
xchg
fistps
add
js
fldenv
xor
and
dec
std
imul
jmp
push
jb
sbb
in
sbb
jmp
in
je
sub
push
pop
adc
dec
in
xor
jno
lret
sub
sti
ret
fbld
in
stos
jmp
inc
ss
pusha
outsb
sub
pushf
fisubs
mov
adc
mov
mov
cs
outsb
scas
cmp
lods
mov
leave
mov
adcb
or
fnstenv
xlat
or
push
scas
ja
test
mov
adc
mov
test
cmp
test
in
mov
pop
ror
and
je
outsb
mov
adc
arpl
add
sbb
mul
and
cmpsb
movsl
inc
outsl
lock
sbbb
dec
pop
mov
and
fiaddl
xchg
mov
push
jp
push
cmp
ret
call
fisttpll
ss
jge
and
sub
jle
dec
cld
pop
xor
fdivs
fimuls
push
sbb
repz
pusha
loope
add
jb
lret
clc
pop
sbb
testb
jne
stos
add
ss
mov
das
pop
mov
fidivl
pop
aaa
sub
cmpsb
mov
sbb
arpl
xor
sti
xchg
sahf
call
adc
mov
aam
insl
mov
leave
test
mov
sbb
je
cwtl
js
sub
repnz
sub
inc
push
push
lcall
lret
popf
push
insl
lret
mov
hlt
xchg
push
mov
or
nop
inc
sub
or
or
in
jnp
loope
jo
in
jns
or
adc
push
in
rcll
xor
test
sti
rcl
xor
or
inc
inc
in
xchg
dec
jecxz
adc
imul
dec
xchg
jae
rorl
outsb
push
or
xchg
adc
pop
xchg
movsl
je
inc
inc
repnz
xor
fidivrl
mov
mov
addb
push
inc
push
inc
jle
mov
jp
lods
add
adc
fstpl
xlat
shr
out
call
pop
cwtl
mov
lret
btr
inc
dec
dec
into
xlat
ja
push
cmp
and
xchg
mov
popaw
iret
add
push
push
lods
insb
loopne
stos
dec
cmp
cld
loopne
adc
pop
jne
stos
addr16
adc
lcall
aad
stos
dec
int
repz
cld
sarl
ss
mov
or
and
in
cmp
xchg
sub
icebp
stos
and
es
jnp
pop
in
push
ss
out
mov
push
mov
lcall
outsb
xchg
rol
std
or
dec
sahf
add
shll
in
or
or
sahf
jno
sbbl
in
sub
and
and
cmpl
std
inc
dec
xchg
pop
aam
pop
push
and
fildll
jmp
jbe
scas
add
xor
inc
adc
jne
jb
pop
dec
push
mul
int3
inc
mov
mov
xchg
out
imul
daa
push
stc
mov
jnp
lret
cmp
dec
cmp
sbb
add
mov
and
mov
mov
fdiv
sbb
test
fmull
jg
mov
daa
xchg
and
flds
push
xchg
cs
outsb
mull
loope
xchg
xor
jno
sbb
mov
fsubrp
aam
scas
xchg
mov
outsl
pop
ret
xchg
jb
sahf
pusha
out
dec
decl
and
add
inc
or
jns
sub
jle
ja
jl
fildll
push
jl
shlb
sbb
cmp
cld
xchg
call
shll
dec
fmull
insl
in
xchg
mov
dec
xor
shlb
pop
adc
adc
xchg
mov
inc
cli
sbb
pop
inc
mov
out
inc
mov
popa
in
xchg
jns
popf
roll
out
push
add
das
inc
adc
fisubrs
stos
adc
push
and
cwtl
xor
and
addr16
das
ror
test
and
in
or
pop
dec
lea
fildll
xchg
pop
icebp
test
xor
stos
mov
insl
testb
or
mov
lods
xchg
jae
outsb
movq
jl
fidivrs
cmc
mov
jns
lods
mov
adc
add
jno
hlt
loop
loope
jne
sbb
and
and
sbb
mov
into
ror
gs
mov
mov
xor
adc
in
insb
cli
pop
js
mov
push
and
pop
xchg
adc
dec
and
mov
shlb
loop
addr16
sub
mov
shlb
jecxz
mov
pop
add
adc
push
aam
adc
out
idivl
movsb
lock
imul
sahf
mov
add
push
sbb
fnstenv
inc
loope
inc
ficompl
xchg
jle
movsl
xchg
mov
mov
sbb
push
icebp
mov
cwtl
inc
or
mov
jmp
addr16
sbb
fsub
les
jo
fstl
inc
jnp
cltd
out
jmp
and
sbb
push
pop
cmpl
mov
pop
loop
cmp
dec
icebp
xor
sub
dec
clc
sti
cmp
cwtl
jne
rorl
int
push
add
mov
test
shll
icebp
cmp
call
or
movsb
arpl
ss
or
xor
scas
fidivrl
es
mov
shrl
cmc
popa
std
push
dec
mov
cmpsb
cs
icebp
scas
lods
adc
stos
leave
pop
in
imul
popa
and
mov
orb
pop
add
dec
adc
xchg
xchg
jne
sbb
daa
cmc
fdivl
mov
pop
rorb
xor
xor
inc
xor
mov
adc
sbb
push
dec
push
push
jmp
push
adc
push
pop
insl
adcl
cs
test
push
cmpsb
or
cli
stc
sub
jno
mov
mov
or
push
and
jl
scas
push
imul
pusha
dec
test
xchg
ja
xlat
inc
mov
adc
cmp
xlat
rcr
lea
mov
test
xchg
pop
adc
andb
mov
hlt
inc
insb
faddp
fidivl
mov
cmp
push
gs
insl
jae
out
pop
dec
push
mov
sti
pop
inc
scas
xor
insb
push
mov
repz
dec
sub
pop
imul
push
mov
adc
sahf
xchg
mov
adc
loop
outsl
stos
insb
push
shlb
jne
sbb
fistpll
test
jae
stc
cmpsl
mov
insb
call
xchg
shrb
push
mov
popl
and
mov
dec
hlt
xor
fidivrs
adc
shlb
loopne
mov
pop
xor
out
and
or
cmp
lcall
pop
push
pushf
fsubs
push
decl
fs
int3
sti
cwtl
popa
add
pop
push
dec
ret
jg
mov
es
push
push
hlt
xor
div
nop
mov
fistl
cmp
or
and
test
lods
out
cmpb
nop
sbb
cmp
sub
ss
sub
add
and
test
nop
test
inc
dec
pop
ljmp
mov
and
test
cmp
lcall
int
scas
add
ja
aam
mov
leave
into
rcrb
or
popa
lret
cmp
shll
shl
gs
popa
in
push
les
fidivs
int
mov
stos
jno
push
push
and
cmpsl
js
dec
inc
and
jbe,pt
mov
test
aam
push
cmp
jb
inc
xchg
mov
out
sbb
xchg
js
out
jle
int3
lods
mov
stc
js
xor
in
out
rcl
leave
aaa
push
test
xlat
add
cli
add
rol
cmp
in
xchg
cwtl
lret
jo
shrl
inc
mov
push
pop
shll
rcrb
insl
cmp
xor
cmp
adc
fistl
addr16
push
mov
mov
addl
add
pop
std
pop
int3
xchg
mov
jb
push
mov
push
mov
jne
lea
dec
insb
push
pop
sub
dec
notl
andl
mov
mov
lret
jo
adc
hlt
enter
fcoml
nop
lahf
push
les
sub
cmp
mov
popf
sub
js
stc
push
sbb
push
in
push
and
xor
adc
icebp
mov
xor
in
sbb
fnstsw
pop
mov
pusha
lds
mov
sbb
or
movb
fninit
cmp
stc
or
dec
movhps
popa
or
mov
pop
shrb
mov
add
fisubl
pop
out
push
ss
xchg
push
jecxz
mov
lret
sub
ja
shrl
dec
adc
xchg
out
xchg
dec
mov
outsl
inc
mov
cmp
scas
push
jo
rolb
pushf
mov
fucom
sub
adc
mov
scas
xchg
enter
dec
imul
sbbl
sub
das
pop
aad
xor
mov
pushf
out
xchg
xchg
test
add
or
out
add
and
xchg
aaa
sub
stc
add
enter
rcrl
jnp
pop
ret
mov
aam
dec
cmp
add
movsl
push
xchg
dec
mov
xor
das
pushf
cltd
push
cli
cmpsb
call
jp
inc
movsl
adc
cmp
pop
ljmp
sub
test
jmp
arpl
pusha
pushf
rorl
je
push
dec
pusha
es
sub
mov
adc
frstor
iret
lcall
sub
notl
pop
fldt
ret
ljmp
imul
push
test
loop
jle
gs
pop
andb
inc
dec
jp
push
pop
dec
push
pushf
push
jp
push
pop
mov
test
lret
data16
lock
imul
or
aad
lock
add
lret
sub
pop
sbb
mov
or
daa
repnz
fmuls
arpl
aad
stos
test
test
mov
pop
mov
mov
in
mov
jge
mov
lcall
and
and
data16
dec
xchg
cmp
jle
xor
gs
mov
imul
inc
femms
pop
xlat
jnp
test
or
out
jbe
xchg
sahf
scas
stc
sahf
sbb
lock
aad
js
mov
inc
dec
xor
mov
pop
push
sti
or
jb
jg
or
add
or
add
in
test
sbb
or
cs
xchg
mov
push
fstpt
xchg
in
mov
lea
repz
jge
ljmp
ljmp
cltd
movsb
push
leave
das
jo
fmul
xchg
orl
jmp
mov
dec
dec
dec
mov
nop
adc
pop
pop
hlt
test
jle
popl
call
icebp
or
xchg
aaa
cs
mov
pop
adc
iret
rcl
cmpsb
fisubl
inc
outsl
add
mov
adc
and
push
das
mov
adc
jno
dec
push
mov
xchg
arpl
xchg
inc
push
lods
jae
add
mov
pop
bound
cli
outsb
xchg
pop
inc
mov
jbe
aad
lea
mov
stos
sti
aas
adc
ja
mov
mov
daa
sarb
cmp
mov
adc
mov
push
shrl
xorb
pop
dec
out
dec
push
xor
jp
loope
mov
sub
mov
mov
mov
add
ret
cmp
lret
icebp
mov
xchg
dec
lea
aas
mov
lea
push
push
add
cmp
jge
add
dec
jb
mov
pop
push
mov
pusha
dec
cmp
loop
mov
movaps
ret
pop
sahf
xchg
fistpl
pop
and
mov
dec
fisttps
out
mulb
orb
mulb
cmpsl
and
xor
sub
inc
or
and
call
inc
cmp
push
push
aas
dec
repnz
lcall
mov
and
cmpb
jbe
imul
jne
insb
jle
int
fmulp
mov
cmpsl
and
adc
mov
aaa
xor
fists
movsb
xor
pop
xchg
or
unpckhps
popa
jmp
fcoml
sbb
fcoml
ds
rorb
shl
mov
adc
fwait
aaa
mov
or
push
stos
scas
mov
aam
pushf
sub
hlt
jle
mov
fwait
lock
lds
lret
jnp
dec
cmp
in
out
mov
push
sbb
dec
enter
push
addb
mov
push
dec
mov
arpl
pop
xchg
das
inc
jne
je
mov
cmp
call
sahf
out
rorl
lods
xchg
inc
ljmp
xchg
xchg
aaa
cwtl
jns
pop
je
inc
fdecstp
mov
daa
aam
dec
outsl
xchg
inc
fmuls
das
mov
testl
or
mov
in
sbb
sbb
test
adc
pusha
into
mov
out
fstps
aas
ret
scas
xchg
dec
xchg
jl
push
pop
pop
mov
and
ds
add
das
adc
sti
sti
mov
adc
xchg
jge
jg
test
jmp
dec
adc
inc
out
fstpt
dec
push
into
mov
stc
mov
adc
enter
or
lods
movsb
cmp
in
int
jb
in
mov
pop
sbb
xchg
sub
pminsw
fsubl
cmp
stos
scas
mov
and
jo
outsb
add
iret
cmpsl
aam
mov
gs
or
data16
ja
pop
mov
cmp
div
jns
xchg
hlt
xor
out
repz
popa
insb
fidivs
test
xor
shl
mov
pop
in
lods
mov
dec
or
test
dec
jp
repz
sbb
mov
push
push
cmp
jb
jb
shrb
mov
imul
cmp
test
mov
int
and
mov
sub
jb
xor
daa
fisubl
loop
pop
push
xor
popf
jo
lea
popf
repnz
rcll
aam
shrb
enter
aad
call
inc
sbb
push
or
xchg
repnz
in
dec
inc
push
push
pop
mov
arpl
xor
ljmp
inc
stos
mov
lcall
mov
out
add
int
fildll
mov
or
in
xchg
mov
or
jge
and
inc
sub
jmp
mov
fwait
in
icebp
dec
add
cli
dec
enter
sbb
rcll
shl
mov
jg
sbb
iret
loopne
jb
std
outsl
mov
dec
dec
or
insl
pop
sbb
push
adc
jb
or
dec
fwait
mov
fidivrl
cmpsl
xor
xchg
cmpsb
test
loopne
jae
rep
sar
cmp
cmp
in
inc
dec
shll
jmp
sub
mov
and
iret
mov
inc
or
orb
pop
sub
pop
repz
adc
ss
popa
dec
testb
cld
ljmp
incl
add
push
fcmovb
outsb
push
mov
add
jns
pop
sub
shll
roll
sbb
xor
jmp
xchg
push
mov
pop
filds
sbb
inc
sub
outsl
xchg
aad
dec
cmpsl
xchg
icebp
and
dec
adc
cltd
jae
jle
int3
dec
enter
in
scas
in
pusha
lock
stos
push
aas
cmp
into
test
std
mov
stos
shlb
pop
inc
push
data16
inc
inc
cmp
scas
mov
inc
ret
adc
push
loopne
adc
push
iret
loop
lcall
mov
test
pushf
mov
xchg
sub
push
outsb
add
sub
adc
jno
and
test
push
pushf
pop
out
daa
ds
call
negl
movsl
jecxz
inc
cwtl
mov
mov
outsb
jbe
push
sub
call
repz
xchg
std
jg
ret
xor
nop
js
insb
xor
lcall
imulb
xlat
or
xchg
js
pop
addr16
ret
imul
out
cmp
push
mov
jg
push
xor
test
lahf
nop
mov
loop
mov
jo
cmpsb
decb
stos
les
inc
sbb
inc
mov
xor
push
xchg
adc
mov
mov
inc
add
pop
jne
mov
dec
and
sub
mov
pop
adc
cwtl
int3
test
insl
adc
jmp
les
mov
fdivl
ret
adc
xchg
sbb
cpuid
mov
mov
xchg
loopne
inc
cli
les
sarl
aam
insl
mov
inc
mov
xchg
mov
int
mov
andb
js
lret
mov
lret
outsl
lahf
pop
and
rcrl
lock
add
pop
repz
stos
sbb
fistps
cmp
lds
aaa
test
iret
push
xchg
mov
dec
and
lcall
mov
inc
xor
repz
loop
jae
pop
add
cmp
and
mov
xor
mov
fmull
xor
or
push
pop
pushf
jae
jl
iret
das
mov
pminub
aam
rcll
push
pop
push
and
ljmp
test
pop
mov
push
push
sbb
movsb
adc
pop
lds
xor
adc
daa
dec
test
movsb
jmp
stos
pop
lret
push
mov
sbb
rcr
lock
test
movsb
fildl
add
inc
add
sbb
or
push
pushf
std
call
xchg
cmp
mov
or
push
mov
mov
repnz
mov
mov
les
into
push
cmp
jnp
sbb
push
scas
lods
inc
mov
sub
and
je
daa
sbb
sbb
cltd
add
loopne
stos
pop
mov
imul
lahf
pusha
pusha
mov
cltd
int
mov
inc
out
push
andb
and
or
ds
sub
jo
sti
lahf
fisubs
adc
es
mov
movb
cmc
cmp
jmp
inc
or
mov
xor
mov
push
sbb
xchg
and
lss
or
stc
fdivl
mov
sti
aas
dec
cmp
push
outsb
pop
ficoms
mov
es
adc
dec
addr16
test
bnd
xchg
and
mov
xchg
jl
repnz
xor
icebp
xlat
jne
int
mov
int
out
cli
aad
pop
pop
fdivrl
outsl
xor
rorb
inc
mov
jae
int
mov
add
add
loope
mov
mov
cmp
xchg
xor
arpl
mov
scas
js
cmpsb
lods
dec
mov
or
mov
adc
xor
push
incl
les
sbb
adc
xor
inc
inc
lock
shlb
fsubrl
shll
outsl
push
inc
fistl
jmp
add
orl
sub
or
inc
jmp
aaa
or
popf
pop
nop
push
push
fsub
dec
mov
and
cmp
frstor
in
daa
pushf
cmpsb
lsl
or
mov
stos
stos
pushf
std
fdivrs
inc
cmp
lea
cmp
fildll
pop
stos
popa
or
stos
clc
adc
sbbb
negb
mov
in
iret
cmc
test
mov
pop
mov
fadd
pop
lahf
loope
xlat
jl
or
int3
je
push
ss
xor
scas
dec
sbb
mov
clc
ret
sub
hlt
and
lea
add
ret
cmp
push
scas
mov
inc
stc
iret
popw
cmp
adc
fdivrs
push
or
les
les
jb
xchg
repz
sbb
nop
push
mov
inc
mov
cld
jecxz
push
enter
les
jle
add
stos
or
loope
ret
ret
ret
dec
fadds
sti
mov
mov
inc
inc
jb
iret
push
or
mov
clc
and
mov
insb
insb
cld
scas
inc
mov
nop
push
cmp
dec
push
sub
ficoms
bound
xor
or
push
dec
faddl
mov
imul
lods
in
pop
mov
pop
mov
push
mov
push
xlat
test
inc
dec
cli
sbb
add
pop
jg
testl
ja
lea
aas
repz
fstpt
xor
or
pop
rcll
sbb
sbb
popf
xchg
inc
pop
stos
cld
lret
dec
xor
out
shll
hlt
mov
xchg
add
push
mov
mov
pop
sbb
mov
ret
stos
cmc
test
sub
test
call
pop
mov
mov
andb
pop
jno
or
stos
inc
out
pop
lret
orl
stos
mov
add
shll
mov
popf
push
or
iret
pop
dec
dec
add
aas
jnp,pt
push
jl
mov
or
das
loope
int
fs
jae
pop
mov
push
sbb
insl
negb
or
lcall
jno
inc
fstpl
es
mov
out
jecxz
lock
insl
aam
movsb
addb
imul
lahf
jns
cmpsl
in
inc
mov
clc
into
outsb
loope
ja
and
pushf
outsb
lret
pop
cmp
jb
sbb
enter
pop
mov
mov
das
sub
ds
incb
pop
in
xor
inc
and
insb
int
mov
mov
inc
outsb
aad
or
pop
push
lods
cwtl
loopne
fildll
jns
xchg
andl
rolb
aam
pushf
lds
xchg
push
jns
insb
sub
leave
ljmp
push
test
pusha
ss
rolb
push
jae
lock
sbb
aam
mov
xor
stc
movb
jp
cmp
and
ficomps
dec
xchg
dec
add
imulb
ret
pop
fnstsw
jbe
pop
jg
push
fs
pop
mov
cmpsl
into
push
wbinvd
sbb
jnp
add
int3
aas
rolb
repz
jb
test
cmp
bound
mov
les
insb
xchg
test
adc
mov
stos
mov
ffreep
or
lods
jns
dec
sbb
cmpl
cmp
loopne
dec
fxch
xchg
fidivs
mov
test
jge
loopne
mov
lret
cltd
mov
fcomps
ja
jle
sub
sbb
mov
cmp
add
test
sbb
and
dec
push
notb
xor
ds
gs
sahf
orb
mov
addr16
and
test
mov
mov
mov
cmp
movsl
mov
xchg
inc
jge
pop
ret
jl
outsl
sbb
inc
stc
sub
arpl
mov
push
adcl
imul
mov
mov
and
mov
inc
orl
pop
and
ss
data16
rcrl
xchg
sti
mov
mov
mov
sbb
fsts
inc
out
or
insb
xor
fldl
mov
cmp
insl
cld
outsl
mov
aam
cmp
sub
dec
stos
jecxz
out
cmp
call
pop
clc
push
dec
sbb
stos
push
stc
sbb
cli
jl
arpl
inc
cmp
and
xchg
negb
push
aad
fcoml
inc
scas
popa
daa
orl
xor
int3
sub
into
dec
data16
pop
arpl
mov
lret
jecxz
repz
inc
xchg
lret
aas
cmp
icebp
cmp
jo
mov
pop
or
pop
sub
jns
dec
mov
cli
xchg
andb
and
push
dec
mov
push
sbb
jl
test
mov
cmp
ss
mov
fmull
mov
or
pop
push
push
arpl
int
sahf
jge
outsl
jecxz
fmuls
mov
inc
fcoms
insb
subl
inc
fsubl
cltd
punpckhbw
lea
hlt
sub
pusha
daa
sub
dec
icebp
xchg
cmp
pop
xchg
mov
fstl
icebp
xchg
push
sahf
pop
dec
push
lret
out
jnp
aam
incl
mov
push
in
dec
dec
mov
jbe
mov
xlat
pushf
repnz
push
scas
jb
iret
rol
jo
bound
push
jo
mov
inc
xor
fisttpl
push
sbb
imul
or
lock
push
xchg
sbb
test
xlat
cmpsb
in
inc
into
mov
ret
scas
fucomi
imull
xor
int
mov
jae
scas
mov
cmp
or
cs
lahf
loopne
inc
call
jl
xor
enter
in
xchg
xchg
lods
movl
lods
xor
adc
mov
pop
xor
adc
mov
jo
adc
testb
push
popa
repnz
adc
sub
xor
jbe
nop
mov
pop
insb
adc
pop
ficoms
call
out
and
out
xor
leave
repnz
pop
es
shrb
xchg
je
add
scas
xchg
lods
or
mov
pusha
in
jne
jne
ds
pusha
mov
je
sbb
fisttps
xchg
mov
int
add
loopne
out
xorb
lret
and
push
pop
jg
pop
leave
je
std
jmp
inc
add
lds
mov
jns
fldcw
fldl
jp
push
test
dec
pop
inc
repnz
dec
inc
mov
or
es
dec
pop
cmpsl
cwtl
inc
outsl
stos
loope
push
insl
stos
lret
pop
push
and
addb
loop
mov
inc
mov
lahf
cli
daa
mov
sub
mov
out
push
enter
push
dec
movsl
jb
sbb
sbb
adc
cld
inc
cmpsb
and
outsl
test
jecxz
mov
pusha
push
ss
lcall
filds
cmpb
inc
mov
gs
jo
pop
fstpt
and
lods
xchg
inc
pop
shll
jg
call
adc
movsl
adc
daa
cmp
fs
mov
aam
lcall
cmp
and
mov
movsl
adc
adc
js
nop
cs
sub
adc
repnz
testb
dec
cmp
push
dec
iret
int3
lock
mov
add
stos
pop
mov
aaa
hlt
fcoml
les
cs
shr
cld
loopne
pop
mov
je
mov
insb
filds
shll
adc
jmp
pop
dec
pop
fnstcw
push
loopne
push
dec
scas
lods
test
in
or
and
mov
cmpsl
push
jns
fldcw
in
daa
loope
out
ja
popf
pop
or
dec
jle
add
pop
jle
fildl
push
cltd
popa
pop
arpl
loop
shll
ret
or
pop
int
jne
jmp
shr
cltd
js
ret
dec
lret
adc
hlt
inc
sbb
mov
test
adc
pop
or
cmpsb
inc
inc
cltd
fcomp
and
xchg
insl
xchg
sbb
sbb
adc
pop
outsl
out
mov
shr
jnp
sar
cmp
lcall
mov
push
or
cli
push
add
mov
imul
mov
loopne
outsb
sahf
js
inc
scas
lcall
or
mov
cmp
shlb
shl
mov
xchg
adc
cmpsl
pop
loope
repz
sbb
xchg
xor
sahf
or
out
jmp
jge
int
mov
mov
sub
pop
mov
sub
dec
test
adc
add
jae
incl
in
jo
or
xchg
dec
jge
mov
loope
and
mull
dec
lea
vfmsub231sd
xor
jno
in
and
sar
jl
push
mov
sti
push
andl
in
out
call
cmpsl
xor
pop
inc
xchg
lret
pop
imul
shll
out
push
cwtl
mov
push
mov
jle
aaa
or
ret
cmp
xchg
lahf
sahf
push
sub
out
adcb
insl
loopne
adc
mov
xor
cmp
push
jl
mov
push
test
dec
outsb
push
mov
sbb
add
and
aaa
push
mov
int3
testl
push
scas
clc
sarb
nop
push
fsubrs
xchg
jns
movsb
mov
jg
out
sbb
jle
push
push
data16
jge
cmp
jle
pop
or
fwait
movsl
incl
sar
pop
divb
cmp
xorb
mov
xchg
mov
adc
xor
mov
adc
in
jno
dec
and
in
mov
sti
fst
add
and
int
xchg
hlt
and
xchg
fisttpll
mov
sti
dec
test
push
push
lret
out
adcb
dec
inc
mov
pusha
xchg
loop
push
add
mov
fs
rorb
pop
cmp
or
lds
outsl
mov
xchg
add
jno
test
inc
jge
add
rclb
arpl
inc
aad
pusha
sbb
sub
ljmp
and
xchg
inc
lret
lds
xor
pop
adc
mov
mov
gs
xchg
adc
push
sti
lcall
in
out
cmc
outsw
dec
out
jle
push
cmp
out
inc
lea
add
cmp
or
push
dec
mov
lcall
dec
decb
imul
inc
pop
fists
lret
movl
cmp
inc
jl
or
push
int3
sub
test
cli
dec
jg
test
and
and
adc
das
sub
pop
jmp
mov
cmp
cmp
push
sahf
adc
out
xlat
sti
jecxz
shrb
jl
test
inc
mov
dec
ljmp
push
mov
pusha
push
mov
test
es
mov
dec
movl
test
dec
in
aad
inc
mov
aaa
cs
and
jns
sbb
insb
or
jmp
push
pop
lahf
add
xchg
sbb
in
mov
or
cmpsb
pop
lret
pop
and
add
fisttpll
inc
jmp
andl
inc
pop
pop
jae
bound
int
adc
push
cmp
xor
das
cmp
cmp
mov
push
fisubrl
gs
out
decb
sub
cmc
xor
inc
out
xchg
pop
mov
xchg
dec
sub
mov
inc
sub
sub
mov
loopne
in
mov
sbb
mov
jmp
pop
out
sti
shll
dec
addl
jmp
push
loop
pop
pop
adc
dec
pop
loopne
popf
and
sbbl
jge
bound
pop
mov
mov
mov
cld
mov
in
hlt
retw
sub
pop
push
push
jnp
leave
subb
jle
xor
xor
mov
daa
sbb
outsl
das
xchg
dec
outsb
xchg
sbb
xchg
movsl
add
mov
sbb
cwtl
int
lds
and
dec
push
popf
mov
adc
rclb
mov
xor
sub
inc
add
imul
pop
mov
add
mov
lahf
stos
hlt
jmp
jg
repnz
icebp
xlat
jnp
add
dec
imul
gs
jo
dec
aam
aas
cmp
cmp
mov
dec
aas
sbb
inc
shlb
sbb
fstps
mov
sbb
adc
jbe
outsl
arpl
addr16
shrl
push
fcoml
dec
popf
mov
jno,pn
lock
sub
dec
aam
add
jmp
fmuls
and
inc
cmp
imul
and
xchg
xor
in
jbe
lock
notb
cmc
dec
or
sarb
push
stos
daa
mov
fsubs
loopne
ret
sbb
mov
jae
in
orb
in
fldenv
insl
lock
xor
sbb
repz
cwtl
jae
push
mov
push
lods
adc
gs
xchg
cmpsl
xor
ret
cvttps2pi
add
ljmp
rcrl
enter
cmp
pop
cli
or
rorb
pop
popa
lret
aas
mov
leave
decb
arpl
push
es
loope
popa
mov
rcr
dec
xchg
adc
filds
inc
jns
test
cmp
lods
mov
add
mov
pop
sub
out
fsubrl
or
sub
movsb
ds
jl
or
dec
jmp
ja
movsl
adc
data16
push
loopne
je
les
int3
mov
jae
popa
and
mov
shlb
movsl
add
xor
xchg
sbb
aas
and
in
aaa
stos
inc
out
jb
sbb
je
xorl
jo
into
orl
jmp
outsb
mov
rcrl
js
lds
popa
pusha
lds
addr16
bound
insl
cmp
adc
or
push
sbbl
aam
int3
addr16
jno
mov
shll
push
jg
repnz
cltd
loopne
inc
rcr
pushw
jp
fsub
rcrl
mov
jnp
popa
sbb
test
iret
xchg
xor
sub
lea
fucomp
mov
xor
pop
cmpsl
sub
inc
or
push
adc
shlb
in
pop
outsb
jne
or
push
mov
ds
outsl
test
pusha
mov
sub
mov
pop
in
inc
xchg
inc
sbb
pop
inc
xor
mov
stc
xorps
sbb
test
or
inc
or
cltd
scas
mov
fdivp
or
xchg
outsb
aas
js
das
mov
mov
dec
into
adc
sbbb
pop
xchg
sbb
jg
aam
aaa
in
movsb
or
adc
out
mov
cmpb
dec
inc
call
adc
xchg
mov
xchg
insb
mov
xchg
repnz
or
mov
ds
std
imul
fs
inc
call
jnp
and
add
pop
negl
stos
jmp
popf
repnz
sub
movsl
lds
xchg
jl
or
aas
dec
mov
mov
mov
mov
cmpsl
insl
test
ret
stos
jb
lea
pop
cld
cwtl
insb
add
bnd
addr16
addb
lods
jne
or
movsb
call
loope
dec
push
cmp
sbbl
sub
icebp
mov
cmpsb
lret
lret
cmp
jge
add
pusha
ret
scas
fisubrl
imul
imul
mov
xchg
dec
lea
push
cmp
push
std
xchg
sti
or
aam
and
jbe
pop
dec
clc
dec
xchg
xor
and
popa
push
icebp
cmp
mov
adc
scas
fcomps
dec
sbb
jae
xchg
adc
lods
jecxz
jbe
pop
fldt
push
fs
sbb
inc
push
dec
fiaddl
lods
pop
lods
push
lock
mov
pop
cmpsl
in
in
sarb
jne
in
cmp
sub
push
or
pop
repnz
push
pop
pop
pusha
push
imul
jmp
loopne
pusha
subl
cmc
mov
imulb
adc
lahf
mov
pop
push
es
xor
xor
adc
or
stos
out
sub
xor
inc
dec
pop
jmp
xor
mov
and
push
mov
pop
sti
jo
sbb
fnstenv
adc
adc
and
fisubl
push
dec
fmulp
fstpl
js
xchg
mov
loopne
pusha
mov
inc
or
mov
and
cld
push
fdiv
int3
loopne
addr16
in
into
cld
fistps
push
and
aam
sbb
sub
push
in
push
pop
mov
adc
adc
clc
std
repnz
sarl
adc
pop
adc
pop
jno
sbb
pop
mov
adc
shlb
call
outsb
jno
inc
jnp
sub
inc
sub
adc
ret
fsubp
inc
sbb
cmpsl
mov
imul
outsb
sbb
lods
push
rorb
js
repnz
xchg
pmuludq
xchg
je
sbb
or
jg
fcoms
mov
mov
mov
add
dec
mov
jg
cmp
repz
inc
clc
test
inc
lahf
bound
test
xchg
ds
cmpl
dec
inc
int
jle
mov
mov
les
mov
add
ljmp
sub
inc
mov
dec
inc
push
jg
ret
daa
in
leave
es
pop
jecxz
aaa
cmp
in
sbb
cmp
xor
inc
sahf
aam
bound
mov
dec
iret
jne
nop
mov
pop
imul
fwait
mov
cltd
rolb
std
ficompl
push
or
cmp
xor
mov
or
jg
adc
xchg
fwait
lds
cmp
jb
push
subl
inc
adc
mov
sub
js
and
imul
inc
xchg
and
loop
popf
out
sahf
jno
int
sbb
push
stos
adc
add
mov
dec
and
shlb
scas
add
aad
xor
jno
call
shll
lret
jnp
cmp
sahf
adc
dec
or
into
lcall
idivl
or
insb
inc
imull
or
jb
js
jo
xchg
sbb
dec
arpl
sahf
test
cmp
dec
or
sub
fcoms
arpl
scas
sbb
jmp
add
arpl
cmp
xchg
andl
sbb
jnp
push
pop
sbb
repz
insl
sete
sbb
adc
test
pop
pop
xchg
jg
mov
je
xor
mov
rcrl
hlt
iret
pop
inc
dec
je
and
mov
cmp
into
lds
dec
shlb
pop
add
mov
cmc
mov
nop
movaps
ja
shll
sub
xchg
call
push
mov
icebp
or
cmc
and
or
ds
mov
fadds
in
popf
sbb
push
cli
jle
fmull
xchg
cmp
ret
decb
lcall
sbb
imul
cmp
stc
in
lahf
roll
inc
xorb
push
lea
cmp
adc
movsb
popa
fstl
and
mov
xchg
pop
jno
pop
add
test
cli
loop
outsl
test
das
ljmp
mov
jg
int
int3
xlat
add
lods
adc
enter
ja
sbb
and
jg
clc
aam
lods
imul
push
xchg
xchg
aaa
push
scas
movsl
and
int
jg
xor
aaa
xchg
leave
das
mov
sub
scas
cs
fwait
shll
je
cltd
fsts
jnp
mov
stc
sub
push
rorb
inc
mov
or
mov
test
loope
push
cmp
or
jmp
punpcklwd
jns
mov
pop
imul
and
sbb
jmp
pop
push
lahf
test
loopne
call
mov
inc
sbb
out
sbb
and
aad
sbb
addr16
icebp
cs
or
pop
into
arpl
in
jno
inc
add
ret
popf
sbb
outsl
jno
hlt
pusha
or
lods
and
inc
dec
lock
ljmp
lahf
movsb
aad
cmp
xchg
iret
and
fisttpll
mov
ret
jb,pt
sub
mov
lea
stos
repz
inc
arpl
in
cltd
mov
lds
dec
negb
mov
shll
rolb
sbb
loopne
sahf
adc
dec
cmpsl
cmp
push
adc
test
lods
mov
mov
mov
pop
in
inc
and
pop
ljmp
jge
cmp
lret
or
mov
push
lahf
xorb
mov
push
aam
arpl
movsl
inc
mov
jne
fstpt
gs
je
pushf
fwait
sahf
into
jle
sub
cmpsl
insb
shr
pop
cmp
pop
ror
dec
push
fs
addr16
and
ja
xchg
xchg
sbb
jns
pushf
jns
enter
dec
negb
iret
inc
les
cmp
js
lea
imul
jle
rorb
pop
and
test
push
clc
pop
mov
out
mov
mov
imul
xchg
pop
jl
dec
in
pop
das
mov
clc
pop
pop
jbe
fdivl
xchg
mov
add
mov
enter
xchg
mov
insb
adc
sbb
add
xchg
adc
ljmp
sbb
out
inc
pop
mov
in
gs
aas
and
inc
xor
xchg
out
xlat
cli
push
sti
xor
inc
mov
mov
xor
std
xchg
cli
clc
cmp
adc
sub
pop
int3
lahf
aam
mov
repnz
es
pop
mov
and
jns
decl
enter
pop
out
jecxz
ljmp
adc
mov
xchg
fisttpl
push
mov
stos
stc
aas
xchg
or
mov
leave
pop
icebp
sti
pop
push
push
add
sub
pop
lea
rorl
cld
arpl
xchg
push
std
mov
pusha
test
test
cmpsb
int3
pop
addr16
and
and
clc
insb
mov
pop
loope
add
jnp
push
or
int3
xchg
mov
cmpsl
add
sub
ljmp
mov
mov
rorl
or
push
mov
dec
pop
mov
adc
inc
shl
pop
fs
cmc
pusha
rclb
xchg
or
test
mov
pushl
fabs
adc
int
and
push
inc
push
adc
mov
ss
leave
leave
add
sub
and
xlat
iret
lahf
add
or
js
jbe
arpl
dec
cmc
int3
sahf
add
into
mov
in
and
in
fisttpll
xchg
repnz
cld
dec
adc
sub
jbe
sub
lods
xchg
xlat
or
inc
out
stos
sbbb
aas
fidivrl
outsb
jmp
inc
jecxz
and
ret
push
adc
pop
pand
inc
adc
je
lcall
pop
adc
pop
jbe
xor
sbb
push
ret
or
lahf
fldl
mov
addr16
xchg
or
hlt
hlt
imul
lret
hlt
push
aam
pop
repnz
pop
mov
cld
xchg
stos
mov
dec
or
mov
fst
xor
inc
lock
cmp
stos
out
fimuls
addr16
test
jno
sub
mov
adc
int
mov
das
pushf
jno
mov
adc
in
call
rcrl
jl
jmp
aad
rclb
aad
pop
xor
jbe
stos
mov
aad
loop
test
xchg
pop
push
in
mov
mov
add
imul
fs
outsl
mov
es
aad
xor
addw
dec
xchg
lcall
aam
inc
mov
fdivp
paddb
inc
mov
cmp
jb
int
dec
jae
fstps
bound
stc
popa
xor
jb
cmpsl
adc
outsl
out
lahf
mov
lods
mov
dec
pop
lds
push
movsb
js
or
test
inc
xor
mov
insb
pop
xor
jge
loop
stos
xchg
dec
push
adc
push
in
iret
add
dec
jne
mov
lods
sub
push
cltd
leave
test
icebp
in
inc
push
mov
mov
outsl
push
jno
dec
das
test
mov
mov
outsb
mov
andb
sub
add
std
repz
subb
mov
aam
lds
cmovl
in
je
and
mov
enter
int3
push
cmp
hlt
movsb
cs
cmpsb
jl
or
pop
fstl
mov
mov
test
lock
fsubs
movsl
jo
mov
clc
jnp
mov
sub
inc
xor
loopne
mov
push
pop
rolb
mov
xchg
jnp
mov
mov
push
cwtl
add
sbb
into
cli
inc
adc
mov
aad
mov
out
pop
fwait
inc
cli
lret
scas
rcl
push
mov
das
cmp
mov
inc
hlt
test
or
jbe
pmulhw
icebp
mov
jmp
xchg
push
inc
jae
adc
jl
ret
mov
int
in
lods
fimuls
scas
adc
outsb
push
popf
arpl
cli
jnp
fisubrl
sti
jae
js
or
in
push
cltd
mov
negb
mov
lret
sbb
xor
xor
or
add
repz
jo
cmp
inc
popa
sahf
push
popf
loope
sti
movsl
sub
and
xor
repz
popa
mov
jmp
jle
mov
lahf
sarb
fsubrs
stc
push
xchg
frstor
add
js
mov
hlt
rclb
insl
jns
or
out
mov
aas
xor
mov
in
pop
loopne
inc
or
add
and
cwtl
adc
xor
cwtl
cmpsl
dec
xor
out
sbb
push
mov
popa
scas
xlat
test
or
je
mov
lret
pusha
inc
cs
mov
push
ret
fsubrl
mov
outsl
mov
cmp
into
insb
add
rcll
push
ja
jo
test
insb
divl
jge
pop
out
fistl
push
inc
lcall
cmpsb
xchg
pop
cwtl
sub
mov
sub
cmp
cmc
sub
cmp
mov
lcall
push
int
cwtl
dec
xor
mov
cmp
sub
jbe
fidivrl
pop
and
scas
call
or
push
leave
push
add
cld
jo
lods
vfrczpd
mov
fnstenv
fsubrs
mov
cmp
and
scas
ret
xchg
sbb
int3
inc
stos
out
adc
dec
ds
mov
ret
pusha
inc
fsubs
imull
cmpb
mov
xchg
icebp
out
xor
pop
inc
cmp
loope
aas
rcr
mov
subl
xor
jo
mov
fimull
bound
movsl
mov
sub
mov
sub
dec
test
pop
jno
scas
int3
sbb
inc
mov
loope
out
aad
cmpsb
cmp
mov
lcall
fldcw
lods
daa
mov
stc
inc
stos
or
jbe
fisttpl
push
fdivs
popf
add
push
sbb
arpl
xchg
xor
cmp
decl
das
xchg
shrb
icebp
in
pushf
stos
call
stos
test
sbb
jle
cmp
mov
jmp
ficomps
cs
xor
daa
ss
pop
and
stos
mov
or
ret
imul
rcrl
and
push
add
outsl
out
xchg
into
mov
or
and
adc
add
dec
movsb
js
sarl
adc
sbb
ret
pop
gs
fimuls
scas
jp
or
cmpb
test
repz
xor
loop
xchg
ret
or
stos
dec
insb
shrb
or
js
ret
scas
pop
and
pusha
jmp
jle
xchg
pop
mov
sub
sbb
fcomps
test
bound
sub
lock
dec
jmp
ljmp
xor
or
or
inc
pusha
xor
mov
sbb
or
pop
outsb
mov
aam
inc
lcall
pop
and
pop
stc
or
mov
popa
in
pop
push
int3
mov
insl
outsl
or
lret
shll
js
ss
or
clc
cmc
add
ja
pop
sbb
lods
xor
pop
dec
add
lock
ss
inc
push
cmp
in
out
inc
mov
cwtl
test
cmp
orl
mov
ret
inc
int3
mov
sbb
nop
lods
aaa
dec
scas
xor
imul
xchg
lds
sub
repz
dec
subl
movsl
mov
xor
imul
jb
inc
dec
lret
push
loop
jne
stc
mov
cmc
ja
ss
mov
push
mov
aas
xchg
insl
repnz
frstor
stos
jle
subb
nop
shl
jb
mov
xchg
mov
sbb
mov
and
mov
dec
push
dec
fwait
jo
mov
lret
fidivs
mov
or
lret
cltd
idivl
popa
out
cmp
cmp
add
cmc
sbb
add
fstp
out
fucomip
iret
xor
jae
mov
ds
aaa
or
call
shrl
out
push
push
xchg
loopne
das
negl
or
insl
movaps
mov
les
inc
jmp
or
fucomi
inc
xchg
jae
ret
or
mov
call
mov
aas
inc
das
fiaddl
ret
gs
jle
jbe
das
cmp
mov
cmc
xchg
cmp
xchg
aam
mov
outsl
ss
jnp
out
aad
gs
inc
adc
sbb
aas
out
mov
aam
bound
mov
inc
sbb
pop
nop
iret
lods
or
pop
fucom
rclb
or
rep
lea
sbb
out
and
jns
cmp
outsl
jnp
inc
mov
shl
out
mov
ss
and
add
in
int3
mov
jbe
mov
loopne
int
push
push
jp
mov
mov
push
ss
sbb
cld
jno
lds
add
jb
or
mov
cmpsb
nop
cmp
pop
orl
out
or
pop
fistps
lcall
mov
pusha
jns
mov
mov
or
or
loop
xchg
sub
ja
dec
inc
sbb
int
addl
aam
jbe
outsl
xor
dec
cmpsl
fwait
add
mov
stos
pop
add
xor
ss
cmp
dec
lock
dec
dec
std
mov
jge
sbbb
sub
movsl
push
call
in
fldl
addr16
aaa
cmp
fnstsw
inc
inc
push
dec
rcl
sbb
or
push
outsl
adc
movsl
test
xchg
fidivrl
xchg
sub
inc
add
add
inc
mov
test
inc
xor
loope
shlb
cwtl
test
lret
jecxz
pop
bound
mov
push
aas
pop
push
xor
hlt
hlt
xor
jae
jnp
push
jp
js
mov
dec
jb
jl
pop
nop
fwait
xor
pop
ss
or
push
loop
addb
inc
cmpsb
or
jecxz
push
pushf
rcl
scas
or
cmp
jno
out
scas
xor
jo
ljmp
int3
loopne
rcrl
into
gs
ss
add
inc
mov
sub
mov
addr16
or
mov
push
imul
pop
out
ss
push
int
dec
sarl
dec
cmp
add
fs
xor
aas
faddl
cwtl
cltd
cmp
imul
clc
mov
aaa
mul
jp
inc
std
sub
push
jmp
dec
jo
dec
sbbl
outsb
loopne,pn
adc
out
cli
sbb
aam
xor
jg
imul
cwtl
mov
es
pop
inc
loope
xor
ret
sbb
int
push
or
sti
jle
mov
ret
add
shlb
push
mov
pop
or
test
test
leave
add
mov
push
push
in
pop
add
jae
add
jg
ja
xor
inc
jb
jb
loopne
mov
xor
adcl
sub
mov
mov
shrb
pop
pop
data16
aad
mov
cmp
call
std
pop
or
xchg
lock
jp
push
dec
sub
mov
cmc
into
jns
jge
dec
frstor
into
sbb
and
jns
rol
sub
andb
imul
push
mov
jmp
cmp
divb
stos
cltd
sub
fisubl
cs
sub
dec
fisttpl
adc
in
jnp
sub
imul
ljmp
ror
mov
movsl
pop
adc
shrb
negb
xor
mov
sbb
lods
sti
out
sbb
mov
ret
add
cli
push
or
dec
repnz
lahf
cmp
pop
sti
aam
repz
and
lea
cli
inc
xchg
movl
cmpsb
lret
sarl
shll
mov
and
ret
fdivl
jle
xchg
or
mov
lcall
inc
pushf
push
xor
or
pop
mov
xchg
jnp
xchg
repnz
icebp
sbb
mov
lods
into
xlat
aad
sbb
pop
xor
pop
shrl
lods
mov
loopne
mov
and
xor
pusha
lds
js
jmp
movsb
inc
repz
jns
fs
in
dec
push
loop
or
hlt
in
and
mov
or
test
jecxz
pushf
and
mov
mull
mov
mov
push
sahf
mov
les
mov
mov
mov
ror
jb
loop
pop
lds
cmpsb
or
push
pusha
adc
pop
push
lahf
lcall
je
mov
dec
push
out
je
mov
lock
pop
add
fwait
ljmp
cli
pusha
aas
mov
addr16
xor
xchg
es
gs
ss
pop
sub
mov
test
cmp
push
jnp
and
lcall
movsl
adc
mov
push
shlb
xchg
negl
cld
cmpsb
pop
dec
and
push
and
jns
xchg
sbb
cmp
dec
dec
daa
js
pop
daa
pop
clc
fadd
jg
insl
or
push
mov
inc
add
push
cmp
lods
adc
icebp
mov
and
rclb
and
inc
mov
jns
lret
jmp
jmp
sbb
mov
push
pop
aam
mov
pop
lahf
data16
xor
call
dec
jecxz
ljmp
mov
cmp
mov
dec
shrb
mov
dec
loope
push
in
pop
lahf
ret
sub
mov
insl
and
and
popf
push
mov
stos
shrb
scas
je
xchg
jae
aas
sub
ljmp
pusha
sbb
mov
xor
or
jns
push
movsl
insb
iret
cs
and
in
movsb
inc
xorb
jecxz
popf
pop
xchg
addl
aam
and
dec
rcll
inc
mov
out
nop
loope
ds
faddl
inc
scas
mov
xchg
stos
or
xchg
adc
sub
pop
xchg
push
fimuls
stos
add
ss
popf
icebp
fwait
pop
pop
pushf
mov
fcoms
and
aad
xor
mov
jne
mov
leave
sub
lods
xor
dec
or
mov
jecxz
loop
sub
mov
xor
mov
roll
inc
xor
jbe
mov
aam
div
pop
bound
mov
std
aaa
inc
jl
jl
dec
inc
insl
push
outsb
hlt
mov
repz
pop
sti
out
or
or
push
ja
mov
xor
add
insl
imul
and
mov
repz
stos
add
or
outsb
insb
ljmp
aam
jns
in
scas
sarb
pop
nop
push
loope
sar
sub
inc
jae
cmpsl
push
jbe
sbb
in
in
xchg
adc
pushf
shlb
mov
add
xor
xor
dec
in
incb
sbb
jb
aas
es
into
inc
inc
jns
leave
add
ret
lret
ljmp
cmpsb
movsb
push
mov
and
cwtl
inc
sbb
sbb
cld
add
add
enter
lret
or
movsb
adc
pushf
push
lods
lock
stos
lcall
and
fisubl
das
jge
xlat
repz
movsl
cmc
dec
pushf
repnz
mov
dec
jle
aas
adc
test
jb
push
pop
push
dec
dec
loop
adc
sbb
jns
cmp
sub
xor
lret
mov
mov
jae
imull
xorl
cli
cli
inc
push
lret
xchg
jmp
or
mulb
lahf
inc
in
sti
mov
xor
test
push
jbe
outsl
cmpl
lods
enter
lret
sbb
mov
iret
cmp
mov
mov
test
mov
xor
mov
imul
add
aas
push
ljmp
and
cmpl
subl
add
aam
xchg
mov
popa
push
jbe
inc
adc
or
mov
mov
or
and
jne
fisubl
addl
jae
test
inc
mov
add
mov
lahf
stos
mov
mov
test
xchg
or
mov
adcl
dec
iret
orl
cmc
jmp
lock
in
out
lea
test
lcall
lds
mov
dec
out
xchg
pop
cmpsb
mov
mov
dec
iret
sub
lcall
inc
jno
test
insl
or
xor
sub
mov
cmpsl
pop
push
cwtl
mov
or
lcall
mov
arpl
inc
shlb
add
dec
adc
mov
outsl
mov
fadds
jno
lahf
jecxz
lret
pop
pop
add
adc
inc
mov
iret
leave
ja
push
mov
or
mov
xor
js
lods
insb
stos
sarl
and
cmc
fmul
in
sbb
rorl
dec
iret
mov
xor
mov
mov
sbb
movsb
sbb
daa
es
add
movsb
cld
jne
sahf
xchg
mov
cld
insl
add
sub
daa
pop
mov
push
lock
test
or
and
jae
and
nop
mov
lahf
lcall
iret
cwtl
rorl
fstpl
std
testb
dec
mov
loopne
loop
and
add
jno
out
dec
mov
popf
or
inc
add
repnz
lahf
push
mov
mov
ss
cmp
mov
xchg
add
mov
add
dec
push
in
stos
sbb
loope
ja
btr
xor
or
mov
or
mull
sbb
in
mov
pop
and
push
or
sbb
fld1
mov
imul
push
pop
loope
cmp
and
mov
std
out
xlat
stos
push
inc
sub
lods
cmpsl
adc
sub
cli
sbb
or
jp
inc
mov
jg
cmpsl
mov
cmp
ficoms
lock
sub
notl
mov
inc
pop
leave
xchg
mov
adc
inc
icebp
ret
test
insb
jbe
cmp
aam
xor
fstl
repz
movsb
je
les
pop
jle
push
scas
daa
bound
les
cmp
ja
or
push
not
mov
out
xchg
add
gs
mov
negb
scas
loop
fwait
test
mov
mov
adc
mov
xor
loope
xchg
std
aaa
shll
pop
popa
jg
les
cmpsb
mov
and
add
push
arpl
pop
fwait
sbb
push
xchg
mov
and
inc
loope
rep
pop
jbe
or
pop
imul
and
in
cmp
mov
inc
inc
aad
pop
std
push
adc
pushf
imul
inc
outsb
mov
repnz
nopl
pop
jno
sarb
mov
sbbb
shr
pop
arpl
shlb
push
adcb
cli
lret
xlat
adc
iret
dec
in
and
sbb
dec
dec
sbb
xor
jns
or
pop
xor
in
or
mov
call
pop
aas
repz
sbb
test
jg
mov
aaa
ret
push
and
dec
jecxz
push
xor
loop
shll
adc
imul
inc
sbb
adc
bound
push
add
jl
pop
mov
fistpll
in
nop
sbb
imul
testl
pop
xchg
in
fwait
sub
popf
orb
jmp
push
out
in
jl
xchg
adc
pop
arpl
out
ficoms
or
add
pusha
cmp
inc
mov
scas
lods
je
add
in
adc
insl
cmc
or
xor
adc
xchg
fbstp
mov
push
or
inc
out
dec
xchg
mov
pushf
loope
dec
andl
test
and
sub
cmc
push
js
inc
mov
test
xchg
push
ds
fstpt
or
inc
xchg
es
dec
push
mov
subl
mov
push
inc
mov
xor
jg
sbb
adc
stos
mov
sub
add
adc
cwtl
lds
sbb
aad
shlb
jle
inc
and
cmp
push
fsts
or
outsb
lretw
mov
stc
dec
sub
jmp
push
xor
sub
xchg
out
and
clc
enter
das
add
mov
call
pop
cmp
sbb
lahf
cmp
jecxz
push
dec
xchg
es
enter
sub
sti
lcall
sub
mov
adc
jl
inc
lret
mov
cs
jl
lock
adc
sarb
pop
mov
int
icebp
and
push
ficoms
sub
or
lcall
dec
loopne
loope
push
or
and
jnp
clc
sbb
push
lahf
jmp
inc
or
sub
cmp
cld
pop
pextrw
pop
pop
lcall
cwtl
push
xchg
sub
xchg
clc
add
fwait
add
out
sti
loopne
mov
xor
push
push
xor
sbb
subl
sbb
int3
inc
xchg
xchg
pop
andb
dec
outsl
out
lods
or
or
stos
ds
test
or
in
pushf
sti
jl
stos
sbb
gs
sbb
rolb
stc
jle
leave
nop
xor
xor
ja
and
std
mov
sub
dec
mov
rcrb
dec
xchg
ja
pop
and
std
pop
and
push
cmp
mov
jmp
push
push
insb
mov
inc
mov
inc
or
push
inc
cwtl
movsl
call
sub
daa
arpl
leave
xor
addr16
mov
or
test
inc
mov
pop
xchg
mov
scas
lret
leave
movsb
dec
jnp
inc
and
dec
js
mov
test
mov
into
lcall
stos
sti
mov
scas
clc
xchg
push
mov
mov
sar
stc
ret
into
lods
in
lods
push
dec
notb
ret
sub
and
pop
jne
mov
fwait
or
inc
insl
adc
rcrb
ret
add
and
xchg
push
aad
and
lock
int
mov
out
aad
rorb
fstl
loope
adc
imul
mov
out
das
mov
shlb
xor
fdivl
pop
xchg
push
push
cmpsl
shrl
adc
pop
movsl
movsl
sarl
jo
lock
mov
scas
testb
xchg
cmpsb
rolb
xor
cmp
gs
cmp
inc
pop
or
push
pop
filds
ljmp
das
sti
les
xor
push
push
into
out
adc
mov
mov
sbb
mov
sub
jge
jbe
or
mov
sbb
and
and
sbb
cltd
push
pusha
inc
push
lock
bound
cmp
xor
nop
cmpl
xchg
gs
js
in
stos
mov
sub
ret
dec
cmp
fmuls
push
push
shrb
sbb
in
mov
stos
mov
std
inc
insb
fcoms
jl,pt
stos
and
mov
js
es
sub
enter
in
testl
fistpl
fwait
cmp
pop
xorl
cmp
and
movsl
inc
sbb
mov
mov
sub
shl
pop
mov
xchg
test
in
popa
or
push
sbb
dec
das
sub
and
fildl
insb
loop
xchg
adc
mov
into
cmp
pushf
adc
add
jns
xor
cmp
jge
fnstsw
nop
mov
insl
insl
sub
and
arpl
pop
inc
and
cld
adc
push
jnp
lret
sub
pop
popa
lods
or
pop
sub
xor
jecxz
dec
jmp
jbe
pop
mov
out
in
in
pop
cmp
sbb
test
cld
imul
xchg
xchg
add
push
adc
sahf
mov
or
xchg
hlt
and
pop
pop
xorb
mov
mov
jne
push
push
sub
jle
ret
adc
pop
dec
sub
and
clc
adcb
mov
clc
addr16
leave
cmp
pop
push
push
pop
fisubs
push
dec
std
push
mov
andl
add
std
jb
loopne
dec
jle
inc
lahf
jne
lds
inc
jg
xor
aad
push
fsubl
sub
sub
push
add
or
cmp
test
cmpsb
ds
gs
loopne
and
idivl
popa
push
cli
sub
sbb
aas
lret
icebp
and
pop
insb
cmp
mov
and
movsb
lods
pop
movsb
mov
loope
pop
ljmp
pusha
mov
adc
mov
xchg
aad
inc
pop
push
movsb
sub
les
adc
stc
or
jnp
xor
sbb
divl
xor
cld
xchg
mov
pop
mov
sti
or
adc
push
repz
add
sub
and
push
sti
lret
push
adc
data16
movl
lods
movsl
inc
jb
pop
in
movsl
xor
ret
outsb
cmp
adc
std
int3
and
mov
movsl
add
adc
in
in
pop
ret
cmp
jmp
out
and
pop
cli
adc
dec
maskmovq
mull
xchg
sbb
mov
fildl
je
add
lock
sbb
dec
ret
inc
insl
popa
push
xchg
jne
add
sbb
xchg
xchg
ret
push
pop
inc
jb
jecxz
addl
lret
imul
int
mov
clc
xor
pop
out
sahf
ret
mov
sbb
arpl
repz
mov
inc
adc
mov
es
cmp
fnstsw
outsb
nop
fnstcw
add
push
ds
ljmp
icebp
jl,pn
out
dec
dec
xchg
outsb
mov
mov
roll
push
out
rcll
dec
imul
rolb
xor
mov
ljmp
loopne
jmp
lock
and
sbbl
adc
enter
addr16
adcl
imul
jl
scas
xchg
jge
mov
addr16
pop
shll
loope
repnz
cmp
cmp
xor
out
dec
idiv
mov
push
dec
add
adc
mov
jle
mov
jae
in
add
out
rolb
roll
mov
or
cmp
jno
sahf
add
shl
lret
jb
inc
push
mov
loope
clc
cmp
mov
jecxz
int
les
push
daa
mov
popa
xchg
or
push
and
idivb
and
popf
xchg
pop
xchg
inc
arpl
or
add
sbb
push
lahf
dec
int
jmp
jmp
scas
or
std
jne
mov
outsl
test
movsl
iret
int
das
rorb
sahf
lcall
pop
cmp
dec
inc
jecxz
add
lods
mov
aaa
xor
bound
cmc
push
outsl
jne
out
mov
mov
xchg
imul
inc
test
addr16
jnp
cmpsb
cmp
add
insl
inc
iret
movsb
movsl
nop
push
jp
cltd
test
ret
std
mov
in
pop
sbb
stos
insb
dec
inc
addr16
hlt
jno
mov
and
test
sbb
into
mov
dec
add
jecxz
cmp
fwait
repz
cmp
dec
adc
push
and
sbb
and
sub
pop
xchg
push
icebp
mov
std
push
nop
dec
fsubrp
xchg
xor
ret
cltd
mov
inc
push
test
add
mov
jnp
or
scas
inc
add
push
xor
in
jp
stos
and
aam
mov
das
rcrb
in
jne
inc
mov
mov
push
fs
rorb
dec
int3
mov
nop
xor
lret
sbb
or
mov
mov
push
inc
out
daa
inc
movsl
imul
lcall
rorb
dec
fiaddl
dec
sbb
inc
jp
insl
fstpt
movsl
scas
imulb
ficoms
adc
jge
pop
lock
pop
push
xchg
repnz
ret
cmpsb
pushf
imul
aas
shlb
rcll
sbb
out
inc
bound
xor
push
ja
mov
test
out
sbb
test
xchg
push
sti
cmpsl
pop
cmpsb
std
arpl
or
loopne
fisubl
jnp
adc
nop
push
loope
ja
enter
loop
pop
orb
lfs
xchg
mov
cmp
pop
in
mov
add
and
sbb
je
jno
jge
pop
fstl
mov
dec
or
clc
xor
fdivl
xchg
xchg
outsb
push
dec
jmp
and
jns
pop
cmp
shlb
and
nop
and
push
push
jno
fidivrs
jo
daa
out
inc
jmp
pop
mov
test
sub
sub
cmp
loope
sub
dec
pusha
sub
outsb
and
push
add
ljmp
loopne
add
xor
jle
call
dec
cltd
mov
rorl
pop
test
hlt
movsl
add
ss
and
cmp
pop
out
pop
and
xchg
xchg
jno
mov
xor
lret
adc
inc
ret
int3
sbb
ljmp
pop
stc
cmpsl
cmp
cmp
add
movb
lcall
mov
ffreep
xchg
mov
mov
insb
fistl
aad
mov
pop
jbe
cmp
mov
movl
addl
aam
or
xor
or
dec
aam
leave
shl
dec
popa
out
rcrb
fildl
dec
adc
or
cltd
pop
repnz
or
cld
inc
hlt
je
inc
pop
mov
sbb
pop
xor
daa
jns
nop
jae
fbstp
dec
dec
cwtl
lds
xchg
call
outsb
add
adc
test
cmp
mov
dec
xor
xlat
push
pop
cli
pop
mov
shll
mov
inc
xor
loope
mov
rcrl
adc
mov
popa
lods
mov
repnz
xchg
scas
push
mov
fs
icebp
xor
cmpsl
std
push
daa
jle
dec
pop
push
ss
xchg
pushf
leave
mov
adc
mov
stos
hlt
push
sub
sub
mov
mov
lock
in
or
jp
adc
mov
adc
and
jae
jo
mov
fimull
pop
mov
sbb
shl
mov
lods
mov
popf
in
pop
cmp
mov
mov
lds
lock
mov
stc
popf
and
ficoms
push
fimull
xchg
xchg
mov
cmp
sbb
mov
xor
mov
fbstp
not
lret
inc
lcall
repz
loopne
push
push
and
xchg
cltd
sti
rclb
ljmp
mov
or
out
cmp
ljmp
mov
loope
test
dec
rorb
add
mov
sbb
mov
and
shl
fbld
add
inc
stc
mov
int3
add
pusha
pop
mov
jge
popa
add
ds
mov
sub
pop
popa
ds
jge
daa
pop
je
lcall
pop
call
push
sub
fdivs
jnp
ds
mov
inc
sbb
xchg
dec
jbe
test
adc
loope
aaa
jns
cmpsl
movsb
mov
js
fildll
jge
andl
push
adc
shlb
aam
jle
adc
pop
sbb
shl
repnz
lds
stc
mov
push
lahf
and
sbb
shrb
filds
out
pop
mov
loopne
jne
jecxz
popa
scas
aad
sbb
fildl
test
rol
push
jae
push
into
scas
push
pusha
push
xchg
mov
xor
and
or
cmpsb
bound
pushf
lahf
mov
mov
inc
faddl
adc
aam
fldenv
ljmp
icebp
leave
mov
imul
repz
out
inc
jns
scas
loop
lret
mov
ja
push
shl
jb
inc
call
das
lret
jmp
or
mov
sti
rcrl
outsb
sub
sbb
fwait
div
xchg
int
mov
repz
fbstp
enter
scas
lods
lea
cli
and
cmp
pop
and
das
fnsave
sbb
adc
lcall
jmp
dec
inc
add
out
lock
sub
js
inc
lret
lahf
cmpsb
movsl
mov
aaa
pop
subl
scas
inc
push
adc
sbb
sub
lret
xor
jmp
inc
addr16
sahf
out
pop
sub
push
lods
ljmp
and
add
xor
call
orps
jns
idivl
sbbl
adc
imul
ret
push
push
xor
or
lock
shll
add
mov
sbb
shll
dec
mov
add
lcall
sahf
out
outsb
sbbl
ljmp
add
or
sbb
or
and
xor
gs
std
push
pushf
scas
push
pop
jge
mov
andb
dec
popa
xchg
or
xchg
scas
sub
or
inc
outsl
adc
push
sbb
add
xor
rorl
fcomip
aam
jb
out
fmuls
add
mov
adcb
stc
hlt
fwait
lea
cmpsb
inc
fdivl
jle
push
push
and
mov
mov
jo
imul
in
out
or
cmp
mov
mov
and
sbb
push
in
sbb
lock
popa
fcmovu
enter
test
nop
fiaddl
mov
pop
sbb
scas
daa
jecxz
movsb
xor
clc
ljmp
add
mov
leave
insl
lahf
sti
ret
test
cli
out
mov
add
imul
pop
pop
movsb
mov
push
ds
dec
cmc
mov
fwait
lret
movsl
add
lods
je
push
sar
inc
inc
lock
imul
sarb
dec
cmp
mov
call
or
aad
add
mov
dec
aaa
idivb
sahf
mov
sub
pop
movsb
cmpsl
nop
jno
cmpsl
int3
push
or
inc
roll
xor
into
scas
xlat
adc
xor
lcall
mov
cmp
rcrb
push
icebp
insl
scas
push
xchg
xor
aad
push
in
mov
xchg
xor
adc
fidivrs
jg
scas
cmp
pop
sbb
test
jmp
cld
dec
data16
dec
mov
or
hlt
les
fsubs
inc
mov
fadds
adc
out
mov
sahf
adc
cwtl
dec
xchg
cs
push
push
test
cmpl
es
cli
jl
jbe
adcl
inc
pop
insl
cmc
cs
ret
dec
int
scas
jle
int3
xchg
aaa
pop
aam
dec
push
test
xchg
roll
andl
push
icebp
pop
or
jmp
dec
mov
adc
sbb
sub
lods
jg
cmpl
or
data16
mov
and
arpl
mov
sbb
ja
cs
pop
jge
cmp
call
adc
sarb
bound
mov
fidivl
std
in
enter
std
mov
out
arpl
fcomps
xor
inc
push
cmp
xchg
push
mov
sbb
lods
out
pop
mov
mov
push
stc
std
sbb
or
adc
lods
daa
or
jae
in
pop
pop
jge
push
dec
pop
mov
mov
mov
cmc
or
cmc
iret
push
addl
mov
xor
sub
stos
sbb
jo
push
mov
adc
jno
cltd
jg
cmp
ret
push
jno
sub
push
jb
cmp
or
mov
mov
cwtl
shlb
stos
sbb
popa
jae
and
mov
jo
cmc
dec
lea
inc
icebp
mov
popa
cmp
xor
push
adc
mov
jns
mov
pop
ret
stc
or
je
push
imul
pop
xor
sahf
xchg
adc
xlat
pushf
push
mov
jb
sub
xor
sub
mov
lret
clc
push
jo
decl
cmp
int
ss
sti
fs
mov
and
movsl
mov
fmull
insb
lds
jp,pn
rorl
shl
mov
push
nop
imul
pop
cmp
push
daa
pop
inc
out
shrb
roll
sbb
add
cmp
cmp
fptan
stc
cmp
repz
add
sbbl
dec
mov
in
jg
inc
mov
push
adc
lock
lcall
inc
subb
clc
xchg
pop
outsb
mov
mov
xchg
jbe
add
pop
lock
cmp
test
lods
and
push
xchg
dec
insb
pop
xchg
stos
sbb
dec
mov
adc
std
pop
sub
cmp
adc
inc
pop
movsl
or
les
inc
jne
insb
fstl
push
or
pop
ret
dec
dec
fs
xor
mov
inc
cmpsb
mov
cmc
jne
cmpsl
sti
jle
xor
mov
ja
lods
push
xchg
mov
dec
lahf
lret
add
es
fstps
adc
adcb
iret
sub
pusha
arpl
pop
add
push
shrb
aas
push
sbb
enter
daa
add
and
std
or
and
mov
adc
addb
sarl
icebp
push
dec
loopne
dec
sub
mov
in
fwait
aad
mov
xchg
ret
es
lret
mov
dec
fidivs
jmp
sub
sbb
arpl
rorl
out
dec
sub
inc
push
adc
sub
xchg
push
add
sbb
enter
mov
adc
adc
lea
or
les
je
pusha
xlat
aam
xchg
jae
in
adc
cs
sub
arpl
sahf
add
cs
inc
mov
subb
push
sar
out
jno
push
cmpps
xchg
ja
or
xchg
inc
inc
sub
dec
add
push
xorl
pop
add
adcl
lea
ljmp
jns
or
mov
mov
sbbb
mov
out
jbe
test
lcall
cli
pushf
add
cmpsb
inc
and
pop
or
mov
cld
xor
cmp
aaa
pop
int
mov
sbb
into
jle
dec
cmpsl
add
xchg
insl
adc
sbb
sub
int3
frstor
lods
arpl
les
pop
xchg
push
xchg
mov
jb
inc
and
inc
les
scas
pop
dec
sahf
loop
dec
pop
adc
and
pop
out
repz
in
js
push
pop
and
fdivr
inc
sbb
mov
xchg
std
push
ds
popf
ss
aaa
jecxz
imul
jg
cmp
fucom
cmpsl
inc
and
lea
imul
dec
cld
xor
and
dec
mov
jg
mov
xchg
xor
mov
mov
sbb
fwait
dec
push
mov
stos
xchg
bound
mov
cmpsb
addr16
push
add
cs
into
fcmovbe
rcl
push
sahf
cli
pop
jb
mov
ds
and
pop
sub
sub
mov
dec
hlt
scas
pop
pop
data16
inc
lret
out
push
cmpsb
and
sahf
push
repz
and
xchg
and
jns
cmpsl
pop
aas
jae
and
xchg
into
lods
outsl
sbb
movsl
inc
push
rorl
dec
cmp
andl
sub
les
mov
push
scas
stos
das
stc
andl
sub
ss
mov
outsb
dec
inc
push
ret
and
enter
shl
lods
loopne
fldenv
mov
dec
stos
dec
sub
insb
sub
arpl
sub
js
sub
mov
mov
sbb
ja
dec
adc
divl
pop
xor
in
outsl
push
jp
push
inc
mov
stos
ljmp
ja
das
xchg
dec
cld
mov
inc
test
pop
test
or
mov
sbb
in
xor
pop
inc
imul
loopne
add
mov
add
xchg
addb
subb
xor
add
out
mov
mov
aaa
fnstsw
inc
mov
into
repz
xor
repz
adc
inc
cmp
in
push
jnp
int3
inc
clc
mull
fsts
dec
clc
or
daa
sahf
clc
xor
pop
inc
in
mov
pop
mulb
push
and
push
inc
or
imull
test
and
sub
sub
xchg
pop
sar
pop
xlat
lds
add
mov
rcrl
add
shll
mov
out
inc
cmp
rorl
xor
fmuls
aas
jo
test
xchg
mov
aad
adc
push
pop
dec
push
dec
das
add
iret
push
mov
push
pushf
lret
sbb
int3
sti
addb
mov
int
xchg
test
inc
aam
and
rclb
jne
enter
pop
scas
lods
es
iret
sbb
ficoms
mov
jno
sbb
stos
pop
fs
or
pop
arpl
ds
inc
cmp
addb
js
dec
pop
popa
or
or
int
mov
movsb
adc
sahf
loopne
cwtl
mov
add
jecxz
pop
icebp
in
adc
mov
aas
ds
jle
lcall
imul
faddp
fistl
shlb
leave
mov
int
sbb
pop
xchg
xor
adc
mov
popa
stos
pop
gs
push
jbe
aam
daa
outsl
sub
add
cmp
test
cmp
aad
adc
and
dec
and
adcl
mov
mov
in
bound
dec
pusha
sarl
adc
sub
and
and
roll
test
mov
mov
sbb
mov
or
dec
push
je
or
cmp
mov
xchg
xor
icebp
push
mov
int3
dec
add
xchg
pop
inc
movsl
nop
enter
fwait
repnz
out
out
imul
stos
loope
std
jp
insl
shll
xchg
pop
jmp
jmp
hlt
sub
movsb
sub
push
cmp
adc
nop
rorb
mov
sbb
xchg
outsl
pop
mov
pop
sarb
xchg
mov
lret
add
add
pop
lds
shll
xor
pop
pop
pushf
cmc
xor
clc
les
in
adc
in
paddusb
mov
pop
setb
add
push
pop
pop
sub
stc
sbb
pop
lods
aad
sbb
rol
push
dec
inc
aas
or
sti
insb
popf
arpl
push
sub
mov
xor
mov
aas
push
pop
xor
cmp
stc
xor
aad
and
js
mov
xorl
push
ja
pop
push
enter
pushf
mov
mov
xchg
add
mov
push
call
mov
dec
pushf
popf
dec
mov
loop
sbb
popa
xor
shr
adc
shl
pop
movsl
cmp
enter
stos
ss
xor
adc
aas
fcmovnb
cmpsl
dec
dec
jo
jne
mov
jno
pop
sbb
jns
inc
inc
mov
mov
popa
stc
leave
popf
or
xor
xorb
mov
or
adc
add
push
sbb
std
js
mov
push
fs
mov
inc
push
push
mov
pop
push
mov
orl
push
in
jmp
arpl
inc
pop
jno
sahf
add
ljmp
aam
cltd
push
inc
lds
cmp
mov
shll
xor
nop
xor
cltd
push
cltd
idivb
cli
lret
pop
notl
outsb
or
inc
and
sub
cmp
xor
cmp
out
inc
fsubrs
out
and
cmc
mov
nop
addr16
into
add
scas
fcomp
pop
cmp
pop
jae
out
jnp
xor
sub
push
gs
lock
loopne
inc
movsl
push
js
push
push
inc
ret
mov
lcall
pushf
xor
add
mov
xor
out
adc
stc
sahf
mov
mov
mov
leave
mov
sbb
push
cwtl
sbb
in
fwait
mov
sub
repz
dec
test
nop
test
inc
sbb
push
mov
push
jmp
popa
scas
pop
jnp
arpl
dec
push
mov
jp
lds
push
xchg
outsl
mov
sub
dec
fmuls
add
fstl
jne
adc
movsl
or
inc
push
test
inc
aad
cwtl
push
ds
js
pop
lcall
inc
fucomip
out
cmp
adc
test
dec
ss
sbb
dec
std
inc
loopne
int3
popa
jmp
or
mov
test
jmp
adc
lret
pop
daa
push
movsb
pop
sbb
and
jl
push
jl
mov
dec
pop
out
sahf
cmp
test
push
aam
flds
shlb
ljmp
mov
jmp
mov
sbb
pop
insl
mov
mov
popa
leave
std
arpl
cmp
popf
and
movsl
ret
xlat
cmp
push
push
and
add
mov
push
rorl
xchg
sbb
jo
push
sti
or
cmpl
loop
jecxz
cmp
mov
fidivrl
jnp
and
aas
scas
fincstp
dec
mov
xor
add
mov
mov
stos
test
lods
nop
pushf
jo
sub
andb
nop
js
cli
pop
cld
xor
jns
mov
stos
repz
into
nop
and
and
and
cmp
jp
ss
mov
fidivl
push
xchg
inc
xchg
cmpsb
out
jmp
mov
xor
push
push
adc
sub
dec
int
ljmp
fs
cmp
pop
adc
xor
sub
pushf
mov
push
lods
pop
out
jne
sub
jecxz
add
test
movsl
sub
std
rclb
lods
pop
gs
inc
mov
inc
filds
push
fbstp
in
mov
or
movsb
cwtl
les
sub
je
add
out
or
aad
pop
icebp
push
shll
sti
sbb
push
rcl
inc
adc
mov
add
jae
pop
xchg
jecxz
pop
jb
push
inc
sahf
nop
mov
sar
xor
cli
dec
pop
outsb
je
or
xchg
mov
cmp
lret
mov
dec
push
jnp
xor
pop
jg
push
sti
mov
scas
cmp
ret
mov
mov
fsubrl
imul
or
imul
adc
leave
out
inc
mov
sub
cmpl
shl
push
jo
rcrb
aaa
dec
rcrb
inc
mov
es
and
clc
inc
arpl
jg
pop
pop
jecxz
mov
pop
xchg
out
push
int
les
jge
xor
push
add
push
or
repz
pop
pop
repz
sbb
mov
push
jle
dec
imul
mov
inc
repnz
fsubrs
inc
in
or
ret
and
lock
sbb
pop
test
mov
pop
jp
jmp
pushf
rclb
stos
cmp
mov
adc
pop
adc
lock
cmp
push
pop
dec
inc
pop
popa
data16
sti
mov
lods
mov
pop
pop
rolb
push
xor
nop
xor
sbb
mov
mov
cmc
cltd
xlat
decl
push
xchg
inc
gs
ja
mov
inc
lcall
je
mov
addr16
push
icebp
popf
out
out
outsb
cmc
sbb
mov
lds
fstps
push
mov
pop
add
mov
test
shrb
and
leave
mov
mov
outsl
and
cmc
xor
push
xchg
gs
mov
mov
cmpsl
fstps
adc
push
stos
push
out
bound
sbb
mov
fucomi
lds
int3
push
cmp
mov
dec
jg
in
mov
inc
lret
and
repz
faddl
mov
and
inc
lret
stos
vmread
enter
sub
xchg
mov
lock
stos
cmp
scas
mov
inc
out
movsl
in
push
pop
ret
lret
jbe
lahf
out
adc
cmp
adc
add
in
jmp
mov
xor
dec
cli
flds
xchg
loope
lods
shll
icebp
dec
xchg
scas
jne
mov
or
jno
lods
shrl
dec
cltd
xlat
aaa
int
inc
imul
js
cmp
scas
push
inc
mov
mov
dec
push
mov
fistps
test
loopne
andb
push
push
pop
gs
shrb
popf
daa
lods
je
popa
icebp
xchg
jge
mov
scas
pop
xchg
aas
test
mov
mov
sbb
sbb
adc
mov
cli
cmp
in
jl
push
movsl
sbb
int
sub
push
inc
sbb
fwait
lgdtl
xchg
mov
je
scas
and
test
mov
jo
stos
cmp
sub
jg
adc
aad
repz
jae
add
xor
adcl
push
in
sbb
pop
mov
int
pop
pop
loop
add
ja
push
xor
divb
jns
xchg
jb
and
fcoms
orb
adc
xchg
in
cli
les
scas
mov
movsl
cmp
mov
loop
je
push
xor
clc
lea
loop
sbb
int3
inc
sbb
cwtl
jl
jbe
jno
popa
popf
movb
sbb
je
arpl
shlb
cmp
in
das
push
mov
mov
sahf
or
call
xchg
xchg
cmp
mov
sub
inc
inc
arpl
push
iret
out
add
js
ffreep
sbb
es
mov
fadds
xor
fsubp
clc
fisubl
scas
fisubrl
loop
push
repnz
push
xchg
call
ss
mov
loop
xchg
cmp
push
popf
push
jg
xchg
or
stc
inc
adc
pop
mov
lds
and
fstpl
arpl
pop
loop
push
cmp
mov
lods
adc
pop
add
mov
add
loopne
dec
int
xor
icebp
jl
std
cmp
sbb
je
cwtl
fstl
or
xor
push
sub
mov
pusha
movsb
imul
pop
jo
jp
mov
inc
xchg
cmp
loope
inc
mov
mov
test
add
addl
and
movsl
lock
mov
jbe
jl
pushf
xchg
in
leave
je
aaa
jns
sarl
in
popf
sub
inc
and
outsl
test
dec
orl
xor
fistl
mov
popa
jbe
mov
sbb
push
scas
cmp
jnp
sub
les
adc
and
sbb
in
test
stos
lods
gs
addr16
call
ja
add
sbb
test
jnp
test
jle
fs
cmovo
aaa
ret
push
fnstsw
mov
shr
test
sub
insb
mov
push
mov
inc
add
xor
or
lret
rorb
sub
push
and
stc
cld
out
cmp
jae
es
inc
in
fildl
scas
scas
xor
scas
adc
or
fisttps
push
cwtl
outsb
mov
adc
push
push
ret
cld
clc
jns
fsubrs
call
jp
pop
fwait
pop
fisubrs
jp
add
test
ss
jae
dec
gs
cs
and
xchg
dec
pop
mov
xchg
aam
out
mov
les
iret
mov
aaa
fldl
xchg
jl,pn
sub
fiadds
int
add
dec
das
or
jae
pop
fsubrl
fists
dec
les
push
pushf
hlt
aad
lret
js
test
cmp
push
sub
aas
jns
icebp
outsl
push
std
mov
push
mov
dec
cmp
outsl
jae
out
push
mov
xor
pop
mov
imul
add
mov
enter
sbb
xchg
negb
pop
jle
pop
add
int3
mov
comiss
decl
sti
or
notl
popf
mov
push
lahf
add
cmpsl
sub
loope
cmp
repnz
xchg
sbb
or
lret
lods
adc
xor
push
and
push
xchg
or
push
xor
xor
sub
jo
rcrl
and
and
cmp
pop
pushf
push
lahf
stos
xchg
test
shlb
inc
les
ret
cli
mov
fucom
aaa
mov
outsl
fcos
movsb
add
js
int
and
data16
sbb
repnz
pop
inc
sbb
dec
aas
cwtl
daa
test
shrl
addr16
mov
sub
sub
hlt
lock
xchg
cmp
sbb
roll
or
pop
lods
push
cmp
loopne
sbbb
or
out
in
jb
xor
imul
sub
ret
sbbb
mov
inc
mov
pop
dec
jmp
adc
loopne
sbb
loop
xchg
out
pop
xchg
test
mov
mov
popa
lcall
or
pop
jg
imul
mov
lahf
in
adc
enter
mov
cs
push
jo
ret
sbb
and
loop
mov
sub
cmp
out
push
shrl
sbb
jnp
add
push
movsb
push
push
pop
int
jo
or
pop
jo
mov
hlt
aas
aam
loop
cs
cmp
mov
sub
mov
sub
mov
xlat
push
dec
std
test
dec
jp
and
sahf
adc
mov
cld
out
out
test
jmp
jmp
jp
add
jecxz
test
mov
adc
xor
int
and
inc
jno
push
es
repz
adc
adc
cld
in
add
xchg
push
mov
jmp
sbb
mov
fildl
decl
jb
scas
mov
add
and
test
adc
insl
ret
out
mov
mov
lahf
xchg
xchg
pushf
and
pusha
out
pop
int3
and
fsubrs
sub
sbb
repnz
movnti
pop
adc
ss
ret
in
push
adc
cmp
pop
repnz
push
xchg
fwait
mov
xor
sub
or
pop
andl
jl
inc
push
cmc
and
adcb
stos
jne
sahf
or
mov
mov
cmpsb
outsl
dec
cmc
jo
pop
add
stos
jecxz
xor
lea
loope
pop
lcall
adc
inc
jle
push
jge
or
test
xchg
jns
cmpb
inc
or
xchg
test
fwait
pop
add
int
sbb
push
adc
aas
cld
stos
sub
jp
popa
and
ja
xor
xor
xchg
repz
hlt
jg
movsl
mov
sub
inc
pop
aad
repnz
jb
inc
mov
xor
ds
mov
sub
stos
test
push
jnp
cmpsl
rcll
jp
imul
adc
add
add
mov
and
add
adc
clc
cmpsl
hlt
jle
push
scas
fsubr
cmpsb
mov
push
test
push
add
mov
add
test
cs
adc
add
aaa
popf
sbb
gs
dec
and
push
jp
addr16
jecxz
lods
fsubrl
daa
pop
je
or
sub
mov
or
inc
xchg
repnz
cmp
mov
sub
cmc
pop
xor
xchg
xchg
inc
add
ficoml
push
imul
shrl
sub
and
movl
dec
mov
fcom
adc
mov
or
aaa
outsb
inc
daa
sub
push
fwait
pop
jg
sub
stos
mov
fiadds
cs
mov
adc
stos
xchg
dec
mov
inc
and
add
call
ret
pop
jno
inc
mov
pop
pop
pop
sbb
xorb
imul
or
sub
xor
sarb
add
rclb
mov
lea
cmc
pop
ja
ret
sub
mov
pop
or
in
sahf
jg
stos
cmpsb
and
stc
testb
test
jbe
xor
xor
pop
mov
xor
push
add
psllw
adc
mov
shlb
aaa
loop
cltd
sub
sub
xor
cmp
sbb
pop
cmpsb
xchg
rol
jg
daa
mov
sbb
pusha
pop
mov
hlt
adc
jns
mov
lods
fbld
cmp
jle
aad
loope
mov
loopne
jmp
dec
rorb
jl
and
mov
sbb
xor
xchg
cmp
inc
mov
cmp
cmpsl
cmp
les
test
jne
cmp
mull
adc
data16
cs
shll
or
mov
sub
in
into
push
rolb
movsb
outsb
dec
pushf
cmpsb
fbld
lcall
repnz
push
sub
mov
cli
inc
rolb
xchg
icebp
movsb
shlb
dec
outsb
sbb
dec
push
and
push
jg
sbb
mov
test
xor
inc
xchg
and
mov
stos
add
mov
je
mov
pop
push
xor
sub
cltd
fwait
shlb
add
push
pop
cmpsb
lret
out
xchg
push
push
loop
jle
cmp
jo
or
mov
out
xchg
dec
xor
cmp
cld
jmp
sub
lcall
int
in
dec
push
jns
sbbb
push
fdivl
insb
inc
push
pop
pop
sbb
iret
dec
inc
mov
lock
femms
sbb
addr16
repnz
rcrl
xchg
call
icebp
stc
xorl
add
rcrb
mov
in
mov
out
add
fcmovnbe
jmp
mov
arpl
dec
int
mov
bound
cmc
sarb
push
out
dec
icebp
fldl
addb
lahf
aas
sbb
lods
jl
dec
mov
or
xor
sti
adc
pop
repz
cmpsb
ljmp
popf
push
jb
mov
adc
cmp
jnp
ljmp
dec
jmp
mov
data16
xchg
sub
mov
or
andb
std
jle
cmp
and
pop
inc
and
push
lret
jp
add
mov
stos
and
loope
mov
xor
jo
inc
jnp
jbe
sysexit
and
cmp
mov
mov
xchg
cmp
inc
jg
and
sbb
into
sub
push
xchg
sti
xor
add
adc
pop
mov
loopne
adc
je
shll
fwait
ljmp
and
inc
dec
jecxz
or
es
dec
pop
xor
mov
push
sbb
xchg
dec
gs
cmp
nop
inc
mov
dec
or
pop
lret
shlb
scas
jg
movsb
pushf
stos
add
jnp
test
and
cmp
loop
sbb
insb
adc
repz
flds
cltd
int3
jbe
push
negl
xchg
lods
movsl
loope
lret
adc
mov
in
sub
mov
cs
out
dec
pop
popa
mov
xchg
cltd
sbb
call
cli
add
jge
scas
add
std
sub
xchg
jb
adcb
out
pop
push
mov
arpl
fcompl
loopne
cmp
leave
pop
js
push
loope
popa
pop
shl
sbb
aam
cmp
pop
jmp
loope
loop
mov
pop
sub
lds
pop
sbb
lods
jns
ds
andb
xchg
cwtl
and
enter
cmpsb
les
rcll
shlb
into
add
xor
push
add
jne
out
pop
xchg
out
mov
insb
xor
lock
jnp
pop
sub
adc
rclb
push
add
dec
fmul
aad
sub
sbb
mov
clc
lods
inc
subb
or
daa
int3
gs
cltd
inc
inc
sbb
test
mov
cmp
loop
loope
and
leave
add
mov
in
push
jge
loopne
int
pop
mov
fistl
mov
lcall
push
movsl
push
sub
call
fidivs
add
test
pop
lods
push
mov
fimuls
pop
cwtl
outsb
bound
or
push
sub
mov
mov
adc
lcall
mov
movsl
gs
pusha
outsl
mov
inc
or
cwtl
aas
and
adc
dec
mov
mov
inc
jg
jl
cmp
mov
lret
pop
movsl
std
push
push
idivl
mov
xchg
out
ficoml
jg
insl
in
shrb
xchg
push
cmp
adc
insl
mov
cld
scas
out
ss
adc
and
ret
sbb
pop
inc
stc
jecxz
and
pop
jnp
pop
mov
stos
xchg
lcall
sti
jge
push
xchg
xchg
dec
push
scas
ret
lock
add
dec
or
cwtl
and
sbb
jae
sub
push
pusha
add
push
les
imul
dec
xchg
loop
test
push
or
popa
mov
iret
mov
out
inc
push
test
out
or
scas
and
data16
push
mov
mov
rcrb
in
rcrl
mov
fildll
inc
iret
fimull
sahf
inc
mov
out
stos
or
sub
cmpl
pop
mov
and
and
mov
ret
lock
outsl
or
ret
insb
cli
ret
or
and
cmp
je
fsubs
xor
les
mov
es
add
aam
scas
adcl
ds
stos
sub
jle
mov
fwait
mov
jne
das
aas
add
and
lcall
mov
xchg
xor
add
data16
or
dec
pop
adc
mov
imul
imul
pop
xor
push
mov
xchg
push
sub
fucomip
inc
and
xchg
stos
out
ficoml
test
add
push
cmp
or
stc
pop
mov
repnz
nop
fisttpl
fidivl
int3
dec
loope
xchg
jo
or
inc
xchg
mov
aaa
outsl
mov
imul
jmp
rcll
ret
das
fidivrs
loope
xchg
mov
fnsave
fldlg2
fldl
and
shrl
push
aaa
jg
pop
adc
subl
out
push
sub
add
mov
pop
mov
xchg
push
pcmpgtd
push
push
jae
xchg
pop
mov
xchg
fnstcw
pop
testl
inc
bound
xchg
fnstenv
add
xor
repnz
movsl
pop
and
inc
mul
dec
movsl
cli
jnp
sbb
adc
outsb
mov
mov
in
lcall
je
out
fmull
inc
and
test
test
inc
outsl
roll
sti
dec
and
jl
adcb
xor
adc
cwtl
ret
lret
lahf
xchg
inc
cmp
leave
notl
pop
mov
cmp
mov
leave
xorl
ss
push
inc
inc
imul
nop
shrl
push
dec
mov
sbb
push
cld
leave
test
ret
jns
shlb
shrb
cs
sub
sbb
nop
and
cli
mov
test
pop
enter
cli
in
test
jp
in
xchg
jmp
xchg
call
adcl
sbb
mov
add
out
lahf
cmp
ficompl
xchg
cmc
mov
xor
inc
cltd
imul
int
cli
std
dec
lds
inc
arpl
jne
sub
mov
outsl
sub
test
cmp
mov
test
cli
enter
ss
fwait
pop
cmp
addl
popa
inc
incb
cmpsl
rcrb
outsl
scas
addr16
inc
cld
cwtl
fwait
aam
rcr
test
lret
mov
int
mov
out
dec
sahf
mov
lock
scas
pushf
sbb
mov
inc
push
out
or
push
cmp
add
pop
inc
pop
adc
push
and
lcall
and
mov
xchg
mov
mov
ret
add
cs
adc
jne
push
popf
test
add
adcb
out
in
shlb
rcll
xlat
lret
push
cmp
lret
loopne
mov
fisttps
pusha
mov
push
mov
sbb
or
pop
ret
outsb
mov
and
inc
loope
sbb
xchg
sbb
fimuls
std
xlat
jne
xchg
xlat
push
jno
mov
sar
lds
inc
lea
insb
or
sub
cmp
jge
lods
cltd
sub
mov
jecxz
rorl
pushf
loopne
jb
inc
mov
mov
shll
ret
jecxz
scas
mov
sahf
test
out
or
push
cs
and
cmpsb
sbb
enter
loopne
push
iret
cmpsb
push
cmp
aad
fwait
or
adc
sbb
mov
lods
rorb
imul
pop
pop
dec
or
into
outsb
lock
mov
jb
cmp
push
pop
or
or
out
out
inc
mov
repnz
inc
jns
add
mov
xchg
gs
jb
and
jge
nop
jge
push
imul
rorl
psubusb
pop
adc
adc
inc
sahf
insl
gs
inc
jbe
adc
es
adc
fldl
mov
jl
sbb
push
insb
int
or
aas
xchg
xchg
xchg
stc
push
dec
out
js
jecxz
icebp
mov
jmp
rsqrtps
xor
mov
nop
enter
mov
xchg
sub
shl
cmp
push
pop
sub
push
rcll
movsl
sub
loopne
cld
jg
add
xorl
icebp
in
mov
lret
pusha
mov
lret
incl
cld
xchg
inc
ret
push
lcall
test
movsb
mov
sbb
push
xor
das
fsub
iret
jge
es
jae
das
cmp
adc
jno
mov
push
sub
pop
pushf
jmp
cmc
test
les
pop
loop
inc
mov
in
in
and
das
mov
fistps
fstl
aaa
mov
jp
and
inc
and
sbb
dec
lock
addr16
dec
pop
rol
jle
lea
sahf
sub
jle
add
add
insb
aad
repz
mov
jle
jmp
aad
cmc
inc
xchg
push
mov
jbe
sub
or
jecxz
sbb
sub
add
xchg
sbb
call
ja
inc
add
push
testb
filds
mov
pusha
mov
mov
cmp
movsb
xchg
lahf
xchg
sub
and
gs
repnz
test
divb
dec
sbb
pop
outsl
inc
cmpsb
dec
pop
add
jmp
test
dec
jb
and
out
cwtl
jbe
dec
inc
pop
mov
mov
and
popa
xor
cmc
iret
andb
or
arpl
and
incl
push
inc
mov
addr16
movsb
mov
jno
xor
lds
into
sub
jo
push
leave
mov
mov
outsb
pop
sbb
adc
leave
mov
nop
add
ret
mov
ljmp
mov
jo
xchg
push
push
jns
lret
fcompl
mov
xchg
xchg
inc
pop
ret
sbb
and
and
mov
out
jns
js
add
fiadds
jecxz
or
fwait
test
xchg
out
push
enter
mov
mov
mov
js
push
pop
dec
movsb
roll
jno
shlb
fstpt
pop
clc
add
inc
ds
daa
or
mov
or
clc
imul
leave
inc
cwtl
mov
sbb
fimull
filds
xchg
test
inc
sbb
retw
mov
jno
pop
jo
mul
pop
mov
push
dec
jbe
rorb
cltd
pop
or
sti
fs
xlat
sbb
out
inc
xchg
cmpsb
roll
test
aad
sub
subl
cmpsl
xchg
jle
jle
shrb
jp
sbb
icebp
les
mov
dec
cld
push
adc
fstpt
pop
test
js
sub
nop
cmp
hlt
push
or
cwtl
iret
hlt
movsb
jnp
in
leave
inc
mov
pop
xor
mov
xlat
ss
lods
xor
loop
scas
in
and
xchg
cwtl
stc
shl
and
pop
adc
mov
popf
mov
and
outsl
inc
adc
out
sbb
shl
out
lret
rcrb
push
mov
and
sub
and
out
jecxz
xor
jg
lret
jle
sbb
push
icebp
xor
into
subb
dec
ret
xchg
push
cmp
sarb
xor
mov
mov
xchg
cmp
scas
fiadds
test
xchg
mov
imul
jmp
push
mov
mov
jne
in
jae
lds
mov
ds
jp
addr16
jl
mov
imulb
xor
pop
jbe
icebp
xchg
xor
push
xchg
ret
js
ljmp
cltd
or
cmp
inc
mov
negb
divb
outsl
push
mov
inc
fnstcw
insl
insb
lds
mov
aaa
push
xor
loop
les
cmpsb
dec
xor
sbb
mov
pop
push
test
cli
divb
sbbl
je
pop
lods
adc
movsb
cmp
xor
repz
sub
cmpsl
mov
sub
das
lods
pop
inc
aad
add
ret
into
into
mov
repnz
mov
pushf
or
lret
push
add
mov
inc
iret
jnp
inc
cvtdq2ps
ljmp
imul
div
adc
xchg
ret
adc
js
inc
or
sbb
xlat
jp
loope
stos
mov
fs
lcall
ds
into
enter
mov
enter
pop
pop
jp
mov
imul
or
pop
lds
xchg
into
inc
add
insl
sahf
push
hlt
or
mov
sub
add
cmpsl
cwtl
sub
jbe
rcrl
inc
xor
push
dec
jmp
sbb
movsl
xor
fisttpl
mov
pop
lock
pop
cmp
test
mov
push
call
dec
mov
into
or
or
adc
fcomip
jecxz
aam
or
mov
lea
cltd
lret
test
or
pop
jl
data16
mov
mov
add
sbb
jns
add
xchg
orb
mov
jg
icebp
pop
dec
adc
cld
mov
mov
sahf
ss
and
mov
cmc
xchg
sbb
dec
adc
int3
or
fisubl
rclb
push
std
cli
inc
loope
inc
xchg
jle
push
sbb
push
aaa
and
repz
outsb
dec
cmpsl
pop
mov
dec
repz
cmp
std
or
fdivrl
scas
pop
sbb
pop
and
cwtl
and
sub
jmp
add
mov
aaa
adc
mov
popa
cmp
addr16
stc
xor
mov
jmp
xchg
add
fists
sahf
mov
mov
add
push
xor
call
shl
push
and
mov
add
pop
mov
cmpsl
push
add
add
iret
mov
fstl
stc
or
and
cs
inc
jno
popf
jmp
insl
pop
ret
rol
das
scas
out
aad
or
and
cwtl
xor
loop
fwait
dec
fsubrs
js
cmp
je
int
scas
mov
jmp
dec
xor
xchg
mov
xchg
adc
xor
test
jle
shll
nop
in
push
fidivrs
xor
fisttpl
cwtl
sbb
outsl
rorb
js
cmp
lcall
xorl
or
les
push
jb
push
mov
test
cwtl
popl
fstps
push
fmuls
dec
in
mov
push
stc
idivl
lds
mov
or
jmp
jae
imul
loop
jmp
inc
push
insb
lcall
psubq
andl
and
mov
imul
pop
in
lds
orb
and
dec
jg
adc
add
nop
rolb
mov
xlat
fidivrl
sbb
dec
iret
repz
filds
in
xchg
clc
iret
or
mov
xchg
xchg
psubd
hlt
stc
repz
aas
sub
into
mov
mov
add
shll
push
pusha
push
pop
enter
cmp
cmp
push
push
jecxz
sahf
hlt
mov
and
lods
nop
jno
jnp
pop
enter
in
out
sahf
mov
mov
sti
lahf
mov
shl
jl
cmp
push
out
sub
mov
arpl
push
jno
xchg
mov
stos
adc
mov
arpl
sbb
cmp
mov
pop
lods
cmp
cld
mov
popf
or
and
cld
movsb
pop
lods
sub
enter
jp
sbb
ss
mov
sub
and
ret
mov
mov
fs
cmc
cmpsl
cmp
mov
cltd
gs
mov
filds
out
dec
neg
clc
or
push
cmc
pop
iret
out
dec
lcall
adc
nop
subl
sub
scas
mov
hlt
rclb
mov
add
std
mov
sbb
scas
cmp
inc
dec
sbbl
push
xchg
imul
mov
dec
dec
xor
insb
sti
leave
test
cmp
daa
inc
ss
cmpsl
cmp
stos
xor
adc
lcall
dec
ficoms
cmp
inc
fisttpl
mov
js
enter
popf
or
dec
pmullw
mov
movsl
jo
imul
dec
add
les
scas
cwtl
movsl
repnz
adc
cli
mov
sbb
dec
fidivrl
mov
jl
loope
sbb
int
scas
pop
xorl
scas
jbe
push
arpl
ficomps
sub
sub
pop
out
cmpsb
pop
aad
dec
or
and
or
out
mov
mov
es
lcallw
push
test
pop
xchg
push
cmpsb
test
arpl
xchg
jns
mov
push
cmp
dec
out
movb
or
jg
hlt
aad
adc
mov
das
stc
fsts
xorl
sub
xor
sahf
stc
shll
xor
dec
loopne
adc
dec
add
add
es
cmpl
call
negl
sub
nop
pop
or
push
out
nop
sbb
adc
pop
mov
pop
subl
in
in
sbb
cmp
mov
into
xor
push
adc
xchg
mov
jecxz
mov
xor
jge
push
sarl
insl
xchg
push
xor
jbe
jnp
leave
push
stc
lret
add
pop
mov
sub
xchg
mov
mov
xchg
stc
out
jne
pop
jno
outsl
jns
iret
xchg
aam
lods
repz
adc
test
inc
call
cmp
mov
xor
inc
mov
push
adc
cltd
mov
addr16
rcr
bound
mov
inc
fs
xor
mov
test
pusha
les
inc
add
or
js
xchg
cli
ret
gs
push
ljmp
jg
adc
mov
mov
jmp
jecxz
mov
fs
cmp
cmp
es
sbb
divb
mov
sbb
mov
xor
jnp
in
imul
or
mov
dec
jbe
fadds
pop
cs
loope
sub
xchg
mov
ficoml
push
xor
push
in
idiv
mov
jno
mov
jmp
jle
jae
mov
mov
lds
push
xchg
popf
dec
inc
fwait
mov
xchg
pop
insl
out
sub
sub
jmp
add
dec
inc
pusha
mov
pusha
rcrb
mov
add
ss
pop
mov
push
shrb
sahf
pop
and
cmc
mov
and
in
and
jnp
mov
pop
int3
jmp
jg
push
push
cmp
xor
sub
push
sarl
dec
ljmp
int
sub
inc
dec
adc
sub
pop
inc
mov
lea
xor
jg
sbb
inc
mov
and
jbe
mov
xchg
jne
in
push
mov
push
inc
xchg
xchg
and
sbb
cmp
push
and
jno
arpl
mov
jle
aad
fwait
leave
jno
scas
addl
iret
sub
iret
lods
std
mov
ljmp
inc
push
enter
cmp
inc
adc
iret
loopne
mov
js
or
or
cmp
out
ret
mov
mov
fsubrl
int3
mov
xchg
sbb
xchg
inc
sbb
adc
push
cmp
mov
or
xor
repnz
push
ja
fdivl
lret
insb
insl
icebp
fucom
and
push
pop
xchg
sti
push
into
mov
int3
inc
jmp
push
sti
nop
dec
jbe
fbstp
ss
fwait
mov
pop
movsl
jle
mov
fs
push
push
mov
mov
movsl
mov
not
push
or
rclb
fwait
push
push
lret
mov
loope
push
sub
jo
test
dec
jmp
mov
sbb
outsl
fistps
mov
and
mov
xor
push
cmp
mov
lock
mov
mov
or
stos
stos
call
je
push
mov
xchg
mov
inc
aaa
sub
shlb
dec
lods
setbe
mov
push
mov
sbb
lret
or
dec
aas
aas
xor
cli
xor
add
fsubrs
ljmp
fiadds
test
sbb
push
rol
daa
xorl
sub
or
and
push
and
repz
mov
notl
ljmp
sub
test
adc
push
mov
arpl
das
jge
outsb
pusha
mov
sahf
addr16
adc
pushf
fisttps
and
filds
in
fisttpll
mov
js
xchg
orl
jge
xchg
loope
je
inc
or
cli
pop
sub
fdivrp
and
cmpsb
xchg
stos
xchg
push
shll
jmp
cwtl
push
outsl
add
es
int3
fistps
cmp
jge
xor
jnp
jg
sarb
movsb
xchg
jp
and
popf
fildll
dec
mov
movsb
call
test
sub
sbbl
lods
xchg
call
pop
sub
test
cmp
jbe
sahf
bound
mov
xchg
mov
inc
and
ss
jns
mov
pop
cmp
outsb
jecxz
dec
fsubs
mov
mov
jbe
mov
aam
inc
call
inc
dec
movsb
negl
hlt
test
sbb
push
pop
xor
sti
sbb
push
mov
jae
imul
movsl
mov
adc
push
xor
adc
dec
push
push
dec
mov
ljmp
pop
pop
pop
psrad
lock
or
push
add
jp
sub
mov
mov
inc
or
shll
dec
scas
push
ret
icebp
ss
xchg
aas
pusha
shl
inc
dec
push
mov
out
jg
sbb
mov
loop
lods
stc
add
fscale
sbb
imulb
xchg
in
dec
int3
cltd
and
mov
sbb
mov
push
ja
roll
jns
cmp
xor
or
out
pusha
rcrb
xchg
int3
lret
and
push
push
ja
xchg
hlt
cmpb
in
mov
lock
nop
jae
pop
mov
outsb
and
popf
test
push
xor
pop
mov
cmpsl
mov
push
cmp
add
loopne
mov
inc
mov
mov
rcr
xchg
mov
jbe,pn
in
push
mov
xchg
lcall
shll
inc
ffreep
ljmp
jne
cmpsl
dec
in
sbbl
mov
pusha
out
dec
shld
pop
fidivrs
jbe
mov
pushl
lret
cmp
jmp
dec
js
fwait
push
or
cmc
or
sbb
dec
adcl
pop
xor
daa
mov
mov
jns
xor
lret
mull
enter
in
cmp
jle
hlt
out
in
mov
pop
movsb
hlt
cmp
cli
jbe
int
das
mov
sbb
mov
push
cwtl
adc
lods
ds
and
imulb
and
mov
test
int3
push
xchg
dec
add
arpl
test
imul
push
xchg
mov
lods
lds
jg
jae
stos
std
aaa
pop
cmc
sub
xchg
dec
movsb
cmp
mov
sbb
mov
ret
loop
pusha
jg
push
fiaddl
xchg
mov
loopnew
cmpsb
into
add
aam
fiaddl
nop
cld
jae
add
stc
xor
loope
shrl
stos
clc
bound
insl
jle
dec
jp
ucomiss
push
adc
imul
push
loope
mov
fimuls
ljmp
mov
aas
insb
repz
popa
je
cld
or
fdivs
lret
jns
pop
mov
fadd
mov
fcomp
mov
dec
fstpt
scas
cmp
sub
ljmp
mov
rcl
mov
js
xor
mov
sub
mov
xor
mov
xor
ja
insl
fnsave
hlt
mov
mov
shl
xchg
xor
in
fidivrs
ds
stos
pop
mov
sbb
jp
inc
outsl
daa
repnz
mov
outsl
adc
pop
jae
nop
jmp
arpl
dec
add
fnsave
add
sahf
call
push
pop
adc
xchg
sbb
mov
cmp
ficoml
xchg
cltd
adc
outsl
push
cmpb
xor
fcomps
xor
jb
insl
sti
repz
lods
push
push
mov
icebp
dec
std
stos
pop
add
cmc
inc
mov
sbbl
jle
inc
ljmp
mov
or
imul
fbstp
in
xor
jp
rcll
mov
nop
push
or
inc
jno
cmpsb
mov
inc
xchg
mov
mov
aad
pop
cmp
fcoml
mov
imul
cmp
mov
mov
xchg
cwtl
fistps
loopne
sbb
mov
lcall
div
shl
lods
nop
push
pusha
out
adc
mov
mov
sbb
scas
push
fs
fs
pop
cltd
sbb
inc
push
add
out
cmp
int
add
pop
cmp
jns
insl
fdivp
xchg
pop
sub
lds
push
jecxz
xchg
mov
mov
mov
sbb
cmp
mov
xor
mov
call
ud1
or
leave
pusha
cli
fs
dec
xor
pop
adc
scas
mov
cs
cmp
jmp
push
pop
push
pusha
push
enter
cmpsb
icebp
hlt
ret
jecxz
pop
dec
adc
inc
adc
dec
ret
lret
mov
jp
dec
mov
and
mov
shlb
pop
gs
cli
mov
xlat
popa
call
cmpsl
ret
mov
sahf
mov
sub
imul
aaa
test
fwait
movsl
hlt
xchg
cmp
xchg
leave
scas
jecxz
adc
scas
js
das
mov
pop
inc
push
mov
or
or
add
and
adc
push
mov
lock
cmp
ret
sub
add
inc
add
mov
xchg
dec
int3
sbb
push
aas
call
js
mov
cmp
fisttpll
icebp
lods
mov
pop
mov
popf
aad
cmp
mov
dec
fs
inc
dec
iret
out
add
add
and
fisttpll
shrb
lret
cmc
sbb
mov
or
sbb
mov
inc
sub
jae
sti
xor
pop
add
pusha
mov
das
cld
pslld
pop
fwait
lods
jl
or
imul
clc
lods
inc
mov
xor
clc
jp
pop
jbe
inc
int
imul
aas
or
int
imul
pop
stos
mov
pop
popa
cld
rcll
jmp
rolb
jno
mov
cmpsb
mov
flds
clc
mov
lret
rcrb
add
sbb
or
fistpll
ret
pop
or
inc
roll
nop
rolb
bound
inc
mov
sub
pusha
sbb
push
pop
or
sub
adc
xchg
jl
xchg
pop
push
or
lods
push
aad
push
and
jmp
cmp
inc
push
xchg
adcl
cmpl
jb
push
les
sarl
or
lret
jbe
pop
lods
xchg
mov
scas
aas
push
mov
mov
pop
add
push
into
and
lods
fildll
xor
cli
mov
mov
or
into
test
mov
cmc
sbb
dec
out
cmpsb
adc
clc
or
jno
xchg
pusha
aad
mov
jecxz
xchg
cmpsl
shrl
pushf
cvtps2pd
imul
pop
clc
mov
pop
pop
mov
add
leave
jo
add
out
in
xor
mov
add
xchg
or
push
stos
in
lret
adc
test
sbb
fucomip
cmpsl
add
iret
xor
pop
dec
int3
xor
adc
dec
lahf
mov
nop
jp
movsl
mov
sub
cld
push
xlat
mov
mov
mov
in
dec
popf
mov
out
inc
xchg
mov
xorl
sbb
test
insb
jno
fidivrs
jp
fucomp
mov
mov
push
je
jne
shrl
sbb
fwait
or
or
popa
fcomi
in
inc
fs
vmaskmovps
enter
mov
push
xor
xchg
mov
sub
push
shl
ds
loop
lret
mov
push
stos
pop
rolb
loop
xor
decl
les
cwtl
out
jecxz
inc
fwait
and
add
mov
mov
xlat
test
sarl
xlat
xchg
dec
push
add
stos
xchg
push
cwtl
mov
into
cmp
icebp
adcb
cmp
cmc
dec
cmp
pop
dec
out
sbb
jbe
jmp
mov
popf
lea
subb
sub
cltd
and
jnp
jle
cmp
imul
sub
stos
mov
mov
adc
push
fstpl
insl
pop
or
mov
mov
repnz
insb
adc
cmp
outsb
push
or
call
test
lds
fcomp
mov
push
xchg
dec
pushl
int3
stos
lods
mov
les
cltd
jl
push
xor
shll
shll
cmp
out
inc
push
cld
or
or
and
rorb
dec
xchg
push
clc
xor
rcl
jo
cmp
sub
leave
adc
popa
inc
pop
js
xor
sbb
push
add
fisttpl
sub
enter
ret
es
fwait
hlt
jge
xor
daa
add
sub
pop
pusha
push
xchg
jecxz
push
jecxz
xor
xchg
mov
adc
inc
lret
scas
or
adc
sbb
push
fnsave
push
cld
sub
or
adc
xchg
aad
je
push
mov
out
cld
mov
gs
or
cs
rcll
faddl
and
push
inc
sbb
in
imul
daa
decb
fdivrs
dec
stc
dec
incl
cli
data16
outsl
icebp
inc
or
mov
stos
aam
outsl
push
sbb
adc
or
fistps
adc
or
push
fists
loope
jno
cli
xor
sub
shlb
cld
push
cmp
jmp
cmpsb
mov
dec
stc
cmp
mov
scas
jmp
push
bound
test
sub
daa
pop
lods
repnz
into
xchg
cmp
lods
xchg
and
sbb
nop
adc
mov
jnp
pop
pop
jnp
cmp
xchg
push
js
shrl
inc
sbb
stos
gs
add
pop
adc
cli
jg
xor
xchg
push
popa
out
or
scas
mov
aaa
jmp
mov
std
adc
lods
adc
std
cld
add
mov
scas
cmp
hlt
pop
push
enter
jmp
push
lods
jl
jb
xor
jns
je
xchg
lahf
icebp
jle
test
cmp
fldenv
fdivrs
test
jmp
pop
cmpsb
and
jno
into
lock
shrb
ror
inc
sub
enter
mov
enter
imull
fcomip
sub
stc
push
xchg
sbb
mov
jmp
dec
scas
mov
test
loopne
fcomps
cmp
clc
cmp
fistpl
int
mov
ds
cmp
aaa
rcr
push
jo
out
pop
or
sub
push
out
shll
fcmovnbe
outsb
into
mov
sub
ss
rol
mov
mov
push
sbb
jne
loop
xchg
add
lods
pushf
xor
xchg
test
lret
dec
jecxz
push
xor
outsb
xlat
jae
outsb
rorl
cmpsl
pop
jecxz
pop
and
ds
repz
push
shlb
cmpsl
push
mov
test
cmp
repz
mov
cmpsb
jno
movsl
rcrl
lahf
push
dec
mov
addr16
pop
sbb
rclb
aaa
push
dec
push
fldcw
inc
sub
inc
adc
jg
loopne
jno
xlat
lret
mov
popa
insl
or
add
sbb
mov
xchg
jle
shr
or
jecxz
xor
punpckldq
jmp
xchg
pusha
movsb
add
or
sbb
or
shrb
sbb
sub
dec
mov
cmp
test
fsts
cmp
mov
and
mov
ret
sbb
sbb
scas
icebp
dec
enter
xor
popf
jg
pop
inc
xchg
insb
xchg
enter
sbb
add
mov
dec
imul
shl
pop
adc
push
jmp
fwait
add
jo
sbb
push
xchg
lcall
pop
jns
sbb
ljmp
mov
mov
lock
mov
xchg
xor
int3
ret
test
lret
cwtl
dec
insl
inc
adc
jbe
mov
fadds
loopne
inc
xchg
xor
dec
jb
aam
mov
ljmp
pop
and
cmp
or
into
pop
pop
adc
or
mov
sbb
sbb
gs
sbb
and
mov
aas
fs
jo
sahf
scas
or
add
pop
das
sbb
jge
test
loope
stos
out
pmulhw
ljmp
loop
dec
push
or
fiadds
int
ret
iret
rcr
das
pushf
jle
aad
sahf
mov
ja
insl
fiadds
jnp
js
leave
xlat
enter
inc
inc
lock
mov
pop
jmp
movsb
adc
adc
out
imul
mov
mov
iret
fdivl
mov
out
adc
or
out
add
sbb
in
inc
cmp
xchg
int3
repz
cmp
repnz
push
inc
or
mov
addr16
or
inc
jge
add
jno
jmp
and
pop
shll
repnz
andl
jg
mov
jns
sti
adc
and
push
int
int3
jle
pxor
inc
add
or
es
cmc
fwait
xchg
xchg
mov
test
inc
adc
std
mov
stos
dec
hlt
scas
mov
outsl
mov
mov
push
mov
js
fstpl
push
cmp
push
test
xorb
cwtl
ret
bound
push
jecxz
sbb
pop
es
xchg
bound
or
cld
subb
sbb
dec
adc
push
sbb
cmpsb
mov
outsl
mov
xchg
inc
sub
push
dec
mov
mov
push
nop
add
pop
divl
stos
dec
jno
sbb
and
lcall
inc
mov
clc
aam
gs
leave
inc
push
adc
aaa
loope
ret
stos
int
insl
and
outsb
inc
dec
jne
xchg
push
inc
fs
sti
cmpsb
and
ret
data16
daa
cmp
std
mov
movl
push
std
aaa
arpl
cmpsl
leave
sbb
insb
jne
lods
movsb
int
mov
movsb
xor
arpl
ljmp
and
dec
sbbl
pop
inc
outsl
push
jmp
sti
clc
sbb
pop
aas
iret
add
inc
xchg
dec
jmp
cmp
pop
gs
js
stos
call
lods
push
push
push
inc
std
pop
mov
mov
jge
cmp
pop
or
bnd
pop
or
and
xor
sbb
mov
out
dec
sub
lret
add
dec
inc
mov
adc
cmp
call
lock
adc
insb
std
jae
mov
pop
cltd
ljmp
ret
xor
mov
mov
jge
add
iret
jno,pt
jne
popa
js
aas
fs
adc
sub
test
fildl
mov
push
or
cmp
sub
movsb
mov
fcmovb
mov
and
je
lcall
dec
push
jecxz
xchg
aad
test
je
inc
mulb
or
lcall
mov
jecxz
inc
pusha
fiaddl
lock
pop
mov
loopne
push
cs
sub
cmp
jae
push
je
mov
jns
inc
sarl
orl
in
sub
clc
movsb
xor
ror
mov
dec
mov
add
fisubrs
testl
lcall
test
push
lahf
aas
mov
mov
add
test
inc
ret
mov
lea
xchg
cmp
xchg
pop
sub
cmp
xchg
push
dec
mov
fcmovne
sub
in
add
fidivs
out
cmp
lock
arpl
rcr
xchg
and
leave
adc
sub
popf
and
dec
int
pop
das
xchg
add
sahf
cmpsb
popa
loope
out
sbb
test
jns
xchg
or
lret
xchg
gs
dec
xchg
adc
enter
sub
mov
sbb
lods
lcall
cmpsb
mov
mov
aam
clc
popf
cmp
scas
rorb
divl
sti
leave
fs
xchg
adc
xor
inc
push
fiadds
inc
xchg
popw
xchg
arpl
imul
jmp
push
out
notb
mov
loop
ret
ret
sub
fs
clc
jae
das
mov
int3
gs
dec
mov
dec
lea
fwait
adc
push
xchg
outsl
aas
repnz
fwait
pop
inc
and
push
sub
cmp
pushf
cmp
cmp
xlat
pop
bound
push
test
mov
or
fwait
push
add
outsl
xor
rorb
mov
shl
cwtl
inc
movsl
pop
lret
movsb
jecxz
out
imul
ret
sbb
mov
fbstp
orb
mov
cltd
mov
into
test
out
ret
popa
adc
sbbb
push
jl
cwtl
popa
xchg
cltd
in
out
lcall
arpl
xorl
cmp
addr16
pop
add
sub
adc
xor
je
mov
mov
inc
into
test
mov
jne
shlb
jb
inc
cwtl
mov
shlb
sbb
and
or
fldt
cmp
lds
sub
xchg
inc
lds
outsl
inc
ret
mov
out
add
mov
les
xchg
lds
jl
addr16
test
cwtl
adc
pop
xchg
pop
jle
std
inc
push
lds
icebp
jge
enter
sbb
call
push
sbb
cli
or
mov
ja
mov
sbb
test
mov
push
sbb
jns
test
pop
or
xchg
outsb
sub
or
sub
cmpsb
push
mov
cmpsb
cmc
out
ret
adc
cmp
out
scas
adc
add
mov
mov
insl
out
and
xchg
and
mov
test
stos
arpl
icebp
dec
adc
and
jg
jecxz
jge
in
pop
ss
or
sbb
cmp
lods
int
stos
jle
and
and
pop
push
push
xchg
and
inc
ror
sub
inc
pop
or
insl
nop
xchg
dec
inc
pop
mov
push
std
inc
cmc
outsb
fs
xor
xchg
xchg
inc
mov
xchg
nop
in
pop
and
mov
mov
sar
and
stos
test
jbe
testb
ljmp
jle
in
jl
test
out
sub
jbe
mov
pop
push
call
add
jno
jns
jl
pop
dec
cwtl
mov
lods
xchg
xchg
pop
sar
test
jbe
mov
jns
shl
insl
repnz
or
jb
push
leave
mov
sti
js
push
push
test
filds
mov
sbb
jnp,pn
xchg
xchg
je
int3
mov
mov
outsl
mov
int
add
sbb
divb
pop
jno
addl
fsubrl
out
mov
xlat
sbb
dec
mulb
inc
push
cmp
decb
inc
jle
sahf
lods
pop
or
jnp
sub
stos
movsl
mov
aam
adc
push
js
imull
sbb
iret
out
pop
cmp
dec
push
or
sub
or
rcrb
scas
ljmp
push
jbe
fdiv
into
test
lret
out
mov
ja
and
ss
sub
push
in
xor
jmp
jnp
mov
popa
rol
out
mov
xor
pop
insb
push
lods
ficompl
ja
jge
sub
outsl
mov
pop
bound
xor
mov
lods
mov
mov
icebp
stc
add
lret
push
je
add
sbb
cmp
les
enter
and
xor
js
jecxz
and
pop
fwait
popl
cmpsb
imul
arpl
or
and
sarb
xlat
vcvtdq2ps
fsubs
movsb
mov
push
call
and
lret
push
xchg
int
pop
out
xchg
test
stc
enter
iret
sub
notl
pushf
or
xchg
outsl
scas
jns
mov
les
pop
dec
mov
ja
negl
mov
mov
or
push
movsb
pop
lahf
jge
ficoml
cwtl
ljmp
ds
xchg
xchg
adc
add
daa
sub
push
mov
xor
sub
into
cmp
ss
leave
pop
cmp
sbb
imull
aaa
adcl
cmp
sub
icebp
fidivrl
shl
fmul
xor
mov
sub
push
adc
xchg
test
cmp
xchg
xor
sbb
les
leave
push
mov
add
aam
mov
push
sub
or
sub
dec
add
mov
mov
lds
stc
lods
test
and
adc
sub
xchg
adc
repnz
and
dec
ljmp
into
sarb
movsl
sub
scas
xlat
xchg
add
mov
xchg
outsl
ds
std
sbb
dec
push
in
jae
adc
cmpsb
insl
mov
mov
inc
mul
mov
out
insb
pop
jge
clc
dec
mov
mov
arpl
fstps
xor
sub
cmpl
push
stc
mov
movsl
cmp
addr16
sbb
fidivrs
sub
dec
push
mov
xchg
add
pop
push
lea
dec
adc
subb
repnz
push
push
pop
xchg
cli
sub
jae
pop
xor
cli
sbb
shl
daa
pop
mov
vcmppd
leave
out
pop
jns
test
out
jne
jne
test
cmpsb
or
rolb
fcoms
jae
cli
adc
pop
test
popa
xchg
mov
xchg
cmp
test
jb
dec
lods
dec
sti
sbbb
or
jmp
pop
out
xchg
mov
push
pop
or
xchg
icebp
lret
and
das
push
bound
cmp
gs
push
xchg
insl
push
arpl
int
rorb
sbb
sbb
cli
int3
pop
hlt
je
adc
mov
xchg
dec
stos
mov
sub
movsl
pop
and
push
fsubrs
repz
es
ja
rol
movl
jmp
dec
or
add
shrb
sbb
push
test
sbb
and
mov
mov
sbb
pop
in
lret
iret
xchg
or
int
fs
dec
lret
inc
ljmp
pop
loope
and
add
std
add
insb
int3
call
in
stos
mov
cmp
out
out
fsubs
push
hlt
push
mov
clc
adc
jno
fidivs
mov
aad
shll
xchg
movsl
pusha
call
sub
dec
adc
lea
mov
jge
cwtl
xor
aaa
xor
mov
or
xor
int
xchg
mov
sbb
push
cmp
xchg
xor
xor
xchg
mov
mov
lock
cltd
insb
cld
loope
inc
inc
add
add
and
or
jp
clc
cli
je
push
and
idivb
push
sbb
loop
cmpsb
xchg
ds
fsubs
in
jne
sub
cmc
mov
and
mov
jno
int3
xchg
aas
loopne
cltd
mov
gs
movb
mov
lods
fildl
xchg
cmp
push
js
and
or
out
sub
ds
mov
pop
fcmovnbe
fwait
mov
lea
dec
aad
mov
and
ds
iret
add
hlt
jg
aas
ret
dec
fs
cmp
xorl
int3
shll
mov
push
enter
mov
mov
fiaddl
std
sbb
sarb
jnp
add
mov
cmp
in
cmpb
xchg
pop
fsts
pop
insl
in
and
add
test
dec
jns
shrd
icebp
iret
ret
xchg
enter
arpl
mov
cwtl
stos
pop
outsb
pop
cli
ficoms
fildll
lret
gs
adcl
cmp
and
cmp
jg
xchg
stos
push
in
popa
sub
push
jg
jle
ja,pn
mov
imul
es
ss
jno
xchg
pop
loope
jle
sbb
and
aad
pxor
add
cs
fdivrs
rcrl
mov
mov
shrl
mov
jb
inc
pusha
sarb
fsubl
js
test
js
push
or
push
pop
addr16
add
sbb
adc
xor
das
js
scas
pop
pop
jmp
sbb
dec
rolb
das
cltd
lods
cmp
and
outsb
xor
fstps
jmp
and
pop
and
mov
cmp
push
rcr
stos
aad
pop
sbbl
shl
rcl
and
xchg
sub
jg
lds
add
into
shrb
aad
fisubrl
mov
add
clc
mov
gs
adc
sub
xchg
mov
push
orb
outsl
adc
loop
xlat
lret
or
xor
popl
rorl
and
outsb
aaa
hlt
mov
std
sar
test
jbe
cld
test
repz
dec
fldl
leave
mov
push
pop
dec
loop
dec
fsubrl
scas
aas
cmp
xchg
xor
xor
arpl
and
add
sub
and
sub
pop
test
out
adc
pop
popa
dec
lods
cltd
xchg
je
sbbb
mov
iret
hlt
fcom
push
daa
outsl
or
push
lea
pop
xchg
outsb
aad
inc
xor
inc
xchg
adc
lock
lods
push
mov
mov
orl
and
adc
dec
mov
xlat
inc
fistps
dec
cmp
shlb
jnp
mov
sti
dec
movsl
cltd
repnz
cli
sbb
sub
and
fmull
cmp
adc
jecxz
xor
in
sti
jne
push
int3
sbb
add
test
or
std
and
pop
xchg
sub
and
int3
lret
mov
pop
cwtl
pop
pop
xchg
out
dec
es
je
mov
mov
fimuls
sbb
out
xchg
in
cmpsl
pop
mov
loope
and
mov
adc
js
fwait
mov
add
in
and
popf
cmp
stc
sub
cmpb
sub
out
pop
mov
xchg
shlb
pop
daa
mov
jecxz
pop
mov
mov
scas
mov
sub
sbb
cwtl
filds
inc
jne
sub
decb
adc
inc
cwtl
das
or
incl
outsb
sahf
mov
out
or
jge
xchg
mov
push
and
stos
jbe
sbb
pop
inc
ficompl
outsl
adc
cmc
add
mov
push
xchg
mov
ret
insb
xor
out
mov
pop
dec
push
rep
outsl
xchg
cmp
aas
xchg
test
pop
pop
mov
outsl
jns
dec
pop
mov
jbe
push
sti
into
gs
or
cmp
cmpsl
out
cwtl
fidivl
xor
adc
mov
cmc
or
mov
adc
mov
cld
scas
xchg
repz
shll
mov
cmc
outsl
jo
lea
pusha
rol
js
or
jle
movl
icebp
es
fmull
arpl
pop
sub
fsts
shrb
nop
in
inc
notl
push
cwtl
pushf
push
lods
pop
add
mov
insb
mov
in
in
dec
dec
pop
or
pusha
icebp
xchg
cmp
cmc
nop
jno
jg
jbe
mov
ss
cmp
lret
loop
xchg
stos
dec
das
stos
test
sti
pop
jge
mov
dec
int
pushf
sub
stc
lods
arpl
ds
inc
arpl
sbb
loop
mov
pop
or
push
dec
lods
dec
fldenv
dec
mov
cmpsl
mov
addr16
push
or
shlb
lcall
jno
insb
enter
mov
je
cs
cmp
test
jmp
push
stos
add
jb
stc
sub
subb
push
cmp
jae
outsl
in
in
mov
lcall
ds
std
idiv
jle
insb
and
popa
mov
in
jmp
lahf
or
inc
shrb
imul
inc
adc
shrb
mov
push
in
popf
cmp
sub
xchg
cmp
sbbl
lahf
xchg
test
ret
lock
popa
mov
js
or
mov
mov
adc
add
aaa
andb
cwtl
js
add
cmp
lock
xchg
sbb
and
enter
jo
movsb
sti
and
mov
add
test
pop
aad
sti
pop
sub
addr16
cmpsb
in
inc
add
cwtl
pop
push
arpl
test
adc
push
repz
orb
call
mov
add
adc
rcll
jg
fbstp
and
nop
aad
jo
inc
push
scas
jp
pop
xchg
lods
call
jp
stc
out
adc
loopne
or
arpl
push
clc
push
xchg
test
dec
into
xchg
cmpsl
sti
dec
mov
cmp
jno
mov
in
ljmp
rsqrtps
sub
lock
add
stos
lcall
rolb
sahf
popf
in
jns
mov
imul
scas
cli
in
insl
call
outsb
add
cli
test
push
xchg
adc
and
in
fldt
adc
lret
test
mov
jle
icebp
xchg
leave
dec
loop
addr16
mov
mov
stos
aam
ds
lcall
imul
xchg
mov
add
sahf
dec
pop
into
pusha
in
cmpsl
loop
fdivr
push
sar
into
inc
cmc
mov
ret
mov
inc
addr16
push
aas
icebp
test
pop
enter
mov
add
mov
lds
pop
pop
out
xchg
nop
xor
cmp
xchg
std
inc
cmp
clc
mov
jge
insb
es
mov
dec
test
xchg
sub
dec
shlb
and
add
pop
mov
pop
cmpsl
mov
inc
add
stc
pop
lods
and
lock
push
adc
enter
push
imul
pop
mov
cmp
mov
push
dec
subb
popf
insb
lahf
add
aam
mov
movsl
sbb
sbb
xchg
and
push
xor
dec
mov
insb
dec
jg
stos
movsb
and
in
mov
mov
test
icebp
sub
adc
stc
in
movsb
fdivr
mov
cld
cmc
adcl
mov
cs
push
fistpl
and
cmp
lret
adc
repnz
cmp
mov
jecxz
jnp
adc
inc
and
push
loope
test
leave
and
movsl
add
bound
cmp
mov
sarb
test
push
jge
gs
leave
mov
inc
loope
add
and
add
push
cs
mov
test
pop
ficoms
js
xor
jne
xchg
sub
mov
icebp
inc
out
insb
mov
outsb
mov
orb
mov
inc
mov
mov
push
stos
scas
push
and
ss
xchg
enter
je
inc
mov
ss
sbb
enter
sub
icebp
enter
mov
sub
gs
lret
fs
lock
or
loopne
lcallw
scas
inc
test
shll
jbe
outsb
cli
shlb
push
push
jno
test
fsubs
cmc
cmpsb
push
pop
scas
dec
pop
mov
stos
and
push
inc
into
out
bswap
lds
cmc
inc
push
xchg
clc
ret
jg
fsubp
add
push
popl
lret
bound
test
sbb
loop
adc
lret
dec
lret
jae
xchg
sub
jecxz
jmp
xchg
sub
fmull
stos
shrb
or
jnp
repz
pusha
adc
pushf
pusha
in
push
xchg
lret
gs
jne
out
pushf
fbstp
mov
adc
stc
fcmovu
nop
test
or
add
aas
fisubrl
fildll
push
xor
shrl
fmull
sbb
jns
imul
repz
push
xor
xor
js
std
dec
fdivs
fadds
add
sub
mov
cli
out
mov
loope
out
push
sub
inc
out
pop
add
inc
cmpsb
jle
les
mov
hlt
mov
mov
add
xchg
dec
cmp
aad
jmp
inc
jecxz
mov
shll
xchg
pop
sub
mov
enter
clc
in
push
mov
fwait
pop
testl
mov
mov
or
sbb
xchg
ret
mov
inc
cmp
enter
dec
xor
scas
pop
xor
push
dec
enter
mov
ret
cmpsb
mov
inc
andb
rol
add
iret
cmp
jae
cmp
and
sub
inc
movsb
ds
jne
mov
add
cld
xor
imul
das
idivb
pop
imul
ss
mov
xchg
or
jnp
jmp
jg
int3
das
clc
insl
frstor
mov
rcr
cmp
stc
pop
outsb
xor
loope
dec
ror
shr
jg
jae
xchg
shl
aad
cmpsb
daa
sti
pop
add
imul
xor
push
pop
dec
testb
rol
push
repnz
cmc
cld
push
and
pop
int
dec
xchg
outsl
mov
add
lahf
mulb
in
popa
cld
rclb
mov
fnsave
or
jle
bnd
hlt
mov
and
loopne
mov
shlb
xchg
mov
or
add
jmp
int
mov
setno
imul
mov
lret
and
cli
mov
mov
add
pop
sbb
add
cli
scas
outsb
xlat
scas
fildl
mov
lock
sbb
mov
sub
mov
jg
fwait
dec
mov
rorl
dec
aaa
testb
sahf
push
repz
inc
xor
and
and
xor
lods
sti
mov
pop
loope
popf
jb
loopne
icebp
cmpsb
mov
dec
fisubl
das
mov
lret
fsubs
ja
push
mov
hlt
mov
mov
mov
inc
pop
xchg
enter
sub
jns
xor
fldpi
lods
push
shll
mull
orb
sbb
lea
xor
arpl
fiaddl
xchg
cmp
ret
adc
or
into
and
lcall
mov
and
or
dec
mov
fstpl
xor
sbb
inc
aas
jg
sub
jl
mov
jb
and
in
mov
adc
jns
mov
je
rorb
lea
pusha
cmp
in
sbb
cmc
outsb
xor
mov
fmuls
add
sbb
mov
aaa
fdiv
jecxz
shrl
fnstenv
div
mov
xchg
pop
pop
lahf
ss
pop
lds
dec
dec
mov
mov
fildll
repnz
int
fcompl
xor
inc
mov
mov
mov
nop
inc
jae
ret
pop
divb
sub
push
add
pushf
out
lret
inc
ret
sub
sbb
xor
fsubp
xor
stos
ds
leave
rcll
inc
into
mov
mov
add
lret
dec
mov
cs
dec
sahf
scas
nop
scas
push
add
sub
mov
aaa
xchg
sti
fisubl
cmp
pop
shll
pop
out
cmp
out
sbb
rcl
jmp
testl
sub
push
or
xchg
pop
pop
push
insl
mov
dec
push
push
and
sahf
lock
jl
jne
pusha
pushf
popf
push
fwait
pop
out
sbb
jmp
and
push
jg
rolb
push
adc
adcb
pop
mov
outsl
dec
sbb
mov
gs
jae
pusha
add
xor
or
ret
lds
pop
lahf
mov
jb
outsl
jle
mov
mul
add
lods
lods
lcall
out
inc
xchg
pop
aaa
test
push
xor
fwait
jb
aad
insb
out
insl
jmp
movsb
popf
inc
mov
popa
jae
mov
adc
mov
add
call
xor
push
outsb
dec
xor
inc
popf
imul
dec
ja
movsb
adc
jecxz
insb
adc
fildl
rcr
clc
dec
std
mov
mov
pushf
mov
cmp
adc
pop
pop
cmp
mov
fists
insl
cmc
push
in
and
push
jecxz
fbstp
lea
icebp
sub
pop
mov
mov
pusha
fs
fsts
add
inc
inc
dec
mov
pusha
sub
lods
or
fistl
jnp
roll
imul
xchg
push
scas
cmpsb
in
iret
pop
jecxz
mov
adc
mov
das
adc
jl
enter
repnz
xchg
mov
ds
sbb
push
add
and
mov
call
scas
ss
push
or
mov
fprem
push
xor
stos
inc
ja
movsb
jl
pop
daa
sub
idivb
sbb
loope
or
stc
mov
pop
xchg
arpl
stos
or
test
mov
xchg
lcall
pcmpgtw
inc
enter
jle
pop
mov
call
jg
mov
pop
fcomps
lods
cmp
out
xchg
mov
fidivl
cmp
fildl
and
cmpsb
sbb
jnp
subl
sub
sti
jns
stos
xchg
lods
jbe
jno
fwait
das
clc
xchg
jnp
inc
out
add
cmp
or
sbb
dec
push
adc
add
mov
xor
sbb
out
pop
pop
idivb
ljmp
and
mov
cwtl
aas
or
icebp
pop
mov
jmp
cmp
xor
push
mov
push
into
lahf
adc
sbb
sbb
mov
fsubs
into
test
cmc
inc
js
je
lods
inc
mov
ljmp
imul
lea
out
mov
add
scas
dec
add
jne
add
imul
cmp
mov
lret
dec
sysenter
cmpsb
lret
imul
lret
adc
mov
mov
lret
push
jmp
lcall
pop
inc
sahf
push
in
das
sbbl
imul
js
cmp
sub
add
mov
insb
shlb
pop
fwait
add
dec
push
pop
pop
mov
out
movsw
ss
mov
xchg
mov
push
test
jne
cmp
test
test
sbb
mov
add
sub
aaa
xor
fs
ljmp
mov
test
and
mov
rclb
mov
xor
mov
pop
scas
pusha
sbb
shlb
mov
cltd
icebp
data16
and
loop
sub
xor
sbb
bound
sahf
rcrl
mov
or
push
mov
add
mov
cld
add
test
or
loopne
xor
push
out
mov
call
movsb
in
jnp
mov
adc
inc
aaa
inc
aaa
arpl
cli
add
loopne
lcall
pop
mov
push
lea
mov
push
and
clc
out
fs
jns
add
lea
fstps
add
clc
pop
xchg
xchg
or
adc
push
fdivrl
inc
pushf
imul
stos
out
enter
xchg
icebp
pop
fstpl
dec
push
adc
sub
jmp
push
int
adc
cld
and
push
xor
sti
jge
jns
push
fwait
je
jbe
xchg
out
dec
sahf
xor
frstor
aaa
int3
sub
cli
scas
mov
inc
cwtl
lods
pop
mov
fisubrl
cltd
daa
ja
inc
clc
mov
pop
cs
xchg
adc
push
jno
pop
mov
aaa
js
icebp
div
jecxz
popa
sub
sub
push
pusha
popa
pop
xchg
mov
insl
inc
dec
popf
dec
and
mov
mov
inc
pop
and
cmp
cmp
dec
imul
mov
pop
and
xor
sarl
mov
dec
in
inc
shrb
xchg
or
inc
lods
aaa
je
jns,pn
je
in
mov
aam
or
adc
mov
mov
repz
push
sub
stos
sub
ficompl
cltd
pushf
daa
sbb
mov
out
inc
iret
stos
xchg
and
in
cmp
test
dec
loop
sbb
push
cmp
xchg
imul
test
xchg
cltd
test
push
in
in
jle
andl
arpl
mov
push
ss
mov
imul
dec
add
jae
and
mov
fisubrs
sbb
test
addb
and
mov
jbe
test
movsl
movsl
inc
repnz
clc
and
stos
xor
xor
xchg
cmp
mov
popa
or
bnd
test
jl
into
xor
dec
icebp
jno
fwait
pop
jp
or
jno
out
jns
mov
out
leave
in
ja
js
scas
push
adc
xor
cmc
pop
sbb
out
xchg
test
sahf
cli
int3
lahf
hlt
inc
push
shl
or
loopne
or
jl
mov
sbb
rcl
adc
inc
out
lret
sbb
arpl
inc
dec
fidivrs
push
adc
aaa
stc
sbb
mov
divl
adc
in
stos
pop
fcmovbe
push
shl
dec
push
add
rclb
mov
pop
mov
xchg
dec
outsb
jnp
lds
jecxz
add
push
sbb
inc
push
sahf
icebp
es
hlt
aad
mov
mov
push
inc
adc
imul
das
sahf
jg
xor
jne
and
inc
les
dec
fsqrt
stos
scas
mov
out
in
push
or
in
xchg
rcll
gs
clc
bound
push
stc
mov
and
lods
or
mov
add
mov
pop
aam
pop
ljmp
push
pop
ficomps
inc
cmp
mov
loopne
in
sbb
mov
imul
test
out
or
adcb
shlb
sbb
cwtl
add
in
ja
dec
and
test
push
mov
mov
or
dec
clc
sub
inc
add
push
out
bound
icebp
push
jo
enter
and
sarl
sub
addr16
xchg
lods
and
hlt
inc
sbb
sbb
call
jns
xchg
mov
mov
jae
sbbb
outsb
dec
push
dec
jae
das
aas
cs
jb
cmp
or
and
sbb
aad
dec
sbb
data16
and
push
push
adc
dec
je
cmp
or
inc
outsl
adc
sub
sbb
pop
imul
add
jb
sbb
push
mov
mov
repnz
jae
jecxz
ljmp
nop
sbb
adc
test
adc
sub
dec
lret
mov
das
shr
pop
lock
ret
and
outsb
mov
add
mov
or
xchg
sbb
cmp
dec
imul
or
cmc
mov
xchg
cwtl
cmp
add
cmpsl
sub
cmp
lock
sub
rclb
sub
movsl
outsb
outsb
repz
imul
mov
ftst
xor
ret
lea
iret
push
in
mov
icebp
sbb
lret
dec
jmpw
adc
pop
mov
in
push
pop
lcall
pop
mov
sub
addr16
loopne
mov
pop
les
lds
aad
sub
or
divb
pop
repnz
ret
mov
cltd
arpl
outsl
mov
aad
stos
xor
dec
adc
jg
jmp
lods
lock
popf
mov
mov
mov
push
dec
sbb
lock
cwtl
and
mov
pop
ds
mov
mov
movsb
push
aaa
shll
es
js
mov
scas
jmp
cmp
sub
jbe
pop
adc
or
add
adc
xchg
or
mov
ret
out
shl
push
adc
jg
add
cmpsb
jecxz
mov
cmc
cmp
sub
or
aas
push
jle
dec
mov
adcl
cmp
mov
movsb
loopne
scas
mov
fisubrs
leave
push
dec
sub
inc
dec
daa
scas
cmp
fs
insl
xchg
jmp
inc
and
xchg
clc
inc
int3
aam
xchg
xorb
lret
inc
jno
aad
js
mov
aaa
cmp
test
rcll
ret
cmp
lock
jle
cld
mov
dec
add
inc
and
or
push
out
lcall
adc
movsl
adc
mov
cli
push
sub
out
loope
push
jno
dec
xor
in
mov
jmp
push
adc
push
movsb
test
mov
cmp
mov
scas
out
aas
cmp
negb
xchg
cmc
sbb
xorl
adc
pop
bnd
xor
dec
add
in
repz
jecxz
mov
mov
lret
and
lret
push
add
adc
mov
jo
mov
arpl
in
cld
sbb
mov
iret
outsb
pop
adc
mov
push
andb
clc
jns
loop
mov
cmp
pushf
aad
xchg
fs
inc
push
mov
cmc
aaa
push
cmp
adc
arpl
cmp
incl
or
sbb
cltd
subb
add
xchg
ja
xor
imul
mov
lds
stos
push
jl
in
inc
data16
sub
ret
pop
xor
lock
mov
repnz
outsb
jl
mov
imul
fbld
out
sbb
addr16
test
in
push
subb
dec
fwait
pop
xor
push
push
lret
nop
js
cli
adc
mov
pushf
jg
dec
pop
out
out
fisttpl
adc
mov
inc
fs
push
xor
pop
das
jb
icebp
push
out
sub
inc
test
aaa
imul
pop
jg
aam
sysexit
mov
mov
in
xor
out
bound
mov
push
inc
daa
jbe
adc
dec
jnp
sbb
jns
cs
cmpsl
cmp
and
clc
inc
sbbb
stc
orl
aad
testl
xor
popa
outsl
je
xchg
xchg
fiadds
cmc
je
pop
ret
aaa
test
stos
cmp
mov
cs
xor
imul
mov
jmp
addb
add
push
into
push
mov
add
cmp
sbb
testb
test
dec
inc
cmp
lea
mov
insl
sbb
push
xor
jmp
nop
mov
mov
push
inc
jg
out
in
cmpsb
in
jno
fmull
hlt
mov
push
cmpsl
aad
sbb
dec
shll
insl
imul
jmp
pop
dec
cld
mov
scas
adc
in
xor
xchg
scas
fwait
pop
jge
lret
dec
add
jo
mov
andb
in
leave
mov
sbb
jle
xlat
scas
xorb
pop
jge
enter
and
stos
mov
and
sbb
pop
notl
inc
lret
add
or
add
mov
fdivr
test
xchg
adc
cmp
inc
add
ds
cld
out
mov
sbbw
xchg
jl
jp
adc
mov
lcall
mov
cmp
in
add
sbb
imull
xchg
mov
jne
add
push
dec
sbb
sub
lcall
jb
pushf
and
inc
sub
inc
adc
icebp
pop
cs
push
paddusb
mov
out
pop
mov
nop
gs
inc
repnz
mov
pop
sti
sti
xor
lods
ja
xchg
shrb
xor
jns
pop
mov
test
out
jbe
pop
jl
js
xor
ficoml
outsl
or
iret
pop
mov
jbe
dec
inc
in
dec
sbb
divb
sahf
mov
add
sbb
insl
xchg
mov
int3
roll
out
rcrl
push
shll
ja
jo
sub
mov
xchg
daa
push
and
je
push
test
lcall
adc
scas
adc
fdivp
xchg
xor
sbb
mov
add
test
and
insl
enter
cmp
dec
adc
aaa
and
cmp
sbb
dec
push
and
push
imul
outsl
int
xor
addl
mov
push
push
jg
outsl
mov
push
or
mov
in
push
jnp
ret
fwait
lea
push
cmpb
inc
pop
mov
cld
insb
push
mov
insl
ja
cmpsl
jp
lret
les
mov
inc
icebp
jno
leave
dec
shll
cmp
and
xchg
pop
push
mov
or
or
loopne
push
jmp
js
push
scas
cmpsb
pop
loop
fcmovbe
and
sbb
push
stos
rcrl
and
test
testl
das
add
cld
inc
push
inc
push
xor
sub
xor
rolb
pop
out
mov
cltd
mov
pop
jg
test
addr16
shll
divl
into
fidivrs
pop
inc
cmp
test
xchg
jl
push
popa
cmp
inc
push
or
into
cmp
jo
in
outsl
std
repnz
sub
xor
inc
jb
inc
outsb
mov
lcall
cmp
push
in
pushf
cmp
mov
lock
lcall
shlb
fdivrl
dec
mov
mov
in
stos
xchg
pusha
xstore-rng
cmpsl
add
xchg
and
subb
jnp
ljmp
scas
arpl
cmpsb
rclb
sarl
jg
or
or
mull
sti
inc
fldt
push
rorb
cmp
push
icebp
jno
inc
and
ret
adc
mov
std
cmp
jne
fstpt
sub
psadbw
popf
cmp
rcl
mov
adc
call
out
pop
jno
dec
iret
jns
stos
mov
ja
jecxz
in
sbb
stc
ja
addl
cmc
jbe
mov
mov
sbb
sbb
pusha
fs
xchg
sub
in
ror
insl
mov
lock
int
jbe
pop
mov
jae
inc
jne
mov
int
mov
push
pop
add
mov
or
addr16
push
lods
mov
push
sbb
pushf
inc
dec
cmpsb
lock
dec
sub
cld
jg
out
dec
sub
outsl
js
add
in
mov
adc
xor
xor
add
jno
or
xor
outsb
stos
test
pop
push
xor
add
dec
mov
adc
jae
dec
insl
mov
jbe
shll
add
jl
cmp
aam
cmc
insb
imul
inc
in
aaa
shll
mov
fdivrs
loopne
add
in
rcll
nop
mov
addr16
movsb
ficomps
out
mov
xor
daa
imull
jo
lcall
aam
subl
mulb
dec
xchg
ror
dec
jne
cmpsl
jbe
inc
stos
scas
call
in
ja
xor
test
orl
fcoml
and
cmp
lret
idivb
or
adc
rcrl
out
shrb
sbb
testl
or
push
aas
mov
mov
jae
add
push
cs
repnz
xchg
bnd
inc
scas
add
out
jnp
mov
cmp
push
jno
xchg
fisttpll
aas
pushf
push
test
adc
loopne
rcrb
mov
xchg
jo
js
out
fcomp
mov
fisttpl
loopne
fistpl
ret
or
test
or
mov
xchg
hlt
and
cmpsb
imul
mov
rcrb
arpl
and
leave
sub
jo
ja
cmp
rolb
test
jg
movsl
sub
mov
js
idivb
xchg
cmp
out
cmc
mov
pop
or
add
shrl
rcll
push
ret
cmp
ja
and
rcr
sub
dec
cmp
lret
aas
jno
jecxz
sub
arpl
cwtl
imul
ljmp
mov
mov
sbb
leave
mov
sbb
cs
jae
nop
mov
xchg
out
xor
inc
jge
mov
pop
mov
mov
adc
sub
mov
lods
shlb
mov
ljmp
arpl
xor
shlb
cmp
loope
adc
mov
in
and
cld
mov
pop
outsb
push
mov
scas
sub
mov
out
mov
push
popf
enter
insl
cmc
mov
sub
dec
fisttpl
lret
mov
add
cmp
xchg
inc
mov
lahf
in
pop
push
sarl
fcomp
in
loopne
inc
ficompl
and
aam
fists
push
sub
sbb
test
jp
cmpsb
xchg
dec
mov
incb
and
pop
sub
adc
cmp
scas
mov
lea
cmp
cld
ss
pusha
testb
sbb
and
out
shrb
mov
das
fisttpll
bound
in
and
mov
mov
out
xchg
int
and
insl
mov
and
pop
popf
cmp
dec
iret
xchg
test
or
shlb
and
iret
sarl
in
dec
pop
pop
daa
sub
xorl
es
adc
adc
inc
in
rorb
sahf
pop
push
shlb
fsubl
xor
add
adc
clc
dec
test
mov
jp
push
cmp
push
adc
sub
push
jb
jno
mov
enter
dec
cmp
cwtl
pop
sub
insl
les
dec
pop
cmp
je
add
cmpsl
out
inc
movsb
pop
or
out
sub
aam
cmc
xchg
xor
xchg
fadd
ret
sbb
imulb
xor
test
iret
popa
xchg
fsubrs
out
sbb
bound
mov
cmovp
xchg
mov
mov
int3
xchg
mov
jl
mov
sub
jnp
sub
out
mov
xchg
lods
daa
aam
fcompl
add
test
mov
add
fnstcw
or
loope
icebp
jp
nop
sbb
push
mov
pop
call
into
ror
std
and
or
push
shrb
or
xchg
cltd
mov
cmc
sbb
xlat
cmp
mov
jbe
insl
daa
hlt
mov
adc
push
mov
imul
or
ret
sbb
inc
push
incl
fdiv
mov
lods
frstor
adc
ljmp
push
xor
add
jle
hlt
movl
pop
loop
addb
lock
and
push
addb
sahf
icebp
enter
mov
and
lret
mov
mov
jg
fdivs
jns
pop
adc
stos
adc
pop
call
out
outsb
mov
xchg
inc
scas
cmp
add
push
xor
stos
push
and
popf
fimull
cmpb
stos
jo
adcb
adc
dec
icebp
dec
or
shr
jge
dec
fistpl
call
stos
pop
stos
gs
inc
push
mov
mov
xchg
lahf
dec
adc
fildl
ficomps
shl
data16
mov
push
jno
and
out
scas
mov
inc
jbe
inc
sahf
imul
jg
mov
sub
and
sub
jecxz
dec
lret
out
adc
add
mov
subl
sub
in
pushl
pushf
mov
xchg
push
aam
cmp
adc
mov
cmp
and
sub
and
push
cmp
movsl
mov
jmp
pop
pop
mov
add
xorl
icebp
sbb
pop
loopne
jnp
jg
out
adc
or
push
add
fcompl
fldcw
adc
notb
jge
es
lahf
mov
xor
jae
popf
sbb
push
int
xchg
xchg
rcrl
daa
pop
aas
out
sarl
sub
add
fiadds
lods
mov
pop
adcb
mov
aaa
js
ret
cmpsl
jp
inc
xlat
inc
sbb
into
inc
cwtl
out
shrb
sahf
lods
cmp
cmp
fiadds
push
pop
aam
mov
mov
pop
xchg
mov
pop
lahf
cld
arpl
sbb
test
mov
cmp
ja
xor
cli
in
mov
stos
dec
pusha
mov
cmp
push
adc
aam
sahf
pop
mov
sub
sub
aaa
insb
scas
push
cmp
ljmp
cmp
sarl
bound
jle
sub
mov
push
out
loop
mov
sbb
sub
jmp
inc
jle
push
mov
iret
mov
shl
outsb
pop
pop
pop
clc
xchg
and
addl
ljmp
pop
jge
jg
nop
and
jno
push
ljmp
cltd
add
push
xchg
aas
or
fwait
dec
cmp
lea
fidivs
daa
add
add
xor
sti
sub
in
stos
mov
pop
popf
sbb
xor
xchg
push
lret
jle
dec
imul
mov
sbb
dec
mov
notl
mov
xchg
cmc
push
rcrb
push
cltd
adc
cld
adc
inc
shl
sub
shl
mov
into
mov
movsl
dec
in
sar
mov
xor
pop
movsl
pop
cmc
mov
test
iret
jno
mov
or
addb
xchg
and
and
sarl
call
jmp
fists
jle
fcoms
ret
mov
aam
and
xchg
jmp
dec
in
push
ljmp
cmc
and
jl
sbb
cmp
xor
leave
and
mov
sbb
push
bound
testb
xchg
mov
jo
sub
inc
iret
push
sub
aam
xchg
and
test
lahf
mov
shl
arpl
scas
or
popf
dec
dec
popa
mov
mov
movsb
sbb
mov
sti
loope
pop
enter
in
imul
test
adc
out
pusha
repnz
mov
and
pushf
push
jae
aam
or
jnp
pop
mov
cld
pop
mov
faddl
jle
adc
divb
jge
xchg
inc
xor
and
and
fisubrl
add
in
aam
decl
clc
adc
mov
outsb
push
mov
ret
cmpsl
popf
fnsave
inc
and
lods
xor
loopne
xchg
loopne
lea
lods
in
dec
jb
and
mov
lds
pushf
xor
cmp
outsb
xchg
in
pusha
pop
shlb
inc
mov
out
or
adc
fadds
and
sbb
ret
imul
lret
adc
loope
mov
add
fsubrs
popa
cmp
ds
sbb
pop
ret
cmpb
cmp
jp
pop
outsl
jg
sub
enter
jecxz
mov
inc
ja
clc
into
dec
hlt
add
mov
lods
pop
es
xchg
int
and
mov
adc
inc
ljmp
pop
sarl
out
or
xchg
xorb
stos
test
icebp
daa
ss
pop
arpl
cmp
sub
imul
sbb
sub
and
into
lods
add
fs
clc
push
push
adc
mov
fdivrl
pop
test
cld
mov
jno
mov
pop
sub
cmpsb
adc
pop
bts
sbb
sub
cmp
adc
cmp
fidivrl
and
or
jns
mov
xor
jle
cmc
pop
sbb
idiv
fcomip
sbb
bound
cmc
cmp
pop
mov
pusha
adcl
cmp
cmp
fadds
xchg
push
pop
mov
jbe
xor
push
xor
cmpsb
test
sbb
and
inc
jl
fcom
test
pusha
into
push
or
fcoms
clc
lods
test
fstpt
in
inc
enter
adc
mov
gs
movsl
inc
sub
sub
sbb
stos
loopne
cmpsl
mov
fdivrs
in
jmp
jp
lods
mov
add
push
imul
fldl2e
int
cmp
repnz
push
shll
or
je
ds
push
sub
sbb
fsubrl
jmp
xchg
xchg
or
dec
xor
loopne
into
adcl
inc
imulb
in
add
xlat
push
shrl
outsb
sub
cmp
mov
jbe
sub
test
push
fldt
fsubs
xor
ret
mov
cs
push
insb
aam
outsb
aam
jg
sbb
addr16
sbb
xchg
mov
in
out
jbe
test
and
lock
int
call
fwait
movsb
mov
and
cs
jnp
dec
fildl
in
sbb
sub
pushf
outsb
fwait
clc
out
lods
outsl
jne
jge
lcall
iret
mov
in
fisttpl
es
notb
pop
out
mov
fiadds
data16
enter
mov
xor
mov
sub
gs
mov
cli
mov
mov
pop
mov
jb
mov
pop
incb
add
test
fdivp
inc
es
adc
lods
test
cmp
ret
jb
pop
cmp
lods
push
paddsw
repnz
dec
jb
sub
lret
pop
sub
insl
cmpsl
jno
lret
cld
xchg
jle
shlb
and
shl
cltd
inc
dec
mulb
mov
push
mov
cmp
add
lea
xor
jp
xchg
mov
fdivl
movsl
jmp
inc
scas
mov
lret
xchg
xor
mov
xchg
dec
dec
pop
int
adc
jle
or
xor
or
imul
jo
dec
mov
enter
mov
loopne
jnp
cs
stos
pop
xor
cltd
inc
ss
gs
adc
or
adc
pop
jbe
stos
xor
xor
call
dec
dec
bound
mov
sub
imul
jp
jle
cmp
xchg
add
inc
xchg
adc
mov
insb
addl
in
subl
fldcw
and
dec
into
pop
xchg
jno
int
jbe
xor
aad
xor
addb
sub
push
cmpsl
jecxz
inc
jecxz
mov
jo
les
in
xor
sbb
test
aad
mov
push
bnd
dec
cmpsb
aad
fs
fs
sahf
int
inc
test
jnp
movsb
jmp
pusha
pop
hlt
adc
mov
test
test
insb
xor
stc
mov
sub
jae
xchg
fcmovbe
dec
fcoms
jge
inc
and
repz
mov
sbb
adc
dec
iret
icebp
cmpsb
sub
jns
ret
push
cmp
daa
outsb
mov
mov
pop
xor
je
dec
aaa
decb
jb
imul
and
call
cwtl
sbb
inc
outsb
dec
pop
sub
sbb
mov
bound
mov
mov
xchg
jo
data16
add
adc
hlt
mov
iret
test
test
mov
mov
jno
out
add
lea
ss
lods
test
addb
xchg
pop
cwtl
mov
mov
lods
arpl
mov
shlb
jae
pop
rolb
push
cmp
lcall
push
gs
sbb
or
ss
sbbl
sub
inc
mov
ss
je
lahf
fldl
xchg
shl
enter
dec
addb
add
jno
and
xchg
fadds
out
test
iret
pusha
mov
push
mov
add
cs
sbbb
inc
xchg
mov
lret
rorl
push
cmp
and
pop
mov
frstor
mov
jnp
ret
call
or
in
movsl
push
jo
pop
std
es
add
jmp
push
lea
jns
mov
or
arpl
enter
stc
jnp
js
stos
or
and
push
or
adc
loope
stc
bound
icebp
fdivrs
adc
mov
cmp
lock
and
rcrl
aas
pop
shrl
lock
mov
add
push
mov
shrb
adc
push
movsb
nop
xor
xor
cmp
and
pop
fistpl
leave
xchg
data16
rcrb
popa
push
or
enter
xor
sti
mov
dec
cmp
push
jmp
inc
cmpsb
cmp
mov
pop
dec
fs
pop
popa
scas
fwait
xchg
jp
lea
inc
ds
rcl
pop
insl
out
dec
repz
and
sub
idivb
inc
lahf
xor
bound
pop
mov
ret
sub
loope
jns
addr16
orps
cmc
mov
xor
push
stc
neg
pushf
hlt
mov
sbb
sub
jp
loope
jnp
and
stos
aaa
lds
lds
sub
lock
mov
rcrb
push
jmp
mov
in
jno
add
in
fistps
fiadds
out
cli
pop
mov
inc
sahf
cltd
mov
sbb
stos
jmp
ret
cld
pop
xor
inc
push
into
clc
add
lcall
push
mov
xchg
outsb
inc
jnp
movl
ja
bnd
pop
fsts
xchg
mov
in
roll
sub
enter
aaa
xlat
lea
call
add
ljmp
fists
inc
cltd
leave
or
inc
xchg
cld
mov
mov
mov
cmp
pushf
jo
sub
mov
out
push
mov
aam
or
repz
je
cld
lcall
push
sub
add
dec
lods
mov
fnstenv
cmp
ljmp
mov
imul
in
sbb
inc
addb
subb
pop
mov
aam
xchg
jp
cmpsl
mov
push
dec
fwait
outsl
jb
pop
push
push
push
rorl
sbb
sub
fs
fs
xlat
jmp
stos
or
call
mov
cmp
fs
icebp
or
push
sub
out
jle
addr16
push
dec
push
cmp
nop
pushf
test
sti
adc
mov
insb
roll
jae
jge
addl
fistps
xchg
in
shl
popf
in
out
jmp
mov
cmpb
add
popa
test
lds
rorl
icebp
push
mov
outsl
mov
lret
lock
clc
test
cmpsl
dec
test
arpl
je
push
lea
push
pop
inc
inc
repnz
cwtl
push
gs
mov
mov
addr16
lds
jg
xor
xchg
icebp
cmpsl
mov
daa
push
mov
jae
sbb
push
orl
hlt
pop
iret
adc
gs
imul
insb
push
push
out
es
clc
sbb
sub
push
addr16
pop
xchg
mov
mov
lds
pushf
adc
call
pop
push
mov
add
jo
int3
imul
orb
cli
mov
sbb
cltd
incl
shll
scas
sbb
mov
pusha
adc
push
sub
push
lods
mov
lahf
jp
and
push
xor
jmp
mull
shlb
andl
or
jae
dec
mov
or
push
mov
pop
movsb
push
cmp
pusha
stos
adc
or
popa
sarb
adc
gs
sub
aam
push
lcall
das
mov
into
ja
and
dec
inc
push
jb
push
jecxz
scas
xchg
xchg
test
mov
add
dec
mov
ficoml
ds
cmp
add
loope
les
loope
xor
add
adc
sti
dec
pop
inc
lds
mov
pop
cmpsb
or
and
jge
inc
out
mov
rolb
fbld
fidivrl
add
xchg
push
negb
sbb
or
sahf
or
push
mov
dec
out
lahf
lock
aaa
inc
cmp
lock
push
jno
notl
nop
fdivrs
sbb
dec
aad
jne
scas
push
lahf
lcall
and
adc
push
int3
pop
or
shlb
mov
jo
cld
mov
xor
jle
mov
jae,pt
xchg
and
lock
cld
xchg
outsl
sbb
enter
push
call
clc
sbb
arpl
jp
and
cmp
das
push
mov
mov
roll
sarb
lods
cmp
movsl
dec
mov
dec
bound
mov
inc
rorb
add
loop
or
pop
ret
test
mov
mov
enter
dec
cwtl
sbb
incl
mov
pop
aam
lret
adc
push
cmpsb
mov
test
lcall
sub
or
jg
push
daa
pop
movsb
lock
jb
ss
pop
scas
arpl
dec
sub
test
push
out
jp
repz
aas
lcall
fs
xor
rolb
jmp
push
arpl
das
imul
dec
push
sub
in
js
pop
test
cltd
lret
arpl
sub
lds
out
out
mov
stos
movsl
add
cmpsb
add
jl
jns
pop
jmp
xchg
cli
loop
mov
and
mov
mov
mov
push
sub
or
imul
adc
data16
arpl
jne
decb
divb
pop
pop
sbb
push
pop
sarl
mov
mov
sub
sub
xlat
es
mov
mov
lds
in
or
mov
repz
rcrl
inc
add
and
adc
adc
out
cwtl
ret
cmp
das
cmpsb
idivb
fisubrs
stos
sub
push
test
dec
insl
mov
sub
dec
stos
mov
sub
mov
ljmp
orw
mov
aad
mov
lods
pop
rorb
popf
sbb
cmp
xchg
jl
inc
cli
loop
not
inc
js
pop
cltd
movsl
pop
fmull
into
push
adc
push
outsb
aad
pop
adc
pop
adc
test
lahf
dec
sahf
fldcw
sub
or
mov
subb
sub
and
in
jle
push
out
out
xchg
and
xchg
into
push
sbb
lods
int3
push
fcom
mov
pop
sub
loop
xlat
pop
jbe
cs
dec
push
outsl
jb
sub
push
popa
dec
nop
xlat
fstpl
test
test
stos
jbe
push
sahf
int3
xor
shlb
jns
cltd
xor
xor
mov
dec
mov
lods
popf
pop
sbb
sahf
hlt
ljmp
out
inc
xor
add
cmovae
jecxz
mov
xlat
adc
sbb
arpl
cmc
mov
and
outsb
or
iret
dec
sahf
adc
lea
rcll
pop
stc
test
lods
sarl
fstl
dec
pop
in
mov
or
rorl
mov
mov
ss
cmp
jb
sbb
repz
aad
loopne
ret
cli
insb
dec
in
cs
xchg
stos
cmp
inc
jnp
les
stc
push
or
pop
push
or
inc
or
xchg
dec
jmp
lcall
xor
xchg
int3
mov
fists
add
pop
lock
push
scas
mov
mov
cltd
sbb
dec
jae
sbb
xchg
pusha
icebp
and
mov
aaa
inc
pop
dec
lods
xchg
scas
sub
mov
lret
mov
iret
adc
sahf
add
or
mov
out
jbe
fbld
out
push
lock
push
mov
cli
fwait
cmp
sbb
mov
daa
les
sbb
and
and
xlat
daa
sub
sub
test
or
out
test
mov
mov
mov
test
sub
or
pop
mov
cmp
fmull
lods
and
repnz
faddl
mov
addr16
cmp
cmpsb
xchg
lea
movsl
xor
out
lock
cmp
js
scas
inc
pop
mov
addl
xlat
decb
cmp
orb
ljmp
push
int3
pop
mov
push
sub
daa
sbb
imul
jo
iret
xchg
adc
push
xor
popl
cli
pop
rclb
mov
jnp
sbb
cmp
int3
xor
sub
leave
pop
leave
js
lock
clc
inc
push
out
mov
mov
inc
sbb
loopne
adc
mov
mov
aam
adc
addr16
das
andl
sbb
cmpsl
or
cld
int3
lods
stos
test
mov
divb
repnz
sti
mov
iret
cmp
mov
imul
out
jae
addr16
enter
cmc
xchg
or
or
shlb
mov
jb
xchg
and
ds
scas
cmp
mov
jae
shll
inc
js
addr16
aaa
ds
adc
jmp
add
fistpl
pop
mov
pop
adc
daa
cmp
xchg
sub
repz
jmp
dec
mov
cmpsw
sarl
and
hlt
test
jg
lods
cmp
mov
mov
jbe
in
dec
mov
ss
cld
mov
pushl
in
jg
sub
add
push
adc
pop
xchg
pop
mov
stc
push
out
mov
cld
jecxz
push
and
cwtl
aaa
mov
aaa
sbb
cmp
aam
push
popf
mov
daa
cwtl
pop
mov
or
xchg
punpckhbw
inc
pop
ficompl
or
pop
stc
in
jp
mov
push
gs
jmp
in
cmp
sub
pop
xchg
cwtl
xchg
cli
jge
jne
pushf
mov
add
adcl
ds
xor
icebp
insb
aas
rol
adc
add
lret
pop
adc
inc
and
pop
add
add
ds
jb
or
adc
int3
pop
xlat
adc
sub
sub
bound
mov
sub
mov
add
dec
pop
movsb
bnd
xor
faddp
add
add
push
jno
cmpsb
call
inc
orb
jg
dec
add
icebp
dec
mov
loop
ds
aam
mov
in
shlb
mov
into
add
xor
push
or
sti
and
mov
out
jns
test
test
test
in
movsl
xchg
fwait
and
sti
divl
mov
or
cmp
sub
jg
jle
jle
loop
dec
push
je
xchg
and
icebp
push
jnp
push
jp
insb
cmp
lods
das
int3
jge
stos
sub
pop
mov
push
daa
movsl
fsubs
mov
and
imul
insb
mov
lods
mov
outsb
les
subb
negl
movsl
mov
adc
es
xchg
stos
ljmp
aaa
cmp
in
sbb
xor
loopne
push
in
add
pop
push
ficoml
xor
imul
repnz
push
xor
adc
and
test
mov
dec
pop
mov
sub
js
test
mov
icebp
push
mov
pushf
sub
mov
sbb
and
aaa
pusha
clc
dec
pop
sub
outsl
lds
mov
iret
testl
xchg
lock
leave
mov
out
pushf
xchg
jns
daa
fnstcw
not
push
clc
or
xchg
outsb
xor
rcr
nop
je
mov
xor
loope
idiv
sbb
sub
pop
add
dec
bnd
mov
xchg
in
dec
sub
fistps
jnp
sarl
cmp
mov
pop
push
jb
sub
xchg
dec
and
fwait
in
xchg
mov
mov
push
in
jb
or
push
cli
xor
das
loopne
imull
hlt
sbb
mov
pop
iret
daa
xor
dec
dec
sahf
jo
lds
sub
pop
inc
es
sahf
shl
jge
push
jmp
add
push
sub
pop
and
dec
fcmovbe
push
add
rorb
xor
inc
cmp
lock
mov
repz
repnz
mov
insl
dec
jg
sub
push
mov
dec
in
xchg
jb
adc
sbb
xor
add
dec
inc
cli
imul
bound
xor
test
loop
mov
lret
scas
loop
jne
xchg
fs
inc
repnz
int
insb
mov
mov
fmuls
mov
in
dec
inc
cwtl
repnz
jp
je
fcoms
sbb
fldl
fdivrp
mov
hlt
aad
cmp
jae
cmpsb
mov
outsl
mov
out
js
in
lock
leave
cmp
inc
cmp
loopne
or
push
push
sbb
mov
and
xchg
insb
mov
stos
cltd
test
ficoml
mov
jmp
shrb
fstps
adc
mov
add
pop
cmpsb
popa
xor
mull
enter
inc
sub
fmul
iret
movsl
adc
into
frstor
mov
cmp
mov
nop
dec
sarb
sub
inc
movsl
mov
dec
mov
or
cmpsb
mov
dec
push
fcmovb
addr16
xchg
mov
mov
insb
fisttpll
fisubrs
dec
repnz
in
push
sub
test
push
jnp
adc
rcr
aas
sub
in
fdivrl
cwtl
lcall
or
pop
inc
pusha
fiadds
test
cmp
fnstsw
enter
jmp
test
in
sub
cmp
in
push
mov
ret
push
fidivs
sub
jl
mov
sbb
xchg
xor
inc
mov
hlt
pop
mov
inc
gs
sub
dec
rolb
lret
or
mov
mov
pop
repz
push
dec
dec
ja
fs
test
sahf
mov
or
jns
sbb
icebp
mov
dec
adc
mov
cmp
inc
out
inc
fbstp
xabort
repz
call
xchg
dec
cmp
pop
fs
js
int
movsb
add
outsb
jbe
lds
xchg
push
pop
sahf
jb
jns
and
rorl
mov
ljmp
xchg
jp
or
sarb
je
mov
addr16
pop
shll
arpl
mov
ret
sahf
or
cmpsb
into
push
lret
mov
mov
data16
or
addr16
inc
negb
add
sub
jp
sub
or
leave
xlat
enter
out
and
jmp
jge
and
daa
adc
lods
and
call
stos
xor
rorl
cltd
push
lds
movsl
mov
push
test
outsl
xchg
adc
jno
ss
mov
push
les
and
xor
mov
movsl
mov
aaa
cs
xchg
leave
jecxz
lock
in
xchg
pop
aad
mov
xchg
pop
lods
xor
inc
push
push
mov
jno
sar
cltd
sub
insl
aas
pop
xchg
push
xlat
push
push
mov
cmc
cmp
or
or
in
adc
dec
dec
repnz
int3
sbb
xor
mov
jecxz
sahf
push
xor
or
add
add
xchg
add
add
mov
rol
lcall
js
pop
and
xchg
add
fidivl
cmc
dec
xorb
les
sub
ja
rcr
scas
jge
mov
rcll
cmc
pop
out
es
mov
adc
push
xor
fucomip
fsubl
bound
lahf
dec
popa
sbb
or
fwait
mov
or
xchg
insb
mov
fiadds
mov
xor
xchg
stos
cmp
cmp
cmpsl
mov
movsl
pop
sub
loopne
cwtl
jge
cmpsl
mov
xor
loop
test
out
adc
push
add
adc
call
pop
outsl
mov
xor
pop
les
stos
imul
in
mov
xor
dec
lock
xor
inc
add
rcll
das
xchg
test
xchg
stc
cli
imul
push
fwait
shlb
jmp
pusha
adc
repz
mov
dec
filds
mov
ja
rcl
add
clc
mov
adc
outsl
pop
rcll
into
in
sti
call
negw
and
jl
ss
leave
stos
ret
aaa
ja
movsb
je
dec
loop
bound
cmp
lds
popa
imul
mov
push
cmc
jmp
ficompl
jae
lods
cmpsb
cmp
mov
push
xchg
xchg
xchg
out
ret
fidivrs
ljmp
lods
dec
pop
inc
and
inc
sub
imul
or
lea
test
cmp
je
inc
mov
jo
rcrl
in
mov
daa
jnp
loop
xchg
mov
and
xorb
pop
inc
movsb
hlt
daa
and
int3
sbb
movsl
mov
shlb
imul
ret
push
mov
int
fcmove
scas
inc
aas
cmp
clc
aaa
push
stc
inc
lahf
cltd
adc
xchg
or
mov
lcall
fidivrl
pop
popf
push
adc
bound
xor
stos
test
enter
stos
xor
andl
or
fcmovbe
xchg
jge
out
sub
pop
push
mov
xorl
cs
mov
mov
cmp
xor
or
sbb
icebp
push
xor
iret
or
repz
mov
xor
idivl
cmc
xchg
mov
cwtl
jns
aam
mov
in
std
mov
mov
sti
sbbb
fistps
mov
push
or
push
mov
mov
and
clc
or
jle
mov
aaa
pop
ret
push
out
popa
mov
adc
dec
mov
push
pop
pop
cwtl
lret
sub
adc
sbb
ret
adc
data16
in
cmp
cmc
fdivrs
jae
jg
cmp
sbb
jg
bound
aaa
mov
pop
stos
rcrl
insl
push
inc
test
jge
pop
pop
add
pop
ret
pop
cmp
lock
aas
mov
imul
mov
nop
xor
das
mov
js
fdivrl
aam
stos
or
xchg
je
sbb
test
jge
cld
stc
jae
lock
xor
test
xchg
std
or
sub
xchg
stc
dec
bnd
pop
test
mul
insb
leave
xlat
int
cmpsl
out
dec
cld
fcmovnb
gs
scas
popf
adc
cmp
je
cltd
dec
mov
int3
push
inc
cmpsl
jae
mov
xchg
test
roll
lret
mov
xor
cmpsb
adc
xor
imull
lcall
arpl
les
icebp
and
into
mov
xchg
shl
insl
in
jp
and
cmc
data16
jns
sbb
lret
int
roll
inc
mov
js
jno
scas
dec
out
mov
push
fisubrs
es
inc
divb
cmp
cltd
dec
movsl
movsl
mov
pop
jb
or
les
stos
cmpsl
mov
xchg
sbb
mov
xchg
cwtl
lret
rcr
lahf
sahf
or
ljmp
sarb
shlb
mov
and
adc
jp
xchg
iret
inc
fs
je
stos
loope
rcll
mov
ljmp
out
lahf
xorl
jecxz
hlt
mov
fdivs
add
je
mov
mov
fstp
gs
scas
jmp
js
out
and
push
jae
fs
in
mov
inc
mov
sbb
in
mov
jle
out
push
jp
fiadds
loopne
sbb
mov
or
clc
imul
mov
idivl
test
add
outsl
jecxz
cmp
mov
es
pop
dec
xorb
rcrl
lcall
pushf
dec
mov
mov
int3
inc
pop
dec
or
aas
loope
xor
xchg
mov
and
push
adcb
lahf
mov
sbb
jecxz
adc
jg
and
adc
xor
ret
xchg
mov
xor
popf
jmp
out
inc
inc
xor
ljmp
adc
xor
cmp
negl
xor
push
and
pop
xor
mov
in
jnp
adc
scas
push
lret
inc
ss
dec
out
rolb
mov
mov
je
jle
lea
mov
aas
in
mov
pop
jae
lret
pushf
pop
iret
sti
fldt
adc
sub
pop
pop
push
pushf
nop
iret
imul
sbb
mov
popa
dec
test
leave
int3
adc
pop
pop
sbb
rol
ss
fcmove
test
mov
int
clc
fimuls
test
or
mov
into
fucomi
dec
test
xor
jns
pop
mov
push
adc
gs
dec
movsl
ljmp
dec
dec
ss
mov
repnz
lock
in
sub
cmp
pop
cmc
andl
jle
xchg
pop
pop
cld
jno
lcall
repz
cmpsb
mov
pop
adc
and
sbb
pop
ret
jbe
arpl
push
cltd
xchg
test
xchg
out
push
stc
movsb
mov
insb
sub
push
pop
fidivrl
jg,pt
sarl
clc
fldt
je
mov
movsl
mov
pop
sahf
cmp
ds
xchg
inc
pushf
fiadds
popa
test
lret
movsl
clc
in
sahf
jge
test
rolb
sti
jnp
lret
and
adc
out
jge
cs
dec
test
dec
push
xchg
xor
xor
cmp
xor
in
int3
gs
pop
pop
ja
xor
xor
xor
out
mov
out
sbb
cwtl
ret
pop
mov
mov
repnz
xor
or
adc
pushf
in
gs
lods
idivb
aam
jns
push
add
dec
push
xchg
sub
test
and
sbb
ret
int3
icebp
jnp
repnz
cli
test
xchg
jnp
testl
int
or
add
adc
jb
int
into
xor
sbb
jne
scas
cli
call
add
adcb
daa
pop
lods
inc
xor
lods
nop
test
clc
mov
test
mov
popa
dec
add
and
xchg
mov
jo
pop
sarl
cmpsl
push
std
and
xor
sbb
daa
xchg
fnsave
xlat
dec
cmc
inc
and
pop
fisubrs
repz
jle
popf
sbb
sarl
sbb
insb
nop
jmp
fs
clc
out
mov
jmp
in
xor
mov
cli
aad
insb
sbb
rclb
pop
pop
inc
imul
movsb
pop
xchg
pop
scas
xchg
push
stos
push
mov
jo
test
push
sub
mov
ds
and
cmp
push
cmp
pop
push
and
pusha
mov
mov
cmp
das
jnp
push
pop
xchg
leave
inc
insl
mov
andb
sahf
pusha
insb
fs
sub
jecxz
addr16
adc
jg
pop
xchg
pop
fld
scas
out
aas
xchg
in
leave
mov
clc
lahf
and
xor
push
inc
cmp
mov
mul
repz
popf
lds
mov
mov
mov
mov
push
andl
out
popa
je
mov
mov
jo
mov
jbe
mov
xor
push
mov
fcmovb
or
sub
or
cmpsl
mov
test
fildl
mov
and
xor
jnp
leave
xlat
pop
int
movsl
mov
fcmovnbe
mov
or
jb
sub
mov
in
aas
xchg
out
cld
ret
dec
in
jnp
test
xchg
je
dec
addb
dec
mov
pop
test
mov
or
sbb
stos
dec
pop
je
jge
push
xchg
adc
mov
arpl
mov
dec
xor
sbb
fwait
jo
mov
adc
ds
inc
sarl
mov
ds
jp
dec
adc
in
push
je
pop
push
or
pusha
leave
ficoms
aas
shll
sbb
movsl
mov
in
into
sbb
dec
popa
outsl
mov
icebp
adc
test
call
mov
jl
sub
dec
mov
fcoml
push
sub
sub
outsl
pop
or
movsl
mov
cmp
int
dec
mov
cld
leave
push
ret
mov
movsb
idivl
inc
test
mov
jnp
mov
add
mov
mov
cmp
dec
test
repz
imul
ds
push
pop
sub
int
movsb
mov
xor
es
push
fldenv
xorb
sti
aam
pop
inc
inc
ret
int3
test
mov
mov
cmp
dec
loopne
cmp
jne
inc
dec
mov
sub
adcb
int
fcmove
adc
or
sahf
cmpsb
sbb
lods
sbb
and
adcb
mov
mov
cmp
xor
pop
cld
popa
mov
imul
adc
das
cmpsl
and
dec
test
jb,pt
or
xchg
aas
sub
pop
loopne
int
and
dec
sti
repnz
sbb
ss
and
pop
ds
faddl
push
int
in
fs
popl
push
outsl
mov
ret
or
lods
hlt
arpl
lcall
add
hlt
sub
jo
shll
mov
insl
in
and
xor
or
sbb
cmpsl
out
and
rolb
insb
cmp
addr16
in
cwtl
pushf
cld
mov
imul
lods
movsl
sub
or
inc
std
xlat
cs
shlb
out
icebp
arpl
push
sahf
enter
mov
or
dec
or
mov
repz
mov
fcmovu
fs
cltd
or
inc
icebp
popa
inc
mov
jb
popf
cmc
ficoml
fdiv
cltd
and
pushl
xchg
inc
setg
pushf
shlb
cmpl
jne
or
pop
or
shll
daa
adc
mov
cli
pop
pop
insl
mov
xor
enter
lods
xchg
push
sbb
mov
nop
cmp
andb
mov
das
lods
into
repnz
loop
cmpl
fnstsw
imul
cmp
outsl
andl
and
sub
test
fisubrl
xchg
enter
jb
and
sub
popa
sbb
lret
jg
inc
pushf
daa
hlt
mov
test
pop
int
sbb
cwtl
adc
cmp
mov
mov
ret
push
lods
mov
loope
cmc
lods
mov
and
out
inc
dec
mul
jmp
lahf
cmp
or
xor
stc
dec
repnz
aad
mov
and
test
lret
jnp
lock
push
push
lds
outsl
inc
mov
inc
dec
sub
cmp
insl
out
repnz
mov
or
cmc
and
sbb
cmp
push
add
or
mov
lds
cmp
je
jno
cmp
mov
xchg
mov
shrb
adc
fcomip
xchg
or
xchg
adc
jne
mov
add
push
aaa
inc
jl
mov
xchg
xchg
jbe
push
cli
pop
jge
gs
inc
cmpsl
cmp
hlt
xor
stos
bound
push
pop
mov
scas
into
lea
xor
cli
loope
add
fcomi
xchg
xchg
je
in
jmp
xor
sub
xchg
cmpsl
or
inc
leave
adc
nop
sub
push
in
mov
rolb
not
imul
inc
ss
or
mov
xor
mov
cmp
inc
sahf
lahf
cmp
cmp
dec
or
frstor
lret
rolb
dec
in
dec
pushf
inc
test
and
push
jmp
sbb
mov
in
shrb
fistpl
dec
sub
cmp
and
sub
loop
push
jb
push
sub
inc
and
cmpsb
jge
mov
enter
les
cmp
adcb
loopne
push
ret
xchg
mov
add
data16
int
subl
shl
stc
mov
mov
xor
adc
pop
mov
adc
inc
xor
and
pop
lahf
mov
incb
xchg
push
push
push
pop
cmp
test
icebp
pushf
sub
in
xchg
lods
mov
clc
jmp
dec
sbb
mov
push
loopne
ret
jnp
int
es
fnstenv
mov
sub
jne
int3
lods
cmc
xor
iret
mov
mov
imul
insl
addl
dec
iret
sahf
xchg
xlat
movb
push
sub
push
inc
xor
push
pop
mov
mov
cmp
push
jne
into
cli
icebp
sub
add
add
test
jo
clc
sbb
ja
jp
push
pop
std
lea
inc
into
push
movsl
jmp
sbb
inc
cltd
rclb
inc
std
add
cmp
pusha
push
xchg
lods
mov
test
xchg
xchg
pop
jns
lcall
out
mov
lcall
lea
push
sbb
int
push
xchg
movq
mov
mov
cmp
ss
lret
add
jg
or
insl
push
mov
or
dec
and
gs
fnstsw
pop
push
out
les
or
sub
add
dec
out
mov
inc
push
inc
sbb
inc
dec
movsb
xorl
mov
scas
ds
test
loopne
mov
rclb
dec
inc
sbb
push
in
mov
mov
add
test
fldt
sbb
stc
ljmp
punpckldq
pop
jo
insb
aad
push
push
jle
push
inc
xor
stc
fs
mov
push
push
sbb
xor
add
xchg
jb
mov
cmc
jno
pop
xchg
dec
sbb
jle
ret
and
aas
lods
aad
data16
pushf
or
in
mov
sub
std
jb
out
adc
into
mov
je
xchg
xor
clc
jno
jge
ficoml
jnp
xor
test
out
push
jo
lea
cmp
nop
lahf
aam
and
mov
sub
popa
pop
rcll
mov
iret
mov
push
adc
pusha
out
adc
xchg
xor
xor
in
icebp
sbb
stos
addb
xchg
rolb
lods
cli
mov
cmp
xchg
and
xchg
jecxz
jbe
movsb
test
add
pop
or
icebp
lods
push
jb
movsb
dec
das
and
sub
js
dec
fmul
cmpsb
inc
lea
dec
or
daa
imul
and
mov
divb
xor
adcb
nop
mov
xor
rcrl
into
shll
xchg
andl
je
stos
fld
push
cmpb
and
mulb
outsl
scas
and
lret
pop
mov
jo
into
dec
lods
sub
mov
mov
cwtl
jb
fldenv
dec
jl
xchg
stos
pushf
add
mov
pop
push
addl
xor
jnp
lahf
xchg
mov
and
stc
ret
cmc
xor
jno
dec
xor
sarb
dec
jle
movsb
pop
push
lea
adc
cli
cmc
arpl
cld
loopne
icebp
in
ret
pop
xlat
test
dec
loop
cmp
sarb
data16
ror
push
sub
inc
push
or
popl
test
test
stos
int
xor
mov
stos
das
pop
inc
sbb
inc
jns
xor
add
xor
adc
xor
dec
mov
lcall
add
push
pop
adc
jae
insl
dec
movsb
mov
jns
mov
push
arpl
enter
lret
stos
jmp
or
rclb
int
hlt
lods
iret
test
scas
cmpb
mov
out
in
push
cmp
pusha
sbb
stos
inc
xchg
or
fucomp
push
stc
mov
js
loope
push
cmp
mov
adc
sub
inc
sbb
mov
out
in
fnstsw
pop
sub
fistps
sbb
inc
shll
cwtl
ljmp
cmp
and
in
lock
mov
js
mov
pop
mov
inc
pop
mov
lods
mov
mov
xchg
rcrb
in
andb
not
dec
and
dec
jb
xchg
and
sti
lret
mov
cld
and
inc
ljmp
rcl
dec
addr16
pushf
xlat
push
cmp
pusha
icebp
mov
add
adc
fidivrl
mov
sbb
clc
push
ss
cwtl
pusha
lret
and
popa
test
and
sub
inc
mov
mov
or
in
imul
add
cmp
mov
ljmp
jecxz
jne
push
jne
inc
cmp
movsl
ss
movsl
ret
fsubl
rolb
mov
in
push
xchg
cltd
xchg
push
mov
popf
enter
inc
sub
adc
mov
sbb
jo
call
add
or
mov
push
dec
je
push
mov
scas
loope
adc
fstpl
sar
dec
test
xor
mov
int3
jp
lods
aas
jne
out
cmpsl
xor
lea
add
jnp
filds
insl
call
jmp
add
push
cmp
pusha
in
test
push
mov
aad
outsl
and
test
mov
sub
jp
or
and
outsl
dec
addr16
iret
lods
lahf
shlb
push
add
sbbb
pop
sbb
mov
fnstsw
mov
pop
jne
jle
outsl
mov
out
repnz
xchg
jle
push
sbb
je
adc
sub
sub
cltd
std
mov
push
mov
ja
push
jbe
icebp
sbb
jns
sub
or
push
cmp
pusha
pop
andl
jg
lock
push
push
sub
sub
jns
mov
mov
xchg
fmull
jnp
rcr
fnop
fwait
cmp
jecxz
mov
jecxz
pop
hlt
mov
sub
add
xchg
test
lea
subb
scas
adc
dec
ljmp
add
mov
mov
jnp
out
ljmp
cs
faddl
push
dec
fcoms
xchg
add
scas
cmp
ret
cmpsb
dec
ss
notb
mov
cs
or
and
push
lods
mov
jns
pusha
ret
int
das
mull
js
shlb
int
mov
sbb
mov
subb
fs
aaa
mov
cmp
push
mov
test
out
mov
out
add
fcmovnb
addr16
pop
cltd
adc
pop
add
adc
int3
ja
xchg
test
adcb
int
hlt
or
xchg
test
shlb
loopne
xor
outsb
pusha
push
fiadds
xlat
sbb
mov
cmp
push
iret
inc
shll
cmpsb
out
fnstcw
fbstp
pushf
jmp
xchg
addl
sbb
es
mov
test
ss
sarl
shlb
jl
mov
inc
test
mov
mov
adc
add
arpl
jb
and
jp
stos
adc
xor
xchg
lock
xchg
imul
popf
sti
scas
or
add
in
hlt
adc
jb
adc
fistl
xor
gs
and
in
in
mov
sbb
mov
in
daa
lret
out
dec
stos
mov
mov
push
in
and
jnp
jle
pop
or
loopne
or
xchg
fcom
sbb
add
int
icebp
push
icebp
or
xor
sbb
sub
stos
mov
mov
adc
xchg
pop
fidivrl
daa
imul
cmpsl
add
inc
enter
inc
mov
jmp
xlat
mov
push
js
adc
int
lret
add
adc
fwait
and
in
xor
cmp
and
mov
or
insb
loope
lds
jns
sbb
inc
jmp
xchg
cmp
xchg
insb
push
in
mov
adc
fldenv
shll
ret
sahf
sbb
mov
jg
xchg
fisubrs
lods
and
push
das
test
daa
mov
int3
jb
pop
cwtl
or
test
in
jecxz
cmp
adc
daa
frstor
mov
sbb
rclb
mov
xchg
jo
push
in
fisubl
and
xor
jbe
mull
add
jns
aaa
imul
iret
and
popf
js
andl
push
stc
into
fildll
dec
and
in
jne
movsl
ja
mov
call
mov
push
add
jbe
mov
mov
imul
dec
cmpsl
out
andb
dec
cmp
and
pop
xor
insl
cmp
scas
mov
insb
inc
push
sti
pop
stos
adc
pushf
ficoml
xor
out
mov
daa
xchg
mov
inc
addr16
aad
popf
xchg
test
dec
popa
cmpsl
insb
pop
push
xchg
ret
lahf
lods
mov
dec
loop
in
fildll
sbb
sahf
fcmovu
insl
fldenv
sub
mov
mov
icebp
test
and
lret
and
sub
mov
mov
iret
aaa
lret
imul
jl
cs
jge
xchg
je
add
sbb
dec
outsl
ret
aas
dec
sub
das
in
mov
add
xchg
push
cs
inc
sbb
xchg
mov
sub
and
add
sbb
mov
mov
loopne
dec
add
shrl
mov
jle
jle
adc
pop
pop
sub
ja
repz
add
aam
std
mov
mov
fcmove
push
int3
leave
mov
lods
mov
jne
cmp
cs
cmp
jae
std
scas
sbb
je
mov
pop
stc
and
adcl
push
push
inc
stos
lods
xchg
int
mov
pop
push
pop
xor
aad
sahf
sub
and
jle
and
stos
jbe
mov
fistl
pop
ret
inc
dec
icebp
adc
addb
addl
int
dec
mov
sub
test
cmp
pop
mov
xor
in
aad
insb
sub
mov
js
aam
and
adc
mov
cltd
imul
fadds
loop
dec
test
mov
hlt
repz
out
and
stos
adc
test
out
aad
in
push
outsb
cmp
and
int3
fcompl
in
stos
aaa
cld
ret
mov
jno
xlat
std
cmpsb
xchg
push
cli
add
mov
pop
pop
scas
cmp
add
dec
and
pop
mov
sub
mov
ljmp
jns
sarb
insb
jmp
rorb
xor
pushl
in
inc
stc
cwtl
and
mov
divb
sbb
mov
adc
xor
push
and
jecxz
jbe
hlt
pop
dec
xorb
mov
jns
sti
mov
in
xchg
lahf
lods
xor
mov
xor
inc
popf
scas
notl
push
xchg
dec
inc
fbld
adc
out
lret
xor
out
filds
mov
push
iret
jb
fimull
xor
pop
pop
mov
sbb
fcoml
enter
sub
mov
mov
mov
fidivs
inc
jge
pop
xor
mov
fdivl
jle
push
inc
popf
rcrb
cmp
mov
das
in
sub
lcall
mov
xchg
fiadds
and
cmp
aam
popf
jg
lea
inc
or
stos
jl
mov
aad
stos
movsb
clc
push
les
push
sbb
adc
cmpsb
test
fsubl
mov
and
jne
mov
jb
mov
aas
push
clc
mov
ret
sbb
outsb
add
sub
mov
pop
and
rorb
dec
sub
inc
push
icebp
cmp
jbe
cmp
fs
or
dec
pop
mov
dec
pop
lea
in
mov
cmp
mov
add
inc
add
bound
pop
mov
sti
js
mov
loopew
das
gs
mov
inc
jge
dec
test
xchg
sbb
xchg
enter
iret
lods
aaa
jle
mov
xchg
lcall
jp
sub
mov
cwtl
sbb
lahf
mov
adc
push
addr16
icebp
add
mov
adc
jp
out
gs
cltd
xor
scas
inc
adc
cld
pop
int3
xor
pop
aaa
repz
inc
add
pop
lods
repz
push
mov
ja
xchg
push
int3
lds
cli
xchg
or
mov
sub
jecxz
or
cmpsb
lods
dec
in
lds
sub
jp
inc
outsb
dec
jnp
add
sub
inc
inc
mov
lcall
cmc
xchg
or
mov
xchg
sbb
mov
mov
aad
repz
dec
insl
int3
lcall
shlb
lods
rcll
scas
dec
icebp
jb
leave
inc
add
movsl
xchg
mov
push
push
xor
xchg
mov
cmp
notb
sub
hlt
dec
adc
shr
lret
orb
cmp
xorl
dec
enter
sahf
adc
jp
add
xor
into
add
gs
pushf
dec
out
pop
in
les
into
xor
lret
hlt
xchg
xor
sti
and
fs
cmpsl
push
cmp
aas
loop
push
and
cmp
std
cs
jecxz
rorl
pop
scas
mov
push
adc
clc
fstpl
data16
xchg
adc
pop
xlat
xchg
insl
fistpl
or
out
add
in
or
sbb
pop
inc
pop
push
ret
aas
sti
lret
or
xchg
movsb
int3
repz
xor
xchg
dec
push
jb
lods
ficomps
xor
js
jns
mov
cmc
pop
mov
sub
pop
cmp
xlat
dec
dec
ret
mov
mov
daa
js
mov
adc
bound
movsl
jnp
sarl
out
test
push
push
push
aad
cmp
jle
mov
xor
add
add
out
mov
fldenv
jae
scas
out
xchg
adc
mov
popf
fimull
das
push
mov
jecxz
and
addr16
jmp
je
xor
mov
dec
outsl
pop
cmp
int
in
pop
in
add
ja
clc
push
dec
fidivrl
dec
add
and
or
mov
push
push
aaa
jg
imul
loope
cbtw
lret
mov
orb
and
hlt
add
dec
cmpsl
mov
and
or
jnp
mov
insl
push
adc
ja,pt
pop
aas
shll
push
add
fidivs
sbb
je
dec
ret
and
mov
addr16
js
xor
or
add
cmp
sub
xor
ret
lret
add
jae
sub
jo
push
sub
loope
mov
bound
dec
fstpt
or
js
movsl
cmp
mov
sbb
out
mov
jo
pop
cld
popf
ficompl
ja
insb
daa
adcb
sbb
stos
sahf
pop
push
cmp
and
pusha
mov
fwait
lock
and
das
sub
pop
popa
outsb
jl
and
jle
xchg
push
gs
shl
inc
out
subl
lret
jmp
dec
lret
and
adc
pop
gs
lea
jp
dec
or
push
repnz
fdivl
cmp
leave
xchg
ljmp
xchg
bound
lods
outsb
mov
jb
arpl
sbb
insb
inc
mov
aas
aaa
fwait
idiv
cmc
mov
mov
mov
dec
out
mov
mov
or
sbb
outsl
imul
pop
inc
cld
pop
and
or
mov
jge
sub
fsubp
mov
mov
push
test
icebp
icebp
mov
sbb
xchg
cmp
mov
imul
mov
sbb
dec
or
hlt
xor
negb
xchg
outsb
xchg
xlat
jnp
cmpsb
dec
addr16
cmp
mov
xchg
or
adc
or
pop
pop
mov
xor
pop
fistl
cmpsl
and
add
xchg
mov
bound
and
mov
aaa
dec
ficompl
fs
lcall
mov
mov
nop
in
insl
push
mov
rolb
fwait
sbb
aad
das
leave
stos
nop
mov
loopne
ftst
push
aad
sbb
icebp
jp
mov
pop
mov
cli
mov
pushf
dec
dec
push
jp
frstor
loopne
cmp
fwait
add
lret
aad
jecxz
outsl
out
arpl
xor
push
sbb
lods
fcom
mov
sbbl
dec
imul
pop
xchg
rcrb
xor
cmpb
sub
idiv
hlt
mov
jae
addr16
in
add
movsb
xorl
sub
jb
arpl
add
xor
sti
js
icebp
subb
fldcw
insb
pop
daa
out
or
movsb
xor
and
mov
int3
int
push
mov
popa
mov
mov
pop
iret
cmp
sbb
vandps
imulb
pop
and
mov
add
daa
xchg
incb
jne
loope
or
push
hlt
dec
push
and
rclb
js
cmp
pop
pop
mov
xchg
push
loope
mov
sahf
sub
mov
push
clc
scas
or
test
dec
cltd
push
and
mov
inc
xor
xor
jl
push
jo
sub
dec
push
jnp
mov
daa
or
out
addr16
out
mov
outsb
cmp
and
gs
sarb
gs
xchg
mov
adc
or
mov
jo
push
je
push
outsb
sub
adc
outsl
stc
repz
ret
call
push
mov
cli
dec
mov
adc
mov
gs
das
iret
sub
call
sub
add
daa
mov
shrl
in
jbe
xlat
testb
mov
push
insl
js
fidivrs
test
sahf
and
test
test
and
push
mov
mov
cmp
les
jg
je
mov
jge
sbb
enter
jae
mov
int3
inc
fwait
shll
cmc
push
popf
jb
xchg
subl
pop
sbb
aad
sbb
push
inc
mov
pop
ljmp
cmpsl
jbe
xchg
inc
dec
xor
fnstcw
pop
adc
mov
push
fadd
mov
mov
icebp
lods
and
inc
pop
ret
std
sub
dec
nop
inc
mov
jp
adc
iret
xchg
stc
clc
or
xor
push
jp
cmc
mov
enter
into
push
jo
sarb
lcall
test
into
fwait
nop
gs
add
pushf
cmc
je
fiaddl
ret
popa
jle
test
cwtl
cltd
or
push
aaa
hlt
sbb
pop
in
ja
subl
notl
sub
aad
imul
test
pop
sbb
aam
push
mov
scas
or
jg,pn
aaa
jge
notb
test
mulps
pushf
push
outsb
jb
test
aas
mov
mov
mov
mov
in
sbb
xor
scas
lcall
mov
out
mov
pop
mov
sub
lret
jb
inc
jg
filds
xor
xor
push
fistl
xchg
cli
insb
cmp
repnz
xchg
lret
xor
test
pusha
lcall
jb
fs
and
aaa
clc
fcmovnbe
bound
call
lods
inc
jp
jecxz
hlt
mov
add
pushf
sti
xor
jae
jnp
adc
test
lret
dec
xchg
and
stc
out
lret
xchg
push
mov
add
cmp
lds
shl
xchg
push
xlat
push
jne
outsb
add
push
dec
fs
or
xchg
or
imul
sahf
shlb
imul
or
gs
movsl
popf
sbb
insb
dec
mov
negb
push
fcomip
clc
adc
mov
loope
push
dec
push
int3
jb
lods
stc
cmpsl
pop
dec
loop
popf
adc
mov
jecxz
or
pop
lea
adc
stos
sti
cs
cmp
push
ds
insl
pop
adc
dec
ja
xchg
int3
jb
pop
mov
add
xor
aas
or
cmp
sbb
jp
aaa
pop
cmpsl
stos
sbbl
mov
pop
mov
test
dec
aas
daa
inc
mov
dec
and
aas
nop
mov
inc
push
scas
xor
mov
in
xor
xor
sub
mov
dec
inc
fbld
dec
sbb
lods
jl
pop
mov
cmp
or
pop
imul
enter
push
aaa
pop
push
push
data16
sti
add
out
adc
mov
arpl
mov
subl
pop
xor
test
xchg
ljmp
decb
idiv
adc
lret
adc
lock
negb
cmpsl
dec
mov
xchg
mov
cli
test
dec
inc
xchg
and
add
xchg
pop
cld
mov
or
in
das
push
addr16
lock
movsb
mov
jl
test
mov
je
arpl
push
dec
test
mov
xchg
xchg
jb
or
mov
xor
aaa
sub
call
cmpsb
ret
popl
dec
insb
inc
ss
sub
fisttps
inc
and
or
sub
mov
mov
or
fcompl
pop
mov
cmp
or
push
inc
daa
dec
ret
movsb
add
xlat
fnstenv
mov
decl
rorl
xor
jl
lret
lods
sbb
jns
xchg
sti
jp
inc
es
jmp
popf
rolb
std
out
dec
mov
xor
shlb
lahf
es
mov
lea
and
push
in
push
out
iret
dec
outsb
adc
inc
clc
rcr
sbbl
int3
ss
mov
dec
loop
iret
jo
orl
pop
outsl
jl
es
notl
mov
lret
loopne
sti
call
pop
cwtl
sbb
add
retw
leave
mov
xchg
and
fsts
pop
inc
cmp
cmpsl
fs
loope
cmp
lret
hlt
jmp
adc
mov
test
movsl
mov
mov
jnp
dec
pop
ret
xchg
xorl
cmp
in
lcall
popa
dec
xor
fsubp
xchg
pop
xorb
lret
stc
or
or
pop
xchg
shll
add
mov
mov
stc
fimuls
in
mov
shrl
cmp
sbb
icebp
cmpsb
jp
jg
sub
add
push
fwait
cld
lcall
jp
pop
xchg
fs
jnp
fwait
lret
shrl
dec
movsb
rclb
loop
mov
xchg
xchg
or
inc
mov
test
lock
cmpsl
adc
xlat
nop
stos
sahf
or
jne
scas
adc
inc
adc
shll
stos
xchg
mov
test
das
push
aaa
xchg
ffreep
fwait
mov
lahf
fdivs
loopne
out
iret
sbbb
loopne
and
xor
shll
aad
fs
mov
cmc
add
push
mov
push
pop
insb
dec
iret
and
cmpsl
inc
sub
leave
mov
ja
mov
jle
mov
jne
dec
jle
push
int
push
sbb
mov
shlb
sbb
sbb
cmp
insb
shl
push
mov
fs
and
arpl
mov
mov
and
fidivs
dec
push
in
sbb
cmp
adc
fimuls
bnd
xchg
dec
pop
in
mov
adc
xchg
shrb
rcll
nop
mov
cmp
cmpsb
pop
lods
jb
xchg
and
negl
mov
xor
sbb
cmp
pop
xor
add
push
mov
cmp
nop
arpl
repz
jnp
adc
ret
cs
scas
mov
pushf
sub
xor
in
inc
mov
and
cs
add
mov
mov
and
fs
sub
mov
inc
inc
sub
jne
or
sub
cmpsb
xor
or
gs
fld
mov
fldenv
dec
mov
cli
mov
mov
mov
fdivr
pop
loopne
pop
popa
push
adc
sbb
popf
push
push
bound
fistl
dec
in
lods
mov
mov
loopne
loope
das
pop
lcall
mov
lar
xchg
pop
pushf
xor
in
es
dec
adc
xor
sbb
js
out
lret
push
sub
cli
adc
sbb
xchg
andl
sub
lea
out
nop
repz
jne
push
dec
outsl
shlb
adc
or
cmp
jae
jo
sbb
stos
push
gs
push
jb
mov
ret
jmp
adc
xor
or
clc
push
orb
hlt
cmp
or
cld
dec
dec
aaa
sbb
test
mov
or
pusha
pop
jo
xchg
mov
aaa
sub
xor
stos
jne
inc
xchg
imul
sbb
cld
cmp
inc
loop
or
outsb
shl
fistpl
aam
mov
scas
and
lahf
ljmp
pop
fisttpl
lock
cmp
or
push
xor
mov
scas
jg
lds
in
push
xchg
and
inc
hlt
mov
ror
out
cs
and
test
dec
pop
cmp
or
cmp
sahf
push
inc
cs
mov
ret
nop
lds
jge
scas
dec
jge
jne
sub
fcompl
and
xlat
push
bound
adc
jns
and
fcomi
ljmp
lods
ret
inc
daa
inc
push
je
jbe
shlb
jns
cmp
ret
movsb
in
movsl
cmp
dec
adc
adc
sti
and
fldln2
pop
inc
les
xchg
pop
mov
pusha
fdivs
and
repnz
imul
cmp
int3
pushl
orl
stos
add
dec
xor
sub
icebp
add
mov
inc
mov
dec
mov
lods
dec
sub
pop
fidivl
add
sarl
testl
lahf
cs
adc
sti
xchg
xlat
mov
xor
mov
cmpsb
lcall
test
int3
xchg
js
int
sub
outsl
pop
rcll
aas
lds
icebp
mov
sbb
sub
out
or
ljmp
or
jg
xchg
mov
imul
and
xchg
in
mov
aam
xchg
icebp
addr16
pop
pop
lcall
pop
rol
ss
sub
and
movsb
addr16
fidivrs
dec
jne
mov
jnp
into
bnd
sbb
cmpb
jae
into
in
jnp
fcmovbe
mov
push
dec
enter
insl
inc
in
fcomp
inc
sbb
or
add
jbe
filds
ror
roll
daa
js
ljmp
call
mov
push
mov
add
fmulp
addb
lds
or
cmp
stos
mov
lds
fisubrs
aaa
fisubl
pop
outsb
mov
or
add
nop
cld
pop
aas
push
or
es
aam
adc
xor
mov
dec
or
repz
stos
call
or
lret
xlat
cwtl
int
cmpsb
and
fdivl
jge
push
arpl
pop
mov
push
aad
icebp
jle
push
mov
pop
sub
lods
mov
jecxz
ja
ror
add
push
add
movb
xchg
lcall
push
loope
xlat
stc
xchg
xor
dec
mov
and
cwtl
dec
nop
ds
cwtl
xor
and
mov
adc
and
xor
pop
popa
mov
and
jo
int3
stos
or
mov
pop
test
fadds
lahf
in
aad
inc
and
cmp
inc
add
add
cli
stos
movsb
inc
mov
std
jle
cld
loope
push
sub
repnz
scas
jecxz
sbb
mov
inc
clc
ret
mov
lret
movsl
jo
adc
adc
fcomps
fildll
mov
pusha
adc
jns
dec
jge
mov
iret
pop
orl
sbb
nop
orl
push
hlt
jne
jns
adc
les
and
loope
gs
jge
mov
xor
popa
outsl
xor
dec
dec
dec
in
jmp
aam
mov
decl
imull
fwait
cmp
add
stc
mov
js
inc
pop
in
adc
pop
mov
in
mov
dec
insl
mov
mov
inc
pop
fistpll
js
inc
push
push
scas
call
scas
ss
ja
ljmp
mov
cmpl
jg
repnz
sub
movd
jnp
xchg
ljmp
pop
push
test
imul
aas
push
jecxz
sbb
push
or
xchg
enter
fwait
lods
xchg
popa
cld
pop
mov
pop
daa
outsb
ja
inc
sahf
jmp
mov
cmpl
and
repz
adc
movsl
inc
lods
mov
inc
pop
les
mov
int
push
lcall
push
xchg
js
pop
mov
mov
mov
sub
inc
outsl
push
jmp
pushf
sub
jl
cmp
and
mov
sbb
js
scas
pop
or
mov
pop
int3
xchg
push
cld
pop
in
fwait
sub
and
dec
pop
mov
add
aam
adc
std
xchg
cmp
cmp
sub
fdivrl
pop
ret
pop
sbb
out
jmp
nop
insb
sbb
out
lods
ljmp
pop
jb
push
mov
lds
push
xchg
int
push
push
aam
std
mov
jge
lret
cli
jg
adc
inc
movsl
iret
ficomps
jnp
jg
xchg
mov
es
mov
leave
jns
adc
loopne
aad
sub
or
test
add
dec
adc
ret
jo
fldcw
xchg
xchg
sub
add
cmp
lock
gs
push
push
loopne
pop
loope
push
sbbb
ret
div
clc
sbb
lods
outsb
add
outsl
arpl
aas
fisttpl
push
inc
or
adc
pop
cmp
xorl
add
dec
push
lcall
push
mov
bound
not
enter
sub
shll
pop
ss
leave
mov
jnp
sbb
shrl
loopne
mov
push
std
and
cmc
fidivs
dec
cmp
dec
jb
clc
push
xor
ds
jle
jge
pop
in
pop
negl
ljmp
cmp
cwtl
cmpsl
inc
int
lret
sub
stos
xor
mov
sbb
iret
inc
loopne
cmc
in
out
repz
out
scas
rcr
aaa
aam
shl
xchg
dec
js
sbb
push
sbb
fwait
jg
jmp
loope
pop
add
fwait
mov
aad
mov
cmp
nop
fnstsw
loop,pn
sbb
loopne
push
dec
fstpt
sbb
cld
mov
loop
adc
adc
les
cmp
imul
hlt
and
aas
addr16
idivl
add
xor
pop
iret
xor
lds
cli
dec
and
push
xor
test
pop
jno
jge
out
inc
imul
and
cld
cmp
in
push
mov
dec
jnp
sub
mov
rorb
in
sub
and
inc
into
out
xor
shll
adc
notb
nop
adc
rorl
add
mov
add
and
jb
scas
das
call
dec
outsl
or
fsubrs
fstpt
inc
fcmovbe
xchg
and
insb
loope
fwait
dec
jnp
shrl
xor
ds
cmp
pop
xchg
push
pop
sbb
pop
cmp
jge
xchg
mov
test
jecxz
add
sti
push
fidivrl
inc
sbb
push
cmp
add
popf
sbb
dec
stos
ds
insl
je
xor
push
push
add
lahf
xor
mov
ljmp
mov
pop
cmpsb
fmull
outsb
mov
dec
les
test
fwait
lcall
ds
and
pop
cli
mov
sbb
pop
mov
lds
popa
lods
divl
bound
add
sbb
movsb
icebp
cmp
pushf
push
and
sbb
mov
jne
pop
ficoms
cltd
cmp
cmc
call
adc
jb
pop
xchg
pusha
repnz
loopne
sar
or
xchg
push
ret
int3
js
cmpl
jmp
sub
test
loop
sub
sub
call
mov
mov
gs
adc
aam
mulb
cmpsl
daa
sub
jnp
arpl
cmp
test
jmp
dec
cmpsl
movsl
rolb
outsb
sahf
or
out
mov
push
dec
push
jne
or
in
add
add
js
xor
cmc
pusha
in
stos
xchg
decb
mov
and
push
xchg
lods
mov
dec
iret
jbe
push
xor
ss
and
mov
dec
mov
lret
pop
adc
shl
xor
adc
dec
adc
cmp
insl
pop
push
push
pop
iret
push
test
mov
ljmp
cmp
xor
jl
jg
lods
gs
mov
xchg
lds
sbb
sub
push
lcall
les
push
popf
jecxz
lcall
mov
sbb
ss
lea
in
stos
fstpl
xor
adc
cmp
cmp
xchg
mov
lret
popa
ret
pop
loope
aas
orl
pop
jp
jns
movups
mov
sbb
jb
or
call
out
pop
lret
pop
mov
lcall
shrl
mov
bound
xchg
inc
bound
nop
inc
xchg
push
jecxz
rclb
aad
stc
mov
inc
or
push
or
iret
or
aas
mov
ds
sbb
push
insl
mov
mov
mov
pop
sti
pop
xchg
mov
mov
out
repnz
dec
adc
inc
mov
sbb
and
jne
sub
xchg
mov
jb
out
movsb
das
je
mov
cltd
jne
push
rolb
jae
sub
push
jge
negl
mov
lds
sub
push
enter
std
xor
jns
test
fs
cltd
sbb
xchg
mov
jge
sbb
mov
adc
ja
stos
pushf
cli
mov
inc
addr16
jg
int
std
pushf
das
rorl
push
mov
data16
xchg
mov
jecxz
pop
loopne
xor
fsubl
or
out
pop
les
addr16
pmaxsw
xchg
es
repz
cmp
divl
lds
pop
cmp
adc
add
cmp
mov
sbb
mov
in
clc
test
arpl
and
sbb
sbb
je
int
fistpll
out
jae
out
jnp
cmp
adc
sub
dec
add
push
es
push
jb
push
rorb
lret
std
xor
aas
xchg
clc
scas
out
fwait
mov
cli
mov
out
repz
pop
stos
pop
xor
das
jb
ds
xor
cli
aam
ja
mov
mov
scas
jns
js
or
push
sbb
add
mov
pop
imul
xor
leave
dec
mov
fcom
xor
or
mov
inc
lods
pop
fcmovnbe
lcall
sbb
xchg
shlb
adc
aad
mov
sbb
dec
or
push
dec
xchg
mov
lret
add
mov
lock
dec
rep
lcall
cltd
lret
xchg
ficomps
cmp
aad
pop
sub
int
push
jb
pop
fistps
neg
repnz
shll
inc
mov
mov
adc
add
lret
or
xor
sbb
xor
scas
jb
psubw
fisubrl
and
shr
int3
and
dec
cmpl
or
loope
jo
or
mov
sub
movsb
cs
cmp
inc
mov
sbb
push
adc
cmp
mov
shlb
add
mov
or
out
inc
and
dec
xchg
sub
sbb
sub
hlt
jo
ret
pop
pop
ds
adc
jg
pop
in
add
pop
int
jle
out
pop
lods
lods
bound
xchg
push
fnstcw
sti
pop
out
push
and
cmp
mov
out
jl
fildl
daa
xor
sbb
test
mov
push
add
jae
jl
fstl
or
mov
sbbb
sub
lods
das
daa
push
stos
lcall
mov
dec
fsub
adc
or
insb
dec
aas
inc
inc
cmp
leave
inc
addl
out
stc
xor
sub
fldenv
adc
arpl
js
out
testl
mov
mov
sbb
dec
or
inc
out
scas
popf
fstpt
mov
dec
jnp
outsb
push
imul
jns
and
jge
lock
imul
inc
orl
jns
mov
js
adc
lea
xor
xchg
mov
sti
push
enter
mov
lret
shll
sbb
mov
sub
or
cmc
loopne
pushf
inc
lcall
movsl
clc
aaa
frstor
xor
sub
xor
nop
xchg
aam
push
jl
in
cmp
mov
xchg
mov
loopne
ds
inc
pusha
ret
cmpsl
pop
sub
cs
pop
mov
and
sub
ja
cmp
cmp
mov
jnp,pn
sub
jge
mov
jnp
pushf
jns
xor
dec
mov
mov
cmp
aaa
ret
mov
lea
aam
jp
xchg
out
mov
mov
test
out
cli
mov
sbb
lds
cmp
add
adc
pop
leave
mov
or
xorl
and
xchg
mov
jb
je
mov
rorb
scas
in
pop
xlat
bound
repz
subb
adc
cmpsl
dec
mov
push
mov
icebp
xchg
stos
test
out
cs
out
mov
xchg
adc
jno
rorl
in
mov
das
jle
psllw
sub
fstl
inc
cltd
lods
test
out
and
cs
xor
stc
jl
jg
aad
lods
mov
jns
inc
cld
mov
int
xor
jne
sbbb
test
lods
lret
inc
shrl
lods
cmp
or
addr16
jno
pop
add
into
inc
jbe
cs
rorb
subb
sbb
jmp
aam
push
inc
dec
xchg
testl
xchg
or
repz
into
es
inc
push
mov
divl
out
xor
movsl
cmp
xor
xor
dec
jecxz
dec
jecxz
lahf
rorb
dec
pop
jb
inc
shlb
in
lret
dec
mov
adcb
jae
push
aad
sub
or
xor
test
mov
pop
add
mov
jmp
push
adc
xor
push
fs
out
jne
pop
insb
push
cmc
fdivs
sub
notl
xsha1
cmpsb
dec
jecxz
pop
sub
pop
jg
lds
pop
pop
in
pop
sbb
les
xchg
cld
sub
stc
je
inc
mov
iret
sbb
insb
mov
lret
in
sub
push
mov
or
mov
stos
ffree
incl
enter
mov
dec
and
out
mov
les
scas
mov
call
lock
jnp
sbb
out
jns
lret
jae
adcl
dec
lahf
daa
lds
in
jno
bound
stos
into
int3
sarb
adc
mov
addr16
fdiv
out
dec
mov
mov
icebp
push
sarb
add
pushf
ja
rclb
jns
lcall
lds
pop
and
inc
cltd
out
rcr
cmp
lahf
cli
sti
add
or
mov
icebp
mov
adc
pushf
add
dec
rcrl
je
xchg
sbb
mov
sub
adc
xchg
inc
sub
lods
cmc
jne
mov
push
pop
lret
push
loopne
dec
or
movsb
out
sbb
xchg
mov
out
ja
dec
and
out
fcoms
jge
cli
pushf
pusha
sbb
filds
stc
out
mov
adc
scas
in
daa
xchg
int3
cld
mov
clc
cmp
pop
loope
xor
call
imul
and
out
aaa
cwtl
xchg
mov
cltd
mov
inc
sbb
cmp
movsl
stos
push
cmc
jo
or
jne
cmpsb
inc
or
and
arpl
js
add
dec
mov
adc
xchg
in
jns
lock
fcomip
sbb
pop
stc
push
or
cmp
add
xor
sahf
mov
and
orb
mov
pop
xor
testl
pop
das
rclb
push
popa
xchg
jle
inc
icebp
sub
mov
outsl
jbe
fwait
shrl
shl
and
push
fs
dec
movsl
popf
mov
sub
popa
popf
pop
pop
mov
xchg
mov
pop
xchg
push
mov
andb
sbb
gs
mov
les
outsb
sub
cli
dec
pop
and
in
cmp
jb
xor
pop
ds
dec
lret
lret
fwait
out
sbb
jmp
mov
sbbl
jno
push
shll
pushf
xor
jo
xor
sub
ret
cmp
cmpsb
ds
sti
and
and
mov
sbb
outsb
mov
dec
ror
loop
jns
sbbb
pop
xchg
xor
push
cmpl
clc
stos
mov
inc
xchg
or
lock
mov
sub
push
mov
adc
std
or
iret
les
test
hlt
push
sbb
ss
mov
scas
xor
gs
inc
mov
dec
xchg
mov
imul
jmp
push
fs
sbb
mov
in
jno
sahf
pop
add
mov
push
push
sbb
int
sub
scas
hlt
xchg
mov
aaa
add
sbb
or
cmp
pop
add
mov
xor
mov
imul
repz
out
pop
pop
cmp
mov
mov
inc
lea
add
jg
inc
iret
mov
xorb
jecxz
ds
jle
ljmp
jae
mov
push
sbb
or
repz
push
out
adc
shlb
mov
pop
jne
popa
xchg
loop
rolb
fisttpll
movsb
icebp
popa
jne
jno
push
jb
fsub
lods
mov
lcall
and
nop
and
sbb
les
push
mov
cmp
out
mov
ljmp
repz
std
mov
push
sbb
rclb
sub
or
ss
es
sbb
icebp
dec
cld
outsb
cmp
mov
popf
idivl
pop
test
jp
rcr
dec
in
loope
jne
mov
sub
cmp
imul
mov
outsl
filds
lcall
orb
sti
addb
sbb
testb
pop
imul
les
dec
jmp
aad
jnp
mov
jp
mov
enter
dec
aaa
dec
jle
jg
cmc
xchg
and
lret
adc
lods
call
hlt
add
jno
cld
dec
test
scas
aam
or
and
adc
les
sbb
push
jmp
or
push
ljmp
or
fcmovnb
jl
sti
sub
or
jmp
add
pop
mov
xor
pop
cmpsb
pop
les
ss
pop
stc
pop
sub
mov
test
pop
mov
aam
fildll
rcrl
pop
daa
cmp
push
sbb
shrb
sarl
inc
mov
dec
cs
cmc
or
test
jge
test
xor
leave
sbb
fs
mov
out
rclb
mov
rolb
jne
and
mov
mov
les
push
stc
imul
cmp
in
add
adc
cli
add
sub
xchg
fbstp
xchg
and
xchg
shr
adc
rcrb
in
xor
popa
cmp
lods
mov
xchg
adc
test
test
int3
jmp
mov
testb
shr
sbb
fdivl
inc
jge
lret
std
aaa
jecxz
mov
xchg
loop
scas
lods
lret
cmc
lea
js
pushf
push
lea
jmp
xor
test
je
add
in
shlb
inc
es
push
cmp
jns
fisttpll
inc
adc
outsl
and
iret
aad
lea
roll
addb
cmp
mov
mov
inc
dec
cmpl
sarb
cmpsb
jno
push
div
adc
stos
out
sbb
jb
inc
imul
push
insb
imul
sub
mov
sub
das
test
testl
iret
lds
adc
lret
rclb
mov
sbb
adc
addr16
hlt
xchg
jne
aam
cmc
push
lahf
adc
bound
pushf
xor
fadd
jp
rorl
xor
cmpsl
inc
inc
push
je
xor
rcll
repz
out
mov
dec
movsb
rcll
push
add
pop
cld
inc
aam
mov
mov
sub
test
xor
or
ds
pop
mov
sub
pushf
fwait
jo
ret
shrl
and
adc
push
and
in
in
into
mov
jge
push
inc
mov
push
lcall
fwait
add
orl
xchg
inc
fnstsw
jo
test
repz
fsubrl
rcrb
mov
jmp
shrb
push
jl
mov
inc
popf
repz
cli
jmp
sub
stos
test
into
stc
mov
and
divl
inc
gs
and
sbb
ja
test
cmpsb
jbe
add
mov
ret
cs
adc
sbb
push
mov
push
or
shl
stc
jmp
ficoms
test
rolb
push
pop
out
test
pop
sbb
lcall
sbb
pop
aas
push
fisubrs
mov
leave
out
ret
ds
push
aam
mov
fwait
es
sub
fidivl
loop
repnz
pop
jae
nop
inc
int
stos
or
cmp
ret
movsl
cmc
les
mov
scas
es
scas
repz
and
daa
aas
xchg
or
insl
mov
sti
sub
das
inc
fldenv
iret
sbb
ds
ljmp
sbb
cltd
or
das
mov
aaa
aam
xor
pop
push
loop
stos
cwtl
lahf
int
pusha
cmc
jno
call
rcll
or
daa
jecxz
fdivr
adc
jnp
mov
out
pop
jg
call
inc
push
adcb
inc
pop
jl
pop
pushf
fwait
jl
fsts
insb
negl
push
push
ljmp
xor
ss
xchg
mov
xor
or
push
std
jno
mov
xchg
or
or
jle
leave
cmpsl
dec
sub
fadds
sahf
cmp
cwtl
dec
testl
out
cmp
test
stos
mov
mov
jno
jnp
stos
sbb
adc
cmp
and
aad
out
aaa
cwtl
out
ja
test
ljmp
push
and
jp
push
pop
int3
add
mov
xor
les
and
push
popf
or
cmp
mov
mov
repnz
fxch
fdivrs
dec
mov
or
repnz
lahf
jmp
push
add
adc
loopne
imul
frstor
jae
stc
cmp
inc
or
icebp
adc
hlt
out
jge
pusha
jl
push
insb
sti
mov
adc
stc
lahf
dec
and
bound
dec
cmp
push
sub
cmp
sub
jecxz
xchg
inc
sub
insb
sbb
adc
fs
pop
xor
stos
test
test
outsl
stc
and
sub
pop
inc
or
outsb
std
int
mov
jo
das
jbe
dec
stc
outsl
rcll
insl
scas
in
in
inc
in
mov
xchg
xchg
les
iret
xchg
sarl
pop
xor
pop
test
mov
cli
xorb
mov
js
mov
repnz
fwait
ljmp
sub
outsb
aam
ds
sbb
sub
or
inc
add
ret
mov
js
ds
jl
imul
shl
xchg
sub
es
jnp
dec
icebp
into
push
pop
fnstenv
cmp
idivl
mov
movl
pop
sbb
mov
inc
pop
popa
scas
push
stc
imul
dec
push
pop
mov
sub
cmpl
mov
or
jo
or
pop
dec
and
cmp
sub
pop
fsubrp
dec
loop
jns
sub
fidivs
mov
push
inc
jne
in
and
jmp
sub
xchg
or
loope
pop
jns
push
in
jmp
das
and
pop
add
xchg
jmp
dec
mov
jle
movsb
sti
push
std
jecxz
fnsave
out
pop
inc
fs
jle
or
xchg
movntps
scas
pop
out
cmpsl
push
add
add
mov
inc
push
xor
pop
ljmp
jmp
pop
add
shll
imul
jne
out
add
mov
ret
and
xchg
sbb
xor
lock
popf
mov
adc
pop
mov
ret
shr
testl
push
in
xchg
sub
cmpsl
adc
jecxz
fldpi
sahf
outsb
cmp
aad
shrb
jno
int
bsf
or
into
stc
sti
pop
inc
inc
push
out
sub
jecxz
xor
mov
or
call
mov
aam
stos
cs
cltd
jl
add
push
popf
stos
or
nop
fisubrl
sbb
inc
imul
adc
mov
lods
dec
fadds
aaa
push
inc
bound
gs
das
hlt
shll
movsb
lds
dec
rcll
call
xlat
insb
iret
jbe
mov
xchg
jbe
outsb
jmp
pop
lcall
inc
into
cwtl
insl
push
jne
jo
lock
mov
lahf
cs
ret
add
dec
inc
mov
cmp
xchg
shrb
imul
clc
es
mov
and
mov
and
stos
jg
mov
cmc
je
test
data16
aam
push
call
ret
adc
push
dec
inc
push
add
pop
clc
shlb
xchg
jl
inc
push
insl
xcrypt-cfb
cmpsl
pusha
js
daa
sbb
shl
je
mov
cld
imul
movsb
xchg
jns
mov
add
sbb
cmp
mov
adc
cli
shll
adc
divb
popa
push
xchg
mov
imul
test
into
xor
xor
mov
push
push
loop
int3
dec
sbbb
aas
push
scas
js
xchg
arpl
sahf
or
cmp
adc
les
stos
inc
dec
inc
lock
lcall
xchg
mov
in
std
pusha
shrb
lds
testb
pop
cmpsb
mov
mov
mov
scas
in
add
jle
cmp
out
gs
aas
mov
jnp
pop
lds
inc
push
sbbl
stc
pop
test
mov
mov
adc
stos
scas
xchg
pop
shll
fsubrs
jns
fcoml
stos
jne
mov
icebp
inc
add
pop
jg
mov
loopne
cs
push
add
sub
inc
or
mov
mov
jge
add
das
imul
add
mov
mov
and
orb
xor
and
test
mulb
sti
into
scas
jmp
mov
roll
data16
inc
daa
jae
mov
jnp
mov
sbb
sbb
scas
cs
mov
xchg
cltd
leave
add
aaa
arpl
sbbl
outsb
mov
adc
inc
dec
sahf
push
dec
inc
jno
pop
inc
xchg
xor
mov
mov
scas
std
js
sarl
gs
popf
into
insb
push
ja
lea
jbe
aas
aaa
out
popa
int
sbb
fadds
push
fwait
and
cltd
mov
add
xor
test
cmpsl
in
xor
sub
dec
pop
lods
sti
mul
sarb
ret
push
imul
sbb
int
pop
loop
adc
push
sti
ret
adc
xchg
sub
cmp
sbb
imul
test
shrb
xchg
xchg
cmp
xchg
jnp
cmp
andb
jnp
sbb
idiv
sti
dec
in
ds
dec
push
lods
or
ja
or
fildl
frstor
sti
sub
push
ret
mov
enter
push
adc
cmc
xchg
mov
push
rcl
and
in
mov
hlt
les
or
mov
sbb
and
nop
add
jno
pop
mov
daa
cld
das
dec
dec
inc
ss
stos
daa
test
jle
xchg
sahf
push
sbb
sub
or
iret
fsts
cmp
mov
mov
adc
mov
adc
scas
cmpsb
push
fidivrl
cmpsb
xor
cli
push
test
div
jle
out
and
cmp
insb
inc
cltd
push
cmp
xchg
mov
sub
sub
adc
sarb
repnz
inc
icebp
pop
stc
pushf
cmp
mov
cmpsl
inc
icebp
mov
lret
stc
sub
xchg
sets
data16
cmp
push
sub
test
outsb
xchg
xchg
sarb
sti
push
inc
mov
xor
dec
or
into
lret
mov
xchg
addr16
mov
fsubrs
pop
stc
dec
decl
pop
ds
jle
and
lcall
mov
lret
clc
ja
lret
lods
push
cli
lea
das
leave
cmp
jecxz
sub
int3
push
mov
ret
in
ss
hlt
fsubs
aas
mov
nop
xchg
scas
xlat
into
mov
inc
fwait
pop
inc
lret
mov
test
jge
roll
fbstp
fadds
inc
icebp
incb
fs
fdivs
sub
push
push
dec
add
mov
or
or
and
jbe
push
cmp
mov
fstps
or
movsl
out
jnp
dec
pop
mov
xchg
pop
shl
popf
xchg
aaa
loop
call
and
psllw
add
jo
arpl
out
cmpsl
mov
jnp
js
jno
mov
fildl
push
int3
xor
lods
sahf
adc
mov
sub
pop
mov
scas
jecxz
lock
sbb
mov
rcrb
sbb
sbb
mov
test
movsl
mov
in
mov
sub
or
lcall
shrl
outsb
adc
pop
xchg
mov
mov
mov
pop
outsl
loope
mov
xor
pop
sbb
rcrl
jp
cmpsb
jg
jecxz
jl
jns
sub
mov
mov
outsb
sbb
mov
in
iret
jg
adc
xchg
sahf
jbe
inc
jp
push
jecxz
mov
lahf
xor
sbb
sub
and
int3
dec
sbb
test
cmp
test
test
push
inc
inc
inc
or
push
jecxz
stos
mov
dec
das
addl
repnz
dec
mov
in
bound
mov
addr16
lea
pushf
jge
xchg
dec
repnz
jle
mov
xchg
sbb
mov
adc
jo
pushf
loope
mov
mov
mov
and
sbb
rol
mov
mov
mov
dec
rcrb
lret
stos
mov
jmp
in
cmp
adc
mov
fwait
jmp
scas
leave
sub
and
divl
sarb
dec
mov
dec
lcall
subb
aad
sub
cwtl
lret
into
lret
icebp
lods
adc
adc
sbb
push
adc
push
test
test
xlat
cmpsl
sbb
and
xchg
cmp
aaa
jo
xchg
leave
mov
pop
out
xchg
lret
sbb
or
push
push
or
pop
push
xrelease
fisttpll
mov
aaa
popfw
xor
mov
insb
mov
inc
xchg
pop
cmpsb
and
or
mov
or
jmp
and
cmp
pop
leave
mov
cmp
test
movsl
nop
clc
adc
lahf
jne
fsubrs
or
pop
popa
sti
cmp
cmovne
fcomp
mov
lea
nop
lret
and
mov
pop
sahf
sti
mov
movb
mov
call
mov
rol
dec
pop
add
xchg
adc
movsl
push
adc
pop
aas
lods
mov
mov
xor
in
xchg
insb
push
mov
pop
mov
icebp
rorb
ss
out
aas
mov
pushf
sbb
mov
ja
add
nop
icebp
fld
cmp
adc
xchg
aas
fsubrl
add
pop
cmp
push
pop
je
push
xchg
and
dec
pop
jl
int3
mov
test
pop
out
mov
mov
repz
adc
in
pushl
shlb
mov
cmpsl
movsl
dec
mov
cmp
jae
bound
xor
sbb
pop
and
dec
test
sub
cltd
mov
push
push
ret
jne
test
jno
sub
inc
enter
xor
jae
scas
lret
jbe
push
sub
mov
add
fcomip
mov
cmpsb
dec
filds
sub
jge
sarb
cmc
and
dec
ret
hlt
jae
sub
ret
xchg
mov
and
xor
bound
les
mov
xor
movsb
loope
cmp
push
xchg
outsb
mov
cwtl
xor
leave
push
jl
jns
pop
xchg
lods
flds
push
rcr
es
cltd
mov
daa
xchg
jnp
sbb
call
or
pop
jmp
dec
dec
int3
test
popa
scas
enter
sbb
push
vandnps
xchg
inc
out
fdivl
jg
cmc
pop
mov
mov
mov
sbb
popa
das
cmpsl
shll
mov
bound
adc
js
add
mov
or
dec
dec
les
sbb
dec
cmpsb
repnz
mov
jno
mov
push
cmp
out
mov
and
je
pusha
jle
lods
push
fcmovbe
ret
mov
cmpl
shrd
lcall
outsl
sub
add
push
jmp
ss
jne
jo
push
or
popf
pop
repnz
nop
inc
insl
dec
aaa
mov
cmp
jns
mov
enter
sub
xor
pop
cmpsl
test
pop
into
stc
or
inc
ja
test
cwtl
popa
dec
negb
pop
popf
sub
in
mov
dec
mov
or
cmpsb
cmc
jno
xchg
jg
test
rcl
mov
addl
cmp
pop
adc
add
xor
and
ss
xchg
adc
aam
inc
xor
icebp
das
ljmp
stos
int3
sbb
stos
repz
test
mov
xor
mov
dec
mov
dec
test
shll
es
and
sub
cmpsl
jl
rcll
outsb
jmp
sbb
and
fisttpll
or
pop
mov
test
or
mov
xchg
ffreep
loop
cld
xchg
out
dec
int
outsl
cmpsl
out
cmc
push
cltd
mov
xchg
pop
cmc
in
adc
int
ljmp
dec
in
or
out
pop
inc
and
pop
mov
add
fs
shl
ror
cmp
push
test
ja
aad
hlt
xor
bound
dec
add
ljmp
insl
dec
enter
repz
cmp
jns
mov
and
pop
push
std
jl
mov
mov
fists
xor
ret
lcall
mov
pop
or
imul
pop
inc
shrl
cmpsb
jnp
clc
xor
sub
iret
xor
pop
in
jle
leave
mov
push
xor
cmpb
pop
aas
dec
sub
jmp
xor
rorb
in
inc
fs
ljmp
cwtl
shrb
and
stos
arpl
pop
ret
cmp
xchg
stos
ret
scas
jle
sub
inc
mov
mov
mov
cmp
inc
xor
mov
jle
enter
scas
insb
out
xor
xor
movsb
sub
shlb
mov
and
jo
mov
sbb
subl
mov
xor
mov
fsubl
and
push
cmp
je
cmp
xchg
test
aaa
add
scas
and
popl
cmp
flds
add
sub
pop
xor
and
loopne
cmp
insl
test
jnp
shl
jp
inc
aad
idivb
mov
jnp
inc
gs
pop
mov
cmc
and
testl
or
xchg
data16
sarl
into
out
add
mov
mov
loope
movsl
inc
sbb
push
cli
es
sub
pop
aas
jp
mov
jecxz
adc
sar
sub
cltd
dec
xchg
sub
cld
test
dec
add
es
xchg
adc
cmpsl
repnz
jno
in
pusha
jno
inc
mov
aam
mov
fwait
lods
push
scas
mov
ljmp
cmpl
jae
loope
xlat
push
cmp
xlat
cmc
and
movsl
and
loope
sbb
stos
add
xchg
shll
sti
mov
movsl
mov
sub
xchg
add
or
aad
js
movsl
jne
cmp
negl
mov
icebp
dec
push
es
stc
test
jb
mov
pop
lret
orl
add
stos
loope
insb
jne
cmp
mov
ficoml
and
lahf
mov
inc
lret
shlb
sub
fadds
pop
out
push
push
sub
movsb
dec
push
and
sbb
test
mov
fcompl
pop
inc
sub
sbb
fs
out
jmp
out
fimuls
ret
inc
mov
test
cmp
jl
and
sbb
xchg
adc
aaa
sbb
into
jne
pop
sub
mov
in
jg
push
pop
data16
jnp
outsl
or
mov
dec
pop
xchg
or
es
loope
stos
jmp
sti
inc
xchg
inc
push
xor
pop
sti
or
add
idivl
loopne
loopne
int3
xor
stc
dec
aas
pop
outsb
mov
outsb
in
into
inc
push
jge
pop
outsb
push
jp
or
outsl
outsl
lods
push
outsb
xor
mov
test
in
adc
sbb
xchg
int
mov
test
push
mov
imul
xor
adc
testl
push
and
ret
icebp
xorb
pop
jmp
lahf
cmpsl
and
in
js
add
and
inc
ficompl
imul
outsb
sti
sub
scas
and
lods
aam
je
popf
ficomps
cli
cmp
daa
fwait
mov
mov
into
mov
or
mov
insb
popa
fstpl
test
int3
xor
pop
mov
stos
mov
inc
in
adc
adc
mov
fwait
or
and
sub
je
inc
pop
lcall
cmpsl
std
inc
push
stc
pop
push
jnp
es
xchg
lods
push
into
adcb
scas
sbb
loop
lods
and
mov
imull
out
ljmp
cwtl
icebp
pop
psubd
lock
push
pop
or
push
dec
mov
aaa
shll
sahf
jo
pusha
xchg
arpl
fstpt
adcb
push
xor
daa
mov
mov
fldl
jne
sub
or
and
sbb
ljmp
mov
rolb
stos
push
fidivrl
sarb
push
lahf
and
and
adcl
loopw
shlb
test
cmp
add
repnz
xchg
or
insl
icebp
rclb
jge
sub
mov
rorl
jne
jnp
xchg
push
test
imul
loop
imul
call
xchg
mov
xchg
inc
sub
add
fists
xchg
xchg
ljmp
jns
fldenv
into
sub
out
jns
popw
mov
cmc
mov
push
xor
push
pop
mov
sbb
jb
leave
dec
adc
or
mov
fwait
shrb
hlt
cs
sbb
out
enter
data16
push
test
push
scas
les
xor
or
fisubs
roll
cmc
add
sub
lods
sbb
push
imul
jbe
pop
in
andl
xor
inc
test
mov
and
jo
daa
fsubrs
mov
lcall
popa
dec
jecxz
jns
imul
insb
mov
push
and
mov
out
push
push
pop
out
loopne
dec
jnp
mov
xor
mov
push
popa
sar
or
cmp
dec
mov
mov
imulb
inc
mov
fmuls
arpl
sbb
or
mov
mov
sbb
mov
inc
cmpsb
out
mov
js
adc
hlt
adcb
xchg
mov
sub
shl
sub
mov
jne
in
xchg
rcll
stos
loop
push
add
in
jb
dec
pop
ljmp
pavgb
jno
sar
aas
pushw
jnp
cs
fisubs
mov
test
cld
cmp
inc
stos
repz
hlt
int
dec
mov
ret
sub
out
and
scas
stos
stos
xor
popa
js
inc
mov
adc
adc
jl
jb
das
dec
lea
rcl
inc
mov
mov
sahf
scas
sbb
or
sbb
xlat
aaa
xchg
in
movsl
ja
scas
out
jno
mov
cld
add
nop
lahf
rol
repnz
jb
pop
pop
mov
sahf
xor
cmp
jp
xchg
sub
mov
pop
outsb
stos
aas
dec
push
xchg
clc
mov
repnz
iret
arpl
xor
mov
adc
enter
mov
aad
jge
sub
or
adc
stos
in
or
mov
lods
cmc
mov
pop
mov
sbb
dec
cmp
xor
pop
and
mov
inc
sub
jp
mov
ffreep
bound
jmp
mov
add
jb
inc
or
pop
xchg
imull
out
ret
enter
roll
ficoml
in
add
shll
gs
and
stc
filds
sub
sbb
cmp
mov
loope
and
pop
pop
insl
fs
cmp
enter
fwait
adc
aad
push
movsl
loope
sub
clc
inc
fiadds
cli
add
dec
aad
sub
mov
push
pop
adc
xchg
push
xor
adc
lcall
inc
in
adc
mov
aas
inc
or
rcrb
pop
enter
jl
or
jns
add
jnp
in
pop
jbe
sahf
pcmpgtb
jmp
outsb
cmp
je
je
fsubs
jmp
mov
mov
and
sbb
lcall
cmp
pop
inc
and
sbb
sub
inc
out
cltd
and
mov
or
in
inc
pop
loopne
add
imul
xchg
hlt
pop
and
jecxz
lds
inc
pop
mov
sub
mov
adc
cmp
inc
jl
jmp
xchg
cmp
fsts
test
ljmp
jb
cli
jb
xchg
mov
hlt
add
mov
jl
lea
xchg
imul
push
xchg
sbb
aam
stos
jnp
xchg
push
jle
xchg
and
inc
gs
lea
les
push
loope
add
fwait
sbb
in
mov
test
sti
mov
inc
dec
int
movsb
pop
inc
mov
fsubp
pop
inc
test
dec
dec
andb
shrb
and
and
add
xor
rorl
test
aaa
or
inc
xchg
inc
jne
in
pop
xor
fists
icebp
push
dec
push
xor
in
mov
cmpsb
stc
in
and
inc
lret
js
sub
xor
movsb
or
or
rol
cmpb
mov
mov
xchg
xchg
jmp
iret
data16
jp
leave
inc
dec
cltd
jno
stc
adc
test
outsl
cwtl
fcompl
icebp
push
loope
stos
jns
and
jnp
mov
and
cmp
jns
ret
cmpsb
pop
xor
mov
leave
loope
cwtl
jg
and
out
fistps
dec
scas
call
or
mov
jnp
mov
xchg
sub
imul
push
fadd
and
and
fwait
nop
mov
mov
push
aaa
xchg
or
xchg
std
call
fwait
shll
mov
test
mov
lea
cmp
int
and
inc
popf
cmp
js
push
push
rorb
mov
adc
fs
ss
sbb
fimuls
inc
ficoms
out
sbb
pop
test
imul
xor
adc
or
jno
push
mov
sti
cld
stc
cmp
inc
movsl
add
stos
adc
xchg
fistl
push
add
mov
sbb
ds
xacquire
mov
lcall
mov
jnp
or
lret
jae
pusha
insb
pop
pop
cli
adc
or
cmp
mov
inc
sti
ficoml
insb
jecxz
push
mov
and
je
test
push
jge
cmp
pusha
rol
js
loopne
cmp
pop
cmpsl
arpl
add
add
xchg
adc
or
ss
pop
jnp
js
int
pop
rcr
int3
and
or
imul
sub
push
mov
ss
popa
push
push
js
xchg
sbb
mov
inc
add
sub
dec
xchg
adc
jae
xor
adc
xchg
in
xor
xor
cmc
inc
pop
aad
stos
mov
stos
mov
pop
push
dec
mov
sub
mov
jo
add
sbbb
into
popf
mov
push
cmp
and
dec
add
pop
int3
mov
loopne
cmp
in
insb
inc
mov
lock
push
dec
cltd
jo
inc
mov
mov
mov
adc
xchg
jnp
sub
outsl
loop
add
scas
fistpl
filds
sbb
pop
shll
mov
int
mov
mov
pop
and
mov
jbe
outsb
notl
mov
fiaddl
test
hlt
fwait
mov
xchg
jecxz
xchg
xor
sub
mov
lock
lds
aas
test
and
fs
or
mov
lods
or
addr16
imul
jbe
or
aad
xor
dec
stc
daa
sub
xchg
repnz
pop
mov
lods
jae
repz
iret
sub
das
mov
sbb
popa
ds
dec
or
cltd
lcall
iret
fdivp
jae
icebp
xchg
lds
repz
inc
fistpl
iret
pushf
mov
jge
xorl
push
mov
cmp
rcl
cmp
inc
in
push
sbb
lcall
movsl
testb
mov
add
insb
aaa
loope
stos
cmp
sbb
icebp
pop
or
jne
inc
pop
ss
push
push
xchg
sub
push
sahf
call
and
dec
lret
test
jg
jae
scas
push
addr16
sbb
int
sub
dec
out
sarb
push
out
xchg
mov
cli
aas
jg
test
pop
pop
jns
arpl
push
ljmp
shll
fdivrs
std
mov
fcmove
push
arpl
inc
xchg
push
fwait
jle
sbb
sarb
mov
mov
inc
popl
dec
pop
iret
fld
cmc
std
rol
pop
mov
aad
xor
lahf
scas
push
stos
test
adc
in
enter
hlt
fnstsw
push
jbe
arpl
cmp
arpl
jns
sbb
pop
add
push
mov
call
nop
sbbb
sbb
sbb
jae
inc
dec
popa
subb
xchg
or
pop
nop
push
inc
mov
aaa
data16
test
sbb
pop
fstpl
outsl
mov
sbb
jecxz
mov
fsubl
mov
pop
mov
dec
xchg
mov
mov
leave
mull
ror
or
push
push
orl
hlt
sub
movsl
cltd
pushf
outsb
ljmp
and
dec
lock
mov
gs
call
jb
cmpsb
inc
sahf
sbb
xchg
std
inc
jae
dec
ja
gs
dec
testl
add
mov
xor
xlat
mov
dec
xchg
iret
imul
ss
adc
nop
das
mov
pop
add
jb
sub
mov
mov
xchg
xchg
mov
xchg
shrb
jge
lret
out
mov
in
rcrl
push
jb
pop
sti
cmp
arpl
jecxz
add
je
mov
mov
js
scas
lock
mov
inc
pop
jb
mov
mov
pop
ficomps
fnstenv
lods
add
inc
hlt
clc
push
in
paddd
les
mov
icebp
or
dec
mov
sub
daa
pop
hlt
sbb
push
jo
fnsave
or
pop
cmpsl
xchg
ret
scas
outsl
test
jns
mov
or
add
sub
xor
dec
xlat
adcl
hlt
cmp
xor
dec
dec
sub
push
sub
stos
cmp
pop
icebp
jns
inc
outsl
ficoml
jl
cli
in
cmp
jge
gs
xor
push
cmpsl
inc
lret
aas
cmc
aaa
and
popf
jno
inc
sub
jo
mov
clc
repz
inc
es
fadds
mov
roll
inc
cmpsb
and
in
test
add
sub
repz
rcrl
jge
pop
cmpsb
gs
push
pusha
stos
mov
jmp
clc
in
movsb
and
incb
jno
cmp
movsb
mov
xchg
inc
ja
jnp
aaa
inc
jno
sub
mov
sarl
das
sub
addr16
sub
jns
push
addr16
add
ret
shll
pop
xor
xchg
sbb
dec
out
xor
jp
inc
dec
mov
outsb
cmpsl
idiv
or
jnp
insb
inc
jmp
out
enter
in
xchg
lea
imul
push
pop
mov
movb
xor
push
ret
jecxz
push
pop
or
dec
stc
xor
iret
fsubrl
jbe
cmc
pop
rcll
mov
loopne
pop
sub
ret
push
cmp
mov
aad
sub
mov
cmp
std
xchg
in
push
adc
movsl
cmp
or
sarb
jnp
clc
mov
mov
fnstcw
sub
mov
popa
je
popl
cmpsb
out
push
mov
jo
aaa
pushf
pushf
add
xchg
push
sbb
mov
xchg
or
cltd
inc
sbb
pop
mov
xchg
fwait
pop
push
xchg
je
xor
inc
jbe
mov
fadds
mov
push
dec
fdiv
inc
stos
insb
mov
ljmp
sbb
or
into
cmpsb
push
jb
les
arpl
mov
cmp
cmc
push
mov
push
pop
and
xor
shll
mov
pop
ret
cmp
jnp
js
adc
pop
cmpsb
cmpl
add
mov
addb
rclb
and
pop
jne
inc
int
nop
lret
ret
cmpb
pop
out
insb
sub
push
repz
stos
jp
mov
dec
xchg
sahf
in
xchg
popa
and
or
addr16
push
mov
leave
pop
lock
inc
fsubrs
jns
aad
mov
ret
or
jns
shll
inc
pop
orl
scas
das
mov
push
jl
jecxz
repz
push
xor
pop
addr16
and
fists
cltd
cmpb
jo
std
cmp
ljmp
push
js
mov
jge
jb
pop
pop
inc
push
mov
test
xchg
daa
mov
nop
mov
js
dec
jg
push
mov
ret
aad
lods
sub
cmp
adc
add
jl
aam
sub
std
jp
dec
stc
sub
mov
popa
jp
mov
out
loop
add
adc
pop
inc
scas
stos
dec
cmpl
scas
cmp
cmp
in
pop
lcall
adc
rcrl
int3
out
imul
mov
aas
or
mov
push
hlt
leave
addr16
mov
fsubl
test
insl
subl
add
sbb
inc
dec
jecxz
sbb
les
cmp
adc
test
in
into
mov
cmp
inc
cmc
sub
push
ja
cmpsb
adc
or
push
xor
orl
out
mov
andl
mov
xor
adcl
xchg
imul
push
lcall
mov
mov
or
data16
imulb
int
testb
jmp
int
add
shlb
xchg
pop
and
nop
pushf
push
or
inc
jne
xor
adc
lahf
loope
jae
jns
mov
test
and
push
dec
int
frstor
cmp
sub
and
ror
sbb
mov
mov
jmp
fildll
cmpsb
jge
jae
sahf
les
lahf
xor
fcomps
inc
sub
add
pop
cmp
or
sub
jmp
add
and
pop
cmp
cwtl
ja
fiaddl
mov
popf
dec
leave
aas
pop
out
mov
push
sub
push
mov
push
mov
roll
mov
lcall
mov
push
cmp
sbb
call
mov
mov
sub
insb
mov
xchg
mov
push
sub
aas
add
repz
dec
xlat
jne
mov
jmp
xor
mov
mov
xor
xchg
out
cs
adc
aaa
cmp
and
sub
xchg
xor
aas
scas
stc
incb
mov
icebp
xor
leave
movsl
pop
enter
xor
jl
jns
and
fisubl
cmpsl
in
stos
cmp
int
cld
dec
mov
cmp
dec
ficoms
cs
xor
cmc
out
imul
cli
insl
lret
fists
push
das
ret
xchg
pop
nop
out
sub
fwait
push
lock
xlat
and
sub
imul
jg
imul
scas
xchg
jg
or
ljmp
cmp
adc
xlat
daa
xchg
lret
mov
mov
xor
cwtl
cli
enter
push
and
stos
or
sbbb
or
cld
lods
loopne
xor
aad
rcrl
popa
mov
adc
xchg
jle,pn
dec
dec
lea
jae
xor
out
or
cmp
mov
mov
mov
and
and
push
test
fdivrs
sbb
sahf
outsb
insb
sub
cld
cld
in
inc
aad
add
dec
movsl
add
fidivrs
jle
fwait
shlb
jb
aad
mov
xor
xorl
arpl
sub
roll
shl
xor
add
and
outsb
hlt
into
imul
flds
fisttpll
sti
lret
loop
loope
push
inc
pushf
sub
decb
cmp
loop
push
pop
jb
pop
out
add
lcall
loopne
mov
in
lret
daa
pop
add
mov
mov
insb
adc
inc
mov
sbb
adc
xchg
dec
push
cmp
cmp
pop
push
push
jb
adc
xchg
xchg
xchg
push
cmp
sub
push
xchg
in
loope
dec
hlt
sub
hlt
adc
jno
incl
mov
and
sbb
inc
xchg
sub
jo
inc
dec
gs
fs
cmc
test
pop
inc
jae
sbb
pop
cmc
fdivr
pop
dec
dec
aad
sbb
shl
je
js
call
xchg
sub
and
repz
sbbb
xchg
aad
pusha
int3
pop
pop
add
es
push
xchg
sub
push
dec
push
adcl
stos
or
sub
daa
cmpsl
out
loop
push
insb
pop
out
daa
test
lods
fcomps
xor
stos
adc
lret
pop
xchg
ja
cld
xchg
pop
ret
inc
test
lret
mov
test
and
sbb
jp
cmpsl
in
fisttps
sar
fwait
mov
add
mov
pop
sbb
inc
iret
ja
push
adc
js
fs
roll
or
int
rorl
xor
ret
test
cld
fisttpl
jne
in
sub
mov
loop
push
shlb
test
pushf
dec
inc
pop
mov
push
xor
mov
add
jbe
rorb
mov
mov
out
movsb
movsl
sub
daa
aas
arpl
dec
fstl
cltd
xor
add
cs
sbb
cmp
daa
adc
or
sub
dec
mov
out
adc
outsl
xchg
es
mov
sub
jle
or
mov
test
sub
push
push
push
jmp
aas
repz
mov
outsl
ds
and
add
cwtl
cld
lea
xor
jne
mov
rcll
cmp
movsl
jge
cld
gs
sbb
movsl
lcall
pop
insl
push
pop
hlt
push
loop
lock
rclb
mov
mov
es
daa
lahf
and
cmp
decb
dec
dec
aad
je
outsb
jmp
data16
xor
leave
sub
aad
mov
mov
xchg
push
sbb
leave
sub
mov
inc
jno
xlat
mov
push
push
stos
test
cmp
mov
sub
mov
aad
pop
pop
cmc
jp
das
test
int3
dec
inc
dec
testb
cmp
inc
push
jge
dec
mov
lock
jmp
fsub
lahf
enter
inc
jae
inc
lds
pop
test
hlt
fists
or
outsl
loop
ja
ljmp
xchg
sbb
clc
repz
pop
adc
movsb
dec
cmp
loopne
into
roll
lds
sub
str
xchg
mov
mov
push
fldt
mov
test
sub
cmc
lret
push
mov
xchg
mov
sbb
push
flds
inc
jno
jbe
inc
push
jns
arpl
rcll
xchg
mov
clc
in
push
add
das
hlt
iret
mov
and
fildll
iret
jge
sbb
mov
in
out
jne,pn
int3
sbbl
es
mov
push
arpl
push
mov
out
mov
xchg
dec
stc
cmpsl
in
and
lds
arpl
movsl
ret
js
jle
dec
insb
sub
jb
mov
xchg
or
std
fcoml
insl
loopne
mov
rolb
jp
mov
shrb
loope
push
ret
sbb
xor
icebp
add
cs
mov
imul
fbstp
test
dec
dec
aaa
mov
lock
xor
out
or
dec
movsl
push
das
jle
xchg
cmp
mov
ret
sahf
xor
rorl
pop
cltd
addr16
in
cmc
mov
daa
mov
mov
int
xchg
pop
and
pop
xchg
jnp
call
sub
ffreep
or
adc
inc
stos
mov
adc
mov
scas
mov
mov
repz
aaa
sub
cltd
sbb
loopne
or
iret
xor
jnp
fildl
out
and
std
pop
sbb
jb
dec
movl
icebp
cmc
push
cltd
xor
andl
push
inc
sti
mov
insl
ljmp
stos
sarb
cmc
in
mov
sti
and
or
test
or
cwtl
pop
ljmp
mov
push
out
xchg
push
push
in
add
aam
mov
jae
push
mov
xor
dec
stos
lret
xor
aad
lock
sub
cmp
cmp
xchg
xchg
icebp
and
cwtl
mov
insl
jmp
pop
stc
int3
mov
xor
jnp
sub
lea
ret
mov
pop
mov
sbb
push
xor
cmp
sbb
call
inc
aam
arpl
aad
test
fdivrp
or
jle
loope
mov
inc
nop
dec
test
ja
push
cli
mov
fwait
add
inc
pop
or
in
mov
sub
xchg
mov
test
cmc
clc
aaa
daa
lret
push
pop
mov
rcrb
iret
sub
pusha
out
adc
mov
leave
mov
pop
icebp
enter
add
dec
in
sub
inc
dec
jb
test
jecxz
adc
cmp
and
sub
out
pop
ret
xchg
divl
jbe
mov
test
cld
loop
push
mov
js
iret
test
push
xchg
push
scas
int
add
pop
push
aaa
jmp
jbe
jb
xorb
scas
ljmp
mov
pop
insl
call
jo
mov
adc
loop
bound
jb
or
adc
fwait
cs
add
clc
jl
fldcw
rcrb
pop
sbb
stos
jnp
or
mov
imul
gs
sbb
outsb
rol
lods
mov
sub
clc
cmpsl
gs
fistl
dec
sub
push
add
lea
frstor
add
push
hlt
mov
add
enter
outsb
lods
jle
movsb
mov
cmpsl
sahf
or
test
sti
mov
xchg
mov
out
mov
cmpsb
jmp
push
neg
pop
mov
adc
push
push
mov
test
jge
push
call
movsl
xchg
dec
dec
xchg
iret
clc
cltd
loop
fistl
cld
mov
and
negl
mov
push
push
inc
aad
pop
pop
xor
mov
lret
xor
cmp
lahf
inc
icebp
aam
dec
sahf
ss
lret
sub
sbbb
push
lods
cmp
into
mov
das
dec
add
stos
loop
mov
in
test
jle
jo
sbb
jae
aaa
mov
or
xchg
test
push
rol
ror
push
jecxz
push
lahf
hlt
and
push
subb
add
cwtl
sti
mov
imul
xchg
orb
jp
or
cmpsb
sbb
in
mov
add
push
sub
sbb
jmp
mov
aam
push
mov
test
xchg
pop
push
mov
mov
sub
and
mov
cli
pop
arpl
pop
rclb
mov
arpl
shrl
scas
testb
mov
movsb
rcrl
mov
jne
mov
and
jns
or
aam
mov
in
sbb
lret
aas
in
mov
mov
insl
jmp
sbb
arpl
loop
mov
movsb
push
in
or
mov
jne
das
xor
cmp
sti
push
rcl
rorl
lods
inc
push
fucom
adc
mov
ret
inc
pop
aas
sti
xchg
fmuls
xchg
pushf
es
imul
lret
repz
sbb
repz
lods
jg
xchg
xchg
mov
movsl
rcll
push
mov
cmp
in
mov
push
sbb
inc
test
pop
mul
in
test
sahf
and
and
dec
add
out
push
sbb
or
decb
pop
add
mov
outsb
add
andl
repz
mov
add
outsl
addl
mov
leave
or
ss
popf
fsubp
aam
js
push
repz
xchg
fwait
lock
aas
lcall
mov
rcr
mov
lods
mov
adc
pop
mov
push
movl
std
icebp
push
sbb
cmp
orl
stos
and
movsl
push
and
cli
sub
lds
and
push
jns
cmp
push
cmp
cmp
pop
push
dec
inc
lock
jo
jb
sbb
add
lea
push
jo
pop
ret
and
test
out
mov
jne
insl
clc
push
and
stos
fadds
inc
lahf
sbb
sub
test
aas
mov
bound
add
test
aas
dec
outsb
ret
xchg
lods
je
lret
mov
mov
mov
loope
xchg
cltd
addr16
mov
rolb
xor
icebp
inc
xor
cld
mov
inc
sahf
and
mov
xchg
insb
cmp
pop
loopne
push
stc
jmp
hlt
in
push
fadd
inc
push
xlat
rcl
es
cmp
rcl
ret
stc
int3
adc
or
es
jbe
test
aad
in
cli
pop
fwait
or
lahf
mov
pushf
mov
mov
adc
dec
pop
addl
movsl
fildl
sub
jecxz
stos
pop
cwtl
cld
or
xor
fdivr
hlt
dec
mov
push
sbb
jns
jp
fsubs
jno
jne
mov
pushf
pop
or
out
mov
out
push
shr
insl
mov
stc
test
push
adc
inc
mov
sti
sbb
and
inc
push
jl
pop
add
adc
and
popa
out
pushf
sarb
and
insl
incl
das
sbb
push
roll
test
cwtl
inc
popl
add
xor
sub
mov
sbbb
and
lcall
aas
cmpsb
lret
sub
mov
stos
in
cmp
leave
add
jmp
mov
sarl
call
test
xchg
ss
cltd
pop
leave
cli
push
stos
pop
push
aad
cmp
cld
dec
adc
bound
jp
aas
push
dec
xor
cmp
jae
and
mov
sti
lret
adc
out
adc
add
sbb
push
inc
lcall
inc
xor
add
mov
lcall
xchg
cmpsb
aaa
push
jl
mov
jl
push
dec
fldcw
icebp
cmp
rorb
pop
bound
jnp
cmp
xchg
push
lods
gs
ss
lods
and
xorl
test
lock
and
jmp
inc
imul
pop
lds
add
adcl
jb
cmpsl
ss
inc
or
push
hlt
push
movsl
jge
shr
mov
mov
or
ds
xchg
inc
iret
xor
icebp
push
cmpsl
in
push
movsb
les
les
xor
or
dec
lods
or
or
test
cli
ret
sbb
cli
lret
xor
lret
out
cli
jmp
xor
xor
fcompl
xlat
mov
jmp
jnp
aas
or
out
mov
subb
inc
repnz
add
je
or
pop
leave
push
and
xor
xchg
or
pop
ja
pushf
push
inc
and
mov
ljmp
pop
nop
pop
add
daa
stos
jne
pop
cmpsb
mov
addr16
mov
test
add
mov
fcomps
sbb
fsub
xchg
mov
test
popa
sarl
sub
mov
pop
imul
xchg
lret
sub
leave
xor
dec
adc
xorb
idivl
dec
pop
xor
inc
in
sti
and
shll
sbb
ret
cmpsl
jbe
dec
in
jle
lds
stos
stc
repz
cwtl
movsb
ljmp
outsb
or
int3
mov
movsl
xchg
push
cmp
insl
and
mov
cmpsb
cmp
sbb
xlat
pushf
mov
nop
gs
or
in
and
and
jb
in
negb
ljmp
push
dec
mov
jae
rcll
and
jo
fmul
cmc
jns
imul
stos
sub
jmp
and
mov
test
jmp
xchg
or
sbb
call
outsb
lods
pop
addr16
push
repnz
int3
popa
adc
lcall
pop
outsb
inc
xchg
or
test
mov
repnz
lds
sbbl
inc
xorl
mov
or
out
mov
inc
sbb
and
je
mov
sbb
rclb
call
mov
dec
movsb
out
pop
and
pusha
fcmovne
jno
mov
inc
mov
cmpsl
inc
or
xor
lods
jecxz
mov
push
jns
lret
ljmp
subl
mov
xchg
jbe
xor
dec
mov
sbb
jb
insb
sub
push
cltd
jbe
idivb
cmp
push
fldcw
andl
iret
movsb
xchg
cltd
mov
jmp
jnp
pop
int
pop
inc
dec
shlb
add
inc
cmpl
lea
mov
xor
sbbb
into
out
mov
dec
out
aaa
loop
sti
lahf
je
xchg
and
shrl
lahf
xlat
fmul
addr16
mov
sbb
cmp
inc
jecxz
scas
dec
inc
in
sub
push
int3
call
enter
shll
nop
jne
ret
add
fsubs
into
pop
adc
cmp
xor
test
or
das
mov
mov
lea
das
sarb
jo
roll
cwtl
cmp
sub
cmp
jbe
sub
jno
pop
xchg
dec
mov
dec
dec
and
cmpsb
int3
movsb
jg
xor
jmp
fbstp
pop
mov
fs
pop
fadds
rorl
rolb
in
or
insb
fbstp
jae
sub
add
ret
cld
pop
sarl
jg
xchg
rolb
out
xchg
pusha
in
add
sarb
sbb
icebp
int3
pop
xchg
and
hlt
pop
outsl
cmpsl
mov
push
fimuls
adcb
ret
pop
mov
arpl
hlt
sub
ljmp
inc
out
lds
test
insb
pop
daa
mov
push
sti
or
dec
mov
sub
je
loopne
scas
mov
cwtl
mov
jo
aaa
scas
iret
mov
ret
or
push
jge
sbb
aas
in
pop
ficoml
push
jle
testb
aam
inc
pop
std
arpl
xor
xor
dec
das
or
and
sbb
dec
mov
mov
xor
mov
dec
inc
cmp
add
cmp
cmp
sbb
dec
je
in
dec
std
push
cmc
orl
pop
rorb
lret
loope
jnp
inc
mov
jge
push
jns
and
push
mov
push
xchg
pop
sub
data16
repz
mov
mov
aas
aas
daa
or
movsl
cmp
sub
xor
or
pusha
inc
bound
repnz
aad
adc
fsubs
mov
jge
cltd
inc
je
xor
pop
cltd
mov
inc
xor
movsb
movsb
mov
dec
test
mov
das
push
or
leave
xor
pop
iret
mov
lahf
mov
aad
jne
sarb
pop
cs
push
cmp
cmp
stos
jb
dec
loope
stos
js
push
or
fmull
movsb
pop
int
mov
sbb
inc
movsl
jne
push
sub
clc
sbb
cmc
push
sbb
pushf
nop
mov
sbb
inc
push
arpl
fidivrs
lret
sub
cmpsl
xchg
lock
sub
data16
mov
test
jl
mov
stc
mov
inc
xchg
push
in
imul
rcl
or
push
in
mov
aaa
cs
jge
add
sbb
gs
les
xchg
lds
pop
cmp
rcll
out
and
inc
sub
stos
push
sbb
xchg
shlb
cmpsl
je
dec
imul
repz
out
popf
mov
sbb
or
fyl2xp1
add
push
idiv
loop
aas
repnz
mov
push
xor
outsl
lods
ret
addr16
jno,pt
clc
pop
pushf
xchg
jne
popa
jge
das
mov
inc
cmp
mov
or
push
push
in
aam
stos
sahf
jl
addr16
movsb
fmul
mov
mov
lds
xor
mov
ljmp
inc
sub
xchg
pop
sbb
mov
lods
lret
and
dec
pop
cmovns
xor
out
or
arpl
sbb
scas
ljmp
cmp
bnd
lea
pop
dec
jnp
scas
sub
popf
sbb
mov
sub
dec
fstps
jbe
mov
loop
das
cmp
fs
mov
movsb
dec
leave
or
and
pushf
outsb
pop
rcll
test
inc
xor
and
loop
sub
jnp
test
sahf
lock
or
adc
push
std
in
notl
xor
dec
aad
sbb
shlb
daa
ljmp
mov
or
mov
aas
gs
int3
sbb
push
repnz
sbb
jbe
xchg
negl
lea
mov
divl
clc
dec
push
popf
pop
mov
out
dec
fwait
aas
cwtl
pop
mov
out
add
scas
mov
lds
push
or
js
mov
sahf
aaa
adc
enter
xchg
lret
xor
jne
jne
popa
push
ja
ret
fcompl
jmp
scas
int
fbld
mov
jle
std
mov
fisubl
icebp
fmull
jge
jb
shrb
dec
js
push
fdivrl
cmp
xchg
cmp
icebp
repz
in
sbb
xor
fimull
popl
dec
fs
push
es
pop
pop
aam
sub
cs
xchg
pop
leave
lret
mov
inc
lods
nop
cld
add
icebp
pushf
gs
jmp
outsl
pop
inc
ja
icebp
xor
add
das
fs
push
lods
out
mov
fstpl
sbb
xchg
int
fcomp
inc
lods
lcall
ds
pop
stos
xor
pop
stc
push
fisttpll
jbe
dec
sub
popf
movl
mov
xchg
cmp
push
cltd
mov
gs
xorl
push
in
pop
mov
xchg
adcb
cmp
dec
pop
mov
loope
aad
push
lahf
rolb
dec
cli
fmul
inc
fimuls
pop
sbb
and
imull
dec
sbb
xorl
dec
icebp
inc
icebp
jmp
arpl
lahf
insl
lahf
test
scas
aaa
push
fcmovnb
sbb
call
test
push
sub
jl
dec
out
dec
xor
or
leave
lahf
mov
aam
add
xchg
adc
cmpsl
inc
pop
rorb
mov
scas
pusha
xchg
cld
ja
sub
jmp
aam
rcrl
aas
and
lods
push
jno
xor
dec
jp
push
sbb
fcomps
in
jne
js
pop
jmp
repnz
xor
enter
mov
test
fstps
push
dec
cmp
js
shlb
sbb
scas
mov
movsb
or
and
pop
insl
mov
fists
mov
clc
dec
push
add
addr16
xchg
cmc
xchg
jae
pop
mov
out
cwtl
push
int3
cmp
adc
out
cmp
out
outsl
and
fldl
hlt
test
add
sahf
add
pop
test
das
mov
out
cld
loopne
lock
jo
dec
add
xchg
and
rcll
push
sahf
hlt
inc
in
xor
cmp
jle
adc
fs
js
cmc
dec
or
pusha
mov
jb
loop
or
sarl
in
jnp
cmp
fcoms
lock
roll
clc
push
insl
iret
cmp
lock
and
popf
shlb
pop
jno
xor
lret
jp
test
jno
loopne
fs
add
dec
xchg
out
daa
dec
mov
mov
add
cld
cmpsb
fwait
sbb
sbb
and
fmuls
hlt
mov
jp
ljmp
andb
push
div
cmp
icebp
xlat
movsl
aam
and
int
add
and
push
in
cmp
xor
imul
fs
ret
sbb
scas
jo
dec
adc
jb
mov
cmp
lods
jns
add
pop
sbb
mov
loopne
iret
mov
push
scas
clc
mov
int
or
adc
inc
loop
fcompl
add
xchg
hlt
sub
loop
dec
shlb
pop
jo
clc
adc
mov
adc
imul
inc
adc
mov
negl
jno
mov
fbstp
cmc
cmp
push
adc
repz
loope
and
mov
mov
call
jns
dec
dec
ja
dec
mov
rorb
push
dec
mov
int
jl
dec
add
imul
scas
stos
mov
cltd
mov
or
push
das
or
mov
adc
or
in
repz
add
push
sbb
ljmp
sarb
sbb
pop
lea
cmc
inc
pop
xor
leave
adc
daa
es
jg
mov
xor
or
outsb
loop
dec
stos
jno
cs
jns
je
aad
std
test
ret
shrl
loopne
gs
adc
mov
popf
ffreep
ret
sub
shll
cs
mov
outsb
ss
inc
sti
mov
push
jmp
test
jne
roll
push
jl
jnp
roll
es
jo
pop
icebp
cwtl
and
mov
jno
jno
aam
inc
shrl
enter
fs
push
inc
loope
ja
inc
push
fucomi
or
push
push
out
repnz
cwtl
adc
xlat
js
stc
and
outsl
outsb
adc
adc
and
in
nop
pushf
sahf
in
lret
inc
mov
mov
mov
inc
les
in
push
jne
popf
jle
ret
sahf
pop
cmp
pop
sub
jge
pop
push
sahf
jg
dec
add
xlat
test
pop
icebp
movsl
sub
dec
shl
add
out
mov
mov
jp
jno
stos
insb
insb
mov
and
xlat
into
lret
popf
sbb
sub
jmp
fadds
and
xor
lret
cmp
ss
mov
clc
mov
rclb
movsl
push
xchg
outsl
add
add
outsl
mov
jne
cmp
push
push
add
pop
pop
pop
jnp
outsb
outsb
xchg
int
fsubrs
ret
nop
jle
cmp
jno
xchg
repz
push
bnd
inc
imul
fsubrp
fsubrl
and
and
lods
add
xchg
test
sbbl
vpcmpestrm
inc
xor
pushf
out
lret
add
sti
scas
inc
stos
cmovne
inc
testl
xchg
mov
inc
mov
dec
out
shlb
loope
push
pop
bound
imul
std
xor
aaa
ds
jbe
mov
int
pop
icebp
inc
imul
add
daa
out
cmp
imul
pop
mov
shll
and
ss
sbb
inc
stc
div
sarb
sti
mov
lahf
cmc
dec
push
movsb
cmp
xchg
stos
sbb
dec
out
je
mov
pop
pop
xor
xchg
xor
dec
jae
mov
ficoms
mov
hlt
ja
push
scas
mov
ret
or
aas
push
pop
repz
adc
adc
push
sbbl
cmc
mov
jmp
jo
out
outsb
test
repz
xchg
xchg
stos
cmp
les
xchg
jmp
lea
push
icebp
mov
ret
fsqrt
adc
cmp
xchg
jecxz
pusha
cli
mov
ret
xchg
add
fucom
jl
iret
pusha
scas
mov
or
lcall
movsl
xchg
mov
xor
inc
jmp
xor
daa
roll
aad
xchg
movb
cltd
push
dec
jecxz
xor
fsqrt
cmp
xlat
sub
sub
pop
add
mov
scas
inc
jns
cwtl
popf
dec
xor
adc
jnp
mov
fucom
cmpsb
or
cmp
pusha
dec
gs
lahf
fisttps
ffree
cwtl
daa
inc
movsb
xor
fisubl
addr16
push
lret
daa
mov
jae
loopne
andb
pop
jg
stos
adc
mov
or
pop
mov
je
xchg
sub
inc
pop
pop
inc
inc
or
call
fstps
add
test
jno
sbb
cmp
lea
bound
xor
cmp
inc
fcomi
dec
imull
mov
mov
aaa
push
pop
mov
lcall
divl
pop
sbb
test
mov
or
cmp
in
mull
rol
clc
xor
or
jg
popa
icebp
bound
aas
jge
rorl
adc
cwtl
xor
loop
arpl
enter
mov
in
fldenv
imull
cwtl
cmpsb
lret
add
add
mov
xor
mov
ss
jl
push
xchg
mov
xchg
push
lcall
pop
dec
add
cmpsl
rorl
ficoms
loopne
ljmp
in
out
or
xchg
jne
aam
add
or
into
xchg
sbb
mov
adc
sti
mov
lock
mov
add
jecxz
stos
popf
arpl
jge
hlt
leave
sub
push
xchg
dec
xor
mov
or
loopne
clc
inc
aad
add
mov
xchg
call
ret
or
add
xor
cli
push
scas
leave
mov
daa
cmp
mov
icebp
sar
mov
push
imul
sbb
sti
out
inc
cmp
xchg
pop
repz
push
push
movsl
pop
in
lahf
out
dec
mov
roll
cs
adc
pop
movsb
insl
mov
push
or
repnz
mul
mov
and
ljmp
xchg
add
not
insb
push
int
mov
nop
mov
inc
dec
or
jecxz
xlat
hlt
mov
cmp
imul
xchg
add
scas
ffree
xlat
add
insl
and
jecxz
mov
and
push
and
in
aad
jp
and
shl
add
lods
in
test
dec
dec
int3
stos
ss
inc
push
pop
stos
sub
jmp
mov
lods
jmp
inc
icebp
shrl
fists
or
repz
lret
mov
push
and
mov
mov
daa
mov
mov
add
fiaddl
repnz
pusha
xchg
dec
bswap
shrb
xchg
and
data16
mov
sbb
into
rcrl
scas
fsts
pop
push
inc
pop
mov
dec
jbe
clc
fldenv
and
dec
cli
lret
outsb
clc
or
incl
pop
mov
mov
iret
add
pop
cmpsb
cmp
insb
xor
stos
sbb
cmc
into
and
cltd
lods
jl
enter
fsubrl
or
add
aam
push
stc
mov
hlt
fwait
cmp
repnz
or
mov
lea
jnp
pop
mov
repnz
adc
xchg
mov
xor
fdivr
aas
lock
mov
loop
cmp
xchg
pop
pushf
sbb
pop
inc
or
std
and
jle
arpl
cmc
add
int
imul
in
mov
add
insb
das
push
aas
fists
mov
lock
clc
mov
pushl
jmp
bound
hlt
insl
push
jbe
es
ja
sbb
inc
xor
loope
mov
mov
sbb
loopne
sbb
dec
xchg
loop
fwait
aad
push
mov
ds
push
int
adc
test
gs
arpl
fucomp
and
sarl
imul
insl
out
cmpsb
sub
in
cmp
rol
in
inc
into
lods
xchg
das
cmpsb
fimull
sbb
testb
adc
jmp
push
repnz
sbb
xchg
fstpl
outsb
adc
and
int3
mov
jge
mov
mov
xchg
sub
jne
lods
pop
das
jb
mov
stc
lods
add
fwait
sbb
fwait
jae
add
jo
jmp
pushl
add
or
loopne
popa
fadd
addl
push
push
cmp
xor
popa
loope
jmp
jb
jnp
imul
add
sub
hlt
push
xchg
lods
xchg
mov
adc
pop
or
popa
jg
cs
mov
mov
push
js
insb
aaa
dec
into
enter
movsb
inc
mov
mov
subl
scas
into
test
jae
filds
out
or
pop
int
adc
sbb
shlb
add
mov
js
mov
data16
mov
inc
jge
cmp
xlat
jb
mov
mov
decl
aas
rclb
xor
in
mov
mov
dec
es
mov
aad
in
inc
dec
xchg
or
call
stc
addb
jbe
cltd
add
add
xorl
fmull
call
cmp
incl
stos
les
sub
jl
jmp
outsl
nop
push
push
jns
pop
sbb
cli
popl
mov
loop
lret
pop
cmp
rcrl
mov
sbb
inc
mov
in
scas
cmp
cmp
jle
in
mov
addr16
out
js
sbb
inc
pop
pushf
jp
pop
outsl
outsl
sarb
mov
sahf
push
hlt
mov
cwtl
hlt
das
jg
cmp
jns
or
ljmp
out
into
js
adc
subb
push
mov
bound
imul
inc
out
aaa
aam
lock
gs
xor
adc
out
arpl
and
daa
xchg
mov
pop
push
leave
mov
jg
std
inc
mov
and
outsl
xchg
add
repz
sbb
cmp
jle
ror
es
sbb
or
add
xor
shr
xorb
out
out
sbb
mov
add
push
sub
cmp
or
mov
push
pop
mov
xchg
or
push
cmc
push
and
std
cwtl
and
mov
sub
stos
clc
call
in
iret
pushf
jns
fstps
aaa
lds
rclb
sub
jne
fstl
pmaxsw
add
imul
sti
jns
int3
xor
push
mov
or
filds
jg
sbb
pop
ja
mov
pop
out
inc
xor
out
pop
jno
test
int
mul
insb
mov
int3
jno
std
rolb
fs
inc
cmp
imul
pushf
sti
cmpb
mov
xchg
xor
or
mov
mov
fsubrs
bound
lcall
sub
call
cmpl
jg
or
jmp
imul
enter
int
and
enter
aad
cmc
bound
push
fsubrs
gs
out
cwtl
push
add
mov
mov
addr16
sub
mov
das
add
mov
stc
mov
push
xchg
or
cmp
jl
cmp
or
cmpsb
or
add
out
jmp
sbbl
pushf
int
sarb
lods
or
rcll
dec
ljmp
jo
inc
pinsrw
imul
bsr
push
dec
jb
scas
sti
sarl
jbe
xchg
dec
and
adc
xchg
mov
pushf
lods
push
inc
pop
aad
jae
and
xor
leave
xchg
cmp
inc
inc
and
push
or
mov
gs
jns
aad
push
es
push
xchg
cmp
jmp
lock
movsb
cmp
sub
push
ret
subl
fcoml
ret
mov
cld
push
gs
push
mov
into
jecxz
movsl
or
mov
out
add
adc
bound
mov
js
lret
gs
dec
popl
jo
shr
sar
fs
enter
pop
cmp
dec
adc
add
or
or
adc
sahf
test
xor
test
lret
push
cmp
xchg
add
add
pop
sbb
mov
pop
mov
xor
sbb
cmp
stos
cmc
pop
imul
mov
mov
int
sti
mov
jb
arpl
cmpsl
jle
nop
ret
inc
aas
push
jne
call
cld
inc
lahf
outsl
aas
sbb
ss
enter
sarl
xchg
inc
stc
lds
mov
leave
inc
push
xor
cmp
cmc
jne
or
pop
jge
aad
xor
pop
xor
call
push
push
mov
push
cmp
sub
sub
sub
cmc
dec
add
mov
xor
xchg
pop
stos
sarl
push
push
jno
out
ljmp
mov
loop
lea
push
mov
leave
inc
jp
call
xor
mov
rorl
mov
gs
xchg
push
cmp
xor
pushf
push
out
pop
inc
xchg
pop
dec
sbb
mov
inc
dec
or
jp
fstl
in
sbb
mov
mov
mov
pop
shll
mov
stos
mov
out
xchg
or
jl
pop
mov
or
mov
and
sub
xlat
adc
dec
gs
cmp
xchg
inc
gs
je
inc
xchg
pop
cli
jg
cmp
pushf
rclb
scas
aam
addps
xchg
adc
cmpsb
outsl
push
pop
add
sub
mov
fs
inc
inc
push
add
popa
scas
jnp
clc
inc
cmpsb
mov
sarl
mov
push
sbb
jns
mov
lea
adcl
sti
or
lock
notb
stc
test
in
xchg
ljmp
std
repnz
cltd
push
dec
lret
and
xchg
jg
mov
lock
mov
jmp
out
cs
fxch
dec
dec
jbe
rolb
add
mov
cld
call
xor
pushf
cmp
pop
andl
inc
and
push
and
hlt
ss
stc
xor
push
ret
add
push
jbe
dec
xchg
in
iret
jge
lods
xchg
repnz
pop
sbb
mov
xchg
ja
cmp
addr16
inc
mov
fcmovb
pop
stc
test
testb
or
jmp
mov
sbb
cmp
sahf
xchg
jbe
int
cli
mov
lods
imul
and
icebp
jl
mov
adc
pop
push
sarl
jb
mov
cmpsl
pop
lock
push
cmp
aaa
jnp
and
hlt
xchg
enter
aaa
push
loop
push
fnstsw
or
aaa
or
pop
dec
push
mov
incb
mov
in
movl
in
inc
dec
inc
mov
fldenv
and
inc
aam
adc
jb
xor
push
mov
enter
sub
cmp
stos
mov
adc
aam
decb
int
idivl
xchg
lea
adc
xchg
andl
jp
les
dec
jle
das
fnstcw
arpl
sub
pusha
sahf
lods
fs
stos
sub
out
dec
aad
sbb
test
shll
punpckldq
bound
pop
xchg
sbb
mov
push
sbb
xor
ret
mov
aam
jg
dec
jge
dec
dec
xchg
sub
add
pop
in
hlt
add
cwtl
data16
cmp
enter
ljmp
sbb
jne
popa
dec
cmp
jne
xlat
mov
in
mov
faddp
cmp
jb
dec
out
sbb
enter
or
mov
test
jmp
xlat
inc
adc
push
and
mov
dec
xchg
inc
mov
sub
push
ljmp
pop
and
xchg
inc
push
jnp
jp
test
xlat
lret
mov
push
cld
sbb
push
dec
lods
sbb
rolb
sahf
add
jno
gs
movsb
pusha
jmp
xchg
mov
mov
and
arpl
inc
lods
divb
aas
enter
pop
data16
jae
cmp
arpl
xchg
mov
inc
and
sbb
pop
adcl
stos
and
out
fcomi
inc
fwait
aam
movsb
andb
xchg
pop
scas
adc
je
cmpb
mov
add
es
jmp
mov
xchg
mov
xor
adc
xor
and
adc
jae
shl
add
repz
and
inc
mov
mov
jl
pushf
or
dec
ds
pop
in
mov
jns
inc
mov
out
cld
mov
ljmp
ret
ljmp
push
sub
lea
add
xchg
jmp
in
sub
cmpsw
cmpsl
add
jne
in
xchg
pop
fdivrs
xor
or
jno
and
sub
dec
sti
sahf
lcall
out
mov
outsb
add
push
mov
dec
out
lods
test
or
stos
jp
pop
shll
xchg
shll
push
rolb
mov
sub
cmp
iret
xchg
imul
cmp
sbb
pop
insl
std
int
stc
and
dec
scas
loope
inc
pop
lret
std
negb
mov
ss
inc
stos
pop
jns
test
leave
fldt
add
stc
int3
lea
testb
cld
pop
jmp
inc
lret
xchg
loop
arpl
clc
outsb
sub
outsl
pusha
iret
inc
test
lock
mov
iret
and
cli
sbb
ljmp
testl
fcoml
lock
xor
cwtl
arpl
lods
loopne
cli
daa
aad
mov
sub
cmp
xor
jl
mov
mov
aad
mov
sahf
sbb
cs
movl
arpl
rcrb
inc
leave
insb
cwtl
push
jle
add
shlb
aad
xchg
es
adc
daa
jne
xchg
sbb
mov
cs
inc
xchg
les
lcall
fbld
adc
inc
pop
sbb
mov
inc
in
push
repz
push
jge
mov
gs
aas
fists
dec
cmpb
data16
inc
test
or
call
or
movsl
push
xchg
pop
inc
lods
xor
cmp
clc
jb
test
in
icebp
xor
cmpsl
dec
std
xchg
and
cli
jo
mov
jle
dec
dec
in
mov
sub
xchg
mov
fs
pop
cmpsb
pop
ljmp
pop
in
xchg
xor
jnp
insl
fdivrl
xchg
xlat
mov
jmp
push
dec
divb
xchg
add
xchg
push
das
xor
or
clc
inc
dec
xchg
add
test
or
mov
jecxz
ret
fidivrl
mov
clc
mov
iret
or
or
lock
sahf
out
fs
xor
fs
aad
pop
fldt
ljmp
das
sti
lock
mov
or
loopne
cmp
mov
les
sub
jno
pop
cmpb
inc
cmc
aam
sti
movsl
scas
orl
or
cmp
gs
dec
xchg
scas
cld
lret
push
add
mov
xor
shrb
xor
adc
outsb
mov
mov
dec
cmp
rorb
lret
into
and
push
jp
es
sbbl
cli
mov
adcb
outsl
cwtl
divl
mov
aam
fldt
and
xor
mov
aaa
lds
fistps
subb
push
dec
inc
pushf
inc
xchg
je
aad
dec
mov
mov
test
sub
das
mov
jo
and
mov
lret
in
test
loope
pop
and
and
ja
daa
jne
jbe
adc
inc
or
xchg
jp
xchg
add
pop
les
sbb
fwait
jb
dec
xchg
xchg
shl
dec
dec
into
lahf
insl
lret
pop
arpl
mov
inc
xor
fs
sahf
jecxz
push
jb
xchg
xchg
aaa
inc
out
sub
lea
pop
push
sbb
xor
cmp
incb
pushf
mov
or
stc
cmpsl
sbb
icebp
lods
pushf
dec
jnp
mov
mov
lds
lcall
jae
xor
cmp
in
fcmovne
push
pop
add
lea
fistpl
pop
loop
mov
gs
jmp
dec
fisubl
pusha
gs
popf
inc
in
repnz
xchg
das
inc
inc
rcl
xorl
pop
xorb
mov
imul
mov
xchg
pop
aam
mov
sub
call
movsb
sbb
lock
sahf
mov
dec
push
xchg
add
mov
pop
jb
das
jns
cmpsl
mov
ja
pop
mov
jbe
ret
loop
lahf
mov
data16
cmp
sub
pop
pusha
or
into
sbbb
cmp
and
mov
inc
das
pop
xor
dec
sub
jge
mov
aas
int3
jge
or
xor
push
inc
pop
in
xor
stos
aam
les
dec
mov
mov
sbb
inc
lahf
add
lea
push
and
cmpsl
sub
lods
xor
rorb
push
fiadds
cmp
xlat
xchg
pop
xchg
lret
mov
xor
aaa
push
mov
jb
test
dec
mov
mov
pop
sbb
xor
stc
adc
icebp
jo
xchg
loopne
xor
adc
idivb
mov
ss
xchg
sub
dec
int3
dec
fisubs
xor
xor
fists
jp
jnp
call
dec
or
mov
push
fisttpll
mov
jge
sbb
in
cmp
movswl
insb
addl
cmp
mov
jne
out
pop
cltd
icebp
cmp
inc
mov
add
inc
pop
aad
mov
dec
fs
pop
je
xor
sub
cmp
push
dec
jle
lods
mov
mov
cmp
aad
mov
mov
push
sbb
jns
xor
ret
pop
xlat
mov
decl
sbb
and
cmp
mov
in
or
push
xor
adc
pusha
xor
arpl
mov
arpl
test
inc
iret
cmpsl
pop
imul
data16
inc
sub
xor
movsl
inc
inc
dec
lods
aas
nop
pop
adcb
push
stc
or
cmp
jecxz
sti
ljmp
mov
enter
sahf
jmp
jle
test
cmp
cmpsb
pop
add
mov
fbstp
rorb
adc
jecxz
insb
pop
push
shrb
xchg
dec
icebp
test
aad
ja
jbe
push
mov
jmp
mov
or
cmp
js
push
je
mov
and
rcr
inc
hlt
xor
and
sub
imul
or
fdivr
sahf
loop
xor
push
push
add
aaa
mov
fldenv
insb
or
add
bound
scas
addr16
jno
sarb
pop
dec
popf
sub
push
jnp
leave
push
mov
daa
or
les
push
cmpsl
cld
repz
into
jbe
lds
adc
xor
lahf
hlt
loopne
sub
rorb
cli
and
push
push
fwait
xlat
pop
insl
fdivrl
fstl
mov
popf
arpl
xor
mov
imul
adc
xchg
and
cmpsb
jae
jbe
fisttpll
sbb
lds
and
xchg
xor
andb
sbb
mov
mov
decb
mov
adc
push
pushf
sbb
cmc
out
mov
push
mov
icebp
insb
inc
or
jg
int3
lock
aas
in
outsb
sub
adc
push
test
enter
outsl
add
adc
mov
dec
imul
insl
fnsave
outsb
xor
jne
adc
fs
les
add
aam
fildll
call
nop
add
sub
mov
cli
jb
test
xor
push
cmpsl
test
aas
into
pop
jecxz
std
nop
push
or
mov
fisttpll
pop
lock
into
or
int3
les
jmp
mov
add
sub
js
pop
sbbl
inc
ds
pusha
idivb
sbb
insl
outsb
inc
mov
adc
mov
push
dec
dec
notb
int
outsl
fstl
hlt
xchg
xor
insb
ror
or
sbb
xchg
inc
xchg
gs
rcrl
xchg
push
imul
mov
cld
arpl
jl
pop
das
rorl
stc
lcall
sbb
stos
sub
pop
cltd
lret
insl
and
mov
lock
mov
mov
jg
pushf
mov
mov
aad
dec
add
enter
loopne
xchg
out
enter
push
pop
jne
add
iret
pushl
adc
mov
mov
addr16
cld
mov
dec
test
into
jbe
movsb
dec
jle
and
xor
lret
pushf
es
cmp
stc
dec
into
jl
push
cmpsl
je
fsubrl
aaa
and
repnz
les
outsl
pop
dec
push
lods
or
cmp
es
push
or
xchg
jno
jae
aam
sub
mov
lret
stos
gs
lcall
mov
icebp
add
fcompl
imul
aaa
pop
iret
and
je
push
mov
mov
sarb
cmp
inc
or
inc
incl
ret
mov
jnp
imul
jmp
aad
outsb
or
inc
sbb
xchg
dec
and
daa
fidivs
mov
dec
loope
sub
push
or
add
lret
adc
jp
cmp
cld
mov
sbb
lret
icebp
into
stos
cmpsb
xchg
add
inc
hlt
negl
xchg
cmpps
push
cmp
cmc
or
popa
les
testl
mov
xor
inc
push
xlat
repz
dec
mov
repnz
push
aas
jl
inc
lret
fcomp
sbb
xchg
xchg
jae
scas
or
adc
jle
sub
imul
dec
jb
gs
push
sbb
arpl
mov
call
sbb
scas
insl
pop
and
sub
and
mov
and
inc
jp
ret
ds
xlat
xchg
adc
adc
and
push
nop
addr16
frstor
adc
adc
xor
subl
inc
in
mov
mov
adc
jge
stos
jp
or
dec
mov
insl
or
negl
mov
mov
fstpl
or
dec
sbb
shrl
adc
or
js
sub
push
add
cli
fsubrp
lret
adc
push
push
xchg
xchg
fisttps
enter
jno
sbb
cs
xchg
mov
jl
jmp
mov
je
push
or
loope
jne
mov
sub
adcb
dec
je
sub
xor
data16
std
lock
stos
loop
cltd
pop
stos
arpl
cmp
popf
mov
out
mov
popa
mov
jp
das
push
out
xor
dec
insl
shr
sub
inc
out
pop
je
push
sbb
ds
push
push
or
xor
orl
adc
bound
inc
xchg
xor
bound
fsqrt
fildll
cmp
es
dec
dec
and
sbb
sbb
sar
xorl
cmp
push
adc
cmc
fimull
dec
aaa
insb
and
sarb
mov
out
in
jb
arpl
mov
xchg
arpl
data16
mov
pop
ds
pop
shlb
out
push
mov
daa
add
popf
pop
lock
fs
mov
push
and
add
xchg
sbb
cmp
xor
adc
sbb
pop
fisubrl
jno
add
bts
loope
dec
out
cli
lea
mov
into
jp
fmulp
or
rol
movsl
mul
into
pop
stos
xchg
dec
mov
adc
and
or
cmpsl
xchg
xchg
popa
mov
loope
sbb
outsl
dec
jae
cmp
xchg
jns
cmpsb
jl
fs
xchg
mov
mov
add
cmp
loope
pop
arpl
push
imul
mov
mov
sbbl
push
push
jl
mov
scas
push
adc
push
push
cltd
cs
fdivrp
in
movsl
jmp
shlb
leave
push
enter
aam
cmp
imul
sub
mov
push
sbb
test
xor
sbb
mov
call
mov
lahf
in
jbe
xchg
sahf
daa
mov
pusha
push
shl
sbbl
mov
or
aam
fs
aam
cwtl
subl
pop
jbe
sub
jg
dec
dec
lock
fs
mov
xchg
pop
cli
adc
rcl
push
pop
adc
lds
sbb
mov
jg
adc
dec
add
mov
jo
rolb
es
xor
scas
xchg
mov
in
pop
xchg
pop
fwait
int3
fwait
imull
cltd
jno
mov
ficoml
or
jg
mulb
shrb
adc
scas
xor
xchg
movsl
xor
dec
rol
push
hlt
mov
sbb
movsl
cltd
xchg
add
popa
movsl
pop
inc
cmp
jecxz
pop
and
or
fimuls
test
mov
addb
fmuls
adc
pop
sub
es
push
movsb
pop
xlat
pop
addl
in
pop
pushf
rolb
int3
sahf
xorb
ja
push
sbb
adc
cmp
fistps
push
sbb
jne
add
sbbb
and
lret
out
lcall
jbe
mov
mov
jb
mov
jne
stos
push
add
push
xor
adcl
stos
jae
mov
loopne
mov
mov
jne
shlb
mov
push
sub
xlat
sub
lcall
in
pushf
pop
mov
repnz
lcall
jecxz
movswl
cmp
out
stos
repz
mov
add
dec
call
aaa
xor
fwait
jle
sbb
shll
mov
rcrb
fimull
mov
mov
testb
cmp
xchg
mov
bnd
xchg
sbb
movsl
in
cmp
inc
adc
sub
out
mov
movsl
jnp
cmpsl
leave
jb
fisttpl
outsb
push
sub
or
pop
loope
and
xor
xor
popa
arpl
jns
lods
xor
mov
ret
xchg
jmp
testl
inc
mov
jae
shll
push
mov
sub
mov
pop
out
push
pop
sbb
xchg
jmp
jae
stc
and
mov
jb
mov
mov
fs
sub
lret
adc
inc
xor
push
pop
pop
repz
sbb
loop
push
inc
pop
lcall
daa
divl
ret
cltd
test
pop
cmp
mov
and
ljmp
xchg
in
xor
xrelease
mov
daa
test
dec
xchg
shl
mov
test
lret
cmpsl
cli
rcr
lahf
popa
adc
call
fstpt
and
push
lds
notl
jg
inc
test
sbb
sbb
mov
je
out
cltd
sub
das
scas
sub
dec
mov
lea
mov
lea
insl
inc
daa
lea
or
add
push
and
inc
mov
jne
mov
mov
data16
pop
mov
arpl
ret
jbe
add
sbb
pop
jb
int
sbb
jecxz
sbb
pop
mov
cltd
outsb
test
xor
in
xchg
add
test
sbb
fisttpll
mov
cmp
push
and
xchg
subl
int3
sbb
lahf
push
or
push
scas
inc
mov
xor
sbb
ja
jp
mov
cmp
enter
cmc
xchg
pop
push
mov
mov
adc
shll
lcall
movsl
inc
test
aaa
cmp
sar
lods
test
jecxz
aaa
call
stos
aad
or
rcll
mov
jns
dec
sub
mov
mov
add
imul
movsw
and
fdivl
xor
mov
data16
inc
and
xchg
repnz
js
aaa
imul
cld
loopne
mov
adc
sbb
sbb
outsl
out
call
dec
stc
push
orb
repz
add
sbb
orb
dec
sbb
bound
adc
pop
add
loop
repnz
push
lock
mov
push
pop
xchg
nop
addr16
inc
or
aam
pop
cmp
fdivl
adc
icebp
xor
rclb
test
mul
std
in
pop
xor
adc
enter
cmp
inc
ds
jg
push
sub
mov
out
in
dec
sbb
add
ljmp
dec
or
fdivrl
or
les
sar
rcll
cmp
mov
jmp
add
and
or
xchg
out
push
mov
pusha
cmp
aas
aaa
outsl
or
insl
adc
ja
stos
mov
push
mov
sbb
leave
and
and
mov
cmp
scas
aas
xor
test
push
test
lahf
mov
mov
in
dec
ja
icebp
jg
xchg
fistl
fadds
pop
dec
divl
stos
push
push
adc
pop
sahf
jnp
sub
sahf
adc
aas
xchg
cmp
xchg
dec
enter
cmp
mov
xor
inc
sti
xor
ds
pusha
shlb
in
adc
stos
nop
les
mov
jl,pn
in
cmp
outsl
daa
pop
lods
lea
pop
and
mov
xor
mov
dec
xor
sar
mov
push
and
push
icebp
scas
mov
mov
jne
pop
add
or
aad
movsb
adc
pop
jnp
lods
and
movsl
jmp
xchg
ficomps
xchg
sub
mov
and
lock
loopne
adc
in
aad
out
fnstcw
outsl
add
fistl
mov
jbe
dec
out
inc
sub
mov
fisttpll
inc
cmp
mov
aad
dec
imul
ret
jecxz
shlb
outsl
test
movsl
cmp
sub
sub
insl
jnp
and
jns
sbb
sahf
sbb
jg,pt
jge
and
mov
aas
dec
addl
imul
mov
or
or
icebp
lcall
sub
int
inc
push
adc
mov
fdivs
test
mov
or
cs
mov
jo
dec
push
cmpsb
movsb
ja
test
sub
mov
or
stos
stc
and
lds
mov
js
pop
jb
add
shlb
ljmp
pop
mov
jb
int3
cmp
cltd
arpl
in
pop
sbbb
inc
stos
pusha
out
test
repz
sahf
pusha
mov
mov
fwait
jnp
and
cmp
dec
mov
inc
in
dec
mov
add
in
or
pusha
mulb
push
out
adc
push
xor
sbb
cmpsl
leave
inc
lock
adc
lods
jno
sbb
mov
jge
xchg
dec
cmp
hlt
cli
call
push
mov
add
adc
fstps
clc
cld
sub
jmp
scas
sub
rcl
in
mov
sub
jge
in
sti
mov
sbb
repnz
or
push
arpl
mov
push
out
sbb
xchg
cwtl
add
push
lcall
popa
mov
inc
outsl
mov
lods
pop
mov
int3
push
orb
adc
clc
cs
inc
test
jg
in
xor
or
shlb
lar
sbb
or
jmp
adc
jnp
cmc
into
mov
out
movl
ja
inc
jno
mov
pop
pop
inc
lahf
xchg
sbb
je
lret
arpl
jp
xchg
push
xchg
and
outsl
and
pop
push
cltd
mov
movsl
mov
in
cwtl
repnz
sbb
mov
mov
inc
and
sbb
dec
xchg
push
decb
or
stos
repnz
std
dec
mov
dec
add
jecxz
dec
fldt
insl
ficoms
fs
cmp
lea
jnp
mov
xchg
jle
inc
sbb
dec
lea
adc
arpl
fidivs
int3
inc
xor
dec
mov
clc
arpl
stos
sbb
push
push
add
or
jp
push
aad
push
inc
out
add
sti
out
insl
xlat
div
sub
mov
in
adcl
sti
test
call
pop
nop
sub
es
out
pusha
mov
test
arpl
roll
or
and
outsl
in
mov
add
decl
push
mov
dec
hlt
add
fdivs
fimull
dec
inc
iret
mov
adc
daa
sbb
cmp
jp
mov
push
pusha
mov
sarb
hlt
dec
cmp
cmp
call
out
add
and
inc
je
fistl
stc
popf
xchg
mov
lds
sbb
fimuls
das
sahf
push
pop
push
mov
inc
jge
pop
jecxz
add
push
cmp
pop
or
and
mov
mov
mov
js
cmpsl
and
sbb
mov
mov
sar
sub
test
std
dec
xor
xchg
jb
dec
out
rcr
fstpl
mov
xchg
pop
add
fnstcw
and
dec
xchg
shrl
jae
arpl
dec
adc
inc
push
push
or
gs
in
cli
insb
mov
in
insl
mov
setbe
xchg
sub
jo
push
jge
add
adc
aad
lahf
adc
fstpt
fwait
mov
cmpsl
xlat
adc
add
mov
arpl
lcall
lret
lcall
cmpsb
pushf
sub
mov
pop
sub
cwtl
or
mov
jno
cs
jb
jg
xchg
inc
push
inc
sub
fwait
jl
lock
jae
jae
std
add
mov
or
aam
in
fdivrl
mov
repz
pop
out
repnz
sub
add
xchg
adcb
inc
mov
aaa
mov
out
sub
je
push
xor
lret
xchg
mov
jb
adc
ljmp
jo
cmpsl
xchg
enter
dec
dec
pop
mov
cmc
out
insl
pop
enter
jae
stos
std
dec
std
into
inc
xor
adc
pop
hlt
arpl
repz
push
xor
int3
sub
loope
add
mov
add
ja
xchg
cmp
in
cmpsb
clc
out
iret
test
ljmp
ja
cli
jns
in
add
mull
test
adc
sub
leave
incl
iret
mov
dec
fcoms
ja
ja
mov
call
adc
enter
mov
add
cmc
xchg
aas
xor
cli
fdivs
push
jp
xchg
lret
jo
rol
jle
add
mov
xor
nop
andl
test
stos
lods
loop,pn
gs
mov
setns
stc
sti
outsb
xchg
lahf
out
test
data16
mov
sub
inc
sbb
dec
jecxz
dec
insb
jno
cmpsb
in
jnp
in
daa
js
stos
hlt
andl
inc
pop
out
inc
mov
sar
les
xchg
mov
cltd
cmp
out
dec
adc
pop
pop
shll
xor
inc
mov
test
mov
jge
fs
sbb
shlb
mov
mov
out
push
notb
dec
inc
pop
pop
mov
jno
popa
iret
jl
aam
insl
jecxz
push
add
pop
das
mov
out
add
test
test
pop
xorl
adc
mull
pop
mov
pop
pop
sbb
stc
sub
ds
shl
jbe
lret
rol
lret
sub
pop
mov
movsl
sahf
cltd
popa
lret
push
loope
in
leave
leave
xor
lods
scas
jb
sarb
daa
mov
mov
mov
lret
and
xor
movl
lahf
push
int3
repz
in
sub
dec
in
xor
call
mov
loopne
mov
xchg
test
mov
btc
test
aas
mov
jb
sub
mov
jne
loope
jb
movsb
xchg
pop
mov
and
popa
nop
pop
or
mov
and
pop
or
cmp
pop
jns
movsb
aas
imul
cld
inc
xor
xor
rorb
or
sub
ljmp
fs
scas
popa
cmp
popf
dec
inc
rcrl
inc
xor
adc
push
cs
pop
mov
xor
inc
clc
xchg
outsl
sub
mov
cli
inc
xchg
and
cmp
mov
xchg
mov
mov
mov
mov
sbbl
jae
mov
mov
xchg
jmp
and
jecxz
mov
mov
fidivrl
lods
mov
popa
mov
mov
stos
mov
les
xlat
rorl
adc
je
out
mov
push
out
dec
es
outsb
pushf
hlt
les
mov
fidivl
in
je
mov
aam
gs
or
cmp
enter
adc
test
push
inc
dec
sub
fildll
neg
stos
jl
movsl
adc
into
lods
jns
hlt
gs
gs
mov
dec
cltd
add
jnp
cmpsb
mov
or
out
out
aaa
xchg
rcr
push
add
pop
or
pop
adc
dec
mov
mov
rorl
arpl
push
add
outsl
sbb
push
pop
mov
mov
inc
cmp
inc
sbb
mov
filds
cmpsl
inc
mov
jb
stos
pop
xor
std
pop
call
dec
pop
pop
cmp
nop
dec
mov
inc
aaa
loop
je
inc
mov
mull
cmp
jle
jl
push
ret
mov
lahf
cli
arpl
pop
mov
xor
ret
lret
xchg
sahf
cltd
jne
mov
sbb
mov
fcmovnu
cmp
inc
insl
out
int
jo
shlb
dec
mov
push
dec
test
push
adc
test
mov
cmpsl
imul
push
xchg
sub
imul
addr16
sysenter
xor
xor
ret
xchg
leave
dec
jae
xchg
ret
fcoms
inc
pop
fdivp
sbb
stos
fcomps
pop
xor
mov
outsl
rcrl
and
adc
xchg
xor
dec
pusha
cld
push
scas
rclb
sub
jae
shlb
movb
movsb
xor
dec
pusha
push
out
mov
scas
stos
jne
inc
cmp
and
add
xor
mov
aas
add
fstl
push
mov
adc
add
cwtl
rorb
mov
and
testb
push
insb
notl
popa
popa
inc
inc
sub
aam
arpl
lea
push
es
cmpl
stc
fldl
inc
push
cltd
dec
icebp
pop
dec
in
mov
cmp
arpl
stos
xchg
lds
shlb
test
aas
shll
js,pt
inc
lcall
sar
popa
xor
add
cld
jno
mov
repz
pop
cltd
jae
and
bound
movsb
jl
and
cmpsb
test
mov
fstpt
mov
and
dec
sub
or
sub
nop
aad
lods
inc
dec
pop
dec
fimull
add
stos
in
dec
and
iret
pop
push
mov
and
aad
rcl
test
mov
mov
dec
subl
sbb
xor
mov
pop
rorl
pop
or
push
adc
cmp
clc
sbb
int
or
xchg
pop
jecxz
in
cli
push
add
fidivs
daa
mov
cmp
shll
jge
clc
push
aad
fmul
add
cmpsl
pop
xor
push
adc
iret
adc
xchg
rcll
rcrb
and
xor
std
insl
je
lods
test
mov
aam
cmp
ret
xor
cmp
rcrl
mov
fwait
je
mov
inc
les
loopne
mov
dec
push
rcr
add
fsubl
sub
fldt
ss
xchg
or
xor
pop
sub
or
xchg
push
push
ds
scas
lods
sub
sbb
jg
xor
mov
mov
mov
bound
adc
mov
cli
lcall
insl
imul
push
dec
fidivs
add
cmp
stos
xlat
stos
repz
cmp
pop
mov
add
inc
aad
bound
imulb
es
lods
adc
sahf
and
cmpsb
fnop
or
sub
sbb
jb
pop
nop
aas
add
mov
cmp
out
or
jb
into
push
xor
push
ret
xchg
ss
jns
jbe
fcomps
scas
adc
pop
jmp
sbbb
aam
dec
ss
in
pop
icebp
iret
pop
jbe
clc
ja
pop
jns
sti
sub
sub
xor
push
mov
loopne
lea
mov
adc
in
xchg
inc
xor
sbb
lret
jecxz
xlat
jmp
movsl
scas
xchg
cli
test
add
mov
rclb
insl
iret
mov
push
test
pop
in
xor
daa
sti
lds
sub
ss
cli
pop
loope
push
rcr
movsl
or
sbb
sbb
jb
xchg
dec
xor
daa
push
mov
in
test
fisubs
xor
rcll
pop
pop
mov
jle
cltd
daa
lcall
inc
rcrl
out
or
inc
jmp
jmp
ljmp
fldcw
adc
movsb
push
jge
xor
inc
sub
fnsave
jno
mov
push
shr
imul
les
push
mov
sub
push
cmp
test
in
dec
jle
movsb
push
shrb
add
mov
fistl
dec
adc
out
ret
adc
add
push
mov
int3
pop
mov
int3
xor
pop
mov
jno
jge
idivl
insb
daa
ret
in
int3
or
and
push
stos
hlt
add
orl
adc
jo
pusha
in
bswap
call
adc
inc
cli
aam
jmp
adc
dec
xchg
push
xor
inc
mov
popf
movsl
push
stc
sbb
shl
sbb
icebp
mov
adc
pop
std
xorl
push
inc
mov
gs
shl
pop
vpcmpeqb
sahf
pop
xor
jb
add
cwtl
shrl
ja
mov
mov
scas
xchg
dec
sub
pop
gs
fldl
ds
xchg
inc
add
out
push
pop
out
fisttpll
sar
mov
inc
in
lds
sub
aad
es
mov
xor
lcall
loop
dec
js
push
mov
mov
scas
inc
imul
and
ds
adc
mov
xchg
pop
shlb
mov
add
mov
add
cwtl
sub
or
loop
xor
sti
jns
adc
mov
push
add
les
xchg
sbb
out
inc
xlat
fnstenv
or
jle
jne
das
xorl
xchg
pop
xchg
pop
call
test
lds
loopne
repz
sub
lahf
inc
sub
outsb
mov
jp
mov
add
inc
shrl
rcrl
xorb
pop
lahf
je
cmp
xor
daa
es
xor
jle
dec
push
pop
insb
stos
jmp
pop
mov
aas
dec
sub
mov
xchg
cs
push
push
pop
enter
ja
int3
pop
fs
ljmp
dec
mov
call
inc
dec
or
gs
push
leave
adc
push
stos
mov
inc
adc
mov
sbb
sti
mov
and
int
lahf
ret
dec
or
lcall
or
rcl
jo
hlt
rolb
test
inc
daa
lcall
push
inc
ja
aaa
test
inc
xchg
ds
add
xor
cwtl
jno
inc
jbe
aas
mov
xchg
cwtl
push
sti
arpl
push
addr16
mov
cmp
ss
lea
sbb
push
mov
push
xor
dec
push
pop
push
or
xchg
xlat
mov
xor
push
add
lret
or
stos
idivb
ficoms
ret
sbb
jbe
cli
push
pop
shlb
rcrb
arpl
mov
pop
mov
jge
lcall
mov
sub
or
xor
hlt
hlt
push
mov
les
sbb
andb
xchg
in
add
sbb
xor
imul
xchg
cmpsb
mov
mov
into
jmp
mov
sahf
push
and
std
xor
cmpsl
gs
leave
lea
je
add
inc
fidivrl
adc
fidivs
pop
jecxz
push
pushf
mov
xchg
outsl
inc
lcall
mov
decl
fadds
pop
or
xor
inc
jge
sti
xchg
rcrl
or
or
pop
fisttpl
stos
decb
mov
inc
iret
add
in
mov
sub
cvtpi2ps
mov
cmpsl
dec
or
imul
pop
rolb
test
adc
inc
mov
jae
pop
lret
shl
adc
sub
stc
daa
xor
push
mov
pop
dec
pop
or
mov
aas
mov
push
xchg
sub
or
sbb
pop
dec
dec
dec
jmp
cmovle
les
cs
add
push
mov
xor
rclb
mov
add
push
out
movsb
js
mov
divl
or
cld
xor
cli
sbb
jb
inc
movb
rcrb
add
jg
nop
test
sarb
sbb
dec
idivl
xor
jl
jmp
test
sub
jge
and
or
or
push
xchg
jns
pop
leave
jae
sbb
gs
test
lret
xor
pop
inc
lods
push
das
je
insb
add
hlt
xchg
inc
aas
mov
dec
mov
dec
shll
dec
dec
dec
repnz
or
dec
and
inc
leave
andb
in
insl
sti
jecxz
push
test
into
push
jb
sub
pop
jp
xchg
sub
xchg
out
ja
mov
xor
iret
fs
mov
xor
fldcw
cmp
movb
bound
into
je
out
cltd
mov
sbbb
cmp
out
xor
test
push
adc
add
push
mov
mov
addr16
sub
repnz
sub
mov
jbe
cmp
add
jb
and
and
es
adc
fldl
ljmp
xchg
test
std
stc
sbbb
enter
inc
mov
stos
in
je,pt
xor
mov
or
pushf
inc
push
fcmove
xorps
into
ss
dec
sub
ljmp
jg
fiadds
movsl
dec
jno
repnz
and
popa
sti
rolb
inc
lret
xor
fists
shrd
ss
cmp
cmc
fs
je
loop
adc
insl
inc
mov
sbb
xchg
sbbb
movsl
sub
insb
inc
jl
or
shr
sub
subb
addr16
mov
inc
std
jp
adc
jns
pop
fiadds
mov
sbb
stos
jmp
in
pop
mov
push
sbbb
ret
add
inc
xchg
cld
push
mov
jmp
sub
inc
in
das
jae
adc
ljmp
inc
add
aaa
jno
cmp
stos
sbb
mov
je
out
ss
dec
mov
push
sub
addl
mov
int
loopne
mov
notb
jge
les
loop
sahf
loop
mov
add
sbb
loope
jb
sbb
insb
out
adc
in
jl
jp
xchg
cwtl
mov
xchg
testb
jmp
xor
push
std
in
dec
sarb
out
jne
sbb
fwait
jo
mov
lret
adc
fwait
outsb
sti
ljmp
insl
pop
add
jmp
mov
inc
rolb
push
cmp
repz
ljmp
test
dec
sub
pop
adc
test
je
movsb
shrl
and
fisubrl
xchg
mov
mov
dec
ss
cld
cmc
in
adc
mov
in
mov
out
roll
add
xchg
mov
mov
and
shr
adc
mov
mov
lods
out
jl,pt
enter
sub
xor
aas
and
dec
in
orb
das
ror
fucom
addb
xchg
fcmovnb
lret
shlb
xchg
ret
sub
xor
sti
lahf
dec
adc
shrb
jne
mov
mov
bound
mov
mov
mov
scas
aas
minps
es
ret
arpl
push
cmp
mov
or
jae
fsub
fadds
ret
mov
mov
dec
inc
fs
pop
fs
rclb
mov
mov
in
lds
sti
dec
bound
hlt
dec
dec
pop
push
pusha
mov
push
dec
leave
xchg
sti
into
les
push
add
adc
stos
inc
sbb
dec
jle
pop
into
sbb
test
aad
adc
ffree
xchg
sub
jne
xchg
punpckhdq
outsb
xchg
add
jl
les
ficoms
lret
cs
jmp
mov
pop
lea
or
cmp
cmc
or
xor
xchg
ljmp
push
cmp
push
aaa
pop
add
insl
jnp
mov
xchg
mov
negl
pusha
std
jl
or
adc
xchg
mov
add
xchg
dec
dec
xchg
ds
mov
nop
setg
loop
add
mov
outsl
pop
mov
loopne
scas
sub
cmp
fdivp
cmp
add
or
xchg
inc
jmp
loop
outsb
push
sub
mov
pushf
fs
xchg
pop
cmpb
push
adc
pop
icebp
sahf
aaa
dec
jae
dec
sbb
mov
add
shrl
dec
cmp
test
mov
mov
push
cmp
addr16
or
iret
push
out
addr16
mov
incl
xchg
jb
inc
sbbl
addr16
pusha
push
popf
lret
mov
andl
pop
data16
mov
movsl
imul
jmp
cmp
mov
aad
xorb
xchg
mov
mov
cmp
xchg
loopne
rorb
mov
jge
call
and
xchg
imul
push
iret
xor
push
push
outsb
push
sbb
adc
sub
dec
pop
push
cld
sbb
das
mov
sub
sbb
lea
or
aas
mov
mov
scas
cltd
aas
push
int
push
inc
mov
into
mov
xchg
sbb
mov
sbb
lret
add
ja
stos
rol
sti
mov
jbe
cmp
add
mov
sar
push
lret
jecxz
leave
loope
dec
int3
pop
daa
dec
repnz
and
xchg
fdivrl
faddl
jne
pop
and
fcoml
cmp
push
movsb
mov
sbb
rcll
xchg
inc
out
mov
std
cmc
fists
mov
dec
xor
clc
mulb
xor
int3
inc
inc
sub
std
sbb
roll
adc
and
push
jp
jno
lret
jae
roll
sahf
mov
lahf
repnz
jne
fsubrp
jl
aaa
inc
out
lods
jno
shlb
push
subl
and
notl
ljmp
cmc
dec
fnstsw
aam
pop
and
movsb
iret
sub
fwait
push
mov
adc
adc
stc
xchg
dec
clc
lods
loop
push
popf
jle
stos
ficompl
je
jmp
pop
pop
into
pop
adc
stc
or
mov
jg
mov
push
add
rorl
in
sub
or
push
jp
into
movsl
ret
nop
lcall
pop
daa
sbb
jg
icebp
and
sub
aas
lret
into
aas
lahf
mov
cwtl
xlat
in
mov
or
mov
jge
imul
jg
adc
mov
bound
inc
add
push
mov
sbb
adc
push
mov
inc
stos
inc
popa
clc
push
push
enter
cmp
rcrb
punpckhdq
ret
hlt
pop
insl
in
mov
lret
test
pop
and
xor
sti
or
les
mov
or
lods
aam
fcoml
es
fdiv
or
loop
inc
mov
push
adc
stos
inc
add
repnz
jo
lret
movsl
xor
or
xorl
dec
cld
mov
popf
bound
das
push
lahf
inc
sub
je
lret
fidivs
xchg
mov
repz
xlat
or
mov
sub
push
jp
inc
insb
and
cmpsl
push
insl
mov
shlb
mov
mov
mov
dec
cltd
repz
ss
cmpsb
popa
jge
inc
xchg
pop
jns
mov
sub
das
nop
sub
jmp
jmp
mov
aas
push
repnz
js
nop
mov
stos
cmp
pop
stos
sub
add
fwait
ds
and
pop
roll
xor
push
std
jle
stos
cmp
sahf
sbb
bound
push
xchg
pop
mov
dec
cld
out
jnp
aam
fnsetpm(287
xchg
jbe
ja
sbb
int
sbbl
mov
push
mov
jno
jo
push
sarb
xchg
sahf
xor
jns
cmp
js
iret
fstl
test
icebp
mov
mov
shrb
rorl
mov
popf
cmc
lods
and
sub
cmp
stc
mov
stos
fnstsw
test
adcb
xchg
test
sub
xchg
jmp
cwtl
inc
nop
sbb
inc
fstpl
cmp
ljmp
add
lret
lea
mov
mov
jmp
dec
repz
xor
stc
jbe
loope
pusha
subl
jle
push
daa
insl
xor
or
jmp
mov
cli
out
xor
out
inc
std
dec
add
cs
addb
fwait
jmp
roll
pop
dec
jge
mov
or
mov
call
out
adc
jmp
mov
es
or
out
andl
fwait
jo
sub
sti
mov
lods
movsl
sahf
jo
xor
mov
sub
dec
jbe
fwait
jmp
push
pop
sub
pusha
mov
leave
lret
add
outsl
imul
fabs
add
clc
fildl
sub
push
pusha
xchg
ror
push
push
scas
add
cmp
or
mov
in
jo,pn
push
add
sbb
gs
xlat
sub
and
scas
mov
sbb
sbb
cmpsb
outsb
mov
out
jno
outsl
inc
mov
ss
pop
and
mov
xchg
addr16
ljmp
into
sbb
cli
pop
fsubl
scas
lods
aam
or
sbb
dec
rcrb
sub
cmp
outsl
pop
repnz
add
roll
mov
cld
xchg
lea
mov
add
rcrl
rorl
push
jmp
ret
sub
ss
out
adc
inc
in
inc
arpl
xchg
push
into
loope
aam
fst
jo
adc
aaa
pushw
pushf
xlat
mov
cs
jns
aam
mov
push
dec
xchg
mov
sahf
and
sbb
sub
lea
in
lret
pop
cwtl
cmpsl
leave
test
or
push
push
pop
jo
lds
cmp
mov
and
ret
pop
hlt
jb
and
adc
scas
push
shl
negl
add
mov
mov
lret
mov
ljmp
fdivrl
jmp
pop
mov
dec
sbb
sub
mov
xor
mov
mov
mov
jl
in
aam
aad
adc
pop
sarb
mov
in
pop
dec
lock
lods
pop
cmp
fisttpl
fnsetpm(287
imul
pop
scas
aaa
ja
lcall
inc
fmuls
dec
fdivl
idivb
xchg
or
cmp
push
push
mov
imul
ret
adc
ds
aam
loope
xchg
shlb
pop
mov
into
dec
hlt
xchg
cmp
fld
jno
xchg
mov
sub
mov
stc
sbb
adc
out
sahf
xchg
popl
inc
adc
ret
in
jmp
add
and
in
stos
lcall
dec
lock
cli
dec
jmp
aad
sti
shll
pusha
jno
mov
dec
push
fcmovne
cld
jg
cs
sahf
das
test
mov
mov
roll
mov
aam
dec
xlat
or
ja
or
jno
shlb
lock
in
jbe
call
ljmp
lahf
sub
popf
cmpsl
repnz
mov
popa
xchg
in
movsl
jmp
outsb
enter
xchg
les
push
cwtl
lea
stos
insb
push
sbb
jge
pop
subl
mov
xchg
cmp
adc
fbld
insl
or
and
negb
stos
push
rol
sub
jbe
scas
mov
mov
jbe
mov
out
inc
pop
rorl
test
mov
adc
repnz
cmc
xor
or
push
xchg
pop
sbb
jb
les
imul
stos
roll
js
cli
jns
addr16
cmp
pop
sbb
sub
push
out
cmpsb
sub
mov
add
inc
push
xchg
repnz
xchg
jl
lret
dec
mov
int
rorl
jne
lods
or
push
jo
cmp
mov
jle
int3
cmpsb
pop
leave
insb
xor
cmp
push
lret
xor
shll
shll
std
xor
jecxz
gs
or
jg
imul
pop
xchg
adc
lret
shlb
push
mov
sub
ret
xor
and
jnp
xor
and
sbb
mov
dec
inc
fwait
push
cmp
sbb
or
push
jg
xor
xlat
push
movsl
mov
sti
mov
xlat
jp
or
push
and
jbe
out
ds
push
adc
sub
xchg
negl
mov
xchg
popf
xchg
cmpsb
stos
mov
ret
sub
adc
jbe
xor
leave
mov
mov
jp
push
sbb
xchg
push
mov
mov
cmp
or
sub
dec
and
cmp
pop
cmp
sub
aad
cwtl
sub
pop
lret
inc
jnp
loopne
ljmp
mov
nop
stos
mov
pusha
lock
mov
in
insl
dec
jne
popa
dec
std
int
mov
cmp
enter
cmc
icebp
inc
sbb
sub
mov
sahf
mov
adc
cmp
mov
push
pop
lock
mov
jp
movsl
call
lret
lods
sub
lods
rorl
mov
fcomi
mov
dec
mov
or
rorl
daa
dec
push
cmc
cli
dec
test
add
in
xor
jge
cmp
jo
and
ja
xor
jp
pop
adc
movsl
push
pop
ss
bound
test
int3
stos
ja
into
std
outsl
leave
xor
in
jbe
adc
es
ret
ljmp
stc
es
in
jb
push
mov
xchg
dec
aad
movsl
dec
xchg
loopne
sub
cmp
mov
sbb
pop
inc
mov
push
cwtl
and
mov
mov
sub
adc
lret
lcall
cmpsb
lock
sbb
cmp
push
push
jl
sbb
mov
jp
mov
es
hlt
dec
outsb
icebp
fldl2t
leave
stos
jl
xchg
fwait
fwait
cmc
mov
push
sbb
adc
inc
mov
neg
fmuls
mov
mov
xlat
cmpsl
sbb
mov
jl
cld
rcrb
call
xor
inc
xchg
rorl
gs
push
cmp
loope
or
lahf
sub
test
mov
test
cmpsb
mov
cmp
lahf
lret
andb
or
cmp
or
xor
mov
and
pop
xchg
ficomps
and
sub
inc
sub
enter
sub
test
ds
loop
rcrl
loope
xchg
ja
sbb
pop
sahf
add
out
in
pop
mov
adc
jle
xchg
in
outsb
negb
outsb
mov
aam
ljmp
pop
testl
xchg
jecxz
ljmp
dec
xchg
push
aam
hlt
enter
push
push
and
or
fwait
test
add
pop
outsb
add
iret
aad
pusha
push
shlb
and
mov
mov
add
xchg
icebp
std
and
enter
pop
inc
enter
fsubl
imul
test
in
jecxz
push
test
rorl
mov
shll
sahf
stc
mov
sbb
sbb
and
addl
std
add
pop
adc
mov
fldenv
push
fs
shl
out
dec
sub
mov
clc
jp
jae
das
jno
mov
jmp
xchg
sub
inc
dec
xor
lret
dec
mov
sar
mov
pmaxsw
shll
outsb
cmp
or
icebp
lods
outsl
jl
mov
dec
bound
movl
lds
testl
fstpl
sbb
dec
call
inc
fwait
std
int
adc
pop
mov
mov
xor
mov
jmp
sbb
add
adc
and
push
int3
and
mov
je
adc
cmpsl
mov
inc
pushf
push
add
adc
cmp
std
movsb
inc
push
jb
cltd
aas
pop
ss
xorb
scas
mov
in
jg
lret
jmp
cmp
sub
jmp
stos
repnz
cmp
xor
outsb
push
popa
xor
push
ret
repnz
and
out
imul
repz
test
inc
mov
and
push
vmread
dec
ss
fistpl
push
sbb
sbb
sbb
sub
dec
hlt
gs
mov
mov
pop
add
movsbl
inc
push
mov
lahf
push
inc
mov
in
adc
flds
sbb
filds
lret
cmp
inc
cmp
pop
or
pop
js
arpl
and
jmp
aas
cmp
hlt
shl
je
ss
push
js
and
sbb
loope
push
aas
adc
ret
xor
test
into
push
mov
mov
add
rorl
shlb
push
dec
mov
adc
into
test
stc
dec
out
popa
test
push
cmp
inc
movsl
test
dec
iret
ds
push
cli
mov
inc
mov
cmpsl
and
dec
mov
pop
lret
jp
and
or
sti
cmpsb
add
hlt
pop
shll
sub
jg
xor
add
repnz
aaa
fcomps
inc
sti
out
data16
lods
popa
or
push
jo
or
stos
scas
push
fwait
and
decl
adc
inc
push
fimull
pop
mov
pushf
jecxz
outsb
inc
pop
sbb
outsl
test
sub
dec
loope
je
ss
aam
pop
pop
xchg
out
sub
dec
repnz
and
stos
cwtl
cld
aad
xor
mov
idivl
or
xor
int
inc
inc
jg
ds
jle
or
repnz
aam
arpl
in
jmp
mov
sbb
pop
xchg
jmp
icebp
daa
xor
jae
popa
sti
popf
movsl
jp
insl
jg
out
dec
sub
or
sbb
lds
xchg
mov
cmpsl
xchg
jno
or
xchg
fsubrl
push
stos
or
das
aam
pop
mov
stos
dec
sub
inc
fdivl
bound
xor
aas
into
mov
cmp
adc
sbb
push
aam
push
into
xorb
mov
push
or
ja
inc
add
dec
adc
sub
stos
pop
sub
lret
cld
scas
ret
and
movsb
ret
inc
leave
stc
xchg
scas
mov
sub
mov
in
lahf
mov
mov
stos
aaa
dec
sub
mov
and
pop
fstl
sahf
pop
adc
lds
insb
cmp
sbb
fdivr
ss
push
stos
aad
mov
sub
bound
ss
out
mov
addr16
shrb
loope
test
jne
sbb
mov
pop
test
inc
fwait
enter
int3
ror
fsubl
xchg
mov
adc
mov
push
insl
lret
cltd
dec
mov
lock
rcll
enter
out
push
rclb
hlt
mov
loopne
mov
popa
ja
divb
push
fdivrs
cmp
adc
push
pop
and
push
jnp
xor
pop
ljmp
sbb
nop
push
shlb
jl
sub
or
cwtl
sti
xor
jp
mov
fsubrp
xchg
scas
fstl
mov
dec
gs
jp
fdivp
out
shl
jne
xor
mov
jno
pop
int
mov
and
test
jecxz
push
push
push
mov
sub
faddp
adc
gs
lcall
xor
pop
inc
xchg
jmp
jmp
push
rcrl
sub
cmc
mov
push
inc
int
popa
scas
sbb
bound
in
sbb
jmp
dec
movsl
dec
push
jns
clc
aas
inc
fidivs
sub
add
popf
push
sbb
in
xor
sahf
lea
cmp
inc
insl
mov
xor
push
movq
sub
mov
out
dec
inc
rclb
stc
into
xor
or
fs
insb
decb
xor
mov
add
dec
and
mov
sbb
iret
add
mov
fwait
out
xchg
ss
cmp
xchg
push
xchg
dec
ret
push
sahf
mov
icebp
fisttps
ficomps
lahf
cmp
addb
mov
push
mov
imul
sub
inc
shlb
loopne
das
sbb
es
out
xor
roll
not
int
push
pop
xchg
or
shll
clc
outsb
jecxz
jp
jl
or
inc
mov
push
mov
pop
jle
subb
sbb
ret
cmpsb
pop
bound
lds
add
pop
mov
fidivl
and
bound
mov
xorl
rolb
push
add
jl
mov
jecxz
adc
jns
xchg
mov
aas
jge
push
rcl
mov
cltd
repnz
push
mov
jge
bound
das
idivb
and
call
dec
aad
jnp
mov
aaa
fnsave
push
hlt
add
ja
pop
je
dec
and
sbbb
mulb
push
out
cmc
sti
or
in
and
inc
loopne
aas
push
fwait
mov
out
dec
inc
inc
dec
pushf
fdivp
adc
xchg
jnp
fisubrs
lahf
outsl
sub
ss
loopne
pop
arpl
mov
xchg
cli
icebp
push
jecxz
imul
pop
mov
repz
cmp
mov
xchg
adc
jle
pusha
inc
mov
push
and
and
cmp
dec
in
cmp
inc
aaa
mov
jge
rcr
sub
add
les
in
test
mov
stos
cmp
mov
adc
push
pusha
sub
test
ret
lods
arpl
pop
and
mov
mov
add
sbb
sub
mov
xor
pushf
sahf
ja
js
xchg
pop
mov
cmpsl
or
inc
push
scas
testb
add
cmc
cmpsl
loope
cmovl
aam
mov
push
mov
inc
lahf
sub
ret
aaa
xchg
cmpsb
and
out
fcmovnbe
out
cs
rep
fs
in
xchg
lret
rol
lds
pop
inc
mov
popf
sbb
push
into
out
in
jmp
ret
dec
xchg
sub
mov
pop
mov
cmp
mov
pushf
cmpsl
mov
test
shl
push
shlb
jp
data16
das
scas
lds
jbe
or
jmp
mov
pop
adc
addr16
adc
outsb
push
into
adc
push
ret
outsb
dec
or
push
addr16
cmc
dec
data16
cwtl
xlat
inc
ds
cmpsl
arpl
fnstcw
push
cmp
or
sbb
inc
outsb
pop
xchg
adc
xchg
in
es
cmp
ret
mov
or
mov
mov
shl
or
sbb
jb
repz
out
ficoml
inc
mov
xchg
daa
and
std
and
cmpsl
jg
push
das
aas
cmpsl
cltd
xchg
lret
or
ret
outsl
into
dec
inc
lods
jns
in
dec
push
pop
sub
fcmovu
loope
gs
cmp
leave
sahf
xchg
mov
lret
mov
fmuls
ret
add
mov
shlb
push
mov
ljmp
addb
cmpsb
xor
out
sub
repz
leave
rcl
shrl
fwait
push
sub
inc
aad
test
adc
and
inc
cltd
sub
lcall
popa
xor
jnp
mov
test
shlb
push
jo
jl
in
mov
dec
sub
pusha
popf
insb
stos
mov
mov
in
je
sbb
pop
stc
dec
xchg
ret
shlb
add
clc
push
sbb
jge
jnp
iret
repnz
je
ret
test
out
mov
cmpl
daa
dec
adc
and
or
jecxz
lock
xchg
cmp
and
outsb
pusha
movsl
addr16
dec
push
inc
mov
daa
xchg
mov
aaa
test
outsl
inc
mov
ja
adc
popf
orb
into
lahf
push
stos
cmp
jge
data16
mov
sub
add
movsl
test
ja
int3
push
mov
xor
sahf
jno
sub
std
cmp
pop
adc
fisubl
je
adc
data16
jbe
cmc
xchg
mov
jno
jb
shr
mov
icebp
imul
inc
dec
sbb
icebp
inc
add
dec
inc
xchg
insl
mov
out
xor
xchg
lock
mov
inc
pmuludq
mov
into
pop
ret
in
xchg
mov
ss
sub
xchg
out
fisttps
out
imul
pusha
jo
ja
xlat
stos
mov
push
aaa
inc
jns
fists
fs
mov
loopne
pop
mov
cmc
aad
ja
inc
in
fiadds
adc
push
cmp
iret
fiadds
dec
dec
roll
dec
lret
aaa
mov
sub
jl
cmpsb
fldcw
sub
fsubl
pop
adc
js
mov
push
xchg
xchg
out
push
scas
lock
orb
mov
mov
jo
sub
mov
pop
cld
push
add
add
jmp
test
jge
adc
outsl
insb
jge
out
adc
setns
lret
xor
inc
or
mov
xchg
sub
pop
sub
pop
clc
mov
inc
inc
mov
mov
mov
jg
pop
into
loopne
ret
cli
mov
push
add
mov
and
sub
pop
mov
fildll
aaa
imul
adc
test
arpl
jns
sarl
and
push
std
sbb
sbb
ljmp
jb
ds
sbb
sbb
inc
outsl
adc
rorl
mov
std
das
and
jg
std
xchg
inc
jnp
pop
pop
add
notl
cwtl
pop
add
add
sbb
inc
add
test
pop
lds
inc
in
aam
out
iret
cmpsl
pop
nop
xor
mov
mov
fcomi
pop
imul
and
enter
mov
repnz
scas
clc
loope
jae
inc
mov
add
imul
test
and
bound
pop
in
inc
inc
cmc
and
shll
mov
imul
fsubs
cmp
jbe
pop
outsl
outsl
pop
outsl
das
sahf
adc
dec
cli
pusha
fisubl
xor
cmc
inc
cmp
ds
not
xchg
out
lcall
push
movsb
adc
cmpsl
data16
jbe
xchg
xchg
xchg
lds
push
mov
inc
sub
xor
xchg
mov
in
pop
test
not
mov
shrl
aad
adc
movsl
sahf
pop
stc
pop
mov
cwtl
popf
push
mov
popa
fucom
and
xchg
rolb
aas
ror
rorl
cvtdq2ps
das
push
mov
cmp
sbb
ja
jno
mov
lret
push
pop
jbe
into
int
lcall
loopne
xor
dec
test
jae
movsb
fstps
dec
mov
jae
mov
movsb
cltd
lea
pop
lods
pop
ss
cmpsl
repnz
jbe
push
out
mov
sub
loope
loope
jnp
mov
loope
jno
stos
jbe
cmp
mov
call
jns
lcall
mov
lods
mov
repz
pop
int3
out
ja
int
pop
sahf
faddp
stos
adcb
stos
mov
mov
hlt
in
into
dec
mov
cmc
jl
pop
mov
addr16
sub
addr16
push
dec
mov
push
enter
mov
xlat
jl
sub
adc
xor
pusha
sbb
dec
mov
outsb
xchg
hlt
sub
lods
js
nop
mov
ja
pop
push
inc
push
movsb
mov
insl
xor
and
xchg
clc
pop
adc
sarb
nop
xorb
and
je
cld
fsubr
and
adc
mov
adc
int3
adc
testb
ds
and
xor
aam
insl
addr16
sbb
ljmp
cltd
inc
mov
dec
mov
les
mov
push
xchg
cwtl
frstor
jle
or
sar
mov
sahf
mov
shrl
jmp
push
mov
cmp
pop
sbb
ret
xchg
inc
aam
xor
xor
stc
int3
mov
sarl
outsl
and
aad
push
or
dec
jp
fildl
fnstcw
xchg
rcll
xchg
roll
xchg
xchg
sub
imul
inc
mov
int
jb
inc
andb
sbb
push
push
es
jge
aaa
stos
adc
outsb
xchg
ret
sti
in
test
dec
cmp
xchg
or
out
leave
mov
ds
xor
xor
add
adc
in
mov
out
incb
jne
lret
lock
push
loopne
adc
fbstp
inc
adc
out
aam
mov
or
and
jmp
sarl
push
enter
call
sbb
pop
iret
mov
shll
iret
mov
call
es
mov
pop
cmp
sub
in
mov
jl
je
lods
ljmp
inc
sbb
xchg
push
dec
lahf
jbe
adc
sub
pusha
movzbl
lret
mov
xorb
bnd
aad
jb
clc
mov
pop
sbb
xlat
test
mov
data16
xchg
in
outsb
sub
loope
sub
cmc
mov
mov
xchg
xor
shrb
daa
ljmp
mov
sub
lods
int3
sbb
movsb
xchg
in
rcrb
xor
xchg
inc
xchg
fcomps
jbe,pt
ljmp
nop
mov
pop
imul
or
es
push
adcl
push
push
popf
lret
mov
outsl
pop
cmp
inc
mov
mov
nop
sti
gs
iret
push
mov
movsb
aam
adc
mov
mov
inc
dec
add
inc
xchg
sarl
subb
in
or
call
dec
pop
cli
adc
pop
mov
sbb
sub
pop
test
mov
mov
jne
test
cmp
dec
imul
in
mov
inc
xor
push
lds
sub
into
repnz
xor
mov
mov
setg
fsubs
cltd
bound
repnz
cmp
test
adc
pop
mov
fiaddl
mov
test
mov
jle
lahf
mov
mov
cmp
dec
mov
loop
fcmovne
insl
pop
arpl
imul
nop
or
inc
or
lods
cmpsb
cmc
xchg
sub
notb
mov
xchg
outsl
shrb
mov
cmp
ss
cmp
inc
mov
ljmp
int3
shlb
call
test
je
iret
mov
in
add
mov
ficomps
test
fsts
inc
imul
xlat
or
stos
sub
add
stos
push
fucom
sub
jne
je
pop
xor
mov
les
outsb
adc
ror
and
push
inc
hlt
filds
add
inc
sarb
rcrl
mov
cmp
mov
pop
xchg
stos
fnstsw
fwait
pop
mov
ljmp
adc
mov
movsl
lods
out
insl
aas
xchg
jp
or
pop
cmp
in
arpl
je
lock
mov
pop
jno
hlt
dec
sbbl
pop
mov
or
rclb
add
push
cs
iret
addr16
pop
ljmp
jp
cmc
cmp
lret
inc
mov
jae
cmp
iret
ljmp
das
add
inc
cmp
out
mov
loopne
gs
jecxz
pop
jg
xor
insb
std
jp
xchg
pop
dec
aaa
and
push
push
jge
lret
repz
pushf
int3
xchg
insb
ret
sbb
push
inc
push
lock
xor
popf
or
push
lods
adc
jo
add
movsl
dec
ret
in
mov
stos
pusha
js
loop
cmp
leave
push
push
jnp
fidivs
call
lret
aas
out
jge
mov
push
xor
inc
jns
js
imul
sub
inc
repz
jne
mov
sbb
repz
jae
add
cwtl
pop
mov
push
xor
mov
orb
fnsave
lock
or
cmp
inc
aad
inc
push
call
filds
jge
or
addr16
loope
dec
sbb
fdivp
lret
lret
xchg
pop
xlat
lods
andb
push
inc
xlat
cs
lods
adc
sbb
icebp
enter
xorl
mov
cs
sbb
jb
push
aam
cmpsb
jmp
rorl
sbb
das
stos
ret
jg
sbb
or
jg
dec
divb
xchg
pusha
cmp
rolb
sti
pushf
mov
ds
out
sub
out
test
inc
adc
adc
test
test
or
push
shr
pop
jmp
scas
loope
xchg
fs
out
cmp
xor
lds
sub
jne
enter
std
sub
out
sub
add
sbb
pushf
lock
push
pop
or
jl
dec
mov
mov
mov
incl
inc
jmp
mov
inc
mov
cwtl
xchg
cmp
shlb
outsl
cld
mov
and
or
cmp
mov
and
jnp
loop
nop
test
pop
dec
push
xchg
out
pop
in
out
into
stc
mulb
in
and
jp
jle
shll
cltd
aas
popf
jb
outsb
mov
add
xchg
xchg
push
mov
addr16
pop
mov
xor
mov
in
je
pop
push
bound
test
add
popf
clc
lds
bndstx
fmull
sbb
sub
shr
mov
lret
xor
into
inc
pop
mov
xchg
inc
mov
cmp
lcall
xlat
mov
movsl
dec
mov
jp
fisubl
add
xlat
lahf
jne
or
dec
repz
mov
imul
xorl
test
in
mov
inc
out
ret
push
xor
decb
incl
adc
dec
aad
cmpl
xor
lods
gs
fistpll
jg
jns
imul
or
dec
sub
es
nop
fs
arpl
in
in
fidivl
mov
cmc
fwait
cmp
add
adc
sbb
fcomi
sbb
or
in
fcom
roll
xchg
and
shlb
fwait
push
in
call
fcompl
jmp
movsb
mov
out
jno
popf
cmp
mov
mov
pop
je
out
push
xor
mov
lds
lahf
mov
xchg
mov
cs
cmpsb
shl
adc
in
pop
sub
or
adc
jle
pop
or
clc
dec
xor
push
sub
insb
adcb
cwtl
push
lds
fdivs
pop
xor
lcall
das
dec
push
icebp
rolb
ficoms
lods
or
enter
push
mov
add
pop
rcl
out
insl
inc
jne
aam
fld
push
ljmp
xor
mov
gs
repnz
in
mov
lret
aad
dec
pop
pusha
fldt
insl
or
gs
pop
xor
mov
xchg
lea
sub
cmp
cmpsb
sahf
adc
jbe
xchg
aam
fidivs
dec
jns
scas
mov
jae
iret
syscall
fbld
stos
and
sbb
pop
sub
psubsb
cmp
sub
adc
add
push
hlt
fcomp
jns
xchg
loop
je
mov
test
std
mov
adc
test
fnstsw
cmpsl
push
pop
mov
sub
xor
add
cld
fs
inc
sahf
mov
dec
xor
jne
sub
cmp
push
int3
and
xor
jnp
jge
je
inc
xor
push
inc
jle
rcr
or
xchg
and
jno
inc
in
inc
hlt
pushf
leave
push
test
inc
pop
jnp
and
iret
adc
stos
fists
xor
jmp
dec
mov
jns
mov
in
outsb
cli
test
subb
ja
xchg
cmp
fsubl
adc
jns
in
addl
push
xor
idiv
ss
xlat
addr16
pop
mov
mov
stos
cli
in
ret
mov
pop
xchg
push
jae
inc
or
imul
daa
addb
clc
stos
int
jb
fstpl
push
jg
inc
mov
pop
stos
mov
cmp
pop
loope
push
into
dec
fisttpl
lret
fsts
cmp
xorb
std
sbb
pop
mov
xchg
sub
ja
jne
fdivrl
lods
jmp
mov
push
push
frstor
lret
and
lret
sbb
and
jbe
push
push
inc
cmp
dec
sbb
inc
test
dec
pop
sarl
or
es
loopne
sbb
out
outsl
xor
and
push
dec
pop
push
aaa
repz
xor
and
jb
pusha
sbb
jmp
sub
jno
mov
push
in
icebp
mov
mov
test
outsb
add
hlt
inc
pop
mov
sbb
mov
in
mov
cmp
imul
idiv
lods
outsb
movsb
out
push
idivb
push
push
cmpsb
ds
push
addb
cltd
pop
bound
mov
mov
je
test
repz
inc
shll
jle
adc
je
in
cmp
pop
and
pop
cmc
lcall
push
push
xor
movsb
add
ljmp
fsubr
cli
adc
or
andl
call
mov
lcall
aad
popa
repnz
inc
clc
pop
sbb
out
dec
es
jg
outsb
into
shlb
data16
inc
rolb
pop
les
cmpsl
sub
icebp
mov
lret
mov
lahf
jecxz
pop
pop
lret
jbe
sub
fadds
jp
xor
pop
sti
fdivrs
int3
rcrl
sbb
adc
roll
mov
pop
std
pop
push
mov
adc
push
adc
cmp
and
lret
cmp
xchg
ret
aas
jmp
ret
push
jecxz
stos
mov
rorl
mov
and
aad
dec
cltd
jae
pop
mov
orl
filds
jle
cltd
cld
mov
notb
int
fisttpll
jg
jne
and
movsl
sbb
mov
cmp
in
clc
test
aas
test
jge
mov
outsl
dec
mov
outsl
mov
cmpl
clc
cmpsl
jno
lea
loope
adcl
pop
inc
mov
dec
or
enter
sbb
lds
push
jno
jmp
shll
rorl
addr16
mov
pop
jne
and
shlb
shl
cmp
xchg
xchg
or
xchg
dec
jno
jno
test
push
or
data16
cli
sahf
call
push
test
xchg
add
sbb
adc
lods
sti
insl
addr16
jg
xchg
pushf
jnp
mov
outsl
in
loope
inc
out
ret
jne
ret
ja
mov
push
adc
and
mov
outsb
xor
pushf
testb
mov
xor
cmp
das
mov
push
jbe
ja
cmp
outsl
clc
mov
mov
outsl
incl
mov
and
and
ret
pop
and
pop
clc
std
test
mov
flds
sbb
and
sub
mov
out
add
or
xor
pushf
scas
clc
cs
mov
shll
out
dec
cmp
std
idivl
loopne
jno
and
pop
inc
shrb
aad
and
xchg
inc
fwait
push
popf
add
mov
mov
jmp
repz
jne
lret
jg
pop
data16
andl
jg
inc
out
repnz
pop
cmp
scas
or
int
hlt
popa
push
jno
fsubl
inc
arpl
daa
je
mov
popa
jge
pop
add
pavgw
rcl
mov
popa
mov
mov
fs
ret
cmp
mov
cmpsl
xchg
push
ds
xchg
cli
arpl
lcall
movsl
scas
pop
pop
stos
adc
xor
cltd
pop
push
cmp
test
imulb
imul
sbb
lea
or
repnz
or
or
lcall
pop
push
dec
das
xchg
outsb
shlb
outsl
insl
movsb
aas
jecxz
or
hlt
lock
lods
add
xor
adc
mov
loop
das
cli
and
push
aas
rorb
call
adc
mov
sub
sar
ss
sbb
stos
cltd
mov
out
push
shrb
cmpsb
sar
pop
mov
add
inc
or
inc
sahf
pop
pop
cmp
mov
push
repz
fistl
xor
jbe
mov
addr16
xabort
mov
jmp
jb
lahf
or
dec
ja
sbb
jg
and
pop
sbb
mov
addr16
cld
push
inc
fdiv
and
jp
out
sub
cmp
stos
imulb
sub
pop
mov
jb
mov
movsb
inc
sti
cmp
adc
lods
andb
or
mov
cld
or
sub
sub
mov
shl
or
pop
dec
cmp
dec
repnz
shlb
shr
add
mov
ljmp
and
xchg
sbb
mov
test
ljmp
loopne
decl
adc
into
sbb
aas
scas
xchg
jecxz
and
sti
fistpl
push
jmp
mov
push
ss
mov
xchg
decl
jg
or
mov
lods
mov
pop
cmp
dec
sahf
xchg
roll
add
insl
hlt
pop
insb
insb
cmpsl
xchg
bound
jo
das
fwait
mov
insb
mov
sub
shlb
push
mov
mov
sbb
xchg
sub
mov
ret
pop
inc
xor
fcoms
ja
push
add
xor
jne
mov
fwait
pop
adc
loopne
push
ret
dec
dec
sbb
push
scas
into
mov
jno
ret
push
in
pop
xchg
rorl
sub
mov
adc
fcomps
dec
add
int
or
add
arpl
test
sti
xchg
or
jnp
cli
movsl
pop
inc
pop
aam
mov
pusha
push
int3
and
dec
pop
cmp
xor
and
push
adc
mov
jmp
out
scas
inc
add
aam
lret
repz
mov
in
out
loope
test
pop
xchg
sub
push
jbe
xor
sarb
lods
sub
sar
xchg
idivl
pusha
daa
icebp
dec
xchg
mov
pop
jbe
into
rolb
push
mov
xchg
rcr
jb
fstl
push
nop
mov
das
mov
xor
fs
shrb
fidivl
bound
pop
mov
mov
inc
call
stos
movsl
gs
pop
mov
xor
inc
xor
ret
sti
push
sub
stos
jae
or
sub
ret
inc
cltd
inc
xor
sub
jecxz
push
or
push
mov
daa
aas
shl
lret
rcll
jb
push
add
cmc
add
cli
pop
in
sbb
inc
mov
fwait
pop
fimuls
mov
cmp
add
scas
push
cmp
mov
jmp
add
lods
sub
sub
sbb
filds
cld
sarb
insl
xchg
mov
mov
addr16
adc
mov
push
dec
xchg
push
xchg
mov
adc
mov
jns
stc
mov
push
sbb
in
pop
out
aas
les
leave
or
push
mov
push
pop
xor
fistpl
mov
mov
lock
test
pop
cltd
bound
stc
sbb
cli
shrb
fsubs
call
or
outsb
mov
mov
jp
testl
out
and
push
pop
inc
xlat
mov
sbb
inc
mov
popa
call
es
jge
fisttpll
push
xor
loope
dec
pushf
fsubl
test
pop
adc
neg
xchg
adc
dec
lcall
pop
add
jno
fisttps
mov
cs
sub
fdivs
mov
enter
loope
lock
or
cld
and
enter
push
dec
push
inc
pop
adc
les
pop
xchg
dec
jl
mov
lret
adc
fcomps
fs
mov
cwtl
xlat
dec
sbb
lods
test
jno
xchg
rcrb
lahf
mov
aas
mov
sbb
dec
rclb
add
xor
fnsave
xchg
add
xchg
sub
das
cmpsl
fwait
mov
xor
cmp
nop
jmp
xchg
pop
insl
or
fwait
push
movsl
ljmp
push
mov
aas
test
ret
shlb
shl
jmp
push
in
aas
cmp
ja
lods
lock
push
mov
push
jg
test
test
and
sub
adc
sbb
add
stos
loopne
icebp
dec
cltd
or
neg
jge
data16
repz
pusha
lret
mov
push
lahf
out
cmp
shr
lods
pop
adc
mov
pushf
orl
mov
out
jle
call
add
mov
mov
int
adc
mov
jae
mov
shlb
scas
scas
mov
sbb
sbb
ss
pop
jnp
icebp
inc
repnz
lock
daa
enter
cmpsl
gs
xchg
jecxz
or
daa
dec
imul
xchg
enter
pushfw
fildll
sarb
cmp
in
ss
push
loopne
and
sbb
mov
inc
and
hlt
mov
pop
mov
out
jne
sti
cmp
push
mov
xchg
or
xchg
in
shlb
or
repz
add
and
jne
inc
int
adc
mov
xchg
ljmp
loop
es
pop
ret
jle
pop
mov
sbb
insl
xor
push
mov
jge,pt
std
cmpsb
jl
rolb
jne
call
fisubrs
sub
lret
stos
movsl
sub
cwtl
sub
sbb
add
lea
and
divb
inc
mov
lods
xchg
adc
loope
adc
add
pop
shll
iret
pusha
add
push
and
push
cmc
push
adc
inc
push
hlt
mov
stos
iret
ja
inc
add
cmp
mov
arpl
add
add
fstps
jns
jg
into
int
and
notl
xchg
mov
add
mov
or
pop
daa
test
xchg
dec
jmp
scas
dec
clc
sbb
sub
in
xchg
cmpsl
int3
mov
sub
inc
les
aam
inc
insb
jno
scas
lods
out
pop
incb
jo
arpl
in
daa
cmpsl
or
cmc
mov
mov
stos
adc
pop
pop
ja
mov
test
in
clc
cli
mov
scas
popf
mov
jb
iret
testb
enter
sub
jg
scas
and
fldt
ss
and
jnp
addr16
repnz
sbb
cmp
pop
popf
jbe
cmp
lahf
xchg
pop
push
jle
and
push
cmpsb
jo
mov
sbb
and
insb
iret
insb
rcrb
xor
mov
lods
loop
inc
push
loop
push
or
mov
or
push
and
pop
lock
aad
mov
rcll
push
ss
insl
clc
jecxz
jg
rep
dec
out
sub
scas
hlt
cmpsl
xor
pop
mov
jbe
push
sbb
sarl
push
imull
xchg
sub
outsb
adc
aas
jns
iret
mov
sbb
push
out
cmpsb
inc
xorl
aad
jle
ret
pop
xor
mov
ljmp
xchg
fs
les
inc
jg
std
dec
cmpsb
xor
mov
arpl
push
mov
inc
test
inc
movsl
repz
mov
push
loope
cmpl
inc
outsb
sub
mov
jne
mov
xlat
and
and
cmp
jl
mov
sbbb
loop
mov
aaa
cmpsl
pop
imul
mov
sub
stos
lea
rol
mov
sub
jbe
das
in
fs
pop
jnp
lret
inc
push
xorl
add
in
js
call
push
insl
adc
ljmp
je
adc
adc
inc
lret
hlt
test
popa
sbb
jg
dec
xchg
repnz
dec
std
popa
push
xor
hlt
mov
adc
arpl
loopne
ja
ja
divl
sub
push
cmp
and
call
dec
pop
push
xor
inc
pop
mov
add
fcomps
das
inc
pop
jg
or
popa
pop
mov
inc
mov
rcr
sub
xchg
fwait
cmp
mov
movsb
dec
sub
add
insb
hlt
lock
cmc
push
xor
sbb
inc
sub
lods
shlb
daa
in
jns
fcompl
in
subb
in
xor
rorl
aad
xor
out
xor
jle
xchg
stc
popa
xchg
imul
push
jbe
inc
xchg
arpl
in
ljmp
push
mov
pop
sub
mov
icebp
sub
sub
fs
call
fistl
lock
push
push
xchg
insb
fwait
movsb
pop
into
shll
nop
sub
dec
mov
in
int
rcll
and
ret
inc
cmp
xchg
cmp
pop
dec
hlt
xlat
cmpsl
sarb
jmp
dec
and
adc
call
movsb
daa
xchg
sti
jno
xchg
idivb
lods
or
xor
or
sub
jno
rclb
sub
and
inc
dec
push
fdivr
outsb
aam
xchg
cmp
fbstp
and
imul
sub
dec
mov
hlt
mov
ljmp
lds
push
outsl
jecxz
pushf
cmp
mov
in
lcall
adc
bound
add
dec
mov
pop
movsl
lcall
mov
xchg
inc
sti
dec
cltd
orps
cmpsl
imul
xor
push
jecxz
mov
dec
jmp
xor
mov
xchg
cmp
xor
add
jno
in
pushl
xor
fldenv
das
push
push
repnz
xchg
fwait
push
das
movsl
and
pop
and
jmp
fwait
mov
and
test
adc
scas
fisubrl
and
movsl
mov
cmp
sahf
imul
pop
mov
fcmovnu
hlt
xor
push
jle
shl
clc
add
test
je
pop
aaa
clc
cmpl
loope
hlt
mov
add
mov
and
cmc
out
idiv
enter
mov
inc
lock
pop
cwtl
aaa
pop
lock
test
xchg
jno
ja
lcall
push
fs
mov
scas
add
lds
jae
enter
out
pop
pop
mov
daa
xchg
fxch
inc
push
sbb
mov
adc
pop
popl
pushf
xchg
popf
fnstcw
rcll
js
faddl
lret
mov
stos
int3
jae
jge
add
mov
dec
cld
dec
inc
jle
imul
negb
pop
jbe
int
and
iret
mov
lahf
adc
sbb
fimull
adcl
test
jno
int
icebp
pop
mov
rcrb
out
push
out
sbb
and
js
repz
jl
xchg
cmp
leave
roll
xor
frstor
inc
inc
push
push
dec
xchg
cmp
ss
mov
mov
test
mov
or
dec
mov
adcb
and
popa
loope
sahf
inc
inc
sbb
and
jns
fnstcw
rclb
sub
outsl
sub
mov
sub
push
sub
mov
inc
mov
hlt
arpl
xlat
ficoml
daa
aad
in
cmc
imul
jecxz
ret
std
pop
push
mov
or
push
ret
call
lret
jg
and
mov
shrl
xchg
repz
ljmp
dec
and
jg
clc
loop
movsl
mov
ljmp
inc
cwtl
jmp
rcr
roll
stos
mov
xor
xchg
aas
and
cmpsb
add
cmp
inc
xor
push
jge
sbb
out
loopne
mov
jae
lcall
repnz
push
add
lea
mov
add
lea
stos
jmp
mov
mov
aas
cld
mov
stc
xor
mov
cmp
cmp
leave
or
icebp
js
mov
out
sub
int3
repnz
adc
clc
jmp
js
not
mov
xor
incl
jge
xchg
popa
mov
cmpsb
jae
cltd
cmpsb
jae
lods
insb
pop
out
mov
dec
rcll
lods
inc
mov
hlt
mov
jecxz,pt
into
cmp
ljmp
xor
lcall
iret
into
lds
std
cli
in
lahf
push
and
cmp
sub
insl
mov
xchg
sahf
das
movsl
push
lcall
cmpsb
push
out
loopne
ljmp
cmpsb
ja
adc
cltd
mov
jecxz
rorl
mov
jno
ja
cmp
pop
jle
loopne
insb
ss
je
ss
andb
xchg
mov
push
push
out
inc
pop
insl
sahf
rcrl
mov
push
pop
xchg
jg
and
fdivrl
cmp
sub
or
ret
orl
sub
sarl
into
push
add
sub
into
dec
pop
xor
xor
add
imul
std
mov
outsl
in
xchg
bound
loopne
cmc
push
or
ret
adc
mov
out
fimull
imul
or
jb
insl
sub
jge
pop
push
decl
pop
lahf
orl
ret
push
cmp
mov
jl
pop
mov
xchg
shl
xchg
data16
jns
xor
adc
mov
test
jb
and
imulb
cmp
and
rorl
jmp
test
mov
aam
shr
fidivrl
mov
push
cld
and
or
testb
xor
in
mov
push
fiadds
insl
out
jmp
sbb
pop
lret
mov
cmp
sbb
jl
dec
fidivrs
stos
xor
dec
jo
xchg
sahf
push
cmp
addr16
xchg
stc
adc
aad
pop
cwtl
jge
mov
push
rolb
add
mov
inc
mov
mov
pop
test
int
ss
jns
in
out
test
popf
enter
xorl
scas
pop
movsb
outsb
insl
data16
xor
lods
cmp
out
jle
lret
and
shrb
cmp
hlt
out
mov
dec
nop
outsl
sbb
neg
mov
mov
jmp
push
mov
jl
mov
roll
sub
scas
jg
mov
sub
js
xor
pushf
push
add
xor
ja
xor
aas
jmp
std
inc
add
cli
mov
sub
mov
fwait
cmpsl
sbb
popf
push
inc
add
pop
mov
bound
mov
sti
insb
jnp
scas
xchg
hlt
out
insl
jle
pusha
pop
pusha
xor
cli
adc
and
push
xchg
into
mov
jmp
lods
sub
mov
daa
imul
dec
or
das
pushf
call
jae
push
mov
dec
lcall
ret
js
inc
imul
mov
or
test
outsb
js
aas
xchg
fstps
out
js
scas
pop
bound
inc
sbb
iret
lods
push
aaa
xor
sub
sbb
ds
ljmp
pop
fsubl
sbbl
fdivp
arpl
jnp
fmul
pop
out
xor
jbe
and
icebp
fbld
cltd
jl
inc
test
add
and
lret
mov
shl
test
sbb
test
pop
ss
out
sbb
scas
or
xlat
fsubrs
movsb
inc
pop
inc
movl
jecxz
mov
ficompl
xor
jle
lock
inc
inc
fadds
aam
icebp
mov
xchg
icebp
int3
mov
add
imul
testb
xchg
and
push
inc
ror
cmc
dec
jecxz
xlat
loop
mov
nop
xchg
pop
fcomip
jne
push
xchg
adc
or
fisubrs
or
push
sahf
push
std
add
out
mov
call
mov
inc
gs
popa
call
push
pop
data16
outsb
xor
xor
std
mov
pop
and
inc
and
sbb
outsb
scas
ljmp
stos
rclb
lods
shlb
fstpl
rcrb
xchg
push
add
push
mov
dec
inc
jecxz
jmp
or
adc
fsubrl
shll
test
add
dec
mov
fstl
cmc
jmp
mov
repnz
xor
push
icebp
sub
rclb
or
inc
push
dec
pop
pushf
mov
jecxz
and
push
xchg
std
mov
dec
clc
push
data16
and
and
dec
loope
push
repz
mov
or
pusha
mov
add
pop
inc
or
mov
mov
leave
add
int3
inc
jp
loopne
add
sub
sbb
push
cmp
pop
cwtl
mov
fimuls
mov
dec
orb
pop
mov
out
lea
rolb
xor
xchg
das
cmp
sub
xchg
loop
cli
cmp
mov
gs
add
imul
cmpsb
rolb
lods
jge
mov
in
sti
aas
xchg
int
mov
pop
inc
jecxz
xchg
lods
pop
add
out
xchg
add
sub
pop
fldenv
icebp
je
ja
cli
xchg
pop
lds
push
ja
sub
gs
repz
fyl2x
call
hlt
stos
push
mov
roll
push
pusha
mov
inc
rclb
inc
xor
xchg
dec
push
cmp
fs
xlat
int3
cmp
cmp
push
cs
inc
xchg
jo
mov
xchg
mov
movb
ss
imul
out
dec
sbb
sub
ja
and
stos
mov
repz
jb
jbe
stos
pusha
fiaddl
adc
mov
xor
mov
xor
mov
popw
pusha
iret
fistpll
in
or
mov
ret
xchg
cmc
pop
out
repnz
push
sub
push
sbb
ds
mov
leave
mov
iret
imul
jp
sahf
shrb
inc
dec
mov
cltd
xor
dec
push
into
pop
adc
rorl
sbb
adc
adc
iret
xor
inc
or
jne
in
dec
mov
imul
jo
int
cltd
dec
test
push
lds
dec
in
xor
mov
in
push
pop
adc
addr16
jo
dec
sbb
jmp
adcb
pop
push
jns
out
mov
test
movsb
stos
add
push
push
dec
fldt
enter
or
xchg
mov
lea
push
sahf
insb
inc
lcall
enter
iret
pop
cmpsb
inc
xchg
mov
inc
pushf
or
cli
test
sbb
xchg
lock
cmp
arpl
mov
fldz
cmp
mov
and
loop
ljmp
enter
inc
stc
or
inc
push
fidivrl
inc
pop
outsb
jae
push
je
inc
scas
jl
clc
scas
mov
in
cmp
dec
out
mov
mov
jecxz
pop
jns
xchg
cltd
loop
jnp
test
lds
mov
roll
shrb
lcall
sbb
ljmp
ss
xchg
iret
mov
or
pushf
jae
jle
iret
loopne
sarb
pop
push
pop
neg
loopne
pop
pop
cmp
add
cwtl
sub
mov
rorb
insb
or
ds
push
mov
xchg
push
dec
repnz
adc
mov
pop
arpl
je
push
or
fsubrl
negb
jno
mov
push
test
jb
push
fists
xchg
cmpsb
leave
popa
cwtl
inc
and
xor
loope
push
bound
pop
and
xor
mov
xorb
shlb
jnp
ljmp
in
adc
mov
ret
iret
dec
sub
pushf
fnstsw
push
add
mov
dec
xor
call
pop
jns
lock
outsl
cmp
pop
insb
jmp
inc
sub
sub
or
mov
lods
xor
jb
ljmp
sub
int3
cli
popa
sbb
test
pop
add
sub
rcrl
sti
sub
fnstcw
test
push
das
in
addr16
dec
iret
inc
and
or
repz
movsb
and
inc
pop
jmp
mov
cmp
cmp
xor
shlb
mov
mov
shlb
jb
rcll
movsb
xchg
jmp
fcmovnbe
jl
pop
sub
mov
xchg
cmp
hlt
jns
mov
rol
add
out
ja
push
nop
mov
adc
shll
stc
jbe
adc
mov
aad
inc
gs
mov
sub
push
inc
out
mov
test
out
imull
fldenv
jo
dec
dec
lea
xchg
add
sbb
inc
push
wrmsr
pop
sub
push
in
ljmp
mov
outsl
xor
fldenv
jl
mov
loop
stc
mov
cmp
add
jb
push
and
lock
mov
or
sub
push
pop
xchg
push
ret
push
jecxz
inc
in
or
std
cs
add
fs
xchg
add
cmp
or
leave
mov
arpl
mov
gs
jo
adc
shlb
push
cmp
filds
arpl
pop
add
ja
xorl
push
imul
addr16
fbstp
int
dec
adc
pop
repz
add
pop
out
cmpsl
aas
xchg
sbbb
lods
mov
pop
xchg
inc
sahf
iret
sub
ja
lods
cld
addr16
or
push
and
jns
pop
imull
push
scas
push
inc
jae
ja
es
push
jno
rorb
dec
mov
leave
fildll
iret
add
jbe
mov
mov
cld
fstps
idivl
xor
popl
cmpsb
mov
out
dec
push
repnz
add
push
out
push
ret
mov
sbb
dec
jbe
mov
stos
fldt
leave
outsb
in
push
mov
orl
daa
xor
inc
and
mov
xchg
or
jmp
mov
jp
cmp
daa
xchg
adc
leave
pop
shll
out
lods
push
jecxz
dec
xchg
dec
loopne
stc
sbb
loopne
adc
sub
scas
jecxz
mov
mov
sbb
and
les
in
mov
test
test
push
in
les
push
mov
cmp
sbb
out
ss
dec
divb
sub
mov
xchg
push
fs
adc
cmp
stos
fsubrs
add
cs
fisubs
inc
icebp
stc
outsb
dec
xor
push
dec
stos
add
jbe
push
fiadds
xchg
fs
fs
ret
addr16
stos
gs
dec
jecxz
add
mov
int
cmp
push
imul
aam
pop
jmp
ret
jp
lret
xchg
shll
pushf
das
xchg
mov
xchg
lock
ret
mov
rcll
and
ja
push
fs
xchg
inc
push
repz
ficompl
push
inc
pop
jecxz
xor
das
xchg
fs
inc
dec
sub
imulb
sar
push
outsb
or
adc
clc
sbb
cmp
push
leave
add
outsb
xor
add
repnz
mov
mov
testb
xor
jecxz
jne
xchg
jmp
add
push
pop
sub
jne
imul
push
inc
jl
push
push
sbb
push
jns
nop
out
pop
ds
pop
les
lock
adc
leave
push
mov
mov
pop
cltd
data16
aad
loop
mov
mov
cmp
arpl
arpl
ror
je
jb
lds
std
in
cmp
test
in
or
adc
sbb
add
cs
inc
sbb
add
xchg
fdivrp
jnp
pop
cld
ret
mov
mov
dec
seta
add
in
std
outsb
mov
mov
sbbb
jae
pusha
xlat
js
out
out
orl
mov
fisttpll
or
sbb
ds
jecxz
pop
add
and
call
dec
vpmadcsswd
clc
imul
xchg
lret
stc
cmpl
adc
sbb
scas
aaa
and
push
pop
lret
push
iret
xlat
imul
and
test
ret
sbb
jl
es
jl
and
bnd
or
adc
xor
dec
adc
dec
out
mov
jle
aaa
add
jo
data16
aaa
stos
pop
sbb
repz
fildll
mull
outsl
xor
pusha
sahf
in
popf
into
cbtw
data16
dec
mov
fidivrs
pop
push
mov
mov
pop
pop
push
pop
mov
inc
or
stos
cmp
sbb
and
loope
dec
jns
adc
and
jne
inc
aad
int3
mov
sub
ja
mov
test
sbb
idiv
repz
in
push
mov
xor
dec
xchg
lahf
xchg
add
xorb
icebp
pop
outsb
daa
icebp
cmp
movb
adc
inc
mov
les
push
dec
test
js
inc
push
clc
ret
int3
inc
imul
cmc
ret
and
cmpsl
mov
jg
pop
mov
xchg
leave
jmp
and
or
pop
dec
mov
rorl
dec
add
stos
xor
mov
aaa
aas
loopne
jns
leave
in
sti
in
jb
lods
jmp
sub
aas
movsb
idivb
out
rcll
out
ds
cmc
ds
aam
call
ja
psubb
or
leave
add
xchg
sbb
mov
dec
cmc
jl
mov
inc
pop
in
push
in
lods
les
cmp
fcomps
movsl
pop
stos
xor
and
mov
imul
test
xor
testb
sub
stc
loopne
lea
mov
ret
ja
xor
shll
dec
outsl
mov
movsl
push
in
or
pop
or
pop
not
jb
rclb
repz
sub
mov
ss
mov
jl
icebp
push
sub
push
les
fsubs
lods
sub
xchg
sub
psubq
fnstenv
xor
mov
mov
and
pushf
pusha
cmc
call
cmc
dec
push
xchg
mov
adc
lret
ret
push
pop
out
sbb
jb
je
aad
cmpb
and
mov
stc
lcall
ret
or
out
sbb
mov
cmp
pop
mov
leave
jnp
leave
lods
dec
pop
ror
cs
subl
pusha
cmpl
and
pop
mov
mov
and
inc
push
cld
jmp
outsb
add
sbb
mov
xlat
push
pop
push
and
lods
dec
cltd
sub
mov
mov
out
aam
iret
stos
cmp
or
inc
jmp
stos
icebp
icebp
lods
mov
rclb
push
pop
lret
sbb
push
scas
jnp
and
adc
std
call
pop
cmpsb
pop
sbb
jge
jle
sub
xchg
cmpsb
jecxz
popa
ret
and
movsb
or
add
sub
mov
cli
cmp
lock
xor
mov
or
jb,pt
rcr
mov
out
jp
jnp
xchg
lods
je
or
push
jecxz
sahf
test
leave
cmp
lcall
int
or
xchg
and
in
js
xor
rclb
mov
in
push
jg
lock
adc
test
repnz
clc
dec
bound
hlt
xor
aaa
repnz
pop
jne
std
imul
cltd
shll
cwtl
test
sarb
js
in
add
cmp
call
cld
push
sub
lcall
jecxz
loope
mov
shlb
xor
lahf
add
sbb
push
xchg
out
insl
subl
inc
idivb
add
mov
js
pusha
pop
mov
fnstenv
repz
dec
subb
rcl
fnstcw
insl
fiadds
xlat
fbld
out
and
dec
xchg
xchg
nop
or
clc
mov
fsts
cmpsb
testl
lods
mov
cmpsl
in
std
pop
mov
mov
ljmp
cmp
pop
sbb
pop
aas
repnz
xchg
push
cmc
mov
jb
std
rcl
inc
cmpb
push
or
mov
cwtl
out
inc
clc
inc
pop
pop
test
and
adc
or
orb
xor
cmpsl
push
xchg
jne
hlt
xchg
inc
sbbl
fstps
xchg
adc
push
xor
push
fwait
xchg
jecxz
stc
outsl
sbb
pop
jnp
aas
mov
push
pusha
xchg
jge
out
aam
stos
mov
sub
std
mov
shrl
and
inc
sub
add
movsb
lods
ljmp
adc
jo
cmp
mov
sbb
mov
push
mov
cmp
mov
and
frstor
jl
pop
sub
mov
jp
inc
or
aam
insb
mov
mov
inc
cltd
cmp
aad
stc
pop
mov
ds
cld
adc
cld
adc
sti
lahf
and
mov
pusha
dec
xchg
repz
add
push
sbb
dec
mov
enter
adc
in
not
rorl
mov
movl
loop
stos
aas
mov
das
dec
aad
xorl
shl
mov
sbbb
xchg
xchg
push
push
sbb
adcb
fistpl
lods
cmpsl
pop
adc
out
fwait
call
push
mov
ss
stos
inc
jge
and
cmovno
add
lcall
mov
pusha
mov
out
push
sbbb
push
test
mov
cmpsb
mov
das
pop
inc
int
out
ljmp
push
arpl
mov
cmp
adc
fwait
xchg
lcall
cli
or
adc
int3
cs
sbb
sarl
dec
popl
call
inc
arpl
hlt
mov
jnp
adc
icebp
popa
outsl
mov
push
xor
dec
push
ret
stos
dec
jbe
das
mov
jmp
shlb
xchg
cmp
fisttps
test
popf
jg
mov
jne
hlt
sub
arpl
jnp
or
scas
add
les
dec
xchg
and
or
sbb
into
xchg
xchg
dec
int3
or
nop
xorb
mov
ljmp
cltd
stos
pop
jns
inc
adc
out
add
out
sbb
aas
or
mov
adc
adc
das
ds
in
push
mov
mov
cwtl
cwtl
jmp
push
fmuls
js
push
mov
or
jns
in
xchg
mov
aas
and
cmpsl
fisttps
jecxz
jae
cmp
cltd
in
hlt
adc
mov
lock
ja
sbb
inc
adc
fcoml
xor
scas
add
mov
sub
aam
or
mov
xchg
or
mov
mov
idiv
push
ror
or
xchg
sub
sbb
jecxz
dec
cmp
fimull
pushf
pop
pop
fistpl
xor
cli
mov
jbe
aas
push
pop
clc
subb
cmc
inc
pop
insl
add
sbb
pop
cmp
setae
orl
jne
inc
shll
pusha
pop
inc
mov
sbb
mov
arpl
jp
jo
and
pop
jle
adc
iret
mov
pusha
xor
pop
or
pop
mov
decl
incb
pop
push
xchg
cmpsb
mov
enter
outsl
loope
push
and
mov
sbb
xor
mov
add
adc
das
cmpsb
mov
or
in
sti
pop
sbb
nop
mov
pusha
mov
sub
cmpsb
pop
mov
adc
add
pop
and
sub
mov
sub
xchg
sbb
and
orl
xchg
hlt
jmp
stos
fsts
lea
mov
mov
ds
sub
cli
jmp
cmpsb
sbb
and
repz
xchg
xchg
pop
mov
mov
push
mov
jg
push
stos
sete
js
sub
mov
lock
icebp
adc
pushf
repz
lret
dec
daa
hlt
call
sub
les
cmpsl
mov
xchg
aam
pusha
aam
hlt
xchg
mov
mov
push
fisubrl
into
push
adc
add
pop
pop
mov
stos
fwait
adc
adc
ficoml
sub
mov
adc
or
pop
jo
cmp
cmpsb
xchg
adc
pcmpgtd
rcll
add
sbb
cld
dec
std
or
jl
fnstenv
int3
data16
incb
cwtl
shll
add
adc
mov
push
jmp
aas
sti
cmp
xchg
push
add
jp
xchg
mov
fsubs
jle
xchg
and
jl
push
fstpl
push
nop
dec
fisubs
push
sbb
fisubrl
xchg
mov
push
mov
test
mov
push
dec
jae
xor
outsb
xor
stc
mov
xlat
push
jmp
mov
repnz
sub
loope
pushaw
out
std
loop
rolb
mov
mov
imul
jns
lds
jnp
in
bnd
mov
jge
cwtl
cmc
dec
pop
int3
repnz
push
sahf
mov
xchg
out
add
mov
add
movb
xchg
cltd
sub
popf
cwtl
pop
int3
subb
pop
jne
sbb
pop
add
or
xchg
jl
aad
movsb
dec
mov
dec
ja
ja
clc
rcr
inc
mov
pop
adc
ljmp
fwait
insb
in
xor
push
or
add
inc
or
jnp
mov
es
aam
int3
push
ljmp
pop
sub
fadd
pop
mov
fwait
or
es
cltd
movsb
arpl
pop
sti
push
shl
inc
sahf
push
scas
sti
fs
cmp
cmc
scas
push
pop
cmpsl
test
xchg
ret
lock
xlat
add
lea
popf
inc
icebp
sbbl
mov
dec
adc
fwait
mov
pushf
mov
cmpsb
push
cmpsl
push
mov
loope
leave
addr16
scas
shlb
outsb
mov
stos
int3
decb
and
cmp
mov
mov
cmp
cld
mov
adc
mov
mov
xchg
jg
dec
test
cmp
mov
xor
movsl
xchg
sbb
xchg
sub
adc
sahf
mov
pop
mov
mov
push
cmp
adc
cmp
lret
adc
mov
loop
sbb
mov
xchg
das
inc
cli
jbe
fstpl
imul
movb
scas
movsl
jge
imull
mov
fdivs
fstps
stc
ret
into
mov
bswap
mov
inc
aas
lea
lcall
xchg
call
dec
inc
jmp
mov
mov
and
adc
out
push
jne
fs
and
rcr
into
test
sarb
cli
sbb
push
stos
in
inc
imul
jmp
inc
cmpsl
jge
or
or
xchg
ja
pop
xor
cmp
call
bound
hlt
xor
inc
or
inc
outsl
xchg
mov
mov
mov
stos
ja
fistps
divl
outsb
cld
cmp
stc
popa
jmp
xor
repnz
inc
inc
or
imul
loop
add
add
inc
fisubrl
daa
sbb
mov
sbbb
cmp
cmp
xchg
lock
or
neg
push
jmp
loope
add
nop
jb
mov
inc
rcl
jl
into
iret
pushf
lahf
js
mov
pop
sbb
add
inc
outsl
ja
pop
sbb
shll
popa
int
rcrl
inc
rcll
fdivr
xor
xor
fstl
push
pop
test
xchg
mov
and
fisubrs
rorl
repz
hlt
roll
mov
jle
pop
hlt
imul
imul
mov
push
test
leave
nop
inc
mov
and
adc
pop
dec
stc
pushf
pusha
inc
test
lock
stos
ficompl
inc
cli
mov
inc
stc
rcrl
mov
rcrb
aaa
aad
and
je
orb
dec
xor
stos
das
sub
mov
int
jge
pop
ret
shll
pop
cmp
mov
jl
inc
sbb
shlb
mov
cmpb
jbe
movsb
xchg
xchg
sub
inc
adc
cltd
sahf
cltd
arpl
clc
or
ss
sub
cld
testl
add
popa
push
inc
aas
mov
ljmp
or
repz
inc
fildl
js
mov
xchg
sbb
sub
movsb
leave
cmpb
loop
sbb
mov
mov
sbb
mov
lret
xor
test
sub
mov
adc
xchg
adc
loopne
xchg
mov
leave
cld
push
pop
int
xchg
push
xchg
negl
push
ja
mov
mov
jne
inc
jp
mov
jge
cmp
cmc
lea
aas
xchg
mov
lea
mov
dec
aad
mov
aam
add
fwait
xlat
xchg
ljmp
xchg
and
mov
xchg
rolb
test
mov
test
jbe
push
imul
mov
cmp
mov
jo
mov
cmp
jae
mov
dec
lods
pop
sarl
or
mov
sub
mov
pop
jno
dec
movsl
fsubrs
inc
repnz
ds
cmc
mov
std
dec
jb
mov
xor
sbb
push
push
in
dec
jae,pt
jo
bound
pop
rcrl
shrb
rcrb
in
iret
inc
lods
dec
xorl
sub
mov
arpl
mov
lahf
adc
dec
pop
cmp
xor
movsl
out
mov
push
cmpsl
xchg
je
sti
es
push
mov
xchg
hlt
push
push
sbb
ljmp
sub
mov
add
sub
jmp
push
mov
clc
and
pop
dec
hlt
adc
and
inc
call
adc
aad
add
pop
lahf
cs
cwtl
ss
dec
dec
aaa
jno
out
jns
repnz
fsubl
movsb
fcoms
or
repz
imulb
xor
sub
inc
std
add
cwtl
iret
js
mov
fbstp
rcr
inc
add
mov
xor
mov
add
jle
test
pop
icebp
mov
js
sbb
cmpsl
ret
sbb
cmc
cmp
mov
fistpll
aad
xchg
adc
mov
loopne
rclb
jb
xchg
rcrl
out
leave
xchg
sub
ss
inc
cli
mov
or
loopne
fstp
aas
popa
pop
push
pop
jo
daa
andl
pop
sub
divl
js
xchg
or
bound
ja
ss
stos
leave
mul
add
lret
iret
and
jbe
mov
pop
push
nop
xor
loopne
jne
mov
xchg
fstps
imul
or
push
repz
outsb
xchg
xor
and
cmc
mov
sbb
fimuls
cmpl
lea
mov
rclb
insb
cmp
dec
cmp
mov
rcl
pop
cmp
add
in
push
cli
jg
loope
fistpl
pop
imul
jo
cmc
push
mov
mov
pop
lret
cmp
nop
push
xchg
decl
xor
add
scas
int
iret
rcrl
mov
pushl
add
insb
push
push
scas
jno
add
cmp
enter
popa
lahf
add
roll
cmp
inc
or
pop
pop
in
mov
idivb
push
push
into
xor
cmp
cmp
xor
and
in
add
mov
es
maskmovq
mull
pop
push
stos
mov
lock
push
imul
stos
outsb
scas
repnz
mov
add
dec
mov
push
bound
mov
je
adc
lock
xchg
fiaddl
add
sbb
pop
xor
xor
test
scas
adc
dec
push
ret
adc
in
pushf
xchg
xchg
xlat
aaa
popa
or
ret
xchg
push
sbb
lds
mov
je
fcompl
pop
pop
enter
in
rclb
leave
test
xchg
mov
sbb
inc
adc
push
pop
stos
push
cmp
jns
fbld
mov
cli
data16
lods
cmp
pop
aaa
mov
push
push
test
jae
fimuls
int3
jecxz
sbb
addr16
push
and
xchg
inc
push
lods
mov
je
xchg
fcoms
push
and
push
mov
cmc
adc
push
inc
sbb
push
mov
or
adc
sbb
leave
adc
cmpsb
cmpsl
dec
gs
insb
ljmp
inc
adc
out
push
inc
insb
shrl
insl
mov
cmp
out
mov
out
xor
xchg
mov
lret
popf
cmp
inc
sub
movsl
cmp
icebp
outsb
sbb
cmp
movl
adc
out
cmp
loop
jno
stos
inc
stos
push
add
sbb
ss
clc
call
testl
idivl
jnp
rorl
cltd
xor
stos
aad
test
popf
dec
push
scas
hlt
sub
fiadds
mov
sub
lods
mov
ret
push
and
dec
enter
xor
sub
mov
cmpsl
out
jmp
popa
xor
jno
cmc
xchg
je
jecxz
push
push
fdivl
out
stos
ret
and
xchg
pusha
dec
fsubrs
mov
pop
sbb
repz
ds
in
push
adc
leave
cld
int
dec
shlb
and
nop
inc
xchg
pop
fsubrl
shl
and
dec
jg
sbb
rcll
jp
fidivl
orb
fistpl
and
cmp
je
ret
and
xorl
jg
xor
enter
mov
or
jb
and
aam
mov
daa
test
add
pcmpeqd
nop
push
mov
shl
aad
sti
lret
jbe
mov
bnd
outsb
and
xchg
adc
add
enter
inc
push
push
mov
inc
jmp
inc
hlt
dec
sti
test
adc
inc
lahf
sbb
test
subb
lretw
gs
icebp
roll
jne
mov
xlat
push
push
xor
dec
out
sub
cltd
pop
push
jae
dec
hlt
in
in
adcb
inc
aam
and
or
sbbl
pop
push
push
adc
xchg
dec
mov
cltd
jp
nop
mov
mov
inc
xor
icebp
cli
aaa
xchg
mov
stos
rorb
ret
push
push
sbb
mov
inc
jecxz
mov
inc
movl
lock
cmpsb
pop
insl
lods
rorl
xchg
stc
inc
dec
inc
push
and
jge
aad
pop
cli
pop
xor
test
or
mov
jbe
mov
movb
jge
push
daa
sahf
mov
cwtl
inc
movsb
insl
xchg
adcb
jo
xor
adc
push
shr
pop
pop
nop
push
pop
push
and
je
imul
fwait
sub
int3
dec
stos
dec
cmp
daa
dec
nop
das
jp
push
jecxz
inc
and
leave
pop
ror
sub
adc
and
rorb
jp
ret
xchg
rorl
pop
mov
xor
movsl
jnp
push
xchg
and
add
inc
add
mov
add
push
addr16
mov
sti
xor
in
pop
add
mov
into
cmp
push
add
jp
xor
cltd
enter
and
loopne
cmp
inc
mov
pop
xchg
or
mov
mov
adc
sbb
push
fildl
popf
mov
rol
mov
dec
inc
cmpsw
mov
mov
call
stos
popa
test
negl
inc
inc
mov
sahf
lock
movsl
popf
clc
or
pop
ror
dec
aas
mov
sbb
and
pop
andl
ret
insb
mov
xor
loop
xchg
ljmp
test
je
int
das
in
into
xor
or
push
cmp
pop
and
insl
test
ds
out
mov
mov
xchg
clc
adc
mov
shll
loopne
stc
imul
roll
fisubrl
pop
push
push
rclb
sub
pushf
scas
out
xchg
add
sbbb
inc
js
test
into
aas
outsl
cmp
mov
jb
in
jo
movsl
ret
fs
inc
and
divb
xchg
mov
daa
and
rolb
fildll
andb
sub
lds
or
shrb
adc
mov
shr
mov
mov
adc
jmp
outsb
inc
xchg
jnp
iret
fbstp
lret
aad
and
pushf
int
insb
inc
xchg
cmc
int
adc
cmpsl
sub
insb
xor
int3
decb
jae
adc
out
lcall
mov
mov
mov
stc
inc
pushf
mov
out
lods
and
test
sar
ret
jns
inc
add
mov
lcall
in
lods
push
or
push
lret
jle
sbb
push
push
pusha
add
cmp
scas
orb
pop
pop
bound
sub
mov
notb
pop
lods
jmp
or
cmp
and
xor
mov
ja
mov
rclb
aad
icebp
cltd
and
inc
jns
popa
push
scas
xor
aad
push
xor
fnsave
sbb
lea
les
call
insl
jns
cmp
adc
push
inc
push
rorl
jno
push
rcll
mov
dec
sbb
xchg
fisttpll
sahf
xchg
sub
popa
mov
fcom
jl
mov
dec
xchg
push
in
icebp
cmp
aas
nop
sti
sub
sti
and
ficoms
sub
adc
scas
imull
adc
test
popa
jns
shl
push
add
jae
pop
jmp
adc
sub
stos
sar
repz
outsb
mov
fidivrs
jb
cld
popf
inc
call
fidivs
mov
outsb
jmp
inc
cli
xlat
dec
inc
subl
cld
xor
addr16
pushf
in
stos
xorl
xor
fisubrs
mov
aad
ljmp
rcll
mov
jnp
shlb
ret
xor
jne
pusha
lock
jle
mov
mov
cmpsb
push
mov
push
pusha
shll
addr16
out
mov
fstl
mov
or
add
testb
arpl
fiaddl
icebp
mov
lret
lcall
jge
insl
pop
add
mov
aad
push
std
iret
popf
cmpsb
and
popa
repnz
lds
mov
pushf
inc
rolb
mov
sub
mov
xchg
and
ret
nop
cmpsl
mov
ds
add
mov
loope
push
push
fcompl
loopne
mov
in
pop
fldenv
xchg
mov
or
inc
fidivl
out
cmpl
cmp
pusha
sub
cmp
cmpsb
cs
out
daa
add
ljmp
pop
push
mov
cmp
hlt
aaa
jp
es
mov
dec
xor
dec
jne
in
mov
fcmovnu
stos
adc
mov
std
es
into
and
xchg
out
decb
xor
test
jmp
pop
or
cmpsb
pop
loopne
add
scas
lea
fstl
nop
jnp
sbb
or
jo
push
sub
out
insl
lock
lea
add
adc
movsb
fmull
imul
mov
jno
inc
jne
and
fists
test
loope
or
into
jb
pop
push
mov
arpl
shlb
adc
int
xor
dec
mov
sub
push
into
pushf
xchg
fists
pusha
mov
icebp
sarb
mov
sbb
cmp
or
fcompp
ss
mulb
and
push
cmp
fwait
mov
outsb
push
leave
cmpsl
adc
insb
movsl
push
je
mov
pop
popf
rcr
inc
insl
xchg
call
notb
in
xchg
inc
cmc
ret
fsubs
out
mov
or
inc
pop
mov
shll
jge
cmp
loope
mov
lret
fs
out
inc
xlat
imul
hlt
pop
pop
jbe
ret
fsubrp
mov
adc
popa
push
jmp
add
cmp
loop
xchg
inc
jge
cvtps2pi
sbb
in
xchg
sub
cmpsb
movsb
mov
sub
sbb
mov
mov
stos
pop
fsqrt
xchg
mov
in
popa
mov
and
and
adc
sub
divb
fldl
push
push
rcl
scas
xchg
sub
ss
inc
dec
mov
movsb
and
push
arpl
cmp
sbb
lock
sbb
loop
out
mov
pusha
add
jl
pop
sarl
sub
dec
fs
test
js
rorl
mov
xor
push
or
jecxz
dec
adc
mov
jecxz
hlt
jecxz
push
jle
loop
xchg
inc
push
daa
pop
lods
mov
sbb
arpl
movsb
mov
sbb
insl
sub
mov
lret
ljmp
xor
stos
xchg
and
hlt
push
into
jmp
jg
sbb
cwtl
sbb
je
xchg
clc
inc
add
mov
loop
add
test
insl
aaa
rcrl
xrelease
push
mov
test
jns
mov
mov
inc
loop
invd
adc
xchg
jae
int
jmp
jne
lret
rcl
adc
addr16
sbb
js
push
fstpl
xor
mov
scas
jo
and
stos
loope
pop
xor
push
js
arpl
loope
popa
ds
xchg
fistpl
push
lret
push
sbb
es
addb
mov
push
mov
xor
sub
test
pop
pop
xlat
rcrb
cmp
inc
jmp
pop
stc
aas
add
fwait
imul
sub
mov
jns
sbb
push
ja
int
mov
idiv
jo
push
sbb
xchg
adc
inc
divl
push
or
jne
or
mov
mov
sti
pop
adc
ss
sub
lret
pop
insl
movsl
imul
mov
xchg
push
mull
xchg
loopne
ds
xchg
sub
jb
mov
sub
out
or
aam
xchg
stc
jle
rcll
pop
call
xchg
push
pop
fistpll
mov
rclb
imul
dec
lods
pop
mov
cs
mov
push
xchg
aad
cltd
adcl
dec
inc
movsb
xor
adc
or
mov
adc
push
sub
mov
scas
aaa
sub
pop
add
insb
shll
test
out
jmp
leave
add
lods
jge
xlat
jmp
jns
jno
jmp
clc
mov
mov
orl
inc
mov
in
push
idiv
fimull
icebp
sub
lock
lods
aaa
ljmp
xor
inc
inc
push
jb
inc
aaa
fnsave
mov
std
cld
stc
xchg
push
int3
mov
mov
movsb
sahf
adc
dec
jg
mov
jmp
sbb
mov
jne
dec
cmp
cmpsb
xchg
aad
push
mov
add
mov
xor
xchg
mov
jnp
sbb
jnp
adc
adc
stos
clc
jmp
jns
mov
imul
stos
jnp
leave
les
out
aaa
xchg
imul
cli
or
ljmp
adc
fisttpll
mov
inc
arpl
imul
les
xchg
mov
dec
stos
xchg
adc
push
jmp
pushf
inc
xlat
push
das
adc
stc
jbe
pop
inc
inc
fiadds
xor
rcrb
cmp
jmp
inc
sbbl
testl
int
pop
in
out
outsl
imul
je
mov
fcoml
andl
cmp
fs
imul
sbb
dec
jg
pusha
fldt
add
jne
jl
movsl
popa
rorb
mov
hlt
ja
sub
test
out
jl
mov
sbb
aas
or
sub
jmp
sub
mov
cmp
addr16
or
and
jmp
pusha
in
mov
out
inc
pop
add
mov
dec
add
int3
pop
dec
dec
jecxz
dec
sub
and
and
out
int
mov
out
scas
scas
jge
dec
popa
arpl
stos
in
aas
inc
adc
mov
stc
mov
jmp
pop
std
fists
sti
shlb
sub
sbb
leave
scas
ljmp
adc
push
movsl
fstpl
movsb
push
pop
adc
repnz
test
fdivrs
fdivr
mov
test
outsl
rorb
mov
insl
dec
add
xor
xchg
fldenv
xchg
mov
rorb
xchg
mov
cmpsl
je
shl
lret
push
cmp
mov
lret
ja
push
pop
sar
jl
lods
scas
loopne
js
int3
add
lcall
mov
sub
and
cld
push
xlat
dec
sub
mov
ds
cmc
cwtl
cltd
sub
ret
loop
pop
insl
daa
or
shlb
push
sbb
sub
lret
in
jle
test
pop
jl
xchg
mov
outsb
stos
test
bswap
insb
inc
jle
lods
hlt
gs
fbld
lods
movsb
out
xchg
add
xchg
dec
add
jmp
sbb
pushf
adc
cmpb
jg
and
pusha
jle
outsb
aaa
sub
outsb
call
xchg
popl
dec
mov
das
fstpt
xor
out
mov
adc
js
and
dec
mov
xchg
aaa
inc
mov
mov
insb
mov
imul
fadds
push
fcomps
sub
mov
repz
loope
roll
aam
mov
inc
sub
xchg
push
ljmp
xchg
sbb
test
mov
adc
dec
jge
arpl
mov
and
icebp
mov
outsb
push
cmp
ljmp
mov
aam
mov
je
xchg
shr
dec
shll
cltd
divl
add
dec
jns
enter
scas
jnp
lahf
test
cmc
xor
into
test
nopl
jne
negl
insl
loopne
repz
mov
lods
lcall
loopne
outsl
dec
int3
fs
sbb
je
add
sub
or
inc
lods
jbe
xchg
xchg
fimuls
rolb
mov
sub
mov
sti
lahf
pop
inc
cmp
or
adc
pop
clc
mov
ja
mov
jmp
add
not
aad
jne
out
sub
cmp
cli
push
test
imul
imul
push
push
push
sbb
xchg
sub
xchg
aad
xchg
stos
es
sbb
bound
and
push
lds
jbe
inc
cwtl
sahf
inc
fnstenv
cltd
jne
cmc
sub
jae
jge
loop
in
imul
leave
or
mov
lods
les
adc
int
scas
xor
push
out
cwtl
lahf
xor
mov
jo
stc
jne
int
shlb
pop
std
adc
adc
mov
xor
adc
jnp
cmp
pop
dec
icebp
xchg
fiaddl
lret
imul
jbe
dec
jg
xlat
adc
push
lret
or
hlt
mov
imul
dec
fiaddl
div
dec
cmpsl
jecxz
push
frstor
cltd
inc
add
fistps
and
sbb
pop
aaa
sub
lret
push
loopne
push
inc
aam
sbb
adc
lret
or
lahf
pop
dec
shrb
pop
xchg
xchg
cmp
arpl
jmp
dec
push
leave
cmc
adc
rol
add
push
and
aas
cltd
inc
adc
in
sub
bndstx
xor
fwait
hlt
pushf
jp
xchg
movsb
shr
inc
push
or
cmp
insb
pop
dec
push
idiv
fmulp
insb
movsl
mov
add
icebp
push
lods
test
pop
or
out
mov
fildll
dec
xchg
in
and
cmc
sbb
push
cmc
mov
in
lret
ja
icebp
mov
out
test
xorb
inc
popa
insl
fisttps
cmc
js
mov
dec
lahf
xorl
jmp
adc
stc
jl
push
jmp
xchg
loope
incl
and
mov
push
imulb
dec
pop
sbb
jnp
arpl
pop
dec
adc
imul
sub
fwait
clc
adc
shr
insl
aas
mov
mov
pusha
cmpsb
test
std
int3
into
inc
or
pop
shll
test
inc
cmp
pop
add
xor
icebp
xchg
fiaddl
movsl
les
jbe
int3
in
sub
mov
xchg
sub
mov
notb
add
xchg
shl
jno
and
mov
mov
std
and
sbb
jno
stc
cld
jns
push
outsb
dec
out
rcr
and
add
cmpsb
xor
push
inc
nop
add
out
repz
scas
push
and
ror
sarl
fsubs
into
inc
lea
cwtl
cmpsl
xchg
or
out
ja
jns
ret
imulb
and
jmp
push
push
popa
jmp
push
and
jns
push
jle
jo
and
mov
icebp
and
sbb
jb
xor
rcl
gs
ret
out
or
jbe
gs
xlat
cld
popf
popa
jb
sbb
cmp
pop
mov
xor
mov
cmp
lahf
call
insl
ret
fwait
or
cmpsl
fsts
xchg
aam
divb
test
mov
pop
push
sub
enter
and
out
jmp
xor
xor
daa
ljmp
ljmp
inc
inc
dec
mov
push
jle
mov
stos
xlat
push
push
inc
call
cmp
shlb
out
repnz
fs
fmull
stc
dec
mov
lds
mov
in
shlb
add
and
outsl
push
pop
aad
pusha
pusha
das
scas
xor
add
inc
int
mov
mov
inc
xchg
je
and
test
insl
mov
mov
xor
xchg
mov
inc
pop
lahf
dec
inc
test
call
adc
jae
mov
mov
sbb
fldcw
loopne
mov
mov
subb
hlt
pop
mov
mov
mov
scas
cmp
lods
mov
jp
xchg
cmpsb
jmp
stc
lea
mov
outsl
movsl
pop
addr16
rorl
mov
xor
popa
push
push
push
rolb
sub
lcall
ja
sti
pop
cmpb
and
sbb
mov
cld
mov
movzwl
pop
shl
ret
ret
cmp
xchg
scas
pop
adc
test
clc
adc
cwtl
sbb
jbe
xlat
mov
call
push
sbb
xor
shll
add
pop
jecxz
andb
mov
std
sub
mov
rcll
or
adc
jns
cmovnp
push
cmp
adc
div
je
mov
cli
sub
nop
mov
mov
cmpsl
mov
dec
sbb
jae
cltd
push
or
imul
mov
int3
sub
repz
push
xchg
mov
shl
lcall
int3
jae
mov
pop
xor
mov
lret
lods
cmp
test
test
sarb
mov
ljmp
inc
pop
cltd
pop
push
jbe
insl
pop
jb
pop
fldenv
fwait
leave
mov
icebp
xchg
jne
int
or
in
mov
popf
fiadds
mov
in
xchg
dec
std
add
lods
xchg
jae
data16
mov
lods
popf
lcall
adc
push
ds
pushf
out
or
add
pop
jne
enter
mov
xchg
jae
rcll
sbb
shrb
mov
pop
ljmp
lret
jnp
sub
push
sbb
and
xor
daa
inc
lret
pop
pop
and
mov
out
lret
dec
rcrb
scas
mov
xchg
pop
sub
mov
add
fs
jb
int
mov
xchg
inc
fiaddl
dec
xchg
insb
cltd
adc
int
pop
outsb
adcl
inc
imul
addr16
sahf
xor
popa
dec
sub
je
fdivp
rolb
xorl
or
test
dec
out
sub
adc
js
xchg
repnz
mov
lds
shlb
jge
jo
shrb
push
cli
nop
orb
fs
pop
inc
cmp
inc
jge
xor
xchg
ss
xor
inc
test
popa
mov
pop
jno
pop
inc
les
fistps
jmp
and
repnz
push
cmp
pop
lea
out
mov
dec
push
insl
xchg
pop
jns
imul
adc
js
cmpxchg
ja
lret
pop
mov
xor
cmc
push
movsb
add
sub
mul
and
fistpl
and
aad
pusha
dec
dec
mov
lods
test
pop
adc
xor
imul
mov
dec
inc
mov
or
in
jl
jno
iret
fucom
and
mov
sub
outsl
fdivs
shrb
push
aad
dec
xor
mov
out
std
adc
lcall
and
inc
shrb
in
into
xorb
lods
xor
jnp
xchg
popl
sub
lea
jb
lock
xlat
dec
xchg
mov
lahf
mov
orl
movsb
mov
inc
sti
inc
fbstp
addr16
dec
jbe
lret
ja
xor
pop
inc
sbb
mov
lcall
inc
psubq
mov
mov
push
imul
das
cmc
es
inc
or
add
scas
sbb
cmp
test
xchg
loopne
mov
adcb
cld
movsb
mov
loopne
dec
inc
mov
lods
xchg
dec
xor
xchg
pop
je
xchg
inc
mov
push
gs
sbb
loopne
ljmp
in
pop
mov
cwtl
daa
sub
inc
cmp
pop
fists
jno,pn
out
mov
shlb
loopnew
xchg
xchg
int
xor
push
test
cmp
jnp
mov
ret
ljmp
cmpsl
push
inc
sarl
loop
xlat
ret
xchg
loope
xchg
inc
imul
gs
add
lods
int3
jne
daa
sti
fwait
jns
ja
movl
mov
fists
push
in
dec
in
aas
js
adc
dec
jns
int3
loopne
mov
xor
sub
pop
aas
and
in
in
notl
loopne
xor
pop
popf
into
iret
jle
dec
jnp
sbb
cwtl
shl
push
pop
inc
sarl
les
imul
repz
lcall
sbb
xchg
adc
jo
stc
popa
cmp
lcall
lods
xchg
mov
lods
and
jmp
xor
gs
jmp
movb
fimuls
pusha
inc
push
sub
cmp
push
mov
nop
jns
cmp
push
in
inc
push
pop
inc
jl
or
les
hlt
icebp
es
cmp
add
xor
mov
popf
xor
or
mov
jnp
sbb
push
xchg
push
jno
sti
ret
sbb
push
push
insl
mov
jg
jecxz
sahf
adc
iret
sub
sarb
sahf
test
cwtl
jbe
pop
push
test
mov
sub
dec
imull
xor
imul
pop
lcall
in
jecxz
and
mov
mov
jecxz
xchg
xchg
dec
mov
sub
mov
call
cmp
shlb
jns
and
mov
dec
int
scas
xchg
icebp
movsb
push
fs
jmp
xchg
iret
cli
xchg
xbegin
cli
xor
pop
outsb
sarl
movsl
add
daa
cwtl
push
xorb
cwtl
sahf
iret
insb
int
gs
pop
jae
add
add
push
pop
push
iret
addr16
mov
clc
fwait
clc
adc
jne
jp
sets
mov
data16
nop
repz
push
xchg
cltd
sub
mov
push
mov
xor
mov
subb
stos
cld
test
xor
cli
xlat
cltd
insb
or
push
in
dec
xor
fwait
mov
mov
inc
imul
clc
ja
cmpsb
xor
dec
add
fstl
imul
and
jp
ret
cli
pop
mov
jle
popa
ss
mov
iret
ja
out
push
mov
mov
xor
push
aaa
daa
bound
cmpsl
or
cwtl
mov
lds
mov
cmpsl
xchg
adc
add
xchg
rorb
mov
pop
add
leave
into
insl
aad
aam
shr
outsb
out
loopne
xor
lahf
and
not
arpl
xlat
jg
jno
ret
lea
jno
stc
inc
mov
xchg
test
push
mov
push
cmp
dec
dec
push
dec
insl
adc
out
pop
shl
sbbl
xchg
std
jo
xchg
mov
or
jno
mov
lea
push
shll
mov
movsl
cmp
insb
nop
push
cmc
jl
push
add
jmp
cmpsl
mov
sub
sti
lods
push
mov
imul
cmpb
or
xchg
adcb
xlat
pushf
push
add
idivl
inc
mov
inc
and
pusha
shl
icebp
out
cmc
lea
push
ret
dec
xlat
jo
push
push
in
cwtl
in
sub
mov
push
test
int3
pop
clc
movsb
hlt
mov
adc
lea
leave
mov
shl
mov
repnz
jne
jecxz
sbb
and
stos
out
sbb
pop
push
cmp
insl
cmp
push
sbb
push
xorb
sub
ss
inc
or
mov
push
pop
mov
outsl
mov
dec
sbb
sub
ljmp
xchg
inc
lods
mov
lahf
mov
mov
cmp
inc
call
cwtl
push
or
clc
adc
outsl
xchg
divb
pop
mov
pop
push
popf
xchg
sbb
and
ss
mov
loopne
xorb
rorb
pop
push
adc
mov
mov
mov
pop
push
loope
addr16
pop
sarb
leave
outsb
jbe
mov
sbb
insl
sbb
add
push
push
push
movsb
lcall
mov
inc
test
outsl
sahf
and
xor
jbe
or
push
dec
and
jp
pop
inc
or
hlt
mov
test
imul
xor
push
aad
dec
insl
dec
cmpsl
jns
incb
aam
ja
mov
dec
push
inc
faddp
insl
dec
and
inc
fsub
ja
pop
sahf
loopne
push
lret
cwtl
jmp
test
xorb
test
mov
ret
inc
addr16
test
cs
pop
pop
or
ds
cmp
push
or
scas
or
xor
sahf
repnz
xor
inc
dec
mov
lods
into
in
sbb
cmpsb
sbb
inc
add
and
enter
sub
xor
fcompl
add
sub
hlt
sbb
jb
mov
mov
or
sub
outsl
push
out
hlt
cmpsl
outsl
adc
inc
push
jnp
pop
mov
or
mov
push
push
bound
cmc
dec
sbb
sub
add
jno
out
clc
mov
cmp
jae,pt
jecxz
sbb
in
dec
dec
in
add
ljmp
mov
in
rcrb
jnp
mov
xor
sub
dec
popa
paddsw
clc
sahf
cs
dec
inc
jecxz
pop
mov
ds
pushl
sar
mov
xchg
ljmp
push
ret
cmpsb
psubw
leave
push
out
cmp
or
test
dec
add
push
cmp
xchg
mov
mov
pusha
lcall
fstpl
test
js
repnz
mov
mov
mov
push
mov
out
or
jne
push
jns
push
lods
or
bound
xor
pop
daa
lcall
add
fcmove
das
fisubs
sahf
xchg
rol
pop
fisubrl
sub
inc
cmp
push
ljmp
iret
pop
or
fimull
movsb
cld
jb
mov
clc
lcall
jp
add
push
ds
into
sub
add
inc
mov
fimuls
xor
aad
inc
iret
ret
sub
ror
orb
arpl
xor
sbb
sub
rcll
aas
les
loop
out
inc
pop
dec
push
gs
cli
fisubs
xchg
add
push
fbld
out
pop
sub
roll
ret
ja
jmp
das
sbb
adc
das
shrb
pushf
mov
push
xchg
mov
cmp
repz
lods
test
xlat
push
into
mov
jbe
and
fimull
push
jno
cmp
mov
mov
in
pusha
mov
ss
add
in
cwtl
add
int
mov
rclb
rcl
decb
andb
sbb
push
leave
jmp
ja
push
hlt
pop
enter
fisubs
sbb
push
mov
clc
ficoms
nop
imul
add
jp
or
test
lds
out
cltd
ret
ljmp
push
or
push
sub
push
adc
push
sbb
icebp
into
xor
xchg
xchg
fmull
mov
inc
add
and
push
or
pop
movsb
mov
xor
lods
les
mov
xor
popf
sub
into
mov
mov
adcb
jmp
repz
hlt
or
rcll
pop
mov
gs
mov
dec
das
pop
outsl
gs
in
loop
insb
mov
add
loop
jp
nop
jns
andb
icebp
pop
sub
or
pop
insl
inc
and
sbb
fldcw
ds
mov
nop
shlb
dec
scas
insb
clc
fstps
rorl
pop
xchg
dec
push
enter
lods
sti
rolb
aas
fnstenv
mov
addr16
movsl
in
mov
lahf
cmpsl
push
scas
jne
push
push
cmp
and
pusha
xchg
and
das
pop
mov
mov
xor
inc
test
int3
cmp
jmp
push
pop
xchg
scas
and
adc
lds
shlb
jne
add
mov
pushf
ss
dec
out
sub
jmp
movsb
fidivrs
fs
cmp
inc
stos
setne
cwtl
lds
pop
adc
ror
pop
xchg
push
shll
or
pop
ja
push
xchg
sub
add
pusha
lock
xchg
fadds
pop
fildll
inc
lods
add
adc
sub
test
sahf
dec
lods
das
jbe
dec
testb
js
pop
in
inc
pop
mov
out
frstor
mov
in
outsb
xchg
aad
and
mov
push
test
outsb
jb
insb
push
addr16
mov
ss
sbb
xor
mov
aam
cmp
rcl
xchg
loope
je
imul
xchg
cmc
lods
mov
mov
xchg
mov
ds
pop
inc
adc
repz
int
xor
outsb
mov
insb
dec
popa
xor
sarb
fwait
sbb
push
xor
fstps
sbb
xor
movb
or
pusha
jb
dec
cmpsl
inc
xchg
mov
mov
inc
mov
mov
je
daa
pop
dec
jg
xchg
loopew
scas
dec
mov
mov
repz
andl
shlb
fnsetpm(287
cmp
mov
in
iret
bound
mov
sbb
xor
inc
imul
mov
ffreep
mov
xchg
decl
scas
les
xchg
xor
xchg
pop
push
les
ljmp
scas
jp
dec
xchg
cmc
cmpsb
fsubs
fnstenv
scas
sbb
mov
lret
jo
popa
in
adc
sbb
pop
imulb
cmpsb
mov
popf
testl
ss
shrb
hlt
jbe
sti
mov
test
jns,pn
into
or
in
push
ljmp
ss
cmp
aam
xchg
mov
xchg
xchg
rolb
adc
in
je
mov
mov
clc
jl
mov
out
push
pop
add
ja
fwait
mov
inc
jnp
enter
cmovno
mov
dec
test
bound
push
test
add
dec
dec
out
jge
popa
cmp
lret
ret
cmp
int3
dec
mov
es
sbb
in
cmpb
stos
lods
lods
das
add
daa
inc
in
stos
movsb
dec
mov
inc
icebp
mov
or
mov
cmp
aaa
mov
jb
adc
enter
add
jge
and
addr16
adc
ret
ret
sub
jne
xor
pop
jnp
fwait
test
movsl
jbe
enter
mov
mov
cld
subb
iret
rolb
pop
mov
bound
int3
out
loop
xchg
xchg
push
xchg
int
mov
xor
loopne
cld
mov
push
enter
int3
mov
int
add
fcoml
out
insl
imulb
dec
pop
mov
repz
dec
stos
jecxz
shrb
push
sbb
push
fnstenv
adc
mov
cmp
and
push
inc
add
lcall
cmp
mov
mov
fnstenv
sti
xchg
sub
cmp
or
rorl
scas
je
lods
lahf
sbb
outsb
outsb
nop
dec
aad
jp
sub
pop
in
insb
pop
cli
gs
inc
xor
dec
push
mov
dec
or
jno
add
subl
stc
out
leave
cmpsl
and
test
push
jnp
mov
sub
mov
cld
dec
sbbb
fsubrs
xchg
call
sbb
ljmp
fsubs
lods
outsl
stos
aam
jp
adc
xchg
inc
mov
mov
out
movsb
cld
jle
adc
or
adc
xor
inc
icebp
mov
dec
push
adc
sbb
inc
lods
jb
xchg
loopne
dec
repnz
loop
sub
nop
adc
xor
and
add
fsubs
mov
xor
pop
push
cltd
jne
movsb
testl
adc
movhps
loope
dec
pop
jnp
call
xchg
lods
sbb
lar
xor
roll
cs
daa
push
push
das
fcoml
mov
push
movsl
ficoms
into
push
dec
cmp
outsb
js
cmp
out
scas
sti
sbb
cmpsl
and
lea
test
repz
xor
jno
push
lret
in
fmull
pop
cltd
shlb
inc
lret
mov
xor
rorb
imulb
push
rolb
mov
mov
mov
out
stc
jae
mov
ret
jecxz
mov
lret
call
and
test
mulb
and
lcall
sti
dec
add
mov
cmpsl
movsl
cmpsb
aam
pop
out
and
mov
je
mov
pop
cmpsl
test
mov
iret
outsl
inc
out
mov
inc
es
adc
sub
mov
in
cmp
or
les
push
push
and
lds
shrl
popf
movsl
xchg
sub
mov
and
cs
int3
fidivrs
add
mov
dec
xchg
adc
push
push
arpl
or
and
xor
cmp
popf
out
xlat
cmpsl
jbe
add
cmp
lea
pusha
fldcw
stc
out
mov
mov
mov
rolb
mov
mov
adc
sub
pop
add
xchg
sub
cltd
xor
lods
cmp
xchg
jns
aas
mov
in
loope
add
pop
cli
ret
push
mov
sub
cs
pop
imul
imul
jp
jno
or
pop
shlb
out
jge
or
inc
or
mov
mov
std
int
inc
int
scas
or
sbb
lea
sahf
ja
sub
fcoml
sbb
out
arpl
call
aam
call
in
out
out
insb
push
frstor
bound
mov
jns
sbb
push
xchg
jg
jp
into
mov
inc
xchg
scas
rcrl
adc
xor
sub
xchg
mov
imul
stos
push
or
fdivrl
in
mov
aas
or
and
xchg
popf
int
sbb
es
xchg
mulb
idivl
iret
out
xor
in
lahf
jo
xlat
cli
adc
rclb
insb
jl
orl
or
mov
cmp
shll
and
and
xchg
jo
sti
jnp
push
pop
cmp
jne
cmp
int
add
movsl
xor
cmp
into
jne
dec
push
fbld
lretw
adc
aaa
movsl
sbbl
sti
nop
xor
ffree
pushf
andl
inc
adc
push
mov
mov
loop
lret
mov
pop
mov
popa
cli
cmp
or
xchg
push
aad
fs
nop
mov
cmpsb
sbb
andl
outsb
into
lret
pushf
test
je
out
shll
add
stos
scas
out
or
adc
ficoms
repz
je
mov
adc
sahf
pop
loop
and
mov
mov
data16
adc
scas
ss
cli
std
or
adcb
negl
cmp
lret
test
sbb
xchg
add
inc
mov
sarb
xchg
pop
mov
mov
rcrl
imul
pop
and
insl
push
popa
sbb
mov
lods
out
mov
push
mov
enter
mov
cmp
jno
clc
pop
pop
pop
mov
mov
push
mov
mov
sbbb
or
xchg
mov
movb
add
push
pop
out
into
and
and
int
push
adc
int
pop
mov
enter
xor
pop
jge
aas
test
mov
dec
xchg
cmp
xchg
sahf
xor
xchg
lods
in
lcall
call
mov
and
mul
xchg
add
mov
lret
jns
sub
shrb
dec
push
out
rcl
add
adc
leave
addb
cs
inc
dec
sbb
loopne
inc
in
dec
fwait
xorl
mov
cld
ja
out
sub
xor
rcr
xor
push
dec
sub
jb
inc
ja
jo
int3
pop
pop
and
andl
rol
mov
add
iret
pop
pop
or
xlat
mov
inc
movsb
push
inc
sbbb
loopne
dec
mov
sti
push
aam
cmc
and
mov
aas
pop
inc
cs
ja
int3
ljmp
dec
cmp
push
push
nop
pop
jge
into
bound
fisttpl
loopne
shlb
sbb
push
inc
insl
cmp
das
jle
sub
das
bound
lods
bound
xlat
xor
pushf
fisttpll
add
dec
pop
into
push
push
ss
cmc
xchg
xchg
sbb
enter
pop
arpl
cmpsl
pop
or
fisubrs
inc
dec
add
sub
xchg
vpsubsw
and
loopne
adc
shll
stc
jns
mov
cmp
rclb
mov
dec
push
sti
sbb
cltd
les
mov
sub
jne
fs
into
dec
push
or
sub
dec
mov
outsb
jl
mov
mov
jno
push
es
leave
mov
iret
in
out
cmp
icebp
cld
or
jp
fildll
or
sub
mov
and
and
lods
dec
cmc
sub
adc
or
cmp
dec
scas
mov
mov
aas
dec
subb
lock
gs
sub
notl
add
loope
push
cmp
mov
es
xchg
mov
pushf
jb
pop
cmp
xchg
stos
push
xor
jb
dec
xor
xchg
ja
or
xor
scas
lods
add
mov
lcall
in
jmp
mov
loope
or
push
xchg
cmpb
xchg
sahf
dec
inc
cmpl
stc
mov
cmpsl
cmp
inc
roll
pop
jbe
pop
into
into
arpl
outsl
mov
dec
leave
loopne
mov
shrb
enter
push
rorb
dec
xchg
dec
lds
jecxz
sbb
mov
mov
scas
xor
outsb
test
clc
cmp
pop
in
faddl
xor
sbb
add
push
pusha
lret
mov
mov
mov
jg
pusha
fisubrl
aaa
mov
fcmovne
es
cmc
scas
pop
fcomps
jg
subb
shrl
mov
jo
mov
mov
fs
addr16
and
sahf
lds
adc
fcom
jne
mov
loopne
or
jae
xor
popf
pop
nop
call
insl
pop
addl
repnz
insb
and
notl
outsb
int3
test
dec
dec
push
sti
sbb
shlb
or
mov
xchg
lahf
jp
lods
lret
adc
popa
insl
sti
xchg
out
int
notb
dec
jae
inc
sub
popa
sbb
out
out
adc
pushf
and
pop
cmpsb
jnp
or
lds
sbb
inc
cmp
test
inc
hlt
rorb
sahf
jg
imul
vmovdqa
push
xor
pop
les
xchg
das
mov
and
jb
test
xor
xorl
pop
push
add
repz
dec
sbb
lods
orb
or
lods
mov
add
out
inc
in
cmpsb
aam
jae
in
mov
orl
inc
shl
xor
decl
xchg
inc
imull
out
jbe
cwtl
js
mulb
xor
or
pop
xchg
sub
adc
xor
push
adc
jmp
sbb
and
lcall
lcall
cmp
sbbl
lret
cltd
dec
mov
les
nop
stos
pushw
xchg
in
mov
popf
fs
or
cltd
data16
ret
loopne
out
mov
repnz
cmp
xor
xchg
in
repz
out
jnp
call
mov
and
jnp
aad
xchg
lds
shll
adc
push
mov
jmp
into
or
push
in
into
iret
mov
int3
pop
ds
subb
and
sbb
nop
jo
pop
or
fcompl
ss
rcrb
add
dec
aam
daa
lods
pop
lahf
cmp
sbb
adc
in
sarl
sbb
push
fwait
js
xchg
pop
in
inc
imul
fidivrl
ja
into
fcoml
xchg
or
jne
cmp
jecxz
add
push
stc
mov
jp
fadd
leave
pop
mov
and
fidivrs
ret
mov
push
and
mov
movsl
pop
jl
push
lcall
lock
or
aam
nop
negb
std
mov
mov
mov
mov
and
add
xor
mov
sbb
sti
adc
xor
adc
lds
stos
call
sbb
subb
loope
fs
add
fucomi
adc
aaa
sub
shll
sub
ret
push
push
xchg
inc
scas
dec
fs
mov
cmp
mov
cmc
jp
mov
es
mov
aaa
sbbl
lds
notl
xchg
fisttps
mov
xor
stos
mov
rcl
inc
lcall
hlt
lea
mov
push
das
xlat
inc
dec
lcall
popa
sar
push
push
rolb
sub
xchg
ja
test
mov
cmp
adc
stos
call
int3
mov
mov
popf
outsb
fsubrs
imulb
adc
push
js
or
mov
mov
out
push
test
and
pop
insb
fidivl
sub
test
enter
xor
fnsave
arpl
lcall
xor
push
icebp
insl
scas
enter
pop
jne
push
jecxz
repnz
int3
dec
rcll
cmp
shlb
insl
pop
jae
std
les
insb
mov
adc
lahf
dec
xchg
mov
and
lcall
int3
cld
inc
pop
pop
jbe
and
jne
std
aaa
cmpsl
mov
mov
idivb
pop
addr16
test
xchg
nop
cmp
add
gs
test
mov
adc
dec
mov
imul
xor
push
ss
iret
pop
cltd
sub
sub
mov
sbb
imul
decl
dec
add
popa
push
aas
xor
cld
ror
lock
xchg
cmp
mov
shlb
adc
xchg
push
in
imul
pop
sub
mov
jp
jo
fisubl
and
jo
in
push
cmp
in
and
push
sub
mov
and
mov
fwait
xchg
push
lods
dec
push
inc
sub
pop
mov
shll
xchg
les
mov
dec
and
lock
cmp
xor
cmp
pop
and
stos
jne
sahf
scas
gs
cld
repz
sbb
push
inc
movl
mov
push
ret
aad
into
lcall
xchg
stos
cmp
sub
jno
xor
mov
cmpsb
push
push
subl
push
jbe
lret
out
inc
jno
mov
dec
in
icebp
sbb
inc
imul
mov
xor
scas
into
xlat
pusha
daa
sub
mov
pop
xor
insb
push
mov
or
xor
pop
sbb
aas
nop
mov
xor
test
dec
xor
incb
in
std
sub
mov
xor
xlat
loope
test
pop
cltd
test
inc
sbb
cwtl
in
negb
aam
jecxz
mov
mov
push
mov
xchg
or
mov
xchg
push
fsts
xlat
jmp
push
or
fnstcw
mov
and
sarl
jo
popl
in
xchg
les
jl
mov
dec
lea
rorl
jae
fidivs
jmp
adc
lock
sbbb
mov
rcrb
adc
mov
shl
jg
lds
and
xor
xchg
lret
xor
test
loope
adc
es
and
stos
loopne
sbb
mov
jp
arpl
movsl
movsl
sbb
loop
fs
and
or
xor
out
sti
les
push
int3
movsb
popa
sbb
xor
sub
cmp
mov
in
pop
add
jae
test
push
jae
sarl
or
popf
sub
jo
lahf
xchg
inc
add
inc
cli
dec
outsl
add
mov
orl
xchg
pop
pop
hlt
push
mov
call
jne
dec
lcall
and
lret
xor
cmp
adc
push
addr16
movsb
adc
ror
pop
lds
push
fidivrl
insb
xchg
push
rolb
enter
mov
out
orl
hlt
pop
xchg
fcoms
adc
das
ljmp
push
push
cmc
bnd
mov
push
in
fs
pusha
mov
xor
fstl
dec
xor
or
push
sbb
sbbl
movsl
gs
sub
shl
enter
loop
mov
jbe
xchg
inc
mov
cmpl
mov
cmc
mull
test
mov
ret
fsubrs
jno
inc
cltd
dec
mov
es
loopne
lret
cli
lds
add
jmp
cmp
pop
fstpl
pop
fwait
rorl
arpl
dec
std
int3
add
in
sarl
js
mov
in
dec
hlt
leave
xchg
push
inc
mov
xor
dec
cmp
ret
cmpsb
popa
enter
jmp
lret
sub
test
mov
frndint
push
push
inc
nop
es
pushw
arpl
inc
sub
cmpsl
xchg
xlat
mov
cmp
sub
insb
push
out
repnz
test
or
xchg
imul
daa
xchg
cmpsl
push
lds
imull
inc
das
sbb
adc
or
adc
sub
pop
jecxz
clc
jae
push
lock
inc
mov
divl
stos
lods
xchg
in
flds
data16
mov
mov
fwait
sti
adc
mov
dec
stos
or
fiaddl
xchg
push
ljmp
aad
rcr
xchg
dec
jnp
push
mov
pushf
inc
push
movsl
pop
aad
ret
test
daa
insl
mov
or
mov
aaa
cmp
mov
cmc
dec
pop
ja
adc
sub
cmpsl
mov
punpckldq
das
jmp
mov
in
pop
xor
test
mov
mov
add
loope
mov
out
outsb
imul
pop
sub
es
xchg
mov
addr16
mov
mov
repnz
cmp
mov
lret
push
inc
mov
lahf
fsts
js
repnz
or
add
out
xchg
sbb
mov
add
push
add
push
loope
mov
orl
lods
daa
and
lahf
iret
sub
popf
sbb
shll
push
clc
fildll
subb
mov
pop
and
push
ret
popf
test
push
loopne
repz
push
xor
xchg
jnp
fimuls
test
mov
sub
jmp
int3
mov
dec
cmp
cmp
fwait
mov
adc
jns
sub
jmp
inc
push
mov
arpl
popa
mov
loop
out
jbe
rcrb
cmp
pop
lret
jbe
mov
fldl
xor
insl
inc
jbe
cwtl
mov
int3
bswap
adc
push
insl
inc
lock
add
mul
mov
movsb
bound
mov
int3
negl
mov
ss
mov
jns
mov
lock
cmpsl
jle
lds
inc
mov
or
xchg
jecxz
pop
xchg
stos
mov
xchg
mov
icebp
inc
sub
enter
mov
push
rcr
mov
pop
ds
pop
xor
in
scas
pop
ds
dec
pop
sar
jnp
in
push
sbb
movsl
call
test
ret
in
imul
mov
in
xor
stc
jnp
push
mov
or
dec
out
arpl
and
es
push
mov
and
pop
xchg
notb
adc
and
push
sub
movsl
inc
fcoms
data16
inc
repnz
out
xchg
rorb
or
fdivp
jecxz
xor
adc
mov
lret
push
xor
add
iret
push
xlat
jbe
ret
insl
test
js
mul
mov
sbb
mov
stc
pop
shrb
stos
iret
cmp
add
pop
in
add
orb
xor
out
mov
cmp
inc
dec
jnp
jne
ds
push
push
test
mov
into
and
pop
repnz
mov
lock
stos
mov
je
and
and
adc
push
sbb
insb
data16
mov
ftst
fstps
mov
faddl
in
loopne
jbe
stos
pop
xchg
scas
jmp
sbb
lahf
mov
mov
inc
fidivl
sub
scas
xchg
mov
mov
scas
or
imul
stc
clc
xchg
add
dec
push
movb
or
and
sub
lods
cmpsb
sahf
lods
mov
mov
jnp
ljmp
aad
inc
aas
pop
imul
push
xchg
jnp
or
cmp
scas
xor
jb
lea
insl
xor
add
outsl
scas
icebp
int3
jecxz
mov
aaa
pop
loopne
stos
scas
sbb
cmp
adcb
ret
das
lret
pusha
pop
or
leave
sbb
inc
dec
adcb
and
ret
xchg
clc
gs
pop
out
pop
cld
add
xchg
mov
movsl
mov
mov
in
mov
aad
std
mov
xor
lea
outsl
fsts
jecxz
outsl
jmp
cltd
mov
add
pop
ficoml
shlb
mov
pop
pop
into
test
mov
or
loopne
arpl
lret
sbb
loopne
jns
in
stos
and
mov
push
insl
out
sbb
xor
dec
push
jmp
stc
nop
out
popa
mov
or
in
test
xchg
pop
test
adc
add
pop
jecxz
lcall
clc
enter
data16
scas
repnz
and
sbb
push
push
test
es
rcll
pop
mov
dec
pop
mov
std
xchg
pop
cltd
leave
lea
push
jecxz
push
daa
inc
fcompl
push
mov
jg
ja
push
mov
insl
aas
adc
pop
in
ret
dec
test
and
gs
call
int
ret
sub
inc
sub
movsb
ljmp
test
mov
loopne
mov
sti
fisubrl
cli
sbb
mov
mov
sbb
es
sbb
mov
jne
mov
call
loopne
pop
push
push
pop
xchg
jae
insl
fs
ret
ds
in
mov
mov
cwtl
imul
sahf
inc
dec
pop
add
or
dec
mov
add
test
push
movl
sub
pop
pop
pop
enter
sub
divl
push
mov
lret
adc
adc
adc
imul
test
xor
popa
push
pop
sub
lds
pop
outsl
jge
pop
dec
or
in
ss
push
sub
stos
jg
sub
gs
sub
shrl
fldenv
push
fcompl
xchg
cs
sbb
out
loope
mov
inc
dec
inc
xchg
add
pop
lods
xor
lcall
icebp
movsb
arpl
or
addb
ljmp
lahf
testb
stos
mov
and
out
int
mov
sub
mov
data16
xchg
fwait
pop
rorb
fidivrl
sub
bound
ss
adc
cmp
rcr
mov
mov
mov
fstpt
push
scas
mov
ss
pop
add
or
sbb
mov
xor
loop
xchg
stos
test
add
testb
mov
mov
test
mov
cli
push
pop
mov
inc
mov
sbb
inc
loope
pusha
jae
jge
dec
shrl
mov
sbb
scas
push
jo
adc
mov
inc
inc
test
fiadds
sub
dec
fnstsw
pusha
in
pop
gs
sub
push
rcll
fadds
jg
cmpsl
inc
mov
test
adc
loopne
cmp
test
push
or
shlb
scas
push
mov
shll
mov
jp
stos
loope
adc
jge
add
sbbb
data16
xchg
sub
adc
dec
push
dec
jmp
sti
rorb
test
clc
sub
lods
loop
push
mov
movsb
shll
ret
addr16
sub
and
or
gs
sbb
mov
movsb
and
shlb
inc
fcomp
push
inc
test
jae
jmp
imul
incb
or
mov
push
mov
into
movsb
mov
push
cmp
mov
and
das
inc
add
out
inc
dec
std
add
in
xchg
out
mov
or
inc
test
stos
sub
idivl
xor
clc
mov
sbb
rol
sbb
negb
push
stos
lods
push
mov
xor
push
stc
mov
cmp
sbb
xchg
jl
mov
sbb
pop
xor
pop
fldt
push
adc
jo
jg
sbb
xor
xchg
shlb
std
mov
ret
ret
jmp
out
lret
push
mov
dec
repnz
out
pop
test
xor
mov
push
fisubl
mov
mov
jle
jmp
mov
push
or
in
test
stos
test
cmp
pop
xorb
pop
xchg
aam
xor
in
stc
imul
push
xor
mov
stos
mov
xchg
test
push
movsl
jo
divl
xlat
loope
adc
enter
idiv
js
popa
cmp
xor
les
fcmovnbe
outsl
add
push
lcall
movsb
add
mov
cmp
js
movsl
mov
fisubs
leave
div
inc
sti
clc
sub
pop
sbb
jmp
es
std
mov
push
push
scas
mov
pop
and
out
jle
sbb
cltd
mov
cmp
cmp
fstl
mov
test
scas
and
fsts
movsl
push
and
mov
fldenv
iret
add
xchg
jnp
push
dec
jg
jge
fs
pop
arpl
cmp
add
and
out
sbbb
mov
xchg
jp
fimuls
repnz
push
mov
sahf
xchg
jge
cmp
js
jecxz
inc
shll
or
daa
jns
add
or
push
rcrl
popf
push
adc
push
icebp
leave
xor
insb
out
jno
dec
sti
ss
scas
sbb
sbb
into
sbb
enter
inc
loop
test
and
pop
inc
shr
jne
mov
mov
or
popa
add
mov
mov
cmp
pusha
mov
negl
or
inc
insl
push
sbbl
mov
sub
adc
sub
add
nop
and
call
xor
and
sub
mov
data16
ret
int
scas
pop
push
add
lods
lods
adc
ljmp
lret
mov
enter
shr
jns
fidivrs
sub
jae
add
das
fildl
mov
jl
or
mov
dec
mov
hlt
push
jmp
cmp
aad
cwtl
rclb
jns
xchg
js
mov
jecxz
addr16
sbb
movsb
mov
pop
jmp
das
mov
lods
test
fimuls
daa
xchg
arpl
xchg
dec
jae
jno
jb
je
mov
int3
add
cmpsb
nop
push
in
repnz
lcall
and
pop
out
fsubl
mov
fxch
pushf
test
mov
dec
sarl
into
ja
lods
ret
pop
mov
das
iret
mov
jbe
stos
or
mov
sub
rcrl
xlat
fsts
and
dec
popa
add
inc
jp
sbb
fucomp
dec
pop
ds
lea
pop
xorb
xchg
scas
mov
push
sbb
bound
sub
int3
sbb
in
out
inc
movsl
mov
and
jp
adc
jmp
ja
cwtl
pop
mov
jl
sbb
jg
out
jge
ja
loopne
mov
dec
jne
jae
std
push
dec
fcmove
aad
idivb
jae
fcompl
out
add
xor
push
xchg
and
sbb
jae
or
add
stc
jle
dec
xor
pusha
mov
jo
mov
pop
cmc
xchg
in
pop
in
fcomps
or
add
jnp
outsl
xchg
jl
push
push
scas
mov
push
pop
sub
mov
or
int3
aam
shl
xchg
jp
dec
rcrb
cmp
or
loop
jmp
xchg
jbe
test
loope
and
inc
sub
sub
mov
sub
pop
pop
lcall
jb
imul
jno
stos
adc
jecxz
out
outsb
icebp
xchg
pop
mov
jne
div
and
es
orl
lret
mov
clc
push
sti
mov
fisubrl
scas
stos
cmp
mov
or
fstps
jb
sub
dec
insb
movq
lcall
adc
mov
lcall
and
mov
mov
movsb
or
dec
sub
mov
inc
xlat
mov
out
or
cmp
in
into
pop
push
les
dec
js
dec
push
inc
add
dec
sbb
xor
sti
xchg
pop
push
mov
xchg
jno
sbb
push
sbb
pop
push
inc
cmc
xorb
insb
dec
mov
hlt
pop
adc
sbb
xchg
mov
sbb
out
icebp
das
jb
mov
stc
fistps
lcall
cmp
ljmp
jne
jp
andb
mov
mov
insl
and
es
inc
movsl
icebp
dec
bound
inc
arpl
mov
or
mov
imul
cltd
stos
push
mov
js
mov
outsl
fisubrl
xor
divl
xlat
jo
test
test
jl
fsubl
lock
cmpsb
cmp
sbb
pushf
bound
stc
or
mov
push
push
nop
and
ss
jecxz
dec
adc
sbb
fdivl
xchg
adc
test
xchg
iret
mov
out
fiadds
cmp
xor
adc
cmp
lods
and
jnp
int
orl
decl
mov
and
sub
lea
dec
ret
sub
sahf
xor
rorl
mov
or
in
push
cmp
lret
mov
xchg
dec
ret
psrlq
jb
insl
popa
mov
aam
sub
into
mov
movsb
adc
push
cmp
xchg
inc
cmp
push
iret
hlt
test
stos
pop
add
cltd
xchg
xchg
jno
lret
cwtl
pop
and
jp
add
jmp
jg
addr16
inc
inc
std
daa
push
pop
out
testl
sbb
fcmovb
imul
shlb
xlat
dec
mov
mov
adc
out
xchg
notb
or
xchg
hlt
movsl
ss
sub
dec
outsb
sbb
pusha
sub
sub
fcomps
test
sbb
int3
sbb
insl
scas
jmp
out
out
mov
iret
sahf
push
mov
mov
icebp
inc
ret
lods
add
mov
jp
loopne
mov
popa
cli
mov
inc
dec
mov
dec
loop
lahf
jmp
push
cmpsl
gs
das
pop
fwait
std
adc
adc
pop
inc
ret
adc
and
jb
push
lods
popa
adc
cmp
mov
fnstenv
cmp
ret
mov
pop
in
jb,pt
insb
cmp
xchg
add
mov
fimull
ja
inc
arpl
aas
loopne
mov
mov
mov
adc
mov
clc
add
adc
pop
sti
idivb
js
movb
pop
out
mov
shll
rcl
xchg
adc
shrl
dec
xchg
fistpl
loop
pop
fs
iret
fcoml
mov
push
mov
popa
adc
lcall
cmp
out
pop
inc
fimuls
push
dec
out
sahf
repnz
dec
push
outsb
jb,pn
xchg
push
push
adc
adc
fwait
or
insl
test
dec
or
xchg
mov
movsl
adc
dec
cltd
ds
mov
nop
jb
cwtl
adc
mov
mov
jle
addr16
pop
stos
btr
cmpsb
add
stc
imul
push
or
adc
pushf
js
mov
push
inc
fsub
pop
xor
aam
xchg
mov
jecxz
mov
popl
rep
ljmp
cmp
cmp
mov
outsb
cmp
cltd
lods
mov
cmpsl
daa
fisttpll
jmp
fucomp
lods
mov
std
pop
loop
aas
pop
push
xor
clc
xchg
repnz
shl
xchg
pop
push
jne
add
dec
dec
sub
or
dec
mov
nop
push
bnd
pushf
aam
in
insl
mov
andl
xchg
sbb
or
arpl
pop
cmpps
test
das
mov
out
jb
out
in
clc
mov
fsubl
mov
pop
aad
mov
mov
ds
ss
or
aaa
in
cmc
stos
jne
imull
loope
cs
fstl
sub
gs
pusha
or
into
push
sbb
pop
mov
sbb
gs
popf
mov
pop
cwtl
iret
and
aaa
ret
push
or
stc
xchg
mov
xor
test
mov
stc
xor
xor
add
xlat
in
fdivs
jl
stos
dec
jns
inc
cmpsb
fwait
scas
pop
adc
adc
pop
rcrl
xchg
addb
jp
sub
sbb
fidivl
and
aas
jnp
fwait
push
and
es
fld
pushf
dec
pop
cmp
inc
fwait
xchg
icebp
mov
or
loopne
jnp
pop
sub
test
lar
hlt
stos
mov
xor
mov
jg
push
cmpl
loope
cmpsl
leave
js
in
mov
sub
ret
and
aam
in
lcall
push
test
gs
lods
gs
sub
pop
sub
cltd
pop
mov
inc
aas
inc
shlb
cwtl
stos
jnp
rolb
mov
mov
push
movsb
arpl
push
pop
push
mov
xchg
repz
jecxz
jae
mov
or
adc
dec
mov
lea
scas
mov
xlat
cmpsb
inc
pusha
sti
mov
push
cmp
sub
in
or
or
or
sub
inc
mov
outsb
or
dec
adc
push
bound
lods
mov
jmp
or
sub
int
or
pop
lods
cmp
xsave
sbb
sub
scas
mov
popf
test
int
mov
into
std
inc
popa
ret
addr16
xchg
jl
imul
push
movsl
or
call
cld
ljmp
pop
jecxz
push
or
insl
je
inc
dec
ss
add
push
sub
mov
push
and
pop
pop
orl
or
sub
cmp
push
dec
mov
mov
fdivrp
xchg
mov
orb
mov
and
cmp
add
inc
in
insl
lds
aam
jne
mov
push
nop
repnz
cwtl
pop
mov
and
insb
shlb
mov
push
lret
movsb
push
rcl
jge
ret
pop
cmp
adc
and
inc
push
shrl
ret
cmpsb
mov
hlt
add
js
cwtl
sbb
mov
add
cmc
push
repnz
fiadds
lods
sti
mov
fcomp
adc
loop
and
icebp
inc
into
add
fsubl
cmp
repz
in
pop
arpl
not
in
and
mov
nop
or
push
and
scas
cwtl
popf
ret
sub
sahf
cs
mov
les
test
aas
std
cmp
int3
push
jns
cmpsl
jne
push
outsb
cmpsl
movsb
repnz
jmp
push
pop
loop
dec
xor
mov
pop
sahf
fnstcw
xchg
push
jne
ja
xchg
daa
shrb
jle
push
outsb
pusha
pushf
jb
fmulp
fcoml
push
and
push
arpl
dec
loope
mov
cmp
iret
xchg
sub
push
clc
mov
mov
or
pop
fdivs
test
das
jle
lea
push
pop
out
jg
jp
sbb
popa
adcb
lret
call
das
pop
jmp
ljmp
stos
clc
or
scas
daa
mov
add
jo
mov
xor
pop
xchg
or
or
push
mov
lcall
dec
sub
push
out
pusha
sub
cmp
cwtl
mov
inc
aas
push
shll
sti
testl
cwtl
imul
or
jg
xor
mov
xchg
inc
in
test
mov
sti
mov
pop
and
fiaddl
mov
cmpsb
daa
sbb
imul
fmul
dec
adc
push
cmp
std
sbb
pop
jp
pop
aam
mov
shrl
loope
leave
dec
sbb
sbb
subl
stos
and
mov
cmpsb
mov
stos
orb
or
mov
mull
mulb
mov
xchg
jle
movsb
cltd
or
add
add
adc
testl
push
push
xchg
jb
test
pop
mov
int3
int
cmp
xor
push
adc
std
inc
loope
adc
fisubrs
cmp
jae
popf
outsb
ret
stc
scas
mov
jge
test
adcl
fsubrl
pop
pusha
add
ss
shll
enter
and
pop
hlt
ja
fimull
aaa
jge
lfs
mov
fs
movlps
mov
dec
xor
insb
loope
stc
cmpsl
fdivrl
and
sarb
sbb
jne
std
jge
xor
mov
mov
in
or
lods
pushf
insb
ds
in
icebp
aas
pop
fidivl
neg
mov
pop
ja
imull
lock
subb
mov
and
cmp
js
mov
mov
call
insb
fucomip
pop
mov
popa
mov
fisubrl
push
push
xor
mov
pop
sbb
sub
pop
push
pop
or
clc
fsts
push
or
dec
cmp
xor
add
enter
mov
outsl
cmp
inc
jns
cmp
xchg
out
into
jno
pop
adc
sub
xchg
test
jbe
cmp
mov
jns
out
xor
lods
inc
dec
mov
xchg
ds
scas
push
xchg
scas
je
sub
mov
sub
jmp
or
inc
dec
fcomps
data16
fwait
xor
aas
cmpsb
jge
xor
mov
jp
aam
pop
inc
jnp
out
out
shlb
xchg
fsubrl
in
jle
sbb
pop
pop
inc
ja
iret
loop
and
dec
jnp
lcall
mov
add
movsb
fwait
test
cmp
std
xchg
cmpsl
test
je
and
adc
sub
dec
mov
lret
pop
aam
fnstcw
mov
mov
iret
cs
adc
jne
or
js
or
sub
scas
insl
andl
or
add
seta
outsl
xor
pop
scas
addb
mov
sbb
sub
shrb
sbb
xlat
ficoml
inc
mov
sub
add
jbe
or
aam
insb
in
or
mov
pop
sub
push
and
movsl
and
int3
scas
stos
jge
pop
aaa
aaa
jne
lods
fstl
push
sub
leave
lods
pop
xchg
pop
mov
jl
rcll
fsubrp
es
shlb
cmp
mov
rcrl
pop
into
js
cmpsb
jnp
das
add
and
xchg
aad
or
push
fdivrs
sahf
cmc
cs
inc
cmpsl
xchg
pop
rorl
or
inc
jno
daa
outsl
mov
jge
pop
add
cli
inc
outsb
dec
pop
mov
ss
or
cmp
mov
mov
aaa
push
in
in
mov
aas
add
jnp
inc
mov
push
sub
add
and
cmp
or
or
inc
lea
jle
xchg
xchg
lahf
jle
mov
mov
cltd
pop
add
cmp
rolb
mov
adc
scas
out
sahf
or
ret
mov
rcrb
fiaddl
addl
es
mov
popa
pop
sti
cmc
pushf
cmp
jns
jmp
outsb
and
xchg
test
pop
mov
add
dec
repnz
push
jb
or
loopne
ss
test
sub
loop
cmp
adc
js
loop
ds
xor
or
xchg
inc
cli
mov
xchg
iret
adc
cltd
gs
movsl
mov
dec
jno
out
jle
outsl
ret
push
lea
mov
xchg
dec
mov
push
les
jnp
mov
loope
inc
sahf
sub
sbb
jae
cltd
inc
and
pop
scas
sahf
cmp
cmp
dec
scas
ljmp
mov
icebp
push
cld
scas
cwtl
shrb
nop
out
pop
pop
stos
push
dec
ret
xor
ds
push
subw
repz
push
jp
cmc
in
cmp
jle
cmpsb
push
pop
jp
inc
jmp
or
aam
xchg
pop
mov
sbb
push
test
imul
jge
mov
mov
inc
push
push
and
adc
pop
mov
cmp
sub
push
enter
loope
movsb
mov
and
jmp
ret
movsl
mov
mov
filds
jmp
mov
add
adc
jns
mov
push
pop
inc
and
cmp
jne
sbb
inc
xor
imulb
push
daa
shrb
inc
jle
and
sbb
mov
push
shrl
or
and
xchg
out
ret
into
enter
push
or
push
push
sbb
cmp
and
daa
adc
dec
inc
es
lcall
xor
inc
fnsave
xor
pop
push
gs
lcall
pusha
je
popf
xor
adc
js
out
cwtl
fists
into
sbb
sahf
xor
xchg
dec
lret
rolb
sub
dec
and
pop
mov
daa
js
shrl
xchg
pop
rclb
jmp
subb
loop
fnstcw
sahf
dec
mov
cli
imul
push
cmp
mov
mov
test
add
mov
int
lret
or
and
jg
mov
ja
es
test
sbb
icebp
mov
sbb
xchg
lret
insb
dec
xchg
mov
ror
in
sahf
lea
adc
push
aad
imul
mov
hlt
inc
or
addb
fimull
mov
or
mov
inc
test
or
add
pop
insl
dec
testb
and
or
mov
pop
dec
push
fiadds
adc
jae
notl
out
into
sbb
dec
lahf
mov
xchg
inc
and
sti
mov
lret
mov
imul
mov
sbb
pop
lea
lahf
add
mov
xor
mov
jnp
or
add
mov
enter
hlt
pop
xchg
adc
mov
dec
leave
ds
packuswb
add
mov
xlat
leave
fwait
incl
sub
jmp
mov
call
out
in
int3
sbb
ret
aad
jns
mov
or
xor
into
xchg
lds
add
mov
cmpsb
clc
inc
push
add
shrl
aas
fwait
andb
scas
push
dec
pushf
enter
or
shrb
ret
les
mov
loopne
inc
scas
mov
xchg
fimull
jp
xchg
movsl
shrl
ds
jnp
cld
mov
mov
mov
jnp
ss
inc
mov
push
pop
push
pop
scas
popa
lahf
or
movsb
fsubrl
fucom
je
xchg
das
pop
insl
mov
cmpsb
push
cmp
int
jmp
lods
fdivl
cmpsl
xor
mov
daa
or
jb
in
sarl
cmp
int
pusha
pop
sbb
aam
push
sbb
fcomps
dec
in
cwtl
sbb
or
fnsave
cmc
cmpsb
mov
add
xchg
je
fdivs
insb
lahf
int
dec
xor
sahf
mov
sbb
jae
dec
dec
fisubrs
push
mov
and
inc
sbb
sub
xchg
xchg
popf
lods
nop
bound
cmp
das
cmp
jecxz
out
inc
fs
movsl
xlat
mov
mov
das
xor
outsl
sub
or
push
outsl
cmp
cmp
cmp
ret
ret
cltd
in
hlt
rcrl
push
adc
mov
dec
ret
addr16
inc
push
push
adc
cmpsb
rorl
push
hlt
jbe
stc
adc
repnz
nop
pop
loopne
in
xchg
int3
push
adc
jae
mov
mov
adc
or
fwait
mulb
jne
aaa
insb
pusha
out
mull
or
push
cmp
lds
mov
mov
in
pop
sub
xor
xor
je
xlat
sub
xor
test
jnp
fstl
mov
pop
ret
sbb
xchg
cs
sbb
cwtd
out
loopne
add
jae
lahf
aam
rorb
inc
and
stos
mov
fwait
fs
xchg
pusha
in
cmp
or
outsb
pop
mov
xchg
cwtl
push
or
gs
sub
insb
mov
dec
pop
inc
pop
add
mov
aam
push
and
and
andb
mov
jnp
out
adcb
loop
lcall
ja,pt
arpl
cli
popf
idivb
mov
push
sub
jle
out
sub
fucom
cmp
adc
fistps
mov
leave
sti
icebp
out
call
cmc
sub
ljmp
sub
cmp
enter
jae
jmp
inc
pop
iret
insb
icebp
mov
cmp
and
inc
les
add
xchg
fwait
push
scas
icebp
repnz
adc
xchg
and
add
push
cmpsl
pop
movsb
ror
jo
push
mov
mov
sbb
pop
and
sub
xchg
loopne
and
push
or
notl
imulb
xchg
cli
in
push
cld
in
bnd
pop
pop
sar
or
cmp
out
jp
jae
movd
popa
int
out
hlt
rorl
dec
mov
xor
dec
mov
popa
push
xchg
pop
mov
mov
leave
movsl
mov
pop
inc
sub
cli
int3
push
dec
inc
cmp
loope
fcompl
fsubp
lret
jo
enter
add
add
loope
sbb
adc
pop
mov
repnz
push
mov
movsb
movsb
jmp
fcomps
mov
cmp
and
pop
jnp
adc
cmp
in
or
push
insb
lahf
sahf
cli
mul
call
repnz
pop
shl
xchg
test
mov
scas
adc
fildll
push
sahf
dec
mov
mov
jmp
jl
inc
out
movsb
xchg
mov
inc
fisttpl
sbbl
lea
and
sti
add
jle
jno
in
aam
xor
bnd
adc
mov
jnp
sar
or
sbb
mov
pop
rcrl
test
cli
pop
into
ret
daa
inc
push
insl
mov
and
icebp
jmp
ljmp
pop
xchg
test
mov
cwtl
mov
sub
mov
mov
in
fxch
jbe
add
ljmp
aaa
imul
mov
dec
sub
cmp
xor
cli
test
lret
dec
test
inc
mov
fcmovb
jae
je
xchg
xchg
popa
pop
mov
movsb
pusha
ljmp
pushf
lods
out
jl
and
xor
imul
cmp
sti
sbb
ja
push
arpl
xchg
add
adc
xchg
call
push
or
pop
test
sahf
pop
and
cwtl
lahf
add
mov
enter
repz
cmpb
ds
aas
out
add
mov
mov
xchg
pop
jmp
inc
pop
repnz
mov
xor
sahf
add
add
lock
mov
shll
fcomi
lock
cmp
pushl
pop
and
int
push
add
cmp
or
adc
inc
in
popa
mov
aad
jnp
push
in
in
cmpsl
push
addb
cmp
push
add
push
push
push
dec
cmpsb
out
test
cli
adc
fnstcw
je
shl
outsb
push
cmp
repz
aas
fisttpl
loope
cld
and
mov
test
pop
mov
push
push
mov
push
sub
aas
sub
xchg
dec
rcrl
and
testl
dec
test
push
push
pushf
xor
shl
call
or
cmpsl
fmuls
sub
into
xchg
stos
sbb
xchg
inc
xchg
and
cld
fsubrs
xorb
rdtsc
cli
cmc
mov
mov
icebp
pop
stc
xor
push
ss
roll
sub
test
fld
mov
xchg
pusha
ret
mov
sbb
sbb
mov
push
psubb
push
dec
jb
sbb
bound
mov
push
add
scas
loopne
cmp
sub
fidivrl
negl
dec
add
mov
cwtl
repnz
push
sbb
cmp
movq
or
mov
xchg
jl
test
mov
xchg
lahf
lods
jmp
push
and
addr16
faddl
ljmp
xor
repz
nop
sti
sti
dec
mov
pushf
or
lret
les
loopne
and
xchg
adc
sbb
add
xchg
adc
add
ss
enter
mov
pop
into
mov
data16
mov
adc
xchg
jge
loop
js
insl
mov
xor
xchg
aas
push
dec
xor
js
sub
sti
pop
movsb
xchg
outsl
out
cmp
bound
push
push
scas
dec
notb
add
jae
fldl
jo
in
notb
fwait
shr
jbe
test
ret
fimull
sarl
lea
je
cmpsl
ret
sti
adc
loopne
dec
sbb
mov
mov
adc
jns
in
dec
mov
fstl
or
adc
in
or
mov
jl
mov
jb
pop
xchg
and
mov
cmp
fadds
mov
pusha
xor
push
mov
mov
adc
ret
pop
cmpsb
and
push
lcall
fdivrl
sub
cmp
dec
test
gs
cmp
loop
adc
and
lcall
pop
adc
add
in
scas
add
outsb
inc
shrl
push
xchg
xchg
iret
test
sbb
push
pop
test
jb
inc
fsubrl
mov
in
test
pop
rolb
inc
lock
sbbb
or
std
inc
inc
xor
xor
lret
pop
hlt
mov
dec
pop
pushf
bound
lods
cli
jnp
pop
mov
xchg
insl
push
je
dec
testl
pop
ja
jnp
cmpsl
xor
pause
adcb
cmp
mov
stc
popa
rolb
cli
psubusw
fwait
push
sahf
add
out
negb
repnz
rolb
and
js
push
push
cmpsl
jl
inc
push
pushf
aam
pusha
ja
xchg
pusha
leave
das
into
je
rorl
adc
call
fists
push
sub
or
jp
xor
jno
flds
jl
or
xor
out
push
xchg
xor
das
inc
andb
lret
pop
inc
lock
leave
fcmovnb
adc
jmp
sarl
jnp
fcomp
fcomps
leave
fldl
out
adc
mov
inc
in
mov
sarl
shll
lds
sub
or
pop
addb
aas
and
and
gs
nop
stc
pop
pop
mov
icebp
mov
push
jge
pop
sahf
lret
shll
push
xchg
test
scas
push
sub
cmp
mov
test
fcom
mov
in
xchg
or
lock
push
lret
mov
inc
push
ljmp
mov
mov
aas
ret
les
fcoml
outsl
jae
fnstsw
xchg
xchg
divb
xor
mov
xor
adc
cmp
adc
push
push
loop
ljmp
aam
pop
ret
xor
push
lcall
mov
jne
pushl
jae
adc
push
pop
add
fsubr
loop
cld
add
jbe
add
outsl
insl
iret
imul
rclb
std
sbb
inc
inc
mov
ljmp
cs
cmp
in
and
fisttpl
push
std
pop
mov
subl
sahf
sbb
loope
fdivp
xor
sub
and
cld
cmp
adc
repz
jnp
pop
jmp
repnz
arpl
jae
lcall
inc
clc
fcomi
fs
iret
or
scas
scas
popf
cli
push
add
add
mov
pop
push
xchg
mov
testl
adc
pop
sub
into
adc
cwtl
sbb
gs
scas
movsl
lea
fldt
movsb
push
scas
test
push
mov
loope
inc
fadd
ret
xor
out
push
pusha
mov
in
xorl
adc
push
push
push
push
inc
sub
enter
sub
pop
cmp
adc
out
clc
pop
add
sbb
test
and
jnp
out
xor
mov
sbb
push
mov
and
pop
mov
sub
outsl
repz
shlb
mov
and
mov
jbe
fadd
out
jmp
mov
xchg
lcall
daa
and
mov
adc
pusha
lods
jl
mov
ret
or
pusha
into
mov
cmpsb
jae
jae
pop
mov
fldcw
mov
mov
lret
push
xor
and
jecxz
pop
arpl
push
sahf
xchg
je
mov
sbb
mov
xor
jecxz
sahf
and
loop
lret
ret
push
or
leave
test
mov
orb
bound
orb
out
add
push
sbb
xor
inc
or
adc
stos
push
pop
xor
mov
repnz
mov
aaa
xor
mov
outsb
rcl
je
or
aad
aaa
cltd
pop
mov
pop
ss
sbb
test
clc
lods
cs
sbbb
iret
mov
rcr
cwtl
adc
fldt
insl
fcomps
mov
cwtl
xchg
enter
mov
and
shl
out
aas
ss
pop
stos
add
mov
outsl
mov
xchg
test
mov
lret
pop
cli
inc
push
sub
int3
or
lods
es
int
mov
in
roll
dec
adc
jp
lret
pop
pop
adc
xchg
jnp
in
rorb
insb
sub
push
xchg
jg
jmp
roll
insl
xorb
jne
mov
push
adc
cmp
inc
cmp
arpl
dec
test
lcall
into
sub
outsb
sub
mov
cltd
add
ja
loop
mov
fcmovu
in
dec
ja
mov
sbb
adc
in
mov
and
sub
jl
adcb
dec
adcb
xchg
or
and
add
jg
jl
sbb
xor
and
inc
clc
sbb
mov
fdivs
sti
xchg
sub
jle
addr16
dec
dec
mov
sti
sub
xor
inc
dec
jmp
mov
adc
ss
xor
fidivrl
pop
pushf
loopne
jmp
cmp
daa
cwtl
loop
and
sub
jae
sub
ja
stos
xor
daa
mov
cli
sti
xchg
leave
cmp
lock
xlat
inc
je
push
add
test
pop
dec
and
popa
scas
sub
fildl
inc
daa
dec
das
mov
sbb
adc
std
jbe
xchg
and
scas
xchg
jb
jb
xorl
popf
lea
enter
ret
inc
stos
mov
push
cmp
pop
mov
mov
mov
mov
fsubl
xchg
and
scas
xchg
aas
repz
dec
test
sti
pop
je
pushf
sub
mov
lock
mov
stc
movsl
test
fstpl
adc
das
mov
push
sbb
out
cmp
pushl
out
pop
push
add
jno
jno
test
pop
xchg
inc
mov
jmp
jmp
pcmpeqd
pop
stos
mov
add
in
cmpsb
pop
xor
xchg
and
adc
ror
add
pop
dec
adc
std
cmpsl
outsb
lret
jecxz
sbb
pop
push
addr16
out
xor
call
mov
ja,pt
fdivrs
shll
cs
out
fwait
int3
mov
dec
movsb
mov
xchg
dec
scas
sub
mov
fcoms
stc
mov
jno
pop
xor
xchg
cmp
mov
sahf
sub
fisttps
adc
sub
xor
iret
fcompl
sub
xchg
dec
dec
rclb
dec
mov
adc
ja
mov
add
loope
test
push
iret
dec
push
or
repz
xchg
loopne
addr16
arpl
pop
dec
inc
das
out
fwait
in
mov
dec
dec
xor
pop
add
pushf
shlb
outsl
inc
push
sub
repnz
fwait
dec
andl
outsl
or
in
ja
test
sub
jp
and
add
add
call
stos
ss
mov
repz
push
mov
arpl
jg
aaa
xor
and
and
gs
repz
sub
mov
mov
add
cmp
inc
xorb
pop
mov
fs
outsb
int
and
push
pop
jp
aad
clc
mov
data16
dec
xor
jo
cmp
out
mov
xchg
andl
out
data16
dec
sti
sub
mov
pop
pop
ss
jle
mov
push
and
fisttpll
bt
mov
sbb
movsl
sub
inc
xchg
icebp
aaa
sti
adc
mov
mov
and
nop
mov
inc
jg
xchg
test
stos
repz
fcom
gs
mov
shrb
orb
cwtl
hlt
dec
cwtl
add
rolb
cmpsl
std
and
mov
testl
aad
jecxz
inc
dec
sub
leave
mov
mov
mov
jae
xchg
cmp
aad
clc
push
popl
sub
dec
or
call
mov
inc
cmp
dec
imul
sbb
int
ja
xor
js
inc
fwait
cmc
push
leave
fcmovbe
scas
in
pop
fsubl
movsl
sub
mov
je
jno
mov
repz
push
add
or
stc
xor
out
mov
sub
sbb
jo
add
loopne
lock
jl
es
into
ja
in
mov
js
jnp
mov
and
xchg
jns
ret
xor
loopne
fildll
or
mov
subb
aad
push
aad
mov
dec
scas
lret
gs
scas
inc
jbe
lret
rcr
addr16
dec
mov
pusha
push
xchg
adc
sbb
mull
sbb
loopne
movsl
pop
cwtl
mov
sub
adc
shrl
push
mov
rcrb
movsb
clc
ljmp
pusha
movsl
sub
outsb
pop
mov
movsb
fcompl
je
loope
popf
inc
and
xor
mov
arpl
dec
sub
push
cwtl
icebp
imul
and
cmc
cmp
adc
bound
fbstp
push
pop
sub
push
sbb
leave
mov
lret
cmc
cltd
movsl
adc
in
add
in
stos
ret
mov
jns
fisubs
popa
nop
fcompl
popa
pushf
cs
cmp
mov
pop
inc
xor
cmc
xchg
inc
pop
les
sub
jecxz
adc
jmp
das
xchg
sahf
adc
and
xor
cmpsb
adc
mov
xchg
dec
lret
and
lret
pop
pop
rcll
loop
cmpsl
mov
jne
mov
cmp
lds
xlat
repz
and
xlat
push
lret
movsb
xlat
pop
jo
stos
dec
stos
add
adc
js
push
push
icebp
lods
cmpsl
cmpsl
test
shll
ljmp
mov
mov
or
add
push
fcomps
inc
and
push
repz
or
sub
inc
mov
movsb
sbb
cmpl
mov
mov
pop
push
mov
outsl
mov
xchg
ret
aas
insl
fnstsw
cwtl
shll
xchg
jbe
divb
xlat
push
cltd
cmc
mov
mov
push
push
insb
sub
outsl
mov
add
ret
ss
push
xor
mov
mov
arpl
and
push
lret
push
icebp
retw
dec
push
jg
int3
lahf
daa
das
hlt
xor
jge
test
bound
loope
jmp
add
pop
pop
jnp
mov
mov
and
xor
mov
mov
std
repnz
cmc
sub
push
lahf
mov
dec
pop
cwtl
scas
fwait
lret
xor
dec
pop
pop
adc
adc
fs
mov
leave
popa
push
pop
cmpsb
cmp
sbbl
add
inc
mov
mov
mov
into
pushf
mov
and
imul
xchg
faddp
add
stos
sbb
jl
jne
inc
sub
xchg
ret
cli
adc
dec
push
inc
addr16
jmp
and
and
popf
out
daa
out
es
pop
lcall
in
sbb
jbe
iret
ret
loopne
mov
addr16
xlat
and
adc
fisttpl
mov
shrb
jb
or
pushf
or
adc
mov
jecxz
repnz
or
xchg
xchg
icebp
add
cmc
mov
fildll
inc
jno
cmp
cmp
mov
cmpsl
jne
and
cltd
pop
call
lods
dec
daa
call
bound
leave
pop
jnp,pn
jae
push
xlat
jmp
into
mov
hlt
bswap
inc
push
jno
clc
sbb
pop
xor
sub
cltd
adc
xchg
aad
mov
dec
push
ljmp
daa
add
loopne
push
mov
pusha
jl
sub
outsl
dec
clc
inc
push
stos
cmpsb
ss
inc
sub
xchg
sahf
imul
push
push
xor
aas
insb
and
sub
sahf
iret
sbb
mov
mov
push
lea
dec
pop
pop
jle
mov
cltd
repnz
imul
pushf
popf
aam
sbb
inc
cmp
cmpsl
sub
jb
push
and
aaa
xor
jnp
bound
xor
jge
push
nop
aam
out
fbstp
mov
shr
mov
popf
sub
stos
mov
push
jl
add
jecxz
cmp
sub
inc
push
icebp
cli
imul
push
cwtl
mov
and
out
pop
aas
pop
push
and
aaa
dec
sbb
cmp
lds
pop
lahf
movsl
out
push
cwtl
sahf
movsb
jmp
rclb
adc
test
inc
push
ja
jmp
sarl
sub
cli
pop
in
mov
sub
jbe
imul
add
ficompl
push
xchg
mov
iret
xchg
pop
jp
mov
in
sbb
shr
int3
dec
mov
push
sbb
sub
call
add
rcr
pop
dec
jg
pop
scas
and
cmp
out
jo
or
out
ret
jae
mov
paddq
adc
adc
rorl
movsl
sbb
mov
push
cs
cltd
test
aaa
leave
or
shr
in
bound
add
inc
push
mov
push
imul
adc
or
pop
jb
dec
ljmp
lods
jmp
sub
stc
popl
inc
rcr
cmp
shrl
cmp
jns
gs
mov
sbb
push
cli
cld
cmp
mov
cmp
mov
fs
js
push
mov
mov
test
pop
adc
sti
addl
jmp
jle
inc
xor
dec
daa
push
ss
jg
loopne
aad
dec
fnstcw
mov
mov
sahf
jecxz
mov
add
or
sbb
test
pop
mov
ds
dec
ficoms
or
ljmp
inc
push
cmp
sbb
ret
lock
adc
xchg
imulb
aad
mov
test
mov
loop
popa
jne
mov
xor
divl
and
in
sti
movsb
idivl
add
sbb
addr16
and
or
imul
inc
add
and
pop
or
daa
stos
dec
sub
loopne
sti
mov
aam
sbb
mov
divb
or
lret
inc
sahf
sbb
push
fwait
and
cmpsl
mulb
mov
pop
cmp
sbb
xor
cmp
pushf
loop
xor
jmp
rcrb
js
gs
sets
push
lods
dec
je
or
pop
adc
mov
push
adc
dec
jne
pop
aad
ret
push
nop
lea
xchg
ret
arpl
movsb
cmpsl
xor
pop
cmp
test
ja
sub
cmp
test
adc
lcall
addr16
inc
add
lret
icebp
sahf
sbb
dec
push
xchg
shlb
mov
lret
or
xchg
and
shl
mov
fwait
jle
xor
ja
mov
push
repnz
sub
enter
sub
daa
jnp
minps
cmp
shr
push
movsb
test
cwtl
movsl
jae
xchg
cmp
lea
adc
outsb
pop
test
fstps
mov
mov
out
loope
in
sub
inc
xor
cld
xchg
adc
jmp
pop
jl
sbb
cli
lods
pop
daa
jp
dec
out
mov
inc
in
mov
notb
push
dec
jl
and
xor
aaa
and
mov
cwtl
stos
xor
das
enter
cli
xlat
push
lret
jecxz
aad
insl
cmp
dec
clc
pop
aas
mov
insl
push
jecxz
push
sub
add
sbb
push
ja
dec
std
daa
jb
mov
fmull
push
mov
cmpsb
pop
mov
jno
mov
inc
leave
cmpsb
inc
jo
out
scas
les
lods
addr16
cld
cwtl
movsl
mov
repz
add
je
add
and
mov
jb
mov
es
loope
jne
aad
lea
cld
and
dec
imul
iret
imul
inc
inc
les
decb
xorb
mov
sbb
daa
popf
bound
hlt
push
xchg
mov
sbb
sbb
fs
sub
sar
adc
shrb
jns
test
dec
jmp
pop
out
adc
ret
arpl
inc
pop
call
jns
lods
adc
outsb
aaa
cmc
mov
cmp
jg
outsb
cmc
xchg
shlb
lods
sub
popa
mov
ffreep
repz
add
leave
mov
popf
xor
nop
cmp
sarb
icebp
xor
pop
pop
test
fisubrs
loope
ss
imul
lret
xchg
into
push
mov
dec
cmp
mov
sbb
xchg
packssdw
iret
adc
mov
or
sbb
mov
xchg
add
mov
call
movsb
mov
sub
lds
push
bound
sub
mov
mov
inc
jp
test
xchg
in
pushf
adc
push
fwait
pushf
xchg
leave
es
pop
sti
outsl
fistl
stos
orl
jnp
add
ja
pop
xchg
push
fsubrl
cmpsl
pushf
mov
sbb
jg
adc
jnp
into
dec
mov
inc
inc
test
dec
lcall
insl
jne
or
mov
xlat
fimull
jmp
xchg
pop
loopne
xor
or
dec
notl
ds
or
stos
pop
dec
add
int3
sahf
xchg
add
and
adc
cmp
cmp
std
pop
mov
call
mov
outsl
or
xchg
and
mov
enter
pop
rclb
fists
test
jno
hlt
aam
ja
dec
ss
sti
add
and
sub
dec
mov
dec
sub
and
cmc
and
cld
pop
or
movsb
pop
imul
sbb
inc
pop
mov
mov
fcoml
cmp
pop
gs
in
into
mov
stos
mov
sbb
mov
call
dec
dec
cltd
sarl
adc
imulb
movsl
or
imul
into
aam
sbb
cld
popa
sbb
cmpsb
std
pop
repz
cld
fildll
add
icebp
insl
out
js
fsubs
jge
test
mov
mov
out
cltd
pop
cmp
inc
enter
dec
rorl
cmp
cwtl
stos
ret
jb
test
nop
xor
fs
jmp
jbe
cmp
bound
pop
repz
stc
fcoms
cli
sub
adc
iret
sub
sub
and
dec
mov
std
in
daa
adc
pop
sbb
dec
sub
mov
or
icebp
aad
add
cltd
rcrb
cmp
ja
jae
rcll
xchg
add
mov
ss
cmp
add
sub
xlat
mov
cmc
and
repnz
shl
cmp
sbb
stos
adc
push
inc
out
sbb
mull
push
xchg
sti
jge
jecxz
or
cmc
movsl
loop
pop
dec
mov
jne
repnz
bswap
lea
sahf
aad
xchg
div
xor
jns
mov
lock
push
cmp
fsubrs
js
or
xchg
cmp
loopne
push
gs
enter
loop
cmp
movl
mov
outsb
out
cli
outsl
out
and
adc
jno
out
mov
cmp
cli
adc
xchg
into
ja
lds
lret
iret
jp
pop
mull
out
out
inc
test
ss
movsl
mov
outsb
mov
pushf
out
insb
test
xor
cld
xchg
loopne,pn
cmp
jbe
test
testl
fsubr
sahf
lods
pop
ficoms
and
mov
repz
arpl
dec
mov
hlt
or
xor
int3
sahf
xor
adc
mov
test
xlat
mov
and
push
mov
mov
mov
xor
popf
push
cmp
jnp
shll
inc
jle
jns
sbb
mov
jne
push
cmp
es
adc
daa
mov
cmp
jns
mov
hlt
sahf
test
fwait
inc
and
aad
cli
test
arpl
or
mov
jp
call
adc
test
push
movsb
jmp
jno
inc
mov
cmpsl
and
les
sub
js
xor
adc
push
adc
test
push
cwtl
xchg
loopne
ret
inc
shlb
repz
mov
in
or
daa
jno
leave
cs
aas
xchg
js
push
out
dec
enter
inc
cmc
fnstenv
mov
mov
mov
test
mov
sub
lret
shlb
mov
add
cmpsb
repnz
shlb
sarl
xor
stc
shl
dec
inc
jp
movsl
jne
cmp
push
and
cmp
inc
fidivs
add
jge
and
sti
xchg
ja
dec
movsb
xor
xchg
leave
lods
inc
daa
mov
mov
jl
pop
or
fldt
fwait
lahf
js
sti
xor
ljmp
pop
add
jge
addl
xchg
into
dec
push
mov
mov
or
push
enter
clc
loope
mov
or
shl
test
mov
ret
sub
aad
aam
andb
mov
mov
lcall
out
and
fnstsw
insl
xchg
enter
mov
cld
out
and
inc
movsb
xchg
js
stos
mov
fsubrp
insb
leave
and
push
inc
fildl
fcmovnb
cmpb
std
or
aaa
pop
mov
jne
jns
pop
dec
ljmp
mov
ss
adc
ljmp
mov
push
bound
sub
clc
pop
ja
iret
fidivrl
mov
xchg
add
ret
sub
xchg
push
gs
adc
orl
pusha
out
imul
add
je
adc
mul
lcall
dec
std
gs
ljmp
mov
xor
decl
test
daa
fiaddl
cmpsb
mov
aad
ds
adcl
test
cltd
inc
push
out
push
pushf
push
iret
aam
pop
data16
dec
pop
push
orl
jp
lods
in
xchg
add
add
cli
mov
call
cmp
cmp
jnp
movb
rcr
mov
cmp
or
in
push
xor
aam
sub
rcr
stc
cmp
ljmp
mov
dec
xchg
addr16
jno
mov
add
stos
mov
stos
dec
or
fld
cwtl
xchg
add
movb
loop
add
arpl
enter
stos
cmp
mov
in
cmp
lods
scas
mov
cli
sbb
testl
inc
lock
das
out
cs
clc
sbb
daa
clc
fisttpll
ljmp
ja
iret
push
mov
or
jbe
orl
add
mov
out
pop
mov
xchg
cmp
adc
push
mov
sbb
mov
bound
lret
xchg
test
fbld
in
lds
sbb
add
adc
repz
fcomps
push
lret
lock
fnsetpm(287
ja
int3
cmp
cmpsb
je
loop
les
fcmovbe
sarb
inc
sub
fidivrl
ja
arpl
int
stos
pop
push
test
push
mov
enter
popf
mov
inc
mov
push
shll
cld
push
or
push
jecxz
roll
test
xchg
mov
xorb
dec
rorl
sbb
dec
jecxz
cmp
jle
mov
nop
lcall
adc
pushf
sub
pop
ljmp
jl
jns
iret
aad
adc
jmp
cmpsl
aam
xor
cmc
push
push
dec
jl
jle
sbb
ja
xor
add
out
jp
mov
std
shl
sar
push
adc
lea
cwtl
jg
insl
push
mov
mov
xor
sbb
xor
fwait
xorb
cmpsl
sbb
ljmp
mov
push
in
in
call
imull
lret
sub
out
or
and
xor
push
xchg
sub
subl
inc
repnz
scas
into
mov
push
aad
and
gs
outsb
sbb
xchg
aas
scas
popa
test
or
xor
outsb
decb
xor
nop
dec
lds
enter
jne
cmpsl
bound
xor
outsl
in
mov
lea
cmp
sbb
push
push
mov
add
sbb
testb
movsb
mov
stc
pop
jmp
fsubrl
movsb
inc
pop
in
push
dec
inc
pop
or
adc
jle
bound
jecxz
hlt
sub
and
adc
mov
add
xlat
sbb
jne
lods
fisttps
lret
fldl
int
xchg
inc
lea
dec
push
stc
inc
in
adc
rclb
cmp
in
xchg
pop
incb
xchg
pop
ss
pop
xchg
and
fs
sbb
cmc
outsl
jne
adc
cmp
mov
and
mov
xor
pop
add
ljmp
xor
sub
push
push
mov
push
ss
cmp
pop
xor
cmp
fwait
pop
mov
shrl
pop
lods
ljmp
lret
jne
pop
xor
gs
imul
or
or
js
mov
sub
popf
xchg
lahf
and
outsb
dec
imul
fdivs
lods
insb
pop
ja
cmp
into
pushl
add
test
gs
lahf
push
sub
out
ret
pop
push
arpl
add
lahf
pusha
mov
out
leave
sbb
notl
cmpb
xor
js
out
push
mov
popf
lret
fdivrs
fwait
jmp
mov
call
cmpb
pop
ret
sbb
call
jbe
movsl
lcall
fiaddl
dec
cmp
adc
paddsb
cmp
shrl
dec
pop
add
cmp
push
mov
and
xchg
mov
push
push
imul
mov
mov
mov
and
inc
fincstp
int3
xorb
adc
cs
jae
daa
roll
lret
jmp
test
jmp
negl
sbbb
mov
mov
cmp
cmp
mov
xchg
mov
mov
leave
and
mov
outsl
popf
push
jge
push
push
outsb
mov
sbb
out
cld
pandn
mov
enter
lock
xor
and
imull
test
mov
dec
out
int3
xor
fimull
pop
pop
hlt
and
lea
mov
shl
or
xor
stc
aad
sub
in
mov
and
mov
xor
cmpsl
ss
jmp
xor
fwait
arpl
fsubrs
aad
jl
jbe
cmc
sbb
mov
fs
es
inc
or
and
push
pop
inc
inc
jge
push
std
int3
mov
es
std
adc
aad
inc
out
into
sbb
sbb
pop
cmp
cmp
jno
mov
call
and
xchg
fisubl
inc
pop
divb
inc
xchg
out
sbb
and
pop
cltd
dec
cli
xchg
rcrl
xchg
sub
hlt
fwait
sbb
cmp
sub
mov
das
inc
shlb
cmp
push
or
xchg
cmc
mov
pop
test
mov
testl
sub
gs
out
push
test
xchg
push
movb
repnz
cmpl
xor
enter
les
jns
dec
out
xor
sub
scas
xchg
test
adc
aaa
lcall
cld
stos
fcmovbe
pop
xlat
cmp
into
pop
cmp
mov
pop
jle
push
cs
inc
insb
into
pop
xchg
int
xor
lods
es
jnp
jl
notl
sbb
mov
movsb
repz
into
or
mov
dec
out
add
dec
gs
std
inc
test
jb
add
or
iret
xchg
mov
mov
jl
or
mov
outsb
jne
shlb
xor
stos
popa
in
addr16
add
pop
xchg
lock
cld
pop
imul
add
or
fwait
cmc
std
repz
cmpsb
test
ja
jmp
sbb
inc
fucomip
mov
pop
into
push
pop
jg
or
mov
fsubp
mov
mov
adc
mov
add
dec
out
push
xor
arpl
lret
add
sbb
movsl
call
inc
adc
or
into
mov
jae
out
sbb
daa
int3
xor
sarl
inc
jmp
lret
adc
call
mulb
lret
pop
mov
xlat
mov
sbbl
push
mov
xorb
lea
dec
ja
push
xor
loopne
es
arpl
push
or
rcrb
mov
and
adc
movsb
adc
int
jmp
xchg
jns
mov
cmovns
and
into
mov
out
dec
adc
movsl
mov
sub
mov
mov
xchg
repz
stc
jb
add
in
mov
mov
loope
arpl
pop
push
inc
fwait
inc
ds
add
loope
xlat
pop
mov
add
aas
pxor
out
mov
jbe
aam
push
mov
outsb
rorl
cmp
jle
testb
lret
push
and
lcall
mov
mov
lock
and
push
dec
xor
jle
je
cmp
jae
add
dec
cmp
mov
jns
add
fisttps
add
inc
xor
mov
fstl
sub
dec
cwtl
xor
sarb
push
loop
ss
jns
or
add
and
fnstenv
or
jo
sbb
jmp
add
pop
inc
sbb
mov
enter
add
xchg
adc
pop
and
xor
cwtl
mov
orl
mov
sbb
pop
imul
les
jmp
adc
add
addr16
mov
xchg
fwait
sub
clc
lcall
lcall
add
jmp
push
inc
sbb
push
jo
loop
pop
insb
jno
push
xor
sub
test
and
inc
mov
or
adcb
push
or
pop
les
call
mov
cmp
or
sub
pop
xor
or
lea
imul
push
xchg
mov
mov
call
cltd
jg
leave
cwtl
fs
push
sahf
pop
sbb
add
mov
or
jmp
movsb
push
lretw
adc
test
into
sbb
and
jmp
mov
mov
adc
push
xchg
popa
cmpsl
int3
mov
pop
or
sub
mov
adc
in
ljmp
imul
cmp
movl
test
lock
add
mov
fldenv
lret
out
fdivrl
insl
jns
clc
cwtl
add
sahf
aaa
out
lds
jb
cmp
aad
mov
insb
sub
ja
jae
jno
imul
shlb
cmp
sub
sbb
pop
mov
pcmpgtw
mov
cmpb
mov
or
loopne
in
jo
fs
dec
lret
in
inc
pop
push
mov
leave
sub
mov
and
inc
xor
cwtl
repz
push
stos
lods
adc
ret
adc
inc
hlt
mov
and
fsubr
mov
mov
push
jmp
jno
mov
pushf
xchg
insl
inc
adc
inc
mov
arpl
inc
lret
cmpsl
lods
insb
mov
xor
cmp
mov
xchg
mov
lds
add
xchg
rolb
in
fistpll
inc
and
fidivl
stc
xchg
sub
mov
les
inc
filds
lds
pop
in
push
cmp
add
push
int
dec
fmull
pusha
aaa
pusha
ljmp
sub
pop
xchg
dec
xor
pop
sub
add
loop
rolb
push
inc
cmpsl
jmp
cltd
pop
test
jne
sub
xchg
adc
and
inc
sbb
mov
pop
std
in
add
testb
mov
ljmp
popf
xchg
or
push
or
mov
dec
daa
or
jbe
dec
xchg
pop
or
stos
fisubrs
lods
sbb
add
and
jb
fists
pop
add
dec
sub
mov
inc
pusha
lds
daa
mov
cli
ljmp
cld
lock
and
xchg
out
xchg
mov
mov
xchg
lods
cltd
sub
push
aam
lods
cmp
pop
gs
or
jmp
jg
cltd
sub
call
nop
jbe
jne
gs
mov
sub
test
int3
push
pop
test
inc
mov
aas
subl
fbstp
out
push
jp
das
inc
scas
xor
push
and
pop
xlat
imul
fs
fidivl
sbb
fidivs
lahf
jb
cmp
es
mov
push
inc
ss
xchg
xchg
mov
mov
fimull
jns
addr16
fsubrs
nop
or
cmp
outsb
sub
pop
sbb
scas
sub
mov
int
jb
push
and
dec
movb
cmp
inc
shrb
pop
sub
jmp
cmp
pop
fcomps
mov
fists
adc
and
test
sbb
xorps
pop
jp
fstpt
pop
in
or
xchg
je
jae
pop
lret
sbb
in
jne
ss
ss
xchg
push
mov
adc
xchg
push
mov
cmp
xor
arpl
mov
into
aad
lcall
push
inc
push
fbld
rol
daa
movsl
adc
incb
push
xchg
lods
jmp
stc
inc
and
aam
cs
pop
sahf
sbb
jnp
xor
ljmp
jmp
leave
inc
std
ss
xchg
test
fnstcw
add
adc
or
mov
and
test
or
mov
and
inc
mov
outsl
jne
pop
cmp
sti
divb
jl
iret
push
cmp
dec
test
arpl
pushf
xchg
das
adc
sub
jg
rcl
outsl
adc
xlat
lods
cmp
gs
jl
xor
pop
ret
int
add
fdivl
mov
iret
lock
test
enter
or
mov
xor
jmp
arpl
cmp
xorl
sub
push
in
push
lods
inc
mov
xchg
popa
pop
stc
insl
sbb
in
jb
ds
cmpsb
mov
xchg
rcr
mov
sbbl
lock
sub
iret
xchg
sbb
repz
out
xor
leave
sti
adc
sbb
loopne
jb
mul
or
mov
arpl
ja
jmp
mov
push
jae
dec
xchg
push
pop
sbbl
shrb
sub
mov
scas
ja
xchg
mov
add
lcall
push
mov
sbb
jge
fld
mov
test
gs
lret
cmp
or
xchg
jl
add
mov
push
mov
and
xor
xor
ljmp
jne
addr16
lods
pop
push
jge
cmp
mov
mov
rcrl
popa
aas
faddl
pop
cmp
xchg
sbb
loope
jg
int
jne
cld
pop
decl
imul
mov
dec
sub
mov
lds
sbb
cmpl
push
mov
outsb
xor
cmpsl
nop
push
sti
call
cli
leave
sarb
adc
out
call
fnsetpm(287
pop
fadds
inc
es
jle
mov
inc
mov
fwait
mov
test
inc
cmp
and
repz
jbe
inc
pop
xor
mov
dec
shll
push
das
mov
dec
mov
out
or
sbb
xor
mov
ds
cmp
sub
add
and
cmp
imul
cltd
add
dec
mov
test
xchg
rcrb
dec
xchg
add
xor
lcall
inc
xlat
or
loop
std
sub
cwtl
push
mov
test
inc
push
and
cli
orl
mov
leave
out
jb
ret
mov
sub
xor
xor
test
jmp
pushf
in
and
xor
sbb
push
and
jnp
fnsaves
repnz
pop
push
cmpsl
into
mov
push
push
call
sbb
push
and
sbb
pop
mov
out
loopne
repz
add
scas
pop
or
and
inc
out
movsb
sahf
insl
inc
fsubrp
rorl
adc
or
mov
sub
fcom
sub
divl
repnz
stc
pop
inc
cmp
or
ss
orl
lcall
int
rcrb
scas
pop
sub
push
dec
adc
jl
dec
xor
push
test
lods
subl
inc
inc
xchg
jg
xlat
cltd
ja
sub
jp
sbb
insb
adc
insl
ja
dec
je
push
push
jb
dec
mov
mov
pop
mov
dec
inc
xor
dec
pop
ret
test
imull
mov
mov
aaa
push
cmp
addr16
fnstcw
mov
fists
cmpsb
cmpsl
cmp
out
and
jb
and
bound
inc
lods
leave
sbb
mov
mov
loop
int
nop
aas
scas
test
sbb
cmc
out
cmp
fs
adc
cmp
inc
aaa
outsl
mov
fsubr
iret
popa
adc
das
mov
das
cmp
push
jmp
clc
dec
outsb
sub
jb
cld
test
clc
push
xchg
fldcw
aaa
out
pop
int3
lahf
pop
out
ror
je
popf
or
ret
jo
or
cmpb
jle
lret
roll
xchg
popf
push
fldenv
ret
jbe
dec
sahf
ds
pop
adc
push
or
popf
popf
cmp
test
mov
jp
pushf
loopne
push
xor
sar
adc
jno
sbb
inc
xchg
fcoml
dec
aad
mov
insb
jl
and
dec
sub
and
or
imul
xchg
rcr
cltd
inc
push
push
adc
and
and
cmpsb
out
push
mov
cltd
cmp
orl
mov
lret
mov
and
es
lods
lods
jle
nop
cmp
jp
xor
add
stos
arpl
cmpsb
inc
and
cmpb
push
test
imul
lcall
cmp
cmp
jb
cmp
jle
xchg
comiss
mov
add
mov
pop
pop
sbb
inc
inc
repz
dec
xor
adc
pop
test
xor
leave
add
jnp
and
divl
mov
das
and
pop
push
sbb
xor
out
repnz
mov
sub
push
vcvtdq2ps
add
enter
lcall
imul
xchg
sahf
cltd
mov
jae
rcrl
nop
in
push
xor
mov
jne
lods
mov
pop
mov
xor
cmc
das
lock
std
fstpt
into
dec
push
fiadds
jb
push
loopne
xchg
push
sti
imul
aaa
adc
outsl
sub
enter
push
adc
xor
xor
in
pop
stos
dec
jl
adc
lahf
pop
sarl
push
xor
scas
push
fmuls
clc
int
dec
pop
and
stc
orb
adc
outsb
or
lea
hlt
roll
sub
nop
daa
jbe
mov
in
fsubl
cmp
inc
aas
fstpl
push
dec
jnp
inc
push
outsl
fildll
js
ds
sub
pop
sbb
cli
fimuls
ds
int3
xor
jl
stos
add
cs
sbb
push
je
xor
jp
imul
mov
movsl
lock
xor
pop
cmp
stos
mov
adc
dec
outsb
loope
out
xchg
in
adc
lcall
cwtl
clc
push
insb
mov
rolb
mov
fsubr
lods
and
loop
icebp
mov
adc
je,pt
xor
pop
int
pop
sbb
cld
sub
repnz
inc
jmp
jnp
je
cmc
or
jecxz
pop
filds
fcmovnb
outsb
xchg
lods
cmp
lret
test
in
jp
mov
push
hlt
test
adc
jge
aam
ret
fwait
xchg
jmp
std
mov
js
ret
aam
fcompl
ficoml
add
mov
ror
jb
cmpsl
cmpsb
pop
call
outsl
fdivp
sub
pop
fldt
add
and
mov
mov
loope
int3
fimuls
js
and
inc
into
dec
or
stos
sti
xor
stos
addb
mov
or
mov
mov
pop
inc
and
inc
mov
adc
jns
in
jecxz
sub
lret
stos
call
mov
shll
lcall
dec
test
icebp
lods
add
fisubrs
push
push
filds
mov
mov
loop
mov
not
push
data16
dec
xchg
out
xchg
sbbl
dec
jg
cmp
adc
adc
jp
xor
push
cmp
xchg
adc
push
pop
or
cmp
inc
pop
dec
or
imul
adc
push
popf
mov
shl
jg
loop
adc
xor
test
mov
sub
sahf
xchg
jmp
loope
xchg
dec
insb
call
cmc
fnstenv
int
jg
xlat
xchg
fsub
fwait
or
xor
push
sbb
insl
rcrb
enter
jecxz
or
cld
fcmovnbe
in
mov
dec
xor
test
mov
aam
imul
adc
aaa
enter
mov
dec
jecxz
pop
mov
sub
leave
push
or
dec
adc
daa
adc
lret
mov
dec
adc
lret
sbb
fs
xor
fld
xchg
mov
cli
jae
enter
push
fisttps
push
into
push
pop
pusha
mov
or
loop
jo
adc
lds
lods
push
xchg
xor
shlb
mov
mov
fimuls
testb
setb
pop
pop
adc
fbstp
stos
ss
cmp
gs
cmp
and
mov
out
lea
jl
push
loopne
push
xchg
mov
icebp
mov
push
loopne
movsl
sarb
push
testb
inc
test
pop
push
outsl
in
call
xor
pop
fs
rorl
cld
xor
repnz
pop
loopne
je
int
add
shlb
mov
shlb
mov
sbb
inc
je
jge
insl
ljmp
mov
jo
addb
cmp
cmp
xor
ret
xchg
pop
iret
mov
ja
scas
cltd
sbb
fistpll
aad
push
outsl
push
loopne
popl
xor
inc
pop
arpl
dec
mov
xchg
push
mov
int
lret
pop
ja
push
sbb
dec
stc
push
push
jl
sub
aam
push
cmp
loope
fdivs
xchg
cld
mov
jo
push
loope
inc
mov
pushf
pop
pop
js
mov
adc
jp
pop
fcmovne
repnz
or
mov
stos
call
mov
push
in
outsb
adc
sti
aam
pop
adc
jae
jmp
mov
inc
shlb
push
imul
loope
insb
mov
dec
in
pushf
outsb
ja
add
idivl
sbb
dec
sub
xchg
mov
stos
popa
mov
je
addr16
inc
inc
shr
scas
add
push
pop
cmpsl
or
pop
mov
jl
sbb
jl
pop
popf
loopne
call
inc
adc
in
imul
int
shlb
mov
dec
imul
rcll
cmp
xchg
mov
movsb
and
aam
cmp
mov
mov
pop
fcomps
xchg
or
fimuls
pop
add
lods
imulb
dec
ret
xor
mov
sbb
jge
adc
mov
push
xor
and
cmc
sub
pushf
push
ret
stos
in
inc
lahf
std
call
mov
bound
stos
setg
mov
mov
aad
xchg
and
and
sahf
mov
ss
imul
adc
xor
int3
sub
outsb
stos
xchg
dec
aas
sub
cli
xchg
mov
fs
dec
dec
jle
cmc
sbb
in
xchg
pmulhuw
out
ficompl
loopne
movl
out
xchg
push
faddl
lock
int
xchg
ljmp
add
ret
xchg
dec
and
xchg
jbe
mov
mov
lock
shll
or
mov
push
xchg
jnp
fcomi
sbb
out
imul
push
pop
nop
fstpt
shll
mov
xchg
sbb
shr
and
mov
pop
pushf
jae
xchg
popf
sarb
jecxz
jl
sub
outsl
out
mov
adc
sbb
xchg
not
jns
push
push
addb
or
fucom
mov
stos
ja
hlt
movsl
sub
aas
push
mov
movsb
or
cmp
mov
inc
ja
mov
outsl
mov
inc
movsb
fstps
inc
jle
sub
dec
mov
jmp
add
cld
leave
xchg
or
aam
scas
mov
jnp
xchg
sti
mov
fistpl
test
sub
adc
inc
mov
push
inc
iret
or
and
jmp
lods
in
mov
les
enter
lahf
mull
mov
fdivs
lea
notb
in
adc
data16
mov
insl
out
or
test
test
jg
cmp
jno
push
sahf
jae
fisubl
push
daa
push
xchg
mov
outsl
adc
subl
jns
aad
jb
je
pop
shl
fidivrl
lahf
xchg
inc
repnz
dec
addb
pusha
xchg
outsl
insb
jno
and
cltd
adc
add
mov
icebp
push
lea
dec
imul
or
loope
test
scas
xor
into
pop
add
ss
push
loopne
shll
jae
lea
movsl
in
add
or
push
pop
adc
push
insl
mov
jg
mov
insl
add
sub
adc
cmpsl
and
shll
lret
testb
pop
mov
mov
mov
jnp
add
iret
xor
push
pusha
sub
dec
xor
shlb
or
fistps
ret
add
bswap
xor
sub
loop
adc
xchg
jbe
push
dec
movsl
sbb
and
out
add
pusha
inc
mov
or
mov
mov
adc
mov
dec
dec
add
loopne
pop
xrelease
daa
sbb
idivl
xchg
jp
cmp
int
fisubl
and
cli
ja
add
inc
dec
popl
inc
nop
pop
pop
jo
repz
mov
xor
fstl
cli
pop
repz
outsl
or
les
push
aad
dec
or
test
push
cli
movsb
bound
icebp
test
mov
jns
ljmp
decl
or
mov
cmp
xor
shll
aad
mov
inc
out
add
add
dec
cmc
push
add
xchg
pop
add
loop
aas
mov
xchg
mov
add
push
jl
imul
out
inc
cmp
mov
std
repnz
rcrl
lods
icebp
push
ja
or
sarb
dec
mov
add
aas
imul
sbb
cld
int3
std
push
fiadds
or
subb
je
or
ss
sbb
sbb
fsubl
aaa
or
in
addr16
inc
out
cmp
push
xor
das
add
pop
fmull
mov
add
ret
dec
jmp
es
lret
jle
call
or
insl
mov
jbe
sahf
or
test
xor
fmuls
cwtl
fnsave
scas
xchg
mov
aam
sub
popf
push
mov
or
and
or
xor
or
add
mov
jl
es
jae
xchg
lods
push
lea
dec
jp
repnz
les
xor
push
xchg
aam
xor
popa
std
aaa
loop
push
lds
or
or
loop
in
fadd
pop
xor
ret
mov
or
test
sbb
clc
mov
xchg
add
sti
push
divb
sbb
xadd
mov
mov
cmpsl
mov
outsl
imul
pop
jle
adc
and
pop
mov
shlb
xchg
xchg
and
in
insb
movsb
aas
mov
repz
subb
in
adc
adc
sub
insl
sti
fwait
test
push
jne
shlb
cmp
inc
iret
scas
lds
sbb
inc
sahf
pushf
data16
data16
mov
movsb
stos
lock
lods
xchg
dec
push
jp
pop
test
pop
sub
sbb
dec
and
popf
xchg
sbb
jns
aam
repz
or
mov
add
lods
orb
movsl
xor
in
push
dec
inc
cmp
jbe
seto
daa
repz
adc
cwtl
inc
cmc
push
jle
mov
cmpsl
cmpb
jno
rorl
pop
sub
ret
cwtl
sbb
call
shrl
pop
push
scas
aad
jnp
leave
repnz
sub
cmp
das
pop
mov
ljmp
adc
sub
iret
test
mov
jno
mov
xor
sub
movsb
out
sub
jle
lods
notl
in
cld
xchg
imul
cmp
les
mov
das
loopne
fidivrl
sti
cmp
cmp
jo
popa
or
push
xchg
add
mov
icebp
lock
mov
jne
and
pop
mov
stos
bound
add
test
pop
xor
icebp
push
jg
stos
iret
mov
repz
ja,pn
mov
push
test
test
adc
xlat
dec
adc
cmpsb
pusha
add
mov
es
pushf
mov
sahf
cmp
adc
movsb
insl
shll
in
fildll
xor
pop
and
mov
rcrb
dec
sahf
imul
mov
icebp
jae,pn
pop
mov
xor
and
fisubs
xchg
jp
dec
lret
nop
aam
cli
dec
movsb
mov
mov
mov
loopne
push
mov
xor
ja
dec
mov
ret
xchg
nop
lods
ss
mov
and
and
dec
inc
pop
aaa
scas
outsl
pop
fidivs
notb
or
stos
testb
mov
shll
xor
hlt
jmp
iret
push
add
lock
loope
hlt
push
fwait
dec
xor
push
mov
inc
mov
xor
or
ret
int3
mov
jbe
test
xor
mov
sahf
or
sub
jns
adc
mov
lds
int3
adc
mov
push
repnz
out
in
inc
lcall
test
inc
ss
sub
mov
and
out
cmp
in
add
push
push
sub
mov
ss
loopne
xchg
bound
out
ljmp
outsl
jae
pop
jne
push
out
xor
mov
pop
sub
out
lods
jl
shrb
or
repz
mov
dec
adc
pop
lock
leave
ss
jmp
sbb
repnz
cmp
iret
push
and
jg
jle
mov
arpl
lea
repz
lock
dec
bound
or
les
sub
mov
popf
xchg
decl
pop
xlat
adc
arpl
push
rcrb
in
rclb
xlat
mov
push
pusha
int3
popa
lret
pop
shrl
pop
inc
sub
daa
push
fidivrs
add
es
xor
jnp
xchg
subl
adc
loopne
pushf
mov
xchg
das
arpl
bound
mov
adc
adc
in
pop
adc
popf
xchg
in
gs
test
sbb
lock
loope
ret
jecxz
jns
add
push
lret
ja
sbbb
test
sbb
jne
sbb
cmp
je
and
repz
rcl
jge
les
ret
sti
js
in
popa
test
cmp
mov
mov
sub
scas
dec
pop
jbe
adc
pusha
mov
adc
cli
cmp
rcll
mov
out
imul
iret
fdivrs
imul
lahf
sbb
or
mov
push
mov
cs
daa
mov
or
push
call
stc
out
xor
dec
insb
notl
lcall
loop
sub
cmpsb
ret
pop
mov
jg
inc
dec
stos
mov
int3
cwtl
mov
xor
jo
or
xor
lock
jno
icebp
jb
out
popf
mov
add
xor
pusha
mov
jbe
jns
and
dec
add
ficomps
add
mov
loope
mov
cmp
xor
sub
jnp
sbb
mov
ficoms
push
insb
or
mov
aas
push
xchg
popf
jo
cmc
lock
mov
shlb
ds
mov
bound
or
cmp
test
scas
dec
test
outsl
fistps
in
push
aaa
xor
and
pop
pushf
lock
add
test
cmp
jl
mov
xlat
sbb
xor
mov
int
fsubrl
lea
dec
loop
inc
fld
je
sbb
leave
xchg
call
cmp
pop
shll
inc
and
sbb
dec
push
aaa
and
movsb
stc
idivl
cmc
pop
mov
cmpsl
daa
nop
adc
xlat
jns
and
out
loope
sbb
std
je
jae
enter
into
loop
cmp
addl
and
enter
sbb
inc
push
or
test
push
shrl
sub
dec
lods
out
dec
lret
jns
fmull
jle
insl
cmp
es
fdiv
int3
xchg
rcll
mov
xchg
out
push
sub
jo
jo
push
xchg
add
iret
sarb
and
cmp
loop
mov
loopne
aas
fistpl
inc
cmp
icebp
jne
int3
aad
js
dec
pop
insl
mov
lea
ret
and
jmp
and
cmpsl
xor
mov
jge
test
sar
mov
adc
lods
std
fsubl
dec
add
pop
push
jp
dec
imul
sahf
das
xchg
mov
sub
testb
hlt
and
pop
jecxz
and
loop,pn
in
notl
cwtl
fsubp
dec
mov
inc
or
out
cmp
ds
cmp
mov
add
adc
dec
pop
insb
dec
movsb
mov
and
xor
dec
icebp
gs
addl
mov
xor
sarb
mov
lea
dec
sbb
and
scas
mov
or
jle
arpl
mov
and
add
shlb
cmpsl
sbb
sbbb
dec
sub
shrb
cmc
add
insl
mov
shll
lret
add
mov
fisubs
das
mov
cmp
jne
call
adc
mov
or
stos
pop
enter
xchg
and
add
bnd
addr16
mov
jo
icebp
sub
push
dec
fildll
addr16
out
mov
call
movsb
int3
cvtps2pd
in
xchg
loope
lcall
fwait
mov
cli
jnp
loope
sbb
or
rcrb
scas
sbb
cmp
cmp
push
aaa
xor
inc
loope
push
pop
icebp
or
aas
movsl
insl
and
xchg
mov
push
push
rol
fmuls
pop
stos
and
mov
add
test
popa
into
shrl
cmp
shlb
repnz
cmc
data16
adc
outsb
sbb
jmp
nop
cmpsb
mov
adc
pop
fucomi
xor
inc
call
pop
test
inc
sbb
daa
mov
add
or
rcll
mull
ds
dec
mov
ja
sarb
mov
test
pop
and
pop
sbb
sbb
loopne
adc
pop
mov
mov
repnz
sub
or
mov
fldenv
movsb
mov
add
push
sti
jb
add
iret
bound
imul
nop
mov
push
jl
inc
sub
js
jne
test
dec
pop
popf
jnp
enter
adc
arpl
insb
je
push
pop
mov
push
mov
mov
xchg
arpl
stos
pusha
dec
or
lock
xchg
cli
add
pop
fiadds
ds
jecxz
psubsw
stos
mov
fldcw
mov
xorl
nop
movsl
cmp
arpl
inc
mov
cmp
enter
push
outsl
pushf
int
pop
or
inc
add
cmpsb
sti
gs
and
pop
mov
fldenv
inc
je
mov
fimuls
xlat
pop
mov
jmp
scas
push
imul
pop
mov
jle
popa
imul
sub
stos
jae
cmpb
insl
test
shlb
shll
and
mov
add
fcoms
mov
pop
nop
dec
in
in
dec
stc
lcall
jecxz
dec
sub
jge
jo
fsubr
arpl
jo
insb
jne
cwtl
cs
jl
and
pop
cmc
sub
fimuls
mov
aad
mov
outsb
xor
aam
cltd
dec
aaa
into
cmpsb
push
add
pop
jmp
jle
lock
cltd
sti
sbb
loopne
leave
xchg
adc
out
cmp
call
add
lea
add
and
lock
ljmp
enter
in
lods
mov
mov
hlt
pushf
mov
lahf
mov
and
mov
mov
pop
fwait
in
push
sbb
loopne
into
pusha
imul
negl
and
je
jp
hlt
loopne
loop
imul
clc
jge
pusha
mov
add
sub
push
ret
test
lock
mov
insl
repz
jge
push
popf
es
push
test
sub
scas
push
dec
cmp
enter
aaa
les
add
sub
mov
and
mov
lds
scas
cmpb
and
into
clc
loop
jge
jecxz
iret
push
mov
jmp
add
jp
jno
push
stos
jge
clc
push
cmp
lea
mov
pop
movsl
inc
sbb
and
mov
and
dec
adc
cmc
cmp
mov
call
adc
cmp
ja
imul
sub
movsl
adc
loope
sub
lret
inc
lcall
shlb
call
xor
inc
and
fs
push
pop
imul
and
and
aas
mov
xchg
sub
add
inc
leave
add
or
add
int
sahf
nop
test
adc
ret
sbbb
sbb
xadd
repnz
pop
xchg
in
push
iret
in
mov
xor
or
in
pop
adc
dec
push
inc
mov
cmp
sahf
scas
sub
sub
inc
inc
adcb
cmp
or
sarl
xor
sbb
push
sahf
mov
out
dec
gs
out
xor
sbb
cmp
mov
mov
dec
out
pop
stos
mov
or
test
push
fcmovnb
int
movsb
mov
filds
pop
stos
cmp
sbb
cmp
inc
in
fsubp
mov
add
jl
xchg
fsubrs
mov
pop
out
xchg
or
aam
xchg
pop
pop
and
push
test
lods
loopne
or
scas
lret
icebp
into
xchg
fisttpl
xchg
pop
scas
cmpsb
mov
sbb
fstpt
sbb
jb
pop
lods
jg
arpl
add
int
arpl
sub
mov
and
sbb
and
mov
loopne
repz
jns
addr16
jns
jno
add
add
leave
inc
lret
and
outsb
in
cld
mov
sbb
lret
je
pop
pop
rolb
out
clc
aam
das
lds
ss
stos
inc
mov
jnp
lret
sti
mov
mulb
mov
push
aaa
daa
imul
lods
shll
sbb
movsb
test
shll
jmp
jbe
xchg
pop
jmp
xchg
std
jo
and
sbb
cmp
lret
std
dec
mov
leave
aas
or
inc
mov
cld
sbb
xor
andl
iret
cmp
xchg
or
cli
daa
push
pusha
sub
loop
sub
mov
pop
jmp
into
test
orb
popa
or
xchg
and
bound
mov
pop
leave
daa
test
loope
push
sbb
mov
or
lcall
movsl
xchg
roll
addb
sbb
sbb
mov
adc
fidivrl
xor
dec
pop
xchg
je
mov
or
out
clc
add
dec
add
addr16
clc
push
loopne
xchg
paddusb
push
sub
xor
dec
mov
or
sarl
sbb
jg
test
mov
pop
push
mov
dec
push
shr
pusha
cmpsb
cmovl
sub
jno
cmp
cmc
adcl
js
test
mov
jnp
sbb
fidivl
sub
pop
xchg
adc
inc
jg
outsb
jnp
jmp
insb
xor
std
imul
mov
sbb
cld
jno
xor
fisubs
fsubs
or
inc
sbb
sar
mov
addr16
push
xchg
sarl
push
lea
adc
dec
out
loop
lahf
mov
movsb
dec
das
adcl
fwait
popa
dec
dec
jno
call
pop
mov
mov
push
sub
add
scas
xchg
cmpsl
jmp
cli
xchg
mov
ja
pop
jp
insl
xchg
jecxz
push
add
mov
fsubrl
jl
arpl
and
insb
dec
inc
loop
push
inc
mov
and
sub
fldl
inc
cwtl
adc
arpl
test
add
push
mov
roll
in
pushf
mov
inc
adc
mov
pop
mov
jmp
mov
leave
xor
decl
iret
nop
mov
popf
ja
test
add
mov
cmp
movsb
cli
sbb
pop
andb
mov
xor
push
jae
add
mov
sub
insl
cs
mov
push
testb
xor
jae
adc
jmp
push
adcb
or
mov
pop
or
sub
testb
inc
mov
pushf
and
loopne
ret
pusha
ret
inc
xor
aaa
mov
mov
push
pop
jbe
inc
sub
in
call
fsts
jb
push
xchg
inc
sbb
lods
cwtl
inc
lock
mov
xchg
ljmp
out
pop
ss
leave
test
mov
fpatan
cmc
and
mov
and
ret
inc
lahf
inc
mov
jbe
xor
lods
cmpsb
or
pop
push
xlat
xor
mov
sbb
push
fsubr
sub
clc
data16
xchg
push
bound
mov
xchg
mov
sbbl
test
push
cs
int3
cmp
test
out
jae
lock
xor
push
inc
fsubl
jmp
popa
jecxz
test
loope
aaa
lods
cmpb
xchg
cld
xchg
test
adc
adc
mov
retw
dec
dec
push
sub
add
fwait
std
lods
dec
pop
xchg
inc
sbb
xchg
xor
leave
mov
mov
in
xor
mov
bound
jo
mov
jge
adc
xorb
adc
lea
or
dec
dec
mov
cmp
out
inc
movsl
add
mov
cli
push
dec
and
jmp
or
call
mov
mov
in
imul
mov
push
inc
and
mov
test
pop
dec
mov
push
lods
mov
cmp
or
xor
mov
movsb
fdivr
popf
in
scas
push
std
pop
fdivrl
jno
loop
jecxz
adc
lds
loope
push
pop
mov
xchg
push
daa
pushf
adcb
mov
test
mov
mov
insl
arpl
and
dec
movl
js
push
sub
cmp
jae
repnz
ljmp
adc
push
fucom
sbb
fldt
pop
push
popf
fiadds
pop
leave
dec
push
inc
lcall
shrb
xchg
and
or
gs
in
sti
sbb
or
ljmp
mov
inc
push
aad
or
fldenv
bound
stos
js
das
mov
je
push
jg
jmp
xchg
verw
inc
xchg
ret
mov
pusha
mov
les
xchg
add
xchg
lret
lret
jbe
xchg
mov
scas
mov
jp
jns
cmp
jecxz
or
xor
mov
push
xchg
movsb
cmpb
inc
lret
loop
dec
jle
jecxz
and
call
in
pop
mov
loopne
fnstsw
mov
stc
xlat
into
mov
pop
adc
sub
push
fbstp
jge
xchg
cmp
cmp
fsubrp
shll
ret
int3
push
lock
adc
daa
mov
or
add
add
xchg
mov
and
loopne
cs
push
lcall
rorb
andb
scas
fwait
cld
data16
mov
mov
iret
dec
ret
dec
sti
pop
pop
xchg
jne
cmp
cltd
mov
jmp
test
rolb
mov
shll
and
adc
out
push
insb
xchg
pushf
or
sub
or
loopne
movsb
in
mov
mov
je
sub
scas
outsl
sbbb
dec
xchg
popf
stos
mov
adc
add
sbb
rclb
js
sub
pop
lret
fisttpl
or
inc
push
fprem
and
xlat
dec
xchg
imul
mov
aaa
pusha
mov
mov
pusha
aaa
mov
out
add
dec
or
add
mov
popl
pop
sbbb
pop
inc
outsb
sub
and
cmp
cli
rorb
push
adc
mov
loopne
cli
mov
outsb
fwait
cmp
dec
int
repnz
add
stos
pushw
andb
or
fldcw
add
xchg
lcall
dec
push
jmp
mov
add
loop
nop
pop
into
out
jp
sahf
xchg
jmp
push
push
mov
cmp
shl
imul
adc
cmp
lock
test
lock
addr16
into
insl
sti
adc
cmovbe
inc
test
add
inc
inc
cmp
sti
xor
inc
xlat
mov
in
mov
test
xchg
cmp
mov
sbb
inc
stc
filds
inc
dec
notl
out
jge
movsb
and
loop
inc
sbb
js
cltd
mov
mov
cmp
clc
dec
cld
insl
sbb
dec
call
pop
pop
jmp
inc
push
out
pop
mov
jbe
xchg
pop
pop
push
lret
xchg
xor
jbe
jne
shrl
shlb
inc
push
cs
add
sub
stc
dec
outsl
mov
scas
imulb
stos
mov
mov
movsl
insl
aas
addr16
in
rorb
in
popa
es
cmc
daa
add
sub
add
and
loopne
in
mov
cltd
xchg
xor
sahf
cs
dec
or
xor
pop
js
dec
gs
mov
or
mov
push
fcompl
mul
mov
pop
cltd
loopne
jl
fcomi
lcall
outsl
jle
push
movsl
aad
adc
popa
lret
mov
loop
push
mov
fcmovnbe
rcrl
ljmp
shlb
in
icebp
adc
je
vmread
jo
inc
fisttpl
int3
clc
stos
push
icebp
fs
xor
add
add
mov
aad
jecxz
jnp
jne
xchg
xchg
push
std
sbb
fsubrl
jge
push
insl
inc
lods
les
inc
mov
pop
in
sbb
or
adc
sbb
or
fwait
jo
mov
pop
xor
in
daa
adc
loop
push
mov
and
push
nop
mov
push
popa
arpl
je
pusha
adc
cmp
mov
idiv
stos
cld
sbb
loope
mov
jns
adc
add
das
loopne
pminsw
pushf
adc
add
jmp
jecxz
pop
jns
aaa
push
xchg
adc
cli
jge
or
mov
fists
adcl
test
pop
data16
mov
das
pop
and
or
out
dec
jge
push
test
loopne
xor
sub
popf
addr16
dec
mov
scas
mov
mov
movsl
push
clc
jo
shr
rol
mulb
dec
mov
sbb
fs
pop
fwait
fwait
cli
fdivrl
or
jnp
pop
jge
jmp
jmp
in
cwtl
inc
push
jg
movsl
and
adc
mov
push
icebp
mov
ljmp
ja
jecxz
pop
add
sub
cmpsl
lds
dec
add
clc
or
mov
jno
lods
cld
add
xchg
sahf
faddl
mov
or
xchg
jmp
shl
pusha
push
add
stos
jns
sar
push
or
cs
test
cli
inc
xor
outsb
in
mov
push
mov
icebp
aad
insl
push
jno
ja
lret
pop
or
fidivrs
popa
mov
mov
add
mov
xlat
frstor
orl
jb
push
imul
iret
cmp
jnp
mov
movsl
movl
pop
cmpl
inc
jbe
test
mov
or
push
push
inc
xor
push
scas
adc
sbb
or
lock
fldenv
test
gs
subl
push
gs
sahf
insl
fcompl
add
loop
addr16
cmp
clc
cmp
addb
and
int
jae
popf
fsubrs
arpl
and
push
popf
lods
out
addr16
test
and
mov
lahf
push
fildll
into
into
sub
ljmp
pushf
test
push
fadds
push
xlat
dec
outsb
je
imul
jno
xchg
stc
inc
mov
pop
lock
clc
or
push
mov
dec
xor
div
sub
pop
adc
xor
lods
and
pop
adc
fldcw
iret
mov
pop
stos
lahf
mov
push
sbb
mov
clc
cmpl
sbb
and
faddl
repz
dec
sub
or
cli
inc
shr
fwait
pop
lds
popf
xlat
out
negl
xor
sub
test
enter
and
jle
enter
incb
fsubrl
scas
jbe
adc
adc
sarl
pop
sbb
scas
lret
andb
pop
mov
pop
push
outsl
mov
jmp
loope
xchg
pop
mov
push
xorl
jns
cld
and
fadd
jo
push
lret
into
mov
mov
imul
call
push
xor
mov
cmp
and
fisttpll
leave
call
mov
test
mov
cltd
inc
imul
popa
dec
ret
int
mull
sbb
cmp
loop
cld
pop
fwait
mov
mov
mov
push
sbb
leave
push
cld
inc
jns
stc
pop
je
sub
cli
sub
in
dec
push
shlb
jo
lods
gs
sub
pop
fs
stc
smsw
and
push
or
mov
leave
or
insb
inc
xor
jo
push
add
cmp
sub
mov
aaa
cmpl
cmp
adc
push
add
lods
cmp
out
mov
out
dec
shll
sbbb
pop
lea
sar
shrb
mov
jae
movsb
out
dec
mov
cld
cwtl
test
stos
enter
xlat
xchg
cmc
xchg
push
mulb
cwtl
faddl
cmc
cmp
mov
ds
or
pop
xchg
xchg
subb
fsubl
shr
add
mov
pop
adc
jle
cmp
jb
rcrl
call
ja
ja
shlb
sbb
mov
dec
fcoml
cltd
mov
clc
xchg
imul
stc
xor
aam
hlt
test
into
int3
pop
cmpsb
pushf
testb
mov
adc
or
push
fwait
xor
mov
jp
inc
mov
sub
aaa
call
dec
mov
or
xchg
insb
les
or
dec
sub
aas
loop
push
repz
ret
test
cwtl
or
jb
mov
out
pop
pusha
mov
adc
outsb
inc
in
pushf
dec
notl
dec
mov
lock
cmovne
push
push
stos
xorl
add
andl
in
mov
jmp
cmp
or
int
leave
je
add
insb
adc
loopne
insb
ss
xorb
jg
ret
test
js
fucomi
dec
lods
mov
outsl
mov
in
das
jge
pushf
mov
pop
jmp
daa
mov
mov
xchg
sar
xchg
mov
addps
or
sub
rolb
sbb
addl
lcall
es
cmp
fisttpll
jmp
xor
arpl
cmp
jne
jae
cmp
jg
call
aas
sub
xchg
mov
sbb
push
pop
sub
push
mov
fldenv
xor
fwait
enter
jnp
xchg
in
ss
fs
pop
mov
mov
mov
imul
sti
sbb
cmc
jae
mov
jb
xchg
cmp
jmp
cltd
pop
insl
add
pop
outsl
scas
fcoml
scas
int3
sbb
shrb
jnp
les
rcll
mov
ds
xchg
push
in
or
adc
imul
adc
adc
outsb
jnp
insb
lahf
sub
jl
push
mov
int3
lret
cwtl
adc
xchg
mov
dec
pop
mov
pop
fwait
xor
push
push
jecxz
push
mov
xchg
sbb
lock
lret
lret
dec
mov
fbld
cmc
fs
add
movsb
les
movsl
test
inc
aas
push
adc
sarl
lcall
pop
adc
xchg
xchg
in
iret
inc
dec
mov
push
mov
cld
movsl
push
pop
fisubl
mov
scas
nop
andb
push
clc
inc
adc
mulb
movsl
lock
mov
sti
or
mov
jl
xchg
cmp
in
dec
pushf
mov
loopne
inc
loope
fisttpll
xchg
incb
xchg
test
push
pop
dec
or
js
and
aam
dec
cmp
xchg
sar
stc
pop
cld
sbb
mov
pop
adc
or
add
cmp
cltd
repnz
lds
arpl
sbb
ljmp
push
fcomps
bound
out
lea
loop
into
in
rclb
ret
sub
jl
pop
or
iret
andb
rcrb
push
sub
mov
adc
test
sbb
sub
bound
dec
xchg
jno
jmp
mov
cmp
insl
movsb
aad
jo
mov
xchg
xchg
fwait
push
dec
popf
subb
push
hlt
ret
dec
mov
jae
int3
jno
xor
sub
hlt
pop
repnz
dec
shlb
pop
xchg
jmp
sbb
icebp
pop
pop
movsl
or
jl
lods
mov
xor
pop
mov
jg
xchg
pop
into
jo
lret
clc
iret
int3
mov
nop
mov
add
jp
enter
and
ficoms
fs
mov
sub
es
and
or
fxch
jp
in
cmpsl
mov
pop
repnz
std
test
sub
jnp
or
mov
std
test
mov
lret
mov
push
mov
xchg
int3
sub
test
sar
cmp
loope
in
sbb
icebp
aas
jge
setns
cmp
flds
fisttpl
jmp
mov
push
sub
mov
xor
clc
mov
sarb
imul
loopne
jp
imul
xorl
adc
cs
in
jp
les
dec
das
dec
cli
int3
jb
mov
ds
push
sbb
cld
dec
push
andl
jg
jle
dec
mov
jle
mov
push
nop
or
jp
addr16
arpl
bound
xor
adc
mov
enter
or
jg
icebp
pop
inc
sbb
adc
ret
flds
je
fldcw
movsb
popa
out
loop
add
les
pop
add
cmp
jmp
adc
jne
inc
sbb
fcmovne
inc
sub
cmp
push
dec
pop
cmp
mov
dec
rdmsr
int
jbe
arpl
fbstp
inc
jge
jl
mov
notl
inc
mov
ss
jbe
leave
mov
sub
dec
mov
mov
pop
push
test
addr16
or
mov
jae
movsl
pop
jg
pushf
push
dec
in
inc
mov
fdivp
mov
cmc
aas
jp
xor
fsubrs
mov
adc
adc
movsl
inc
vmaxps
pusha
mov
into
add
arpl
popf
cmpsb
dec
xchg
out
and
rolb
and
test
es
pop
dec
or
call
mov
xchg
add
jg
ljmp
repnz
sub
mov
adc
daa
mov
cwtl
inc
pop
adc
ljmp
inc
movsl
loopne
fistpll
mov
mov
icebp
mov
sub
loop
cld
lahf
addl
dec
xchg
out
les
mov
in
mov
sub
int3
inc
xor
xlat
aaa
mov
inc
dec
mov
jl
mov
push
outsl
fisttps
xchg
das
js
or
sbb
fwait
mov
lea
and
mov
pop
and
push
jno
dec
mov
das
adc
mov
sbb
or
in
decl
lcall
mov
out
inc
das
pop
adc
imul
jp
dec
je
cwtl
mov
cmp
outsl
clc
scas
divb
cmp
test
cwtl
or
das
fnstenv
mov
cmp
mov
pop
cmc
andl
xchg
pop
lods
enter
stos
rorb
cmp
push
cltd
or
pop
add
mov
clc
jbe
jle
std
pop
insl
nop
sub
jo
into
clc
xor
jns
in
adc
fistpll
dec
cmp
in
jmp
inc
dec
pop
mov
shrl
mov
callw
cmpsl
loope
mov
bound
outsl
aaa
sahf
sbb
cli
ss
jno
ss
pop
iret
imul
jnp
call
mov
imul
frstor
ds
das
cmp
call
jge
divl
mov
scas
ret
mov
repz
divl
cmp
hlt
push
cmp
adc
dec
dec
sub
sub
inc
test
mov
cmc
vpmacssdql
mov
stos
fs
fwait
push
or
mov
stos
push
or
xor
inc
xchg
daa
inc
inc
sti
bound
pop
push
or
insb
push
cli
xchg
aad
lret
push
pop
cs
into
jb
shl
popf
in
out
out
sbb
dec
xlat
cmp
inc
clc
sbb
adcl
fldcw
fisubl
pop
leave
test
rol
sbb
push
inc
movsb
jge
sbb
push
xchg
mov
fwait
sti
dec
and
sub
or
stc
push
cmp
shlb
mull
sbb
pop
aas
loop
mov
mov
inc
or
or
in
leave
arpl
and
out
cmp
daa
lret
jb
lods
gs
jae
mov
nop
nop
mov
xchg
xchg
out
fcoml
lods
andl
jnp
push
arpl
jecxz
lret
in
loope
arpl
pop
inc
push
or
in
in
jns
adc
mov
ds
js
addr16
arpl
in
fnstcw
or
mov
subl
sub
outsb
pushl
inc
mov
pop
ret
push
test
mul
mov
sbb
xchg
push
pop
xchg
scas
popf
or
add
ss
stos
jge
cmp
add
test
adcl
inc
push
loop
stos
aaa
stos
sbb
lea
push
xor
test
scas
cmp
iret
jge
shlb
xchg
mov
xchg
mov
sbb
inc
std
mov
mov
adc
inc
ret
cmp
je
cmp
out
jge
and
push
dec
cmc
mov
out
lock
out
fsubrs
dec
mov
adc
jl
jne
out
sbb
mov
jl
mov
mov
notl
in
mov
loope
push
sbb
mov
inc
adc
gs
adc
fiadds
pop
movhlps
inc
inc
inc
dec
shrl
push
cmp
pusha
cmpsl
rclb
clc
bound
sub
mov
xchg
in
cmpl
imul
xchg
pop
adc
xor
and
into
and
out
push
pop
in
in
mov
add
xor
or
add
jne
inc
and
dec
out
pop
fs
das
xor
arpl
sbb
aam
dec
jg
call
ja
xchg
sub
sub
pop
sbb
cltd
or
sub
push
in
cmc
in
cld
sti
xchg
rorl
ret
dec
arpl
int3
adc
xchg
lds
popa
ss
test
ret
sahf
js
mov
xchg
push
cmp
jne
dec
test
cld
pop
or
arpl
sahf
fs
adc
pop
pop
xchg
pusha
or
xor
hlt
gs
loopne
cmpsb
xchg
in
sbb
xor
insl
push
sbbb
call
and
ja
insl
subl
pop
jp
fldt
jl
mov
adc
cmpsb
subb
nop
fdivs
ret
andl
jp
add
insl
adc
push
xchg
cmp
nop
leave
inc
stos
into
jnp
sbb
ror
sbb
dec
fisubl
idivb
xlat
xor
nop
xlat
push
jnp
mov
pop
xor
rolb
xchg
jns
adc
or
xchg
loope
jnp
jl
mov
mov
cmpsb
ss
fs
daa
outsl
jge
push
pop
mov
xchg
pop
add
dec
sbb
xchg
or
lcall
gs
in
or
sub
inc
push
dec
inc
jp
pop
push
dec
cs
inc
inc
fyl2xp1
xor
mov
mov
jge
adc
push
movsb
pop
aaa
jns
and
jbe
in
lds
and
add
cli
xor
or
aaa
lret
dec
cld
in
test
pop
inc
lahf
roll
pop
and
mov
out
cmp
xchg
cmp
pop
or
and
repz
push
hlt
mov
mov
mov
js
inc
mov
loope
pop
insb
pop
fsubrs
mov
fildll
jns
mov
cmp
pop
lock
repnz
dec
xchg
and
mov
lea
cmc
pop
push
cmp
inc
mov
mov
gs
pop
je
inc
aas
mov
xor
xchg
movsb
cwtl
testb
pop
lods
xor
xor
jne
ljmp
pop
fcmovb
test
clc
gs
imul
and
lds
dec
fistpl
dec
jle
inc
fs
or
arpl
int3
jne
bound
mov
cli
fidivs
inc
out
test
add
mov
inc
data16
sahf
and
pusha
dec
outsb
je
add
jp
cmc
outsb
bound
in
aam
dec
cmp
push
xchg
inc
jl
add
pushf
loop
std
push
int
push
divb
mov
pop
dec
call
xor
dec
pushf
outsb
jne
test
fcmovbe
xorl
ljmp
repz
mov
push
xor
pushf
pop
pop
outsb
aas
sbb
xor
into
rorl
jbe
je
movl
in
stos
sub
lcall
mov
jge
xchg
mov
push
push
in
or
test
leave
or
sub
mov
push
mov
jl
xor
inc
sbb
icebp
mov
inc
pop
scas
stos
int3
bound
cli
mov
jl
adc
xchg
xchg
pop
lret
sub
stos
push
xor
xlat
xor
add
mov
adc
sub
mov
fcmovne
das
adc
mov
testb
scas
dec
ss
test
sahf
andb
mov
fidivl
pop
push
add
int
push
adc
inc
icebp
xchg
and
arpl
xchg
mov
sarb
sbb
xchg
sbb
xor
push
lock
pop
ss
mov
xchg
push
les
jle
lock
pop
imul
mov
frstor
xlat
lret
mov
dec
into
xchg
mov
imul
mov
shll
rep
and
shrb
or
xor
push
scas
testl
push
jecxz
lret
and
scas
inc
dec
inc
dec
push
lock
add
sbb
incb
jne
xchg
fisubrl
scas
add
fidivrs
mov
cld
add
call
lock
les
mov
jbe
mov
ss
andl
fmull
sti
adc
jb
icebp
push
xchg
stos
cwtl
pushf
lea
int3
jle
ret
repz
cmp
and
and
pop
xchg
sub
cmpsl
xor
test
xchg
icebp
orb
push
lea
negb
int3
inc
test
sbb
adc
popf
or
repz
sub
xor
lcall
faddl
jg
inc
xor
pushf
std
mov
push
fldl
mov
or
cli
es
nop
jmp
sub
mov
fcomps
cltd
xor
pop
imul
mov
loopne
add
lret
call
cmp
adc
cmp
data16
mov
cmp
lcall
inc
sbb
adc
sbb
pop
pop
das
adc
daa
fcomps
adc
push
mov
cld
int3
loopne
andb
inc
cli
xor
in
push
pop
addr16
add
jno
or
inc
icebp
mull
push
jno
mov
call
fnstsw
negb
gs
dec
in
lea
jbe
fnstenv
push
fwait
add
nop
repz
loope
fwait
inc
jo
insb
out
xchg
imul
or
jb
orl
pushl
cli
fisubrl
add
sti
movsl
and
xor
lock
pop
add
pushf
inc
mov
add
daa
data16
out
pop
daa
jns
sub
lahf
lcall
ret
dec
dec
mov
or
pop
stc
fisubl
orl
lds
stc
adc
addr16
jmp
inc
dec
mov
jg
xchg
xchg
daa
hlt
push
shlb
push
loope
movsb
push
jno
lods
add
xchg
lcall
out
aad
sahf
in
mov
cwtl
stc
and
sbb
add
call
sub
pop
rcll
scas
enter
dec
outsl
mov
scas
xor
ficoml
mov
push
fldt
mov
je
stc
aas
pop
lds
inc
mov
push
jae
ret
enter
addl
dec
mov
pushf
add
sbb
add
lock
mulb
jle
push
jmp
sub
ficoms
adc
lahf
in
push
stos
add
sub
addb
jo
sub
vrcpss
gs
fnstcw
cs
pop
and
cmpsb
test
hlt
xchg
in
sbb
mov
push
push
pop
mov
sbb
dec
pop
addb
mov
xor
mov
jne
pop
test
mov
jne
pop
push
jmp
xor
mov
mov
repnz
int3
jne
xchg
xor
adc
xchg
lea
push
insb
add
pop
stc
jno
lods
les
enter
adc
cwtl
loope
pop
test
mov
cwtl
fdiv
mov
ja
xor
mov
fmul
cmp
popf
sub
add
mov
roll
fldt
fiaddl
inc
adc
test
outsb
jle
bound
push
and
sub
mov
cwtl
lods
add
mov
arpl
hlt
mov
mov
test
scas
xlat
dec
pop
mov
inc
test
mov
push
inc
sahf
mov
ja
cmpsl
lret
cld
jbe
push
jno
jg
and
cmp
inc
fsts
mov
pop
cwtl
and
stos
sti
cmp
add
sub
push
aam
adc
stos
lds
mov
fxch
inc
test
sbb
xchg
insb
xchg
mov
or
mov
lods
lea
mov
hlt
dec
mov
je
or
xor
cmp
xor
es
out
push
pop
mov
xchg
adc
xorl
adc
lahf
cmc
sbb
dec
inc
or
push
insb
loope
xchg
scas
fsub
jne
pusha
sbb
mov
loopne
push
rolb
mov
test
cmp
mov
shrb
jle
loopne
cmpsb
add
jl
pop
lret
and
mov
gs
je
add
mov
hlt
js
dec
cmp
jl
scas
ja
roll
addb
pop
into
mov
arpl
pop
push
imul
test
je
mov
hlt
push
mov
das
lea
pop
pop
pop
lea
popa
cwtl
cmp
adc
fsubrl
mov
jno
xchg
int3
fcomp
push
mov
gs
data16
cmc
lds
popf
ja
mov
xor
fbld
bnd
xchg
inc
xchg
sbbl
cwtl
mov
xchg
dec
jne
mov
dec
or
ds
add
mov
cltd
incb
and
pop
xor
pop
test
lcall
pop
xor
and
pop
xor
mov
leave
mov
cmpsl
sti
mov
mov
inc
out
fstps
bnd
repz
loop
lea
loop
add
cld
dec
in
fs
sub
xchg
xchg
and
add
xor
jne
pop
and
ret
ds
ds
movsl
hlt
aas
mov
adc
sub
sbb
je
mov
int
push
push
in
out
sbb
fcompl
add
inc
imul
xchg
out
ljmp
shlb
arpl
repz
mov
lock
jnp
fs
sub
ljmp
xor
das
hlt
adc
push
push
movsb
cs
cmp
inc
adc
mov
mov
pop
jo
dec
ror
rcrl
in
es
fidivl
lret
fwait
xchg
xchg
or
mov
mov
ja
push
cmp
push
dec
inc
xchg
cmp
add
dec
pop
pop
scas
mov
mov
lods
push
inc
push
dec
xchg
push
xchg
data16
xchg
sbb
dec
std
push
push
repz
mov
cmp
dec
mov
push
cwtl
mov
mov
enter
push
fidivrs
and
or
mov
in
mov
das
jmp
pop
adc
and
fmuls
imull
inc
adc
lock
lcall
sbb
test
daa
pop
imul
mov
lret
cld
cmp
push
daa
addl
movsl
add
sbb
and
xor
or
iret
push
sub
mov
adc
aad
sbb
push
inc
sbb
stc
jbe
pop
mov
push
outsl
and
mov
cmpb
ljmp
out
daa
fmuls
push
jecxz
mov
rcr
xchg
aaa
inc
push
xor
insl
pop
cld
out
push
stos
imul
or
push
cmpl
pusha
jae
imul
leave
xor
mov
cmp
pop
mov
xchg
and
xor
xor
cmp
ret
xchg
leave
fdivp
mov
jl
cmp
lcall
push
loop
movsl
mov
repnz
aad
fwait
push
rcll
xchg
test
pop
inc
adc
or
push
cmp
mov
ret
out
shl
mov
inc
or
shlb
dec
lods
daa
mov
sbb
xchg
sbb
add
aaa
fsub
push
test
lret
shll
push
xchg
fnsave
ret
mov
sub
fisttps
jge
sti
rorb
dec
fs
add
loopne
sub
repz
xlat
fisttpll
ret
push
imul
cmc
gs
xchg
dec
ret
ret
cli
nop
mov
repz
hlt
xchg
data16
aaa
outsb
scas
test
mov
loop
push
mov
mov
mov
pop
data16
push
and
ljmp
arpl
out
pop
fdivrs
cli
push
movsb
xor
loopne
dec
les
cmpsb
into
out
testb
jge
mov
jnp
out
or
and
fcomp
fs
cmpsl
pop
cmp
mov
xchg
jle
dec
stos
mov
popf
int3
imull
in
jne
mov
pop
cld
add
sbb
push
les
cli
imul
add
movsl
inc
xchg
fcomps
ret
testl
in
xor
ja
jge
call
popl
cmp
scas
mov
mov
jno
leave
inc
mov
stos
leave
jge
shrl
sbb
jo
pop
inc
adc
incb
xchg
add
pop
pop
jnp
mov
stc
and
add
lods
adc
in
and
cmp
xchg
fisttpl
rorl
aaa
inc
mov
mov
rcll
dec
add
out
ret
mov
repz
jg
aad
mov
stc
adc
dec
mov
jle
mov
mov
or
sbb
insl
lds
sbb
or
ss
jns
cmp
push
imul
cltd
ret
test
xor
mov
ja
mov
imul
fmull
ss
adc
push
popf
sub
inc
es
inc
arpl
mov
addr16
pop
push
data16
nop
ret
test
shrb
sbb
popf
test
push
dec
fsubrs
in
inc
shlb
aas
pop
outsl
scas
jb
addr16
cmp
jne
fs
sub
stc
dec
insl
mov
inc
movb
pop
push
inc
dec
shrb
sti
mov
icebp
les
lods
sahf
inc
gs
inc
fs
ss
fistps
mov
jmp
or
pop
inc
lret
push
lds
shlb
sbb
mov
popf
mov
scas
jmp
add
sti
xchg
mov
out
cmovno
lock
mov
in
mov
adc
fdivs
std
lcall
ret
loopne
out
in
popl
in
adc
hlt
pusha
jecxz
mov
aas
sbb
daa
std
pop
in
bound
xor
testl
mov
shl
jbe
xor
sub
lock
sub
push
inc
call
mov
lret
dec
iret
in
add
push
adc
ljmp
out
jecxz
cmpl
xchg
sub
pusha
xor
cmp
outsl
mov
insl
movsl
das
jns
mov
sbb
pop
xchg
dec
mov
enter
insl
outsl
and
sar
gs
sti
testb
pop
adc
call
movsl
inc
jnp
lcall
imul
mov
xchg
push
imul
mov
imulb
sbb
xlat
ret
xchg
jnp
mov
mov
out
mov
int3
jge
fsubp
jb
in
sbb
mov
leave
mov
xchg
add
sbb
dec
mov
fcompl
les
mov
adc
mov
push
ds
dec
or
adcb
dec
inc
cmp
aaa
cmc
cmp
mov
mov
pop
jl
data16
into
fstpt
lods
mov
test
popa
xor
icebp
mov
pushf
dec
dec
mov
adc
xor
push
stos
imul
stos
dec
xor
pop
dec
call
inc
leave
dec
xchg
nop
mov
arpl
dec
adc
xor
dec
push
add
xchg
sbb
test
pop
ret
inc
les
mov
andl
xor
and
data16
push
push
cmpsb
inc
cltd
scas
mov
test
fneni(8087
popf
repz
dec
xor
add
dec
test
mov
add
pop
pop
sti
pop
add
pop
cmc
mov
out
test
testb
aaa
leave
data16
or
and
int
inc
scas
pop
je
bound
mov
sahf
es
mov
mov
lahf
sub
dec
add
jecxz
push
cltd
leave
sbb
pushf
lds
sbb
enter
push
addl
in
inc
lds
fldcw
push
xor
or
dec
cmpl
mov
hlt
adc
loope
rcl
mov
inc
xchg
jns
mov
sti
push
cmpsb
cmp
test
ljmp
sub
add
rorl
xlat
and
mov
mov
jns
xchg
or
orb
add
leave
jmp
push
pop
xchg
int3
add
cmp
je
rolb
push
mov
jle
enter
push
adc
pop
lods
pop
movsb
xor
test
fistps
out
cmp
jb
add
nop
and
andb
inc
mov
fs
lcall
push
test
scas
cld
sub
in
push
aad
rorb
loopne
adc
push
push
in
jle
scas
mov
insb
mov
imul
lods
inc
mov
mov
ljmp
fdiv
push
orl
clc
or
aam
inc
mov
aad
sar
mov
out
sahf
bound
push
ret
jle
or
dec
call
xchg
imul
mov
ss
inc
into
cs
dec
sbbb
adc
aaa
xchg
push
pusha
in
inc
jb
mov
scas
roll
fs
div
mov
jge
xchg
fcmovnu
ljmp
lret
and
add
outsl
xor
ljmp
push
cmp
lods
test
scas
aam
lods
cs
enter
inc
xchg
xlat
fs
dec
aaa
mov
sub
fs
adc
jp
stc
shll
rcll
adc
mov
sub
inc
mov
jne
inc
loope
sbb
notl
xchg
sbb
stos
dec
mov
cmp
ret
pop
inc
add
sub
xchg
fdivs
push
addl
mov
xchg
jmp
sub
dec
dec
push
inc
pushl
cmp
mov
mov
dec
lea
add
dec
sub
push
lahf
les
stos
sub
mov
mov
jns
test
out
dec
sbb
jb
mov
xchg
inc
enter
scas
cmc
and
cmpsl
aad
pop
sbb
in
inc
sahf
mov
cltd
mov
mov
jl
lcall
into
push
mov
add
cmpsb
mov
les
arpl
inc
addr16
fmuls
mov
jg
fucom
sar
sbbb
sub
mov
xchg
gs
movl
loope
inc
inc
call
inc
xchg
xor
test
xchg
int
fcoml
shl
jo
loope
lods
cmp
cmp
cmp
jg
inc
sbb
mov
lcall
std
data16
ficomps
testl
xchg
lock
xchg
std
int3
jg
testb
scas
push
aad
stc
mov
lret
and
lcall
push
pusha
divl
fadd
jne
fstps
mov
or
and
ret
mov
pop
insb
dec
test
call
jnp
fbstp
push
add
mov
lock
lahf
fcomps
jl
lahf
mov
push
decb
mov
push
test
add
xor
and
sbb
mov
inc
mov
leave
mov
sub
xchg
mov
push
leave
mov
js
pop
fdivrl
or
pop
call
mov
xor
pop
xor
lahf
inc
inc
orl
xchg
out
adc
call
cltd
or
out
add
xor
lcall
xor
cmc
loop
mov
sbb
dec
inc
pop
push
clc
mov
and
sahf
pop
jmp
in
insl
xchg
fwait
movsb
pop
mov
sub
dec
aaa
inc
mov
in
mov
ficompl
into
mov
mov
add
fdivrl
adc
mov
dec
mov
sub
cmp
sub
dec
fnsave
pop
arpl
or
push
shll
int
jne
shlb
jl
daa
or
lcall
mov
add
lock
xor
add
cli
std
fsubs
mov
push
in
ljmp
fadds
pop
xchg
icebp
sub
inc
inc
or
sbb
adc
out
xchg
xchg
add
jae
dec
inc
adc
xchg
and
outsb
cs
xchg
jge
cmpsb
jmp
xchg
or
insb
jg
aad
jno
neg
jmp
sahf
push
xchg
lcall
fwait
jne
mov
push
jge
push
pop
add
out
movsl
mov
pop
mov
lcall
cmp
push
pusha
or
movsb
arpl
dec
dec
adc
test
sbb
or
out
dec
or
cmp
mov
sbb
mov
mov
mov
call
subb
xchg
popf
aam
jne
aad
pop
in
lcall
jno
outsl
jmp
mov
insl
jb
mov
pop
sbb
rolb
call
rolb
push
mov
scas
decl
pop
idiv
dec
pusha
sbb
and
sbb
xchg
fcomp
xchg
jno
sahf
shll
push
fs
jbe
rcrb
daa
jecxz
inc
dec
push
adc
repz
cmpl
insb
pop
imul
pop
mov
call
add
xor
sub
andl
pop
or
and
ss
lahf
push
adc
jge
jae
int
std
fisttpll
or
lea
pop
inc
outsl
mov
stos
xor
jne
mov
jno
movsb
push
jecxz
jmp
ss
push
test
cmpsl
das
pop
jbe
dec
xor
aad
stos
inc
lcall
in
adc
rclb
push
push
add
aaa
xor
cltd
flds
lds
dec
fdivrs
sub
mov
aaa
xor
cmpl
rep
mov
dec
lods
add
push
fmuls
jmp
mov
jecxz
popf
std
loop
in
outsl
in
inc
push
mov
xor
cltd
aaa
jb
bound
pop
cmpsl
pushf
adc
or
pop
imul
dec
push
jg
in
and
pop
into
jne
aaa
jp
fistpll
mov
pop
pop
std
push
xor
loop
sbb
cmp
xchg
cmovs
decb
iret
bound
clc
sub
icebp
movsb
and
jp
insl
xchg
cld
fnstenv
mov
push
jle
ljmp
push
mov
pop
push
pop
lds
or
inc
sub
jle
jo
pop
pop
xchg
xlat
xchg
lret
mov
dec
jge
ds
dec
inc
mov
pop
cmp
andl
repnz
adc
cwtl
jno
or
shlb
push
cltd
in
push
cmp
stc
scas
sahf
adc
mov
jmp
push
pop
pop
dec
lods
xlat
pop
sub
or
push
inc
lret
mov
in
pusha
scas
int
jbe
paddw
test
inc
out
mov
hlt
mov
xor
cltd
scas
inc
repnz
adc
sub
aas
inc
cmp
mov
pop
fdivl
inc
ds
mov
dec
pop
aad
std
sbb
pusha
mov
dec
call
das
mov
leave
adc
outsb
mov
mov
pop
lea
int3
and
sub
add
cmpsl
and
das
lods
dec
inc
push
mov
sbb
les
push
adc
add
shrb
adc
xlat
movsl
pop
push
ret
out
cli
and
movsl
push
push
push
js
adc
sahf
hlt
jg
popa
sti
add
cltd
aad
notb
xchg
pusha
pop
add
std
fidivrl
int3
xchg
lds
xchg
xchg
in
fwait
jns
dec
int3
xorb
add
aas
test
and
cli
add
mov
stc
stos
das
into
outsl
lds
mov
gs
imul
enter
mov
jnp
enter
rolb
mov
iret
iret
cmc
add
push
jnp
add
push
ret
lcall
stc
repnz
cmp
inc
mov
mov
jp
xor
or
movsl
dec
lea
ret
leave
popf
push
cmp
outsb
xchg
arpl
or
adc
fwait
gs
push
mov
cmpsb
sub
cmc
mov
jae
mov
pop
insl
dec
gs
inc
cmp
jecxz
mov
out
arpl
fcomp
add
cli
sub
ret
xlat
fisubs
sbb
add
mov
push
lea
js
jg
adc
mov
insl
push
mov
clc
xlat
xrelease
ja
cmp
jmp
out
push
ss
test
jo
sarb
or
cmp
sbb
jp
test
push
mov
call
insl
jb
pop
dec
add
lods
xor
fsubr
les
push
enter
rcl
out
jecxz
push
xor
cmc
push
sub
dec
out
or
or
push
mov
dec
aad
in
into
add
icebp
jp
push
or
dec
mov
xchg
outsb
jb
xchg
arpl
sub
pop
shufps
push
jle
xlat
fsubs
xlat
jno
add
in
pop
pop
pushw
cwtl
imul
inc
inc
sarl
mov
fstps
test
add
out
popf
aad
jns
sarb
test
inc
stc
mov
or
inc
in
inc
loop
pop
gs
sbb
das
mov
ret
cmp
loop
in
aaa
loop
lock
mul
xor
cmc
insb
fsubrs
adc
cmc
movsl
gs
mov
push
or
push
push
xor
xchg
xlat
movsb
jns
sti
jmp
imul
cld
lods
push
cmp
sub
cmp
stos
mov
dec
jle
mov
or
pop
repz
adc
adc
imul
mov
repnz
ds
pop
pushl
movb
movd
addr16
addr16
fs
lret
pop
or
inc
mov
int3
daa
mov
sbb
lds
and
xor
mov
cld
int
mov
sbb
sub
stos
fwait
lahf
and
add
adc
add
stc
sub
mov
cld
jbe
mov
shl
pop
or
repnz
fadd
dec
mov
pop
lods
jle
sub
lea
dec
push
sti
sbb
enter
or
test
hlt
push
mov
subl
shl
dec
push
mov
in
jae
scas
pop
xchg
ss
jge
fnsave
cs
pop
clc
into
cli
andl
ja
pop
lret
inc
pop
sbb
stos
add
icebp
arpl
aaa
mov
mov
sub
cmp
sbb
xchg
faddl
push
jl
inc
int3
sahf
stos
ss
repz
lcall
xchg
jmp
mov
cmc
xchg
mov
insb
cmpsl
mov
inc
cmp
mov
sbb
dec
mov
jmp
shrb
mov
lret
xchg
push
cmc
xcrypt-cbc
cmpsl
adc
inc
andb
test
jge
fsubl
mov
std
mov
ljmp
mov
and
push
sbb
dec
xchg
int3
mov
cld
jno
xchg
popf
cld
xchg
ljmp
pop
addr16
mov
mov
pop
jnp
pop
add
outsl
or
and
dec
inc
stos
leave
stos
dec
shrl
push
pop
aaa
xchg
ljmp
jae
mov
push
or
sub
adc
sub
jmp
ret
pop
mov
stos
arpl
loope
cmp
fcmovnb
sub
fisubrs
cmpsl
les
out
fldcw
sar
pushf
jno
jg
cwtl
adc
mov
sahf
mov
dec
testb
push
lahf
ja
adcb
pop
add
push
inc
push
test
dec
imul
bound
ret
aam
push
jns
notl
push
sub
lcall
lret
mov
push
scas
push
fld
fwait
loop
popl
icebp
cmp
aas
mov
ljmp
push
jle
lds
test
lock
mov
cwtl
addb
imulb
rclb
inc
int3
rcr
lcall
and
ds
mov
cli
jge
push
cli
ja
push
adc
sbb
mov
dec
jl
xacquire
scas
sbb
or
aam
and
mov
enter
cmp
fwait
add
mov
pop
push
or
shrl
pop
loope
xchg
imul
aaa
xor
ret
stc
test
fisubrl
popa
xchg
and
cmp
fwait
xor
sub
add
sbb
jg
shll
cmc
xchg
pop
adc
addr16
icebp
scas
fcoml
cmc
cmp
lret
dec
pop
and
fldenv
xchg
stc
out
mov
pop
mov
xchg
cmp
push
pop
jae
and
mov
mov
xor
adc
stos
or
xchg
pop
jecxz
aas
xchg
jnp
cld
hlt
stos
les
jbe
sub
push
push
stos
mov
push
sbb
outsb
gs
out
leave
adc
add
lods
or
mov
lcall
sub
sub
ss
or
cmp
mov
adc
mov
add
mov
out
sar
dec
lret
push
ljmp
sar
mov
cltd
pop
and
pxor
xor
insl
dec
or
test
dec
call
das
lcall
in
dec
xor
fisubl
js
add
adc
push
xor
ds
xchg
jg
xacquire
call
sub
lret
bound
jb
xor
add
stc
mov
pop
sbb
scas
orl
inc
xchg
cmp
cld
enter
in
lret
sbb
ss
mov
pop
movsl
add
pop
test
mov
pop
mov
mov
push
dec
jmp
and
sub
scas
addr16
daa
add
ja
insb
lock
rclb
cmp
adc
xchg
mov
cmp
jmp
imul
mov
adc
sbb
mov
xor
js
pop
mov
xchg
dec
idivl
cltd
sbb
add
out
nop
mov
or
cwtl
adc
mov
iret
mov
sbb
ret
jne
data16
call
sbbl
sub
flds
je
aam
fdivp
xchg
jmp
cmpsb
fiaddl
push
ret
bound
or
push
rcll
pop
test
ds
cmc
aas
xor
inc
sbb
out
pop
sub
or
jecxz
and
lahf
test
scas
sub
stos
mov
lods
mov
adc
xor
xor
dec
cmc
movsl
and
rclb
sbbl
inc
pop
es
add
pop
stos
lods
lock
push
mov
cmpsb
outsl
fdivrs
and
sbb
dec
jb
fistpll
lret
jl
or
jp,pn
test
das
push
fmul
adc
dec
add
xchg
scas
jmp
jle
dec
scas
jl
mov
dec
jmp
fldl
xchg
xchg
inc
pop
repnz
mov
jp
mov
mov
jae
inc
or
ret
negl
pop
mov
sbb
xchg
setnp
call
test
jns
push
push
push
sbb
mov
inc
mov
jg
repz
mov
lahf
outsl
dec
ss
mov
sub
cwtl
xchg
pop
dec
cmp
daa
and
push
mov
gs
jb
push
xchg
lahf
dec
int
push
adc
cwtl
leave
incb
fsubs
cltd
popa
adc
mov
aas
or
pop
insl
test
fs
jmp
js
jnp
sahf
jmp
lret
push
jecxz
jle
add
cmp
sub
pop
inc
popa
in
maskmovq
testl
xlat
sbb
cwtl
pop
add
aaa
bound
inc
test
fs
cwtl
scas
lret
cmp
sub
int
arpl
xor
bound
xor
sub
xlat
scas
dec
mov
dec
xchg
sbb
decb
inc
dec
pop
and
mov
dec
cmp
pop
clc
push
mov
mov
lods
stc
fisttps
mov
dec
jnp
push
dec
sbb
pop
mov
sbb
into
mov
loop
out
dec
lods
pushf
xchg
mov
aas
stos
lret
out
adc
hlt
sub
mov
adc
dec
mov
push
data16
sbb
shl
jb
jp
clc
and
in
sti
mov
xchg
addr16
in
xor
jp
sub
dec
or
notb
insb
jae
rcll
mov
sub
add
and
push
in
push
loopne
shr
loop
test
outsl
fs
movsl
jp
iret
pop
xor
cmp
test
dec
test
popa
lods
xchg
and
ds
cmp
adc
adc
pop
mov
sub
dec
push
repnz
test
ret
icebp
pop
push
add
push
pop
hlt
pop
adcl
mov
test
push
pop
pop
iret
dec
pusha
mov
adc
nop
les
adc
pop
cmpsl
xor
inc
mov
and
fisubl
mov
jbe
cmp
and
hlt
xchg
cwtl
inc
or
xor
sbb
lock
mov
xor
dec
and
lcall
or
aaa
mov
loope
pop
rclb
loopne
pop
xchg
or
outsl
aas
popa
add
insb
fwait
pop
sbb
aaa
sbb
push
or
ret
dec
cmpsl
adc
jmp
inc
lds
test
push
cld
mov
sub
dec
xor
xchg
jb
in
sbb
shrl
pop
je
test
sbb
jno
std
daa
or
int
add
xchg
xchg
sub
fidivrs
in
lcall
jns
js
adc
jmp
lret
mov
xchg
or
xchg
lahf
sub
mov
xor
fs
jbe
hlt
push
or
in
adc
loope
imul
push
rcrb
rclb
mov
push
xchg
mov
push
xchg
cmc
jb
loope
aaa
or
push
cmp
in
sub
or
inc
stos
pop
mov
inc
stos
xor
into
and
cmp
jmp
cwtl
scas
jecxz
inc
idivl
loop
xor
repnz
scas
insb
ret
lahf
mov
sub
xchg
xor
ret
dec
lahf
shl
in
inc
mov
outsb
fstl
mov
in
xchg
ret
xchg
out
lea
data16
push
aas
stos
lock
xchg
mov
fmull
faddl
test
rorl
ret
test
int3
fcomps
flds
xor
pop
loope
adc
cmc
lods
mov
or
mov
iret
das
lea
shr
dec
pop
jle
icebp
fldlg2
mov
adc
dec
aaa
pusha
xlat
es
inc
push
gs
sbb
mov
sub
jg
jbe
fdiv
andl
cmp
not
xor
cltd
pop
fmuls
adc
inc
mov
cwtl
repnz
jl
sub
pop
pushf
push
add
sbb
pushf
repnz
adc
mov
sarb
add
xchg
inc
fimuls
loop
test
dec
sbb
loopne
imul
adc
pushf
or
js
mov
jbe
sub
adc
popf
fisttpll
dec
cmp
jge
enter
fidivs
arpl
xor
mov
outsb
mov
jl
mov
and
pop
test
aad
pop
sbb
adcl
xor
inc
mov
ss
lods
movsb
sbbl
jp
xchg
movsl
inc
xchg
push
jbe
fnstenv
mov
and
mov
shrl
je
sbb
gs
std
insl
and
fstps
imul
into
aam
lret
and
pop
adc
or
sbb
xchg
or
mov
lods
jne
dec
sub
orl
enter
or
divl
popa
xor
pop
rcll
mov
xchg
popf
rclb
std
in
mov
pop
add
cs
xor
nop
bound
push
mov
mov
mov
leave
dec
mov
aam
sti
push
out
mov
or
or
int3
mov
push
pop
sarb
push
jns
andnps
add
add
inc
fnstcw
push
sub
repnz
jl
in
sub
push
adc
out
in
addr16
out
xlat
fidivl
dec
fsubrl
jno
cs
add
jmp
imul
xchg
mov
dec
enter
jge
aam
xchg
ja
jb,pn
pop
mov
jo
leave
out
clc
cltd
popf
int
ret
push
out
enter
add
cmpsl
adc
add
mov
push
or
loopne
lock
fidivrs
mov
mov
cmp
imul
repz
add
shlb
repnz
sbb
loop
jecxz
subb
ja
ret
inc
xchg
xchg
xor
enter
cli
out
cmpsl
imul
into
mov
xor
pop
aam
adc
cmp
jecxz
or
shll
xor
lods
pop
ret
test
and
cli
insb
xchg
fmuls
je
push
out
lret
pop
cld
xchg
xchg
scas
imul
xor
and
push
or
sub
insl
aas
daa
sub
mov
jge
or
cmp
and
dec
mov
or
aaa
loopne
outsl
pop
cmp
cltd
lea
fsub
insb
out
mov
add
add
outsl
rolb
xlat
xchg
hlt
pop
les
xor
cmp
adcl
outsl
shrl
stos
adc
lahf
mov
adc
fwait
adc
mov
xlat
les
xor
inc
test
or
mov
dec
fs
out
imul
xor
add
js
fidivs
daa
rolb
test
sbb
xor
pop
pop
inc
fsubr
mov
test
lahf
cs
divl
int
xchg
movsb
iret
cs
mov
ds
out
sbb
add
jnp
inc
imul
gs
mov
icebp
xchg
mov
lock
mov
xchg
test
mov
jecxz
int
ds
dec
sub
test
mov
jp
insl
out
and
popa
jno
lods
lahf
popf
xor
mov
adc
gs
xchg
cmpsl
cli
test
pop
or
xor
jmp
sbb
push
dec
mov
dec
enter
test
jnp
or
imul
lcall
adc
cmp
stc
insb
cmc
std
or
cli
clc
repz
jns
adc
repnz
mov
push
xchg
int3
mov
cwtl
loope
jne
out
cmpsl
adc
out
idivl
popf
outsb
xlat
hlt
push
ljmp
push
sbb
sub
pop
insb
out
jl
pop
push
sbb
scas
pop
mov
in
push
fildll
mov
loop
xchg
into
test
and
test
push
pusha
mov
sub
sub
outsl
xor
les
inc
inc
jae
fildll
icebp
out
dec
mov
jns
loopne
movsb
mov
loopne
xchg
scas
jne
inc
outsb
out
lret
adcl
jne
xchg
push
lret
ficomps
push
dec
xchg
icebp
out
das
dec
and
sub
aas
push
sub
push
ss
imul
cmp
cwtl
lret
jns
jns
popa
inc
jo
inc
icebp
pop
sub
out
dec
inc
xchg
insl
sti
out
loopne
orb
sahf
mov
and
addl
jp
shll
and
and
push
xchg
push
or
sbb
out
cmp
jg
shlb
hlt
inc
and
inc
pop
pop
sub
mov
repz
pop
mov
in
inc
js
ljmp
sbb
cmp
cld
fisttpll
cmp
lea
jp
mov
jge
mov
inc
in
or
or
aaa
test
shl
stc
adc
mov
push
int
lods
lea
jle
ror
push
out
lret
out
and
and
insl
stc
fiaddl
jbe
cmpsb
stos
jge
sbb
mov
outsb
icebp
and
sbb
adc
in
cmpsl
dec
insb
pop
imul
and
sub
pop
in
cmpsb
rcrb
and
pop
xor
xchg
mov
lcall
adcl
cwtl
xor
shll
jle
shrb
je
mov
push
and
jne
ret
cmp
movsb
inc
sarl
cmp
push
jmp
dec
sahf
mov
vpshlq
call
jne
ljmp
call
push
adc
xchg
mov
mov
lds
push
push
xlat
incb
mov
mov
mov
and
imull
or
cli
test
adc
pop
fs
mov
lcall
lods
nop
out
cmp
pusha
movsb
mov
mov
sub
mov
add
jg
push
arpl
clc
out
in
mov
std
movsb
jmp
pop
movsl
loope
lretw
jp
sbb
mov
mov
rcrl
push
in
push
outsb
adc
mov
xlat
sub
push
mov
std
cli
ja
mov
gs
jmp
mov
push
rcl
mov
mov
daa
lcall
mov
lds
push
mov
ds
mov
dec
shl
mov
loop
xchg
adc
adc
pop
push
push
sti
cld
faddl
cs
cmpsb
bound
sbb
test
cli
insb
hlt
lods
repz
ss
add
in
fwait
gs
push
and
pop
daa
xchg
out
fdivrs
popf
loope
add
jmp
lds
cmp
les
dec
aad
fisttpl
inc
sbb
js
movsb
loop
lahf
cs
push
adc
sub
push
sahf
enter
push
add
daa
mov
aas
cmpsl
std
inc
daa
xchg
pop
add
pop
leave
sub
sub
pop
pop
std
and
fisubrl
das
sti
cs
lahf
iret
mov
mov
adc
jne
movsl
cmp
and
inc
test
mov
pop
cli
jns
mov
mov
repnz
out
aas
scas
pusha
mov
cmp
mov
outsl
aam
pop
mov
fistl
adc
outsb
jmp
pop
rol
cmpsb
sti
push
sub
in
sub
inc
xor
xor
push
popf
mov
out
push
repnz
into
xchg
sub
addr16
xchg
cmp
mov
rorb
sar
pushf
push
sbb
push
test
mov
mov
push
notl
inc
xor
or
xchg
nop
xchg
fs
ja
enter
ss
out
push
jno
cmpsb
insb
call
jb
cmp
mov
jge
gs
shr
mov
mov
fld
add
inc
push
sbb
test
cmp
movb
jecxz
std
mov
xchg
dec
pop
lea
and
add
sbb
lret
inc
xchg
sbb
mov
daa
sbb
jle
shrl
lds
xlat
jns
daa
fidivl
mov
stos
and
ret
push
adc
add
sub
push
mov
in
mov
idivl
std
stc
outsb
push
push
push
xchg
cld
and
sbb
ficomps
add
mov
jmp
mov
loop
sub
fcom
cmp
fdivl
les
imul
call
aad
lret
push
sbb
mov
movsb
xlat
push
fimull
shlb
mov
inc
mov
stc
dec
sub
jle
inc
and
insb
cltd
push
lock
das
push
roll
jle
imul
xor
mov
mov
lods
mov
add
hlt
cld
xor
jmp
pop
mov
add
es
lcall
fsts
shrl
jl
fldt
or
mov
mov
lds
inc
sar
and
mov
test
mov
lock
fmuls
mov
sarl
ljmp
fistpl
out
add
sbb
xchg
inc
push
adc
pop
bound
jnp
mov
mov
icebp
cwtl
and
jecxz
sub
pop
cltd
xchg
data16
cmp
push
or
dec
inc
push
out
or
sar
hlt
add
bnd
lds
movsb
cmpl
adc
out
xchg
mov
jl
xchg
fs
aaa
cmp
mov
mov
and
insl
cld
roll
pop
dec
jnp
xchg
mov
ja
jl
xchg
cmc
mov
outsl
or
sub
cltd
stos
xor
shrb
test
pop
addb
stos
pop
cwtl
into
xor
int
les
loope
repz
sti
imul
divb
mov
into
push
test
das
cmpsb
xchg
addr16
aaa
in
inc
scas
insl
jle
jo
addr16
mov
sbb
loopne
jp
rcr
cmpsb
push
ljmp
mov
shl
cwtl
inc
shr
push
xor
xchg
adc
jmp
pusha
ds
pop
push
mov
dec
mov
or
pop
adc
montmul
cmpsb
add
xchg
cmp
ret
jne
cmpsl
aas
in
into
les
decb
xchg
pop
sbbl
pushf
mov
or
shl
iret
mov
cmp
outsl
adc
inc
xchg
imull
inc
loope
jg
push
mov
pop
mov
push
or
out
or
shll
fwait
push
dec
jns
cltd
out
in
hlt
frstor
lock
imul
mov
rclw
mov
pop
ret
or
add
std
leave
enter
fmull
jne
mov
push
sbb
test
rcl
lods
rolb
scas
out
xor
cld
mov
rorb
ja
jns
int
in
mov
pop
adc
mov
sub
ret
jmp
mov
and
mov
dec
or
push
sub
jns
cmpsl
fdivr
shrl
adc
nopl
push
dec
cmp
pop
or
inc
or
sti
cmp
scas
mov
inc
int3
mov
scas
in
add
dec
lods
fcompl
mov
jmp
push
mov
sub
and
adc
out
inc
lock
dec
mov
enter
movsl
js
sub
insl
insb
jg
adc
rcrb
mov
mov
jl
or
mov
sbb
repz
xchg
cmp
pop
sbb
push
lods
loop
push
xchg
lcall
adc
arpl
shlb
inc
and
push
fidivs
xor
clc
inc
es
adc
mov
call
ss
ret
pop
in
mov
inc
iret
andb
out
fstps
int3
sub
test
cmpsb
insb
mov
int3
xchg
popa
cmp
mov
out
jl
sub
mov
xorb
sti
jmp
push
dec
jmp
hlt
or
rclb
in
sbb
sbb
push
imul
jo
push
out
mov
stos
sbb
mov
dec
pop
test
jecxz
jg
push
outsb
sub
in
xchg
lret
xchg
pop
pop
sub
cmpsl
leave
and
ss
dec
cmpsl
xor
adc
in
cmp
into
jne
fists
fnstenv
cli
pop
aam
movsl
popf
mov
rcll
mov
mov
pop
out
movsb
repnz
loop
pop
or
dec
or
es
xor
and
jmp
xlat
dec
push
mov
lea
push
cld
fistpl
add
inc
pushf
xchg
loop
jmp
repnz
addb
ficompl
ja
xchg
jl
insb
sti
adc
or
mov
mov
and
shlb
cmpsl
jg
xor
or
sub
pushf
mov
pop
inc
fwait
sbb
cmpsl
cmpsb
adc
sub
pop
sahf
sub
mov
aas
imul
and
xchg
mov
mov
xlat
test
mov
push
push
mov
mov
stc
loope
mov
xlat
sub
and
cmc
mov
inc
data16
lock
mov
scas
sbb
test
aad
in
aad
ljmp
inc
cmp
loopne
inc
cltd
xchg
cmp
inc
lock
mov
adc
mov
sbb
loop
or
jp
lahf
dec
in
sub
sub
aad
jp
or
call
rcl
mov
test
dec
sbb
jnp
add
addr16
jp
sub
sbb
mov
cmpsb
mull
repz
loop
inc
dec
enter
lahf
ss
mov
test
pusha
mov
andb
dec
push
popl
adc
mov
fisttpll
shlb
xchg
mov
pop
adc
ds
je
sub
pop
xor
dec
shrb
xchg
int3
push
cmp
movsb
cmp
cmc
jp
rorb
rcl
movsb
dec
lds
mov
mov
adc
popf
xor
inc
mov
das
jge
adc
xlat
popa
lods
dec
mov
cmpsl
subb
jns
loopne
adc
int3
clc
adc
adc
inc
mov
sbb
ja
adcl
adc
mov
add
mov
xchg
daa
dec
fisttps
mov
aam
mov
hlt
enter
mov
hlt
popa
dec
xlat
and
sub
movsl
jmp
jle
mov
mov
dec
push
out
jns
je
lcall
cmpl
loopne
or
cmp
mov
or
adc
pop
inc
xor
es
sub
mov
jp
xor
stos
loop
cmpb
leave
or
mov
jl
add
insb
int
leave
rolb
mov
into
aam
popf
cli
lret
and
add
sbb
lods
ret
dec
adc
push
ja
cmpsl
lcall
sbb
mov
insl
pop
lret
lea
clc
cmp
pop
or
int
enter
insb
int
or
jmp
jb
shll
xchg
mov
in
jmp
push
ds
movsl
mov
sti
xor
js
jns
xor
cmp
cwtl
bound
call
add
push
mov
jnp
leave
mov
loop
lret
mov
jo
int3
aaa
cmp
or
inc
pop
jae
ja
dec
inc
cli
jl
pop
fnstsw
out
das
negb
aaa
dec
rcl
mov
sti
add
jl
cmp
cld
int3
ss
out
dec
dec
sahf
negb
daa
popf
xchg
pop
cmp
xchg
fldt
cmp
and
cmp
xchg
sbb
popf
cmpsb
subl
and
mov
inc
aam
aas
mov
xchg
mov
out
cmp
sahf
int
shrl
cmpl
cld
dec
imul
popf
sbb
push
add
pop
addr16
mov
testb
ljmp
jp
cld
mov
push
daa
bound
jno
inc
call
movsb
jne
push
leave
mov
jo
loope
push
leave
das
mov
shll
clc
lcall
adc
outsl
in
mov
or
arpl
mov
or
xor
gs
adc
mov
sbb
mov
jne
mov
xor
repnz
mov
rol
adc
daa
aaa
or
dec
dec
cmpsl
cltd
test
adc
push
in
andl
imul
push
test
in
push
push
and
mov
daa
clc
ret
push
push
cmp
inc
xor
notb
imul
fsubl
iret
sbb
cltd
and
or
fdivl
jecxz
cmp
sbb
push
sbbb
push
mov
aad
cltd
mov
inc
loope
stc
pusha
or
decl
push
inc
mov
rorl
cmpb
ds
and
jge
mov
aas
fdivl
mov
and
aas
jl
int
fdivs
int
fs
xor
jl
and
fs
imul
pop
rolb
mov
mov
cmp
iret
les
pop
test
sub
jnp
xchg
icebp
test
add
adc
add
xor
jmp
push
jmp
inc
call
pop
sbb
lret
mov
push
mov
xchg
mov
in
mov
js
add
xchg
lods
mov
mov
cmc
sbb
xchg
xor
pop
loope
mov
mov
jecxz
mov
jg
add
and
push
out
xor
adc
dec
sbb
mov
cmpsb
cmpsb
in
popf
out
rol
jb
push
scas
insb
mov
xlat
mov
loope
inc
mov
pop
sub
pop
xor
test
inc
pop
sbb
jecxz,pt
inc
clc
mov
rcll
mov
ror
cmp
leave
mov
shlb
fldt
popf
pop
inc
mov
aas
nop
sub
sti
push
jns
cmp
pop
ja
int
adc
loop
fimull
xor
inc
push
repz
pop
dec
adc
sbb
mov
lcall
and
mov
mov
cwtl
pop
enter
add
push
or
cmc
testl
cltd
push
jno
xchg
lret
jae
push
ss
mov
mov
cmpsb
jmp
sbb
rorl
inc
into
and
xlat
push
fs
rcr
xor
daa
sbb
les
jecxz
insb
mov
lret
push
mov
mov
les
add
inc
andb
mov
out
das
out
leave
mov
aas
sbb
unpcklps
shll
ret
lds
sub
test
cli
into
aam
inc
cld
ja
nop
cmp
mov
outsl
push
adc
test
adc
jle
push
sarb
cmp
ret
or
test
inc
and
call
lock
inc
imul
pop
push
xor
insb
popf
mov
std
lods
pushf
and
sub
push
xor
imul
xchg
or
push
mov
not
in
out
xchg
jecxz
mov
scas
xchg
arpl
daa
icebp
mov
into
sbb
sbb
or
add
mov
mov
sub
movsb
or
inc
push
sar
enter
pop
sbb
insl
xor
pop
lret
inc
adc
bound
pop
mov
cwtl
mov
es
cmp
sbb
inc
repnz
lods
dec
mov
fcompl
cmp
and
popa
xchg
scas
lods
mov
mov
call
movsb
shrl
xchg
ss
das
test
popf
fdivl
jmp
xor
cmp
out
mov
test
pushf
stos
addr16
scas
cs
fs
mov
add
sahf
mov
cmp
stos
test
sbb
gs
enter
and
je
jmp
nop
testb
jnp
mov
pop
psubw
nop
bswap
aas
in
jo
inc
stos
rolb
mov
ror
gs
dec
lock
inc
shlb
jecxz
xchg
aas
jbe
jp
jl
dec
pop
adc
negb
int
in
add
push
cmp
xor
inc
adc
cmc
mov
dec
cmpsb
mov
and
jg
and
rcr
rep
add
cmp
fdivp
outsb
rcrl
lahf
mov
sub
shrb
mov
cmp
dec
loope
and
cwtl
pop
pop
add
jnp
loopne
das
mov
rcll
lods
js
test
call
daa
rorl
test
mov
add
fisttpll
mov
fcompl
or
xor
add
ret
in
sub
jge
jecxz
sbb
xor
xchg
pusha
cmp
lret
or
sub
sub
out
arpl
pusha
xor
outsl
lret
lea
movsl
or
cli
add
pop
int3
fimull
test
adc
inc
sti
ffree
aam
es
clc
mov
sbb
pushf
daa
pop
ljmp
je
mov
pop
pusha
rcll
push
cmpsb
pop
mov
ror
mov
jns
sub
iret
fwait
repz
xchg
fmull
adc
insb
push
push
mov
in
add
xchg
pop
push
and
dec
and
dec
lods
out
adc
out
leave
rcrl
movsl
mull
push
test
arpl
mov
loop
pop
addr16
dec
inc
pop
push
es
xchg
adc
xchg
xor
adc
adc
mov
pop
test
jnp
cld
push
fisttpll
xor
lcall
enter
aam
roll
mov
fmull
ljmp
ljmp
ficompl
jo
inc
mov
jecxz
shll
std
fnstenv
out
or
ss
cmp
arpl
pop
dec
cld
sbb
pop
xor
xor
sbb
push
repnz
fstps
fsubs
pushf
mov
mov
in
mov
sub
and
out
int3
cmp
outsb
jge
and
enter
mov
bound
xchg
addr16
stc
push
xchg
push
xlat
xchg
inc
sti
lods
push
add
adc
jb
sub
inc
mov
cmp
imul
xor
dec
pop
mov
mov
fidivs
daa
xchg
add
rcll
movsl
jae
imul
jae
loop
iret
or
mov
mov
pop
cmp
add
push
sbb
or
popa
lods
iret
sbb
fsubs
cmp
cmp
shlb
repnz
push
je
jno
out
in
fidivl
insl
push
andb
lods
inc
loop
jmp
js
pop
in
mov
icebp
pop
or
repnz
fwait
insl
cltd
push
insl
pop
jb
arpl
ret
out
mov
or
dec
add
cmp
outsb
jecxz
pusha
addr16
stos
jae
jae
push
and
in
mov
push
inc
lahf
jecxz
adc
loopne
jge
dec
daa
bound
ljmp
pop
jo
mov
movsl
mov
scas
mull
push
aad
test
out
jle
stos
sbb
test
cltd
shrb
or
xchg
jno
jmp
dec
call
push
xor
cld
call
out
xor
iret
sbb
bound
dec
lahf
lea
outsb
pop
leave
push
jne
or
lods
jge
push
jno
pop
in
test
adc
cmp
scas
aas
pop
insl
lret
push
add
or
insb
lds
sub
sbb
inc
lcall
mov
sub
fsubr
enter
repz
out
mov
icebp
mov
sbb
pop
mov
nop
mov
stos
test
rolb
jge
add
sti
xchg
lahf
ret
fs
movsb
jnp
clc
sbb
cmp
inc
and
xchg
arpl
lret
xchg
mov
add
dec
or
fdivl
pop
outsl
push
stos
pop
or
addb
add
insl
in
jbe
mov
xchg
into
mov
jmp
fcmovbe
fcoml
cmp
shll
mov
xor
jg
fbld
inc
dec
mov
jae
mov
mov
push
pop
jbe
aaa
add
sbb
mov
xor
aad
sti
out
push
and
or
adc
fsubl
adcl
das
les
mov
mov
push
jge
pop
push
cmc
cmp
push
sub
test
xchg
push
pushf
orb
repnz
icebp
adc
mov
dec
mov
mov
inc
mov
rolb
adc
and
rorb
fcmovne
pusha
dec
loop
mov
sti
sbb
mov
dec
push
bound
popa
lahf
shll
les
push
arpl
xor
sbb
adc
aas
push
sub
add
fsts
and
push
stos
mov
stos
pop
cmc
sub
jp
mov
js
or
lahf
rcr
je
mov
jecxz
std
inc
mov
fcoms
xor
addb
subl
stc
test
sub
inc
jno
mov
adcb
stos
xchg
loop
xchg
out
in
popf
lret
xor
lea
xor
lods
mov
jle
ja
pusha
loope
xor
bound
cmp
pop
add
lcall
push
sbb
mov
aam
insb
das
in
jns
push
push
sub
jp
sbb
cld
stc
inc
inc
lcall
daa
fadds
cmp
inc
cmp
mov
cli
ret
sbb
decb
stos
mov
xchg
dec
divb
lret
enter
add
pop
inc
cmc
in
mov
gs
psraw
das
inc
jo
sub
loopne
test
xlat
rolb
sbb
std
mov
adc
push
out
push
mov
sub
fwait
ret
mov
lock
xor
sub
and
pop
icebp
bound
das
cltd
je
lea
cmp
jmp
jnp
sbb
or
push
rcr
out
es
lahf
jo
inc
and
out
shlb
cmp
test
xor
cmp
lea
fistpll
mov
fists
jno
pop
add
dec
sbb
and
ja
pop
repz
xchg
inc
push
lahf
cmp
stos
fmull
mov
jecxz
inc
popf
push
dec
adc
sarb
cld
ljmp
sbb
xchg
bound
mov
sub
pop
lcall
fiadds
sbb
mov
mov
movsb
hlt
scas
add
pop
jae
in
pop
pop
sti
shl
or
jp
xor
aad
mov
imul
lods
call
dec
andb
lods
es
cmpsl
inc
arpl
dec
fcoms
xlat
xor
movsb
out
cmpl
les
mov
hlt
cs
xchg
ljmp
int
in
fwait
mov
add
mov
mov
jl
and
mov
out
or
shlb
jbe
push
mov
fsts
cmp
mov
add
sub
xor
add
int
ficoms
mov
xchg
jnp
pop
mov
jo
in
jge
stos
mov
ret
sub
pushf
mov
cs
inc
ficomps
push
mov
stos
repz
lcall
sbb
inc
neg
fdiv
adc
add
mov
movsl
cmp
mov
jmp
aam
push
repz
xlat
ror
mov
mov
cmp
call
push
dec
add
rorl
sub
add
fidivs
xor
add
mov
jmp
popf
xchg
mov
mov
inc
push
jo
mov
cmp
jle
inc
sub
enter
jge
imul
add
das
lock
mov
add
outsl
filds
xchg
sarl
gs
loope
fwait
cli
imul
stos
shlb
xchg
jnp
scas
mov
lds
jecxz
orb
pop
xchg
ret
loop
or
mov
dec
ret
push
sarb
outsl
add
ss
mov
inc
repnz
pop
xchg
int3
dec
test
push
or
jl
mov
loopne
adc
fnsave
mov
add
mov
aaa
outsl
aam
scas
daa
mov
loop
je
cmp
and
gs
adc
shlb
in
repz
aad
pop
inc
pop
or
mull
mov
sbb
jae
pop
dec
push
inc
fmull
mov
cmp
bt
aaa
push
test
xchg
pop
jle
lret
sub
orb
fisttps
imulb
xchg
call
fdivs
push
fwait
and
mov
jno
push
adc
xchg
popa
mov
sub
jge
shrl
and
lock
outsb
iret
lods
es
insl
fcomps
in
jg
enter
loop
mov
incl
xor
and
inc
shl
push
pop
repnz
push
mov
lahf
das
xchg
push
es
int3
inc
outsl
mov
mulb
les
in
test
xor
mov
das
js
test
lcall
pop
jp
mov
test
mov
int3
fwait
or
testb
in
les
add
cmp
jbe
outsb
mov
insl
xchg
scas
sbb
movsb
js
out
mov
cmp
call
sub
fisubs
enter
sbb
sub
lea
scas
out
jb
mov
jns
xor
mov
test
mov
mov
xchg
dec
cmpsl
mov
out
fsubrl
push
scas
jno
pop
iret
sbb
lret
pusha
add
adc
call
dec
hlt
test
cmp
xchg
jbe
mov
fistl
push
adc
xor
gs
cmc
mov
and
sub
dec
adc
arpl
cmpsl
or
pusha
add
add
inc
fwait
jns
push
dec
mov
xor
test
outsl
mov
ds
cmc
ljmp
arpl
xchg
out
mov
test
cld
icebp
lods
pop
sbb
dec
fwait
aad
push
mov
fsubr
shll
or
out
push
pop
cmp
arpl
mov
dec
mov
dec
aam
pop
mov
cli
dec
enter
cmp
daa
dec
ljmp
add
jae
add
fs
push
cmpsl
aad
out
mov
inc
jmp
push
movsb
sar
nop
int
outsb
xchg
sub
mov
jb
add
loope
outsl
jecxz
cmp
sbb
inc
mov
cli
sbb
inc
test
xchg
sbb
and
out
popa
sub
push
mov
popa
hlt
xor
fwait
stos
std
inc
mov
push
or
mov
sbb
jno
adc
movb
xchg
fwait
in
xchg
cmp
sub
lds
ret
je
addr16
in
sub
insl
outsb
cwtl
cli
es
neg
jl
pop
daa
mov
mov
jecxz
insl
push
in
mov
imul
inc
repnz
jns
leave
pop
fmuls
adc
pop
push
push
mov
sub
lods
jae
mov
push
mov
jmp
and
pop
xlat
cmpsb
imul
sub
cwtl
cmp
ss
sub
dec
sbb
inc
fwait
loop
iret
scas
sbb
jp
enter
xlat
jle
cltd
out
testb
pop
push
add
repz
add
movsb
and
mov
jo
pop
jge
mov
xchg
pop
insl
test
jns
mov
shlb
lods
sti
aad
scas
popa
adc
lahf
jmp
xchg
xlat
mov
sbb
pop
loopne
rorl
iret
lret
add
testl
mov
out
mov
lret
mov
dec
arpl
sar
xchg
inc
mov
inc
or
out
and
jns
xor
sub
aam
add
adc
sbb
mov
cltd
xor
pop
jns
cmp
fwait
push
push
xchg
ret
cmp
enter
dec
xchg
pusha
or
cmpsl
pop
test
inc
aam
mov
mov
dec
push
out
inc
xchg
out
scas
stos
cmp
stc
dec
pop
inc
push
inc
imul
imul
push
mov
imul
pop
mov
inc
cwtl
xchg
push
add
xchg
aad
and
xchg
mov
lods
loop
mov
xchg
stc
imul
cmp
andl
push
cmpsb
outsl
stos
inc
sbb
ja
adc
cmpsb
aam
jg
dec
mov
pop
mov
pop
mov
test
lods
xor
mov
aas
jne
adc
add
test
out
lret
sub
mov
jecxz
inc
inc
outsb
int
ljmp
shll
push
scas
jno
cmp
aas
int
push
out
int3
jnp
repz
jg
sahf
in
fbstp
js
cmp
ljmp
add
in
sub
es
adc
inc
push
cmp
fiadds
xor
into
fs
add
inc
popf
cmp
test
xorl
repz
dec
sub
pop
std
test
fcompl
sbb
xchg
lods
jmp
cltd
sahf
adc
iret
and
repz
test
pop
jns
cmp
das
mov
or
mov
inc
xchg
push
ss
mov
sahf
jo
cmp
add
sub
aad
and
sub
fcomip
pushf
mov
jl
push
das
mov
mov
mov
sahf
xchg
pop
iret
movsb
mov
test
pop
and
mov
jbe
mov
jg
cmpsb
imul
les
divb
jb
jg
push
sbb
fsubs
fstpl
lea
loope
loopne
add
icebp
es
sbb
mov
cmp
dec
int
xor
mov
or
das
adc
pop
mov
dec
or
decb
xchg
sbb
ficomps
daa
ret
aas
add
xlat
jb
bound
out
outsl
pop
daa
test
out
jae
or
dec
sbbb
and
xor
aaa
loopne
cltd
inc
cmp
andl
fisubl
mov
and
out
js
jle
mov
leave
push
or
pop
cld
aaa
fadds
mov
fidivl
push
and
xchg
push
filds
and
xchg
mov
and
popa
cmp
paddsb
ss
push
shll
xchg
mov
mov
bnd
cmp
mov
and
mov
push
jle
outsl
push
sub
adc
addr16
ds
push
push
in
pop
pop
add
popf
lock
lea
or
scas
je
movsb
ss
jg
adc
dec
icebp
imul
mov
cmp
fisttpl
insb
pop
inc
cmp
movsl
adc
mov
cli
js
mov
sahf
sbb
inc
aas
int3
adc
lock
dec
jmp
mov
cmpl
out
xor
or
je
sub
mov
sub
outsb
int3
fsubl
mov
int
mov
hlt
mov
sub
out
cmpb
jp
sub
add
pop
and
imul
mov
xchg
daa
xor
mov
imul
pop
rorb
xchg
idivl
clc
pop
sbb
xlat
jle
and
pop
fidivrs
adcl
imulb
jns
jne
cmp
add
cli
fbstp
cs
fdiv
adc
mov
roll
lcall
pop
xor
xchg
je
mov
ss
xchg
xchg
sub
dec
jnp
sub
flds
mov
pushf
aaa
aas
loopne
or
sahf
insb
xor
jae
xor
xchg
adc
fldt
rclb
mov
mov
jno
mov
mov
cmp
xchg
mov
push
icebp
jns
std
xchg
cmpsb
push
int3
mov
jae
mov
ret
ret
pop
test
cmp
pop
sub
das
and
mov
outsb
adc
lret
mov
and
cmpsl
mov
mov
dec
fistl
rclb
push
rolb
iret
jl
inc
push
cmpsl
andps
fisttpl
icebp
in
mov
sti
push
jp
fwait
jmp
lahf
imul
sar
cmp
pinsrw
orl
int3
mov
insl
outsb
cld
pop
test
adc
iret
insl
and
inc
in
out
xorl
movsl
ja
repz
mov
mov
cmp
inc
adc
ret
pushf
in
sbb
mov
subb
mov
lods
aam
pop
stc
add
mov
sub
lods
iret
xor
and
xor
cmc
scas
add
inc
jl
enter
movsl
stc
cmp
in
imul
ljmp
pop
aam
icebp
and
repnz
mov
ret
fisubs
xchg
enter
inc
aaa
adc
leave
in
pop
test
sti
jle
mov
jbe
cmp
notl
xor
dec
sahf
pop
cs
out
fnstsw
cltd
lods
or
fldenv
mov
lret
int
mov
pop
xor
pop
mov
in
adc
sub
sbb
loop
xor
rclb
cmc
pop
xchg
adc
lea
scas
or
adc
dec
xor
int3
dec
lahf
push
adc
dec
jbe
or
adc
xchg
pop
rclb
or
xor
sub
pop
lret
insl
xchg
xchg
ljmp
push
jo
mov
gs
cmp
lahf
bound
adcb
lahf
dec
filds
lock
repz
push
fdivrp
adc
pop
js
sarl
lret
mov
ja
das
in
dec
sub
daa
out
iret
sbb
lret
and
inc
xor
js
and
or
pushf
sbb
cmp
and
ret
enter
jge
mov
push
aas
push
jne
fdivrs
fldl2e
scas
jge
fists
cmc
push
jnp
push
mov
fs
fsubl
mov
or
lock
mov
push
cmc
or
dec
inc
pop
cmc
lods
fdivl
bound
subb
pop
cwtl
adc
loop
dec
mov
mov
mov
push
sbb
ljmp
push
or
imul
cmp
test
mov
and
std
sbb
jnp
add
mov
cmp
mull
lods
in
fs
clc
inc
dec
outsb
sub
shrl
pop
insb
stc
lea
pop
mov
jne
aad
pushf
add
cmp
imul
cs
test
stos
test
xchg
lahf
add
lret
xchg
mov
push
jne
and
shll
insb
shlb
or
jne
ja
idiv
jge
daa
jp
cmp
fucomip
frstor
out
xor
add
lret
rcl
xchg
mov
inc
dec
xor
inc
std
add
adc
cld
rolb
sti
lret
jbe
dec
or
sbb
pop
push
cmp
pop
push
out
cmp
and
sub
ljmp
pushf
mov
lahf
adc
out
xchg
das
aad
xchg
add
call
les
rcr
out
fiadds
stc
cmc
and
or
jne
sbb
jmp
bnd
test
push
cld
mov
mov
cs
or
sub
rolb
incl
ljmp
out
push
cmp
dec
mov
mov
adc
add
mov
pop
nop
cltd
adc
movsb
push
xchg
sbb
jo
orb
pop
ljmp
repz
dec
mov
test
xchg
rol
lahf
cmp
lea
sbb
inc
mov
xchg
and
rol
fdivrl
in
add
dec
andl
mov
fs
or
adc
xor
or
push
jle
inc
push
dec
lods
push
lds
jmp
jne
or
dec
dec
sahf
mov
cmp
push
gs
addb
roll
lock
fisubs
xchg
nop
je
je
xor
mov
lods
jae
jb
jbe
adc
inc
lret
int3
std
dec
mov
sar
sbb
enter
or
ret
addb
dec
test
les
fnsetpm(287
mov
push
in
test
pop
cmp
popa
dec
dec
shlb
or
cmpb
repz
sbb
in
ret
std
loope
cmpsb
cmp
xor
mov
out
dec
mov
arpl
lods
jo
fs
ret
pop
push
iret
jo
int3
sub
jg
inc
mov
cmc
add
stos
pop
mov
and
xchg
mov
xchg
call
ret
mov
mov
out
enter
je
mov
sahf
pop
mov
push
mov
fadds
cmpsl
jbe
ret
sbb
in
lock
push
in
push
push
inc
jmp
lahf
mov
iret
in
pop
orl
ret
push
push
cmpb
int
out
insb
lods
or
jg
cmp
and
outsl
loope
fbld
lret
rcl
std
dec
ljmp
cmpsb
pop
jnp
jb
iret
jecxz
into
or
sub
inc
sbb
jbe
cs
ljmp
js
ret
jmp
mov
add
shr
push
mov
dec
cmc
fsub
into
gs
inc
xlat
pusha
pop
push
jbe
mov
inc
aad
pop
lahf
aaa
inc
rcll
int
bound
enter
test
orb
ja
int3
ret
std
test
adc
cmpsl
mov
test
lods
ds
mov
pop
insb
fidivs
push
fucomp
loopne
inc
dec
and
xlat
pop
das
jns
ficoms
pushf
ja
hlt
lcall
enter
lret
mov
insb
lods
mov
in
dec
leave
jg
fcmovu
ret
scas
push
shrb
mov
or
int3
roll
adc
pop
mov
repnz
cmpsb
je
pop
aas
adc
shrb
sub
jo
int3
add
rcrb
jne
out
movsl
push
sbb
cld
jnp
pushf
push
jg
imul
fbstp
pop
jnp
mov
popf
in
scas
ds
out
popa
mov
les
xchg
int3
mov
addr16
scas
in
pushf
loope
cmpsb
rcrl
in
jmp
push
popa
xor
sarb
mov
inc
mov
ror
clc
push
mov
sub
aas
aam
push
cli
cltd
and
inc
repnz
movl
shlb
add
mov
fcmove
out
xchg
jle
xchg
cmc
repnz
or
pushf
dec
lret
add
movsb
ffreep
mov
sub
loopne
mull
inc
dec
test
les
incl
dec
out
xchg
add
add
aas
fsubl
mov
xor
int
js
and
int3
enter
rcrb
xchg
sbb
inc
pop
scas
mov
pop
mov
aad
pop
or
mov
or
fadd
add
jns
dec
mov
daa
dec
add
inc
movsl
xor
push
xchg
or
push
pop
lds
jp
sub
mov
cmpsl
movsb
mov
lock
pop
pop
jp
cmp
cld
push
dec
jmp
mov
mov
push
pushf
inc
loop
adc
aas
inc
nop
sub
ljmp
insl
xchg
mov
in
sar
aas
aaa
jecxz
aad
filds
xchg
in
inc
or
xlat
jecxz
popf
push
pop
push
mov
adc
rcll
push
xchg
arpl
ds
xlat
push
xor
xor
in
or
push
icebp
cmc
out
movsb
aas
lret
rolb
lods
or
push
sbb
mov
or
jo
xchg
adc
loopne
orl
or
test
shr
cmc
enter
sub
shrl
mov
in
mov
dec
sub
je
sbb
fmulp
data16
es
repnz
int3
xlat
mov
push
mov
pop
mov
sbb
or
scas
lods
xchg
cld
ds
pop
or
call
mov
inc
dec
out
pusha
adc
mov
add
xchg
cmpl
dec
js
bound
add
jb
outsb
xchg
add
inc
mov
fs
dec
shlb
xchg
test
mov
repz
mov
sbb
fcoms
int3
fwait
xchg
cwtl
mov
push
push
popa
inc
arpl
mov
addr16
or
mov
fldt
mov
mov
mov
andnps
cmp
rcrl
xchg
cmp
jmp
pushf
mov
movsb
inc
mov
and
push
push
add
push
int
in
dec
inc
lcall
popa
orb
xchg
pusha
shll
mov
mov
or
push
aad
gs
cmpsl
dec
shrb
test
jnp
pop
popa
jb
insb
add
dec
ficoml
shlb
dec
fs
fcoml
sbb
adc
xchg
pop
ds
jbe
mov
es
frstor
add
xor
cmp
add
xchg
xorl
cwtl
sbb
jecxz
lret
mov
je
lods
sub
cld
xor
jne
xor
pop
cmp
loopne
mov
xchg
outsl
sbb
data16
sub
mov
rcll
fs
sbb
mov
push
xor
pop
mov
dec
xchg
bound
pushf
cmp
insb
enter
push
sbb
sarl
cmp
hlt
xchg
outsl
pop
fiadds
insl
repnz
ja
and
xor
shlb
scas
out
enter
xchg
testb
cltd
xchg
cpuid
fnstcw
push
and
leave
shr
jle
lcall
inc
adc
repnz
inc
add
dec
pop
pop
push
jmp
fnstsw
mov
push
mov
lahf
rcrb
scas
sub
mulb
cmc
mov
test
subl
outsb
mov
mov
and
cmp
and
scas
in
jge
xor
in
and
jl
jnp
lods
add
ja
mov
das
jl
mov
sbb
in
jecxz
scas
lret
call
rorb
into
orb
push
fs
stos
testl
pop
jge,pt
ljmp
idiv
sub
sub
aas
mov
and
std
mov
dec
xchg
mov
inc
in
negl
je
pop
mov
inc
cmpsb
adc
mov
mov
cmp
push
mov
xchg
push
cmp
insb
push
xchg
icebp
xchg
dec
push
fmull
and
ja
popf
sahf
pop
mov
ss
mov
inc
sbb
push
clc
xor
push
dec
or
dec
mov
sahf
sub
popa
lods
out
sub
cli
cld
xor
adc
arpl
sub
scas
fbld
fs
fs
xchg
xor
sti
movsb
mov
xchg
cmp
mov
cmp
lods
test
pusha
and
fs
add
or
repnz
gs
jne
push
repnz
rol
adc
cltd
or
xchg
jg
cmp
call
or
stos
popf
dec
loope
gs
push
xor
adc
cmp
pop
mov
mov
std
xchg
loope
mov
testb
sub
data16
mov
cs
jbe
stos
mov
xor
inc
or
sbb
pop
push
iret
adcb
pop
or
testl
cltd
pop
adc
stos
sbb
pop
js
std
add
sbb
dec
jecxz
rolb
shlb
dec
ret
xchg
adc
je
mov
cmpsb
add
cmc
mov
cmp
sarl
mov
add
jmp
sub
pop
cli
or
or
iret
cli
xor
es
sbb
and
push
mov
sbb
xor
mov
xor
jnp
push
mov
cltd
sahf
fsubl
adc
or
cli
cmp
sbb
loopne
rcrl
push
lcall
dec
inc
add
popf
incb
stc
out
jno
mov
cmp
ret
shlb
mov
or
clc
xor
fldcw
push
push
aad
add
adc
mov
ja
lods
outsl
or
les
test
fsubrs
lret
idivb
cld
imul
call
lods
pop
popf
and
sbb
gs
sti
push
mov
pop
adc
or
adc
jg
sub
fstl
sbb
dec
loope
add
push
jle
movb
dec
and
loopne
cld
dec
jl
sbb
outsl
mov
hlt
mov
push
je
jb
xchg
inc
mov
mov
dec
sbb
lcall
mov
cwtl
add
push
insl
xor
sbb
adc
jno
pop
cltd
scas
add
popf
jns
sti
inc
adc
mov
ds
pop
addr16
jne
sbbl
push
out
and
and
data16
bound
mov
getsec
test
notl
lods
into
sub
pop
adc
std
xchg
mov
push
outsb
adc
sub
xchg
cmp
dec
lahf
sub
cmp
sbbl
lahf
cmp
dec
imul
shrb
sahf
xchg
xorb
pop
and
mov
lret
shlb
mov
or
jne
mov
sub
dec
pop
or
jecxz
mov
pushf
xchg
jns
outsb
mov
test
sarl
inc
adc
push
add
and
xor
sbb
or
mov
xor
pop
lds
mov
mov
push
pushf
adc
push
add
mov
popf
fldl
js
sub
inc
aam
cmp
or
cs
add
arpl
mov
dec
ja
pop
jbe
in
movsb
mov
mov
sub
or
push
adc
pop
sub
sahf
jle
add
ljmpw
shll
mov
sarl
fdivl
xchg
mov
mov
out
rol
or
neg
mov
cmp
mov
leave
les
push
cmc
mov
or
inc
mov
mov
cltd
ret
fcoml
outsb
mov
fwait
jle
cmpsb
and
push
dec
ds
fcomip
jle
push
testl
ficomps
xchg
mov
fwait
pop
sarb
xlat
inc
enter
jns
jo
outsb
ljmp
jae
pop
and
ljmp
sarl
xchg
and
add
mov
aaa
and
push
pop
inc
push
aam
jmp
mov
loop
cmpsb
into
sbb
dec
fdivrs
jecxz
movsl
insl
int3
insl
cs
sub
stos
ret
gs
dec
lods
ss
lods
leave
sub
orb
out
dec
jmp
mov
mov
mov
inc
mov
sbb
into
push
pop
daa
lods
cmc
mov
shlb
movsl
bound
fnstcw
shlb
xchg
jp
add
movsb
mov
dec
push
icebp
scas
ja
jbe
popf
xor
pop
mov
loop
test
mov
mov
mov
cli
fwait
mov
test
into
mov
push
xor
lods
jns
inc
pop
push
xchg
lock
and
mov
int3
fdiv
push
fcmovne
sbb
mov
cmpsl
jnp
jae
mov
lret
ret
out
ja
fcoms
mov
or
xlat
xor
xchg
bound
push
shl
push
add
mov
mov
mov
iret
add
popf
test
aad
int
adc
daa
imul
and
pop
sahf
add
or
inc
scas
inc
in
mov
pop
mov
cmc
and
jp
and
jecxz
or
dec
sbb
test
xchg
stos
mov
js
mov
sub
cwtl
xchg
fldl
test
push
jno
les
ja
jmp
push
filds
xchg
mov
stos
fdivl
inc
inc
push
and
std
popa
sbb
ljmp
lahf
lcall
mov
mov
or
sbb
leave
dec
push
mov
or
pop
icebp
pop
pop
in
sbb
outsb
inc
push
xor
into
jle,pn
pop
inc
ss
js
inc
pop
xchg
sub
push
inc
lret
mov
push
mov
mov
movsl
mov
mov
stos
fs
dec
add
je
mov
push
jg
aad
enter
loopne
xchg
pop
xlat
sbb
jns
push
pusha
out
push
push
outsb
cwtl
aas
push
cmp
int3
test
push
outsb
loopne
aam
lea
nop
and
jae
lods
test
xor
sbb
adc
xor
test
xor
adc
add
sbb
enter
sbb
das
fcmove
sub
insl
pop
out
sub
add
xlat
jns
sub
pop
sbb
and
dec
push
ss
or
aaa
sbb
test
test
mov
pop
xchg
sti
push
std
xor
xchg
push
push
loop
filds
pop
enter
jecxz
cwtl
jae
add
aam
dec
sub
pop
push
or
jecxz
inc
or
cld
popf
pop
jmp
inc
pop
or
pushf
out
stc
cmpl
and
in
scas
or
hlt
jmp
adc
in
push
mov
cwtl
mov
push
sub
stos
movsb
jl
roll
xchg
sub
push
adc
jbe
mov
dec
loop
stc
lods
nop
test
mov
add
lret
mov
adc
sub
or
lret
sub
adc
jae
mov
and
cmp
add
outsb
std
imul
lret
inc
mov
aaa
push
xchg
pop
out
pop
out
mov
xchg
addl
dec
inc
sti
push
ret
sub
cmp
jnp
xor
popf
pop
scas
mov
pop
outsb
mov
xchg
fdivp
stos
jne
push
sub
mov
inc
add
outsl
cmp
sbb
and
aam
add
cmp
xchg
jb
dec
mov
in
ds
push
hlt
fmull
dec
roll
dec
int3
scas
mov
mov
dec
push
and
pop
pop
insb
mov
add
in
test
sarl
lock
push
cmpsb
mov
lods
imulb
pop
mov
add
inc
in
andl
lods
xchg
stos
cltd
inc
in
pop
in
fimull
inc
add
int3
xchg
mov
add
mov
call
rcrb
pop
fsqrt
pop
mov
jmp
faddl
xor
mov
dec
dec
rcpps
mov
nop
test
push
dec
push
cmp
sbb
ret
push
add
call
dec
ficompl
lods
mov
loop
jo
adc
popa
jecxz
stos
scas
sbb
call
mov
std
pop
inc
lds
push
add
outsb
lret
aam
into
mov
sbb
lea
fistl
jnp
and
insl
cli
addr16
and
repnz
int
fmul
movsb
push
sub
in
sahf
pop
mov
insb
ja
dec
filds
lds
xor
push
mov
jbe
cmp
push
and
mov
repnz
enter
mov
push
xor
jne
loopne
and
add
fldcw
insl
and
rcr
push
cmp
nop
mov
popf
int
movsb
shrl
pop
or
or
push
mov
loop
mov
xchg
lea
stos
test
imul
push
adc
xchg
xchg
std
or
mov
pop
std
fwait
iret
and
hlt
test
sub
mov
pop
es
movsl
cmp
ret
lds
insb
push
mov
frndint
rolb
or
sub
cmp
inc
jmp
mov
int3
adc
push
and
xchg
adc
imul
jno
and
lret
loopne
pop
fs
mov
inc
fwait
outsl
adc
jb
xchg
out
bound
mov
pop
clc
push
addr16
sub
cwtl
popa
mov
je
fisubrs
aad
std
int3
bound
mov
mov
mov
ret
xor
rorb
inc
sbb
das
sub
decl
jns
inc
add
xor
call
mov
add
push
stc
cs
inc
add
cmp
in
pop
enter
enter
add
popl
bound
xor
int3
push
jle
add
cmp
xchg
sub
adc
pop
sub
ljmp
push
pop
and
cmpsl
sub
mov
sub
push
int3
scas
lret
xchg
xchg
pop
and
jmp
xchg
mov
pop
cmpsb
sub
add
filds
incl
push
fdivs
xchg
data16
xlat
xchg
test
test
pop
jnp
add
xchg
test
imul
rclb
leave
xor
mov
shlb
das
or
sbb
lock
mov
rclb
fsubs
sbb
mov
or
add
xor
addb
fnsave
xchg
or
cmp
iret
adc
pop
adcl
fadds
hlt
rep
clc
out
loop
outsb
xchg
or
stc
cmpsb
xor
jns
shlb
enter
test
iret
ja
mov
jno
xchg
mov
mov
int3
les
or
clc
or
jae
pop
dec
std
lret
push
sahf
cmpsl
fsub
cmp
fadds
loope
or
das
popf
push
fcmovnu
and
dec
mov
imul
mov
jne
enter
push
mov
dec
xchg
xor
clc
inc
mov
jno
or
ret
bnd
popf
lea
xchg
mov
cmpsl
jns
stc
ret
sbb
fidivs
inc
pushf
add
fldcw
mov
mov
int3
cmp
adc
mov
mov
pop
into
insb
ljmp
sub
mov
cmpsb
mov
ja
jecxz
xor
aaa
es
jne
mov
add
lds
mov
cmpsl
fnstcw
fdivs
ds
cld
subb
xchg
jo
inc
xchg
popf
or
mov
sarb
imul
dec
loop
dec
jmp
push
jle
push
mov
in
rcl
adc
pop
mov
mov
lock
dec
aam
dec
stc
mov
shll
aad
mov
sbb
lock
push
jmp
fwait
or
or
js
xor
pop
xor
mov
sub
shr
leave
xorl
mov
xchg
cmp
icebp
lret
or
rcrb
stos
cmpsb
push
cmp
repnz
and
push
lods
adc
sub
daa
sbb
aad
in
push
or
jne
mov
sahf
das
mov
sahf
dec
jo
pop
testb
jp
cwtl
cwtl
repnz
pop
dec
xorl
in
cwtl
xchg
xchg
cmp
jecxz
stos
adc
sub
movsl
dec
jge
inc
pushf
mov
inc
pop
inc
push
jbe
push
mov
jne
stos
push
cmp
jmp
in
iret
sub
jo
pop
adc
mov
mov
dec
push
push
fdivs
add
dec
jne
or
xchg
fbstp
pop
in
adc
adc
pop
ret
sbb
scas
int
cwtl
ja,pt
rcl
roll
inc
adc
outsb
sbb
fildl
test
push
insl
jp
xchg
mov
test
mov
and
pop
fdivr
pop
movaps
push
movl
aas
sbb
or
rorl
mull
mov
jle
sbb
lret
pop
inc
imul
push
les
add
cmp
dec
mov
jl
insl
mov
mov
daa
int
inc
sbb
cwtl
stos
mov
add
fwait
ret
dec
sbb
mov
ficomps
lds
dec
addr16
mov
push
test
mov
xchg
inc
mov
ucomiss
cmpsl
pop
movsl
js
mov
cli
cmpsl
ficomps
cmp
call
sbb
xchg
dec
sub
aam
push
lods
xchg
invd
mov
adc
mov
and
stos
jae
repz
or
ret
xor
inc
mov
adc
pusha
mov
sbb
pop
mov
dec
dec
pushf
pushfw
jb
mov
fisttps
divl
inc
test
pop
sti
lret
sahf
jb
jmp
sub
movsb
lds
pusha
icebp
jo
jno
push
in
cmp
or
cmp
or
mov
test
cmp
mov
ljmp
xor
mov
inc
adc
lods
and
mov
add
sbb
leave
pop
xchg
pop
sbb
fs
xchg
mov
mov
movsl
or
inc
mov
push
add
ret
push
pushf
jge
xor
mov
faddp
loopne
xchg
mov
xor
xchg
stos
pop
add
pushf
add
jle
outsl
rcl
cwtl
and
sbb
sub
cld
push
or
aam
int3
jae
lea
scas
sub
clc
sub
or
xchg
sub
stc
loope
popa
xor
hlt
pop
mov
pop
jnp
adc
mov
add
jge
pop
dec
mov
js
or
nop
in
sarb
cmp
push
mov
xorl
mov
lret
icebp
or
test
jecxz
inc
lahf
jl
cmp
data16
jb
daa
pushf
outsb
xor
sbb
add
jge
fstpt
mov
inc
xchg
push
scas
cmp
xor
xchg
jns
popa
jmp
mov
repnz
dec
orl
add
push
stos
test
es
testb
icebp
jo
mov
add
out
add
dec
and
rcl
divl
xchg
stos
mov
shl
fld
fs
addr16
ficompl
push
loopne
fildl
inc
push
jp
mov
mov
push
pop
call
or
out
xchg
je
push
xchg
rcrb
lret
loop
push
mov
std
icebp
push
and
push
xchg
dec
sbbb
paddusb
and
cmp
bound
scas
sbb
sti
jge
cmp
and
adc
frstor
mov
stos
repz
bound
testb
dec
push
inc
pop
sub
test
out
xorl
jbe
sub
fcoms
mov
jbe
sbb
mov
lcall
cmp
enter
adc
pop
mov
cmp
pop
hlt
ret
ret
lret
test
es
cmp
nop
pop
xchg
data16
jmp
cmp
shlb
adc
js
leave
push
mov
lea
mov
out
inc
mov
xchg
mov
in
lods
cmp
xchg
repnz
fstpt
loopne
add
inc
mov
sub
out
mov
xor
enter
push
hlt
ficoms
mov
mov
mov
or
es
jnp
std
dec
push
out
ret
push
lcall
cmpsb
shrl
jg
mov
lea
inc
push
dec
jg
cltd
fadds
int
je
sahf
adc
ret
pushf
jae
adc
addps
sbb
fdivl
and
imul
notb
and
or
xchg
xor
push
int3
fdivrp
and
cld
dec
bound
shrl
popf
or
inc
dec
jmp
cwtl
push
xchg
xchg
fwait
into
decl
out
shlb
ret
mov
inc
mov
xchg
das
stc
adc
inc
loopne
or
push
mov
stos
pop
mov
mov
sbbb
xor
repnz
mov
filds
in
je
mov
and
sub
les
mov
subl
cmp
push
stos
lods
push
add
je
xchg
sub
sub
adc
dec
push
adc
ds
jns
fdivrl
push
arpl
push
sahf
or
add
xchg
ljmp
into
mov
repnz
or
insl
inc
popa
sbbb
dec
aas
in
lret
clc
pusha
fwait
mov
subb
cmp
clc
mov
test
clc
jbe
pop
mov
addr16
inc
addb
ret
enter
push
arpl
sahf
sbb
push
in
cmp
cld
xchg
cmp
push
sahf
in
cwtl
cs
pop
test
mov
mov
cmp
bound
mov
inc
fmull
xchg
outsl
negb
pop
lcall
cmc
mov
rolb
in
pop
mov
outsl
add
das
outsl
pop
mov
and
gs
test
popa
and
push
mov
and
cltd
xor
imul
je
dec
pop
mov
sub
cmc
lods
add
mov
aad
adc
insb
ret
and
xchg
and
out
in
dec
and
jbe
movsl
mov
sbb
out
fsubs
sbb
pop
pop
addb
int
sti
push
mov
dec
xor
popa
pop
jle
insb
inc
and
mov
cmpsl
mov
mov
xchg
iret
push
sarl
pop
pop
pushf
sub
clc
sbb
sub
test
scas
inc
mov
mov
out
mov
adc
add
push
mov
data16
imul
fistpl
rcr
mov
fisubrs
jp
mov
divb
jle
add
push
adc
jae
inc
les
aaa
push
and
mov
bnd
ret
movsb
cmp
jg,pn
xchg
jo
jle
mov
out
cmp
movsl
or
cltd
inc
leave
cmc
in
push
mov
ret
sbb
test
xchg
mov
dec
test
int
adc
jecxz
mov
nop
outsb
cmpsb
js
sub
mov
dec
notb
pop
mov
push
add
jmp
orb
and
push
xor
add
and
xor
cmp
lea
rcl
and
sarl
sub
cltd
push
cli
test
mov
aam
mov
mov
or
dec
loop
aam
and
mov
roll
fidivl
scas
lahf
test
rcr
fadds
push
in
lcall
in
call
mov
arpl
sbb
and
add
shrl
pop
mov
fs
cltd
addr16
push
mov
vmovss
adc
jge
and
xor
jns
jo
fs
jg
dec
mov
mov
mov
adc
fchs
shl
lea
mov
cmp
in
lock
jp
mov
add
roll
add
dec
xchg
je
mov
fwait
pop
jle
in
jbe
mov
out
sbb
jecxz
jne
stos
and
mov
pop
cmp
mov
test
repz
sub
jae
loope
cmp
ljmp
stos
dec
mov
lds
cmp
stc
leave
pop
dec
xchg
jnp
dec
inc
add
leave
adc
inc
xor
shl
in
or
add
insb
outsl
cmp
imul
xor
jne
aam
jne
xchg
adc
lcall
dec
lahf
xchg
pop
xor
mov
orl
and
loopne
mov
xor
dec
mov
out
inc
inc
loopne
xchg
xor
mov
mov
dec
mov
mov
mov
mov
mov
dec
test
lock
loopne
popa
jo
inc
cmc
out
lea
fbstp
dec
shlb
cmp
fcomp
popf
pop
repz
das
jae
mov
mov
or
sub
dec
aad
mov
inc
int
cs
int
pop
jnp
aad
sbb
adc
sbb
inc
push
adc
iret
or
in
sbb
mov
decl
or
mov
sarb
xor
sub
and
lahf
ret
push
inc
jbe
les
pop
and
pop
mov
movsb
inc
pop
jbe
mov
push
pop
or
pop
xor
push
dec
roll
fs
dec
in
cmc
lods
sbb
shl
inc
mov
mov
xchg
jge
jecxz
push
push
out
rol
sub
icebp
stos
pop
pop
or
or
add
push
push
or
pop
cmpsl
popf
seta
jge
stos
and
cmp
xchg
xlat
fwait
repnz
or
jns
pop
lret
lret
mov
cmp
sbb
xchg
inc
lea
mov
push
je
mov
test
leave
xchg
pop
add
imul
jnp
cmp
movsb
rorb
xchg
andl
daa
mov
push
and
test
dec
jbe
cmpsl
pop
cmp
ljmp
and
mov
add
ss
pop
sbb
jns
push
jb
xorl
daa
fs
das
std
sbb
pop
stos
adc
jecxz
adc
inc
and
add
inc
inc
ljmp
test
lock
or
ljmp
add
push
pop
pushf
push
fwait
sub
test
icebp
movsl
sbbl
popa
addr16
mov
or
pop
jnp
adc
mov
mov
enter
out
aad
and
out
cmp
stc
lret
dec
test
mov
call
mov
inc
rdmsr
push
sbb
cmp
cmp
bswap
bound
lods
das
pop
pusha
pop
rorl
mov
in
lret
xlat
and
dec
dec
xchg
add
pushf
scas
push
jno
out
arpl
xchg
or
dec
cld
fstl
or
negb
jb
mov
lcall
lcallw
fsubrp
subb
xor
int
and
jno
ja
lret
mov
pop
inc
aad
std
out
ljmp
bound
sbb
xlat
cmp
pop
neg
lahf
pop
push
mov
fxch
ret
sarb
sub
outsb
push
addr16
and
push
loopne
fisttpl
sbb
mov
add
pop
test
int3
or
xor
sub
sbb
cltd
mov
xor
idivl
scas
push
and
fdivp
mov
mov
add
jns
mov
or
sbbl
fs
in
pop
jae
xor
cmp
in
aam
jbe
xlat
pop
dec
in
in
ja
mov
fmull
cli
imul
jae
std
xor
outsl
clc
jbe
add
ss
mov
sub
call
push
into
xchg
add
fsubrs
jmp
repz
mov
pop
scas
mov
inc
and
inc
xor
push
aaa
push
xorb
mov
pop
aad
push
xchg
ret
shlb
pop
pop
push
dec
fwait
daa
mov
data16
xor
out
jmp
jno
pusha
decb
fwait
loope
in
dec
fists
popf
xlat
daa
lock
dec
test
dec
jo
jb
xor
loope
jo
iret
adc
pushf
lahf
jmp
movsl
mov
sarl
ficoms
testl
or
inc
shll
lds
int
mov
xchg
push
movsl
xchg
loopne
out
hlt
mov
push
ja
inc
cmp
push
xor
imul
in
mov
ljmp
cmp
ret
inc
mov
shll
dec
sbb
xchg
clc
idivb
jbe
mov
sub
sbb
mov
mov
ss
xchg
sub
mov
lods
movsb
sub
push
push
loop
inc
dec
dec
loop
cmp
out
js
mov
push
cwtl
testb
and
jnp
mov
int3
pop
rorl
aad
idivb
in
jbe
add
cli
add
sub
cmp
xor
cmpsl
add
inc
loope
pop
sub
adc
cltd
aam
enter
in
xor
aaa
push
add
sbb
ret
lcall
stos
leave
jno
sbb
adc
repz
push
ror
test
push
call
inc
aam
dec
pop
roll
lods
and
adc
push
imul
add
enter
jb
jle
fnstcw
adc
mov
xor
pop
xlat
neg
test
repnz
test
mov
loop
cmp
inc
lock
fwait
sbb
mov
jno
xor
mov
pop
fidivrl
subl
insb
sbb
push
mov
insl
xchg
fwait
sub
xor
movsl
xor
mov
push
out
rclb
pushf
dec
mov
jne
test
shrb
ror
cmp
mov
icebp
or
mov
push
sub
or
dec
inc
dec
push
adc
dec
dec
hlt
loopne
sbb
xorb
mov
inc
fstpt
mov
push
mov
sub
xchg
out
mov
jecxz
divl
xor
inc
pushf
mov
dec
mov
rolb
int3
pushf
inc
dec
pop
imulb
repz
and
ss
pop
adc
mov
lret
cmp
xor
clc
mov
xor
mov
negl
cmp
cmp
sub
popf
loopne
ficomps
subb
out
in
cmp
ja
dec
sbb
repnz
adc
ret
xor
sub
inc
popf
rcrb
insb
xlat
jle
pop
or
mov
dec
enter
aas
ja
aad
arpl
in
fimuls
mov
jp
xor
dec
or
aad
pushf
push
push
in
popa
and
pop
add
out
in
jnp
notb
cli
mov
or
xor
mov
fsubl
inc
pop
cwtl
jecxz
jmp
std
and
arpl
mov
mov
stos
add
movsl
pop
loop
push
dec
mov
sbb
pushf
ror
pushf
scas
xor
mov
addr16
fldt
mov
out
or
stos
sub
mov
mov
jno
movsb
fs
ja
xchg
dec
negl
cmpsb
adc
push
xor
test
imul
mov
test
dec
mov
pop
fstpt
adc
or
sub
ss
cmpl
ja
and
push
xor
push
mov
jo
sub
dec
cmc
stos
dec
cli
and
leave
inc
cmp
cmp
gs
push
pop
fcoms
lahf
xchg
jge
add
add
mov
pushf
stos
scas
pop
pop
sub
pop
lods
test
lods
ljmp
add
scas
inc
dec
adc
in
das
cmp
inc
es
pop
cmpsl
js
icebp
xor
in
inc
test
push
mov
leave
jecxz
arpl
sub
pop
add
adc
rclb
or
cmp
cmp
pop
pop
dec
mov
daa
out
out
dec
jg
mov
sbb
call
lret
pop
adc
adc
in
mov
fs
sbbb
dec
mov
xchg
fisubrs
jbe
mov
xor
mov
adc
sub
sbb
pop
jecxz
shl
xchg
testl
std
add
or
adc
aad
mov
pop
orb
mov
movsb
inc
xor
dec
mov
and
nop
sbb
leave
in
pop
dec
xor
fcomip
jns
cli
pop
jb
xchg
mov
xor
jns
loope
fsubrs
inc
push
nop
ror
dec
xchg
stos
shll
pusha
xchg
subl
cmp
repz
adc
dec
push
sbb
addr16
mov
jbe
in
sarl
popa
inc
mov
jno
loop
popa
pop
insb
aam
jnp
lock
cmp
ret
mov
icebp
lods
inc
mov
dec
pop
fldenv
mull
xchg
mov
clc
fsubl
out
cmp
imul
and
das
pop
xchg
pop
add
stos
iret
xor
shll
rorl
inc
dec
xchg
loope
in
pushf
jmp
pusha
mov
subb
mov
ja
repnz
cmp
sbb
jecxz
ret
push
adc
cmp
push
mov
loop
es
xchg
sub
pop
or
fmull
mov
je
push
mov
mov
dec
and
sbb
inc
movsb
jle
subl
rclb
add
inc
mov
shrl
or
pop
xchg
mov
lods
mov
and
stc
out
sahf
shrl
cli
jo
xor
xor
pop
mov
popa
cmp
in
mov
or
loop
dec
std
dec
xchg
pop
lahf
lret
ja
sub
repz
cwtl
out
pusha
gs
inc
arpl
gs
jno
sub
rolb
inc
pushf
dec
mov
imul
gs
mov
push
mov
mov
inc
add
je
fistl
rorb
pop
jge
sub
pop
xchg
xchg
mov
pop
in
jo
xchg
jae
push
or
insb
insb
scas
inc
imul
xor
lods
pop
cli
mov
shr
xlat
mov
fmul
sub
imul
stc
pop
in
dec
add
push
inc
lahf
testl
push
push
mov
fisttpl
mov
jecxz
inc
repnz
jns
insb
and
inc
push
mov
data16
push
das
stos
mull
cs
iret
pop
xchg
jecxz
xchg
mov
imulb
out
fsubl
sub
sub
xlat
das
mov
adc
adc
test
mov
and
aas
movsl
ja
push
xor
decb
sbb
daa
cmp
mov
cmp
aas
clc
cmp
in
pop
test
popa
adc
cmp
flds
popf
pop
push
pushf
mov
ds
lods
arpl
mov
sub
sbb
push
adc
ret
or
lods
mov
imull
cmpl
lds
xchg
pop
pop
xor
jae
mov
mull
and
lods
add
cmp
jl
jle
fs
out
add
fcoml
dec
in
adc
adc
cmp
mov
push
mov
loop
iret
xchg
test
dec
cmp
and
mov
sbb
aad
adc
xor
enter
aam
ja
add
dec
out
ficomps
inc
push
cmpsb
push
mov
or
repnz
add
mov
popa
jb
mov
cltd
les
cmc
out
cmc
jg
out
xor
mov
or
stos
loop
fisttps
std
pop
ss
push
jle
pop
addr16
in
and
mov
and
and
cmp
lock
dec
lds
add
icebp
fld
outsl
jo
mov
add
int3
rolb
dec
clc
mov
or
sub
mov
xchg
xor
xchg
xor
cmc
lcall
cmpsb
add
cmpsl
sub
lock
fisttpl
test
push
xchg
movsb
pop
jmp
lds
ret
mov
xchg
push
cmpsl
mov
es
mov
shrl
pop
fdivrl
push
repnz
jae
loop
std
mov
sub
call
popf
rorb
add
sarb
sub
xchg
sbb
enter
mov
sahf
insb
ja
dec
or
push
scas
cs
pop
sti
adc
lret
pop
push
push
cmp
clc
in
jnp
jmp
in
shlb
xchg
push
stos
push
mov
repnz
push
aam
jne
xchg
add
lea
push
or
jge
shlb
pop
das
arpl
jge
out
xchg
std
inc
je
mov
sub
jle
das
jecxz
cmpsl
mov
xorb
add
ja
xchg
xchg
out
pop
mov
jl
clc
or
sub
cmp
pop
movsb
sub
stos
pop
cmp
cmpsb
inc
imul
loopne
outsb
test
dec
sub
push
inc
adc
mov
adc
mov
mov
mov
lret
pop
pop
sub
xor
and
mov
inc
mov
dec
cmp
sub
cmpsb
fwait
int
cmp
sub
push
or
mov
xchg
push
adc
push
sbb
fldl
loope
pop
adc
sub
xchg
lret
popa
enter
and
imul
icebp
add
and
leave
arpl
push
sbb
fdivl
fnstenv
sbb
pushf
dec
or
jbe
test
mov
inc
stos
adc
pop
push
loopne
lret
movsl
loope
lahf
data16
imul
nop
dec
jl
std
and
mov
das
sbb
movsl
and
jecxz
mov
push
iret
mov
push
mov
inc
or
test
fmulp
mov
jb
mov
leave
adcb
xlat
sub
stos
out
and
jnp
aam
jp
adc
mov
and
test
inc
out
daa
adc
dec
mov
inc
aam
jg
push
jp
fists
cmp
mov
sbb
xchg
mov
mov
xor
cmp
int
orb
sarb
movsb
jae
in
xchg
xchg
mov
dec
dec
push
jle
xchg
push
cmp
mulb
sub
fdiv
mov
xor
aam
insl
and
inc
dec
insb
sbbb
shr
mov
inc
cld
and
das
inc
jg
mov
js
in
add
pop
cmp
std
pop
fs
pop
mov
and
jmp
jge
neg
std
cmpl
popf
imul
nop
pop
xor
jbe
mov
mov
lods
mov
xchg
movsb
testl
repnz
mov
sbb
jge
cmc
jle
mov
outsl
push
aad
or
js
call
outsl
lret
mov
fwait
sub
sar
in
or
xor
mov
sarb
das
xor
or
cmp
test
in
addr16
adc
adc
or
or
pop
mov
jecxz
out
mov
pop
mov
call
test
push
stc
shrb
add
movsb
push
add
cmp
inc
sub
push
lcall
outsb
daa
add
cmpsl
pop
out
movl
xor
pop
and
jg
add
xor
mov
mov
xor
inc
imul
xor
jmp
sarb
add
pop
addl
movsb
push
cmp
push
add
ljmp
movsb
adc
fdivs
lods
and
rep
in
fs
xorl
nop
dec
loopne
mov
aas
cs
shr
movsl
push
or
cmp
dec
lret
jp
aas
notl
adc
sbb
pop
or
jmp
cli
sti
out
dec
adc
inc
fwait
scas
das
inc
mov
in
cltd
jnp
sahf
adc
inc
sub
loopne
bound
mov
shrb
ficomps
mov
sbb
orl
in
cmc
cwtl
leave
aad
mov
rcr
adc
cmp
fimull
lret
and
add
adc
xchg
rcrl
enter
mov
mov
mov
clc
adc
inc
int
aam
addr16
loopne
cmpsl
fistpl
mov
fwait
pop
pusha
dec
je
xor
cs
cs
inc
lock
sahf
add
xchg
negl
test
adc
aaa
rcl
push
in
ljmp
fsubl
push
mov
lock
xor
iret
out
or
push
and
cmp
mov
in
add
cmp
sbb
pop
imul
and
int
imul
or
and
mov
gs
mov
sbb
xchg
lahf
push
xlat
ficompl
mov
dec
and
repnz
enter
into
mov
inc
mov
iret
lcall
pop
sbb
push
repz
xchg
add
push
push
push
mov
aad
lods
js
lds
in
dec
mov
push
push
clc
movsb
push
clc
mov
mov
mov
adc
ljmp
add
add
inc
jns
sub
insb
lods
push
gs
lods
pop
xchg
loop
std
pop
out
sub
mov
xor
pop
cmp
mov
and
mov
mov
imul
cmp
in
mov
cwtl
xchg
dec
jbe
inc
loopne
sbb
mov
adc
add
xor
jae
pop
jae
enter
xchg
inc
iret
inc
pop
mov
loop
adc
fisubl
rcrl
sub
sbb
pop
adcb
push
sbb
pop
insl
aaa
daa
add
mov
movsb
mov
pop
push
mov
test
pusha
push
loope
stc
sub
fnsave
and
subl
mov
fsubrl
cld
sbb
data16
push
sbbl
sbb
fwait
cwtl
in
xor
lock
xchg
sahf
jmp
pop
mov
int3
sub
call
int3
mov
shrb
mov
jno
call
add
jp
mov
ss
cli
pop
sbb
test
and
lea
dec
mov
adc
jge
rcl
mov
xchg
xchg
mov
xchg
mov
jo
jb
bound
negb
jle
xchg
sbb
sbb
testb
push
fwait
hlt
push
add
int
scas
aaa
dec
pop
push
adc
cmp
lcall
and
rcr
adc
jecxz
imul
add
or
sbb
inc
addr16
jne
pop
gs
inc
mov
and
sbb
mov
loope
ss
movsb
mov
mov
cmpl
cmc
push
cmpsb
jl
and
pushf
add
push
insb
mov
push
cld
aad
lea
pop
ja
in
hlt
xchg
sbb
int
mov
add
jbe
or
sti
and
xor
jmp
xor
xchg
and
or
sub
aad
data16
outsb
test
jno
fmul
hlt
rorl
xchg
lret
push
pop
mov
repz
jge
into
insb
pop
arpl
jnp
aas
xor
pop
into
aad
rolb
cmc
std
adc
xlat
les
rcrl
jl
dec
sub
sub
test
addl
loope
dec
jge
sti
fadd
test
aam
clc
in
cmp
mov
das
mov
cmp
in
push
faddl
in
dec
daa
pop
mov
les
mov
push
xor
sbb
lods
xor
push
cmp
mov
inc
cmc
or
insl
into
sahf
outsl
lods
test
movsl
mov
test
mov
inc
jo
jns
pop
dec
mov
lods
xor
shrl
sti
mov
xchg
test
or
mov
cmpsb
xlat
mov
fdivr
enter
and
subl
dec
lahf
fbld
dec
cli
addr16
pop
mov
arpl
in
dec
mov
sti
push
enter
xchg
inc
jecxz
sbb
stos
push
xchg
mov
jl
xor
dec
jecxz
int
xchg
setl
fstpt
call
pop
mov
jae
sahf
jbe
push
stos
and
sahf
leave
pop
ss
jne
pop
mulb
sbb
es
cmpb
bound
mov
shlb
call
in
cmp
jnp
ljmp
push
mov
icebp
jno
je
inc
sahf
std
movsl
pop
xchg
dec
xlat
xor
testb
aam
sti
call
dec
sub
js
dec
mov
xor
sub
int
xchg
nop
and
jo
mov
pop
sub
mov
pop
mov
shl
jnp
fcomip
std
dec
mov
pop
xchg
add
xchg
ds
push
pop
dec
sbb
push
xchg
xorb
cmc
orl
scas
daa
mull
in
mov
or
aas
and
lcall
mov
push
rorb
mov
mov
bound
lcall
cmp
loop
fs
xchg
and
rcrl
lahf
out
rcrb
repz
pop
sbb
pop
mov
out
fnstenv
lcall
xor
lcall
xchg
sbb
loopne
push
or
cmp
bound
or
sub
mov
fildl
mov
jnp
call
mov
and
sti
dec
sbb
pop
imull
testb
shll
test
stc
insb
jg
rcr
aas
dec
cltd
loopne
and
sub
push
popa
scas
sub
repnz
movsb
xor
mov
daa
imul
fsubr
int
sti
test
aad
jp
sbb
xchg
xor
ret
add
add
xchg
jmp
scas
jns
mov
outsb
push
mov
pop
add
push
cmp
call
fidivs
sub
loop
or
popa
or
and
inc
mov
cmp
insb
addr16
pop
xlat
cmpl
mov
xor
push
popa
xchg
cmp
data16
cltd
lock
into
jb
fdivs
xor
repnz
aas
out
push
fwait
and
rcll
mov
cmpb
insb
leave
mov
out
nop
shlb
clc
aaa
mov
cmpsl
push
mov
sub
cltd
inc
adc
inc
and
xor
pop
stos
ljmp
popa
pop
cld
lea
push
std
and
aad
sarl
faddp
xlat
push
loop
dec
outsb
call
pop
xor
loopne
aaa
loopne
addr16
sbb
das
outsl
cltd
mov
mov
add
inc
and
movsl
das
push
jle
cwtl
scas
repnz
xor
cmp
inc
enter
dec
push
addl
mov
mov
fildll
jno
xchg
addl
mov
mov
add
sub
out
sub
dec
lcall
and
test
cmp
mov
test
inc
fnsave
cmp
push
dec
dec
cwtl
test
add
lret
jle
push
cs
mov
push
aas
inc
inc
out
inc
mov
or
sahf
pop
jecxz
dec
inc
sbb
push
data16
fs
leave
jp
dec
jne
fdiv
dec
push
add
jno
and
fcmovb
test
cmc
pop
test
movsl
cwtl
or
in
test
and
push
mov
mov
add
cli
inc
dec
xor
outsb
repz
stc
icebp
bound
and
inc
adc
inc
push
fistl
icebp
bnd
dec
mov
iret
xchg
jmp
sbb
dec
adc
out
mov
scas
dec
dec
xchg
lcall
call
push
call
dec
cwtl
xor
fwait
mov
loope
add
jae
or
stc
mov
mov
xor
test
loopne
mov
imul
mov
aam
mov
mov
and
sbb
sarb
mov
fs
lcall
dec
jno
add
aad
dec
loopne
outsb
pushf
xchg
pop
hlt
cmpsl
lods
xor
sbb
or
add
pop
mov
and
mov
lcall
jnp
test
ja
aaa
and
rorl
pop
jo
sub
adc
add
cmpb
pop
fdivr
pop
dec
dec
hlt
fadd
add
adc
pushf
cmp
inc
jle
mov
sbb
in
mov
push
dec
xchg
icebp
js
mov
sbb
adc
xor
or
jge
mov
out
pushf
pop
mov
inc
push
push
sub
cmp
shrb
sti
dec
xchg
sub
push
leave
pop
fsts
ret
out
jne
outsl
push
out
jb
cmc
pop
xchg
mov
into
icebp
add
add
scas
cmp
pop
cltd
mov
in
lods
pop
cltd
adc
cmp
dec
sbbb
insl
mov
sub
push
repnz
mov
test
dec
jle
mov
pushl
and
inc
jl
dec
and
cmp
add
push
pop
je
and
cmp
je
popa
cmpsb
in
or
out
dec
ja
mov
dec
js
test
out
bound
hlt
sub
pop
mov
jg
push
subb
int3
and
out
gs
mov
dec
pop
out
int
add
cmc
mov
out
in
jnp
push
mov
or
mov
sti
jbe
cld
pop
xchg
idivl
lret
lcall
pop
or
fcmovnbe
fwait
ds
mov
xchg
add
std
dec
lret
pushf
cs
pushf
or
or
in
test
aaa
mov
cmp
hlt
or
les
mov
imul
add
pusha
in
sarl
mov
or
mov
mov
mov
xchg
jmp
popa
std
out
gs
clc
fwait
mov
cmc
fwait
jno
and
add
call
jmp
dec
mov
cmp
in
imul
xchg
imul
out
xchg
mov
in
mov
dec
inc
test
add
lcall
call
mov
shl
push
fiadds
pop
arpl
and
repnz
rcr
adc
out
jl
push
stc
dec
adc
sbb
lret
jmp
pop
adc
ljmp
ds
sub
loopne,pt
mov
lock
push
fidivl
arpl
push
cmpsl
fwait
jb
adc
pop
and
and
aaa
mov
stos
mov
call
clc
adc
push
daa
mov
mov
xchg
dec
adc
outsl
outsl
adc
inc
sbb
cwtl
jae
xchg
mov
add
test
dec
sbb
add
sub
call
cmp
loop
and
cs
mov
std
mov
mov
jl
adc
xchg
inc
das
sub
stc
push
je
rorl
stc
je
mov
sbbl
scas
lahf
das
aad
fnstsw
xlat
push
testl
ficomps
test
int
out
clc
push
out
lods
stos
stc
out
sub
sub
jne
cwtl
into
bound
inc
into
push
lods
xor
int3
dec
pop
push
add
rorb
mov
mov
aad
push
daa
das
xchg
les
sub
subb
jno
jno
mov
and
mov
dec
in
mov
int
mov
fidivs
jmp
pop
cmp
fmull
cmpsl
jns
and
jns
outsl
cltd
xor
fwait
add
das
dec
inc
add
fdivrs
fnstcw
pop
mov
mov
adc
and
cli
sub
popa
add
xchg
popf
sub
sahf
pop
nop
into
test
fs
mov
xchg
jae
xor
xor
push
cld
xchg
imul
adc
adc
stos
fldt
cmp
lcall
repnz
test
enter
test
mov
mov
inc
call
and
mov
dec
int3
inc
sbb
fisttpll
jb
push
shlb
push
mov
sahf
mov
stos
imul
xor
in
sbb
push
pop
jle
xorl
incb
mov
ret
mov
rcr
cmp
mov
add
int3
mov
fwait
or
imul
cmpsl
mov
and
out
incb
pop
inc
mov
xchg
ficoms
fs
mov
push
xchg
das
faddp
call
daa
mov
mov
add
pop
xor
roll
ds
xor
sahf
dec
mov
push
xchg
pop
push
aas
fs
adc
je
gs
movsb
sub
bound
insb
adc
jmp
and
div
ja
out
ja,pt
and
mov
sbb
jns
aaa
idiv
sbb
xlat
cwtl
int
lods
into
push
in
mov
arpl
xchg
push
loop
add
outsb
inc
inc
or
js
inc
push
fs
pushf
sub
loop
push
push
insb
cmp
or
mov
xchg
gs
mov
mov
mov
incl
popa
jp
rorb
or
lret
lock
pop
dec
fidivl
and
mov
and
pop
inc
xor
fucomip
lock
mov
jbe
dec
negb
ss
inc
or
hlt
pop
sub
ror
das
xchg
jp
call
mov
and
pop
inc
mov
mov
sub
lock
int3
loope
cmp
xchg
mov
mov
sbb
jnp
daa
adc
xor
jae
xchg
lock
mov
jb
scas
sub
xchg
xchg
push
stc
iret
lret
test
push
dec
jecxz
xorl
dec
xor
xchg
pushf
shrb
dec
jnp
ficoml
ja
xor
arpl
sub
cmp
roll
loope
mov
cmp
lret
adcl
ljmp
jmp
xor
push
jg
cmpsl
push
ja
push
sbb
movsl
and
scas
cmp
jae
daa
mov
xor
mov
rorl
cli
add
ja
pop
adc
add
das
xchg
sbb
addr16
push
pop
ret
sbb
bt
lret
iret
inc
sti
fstps
adc
cmpsb
pop
ret
notb
dec
clc
stos
sub
xchg
dec
testb
pop
push
mov
out
mov
jle
add
xlat
xchg
cld
sbb
mov
roll
sbb
and
push
loopne
dec
iret
dec
and
test
rep
jl
pusha
dec
in
and
test
adc
popa
fisubl
loopne
dec
stos
lods
xor
xlat
shll
ret
cmp
cmp
sbb
adc
jmp
hlt
iret
mov
fcoml
dec
mov
sbb
push
xchg
std
leave
addl
or
mov
shl
data16
cmc
insb
stos
pop
inc
movsb
sub
cmp
fwait
mov
je
adc
cltd
popf
nop
push
xorb
or
xchg
js
inc
jmp
ss
mov
insl
shll
scas
out
int
push
test
les
adc
test
cmp
lea
int
push
js
sbbb
shr
fistl
lock
fs
and
imul
outsl
inc
push
push
iret
sahf
icebp
xor
out
jnp
pop
out
out
xchg
add
fists
inc
cltd
push
sahf
sub
cmp
and
mov
in
pop
mov
pusha
out
inc
xchg
ror
testb
add
lahf
xor
or
nop
mov
pop
pushf
std
bound
addl
xchg
fisttpll
cmp
sub
lcall
sbb
sti
push
outsl
insl
popf
dec
cmp
lea
in
dec
sub
jge
sti
movsb
jg
rcrb
cltd
pop
push
pop
in
fildll
jae
mov
int3
enter
sar
adc
outsl
push
lock
insl
mov
mov
cmp
cmpsb
dec
enter
repnz
add
pop
xor
jae
xchg
inc
mov
jmp
ficoms
test
das
mov
add
insb
cmp
in
sub
test
pop
sub
pop
das
in
sub
aaa
inc
sbb
nop
and
adcb
mov
add
fsubrl
in
ficomps
outsl
ds
pushf
add
enter
xchg
aaa
xchg
xchg
and
addr16
fcomp
jnp
push
push
jne
mov
out
inc
adc
mov
jmp
arpl
add
jns
add
sbb
daa
daa
push
fisubs
dec
dec
and
lods
adc
stc
outsl
and
push
inc
jmp
aad
xorl
xchg
and
cwtl
stos
sub
xchg
sahf
mov
push
push
cmp
pop
ljmp
orb
push
pop
sub
stos
movsb
inc
aas
movntps
fildl
push
cmp
fld1
cmpsb
adc
add
pop
mov
xchg
enter
cmp
xchg
jge
loope
push
sbb
xchg
adc
outsl
and
sbb
test
aad
addr16
fcmovne
xchg
xor
cmp
mov
mov
jb
mov
or
add
dec
es
adc
fs
pop
bound
push
aad
out
mov
es
fwait
dec
ret
jb
mov
xchg
lret
fisttpl
lods
std
inc
jno
lahf
clc
mov
leave
or
and
adc
mov
and
mov
cmp
in
push
fidivrs
mov
ja
cltd
mov
icebp
xchg
jno
faddl
adcl
addr16
dec
add
add
and
inc
jnp
pop
mov
int
aaa
sub
mov
push
push
fcompl
mov
mov
inc
fsubrl
xor
mov
mov
push
addr16
xor
stc
lret
jns
adc
mov
jmp
rcrl
mov
ror
inc
xor
stos
sub
sar
push
mov
add
cmp
pusha
sub
std
mov
xchg
push
adc
pop
add
inc
call
pop
pop
gs
aas
jp
pop
in
je
inc
push
push
into
es
push
cli
movsl
fstl
shl
xchg
daa
fmuls
cmp
sbb
inc
push
cwtl
and
ss
push
xchg
fsub
jmp
test
cwtl
test
out
rclb
xchg
pop
sbb
pcmpeqd
cmp
add
scas
mul
rcll
xor
jge
push
ds
mov
jecxz
mov
jecxz
addr16
ja
cld
aam
mov
xor
in
jle
pop
dec
fdivl
rcrb
dec
mov
ds
add
sub
int3
cmp
gs
push
mov
adc
pop
sub
lock
dec
xchg
dec
lods
std
adc
mov
sub
daa
imul
adc
loop
in
mov
in
fs
cmp
arpl
jl
cmp
and
mov
pop
js
mov
imul
dec
icebp
adc
pop
mov
shlb
and
imul
mulb
repz
in
cs
ficoms
data16
cmpsl
pushf
mov
movsb
test
pop
shll
add
xchg
test
push
loop
mov
pop
push
bound
sbb
cmpsl
inc
and
and
ds
or
shl
push
jno
imul
push
jnp
outsb
fsts
mov
shl
mov
pop
mov
dec
pop
pusha
lahf
mov
mov
xchg
stc
or
rcrl
lock
and
lahf
cltd
bound
cli
testb
ss
inc
cmpsb
pop
not
xchg
shl
inc
cmp
es
shl
mov
test
rorl
or
idivb
mov
cmp
mov
add
scas
rcrl
leave
hlt
lret
test
ja
cmp
mov
addr16
mov
mov
dec
xchg
fcomps
clc
pop
xchg
pop
loop
psubusw
sub
hlt
lret
sbb
aad
outsl
push
movsl
mov
sub
push
or
dec
pop
push
adc
shl
jb
push
int
pop
mov
inc
sub
scas
jae
in
jne
repnz
cmpsb
and
ds
ljmp
push
xchg
daa
sub
mov
mov
cmp
sbb
pop
ficomps
test
mov
and
pop
daa
mov
xchg
test
into
mov
pop
jge
int3
fldcw
jge
aas
mov
pop
out
jbe,pt
jmp
push
jae
test
into
es
add
inc
sahf
jb
pop
and
cmp
inc
jmp
ss
fidivrs
mov
flds
dec
dec
mov
sub
pop
inc
cmp
fisubs
mov
vcvtss2si
int
test
mov
in
stos
mov
mov
push
cwtl
stos
adc
rorb
pop
fs
mov
das
xor
scas
dec
mov
mov
js
inc
xchg
pop
push
mov
pusha
add
into
lock
lcall
in
jg
fwait
aam
push
fwait
mov
mov
jmp
fldt
sub
fwait
push
clc
movsb
lock
jmp
push
jnp
mov
aaa
sub
in
fildl
and
mov
decb
push
loopne
mov
test
jb
mov
inc
lds
jle
mov
movsb
and
repz
mov
pop
lods
sbb
js
mov
sub
mov
xchg
cmpsb
pop
rcr
and
ljmp
pop
add
jnp
lock
jl
jmp
mov
ja
inc
sub
cmp
dec
fcmovbe
cmp
ds
cld
loope
les
mov
notb
mov
pop
pop
lock
scas
icebp
movaps
pop
pop
and
mov
xlat
pop
out
mov
sub
pop
mov
push
loop
or
stc
notb
mov
xor
icebp
out
jne
pushf
ret
sbbl
cmp
xchg
fmuls
hlt
movsl
sbb
sbb
pushw
fsubrp
out
cld
and
cld
subb
mov
pop
aas
fistpl
outsl
dec
or
or
sub
cmp
xchg
ror
jne
insl
inc
sti
mov
inc
iret
jge
pop
mov
out
lret
jns
movsl
or
sub
or
shrb
std
stc
mov
jb
fwait
inc
test
incb
stos
add
xchg
xor
loopne
cli
test
cmpsb
xchg
aad
mov
push
lods
xchg
stc
ljmp
push
xor
in
and
lea
push
invd
in
lock
faddp
ret
insl
jnp
repz
xchg
and
jnp
mov
out
sub
cld
xchg
mov
xchg
pop
push
mov
sbb
sub
imul
lods
lock
cmp
sub
clc
jae
adc
enter
cs
cmp
out
ja
sbb
js
jg
push
loopne
fldt
rcrl
mov
movsb
inc
in
gs
cwtl
pop
daa
mov
pop
push
jmp
imul
add
xlat
lret
dec
push
divl
cltd
fcmovnbe
inc
inc
add
push
das
sbb
leave
ljmp
mov
mov
xchg
inc
mov
or
xor
mov
inc
mov
sbb
mov
fldt
popl
daa
cmc
pop
hlt
loopne
cld
cmpsl
fmuls
xchg
fbstp
mov
cli
int3
xlat
ja
addl
loope
dec
and
cmp
arpl
fisttpl
or
sti
xor
push
repz
xor
out
aas
xchg
jl
mov
pop
mov
std
jmp
and
jae
jo
mov
mov
pop
addr16
inc
mov
icebp
xchg
fwait
cmp
push
and
cmp
mov
repnz
or
or
es
xchg
or
jbe
mov
ret
outsl
sub
dec
ret
not
adc
or
ljmp
push
and
jg
mov
es
jae
movsl
mov
outsl
lock
or
pushf
mov
inc
mov
nop
movb
mov
add
arpl
lods
cmp
dec
sbb
leave
lock
scas
fisttpll
mov
jne
and
push
int3
pop
push
fisubl
outsb
out
pop
lret
hlt
push
xor
sti
outsl
inc
in
push
lds
xor
mov
test
cwtl
fbstp
roll
mov
jnp
xchg
leave
add
push
xchg
movsl
pushf
or
and
push
arpl
pop
test
shlb
test
cwtl
push
cmp
cld
adc
fwait
ljmp
rcl
fdivr
mov
outsl
in
leave
orb
icebp
popf
addl
jmp
repz
jns
fcomps
mov
add
pop
sarl
js
ficoms
mov
mov
scas
rcr
aaa
sbb
pop
aaa
out
push
sub
and
cmp
insb
notb
add
mov
lcall
adc
sub
dec
in
and
cli
repz
pop
cmp
in
mov
fsqrt
cwtl
aam
cltd
arpl
cwtl
in
stos
insl
movsl
ljmp
mov
roll
and
mov
cmp
lret
mov
mov
or
data16
dec
testl
push
sbb
add
and
add
popa
push
dec
jle
adc
popf
dec
or
pop
cmpsl
xor
mov
sbb
inc
cwtl
roll
pop
mov
es
and
mov
pop
std
fisubs
push
jg
scas
stc
mov
mov
dec
sub
adc
pop
fistl
enter
add
jg
fimull
aad
and
dec
das
cs
les
stc
xor
out
dec
dec
sub
sub
xchg
outsl
sbb
out
addb
xor
shrb
pop
ja
fcoml
mov
inc
pop
xchg
push
in
fldt
xor
pop
jl
or
loope
jae
pop
pop
push
icebp
sti
jl
pop
lret
xor
repz
cmp
or
cmp
sbb
pushf
loopne
inc
dec
pop
dec
outsl
mov
addr16
lahf
pop
aad
scas
mov
out
mov
sub
sahf
cmpsb
fadd
ja
enter
fimull
cmpb
jae
imul
test
sarb
std
mov
sahf
adc
scas
bound
aas
or
into
pop
out
cli
xor
or
nop
add
hlt
or
xchg
inc
hlt
add
into
push
aaa
mov
bound
inc
addl
pop
loop
dec
cmp
shr
js
into
mov
js
movsb
sbb
aad
ja
jmp
push
daa
mov
pop
sub
fildl
add
jbe
lea
sbb
mov
xor
add
mov
mov
ss
ss
or
ljmp
push
mov
xchg
sti
cmp
xchg
or
into
sub
push
add
jl
push
or
rolb
gs
aad
mov
mov
ret
sub
movsb
xchg
nop
add
adc
pop
jns
gs
jnp
mov
mov
std
and
mov
mov
ja
sub
and
sub
cmp
xchg
mov
push
fcoml
sbb
or
pop
and
loope
xor
in
stos
or
xor
jnp
cli
jp
mov
int3
pop
inc
pop
lret
or
arpl
xchg
popa
and
dec
pop
jae
lods
xchg
scas
xlat
enter
lods
cmp
dec
dec
pusha
cmpsl
sbbl
ja
jmp
inc
jbe
rcl
lds
addl
rorb
ret
add
fsts
jle
mov
sbb
fidivrl
fidivrl
dec
inc
nop
int3
xor
xor
cmp
shrl
push
jmp
mov
sahf
jl
sbb
mov
in
cmc
xchg
out
scas
push
pop
cmpsl
mov
jo
icebp
add
scas
repz
sahf
cltd
sub
dec
ret
out
je
mov
or
sbb
mov
push
shrb
xor
jmp
cmp
lds
adc
jmp
jl
sbb
adc
outsb
jne
fs
or
mov
sbb
gs
fbstp
pop
subb
inc
call
gs
cmpsl
rorl
bound
add
adc
sub
and
out
add
arpl
int3
in
add
jmp
add
add
mov
call
mov
mov
lock
daa
push
and
or
movsb
out
jbe
aam
sbb
clc
pop
inc
sbb
jo
add
jp
out
pop
and
shll
jns
push
or
mov
fmuls
push
adc
sbb
lcall
pop
inc
aas
fdivrl
repnz
push
js
dec
dec
inc
pop
int3
loope
jb
jae
pop
pusha
push
and
xchg
movsb
lods
push
cli
xchg
adc
in
js
lds
test
jmp
mov
mov
lahf
or
andnps
xchg
cld
xor
add
in
dec
jno
out
insl
mov
xor
cmpsb
jae
xchg
cltd
push
inc
rcrl
inc
mov
orb
mov
daa
pop
adc
mov
out
xchg
sbb
xchg
arpl
jno
movsb
pop
adc
xchg
popa
out
loop
aad
and
pop
add
sbb
mov
cli
pop
xor
inc
aas
ss
outsl
repz
jno
sub
fildl
test
call
jne
out
ljmp
test
push
jae
pop
aam
or
mov
js
repnz
jle
mov
sub
push
jle
and
push
dec
rolb
aas
mov
stos
xchg
mov
out
xlat
inc
subl
in
jl
in
cmp
cltd
xor
xchg
into
in
nop
push
jl
lahf
ds
cmp
pop
and
jg
pop
outsl
cmp
es
icebp
adc
pop
jae
xchg
push
lock
fistl
inc
dec
je
sub
jg
sub
fidivrl
adc
fcomi
loope
or
movsb
test
notb
dec
mov
das
fwait
cmpsb
pop
into
xchg
sub
mov
push
stc
mov
les
and
cwtl
cli
call
dec
iret
and
xchg
loopne
jge
sub
ret
dec
adc
gs
popa
lods
mov
xchg
sahf
cmp
jp
pop
jbe
hlt
xor
in
ds
cmp
shlb
aas
or
lret
or
cmp
push
add
push
in
cmp
aas
xchg
cmpsl
cmpsl
xchg
or
push
cltd
movsl
bound
int3
shll
sub
adc
add
push
movsb
push
dec
xchg
ret
in
pop
fbstp
pop
stos
cmpsb
mov
adcl
xchg
or
repz
aad
sub
push
mov
sbb
insb
jno
mov
fwait
stos
push
cli
stos
leave
xchg
pusha
stc
cmp
mov
jb
inc
xor
jo
sbbb
incl
inc
cmp
repz
push
dec
cmp
pop
push
mulb
and
les
add
bound
xor
out
fprem
cld
faddl
outsl
cmp
jae
xchg
jg
adc
push
iret
jo
mov
jle
and
cmpsl
adc
lds
cmpl
shrl
dec
mov
ret
sub
leave
inc
and
mov
inc
push
cmpsb
mov
iret
inc
add
aam
jnp
pop
xchg
sub
lock
inc
pop
add
pushf
in
inc
out
push
movsl
sbb
add
je
dec
loopne
clc
je
lcall
sbbb
cmp
sbb
lcall
inc
mov
and
mov
outsb
add
jne
es
mov
sub
test
xchg
xor
mov
add
jb
jae
loopne
insl
mov
push
inc
jp
cwtl
sub
js
push
das
pop
xchg
push
sub
pop
lret
or
jp
es
lret
or
or
lock
xchg
movsb
pushf
imul
jg
imul
adc
push
cmpsb
leave
sti
xlat
stc
sbb
loop
int3
sub
loopne
or
mov
mov
js
pop
xchg
pop
pop
scas
lret
push
mov
push
mov
insl
jnp
notb
sbb
jnp
scas
cmpsb
int
fucomp
or
ficompl
add
rolb
loope
jle
jle
lods
jo
jecxz
in
loope
cmp
lahf
push
scas
icebp
pop
jge
cmp
cli
std
jnp
add
pop
lret
imul
fsub
jmp
clc
fcmovbe
add
ljmp
cmc
or
out
jl
lods
lret
push
pop
mov
aaa
dec
mov
lcall
mov
or
stc
scas
add
insl
adcb
pushf
sub
rorb
sbb
call
fadd
cmpsl
jns
xor
subl
gs
es
xchg
popf
cwtl
aaa
mov
and
sti
cwtl
std
rclb
popa
mov
outsl
dec
scas
dec
xchg
mov
das
or
jmp
jp
mov
sbb
adc
int
pushf
mov
cld
sbb
push
lea
pop
add
add
lcall
and
fs
push
and
ret
test
dec
aam
lods
in
add
xchg
insb
aaa
stos
add
push
movsb
push
dec
fsubl
arpl
int3
popf
cmp
les
pop
push
mov
in
inc
mov
sysexit
fsubrs
xlat
icebp
mov
dec
adc
adc
aam
lret
mov
dec
lret
xor
sub
jle
roll
pop
ret
test
ret
cmpsb
pop
add
aas
pop
xor
scas
dec
jg
jmp
std
lods
xor
add
jmp
jp
in
sbb
adc
and
push
xchg
jmp
shrd
and
jb
or
or
sub
add
inc
in
xor
pop
sub
add
notb
cmp
dec
pop
push
xor
clc
inc
push
sub
jb
ja
lods
inc
xchg
nop
aad
pop
and
inc
ret
push
fdivrp
jnp
outsl
mov
mov
and
ret
imul
push
insb
loopne
pop
lahf
repz
sahf
mov
leave
popa
jo
repz
adc
stos
imul
movsl
mov
ret
pop
mov
decb
sub
pop
sar
add
or
xchg
inc
mov
fabs
adc
dec
dec
mov
jmp
ds
or
adc
dec
adc
xchg
dec
ja
dec
aaa
in
mov
mov
xchg
push
lahf
xchg
cmpsb
mov
sbb
jbe
inc
cs
pop
int3
enter
push
ficoms
jae
icebp
outsl
insb
mov
inc
enter
push
inc
adc
aas
pop
lds
adc
push
shll
sub
add
inc
addr16
std
jns
ds
push
subl
pop
cmpsb
cwtl
fadds
imul
inc
cmpsl
mov
movsb
test
mov
add
popa
inc
ret
push
movsb
cltd
cmc
lods
adc
les
cwtl
inc
push
mov
mov
movsb
cmp
jo
test
mov
out
dec
sahf
repz
icebp
push
sbb
pop
mov
lcall
mov
push
jo
jg
mov
jo
push
into
xor
adc
pop
push
and
pusha
mov
popf
outsb
cltd
push
or
lret
dec
jp
icebp
adcl
or
aad
or
dec
or
sarl
inc
push
jb
out
scas
and
inc
pushf
addl
stc
adc
mov
push
jl
dec
dec
dec
mov
jle
stc
cmp
arpl
xchg
adc
in
iret
pushf
loopne
pop
out
push
mov
mov
cwtl
or
xchg
xchg
jp
enter
add
les
sub
arpl
jae
mov
outsb
dec
insb
inc
movsl
daa
push
mov
stos
dec
data16
mov
nop
inc
add
out
sarb
cmpsl
outsb
mov
pop
ret
sti
test
or
mov
dec
in
adc
dec
push
xor
cld
addr16
and
dec
push
sub
inc
push
mov
cmp
aaa
add
add
adc
lret
mov
jmp
add
xchg
add
push
daa
jg
jecxz
aas
clc
adc
ret
iret
bound
ja
test
pop
std
push
jmp
pop
adc
mov
dec
mov
dec
in
and
add
or
or
add
mov
jecxz
add
andb
mov
mov
xchg
push
jnp
mov
fcoml
les
adc
aaa
imul
pop
call
movsb
mov
loop
cltd
inc
adc
mov
loopne
push
leave
and
mov
lea
lds
pop
in
out
sub
add
cmp
pop
das
rolb
sub
in
out
xchg
addr16
xchg
lcall
dec
pop
dec
jmp
stos
sbb
sbb
mov
aas
pop
pop
les
pop
adc
popf
mull
aaa
and
sbb
into
lret
mov
adcl
outsl
or
dec
sbb
in
out
xchg
jno
dec
push
inc
jae
or
enter
xor
clc
jl
rorl
cmc
popa
xchg
push
pop
out
mov
in
inc
sbb
stos
dec
pushf
aad
pop
mov
rol
std
fiaddl
mov
popa
daa
fsubrl
outsl
fdivr
test
sub
xor
idivl
and
daa
mov
pop
fbstp
mov
loope
movsl
sbb
mov
ljmp
cmp
inc
or
xlat
ret
movsb
cmp
inc
inc
pop
rcrb
jge
adc
dec
xchg
push
lea
push
xor
imul
in
mov
xlat
xchg
imul
mov
fsubrl
xchg
insb
inc
add
hlt
stos
sub
fneni(8087
mov
in
sub
ja
jnp
push
rolb
loop
mov
push
sbb
cs
cmp
xor
in
inc
and
fwait
mov
push
mov
loop
fld
xchg
push
in
sub
cld
loope
and
mov
dec
jne
orl
jnp
loope
xchg
mov
mov
mov
test
mov
jae
add
mov
jl
in
or
insl
jne
test
stos
fldl
test
sub
push
sbb
jecxz
adc
lret
icebp
push
testb
stc
inc
imul
add
ja
call
xchg
int3
fnstsw
push
sbb
push
add
pop
out
dec
clc
cmp
mov
add
and
mov
mov
loopne
dec
jbe
lea
xchg
je
or
mov
hlt
inc
push
mov
mov
lods
pop
jle
push
stc
mov
lret
mov
fidivrs
mov
xorl
mov
insl
mov
cmp
dec
movb
mov
mov
jle
aas
push
fnstcw
repnz
cmp
repnz
push
xchg
lret
inc
popa
scas
xchg
scas
xor
cmc
test
les
lahf
jne
aas
cli
push
pop
cmp
ds
cli
xor
inc
mov
sub
mov
enter
sbb
imul
icebp
mov
int3
push
fildl
sahf
loop
int
fisubrs
lods
hlt
cld
mov
add
out
fisubrl
les
xchg
xor
lahf
sub
xchg
lcall
rorb
or
loopne
cmp
xor
add
mov
add
popa
push
call
pop
subl
pop
xchg
fsubrl
fisttpll
lods
push
movsb
rolb
sub
jp
scas
dec
sbb
arpl
das
cmp
cmp
in
xlat
das
dec
push
aad
mov
adc
push
arpl
mov
pop
fs
adc
imul
pop
sub
mov
ds
pusha
fiadds
jg
or
ret
scas
jp
mov
adc
mov
lret
push
cmpsb
mov
out
lret
fwait
jno
adc
call
inc
cld
mov
xchg
jg
dec
inc
testb
inc
push
pusha
ret
jnp
mov
sbb
mov
jge
cmp
push
push
je
or
arpl
and
push
xchg
js
loopne
stos
adc
mov
push
xor
es
and
add
daa
cmpsl
xchg
test
leave
scas
add
notl
int3
leave
pop
fcomi
jae
push
gs
mov
jge
bnd
mov
stos
xor
imul
jbe
ds
hlt
mov
sub
push
sub
and
add
ret
pop
mov
mov
jb
mov
push
pop
xor
inc
sub
fidivl
scas
subl
dec
or
out
mov
jg
outsl
sbb
xor
les
das
xor
xor
int3
and
jnp
push
gs
aas
push
jg
adc
in
or
jb
sub
dec
subl
leave
repz
sub
stc
push
outsl
xchg
push
lret
lds
xor
scas
sbb
or
adc
push
sub
jno
adc
int3
andb
orb
xchg
lock
imul
mov
mov
fidivs
test
sbbl
sbb
cmpsl
or
push
sbb
sbb
cmp
pop
popf
or
shll
cmpsl
xchg
push
lahf
stc
mov
pop
pop
push
push
sar
roll
mov
orl
mov
in
jp
sub
push
pop
and
imul
imul
add
gs
inc
ja
xchg
cmp
jmp
xor
and
loop
addr16
dec
cmp
fstps
lds
cli
nop
ror
fiaddl
test
inc
mov
cmpsl
sti
jmp
or
sbb
sub
sub
clc
and
iret
lods
lret
push
inc
xchg
mov
xor
sub
in
xchg
std
mov
mov
jnp
test
fadds
fwait
ja
aam
xlat
or
inc
cwtl
cwtl
rcll
loopne
sbb
sbb
jl
pop
add
xor
xor
cmp
in
fwait
mull
push
std
xchg
mov
xor
push
loop
xchg
imul
mov
and
cs
cs
pop
add
test
mov
push
orl
jo
push
imul
imul
test
jno
lods
cmp
sub
cmpsl
mov
imul
jo
add
int3
out
test
std
dec
pop
push
add
cmp
subl
lahf
push
lods
xor
mov
push
icebp
jle
popa
shl
inc
push
cmpsb
loop
aam
jge
dec
mov
or
xchg
aas
out
sbb
jecxz
addb
idivb
mov
mov
adcl
jmp
mov
or
inc
pop
ss
cmc
and
mov
fsubrp
push
pop
outsl
pop
xchg
add
fmuls
xchg
popa
xor
movlps
pop
cmpsl
xchg
repz
js
addr16
lea
adc
negb
mov
insb
push
sahf
nop
or
mov
scas
cld
mov
pop
les
loop
std
adc
xchg
lret
fistl
fsubrs
push
mov
sbb
xor
pop
roll
test
inc
sub
or
loope
sbb
pop
imul
mov
xor
xor
dec
lods
outsl
lods
and
in
mov
jmp
add
add
hlt
inc
addr16
sub
dec
xor
addr16
cmp
jae
xchg
ret
test
mov
push
movsl
lea
leave
shr
cmpsl
ret
jno
ret
ret
mov
jg
icebp
daa
lods
sbb
mov
or
mov
test
daa
movl
and
lret
pop
xchg
xchg
out
pushf
dec
push
jmp
or
lret
dec
out
push
xchg
dec
or
incl
sub
mov
aam
cmpsb
push
mov
mov
cld
imul
in
mov
mov
sbb
sbb
mov
jecxz
sarl
in
sub
repz
mov
mov
mov
mov
mov
cmp
aam
out
pop
test
and
out
sahf
dec
xchg
nop
xor
mov
lds
in
fsubl
inc
mov
adc
sbb
ds
bound
out
pop
mov
in
lret
loopne
sub
pop
ja
push
gs
movsl
cmp
addr16
orb
outsl
call
rcll
fwait
or
cwtl
ret
jl
outsl
inc
repnz
aad
push
pop
push
test
pop
enter
jmp
mov
sbb
jne
mov
push
rcrb
push
xlat
not
imul
inc
out
and
and
and
fisubrl
out
rcrl
testl
and
jg
jo
cld
add
push
leave
int3
dec
jns
aaa
aas
dec
push
imul
mov
mov
fmuls
pop
loopne
xor
shl
xchg
mov
pop
jmp
test
inc
pop
jmp
int3
sahf
popf
adc
fstpt
lds
dec
fs
cmp
lods
fwait
clc
leave
dec
mov
inc
ret
adc
mov
mov
sbbl
roll
sbb
xor
jmp
rcl
mov
pusha
adc
in
pop
loope
aad
mov
fbstp
push
cmp
into
test
mov
jle
pop
cli
mov
orl
and
inc
cltd
in
mov
jmp
mov
jnp
aaa
add
xchg
aam
xchg
jecxz
es
pushf
popa
sub
lds
push
fisttps
ja
adc
pop
cmp
sti
jp
jl
aaa
imul
pop
sub
cmp
icebp
push
fists
inc
mov
lahf
add
lret
es
shlb
pop
scas
xchg
pop
pop
stos
cwtl
xchg
daa
out
mov
or
cli
in
sbbl
fnsave
fcoml
out
push
mov
pop
pusha
mov
lea
inc
xor
add
pop
fisttps
xlat
arpl
testl
xor
addb
inc
inc
jnp
int3
sub
cli
loope
inc
test
xor
enter
pop
insb
pop
sub
data16
mov
lcall
gs
jp
and
jge
add
int
jbe
jmp
sbb
add
mov
pop
faddl
and
mov
addr16
push
xchg
push
bound
dec
scas
push
inc
icebp
push
push
cmp
jo
sti
mov
outsl
xchg
clc
xchg
popa
lock
push
fildll
fidivrs
pop
sahf
sbb
adcb
cmpsl
lea
xlat
fdivl
in
mov
aaa
jmp
mov
pop
out
jl
push
xchg
popa
add
pop
int
es
loopne
add
test
lret
jmp
push
decl
int
xchg
pushf
ficoml
dec
shl
std
lods
push
test
std
mov
push
scas
cmp
sbb
pop
scas
pop
sub
and
push
adc
pushf
sub
xchg
cmp
adc
cld
mov
imul
jle
xchg
sbb
cli
sub
outsb
and
leave
jnp
fxtract
lods
sbb
xchg
cmpsb
pop
sub
call
sbb
pop
mov
mov
insl
in
adc
xchg
out
dec
xchg
test
ja
cli
lds
nop
cltd
repz
in
inc
push
push
imul
in
mov
mov
inc
rclb
xchg
gs
or
jg
add
push
mov
clc
cltd
push
sbb
lcall
pop
fnstsw
sub
jecxz
inc
adc
das
es
test
adc
jnp
push
push
fscale
dec
inc
sub
int
inc
xor
jecxz
lds
cmpb
rorb
jno
inc
out
aam
inc
cmc
push
popf
dec
mov
ljmp
dec
or
stos
sbb
mov
mov
lret
test
repnz
dec
mov
or
cmp
mov
dec
jmp
xchg
push
incb
push
add
ljmp
xor
ret
push
xor
xlat
sbb
hlt
xchg
mov
js
adc
mov
sub
sbb
cltd
cltd
fcoms
jbe
lret
add
xor
dec
or
mov
jo
aaa
vmovdqa
test
arpl
div
je
ds
or
dec
jg
push
pop
add
pop
pop
cmp
add
addl
lods
push
push
pop
repz
ljmp
and
call
popl
xchg
cltd
mov
jge
push
jno
cmp
inc
push
add
stc
sbb
adc
ds
inc
push
loopne
imul
cmp
sub
cmpb
js
add
sbb
mov
or
mov
call
cwtl
xchg
push
in
mov
pushf
inc
pop
aad
loopne
push
jns
pop
fdiv
aaa
jge
shlb
lock
repnz
shlb
dec
test
pop
cli
and
iret
add
cwtl
or
cmp
pop
mov
mov
sar
xchg
xchg
cltd
pushf
cwtl
scas
xor
cmp
mov
xor
repz
gs
rcll
jae
mov
or
out
inc
xchg
mov
inc
pop
sbb
fwait
or
inc
loope
and
push
cmpsb
push
in
inc
push
filds
insb
fsubs
les
cmp
fsubrl
inc
ret
fisubrl
jl
fcmovbe
arpl
add
cmp
lcall
mov
js
jl
mov
iret
test
nop
outsb
scas
sub
mov
add
cmpsl
popl
mov
sarl
pushf
mov
arpl
and
imul
push
lock
daa
sub
xchg
push
sbb
rclb
idivb
cmp
and
jbe
ret
ds
fisubs
push
loop
mov
sbb
cwtl
or
sbb
inc
and
or
push
sbb
and
notb
mov
leave
push
jae
push
or
fdivrl
ljmp
jmp
sbb
fldl
mov
sub
mov
mov
mov
ljmp
mov
mov
lods
addr16
add
or
leave
pop
mov
lods
jno
test
xor
leave
outsl
pop
stos
or
js
insl
inc
shlb
pop
addr16
insb
mov
jae
shrb
lods
xor
and
ret
fisubs
xchg
stos
add
addb
andl
adc
loope
decb
test
push
jnp
cli
sub
movsb
jecxz
mov
fstpt
sub
or
mov
ret
movsl
xchg
lss
jnp
icebp
sbb
jmp
jns
sub
shl
adc
sub
jo
and
xor
pushf
dec
cmp
cwtl
jmp
lods
lcall
divb
xor
sbb
in
adc
shlb
or
cmp
cs
imul
sub
push
inc
out
test
ja
stc
negl
sarl
mov
pop
mov
mov
xchg
das
ret
sbb
addl
push
add
mov
mov
pop
xchg
pop
test
lds
lea
xor
scas
stc
outsl
dec
dec
and
gs
jns
pop
vpsllq
imul
cli
mov
xchg
mov
xor
xchg
js
inc
dec
mov
jne
xchg
dec
inc
loopne
add
aam
mov
mov
mov
scas
or
and
xchg
mov
sub
pop
push
xor
jmp
add
das
cmp
scas
adc
rclb
or
stos
jmp
and
test
cmp
das
sub
fimuls
or
testb
adc
sub
push
lods
pop
outsb
push
add
pop
jns
jae
ret
lret
push
out
fs
aas
loope
sahf
cmp
aaa
jmp
icebp
sahf
test
cld
pop
in
mov
ja
pop
add
popa
sub
fidivrs
jnp
iret
call
xor
outsb
adc
or
sub
scas
dec
xchg
sbb
movsb
dec
mov
iret
rcll
adc
push
loopne
adc
fcomip
mov
jnp
xchg
enter
or
shlb
ficoms
add
mov
lret
mov
mov
push
cmp
cmc
mov
jmp
mov
mov
sub
xor
xor
mov
adc
mov
inc
mov
out
pop
fucomi
imul
add
jp
out
scas
pop
xchg
xor
mov
and
bound
cmpsb
pop
fsubrp
ds
sub
jmp
dec
sub
jb
push
inc
xor
mov
testl
mov
and
in
jg
orb
test
xor
jns
xchg
popa
iret
mov
addl
push
xor
call
mov
lret
or
lock
gs
lock
in
loop
jmp
adc
in
bndstx
stos
sub
or
or
sbb
xchg
test
mov
sbbl
aas
mov
lret
mov
sub
enter
mov
inc
outsl
sub
cmpsb
out
mov
mov
push
push
cmp
jecxz
ret
xchg
gs
fisttpll
insb
mov
jl
mov
pop
icebp
jns
hlt
sbb
lcall
pop
fs
sub
pop
push
ret
add
das
es
jp
or
ja
jl
and
or
push
inc
xchg
in
test
add
cmp
mov
das
rorb
or
rcll
push
inc
lret
xor
ficoms
mov
xchg
test
push
outsl
or
cmp
data16
cltd
or
pop
xor
ja
ja
movhps
or
xchg
sbb
pop
lds
pop
les
fs
and
popf
inc
in
inc
rol
or
loope
lret
add
addr16
inc
imul
push
test
inc
data16
test
sbb
imul
jge
iret
pop
rcll
lret
data16
or
out
cmpsb
shrl
push
out
xor
in
scas
push
pop
in
outsb
fidivs
aam
ljmp
in
in
test
sahf
jge
and
jg
aad
pop
sarb
sbb
pop
mov
ljmp
dec
pop
jae
mov
cmp
out
push
sub
xor
inc
push
add
hlt
xchg
test
cwtl
call
orl
mov
popf
mov
movsb
outsl
mov
cmp
gs
and
or
fwait
cwtl
nop
or
or
xlat
mov
jb
sbb
je
mov
pop
mov
xchg
ret
dec
imul
mov
push
inc
sbb
in
and
xlat
mov
cmp
test
pop
ficoml
rol
lock
cmc
out
mov
ds
mov
xchg
jecxz
push
and
cmc
push
js
std
and
jne
imul
rcrb
les
rclb
pushf
jbe
sahf
lahf
dec
inc
jecxz
imul
xacquire
lahf
in
cli
mov
ret
insb
or
mov
push
push
jne
test
mov
loop
sub
ror
pop
dec
sbbl
mov
or
jge
jp
xlat
sub
xchg
pop
fcmovbe
xor
xchg
mov
inc
lock
out
ds
xor
lds
push
jno
mov
test
add
mov
js
pop
popa
pop
jo
xor
vpcmov
scas
shll
cmp
fdecstp
and
dec
lds
aad
push
mov
incl
xor
push
fs
inc
cmp
mov
int3
frstor
add
xlat
stc
fwait
pop
sahf
cltd
sbb
jmp
xor
inc
mov
loopne
cmp
mov
xchg
xor
lahf
imul
lds
inc
xor
aad
fs
adc
mov
in
je
iret
sbb
inc
sbb
push
out
dec
shll
push
inc
cmc
outsl
inc
fistl
pop
dec
out
xchg
cltd
jg
sub
pop
lret
dec
or
mov
fstpt
loop
addb
je
pop
push
sub
nop
xchg
pop
ret
xchg
sub
inc
leave
cmpsl
sub
rcrb
aam
or
dec
icebp
push
mov
hlt
js
cmpsb
fwait
ret
int3
jbe
fdiv
xor
ss
or
inc
icebp
movsb
pop
push
sub
dec
dec
jle
test
subb
aaa
andb
jno
test
testl
and
out
push
fstp
or
push
mov
mov
sub
mov
clc
add
inc
jecxz
loop
sbb
mov
les
adc
sub
add
xchg
mov
outsb
inc
mov
mov
xor
mov
cmp
sbb
mov
or
mov
or
mov
jp
dec
scas
jno
sahf
mov
aaa
popa
pop
dec
pop
clc
je
lods
push
loop
push
jecxz
mov
int
inc
jg
test
ret
cmp
and
inc
ljmp
rclb
push
push
lods
jmp
int
mov
push
mov
idivb
repz
push
cmp
aam
mov
sbb
addl
push
scas
mov
in
ds
out
pushf
dec
int3
je
pop
mov
adc
test
pop
loop
adc
das
mov
sub
pop
lea
popf
inc
stos
sbb
mov
imul
stc
xchg
xor
or
pusha
outsb
and
les
adc
dec
sub
jne
nop
xchg
rol
mov
shll
icebp
xor
xor
cmp
add
and
js
jae
in
adc
mov
push
add
or
es
fadds
lods
arpl
mov
out
lock
mov
inc
mov
push
in
imul
jecxz
inc
push
mov
hlt
mul
adc
inc
rclb
and
out
jecxz
out
andl
dec
bound
jp
jno
sub
push
lret
lret
pop
int3
repz
xchg
jmp
mov
imul
das
jb
loop
push
jle
xor
aaa
mulb
pop
or
push
adc
add
jnp
or
sub
outsl
jmp
sbb
adcl
cmp
push
jecxz
and
cmp
bound
mov
mov
fistps
iret
pop
jp
push
imul
ret
mov
aas
pop
enter
inc
mov
push
cmpb
test
sahf
or
insl
into
mov
fwait
push
loopne
sahf
push
inc
ret
lock
lock
sub
aam
cmp
xchg
sub
pop
out
sbb
leave
dec
repnz
dec
sbb
repz
add
sbb
lret
scas
outsb
and
dec
movsb
sbb
add
adcl
or
loope
cmp
dec
mov
dec
sti
jl
int
pop
popf
add
popf
xor
shrb
pop
out
cmp
sbb
and
shrb
cwtl
cmp
fwait
into
add
insb
xchg
popf
xchg
mov
scas
insb
xchg
add
push
data16
lahf
fwait
push
fcmovbe
xor
or
fsubrp
js
pop
subb
or
sbb
pop
dec
insb
test
cmp
in
loop
mov
movsl
or
adc
mov
fcmovbe
gs
add
cmp
pop
repnz
ror
xchg
push
mov
insb
addr16
inc
dec
fiaddl
jmp
cmpb
scas
icebp
stos
call
xor
mov
imul
cmpsl
in
or
pop
xor
out
aam
aad
in
push
xchg
pop
jg
push
xchg
icebp
sbb
push
xchg
js
push
lods
std
xor
sbb
bound
sub
popa
pop
inc
mov
repz
push
push
adc
aad
dec
mov
xchg
sub
in
mov
push
stos
mov
pop
sub
mov
add
cltd
adc
ja
sti
jne
lahf
xchg
cltd
pop
arpl
mov
enter
roll
mov
push
lds
sbb
in
and
cltd
xlat
mov
ja
lods
repz
pop
or
inc
pop
xchg
out
nop
jl
mulb
ret
sbb
xchg
movsl
jns
adc
mov
mov
push
sub
push
insb
push
mov
clc
mov
fwait
add
arpl
xchg
inc
xchg
adc
jp
mov
sub
fwait
mov
aas
inc
test
cld
sahf
adc
or
cmp
daa
aam
pop
daa
rorb
fdivrl
stc
test
push
outsb
mov
cmpsl
pop
jp
es
jmp
xchg
test
jne
and
addr16
movsl
cmp
cmp
fdivs
and
int3
mov
and
xor
call
pop
xor
leave
js
dec
std
and
sbb
mov
call
scas
xchg
push
adc
iret
mov
enter
sahf
movb
sub
bound
inc
lret
mulb
xor
push
movsb
adc
popa
mov
xor
lods
inc
sub
jle
xchg
sbb
cmpsl
jb
inc
inc
inc
out
mov
inc
mov
xor
js
and
imul
lock
addb
outsl
cmp
stc
adc
popf
adc
lahf
and
mov
push
dec
pop
mov
jecxz
sub
cwtl
lret
addr16
and
minps
fnstcw
stos
jge
lods
pop
lock
pop
ljmp
insb
sub
lret
in
in
ret
das
into
icebp
bound
in
call
ret
call
or
and
sbb
subb
or
arpl
sbb
push
in
mov
stos
or
sbb
mov
fidivrl
sti
lods
adc
push
mov
mov
into
mov
inc
es
aad
mov
lret
dec
xor
dec
inc
iret
cs
scas
je
pushf
sbb
and
mov
jmp
xchg
or
mov
rorb
and
mov
jmp
cmpsl
mov
cmp
cmp
push
stos
shrb
inc
xor
je
sbb
cmp
fdiv
pop
movsl
mov
xorb
inc
pop
pop
je
xchg
sti
xchg
shlb
mov
imul
inc
jmp
inc
mov
mov
cld
outsl
cs
cmpsl
pusha
add
nop
dec
xchg
fwait
jo
fmull
pop
lds
test
sbb
mov
psubb
insl
mov
decb
inc
popf
in
xlat
pop
xchg
mov
js
xchg
stc
jnp
sbb
inc
inc
xchg
push
loope
mov
rol
rclb
jmp
ss
lds
add
lret
dec
jb
pushfw
and
ss
sbbb
test
mov
xchg
mov
pop
repz
adc
inc
daa
lock
mov
xor
test
lcall
sarb
mov
xchg
pusha
sbb
mov
ljmp
les
push
das
shrl
mov
sbb
lock
cmp
lods
push
mov
out
aad
mov
xchg
push
pop
mov
std
in
push
imul
outsb
arpl
add
push
inc
mov
sbb
jle
xchg
sub
cli
mov
dec
aaa
inc
sbb
push
outsl
xor
das
push
in
add
mov
cmp
xor
and
mov
shlb
shll
inc
cmp
jb
ret
dec
cli
data16
cmp
xchg
inc
fldl
je
push
daa
push
jae
int
loope
into
into
and
cmp
fbld
sti
cs
mov
int
jmp
in
loopne
cmpsl
pop
inc
call
push
hlt
sbb
shlb
cmc
adc
sbb
inc
cmp
fdivl
outsl
and
xor
repz
sub
pushf
mov
les
dec
out
lret
and
cmpl
clc
mov
ret
ret
jecxz
int
mov
cs
mul
cwtl
out
in
jne
sub
aam
fs
push
icebp
fs
in
arpl
add
out
test
and
roll
and
cmp
xchg
mov
mov
mov
pop
sub
adc
adc
arpl
push
pop
pop
dec
pop
sbb
jbe
jae
xchg
sub
sti
in
xor
sbb
or
ficomps
pop
jbe
xor
jae
or
gs
lods
add
or
cmovo
jmp
sbb
inc
notl
pop
iret
in
pop
adc
lock
in
push
daa
insl
mov
xchg
pop
pop
fidivrl
sub
xchg
sub
test
hlt
outsl
pop
and
jne
xchg
or
pusha
sub
outsl
mov
mov
mov
inc
in
roll
int
add
jb
mov
cmp
push
lods
imulb
in
jecxz
inc
add
rclb
mov
dec
stos
out
inc
jno
sub
and
and
gs
imul
inc
pop
dec
inc
fs
push
adc
imul
insb
fdivrs
xchg
lret
gs
insb
es
mov
mov
add
subb
iret
into
and
test
cmp
cwtl
outsb
roll
pusha
inc
mov
push
sbb
lods
out
and
inc
addl
or
dec
outsl
cmp
out
dec
fsubr
push
push
mov
and
in
lods
sbb
jb
jecxz
push
dec
mov
jmp
xchg
int3
testb
sub
adc
sahf
or
imul
push
js
ss
jp
xchg
in
jle
add
sub
test
mov
loopne
and
cli
adc
es
cmp
and
mov
inc
adc
adc
test
enter
insb
ja
xor
in
test
push
fs
or
xor
cmp
mov
aaa
mov
es
xchg
daa
shrl
je
test
in
jno
popa
inc
cmp
xor
js
loop
mov
inc
push
and
push
daa
adc
jmp
add
jecxz
les
dec
and
cmp
pop
pop
ds
mov
cmp
dec
pop
in
dec
test
xchg
lret
or
sub
or
test
jl
pop
stos
push
xor
dec
mov
es
fidivrs
test
xchg
sahf
add
pop
arpl
jne
jmp
repnz
lahf
js
add
int
or
mov
rcrb
sub
lahf
test
inc
lret
les
stos
or
out
cld
movsb
jle
cltd
pop
mov
lret
cwtl
jle
sbb
and
mov
mov
push
les
lods
cmp
mov
cld
in
jp
scas
inc
add
pop
mov
and
orl
test
ss
push
jmp
cmp
push
xchg
dec
pop
ds
ljmp
mov
ss
adc
in
inc
es
jl
sub
adc
add
and
pop
dec
pop
lods
cld
inc
mov
adc
push
xchg
ss
sbb
pop
sbb
xchg
inc
scas
ret
insl
in
jle
mov
xchg
enter
out
cltd
stc
cli
xchg
cmp
add
cmp
addr16
mov
in
inc
mov
cmp
out
je
pop
or
repz
adc
mov
push
push
movsb
sub
push
cmp
nop
testb
and
rorl
popa
xchg
int3
aam
jge
movsb
sbb
jl
sub
shl
add
clc
sbb
push
cmp
outsl
mov
movsb
scas
loopne
mov
cltd
pusha
sbb
imul
cmp
aaa
test
sbb
push
xchg
out
movsb
push
sub
pop
or
jae
scas
jo
mov
test
or
push
mov
arpl
sub
dec
test
cmp
jo
out
adc
call
imul
mov
daa
mov
mov
dec
mov
movsl
fcomp
lret
xchg
in
incb
in
js
ror
fs
mov
or
cmp
shl
xchg
sahf
addl
mov
mov
or
push
inc
jns
pushl
lods
mov
or
mov
insb
out
add
gs
xorb
scas
nop
loopne
in
lea
push
loopne
lds
mov
jle
jge
bound
out
rcrb
inc
inc
jno
pop
jp
and
lret
sub
jbe
dec
andb
sbb
mov
sub
ficomps
xchg
xadd
xlat
lret
pop
test
js
pop
sub
add
xchg
adc
loope
outsb
xor
pop
in
mov
xchg
aas
mov
cmp
cmp
dec
sahf
xor
inc
add
arpl
add
or
add
mov
push
mov
rclb
mov
cmpsb
push
xchg
fwait
loope
lea
in
inc
push
adc
outsb
insl
sub
loope
xor
les
mov
sub
push
adc
mov
cmp
cli
mov
mov
cld
fstp
gs
dec
and
mov
jg
in
pushf
mov
cmc
push
xchg
lahf
adc
xor
or
dec
or
in
xor
push
xchg
add
out
je
sbbb
push
xchg
inc
cltd
push
out
in
sbb
rcr
sub
icebp
cld
cmp
es
out
popa
dec
hlt
pushf
jnp
adc
or
inc
aam
mov
into
dec
xlat
cltd
xchg
out
dec
popf
inc
mov
and
sahf
and
xor
sbb
mov
icebp
mov
ja
pop
fisubrl
stos
adcb
imul
and
pop
inc
mov
sarb
outsb
lods
clc
inc
dec
push
mov
roll
inc
pop
pushf
add
fstpl
mov
add
mov
andl
idivl
icebp
cmpsl
divl
mov
fmul
sub
sti
imul
loop
cs
cmp
mov
xor
stos
orb
dec
iret
pop
filds
popa
and
push
fdivrl
cmp
rorl
aad
mov
pop
test
pusha
mov
and
fwait
enter
call
nop
std
cmp
mov
outsl
and
pop
xor
and
orl
jmp
sbbl
adc
sub
ja
or
inc
out
or
adc
pop
lret
icebp
lods
xor
adc
mov
cli
insl
mov
test
popa
jnp
test
sahf
jne
mov
push
imulb
icebp
in
lds
jnp
imul
lods
fwait
cs
mov
dec
std
insb
arpl
or
and
mov
lahf
inc
cmp
pop
lcall
pop
test
jecxz
jmp
pop
xchg
scas
inc
in
xchg
rclb
xor
or
insb
popa
outsl
sbb
add
out
push
pop
jne
jne
neg
fwait
gs
inc
insl
es
mov
push
jns
movsb
shlb
and
push
jl
mov
cwtl
popa
aas
push
pop
push
xlat
nop
sub
xchg
icebp
xchg
pop
cmp
and
adc
lods
cld
adc
xchg
lcall
loop
daa
add
fdivl
push
push
arpl
push
mov
fs
jb
mov
lahf
mov
inc
jle
ret
dec
mov
fidivs
mov
ljmp
pusha
lcall
mov
dec
jnp
cmpsb
inc
jp
pushaw
sub
pop
adc
ss
sub
push
test
add
rclb
lea
fwait
lock
mov
mov
xor
sahf
notb
dec
in
cmp
ja
loopne
enter
imul
cmp
add
dec
push
jae
cmp
inc
test
or
push
lahf
cld
out
jbe
inc
pop
jno
test
les
aas
lock
shlb
adc
das
cwtl
test
aam
jb
jmp
and
fildl
int3
xchg
xor
rolb
sbb
jp
je
inc
sub
add
pop
jnp
mov
pop
sbb
sbb
cmp
lret
std
push
out
inc
xlat
and
push
fistl
test
lds
stc
xchg
jmp
aad
roll
push
sti
cmp
outsl
adc
in
sub
dec
xor
push
sbb
inc
mov
xchg
loopne
mov
sbb
jo
icebp
and
loop
idiv
daa
xor
mov
aas
push
pushf
sbb
cld
xchg
aam
push
div
clc
xlat
add
or
out
cmpsb
push
mov
jae
popa
mov
ret
enter
js
insl
ljmp
sti
mov
push
stos
lock
mov
add
jp
lcall
xor
pop
insl
inc
or
loope
arpl
jns
movsl
adc
push
stc
dec
lret
sbb
int3
int3
cli
and
and
push
inc
jno
out
out
mov
cmpsl
stos
mov
mov
push
jmp
insb
testb
or
push
cld
or
stos
pop
jge
jl
xchg
mov
cld
jno
push
mov
into
mov
mov
sbb
mov
cmpsb
pop
dec
inc
out
ja
and
inc
test
in
iret
stc
push
cmpsb
mov
lds
ja
sbb
das
leave
clc
mov
xor
stos
jmp
xchg
push
imul
xchg
mov
sbb
lods
scas
mov
push
push
jo
mov
jmp
mov
outsb
cld
std
call
enter
sub
jae
lret
lcall
pop
jne
xchg
in
lcall
sahf
pop
stc
jge
andl
andl
fdivs
ja
xor
pop
movnti
mov
and
movsb
jae
in
and
adc
inc
jmp
stos
add
cmc
cwtl
outsb
cltd
or
mov
mov
add
and
aad
push
mov
test
mov
in
mov
cmp
jle
int3
sbbl
insb
xchg
loopne
push
das
or
ficomps
loop
xor
fsts
cmp
pop
jns
addl
shrl
dec
fmull
xchg
sub
inc
repz
or
xor
ret
cmpsl
mov
mov
scas
dec
dec
dec
pop
push
mov
out
into
lods
shrl
mov
push
adc
mov
insb
incl
ret
cltd
xchg
out
pop
clc
and
jnp
lods
adc
ja
adc
fiadds
fld
gs
jle
mov
xchg
gs
add
std
lahf
iret
add
mov
adcb
xchg
add
insl
dec
jo
sti
inc
out
ja
std
lret
loop
mov
daa
es
pop
mov
pop
rcll
out
pop
outsb
mov
mov
std
inc
pop
sub
mov
adc
dec
cmc
lock
mov
sbb
mov
mov
mov
popa
jbe,pt
push
insb
shl
and
iret
hlt
adc
testl
xchg
sbbl
test
jl
dec
mov
cli
imul
fists
repz
xchg
sbb
stos
imul
inc
andl
adc
adc
cmp
jecxz
push
jo
loopne
mov
orl
cmp
imul
pushl
sub
jbe
mov
stos
cmp
xor
js
je
mov
imul
idivl
loope
jmp
shrl
out
mov
mov
xor
push
popf
in
cwtl
scas
repz
dec
std
out
aas
ja
cmpsl
inc
or
lret
subb
aam
rclb
repz
into
js
pusha
js
ss
push
repz
and
arpl
cs
jecxz
jp
add
jg
jl
and
adc
mov
push
xor
mov
jle
adc
adc
pop
mov
jo
insb
lock
dec
imul
popf
int3
pop
gs
mov
ficoms
mov
dec
inc
scas
out
dec
sahf
lock
adc
in
cmp
mov
mov
popa
sbb
mov
cwtl
inc
xchg
pop
repnz
xchg
imul
fwait
outsl
repnz
push
xor
pop
or
inc
pushf
popa
or
push
bound
cmc
push
leave
in
xchg
sub
fnsave
push
fnstcw
push
in
push
pop
push
push
sbb
loopne
xchg
cmp
icebp
sbb
inc
mov
mov
sub
mov
inc
mov
xor
xchg
add
cwtl
xorb
jge
pop
inc
push
add
pop
repnz
out
inc
xchg
aam
fiaddl
sub
push
leave
sbb
jecxz
test
in
aam
out
mov
popf
pusha
push
dec
mov
xchg
mov
cli
mov
xchg
shr
xchg
dec
mov
jns
jne
xchg
pusha
cli
dec
cli
repnz
in
aad
jmp
je
sbb
pushf
xlat
mov
inc
test
jbe
enter
add
shrl
cmc
loope
push
ss
fiadds
sahf
nop
aam
aad
ret
fbstp
pop
cmp
dec
sbb
sub
cltd
and
push
fnsave
pmulhw
in
sub
push
daa
out
jl
shlb
fldt
aad
lahf
pop
imul
aam
sbb
dec
idivb
js
frstor
sbb
push
and
add
les
add
jmp
sub
xchg
sbb
shl
jae
icebp
jecxz
push
adc
jge
ret
ljmp
and
mov
ret
dec
inc
sbb
sub
jle
dec
insb
das
mov
lret
ljmp
cltd
sti
and
dec
add
or
imull
mov
insl
mov
push
lret
pop
cmp
mov
cs
sarl
mov
adc
push
adc
sbb
mov
xor
mov
lds
xor
repnz
inc
test
fucom
push
jne
pop
jle
sahf
pop
or
aam
xchg
divl
addl
addr16
loop
ret
mov
aam
and
xchg
scas
jle
cltd
repz
movsb
orb
cld
xor
pusha
mov
inc
outsb
pop
inc
out
ss
or
aam
cmp
sub
std
fiaddl
into
out
repnz
cli
mov
mov
mov
mov
or
out
cmp
cs
jbe
mov
jne
pop
jmp
stos
ret
xor
mov
and
mov
shlb
xchg
and
hlt
inc
inc
push
test
test
and
mov
movsl
ror
sbb
pop
ror
je
dec
sub
push
aam
sub
psubq
xchg
shr
push
xchg
lahf
sub
dec
add
clc
cmp
clc
or
in
xchg
inc
cli
pop
cmp
xchg
repnz
ljmp
xor
dec
or
or
mov
inc
inc
les
push
imul
pop
xor
mov
lea
adc
outsb
and
hlt
dec
stc
xchg
mov
out
mov
or
fdivrs
dec
jge
adc
jp
scas
fisttpl
cmp
inc
rcr
out
cmp
fwait
cmp
jp
cmc
arpl
sti
lret
sub
fldl
jle
repz
hlt
push
aam
in
cld
bound
jo
inc
inc
or
mov
jp
mov
cmp
cld
push
stos
arpl
mov
mov
mov
lock
lock
loope
cltd
sub
dec
hlt
incb
inc
cmpsb
clts
xchg
movsl
aad
or
movsl
imul
or
movsl
pusha
inc
fidivl
push
adc
cld
rolb
sub
aaa
push
pop
shrb
je
insl
test
addr16
push
scas
xor
sbb
int3
adc
repz
leave
test
jge
xchg
movsl
arpl
mov
insb
ret
bound
mov
or
push
cmp
push
cmpsb
cwtl
popa
cmpl
in
or
out
mov
xchg
lock
push
movsb
pop
and
js
xor
push
decl
addl
iret
xchg
into
sub
lret
push
sbb
je
mov
int
mov
jmp
sub
bound
push
es
pop
xor
popa
jae
mov
jbe
xlat
jecxz
sub
jnp
imul
outsl
xor
cwtl
repnz
mov
out
xchg
jne
jb
jl
fwait
or
dec
jecxz
mov
test
pop
or
add
inc
ret
cmp
loope
sub
mov
xor
jle
add
ret
orl
out
arpl
adc
inc
and
cltd
pop
ficomps
ljmp
popf
repnz
jbe
aam
cld
mov
pop
aaa
mov
idiv
insb
lods
jle
loop
iret
pushf
pop
rcrl
add
mov
push
xor
sub
popa
ret
out
mov
into
test
add
lcall
cld
shr
cmp
jo
shll
sbb
mov
dec
jbe
insl
xor
outsl
ficompl
sbb
outsl
ret
mov
ja
add
fnstenv
ud1
xchg
add
int
sub
mov
test
cmp
sbb
call
jmp
push
push
aaa
in
andb
xor
test
movsb
mov
jmp
fisttps
mov
imul
xor
rcll
scas
mov
hlt
pushf
daa
xchg
mov
rcl
mov
ss
fbld
dec
es
xlat
xlat
jge
stos
std
mov
and
mov
xor
repnz
popf
jns
pop
mul
and
clc
pop
push
mov
jo
dec
test
andl
sbbb
cli
pop
or
pop
fdiv
xchg
int3
pop
adc
fs
data16
push
jne
push
sahf
div
cmp
dec
mov
xchg
mov
pop
hlt
out
ss
push
out
sub
faddl
sub
daa
das
repnz
jecxz
inc
add
adc
lock
xor
lret
push
mov
bound
push
loop,pt
push
jge
subb
sub
mov
fimuls
daa
sub
stos
cli
jne
into
pop
outsb
push
dec
scas
aas
insl
int
iret
movsl
mov
mov
cmp
adc
sarb
in
popa
daa
mov
lods
add
mov
lret
jle
mov
daa
or
outsl
bound
push
rolb
inc
cmp
xor
jbe
mov
xchg
or
rcrb
jno
stc
ret
push
jge
movsl
dec
mov
insl
xor
cmpsb
cmp
repnz
xchg
in
popa
ss
mov
shll
pop
ja
pop
fcomi
pop
lods
shr
pop
adc
lahf
dec
add
push
sub
sbb
iret
sbb
sbb
std
mov
test
xchg
jmp
xlat
inc
and
sub
xor
xchg
adc
clc
mov
adc
in
outsl
loope
add
or
orl
xor
mov
mov
pusha
push
sub
xor
popf
in
xor
ss
pop
sub
call
iret
lcall
clc
mov
mov
mov
sarl
mov
mov
cmp
push
fisttpl
std
or
jp
lret
imul
pop
push
push
pushf
pop
ret
iret
mov
insl
repnz
fldenv
sbb
fs
in
shll
and
ds
jl
cmpl
out
aad
xlat
jo
jge
int3
hlt
rorl
jne
movsb
jbe
lds
jno
cmp
loop
imul
sbb
sub
push
mov
pop
adc
arpl
outsl
les
mov
lock
stos
xchg
ds
sbb
xor
cltd
cs
xchg
imul
and
inc
cmp
lret
aam
popa
xor
add
push
mov
popa
je
andb
nop
jge
jne
jb
fwait
or
lea
xor
sbb
scas
out
add
popf
repz
loop
mov
mov
mov
xor
dec
push
cmp
loopne
cltd
fs
cmpsb
pop
fcomip
xchg
out
lcall
xchg
rcrb
mov
dec
pop
mov
inc
push
push
ds
outsb
push
push
mov
imul
mov
in
mov
add
sub
mov
addr16
mov
fistpll
lods
lods
testl
bound
cmpsb
das
cmp
test
adc
sbbb
out
xchg
dec
push
sti
xor
mov
jbe
mov
lret
sbb
into
loopne
lods
repz
xchg
pop
jne
fld
xor
adc
add
dec
xchg
cmpsb
test
cld
sahf
mov
cmpsb
mov
lret
sbb
mov
daa
nop
push
in
das
xor
lret
inc
push
dec
inc
into
jmp
mov
dec
repnz
repnz
mov
push
mov
sub
push
pop
lret
cltd
imul
xchg
pop
dec
mov
push
in
or
pushf
xorb
push
out
test
and
or
xchg
jno
fldt
arpl
stos
mov
test
mov
je,pn
xchg
mov
xchg
int3
out
lods
sbb
rcl
cmp
xchg
mov
xchg
xchg
movsb
lret
mov
pop
dec
xlat
or
stc
mov
int
cld
jne
hlt
aam
cwtl
std
cmp
into
mov
out
in
add
cwtl
cmp
cmp
mov
inc
jecxz
adc
jns,pn
sub
pop
clc
add
out
xor
aas
dec
fs
fsubr
into
push
xor
bound
bound
shll
ret
push
or
repz
test
inc
pop
xor
hlt
lock
lods
icebp
sub
sub
ja
outsl
cwtl
push
roll
pushl
push
or
lret
mov
outsl
fmuls
stos
lcall
ret
or
fisttps
adc
lock
mov
imul
inc
fdivrl
adc
hlt
push
notl
in
pop
idivl
call
loopne
loop
fisubrl
movsb
icebp
stc
add
push
lahf
pop
xchg
fstps
xchg
aam
mov
scas
xchg
adc
das
aad
les
push
enter
shlb
xchg
outsb
sub
inc
in
mov
and
and
int3
sbb
mov
mov
add
cld
mulb
in
fsubs
lods
cmp
aam
or
and
xor
pop
stos
shlb
rclb
cmc
pop
das
mov
shlb
jle
out
ljmp
incl
das
lret
fstpl
sahf
loope
pop
testl
xorb
mov
in
sbb
dec
in
pop
test
xor
jge
cld
int
jmp
dec
dec
jle
lahf
jl
pop
lret
lahf
movsl
arpl
and
add
mov
loope
mov
sub
das
pop
dec
push
fadd
aam
inc
xor
push
ljmp
data16
add
pusha
fdivrs
cwtl
inc
sub
and
and
fwait
push
hlt
stos
test
xchg
or
lcall
dec
repnz
pop
sbb
lods
jge
or
inc
aaa
cld
push
sub
lods
push
in
rcr
sbb
and
push
add
arpl
sbb
cmp
jle
cmc
ret
pusha
push
jnp
dec
adc
and
xchg
inc
mov
inc
fadds
xor
cmp
mov
pop
pop
icebp
pop
inc
in
lahf
enter
sub
dec
roll
movsl
test
test
xchg
cmp
cmp
lods
fimull
mov
xchg
or
pop
mov
cs
inc
sbb
and
out
push
addb
inc
pop
fldt
cmp
mov
pushf
push
clc
mov
jae
sub
push
sub
pop
lods
or
sbb
jp
lret
mov
into
push
push
push
fcmovbe
sbb
adc
inc
outsb
decb
mov
pop
aas
xchg
shrl
pusha
push
mov
xor
xchg
in
add
lahf
xchg
and
movsl
stos
scas
lret
push
sub
jecxz
ss
pop
sub
stos
lds
add
dec
mov
in
nop
std
sbb
out
fisubs
fisttps
mov
jl
xchg
dec
popa
data16
stc
push
nop
mov
push
xchg
jb
mov
mov
sub
pop
pusha
sbb
mov
aad
dec
sbb
scas
add
pop
jmp
adc
xchg
ret
shlb
incl
nop
xchg
es
adc
dec
xchg
sti
sub
in
cmc
lahf
int
push
inc
stc
cmpsb
loopne
ss
aaa
lret
mov
sub
mov
adc
sub
ret
leave
enter
in
lcall
insb
cwtl
fucomi
or
xchg
aam
mov
adc
xchg
or
in
push
pusha
in
jb
and
cmp
in
cmp
xor
std
sbb
jo
nop
dec
test
push
ret
movsl
js
shlb
and
jl
scas
push
mov
push
daa
add
popa
dec
xchg
pop
popa
out
sahf
xor
adc
inc
inc
dec
pop
shr
leave
loop
daa
repz
xchg
jg
mov
push
aad
bound
in
jbe
cs
in
sub
mov
push
repnz
sub
insl
inc
lods
mov
xchg
adc
sbb
sbb
cmovns
jp
adc
adc
mov
xchg
jno
inc
stc
pop
js
imul
add
mov
pop
dec
push
cmp
cmp
xlat
leave
cmpsb
cwtl
dec
aaa
in
xorl
cmp
out
int3
scas
cwtl
bound
out
push
pop
addl
xchg
lea
cmpsb
pop
arpl
push
ds
addr16
aaa
pushf
jbe
pop
bound
aaa
and
inc
outsb
push
mov
mov
mov
scas
in
jnp
xor
fwait
lds
sbb
aam
mov
dec
mov
mov
push
subl
add
mov
xchg
mov
mov
add
mov
or
test
jno
inc
pop
xchg
stos
aas
clc
out
popa
ret
pop
sbb
pop
outsl
add
scas
icebp
inc
inc
js
push
inc
mov
jecxz
ret
scas
es
bound
stos
mov
icebp
testl
in
dec
jmp
mov
int3
out
or
ret
cld
pop
jmp
cmp
nop
out
adc
inc
insl
pop
shrl
pop
stos
pop
push
dec
sub
pop
stos
push
std
mov
ljmp
sub
xchg
rolb
repnz
dec
and
xchg
push
rol
jl
pushf
mov
dec
fmull
jo
aaa
mov
in
scas
stc
jmp
inc
ds
cld
dec
mov
jg
mov
aad
mov
ss
xor
jbe
out
lret
test
push
mov
cmpsb
sbb
xchg
xor
push
ret
xlat
sti
pop
lds
jns
out
sbbb
sbb
sub
lods
mov
dec
xchg
sbb
into
cmp
mov
mov
sahf
add
lcall
xor
inc
enter
sti
aam
or
mov
or
push
sub
adc
mov
pop
mov
push
push
cltd
push
dec
add
mov
enter
fcmovne
testb
leave
dec
das
jl
call
test
jb
ret
xchg
jae
mov
lcall
sub
les
pmaxsw
dec
mov
sub
ret
mov
icebp
sti
xchg
hlt
scas
gs
xchg
sub
cwtl
in
mov
jne
sub
icebp
cmp
pop
shll
lret
shr
jg
mov
ljmp
dec
iret
sahf
aaa
inc
xchg
test
rcrl
jmp
mov
xchg
imulb
mov
rolb
xlat
xchg
shll
mull
pop
adc
das
jl
stos
dec
mov
or
cmp
aas
or
dec
aas
add
popa
sbb
jle
sbb
or
orl
adc
dec
pop
int3
int
sbb
mov
fwait
push
outsl
in
lods
pop
push
mov
mov
sub
in
mov
and
loop
cltd
dec
leave
add
leave
pop
sbb
mov
loopne
push
push
inc
sbb
cmc
clc
popf
push
ror
sub
adc
pop
stos
fnsave
loopne
cmp
mov
dec
jge
mov
imull
sub
push
or
es
dec
jmp
movsb
mov
pop
and
mov
fwait
push
inc
lret
out
mov
lret
mov
inc
mov
fdivrl
dec
lcall
dec
mov
std
mov
out
subb
xor
adc
cmpsl
or
icebp
xor
push
mov
sbb
push
push
imul
fimuls
arpl
or
xchg
xchg
and
loop
outsb
in
hlt
add
lret
inc
dec
dec
fs
flds
das
into
mov
cmpsb
test
testb
ja
push
movsl
lcall
call
cmpsl
shr
out
mov
cwtl
or
push
xor
fcoms
testb
sub
pop
mov
sbb
sbb
movsl
scas
mov
clc
aad
push
jae
mov
push
jp
xlat
imul
aaa
adc
jp
test
push
lret
idivb
jne
mov
ljmp
mov
insb
push
ljmp
enter
dec
cmpl
lret
fwait
inc
mov
pop
mov
push
gs
nop
sub
xor
nop
andb
xor
adc
test
mov
insl
dec
adc
jp
mov
out
add
pop
addr16
cmp
stos
cmp
push
cmp
in
sub
orb
insb
push
mov
insl
fidivs
fdivr
jb
notb
aad
push
loope
push
push
mov
icebp
mov
popf
inc
push
pop
sbb
inc
roll
lea
push
xor
scas
fstl
lods
cli
repz
mov
gs
fwait
inc
mov
pop
fnstcw
jo
add
imul
xchg
fisubs
push
jae
lods
pop
jo
enter
push
jg
and
into
insb
test
cmpb
sbb
addl
mov
push
push
movntq
out
gs
fimuls
jo
lods
stc
fsubrl
jg
sbb
lret
add
ljmp
xchg
cltd
push
js
mov
les
cmp
pop
jbe
add
nop
repnz
mov
subl
mov
xchg
test
loopne
jl
in
lods
cmp
imul
mov
mov
and
lahf
daa
mov
add
ss
and
and
movsl
daa
jns
inc
add
insl
dec
sbb
and
sub
push
int
mov
data16
pop
sub
bound
adc
pop
mov
lcall
push
pop
lods
mov
mov
mov
icebp
cmpsl
lea
cmp
dec
add
mov
iret
mov
pop
test
arpl
add
jmp
ficoms
adc
cwtl
inc
and
ss
cmp
or
cld
pop
xchg
std
xor
leave
inc
fistpl
inc
stos
scas
lret
xchg
ljmp
pop
xor
mov
repz
xchg
popa
xchg
pop
or
jge
imul
xchg
mov
push
cmpsl
xchg
dec
out
lods
lret
dec
loopne
in
lret
mov
jb
mov
lcall
mov
xchg
inc
push
jge
out
push
push
mov
cs
inc
in
pop
inc
iret
stos
aas
int
fimull
ret
jns
dec
mov
jmp
mov
and
xor
rol
outsb
adc
mov
mov
jbe
push
xor
mov
xchg
ret
cmp
add
push
iret
xchg
sub
and
aam
lahf
roll
add
loope
or
dec
mov
lods
loop,pn
ds
add
cmp
ss
pop
cmp
repz
add
sbb
test
mov
push
push
xchg
mov
dec
push
imul
dec
xchg
sbb
test
or
dec
mov
cmp
jno
sbb
add
sti
outsl
pop
jae
aam
jmp
dec
addr16
ljmp
lds
sbb
add
add
or
insb
ja
fs
and
mov
or
pop
sbb
sarl
cld
pop
adc
xor
jp
stos
in
cld
out
adc
or
sub
sub
in
mull
mov
push
out
ljmp
subb
fisttpll
loopne
push
xor
test
adcb
daa
ficoms
ds
xchg
rclb
imul
sub
xorl
shl
loopne
inc
cmp
cwtl
push
jno
sbb
mov
xchg
fnsave
push
and
loop
xor
pop
or
test
jmp
xor
sbb
aam
shll
inc
popa
pop
sahf
cmpl
sbb
mov
popa
pop
mov
inc
mov
enter
inc
mov
and
shlb
ja
jbe
in
sub
jecxz
fistl
pusha
xchg
popa
jge
fidivrl
aas
rep
stc
pop
test
sub
clc
mov
std
add
jmp
lods
js
shll
push
ffree
xchg
loope
xchg
mov
cmp
sbb
fistpll
lcall
pop
push
mov
sbb
subb
cmp
in
outsl
int3
fcmovnu
pop
pop
subl
pcmpgtb
pusha
stos
stos
jl
and
int3
sub
in
cmp
or
repz
cwtl
jl
pusha
mov
mov
in
sub
jle
scas
cmpsb
fcomps
dec
jmp
imul
push
lds
loop
loop
repnz
inc
mov
add
sbb
lahf
dec
mov
cmp
lock
iret
adc
je
xor
adc
xchg
add
movsl
into
and
cmp
ror
fistps
jae
pop
fcompl
cmpsl
inc
gs
movsb
push
popa
test
mov
shll
jae
mov
xor
and
sub
fwait
mov
push
in
add
test
fucomi
mov
ss
mov
cmp
lret
jae
xlat
xchg
dec
adc
mov
js
cwtl
int
mov
xchg
sub
mov
adc
clc
lahf
add
test
sub
daa
jne
cmpsl
imul
lea
leave
sbb
jle
or
sub
xchg
push
rolb
in
add
or
ret
test
lret
cwtl
mov
into
icebp
hlt
pop
sti
or
ret
jge
cltd
insb
mov
xor
or
ja
xchg
movsb
push
fsubrl
adc
mov
mov
add
rorb
lods
sbb
xor
fimull
iret
push
enter
sbb
push
dec
ret
push
sbb
adc
push
sub
add
nop
and
outsb
xor
mov
pop
rorb
adc
pop
mov
or
test
and
jg
in
cmp
sbb
mov
xorb
mov
insl
add
out
mov
adc
sub
shr
fisubrs
daa
ds
pop
rep
xor
mov
repnz
cmpsb
pop
cmp
xorl
aaa
push
je,pt
jns
sub
push
ficoml
xchg
loopne
mov
popa
adc
scas
jl
or
mov
nop
sbb
push
nop
rcrb
mov
call
cmp
icebp
inc
out
add
sahf
rorb
and
xchg
cmp
das
add
aaa
mov
lcall
pop
cmpsl
scas
insb
push
dec
js
add
sub
jmp
push
pop
pop
loope
jb
sub
enter
lahf
cmp
scas
fwait
sub
in
imul
add
cmp
mov
lods
xor
bound
xor
les
lock
mov
nop
adc
pop
adcl
xchg
cld
or
dec
xor
and
popf
imul
sbb
pop
out
rorl
jge
out
std
mov
mov
mov
push
inc
and
mov
int3
pshufw
lea
mov
imul
or
pop
std
mov
lods
setno
bswap
jge
mov
jp
aam
repnz
pop
lock
out
inc
push
movsb
cmp
sahf
mov
lods
lcall
bound
xchg
sahf
xchg
jmp
mov
or
sub
adc
fsubrl
cmp
repz
out
sub
movlps
cwtl
mov
das
jl
add
cli
scas
movsl
lcall
jae
jne
orl
jb
stc
loope
ss
andb
addr16
movsb
xor
or
cli
arpl
fisubs
fs
shll
adc
in
cli
pop
loopne
xchg
popf
shrl
repz
sub
sbb
lcall
add
sbb
cmpsb
cwtl
jb
add
xor
and
xor
jo
dec
push
inc
mov
cmc
push
aas
and
dec
jg
and
js
cmp
mov
jl
adc
cwtl
cmp
push
mov
and
adc
inc
sti
aam
stos
push
fdivrp
cmc
bound
movsl
and
push
mov
stc
jl
xchg
push
lods
scas
xchg
cld
bound
cs
sahf
and
jno
dec
mov
and
inc
adc
insb
push
jb
mov
fistl
xor
pop
iret
vpaddsb
popa
lock
cmc
pushf
flds
sub
inc
cmpsl
mov
adc
nop
daa
mov
fldz
jp
lods
or
fsubl
sahf
sub
roll
push
fdivl
movsb
bound
xor
lcall
xchg
call
shrl
pusha
lcall
push
fidivs
jle
addr16
popf
jbe
dec
fnstcw
pusha
daa
lea
mov
sbb
std
xchg
xlat
jl
mov
xor
inc
mov
test
adc
mov
test
gs
xchg
pop
or
repz
decb
inc
pushf
add
dec
xchg
mov
insb
xchg
jmp
fwait
pop
sbb
cmp
mov
jl
dec
cmp
dec
aaa
cmpsb
ret
decb
lods
orb
cld
and
push
repz
sbb
repz
mov
lahf
pop
sub
inc
lcall
scas
lods
pop
test
pop
xor
or
mov
rcrb
outsl
jbe
ret
mov
or
jge
mov
adc
decl
lret
cs
or
mov
jns
adc
add
push
fstpt
jns,pn
cli
xchg
mov
call
push
daa
scas
fnsave
fiadds
rorb
or
bound
push
inc
add
mov
adcl
cmpsl
sbb
mov
cmp
ja
mov
das
mov
pop
pop
ret
pop
fcomps
fcmovbe
shr
aad
xchg
mov
pop
mov
int3
adc
test
adcb
call
ror
and
sbb
fistpll
or
pushf
pop
in
fcomp
jae
stos
xor
cmp
xor
aam
mov
pop
imul
jbe
mov
pop
sub
cmp
or
mov
icebp
lods
lea
in
mov
xor
popa
mov
call
and
and
dec
out
outsb
ja
jno
cli
and
adc
mov
inc
adc
loopne
mov
dec
push
repnz
cwtl
push
xchg
shrb
sbb
jne
xchg
ds
mov
add
in
mov
loope
sub
fbld
test
iret
shll
pusha
pop
and
movsb
fsubs
add
cmp
dec
push
dec
jp
pop
add
cmp
movb
arpl
xchg
pop
pop
shlb
or
dec
and
push
inc
shll
in
call
mov
sbb
inc
push
inc
jnp
inc
mov
cmpsl
in
mov
test
xor
cmp
in
jmp
xchg
or
stos
andb
push
std
inc
loopne
scas
pop
int
popa
inc
or
shl
into
fs
adc
sub
fstp
and
adc
hlt
orl
jb
shll
sub
test
cmpsl
push
cmpsl
pop
and
mov
ljmp
and
mov
ljmp
pop
sti
pop
repz
xorl
int3
fnstsw
and
push
div
les
sbb
mov
cmp
mov
jge
and
adc
mov
ljmp
adc
test
idivl
mov
lahf
fs
jo
test
iret
sub
mov
or
out
or
pop
inc
jo
pop
test
cmpl
lea
sti
and
add
outsb
rcl
pop
mov
jne
rolb
mov
outsb
hlt
xor
mov
cmp
jnp
push
orl
push
in
es
inc
or
pushf
out
xor
jns
out
stc
or
xor
jbe
iret
push
idivl
mov
aam
mov
cmp
out
orb
push
mov
push
add
sti
xor
das
ffreep
jae
xor
xchg
jo
push
mov
scas
mov
push
sbb
sti
leave
shlb
and
and
cmp
mov
jne
shl
loopne
pop
and
icebp
rclb
leave
int
aam
push
gs
cmp
call
mov
mull
int
add
ss
mov
cmp
mov
out
sbb
aaa
inc
jge
mov
push
or
lods
sub
mov
mov
dec
xchg
fbstp
lea
popf
loopne
xchg
movsb
sub
cmc
sub
mov
xchg
mov
push
cmp
mov
jmp
cmp
testb
xchg
lret
cmpsb
jecxz
mov
fdivs
into
stc
cmpl
stos
or
dec
je
inc
jbe
push
ja
dec
aas
clc
xorb
pop
mov
std
xchg
pop
fisttpl
dec
cli
add
sbb
stc
loop
cmp
lret
fld
push
xchg
bound
mov
cmp
push
dec
mov
push
ds
adc
lahf
jo
testl
sahf
roll
popa
sbb
xchg
fnsave
les
cmp
jle
fidivrs
jae
pop
in
push
cmp
pop
lret
push
inc
mov
fsub
out
mov
mov
mov
out
ficompl
scas
jbe
ret
ret
shll
push
arpl
jp
fiaddl
iret
lock
rcr
repz
into
or
shrl
pop
test
js
pop
decb
dec
dec
dec
fbld
sbb
push
fwait
enter
sti
test
or
addl
and
adc
and
push
push
loopne
andb
xor
push
mov
pop
push
ror
add
mov
ds
incl
push
insl
loopne
xor
mov
pop
inc
dec
cmp
mov
mov
mov
and
lods
pop
adc
mov
sub
inc
mov
popf
cld
xchg
inc
cmp
and
jbe
mov
ds
ja
lds
pop
cltd
call
xor
or
mov
xor
push
xchg
rclb
cmc
test
leave
imul
jo
pop
negb
push
pop
adc
pushf
imul
hlt
and
pop
mov
mov
push
xor
mov
daa
test
pop
mov
push
cmpsl
leave
shlb
inc
or
sub
xor
bound
or
push
stos
enter
ja
call
ret
shlb
and
leave
mov
in
mov
cmp
dec
iret
repnz
inc
mov
push
fs
test
push
xchg
arpl
jmp
pushf
sub
adc
test
dec
shlb
jo
mov
mov
xchg
push
ss
mov
or
jbe
sbb
pusha
jae
adc
dec
test
in
lahf
flds
jg
xchg
std
mov
cmpsl
stos
mov
adc
mov
push
xlat
fcmovnb
mov
movsl
ss
inc
sub
insb
int3
out
and
ret
mov
sub
bound
inc
sub
pop
fistps
insl
bound
outsb
scas
or
sbb
mov
push
test
loopne
mov
mov
ds
push
jmp
call
mov
loope
sbb
shll
nop
dec
pop
jmp
pop
or
andl
jecxz
add
sbb
pop
sub
mov
jg
jge
sbbb
cmp
repz
cmp
mov
xchg
jge
das
push
test
jecxz
pop
maxps
jbe
stos
pop
test
and
jecxz
mov
out
pop
stos
cmp
clc
insl
mov
test
daa
pop
stc
jne
pop
push
sti
mov
push
fnsave
mov
adc
or
xchg
popa
mov
and
cmpsl
je
adc
sub
xor
inc
outsl
test
mov
rol
shlb
insl
add
jo
jle
add
mov
sahf
adc
cmp
sub
mov
rolb
shll
mov
out
inc
cmpsb
push
sub
sub
mov
test
pop
mov
imul
mov
adc
movsb
nop
inc
xchg
dec
repz
mov
xor
jmp
xchg
push
mov
fidivrs
mov
sbb
cmc
and
adc
xor
sbb
clc
add
hlt
movsl
jne
jmp
pop
fmull
pop
out
std
push
dec
mov
cmpsb
mov
ja
andb
sti
jge
or
pop
dec
nop
push
jnp
cwtl
sbb
mov
lods
cwtl
add
stos
jl
cmp
xchg
cmc
and
pushf
insb
popf
out
or
mov
and
daa
in
xor
mov
xor
les
in
stos
sbb
insb
add
scas
mov
mov
cmc
inc
cmpsb
add
sub
or
jp
icebp
jbe
or
xor
xchg
mov
pop
cmc
bound
pushf
adc
add
pushf
orb
stos
push
scas
ret
jmp
out
push
outsb
adc
xchg
scas
js
cmc
out
xchg
roll
jb
mov
adc
or
inc
dec
xchg
xchg
xchg
mov
cmp
imul
inc
dec
outsb
fistps
leave
dec
pop
mov
cs
hlt
loopne
mov
fs
sub
ret
mov
push
and
xor
outsl
mov
mov
aaa
xor
pop
or
clc
test
adc
jae
jae
xchg
xor
jge
enter
pop
popa
and
addr16
fwait
push
in
mov
test
gs
or
mov
nopl
nop
cmp
loop
sti
jne
sbb
pop
push
frstor
mov
dec
mov
mov
sbb
xor
fidivrs
push
enter
inc
data16
add
pop
and
es
xor
push
jmp
sub
pop
mov
cwtl
aad
aam
pushw
mov
lods
mov
test
mov
jecxz
mov
pop
mov
dec
mov
stos
data16
dec
in
scas
imul
fs
push
lret
testl
push
sbb
cmpl
sti
lods
das
add
icebp
test
cmp
mov
lods
in
movsb
mov
dec
fimuls
or
popa
inc
xchg
repnz
leave
cmp
jp
lock
pop
nop
icebp
push
out
js
lret
and
cs
dec
pop
pop
push
loopne
jge
je
dec
out
iret
sbbl
dec
cmpsb
sub
push
add
jne
imul
adc
mov
out
lea
sbb
lock
clc
jae
and
js
xorb
cmc
and
dec
fwait
lods
insb
clc
mov
sub
mov
imul
push
jmp
inc
fs
dec
push
cltd
lret
pushf
inc
jmp
imul
sub
cwtl
rorl
in
and
gs
adc
adc
sbbl
push
in
out
xor
jp
add
push
xor
add
repnz
cmp
sbb
sbb
shrl
data16
or
sub
mov
outsb
test
pop
sar
xchg
movsl
and
jg
inc
popf
cld
out
outsb
ja
aad
jbe
and
pushf
add
mov
mov
int3
adc
scas
or
ljmp
cmpb
mov
cmp
fsubl
mov
push
jbe
sti
lcall
out
xlat
test
jne
or
xor
adc
push
mov
adc
js
stc
test
jl
and
mov
xchg
cmp
lret
outsb
es
inc
cmc
int
jbe
sahf
mov
mov
jbe
push
test
sbb
das
mov
xchg
add
test
pop
lock
push
dec
in
and
pop
icebp
push
movsb
jle
fwait
arpl
test
jmp
call
shlb
mov
repnz
lea
out
jae
fnstsw
xchg
cltd
mov
sub
push
gs
hlt
repz
outsb
sti
sub
ljmp
pusha
or
sbb
das
andl
sahf
insb
sahf
mov
push
popa
mov
adc
repz
and
add
arpl
mov
cmp
sub
hlt
stc
mov
lods
sbb
aas
pop
sarb
sahf
or
cmp
mov
mov
cli
cwtl
adc
jb
pusha
push
pop
lret
outsl
out
pop
imulb
jno
fstpt
test
bnd
rclb
inc
into
dec
or
xchg
and
aas
jb
ja
pop
and
adc
add
orl
incb
or
pop
out
add
aam
pop
sbb
jecxz
dec
dec
out
into
jmp
data16
movsb
jne
cs
xchg
jnp
leave
je
movsl
pop
mov
push
popa
sbb
pop
dec
push
in
mov
bswap
roll
lea
rcr
add
daa
testl
es
sbb
cmp
mov
jmp
pop
mov
imul
xchg
movsl
test
push
leave
add
push
enter
addl
mov
je
mov
pop
mov
cs
jnp
push
push
aas
xor
sbb
test
icebp
jle
push
mulb
mov
dec
jg
push
xchg
pop
arpl
or
cmc
test
mov
inc
adc
add
jmp
out
in
pushf
psrlq
mov
dec
xor
cmc
lcall
call
dec
or
jo
int
inc
sahf
leave
cmp
gs
and
lret
je
xor
fwait
xchg
arpl
mov
cmp
cmpsl
mov
loop
aaa
mov
pop
and
rcrb
clc
adc
sbb
or
adc
xor
cwtl
into
add
stc
cltd
cmp
xor
imul
push
push
dec
loope
xor
dec
jns
push
outsb
mov
xchg
mov
addb
nop
mul
and
or
adc
adc
sub
scas
dec
cmp
insb
xchg
imul
cmp
mov
pop
adcb
loop
ret
push
gs
insl
cs
sar
adc
shll
jnp
fmull
out
push
fmuls
aad
adc
mov
incl
cmpsb
xchg
dec
push
bound
jnp
cmp
clc
scas
jbe
xchg
mov
cmp
cmc
inc
stos
pop
push
push
outsb
cwtl
lock
xchg
pusha
imul
imul
enter
es
lea
xchg
dec
rolb
pop
mov
xor
mov
mov
scas
jo
popa
subb
jae
pop
add
jne
cmp
jno
loopne
arpl
push
sub
jle
imul
cs
sbb
inc
scas
push
jae
fstp
sbb
mov
hlt
add
test
aam
movsb
jp
movsl
popa
adc
pop
cld
out
jl
push
in
pop
rorl
cmc
xchg
iret
adc
xor
lret
inc
mulb
lret
fistl
ljmp
movsw
insb
mov
je
sbb
in
xor
lock
ds
xchg
rclb
jp
xor
out
shlb
push
xchg
repz
test
leave
adc
in
fwait
outsl
sub
mov
rorl
loop
jp
mov
fistl
adc
sbb
imul
jle
outsb
lock
jae
push
dec
sbb
mov
cmc
icebp
int
mov
pop
xchg
in
pop
inc
push
mov
mov
push
push
in
in
data16
xor
out
lahf
dec
push
call
lahf
rol
jl
push
dec
es
adc
pop
sbb
push
mov
inc
sub
sti
je
je
mov
iret
xchg
repnz
xor
orb
imul
jb
pop
push
cltd
stos
mov
sbb
rcrb
cmpb
and
pop
mov
mov
lds
mov
pop
rcpps
fwait
jge
mov
jae
mov
mov
sbb
adc
cmpsl
push
sarb
dec
repz
mov
lds
jmp
pop
jb
stos
pop
mov
xor
push
pusha
push
cmpsl
sahf
testl
inc
xor
push
jp
add
cmp
je
lret
and
push
push
lahf
mov
sbb
jns
subl
push
rolb
leave
mov
data16
fnstsw
cli
sub
mov
stos
addr16
out
ss
lods
jmp
int3
imul
cmp
xlat
dec
xchg
dec
mov
inc
into
testb
movsb
mov
rol
enter
and
out
stc
mov
addr16
testb
int3
int3
pop
sbb
push
xchg
sbbb
lcall
jns
leave
lret
sti
fsubr
cmpsl
mov
xchg
adc
aad
in
stc
dec
fmul
dec
test
push
fs
sbb
push
sahf
jns
inc
and
shrl
lcall
push
sub
fisttps
cwtl
push
xlat
arpl
jle
lcall
sub
push
aam
fimull
fcoml
mov
out
test
cld
adc
dec
jbe
push
jae
fildll
es
jp
lock
and
cld
shl
pop
lea
or
xchg
mov
mov
xchg
in
vcvtsi2ss
cmp
mov
aad
fisubrs
push
out
inc
in
push
inc
jb
inc
jle
enter
ss
pop
jg
movsl
call
je
test
mov
sub
lret
int3
xor
and
mov
adc
addps
gs
xchg
xchg
or
movsb
ljmp
adc
add
pop
testl
das
mov
test
aam
cmp
mov
push
and
loopne
cmp
not
push
test
xor
jns
inc
sti
cmp
dec
fcoms
dec
and
jge
or
fisubl
add
out
mov
mov
jb
add
inc
fwait
add
les
stos
mov
inc
fisubrs
lds
int3
rcr
fisttps
dec
mov
dec
xchg
fldl
sbb
daa
pop
jmp
inc
jle
fidivs
ret
jl
sbb
mov
out
faddl
das
cltd
mov
push
pop
mov
in
adc
mov
repz
push
jg
mov
jno
push
inc
and
mov
push
idivb
dec
mov
dec
in
out
sbb
mov
sbbb
pop
jl
loop
ds
aam
scas
ret
subb
and
mov
sbb
inc
test
sbbl
push
sub
dec
mov
jbe
imul
mov
lods
inc
scas
loope
dec
push
jle
pop
mov
call
lahf
mov
fstp
push
mov
std
lret
dec
ja
dec
or
rclb
imul
in
movsb
and
and
sarb
dec
inc
inc
sub
mov
xchg
gs
fsubrs
out
pop
add
in
jnp
pop
mov
lds
popf
xchg
sub
add
add
fdivs
pop
mov
outsb
sbb
mov
jle
add
push
insl
push
cmp
scas
test
js
jae
pop
out
jno
sub
rcll
xchg
inc
jl
fcmove
fwait
mov
fs
sbb
stc
pushf
out
insl
repnz
outsb
or
and
inc
pushf
ljmp
sbb
or
pop
inc
movsl
xchg
in
imul
mov
mov
pushl
ss
shl
mulb
jnp
xor
jmp
shll
and
lea
cmc
add
push
loop
arpl
idivb
push
inc
mov
rclb
sbb
je
int3
push
mov
scas
push
rcr
mov
into
les
or
fldl
and
add
push
faddl
add
outsl
jg
mov
arpl
pop
sbb
lret
dec
push
out
pushf
jl
aad
push
and
les
dec
mov
add
sub
addr16
incl
andl
out
jno
cmpsl
cmp
jle
imul
mov
mov
adc
movsl
lret
sub
jmp
mov
ja
mov
movsl
outsb
adc
ds
sbb
out
sub
mov
mov
jae
filds
aaa
movsl
dec
aaa
or
inc
in
and
out
mov
movsl
cli
stos
sbb
iret
xlat
cwtl
and
mov
xor
fsubrs
pop
add
pop
faddp
nop
subl
data16
ss
pop
push
arpl
adc
mov
or
sub
jmp
mov
jae
into
lods
adc
lret
sbb
xchg
xor
je
xlat
test
psubsb
dec
dec
sahf
mov
pusha
jge
add
cs
lahf
repz
out
les
ret
push
adc
jmp
xchg
dec
cmp
cmp
cs
add
cltd
adc
loopne
sbbb
inc
mov
ds
icebp
sub
or
popa
mov
add
je
bound
enter
outsl
in
and
dec
adc
jno
outsl
xor
lods
gs
add
pop
mov
and
dec
inc
mov
adc
ja
inc
movsb
jp
bound
fildl
jl
sbb
xor
cmp
xchg
ljmp
pop
mov
mov
push
testl
mov
jge
add
xlat
dec
push
push
lds
fucomip
sbb
pop
lods
xor
arpl
jge
repz
sbbl
pop
ror
repz
pushl
push
xor
leave
pop
insb
mov
inc
fimull
and
cmp
mov
popa
outsb
dec
and
lcall
scas
xlat
xor
cwtl
sub
push
psubusw
add
fisttpl
fs
adc
ret
mov
add
sub
and
imul
cmc
das
xchg
jl
dec
push
idiv
pusha
cld
xchg
inc
call
push
testb
jb
mov
pop
adc
push
shll
add
cmp
cld
dec
arpl
jns
adc
sbb
pop
orl
mov
adc
aas
rclb
fcomps
pop
sub
push
or
in
pusha
out
sti
mov
mov
adc
repnz
pop
sub
ja
push
push
push
and
pop
sbb
sbb
mov
fs
pusha
xchg
dec
add
pop
or
mov
xchg
std
out
mov
dec
fwait
or
inc
das
leave
hlt
or
lods
aam
cmpsl
pop
rolw
dec
push
movsb
mov
cmp
es
and
dec
mov
insl
adc
addr16
repnz
call
mov
leave
inc
add
inc
xor
aas
repz
pop
rcrl
sbb
clc
vmovups
fwait
push
adc
or
test
enter
inc
mov
mov
sbb
cmp
outsl
sbb
rclb
pop
sbb
mov
mov
int
mov
loope
pusha
cmpsl
loop
mov
sarb
hlt
xchg
leave
adc
test
imul
fsts
in
fcoml
sbb
rcrb
sub
inc
shll
push
pop
mov
rcll
loopne
push
imul
cld
roll
stc
mov
imul
adc
mov
and
xchg
cmpsb
dec
cmp
and
and
das
stos
xchg
sahf
and
cld
les
pop
mov
mov
test
inc
hlt
push
dec
sbb
lahf
pop
or
jmp
pop
outsb
push
jmp
imul
add
dec
repnz
cmc
in
mov
arpl
sbb
in
pop
pop
xor
insb
push
fst
and
or
popa
cli
pop
in
jg
repz
mov
jecxz
fisttpll
push
lcall
lret
pop
dec
or
insb
or
notb
mov
adc
data16
jns
aaa
hlt
rolb
outsl
jmp
outsb
scas
loope
addr16
andb
sub
das
push
pop
jnp
shlb
insl
mov
mov
pop
dec
stos
mov
lahf
cmp
inc
dec
dec
nop
adc
mov
xlat
sub
xor
aas
cmp
enter
mov
xor
xchg
cwtl
dec
ret
jbe
in
cmp
xchg
dec
xchg
xchg
leave
js
or
xchg
jo
pushf
pusha
xor
dec
aad
or
xor
jp
nop
xchg
shlb
jp
xchg
stos
cmp
ret
shll
ljmp
lods
lds
out
imul
daa
adc
mull
sub
xchg
mov
orb
cmp
mov
rorl
inc
dec
stos
rorb
mov
stos
or
xchg
gs
aas
mov
jg
inc
shrl
jp
cwtl
pop
jmp
lods
test
jle
sbb
jge
aaa
xor
icebp
jnp
cmp
mov
daa
shr
outsb
daa
popf
lret
mull
lahf
mov
out
call
pop
jns
mov
adc
ja
stc
icebp
cmp
aas
push
cmp
adc
jp
mov
lods
mulb
mov
jns
in
mov
lret
stos
movsl
jb
cmp
dec
sub
int
lcall
push
adc
out
adcl
inc
mov
lds
lea
or
dec
push
test
and
arpl
or
fisttps
pop
mov
into
jmp
xchg
adc
sbb
add
xchg
mov
popf
jmp
jg
outsb
lahf
scas
jne
daa
jmp
pop
fs
fsubp
in
or
clc
sbb
or
test
insl
jnp
mov
sub
lds
and
popa
jbe
cmpsl
mov
mov
dec
test
cmc
pop
fwait
push
stos
push
cmp
fucom
add
mov
pusha
lods
xchg
sbb
xor
popl
movb
out
inc
xchg
sub
mov
in
sahf
mov
xchg
add
es
pop
mov
gs
filds
fimuls
lods
push
cs
sbb
add
addl
clc
fdivl
mov
inc
mov
pop
push
adc
xor
cmp
or
dec
rcrl
sub
xor
test
adc
mov
sbb
mov
sub
jecxz
mov
mov
nop
repnz
cmpsl
mov
shll
mov
lods
push
dec
jo
arpl
popf
sbb
sub
lahf
xchg
jo
and
or
mov
mov
pop
insl
mov
rcll
dec
lea
cmp
repz
mov
add
icebp
sub
inc
lret
dec
out
dec
mov
add
jb
jnp
fldpi
inc
fisttpll
loop
in
xchg
scas
adc
insb
xor
int3
xchg
or
xchg
jo
in
aas
outsl
popa
imul
jmp
in
fwait
lea
push
inc
jl
mov
into
daa
std
mov
pushf
push
or
dec
loop
sbb
test
hlt
jmp
sub
repz
jmp
outsb
rcl
jmp
jns
and
sub
in
pushl
aad
cmp
cltd
jbe
mov
jmp
push
cmp
rcll
imul
pop
ds
mov
jp
outsb
aaa
dec
jmp
stc
and
xor
ss
je
sub
arpl
ret
aaa
and
aaa
cmp
dec
divl
fwait
fs
loop
adc
xchg
enter
xor
outsb
sbb
mov
ss
addb
inc
lret
add
enter
mov
dec
sbb
idivl
or
pop
shrl
andb
rorb
nop
pop
xor
out
in
stos
cmpl
lret
mov
lea
mov
jle
add
cmp
stos
pop
cmpsb
dec
addl
mov
push
int3
inc
data16
jle
scas
dec
xor
push
xchg
test
shlb
or
jae
inc
mov
pop
sahf
test
cmp
mov
xchg
or
mov
pop
jg
mov
sbb
cltd
cld
leave
push
mov
mov
cmp
push
ja
push
shll
imul
xor
lcall
xor
mov
fs
inc
jecxz
adc
adc
sub
xchg
leave
jbe
xchg
movsb
mov
pop
incl
das
popa
and
or
adc
mov
enter
into
jmp
imul
jmp
jmp
test
test
lods
add
scas
dec
into
xchg
dec
int
rol
cmp
fsubrp
jg
xchg
mov
imul
mov
and
jnp
popf
mov
pusha
in
js
push
fistps
add
mov
int3
xlat
mov
test
mov
negb
xor
les
test
das
outsl
mov
loopne
adc
push
arpl
out
adc
stos
cmpsb
aad
inc
enter
ficoml
push
xor
stc
adc
mov
and
sbb
jbe
cmp
cld
psrad
xchg
lret
cs
insb
inc
mov
pop
adc
dec
sbb
shlb
lahf
and
aaa
lret
sarb
mov
aaa
xchg
sbb
movsl
pop
fcomps
pusha
repz
repnz
loope
mov
loope
mov
das
je
adc
pop
cmpsl
pop
lock
fistpll
repz
popf
dec
orb
dec
divb
dec
sbb
xchg
xlat
es
out
sbb
cmpsl
inc
inc
inc
cmpsb
ljmp
out
mov
cmp
or
or
mov
cmpsb
cmpsb
cli
lea
fisttpl
push
lret
xchg
push
lock
cli
int
xchg
shl
dec
dec
cmc
pusha
cmp
subl
cli
ja
jl
popa
mov
inc
and
push
repnz
les
xor
push
into
pushf
outsl
jl
in
andl
xor
insl
out
dec
jl
rcr
or
adc
testl
dec
sbb
jecxz
add
lock
insl
movsb
cwtl
jne
lret
repnz
dec
mov
cltd
and
pushf
scas
jb
xchg
push
sbb
cltd
pop
xchg
adc
adc
arpl
div
rcrl
sbb
dec
mov
lretw
ljmp
outsb
mov
add
or
sahf
lods
test
mov
out
nop
adc
or
in
filds
arpl
test
dec
xchg
out
hlt
fsubs
ret
xchg
movl
scas
mov
jno
adc
shld
aas
dec
lds
push
xlat
pop
sub
sahf
mov
mov
ljmp
add
sti
add
movsb
mov
jle
jbe
jl
jecxz
cs
xor
pop
adc
mov
cmp
lds
lcall
aam
cld
rcrb
aaa
sbb
adcl
jne
shrb
movsl
fdivl
pop
and
mov
mov
call
cltd
pop
aas
ret
jae
xor
out
test
bound
fisttps
or
pushf
imul
sti
hlt
mov
and
shlb
pop
or
xor
push
das
mov
lret
clc
test
pop
push
outsb
lret
aad
jmp
dec
adc
sahf
xchg
inc
outsl
aas
mov
jae
inc
lds
popa
jl
int
scas
lods
mov
daa
and
ljmp
lds
scas
xor
ds
jns
cmpsb
mov
imul
pop
jb
adc
insb
or
dec
fsubs
or
jle
into
es
das
adc
arpl
push
lahf
sbb
jle
imul
push
mul
push
xor
sahf
mov
stc
out
cmp
adc
shl
sub
fildll
in
xchg
fldl
scas
xchg
mov
cmpsl
dec
and
mov
add
bound
cmpsl
dec
hlt
dec
add
aas
xor
add
jbe
inc
add
mov
nop
stos
addr16
lret
mov
pop
js
push
gs
int3
out
loop
push
ja
sub
dec
dec
nop
test
dec
repnz
jns
sbb
dec
into
sbb
into
push
or
fs
cwtl
in
xchg
mov
imul
scas
test
scas
inc
dec
xchg
jge
adc
dec
xchg
inc
inc
xor
dec
xchg
nop
xor
in
xor
cmp
pusha
clc
sub
loop
mov
sahf
lret
imul
cmp
mov
test
mov
push
data16
fnsave
mov
out
mov
add
in
cltd
and
out
popa
pusha
enter
sahf
repz
xchg
dec
or
mov
jecxz
sar
mov
arpl
pop
mov
out
ret
out
in
js
call
xchg
or
add
in
popf
lods
pushf
add
cmp
mov
pop
jle
ficoms
ret
clc
test
rclb
testl
in
aaa
xchg
ds
fisubs
add
das
push
dec
inc
pop
dec
aad
std
xchg
ja
gs
jl
or
lods
jo
mov
popf
or
andl
push
push
sbbl
out
shlb
outsb
and
nop
fs
rcr
rcr
cmp
and
out
add
xchg
xchg
adc
std
inc
popf
and
lods
test
jg
popf
push
push
jl
add
push
cmpsl
movsb
lahf
sarl
ss
inc
xor
addb
add
cmp
mov
cmpsl
mov
sub
sub
int3
loopne
sar
insb
mov
fwait
into
and
cmp
dec
sbb
shll
jns
sbb
sbb
xchg
dec
add
pop
add
and
outsb
mov
lahf
xor
or
jmp
es
fiaddl
xorb
xlat
push
mov
lds
add
mov
movsb
adc
or
push
or
mov
rorl
mov
push
sub
xchg
jmp
mov
int
dec
inc
xchg
sub
pop
rcl
dec
movsl
lcall
dec
scas
fstl
mov
pop
pop
mov
mov
adc
subb
xchg
mov
int3
sbb
mov
jg
cmp
dec
jns
es
push
inc
xchg
cwtl
dec
mov
jle
xor
loopne
shlb
neg
ffree
loop
rcpps
push
dec
es
or
or
scas
pop
testl
or
jg
xchg
mov
or
fmull
mov
sub
pushf
jl
mov
or
cltd
mov
loopne
push
rorl
mov
sbb
fistpl
xor
jnp
pop
fcomp
jo
fdivrs
mov
xor
xchg
sub
mov
leave
test
push
sahf
scas
adc
repnz
andl
mov
cwtl
cli
mov
ljmp
mov
mov
std
jl
jecxz
or
mov
xor
or
sub
cmp
jge
xor
fcoml
iret
and
sbb
ja
mov
mov
outsl
pop
or
outsl
sbbl
cmpsl
addr16
xor
fistpll
rorb
addr16
cmc
jne
lret
scas
mov
xorb
insl
add
stos
sarl
cmpsb
ljmp
push
push
imul
sbb
fsubrl
xchg
mov
jge
push
add
push
xor
ljmp
cmpsl
ss
sti
es
mov
jp
jg
daa
mov
add
jbe
xchg
jmp
inc
ss
orl
pop
jp
repnz
mov
sub
mov
sar
mov
das
push
adc
xchg
decl
mov
lret
push
sbb
mov
jp
xchg
cmp
sbb
cmp
push
ss
cmpl
jb
jae
in
popa
pop
stos
jmp
push
pop
jb
fcomp
push
in
shrb
lret
lahf
ss
es
dec
push
sbbl
adc
pop
pop
mov
in
or
loope
push
out
mov
cmp
test
out
insb
adc
aas
dec
addb
js
sub
int3
data16
stos
outsl
shrl
dec
adc
mov
cs
dec
lret
mov
es
push
out
cwtl
xor
mov
jmp
adc
push
adc
mov
fs
mov
cmp
cmp
ss
mov
mov
sub
out
hlt
int
dec
xor
mov
sub
pop
fs
testb
pusha
shl
scas
loopne
add
cmp
lods
aad
mov
enter
inc
loopne
sbb
mov
ljmp
jae
or
test
sub
out
xchg
lods
push
push
sbb
inc
lret
jns
ja
push
push
mov
out
add
cld
cs
imul
or
mov
inc
push
bound
mov
aam
dec
sbbl
cld
dec
jge
or
sbb
fwait
je
cld
dec
je
adc
in
insb
pop
pop
clc
addr16
cmpb
es
xor
dec
cwtl
lcall
xchg
out
pop
xchg
call
pusha
clc
cmpxchg
loope
jae
cmp
xchg
inc
add
dec
fsubrs
in
xchg
push
imulb
es
sbb
rolb
mov
adc
sub
lock
mov
int3
and
lods
stos
mov
ljmp
lcall
add
mov
out
out
xor
dec
or
push
cmp
idivb
push
push
pop
iret
enter
add
dec
sbb
inc
div
imul
rclb
in
jnp
push
data16
jb
lret
mov
cli
lcall
xchg
sbb
mov
dec
xor
outsl
push
and
scas
xchg
jno
and
add
adc
adc
data16
dec
clc
adc
js
bound
inc
and
divl
mov
push
out
lds
js
fsts
xchg
pop
mov
aas
int
movsl
mov
rclb
js
pop
cmpsb
pop
pop
sbb
mov
aad
add
sbb
shrl
hlt
faddl
imul
push
daa
in
add
out
mov
cli
xchg
xchg
xlat
mov
jmp
mov
sbbb
adc
jg
dec
aad
pop
movsb
in
jl
sbb
fwait
js
es
cmc
sbb
and
xchg
ja
cmpsb
lahf
cmp
fsubrs
dec
popf
mov
or
out
cmp
xor
lcall
xor
scas
mov
sbb
dec
mov
pop
es
mov
xchg
pop
inc
inc
cmp
mov
mov
dec
fists
rcrl
jae
test
icebp
test
pop
insl
jae
sub
js
fmul
jo
adc
fcoml
sbb
sub
adc
inc
xor
daa
lret
pushf
rclb
mov
gs
dec
pushf
mov
stos
xor
sub
xor
or
jmp
push
test
or
mov
xchg
mov
popf
loope
cltd
mov
jae
mov
jns
or
or
jnp
add
lahf
push
cmp
shl
stos
mov
shr
test
je
xchg
pop
xchg
push
xchg
out
dec
dec
pop
mov
push
dec
mov
int
add
pop
lahf
stos
bound
inc
repz
test
pop
imul
lahf
xchg
mov
lods
push
stos
sub
xor
mov
sbbl
popa
add
cmp
mov
xchg
test
aad
movsl
xchg
fisttps
push
add
sarb
je
mov
hlt
shrl
rcrl
pop
or
call
mov
or
mov
mov
sub
shll
fistpl
jge
jmp
jno
lds
test
push
sar
cmp
mov
push
xor
mov
inc
shll
jl
sahf
add
inc
xchg
cmp
pop
inc
pusha
cs
subl
ljmp
fnsave
stc
inc
xor
shl
imul
push
hlt
movsb
in
mov
mov
icebp
add
jns
repz
insl
in
or
popf
movsb
sarl
data16
dec
iret
or
add
pop
ret
push
mov
cmp
ret
dec
loope
dec
fwait
mov
bound
mov
rcrb
lods
pop
and
pop
xchg
pop
adc
mov
or
mov
push
enter
and
xchg
icebp
pop
or
push
pushf
call
sub
lea
dec
shll
lret
dec
sbb
xchg
inc
sub
out
pushf
test
xchg
fsubl
push
cs
mov
dec
mov
outsb
bound
decb
sub
xor
sub
into
xor
nop
idivl
aaa
lock
pop
add
jno
test
cld
push
icebp
jl
inc
shll
or
scas
push
mov
mov
outsl
jb
push
push
mov
dec
mov
fistpll
sbb
imul
dec
lods
loop
or
mov
outsl
mov
aam
jmp
push
or
cmpsb
ror
inc
test
emms
add
lret
and
dec
push
cltd
sub
stos
cmp
sub
in
push
mov
roll
das
mov
in
mov
inc
jecxz
and
dec
test
adc
rcll
inc
mov
bound
ficompl
and
imul
mov
fs
xchg
mov
adc
dec
add
mov
xor
push
fld
pop
xchg
jmp
inc
cmp
sbb
movb
cmp
stos
dec
inc
mov
pop
push
sbb
iret
mov
popa
psubsw
inc
clc
sbb
pushf
pop
int
mov
pop
add
add
ja
pop
jno
add
stos
push
cmc
xor
lret
and
lahf
cmpsl
loope
rcl
xchg
nop
pop
je
xor
fdivl
push
daa
dec
fcoms
pop
dec
pop
orb
gs
lods
les
icebp
pop
adc
bound
cld
mov
cmpsl
jbe
paddq
and
bsf
aas
pop
mov
mov
dec
ds
fimuls
mov
test
and
sub
dec
add
pop
xchg
mov
into
jbe
lret
nop
orl
shrb
jb
and
lret
movaps
imulb
xor
mov
iret
imul
cmp
pop
int
cmp
and
sbb
popf
or
sbb
shrb
mov
cmp
clc
addr16
add
in
xchg
cmp
mov
shll
stos
jmp
dec
push
sbb
lret
out
call
xor
orl
addr16
inc
imul
lret
add
xchg
inc
mov
and
or
push
xor
out
xchg
insl
clc
call
cmp
dec
popf
push
push
jbe
in
dec
jg
pop
fmull
les
out
std
jae
ljmp
push
pop
icebp
sub
lock
add
mov
test
int3
mov
add
test
mov
xchg
pop
cld
inc
sbb
sti
mov
cmp
dec
out
fnstcw
push
shufps
ret
mov
mov
mov
popa
mov
mov
sub
xor
xor
lahf
out
loope
mov
jl
cmp
push
inc
sub
jbe
add
stos
dec
insl
mov
jo
mov
cli
movsl
loope
mov
sahf
pop
arpl
ret
jge
inc
test
mov
ss
jmp
cmp
mov
jp
rorl
cmc
mov
test
mov
aas
push
jg
shr
cltd
inc
sub
daa
mov
mov
xchg
or
adc
add
mov
lret
fidivrl
popa
add
mov
xchg
cltd
lahf
jle
push
inc
cli
adc
jb
and
stos
pop
push
mov
xchg
ret
cmpsb
ss
lret
push
inc
data16
inc
stos
mov
pop
dec
nop
movhps
outsb
imul
imul
lds
sub
jb
mov
loope
adc
mov
mov
push
sbb
xor
test
in
scas
jnp
jns
fwait
mov
pusha
jno
popa
and
or
xor
pusha
out
push
xchg
xor
push
stc
mov
test
push
add
or
fdivr
add
ss
test
mov
mov
popa
daa
sbb
shr
mov
and
lret
mov
mov
fmuls
out
mov
mov
sub
jge
mov
mov
movsl
inc
or
cmp
mov
mov
sub
xchg
int3
out
xlat
push
push
test
dec
pop
ss
inc
mov
rcll
adc
and
xor
push
add
dec
mov
sub
sub
sahf
push
sbb
mov
add
sahf
pop
cmpsl
enter
movsb
mov
hlt
out
mov
fs
jns
sti
xchg
jle
gs
int
out
mov
mov
ds
and
movq
xchg
sbb
aaa
mov
dec
les
dec
inc
in
es
xor
lods
roll
sahf
cmpsl
cmc
leave
jl
imul
mov
lods
push
cmp
jecxz
mov
fcompl
cmpsb
pop
clc
int
mov
push
pop
popf
dec
mov
mov
rcrl
xor
dec
ret
popf
lods
sbb
jl
adc
add
and
daa
mov
loope
jmp
inc
andb
sbb
add
xchg
xor
jecxz
out
push
fs
dec
in
cmpsl
sbb
call
in
or
pop
mov
mov
fwait
ret
leave
fwait
or
jb
fldt
xchg
xor
mov
pusha
imul
mov
mov
xor
adc
sbb
xchg
ljmp
pop
add
movsl
xchg
int
adc
inc
xchg
repnz
adc
pusha
stos
jg
add
and
mov
insb
xlat
aaa
fsub
aad
sti
jg
jecxz
xchg
mov
xchg
hlt
jge
mov
je
sbb
fisubrl
jg
loope
dec
sub
imul
es
mov
addl
or
cmp
out
cmpsb
dec
es
inc
add
sub
lret
test
xor
jl
push
mov
subb
jecxz
xchg
sbb
andb
sbb
icebp
aas
adc
dec
xlat
dec
sbb
jnp
je
test
sbb
mov
inc
andb
ret
push
dec
test
fadd
stos
imul
bound
iret
pop
pushf
jg
pushf
jg
iret
out
loop
fcmovbe
cmp
push
ficoml
cmp
jo
adc
push
add
adc
sbb
pop
lds
xor
test
sbb
adc
jno
jl
inc
push
jg
push
add
aaa
negl
aas
mov
dec
mov
int3
mov
sub
mov
js
pushf
aaa
xor
lea
shl
sti
in
idiv
mov
sti
stos
sbb
fildl
jne
aaa
int
popa
insl
mov
aaa
inc
and
lret
popa
xor
mov
loopne
xor
pop
jg
je
inc
decb
ljmp
test
mov
adcl
les
pop
xlat
or
test
sub
jo
bound
into
jne
sbb
xlat
negl
adc
xor
bound
iret
loopne
jg
and
jns
or
std
xchg
cld
cmp
imul
ljmp
in
frstor
add
jae
std
cmp
fsubs
into
cmpsl
cmp
int3
mov
cwtl
int3
pop
pop
inc
es
lret
mov
seta
xor
pop
sub
pop
int
aaa
insl
dec
push
add
std
lret
add
mov
popa
outsl
out
mov
jecxz
mov
jne
leave
or
xchg
sub
add
loope
rorb
jl
jge
out
nop
es
xchg
mov
add
xlat
std
popf
mov
cmpsb
pop
add
scas
das
neg
dec
outsb
rorb
call
mov
mov
xchg
push
adc
int
push
xor
js
mov
ss
add
mov
inc
and
cmp
lock
dec
aam
out
sbb
jns
mov
inc
mov
fstl
add
addl
mov
je
inc
ja
xchg
sbbl
push
fmull
test
shrb
inc
iret
dec
xor
gs
in
aam
aad
popa
ds
mov
cmc
sbb
test
call
and
stc
ret
ret
sahf
or
loopne
mov
notl
aad
ljmp
lea
xchg
mov
sbb
movsl
mov
xchg
push
arpl
mov
add
sub
dec
xchg
cmc
out
inc
inc
popf
push
lds
or
aam
cmp
ljmp
sar
enter
lahf
clc
xchg
imul
cmp
fldt
jp,pt
pop
rclb
js
out
lods
out
push
mov
subb
push
ja
fs
or
mov
icebp
inc
mov
or
mov
dec
jae
mov
cmpb
xor
cmpw
mov
push
lcall
out
push
or
jp
push
shrl
adc
push
orl
mov
pop
mov
dec
ret
pop
jns
cmp
fildll
add
gs
das
loopne
jle
sbb
mov
pop
in
xchg
mov
cltd
call
js
pop
cs
xor
push
sahf
hlt
fidivl
ret
push
add
push
xchg
sbb
mov
inc
bound
flds
jmp
repnz
lahf
ja
push
lcall
rcr
cld
aad
mov
clc
cmp
push
dec
loop
adc
andb
fld
sbb
cld
mov
pop
roll
jl
leave
add
push
les
dec
in
in
xchg
shll
aas
mov
push
mov
mov
mov
sub
mov
or
mov
ja
mov
jno
out
aad
nop
cmp
xlat
pop
push
mov
adc
mov
jecxz
mull
aad
adc
ja
dec
sahf
cmp
jbe
xchg
data16
mov
les
dec
add
cmpsl
lret
lret
mov
adc
ret
icebp
aaa
popaw
pop
loopne
dec
mov
push
gs
mov
pop
ja
rorl
pop
fdivrs
push
adc
inc
fstl
or
rcll
sbb
cwtl
inc
popa
xchg
data16
push
outsl
test
and
mov
cld
test
std
nop
cmp
inc
inc
cmp
mov
lods
add
cmp
loope
cwtl
clc
dec
nop
test
xor
cmpsl
lock
sbb
mov
mov
or
pushf
sti
into
inc
aad
test
sbb
jae
jb
test
lods
sbb
dec
jmp
or
dec
jnp
orl
mul
bound
fwait
push
mov
mov
sub
popf
inc
mov
sub
lods
push
mov
inc
push
pop
stc
loop
test
mov
cmp
sbb
inc
mov
xor
inc
push
psraw
imul
imul
repz
ljmp
lret
mov
fstps
cmpsb
xor
lock
and
sub
int
sbb
outsb
cmpsb
xchg
inc
js
lea
stc
cli
insl
cmp
mov
fldenv
adc
or
outsl
loopne
jl
cld
lock
lods
icebp
mov
cwtl
push
in
call
xchg
add
push
add
ja
les
pushf
shrl
xor
cmp
xchg
xor
fstps
ficoml
cltd
mov
fcoms
into
pop
xor
cmc
or
xchg
pop
pop
mov
aam
fldcw
adc
mov
xor
mov
sub
stos
xor
es
call
mov
mov
dec
pop
insl
or
add
push
jmp
xor
xor
sub
inc
push
insl
in
xor
lret
jecxz
xchg
jge
test
mull
pop
mov
arpl
mov
lcall
loop
nop
dec
fnstsw
out
repz
in
push
ja
dec
sbb
mov
lods
and
mov
pusha
outsb
xchg
jle
xchg
mov
mov
xchg
test
les
add
and
mov
jle
mov
dec
pusha
dec
pop
jecxz
popf
mov
push
pop
pop
sub
and
pop
ret
add
std
sub
mov
pushf
cwtl
mov
arpl
pusha
xchg
ror
adc
sub
mov
mov
mov
push
sub
mov
dec
cs
outsb
pop
mov
dec
push
sub
cmp
mov
mov
dec
push
testl
cmp
or
lock
push
inc
sbb
das
push
outsl
mov
stos
je
lret
dec
mov
adc
mov
ret
jbe
cmp
les
adc
scas
inc
mov
lret
xchg
cmc
push
jae
test
mov
jecxz
add
cltd
inc
add
rorl
jo
loope
xchg
inc
jp
mov
pop
mov
push
jp
push
jae
mov
xlat
jb
out
dec
inc
pop
jb
mov
movsb
cmpsl
repz
and
shr
lret
sub
mov
sub
inc
imul
movsl
das
push
sbb
shr
mov
imul
addb
push
cmp
ret
jp
xor
out
dec
add
les
push
pop
lcall
aad
cld
mov
rclb
roll
out
mov
ljmp
mov
sub
inc
xlat
stc
xor
pop
stos
gs
outsb
fbld
xchg
jae
sub
xchg
inc
lods
xchg
mov
mov
jnp
test
push
adc
mov
outsb
incb
add
dec
adc
inc
cld
mov
adc
imul
mov
push
hlt
sbb
and
andl
ror
xlat
mov
mov
sarb
in
xchg
mov
int3
dec
cmp
aaa
in
sub
lcall
vmwrite
xchg
mov
inc
cmp
mov
xor
xorb
lret
pop
fcompl
inc
imul
aad
test
adc
push
std
sub
neg
mov
imul
je
dec
cli
xlat
xor
andb
or
js
sar
mov
mov
mov
arpl
stos
das
cltd
and
pop
clc
jmp
ffreep
inc
add
inc
or
lods
addl
jne
dec
fs
lret
xor
push
into
mov
push
dec
mov
pusha
mov
sbb
jo
icebp
xor
leave
xchg
xchg
mov
add
enter
fbstp
pop
xor
pop
cmp
sbb
dec
pop
xchg
insl
mov
cmp
push
es
ret
cmp
mov
pop
mov
xlat
int3
mov
push
xchg
and
pushf
xor
jne
loopne
arpl
mov
mov
mov
xor
inc
rcll
or
xor
dec
scas
out
pushf
push
bound
lahf
jno
cmp
imul
push
test
iret
insb
fists
out
or
push
dec
enter
xor
inc
mov
pop
mov
sub
aaa
pushf
cltd
mov
sti
cld
test
cmpsb
bound
repnz
shlb
cmpsb
pushf
mov
mov
fistps
cmp
adc
cmp
cmpsl
in
mov
aam
repnz
repnz
sbbl
lds
sbb
pop
sub
lods
test
adc
sub
pop
out
mov
push
add
pop
cltd
sub
jne
push
mov
mov
call
dec
add
scas
add
mov
aam
inc
orb
movsl
fs
xchg
pop
jecxz
jbe
test
push
push
bound
inc
jne
xor
stos
in
xchg
ljmp
fists
enter
adc
repz
rclb
test
mov
std
das
xor
es
sti
cwtl
test
inc
ds
std
lods
mov
out
xchg
mov
rcrl
cwtl
ret
sub
adc
in
shl
xor
shll
mov
and
mov
and
daa
mov
adc
in
jae
adc
and
mov
add
xchg
sub
push
mov
stc
outsb
sbb
push
sbb
xor
shlb
push
mov
and
sarb
lret
aam
sbb
pusha
jp
std
lock
cs
scas
cmp
xor
addl
cli
sub
unpcklps
in
mov
aaa
pop
sti
int
add
mov
push
push
jmp
stos
inc
ds
subl
mov
filds
and
mov
mov
xchg
jne
jae
pop
sub
decl
lea
xchg
insb
aam
stos
jbe
or
leave
dec
movsl
dec
repnz
or
lods
inc
pop
out
mov
ret
inc
clc
fsubl
xor
cmp
mov
popf
loop
xchg
inc
mov
ljmp
push
addr16
outsl
and
ljmp
popf
cmp
pop
push
or
adc
mov
ret
fistpll
jne
shll
pop
cs
outsl
mov
jne
jae
dec
gs
or
cmp
xor
jo
andb
and
mov
xchg
fwait
aam
in
xchg
daa
mov
push
adc
outsb
call
dec
stos
ja
xchg
sar
xchg
jl
sarb
jns
clc
repnz
cs
les
mov
push
lret
jb
out
lods
ljmp
stc
xchg
out
mov
and
xor
jnp
push
sub
lahf
prefetch
or
lahf
and
jne
jae
rolb
fprem1
jl
jno
shl
fpatan
mov
inc
lret
xchg
ja
jl
into
xchg
cs
gs
adc
push
adc
in
hlt
xchg
ja
mov
int
ss
fists
mov
xchg
cmpsb
insb
push
pop
jle
cmpsb
sub
adcb
ficompl
pop
ficomps
rcl
lock
stos
push
cmp
arpl
jecxz
dec
in
cmpsb
ja
pop
dec
dec
stos
stos
mov
clc
mov
clc
lret
je
mov
sar
xchg
push
push
stos
mov
add
sbb
or
pop
popf
jge
mov
xor
mov
inc
out
push
movsl
clc
pop
inc
cmp
pop
inc
in
pop
lds
xchg
mov
mov
popf
jl
jb
rdpmc
das
add
jb
sbb
inc
cltd
ds
shrb
mov
mov
dec
in
xor
out
clc
and
xchg
push
clc
jo
mov
inc
stc
mov
sub
fs
add
es
or
jmp
popf
xor
add
dec
pop
xchg
jbe
out
mov
cmp
jb
mov
enter
fldcw
add
test
gs
les
jne
push
push
fimuls
push
lock
movsl
test
jp
call
orl
xorb
ja
cmpsb
imul
inc
push
sbb
sti
leave
or
test
cmp
mov
pop
jnp
divb
lock
mov
mov
jbe
push
andb
dec
xor
shl
cmpl
cmpsb
dec
out
xor
nop
add
popf
jg
jbe
addb
cmp
mov
test
or
sub
jmp
shrl
cmp
stc
or
movl
add
bound
xor
arpl
lret
jg
xor
lods
pop
aad
or
rorl
icebp
aad
fcmove
les
popa
sti
jb
or
aaa
fstps
push
sub
and
mov
jmp
fildll
mov
test
push
xchg
jmp
shrb
mov
push
fdivs
fidivrs
mov
and
enter
mov
push
cwtl
push
jne
mov
roll
add
pop
sub
pop
mov
or
sbb
int
inc
mov
mov
or
mov
fsubrp
lcall
cmp
movsb
push
in
or
or
clc
popa
addr16
or
jmp
dec
sahf
icebp
dec
jp
mov
push
decb
xor
dec
mov
mov
sbb
sarl
or
cmp
leave
sbb
mov
push
in
ret
jge
aam
pop
out
xchg
mov
jmp
cmc
lods
in
push
sbb
psubsw
inc
rorb
scas
push
insl
inc
cli
sbb
xchg
mov
or
pop
cmpsl
push
inc
cld
xchg
lret
mov
mov
xchg
xor
pop
mov
and
ret
stos
cmp
dec
in
push
test
sbb
mov
mov
push
scas
lcall
pop
jp
sbb
in
sbb
push
or
pop
cmp
mov
pop
mov
mov
stos
jg
cli
scas
lret
fcompl
adc
xchg
addr16
int3
ljmp
movsb
in
dec
dec
xchg
cmp
fmull
int3
sub
out
jno
or
repz
sub
cmp
pop
cmp
jmp
mov
lret
call
cvttps2pi
mov
loopne
js
push
out
test
pusha
test
sbb
sbb
loop
or
add
dec
mov
xchg
xor
xor
pop
pop
loope
js
fdivl
push
sub
sub
cmp
push
and
add
push
jnp
push
sti
jl
popf
stos
xor
mov
push
and
lock
sub
mov
dec
imul
loop
pop
bound
inc
mov
inc
push
sbb
test
cli
mov
rcrb
sbb
mov
cmpsl
pop
mov
cmc
cmp
sarb
andl
push
cmp
iret
jmp
jl
es
xchg
dec
sub
movsl
cmp
and
mov
xchg
mov
pop
xchg
and
rol
adc
loopne
jp
sahf
adc
idivl
ds
pushf
push
je
push
xor
push
mov
jo
xor
clc
pop
push
mov
pop
shr
enter
out
push
push
lods
add
rcrl
leave
mov
push
imul
cwtl
mov
adc
outsb
out
jbe
pop
das
outsb
je
pop
call
fldenv
int3
or
sub
push
sbb
dec
in
xchg
pushf
lds
nop
mov
daa
scas
enter
cs
or
aaa
mov
and
sbb
sub
pop
test
cmp
jnp
dec
enter
stos
or
and
xchg
mov
jecxz
push
mov
sbb
pop
lcall
xor
fs
aas
not
shr
rcrb
add
pop
cmp
sbb
pushf
test
jb,pt
mov
enter
fidivs
out
push
hlt
xor
cmpsb
ret
test
imulb
mov
je
sbb
test
stc
mov
inc
into
jnp
and
mov
add
mov
popa
test
bound
mov
cld
pop
dec
test
rcrl
pop
pop
jl
jle
pop
jbe
inc
xor
add
leave
out
sub
enter
xlat
repnz
mov
testl
in
insl
pcmpeqb
adc
cmp
mov
jmp
aam
movsl
push
xor
aaa
cli
mov
xchg
popl
jle
jl
jo
jbe
je
in
test
cmp
dec
inc
pop
add
in
movsl
fistpll
mov
xchg
mov
xchg
in
jmp
push
ds
or
js
mov
mov
inc
pop
int
xchg
sub
pushf
adc
mov
lret
or
adc
or
inc
mov
xchg
pusha
adc
pop
icebp
popf
das
ja
jnp
test
les
mov
mov
clc
pop
or
mov
cmp
pop
dec
pop
dec
mov
xchg
dec
inc
sbb
test
push
fcomps
and
mov
lret
fyl2xp1
pop
sar
mov
mov
and
aas
jns
inc
ja
sub
cmp
dec
ja
mov
or
sbb
daa
repz
or
pop
xor
mov
addr16
and
push
and
push
add
loop
sbb
or
lcall
icebp
jecxz
lea
sbb
mov
push
lock
outsl
dec
pop
inc
push
dec
fimull
push
pop
leave
sbb
and
iret
jmp
cmc
mul
mov
data16
aam
das
dec
pop
lret
xor
xor
ret
mov
into
shrb
jne
jbe
mov
iret
jp
or
jae
or
imul
inc
pop
pop
dec
sti
shrb
icebp
pop
or
mov
roll
pop
addr16
fistpl
push
cltd
xchg
test
and
add
pop
call
jno
mov
inc
add
or
adc
mov
inc
add
test
dec
divl
out
lcall
mov
icebp
or
popa
mov
mov
xchg
mov
insb
rorb
sub
pushf
cmp
or
sti
jecxz
nop
jmp
adc
cmp
sub
shll
mov
out
loop
or
lahf
fimull
adc
adc
mov
addl
jns
stos
sbb
lock
notl
ret
inc
icebp
or
mov
add
int
mov
add
xchg
out
in
jmp
fbld
imul
mov
popa
stos
jb
cmpsl
enter
xchg
jmp
stc
cltd
add
jle
push
clc
leavew
mov
das
or
adc
popa
inc
or
push
push
push
leave
jbe
sarb
sbb
shrl
pop
popa
and
sbb
imull
daa
pop
fst
enter
lods
add
dec
sbb
orl
adc
inc
pop
sbb
add
inc
loope
repnz
test
push
inc
and
adc
push
pop
xlat
push
push
das
fs
push
fs
rclb
xor
popa
or
mov
sbb
mov
sub
and
adc
loop
mov
inc
inc
cli
in
xchg
test
or
sahf
lret
cwtl
testb
inc
push
pop
inc
jmp
aas
xlat
cmpl
cs
fldcw
push
xchg
in
mov
cli
movsb
popa
dec
add
cmp
inc
jae
int3
or
loop
rcl
cmp
xchg
adc
call
jle
xchg
mov
add
adc
xor
jge
xlat
gs
sbb
scas
mov
cmc
out
dec
in
sbb
cli
xchg
or
sub
gs
cs
dec
popf
xlat
or
pop
inc
and
ret
enter
adc
shll
mov
pop
and
mov
push
and
dec
cmc
out
adcl
sbb
and
and
push
sbb
out
imul
mov
out
pop
imul
ret
fldl
out
adc
call
sbb
push
fcmovnbe
pop
arpl
int
and
jno
incl
rol
inc
repz
fdivrp
inc
xchg
push
cmp
std
push
mov
adc
jl
roll
dec
gs
inc
pop
bound
and
jne
push
outsb
or
in
mov
sbb
nop
fists
and
dec
call
popf
or
mov
push
jl
mov
in
xor
sahf
jns
mov
jnp
fs
aaa
outsl
js
int
data16
ja
popf
mov
push
cmp
or
stc
push
xchg
iret
add
arpl
jo
addr16
faddl
cmp
mov
in
aam
arpl
cmp
lock
mov
movsl
sub
jmp
popf
mov
sbb
and
mov
loope
cmp
jnp
mov
adc
pusha
xor
push
jbe
pop
divb
adc
pop
jns
jns
sbb
dec
and
je
mov
testl
nop
mov
inc
add
mov
lahf
jbe
mov
jne
in
jbe
jge
pusha
jecxz
stc
jns
repz
js
xchg
ret
inc
inc
ja
scas
sub
inc
xchg
leave
sub
ror
jnp
popf
mov
sahf
and
dec
in
mov
xlat
add
movsl
push
xor
lret
push
inc
mov
fwait
push
mov
enter
jle
into
adc
je
out
jge
mov
insb
push
lcall
fdivl
out
jmp
inc
push
dec
and
push
adc
push
xchg
inc
jl
xchg
or
loopne
push
xor
push
inc
andb
stos
sbb
mov
test
rorb
popa
repz
aam
cmp
jns
outsb
int
xchg
jecxz
enter
orl
cmp
fildll
imul
js
es
sbb
dec
scas
xchg
pop
xor
push
inc
in
stos
rcrl
mov
pop
sahf
ds
or
scas
add
xor
addb
data16
sub
icebp
push
cltd
xchg
andl
mov
out
rol
movsl
pop
rcrb
leave
sub
push
inc
repz
stos
data16
jne
out
sbbb
ficoml
lock
mov
mov
scas
sbb
jnp
fldt
pop
dec
enter
out
xorl
push
sbb
ds
dec
mov
dec
fistpll
movsl
jmp
repnz
fucomp
mov
add
pusha
fisttpll
stos
mov
mov
aaa
dec
push
fdivr
stos
jo
aaa
sub
imul
ror
lods
sbb
das
loop
mov
sbb
and
push
mov
lds
pop
notb
out
ret
lea
movsb
xorl
lret
cmc
test
or
jecxz
les
sub
jmp
mov
push
imul
adc
push
icebp
fidivrs
mov
sbb
cs
jle
and
xor
jl
fs
cli
ss
cld
in
push
fistps
subb
pop
push
mov
and
cli
jo
inc
inc
out
pop
es
mov
cmp
bound
add
repz
xor
addr16
mov
cltd
cmp
pop
jg
xor
sub
fisubs
xor
sub
pusha
insl
mov
rcll
test
add
into
push
dec
pop
push
ja
fcmovnu
cmp
out
xor
sti
int3
dec
and
loop
xchg
scas
sub
div
jp
push
push
push
call
xor
mov
jae
mull
xor
mov
inc
jmp
or
sbb
stos
dec
fildl
leave
movsb
mov
mov
push
cmp
out
mov
or
addb
int3
les
inc
xchg
cli
push
bound
js
int
add
pop
nop
ja
hlt
cmp
loopne
adc
sub
xchg
push
ret
xor
aad
shlb
adc
sbb
xchg
pop
ljmp
stos
dec
cmpsl
sar
push
adc
push
jae
enter
mov
lahf
push
rcrl
mov
xchg
mov
insb
into
outsl
mov
inc
arpl
hlt
sub
sbb
jae
adc
stc
add
fwait
aas
insb
pop
int3
xlat
pushf
sub
add
lods
aam
fistl
jle
jne
jae
test
and
xor
and
lret
insb
cmp
mov
out
inc
xchg
mov
jae
iret
into
int
dec
enter
jge
fstpl
mov
loope
sbb
js
repnz
icebp
push
in
insb
pop
xor
lds
lds
or
addr16
cs
cmpsl
imull
roll
mov
xchg
cmp
cmp
mov
adc
push
cmpsb
sbb
aaa
and
mov
dec
push
push
cmp
shlb
mov
mov
cmp
cmpsl
and
add
and
ficoml
repnz
push
jae
fs
add
xor
mov
jecxz
cltd
mov
mov
repnz
jnp
push
rolb
jnp
mov
xchg
int
fs
mov
xchg
hlt
ret
outsb
repz
sbb
out
sub
mov
jg
cwtl
xchg
dec
xor
ja
add
mov
sarb
loop
sub
jno
insb
pop
negl
dec
icebp
das
in
or
dec
pop
rolb
xor
stc
push
orl
jge
ja
mov
daa
lcall
arpl
xlat
aaa
sub
ds
outsb
add
and
push
push
pop
and
ds
fbstp
and
imulb
ja
xchg
and
aad
xlat
cwtl
lcall
insb
lods
sti
lret
dec
cmp
pop
int3
inc
xorb
hlt
mov
out
xchg
stc
cmc
or
fidivrl
and
jns
in
pop
sahf
sti
ret
inc
sub
lock
cmp
jbe
data16
lahf
xlat
or
jbe
mov
push
sahf
or
jp
and
lods
enter
or
lret
jb
addr16
mov
popf
cld
and
movsl
les
call
push
adc
rcrb
pusha
cmpsb
out
mov
cmc
pop
stos
mov
movsb
xchg
scas
dec
mov
xchg
in
test
icebp
stos
iret
imul
mov
shld
xchg
ficoms
jne
xchg
xchg
sbb
jecxz
out
fwait
imul
insl
pop
ljmp
push
cmc
adc
cmp
outsb
xchg
stos
sbb
andb
repz
test
push
lds
mov
dec
daa
call
xor
sti
jp
sbb
fs
mov
xchg
mov
out
lret
loope
or
sahf
xchg
add
dec
add
mov
sarl
shlb
sub
addr16
out
jno
outsl
pop
test
mov
daa
sahf
mov
sahf
pop
es
sub
aad
mov
rcr
jns
adc
adc
in
sub
popa
fdivrl
xchg
lods
enter
iret
dec
adc
outsb
jg
pop
pop
cmp
lahf
cmp
jo
stos
test
jno
cmpsl
pop
aad
sbb
popl
ficoms
mov
push
push
int
jns
ljmp
in
insl
inc
mov
shrl
and
hlt
and
mov
test
mov
cvtps2pd
or
or
push
mov
into
dec
sbb
outsb
jnp
add
xor
flds
dec
out
inc
and
push
inc
data16
enter
call
ja
xchg
push
imul
outsb
ret
mov
adc
mov
loope
jne
jge
mov
sbb
jmp
pop
xchg
js
dec
push
jecxz
test
mov
pop
jl
inc
jno
mov
cmp
inc
call
xchg
rolb
testb
xchg
cmpb
aam
or
mov
cmp
jns
dec
repnz
mov
fidivs
or
in
mov
push
add
xchg
popa
pop
xlat
mov
pop
dec
mov
sbb
cli
popf
dec
jnp
clc
int3
pushf
loop
mov
fiadds
ljmp
sbb
es
sti
pop
mov
xlat
orb
out
adc
jmp
mov
inc
dec
jmp
xor
cmp
xchg
imul
cltd
lock
mov
sub
mov
addl
or
aaa
iret
insb
fbld
add
xchg
mov
mov
jg
cli
popa
sub
subb
ljmp
loop
cld
or
ret
adc
inc
push
sbb
sti
push
insl
mov
jb
xchg
mov
xchg
mov
jg
or
daa
xchg
push
xchg
mov
aas
inc
and
adc
and
mov
or
and
mov
lcall
stos
and
or
pop
jmp
jbe
mov
mov
mov
lret
add
xor
sub
es
adc
push
ss
dec
lahf
andl
adc
loopne
push
das
push
mov
pop
pop
lods
push
push
pop
lds
dec
test
dec
sub
adc
cmp
jne
mov
in
icebp
movsl
mov
mov
xor
orb
pusha
repz
scas
lahf
hlt
jno
xchg
test
mov
divb
imul
or
xor
push
filds
xchg
pop
adc
mov
mov
stos
test
add
jns
dec
repnz
mov
or
adc
mov
jo
lods
nop
dec
movsb
adc
in
enter
push
mov
jl
sub
pushl
push
jmp
sbb
mov
jecxz
repnz
xchg
pop
loopne
in
aas
out
repz
popl
aas
dec
and
lds
sub
out
or
test
push
loope
and
ds
dec
fwait
xchg
cwtl
jge
sub
jo
or
insl
cmp
ret
shll
std
mov
sub
cmc
cmp
pop
vpunpckhwd
fildl
and
xlat
adc
push
jo
add
aam
lcall
dec
dec
jl
pushf
in
mov
ljmp
std
or
dec
fwait
subb
sbb
push
imul
push
mov
push
aad
sbb
add
lret
clc
cmc
sub
inc
lock
lret
lds
jae
jno
mov
mov
and
xchg
jb
mov
xchg
or
or
iret
adc
xlat
mov
in
xorb
push
and
dec
pop
lret
in
add
push
out
add
adc
sbbl
fimuls
rcr
inc
test
mov
fidivrs
int
aad
cmp
nop
xor
or
dec
aas
movsb
and
cmc
iret
stc
mov
cmp
lods
test
inc
dec
mov
add
les
dec
jl
jl
push
repnz
ja
popa
mov
ljmp
repz
aam
mov
pop
mov
lods
dec
in
add
push
jns
stc
fcmovnu
icebp
in
scas
pop
add
ficoms
xchg
jnp
dec
adc
adc
popa
icebp
inc
xor
je
mov
mov
clc
xchg
in
mov
lods
clc
or
ror
repnz
lea
cmpsb
xchg
cmp
or
lret
lock
push
xor
stos
fs
lods
add
idivl
in
leave
imul
in
dec
dec
ret
xor
xchg
lods
push
adc
sti
xchg
insl
enter
and
jecxz
add
mov
leave
movsl
push
fldl
push
repz
aam
das
pop
or
adc
sbb
inc
stos
mov
lock
insl
jb
scas
test
cwtl
cwtl
aaa
xchg
daa
hlt
in
fimull
sub
gs
mov
inc
sub
insb
rol
je
cmp
stos
add
add
movsl
rolb
test
lret
and
adcb
imul
pop
and
mov
insb
mov
dec
xor
movsb
cs
xchg
pop
push
leave
mov
es
and
mov
fdivp
sub
inc
popf
int
sub
jno
pop
adc
js
lret
add
mov
jecxz
or
je
add
mov
aad
rol
or
jmp
xchg
dec
push
push
sub
shll
jae
pusha
movl
or
adcb
outsb
push
cmpsb
dec
imul
or
jne
adc
lret
push
mov
pop
fldcw
fimull
xchg
sbb
loope
push
inc
fsubl
jecxz
inc
sbbb
or
and
dec
push
stos
inc
xor
dec
in
mov
sbb
cld
cmp
mov
dec
push
je
data16
inc
or
push
in
inc
xor
xlat
inc
mov
test
cwtl
adc
bound
fs
dec
mov
popa
ret
mov
mov
lahf
cs
in
inc
jge
es
es
int3
inc
jp
mov
adc
ss
adc
bnd
in
clc
cmc
stc
dec
aaa
and
out
std
push
adc
dec
adc
int3
aas
test
pusha
cmpsl
hlt
aaa
add
cli
sub
lds
or
sub
pop
mov
das
sbb
mov
pop
push
cli
cld
int
inc
lcall
nop
repnz
test
sub
rcrb
in
leave
pop
push
jbe
xor
jl
dec
rcrl
or
xchg
enter
bound
xor
fwait
test
mov
ljmp
xchg
addr16
jg
lods
leave
mov
rcr
pop
sbb
fstpl
scas
movsb
push
movl
scas
xor
mov
mov
inc
fwait
and
imul
out
sub
push
ss
xor
adc
jno
fadd
mov
pusha
push
xchg
push
pop
push
test
xchg
mov
sub
inc
addb
mov
inc
loop
stc
sub
adc
rorb
sub
shl
outsb
lds
adc
js
fidivs
testb
pop
js
jg
fnstenv
fnstcw
movsb
jl
add
ds
and
add
lret
sbb
scas
rclb
push
fcmove
rorb
fcompl
lock
iret
stc
sbb
jmp
ds
cld
adc
mov
outsb
scas
pop
jae
jecxz
push
fcoms
xchg
cwtl
mov
xchg
adc
lahf
repz
out
xchg
push
push
mov
repz
jle
pop
adc
cmpsl
dec
pand
push
dec
xor
leave
dec
push
mov
sub
hlt
push
push
addr16
cltd
out
jne
adc
xor
clc
fsubrp
jle
negb
mull
testb
dec
addr16
jge
push
nop
jg
or
sarl
mov
or
jecxz
mov
lret
xlat
or
cmp
add
sbb
int3
faddl
xor
lods
dec
popa
shlb
scas
inc
aad
jno
xchg
cmp
or
loope
pop
dec
mov
movsb
mov
and
xchg
pop
mov
sbb
adc
or
jp
je
push
xor
pop
lcall
inc
das
jns
mov
hlt
sahf
fiaddl
stos
push
insl
lds
sub
icebp
stc
sbb
std
in
xlat
jg
stc
sub
mov
jg
clc
int
xchg
jo
insb
push
ljmp
dec
or
mov
mov
push
test
mov
fs
je
jo
cmp
dec
and
mov
enter
jp
push
rolb
ror
sbb
fs
jge
rcrb
and
xchg
adc
inc
xlat
test
stc
test
mov
daa
jno
add
mov
xor
mov
adc
arpl
sbb
cmpsb
dec
sub
push
test
std
sub
sti
jg
lret
movsb
stc
mov
mov
pop
inc
fistpl
bound
std
xchg
ljmp
mov
stos
ds
outsb
mov
xorb
arpl
pop
lret
dec
mov
rcrl
rolb
mov
shrl
cwtl
std
pop
mov
push
subb
mov
fistpl
cli
add
in
loopne
clc
jo
push
pusha
sbb
xchg
das
mul
sbb
xor
and
push
add
paddusb
scas
loope
popa
int
dec
aas
xchg
pusha
fnstcw
jnp
jo
fwait
inc
mov
and
imul
loope
jae
fcmovu
mov
pushf
popf
pop
mov
jl
xchg
push
inc
sahf
inc
push
and
iret
lret
fcoms
adc
jge
scas
sbb
xor
fcmove
push
adc
fidivrl
aas
ret
mov
sub
dec
sbb
mov
mov
sahf
in
push
cmp
push
sbb
mov
cmp
jns
and
xchg
imul
mov
xor
inc
xchg
daa
mov
clc
leave
cpuid
dec
xchg
xchg
aas
out
mov
mov
lds
ss
repnz
aaa
dec
clc
xor
clc
pop
add
in
mov
fwait
dec
and
xchg
test
frstor
movl
inc
popa
xor
in
popa
push
and
push
pop
insl
std
or
imul
mov
xlat
clc
test
pusha
mov
popa
cmp
push
test
loopne
xchg
icebp
mov
pop
lret
jne
jbe
add
sub
dec
mov
xor
leave
insl
subb
xorb
outsb
inc
rclb
pop
imul
pop
repz
gs
adc
popf
pop
in
push
jl
sarl
cmc
daa
dec
call
popf
ss
jnp
out
int
movsb
rclb
test
xchg
fldenv
dec
jns
sbb
or
cmp
testl
dec
inc
xchg
lcall
out
push
push
add
stos
sbb
shl
dec
or
jnp
mov
jle
ja
scas
jg
mov
pop
mov
icebp
mov
test
movsb
add
aad
imul
es
pop
mov
or
push
or
cmp
mov
in
lock
push
adc
outsl
mov
jl
pop
xor
cmpsb
inc
push
xchg
roll
cmp
movsb
or
enter
jg
lcall
js
push
sbb
fadd
aam
flds
pushf
pop
leave
sub
sub
aam
pop
push
shll
dec
push
rorb
out
insl
mov
sahf
cmp
jns
push
sahf
aas
and
fidivrl
ljmp
sbb
ret
popa
test
xchg
rclb
stos
roll
pusha
and
int3
hlt
push
fmul
mov
mov
daa
fiadds
in
incb
adc
adc
loopne
fwait
push
imul
push
push
dec
mov
shlb
addr16
sub
lds
into
mov
rolb
mov
pop
jg
mov
xlat
les
js
outsl
loope
xchg
insl
cltd
subb
fiadds
rorl
and
int
adc
and
std
pop
fsub
repz
es
stos
pop
aam
loop
popa
push
inc
push
add
int
call
bound
inc
add
pop
sbbl
xchg
shll
in
movb
xlat
es
jns
mov
out
test
mov
lods
rcrl
cld
lds
sub
dec
into
movsl
out
out
sbb
push
cltd
ret
inc
mov
xor
cmp
jge
xchg
dec
sarb
lahf
xor
push
fdivrl
rcr
and
cmpb
push
repz
sahf
int3
cltd
pop
sub
xchg
sbb
test
xorb
push
aas
loop
push
jnp
push
repz
mov
roll
fistps
iret
adc
data16
mov
jl
push
in
addl
adc
jg
push
fs
rclb
mov
lods
data16
inc
sbb
sbb
xchg
sarl
jb
sub
enter
cmp
mov
sub
xchg
mov
outsl
arpl
xlat
in
jmp
mov
test
ret
movsl
or
dec
std
mov
add
enter
cmp
insl
shll
loope
dec
inc
pop
in
sbb
inc
xlat
mov
push
lret
cli
inc
test
jns
shrl
dec
dec
jmp
movsl
insb
in
test
gs
in
pop
inc
fwait
push
imul
aad
stos
add
ja
mov
adc
xchg
filds
dec
out
xchg
inc
notl
xor
aaa
sti
mov
sub
mov
rcr
in
outsl
sti
push
xchg
cmp
lds
and
lret
int3
mov
jo
mov
popa
inc
lds
lock
jb
mov
jnp
and
into
and
sub
pop
push
mov
out
sbb
dec
test
iret
sub
lea
addr16
jge
cmp
sarb
loopne
lds
mov
xchg
cmpsl
xor
cmp
nop
xor
mov
movsl
cmp
test
cli
pusha
mov
push
cli
inc
cmpsb
stc
aad
jg
jb
mov
test
push
xchg
and
outsb
pop
xchg
or
cwtl
cmp
icebp
icebp
adc
fmul
je
mov
sub
pushf
sub
out
or
cmc
jne
stos
data16
xchg
pop
push
frstor
jae
xchg
push
xchg
xor
hlt
cmp
call
add
mov
mov
nop
mov
sti
mov
in
mov
cmp
cmp
adc
ficomps
mov
add
cmpsl
cmpl
or
lahf
xchg
push
sub
sub
mov
nop
pop
and
lods
push
jb
and
stos
cmp
xchg
cmp
cwtl
jp
jmp
mov
fistpl
jb
mov
inc
mov
adc
or
lock
imul
in
stos
add
pop
mov
and
inc
int3
push
adc
mov
loopne
push
xchg
xor
mov
ret
cmp
fwait
in
das
add
and
test
lods
out
clc
add
ss
cli
mov
dec
das
mov
mov
add
mov
or
and
lock
adc
ret
loope
aas
sbb
ja
outsl
or
jno
xchg
mov
inc
adc
xor
mov
dec
mov
pop
movsb
push
cmp
jb
pop
sbb
inc
rcll
jne
je
mov
jmp
into
sub
sub
jg
dec
mov
cmpl
sub
mov
sbbb
test
out
leave
mov
and
sbb
adc
xor
scas
stos
lods
cmp
imul
xorb
and
or
loopne
jno
inc
mov
mov
aas
outsl
jb
pop
jp
in
repz
jecxz
pop
nop
stos
outsb
push
sub
dec
push
jno
or
and
mov
and
pop
sub
incl
fstl
push
adc
rolb
sub
or
imul
push
xor
lea
xchg
dec
cmp
jmp
push
dec
xorl
fistps
xchg
adc
or
ret
insl
mov
mov
and
mov
fdiv
cmc
imul
add
mov
cmovs
mov
mov
pop
js
dec
jmp
cmpb
add
pop
mov
orl
into
cmp
fists
test
rcrb
js
and
testl
push
call
jne
out
fsub
ret
sti
xchg
sub
dec
mov
lods
mov
popl
sub
sub
xor
dec
hlt
lock
jb
xor
sbb
mov
add
jns
mov
daa
imul
push
add
xor
xor
mov
sbb
fbstp
or
add
xlat
out
sbb
fiaddl
pusha
sub
sbb
or
outsl
les
mov
jl
lret
inc
sub
movsb
xchg
cmp
inc
mov
mov
cwtl
jbe
jle
aaa
jg
lcall
jp
dec
ret
xor
dec
popa
mov
dec
adc
mov
add
push
lret
data16
jnp
push
pop
mov
out
mov
popa
jge
xor
enter
loope
sub
rcl
lods
sbbb
mov
inc
iret
outsl
and
xlat
roll
imul
pop
fisttps
mov
addr16
fistpll
mov
lcall
and
stos
test
cmpsl
out
fisttps
cwtl
sub
in
loope
lods
sub
int3
shlb
mov
rcrb
cmpb
out
sarl
jp
jp
or
cmc
mov
cmp
cmpb
out
pop
or
xor
add
fbstp
jmp
rolb
or
loope
and
hlt
xor
fimuls
or
not
xor
in
jbe
cwtl
push
test
fdiv
adcl
add
mov
cmp
push
jmp
out
xor
icebp
xchg
jl
sahf
adc
ljmp
fidivs
sub
aam
adc
adcl
in
filds
jmp
sbbb
pushf
ljmp
rclb
ljmp
fcompl
insb
roll
or
ss
push
jg
xchg
add
imul
insb
mov
jae
icebp
call
nop
call
loopne
daa
ret
and
cmp
pop
lea
stos
ret
jno
outsl
pop
mov
in
fwait
push
mov
add
add
dec
das
inc
aam
xor
mov
pop
jne
push
mov
pop
pop
xadd
call
pand
je
rolb
sub
mov
jp
repz
aam
adc
into
shll
xchg
xor
jmp
pop
sub
mov
jmp
stos
or
jne
pop
lcall
pushf
js
mov
pop
mov
mov
push
fildll
cmp
sti
dec
mov
lcall
mov
and
int3
fistps
push
jge
or
mov
dec
sbb
inc
lret
mov
ret
es
cltd
test
loop
addr16
insb
inc
push
pop
cmpsl
adc
cmpl
insl
scas
jno
adc
xchg
je
inc
lcall
sbb
add
or
xlat
das
rorl
fidivrs
movsb
cmp
pop
cmp
cmp
mov
int
xor
jb
jmp
je
or
fistpll
mov
ljmp
test
lret
xlat
xchg
push
rcr
stos
mov
inc
aam
pop
mov
pop
or
or
xor
out
pop
jnp
cmpsb
jmp
push
mov
cltd
push
inc
mov
ljmp
leave
nop
cmp
ljmp
pop
mov
jg
jnp
pusha
push
scas
jp
aad
test
jecxz
or
pop
jle
mov
dec
mov
fbstp
jle
cltd
enter
jne
pop
push
fldl
movsb
cmp
lods
cwtl
jp
mov
dec
in
clc
push
sti
repz
inc
jne
inc
xor
jmp
dec
mov
imul
and
mov
int3
mov
cmp
sbb
arpl
mov
pop
loopne
and
and
pop
cmp
stc
and
or
sub
mov
push
mov
jp
dec
cmp
insl
adc
lock
ds
pushf
pop
loop
pop
cmp
int
adc
and
lods
xchg
inc
fiadds
fldl
aas
sub
mov
jmp
addr16
cld
cmp
pop
notb
mov
stos
push
jg
pop
shl
aam
add
sbbl
jnp
pop
clc
test
sbb
iret
mov
iret
push
adc
mov
xchg
scas
jns
jo
in
or
or
sar
std
pop
call
lock
jnp
cmc
push
fcmovnu
push
popf
pop
xchg
add
fisttpl
maskmovq
lock
xor
adc
stos
dec
les
jmp
movsl
sahf
push
sub
lahf
push
cmpsb
hlt
mov
lahf
insl
pop
aad
cmpl
aam
push
push
xchg
outsl
sti
mov
and
sbb
insb
jno
xor
sahf
jb
mov
cmp
ljmp
clc
addr16
shlb
mov
add
enter
sub
call
cmp
ret
int
out
xor
mov
or
arpl
add
sub
mov
mov
out
outsl
mov
sti
push
arpl
arpl
hlt
mov
cltd
stc
mov
stos
push
jne
or
mov
cmp
lods
sub
sub
mov
add
sub
icebp
loopne
cmp
xchg
stos
sub
sub
pop
mov
fdivrs
sub
in
jno
add
test
adc
pop
sbb
adcb
fisttpl
imul
xchg
pusha
pop
lock
test
mov
xchg
sub
or
movsl
insb
xor
int3
inc
push
xlat
mov
pop
jo
jb
push
cmc
adc
jle,pt
stc
push
fcmove
mov
or
mov
mov
insb
add
dec
pop
xchg
stc
adc
or
push
lret
push
pop
cmp
clc
mov
xor
inc
sub
out
adc
in
xor
popa
mov
jbe
fidivs
fnstcw
cmp
loop
dec
cs
sub
pop
sub
xlat
fldt
adc
mov
pop
xchg
outsb
stos
popa
mov
cwtl
and
addr16
push
add
inc
jg
sub
cli
xchg
inc
xchg
push
test
fstl
cltd
lret
and
imul
negl
xchg
mov
dec
xor
retw
adc
scas
addl
sti
repz
ret
pop
fildll
push
popf
push
fwait
push
adc
daa
cmpb
jmp
icebp
icebp
test
adc
add
jp
rol
cmpsb
add
cli
aaa
xchg
std
xchg
mov
push
ret
add
dec
imul
push
mov
lds
adc
dec
mov
rolb
pop
pop
push
cmp
xchg
mov
cmp
fwait
jle
in
mov
cmpsb
in
jmp
sbb
mov
mov
jne
add
je
mov
test
mov
aas
jmp
pusha
xchg
das
pop
stc
mov
push
jns
imul
xchg
cli
test
inc
add
or
loop
stc
cs
stc
or
xor
push
adc
pop
inc
add
out
add
push
sub
cmp
icebp
test
outsl
inc
xchg
push
dec
pop
aad
inc
dec
mov
iret
xor
push
pop
mov
aam
test
push
popa
inc
sub
or
sub
and
repz
push
imul
test
xchg
arpl
test
mov
arpl
mov
xorl
frstor
adc
and
loope
fisttps
cmpsb
pop
rorl
cmp
insl
sbb
outsb
shlb
jno
xlat
loopne
sbb
inc
lret
xchg
lcall
inc
daa
sbb
std
loope
jge
pop
dec
nop
push
push
or
ss
or
aaa
cld
leave
fists
mov
mov
mov
cmp
loopne
push
sti
push
xchg
bound
fidivrl
out
jns
adc
rorb
xor
scas
les
pop
shll
jl
jae
pop
jl
icebp
aas
or
mov
lret
stos
lcall
xor
mov
adc
adc
bound
lea
pushf
and
jp
mov
inc
and
mov
std
add
push
movsl
clc
enter
inc
sub
sbb
out
cmpsb
mov
fbstp
push
add
stos
push
mov
roll
mov
push
cld
mov
mov
stos
and
ljmp
dec
mov
push
jb
xchg
dec
sub
in
test
dec
and
lret
rcr
or
lds
mov
and
cltd
lret
sbb
enter
push
and
repnz
cmp
fnstenv
xchg
cmpsl
data16
in
fcmove
scas
jg
inc
pushf
sbb
adc
aaa
jecxz
mov
push
and
sub
push
add
repnz
orl
sahf
ret
inc
xor
sbb
cmp
jae
sbb
lods
insl
iret
push
add
xchg
sub
movsl
xor
leave
pop
int
sub
std
pop
fistl
sti
stc
lods
mov
jo
mov
js
dec
loopne
adc
sub
inc
gs
leave
dec
adc
inc
loopne
imul
lret
mov
insl
les
and
shrb
and
jnp
std
dec
xor
les
pop
mov
loopne
out
lds
jmp
jmp
fsubrl
adc
hlt
sbb
fcompl
mov
lock
sbb
sbb
lea
sub
cmp
jnp
sbb
add
xlat
xchg
jecxz
in
mov
push
fcompl
sti
sbb
mov
sbb
or
or
mov
cmpsb
test
add
mov
jge
and
in
negl
stos
sbb
pusha
push
adc
xor
inc
mov
inc
jmp
pop
addr16
mov
movsl
adc
fwait
xchg
test
call
sub
stos
inc
jne
mov
push
aam
sarb
sub
mov
xchg
mov
aad
sarl
lret
enter
fldl
push
insl
sbb
xchg
xchg
repz
cltd
inc
mov
imul
inc
in
push
and
out
call
pop
jl
outsb
inc
mov
out
loop
push
aam
ss
out
pop
add
push
mov
and
fwait
icebp
movsb
or
push
jno
pop
jnp
xchg
das
aam
testb
je
outsl
and
in
jg
cmp
dec
fcompl
or
jle
sti
gs
mov
or
test
shll
enter
xor
or
fbld
fcmovbe
xchg
jg
arpl
bound
fldcw
jb
loope
mov
dec
xor
jae
data16
arpl
cmp
fists
cmpsb
mov
push
push
test
fisubs
push
push
int
movsb
dec
mov
xchg
inc
popl
gs
ljmp
outsl
pop
sub
int
cmp
data16
cmpsb
jge
jnp
cld
ss
inc
sub
sub
pop
push
pop
aad
in
repz
orl
mov
fcomps
adc
popf
jp
js
mov
cld
nop
mov
pop
int
outsl
pop
jnp
inc
fisttps
inc
imul
imul
or
cld
das
lcall
test
adc
adc
inc
roll
adc
das
lods
pop
push
test
out
inc
sbb
push
icebp
pop
cmp
sub
ret
ret
jg
and
inc
adc
rclb
or
popa
loop
subl
cmp
push
push
ds
mov
pop
cwtl
pop
fbstp
outsl
or
ja
loop
ds
add
xchg
or
pop
out
imul
and
adc
or
sbbb
hlt
push
adc
mov
mov
lret
or
roll
fiaddl
int
mov
popa
cmp
mov
add
push
jne
aaa
je
pop
dec
adc
testb
in
fidivl
ljmp
push
cmpsl
outsb
in
push
push
dec
mov
outsl
es
hlt
pop
inc
outsl
inc
ljmp
pushf
in
adc
into
imul
aam
add
jmp
stos
push
movsb
ficoms
les
data16
inc
lods
mov
and
xor
test
ret
mov
movsl
cmp
push
sti
push
call
jle
jl
dec
pop
dec
add
fs
jg
or
dec
push
mov
add
cli
dec
pop
ljmp
pop
mov
fdivs
mov
push
xlat
mov
mov
lahf
xchg
jnp
push
ficomps
in
popa
pusha
mov
pop
push
mov
push
cld
lcall
xor
mov
and
xor
inc
sub
je
xchg
sub
jb
repz
mul
mov
repnz
int3
fs
adc
push
iret
pop
test
loope
pop
adc
and
and
lods
fstp
pop
out
and
push
lea
testb
adc
cmp
clc
sub
and
mov
xchg
push
aam
or
imul
lods
jbe
mov
add
loopne
mov
push
or
loope
out
subl
es
sbb
add
gs
out
and
xlat
clc
fiadds
in
pop
sahf
push
fwait
in
lahf
fadd
cwtl
and
mov
mov
mov
sub
xor
cmpsl
lcall
mov
dec
mov
notb
sub
adc
and
add
inc
pop
inc
enter
in
movsb
inc
xor
mov
adc
scas
mov
div
xchg
stc
add
out
insb
aas
inc
inc
lock
sarb
les
inc
paddb
inc
jl
xchg
out
dec
fsubrp
dec
loopne
mov
addl
lock
fs
pushl
lock
sub
cmpl
fildl
or
sahf
mov
pop
cmc
cmp
fistps
out
aam
and
inc
and
xchg
test
mov
mov
sbb
imul
add
out
mov
ja
movsb
jmp
inc
dec
call
loop
aas
out
jmp
and
out
push
cld
into
mov
addl
test
fs
and
and
aas
or
lods
pop
mov
jg
jecxz
xchg
mov
xor
bound
mov
xlat
pop
cmp
pop
stc
lods
lret
mov
xchg
sub
mov
fistl
jno
gs
clc
inc
adcb
xchg
and
in
fldenv
sub
inc
insb
call
mov
popa
loopne
cmp
pop
and
imul
sub
scas
or
add
fisttpll
inc
aad
sahf
les
in
push
fists
das
lea
mov
jo
dec
cmp
addr16
into
insl
data16
push
or
jno
subl
push
jnp
mov
dec
push
or
lds
xchg
dec
std
xchg
leave
adc
sbb
dec
pop
push
or
xchg
cld
add
aad
das
sub
mov
add
jo
inc
sahf
paddsw
loope,pn
mov
mov
dec
aad
xor
cld
jb
fnstenv
lcall
sub
popf
imul
lret
mov
aas
mov
mov
call
add
mov
orl
outsl
jns
jle
stc
enter
std
jae
shrb
mov
lock
stos
mov
jbe
loop
inc
dec
jnp
add
or
cmova
push
sbb
fnstsw
lds
pop
lahf
jbe
push
aad
pushf
cmc
das
mov
pop
fwait
xchg
and
mov
push
mov
cld
xchg
sbb
mov
aaa
and
insb
cs
lods
into
mov
mov
fbld
test
mov
jl
cmpxchg
inc
push
test
imul
sub
push
insb
jge
fdivrl
or
mov
popa
adc
into
popf
test
cmc
push
into
cmpsl
imulb
mov
push
fistpl
inc
mov
or
or
call
nop
mov
xchg
mov
leave
movsb
sbb
push
add
mov
addb
adc
mov
mov
mov
inc
in
adc
call
or
dec
xor
jecxz
or
cltd
mov
push
push
ret
push
and
push
dec
sub
in
push
in
fs
pushf
fwait
add
dec
fadds
pop
xchg
push
push
loop
mov
js
mov
call
inc
rorl
stos
stos
xchg
sub
lock
xor
mov
push
jae
dec
sbb
rclb
cmpsl
fidivl
cltd
jmp
mov
cmc
add
xchg
add
dec
fcomps
test
jmp
icebp
mov
mov
icebp
fcmovbe
lcall
inc
leave
int3
imul
mov
xor
fs
dec
mov
or
in
pop
sub
shll
sub
mov
pushf
loop
push
pop
dec
pop
pusha
dec
and
mov
lods
dec
pusha
stc
fstps
xchg
sbb
cmpsl
ja
ja
jmp
xlat
fnsave
xlat
notl
leave
push
xchg
out
cld
js
sbb
es
mov
xchg
popf
mov
mov
stc
push
add
loopne
cmpb
mov
push
xor
mov
push
aas
inc
addr16
test
inc
cmp
pop
mov
out
jnp
hlt
sub
or
xor
jb
sti
and
jp
mov
clc
mov
dec
pop
pop
cmp
jnp
and
addr16
sbb
cs
gs
inc
cmc
inc
inc
cmp
cmp
scas
push
notl
push
fwait
adc
pusha
jns
dec
push
int
scas
fsub
es
rcl
lea
push
incb
jae
mov
pushl
loopne
pop
cmc
rcll
and
sub
mulb
fs
cmpsl
daa
pop
adc
or
movsb
jmp
adc
aad
jle
fdivr
repz
push
xchg
pop
xchg
cmp
jg
insb
adc
xor
test
movsb
mov
cmp
jb
lods
mov
push
add
fcompp
pop
inc
addl
cmp
mov
inc
movsl
insl
jnp
in
pop
mov
dec
stos
nop
dec
lcall
xchg
outsb
dec
in
nop
push
xchg
fxch
pop
push
and
pop
daa
cwtl
negb
packuswb
loope
push
pop
push
cmpsl
or
mov
or
ljmp
push
mov
dec
adc
repnz
aas
rolb
repz
cld
fpatan
xchg
sahf
mov
daa
sbb
mov
cmp
jge
adc
imul
lods
je
fdivrp
cmpsb
cmpsl
dec
js
adc
push
pop
lahf
stos
and
dec
stos
scas
hlt
jae
pop
das
push
cmpsl
cmp
aas
xchg
sbb
dec
gs
inc
pop
jmp
xchg
jbe
rorb
scas
and
fisttpll
outsl
stc
push
sbb
push
mov
out
mov
pop
xorl
test
adcl
cmp
addr16
shlb
mov
push
test
mov
sarl
dec
inc
add
mov
xchg
mov
andb
imul
lret
sbb
out
ds
mov
adc
adc
pop
inc
push
adc
xchg
movsb
fsts
dec
stc
scas
call
jno
pop
fcmove
cmp
or
int3
cmp
adc
popf
sub
out
mov
mov
mov
pusha
cmc
jne
sub
pop
notl
clc
daa
je
mov
mov
outsb
xchg
jno
arpl
lods
call
pop
jge
pop
cmp
pop
shlb
aas
daa
mov
mov
fstpl
push
aam
and
outsl
and
or
fs
sahf
jb
cmc
jmp
insb
jbe
sarb
add
rcl
jnp
movsl
fwait
shrb
cmp
lret
sub
in
xchg
or
mov
enter
mov
jne
clc
pop
sbb
in
pop
adcl
xor
xchg
leave
or
mov
fstpt
push
dec
scas
or
inc
jmp
not
loopew
imul
push
and
outsb
in
jg
dec
jl
loopne
loopne
mov
mov
and
in
testb
mov
xchg
push
mov
sub
push
or
add
cli
xchg
mov
xchg
into
loope
sarl
pop
pop
and
lcall
cltd
adc
mov
movb
mov
xor
cmp
imul
jg
in
shlb
jl
dec
arpl
cmp
inc
jecxz
add
push
sub
push
divl
ret
cmp
movsb
pop
in
dec
xchg
mov
ret
and
sub
lret
sahf
xor
stos
stos
adc
sarb
sahf
dec
dec
inc
sbb
mov
sbbb
xchg
or
adc
divb
or
addr16
ljmp
pop
imul
mov
add
push
stc
inc
pop
mov
subb
cmp
gs
mov
into
test
stos
xor
loope
pop
cmpl
daa
push
fwait
cmp
int3
adc
gs
and
push
es
cmp
nop
fwait
and
jb
or
adc
or
pop
inc
push
inc
sub
pop
jle
lret
fwait
cwtl
xchg
cmp
xor
mov
sbb
jmp
mov
xchg
outsl
loope
pop
pushf
mov
mov
mov
les
push
mov
pop
lods
mov
je
jmp
scas
inc
push
sbb
arpl
push
dec
scas
mov
repnz
fisubrs
lods
jmp
adc
push
ss
or
sub
push
fprem1
repnz
adc
mov
dec
sahf
add
xor
lods
mov
imul
or
leave
jae
ss
pop
cmc
jp
enter
out
adc
repz
std
xchg
int3
jecxz
call
cmpb
mov
adc
fcom
dec
sbb
mov
aaa
add
and
mov
fildl
fwait
out
sub
lcall
insb
jg
out
ja
daa
push
push
loopne
jge
addb
mov
sbb
test
pushf
and
fcoml
push
fwait
in
cmp
xchg
pop
lret
inc
adc
addr16
push
jns
out
ljmp
mov
mov
adc
movsb
out
gs
dec
pop
scas
mov
xor
cmp
adc
lret
push
pushf
mov
mov
xor
adc
mov
pop
adc
dec
bound
ficoml
pusha
insb
fdivrp
push
bound
test
mov
jnp
sub
push
sbb
lcall
xchg
pusha
mov
in
dec
das
clc
inc
push
mov
and
jb
and
dec
movsb
dec
cmc
dec
pop
dec
xlat
push
js
stc
or
roll
inc
push
and
adc
jb
adc
repnz
dec
ret
xchg
mov
push
roll
shll
or
je
aas
add
bnd
jbe
in
adc
mov
test
sub
cld
aas
subb
idivl
stc
gs
adc
lods
mov
pop
xor
sub
mov
popa
or
sbb
mov
jbe
hlt
cmp
lock
out
pushf
in
stos
jae
outsl
adc
call
fucomi
movsl
push
mov
add
out
fcomip
ja
mov
bound
jp
sub
fsubrs
push
mov
rcrl
jp
stos
mov
adc
rorb
stos
outsb
adc
xor
or
jnp
mov
mov
in
lds
jb
jns
ja
pop
test
movsb
scas
insb
in
scas
jns
imul
push
daa
push
mov
incl
dec
xor
add
testb
xor
testb
push
xchg
mov
mov
and
cmp
mov
push
sahf
std
push
call
sbb
pop
sbb
add
arpl
lret
or
push
mov
fstpt
aas
pop
int3
push
les
fucomip
push
mov
or
mov
jle
dec
cmp
pop
popf
mov
push
and
mov
pop
ret
stos
mov
mov
sbb
cli
loop
sub
mov
adc
cmp
out
dec
adc
cltd
mov
jne
int
xor
cli
xor
push
mov
mov
leave
or
icebp
push
movsl
pop
jle
sbb
mov
push
pop
push
in
orl
inc
jecxz
sub
dec
push
in
xor
fidivrs
dec
mov
gs
jecxz
outsb
mov
lret
pop
adc
repnz
test
jmp
movsb
mov
mov
sbb
mov
insl
fnstsw
test
and
lret
lret
das
bound
mov
pop
adc
iret
std
pop
orb
loopne
cmp
add
xchg
add
outsb
sub
add
mov
push
push
cwtl
ud0
jb
imul
mov
out
inc
lods
pop
outsb
jg
js
lods
les
popf
xor
pop
popa
movsl
mov
xchg
fsqrt
ljmp
xlat
lds
cmc
xchg
sti
cmp
mov
aad
xor
sti
stc
rcll
push
sbb
insb
sub
scas
cmp
mov
jb
jmp
into
pushf
sub
imul
test
sub
outsl
nop
push
cmp
sbb
mov
das
outsb
lds
and
or
push
jbe
dec
or
es
mov
fucom
xchg
gs
xor
arpl
xchg
pushfw
scas
sbb
lods
cmp
rorb
jns
outsl
dec
popa
cmp
adc
cltd
bound
sbb
loop
mov
push
jns
outsb
mov
or
gs
movntq
dec
insl
leave
call
push
xor
or
cs
jno
lea
mov
mov
lret
cmpsl
add
pop
inc
push
sbb
outsl
fistpll
cmp
dec
js
into
ljmp
jmp
jmp
or
push
mov
test
jae
stos
xor
arpl
in
add
push
mov
mov
jae
addl
xrelease
mov
imul
sub
out
vpacksswb
add
andl
pop
pushf
sbb
sahf
push
dec
dec
into
test
sub
adc
push
jo
mov
push
xor
sub
nop
iret
stc
cmp
test
jle
jbe
xor
cli
ret
in
js
xchg
notb
dec
lret
fisttps
cmc
push
jo
lods
and
lods
pop
jno
call
clc
mov
clc
cmpsl
out
jle
dec
fcmovbe
into
hlt
mov
gs
ror
pop
sbb
adc
loop
stos
aas
loope
mov
and
cld
outsb
mov
sub
mov
dec
stos
shr
sub
ds
inc
jb
ret
jge
cli
xchg
adc
pop
scas
sbb
jo
adc
adc
pandn
shll
jnp
lds
fbld
cmpsl
sub
cld
cmp
lods
pusha
lcall
mov
adc
lods
mov
icebp
adc
push
mov
adc
stc
pop
and
jb
sub
pop
jmp
sahf
movaps
jbe,pn
mov
jbe
shr
loope
scas
repnz
cmc
mov
sub
inc
pushf
jae
xchg
fsubrl
xchg
or
lret
out
sbb
aad
pop
pop
push
and
outsl
ljmp
mov
popa
outsl
jne
sti
cmp
in
mov
sbb
pop
sti
fsubl
push
or
add
pop
sbb
popf
lahf
outsl
es
xchg
jbe
cs
je
in
push
pushf
popf
push
lcall
cmp
xor
cmp
sbb
lods
xchg
imul
jbe
shll
outsl
add
xor
cs
int
dec
inc
test
mov
pop
and
in
dec
mov
mov
pop
jne
shll
repnz
dec
add
and
cmpb
fsubrl
sahf
pop
hlt
aam
outsl
jo
jae
jp
mov
fdiv
sub
pop
add
xlat
inc
sbbb
jl
insl
sub
outsb
xor
inc
xchg
jb
mov
cwtl
sub
in
mov
jecxz
pop
adc
cwtl
lea
and
dec
mov
ror
popf
xor
adc
cld
out
inc
cld
test
jno
aad
test
jmp
ret
dec
xchg
push
mov
pop
mov
dec
sub
mov
push
cmp
in
adc
xor
add
push
add
sbb
xchg
in
sub
xchg
out
aas
mov
adc
lods
popf
xchg
push
je
cmp
push
ret
rcrl
xchg
leave
mov
xchg
sub
xchg
out
inc
icebp
clc
scas
jmp
inc
ret
dec
and
jno
mov
or
xor
mov
daa
out
sbb
shlb
push
and
cwtl
push
daa
or
inc
loope
inc
cs
xchg
xchg
lock
push
loopne
int
ficomps
or
push
mov
das
adc
xchg
push
xchg
lods
and
mov
push
dec
js
adc
rclb
jg
pop
mov
sub
inc
push
cmpsb
in
dec
test
in
mov
outsl
push
dec
push
adc
fldenv
std
out
mov
lock
mov
push
ret
repnz
cmp
jge
mov
insb
lock
cltd
loop
dec
sbb
xchg
stos
cmp
mov
jnp
push
fcmovb
adc
mov
lret
flds
stos
xor
dec
lods
mov
lahf
push
or
pop
dec
xchg
mov
lods
test
xchg
gs
jl
sub
int
fwait
sbb
mov
jbe
mov
sbb
sarb
mov
adc
sub
test
sbb
mov
pop
xchg
sbb
in
jnp
xor
dec
cmpsb
mov
mov
xlat
jbe
mov
cmp
mov
push
stc
cmp
dec
fldcw
fcomps
cs
fldenv
mov
aam
sbb
jo
pop
mov
lods
popf
mov
scas
sbb
sahf
cmp
push
xchg
add
cmp
jbe
bnd
sahf
xchg
cli
sar
scas
fdivs
mov
cmp
pop
clc
cmp
sub
arpl
inc
int3
push
imul
mov
push
test
pop
cltd
insb
cmp
mov
push
cmp
rcll
inc
xchg
mov
mov
cmpsl
sbb
cmc
mov
test
or
dec
jns
stos
jge
add
and
push
inc
sub
cs
jno
dec
hlt
loopne
cwtl
in
into
sbb
inc
dec
pop
adc
inc
or
repnz
inc
jg
mov
insl
ja
mov
jecxz
fsubrs
adc
into
inc
in
push
adc
push
push
inc
pinsrw
lret
mov
aaa
inc
pop
repnz
push
cmp
mov
cmp
ss
clc
dec
idivl
or
lcall
xchg
loop
push
mov
shlb
decb
lret
hlt
jge
lea
rorb
add
xchg
push
xchg
test
jg
scas
arpl
inc
popf
jp
or
test
dec
clc
mov
js
or
cmpsl
mov
mov
jg
push
xchg
ret
and
lds
sub
call
adc
in
mov
rcr
ret
push
maxps
xchg
inc
inc
or
pop
add
adcb
mov
jmp
or
orl
das
mov
cld
inc
test
mov
xlat
adc
mov
xlat
into
push
sub
insl
jns
inc
xchg
dec
pusha
gs
out
push
mov
adc
test
loopne
inc
jl
and
or
push
testb
or
daa
mov
fbstp
mov
fnstcw
cmp
test
inc
ja
cmpsl
pop
xlat
inc
ss
and
das
mov
push
insb
cli
mov
int
push
andb
ds
stos
sub
repnz
imul
sub
xor
popf
sbb
add
mov
dec
orb
mov
test
mov
outsl
jae
inc
jb
push
inc
in
sub
popf
mov
xchg
xchg
pop
lock
dec
pusha
pmulhuw
fbstp
rclb
in
movsl
mov
cmpsb
add
xchg
jge
pop
sbb
aas
std
cmpsb
dec
cwtl
and
in
scas
jbe
ss
test
dec
xor
inc
mov
pop
movsl
repz
in
repnz
or
jg
mov
add
mov
shrb
imul
int
jp
lds
add
inc
ror
les
stc
repz
test
cwtl
clc
dec
xchg
fdivp
outsl
outsl
pop
xlat
sbb
enter
insb
lret
dec
fwait
push
adc
sahf
aam
mov
jnp
push
dec
and
xor
add
dec
out
xchg
daa
mov
loop
mov
out
mov
mov
ds
xor
xlat
dec
mov
mov
lret
and
pusha
add
dec
popf
test
aas
cmp
inc
bound
jecxz
das
push
xchg
pop
test
daa
scas
dec
jnp
test
stc
movsl
xchg
inc
pop
mov
je
adc
and
push
fwait
test
mov
mov
andb
mov
aaa
inc
or
ds
pushf
push
mov
inc
lret
and
ds
fnstenv
pop
or
aas
cld
push
cmp
addr16
jle
dec
mov
daa
loope
int3
xor
adc
aam
push
sbb
xchg
mov
subl
daa
xor
pop
inc
dec
mov
gs
dec
jecxz
ficoml
xor
adc
jns
or
jns
adc
pushf
sub
mov
fsubrp
dec
addl
add
xlat
cmp
cmp
adc
ss
das
jge
sbb
xor
lcall
aaa
fwait
aad
dec
push
cmp
push
shlb
lret
shrb
xchg
enter
scas
xchg
xchg
sahf
dec
push
mov
fistl
dec
loopne
push
insl
dec
sub
jl
insb
stc
and
xor
rorb
sbb
pop
movsl
dec
outsl
movsl
push
mov
in
or
xchg
fsubrl
xchg
mov
pop
and
xor
xor
hlt
enter
or
in
faddl
iret
xor
jecxz
push
mov
and
sbb
arpl
cmp
pop
jmp
push
mov
dec
sbbl
outsl
mov
ja
repz
mov
arpl
stos
imul
jp
out
push
cmp
pop
aaa
loope
lret
lcall
ret
outsl
dec
pop
das
cmp
test
icebp
dec
pop
sub
cmc
sub
js
xchg
lods
rcl
mov
dec
ss
mov
movsb
jmp
test
add
jmp
or
addl
cld
pop
and
pop
in
out
fst
stc
lock
out
scas
push
scas
std
and
and
js
push
or
andl
xor
mov
sub
inc
sub
pop
movsb
push
push
fiadds
ret
and
jo
pop
push
sbb
jne
aas
sbb
pop
push
cmp
dec
imul
in
xor
cmpl
clc
sbb
or
pusha
jmp
out
dec
insb
outsb
xor
inc
sub
mov
lret
push
push
mov
mov
lds
cmc
enter
add
mov
cli
lahf
nop
cli
pop
movsl
cmpsl
dec
cmpsb
inc
aad
stc
push
cmp
add
or
inc
dec
mov
xchg
dec
mov
cmp
or
fldenv
sbb
sbb
xor
ret
xchg
or
mov
and
adc
adc
stos
pop
arpl
bound
inc
inc
or
add
mov
push
xchg
lds
nop
fldcw
mov
xor
test
and
push
aaa
pop
je
dec
jg
inc
shll
test
ret
jmp
mov
js
cmpsb
into
test
xor
scas
lahf
jecxz
arpl
cmp
es
jmp
movsl
inc
cmpb
and
pop
je
test
in
enter
outsl
adc
cmp
and
adc
mov
jle
and
dec
jnp
jns
clc
mov
jne
adc
cmp
and
cmp
jae
es
xlat
inc
sahf
sbb
test
push
push
movsb
ss
mov
cmp
testl
jno
scas
xor
mov
fisttps
push
sbb
in
jmp
push
or
daa
inc
adc
push
push
lret
popf
pop
push
mov
push
mov
or
insb
ja
std
cmpsl
pop
loop
push
adcb
jb
jnp
mov
daa
test
jae
aas
pop
imul
idivb
mov
subb
je
fildll
pop
pop
jb
das
into
outsb
push
lret
pop
mov
shlb
push
add
inc
and
loopne
jle
adcl
mov
mov
stos
repz
xchg
push
cmp
shl
mov
movsl
out
scas
lret
jp
xchg
xchg
ss
pusha
cmp
mov
xchg
inc
call
mov
sti
out
test
mov
lret
jns
push
sub
push
cmpsb
int
mov
cmp
inc
or
xchg
lret
push
inc
push
cmp
pushf
xchg
mov
mov
in
lds
scas
popa
mov
push
jns
bound
mov
push
in
and
lods
leave
ss
aaa
push
xor
fcompl
repnz
decb
dec
arpl
inc
sbb
rorb
insl
je
bound
dec
test
icebp
scas
sbb
sbb
jae
enter
lock
std
shrb
fsubl
sahf
sti
xchg
jb
cmp
sti
xor
clc
lock
xor
mov
jo
dec
mov
jecxz
divps
shrb
repz
xorl
fiaddl
xchg
mov
sbb
adc
test
jp
inc
add
pop
xor
jmp
fsts
testb
add
jb
dec
test
jge
lods
or
adc
ret
nop
icebp
es
fxch
dec
xor
stc
push
and
mov
sbb
pop
arpl
subl
mov
loop
cmp
mov
icebp
rolb
enter
mov
sbb
push
mov
pop
xchg
push
jae
rcr
push
xorl
out
xor
jnp
cmpsl
sbb
loopne
fneni(8087
sbb
je
std
mov
imul
mov
push
ret
mov
and
xchg
and
xchg
jnp
test
pop
mov
mov
or
arpl
shlb
and
mov
das
sbb
push
jecxz
mov
push
sub
mov
es
dec
mov
xchg
popf
es
cmp
lods
rcll
add
into
clc
dec
notb
sbb
adc
int3
pop
call
push
xchg
lret
xor
xchg
jg
xor
or
out
dec
gs
fiadds
inc
outsb
imul
das
sahf
pop
push
je
jl
lret
in
in
out
into
xchg
pop
mov
xor
xchg
movsl
sub
xor
rcr
pop
mov
scas
mov
rcrl
pop
sbbl
cmpsb
jns
imul
sub
mov
repnz
xor
outsb
push
outsb
cmp
push
xchg
push
int
aaa
stos
subl
xor
sahf
in
mov
in
dec
jl
movsl
jb
dec
jbe
xchg
ljmp
outsb
jmp
addl
test
sbb
icebp
jb
in
xlat
das
pop
stos
mov
or
xchg
mov
xchg
sub
xchg
xchg
insl
fisttpll
sbb
cmp
test
or
imul
xor
movsl
sahf
js
or
movsb
in
or
xchg
pop
jb
pop
data16
cmp
cmp
mov
jae
out
inc
adcl
stc
push
insl
out
xchg
test
and
adc
mov
ss
icebp
mov
cli
adc
inc
xchg
jns
push
popa
int
adc
cmp
out
inc
cmp
lods
aam
mov
pop
push
in
mov
shl
fnstcw
jnp
push
sub
dec
jo
addr16
inc
lea
add
inc
mov
ljmp
mov
xchg
mov
cmp
adc
push
out
adc
push
push
or
fiaddl
pushf
fdivl
adc
mov
push
push
inc
xchg
push
mov
push
insb
icebp
shlb
mov
cmp
add
aaa
xchg
inc
out
into
mov
fdivl
inc
mov
adc
dec
jmp
jns
sub
pop
pop
loop
jl
mov
clc
movsb
dec
mov
push
negb
mov
out
pop
lcall
add
scas
aas
cmp
mov
inc
lods
push
pushf
push
and
daa
xlat
popa
or
sbb
fs
mov
or
inc
loop
adc
mov
add
test
push
ja
jb
mov
repz
hlt
bound
mov
add
scas
fcmovnu
lods
icebp
sti
pop
nop
arpl
xchg
iret
ds
fildl
cmc
add
icebp
rcll
or
sub
sbb
data16
or
add
rorb
sbb
mov
cmp
aam
jo
insl
sbb
mov
icebp
out
push
cmp
mov
clc
cmp
je
scas
xchg
fcmove
cmp
jecxz
mov
adc
or
pop
adc
xchg
pop
xorl
sbb
ds
out
andl
mov
clc
push
push
fstp
sub
into
mov
repz
jo
xor
fdivl
data16
or
dec
orl
aad
adc
sub
push
inc
jecxz
sub
xchg
jne
xchg
cmc
dec
insl
jmp
pop
xor
and
int3
shlb
in
stc
or
and
pop
or
pushf
ss
cmp
lcall
xchg
imul
mov
fildl
jns
call
outsb
mov
xchg
jl
out
mov
into
push
test
mov
int3
and
addl
mov
fisubl
jae
jbe
mov
push
pushf
gs
imulb
jmp
pushf
fcmovnbe
cltd
xchg
loope
push
cmp
ja
jge
rorb
decl
ljmp
mov
imul
inc
lahf
mov
out
lret
pushf
bnd
icebp
dec
call
icebp
mov
push
add
mov
inc
sbb
sbb
dec
in
notb
add
add
sbb
mov
push
vpslld
pop
out
add
les
fstpl
fcmovb
stos
ret
push
aad
inc
mov
fsubrl
jp
fsubl
add
aam
test
dec
cltd
cld
rcrb
mov
in
push
insb
mov
push
mov
nop
mov
fwait
lahf
je
push
adc
lcall
scas
scas
shlb
lahf
mov
sbb
sbb
shrl
cs
pop
js
shll
pusha
lods
mov
jb
mov
std
xor
mov
pop
test
in
incl
sub
jl
sbb
mov
sub
inc
sti
dec
out
nop
inc
sbb
xchg
pop
subb
dec
aad
hlt
mov
adc
insb
dec
enter
out
lret
idivl
fstp
lret
jbe
push
lea
mov
cmpsl
jmp
pop
pop
inc
sbb
cltd
popa
sti
mov
or
xchg
mov
aad
std
flds
outsl
ret
outsb
lret
dec
stos
test
pop
lds
or
cmpsl
and
xorl
cmpsb
mov
push
push
lea
mov
ljmp
mov
jmp
mov
jp
push
jno
test
out
stos
mov
jnp
popa
inc
adc
jnp
rcll
cltd
xlat
sbbb
pop
ret
scas
xlat
fildll
pop
and
out
out
cmc
sbb
push
pop
jg
popf
and
push
jl
jns
imul
inc
add
dec
in
or
cmp
pop
add
in
mov
jnp
fidivl
lahf
std
pop
mov
push
cmp
outsb
rolb
push
cmpsl
shll
cmp
subb
xchg
xor
jp
jmp
mov
scas
ljmp
clc
mov
sub
mov
sahf
or
adc
push
lret
cmovnp
cmp
sub
and
out
int3
sub
movsl
or
addb
sbb
mov
out
pop
and
outsl
fisubs
cmp
pop
orb
mov
loopne
mov
sbb
pop
and
scas
in
cld
add
jns
push
iret
mov
add
inc
lret
fwait
push
jl
pop
in
and
add
rdtsc
sub
mov
or
dec
sub
sbb
pusha
popf
inc
cmp
lods
jp
pop
add
cmpsl
mov
ja
mov
xchg
pop
lcall
and
stos
shll
ds
jno
cmp
sbb
in
mov
inc
arpl
addr16
adc
sub
lock
adc
sub
movsb
inc
dec
add
mov
and
nop
fsubrs
pushf
push
lods
scas
or
loop
dec
mov
pop
lea
addr16
jmp
push
xorl
ret
and
cmp
jbe
cmovns
pop
cld
cmpsb
fsubs
push
cmpsl
push
and
pop
sbb
jmp
lods
add
push
jae
fidivs
addl
mov
mov
in
ret
pusha
pop
cs
mov
sub
xchg
ljmp
or
jp
xor
add
push
sub
or
imul
xchg
xor
aas
xchg
sub
das
insb
mov
lahf
inc
sub
pop
sub
stos
pusha
mov
movsb
xchg
cmp
fcmovnb
mov
xchg
push
push
dec
adc
mov
dec
dec
cli
gs
pop
rcr
xchg
repz
daa
push
xor
mov
xchg
fcomps
mov
mov
fldt
in
clc
dec
push
and
fdiv
je
jl
pop
popf
pop
adc
sbb
and
fs
loope
sbb
mov
push
jge
sub
data16
xor
loopne
arpl
aas
sub
cmp
dec
ds
sub
fisttpll
test
call
xchg
out
and
push
adc
cltd
dec
jle,pt
xchg
sub
iret
in
jae
das
sub
in
scas
sbb
pushf
cld
dec
push
insb
mov
test
inc
adc
add
pop
ret
or
ljmp
mov
inc
sahf
fiaddl
das
add
out
sar
bnd
inc
nop
inc
adc
call
loop
mov
daa
jae
leave
xchg
inc
sbb
imull
dec
jp
cmp
test
dec
sti
popf
jp
scas
addr16
fwait
mov
sbb
aam
mov
lds
mov
test
out
fmulp
out
jnp
sub
pop
sub
jae
xchg
or
cmc
shrl
pop
pop
xchg
outsl
and
aaa
xlat
jbe
sbb
enter
das
lds
cmovnp
imul
jbe
inc
inc
out
iret
push
in
xchg
jecxz
pop
hlt
inc
aam
xchg
and
shll
adc
inc
sub
arpl
out
mov
push
ror
pop
jecxz
or
loope
xchg
xor
xchg
fcmovne
fstps
xchg
xchg
movl
cmpsl
pop
pop
imull
inc
shl
jp
cmovp
lret
shr
iret
sub
addb
xlat
xchg
lock
sbb
lret
xor
inc
movsl
mov
data16
mov
and
ljmp
fs
jae
enter
ret
out
mov
sbb
jns
mov
and
dec
mov
lret
xorl
add
loopne
jb
out
cmpsl
shrl
mov
cmpsb
in
jno
cmp
add
daa
pop
fsubl
cmp
orl
add
arpl
mov
push
xchg
mov
jle
ds
lret
mov
sbb
mov
inc
adc
and
adc
mov
mov
int3
add
mov
std
pop
or
dec
xor
xchg
xchg
xchg
ja
insl
test
xchg
xchg
in
sbbb
outsl
cs
cmpsl
mov
into
nop
or
pop
xchg
in
cwtl
sub
add
cmpsl
xlat
mov
or
mov
fdivrl
and
in
dec
test
xor
mov
mov
rorb
mov
in
jle
scas
outsl
push
dec
or
mov
insl
xlat
adc
out
or
movsb
iret
jne
out
hlt
cs
sub
imul
sub
inc
imul
rcrb
xor
popf
lahf
mov
xchg
lcall
movsb
jnp
stos
outsl
shlb
rcrl
loope
push
cltd
cmp
sbb
aas
xchg
and
in
repnz
aas
adc
in
ja
fwait
mov
mov
lret
sub
lds
mov
movsl
pop
push
cmp
cmp
adc
xor
pop
out
jbe
xchg
js
pop
test
xor
enter
or
lret
test
inc
and
push
hlt
scas
fcmovu
stos
pusha
sbb
sub
fidivrl
xchg
mov
add
loope
ds
push
int
movsl
pop
fists
mov
mov
fxch
popa
cmpsb
gs
pop
mov
xor
hlt
sarl
jle
push
mov
mov
ja
push
fnstcw
dec
cmpsl
nop
jle
nop
add
mov
mov
and
scas
fwait
aaa
cld
xlat
incl
fisttps
repnz
loop
imul
inc
mov
or
add
imul
dec
cmpsb
dec
mov
out
add
mov
push
out
or
push
and
loop
movsl
adc
or
dec
mov
sbb
ljmp
adc
loope
out
fisubs
mov
imulb
inc
mov
daa
adc
sbb
xchg
mov
jle
lods
mov
sub
sbb
adc
pop
sub
sti
sbb
mov
jb
sbb
jle
push
cmp
int3
push
mov
adc
jae
xchg
mov
xchg
mov
inc
pop
adc
sbb
dec
lahf
lret
lret
cmp
or
sub
enter
pop
pmaddwd
aam
rcrl
add
or
clc
je
push
jno
nop
loop
js
push
fistpll
mov
fwait
push
mov
sub
mov
rcr
xchg
mov
mov
rcrl
data16
fwait
pusha
fildll
aam
xchg
sub
mov
and
pop
lcall
cmpsb
mov
sti
ljmp
lock
dec
push
push
push
xchg
sahf
or
mov
add
fdivs
adc
addr16
mov
inc
mov
test
out
scas
cwtl
push
sub
or
jnp
sti
into
aam
pop
push
and
xlat
test
dec
popf
pop
xchg
push
scas
loope
and
sbb
mov
xchg
lahf
or
adc
lds
or
push
inc
sub
and
andnps
xchg
jecxz
mov
aaa
ficomps
in
lock
pop
jbe
cmp
mov
push
data16
xor
scas
std
mov
addb
dec
or
add
cmp
in
jecxz
dec
adc
fs
roll
mov
sbb
jne
dec
std
xor
subb
leave
xor
int3
out
fs
stc
cwtl
jne
outsb
or
enter
mov
popa
out
mov
in
bswap
add
shll
pop
push
rcr
xor
xor
fwait
scas
adc
adc
mov
test
icebp
push
xor
push
fstpl
hlt
xor
notl
fmuls
rclb
mov
push
or
adc
or
and
das
icebp
xor
iret
jne
bound
push
fildll
or
ret
test
push
arpl
dec
dec
pop
mov
inc
jnp
push
addl
xchg
pop
xor
push
and
repz
bound
or
loopne
xchg
jo
mov
and
fildl
scas
test
inc
or
pop
int
pop
and
loop
jno
outsb
inc
fs
popf
pop
ja
imul
mov
and
js
or
andb
loope
loop
out
xchg
jle
jnp
adc
sbbl
push
push
mov
fldenv
adc
xchg
mov
testl
shlb
pop
jb
jl
dec
jno
cli
inc
loopne
out
icebp
inc
cmp
mov
hlt
jno
push
jp
push
mov
sbb
ljmp
mov
push
movsb
leave
sub
xchg
inc
mov
mov
mov
add
bound
jns
repnz
dec
xor
hlt
fdivrp
cld
push
jo
cld
pusha
sti
inc
ljmp
push
jge
int3
and
lods
adc
mov
lahf
mov
xor
nop
popa
outsb
scas
movsb
cmp
sbb
push
fiaddl
xchg
divb
iret
dec
add
mov
mov
fdivrl
ret
fwait
xchg
jnp
sub
sub
cmp
cmp
and
jl
xor
push
sub
add
mov
add
push
or
sbb
push
cmovg
jbe
sbb
scas
mov
xor
sub
xchg
sub
jns
cltd
pushf
lock
cmpsl
movswl
lahf
enter
push
loope
lahf
in
sahf
test
lret
rorl
pop
lods
or
sub
cmp
int3
inc
pop
out
in
mov
and
aas
icebp
ss
in
popf
int3
sbbb
fld
mov
pop
pop
bound
test
xchg
inc
sbb
shl
mov
dec
push
orb
jmp
test
pop
pop
pushf
scas
xor
mov
cmc
fcoms
scas
shrl
bound
or
ds
leave
icebp
test
xchg
movsb
cmp
sti
cli
pop
aad
in
mov
push
outsb
repz
ljmp
inc
push
mov
mov
adc
pushf
xor
fstpl
mov
jae
je
pop
inc
test
mov
lahf
xchg
push
aaa
adc
xor
mov
imul
mov
inc
adc
pop
add
add
xchg
mov
sub
popf
daa
icebp
pop
adc
lds
out
test
fldl
sub
jns
enter
inc
cmp
addb
mov
and
test
inc
mov
cmpsl
mov
mov
xor
ret
jno
cwtl
pop
cmp
ret
jmp
pushf
sub
jle
dec
int
pop
jbe
add
roll
mov
sbbb
pop
test
jbe
add
pop
mov
orl
sub
testb
sub
repz
cwtl
out
aaa
xchg
jno
jmp
rcll
xor
dec
sbb
mov
dec
xor
leave
daa
lods
loope
fnstcw
push
pop
inc
aam
popa
and
cli
mov
or
dec
xchg
lret
decl
enter
lret
and
or
jbe
inc
mov
clc
sub
mov
je
mov
xchg
xchg
mov
pop
jae
add
insb
inc
lcall
out
sbb
jb
or
xor
jmp
pop
orl
in
mov
outsb
and
cli
sbb
or
ret
add
adc
push
lods
inc
std
in
jo
shlb
scas
pop
test
das
jmp
insb
mov
shlb
xchg
xor
std
dec
or
cmp
mov
popa
mov
xchg
icebp
test
mov
in
int
out
ljmp
les
mov
xor
cmp
test
cmpsl
dec
or
adc
cmp
repnz
mov
mov
mov
dec
ja
xchg
xor
cmp
jmp
push
mov
sub
imul
popf
hlt
out
mov
xchg
jmp
xchg
mov
push
cli
xchg
mov
add
stc
sbb
cmc
roll
ds
iret
dec
cwtl
outsl
int
push
scas
pop
ja
imul
imul
sbb
cwtl
out
xlat
pop
add
das
ss
aaa
and
push
hlt
sysret
iret
cmp
stos
mov
mov
or
mov
xlat
cli
fdivp
push
jno
sub
int3
cmp
scas
mov
mov
cbtw
outsl
adc
lock
imul
push
lock
orl
lods
into
xchg
mov
mov
aaa
mov
orb
outsb
mov
lahf
xchg
pop
movsb
mov
lods
push
mov
jmp
push
shl
out
loop
test
sub
lret
push
pop
in
ficoms
sbb
hlt
adcl
scas
adc
fmull
push
outsl
daa
mov
mov
or
push
and
inc
or
push
call
xlat
pand
adc
mov
add
int3
sub
sub
jbe
out
push
icebp
sub
sar
adc
sahf
aam
jg
repz
push
icebp
shll
lods
nop
sub
int3
ret
xorl
cmp
jnp
fsts
pop
call
mov
pop
leave
clc
mov
fstps
mov
das
in
xor
jle
or
and
sub
mov
movsl
stos
mov
sbb
in
dec
fimuls
sbb
sub
push
and
dec
pop
cld
push
out
fildll
test
jno
add
in
js
mov
es
sub
lock
arpl
das
cmp
mov
dec
int
aas
lea
push
jno
adc
xchg
xor
push
ficompl
and
mov
add
mov
stos
rorl
add
sbb
fisubl
jl
test
mov
lret
mov
mov
pop
push
aad
ret
cld
push
test
adc
adc
add
sbb
inc
cwtl
push
or
dec
xor
sub
fidivrs
push
lret
add
cmpsb
jge
lock
jmp
rcrl
xor
add
jnp
sti
push
fcoml
pop
mov
sbb
push
jl
jmp
lcall
add
sbb
adc
xlat
std
stos
fwait
jge
dec
push
gs
inc
sbb
loop
aam
movb
dec
xchg
or
popf
lret
mov
insb
fwait
pop
shlb
and
mov
or
mov
sub
aas
jnp
mov
lret
or
jb
rcr
outsb
xor
fs
ja
adc
sarb
ss
es
not
stos
xchg
stc
xor
daa
iret
inc
fldl
andb
mov
dec
iret
xor
dec
jp
shl
dec
push
js
test
lds
sbb
jg
ljmp
fwait
sbb
sbb
add
sbb
out
scas
pusha
clc
loope
mov
dec
out
mov
cmpb
out
jmp
add
sbb
and
sti
fmull
fbstp
aad
orl
stc
sbbl
add
loopne
call
enter
ficomps
adc
cmpl
jp
rorb
or
sbb
mov
mov
dec
cltd
xor
shl
mov
jg
loop
pop
fwait
setbe
cmpsb
movsb
inc
push
nop
fbld
out
int3
sbb
pop
xor
sub
aaa
inc
xor
ficomps
movsl
xor
and
cmp
sbb
fnstcw
xlat
fstps
pop
mov
cmpl
inc
xor
iret
mov
add
das
out
jne
fisttps
cmpsb
aad
sbb
mov
lcall
adc
aam
jo
mov
cmp
bound
inc
push
or
outsb
pop
or
and
and
mov
loop
sub
rolb
mov
mov
xor
out
push
jecxz
es
cs
sbb
adc
loope
sub
xor
mov
shll
div
sar
push
das
add
sub
mov
repnz
jge
sarb
xor
pop
mov
movsb
lods
mov
add
aad
jbe
pop
jge
nop
and
xor
test
ds
mov
jnp
inc
xchg
mov
push
and
jae
inc
xchg
adc
popf
lea
cmp
pop
mov
sub
in
or
jb
or
or
xchg
xor
mov
adc
mov
daa
push
inc
jle
inc
fbld
cld
or
fisttpl
lods
pusha
pop
mov
insb
scas
mov
lea
ret
mov
lcall
jl
in
xor
imul
dec
loope
subl
incl
fdivp
popf
add
xor
add
fdivrl
cmp
adc
sub
fcmovbe
mov
mov
sbb
inc
fists
jge
lods
test
clc
jle
daa
into
fildll
jge
cmpl
lea
dec
mov
and
push
mov
iret
es
mov
test
dec
inc
movsb
lcall
or
mov
sub
mov
cmp
or
mov
jp
rorb
in
xlat
daa
pusha
stos
shl
out
mov
iret
dec
xchg
pop
fildll
out
stos
xlat
cmpsb
fwait
adc
loope
lock
repz
jge
mov
sbb
out
inc
dec
cmp
scas
jne
push
pop
int3
xchg
add
mov
les
pop
cmp
in
or
xlat
jbe
pusha
gs
jb
jbe
push
js
lods
or
dec
ret
fidivrs
subb
xchg
inc
or
les
xchg
inc
or
xchg
ret
jl
enter
imul
clc
rorb
xacquire
sub
mov
mov
mov
pop
mov
cmp
sub
filds
loope
fnstenv
xacquire
jge
adc
movsb
aaa
into
cmovle
popf
inc
and
cld
popa
in
in
stos
mov
clc
sbb
or
movsb
fwait
dec
std
and
mov
lods
mov
shrl
xchg
iret
adc
stc
jecxz
cmp
mull
jp
xchg
inc
adcl
rcl
data16
pop
jb
scas
mov
adc
inc
jns
or
bound
jo
hlt
ss
out
dec
lret
sahf
and
das
loopne
mov
inc
push
enter
movsl
xchg
jae
mov
xchg
push
lcall
test
repnz
popa
ret
sub
js
scas
pop
rorl
cmp
mov
stos
mov
mov
xchg
fucomip
and
cli
mov
dec
mov
add
ljmp
jg
js
xor
cmp
scas
fisubs
add
push
cs
fcomi
testl
push
inc
mov
mov
lods
inc
xor
mov
jae
xchg
cmpsl
popf
aam
fsub
fs
enter
lea
lock
jp
ret
ljmp
xlat
adc
aaa
cmpsl
adc
mov
sbb
mov
shll
cmp
jge
pop
test
and
pushf
jns
cs
shll
cmp
cmp
stc
xchg
imul
lcall
fldt
pop
scas
in
xchg
cmpl
cmc
cmc
xlat
cmpsb
push
inc
in
lock
xor
dec
insb
das
mov
movsb
adc
pop
inc
fsubrp
jno
sbb
xor
jae
icebp
push
loopne
cli
pop
std
idivl
repz
adc
xchg
pop
mov
xchg
out
nop
insb
cmpsb
fildll
lcall
test
scas
pop
nop
jge
xchg
fdivr
pop
sbb
les
push
push
lock
cmp
pop
xchg
add
mov
and
sbb
loope
cwtl
clc
pop
and
sbb
add
imul
sub
jl
inc
bound
push
mov
cmp
and
sub
push
inc
insb
pop
mov
popf
jno
ficomps
jle
pusha
into
xor
mov
mov
mov
mov
std
lret
scas
xor
cmp
mov
lahf
xchg
enter
xchg
xor
mov
push
jnp
sub
dec
filds
fwait
mov
iret
dec
stc
dec
adc
rcl
cld
jmp
enter
inc
pushf
testl
lods
fidivl
add
fsubs
popa
xchg
test
adc
fstl
fdivr
fdiv
cli
test
test
jecxz
add
push
leave
aaa
fdivs
push
ds
test
in
mov
jmp
add
sti
leave
popa
shlb
jno
dec
cli
sarl
xor
bound
jge
pop
lret
push
and
faddl
xchg
xchg
add
inc
dec
pop
push
lcall
rcrl
mov
inc
cmp
in
call
push
cmova
adc
ficoml
dec
dec
cli
xor
pop
out
inc
jbe
popf
mov
jmp
jbe
xchg
stos
popf
mov
pop
and
pop
or
mov
add
rorl
mov
xor
rolb
std
pop
sbb
rolb
pop
add
data16
cltd
or
and
push
ss
mov
sub
in
cltd
lods
dec
xor
in
pop
mov
in
out
cld
outsl
xlat
lods
mov
add
or
mov
xchg
mov
push
popf
mov
xchg
popf
idivw
xchg
pusha
lock
daa
mov
xor
mov
sbb
xchg
in
es
ret
in
push
loope
jp
mov
in
xchg
shrl
jl
push
sub
lahf
xor
dec
shrb
shlb
ret
push
dec
pop
pop
push
xchg
jg
loope
mov
addb
add
cmp
pop
push
cmpsb
xor
cwtl
fwait
mov
out
in
push
pop
push
sub
lret
push
shlb
les
cmpsl
mov
jne
mov
mov
shr
lcall
rorl
out
inc
out
xor
in
fwait
jbe
xor
inc
xchg
dec
xor
mov
mov
cld
push
lcall
insb
mov
inc
adc
cmpsb
scas
xchg
xchg
fwait
and
xor
int
sub
test
rcll
ret
adc
mov
jbe
lods
inc
cmpsb
cmpsl
pcmpeqd
stc
push
mov
lret
fistpll
hlt
inc
gs
scas
dec
lock
xchg
out
inc
lea
cwtl
inc
and
xor
xchg
push
ret
movsl
xchg
add
enter
sbb
pop
jns
fs
call
sbb
and
mov
test
jg
push
pop
imul
xor
sub
xchg
mov
std
xlat
in
dec
mov
scas
clc
xlat
insl
cmp
mov
xor
inc
ja
daa
mov
sbb
adc
int3
cmp
mov
xorb
push
xchg
xorb
mov
fwait
push
xor
icebp
or
movsb
aad
out
sbb
sti
adc
stos
dec
mov
addl
subb
int3
lret
in
push
in
repz
pop
lods
fdivr
rcll
adc
pusha
shll
in
call
jge
out
mov
cli
or
std
inc
jg
daa
jne
test
andl
aam
es
inc
inc
jbe
enter
je
cmp
lret
mov
mov
movsb
jo
data16
adc
notb
call
add
lds
int3
mov
out
test
popa
xor
dec
pop
jnp
fmuls
add
cld
mov
in
imul
pop
adc
push
pusha
fwait
jl
sub
sub
subl
add
outsl
xchg
test
fwait
sub
imulb
push
or
out
sahf
pop
ja
cmp
mov
fbstp
test
cmp
dec
xor
dec
notl
pop
movsl
and
outsl
not
dec
js
mov
repz
xor
push
lock
dec
or
cmp
dec
out
icebp
mov
add
push
daa
dec
sbb
repz
in
pop
mov
and
stc
mov
dec
sbb
filds
shl
sti
push
mov
ljmp
inc
and
xor
icebp
push
push
ja
lcall
aam
neg
add
push
fdiv
xchg
push
add
cmp
cmp
add
cmp
add
or
lods
pop
and
into
xorl
push
pop
mov
js
out
mov
inc
cmp
clc
mov
add
bound
les
std
mov
addr16
mov
cli
inc
pop
adc
push
hlt
out
xchg
lahf
pop
xor
sti
out
ss
test
jecxz
loope
adc
ds
sub
stos
pop
ja
mov
mov
lods
jnp
mov
out
stos
mov
sbb
cmc
lock
stos
cmpsb
dec
cmp
clts
inc
sbb
popl
jp
sbb
js
dec
cmp
aas
in
inc
rcrb
shr
cltd
popf
cmpb
out
shll
push
dec
pop
mov
cmp
mov
into
aaa
cmp
dec
jge
or
mov
xchg
mov
fs
test
arpl
push
mov
cmp
aad
loopne
mov
mov
aas
test
test
test
jnp
mov
inc
cmpb
jne
std
xorl
arpl
mov
cmp
mov
fimull
shll
ljmp
sti
pop
movsb
xchg
lret
push
mov
cmp
mov
ret
inc
cwtl
ljmp
sarl
jno
repz
ret
push
jae
cld
jns
pop
dec
push
lods
cmp
lods
cmp
jp
push
pop
popa
pop
hlt
repnz
pop
imull
xchg
sbb
cltd
and
pusha
aas
test
xlat
add
pop
xor
test
pushf
rolb
repnz
and
xor
aas
lock
sbb
inc
sbb
dec
inc
test
xchg
lret
lret
jne
push
nop
ds
sub
out
adc
lods
push
push
xchg
adc
mov
in
lret
mov
mov
movsl
dec
dec
fstps
adc
daa
mov
jb
repz
jb
adc
cld
mov
lods
das
pop
lds
mov
out
inc
or
cli
push
lret
daa
je
pop
xchg
sbb
add
xchg
cmp
dec
pushf
rorb
pop
pop
mov
pop
mov
and
lea
enter
out
dec
ret
cmp
add
mov
idivl
nop
mov
jae
ret
jne
xchg
pop
mov
cmpsb
cmpl
xor
add
jmp
dec
xor
mov
push
mov
sti
or
dec
jb
int3
shll
pushf
pop
cmp
jge
aaa
xchg
xchg
cmp
lahf
or
call
sbb
jns
xchg
xchg
rcr
ds
inc
push
imul
out
in
and
cs
pop
out
leave
add
and
cli
sub
and
cli
pop
inc
dec
jmp
outsb
popf
shrl
mov
insl
pushf
lcall
mov
mov
mov
mov
mov
stos
into
push
and
sahf
adc
in
pop
icebp
adcb
pop
xor
fisubrs
out
xlat
adc
add
sahf
shrl
mov
sub
and
jmp
pop
mov
inc
mov
rorb
cld
sub
lcallw
sbb
pop
jnp
scas
lods
js
addl
orl
insb
cld
std
jmp
fwait
pop
mov
dec
jb
into
je
in
mov
inc
xchg
xchg
sbb
mov
mov
sti
test
jbe
das
fs
shll
aam
jecxz
sub
sub
add
jg
test
idivb
cs
jmp
mov
dec
sub
mov
adc
push
sbb
out
repz
push
ljmp
cmp
sbb
clc
out
in
jl
neg
filds
push
cmc
jnp
int3
pop
pop
shlb
popf
push
fnsave
mov
jl
lcall
mov
jbe
cltd
lods
xchg
fadds
push
and
cld
mov
mov
cmpsl
ja
xorb
and
mov
sub
mov
repnz
fucom
or
insl
inc
cli
fistpl
push
or
adc
insl
mov
jge
jbe
outsl
aaa
rorb
jb
or
adc
das
adc
cmp
sub
jmp
jns
js
sub
xchg
les
mov
fdivr
repnz
lods
xchg
add
xchg
cmpsb
xor
jo
mov
popa
sbb
out
mov
xor
sbb
movl
mov
inc
divb
mov
xor
clc
xchg
xchg
arpl
in
and
ret
fs
out
jae
xor
je
bound
pop
ljmp
mov
sti
mov
jp
sbb
inc
push
xorl
mov
sbb
mov
mov
xchg
mov
ror
shll
cmp
mov
mov
rcrl
iret
mov
cltd
popl
sub
ret
aas
dec
movsb
inc
shlb
dec
cmp
cld
adc
repnz
in
mov
xchg
popf
xor
dec
sbb
push
push
daa
in
mov
cltd
mov
inc
mov
jl
sbb
stos
cmp
shrb
add
push
movsl
push
or
scas
fxch
leave
int3
sbb
mov
add
mov
iret
pop
jg
lock
jge
cld
push
lcall
pop
fistpl
adc
jp
test
or
enter
mov
out
xor
pop
mul
aaa
sub
jmp
mov
frstor
in
sbb
add
jns
mov
pop
dec
dec
or
cli
sbbl
movsb
je
aam
test
cmp
mov
xor
dec
push
dec
adc
pop
or
test
les
imul
xchg
movsl
inc
dec
sbb
jmp
cmp
pop
and
popl
lret
mov
add
pop
lea
push
ljmp
into
xchg
outsl
add
out
jmp
mov
outsb
push
xchg
adc
test
popf
cmpl
sbb
cld
xchg
sub
xchg
jg
dec
addr16
mov
js
mov
jns
dec
fnstenv
cmp
int3
outsb
mov
mov
mov
fistl
loop
push
pop
mov
cmp
inc
cmp
add
inc
mov
mov
mov
push
in
pop
jns
mov
cmc
negb
das
jp
inc
leave
fs
loop
inc
repnz
imul
xchg
mov
pop
out
adc
out
xchg
cmc
mov
xor
cli
inc
add
aam
pushf
cmp
test
sbb
movb
movsb
rorb
jl
pop
jge
mov
push
test
xor
out
pop
mov
push
outsb
push
movsl
xchg
adc
in
dec
xor
xor
jle
call
mov
jle
jb
sar
sti
jg
inc
pop
aaa
int
mov
aas
js
cmpsb
lret
cmp
push
sub
inc
js
gs
cwtl
adc
cmpsb
insb
pop
xchg
popa
sbb
mov
out
aaa
out
loop
aad
jl
cmp
inc
push
dec
xchg
and
imul
fsubrs
cmp
sahf
mov
sub
in
adc
stos
int3
icebp
iret
xchg
mov
pop
add
jecxz
xor
enter
add
xchg
test
jo
mov
imul
frstor
push
in
sub
out
mov
pop
cmc
fwait
xchg
or
dec
add
and
into
or
loopne
cmp
mov
sub
sub
cs
aad
xor
jecxz
sbb
hlt
inc
and
xor
daa
dec
sub
jno
xchg
cmc
push
rcrb
out
leave
ja
mov
nop
cli
mov
xor
iret
pop
dec
mov
aaa
aad
je
or
rclb
dec
ja
test
add
aad
repz
xchg
mov
mov
sbbl
pop
pop
jp
les
loop
dec
mov
mov
jmp
test
xor
mov
nop
pop
outsl
jnp
cld
and
push
lea
add
sahf
bound
lock
ljmp
mov
cli
or
imul
adc
mov
and
int
xchg
xchg
pop
add
test
imul
fsubrl
mov
les
test
lock
dec
jmp
mov
movl
icebp
into
fxch
xchg
sub
mov
mov
int3
out
fmull
dec
aaa
into
rcrl
loop
lret
mov
adc
loop
push
mov
int
fcomi
add
add
dec
sub
lahf
add
sbb
out
int
pop
sub
std
pushf
cmp
es
push
and
adc
loope
out
jle
lret
xor
mov
push
ss
add
test
cmpsl
shrb
xchg
mov
push
pop
stc
movsb
ret
pop
iret
and
mov
lods
lds
xor
xchg
push
mov
push
inc
es
inc
inc
js
fucomi
mov
jg
xor
xchg
inc
push
jmp
andb
mov
cmpl
dec
mov
add
mov
testl
stos
add
rorl
mov
cmp
mov
rolb
xchg
std
or
xor
pop
mov
test
pop
pop
jmp
mov
lcall
add
cmp
call
jb
fcomp
dec
adc
mov
or
cmp
adc
int3
sahf
cwtl
test
mov
je
hlt
lea
cwtl
mov
into
das
push
dec
jne
fcomps
leave
into
addl
mov
pop
xchg
lds
push
pop
xlat
lods
adc
jecxz
sarl
in
out
mov
push
push
mov
int
mov
inc
add
pop
inc
and
enter
daa
jp
dec
popa
mov
lcall
dec
lret
loopne
pop
insb
test
cli
add
pop
mov
dec
mov
out
pop
jae
dec
mov
ljmp
movsl
dec
add
mov
repz
loope
push
loope
sbb
xchg
in
sub
scas
xchg
shrl
lea
sbb
push
cltd
cmpsl
mov
out
dec
cs
jle
idivl
cltd
lock
lods
and
faddl
popa
adc
inc
ljmp
pushf
movsl
or
into
sbb
int
push
je
test
pop
jmp
mov
xor
popf
mov
aad
mov
jle
test
in
mov
iret
pop
lret
mov
sbb
sarb
xchg
es
push
cmp
scas
push
dec
aad
outsb
pusha
out
xor
ja
cmpsb
adc
xchg
jnp
jae
pushf
call
fdivs
adc
mov
xor
push
xchg
jle
cmp
rorb
xor
test
nop
inc
jno
or
les
loopne
out
insb
cmp
add
mov
push
pop
jnp
mov
inc
pushf
fwait
add
mov
cmp
daa
mov
and
adc
or
stos
mov
adc
mov
divl
mulb
inc
xorl
push
xchg
test
sub
test
out
mov
test
cmc
and
repz
insl
push
rorl
cmpsb
pop
scas
nop
and
jg
loop
sub
lret
ljmp
and
xchg
loop
js
xchg
ret
aad
push
aas
cli
sbb
shll
stos
add
lcall
daa
cwtl
sbb
js
fisttpll
test
mov
adc
mov
mov
add
push
dec
out
sbb
pop
mov
mov
pusha
sub
inc
mov
icebp
out
and
dec
push
push
cmpsl
movsb
out
jae
add
daa
hlt
or
mov
icebp
cltd
sub
jle
adc
stos
imul
add
pusha
daa
cmp
ja
inc
jno
dec
adc
lret
sahf
adc
test
jmp
adc
xchg
pop
dec
aas
pop
pop
push
mov
fnstenv
jge
mov
jmp
loopne
scas
cmp
sbb
stos
push
mov
or
dec
ret
jl
pop
mov
mov
dec
aam
jle
inc
adc
ret
lds
aaa
jae
pop
dec
enter
xchg
sub
std
fsubrs
xlat
pop
in
push
fwait
jp
fmulp
xor
pop
xchg
int3
fdivrp
shrb
gs
scas
dec
pop
outsb
imul
xchg
jg
dec
xor
or
in
out
add
jg
jno
dec
ret
adc
fbld
or
orl
movsl
push
loope
cltd
inc
adc
in
or
inc
sti
enter
push
cwtl
pop
mov
mov
outsb
cmp
ljmp
jmp
cmpsl
push
mov
mov
bound
dec
imul
jmp
imul
pop
lods
cmpsb
cmp
mov
outsb
mov
mov
jb
cwtl
sub
mov
cmp
push
inc
aas
or
cwtl
push
leave
or
dec
pop
dec
mov
das
adc
jb
repz
cmp
add
cmp
pop
fbld
jnp
xor
jge
sti
adc
xor
bound
in
mov
cmp
inc
and
insl
ds
mov
jmp
leave
cmp
enter
dec
mov
add
cmp
pop
adc
xor
in
adc
scas
push
pop
addb
jno
stos
and
fmuls
divl
call
adc
fisubl
aas
sub
fimull
push
addr16
mov
test
sbb
pop
ret
fldt
mov
arpl
sub
pop
or
xor
push
fisttpl
mov
and
ss
cld
xorb
xchg
sub
inc
int
xlat
fcom
cmpsl
xchg
lds
or
mov
jae
iret
call
test
insl
jns
mov
fdivrl
jge
test
mov
sbb
pushf
xchg
mov
add
push
jle
iret
mov
insl
cmc
pop
pushf
cmp
sti
fcomps
imul
clc
movsl
js
cmc
nop
lods
push
test
out
test
jle
pop
pusha
das
pop
rclb
mov
loop
push
and
inc
lods
jo
mov
je
ja
aam
sbb
jmp
jmp
cmp
mov
jnp
jae
jb
or
push
fcmovbe
jmp
pop
sub
pushf
pushf
lea
mov
push
aam
add
mov
jb
mov
adc
pop
cmp
roll
fdivr
pop
pop
sti
dec
pop
dec
mov
adc
mov
cltd
mov
fcmovnu
js
out
mov
push
mov
inc
lock
les
cmpsl
shl
pop
repnz
jbe
and
pop
push
movsl
sub
adc
test
mov
in
push
fidivs
and
mov
lods
pop
add
cmp
mov
xchg
dec
dec
xchg
inc
mov
int3
jae
jmp
xchg
sarl
inc
rorl
jnp
gs
inc
fdivrl
daa
dec
pop
imul
roll
jae
jbe
clc
inc
dec
daa
movsl
insb
lods
daa
dec
add
lods
daa
int3
addl
rol
push
push
lea
enter
rol
xor
jecxz
out
mov
in
aam
cltd
dec
sbb
outsl
add
inc
lcall
jnp
popf
pop
or
cmpsl
or
clc
lahf
push
sub
clc
aaa
and
divb
shll
mov
stos
leave
cmp
fdivl
xorl
mov
xchg
add
int
sahf
cwtl
ja
test
cli
push
mov
or
test
outsl
mov
jle
fists
or
cli
mov
push
push
jecxz
push
pop
nop
ljmp
lret
mov
add
repnz
xchg
stc
lock
sub
aaa
sub
push
inc
in
pop
lcall
sti
sub
pop
loop
mov
xchg
popf
ljmp
jb
aas
or
mov
cmp
cmp
sbb
jo
dec
mov
jl
data16
bound
cli
out
pop
shlb
scas
test
mov
sahf
inc
insb
and
jnp
push
idiv
jbe
pushf
out
lret
leave
daa
in
adc
pop
movsb
cmc
xor
cmp
std
ret
out
jg
loop
pop
jge
nop
idivl
add
dec
out
adc
aaa
jmp
mov
mov
insl
adc
aaa
cwtl
xor
lss
lcall
fisttps
mov
and
mov
pop
sub
xor
push
scas
cmc
repnz
mov
out
adc
add
stc
pushf
cwtl
adc
lahf
pop
arpl
add
cmp
les
push
jge
jnp
jge
or
call
xlat
notb
jnp
cwtl
cli
or
dec
xor
je
das
pop
inc
jae
lock
pushw
jecxz
loopne
orl
rcr
pop
enter
lock
dec
push
ss
inc
push
cmp
rcrl
dec
push
sbb
jp
outsl
jo
mov
daa
insl
out
mov
mov
pop
and
roll
jmp
pushf
jl
in
stos
mov
test
jns
mov
int
inc
xchg
fisubs
and
dec
mov
push
mov
out
fistpll
mov
sub
adc
loope
adcb
dec
dec
ret
sub
push
sbb
test
orl
add
mov
add
aas
sbb
adc
ret
sub
adc
mov
xor
sub
das
mov
int
lret
fadds
jns
fwait
imul
sti
xchg
mov
enter
jae
das
movsl
xor
out
cli
xor
jb
cmp
and
test
subl
cmp
push
lods
mov
xchg
ds
std
mov
push
hlt
sub
rcll
rcrl
inc
cmp
push
sbb
cmp
lcall
test
mov
cmpsl
sbb
arpl
inc
cmp
adc
adc
roll
popf
pop
pop
stos
je
and
push
mov
leave
gs
lret
add
js
jb
mov
add
dec
xor
xor
add
and
aas
cmpsl
mov
fcoms
pop
adc
stos
mov
loopne
mov
test
mov
pushf
dec
mov
mov
jae
mov
jecxz
mov
push
test
or
dec
pop
imul
shrb
jbe
mov
push
add
mov
cmpsb
hlt
sub
das
or
test
cmpsl
insl
andl
data16
dec
mov
mov
mov
push
xor
inc
loop
mov
inc
pop
jne
sbb
jle
xchg
or
loop
fs
cs
cmp
lret
test
repnz
mov
fs
mov
jl
arpl
imul
jg
lods
push
and
jle
js
adcl
out
sbb
test
mov
dec
addr16
repnz
dec
ret
sub
sbb
repnz
sbb
xchg
sub
mov
shl
loope
cmp
addl
imul
movsb
mov
cmp
dec
sarl
popf
cmp
sbb
mov
sbb
inc
aaa
or
js
sub
test
ds
or
jno
xchg
movsb
sbb
insl
pop
loopne
push
nop
shlb
adc
push
xchg
cmp
ret
test
fwait
jnp
cmp
pop
xchg
and
sbb
dec
stc
aad
cmp
fxch
mov
jp
dec
cmc
cmc
xchg
mov
dec
sub
js
push
mov
enter
fsubs
adc
out
dec
in
mov
orl
icebp
jae
imul
ficomps
out
sub
fidivrl
or
sbb
mov
cli
jp
out
push
fisttpll
mov
mov
in
pop
push
or
les
sti
lret
ret
or
cmp
add
adcb
push
stos
cs
jmp
mov
adc
or
pop
mov
out
rorl
in
pop
and
push
aad
adc
xlat
push
arpl
rolb
jmp
xchg
popa
cmp
pop
jmp
sbb
lret
jo
cmpsl
push
adc
sarl
imul
lods
pop
popa
lods
add
mov
or
adc
enter
mov
leave
inc
sahf
cmp
pop
jmp
mov
out
mov
mov
scas
mov
popa
mov
adc
pop
lods
clc
mov
dec
movsl
out
jae
fnstenv
cs
inc
shl
jp
mov
sbb
xchg
and
push
loopne
gs
add
mov
inc
xchg
inc
and
and
subb
jns
sbbl
push
imull
ja
gs
cmp
nop
jb
neg
xchg
dec
lods
cmpb
push
mov
pop
inc
jle
mov
dec
push
pusha
test
jbe
mov
inc
dec
add
adc
adc
pop
lods
shlb
push
cs
ja
fstp
loopne
in
cmp
mov
inc
icebp
add
dec
call
xchg
mov
jl
shr
xchg
push
xchg
cmp
jg
push
sbb
jne
imul
push
shrb
inc
fiaddl
mov
or
dec
ds
aas
lret
jb
and
xor
enter
mov
add
cmp
dec
cmp
fs
xor
fxch
int3
leave
push
aas
in
dec
loop
outsl
aad
push
jns
cmp
sub
jbe
cs
dec
arpl
fwait
leave
imul
cld
cmp
lods
cmpsl
xchg
mov
inc
mov
lods
inc
jle
pop
add
xor
cmp
bound
js
mov
and
icebp
and
pop
loopne
and
push
shll
mov
andl
inc
xorl
mov
adc
mov
cmc
mov
xchg
mov
or
out
sahf
mov
pop
ficoml
out
scas
loope
dec
pop
pop
adc
jns
in
cmp
pop
lahf
sub
inc
pop
out
push
xchg
data16
out
mov
pop
fwait
push
cli
mov
jno
imulb
lea
mov
das
sbb
push
push
pop
mov
fsubl
pop
push
gs
push
lods
jp
cmp
lahf
xchg
xchg
adc
hlt
hlt
pusha
je
push
stos
cmp
in
push
aam
icebp
pop
ret
ss
lahf
je
jb
imul
pusha
sahf
xor
push
and
out
adc
jns
adc
lods
daa
cmp
and
xor
fsubl
push
aas
mov
mov
sub
jecxz
cmp
leave
pop
cmp
xchg
sub
nop
sbb
jb
xor
fsubrs
push
sbb
and
push
in
cmp
fidivl
lea
popf
push
inc
mov
inc
mov
cmc
lods
push
lret
xchg
repnz
xorb
scas
xlat
adc
test
cli
inc
jo
jo
daa
xlat
scas
push
and
pop
daa
les
push
jmp
mov
pop
scas
int3
repz
divl
lock
outsl
xlat
jp
int
cmp
dec
loope
cmc
js
sub
mov
fsubs
ret
out
cmp
push
lret
daa
inc
sub
in
dec
and
jb
pop
push
and
ret
pop
lret
mov
add
sub
subl
xchg
push
jnp
lret
sar
enter
fcoms
mov
dec
jo
inc
shlb
or
jns
push
sbb
sub
into
insl
rcl
xchg
popf
ljmp
push
xchg
bound
mov
leave
push
and
mov
repz
fcmovb
push
sub
push
jecxz
movsl
mov
addr16
int3
loope
cmp
outsb
jnp
xchg
adc
push
pop
sti
xor
fbstp
pop
cltd
or
xchg
cmpsl
and
jne
cwtl
scas
pop
mov
cmp
mov
out
icebp
push
shlb
stc
int3
ljmp
add
push
int3
movsl
pop
and
int3
inc
mov
or
stc
aad
pop
lds
jns
dec
movsl
push
xor
test
xchg
icebp
icebp
pop
lret
push
loope
ja
adc
cwtl
fnop
loopne
insb
test
jns
bound
lret
es
ds
xchg
mov
mov
das
insb
mov
mov
inc
imul
mov
std
mov
pushf
mov
cmpl
lods
xchg
add
pop
sub
in
leave
dec
lret
js
add
mov
jne,pt
and
adc
mov
sbb
jg
lds
into
and
test
in
lods
inc
jne
cmpsb
ret
sub
mov
cmc
jl
mov
scas
fmuls
rorb
les
in
js
jmp
je
and
or
cld
cmp
xchg
jmp
arpl
sub
scas
popf
ret
sarl
jle
sahf
dec
dec
test
lahf
xchg
lcall
mov
cmp
xor
popf
sbb
repz
push
cmp
jns
xchg
xchg
add
jl
ret
cmpsb
dec
data16
xchg
inc
iret
sub
not
cmp
or
fdivrs
cmpsb
sbb
fildll
aad
popf
cmpsb
cmp
jl
pop
jge
ret
dec
imul
shlb
jl
sub
out
js
mov
and
push
mov
xor
xchg
enter
in
jmp
rcr
inc
fdiv
subl
and
clc
fcom
cmc
cmp
pusha
push
stos
cs
cmp
push
or
fistpll
and
xor
rorb
out
insl
pop
and
andb
je
pusha
pop
les
cld
in
out
xor
aam
cwtl
xor
jne
dec
cmp
adc
jle
mov
imul
fwait
xchg
dec
mov
loopne
add
mov
push
aas
jg
ds
pop
movsb
ss
push
ret
data16
xchg
cmp
jecxz
in
insb
fwait
pop
pop
lods
movsl
add
adc
dec
scas
sbb
xor
xchg
adc
mov
loopne
push
lretw
or
sub
sub
orl
dec
pop
ret
das
jo
movsl
xchg
lods
adc
enter
fwait
pop
push
push
mov
mov
mov
sbbb
adc
mov
ss
inc
fstl
xor
les
dec
and
jno
adc
inc
mov
ud1
mov
push
cmp
add
sbb
inc
out
sbb
sub
mov
bound
enter
scas
inc
xchg
sbb
inc
dec
addr16
cmc
cmp
outsb
lock
cmc
mov
mov
push
dec
sub
lods
sub
xchg
push
lea
stos
aad
lahf
orl
xor
cltd
sbb
mov
ss
push
pop
jge
les
fstpt
jge
movsl
and
xor
jge
or
xchg
adc
push
sub
les
imul
rcrb
jle
popf
pop
int3
lea
xchg
or
dec
add
int3
push
ljmp
xchg
pop
add
dec
mov
arpl
mov
negl
mov
jnp
pop
repnz
int3
mov
add
or
mov
lods
loop
or
hlt
test
fistps
adc
mov
mov
sub
add
cmpsl
enter
jne
mov
dec
imul
or
fcmovb
add
ja
andb
sub
mov
cwtl
in
int3
mov
cmc
dec
cmc
jb
loop
mov
mov
cmpsl
mov
jo
lahf
pop
popa
jns
aam
gs
lods
jno
pop
mov
sbb
push
xchg
shlb
scas
iret
ds
and
inc
push
push
add
sahf
inc
sbb
iret
adc
ja
mov
inc
and
add
decb
das
loop
repz
sti
js
pop
inc
fadds
sarb
xchg
xor
xchg
int3
xchg
pop
sbbl
mov
jg
xchg
xor
fcmovne
and
sub
pop
mov
xchg
jmp
push
inc
jnp
sbb
xor
push
adc
mov
arpl
mov
cs
push
xchg
in
push
popa
xor
inc
add
sbb
out
add
sub
mov
fdivs
inc
repz
push
lret
insl
mov
enter
sbb
xchg
inc
lcall
jnp
negl
sub
push
call
sbb
inc
xor
dec
repnz
test
ret
and
xor
jno
push
jmp
mov
mov
aam
mov
shrd
outsl
cld
inc
xchg
shll
mov
adc
mov
dec
aad
cmp
xor
xor
mov
mov
mov
cmp
mov
add
aaa
aaa
mov
insl
lahf
and
divl
inc
adc
add
sbb
dec
mov
je
fwait
push
loope
js
push
jne
adc
cmpsb
ja
xchg
outsl
lret
mov
in
adc
dec
pushf
mov
in
sbb
dec
fsubrp
pop
test
out
out
push
cmc
fiaddl
mov
jg
fs
cmp
push
scas
sub
dec
ja
or
jl
push
and
mov
fwait
pop
dec
push
dec
add
adc
cmp
pop
xor
pop
out
addb
popa
cmp
sti
movq
fwait
jbe
dec
add
mov
jl
jp
fimull
cwtl
fdivr
jge
xchg
shlb
mov
push
push
repz
int3
out
cmp
iret
push
lcall
pop
subb
push
inc
lahf
cltd
addr16
jns
lahf
xor
add
add
scas
loope
jnp
jmp
mov
lods
ret
mov
mov
stos
mov
repnz
pushf
pop
jp
lret
mov
popf
test
and
mov
mov
jge
pop
icebp
mov
fadds
ret
scas
cs
addl
cmp
sti
repz
xor
scas
loope
stc
sub
aam
ljmp
xchg
mov
fists
lcall
pop
push
push
jle
xlat
mov
push
jns
std
sbb
clc
push
call
in
int3
add
push
or
adc
loop
inc
pop
out
ja
xor
cmp
push
dec
cmpsb
cmc
pusha
es
xchg
dec
xor
shll
mov
data16
cmp
cmc
mov
and
lahf
rcr
xor
mov
arpl
aad
adc
cmpsb
xchg
xchg
fldcw
sbb
scas
pop
in
rcl
mov
loopne
inc
jecxz
lar
sbb
mov
jge
or
inc
rorb
cmp
mov
rol
adcl
lahf
mov
jmp
xchg
xchg
jo
leave
xchg
jmp
mov
jae
xchg
mov
shr
stos
notb
lock
lea
push
mov
push
scas
repnz
scas
add
cmp
jmp
mov
ret
dec
stos
adc
sbb
cmp
shrd
es
enter
mov
sbb
addl
mov
fldt
rcr
mov
inc
test
cmp
sub
rcrb
shlb
inc
ficompl
cmp
pop
je
cmpb
sub
stos
imul
imul
inc
inc
push
and
inc
xchg
adc
jg
push
rcr
push
pop
cwtl
arpl
sbb
pop
rcrb
das
and
xchg
push
fwait
xchg
pop
sahf
mov
shrb
mov
ja
cmc
mov
jecxz
xchg
fistpll
sbb
je
inc
xchg
sbb
loope
rolb
push
or
mov
and
push
pop
lcall
lcall
arpl
xchg
cmc
jae
test
sti
xchg
in
test
pop
and
xchg
outsl
gs
dec
sarl
in
dec
cmc
sub
mov
inc
xchg
adc
mov
outsl
sub
mov
jg
scas
mov
popa
dec
stos
mov
and
fistps
adc
mov
jb
or
fs
cmp
sub
repnz
int
movsb
or
imul
mov
loope
inc
xor
cmp
test
stc
mov
mov
jge
sub
or
cmpsb
leave
stos
inc
stos
adc
jno
sti
mov
pop
xchg
pshufw
dec
xor
jne
rorb
jno
call
sti
cmc
jo
imul
arpl
cmp
ljmp
bnd
arpl
dec
shr
fwait
pop
cmpsl
mov
cwtl
jmp
out
sub
je
jl
dec
arpl
jo
cltd
fsubs
push
xor
adc
aaa
ret
scas
mov
icebp
imul
mov
mov
popf
and
mov
mov
cmc
lcall
jle
xor
push
push
mov
out
cld
mov
sub
or
or
leave
shlb
dec
inc
and
outsb
call
xchg
and
pusha
les
mov
sub
int
pop
xor
cmp
mov
or
xor
lods
es
sub
jp
sbb
clc
test
sbb
call
pusha
int3
aad
int3
out
rol
movsb
inc
jecxz
lret
call
mov
mov
or
xchg
fwait
add
jecxz
idivb
ss
jmp
icebp
and
push
push
pop
icebp
sti
adc
and
repnz
cmp
iret
cmc
adc
or
aaa
add
xor
dec
sbb
or
sub
leave
pusha
ficoml
stc
xchg
outsl
push
mov
push
in
cmp
inc
sub
pop
andl
xor
mov
fldt
mov
mov
xchg
repz
add
push
enter
stc
mov
jecxz
push
faddl
ficompl
inc
cmp
das
and
into
rcrb
xchg
notb
movsl
xchg
sub
into
loope
cmc
loopne
sub
jp
or
pop
aad
movsl
dec
sub
pop
cli
outsb
xchg
add
sbb
aam
cmp
push
lret
mov
inc
xor
sbb
int3
dec
dec
xor
pop
mov
push
inc
push
mov
sti
pop
sub
scas
mov
inc
pop
inc
lahf
and
mov
sub
jns
and
into
adc
lret
inc
in
enter
sbb
dec
cmp
jmp
addl
std
out
or
ss
xor
sbb
and
aad
mov
repnz
scas
fsub
repnz
adc
sbbb
inc
cmpsl
and
mov
xchg
mov
xor
adc
loope
push
lds
mov
jnp
and
movsb
lret
mov
push
dec
xor
bound
xchg
sahf
mov
and
jle
mov
imulb
sbb
mov
inc
jle
push
and
out
cli
test
jo
sub
dec
mov
or
add
add
icebp
jmp
push
rorb
out
push
loop
or
adc
sub
jle
push
mov
data16
or
jne
es
loope
int
aaa
push
mov
dec
jp
pop
mov
mov
int
or
cmp
jne
out
push
sahf
cld
pop
aaa
xor
lds
mov
or
pushl
dec
or
adc
mov
popa
mov
imul
push
xor
push
mov
jmp
pop
andb
jne
xchg
and
mov
daa
aam
sub
out
mov
int3
es
imul
inc
leave
sbb
stc
dec
lods
lahf
inc
push
push
roll
and
mov
dec
sahf
push
ret
or
sarb
nop
cmp
je
stc
out
fisttpl
cs
cmp
xor
ss
xchg
push
gs
sbb
shlb
cmp
les
and
xor
aas
sbb
dec
loope
mov
xorl
push
mov
dec
mov
aaa
jg
outsb
add
xchg
jnp
xor
lret
push
jae
inc
sbb
cld
or
xorb
mov
insl
mov
test
fiadds
pushl
adc
nop
cmpsl
cli
cld
mov
jo
adc
lcall
push
packuswb
arpl
out
and
mov
stos
jbe
cmpsl
push
dec
mov
xlat
xorb
add
imul
sti
push
fsubr
movsl
mov
cli
inc
ds
insl
jo
mov
sbb
mov
fists
movsl
inc
mov
pop
stc
mov
lahf
icebp
pop
out
lcall
dec
insl
sahf
sub
loop
add
ret
xor
leave
pop
dec
pop
pop
mov
mov
repnz
gs
lds
mov
jnp
xlat
in
or
mov
push
fistpll
je
push
cmp
pop
test
push
add
cmp
ljmp
inc
divb
cwtl
scas
xlat
sbb
push
push
mov
jnp
sti
negb
sub
cli
jg
aad
mov
lcall
pop
add
mov
movl
sbb
repnz
mov
jno
add
loope
das
cmc
add
cli
in
lret
lahf
call
push
jmp
xlat
mov
mov
daa
cmc
lahf
cmpsb
negl
xchg
rcr
cmpsl
ljmp
std
add
push
aaa
mov
sbb
push
inc
data16
dec
and
mov
sbb
fadds
ljmp
cld
mov
mov
addb
js
jb
mov
mov
ret
sbb
mov
push
ljmp
cmpb
mov
jmp
repz
insl
cmp
ss
imul
dec
icebp
aaa
out
xor
les
in
loopne
xor
outsl
mov
pop
lret
and
sub
push
jmp
sub
fwait
push
std
xchg
test
and
mov
mov
dec
mov
imul
out
mov
mov
pop
fcomip
jecxz
dec
adc
sarb
bound
arpl
push
mov
test
notb
ljmp
daa
movsb
and
sub
push
ret
nop
psllw
sub
pop
sti
jge
gs
xorl
mov
mov
aas
enter
cld
adc
mov
loopne
sub
lods
or
inc
leave
aam
and
and
outsb
es
ret
cmp
mov
push
jae
or
test
loop
pop
push
jae
setno
jae
mov
pushf
pusha
shrb
or
push
pusha
jp
sbb
into
scas
add
test
xchg
or
cmp
pop
movsb
jns
in
fldenv
repz
pop
lods
push
sub
jecxz
add
std
dec
fdivl
jmp
mov
dec
push
inc
sub
xchg
mov
insb
ficoms
mov
sbb
popa
loope
outsl
inc
hlt
and
testl
xchg
js
sti
push
jmp
push
push
ja
jle
rclb
js
lret
in
cmp
mov
fwait
aad
mov
and
loopne
les
push
push
movsl
testl
pop
in
jno
pop
scas
mov
sbb
sub
out
xor
mov
lea
fdivrs
adc
aam
rcll
jle
adc
sahf
mov
in
push
push
push
sub
dec
jno
push
push
test
add
adc
movsl
mov
jmp
fsubl
jp,pn
imul
aad
dec
jmp
fwait
jg
ja
ret
xchg
jmp
in
lods
cmpsl
mov
ja
in
push
cmp
icebp
and
clc
mov
mov
pusha
jg
out
and
mov
sahf
fdivs
sbb
add
or
xchg
fs
pop
sbb
out
sbb
jle
lcall
cmp
icebp
or
xchg
sbb
jmp
daa
pushf
scas
fadds
outsb
pop
fs
addr16
sub
in
dec
dec
lret
xor
lret
out
xchg
push
mov
call
arpl
leave
aam
xchg
jo
shlb
mov
sub
in
fmull
out
inc
push
adc
or
cmp
dec
mov
jp
jno
mov
enter
sbbb
sbb
mov
mov
or
or
lret
in
xchg
inc
jmp
sub
jno
inc
les
in
mov
iret
mov
pop
xchg
xor
add
mov
ljmp
and
cld
fcomi
pop
leave
cs
shll
xor
jbe
push
add
jle
or
jge
sbb
into
adc
sub
push
add
cli
or
mov
out
into
iret
repz
daa
ja
mov
mov
rcll
pop
mov
mov
xor
push
cltd
clc
mov
test
cld
mov
out
in
scas
push
rol
ficoml
js
jb
sbb
aas
push
or
inc
jge
lock
inc
mov
lods
mov
push
loop
movsb
inc
sbb
jne
xor
and
xchg
adc
stos
int3
mov
xor
jbe
adc
cmpsb
shr
pop
jp
mov
loope
ret
or
mov
arpl
gs
cs
pop
sbb
xlat
sub
sbb
movsb
xlat
ret
mov
insb
ficompl
cmpb
push
inc
xchg
ret
fnstsw
sahf
mov
sub
fbld
mov
mov
rorb
cld
stos
xchg
adc
ret
mov
gs
cmpsb
mov
ja
fwait
jp
mov
scas
lods
jg
or
mov
xchg
enter
lret
mov
in
add
sbb
cmpsb
ret
pop
or
or
mov
insb
loope
stos
push
cltd
mov
mov
mov
dec
cmc
adc
outsl
movsl
test
call
adcb
fwait
in
dec
les
sub
push
jbe
mov
les
data16
mov
cmp
mov
dec
stos
mov
rclb
ficompl
jb
pop
cmp
jmp
in
adc
mov
push
cwtl
roll
adc
cmp
push
dec
dec
cltd
ss
dec
sbb
test
es
imul
pop
in
cltd
pop
push
in
filds
sub
stc
mov
repnz
outsl
pop
sub
cmp
aad
add
arpl
fwait
pop
fsubrl
pusha
push
sub
in
push
inc
mov
pop
movsl
repz
inc
iret
mov
lret
mov
jno
jo
je
and
or
cmpsl
fdivl
jns
cmp
add
or
imul
repnz
pop
stc
lret
sub
mov
hlt
xorl
cwtl
test
ss
jae
add
pop
mov
xchg
stc
fsubl
jno
cmp
in
push
jecxz
call
add
cmp
nop
add
xchg
mov
inc
dec
pushf
adc
mov
cmp
pop
adc
jbe
inc
or
push
xchg
dec
mov
rcll
mov
pusha
add
inc
xchg
mov
es
sbb
jno
stc
adc
mov
jle
sbb
cmc
mul
out
das
xchg
mov
sbb
in
cld
lds
scas
mov
mov
nop
test
lds
sbbb
ds
pusha
pop
inc
das
aam
shrb
sbb
insb
cmpsl
sub
mov
out
add
andb
adc
sbb
fstpl
xchg
jns
sbb
int3
inc
jge
lods
or
cli
dec
movsl
mov
stc
sbb
or
jge
jg
inc
dec
or
sub
pushw
push
or
cmp
jo
addl
hlt
jb
jp
jmp
or
cltd
dec
movsb
stos
jo
cs
pop
lods
add
jl
sbb
lods
rorl
movsl
sub
cli
dec
fsubs
dec
sub
insl
hlt
sub
stc
and
mov
call
pop
mov
fs
into
fs
xchg
push
aad
lret
xchg
popa
aaa
lret
call
jb
shl
insl
fstl
push
pop
dec
rolb
mov
gs
cwtl
cmpsl
mov
xchg
outsb
inc
je
imul
sbb
cli
aad
mov
cmp
cmp
jnp
lods
pushf
push
stc
sbb
inc
pop
fcmovnu
shrl
imul
movsb
je
inc
stc
jae
pusha
mov
mov
sbbb
enter
dec
sahf
lcall
push
mov
xchg
xlat
jp
inc
fistps
lods
pop
ret
cltd
out
jne
gs
mov
cli
mov
cltd
push
xchg
xor
cmp
stos
repz
dec
outsl
inc
xor
insb
jmp
sub
test
sbb
lahf
xor
push
lret
repz
jnp
out
cltd
cltd
inc
fcoms
adcw
pop
add
bound
sbb
push
addr16
push
jb
pop
cltd
clc
push
sbb
pusha
jg
popa
ret
sbb
inc
cmp
leave
out
aas
fwait
insl
and
shl
mov
loop
push
jp
sub
in
outsl
lods
inc
mov
stos
fstpt
adc
xor
addl
in
into
push
clc
call
jle
mov
jb
ljmp
push
pop
das
push
inc
lret
sub
mov
jnp
mov
push
arpl
sbb
pop
cli
cmp
adc
int3
xlat
cmp
pop
ja
fdivr
test
push
mov
cmp
push
inc
sbb
inc
sub
mov
xor
mov
test
daa
and
in
ss
push
cltd
fs
or
outsl
loop
cmp
sbb
sub
sar
push
jmp
jge
leave
lds
not
or
jle
mulb
ja
dec
adc
pop
pop
fists
and
dec
cmp
jle
popf
mov
jnp
insb
mov
insl
not
and
sbbb
lds
mov
mov
sbb
lock
jno
push
inc
clc
popa
mov
xchg
xchg
mov
fisubs
js
data16
or
mov
xchg
mov
call
sub
cmp
xlat
dec
push
lahf
outsb
add
and
jle
cli
adc
lods
movsl
frstor
or
push
and
insl
mov
scas
cwtl
jne
pop
psubusb
dec
sahf
in
not
xchg
mov
inc
inc
and
adc
push
sbb
push
ljmp
or
add
lds
mov
sbb
sahf
cld
fsts
lcall
cmc
pop
call
mov
xchg
mov
lahf
daa
iret
xchg
mov
sbb
ja
lods
aas
and
pop
xor
les
add
jp
movsb
icebp
add
adc
dec
dec
lret
jns
bound
mov
xor
mov
adc
loop
xor
popa
int3
xchg
or
and
das
push
push
cli
inc
pop
scas
push
jne
stos
in
sub
loop
loope
cmp
daa
jo
xor
ss
jle
mov
mov
cmp
lcall
shr
dec
movsl
sub
fldcw
mov
cmp
mov
shll
loopne
pop
mov
test
movsb
gs
pop
and
and
push
pop
inc
addr16
repnz
lock
mov
push
clc
out
fimull
mov
jnp
movl
push
cli
sub
mov
test
mov
lock
adc
add
push
lods
sbb
jl
and
adc
nop
dec
dec
mov
testl
mov
push
inc
imul
roll
mov
rorb
jb
inc
dec
or
fwait
jle
ja
sub
out
fwait
mov
inc
push
sub
xor
lret
mov
jmp
enter
dec
scas
pop
mov
pop
push
dec
or
dec
shlb
add
add
adc
sbb
cli
cld
into
lcall
sub
dec
push
jb
push
dec
stos
call
int
cwtl
mov
cmc
pushf
in
cltd
mov
adc
jg
outsb
and
fbstp
jle
add
scas
into
loope
pop
jbe
cmc
test
mov
outsl
or
ret
mov
add
add
mov
stos
rorl
sub
cmc
std
inc
push
adc
mov
ds
inc
inc
mov
inc
mov
push
mov
jl
xchg
pop
push
dec
addr16
rclb
ss
pop
mov
mov
incb
subb
in
jo
mov
mov
pusha
jp
out
mov
loop
mov
dec
aas
push
mov
mov
push
cmp
and
sub
mov
or
mov
pop
pusha
dec
lcall
sahf
xchg
popa
lret
test
cwtl
dec
aas
xchg
sub
shrl
jo
cs
dec
dec
jmp
adc
push
lahf
pusha
iret
xchg
or
pop
pop
jnp
in
mov
push
outsb
das
xchg
xchg
sbb
sbb
xchg
push
or
adc
sub
add
dec
push
cmp
arpl
sbb
inc
lahf
xor
aaa
repnz
mov
push
testl
adc
in
jg
sub
icebp
jge
andl
xchg
or
imul
lods
cli
pop
jbe
and
mov
lds
loope
imul
push
addr16
jae
mov
call
ljmp
pop
mov
add
fwait
out
inc
dec
cmp
xchg
pop
fisubrl
into
add
hlt
or
dec
or
xchg
insb
mov
imul
iret
lcall
fldcw
xchg
xor
push
jmp
adc
dec
hlt
adc
push
xchg
fisttpll
test
pop
fs
jl
sbb
jb
cli
punpckldq
xor
aam
pop
xor
push
mov
imul
inc
in
jge
popa
fsubr
hlt
xor
imul
pop
mov
out
xorb
jl
ficomps
repz
mov
sbb
push
leave
cmp
iret
insl
scas
mov
inc
sub
mov
xchg
leave
mov
inc
add
popf
pop
outsb
scas
fstpt
out
sbb
mov
inc
xchg
aad
xor
mov
and
jno
xor
sub
loopne
sar
lds
aaa
icebp
dec
xchg
loop
cmp
scas
int3
data16
lock
test
hlt
icebp
xchg
divb
jmp
shl
andb
mov
add
xchg
adc
adc
lea
in
dec
sbb
inc
fistps
mov
inc
sbb
scas
aam
push
and
std
mov
lds
leave
adc
in
push
hlt
in
adc
cld
stc
push
leave
cwtl
push
ret
jmp
xchg
fcmovb
sub
call
sahf
std
sbb
popa
aas
inc
out
inc
xor
outsb
xlat
pusha
fwait
in
out
add
fnstcw
cmp
mov
pop
inc
adc
pop
or
xor
test
sub
test
xchg
ja
xor
in
dec
lock
jo
pushf
sbb
mov
and
sti
sub
dec
inc
js
movsl
inc
lret
inc
in
mov
ds
lea
mov
fldenv
int3
push
aas
stc
popf
push
scas
decb
mov
fwait
push
je
adc
sub
test
or
xor
pushf
add
xchg
pcmpeqb
lret
pop
std
xchg
cwtl
js
pop
jbe
inc
sub
adc
cwtl
add
negb
add
cmpsl
push
movzwl
jnp
jge
mov
cmp
xchg
fbstp
into
adc
test
shrl
pop
adc
rol
nop
popf
xor
ja
aas
les
cmp
add
pop
fstpt
mov
decl
rorl
mov
subl
pushf
fldl
dec
insl
sbb
adc
lea
adc
cmpsl
hlt
into
mov
daa
cld
bound
lods
cmpsb
jno
sub
ljmp
test
out
and
mov
cmc
dec
inc
out
adc
inc
es
sub
lahf
sti
xor
dec
rcrb
arpl
fildll
scas
rcrl
jno
jnp
ss
cmp
xchg
outsl
loope
test
xchg
in
pushf
xchg
shrl
mov
sbb
sar
int3
cs
subb
call
sub
ret
dec
cli
push
hlt
push
inc
cltd
push
hlt
das
or
mov
mov
sub
jbe
cmp
mov
lcall
push
test
lea
xor
mov
mov
xor
push
push
test
lds
sarl
mov
push
pop
mov
aam
dec
mov
mov
adc
mov
pop
pop
dec
mov
in
cmp
mov
test
aad
mov
dec
jmp
stos
mov
stos
les
fs
inc
push
stc
mov
das
xlat
test
fdivrl
cld
jb
mov
and
mov
sub
mov
mov
and
imul
dec
sti
push
jecxz
aaa
lods
adc
jg
lret
or
lods
push
sub
sbb
mov
adc
lret
and
sbb
or
stos
lret
mov
sub
adc
mov
mov
push
scas
pop
clc
orb
test
mulb
add
or
jbe
into
mov
scas
fs
add
mov
xchg
jbe
inc
das
mov
scas
iret
push
xchg
xchg
icebp
adc
xchg
pop
push
mov
pop
xor
sbb
movsl
into
pushf
jnp
fistpl
out
lahf
mov
sbb
push
gs
cmp
xor
ficoms
out
test
ja
sbb
and
fldt
sub
or
xchg
cmp
sub
data16
adc
jmp
cmp
push
outsl
daa
ja
sub
mov
sub
inc
cwtl
mov
test
insb
in
dec
or
ds
mov
cmp
data16
ret
cmpsl
or
jge
dec
mov
rcrb
dec
sahf
fldenv
rol
gs
mov
addb
push
in
mov
or
adc
fidivs
loopne
stos
inc
mov
sub
inc
jb
fistl
outsl
fwait
push
cmp
mov
out
lock
or
clc
mov
mov
dec
pop
cmp
mov
test
xor
addl
ljmp
mov
xchg
aad
xor
cmp
repz
out
inc
push
xchg
pop
cmpsl
xor
out
mov
lcall
add
movsl
popa
xchg
jno
add
xor
into
imul
in
pusha
jno
mov
rolb
ljmp
test
mov
sbb
je
iret
sbb
pop
mov
adc
das
jmp
xchg
adc
les
and
pop
pushf
cmpsl
cmc
insb
sub
sbb
sbb
and
ret
lds
push
push
jmp
cmp
bound
icebp
xor
ficoms
icebp
mov
test
lahf
js
and
and
adc
cmpb
pop
xor
push
mov
ret
mov
in
xchg
insb
jl
decb
lods
cmp
lret
loop
loopne
imul
or
xchg
push
addr16
outsl
pop
jg
and
inc
xchg
xchg
cltd
test
jbe
sub
xchg
or
test
mov
mov
mov
scas
nop
xchg
xor
jge
dec
stos
fs
sti
mov
aas
jp
add
nop
push
insb
mov
add
ret
push
out
in
mov
test
sarl
stos
jns
out
sbb
add
loope
adc
mov
push
pop
mov
xor
jbe
push
xchg
xchg
test
or
cmpsb
push
xor
mov
jl
sarb
pop
pop
sub
imul
jne
mov
loope
cmp
rclb
fildl
enter
scas
jl
es
int3
cli
in
push
mov
push
pop
xchg
out
sbb
repnz
ss
ljmp
std
jmp
rcrb
jle
mov
inc
andb
clc
fs
sahf
in
faddp
test
mov
mov
push
in
mov
fildll
mov
push
in
pop
add
repz
mov
xchg
std
out
ljmp
lcall
inc
sub
or
lds
jle
mov
or
pusha
in
and
adc
sub
xor
out
in
lods
int
enter
jp
jecxz
pop
arpl
lds
cmp
pop
sti
scas
sbb
outsb
xor
mov
mov
dec
and
mov
lret
add
std
pop
out
adc
pop
nop
dec
imul
cwtl
and
cmp
xchg
das
mov
push
lret
jno
testl
leave
loope
or
fldcw
movsl
bound
add
cmp
mov
mov
push
loopne
jbe
mov
xor
int
cmp
add
cmp
add
pop
das
pop
jno
out
mov
or
test
xorb
mov
mov
xor
out
lods
out
aas
cmp
push
mov
push
sub
je
xchg
xchg
adc
es
xor
mull
fwait
adc
push
inc
cld
daa
sbb
int
into
dec
rolb
in
std
mov
test
pop
cmpsb
out
add
or
pushf
xchg
sub
imul
or
jle
pop
and
scas
outsb
shll
cmpb
mov
sbb
fucomip
fsubrs
cmc
cmp
push
mov
add
cmp
push
mov
add
cltd
sbb
cmpsb
pushf
or
loope
add
andl
mull
mov
lea
adcb
aaa
jmp
inc
dec
movsb
mov
mov
xor
rorb
mov
outsb
inc
push
mov
add
mov
popl
shll
fs
xor
repnz
jge
scas
in
or
mov
movsb
lea
iret
pushl
fsubrs
mov
xor
cmp
mov
leave
xor
dec
sub
push
hlt
sbb
loope
in
mov
rcrl
addr16
sahf
stos
inc
jb
push
sub
call
mov
and
enter
aam
ret
insl
sbb
jg
das
jno
cmp
or
les
cmp
pop
push
xchg
mov
sub
out
jg
push
roll
lock
sbb
fcomps
adc
mov
js
cmc
das
dec
jnp
inc
cmp
xchg
imul
xchg
adc
dec
jbe
clc
jno
mov
arpl
sub
into
orb
jae
stos
movsl
adc
mov
out
outsb
inc
dec
sub
pop
pop
or
sub
cmpsl
loope
cmp
pop
dec
sti
push
fsubs
adc
cwtl
aaa
pop
mov
jmp
pop
jnp
stos
push
mov
push
jg
fdivs
ret
gs
fwait
pop
jae
lock
in
faddl
outsl
movsb
out
cld
push
pop
jns
sbb
dec
cmp
lcall
data16
sbb
sub
cmp
xchg
pop
mov
pop
adc
clc
pop
cli
or
iret
xchg
sub
mov
mov
cld
sbb
popf
rolb
lods
sarb
push
lahf
enter
xor
adc
mov
mov
add
faddl
pop
popa
call
pop
mov
nop
test
or
scas
mov
jb
jo
jnp
dec
test
out
lret
loop
push
or
shll
dec
test
ds
cltd
fisubl
or
jle
jo
xchg
sub
mov
push
cmp
insl
ret
pushf
test
lods
cmp
ds
in
or
stos
and
test
jg
int
insl
inc
das
das
test
out
xchg
adc
sub
xor
cmpsb
add
xchg
and
inc
add
nopl
push
sbb
pop
mov
or
dec
outsb
rolb
cltd
or
jo
mov
insl
jg
imul
adc
test
and
sbb
push
inc
insl
cmp
xchg
test
jecxz
sarl
or
popa
jecxz
xor
in
lds
roll
fdivr
out
jbe
push
mov
xor
aaa
and
add
xor
pop
test
inc
insb
fcomps
cmpsl
mov
xchg
out
lods
sub
push
mov
int3
cmp
imul
xorb
sbb
ret
pop
js
in
addl
inc
in
mov
iret
push
pop
cld
into
sub
iret
and
dec
gs
or
js
cmpsb
cmpsl
mov
xor
jl
lcall
mov
je
or
push
inc
or
xchg
adc
out
xchg
cwtl
mov
sbb
sti
cld
cltd
addr16
push
sbb
stos
xor
cld
lahf
and
adc
pop
mov
sbb
addr16
hlt
stos
cmp
sbb
lret
movl
fwait
dec
or
jbe
push
lock
add
xchg
sarb
in
ss
jns
and
sbb
sbb
jg
insb
fwait
insl
push
xchg
test
push
xor
fidivl
jmp
mov
clc
js
lods
mov
cli
adc
jne
daa
sbb
mov
pop
jns
sub
mov
adc
lahf
in
mov
cmc
addl
sub
test
jmp
fcom
loop
mov
lock
jle
subl
jno
stos
inc
sbb
mov
hlt
inc
dec
popa
and
movsl
add
pop
xor
lret
xchg
push
insb
sar
push
in
xor
imull
je
ljmp
cmpsl
jbe
mov
shll
sub
inc
sbb
push
adc
aas
or
jle
leave
shll
mov
cmp
pop
add
ret
xchg
bound
mov
mov
lock
dec
hlt
pop
aas
das
lods
lods
mov
cmp
pop
mov
movsb
dec
push
mov
imul
adc
push
pop
dec
data16
mov
inc
fcoml
fmul
and
or
hlt
sbb
das
andb
jp
cmc
ret
cmpsl
add
loopne
repz
fistpll
add
pop
sbb
stos
gs
push
aaa
call
bound
in
mov
push
pushf
in
jno
pop
sti
or
xchg
mov
les
push
scas
out
popa
dec
ljmp
push
dec
dec
sti
cmp
pusha
aam
gs
test
out
je
dec
pop
arpl
mov
mov
adc
add
xchg
addr16
and
sbbl
negb
mov
ss
push
aaa
popf
fiadds
mov
mov
inc
movsb
mov
stos
mov
ds
iret
fcoms
ljmp
aas
jl
mov
inc
mov
dec
push
mov
sub
dec
pop
add
leave
int
mov
addr16
mov
loopne
inc
add
pop
and
sub
adc
rcl
and
fisubl
out
sbb
sub
pop
fsubrs
lret
cmc
rorl
xor
jge
in
jb
pop
mov
jmp
in
mov
cs
jge
addb
imul
jno
outsb
mull
jp
mov
jg
xor
scas
arpl
nop
pop
xlat
or
mov
cld
adc
sub
add
sbb
sub
jp
mov
shr
sarb
mov
int3
shll
insl
pop
pop
fnstcw
and
adc
stos
push
ss
mov
inc
push
sbb
lret
xor
or
add
out
jo
loop
jg
popf
aas
out
sub
lahf
rol
inc
movq
cmp
jbe
mov
lret
fcoml
jle
cmp
aad
insl
xchg
jmp
add
pop
xor
add
mov
pop
rclb
xchg
test
lret
inc
mov
cltd
nop
sti
iret
stos
aam
pop
mov
int
out
es
dec
daa
popa
mov
les
shll
or
push
test
enter
and
adc
mov
pop
sbb
or
mov
sti
push
cmp
ret
arpl
data16
jne
sub
jl
mov
test
hlt
or
popa
mov
pop
stos
out
aas
jbe
stc
mov
sub
dec
ret
les
push
aas
testb
mov
es
push
popl
pop
test
sbb
and
mov
push
push
adc
testl
cmp
pop
pop
and
out
xchg
aam
xchg
dec
in
vmovdqu
push
dec
js
cmp
adc
jp
jmp
dec
not
pop
pop
aad
jbe
clc
inc
push
jbe
mov
js
je
icebp
lock
outsb
cmc
mov
push
or
call
jle
call
mov
dec
mov
push
inc
sbb
addr16
repz
movsl
adc
ret
sbbl
mov
jns
mov
iret
mov
xchg
sbb
sub
test
and
mov
push
mov
sub
inc
or
ldmxcsr
je
sbb
and
cltd
fcompl
cmp
mov
adc
int
pusha
scas
lahf
xchg
vmread
ljmp
in
jb
add
push
push
loopne
int3
mov
sub
xchg
or
sti
sbb
jg
sub
aaa
sbb
dec
cmpsb
into
adc
add
lret
xchg
cmp
jge
adc
into
leave
psubusw
lret
inc
fwait
aaa
mov
leave
fisubrl
xor
sub
and
pop
int3
push
or
and
jo
dec
add
or
stc
jmp
ds
popa
mov
cmp
lds
push
cmpsb
lods
push
ds
sbb
pop
rolb
movsb
in
mov
stos
nop
pop
ljmp
xor
push
xor
inc
lahf
dec
push
sub
fdivs
lcall
lcall
out
mov
cli
sub
xor
int3
in
popa
push
in
decb
lcall
stc
fstps
outsl
test
test
jmp
push
pushf
push
inc
and
pusha
sub
mov
in
lret
mov
pop
imul
jnp
notl
cmpsb
ret
and
pop
fwait
push
mov
in
loop
jns
adc
iret
test
loop
inc
aas
adc
jae
jmp
jle
mov
and
in
or
push
lods
jp
fidivrl
dec
rorl
pop
test
pop
nop
test
mov
outsl
push
pop
mov
divl
push
jae
aad
sbb
scas
xchg
and
mov
and
fbld
sarl
add
jnp
hlt
mov
outsb
mov
aas
popa
inc
bound
fcomp
adc
aas
xchg
mov
std
mov
inc
and
addl
je
sub
rclb
fstpt
repz
cmc
lret
pop
mov
push
mov
es
int3
popa
sbb
daa
adc
repz
icebp
push
push
mov
cmp
outsb
std
adc
loope
sbb
add
add
xor
dec
sub
pop
arpl
ja
inc
nop
inc
sbb
jo
in
test
gs
xlat
lahf
dec
call
push
lods
adc
xchg
push
xor
mov
into
nop
les
rcr
cmpsb
push
xor
cmpsb
and
sbbl
push
inc
push
in
stos
dec
test
jnp
cld
aaa
mov
stos
xchg
int3
lods
mov
test
pop
or
xchg
jmp
jp
fnstcw
movsb
fs
xchg
lds
mov
test
testl
cmp
jo
das
cmp
jnp
sub
sbb
jnp
and
inc
cmpsb
or
xchg
pop
mov
mov
adc
idivb
mov
mov
gs
cmp
incb
shlb
pusha
dec
push
xchg
gs
jbe
cli
push
adc
mov
jnp
insb
inc
dec
fdivrs
mov
inc
test
inc
es
inc
lea
adcl
imul
addr16
and
jne
shlb
xor
aad
sbb
lret
loope
test
fwait
outsl
xchg
and
mov
xor
xchg
cmpsb
or
or
add
add
clc
cmpsl
stc
fdivrl
fs
sbb
insb
lret
mov
dec
inc
adc
mov
daa
jg
mov
rolb
mov
push
mov
inc
mov
test
rep
clc
cmp
insb
push
cmp
dec
xor
std
callw
popf
mov
add
or
outsb
sub
orl
push
dec
sbb
inc
clc
adc
aad
into
cmp
aas
push
xchg
insl
inc
lock
cmpsb
adcl
or
iret
sbb
imul
mov
fildl
xchg
frstor
add
sub
sub
leave
test
fpatan
mov
mov
dec
and
fs
mov
xchg
cmpsl
and
stos
faddl
mov
adc
enter
dec
std
jns
lret
mov
inc
adcb
inc
aad
sub
xchg
aaa
or
arpl
fistps
repnz
cmc
inc
cmp
dec
xlat
push
dec
insl
xchg
inc
fs
ja
xchg
dec
jecxz
mov
sbb
jg
leave
mov
mov
arpl
pushf
add
loop
mov
cli
je
adc
lea
fnstsw
sub
inc
mov
pushf
repz
mov
mov
mov
xchg
dec
or
push
push
aas
outsl
repz
icebp
adc
test
outsl
or
mov
fbstp
psubsb
pop
rcll
enter
sub
jno
js
jb
lahf
stc
and
or
arpl
js
pusha
ds
xor
hlt
aad
xor
outsl
imul
gs
and
sbb
fstpt
add
or
dec
insb
ja
xor
addr16
hlt
or
mov
mov
add
mov
add
xchg
std
mov
shl
add
iret
jb
mull
adc
mov
and
adc
cmp
mov
ret
push
inc
pop
push
mov
pop
push
lock
pop
push
or
or
into
mov
gs
stos
jo
scas
xchg
mov
jle
lcall
jmp
outsb
roll
push
iret
xor
inc
insl
and
addr16
cmp
addb
pushf
das
push
xchg
and
cmp
sar
jl
pop
scas
aam
push
jnp
clc
out
and
sub
pop
ret
xor
cltd
icebp
mov
in
pop
in
dec
shll
sub
lock
mov
push
mov
loop
cmp
outsl
push
rolb
icebp
imul
and
sub
sbb
out
leave
cmc
insl
push
cmp
lods
pushf
ljmp
pop
xorl
lret
cmc
shll
xor
cmp
sbb
add
sbb
loope
sbb
test
out
dec
mov
imul
inc
and
subb
cwtl
pushf
call
test
mov
inc
mov
cmp
test
jge
testb
pop
sbb
pop
fstps
pop
push
lret
push
push
flds
idiv
imul
cmp
push
dec
mov
adc
cld
orb
jecxz
jl
push
add
leave
test
mov
pop
push
loop
sub
cmpl
jecxz
aad
adc
jno
mov
loop
pop
mov
dec
jns
mov
call
xchg
pop
push
jecxz
and
pushf
in
mov
cwtl
xor
test
aad
inc
ficomps
inc
cmp
mov
bnd
inc
add
add
sbb
sbb
xor
fdivl
pop
push
xchg
aam
shll
idiv
addr16
cmp
jno
icebp
loop
icebp
jns
sub
pop
push
fistl
jecxz
adc
jno
lcall
stos
mov
jge
je
cltd
mov
push
aam
or
dec
pop
pop
push
pop
test
stc
dec
add
mov
testl
cmp
dec
dec
mov
call
aaa
adc
cli
fdivs
fcoml
notl
mov
std
es
lods
push
and
xor
out
out
int3
scas
testb
and
inc
aaa
dec
sbb
pop
in
dec
lcall
or
sub
cmpsl
pop
inc
pop
pop
push
call
and
adc
dec
mov
loope
rorl
inc
dec
inc
mov
lea
xchg
inc
dec
data16
hlt
push
jnp
push
mov
sub
xor
outsl
fs
sub
push
sub
mov
cmp
mov
or
imul
cs
xor
lods
dec
sub
ds
jbe
lock
lret
add
popf
popf
ret
xchg
test
adc
pop
out
sub
inc
fdivl
loopne
add
fisubl
dec
dec
or
fiaddl
xchg
aad
mov
jmp
enter
nop
dec
dec
and
pop
jns
jnp
sbb
lods
faddp
or
xchg
stc
pop
and
jge
js
sarb
pop
pop
jo
pop
iret
xor
xchg
jg
ret
aas
xchg
stc
pop
int3
out
or
jecxz
cmp
mov
cmp
jl
lcall
orb
or
int3
sbb
xchg
mov
scas
sti
std
jle
ljmp
or
mov
movsl
add
add
cmp
mov
inc
fisttps
jbe
mov
faddl
xchg
stos
inc
fldl
add
dec
stos
sbb
int
loop
bound
mov
jns
arpl
pushf
xchg
sub
fbld
pushf
stc
in
mov
jnp
lahf
adc
mov
aad
dec
mov
xor
imul
jle
cli
or
sbbb
xchg
insl
mov
mov
cmp
xor
xor
ret
jge
dec
movd
ja
int3
xor
xchg
cltd
test
shrb
mov
mov
add
or
sub
add
aaa
das
cld
and
shlb
pop
and
xor
cmp
rolb
rcrl
push
adcb
leave
push
sub
and
sbb
packsswb
mov
xchg
adc
sahf
xchg
mov
sub
mov
dec
out
notb
mov
adc
shll
outsl
ljmp
icebp
pop
mov
cmp
repz
xchg
inc
stos
mov
fwait
loopne
adc
fcmovu
xor
mov
mov
pusha
and
imul
jecxz
out
adc
in
mov
sub
adc
pop
test
pop
dec
mov
and
push
inc
xchg
mov
psrad
xchg
loopne
cli
adc
mov
dec
add
sahf
aad
push
mov
xchg
enter
push
ja
cwtl
cmp
jno
fistl
xchg
fstps
sub
sar
out
mov
data16
leave
pop
clc
clc
inc
cmp
jb
into
lcall
mov
xor
cmp
mov
outsl
and
test
and
and
xchg
in
dec
push
test
into
scas
sub
mov
pop
cmp
sahf
dec
mov
mov
outsb
add
or
mov
inc
inc
addr16
xchg
adc
xchg
lcall
outsb
test
bound
hlt
mov
jecxz
jnp
scas
mov
sti
loope
adc
jne
or
ret
mov
loopne
aam
popa
xchg
sub
stos
hlt
mov
dec
inc
xor
or
mov
les
mov
adc
push
test
out
or
or
sbb
sbb
push
ss
dec
cltd
ret
cmp
mov
dec
and
pop
add
pusha
sbb
fists
loop
jae
sbb
mov
insb
push
push
fsubrp
sbb
mov
jmp
jecxz
inc
std
mov
repnz
xlat
gs
pop
mov
dec
mov
pop
or
adc
sub
or
mov
mov
fists
mov
ret
inc
inc
dec
unpckhps
popa
sbb
xchg
fs
sbb
sti
xchg
sbb
cmp
push
xor
push
bound
dec
sub
jnp
gs
or
xor
or
pusha
jno
pop
addb
push
cmp
cs
push
faddl
stc
adc
jnp
daa
adc
push
gs
outsl
ret
fmull
testb
jge
mov
test
mov
rorb
scas
push
cmp
repz
or
mov
repnz
out
lahf
pop
cmp
mov
push
inc
push
jecxz
cmpl
arpl
shlb
cmpsl
scas
in
cld
clc
clc
stc
jbe
loopne
xchg
dec
pushf
out
and
out
push
inc
push
push
dec
pop
jl
stos
add
js
fildll
aas
addl
fs
pushf
add
lret
pop
stc
and
xchg
push
clc
mov
push
icebp
xlat
fninit
or
mov
jbe
pop
movsb
stos
mov
insl
repnz
or
jnp
rol
and
or
mov
int3
imul
in
xchg
in
test
dec
pop
mov
mov
out
and
aam
in
dec
cmp
cltd
jno
mov
jb
inc
adcb
mov
mov
xchg
jp
sti
adc
sbb
mov
outsl
enter
loop
jns
das
pop
mov
adc
loope
push
ror
xchg
add
mov
mov
test
mov
ja
jp
bswap
int3
push
mov
fmulp
add
out
cli
mov
pop
xchg
mov
ss
mov
enter
fcoms
ljmp
aad
hlt
mov
mov
xor
sahf
inc
mov
push
stos
in
in
mov
ja
xor
pop
xchg
push
cmp
pop
mov
mov
fdivl
add
dec
lret
mov
lret
and
fs
mov
mov
cli
out
loope
arpl
adc
incb
or
cmpsl
imul
push
jp
rcll
adc
fildll
fstl
pop
js
cmpsl
int
xchg
mov
nop
sub
fsubl
jo
data16
fisttpl
cmovns
stc
push
push
jmp
cmc
shrl
daa
mov
lock
or
cli
add
pop
shr
push
jge
dec
mov
lret
daa
loop
loope
sarb
add
adc
cmp
jp
push
cmpsb
js
inc
mov
or
addr16
cs
or
test
cmp
mov
icebp
stos
xchg
lea
incl
fwait
subl
inc
nop
push
adc
imul
lahf
pop
adc
mov
shrl
mov
pop
ret
mov
or
fsubl
push
adc
inc
add
pop
lods
mov
shr
mov
cwtl
add
arpl
dec
cmp
fidivrl
xchg
loopne
out
and
arpl
subl
leave
addr16
mov
ss
sbb
mov
jbe
jmp
int
or
stos
jl
test
pop
lods
add
scas
xor
pushl
mov
mov
dec
jl
sarl
loopne
inc
stc
mov
mov
fisubs
dec
aaa
push
mov
ret
outsb
clc
mov
sbb
adc
xor
adc
adc
int3
rolb
jno
dec
sub
in
fcompl
aad
stos
and
mov
sbb
pop
and
cmp
repnz
sbb
inc
imul
loopne
sbb
xor
outsl
ret
bound
inc
adc
les
pop
push
jo
cmp
iret
out
and
mov
mov
jns
rcrl
shrb
stos
cld
je
mov
mov
sub
into
clc
or
mov
jbe
imul
pop
cs
sbb
gs
inc
repz
test
fwait
pop
imull
mov
not
out
popa
sub
jns
lds
push
bound
arpl
xlat
shlb
or
add
lea
push
and
or
and
push
aas
and
andb
ljmp
jmp
fwait
cmp
jb
negl
mov
inc
xor
aam
out
das
cmp
pushf
and
pop
sbb
nop
in
leave
ja
sbb
scas
mov
adc
enter
fyl2x
sbb
mov
push
imul
outsl
adc
pusha
sti
sub
jg
shl
xchg
or
andb
icebp
out
dec
out
arpl
pop
loope
daa
sub
adc
movsl
and
fcomps
stc
scas
add
dec
mov
mov
cmp
sbb
sbb
push
xor
fldenv
lcall
rorl
cmc
rcrl
mov
sub
dec
in
mov
add
dec
test
fstps
cs
xor
and
lahf
dec
dec
sub
xor
mov
iret
lahf
xor
aaa
mov
push
xchg
pop
jne
sarb
adc
out
in
pop
lods
or
push
sahf
lahf
fildll
cmp
xor
in
or
dec
mov
cmp
dec
mov
rorl
pop
outsl
scas
jg
adc
lock
fidivl
xor
and
mov
stc
jp
cwtl
adc
loopne
inc
in
push
xlat
xor
adc
add
push
jg
xor
ds
loope
inc
xor
enter
inc
and
nop
popf
xchg
ret
inc
lock
test
cmc
jbe
xchg
push
cld
hlt
shlb
xor
pop
test
ficoms
addl
push
push
push
sub
bnd
and
mov
xchg
or
pop
xchg
in
sbb
and
jne
dec
jmp
jg
out
jo
sub
xor
aaa
jle
pop
lcall
cmp
jbe
les
or
mov
jb
and
pop
movsl
dec
mov
cli
mov
in
shrb
inc
ret
adc
es
pusha
lret
jne
jmp
stc
xchg
dec
mov
sub
xchg
shrb
out
inc
fwait
daa
dec
jno
or
fdiv
imul
ret
bound
aad
push
mov
cli
and
call
inc
pop
popf
into
ret
jge
sub
or
jb
and
xchg
movsb
sub
imul
mov
jns
pop
fwait
insl
sbb
mov
pop
pop
jmp
addr16
les
dec
in
jae
mov
je
mov
fldt
push
daa
dec
mov
ret
xchg
test
xor
stc
pop
in
je
sbb
sub
test
repz
dec
lcall
cmp
jnp
xor
lahf
xlat
sbbl
pop
fbld
push
push
cmp
pop
xchg
cltd
imul
loope
dec
leave
push
aaa
inc
rcll
stc
je
dec
cmp
cmpsb
xchg
cmp
inc
mov
jp
in
dec
scas
sbb
adc
psubusb
push
test
cld
rolw
sub
inc
add
push
call
hlt
loop
mov
add
call
cmpsl
mov
stc
and
or
or
popl
lret
imul
flds
outsb
popf
lods
rcll
cltd
pop
in
test
jbe
enter
leave
pop
mov
add
dec
lcall
add
add
ds
add
and
lea
pop
jp
sub
rclb
sub
test
and
icebp
jbe
aam
and
aad
je
mov
loope
mov
xor
icebp
push
repnz
or
inc
mov
and
int3
pop
popf
fistps
icebp
add
mov
mov
cmp
mov
loopne
les
insl
inc
fsubs
pop
out
faddp
cld
push
mov
gs
add
bound
rcl
inc
mov
push
cli
jg
inc
or
pushf
pop
mov
aam
xchg
leave
aaa
ffree
insl
adc
sub
and
inc
sti
sbb
xchg
sti
pop
shrl
fadds
lret
test
loop
hlt
fucom
clc
jo
mov
ds
cmp
rorl
cs
aas
adc
push
dec
pusha
in
sub
or
push
fiaddl
xor
mov
and
dec
push
sbb
ret
mov
ja
inc
movsl
filds
or
jne
and
test
push
das
pop
inc
xor
fadds
pop
repnz
inc
xor
popl
pop
mov
push
mov
mov
pop
push
lcall
nop
adc
test
xchg
xchg
inc
pop
inc
lret
jg
out
gs
push
mov
mov
ljmp
mov
leave
daa
aaa
lods
mov
dec
push
mov
bound
mov
cmp
lcall
dec
push
fimull
js
push
add
cmpsl
and
cmp
aas
mov
adc
sub
xor
popa
ja
fdivrl
mov
push
rep
dec
jne
and
jle
icebp
inc
cmp
adc
or
sbb
pop
sahf
mov
ret
xchg
add
xlat
je
pop
fcomp
in
pop
add
sub
pop
insb
stos
mov
adc
mov
dec
adc
jmp
bsf
and
jl
lods
jno,pn
popf
cmp
and
outsl
addb
sbb
pop
dec
fists
push
sbb
mov
mov
and
punpckhwd
subl
pop
aas
push
cmp
loop
mov
mov
mov
push
mov
stos
lret
mov
nop
xchg
sub
hlt
dec
inc
cmp
inc
jle
mov
sub
pop
or
adc
call
sbb
xor
enter
and
enter
sbb
add
jae
cmp
sub
leave
xor
pop
inc
xchg
cmpl
fidivl
test
dec
mov
sbb
mov
cmp
ja
fisubrs
jbe
aaa
mov
jbe
btr
imul
push
inc
rorl
fidivrl
dec
fadds
lock
xor
adc
shl
and
out
lret
loopne
jno
sbb
outsl
sub
outsl
mov
jg
jle
and
cltd
daa
jp
cltd
fisttps
aaa
loopne
inc
lods
or
jecxz
sbb
xchg
push
mov
movsl
push
pop
outsb
sub
pop
push
notl
mov
xchg
in
inc
xchg
adc
inc
fadd
call
dec
sti
fmuls
ret
and
sub
xchg
jle
pop
cmp
movsb
push
mov
andl
fsubrl
pop
je
rcr
mov
xchg
repz
hlt
sub
out
or
xchg
push
mov
ss
les
or
add
xchg
sbb
push
dec
inc
hlt
rorl
adc
dec
sbbb
push
push
ss
sti
push
lods
pop
hlt
addr16
or
into
jp
divb
adc
cs
dec
cmp
sarl
push
fsubs
cmpsb
pop
loope
stos
imul
mov
mov
pop
mov
inc
out
out
sub
lahf
add
movsl
push
sbb
jg
sahf
bound
cmc
jp
daa
popf
cmp
lods
and
mov
imul
or
out
dec
adc
sbb
repz
cmpsl
jecxz
pop
xor
das
scas
jl
mov
mov
sti
fcos
inc
cmc
xchg
dec
lock
jg
data16
shll
clc
mov
push
mov
in
sub
ljmp
sbb
push
xor
mov
in
fucom
xchg
xchg
fimuls
mov
push
fs
jns
int3
push
repnz
xor
test
cmpsl
adc
sbb
jbe
cwtl
mov
rcll
fs
fs
jne
fs
in
jg
or
dec
test
pushf
fistpll
mov
mov
mov
or
std
icebp
push
aam
inc
data16
jp
adc
aaa
push
jo
pop
outsl
rolb
test
inc
sbb
shlb
adc
scas
clc
stc
mov
adc
cmc
inc
js
xor
xor
xor
jge
xchg
cwtl
cwtl
dec
rorb
in
fiadds
push
les
jbe
rolb
cld
sbbl
cmp
scas
int
lahf
daa
fucom
xchg
xchg
test
and
sahf
rclb
adc
sti
push
cwtl
xchg
mov
sbb
pop
mov
jmp
iret
xchg
call
jecxz
incb
mov
fs
inc
xchg
cld
cmp
push
roll
jo
push
stc
add
xchg
sub
sbb
or
mov
mov
scas
in
mov
adc
sbb
xor
imul
jbe
sub
jle
xor
add
cs
pop
gs
call
push
xchg
mov
ds
rorl
push
push
jecxz
leave
xchg
rorl
mov
or
xchg
sub
cmpsl
clc
rol
in
and
lret
and
lret
ret
mul
daa
push
ja
pop
push
clc
jle
jno
rolb
xor
test
jge
xor
ja
dec
data16
insl
and
or
mov
and
push
divl
push
push
push
jge
arpl
inc
imul
ja
mov
outsb
cmp
adc
and
pop
faddl
fldcw
shll
pop
pop
sbb
mov
int3
pop
hlt
sarb
fsubs
outsb
daa
or
push
stos
lahf
xchg
pop
adc
out
out
mov
test
pop
insl
jge
dec
outsl
aam
xchg
inc
xchg
outsb
mov
inc
push
inc
add
mov
dec
or
out
in
popf
dec
pop
xchg
jae
jbe
les
or
add
popa
mov
inc
mov
repnz
aam
xlat
mov
and
xor
push
andl
push
rclb
xchg
jp,pt
ds
adc
or
jnp
add
sbb
mov
cmpsl
fadds
scas
pusha
aaa
andl
fs
lock
mov
imul
pop
mov
lret
mov
sbb
xchg
add
imul
jno
add
aad
cli
cltd
dec
adc
mov
sub
loop
xchg
out
cmpsl
fbld
les
mov
in
mov
inc
call
imul
jo
out
mov
mov
xchg
lret
sub
test
jbe
scas
pusha
cmp
faddl
mov
icebp
jae
inc
jbe
hlt
xchg
fwait
ret
sbb
fiadds
add
add
popf
jne
inc
adcb
xchg
inc
cmp
fstpl
xor
adc
xor
or
movsl
and
inc
jae
sub
push
sub
aas
pop
fcomp
loopne
call
jmp
pushfw
and
shrb
adcb
jo
mov
adc
insl
les
pop
daa
outsb
fwait
or
cmp
mov
fdivs
lret
cmc
in
mov
imul
mov
sbb
cld
aad
sbb
scas
xchg
mov
xchg
xor
push
dec
or
push
inc
les
jae
in
jmp
sub
imul
add
jle
ret
and
out
mov
dec
stos
cmp
dec
test
negb
add
pop
out
sti
cmp
push
adc
xor
sbbb
cmp
xchg
cwtl
jbe
fists
sbb
sbb
iret
decl
cs
pop
xchg
mov
aam
jne
es
and
mov
les
ss
jne
sub
add
cmp
xor
xor
cmpsl
test
jno
mov
pop
adc
xchg
mov
addb
pmullw
sahf
jmp
aad
insb
nop
jns
xor
jmp
bound
js
nop
enter
cli
cmp
and
mov
fcmove
or
jns
movsl
cmpsb
aaa
das
cltd
mov
daa
or
das
mov
ja
pop
adc
add
adc
sbb
sub
mov
imul
sub
sti
insb
push
addb
stos
mov
sbb
daa
push
xor
cmp
jnp
repnz
xor
stos
cld
shll
in
adc
movsb
in
pop
lods
shll
cli
dec
call
pop
push
pusha
ss
in
mov
xor
pop
popf
xchg
clc
jno
dec
insl
jecxz
dec
sub
mov
nop
fadds
sbb
lock
sub
pop
in
test
sbbl
arpl
movsl
inc
gs
pusha
int
and
and
mov
in
outsl
cli
mov
xor
mov
mov
sub
insb
jns
into
sbb
clc
aad
stos
cmp
test
jge
fiaddl
sub
push
add
or
stos
inc
xor
ret
sbb
and
pop
push
data16
mov
xor
adc
xor
push
sub
mov
call
sbb
push
cmp
push
pop
inc
shll
lods
out
sub
int
test
add
fwait
lret
inc
addr16
daa
cli
add
enter
adc
xchg
sub
sarl
jbe
ljmp
ds
and
mov
xchg
scas
nop
or
mov
clc
xorb
roll
sbb
xchg
aad
dec
cltd
and
jo
data16
insl
pop
xor
pop
mov
pusha
stos
xor
mov
ret
call
xor
pop
sbb
adc
imul
add
and
push
cld
mov
fsubrs
add
xchg
adc
pop
pop
mov
dec
adc
adc
sbb
int
push
dec
gs
push
add
iret
aad
jmp
je
push
mov
jb
xor
mov
jg
ret
das
fs
and
mov
aad
cmp
cmp
or
add
fs
cmp
lea
push
cmpsb
fimuls
sbb
lods
lret
add
mov
jecxz
addb
movsb
sub
movsb
push
push
movsb
pop
xlat
lret
gs
push
outsb
divb
stos
pop
xor
xor
xor
xchg
sahf
in
mov
out
xor
test
repz
add
repz
das
and
ss
adc
sub
jge
adc
filds
lds
push
inc
stos
mov
jge
jo
mov
cmpsl
xor
js
sub
mov
daa
jo
aas
mov
ret
mov
pop
adc
sub
push
daa
mov
mov
xchg
xchg
xchg
inc
idivb
pop
mov
sub
lret
sub
pop
mov
mov
scas
les
xor
loopne
jmp
loopne
xor
subb
fildll
dec
xorb
out
addr16
sub
xlat
xor
add
jmp
lret
fildl
mov
lea
mov
stos
mov
popa
adc
mov
mov
push
mov
iret
popa
fsubrl
pushf
jle
mov
cwtl
lds
mov
sub
sub
mov
pop
mov
lret
fcomps
jbe
inc
adc
cmp
jno
or
jl
icebp
pop
sti
inc
lret
dec
aaa
and
sarl
dec
adc
je
sbb
inc
sbb
lods
lods
push
rorl
out
jg
loopne
push
add
sbb
sarb
cmp
nop
jnp
test
xchg
sbb
pop
pop
cmp
je
cwtl
cli
jge
jns
in
decb
fadd
xchg
push
dec
jnp
mov
popf
rcrb
fucomi
addr16
popl
lods
das
test
mov
dec
cmp
imul
jno
bound
inc
out
nop
out
cmp
cmpsl
insb
mov
xor
inc
aaa
ret
and
in
inc
pop
or
loopne
into
cwtl
add
cld
movsb
add
dec
cmp
divl
mov
insl
and
imul
jns
roll
xchg
shrb
popa
adc
data16
dec
icebp
repnz
jle
pop
negb
mov
testl
dec
ffree
xor
and
fistpll
mov
pop
add
sbb
addb
rol
jg
incb
inc
mov
shlb
fadd
sbb
dec
push
push
out
or
xor
fidivrs
and
outsl
jne
jle
mov
push
hlt
inc
or
pop
lods
inc
shl
jp
inc
fists
js
cmc
iret
mov
mov
pusha
cltd
sti
inc
pop
xor
and
fdivl
lods
mov
push
mov
sbb
fadds
xchg
nop
nop
cmpsb
imul
pop
jge
test
push
cmp
fdivrl
mov
xchg
iret
dec
dec
movsl
lock
cmpsb
sahf
jae
movsl
cmpsl
ja
decl
mov
push
scas
cwtl
push
pcmpgtb
out
daa
out
cltd
lods
cmp
nop
jl
pop
cli
jns
inc
cld
les
andb
pop
push
loop
int
inc
lahf
popa
push
xchg
pushf
or
popl
std
es
mov
ficoml
or
xchg
dec
jp
fbld
movsl
xor
cs
out
mov
mov
jmp
fmul
adc
fnstenv
sbb
mov
incl
pusha
jp
lret
popa
mov
lahf
xchg
or
movsb
jle
mov
mov
inc
bound
xor
sbb
jg
inc
idivl
iret
je
idivl
push
push
jg
stos
sub
clc
lods
push
scas
aas
sbb
fs
dec
sub
aam
xchg
cmpsb
inc
enter
inc
mov
and
rcl
test
shll
ret
repnz
ds
test
pop
mov
jns
ficoml
jecxz
stc
hlt
push
add
pop
outsl
mov
in
pushf
mov
xchg
xchg
or
pop
jle
jmp
aam
pop
cwtl
scas
and
arpl
adc
mov
and
into
push
leave
int
ljmp
mov
push
cmc
clc
scas
mov
shl
dec
imul
pop
mov
jno
mov
cmpb
in
xlat
and
push
fiaddl
fildl
mov
push
aaa
mov
jno
add
test
adc
xor
pop
in
pushf
lret
adc
push
lldt
cmpsb
push
pop
fucom
push
cmp
pop
nop
ja
iret
rorl
nop
xor
jbe
or
push
xchg
mov
test
shlb
and
cmp
lods
mov
add
mov
xchg
sbb
repnz
mov
lods
int3
repnz
rcr
stos
cmp
xorl
into
add
fildll
sbb
jb
xchg
sub
and
or
sbb
or
jbe
and
adc
mov
outsl
movsb
push
lcall
mov
xchg
cmp
jmp
dec
push
xchg
inc
xlat
sarb
iret
jb
mov
adc
xor
imull
aaa
lcall
fisubs
es
loop
out
insb
pop
movsb
jg
lock
xchg
mov
and
jle
dec
jns
cs
jo
les
popf
mov
inc
and
sbb
push
xor
add
out
stc
sub
jb
stos
pop
dec
fimuls
dec
cmp
repnz
xor
insb
in
mov
mov
iret
mov
cld
mov
inc
inc
gs
cld
outsb
pushl
add
arpl
decb
ret
into
mov
mov
std
iret
bound
adc
ret
push
pusha
inc
pop
jne
ret
scas
in
aaa
imul
sub
in
mov
xchg
mov
xor
in
jbe
push
ret
les
adc
jb
aaa
fistpll
xorb
loope
or
andb
sub
ds
xchg
cltd
and
push
insb
imul
xor
mov
je
push
push
cmc
mov
repnz
xchg
jge
mov
cltd
push
mov
dec
lcall
or
iret
int
clc
xchg
sub
or
adc
enter
cmpsb
pop
jo
pop
push
cmpsb
fildl
xchg
push
xor
in
xor
mov
sahf
jbe
sbb
addr16
xorl
sbb
mov
xchg
jae
outsl
lahf
test
imul
or
jo
dec
sbb
jns
icebp
lret
bound
addr16
mov
xorb
int
mov
jle
rcrl
mov
sarl
dec
cmpsl
or
mov
or
pop
sbbl
repnz
scas
or
ret
bound
sbb
dec
into
sub
pop
leave
iret
inc
mov
in
jae
xchg
dec
adc
stos
fs
daa
fistps
jp
pop
jl
lcall
test
fs
sbb
jb
shlb
andb
movsb
and
jae
pop
in
movsb
das
insl
pop
aam
push
icebp
sbb
dec
xchg
mov
adc
sub
bound
push
xchg
push
pop
frstor
into
pop
out
popl
jle
mov
je
push
inc
or
daa
inc
push
cmp
or
sarl
sub
lcall
fcompl
lods
sub
sti
mov
sahf
inc
popf
scas
addb
cmc
cmp
imulb
xchg
mov
push
or
and
loope
xchg
inc
mov
lods
mov
ret
adc
paddd
or
nop
mov
gs
sti
testb
repz
push
pop
ds
lock
lahf
mov
neg
bound
sarb
mov
sbb
inc
push
xor
mov
xchg
fisubrs
loopne
jl
ljmp
ret
std
mov
push
inc
lcall
sub
xor
jnp
pop
mov
and
or
fbstp
rorb
pop
shrb
mov
outsb
aaa
dec
xchg
rol
sti
lea
xchg
jle
mov
jbe
sar
repnz
jmp
push
fdivl
xorl
adc
push
sbb
lret
cli
xchg
ret
fabs
fnstcw
stc
push
adc
cmp
sub
sbb
rclb
mov
popa
shrl
sub
fs
dec
icebp
sbb
cltd
push
jl
mov
je
imul
dec
movsl
mov
mov
fsub
push
mov
inc
cli
out
rclb
enter
mov
mov
mov
in
push
test
stos
fs
addr16
jno
into
and
rolb
or
mov
mov
or
xchg
das
lea
add
je
pop
jp
nop
and
fimull
ficoml
sahf
insl
sbb
icebp
repz
imul
loop
push
mov
sub
cmpsb
scas
push
iret
sbb
or
test
add
xorb
popf
xor
mov
mov
cld
mov
jns
shll
cltd
scas
pop
sahf
imul
fsts
push
rcl
stc
push
vunpckhpd
cmpsb
mov
call
dec
aad
jns
ja
movhlps
mov
mov
mov
popf
loope
pop
sti
rolb
push
scas
mov
jb
inc
daa
xor
insl
or
std
push
sub
lds
mov
xor
xor
jl
orl
xchg
sub
rorl
xchg
xchg
push
mov
and
les
push
std
xchg
sub
imul
fwait
aam
xchg
inc
ret
push
and
adc
and
inc
leave
lds
and
dec
lock
xchg
push
or
pushf
daa
inc
mov
fildll
test
push
dec
add
mov
dec
xchg
add
inc
std
xor
shrl
subb
xor
sbb
and
xchg
sbb
jmp
or
movsl
std
in
lock
aas
or
dec
ljmp
cmp
sub
xchg
in
push
imul
push
std
cmpsl
lret
push
dec
cmp
gs
setae
pop
enter
mov
inc
addr16
ss
pop
in
adc
outsl
pop
iret
adc
out
fwait
mov
mov
insl
xchg
lea
jnp
imul
jo
std
pop
add
push
or
daa
mov
add
and
jne
jle
add
cmp
xor
scas
outsl
xor
into
into
clc
enter
sbb
mov
sahf
sbb
bound
xchg
xchg
mov
out
mov
mov
xchg
pop
outsb
test
sarb
jne
fisttpl
xchg
pop
xor
sub
jns
mov
mov
cli
stc
lods
cmp
xor
lock
into
imul
adc
decb
sub
ret
pop
dec
in
sbb
xchg
mov
mov
pop
aaa
bound
call
scas
mov
fs
pop
adc
jo
mov
mov
rolb
inc
data16
push
imul
jo
call
jo
dec
icebp
sar
pop
pop
cmp
idivl
shrl
out
iret
loopne
jge
and
or
xchg
jbe
bound
pop
ja
inc
xchg
xchg
cltd
imul
mov
and
add
mov
cmpb
sbb
and
imulb
bound
fistps
xor
lock
bound
movsl
add
xor
add
pushf
pop
movl
jg
scas
pop
xchg
cmp
in
nop
gs
push
nop
cmpsb
fnstsw
std
sub
mov
adc
sbb
in
fiaddl
cmp
pop
pop
sub
insl
mov
jecxz
ja
pop
sbb
test
ss
mov
fsubl
lds
ficomps
jae
push
sti
jne
jg
push
movsl
loop
fwait
mov
aam
repz
popa
nop
ljmp
sbb
or
aam
loopne
xchg
xchg
jge
mov
call
leave
daa
lahf
outsb
mov
jnp
xor
sar
fwait
sbb
jp
jecxz
sub
jl
jne
and
lds
sbb
out
cmc
jae
jmp
push
mov
inc
cmp
xor
in
enter
inc
jnp
sbb
mov
xchg
int3
inc
mov
sub
out
xor
dec
mov
adc
push
repz
xor
pop
pop
arpl
mov
mov
lods
mov
lcall
inc
or
fwait
push
mov
stos
scas
nop
jle
unpckhps
xchg
mov
pop
cmp
adc
enter
mov
or
inc
mov
subl
sub
inc
sbb
adc
mov
xchg
push
mov
mov
inc
sbb
fcmovb
pushf
clc
inc
adc
xchg
mov
lock
push
mov
mov
sub
jmp
imul
inc
hlt
je
das
loopne
sbb
in
adc
or
push
es
scas
aaa
mov
pop
popa
dec
mov
adc
sahf
cld
nop
into
stos
cs
xchg
mov
jne
sbb
fcomp
mov
dec
mov
test
fistl
dec
gs
dec
adcl
mov
adc
cmp
mov
lock
dec
and
and
das
js
xor
aas
mov
mov
mov
lret
lods
jle
xor
xchg
lcall
jb
adc
jp
sub
idiv
fadd
jecxz
gs
mov
les
stos
pop
mov
or
push
sti
pop
in
sbb
das
mov
jo
popf
xor
ret
sar
dec
sti
mov
pop
ficoml
xchg
mov
jne
and
push
fucomi
nop
inc
push
sbb
mov
stc
cmp
shlb
inc
aad
aam
inc
push
cmpsb
mov
icebp
pop
add
fldt
addl
popf
es
rorl
in
jb
xor
stos
mov
cmpsl
pop
adc
fmul
pop
inc
cmp
icebp
mov
push
rorb
js
add
xor
ja
cmp
popf
xchg
fistpl
rclb
fsts
mov
mov
leave
sbb
pop
ret
sub
mov
adc
push
popf
sbb
in
jg
push
xor
inc
xchg
add
mov
and
fnstenv
nop
inc
mov
xchg
cmpl
or
or
mov
rcr
sahf
pop
imul
iret
cltd
jae
mov
repz
outsl
lods
xchg
or
add
or
add
in
fwait
and
hlt
or
sub
int
jo
xorl
lret
mov
adc
cmp
sub
shrl
in
sub
out
add
loop
movsb
rorl
xor
shll
loop
cltd
das
lret
sbb
popf
cs
shrl
ret
int
mov
rolb
push
gs
fmuls
push
adc
inc
mov
cmc
inc
shl
jl
push
ficoml
rcrb
pop
cmpsb
sub
lds
sbb
shr
mov
pusha
cli
stos
movsb
popf
jne
shlb
adc
adc
lods
cmp
les
pop
out
xor
in
ret
scas
mov
pop
mov
lods
dec
mov
pop
inc
add
and
inc
out
push
and
push
pop
jns
mov
jno
addb
shll
xlat
jge
arpl
fisubrs
ja
popf
mov
push
add
sub
ljmp
int3
mov
shl
andb
lods
jne
push
mov
xlat
sub
cmp
mov
mov
jecxz
mov
mov
mov
out
and
out
imul
sbb
in
leave
pop
mov
push
fsubs
out
cmpsb
push
ret
adcl
mov
mov
mov
inc
lods
xchg
nop
std
in
shlb
js
xchg
push
push
push
dec
xchg
xchg
andb
adc
and
jbe
inc
dec
jg
data16
add
pop
outsb
rorb
or
enter
push
sub
sub
int3
mov
test
outsb
mov
cmp
cli
dec
adc
shlb
hlt
pop
mov
xor
call
sub
pop
push
lcall
cmp
je
or
into
stos
cmp
push
aaa
fs
sbb
iret
loope
lcall
stos
adcl
lahf
movsl
pop
jmp
pop
pop
xor
mov
mov
inc
pop
dec
and
popa
or
cmp
cmp
movsl
jmp
inc
dec
dec
add
in
sarb
arpl
jecxz
xchg
mov
mov
push
daa
jle
psraw
mov
nop
aam
popa
int3
lock
or
push
cmc
push
add
xor
out
aaa
les
xchg
inc
daa
ljmp
fcmovnb
pop
and
and
lahf
pop
out
add
inc
cmp
push
push
jae
xchg
jb
test
pop
and
test
rcl
lret
inc
cmpsb
pushf
loopne
mov
js
xor
dec
jne
add
dec
out
pop
test
mov
hlt
jno
xchg
xor
mov
xor
out
cmp
mov
pop
dec
gs
insb
lock
out
and
mov
lds
xor
jae
cwtl
dec
lods
dec
or
or
add
cltd
fs
xor
jo
jecxz
gs
add
xor
sub
or
add
inc
xor
jnp
dec
and
in
cmp
mov
xchg
jb
shll
pop
cld
je
in
jp
test
je
mov
pop
sbb
pop
sbb
insl
dec
into
loope
inc
rorb
sbb
pop
fiaddl
flds
lock
in
mov
sub
cmp
jb
sbb
sbb
jo
and
sbb
or
xor
mov
jno
bt
popf
and
cmpsl
pop
fdivrp
out
mov
xchg
mov
cmp
sub
mov
and
push
outsl
sti
addr16
sbb
pop
sbb
dec
mov
pop
shlb
ret
and
std
pop
lods
mov
sub
inc
nop
cmpsb
and
inc
mov
popf
pushf
jo
lcall
dec
lods
cli
aam
dec
bound
mov
cmpsb
outsb
pop
inc
aad
and
int3
lods
jmp
jbe
or
loopne
movsl
lock
fs
fcoms
dec
xor
imul
int
or
mov
push
or
imul
lahf
jl
mov
fsubrl
cmc
xchg
insl
mov
cmc
add
aaa
lret
pop
test
or
fs
lret
push
js
ds
mov
testb
imul
mov
lcall
or
add
mov
sbb
jae
fstpt
mov
and
mov
scas
in
inc
pop
imul
fbstp
hlt
ficoms
sub
fwait
inc
shrd
or
lcall
ss
jbe
test
data16
mov
negl
pop
aad
jae
mov
mov
repnz
push
jmp
inc
dec
loop
add
fbld
push
test
xchg
out
or
pushl
dec
inc
insl
sbb
pop
mov
jb
adc
mov
mov
pop
orl
add
lods
jge
les
fwait
cltd
and
mov
mov
mov
fcmovnb
dec
sub
test
adc
cmc
xor
sub
cmp
adc
mov
ret
mov
aas
xorl
pushl
insb
imul
adc
stos
dec
push
sub
js
adc
inc
mov
out
xlat
mov
cmp
fiaddl
jo
popa
mov
and
insb
and
jo
inc
stos
cwtl
xchg
adc
sub
jp
inc
push
bound
pop
push
mov
inc
das
loop
js
dec
cli
fwait
cld
fs
sub
or
insb
cmp
mov
push
xlat
in
lahf
stos
push
ja
push
and
pop
dec
mov
cmp
aas
sti
aas
cmp
fwait
addr16
outsl
cmpsl
mov
mov
xor
mov
shrb
add
fadd
rcr
or
into
pop
push
push
sub
or
and
adc
adcl
mov
xchg
lods
xchg
data16
mov
jno,pn
jb
mov
icebp
scas
test
std
push
insl
mov
and
mov
xchg
add
and
pop
call
jmp
or
dec
mov
jno
mov
test
push
icebp
repz
or
dec
or
imul
idivb
loope
insl
testl
xor
nop
jb
arpl
in
stc
push
outsl
pop
adc
inc
cmpsb
cmpsb
and
rcrb
jge
or
cld
clc
iret
fnstsw
lret
out
dec
lret
into
push
loope
or
cmp
inc
mov
adc
lock
aam
mov
jmp
mov
clc
cld
add
repnz
pop
fcom
sbb
adc
xchg
mov
jb
xchg
xor
and
xchg
jmp
push
inc
sti
push
xchg
scas
push
sbb
aad
dec
fcomps
testb
pop
or
pop
dec
pop
xor
or
cli
or
dec
in
sub
inc
repnz
je
fldl
aaa
nop
xchg
mov
dec
jns
jge
push
int3
mov
jbe
or
mov
into
pusha
push
into
inc
inc
sub
push
jb
std
test
lds
jae
dec
push
push
mov
int3
sti
subl
pop
or
shrb
push
fisubrs
arpl
mov
pushf
add
xor
fldt
pop
out
cmp
mov
sti
mov
stos
arpl
pop
pop
or
pushf
and
sub
out
mov
xchg
popf
mov
mov
dec
inc
push
loope
loopne
or
mov
ret
stos
es
and
sbb
cs
roll
add
out
loope
fcomps
inc
cwtl
out
movl
idiv
inc
mov
and
adc
lods
or
mov
inc
or
sub
loope
faddl
sbb
dec
je
push
in
mov
push
hlt
cmc
fsubs
mov
jo
stc
add
cmp
add
fldl
push
push
outsl
xor
or
outsb
testb
subb
int
push
jno
stos
jo
mov
adc
mov
pop
pop
inc
cmpsl
mov
dec
push
sbb
mov
mov
je
popf
xor
mov
dec
jne
and
mov
out
mov
or
outsb
call
or
dec
imul
repnz
scas
push
pop
adcb
jecxz
mov
aas
or
lock
into
dec
mov
ret
outsb
mov
mov
pop
jae
or
jge
mov
cld
lahf
push
shr
push
xchg
adc
dec
insb
xchg
pop
pop
mov
jmp
out
in
scas
decl
sub
dec
jmp
pop
in
lods
data16
mov
jg
jp
and
mov
loopne
pop
cmc
imul
cmp
roll
dec
repnz
dec
jnp
cmp
sub
add
add
insb
dec
jmp
pop
mov
dec
leave
mov
fucomp
inc
mov
mov
xchg
cmp
sar
jge
fwait
mov
xor
adc
inc
add
in
mov
enter
adc
ret
fcom
loope
insb
sbb
fcmovbe
mov
gs
xor
jb
cld
out
and
lods
and
and
int3
fistpll
push
shr
jo
cltd
ja
call
nop
pushf
es
xchg
mov
ret
mov
or
pusha
cwtl
cwtl
inc
and
into
push
lcall
filds
pop
cmp
cmc
cmc
and
fdivrs
add
outsb
loop
popf
xlat
xor
lea
test
jp
arpl
or
orb
aas
repnz
cs
incb
cmp
cwtl
hlt
lahf
mov
movsb
inc
int3
sub
and
or
inc
int
mov
movswl
flds
push
mov
jecxz
cmp
or
in
jle
iret
ljmp
xchg
adc
dec
mov
test
in
sbb
int3
add
cmp
and
and
or
inc
dec
mov
add
les
fistl
jb
dec
aaa
fdivrp
pop
mov
mov
jg
pop
xor
dec
mov
je
or
xor
rcrb
out
cmpsl
or
or
mov
ja
adc
pop
jg
mov
out
adc
jge
sbb
adc
rcrl
aam
mov
fs
into
sarb
cmpsb
or
hlt
clc
pop
popa
or
loopne
push
je
push
rcll
xchg
js
jecxz
adc
cmp
fstps
mov
mov
test
std
dec
fsubs
jle
jp
repnz
jl
movsb
and
add
xor
gs
or
mov
mov
and
inc
lock
mov
std
sub
xor
sub
inc
loop
inc
mov
dec
jae
mov
arpl
push
dec
addr16
mov
mov
sti
out
or
aad
dec
test
mov
negb
iret
jp
test
addr16
push
out
fimuls
mov
jnp
jg
movsb
scas
mov
test
in
imul
inc
popl
cmp
popf
movsl
dec
jae
lock
in
shll
in
adc
inc
popf
cmpsb
fisttpl
or
aaa
adc
outsb
xchg
or
xchg
jmp
enter
stos
mov
cmp
enter
jge
xchg
scas
inc
inc
hlt
push
bound
pop
lock
lock
sbb
xchg
xchg
jns
bound
scas
fstps
aaa
xchg
dec
jecxz
jl
ret
adc
outsb
xor
or
xchg
jnp
pop
xchg
cmp
shlb
rclb
xchg
pop
mov
cmp
xchg
push
iret
subb
repnz
jno
mov
or
lock
test
jo
cmp
sbb
loope
mov
pop
or
pop
sahf
repz
pushf
sbbb
xchg
nop
scas
outsl
icebp
and
jmp
dec
movsl
movsl
arpl
cmp
mov
ficoms
in
sub
xor
je
xor
repz
pop
insb
jae
lret
mov
push
dec
loopne
in
lahf
lret
sbb
call
and
adc
arpl
aam
stc
mul
filds
and
fdivrp
lahf
cmpsl
adc
add
xor
jp
mov
pushf
shlb
imul
lds
push
ret
jnp
outsl
scas
push
push
add
mov
add
iret
leave
jge
out
in
sarl
ficomps
js
je
loop
test
or
or
lret
icebp
and
insb
and
cli
aas
and
jbe
lds
push
sbb
and
mov
xor
call
mov
adc
mov
sub
movsb
push
cmpsb
test
lret
rorb
bound
jne
in
cmp
xchg
mov
dec
xor
dec
idivb
lods
scas
sahf
adc
or
jl
push
push
jnp
mov
ret
pop
or
shlb
adc
loop
inc
test
mov
add
std
imul
pop
lods
cli
pop
call
mov
in
cs
nop
adc
pop
das
and
jnp
loope
arpl
inc
aas
lcall
push
pop
nop
pop
mov
fbstp
pop
lock
mov
jne
dec
cltd
divb
sbb
dec
ss
push
xor
add
sbb
adc
in
repz
inc
xor
add
popf
out
push
cli
push
ja
loopne
xor
add
and
rcll
cmp
cmc
push
sub
push
cltd
or
sarb
movl
jle
loope
jno
sub
decb
pop
xorb
add
pushf
push
push
insb
lea
push
sub
lret
out
js
inc
or
sbb
std
dec
sbb
in
cmp
cs
jnp
add
push
pop
mov
fsubl
test
cmp
aam
sarb
js
lea
mov
setp
imul
add
sbb
and
dec
sbb
lods
fisubrs
inc
into
nop
push
inc
push
lea
out
xorl
jo
and
lods
jmp
addr16
repnz
test
add
xor
mov
add
fildll
cli
pop
pop
mov
mov
inc
cwtl
test
mov
in
fsubrs
int
js
inc
and
pop
add
pop
sbb
cmp
mov
mov
scas
hlt
xor
push
jp
xor
cmp
cmp
jno
mov
scas
lods
dec
lock
xor
into
cli
xchg
sbb
filds
xor
mov
sub
push
add
inc
loop
data16
xchg
nop
add
fists
fs
cmp
jb
jecxz
mov
push
imul
mov
inc
cli
add
repz
mov
jbe
push
adc
adc
mov
pop
mov
push
sub
inc
pop
sti
or
xchg
cmp
mov
dec
lea
sub
pop
es
add
cmp
inc
pop
mov
push
xlat
fmulp
nop
mov
cmp
jge
lahf
icebp
adc
adc
xor
rclb
mov
sub
mov
jge
fadds
int
or
loope
fnstenv
std
mov
ret
mov
addl
adc
repz
mov
nop
outsl
loope
xchg
les
adc
pop
adc
lds
mov
sbb
jle
xor
mov
push
mov
and
sbb
lock
in
dec
jns
push
jne
js
sub
mov
xchg
orb
mov
cmp
jo
lods
mov
sti
cmp
fcmovu
aad
les
movsl
jmp
pop
jno
cltd
jb
lock
testl
mov
mov
xchg
movsb
xchg
out
push
fcomps
test
das
dec
popf
mov
imul
je
lds
inc
stos
dec
jne
ret
das
jmp
mov
adc
js
jge
inc
lahf
mul
ss
insb
pop
and
movb
mov
lods
std
out
leave
sbb
and
sbb
push
stos
mov
cwtl
in
push
mov
or
and
adc
lahf
ror
in
inc
sbb
scas
enter
mov
jmp
lcall
adcb
stc
leave
mov
cli
adc
roll
imull
mov
mov
and
imul
int
inc
test
xchg
mov
sbb
sbb
mov
push
in
jl
hlt
xchg
sub
push
xor
cli
sbb
dec
or
adc
fwait
aas
aas
sub
lods
add
cmc
dec
ss
outsb
lret
popa
xchg
cltd
sbb
scas
push
movsl
out
adc
pop
imul
fadds
ficoml
jl
in
repnz
pusha
shll
out
dec
ja
scas
sbb
scas
xchg
enter
xlat
call
sub
sbb
xor
test
lcall
lods
movsl
push
xor
fld
mov
mov
dec
lods
push
fnstcw
push
inc
xor
popa
shrb
ret
add
icebp
fisttps
outsb
pop
inc
mov
arpl
bound
xlat
ret
mov
and
dec
cmp
mov
sub
test
data16
dec
out
iret
dec
loopw
or
pop
and
outsb
jnp
xor
xor
ficoms
lds
pop
jge
push
out
js
push
ja
pop
xchg
dec
lahf
sbb
stc
jbe
mov
xchg
add
sarb
push
mov
push
scas
mov
pop
testl
sti
add
add
jo
mov
lods
push
outsb
mov
or
mov
inc
or
lret
push
clc
mov
jnp
icebp
adc
fldcw
xchg
aas
insl
cmp
aas
in
ret
popf
aaa
cmpsb
ds
adc
in
inc
push
popa
lcall
push
inc
cmp
lea
inc
mov
les
shlb
and
loopne
in
jae
push
or
pop
cmp
mov
add
push
push
xlat
jno
sahf
je
movsl
ucomiss
and
aas
cld
popf
popf
dec
loope
xor
xor
out
xor
inc
test
jb
fucomip
out
cli
mov
ljmp
stos
outsl
jecxz
jo,pn
sub
std
lcall
or
dec
sbb
mov
inc
test
xor
fwait
into
or
out
leave
push
outsb
xchg
push
and
ss
rcll
pop
shlb
mov
scas
xchg
jbe
movsl
push
mov
sub
sub
pop
aam
fdivs
notb
shrb
xor
push
ja
or
out
mov
cmp
fildl
jge,pn
or
idivl
mov
loopne
xchg
cmpsl
adc
jnp
jl
inc
dec
cld
leave
xor
mov
out
jne
dec
and
out
imull
aas
popf
mov
outsl
loop
repnz
mov
testl
add
push
movsb
mov
push
push
je
gs
in
dec
insl
rorl
cmp
fwait
cmp
cmp
push
dec
push
into
lock
mov
dec
addr16
shl
lahf
dec
ja
scas
xor
sub
jg
mov
mov
jae
mov
out
cltd
scas
ficompl
aad
push
push
outsb
or
mov
rcll
xor
dec
dec
sub
movsl
push
sbb
mov
cmp
push
out
or
inc
fwait
inc
das
aad
in
insb
xchg
push
cmpsl
xchg
sbb
rorb
push
dec
mov
popa
xchg
int
fisttpl
adc
or
or
ljmp
imul
cmpl
in
pop
mov
mov
mov
lret
mov
out
mov
and
addr16
and
test
adc
clc
fbld
mov
sahf
es
mov
andl
xor
add
fdivl
outsl
fsubr
mov
mov
add
xchg
and
fidivrs
insb
jb
fcmovbe
iret
testl
nop
xchg
mov
in
jecxz
and
imul
out
pusha
out
ror
ret
movb
fwait
mov
add
into
push
jae
cltd
idivl
js
dec
push
jbe
adc
inc
jbe
bound
jmp
dec
ret
dec
ficoml
ljmp
daa
subl
cltd
repz
xchg
clc
mov
pop
movsb
lods
test
dec
scas
imul
popa
sub
sbb
cli
push
push
outsl
xchg
push
mov
cwtl
lcall
sarl
mov
shll
fnstcw
add
and
in
loope
aam
mov
add
into
sar
adc
cmp
push
cmc
push
mov
push
mov
jbe
lahf
sub
xchg
jecxz
add
mov
mov
sbb
lcall
sbb
fstps
sbb
xchg
cli
sub
scas
neg
frstor
xor
in
mov
fcomp
hlt
popf
pop
lea
test
adc
lcall
cwtl
and
pop
pop
and
dec
pop
fisubl
je
nop
ret
push
mov
push
lds
fistpll
inc
mov
adc
xchg
mov
xchg
cltd
dec
and
popf
cmc
dec
popa
cmp
xor
mov
rclb
int3
mov
test
dec
mov
pop
clc
add
aam
loope
push
inc
aaa
jp
mov
sarl
aaa
andb
jnp
inc
push
sbb
daa
and
cmp
bound
and
add
gs
in
inc
pop
dec
jnp
mov
arpl
sahf
sbb
jmp
xchg
mov
xlat
sub
sbb
and
test
in
xchg
das
mov
popf
or
dec
sbbl
push
add
getsec
loope
div
mov
xchg
xchg
or
dec
mov
push
fwait
sub
iret
hlt
jae
subb
lahf
clc
mov
lcall
jbe
pop
lods
int
xchg
jns
popa
mov
loopne
cld
mov
pop
dec
aas
popa
xchg
bound
stc
dec
lret
pop
icebp
add
lock
mov
outsl
stc
sbb
mov
or
icebp
testl
xor
mov
pop
ljmp
xchg
pushl
sbb
jae
test
xchg
cmc
and
shlb
sub
push
insb
fisttps
mov
addb
les
jbe
adc
sbb
push
lahf
add
addr16
mov
std
push
lock
sbb
or
std
lds
repnz
cmc
jmp
push
and
xor
mov
xor
das
jo
lds
sbb
cmc
adc
pop
sub
or
ja
adc
jbe
jg
add
cwtl
cld
pop
mov
lds
ficoms
shlb
and
lds
popf
out
iret
add
loope
push
dec
cmpsl
inc
jae
xchg
inc
add
stos
mov
mov
je
lods
lahf
jo
imul
inc
pop
push
cmpsl
les
xchg
lods
inc
sarl
notl
ljmp
into
mov
pop
mov
movsl
xor
lock
adc
inc
es
stos
adc
add
mov
push
ss
sahf
pop
loop
push
adc
mov
mov
cmpl
cmc
sub
dec
cmp
or
js
mov
in
adc
and
dec
clc
sahf
sbb
test
jl
lahf
sbb
rcrb
jg
mov
lods
and
mov
in
sbb
pop
sahf
std
mov
loopne
mov
mov
in
lahf
rcrl
out
popa
cmc
cmp
fwait
insl
jnp
or
imul
mov
push
out
sti
sub
fstl
out
cmp
call
ja
addr16
mov
es
mov
dec
and
lock
in
test
xchg
popa
loope
add
je
sbb
inc
aas
subl
or
add
and
sub
mov
sti
mov
cli
or
stc
inc
push
or
push
aad
dec
fstps
fdivl
mov
in
add
dec
addr16
outsl
push
sub
stos
push
rcrb
or
push
push
xor
popf
xor
scas
jns
outsl
pop
xor
aad
dec
lds
lock
cld
mov
shr
push
dec
fidivl
pop
mov
cmc
sbb
cmp
into
pop
mov
aad
inc
loope
cmp
aam
lods
mov
sbb
mov
jbe
iret
jecxz
mov
mov
jne
lret
pop
je
cmpsl
jecxz
sub
add
jge
xchg
pop
push
pop
in
sub
inc
push
push
les
es
push
nop
orl
frstor
out
push
pop
pop
jl
popf
sbb
je
jae
mov
clc
or
mov
pop
pop
pusha
gs
call
push
xchg
pop
jo
adc
jl
xchg
jb
gs
scas
mov
xchg
arpl
xchg
fs
addr16
mov
add
enter
pop
sub
dec
xlat
or
xchg
inc
xchg
mov
js
jecxz
clc
jns
mov
or
dec
out
mov
pop
mov
clc
lret
lods
outsb
sub
pop
add
lds
idiv
cli
cmp
nop
mov
push
repnz
pop
fsub
call
icebp
mov
and
sbb
mov
subl
int
xchg
pop
daa
imul
aam
lahf
or
lock
hlt
cld
mov
adc
inc
inc
out
pop
mov
test
jbe
clc
loope
subb
int
adc
loope
cmp
inc
jb
fimuls
scas
add
mov
out
repz
bound
in
gs
fxtract
fldt
loopne
mov
pushf
cltd
cmpsl
mov
arpl
das
pop
hlt
sub
cmp
fwait
add
inc
loope
xchg
xor
addr16
sbb
je
movb
jge
aas
sbb
cmp
fadd
xor
jb
out
jg
mov
jmp
pop
dec
idiv
stc
cmpsb
fisubs
pop
imul
cmpsb
fcmovnb
out
push
dec
lcall
inc
push
rcr
int
mov
enter
inc
out
mov
movsb
push
outsl
dec
fwait
imul
gs
mov
xchg
addr16
xchg
mul
push
testb
xor
jl,pt
mov
pop
loopne
mov
movsl
push
adc
pop
and
aam
inc
sbb
out
xor
and
in
xchg
insb
mov
mov
mov
dec
fbld
jge
adc
cmpl
xchg
leave
jb
cmp
ja
or
cmp
dec
jge
imul
cs
scas
int3
lret
xor
psubq
xchg
test
adc
push
jnp
mov
fcmove
ja
add
and
cmp
jl
inc
pop
out
mov
fwait
test
and
rcr
jl
jno
mov
add
adc
adc
and
stc
lea
pop
pop
adc
fsubrl
pop
and
sbb
lahf
popa
idivb
jae
loope
and
xchg
stos
loop
add
and
outsb
or
jmp
push
cmp
imul
hlt
lret
lahf
leave
adc
lret
add
inc
test
mov
je
pusha
inc
inc
mov
sbb
stos
pop
ja
mov
movsl
inc
enter
lock
into
xchg
bound
pop
aas
sub
mov
lcall
mov
fistpll
fwait
push
or
push
test
sti
lcall
cltd
rcrb
jl
jne
jge
push
mov
daa
iret
fmulp
lds
lahf
and
stos
clc
push
and
movsl
add
in
cmpsl
push
das
arpl
pop
mov
iret
fabs
mov
sbb
pop
pop
mov
pop
gs
call
dec
loop
les
dec
push
insl
shl
aam
stos
xchg
test
xchg
inc
dec
ret
out
fnstcw
cli
shll
lock
jle
inc
inc
into
rolb
xor
shlb
xchg
pop
jle
add
cmpl
mov
mov
adc
call
bound
dec
inc
mov
inc
cmp
push
push
decl
clc
cmp
mov
jmp
repz
daa
mov
xor
clc
push
and
mov
xchg
test
add
iret
ljmp
icebp
mov
sbb
mov
lcall
mov
sbb
fmuls
inc
push
and
fisttpll
das
mov
add
push
arpl
mov
mov
inc
sub
les
adc
mov
inc
pop
jmp
mov
ja
dec
lods
lret
pop
enterw
sub
dec
and
mov
div
jns
xor
jmp
movsb
gs
push
fdivrl
sti
pop
and
dec
add
sub
test
add
movsl
sti
cli
nop
mov
mov
mov
out
sarl
test
sub
dec
es
rcll
test
push
mov
or
into
lret
cmc
dec
fdivrs
in
aaa
arpl
popa
mov
inc
in
rcrl
push
cwtl
lods
push
cmp
lods
shll
jne
push
loopne
adc
cld
pop
mov
adc
sub
push
imul
xchg
rolb
jo
in
sti
push
inc
push
jmp
pop
jle
cmp
das
rorl
push
sbb
jo
and
sbb
movsb
adc
daa
sbb
icebp
mov
outsl
xchg
shrb
int
sub
or
in
icebp
mov
mov
jne
test
fcompl
mov
out
test
jge
mov
popf
xchg
jbe
mov
or
push
ret
jl
mov
mov
cld
out
add
inc
xor
cmp
xchg
mov
push
jle
mov
mov
imul
and
push
ret
lret
int3
cmpsl
fs
fcmovb
and
jge
js
outsl
dec
test
mov
mov
out
xor
fldt
call
xor
cltd
or
imul
test
aad
dec
out
loop
jb
push
mov
sbb
int3
jmp
push
xchg
pop
movsb
hlt
ficompl
add
rolb
shl
jmp
xchg
cwtl
hlt
rdtsc
dec
sub
adc
cld
pop
jb
mov
sub
push
mov
or
sub
pop
in
push
xor
cmpsl
cmpsb
das
rclb
sbb
loop
or
and
jns
mov
jle
cmp
out
cwtl
xchg
and
cmp
int3
sbb
jmp
stos
movsl
xlat
and
mov
mov
cmp
push
cmp
jo
fdivrp
notb
jae
lock
jle
add
or
jp
sbb
fisttps
mov
lods
sub
lods
gs
fildl
sub
mov
cmp
adc
cmpsl
jne
push
xor
xchg
aas
cmp
cmpsl
aad
mov
inc
mov
cmc
cmc
push
ret
in
or
cmp
jno
dec
add
js
jp
or
jnp
test
lock
test
cmp
std
call
push
loopne
and
cmc
mov
lods
nop
iret
cmp
fisttpll
repz
lds
adc
sub
push
out
andl
roll
mov
das
push
sub
or
repnz
rclb
xchg
sub
sub
mov
jne
aad
cmp
loop
mov
or
adc
out
std
sbb
jns
aam
ds
nop
jno
push
in
jae
cmp
push
sti
icebp
movsl
hlt
mov
mov
adc
lret
ljmp
pop
aaa
cmp
lds
adc
mov
gs
testl
inc
mov
movsl
int3
or
stos
sub
cmp
lods
mov
sub
pop
adc
iret
or
mov
jg
in
pop
cmp
add
push
fstps
cmpl
xchg
or
cs
mov
mov
ds
loop
mov
or
fsts
xchg
push
mov
xor
insb
pop
mov
rcll
jle
ja
jns
sbb
fsts
dec
mov
lahf
je
add
fldl
and
or
lret
inc
nop
data16
inc
dec
inc
mov
outsb
outsl
jns
out
icebp
inc
add
cs
and
out
fldt
pop
mov
out
xchg
jge
in
movsl
rcll
int3
pop
adcl
pop
popa
mov
push
mov
adc
inc
movsb
pop
nop
sbb
gs
mov
jl
add
addb
sub
add
cld
mov
adc
cmc
add
mov
lds
cmp
jge
jge
sub
stos
xchg
dec
nop
dec
push
aaa
dec
push
pop
xor
mov
mov
jmp
inc
inc
or
in
mov
cmpsl
inc
or
ja
inc
mov
jmp
adcb
ljmp
sbb
rcll
mov
repnz
pushf
decb
mov
push
cmpsb
add
cmp
cwtl
sahf
add
stc
mov
outsl
pop
cmpsl
cmc
mov
pop
cmp
je
lods
jg
add
hlt
int3
dec
or
mov
pop
mov
mov
fimull
out
shrl
xchg
jae
push
mov
leave
inc
mov
pop
data16
std
push
mov
push
mov
icebp
sysexit
mov
repnz
lds
mov
lock
jle
iret
jl
push
push
adc
sub
cmpb
mov
pusha
addl
test
pushf
jle
cmp
cmc
cmp
mov
daa
out
cwtl
or
mov
lock
std
push
rcrl
xor
cmp
movsb
add
rolb
xor
sbb
add
lahf
les
mov
imul
stc
dec
clc
xor
and
outsl
mov
mov
subb
jecxz
enter
jmp
cmp
push
flds
hlt
cmp
arpl
inc
in
or
add
leave
int
sar
leave
hlt
mov
daa
stos
imul
mov
or
repz
call
jg
insb
ret
pop
jmp
test
or
add
jle
dec
push
adc
xor
cltd
sbb
xlat
shlb
xchg
cli
scas
jae
xor
fcomip
or
push
xchg
push
les
add
rcrl
sbb
jp
pusha
lret
mov
lret
shll
repz
pop
sbb
xlat
je
push
jmp
inc
addb
xchg
es
rcrl
scas
cli
fadd
jp
scas
mov
xchg
cs
ror
mov
imul
mov
jnp
int
in
jno
imul
testb
sbbl
outsb
inc
push
and
sub
lods
sub
mov
fwait
stc
cmpsb
mov
out
and
or
jp
sub
add
std
and
and
mov
cmpsb
lea
and
cltd
jne
pop
mov
stos
jb
out
or
dec
loope
xor
inc
nop
cmpl
push
popf
jb
adc
jbe
in
aam
cmpsl
fldenv
sbb
inc
xchg
gs
cs
sbb
insb
mov
fiaddl
sub
adc
add
mov
push
xchg
and
mov
xor
add
xchg
and
shl
fcomps
xchg
in
shl
jle
aam
or
sbb
mov
adc
out
cwtl
daa
adc
mov
into
inc
decb
stc
adc
call
cmpsb
sbb
mov
xchg
cmp
push
push
mov
xor
mov
push
movups
push
jmp
push
popa
rolb
imul
out
inc
out
call
fcoml
jno
out
lahf
mov
xchg
hlt
xchg
out
shrl
add
xchg
xor
inc
and
iret
mov
push
iret
popa
xor
insl
xchg
adc
cmp
addr16
sarl
out
hlt
adcl
inc
xchg
pop
imul
mov
popf
pop
push
mov
ss
std
lods
xchg
out
fucomip
inc
sbb
mov
mov
inc
lret
mov
fisubs
hlt
cmpsl
push
fmull
imul
push
pop
repnz
mov
daa
xor
sub
inc
dec
std
roll
adc
loope
xor
cmpsl
call
aaa
leave
shll
xor
out
ret
pop
ret
jmp
imul
pop
shll
lcall
xor
cld
add
add
mov
xchg
sbb
sub
testl
push
mov
popa
sbb
repnz
aad
cmp
mov
add
jb
or
jnp
pusha
fs
xchg
pop
sahf
stos
sti
leave
jo
shll
inc
inc
stc
stc
mov
addr16
xchg
push
dec
adc
sbb
jo
dec
jecxz
and
jl
add
inc
enter
cmp
ds
hlt
push
mov
scas
cmp
sub
int
int
test
pop
lock
mov
jnp
push
xor
cmp
dec
cmp
jge
fstp
cwtl
push
mov
sbb
push
std
gs
lds
mov
and
les
int3
mov
sarb
xor
inc
out
in
jge
fwait
mov
xchg
clc
dec
sbb
fs
adc
fwait
pop
adc
jno
data16
jecxz
sub
lock
fidivl
push
fcmovne
add
popa
fistpl
es
sbb
stc
jo
loop
pop
xchg
aaa
lea
aaa
fbld
xor
push
cs
add
pop
inc
mov
mov
cmp
lock
fdivr
sahf
les
inc
fmul
loope
out
push
push
pop
in
jecxz
lock
inc
sub
test
test
stc
fldl
lock
out
ljmp
popf
cmpsl
push
sbb
enter
mov
leave
inc
repz
fmul
mov
push
orb
sub
mov
or
out
rsm
icebp
cltd
lods
jb
imul
dec
mov
popf
inc
in
fisttpll
cwtl
shll
cmp
sbb
inc
mov
pop
cmp
or
aas
inc
test
nop
repz
xor
push
mov
cmp
ljmp
sbb
mov
movsl
add
push
xchg
das
mov
sahf
and
pop
jae
xchg
lods
xchg
jecxz
daa
mov
cmp
cs
in
nop
jp
inc
or
cmpsb
mov
mov
mov
pop
mov
push
icebp
jo
xor
add
dec
push
imul
or
sahf
das
mov
dec
and
mov
incl
jl
jecxz
add
add
das
mov
std
jge
pop
sbb
mov
adc
cmp
lock
lock
pop
mov
imul
push
pop
inc
mov
std
lock
in
cmc
filds
pop
or
insb
push
repnz
loopne
xchg
cmp
jo
leave
adc
xor
xchg
stos
add
mov
stos
mov
jg
flds
insl
sti
sbb
inc
ljmp
lock
add
dec
fidivl
mov
sbb
xlat
cmp
fs
sub
mov
dec
dec
das
push
mov
cmc
cld
mov
sub
jo
into
loopne
or
hlt
and
jp
sub
mov
loop
or
int3
in
jb
jle
cmc
dec
fsubs
mov
loopne
idivl
mov
and
rorl
jle
mov
adcl
inc
imul
ja
cmp
add
aad
mov
daa
inc
adc
pop
movsb
pop
mov
pop
dec
fidivrl
out
in
push
cs
mov
loope
aam
or
adc
lea
stos
add
int
lea
push
clc
fildl
movsl
pop
sbb
dec
test
xchg
and
stc
stc
xchg
leave
dec
add
pop
or
and
pop
arpl
lods
imul
test
dec
fdivrl
xor
mov
xchg
push
xor
stc
jl
mov
sub
sub
cltd
insb
ror
xor
outsb
push
subl
mov
pop
push
inc
and
mov
sahf
jns
pop
sbb
mov
push
loopne,pn
movsb
push
fisubs
push
test
jecxz
out
dec
dec
sbb
enter
sub
out
push
fsubl
mov
xor
xor
cmpl
mov
add
push
outsl
icebp
jmp
push
movsl
and
cli
icebp
mov
xchg
stc
cmp
and
or
scas
iret
out
jp
xor
or
fstpt
sub
popa
lock
insl
xor
jle
frstor
jl
shrl
or
test
div
inc
in
inc
in
and
xchg
lret
outsl
out
jnp
jle
out
mov
imul
jg
in
jns
fnstenv
mov
test
and
mov
jae
jb
jge
out
dec
into
dec
jb
into
inc
push
or
fadds
or
xlat
cmp
push
jle
or
gs
push
mov
sub
in
ret
insb
sbb
cmpsl
rclb
or
or
insb
jnp
xchg
testb
pushf
and
or
mov
cmp
lods
int3
xchg
push
cmp
add
shl
cmpsl
mov
sub
xor
dec
jl
jnp
mov
pop
ja
pop
arpl
pop
popl
mov
stc
push
adc
js
push
fs
lock
lods
test
inc
add
stc
jmp
push
pusha
push
orl
mov
sub
mov
loop
in
mov
lds
mov
fcompl
pop
jmp
clc
mov
cmp
shr
repz
jno
sti
rcrb
xor
push
jnp
les
dec
inc
pop
int3
out
inc
inc
pusha
jge
push
lods
mov
aam
pop
insl
xor
mov
loopne
jge
hlt
dec
enter
xor
adc
loopne
lcall
inc
add
outsb
dec
nop
imul
add
xor
movb
xor
loop
mov
loopne
mov
lods
mov
push
or
hlt
test
mov
push
fcmovnbe
addr16
cmpsl
add
xor
fbld
jl
dec
add
jp
mov
imul
and
xor
scas
les
push
fistpll
movsb
push
cs
mov
mov
fistl
xchg
pop
aam
ret
xchg
js
or
sbb
aaa
ja
mov
lock
push
mov
push
rcl
dec
push
and
xchg
push
push
test
dec
pop
outsl
jns
std
shlb
adc
cmpsl
ds
aad
dec
arpl
jno
mov
lcall
stos
jns
sub
das
inc
and
mov
push
pop
dec
sbb
aaa
jns
xlat
call
sub
mov
enter
push
cmc
sbbl
in
cmp
scas
jae
mov
jl
into
and
sub
fldl
jb
cmp
dec
scas
sub
or
push
adc
cli
lock
xchg
pusha
xchg
mov
or
pop
into
cmpsb
adc
movl
test
sub
or
outsl
sahf
js
pop
pop
ror
pop
dec
call
jecxz
cmp
cwtl
mov
jnp
andl
repz
adc
xchg
arpl
fstpt
call
or
add
adc
add
inc
es
jnp
mov
cwtl
mov
enter
lcall
dec
jge
sub
mov
loop
xor
add
lea
les
sub
or
fadd
xor
adc
inc
enter
icebp
sub
addr16
lcall
js
mov
or
add
lds
xchg
aad
call
mov
mov
outsb
cs
jae
ret
aad
movsb
imul
mov
jne
jmp
xorb
arpl
mov
pushl
mov
mov
xchg
rolb
ds
pop
shl
inc
lcall
mov
xor
clc
push
pop
mov
cmp
out
ss
cmp
xorb
adc
mov
ror
dec
lret
push
and
ss
pop
adc
adc
mov
pop
lahf
loop
fdivrl
aad
push
fmuls
js
in
add
cmc
inc
cld
cli
addr16
jbe
bound
push
add
scas
dec
mov
sub
dec
je
xchg
or
ror
call
pop
adc
sub
rol
sub
push
js
dec
testb
andb
add
lods
push
icebp
pop
mov
jo
frstor
enter
mov
pop
ja
mov
cmpsl
cmpsl
clc
jl
push
pop
sti
xorl
test
mov
fstps
push
icebp
icebp
and
insb
in
adc
lret
lods
push
mov
leave
xor
cmp
shlb
insl
or
push
sahf
pop
mov
and
mov
or
dec
inc
lret
xchg
movsl
gs
fs
test
push
fnsave
pusha
in
out
test
out
mov
sbb
jae
inc
jle
repz
dec
sub
in
andb
mov
push
in
dec
mov
test
cmpsb
cmpsb
jns
bound
jp
scas
jo
mov
out
jnp
stos
and
pop
xor
sub
mov
cs
adc
mov
jmp
mov
pop
ljmp
roll
or
push
xor
clc
nop
xorl
jl
pop
dec
sti
cld
adc
cmp
mov
mov
sub
mov
or
push
sub
or
mov
and
fcoms
pop
mov
bnd
je
repz
cmp
push
inc
gs
pop
jno
and
hlt
ss
mov
jnp
iret
repnz
sbb
sbb
stc
pop
out
xor
push
jge
jecxz
cmp
jle
add
push
fldenv
push
dec
mov
aas
sbb
dec
push
pop
in
pop
fldl
and
sub
ss
ljmp
adc
shll
adc
fldl
testb
inc
cld
push
cmpsl
divb
add
mov
cli
xor
mov
ret
pop
inc
and
cmp
jp
pop
addr16
in
adcl
xlat
cmp
adc
add
sub
xor
jmp
loope
xor
pop
mov
lahf
pop
or
jae
mov
mov
ret
adc
sub
mov
dec
and
mov
cmpsb
dec
cmp
jno
int3
movsb
repz
jns
testb
sub
mov
adc
mov
popl
push
cmp
out
inc
and
repnz
xchg
push
stc
sub
lea
decb
xor
push
sub
dec
dec
adc
mov
aaa
mov
pop
loop
add
in
jbe
ss
cmp
jnp
movb
cmp
xchg
nop
fbstp
inc
adc
sti
test
dec
dec
ja
int
loopne
mov
fbld
scas
sbbl
and
movb
inc
push
mov
in
jns
ror
lret
mov
jg
and
aas
jecxz
insb
inc
pop
xchg
mov
fildl
roll
sete
lret
jge
inc
or
jle
or
test
hlt
repz
test
cs
mov
jbe
pop
repz
add
or
adc
ja
xchg
sbb
stc
cmpl
inc
orl
xor
mov
mov
fwait
in
leave
adc
push
inc
cltd
add
push
pushl
jl
pop
xchg
or
add
in
sub
es
pop
xlat
inc
xlat
outsb
xlat
mov
or
sub
into
mov
jl
adc
xchg
push
test
leave
cmp
xlat
add
test
push
xchg
inc
lea
data16
push
scas
xor
dec
cmpsl
mov
mov
sbb
cltd
ja
lret
cmpsb
mov
mov
mov
push
sahf
mov
push
mov
sti
pop
mov
mov
fbstp
jne
add
adc
mov
push
lods
jl
cs
dec
out
pusha
orl
jp
mov
movsl
dec
push
and
cli
and
pop
loop
movsb
adc
cmp
push
xchg
icebp
arpl
adc
hlt
inc
icebp
jne
or
mov
mov
imul
shll
or
test
add
stos
cs
mov
jno
pop
dec
in
addr16
xorl
xor
stos
push
test
mov
push
movsl
push
sbb
add
mov
icebp
inc
dec
imul
ficoms
cmp
subl
cmp
or
std
add
arpl
push
lahf
sbb
jl
adc
mov
sbb
mov
mov
imul
pusha
cld
jmp
lods
cmp
sbbb
push
mov
daa
xlat
pop
push
and
fcomi
gs
flds
bound
jle
ds
dec
adc
sbb
inc
xchg
xor
mov
mov
and
arpl
daa
jmp
mov
test
pop
imul
xor
inc
add
push
sbb
gs
orl
pop
in
mov
popa
nop
push
icebp
mov
repz
adc
push
mov
adc
mov
inc
or
inc
jae
je
into
mov
push
pop
jl
cmp
cwtl
aam
pop
loop
push
mov
or
je
sub
and
test
mov
add
inc
mov
repnz
mov
test
ja
push
nop
jns
fnstcw
ret
push
aas
add
cmp
loopne
fwait
jbe
and
xor
push
add
or
dec
leave
push
mov
xlat
outsb
mov
cmpl
pop
push
cmp
mov
aad
imul
mov
gs
mov
fcompl
push
jmp
sar
ss
mov
jbe
dec
test
test
pop
sbb
jbe
mov
cltd
xchg
cmp
sub
mov
lods
cmp
loopne
or
lcall
lahf
testb
outsb
add
fimuls
mov
jns
add
adc
inc
sbb
into
dec
gs
stc
xchg
mov
ss
xor
jnp
mov
add
int3
pop
jne
shrd
xor
adc
fxch
hlt
je
mov
dec
into
rorl
lcall
mov
fs
sti
sbb
ds
push
cmp
inc
sbb
ds
call
jle
pop
mov
popa
mov
mov
stos
pop
push
ret
nop
sub
add
popa
mov
fs
jle
xchg
sub
lcall
iret
repz
mov
mov
lahf
sub
pop
lds
mov
inc
repz
mov
mov
bound
xor
test
andl
ja
push
out
mov
xchg
push
mov
sub
out
xchg
inc
push
hlt
pop
mov
mov
or
sub
mov
addr16
insb
mov
push
cmpsb
mov
clc
imul
pop
jecxz
pop
rorl
xchg
pop
in
mov
sub
sub
testl
bnd
cmp
loopne
cmp
push
rcr
jnp
popa
cwtl
rorb
das
mov
fwait
dec
sub
fcmovu
pop
pop
add
pop
jg
jno,pt
repz
cvtps2pd
aad
int
mov
mov
sub
data16
or
pushf
push
push
mov
das
cmp
imul
and
iret
mov
pop
jne
shll
addr16
xchg
loope
xchg
outsl
in
test
lret
adc
mov
sahf
cmp
roll
dec
mov
vmovaps
xor
cwtl
add
jle
arpl
loop
pop
inc
xor
fidivs
ja
scas
js
faddl
push
daa
sbb
aaa
mov
mov
shll
lods
fisttpll
hlt
xor
scas
add
icebp
inc
shrb
push
ja
out
out
imul
jb
xchg
lea
jmp
inc
sbb
jb
adc
add
in
sti
adc
push
cmp
dec
or
leave
pusha
test
test
pop
jmp
add
sbb
dec
inc
test
adc
inc
fwait
push
sub
sbb
loop
mov
roll
xor
mov
pop
adc
mov
xchg
js
faddp
pusha
xor
lds
enter
shlb
sub
imul
test
test
add
je
adc
mov
push
fsubl
adc
je
inc
in
inc
das
add
pusha
push
xchg
int
jl
push
cld
jmp
sbb
sub
jns
or
es
push
rorl
cmp
das
sti
out
mov
inc
push
insb
xor
xor
ret
lret
mov
sbb
push
lret
lret
int3
sbb
mov
mov
popf
ljmp
sub
pop
orl
aaa
lods
inc
mov
test
inc
adc
pushf
shlb
xchg
repnz
xchg
arpl
lret
pop
fsubrs
sti
mov
into
xor
push
mov
mov
sub
test
aas
ret
ss
mov
cmpsb
inc
inc
pop
push
cmpb
inc
sbb
dec
je
fnsave
mov
xor
lock
ret
pop
sub
xchg
gs
push
cwtl
in
aam
adc
cmc
adc
and
setno
xchg
or
sub
mov
das
add
push
push
jp
mov
jo
enter
rcr
icebp
sbb
je
shrb
imul
mov
loopne
adc
sahf
jno
in
in
or
adc
xchg
shlb
movb
pop
xor
push
fiadds
xor
jle
ja
pusha
mov
cli
jo
in
mov
push
sub
inc
pop
dec
pushf
les
xor
push
nop
and
std
push
loop
push
repz
pop
int
fwait
push
mov
push
rorb
cs
mov
clc
in
push
test
lcall
sub
lock
inc
clc
mov
ja
scas
push
repz
popf
push
fsubrs
int3
inc
push
mov
loop
ficoms
push
shrb
mov
add
xchg
sbb
mov
iret
ja
adc
call
shr
add
rorb
shlb
sbb
rcl
in
dec
lods
lods
enter
inc
xor
jmp
test
jp
fcmovu
push
loope
mov
dec
ja
sti
xchg
xchg
push
inc
dec
fcomp
popl
pop
inc
in
loopne
loopne
xor
push
push
mov
dec
stc
popa
ret
mov
push
push
mov
repnz
into
cli
pop
int3
nop
pop
dec
add
leave
outsl
aad
xchg
dec
jg
cmp
jae
lods
lock
adc
xchg
xor
mov
pop
jb
dec
cmp
xchg
fwait
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
inc
les
pop
rorl
push
xchg
push
fldt
sbb
mov
enter
mov
outsb
shll
sub
inc
inc
cmpsb
lret
or
int3
ficoms
pop
add
cmp
shl
daa
pop
inc
cmp
cmpb
xor
incb
and
popf
add
out
aam
in
fcomip
popf
cmp
jg
scas
addr16
xchg
outsl
fwait
test
sub
enter
xchg
xor
and
xchg
fcoml
or
aas
inc
push
sti
jecxz
fdivrl
out
addl
lea
insb
xchg
aas
pop
sbb
add
or
aaa
data16
adc
pop
jmp
les
pop
mov
fildll
subl
stos
mov
xchg
les
sbb
dec
sub
dec
xor
xor
pop
test
xor
mov
add
mov
and
sbb
xchg
cmpsb
test
ds
fisubl
call
push
sub
and
lret
inc
clc
fsubrs
mov
int
stc
pop
mov
iret
fwait
sub
mov
scas
imul
stos
sbb
jmp
jns
lods
int3
daa
adc
sub
outsb
lret
cmp
insb
pop
fwait
cmp
add
add
add
inc
xchg
sub
dec
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
fmull
outsb
add
movd
xor
insl
