jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
inc
add
jl
insb
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
stos
cmpsb
inc
add
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
push
inc
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
jge
inc
add
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
in
stos
inc
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
mov
inc
add
add
add
add
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
mov
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
and
aam
mov
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
movsb
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
jmp
pop
and
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
or
sbb
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
mov
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
mov
inc
add
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
pop
movsl
inc
add
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
fmulp
inc
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
cmpsl
inc
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
lret
in
adc
add
jne
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
int3
mov
and
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
adc
and
lea
mov
movl
movl
movb
mov
add
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
roll
cmp
or
add
jo
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
add
add
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
add
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
add
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
push
push
call
mov
roll
std
add
mov
mov
add
add
mov
lret
fistps
lea
xlat
outsl
lds
stos
add
lods
add
add
ffree
mov
mov
xchg
xchg
xchg
add
stc
cmpsb
add
add
imul
add
add
add
test
nop
rolb
jb
aam
mov
add
xchg
cwtl
add
roll
faddl
scas
add
mov
mov
sahf
xorl
lods
add
ljmp
pop
add
add
in
add
loopne
add
add
xchg
out
popf
jo
add
lret
add
add
call
add
add
push
mov
push
mov
add
push
push
lea
push
push
lea
push
push
push
push
push
call
add
cld
ljmp
add
mov
jno
ficomps
mov
add
ja
push
add
testl
leave
flds
jle
xchg
loopne
lret
add
sar
andb
in
add
add
lret
mov
push
lret
ficoms
lea
pop
movl
popl
push
push
push
push
lea
push
push
lea
push
push
push
call
je
cltd
pusha
mov
add
faddl
jl
cmpsl
add
ljmp
add
add
pop
fadds
add
mov
out
push
fildl
mov
in
cmc
xchg
xchg
mov
enter
pop
xchg
add
adcb
add
popf
add
pusha
add
add
imull
fstps
cmpsl
std
add
test
aad
mov
lea
pop
push
push
push
push
lea
push
push
push
call
test
out
jmp
add
testb
add
mov
insb
aam
xchg
add
lahf
add
shr
mov
add
jo
jge
jne
sahf
fbstp
mov
pop
add
add
add
add
jo
xchg
pop
push
fisubl
add
add
jl
push
out
js
ja
jo
out
add
mov
add
push
add
scas
pop
cmpsl
xchg
add
pusha
adc
nop
xor
add
pushf
cmp
and
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
add
ret
xchg
add
add
mov
fwait
test
mov
outsl
fs
iret
add
jnp
add
fistps
rcr
mov
sti
mov
add
pop
add
test
outsl
not
sahf
add
push
icebp
fadds
in
addb
pop
call
push
lea
push
push
push
lea
push
lea
push
push
call
addr16
add
pop
add
push
add
cwtl
mov
push
insb
leave
loop
leave
mov
jp
add
push
orb
lock
xlat
stc
lds
add
rcl
push
add
mov
lock
mov
add
sub
sti
mov
testl
add
add
mov
add
pushf
aam
imul
test
les
add
jg
sbb
outsb
add
add
out
add
pop
jmp
add
push
je
add
loop
add
fbld
jno
jp
imul
add
mov
add
pop
add
add
fists
jae
add
fildl
xchg
shrb
push
fsubrl
imul
add
add
loopne
cltd
add
fisttpll
pop
call
jmp
ret
push
push
push
push
lea
push
call
mov
add
cld
sti
mov
fstl
roll
xchg
test
aam
popl
iret
add
add
xorl
movsl
mov
add
stos
add
jb
add
in
add
shll
clc
add
add
lods
mov
cli
add
add
int
int3
lea
pop
mov
push
push
call
add
push
mov
loop
xchg
add
fistl
add
lea
add
add
add
add
add
stos
add
xchg
loop
in
add
add
mov
scas
xchg
xchg
lret
push
jne
add
mov
rclb
add
add
push
add
mov
add
xorl
mov
add
add
cli
add
mov
lea
pop
mov
add
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
add
add
cmpsl
cwtl
filds
or
push
mov
jbe
repnz
xchg
add
loope
int3
mov
aam
pop
lret
mov
in
add
mov
stos
add
bound
add
out
add
cmpsl
add
add
ficomps
add
popa
fisttps
add
fistps
add
add
add
scas
mov
mov
lea
pop
add
push
lea
push
push
push
push
push
call
jae
add
add
add
xchg
add
jle
popa
lret
add
faddl
roll
xchg
imul
push
add
add
mov
cmpsb
mov
xchg
fiaddl
mov
cmpsb
add
jbe
cltd
push
mov
mov
add
sti
add
add
fimuls
fadds
pop
mov
add
roll
enter
add
push
add
xchg
arpl
lea
pop
add
push
push
push
push
push
call
add
add
fadds
xchg
ljmp
add
xlat
jmp
add
in
mov
xchg
add
ja
addl
mov
add
mov
push
mov
xchg
mov
movsl
add
mov
cmpsb
jnp
add
incb
jge
add
mov
lods
push
add
push
add
scas
pop
test
mov
lea
pop
mov
xor
push
push
push
lea
push
lea
push
push
call
popl
cwtl
icebp
mov
add
repnz
jae
mov
out
jo
lea
add
add
add
add
xchg
add
add
test
idivl
add
ret
pop
sti
jl
jl
mov
lods
push
enter
add
push
add
xchg
into
iret
add
mov
add
pop
add
push
lea
push
lea
push
push
push
push
push
call
cmp
add
add
add
add
mov
loop
add
std
mov
add
add
push
mov
andb
push
add
xchg
pusha
add
add
aam
lea
shlb
add
lock
icebp
cmpsl
add
add
std
imul
mov
lea
pop
call
push
push
call
add
shl
mov
add
cltd
cwtl
add
jbe
add
mulb
add
add
js
pop
call
add
ror
icebp
add
push
fcmovnbe
pop
jl
add
mov
cmpsl
xchg
push
lret
faddl
ja
mov
add
cli
add
mov
add
mov
push
rcr
jnp
add
popl
rorb
loope
add
rolb
mov
add
fldl
mov
lea
pop
mov
xor
push
push
lea
sub
push
push
pop
add
dec
sub
sub
shl
not
rol
add
pop
dec
pop
push
lea
push
push
push
push
push
lea
push
call
jb
mov
add
mov
add
add
cwtl
xchg
iret
fwait
loopne
mov
lret
std
jge
mov
mov
add
ljmp
add
jo
xlat
add
add
add
shlb
cld
iret
out
mov
add
add
add
ret
mov
xchg
aam
xor
insb
icebp
int
add
popa
add
not
out
mov
sbb
pushl
call
push
push
push
push
push
push
push
lea
push
call
je
stos
imul
add
je
mov
ljmp
add
sub
add
lds
add
add
repnz
add
mov
add
push
rolb
data16
out
xchg
jnp
flds
cmpsl
pop
arpl
scas
pushf
fcomi
pop
in
jb
add
lods
mov
in
js
aad
add
add
fwait
in
in
je
cmc
hlt
push
mov
jl
int3
lea
pop
mov
movl
lea
push
push
call
push
add
mov
lret
add
xlat
add
addl
fcomp
cli
out
add
push
mov
sub
mov
add
out
add
cmc
out
mov
push
add
mov
add
test
add
in
iret
add
jb
out
add
add
lea
pop
push
push
push
push
push
push
call
add
shll
pushf
stos
add
add
mov
push
iret
testl
add
xchg
aam
les
fiaddl
into
mov
xchg
testl
push
arpl
add
ret
add
nop
fsubs
test
add
add
add
add
add
add
add
add
lea
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
push
call
in
jo
cli
out
repnz
mov
fsubp
pop
xchg
add
add
add
int
add
mov
out
add
cli
pop
add
enter
add
sti
jae
add
add
add
add
leave
add
lods
add
pop
out
mov
add
cltd
jp
add
scas
add
xlat
aad
add
pop
pushl
call
push
lea
push
push
push
push
push
push
push
call
mov
push
scas
negb
jo
add
push
mov
add
add
add
pop
into
push
mov
mov
sti
push
add
add
mov
iret
add
cwtl
add
filds
mov
add
scas
fcoms
repnz
movsb
cmpsl
add
in
fldl
push
mull
scas
push
add
shll
mov
add
add
cmpb
test
push
test
mov
icebp
mov
lea
pop
pushl
push
lea
push
push
lea
push
push
call
xchg
test
add
jmp
add
mov
mov
pop
mov
add
mov
xchg
fiaddl
cwtl
add
add
add
jecxz
add
fldl
stos
add
sahf
add
xchg
fldenv
pusha
outsl
add
clc
add
in
jmp
add
sti
mov
clc
leave
jge
in
add
pop
pushl
call
push
push
sub
inc
push
push
pop
add
add
sub
xor
pop
xor
inc
pop
push
lea
push
push
lea
push
call
add
lea
xchg
leave
cli
mov
add
fldl
les
clc
pop
add
xchg
jne
add
add
stc
add
clc
int
pusha
push
mov
int
add
xchg
jae
add
add
add
xchg
mov
add
jnp
add
test
jnp
jno
ljmp
pop
pushl
push
push
push
push
push
push
call
add
add
in
int
mov
add
jnp
add
xchg
arpl
add
jae
jmp
add
insb
xchg
int3
add
cmpsl
push
add
int3
roll
mov
add
lods
cld
cli
sti
add
outsl
add
outsl
test
add
stos
jmp
stos
jo
add
add
add
add
add
pop
lods
jge
mov
lea
pop
call
push
push
push
push
call
add
repnz
pop
pop
add
mov
xchg
std
mov
cmpsl
add
add
push
push
add
add
add
add
add
movsl
xchg
jno
mov
add
jmp
test
add
xlat
test
add
insb
stos
add
mov
jge
add
add
add
fisttpll
pop
push
push
push
add
rol
push
push
pop
add
add
lea
sub
pop
xor
sub
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
popf
add
mov
cmpsb
jle
ja
xchg
stc
add
jnp
add
jo
add
in
mov
add
xchg
xchg
mov
neg
xchg
cli
add
jnp
add
test
loop
repnz
int
in
jp
add
ljmp
loop
pop
in
mov
add
add
lods
add
xchg
test
mov
arpl
mov
lea
pop
push
call
push
push
lea
push
lea
push
push
call
fcmovb
add
push
mov
add
pop
jge
add
mov
pushf
in
hlt
nop
bound
loop
add
add
add
fsubrs
lds
loope
mov
out
add
arpl
repnz
outsl
mov
add
add
test
add
fisttpl
fmull
clc
push
push
lea
push
push
lea
push
push
push
call
add
mov
jns
leave
add
mov
jbe
add
repnz
test
testl
add
hlt
in
add
test
add
xchg
push
jo
stos
add
popl
add
orl
faddl
add
add
cmc
mov
loop
add
imulb
mov
aam
bound
push
push
push
push
push
call
add
mov
add
add
movb
sti
jl
cmpsl
add
filds
xchg
std
mov
je
fmull
loopne
out
add
filds
add
add
add
add
add
add
fdiv
popl
loope
add
test
mov
add
scas
rcrl
lods
add
aam
add
add
push
js
stos
add
fidivrs
add
aam
bound
mov
add
push
push
call
add
add
push
pop
add
pop
arpl
lods
pusha
aad
add
lods
add
enter
add
add
add
add
add
add
popa
jecxz
nop
xchg
xchg
add
add
add
into
mov
xorb
add
jae
pop
mov
enter
pop
mulb
fdivrl
lea
xchg
pop
popa
mov
lea
pop
add
add
push
push
push
push
push
call
mov
add
into
mov
fsubs
repnz
add
add
cltd
add
out
fdiv
push
add
add
je
mov
add
add
add
add
xchg
faddl
add
aad
add
jle
fcoms
lret
fcomi
test
int3
out
add
mov
lea
pop
mov
xor
push
lea
push
lea
push
lea
push
push
call
scas
pusha
add
add
in
int
add
pop
pusha
lcall
add
sbb
in
add
jns
cmc
int
pop
mov
lods
jo
add
add
lock
jae
mov
lock
add
aad
loopne
call
divb
add
popa
addb
les
jne
push
push
lea
push
push
push
push
push
push
push
push
push
call
cwtl
addr16
aad
add
add
jmp
add
bound
add
movsb
mov
pop
aad
add
iret
add
push
add
mov
pop
into
jne
push
lock
mov
push
les
xchg
add
pop
add
mov
mov
add
add
add
aam
bound
pop
mov
xor
push
push
push
lea
push
lea
push
push
call
aam
add
mov
add
add
fldcw
add
push
shll
add
add
int3
in
add
loopne
add
add
push
pop
pop
add
add
xchg
insb
fwait
add
add
lds
mov
push
add
add
xchg
cmpsb
in
mov
add
add
ret
xchg
pusha
sbb
lock
push
lea
push
lea
push
push
push
push
push
push
call
js
xchg
add
add
lds
jae
pop
fwait
nop
add
jbe
callw
add
lahf
lret
add
push
add
fbstp
int3
jo
add
mov
add
stos
add
add
add
mov
iret
mov
add
add
mov
add
add
je
pop
movb
movb
mov
add
pop
pop
mov
push
push
push
push
push
call
add
filds
mov
add
add
add
icebp
jge
mov
lods
scas
ror
push
pop
mov
loope
jae
mov
add
add
add
lret
enter
ja
add
add
xchg
leave
add
add
xchg
push
add
insb
call
mov
test
add
js
rolb
add
xchg
popa
test
nop
add
pop
xor
push
push
push
call
add
shr
mov
jnp
fs
add
repnz
mov
stos
push
rolb
test
add
lret
cwtl
pop
mov
xchg
add
roll
sahf
mov
add
fiaddl
push
xlat
add
add
push
add
add
add
pop
pusha
cmpsb
xchg
xchg
fildl
mov
lea
pop
add
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
movsb
add
cld
push
mov
add
repnz
push
add
icebp
imul
idiv
add
add
mov
jge
push
mov
faddl
add
add
xlat
mov
add
mov
add
fldenv
push
call
fnsave
rcrb
add
hlt
add
pop
js
testb
scas
fwait
imul
add
add
xchg
data16
call
mov
data16
mov
xor
push
push
push
push
lea
push
push
call
add
add
xlat
lcall
faddl
add
mov
add
add
add
in
add
fwait
mov
lret
mov
pusha
add
add
mov
push
out
add
imul
rclb
pop
clc
into
xchg
mov
test
add
add
mov
enter
mov
lea
pop
sub
pop
rep
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
add
call
stos
test
push
scas
add
add
add
push
movsb
clc
mov
add
nop
mov
mov
add
jbe
call
push
add
add
scas
add
add
push
movsl
push
loope
add
mov
ljmp
leave
add
in
js
testb
mov
add
cld
add
push
int3
lea
pop
pop
push
push
lea
push
push
push
push
push
push
call
sahf
xchg
add
add
fsubr
addb
add
pop
add
bound
int3
cmc
add
sar
add
imul
jbe
fildl
fidivl
add
add
mov
jno
pop
sbbl
faddl
icebp
filds
push
mov
xlat
mov
push
add
out
test
lea
pop
mov
add
push
push
push
lea
push
push
push
push
call
lret
lock
pop
cltd
aad
pushf
fiaddl
push
add
push
push
push
xchg
loope
mov
add
add
add
leave
aad
aad
leave
stos
je
aad
shl
xchg
fnsave
add
scas
add
mov
ret
negl
pusha
add
pop
mov
jae
add
add
call
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
add
ljmp
add
imulb
mov
xchg
in
add
add
fsubrl
pop
imul
mov
into
add
pop
add
ret
lds
lahf
add
xchg
pop
std
add
add
ja
pop
add
add
cwtl
mov
mov
lea
pop
add
push
lea
push
push
lea
push
push
call
xchg
movl
add
cmc
add
push
add
mov
scas
jbe
cmpsb
ja
filds
add
pop
xchg
xchg
mov
add
add
add
mov
add
xorb
add
data16
ror
addb
jb
pop
in
add
add
add
xchg
add
leave
add
lea
mov
mov
fldcw
mov
lea
pop
mov
xor
mov
xor
push
lea
push
push
push
push
push
call
lret
pop
mov
jecxz
add
ror
insb
cli
xchg
push
xchg
in
add
add
faddl
push
insb
fldl
addb
add
out
leave
add
fidivrs
ret
add
add
icebp
add
mov
fwait
xchg
add
lock
rcll
add
cmpsl
lcall
movsb
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
cmpsb
loopne
xchg
jae
mov
sahf
add
mov
add
push
fadds
faddl
bound
pop
repnz
out
ljmp
xchg
in
clc
shrb
add
ficomps
mov
sti
lods
mov
fbstp
fsubrp
mov
add
add
push
out
mov
lock
add
mov
lea
pop
xor
push
push
push
call
add
lods
add
push
fdivrl
cwtl
add
addr16
xlat
push
jmp
add
add
movb
add
add
add
add
jb
add
add
add
hlt
jae
mov
insb
in
icebp
add
add
add
add
in
add
cmpl
popa
or
add
push
push
lea
push
push
call
xchg
add
pop
add
add
mov
lret
lods
cli
ljmp
add
add
add
add
xchg
stc
add
add
leave
pop
nop
cmpsb
mov
add
mov
loopne
iret
mov
pop
add
add
mov
pushf
roll
jo
js
cwtl
add
ret
jns
add
add
int3
pop
out
mov
lea
pop
add
add
push
push
lea
push
push
lea
push
lea
push
call
out
xchg
mov
add
iret
xchg
add
nop
jle
add
aam
add
lcall
add
test
add
pushf
add
add
xchg
mov
leave
add
mov
push
arpl
add
add
mov
ret
pop
lahf
add
xchg
roll
add
add
add
add
sarb
add
jno
add
mov
lea
pop
mov
push
push
shl
xor
sub
push
xor
add
lea
dec
sub
not
pop
sub
pop
push
push
lea
push
push
push
push
push
push
call
add
xchg
add
movsb
fcmovb
jp
push
out
fiaddl
add
fcmovne
imul
xchg
std
add
xchg
mov
add
je
mov
add
mov
add
add
xchg
bound
add
mov
add
add
xchg
jo
add
mov
mov
loop
rcll
test
and
jne
push
push
push
push
call
xchg
push
bound
add
add
add
push
add
push
fs
cltd
mov
mov
test
add
add
add
icebp
add
add
pop
iret
jnp
jo
jno
add
pusha
icebp
add
add
xchg
loopne
add
push
jecxz
cltd
jb
mov
jno
add
lea
pop
call
push
push
push
shl
push
push
pop
add
ror
add
ror
sub
ror
shl
pop
rol
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
insb
movb
add
je
add
cld
add
mov
add
add
pop
xchg
lahf
jbe
mov
push
in
mov
xchg
sahf
out
add
add
add
testb
imul
in
rolb
mov
add
out
fdivrs
add
into
imull
add
add
nop
add
mov
mov
lea
pop
push
push
push
push
call
std
add
add
add
lcall
jmp
add
loope
push
arpl
add
add
int3
add
add
jb
iret
add
add
sahf
rcrb
add
mov
mov
mov
push
mov
insb
xchg
add
bound
pushf
mov
addb
add
push
jne
cmc
in
cwtl
jp
scas
add
mov
lea
pop
call
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
mov
loope
leave
rolb
fwait
call
fiaddl
add
outsl
lock
add
mov
mov
add
jnp
xchg
insb
orb
xchg
add
add
add
pushf
mov
lret
add
add
imul
jae
sti
cwtl
aad
hlt
add
add
mov
jp
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
fldl
cmpsl
add
add
shl
add
mov
icebp
add
add
add
add
push
mov
add
add
testb
add
add
stc
push
add
xchg
mov
add
add
fldt
mov
add
pop
xchg
add
int
cld
mov
add
addl
sti
add
add
add
add
add
bound
pop
mov
push
lea
push
push
call
xchg
xchg
add
test
shll
jo
leave
add
jmp
jl
add
pusha
in
add
add
add
push
hlt
add
jns
add
add
clc
add
mov
add
xchg
add
mov
add
lret
add
lahf
mov
jmp
sti
gs
arpl
add
push
push
push
push
push
push
push
call
add
cwtl
cmc
add
mov
add
push
add
add
std
mov
in
add
mov
add
add
push
push
add
add
add
push
popf
xchg
add
add
aad
xchg
pop
add
add
loop
add
jge
movl
ja
fstpl
jnp
add
add
pop
add
add
push
push
push
lea
push
call
add
push
add
mov
bound
add
add
pop
add
add
add
iret
xchg
fisubl
add
addb
clc
popa
stos
add
add
mov
ret
jbe
insb
pushf
add
jbe
add
out
add
nop
jno
add
outsl
enter
test
xchg
mov
mov
add
mov
sti
add
pop
mov
push
push
push
push
push
call
xchg
add
add
mov
in
add
add
int
mov
test
fwait
add
movsl
add
pop
xchg
add
movsb
add
xchg
add
add
outsl
mov
xchg
jae
hlt
mov
mov
fucomi
add
add
add
add
clc
lret
icebp
arpl
add
and
add
push
fdivs
add
cmpsl
add
mov
adc
xor
push
push
push
call
add
fs
xchg
jecxz
add
roll
loope
mov
rcrl
add
jne
add
mov
pop
scas
idivl
or
aad
stos
ja
add
add
add
add
pop
add
cltd
mov
je
ja
add
out
rcll
add
add
add
push
mov
lea
pop
add
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
fdivrl
out
jge
pop
add
add
add
mov
add
add
add
ja
loopne
add
loop
mov
add
nop
xchg
cmc
add
pop
pop
movsb
xchg
pop
add
add
ja
add
subl
add
pushf
jno
addb
add
add
add
test
mul
mov
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
sti
pop
add
add
sti
lahf
xchg
loop
test
cwtl
fs
add
lock
add
add
pop
jecxz
cmc
loope
add
mov
cmpsl
jno
clc
add
add
add
add
movsb
stos
roll
test
fnstenv
push
add
add
add
add
sti
xchg
add
mov
xlat
loope
xchg
add
into
lcall
jnp
roll
popa
pushf
add
cld
loope
fmull
inc
sub
lock
shll
push
call
into
mov
addb
add
jo
iret
rolb
add
mov
add
jp
clc
addr16
add
add
add
mov
fistl
js
cli
popa
ret
add
add
int3
add
cmpsl
sti
test
xchg
incb
mov
ja
imul
add
add
push
jge
rolb
addl
add
mov
mov
add
pop
xchg
in
scas
add
data16
add
pop
push
lea
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
testb
mov
push
add
add
call
add
mov
add
add
add
data16
mov
mov
scas
lret
add
cmpsl
add
mov
outsl
pop
sti
add
add
push
pop
add
ljmp
add
mov
mov
xlat
pop
repnz
jle
add
jo
mov
sub
dec
cmp
sti
push
push
lea
push
push
push
push
push
push
lea
push
call
add
scas
add
add
nop
push
cmpsl
add
add
movsl
add
xchg
arpl
add
out
std
imul
call
add
xchg
in
test
push
add
cwtl
pop
mov
xchg
nop
neg
mull
add
test
out
mov
lds
addr16
add
add
icebp
add
mov
mov
lea
pop
rep
mov
xor
push
push
push
push
push
push
lea
push
call
pop
add
mov
mov
add
add
add
sahf
scas
mov
add
add
add
aad
jmp
roll
add
loopne
lods
jge
add
rolb
fiadds
loop
out
add
add
add
jb
add
add
add
add
movsl
add
add
scas
add
rcr
add
jmp
add
fdivrl
nop
add
xchg
scas
bound
int3
lea
pop
or
je
mov
xor
push
push
push
push
push
push
call
add
mov
add
lds
add
add
add
into
movsb
jo
into
add
add
pushf
xchg
push
shr
negb
mov
pop
rolb
add
fiadds
lds
add
xchg
stc
add
push
out
out
add
into
imul
mov
mov
loopne
add
pop
mov
add
add
into
test
shrb
mov
out
pop
insb
cmpsl
mov
lea
pop
mov
push
push
lea
push
push
lea
push
lea
push
call
add
mov
mov
add
popl
mov
add
add
mov
pop
cltd
add
loopne
nop
add
jle
push
test
movsl
add
lods
add
add
add
lds
pushf
add
loope
xchg
jns
xchg
clc
mov
add
pusha
mov
add
add
lock
add
fprem1
scas
mov
pusha
adc
xor
push
push
push
push
call
add
fnsave
ljmp
popa
add
add
fildl
in
jmp
add
pop
gs
mov
add
pop
add
mov
add
test
add
xchg
add
add
add
push
add
add
ljmp
in
add
xchg
stc
push
scas
add
int
add
add
icebp
nop
leave
add
push
out
add
add
popa
adc
les
add
add
push
pop
add
push
lea
push
push
lea
push
push
push
push
call
pop
in
mov
mov
les
add
loop
jnp
add
push
pop
shll
loop
pop
add
add
movsl
mov
add
js
mov
add
add
xchg
add
loop
test
add
aam
int3
mov
popf
addb
pushf
adcl
leave
stos
add
mov
lea
pop
push
mov
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
fistpll
add
mov
add
add
int3
ljmp
insb
push
loope
lods
addl
add
mov
add
movsb
add
test
push
mov
iret
push
fld
add
jo
push
std
std
jmp
add
ja
add
pop
add
add
in
imul
add
jge
fldl
add
pop
xor
push
push
call
push
test
pop
jbe
js
add
jne
add
stc
hlt
ficompl
rorl
mov
add
negb
add
xchg
add
fldl
mov
add
add
jmp
add
add
add
push
jle
out
jmp
add
ret
jno
add
mov
add
add
jmp
pop
rolb
jge
loopne
out
sti
add
add
mov
cld
lea
pop
add
push
lea
pop
add
push
lea
add
pop
pop
push
ror
shr
ror
sub
pop
rep
mov
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
add
pushf
shrl
jo
push
aam
into
push
nop
mov
jnp
add
add
mov
shl
je
fcoml
cltd
mov
add
test
add
add
add
add
lea
cli
push
mov
lcall
hlt
scas
push
mov
xorb
xchg
jecxz
add
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
push
push
push
call
lret
add
scas
enter
add
add
add
add
xlat
mov
add
add
jnp
movsl
add
xchg
add
jl
add
pusha
mov
xchg
int
add
add
int3
bound
mov
in
movsb
add
std
fdivrl
pop
pop
add
imul
fmull
les
add
push
add
ror
pop
or
je
push
push
call
popf
jnp
mov
add
add
bound
mov
add
add
mov
addr16
testl
add
add
add
jp
movsl
xchg
jmp
add
add
mov
into
jae
out
add
repnz
add
call
mov
add
jnp
stc
aam
add
add
pop
mov
add
add
push
inc
lea
pop
rep
pop
push
push
rol
xor
shr
push
or
inc
add
dec
ror
sub
rol
inc
pop
rol
ror
pop
push
lea
push
call
hlt
add
add
aam
pop
test
add
bnd
data16
cltd
rolb
in
filds
pop
nop
xchg
add
outsl
mov
push
jno
add
add
add
add
mov
add
mov
mov
add
add
lret
add
xchg
add
add
or
mov
mov
push
push
push
push
push
push
lea
push
call
pop
cmc
in
add
pusha
add
add
mov
pop
add
add
jge
push
out
add
mov
pop
mov
mov
lcall
bound
incb
xchg
rcrl
add
cmc
xchg
fsubr
popa
bound
add
int3
push
add
incb
jo
cmpsb
fcompp
add
xchg
ja
fwait
add
add
mov
data16
mov
lea
pop
mov
jmp
push
push
add
ror
shl
pop
mov
add
push
push
dec
add
pop
push
push
push
shr
inc
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
xchg
add
shl
lods
lcall
rorl
add
add
add
icebp
mov
push
add
add
fadds
scas
loop
add
add
imul
add
in
fisubrl
pop
lahf
out
test
jae
mov
lea
pop
mov
pop
pop
push
lea
push
push
push
lea
push
lea
push
push
push
call
push
push
add
mov
data16
add
mov
scas
fistpl
xchg
mov
mov
enter
mov
imul
pop
in
mov
add
xchg
mov
jle
add
add
jecxz
xchg
add
mov
pop
loope
repnz
fimull
push
add
pop
mov
bound
add
fcompl
hlt
lea
pop
pop
pop
push
sub
shl
shr
pop
leave
push
add
shr
sub
pop
ret
push
mov
push
shl
inc
sub
rol
pop
add
push
dec
sub
add
add
pop
push
push
push
push
push
push
call
movb
mov
add
fcoms
clc
pop
add
jp
add
jns
add
mov
add
add
add
add
lcall
clc
push
addl
fs
ret
loop
mov
add
out
in
add
lods
pop
add
scas
jmp
insb
leave
mov
jnp
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
xchg
xchg
into
out
enter
add
xchg
add
add
enter
jbe
fildl
jecxz
fldl
add
cltd
pop
push
xchg
xlat
add
movsl
add
jae
jmp
sub
xchg
fidivl
roll
out
xchg
add
add
sbbb
add
pusha
add
enter
jge
shl
add
movsb
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
call
jl
add
js
int3
int3
add
popa
add
out
out
add
ja
add
out
iret
add
aad
add
data16
jmp
add
push
add
nop
xlat
add
mov
add
add
add
add
mov
mov
popf
mov
add
jmp
ja
movb
and
push
pop
movl
addl
test
je
push
not
shr
shr
rol
pop
mov
pop
push
xor
pop
pop
push
push
push
push
call
in
add
add
lret
add
fs
test
add
add
in
out
add
iret
icebp
add
mov
cmpsb
bound
lods
in
add
pop
outsl
lds
xchg
xchg
add
sahf
cli
gs
popa
add
pop
add
test
fadd
add
add
add
pop
pop
pop
push
push
lea
push
push
call
add
add
add
hlt
js
fists
fldl
add
movb
in
lods
cmpsl
fs
sti
add
push
je
int3
mov
mov
mov
mov
lcall
cmc
enter
fcmovb
mov
jne
jo
add
add
add
add
imul
add
bound
add
add
add
test
add
mov
lret
rcrl
adc
ret
push
push
pop
mov
add
push
push
push
push
push
call
add
je
add
add
add
add
mov
cltd
add
add
add
add
fidivs
std
nop
lret
fstps
loope
add
jbe
loop
add
add
cwtl
add
sarb
test
add
pop
int3
add
jnp
add
add
add
in
addr16
mov
lea
pop
push
push
push
push
push
lea
push
call
add
add
add
fnstsw
addb
mov
in
rolb
add
mov
add
sti
pop
mov
mov
add
in
jo
lock
add
add
rorb
cmpsb
popf
push
add
sti
addl
rorb
add
add
test
add
add
test
call
cli
add
xchg
mov
lea
pop
push
push
lea
shl
dec
not
pop
testl
addl
push
push
inc
lea
sub
pop
call
mov
pushl
push
sub
pop
push
push
push
sub
add
add
pop
call
cmpl
jne
pop
push
inc
add
pop
pop
pop
push
pop
pop
push
lea
push
push
call
mov
mov
add
js
fwait
jbe
fidivrs
add
in
mov
lds
add
jp
mov
int
add
mov
add
mov
mov
mov
leave
xchg
data16
in
add
aad
xorb
xlat
std
add
pop
push
imul
mov
push
add
addl
call
ja
mov
lea
pop
leave
push
push
push
lea
push
push
push
push
push
lea
push
call
jge
add
je
fucomp
test
movsl
ficomps
aam
push
nop
rcr
add
add
stos
add
mov
add
add
xorb
add
add
add
stos
cmc
xchg
add
mov
add
add
push
add
add
push
add
jo
add
push
fwait
test
add
add
popa
and
ret
push
add
inc
pop
push
push
lea
push
push
push
push
push
push
push
call
popa
icebp
add
ja
ja
mov
movl
out
push
lcall
lret
cmc
ret
fcmovnu
push
xchg
mov
test
adcb
add
add
add
push
test
arpl
pop
imul
jnp
add
fiaddl
data16
cld
int3
mov
add
add
shlb
lds
add
pop
mov
add
push
push
inc
sub
shl
pop
push
push
push
push
lea
push
push
push
push
push
push
call
jnp
add
add
movb
faddl
out
mov
mov
mov
popf
into
add
cld
add
mov
push
mov
add
push
and
add
cld
add
arpl
in
fmull
mov
mov
xchg
add
outsl
pusha
add
jl
shlb
add
pop
add
rcll
int3
lea
pop
movl
push
lea
ror
pop
push
push
lea
push
call
add
nop
add
jbe
add
xchg
add
add
leave
add
stos
mov
add
push
inc
cli
or
add
add
add
loopne
add
fists
push
mov
pop
mov
pop
jle
cltd
push
jbe
fildl
add
insb
call
enter
xchg
add
loope
add
add
mov
movsl
pop
clc
mov
int3
lea
pop
call
push
push
lea
push
push
push
push
lea
push
call
push
pop
mov
pop
mov
mov
jmp
jne
nop
add
add
add
leave
testl
mov
add
add
add
add
add
lods
leave
out
mov
out
jbe
rcrb
add
outsl
adc
popf
testl
pop
mov
scas
cmpsb
mov
mov
add
add
pop
call
push
shr
not
sub
pop
subl
push
shl
xor
pop
cmpl
jne
pop
push
shl
shr
dec
pop
pop
push
push
lea
push
lea
push
push
call
add
arpl
call
pop
add
add
in
pop
jle
test
xchg
cmpsb
add
add
jmp
mov
nop
lods
push
ret
repnz
fisttpl
add
add
jae
cmpsb
add
pop
add
add
add
pushf
add
in
xchg
lea
add
mov
add
mov
add
je
xchg
stc
pusha
out
add
push
mov
lea
pop
pop
pop
push
not
sub
rol
pop
leave
push
push
push
push
push
lea
push
push
push
call
mov
pop
mov
add
add
mov
add
pop
popf
fdivl
jnp
add
add
mov
add
jae
mov
add
mov
loop
add
movsb
pusha
add
add
jl
push
xchg
loop
mov
push
imul
add
scas
add
sti
add
lock
out
hlt
out
mov
and
push
push
push
lea
push
call
push
xchg
pop
loop
out
add
add
add
fiaddl
add
add
add
cmpsl
add
add
add
pushf
in
add
mov
add
add
pop
data16
add
add
jnp
add
add
add
add
mov
add
add
roll
pop
jmp
xchg
add
add
mov
lods
add
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
jbe
add
add
add
add
test
mov
shl
add
add
push
add
jp
add
mov
sarl
movsl
in
leave
pop
jno
jbe
stos
movsb
xchg
xchg
std
add
je
lods
data16
add
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
push
std
mov
rol
iret
mov
jnp
mov
bound
arpl
jmp
nop
jecxz
cmpsb
fs
add
jno
outsl
lods
jne
add
push
add
jmp
je
pop
xchg
add
loop
pushf
mov
add
lea
test
into
test
out
add
add
mov
add
xlat
nop
popf
add
add
js
add
mov
lea
pop
add
push
push
push
add
pop
push
push
push
push
lea
push
push
call
fwait
mov
add
loop
add
out
incb
add
add
mov
scas
mov
rolb
jne
ja
add
add
stc
add
aad
pop
add
cmpsb
pushf
rolb
xlat
lcall
jmp
add
push
add
mov
add
add
add
stos
test
mov
leave
jle
fiaddl
add
out
mov
mov
lea
pop
push
mov
lea
push
push
push
push
push
lea
push
push
push
call
jb
add
xchg
pushf
popf
lret
jb
pop
xchg
add
xchg
add
rcll
add
popl
hlt
add
push
pop
mov
pop
add
into
mov
add
jle
je
add
rclb
je
out
add
enter
jae
insb
loop
orb
add
cmpsl
jae
aam
js
add
pop
sub
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
mov
fsubrs
cmpb
aam
aam
lods
jns
push
add
fcmovne
mov
lret
push
incb
mov
add
push
add
add
mov
add
add
leave
add
out
mov
add
push
fs
add
stc
cmpsl
mov
mov
add
add
clc
add
pop
mov
shr
add
push
push
push
push
push
push
push
call
jb
nop
cli
add
js
add
pop
add
rolb
add
add
fsubr
mov
aad
jl
fistpll
pop
add
mov
add
iret
ret
ljmp
push
cmpsl
mov
jle
add
add
out
jne
stos
add
pop
mov
add
jo
xchg
add
add
cld
loop
hlt
add
mov
add
roll
cmpsl
mov
lea
pop
mov
mov
push
sub
inc
rol
xor
pop
add
add
push
push
push
push
push
call
imul
add
mov
add
jbe
add
add
mov
enter
add
lea
mov
shll
data16
pop
pop
add
flds
pop
add
add
je
xchg
mov
mov
add
add
in
push
lret
loope
andb
jno
add
sahf
lea
push
addr16
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
fdiv
add
faddl
jo
add
jnp
fsubrl
add
loop
jmp
cltd
roll
jge
add
test
nop
pop
rcll
add
lods
pusha
add
fiaddl
lcall
jmp
xchg
xorb
arpl
add
add
roll
add
add
adc
les
sti
add
mov
add
pop
mov
add
mov
lea
pop
mov
push
lea
push
push
lea
push
push
push
push
push
call
mov
add
iret
add
into
xchg
add
pop
add
add
add
add
in
lods
mov
lods
add
jo
lcall
mov
jae
test
cmpsb
xlat
insb
cltd
add
jb
mov
mov
lcall
jge
je
aam
faddl
add
jle
add
mov
add
add
outsl
add
lock
add
add
pop
cmp
jne
cmp
jne
mov
push
lea
push
push
push
push
call
add
movsb
idiv
pop
repnz
lock
test
cli
orl
fcompl
aam
out
mov
sti
add
push
lret
icebp
popa
cmpsl
add
add
add
xchg
add
add
add
add
jno
std
hlt
mov
push
xchg
stos
in
mov
lea
pop
movl
jmp
mov
push
push
lea
push
push
push
call
fsts
aad
lods
push
jb
mov
jp
jecxz
xlat
push
stos
jb
push
lods
iret
add
push
jmp
push
out
add
pop
pop
movsl
push
aad
jge
les
iret
enter
add
add
test
outsl
gs
cmc
add
outsl
add
add
mov
mov
push
add
add
add
jmp
add
jns
push
int3
jecxz
add
enter
les
lea
pop
mov
sub
jne
push
xor
shr
shl
pop
mov
movl
jmp
push
lea
sub
pop
mov
mov
cmp
jne
push
rol
not
pop
mov
movl
jmp
push
lea
push
push
push
lea
push
push
call
mov
mov
addl
je
fsubs
mov
cli
mov
aad
idivb
add
aam
push
into
ljmp
add
aad
add
mov
add
jl
stc
aam
push
lcall
add
jno
in
mov
test
movsb
pop
pop
rclb
fistpl
mov
in
add
xchg
add
add
add
add
pop
mov
cmpw
jne
mov
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
add
mov
fadds
mov
mov
mov
push
mov
loop
add
add
fistpll
pop
lret
add
arpl
je
out
mov
enter
add
add
push
imul
int
jge
mull
hlt
mull
scas
add
add
add
movsl
add
jne
add
mov
hlt
lea
pop
movl
push
xor
pop
jmp
pushl
push
lea
push
push
push
push
lea
push
call
add
push
divb
push
add
movsl
add
add
test
in
loopne
fnstsw
repnz
js
sahf
nop
rol
push
ja
jmp
sahf
xchg
add
pop
xchg
add
fstpl
add
test
add
mov
std
mov
cwtl
xchg
jne
int
add
xchg
add
push
std
add
add
mov
mov
lea
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
jns
add
mul
xchg
add
data16
jle
jne
mov
jne
mov
mov
add
add
jge
out
cld
fildl
push
add
mov
add
add
xchg
movsl
add
add
add
shr
lock
mov
imul
add
stos
jecxz
add
test
add
xorl
hlt
lea
pop
mov
mov
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
movb
add
jecxz
into
add
mov
xchg
add
xchg
add
fadd
jle
roll
add
add
add
add
add
add
je
je
ljmp
jbe
add
jne
jno
add
js
xchg
lcall
xchg
mov
hlt
lea
pop
mov
push
push
sub
shr
rol
push
or
not
add
add
shl
inc
sub
sub
pop
inc
add
sub
pop
push
push
push
call
cli
add
loopne
add
add
add
mov
call
add
imul
add
add
in
std
sti
jl
jmp
ret
ja
mov
cld
add
rclb
cli
add
adcb
adcl
add
add
fcoms
add
jp
nop
mov
lea
pop
call
push
push
push
call
aam
add
arpl
movsl
int3
icebp
mov
cltd
test
jge
mov
cmpl
lds
add
add
test
add
scas
flds
add
lea
outsl
add
add
cmpsl
add
add
out
loop
mov
iret
add
jo
add
mov
add
jp
rol
add
imul
aam
bound
cmpl
je
push
push
rol
push
xor
add
sub
sub
sub
pop
xor
xor
pop
push
push
lea
push
push
push
call
shll
add
mov
mov
faddl
rolb
pop
add
aam
add
add
add
add
jmp
in
add
add
add
int
add
mov
fisttpl
xchg
add
add
add
xlat
add
add
out
flds
cli
add
add
andb
mov
cld
lea
pop
push
call
push
push
call
shlb
rorl
add
int
test
bound
mov
add
xchg
mov
mov
lahf
mov
xchg
fadds
cli
ljmp
add
add
movsl
mov
add
mov
mov
jnp
mov
mov
pop
jns
jno
push
mov
add
xchg
pop
clc
add
add
add
sti
add
add
iret
add
orb
cmpl
je
push
push
add
push
xor
add
dec
sub
shr
inc
sub
ror
pop
sub
pop
push
push
push
push
call
push
add
mov
lock
test
in
mov
out
fildl
add
cmpsl
jb
jo
js
test
push
movsl
jge
aam
mov
aam
mov
add
add
add
rolb
cli
stc
shlb
add
pop
imul
add
mov
add
add
out
aam
mov
stos
icebp
lcall
adc
push
push
push
push
push
push
push
push
lea
push
push
call
pop
add
add
xchg
add
add
add
scas
mov
pop
add
xchg
fadd
in
popf
hlt
add
pusha
pop
cld
pop
jno
jne
sahf
test
lods
mov
arpl
in
add
mov
mov
add
mov
loope
test
add
add
add
in
xchg
add
add
sahf
je
add
add
add
add
les
ret
add
cmpl
je
push
push
not
push
sub
add
dec
xor
xor
inc
sub
xor
pop
rol
pop
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
push
lds
add
mov
add
add
hlt
mov
test
lret
roll
rolb
stc
mov
xchg
add
add
rorl
push
mov
cwtl
mov
add
sti
mov
ret
sahf
push
add
add
lret
add
movsl
ja
icebp
testl
lea
pop
push
push
shr
pop
call
push
xor
pop
cmpl
je
push
push
lea
push
sub
add
sub
shr
sub
lea
pop
add
pop
push
push
push
push
push
call
jne
je
mov
mov
jb
bound
lret
add
add
add
add
pop
add
xchg
add
mov
add
les
add
xchg
add
sarl
add
pop
jb
mov
imull
push
cld
mov
sarb
addb
out
add
sti
xchg
enter
fadds
add
mov
popf
add
mov
fmull
push
lea
xor
pop
call
cmpl
je
push
push
shl
push
sub
add
add
add
dec
add
sub
sub
xor
sub
add
pop
lea
xor
add
xor
pop
push
pop
push
call
cmpl
je
push
push
shl
sub
push
push
pop
add
shr
sub
sub
sub
dec
sub
pop
lea
pop
push
push
push
push
push
push
lea
push
push
call
mov
lock
insb
mov
add
mov
bound
add
loope
add
ja
push
add
mov
mov
add
add
jne
clc
mov
add
xchg
add
jl
jne
add
mov
add
push
add
in
add
add
jmp
add
add
add
bound
jns
imul
add
add
pop
push
push
add
shr
pop
call
cmpl
je
push
push
add
sub
push
and
add
sub
rol
lea
shr
pop
rol
pop
push
ror
add
xor
pop
push
call
push
push
lea
push
push
lea
push
call
mov
test
std
add
movsb
test
cmc
arpl
xorb
add
out
mov
add
leave
add
add
arpl
add
out
add
aam
add
mov
stos
add
add
mov
mov
pop
movsb
mov
add
jmp
popl
add
add
mov
cld
lea
pop
cmpl
je
push
push
rol
xor
not
push
sub
add
not
shr
sub
shl
xor
sub
add
pop
add
add
pop
push
add
shl
pop
push
call
cmpl
je
push
push
push
or
inc
add
xor
dec
sub
sub
sub
not
inc
lea
pop
sub
xor
rol
pop
push
shr
shl
pop
push
push
add
pop
call
push
push
push
push
push
push
call
stc
add
add
arpl
out
add
push
xchg
xchg
mov
movsl
push
add
add
movb
push
add
leave
xchg
mov
add
mov
mov
loopne
roll
leave
cltd
add
fiaddl
add
add
scas
add
subb
add
add
mov
lea
pop
cmpl
je
push
push
rol
push
push
pop
add
not
shl
sub
shr
shr
sub
pop
lea
pop
push
shr
xor
add
pop
push
call
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
jp
arpl
sti
add
out
test
hlt
fistpl
mov
add
add
xlat
outsl
movsb
add
fiadds
ljmp
jmp
stos
push
int3
add
out
jne
fsubrp
add
mov
add
mov
add
add
int
lea
repnz
mov
popf
add
fcmovu
add
xchg
pop
gs
arpl
mov
mov
lea
pop
cmpl
je
push
push
rol
shr
push
and
add
inc
sub
xor
shl
xor
pop
shr
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
loopne
fs
add
add
lock
add
pushf
movsb
jb
clc
mov
jns
mov
add
mov
push
add
push
add
cli
ja
nop
addl
lahf
roll
add
std
add
out
add
cmpsb
add
add
jo
je
cli
movb
out
add
pop
mov
lea
pop
call
push
lea
push
push
push
push
push
call
add
add
xchg
cmpsl
add
cmc
jno
add
fistpll
add
add
add
pop
repnz
shl
add
add
nop
mov
add
bound
add
test
add
pop
xchg
mov
add
jl
jp
xchg
add
add
add
add
cld
add
add
in
add
mov
mov
lea
pop
cmpl
je
push
push
add
push
or
not
add
dec
lea
sub
sub
pop
sub
inc
pop
push
lea
push
push
push
push
push
lea
push
push
call
into
flds
jbe
add
cmc
je
add
pop
roll
add
iret
jmp
popa
hlt
cli
mov
std
add
push
xchg
add
add
in
mov
loopne
in
pop
pop
mov
aam
aam
mov
jbe
pop
add
pop
lods
int3
jle
add
arpl
add
add
arpl
stos
insb
add
pop
push
call
push
inc
not
dec
rol
pop
cmpl
jne
mov
movl
push
lea
push
push
push
call
add
push
pop
pop
mov
xlat
jne
add
push
pop
repnz
test
out
jb
add
imul
add
add
jnp
add
xchg
add
add
add
add
fptan
xchg
add
aam
add
enter
icebp
jl
add
add
andl
add
insb
lock
imul
jp
add
add
add
add
push
add
mov
lea
pop
jmp
xor
pop
push
ror
add
add
xor
pop
pop
pop
push
sub
sub
shl
add
pop
pop
push
lea
push
call
xchg
add
add
add
xchg
imul
test
outsl
out
add
les
bnd
fsubr
enter
add
add
add
add
out
mov
add
enter
xchg
add
add
jnp
out
push
shl
add
stc
pop
ljmp
xchg
add
add
add
add
mov
lea
pop
leave
ret
push
push
push
lea
push
push
call
enter
add
add
test
test
insb
in
shll
mov
mov
outsl
roll
sti
mov
ljmp
add
stos
add
add
mov
xchg
js
in
push
arpl
cltd
in
jge
jl
add
add
add
in
add
scas
std
xchg
xchg
imul
add
lea
pop
add
lret
aam
les
in
push
shr
pop
add
cmpl
jne
push
push
xor
sub
add
push
or
not
add
shl
sub
pop
sub
shr
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
jmp
add
fistpl
add
ljmp
je
addl
add
mov
add
add
add
add
add
jecxz
xchg
mov
jmp
icebp
xchg
enter
fs
add
movsb
mov
test
add
add
add
pop
pushl
call
push
push
push
push
call
add
add
test
add
stos
add
jge
add
sar
in
add
repnz
add
add
add
add
cld
addl
lods
loope
mov
xlat
mov
add
popa
push
les
imull
testl
add
add
add
sahf
cwtl
add
add
mov
add
add
pop
xchg
icebp
add
add
mov
lea
pop
push
push
add
inc
shr
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
call
fbld
add
out
jle
xor
mov
filds
popa
xchg
add
add
mov
add
xchg
xchg
lret
movsb
jno
stc
add
test
xchg
add
add
add
add
add
add
add
add
incb
lahf
pop
std
add
xchg
add
repnz
add
stos
std
jbe
filds
pop
icebp
add
testb
fmull
out
add
push
push
lea
push
push
push
lea
push
call
scas
add
addl
jb
fidivs
sbbb
addb
frstor
in
ljmp
int3
bound
mov
aad
push
mov
add
mov
add
ret
add
add
cmpsl
pop
mov
addb
popl
add
out
add
add
rolb
add
lea
repnz
sbb
jge
add
test
add
add
test
add
add
push
not
sub
pop
add
pop
push
add
pop
pop
push
shl
shr
sub
dec
pop
pop
push
shr
ror
lea
dec
pop
pop
leave
push
lea
push
push
push
push
call
add
fucomi
rcrb
loopne
hlt
mov
xchg
sti
loop
xchg
les
gs
jge
lock
add
add
add
int
add
mov
add
jp
add
adcb
add
add
xchg
shr
add
movsb
mov
push
add
arpl
add
add
add
add
int3
lea
pop
add
ret
jmp
push
push
push
push
call
jmp
add
pop
add
add
stc
add
mov
mov
testb
call
mov
fldl
add
jmp
addl
push
add
gs
testl
add
in
jmp
imul
hlt
std
add
add
fiaddl
out
lret
add
mov
add
pop
cmpl
jne
push
push
push
or
inc
add
rol
inc
sub
ror
pop
pop
push
push
push
push
call
notl
xchg
popa
add
add
js
test
pop
sahf
add
out
mov
add
test
mov
sti
movsb
mov
add
add
test
ja
add
scas
add
pop
jge
in
add
js
clc
mov
stc
fidivl
clc
add
lea
pop
pushl
call
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
xchg
add
gs
add
add
js
add
mov
cmpl
mov
add
add
mov
add
out
stos
mov
push
lcall
xchg
add
sti
jp
lahf
nop
add
lods
out
out
add
add
out
add
insb
pushf
add
roll
push
add
jb
cwtl
add
add
jae
add
sub
add
push
push
lea
push
call
add
ljmp
add
add
add
add
mov
add
add
add
out
jne
add
push
test
add
lea
ljmp
add
cwtl
add
mov
add
in
sbbl
add
aam
shrb
jns
mov
jo
loop
push
mov
add
fbstp
add
add
out
add
js
push
mov
popa
adc
call
jmp
push
push
push
lea
push
push
lea
push
push
call
jp
add
xorl
add
pushf
add
xchg
ja
add
mov
push
add
xchg
movb
xchg
add
mov
in
add
add
rolb
fsubr
data16
pushf
ljmp
mov
add
icebp
mov
loope
mov
mov
pop
add
pop
add
in
loope
ljmp
xlat
insb
mov
lea
pop
cmpl
jne
mov
mov
push
push
lea
push
push
push
push
call
mov
testl
fildl
add
out
mov
add
fwait
pop
in
add
add
imul
jne
xchg
lock
mov
add
incb
lods
lods
add
add
fcompl
add
cmpsl
pop
bound
pop
pop
add
push
insb
add
add
imul
add
add
mov
cld
lea
pop
push
push
push
add
xor
ror
shr
push
or
not
add
sub
sub
dec
dec
sub
add
shr
pop
rol
not
pop
push
push
push
push
push
push
call
add
xchg
add
add
mov
in
jmp
add
jb
imul
iret
push
jmp
int
mov
jge
pop
mov
add
test
add
xchg
popf
add
int3
fsubrs
jns
mov
cmpsb
mov
add
xlat
add
aad
addl
push
fbld
movl
mov
mov
mov
lea
pop
pushl
push
shl
inc
sub
pop
call
push
push
push
push
lea
push
push
push
call
add
fadds
add
bound
lret
add
jo
sti
jno
roll
rcrb
imul
jo
rolb
pusha
notl
push
add
out
nop
mov
lods
push
pushf
test
add
clc
iret
lcall
popf
mov
lret
add
lret
test
subl
lret
addl
push
add
mov
lea
pop
call
push
push
not
rol
push
or
not
add
not
xor
sub
pop
dec
add
sub
pop
pushl
push
push
push
push
push
push
push
push
call
add
loopne
stos
add
stos
icebp
add
add
pusha
js
jmp
lahf
add
out
mov
lret
add
push
add
jmp
pop
addr16
add
icebp
mov
mov
pusha
mov
pop
mov
add
movsb
movl
fnstenv
test
mov
add
mov
mov
push
out
mov
lea
pop
call
call
push
push
shr
rol
sub
shl
push
push
pop
add
shr
add
sub
xor
shr
pop
lea
shl
pop
push
add
pop
pushl
call
call
push
push
add
push
or
not
add
add
xor
inc
sub
sub
lea
pop
inc
add
xor
pop
push
push
push
and
add
lea
lea
sub
shr
lea
pop
sub
dec
pop
push
rol
lea
pop
call
pop
dec
jne
push
push
push
push
push
lea
push
push
push
push
call
add
sti
test
xchg
add
add
add
fwait
cli
cli
filds
into
add
add
ret
add
push
add
iret
loop
stc
mov
jb
add
mov
jo
xchg
add
in
add
insb
stc
push
add
jl
add
out
xorb
add
pop
call
jmp
call
push
push
inc
push
and
add
xor
dec
inc
sub
sub
pop
ror
sub
pop
push
shl
pop
pushl
push
push
push
push
push
push
lea
push
push
push
call
push
push
add
mov
mov
sahf
cli
add
data16
mov
add
out
add
repnz
ficomps
fdivl
mov
add
mov
jl
mov
mov
mov
mov
add
add
aad
add
add
les
add
hlt
scas
jo
add
add
and
call
push
push
sub
ror
pop
call
mov
push
xor
inc
pop
lea
push
push
add
xor
push
push
pop
add
dec
sub
inc
sub
ror
pop
shr
pop
push
push
lea
push
lea
push
call
int
fninit
push
add
aam
jle
add
add
mov
add
in
mov
add
lcall
add
fdivl
lret
add
add
fimuls
out
mov
gs
cmp
roll
add
ret
xlat
add
push
add
push
jo
xchg
hlt
add
sti
cmpb
sti
scas
add
mov
lea
pop
pushl
call
push
ror
shr
add
pop
push
push
push
lea
push
push
push
push
call
in
add
jge
add
mov
aam
add
enter
or
fwait
jae
mov
lret
add
add
mov
push
fldenv
jle
insb
add
test
mov
lahf
lods
add
les
loop
add
cli
mov
jecxz
jle
add
pop
add
add
aad
mov
lea
pop
call
push
push
add
not
add
push
and
add
add
ror
sub
pop
ror
shr
lea
lea
pop
push
sub
pop
pushl
call
push
push
lea
push
push
lea
push
push
push
lea
push
call
into
stos
mov
jmp
data16
fsubrl
push
add
jnp
cmpsb
mov
out
in
lea
add
add
lcall
mov
cmc
int3
test
into
in
add
stc
movsl
loope
mov
add
xlat
les
add
movsb
add
in
mov
idivl
pop
mov
lea
pop
call
mov
lea
push
push
sub
add
rol
push
or
not
add
ror
dec
not
sub
inc
pop
add
rol
not
pop
push
shl
add
shr
pop
pushl
call
lea
push
xor
pop
push
push
push
add
pop
push
pushl
push
push
inc
sub
push
sub
add
dec
shl
not
sub
shl
pop
xor
pop
push
push
lea
push
call
js
jl
add
add
mov
int3
add
pop
add
xchg
add
mov
imul
add
mov
ficomps
add
add
push
add
mov
pop
add
add
mov
pushf
push
mov
fadds
xchg
ljmp
pop
add
add
mov
add
test
icebp
int3
mov
or
push
push
shr
shr
shl
pop
call
push
push
dec
ror
sub
add
push
or
inc
add
inc
add
sub
shr
ror
pop
shr
add
rol
pop
push
push
push
push
push
lea
push
push
call
add
test
add
lcall
xchg
xchg
xchg
in
jmp
out
popf
test
add
add
stos
xchg
imul
push
jno
data16
add
add
mov
shlb
icebp
out
xchg
cld
pop
clc
add
in
rolb
pop
test
xchg
add
leave
add
lcall
mov
addb
add
xchg
add
test
mov
pop
pushl
push
lea
push
push
push
push
lea
push
call
add
add
add
insb
fwait
std
ret
add
add
jmp
add
add
sahf
add
push
add
xchg
leave
add
call
fadds
fsub
push
out
xchg
mov
add
add
popa
mov
add
jl
add
add
addl
lods
add
mov
lea
pop
call
push
call
push
push
dec
push
or
inc
add
inc
sub
rol
not
pop
shr
dec
sub
pop
push
add
sub
pop
pushl
push
push
push
push
call
out
add
add
shrl
mov
add
mov
pop
movsl
jge
mov
add
add
add
test
pop
add
rolb
push
mov
out
pop
push
mov
cmc
add
add
xchg
add
add
add
add
les
test
mov
add
xchg
data16
mov
std
add
ficoml
sti
xchg
add
mov
lea
pop
call
call
push
shr
rol
ror
pop
jmp
push
push
push
call
cmpsb
mov
mov
add
mov
movsl
add
mov
in
push
add
add
add
addr16
jmp
push
mov
add
jp
mov
add
mov
add
add
jbe
imull
mov
movsl
outsl
mov
mov
popf
add
loope
pop
scas
jae
xchg
add
in
add
pop
pushl
push
push
push
lea
push
push
push
push
lea
push
push
call
push
push
ja
mov
add
popf
call
addl
add
add
pop
add
mov
filds
mov
jge
lcall
add
loop
mov
icebp
add
add
cmpl
jo
hlt
add
add
xorb
cltd
imul
mov
lea
pop
mov
jmp
push
push
add
push
xor
add
sub
shr
rol
rol
sub
rol
shr
xor
pop
ror
add
rol
pop
push
push
lea
push
call
jp
addr16
add
add
mov
test
add
jns
jle
cmc
add
pop
callw
add
push
jle
push
add
mov
add
sahf
add
add
xchg
add
ret
fwait
call
push
add
lret
jge
mov
add
add
add
add
jmp
add
imul
add
or
pushl
push
sub
xor
pop
call
push
push
push
push
lea
push
push
call
xchg
rcrb
pop
fs
mov
add
add
scas
lcall
add
pop
add
push
add
add
ja
cmpsb
jno
sbb
lods
mov
add
filds
out
add
imul
add
in
add
mov
add
jecxz
add
mov
mov
cltd
add
add
sbb
add
shrb
jno
call
notl
lret
push
rolb
add
repz
sub
xor
add
pop
shl
rol
inc
pop
push
xor
add
pop
pushl
push
pop
call
push
call
push
push
push
lea
push
push
push
push
push
call
add
arpl
popf
out
rolb
cmpsb
lret
add
pop
clc
add
stos
pop
jo
idivl
add
pop
faddl
sbbb
loope
add
popf
lret
insb
clc
add
hlt
popw
push
jp
mov
call
in
bnd
adc
jbe
add
nop
add
add
add
add
scas
add
add
add
addl
test
add
add
pop
leave
add
pop
push
ror
pop
pop
push
push
call
xchg
xchg
add
addb
movsl
bound
test
xchg
fidivs
add
push
add
fs
add
add
mov
cwtl
add
add
cmpsb
mov
lock
mov
push
pop
lcall
add
push
add
add
push
jl
add
pusha
or
pop
leave
push
add
add
pop
add
ret
leave
push
push
push
call
push
jmp
jecxz
add
fimuls
cld
stc
add
add
add
test
mov
add
in
sbbb
js
pop
pop
stos
add
pop
out
add
addb
jno
addl
call
js
pop
add
mov
mov
add
scas
int
add
xchg
add
add
add
mov
loop
gs
scas
push
add
jl
jno
add
lcall
mov
bound
ret
push
dec
lea
pop
push
mov
push
pop
cmpl
jne
mov
jmp
push
push
push
push
push
call
jl
add
add
out
add
add
add
fmul
rolb
fxam
add
add
fidivl
add
shrb
rorb
pop
add
add
pop
lds
add
out
imul
rolb
pop
out
jb
add
stos
add
test
pop
out
add
mov
out
add
mov
lea
pop
mov
push
sub
inc
add
rol
pop
and
xor
xor
push
push
call
ficomps
sahf
pop
add
test
lea
into
sbbb
arpl
xchg
jmp
add
jns
add
add
nop
add
out
add
mov
int3
imull
mov
mov
roll
fwait
orb
mov
outsl
arpl
add
add
xchg
pop
add
xor
push
lea
push
call
jp
pop
add
aad
leave
add
mov
xchg
imul
jmp
jecxz
jmp
add
in
fidivs
movl
xchg
cltd
out
add
scas
hlt
fsubp
cltd
fsubr
add
push
pop
mov
fwait
cld
in
lcall
imul
push
addr16
push
add
jecxz
push
add
add
mov
pushf
outsl
addl
add
add
movsb
orb
testl
or
sub
push
ror
pop
jmp
sub
pushl
push
push
push
push
lea
push
call
leave
test
add
mov
popl
add
push
add
add
push
imul
aad
enter
jns
stc
xchg
test
add
jne
add
aad
xchg
push
fiaddl
in
movsb
mov
mov
popl
add
add
add
push
scas
push
add
add
in
add
pop
mov
lea
pop
pop
push
sub
not
shr
sub
pop
sub
push
sub
pop
cmp
jne
push
lea
push
push
call
aam
add
addb
jbe
loope
mov
add
mov
pop
addr16
add
imul
jmp
add
add
xchg
pop
lret
xchg
mov
add
mov
mov
pushf
shlb
add
in
jmp
fwait
lcall
add
in
mov
lea
pop
mov
push
shr
pop
lea
sub
mov
push
push
push
push
call
add
push
add
add
mov
mov
imul
jne
cmc
add
int
mov
add
pushf
mov
iret
xchg
mov
bound
add
add
jnp
xchg
add
popf
roll
fiaddl
add
lcall
jmp
add
add
mov
aam
bound
pop
shr
push
push
lea
push
call
add
popa
mov
pop
add
rol
add
scas
add
mov
pop
jae
mov
add
xchg
divb
xchg
xchg
push
cld
add
sarb
add
orl
add
addl
add
add
pushf
push
add
std
add
add
xchg
xchg
fs
mov
sar
add
ja
arpl
add
add
std
jb
add
lea
pop
add
push
push
call
lret
add
add
mov
stos
movsl
cmpsb
add
cli
cmpsb
lret
add
lahf
and
add
jb
loope
addb
add
add
popf
clc
stc
xchg
fdivl
add
mov
stc
add
add
cmpsb
add
std
add
mov
add
add
stos
jmp
pushf
add
add
add
inc
pop
add
add
add
out
fldt
add
add
cld
lea
pop
sub
push
push
lea
push
lea
push
call
test
movb
pop
mov
add
lock
add
out
pop
faddl
enter
xchg
std
mov
leave
mov
add
add
test
add
add
repnz
add
out
add
add
loop
add
mov
mov
xchg
je
out
hlt
add
fimull
pop
pushl
pop
shr
push
ror
xor
pop
and
push
xor
dec
ror
pop
sub
push
pop
cmp
jne
push
push
lea
push
lea
push
push
lea
push
call
fwait
pop
leave
push
in
pop
mov
add
add
add
fisubrl
add
mov
push
push
xchg
xchg
add
add
fadds
ror
add
roll
add
jp
add
add
test
js
nop
js
mov
popa
out
lret
add
pushf
add
bound
fwait
jp
into
mulb
add
add
add
pop
leave
push
push
call
jge
add
out
imul
movb
xchg
into
add
jno
mov
add
divl
out
add
add
leave
out
pushf
add
jns
mov
ret
push
mov
mov
jp
into
bound
add
loope
mov
add
bound
push
in
lcall
xchg
add
cwtl
add
negb
mov
lea
pop
ret
push
push
rol
pop
mov
add
push
push
push
call
sti
push
mov
stos
add
jl
enter
jb
add
lea
add
add
mov
push
mov
add
add
movsb
mov
add
add
add
xchg
loop
add
mov
add
pop
add
push
mov
rcr
pop
pop
add
jmp
add
mov
mov
lea
pop
push
push
push
lea
push
push
push
call
lret
add
je
mov
in
add
add
add
add
add
jecxz
add
add
add
add
lret
mov
add
add
rolb
into
add
push
scas
add
into
test
jle
add
fiadds
mov
add
cmpsb
jne
iret
mov
add
stc
add
mov
lea
pop
push
push
push
sub
pop
push
push
push
call
jnp
mov
insb
shlb
mov
lahf
add
popl
add
pop
jmp
add
cli
out
shr
xchg
cmpsb
push
rorl
aad
mov
add
aam
mov
imul
xchg
add
add
add
mov
jnp
jmp
popa
add
jl
xchg
mov
add
ja
add
cmpsb
add
fildl
imul
add
or
pop
or
shll
ljmp
add
add
shrl
mov
add
add
xchg
mov
enter
add
cmpsb
mov
add
add
push
pop
xchg
add
fwait
add
insb
addl
add
add
int
test
add
mul
stc
add
add
add
add
mov
imull
in
adcl
push
popf
add
mov
jno
cld
lea
pop
mov
push
push
push
lea
push
call
xchg
add
pop
add
push
push
loop
add
fdivl
cli
jp
fstpl
add
sarb
jo
jge
add
notl
cld
jp
add
pop
ljmp
loop
add
mov
mov
add
add
jp
cmc
int3
pop
add
xchg
lret
roll
std
add
add
add
mov
cwtl
mov
lea
pop
shr
add
push
shr
pop
mov
push
sub
shr
add
pop
add
push
lea
push
push
call
add
add
add
mov
xlat
add
cmc
js
mov
fdivrs
pop
add
into
add
lods
add
add
add
add
add
jno
push
xchg
leave
push
add
add
mov
add
add
jmp
lods
mov
cmpsl
mov
les
cltd
push
test
add
in
enter
addr16
mov
add
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
jl
push
mov
add
add
mov
jnp
pop
add
arpl
add
into
add
add
add
add
jp
add
add
add
out
add
add
mov
mov
jecxz
gs
jle
clc
iret
negb
cmpsb
add
add
test
in
repnz
xchg
add
add
les
testb
xor
rol
add
pop
call
add
push
add
xor
pop
cmp
je
push
push
call
add
add
add
lock
add
sahf
pushf
add
add
add
add
push
add
aam
fdivrs
add
cmpsl
xchg
add
add
add
ret
ret
test
testl
push
add
add
cwtl
in
mov
pop
add
pop
imul
add
hlt
lea
pop
add
cmpl
jne
xor
push
shl
pop
pop
push
push
lea
push
push
call
push
jmp
mov
xlat
addb
loopne
icebp
into
aad
add
cld
mov
nop
ljmp
mov
jne
add
jge
add
add
mov
push
jns
add
add
add
add
cltd
cmpsl
stos
pop
push
ja
add
fcoms
mov
mov
lea
pop
pop
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
andl
add
jne
stos
add
stos
add
mov
stc
add
add
add
add
add
add
in
mov
fiadds
in
add
jbe
add
mov
add
add
pop
lods
add
ror
xorl
icebp
sbbb
add
in
ficomps
hlt
imul
mov
lea
pop
pop
push
push
call
add
cwtl
xchg
xchg
add
xchg
add
addl
lcall
mov
add
jne
mov
addl
pop
add
out
int
add
add
add
mov
add
add
jmp
pop
outsl
push
les
add
int3
pop
add
xchg
add
fiadds
push
ja
mov
jmp
add
pop
pop
push
push
push
push
lea
push
push
call
data16
push
mov
jb
popl
imulb
cli
imul
add
into
std
fldl
add
add
pop
jl
in
andl
pop
add
nop
add
fiaddl
add
enter
xchg
imul
lea
movl
arpl
add
cwtl
xchg
shlb
add
pop
leave
ret
mov
push
lea
push
push
push
push
push
push
push
call
add
jno
add
lcall
jmp
push
add
test
roll
lea
cmc
addb
popf
pop
add
xlat
stos
xchg
je
add
lret
out
hlt
add
test
sti
loop
add
jmp
add
add
mov
xchg
fiaddl
fcom
ja
add
pop
jb
loope
in
fsts
in
int3
lea
pop
add
push
dec
not
pop
push
push
push
shr
pop
pop
pop
push
rol
sub
pop
mov
push
call
push
add
dec
pop
xor
push
pop
pop
pop
pop
push
lea
push
push
push
lea
push
push
push
push
call
add
lds
add
gs
pop
add
movsl
leave
scas
add
add
add
bound
rcrb
addb
mov
push
leave
push
aad
pop
add
add
mov
xchg
add
insb
push
rcrb
leave
add
fistpll
mov
lea
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
loope
out
add
in
add
jbe
add
add
js
add
stos
jbe
add
mov
icebp
add
js
mov
movb
fisubl
lock
addb
push
fs
addb
pop
repnz
insb
add
xchg
jmp
pushf
add
mov
loop
add
stos
clc
add
addb
xchg
add
add
les
push
add
ror
sub
pop
leave
ret
push
push
push
push
push
lea
push
call
add
mov
jno
out
flds
add
push
add
mov
jl
add
fadds
jne
pop
add
add
mov
add
pop
incb
int3
add
fs
mov
jne
mov
mov
add
cltd
add
mov
loop
add
xchg
add
arpl
add
add
add
add
mov
pop
push
mov
add
push
dec
add
rol
pop
push
push
push
push
push
push
lea
push
push
call
add
add
add
mov
pop
in
pop
jle
add
add
mov
mov
out
imul
jmp
add
add
out
in
fnstenv
mov
lods
add
add
leave
mov
les
rolb
add
mov
add
add
jge
pop
add
add
add
mov
lea
pop
push
push
lea
pop
mov
push
pop
push
sub
lea
pop
lea
push
shr
sub
rol
lea
pop
sub
push
add
pop
mov
shr
add
push
push
push
lea
push
push
push
push
push
push
push
call
mov
mov
cmpsl
lcall
mov
mov
popf
faddl
xchg
leave
xchg
add
jbe
add
jge
add
adc
xchg
fs
cmpsb
push
jno
add
mov
add
mov
rolb
add
loopne
add
addb
mov
jns
jnp
rolb
je
add
ljmp
pop
mov
push
push
call
add
iret
xchg
testb
jge
mov
xchg
into
mov
xchg
out
xchg
add
add
add
add
mov
scas
bound
add
aad
mov
xchg
add
leave
add
je
add
bound
cmpb
jne
add
mov
jns
mov
add
add
out
add
add
add
or
fcos
jae
push
add
sub
add
pop
popl
mov
push
xor
lea
shl
pop
add
push
sub
ror
sub
shr
pop
xor
lea
mov
push
add
ror
pop
add
push
push
call
jb
jge
nop
add
fsubrl
jge
fnstsw
add
xchg
test
add
iret
scas
add
data16
add
add
out
in
add
cld
add
add
loopne
mov
add
add
mov
faddl
cmc
add
jecxz
add
imul
lock
test
add
shl
xchg
bnd
lret
mov
mov
mov
lea
pop
xor
call
push
add
add
pop
add
nop
nop
push
add
pop
cmp
je
push
push
call
add
add
mov
mov
add
add
lahf
add
mov
loop
add
mov
mov
xchg
mov
nop
jnp
add
add
cld
add
add
mov
loop
jmp
cmpsb
add
mov
add
std
add
mov
out
mov
add
pop
add
add
clc
pop
idiv
lcall
movsb
aam
pop
xor
add
lea
pop
nop
push
inc
shr
inc
xor
pop
nop
push
xor
lea
sub
pop
inc
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
mov
push
add
jl
in
xchg
imul
mov
xchg
add
clc
jne
add
add
stos
jb
pop
push
jmp
jno
call
popa
push
scas
xchg
add
add
add
test
add
stos
faddl
add
add
add
flds
mov
stos
add
xchg
add
pusha
sub
push
ror
pop
nop
cmp
jb
push
add
rol
pop
xor
push
sub
not
pop
jmp
push
inc
sub
sub
pop
mov
push
push
push
push
push
lea
push
call
jmp
add
scas
loop
loope
add
add
ja
add
add
in
gs
add
push
out
push
add
mov
scas
mov
mov
lock
pop
add
add
add
cmpsb
loopne
cwtl
rolb
add
add
int
add
imul
outsl
mov
imul
add
mov
lea
pop
add
movzwl
mov
push
xor
pop
add
push
not
pop
mov
push
lea
inc
shl
pop
xor
push
lea
push
lea
push
lea
push
push
call
xlat
add
add
test
in
push
lods
arpl
mov
mov
jns
mov
popa
addr16
pop
shrb
add
add
stos
into
add
test
ja
std
add
mov
cmpsb
ljmp
aad
add
shlb
mov
mov
imul
popf
push
add
clc
mov
add
xchg
push
aad
iret
add
pop
xor
push
push
push
lea
push
push
push
push
call
xchg
cltd
add
add
gs
mov
add
andl
sarl
add
int3
sti
jmp
jmp
movsl
mov
stos
mov
je
loop
add
add
add
add
shlb
fs
add
add
sti
mov
push
add
mov
les
repnz
into
cli
jnp
sahf
cld
mov
lea
pop
shl
xor
shl
push
push
lea
push
call
jnp
frstor
add
movsl
cli
iret
je
lcall
icebp
movsl
lock
idivl
add
add
add
mov
mov
add
add
pushf
addl
loope
movsb
scas
pusha
lret
jmp
add
add
add
xchg
add
mov
add
rol
push
add
add
add
mov
push
scas
add
add
pop
xor
push
push
push
push
call
mov
add
leave
out
mov
add
pop
push
fcmovne
lea
mov
pop
add
push
int3
call
add
cli
out
vpmuludq
hlt
mov
cld
scas
add
xlat
mov
add
pop
jle
mov
add
add
push
loope
add
movsb
add
push
mov
lea
pop
shl
push
push
push
lea
push
push
lea
push
push
call
add
lret
fsts
add
push
jp
push
add
xchg
add
icebp
add
loopne
test
fbld
mov
lods
lds
add
fildl
scas
add
xchg
jb
push
add
lds
loop
xlat
add
add
add
cli
faddl
add
add
jns
mov
lcall
test
mov
lea
pop
xor
mov
add
push
add
inc
dec
sub
pop
pop
pop
push
lea
push
push
call
aam
mov
add
fiaddl
add
jmp
add
lret
add
add
add
mov
add
mov
mov
popf
add
jae
repnz
repnz
in
mov
add
mov
lret
add
popa
pop
mov
data16
cmpsl
add
sti
add
add
lds
ret
add
add
add
imul
stos
hlt
add
lock
add
fwait
xchg
xchg
mov
mov
lea
pop
pop
pop
push
pop
leave
push
add
shl
rol
sub
pop
ret
push
push
sub
sub
pop
mov
push
push
push
push
call
jmp
add
out
sti
add
movsb
add
imul
mov
add
push
data16
add
add
add
in
mov
add
cmc
xchg
loopne
pop
add
add
stos
out
push
add
decb
pusha
mov
rolb
push
pop
adcl
jge
jne
add
nop
fdivs
jbe
aad
add
push
mov
add
add
lea
pop
push
push
push
sub
sub
pop
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
in
movsb
mov
add
mov
add
pop
add
add
add
je
sahf
add
call
push
mov
cmpsb
xlat
mov
add
loope
add
mov
pop
add
add
lods
loopne
test
mov
shl
fistpll
pop
jmp
and
lock
jo
mov
lea
pop
mov
mov
mov
push
xor
sub
pop
test
je
push
push
push
push
lea
push
lea
push
push
lea
push
call
jno
into
add
leave
push
int3
add
into
pop
add
mov
stos
out
orl
jno
notl
add
out
lret
test
add
addr16
add
add
neg
add
mov
loopne
add
jae
mov
fdiv
jmp
loope
sahf
mov
int
add
jne
jle
xchg
add
add
movsl
aam
fmull
jno
test
je
mov
push
sub
lea
add
rol
pop
mov
mov
push
sub
dec
add
pop
inc
cmp
je
test
je
push
push
lea
push
push
push
call
scas
jo
jne
add
xlat
test
call
add
add
popl
iret
mov
xchg
cltd
push
push
xchg
stos
insb
stos
in
mov
enter
add
stos
jne
add
fwait
pop
mov
add
add
xchg
push
std
add
push
pop
add
jge
scas
mov
add
add
xlat
add
call
add
push
mov
mov
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
call
rcl
add
sahf
rolb
xchg
out
push
jmp
int3
in
add
inc
jmp
add
jle
mov
mov
mov
mov
divb
mov
mov
sahf
popa
movsl
mov
mov
aam
jp
add
add
fldenv
cld
add
test
mov
add
add
pop
inc
push
push
push
push
push
push
push
push
call
imul
shrl
lds
pop
out
pushf
clc
xchg
nop
add
jge
add
xlat
pushf
xlat
mov
mov
lcall
fldenv
pop
stos
lock
out
push
jno
movsb
add
cmpsb
out
jge
add
add
add
lods
push
add
add
call
cmpsb
fs
add
loope
push
add
mov
lea
pop
cmp
je
push
sub
pop
test
jne
xor
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
rclb
cltd
add
nop
in
mov
add
add
add
add
jle
add
adcl
add
lcall
imul
pushf
imul
mov
add
jne
movsb
add
jle
aam
roll
mov
leave
add
add
fwait
xchg
lret
cld
lea
pop
pop
push
push
push
push
push
push
call
add
add
add
data16
push
out
jecxz
add
mov
rcl
popf
movl
mov
add
mov
mov
add
add
mov
popf
iret
push
fadds
add
add
out
ljmp
shl
add
les
imul
add
add
cmpsb
push
mov
lea
pop
pop
push
push
push
push
push
call
les
add
add
push
lret
mov
push
hlt
add
ja
add
add
imul
loop
stc
add
add
add
lcall
fs
add
add
repnz
push
push
js
roll
fsubrs
add
pop
pop
push
push
push
push
call
add
xchg
add
out
push
hlt
add
int3
jns
jnp
clc
push
mov
add
ljmp
out
js
pop
add
add
push
xchg
movl
mov
popa
out
xchg
mov
cli
add
add
pop
xorb
add
test
mov
mov
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
data16
add
mov
shlb
pop
arpl
pop
insb
add
ficoms
in
xchg
pop
mov
add
sar
mov
add
scas
pop
add
mov
xchg
popa
add
lahf
add
add
jl
jmp
mov
add
push
fmul
fnsave
add
enter
xchg
je
add
pop
outsl
add
add
add
pop
leave
push
push
push
push
push
push
push
call
fmuls
les
xchg
add
add
aad
add
pop
cmc
add
add
mov
add
imul
addr16
push
icebp
in
add
incb
jecxz
nop
push
add
add
add
lods
fwait
add
add
int
loope
xchg
mov
pop
add
insb
mov
add
add
mov
lea
pop
ret
push
push
lea
push
push
push
lea
push
call
outsl
add
arpl
xlat
pop
add
add
mov
jbe
lcall
add
mov
add
push
clc
add
add
bound
add
add
add
add
jae
add
jnp
jge
mov
add
clc
out
ret
lahf
push
mov
add
add
fildl
insb
test
add
mov
lea
pop
mov
inc
push
add
pop
cmp
jne
lea
push
push
call
aad
add
faddl
add
add
add
mov
ret
add
cld
add
mov
mov
cltd
mov
testl
add
mov
mov
aam
cltd
add
add
add
test
jnp
idivl
add
add
add
popa
or
popa
add
sub
pop
test
je
push
shr
not
pop
mov
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
scas
cmpsl
iret
add
add
test
add
fs
mov
add
push
imul
add
add
add
jo
add
add
pusha
outsl
add
mov
add
mov
add
scas
imul
lcall
add
cmpsl
mov
pop
arpl
jecxz
push
mov
hlt
lea
pop
add
push
sub
pop
cmp
jne
mov
test
je
push
sub
rol
sub
pop
mov
add
cmp
je
push
add
xor
pop
jmp
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
ret
mov
mov
add
mov
fisttps
xchg
stos
add
add
add
add
push
addl
popa
mov
test
add
add
test
popa
lret
fildl
add
jp
hlt
add
add
add
pop
pop
add
cmc
lods
sahf
xchg
add
outsl
add
add
popa
and
rclb
dec
movsl
lea
push
push
push
lea
push
call
fcoms
add
xchg
mov
mov
add
out
pop
xchg
mov
add
mov
mov
ficoml
mov
jne
roll
xchg
add
mov
movb
push
jno
add
add
add
arpl
add
shll
outsl
aad
mov
hlt
lea
pop
pop
push
dec
not
shr
pop
pop
pop
pop
push
add
dec
ror
pop
leave
push
add
ror
pop
ret
push
push
lea
push
push
call
jnp
add
mov
in
mov
add
add
mov
add
mov
rcrb
mov
add
cltd
add
add
jae
push
mov
add
std
roll
movsb
jns
add
xchg
fadds
enter
add
mov
pop
add
add
push
add
test
int
add
mov
jne
add
add
cwtl
bound
pop
gs
mov
lea
pop
lea
push
lea
push
call
fs
mov
hlt
js
pusha
movsl
add
add
test
add
imul
add
add
ret
sarb
push
pop
jle
jno
jp
hlt
xorb
js
xchg
add
in
lods
test
les
add
xlat
add
add
scas
add
push
fldl
pop
imul
xchg
incb
jb
xchg
scas
add
xchg
jno
mov
lea
pop
pop
push
shr
ror
add
pop
pop
push
push
push
call
mov
fs
mov
fcom
stos
add
into
fldl
je
cltd
add
cmpsb
add
ja
ja
add
jmp
xchg
add
add
sar
xchg
add
rolb
into
add
call
mov
pop
add
mov
leave
mov
loope
add
mov
add
add
addr16
sti
mov
lea
pop
pop
pop
leave
push
lea
push
push
push
push
push
push
push
push
push
call
mov
mov
xchg
je
test
mov
mov
jnp
xchg
testl
add
clc
xchg
fwait
add
faddl
pop
pop
xchg
mov
lods
nop
mov
les
mov
fucomip
testl
mov
add
mov
add
mov
mov
pop
pushf
mov
cmpsb
add
sub
or
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
fcmovnb
popa
add
mov
add
std
add
add
in
lret
frstor
add
scas
add
jae
mov
scas
add
std
fwait
push
out
cld
add
mov
fucomp
add
add
mov
jecxz
mov
jns
add
ljmp
add
add
testl
add
ret
add
sub
pop
push
shr
inc
add
pop
pop
push
xor
shl
pop
pop
pop
push
add
rol
pop
leave
ret
push
sub
ror
pop
rol
rol
xor
push
sub
shr
pop
inc
push
sub
pop
cmpb
jne
push
ror
sub
inc
pop
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
popa
mov
sti
movsb
andl
sti
hlt
test
mov
sti
movsb
shlb
sti
xchg
push
push
adc
pop
ss
adc
data16
cmc
pop
shrb
in
movb
fwait
insb
mov
sub
pop
stos
dec
mov
mov
clc
or
in
nop
loope
es
fwait
and
pusha
add
test
xor
sahf
and
adc
clc
and
push
aas
push
dec
rolb
add
push
jge
imul
mov
scas
inc
jl
push
sub
js
adc
movsl
ja
mov
dec
icebp
mov
daa
push
nop
aam
and
cmp
fistpl
xchg
lret
in
dec
xor
pop
jle
sbb
inc
pop
cmpb
sbb
xor
mov
hlt
adc
jae
cmp
adc
test
andl
jle
and
jbe
mov
inc
inc
les
cmp
in
ljmp
mov
push
sarl
ret
into
ljmp
imul
in
test
add
std
sub
subl
and
int3
cmp
gs
pop
sbb
fildl
ds
mov
fidivrl
imul
cmp
push
dec
adc
mov
and
jbe
ret
xor
jg
xchg
xchg
jp
push
sbb
xrelease
add
pop
mov
push
inc
das
mov
outsl
shrl
and
pushf
out
bound
std
and
dec
push
popa
adc
pop
je
pusha
mov
adc
stos
add
inc
icebp
fwait
insl
stos
or
fistpll
ret
xor
in
sbb
push
mov
push
data16
or
ss
rcrl
pop
bound
pop
inc
add
sarl
push
les
jbe
sub
xor
fs
push
mov
cld
les
dec
mov
cmc
mov
sti
add
mov
adc
jnp
out
jp
jecxz
hlt
sbbb
sbb
dec
ret
sub
inc
jae
sub
cwtl
adc
pop
arpl
loopne
cmpsb
fistpl
inc
into
or
nop
out
push
dec
inc
pop
pop
push
cltd
scas
push
hlt
sbb
sarb
out
lods
push
inc
loop
movsl
add
or
in
lods
mov
ret
das
fucom
je
mov
mov
out
mov
xchg
mov
xorl
shlb
xor
pop
aad
orb
movsb
mov
addl
jmp
in
xorl
icebp
dec
out
sbb
and
lcall
stc
or
mov
ror
jge
movsl
mov
aaa
loop
add
jmp
dec
sub
in
and
jb
jbe
add
orl
inc
or
jno
mov
xor
fcomps
insb
lret
dec
mov
out
pop
or
clc
imul
or
cmp
inc
ja
cld
test
sub
add
lahf
pushf
xor
enter
adc
or
dec
mov
sub
xchg
push
or
enter
call
cmpsb
sub
incl
filds
adc
mov
shlb
add
popf
pop
das
cmpb
mov
mov
aad
adc
pop
xchg
shll
xchg
incl
in
test
mov
pop
adc
jno
fcompl
push
out
dec
mov
arpl
popf
cwtl
sahf
cmpsl
repz
dec
aam
mov
mov
mov
ljmp
ss
cmpsb
es
pop
addl
test
xor
inc
fstpl
aas
dec
testl
sub
aaa
cmp
cmp
pop
adc
cmp
pusha
adc
and
pop
movb
dec
lock
pop
xchg
mov
in
in
testb
aas
mov
das
add
mov
push
jae
jnp
xchg
loope
mov
add
and
push
ficomps
stc
sub
xchg
movsl
lcall
cmp
je
das
sarl
mov
test
sbb
or
xchg
or
and
xlat
sub
cmp
sti
daa
iret
jo
jnp
mov
jae
pop
cmp
pushf
sbb
pop
fldln2
mov
clc
xchg
inc
lret
aam
sub
cs
incb
cltd
ud2
jecxz
xchg
jnp
sahf
test
addr16
fadds
out
shll
daa
rolb
sub
sub
mov
pushf
push
jl
fdivl
pop
jmp
inc
inc
dec
mov
les
xchg
or
xor
inc
jle
inc
cmp
mov
xchg
scas
push
scas
adcl
les
mov
and
fnsave
pop
cmp
jne
aas
dec
sarb
out
stos
sub
dec
jmp
jae
out
cmovbe
fwait
sbb
imulb
cld
xlat
jp
cli
and
out
loop
enter
inc
popa
xchg
std
mov
dec
inc
fwait
hlt
mov
pop
mov
outsl
clc
mov
xchg
add
sub
or
bound
jg
je
aam
jp
mov
sbb
and
dec
cmpsl
mov
dec
into
popf
scas
or
lock
aad
mov
sbbb
mov
les
xchg
hlt
outsl
mov
into
sub
add
daa
data16
fstl
aad
dec
sub
pop
xor
pop
sub
cmc
fdivrl
mov
push
mov
add
xchg
mov
add
in
add
mov
jle
cli
sti
jnp
mov
sbb
outsb
fsts
add
mov
fimuls
mov
in
jne
pop
jae
push
cld
mov
ljmp
repz
mov
xchg
or
xchg
mov
je
testb
cmpsb
mov
sbbb
jle
push
sbb
in
lock
adc
sub
lock
xchg
pop
push
filds
cmp
xrelease
imul
pminub
cmp
and
stc
xchg
jbe
xchg
imul
aas
xchg
insb
add
jbe
mull
and
into
and
inc
cmp
pop
cwtl
fs
ficompl
out
shl
mov
scas
push
dec
push
cmp
adc
out
pushf
mov
jnp
cmpsl
xchg
das
push
xchg
push
jp,pn
jmp
stos
push
cld
jnp
add
ret
or
jle
scas
mov
scas
fwait
sbb
dec
lret
jae
ret
out
lret
sub
mov
mov
fnstsw
mov
imul
pop
ds
mov
jle
sbb
repz
push
mov
in
out
leave
push
cmp
sti
xor
fimuls
mov
xchg
out
imul
dec
push
jge
sbb
ja
jno
push
xchg
push
inc
clc
cli
pop
lcall
hlt
jecxz
mov
adc
and
mov
xchg
ljmp
es
fldl
dec
js
sbb
jo
sub
jmp
jmp
lcall
ja
cmpsl
mov
inc
pop
imul
xchg
test
jecxz
sbb
out
sub
and
sub
cmp
andb
je
addb
mov
ss
repnz
xchg
add
loop
pushf
jmp
push
push
shlb
aaa
decl
enter
add
shlb
add
in
scas
dec
pusha
pop
mov
in
xchg
sbb
cmp
jne
fsub
in
ret
sti
or
cwtl
pop
and
pop
scas
cmpsl
dec
jb
cmpb
and
rol
sbb
shr
cltd
ret
ljmp
mov
jne
and
test
or
in
mov
push
nop
inc
sbb
and
pop
enter
add
push
inc
std
cmpsb
push
inc
les
inc
pop
out
sbb
jb
dec
xor
pop
scas
sbb
inc
lds
push
push
popf
and
sahf
pop
mov
int3
insl
mov
jle
mov
mov
loop
mov
sub
jg
push
xor
inc
adc
and
outsl
mov
and
jnp
sub
pop
and
pop
push
or
dec
cltd
fistl
jns
or
adc
lock
sub
insb
or
das
jns
push
or
inc
aam
wrmsr
jg
fildl
or
sub
and
adc
pop
jo
mov
sti
ficompl
jl
dec
adc
cmc
xchg
sbb
sub
fisubl
sbb
sbb
push
cmp
inc
jne
jmp
or
push
fldt
imul
jbe
adc
js
pop
adc
jle
inc
xor
insb
mov
jg
or
sbb
movsl
call
pusha
push
int3
inc
ss
aas
and
mov
sbbl
cmp
int
pop
cs
xchg
jae
xchg
mov
inc
mov
mov
mov
mov
hlt
stc
jo
push
xchg
dec
repz
in
adc
imul
push
or
data16
mov
mov
daa
mov
mov
dec
lcall
icebp
xchg
mov
cli
sub
dec
repnz
test
xchg
mov
push
popa
repnz
inc
xor
hlt
arpl
popf
roll
pop
out
or
icebp
mov
sbb
sbb
mov
fs
xchg
dec
mov
sub
andb
or
xchg
inc
outsl
pop
ficoml
popf
imul
push
insl
stc
jns
adc
std
lock
dec
dec
mov
ret
movsl
ffree
fsubl
pop
sbb
jg
or
sbb
dec
jae
dec
cs
cmpb
pop
lods
push
cmp
pop
and
in
pop
push
pop
lods
xor
cmp
add
in
dec
inc
idivl
lds
sub
fnstenv
out
dec
pop
inc
nop
jb
daa
pushf
inc
je
out
push
test
push
mov
jo
fstl
inc
clc
ret
mov
xchg
call
test
adc
cltd
xor
push
movsl
imul
mov
jae
mov
scas
mov
dec
jle
and
adc
inc
cwtl
cltd
mov
push
lahf
cmp
or
mov
fisttpl
or
pop
xchg
cmc
jo
in
jno
call
ja
push
clc
in
fwait
divl
cmp
mov
hlt
xor
xchg
cltd
mov
mov
inc
jb
fildll
loope
outsb
adcb
adc
fldenv
dec
xchg
icebp
stc
mov
cmp
iret
jbe
jbe
ret
adc
xchg
mov
iret
arpl
pushf
andl
js
jle
sbb
push
xor
lds
dec
outsb
stos
push
mov
aad
pushf
dec
mov
lret
inc
sub
dec
or
mov
out
add
nop
outsb
shll
dec
divl
lret
cld
pop
test
mov
xor
push
stos
inc
ss
jl
jge
ljmp
inc
push
sbb
jno
sub
fs
scas
xchg
shll
inc
ss
in
ljmp
mov
xchg
cs
xlat
xchg
sbb
or
add
pop
inc
pop
std
dec
cwtl
call
adc
clc
mov
push
pop
push
pop
sti
movsl
lret
push
ret
testb
cli
mov
hlt
imul
jmp
xor
xchg
movsl
jecxz
lcall
int
add
or
fs
adc
sarb
cmp
test
mov
xor
pop
fisubrs
cmpsl
push
or
sbb
mov
inc
pop
call
adc
mov
insb
sub
jae
out
ljmp
jl
xchg
xor
mov
or
lea
popf
shrb
lea
cmp
scas
aaa
cmp
cmpsl
lods
inc
xchg
and
pop
cmp
test
xor
jno
inc
sub
in
add
sbb
lret
jle
xor
mov
and
lahf
inc
jle
push
or
jnp
mov
mov
xor
mov
mov
inc
sub
and
in
clc
xchg
fxsave
popf
adc
outsl
xchg
sub
scas
arpl
add
outsl
std
stos
adc
xchg
call
xchg
aaa
out
add
imul
mov
test
pop
mov
push
dec
mov
add
mov
lds
mov
sarl
xchg
or
scas
enter
pop
hlt
push
cli
cwtl
and
mov
pop
ret
push
pop
inc
fadd
and
mov
cmpsl
aas
sbbb
js
mov
jo
les
adc
mov
loopne
cmp
outsb
into
and
test
pop
cmpsb
xor
jg
das
dec
sbb
sahf
xor
fists
imull
sti
shlb
xor
push
sub
push
cmp
ficomps
outsl
mov
mov
cld
add
cmpl
paddusw
in
mov
cwtl
xor
and
mov
sahf
popa
mov
push
cwtl
xor
leave
div
testl
test
push
shlb
add
ret
faddp
stos
stos
jp
nop
inc
jle
lds
out
fs
pop
in
or
sub
mov
out
add
mov
mov
pop
outsb
aad
cmp
sub
stos
out
pushf
fcoms
or
mov
dec
sbb
clc
xchg
pop
push
xbegin
mov
sti
sbb
inc
pushf
fs
sub
insl
je
mov
sbb
inc
and
stos
jbe
movsl
sub
dec
push
cmpsb
fs
loope
in
jne
cli
repz
lds
jae
nop
out
adc
xchg
mov
addb
test
mov
sub
pop
into
mov
xor
lahf
inc
sub
hlt
and
daa
mov
mov
in
addr16
std
add
cltd
scas
scas
enter
in
jne
out
std
test
leave
xchg
pushf
jmp
std
inc
dec
mov
lock
add
loope
jo
xor
pop
insl
loope
into
mov
fdivrl
cltd
mov
cwtl
in
aas
sahf
dec
test
xor
fisubl
loop
xor
mov
cmpsb
adc
mov
dec
pop
fcomp
sbb
push
adc
push
popf
int3
out
out
push
add
js
mov
loope
lret
and
cmp
gs
notb
fildll
fldt
jno
sbb
rep
sub
cld
cmp
mov
mov
imul
test
cmp
and
dec
rcll
push
popa
push
adc
push
sti
fnsave
inc
shll
dec
dec
in
xor
pop
cmpb
dec
fsubrl
mov
mov
aas
mov
aad
leave
aam
and
xor
aas
mov
mov
xchg
mov
sub
test
xor
iret
cmc
ds
xchg
dec
roll
shll
push
mov
test
mov
inc
fldl
mov
popf
add
mov
push
fucomip
movsb
mov
scas
les
rclb
mov
or
imul
dec
enter
adc
sub
add
test
xchg
sbb
aaa
add
dec
mov
or
add
leave
push
int
mov
jno
repnz
inc
push
mov
xorl
xchg
or
fnstsw
jmp
mov
sub
jmp
jo
mov
pop
adc
lcall
xor
stos
pop
hlt
mov
fisubrs
xchg
jmp
cltd
fsubrs
push
dec
dec
call
out
adc
mov
pop
jns
rcrl
xor
stos
cmc
dec
out
test
out
xchg
push
rorl
arpl
pop
lahf
adc
and
adc
dec
or
insb
mov
sub
xchg
daa
clc
cmp
inc
inc
inc
outsb
arpl
push
shll
lret
jle
lret
aad
mov
jne
out
dec
jno
xor
dec
clc
add
test
imul
and
call
inc
ja
test
mov
dec
push
or
push
inc
shll
jecxz
or
insl
subb
enter
lahf
mov
push
pushl
movsw
dec
or
sbb
test
std
pop
push
pop
leave
shll
dec
sub
movsb
inc
pop
sbb
push
repz
pusha
das
dec
inc
push
cmp
mov
mov
shrb
cmp
sahf
xor
xchg
mov
fldl
es
test
jbe
mov
scas
jge
cmp
mov
decb
jo
adc
jmp
sbb
dec
sbb
add
sub
push
lret
jno
fimuls
loopne
repz
adc
cmp
jecxz
stc
xlat
mov
mov
or
pop
imul
inc
dec
jl
pop
stos
sub
xchg
mov
aam
mov
std
bound
cmp
lods
stos
hlt
jl
adc
jmp
inc
jp
push
iret
add
pushf
or
int
ret
out
test
aad
xor
push
jno
xchg
fdivs
xchg
push
gs
jmp
in
outsb
jnp
bnd
mov
mov
xor
icebp
push
push
mov
inc
and
jno
inc
pop
jge
sbb
mov
ficompl
sub
addr16
outsb
mov
imul
mov
and
sti
mov
arpl
roll
sub
pop
add
adc
shrl
lret
push
nop
filds
shll
ss
ret
lcall
pop
mov
test
or
les
imul
lea
mov
sbb
hlt
sub
inc
ja
mov
scas
lods
call
push
in
icebp
mov
push
and
fadds
out
mov
add
mov
jle
or
cmp
mov
out
push
jp
mov
dec
cs
movsb
sbb
and
push
pop
push
mov
push
imul
mov
outsb
adc
dec
xchg
and
or
cmpsb
inc
pop
insb
loopne
or
adc
adc
adc
xchg
aam
push
mov
dec
movsl
mov
les
cmp
xchg
add
mov
adc
jnp
sbb
cmpsl
inc
mov
inc
cmp
mov
or
or
xlat
add
fcmovnbe
inc
xor
add
mov
xchg
lret
xor
lcall
jbe
leave
icebp
out
lret
add
mov
inc
ds
mov
mov
and
sbb
leave
dec
add
xchg
je
in
idivl
adc
push
mov
sbb
gs
jecxz
pop
lods
insl
aaa
pop
loop
js
and
push
cmpsl
mov
pop
pop
ficoml
out
jmp
sbb
xchg
add
movq
mov
mov
push
shll
cmp
es
and
push
mov
jecxz
popf
leave
mov
inc
jb
minps
pop
in
mov
cli
scas
cld
or
insl
push
add
insl
push
mov
or
dec
jge
xor
push
ror
xor
jge
xchg
inc
stos
into
fwait
pop
push
lret
push
loop
cs
xor
mov
insb
movsb
jl
aaa
sbb
jns
aad
syscall
cmp
sbb
jge
xor
or
push
xor
adc
testb
sub
jmp
iret
fldcw
loope
and
inc
sarb
push
sub
push
int3
jno
inc
popa
fxch
cs
rcll
add
popf
popf
push
shlb
gs
mov
gs
mov
adc
sbb
in
sbb
mov
shll
and
mov
push
adc
pushl
test
push
and
cmpsb
jp
shll
xor
jecxz
ss
push
lea
into
pop
adc
repnz
mov
pop
bound
pop
add
inc
sub
pop
mov
pop
mov
mov
movsl
cli
call
out
fs
std
lahf
out
adc
mov
arpl
sahf
pop
les
fldenv
lods
and
stc
cltd
lahf
outsb
cltd
into
pop
mov
sub
fwait
pushf
in
imul
bound
fld
in
ret
or
cld
inc
movsl
test
pop
add
cmp
pop
pop
push
xchg
iret
and
aas
test
inc
aas
addr16
rorl
fists
test
xchg
mov
mov
lahf
sbb
pop
cmp
call
dec
pop
negl
dec
mov
push
and
xchg
dec
add
sub
push
inc
loope
pop
cwtl
and
into
data16
ljmp
stos
loop
cli
in
repz
mov
push
cmp
arpl
cld
mov
add
notb
out
jecxz
sub
lcall
lret
lock
and
sbb
idivl
sti
pushl
lock
push
gs
dec
xor
std
addr16
and
and
push
sub
loop
mov
int3
loop
pop
inc
xor
loope
aas
pop
in
jge
cmp
jns
xchg
in
jl
scas
dec
shll
fcomip
pop
shrl
pushf
test
ljmp
mov
in
xchg
add
ja
adc
xchg
push
xchg
je
fistpl
outsb
js
or
ret
dec
aaa
jp
add
addr16
imul
pop
into
xor
into
sbb
ds
xchg
inc
sub
fisubs
outsl
movsl
mov
mov
push
sub
push
in
pusha
dec
notl
sarl
je
cmp
mov
jmp
mov
xchg
mov
imul
gs
mov
into
lret
popa
xchg
sub
dec
iret
sbb
sbbl
xchg
adc
push
add
jp
or
sbbb
fisubl
test
jnp
cmp
addr16
sbb
sbb
mov
cmp
clc
test
add
push
jo
dec
or
add
push
and
xor
test
sub
add
and
inc
aaa
inc
cwtl
mov
xor
adc
adc
mov
lret
clc
pop
hlt
popa
xchg
int3
pop
std
pop
and
pop
js
mov
mov
pop
addl
lahf
sbb
jne
mov
xchg
jae
aaa
int
push
mov
decl
pop
or
adc
mov
xor
jne
arpl
loopne
into
fsubl
inc
dec
xlat
test
cmp
repz
aad
das
or
cmpsb
mov
push
jmp
jle
push
push
mov
mov
aas
cmp
out
mov
inc
leave
and
sbb
daa
and
rcrl
xchg
xorb
xchg
jns
sbb
sbb
push
sti
push
lds
es
dec
sbb
ljmp
xor
inc
mov
xchg
ds
imulb
ret
rcrb
jle
inc
hlt
gs
imul
pop
out
stos
push
dec
mov
inc
out
xchg
mov
fptan
out
aad
out
sub
sub
add
push
jnp
pushf
adc
outsl
adc
fisubrs
insb
mov
fstl
call
scas
std
xchg
cmp
mov
movsb
lcall
test
inc
jle
push
and
and
test
mov
dec
mov
adc
es
mov
push
test
es
je
and
adc
rclb
fmuls
xchg
mov
in
mov
mov
aas
mov
cmc
int3
or
xchg
aad
test
push
sbb
add
leave
dec
push
or
push
popa
mov
dec
fwait
cmp
pushf
jnp
shl
fwait
ja
cmp
fsubrs
ret
dec
int3
in
mov
outsl
xlat
das
aaa
cmc
out
add
pop
pop
pop
adc
push
xchg
pop
test
sub
cmp
push
cmp
gs
push
sbb
jmp
aaa
push
cmpsb
out
hlt
das
mov
dec
mov
pop
adc
scas
test
or
into
push
std
sbb
pop
lods
mov
dec
clc
pop
mov
lret
push
or
cmp
or
mov
loopne
lock
ja
test
cmpsb
movsb
jl
loop
jecxz
lds
lcall
in
in
jne
pop
or
sbb
movsb
fisttps
push
mov
inc
outsb
movsl
jge
fucomi
sub
imul
push
adc
dec
cld
ja
and
push
mov
sbb
and
dec
popf
dec
dec
addr16
ret
xchg
subl
push
and
std
std
shll
mov
cli
je
ret
out
mov
push
mov
sbb
sti
and
rcl
mov
out
les
mov
sbb
jnp
cld
ljmp
cmp
mov
mov
jo
add
imul
inc
ret
jl
fildll
sti
pusha
sti
mov
imul
add
and
mov
xor
sahf
pop
mov
sbb
pop
xor
fildl
stos
sahf
push
rorl
or
frstor
adc
sbb
icebp
shll
sbb
cmpsb
aam
icebp
sahf
inc
inc
push
dec
lahf
mov
loope
es
and
addl
stc
stc
call
pop
loopne
cmp
sbb
aas
clc
add
jae,pn
movsl
cmp
push
or
repz
sub
aaa
inc
adc
xor
loope
add
cmc
adc
xchg
insb
adc
pop
inc
std
out
loope
ja
push
pushf
pop
and
dec
jmp
jo
test
pushf
cld
adc
mov
dec
push
or
xor
and
fidivrs
out
add
jmp
cs
xor
dec
xchg
inc
dec
ret
mov
push
mov
xor
cmp
enter
sub
int
push
xor
push
out
cmc
das
popf
mov
popf
mov
das
ss
jne
rcl
pop
arpl
rcll
cmp
xlat
repz
mov
in
sub
test
jae
add
mov
jns
daa
es
mov
inc
movsb
sub
fwait
scas
test
mov
gs
movsl
outsb
ds
ret
pop
std
and
shll
cli
into
pop
push
jge
or
cld
inc
xchg
push
iret
in
loope
mov
jb
add
sub
fisubrl
mov
xor
pop
jmp
ror
inc
add
lret
jnp
jge
scas
adc
ret
cwtl
fdiv
lods
xchg
shrl
aam
xorb
test
or
mov
or
push
sub
mov
push
pop
push
push
and
xor
push
mov
adc
iret
idivb
lcall
and
icebp
jp
sub
mov
sti
popf
ret
movntps
lods
ljmp
mov
jo
in
push
loop
hlt
mov
push
incb
lea
jp
cli
xchg
xor
xor
dec
bound
test
cmc
add
mov
idivb
xor
add
dec
popa
mov
aaa
cmp
aaa
iret
bound
lods
lret
dec
jl
outsl
xchg
xor
mov
mov
loope
cmp
mov
imul
insl
sub
insl
loop
dec
rcll
out
jo
sub
popa
jge
cmp
test
loop
dec
lret
push
and
sti
outsl
aad
lock
fnsave
jnp
add
jp
ss
cmp
sub
andb
loop
gs
jo
pop
jo
lea
test
addr16
sub
adc
push
dec
dec
xchg
stc
xor
call
inc
push
pop
out
jo
in
xchg
inc
cld
shr
repz
mov
inc
mov
adc
mov
push
sub
loope
inc
ss
cli
mov
das
cld
into
mov
xor
dec
xchg
jns
mov
push
fldt
and
mov
cmc
setb
gs
cwtl
dec
xor
pop
dec
movsl
enter
push
lea
jno
bound
outsb
rol
movsl
rcl
mov
lahf
sbb
sbb
stc
fiaddl
add
je
pop
stos
mov
movsb
adc
je
outsl
fisubrl
mov
cmp
mov
mov
ret
push
push
scas
cmpsl
adc
adc
add
loopne
mov
cmp
into
xor
cwtl
int3
sub
jg
pop
push
daa
or
aas
out
sub
mov
sub
mov
mov
push
stos
adc
repz
add
int3
pop
mov
cmc
mov
xor
fdivrp
es
inc
fistpl
lret
je
push
fidivrl
cwtl
pop
dec
cmp
lahf
pop
scas
icebp
jo
leave
mov
sti
dec
fsubrl
fnstsw
xchg
dec
mov
mov
xchg
ljmp
cmpsb
xchg
xor
and
aaa
mov
add
inc
jle
andb
das
test
pop
lock
push
es
shrl
jb
test
stc
dec
mov
scas
jbe
lds
mov
adc
xchg
push
aam
shll
dec
sbb
cli
jne
mov
mov
mov
add
mov
sbb
dec
pusha
inc
mov
ficoml
xor
lock
and
push
in
and
loope
sbb
mov
xchg
ret
call
xchg
pop
pop
test
out
into
ret
adc
ljmp
iret
insl
xlat
addr16
out
int
sub
cmp
imul
repnz
jge
stos
jg
fistpl
ljmp
cmp
in
arpl
in
cmp
fnstenv
pop
mov
xor
ret
nop
rorl
repnz
cmp
add
cltd
sar
sbbb
or
mov
mov
data16
push
imul
xchg
push
sarl
xchg
xor
push
fiadds
jns
jp
test
outsl
mov
dec
xor
xor
lods
scas
sti
pop
inc
cmp
xchg
leave
loope
out
mov
jg
xor
aam
jne
xor
and
fucomip
xchg
shll
mov
sub
inc
arpl
cmp
sbb
out
mov
sub
jmp
sub
pop
mov
daa
xor
dec
ja
in
xchg
imul
popa
xor
imul
lahf
xchg
loopne
dec
mov
mov
gs
imul
cmp
xchg
scas
cwtl
xchg
mov
popa
sarl
imul
stos
in
ljmp
add
aam
add
adc
cmp
aaa
fsub
test
lret
outsb
xor
popf
push
enter
imul
mov
pop
inc
clc
xor
jp
hlt
pusha
aas
mov
add
jno
xchg
mov
test
sbb
ret
adc
mov
rcrl
pop
pop
jne
cmpsl
xchg
and
xor
lds
xor
test
pop
cltd
sub
xor
mov
ficoml
daa
stc
mov
mov
add
pop
jno
repnz
arpl
xchg
test
arpl
in
pop
mov
add
mov
cmp
inc
add
push
or
push
fistps
lahf
fcomps
push
sahf
jb
repnz
add
mov
mov
loop
daa
jnp
leave
mov
out
and
cwtl
popa
sbb
ret
lds
sbb
xorl
jecxz
arpl
xchg
in
cmp
imul
mov
imul
add
and
arpl
cmpb
aas
mov
call
mov
imul
jg
stos
inc
sbb
or
pop
leave
mov
xor
xchg
stos
addr16
scas
add
sub
push
in
repz
cmp
push
cwtl
lock
pop
arpl
mov
mov
inc
dec
mov
mov
loope
sbb
pop
and
add
in
sbb
add
or
imul
xchg
in
xchg
pop
out
mov
mov
mov
testl
pmullw
enter
add
cmp
xchg
mov
or
loopne
mov
adc
dec
imul
outsl
hlt
ret
andb
mov
std
imul
loope
jp
xor
and
movsb
aaa
or
mov
xor
je
xchg
testl
and
ret
pop
out
adc
adc
into
or
mov
popf
lahf
mov
xchg
xor
sahf
mov
mov
iret
push
cmp
imul
dec
jb
int
not
add
lods
mov
adcl
mov
pop
pop
cltd
inc
mov
fs
sbb
mov
push
cltd
shlb
inc
loop
arpl
dec
jbe
test
push
push
sbb
mov
mov
rolb
cmpsb
mov
fcomps
fld
mov
lods
mov
pop
movsl
cmp
push
xchg
ss
dec
adc
lods
cld
js
cmp
leave
push
stos
scas
lods
mov
xchg
push
subb
scas
pop
scas
test
test
testb
out
ret
jb
pop
aam
rcrb
lods
cmp
sub
mov
mov
jecxz
jae
add
aam
movsl
adc
lcall
inc
and
mov
pop
and
lds
mov
mov
dec
xor
mov
mov
sbb
mov
cltd
insl
sbb
mov
inc
mov
push
jecxz
dec
shlb
sbb
and
lret
add
std
push
dec
xorl
xchg
stc
out
fcomps
sub
jbe
xchg
push
nop
out
out
mov
pop
and
lods
xor
addr16
mov
push
addr16
in
pop
lods
pop
sub
and
movsl
outsb
push
sub
pusha
out
dec
addr16
shl
call
in
push
aaa
jo
sbbl
push
inc
fldl
lds
sbb
shlb
mov
and
and
rol
mov
sub
lods
stc
je
subl
jae
dec
mov
enter
or
imul
cld
mov
bound
jnp
dec
lahf
pop
mov
or
int
mov
pop
and
fcoms
addb
inc
inc
push
mov
mov
jb
inc
stc
mov
adc
mov
sbb
shrd
push
ss
push
aam
xchg
mov
lds
jo
ds
daa
decb
push
sarl
ret
mov
out
cmpb
arpl
push
jmp
mov
dec
insb
fldl
pop
int3
xchg
gs
jns
les
movsl
mov
lds
test
pop
mov
sbb
cmpsl
rcr
pusha
lea
sbb
cmp
xor
push
test
in
push
cltd
add
sbb
stc
jne
aad
out
and
pop
lret
aad
pop
sbb
mov
js
add
push
push
cmc
dec
ss
js
mov
xchg
sbb
adc
xor
in
add
test
icebp
out
leave
and
js
push
sub
mov
add
push
mov
fs
fsubrs
add
cmpsb
pop
in
mov
fidivrs
sbb
inc
pop
cli
mov
ds
int3
rcrb
jp
dec
cmpsb
add
xorl
push
cltd
ss
dec
mov
xchg
push
mov
jo
out
cmpl
test
ljmp
adc
push
cmpsb
xchg
subb
hlt
xchg
xorl
jmp
iret
mov
fwait
rcll
or
test
idivb
mov
mov
sbb
xor
ficomps
enter
fcoml
and
mov
insl
inc
mov
sahf
mov
jl
jmp
stos
dec
cltd
mov
dec
and
dec
push
aas
or
aad
xor
cmpsb
dec
push
imul
add
sbb
andl
cmp
fwait
bound
pushf
sbb
out
sti
and
or
popa
fsts
xor
ja
mov
je
sahf
pop
adc
int
or
push
insb
or
bound
imul
movsl
push
fnsave
xchg
dec
js
test
push
push
outsb
cmp
cld
outsb
shll
sub
dec
repz
aam
dec
add
inc
sbb
dec
xlat
fistpll
push
orb
mov
fnsave
aaa
cmpsb
jbe
movsb
in
mov
xlat
jo
and
test
ss
inc
sub
sbb
or
ret
add
aaa
lret
jne
pop
mov
and
icebp
mov
jp
addr16
lods
lods
aam
call
and
dec
mov
xchg
or
sbb
hlt
adcb
sahf
or
lcall
je
push
into
pop
pop
or
mov
lods
aam
ja
test
dec
sbb
fildll
mov
in
push
scas
xor
lods
sub
lret
push
das
ficoml
or
jno
stc
das
xchg
icebp
or
or
js
push
subb
jge
xchg
call
or
and
xchg
call
pop
aad
adc
mov
scas
ret
sbb
mov
and
xor
ja
daa
push
jle
lock
test
fisubrs
fdivrl
fisubrs
repnz
cpuid
inc
sti
cmp
fs
mov
mov
jno
jl
cld
mov
je
and
mov
mov
or
mov
jnp
sti
xchg
outsb
xor
fwait
push
pop
int3
test
arpl
out
roll
rcrb
mov
xlat
je
pop
or
lcall
or
add
xchg
lea
lods
lods
jmp
gs
sbb
adc
dec
jl
push
mov
stos
cli
loop
pop
cmp
or
pop
fsubrl
mov
inc
cwtl
fs
iret
repnz
push
inc
push
push
aaa
mov
sbb
xchg
xor
js
jp
mov
mulb
ret
rolb
lea
insl
movsb
xchg
imul
push
xchg
repz
jo
adc
xor
cmpsl
popa
cmc
sub
jmp
pop
mov
lods
test
push
lret
shll
inc
lea
jbe
in
mov
aad
mov
int
inc
or
jg
icebp
jo
dec
fucom
add
repz
jge
cmp
xchg
std
cltd
jbe
ds
mov
pushf
loop
jbe
jb
or
mov
cmp
gs
mov
inc
push
and
es
cmpsb
dec
sub
dec
stos
out
shll
jp
popf
pushf
sar
push
mov
shrb
daa
lock
xorl
sub
mov
xor
imul
jp
call
inc
or
shll
adc
sbb
pushf
shl
jo
or
call
orl
xchg
dec
hlt
ja
add
imul
rolb
cmp
stos
loop
arpl
ds
push
dec
xlat
incl
and
adc
pop
stc
adc
je
dec
aam
dec
fnstcw
call
push
nop
jg
and
add
jno
ss
sub
mov
xadd
aad
test
cmp
sti
add
xchg
mov
adc
xchg
bound
lea
sarl
fnstenv
fldenv
fwait
leave
pop
pop
in
add
lods
and
or
in
mov
jmp
xchg
or
mov
stos
xlat
out
xchg
rclb
js
jnp
sbb
fiadds
inc
aad
jle
cmp
lret
shll
mov
mov
xchg
rorl
mov
ss
in
and
or
xor
lods
mov
test
push
fimull
pop
dec
shlb
pcmpeqd
shll
lcall
xchg
sub
adc
cmp
mov
jp
adc
fs
adc
xor
sub
mov
out
out
out
fldcw
adc
jns
std
cmp
ds
jb
aas
xor
xchg
add
inc
sbb
daa
cwtl
popa
or
jno
js
fnstenv
mov
out
mov
adc
leave
ljmp
xor
mov
ss
push
inc
jnp
fwait
sub
adc
lcall
insl
jp
js
psrlw
fisubl
mov
adc
jne
test
imul
jle
hlt
add
pop
adcl
sub
xorb
sbb
in
mov
dec
lds
cltd
jecxz
jle
mov
pop
sbb
mov
add
pop
cli
lods
push
sbb
mov
mov
dec
call
addr16
sahf
sbb
mov
mov
notl
subl
mov
ljmp
push
ds
in
fstpt
pop
adc
gs
mov
sarb
out
xchg
mov
xor
xor
je
shrl
sti
mov
pop
cmp
xor
fwait
or
test
add
gs
xchg
and
inc
dec
cs
cmc
clc
inc
mov
mov
fsubrs
pushf
cwtl
mov
or
lret
jno
fimull
pop
out
in
leave
fwait
push
sub
mov
cltd
xchg
jnp
int3
cmp
std
rorb
or
dec
inc
xchg
adc
push
mov
adc
repz
push
daa
push
arpl
mov
mov
jle
scas
mov
add
xor
inc
mov
xchg
add
jp
faddp
test
fucom
repz
fadds
in
cmc
pop
int3
pop
push
mov
outsb
cli
addr16
or
cli
fmuls
adc
mov
test
std
sub
or
xchg
jnp
add
repnz
mov
sub
gs
mov
sbb
pop
jmp
sahf
lret
add
loope
and
das
pop
jo
xor
and
pop
push
sub
push
daa
shlb
aas
add
mov
adc
cmp
test
pop
lret
adc
xlat
sub
sub
insb
subl
push
test
push
dec
adc
in
xchg
mov
pushf
adc
jne
inc
xlat
test
gs
into
hlt
push
aam
jbe
jg
adc
inc
lret
call
scas
sub
inc
movsb
addr16
push
andl
mov
pop
aaa
sbb
fs
kortestw
push
jnp
xor
arpl
pop
jmp
lock
or
movsb
add
add
adc
mov
mov
fmuls
cmp
fmuls
xor
xchg
ja
mov
rcrb
inc
fimull
sub
xchg
dec
movsl
outsb
jns
xlat
popf
adc
stc
push
and
inc
mov
out
cmc
dec
out
pop
es
mov
mov
push
lods
add
mov
mov
repz
cwtl
fwait
in
in
pushf
or
mov
jge
cltd
push
mov
cs
and
sbbb
push
dec
mov
mov
outsb
xchg
icebp
mov
js
shlb
jae
adc
arpl
push
xchg
mov
pop
in
xor
xchg
mov
xchg
movb
aad
sarb
arpl
dec
lea
jle
ljmp
repnz
jp
shll
cmp
push
push
add
mov
bound
cmpsb
pop
out
mov
xchg
popf
mov
out
adc
push
mov
in
adc
cmp
ss
clc
outsb
test
or
shrb
mov
in
push
mov
idiv
dec
test
sbb
mov
imul
insb
xchg
push
mov
push
push
sub
scas
call
xchg
paddusb
repnz
lret
in
leavew
pop
push
stos
stos
xor
pop
mov
es
xor
xchg
cmpsb
push
arpl
insl
call
pop
pop
jl
sti
call
sbb
push
pop
pushl
pop
pop
mov
mov
xchg
sti
xor
or
or
lods
rcr
iret
jb
mov
into
popfw
cmp
outsb
mov
jg
jne
jl
xchg
xchg
jle
mov
mov
iret
enter
cwtl
repz
ds
mov
pop
jge
jnp
mov
ret
xor
rcll
jae
test
or
push
je
xchg
lcall
call
cltd
dec
xor
mull
aam
mov
loopne
inc
mov
leave
sbb
aam
in
cmp
mov
jae
fidivs
push
push
cmc
pusha
push
or
dec
clc
xchg
pop
xor
push
mov
sahf
hlt
xchg
lahf
fcomps
adc
push
or
mov
mov
xchg
lods
xchg
sbb
js
inc
data16
xor
ljmp
out
sahf
push
stos
cli
test
dec
mov
jo
mov
and
inc
mov
loopne
adc
das
xchg
jns
dec
clc
cwtl
lds
outsl
movsb
outsl
xchg
outsb
fwait
jae
and
xchg
fstps
jl
bound
push
sub
sbb
test
jns
mov
pop
adc
mov
jns
imul
fwait
enter
lahf
out
loopne
pop
es
adc
adc
inc
mov
out
es
xchg
lret
imul
aas
and
in
fnsave
aad
xor
lret
xchg
add
dec
shl
cmp
push
pop
cmp
cmpsb
dec
adc
rdtsc
sub
mov
mov
xchg
jns
bound
xor
ds
xchg
rolb
sub
adc
mov
mov
lds
add
aad
pop
loope
lret
int
jns
mov
add
mov
pop
cs
iret
inc
dec
mov
adc
mov
in
sbbl
sbb
stos
jle
inc
sbb
add
fs
mov
loopne
mov
pop
add
cmc
jp
xor
lods
scas
dec
push
adc
test
xlat
and
in
mov
adc
imul
in
cmp
mov
xchg
aam
sbb
notl
push
pop
in
sbb
in
mov
repnz
and
and
incb
push
mov
je
mov
mov
mov
mov
in
test
aam
out
cs
pop
push
clc
xor
mov
add
jb
xchg
cli
pop
pop
push
int
push
jb
std
dec
mov
dec
lds
cmp
rcrl
cltd
das
pop
test
imul
pop
daa
les
lahf
adc
mov
fwait
inc
movb
adc
inc
mov
inc
xlat
pop
lds
xor
pop
stc
inc
sbb
add
sbb
sub
lahf
lret
fwait
add
xchg
fiaddl
leave
sahf
jae
xchg
loop
int
andb
push
add
push
je
ret
addr16
mov
pop
mov
adc
cmpsb
xorl
clc
insb
mov
push
dec
outsl
xor
dec
addr16
inc
int3
mov
jp
add
fdivrs
pop
dec
sbb
lock
outsb
push
icebp
sarl
xor
aas
push
jle
xchg
int
lock
fnsave
pop
adc
iret
or
xor
pop
imul
push
lahf
hlt
std
pop
add
push
loope
bound
fisubrs
cmp
lods
pop
xor
push
aaa
add
cmpsb
mov
sti
fisttps
add
out
flds
mov
stc
repz
nop
test
std
test
and
xor
movsl
jns
xor
sub
popf
jg
out
mov
fsubs
rol
pop
mov
out
push
jae
lock
mov
rcrl
push
loop
jbe
inc
jnp
popa
mov
leave
mov
adc
subb
dec
loope
push
jl
xchg
xor
or
xchg
in
cmp
add
imul
xchg
xchg
sbb
pop
push
xlat
call
cmpsb
mov
shrb
add
in
fsubrs
xchg
dec
sahf
sahf
mov
xor
arpl
arpl
inc
mov
call
push
cmp
loop
repz
test
xchg
push
es
xor
inc
xchg
arpl
insb
lea
inc
mov
mov
xor
iret
in
sub
sarl
cld
or
mov
xchg
dec
pop
xor
lret
mov
push
sub
jmp
push
sbb
cld
inc
cmpsl
lock
xchg
xchg
dec
nop
xorl
xor
aad
inc
pop
lea
incb
pop
inc
fs
inc
sub
mov
dec
mov
icebp
mov
pop
pop
inc
aaa
lods
pushf
aaa
std
pop
inc
fsubs
xchg
jbe
dec
je
les
push
ja
adc
out
xor
mov
ret
mov
mov
test
or
mov
adc
inc
mov
jp
fidivl
xchg
faddl
adcl
mov
jge
xchg
add
jg
test
mov
cmp
adc
cmp
cmp
lahf
jns
cmp
sar
pushf
out
fidivrs
test
decl
dec
addr16
in
jp
addr16
inc
aad
negl
add
int3
push
stc
repz
cli
daa
pop
cmp
mov
ror
pop
push
dec
mov
int
ret
lahf
je
daa
xchg
push
aad
inc
data16
daa
pushl
push
sbb
pop
and
push
je
push
or
push
les
insl
ret
jmp
xor
sti
arpl
dec
mov
insl
mov
adc
enter
sbb
cs
or
int3
mov
sub
lds
mov
inc
jns,pn
test
enter
fistl
hlt
jns
mov
push
pop
dec
ljmp
cli
aad
cmpsb
out
dec
mov
shll
rol
rorl
push
jo
xor
scas
clc
cld
rolb
mov
jmp
dec
sub
fildll
int3
call
sbb
clc
fisubl
nop
push
les
sbb
or
sub
xchg
lret
xchg
push
ficompl
aad
gs
leave
lcall
bnd
inc
adc
ja
and
adc
std
aaa
aas
lods
test
cmp
test
lcall
jecxz
dec
loop
mov
xchg
les
out
fbld
mov
xchg
and
lock
push
cs
sbb
pop
cmpsl
in
push
popf
lea
inc
cmpsb
rclb
aad
pop
fwait
sahf
fwait
cmp
or
bound
cmp
aam
aad
mov
cwtl
lds
and
sarb
iret
jae
push
sub
daa
shl
or
enter
lcall
fcmovb
ret
ffreep
imul
xchg
lds
add
int3
xchg
mov
cmpl
mov
dec
jae
sti
cmp
mov
inc
pop
scas
sub
nop
cs
inc
pop
ds
push
into
fildll
sub
out
sub
pusha
addl
orl
daa
insl
fadds
push
xchg
sahf
sbb
xor
std
outsb
rorl
inc
sub
divl
adc
movb
hlt
add
and
jp
scas
sahf
loop
sub
mov
test
fisttpll
movsl
mov
sub
jae
daa
add
pop
jbe
pusha
mov
inc
movsb
in
and
stos
inc
repz
add
movsl
cmp
sbb
repz
mov
dec
xchg
jecxz
jle
ds
and
rclb
imul
xchg
and
lock
imul
loop
add
dec
xor
jg
popa
push
jmp
aam
into
add
xchg
imul
add
or
lahf
arpl
pop
insb
leave
test
lret
sbb
cli
sbb
cltd
popf
gs
fstl
mov
imul
add
dec
sbbb
sbb
fbstp
lahf
mov
mov
ljmp
stos
xchg
aad
icebp
sahf
mov
les
aam
je
int
fsubs
jbe
push
push
push
mov
cmp
cld
and
inc
daa
addr16
int3
mov
leave
sahf
xor
push
inc
les
jl
in
add
mov
jbe
jo
adcl
jns
pop
cld
sub
pop
decb
rolb
xlat
shlb
and
inc
pop
in
xchg
lds
addr16
mov
movsb
add
pusha
push
cmp
inc
repz
das
or
adc
jne
xor
sub
push
pop
pop
fisubl
mov
dec
sub
fdivrl
adc
cli
cmp
frstor
test
cmp
sbbl
imul
mov
test
sbb
or
mov
or
or
and
mov
fisttpll
mov
mov
orb
fadds
std
jbe
xchg
lds
popa
xchg
sbb
cmpsl
add
jo
xchg
movsb
icebp
lea
sbb
mov
dec
or
push
pop
cmp
rcl
or
inc
xorb
ds
pop
test
xor
shlb
dec
adcl
adc
lahf
rorl
clc
pusha
aaa
mov
fistpl
inc
xchg
mov
mov
adc
addr16
pop
cmpsb
push
imul
push
xor
popa
gs
sub
aad
xor
sub
push
jle
mov
mov
dec
fcomip
sbb
mov
notb
loope
rclb
pop
dec
push
adc
xor
std
cmp
jb
in
inc
sbb
shrl
pop
adc
xchg
test
test
sti
stos
in
insl
mov
push
dec
sbb
in
nop
mov
jg
dec
iret
cmp
mov
mov
inc
mov
mov
mov
add
jmp
xchg
jge
add
cmpsb
mov
loope
or
push
cltd
fwait
inc
dec
mov
mov
cmpsb
test
xor
stc
cmp
cmp
clc
out
test
movsb
mov
fwait
jle
into
addl
cmp
cmp
push
mov
sti
outsl
mov
push
fs
fs
sbb
and
sbbl
movsb
daa
insb
jb
lea
or
jg
xor
xor
and
sub
xchg
push
xor
xor
mov
std
in
mov
int
cmp
gs
cmc
outsl
test
mov
push
outsb
outsl
sbb
cmp
mov
out
xchg
add
lcall
outsb
mov
imul
pushf
aaa
sbb
fs
movsb
xor
mov
jl
sub
not
pusha
mov
sub
shrl
cmpsl
add
mov
xchg
cmp
xor
sub
andb
stos
sub
popf
pop
xchg
mov
je
mov
cmpsl
adc
movsl
xor
aam
jle
jne
xchg
or
jbe
sbb
out
insl
xchg
or
movsb
arpl
cmp
cmpl
scas
xor
ja
add
test
and
lret
fisttpll
xchg
mov
cmpl
pop
push
or
dec
mov
notl
enter
jmp
mov
roll
mov
lea
inc
jo
jns
cmp
data16
out
mov
cmc
xchg
imul
and
jbe
insb
and
inc
in
mov
push
ds
int
mov
stos
adc
sbb
push
stos
pop
dec
addb
jns
lods
adc
je
mov
mov
or
sub
cmpsl
xchg
or
lret
mov
imul
mov
push
psubusb
test
stos
add
aad
jmp
shlb
push
ror
fs
in
xchg
filds
lock
add
int3
sar
inc
or
pop
cmpsl
pop
data16
pop
out
xchg
xlat
xchg
inc
andl
mov
jns
xor
sub
incl
dec
aaa
or
fsubl
add
jmp
cld
daa
cmp
add
push
xchg
add
mov
cmp
adc
dec
lods
scas
das
loopne
sbb
push
ret
in
cmp
hlt
stc
mov
pop
lret
int
mov
pop
mov
dec
out
and
imul
inc
jecxz
nop
outsl
sub
hlt
mov
cmpsl
imul
mov
mov
addr16
jnp
fld
xchg
pop
ret
lods
mov
push
sub
or
or
mov
sbb
xor
cmpsb
lods
xchg
ja
xchg
int3
inc
call
mov
inc
mov
lret
jecxz
inc
cmp
bound
negl
shl
not
js
pop
movsb
mov
push
inc
xchg
std
lds
ja
add
jae
lahf
push
clc
jge
ljmp
dec
adc
adc
ja
sub
lea
shrb
xor
adc
inc
mov
scas
imul
mov
pop
repnz
enter
xor
xchg
clc
notb
sub
and
cmp
adc
into
sbb
cmpsb
test
andb
xchg
and
ja
subl
hlt
iret
mov
push
jmp
jg
pop
mov
or
aam
and
xlat
lods
jl
sub
cltd
mov
out
out
or
dec
or
push
jae
jnp
pop
les
jnp
jg
aad
out
push
in
test
xor
dec
fidivrs
jmp
sbb
mov
cmpsb
cmp
pop
pop
inc
dec
mov
out
jo
jp
jp
pop
and
je
push
or
hlt
push
test
ret
lods
leave
xor
pop
dec
sbb
jns
mov
sbb
insb
into
in
xlat
out
mov
cmpsb
call
outsl
xchg
and
jbe
mov
mov
jne
dec
jmp
jae
mov
imulb
cmp
iret
push
add
stos
push
out
adc
outsw
fwait
mov
insl
and
push
addr16
lahf
mov
add
pop
mov
out
cltd
icebp
dec
inc
adc
adc
pop
aad
push
mov
notl
mov
jmp
lret
mov
jno
push
add
dec
pop
mov
mov
or
jp
icebp
icebp
inc
out
test
pop
out
cmp
aas
cli
pop
or
enter
insb
into
dec
mov
jge
push
mov
xchg
in
scas
inc
pushf
scas
sbb
push
add
xchg
push
lret
insb
call
cltd
inc
push
mov
test
call
fdivrs
int
inc
mov
rcrb
xchg
cltd
lock
add
cli
mov
mov
repnz
jl
mov
iret
dec
adc
lock
cmp
mov
pop
push
mov
jnp
fsubrs
repz
mov
daa
mov
loopne
or
dec
sbb
pop
or
mov
pop
and
adc
stos
sub
push
dec
incl
addl
cmp
lods
mov
pusha
xchg
popa
outsb
sub
jg
inc
fisubrs
ficompl
mov
andb
lods
mov
pop
hlt
or
in
push
ret
push
ja
shll
addr16
adc
jge
mov
aad
sbb
lds
aas
jnp
push
dec
icebp
xchg
mov
adc
mov
stos
sarb
dec
cmp
fsubs
js
pop
daa
cmp
fildl
data16
and
adc
and
and
dec
inc
mov
pop
and
inc
adc
dec
xchg
and
sbb
inc
hlt
mov
icebp
imul
mov
scas
sbb
mov
ret
and
dec
add
rclb
lret
and
mov
mov
daa
mov
mov
popf
test
into
fxch
lock
or
imul
adc
cmp
adc
add
xor
jle
jbe
xchg
jno
dec
xor
andb
inc
lret
mov
loop
gs
push
or
cli
xor
pop
lds
sbb
add
popf
nop
mov
push
push
stos
xchg
dec
adc
stc
jmp
sbb
jge
in
jb
nop
test
lods
roll
addr16
fchs
cmpb
ret
jne
div
lahf
mov
mov
aad
arpl
aad
lret
xlat
pop
push
mov
or
and
and
push
imul
lcall
lret
clc
and
add
stc
jo
pop
add
mov
cmp
cmp
scas
dec
xchg
jmp
adc
xchg
into
in
jbe
xchg
pusha
or
xchg
lods
mov
xchg
fiaddl
je
inc
cmpsb
arpl
mov
adc
xlat
pop
gs
scas
bound
push
sahf
jno
pop
or
inc
or
call
jne
cld
dec
or
inc
mov
inc
pop
push
cmc
pop
outsl
rolb
or
sti
es
idivb
mov
or
xchg
ja
inc
pop
data16
mov
rorl
lcall
and
xor
sub
in
mov
xor
out
mov
jge
sti
dec
lcall
popa
xchg
or
cwtl
jno
sti
xchg
imul
push
aad
sub
pop
fsubrp
insl
dec
test
je
cltd
dec
fwait
push
jb
sbb
jae
dec
xor
push
dec
push
hlt
cmp
mov
and
iret
repnz
cmp
insl
push
lock
lcall
sbb
test
lock
sbb
fistpll
clc
dec
jae
xchg
sahf
fcoms
mov
clc
lods
cmpsl
jecxz
lcall
int
push
adc
ds
icebp
orb
adc
jno
imul
push
mov
pop
xchg
sbb
adc
test
xchg
mov
dec
add
xchg
jnp
and
insl
icebp
shrl
mov
add
xor
add
sbb
in
mov
out
jb
mov
adc
fwait
aad
jne
jb
sbb
jno
sub
loop
cmp
cmp
out
dec
movsl
out
das
sbb
sbb
sub
hlt
lods
ja
cs
mov
inc
mov
pop
in
or
cmp
sbb
xchg
pop
ds
adcb
mov
mov
sbb
and
cltd
cmp
pop
cmpsl
adc
cltd
cmpsb
sahf
fldcw
sub
hlt
loop
inc
sbb
mov
cmp
insl
fsubl
pop
ror
pop
cmp
cmpl
xchg
test
xor
adc
mov
mov
in
sbb
repnz
sbb
add
mov
test
mulb
popa
clc
mov
and
adc
jno
sub
mov
das
jno
jnp
rcrl
jp
out
xor
jns
fbld
pop
sbb
dec
push
jb
je
mov
dec
dec
or
and
dec
mov
inc
jb
test
fiadds
mov
sahf
xchg
aad
xor
sbb
jg
sub
xor
mov
xchg
cmpsl
nop
pop
inc
push
or
fdivs
push
sub
mov
shl
add
shlb
dec
pop
in
or
test
jge
push
jae
fwait
mov
pop
adc
ja
leave
push
call
and
jl
arpl
daa
aaa
cld
jns
jmp
pop
ret
xchg
xor
sub
and
pop
pop
push
cmp
movsl
sbb
inc
xlat
icebp
aas
mov
cmpsl
or
cmp
jge
and
pop
cli
fmulp
add
repnz
fdivrp
mov
insb
aam
cmp
ds
xor
push
ljmp
jmp
and
stos
push
add
movups
mov
xchg
mov
push
sbb
pop
add
mov
fwait
jp
push
mov
pop
adc
xor
xchg
outsb
or
lcall
xor
in
mov
adc
mov
cs
add
jmp
sub
lcall
mov
jl
mov
xor
sbb
aaa
pop
andl
gs
mov
sub
mul
out
adc
ds
cli
imul
popf
mov
dec
js
xchg
lods
or
sahf
sti
push
lcall
es
sbb
pop
jge
mov
jl
in
inc
repz
cmpl
dec
push
add
icebp
add
lods
push
sub
in
test
lock
lods
mov
dec
push
rcll
and
sub
jle
stc
lcall
mov
test
notl
shrb
xor
dec
cmc
insl
xor
xchg
lahf
pop
fwait
mov
movsb
push
adcb
mov
int3
cmp
mov
shl
push
lods
jns
push
sbb
mov
stos
xchg
rorl
xor
popa
and
stc
insl
cwtl
push
imul
mov
outsb
addr16
stos
stos
sti
cmpsl
fsubrl
test
mov
sahf
sbb
mov
aas
sub
or
mov
sbb
movsl
sub
dec
jbe
fldt
pop
xchg
xchg
sti
xchg
ret
mov
out
fildl
test
mov
cmp
dec
mov
test
jge
push
push
sbb
int
ljmp
iret
inc
dec
fnstcw
adc
and
push
xchg
subb
scas
adc
dec
cmp
out
int
lea
cmp
or
push
subl
sbb
cmp
xlat
roll
jl
jns
sti
mov
stc
out
sbb
pop
sub
mov
and
dec
jmp
jmp
push
sub
cmp
nop
arpl
nop
xchg
push
and
out
inc
xchg
loop
ljmp
xchg
into
add
scas
push
xchg
lret
inc
fs
cmpsl
adc
out
outsl
inc
add
mov
cmp
and
outsl
or
scas
test
bound
sub
aaa
outsl
cmpsl
ljmp
jle
enter
adc
sbb
add
lret
sub
dec
in
inc
idivb
bound
icebp
sbb
lret
int3
dec
and
cmp
scas
mov
into
xor
lahf
call
icebp
pop
in
int3
mov
mov
xor
dec
jmp
pop
das
push
mov
test
mov
sub
je
mulb
pop
jae
pop
icebp
mov
push
inc
xor
fs
xor
iret
dec
mov
cmp
mov
cwtl
mov
pop
push
inc
lods
out
bound
adc
sub
into
into
push
mov
xor
push
or
cwtl
or
or
ret
cmpsb
or
sub
iret
push
jbe
cmp
data16
ja
sub
cmp
es
mov
inc
ret
subl
shl
mov
arpl
out
shr
mov
mov
xchg
lcall
orb
scas
loope
ljmp
cli
test
and
in
xchg
and
mov
leave
xlat
jbe
push
fstpl
cmp
and
int3
xchg
jne,pn
cltd
jg
pop
aam
das
xor
jmp
test
adc
mov
mov
fbld
lods
imul
or
jecxz
jmp
fdivrs
orb
xor
fincstp
push
inc
inc
pusha
aad
arpl
call
pop
icebp
ss
sarb
dec
inc
jp
sti
mov
cmpsb
imulb
add
xchg
or
mov
pop
inc
adc
jne
frstor
pop
xlat
sub
mov
inc
xchg
lret
pop
loope
mov
xor
fisttpl
and
je
shll
push
add
sbb
mov
push
and
sub
rcll
cmp
xor
stos
inc
data16
hlt
mov
test
dec
sbb
inc
loopne
repz
mov
mov
mov
and
jl
mov
mov
daa
sbb
adc
rolb
aad
jbe
push
imulb
jb
bound
cmpsb
dec
bound
xor
pop
mov
sbb
dec
xor
inc
sub
fistpl
and
pop
jmp
inc
mov
mov
jo
push
sbb
das
jae
mov
mov
mov
cmpsb
mov
jb
in
popf
adc
movsl
mov
inc
test
std
adc
stos
push
cli
xchg
mov
call
or
inc
jb
add
jle
xchg
sub
xchg
andb
mov
cmp
int3
faddp
lods
imul
mov
cmpsl
jns
cli
lods
jecxz
dec
jecxz
jo
popf
scas
iret
pop
mov
or
adc
flds
dec
lods
push
jnp
icebp
xor
lret
pop
cli
dec
dec
push
cmp
cli
cmp
test
add
cmp
shrb
inc
mov
sub
stc
sarb
jo
mov
or
addr16
mov
mov
insb
iret
mov
addr16
jmp
xor
stos
fdiv
int3
outsl
add
dec
stos
push
cltd
pop
pop
inc
lods
xor
outsl
js
sbb
addl
inc
sti
in
iret
fstl
inc
and
enter
push
cmp
addr16
xchg
push
push
or
cmp
cltd
in
mov
push
and
popf
adc
lret
xchg
mov
hlt
mov
push
mov
pop
add
out
push
sub
push
xchg
cld
sbb
rcr
sbbl
aad
dec
sbb
mov
out
cmp
adc
out
js
inc
fs
push
xchg
stc
mov
jo
icebp
jl
and
push
das
scas
mov
js
or
mov
call
xchg
dec
repnz
data16
sub
push
into
pusha
jge
sbb
push
daa
rolb
dec
push
push
sbb
mov
imul
push
inc
mov
or
push
xchg
ds
push
lahf
test
mov
jns
mov
ljmp
push
scas
xor
jmp
aam
jbe
daa
cmp
or
clc
stc
mov
xchg
adc
mov
fildll
leave
dec
xor
sbbl
mov
mov
cli
jns
push
addl
push
in
leave
add
cltd
lret
mov
lret
xor
add
and
loop
cmpsl
test
adc
jmp
lret
pop
ljmp
jmp
out
and
fucomp
nop
insl
jns
jns
cld
mov
cmpsl
gs
adc
inc
loopne
lret
dec
in
or
cwtl
and
fs
inc
jb
jp
insl
cmpsb
popa
adc
pop
mov
orb
mov
hlt
mov
lret
aaa
icebp
pop
jns
sarl
mov
fcos
cmc
xchg
inc
xchg
nop
jno
aas
mov
jae
repnz
push
xchg
inc
sbb
add
movl
popf
lods
push
fbstp
mov
mov
mov
repnz
fisubl
xchg
divb
jns
out
jnp
addb
jne
popa
dec
cltd
mov
jle
push
jp
pop
insb
das
movsb
pop
mov
lret
repz
imulb
loop
fdivrl
xchg
xor
insl
dec
mov
xchg
in
lds
aad
jecxz
sarb
js
mov
stos
jmp
xchg
mov
xor
mov
imul
shrb
imul
xchg
jg
pop
aam
mov
insb
dec
jns
andb
xor
inc
xor
adc
stc
arpl
repz
outsl
and
mov
inc
mov
ljmp
cld
cmp
out
mov
sbb
pusha
int
mov
sbb
out
mov
push
push
in
frstor
clc
sarb
lea
dec
sbb
std
test
xor
pop
ds
jmp
fwait
mov
mov
fisttpll
and
jge
push
dec
cmp
xchg
icebp
ja
jns
cmp
pop
lea
in
arpl
adc
inc
lods
and
and
mov
xorb
into
je
dec
stos
jg
lock
scas
inc
dec
cli
cmp
cwtl
lcall
aaa
andl
pminsw
jae
xchg
ret
add
jmpw
fistpll
sub
sub
jl
scas
inc
cwtl
jecxz
xchg
gs
xor
dec
imul
sahf
pop
imul
mov
jns
mov
test
jmp
movsb
push
or
cmp
sub
movsl
bound
fs
cmpsl
xor
cmpsl
push
or
push
cmp
dec
js
insb
xchg
call
mov
jno
outsb
out
shrb
in
dec
cmp
test
mov
cmp
out
mov
aad
push
int3
or
repnz
or
scas
dec
jbe
loope
test
jl
mov
sub
sub
out
add
lahf
test
movsb
xor
das
inc
ja
lods
aas
out
stos
jecxz
sbbl
mov
xor
sbb
jae
jmp
ret
lock
sub
clc
inc
lock
ret
mov
xor
xor
andb
cmp
ret
mov
sbb
mov
push
push
adc
enter
lret
lock
sbb
jns
xor
call
mov
or
and
xchg
mov
movsb
ret
arpl
int3
ja
pop
push
xchg
sbb
inc
adcb
mov
push
incb
iret
test
sub
dec
and
mov
mov
cmpsl
jns
mov
xor
movsb
out
inc
push
pop
mov
pushf
mov
jae
or
lds
arpl
jbe
mov
rol
clc
lahf
cltd
int
dec
inc
ja
lock
out
and
fwait
rclb
imul
sub
out
add
mov
mov
push
mov
cli
mov
sbb
lods
cli
mov
aas
popf
jnp
in
add
lods
into
in
push
inc
scas
addr16
ret
data16
cwtl
jp
jne
frstor
mov
cli
rol
add
les
lret
dec
leave
xor
push
jne
lods
mov
mov
testl
in
xchg
mov
xor
ljmp
mov
insl
fists
fisttpl
dec
push
mov
call
pop
xor
movsb
jl
shr
ljmp
aaa
and
mov
push
icebp
ljmp
cmp
dec
out
std
dec
mov
stc
pop
out
or
roll
mov
sub
nop
sub
xchg
cmpsl
shrb
adc
cmpl
cwtl
mov
pop
scas
frstor
mov
jnp
mov
das
mov
dec
repz
inc
jo
cmp
push
inc
cmc
loope
stos
sarb
adc
xchg
mov
fadd
sub
push
adc
ret
and
subb
mov
fadd
rcl
push
leave
push
lret
in
imul
inc
ret
mov
push
or
out
scas
movsl
inc
jno
xor
xor
pop
dec
incb
jo
inc
popf
cmpsb
lret
xor
sub
mov
jge
jge
xchg
xor
nop
dec
jge,pn
mov
mov
pop
sti
mov
cltd
mov
aaa
xchg
rcrl
nop
xchg
jl
aas
out
aaa
inc
sub
testl
jo
pusha
pop
pop
hlt
sub
jg
xchg
imul
jp
xor
movsl
and
fwait
sarb
jle
push
jno
stos
mov
ja
int
jg
xchg
decl
lods
inc
lock
icebp
pop
inc
or
sbb
mov
and
and
cli
jl
scas
inc
scas
xchg
jmp
jbe
das
jne
lods
repz
or
icebp
outsb
xor
xchg
insb
mov
lds
sahf
enter
push
and
sub
xchg
cld
xchg
and
rol
mov
jnp
dec
and
or
mov
jne
insl
jb
js
adc
fwait
daa
mov
inc
pop
jbe
pop
jecxz
stos
or
jg
int
lea
cmp
arpl
adc
inc
mov
xchg
cwtl
jge
add
adc
test
jg
mov
es
cld
cli
mov
mov
sti
cmp
dec
fdivs
daa
inc
in
lret
add
sub
xchg
adc
fucomip
loopne
adc
insl
cmp
xchg
imul
add
ds
outsl
or
xchg
jo
pusha
xor
imul
push
xchg
mov
dec
call
out
mov
cltd
aas
movsl
inc
jp
lret
cmp
ja
dec
jmp
das
jbe
xor
inc
cmp
leave
mov
fs
xchg
jle
or
adc
jne
push
xchg
inc
dec
addr16
dec
loopne
cmp
daa
mov
jle
notl
sti
out
sarl
mov
adc
sbb
inc
mov
ja
pop
pop
jmp
jno
orb
jg
push
scas
or
push
shll
dec
xchg
negl
sbb
js
les
xorl
mov
lret
popa
sbb
subl
and
push
lock
jle
jnp
lcall
sbb
pop
lods
imul
scas
rcrl
out
pop
push
loopne
fdivrp
es
lahf
sub
xor
pop
outsl
mov
jp
pop
insb
and
add
ret
add
cld
rorl
mov
dec
sub
dec
mov
push
mov
sub
sbb
jg
divb
inc
inc
inc
fs
push
inc
mov
inc
out
lods
rcl
repnz
inc
sbb
jno
sub
dec
sbb
lcall
jge
push
leave
sbb
cs
ret
js
fcomps
jmp
test
or
insb
or
xor
sub
repz
out
or
xchg
dec
push
pushf
xor
jg
adc
or
loopne
repz
in
jns
aad
pop
sub
xchg
pop
lahf
nop
aaa
or
stos
mov
loope
test
sub
movsb
imul
lea
sub
sti
and
aam
stc
cmpb
sahf
icebp
lret
pop
xor
js
loop
repnz
es
cmp
rolb
je
sarb
movsb
or
in
lock
or
addl
popa
arpl
hlt
dec
inc
repnz
negl
mov
mov
sbb
mov
cli
adc
or
adc
repnz
lods
inc
push
mov
gs
add
test
rcll
pop
js
cmpsl
cld
mov
dec
sub
sbb
or
pop
mov
lods
pusha
std
push
mov
pop
fwait
dec
mov
lret
mov
arpl
sub
sti
xor
movsl
mov
push
gs
movsb
push
and
add
subl
pushf
mov
push
jp
outsl
lcall
inc
sub
in
fs
xchg
jge
icebp
es
or
sti
fsubs
ficompl
inc
lds
xchg
jbe
xor
lods
pop
sbb
test
cld
aam
sub
sbb
fld
cltd
pop
ret
or
in
mov
jne
stos
movsb
push
sbb
shlb
shrb
pop
adc
nop
mov
dec
xchg
mov
and
sub
cmp
dec
into
sarl
aam
dec
cmp
sub
and
pop
mov
jmp
jo
xchg
jo
xor
jns
adc
push
js
xchg
inc
inc
sahf
jbe
lods
push
lock
cld
scas
push
xor
dec
jecxz
aas
or
ror
movsl
nop
push
insb
adc
or
icebp
push
out
mov
js
sbb
add
inc
sbb
adc
mov
xor
or
push
jae
fisubrl
stos
pushf
lods
pop
dec
adc
dec
sub
dec
or
mov
test
xchg
pop
les
or
xor
sbb
mov
xor
jp
inc
jns
out
lds
inc
stc
push
std
test
int
outsl
test
fdivs
loop
jae
and
or
clc
in
lahf
icebp
into
or
inc
dec
or
dec
mov
addr16
fwait
dec
push
insb
psubsw
xor
test
iret
out
in
data16
or
pop
jne
sbb
cmp
dec
cmp
xchg
push
push
std
adc
pop
test
movl
je
mov
aam
ret
nop
sub
mov
jg
and
rclb
cmp
jno,pt
mov
aam
std
mov
push
sarb
push
push
and
stos
mov
je
hlt
js
rorb
insb
movsl
enter
out
inc
mov
jp
mov
fistl
out
jbe
or
xchg
out
mov
mov
lcall
rol
in
push
cld
push
aaa
inc
push
xor
mov
rorl
addr16
lock
add
cmp
hlt
or
mov
outsb
mov
dec
pusha
cmp
and
cld
cmp
cmp
and
mov
enter
mov
imul
sbb
imull
addr16
jg
inc
xchg
sub
mov
ljmp
jge
js
sub
add
xor
and
cli
daa
add
in
fwait
sub
sbb
cmp
cmp
cld
dec
xchg
cli
sub
rorb
cmc
jnp
es
add
cld
dec
sbb
adc
mov
jae
ds
inc
fcom
adc
sub
or
jle
filds
in
aas
je
sbb
jnp
xchg
jle
sub
aad
sub
pop
rcll
fmul
xor
ret
mov
inc
loope
mov
leave
dec
inc
cmpsb
dec
pop
sbb
sbb
cmpsb
sbb
push
pop
popa
push
insb
stos
pop
inc
mul
pop
push
icebp
aas
mov
inc
mov
dec
iret
outsl
cmp
scas
pop
mov
mov
lods
ss
shll
push
sub
fldl
or
loope
in
repz
jo
jbe
popa
xchg
dec
outsb
jmp
mov
sbb
mov
fcmovb
push
xchg
inc
arpl
punpckhdq
addr16
push
inc
add
inc
dec
js
pop
mov
and
sub
addb
add
fnstsw
mov
jb
push
sti
or
ja
sahf
ljmp
inc
mov
aam
lds
aad
mov
sub
js
data16
sub
repnz
out
nop
sahf
jne
mov
sti
imul
ret
jo
in
test
sbb
pop
sbbb
push
data16
inc
cwtl
dec
xchg
repz
inc
or
mov
and
andl
pusha
decl
js
cmp
mov
leave
jno
cmpsb
adc
mov
adc
jl
aas
pop
lret
lods
sbb
cmpsl
movsb
or
mov
repnz
mov
sbb
notb
inc
leave
and
outsl
sbb
stos
and
mov
sub
adc
int3
sub
cmp
js
sub
jmp
and
fwait
or
add
mov
jnp
or
roll
and
std
dec
mov
cwtl
rol
jl
pop
mov
stos
movsb
xchg
mov
sarl
pop
cmp
and
adc
daa
xchg
mov
int
add
sub
pusha
xchg
sub
bound
loop
jno
ss
mov
jle
jb
shll
mov
dec
mov
inc
mov
and
repnz
and
in
push
mov
mov
int
adc
enter
icebp
push
mov
xchg
das
or
xchg
out
push
cmpb
mov
pop
sbb
ja
in
adc
mov
dec
ror
bound
xchg
lock
bound
mov
dec
add
negl
xor
pop
shlb
mov
or
jbe
mov
sbb
add
test
into
xor
xor
pop
and
daa
enter
aas
jae
pop
call
mov
push
mov
jae
cmp
addr16
bound
add
daa
rcll
repz
ss
leave
outsl
dec
pop
xor
adc
mov
gs
rclb
xchg
mov
imul
add
int3
or
cli
lock
inc
fidivrs
lret
shrl
movsl
jp
xchg
daa
mov
xchg
aas
push
shl
jge
cwtl
sub
cltd
lret
inc
mov
rcrb
ret
and
adc
push
inc
sub
jmp
cmc
insl
xor
cmp
push
pop
mov
and
push
mov
es
movb
push
sbb
jmp
or
sbb
cld
ffree
cltd
clc
scas
insb
inc
lock
cmp
fsubs
pop
enter
iret
xor
cmc
popa
stc
or
aaa
cmp
cmp
inc
test
push
rcr
mov
mov
xor
shr
dec
mov
sbb
xchg
bound
das
push
jge
xchg
push
in
dec
loope
daa
cmp
xor
and
lcall
mov
std
push
out
xchg
mov
dec
cmp
scas
adc
stc
cmpsl
daa
mov
test
and
cmp
rol
cwtl
adc
lods
shl
testb
mov
neg
es
dec
and
dec
jbe
jo
sub
mov
add
ret
testb
aad
in
push
cwtl
dec
dec
scas
pop
dec
in
in
mov
mov
mov
ficomps
jne
cmp
movl
sahf
mov
mov
lahf
dec
int
push
sub
into
sub
mov
gs
stc
fildl
lods
push
cmp
in
jp
sar
aas
add
out
pushl
mov
xchg
adc
jnp
jbe
cmp
add
sahf
cld
inc
stos
cli
jae
cmpsl
sub
add
sahf
shlb
das
dec
in
fldenv
add
jle
mov
sub
roll
lods
scas
mov
in
sub
dec
pop
sbb
xchg
mov
pop
jno
jmp
dec
js
cmp
insl
aam
addr16
jle
inc
out
dec
test
push
push
das
or
lret
jo
lea
jp
dec
lahf
dec
lea
test
mov
xchg
je
cmpsl
cmp
lret
add
dec
dec
gs
pop
fdivs
in
jl
or
cs
aas
sub
add
sbb
mov
xor
cmpsb
jmp
push
xchg
out
cmc
push
daa
mov
jp
lods
in
add
stos
jne
negl
mov
dec
mov
cmp
lock
pop
out
push
inc
mov
add
xchg
jnp
xlat
pop
lcall
sarl
adc
xor
push
sbbl
fnstcw
pop
or
add
pop
repz
mov
stos
icebp
xchg
pop
xchg
fmul
test
mov
cltd
les
jg
in
xchg
lcall
sarl
jmp
inc
cmp
out
adc
orl
clc
loopne
test
dec
hlt
add
roll
outsl
mov
ja
add
gs
icebp
xchg
subb
out
add
or
mov
shlb
xor
or
jp
bound
cmp
xchg
stos
push
adc
inc
rolb
adc
jge
sbb
repz
inc
sbb
mov
test
xchg
lds
hlt
mov
and
rorl
test
or
xchg
push
out
pop
repz
push
jae
test
jb
es
call
js
push
in
in
loop
adc
adc
stos
roll
jmp
clc
adcb
js
in
jns
push
jg
adc
push
push
cmp
shrb
or
pop
pop
lods
mov
shll
xchg
movsl
sti
adc
fwait
ja
jb
push
jmp
sarl
cs
fsubrs
je
add
rorl
sub
xchg
fistps
int
shrb
sbb
pop
fiaddl
dec
sbbb
cmpsl
aam
pop
lahf
std
push
add
add
dec
ja
jge
push
push
bound
addr16
inc
scas
addb
push
push
data16
outsl
js
pop
push
ret
or
gs
sbb
shll
xchg
cmp
mov
jp
mov
dec
shl
inc
adc
lret
sbb
pop
inc
xchg
pop
movsb
addr16
testb
push
stos
mov
push
lds
mov
outsl
adc
dec
mov
je
jne
and
or
mov
or
jae
pop
cmc
popa
sahf
pop
nop
xor
aad
sub
jecxz
mov
sub
pop
stos
mov
lods
movsl
notb
jmp
jmp
sbb
dec
add
or
nop
pop
sub
sti
push
aam
push
pop
dec
sub
mov
fildl
push
mov
test
add
jnp
sub
xchg
sub
out
out
dec
add
pop
aam
mov
sub
push
pop
outsl
inc
add
mov
mov
mov
test
mov
lds
mov
sbb
mov
lahf
jmp
imul
push
leave
sbb
add
loopne
loop
fsubrl
popa
and
pop
mov
ja
cmpsb
cmp
xchg
xchg
repz
mov
pop
ficompl
add
cmpsb
pop
mov
push
push
out
push
mov
cmp
add
enter
mov
pop
push
xlat
add
adc
xchg
filds
ret
inc
dec
sahf
inc
lods
nop
pop
stos
or
ret
mov
xor
fidivrs
sahf
sub
dec
imul
testb
cmpsl
insb
add
rolb
cltd
mov
dec
push
icebp
mov
xor
lds
mov
loop
push
xchg
mov
ljmp
into
inc
xorb
pushf
das
das
insl
cmp
ror
jge
mov
ds
jecxz
dec
pop
add
xchg
mull
js
scas
inc
pop
loop
dec
bound
test
push
xchg
movl
aaa
clc
out
je
vmwrite
push
es
xchg
adc
icebp
lahf
ds
jecxz
jle
cltd
or
iret
les
pop
insl
mov
sub
push
ss
out
jb
jp
push
jae
loop
xor
lret
ja
gs
leave
xor
cli
addr16
pop
rcl
xchg
push
pop
push
lcall
inc
dec
aas
xchg
aam
nop
pop
jg
mov
out
mov
aam
in
mov
mov
aad
or
inc
mov
call
push
mov
inc
jmp
or
dec
fistpl
cmpsl
mov
dec
xchg
add
or
sub
inc
out
lret
repnz
cmp
sbbl
jmp
mov
insl
insb
adc
in
mov
fcmovnb
mov
jmp
ret
pop
cwtl
add
pop
pop
bound
adc
ljmp
pop
mov
push
add
sbbb
push
clc
pushf
jmp
out
in
xchg
adc
gs
divb
scas
or
mov
add
adcl
fildl
test
lret
push
or
sar
inc
push
sar
xor
popa
jae
xchg
in
xor
ja
fstl
jno
cmp
inc
pop
dec
sbb
in
push
sahf
into
inc
movsb
jb
lret
cli
insb
sub
or
dec
leave
es
in
mov
xor
push
sbb
pop
sbb
aas
xchg
push
or
out
jno
stc
sahf
xchg
push
in
sbb
jnp
aam
mov
add
in
lahf
inc
js
sbb
out
push
hlt
mov
and
xchg
xchg
call
test
fistl
fisubl
or
out
ret
inc
call
jo
pop
inc
out
ss
inc
push
repz
mov
mov
lods
sub
lret
negl
sub
xor
lcall
ror
adc
and
inc
leave
sbbl
aaa
into
test
xchg
and
gs
adc
gs
fiadds
out
or
sarl
inc
clc
and
jo
pop
add
fnsave
repnz
ds
jmp
xor
adc
mov
xchg
cmp
sahf
inc
sti
pop
lret
jb
or
push
into
cmpsl
sub
pop
jmp
sahf
repz
dec
out
movsb
push
shlb
mov
jg
push
push
inc
stos
jg
test
hlt
or
hlt
popa
frndint
pop
push
cmp
iret
mov
or
lcall
ljmp
jmp
ret
out
ljmp
out
leave
sub
inc
adc
scas
ss
fsubrs
leave
push
setg
in
addr16
jg
insl
xor
cld
adc
gs
aas
loopne
mov
fcoms
push
xchg
and
ret
mov
outsb
hlt
pop
mov
insb
or
loopne
cmpsb
push
loope
shlb
mov
fld
stos
sbb
arpl
inc
inc
push
nop
jge
imul
scas
mov
adc
cmp
out
dec
sahf
xchg
dec
add
cltd
das
pop
cmpsl
mov
pushf
pop
push
inc
jns
inc
jecxz
pop
lret
clc
aam
fwait
or
dec
popf
mov
pop
inc
iret
push
dec
xor
test
pop
jg
add
rol
dec
cmp
testb
add
cmp
cmp
xor
sahf
loope
mov
dec
sub
pop
ret
aad
push
push
enter
push
cmp
sub
std
inc
add
inc
cmpsb
lods
or
xchg
mov
push
mov
call
rorl
sbb
les
xchg
pop
inc
fistpl
fstpt
ja
cmp
leave
and
xor
stos
rcrb
dec
jge
cltd
dec
lock
sbb
add
push
push
jbe
lret
or
pop
xchg
in
push
push
orl
mov
jmp
jo
sbb
inc
sbb
sub
sbb
xchg
xchg
xor
js
scas
sub
and
pop
add
jae
mov
jne
js
ljmp
aam
psraw
push
jg
icebp
bound
fidivs
aas
sbb
test
mov
loop
pushf
mov
sbb
push
adc
pop
out
mov
fbld
cmp
inc
and
sbb
xchg
cltd
pushl
out
stos
call
pop
movl
add
stos
jbe
xchg
jp,pt
addr16
stos
out
vpxor
popf
jl
push
loop
test
mov
mov
add
fisttpl
in
pop
sbb
cmp
in
fs
cmp
movsb
pop
es
rcrb
mov
xor
mov
cmp
out
cmp
pop
adc
jl
ret
add
push
rcrl
pop
iret
mov
aam
pop
mov
push
xor
xor
xchg
mov
adc
leave
xor
inc
add
mov
pop
mov
roll
add
or
xor
jecxz
rclb
out
pop
shlb
mov
dec
cmp
lds
jnp
xchg
loope
or
movsl
push
xchg
jmp
rcrl
or
pusha
mov
xor
xor
mov
shr
bound
bnd
push
stc
es
mov
sub
mov
or
mov
sbb
repz
mov
sbb
fcmovbe
arpl
lret
mov
call
and
lret
dec
loope
sbb
dec
mulb
jmp
xchg
lds
jo,pn
sub
xor
dec
dec
popf
mov
mov
xchg
addr16
std
push
xchg
push
loope
imul
test
rcrl
out
sub
push
dec
inc
xchg
push
sbb
jecxz
add
push
popa
pop
jecxz
hlt
push
jnp
cli
sbb
out
vmwrite
mov
scas
pop
jp
fsubrs
ss
add
rcrl
sbb
int3
mov
jns
sbb
or
inc
push
repz
and
aas
xor
sbb
jnp
sub
mov
xlat
mov
cmp
sti
jne
xor
ljmp
jle
mov
mov
dec
pusha
mov
adc
pop
addl
sbb
xchg
jecxz
daa
lahf
inc
stos
jbe
sti
mov
push
mov
mov
stc
addr16
dec
mov
cmpsl
btc
sub
iret
jp
lock
dec
outsl
lods
addr16
dec
pop
fldenvs
mov
xchg
rcll
aad
rcll
pop
xor
jle
bound
pop
adc
test
aam
or
add
jecxz
inc
scas
fists
insb
jnp
sbb
or
mov
pop
push
or
fcoml
dec
mov
xor
ja
stc
xlat
fildl
mov
push
frstor
inc
add
mov
arpl
int
mov
push
xchg
inc
into
push
icebp
xlat
ret
and
mov
add
mov
mov
lret
xchg
xchg
pop
adc
push
cli
inc
les
cltd
mov
mov
adc
call
pop
cld
pop
fsubrp
mov
mov
dec
jb
repnz
sti
jno
xchg
xchg
stc
pop
dec
loopne
rolb
call
lds
aad
inc
arpl
jg
scas
mov
dec
cmc
out
mov
aam
or
dec
push
imul
sub
cmp
call
fidivrs
sarl
sub
mov
xchg
orb
psllw
mov
pop
mov
mov
out
outsb
or
aaa
push
movsl
outsb
cmp
shufps
mov
outsb
add
mov
sbb
push
mov
and
mov
rorl
mov
insb
sub
push
inc
xchg
push
lret
pop
cltd
jl
mov
dec
mov
dec
rorb
in
test
jb
ljmp
sub
pop
xor
xchg
sub
cmpsb
stos
pop
push
incl
lret
nop
jle
loopne
in
fldcw
mov
xchg
mov
lock
dec
jmp
mov
shll
mov
mov
push
into
leave
xchg
mov
jo
jbe
mov
inc
lea
push
jnp
shll
push
add
or
cmp
push
data16
push
popa
xor
push
enter
push
xor
jge
das
fldcw
cmc
pusha
in
xor
add
nop
mov
loope
aad
adc
xchg
add
and
adc
sub
outsb
jo
fs
sbb
fcmovbe
pop
sbb
dec
jle
cmp
imul
jge
xchg
push
xchg
xchg
sub
dec
aad
fwait
mov
fwait
xchg
push
sbb
hlt
iret
js
sarl
mov
jno
cmp
xor
mov
pop
jl
test
cmpsl
dec
cli
inc
jo
out
pop
jmp
mov
lock
sbb
aad
sbb
jmp
gs
lods
fdivs
dec
rolb
pop
stc
cmp
inc
stc
xchg
cmpb
cmc
loop
pop
addb
cli
leave
dec
loop
sbb
hlt
xchg
fsubrs
mov
lret
es
sbb
push
in
cmc
adc
sbb
daa
fistpll
rcrl
stos
outsl
push
or
das
jbe
mov
repnz
loopne
mov
sub
inc
xor
je
lahf
test
lret
pop
mov
adc
jge
loop
lret
int3
aas
cmp
push
ret
jecxz
ficoms
inc
ja
xor
cltd
leave
in
ds
sbb
mov
loopne
cmp
xchg
jo
add
test
ror
hlt
dec
add
leave
mov
inc
fistpll
stos
cld
fidivrs
in
lds
push
into
pop
setno
push
outsl
movsb
sbb
cmc
insl
mov
stc
sub
dec
movsl
lock
inc
movsb
outsb
and
jl
jecxz
loopne
sub
insb
cmp
inc
ljmp
lock
jmp
adc
cmp
loop
flds
cwtl
shr
mov
xlat
sarb
add
scas
and
add
cli
xchg
dec
addr16
push
jle
fucomp
mov
and
cmp
lcall
cmp
cltd
mov
push
cmp
outsl
test
pop
mov
test
or
cmpsb
xor
je
mov
mov
aam
lods
fimull
mov
aam
inc
mov
gs
dec
movsb
xchg
loop
adc
push
rol
cmp
test
pushf
or
sub
mov
xor
lcall
jmp
inc
xchg
inc
dec
cmp
iret
adc
pop
clc
dec
out
iret
mov
mov
pusha
jmp
add
add
jg
cmp
imul
xor
pop
xchg
jbe
pop
push
lock
scas
icebp
xor
sbb
ret
jbe
fwait
int3
xchg
fiadds
loope
jecxz
repz
shll
cmp
push
xlat
mov
fsts
pushf
dec
mov
lcall
jae
adc
push
push
imul
sub
push
andb
jnp
or
int
sti
sbb
or
jl
mov
aad
sarb
fwait
repz
or
fcompp
testl
mov
pop
sub
arpl
lahf
xlat
dec
flds
out
js
fs
jns
test
or
insb
adc
out
push
or
mov
mov
or
lods
sbb
test
add
outsl
and
mov
xchg
int
test
aas
mov
iret
pop
cli
out
pop
add
ror
mov
xchg
pop
sub
in
lea
aas
popf
cltd
fidivl
dec
stos
shlb
xor
jg
mov
addr16
fildll
lods
stc
mov
fnstenv
test
ja,pt
mov
shll
add
ficompl
or
jb
lret
lret
sub
outsb
inc
cltd
mov
aas
fisubrs
sub
pop
mov
adc
sub
adc
pop
dec
jg
dec
dec
adc
jns
out
push
cmp
insb
in
push
dec
loope
and
shlb
aad
sub
and
fs
cmpsl
and
mov
pop
js
adc
push
fdivl
stos
mov
shrb
push
inc
fmuls
dec
mov
sbb
cli
and
orl
pop
pushw
xor
outsb
mov
cmp
or
add
shlb
cmovl
jle
and
or
and
rorb
fadd
cmp
sub
out
testl
nop
push
mov
push
int3
sahf
sarl
mov
jne
fldenv
xchg
shll
and
pop
hlt
out
pop
mov
sbb
mov
stos
fsubrs
push
mov
mov
pop
jg,pt
popf
outsl
cmpb
insl
push
aaa
into
aaa
push
push
aaa
incl
imul
push
jo
jnp
xchg
push
jp
jne
ds
andl
cmp
fs
int3
dec
or
aam
pop
xchg
or
inc
push
cltd
dec
adcl
sti
xchg
dec
bound
inc
jg
in
ds
in
and
or
popa
jle
inc
push
add
aam
push
mov
cmpsl
jg
pop
bound
xchg
push
push
test
in
add
test
lods
out
movsl
rcrl
mov
inc
add
pop
movsl
out
mov
cmp
xlat
mov
xor
fcomi
clc
jno
stos
push
xchg
clc
stc
sti
inc
insl
or
ds
dec
jp
push
addl
popa
mov
movsl
cltd
inc
push
scas
pop
test
test
stc
and
push
mov
push
push
mov
or
lods
hlt
push
pop
mov
inc
adc
push
add
in
aaa
data16
jmp
adc
stc
sbb
add
in
pusha
in
xor
xchg
shlb
in
stos
and
mov
les
adc
push
pop
and
mov
pushf
sub
addl
iret
pushl
push
inc
pop
jae
mov
ds
loopne
add
pop
push
mov
mov
pop
push
testb
push
shlb
and
sub
jo
test
test
add
inc
cmc
daa
xor
scas
xor
orb
jp
mov
lcall
cmp
add
mov
mov
arpl
or
clc
sub
pushf
sbbl
flds
jle
xor
in
cli
sbb
fimuls
aam
inc
ss
lods
insl
push
shrl
inc
imul
jle
cmpsl
lcall
mov
int
clc
std
xchg
jns
cmp
inc
flds
push
das
cmpsb
stos
xchg
adc
pop
xor
fadd
rcl
push
mov
push
ret
mov
mov
dec
xchg
cld
fcmovnu
push
or
sub
cmpsl
enter
enter
stos
mov
loop
adc
outsb
inc
and
leave
bound
mov
sbb
mov
je
adc
push
fcoml
xor
sahf
int
into
xlat
cmp
cmc
and
repz
xor
icebp
dec
cmp
int3
dec
adc
outsl
lret
fisttps
cmp
aas
xor
mov
int
push
inc
xchg
shrb
pop
jge
inc
add
pop
dec
das
xor
outsb
cmp
mov
inc
icebp
adc
insl
lds
daa
cmp
mov
sbb
pop
jle
pusha
shll
xchg
movsl
xor
add
mov
outsb
inc
push
push
repz
mov
adc
pop
out
inc
insb
sub
fdivrp
push
outsb
or
mov
int3
pop
lret
inc
gs
gs
mov
xor
and
mov
insb
movsb
out
jb
pop
call
rcll
push
pop
push
pop
outsb
jb
mov
push
loop
ficoms
outsl
std
jno
sbb
jge
lcall
mov
dec
lahf
mov
mov
pop
fisubs
jae
scas
add
push
push
ret
xor
xchg
push
lods
pop
jno
pop
cmpsl
cld
lea
lret
ljmp
movb
xor
inc
idiv
shrb
orl
outsl
mov
xchg
icebp
gs
dec
mov
fisubrl
push
inc
sbb
mov
pop
pop
clc
movsb
lea
test
outsl
mov
pusha
adc
sbb
dec
push
aam
sub
addr16
lret
dec
int
ret
cmp
dec
pop
adc
out
faddl
orl
movsl
jp
call
mov
loop
cld
std
std
ret
mov
push
ret
test
xchg
subl
mov
or
insl
xor
pop
and
inc
sbb
cld
xor
sbb
lock
cli
cld
lcall
movsb
ljmp
mov
lock
cmpl
inc
mov
out
int
xor
and
sbb
mov
mov
sbb
fwait
and
push
shrl
stos
jl
jbe
ljmp
loop
mov
es
sub
push
xchg
xchg
outsl
sub
add
shrb
dec
sbb
or
xchg
mov
fidivl
push
je
ja
arpl
mov
outsb
lcall
mov
fildll
out
xchg
jb
add
in
ffree
sarb
adc
inc
xchg
xor
inc
jecxz
dec
mov
xor
xor
or
fsubl
in
mov
sti
ret
pop
and
mov
push
adc
inc
jb
mov
out
fcoms
fs
insb
fistpl
xor
pop
sub
xchg
mov
ss
leave
popf
stos
in
lret
icebp
push
jle
test
jmp
cltd
out
aad
sbb
fcmovu
cwtl
and
push
movsb
ds
test
addl
loopne
test
pusha
or
dec
test
push
cld
push
sbb
fs
daa
ljmp
sub
mov
ret
and
sti
fistpl
popf
sahf
push
int
ret
negb
or
sub
inc
sbb
jecxz
sub
jg
ret
in
push
mov
cmp
adc
jns
or
cmp
sahf
stos
push
mov
pop
mov
fstl
pop
add
sub
icebp
out
cmp
cli
aas
sub
negb
jge
and
in
outsl
in
pusha
movsl
cltd
sub
mov
insl
gs
in
adc
sbb
cmpb
stc
xchg
in
sahf
push
add
call
rcrl
std
int
cmp
add
inc
add
shll
int
popf
mulb
fidivrl
push
fs
inc
es
cli
add
in
mov
in
xchg
xorb
jg
pusha
xchg
dec
shlb
mov
mov
pop
sbb
push
xor
mov
sti
xchg
add
bnd
sbb
dec
ret
out
fprem
ss
sbb
out
inc
jnp
dec
movsl
faddl
gs
mov
enter
rorb
inc
out
imul
cmp
cmp
ret
inc
and
movsl
mov
push
mov
and
lahf
and
shll
roll
mov
cmp
add
lods
jl
dec
mov
cmp
xchg
pop
jle
dec
mov
inc
sbb
out
daa
mov
xor
cmp
mov
gs
stos
mov
lret
sahf
and
imul
das
dec
testb
out
sub
enter
cmpsb
fcoml
push
imul
fcmovu
or
mov
test
dec
sahf
xor
sub
pop
inc
and
movsl
push
add
push
mov
push
ret
xor
in
xor
jb
inc
and
int
push
mov
addr16
int
add
push
pusha
mov
rolb
scas
jne
pop
cmp
xchg
sub
xor
inc
in
inc
sbb
sbbl
hlt
nop
mov
mov
inc
push
dec
cmpsl
jmp
xchg
fstl
push
es
add
push
inc
call
cld
dec
cmpsl
mov
sarl
and
fstpt
or
shll
or
imul
in
sbb
iret
ds
hlt
pop
mov
sub
jne
loopne
mov
dec
adc
xchg
leave
ret
and
sti
lock
mov
ret
push
fldl
jbe
ficoml
xor
rolb
and
in
and
inc
movsb
lret
data16
push
push
xor
insb
xlat
shlb
test
cmp
jle
cwtl
jae
iret
pop
sbb
jnp
fwait
or
add
push
movb
out
pop
test
xchg
dec
jmp
in
iret
adc
dec
and
inc
mov
inc
inc
lods
shl
out
xchg
mov
sub
addb
mov
mov
dec
jle
iret
popf
cmpsb
ret
mov
shlb
jae
xchg
xchg
test
and
mov
cmp
push
xor
fisubs
rcrl
xor
push
sub
nop
push
add
inc
outsl
jae
out
xchg
mov
adc
add
or
dec
pop
adc
aaa
xor
adc
testl
test
mov
insb
xchg
arpl
lods
rorl
xor
dec
test
out
icebp
add
add
sub
sbb
loop
imul
into
in
loopne
nop
mov
cli
imul
fstl
add
movsb
adc
xor
jecxz
dec
sbb
cmovbe
mov
sbb
push
fnsave
sbb
sub
shrl
fwait
rolb
scas
push
xchg
adc
mov
aam
daa
mov
cmp
cli
cmp
jg
repz
xor
scas
int3
mov
nop
fiaddl
mov
jno
mov
les
xor
jne
sbb
push
add
lods
sub
mull
insb
xchg
jmp
les
lret
add
fistpll
scas
push
sbb
xchg
loope
pop
test
xchg
sub
jg
shlb
mov
cmpsl
inc
fwait
or
xor
pop
gs
or
bound
pop
adc
add
cmpsb
jbe
insb
mov
arpl
fmul
sti
insb
popa
lahf
mov
inc
aas
mov
adc
sbb
pop
and
pop
in
icebp
mov
sub
mov
push
idivl
icebp
out
das
leave
iret
bound
xor
push
mov
push
int3
fldenv
arpl
sbb
aaa
adc
xlat
movsb
xlat
cmc
push
xchg
loopne
or
shrb
mov
enter
clc
and
mov
jno
int
fldenv
lret
movsb
mov
or
mov
add
icebp
pop
push
xchg
sub
and
stos
shll
dec
jae
shrb
add
mov
adc
xchg
popf
mov
pop
daa
fidivl
and
pop
stc
mov
rorl
dec
cmpsb
fucom
gs
xchg
into
outsb
pusha
outsl
das
inc
dec
divl
scas
or
adc
popf
jecxz
dec
mov
roll
jmp
insb
inc
dec
mov
mov
repnz
cld
out
inc
and
push
aas
fsts
hlt
mov
mov
mov
xor
jno
jl
nopl
push
mov
mov
mov
addr16
mov
or
cmpsl
adc
sbb
fists
out
arpl
cmp
shlb
and
cs
bound
js
add
push
mov
adc
jbe
cmc
dec
ljmp
ret
cmovb
pop
push
push
lods
imul
pop
or
jb
mov
sbb
add
iret
enter
sub
hlt
mov
sbb
sub
ror
call
xchg
sbb
mov
push
rolb
mov
jg
les
xchg
inc
in
and
lret
test
sbb
ss
sahf
pusha
or
scas
movsb
and
mov
sbb
sub
cmpsb
or
lcall
jge
arpl
in
xchg
mov
push
int
cmc
xchg
mov
mov
sub
lahf
fldenv
popf
cmp
shrl
adc
dec
add
adc
jecxz
imul
movsb
push
pop
lret
adc
dec
nop
not
gs
mov
inc
out
gs
add
xchg
xchg
dec
rclb
ret
int3
xchg
jmp
loop
jo
lods
je
repz
mov
pop
or
scas
jmp
mov
movsb
push
xlat
jge
add
xchg
pop
iret
nop
in
sub
dec
in
in
sbb
loopne
nop
cmpsl
pop
pop
cwtl
jge
add
jecxz
pop
out
mov
xlat
pop
xchg
xor
lahf
mov
xchg
addr16
jnp
scas
jb
repz
subl
repnz
hlt
cwtl
mov
in
lret
iret
inc
stos
loop
rcrb
cmc
add
mov
sar
xchg
push
or
push
push
orl
stc
add
in
idivb
jns
or
or
cld
test
test
mov
dec
loop
and
pop
cmpsb
lahf
sbb
cs
ret
fsts
xchg
or
fisttpl
mov
popf
call
pop
dec
xchg
movsb
xchg
fs
out
sbb
adc
and
push
xchg
jmp
std
idivl
lock
mov
call
clc
test
inc
in
hlt
mull
jl
xchg
enter
ret
push
div
out
out
out
bound
nop
sub
adc
xchg
in
mov
push
arpl
pop
pop
in
fsin
mov
es
xor
pushf
out
xchg
xlat
sbbl
std
jp
fwait
and
push
shl
test
jnp
and
ss
sbb
fisttpl
pop
lds
data16
test
sbb
add
cmp
mov
mov
je
mov
mov
std
jecxz
push
pop
xlat
test
xlat
pop
addr16
lea
mov
fiaddl
cmpsb
push
push
xchg
std
cmp
jnp
sarb
testb
push
push
lcall
push
in
dec
mov
aas
test
fsts
fiadds
and
mov
mov
or
cmp
add
xchg
sbb
fcmovbe
stc
aam
divb
jle
fistpl
jge
and
adc
pop
ss
scas
sbb
fimuls
adc
mov
inc
pop
mov
rcl
sbb
or
push
xor
mov
inc
push
sub
into
sbb
adc
fbstp
faddp
inc
jecxz
fsubrs
js
movsb
pop
int3
dec
cmp
push
inc
jg
rol
xchg
mov
outsl
xor
push
xor
push
test
mov
and
mov
pop
mov
jmp
test
mov
out
out
xor
lret
lret
popa
sub
out
sub
imul
xor
scas
add
inc
inc
inc
add
nop
cmp
ret
cmc
inc
mov
ror
jb
sarl
push
jne
mov
fwait
add
adc
out
adc
xchg
popl
daa
push
into
xor
lret
mov
adc
test
mov
mov
imul
icebp
xchg
add
sbb
and
dec
loopne
push
inc
jecxz
lods
mov
mov
and
dec
rcrl
fildll
fstps
push
loope
ret
aad
mov
pop
addr16
outsl
xorl
gs
das
aaa
inc
mov
xor
out
int3
insb
lret
pop
andnps
xor
push
sbb
fistpll
cmp
or
adcb
jmp
adc
in
scas
inc
jg
bound
les
xlat
sub
pop
sub
add
inc
pop
jp
and
leave
inc
sub
push
xor
arpl
lock
jg
stos
xor
mov
js
arpl
dec
sub
and
fsts
jo
aam
xlat
sahf
add
inc
roll
pop
cmp
xchg
sbb
xor
loop
std
in
into
fcoms
or
js
mov
mov
sti
jne
jnp
jo
jb
adc
movsl
sub
pop
nop
dec
jp
stos
addr16
out
push
leave
xor
mov
pop
xlat
idivb
push
filds
test
jle
jle
push
test
nop
or
fsts
rclb
mov
das
or
dec
add
push
and
push
fwait
push
sbb
lcall
aam
sbb
lods
xor
mov
cmp
cmpsl
jecxz
push
dec
nop
lea
mov
mov
add
jp
mov
lock
cs
sahf
jnp
jmp
push
inc
mov
dec
lcall
aaa
cs
lods
add
hlt
enter
jae
cltd
mov
shll
push
loop
dec
xor
call
inc
add
pop
repnz
mov
cli
lret
xchg
ret
rclb
cltd
mov
fcmovnb
push
movsl
shl
lcall
push
and
pop
je
add
ret
sbb
cld
lods
cmp
leave
jne
fisttps
call
in
int3
aaa
mov
shlb
mov
ss
mov
sub
ret
std
pushf
lcall
mov
sub
mov
dec
xchg
jecxz
test
iret
mov
xchg
mov
orb
mov
add
jne
mov
mov
inc
or
pop
mov
jg
ljmp
xchg
movsb
imul
aad
cwtl
or
lea
ja
enter
inc
jae
clc
or
xchg
aaa
jae
aad
dec
cld
pop
test
jl
dec
rcr
imul
inc
bound
mov
in
push
sti
and
out
and
dec
cmpsl
out
mov
dec
int3
dec
and
xchg
nop
xchg
int3
cmpl
lahf
out
jns
xchg
lret
sub
aaa
mov
fs
mov
add
fsts
lret
jle
lret
sbb
fsubrl
pop
cmp
out
xchg
inc
sbb
and
adc
ja
outsl
mov
sub
in
adc
rolb
sbb
mov
cmp
inc
add
dec
into
sub
add
nop
pop
in
pusha
clc
adc
mov
and
pop
xchg
das
mov
movl
lcall
shll
mov
shrb
xor
ret
aad
sti
mov
lret
test
pusha
pop
bound
push
mov
sahf
mov
xor
repz
and
jae
in
cmc
aad
pop
mov
sbb
or
sub
aam
outsb
je
jo
nop
cmpsl
and
out
cmp
or
push
addl
js
xor
mov
mov
cmp
fucomp
dec
push
mov
adc
in
dec
js
adc
xlat
addl
mov
or
test
scas
cmp
add
mov
push
adc
jmp
or
xchg
xor
int3
in
push
imul
and
fidivl
popf
mov
addr16
or
mov
pop
repnz
loope
ljmp
mov
mov
clc
push
inc
sub
loopne
jge
inc
fnstsw
imul
mov
stos
cmp
mov
inc
lcall
repnz
stc
es
and
jns
icebp
pop
sets
mov
jb
push
dec
icebp
cmc
sbb
xor
sarb
mov
xchg
jno
lret
shrl
dec
xchg
cmp
neg
xchg
push
mov
inc
dec
loop
mov
cmp
pop
add
aad
pop
dec
dec
rolb
cli
or
adc
iret
mov
sahf
fldcw
inc
and
aam
sarb
movsb
int3
nop
mov
leave
xlat
mov
cmp
mov
movsb
lea
push
sub
movsb
out
loope
adc
cmp
push
in
stc
or
push
mov
jns
sbb
test
ja
ljmp
xlat
or
mov
daa
int3
sbb
or
sub
sbb
ret
xchg
add
imul
jno
dec
mov
pushf
daa
or
adc
mov
sti
add
jge
ja
and
std
sub
in
dec
jnp
pop
arpl
xor
in
les
mov
nop
dec
addr16
out
sbb
push
aam
je
mov
daa
jb
cld
cmpsl
pop
das
cmc
iret
int
mov
data16
int3
cmp
sub
or
jle
push
scas
mov
cld
xchg
dec
lock
cmp
js
mov
jns
xchg
mov
xor
sub
mov
sarb
cwtd
add
test
adc
push
dec
fs
insb
jle
adc
repnz
test
outsl
xor
mov
lods
mov
std
sub
push
dec
ljmp
sbb
sub
mov
mov
pop
addr16
jnp
loope
pop
jle
or
push
popf
mov
push
daa
mov
add
or
add
hlt
dec
pop
dec
adc
mov
jp
pop
mov
cli
arpl
adc
lcall
daa
repz
xchg
xor
loopne
cmp
lock
lods
jae
mov
fyl2x
push
sbb
stc
ficoml
rol
int
cmpb
insb
enter
lahf
int
inc
fimull
mov
mov
add
jbe
sbb
stos
cmp
jl
jb
imul
pop
sub
sub
cmpb
les
cld
jnp
fdivrs
cld
push
push
les
enter
adc
out
cmp
cmp
dec
mov
mov
mov
jge
jbe
clc
jne
xchg
cwtl
inc
xchg
enter
sub
jnp
jnp
mov
mov
cmpps
xchg
loop
cs
or
xor
addr16
xchg
and
repz
outsl
insb
cs
icebp
data16
dec
dec
inc
rcr
adc
push
cltd
mov
or
mov
stos
dec
mov
lahf
fcoms
mov
lods
xchg
push
test
push
mov
cmp
daa
xchg
dec
lds
jnp
std
rcrl
sbb
out
das
jmp
div
cmp
pushl
addl
jae
xor
pop
das
movsb
inc
cltd
push
jb
aaa
cmp
data16
jb
popf
adc
and
sahf
loop
lods
mov
adc
xorb
mov
pop
mov
dec
pop
and
int
jns
mov
mov
mov
inc
ror
addr16
push
mov
aam
stc
das
cld
pop
outsl
arpl
dec
aad
mov
jbe
jecxz
dec
out
mov
push
jp
xor
inc
fwait
rolb
mov
mov
adc
es
mov
sub
push
aaa
jmp
cmp
jb
mov
lret
in
xchg
xchg
ret
adc
orb
push
pusha
fbld
mov
test
imul
pop
jl
mov
ljmp
stos
ss
lds
jecxz
movsl
sub
xchg
loopne
adc
mov
or
in
test
pop
scas
movsb
adc
sub
scas
xchg
cwtl
sahf
dec
icebp
mov
mov
out
add
int3
repz
cld
shrl
fistl
or
stos
xor
jae
fwait
stos
lcall
and
rorl
aaa
ljmp
nop
insl
push
push
mov
iret
adc
cmp
insl
sbbb
mov
xlat
repz
xchg
mov
xchg
inc
inc
pusha
ret
aam
pop
add
or
sarl
jmp
mov
fcoml
mov
pop
adcl
sbbb
inc
mov
mov
fisttpll
ja
pop
jns
dec
shl
xchg
mov
jbe
mov
cltd
jb
adcl
adc
add
jo
repnz
mov
and
stos
es
das
dec
mov
cltd
out
adc
mov
jle
mov
xor
xchg
add
repz
icebp
mov
ret
inc
jne
loop
dec
mov
in
mov
jo
mov
mov
adc
and
ds
cli
mov
lock
jne
inc
xor
xchg
pushl
out
push
pop
clc
lcall
xorl
pop
xchg
int3
pop
out
pushf
sbb
dec
adcb
mov
pop
adc
int
xor
xor
mov
sar
cmp
repnz
inc
xchg
fsubs
movsl
outsl
mov
mov
jae
mov
cmpb
add
clc
jne
xchg
mov
gs
sbb
andl
lea
inc
jp
mov
stos
repnz
test
cmp
subl
xchg
add
dec
xor
int
loopne
sbb
movsl
jbe
add
pop
es
shl
pop
nop
pusha
jl
outsb
test
leave
lods
push
cmpb
lock
insb
ss
pop
mov
ror
dec
repz
iret
into
cmp
fdivr
xor
loopne
leave
cmp
jbe
jge
add
fnstenv
dec
fcoml
sbb
jmp
mov
ss
pop
dec
ja
mov
dec
ja
sbb
push
test
lds
lcall
sbb
cld
nop
rcpps
or
jns
or
cmp
shl
out
and
xorl
fcomp
in
dec
fnstsw
cmp
insb
test
xor
clc
pop
iret
loope
ss
stos
sbb
mov
out
pop
xor
xor
xor
xlat
mov
push
and
inc
cmpsb
cmc
loope
xor
mov
scas
arpl
xchg
jl
outsb
mov
mov
rclb
jl
xchg
inc
lret
push
fstl
inc
xchg
xlat
lods
icebp
dec
and
sub
add
sbb
push
xchg
aad
mov
mov
movsl
sbb
xor
fnsetpm(287
stos
ret
pop
leave
out
in
js
sar
xor
test
lcall
jg
out
mov
nop
add
gs
pop
add
or
cmp
mov
aad
push
int
insl
call
mov
mov
or
xchg
popf
mov
mov
ja
sarb
jge
jae
or
mov
ret
std
add
or
pop
adc
xchg
pop
inc
dec
adc
xor
lcall
insb
out
cmpsl
outsl
stos
cmp
loope
cs
xchg
cltd
cmp
daa
sbb
xchg
popf
xchg
push
ss
inc
lods
jg
js
mov
jmp
add
and
pop
jmp
lcall
xchg
sub
mov
mov
insb
enter
fnstenv
outsb
and
dec
icebp
ja
push
xchg
pop
xlat
pop
rcrb
rol
mov
inc
mov
push
xlat
mov
movsb
fsubs
pop
and
jns
out
cmp
adc
out
lcall
ret
notl
cltd
clc
mov
ja
inc
test
imul
or
ss
insl
pop
pop
movsb
xor
outsl
stos
add
pop
clc
jle
mov
icebp
js
inc
jp
adc
movsb
movsb
mov
jl
add
or
cmpsb
test
imul
lahf
xchg
dec
xchg
dec
mov
adc
pop
rorb
cmp
xor
xor
add
jp
insl
add
and
adc
movsb
mov
std
ja
sbb
mov
sub
jp
outsb
mov
lret
fistl
repz
rorl
push
pop
inc
jne
sti
or
mov
mov
dec
outsb
add
rolb
fistpl
dec
sub
inc
pop
les
out
xor
mov
dec
mov
mov
testl
test
cs
nop
mov
jle
js
mov
fldl2t
and
divb
push
out
pop
call
mov
loop
out
rol
cmp
jmp
xchg
sbb
mov
out
push
jg
cmp
xchg
insb
and
shr
imulb
cmp
ljmp
mov
mov
jns
xor
ret
lods
mov
or
inc
lcall
mov
cmpl
mov
mov
into
sbb
sub
mov
out
mov
loopne
xor
mov
outsb
or
mov
adc
mov
pop
sar
mov
mov
jecxz
leave
mov
or
xchg
int
sahf
pop
repz
jg
pop
mov
push
sbb
mov
pop
cmp
test
jg
adc
fcompl
mov
jle
inc
insb
xchg
std
sbb
cmp
or
cmpsb
pop
inc
lahf
adc
lret
inc
push
ja
pushf
lea
and
or
test
adc
pushf
idiv
cmpsl
shr
cltd
div
jp
std
popa
mov
pop
arpl
mov
loopne
mov
sbb
sub
es
cmp
inc
test
cmpb
inc
iret
hlt
popl
sub
pop
int3
imul
test
in
pop
push
test
dec
mov
or
clc
fnstenv
dec
loope
sbb
mov
pusha
xchg
and
mov
or
int
test
rcrb
lcall
ss
pop
xlat
fisubrs
or
cmp
ret
mov
iret
cs
imul
xor
mov
sub
adc
loope
cmp
pop
jb
arpl
sbb
mov
pop
ja
inc
rcl
mov
jge
outsb
mov
lret
xchg
and
dec
or
int3
sahf
mov
adcl
stc
les
xor
push
rcll
xchg
cmp
mov
in
mov
pop
cmpsl
out
mov
inc
popa
dec
mov
xchg
xchg
cmpsb
or
call
add
mov
into
and
xor
leave
xchg
push
leave
mov
mov
mov
bound
ret
sub
pop
lcall
adc
add
push
iret
lock
jl
pop
or
or
or
cltd
push
cmpsb
xchg
pop
in
outsl
inc
pop
int3
mov
dec
dec
mov
jmp
es
adc
or
das
push
cmp
inc
sub
dec
cmc
xchg
mov
jg
xorb
cmp
mov
outsb
popf
cmpsl
jnp
hlt
adc
mov
adc
jecxz
rorl
lea
mov
inc
mov
xchg
addr16
insb
jle
ja
je
cli
pop
ret
fwait
sbb
adc
push
push
xor
xor
mov
mov
pop
mov
push
insb
iret
sub
and
jl
mov
iret
negl
in
in
and
xchg
insb
inc
and
cmp
mov
add
test
mov
fsts
sub
lret
sbbl
int
insl
adc
inc
loope
adc
std
mov
loop
and
aas
push
push
sbb
mov
cmp
mov
fstps
ror
xor
stc
loopne
jmp
lock
ss
arpl
push
in
jp
fstpl
cld
sub
dec
fstpt
loopne
and
dec
int3
ljmp
mov
mov
xchg
repnz
mov
push
int3
dec
or
inc
stos
fidivl
adc
loop
loope
lock
lahf
dec
aas
push
add
cld
popf
sbb
test
mov
sub
cld
xor
roll
popf
popa
mov
test
fwait
aas
sbb
pusha
cli
jb
enterw
sbb
pop
test
sbb
cmp
out
xor
sub
fimull
xchg
adc
rorl
push
addr16
push
fcomp
sub
mov
lahf
jae
adc
xchg
test
sub
ds
jo
inc
test
xchg
mov
lcall
push
jns
add
in
mov
mov
xchg
out
daa
inc
or
adc
cmp
pop
mov
fcoms
ror
pop
xchg
cmp
outsb
fists
adc
cli
sub
add
lcall
cmc
pop
xchg
fisttpl
or
ret
mull
imul
enter
adc
lahf
push
enter
mov
jge
inc
sub
fdivrl
test
push
imul
cmp
inc
pop
sar
test
and
mov
imul
sahf
inc
pop
pushf
and
hlt
mov
sbb
inc
inc
xor
sbb
test
mov
inc
sbb
and
push
pop
and
mov
adc
inc
mov
out
and
addr16
add
sbb
or
xchg
leave
add
xchg
test
pop
imul
ret
arpl
pop
adc
shll
lcall
sub
movsl
cmpsb
insl
push
sub
jp
pop
pop
mov
dec
pop
jge
testl
nop
dec
sbb
push
sahf
call
fnstenv
and
sbb
leave
repnz
mov
sub
pop
into
insb
pop
inc
xchg
or
and
and
aaa
inc
test
add
sbb
fbstp
outsl
dec
call
pop
shl
add
fidivs
xlat
aad
iret
sarl
lcall
loope
mov
cmp
int3
shlb
cmp
mov
arpl
lcall
orl
ljmp
jle
in
or
cmpsb
scas
popa
loop
rcpps
mov
movsb
shrl
pop
push
cld
les
dec
add
cmp
lret
inc
pop
jecxz
mov
lods
daa
pushf
mov
pop
popa
call
rorb
pop
adc
push
mov
push
stos
xor
sar
enter
out
sbb
lock
clc
xor
bound
mov
jbe
out
ljmp
inc
xor
fistps
mov
fwait
js
stc
mov
ret
pop
das
loopne
push
add
adc
rclb
popf
inc
mov
subl
rcrb
insl
std
stc
repnz
ret
loope
and
lea
cmc
scas
or
adc
in
dec
sub
pop
dec
mov
adc
push
or
add
js
daa
test
and
int3
add
inc
and
das
and
lods
ja
xor
in
mov
dec
gs
out
fnstsw
mov
test
arpl
cmc
adc
add
lret
loop
mov
iret
popa
mov
adc
movb
push
and
adc
fdivr
pop
bound
push
sbb
or
sub
inc
sbb
aas
dec
jl
hlt
call
sbb
fidivl
aad
and
insl
sub
loopne
out
dec
fisttpl
inc
ljmp
pop
cwtl
dec
xchg
mov
setl
int
fsubrp
jne
jb
ret
enter
pushf
adc
fcompl
mov
mov
repnz
into
loopne
xchg
in
dec
xchg
sbb
add
in
cmpsl
xor
mulb
inc
ret
add
ss
push
add
inc
jp
sbb
jecxz
push
loope
dec
fists
jp
xor
xchg
popa
and
push
dec
rolb
dec
test
adc
aaa
fnsave
sub
push
jbe
mov
xchg
jb
decb
adc
push
and
jmp
jo
dec
fdivp
cmpsb
fistl
sub
stos
data16
pop
out
ja
cmp
xor
lcall
cs
test
aas
sti
repnz
scas
sbbl
mov
xorb
dec
jne
mov
push
lret
in
ss
leave
insb
xor
fldt
xor
data16
jg
pop
xor
mov
lret
lahf
enter
test
jo
sub
jp
pcmpgtw
aaa
mov
negl
sub
xchg
f2xm1
or
xchg
sbb
hlt
sub
xor
addb
add
clc
mov
inc
cmpsl
add
jge
rorl
stos
cmp
mov
loope
fsubr
pusha
nop
add
fisubs
mov
add
cmpsl
les
cmp
jg
repz
std
xlat
sbb
jmp
stos
mov
dec
xchg
mov
mov
jne
push
sbb
das
mov
stos
in
int3
out
movsb
mov
sub
push
movsb
xor
movsb
stos
addb
loopne
lock
sbb
cmp
inc
dec
dec
in
add
cld
sahf
xchg
lcall
adc
jne
dec
mov
jns
cmc
movl
lcall
rcr
arpl
out
jp
sub
std
jae
mov
add
add
std
lret
jp
aas
std
xchg
mov
or
or
rorl
xor
cmp
test
je
push
mov
movsb
cmpsl
jae
add
add
aas
sahf
pop
mov
cld
unpcklps
mov
into
jle
push
or
insl
cli
or
movsl
lea
shll
icebp
push
std
and
icebp
ret
sbb
bound
pop
cld
sbb
stos
popf
imul
jb
out
out
adc
mov
pop
pop
in
adc
xchg
xor
sarb
arpl
cmp
and
lods
inc
les
mov
cmp
sti
dec
loop
test
addb
jle
inc
or
popf
arpl
rolb
inc
pop
mov
rcrl
xor
test
cmp
jns
insb
pop
icebp
xor
xchg
sbbl
fwait
xchg
jecxz
test
add
loop
hlt
push
push
cltd
adc
mov
addl
call
add
into
out
shl
scas
or
or
mov
call
lahf
dec
adc
sbb
push
hlt
pop
aaa
adc
push
xor
inc
xchg
fistl
repnz
mov
sub
add
fs
addl
pusha
stos
pushl
gs
and
movsb
mov
inc
pop
test
hlt
mov
mov
test
loope
xor
sbb
xor
in
inc
divb
push
inc
ret
addr16
mov
xchg
and
pop
imul
cltd
pop
sbb
inc
pop
jg
xchg
xchg
clc
lcall
in
mov
ja
mov
sub
loopne
ljmp
inc
pop
adc
and
aam
out
test
sbb
dec
jns
mov
dec
ljmp
sbb
xlat
add
and
jne
adc
mov
lock
mov
fwait
mov
xchg
fidivrl
xchg
push
aas
arpl
adc
repz
stos
jle
incb
out
imul
dec
in
loope
adc
daa
or
or
inc
mov
in
xor
jne
jmp
lds
ret
jno
fbld
inc
push
fs
push
pop
repnz
mov
inc
ret
in
mov
xchg
push
jmp
jo
inc
fnstcw
dec
testl
rorl
loope
stos
fidivrl
and
add
mov
cmpsl
jb
mov
jle
scas
ret
lcall
rorl
aam
int
mov
jnp
sarl
cmp
shrd
jp
mov
sti
mov
inc
xor
mov
bound
pop
lods
dec
xchg
adc
inc
jl
mov
lret
popa
push
ret
add
mov
pop
mov
push
push
shll
cli
inc
pop
sbb
mov
or
hlt
add
push
and
mov
testl
xchg
dec
in
push
push
in
and
outsb
push
xlat
sbb
adc
dec
pop
jg
lret
in
movb
pop
mov
call
lods
mov
cmpsb
dec
sbb
cmp
xorl
pop
xlat
adc
sar
and
js
notl
mov
add
pop
push
cmp
sub
int3
jnp
lea
xor
cli
out
add
popa
int
mov
mov
inc
frstor
pop
inc
sub
cmpsl
dec
sub
mov
inc
negl
hlt
out
insb
lahf
in
rorb
sub
rcll
cltd
pop
xchg
adc
loope
pop
xchg
loop
or
js
das
inc
mov
push
add
lods
adc
push
inc
mov
mov
movsb
fildll
push
inc
and
lods
or
insb
sarb
mov
push
clc
xorb
popa
insl
lods
imul
add
push
fwait
leave
sub
and
xor
inc
into
inc
jecxz
mov
mov
pushf
sub
jle
je
pushf
cmc
ret
es
xor
xor
mov
push
fildll
xchg
sahf
lock
xor
push
rorb
hlt
ljmp
out
test
and
mov
test
sbb
push
and
shrb
rorl
cmp
dec
sub
test
out
add
fnstsw
cmp
call
xlat
sbb
cmpsl
cmp
lahf
add
add
or
lock
xor
xchg
xor
out
rcrl
inc
mov
js
lahf
jb
mov
or
inc
dec
pop
mov
cwtl
inc
pusha
inc
lea
aam
jns
idivb
pop
mov
mov
in
shrl
inc
test
lock
aam
pusha
jmp
aam
aam
repz
jb
xor
mov
js
dec
sub
adc
imul
mov
inc
sti
push
sub
mov
loope
fldt
cmc
dec
sub
pop
cmc
xor
in
neg
in
ljmp
cmpsl
inc
push
lods
fucomi
stos
enter
cmc
repnz
daa
jp
push
stc
inc
xchg
aas
dec
add
push
adc
aaa
and
lret
hlt
add
push
sbb
push
mov
mov
xchg
add
adc
lds
push
cmp
outsb
mov
fcmovb
and
inc
pop
testb
sbb
or
rolb
nop
imul
cmc
out
js
enter
pop
jne
jl
xchg
adc
stc
subb
xchg
cmpsb
inc
mov
or
test
jl
mov
lods
loope
in
jecxz
lds
or
and
mov
popf
jo
lret
mov
mov
test
insl
frstor
sbb
jg
jb
iret
mov
mov
nop
stc
sub
and
sub
outsl
adc
push
icebp
jmp
es
sub
push
outsb
inc
movsl
lahf
mov
jge
dec
pop
and
sbb
fstpl
cmpb
xchg
push
int3
test
xchg
test
cmp
sbb
push
mov
mov
movsl
subb
cmpl
into
mov
fwait
and
outsl
or
popa
add
pop
ret
addr16
popf
or
mov
xchg
jno
xor
and
cwtl
inc
inc
fisttps
xlat
xor
jg
or
xchg
lods
push
inc
xchg
lods
jecxz
in
lret
fnstsw
out
lods
xchg
xchg
push
jns
test
jp
dec
lea
mov
cmp
lret
push
jecxz
popf
dec
pop
xchg
xchg
insl
xchg
iret
inc
pop
inc
orl
jae
scas
lods
mov
cwtl
jmp
sbb
pop
lcall
int3
mov
push
mov
clc
imul
nop
fsubrl
jle
adc
int3
fwait
lret
mov
cmp
int
and
or
addl
lahf
or
push
mov
pushf
sbb
xchg
dec
sub
add
dec
aam
xor
arpl
pop
pusha
call
jnp
and
jl
add
imulb
push
mov
cli
mov
sub
ljmp
dec
or
push
lds
xor
mov
cwtl
gs
add
inc
icebp
jge
addr16
jle
push
pop
and
in
sbb
push
jp
rep
js
inc
xlat
xchg
xchg
int3
leave
jne
stos
bound
mov
outsb
adc
pop
or
ds
addr16
aad
mov
xchg
cmc
jae
pop
call
shrl
out
or
mov
or
adc
cmp
cltd
ror
jne
cltd
lahf
cmp
mov
push
dec
sbb
and
pop
fcomps
and
dec
andl
sub
inc
pop
fs
adc
push
loop
mov
fsubl
sub
in
test
mov
jns
sub
cmc
popf
test
out
xchg
adc
inc
cmp
int3
int3
aaa
outsl
ja
scas
push
fnstcw
inc
or
cmp
push
and
jae
out
fsubrs
call
xchg
xchg
movsb
mov
outsl
outsb
jns
pop
and
cld
aas
clc
and
pop
mov
xor
ja
mov
sar
ljmp
lea
leave
scas
inc
dec
jbe
jbe
xchg
inc
push
pop
pop
push
es
ret
clc
adc
arpl
add
inc
inc
and
mov
adc
cmp
xlat
decb
int
fdivs
xor
push
lds
scas
cld
jns
popa
mov
mov
xor
xlat
push
cltd
jmp
push
mov
mov
scas
lret
fwait
cmpsb
loopne
push
cmpsb
mov
jnp
inc
test
test
mov
test
dec
jnp
push
pop
or
mov
fildll
xchg
in
sti
fbstp
push
nop
push
cwtl
jnp
mov
push
sbb
aam
ret
push
cmpb
sub
repz
fs
xchg
enter
mov
xor
push
mov
add
dec
pushf
or
sub
sahf
mov
mov
xchg
fldcw
mov
and
ljmp
into
xchg
outsb
aam
push
daa
imull
mov
stc
push
mov
push
and
stos
aaa
das
jne
arpl
aad
sub
pop
mov
and
mov
pop
adc
xlat
ret
hlt
push
add
sbb
cmp
push
leave
in
inc
in
cltd
sub
mov
bound
and
mov
cmp
pop
stc
shlb
orl
mov
addl
mov
rcrl
test
push
movsl
cmp
pop
cli
xchg
xchg
mov
pushf
call
sarl
fwait
dec
subb
int3
int3
sbb
mov
es
pop
ret
test
fwait
bswap
push
adc
mov
jne
fwait
sub
pop
fcmovnu
xor
dec
and
aad
out
xchg
mov
std
inc
mov
mov
lods
out
or
jns
mov
mov
mov
jae
mov
or
jg
outsl
pop
incb
push
mov
pop
leave
xor
inc
ret
ja
in
test
push
push
scas
outsl
and
mov
int
stc
sub
stos
sbb
repz
dec
xchg
or
or
cmp
imul
icebp
sub
or
xor
in
dec
mov
ret
dec
dec
pop
xchg
mov
adc
sub
push
in
ffree
andl
adc
jg
inc
adc
dec
mov
mov
cmp
test
push
mov
out
clc
in
mov
stos
in
leave
sbb
stos
adc
mov
call
mov
xchg
mov
sub
xchg
mov
mov
sub
dec
xor
jae
stos
inc
shlb
pop
cmp
xlat
mov
push
icebp
inc
mov
and
and
sub
sbb
pop
push
mov
xchg
and
inc
orl
jmp
popf
pop
cmp
lods
nop
fcomp
fists
xchg
mov
push
pop
xchg
jnp
jecxz
add
mov
bound
inc
lcall
or
pop
sub
mov
xlat
inc
adc
hlt
je
sub
xor
fdivr
cmp
push
popl
cmp
jno
les
in
cld
or
mov
push
ret
scas
xor
or
cltd
add
aas
adc
out
sbb
leave
push
dec
xchg
loop
test
dec
push
or
pop
loop
cmp
mov
lock
push
insl
into
outsb
clc
out
jno
idivb
mov
pop
dec
or
xchg
loopne
jmp
scas
sub
dec
nop
mov
or
and
ja
pop
add
pop
sub
mov
sub
dec
mov
lds
cmc
mov
fcomi
daa
dec
push
sti
or
or
or
push
add
push
cmp
sahf
mov
push
shl
xchg
sub
loopw
fnstsw
or
add
mov
mov
mov
jg
ljmp
or
test
hlt
movlps
push
repz
in
inc
out
stos
mov
sbb
sbb
movsl
mov
mov
std
out
pop
xchg
jns
scas
sbb
dec
idivb
sub
std
xchg
shll
sbb
mov
mov
outsb
stc
lret
test
xchg
add
icebp
mov
xor
sbb
cmp
mov
pop
daa
dec
into
aad
aaa
sub
sahf
pop
ret
dec
std
jns
lock
outsb
sbb
jmp
pop
adc
xchg
repz
mov
sub
mov
repz
jns
sbb
xlat
jae
in
fdivrl
rcr
testb
call
adc
mov
test
rcrl
push
jp
jno
sarl
sbb
sbb
mov
cli
pop
mov
mov
inc
jae
in
lret
sti
push
xchg
xchg
and
xchg
jmp
sub
lods
pop
mov
push
adcl
das
push
stc
pop
xor
lret
pop
lret
mov
sbb
test
mov
repnz
ret
testb
mov
int
cli
cs
repnz
shlb
adc
xchg
das
mov
push
sub
decl
stos
jge
and
inc
and
mov
lods
cmpsb
imul
inc
stc
popf
push
jmp
repz
andl
dec
cmp
lcall
mov
dec
mov
clc
das
xor
xor
mov
dec
lea
add
dec
mov
jbe
cmp
ret
mov
fs
call
mov
cltd
loop
jne
movb
dec
mov
xor
add
pop
fs
movsl
pop
jle
fisttps
pop
jno
pop
outsl
push
jp
push
dec
fidivrs
loope
mov
sbb
fsubrl
lret
idiv
cli
outsl
pop
push
inc
and
je
sahf
clc
int
sub
mov
fstps
es
data16
pushf
adc
sbb
push
lods
jno
jns
pusha
sti
or
popa
pop
jmp
add
sub
es
or
scas
cmp
pop
jno
and
in
mov
lcall
iret
shlb
and
aam
pop
cld
xor
and
adc
out
mov
cmp
push
aas
dec
or
mov
sbb
push
lods
xchg
aad
stc
outsl
jmp
ficoms
andl
lock
mov
cmp
popf
inc
mov
lcall
push
push
pop
or
sbb
loop
fdivl
dec
mov
mov
out
lea
int
dec
cld
bswap
pop
hlt
push
sub
cmp
and
mov
jg
addl
mov
xlat
and
sahf
pop
sahf
or
sbb
lea
adc
or
or
cltd
xchg
in
enter
aas
inc
lahf
rcr
jle
pop
pusha
out
push
dec
sub
dec
aam
cmpsl
jb
push
dec
fsts
ds
pop
push
pop
mov
rclb
das
add
jbe
add
cmp
clc
adc
aad
inc
popa
push
in
adc
mov
sbb
jmp
repnz
pushf
inc
jmp
sahf
dec
mov
test
out
inc
lock
pop
ss
iret
push
call
cmovns
scas
mov
ficompl
sub
cmp
dec
jmp
cld
push
in
pop
sar
fadds
xor
data16
cwtl
lcall
in
flds
push
add
loopne
jg
push
xor
scas
cmp
add
push
inc
sub
sub
icebp
stc
jb
in
mov
push
arpl
fildl
adc
xor
sub
cs
pop
popf
rolb
mov
push
mov
pop
test
shlb
adc
cmp
pop
loope
out
andl
adc
in
sti
pop
dec
loope
fidivs
fwait
xor
pop
cmp
xor
and
mov
rolb
insb
mov
sub
jl
and
jle
nop
mov
jnp
lea
pushf
push
jg
test
jne
dec
filds
scas
add
inc
inc
jb
push
repz
popa
aad
pop
in
test
in
xchg
loope
cmpsl
out
mov
rcrb
mov
dec
or
repnz
and
mov
shll
gs
adc
jge
sub
test
jbe
jns
lret
icebp
sub
pushf
and
int3
repz
mov
mov
xor
adc
and
sbb
push
mov
add
jecxz
add
xor
xchg
out
shll
adc
repz
mov
test
push
adc
xchg
scas
or
mov
mov
arpl
test
pop
mov
aaa
cmp
push
in
jmp
data16
dec
jge
outsb
rcrl
daa
aad
ljmp
scas
enter
sahf
pop
xchg
jb
popa
data16
out
sahf
testb
mov
sub
lret
xchg
in
lret
xor
loopne
lods
in
aas
mov
shl
pushl
inc
cmp
cmc
rclb
and
aam
sahf
mov
pop
lcall
mov
push
sbb
pop
jne
mov
mov
adc
jae
and
xchg
mov
std
int3
pop
sub
jns
lea
add
push
pop
and
das
gs
out
pop
out
adc
push
push
fisubs
or
jbe
adc
xor
cmp
mov
or
es
je
insl
and
jmp
mov
lds
mull
mov
cmp
push
mov
testb
or
xchg
dec
dec
jg
pop
lahf
xor
mov
popa
orb
or
cmp
aad
mov
cs
nop
sub
pop
fwait
dec
xchg
cmp
mov
out
shll
call
adc
fwait
in
stc
adcl
inc
mov
add
add
cmp
mov
adc
jp
cmpb
mov
dec
pop
std
adc
test
xchg
insb
mov
lret
dec
lret
cmp
xor
sti
repnz
pusha
sarl
and
pop
lea
pop
push
add
in
outsl
or
push
and
mov
sahf
jo
mov
imull
test
jo
jbe
jno
mov
jp
xchg
pop
fsts
jbe
int
enter
cmp
mov
and
test
dec
inc
ret
js
sub
scas
fidivrs
inc
sbb
jne
jle
add
sub
push
fadds
dec
xor
ja
outsl
xchg
shll
stos
and
leave
xchg
in
inc
mov
pop
inc
jp
bound
js
aas
jmp
or
out
in
adcb
testl
xor
loop
test
ret
jns
popa
and
inc
jo
jb
ficompl
lea
ffreep
adc
sub
cmp
negb
push
pop
or
loop
mov
mov
std
mov
mov
sbb
ja
repnz
into
filds
popa
sbbb
inc
std
fists
scas
icebp
sbbb
lods
rolb
mov
test
pop
pop
add
imul
sbb
mov
mov
adc
incb
jmp
sub
add
dec
fistpl
rorl
xchg
mov
ret
mov
addr16
or
fiaddl
clc
imul
xor
mov
mov
shr
mov
cmp
mov
aad
mov
xchg
xor
or
iret
pop
repz
fiadds
lock
fucomip
add
out
rcll
popf
xchg
outsl
and
and
ds
push
push
rorb
outsl
mov
xor
inc
add
or
fnstenv
popa
xchg
inc
mov
aam
stos
mov
xchg
push
xchg
sbb
outsb
sahf
sub
addr16
cld
pop
in
stos
or
push
sbb
inc
mov
js
popa
inc
dec
stos
jb
rcr
shl
mov
or
negb
mov
jne
xchg
call
imul
cmpsb
fwait
aas
clc
test
mov
movsb
bound
aad
aaa
mov
jne
ficomps
fwait
int3
mov
sub
rolb
sbb
or
cmp
enter
rclb
sub
js
insb
fwait
adcl
and
cld
daa
push
mov
cmp
shll
aam
lret
xchg
out
movsl
or
cmp
xor
int
sub
xor
push
cld
add
mov
lods
mov
ljmp
inc
incl
mov
lret
jg
xchg
test
aad
sbb
sbb
cmp
enter
and
ljmp
scas
inc
mov
jae
adcl
mov
xchg
push
push
je
mov
stos
movsb
fcmovnbe
push
jmp
jg
xchg
out
daa
mov
popa
or
fcoml
mov
dec
mov
add
lret
mov
add
insl
cld
xlat
mov
mov
insb
aas
mov
jns
sub
xchg
stc
cmp
xor
add
jo
repnz
cmp
jb
sbb
outsb
aad
movsl
push
pop
imul
cwtl
mov
fsubs
xor
adc
push
xchg
je
xchg
scas
dec
push
cmp
or
ja
pusha
add
les
imul
out
push
aad
push
fwait
jno
sbb
dec
fildll
jl
adc
stos
xor
int
js
fisubs
mov
mov
outsb
sub
movsb
mov
out
xlat
push
or
mov
aas
adc
aaa
mov
xchg
mov
jl
fistl
aaa
mov
clc
nop
lcall
sub
push
xor
out
lods
lods
mov
xor
sahf
test
mov
inc
sbb
mov
ret
lret
dec
add
pop
inc
pop
imul
ds
push
jecxz
jg
cltd
pop
lock
rclb
dec
sub
cmpsb
pop
fidivs
jecxz
ret
and
sti
fimuls
jl
fwait
mov
jbe
and
scas
and
les
jge
loop
int3
adcb
jecxz
fists
xchg
pop
fsubl
imul
dec
sbb
sub
sbb
adc
jb
mov
adcb
dec
xchg
xchg
jae
arpl
gs
je
dec
jo
movsl
out
mov
inc
sbb
ficoml
pop
out
cmp
sub
mov
inc
pop
xor
in
xor
xor
mov
xchg
les
mov
in
sub
fildll
push
cmp
push
mov
mov
jns
xchg
mov
xchg
adc
pop
jae
jno
xchg
ret
adc
imull
pop
ja
flds
lea
lret
mov
sub
dec
mov
pop
inc
dec
and
adc
ret
mov
outsb
jno,pt
scas
jb
add
fcmove
movsb
jns
hlt
fisubrs
jp
pushf
movsl
mov
shll
bound
mov
bound
xor
cmp
pusha
mov
test
sbb
out
push
mov
dec
movsl
push
ljmp
xchg
mov
mov
pop
lcall
mov
pop
jmp
cmp
mov
sub
rolb
fstl
fdivr
sub
fstpl
and
xchg
jbe
and
rolb
mov
jnp
dec
test
movsb
arpl
ja
mov
hlt
xor
int3
jnp
push
js
jl
subps
push
push
movsl
sti
test
jg
mov
jl
and
aas
ja
mov
test
ret
jmp
add
testl
nop
push
repz
popa
les
gs
or
ljmp
in
pop
cli
sub
mov
jae
jmp
andb
out
jae
negb
sub
dec
xorps
push
pop
lods
jmp
fiadds
lcall
mov
test
les
insb
adc
mov
jmp
addr16
lods
xor
imul
push
sbb
xchg
mov
xchg
sub
jmp
push
pop
mov
in
push
mov
or
std
and
push
push
lcall
push
imul
arpl
sarl
mov
nop
call
mov
mov
add
cmp
rcrb
call
std
out
ljmp
inc
sbb
outsb
pop
mov
push
xor
or
add
aam
xchg
dec
mov
cmpsl
jb
fbld
pop
stc
fisubs
iret
aad
cltd
pushl
stos
les
cwtl
cs
outsl
xchg
xchg
cmp
dec
out
jge
in
arpl
mov
cmp
inc
das
sbb
mov
and
pop
lds
push
pop
mov
mov
inc
sbb
xor
push
xchg
rorl
int3
imul
flds
inc
mov
js
shlb
sahf
scas
mov
fsubl
mov
push
mov
testb
ret
adc
out
movb
cltd
cmp
cltd
mov
fbld
push
push
outsl
xchg
ljmp
xchg
mov
popa
jmp
xchg
adc
mov
lret
pushf
cmpsl
das
jbe
mov
jmp
inc
pop
rorl
mov
aad
sub
rcl
aaa
dec
and
sahf
dec
sub
sbbb
lret
xor
adc
dec
mov
ja
mov
jecxz
orw
xchg
rcll
sahf
mov
jnp
cs
ret
jle
sbb
xchg
or
rcl
jo
rorl
and
fwait
push
es
add
or
movsl
icebp
movsl
inc
out
and
mov
getsec
imul
adc
sub
idiv
out
enter
jnp
jecxz
push
call
jg
inc
pop
xchg
test
int3
loopne
push
mov
mov
data16
dec
dec
scas
xor
movsl
pop
out
mov
mov
shl
mov
dec
push
call
inc
xchg
mov
das
aas
cs
out
scas
jne
mov
jle
test
push
inc
popf
mov
in
and
xchg
out
mov
js
leave
jb
rorb
xor
pop
adc
jg
cmp
incb
adc
subb
ss
ds
fdivl
pop
shl
popf
enter
ret
rolb
scas
rep
mov
shrb
fldcw
insl
push
sub
mov
xor
test
push
test
shlb
cld
insb
jae
cld
xchg
iret
shll
mov
push
push
hlt
xchg
xchg
xchg
dec
and
popf
std
sub
daa
xchg
jno
xchg
loopne
jl
xlat
cmp
fwait
mov
cmp
ret
insl
mov
mov
xorb
pop
pop
push
jo
jmp
or
and
xchg
sub
and
jno
inc
push
push
cwtl
das
adc
and
test
out
popa
inc
clc
outsl
sbb
fwait
push
test
cli
mov
jns
xor
fucomip
mov
jmp
fidivrl
imul
ds
fcoml
and
repz
lea
jns
xor
adc
je
loope
test
lcall
cltd
hlt
shll
test
addl
and
and
xor
cmp
and
mov
mov
movsb
jp,pn
cltd
cmp
mov
mov
das
stos
mov
and
ds
test
add
inc
mov
leave
es
xchg
rcrb
or
mov
jnp
xchg
sbb
cli
xchg
add
sub
leave
mov
fistpll
cmp
movsl
push
out
mov
mov
adc
insb
sbb
dec
lds
je
and
push
scas
or
ljmp
xchg
jecxz
sbb
jne
rcll
lret
inc
mov
stos
and
dec
adc
adc
adc
mov
cmp
dec
and
daa
mov
movsb
pop
mov
stc
dec
xlat
mov
repnz
push
test
stos
hlt
test
neg
jne
imul
sub
add
jge
sub
aam
cmpsb
jp
imul
pop
ss
xchg
and
xchg
sbb
cmc
imull
ret
push
scas
aam
or
fchs
mov
or
sbb
je
mov
add
leave
mov
xlat
push
mov
fidivs
cmp
xor
test
mov
pop
xchg
xchg
mov
mov
add
filds
or
dec
out
jno
and
das
and
push
stc
push
mov
stc
pop
sbb
mov
pushf
loopne
repz
xor
loopne
call
push
pop
push
sub
and
pop
push
jne
jb
outsb
mov
test
imul
loopne
out
and
push
xchg
repnz
aad
xor
pop
fdiv
mov
jp
gs
pop
pop
adc
sbb
mov
add
and
imul
out
adc
aaa
mov
push
jo
loopne
sbb
pop
inc
rcl
decb
mov
enter
scas
dec
sti
adc
aam
mov
sub
add
repnz
mov
push
mov
dec
mov
sbb
test
in
gs
insb
jns
enter
in
sub
dec
pop
out
add
addr16
xchg
lock
stos
fdivr
inc
cmpsb
sub
xchg
xor
cld
stos
sub
inc
outsl
pop
cmp
fisubrl
jno
fdivr
pop
jge
mov
fimull
add
incl
je
mov
add
add
dec
sub
jg
hlt
dec
nop
movsb
in
jmp
dec
arpl
mov
cmp
aas
aad
or
mov
mov
dec
insl
fcoml
sbb
test
push
iret
mov
push
ja
jge
inc
or
mull
daa
add
xchg
pop
movsl
mov
outsl
inc
push
pop
xlat
rolb
adc
jae
stc
jne
mov
inc
sahf
repnz
add
push
loope
push
ljmp
lcall
dec
movsw
adc
es
mov
jge
xchg
ffree
fs
lcall
push
fdivrl
pop
stos
cwtl
scas
mov
pop
xchg
nop
mov
gs
pop
lahf
in
stos
jnp
scas
iret
lods
movsl
xchg
mov
xchg
scas
mov
xor
imul
stos
xchg
sbb
add
int3
dec
dec
popf
xorb
add
out
adc
jle
out
jbe,pt
les
lods
pop
cltd
int3
fs
das
js
xchg
push
jmp
in
es
push
cmpsl
addr16
outsb
mov
mov
jbe
out
test
lret
and
adc
orl
ljmp
xor
xor
mov
xor
movsb
mov
dec
push
mov
hlt
xorb
jmp
inc
mov
fcomps
mov
pop
lret
mov
jno
dec
add
fucomp
imul
dec
in
cmp
hlt
rcl
xchg
fidivrl
sbb
mov
shll
idivl
or
int
and
divl
iret
nop
or
mov
add
or
sbb
pop
jecxz
push
arpl
ret
cltd
mov
rorl
xchg
push
inc
fstl
jle
mov
orl
outsl
push
scas
stc
stos
jnp
mov
sub
mull
sub
int3
lea
push
aad
test
in
andl
shr
bound
sarb
pop
dec
mov
adc
push
cmp
mov
mov
loopne
andb
mov
cld
mov
ja
mov
and
dec
xchg
adc
fidivrs
xchg
push
dec
mov
clc
jb
mov
popf
icebp
pop
js
cmpsl
lret
cmp
pushf
jnp
les
sbb
pop
lret
mov
xlat
nop
mov
aad
fsts
pop
mov
daa
mov
sub
push
mov
loope
pop
cmpsb
pushf
sub
xorl
repnz
push
adc
addb
mov
mov
cmp
jnp
dec
leave
popa
and
pusha
or
pop
repz
je
adc
mov
jne
js
adc
outsl
popa
repz
inc
leave
xchg
mov
inc
cmp
icebp
out
leave
stc
outsb
pop
popa
xchg
jmp
xlat
loopne
xchg
push
cmc
ja
mov
sbb
call
nop
lea
mov
mov
dec
incb
inc
lods
or
or
test
inc
loop
std
sbb
and
or
push
loopne
add
pop
popa
shrl
push
add
mov
mov
sarl
testb
pop
sub
xchg
jbe,pn
sbb
mov
mov
jno
and
xchg
sbb
push
jge
add
xchg
add
push
pop
cmpsb
mov
push
sbb
dec
add
xchg
jne
add
mov
push
push
scas
in
xor
push
xchg
cmp
mov
inc
pusha
lret
gs
mov
movsl
jmp
inc
jl
aas
jp
jp
and
fsub
inc
out
dec
jl
and
xchg
jmp
das
sahf
jle
pop
add
push
mov
pop
pop
mov
sbb
inc
jne
or
rcll
aas
mov
cmpsb
jae
in
fdivrl
xchg
cmp
pop
js
add
aas
sarl
or
inc
rolb
decl
cmpsb
dec
sub
cs
cld
xorl
cld
inc
stos
fimuls
push
lods
cmpsb
dec
xchg
sarb
mov
adc
cmp
and
mov
inc
imul
fucomip
mov
pop
jl
jecxz
add
push
imul
xor
or
je
int3
cmpsl
ficompl
push
ret
out
ficomps
decl
imul
pop
pop
xchg
xor
js
jmp
mov
jg
icebp
and
mov
repz
sbbb
lcall
rcrb
mov
lcall
xchg
jmp
cs
pushl
push
xchg
or
push
sbb
je
lcall
adc
xchg
or
or
ljmp
clc
pop
loop
lcall
push
pop
push
scas
xor
sahf
jle
andb
sub
jg
xchg
xchg
sub
push
ljmp
in
fstps
fs
repz
cmp
jle
fwait
lret
sub
push
add
push
sbb
push
aam
lret
pop
pop
mov
jns
or
shl
jecxz
xchg
and
es
fwait
or
jbe
cmp
mov
enter
ljmp
mov
imul
jl
xor
mov
adc
dec
out
sahf
icebp
sbb
ds
fmull
fstpt
es
mov
fildl
dec
sub
push
mov
das
int
and
fadds
outsb
mov
std
jp
mov
addl
jecxz
inc
jmp
pop
rclb
outsb
pop
lcall
cmpsb
les
lret
leave
fwait
pop
mov
inc
mov
jecxz
out
mov
outsb
push
push
cmc
in
mov
sbb
xchg
insb
xchg
je
cwtl
jge
test
in
pop
jmp
nop
lods
xchg
pop
ret
bound
clc
push
test
shrb
mov
int
xor
loope
push
inc
fiaddl
mov
nop
dec
lds
sbb
rolb
sbb
pop
cmp
adc
push
std
adc
cwtl
stos
xchg
mov
sbb
iret
mov
cli
and
cmp
setno
mov
cli
inc
add
dec
or
push
adcl
in
psubw
sub
sub
and
enter
lods
int
mov
nop
sub
outsl
or
or
push
cmovnp
imul
lret
add
arpl
push
or
mov
jns
pop
outsb
adc
push
dec
lret
xorb
in
pop
push
or
insb
daa
cmp
cmp
mov
stos
in
dec
lods
xchg
sbb
in
xlat
inc
mov
sub
gs
inc
and
xchg
fistpl
and
ja
mov
fs
inc
repz
jp
push
fwait
and
jg
incb
push
imul
aam
push
jmp
aad
sub
xor
divl
into
and
cmc
imul
xor
sbb
pop
cld
test
popa
test
iret
push
cmp
out
inc
dec
xchg
sbb
cld
cmp
call
imulb
mov
mov
push
arpl
mov
push
das
lahf
js
notb
cmpsl
call
mov
inc
mov
add
or
jge
test
cs
pop
test
cltd
cwtl
cmpsb
addl
js
jecxz
fstp
rclb
jns
nop
aas
push
ret
out
out
movsl
addb
clc
test
data16
leave
out
test
rclb
adc
aad
fldenv
or
outsl
mov
mov
ja
mulb
loop
pop
push
stos
lcall
bound
loope
jge
fwait
add
add
and
lods
cmpsl
xorl
mov
xlat
xor
push
mov
insb
call
enter
fldcw
pextrw
xor
xorb
xlat
mov
push
mov
adc
add
sub
ds
jg
sub
idivl
adc
clc
dec
push
inc
andl
cmpb
inc
or
loopne
call
and
mov
fcomp
jb
sbb
mov
mov
jp
cld
xor
test
popa
dec
cld
nop
daa
pop
shlb
mov
mov
insb
lahf
mov
fdivr
push
cmp
xlat
out
sub
jp
aas
call
mov
in
or
mov
or
add
fisttpl
mov
lahf
repnz
subb
jae
cs
js
fsubrl
cld
push
testb
sbbl
negb
push
negb
adc
add
pop
dec
leave
push
icebp
cmp
das
lret
cmp
mov
jns
lock
lock
icebp
repz
and
rclb
jnp
imul
into
in
in
rol
or
mov
mov
xor
sbb
and
jae
jge
and
mov
mov
lcall
add
mov
sarb
dec
push
xchg
add
sub
mov
pop
jne
repnz
push
pusha
xor
loop
dec
and
aam
daa
out
test
in
xchg
and
jbe
inc
les
add
add
xor
mov
mov
leave
dec
sbb
mov
lret
xlat
lds
dec
into
cmp
jmp
enter
into
jns
enter
xchg
test
movsl
inc
clc
xchg
pop
insl
sub
ss
std
dec
subb
or
inc
mov
mov
xchg
pop
fisttpl
jno
cs
cli
mov
cmp
inc
shr
inc
or
aad
mov
inc
nop
js
std
loop
jbe
dec
add
and
inc
js
xchg
mov
ja
pusha
dec
and
add
fisubrl
cmp
xchg
dec
jmp
shlb
cmp
icebp
mov
add
lods
dec
mov
jns
aam
or
addr16
jl
adc
or
and
mov
push
add
adc
sub
mov
sub
or
lret
ret
mov
call
xchg
lds
mov
jg
adc
pop
lcall
callw
enter
iret
lock
push
xor
fdivrl
mov
lcall
or
xchg
shl
xchg
sbb
gs
sti
roll
push
imulb
rorb
decl
pop
mov
jge
or
xor
dec
stc
int3
hlt
mov
push
icebp
nopl
psllq
jecxz
push
adc
mov
inc
xchg
sbb
mov
loopne
imul
mov
push
arpl
mov
lret
aam
xchg
mov
test
mov
sub
pop
dec
and
sarb
xorl
add
lods
pop
fwait
jl
loopne
mov
push
push
xor
mov
adc
sub
sbbb
outsl
and
xor
xlat
repnz
aad
xchg
pop
xchg
movsl
adc
xor
xchg
mov
cltd
sbb
clc
and
xor
fildl
es
repnz
pop
orb
cmpsb
pop
mov
lods
rcl
fistpl
nop
add
mov
je
jecxz
push
enter
fsubs
mov
iret
in
inc
rcr
mov
adc
testl
fistps
aad
and
bound
push
popf
xor
mov
je
cmovae
jb
in
cmp
jg
mov
in
mov
out
push
in
js
das
or
dec
dec
sub
or
dec
imul
imul
out
lret
push
gs
jge
out
or
mov
mov
adc
cltd
fdiv
jne
cmp
adc
stos
test
rclb
in
sbb
and
icebp
jmp
mov
sbb
repnz
or
cltd
mov
push
jge
outsb
fidivl
jbe
inc
or
hlt
lahf
fistl
xchg
shr
push
and
xor
mov
mov
add
movsl
dec
and
mov
jns
addr16
mov
outsl
push
mov
cli
and
aas
or
or
fbld
push
xorb
int
cltd
daa
movsb
xchg
mov
in
ja
in
xlat
pop
dec
push
call
push
and
popf
xacquire
mov
and
pop
or
pop
leave
ss
jmp
cli
cmp
sbb
jae
dec
mov
sub
jp
inc
setae
icebp
jo
cwtl
sub
jle
jo
jecxz
mov
sub
std
push
inc
mov
clc
adcb
fnstcw
fistl
add
iret
push
jno
lods
xor
pop
mov
pop
jno
mov
and
lcall
mov
mov
xchg
dec
rcrl
cmp
sbb
pop
pushl
fcompl
sub
je
push
xchg
aas
test
sbb
cmc
mov
mov
sub
repz
mov
repnz
sub
xlat
test
aad
jbe
dec
mov
sbb
add
dec
and
push
jbe
ret
xor
inc
inc
repz
mov
push
pop
hlt
ljmp
mov
mov
dec
inc
or
in
mov
ds
push
xchg
xlat
ret
inc
or
hlt
push
bnd
fstpl
in
sbb
rclb
cmc
sbb
cmp
sub
loopne
imul
jmp
xchg
outsb
ss
cmp
xchg
shll
out
push
test
sti
test
rorb
cwtl
adc
ljmp
stos
cltd
cs
cs
mov
lret
movl
push
repnz
lcall
mov
xchg
loopne
addr16
pop
ds
aaa
cld
daa
sahf
in
sti
int
or
push
sarl
or
cmp
jae
sahf
fisubl
adc
call
mov
dec
sti
mov
jb
xchg
in
xchg
movsl
mov
mov
jge
stos
pusha
xchg
fcmovne
outsl
add
mov
xchg
dec
add
popa
xchg
repnz
in
lods
stos
or
dec
jg
mov
lods
stos
jle
xchg
gs
dec
or
nop
or
fwait
call
es
mov
sbb
test
pop
xor
xchg
mov
jbe
inc
add
aam
ja
pop
mov
mov
gs
aad
out
adcl
push
sub
pop
movl
ret
mov
jbe
sub
std
fildll
sarl
inc
call
lcall
adc
sbb
addr16
jae
test
je
jmp
pop
jge
pop
mov
test
add
roll
cmp
dec
and
cwtl
xchg
rorl
and
fsubs
cmpsl
icebp
jno
mov
les
mov
xchg
pop
fwait
push
inc
xchg
dec
push
repnz
push
aas
adc
dec
and
mov
test
les
loopne
test
int3
or
push
mov
sahf
jb
adc
inc
mov
pusha
lcall
cmp
fcoms
jle
stos
sub
fs
cmp
and
pop
cmpsb
xlat
mov
mov
xor
xlat
pop
mov
xor
pop
repz
pop
xor
xchg
inc
in
pop
push
mov
lahf
sahf
cli
and
xor
lret
ja
fistpl
jo
add
popa
push
shlb
pop
out
jmp
inc
mov
orb
cmc
outsl
into
push
fnstcw
addb
dec
jmp
sbb
jle
sbb
popl
mov
fsincos
push
out
test
dec
push
notl
sub
sub
aas
sbb
lret
sub
push
ljmp
mov
shrb
inc
mov
inc
fldenv
loop
lods
in
adc
div
xor
into
mull
mov
pop
pushf
mov
test
divl
std
in
inc
add
cmpsl
cmp
ds
cmp
leave
pop
add
pop
adc
push
int
or
lret
mov
inc
mov
ss
xchg
mov
cmpsb
sub
fs
std
adc
fsubl
or
lret
push
test
movsb
jbe
push
xor
push
sbb
stos
inc
cli
mov
and
clc
sahf
xchg
fwait
push
bound
jge
add
das
shrb
es
jae
or
dec
addr16
in
shrl
pop
lods
fsubr
rcrb
and
and
scas
loopne
mov
loope
fnstenv
cli
jg
jge
xchg
scas
out
dec
push
fcoms
scas
push
stc
xor
lahf
xor
push
xchg
ljmp
jmp
add
pusha
mov
popa
or
std
sbb
xchg
insl
call
adc
enter
pop
rcl
fists
test
xor
mov
push
sbb
pop
pop
movsb
ret
out
out
or
leave
mov
sub
arpl
in
push
xchg
fnstcw
loope
stos
xor
mov
dec
push
clc
or
ss
std
fwait
cmp
mov
mov
sub
daa
dec
lods
shl
and
sti
in
inc
and
imul
out
shrb
dec
leave
sbb
mov
push
outsl
sarb
mov
lahf
pop
pop
push
arpl
or
mov
mov
dec
movsl
xchg
add
test
outsl
inc
mov
xor
xor
ljmp
arpl
xor
mov
and
insl
cltd
imul
sbb
mov
push
fiadds
mov
cli
mov
rcrb
test
out
push
in
into
sub
popa
pop
dec
loop
fcom
jge
adc
enter
mov
push
cmp
sbb
fistpl
push
sub
mov
mov
rolb
push
add
sub
dec
cmp
mov
cmc
sbb
inc
sbb
jnp
pop
push
out
js
jns
dec
sbb
add
ficoml
sub
cmp
sbb
ret
xor
pop
jnp
jbe
push
jl
adc
bnd
sar
sarl
sbb
lock
insb
fisttpl
mov
xlat
jne
lods
in
cld
js
subb
add
pop
repz
inc
jl
inc
xchg
out
sbbb
sbb
sub
jecxz
adc
xchg
outsb
jmp
xchg
testl
xchg
imul
enter
sbb
push
jecxz
push
lret
in
jp
or
add
cmp
gs
pop
pop
push
inc
or
bound
push
outsl
xor
repnz
fists
aad
jp
jle
pop
sbb
clc
fdivr
pop
add
or
rolb
mov
popa
dec
sub
xorl
or
je
je
popa
push
cmp
sbb
lock
call
adc
stc
add
stc
or
xchg
das
ds
mov
iret
push
cld
mov
push
out
mov
popf
sbb
insb
push
pop
pusha
cmpl
out
cmp
cmpsl
mov
and
cs
lea
sbb
jle
mov
mov
adc
sub
daa
decl
or
xor
outsl
add
mov
sub
mov
repnz
rcrl
rorb
xchg
gs
pop
daa
pop
gs
dec
ljmp
mov
or
jmp
and
out
loopne
lods
dec
repz
in
jp
pop
and
aam
es
aam
cmp
movsb
jmp
mov
sub
jp
stos
fistpll
add
lock
jmp
lahf
xor
stc
and
mov
sarb
inc
push
out
repnz
pop
lods
jb
lea
loop
sub
test
fs
insb
frstor
cmpsb
mov
pop
nop
out
shll
rcr
xlat
bound
mov
xor
pop
aaa
aas
sti
sahf
fstpl
js
pop
movsb
das
in
in
jnp
inc
push
mov
out
push
dec
aam
dec
mov
cmpl
mov
jp
sarb
out
ret
jecxz
mov
mov
repnz
orl
xlat
sbb
mov
jg
clc
push
push
hlt
sub
adc
cmp
lcall
popa
mov
mov
sbb
jb
movb
repz
xchg
or
dec
fisubl
jo
pusha
in
aam
lahf
out
jo
mov
ret
add
iret
gs
mov
sub
adc
loop
fnstenv
ja
sbb
int3
push
daa
imul
inc
mov
mov
popa
bound
pusha
mov
pop
popf
sub
sarb
xor
mov
ds
adc
push
repnz
mov
or
lret
inc
sarb
mov
xchg
data16
pop
inc
xchg
lods
movsl
sub
hlt
sub
xchg
loope
cmp
mov
mov
imul
fsubs
insb
ljmp
pop
or
movsl
pushl
pop
lods
mov
or
call
movsl
xor
cli
dec
jp
and
or
pop
push
iret
dec
adc
ja
enter
xchg
xor
push
iret
bound
jne
pop
pop
mov
push
cmpsl
push
jl
xchg
aas
xlat
xchg
mov
mov
jg
js
into
inc
pop
fs
pop
cs
out
dec
movsl
cmp
pop
and
test
js
mov
push
and
shl
inc
and
jbe
push
pusha
sub
movsl
in
mov
inc
cld
imul
cmpsl
popa
xor
fs
xchg
imul
dec
mov
lret
jmp
lret
scas
sbb
outsl
loope
dec
inc
aam
push
out
and
inc
mov
mov
pop
pop
jecxz
push
jae
adc
push
movsb
mov
mov
movl
cli
outsl
andl
inc
sub
outsl
sbb
mov
push
sub
fs
push
xor
cmpsl
pop
out
mov
ss
inc
dec
jnp
push
popf
cmpb
pop
sti
pop
aaa
mov
test
scas
fcoms
pop
daa
xchg
dec
and
js
les
nop
sub
dec
xchg
inc
lods
or
mov
cmp
scas
pushf
mov
jp
fisubs
pusha
dec
mov
popf
xchg
mov
cmpsb
ret
adc
adc
lds
fcompl
mov
test
leave
mov
jmp
test
rclb
push
cmp
jge
mov
ds
mov
sar
mov
pop
in
sbb
outsl
xchg
popa
bound
push
push
sarl
adc
inc
jb
add
into
dec
pop
rcr
and
xor
shll
inc
mov
clc
xlat
insb
push
cs
pop
lcall
or
call
hlt
iret
adc
and
pop
inc
outsl
pop
mov
mov
dec
sbb
ds
mov
or
out
jb
mov
popa
mov
in
leave
mov
mov
xchg
cmp
lahf
stos
xor
addr16
fsub
push
push
cmp
hlt
and
inc
cmp
fistpl
int3
add
lret
sub
adc
cmp
dec
in
popf
es
xor
ds
out
or
pop
ss
xor
and
out
hlt
jge
or
ret
in
dec
ljmp
xor
dec
sahf
cli
pop
imul
fildll
data16
sub
das
xchg
or
jnp
xchg
mov
mov
cmp
adc
adc
pop
fidivrl
inc
aaa
mov
clc
jbe
mov
or
mov
sub
xor
cmpsl
test
inc
mov
pop
iret
cmc
popf
jno
fimull
les
dec
mov
adc
and
repz
daa
ja
xor
cmp
roll
jnp
adc
lods
lea
cmp
pop
int
imul
cmpsb
xor
mov
cmp
arpl
add
jmp
cltd
mov
addl
adc
jmp
dec
and
iret
icebp
int3
sbb
sub
mov
dec
mov
out
std
sbb
clc
cmp
add
mov
sti
pop
out
fistpll
lods
arpl
test
adc
int
add
hlt
dec
dec
fisubrl
js
push
sti
pop
push
mov
mov
push
or
fdivs
xor
xlat
pop
loop
pushf
sbb
clc
xchg
push
fiaddl
cld
ret
mov
das
cmp
xor
sub
enter
shrl
inc
add
inc
jecxz
cwtl
sbb
out
enter
pop
aad
aas
out
pop
fs
xchg
pop
in
xchg
in
cmp
test
mov
mov
jle
iret
push
lret
push
pop
enter
jge
movsb
dec
jge
add
mov
lock
pusha
pop
mov
inc
jb
lods
jnp
jnp
jbe
xor
inc
pop
out
rol
ret
xor
insl
ss
add
and
test
fsts
adc
inc
popa
jg,pt
mov
rcrb
sbbl
pusha
daa
popf
rcll
les
xchg
mov
leave
inc
pop
sbbb
mov
push
pop
loop
xor
mov
and
scas
sbb
and
mov
shll
pop
sub
dec
sub
add
add
sub
jmp
dec
xchg
daa
and
lret
or
nop
ret
hlt
push
mov
mov
js
stos
and
pop
es
dec
call
mov
push
jno
lods
test
dec
dec
push
aad
cmpsb
loope
and
ficoms
adc
jle
jmp
lcall
punpckhwd
xchg
loopne
mov
sbb
insb
enter
or
mov
add
xor
loopne
cmpsl
fdivrl
push
sti
stos
lock
xor
dec
cmp
fadd
fbld
mov
or
shll
test
out
scas
or
mov
addr16
dec
add
or
bswap
jl
xchg
ret
ds
gs
mov
test
in
pop
xchg
outsb
mov
loop
insb
bound
xor
les
inc
push
mov
mov
sub
jb
out
jp
xchg
add
les
fwait
cmpsl
mov
ret
lods
rcll
enter
andb
dec
mov
lret
cmp
dec
mov
insb
cmp
push
cmp
jns
adc
or
cmc
add
andb
outsb
out
sub
mov
add
xchg
cmp
out
cld
pop
std
repnz
leave
xor
cld
pusha
add
cmp
shlb
out
mov
xchg
test
fwait
jb
lahf
xchg
shll
call
xor
clc
cmpsb
out
pop
shlb
pop
stos
ds
or
and
pop
xor
std
dec
xlat
insl
bound
in
out
sahf
sub
push
cmpsb
mov
adc
xchg
out
mov
aam
adc
sti
adc
lahf
fs
repz
sbb
dec
les
jns
inc
sbb
xchg
mov
lods
pusha
ja
int
jle
nop
cs
cli
pop
pop
aam
jno
addb
fldenv
cmp
xchg
pop
out
icebp
repnz
jbe,pt
mov
fsts
cmp
movsl
and
rcll
sub
cwtl
push
stos
dec
clc
popa
out
in
rorl
cmp
jnp
sub
adc
pop
out
repz
lods
jl
or
mov
cs
xor
shrl
mov
loope
pop
jb
jbe
and
push
xorl
stos
cs
dec
jb
xchg
cmc
jl
fidivl
shl
sarl
mov
and
lcall
mov
jl
bound
lea
jnp
push
call
pop
loop
ret
mov
and
bound
inc
jno
xor
gs
js
std
or
bound
std
push
sbb
fbstp
ja
and
shrb
inc
xchg
sti
dec
mulb
enter
jl
push
fucomi
sbb
mov
mov
dec
ljmp
fisttpl
stos
jle
iret
dec
jg
insl
push
jge
sub
cs
push
das
adc
sahf
mov
mov
pop
in
mov
sti
and
dec
mov
or
mov
fiadds
mov
out
and
and
neg
and
xor
push
mov
or
rcrb
pop
ret
adcb
xor
insl
cld
cmp
sbb
insb
sub
push
cmpsb
and
neg
dec
mov
cltd
push
mov
test
and
jmp
flds
add
test
add
adc
pop
mov
repz
push
lds
dec
fcmovu
xor
pop
pop
mov
int
in
pusha
imul
jle
mov
icebp
mov
push
or
cmp
add
mov
mov
mov
gs
pop
push
lock
loop
fildll
mov
dec
jbe
std
out
nop
cs
das
sub
jo
xchg
push
push
pop
js
lods
mov
shl
inc
jbe
cmp
cmp
popf
cmp
out
js
rorb
shl
mov
int
dec
inc
cwtl
pop
mov
and
mov
test
dec
mov
jg
xor
xor
jecxz
shlb
jge
pop
push
and
inc
and
popf
rcr
add
or
xchg
ds
aad
inc
shl
sub
notb
sarl
hlt
mov
cmp
pop
iret
inc
mov
adc
pop
das
lock
pop
scas
and
or
fldcw
imul
jle
push
daa
addr16
mov
xor
lret
pop
cld
cmp
outsb
popa
push
dec
mov
in
lock
fcompl
pop
dec
adc
js
test
stos
xchg
mov
aaa
int3
jbe
pusha
and
leave
icebp
xchg
pop
fnstsw
xor
ss
out
insl
sbb
ljmp
aad
push
push
jns
lds
sbb
push
popa
int3
adc
dec
xor
or
int
push
idivb
inc
xchg
pop
mov
outsl
lock
push
cmpsb
lcall
repz
add
mov
adc
ss
pop
adc
ret
addr16
test
vcvtpd2ps
adc
repnz
into
mov
popf
out
mov
jbe
aad
mov
shrl
sti
fistl
dec
adc
icebp
mov
outsb
and
pop
sub
mov
dec
inc
mov
mov
sub
std
into
or
sub
scas
push
inc
icebp
int3
mov
inc
sub
fnsave
mov
icebp
sub
cli
pop
es
loop
sub
xchg
jmp
fs
inc
movsb
lock
repz
es
xor
fidivrs
sbb
mov
into
clc
cwtl
mov
dec
cmp
lcall
inc
sti
daa
xor
pop
cmc
ret
sbb
fisubs
xchg
push
adc
les
push
sub
cmc
lods
ret
xchg
mov
cmp
add
jl
jae
mov
notl
lock
stc
pop
mov
imul
mov
sbb
cmp
dec
or
mov
jmp
sti
add
sub
xor
repz
inc
clc
pusha
mov
pop
cmpl
test
xor
jne
stc
cld
sahf
fistpll
into
fdivrs
insl
xchg
dec
lahf
add
andb
insl
cmp
in
pop
cmp
push
cltd
push
fs
inc
filds
jmp
test
lret
roll
sub
sarl
cs
pop
or
test
pop
scas
in
lcall
mov
pushf
out
jecxz
leave
adc
vpunpcklqdq
stc
mov
je
jle
xlat
push
test
pop
mov
mov
push
pusha
or
dec
sbb
lahf
xchg
gs
dec
jns
lods
cmc
xor
xchg
push
arpl
dec
xchg
lock
jae
rorl
jg
sub
mov
in
jg
push
sub
addr16
nop
out
mov
mov
inc
push
mov
popf
pop
insb
mov
aas
aam
cltd
leave
and
lea
push
fwait
jnp
lcall
lock
lea
or
into
or
and
dec
adc
jmp
pop
inc
sbb
lock
es
pop
jle
je
or
lods
data16
and
mov
jns
out
cmc
stc
into
mov
lods
clc
mov
jmp
cmpsl
stos
push
xchg
add
pop
rcl
andb
icebp
imul
dec
aad
sub
jne
int3
mov
jl
push
ds
sbbl
cwtl
xchg
fimuls
les
pop
push
jb
data16
stos
sub
jns
add
enter
or
faddp
imul
in
gs
cmp
push
cmp
inc
loope
dec
jne
rcr
leave
and
fcomps
sub
repnz
cwtl
lds
jecxz
pop
push
out
das
cwtl
cmp
insb
cmp
or
inc
fnsave
mov
mov
ljmp
sub
sub
dec
outsl
inc
jae
jnp
addl
sbb
jne
out
sub
movsb
cs
data16
lret
mov
inc
mov
dec
adc
in
add
jge
ss
cmpsl
xchg
mov
jecxz
mov
hlt
test
add
cmc
call
mov
add
daa
add
aam
add
jp
dec
aad
aas
adc
sub
fcom
hlt
in
adc
int
mov
in
cmc
jno
adc
cmp
sub
xor
inc
xlat
inc
jle
outsb
lods
mov
call
or
fucomi
xlat
mov
insl
mov
int3
push
add
pop
xchg
xchg
lret
testb
jnp
aam
outsl
and
fstpl
arpl
sub
pop
jge
and
add
inc
cli
dec
sub
mov
and
jp
sbb
fmuls
fs
imul
and
popf
in
push
inc
outsl
mov
rolb
push
cli
bound
push
mov
popa
mov
outsl
mov
insl
and
cltd
notb
test
out
leave
inc
xor
jae
cmpsl
or
xor
xchg
icebp
mov
xor
dec
leave
scas
dec
ljmp
pop
inc
jmp
rclb
jae
outsl
xor
inc
leave
inc
je
inc
sti
mov
sbb
push
xchg
add
jmp
and
sub
movsb
int3
das
mov
cmp
add
pop
imul
lahf
repnz
lret
enter
cmp
pusha
cmp
lods
lods
xchg
push
pop
xchg
cmp
pop
or
out
mov
sti
shr
dec
cli
or
outsl
insl
or
sbb
jae
mov
fisttps
decl
scas
push
xchg
adc
faddp
fcmovnbe
jge
and
and
lods
stos
rcll
pop
lds
sbb
pop
mov
lods
iret
cmp
inc
jae
cltd
stos
mov
xor
orl
mov
icebp
lret
push
mov
movsl
push
sub
popf
nop
dec
rorb
iret
push
out
inc
out
jno
mov
mov
sarl
push
jo
push
push
add
inc
mov
test
sub
out
pushf
pusha
xchg
jle
addl
dec
pop
pop
jnp
push
dec
std
or
xor
add
add
and
lahf
adc
or
cmc
leave
out
push
dec
repnz
mov
bound
hlt
xchg
popa
out
jno
movsl
out
out
shll
push
xchg
or
test
push
jmp
aaa
dec
data16
push
push
scas
mov
inc
in
cmpsb
xchg
imul
mov
adc
xlat
add
out
dec
mov
xchg
aaa
js
mov
jb
mov
jle
push
popa
mov
push
adc
xor
jmp
pusha
mov
lret
xchg
pop
jno
mov
je
nop
ss
mov
imull
fmuls
xchg
lods
lods
mov
cmpsl
inc
adc
jg
inc
pop
mov
ret
push
fcmovne
ret
jecxz
cltd
pushf
into
mov
jmp
sbb
int
lcall
pop
cli
sub
sub
and
bound
jmp
and
inc
ja
xlat
sbb
dec
and
nop
in
js
in
xor
outsl
ja
and
pop
out
dec
je
jp
pusha
adc
mov
push
xlat
es
and
cltd
decl
test
fcomi
je
mov
push
shl
cmp
inc
jle
and
pop
sbb
inc
pop
and
xchg
ficoms
xor
inc
mov
push
daa
fbstp
inc
mov
in
pop
andb
adc
fnstcw
ret
arpl
inc
stos
daa
iret
icebp
pop
push
pop
fsubs
or
push
rorb
arpl
in
or
aas
xor
add
and
push
push
hlt
sbb
imul
sbbb
rorb
push
sub
pop
mov
xchg
jge
push
mov
xchg
push
xchg
pop
sub
scas
sbb
daa
daa
push
in
addl
xor
sbb
ror
jge
sahf
mov
sub
clc
into
or
inc
test
mov
test
dec
test
popa
mov
pop
jnp
mov
rorl
gs
cmc
pop
je
push
out
dec
mov
insb
push
mov
out
mov
icebp
lret
in
inc
mov
jg
aaa
pushf
test
push
and
outsb
push
ss
enter
cwtl
lret
jge
mov
shlb
xchg
out
and
cmp
add
xchg
jmp
jae
pop
push
dec
out
adc
mov
push
push
arpl
bound
and
outsb
cld
aas
mov
nop
ljmp
aas
dec
fs
pushl
jnp
stos
pop
cmpsb
jo
cmp
mov
pop
dec
aaa
mov
test
orb
xchg
xchg
lret
lea
shl
xchg
std
dec
lea
test
hlt
popa
dec
xor
push
out
mov
rcrl
into
movsl
dec
fmul
data16
negb
int3
sub
and
push
push
pop
push
iret
jnp
xor
jnp
xchg
out
mov
icebp
pop
add
xor
ret
aas
push
aas
insb
sahf
std
cmpsb
jb
ja
mov
jecxz
push
pop
aad
jbe
cmpsb
movsb
mov
shrl
and
mov
mov
or
pop
inc
insl
jno
xlat
and
mov
xchg
daa
xlat
subb
jge
pop
xchg
sub
inc
lds
das
cmpsl
cmp
xchg
push
loopne
mov
test
mov
pop
test
jnp
and
mulb
mov
dec
cmp
pop
sub
sub
ss
jae
cmpsl
sub
lcall
je
leave
or
or
inc
mov
inc
int
std
orl
lret
call
xor
add
xchg
in
pop
aam
movsb
jo
pop
ror
push
pop
jns
fsubrl
fs
or
decl
fbld
mov
push
dec
jns
loope
xor
inc
loopne
mov
repz
lock
les
loop
shlb
adc
iret
pushf
mov
insb
rcrb
pop
in
mov
xchg
push
mov
jle
xchg
jge
add
sub
loopne
and
pop
sbb
sbb
mov
or
dec
cmpsb
sub
xchg
cmp
pop
icebp
je
mov
sbb
in
dec
js
in
pusha
sbb
xchg
sub
mov
or
push
pop
pop
xlat
fsubp
or
mov
orl
sbb
dec
outsl
movsl
mov
int
insb
mov
out
and
push
cs
popa
push
pop
ljmp
pop
scas
push
clc
fisttps
xchg
mov
push
cmp
js
or
test
add
std
mov
mov
out
bound
xor
pop
test
dec
adc
fstpl
imul
xorl
outsl
mov
les
mov
or
scas
inc
pop
xchg
ja
cltd
jnp
dec
pop
mov
jnp
fidivrs
imull
cmc
xor
pusha
jl
mov
jge
cmp
push
xchg
cli
lods
jns
sub
mov
mov
shrb
call
jae
sub
subl
push
out
push
or
mov
orb
popl
idivb
outsb
lcall
movsl
xor
jno
mov
dec
pop
pop
inc
adc
inc
sub
push
sbb
out
jp
inc
aas
mov
adc
int
ja
jp
inc
xchg
jno
add
mov
outsb
dec
push
mov
leave
fwait
stos
lds
in
mov
das
aam
xor
shrb
or
inc
xor
or
pop
sarb
dec
movaps
stc
xchg
adc
jl
mov
mov
mov
pop
mov
cmpb
mov
outsl
mov
mov
add
cs
nop
dec
push
shl
test
sbb
rol
xor
fcomi
ja
or
jmp
sti
push
mov
inc
push
jb
xchg
push
fcomps
mov
dec
rorl
jg
pop
and
sbb
cmp
ret
xchg
jle
and
xor
mov
bnd
sbb
test
and
fcompl
adc
call
jno
xchg
pop
mov
xor
subb
jb
jo
gs
shll
and
pop
fcompl
jbe
scas
jne
add
hlt
adc
stc
sub
xor
mov
jns
dec
push
test
adc
stos
jo
sub
loop
cmc
and
ror
imul
xor
or
sbbl
in
dec
sub
pop
out
push
or
mov
push
xchg
or
mov
or
lcall
cmp
mov
out
andl
dec
cld
mov
xchg
xor
out
jecxz
or
lret
mov
lea
push
inc
sub
mov
scas
sub
jp
ficomps
xor
jecxz
mov
push
push
stos
mov
dec
ret
mov
pop
stc
xchg
into
mov
jle
dec
in
inc
std
xchg
aad
cltd
sbb
jge
adc
pop
add
pop
int3
mov
and
pop
movsl
or
notl
movsb
jl
in
push
test
xchg
lods
mov
cmp
jnp
pop
inc
sbbb
test
pushf
bound
jg
das
stos
or
jbe
dec
jb
idivl
push
pop
call
mov
dec
pop
inc
mov
jmp
xor
jle
push
push
pop
dec
cmp
cmc
jp
sub
adc
shrl
add
js
mov
add
std
and
testl
sbb
lds
and
adc
fcomi
cmp
push
dec
push
cs
adc
cli
sarb
fwait
sbb
adc
xlat
lret
aam
test
dec
loope
push
lret
loopne
stc
add
ja
sahf
inc
mov
clc
int3
out
loopne
ja
adc
mov
mov
adc
scas
jnp
inc
jae
mov
mov
mov
arpl
movsl
and
dec
popf
nop
sbb
ss
xchg
out
mov
in
cmp
fistps
fcomi
jns
or
dec
inc
je
gs
and
or
jmp
cmp
int
jl
ja
repz
cltd
movsb
fdivs
out
inc
shl
cli
xchg
push
loop
mov
popa
stc
xchg
incl
mov
lcall
push
sbb
sarl
aad
pop
pop
iret
repz
cmc
ret
test
sahf
cmpsl
sub
adc
and
sbb
sbb
sbb
dec
iret
jmp
mov
adcb
cli
insb
gs
les
inc
cmp
sbb
adcl
ret
and
sub
jmp
and
mov
stc
mov
cli
sbb
out
sub
or
lcall
bound
loope
popa
js
aad
push
out
xchg
push
pop
push
dec
cmp
add
aad
mov
popa
fsubrs
setae
rcl
or
in
addb
movsl
jnp
mov
cwtl
sbb
cmpsl
divl
andl
add
call
loopne
xlat
aam
insl
and
fidivrl
push
sub
loope
bound
data16
ja
dec
es
jl
add
dec
xchg
out
enter
pop
insl
adc
out
inc
addr16
sti
cmp
stc
addl
and
jns
push
and
in
stos
cmpsb
std
cmpl
add
jnp
inc
ret
mov
push
sahf
ss
or
push
std
jmp
mov
fstpt
mov
adc
ds
pushf
sub
loopne
in
aam
mov
mov
aam
ljmp
jo
xchg
data16
or
jecxz
mov
loope
shlb
add
hlt
mov
inc
jecxz
fsubs
xor
cmc
push
cmpsb
sbb
rcr
shll
cmp
mov
andl
adc
add
loopne
xor
push
mov
xor
gs
mov
mov
cwtl
sub
mov
loop
in
sub
bound
xchg
arpl
pop
and
cmpsb
mov
fwait
lahf
cli
out
jns
out
xchg
call
adc
mov
sar
loope
push
and
fiadds
inc
outsl
aad
add
push
movsl
hlt
xor
sub
ror
pop
fildl
lret
rclb
sbb
add
fdivl
cmc
pop
lret
and
xor
xchg
dec
icebp
into
mov
inc
adc
rol
cmp
fcomps
xchg
sahf
and
sti
mov
out
push
dec
pop
loope
test
xorb
out
xchg
mov
jb
xor
jmp
inc
fnstenv
lret
mov
xchg
xor
sub
jmp
rcr
test
pusha
add
push
pop
arpl
xchg
mov
pop
xor
cmp
into
clc
push
mov
int
mov
daa
jo
sub
adc
or
insl
lahf
cmp
lock
out
sub
dec
adcl
push
add
testl
orl
cwtl
aad
aas
cmp
cmp
fstl
xlat
pop
dec
fnstsw
fisubl
or
mov
xchg
popa
scas
int
sahf
and
cwtl
rcll
orb
jg
xlat
jo
addl
sbbl
call
cmpl
lcall
pushf
dec
lods
insb
rclb
stos
aad
mov
cltd
dec
fdivrl
inc
aam
pop
call
jne
int
sbb
push
add
pop
popa
pop
adc
jge
cmp
jle
divl
inc
fucom
bound
in
dec
fs
lahf
stos
shrb
jns
push
data16
inc
xor
enter
xor
mov
call
aam
or
test
les
data16
adc
mov
jle
push
es
sbb
lock
scas
aam
xchg
xor
xchg
inc
clc
xor
add
clc
out
mov
mov
jmp
test
mov
leave
push
pop
adc
sub
sbbl
mov
iret
stc
xchg
call
mov
push
jae,pn
cwtl
cmp
xchg
fisttpll
cwtl
sub
loope
fistl
imul
cmp
jne
and
add
fildll
popf
call
xchg
call
add
mov
lds
xchg
add
mov
add
jb
cmp
test
push
mov
hlt
inc
in
xchg
cmpsl
dec
xchg
repnz
repnz
es
cld
sub
cs
fnsave
jle
insl
add
jle
sub
push
push
scas
les
sti
jp
outsl
sbb
cmp
sub
jae
sbb
mov
sbb
mov
cmp
outsl
fsts
out
movsl
dec
int3
adc
xor
pop
mov
lods
sti
bound
mov
repz
bound
loopne
xor
das
std
out
outsb
mov
jmp
lea
fcomps
mov
lods
adc
rcrb
sub
xor
mov
mov
mov
cmpsb
ret
cltd
ljmp
xlat
lcall
push
push
xchg
test
cltd
mov
pop
xchg
cmp
scas
mov
xor
and
cld
fisubrl
rorb
enter
jns
sbb
ds
mov
add
movsl
clc
push
fiadds
jnp
pop
loopne
mov
fdivl
mov
cmp
sahf
popa
lcall
or
jmp
mov
push
iret
pop
roll
jmp
int
mov
dec
pop
popf
xor
mov
sbb
pushf
add
mov
and
xchg
arpl
push
xchg
outsb
orl
add
and
bound
dec
adcb
adc
jnp
pop
test
pop
sbb
jl
mov
jg
ret
dec
cmpsl
push
dec
push
jmp
push
push
push
test
or
or
fstpl
pop
pusha
dec
sahf
add
push
mov
iret
fcom
aaa
push
aaa
sarb
jg
dec
test
fwait
push
push
xchg
pop
inc
icebp
pop
fdivl
in
xchg
aas
pop
mov
xor
mov
xchg
in
dec
fs
cbtw
cld
adc
das
add
cmp
and
lahf
fdivrl
sbb
mov
repnz
imul
cmpsl
pop
cmp
jmp
adc
pop
shll
pushf
fstpt
outsb
loopne
ja
popl
adc
sub
insl
mov
loopne
ds
cmp
or
mov
inc
data16
dec
pop
fcomps
test
push
insl
mov
out
and
pop
cmc
inc
gs
mov
fdivrl
sti
push
lahf
repz
cli
or
and
sbb
cmp
sub
dec
pop
rolb
in
insb
dec
mov
push
lock
dec
cmp
outsl
bnd
inc
sub
cmp
mov
stc
lret
sub
mov
mov
dec
sbb
add
out
in
iret
or
pop
and
adc
lret
xchg
lock
bound
pop
jle
subl
sub
cmp
andl
jg
cmpsb
rcl
out
push
jg
rolb
fs
mov
adc
sbb
dec
outsl
les
or
xor
jl
fsubp
mov
in
jmp
cmp
sub
mov
lods
or
dec
push
loopne
xor
lods
data16
jg
mov
jecxz
test
cmpsb
xlat
pop
loope
clc
dec
xchg
es
pop
xchg
push
sbb
enter
push
pop
leave
shr
sbb
add
enter
aad
in
mov
and
mov
stos
inc
cli
popf
sub
add
std
pop
repz
in
sub
jg
repnz
test
pop
repz
push
aam
mov
xchg
loopne
movsb
repz
sbb
mov
jno
xor
add
mov
or
clc
in
xlat
bound
inc
xchg
mov
jns
mov
inc
xor
cli
xor
divb
xchg
or
insl
ljmp
add
jg
out
xorl
sbb
movsb
jno
lret
pop
xor
add
loopne
gs
lds
repz
sti
mov
lcall
adc
sahf
xlat
shl
cwtl
loop
fwait
out
shrb
mov
ss
push
xchg
mov
outsl
loop
xchg
fcomip
ja
repnz
inc
iret
in
mov
xchg
sub
jbe
xlat
mov
xchg
mov
adc
pop
adc
xor
jns
hlt
dec
fists
sub
mov
sub
inc
out
sub
iret
int3
mov
adc
mov
loopne
mov
ret
in
rorb
pop
mov
pop
popf
mov
mov
push
jb
icebp
jmp
mov
push
and
xorl
add
jecxz
lcall
mov
sti
jg
ret
mov
in
push
lret
out
cs
aaa
push
sahf
addb
adc
mov
inc
je
mov
enter
cmova
push
sbb
xchg
add
mov
fistpll
lods
leave
cmp
cmp
cmp
loop
jns
test
sahf
arpl
inc
adc
jmp
out
ds
pop
push
cmp
aam
and
bnd
daa
sbb
cmpsb
call
movsbl
dec
push
fbld
orl
push
pop
or
add
sti
and
push
xor
ret
sub
aas
jl
in
pushf
shrb
pop
xor
dec
adc
cltd
cmp
jecxz
lds
mov
stc
push
lock
pop
stc
jle
test
jbe
jl
fbld
shlb
subb
aad
jb
test
into
das
xchg
jb
sbb
stc
lret
fadd
jl
mov
jae
pop
lret
and
stc
and
out
out
jge
lahf
jmp
mov
aad
jb
loop
jno
xchg
vmwrite
jnp
adc
bound
mov
jl
inc
jae
add
out
dec
ret
sub
and
outsl
jne
repnz
imul
adc
dec
lods
mov
or
mov
enter
push
in
and
sahf
jne
sbbb
jae
cli
cmp
mov
sub
mov
pop
cmpsb
imul
nop
cmc
xor
jecxz
push
mov
mov
lods
loop
sti
mov
rcrb
cmpsl
push
push
sub
leave
movsb
mov
insb
sti
in
push
adc
sub
stc
xchg
setns
bnd
mov
es
inc
cmp
xchg
mov
repnz
jecxz
in
fstpt
push
mov
mov
mov
sub
jecxz
mov
jae
cld
inc
xchg
mov
fsubs
jns
adc
push
jp
sub
testl
mov
je
ljmp
fists
mov
push
xorb
jb
insl
sbb
add
faddl
push
add
jno
inc
sub
aad
in
jnp
xor
ret
xor
mov
sub
out
push
in
cmc
xchg
jcxz
and
divb
fwait
in
add
cli
jmp
outsl
sahf
das
push
jg
and
pop
rol
lcall
jae
mov
cmp
push
outsl
test
add
xchg
loope
pushl
das
enter
rcr
scas
mov
popf
ljmp
and
addr16
mov
mov
roll
mov
fsts
adc
pop
data16
inc
or
movsl
adc
pop
daa
mov
shlb
cmp
popf
mov
adc
mov
cmp
jge
int3
cmp
imul
sahf
jns
sub
push
mov
or
jns
lret
sub
cmp
or
cmp
shlb
xor
cmovne
cmp
lds
pop
enter
adc
popa
stos
and
push
jle
imul
loope
fcomi
jmp
lcall
push
fisubrl
and
dec
mov
xchg
setp
mov
dec
push
adcl
xorl
in
daa
leave
cmpsb
outsl
xchg
add
xorl
sti
outsl
or
mov
pop
or
mov
data16
jne
mov
jbe
xlat
cmp
imul
in
imul
xchg
xchg
daa
ss
sahf
xor
jno
arpl
xchg
xchg
iret
push
dec
or
pop
mov
mov
push
fbld
dec
fwait
pmulhuw
or
pop
inc
insl
push
rcrb
or
dec
push
mov
fstpt
push
jg
rcrl
jne
cmc
data16
mov
test
aam
sbb
cld
ret
out
push
popa
int3
out
sarb
adc
mov
fwait
push
xchg
xor
int3
fiaddl
xchg
dec
and
dec
jo
gs
mov
inc
nop
adc
in
out
xor
lods
lods
aam
push
arpl
push
aam
in
int3
add
cmp
jg
cli
xchg
ret
xor
push
and
sub
xchg
out
dec
pop
xor
jge
out
push
add
in
loope
jbe
inc
shl
outsb
out
mov
or
sub
push
call
loopne
ficoml
cmp
pop
pop
insb
xchg
cmp
aad
fs
jmp
stos
push
adc
test
fsts
lock
jb
daa
popa
aas
mov
in
adc
inc
inc
dec
add
iretw
fmull
rclb
sub
cmp
scas
lcall
inc
roll
push
inc
or
mov
bound
or
cmpsl
mov
pop
aaa
mov
dec
je
fwait
out
out
dec
in
mov
jbe
ljmp
and
div
sbb
popf
ljmp
inc
push
fadds
mov
ljmp
loopne
mov
sbb
push
mov
xlat
cmp
and
pop
dec
push
insb
mov
subb
and
int3
fisttps
jl
aaa
jmp
xlat
pop
faddl
sbb
push
pop
addl
popw
jl
scas
scas
es
or
js
sti
pop
xchg
mov
mov
nop
cmp
jge
icebp
jno
test
inc
adc
xlat
xchg
int
xchg
add
sbb
add
mov
inc
inc
ja
gs
push
rorb
sti
xchg
in
xor
mov
call
jae
xchg
mov
loopne
push
stos
pop
imul
mov
adc
pop
mov
jne
in
xor
ja
fstps
or
push
xor
es
jecxz
pop
mov
add
xor
call
or
dec
mov
leave
xor
sub
jmp
mov
push
sbb
iret
push
adcl
scas
jbe
dec
or
cli
jae
aam
add
xor
aas
fadds
ljmp
pop
lahf
dec
fiaddl
and
aad
rclb
mov
rcr
cmp
mov
inc
repnz
mov
mov
jle
sbb
arpl
cmp
add
das
dec
adc
arpl
loopne
das
cmp
sahf
dec
cwtl
push
push
iret
imul
out
push
rcrb
cmp
inc
dec
outsl
cwtl
scas
dec
pop
pop
cmc
clc
and
repz
mov
xor
dec
or
fisubs
cmpsl
pop
mov
sbb
jg
aas
pop
push
pop
pusha
sub
in
sub
xchg
in
xor
hlt
sub
movl
cmpsb
fsubrl
xchg
ror
int
ret
int
test
fsubrs
xchg
shlb
shll
adc
inc
loope
testl
cmpsb
daa
dec
or
in
call
inc
mov
cmpb
push
dec
pop
out
mov
mov
add
jmp
jp
cld
pop
test
and
jns
test
dec
lahf
dec
push
sbb
sub
lock
call
dec
sbb
iret
cltd
xor
or
das
aam
leave
and
mov
fwait
es
pop
outsb
mov
xchg
enter
jecxz
inc
xor
xor
ret
popf
shl
movsl
insb
outsl
xor
fwait
cmp
in
mov
pop
jl
xorl
pop
cld
test
push
jns
or
dec
loopne
movsl
pusha
arpl
or
fisubrl
ret
jg
adc
jecxz
std
js
andl
es
out
pop
adc
pop
dec
inc
mov
in
arpl
dec
syscall
mov
mov
dec
imul
lock
adc
cmpsl
jle
dec
iret
popa
scas
pop
dec
and
dec
sahf
adc
cld
rol
mov
insb
sbb
jecxz
hlt
jg
sbb
cmp
cmp
pop
subb
movsl
scas
jg
shl
dec
ret
aad
mov
int
rol
pop
in
cmpsl
fmul
hlt
movsb
mov
jne
sub
out
mov
push
mov
mov
sbb
mov
pushf
outsl
lret
out
pop
cmpl
add
sbb
insl
cmp
mov
push
xlat
aam
pop
or
adc
aam
out
aad
out
xor
xor
xchg
jae
loopne
push
sbb
inc
aas
sbb
jns
icebp
push
mov
popa
shlb
aam
xor
pop
repnz
ret
inc
out
sahf
xchg
enter
fildl
dec
push
pop
mov
iret
mov
adc
sub
mov
test
push
std
mov
cld
cmc
xchg
pop
cmpsl
dec
jbe
mov
xlat
nop
dec
fwait
sub
es
outsb
push
mov
int
insb
mov
jg
orl
mov
call
test
add
inc
adc
cli
dec
sbb
and
xor
mov
imul
fldenv
xchg
mov
stos
scas
test
sbb
sbb
pop
push
xchg
and
into
pop
inc
in
jns
jo
xor
insl
push
or
cmovg
mov
cmp
adc
aas
push
sbb
leave
scas
call
rolb
cmp
jl
add
mov
add
jns
divb
nop
inc
xchg
dec
popa
shlb
push
dec
pop
imul
jecxz
js
data16
pop
dec
dec
les
dec
cmp
punpckhbw
cmp
cmp
or
std
adc
call
sbb
jg
mov
dec
ficompl
xchg
jecxz
inc
lret
test
scas
adc
aam
les
lea
outsb
sub
mov
lods
fdivrs
and
les
mov
into
shll
loop
mov
stos
ret
call
mov
aas
jg
gs
mov
and
jp
je
mov
xorl
jg
jnp
add
cwtl
pop
and
test
imul
aas
push
jp
add
lea
inc
sub
popa
jge
out
les
and
jg,pn
xor
mov
xlat
int3
dec
popw
fmulp
rcr
test
jge
cwtl
adc
fdivrs
ret
repz
leave
into
sbb
xchg
mov
pop
in
movsb
fldl2t
sbb
xor
pop
pop
jne
shll
lock
xor
jne,pt
mov
or
bnd
movsl
shlb
stc
jns
xchg
push
scas
fbstp
push
mov
and
dec
out
test
sbb
jo
add
stc
in
clc
dec
ds
xor
and
xchg
jne
mov
jmp
call
xchg
push
std
outsb
fcoml
jmp
jnp
and
sub
movsl
fsubl
jnp
jecxz
pop
mov
popf
xor
pop
popf
cmc
and
push
enter
cmpsb
ds
xor
cmp
inc
add
and
mov
and
adc
adc
arpl
scas
pop
mov
ds
jae
and
stos
jg
fcompl
out
dec
insl
je
call
cli
dec
push
xlat
or
cmc
inc
scas
aad
shlb
xor
lods
pop
dec
mov
mov
imul
and
jge
fnstenv
jne
jnp
mov
loopew
cwtl
int3
or
push
push
scas
rcll
dec
xor
outsl
shrl
cmp
jp
out
andb
imul
pop
aaa
cltd
outsb
sbb
sub
mov
pushf
mov
push
inc
mov
add
stos
mov
notb
hlt
rcrl
or
outsb
push
and
lret
sub
lea
jle
in
xlat
adc
jge
inc
ljmp
mov
mov
mov
sub
adc
int
sbb
pop
sub
ret
test
out
testl
cmc
incb
push
adc
cmc
sub
test
ljmp
movsb
fisubrs
dec
mov
bound
es
fisttpll
test
or
mov
adc
popf
dec
cltd
sbb
das
jo
test
add
mov
es
lret
cltd
add
fwait
push
adc
scas
jbe
xor
pop
mov
jecxz
jmp
mov
sbb
lcall
outsl
adc
rorl
sbb
cmpsb
ret
fdivrl
mov
add
iret
shl
insl
aam
int
xor
jge
ljmp
cmpsl
mul
clc
adc
dec
cmc
andb
fwait
orb
jmp
lock
lods
pop
xchg
fstpl
data16
not
mov
rclb
in
adc
add
movsb
je
add
inc
fs
jge
inc
ret
dec
notl
mul
outsb
fcomps
iret
pop
mov
rcl
pop
out
ret
xor
test
push
xchg
fwait
xor
adc
sbb
ds
dec
or
xlat
or
inc
push
daa
xchg
sub
in
cld
push
je
or
je
fs
adc
and
das
scas
sahf
xor
fbld
out
fs
call
lods
sbb
rorl
mov
rep
subb
test
jnp
scas
icebp
aaa
fidivs
mov
mov
or
adc
push
cmp
mov
add
adc
aas
ds
pop
sbb
sub
bound
lcall
jne
jns
add
test
xor
and
out
dec
add
xchg
in
outsb
mov
call
clc
sbb
shlb
add
ret
cmpsl
aaa
add
mov
shlb
jmp
iret
push
push
hlt
cmpsb
testl
sbb
push
fwait
lcall
cmpsb
or
sbb
cmc
lods
jle
in
push
popa
stos
pop
jmp
addr16
lahf
cld
imul
jmp
pop
xchg
pushf
push
cmc
inc
push
sbb
js
sbb
xor
sbb
dec
outsb
inc
inc
outsl
hlt
and
aas
fistpll
push
xor
icebp
jns
inc
or
les
cs
arpl
mov
dec
mov
mov
xorl
out
pop
cmp
dec
pop
push
mov
outsl
xor
xchg
cmc
sbb
xchg
xchg
cmc
aad
dec
dec
outsb
push
stos
add
in
aam
dec
mov
es
outsb
inc
mov
insl
add
cmpsl
clc
lock
adc
inc
and
cmp
std
out
arpl
mul
and
test
shll
int3
jmp
in
loopne
push
imul
sarb
popf
and
pop
bound
pop
stc
lea
inc
dec
dec
movsl
and
je
push
pop
addr16
mov
jp
aaa
stos
pop
bound
fildl
xor
arpl
xor
js
mov
adc
sbb
xor
leave
aad
xchg
out
ljmp
pusha
mov
stos
addr16
cmp
mov
js
cmp
cltd
movsl
bnd
mov
inc
dec
fsubrl
sbb
jno
rorb
and
xchg
les
fwait
dec
push
mov
sbb
sbbl
pop
imul
out
aaa
dec
unpckhps
mov
int3
pusha
jge
aad
stc
push
lods
push
mov
pushf
inc
pop
sbb
out
cmpsl
out
je
ret
xor
call
cli
insl
jbe
xlat
jne
or
lock
loopne
lcall
test
mov
adc
jno
lret
movsl
pushf
sub
imul
mov
dec
sbbb
fcoms
rcrb
outsb
ljmp
gs
sahf
dec
imul
ret
mov
jnp
ret
and
dec
cmp
sarb
imul
inc
pop
pop
mov
in
jp
gs
xlat
aaa
mov
cld
adc
push
sub
bound
rorl
pushf
push
push
imulb
outsl
ljmp
xor
stos
cmpsl
lods
xchg
xchg
adc
mov
cli
ds
pop
mov
pop
sbb
mov
in
sbb
xchg
inc
lods
cmpsl
push
rcr
insb
cwtl
int
into
pusha
mov
outsb
clc
ja
and
and
dec
sub
rorl
iret
ds
std
aaa
imul
out
jb
mov
addb
xor
mov
and
dec
sahf
in
jmp
dec
adc
ret
jl
pusha
dec
inc
jne
leave
and
out
shr
sub
jge
xor
mov
fadds
inc
mov
and
and
cmp
sub
lods
cmp
inc
call
jb
jb
jp
add
pop
sbb
add
pop
and
scas
dec
push
push
gs
cmp
pop
lret
xchg
rolb
xor
scas
cmp
sub
frstor
sbb
fimuls
pop
jmp
sbb
inc
xor
pop
or
jb
mov
mov
add
pop
rorl
aas
xor
lods
inc
repnz
sbbb
and
mov
dec
dec
push
xorl
and
mov
fiadds
sbb
movsb
push
loope
and
or
inc
mov
pusha
ret
inc
std
inc
inc
mov
loop
das
dec
mov
pop
mov
cmp
aaa
aam
xchg
iret
sbb
mov
and
sub
and
test
mov
mov
shr
ret
xchg
mov
jg
inc
xchg
fisubl
mov
cmp
dec
mov
sub
mov
in
adc
out
pop
pop
mov
ljmp
push
mov
gs
insb
and
jns
mov
je
inc
xchg
les
dec
aam
sbb
mov
test
dec
sbb
pop
pop
push
data16
sub
les
test
rcr
dec
jbe
sbb
dec
sub
ljmp
stos
lahf
sti
loope
cmc
lods
jo
outsb
mov
pushf
shrb
out
mov
inc
inc
sbbb
addr16
sbb
mov
je
out
or
in
andb
sub
mov
lret
inc
inc
mov
cmp
inc
shll
aaa
das
mov
cmpb
adc
cmp
popl
mov
and
sarb
push
aad
rorb
xor
pop
and
add
aad
dec
imul
lds
iret
xchg
jg
sti
int3
jae
lods
xchg
pop
std
xchg
pop
inc
pand
or
inc
icebp
icebp
cld
cmp
add
cwtl
js
jne
or
jnp
dec
or
cwtl
and
dec
add
adc
add
pop
lods
repnz
mov
cmpsb
mov
mov
iret
stos
sub
xor
sbb
int
mov
cmp
dec
xchg
sbb
sub
lods
rcrb
mov
jmp
insb
addb
lock
xor
pop
dec
inc
push
loope
jne
repnz
add
ds
add
mov
cmp
mov
pop
test
dec
lret
adc
or
xchg
mov
mov
and
mov
lock
mov
dec
outsl
dec
sbb
movsb
clc
test
cltd
cmp
push
add
nop
jbe
push
sub
jo
pop
cli
ds
lcall
lea
daa
mov
mov
cltd
inc
adc
or
adc
add
das
xchg
pop
sub
pop
clc
sbbl
sti
popf
push
mov
adc
xchg
insb
xchg
dec
dec
ja
jae
dec
movsl
les
push
or
inc
or
inc
mulb
cmp
imull
into
xchg
loop
arpl
insb
inc
adc
sub
loopne
xor
cmp
sub
add
movsb
aam
flds
incl
pop
inc
sbb
es
inc
sub
mull
push
fnstsw
mov
push
dec
jp
insl
sub
fcompl
inc
dec
addr16
sub
mov
scas
xchg
stc
mov
push
jle
andl
lods
adcl
pop
pop
dec
fwait
shll
dec
sbbb
movsl
add
add
popa
ljmp
mov
fs
bound
fwait
mov
jle
mov
pushf
or
dec
lods
push
std
or
in
sub
pop
inc
push
aaa
and
fs
xlat
pop
mov
loope
arpl
xchg
pop
pop
popa
pop
fs
xchg
aas
stos
sbb
sbb
int3
neg
xchg
ja
lds
xchg
or
imul
mov
ss
orl
and
dec
js
jnp
push
leave
cmp
inc
sbb
int
push
push
dec
or
push
mov
pop
jge
dec
mov
mov
and
out
or
lock
dec
in
enter
sbbb
mov
xchg
insl
xchg
imul
mov
mov
sub
in
and
popa
adc
bound
sbb
stos
repz
dec
sub
fldenv
pop
dec
mov
push
imul
imul
mov
stos
pop
aas
cli
outsl
aas
ss
add
sahf
push
and
mov
mov
dec
or
popf
sbb
fstps
push
inc
or
mov
xchg
shlb
xor
mov
cmpsb
xor
call
sub
adc
mov
mov
int
fldenv
aaa
inc
les
add
sub
pop
push
loop
dec
xlat
xor
fstpt
subl
dec
shlb
stos
loop
mov
test
inc
jbe
pop
mov
data16
adc
sbb
xor
pushf
add
mov
xchg
filds
mov
sbb
bound
mov
sarb
mov
and
fld
int
cmp
imul
xchg
sbbb
in
xchg
and
aas
outsb
mov
addr16
add
daa
mov
dec
in
icebp
mov
imul
scas
popa
push
push
rcrb
test
inc
pop
shlb
jns
shlb
and
int3
test
jo
scas
jge
sbb
fildll
in
jecxz
mov
call
popa
add
popl
aam
inc
daa
pop
sub
testb
repnz
jg
pushf
push
xor
ficompl
movsb
loope
rclb
xor
cwtl
test
lret
mov
mov
xchg
jbe
mov
mov
fnsave
cwtl
and
dec
push
mov
sub
add
ljmp
mov
repz
jns
xchg
push
push
add
fistps
inc
in
mov
and
and
cmp
popa
cmp
cmp
js
stc
cmc
lret
sbb
loope
add
jae
fdiv
aas
or
fcmove
mov
add
and
sti
jbe
mov
leave
rolb
dec
or
ret
leave
popf
and
aas
dec
lahf
in
in
pop
mov
jg
mov
subb
and
pop
repz
in
push
stc
sbb
mov
js
xchg
dec
pop
fsub
mov
mov
sub
pop
out
mov
pop
fld
xchg
push
pop
negl
cmp
xchg
jl
in
jl
movl
aam
test
inc
or
pop
bound
sbb
dec
cmp
leave
je
inc
sub
mov
xchg
std
mov
push
and
push
or
and
fsts
cmp
push
cmp
test
inc
dec
push
pop
and
mov
inc
fcomps
test
or
std
mov
sbb
in
dec
rcl
dec
lahf
or
cmp
dec
repz
dec
mov
xor
dec
or
add
cltd
jmp
clc
xchg
mov
xchg
sub
and
xchg
or
mov
mov
or
pop
push
negb
pop
fmul
dec
mov
cmp
sbb
pushf
sbb
enter
and
jo
into
pop
stos
pop
pushf
cmp
out
lea
adc
dec
and
clc
push
mov
jecxz
int
imul
lods
jle
gs
std
loopne
jecxz
jb
xchg
adc
int3
adc
mov
inc
sub
mov
xor
negb
push
into
fidivrs
popa
add
cld
inc
xchg
rep
jns
or
xor
stos
mov
mov
mov
inc
or
dec
addr16
lock
iret
data16
in
dec
cmc
iret
mov
xchg
inc
inc
punpckhbw
int3
sti
dec
push
xlat
pop
test
mov
and
lahf
dec
mov
test
xchg
xchg
arpl
aam
pop
scas
add
add
and
xor
jno
insb
dec
cmp
inc
dec
add
out
xchg
pop
ljmp
jbe
int
aad
mov
scas
shlb
cmp
jns
mov
xor
mov
leave
int3
pop
mov
hlt
push
push
repnz
in
xchg
lods
scas
in
xor
and
test
pop
int
lcall
mov
fistpll
inc
push
mov
iret
xor
sbb
mov
xor
popl
sbb
mov
add
jnp
dec
or
fwait
jmp
mov
cmc
fnsave
testb
adc
bound
lds
mov
data16
cld
pop
negl
sbb
fldt
inc
nop
imul
add
push
mov
in
jb
jb
sub
or
mov
xchg
addb
jbe
sbb
jg
enter
int
sub
jbe
insb
outsw
and
adc
xor
ds
jno
imul
sbb
push
xlat
mov
inc
xor
dec
in
push
push
outsb
push
pop
mov
adc
fdivrl
ljmp
in
sbb
xchg
int
mov
shll
call
jmp
jno
lock
add
scas
pop
mov
sub
ret
mov
imul
cmpsl
mov
xchg
std
xor
and
adc
jl
pop
cwtl
dec
pop
rclb
jnp
sub
dec
daa
mov
pop
bound
faddl
dec
in
pop
test
lods
in
stos
adc
repnz
jno
or
sbb
push
sbb
fs
lret
adc
mov
je
adc
jmp
scas
pusha
mov
fdivrl
scas
aaa
loopne
stos
test
dec
pop
pop
xchg
out
dec
sbb
dec
mov
in
inc
lock
popf
jmp
into
push
aas
mov
cmp
xchg
fld
inc
in
push
jmp
jns
mov
jg
dec
lret
imul
or
mov
mul
xchg
add
repz
dec
pop
mov
xchg
and
iret
add
or
loope
aad
and
dec
hlt
pop
pop
ja
sti
aaa
xchg
imull
push
mov
push
add
sub
clc
sahf
xlat
or
sbbl
adc
into
scas
or
das
adc
or
stos
jl
ret
sub
jp
sbb
loop
leave
xchg
dec
jmp
aad
mov
xchg
mov
sbb
hlt
jnp
in
loop
dec
adc
sbb
fisubl
cmpsb
ds
push
cwtl
and
jecxz
jnp
adc
js
daa
les
mov
push
js
mov
sub
xor
leave
lea
adc
out
test
je
aas
cs
popf
fimuls
lds
jecxz
mov
pop
xor
ret
shrl
sub
add
sbb
pushl
mov
xor
test
dec
xchg
fdivrl
shl
jmp
push
cs
xchg
out
sbb
jge
adc
pop
xchg
sbb
lret
pop
enter
test
sbb
xchg
cmpsl
test
mov
add
imul
je
leave
cmovns
adc
xor
insb
sbb
adc
xor
push
nop
or
dec
ljmp
rolb
mov
lcall
add
out
jmp
sarl
and
arpl
mov
fidivrs
outsl
int3
xlat
inc
sbb
daa
push
ds
push
test
inc
jg
add
orl
fwait
in
sub
lret
adc
add
pop
mov
pop
lcall
sub
fisubs
mov
loope
jnp
push
pop
loope
mov
cmp
sub
cwtl
es
sub
dec
jae
adc
cltd
xor
mov
movsl
pop
xchg
loope
cs
lret
stos
and
lret
jno
enter
jge
scas
fcomp
xor
rcl
addl
cmp
ss
mov
mov
popf
js
iret
add
mov
xchg
dec
mov
lret
sub
das
stos
fmull
fildll
imulb
out
mov
outsb
mov
jmp
imul
or
jbe
rcr
dec
push
inc
jecxz
fs
dec
out
bnd
add
sbb
iret
arpl
hlt
cld
insl
fst
push
sarl
mov
pop
and
hlt
sbb
js
sub
cmp
add
lods
movsb
push
rcr
xchg
loop
orl
jmp
pop
adc
xchg
loope
push
jge
or
or
nop
scas
rcl
mov
jns
lret
push
dec
xor
out
xchg
cltd
dec
push
lret
jmp
pop
stos
int
cmpsl
cwtl
lock
mov
cmp
test
sbb
cmp
jo
or
sbb
jbe
or
ss
add
aaa
sub
sahf
nop
mov
xchg
fs
sahf
iret
push
inc
push
cmp
testl
lods
dec
xchg
negl
lret
adc
push
bound
stos
xchg
imul
sbb
gs
adc
xchg
xchg
pop
sbb
lahf
jb
shrb
or
mov
pop
insb
insl
inc
mov
mov
jmp
das
cmp
mov
lret
aas
popa
loop
ret
movsl
int
cmp
ret
xchg
loop
mov
cli
mov
call
mov
notl
popa
jnp
push
icebp
cmpb
sar
mov
movsb
jg
sbb
jb
bound
adc
pop
push
inc
mov
sahf
sub
sbb
push
rcrl
xchg
imul
cmp
shrl
push
ficoml
xchg
jb
xchg
or
shrl
addb
add
popa
and
mov
mov
aad
dec
and
popf
fisubrs
sub
jle
lret
lea
mov
dec
lcall
push
xchg
mov
pop
jge
outsb
out
jg
sbb
ficoms
sub
addr16
fstpl
jae
scas
cli
push
mov
mov
hlt
cld
fadds
add
jb
xor
or
dec
jnp
stos
test
dec
push
fildl
sbb
sub
pop
xor
cmpsl
mov
test
jns
outsl
call
movsl
push
movsl
addb
clc
jo
mov
dec
mov
mov
jecxz
ret
addr16
cmp
push
fisttps
dec
stos
adc
pushf
dec
fidivl
scas
gs
push
add
sub
jmp
sbb
outsb
dec
push
mov
mov
rcl
inc
int
xchg
ljmp
or
lock
ja
pop
loopne
loope
fwait
cmp
pop
inc
aam
je
mov
jge
ret
mov
test
and
int
jnp
cmpsl
push
rclb
lods
mov
int
push
and
sbb
or
push
orl
sahf
in
loop
sbb
dec
jmp
dec
pop
cmp
in
xchg
popf
enter
fwait
leave
call
fstl
aas
aam
scas
daa
dec
test
aad
pop
or
inc
fiaddl
daa
mov
shrl
enter
out
xchg
lea
fcmovu
cmp
dec
pop
or
pop
fsubrl
add
das
inc
mov
dec
loopne
xor
add
lock
add
dec
mov
adc
or
repnz
cmpsl
dec
mov
das
cmp
xor
lock
mov
add
js
rcrb
and
add
jl
or
test
dec
xchg
or
dec
gs
dec
adc
pop
in
push
aad
jmp
cli
cld
and
inc
mov
cmp
ret
insb
mov
rol
std
loopne
cmp
arpl
aam
pop
adc
clc
push
xor
dec
jle
ret
iret
xchg
decb
repnz
jne
cli
mov
pop
push
pop
cmpsb
jns
cmp
sbb
or
mov
mov
pusha
pop
mov
pop
clc
movsl
lea
aad
int
testb
nop
pop
sub
jo
xchg
mov
mov
jmp
adc
pop
lods
mov
out
test
or
lret
adc
dec
push
mov
in
popf
push
push
push
fsubl
insl
push
jl
jle
out
mov
pop
sub
mov
rol
xchg
adc
jmp
sbb
int3
in
imul
and
and
lret
jne
xorl
ror
mov
push
popa
pop
ds
dec
iret
or
hlt
aam
mov
mov
push
ffree
mov
clc
cwtl
out
sahf
cld
mov
cmpsl
aam
aas
fsubl
scas
mov
and
sti
adc
fnstenv
push
ja
lcall
sbbb
addb
sub
ret
lret
cmp
lea
ret
cmc
and
fadd
xor
stos
test
movsl
xlat
add
aam
adc
pop
jbe
dec
jnp
lods
fsubs
xor
sahf
pop
xor
sub
mov
push
ds
jg
xor
mov
xlat
mov
jg
lret
outsl
mov
fldcw
fisttps
pop
pop
sub
rep
imul
and
in
xlat
jmp
into
sbb
dec
mov
test
jge
daa
mov
iret
push
sti
ds
ljmp
pop
or
xor
addl
pusha
andb
lds
push
push
mov
addl
in
lock
fadds
nop
cltd
jecxz
dec
dec
push
repnz
bound
add
adc
popa
mov
push
cs
mov
jne
ss
or
mov
push
cmc
mov
jecxz
cmp
dec
insb
xchg
sbb
js
pop
out
outsb
mov
in
mov
aam
rorb
iret
adc
js
mov
aaa
pop
add
mov
daa
inc
xor
test
add
sbb
sub
mov
test
lock
dec
push
mov
stos
lahf
out
jno
xor
aad
loopne
xor
mov
ja
jnp
jge
loop
mov
testl
pop
adc
lret
or
lcall
xchg
pop
xlat
mov
fs
push
sbb
pop
cltd
fldz
outsb
mov
mov
pop
add
ljmp
fisubs
mov
neg
sub
jo
aad
cmp
inc
popa
out
outsl
insb
mov
push
or
jge
xchg
pop
sahf
pop
mov
out
fwait
add
test
mov
dec
mov
outsl
push
mov
push
decl
rcrl
or
and
lret
push
add
or
mov
or
inc
test
loopne
mov
mov
or
repnz
fcompl
add
mov
lea
imul
pushf
test
pop
lea
inc
push
jmp
mov
mov
incl
mov
pop
movsb
aad
push
jg
loopne
mov
out
and
push
ret
adc
pop
out
xchg
test
jno
stos
push
mov
cld
jmp
push
jne
push
out
jmp
mov
xchg
cmp
pop
or
fdivp
insl
lret
mov
int3
or
shr
push
mov
mov
mov
test
jmp
mov
shll
movsl
dec
cmp
inc
fcoml
sbb
sbb
hlt
push
xor
std
adc
or
xlat
sbb
pop
mov
test
xor
jecxz
add
lods
lods
lret
and
lret
mov
pop
mov
cltd
adc
lds
push
shlb
mov
fs
xchg
mov
cmp
lahf
iret
mov
mov
mov
test
pop
push
add
icebp
in
xor
inc
clc
sbb
or
xchg
sbb
movsl
in
mov
daa
movsl
fcomp
inc
jno
push
push
ljmp
xchg
add
popf
push
lcall
lcall
imul
push
sar
negl
inc
push
jmp
and
mov
and
call
xor
or
sub
jg
movsb
cmc
push
inc
xchg
inc
push
incb
cmpsl
rorl
sbb
lcall
mov
mov
cmpsb
dec
push
rorb
scas
fstpt
xor
js
mov
cmc
inc
xchg
jnp
fiaddl
xchg
dec
aas
xchg
outsl
stos
pushf
push
cmpsb
mov
pop
mov
inc
test
and
adc
sarb
mov
xor
cmpsl
mov
mov
popa
mov
adc
push
out
xor
push
fnstsw
cltd
or
inc
inc
repz
int
pop
les
pop
rcr
xchg
ja
push
adc
sti
inc
ja
pop
sbbl
sub
fsubrs
jle
loop
mov
add
insl
aaa
lahf
mov
mov
sahf
inc
push
movsb
jo
aad
aas
xorl
out
add
mov
leave
mov
and
mov
mov
mov
shl
pop
dec
int3
lods
aaa
or
jb
inc
sub
lcall
cmp
js
mov
dec
cmp
dec
ficompl
cmp
xchg
jmp
pop
sbb
movsb
int3
in
sti
in
sahf
xor
ret
xor
cmp
stos
jge
cld
jbe
testl
iret
incl
mov
stc
scas
ficomps
cmp
mov
inc
xchg
lods
je
inc
rcll
adc
inc
sub
sbb
adc
out
pop
push
int3
xchg
popf
push
pop
cwtl
mov
mov
insl
cwtl
or
insb
in
call
pop
imul
mov
int3
pop
push
cltd
dec
cmp
fdivrs
fcomi
mov
shrb
inc
popf
push
pop
movsl
fstpt
imul
mov
jg
cwtl
pop
dec
mov
pop
or
inc
or
loope
ds
xchg
fadd
rcll
lcall
xchg
lods
pusha
movl
in
jg
cs
aas
rcrl
and
popf
fadd
sbb
mov
jne
push
mov
inc
bnd
xor
mov
test
mov
pop
push
cmpsl
or
in
and
mov
inc
repnz
aaa
aas
scas
subl
int3
popa
sar
pop
lock
stos
cwtl
bound
into
sahf
jnp
clc
bound
popf
hlt
sub
xor
in
mov
lock
lcall
dec
inc
sbb
dec
and
int
daa
push
out
mov
and
rorb
int3
popf
mov
sbb
js
ds
aam
sbb
shlb
test
in
sub
jl
cwtl
icebp
or
cmp
jb
mov
xlat
push
push
in
imul
movsl
and
jmp
aaa
xchg
pop
and
dec
mov
mov
push
ret
mov
sub
jnp
fwait
mov
push
and
mov
leave
lcall
xchg
and
jecxz
xchg
testl
test
push
jae
sub
and
sub
push
adc
add
repz
cmp
xchg
pop
lds
lcall
sub
adc
adc
cmpsb
fnstsw
testl
mov
inc
arpl
popf
shlb
and
mov
push
and
jns
movsb
aad
sub
insl
mov
sbb
xchg
push
jne
push
mov
pop
notb
dec
stc
push
push
das
in
lock
cs
fwait
shrb
add
idivb
not
dec
lret
arpl
dec
jnp
mov
popf
dec
jp
loop
out
test
out
in
mov
call
sub
sbb
dec
xchg
loopne
test
adc
sub
inc
inc
aas
mov
push
call
rcr
and
inc
pop
insb
fnstenv
out
fldenv
out
pop
fidivrl
dec
fimull
jle
adc
out
imul
dec
fistps
mov
and
xor
arpl
push
ja
adc
div
jb,pn
mov
adc
jge
add
in
and
ljmp
jl
mov
pop
pop
xor
in
jbe
aad
mov
pop
lods
and
arpl
icebp
loope
dec
adc
jne
iret
sahf
push
shrb
imul
rcrl
and
lds
fidivs
mov
xor
push
xchg
stc
mov
or
ds
inc
mov
jge
lock
lea
fnstenv
jb
btsl
inc
aas
rcrl
adc
cmp
fnsave
xor
xor
mov
mov
jns
push
mov
adc
xor
gs
scas
and
testb
xchg
in
sub
jnp
int
pop
sub
push
shlb
sbb
mov
mov
cs
jge
cmp
idivb
ja
pop
fildll
sub
jns
sub
cs
data16
mov
push
push
adc
pusha
aaa
mov
in
mov
loopne
pop
mov
cwtl
or
xchg
decl
bound
cmp
pop
sbb
aaa
or
pop
jns
cmp
cmp
pop
notl
mov
movsb
lea
jecxz
xor
shll
shll
enter
je
imul
out
xor
clc
and
es
nop
loopne
fldt
sahf
cmp
aas
mov
test
or
cli
jo
aam
mov
adc
rorl
sub
or
xor
jp
clc
sbb
inc
xor
push
jnp
xor
jp
jp
inc
fs
cli
mov
mov
xor
jmp
loop
or
push
inc
sub
clc
das
enter
sbb
and
mov
sbb
push
hlt
jno
mov
pop
mov
add
mov
cmp
push
stos
pop
xor
sbb
lret
loopne
orb
lahf
in
les
mov
inc
mov
sbb
clc
inc
cli
push
or
adc
adcb
push
es
je
sbb
repnz
and
stc
pop
aas
lret
filds
sbb
int
xor
push
ret
dec
or
test
dec
fcompl
bndldx
into
leave
loope
and
sti
mov
dec
mov
lods
fistps
fisubs
mov
test
dec
jb
adc
or
je
popf
and
mov
cmpsb
bound
mov
aas
sub
xchg
sbb
pop
fs
push
idivl
xchg
add
or
call
cli
pmulhuw
inc
inc
push
std
jb
pop
fidivs
mov
add
negb
pop
shrb
mov
aad
pusha
add
jp
mov
int3
sbb
clc
inc
pop
cmp
mov
pop
mov
mov
shr
popf
jb
sub
mov
test
cmp
cmc
shl
xor
dec
sbb
push
dec
pop
sti
push
push
fidivrl
lahf
and
aas
or
fidivrl
mov
sbb
loopne
pop
stos
lock
cmp
rorb
and
push
xlat
insb
push
lret
gs
pop
or
xchg
imul
sub
push
fisubrl
imul
push
adc
dec
add
mov
mov
push
nop
mov
and
xchg
stos
test
aam
jb
imul
dec
lock
inc
add
jnp
mov
fwait
icebp
mov
ret
jnp
dec
add
test
ret
sbb
mov
push
push
xor
push
dec
pop
dec
sub
clc
jle
cmp
mov
cmp
xchg
shl
sub
xchg
shll
imul
cmp
rorb
push
jb
lock
into
jle
in
test
bound
dec
test
lret
fildll
leave
xchg
dec
push
inc
lret
rcrb
sub
aam
outsb
not
mov
and
cwtl
pop
jg
pop
sahf
out
rolb
add
icebp
cmp
rcr
scas
and
xor
mov
repz
or
pusha
push
scas
in
jmp
cs
lret
push
jns
inc
rcrb
push
mov
mov
aas
arpl
push
fscale
sbb
jmp
xchg
inc
mov
mov
add
push
andb
enter
adc
mov
fwait
inc
loopne
nop
xorb
cmc
inc
iret
add
adc
mov
add
loopne
cld
cmp
add
jo
cwtl
es
push
mov
inc
cmc
leave
icebp
push
imul
mov
xchg
cmp
lahf
loop
mov
add
cltd
sbb
inc
lods
mov
fst
or
adc
stos
ss
pop
insb
mov
fwait
pop
push
cmpsb
jecxz
das
cld
icebp
out
mov
mov
push
test
fdivrs
xchg
rcl
cwtl
addb
pop
xchg
sub
cmpsb
xchg
mov
push
jmp
lea
mov
sbb
xor
pushf
rcrl
mov
repnz
int3
hlt
das
mov
or
outsl
out
jl
pop
jecxz
xlat
adc
jns
sbbb
or
cld
testl
push
les
mov
jno
or
adc
mov
test
in
xor
enter
mov
xor
xor
fsts
data16
xorb
xchg
data16
sbb
cmp
jmp
push
and
mov
rorl
in
pop
pop
fsubp
inc
add
mov
inc
jmp
push
in
sub
xchg
out
inc
or
mov
add
sbb
out
or
jle
sti
pop
aaa
addr16
sar
rclb
jae
or
popf
sub
push
scas
mov
add
andl
cmp
bound
jecxz
mov
je
jae
maskmovq
imull
out
xor
loop
xchg
es
inc
push
sti
repz
mov
shlb
adcl
fwait
adc
pop
shlb
sub
fisubrs
negl
in
mov
dec
xor
incb
cmc
cld
lahf
add
mov
lret
sarb
jl
pop
push
adc
cmp
jno
mov
cld
lock
div
fildl
bound
jl
loopne
jb
mov
jne
daa
mov
push
mov
pop
das
cmpb
loop
xor
fnstsw
dec
and
movhps
jg
cmp
aaa
sahf
pop
lahf
addr16
outsb
fidivl
push
fcoml
stos
pop
inc
mov
imul
or
addr16
rorl
mov
repnz
lahf
out
popf
int3
je
movsb
andb
repz
pop
and
adc
xchg
jp
leave
js
sbb
in
cmpxchg
in
movsb
jmp
shll
push
or
std
push
lret
subl
decl
push
mov
jae
daa
inc
and
mov
cmp
bound
xchg
jae
ljmp
cwtl
push
lret
ret
sbb
xor
mov
pushf
movsb
sub
fisttpl
add
nop
xor
xchg
les
mov
mov
dec
sbb
shrl
cmp
dec
out
or
cld
push
outsb
ljmp
add
rol
cmpsb
daa
fidivrl
insl
push
scas
mov
push
mov
fisubrs
mov
sub
rorl
sbb
sbb
push
test
sahf
jmp
inc
pop
mov
push
pop
out
or
aam
cmp
mov
xor
mov
movsb
test
out
xchg
inc
push
add
cmp
or
sbb
jns
test
das
pop
pop
test
adc
es
sbb
sarb
nop
in
mov
shrl
cmp
and
xor
out
pop
imul
sbb
sbb
and
iret
rolb
xchg
xor
lds
sub
adc
dec
pop
lock
data16
orb
cmp
sub
add
stos
outsb
incb
sbb
iret
arpl
pop
pop
dec
aam
test
scas
xor
jge
pop
sbbl
cltd
dec
sub
out
mov
stos
mov
outsb
ss
testb
and
shrl
out
mov
push
lods
lahf
in
adc
mov
int3
pop
inc
popa
cmp
test
cmpsl
mov
dec
imul
pop
std
pop
out
pop
js
mov
sbb
popa
push
cltd
test
cvtps2pi
or
sbb
xchg
movsl
pop
or
xchg
push
cmpsb
sbb
inc
ficoms
cmp
jae
cmp
nop
pop
inc
cmpsl
dec
jge
gs
jp
mov
aad
push
and
jnp
fwait
sub
in
test
fstpt
insl
push
jno
cmpsb
rclb
shr
ja
movsl
xchg
sbbl
push
or
outsb
jae
sbb
bound
mov
xchg
pop
jne
or
inc
pop
call
in
lds
rcr
in
push
push
aad
or
test
cmp
inc
pop
sub
divb
or
xchg
push
mov
cmpsb
hlt
lods
and
jmp
mov
dec
cld
test
add
lods
jle
sbb
movsl
ror
jle
subl
nop
lret
loope
roll
test
sub
popf
dec
es
rol
out
in
hlt
in
adc
js
push
pop
mov
loopne
ljmp
addb
xor
add
mov
pop
dec
mov
mov
pop
fwait
ljmp
add
xchg
push
xchg
jle
xchg
mov
ret
sti
cli
inc
scas
sub
pop
rcrl
xchg
inc
roll
popa
xor
ret
sbb
xchg
pop
add
addr16
enter
jmp
and
inc
loop
in
inc
bound
cs
mov
cmc
lods
lds
in
lock
sbb
aad
dec
fcoms
das
aam
into
and
xchg
cmp
inc
rorl
mov
mov
push
in
sub
adc
sbbl
jge
sbb
sbb
cmp
popf
sub
adc
pushf
lea
test
lahf
adc
dec
repnz
mov
js
dec
test
xchg
cmp
lahf
adc
std
jne
cwtl
rcrl
test
push
or
mov
push
addr16
stos
mov
cwtl
sbb
into
pop
movsb
outsl
xchg
stos
or
push
neg
in
jo
inc
orl
popa
out
xchg
test
addr16
es
or
dec
int3
push
loopne
mov
enter
popa
ljmp
dec
cmp
jae
movnti
popf
testb
ds
outsl
lahf
inc
mov
ficompl
mov
out
enter
out
jbe
loope
jg
xor
loope
jmp
xchg
bound
insb
mov
xor
push
jecxz
pushw
mov
dec
icebp
or
cmp
mov
pop
add
adc
push
loope
bound
popf
mov
leave
movsb
jb
push
mov
jp
out
mov
pop
jp
into
leave
mov
fdivrs
dec
lods
push
sti
and
cmp
int
in
lret
pop
pop
insl
test
add
cli
and
xchg
movsb
jg
dec
or
mov
mov
mov
add
scas
jne
mov
fwait
mov
sahf
adc
outsl
pop
test
sbb
mov
fldenv
test
sub
mov
mov
jb
lahf
movaps
cmp
cmp
push
pop
fisubrl
sub
and
dec
pop
lods
es
dec
jae
cmp
rorb
cld
inc
dec
mov
in
hlt
test
sti
inc
jnp
jp
fstl
leave
stos
inc
shrl
jmp
fdivrs
mov
enter
mov
pop
in
aaa
mov
out
or
lods
mov
jne
cltd
jge
mov
stc
aas
push
test
push
push
pop
or
xor
out
lcall
daa
inc
lock
shrb
jge
adc
shl
cmpsl
adc
fdivs
stc
xor
loope
inc
push
scas
inc
sub
pop
jne
cmp
in
jbe
test
mov
or
mov
push
sbb
cmp
mov
lahf
cwtl
mov
jnp
fwait
mov
jge
or
cmpsl
test
movsl
lods
inc
lods
cmp
jno
imul
out
lods
aam
mov
pop
rorb
imul
cs
and
sti
lret
mov
cmpsl
push
and
cmp
ret
sbb
lea
mov
and
adc
clc
adc
xor
mov
mov
push
fdivrs
addb
mov
dec
inc
out
or
xchg
pop
jecxz
fisttpll
fwait
cmpsb
aam
stos
xchg
mov
jp
pop
cld
gs
mov
pop
cmp
sub
mov
cmp
inc
and
lods
and
sbb
sub
cltd
and
push
xchg
jae
sbb
movsb
mov
call
shrl
xor
or
mov
adc
or
push
push
ds
mov
mov
adc
in
cmp
adcl
pushf
add
mov
dec
loopne
fidivrl
sub
xor
cmpsb
push
dec
xor
cmpsb
enter
fsubl
int
lea
xor
das
add
xorb
fwait
lea
cwtl
fs
pop
sub
push
mov
xchg
jbe
stos
cli
jmp
sub
mov
ja
inc
cmpsl
fildll
leave
icebp
xchg
adc
cli
sbb
mov
popf
int3
mov
sbb
mov
negl
mov
add
aaa
cmpb
adc
in
sti
inc
sub
jp
push
std
and
cwtl
or
jmp
adc
cmp
int3
enter
imull
adc
in
ret
sub
lds
jp
mov
ficoms
pushf
mov
mov
mov
add
fcmove
xchg
or
mov
adc
sub
dec
xchg
push
sub
cmp
movsb
jmp
aad
test
popf
cmp
movsl
das
xlat
xchg
das
cs
into
sbbb
pop
ret
icebp
addr16
xor
pop
jo
mov
aaa
mov
jne
ret
sub
pop
xchg
jge
stos
pop
jp
or
push
les
mov
xchg
mov
mov
add
adc
mov
imul
lcall
gs
loop
pop
sub
xchg
or
xchg
shr
mov
jp
jbe
pop
adc
jl
stos
dec
mov
mov
aam
add
imull
mov
adcl
fmull
les
or
loopne
das
lret
insl
xchg
sahf
and
adc
mov
sbb
adc
rclb
push
int3
dec
out
pop
mov
hlt
out
fs
add
jnp
out
dec
jmp
and
xchg
lods
add
outsb
pmaddwd
out
pop
imul
outsb
ret
cmp
pop
popf
popa
jns
cmp
pushf
pusha
jmp
stc
outsl
out
dec
mov
cld
or
test
pop
mov
and
push
sbb
cld
enter
test
push
cmp
ja
dec
jg
and
xorl
shrl
sbb
xchg
or
adc
les
test
mov
fistl
jnp
loopne
sti
sti
pop
shll
icebp
rolb
push
imul
outsl
inc
mov
xor
std
fnstsw
push
imul
xchg
sub
js
pop
shlb
aam
orb
mov
aam
inc
add
cmp
ja
cmp
mov
dec
inc
sahf
push
les
jbe
gs
ljmp
mov
out
test
out
lcall
sub
mov
cmp
dec
mov
or
mov
adc
notl
pushf
push
jae
pop
add
inc
insb
and
cmp
into
ret
or
test
lret
idiv
sub
inc
clc
das
aas
mov
rcrb
mov
and
aaa
mov
adc
mov
push
ljmp
add
pop
cmp
test
mov
pop
xchg
push
jns
icebp
scas
pop
stc
lcall
data16
cld
pop
jne
jo
cltd
mov
fldl
stos
sub
adc
push
push
movsb
repnz
ret
cltd
cwtl
pop
jp
iret
or
ja
into
lds
add
dec
add
test
dec
nop
inc
and
jbe
mov
ljmp
ss
jnp
mov
pop
outsl
pop
leave
and
in
sub
rclb
pop
aam
not
add
fwait
push
push
in
iret
sahf
jge
pusha
popa
cmp
in
mov
mov
dec
cmp
loopne
sub
into
cmpsl
adc
or
xor
push
mov
mov
adc
inc
sub
sar
xchg
sub
mull
or
mov
xchg
or
ss
call
or
jnp
mov
and
xor
ljmp
jmp
es
cmp
add
pop
stos
aas
dec
loopne
cld
inc
ret
push
add
xor
mov
sbb
dec
lea
sbb
push
sub
add
std
jo
xor
aad
sbb
bound
and
fs
pusha
jmp
adc
xchg
xchg
popf
out
mov
jmp
idivb
movl
pop
inc
popf
jg
and
xchg
dec
jmp
push
lock
jno
or
arpl
in
cli
sar
jg
and
fistpl
mov
fcomp
mov
bound
iret
adcb
xchg
notb
adc
add
xor
pop
ret
int
movsb
xor
xchg
mov
xor
sbb
xchg
test
sbb
es
jo
ss
pushf
addr16
insl
cmpsl
inc
je
sub
cmp
shll
mov
jbe
jl
aaa
es
das
xchg
mov
xchg
out
test
aad
cmp
lock
popa
mov
push
inc
push
inc
fcmovnbe
sbb
xchg
mov
ja
xor
and
dec
cmp
pushl
sub
stc
inc
pop
into
or
jmp
adc
scas
or
das
adc
xorb
fcmovbe
jecxz
mov
ds
sbb
repz
xchg
cmp
and
or
push
test
jae
xor
pop
mov
add
movsb
fimull
lea
hlt
das
and
or
out
lock
leave
outsl
dec
pop
and
pop
jg
xchg
imul
fbstp
cmpsb
imul
push
and
push
push
and
stos
sub
dec
ret
cli
cwtl
jb
adc
mov
mov
add
cmp
rol
cmpsb
mov
mov
jge
paddsw
dec
add
pushf
dec
imul
pop
cmp
mov
add
cwtl
xchg
push
lea
jne
lods
sbb
add
and
leave
xchg
dec
pop
pop
enter
mov
cwtl
mov
mov
out
pushf
sbb
jbe
add
jmp
imul
pushf
lea
cltd
popf
xchg
popf
call
test
cwtl
iret
sbb
cmp
sub
push
jecxz
jbe
loope
jp
js
adc
mov
test
roll
pop
fcmovu
adc
imul
ja
mov
lcall
lods
mov
scas
and
push
orb
adc
lds
je
cmp
jo
push
inc
push
add
lds
fdivs
xchg
in
xchg
push
push
jne
push
or
pop
outsl
lret
enter
ret
aaa
call
inc
outsl
imul
ret
jecxz
nop
xchg
rorl
xlat
dec
pushf
push
push
orl
adcl
sub
adc
fwait
push
adc
cmpsb
jg
push
sub
jge
aam
fidivs
test
mov
in
shll
shlb
outsl
pop
mov
in
jnp
in
push
add
mov
bound
inc
or
lcall
push
repnz
cmp
imul
pop
jno
cmpl
aas
daa
fcmovb
clc
in
sub
sub
xor
insb
cmp
inc
mov
mov
dec
add
jns
fidivrs
lods
xchg
pop
and
test
subb
aad
xchg
and
xor
mov
outsl
xchg
xchg
mov
mov
std
sub
iret
lods
sbb
mov
fdiv
mov
mov
test
xlat
repnz
out
xchg
stc
aad
xchg
mov
adc
xor
popf
mov
adc
shlb
bound
clc
in
leave
imul
push
in
push
movsb
sahf
mov
pop
out
sbb
int
ss
adc
jl
fnstcw
insl
enter
add
or
jg
mov
insl
dec
xchg
call
pop
sbb
jmp
insb
push
pop
adc
adc
and
fisubrs
pop
inc
add
icebp
aam
rolb
repnz
ret
aam
push
clc
lea
pop
clc
and
cmp
outsb
cwtl
push
sbb
push
rcl
std
mov
add
pop
mov
pop
andnps
lds
std
xchg
xchg
xchg
incl
push
dec
pop
in
push
ss
out
xor
cmp
mov
adc
push
je
outsl
dec
rcrb
mov
pop
pop
in
aad
fildll
mov
mov
mov
rcrl
out
shlb
aad
iret
test
pop
and
shr
test
sub
mov
or
loope
data16
dec
jo
and
outsb
dec
ror
xorb
or
stos
fnstcw
popa
mov
lret
inc
mov
mov
jns
insl
inc
ror
cs
sbb
mov
outsb
pop
into
in
mov
sub
pop
mov
push
movsb
outsl
pop
mov
hlt
sti
cmp
movsl
lds
int3
inc
sbb
pushf
or
mov
dec
inc
inc
pop
frndint
dec
pop
enter
pop
cmc
into
sbb
lret
push
psrld
push
outsb
pop
mov
int
insb
aam
repnz
test
sbb
jle
xor
hlt
sub
test
fistpl
push
cmc
lock
push
rolb
pop
mov
mov
insb
iret
into
loopne
inc
jae
aad
das
testl
mov
lock
cmp
pop
popf
daa
push
and
lcall
or
in
sub
inc
mov
in
cmp
stc
int
xor
icebp
pop
daa
ret
insl
sbb
and
dec
hlt
stc
aaa
fistpl
pop
adc
xchg
sub
rorb
jge
adc
jl
rcrl
add
lret
adc
fwait
sti
xchg
fwait
jo
jb
fildl
xchg
sbb
test
sbb
pusha
cmpsb
subl
push
mov
les
js
bound
das
lret
xor
inc
mov
xor
sub
jbe
dec
aam
jb
cmp
mov
fstpl
sbbb
fwait
xchg
rcll
hlt
insb
mov
adc
mov
jp
xchg
ret
sbb
sbb
push
push
test
in
ret
sbb
lods
push
jmp
jnp
mov
push
push
sbb
jb
pop
rolb
icebp
pop
not
repnz
jecxz
dec
add
enter
test
dec
xlat
aad
in
pop
and
ljmp
lcall
xchg
pop
imul
faddp
jne
mov
lea
adcb
pop
test
pop
shll
in
jmp
arpl
lods
cli
inc
stos
pop
mov
or
adc
pop
arpl
dec
out
mov
sub
jge
push
cmp
int3
je
sub
fdivrs
ds
xchg
fidivl
push
pop
mov
mov
cmp
mov
or
out
ljmp
adc
add
dec
add
mov
pushf
pop
fidivrs
dec
aam
arpl
xlat
dec
inc
cmpsb
mov
fprem1
and
mov
mov
scas
out
in
aas
add
jbe
xchg
test
es
pop
mov
xchg
xchg
pop
loop
mov
stc
cmpl
cld
pop
cmpsb
ljmp
dec
inc
adc
sbb
mov
rcll
ret
ret
mov
jns
stc
mov
pop
js
mov
testb
mov
cmp
mov
mov
pop
ret
icebp
ret
xor
pop
hlt
mov
mulb
xchg
push
js
test
mov
shrl
inc
mov
ss
and
inc
jne
mov
add
sub
stos
jb
xor
das
push
cmp
push
les
repnz
ja
dec
pop
mov
cmp
xchg
cmp
fidivs
pop
sbb
pop
push
cmpsb
aas
mov
fldcw
notl
pop
mov
loop
xor
jmp
in
int3
arpl
xchg
sub
cmpsb
pop
jmp
or
cld
xor
iret
xchg
insb
jns
sub
add
test
pop
enter
adc
mov
inc
cmp
lcall
data16
cli
ret
scas
inc
dec
outsl
aas
cs
ret
mov
sub
add
fdivl
sbb
and
loop
push
jns
jmp
cmpsb
xor
lock
leave
mov
inc
jo
fs
ja
out
cli
cmp
jnp
jb
stos
imul
out
sbb
fisubrl
inc
xor
dec
push
add
push
jge
lcall
lret
xchg
mov
insl
push
icebp
jg
or
and
into
sub
mov
aad
fwait
push
into
insb
cmpsb
mov
sbbb
nop
shlb
pop
les
xor
mov
shrl
mov
insl
ret
pop
and
daa
orb
les
mov
popf
decb
mov
pop
xchg
fstpl
inc
jp
xchg
sbb
fsub
jge
stc
js
xchg
push
enter
in
and
gs
std
push
lds
add
push
cld
xchg
in
pushf
mov
sbb
mov
icebp
imul
test
subb
stc
push
into
je
jns
dec
or
hlt
out
inc
and
jo
addb
jae
out
push
call
add
pop
in
mov
pop
jp
xchg
push
inc
mov
jnp
or
stos
mov
outsl
pop
int3
jmp
sbb
mov
sub
fdivl
bound
std
sub
xor
icebp
jle
insb
inc
loop
icebp
or
lret
pop
and
mov
push
rclb
jecxz
mov
sbb
mov
jle
std
rorb
cmp
mov
cmp
add
pop
mov
push
pop
inc
test
sub
icebp
mov
xchg
mov
rolb
loop
adc
pop
sub
cld
sub
pop
movsb
dec
mov
jle
outsb
jp
scas
aaa
dec
je
mov
iret
ja
inc
arpl
arpl
inc
mov
iret
xchg
sbb
lcall
test
mov
lods
cld
xorb
fnop
mov
jp
push
stc
fisubs
mov
jge
cmc
pop
mov
fmuls
pop
cmp
je
inc
movsb
lret
adc
imul
dec
xchg
in
xchg
add
addr16
shl
inc
lcall
cld
mov
or
cmp
mov
out
sub
sub
xchg
mov
scas
add
dec
mov
cwtl
pop
inc
mov
js
movsl
and
add
lods
rorl
xchg
jp
cmp
loop
push
cli
cmp
pusha
ja
in
or
jno
ljmp
jno
leave
jns
sbb
loop
inc
mov
loop
clc
mov
xchg
test
add
xlat
push
pusha
outsb
arpl
stos
sahf
push
int
addl
pop
cmc
das
lock
xor
ljmp
sbbb
ret
mov
or
dec
sti
and
and
or
push
cmpsb
push
cli
cmpsl
jle
shr
addr16
sub
pop
and
les
sub
sbb
jbe
adc
inc
mov
test
or
adc
inc
cmpsb
addr16
outsb
xchg
rorb
jbe
imul
adc
clc
aas
ja
cmp
mov
mov
cs
mov
cli
adc
lahf
aad
decb
push
xchg
sahf
into
orl
negb
and
sub
dec
lret
test
and
xchg
pusha
fisttpll
inc
nop
jp
fsubrp
or
mov
pop
push
xchg
in
lock
hlt
xor
mov
das
dec
cli
enter
xor
add
mov
push
and
push
fistpll
fists
out
jo
or
or
bound
jnp
mov
subb
jb
mov
iret
clc
lods
cli
xor
repz
daa
iret
sub
and
and
push
xchg
jbe
mov
xchg
dec
adc
xchg
lahf
or
cmp
adc
pop
in
and
adc
xchg
fistpl
ret
adc
ljmp
xchg
out
xlat
test
and
ret
stos
xchg
insb
dec
aam
pusha
dec
cmp
adc
or
add
and
push
cwtl
lahf
cmp
push
dec
loope
nop
lcall
mov
inc
add
mov
jae
ds
dec
cmp
pop
data16
or
nop
les
lods
cmp
nop
cmp
push
or
xchg
mov
mov
pop
xor
cmp
jae
pop
and
shlb
pop
lods
jle
into
rclb
jae
mov
and
rcrl
clc
fisubrl
pop
add
pop
lock
dec
mov
pop
inc
aad
fcmovnb
push
fsubrp
push
sub
shl
mov
jb
sar
push
push
push
js
jg
das
stc
lret
stc
xor
xor
cltd
push
push
pop
or
rclb
fisubrs
mov
cmp
cmp
lret
jns
mov
jae
ret
pop
mov
or
mov
sarl
or
orl
add
mov
ret
out
sub
xchg
cmp
scas
jmp
loop
popa
push
inc
sub
dec
sub
dec
shlb
fstpt
mov
and
mov
inc
hlt
push
cmp
sbb
data16
int
mov
in
jne
dec
mov
popa
adc
test
sar
jo
cmp
leave
gs
inc
test
popa
and
sahf
popa
lret
cmpsb
je
lods
mov
js
mov
xchg
scas
add
dec
rcrl
fistps
mov
xor
in
add
lret
and
mov
fisubs
mov
enter
fucomip
sar
sub
into
xor
push
mov
lds
xchg
or
negl
dec
shl
enter
adc
sbb
inc
add
or
out
add
push
gs
adc
inc
mov
sbb
mov
das
scas
dec
adcb
out
mov
sbb
in
hlt
mov
cmpsl
push
xchg
das
sbb
jb
pop
es
stos
cmc
jl
adc
push
inc
add
inc
popf
pop
pop
mov
fdivs
mov
push
loope
mov
add
ss
jg
push
dec
nop
lds
xchg
test
add
sub
popa
sbb
lcall
adc
inc
jns
dec
cmp
dec
pop
push
shrl
das
jmp
aam
bound
push
aad
mov
mov
jb
lret
test
test
jae
sbbl
jg
loopne
sub
scas
and
cmp
jb
bound
xor
mov
sbbl
jne
sti
pushf
push
addr16
fsubs
aaa
loopne
mov
mov
lret
xor
sbb
pop
or
sbb
pop
fldt
stos
xor
lds
cmpsb
adc
aad
sbb
mov
mov
lcall
hlt
cltd
lods
cmp
cli
cli
sub
xchg
sarl
and
sub
mov
out
pop
jmp
mov
dec
cmpsb
test
mov
xadd
ret
lret
dec
and
xlat
sub
mov
ja
repz
and
jo
cmpl
and
pop
add
mov
pop
mov
jmp
mov
mov
in
aaa
lds
shll
sub
push
mov
insb
adc
cmp
pop
loope
daa
mov
pop
push
fdivrs
dec
outsb
sub
cmp
mov
icebp
push
xchg
lahf
xlat
clc
mov
mov
sbb
int3
pop
pop
cltd
mov
cltd
push
arpl
jp
sub
push
pop
sbb
out
pop
inc
mov
cld
fidivl
rcll
mov
call
dec
in
lock
lods
jl
stos
or
insb
cmp
sub
add
push
cmp
push
lods
aaa
mov
iret
es
lea
xchg
pop
gs
clc
mov
sar
sbb
pushf
xchg
xchg
mov
loope
leave
jmp
loop
test
repz
sub
test
scas
and
sbb
and
sbb
jp
pop
shrb
mov
es
fcmovbe
jne
sub
pop
rolb
add
inc
pop
dec
lcall
jo
shl
pushf
popf
jae
mov
fyl2xp1
jb
cld
xor
pop
xor
int3
xlat
aas
gs
sbb
sbb
push
fbstp
dec
push
call
xchg
cmp
add
jle
call
cmc
mov
adc
es
cmp
stc
out
cltd
mov
adc
ret
mov
and
roll
pop
movsb
cli
cwtl
mov
dec
fnstsw
and
push
mov
mov
maskmovq
addl
outsb
pop
xchg
jecxz
lret
sbb
xor
in
inc
inc
dec
inc
sarb
test
sbb
shlb
ss
cmpsl
and
cmp
and
push
movl
sub
mov
jmp
lcall
sub
or
mov
or
fsubrl
sub
xchg
jl
in
in
call
ss
dec
xor
cmp
int3
lret
aaa
jp
push
lcall
xchg
push
aas
fmul
enter
insl
test
sub
add
sbb
test
insb
cmpsb
loop
add
adc
cmp
cmp
test
mov
lahf
mov
sti
and
cmp
cmp
outsb
cli
dec
mov
roll
mov
outsl
lods
lods
sub
and
mov
push
lock
push
lret
ja
sub
inc
pop
adc
fwait
cmp
mov
mov
addr16
pop
cmp
mov
dec
stos
adc
xchg
xor
mov
jae
xchg
jg
sbb
sarl
xchg
mov
rorb
adc
push
aas
jecxz
ret
pop
fildl
in
loope
mov
pop
subl
in
fldl
stos
fs
or
mov
fwait
cmp
or
test
xorl
call
nop
push
ja
pushf
cmp
pop
fbld
xor
xchg
inc
and
mov
pop
lret
ret
mov
xchg
mov
in
cwtl
jb
je
add
pop
fcomps
jp
ja
out
inc
cmp
ja
xor
fsubrl
pop
int3
inc
dec
sahf
mov
xchg
dec
push
int
hlt
jo
dec
lods
pop
push
inc
sub
sbb
push
pop
insl
cmp
lret
jg
ret
jecxz
add
dec
push
int3
cs
ds
push
mov
lds
cmc
mov
push
rcl
xchg
push
adc
call
lea
in
mov
fistpl
lock
js
movsb
daa
shl
in
xor
xchg
inc
ljmp
jge
fistps
rclb
mov
rol
loope
movsb
js
pop
js
cmp
fisubrs
sarb
fidivl
hlt
add
dec
inc
pop
add
dec
xchg
xchg
xor
fs
ja
repnz
jl
test
outsb
in
sub
jmp
test
cltd
push
rorb
mov
jb
nop
inc
movsb
jbe
fsts
or
ljmp
lds
popf
xchg
fwait
pop
movsl
out
and
jmp
fildl
test
iret
fldt
mov
add
test
jmp
or
jne
add
jmp
shlb
dec
and
movsl
jmp
sbb
or
out
inc
testl
cmp
mov
push
push
ret
mov
mov
add
movsb
sub
mov
repz
xor
push
inc
xchg
outsl
pushf
stc
movsl
ss
out
jb
nop
mov
movsl
xchg
ss
test
ret
xchg
pop
mov
add
pushf
dec
pop
mov
cmp
or
nop
mov
fs
xor
lock
scas
and
sub
push
test
sti
mov
mov
int
jmp
cmp
orl
popa
xor
cld
std
adc
xchg
xor
fnstenv
jno
orb
pusha
mov
aad
dec
or
pop
mov
test
addl
and
push
jle
or
iret
pop
xchg
pop
sbb
aaa
clc
inc
cltd
ds
fsubl
xor
ffreep
nop
ljmp
push
mov
sub
push
mov
inc
jns
movsl
mov
cltd
mov
jns
cmp
cmp
enter
cmp
push
pop
sbb
and
pop
ss
push
dec
and
clc
mov
in
xchg
mov
mov
add
mov
adc
popf
jmp
insl
and
inc
push
add
lret
inc
cld
xor
adc
lods
nop
or
fimuls
fcomps
fmull
jl
jge
cmp
idivb
sbb
inc
sub
ss
or
cltd
andb
jnp
sbb
fistps
mov
mov
pop
shlb
push
test
cs
push
fstpl
adc
push
mov
or
shll
enter
jo
fimuls
andl
xchg
mov
mov
adc
addr16
mov
sub
jnp
pusha
rcl
cmp
push
lods
push
int
jmp
adcb
sbbb
inc
hlt
nop
sti
vsqrtss
pop
sbb
add
push
sub
enter
sub
inc
ret
adc
pop
jbe
test
jbe
das
sarl
daa
xchg
popw
xchg
dec
add
mov
fdivs
ja
push
mov
cmp
in
and
divb
cmpsl
mov
add
fsubrs
ret
and
addr16
andb
arpl
inc
dec
out
or
ljmp
fsub
cltd
bound
and
push
jecxz
cltd
test
jnp
adc
dec
sub
jmp
jbe
push
les
enter
lds
test
enter
mov
outsl
lcall
icebp
decb
icebp
fldl
call
outsl
xchg
sub
xchg
add
mov
cli
sbbl
push
mov
jp
jae
pop
pop
es
mov
lods
mov
fdivl
mov
xor
add
iret
addr16
mov
dec
push
outsl
mov
push
scas
fnstenv
cli
mov
push
push
inc
dec
lea
mov
cmovbe
and
fs
add
das
leave
push
out
xchg
rclb
test
jns
sahf
out
ret
mov
or
mov
jmp
inc
push
addr16
roll
cmc
dec
test
ret
cmp
inc
sub
ja
shlb
jge
pop
xchg
mov
push
aam
add
pop
jae
leave
jno
inc
inc
dec
adc
mov
pop
pop
or
inc
fstpt
push
cmpb
push
cmp
mov
jl
lock
jle
sbb
pop
sbbb
repnz
xor
mov
dec
dec
cmpsl
ret
mov
dec
sahf
arpl
sbb
push
sbb
mov
imul
cmp
cmpsb
pusha
sti
insl
mov
pop
cmp
cmp
lret
dec
popf
sbb
mov
and
in
faddl
dec
mov
sbb
outsb
push
adc
dec
dec
fcompl
fdivr
stos
movsb
mov
js
xchg
adc
inc
mov
sbb
outsl
loopne
leave
andl
shlb
xor
xor
or
icebp
sarl
orl
mov
fstl
imul
in
xlat
sbb
repz
jnp
test
lahf
add
xor
daa
xor
nop
xchg
insl
xchg
test
fld1
adc
jne
and
jne
xchg
push
sbb
or
inc
int
dec
adc
sbb
daa
mov
aaa
adc
cmp
lds
mov
lahf
adc
jp
mov
mov
jge
jo
cmp
push
fildl
dec
mov
cld
aaa
xor
cmp
mov
dec
mov
mov
sub
dec
add
lcall
sbb
repz
dec
in
and
inc
xor
mov
ja
stc
stos
jnp
jns
cmp
jp,pn
nop
mov
call
cmp
sub
push
mov
inc
cwtl
add
sub
lods
pop
dec
out
mov
adc
movsl
dec
out
push
pop
leave
and
add
push
inc
popa
mov
adc
push
cmpsl
jp
sbb
push
int3
out
ret
hlt
idivb
mov
pop
out
dec
sti
adc
lock
enter
sti
inc
bound
cmp
fldcw
mov
pop
pusha
pop
test
xor
mov
imul
xchg
pop
and
lds
rclb
add
lahf
shl
cmp
push
inc
cmc
xor
mov
shl
mov
je
add
cmp
mov
orb
fucomip
xor
gs
inc
push
xchg
aas
push
dec
mull
mov
shlb
out
out
jno
cmpsb
ljmp
push
icebp
sbb
ss
mov
cld
jg
inc
adc
mov
fstl
and
inc
lock
movsl
js
fidivrs
adc
jb
push
sub
std
xchg
push
in
sti
stos
mov
jecxz
enter
cmpsb
pop
cmc
pop
add
ficoml
shr
int3
jle
nop
mov
test
mov
call
in
mov
popa
cmpsl
out
push
sub
xchg
mov
outsb
out
push
sub
adc
or
inc
and
lret
adc
pop
and
push
mov
call
les
xor
push
mov
addl
jmp
arpl
sub
mov
jnp
mov
int3
pusha
pop
cwtl
insl
xchg
aad
mov
adc
ret
call
xor
push
jg
jae
and
mov
sub
icebp
cmp
add
mov
into
and
lods
sub
aas
mov
sbb
dec
inc
jnp
icebp
inc
scas
or
bnd
sub
xchg
stos
lds
movsb
xor
push
jmp
cltd
loope
cmc
pop
outsb
jno
mov
cld
dec
aam
pop
jbe
clc
fs
inc
stc
jbe
jo
xlat
int
cmp
clc
jg
mov
inc
ds
leave
jle
es
mov
mov
jne
mov
sbbl
and
rorl
in
push
aam
and
adc
test
bound
mov
inc
test
jb
xchg
xor
lret
cmp
sub
mov
lods
inc
into
bound
sub
ljmp
pop
xchg
dec
add
orl
dec
loope
and
mov
jg
mov
test
xchg
inc
mov
fidivs
push
xchg
jmp
mov
mov
mov
mov
sarb
add
stos
imul
pushf
clc
sub
xor
push
fbld
je
es
enter
xor
mov
inc
push
add
push
cltd
pusha
pusha
add
sub
fsubr
jb
data16
push
and
fxam
or
lret
pushf
or
or
iret
fs
jl
idivb
mov
or
in
insb
call
sbb
shr
enter
cltd
mull
cli
movsb
lock
mov
cld
cmp
addl
mov
cmp
jne
dec
enter
and
push
fld
mov
dec
xor
xchg
inc
mov
xchg
mov
lret
sub
sti
ret
push
push
push
or
mov
cltd
clc
mov
pop
xchg
testl
int3
rorl
lahf
lods
cwtl
arpl
cmc
out
in
adc
adc
or
cmp
iret
inc
cmp
jnp
or
int
shrb
cmpsb
ret
cmp
call
loope
or
inc
jns
js
jecxz
inc
fbld
cwtl
fimuls
adc
pushf
shrb
shrl
sti
rorl
test
push
push
add
jmp
popa
divb
loopne
add
ds
lods
or
push
push
jo
hlt
hlt
pop
cmpsb
xchg
test
out
imul
and
add
push
and
push
jns,pn
jae
or
mov
mov
stc
xchg
lds
mov
fbld
mov
icebp
movsl
cli
test
or
sbb
or
xorb
or
neg
mov
loopne
pop
mov
roll
xchg
mov
les
fadds
shrb
test
mov
scas
jbe
dec
jnp
push
enter
dec
push
cmc
jge
pop
cmp
sub
fldz
mov
scas
inc
adc
lcall
xor
or
stc
dec
divl
jno
mov
data16
jb
mov
cmp
push
in
add
mov
dec
pop
add
fsub
mov
cmc
fdiv
insb
lret
dec
hlt
arpl
inc
push
and
cmpsl
es
mov
xor
mov
xchg
adc
insl
mov
cmp
dec
mov
or
test
jno
pop
mov
xchg
jne
lods
mov
mov
mov
loope
adc
mov
stc
cmc
mov
es
lea
stos
lods
mov
icebp
mov
out
add
cwtl
in
lds
jg,pt
addb
jecxz
pop
pop
fpatan
cmp
push
outsb
movsb
sub
stos
addb
sub
test
fsubrs
push
xlat
mov
addb
pop
mov
jno
pop
push
pop
movsl
stc
mov
push
imul
xor
fiadds
ffreep
cmp
jbe
pop
mov
lahf
inc
sub
ja
daa
iret
pop
push
sbb
outsb
aam
leave
leave
loopne
mov
mov
pusha
xchg
sbb
test
and
mov
xchg
push
enter
call
cld
insl
lds
test
xor
mov
mov
cld
pop
into
pusha
hlt
hlt
cltd
and
dec
dec
rcll
xlat
aas
fisubl
fisttpll
push
outsl
adc
inc
mov
shll
inc
fmuls
inc
mov
cli
repnz
gs
dec
sub
daa
popf
dec
and
enter
jp
popf
movsb
fistpl
adc
sub
cli
xchg
call
cwtl
or
fildl
or
xor
mov
xor
gs
cmp
test
fiadds
std
into
pop
dec
xor
dec
pop
in
js
icebp
cmpb
pop
movsb
push
inc
stos
dec
aam
sub
and
gs
xor
mov
mov
pop
xor
mov
push
or
push
pop
call
mov
hlt
mov
out
pop
ljmp
fcmovbe
fwait
sti
sbb
dec
push
xchg
inc
addr16
mov
dec
loope,pn
jmp
and
sbbl
test
or
stc
adc
fisubrl
inc
scas
cmpsb
movsb
xor
xchg
xchg
int3
and
push
or
arpl
ja
jae
adcb
push
sub
mov
mull
repz
xchg
sub
mov
mov
sahf
mov
dec
mov
jle
push
shll
cmpsb
mov
push
ljmp
out
lods
notl
mov
push
or
ret
cmp
pop
dec
or
cmpl
push
leave
dec
repz
fwait
testb
shl
mov
ja
leave
pop
adc
hlt
pop
and
pop
dec
mov
lret
jg
adcb
int3
jl
jmp
adc
nop
fists
lahf
mov
ja
sub
in
punpcklwd
jecxz
pop
stos
test
push
aas
mov
mov
cmc
leave
jmp
add
addr16
iret
insb
sub
fstpl
popa
xor
cmp
or
popa
ret
adc
push
pop
mov
lahf
scas
add
pop
cwtl
sti
jecxz
bnd
inc
dec
mov
dec
cmp
out
repnz
ja
mov
popa
outsl
pop
cs
in
fs
out
aad
sarb
pop
xchg
xchg
scas
movsl
test
stos
xor
mov
push
fidivs
dec
mov
movsl
adc
shrl
jne
and
cltd
jnp
inc
cmp
sbb
jmp
mov
loopne
pushf
mov
add
add
iret
cwtl
negl
ficompl
mov
inc
sti
pop
das
das
sbb
ss
xchg
jl
inc
sti
incl
aaa
imul
mov
fwait
in
das
mov
lret
into
mov
pushf
dec
or
xchg
mov
push
sbb
push
push
or
jbe
cli
pop
addr16
je
sbb
mov
jno
adc
outsl
lods
call
add
bnd
jg
jp
mov
pop
fiaddl
jge
pushf
test
pusha
jl
or
nop
cmp
mov
int3
cli
sbb
adc
inc
cmpsl
movsl
out
ja
xor
sahf
mov
cmpl
push
or
push
xor
mov
xor
mov
mov
mov
repz
mov
arpl
pop
inc
ljmp
enter
lret
stc
mov
mov
int3
out
sub
rcll
mov
sub
adc
fwait
push
push
es
push
imul
imul
sub
pop
sub
push
mov
mov
pop
and
out
testb
repz
jbe
scas
push
xor
shll
in
in
dec
jmp
jmp
dec
outsb
inc
mov
xchg
mov
or
pop
test
add
negb
cld
ja
inc
xchg
sbb
mov
xlat
std
into
mov
jns
movsb
sbb
push
pop
adc
cltd
pop
sub
cmp
cmpsl
or
pushf
push
pushf
das
pushf
sub
cwtl
rcrb
ret
fcoms
data16
pop
ret
lods
jl
nop
lds
pop
hlt
inc
scas
repnz
fadds
pop
clc
jge
pop
jno
sub
dec
bound
sbb
test
push
sbb
sbb
cmp
jecxz
xor
mov
inc
push
and
sub
jnp
flds
jae
cmc
xor
dec
clc
aam
repnz
add
rcll
cltd
push
push
aaa
andl
idivl
pusha
mov
pop
lret
sbb
test
pop
insb
insb
pop
leave
jp
push
rol
cwtl
jmp
mov
lods
jge
cmpsl
popa
jns
hlt
pop
lcall
dec
mov
jnp
mov
adc
enter
mov
xchg
cmc
daa
loop
adc
shll
or
cli
test
mov
dec
and
mov
push
es
les
lret
movsl
repz
call
ljmp
pusha
loope
adc
imul
pusha
vpsubd
bound
xchg
test
int3
push
xchg
jbe
scas
xchg
add
jnp,pn
int
stos
shl
ja
nop
fisubrl
jae
lcall
mov
pop
fucomp
cmc
dec
das
pop
iret
rorb
mov
xchg
ja
adc
sbb
mov
dec
loopne
push
xchg
sbb
repz
hlt
mov
insb
aam
jmp
pop
xor
pop
filds
mov
scas
push
sbb
inc
inc
leave
adc
test
adc
fs
test
and
mov
xor
fcmovne
push
and
cli
out
test
jae
and
xchg
jecxz
insl
out
mov
shll
inc
fnsave
or
ljmp
inc
mov
or
mov
push
je
jp
add
ret
sub
fs
add
dec
or
sub
iret
cmp
mov
sbb
mov
sbb
mov
fcompl
mov
aas
stc
xchg
sbb
stc
cmp
stc
in
mov
push
mov
adc
jnp
nop
mov
xchg
mov
fdivl
jo
cmp
pop
nop
ljmp
jo
loopne
xor
ja
add
sbb
lcall
cmc
out
shrb
js
mov
in
jp
jmp
rorb
sbb
mov
cwtl
stos
mov
mov
lock
and
aas
or
popa
push
popf
stc
insb
loope
clc
repnz
xchg
mov
sbb
mov
adcl
jle,pt
xor
mov
les
mov
clc
jnp
push
dec
xor
jne
xchg
cmp
pusha
iret
and
test
pop
fldt
sub
mov
les
ja
sub
or
sysenter
add
sbb
mov
cld
xor
push
jne
negb
test
push
int
outsb
xor
lods
sbb
inc
pop
nopl
mov
mov
adc
scas
mov
lock
sahf
cmp
and
xchg
push
das
xor
inc
shrl
pushf
sbb
dec
cmp
out
or
imul
sub
inc
pop
cltd
mov
psrlq
mov
shrb
ds
jnp
mov
iret
xchg
push
or
pop
push
orl
inc
push
xlat
flds
into
fnstenv
aas
call
push
test
push
sbbl
test
jo
mov
jmp
lret
dec
jb
psubsb
xor
popa
sarb
cmpsl
jne
xor
xchg
or
mov
inc
fisubl
jp
inc
sahf
mov
aad
jge
shl
cli
mov
shlb
into
dec
mov
dec
ljmp
js
hlt
loope
sub
xlat
xor
sahf
pop
or
outsb
int
mov
insl
jb
dec
mov
jb
mov
imull
jl
dec
out
stc
aaa
shlb
and
mov
mov
scas
fldl
sahf
dec
pusha
pop
shrb
xor
in
cmpsl
mov
addb
and
cmp
pop
fmuls
cltd
push
mov
cmpsb
mov
fmul
icebp
aaa
and
out
push
bound
cwtl
rorl
outsl
jb
rorb
addr16
mov
xchg
idivl
fs
push
cltd
je
loopne
jl
clc
je
xor
mov
stos
jp
fstpl
pop
loop
dec
rcll
mov
jno
imul
mov
int3
call
ds
fidivl
out
mov
fisttpll
sub
add
jge
mov
mov
aad
mov
inc
jl
mov
hlt
sarb
and
out
jno
std
push
mov
pop
adc
movsl
je
fs
mov
and
lock
repz
jbe
mov
rcrb
gs
aaa
jnp
test
movsb
stos
test
insb
sbb
call
sysexit
negl
mov
imul
sbb
movsl
adc
xchg
mov
pop
jno
add
jle
in
aam
fstps
pop
mov
mov
mov
rolb
cwtl
mov
fst
xchg
add
xchg
xchg
inc
cmp
test
dec
mov
and
int3
pop
push
xor
cmc
cwtl
enter
dec
sbb
fimuls
into
sub
sahf
dec
dec
and
fstpt
into
popl
push
fistl
subb
pop
inc
jg
out
push
xchg
scas
aam
pushf
aaa
call
mov
and
repz
mov
repz
out
mov
outsl
in
imul
cmp
mov
loope
les
outsb
xchg
shrl
and
popa
cli
insb
aam
mov
insl
inc
fcoml
mov
mov
lret
mov
mov
les
sub
mov
imul
lahf
lds
sbb
aam
das
je
mov
je
fmuls
addr16
js
adc
pop
mov
sub
pusha
fstpl
inc
add
dec
in
adc
sub
jg
rcr
iret
push
mov
aam
es
xchg
xchg
mov
jl
mov
mov
and
int3
inc
add
in
nop
cmp
pop
fxch
mov
adcb
leave
icebp
pop
movsl
test
cmp
or
in
mov
pop
cltd
loope
dec
cltd
addr16
jbe
mov
dec
push
insb
outsl
cmp
jecxz
scas
loop
xor
xor
xor
pushf
ss
shll
adc
fcmovne
inc
popf
adc
xchg
cmc
fcoml
lea
push
mov
mov
cld
or
xchg
mov
and
dec
ljmp
mov
push
adc
xchg
ret
dec
adc
aaa
enter
aas
out
push
and
xchg
add
lds
test
jno
scas
repz
adcl
push
jo
xchg
gs
mov
mov
or
push
jmp
stc
or
xlat
orb
mov
aam
cli
push
sbb
popf
lods
push
jne
out
rcll
push
xchg
fstps
cltd
xchg
xor
jno
pusha
sbb
pushf
mov
lret
shl
hlt
sbbb
add
push
lds
pop
dec
mov
pop
add
sbb
stos
cs
pop
scas
mov
mov
fldl
aas
icebp
inc
sbb
cwtl
adc
cmpsb
mov
ljmp
es
xor
imulb
fstpt
pop
mov
clc
shll
fs
pusha
sub
pop
add
push
jb
repnz
mov
add
lret
stos
mov
lods
sub
popf
jbe
cmc
aam
sbb
pop
ret
xlat
shrb
xchg
out
cmp
into
jns
mov
push
fwait
dec
jae
aam
and
jns
stos
pop
mov
jle
ret
movsb
test
inc
add
leave
inc
fwait
mov
add
or
jp
lret
jo
push
mov
lock
cld
popf
cltd
or
xor
cmp
adc
mov
ret
add
push
dec
jmp
mov
xchg
sahf
adc
xchg
jg
dec
dec
jb
insl
mov
fmull
xchg
and
push
mov
leave
jo
inc
outsb
cli
mov
or
sub
fwait
add
pushf
imul
mov
dec
xor
sti
push
repnz
add
sbb
test
push
fwait
in
ja
rorb
push
mov
pop
cmp
ljmp
mov
jbe
fsts
dec
pushf
cs
in
insb
out
or
push
add
xlat
pop
inc
clc
cmp
jno
movsb
sub
or
shl
hlt
sub
sbb
jae
cmc
popf
rcr
ret
mov
aaa
negb
cli
sub
fnstcw
push
shl
xchg
sbbb
inc
aas
aad
std
jnp
xchg
and
add
mov
mov
push
mov
sbb
popf
fcmove
ljmp
outsl
jnp
pop
insb
pop
fsub
rolb
ljmp
test
mov
or
imul
xor
leave
cs
adc
mov
arpl
or
loopne
dec
xor
cmp
rcl
mov
ja
pop
testb
popf
jnp
scas
push
add
repnz
imul
lcall
test
cmp
or
add
sahf
sbb
pop
movsl
push
cli
jle
adc
cli
adc
pop
cltd
insb
push
aam
and
imul
push
dec
jecxz
sub
lods
dec
insl
aad
or
jge
mov
out
sbb
andl
sahf
lahf
adc
stc
mov
push
mov
xor
loop
js
and
repnz
dec
repnz
ljmp
push
repz
or
mov
aad
stc
dec
dec
xor
xchg
arpl
mov
or
adc
scas
test
xchg
jecxz
fwait
cmpsb
jbe
fidivrl
pop
popf
xchg
rcrl
and
repz
cld
arpl
stos
dec
sbb
jecxz
xchg
rcll
repz
pop
cmp
sbb
mov
shrb
or
xchg
mov
arpl
movsb
scas
sub
mov
inc
mov
cmc
pusha
xchg
push
xorb
and
xchg
in
mov
ret
sbb
sbb
xchg
int
loop
xor
loop
pushl
adc
xor
pop
in
push
sub
js
mov
mov
cmp
imul
ja
aad
out
mov
inc
dec
mov
mov
inc
xchg
sbb
pop
xchg
sub
push
mov
popa
sbb
add
pop
jl
pop
icebp
aam
lea
cli
sub
jge
out
cmp
and
in
inc
mov
dec
inc
sbb
gs
sarb
test
out
lret
test
pop
and
and
cmp
nop
jp
clc
lods
mov
in
hlt
ja
sub
pop
pop
push
fstps
push
stos
cmc
jnp
sbb
or
mov
fcmovne
std
jb
outsl
and
and
mov
jbe
aam
scas
pop
aas
out
inc
std
mov
push
lea
push
popa
push
xor
dec
lds
mov
xchg
dec
imul
mov
call
lret
jo
leave
dec
les
inc
push
das
add
mov
sbb
pusha
jnp
adc
cmp
mov
iret
xchg
xchg
jno
jo
dec
push
loop
adc
mov
push
add
test
pusha
enter
loopne
lahf
push
mov
push
jecxz
cmp
rcr
inc
or
xor
xlat
imul
pop
lods
add
iret
stc
cmp
in
dec
mov
xchg
xchg
push
jo
aaa
sub
xchg
dec
sub
xchg
mov
gs
mov
shlb
sbb
rcrb
dec
repnz
shll
lds
test
jne
cmp
loop
js
out
mov
mov
mov
add
xchg
push
dec
inc
sahf
sbb
jnp
movsl
sti
push
mov
add
pop
lock
dec
lahf
popa
leave
cmpsb
lods
and
iret
scas
jmp
dec
gs
add
mov
es
movsb
stos
mov
sub
pop
rorb
xorb
lds
push
lods
addr16
push
ret
cmc
into
pop
lcall
outsl
iret
nop
mov
je
call
aas
push
or
mov
into
inc
dec
gs
insl
mov
jp
xorb
xor
xorb
add
cmp
pop
dec
xor
add
nop
mov
pop
std
push
and
push
mov
ljmp
push
sub
xchg
arpl
push
fistpl
cmc
pop
cmpl
imul
and
sbb
sar
imul
sbb
mov
out
add
stos
es
or
mov
and
jge
fldt
sbb
mov
into
lods
clc
push
sbb
shlb
cmp
sub
cmp
iret
dec
mov
and
push
mov
mov
mov
fwait
das
xchg
dec
or
gs
gs
lods
mov
jbe
inc
pop
fildll
dec
push
pop
push
dec
shrl
shrb
mov
test
xor
xchg
scas
cld
repz
cld
fs
and
and
push
dec
adc
test
push
dec
and
adc
push
rcr
lret
gs
aam
xor
cmpsb
sub
sbb
jnp
fwait
out
inc
fcom
out
xchg
add
push
loop
mov
mov
inc
nop
lods
fisttps
cs
jnp
lods
xchg
mov
mov
hlt
inc
stc
daa
enter
sbb
out
loop
pop
jbe
mov
and
gs
add
xchg
xchg
setb
cmc
push
push
subl
lods
or
in
sub
push
imul
out
inc
cld
lret
je
dec
cli
subl
fildl
faddp
pop
dec
push
jbe
mov
pop
dec
fcmovnu
hlt
cmp
sbb
or
fists
add
inc
xor
cmp
or
and
fcmovu
das
jbe
out
adc
sbb
loopne
inc
cmpsb
aam
lfs
icebp
dec
ds
lock
jmp
fsubrs
add
rcll
pop
fsub
inc
pop
sub
inc
das
jo
cmp
mov
and
in
pop
ljmp
cmc
mov
ljmp
addr16
fstl
lret
adc
mov
out
xchg
mov
leave
aam
mov
and
into
out
stos
inc
decb
js
test
in
mov
aaa
cli
rolb
jns
xor
mov
mov
and
or
mov
fldcw
mov
filds
inc
icebp
inc
insl
inc
xchg
jno
shl
jae
mov
arpl
lods
jg
xor
rcrl
ljmp
mov
clc
cmpsl
enter
test
inc
daa
cs
cmp
divl
push
roll
shll
jbe
cwtl
cs
mov
subl
mov
jle
cmpsb
arpl
pop
cmp
and
scas
fstpt
movb
arpl
cmp
cmp
fidivrl
call
stc
sbb
xor
ljmp
cwtl
push
and
fcomip
push
pop
mov
sub
dec
mov
mov
or
fisttps
cmc
je
shll
in
mov
adc
mov
mov
cmpsb
pusha
das
mov
into
and
add
ds
aad
jge
inc
aas
and
mov
ret
xor
loope
fwait
in
cmpsl
or
mov
movsl
loope
inc
ss
jle
sti
mov
cmpsl
pop
push
out
lahf
push
out
cmpsl
pop
jno
bt
pop
pop
xchg
orl
sbb
sahf
mov
xor
pop
xor
hlt
inc
clc
mov
shrb
sbb
sarb
cmpsb
lea
mov
mov
clc
sbb
mov
mov
pop
fsubs
mov
scas
dec
xchg
mov
insl
js
mov
cmpsb
xchg
xchg
mov
push
dec
dec
fldcw
outsl
cmc
test
adc
int
leave
push
ss
cltd
or
push
out
fcompl
jbe
test
outsl
pop
cld
cmc
int3
xchg
test
sti
movups
sbb
ss
fsub
repz
enter
sbb
jno
adc
fs
test
cs
adc
fsubrp
xor
or
pop
sub
mov
xchg
ds
cmpsb
hlt
inc
mov
pop
fisttps
negl
push
cmp
and
mov
lods
outsb
pop
into
xlat
sbb
sbb
sbb
fs
in
pop
cmc
lret
sub
sbb
or
fnstsw
cmp
int3
fs
pop
andl
jge
mov
dec
sbb
scas
mov
xchg
ret
lods
dec
mov
enter
jbe
insb
call
jge
rolb
push
push
dec
add
sbb
std
rcll
rcrl
es
lds
out
xchg
xor
repz
inc
cmp
test
stos
sbbb
iret
cmp
loop
sbb
inc
addr16
and
cmp
repnz
mov
cltd
xor
push
test
xchg
movsl
dec
dec
push
jae
js
jl
xor
add
gs
scas
mov
cs
push
cmpsl
cmp
mov
xor
xor
mov
movsb
in
mov
fistpll
sahf
inc
pop
frstor
sub
icebp
arpl
jle
pop
inc
push
flds
add
outsl
lahf
push
scas
sbb
mov
enter
and
ffree
and
dec
mov
xor
icebp
nop
sbb
in
add
fadds
sub
xor
and
cmp
mov
xor
in
sarb
sbb
xchg
jge
inc
xchg
leave
pop
xchg
xor
cli
in
dec
dec
mov
loop
sbb
mov
lods
cmpsb
jno
jg
aam
push
mov
in
jbe
stos
ret
and
push
mov
fstps
and
add
and
xchg
loop
cmpsl
jp
jge
ss
addb
imul
scas
cmp
adc
mov
ss
pop
es
pop
and
xchg
mov
adc
mov
imul
stc
lret
lods
movsb
clc
mov
pop
inc
frstor
mov
or
mov
xor
int
mov
repnz
inc
popf
mov
loope
paddsw
xchg
dec
roll
out
jnp
push
or
jmp
lret
mov
lods
and
jg
adc
insb
add
popa
sub
imul
sub
xor
es
repnz
addr16
push
arpl
sub
push
rcrb
push
jne
test
cmp
sbb
push
push
je,pn
pop
jle
ljmp
rcrb
mov
adc
dec
xor
inc
repnz
inc
mov
idivl
cmp
dec
mov
jle
xchg
xchg
jb
iret
push
int
cmpsb
inc
int
outsl
dec
cmp
xchg
pop
shrl
sbb
mov
mov
or
and
pushf
inc
sbb
jne
in
decl
push
adcl
xchg
cmpsl
into
pop
or
cmp
ljmp
pop
jns
jns
cmp
cli
iret
mov
mov
sbb
add
int
outsl
pop
sub
pop
mov
pop
inc
cmpsb
push
sbb
inc
push
cmc
test
leave
push
push
mov
test
aam
dec
adc
ficomps
outsb
mov
lds
mov
mov
add
sub
fcoml
jecxz
incl
inc
mov
fildll
mov
jns
mov
push
mov
xchg
cmp
xlat
iret
jno
add
xor
leave
ds
in
lahf
jle
xchg
stc
sbb
fadd
fistpl
mov
fstpl
sub
sub
push
mov
movsl
cld
xchg
fistpl
inc
rcr
fadds
add
cli
cwtl
das
inc
push
enter
aas
cmp
or
or
or
testb
mov
aam
xor
fimuls
xorb
mov
pop
xor
stc
loop
bswap
sbb
push
cmpsb
dec
test
adc
mov
and
mov
pop
jae
stos
repz
mov
jecxz
ror
pop
xchg
enter
scas
mov
aaa
xchg
add
sbb
iret
pop
mov
fiaddl
mov
mov
loopne
test
pop
dec
and
in
pop
sbb
enter
xor
outsl
xchg
mov
inc
lret
lods
daa
cli
xor
jno
xor
mov
xor
ret
fnsave
shlb
or
lods
sbb
dec
aam
iret
push
push
cmp
push
add
fldcw
in
inc
sbb
mov
aam
mov
mov
nop
sbb
inc
into
lock
ds
sarl
cmp
sahf
insl
lock
mov
dec
and
mov
lret
les
outsb
or
je
clc
push
lcall
jecxz
mov
adc
and
out
add
js
flds
xchg
fs
adc
test
test
sbb
aad
push
in
dec
pop
mov
xor
mov
gs
lahf
jp
nop
mov
adc
stos
popf
push
sahf
lods
xchg
jle
jle
rep
fisubl
pushf
or
rcll
dec
fnsave
and
jbe
sub
ljmp
daa
clc
test
jns
and
push
push
cmpsb
mov
nop
std
popf
not
data16
push
rol
sti
or
adc
and
jl
xchg
jb
xchg
bnd
test
mov
and
into
les
lahf
sub
jae
dec
mov
out
sbb
pop
mov
inc
xchg
push
cmp
out
gs
sti
out
pop
jae
mov
addr16
mov
cld
mov
gs
test
adc
add
bound
xchg
int
test
and
or
dec
sbbb
mov
push
cmc
and
popf
xchg
mov
pop
jae
mov
sub
push
out
repnz
fcmove
adc
and
leave
pop
inc
call
jmp
repnz
iret
cmpl
mov
pop
mov
rcrl
cmp
or
inc
pop
jmp
outsl
mov
jl
mov
ret
dec
loopne
notb
push
xchg
mov
das
ret
loop
aad
imul
popf
dec
jno
mov
jge
ret
int
dec
cli
pop
push
jg
push
jns
mov
fists
mov
add
aas
dec
adc
std
insl
inc
das
stos
leave
pop
lds
fnsave
pop
test
fbstp
je
stc
mov
es
les
dec
in
push
jb
lds
scas
dec
fisttpl
jecxz
pop
lods
rcl
cmc
ljmp
scas
imul
out
mov
mov
xchg
es
rcr
loope
movsb
jecxz
xorl
add
lcall
push
xor
fiaddl
add
test
outsl
push
adc
sub
fwait
out
mov
sti
xchg
aas
or
xchg
xchg
sbb
pop
lret
push
call
aam
jge
xchg
add
lcall
dec
add
rol
push
cmp
pop
mov
ss
loope
shll
mov
mov
dec
mov
addr16
sub
lods
xchg
adc
movsl
repnz
dec
fwait
mov
push
in
loopne
scas
lods
pop
dec
jns
fbstp
mov
notb
inc
outsl
cld
jno
nop
gs
sub
fldenv
icebp
lcall
inc
repz
fdivs
pop
loopne
repz
jne
pop
int
and
movsl
mov
addr16
push
jbe
add
push
sbb
xor
sbb
scas
sub
lret
pop
adc
shrl
mov
out
lds
xor
outsl
or
or
inc
sbb
push
cwtl
or
fiadds
mov
lods
out
cmp
dec
jecxz
sub
aaa
xor
hlt
jg
pop
adc
inc
fsubrl
sub
adcb
jge
add
mov
lret
add
icebp
jo
and
mov
sbb
push
push
stos
add
mov
loopne
adc
dec
in
shll
sbb
sbb
rcr
sub
and
sbb
adc
mov
ss
decl
stc
sti
imulb
mov
and
not
xchg
aam
xchg
push
icebp
xchg
add
rcrl
call
imul
adc
mov
iret
xchg
idivl
pusha
sub
xor
shrl
xchg
sub
or
out
into
icebp
xchg
cmc
aam
cmpsl
mov
and
dec
xchg
lock
jo
push
jo
or
mov
ret
jge
cmpsb
mov
jne
xor
mov
fs
in
mov
or
inc
jecxz
cli
andb
in
scas
lea
aam
and
js
es
cmc
jnp
gs
cltd
sbb
in
push
mov
push
mov
repnz
popa
xchg
cwtl
jecxz
repz
repnz
aaa
aaa
sbb
jns
cmp
pop
xchg
cmpb
testl
fidivs
dec
or
ja
dec
jns
or
repz
mov
jge
jmp
adc
jb
sbb
add
aaa
clc
jne
js
adc
mov
push
insl
xor
mov
cmp
scas
cltd
sti
das
mov
in
iret
clc
sbb
dec
icebp
scas
jb
dec
in
setns
cmp
add
push
and
inc
xchg
cmp
push
inc
cmc
repnz
dec
pop
push
test
cmp
dec
nop
push
cmpsb
out
push
pop
cmpsl
jbe
aaa
int3
mov
into
jno
pop
jns
adcb
fistl
mov
inc
mov
inc
int
lods
dec
cmc
ret
cwtl
in
mov
sti
pop
mov
adc
bound
xchg
ljmp
lea
test
cld
pushf
xchg
sub
mov
jns
jb,pt
std
add
movl
dec
femms
inc
dec
mov
rorl
fmull
cwtl
jne
or
jae
outsb
mov
dec
or
and
lret
data16
popa
aas
mov
addr16
subb
test
xor
mov
or
mov
test
ljmp
dec
add
mov
lret
cmp
mov
sbb
les
mov
and
stos
inc
and
adc
icebp
inc
inc
xchg
icebp
or
clc
daa
push
stos
mov
sub
pop
call
cmp
in
sub
cs
movups
or
loope
cmp
imul
push
mov
test
sti
scas
mov
scas
jecxz
add
fnstenvs
lahf
sbb
inc
add
add
mov
in
lahf
push
ss
xor
push
xchg
out
jo
loope
pop
cli
rol
rclb
sub
mov
xor
lods
pop
xor
cmpsl
lds
fildll
mov
mov
inc
sub
or
stos
hlt
adc
ret
insl
pop
int3
jae
jb
inc
inc
add
scas
jmp
int3
jo
cli
xor
dec
shll
aaa
leave
jne
mov
fs
inc
icebp
mov
js
mov
jmp
gs
adc
pop
movlps
insb
dec
test
adc
fstpt
nop
mov
mov
inc
cwtl
int3
lcall
mov
pop
mov
cmc
aad
subb
addb
imul
mov
xchg
lds
sub
pop
sub
sub
push
push
xor
pop
int
lahf
jns
outsb
inc
clc
and
pop
cwtl
add
fdivl
xchg
adc
xlat
lahf
jo
jg
or
andb
cmpsl
jo
mov
add
xchg
sarl
fldcw
dec
push
push
ret
imul
mov
cmp
add
sti
push
mov
push
test
xor
icebp
push
test
test
in
jecxz
push
dec
adc
push
mulb
sbb
pop
mov
pop
lcall
sub
xchg
pushf
push
mov
mov
push
dec
loopne
adc
cmp
mov
mov
daa
insl
cmp
ret
pop
icebp
negb
dec
cmp
outsb
xchg
push
insb
xchg
mov
jle
popf
or
aaa
andb
adc
ret
ja
subb
sbb
sbb
inc
xchg
lret
lahf
lea
and
jecxz
mov
jle
xchg
xchg
test
pop
adc
out
es
cmpb
sbbb
cli
mov
push
sbb
movsl
push
sbb
lods
xor
dec
mov
jnp
subb
fmuls
xchg
cmp
hlt
pop
ss
aam
dec
aas
rclb
sub
xor
shrl
aam
sub
sub
ret
arpl
sbb
and
lea
jbe
mov
lea
lret
popf
fmuls
jb
sub
mull
nop
icebp
dec
push
std
in
out
test
pop
lret
testb
mov
pop
sub
das
sbb
or
mov
notb
int3
or
test
lock
jecxz
lods
cmpsb
xchg
push
mov
jnp
inc
das
fists
adc
fisubrs
adc
insb
mov
pop
dec
dec
mov
rol
lea
repnz
push
sub
dec
popa
je
movsb
fcmovbe
mov
push
jecxz
ja
lret
mov
adc
jno
addb
aaa
push
repnz
iret
lds
in
adc
add
cld
inc
lahf
push
popa
popf
push
test
fidivs
and
mov
dec
js
scas
stos
xchg
leave
bound
je
rolb
sbb
mov
adc
push
pop
das
movsb
enter
fiaddl
mov
mov
cmp
mov
movups
call
inc
mov
nop
mov
ss
fadd
and
je
inc
icebp
jb
mov
enter
mov
xchg
aad
or
jbe
testb
repz
lock
aas
in
add
or
out
test
